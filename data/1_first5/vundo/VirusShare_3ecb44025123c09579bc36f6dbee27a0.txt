mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
lldt
in
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
push
call
mov
mov
movzbl
sub
je
incl
call
call
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
repnz
sbb
jae
fdivrl
sub
pop
lods
dec
mov
push
in
push
std
decb
into
cmp
sahf
insl
mov
jle
outsb
mov
mov
push
std
lahf
out
sbb
mov
orl
xor
dec
into
ds
mov
pop
mov
xchg
jno
movsl
pop
mov
std
jp
imul
or
xorb
inc
dec
scas
mov
subl
lods
ror
push
dec
in
xorl
out
fnstenv
mov
gs
add
sbb
mov
outsb
in
push
fnstsw
push
in
dec
out
or
cltd
dec
mov
xor
jmp
mov
int3
outsb
and
sbb
cmc
jle,pt
mov
sbb
fidivrs
fldt
mov
dec
cld
lar
int
mov
jl
pop
ficoms
sub
sahf
cmc
mov
int3
mov
jns
or
into
aaa
mov
mov
std
jle
outsb
pop
pop
mov
cs
mov
outsb
cmpsl
adc
add
sbb
or
pop
fnstenv
aam
mov
dec
pushf
fwait
dec
mov
mov
outsb
out
fcoml
sbb
aas
lret
pop
enter
popf
inc
xchg
jb
jnp
fwait
pop
out
pop
mov
mov
pop
sahf
insl
mov
lea
pop
lods
dec
mov
push
in
push
std
decb
into
cmp
sahf
insl
mov
lea
pop
lods
dec
mov
push
in
push
std
decb
loope
inc
aam
dec
rcrb
and
data16
pushf
cmp
insl
outsb
loope
mov
add
test
aaa
ljmp
sub
outsb
lahf
pop
outsb
popf
lret
xchg
inc
int3
mov
sub
outsb
les
jno
inc
rorb
out
mov
xchg
aas
jl
int3
pop
pop
xor
sub
pop
mov
aas
rcll
jg
jle
divb
adc
xor
mov
push
push
sbb
xchg
add
add
outsb
sub
xor
aam
aas
jne
sub
mov
mov
xor
mov
hlt
and
push
pop
add
testl
dec
push
mov
shrl
cmp
loop
cmp
mov
inc
rorb
push
jg
pop
mov
das
mov
sti
shlb
jbe
jp
and
dec
or
pusha
adc
loop
dec
rorb
ficomps
mov
int
or
lahf
xor
lea
aaa
jmp
jp
pop
pop
add
cmp
fmul
cld
xchg
dec
aam
pop
cmp
fwait
in
scas
leave
mov
sub
repnz
push
jl
jne
pop
mov
push
push
cmp
cmp
fisubrs
mov
lock
ja
shll
lret
push
xchg
mov
cltd
push
xchg
jmp
int3
aad
xchg
jg
ljmp
cli
nop
inc
divb
pop
cltd
jl
add
dec
sbb
cmp
pop
adc
ret
or
jae
shll
imul
xor
lret
mov
xchg
cmp
shl
jl
cmc
idivl
gs
adc
stc
dec
out
and
les
push
addr16
push
fildll
in
xchg
xchg
fdivrp
movsl
ror
xchg
jnp
xchg
aam
cs
xor
fbld
and
mul
jle
inc
jns
cmp
adc
jbe
movsl
jecxz
mov
adc
mov
mov
mov
xchg
inc
and
data16
adc
pop
dec
cmp
insl
dec
mov
mov
pop
adc
lahf
jle
dec
sub
mov
popa
movsb
mov
cli
sbb
dec
imul
sub
push
ret
push
sarb
out
mov
inc
out
in
mov
push
in
fwait
lret
sub
shrl
das
je
jl
xor
mov
and
in
xor
into
into
add
xor
pop
cmp
jle
xchg
repnz
jp
mov
mov
scas
sub
lret
in
inc
push
popa
xchg
inc
inc
mov
adc
pop
and
mov
loope
into
cmp
mov
nop
pop
jp
fldt
lret
gs
jo
aam
inc
jp
dec
js
insl
sub
lds
add
xchg
aam
sub
inc
in
jecxz
dec
dec
xchg
jecxz
fnsave
scas
push
in
loope
lret
jbe
sti
dec
pushf
xchg
movsb
out
cmpsl
aaa
popa
andb
roll
xor
mov
in
xor
sti
sbb
jmp
icebp
mov
ffree
loopne
cltd
popf
push
xor
nop
sbb
fistl
lcall
jbe
ret
out
sub
push
out
out
mov
fidivl
pusha
ud2
add
xor
xchg
and
icebp
cli
and
ret
dec
aam
push
add
shrl
fwait
dec
adc
xor
imul
add
mov
lret
dec
cmp
stc
repnz
push
sti
cltd
xlat
stc
pop
or
lcall
mov
fcmovu
dec
push
xchg
push
cltd
jge
xor
jb
or
jb
lret
xlat
jnp
stos
mov
jl
adc
loop
jmp
mov
daa
data16
mov
cmpsl
cmpb
shlb
in
lret
mov
xor
jl
hlt
aas
xchg
inc
imul
in
in
fdivrp
sbb
dec
scas
add
push
or
insb
sti
testl
jp
in
repnz
loop
addb
jbe
cs
cmpb
lret
dec
add
pop
mov
sbb
test
stos
sbb
push
jbe
dec
xor
ds
sub
jge
push
sub
outsb
std
jge
les
sub
or
sbb
aam
mov
sbb
je
pusha
arpl
imul
nop
and
fcoms
outsb
push
stos
cmpsb
fwait
push
popa
ret
fwait
adc
adc
inc
and
sub
les
xchg
outsl
add
xor
inc
inc
in
int3
in
jnp
xor
repz
sub
orl
dec
out
into
gs
rorl
sub
adc
and
mov
fsubrl
cltd
pusha
das
xor
sbbb
xorb
jae
xor
out
sbb
test
inc
xor
xor
xchg
clc
mov
jne
test
cmp
and
mov
cmc
and
fidivrl
xchg
xchg
pop
and
js
pop
clc
push
xor
cwtl
lea
pop
jae
out
inc
dec
add
daa
mov
dec
stc
push
jb
xchg
nop
push
push
fs
or
jbe
shl
or
daa
xor
sbb
cmpsb
daa
jne
int
jno
ss
pop
xor
mov
lock
add
ds
push
adc
lcall
push
and
decb
jbe
idivl
cmc
dec
dec
or
int
mov
adc
mov
sub
push
sbb
ret
arpl
or
mov
and
mov
loope
push
or
and
mov
stos
mov
cmpsb
test
and
rclb
xor
xor
and
add
dec
mov
add
pop
or
orb
mov
mov
out
and
imul
das
jno
lods
enter
mov
xchg
pop
aam
mov
jl
sub
mov
push
mov
mov
lsl
dec
cmpb
dec
mov
inc
insl
jb
or
rolb
aad
jnp
push
cmp
andl
and
repz
aaa
jp
mov
jo
push
adc
xchg
fwait
cmp
inc
clc
dec
cmp
xchg
sbb
ret
mov
iret
jns
dec
jmp
in
mov
xchg
js
es
jns
shrb
fadds
push
mov
cmpl
mov
mov
inc
mov
and
pop
mov
inc
aas
cs
cmp
ret
repnz
jo
scas
mov
push
lcall
push
add
pop
inc
jp
xchg
sbb
mov
out
sbb
es
push
stos
mov
pop
sbb
push
sbb
cltd
dec
or
pop
push
xchg
xlat
outsl
pop
or
mov
loop
pusha
test
jl
je
test
mov
andb
xor
mov
es
dec
push
bound
inc
stos
cmp
clc
daa
imul
out
lcall
or
dec
inc
dec
loop
cmp
dec
dec
pop
dec
mov
jo
gs
aas
mov
inc
push
dec
jmp
int3
lds
lea
scas
adc
xchg
pop
sbb
out
das
shll
repz
adc
fdivrp
xchg
xchg
lret
in
sarl
loop
mov
icebp
das
ret
or
cmpsl
push
fwait
and
into
cmp
jge
insl
jmp
push
out
pushf
nop
xor
mov
mov
shlb
push
nop
ret
jo
int3
xorl
jmp
outsb
mov
push
lcall
push
xor
je
in
cmp
jb
adc
xor
hlt
ja
clc
bound
mov
cmp
push
mov
pop
inc
sbb
sub
lea
lahf
repnz
add
lea
pop
das
test
inc
adc
fwait
adc
nop
cld
jecxz
ljmp
mov
pop
subps
in
lret
es
pop
repnz
inc
sbb
push
into
sbb
xor
lods
jns
xchg
popa
enter
dec
cs
stos
sub
and
les
mov
iret
in
adc
sub
insl
dec
jns
mov
adc
mov
cli
pop
sti
add
pop
test
sbb
and
fwait
or
pop
mov
and
repz
cli
ljmp
pop
jle
sbb
cmp
push
clc
and
adc
jnp
ljmp
fbld
jb
jbe
jo
mov
je
pop
nop
movsl
sbb
sbb
loopne
test
xlat
lea
jae
sub
rol
stos
movsb
pop
push
inc
repz
adcl
pop
dec
popf
pusha
sti
enter
add
add
pusha
adc
sub
iret
xor
clc
mov
int
dec
adc
jmp
ljmp
mov
add
daa
mov
aaa
into
pop
pop
dec
or
sar
test
jmp
cld
fstpt
scas
jle
cltd
cmpsl
das
xor
add
imul
fistpll
aad
xchg
xor
lret
or
mov
dec
pop
inc
sbb
pop
inc
pop
scas
int3
adc
dec
cmp
lock
mov
pushf
fs
mull
xor
je
mov
addb
fwait
mov
fsubrp
nop
mov
outsb
jp
mov
xchg
sub
rol
and
jp
sbb
call
test
orl
mov
shll
test
out
icebp
and
push
and
jb
jmp
push
dec
inc
inc
and
mov
lcall
pop
sub
push
mov
add
shll
mov
sbbl
dec
push
mov
mov
ficompl
in
ret
icebp
lock
loope
push
mov
jg
aaa
push
sbb
popa
sti
int3
mov
dec
ret
imul
sub
mov
add
mov
mov
out
push
notb
cmpsb
movsb
pop
je
hlt
lea
out
fldt
mov
jl
inc
movsl
sahf
mov
xchg
dec
pop
addl
or
fisttpll
int
fwait
mov
sarl
mov
xor
push
mov
movsb
push
cmp
repz
mov
sti
pop
jl
sbb
test
push
ret
shl
in
call
cmp
adc
xchg
sub
inc
fists
scas
xchg
jle
std
sbb
mov
mov
cs
iret
xor
pop
rcl
jbe
fmull
nop
jl
cmp
adc
xchg
push
movsb
fcmovne
jmp
jbe
inc
xchg
int
xor
jmp
push
pop
rclb
pushf
add
xchg
sub
push
sbb
std
cmovae
and
frndint
xlat
sbb
jne
mov
pop
not
es
clc
push
je
cltd
push
cmpsl
xchg
cmc
pop
or
add
das
dec
xor
xor
insl
stc
dec
xchg
js
jmp
mov
movntq
mov
gs
mov
scas
scas
pop
repnz
pop
sbb
pop
outsb
add
ret
out
aad
xchg
fwait
jmp
lock
pop
sti
mov
sub
cmp
push
dec
mov
mov
mov
cmpsb
dec
imul
cmp
xchg
out
inc
imul
push
test
inc
cmpsl
cld
pop
add
and
icebp
outsb
cmpsl
shrl
test
je
jb
push
testb
add
jnp
addr16
xchg
mov
mov
fmul
mov
scas
cmp
dec
stos
or
mov
test
sub
xchg
fcompl
jae
pop
aam
push
dec
mov
cmp
movsb
clc
pusha
notl
jge
fists
jp
mov
pop
mov
or
or
je
mov
mov
sbb
int3
jo
sub
push
std
push
fisubrs
push
scas
test
fmull
adc
sarb
inc
sarb
mov
and
out
outsb
xor
adc
add
sbb
lret
js
mov
mov
cmp
or
cmpsb
cmp
jp
sbb
push
adc
jecxz
xchg
push
jnp
jo
dec
enter
push
add
imul
mov
lret
movsb
in
mov
jns
pushw
or
xor
rorl
arpl
dec
sti
jbe
lret
int
adc
cwtl
lret
aas
and
cmp
lds
mov
bound
adc
fildll
inc
adc
dec
inc
imul
cmp
or
out
js
scas
push
sub
int
adc
fmull
dec
pop
sbb
mov
outsb
loopne
sub
mov
adc
fdiv
push
lods
es
daa
pop
cmp
sub
fstpl
dec
out
adc
push
fstpl
push
subb
or
mov
arpl
mov
mov
imul
xchg
mov
out
pop
lods
and
mov
adc
pop
fsts
push
sub
jbe
cwtl
pop
fidivl
pop
test
jg
cmp
fidivrs
cmp
leave
lcall
jl
loopne
clc
not
iret
inc
push
or
mov
and
iret
or
div
test
dec
fldcw
mov
sub
lcall
mov
addr16
sbb
ss
or
rcl
mov
scas
add
mov
pop
push
mov
jns
into
pop
iret
jecxz
clc
je
and
add
add
stos
lcall
push
adc
in
jle
push
sub
mov
jge
jnp
fcomps
sbb
fldcw
adc
jno
jno
and
and
test
fsts
inc
ret
sub
das
loop
mov
fsubrl
fwait
mov
sub
sub
and
and
dec
loope
add
cli
mov
pop
xchg
sbb
xor
xor
push
std
sti
xchg
movsl
outsb
dec
xchg
jns
xchg
push
pop
mov
sub
sub
xchg
movsl
aas
mov
stos
je
adc
xor
mov
insl
mov
or
adc
jecxz
xchg
xchg
and
call
popf
lock
loop
pop
jbe
enter
or
pop
cltd
dec
cltd
insl
cmp
jge
in
movsl
jle
pop
scas
xchg
mov
popf
push
mov
xor
shrb
es
ror
out
mov
push
bound
mov
imul
inc
sbb
xor
push
sarl
xchg
test
roll
imulb
push
jo
cmp
daa
mov
jne
in
jp
push
das
mov
popa
stc
jns
imul
aaa
pop
ds
sahf
xchg
or
xchg
add
jo
out
mov
cli
aas
subb
jecxz
js
mulb
pop
popf
insl
mov
stos
das
imul
xor
std
dec
xchg
fiaddl
repnz
inc
or
cmp
xor
mov
inc
scas
pop
add
adc
inc
or
idiv
adc
mov
sbb
sbb
xlat
push
cld
mov
mov
fdivl
pop
scas
sub
addr16
sub
add
xlat
mov
sub
movsb
add
xchg
or
lods
sbb
ja
rcl
cmpsl
mov
call
faddl
scas
sub
js
xchg
xchg
xlat
fldpi
pop
daa
dec
lds
mov
adc
es
xchg
lock
cli
fucomi
inc
gs
imul
adc
push
shll
inc
popa
xchg
ret
pop
add
lods
dec
xchg
inc
movsl
cmpl
popa
scas
adc
ss
test
and
pop
mov
push
pop
outsb
rcll
pusha
dec
mov
and
xchg
mov
fistpll
enter
inc
test
mov
inc
xor
sahf
idivb
repnz
sti
mov
cmpsb
push
add
add
lods
scas
daa
fs
lock
insl
dec
aaa
rcrb
adc
xchg
xlat
divl
sbb
in
mov
imul
sbb
xchg
xorb
add
inc
repz
call
popf
les
repnz
jg
mov
mov
sub
dec
jo
cmp
add
or
xchg
xchg
test
pop
adc
scas
xchg
in
or
and
mov
jp
shll
popf
std
jnp
mov
pop
lods
sbbl
inc
imul
xchg
cmpsb
lea
jg
scas
lret
arpl
xchg
mov
insl
movsb
popf
or
outsl
mov
xchg
out
imul
pop
sub
int
jmp
pop
xchg
clc
cld
xor
orl
add
loop
cmpsl
adc
lds
push
mov
scas
xor
cli
sub
aam
sbb
loop
jnp
inc
das
insl
jmp
repnz
mov
gs
cld
dec
sub
mov
cmp
mov
xchg
or
and
cmc
negl
ds
jl
adc
loope
add
and
ds
shlb
jg
xchg
cltd
insb
in
push
xchg
pop
sub
outsb
dec
mov
aad
rcr
jmp
mov
mov
pop
sbb
add
sub
mov
or
adc
lods
inc
clc
xchg
inc
dec
mov
lcall
push
mov
jge
rcl
xor
out
jns
fiadds
test
dec
sub
aaa
add
cmp
int
cmp
jle
xor
add
jge
cltd
fmull
lcall
jbe
ljmp
add
add
push
push
aam
imul
stos
push
sub
xchg
push
dec
sbbl
sbb
xchg
mov
jge
decb
std
aaa
inc
add
clc
pop
fidivl
jmp
add
cmp
in
mov
dec
and
sbb
in
std
jmp
xchg
or
mov
pop
mov
divl
shll
push
xchg
pop
push
mov
ljmp
aad
popa
mov
movsb
repnz
or
out
mov
test
mov
das
xorl
fists
jb
pop
dec
add
iret
xor
dec
lds
pop
push
lea
lods
enter
stos
mulb
int
dec
xor
fbld
into
les
lods
xor
dec
ret
in
push
test
mov
push
sahf
sbb
mov
in
icebp
xchg
clc
or
add
lret
mov
ljmp
add
xchg
test
mov
scas
mov
jge
stos
outsl
cs
push
lods
xor
mov
stc
leave
sub
cltd
out
leave
icebp
push
bound
cltd
or
pushf
add
xchg
fldt
xor
and
test
and
pop
lcall
sbb
jae
xchg
cmpsl
cld
xchg
adc
sbbl
and
mov
in
rcrb
mov
into
call
sub
sub
add
lcall
enter
jnp
fidivrl
in
lea
fwait
mov
into
movsl
mov
lea
into
push
push
push
or
sbb
adcl
sub
daa
in
es
xor
jl
jmp
sbb
cli
inc
adc
roll
or
pushl
pop
dec
jecxz
jae
insl
fldenv
mov
cmp
rorl
loopne
add
iret
xchg
mov
jae
lea
and
push
icebp
movsb
gs
out
stos
movsl
or
xchg
dec
js
shl
scas
setbe
dec
jge
dec
and
mov
gs
je
or
int3
aas
stos
aas
cmp
je
clc
lcall
addr16
orl
aas
lret
int3
fwait
lahf
stos
sub
dec
cmp
mov
lret
add
shrb
stos
daa
jp
pop
icebp
pop
in
jl
xor
andb
add
xlat
inc
cmp
pop
dec
push
sbb
fstps
mov
in
cmpsl
ret
insb
idiv
push
sbb
cwtl
mov
sub
xor
in
in
push
stos
std
fisubs
aaa
mov
inc
rolb
adcb
mov
adc
aas
inc
mov
test
or
lcall
fucomp
loope
fwait
inc
xchg
ret
mov
jle
jnp
out
or
inc
add
sti
popf
jb
pop
lcall
cmc
inc
jnp
add
xchg
daa
push
mov
int3
inc
iret
scas
ret
xlat
pop
insb
test
mov
lcall
icebp
or
mov
dec
push
mov
mov
cs
and
mov
push
mov
add
testl
pop
jae
ret
popf
sarl
jle
add
fsubr
xchg
adc
dec
std
rcll
jne
xchg
sbb
mov
jb
xor
cmpsl
lret
clc
std
and
sbb
stc
movl
cmp
jbe
jne
cld
adc
mov
ja
xchg
push
push
imul
push
mov
mov
add
repz
rcr
mov
std
aas
jae
mov
cmp
sub
pop
inc
lahf
jg
notl
dec
imul
insl
out
negl
mov
mov
jle
or
mov
pop
into
mov
movsl
mov
test
insb
inc
je
pop
or
xchg
fwait
nop
inc
cmp
pop
adc
push
fisubs
adc
xchg
pop
stos
es
sbb
stos
sub
shlb
mov
add
pop
sbb
pop
push
jg
mov
or
xor
cmp
enter
iret
jne
pop
int3
outsl
mov
lock
das
test
mov
mov
mov
pop
and
in
sub
sbb
out
mov
cli
sub
jns
repz
arpl
fcompl
lods
xlat
xchg
inc
and
es
pop
aas
inc
call
pop
mov
cmp
push
rcrb
xchg
and
pop
add
xchg
sub
cli
ljmp
sub
pop
imul
or
xchg
fbld
mov
add
icebp
jo
frstor
lods
mov
decb
push
imul
inc
sub
xor
imul
addr16
les
scas
cli
outsl
fisttps
bound
out
sub
pop
xchg
out
lods
add
imul
and
cmp
jmp
dec
mov
loopne
jg
in
cmc
sub
pop
ret
hlt
das
add
fwait
lret
jmp
int
cli
inc
out
add
jo
push
mov
scas
popa
push
push
arpl
sbb
sub
filds
cmp
sahf
insl
mov
lea
pop
lods
dec
mov
push
in
push
std
decb
into
cmp
sahf
insl
mov
lea
pop
lods
dec
mov
push
in
push
std
decb
into
cmp
sahf
insl
push
jge
push
outsb
popf
pop
lods
dec
mov
push
int
std
decb
into
cmp
dec
scas
pop
sahf
in
mov
jb
aaa
hlt
lods
dec
lret
pop
and
jle
int3
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
sarl
icebp
pop
loope
cwtl
test
inc
les
or
leave
inc
in
jno
popa
fcoml
mov
and
pop
loope
xchg
cmp
cmp
sbb
js
lock
in
jno
popa
int3
adc
add
shll
jne
inc
loope
xchg
and
mov
iret
add
jb
jb
dec
jecxz
xor
sub
ljmp
jecxz
es
jnp
iretw
pushf
inc
mov
fldenv
cmc
cmp
push
sbb
xchg
dec
sbb
in
add
adc
faddl
repnz
jo
loopne,pn
pop
fwait
outsl
test
les
push
out
cld
push
in
popa
mov
xor
sbb
leave
shll
out
xor
jle
call
sbb
adc
addb
leave
arpl
xchg
je
sbb
outsb
cld
mov
fs
add
cld
and
jne
mov
and
in
cmpl
lret
movsb
push
mov
sbb
add
andl
push
dec
negb
sarl
dec
xchg
cmp
sub
sbb
adc
jno
popa
aad
movsb
add
jl
push
mov
cmpsl
sub
ds
dec
fidivs
imul
fsubs
xchg
flds
push
repz
loopne
adc
mov
hlt
push
mov
popa
into
out
lods
pop
sti
dec
clc
mov
shrl
or
jno
or
cld
inc
in
jno
popa
int3
adc
mov
jl
insb
icebp
pop
loope
xchg
cmp
sub
sbb
or
cld
inc
in
jno
popa
int3
adc
mov
jl
jg
fistpl
shrl
jo
aas
sahf
add
scas
pop
mov
xchg
adc
pop
mov
and
jle
fs
sub
fisttpl
sub
scas
cmpb
inc
sahf
mov
jmp
sub
loope
adc
and
jo
mov
test
sbb
xor
sahf
lock
ja
fldt
pop
add
jb
stc
and
shrl
push
je
xchg
nop
pop
mov
ret
xor
push
test
or
lcall
fidivrl
push
sti
xor
in
xor
fbstp
push
rcrb
sbb
and
pop
sub
cmp
mov
js
outsb
jnp
cmp
or
add
and
or
dec
int
xchg
mov
add
adc
in
out
adc
dec
xlat
push
jnp
sbb
mov
pop
sbb
loopne
js
in
and
inc
jg
daa
pop
inc
sub
or
mov
jmp
aam
mov
roll
icebp
cltd
dec
mov
mov
test
daa
insb
jg
pushf
xchg
dec
out
fists
mull
jmp
xchg
movsl
pop
xchg
add
xchg
inc
push
adc
imul
call
mov
out
and
jb
xchg
cltd
and
pop
je
push
inc
push
cmp
and
mov
test
and
dec
xchg
mov
jmp
mov
mov
std
mov
mov
inc
mov
add
cmp
in
and
and
dec
mov
repnz
push
push
xchg
idiv
cmp
or
sub
jl
cwtl
jnp
push
pop
jg
pop
pop
aam
fcmovnu
int3
push
roll
adc
sar
fwait
cmp
lds
jmp
aas
cli
mov
mov
imul
jo
lret
in
or
testl
jo
divl
sub
outsb
imul
cmp
and
adc
xlat
dec
and
das
lahf
or
aaa
mov
aas
andl
andb
scas
inc
dec
inc
xchg
add
inc
rorb
sbb
repz
rorl
xchg
xchg
jne
push
pop
cmp
mov
push
mov
jmp
jno
adc
push
loop
sbb
mov
pop
pusha
xchg
gs
fucomip
and
pop
scas
xchg
push
cmp
or
jle
mov
add
or
push
fisttps
bound
inc
mov
mov
add
mov
andb
mov
mov
xchg
and
leave
std
sbb
adc
sti
mov
push
cmp
inc
out
outsl
lcall
stos
dec
cltd
shl
stc
dec
xor
in
icebp
adc
jo
data16
outsl
mov
lea
rcll
mov
or
push
fbstp
push
add
js
inc
jns
lods
pop
cmp
inc
jnp
pushf
lods
imul
push
xor
add
and
arpl
pushf
cmp
xchg
fprem1
pop
cs
dec
frstor
loop
push
sbb
adc
in
inc
ljmp
mov
and
cltd
and
jbe
jge
mul
in
adc
lock
adc
xor
fsts
mov
adc
pop
test
rcr
mov
sbb
stos
mov
and
push
rolb
xchg
aad
xchg
or
scas
ja
add
jnp
test
es
cwtl
and
aad
out
dec
das
jbe
fcompl
cmp
test
popa
cmp
inc
lcall
mov
sub
aad
mov
ret
mov
xor
push
pushf
sbb
sub
and
pop
push
rcr
repnz
int3
mov
hlt
pop
dec
daa
xor
mov
repnz
push
fiaddl
jo
pushf
je
push
jae
loope
push
mov
ljmp
clc
adc
bound
jmp
cmpsb
jno
sbb
jecxz
inc
or
ljmp
stos
sbb
stos
sbb
lods
fimuls
gs
test
jnp
jb
xchg
or
shlb
dec
mov
andb
aaa
jp
xchg
out
fisttpll
fistps
iret
loopne
repz
ret
ja
fmuls
fbld
les
hlt
rol
cmp
sahf
inc
jo
xor
daa
in
pop
dec
out
cmp
subb
jno
lods
cmc
adcb
dec
test
imul
cmp
negb
mov
pop
jne
ljmp
mov
pushl
inc
sbb
dec
xchg
adc
popl
ljmp
mov
test
jb
shll
lret
ret
loop
pop
lret
sbb
nop
arpl
sub
repz
mov
loop
mov
aad
add
cmp
dec
loope
ss
fdiv
ljmp
fcompl
cmp
arpl
in
pop
ljmp
dec
mov
sbb
sub
loop
jg
js
inc
test
or
fwait
movsb
sbbb
sti
push
roll
fsts
sbb
fimuls
orl
pop
cmpl
mov
pop
add
mov
push
jecxz
mov
les
dec
sub
movsl
in
repz
out
ret
adc
insl
cmp
loopne
nop
enter
and
sbb
jae
lcall
scas
pop
mov
xor
cwtl
cwtl
movsb
out
or
fldcw
xchg
daa
fnsave
jno
test
mov
add
inc
lea
popa
loope
popf
mov
jp
outsb
push
cld
aad
je
dec
rorl
cli
push
test
imul
jp
cmp
xor
mov
add
cltd
daa
dec
sahf
inc
pop
jns
sbb
and
enter
sbb
adc
lcall
jns
dec
cmp
lcall
pop
ds
sbb
lahf
add
iret
xchg
xchg
in
jns
push
jle
adc
mov
adc
ds
pusha
js
ret
outsb
cwtl
sub
dec
andb
fisttpl
and
add
jbe
cmp
pop
fisttpl
divl
xor
jbe
sbb
mov
mov
scas
add
arpl
imul
dec
mov
add
cmpsl
adc
aas
sbbl
pop
pop
cmp
imul
mov
or
mov
iret
out
fstps
add
aad
sbb
aad
sbb
adc
ds
mov
jae
xchg
cmp
jne
mov
inc
dec
dec
dec
mov
inc
pop
xor
mov
out
fld
inc
mov
frstor
and
mov
and
add
jge
clc
popf
hlt
pusha
lcall
xchg
adc
outsb
sbb
out
es
dec
lock
pushf
adc
scas
dec
stos
mov
jl
unpckhps
mov
sub
in
cmp
jno
cltd
in
dec
cmp
insb
xchg
mov
add
imul
adc
push
or
and
leave
das
xor
movsl
pop
sbb
dec
adcl
cmpsl
sbb
jbe
pop
cmpsb
dec
pop
xchg
inc
mov
or
xor
pop
xchg
adc
std
mov
sbb
and
and
fsubs
xor
sbb
insl
cli
mov
inc
push
lahf
fimull
int3
pop
jno
jae
push
in
fldt
cmp
imul
nop
or
adc
mov
sbb
sbb
pop
ret
mov
test
or
lcall
shl
mov
or
or
insb
loop
and
push
adc
push
les
adc
in
data16
sbb
cli
das
gs
push
ljmp
jmp
jbe
je
les
dec
sbb
leave
xchg
int3
mov
push
xor
pushf
arpl
outsb
aam
xor
cli
push
mov
mov
fs
div
aas
and
sub
mov
adc
mov
jno
dec
pop
xchg
aad
cltd
shlb
pop
xchg
mov
adc
adc
aad
xor
bound
stos
inc
mov
movsl
and
in
insl
jmp
lret
sbb
cltd
int3
popa
popf
out
inc
mov
inc
add
mov
icebp
call
mov
push
xor
and
andb
xor
das
mov
pop
xchg
pmulhuw
jecxz
scas
shlb
std
shrl
aad
loop
or
aas
leave
cmpsb
lcall
aaa
popf
pop
pop
mov
ljmp
cld
jge
jge
repz
sub
pop
sti
adc
mov
pop
dec
cld
sbb
dec
cmp
out
mov
mov
and
pusha
push
push
sahf
xor
out
push
cmc
sbb
fiaddl
and
cmc
sub
inc
push
repz
push
and
cmc
rcrl
mov
mov
dec
sbb
inc
and
std
fs
and
jg
xchg
std
sub
jnp
fdivrp
xchg
adc
ret
pop
add
sub
scas
push
in
push
pop
fs
add
in
pusha
ret
data16
hlt
aam
pshufw
jbe
jnp
jbe
daa
stos
or
arpl
out
cld
pop
inc
ret
add
pop
movsb
loop
ret
cwtl
out
and
xchg
and
mov
icebp
out
lds
fdivrs
aaa
cmp
sbbl
or
pop
mov
scas
pop
or
cmpsl
sub
enter
les
shrb
mov
or
ret
out
ss
cmp
mov
jp
mov
cmpsl
xchg
fs
push
arpl
test
out
inc
jb
dec
pusha
fdivs
adc
and
fsub
out
sub
pop
push
ljmp
decl
pop
cmp
outsb
sbb
pop
dec
mov
les
mov
stos
mov
mov
or
push
out
jge
mov
ret
in
enter
fxch
shll
into
pop
xor
ja
jg
fsubl
jns
mov
jl
pop
and
loop
sub
les
lret
mov
push
and
in
orl
inc
mov
jecxz
sbb
or
mov
jns
stc
inc
dec
jge
divb
ss
idivb
adc
dec
xchg
and
test
push
movsl
insb
mov
push
jg
lods
xchg
nop
lcall
mov
xchg
rorl
jae
cmp
mov
xor
mov
pop
mov
mov
into
dec
mov
adc
pop
inc
sti
dec
xchg
mov
in
ss
xor
mov
in
in
add
lds
sub
rcl
sub
mov
popf
adc
jle
and
mov
mov
pop
lcall
dec
es
jg
jns
pusha
add
pop
ret
pop
ret
sub
addl
sub
cld
push
je
and
addr16
dec
mov
sub
add
std
addr16
mov
and
mov
loope
fistps
jmp
jg
mov
jecxz
and
cmp
mov
pop
ror
xchg
add
int3
inc
cli
or
cmp
push
inc
and
sar
lret
movsl
jg
add
out
testl
sbb
mov
lret
jae
sbb
fwait
push
add
insl
ficomps
lock
dec
sbb
rorb
mov
aas
cmp
adc
les
cld
inc
scas
jnp
mov
ja
iret
loope
scas
or
je
adcb
out
inc
jg
jns
test
imul
push
or
push
clc
sub
stos
out
cltd
test
lds
adc
pop
lret
jle
in
jecxz
pop
pop
xchg
sub
inc
lods
push
or
cld
add
enter
rol
pusha
inc
push
ficompl
out
imul
test
movsb
jo
mov
sbb
cmpsb
movsb
xor
in
mov
sub
cmp
hlt
mov
cmpsl
jle
lds
push
sahf
xchg
inc
adc
and
cli
dec
wrmsr
jp
add
pop
mov
insl
test
call
cltd
sub
cwtl
sub
xlat
out
sub
or
lods
clc
dec
repnz
icebp
jmp
mov
stos
aaa
outsl
mov
mov
push
ret
daa
sbb
pop
mov
adc
loopne
dec
mov
jnp
pop
inc
adc
adc
int3
adc
sbb
aam
sub
mov
in
jl
or
jne
pop
aam
jbe
ds
or
xor
push
ror
cmp
loop
push
decl
pop
imul
gs
mov
mov
xchg
scas
jnp
mov
lcall
mov
repnz
aaa
mov
popa
loop
mov
or
cmc
test
rcr
xor
inc
js
pop
or
mov
cmp
mov
fidivs
inc
int
push
sbb
je
lods
sbb
cltd
add
mov
out
es
ficompl
testb
roll
lds
mov
call
xchg
imul
nop
mov
mov
xor
lcall
popf
lods
add
hlt
dec
fs
testl
mov
mov
sbb
sub
mov
adc
dec
cwtl
mov
in
pushf
test
fs
xchg
lods
and
call
outsl
mov
and
fidivs
dec
inc
push
sbb
or
loope
cli
mov
lods
out
mov
pushf
or
lea
and
push
adc
lret
adcb
movsb
lock
xchg
jo
int3
inc
sbb
mov
gs
sbb
sbb
mov
pop
push
mov
stos
cmp
sub
adc
and
xchg
mov
fmuls
sbb
arpl
std
lds
mov
and
fcompl
int
add
mov
adc
adcb
or
outsl
or
call
jecxz
or
sbb
push
dec
test
pop
stc
sub
faddl
ljmp
and
mov
jb
mov
inc
dec
xchg
daa
movsb
xor
sbb
jne
jns
pop
sbb
mov
sbb
jmp
or
dec
in
mov
insl
adc
jb
pop
fildll
sbb
sub
cwtl
mov
lock
std
insb
cwtl
jne
fstps
mov
jb
jg
je
mov
out
rolb
lods
int3
leave
and
mov
movsl
mov
nop
dec
stc
or
das
push
aas
sbb
call
lcall
mov
jns
ret
dec
mov
int
shl
cmp
dec
or
fwait
daa
mov
mov
cmp
mov
cwtl
fcomps
hlt
xor
dec
pop
ret
insb
ss
clc
fs
jns
mov
adc
lahf
lds
mov
mov
cmp
adc
xor
mov
dec
pop
push
lret
sarl
test
sbb
jp
push
cmp
dec
inc
imul
mov
xor
cmp
xor
push
stos
push
fyl2x
mov
insl
jmp
rorl
stc
les
ficoms
sub
push
jg
inc
aaa
scas
rolb
lcall
sub
mov
data16
movsl
mov
adc
lret
fcomip
mov
ret
xchg
lahf
xchg
ret
xchg
stos
nop
test
int3
or
cld
mov
aaa
loop
imul
inc
jae,pt
ja
repnz
ljmp
mov
xchg
repz
cltd
imul
xor
mov
push
je
cmp
cmp
dec
push
dec
push
dec
andps
add
cmp
rcrl
dec
or
rcrl
gs
leave
mov
inc
add
rcll
repnz
iret
sbb
movsb
xor
fwait
stc
add
push
div
ja
mov
cld
int
cmp
ss
cmpsb
in
xlat
sbb
movsl
pop
adc
aam
xor
out
jnp
sub
ss
mov
xchg
out
fisttpll
mov
arpl
push
sbb
movsb
loope
xchg
ljmp
and
and
insb
mov
jnp
ljmp
negb
jnp
inc
rorl
adc
je
sbb
jp
int
pop
cmc
pusha
add
subl
xchg
add
fcoms
push
xchg
mov
cltd
xchg
adc
clc
in
cmp
push
icebp
xchg
pop
ja
or
flds
sbb
cltd
cld
mov
cld
subl
insb
adc
sarb
mov
ret
mov
js
xor
ds
loope
dec
mov
jmp
jne
mov
add
inc
scas
sahf
inc
jno
inc
push
sbb
mov
loop
dec
cmp
fwait
decb
xchg
push
pop
out
hlt
shl
pop
mov
and
call
pop
mov
inc
adc
insb
stc
in
inc
sbb
add
fcomps
icebp
rorb
call
or
imul
xchg
leave
stc
bound
iret
movsl
sub
or
out
iret
cmpsb
repz
mov
jnp
xchg
mov
out
repnz
and
in
cmp
jecxz
xchg
pop
pop
push
popf
xor
lock
jg
aam
fwait
jge
mov
sbb
jbe
xor
cmp
mov
or
cmp
push
jecxz
lcall
dec
cmp
and
mov
ja
push
test
sub
shrl
imul
outsb
lret
bound
xchg
xor
out
mov
test
addr16
xor
push
mov
pop
mov
cltd
mov
and
ficomps
sbbb
outsb
adc
icebp
data16
mov
dec
push
push
push
sbb
xchg
scas
shl
add
xlat
mov
jns
sub
pop
rcrl
jae
insl
into
xor
stos
sti
or
mov
fldt
sbb
mov
ds
test
stc
cmp
sti
push
and
aam
rcrb
into
mov
addr16
add
mov
scas
sbb
repz
fwait
sub
rolb
mov
les
iret
add
pop
jmp
out
push
test
push
je
mov
push
in
xor
sbb
jmp
div
inc
stos
fistl
in
insb
or
cmp
pop
xor
insb
in
lds
xchg
lret
jo
popf
dec
or
or
adc
call
dec
xchg
lahf
fisttpl
enter
cmp
mov
dec
arpl
and
bound
lcall
pop
jae
out
pop
gs
lret
sbb
sub
dec
test
jae
addr16
lock
movsb
pop
adc
sbb
rcll
repnz
push
xor
decl
push
mov
arpl
jle
icebp
pop
xor
pop
pop
std
jg
or
imulb
adc
rcl
xchg
int3
cmp
or
mov
jno
xchg
jp
aad
fs
ret
shrd
aad
lea
lods
nop
outsb
cld
mov
cli
jnp
iret
push
and
lret
dec
jno
mov
in
notb
xor
sbb
insl
insl
ss
dec
outsb
sarb
loopne
xchg
out
dec
xor
xlat
push
and
aas
push
dec
std
mov
int3
push
inc
ds
xchg
cmpsl
repz
xor
unpckhps
jbe
rclb
sbb
xor
leave
nop
push
dec
pushf
sbb
or
out
test
pop
sbb
iret
call
jge
xchg
cmpsb
xlat
pop
daa
test
loope
sbbb
push
repnz
fists
push
sub
test
pushf
dec
lds
and
iret
notl
jge
dec
popa
lahf
mov
aam
push
dec
adc
repnz
cmp
cwtl
jbe
aas
mov
leave
out
add
or
leave
cmpsb
pop
sub
outsb
cmp
inc
lea
pop
add
filds
pop
xchg
cmpsl
xchg
int
int3
jne
test
mov
jl
push
ret
jnp
int
and
bound
jb
in
sub
and
jae
popf
add
pop
xchg
loopne
pop
mov
mov
mov
cli
inc
mov
repz
inc
cmp
pushf
cmp
xchg
flds
xchg
lds
imul
pushf
push
incb
add
aaa
std
or
pop
push
xor
cmpb
mov
daa
pop
xlat
imul
push
pop
imul
jnp
dec
xchg
sbb
jecxz
out
shlb
push
jns
or
inc
push
adc
icebp
jecxz
loope
sahf
xor
jmp
add
loop
pop
leave
pop
mov
cmpsb
test
leave
pop
jb
xchg
jno
fdivrs
jo
pop
mov
mov
popf
add
sbbb
and
dec
outsl
scas
out
add
sahf
movsl
insl
test
xchg
add
lods
inc
lds
adc
andb
into
daa
or
add
mov
into
add
sbb
lea
ds
adc
xchg
mov
adcb
mov
cmp
mov
call
insb
fimuls
xchg
mov
ret
push
movsl
lea
mov
jge
push
push
inc
or
add
imul
call
push
pop
push
les
inc
pop
cmpsl
cmp
push
nop
jmp
cld
add
add
int
bound
mov
roll
inc
jae
pop
ss
mov
mov
rclb
cmpsb
movsb
insb
or
mov
push
lret
xor
sti
mov
inc
xchg
jmp
lods
scas
add
push
imul
add
fwait
lret
lcall
inc
pop
mov
out
roll
mov
jns
xlat
cmp
jo
jnp
inc
cld
sahf
sub
add
out
cmp
or
add
sbb
inc
adc
scas
cmp
xchg
mov
cmpsl
dec
mov
adc
or
inc
popf
sahf
andl
dec
dec
xor
inc
and
pop
aas
mov
cmpb
cld
dec
sub
fucomi
ljmp
mov
mov
adc
out
push
inc
scas
push
mov
dec
add
test
loopne
in
push
aad
inc
sbb
shl
push
outsl
or
aaa
lcall
fbld
icebp
adc
inc
insb
into
pop
loope
xchg
cmp
sub
sbb
or
cld
inc
in
jno
popa
int3
adc
mov
jl
insb
icebp
pop
loope
xchg
cmp
sub
sbb
or
cld
inc
in
jno
popa
int3
adc
mov
jl
insb
icebp
pop
loope
xchg
cmp
sub
sbb
or
cld
inc
in
jno
pusha
enter
lods
xor
shrl
loope
xchg
cmp
sub
sbb
int3
scas
cld
mov
mov
leave
jecxz
repz
int3
int3
int3
int3
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pop
cwtl
lahf
int3
scas
mov
ljmp
psubusb
pop
cs
sub
pop
pop
mov
pushf
lahf
mov
int3
out
cld
inc
nopl
or
xor
sub
jb
dec
outsl
jl
insb
cmp
fcmove
in
filds
sbb
das
dec
pop
pop
pop
sub
sub
adc
fcomps
leave
inc
sar
xor
mov
outsb
movl
hlt
daa
ficompl
push
into
leave
rolb
add
lock
mov
mov
mov
and
hlt
sahf
aad
in
pop
lret
xor
fs
mov
sbb
rcl
scas
lahf
mov
test
stos
dec
pushf
lahf
mov
enter
cmp
popa
pop
cltd
fldlg2
cs
xlat
sub
jg
jne
jb
pusha
jno
inc
stos
push
daa
out
xlat
int
cmp
push
jg
aas
fcompl
aaa
pop
ljmp
jae
leave
cmp
pop
aas
pop
mov
in
lock
leave
pop
pop
ljmp
outsb
nop
jle
rclb
lahf
lods
scas
enter
int3
out
cld
jle
sbb
movsb
das
ds
adc
pop
mov
sti
pushf
fninit
ret
shl
rorb
stos
addr16
lods
jl
cltd
pop
dec
cmp
adc
add
or
fcmovne
test
out
xchg
xchg
pop
jge
jns
outsb
pop
sbb
adc
aas
sbb
stc
out
mov
int3
rcrb
int3
out
cld
in
nopl
or
cmp
sub
pop
pop
dec
outsl
jl
insb
pushf
lahf
mov
int3
out
cld
in
nopl
or
cmp
sub
pop
pop
dec
outsl
jl
insb
pushf
lcall
mov
adc
subl
or
mov
vcmpss
pusha
pop
xor
push
mov
rorb
mov
out
mov
inc
sub
xor
or
mov
call
pop
mov
adc
jo
inc
dec
pop
test
in
aas
icebp
jne
sbb
mov
cmp
iret
in
pop
pop
fwait
ret
xor
mov
pop
inc
shrb
add
xchg
cmp
lods
push
outsb
push
mov
inc
sub
jmp
push
xchg
out
or
xchg
or
lds
ljmp
cmp
mov
xor
dec
jecxz
push
inc
push
fsub
mov
lahf
xchg
inc
lods
lods
cmp
mov
dec
push
push
pop
xchg
sub
in
clc
mov
nop
sbb
outsl
mov
sbb
adcb
add
test
dec
cmp
arpl
jo
lahf
mov
mov
andl
cwtl
jne
gs
xor
xlat
push
push
das
lcall
cmp
sbb
scas
cmpsl
push
lods
cmpxchg
lods
xchg
cmpsb
dec
scas
sahf
xor
pop
inc
cs
aam
inc
inc
dec
jmp
lds
pop
sbb
les
jns
cmp
fadds
imul
or
nop
test
mov
repz
adc
push
jb
fistpl
cmpsb
or
ljmp
and
add
rclb
add
movsb
inc
sub
cmp
jno
outsl
insb
and
js
in
cwtl
adc
fstl
cltd
in
cmp
push
out
outsl
adcl
mov
repnz
orb
leave
test
lods
pop
lret
push
in
mov
xor
roll
cwtl
sarl
xor
sub
pop
in
and
ret
int3
popa
arpl
and
sub
xchg
xor
jp
leave
dec
xchg
outsb
rorb
into
test
frstor
sbb
pop
mov
addr16
or
sbb
mov
adc
cld
fimull
xor
iret
sub
nop
adc
scas
push
jle
push
cltd
pop
push
pop
push
test
cmp
push
or
lea
cmc
xor
pushf
ss
leave
or
mov
movsb
and
mov
insl
cmp
jne
cmpl
mov
mov
movsl
mov
lea
lods
push
pushf
cmpsb
inc
inc
stc
pop
cmp
loopne
push
cli
inc
mov
movsl
lock
loopne
test
xor
stc
sbb
aam
jle
jbe
xor
std
sbb
xor
adc
bound
mov
xor
fists
aam
dec
sbb
mov
jo
push
or
mov
sbb
icebp
stos
jl
dec
xchg
js
les
ret
xchg
loop
int
push
test
outsl
sub
repz
mov
fnstcw
shlb
into
jo
test
ljmp
inc
loope
mov
xor
mov
ljmp
mov
dec
push
jle
je
push
mov
out
jo
inc
jb
shl
lock
xchg
and
dec
xor
mov
js
pop
sbb
xor
jae
daa
sbb
push
jb
jecxz
push
outsl
adc
stos
lret
push
xchg
dec
cltd
push
out
add
shll
mov
xchg
or
sti
in
jmp
jne
inc
out
mov
in
and
inc
jb
insl
inc
fldl2e
xchg
jbe
mov
dec
clc
inc
mov
mov
lret
out
ja
xlat
into
or
pusha
les
loope
fisubl
pusha
inc
cmp
loopne
mov
inc
aas
arpl
aas
fistl
jb
lock
mov
xchg
clc
loope
mov
xor
mov
daa
mov
inc
mov
and
test
xor
sbb
mov
jno
cld
inc
push
sub
es
fcmove
bound
or
test
ficomps
fcmovbe
cs
aas
cmp
and
scas
and
ret
fsubr
push
fimull
fs
fsubl
cltd
xchg
sub
ret
jg
cmp
notb
push
scas
and
cmpsl
mov
lods
push
sub
inc
stc
jge
jecxz
movsb
stc
stos
and
adc
add
mov
add
xor
xchg
push
jnp
divb
in
dec
mov
repnz
cmc
jle
es
fildl
mov
bnd
push
adcb
inc
add
jo
in
push
sti
cmp
inc
jnp
cmp
pusha
pop
mov
jg
clc
stos
push
lahf
dec
std
or
add
pop
dec
pop
inc
shrb
into
and
cmpsl
xchg
bound
mov
sbb
push
aas
add
movsl
out
rcrb
xlat
imul
ja
adc
icebp
push
push
int
js
sti
std
stos
into
sub
adc
or
and
test
imul
jno
fisubrs
dec
lds
test
cmpsb
sbb
addb
mov
push
mov
lcall
sti
push
jne
lcall
gs
lods
nop
sbb
xlat
sub
imul
scas
jecxz
mov
mov
inc
dec
inc
popa
popf
or
mov
cli
fdivrl
sub
or
loop
std
and
out
inc
outsl
sbb
xor
mov
cld
push
inc
test
xchg
daa
sti
mov
mov
cli
sub
xchg
jbe
push
rorl
inc
out
int
arpl
cmp
fsts
xor
sbb
aas
and
mov
mov
idivl
mov
mov
mov
das
xchg
lods
pop
jne
mov
ljmp
xorb
stc
xor
or
fidivs
sarl
pop
xchg
mov
mov
out
mov
dec
cld
cmp
pop
fsubrs
sbb
mov
add
pop
out
rcrl
sub
js
mov
enter
das
and
mov
dec
inc
sbb
inc
mov
leave
pop
lret
sbb
push
out
mov
nop
loop
or
shrl
or
out
enter
cmpsl
pop
push
sarb
lds
fdiv
call
adc
loop
xchg
push
orb
cmpsl
mov
pop
stc
mov
lahf
push
int3
pop
or
inc
sarl
push
pop
push
lea
sub
rorl
lock
ljmp
movsb
add
adc
out
adc
enter
push
xor
enter
mov
jno
pop
lods
push
xor
fwait
mov
jb
es
mov
loopne
sub
rclb
movsb
dec
and
test
push
arpl
adc
jne
push
add
sub
inc
out
dec
or
testl
mov
insl
jno
mov
imul
cwtl
sbbb
mov
push
jge
or
mov
lcall
ss
das
inc
gs
sub
cmp
sub
loop
mov
in
movsb
out
imul
push
sub
add
jle
xchg
into
jnp
clc
cs
fldcw
cmp
push
jnp
inc
idiv
dec
xchg
inc
lret
mov
std
ret
mov
jecxz
dec
and
xchg
es
pusha
les
cli
iret
dec
mov
jns
test
iret
fmull
and
sub
call
addl
push
fidivrl
in
push
aas
mov
pop
inc
lods
mov
gs
orb
xchg
scas
das
les
mov
xchg
xor
inc
arpl
or
jg
shll
sti
mov
call
add
jns
pop
fnstsw
outsb
pusha
jge
fld
lret
into
push
dec
add
imul
lahf
pop
dec
dec
shrl
xor
test
push
stos
popf
mov
loope
lock
push
xorb
or
push
loopne
inc
loope
leave
movsb
lret
clc
int3
inc
bound
jmp
aas
pop
pop
popa
negb
mov
sbb
jbe
jne
fldcw
cmp
push
in
inc
xor
mov
and
ljmp
adc
aas
mov
les
jb
lret
ret
sub
mov
in
push
daa
adc
cmpsb
mov
jo
adc
dec
adc
sub
lods
popa
mov
dec
add
cmp
pop
aaa
fdivl
dec
push
add
lahf
dec
xchg
push
adc
xchg
or
imull
insl
inc
inc
mov
sbb
mov
or
lds
in
lcall
pop
in
push
mov
lods
nop
sarb
mov
int3
or
and
loope
fcoms
push
lret
add
xchg
hlt
movsb
hlt
test
push
mov
sbb
mov
into
rclb
mov
fistl
push
je
xor
pop
pushf
inc
push
in
test
xor
and
mov
jge
pop
pop
xchg
or
out
xchg
ljmp
iret
xchg
inc
xchg
ja
int3
mov
mov
arpl
mov
outsb
dec
or
stos
sbb
push
jb
mov
pop
movsb
sbb
push
jle
sub
test
push
mov
decb
sbb
in
pop
sti
sahf
cwtl
xchg
cmp
stos
in
and
arpl
and
adc
hlt
ds
iret
dec
jge
imul
inc
jp
sub
lea
xchg
lods
jnp
xchg
das
push
mov
pop
mov
mov
sbb
sub
and
out
mov
lcall
fisubrs
push
rcr
ljmp
mov
aam
dec
test
imull
cli
jmp
sbb
insl
test
mov
push
rorl
push
clc
and
xor
adc
mov
aam
xor
into
negb
xchg
jg
mov
dec
popa
scas
xchg
data16
inc
pushf
stos
dec
adc
sbb
cmp
data16
or
adc
sbb
mov
stos
pop
add
push
mov
inc
push
cmp
add
outsb
sbb
addr16
pop
cs
frstor
dec
lock
and
aad
nop
jns
mov
push
mov
adc
data16
xor
pop
popa
push
imul
sbb
xor
leave
not
lock
mov
push
xchg
add
inc
adc
cld
leave
xlat
into
mov
int
sub
pop
push
sbb
mov
cmp
les
je
pop
mov
mov
ret
cmp
in
leave
or
xchg
sbb
mov
out
cmpl
adc
nop
shl
je
es
mov
stc
jae
add
sahf
mov
mov
mov
test
popl
loopne
xchg
lds
outsl
inc
movsb
xor
out
js
jb
in
pop
int
pusha
and
push
xchg
pop
inc
psrlq
mov
xlat
adc
or
mov
mov
inc
sahf
or
scas
fbld
rcl
in
insb
icebp
call
dec
cmp
sub
ljmp
sti
dec
mov
push
pop
ret
mov
imul
jle
fstps
pop
dec
xchg
dec
mov
movsb
xchg
mov
loopne
pop
mov
addr16
cmpsb
shlb
sub
mov
mov
movsb
jne
mov
movl
aaa
int3
xchg
ds
movsb
test
andl
test
add
xchg
mov
adc
push
mov
sub
or
dec
jno
jns
loope
and
out
ja
jae
mov
xchg
pop
adc
stc
shll
hlt
push
sbb
inc
leave
and
lahf
in
cmp
push
dec
add
or
ret
pop
mov
lea
xorb
adc
outsl
inc
cltd
fisttpl
rcl
mov
cmp
xor
fmull
push
xor
outsb
loop
lahf
repz
jle
cmp
mov
push
leave
jl
outsl
cmp
scas
sub
shl
inc
mov
lret
pop
jns
ret
xor
jl
imul
cli
pop
mov
sub
gs
stc
and
xchg
js
fldenv
mov
adc
sahf
inc
jle
or
dec
xor
out
mov
movsl
pop
movsl
test
adc
iret
ror
scas
mov
out
inc
mov
test
jmp
jge
xchg
push
inc
aaa
sbb
push
mov
fiadds
inc
mov
dec
inc
inc
pop
sbb
popa
addr16
int3
add
cmpsl
scas
out
pop
sub
sbb
sub
dec
sbb
arpl
inc
pop
mov
dec
jmp
cmp
xor
arpl
int
dec
leave
lret
xchg
add
pop
les
or
leave
pop
and
mov
or
and
insb
dec
mov
mov
jmp
push
shrb
in
xor
pop
jb
out
outsl
inc
cltd
xchg
repnz
fldenv
negb
add
xor
jo
inc
push
pop
arpl
mov
mov
mov
aas
push
adc
shlb
ss
clc
out
sub
ja
mov
movsb
mov
jbe
sub
aaa
pop
test
stc
and
xchg
inc
sbb
push
sub
rcr
sti
push
mov
mov
xchg
dec
inc
cmp
ss
mulb
imul
and
hlt
mov
out
into
dec
add
jmp
fnstsw
lock
add
pushl
aad
out
push
pop
sbb
push
fdivs
ficoms
daa
insb
mov
xchg
mov
arpl
shl
adc
ret
xchg
mulb
mov
mov
stos
lret
mov
mov
clc
jo
rcll
cmp
jns
in
cmpsl
jmp
jne
fstl
sbb
stos
xor
sarl
cld
decl
jbe
loope
fidivs
jmp
pop
and
arpl
inc
mov
jns
dec
jle
lods
adc
movsl
subl
leave
scas
add
xor
iret
std
call
and
ss
repnz
cvttps2pi
enter
cmpb
in
outsl
xchg
cmpsb
jle
or
mov
dec
xchg
inc
inc
jge
fistl
mov
ret
daa
icebp
sbb
mov
sbb
test
mov
mov
push
fisttps
push
xor
cmp
sarb
mov
jns
daa
sub
adc
bound
mov
jo
cltd
fwait
sub
ljmp
xor
imul
jg
daa
pop
jnp
adc
mov
and
xor
lea
mov
stos
fistpl
pop
adc
mov
movsl
xchg
sub
jge
pop
sbb
in
mov
jmp
xlat
mov
leave
adc
mov
loop
jle
mov
jae
or
or
loope
aam
jl,pn
stc
or
sbb
xchg
shrl
insb
enter
in
movsl
mov
xor
mov
in
out
xchg
mov
movsl
cmp
loope
hlt
outsb
xor
js
mov
aas
cmp
dec
cmpsb
movsl
rorl
sbb
dec
imul
mov
mov
or
call
andl
addb
jg
js
mov
bound
clc
push
push
repnz
or
es
pop
lods
mov
fisttpll
inc
adc
lock
mov
push
adc
mov
aad
outsl
pop
jns
sti
fstps
mov
repnz
gs
cmp
jae
jl
sbb
out
test
xor
jbe
test
out
mov
jnp
and
xlat
pop
adc
push
testb
cwtl
in
pop
syscall
xor
les
aaa
enter
xor
lods
mov
icebp
pop
jle
or
sub
pop
jmp
adc
push
push
mov
cwtl
add
sbb
xchg
aam
popf
leave
pop
or
push
mov
clc
pop
mov
imull
adc
mov
mulb
sbb
dec
in
pop
xchg
ljmp
jns
hlt
out
mov
and
in
stos
cwtl
in
es
sbb
call
mov
sub
jmp
sbbb
or
shrl
out
mov
xchg
cmpsb
pop
ret
cmp
dec
mov
ficompl
rcr
pop
imulb
scas
xor
xor
fisubrs
jp
loopne
inc
push
push
and
mov
rorb
enter
enter
inc
adcb
sub
arpl
arpl
inc
mov
ret
adc
int
pusha
loop
scas
ret
cltd
jnp
inc
lret
jge
in
and
or
sbb
pop
dec
nopl
xchg
cmp
mov
sahf
outsl
mov
lahf
push
cmp
cs
mov
jg
jg
xor
lahf
mov
cmp
sub
ror
xchg
in
xchg
push
push
mov
fwait
stos
push
cmc
cmc
cld
jg
std
les
arpl
dec
mov
push
adc
jns
shlb
addr16
sub
push
imul
or
inc
cmpsl
out
aaa
jmp
movsb
repz
inc
in
inc
cmpl
sbb
push
les
iret
shlb
pop
cmp
push
aaa
mov
sub
dec
or
mov
into
mov
insb
sbb
cmpsb
pop
out
jmp
and
sti
test
sbb
jae
fdivrl
pusha
outsb
pop
mov
xchg
sub
cmpsb
popa
movsb
sbb
cli
stos
xchg
mov
push
dec
push
xchg
fcomp
adc
dec
js
das
stc
imul
loope
dec
movl
mov
pushf
xchg
xor
jle
fdiv
push
lahf
mov
ret
inc
adc
push
cli
mov
outsb
cs
nop
mov
inc
pusha
pushf
mov
fldl
add
test
push
repz
mov
mov
push
mov
lea
orl
adc
push
jl
popa
add
mov
cmpsl
mov
test
gs
dec
lret
mov
xchg
in
xor
sub
push
mov
loopne
ja
xchg
mov
sbb
xchg
and
hlt
push
mov
sub
adc
pop
das
mov
push
jno
cmp
into
mov
repz
sbb
adc
ret
andl
movb
mov
outsb
popf
pop
xchg
inc
bnd
cmp
cltd
test
es
jns
jmp
rclb
roll
inc
dec
icebp
sbb
int
lahf
gs
add
inc
mov
sarl
flds
sub
push
xor
ret
icebp
lret
mov
sti
or
in
cltd
xor
loopne
sbb
xchg
or
std
mov
jnp
adc
jo
xchg
pop
in
arpl
jo
push
and
bound
adc
mov
sub
ficoml
inc
shll
add
pop
or
iret
in
into
cmpsb
sub
pushl
inc
xor
inc
test
dec
ret
insl
adc
push
xor
test
cmp
cs
cli
ret
or
ds
les
ror
sub
push
test
fiadds
lcall
dec
movsb
mov
jmp
pop
mov
cs
sbb
imul
ja
jbe
nop
cwtl
jnp
pop
mov
xor
sub
cli
pop
mov
pop
jp
cli
xchg
push
jecxz
xchg
cmp
inc
xchg
lea
push
movsb
out
mov
scas
repz
lods
repnz
lods
loopne
pop
hlt
xchg
pop
jmp
mov
out
sahf
into
dec
mov
mov
in
and
into
arpl
inc
stos
xchg
xor
ljmp
push
mov
rol
pop
mov
sbb
or
fcom
enter
xchg
add
lcall
es
xchg
add
test
mov
out
jl
insl
mov
cli
rcrl
sbb
push
xchg
jb
adc
fistpl
xchg
cmp
int3
cld
cmp
cmpsb
xlat
jne
push
jp
xor
ss
sub
xor
fsubl
xchg
mov
fs
jle
pop
sbb
cmp
orb
mov
and
js
pop
adc
cmp
sub
ds
scas
xchg
pop
xchg
jmp
xchg
test
jecxz
sahf
xor
sub
pop
ss
dec
stc
push
les
sbb
mov
xchg
sub
and
jbe
repnz
out
scas
mov
mov
xor
cld
push
shlb
std
lods
mov
xor
or
mov
mov
inc
xchg
shll
mov
loope
sub
xchg
ret
mov
add
jl
inc
xor
dec
rcl
and
sub
pop
xor
cmp
sub
in
mov
add
leave
push
xor
inc
lret
pop
mov
pop
lret
movsl
scas
mov
pop
xor
aad
cmp
mov
cwtl
jmp
jno,pt
sbb
addb
in
sub
xchg
lods
divb
lods
fcompl
xor
icebp
xor
sahf
mov
xor
stc
popf
es
int3
sbb
scas
mov
jb
jbe
dec
or
cmp
dec
dec
adc
mov
mov
mov
jbe
lock
mov
cwtl
lret
sub
ss
cmp
push
inc
mov
push
sub
sbbl
sti
xor
add
idivb
sub
mov
push
jl
in
rcll
sub
pop
in
pusha
inc
loopne
dec
push
sbb
jge
inc
rcl
mov
cmc
sbb
ret
rclb
popf
mov
or
mov
cmp
loop
and
ljmp
andb
cmp
inc
xor
cmp
pop
adc
jns
mov
fiaddl
cmpsl
outsl
adc
jp
notl
jmp
lcall
cmp
pop
mov
sbb
je
popf
xor
out
icebp
hlt
ret
add
pop
mov
test
and
enter
push
or
xlat
imul
stos
lea
xchg
sbb
inc
mov
out
imul
insb
pop
rcrb
lock
negl
mov
adc
dec
or
aaa
sub
pop
ss
xchg
sbb
dec
mov
xor
addr16
js
xchg
push
aas
test
mov
ljmp
lret
inc
mov
jle
jae
fstps
adc
pop
lods
jl
aas
js
add
scas
lock
stos
subb
jecxz
mov
std
dec
jb
mov
jmp
push
add
add
mov
xchg
dec
aad
xor
push
lds
cmp
inc
dec
pop
movsl
dec
mov
les
jle
adc
pop
mov
xchg
push
ds
adc
lods
iret
int3
out
cld
in
nopl
or
cmp
sub
pop
pop
dec
outsl
jl
insb
pushf
lahf
mov
int3
out
cld
in
nopl
or
cmp
sub
pop
pop
dec
outsl
jl
insb
cwtl
lahf
subb
fbld
nopl
or
cmp
and
outsl
jne
mov
pop
mov
int3
out
jl
sub
jecxz
cmpsb
test
pop
cmp
xor
add
adc
int3
int3
int3
int3
aaa
leave
rcr
pop
jmp
inc
mov
stos
imul
push
fisubrl
jns
or
cmp
push
pop
jmp
sub
stos
dec
ljmp
insb
into
sbb
leave
ljmp
mov
ss
xchg
or
pop
lcall
dec
cmp
cmp
jbe
stos
or
xor
popa
sub
mov
leave
bound
aad
xor
mov
jle
pop
cmpsb
and
sbb
inc
sbb
jp
pop
cmp
ds
pop
push
outsb
jb
jp
dec
adc
xchg
daa
and
aas
inc
adc
daa
cld
pop
scas
cmp
or
mov
cmpsb
lret
cld
aaa
sbb
cmp
or
hlt
lds
test
mov
and
pop
stos
or
inc
fcos
nop
push
movsl
push
out
icebp
mov
rclb
lahf
and
xor
dec
adc
sbb
xchg
sbb
dec
leave
push
pop
jmp
outsb
cltd
sbb
js
add
jns
or
or
sbb
push
test
mov
or
imul
cmp
or
jge
pop
out
pop
int
jp
loop
sbb
lret
jbe
jns
ret
sub
insb
iret
out
dec
lret
insl
or
or
sbb
ljmp
or
cmp
push
pop
jmp
sub
cli
dec
ljmp
or
cmp
scas
icebp
xacquire
rclb
or
pop
push
mov
bound
push
mov
sub
cld
pusha
mov
ss
dec
imul
rcll
pushf
push
jo
pushf
sub
test
jne
push
mov
adc
jb
cmp
jns
jns
pop
mov
jle
es
call
mov
addr16
push
mov
cs
adc
or
jnp
and
dec
or
inc
add
cbtw
mov
gs
jne
gs
mov
push
cmp
imul
notb
rcr
sahf
and
mov
in
xchg
ret
mov
xchg
ficomps
jae
pushf
std
out
and
or
sub
or
fxtract
xchg
jmpw
dec
push
arpl
xchg
cmpsb
xor
cmpl
in
daa
test
dec
jne
icebp
push
cmpsb
test
arpl
mov
popl
xchg
push
jns
lret
inc
sbb
test
out
lds
cltd
les
sar
jno
inc
movsl
add
adc
add
jle
add
jo
pusha
sbb
jg
std
stos
iret
loop
mov
mov
outsl
mov
ds
repnz
jmp
add
xchg
dec
dec
push
cmp
xorb
jle
add
jne
pop
pop
cmc
data16
pushf
je
xor
movsb
pop
sbb
out
insb
test
incb
adc
out
cld
add
xchg
test
cld
int
mov
lret
add
ja
int3
mov
xlat
mov
pop
out
es
out
xor
js
push
xor
test
push
adc
in
push
lret
imul
pop
cmpsb
test
xchg
mull
jg
mov
or
and
imul
or
mov
mov
ja
mov
cli
dec
cmpsb
into
sahf
in
push
xor
or
mov
insb
push
aaa
and
stos
jecxz
push
mov
jl
dec
cli
cmp
cmpl
stc
nop
inc
sti
jnp
pop
jle
mov
pop
int3
push
cld
leave
in
test
push
mov
sbb
or
pushf
notl
cld
mov
mov
mov
mov
stc
fistl
cmpsl
dec
push
sbb
daa
loop
xor
daa
sub
daa
xchg
faddl
mov
out
int3
in
sahf
subb
lea
sub
fmuls
mov
jg
pushf
and
das
adc
imul
jne
dec
xchg
jmp
test
mov
andl
mov
xchg
ljmp
icebp
movsl
cmp
and
pop
jo
leave
scas
ljmp
stos
inc
jns
jmp
add
xchg
lcall
push
adc
stc
daa
sbb
in
pop
xor
mov
outsb
jne
push
sbb
insl
cmc
cltd
scas
mov
pusha
jmp
js
sbb
inc
push
mov
and
or
dec
mov
mov
add
xor
test
xchg
out
stos
mov
xchg
repnz
sub
xor
in
divl
xor
dec
cmc
shrl
cmpl
cmp
and
push
int
sahf
mov
push
jecxz
pop
aaa
xchg
inc
pop
xor
fisttpl
adc
adc
adc
pop
mov
fsts
int
xorl
pop
notl
lds
orb
xchg
je
lods
pop
cwtl
mov
add
loop
xor
pop
and
jns
les
xor
push
outsb
or
adc
daa
andb
dec
test
or
or
stc
leave
imul
pusha
cld
cs
in
add
out
pop
dec
nop
adc
out
xor
pop
sub
sbb
testl
add
fprem
push
jb
jl
or
rorl
aas
jmp
insb
xor
inc
mov
mov
xor
test
jg
lods
rcl
icebp
pop
test
lea
fsubs
adc
dec
loopne
sub
mov
mov
cli
clc
in
or
mov
sub
mov
jae
out
sub
push
ja
mov
stos
adc
cmp
icebp
xor
mov
rclb
fstpl
fs
xchg
fs
test
sbb
mov
lcall
mov
or
xor
aaa
inc
dec
pop
and
push
neg
sub
push
fucomi
inc
sbb
lock
fmull
push
imul
xchg
sub
imul
pop
jmp
clc
pop
or
sub
inc
pop
push
rol
mov
mov
aas
out
pop
push
test
pushf
test
pop
es
lahf
mov
mov
in
movsl
aad
jnp
add
mov
jae
mov
xor
push
xor
jae
insb
in
test
xchg
divps
mov
mov
xor
icebp
in
add
lret
mov
pop
sub
pusha
mov
mov
jb
jno
es
insb
cld
scas
adc
and
cmp
loope
mov
adc
into
or
sbb
ja
sar
dec
jmp
xor
jbe
push
push
clc
out
enter
and
arpl
mov
pop
xor
adc
and
jp
dec
add
shl
rorl
xchg
pusha
jns
inc
rcrl
jge
pop
insl
lods
repz
icebp
iret
pop
add
fyl2x
mov
jmp
loope
mov
lods
out
int
cmpsb
fdivrs
pusha
in
daa
bound
andb
and
shrb
fldenv
je
xor
mov
aaa
cmp
fucomp
jecxz
mov
fldl
rcrl
xchg
cmp
pop
sbb
rolb
mov
pop
shlb
or
jo
mov
popa
pop
lcall
or
inc
sbb
rclb
imul
adc
repz
xor
nop
lret
hlt
lds
rorb
imul
ret
lds
faddl
cmpsb
sahf
mov
shlb
push
add
mulb
xchg
jle
cmpsb
pop
dec
push
and
addb
jbe
xor
bnd
or
imul
mov
out
dec
add
jmp
dec
ficompl
das
xchg
ja
iret
rclb
in
sub
lods
mov
xchg
mov
repz
sahf
ret
pop
imul
lds
add
pop
cmp
je
or
add
mov
cltd
movsb
mov
in
fbstp
xlat
mov
inc
or
in
std
incb
lret
sahf
pop
les
mov
dec
inc
sbb
xchg
cmp
cmp
sbb
loope
dec
sub
pop
ret
aas
addl
jecxz
sbb
push
jg
insb
ds
jno
mov
xor
aad
pop
test
loopne
aaa
mov
push
enter
jnp
jp
stos
gs
mov
repnz
xor
inc
in
push
loope
pop
cli
mov
loopne
sbb
pop
sbb
xor
mov
insb
pop
lods
aaa
cltd
shlb
and
jno
xchg
jns
fucom
sub
sub
xchg
mov
xchg
pop
shll
stos
test
inc
loope
mov
or
bound
mov
pusha
mov
fwait
stos
mov
ret
mov
dec
sbb
pop
pop
cmp
and
pop
jne
jo
pop
mov
out
jns
pop
jnp
inc
ljmp
jns
pop
sti
xchg
out
shlb
add
pop
jle
cmpsl
xchg
dec
mov
out
pop
add
sahf
shrb
ret
loopne
inc
ds
into
bound
in
pop
or
cld
cltd
and
mov
int3
out
faddl
cli
pushf
lea
std
sbb
dec
pop
cmp
aaa
mov
mov
or
mov
jno
icebp
repz
mov
sarb
mov
jns
and
repz
iret
int
inc
xchg
addr16
and
ror
jge
jb
mov
jns
inc
das
fmuls
shrl
jmp
xchg
idiv
nop
add
js
dec
pushf
xchg
xchg
in
arpl
xor
lock
mov
jmp
es
jge
inc
jno
pop
jmp
mov
jb
jmp
insb
repnz
pop
mov
mov
and
mov
adc
ret
pop
fmul
in
jle
mov
xchg
scas
or
std
fdivr
xor
inc
jl
jo
in
mov
das
cli
xor
jle
mov
cmp
mov
fwait
insl
pop
push
cmp
sub
lret
lods
mov
out
addr16
ljmp
aam
ret
ret
nop
or
xchg
flds
jae
pusha
push
jecxz
or
xchg
sarl
repnz
movsl
cmpl
movsb
cmp
mov
sbb
loopne
jg
shr
mov
sub
jns
roll
clc
negl
mov
mov
add
scas
push
dec
fwait
push
push
lahf
sbb
dec
dec
gs
adc
mov
adc
mov
addl
inc
repnz
inc
xchg
jnp
add
jecxz
cmpl
adc
push
out
lret
jle
in
add
popa
pop
lret
out
movsb
pop
jns
adc
cld
mov
lds
lock
or
enter
inc
into
mov
xchg
jo
adc
js
in
mov
push
adc
test
shlb
data16
add
sbb
pop
lods
dec
dec
faddp
hlt
roll
xlat
xchg
push
inc
icebp
mov
jns
mov
pop
dec
nop
test
pusha
lret
add
inc
jne
add
mov
popf
cmp
jp
and
sarb
pop
xor
ret
add
faddl
dec
lea
loopne
jae
or
mov
sub
js
das
xor
and
pop
fwait
xchg
ss
cmc
rorb
dec
ficoms
jo
sbb
stos
sbb
inc
out
cli
mov
push
fcompl
ljmp
cli
push
rcr
xchg
xlat
ss
xchg
or
stos
loope
push
inc
movsb
xchg
pop
cmp
loop
movsl
cmp
shlb
xlat
sbb
movsl
into
sub
fcmovb
subb
xchg
and
sub
jo
cwtl
call
int
mov
jb,pn
cwtl
lahf
mov
test
es
inc
inc
loopne
incl
pop
shll
xor
in
dec
cli
mov
push
ss
fsts
mov
bound
es
xor
je
scas
adc
pop
loopne
push
adc
cmp
inc
and
dec
addr16
in
jae
and
inc
subl
add
aad
cld
and
mov
addr16
int3
andl
or
pop
lret
ss
out
pop
fmuls
sbb
jmp
pop
int3
xchg
std
mov
les
xchg
jae
and
pop
or
ret
push
and
cltd
dec
or
pop
inc
jno
pop
loop
or
sahf
jne
xchg
or
insl
sub
mov
mov
int3
adc
shrb
out
mov
cwtl
scas
pop
mov
daa
mov
or
pop
xchg
cld
pop
xchg
imul
iret
insb
add
aad
jmp
mov
cwtl
push
or
out
bound
lods
out
mov
data16
outsb
into
jmp
xchg
xlat
cld
and
pop
cwtl
mov
je
sbb
popl
jns
scas
imul
dec
pop
das
mov
rcll
fisttpll
pop
loopne
popa
ja
xchg
insl
aad
adc
inc
xchg
adc
mov
dec
adc
inc
add
scas
cmp
push
insl
cmp
jecxz
jns
fildll
mov
aad
dec
push
mov
inc
popf
push
jmp
stos
in
popf
int
ret
out
pushf
pop
imul
inc
out
adc
cld
mov
rorb
xchg
sahf
mov
push
fdivl
xor
xor
cmp
inc
push
push
inc
jle
xor
xchg
pop
push
cwtl
das
xchg
sbb
adc
lret
mov
fnstcw
cltd
mov
pop
mov
fiaddl
fisubrs
pop
add
or
popf
ret
or
mov
es
jb
mov
jecxz
add
es
movb
insb
mov
cld
and
sbb
xchg
bound
push
popa
fadds
imul
dec
add
ljmp
lds
inc
xor
lock
iret
jl
loopne
add
mov
out
push
loop
or
in
lds
cmp
aam
into
xor
push
and
add
loope
adc
sarb
scas
movsl
mov
fcmovu
loope
in
mov
dec
and
cs
out
cmp
inc
push
mov
jno
movsb
repz
add
mov
jne
enter
jmp
jnp
loop
std
mov
inc
sub
adc
jo
testl
mov
notl
mov
or
fs
inc
sub
cmp
cs
push
mov
pop
xor
inc
fdivl
mov
mov
jne
outsl
ret
popa
fsub
jae
xchg
push
lods
data16
test
pop
out
push
test
pop
je
fcos
nop
ja
xchg
and
out
dec
outsb
xor
xchg
inc
sub
mov
xor
jge
outsl
daa
insb
xor
dec
pop
jnp
js
and
mov
mov
cld
mov
mov
insl
movsl
fmulp
in
jmp
idiv
sbb
ss
or
ds
aad
pop
mov
in
jno
cltd
sahf
daa
movsl
pop
ja
dec
ja
cmpb
cmpsl
lret
sub
push
je
in
jle
inc
andl
out
or
mov
cmp
cltd
cs
or
pop
lock
fmulp
push
add
ja
mov
inc
scas
mov
mov
push
subb
aam
pop
dec
mov
mov
push
mov
pop
fadd
sbb
icebp
sahf
adc
cmp
dec
and
and
add
movsb
inc
push
fildll
pop
push
or
mov
mov
push
daa
mov
push
push
xchg
xor
packssdw
subl
popa
xor
mov
fsubr
sbb
scas
cltd
loopne
add
mov
test
js
imull
xlat
mov
daa
incl
fsubr
popa
lret
sub
imul
lea
sub
pop
js
jp
dec
mov
dec
mov
inc
jo
popf
scas
pop
lock
int
scas
flds
push
sbb
cmp
stc
xchg
pusha
js
cltd
js
sub
js
dec
cli
popa
test
xchg
cmp
lret
jge
fxch
in
lea
adc
mov
inc
sbb
mov
lock
leave
fiaddl
pop
fiaddl
js
dec
dec
mov
imul
pop
lahf
xchg
hlt
enter
mov
sub
js
inc
imul
in
xor
andl
push
in
xchg
out
cmc
aad
cld
xchg
push
or
xlat
mov
cmc
lahf
fstpl
add
data16
scas
loopne
mov
pop
idivl
dec
fcompl
clc
add
sti
sub
jmp
and
xor
ficoms
sbb
das
repz
jo
xchg
cli
jl
pushf
dec
and
and
out
sahf
mov
in
xchg
jo
jb
sbb
arpl
pop
mov
push
jecxz,pn
xchg
addr16
lods
jne
or
sbb
mov
mov
sub
movsb
mov
adc
call
xchg
push
popa
cmpsl
or
stc
cmp
mov
sbb
shrl
mov
mov
add
jle
fisttpl
xchg
jg
scas
fsubrl
aaa
xchg
cwtl
ret
sarl
ret
cmpsb
aas
cmp
ds
xor
fldl
xchg
mov
mov
in
test
scas
xor
dec
push
ds
sahf
mov
push
addl
jbe
orb
fistpl
int3
xchg
in
push
fisttpl
insb
call
mov
inc
call
mov
jne
aas
sub
out
pusha
dec
icebp
or
inc
sub
mov
arpl
lcall
stos
mov
outsb
js
out
add
test
scas
xor
add
dec
aam
lods
push
and
into
xchg
xor
jno
stos
pop
mov
and
shrb
cmc
and
adc
stos
push
sub
stos
fistpl
daa
mov
mov
mov
pop
adc
mov
jecxz
jnp
xchg
push
fcmovnbe
push
sahf
jne
xchg
pop
lods
jb
fstl
ret
movb
stc
push
push
pop
iret
es
mov
pop
pop
idivb
jmp
rorb
xchg
xor
shlb
mov
lahf
in
jbe
stos
outsl
dec
cmpb
adc
movb
rorb
sub
in
add
outsl
cmpsl
xchg
scas
jecxz
cwtl
repnz
outsl
pop
jl
adc
and
popf
add
xor
out
adc
into
push
loop
invd
outsb
sub
add
or
mov
imul
pusha
sbb
clc
dec
jbe
inc
xchg
sbb
mov
mov
adc
sbb
insl
cmpsl
nop
xlat
push
xor
stc
and
data16
idiv
stos
xor
icebp
loop
push
leave
scas
or
in
aas
or
mov
mov
xchg
insl
lcall
fwait
sub
push
sub
sub
jo
repz
sub
and
dec
int
leave
sbb
cmp
ja
popa
out
jmp
sub
lret
lahf
bswap
ret
pusha
cli
sub
inc
pusha
pop
int
je
mov
test
inc
xchg
lds
push
and
xor
jge
and
push
sub
jle
pop
add
ss
ljmp
sub
roll
roll
aas
xor
adc
add
jnp
xchg
shrb
lock
repnz
into
mov
clc
decb
cld
push
lret
sbb
movsl
push
fadd
add
xchg
xchg
fisubs
jbe
test
or
lods
scas
or
mov
fcoms
test
inc
iret
add
cld
je
xchg
sbb
jns
outsl
js
test
mov
push
xchg
loop
jae
hlt
std
into
push
sahf
xchg
sub
jge
jge
sarb
fadd
lea
push
cld
jo
sub
gs
sti
out
dec
xor
pop
cmp
sti
pusha
hlt
fcompl
movd
jmp
cmc
adc
test
insl
or
sub
or
nop
mov
and
sbb
rcll
shrb
std
cld
ja
xchg
dec
and
inc
pop
cmp
ret
push
push
dec
sub
add
pop
inc
adc
dec
popa
add
xchg
gs
movsb
in
imul
xor
adc
sbbl
in
and
sub
lahf
fucomip
push
stos
cmpsb
mov
push
hlt
xchg
dec
xchg
and
mov
xor
cmp
cmpl
adc
cmp
test
and
les
inc
and
in
insb
push
pop
in
icebp
inc
lds
mov
push
packssdw
mov
outsb
xchg
push
push
repz
clc
mov
lock
push
jae
loop
mov
outsl
sub
sub
fst
into
ds
jbe
push
cwtl
fsub
scas
inc
add
mov
push
dec
xor
test
adc
pushf
or
cmc
mov
daa
and
push
lahf
ja
out
in
mov
cmp
ret
sbbb
mov
sub
fpatan
jle
pop
div
push
rclb
cmpsl
adc
and
sub
jns
out
sub
int
lret
cwtl
mov
sub
aad
mov
sub
cmp
mov
pop
and
mov
pop
cmp
lahf
das
arpl
cmc
push
das
pop
lds
pop
mov
xchg
das
inc
jmp
dec
out
adc
in
sub
xchg
cmpsl
lea
fnstcw
jno
mov
and
jns
mov
mov
push
inc
stos
int
or
mov
pop
mulb
out
and
pop
jecxz
jp
shrb
mov
lahf
inc
sub
mov
push
scas
adc
fucomi
bound
push
outsb
push
xor
in
mov
jb
mov
or
out
jecxz
in
orb
sub
inc
xlat
sbb
into
push
lods
xchg
xorb
repz
mov
imul
mov
aad
in
ja
push
out
imul
lahf
into
cli
arpl
push
jno
push
push
bound
int
xchg
jne
aad
sub
ret
js
xchg
push
fistpll
dec
push
scas
bound
push
in
sub
adc
gs
inc
pop
addr16
push
sub
mov
jno
insl
mov
imulb
sub
mov
adc
enter
push
filds
iret
das
gs
aad
and
call
in
jne
or
xchg
sbb
fists
mov
push
jmp
popa
cs
inc
jmp
fs
test
sbb
sbb
push
iret
sarl
xorb
cmpsl
popf
gs
and
outsl
jnp
mov
add
sahf
scas
sahf
in
fucom
push
push
scas
mov
jae
cmp
inc
gs
sti
xchg
and
leave
mov
or
push
test
inc
pop
ret
dec
testb
outsl
aaa
jns
push
clc
push
mov
int3
lahf
in
and
xchg
push
sub
scas
mov
jne
xor
jne
adc
mov
push
out
mov
adc
pop
ficomps
pop
dec
rcrl
jecxz
fmull
stos
pop
inc
push
xchg
and
cltd
mov
repz
cmc
push
movsb
pop
decb
or
rol
cmc
out
jno
nop
cmp
pop
adc
subl
stos
mov
jg
test
hlt
js
sub
dec
pusha
xchg
jnp
fstpt
rol
aam
adc
mov
arpl
loope,pn
jae
sti
inc
add
pop
jno
mov
cwtl
fcompl
loope
lods
push
adc
pop
pop
push
push
jne
xchg
mov
sub
int3
xchg
in
fstpt
and
in
xor
push
std
pop
loope
mov
mov
sub
subl
xchg
arpl
inc
das
fidivl
fcmovbe
out
cwtl
jle
and
sbb
shll
rorl
cmpb
fisttpl
push
mov
cli
out
mov
jo
imul
xchg
fistl
lea
xchg
jae
les
enter
hlt
adcb
pop
lock
jge
cmp
dec
cli
scas
fisubl
add
xchg
into
repnz
pop
sti
sub
aad
add
mov
call
test
test
stos
dec
xor
jns
add
adc
call
ljmp
test
arpl
fsts
stc
cmp
or
fisubrl
jns
or
cmp
push
pop
jmp
sub
cli
dec
ljmp
or
cmp
imul
cmp
or
shrl
jns
or
cmp
inc
jmp
cmp
cli
dec
adc
push
int
and
gs
jne
int3
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
rolb
mov
push
mov
xor
or
cmp
or
pop
orl
mov
inc
mov
popa
stos
jno
add
adc
and
xor
rorl
pop
loope
icebp
pop
orl
addl
mov
add
adc
and
xor
incl
lea
pop
icebp
jne
pop
cmc
or
add
testb
ror
and
shl
test
loope
cmpsb
xchg
js
dec
pop
adc
stc
xor
cmp
jl
mov
loope
lock
sbb
dec
pop
push
mov
xchg
push
lret
lcall
cmc
das
push
aad
movsl
orl
mov
mov
and
add
add
enter
repnz
les
pop
jbe
sbb
cmp
nop
jp
jne
jecxz
fimuls
fdivrp
adc
das
sbb
dec
aam
mov
mov
addr16
sbb
shll
sub
lcall
mov
inc
mov
popa
mov
adc
and
xor
rcll
and
xor
inc
adcl
jmp
daa
into
aaa
mov
inc
xchg
lods
or
ss
cs
lcall
es
movsb
aas
xchg
dec
scas
xor
test
mov
aas
out
cmp
or
push
repz
add
cli
and
xor
rorl
cmp
sub
pop
orl
lcall
jno
add
adc
and
xor
rorl
cmp
sub
pop
orl
lcall
mov
cmp
add
mov
jg
cmp
cmp
fs
mov
add
or
xchg
fnstcw
xor
xor
lret
lret
shlb
and
fs
fs
cld
push
arpl
push
mov
dec
stos
hlt
scas
ret
jmp
and
mov
rol
adc
or
xchg
xchg
test
pop
pop
insl
fwait
cmp
iret
sbb
test
jno
lea
add
xchg
jl
popf
rolb
cmp
jae
push
mov
sbb
stos
inc
pusha
or
xor
in
pop
xchg
mov
inc
pop
imul
add
pop
in
inc
sbb
cli
xchg
jecxz
out
in
cmpsb
add
xchg
or
ss
faddl
or
loopne
shrb
push
or
push
pop
xorb
cmp
lahf
push
inc
js
movsb
and
cmp
xchg
insb
dec
rcr
mov
cmc
jo
sti
mov
int3
leave
popa
xor
cmp
ret
mov
stos
jmp
ds
pop
mov
pop
mov
xor
stos
outsl
lods
cmp
sub
flds
vmread
pop
test
xor
ffree
or
mov
testb
cmp
loope
int3
jle
jnp
push
mov
sbb
xchg
add
cmpsb
and
and
scas
divb
xchg
ss
stos
clc
clc
pop
divl
mov
test
jo
xchg
fwait
sub
push
push
test
test
clc
pop
scas
in
out
inc
push
das
test
je
fdivl
andl
add
jp
push
xor
es
inc
mov
in
fstpl
insb
sbb
xlat
add
mov
and
rorb
cltd
cmpsb
jg
xchg
in
jo
inc
dec
cwtl
mov
sbbb
pop
cltd
ret
pop
push
xchg
cltd
les
xchg
rolb
nop
add
jecxz
lock
jg
push
sub
or
cwtl
jle
aaa
and
cmp
daa
outsl
push
sbb
sub
jp
sbb
adc
mov
cmp
sbb
in
inc
ficomps
aas
fldenv
movd
out
push
or
call
cmp
xor
and
out
xor
imul
pop
xchg
or
out
stos
xchg
test
push
push
or
outsb
and
cmc
jo
xchg
ja
inc
loope
shrl
shll
inc
sti
sarb
into
mov
push
push
mov
rorb
push
or
clc
xchg
jp
sbb
not
cmpsb
cmp
pop
fstp
in
xor
and
int
xchg
shlb
mov
nop
xor
cltd
in
scas
dec
addl
mov
ret
mov
mov
adc
bound
mov
sbb
push
sahf
inc
popf
dec
inc
inc
jno
or
adc
mov
or
adc
rcrw
push
icebp
out
movsl
ds
ljmp
out
aaa
xor
mov
test
in
and
fwait
pop
cmpsl
mov
xor
jg
in
jbe
in
cmpsb
aaa
stc
shl
sub
andb
aaa
imul
push
aaa
leave
jns
inc
inc
sbb
xchg
and
lock
mov
sbbl
insl
mov
dec
push
stos
gs
and
mov
cmp
int
add
pop
inc
insl
ret
cmpsl
pusha
lea
sub
dec
add
insl
push
outsl
xchg
lock
push
cmc
push
mov
lock
mov
out
push
mov
mov
mov
push
scas
mov
test
cmp
mov
sub
cmp
jno
stos
xchg
cli
push
insl
add
jnp
jb
mov
pop
mov
xchg
and
arpl
imul
sbb
jmp
mov
mov
ss
sbb
add
int
xchg
fistl
outsb
push
push
push
loop
xchg
pop
or
xchg
ja
cli
sbb
push
pop
jecxz
enter
sbb
cmp
popf
stos
gs
leave
mov
xor
notb
cmpsl
pop
sub
data16
je
popf
mov
mov
pop
jae
sarl
sarl
aaa
aaa
push
cmp
xor
sti
dec
call
sbb
add
out
adc
jb
lahf
or
test
or
mov
mov
aaa
push
sti
inc
clc
inc
movl
mov
enter
test
out
cld
cmp
push
push
mov
loope
push
jo
cmp
repnz
sar
hlt
dec
test
adc
adc
ljmp
push
push
insl
pop
xchg
add
out
aaa
jmp
jnp
into
jae
outsl
inc
and
push
cmp
loopne
into
xor
inc
push
dec
rol
sarl
push
pop
mov
jno
faddl
mov
xor
nop
and
push
loope
loope
pop
lock
fcoml
lds
shl
adc
sti
sbb
mov
scas
push
movb
cmp
into
jo
aad
or
push
mov
fildll
mov
insb
out
inc
or
inc
push
lock
scas
dec
mov
xchg
data16
or
dec
leave
jmp
or
movsl
mov
pop
pop
fsubrl
pop
out
arpl
cld
or
fcoml
sub
xchg
xchg
std
loop
mov
pop
and
sub
adc
lret
push
push
cwtl
rcr
jle
sub
scas
sub
jmp
scas
sbb
mov
pop
mov
roll
pop
fwait
inc
stc
stos
cmc
sub
add
in
fistl
or
cli
leave
addb
xor
mov
inc
pop
cmpsb
stc
inc
ret
xor
push
jle
push
scas
push
and
jmp
sbb
jle
xlat
sahf
mul
push
dec
sub
jp
sbb
loopne
adc
cmp
enter
cmpsb
ror
dec
sahf
movsb
insl
test
cmp
dec
out
fs
sub
and
xchg
cli
add
clc
inc
add
pmaxub
es
jmp
pop
lret
mov
add
fisubrs
inc
mov
mov
ficompl
adc
addl
adc
sub
inc
cmp
add
sbb
iret
dec
push
push
push
pushf
dec
push
jns
icebp
test
addl
arpl
test
stos
adc
jns
cmp
ljmp
push
mov
mov
adc
arpl
icebp
fstpl
mov
int
mov
sbb
pop
xor
shrb
stos
pop
add
pminub
lcall
shrl
cltd
inc
or
clc
dec
or
outsb
xlat
mov
or
leave
adc
les
xchg
int3
cmpsb
rolb
add
cmp
aam
dec
jnp
mov
mov
movsb
outsl
inc
cltd
mov
inc
mov
adc
popf
imul
pop
incl
add
jns
cmp
stos
mov
or
and
cmpsl
test
fcomps
lret
add
shr
aad
int3
and
repnz
cmp
and
ss
sbb
aad
push
sub
push
insb
scas
and
jnp
lods
mov
xor
cmp
aas
testl
data16
gs
cmp
and
ja
push
dec
insl
push
push
inc
fistps
les
mov
adcb
mov
aad
mov
push
shll
pop
cmp
add
les
in
movsb
dec
mov
sarb
fsubp
inc
sub
adc
cltd
xor
and
cli
lods
ss
pop
sbb
xor
sarb
pop
push
test
inc
mov
jae
mov
aas
ficompl
in
xor
clc
mov
or
outsb
inc
dec
inc
pop
pop
mov
jo
mov
insb
mov
gs
jo
cmp
adc
dec
push
jge
daa
pop
das
and
dec
mov
mov
es
sti
int3
mov
in
mov
test
pop
add
dec
xor
jns
mov
pop
jbe
shlb
add
cmp
lock
inc
adc
sub
mov
fiadds
into
xchg
add
xchg
inc
roll
jl
out
ja
mov
pop
js
push
inc
mov
jno
and
sub
daa
adc
je
leave
dec
insb
sub
jb
lods
ficompl
clc
pop
xchg
push
arpl
insb
cmp
mov
pop
jg
sbb
lock
dec
push
incl
mov
and
ret
sbb
std
cmp
sub
mov
jbe
jnp
out
cmp
scas
fistl
rcl
xlat
or
xchg
cwtl
andb
sarb
clc
jbe
cmp
mov
mov
mov
pop
push
bound
or
std
jl
or
minps
pop
dec
push
fdivl
int
mov
dec
jg
stc
or
iret
sub
mov
fidivrl
outsl
repz
dec
mov
fwait
jge
dec
mov
xchg
xchg
add
sbb
xchg
sbb
addb
or
xchg
repnz
xchg
mov
cmp
pop
push
xchg
inc
sbb
loopne
cmpsl
stos
lock
into
enter
dec
jnp
or
cmpsl
ss
push
hlt
mov
jnp
les
ficoml
sbb
jno
mov
mov
adc
push
subb
add
pusha
lret
jg
dec
sbb
cmpsb
out
daa
insb
xchg
jns
jecxz
into
dec
xlat
ljmp
scas
cmc
jno
jno
ja
sbb
test
dec
xor
jge
shrb
aas
add
pop
adc
mov
or
stos
sub
jo
in
lea
sbb
movsb
pop
pushf
test
mov
insb
inc
pop
dec
stos
xchg
clc
je
std
aaa
sbb
testl
mov
sub
jge
mov
insb
aad
iret
mov
int3
pop
in
es
xor
das
sbb
mov
adc
sti
fnstcw
cmc
imul
sub
insl
ljmp
cmp
add
shl
mov
jae
pop
xor
fwait
insl
add
fcomp
pop
arpl
mov
cmp
fnstsw
lock
imul
add
addl
shlb
fisubrl
cmp
sub
lock
xor
js
int3
arpl
popa
and
pop
sub
add
in
out
dec
or
dec
mov
cmp
loope
push
insb
lds
or
mov
sbb
jb
in
or
add
cmp
fwait
add
pop
push
lods
and
cmc
shlb
int
fcmove
ficompl
sub
loope
icebp
imul
imul
mov
movsb
scas
sub
cwtl
sub
popaw
pop
xchg
and
inc
mov
ret
add
fwait
cmp
pop
pop
sbb
pop
add
sahf
bound
lea
xor
shrl
pop
lret
sub
jb
pop
inc
adc
add
mov
int3
in
imul
inc
xchg
mov
and
xlat
lock
add
push
cmp
xlat
test
jno
jnp
icebp
pop
mov
test
arpl
iret
cmc
cli
gs
cmp
or
sbb
adc
or
mov
mov
add
xchg
jge
ret
or
es
dec
inc
sarl
fsub
mov
xlat
enter
xchg
push
xor
ja
sahf
frstor
xchg
sub
jle
lods
sub
loopne
mov
addl
arpl
inc
ret
imul
inc
xchg
mov
je
sbb
or
adc
add
dec
fdivrs
mov
gs
mov
loope
jo
lods
dec
fbld
scas
xchg
sbb
mov
xor
inc
sarb
test
out
cltd
shl
scas
test
and
leave
lds
dec
cmpsb
mov
xchg
popa
mov
data16
in
repz
adc
stos
mov
mov
add
daa
movsl
iret
int
into
js
fstps
bound
imul
jne
mov
adc
sbb
mov
stos
pop
leave
jp
mov
mov
lahf
inc
and
push
and
dec
dec
or
mov
mov
pop
in
jecxz
push
popa
and
iret
cli
clc
in
rorb
xor
in
arpl
xor
imul
aaa
push
mov
pusha
pop
xchg
sbb
dec
adc
outsl
sub
dec
test
adc
jo
mov
imul
in
das
out
ljmp
enter
mov
js
mov
mov
loop
testl
adc
shrb
rorl
xchg
cmpsl
ret
sub
inc
pusha
jl
jo
mov
orl
rcrb
mov
xchg
adc
add
and
dec
call
cs
bound
lock
pop
loope
popa
jge
inc
add
negb
dec
jp
add
xchg
jns
test
push
dec
aaa
mov
and
sbb
xor
lods
xchg
cmc
cmpsb
mov
or
imul
hlt
or
rorl
fsin
in
nop
lea
aaa
pop
idivl
xchg
in
xchg
mov
mov
inc
ds
push
pop
lods
inc
xchg
push
das
or
inc
mov
in
adc
lret
xchg
addl
mov
push
xadd
int3
frstor
and
sub
ret
jb
and
adc
jbe
mov
leave
dec
jmp
jp
adc
jne
mov
aam
dec
add
fmull
das
sbb
xor
xchg
lods
add
movb
cmc
insl
into
push
sub
mov
jb
and
mov
mov
and
int3
add
movsb
adc
push
push
inc
sarb
xor
fcmovnu
and
mov
xchg
or
sub
push
loope
adc
shlb
mov
pop
mov
lds
cs
lods
mov
inc
mov
adc
jno
addl
xchg
fsubrs
fdivrp
fstps
fsts
mov
orl
lea
outsb
data16
das
xor
cmpsl
add
out
cmp
outsb
jmp
mov
clc
mov
ds
stos
cmpb
xor
int3
mov
dec
call
push
fidivs
shlb
mov
or
test
adc
pop
mov
sub
je
and
fwait
stos
popf
jecxz
mov
lcall
arpl
fs
lret
sub
ret
pop
jp
lods
xchg
jne
dec
pop
test
jne
sbb
je
pusha
sub
push
leave
js
xor
add
mov
imul
push
fisubrl
mov
mov
add
add
or
lods
iret
fldenv
sub
testl
sub
js
push
adc
scas
mov
movsb
sbb
xchg
sbb
data16
mov
mov
mov
sub
inc
fcomps
add
or
roll
xor
mov
lods
jge
jl
xchg
hlt
lcall
test
mov
cmpsl
push
cmpsl
add
cwtl
xchg
jge
test
adc
sub
adc
push
fsubr
xchg
cmp
jnp
hlt
dec
js
das
sub
sub
jbe
aam
aad
xchg
fmul
cmp
arpl
aas
sbb
mov
cmpsl
repz
lret
xchg
movsl
test
adc
pop
out
ficomps
je
out
inc
fnstsw
icebp
adc
bound
mov
dec
push
xchg
pop
fistps
inc
lods
test
cmp
insl
xor
mov
lock
mov
sbb
jl
loope
or
stc
push
push
fstl
in
lods
adc
in
insb
cmp
int
lea
pop
out
pop
popf
xchg
repnz
mov
push
lods
xchg
popf
mul
cmpsb
pusha
mov
out
in
in
int
pop
sbb
xchg
jl
xor
aaa
add
xchg
pusha
es
fld
test
cwtl
cltd
aam
cltd
or
xor
mov
jno
cs
jne
inc
in
lahf
pop
loopne
mov
jmp
push
add
filds
jge
sahf
mov
inc
in
test
mov
sub
fstpl
xchg
jns
fildll
jl
jp
mov
and
iret
adc
dec
dec
push
fdivl
rol
push
sarl
sub
lret
rorl
rep
jp
cmp
cmp
sub
push
lahf
hlt
xchg
fbstp
inc
or
cmp
mov
shlb
xor
sub
mov
jo
stos
xor
shl
inc
arpl
stos
mov
pop
and
std
shr
push
ss
outsb
jo
lcall
push
dec
sub
mov
bound
inc
stc
insb
cld
add
jp
lret
and
rcrl
xchg
loop
push
loop
jmp
push
sahf
mov
aaa
in
cmpl
mov
ds
pop
jle
and
jmp
loopne
mov
iret
adc
out
je
add
mov
mov
fildll
lock
pop
ret
mov
in
inc
lds
sbb
inc
mov
xor
pop
push
out
ljmp
or
loop
mov
cltd
xor
mov
cltd
fisttpll
or
push
xor
arpl
cmp
adc
xlat
add
int3
or
xor
aas
cltd
inc
xor
mov
jle
mov
cld
mov
cmp
cmp
sbb
and
cmpsb
inc
mov
dec
mov
nop
stos
mov
jl
jne
andb
popa
mov
xchg
aas
sti
mov
fiadds
cmc
mov
cltd
and
mov
push
dec
jp
pushl
lods
inc
stc
mov
add
lret
sbbl
mov
ret
mov
mov
jp
jnp
inc
push
lods
rcrl
xlat
mov
imull
xchg
out
stc
cmp
rcrl
push
jno
iret
add
hlt
adc
inc
pop
je
push
and
imul
lcall
sub
xchg
xchg
mov
fcoms
dec
test
cmpsb
dec
dec
push
push
iret
sahf
cmp
scas
sub
pop
out
dec
adc
in
hlt
repz
dec
imul
pusha
or
adc
add
adc
mulb
jmp
rclb
test
data16
mov
in
icebp
push
addr16
push
mov
pop
clc
sti
add
or
test
sub
jge
stos
in
dec
jnp
and
je
data16
jbe
std
js
xchg
push
push
std
popl
std
inc
lods
incb
leave
add
push
stos
inc
mov
cmpsb
xchg
jl
pushf
sub
outsl
pop
std
adc
addr16
shlb
mov
push
push
hlt
or
es
stos
fwait
pop
lret
xchg
outsb
mov
out
inc
or
int3
xlat
jp
xor
or
xchg
out
imul
xchg
sub
mov
cs
add
xchg
xchg
neg
mov
xchg
fwait
out
lock
cwtl
xor
jle
mov
dec
mov
mov
xor
int3
xlat
popl
pop
fadds
adc
sbb
cmp
adc
and
sbb
nop
sbbb
test
outsb
or
sbb
fabs
imul
add
imul
push
roll
jno
and
call
xchg
js
std
addr16
rcll
inc
jnp
pop
roll
jp
mov
xchg
mov
scas
push
mov
mov
mov
sti
mov
xchg
fs
pop
ficoms
xchg
add
cs
xchg
jmp
mov
clc
push
push
add
fs
jmp
fadd
mov
jmp
decl
aam
mov
or
or
out
inc
inc
into
jp
sub
cmpsl
xor
xlat
add
movsb
or
sbb
enter
pushf
addr16
test
xchg
adc
adc
ret
cmc
in
xchg
outsl
add
rclb
cmpsl
outsb
add
jo
inc
sbb
imul
mov
jle
push
xchg
cmp
add
and
dec
mov
cmp
fsubl
dec
scas
mov
push
aad
sbb
sarb
mov
repz
lcall
sub
sbb
push
loopne
cmpsl
sbb
les
and
out
ja
xchg
inc
jae
and
cs
gs
call
or
pop
jmp
jp
inc
jp
imul
add
dec
out
mov
fs
add
sbb
push
data16
lret
iret
rorb
xor
cmp
lock
test
loope
ja
mov
jns
or
inc
mov
es
mov
test
lcall
xchg
or
cmp
push
dec
or
and
movsl
mov
in
or
call
sbb
push
or
loope
mov
repnz
sub
sbb
leave
iret
cli
mov
jge
shll
rclb
cwtl
decl
mov
sub
push
inc
stos
jecxz
int
xchg
or
insb
loop
repz
mov
lret
sbb
inc
pop
cmp
adc
and
mov
int3
outsl
ljmp
les
add
push
pop
pop
lds
or
test
adc
fst
js
adc
cmpsl
aas
fwait
pop
test
insl
nop
mov
push
jno
adc
pop
cmp
pushf
ret
add
enter
lods
rolb
cs
stos
xor
bound
aam
andl
int
orb
push
adc
dec
insb
cmc
mov
shl
shrl
push
mov
out
popa
nopl
mov
pop
mov
in
pop
push
push
sbb
jno
add
mov
and
mov
adc
push
pop
lock
push
mov
pop
pop
pop
push
sub
rcll
je
lods
hlt
push
mov
loopne
mov
inc
aas
jl
inc
push
dec
sbb
outsb
jp
in
stos
xchg
xchg
aad
ljmp
fildll
loopne
mov
sti
pop
andb
xchg
inc
insl
xor
dec
adc
cmp
int
push
pop
jae
push
jg
stos
jp
adc
dec
out
pop
aaa
aam
xor
inc
fidivs
xchg
insl
rorb
std
add
lret
xor
mov
sbb
xchg
and
enter
loop
push
or
or
jo
jno
dec
int3
adc
popf
test
cmpsb
push
dec
pusha
stos
jno
add
adc
and
xor
rorl
cmp
sub
pop
orl
lcall
jno
add
adc
and
xor
rorl
cmp
sub
pop
orl
lcall
jo
add
adc
and
xor
rorl
loope,pt
icebp
pop
orb
mov
mov
jne
add
xchg
jp
push
in
cmc
jnp
loope
xchg
pop
xchg
dec
int3
int3
int3
int3
int3
dec
dec
pop
movsb
imul
or
cmp
jmp
sti
push
mov
stos
inc
stos
inc
das
mov
movsb
pop
xchg
jnp
or
sbb
sub
cmp
lret
xor
add
pop
fwait
test
lods
test
popf
adc
int3
cmp
scas
xlat
clc
push
andl
loopne
jmp
inc
and
loopne
bndstx
cmp
mov
jbe
into
lahf
fwait
pop
scas
test
pop
cmpsl
jmp
js
jg
sbb
mov
int3
outsb
add
add
icebp
xor
dec
push
and
lret
insl
loopne
mov
or
popf
mov
in
test
sbbl
in
movsb
mov
and
mov
cmp
fs
outsl
hlt
add
fwait
stos
fidivrs
inc
dec
imul
not
xchg
sbb
mov
mov
jmp
mov
movb
dec
hlt
into
repnz
clc
xor
unpcklps
daa
enter
mov
mov
test
out
hlt
arpl
sub
popf
fisttpll
or
xchg
jae
push
mov
movsb
pop
xchg
add
pop
mov
mov
sahf
imul
cmc
aaa
ret
sub
int3
movsb
sbb
sbb
fidivs
mov
pusha
addl
hlt
or
cmp
and
cmc
aaa
rorl
sub
pop
cwtl
sbb
sub
cmp
lret
xor
and
adc
add
je
fs
push
mov
movsb
imul
sub
cmp
lret
xor
and
adc
add
je
fs
push
mov
and
leave
ja
mov
pushf
mov
mov
or
call
pop
lds
cld
popa
in
cmc
and
jg
loope
mov
push
pop
dec
xchg
jo
sub
pop
insl
mov
fwait
sbb
mov
aam
sub
xchg
mov
popa
xor
mov
fnstsw
cmp
inc
sbbl
inc
cli
fstpt
mov
inc
mov
fildll
pushf
lock
das
dec
inc
dec
xor
sar
movsl
popa
insl
mov
xlat
std
test
add
pusha
ret
mov
out
in
ret
inc
pop
sbb
movl
inc
hlt
or
into
inc
dec
cld
mov
push
mov
or
jmp
pop
xor
mov
xor
or
push
je
mov
ss
dec
sti
push
jp
aaa
fldt
sub
adc
pop
push
popa
popa
sbb
pop
fcoml
shr
nop
stos
pusha
sbb
sbb
lods
mov
sub
push
inc
addr16
cli
xacquire
dec
sbb
pushf
ja
call
cmp
sub
ret
das
js
xor
mov
aad
sbb
scas
adc
movsl
dec
push
or
inc
jg
lcall
and
mov
or
mov
mov
adc
xchg
push
data16
std
mov
xor
outsb
adc
mov
shll
dec
inc
sbb
movsl
and
xor
pop
lret
mov
mov
mov
fsubrl
mov
push
lods
pop
or
testl
inc
aad
lahf
lcall
rcrl
xor
mov
xlat
add
in
scas
js
imul
push
leave
in
jbe
dec
and
add
sub
cmp
cmp
call
std
divl
xorl
sbb
lods
cmp
xlat
inc
and
add
push
out
sarl
or
std
cs
xchg
cmpsl
push
mov
aad
nop
jno
fs
and
dec
jo
mov
imul
inc
aas
push
lds
lods
push
movsl
ret
les
test
jo
xor
mov
jle
dec
vphaddubw
roll
pusha
add
scas
test
arpl
pusha
or
in
fists
cmp
mov
xchg
xor
mov
leave
mov
push
pop
shlb
popf
insl
dec
xchg
sarb
int3
sahf
cli
and
lcall
mov
cli
mov
cmp
imul
pop
mov
mov
mov
inc
mov
cmp
sbb
jle
mov
test
insl
xchg
ret
xchg
nop
out
je
jg
mov
push
mov
dec
lods
loopne
or
xchg
mov
fstpl
fistpl
test
movsl
aaa
jmp
add
pushf
repnz
adc
inc
xchg
sti
mov
sbb
inc
adc
andb
xchg
jne
icebp
and
adc
cs
pop
push
mov
addb
sbb
cmpsb
js
adc
lret
mov
mov
sub
mov
test
movsb
jne
sti
pushf
sub
aad
test
cmp
cmpsl
idivb
fs
cmpsb
iret
pusha
lret
leave
mov
jle
push
cmp
scas
ficompl
push
xor
repnz
dec
loopne
add
rcll
int
push
cwtl
jmp
shlb
movsb
fldcw
fists
pop
push
dec
jae
call
clc
pop
fdivp
movsl
push
adc
jg
sub
prefetch
or
ss
mov
lret
xchg
cmp
int
add
mov
mov
aam
je
mov
icebp
insb
xchg
push
push
mov
xchg
mov
hlt
pop
add
sub
cmp
stos
int
call
xchg
push
ret
mov
vpmaxsq
cmp
sub
cmp
and
cltd
pusha
fwait
inc
push
inc
incl
sub
mov
sar
xchg
jmp
dec
pop
cmp
stos
mov
addr16
mov
cmpsb
jno
mov
push
jp
inc
lahf
stos
dec
jl
push
lret
xor
and
and
jmp
jno
pop
inc
xchg
jne
sbbb
fs
sbb
sub
jge
xlat
jle
add
pop
sbb
in
fisttpll
xchg
jno
xor
clc
popa
mov
scas
cld
inc
out
mov
ljmp
addl
lods
xor
dec
xor
jl
je
jp
push
pop
ja
pop
cmp
cmp
push
add
addb
xor
out
sub
cli
ljmp
inc
adc
sub
jno
cmp
push
mov
aas
sub
repz
test
mov
sti
xor
imul
lods
cmpsb
push
dec
sbb
popl
lock
in
ds
and
dec
inc
fisttpl
jecxz
movsb
jge
clc
hlt
sub
js
jp
or
mov
add
in
aam
add
inc
adc
mov
push
mov
add
scas
push
fs
add
enter
hlt
jae
arpl
ja
insl
test
movsl
pusha
in
roll
mov
mov
popf
arpl
sub
lods
jmp
jp
jle
push
insb
iretw
mov
xchg
xor
aas
adc
sti
sub
push
and
stos
ljmp
mov
fbld
cmp
push
mov
mov
and
rorl
jne
push
rorb
imul
mov
mov
inc
adc
inc
mov
int
xor
mov
sbb
loope
outsb
pop
fiaddl
add
inc
lds
xchg
lahf
pop
notb
mov
andl
dec
aas
pop
pop
mov
dec
test
mov
inc
sub
sbb
xor
stos
lods
pop
arpl
lea
pop
fwait
sub
mov
loope
mov
xchg
ss
sub
lods
int3
xor
push
mov
push
ret
gs
pop
xchg
std
and
int
pushw
pop
jge
sbb
and
pusha
add
sbb
sub
test
sbb
out
sti
or
cld
pop
loopne
cmp
sub
mov
or
xchg
movsl
lret
adc
int
lock
pushf
lods
adc
notb
in
fwait
cmp
loope
push
clc
divb
xchg
mov
sub
jno
jbe
mov
add
pushf
cs
or
popl
rol
push
test
pop
xor
shll
fldt
push
xor
nop
arpl
mov
dec
movsb
adc
jno
add
or
popf
test
mov
inc
js
cmc
call
aaa
test
jp
lea
jecxz
adc
cltd
xor
and
adc
pop
pop
lcall
and
adc
pushf
test
push
lea
inc
add
int3
ljmp
jg
mov
sarb
or
sub
push
test
fadd
sub
jmp
lahf
jb
stos
add
outsb
repnz
mov
cld
imul
sub
xchg
push
sub
mov
mov
jecxz
enter
mov
dec
mov
push
call
sbb
jae
xor
cmp
or
outsl
and
push
fbstp
cmc
testb
mov
std
mov
or
dec
aam
mov
loop
ds
inc
cmpsb
daa
in
ljmp
xor
lahf
push
loopne
mov
or
xchg
xor
mov
insb
and
insl
movsl
mov
cmp
adc
push
mov
push
inc
ss
daa
mov
push
subb
fdivs
mov
daa
push
pop
out
in
lahf
jo
jl
mov
fcmove
adc
adc
fimuls
push
fs
icebp
sub
testl
lcall
mov
mov
push
in
mov
sbb
and
daa
pushf
pop
sub
fabs
pop
or
mov
jmp
test
xchg
lcall
or
cmp
cmp
lea
lss
outsb
gs
mov
lods
sbb
xchg
and
cpuid
shrb
adc
lods
inc
push
xor
pop
xchg
movsb
loopne
jmp
jae
mov
cs
cltd
push
cmc
xor
mov
xor
cmpsb
xor
sub
aas
lea
mov
pop
jb
rcrb
je
das
add
addb
sbbl
test
adc
pop
add
mov
mov
popf
ja
sub
call
xchg
jge
and
gs
xchg
pop
popl
ds
pop
xor
aaa
mov
pusha
push
mov
test
pop
add
and
xchg
std
adc
loopne
push
and
cmp
in
cmp
stc
inc
cmp
sub
dec
and
imul
mov
aad
sti
out
popf
int
call
loopne
inc
fadds
push
ljmp
adcl
nop
or
loop
int3
sub
push
push
pop
push
gs
sahf
mov
or
xor
push
xlat
xchg
daa
or
mov
jl
aam
mov
fnstsw
les
and
or
scas
popa
add
mov
lods
or
mov
pop
js
or
xor
jp
fdivl
bound
xchg
cs
add
lret
psraw
and
aam
push
nop
les
xchg
test
loopne
notb
push
xchg
cmc
sysexit
cmp
ja
dec
cwtl
jo
insb
sub
cli
adcl
sbb
std
enter
push
js
pop
mov
adcb
clc
mov
les
lds
sbb
xchg
push
imul
imul
idivb
lret
xchg
mov
lea
push
int
adc
out
cmp
push
jnp
outsb
loop
or
pop
and
jb
fsubrs
cmc
push
lret
xor
or
push
scas
popf
dec
mov
add
push
popf
push
pop
pop
mov
add
rorl
repnz
aad
in
cltd
pushf
lahf
xchg
inc
xchg
in
outsb
mov
mov
mov
mov
mov
add
cmp
xor
inc
fcmovbe
shl
outsl
jge
mov
cltd
jae
xor
iret
into
inc
es
outsb
bound
xchg
stc
push
push
pop
jno
call
mov
adc
jbe
push
push
test
push
nop
inc
jl
in
xchg
nop
pop
push
movsl
jmp
push
test
dec
push
adc
push
shrl
sar
ret
fwait
nop
pop
sbb
xchg
jmp
fisubs
cmp
mov
fistpl
je
push
rcll
adc
mov
test
mov
ss
sbb
add
es
in
loope
call
push
and
test
hlt
aaa
pop
std
test
das
push
mov
loopne
repnz
into
inc
sub
mov
scas
bound
and
pop
adc
ret
lahf
adc
rdtsc
jecxz
add
hlt
xchg
or
daa
or
cmpsb
mov
gs
jne
xchg
mov
jmp
xor
out
lret
arpl
mov
popa
xorb
xchg
push
adc
xor
dec
out
arpl
mov
mov
xchg
jmp
xor
aaa
cmovs
dec
jg
sahf
xlat
outsl
pop
jecxz
mov
mov
push
pop
filds
scas
pop
fstpt
fbld
mov
mov
pop
push
mov
in
and
add
aam
imul
add
adc
lods
aad
xchg
push
jbe
ds
pusha
or
dec
clc
hlt
mov
xor
xor
lods
js
mov
sti
imul
add
cmc
cmpb
mov
xor
clc
mov
push
or
sub
fcom
lds
jne
dec
mov
jnp
repnz
mov
xor
mov
negl
rolb
dec
lds
dec
daa
push
ds
andl
xchg
adc
je
jmp
adc
adc
adc
sbb
out
push
pusha
mov
mov
mov
shrl
cmp
mov
push
add
xchg
add
and
imul
test
inc
mov
inc
xchg
xor
pop
rolb
call
cmp
inc
stos
add
fstp
in
mov
xor
test
cmpsl
subb
add
xchg
insl
mov
push
dec
jae
rcrb
imul
inc
ljmp
andb
pmulhuw
shrl
cmp
mov
inc
mov
insb
push
ret
divb
jge
cld
das
mov
xor
hlt
mov
mov
cmp
test
lret
shlb
adc
repz
xor
xor
sahf
add
mov
cli
clc
outsb
sbb
mov
pushf
cltd
loope
popa
pop
cmp
dec
test
int
cmp
push
push
stos
xchg
loopne
fildll
addr16
adc
jg
add
sbb
mov
mov
test
mov
ss
pop
sub
ja
insl
repz
sub
aam
push
xchg
cltd
fnstsw
bound
gs
fnstenv
movsl
inc
xchg
sbb
and
mov
sahf
jp
adc
push
xor
lock
int
roll
js
dec
daa
lret
jnp
cmp
or
xlat
dec
lods
out
pusha
pop
sub
mov
push
jnp
fisttps
mov
mov
aam
mov
loop
iret
adc
lock
mov
out
test
out
pop
xor
stc
or
std
push
xchg
push
sub
dec
and
mov
inc
push
push
lea
pusha
lret
xchg
and
lahf
mov
inc
mov
mov
or
mov
pusha
dec
jecxz
xchg
push
xchg
mov
jmp
mov
dec
dec
adc
outsb
out
jns
sub
adc
or
jae
adc
and
sub
out
dec
sbb
mov
cmpsl
sbb
lea
sub
jbe
jl
push
les
jne
dec
mov
pop
xchg
cmp
dec
push
js
scas
cmp
pop
pop
inc
aam
cmpsb
je
sarl
sub
pop
popa
push
aas
inc
add
pop
jns
sub
push
xor
mov
push
test
lret
adc
jge
hlt
jp
jo
scas
aaa
outsb
enter
mov
int3
sbb
push
adc
cmpsb
mov
pop
add
mov
clc
push
mov
insb
mov
push
lock
andl
fistl
mov
dec
fidivs
cmpsb
xor
dec
lock
and
cs
push
mov
icebp
in
sbb
xor
and
aad
sbb
inc
and
lds
dec
daa
mov
ror
daa
adc
outsl
aaa
push
icebp
dec
push
inc
ljmp
mov
push
push
lea
xchg
sbb
fistps
sub
sti
pop
rcr
roll
inc
mov
sub
add
nop
stc
fnsave
or
add
sbb
and
fnstsw
loop
loop
inc
sub
out
xchg
add
flds
add
adc
push
xchg
mov
dec
pop
inc
fstpl
adc
lret
popf
aaa
cmp
ret
cli
shrl
mov
mov
add
xlat
xchg
adc
std
fwait
popa
lret
jg
rcrb
sub
jecxz
inc
pop
shll
loope
pop
adc
push
and
mov
cmp
xchg
ljmp
into
mov
or
mov
jecxz
mov
adc
mov
push
sbb
lds
push
cwtl
jbe
cmp
push
lret
push
mov
testl
pusha
and
mov
jns
sbb
mov
push
nop
mul
fmuls
inc
jle
jb
ja
into
fdivp
mov
int
repnz
dec
daa
std
cmc
dec
adc
mov
add
lahf
fidivrl
flds
pop
popf
outsl
pop
xlat
in
or
inc
jb
xchg
push
pop
mov
in
fcomip
xor
dec
jb
xor
adc
test
or
dec
fcoml
dec
mull
adc
call
dec
cmp
mulb
sub
mov
and
add
shll
cmp
repz
or
bound
mov
insl
sahf
je
std
mov
push
xor
mov
pop
cmc
xchg
and
ja
mov
loope
shlb
mov
vpshuflw
cltd
fcomps
dec
mov
fistps
and
jbe
inc
loop
mov
push
or
sbb
and
hlt
push
lcall
mov
movsl
xlat
cli
jb
not
push
cld
cli
stc
pop
fmull
shl
and
lock
cmp
push
arpl
je
pop
pop
js
fstpl
sbb
cmp
arpl
cmc
scas
cmp
mov
mov
bound
iret
dec
jns
pusha
mov
xor
pusha
repnz
xchg
push
mov
out
cmp
rorb
dec
push
test
arpl
add
inc
xor
lcall
out
arpl
mov
repz
xor
das
adc
mov
inc
ss
repz
jo
mov
mov
inc
insl
cld
les
aas
xor
testl
pop
iret
and
xor
fsubrl
ljmp
dec
std
push
xchg
pop
shlb
mov
or
aad
stc
movsb
iret
xor
iret
dec
pop
mov
pushf
jne
cmp
shl
insl
nop
and
addr16
je
mov
out
ficoms
neg
and
fdivs
out
mov
aaa
or
bound
mov
clc
jmp
xchg
mov
lahf
mov
xlat
cmp
or
cmp
sbb
lods
clc
sub
movsb
push
cwtl
adc
mov
jge
mov
testl
mov
mov
in
sbb
mov
shll
es
lcall
in
pop
mov
out
mov
pop
pop
shr
mov
cltd
adc
cmp
out
and
dec
nop
lahf
xor
negl
mov
icebp
or
pushl
aaa
ljmp
mov
mov
popf
pop
cmpsl
popa
mov
and
rcrb
mov
aad
ja
movsl
mov
fbld
aam
cmp
lret
adc
cltd
int
adcb
adc
filds
inc
mov
movsl
out
fstps
repz
pop
out
inc
cli
pop
or
pop
adc
and
push
cmp
jnp
mov
js
cmp
testl
aas
mov
mov
mov
in
lods
xchg
icebp
pop
sbb
addl
xor
xor
loop
cwtl
sub
lahf
mov
mov
pop
dec
push
shll
inc
inc
xor
dec
and
cltd
inc
mov
jo
mov
lret
lea
xor
pop
or
mov
test
mov
lret
xchg
sub
outsb
faddl
fs
into
and
mov
popf
mov
stos
add
stos
cltd
mov
pop
shlb
in
mov
or
loope
pop
int
cld
imul
hlt
test
adc
jecxz
fstl
lret
push
or
popf
lret
jge
ds
inc
pop
dec
sbb
cltd
adc
and
sti
mov
fidivrs
sub
lret
cmp
ss
jp
jmp
in
scas
push
xor
sub
xchg
mov
sub
mov
mov
sbb
cltd
stc
xor
mov
ja
cmpb
xor
dec
cmp
sbb
xchg
cmpsb
into
sahf
and
cmc
push
inc
popf
aad
into
dec
xor
mull
dec
enter
dec
daa
and
shrb
and
add
dec
sbb
std
mov
aad
scas
in
adc
push
or
lds
xor
mov
shrl
and
leave
fbld
and
jnp
les
subb
test
xchg
xlat
sub
adc
mov
cmp
cmp
mov
cmp
stos
sahf
out
add
imul
arpl
xor
jmp
addb
mov
and
in
popa
mov
mov
repnz
jmp
incb
fisubl
pop
or
cld
bnd
lcall
mov
das
in
inc
sub
iret
dec
xchg
sub
ret
dec
stos
repz
test
dec
dec
push
imul
jne
push
xchg
mov
cld
or
sarl
jecxz
cmp
lods
push
jle
add
fnsaves
int
dec
addr16
addl
lock
xor
sar
mov
es
dec
pushf
dec
inc
xchg
jne
out
es
push
inc
loop
add
lods
lds
cli
inc
pop
imul
sbb
sbb
adc
xchg
adc
fs
loopne
movsl
sti
add
arpl
sub
cltd
cmp
sbb
push
fbstp
mov
imul
repnz
leave
jge
aaa
cmp
xor
sahf
sbb
pop
add
and
lock
add
sbb
stos
ret
push
jge
add
pop
pop
arpl
push
imul
jge
sub
sub
outsb
sbb
shlb
sub
insl
mov
jl
fbstp
ds
cmp
icebp
sbb
mulb
stc
add
ja
jno
faddl
adc
int
outsl
imul
inc
pop
lods
icebp
aam
lods
and
int
mov
mov
mov
fwait
inc
daa
xor
out
sbb
adc
xor
mov
cmp
cmp
out
or
test
push
adc
je
test
inc
sbb
xchg
inc
pop
add
jbe
andb
mov
sti
and
ja
cltd
loop
xlat
pop
hlt
int3
inc
pop
test
push
or
jo
test
pop
cmp
stos
sbb
dec
adc
iret
pop
pop
cmp
outsb
sbb
jge
xor
or
dec
loop
inc
hlt
test
xor
in
mov
in
mov
mov
xchg
jns
repz
xchg
cltd
mov
jbe
mov
cmp
sahf
out
hlt
mov
jo
jp
pop
mov
repz
icebp
cmp
aas
fnstenv
into
cmp
sbb
cmp
adc
leave
js
and
shlb
sti
data16
jnp
jmp
fisttpl
loopne
rep
mov
xor
addb
cli
ljmp
fsubrl
fwait
dec
fiaddl
mov
mov
cmp
pop
mov
bnd
scas
js
in
hlt
loop
cld
aas
call
xchg
pop
sub
fs
xchg
movsb
addr16
push
xchg
outsb
mov
push
movsb
sub
jnp
or
sbb
sub
cmp
lret
xor
and
adc
add
je
fs
push
mov
movsb
imul
sub
cmp
lret
xor
and
adc
add
je
fs
push
mov
movsb
or
in
aam
lret
xor
and
adc
add
stos
push
push
inc
pop
mov
movsb
xor
in
aam
lret
xor
mov
sti
jae
cld
adc
int3
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
idivl
outsb
xlat
pop
dec
add
inc
in
mov
jbe
addr16
push
fiadds
aaa
mov
pop
mov
jle
outsb
xlat
pop
dec
mov
cmpsl
cs
push
xchg
addr16
mov
dec
into
aaa
mov
pop
mov
jle
outsb
iret
pop
fisttps
ds
push
outsb
push
inc
out
or
dec
rorl
mov
xor
int
les
icebp
pusha
pushf
out
mov
dec
aas
jns
and
jbe
sbb
scas
cmp
popf
mov
adc
push
dec
adc
lret
aaa
inc
pop
into
clc
fisttps
sbb
andl
sbb
inc
loop
add
xor
mov
pop
pop
imulb
in
push
xchg
jecxz
dec
aas
cmpsb
cs
and
mov
push
pushf
popa
pop
add
mov
aas
mov
lea
mov
push
iret
scas
daa
push
call
call
cmp
imul
sub
pop
iret
jb
je
pop
mov
jle,pt
outsb
xlat
pop
dec
mov
push
sahf
push
outsb
jg
dec
ficomps
das
mov
pop
out
adc
daa
les
ficoml
pop
ja
or
aaa
filds
gs
push
cwtl
jle
insb
mov
jbe
dec
xchg
imul
fwait
push
mov
dec
lds
arpl
xchg
aaa
mov
cmpsl
cs
push
xchg
ja
addr16
push
fiadds
aaa
mov
pop
mov
jle
outsb
xlat
pop
dec
mov
cmpsl
cs
push
xchg
ja
addr16
push
fiadds
aaa
mov
pop
mov
jle
daa
push
repnz
cld
inc
test
aam
cmp
movb
cmp
xchg
pop
dec
sbbl
push
push
popf
nop
inc
shrb
xor
jg
sub
movsl
test
xlat
pop
xchg
out
mov
pop
cmpsl
mov
mov
lea
and
cmpsl
pop
rcrb
mov
push
aaa
mov
loopne
shr
pop
or
mov
push
pop
pop
push
push
data16
mov
int
loope
ret
pop
int3
lods
cs
sti
sbbb
out
mov
repz
or
mov
aas
adc
repnz
fs
aaa
xor
mov
xchg
popa
testl
out
ret
leave
and
js
dec
stc
out
cmpsl
pop
into
pop
cld
cmp
adc
xchg
xor
sbb
push
xchg
rcll
jg
xchg
and
push
dec
or
fisubl
out
inc
mov
adc
mov
lods
pop
lea
test
clc
cltd
aaa
pop
adcb
shll
mov
dec
test
mov
cmc
test
and
movsl
test
pop
mov
xchg
inc
out
pop
faddl
test
inc
cli
std
lret
xchg
lret
bswap
in
xor
cmp
cmp
mov
xchg
add
arpl
and
clc
bound
xchg
push
loope
inc
xchg
ja
mov
mov
push
or
divb
xor
repnz
push
shlb
dec
and
mov
lcall
adc
inc
mov
or
scas
inc
dec
mov
sbb
and
repnz
stc
jb
daa
mov
sub
inc
mov
adcl
inc
in
adc
out
pop
mov
pop
and
sub
nop
adc
out
popf
inc
bound
or
pop
add
mov
adc
out
in
xchg
adcb
in
xchg
or
or
imul
jge
dec
inc
iret
xchg
out
xor
fidivl
push
push
fsubrs
mov
mov
xchg
sarb
ljmp
inc
sbb
cmp
pusha
aad
int
jecxz
mov
shlb
mov
loopne
test
pop
cmc
jge
mov
lret
mov
push
jmp
in
dec
mov
inc
clc
and
push
jp
and
or
test
aaa
hlt
push
clc
ret
mov
cmc
call
dec
ljmp
lcall
inc
mov
bound
outsl
push
mov
cmp
cmp
test
mov
call
ljmp
push
mov
dec
fisubl
push
std
test
inc
mov
outsl
aam
cmp
das
shll
mov
pop
lock
dec
jne
jae
pop
dec
rcrl
and
or
clc
xor
mull
cmp
dec
and
jmp
aad
enter
mov
insl
mov
cwtl
mov
mov
imul
test
mov
cmp
repz
arpl
sti
out
dec
stos
pop
pop
loop
push
pop
mov
push
xchg
je
sbb
add
out
lret
pop
dec
adc
fimull
mov
mov
or
xor
rclb
cwtl
push
inc
lret
pop
and
xchg
mov
sbb
pop
and
sti
imul
or
js
test
and
sbb
loope
loopnew
mov
sub
mov
popa
jle
cmp
pop
hlt
fdivrs
mov
stos
movzbl
ljmp
loopne
outsb
xor
adc
fs
sbb
je
mov
dec
test
dec
inc
iret
xor
ljmp
pop
xchg
imul
sar
mov
in
lahf
xor
jo
pop
in
sub
xor
das
cltd
mov
loop
jmp
aam
mov
pop
add
sub
inc
and
add
int
dec
hlt
and
jmp
dec
data16
jb
mov
outsl
push
jns
scas
dec
repz
iret
dec
xor
adc
test
into
and
pop
cmp
adc
movsb
in
pop
sbb
jno
aad
imul
xchg
mov
sarl
add
pop
mov
lret
lea
in
xor
rorb
mov
adc
cli
dec
fdiv
sbb
and
pop
inc
inc
cmpsb
inc
repz
dec
in
cmp
jl
cmp
test
add
pop
pop
xor
or
pop
inc
dec
aad
dec
adc
dec
inc
fs
mov
cwtl
xchg
lret
or
addr16
adc
test
push
or
and
pop
add
mov
sub
adc
xchg
mov
jg
cmp
les
mov
push
mov
cmp
add
jle
or
sub
pop
jl
or
cmp
aam
xchg
xlat
test
pushf
and
mov
xchg
iret
cld
and
mov
xorb
loop
dec
cmpsl
mov
dec
or
jns
add
loope
movsl
cmpsl
or
or
and
cmc
xchg
mov
ficoml
notb
loop
pushf
jae
mov
je
fstps
inc
mov
push
pop
add
xchg
mulb
rcrl
adc
sahf
dec
jnp
mov
cmp
sub
pop
xchg
iret
pop
insb
sarb
dec
cmp
sahf
lea
mov
pop
mov
ret
repz
ffree
sub
test
arpl
and
shll
pop
into
ret
dec
andl
push
pop
fwait
aaa
jl
hlt
aaa
cli
shlb
pop
inc
pop
in
ret
fs
jae
imul
mov
xchg
pusha
push
inc
or
or
sub
outsl
pop
jbe
push
mov
lock
imul
out
sub
rcll
xlat
xchg
movsl
cltd
cmp
mov
inc
lods
push
add
ja
xlat
xor
mov
mov
sahf
jno
cmpsb
pop
xor
rcrl
stc
addr16
dec
sbb
pop
fstpt
mov
jg
pop
and
stc
mov
repz
fwait
adc
jo
mov
adc
loop
out
stos
mov
mov
jno
or
stc
sbb
enter
fdivs
rcr
out
xor
mov
mov
xchg
mov
cmpsl
outsl
jg
call
and
inc
push
aas
sub
dec
xchg
jne
xor
je,pn
lds
addl
sub
lock
mov
fmull
call
outsb
cmp
cmpsl
mov
adc
dec
imul
int3
insl
mov
sbb
insb
hlt
rcr
cmpsl
aad
sarb
aaa
ss
sti
mov
sbb
jg
xor
in
ficomps
mov
adc
ret
add
push
scas
rcl
jecxz
dec
cmp
mov
shlb
pushl
xor
xchg
fs
xor
aas
mov
iret
cmp
rorb
fsubrs
or
jno
sub
xchg
or
cli
je
andl
dec
daa
lret
out
dec
aas
aas
jp
or
push
push
test
xchg
jns
out
xchg
fdivl
in
and
aad
push
dec
push
adc
in
mov
imul
int
push
adcb
dec
lcall
push
jl
sbb
pop
jg
out
imul
lret
push
mov
push
xchg
jp
test
aaa
adc
popf
mov
enter
leave
dec
addl
lret
adc
mov
popf
dec
fdivrs
pop
pop
push
pushf
mov
stos
sbb
addr16
inc
xor
in
mov
push
sub
sahf
adc
sub
sub
out
and
mov
imul
test
inc
jo
cltd
mov
lods
xchg
dec
mov
ljmp
dec
lea
sbb
cmpsb
adc
xchg
xor
aas
mov
test
cli
xchg
adcl
cwtl
cwtl
jle
imul
sbb
pop
insl
push
adc
movsb
in
xchg
dec
push
dec
in
pop
mov
add
mov
loopne
je
jne
popf
popa
sbb
ffreep
pushf
insl
cli
mov
push
hlt
std
mov
cmp
mov
push
xchg
cwtl
std
pop
pop
repz
pop
xor
pushf
test
xlat
cmpsl
inc
or
pop
es
jbe
shlb
lahf
mov
sbb
mov
cli
daa
add
sub
jo
int3
cmp
fldl
int3
faddl
pop
repz
xor
xor
cmpsl
sub
bound
mov
jp
cltd
fstl
jne
mov
or
hlt
adc
fisttps
fsts
xor
sub
negl
push
sti
add
fmull
pop
in
mov
dec
and
int
and
push
or
out
mov
cltd
push
fwait
out
shll
aam
sub
test
fwait
or
xchg
mov
jmp
jno
pop
aam
mov
cmp
shll
pop
popw
mov
inc
push
inc
xchg
das
insl
jne
mov
stc
pop
loopne
jmp
pop
fimull
jmp
fimull
pop
test
cld
mov
aad
icebp
mov
fcmovnu
lds
jae
out
xor
cmp
pop
adc
stos
jb
mov
mov
andl
mov
dec
aas
out
mov
xchg
gs
out
and
nop
stc
test
jl
std
cs
add
stc
mov
cltd
xchg
or
jbe
or
push
dec
sbb
push
mov
mov
push
nop
sub
and
jbe
aas
dec
xor
sbbl
xorb
and
sbb
ret
lods
fs
jmp
mov
icebp
push
adc
pop
lods
inc
and
icebp
xor
mov
ljmp
cwtl
inc
pop
mov
sahf
jnp
cmp
out
mov
inc
or
lahf
or
xchg
push
lods
or
bound
xchg
imul
sub
daa
test
fcoms
xchg
shrl
add
and
dec
pop
cli
dec
sbb
mov
dec
subl
insb
push
cld
out
iret
jecxz
push
sub
sub
xor
xchg
push
jne
pop
popf
xchg
pop
fsubrl
mov
jno
dec
push
mov
jne
inc
aam
das
or
lds
or
push
fildll
sub
cmc
insb
pop
je
and
bound
adc
xor
es
push
cs
push
sbb
mov
mov
pop
pop
sub
pop
testl
sub
idivl
and
insl
fldt
pop
add
mov
pop
mov
int
mov
fisubl
dec
cmpsl
cld
fs
push
push
sbb
cmp
aad
inc
xor
pop
cmp
sahf
mov
xor
inc
loope
dec
xor
push
sub
inc
sbb
fs
or
lret
push
insl
mov
lret
cli
hlt
mov
arpl
es
push
pop
jo
and
addr16
and
jmp
push
or
in
xchg
add
shll
mov
out
inc
ret
les
addr16
or
bound
push
sbb
lret
mov
cmpsb
test
inc
xlat
mov
mov
jnp
cmpsb
jp
sahf
lods
or
lock
fnstsw
adc
inc
lret
movsb
shld
loopne
mov
sbb
dec
int
xchg
dec
xor
ror
pop
lcall
cmp
cltd
sub
leave
xchg
jae
test
mov
je
mov
jns
push
hlt
stos
xlat
dec
sub
pop
adc
call
ja
out
daa
sbbl
lahf
jmp
fldl
test
add
add
pop
push
or
push
iret
push
push
push
testl
mov
test
loopne
es
xor
push
push
cli
xor
in
push
ss
mov
mov
shrl
sub
testb
adc
lock
sbb
jg
push
iret
or
in
inc
test
stos
jno
enter
sti
decl
mov
pop
mov
cmp
daa
fistps
arpl
mov
or
lods
lret
aas
sbb
sub
sarb
notb
les
rcll
and
and
sahf
mov
arpl
inc
inc
cs
sbb
dec
adcl
js
xchg
xchg
movsb
mov
insb
shrb
leave
out
pop
sbb
mov
dec
nop
sub
add
jne
jge
jnp
inc
cmp
mov
adc
sbb
push
push
or
cmpsl
mov
jg
gs
jmp
out
mov
inc
lahf
mov
adc
or
cld
jno
lret
push
aas
add
jge
inc
mov
and
jo
ret
or
jbe
aas
mov
dec
loope
push
xor
dec
cmc
inc
adc
andl
outsl
pop
bound
fldt
add
fimuls
push
or
popa
in
hlt
cmpsb
push
aad
stos
inc
mov
mov
add
xchg
in
loop
imul
xchg
ljmp
xor
es
adc
movsb
movsl
push
les
xor
test
sbb
inc
data16
mov
loope
cmpsb
pop
les
jns
pusha
outsl
stc
add
jmp
leave
call
sub
cli
inc
rolb
in
cmp
pop
jecxz
sub
adc
mov
xchg
and
nop
cwtl
add
push
push
sub
mov
sbb
mov
pop
mov
test
arpl
jbe
in
mov
push
mov
and
xchg
outsl
filds
mov
jg
push
xor
mov
add
ljmp
mov
scas
pop
loop
aaa
sbb
cld
test
mov
and
sbb
cmpsl
jecxz
jae
test
sbb
daa
jnp
bnd
mov
push
adc
aas
dec
jecxz
lcall
repnz
fdiv
inc
push
pusha
xor
sti
rcrl
add
daa
mov
xchg
xchg
xchg
inc
fdivl
jl
lea
sbb
repnz
pop
adc
call
inc
lds
adc
adc
mov
dec
sti
ljmp
fadd
xor
xchg
pop
lds
or
out
icebp
sbb
xchg
iret
jb
gs
outsb
mov
lods
aam
lock
sbb
xor
lods
sbb
bound
movsl
mov
jl
pop
cld
aas
incl
pop
mov
ss
pop
xchg
xchg
roll
fwait
negl
xchg
mov
ret
xor
insb
pop
int3
jg
stc
jg
mov
hlt
or
outsl
sub
rol
jno
jecxz
pop
test
fcmovnbe
mov
and
push
sub
mov
popf
rorb
pop
mov
nop
push
inc
and
push
inc
or
lcall
pop
mov
xchg
dec
xor
les
adc
hlt
and
arpl
sti
fstl
mov
sub
mov
pop
mov
aaa
int
in
or
loopne
push
jmp
cmp
fs
popa
xchg
shrb
or
out
jae
imul
bound
inc
aas
clc
jbe
std
fptan
mov
add
rcl
aaa
xchg
stos
sarl
add
out
test
sub
inc
es
fldpi
stos
jge
icebp
sbb
js
jmp
in
aam
dec
or
and
mov
push
jge
pop
cmp
out
adc
testl
test
icebp
loope
pop
gs
sbb
lret
mov
sbb
mov
sarl
cmc
pusha
call
shufps
lods
xchg
jb
cmpb
cmp
sub
imull
cli
mov
inc
imul
adc
sbb
jne
dec
enter
fs
and
cs
outsl
fcmove
lods
dec
sub
cmp
pop
mov
clc
sub
pushf
loope
popf
lods
sub
pop
test
xchg
repz
jae
cmpsl
lods
jbe
stos
dec
or
mov
mov
popa
pop
out
mov
jno
mov
sarl
inc
sub
and
push
jo
sub
sti
sar
call
or
inc
cwtl
and
xchg
lahf
rolb
cs
push
ja
and
sbb
push
jecxz
cwtl
or
or
or
int
inc
pop
mov
pop
ss
cmc
out
out
call
clc
xor
inc
xor
outsb
out
js
xchg
xor
hlt
jmp
pusha
mov
add
aaa
inc
cs
cmp
or
std
sub
push
push
xor
stos
mov
dec
mov
pusha
daa
repz
fimull
mov
pop
rcr
cli
cmp
es
in
mov
dec
dec
adc
adc
out
mov
pushf
insb
and
sahf
testl
scas
inc
fisubl
push
adc
lret
subl
mov
in
loope
pop
icebp
lcall
mov
jg
bound
negl
arpl
js
cwtl
ret
jmp
ficompl
mov
adcb
fstpl
lahf
mov
into
je
inc
ret
fldt
jno
scas
ror
fcoms
mov
in
mov
rcll
xor
pusha
inc
mov
cmp
and
sub
das
pop
inc
dec
lea
lret
ljmp
mov
inc
pop
clc
rorb
mov
inc
xor
push
bound
xlat
stc
nop
mov
js
popf
mov
xor
pop
lods
add
cmc
sbb
ds
loope
mov
jecxz
sti
jae
test
daa
out
out
mov
test
and
arpl
cltd
add
stos
std
mov
fcmovnu
jnp
xchg
or
orl
add
cmp
mov
clc
loop
jge
mov
addl
bound
xor
into
pop
push
jg
movsl
or
nop
iret
cmpsl
daa
fldenv
xchg
imul
adc
hlt
pop
aaa
out
or
add
cmp
or
inc
xor
cmp
sbb
add
mov
ret
lock
je
cld
divb
das
loope
jecxz
movsl
loop
adc
popa
push
push
ret
sarb
stos
and
lret
cmp
int
insb
cltd
xchg
mov
cmpsl
test
sbb
xchg
push
dec
push
mov
jle
adc
mov
jne
sub
int3
cmpb
shl
lods
test
fisttpl
das
jecxz
repnz
xchg
addr16
jle
cmp
data16
bound
pop
mov
adc
lock
aas
outsb
add
lea
bound
adcl
add
or
orl
int
and
call
enter
jge
gs
mov
data16
loope
jle
inc
add
adc
test
and
outsl
mov
xor
push
clc
xlat
je
xchg
or
sub
outsl
mov
popf
and
in
in
je
pop
cwtl
cmp
push
jno
js
sbb
and
push
leave
or
jle
in
mov
movq
clc
adc
mov
sub
lds
xchg
inc
aad
fimull
sub
and
cmp
test
xchg
or
movlps
stc
lcall
or
push
mov
imul
xchg
push
jo
stc
jnp,pn
pushf
stos
sbb
je
lds
repnz
in
jns
dec
cltd
mov
loopne
sahf
fwait
movsb
aad
subb
or
xlat
and
jb
test
ret
sbb
cmc
push
es
mov
add
pusha
pop
cmp
fistpl
and
je
adc
and
add
lahf
add
mov
xchg
jl
cmpsl
or
fs
cmp
jmp
cmpsb
mov
ss
dec
rcrb
ljmp
outsb
sbb
adc
push
push
popa
and
sarb
xor
lahf
daa
fldt
test
in
lahf
adc
xchg
imul
dec
xor
mov
imul
sbb
fcompl
ret
ret
sar
lods
or
jecxz
mov
cmpsb
fmul
das
and
inc
pusha
inc
inc
pop
cmovbe
and
cli
sti
cwtl
xchg
data16
fldt
sub
arpl
push
xor
adc
xchg
shll
filds
inc
jne
and
sar
rcll
ss
popl
cmp
xchg
stc
std
aad
test
loop
lahf
in
fsts
mov
ret
ss
inc
notl
bound
jecxz
xchg
into
mov
jae
clc
mov
sbb
sub
mov
xchg
push
or
sbb
mov
shll
xchg
in
fsubrl
in
push
pop
jl
movntps
lret
jb
lret
mov
out
jb
movsb
jno
mov
mov
inc
fbld
test
fisubrl
push
mov
xor
aas
shll
pop
push
and
push
pop
lret
rep
out
insb
pushf
loopne
arpl
ja
notb
push
xchg
sbb
push
andl
mov
mov
in
mov
cmpsb
inc
xchg
or
sbbb
pop
xchg
mov
mov
jno
adc
movsb
repnz
sbb
dec
ret
adc
pop
or
mov
mov
in
xchg
or
add
cmp
aas
dec
and
jbe
loope
cmpsl
ds
push
inc
cmpsb
add
test
imul
xchg
mov
ret
call
aas
sar
inc
sub
mov
mov
cmpb
scas
dec
adc
int3
push
adc
fcoml
into
in
and
inc
pop
sbb
dec
movl
push
mov
cmp
add
fdivrl
ljmp
in
sub
jmp
jb
mov
mov
lcall
fwait
incl
or
xchg
leave
ds
shlb
sub
mov
pop
in
lods
dec
xor
idivb
xchg
jae
add
mov
or
loope
inc
aas
fwait
pop
mov
and
cmp
lret
inc
js
jecxz
cld
ss
lods
sahf
ret
sub
and
scas
push
sub
test
scas
insl
mov
iret
lret
jl
pop
jmp
mov
pop
mov
or
cld
inc
xchg
lea
mov
sub
xchg
pop
xchg
pop
or
mov
mov
xchg
fldenv
inc
pop
mov
ficomps
movsl
aaa
or
dec
cmp
add
lods
sti
outsb
fstpl
dec
mov
cmpsl
cs
push
xchg
ja
addr16
push
fiadds
aaa
mov
pop
mov
jle
outsb
xlat
pop
dec
mov
cmpsl
cs
push
xchg
ja
addr16
push
fiadds
aaa
mov
pop
mov
jle
out
xlat
faddp
dec
mov
cmpsl
scas
xchg
push
xchg
ja
addr16
push
fiadds
aaa
mov
add
outsb
pop
dec
mov
cmpsl
cs
push
pop
push
mov
cwtl
inc
std
fiadds
inc
ss
push
call
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
popa
xor
inc
adc
das
ds
add
inc
loope
icebp
mov
mov
rclb
and
push
add
jb
bound
push
adc
loope
icebp
mov
mov
rclb
and
push
add
jb
bound
push
adc
mov
xorl
mov
jno
xor
add
xor
fldl2e
leave
and
xlat
or
cli
sub
rcrl
mov
faddl
or
dec
pop
fistps
xchg
repnz
sub
xor
das
mov
add
jp
loop
mov
fwait
das
ds
mov
loop
push
push
jp
ja
push
aaa
cmp
push
and
and
cmp
loope
loope
dec
push
mull
repnz
fcoms
jb
inc
imul
icebp
dec
or
xchg
mov
popa
rolb
push
add
stos
pop
lcall
push
xchg
popf
repnz
adc
jno
inc
adc
and
bound
push
adc
mov
mov
mov
rclb
arpl
xor
dec
pop
js
fs
push
mov
idivl
xchg
stos
lds
ja
add
pop
add
adc
test
repz
pushf
in
repz
push
pusha
push
and
bound
push
adc
mov
mov
mov
rclb
and
push
add
jb
bound
push
adc
mov
mov
mov
rclb
dec
cli
pushl
sti
push
iret
adc
jle
aam
or
add
or
mov
ja
push
std
jae
adc
int
sahf
insl
cmp
and
sub
pop
sbb
mov
frstor
enter
ficoms
iret
jne
dec
jb
push
push
sbb
addl
cli
aas
add
insb
cmp
jp
xchg
mov
mov
pop
jae
addr16
ds
and
mov
mov
icebp
mov
fwait
lods
fimull
push
jb
jne
aaa
into
sub
mov
test
cmp
mov
cmp
cmp
dec
shll
dec
add
or
ljmp
sbb
lret
ds
idivl
int3
daa
aaa
mov
sti
lods
jge
lock
push
mov
fs
fsubs
pop
lcall
icebp
in
sbb
mov
inc
ret
sub
pop
add
js
arpl
mov
dec
add
cmpsl
xlat
dec
lahf
jg
and
xlat
push
cltd
mov
mov
fnstcw
int
and
mov
stc
ja
ljmp
jmp
sub
pop
jae
push
test
pop
sarl
imul
ret
xor
fstpl
aad
outsb
jno
lds
test
mov
push
jnp
rcll
cld
or
repz
xor
fstpt
xor
mov
inc
mov
fs
shll
cmp
fildl
pop
mov
addb
add
mov
outsl
mov
xor
ficoms
aas
lock
cwtl
aas
data16
mov
fiaddl
pop
stos
and
dec
dec
cld
and
push
jp
movb
shl
pop
dec
mov
inc
lods
dec
cmc
into
lods
xor
mov
cmpsl
jl
adc
les
jmp
andl
les
pop
mov
dec
xchg
scas
test
push
stc
jge
fisttpll
dec
notl
lods
pop
inc
ljmp
cltd
sub
bound
scas
repz
mov
inc
xor
aaa
gs
mov
dec
lcall
push
loope
jo
xor
jns
sub
aas
stos
imul
cs
xor
mov
test
out
pop
cmpsl
dec
cs
out
das
and
pop
xor
push
dec
out
push
xchg
add
mov
push
jns
mov
mov
add
and
ds
adc
and
sbb
inc
in
int3
iret
cmp
jle
jno
push
insl
cmp
sahf
negl
mov
call
dec
inc
mov
xor
add
in
sarb
adc
cmp
push
mov
inc
mov
jl
es
xchg
adc
jmp
pop
cmp
std
iret
stos
add
rorb
adc
push
popf
xchg
fs
fisubs
fwait
jno
cmp
testb
fdivl
cmpsl
adcl
jg
rcpps
jg
dec
incb
and
jae
jns
movsb
insb
std
push
mov
and
test
mov
lahf
adc
xchg
in
inc
test
imul
xor
push
out
cmp
add
enter
push
xor
cltd
xchg
fadd
jns
xchg
ja
sub
inc
cmpsb
push
mov
pusha
pop
mov
xchg
and
dec
xor
and
aam
dec
mov
std
lds
mov
in
xchg
test
mov
in
pop
sbb
andl
jne
cmp
int3
cmpsl
sub
push
push
mov
imul
and
pop
and
inc
lock
imulb
inc
mov
cld
pop
add
lods
cmp
shlb
sbb
popa
push
insb
cmp
sti
lds
sub
and
ds
sti
mov
inc
mov
test
hlt
mov
ljmp
lock
dec
xchg
fxch
push
mov
adc
aaa
sub
or
mov
pop
mov
mov
jle
test
out
mov
loope
in
cli
imul
stc
subl
stc
dec
add
les
and
out
inc
sbb
je
aaa
pop
cmpsb
notb
shll
xchg
sbb
inc
xor
bound
jecxz
jne
inc
mov
pop
and
ljmp
push
es
inc
sub
dec
flds
in
scas
loop
push
fcmove
add
sub
dec
nop
jno
push
mov
loope
or
bound
fbstp
shll
inc
push
test
mov
sar
es
pushf
push
aas
decb
add
dec
sub
jle
outsb
ljmp
inc
pop
jmp
cltd
jp
mov
mov
imul
cmpsb
lods
out
mov
cmpsb
jg
lahf
in
test
aam
lahf
adc
cmpsb
sub
jge
cli
test
and
push
popf
push
xchg
mulb
adc
cmp
jne
mov
xchg
mov
jns
pop
int3
ljmp
jb
test
sbb
fsubs
loope
addb
cmp
iret
ljmp
ret
nop
push
nop
cmp
js
das
bound
push
jnp
rolb
xchg
rcrb
movb
dec
repz
test
dec
pop
inc
aam
mov
xor
jne
xchg
jmp
shll
adc
repz
pop
popf
sbb
jecxz
dec
dec
mov
mov
jecxz
aaa
push
lret
out
mov
xlat
xchg
out
lret
shll
pop
cmp
shlb
xchg
jg
cmp
sbb
pusha
cmp
out
leave
pop
enter
push
pop
jae
arpl
add
aad
clc
cmpsb
xor
mov
jp
mov
aam
arpl
pop
ds
lahf
pushf
dec
and
jbe
ret
int3
call
adc
insb
inc
add
pop
push
cmpsb
aaa
fs
loop
lcall
cmp
or
add
pop
test
dec
loopne
frstor
push
stc
sub
add
and
pop
mov
cmpsb
ss
dec
inc
or
jge
sbb
inc
cwtl
ds
loopne
or
subl
adc
sti
add
fistpll
sbb
scas
movsl
add
je
push
sub
mov
sbb
js
add
cltd
sub
push
sub
into
mov
in
out
pop
or
sbb
mov
cmp
in
outsl
mov
adc
iret
or
mov
add
sub
sbb
or
pop
mov
data16
icebp
sbbb
lcall
sarb
pop
lea
mov
dec
sbb
jo
popf
pop
xchg
pop
popf
sbb
mov
shlb
pop
jg
jbe
inc
xchg
mov
add
pop
mov
scas
mov
fnstenv
or
pop
xchg
sub
clc
push
in
xor
adc
cmp
outsl
test
mov
add
das
fidivs
jp
jmp
mov
dec
xorl
ja
mov
inc
pop
cmp
xchg
aam
sub
cs
mov
fwait
inc
shll
jg
fidivrs
je
aad
int
ror
ds
test
addb
add
mov
dec
and
fdivl
ret
cli
pop
dec
xlat
sub
xor
push
je
scas
lods
popa
nop
push
mov
cs
mov
in
jg
jge
cmpsb
fimull
int3
cmp
xchg
lret
ss
sbb
clc
push
lock
xchg
mov
sarb
inc
xchg
sub
imul
xor
fldl
mov
hlt
cmp
adc
xor
lods
cmp
adc
call
stc
inc
dec
and
jo
and
pop
xor
out
and
leave
inc
mov
fimuls
mov
dec
pop
in
xchg
aaa
xor
lret
sub
inc
stos
mov
sub
mov
stos
sarl
sub
outsb
and
fwait
push
and
xor
cwtl
mov
adc
inc
mov
repnz
pushl
repz
das
xchg
jo
xor
cmp
inc
inc
dec
in
out
or
add
je
add
popa
jge
mov
ss
leave
adc
in
lret
inc
and
out
data16
nop
aad
inc
jp
inc
cld
xchg
inc
cmpl
push
gs
xchg
inc
pop
mov
xchg
in
inc
xor
cld
imul
cmp
pusha
mov
mov
jp
pop
stc
scas
insl
fdivrl
sbb
add
inc
cli
xor
mov
mov
jl
pop
xor
xor
and
rolb
xchg
push
js
lock
outsl
out
pop
adc
ds
fs
stos
lea
or
xchg
std
xor
stos
lods
adc
lods
in
and
mov
shll
pop
leave
loop
imul
int3
das
jbe
adc
jo
push
xchg
lock
out
enter
push
jns
sub
or
jbe
jb
pop
cmpsl
ficomps
aaa
push
imul
xorl
cmp
outsb
xchg
jb
test
int3
cmpsb
and
fldcw
xor
out
insl
add
jle
sbb
ja
movsb
pop
and
lret
mull
mov
mov
push
vhsubpd
imulb
push
mov
xchg
cltd
mov
mov
xchg
push
clc
pop
dec
mov
xchg
xchg
in
jns
or
nop
das
cmp
insl
and
lea
mov
movsl
xchg
and
push
xchg
adc
mov
dec
sbb
clc
sbb
mov
icebp
out
mov
addr16
xchg
and
xchg
int3
dec
mov
divb
addb
ret
ret
adc
xchg
ljmp
arpl
cmp
adc
jl
or
pushf
lods
and
test
adc
xchg
pop
dec
testl
xchg
and
icebp
leave
shrl
ja
jns
imul
xchg
dec
add
loopne
xlat
test
das
std
pop
and
xchg
inc
scas
push
adc
lret
in
std
ljmp
pop
ret
es
sbb
cmc
push
xorb
push
ljmp
sbb
divb
std
ja
jp
js
mov
ss
fs
or
inc
push
jecxz
fmul
add
arpl
pop
mov
fiadds
dec
loopne
leave
mov
sbb
ds
test
int
cmp
cmp
data16
scas
cmp
pop
mov
les
mov
mov
push
ret
xchg
lcall
es
aad
sbb
xlat
pop
jl
push
cmp
add
out
and
and
pop
adc
dec
fisubrs
and
mov
sbb
add
mov
pushf
js
decb
mov
add
cmp
cli
and
mov
popf
add
cmp
adc
nop
xor
add
fiaddl
mov
xchg
mov
and
daa
mov
aaa
into
ret
or
or
test
clc
add
inc
mov
jb
aad
mov
xor
xchg
adc
cltd
testb
xor
xor
movsb
in
mov
sbb
push
push
cmp
into
jnp
cs
mov
sti
sahf
or
cwtl
imulb
int3
jae
jne
and
leave
jle
xor
stos
repz
inc
enter
jae
cmp
aam
mov
push
and
adc
xchg
adc
aaa
gs
xlat
cmp
and
xchg
cmpsb
das
jl
repnz
push
fs
and
arpl
jge
stc
arpl
dec
stos
jge
mov
popf
adc
out
inc
dec
frstor
mov
xchg
scas
or
dec
and
mov
test
jns
arpl
cmc
inc
jge
push
jl
mov
lds
imul
cmp
stc
daa
rcrl
shll
push
adc
dec
icebp
lcall
lcall
in
loope
and
or
pop
int
test
mov
insl
aas
out
push
xor
data16
mov
and
add
cltd
out
xchg
sub
and
aas
addr16
push
pop
mov
sbb
or
add
jno
lods
jmp
les
or
xor
sbb
add
jmp
mov
sbb
xchg
adc
cli
cltd
das
push
sub
mov
test
fninit
int
sub
andb
add
outsb
ficoml
adc
in
cmp
movsl
mov
mov
fstps
imul
popf
fiaddl
fwait
adc
jb
jns
aad
repz
jg
mov
loope
aad
aam
xchg
out
sub
gs
and
in
test
fprem1
push
or
mov
pusha
icebp
xchg
movsl
subb
pop
inc
or
add
cltd
jg
sub
outsl
jle
xchg
fwait
mov
xchg
jns
sub
cmp
cmp
jp
gs
inc
mov
push
jno
popf
fs
fsubrl
ds
nop
aaa
hlt
mov
xor
dec
adc
pop
mov
or
out
shll
in
add
jecxz
jle
pop
jns
in
sbb
or
leave
ss
cmp
cwtl
sbb
and
lret
daa
hlt
loope
loopne
data16
jmp
call
inc
cld
lahf
push
cmp
sub
test
sub
fildll
xchg
cmp
fnsave
pop
cli
dec
pop
ljmp
sbb
roll
jnp
testb
inc
jmp
dec
jmp
ljmp
pop
jl
cld
gs
and
sbb
out
fucomip
mov
cmpsl
out
mov
adc
mov
aam
inc
pop
push
stc
add
push
testl
pop
mov
mov
pop
outsb
jae
scas
outsb
mov
clc
hlt
mov
nop
or
xlat
and
repnz
lock
stos
sahf
push
inc
in
xchg
mov
pop
mov
nop
inc
fmuls
rclb
push
push
xchg
sbb
cmpsw
inc
orb
xlat
mov
mov
add
cmpsl
int
pop
pop
push
adc
mov
inc
and
movsb
mov
loop
adc
in
test
and
sbb
cmp
ret
jg
sub
ret
dec
cmp
adc
cltd
aaa
out
dec
dec
clc
inc
xor
loop
mov
pop
jbe
shrb
pop
mov
jnp
movsb
xchg
ja
ljmp
jne
and
inc
xchg
mov
not
xlat
ret
cmp
data16
inc
cwtl
wrmsr
mov
in
jmp
add
adc
fs
test
vandnpd
loop
in
jecxz
push
fadds
and
ljmp
dec
imul
mov
mov
fisubrl
insb
lock
mov
pop
dec
and
or
inc
aas
out
adc
and
mov
test
das
jecxz
out
outsb
add
out
shrl
jge
dec
xchg
sbb
lahf
push
fldcw
int
mov
fwait
test
loope
dec
out
cld
clc
lret
scas
push
xor
fimuls
clc
adc
xchg
rolb
inc
je
notl
aaa
aad
cltd
sbb
sub
pop
sub
in
push
mov
ud0
in
jne
add
jno
push
add
xor
test
mov
push
lods
into
pop
ljmp
cmp
mov
sub
and
js
xchg
xchg
xchg
xchg
jo
imul
jg
mov
jecxz
sbb
or
inc
js
imul
adc
roll
mov
das
sbb
dec
fld
inc
sbb
jno
jae
dec
mov
cmpb
roll
icebp
in
lock
add
ror
dec
xchg
cmp
xor
dec
dec
xor
sub
sbb
cmp
in
rcrl
add
xchg
xor
loope
fnsave
pop
paddd
aaa
out
sbb
push
mov
bound
insl
dec
cld
mov
dec
jle
or
and
addr16
add
out
push
push
loope
mov
push
mov
add
mov
sbb
divb
sarb
data16
pop
xchg
movd
js
popf
inc
adc
xchg
lahf
movsl
cltd
sbb
and
and
mov
adc
call
push
sbb
ret
jecxz
out
and
mov
scas
out
test
dec
xchg
pop
push
mov
sub
loope
cmp
mov
mov
fs
imul
mov
in
shrl
inc
scas
rcrb
sbb
ja
inc
imul
push
push
cmp
ja
inc
imul
iret
loop
frstor
push
adcb
adcb
ret
rorb
xchg
lds
add
dec
fsubrs
jbe
shll
popa
mov
popf
stos
inc
movsl
jp
jmp
jmp
aam
push
out
and
sahf
int
add
gs
lss
xchg
jl
sarl
mov
lea
add
or
das
xchg
inc
adcb
daa
jae
cli
out
dec
xchg
loop
mov
inc
xor
loopne
fwait
xchg
jl
loope
pop
or
mov
lods
mov
xchg
loope
fldcw
fprem1
ret
lock
loop
jno
mov
cltd
add
lahf
adc
mov
inc
mov
sbb
cmp
push
xor
popf
mov
ret
lret
adc
dec
loopne
div
mov
or
test
lock
loopne
cmp
loope
add
fwait
das
dec
jae
popa
je
movsl
or
cmp
jecxz
mov
addr16
cmpb
test
push
xchg
int3
mov
mov
jecxz
mov
xor
loopne
sar
add
stos
dec
test
sbbb
pop
fwait
mov
mov
sbb
movsb
jp
sub
sub
jns
inc
adc
imul
lret
cmp
es
mov
loope
push
xor
insb
push
adc
cmp
cmp
mov
jl
std
push
cmp
outsb
in
sahf
xor
lahf
cmpsb
cmc
push
cmp
add
mov
test
mov
loop
pop
push
popl
or
adc
xor
sbb
movsl
jbe
push
shlb
addr16
or
pushf
cmpsl
xlat
dec
jae
fsubl
mov
icebp
je
pop
popf
and
push
aas
lock
jnp
or
clc
pushf
iret
sub
sub
push
lods
adc
stos
daa
push
fst
jno
cmpsb
and
stos
and
loop
push
roll
adc
lret
outsb
dec
fs
jno
mov
shrl
movsb
and
xchg
add
cltd
lcall
adc
jp
push
leave
aam
fimuls
shrb
sarb
into
das
jge
pop
and
pop
mov
pop
or
cmp
xchg
sbb
cmpsl
inc
jo
pushf
rclb
test
xchg
out
mov
pop
aas
lea
fcoms
jg
insb
xchg
add
cmp
movsl
pushl
popf
sti
push
dec
ret
sub
mov
mov
sbb
aas
stc
cmc
sbb
pop
outsl
mov
jmp
mov
push
cmp
fcomi
lahf
ds
es
mov
inc
adc
mov
pusha
mov
dec
loop
nop
and
out
dec
outsb
and
xor
into
cmp
add
xchg
jl
and
adc
lret
arpl
mov
and
into
lea
pop
xor
jecxz
scas
jg
ret
xor
inc
popa
xor
jp
cmc
aaa
cwtl
dec
pop
lea
clc
arpl
loop
cli
sub
sar
xor
fistl
adc
push
stos
sti
jge
adc
jp
dec
imul
repz
dec
xchg
xchg
sti
outsl
ja
adc
in
cltd
mov
mov
hlt
outsl
das
xchg
mov
mov
push
push
in
outsb
and
push
cld
leave
push
and
lods
mov
sub
or
xchg
rcrb
in
push
jbe
int3
sahf
xor
ss
hlt
add
shrl
xchg
lret
lahf
pushf
movsb
fwait
and
pop
inc
insl
adc
popf
mov
and
js
lret
mov
lds
bound
or
rcpps
stos
push
xchg
loop
or
enter
inc
mov
scas
jge
adc
dec
push
and
je
xor
xchg
lds
clc
adc
jbe
mov
lret
popf
je
push
scas
pop
jge
mov
pop
sbb
in
add
imulb
insl
jg
and
jecxz
mov
scas
mov
sbb
jo
push
jns
and
fadds
push
sbb
in
push
fsubs
loopne
xchg
fdivr
movsl
rclb
xchg
inc
add
stos
mov
test
ret
sub
std
mov
insl
jnp
or
divb
cmp
shll
lcall
push
cmpsl
cwtl
push
out
adc
in
mov
mov
je
push
loope
rcrl
adc
mov
pop
dec
jecxz
arpl
outsb
cwtl
adc
daa
or
es
stos
inc
pop
inc
negb
mov
dec
sbb
mov
or
jbe
aad
adc
in
jns
inc
mov
js
add
cmp
stos
jmp
and
push
ljmp
lret
in
fcmovbe
dec
sub
in
outsb
repz
aaa
pop
in
out
inc
dec
cld
mov
mov
jge
adc
mov
enter
sub
push
mov
jl
inc
gs
adc
mov
mov
inc
int3
into
aas
add
xchg
fadds
jo
lret
mov
sub
mov
or
push
adc
lahf
les
insb
repz
fadd
and
dec
sbb
rcrb
iret
jecxz
fs
pop
mov
lret
lea
cmp
test
mov
cmp
mov
aaa
andb
cmpsb
xor
push
fbstp
ja
out
xchg
pop
lods
movsl
add
and
addr16
inc
cmp
mov
nop
xor
adc
mov
outsb
pusha
sbb
and
or
imul
xor
inc
sbb
inc
push
faddl
pop
push
inc
test
pusha
cmp
sbb
jecxz
in
and
js
test
pushf
rorb
out
push
out
add
cli
clc
fs
leave
xor
fcompl
cltd
pop
int
shrl
loop
je
lea
pop
cld
ret
xorl
inc
xchg
repnz
cmp
mov
notl
mov
fdivl
outsb
repnz
scas
fmulp
fwait
pop
rcl
loopne
mov
push
mov
inc
sbb
or
mov
mov
in
movsb
xor
push
and
jb
bound
push
adc
mov
mov
mov
rclb
and
push
add
jb
bound
push
adc
mov
mov
mov
rclb
and
push
add
jb
bound
push
adc
mov
mov
mov
rclb
and
push
add
jb
bound
push
adc
mov
or
shl
jp
sbb
int3
int3
int3
int3
int3
jp
lea
repnz
stc
xchg
jne
cmp
mov
add
push
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
fiaddl
cmp
add
add
add
add
add
add
cmc
add
add
add
add
sub
add
xchg
add
add
add
add
les
and
add
add
xchg
add
add
add
add
add
dec
add
add
sbb
inc
add
add
cmc
add
add
add
roll
push
add
mov
cmp
or
faddl
mov
add
in
add
popf
add
add
add
add
add
add
add
add
add
add
in
add
add
add
movb
add
add
add
popa
add
add
add
add
add
add
jno
into
add
add
add
add
add
add
add
add
mov
add
add
mov
add
add
das
add
mov
push
add
add
add
push
add
add
add
add
add
add
pop
add
add
add
add
add
mov
add
dec
add
popf
add
fwait
add
add
add
add
ret
add
push
add
add
add
roll
dec
add
test
xor
add
add
add
add
add
add
add
add
add
push
add
add
jns
mov
lret
add
add
add
test
jl
pop
add
add
add
add
add
add
add
add
mov
add
add
add
add
and
and
and
push
add
add
je
add
inc
add
add
add
add
inc
add
testl
dec
add
add
add
add
add
add
add
add
cs
add
add
add
add
add
add
add
add
add
add
push
add
add
int
dec
add
add
add
add
add
stos
add
add
add
mov
add
add
add
jl
sti
add
add
lcall
add
jno
inc
add
add
cmp
add
add
aaa
add
add
add
add
inc
add
add
jns
add
mov
add
fiaddl
les
movb
add
add
xchg
add
add
add
add
out
add
add
add
add
add
add
add
add
bound
movb
xchg
add
add
sub
push
add
add
add
add
add
add
push
add
add
mov
add
mov
adc
jns
sub
xchg
add
aas
add
add
push
add
pop
add
add
test
fiaddl
add
add
add
add
add
add
inc
add
cmc
add
add
int3
add
add
push
cmpsb
push
mov
sub
add
add
add
add
add
add
add
inc
add
add
pop
add
add
add
add
stos
add
add
add
add
nop
add
add
push
add
sbb
das
adc
cmpsl
xchg
pop
mov
cmp
inc
outsb
shl
xchg
sub
jle
insb
movl
sti
cld
lods
dec
dec
mov
push
sbb
xchg
jmp
sub
and
xchg
scas
mov
imul
xchg
loop
push
sbb
int
xchg
jns
push
js
fcmovnu
scas
dec
and
xchg
sub
out
xchg
adc
xchg
pop
lea
push
nop
adc
mov
mov
idivl
push
ja
imulb
pop
sbb
popa
and
mov
in
jge
jne
sbb
push
jbe
sub
imul
or
or
mov
inc
jg
inc
cmp
sub
mov
inc
and
in
test
sbb
mov
jnp
and
sub
pusha
sbb
stos
xlat
pop
mov
push
test
sti
mov
shlb
jne
test
cli
mov
adc
mov
adc
adc
pop
test
js
out
mov
lods
push
xlat
lcall
pop
add
shll
fiaddl
add
cmp
pushf
add
sub
mov
pop
aam
inc
popa
xchg
jmp
xlat
fcoms
adc
xchg
mov
stos
sbb
setns
lock
push
lock
xor
lcall
cltd
leave
add
or
jg
std
fcmovnbe
mov
orl
inc
add
mov
xchg
adc
pop
and
stc
lahf
mov
stc
jecxz
add
call
movsl
inc
in
or
mov
fisttpl
insb
dec
adc
shrb
mov
fucomp
aam
adc
dec
fnstsw
pop
sbb
inc
xor
stos
add
mov
out
mov
xchg
adc
imul
push
leave
int
dec
adc
gs
leave
ljmp
push
lret
icebp
fidivrs
adc
leave
aad
push
bt
mov
xchg
test
mov
cld
jno
mov
cmp
sbb
jns
mov
adc
push
outsl
adc
sub
mov
add
sbbl
lock
stos
in
jmp
pop
jg
mov
jno
cli
add
xchg
lods
and
xchg
jge
in
daa
adc
movsb
test
test
xor
and
repnz
mov
mov
jl
push
neg
addr16
in
xor
jg
shlb
int
call
fstp
push
fs
dec
loopne
cmpl
sbb
jnp
int3
pop
mov
clc
loop
inc
pop
addr16
dec
lods
sahf
and
std
jp
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
add
add
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
add
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fadds
add
clc
add
add
add
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
add
pushf
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
rolb
add
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
daa
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
daa
add
fsubl
add
aam
add
int3
daa
add
les
add
mov
daa
add
lods
daa
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
sub
add
add
add
add
add
add
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
sub
add
sub
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
