int3
int3
int3
mov
push
mov
cmpl
jne
push
push
push
push
pushl
call
push
push
push
mov
mov
call
xor
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
xor
cmpl
setg
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
neg
sbb
and
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
inc
inc
decl
jne
cmpl
pop
jne
dec
dec
mov
andw
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
pop
xor
mov
rep
movl
movl
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
pop
xor
mov
rep
movl
movl
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
pop
xor
mov
rep
movl
movl
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
dec
jne
push
pushl
call
and
push
push
pushl
call
xor
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
sub
add
add
push
mov
call
pop
pop
ret
push
mov
sub
push
push
call
movzbl
push
mov
pop
cmp
sbb
xor
and
add
cmp
mov
je
cmp
je
mov
movzbl
movzbl
sub
je
push
mov
mov
push
push
call
push
mov
pushl
call
push
mov
pushl
call
push
push
mov
call
push
push
push
push
push
call
mov
add
push
pushl
call
pushl
mov
call
push
call
push
push
push
push
push
mov
call
lea
push
call
push
push
push
push
call
push
push
push
push
call
pushl
call
push
push
mov
call
push
push
push
push
push
push
mov
call
push
call
call
mov
movzbl
movzbl
sub
jne
pop
call
mov
mov
call
mov
mov
mov
push
mov
call
mov
lea
push
call
movzwl
movzwl
xor
push
movzwl
xor
call
mov
mov
xor
xor
test
jne
mov
call
not
mov
pop
mov
pop
or
mov
leave
ret
test
test
mov
mov
cmp
sbb
imul
js
mov
mov
leave
call
cmp
or
sbb
imul
pop
js
xchg
mov
mov
leave
lock
sub
sbb
jns
jl
imul
xor
ffree
fsubr
mov
lock
add
pop
loope
adc
sub
cmp
mov
shll
mov
jbe
fs
xor
divl
sub
pop
cwtl
or
jecxz
shl
mov
fildl
sbb
inc
pushf
push
push
sahf
addr16
push
sahf
jmp
enter
pushf
fnstcw
call
out
cmp
mov
shrb
or
fs
push
or
lods
xor
hlt
xor
test
xchg
cmpl
cmp
xchg
ja
in
mov
data16
inc
jb
insl
jmp
jl
stc
xlat
jae
lea
mov
push
mov
mov
leave
call
cmp
or
sbb
imul
jns
mov
ljmp
xchg
mov
pop
addr16
sbb
pop
pop
out
sub
sub
loope
icebp
ljmp
xchg
mov
jge
dec
sbb
sahf
cmp
and
xor
mov
std
lods
sti
stc
fmul
call
cmp
or
sbb
imul
js
mov
mov
leave
call
cmp
or
sbb
imul
js
mov
mov
out
cmp
xor
add
ds
es
jae
dec
scas
fwait
shll
pop
loopnew
orl
mov
into
mov
inc
in
scas
data16
test
jno
popf
jl
dec
inc
pop
into
ss
mov
repz
outsb
pop
add
insl
and
push
mov
cmp
lret
mov
xlat
ss
pop
cld
and
movsb
int
stos
leave
push
loope
push
pushf
fsubl
inc
out
std
mov
xchg
rorb
pusha
test
out
cmc
adc
push
cmp
xchg
xor
mov
jne
ljmp
pop
ss
gs
xor
mov
mov
fdivrl
addr16
adc
add
pop
test
mov
cltd
dec
or
cwtl
mov
hlt
cltd
push
and
add
and
mov
mov
xchg
movsb
jno
sarb
adc
and
jns
push
fisttpll
push
sub
cmp
rep
push
sub
gs
fwait
repnz
orl
jmp
cmp
jge
sub
cmpsl
pop
test
push
push
ljmp
mov
add
inc
pop
inc
sbb
in
sbb
and
sti
rep
lock
loopne
out
inc
mov
xor
mov
pushf
jg
mov
lret
mov
add
flds
lahf
and
jo
push
ret
in
getsec
xor
cmc
cmpsl
pop
out
mov
sarb
push
cmp
jno
test
popf
xor
add
fbstp
lock
loop
mov
imul
maskmovq
testl
rcrl
clc
movsb
aam
pop
imul
sbb
dec
lods
mov
xchg
in
push
mov
sub
and
sub
pop
lcall
bound
mov
frstor
out
aaa
outsb
divl
mov
loopne
cmpsb
out
xchg
int3
mov
cmp
jge
mov
addr16
jp
movsb
call
and
cmpb
aaa
mov
scas
movl
addl
jns
in
sub
jp
xchg
jae
adc
mov
lock
lret
rcll
xchg
hlt
xchg
cli
dec
ljmp
pop
outsb
jae
jns
push
jge
mov
div
ss
ret
mov
cmpsb
out
xchg
push
mov
loope
test
push
pop
cs
xchg
inc
int
lea
inc
and
daa
loop
jp
cmp
aam
adc
add
repnz
stos
daa
mov
movsl
inc
sbb
cwtl
and
in
cwtl
imulb
mov
test
adc
xor
pop
lret
test
call
ds
adc
jg
xchg
jg
stos
inc
dec
je
stc
pushf
xor
pop
mov
pop
jmp
and
into
imul
dec
sahf
and
jae
negb
push
cltd
dec
adc
pop
sbb
ds
imul
cmp
xchg
lods
cmp
inc
daa
ret
cmpsl
dec
jns
jb
mov
inc
or
jno
dec
mov
push
ds
clc
pop
pop
mov
pop
adc
fsubs
bound
out
repz
inc
mov
pop
aaa
xchg
push
dec
add
imul
lods
pop
cwtl
in
add
rcll
mov
test
js
push
mull
pop
pop
or
shrb
dec
pop
paddb
inc
je
aaa
pop
adc
lods
lods
pop
and
xchg
xlat
sti
inc
push
inc
adc
cmpsl
mov
push
leave
dec
push
push
iret
fldcw
push
sbb
int3
popa
fidivs
ss
scas
sub
push
ret
cmp
rol
xchg
pop
mov
int3
scas
cs
xchg
imul
bound
dec
int3
and
stos
push
ja
mov
mull
je
std
xor
xorb
push
lods
aaa
and
repz
ljmp
cltd
insb
fs
jecxz,pn
lahf
int3
into
lock
cmp
cmp
js
sbb
cmp
push
in
push
or
movsl
cmp
jecxz
sub
jae
and
or
aam
jno
fwait
scas
cwtl
jo
mov
jne
call
outsl
or
mov
in
xchg
or
test
int3
add
inc
xor
sbb
jb
xsave
in
inc
dec
icebp
pop
ljmp
pop
ja
xor
fdivrp
js
jg
aas
lods
pop
jo
es
jbe
es
mov
hlt
inc
scas
mov
mov
sbb
ja
aad
sub
dec
and
out
loop
leave
inc
xor
repnz
sbb
sarl
je
outsb
jecxz
fwait
and
xchg
imul
ljmp
leave
mov
lcall
pop
imul
aas
mov
cmp
inc
je
xor
push
mov
push
mov
clc
lret
push
int3
mov
xchg
loopne
pop
out
inc
stos
inc
pop
jnp
cli
daa
pop
fistps
jo
in
sub
imul
into
mov
or
femms
jmp
stos
repnz
add
iret
dec
enter
cld
jns
add
adc
dec
mov
push
bnd
mov
call
test
divl
popf
mov
push
mov
mov
sbb
push
and
ficoms
test
cmp
cwtl
fldenv
loope
scas
sbb
ret
mov
scas
xchg
push
sub
jmp
sbb
cmpsl
sub
out
insb
into
cli
stos
mov
in
aad
and
jo
ffree
out
roll
cli
rolb
popa
xchg
adc
adc
orb
mov
mov
gs
mov
xor
jp
aam
icebp
leave
mov
mov
inc
data16
mov
jnp
test
iret
xchg
mov
add
clc
sub
push
lock
scas
push
and
mov
inc
mov
out
adc
popf
insl
push
cmpsl
sbb
movsl
push
mov
scas
adc
arpl
daa
sub
dec
int3
mov
pop
sub
push
xchg
ret
add
dec
push
add
mov
mov
rclb
push
and
inc
dec
jg
mov
loopne
xor
pop
jae
or
pop
in
sti
xorb
data16
cmp
mov
xchg
add
jle
push
dec
jne
loopne
push
mov
aaa
dec
or
jno
adc
shrb
dec
xchg
xchg
imul
in
push
dec
cmp
movsl
mov
add
in
adc
mov
popa
stos
mov
test
or
adc
xchg
pop
inc
out
orb
xchg
or
cwtl
pop
aaa
fsts
setno
hlt
insb
sub
jmp
into
xchg
and
push
inc
cmp
mov
test
out
sbb
sbb
aam
jnp
add
aas
mov
sub
pop
fiadds
ss
dec
ret
fs
add
pop
loop
mov
pusha
ret
add
outsb
cmpsl
shl
out
mov
aas
push
adc
adc
inc
push
mov
inc
push
shlb
adc
add
dec
adc
jns
xchg
sub
pop
lds
jns
add
push
xor
and
sbb
jge
mov
mov
inc
and
add
ds
je
daa
shr
xor
jae
mov
dec
pushf
xor
cli
push
test
insb
mov
pop
scas
sarb
lds
rolb
outsl
fidivl
lcall
push
fisttps
aam
fnstenv
inc
xor
fwait
adc
mov
jbe
in
dec
adc
pushf
mov
cmp
fwait
lcall
insl
insb
rorb
lahf
loopne
mov
lahf
push
sub
icebp
sahf
mov
fcom
pop
add
cmpsl
fsub
and
shll
sbb
add
adc
cmpsb
add
cmp
and
inc
jge
push
loop
jns
mov
inc
lds
sahf
idivb
sub
cwtl
add
repnz
and
inc
push
sbb
cmp
dec
push
and
daa
bnd
inc
out
xchg
adcb
inc
call
pop
je
push
push
sbb
jno
jl
inc
fwait
mov
mov
or
icebp
lods
mov
mov
leave
out
dec
adc
outsb
xchg
pop
sbb
aad
sbb
or
test
cmp
cmp
inc
mov
adc
xor
fcomps
mov
push
add
subb
mov
test
cld
mov
jo
mov
mov
mov
push
push
fisttps
pop
or
fmull
pop
jecxz
lods
mov
and
arpl
xlat
in
in
sahf
mov
movsb
insb
or
jmp
xchg
lret
push
sbb
subb
fcompl
popa
mov
jmp
jnp
lcall
mov
sbb
cmp
jmp
cwtl
mov
mov
mov
std
shrl
stc
addr16
inc
inc
aas
clc
jle
mov
int
xchg
pop
xchg
add
or
arpl
icebp
adc
jb
addr16
imul
add
or
inc
jmp
mov
inc
cmp
jne
mov
fsubl
and
cmpb
mov
lods
enter
jg
stc
xchg
mov
adc
ljmp
notl
add
sbb
pusha
sbb
mov
inc
mov
out
sti
cmpl
inc
dec
inc
jecxz
mov
fs
pop
repz
clc
pop
push
loopne
xor
stc
mov
sbb
stos
add
xchg
scas
cs
add
out
lods
sbb
add
cmp
or
add
mov
ret
xchg
clc
inc
mov
cmpsb
push
outsl
out
jmp
pop
lcall
iret
ffree
scas
jbe
or
pop
mov
rcll
add
fsubr
mov
in
addr16
jmp
loop
lret
push
cmpsb
dec
xchg
fidivl
inc
pusha
pop
test
mov
push
jmp
stos
push
lods
jne
pop
icebp
sbb
and
jl
insl
subl
call
aas
out
es
call
mov
mov
dec
dec
push
cwtl
inc
test
xchg
js
sbb
dec
test
imul
enter
mov
faddl
xchg
hlt
cmc
inc
out
adc
push
and
arpl
shll
lea
inc
ds
test
rcll
mov
cmp
mov
pop
addb
ficoms
adc
cwtl
dec
dec
insb
inc
pop
loope
popa
push
clc
cmpsl
in
dec
iret
sbb
movsl
and
bound
in
cmc
pop
cmpsb
mov
rcrl
lods
lret
sub
adc
dec
divb
decl
test
inc
push
jbe
repz
push
loopne
movsl
addl
notl
mov
xchg
out
sti
mov
adc
std
or
push
enter
xchg
stc
aas
push
shrl
sub
ss
and
into
adcl
add
addr16
xchg
call
out
mov
mov
scas
dec
mov
in
cwtl
fmull
stos
and
mov
into
rorl
outsl
mov
les
cmpsb
xchg
jae
xchg
xchg
mov
int3
sub
imul
rorl
movsb
mov
dec
mov
clc
push
dec
imul
lret
xor
orb
cwtl
bound
push
imulb
jb
movsl
sbb
lea
fcoml
sbb
and
jnp
lcall
cwtl
or
inc
addr16
mov
push
fnstcw
pop
jmp
xlat
andl
out
mov
test
add
cwtl
mov
loopne
js
fwait
pusha
insl
cmp
scas
aad
inc
cld
ret
and
cmpsl
int3
cmpsb
insb
xor
add
sub
out
fwait
mov
pop
imul
xchg
mov
fsub
inc
sbb
jb
popa
sub
aaa
add
popa
rolb
fnstcw
add
jb
and
inc
mov
fstpt
rcll
dec
cmpsl
sti
bnd
dec
cmpsb
insl
ja
cmc
mov
xchg
pop
ljmp
inc
aas
fsubl
pop
sbb
mov
aam
mov
adc
cmp
push
push
jmp
mov
push
into
mov
mov
rorl
inc
test
xchg
scas
mov
sti
and
in
jbe
aam
gs
insb
cltd
pop
mov
mov
inc
mov
pop
dec
std
mov
and
or
add
dec
movsb
and
stos
fnstsw
jb,pn
fnstcw
inc
insl
popa
dec
xchg
push
roll
push
jno
andl
stos
xchg
xor
and
adc
mov
mov
mov
rorb
leave
pop
jmp
insb
shrb
ret
hlt
or
mov
sbb
cmp
inc
cwtl
adc
cmp
mov
paddd
xor
pop
out
adc
je
repz
push
sub
and
adc
push
xor
jo
loope
xor
cli
out
hlt
jl
sbb
out
mov
das
pop
mov
js
test
push
iret
setns
mov
test
jg
ja
es
pop
or
ret
mov
ret
inc
xor
sbb
bswap
xchg
and
mov
dec
in
jnp
pop
pusha
dec
add
ret
mov
mov
loopne
addr16
lock
xchg
and
push
sub
sbb
cmpsb
into
aas
adc
mov
lock
mov
stos
mov
jmp
xchg
xchg
pop
push
and
in
push
mov
imul
shrl
mov
and
xor
stos
movsl
aaa
test
pop
or
adc
in
add
outsl
jmp
aaa
mov
sbb
fcomp
and
das
cmc
out
cmp
lret
push
stc
lret
cmpsb
out
icebp
ljmp
mov
js
dec
or
dec
xchg
lods
xor
xor
sbb
cmp
mov
repz
mov
lea
dec
scas
mul
jne
in
notb
cmp
and
pop
aam
scas
inc
mov
cmc
mov
test
adc
lds
dec
rcrl
lock
sub
bnd
sbbb
ret
inc
jp
fstpl
scas
imul
add
mov
loopne
data16
or
int3
pop
addb
sbbb
out
mov
fcomp
cmp
lret
xor
ljmp
cmp
in
into
push
xor
int
pop
push
popa
lods
lods
shlb
cmc
lea
push
add
aas
clc
push
jne
jnp
or
xchg
dec
pop
fwait
pop
sub
fstpt
or
mov
mov
fisubrs
cmp
leave
test
mov
enter
inc
das
jne
cmp
fcomp
pop
test
fldenv
ja
testb
sahf
ret
aaa
sbb
je
pop
cmc
in
mov
cs
fidivrs
lods
inc
dec
xchg
fbld
ds
shll
or
sbb
add
popf
into
dec
and
outsl
dec
sbb
xor
cli
scas
hlt
push
pusha
sub
adc
subl
bound
jg
cld
add
push
lods
sub
push
sbbl
inc
in
dec
scas
scas
jae
pop
xor
add
mov
jnp
test
push
jne
imul
adc
aaa
mov
adc
sub
lock
lret
push
out
daa
lods
adcl
pop
into
mov
jg
cwtl
mov
inc
and
ds
xchg
std
xchg
nop
inc
pusha
lods
enter
jo
fs
jl
dec
jle
adc
jg
jecxz
fwait
lahf
cld
adc
and
mov
mov
js
push
dec
pop
xor
inc
out
gs
fwait
jmp
cmc
cmp
pop
int
stos
in
jmp
mov
sub
push
es
rorl
add
mov
ds
cs
push
adc
pop
cmp
sar
jne
mov
loop
lds
add
shr
jge
pop
push
mov
push
sbb
adc
gs
and
test
jp
mov
andl
dec
nop
test
jmp
push
xor
shrb
jmp
cmc
adc
xchg
pushf
subl
out
rcl
cmp
mov
mov
and
mov
xchg
adc
adc
or
mov
not
test
xor
push
rcr
loope
mov
push
and
mov
inc
fwait
dec
mov
or
test
push
cltd
push
aaa
leave
outsl
xchg
clc
pop
push
add
ljmp
mov
outsl
sbb
push
nop
fildll
gs
movsb
arpl
add
insl
inc
pop
xor
and
sbb
xchg
cmp
xorb
cmp
movb
pop
aad
insl
jmp
sub
inc
imul
mov
jle
add
les
fld
pop
mov
pop
stos
test
cmp
imul
mov
insl
cld
pusha
sbb
xor
and
xor
lcall
and
and
mov
fdivl
movl
jno
adc
lods
test
scas
sub
dec
mov
sub
and
sub
xor
cmp
hlt
jbe
xchg
out
mov
jo
and
jo
nop
push
xor
xchg
int3
rol
mov
shlb
es
out
shlb
xchg
test
jns
cli
hlt
xorl
lea
mov
pop
jle
or
mov
add
add
mov
cmp
icebp
pushf
xchg
xchg
mov
addb
ja
sti
add
mov
rcrl
test
leave
insl
inc
cmp
push
sahf
insl
mov
shlb
leave
cli
sub
pop
cmp
imul
popf
lret
mov
jne
ja
int
or
pop
in
push
cmp
and
sbb
je
into
add
cmp
sbb
jmp
pop
arpl
push
sub
adc
inc
or
imul
sbb
out
je
mov
sub
xor
movsl
jecxz
lock
stmxcsr
add
inc
cmp
loop
lahf
sub
xchg
in
inc
sub
push
xchg
push
add
je
cmp
pop
push
lahf
xor
mov
sub
fisubrs
sub
mov
add
cmp
or
xor
ss
add
adc
ds
sbb
inc
in
dec
int
outsb
enter
cmpsl
scas
adc
out
test
mov
fcomps
xchg
lods
xchg
stos
in
scas
mov
imul
jae
mov
mov
cmp
lods
mov
lock
insb
cmp
popa
pop
in
divl
mov
jbe
imulb
inc
push
aaa
mov
jo
shll
insl
int
aaa
insb
aad
cwtl
jns
jl
mov
push
and
jbe
lock
jg
inc
inc
sub
data16
pop
pop
add
xchg
sbb
popa
ss
pop
mov
call
add
imul
mov
mov
addl
in
popl
cmp
mov
xchg
mov
cs
out
cwtl
pop
out
pushf
mov
push
xchg
cvtpi2ps
sub
subl
mov
cmp
mov
repz
sbb
push
push
out
xchg
sbb
and
out
dec
fisttpll
inc
ds
add
fsts
xchg
stc
jno
mov
lahf
mov
xlat
and
mov
inc
pop
jmp
mov
shl
cmp
xchg
inc
mov
pusha
ret
int
sbb
inc
cltd
xlat
mov
jl
test
scas
test
stos
xchg
sbb
xor
push
inc
in
mov
xchg
sub
cmp
add
pop
jge
xchg
stos
in
cs
mov
and
out
jle
fsubrs
pop
mov
mov
cltd
mov
leave
call
cmp
or
sbb
imul
js
mov
mov
leave
call
cmp
or
sbb
imul
js
mov
mov
leave
call
cmp
or
sbb
dec
jns
dec
insb
pop
jl
mov
mov
dec
call
mov
sub
dec
push
shl
mov
mov
in
sub
sbb
or
adc
add
jl
dec
jge
insl
lods
pop
pushf
dec
mov
fmull
sub
sbb
or
jl
insb
popf
pop
lea
insl
int3
sub
in
sbb
cmp
sub
sbb
or
jl
insb
popf
pop
lea
insl
lods
cs
arpl
scas
arpl
mov
in
jae
jae
pop
std
mov
jbe
mov
leave
push
or
aam
push
jbe
push
lods
sub
repz
ljmp
xchg
xchg
pop
jnp
mov
rcrb
cmp
sbb
repz
add
jmp
pusha
jecxz
mov
mov
mov
std
movsb
sub
and
inc
mov
rorb
jge
insb
arpl
in
jge
jge
shlb
fadd
xchg
inc
adc
fcompl
repz
jge
jns
dec
mov
insl
inc
xchg
sti
dec
arpl
dec
mov
das
adc
and
inc
add
sub
loope
sub
lods
sub
mov
lea
jmp
gs
cmp
sub
sbb
or
jl
insb
popf
pop
lea
insl
lods
pop
pushf
dec
mov
fmull
sub
jne
rcll
in
clc
adc
sbb
fldcw
ds
and
pop
popf
inc
lahf
pop
ficomps
cmp
lea
jle
xor
or
les
sbb
or
pop
lahf
jns
outsl
mov
mov
je
imul
mov
dec
mov
fmull
sub
sbb
or
jl
insb
popf
pop
lea
insl
lods
pop
pushf
dec
mov
fmull
gs
jmp
xchg
rcrb
inc
cmp
int3
test
add
push
and
out
hlt
addr16
shr
fnstcw
mov
out
fucom
mov
or
es
xor
setns
push
cmp
pop
pop
outsb
xchg
lea
push
imulb
jno
sub
xor
push
cmp
or
iret
push
pop
rol
std
es
jle
push
mov
dec
popa
xchg
mov
lcall
packssdw
int
dec
aad
sbb
loope
push
rcrl
repz
or
fmuls
scas
rorb
mov
mov
mov
mov
and
loopne
lds
ljmp
ss
push
push
das
cmp
sbb
insb
or
push
xlat
mov
gs
out
stos
lds
stos
push
jle
and
push
dec
xchg
fnstenv
jbe
out
mov
lahf
loope
pop
iret
pushf
stc
bound
insl
cmp
mov
cmpsb
mov
negb
cmp
pop
mov
push
fsub
jbe
lahf
push
pop
enter
inc
fchs
and
adcb
add
xchg
pop
inc
pop
push
xchg
std
js
mulb
xor
es
mov
jl
pop
fs
rorl
cmpsb
lahf
mov
sub
push
jbe
xor
shrb
cli
push
fbstp
enter
mov
push
fidivrl
mov
loopne
add
sbb
sti
xor
insl
push
addr16
dec
shll
jns
xor
cmpsl
inc
inc
mov
jg
pop
inc
sub
sub
in
pop
mov
imul
mov
in
fucom
shll
jbe
loope
sub
add
adc
mov
xchg
push
fldcw
stos
dec
test
xchg
adc
imul
sub
or
mov
je
add
sbb
in
adc
rcrb
xor
mov
xor
inc
das
gs
add
repz
popa
lret
popa
movsb
cmp
inc
aad
repz
inc
mov
out
test
mov
cmpsl
inc
cld
mov
aam
inc
imul
or
sbb
mov
or
push
jp
pop
andb
or
pusha
popl
rcll
in
stos
xor
imul
push
insb
fisubl
es
aas
test
xchg
inc
dec
mov
loope
repz
xor
lahf
clc
mov
push
cmp
push
add
insb
inc
and
cmp
or
jo
ss
hlt
gs
sub
seta
hlt
mov
push
mov
pop
fstps
mov
and
pop
fcmove
ljmp
jne
movsl
jno
mov
fstpl
inc
imul
inc
call
sbbb
xchg
insb
jne
mov
sbb
ss
xor
popf
mov
lock
mov
sahf
outsl
jnp
mov
dec
ja
mov
outsl
mov
inc
std
dec
ljmp
icebp
push
mov
dec
mov
dec
push
mov
or
jmp
jge
or
fs
push
int3
aas
dec
sub
pop
rorl
pop
mov
adc
shl
mov
fistps
dec
jne
in
sub
dec
mov
mov
add
fidivrs
jns
push
dec
scas
or
or
rcrb
ljmp
xchg
add
daa
lods
mov
push
xchg
mov
cmp
xchg
mov
hlt
cmp
sbb
push
in
cmpsl
sub
fldcw
cmp
push
sub
pop
aam
mov
mov
jmp
jle
adc
lds
push
sahf
rcll
stos
lret
pop
xor
xor
dec
inc
test
sbb
sub
lret
and
stos
ror
inc
addb
jg
adc
gs
ret
push
and
pop
add
call
jo
cmp
cmpsb
jge
je
and
push
ret
jp
rclb
imul
xor
push
dec
out
out
aas
mov
lods
lock
leave
dec
adc
push
test
mov
std
nop
mov
mov
addr16
out
je
or
sub
arpl
lods
jl
jge
cmp
scas
cmp
ds
push
sbb
fidivs
int
orps
dec
jno
mov
out
rorb
out
xchg
ds
rol
fldln2
and
scas
mov
or
das
in
mov
sahf
cmp
push
and
call
pop
out
xor
add
mov
push
cmpsb
sti
gs
jg
rclb
and
loop
mov
sub
and
shll
xor
stos
jbe
adcl
mov
out
adc
in
outsl
scas
sbb
push
arpl
clc
int3
cmpsl
jmp
pop
or
pop
lret
data16
icebp
inc
test
inc
cmp
aas
insl
jns
push
or
push
sbb
les
and
push
mov
jge
sub
sub
lds
in
inc
cmp
xchg
cmp
add
rcl
jl
inc
xchg
push
mov
enter
or
xchg
pop
sbb
or
push
xor
add
stos
rcll
or
in
enter
pop
mov
out
jmp
fisubrl
push
sbb
aas
daa
aaa
in
inc
icebp
xchg
mov
xor
sbb
sub
cmp
jnp
popl
jb
lods
movsb
mov
sub
das
add
xlat
inc
adc
xchg
cmpsl
or
push
jl
or
fbstp
fadd
push
mov
in
sub
and
dec
cmovae
repnz
and
repz
xor
std
xchg
adc
movsb
xor
push
pop
push
xchg
mov
jbe
sbbb
add
dec
adc
nop
xchg
sub
in
int3
jnp
inc
push
lods
lret
in
push
mov
xor
mov
pop
test
fmul
mov
adc
xchg
test
cmp
ficoml
mov
xor
xchg
out
jg
mov
testb
lock
out
jle
mov
xchg
shl
and
scas
adc
cmc
push
inc
mov
pop
push
sub
add
lds
cmp
lret
xchg
lods
sahf
and
push
or
mov
repz
lock
and
inc
xor
insl
inc
lret
xor
mov
lock
sub
sbb
mov
push
fsubrs
xor
jp
inc
jle
out
dec
dec
lret
in
into
in
mov
sub
pushf
or
push
imul
xchg
inc
jno
lcall
mov
sub
cld
daa
cli
push
add
jle
jge
ret
push
pop
into
or
movsl
xchg
cmpsb
std
mov
xor
push
xor
cltd
lcall
lods
hlt
mov
popa
aaa
or
xchg
push
adc
std
mov
test
shr
mov
adc
xchg
pop
fmull
repnz
stos
mov
add
mov
and
push
pop
call
repz
sub
xchg
jne
xchg
orl
shl
addr16
decl
ss
xchg
add
rcrb
ja
pop
jp
mov
imul
jg
adc
xor
iret
mov
out
and
dec
stc
icebp
fcoms
xor
jp
cmp
cwtl
push
jp
mov
fiadds
mov
xchg
or
popfw
scas
inc
inc
cmc
mov
sbb
ret
sub
xchg
roll
push
dec
std
jg
xor
cmpsl
ds
jae
arpl
jp
add
inc
mov
push
xorl
sbb
sub
sti
sub
mov
popa
sub
add
comiss
insl
popf
fsubp
nop
in
jmp
adcb
fisttps
pop
fimuls
shrb
sub
mov
xor
xor
pop
cmp
lret
or
jno
int
out
pop
pop
mov
es
ja
dec
mov
inc
mov
pop
scas
inc
ss
xor
dec
xlat
xlat
test
add
and
and
mov
or
sti
ss
mov
and
test
lret
and
adc
mov
mull
and
sbb
popl
or
js
xor
mov
pop
scas
out
fadds
lret
sbb
rorb
dec
jl
adc
cli
dec
sub
into
jbe,pn
adc
or
or
imul
sbb
or
dec
jp
pop
ret
add
enter
loope
mov
xchg
sub
xchg
push
in
push
cltd
movsl
stc
jge
pop
std
clc
sbb
pop
out
outsb
outsl
mov
jge
mov
sti
dec
mov
jp
movsl
mov
mov
add
inc
sub
repz
adc
sub
sete
and
lahf
pop
push
cmp
loop
adc
iret
xchg
push
scas
adcl
imul
sbb
push
pop
sarb
sbb
dec
adc
js
test
mov
dec
int3
jmp
testb
imul
push
xchg
enter
ds
or
push
andl
push
gs
add
leave
repnz
xchg
repz
daa
lds
push
push
insl
lret
xchg
pop
sbb
shlb
mov
jo
ror
mov
pop
int
cmpsb
pop
or
dec
cwtl
mov
xorl
xor
jmp
jg
or
xchg
push
scas
mov
hlt
testb
lods
and
cld
pop
dec
and
jge
sar
mov
aam
jge
cs
data16
lret
jmp
hlt
fcompl
sub
lret
push
fisttps
mov
mov
ret
ss
sub
or
jmp
or
fstpt
lds
int3
ss
dec
adc
push
inc
outsb
ds
arpl
dec
mov
jle
push
mov
ss
inc
dec
nop
xchg
aam
cmp
mov
mov
mov
push
mov
or
cmp
xchg
fndisi(8087
ds
ss
jnp
fwait
adc
dec
sbb
stc
mov
add
in
sbb
sub
cmp
mov
xor
jo
push
sbb
mov
dec
jmp
int3
and
sub
sub
int3
fcmove
push
icebp
sub
shll
outsb
ret
add
xor
and
lea
add
outsb
mov
xchg
dec
or
jecxz
adcb
mov
mov
test
aas
test
popf
in
lret
fsubr
aas
or
mov
xchg
je
ret
xchg
inc
pop
xor
sbb
fincstp
mov
jecxz
loope
mov
cs
xor
ds
mov
jecxz
fs
sub
cmc
pop
adc
mov
mov
dec
je
iret
aam
sti
daa
mov
and
adc
pop
mov
cs
jno
clc
out
push
sub
cmp
ficomps
sub
xchg
xchg
lea
adc
fcmovbe
adc
inc
or
clc
adc
out
sbb
jbe
and
mov
cwtl
pushf
jo
and
lahf
aam
add
xor
int3
int3
mov
icebp
xchg
jo
xchg
roll
ret
aas
addl
lcall
add
mov
xchg
cltd
pushf
ret
lds
push
std
xchg
andb
jns
pop
mov
pop
int3
fwait
js
xlat
xor
jl
push
lahf
push
pop
pop
mov
pop
daa
pushf
mov
cmp
hlt
imul
insl
cmp
js
fnstenv
inc
jno
int
lret
mov
movsb
out
clc
sub
mov
outsb
or
loop
js
cltd
fsts
and
ds
pop
xchg
scas
movsl
xchg
cmp
test
notb
pop
mov
insb
cld
cwtl
cmp
xchg
movsb
push
mov
sbb
and
aaa
inc
jle
decb
and
orw
addb
out
and
sahf
xor
inc
test
cmp
xor
adcb
insl
cld
jge
mov
sub
fst
push
or
dec
jae
push
inc
sbb
mov
cmp
cmpl
mov
in
lods
mov
jo
push
xlat
popa
xchg
ja
inc
dec
cwtl
out
negb
pop
daa
je
pushf
lds
es
test
enter
mov
sbb
jp
das
xchg
xchg
jb
daa
repz
dec
xchg
sub
lods
push
out
sbb
gs
dec
mov
pushf
mov
mov
sbb
dec
push
xchg
push
ja
pop
in
push
sbb
jnp
push
add
lods
test
push
cmp
xor
fstpl
push
sub
ds
mov
ficoms
das
aad
pop
pop
add
popf
and
or
ss
jle
mov
lret
or
daa
sbb
dec
stos
stc
or
cmpsl
sbb
sbb
mov
xorb
add
addr16
push
test
pop
push
dec
and
js
dec
stos
push
leave
repnz
outsb
stc
mov
hlt
in
incl
insb
xchg
insb
fsubp
inc
adc
cwtl
mov
dec
inc
inc
or
lods
push
stc
mov
clc
ret
adc
pusha
pop
dec
cs
loop
cmc
jmp
cmpsb
test
sub
fimull
mov
or
dec
lock
cmpsb
subb
addr16
inc
mov
scas
push
movsl
out
jb,pn
out
js
addr16
rclb
test
push
and
shll
pushf
adc
fwait
stc
loope
ret
pop
lds
or
in
adcl
cmp
push
nop
push
in
xlat
cltd
mov
shlb
adc
stos
fs
or
push
mov
ja
mov
jge
inc
mov
cmpsb
push
ror
dec
enter
cmp
and
cmp
push
test
push
imul
add
dec
jb
clc
adc
fldl
or
sub
cmpsl
lock
fwait
push
push
mov
dec
fcoms
pop
sbb
lahf
cmpsb
fimuls
nop
push
pop
xchg
pop
fnstcw
and
stos
push
fldl
mov
loopne
cmpsb
mov
ljmp
mov
cltd
push
cmp
sbb
lret
fbld
aas
in
sbb
lret
push
jns
inc
xor
clc
iret
push
inc
repnz
xchg
outsl
arpl
sbb
cmp
mov
gs
cld
sub
xor
xchg
push
mov
xchg
sbb
sbb
rcrl
lret
arpl
je
loopne
adc
shll
jmp
nop
mov
int3
dec
xorl
or
vrcpss
adc
mov
adc
fisubl
gs
int
repnz
mov
and
arpl
xchg
xor
cmpsl
std
inc
arpl
pop
aam
ret
shlb
rorl
fisubrs
jmp
lret
mov
jg
lcall
pop
push
mov
or
adc
dec
and
orb
ret
movsb
cmp
sahf
ret
sahf
mov
mov
stc
scas
lds
mov
fldenv
mov
lods
push
inc
xchg
adc
movsl
mov
and
cmc
fistps
jg
in
jns
lret
jbe
cmp
ror
sbb
and
xchg
aaa
push
lods
adc
outsb
out
mov
ljmp
push
out
pop
add
out
ss
pop
sub
cmpsb
jns
cmp
or
std
add
push
negl
std
lcall
lahf
jp
add
mov
xchg
gs
xor
adc
xorl
fwait
rcll
push
into
and
xchg
cwtl
lcall
push
jle
scas
jno
popf
pop
add
pushf
push
dec
add
inc
in
daa
daa
idivb
lret
sbb
pop
pop
mov
ja
mulb
mov
inc
mov
dec
aas
and
mov
cwtl
nop
lcall
lods
ja
stos
data16
cmpsl
inc
repnz
leave
mov
adc
in
inc
out
outsb
or
mov
push
pop
std
lods
into
push
pop
jmp
push
sub
inc
arpl
jno
xor
fisttpl
xchg
xchg
mov
mov
xor
int
push
rcll
sbb
jo
xor
es
add
in
lock
pop
div
sub
adc
fldcw
loopne
enter
mov
sub
lcall
mov
pop
jae
cld
aaa
ja
ficoms
cmp
mov
into
mov
mov
xchg
adc
cwtl
jnp
pop
jge
xchg
and
aam
pop
ss
push
lds
nop
mov
inc
jge
lret
cltd
inc
jge
push
jp
std
push
inc
sbb
rorb
lods
cmc
sub
fsubrl
loope
push
aam
repnz
pop
sub
cmp
les
mov
or
rclb
adc
movsb
sub
mov
jns
pop
xchg
fisubs
out
pop
push
in
and
push
in
jecxz
jecxz
sbb
shll
addb
or
repnz
xchg
ds
xor
jbe
test
int
adc
mov
mov
inc
cmp
lcall
mov
and
pop
add
add
dec
outsb
ret
lret
in
std
inc
jle
pop
xor
pop
enter
sahf
dec
movsl
sub
jge
pop
adc
lock
fistl
mov
jns
mov
sti
dec
call
mov
lret
ret
popa
add
push
sbb
imul
push
mov
mov
xchg
and
movsb
mov
enter
mov
mov
jno
inc
sbb
imul
fcoms
in
enter
add
push
mov
cmp
sbbb
in
jmp
fwait
mov
pusha
rcll
and
lahf
ds
out
jbe
cld
inc
pop
in
les
aas
les
mov
inc
addr16
pop
loop
push
push
or
and
dec
add
mov
xchg
jnp
cmp
fidivrl
icebp
inc
xchg
js
push
fildll
icebp
add
push
movsb
jmp
push
clc
ret
rcrl
sbb
jmp
mov
push
call
imul
mov
jnp
dec
insl
idivl
cmp
adc
sti
shr
mov
inc
lahf
cltd
pop
shrl
jmp
je
mov
lcall
cmpsl
cmp
cli
lods
ret
jne
ja
bound
add
nop
xchg
pop
daa
cs
mov
xor
push
xor
push
mov
push
sbb
inc
test
inc
lahf
cmpsl
bnd
cmp
cmp
inc
push
scas
jns
pop
xrstors
out
int
cli
push
cmp
out
inc
inc
lret
outsb
xchg
mov
icebp
push
fcomi
jb
jae
loop
sub
ucomiss
outsl
fldt
rcll
mov
mov
xchg
xchg
mov
out
dec
inc
out
mov
mov
lea
mov
sub
mov
pop
daa
loopne
inc
pop
clc
loope
ds
movsb
mov
in
cmp
sub
or
aas
lea
add
leave
sbb
jmp
enter
mov
cmp
or
pop
dec
fstps
stos
adc
sub
sbbb
jl
fidivrl
nop
xchg
arpl
mov
sti
push
flds
cmp
scas
data16
inc
dec
cs
ja
addr16
cbtw
imulb
xchg
test
das
rcll
rorl
sub
lods
pusha
dec
arpl
push
lds
sub
or
sub
mov
cltd
shr
dec
or
nop
popa
and
dec
js
sub
dec
dec
imul
xchg
sbb
mov
lahf
rorb
pop
mov
mov
lahf
add
mov
lret
pusha
cmp
and
and
fwait
adc
cwtl
inc
mov
sbb
or
jl
insb
popf
pop
lea
insl
lods
pop
pushf
dec
mov
fmull
sub
sbb
or
jl
insb
popf
pop
lea
insl
lods
pop
pushf
dec
mov
fmull
lods
fstpl
in
popf
pop
lea
insl
lods
pop
pushf
dec
mov
fmull
sub
sbb
or
jl
insb
popf
pop
lea
insl
push
negl
adc
and
xor
cmp
jbe
data16
inc
dec
test
negl
xchg
cmpsb
fsubs
sub
data16
js
push
mov
out
xchg
xchg
xchg
mov
cmpsb
enter
sub
data16
js
push
mov
sub
lods
out
mov
es
inc
popa
cmp
or
rcll
push
mov
lcall
xchg
add
mov
pop
js
in
mov
int3
cmp
lea
imul
and
cmp
jns
pop
push
adc
call
out
xchg
and
sub
inc
call
xchg
jge
or
xor
imul
inc
add
sbb
push
cmpsb
shrb
and
lock
loope
xor
push
cmpsb
addr16
lds
pop
ss
mov
jecxz
idivb
mov
sub
imul
fsubs
sub
data16
js
push
mov
out
xchg
clc
xchg
mov
cmpsb
mov
sbb
sub
push
sbb
inc
sbb
shll
cmp
mov
rolb
add
or
bound
xor
test
stos
rorl
xchg
cmc
jmp
and
adc
push
push
push
mov
out
xchg
clc
xchg
mov
cmpsb
enter
sub
data16
js
push
mov
out
xchg
clc
xchg
mov
cmpsb
enter
inc
sti
cmc
xor
gs
sbb
leave
je
fiadds
sti
pop
inc
rol
fldcw
pop
sahf
repnz
repnz
fisubl
in
adc
je
pop
out
enter
push
mov
insl
ja
lods
repnz
mov
inc
test
dec
xor
icebp
sti
icebp
test
jp
ret
add
xchg
sbb
stc
pop
rorb
rclb
loopne
push
mov
movsl
les
pop
mov
shlb
inc
lret
jg
fwait
in
xor
popa
push
dec
cmp
lret
lds
adc
cmpsl
xchg
loop
cmc
repz
cmp
lcall
mov
out
in
jmp
dec
aaa
imul
adc
add
inc
outsl
fwait
pop
jl
pop
sbbb
mov
insb
out
xchg
outsb
push
inc
cwtd
push
cmp
mov
daa
inc
mov
xor
ss
mov
jae
mov
lods
fisttpl
stos
pop
stc
pop
push
mov
jp
in
outsb
push
int3
cli
aaa
aas
out
lret
popa
ds
inc
or
jne
dec
mov
int3
or
lods
fistpl
sub
pop
lea
shlb
cmpsb
loopne
insl
pusha
pop
mov
cs
std
ja
dec
int
cmp
popf
xor
sbb
add
in
mov
cltd
sti
loope
mov
je
sbb
lods
xor
ror
jae
and
mov
jp
jle
push
ja
loopne
insb
enter
adc
popf
mov
notrack
call
mov
sbb
sbb
sbb
enter
jmp
xchg
stos
inc
mov
lahf
int3
push
xor
and
enter
stos
xlat
and
stos
iret
js
lahf
out
mov
xchg
push
cwtl
in
dec
aad
imul
jno
push
cwtl
cmp
fnstsw
gs
and
insl
mov
test
lock
xor
out
fbld
shl
mov
fnsave
jno
mov
mov
mov
xlat
fisubrl
lock
ds
inc
mov
lods
mov
mov
inc
insl
sbb
add
psadbw
test
inc
int3
dec
mov
rorl
daa
jae
fbld
dec
hlt
cmpsl
pusha
or
xchg
stos
jne
xabort
scas
movsb
jb
cwtl
imul
cmc
xchg
xor
sarl
cwtl
pusha
push
or
ret
insl
mov
pop
inc
fwait
adc
or
sub
sbb
mov
or
lret
scas
and
jecxz
aaa
les
jge
cmpsb
mov
jle
xchg
negl
jo
out
inc
call
stc
sarb
mov
hlt
cs
test
xor
movsl
fadds
xor
dec
test
pushf
repnz
or
mov
mov
shlb
pop
jbe
jo
sub
dec
int3
ljmp
pop
ret
pop
rcr
inc
cmc
and
lods
push
add
xor
addl
pop
pop
shlb
adc
imul
sbb
enter
pusha
or
outsb
ljmp
or
and
ss
mov
lods
ss
pushf
icebp
cmp
xor
mov
imul
mov
cmp
mov
shrb
and
ret
cmpsb
fcmovne
xlat
add
leave
out
out
arpl
xchg
pop
sub
js
daa
inc
lock
aas
or
mov
sub
jne
aaa
popa
clc
imul
fistpll
mov
fcos
stc
das
in
mov
push
push
or
out
ljmpw
pushf
fidivrs
shrl
pop
dec
xor
stos
push
mov
xorb
dec
cmp
xchg
and
inc
jge
or
rolb
lods
daa
cmc
pop
xor
popa
aas
inc
push
adc
cld
into
repnz
mov
adc
iret
pusha
mov
out
mov
inc
fildll
fs
rorl
popa
cmp
insb
test
jmp
sti
fadd
jns
stos
xor
out
pop
dec
out
mov
test
int
mov
adc
push
in
push
loop
js
dec
add
mov
js
xchg
fsubs
xor
adc
mov
aaa
cmp
add
dec
popa
pushf
dec
in
test
test
cmp
outsb
mov
stos
rcrb
pop
mov
outsb
push
mov
clc
pmaddwd
xlat
jp
sbb
push
in
aas
push
push
xchg
push
pop
lret
jle
xchg
jmp
mov
fwait
push
mov
cmp
sti
lret
push
scas
aad
add
or
out
sti
sbb
xchg
cmpsb
xor
in
jnp
jo
int3
mov
call
mov
mov
ss
dec
hlt
sar
iret
orb
pusha
ret
mov
fwait
or
hlt
in
sbb
mov
adc
bound
insb
enter
sub
lds
xchg
sbb
out
or
test
dec
dec
lret
das
jno
push
jl
gs
sub
mov
scas
adc
mov
int3
fcmovnb
decl
xor
or
popf
test
rclb
hlt
nop
mov
enter
push
les
sbb
dec
dec
mov
xlat
out
mov
and
out
lahf
out
cld
fisubrs
pushf
pop
sarb
push
cmp
not
sub
push
movsl
fdivrs
jbe
add
jno
jle
lods
push
inc
aam
cld
xchg
dec
push
fisubrl
pop
mov
insl
cld
bound
or
dec
sub
jnp
mov
and
dec
inc
add
cvtdq2ps
jmp
rorl
mov
pop
mov
push
sub
lods
es
cmpsb
pop
or
sbb
jo
arpl
subl
int
lret
cli
mov
iret
adc
loope
jecxz
mov
les
mov
cmp
mov
lcall
push
imul
pop
ficomps
pop
ret
sub
sub
in
in
add
mov
mull
repz
cmp
jae
cli
sbb
insb
mov
jmp
pop
mov
in
filds
int
dec
cltd
bswap
loop
in
pmuludq
addb
rcr
pop
js
cmp
daa
mov
dec
jae
lds
lret
addr16
gs
es
jle
mov
xor
adc
in
mov
mov
icebp
xchg
push
gs
dec
stos
sbb
stc
fbstp
pop
cmpl
ret
pop
add
bound
push
fistpll
xchg
and
cmp
dec
push
imul
mov
push
cmp
mov
xor
sarb
imul
roll
pushf
outsb
jbe
push
into
push
loope
test
jecxz
stc
pop
out
lea
mov
fldt
ficoml
mov
in
loopne
inc
popf
ret
pushf
loope
inc
push
mov
repz
push
repz
mov
and
insl
in
pop
add
dec
xchg
sbb
shl
cmpsl
test
int
mov
cmc
int
adc
scas
add
mov
test
mov
pop
xchg
xor
mov
push
jbe
enter
push
or
jg
adc
shlb
movsb
dec
sub
push
movsb
mov
int
js
dec
fstl
gs
cmpsl
scas
dec
aas
mov
cmpb
sbb
jns
pop
push
xorl
dec
add
or
push
mov
lock
data16
ret
sub
sbb
and
push
push
push
and
cmp
cmpsl
xor
sahf
sbb
inc
jle
add
push
mov
test
fdivrs
xchg
pop
dec
fisubrl
icebp
imul
mov
popf
adc
mov
jb,pt
cmp
insb
jb
rorb
add
in
push
dec
je
pusha
enter
mov
mov
mov
lret
inc
stc
xor
clc
sub
dec
in
jo
cmpsb
data16
xor
notb
push
mov
or
pop
push
dec
sbb
mov
xor
mov
sahf
je
mov
call
test
jnp
dec
imul
cs
push
pop
rcr
cmp
pushf
sub
lea
lret
stc
ljmp
in
arpl
ret
mov
xchg
cmp
ljmp
push
je
sbb
std
xchg
fisttpll
xchg
testb
mov
and
push
jle
rclb
mov
and
bound
testb
jg
stos
in
gs
subl
insl
cld
jbe
daa
dec
mov
test
and
scas
roll
fnstenv
call
leave
je
inc
dec
or
sbb
xor
cmp
lods
xlat
fistpll
mov
out
and
icebp
addr16
int3
sbb
mov
fstpt
and
and
iret
inc
movsb
loopne
mov
test
cmc
mov
call
std
ljmp
out
xor
or
jb
orl
pop
aaa
add
int3
mov
mov
or
sahf
mov
lcall
notb
mov
pop
lahf
aam
scas
push
rolb
xchg
into
orb
in
mov
push
roll
shll
push
int
btr
and
dec
andl
clc
sbb
push
push
mov
inc
nop
lods
xchg
jb
ss
push
daa
popa
incl
inc
testl
repz
mov
mov
mov
jmp
test
xchg
add
ss
in
popf
xor
sub
aam
cli
jno
lods
or
cmc
add
fwait
push
xchg
hlt
mov
shl
lahf
push
imulb
pop
leave
mov
rol
cmpsw
shld
mov
lock
or
pusha
les
loopne
out
out
sub
pop
pusha
xchg
nop
xor
add
push
pop
and
pusha
sub
xchg
pop
jl
xchg
push
test
xor
ss
jb
stos
je
mov
adc
and
cltd
dec
ljmp
mov
jno
mov
int
loop
inc
jp
hlt
lock
cmp
add
mov
sbb
jnp
gs
test
shl
ja
fistl
imul
loope
sub
xor
leave
mov
add
xchg
push
mov
jl
out
les
ljmp
mov
mov
xchg
popa
mov
mov
enter
out
jmp
xchg
int
bound
in
xlat
rol
push
bound
decb
dec
outsl
xchg
pop
mov
dec
pop
push
inc
mov
lods
ss
lret
jnp
incl
std
and
jmp
jle
test
xchg
cmp
les
ss
xor
push
lahf
imul
push
cmp
imulb
xchg
and
mov
ljmp
jo
mov
sbb
mov
add
sub
push
xor
ja
call
sub
pop
push
lahf
push
outsb
ss
arpl
lahf
add
jnp
add
hlt
es
cld
add
add
lcall
les
dec
aaa
adc
pop
ss
mov
pop
inc
movsl
xor
mov
in
cmc
xchg
pushf
jbe
xor
out
insb
and
pop
lret
sbb
xchg
xor
fnstcw
cmp
std
sbbl
add
jmp
dec
lods
add
inc
cmp
push
sbb
mov
fs
pop
cld
inc
test
fmuls
lods
mov
fidivs
insl
inc
fidivs
lret
shrl
cmp
lret
outsb
in
xor
sbbb
sub
pop
movsl
iret
nop
popa
dec
pslld
ja
flds
nop
pop
fnstenv
xor
xchg
mov
adcb
fistpll
out
enter
ljmp
lods
sar
insb
cmp
mov
bound
imul
mov
push
mov
jp
rolb
sub
cmc
fistps
icebp
hlt
sub
inc
cmp
scas
xchg
jbe
shlb
jmp
fsubr
pop
mov
test
xchg
add
pop
jne
jle
scas
daa
mov
outsb
pop
roll
jbe
pop
sbbb
cwtl
jno
mov
cltd
into
andw
test
dec
dec
fildll
addr16
aam
and
mov
cltd
mov
js
pop
xchg
mov
sbb
incb
pop
xchg
mov
fdivr
pop
inc
inc
ficoml
inc
inc
mov
stos
fnstcw
adc
adc
mov
jbe
fisubrl
fcomps
pop
lahf
outsl
jmp
or
addr16
mov
into
xchg
jge
pop
mov
lcall
push
dec
jp
in
ficoml
dec
sub
dec
unpcklps
lds
cmp
mov
jne
cmp
add
fistps
jbe
xor
push
cmp
decb
imul
mov
inc
and
cwtl
pop
push
clc
mov
xchg
mulb
sub
fstl
adc
xor
subl
bound
or
inc
cltd
push
cmp
add
insl
xor
das
push
test
inc
dec
sub
sub
xor
int
jp
cld
jmp
daa
mov
ror
ljmp
add
add
rcrl
xchg
sub
mov
cld
pushf
mov
push
pop
das
adc
outsl
inc
out
fstl
lds
outsb
jb
mov
mov
in
call
pop
in
or
and
loop
cmp
nop
xchg
sidtl
sbb
mov
jecxz
dec
aad
addl
stos
jae
js
mov
adc
cmpsl
push
sbb
stos
mov
xor
push
leave
lahf
or
mov
rcl
lods
imul
adc
jo
lea
out
in
pop
lock
dec
pop
sub
mov
inc
jle
sbb
aaa
lret
idivl
sub
lds
cmpsl
push
imul
xchg
pop
bt
cli
stos
xchg
out
xlat
fidivrs
cltd
divl
loope
sbb
push
sbb
das
dec
iret
outsb
scas
insl
clc
repz
sti
clc
push
cmp
inc
mov
inc
bound
je
or
ror
call
sti
repnz
adc
mov
dec
ret
int3
mov
mov
add
cmp
and
mov
push
shrl
xor
push
mov
and
imul
adc
sub
ud2
cmp
bound
dec
imul
or
repnz
xor
inc
xchg
test
mov
mov
mov
add
xchg
bound
inc
ficompl
pop
sub
fisubrs
pusha
and
lods
and
cmp
and
add
test
cwtl
mov
movsb
sti
int3
adc
shlb
mov
les
call
inc
xchg
outsl
movsb
aam
fwait
inc
jg
scas
repnz
pop
sub
in
xchg
jo
popa
and
and
into
xchg
inc
popf
stos
repnz
mov
adc
jne
int
pusha
cmp
bound
cwtl
xor
adc
mov
adc
or
lea
pop
or
jo
hlt
mov
push
and
leave
lds
mov
imul
pop
pop
xlat
jl
mov
jmp
and
jbe
sub
adc
mov
pop
cmp
out
mov
jbe
pop
dec
cmp
pop
rcrb
pop
out
jnp
aam
lcall
sahf
stc
leave
or
imul
jno
repnz
inc
mov
test
insb
jno
jo
push
jb
and
ficomps
jecxz
mov
push
mov
adc
adc
pop
divb
cltd
test
sbb
cs
push
mov
js
xor
push
or
mov
add
roll
mov
push
sub
mov
das
nop
sub
jecxz
fs
ret
rclb
and
in
dec
cmc
jns
push
outsl
push
sbb
lock
sub
mov
es
push
fbld
in
mov
scas
or
push
shll
fsubs
lds
jne
mov
lahf
aas
mov
ss
or
popf
sarl
aas
out
mov
mov
push
dec
mov
enter
or
enter
push
and
pop
mov
pop
sbb
imul
imul
loop
flds
mov
js
mov
jmp
dec
add
ret
adc
or
cmp
imul
mov
xchg
push
movsl
and
jo
xchg
movsl
dec
push
push
pushf
add
out
pop
jbe
decl
test
inc
ret
popa
add
cmp
clts
xchg
jp
repnz
ror
repnz
pop
fists
xchg
mov
int3
arpl
lods
in
lods
test
or
fstpl
cwtl
pop
popl
dec
mov
arpl
or
jmp
dec
push
test
add
cltd
enter
fstpt
add
loopne
cmp
push
test
xchg
cmc
pop
mov
mov
call
xchg
or
ljmp
lret
mov
push
mov
mov
or
pop
lcall
addb
push
add
xchg
and
push
filds
dec
jp
fdivrs
arpl
icebp
shrb
xor
mov
ffreep
push
push
push
and
ss
jmp
gs
jns
aaa
ljmp
xor
dec
jns
mov
cld
xorb
sub
ret
sub
inc
cmp
pushf
stc
test
dec
pushf
shl
adc
les
xchg
jl
into
xlat
repnz
mov
stos
pop
jae
testl
mov
pop
cmpsb
sahf
jmp
clc
call
xchg
icebp
js
nop
or
push
mov
push
mov
clc
and
daa
push
sub
adc
push
outsl
jns
stc
fimull
shlb
into
out
int3
stos
outsl
std
cmc
jno
cltd
loopne
jo
insl
popl
fidivs
in
and
jmp
popa
in
aam
loope
hlt
lcall
cmpsb
sub
push
lods
xchg
pop
xor
sub
inc
dec
aas
sub
inc
dec
subb
outsb
mov
inc
or
pop
jae
outsb
stc
sbbl
pusha
inc
lods
push
pop
jbe
cmp
jl
adc
clc
les
cmp
lcall
in
lock
sub
stos
pop
add
jo
mov
mov
adc
pop
xor
dec
push
mov
adc
aam
sbb
testb
and
sbbb
ret
xor
pop
push
mov
dec
divb
xchg
sti
xchg
imul
ficomps
push
jle
mov
outsl
xchg
cmp
sbb
lea
dec
xchg
pop
mov
sti
sub
out
mov
jbe
test
cmp
xchg
mov
stc
mov
test
test
jge
jb
iret
push
hlt
int3
shlb
push
ljmp
pusha
je
outsl
mov
inc
jge
pusha
in
adc
mov
into
sti
loopne
sub
jp
aam
dec
movsb
test
cmp
out
les
adc
or
jl
pop
scas
daa
xchg
add
out
xchg
adc
sbb
and
call
mov
push
xor
xchg
adc
std
adc
sbb
nop
jne
jno
jb
sbb
inc
mov
int
jno
in
les
and
loope
pushf
mov
mov
insb
out
je
and
scas
inc
fstl
and
xchg
nop
xchg
add
addl
div
movsl
stc
lcall
lea
addr16
push
dec
push
pop
mov
movsb
je
testl
data16
dec
jbe
lret
cmp
out
ja
lock
cmp
arpl
adc
jmp
hlt
decl
adc
insb
jb
xchg
sbb
dec
mov
inc
enter
cltd
xlat
insl
lds
cmc
push
les
sub
sbb
push
js
push
mov
out
xchg
clc
xchg
mov
cmpsb
enter
sub
data16
js
push
mov
out
xchg
clc
xchg
mov
cmpsb
enter
sub
data16
js
push
mov
out
xchg
clc
xchg
mov
cmpsl
enter
sub
data16
js
push
mov
out
loope
push
pop
dec
daa
pop
aaa
int3
cmpsl
es
xchg
xchg
adc
cwtl
adc
data16
mov
addr16
pop
push
ret
cmpsl
and
adc
divl
inc
xlat
jl
mov
sbb
inc
ret
mov
cwtl
fs
push
out
cmp
dec
xlat
pusha
mov
outsl
loopne
mov
xchg
sbb
fdivs
push
loope
mov
testl
mov
dec
jns
cmp
lahf
cmp
dec
icebp
pushl
in
int
idiv
inc
mov
push
dec
sti
jge
ret
lods
inc
dec
test
pop
dec
dec
imul
and
jae
dec
mov
or
enter
lcall
push
push
adc
dec
push
mov
sbb
inc
cmp
ss
xor
xchg
cwtl
divl
int3
cmp
cmp
or
ja
sbb
jae
andl
daa
xor
bound
xchg
inc
pop
dec
fstl
shlb
sbb
fists
icebp
mov
clc
and
push
mov
xchg
adc
out
movl
sbb
orb
jg
outsl
sbb
ficoml
lret
and
pop
loop
jecxz
xchg
xchg
pop
mov
xlat
adc
je
jae
movsl
adc
enter
call
xor
and
sub
pop
rclb
lods
sbb
xor
fcmovnbe
jmp
jle
divl
inc
xlat
push
daa
mov
pop
xchg
loopw
repnz
ret
cmpsl
and
adc
divl
inc
xlat
push
daa
mov
pop
xchg
loopw
repnz
ret
cmpsl
and
cld
mov
or
adc
xlat
xchg
out
mov
mov
jne
into
subb
mov
sbb
lahf
nop
fistpl
mov
addr16
jp
sbb
push
aaa
pop
js
cmp
and
cmp
xor
roll
test
gs
out
cmp
adc
fs
mov
jecxz
and
daa
cmp
int
cmp
or
sub
ljmp
xchg
xchg
andl
mov
mov
shl
cmp
dec
stos
pop
adc
adc
sarl
dec
repz
jg
jge
and
cltd
jns
xchg
cmpsb
mov
push
fdivrs
and
fstps
call
and
insb
jnp
dec
fidivrl
addr16
push
aad
dec
mov
add
stos
mov
adc
xor
loope
dec
cli
outsb
jne
dec
cmp
lods
push
dec
inc
loopne
lock
mov
mov
jle
cltd
jb
call
loop
mov
cmpl
or
mov
sbb
lods
mov
dec
rorl
negl
adc
and
mov
nop
cmp
imul
xchg
aad
sbb
inc
je
xchg
shll
or
aam
dec
mov
or
add
cmp
add
xchg
lahf
arpl
push
subb
ret
fxch
movsb
mov
push
ficompl
jne
js
push
arpl
dec
and
les
ret
push
mov
pop
mov
int3
mov
mov
add
out
or
adc
xlat
pop
test
sbb
fcompl
imul
ja
jne
push
pop
out
les
daa
addr16
jg
rorl
fldl
fisubrs
jnp
stos
out
out
inc
inc
pslld
mov
xchg
loop
test
cmpsb
sbb
es
lods
cltd
pop
xchg
ljmp
outsl
mov
enter
xor
xor
xor
fimull
jle
sbbl
test
mov
fidivrl
fidivrs
add
jb
xchg
add
ja
out
mov
sub
and
mov
sahf
rclb
xchg
sbb
mov
adcb
jbe
ja
dec
shll
push
in
test
mov
cmpsb
sarb
sbb
push
sub
sbb
lock
ss
push
js
jecxz
pop
xor
mov
inc
pop
movsl
dec
mov
rcrb
or
ljmp
adc
or
das
jp
and
lods
sahf
int3
pop
div
add
push
and
test
call
push
lcall
ss
in
cltd
fists
inc
mov
shlb
movsl
xchg
lahf
sahf
ja
pop
or
sub
jle
insb
mov
add
bound
xchg
iret
jnp
pop
dec
dec
push
inc
push
xchg
clc
jmp
orb
ds
xor
inc
jecxz
add
fistpl
pushf
ds
xor
test
mov
stos
leave
xchg
jp
lods
stc
inc
push
bound
lcall
rcll
push
add
test
mov
inc
clc
inc
rol
insl
xlat
adc
ds
and
sub
xchg
pop
rcrl
lahf
pop
ror
rolb
xor
mov
into
cwtl
xor
sub
mov
and
xor
or
adc
xchg
jge
mov
jo
jno
fnstcw
test
mov
xor
xchg
jge
xchg
sub
push
sbbl
mov
loopne
cli
lods
inc
mov
pop
mov
mov
xchg
inc
mov
or
arpl
cmp
into
cmp
arpl
sbb
popl
cmc
lds
xor
adc
xor
movsb
inc
andb
mov
daa
repz
mov
lahf
adc
adc
push
sub
xlat
lahf
xchg
sbb
mov
mov
data16
xlat
sub
xor
out
sarl
mov
fs
insl
inc
xor
aas
sub
scas
cmp
sub
jmp
fnstenv
xchg
jbe
push
add
shlb
mov
sbb
js
or
jnp
jmp
mov
jecxz
cmovp
in
sub
dec
jmp
daa
in
xchg
lds
js
aas
cmp
pop
jmp
int3
movsl
xor
sub
or
setge
mov
sbb
hlt
cs
in
mov
mov
xchg
xlat
lret
push
and
mov
push
cmpsl
outsl
dec
dec
mov
pop
movsb
lahf
or
js
dec
cmpsb
mov
sub
adc
cmp
sbb
addl
push
push
call
sti
popf
fdivrs
xchg
jbe
jno
test
adc
mov
pop
jno
jg
dec
mov
out
pop
stos
pop
pop
jno
popa
scas
mov
out
fldl2e
fwait
hlt
cmp
aad
les
out
movsl
jae
xchg
daa
leave
add
roll
cltd
and
jmp
add
imul
pop
mov
mov
cmp
adc
ret
mov
pop
cmpsl
jl
cmpsb
repnz
aas
inc
mov
inc
lret
stos
or
cmc
stos
adc
dec
scas
lret
into
movsl
xchg
mov
imul
fimuls
andl
loop
mov
jno
jo
mov
adc
iret
js
sub
mov
lds
rcrb
ljmp
fsubrs
push
dec
and
lret
jo
or
sbb
repnz
push
ss
mov
or
idivl
repnz
push
and
lcall
aad
bound
xchg
xor
push
ljmp
or
popf
jle
cmp
pop
add
dec
lea
outsl
ja
push
add
xchg
cli
cmc
adc
push
jbe
mov
inc
lret
add
lahf
lea
insl
mov
cmp
xchg
adc
adc
adc
push
arpl
lcall
add
dec
outsb
cli
jnp
inc
add
add
ljmp
out
das
xchg
int3
imul
mov
in
pop
insl
out
movsb
out
mov
vmread
jno
dec
fdivs
or
and
jno
fistpl
pop
test
add
push
and
and
mov
js
dec
lret
pusha
clc
and
jmp
push
inc
xor
pop
int3
jns
movsb
mov
aam
xor
cmp
iret
outsb
int
and
fcoms
shrl
pop
ljmp
push
mov
dec
enter
jo
pusha
and
mov
mov
cltd
pusha
add
sbb
dec
ljmp
scas
push
pop
inc
or
in
lea
inc
sbb
enter
in
scas
push
std
mov
jne
daa
mov
jl
cmp
xor
pop
iret
cmpb
popl
leave
jmp
ret
inc
in
jge
inc
push
xor
lods
xchg
inc
mov
sub
push
push
or
gs
lods
mov
test
sbb
cmpsb
pop
loop
push
inc
cltd
fs
lods
add
inc
cs
ljmp
add
daa
sti
hlt
mov
dec
xor
fsubrs
inc
dec
in
push
out
mov
xor
mov
ret
push
test
xchg
pop
add
sub
lods
dec
adc
sub
popf
mov
scas
insb
lock
scas
pop
ficompl
mov
loope
jle
adc
adc
cltd
arpl
push
leave
enter
sbb
sbb
mov
pop
xlat
xor
add
cmp
cwtl
push
push
lret
notl
fcoml
into
call
mov
push
jecxz
std
addr16
ret
fstl
mov
aaa
pop
inc
jbe
stc
pop
popa
scas
aaa
mov
in
push
out
les
cmpsl
and
and
in
ja
sub
aam
ljmp
lods
xor
inc
sub
push
xchg
xor
test
out
sub
pop
shlb
rorl
xchg
ds
popf
xor
popa
jmp
aad
mov
mov
in
mov
pop
lret
xor
pop
imul
ficompl
ds
sbb
push
je
aad
xchg
sbb
ret
fimuls
pop
subl
cmp
xor
fcoms
test
out
jmp
fists
ljmp
xchg
fcmovbe
jb
loop
aas
bound
or
test
adc
adcb
fucomi
or
into
mov
cwtl
inc
fstpl
cmp
push
push
cmp
sahf
sahf
leave
pop
icebp
jl
ja
aaa
jl
adc
shlb
push
test
loope
insb
daa
add
fs
cmp
sbb
or
pop
repz
fldl
js
lret
mov
aam
cmc
lret
xchg
mov
add
mov
movsl
std
push
movsl
cmp
xor
loop
add
cmp
fidivrl
imul
inc
stos
fisubrl
add
cld
and
andl
insl
aaa
in
lahf
adcl
jecxz
scas
xchg
ret
call
sub
push
push
test
xchg
push
fisubl
fsubrl
inc
xchg
or
xchg
cld
movsb
std
push
fsubrs
mov
cmp
push
or
xor
pop
rcl
inc
jmp
mov
pop
sahf
jp
jge
cmp
mov
ret
aad
popf
int3
out
pop
outsb
pop
mov
shl
nop
pop
jns
pop
jne
pop
ds
push
lret
movsb
jl
pop
ja
movsb
ret
sti
andl
sub
push
je
std
jp
loop
cs
xlat
cmpsb
mov
daa
or
mov
fs
aaa
rol
jmp
mov
sub
or
aad
cli
loopne
dec
adc
imulb
out
adc
in
das
inc
cwtl
add
pop
iret
sub
shlb
iret
les
inc
mov
movl
pop
xlat
stos
call
add
xchg
cwtl
sahf
ss
sub
adc
inc
xchg
or
adc
dec
mov
pop
adc
cmpsb
inc
test
add
dec
jmp
and
sbb
cwtl
imul
je
push
mov
inc
jb
add
aas
imul
lea
dec
dec
out
sbb
movsb
inc
cld
lret
cltd
xor
dec
dec
dec
sarl
mov
dec
push
sbb
rol
repz
and
daa
fdivr
inc
push
fldt
ret
cmp
stos
xor
sbb
jl
andb
xchg
fidivs
insl
xor
jecxz
dec
hlt
sbb
lods
pop
sbb
cmpsl
jno
mov
lods
xchg
inc
push
fwait
inc
data16
push
pop
out
in
mov
addl
pop
fsubrs
xor
loopne
jns
pop
push
jl
mov
sbb
and
push
scas
dec
lahf
test
sbb
mov
xor
add
dec
sbb
lahf
pop
or
insb
jb
push
sbb
aam
lcall
fldl
loopne
stc
in
int3
inc
je
push
xchg
fxch
pop
in
mov
adc
cld
inc
adc
daa
in
loopne
mov
mov
addb
int3
pop
sbb
mov
subl
or
es
lret
pop
shl
xchg
rcrb
faddl
sub
jae
mov
cwtl
jge
dec
rcll
jl
pop
fidivs
sahf
not
jo
mov
sbb
jp
mov
inc
pop
adc
push
sbb
sbb
inc
xor
cmp
cmp
in
push
cmp
adc
add
mov
insb
pop
push
arpl
lods
add
mov
cld
int
stos
dec
cmp
xor
or
enter
shr
dec
lods
rcl
pop
pop
xchg
mov
xchg
mov
dec
and
je
push
outsl
jp
dec
mov
add
ret
adc
mov
push
xor
inc
daa
xchg
jno
pop
sbbb
mov
jns
jg
pusha
shlb
ljmp
jmp
cmpsl
std
int
inc
icebp
outsl
hlt
xchg
cmp
xor
rolb
or
pushf
outsb
sbbb
call
sbb
and
mov
insb
fldl
das
out
push
push
sbb
fildl
sbb
fwait
popa
ds
popf
les
lock
jb
arpl
jo
jno
sub
sbb
or
or
sbb
jle
jl
sti
cmp
xor
mulb
lcall
inc
lcall
xchg
lock
imull
gs
jmp
push
push
decl
pop
add
inc
lahf
int
jns
mov
popa
cmpsb
lods
or
cmp
sub
cmp
into
cmp
stos
cmc
mov
adc
push
movsl
sbb
xor
sti
add
aas
xor
mov
lret
sub
outsb
jle
repz
xchg
mov
movsl
in
dec
or
pop
xchg
xchg
loopne
les
arpl
sub
lods
dec
mov
arpl
lcall
mov
or
outsb
add
jb
out
inc
jmp
sub
mov
je
push
dec
dec
bound
cmp
mov
mov
je
push
jno
mov
mov
psubb
pop
cmp
iret
xor
popa
inc
pusha
cwtl
iret
dec
mov
mov
fsubl
cmc
push
psrld
jmp
leave
xchg
fmull
out
xchg
add
cmp
jge
sbb
and
loopne
faddl
pusha
sbb
mov
xchg
sbbl
dec
adc
js
push
cmp
pushf
jg
icebp
mov
push
cltd
inc
pusha
add
sub
push
out
pop
or
cmp
sbb
ret
add
add
mov
add
cld
jno
pop
jmp
jns
scas
mov
addb
jns
negb
lret
insb
or
nop
jp
mov
push
sbb
stc
sar
repz
std
dec
scas
rcrb
fcoml
aas
scas
adc
out
mov
aas
pop
mov
stos
xchg
push
fsubl
lock
pop
and
sub
out
pop
jle
leave
call
das
cmp
js
mov
jbe
xchg
hlt
mov
inc
push
popa
mov
inc
shrb
or
add
sbb
pop
dec
pop
lods
mov
adc
rclb
repnz
lods
xor
stc
test
sti
into
jnp
fstl
jno
movsl
mov
stos
pop
iret
jbe
in
xor
insb
push
lock
and
mov
pop
in
cli
mov
pop
xor
cs
push
or
push
xor
imul
sub
cmp
cmc
xlat
mov
sub
xor
xor
sbb
sbb
arpl
or
pop
xor
retw
in
mov
xchg
lods
aad
or
aas
push
not
negb
bound
jb
mov
mov
stc
push
xor
xchg
add
inc
pushf
sub
imul
xchg
sbb
cmpsb
insl
xchg
cmp
dec
ljmp
and
mov
call
sub
lock
pop
lods
jle
jb
outsl
ret
mov
pop
sbb
sti
in
xorl
jb
push
adc
push
mov
stc
popa
xor
pusha
pop
pusha
ret
jp
nop
sbb
fiadds
dec
xor
lahf
or
xor
xor
push
into
mull
cmp
mov
data16
iret
fcmovnbe
call
mov
inc
push
add
sub
push
push
mov
int
lock
es
pop
movsl
std
fstps
xor
cwtl
sbb
aaa
movsl
mov
sbb
out
fisubrl
sarb
leave
xchg
decl
clc
fsubl
aad
adc
inc
cmovnp
xlat
pop
xchg
ret
enter
clc
mov
in
int
jecxz
loop
repz
mov
ljmp
sbb
data16
loopne
push
fwait
dec
adc
je
scas
test
cs
push
jl
cmp
mov
std
into
mov
adc
stos
loop
sti
sub
or
into
jns
lcall
jbe
imull
inc
fcomi
hlt
movsl
cmp
aaa
out
jb
ret
scas
adc
pop
test
xor
cld
mov
test
mov
and
add
andb
pop
fildll
xor
mov
cmc
and
hlt
add
inc
mov
push
fadds
xchg
fidivrs
dec
and
lds
sub
and
andb
mov
sub
dec
mov
cmpl
ljmp
iret
pmaddwd
test
and
add
mov
jg
ret
sbb
push
pushf
xchg
or
punpckhwd
inc
lahf
fdivrs
repz
scas
lock
cmc
repz
xchg
adc
popa
out
dec
mov
sbbb
test
scas
or
jb
lods
sbb
mov
pop
sub
daa
lock
outsb
xchg
aas
sub
pop
mov
sbb
les
repnz
stos
ret
inc
mov
sbb
jne
loop
inc
push
sub
movsl
pushfw
mov
push
inc
loope
sbb
jno
sbb
aas
int
mov
and
mov
or
int
sbb
faddl
neg
add
dec
int3
ljmp
sub
enter
pop
pop
lcall
xchg
lcall
or
popa
shrd
js
push
mul
jno
inc
or
movsb
call
mov
sbb
pop
or
lret
add
es
in
imul
leave
lods
hlt
pop
subl
addl
into
jo
push
jne
xchg
test
test
sub
sbb
xchg
lea
mov
movsl
lret
mov
mov
repnz
movsl
sub
and
aas
push
mov
dec
inc
mov
sahf
add
push
test
jnp
pop
or
xchg
nop
sub
add
adc
je
out
sub
subb
enter
cmpsl
inc
lahf
cmp
inc
call
insb
mov
push
mov
sub
mov
icebp
mov
jb
hlt
or
adc
or
fcomps
push
loope
jle
adc
popa
mov
dec
mov
or
scas
in
xchg
scas
mov
ss
popf
popa
pop
in
cmp
xor
repnz
jnp
mov
sbb
xor
xchg
ljmp
popf
adc
fcoms
jle
add
and
xor
andl
or
push
cmpsb
mov
sbb
inc
call
dec
daa
out
sti
rcrl
pop
mov
imul
adc
cld
cmp
in
aas
mov
adc
addr16
sub
inc
lahf
add
es
rcl
pop
sbb
frstor
xor
cltd
jle
stos
push
mov
cld
add
das
imul
push
or
sahf
cld
add
sbb
push
adc
mov
cmpsb
call
lods
add
fcoms
jge
adc
je
push
or
mov
outsb
xor
xor
bound
add
xchg
push
push
mov
jae
mov
popa
rorl
iret
jecxz
dec
cmp
cmp
jnp
cmp
nop
jmp
push
pop
mov
mov
mov
lock
ficomps
pop
sub
mov
cmp
and
xor
call
lods
mov
cs
andl
int3
into
jbe
lods
jmp
sahf
xor
fnsave
loope
xor
addr16
lock
or
ret
lahf
add
pop
jmp
xor
ljmp
cmp
jns
jmp
cmpsl
test
or
std
loop
das
jb
push
pop
leave
int
int
jmp
inc
fldenv
adc
divl
inc
xlat
push
daa
mov
pop
xchg
loopw
repnz
ret
cmpsl
and
adc
divl
inc
xlat
push
daa
mov
pop
xchg
loopw
repnz
ret
cmpsl
es
xchg
xchg
push
out
negl
movl
mov
adcb
addr16
repnz
lret
push
cmpsl
mov
xchg
xchg
push
in
divl
ret
fcomps
sbb
lcall
int3
push
mov
push
mov
mov
mov
mov
push
add
push
mov
push
mov
pop
add
mov
mov
mov
movzbl
movzbl
sub
je
mov
call
push
pushl
call
pop
pop
call
push
push
call
push
push
push
push
push
call
mov
add
push
pushl
call
pushl
mov
call
push
call
push
push
push
push
push
mov
call
push
call
push
push
push
push
call
push
push
push
push
call
pushl
call
push
push
mov
call
push
push
push
push
push
push
mov
call
push
call
mov
movzbl
movzbl
sub
jne
push
push
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
mov
mov
movzbl
movzbl
sub
je
call
jmp
pushl
pushl
call
pushl
call
push
pop
pop
pop
pop
pop
ret
fidivrl
ljmp
mov
sarl
imul
orl
mov
inc
lret
popa
ljmp
and
icebp
jp
push
or
fcmovbe
lret
leave
ljmp
iret
stos
sub
imul
dec
aad
mov
inc
scas
aas
cli
adc
and
add
cmp
test
and
sbb
in
out
xchg
lret
cmpsb
cmp
in
inc
popa
push
jae
in
addl
mov
ret
jnp
pop
adc
sub
xchg
mov
jp
stos
jl
mov
sub
nop
jno
leave
mov
fisubrl
addl
pop
loop
push
sub
ret
and
out
xor
es
icebp
dec
shl
nop
push
sub
xorl
xchg
aaa
popa
stos
int
sarl
dec
addb
push
inc
lret
in
jnp
add
mov
inc
dec
pop
jp
push
sbb
sub
fwait
adc
pop
lcall
push
pop
xchg
xchg
jp
adc
pop
loopne
sarb
add
and
dec
clc
pop
aas
movsb
sbb
sbb
fstl
pop
fidivrl
xor
adc
rorl
loope
icebp
sbb
sub
cli
popa
ljmp
and
sarl
push
sbb
sub
addr16
fs
das
add
xlat
test
out
fs
mov
in
sbb
cmp
in
test
cmc
cmp
in
lock
push
xor
aas
dec
push
inc
xchg
mov
mov
stos
mov
cld
scas
cli
movsb
xor
xchg
je
sbb
adc
jb
test
inc
subl
jge
pop
sti
in
bound
ja
mov
sahf
xor
mov
int3
jne
mov
lret
sub
loop
data16
dec
push
mov
icebp
xchg
fldl
sbb
xor
jno
aaa
and
in
cmp
or
out
std
sub
push
xchg
aad
sbb
loope
fbld
xchg
jae
mov
pushf
call
add
dec
enter
or
cltd
adc
pop
mov
insb
mov
out
adc
pop
lds
aad
xchg
test
xor
fisubs
push
in
inc
mov
cmpsb
jmp
aaa
lahf
jmp
add
stos
ljmp
xchg
jp
shlb
movsb
jl
loope
jns
imull
fdivrl
pop
scas
cmpsl
lcall
cs
fs
notb
out
ss
outsb
pop
push
aaa
in
pop
xlat
xchg
cmpsb
inc
movsl
popf
or
sbb
enter
mov
or
fxam
jmp
lret
push
out
aad
pop
jns
push
in
push
lret
mov
insl
cmp
in
push
enter
stos
shlb
mov
push
and
testb
shll
imul
andl
sub
or
jb
shll
adc
test
push
outsl
dec
dec
add
popa
rorb
push
scas
loop
jo
fdivl
insb
repz
aam
sub
dec
daa
cmc
and
ret
xor
ja
stos
out
fsubrl
dec
sub
divl
jns
mov
push
in
lcall
pop
repz
xor
loop
inc
divb
nop
dec
push
xchg
mov
cwtl
or
or
sbb
adc
xchg
arpl
mov
jmp
in
repz
xchg
sarb
mov
add
mov
dec
cmp
adc
cmp
clc
xchg
insb
dec
adc
mov
leave
push
and
push
mov
addl
outsb
push
inc
fisttps
out
stos
ficoms
dec
inc
fldenv
das
popa
pusha
hlt
push
mov
mov
inc
test
insb
int
jp
push
or
sar
repz
push
adc
jl
mov
xor
ret
jo
pop
jge
das
dec
popf
js
dec
push
popa
sbb
or
js
fnstenv
and
jae
jg
inc
jmp
insl
sub
and
pop
mov
popa
fisttpl
ret
mov
mov
std
xchg
xchg
div
inc
enter
sub
pop
ja
psraw
sbb
or
xchg
mov
in
lods
cmc
xchg
sti
add
sub
inc
mov
sbb
lret
pop
test
sahf
cmpsl
repz
es
shrl
xchg
mov
add
arpl
mov
pushf
stos
sbb
inc
les
int3
pop
imul
popa
out
or
fmull
stc
and
bswap
cmpsb
cld
lods
mov
subl
idivl
rcl
fldt
shrb
pop
push
jnp
loope
lods
and
mov
shlb
xchg
or
push
jg
lock
lahf
sahf
adc
dec
pop
push
jnp
pushf
cli
ffreep
int
mov
mov
stos
bound
popf
pop
cld
inc
add
xor
jb
cmp
test
scas
popa
mov
bound
ds
cmp
sbb
insl
in
mov
pop
cmp
daa
fdivrl
mov
divl
adc
jnp
inc
cmp
jg
mov
jo
hlt
out
enter
dec
out
test
push
fmuls
test
push
push
jle
xlat
cli
sarb
xchg
enter
mov
dec
adc
fwait
das
sub
or
sbb
xchg
test
xor
ret
movsb
mov
mov
push
and
cmp
mov
mov
xchg
inc
jle
aas
jl
mov
lds
cli
shll
mov
out
push
cmp
inc
lea
add
xor
pusha
pop
scas
xchg
pop
test
enter
shlb
xchg
mov
insb
lcall
jae
sbb
loope
loopne
jg
inc
aam
and
je
jnp
adc
sahf
inc
add
cmpsl
adc
jle
xlat
jnp
and
mov
xchg
xchg
adc
lods
lcall
leave
insb
idivb
sbb
rcl
xchg
fwait
pop
pop
sub
push
decb
mov
jne
shrb
mov
pop
xor
aam
adc
inc
insl
push
dec
out
out
add
js
stos
ret
lret
lods
mov
rcrl
test
mov
out
hlt
push
xchg
xor
sbb
pop
adc
aad
xchg
fmull
cltd
push
sub
push
mov
xlat
mov
fwait
addr16
lahf
add
xorl
jecxz
pop
push
mov
aas
loopne
cs
dec
inc
push
test
pop
ret
add
aad
lds
cmp
fiadds
xchg
pop
sub
sbbl
inc
in
frstor
nop
jae
jl
gs
imul
lret
jo
push
xchg
dec
xchg
fcomi
dec
jb
jae
sub
ficoml
mov
scas
data16
in
xchg
jge
and
or
add
outsl
jnp
pop
aaa
and
fsubrs
jmp
cli
popl
xchg
loop
std
fxrstor
mov
aas
aas
xor
js
xor
mov
popf
mov
dec
mov
push
add
fldenv
popa
and
hlt
bound
sarb
mov
xchg
xchg
ds
nop
in
jp
push
xorb
xor
mov
rclb
mov
push
movsb
ljmp
ljmp
xchg
js
inc
mov
cmp
mov
fld
imulb
cs
or
jb
and
push
add
cmpsl
pop
push
jns
aas
xchg
cmp
sbb
bound
mov
lret
mov
adcl
mov
xor
decb
jne
sbb
imul
lock
pop
inc
fwait
pusha
adc
enter
lret
fidivrl
adc
outsb
sbb
jle
lcall
xor
sahf
jbe
shlb
or
loope
in
test
bound
mov
pop
outsb
ret
cmp
push
hlt
arpl
imul
push
sarl
stos
movsb
cmp
lret
imul
or
fadds
jnp
xchg
icebp
loope
test
mov
and
mov
adc
iret
outsb
sbb
ret
in
mov
xchg
enter
cmp
fisttps
xor
out
xor
mov
jbe
inc
lahf
jmp
dec
pop
loop
aas
insl
loopne
fcoms
fs
xchg
test
mov
repz
lcall
shl
into
jns
das
adc
ficoms
cmp
rcr
sub
in
in
sub
pop
or
cmp
mov
lret
hlt
push
jge
add
pop
mov
pop
aad
out
cmp
dec
mov
pop
inc
inc
fldl
lock
lcall
or
fwait
push
push
out
adc
iret
add
add
mov
or
add
stc
xchg
push
mov
pop
mov
es
into
scas
or
sbb
pop
dec
nop
mov
mov
dec
bound
push
ja
scas
xor
fsubrl
pop
popa
fnstenv
or
int3
roll
mov
outsl
cs
inc
push
sti
and
jne
adc
stos
test
shlb
loope
bound
shrb
rcll
sbb
mov
dec
fistps
xchg
jno
cmp
cltd
daa
push
lret
xchg
sub
cmp
loopw,pt
icebp
or
pop
hlt
cmp
mov
and
cmp
aas
xor
adc
popf
sub
jle
out
or
lds
movsb
sub
aam
cmp
lock
xor
lea
cmpb
jp
pop
clc
leave
enter
es
leave
mov
jbe
ja
jne
jnp
pop
daa
dec
and
and
clc
inc
xor
movsl
in
dec
and
mov
dec
adc
xchg
cmp
sub
mov
jge
into
sbb
movsl
aam
cmpsl
dec
gs
push
or
cmpsb
test
cwtl
cli
loope
inc
stc
sbb
inc
out
decl
sub
nop
outsb
pop
loope
insb
pushf
ret
js
cmp
mov
int3
push
loop
in
scas
push
ret
push
out
sub
inc
and
lock
mov
imul
mov
das
cmpsl
push
pop
xor
cld
inc
cmpsb
cmc
cmp
fwait
pusha
mov
dec
cmp
outsl
push
scas
ss
ss
in
mov
loop
dec
std
add
test
xor
inc
gs
pushf
and
xchg
mov
inc
fdivrl
mov
call
xor
mov
pop
out
mov
ljmp
cmpsl
stos
cmpsl
push
mov
push
sub
pop
repz
ds
ja
xchg
pop
insl
daa
sub
pop
fnstcw
xorl
jl
pop
push
or
in
inc
push
or
lcall
sahf
dec
sbb
xlat
sub
dec
adc
cmp
into
loope
push
xchg
add
fs
divb
inc
gs
mov
push
and
cs
dec
jo
inc
ret
int3
push
sub
loopne
pop
out
cwtl
cld
neg
cwtl
mov
repz
lahf
mov
adc
add
cmc
lret
int
cmp
inc
xor
cmp
sbb
mov
push
dec
xchg
stos
adc
adc
inc
ljmp
jle
mov
loope
ljmp
cmp
jo
jb
int3
push
divb
jb
push
dec
pusha
aaa
xchg
cltd
sbb
pop
loopne
dec
jne
mov
xchg
pop
movsl
ljmp
xor
shl
xor
call
into
dec
pop
cmp
ficomps
sbb
inc
test
and
mov
xchg
test
ror
pop
je
xchg
aam
xchg
adc
fwait
je
out
lret
insb
aad
lret
imul
in
subb
test
fimull
sbb
insb
mov
dec
mov
pop
and
imul
shl
js
mov
pop
rcrl
and
dec
inc
adc
mov
dec
add
int3
ja
pushf
pusha
dec
dec
inc
mov
sbb
and
push
mov
fs
cmp
push
cltd
fldt
stos
and
jg
pusha
lea
aam
lods
hlt
les
xchg
mov
jmp
or
pushf
push
repnz
pop
andl
mov
js
pop
or
lar
movsb
sbb
and
mov
and
fs
push
jecxz
xor
in
ss
pop
insl
pusha
ss
or
xor
pushf
cmpsl
pop
xchg
iret
jns
or
cmp
lds
lods
js
add
dec
jmp
subb
mov
xchg
in
or
repnz
pop
lahf
nop
pushf
or
clc
arpl
cmp
repnz
shll
add
cmp
pop
xor
arpl
push
sbb
mov
inc
mov
jnp
push
daa
fldl
mov
int
jb
clc
push
popf
mov
jmp
scas
outsl
mov
add
es
out
pop
out
jno
pusha
pop
shlw
adc
ljmp
insl
scas
leave
adc
mov
push
test
or
les
push
lret
popa
sub
lds
pop
test
test
daa
mov
jle
icebp
mov
xor
andb
cs
pusha
inc
cmp
or
mov
push
adc
sub
mov
add
push
pop
and
mov
xor
imul
pusha
mov
sarl
cmp
cmpsl
pushf
cmpsb
mov
mulb
in
imul
cmp
pop
jno
jnp
mov
mov
ds
inc
test
dec
cmp
mov
pusha
xchg
fidivs
adc
lea
aam
jno
mov
jle
sub
mov
mov
pop
int3
bound
cmpsb
dec
test
in
int3
repnz
pop
stos
pop
mov
std
mov
inc
rcrl
jmp
jno
out
jns
mov
push
movsb
cmp
and
mov
jno
mov
das
lret
arpl
notb
or
insl
imul
mov
fmuls
cld
lock
xchg
insl
fxam
addl
divb
mov
xorb
fisttps
xchg
repnz
sti
inc
jl
stos
inc
sbb
mov
jg
ss
test
and
in
sbbl
cmc
data16
jbe
fnstenv
xchg
mov
push
pop
ja
cld
hlt
lret
nop
or
or
or
inc
push
mov
das
sti
cmpsl
xchg
mov
pop
cmp
mov
cld
js
sub
inc
inc
mov
jl
inc
pushf
adcl
cld
jecxz
fmull
and
jl
fnsave
jb
or
movsl
sahf
xchg
adc
leave
sbb
dec
push
push
sub
cwtl
or
aad
adc
in
push
in
ljmp
sub
sub
push
call
pop
outsb
mov
cmp
out
fucomi
loopne
ret
arpl
pop
push
leave
add
les
add
movsb
and
inc
push
stos
xor
and
shrb
push
insl
pop
push
pavgw
cmp
jle
add
pop
mov
sahf
add
sti
lcall
mov
xchg
cli
jnp
and
aad
mov
jg
and
cmp
stc
gs
sub
mov
or
mov
inc
adc
xor
jl
fwait
lcall
in
out
adc
in
idivl
stc
daa
rolb
lea
cltd
mov
push
cmp
ss
pop
mov
or
mov
cmpsb
ret
or
add
mov
rcr
cmp
xchg
ljmp
sub
and
fnsave
loope
mov
stc
dec
sbb
loop
cwtl
popa
clc
scas
adc
rclb
out
addr16
pop
gs
xchg
mov
pop
pop
mov
push
dec
into
outsl
sbb
cmpsl
std
jecxz
rol
stos
xor
xor
cmp
push
pop
add
scas
sbb
ds
subl
bound
jno
xchg
push
test
scas
popl
adc
xchg
repz
out
inc
push
inc
inc
lret
pop
xchg
pop
add
jbe
pop
jns
dec
shrb
in
mov
jno
push
iret
insl
aas
fisubs
iret
lahf
add
sahf
lock
in
and
push
cmp
jge
fs
mov
pop
lahf
push
loope
out
in
mov
lea
lcall
cmp
mov
dec
mov
inc
sar
or
popf
call
mov
sub
jnp
test
and
fidivrl
push
xchg
aaa
lret
in
or
xlat
subw
lock
xor
or
push
dec
cmpsb
and
lods
ja
push
and
lcall
or
mov
and
mov
movsl
les
lods
mov
lahf
imul
notl
mov
xor
shll
mov
subl
push
cld
imul
mov
xchg
out
loop
cmp
lock
nop
adc
out
jecxz
xor
or
icebp
mov
in
dec
rcrl
xchg
push
jg
xor
xchg
fwait
mov
xor
jne
mov
jae
jmp
addr16
inc
mov
jae
sahf
inc
aaa
es
stos
adc
lret
sarl
sbb
into
lcall
lea
shlb
xchg
sub
ror
adc
leave
dec
adc
movsb
loop
mov
minps
inc
out
xchg
mov
sub
push
xchg
or
lds
cmp
add
out
mov
push
ss
jb
loop
addr16
test
imul
test
call
scas
jne
leave
cmp
and
push
mov
pop
shr
add
cltd
push
icebp
pusha
or
scas
pinsrw
scas
xchg
inc
movd
cwtl
mov
addr16
movl
mov
arpl
sbb
loope
int3
push
push
punpcklwd
pop
scas
ja
in
mov
xor
cltd
inc
test
sbb
fadds
or
jg
adc
loope
inc
fwait
xchg
adc
aas
sub
push
nop
mov
push
pop
sub
inc
in
mov
or
sub
cmpsb
inc
xchg
dec
jae
or
push
mov
jb
imul
xchg
lods
ret
in
loope
xchg
gs
ret
shll
call
inc
cmp
imul
popf
cmc
xchg
pop
dec
ja
add
sub
movl
mov
mov
mov
insb
out
in
dec
dec
sbb
dec
pop
sti
popa
pop
in
int3
push
cs
cmp
adc
xor
fs
pop
cmp
in
sbb
dec
stos
xor
xchg
int3
jp
pop
pop
mov
add
jle
push
push
mov
in
out
pop
dec
out
lret
cmp
sub
lret
and
fwait
into
dec
clc
mov
lret
aaa
push
jnp
movsl
jnp
mov
setns
dec
dec
xchg
cmc
mov
sbb
fwait
cmp
jne
and
ret
insb
insl
icebp
push
inc
mov
jno
pop
jbe
xchg
movsl
and
test
insl
lea
daa
mov
fsubrs
je
mov
rolb
cwtl
cmp
cmp
loope
repnz
leave
shl
pop
jo
ret
pop
imul
sub
aad
xor
fdivl
pop
push
ds
lds
jp
inc
sbb
and
fistpll
rcl
scas
cmp
imul
push
adc
out
dec
or
inc
inc
jo
es
lcall
push
test
faddp
imul
sbb
mov
lods
imul
xorl
jmp
dec
int
xchg
and
sub
inc
leave
cwtl
or
rclb
dec
les
bound
arpl
sbb
imul
std
and
inc
hlt
sahf
sbb
mov
loope
fbstp
mov
daa
sub
test
sub
mov
push
xor
inc
scas
jb
or
subb
or
push
and
jno
xor
cmpsb
dec
lods
and
js
jg
pop
rorl
jmp
nop
jb
out
pop
jae
fcomip
rol
rcll
mov
add
xchg
loope
cmp
std
jb
shr
pop
xchg
cmp
sub
pop
cmp
dec
es
stos
mov
popa
inc
repnz
mov
push
fcom
rcll
das
decl
scas
fcmovbe
sbb
ss
push
sbb
out
int
in
mov
call
iret
inc
sub
mov
and
testl
fsubs
push
lods
mov
add
stos
cli
lret
lret
into
xor
fs
lret
mov
xchg
adc
jge
in
xchg
repz
scas
cmp
xchg
mov
sahf
add
lret
pop
dec
jno
add
cmc
lret
hlt
imul
repnz
adc
mov
xchg
inc
ljmp
mov
add
dec
xchg
xor
sti
or
mov
mov
rorl
loope
icebp
sbb
sub
cli
popa
ljmp
and
sarl
push
sbb
sub
jp
ljmp
and
xor
dec
sarl
push
sbb
sub
cli
popa
ljmp
mov
dec
jnp
loope
xchg
jp
dec
pop
pop
dec
int3
int3
xor
add
adc
adcb
lods
mov
sbb
or
cmp
cmp
mov
add
adc
lods
push
pop
mov
insb
nop
pop
orl
shrb
cmp
xor
xor
cmpb
mov
inc
outsl
mov
jle
push
and
fwait
cwtl
mov
sbb
jg
and
int3
cmp
mov
jge
jno
mov
mov
or
xor
and
stos
and
pop
stc
nop
nop
nop
jecxz
push
movsl
cmp
rcrl
mov
je
ss
mov
lahf
mov
imul
lock
ds
add
xor
add
and
mov
pop
lock
dec
clc
pusha
xchg
outsl
jecxz
or
cmp
sbb
rcr
pushl
pusha
inc
add
aaa
adc
push
jl
iret
mov
lds
nop
pop
mov
and
push
sar
add
gs
inc
jp
dec
movsb
cmc
xchg
cwtl
adcb
das
rolb
in
or
hlt
jo
pop
or
mov
pop
mov
out
shrb
inc
mov
adc
ss
enter
pop
leave
pop
enter
ljmp
bound
xchg
pop
test
adc
dec
and
cmp
fstps
sarl
shll
arpl
mov
mov
gs
or
jo
inc
lods
push
pop
mov
insb
nop
sbb
or
cmp
sub
fsubl
int3
xor
add
adc
lods
push
pop
mov
insb
nop
sbb
or
cmp
sub
fsubl
push
and
push
pop
loopne
xor
or
sarl
xor
fbstp
xor
cltd
cmc
sub
adc
insb
and
xchg
xchg
out
shl
xor
adc
adc
aad
rcr
in
mov
mov
andb
xor
lahf
clc
add
fsts
mov
lock
dec
add
lods
xor
ficoms
nop
xchg
inc
cmp
ss
sbbl
lock
and
ljmp
sbb
and
insl
mov
xchg
inc
jp
inc
divb
ficoms
push
sub
js
sub
cmp
roll
jnp
fists
cmp
mov
adc
dec
popa
and
mov
xchg
dec
jmp
sub
repz
stos
movsl
cmpsl
push
jecxz
daa
xchg
push
jg
cmp
scas
rcll
aam
inc
lds
xchg
add
loope
mov
push
jecxz
cld
ds
and
fstp
cli
jno
dec
sbb
mov
fs
inc
push
pushf
mov
push
cmp
cmp
xchg
push
push
xchg
jbe
and
mov
test
mov
imulb
mov
dec
mov
out
adc
in
sahf
jbe
push
push
or
push
cwtl
subb
in
and
jge
sub
addr16
loope
add
stos
or
mov
pushf
mov
gs
idiv
test
jg
call
rolb
sub
or
aam
pop
ja
adc
pop
aad
mov
inc
push
popa
mov
dec
mov
in
movsl
jnp
mov
jae
mov
imul
lcall
inc
or
inc
or
sbb
sbb
mov
push
cmp
sbb
and
inc
mov
pusha
push
outsb
xchg
scas
jnp
clc
add
int
pusha
ror
cmpsb
cmp
out
sarb
les
cmpsl
ljmp
mov
or
mov
fcoml
dec
ljmp
les
jg
jb
push
filds
and
mov
gs
xchg
jle
loopne
stos
xorl
shl
movl
cmp
mov
jge
mov
stos
sub
test
sub
and
leave
pushf
dec
mov
sub
stos
pushw
test
jne
add
mov
jl
and
stos
mov
dec
push
lods
add
xchg
inc
or
pop
pop
lods
nop
pop
mov
lods
cwtl
lods
lock
mov
push
les
inc
pop
fcomp
cmp
pop
shlb
xchg
add
insb
sbb
add
and
ret
fwait
sub
mov
xlat
adc
push
cwtl
add
insb
imul
stos
or
out
lcall
xchg
adc
fsubrs
mov
ja
ds
clc
fwait
popa
jmp
and
mov
jl
outsl
je
lods
push
mov
js
ret
dec
sub
inc
mov
pushf
ficoms
pusha
ja
adc
arpl
orb
jle
push
and
fwait
stos
icebp
xchg
mov
dec
in
push
cltd
pop
sbb
add
arpl
mov
stos
and
add
pop
dec
lock
xchg
jne
xchg
out
sbb
add
pop
subl
popa
and
push
or
stos
cs
and
rolb
div
or
sub
cmp
loop
or
js,pt
mov
popf
xor
cltd
cld
dec
mov
sub
cs
js
loop
dec
inc
sub
inc
pop
leave
rclb
gs
movsb
adc
ljmp
and
je
adc
xlat
sub
addl
testb
adc
imul
gs
inc
pop
hlt
mov
add
cwtl
dec
xor
mov
fisubs
jecxz
dec
icebp
out
leave
lea
add
stos
subb
pushl
popf
pop
jle
inc
mov
jmp
popf
jns
jl
decl
aas
pop
je
mov
stos
iret
sub
insb
xor
lret
in
jns
adc
cltd
cmc
pop
sbb
aam
mov
lret
mov
cld
push
pop
mov
out
dec
cwtl
push
insl
or
add
xorl
mov
adc
push
test
pop
or
xor
ljmp
mov
arpl
arpl
repz
or
mov
mov
in
push
lea
xchg
xorb
push
into
movsl
negl
jge
mov
in
addb
inc
inc
loop
pop
push
stc
in
in
stc
and
sub
cmp
iret
push
and
stos
aaa
ljmp
pop
xchg
pop
jne
neg
cmc
inc
pop
movsl
inc
jle
sbb
or
pop
jg
xor
xchg
fnstenv
push
push
mov
ds
cmp
shrl
sub
gs
push
push
pop
clc
out
scas
jl
mov
test
movsb
testb
inc
imul
stos
arpl
sbb
mov
mov
mov
jg
xchg
fisubrl
push
xchg
ds
loope
dec
fwait
jo
test
fwait
inc
sarl
nop
add
dec
shlb
and
xchg
inc
addr16
lcall
in
push
jmp
ror
pushf
jl
add
jp
push
mov
sub
push
mov
cmc
jo
ja
push
js
add
ljmp
mov
mov
jns
push
add
xchg
out
mov
mov
jl
imul
ss
mov
stos
add
pop
mov
shrb
add
xor
jg
lods
data16
add
jl
jmp
adc
inc
pop
or
lahf
mov
inc
pusha
inc
mov
dec
inc
enter
mov
mov
arpl
or
stc
dec
shll
jno
stos
mov
popa
movsl
sub
movsl
inc
xor
scas
jne
decl
add
movsl
hlt
stos
sbb
lea
lods
lret
loop
mov
mov
sarb
dec
out
clc
insb
lds
mov
cs
nop
iret
mov
aad
iret
mov
fcoml
sbbl
aaa
adc
and
lret
ret
mov
xor
lret
mov
push
cmpsb
ret
cli
bound
xor
inc
les
dec
fcoml
dec
cmp
xchg
hlt
sti
jb
das
sub
xorl
icebp
mov
cmp
sub
lahf
addr16
add
jle
test
popa
popf
cmp
cmp
sysexit
push
fwait
add
test
sbb
sahf
or
lahf
loopne
ret
pusha
xchg
fcomps
jo
and
inc
dec
inc
inc
inc
mov
imul
mov
int
jmp
dec
out
popf
xorl
jle
ret
insl
lods
dec
and
lcall
sti
fistl
mov
lahf
push
inc
mov
shl
popf
jmp
sub
not
fs
ds
adc
jecxz
mov
and
test
sbb
iret
pop
push
pop
add
inc
fcomps
in
mov
ljmp
mov
dec
lcall
rclb
and
out
mov
cs
js
sbbb
imul
cmp
mov
pop
pop
mov
int
cmp
decb
clc
inc
pop
and
dec
outsl
inc
bound
push
scas
insb
xchg
into
xor
mov
dec
incl
mov
push
in
ja
dec
andb
out
push
inc
shl
pusha
mov
or
insb
imul
das
test
cmp
jno
out
dec
aam
inc
enter
adc
lods
cmp
jae
jns
add
sub
dec
add
loope
lods
mov
out
xor
push
mov
jbe
pop
js
pop
test
mov
sub
adc
jle
xorl
xchg
jns
popa
mov
sub
sub
test
xor
enter
ret
andl
mov
ljmp
push
stc
xor
sbb
roll
sarb
jbe
fdivrl
xchg
inc
test
jp
fdivrl
fsubl
xchg
sbb
es
packuswb
add
in
fadd
lods
xchg
xchg
daa
dec
dec
xor
mov
push
cmp
out
lret
sub
divb
xor
rcl
rol
divb
filds
ljmp
in
jp
dec
mov
xor
jecxz
js
lahf
movb
popf
scas
dec
subl
hlt
jb
mov
cld
or
lods
push
fistpl
ss
adc
mov
mov
repnz
test
ss
orl
mov
pop
add
subb
xchg
dec
pop
mov
xor
dec
fcoml
lret
xor
mov
sub
repz
jne
mov
test
daa
rorl
rcrb
mov
sahf
mov
xchg
int
lods
and
jbe
adc
lret
cmp
mov
and
xor
addr16
adc
dec
pop
arpl
mov
push
icebp
xchg
cmp
idivl
cmpsb
ljmp
or
cmp
sbb
pop
push
or
cmc
dec
test
sub
ja
cmp
roll
sbb
jge
flds
stc
test
cli
loop
daa
das
inc
fidivl
push
mov
jno
call
ds
push
divb
sub
mov
lcall
xor
aas
sbb
pusha
cmpsb
call
or
pushf
hlt
gs
in
fbstp
rolb
jnp
jne
pop
in
add
jp
and
cwtl
in
test
ja
pop
fnsave
scas
jge
enter
stc
push
fcompl
xor
das
enter
aam
and
out
xor
call
push
call
scas
pop
xchg
aam
xchg
and
push
xchg
mov
roll
jmp
push
cmpsb
cltd
imul
add
ret
add
xor
call
pop
sub
add
sti
jnp
push
hlt
test
cmpsl
pop
mov
mov
mov
or
int
out
pop
mov
cmc
loopne
jecxz
test
add
sub
loopne
loop
push
jecxz
not
lahf
ds
stos
std
inc
rorb
inc
mov
xor
sub
xor
xchg
mov
fcoml
mov
dec
call
jb
mov
test
xor
push
mov
mov
cmp
out
push
jmp
outsl
popf
test
mov
out
dec
dec
pop
gs
data16
mov
daa
jl
psllw
clc
jmp
sub
ljmp
sarl
add
pop
xchg
pushf
ljmp
les
mov
push
inc
test
bndstx
das
lcall
aas
dec
add
push
and
pop
fimull
es
test
inc
dec
jmp
jnp
push
push
dec
or
add
jg
cs
push
dec
scas
fnstsw
sahf
loopne
imul
mov
dec
jbe
nop
sbb
ljmp
rcrl
pop
pop
cltd
push
dec
inc
xchg
fwait
lea
movsl
or
push
dec
add
rclb
les
stos
dec
sbb
jbe
nop
adc
jae
mov
push
lods
movsb
out
ljmp
outsl
lret
fmuls
and
shll
sarl
pop
xchg
sub
aam
fst
push
and
push
sahf
jnp
adc
jo
ljmp
ja
ljmp
push
add
and
xor
adc
in
in
jno
mov
es
aas
add
xchg
push
insb
add
cli
sub
aad
pop
push
jns
imull
cmc
cltd
push
test
loope
test
fldcw
adc
int3
xlat
dec
scas
push
push
jb
lahf
push
pop
aam
mov
adc
mov
int3
popa
addr16
les
jo
ljmp
inc
push
and
lea
mov
mov
in
pop
ret
or
cmp
adc
cli
mov
es
sub
jmp
xor
popa
jae
cmovno
iret
inc
mov
stos
cwtl
cmp
pusha
add
dec
rolb
in
add
bnd
mov
pop
repz
pop
in
mov
gs
int3
insl
adc
xchg
inc
sbb
outsb
sbb
pop
pop
mov
pop
dec
xchg
daa
mov
pop
dec
pop
jns
mov
arpl
dec
add
pop
mov
or
xchg
sub
push
arpl
neg
js
ret
adc
or
sbb
sub
das
aam
sbb
das
cmp
jge
cmpsb
in
or
ja
clc
fbld
into
insl
inc
dec
dec
xchg
mov
add
jp
inc
into
and
daa
adc
call
lret
lret
sub
lods
inc
inc
or
dec
sbb
mov
mov
shll
lret
ds
and
add
adc
inc
bound
mov
sub
inc
jae
cmp
imul
js
mov
jne
push
add
aam
xchg
fiaddl
xchg
inc
repz
scas
or
fidivs
mov
or
mov
sbb
addl
add
js
pop
scas
xchg
cmp
int3
rcr
inc
test
cmpsl
xlat
mov
dec
jecxz
lds
lret
pop
pop
arpl
emms
add
popf
sub
je
out
lock
cs
inc
or
loopne
mov
mov
das
stos
mov
sbb
xchg
cld
rolb
les
pop
adc
mov
xchg
dec
mov
cmpsl
xchg
dec
fs
std
add
ss
aas
std
push
mov
mov
mov
add
sti
int
pop
stos
pop
and
or
mov
jl
movsl
push
fsubs
jl
inc
or
push
aaa
shl
jbe
jns
lcall
out
sbb
xor
sbb
xchg
add
mov
ds
in
jno
popa
gs
jb
lock
cli
in
pop
fcomps
and
dec
lcall
xchg
xorl
leave
mov
dec
ja
jg
mov
push
popa
or
outsb
sbb
jne
les
insl
popf
mov
xor
jl
xchg
mov
and
cmc
mov
pop
mov
sbb
mov
ss
fwait
dec
xchg
loopne
in
sbb
sub
daa
cwtl
insl
inc
out
lahf
jb
push
lods
push
mov
mov
adc
mov
scas
loop
pop
scas
mov
pusha
jne
nop
sbb
jo
cmp
xor
shll
ffree
fisubs
lods
lock
rcll
sub
out
xor
pop
and
scas
xor
rorl
mov
fwait
test
inc
lret
test
fs
pop
add
lret
cmp
mov
push
xlat
xchg
stos
divb
sahf
push
test
gs
jecxz
sbb
and
inc
and
xchg
in
xchg
cld
jnp
push
movsl
adc
fidivrl
xchg
jl
mov
push
fucomp
push
sub
mov
xchg
add
fldt
imul
notb
sub
dec
inc
mov
fidivs
jle
addb
pop
movsb
mov
cmp
imul
adc
cmp
or
and
aam
scas
gs
pop
sub
in
push
rcrl
push
dec
out
jle
xchg
add
lret
pusha
cmpl
xlat
pop
rorl
sti
fisubrs
hlt
pushf
push
lods
xor
dec
hlt
test
lods
or
or
loopne
add
imul
movsb
xor
or
lcall
popf
pop
inc
sub
add
pop
cmp
mov
sti
or
iret
xchg
in
imul
mov
mov
icebp
fisubs
cld
xchg
fwait
or
lcall
mov
movsb
mov
mov
xchg
pushf
or
jg
stc
adc
pop
xchg
mov
mov
cwtl
jmp
ja
pushf
inc
mov
dec
movsb
and
aaa
call
lock
push
aas
adc
xor
inc
xor
cs
fwait
test
loopne
push
das
xchg
inc
mov
mov
scas
push
in
hlt
stc
xor
loope
and
cmp
xor
pusha
data16
scas
push
dec
fldt
out
adc
jb
icebp
pop
push
xor
gs
popa
add
ret
fwait
mov
inc
cli
ja
gs
leave
sub
pop
mov
repnz
and
dec
arpl
aad
dec
ljmp
fnstsw
repnz
dec
push
mov
jae
xor
inc
outsb
addr16
daa
cltd
mov
add
mov
pop
movsl
mov
stos
jbe
hlt
fs
mov
imul
stos
add
lods
cltd
mov
sub
cli
push
mov
mov
cli
pop
dec
jmp
out
jmp
jno
or
inc
pop
sahf
imul
mov
pop
mov
cmc
imul
je
insb
xlat
stos
mov
fildll
mov
inc
pop
sub
stc
xchg
pop
insb
inc
loop
xchg
xor
aam
mov
xlat
outsb
mov
inc
imul
push
leave
in
jo
ret
das
mov
pop
mov
jne
aam
scas
inc
jmp
aaa
fldenv
loope
add
testb
stc
cld
mov
push
mov
in
jns
ss
in
in
out
iret
jbe
jnp
add
aad
pop
mov
hlt
mov
mov
pushf
fsubs
loope
gs
test
or
popf
jns
insb
cmpsb
xchg
xchg
pop
into
movsl
cmp
mov
aas
pusha
jae
xor
and
push
fnstsw
stos
ds
and
sub
and
pop
mov
add
bswap
xchg
mov
mov
and
repnz
insl
aad
sub
mov
dec
inc
pusha
push
sub
cmp
mov
mov
and
xor
cli
aam
rcrb
mov
imull
out
xchg
push
lods
ljmp
loope
jbe
data16
ret
mov
push
push
ss
out
mov
and
fidivs
xchg
lcall
in
inc
mov
pop
xlat
mov
dec
pop
cld
ret
sbb
call
xor
outsb
lret
jg
arpl
xchg
std
jp
test
subb
in
mov
mov
popf
pop
aam
jmp
cltd
jge
cwtl
dec
add
mov
into
sbb
nop
lods
mov
sbb
mov
add
pop
iret
inc
dec
rorb
movsb
js
into
jge
clc
pop
jge
mov
outsb
out
daa
pop
mulb
dec
jae
jb
dec
sub
mov
lods
loope
call
mov
adc
xchg
jle
or
cwtl
cmp
fs
into
mov
insl
outsl
mov
push
push
filds
in
dec
mov
js
out
pop
outsl
dec
in
inc
inc
sub
jl
adc
shlb
outsl
push
push
dec
nop
fs
lds
jle
and
cltd
cld
ss
mov
les
aaa
push
push
gs
and
popf
outsb
add
lret
mov
or
decb
adc
xor
jo
inc
lcall
in
xchg
fidivrl
push
jg
seto
jle
fdivl
outsb
inc
es
or
dec
ret
mov
cmp
push
inc
pop
jae
lret
jg
cwtl
movlps
int3
filds
push
out
push
cmpsl
mov
add
roll
pop
jb
xchg
test
push
cld
mov
and
adc
and
daa
decb
cmp
mov
cmc
jne
scas
sbb
xlat
lods
decb
or
cwtl
jae
daa
sbb
xchg
imul
je
xchg
and
xor
mov
insb
dec
daa
das
mov
jns
ds
sbb
movsb
push
lret
xchg
clc
lock
in
scas
je
imul
or
mov
dec
test
add
xchg
jbe
xor
adc
in
sub
jle
push
cmp
adc
lods
push
pop
mov
insb
nop
sbb
or
cmp
sub
fsubl
int3
xor
add
adc
lods
push
pop
mov
insb
nop
sbb
or
cmp
sub
fsubl
cld
xor
mov
inc
insb
push
pop
mov
insb
xchg
sbb
sbb
cmp
ror
and
adc
sub
pop
mov
insb
out
push
shrl
int3
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
mov
push
pushl
movl
movl
mov
call
mov
call
mov
sub
movzbl
cmp
mov
je
movl
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
push
pushl
pushl
call
xor
mov
push
push
push
push
push
call
push
push
push
push
push
push
push
push
call
pushl
call
pop
jmp
mov
push
push
call
mov
mov
push
push
pushl
call
pushl
mov
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
popa
pusha
test
inc
sbb
bound
adc
adc
pop
mov
shr
mov
fcoml
or
sbb
insb
and
add
loopne
lock
lds
nop
mulb
jo
inc
ficoml
and
pusha
add
ljmp
in
mov
sub
add
imul
add
lahf
arpl
fwait
aaa
sub
push
and
pusha
xor
xchg
fnstsw
cmpl
lock
aas
ja
imul
sub
or
pushf
xchg
in
or
shr
loopne
icebp
jae
bound
adc
mov
or
inc
gs
dec
push
insl
and
lock
push
arpl
mov
push
fprem1
and
repz
fisttps
push
adc
insb
pop
in
in
aas
lahf
rcrb
repz
mov
test
mov
mov
push
loopne
hlt
lea
cld
loopne
or
pop
pusha
cmp
or
jo
insb
and
xor
adc
cs
rolb
int3
cmpb
dec
add
add
inc
pop
gs
jmp
test
xchg
idivl
or
sbb
or
xor
push
das
ds
test
sub
lock
popf
les
mov
and
jl
dec
add
loopne
lock
pushf
shr
mov
fcoml
or
sbb
insb
and
add
loopne
lock
pushf
shr
mov
fcoml
movsb
das
inc
xchg
and
sbb
in
imul
fsubrl
push
jecxz
push
sub
push
mov
dec
popf
xor
cmp
hlt
mov
ret
jmp
mov
ret
mov
cmc
lret
imul
aas
iret
mov
int
adc
dec
push
cwtl
add
aad
leave
loop
test
and
sub
fldenv
scas
sub
int
outsl
cmpsb
mov
jle
sbb
stc
imul
xor
mov
inc
idivb
sub
ljmp
mov
sub
pop
popa
pop
mov
mov
xchg
cs
xor
mov
cwtl
xchg
mov
pop
rcrl
scas
in
mov
dec
xor
js
push
mov
push
arpl
dec
rcr
pop
shll
xchg
and
inc
pop
and
das
add
pop
aaa
jg
enter
mov
lret
xor
or
addr16
ljmp
sub
inc
pop
fidivl
jg
fwait
push
sub
push
xchg
sbb
pop
sub
push
cld
inc
in
pop
lock
mov
out
in
adc
jecxz
aad
cmpsb
pop
jne
mov
movsb
mov
or
jmp
push
repnz
mov
push
xchg
xor
jo
push
pop
repz
jb
ficoms
rclb
push
insl
bnd
jp
mov
out
gs
mov
xchg
filds
adc
cmp
and
inc
repz
inc
sbb
je
sbb
rclb
into
xor
or
loop
fiaddl
lods
pop
push
sbb
sub
xchg
pop
movsl
cmpsl
repnz
movsl
sub
pop
add
dec
push
and
add
and
cmpsb
pop
push
in
in
stos
adc
push
aad
mov
sbb
or
ljmp
push
lods
test
xorb
pop
pop
sub
insl
in
sbb
dec
ficoms
insl
xchg
sti
das
jmp
cmp
mov
in
and
hlt
outsl
jb
daa
mov
xchg
lock
aam
push
movsl
lods
inc
inc
cmpsl
aam
jl
dec
mov
fidivrs
jp
outsb
inc
addb
jno
scas
gs
cmp
enter
mov
iret
ficomps
xor
pop
retw
push
xchg
dec
and
sbb
and
loope
push
xchg
lcall
mov
stos
stc
out
xchg
mov
xor
mov
outsl
or
into
sbb
outsl
mov
mov
mov
int3
cmpb
arpl
mov
push
test
mov
mulb
sahf
adc
xlat
dec
cwtl
dec
ljmp
xchg
pop
jecxz
pop
sbb
or
pop
mov
push
roll
scas
mov
pop
int
addr16
rcr
lahf
inc
mov
sbb
syscall
or
mov
adc
idivl
ja
arpl
pop
dec
sbb
addl
scas
icebp
roll
push
in
inc
fmull
jnp
sbb
decb
xchg
mov
mov
and
cmp
mov
es
movsb
dec
mov
jae
push
pop
nop
popf
xchg
adc
jecxz
call
fdivrs
push
add
movb
and
insl
mov
lds
cmpsb
add
mov
sub
or
push
xchg
push
mov
push
je
in
mov
cmpsl
shll
mov
jmp
jne
daa
movsb
jae
cld
mov
rcrl
add
sbb
adc
cmp
xlat
xchg
pop
push
clc
stc
mov
leave
cmp
ss
stc
inc
inc
insb
loope
mov
test
jg
or
cs
sbb
dec
add
shlb
ror
add
mov
adc
sti
or
mov
cmpsl
fidivs
loop
jno
cmp
sub
push
push
pop
jae
mov
mov
lock
adc
or
xchg
and
clc
ja
andb
imull
loop
cld
fidivs
in
and
mov
xchg
jne
sub
push
adc
daa
push
push
cs
es
jecxz
in
lcall
lock
pop
push
data16
jne
inc
dec
push
jecxz
js
add
lret
aaa
and
addr16
les
cmp
adc
pop
sbb
incb
test
jb
addr16
push
sbb
aas
push
inc
scas
jo
jb
jmp
and
mov
pop
lahf
push
aaa
shl
pop
test
sub
rorl
flds
test
lret
mov
xlat
shrl
pop
sub
in
in
pop
jo
insl
cmp
fwait
popf
mov
fnsave
xchg
and
movsl
sbb
adc
int3
cwtl
and
in
outsl
sbb
inc
pop
xchg
mov
cwtl
mov
pop
enter
xor
into
pop
loopne
inc
adc
or
cmp
movsl
cmpsb
push
or
dec
sbb
cs
ss
and
mov
mov
mov
and
mov
daa
in
jg
rol
dec
jecxz
out
push
stc
repnz
xor
stos
push
mull
ret
iret
repz
inc
dec
test
or
lods
hlt
out
mov
cld
dec
notb
jmp
mov
gs
in
xchg
fmuls
jo
dec
xchg
mov
mov
xchg
imul
lahf
andnps
pop
xorb
data16
lret
repnz
scas
fdivr
outsl
ss
cmp
xor
adc
out
mov
jne
repz
push
out
dec
inc
stos
into
insb
jmp
mov
gs
xor
arpl
xor
addl
loope
mov
jb
xchg
xchg
int
mov
loope
pushf
imul
stos
cmp
add
pop
inc
loope
jo
dec
hlt
bound
jno
sarb
inc
loopne
inc
push
roll
outsl
ja
mov
popl
popf
jne
je
inc
sub
pop
jns
out
stos
jp
mov
dec
pop
cmp
cwtl
arpl
dec
jle
nop
inc
jecxz
ds
in
fisttpl
cmp
fbld
jns
adc
ljmp
pop
sbb
xchg
aad
in
xor
les
movsl
inc
gs
in
ds
sub
jg
jg
loope
fnsave
pop
jecxz
cmc
cltd
insl
dec
ja
inc
ja
gs
stos
cmp
fildl
inc
cmp
mov
and
pop
or
and
xchg
fmul
cmpsl
or
cmp
jle
xchg
pop
fs
sub
inc
jmp
mov
and
aas
and
cmc
lds
mov
lds
ss
int
push
push
sbb
lcall
pop
imul
cli
xchg
sbb
mov
mov
dec
in
sti
push
xor
adc
std
repnz
out
nop
gs
xor
cmpsl
xchg
popa
sar
addr16
push
adc
cltd
movsb
adc
popa
dec
sub
jle
gs
aas
xorl
faddl
frstor
enter
add
outsl
cmpsb
cli
in
mov
fabs
sub
into
mov
xor
fisttpll
jb
and
in
sub
jbe
mov
fucomip
insb
adc
mov
cs
les
loope
mov
sbb
iret
roll
dec
lock
popa
push
mov
sub
sbb
push
dec
xchg
cmpb
popa
pop
js
out
jp
push
mov
imul
push
sub
jg
mov
inc
dec
cld
dec
outsl
sbb
mov
punpckhwd
inc
shr
jb
cs
lods
pushf
sbb
pushf
lods
pop
add
pop
int3
jmp
imul
push
jne
add
mov
es
lock
je
or
test
sub
lret
sub
fcmove
mov
test
jecxz
pop
mov
arpl
dec
sub
mov
fcoml
or
cmp
aam
addr16
xchg
xchg
out
xlat
and
cmp
jmp
pop
push
enter
inc
mov
push
outsb
filds
mov
mov
xor
mov
mov
push
in
je
jnp
out
mov
xor
push
dec
push
sbb
adc
mov
iret
dec
dec
inc
sti
xchg
cli
sbb
xchg
aas
xchg
xor
ja
in
dec
in
aam
sbb
loopne
xchg
xor
cli
sahf
pop
mov
aam
mov
jl
movsl
jb
fs
dec
ljmp
adc
mov
mov
adc
pop
pop
cwtl
cmp
add
jg
arpl
dec
jge
xor
mov
and
add
jno
mov
adc
sbb
jnp
inc
outsl
data16
leave
cmp
out
fimull
jns
scas
out
xlat
sbbb
xorl
aas
popf
lods
inc
popl
push
filds
xor
push
jge
out
test
jne
and
test
jb
cmpsl
test
dec
xor
fnstcw
loop
je
nop
push
les
fcmovne
xchg
in
mov
shl
dec
out
xchg
or
lods
xchg
mov
lret
mov
and
add
pushf
or
into
push
mov
xchg
adc
xchg
in
sub
icebp
imul
mov
push
ss
adc
adc
push
xchg
addr16
sbb
push
and
cs
xchg
das
adc
mov
pop
in
aad
and
ficomps
cltd
adc
sti
mov
call
movsl
repnz
cmp
out
adc
es
or
sbb
and
push
mov
ss
push
jne
mov
fistpll
data16
jo
add
negb
stc
test
out
mov
push
sub
stos
sbb
cmp
icebp
adc
mov
push
add
bound
push
in
les
imul
outsb
jne
xchg
in
sarb
insl
jg
mov
mov
ficoml
and
sahf
adc
out
push
xor
scas
pop
cmp
pop
fwait
test
inc
push
cmp
push
dec
inc
ja
push
dec
xor
mov
xor
incb
das
repnz
mov
mov
fisttpll
and
clc
dec
fistpl
mov
sahf
iret
cmp
test
jmp
and
xorl
mov
cltd
divl
scas
popf
xchg
loopne
jmp
jmp
stos
sub
insl
xor
push
lcall
lods
xchg
sbb
inc
sbb
push
push
mov
xor
push
xor
add
cs
push
sbb
add
bnd
inc
imul
adc
pop
inc
xor
enter
fcomps
or
fnsave
in
in
add
push
dec
pop
aad
and
mov
cltd
pop
jbe
add
mov
add
ljmp
mov
pushf
and
xor
xchg
xor
outsb
add
dec
pop
mov
loopne
sub
inc
cmpsl
and
ret
sbb
cld
pusha
scas
test
rcr
push
inc
inc
mov
mov
shlb
subl
outsb
xor
stos
sub
test
mov
mov
test
cmc
inc
addr16
sub
mov
shll
mov
and
inc
sbb
cmp
daa
es
add
lret
lock
or
add
shll
add
mov
mov
xchg
incl
adc
stc
notb
sbb
in
adc
push
sub
addb
fistpll
les
les
je
add
xchg
or
scas
pop
out
or
int
mov
out
rol
or
and
scas
mull
std
adc
sbb
inc
inc
ja
push
repz
mov
or
sbb
outsb
js
mov
ljmp
test
jge
dec
lcall
jecxz
test
addr16
xchg
insb
mov
mov
mov
pop
add
or
jno
push
nop
ja
cltd
xor
ret
dec
insb
or
out
xchg
imul
int
btr
gs
adc
iret
rolb
mov
or
test
mov
jns
xor
pop
scas
outsl
push
sarl
in
fistps
cmp
es
faddl
push
fadd
adc
ret
add
aas
jge
rorl
sbbl
je
inc
or
lods
mov
fdivrp
aaa
xchg
xor
loopne
dec
xchg
mov
sbb
and
cmp
aad
fcompl
jg
jbe
test
add
jmp
and
cmp
test
ret
popf
pop
in
mov
loope
or
ss
adc
insb
jge
int
shrb
in
fidivl
xchg
and
in
and
pushf
xchg
xor
fs
jns
pop
into
cmpsb
push
imul
xchg
loopne
iret
sahf
outsl
adc
sub
jg
lahf
xor
arpl
ljmp
xor
inc
popf
mov
push
rcll
rcr
out
pop
ret
shrl
arpl
cmp
pusha
jle
out
das
jbe
insl
mov
xor
mov
push
loopne
push
xor
and
pop
out
xor
jno
add
sub
test
xchg
mov
hlt
mov
add
out
out
ror
pusha
dec
cmp
dec
sub
jge
aaa
dec
stc
addb
pop
ds
test
sub
jecxz
jl
hlt
xor
lods
sub
or
js
cmp
xor
jno
jg
pop
and
popa
enter
mov
popf
rol
mov
push
enter
neg
outsb
aaa
mov
adc
xorl
push
xor
inc
lret
das
ss
sahf
data16
test
inc
or
push
out
push
outsb
aaa
and
inc
mov
adc
fstl
outsb
in
jle
movsl
adc
in
and
mov
xchg
inc
lret
int3
sarb
inc
addb
or
movsl
cli
aaa
mov
fs
sub
popf
adc
mov
scas
jmp
cmp
loop
sub
insb
subb
jp
das
fildl
inc
cmpsl
hlt
jmp
mov
ljmp
aaa
aam
loop
mov
or
xchg
xchg
movsb
loopne
or
pop
aas
rorb
jns
jb
fucomip
xchg
out
mov
mov
and
ret
insb
rcr
ljmp
bound
mov
sub
jbe
dec
insb
dec
imul
pop
aam
stos
sub
sgdtl
cmc
sbb
mov
lock
rcl
jge
xchg
inc
into
scas
stos
negl
xchg
ds
shrb
rcl
cwtl
idivl
jge
xchg
pop
in
es
cld
mov
fmuls
loop
adc
cmp
test
mov
mov
jmp
mov
add
fptan
dec
outsl
adc
add
and
inc
pop
dec
lret
xchg
mov
or
pop
mov
pop
dec
inc
andb
mov
mov
xor
icebp
sar
push
pop
shlw
cmp
dec
sub
rcrl
sub
imul
into
inc
xchg
fldl
out
xor
xchg
push
imul
out
mov
pop
ja
add
loop
xor
mov
sahf
pop
jnp
push
push
bound
das
sbb
xor
out
mov
push
sbb
je
mov
or
lret
lods
dec
aas
push
lds
pop
rcll
testb
push
data16
xchg
test
xor
and
xchg
pop
cmp
lret
nop
in
mov
mov
outsb
jmp
stc
ss
cs
lods
std
push
mov
cmpsb
lods
in
push
repz
cmpsl
mov
inc
stc
adcb
adc
mov
js
and
or
dec
fcoms
xor
cmp
lods
addr16
outsb
cmp
loopne
pop
dec
sbb
sub
outsl
or
es
jle
icebp
push
lods
adc
int
cmp
sbb
je
aad
cmp
jmp
aad
cmova
xchg
aam
lret
jno
ljmp
fwait
dec
iret
ds
bound
popf
and
call
mov
inc
jbe
pop
inc
ss
mov
sbb
lret
popa
pop
adc
clc
rcll
lcall
push
fiadds
add
inc
cmp
jbe
scas
hlt
fscale
push
test
aaa
stos
aaa
test
jle,pn
mov
clc
xlat
ret
xchg
push
mov
pop
adc
test
shlb
inc
orl
mov
and
movsl
cmp
sub
push
les
push
stc
pop
jmp
jb
shlb
scas
jno
xlat
xchg
push
daa
ret
fldenv
dec
les
cmp
ss
mov
cltd
cmpb
lcall
add
sub
sbb
insl
into
xchg
and
jnp
test
rolb
push
mov
es
pop
test
cmp
addr16
fsubl
aas
dec
nop
xor
jl
addb
ret
in
mov
dec
dec
cmp
icebp
cltd
fsubrp
inc
pop
out
ss
out
shl
lods
jmp
and
int3
xchg
adc
or
cltd
adc
jle
lds
cmp
leave
fcoml
inc
push
rclb
or
add
into
fs
sti
andb
or
pop
push
push
int3
mov
pop
movsl
lea
add
mov
data16
ret
out
and
popa
and
icebp
insb
imul
cli
stos
jge
adc
mov
lahf
aaa
outsb
popa
lret
sbb
cmp
sub
ja
clc
sbb
jbe
or
movsl
push
js
mov
sbb
sbb
mov
aad
ret
outsl
adc
xor
push
in
xchg
stc
or
pop
lods
mov
xchg
adc
clc
mov
jae
xchg
decl
mov
xorb
enter
sub
js
jno
dec
out
push
fiaddl
and
dec
adc
sub
mov
call
fnstsw
jnp
lods
jge
aaa
aad
pop
push
cmpsl
cmc
sbb
xor
idivb
push
inc
hlt
movsb
push
mov
inc
iret
add
jmp
rcrl
clc
mov
scas
fs
or
mov
mov
outsl
sbb
cltd
mov
xchg
inc
in
cmpb
mov
lods
xchg
movsl
jo
push
mov
cmpsl
mulb
push
hlt
call
jbe
out
scas
or
mov
adc
fwait
hlt
and
and
jmp
bnd
cs
call
hlt
dec
push
jmp
js
fucom
rclb
cltd
pop
insb
sbb
ljmp
inc
dec
dec
lock
mov
notrack
push
sub
loope
mov
mov
adcl
dec
outsl
xor
jl
or
xchg
repnz
mov
add
inc
test
push
inc
out
hlt
or
cli
inc
scas
mov
jle
loopne
xchg
xor
in
scas
pop
pop
std
dec
fildll
push
inc
adc
dec
sahf
mov
out
in
stos
sbb
sub
fcom
data16
jl
stos
imul
movaps
jns
rolb
js
xor
loope
das
push
pop
aad
adc
in
or
ljmp
xor
mov
dec
push
jl
xor
fldenv
inc
sbb
adc
xchg
pop
cmp
sub
pop
repnz
popa
xor
int
add
cmc
aas
sbb
mov
cmpsl
repnz
push
rorl
sub
jb
hlt
jle
insb
mov
jg
push
in
inc
loop
in
sbbb
mov
push
jp
shrb
sahf
icebp
pop
mov
jb
loop
jbe
stos
mov
jo
or
adc
or
outsl
lods
in
fdivr
inc
daa
inc
cmp
lret
out
addl
nop
sbb
mov
mov
jle
popa
mov
inc
rcl
push
cltd
and
or
psadbw
add
std
add
addr16
jbe
cmpsl
out
loop
jo
cmp
push
jge
imul
inc
cmpsl
pop
xlat
movsl
jp
pop
cmp
fldl
push
sub
lods
cld
and
xor
test
cmp
xchg
cli
cwtl
jnp
mov
jno
sbb
add
test
push
and
loope
mov
dec
xlat
dec
lahf
pusha
mov
jne
and
inc
add
and
add
loopne
lock
pushf
shr
mov
fcoml
or
sbb
insb
and
add
loopne
lock
pushf
shr
mov
fcoml
sbb
sbb
insl
and
dec
add
test
mov
shr
mov
in
nop
xor
adc
inc
xor
insb
and
add
shrb
pushf
cmpsl
fwait
sub
jg
outsl
int3
les
ja
inc
scas
push
shll
ficoms
pop
out
idivl
push
xlat
pop
cmpsl
push
idivl
outsb
xchg
mov
ja
inc
scas
push
fisubs
into
aaa
incb
out
pop
adc
push
negl
xchg
xlat
pop
cmpsl
dec
mov
xchg
xchg
ja
inc
mov
daa
xlat
aaa
out
stc
pop
push
flds
xlat
jno
add
or
mov
repnz
mov
int
pop
hlt
in
mulb
sub
popa
pop
sahf
outsl
add
mov
fbstp
enter
pop
xlat
pop
icebp
xchg
rol
loop
sbb
xchg
imul
mov
nop
jo
mov
sbb
icebp
or
rcll
mov
js
xchg
dec
cwtl
sahf
jbe
inc
and
daa
push
out
out
inc
sub
data16
cmp
fcomi
sbb
mov
cli
jno
out
fisubrl
out
clc
incb
mov
cs
outsl
dec
xacquire
icebp
inc
and
arpl
inc
xor
int3
lds
rol
xlat
sahf
pop
pop
inc
sahf
xchg
outsb
xchg
pop
mov
inc
mov
aaa
incb
notl
pop
out
mull
aaa
xlat
inc
cmpsl
push
mov
xchg
in
or
movsb
fildl
lret
dec
mov
addr16
push
sahf
dec
test
sub
sbb
mov
stos
inc
mov
pop
sbb
push
fwait
jnp
pop
mov
push
repnz
stc
divl
mov
and
pop
out
pop
push
out
idivl
xlat
pop
cmpsl
dec
mov
xchg
sahf
mov
inc
scas
push
fisubs
into
aaa
incb
out
pop
push
out
idivl
xlat
pop
cmpsl
dec
mov
xchg
sahf
addr16
out
movb
sahf
jecxz
lock
ffree
stos
cmp
movsb
push
daa
mov
movsl
mov
repz
and
inc
inc
or
int3
fildl
jmp
and
sub
js
pop
mov
test
and
sarl
mov
mov
es
ret
sub
arpl
scas
aas
repz
cmpsl
sub
movl
je
fs
inc
pop
jg
jmp
push
dec
data16
orl
mov
jb
and
sarl
and
dec
add
repnz
dec
inc
pushf
lods
add
dec
in
testb
sbb
xor
pusha
shrb
hlt
mov
test
leave
add
out
cmc
or
das
mov
in
adc
jnp
adc
push
cmp
and
pop
orb
xchg
scas
sarl
dec
out
pop
xchg
je
repnz
push
sub
shrb
fistpll
shl
mov
pop
je
imul
fistps
les
add
ret
icebp
mov
sub
shr
fisttpll
sbb
push
lret
outsb
add
fcmovb
mov
mov
xlat
out
add
mov
sub
adc
and
or
pop
push
repz
xchg
ret
add
call
sahf
loop
xchg
mov
insb
fnstcw
test
iret
lods
sub
in
inc
pop
jecxz
jecxz
sarb
lock
imul
aas
rcrb
in
movsb
pop
inc
inc
jo
das
outsb
pop
mov
rol
test
daa
xor
mov
arpl
loop
ss
pop
adc
jmp
outsb
call
rorl
mov
add
and
ja
pop
push
mov
push
dec
cmp
ja
sahf
push
call
dec
icebp
pop
xor
cmpsb
es
dec
aad
mov
and
pop
mov
dec
sbb
in
mov
les
test
pop
pop
mov
loope
lea
dec
inc
xor
gs
mov
mov
in
cmpsl
jae
sbb
inc
iret
inc
mov
jg
pop
movsl
punpckhbw
lds
inc
js
inc
ljmp
cmpl
cltd
push
dec
divb
ret
inc
push
clc
adc
dec
sub
fsubr
loop
ljmp
xor
xchg
testl
nop
gs
aas
jns
sbb
test
repz
sbb
mov
imul
xchg
insl
popf
or
int
adc
mov
or
cmp
xlat
adc
lods
inc
jle
lods
js
arpl
inc
mov
sbbb
test
dec
or
lods
inc
addl
lahf
aas
xchg
daa
repz
rcrb
stos
adc
mov
cmp
mov
arpl
ror
fwait
std
adc
inc
fiadds
mov
mov
jo
aaa
loope
rcrb
add
lret
inc
ljmp
mov
dec
pop
repz
push
sti
gs
arpl
ss
mov
mov
xor
pop
das
test
xlat
sub
mov
sub
clc
dec
bound
fistl
sarb
dec
in
xchg
mov
arpl
add
xor
out
out
lods
mov
nop
sbb
jne
in
fs
mov
test
mov
xor
inc
inc
mov
xchg
repz
in
outsb
pop
add
xor
fnsave
pusha
insl
sub
xchg
push
aam
fnsave
xor
sub
mov
push
or
jae
out
es
js
or
shl
push
pop
into
sbb
xchg
loopne
adc
sbb
jle
clc
shrb
mov
or
dec
out
out
sbb
or
lcall
divl
dec
xor
push
jge
xchg
cltd
fs
inc
cmpsb
addr16
pop
movsl
or
mov
inc
xchg
pop
and
mov
lock
jb
call
or
cltd
scas
mov
pop
push
out
jnp
call
fnstcw
sub
xorb
xchg
mov
and
gs
mov
push
xor
mul
clc
mov
or
mov
mov
sti
add
inc
es
cmp
push
cltd
push
rorb
jmp
mov
repz
xor
sahf
jnp
mov
mov
xchg
imul
stos
ljmp
or
nop
int
shll
pop
push
scas
sahf
adcb
xor
outsl
lods
inc
adc
cmc
sub
loop
jge
insb
add
sti
jmp
cmp
add
test
mov
xchg
sbb
mov
ret
fbstp
cmp
hlt
or
cmp
outsb
cmpsl
jmp
shrl
pop
hlt
int
xlat
push
aam
jnp
pop
test
stos
aad
mov
out
dec
xchg
mov
cmp
aad
mov
jbe
out
and
pop
rcrb
xor
mov
lock
out
in
adc
loope
leave
mov
fdivr
mov
push
ljmp
or
pop
pushf
mov
mov
push
or
loop
aas
or
xor
xchg
iret
out
and
scas
push
or
loope
popa
sti
jg
jbe
push
push
daa
cli
add
xchg
scas
and
cmc
fisubl
mov
out
mov
popf
dec
imul
cmovb
fcmovnu
adc
rcl
adc
push
mov
lret
mov
in
sbb
addr16
test
unpcklps
mov
popa
cmp
in
mov
leave
pop
sub
in
push
sbb
cli
xor
sbb
jp
fsub
push
sub
mov
fbstp
cmp
pop
loope
add
loope
jns
enter
jne
jp
jmp
daa
and
xchg
in
mov
adc
pushf
mov
xor
dec
lods
in
jg
popf
or
mov
and
mov
inc
or
dec
insl
and
scas
and
mov
jbe
shrl
fiaddl
push
sahf
mov
push
lea
push
adc
ljmp
lret
cmp
fnstsw
sbb
in
xchg
js
xchg
aas
outsb
sub
shll
sub
ljmp
pop
ret
xor
and
cmpsb
mov
cmp
jnp
sbb
pop
and
or
pop
ret
loopne
jge
add
sbb
bswap
and
roll
repz
add
test
fcomi
mov
fucomi
pop
push
push
mov
inc
jl
test
mov
xchg
push
rcrl
mov
ljmp
cmp
scas
stos
rcrl
lret
push
js
add
int3
mov
shll
popf
popf
xchg
div
push
into
in
pop
dec
add
adc
mov
notb
rcrb
nop
clc
push
das
sub
mov
sub
mov
jns
in
sub
ljmp
add
test
pop
push
jns
cmp
call
mov
stos
ljmp
nop
addr16
cmpsb
out
stos
fsubs
stos
sarb
mov
mov
nop
movsb
loop
mov
xor
mov
cmc
int3
sub
and
nop
sub
outsb
test
xor
loopne
xchg
pop
or
xchg
push
cmp
pop
aaa
clc
pop
insl
icebp
or
dec
lock
call
add
gs
mov
nop
and
jns
nop
xchg
adc
sub
dec
sbb
insl
jnp
out
out
jecxz
pop
daa
jae
aaa
cld
adc
lds
mov
iret
push
push
add
movsl
adc
into
loope
push
popl
out
sub
fidivrs
ficoms
xchg
in
inc
sub
pushf
movsb
dec
outsb
and
push
pop
je
or
ja
add
test
pusha
jne
lahf
cmp
in
mov
cmpsl
insl
lcall
push
outsl
iret
adc
fdivr
pusha
insb
mov
lods
andl
or
ficomps
sbb
inc
imul
jns
ret
mov
mov
sti
or
fildll
mov
xchg
dec
pop
aam
cs
jb
push
or
and
daa
push
fstpl
mov
ja
jo
pop
ds
mov
or
mov
gs
add
pop
dec
jmp
xlat
push
dec
sub
mov
outsl
mov
stos
int
jle
in
inc
dec
int3
add
sbb
jp
lcall
std
test
sbb
pop
cmp
push
mov
sahf
ss
or
sub
push
ja
cltd
push
les
cmp
bound
jecxz
sarl
jns
adcb
aad
mov
adc
pop
cmp
popf
test
pusha
js
pop
xchg
imul
sbb
sub
adc
aad
xor
mov
xchg
xchg
xchg
aad
sub
sbb
adc
jge
jp
inc
mov
lods
pop
ret
cmc
push
es
xor
movsb
popa
fs
add
xchg
xor
xor
xchg
mov
mov
lea
ret
ret
jns
push
scas
sub
mov
adc
insl
imul
add
or
pop
mov
pop
sbb
les
xlat
ret
int3
add
xor
adc
aad
in
jmp
mov
imul
xlat
or
cwtl
mov
xchg
loopne
das
movsl
fisubrs
xchg
xor
cmp
add
dec
jbe
sahf
add
mov
push
jmp
cmc
ss
inc
add
flds
icebp
inc
test
xorb
pop
movsl
push
xchg
jns
mov
mov
sub
adc
xchg
popa
or
or
mov
push
sbbl
fsubs
push
and
lods
jnp
ficompl
mov
sahf
fcmovb
or
cmp
call
addr16
in
subl
add
push
lret
arpl
scas
jmp
iret
out
shrl
add
push
add
lods
adc
and
cld
pop
or
inc
loop
sub
out
js
inc
jb
mov
jge
arpl
push
pop
mov
inc
pop
add
in
mov
test
scas
clc
cld
daa
out
fs
adc
dec
sbb
test
jae
outsb
lea
jg
pushfw
scas
ret
xchg
jl
or
out
inc
mov
js
fists
popf
mov
fildl
lea
fidivl
and
out
or
mov
sbb
push
dec
add
sub
inc
xorb
jmp
sub
xor
shrb
sub
xor
fidivrl
jne
jnp
pop
push
cwtl
mov
xchg
daa
repz
hlt
inc
int
inc
inc
adc
ljmp
hlt
inc
mov
fisubrl
lahf
hlt
and
or
inc
mov
hlt
test
loope
push
aaa
xchg
add
divb
sbb
sarb
stos
pop
ljmp
sub
xchg
outsl
pause
or
lahf
popf
les
pushf
and
sub
pop
mov
jo
sbb
xchg
pusha
push
xchg
xor
lods
xchg
mov
cmpl
mov
sbb
lret
dec
mov
inc
adc
cmp
jne
shrl
jg
adc
hlt
hlt
scas
roll
add
xchg
mov
xchg
int3
or
in
and
push
adc
jge
stos
xor
ret
adc
jg
inc
inc
in
in
adcl
loop
test
sub
xlat
out
inc
or
repnz
rolb
cmp
mov
int3
adc
push
add
or
lods
fcoms
ss
xchg
jae
mov
jl
mov
xchg
sahf
pop
sahf
aas
roll
mov
lcall
outsb
mov
pop
ret
mov
xor
imul
rcrl
mov
aad
dec
mov
enter
outsl
lret
jb
fmull
addr16
rcrl
xor
test
ja
pushf
pusha
sarb
aam
add
imul
pusha
test
cmp
loop
outsb
out
pusha
push
shll
rcl
dec
mov
and
push
mov
xchg
xchg
jb
xlat
scas
xchg
adc
insl
lock
dec
mov
and
jo
mov
js
sbb
and
push
test
loop
in
sahf
daa
repz
outsl
push
loope
jns
jb
insl
and
dec
jl
pop
imul
adc
cmpsl
nop
stos
xor
in
mov
ret
push
jg
push
call
decl
mov
imul
jnp
sti
jne
sti
mov
das
pop
push
pop
lcall
inc
xchg
pop
fistl
movsl
jns
test
inc
stc
addr16
pop
repnz
xchg
cmp
in
pushf
shr
in
inc
mov
das
push
sbb
push
mov
mov
push
arpl
mov
push
out
fwait
loopne
xchg
movsl
cmp
cmpsl
sahf
mov
mov
pop
inc
out
mov
adc
xlat
das
fdivs
ret
and
sub
pop
cltd
inc
call
or
ja
dec
loopne
sahf
les
sub
mov
stos
filds
jb
stos
cmpsl
add
pop
xchg
mov
push
mov
xchg
xchg
adc
rcr
pop
aas
cmp
xchg
nop
add
pop
mov
je
push
imul
pusha
and
and
jle
add
cmp
xor
inc
xor
pop
popa
push
cld
in
xchg
ljmp
rcrl
imul
cltd
add
push
popa
dec
cmp
jne
xor
cwtl
bound
xchg
sbb
sti
arpl
jle
popa
mov
cmp
add
mov
mov
jo
mov
cltd
adc
and
mov
cwtl
imul
fisubrs
in
mov
push
xchg
dec
xor
idivb
lea
mov
sub
xor
fcomps
mov
lds
mov
outsl
std
mov
xor
outsl
arpl
cmpsb
fcmovne
movsb
iret
not
int3
out
repnz
push
mov
cwtl
pop
push
aas
adc
mov
push
clc
rcrl
add
ds
push
pop
push
test
into
mov
pop
inc
xor
shrl
hlt
fsub
sbb
ficomps
pop
mov
fadd
or
sti
jle
clc
push
jmp
sbbb
or
mov
scas
das
jge
mov
andb
enter
inc
cmp
jl
xor
dec
add
cmc
xchg
and
pop
xor
ja
xchg
cs
mov
out
dec
mov
test
ljmp
rorb
jb
push
fidivl
mov
int3
pushf
shll
adcb
jmp
xor
dec
test
test
push
sbb
es
jmp
push
decl
scas
or
cmp
icebp
sub
scas
sub
jp
es
fbld
dec
sub
pop
sbb
mov
xlat
mov
pop
aas
dec
ret
movl
or
loopne
mov
and
jge
xchg
add
fnstcw
stos
sbb
push
pop
test
fcmovnb
add
cmp
call
pop
out
and
outsl
decl
jle
js
jg
scas
testl
sub
sub
jne
pop
aaa
xor
pop
mov
ljmp
int
aam
jno
inc
push
jl
jecxz
add
outsl
mov
mov
shrl
xor
mov
mov
and
sub
inc
inc
mov
pop
ficoms
loop
push
push
cltd
in
mov
cmp
push
jbe
xor
cmp
fimuls
adcb
cmp
push
fs
cmp
popf
and
out
add
or
pop
and
shll
out
xchg
fwait
xchg
aas
xor
lret
arpl
and
andl
add
ds
or
and
lds
es
jo
sub
jmp
mov
sahf
imulb
cmp
push
fs
in
shl
cmp
pop
jb
pop
flds
xor
inc
test
mov
xor
outsb
jnp
aad
mov
jo
sti
push
xchg
fcmovnu
les
mov
inc
ljmp
or
xchg
adc
or
pop
pop
stos
jge
call
popf
xchg
cs
gs
fucomi
in
stos
or
cmp
pop
xcrypt-cbc
cmpsl
pop
jl
mov
je
sub
mov
aaa
sbb
push
xorl
xchg
sbb
and
popf
mov
into
test
mov
sub
sub
ret
js
test
je
cmp
mov
push
jl
xchg
xchg
mov
es
pop
pop
stos
test
es
das
or
loop
stos
lods
jb
xchg
or
js
lock
mov
shrl
inc
sbb
daa
popa
cld
scas
faddp
sbb
or
lcall
scas
enter
clc
nopl
inc
or
xchg
and
repz
mov
push
jns
xor
xchg
testl
outsb
jne
dec
js
dec
or
push
mov
clc
jmp
das
inc
ljmp
mov
stc
or
loop
icebp
add
push
popa
ret
push
dec
fisttpl
pop
pusha
or
out
mov
addr16
push
mov
or
insl
mov
lcall
cmp
test
cmp
push
imul
jae
nop
imul
mov
or
cmp
rcll
addb
push
mov
jae
cmpl
jae
dec
or
xchg
and
mov
repz
jo
pop
jbe
test
scas
inc
movsb
cmpsl
and
jno
sub
addr16
and
fbstp
add
jnp
jl
test
scas
les
aam
ret
mov
movsb
ret
xchg
jo
mov
leave
dec
push
jecxz
cmovae
xchg
jmp
dec
outsb
mov
sahf
les
mov
jo
cltd
cmp
loopne
orb
sarl
cwtl
rclb
mov
rclb
add
dec
out
negb
pcmpeqb
push
aad
mov
sti
test
xchg
mov
xchg
xor
jnp
addr16
sbb
push
cltd
or
push
xchg
pusha
sbb
repnz
xlat
neg
ret
repz
dec
push
push
xor
arpl
loopne
and
xchg
mov
sub
ljmp
xchg
loope
or
sub
xchg
call
inc
xchg
sub
mov
push
rcrb
stc
sti
ljmp
test
aas
adc
call
xor
sbb
das
pop
push
xchg
mov
and
sahf
test
push
test
hlt
mov
xchg
adc
xor
inc
sbb
dec
data16
popa
js
aaa
xchg
or
lret
pop
stc
ljmp
pushf
xor
lds
stos
dec
pop
cmpsl
fwait
add
lret
inc
hlt
insl
and
sub
cmc
mov
test
cwtl
aam
mov
mov
cmpsb
stc
xchg
pop
inc
mov
data16
push
dec
imulb
mov
shl
dec
sub
jge
and
test
and
cmp
into
lret
dec
xchg
pop
mov
in
enter
cs
mov
pop
and
cltd
cltd
movsl
mov
pop
jno
jns,pn
or
lret
out
mov
pop
lea
nop
or
dec
lcall
jle
dec
sbb
push
inc
negl
xor
int
fwait
xor
in
add
cmc
in
cltd
adcb
icebp
mov
add
or
rorb
in
mov
arpl
jns
add
inc
arpl
gs
xchg
pop
inc
outsl
es
mov
mov
aas
aad
add
je
dec
push
add
loope
je
mov
in
jne
inc
fs
push
fwait
adc
repz
ljmp
ja
inc
scas
push
fisubs
into
aaa
incb
out
pop
push
out
idivl
xlat
pop
cmpsl
dec
mov
xchg
sahf
mov
inc
scas
push
fisubs
into
aaa
incb
out
pop
push
out
idivl
xlat
pop
cmpsl
dec
mov
xchg
sahf
arpl
push
fisubs
into
aaa
incb
out
pop
push
out
idivb
xlat
pop
cmpsb
dec
mov
xchg
stos
addr16
push
fisubs
into
mov
xchg
loope
icebp
pop
xchg
mov
cmpl
and
andl
andl
mov
mov
push
movl
movl
movl
movl
movl
movl
mov
movl
call
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
sub
pushl
call
pushl
movl
movl
movl
pushl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
push
pushl
call
mov
push
push
push
pushl
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
pushl
call
mov
push
push
push
push
pushl
call
push
push
push
push
pushl
call
call
pushl
pushl
pushl
pushl
pushl
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
mov
movzbl
mov
sub
movzbl
sub
test
je
call
call
movl
movl
movl
call
andl
jmp
movl
movl
movl
movl
movl
movl
andl
jmp
mov
inc
mov
mov
sub
mov
add
mov
movzwl
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
mov
xchg
xor
xchg
mov
mov
and
mov
jmp
jmp
push
pushl
call
mov
pushl
call
cmpl
jb
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fsub
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
in
add
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
in
add
in
add
in
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
in
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fsub
add
in
add
in
in
add
in
add
in
add
add
pop
out
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
out
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
add
pushf
out
add
out
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
aas
call
add
and
add
sbb
add
adc
add
or
add
add
add
cld
out
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
call
add
insb
call
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
clc
call
add
inc
jmp
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xchg
jmp
add
movsb
jmp
add
mov
add
mov
jmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
lock
add
or
add
sbb
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
movzbl
nop
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
mov
jae
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
cmp
mov
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
push
andl
mov
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
lea
cmpb
jne
mov
jmp
mov
xor
mov
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
nop
nop
nop
nop
nop
nop
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
mov
and
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
mov
cmp
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
xor
mov
mov
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
