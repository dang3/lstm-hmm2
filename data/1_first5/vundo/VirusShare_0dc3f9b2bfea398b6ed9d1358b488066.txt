jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
aaa
pop
cli
loope
js
jmp
dec
or
test
pop
add
add
pop
add
push
add
add
add
mov
sub
add
add
inc
add
sub
add
fwait
add
add
add
add
mov
mov
sub
add
add
add
cmp
loopne
add
lcall
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
lock
add
add
add
add
add
add
cltd
add
add
add
lock
sbb
pop
add
add
add
aas
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
das
add
add
add
add
add
add
add
add
add
add
add
and
add
add
xor
mov
add
bound
cmp
inc
add
add
add
mov
inc
add
add
add
add
add
jge
popa
add
adc
add
add
add
add
or
sub
add
add
test
sub
push
add
inc
add
inc
add
addb
add
jne
dec
add
sub
add
leave
add
addb
add
add
add
lea
clc
add
add
sub
add
add
or
dec
add
add
add
sub
add
add
sub
add
add
add
push
add
sub
add
add
add
add
roll
xor
xchg
add
cltd
add
dec
add
add
add
mov
sub
add
add
mov
add
jnp
pop
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
inc
add
dec
add
add
add
add
add
add
mov
sub
push
pop
add
add
add
push
add
add
add
add
add
outsl
add
add
or
pop
add
cmp
add
inc
add
pusha
add
add
add
add
inc
add
add
add
add
inc
add
add
cmp
in
or
mov
dec
add
add
add
add
add
add
add
add
pop
add
add
add
mov
inc
add
add
add
pop
add
add
add
cmp
sub
add
mov
inc
add
add
add
add
add
add
add
mov
mov
sub
add
add
add
verw
add
add
add
ss
add
add
add
add
add
add
add
add
add
add
push
add
add
add
xor
aas
add
jns
add
add
add
mov
and
cmp
sub
add
sahf
add
add
add
add
adc
pop
sbb
test
mov
sbb
mov
addl
push
call
pop
mov
adc
add
pop
jp
pop
sahf
mov
and
test
in
lret
sarl
mov
out
or
inc
cmpsb
cltd
sbb
push
fidivrl
fwait
int3
adc
adc
loopne
stos
or
in
sub
shlb
out
push
inc
loop
xchg
cmp
or
lcall
clc
nop
std
insb
vmovlps
in
repnz
imul
xchg
or
jg
pusha
pop
adc
fstps
mov
or
ljmp
js
cmp
lods
aad
fs
mov
clc
sbb
adc
mov
xor
xchg
pop
shl
cs
mulb
sub
adc
icebp
or
and
imul
les
jno
addr16
add
pop
mov
or
stos
pop
mov
cmp
aam
lock
mov
sub
add
scas
push
movsl
dec
mov
pusha
xor
shll
sbb
out
mov
jb
out
or
fdivrs
pop
pop
adc
pop
xor
icebp
pop
pop
and
icebp
sbb
xor
xchg
fsincos
jg
or
sub
cs
adc
or
jns
jb
in
add
mov
outsl
or
cmp
ds
nop
sbb
aad
sub
jge
pop
mov
das
fisubs
lahf
adc
mov
imul
pop
movsl
add
stos
in
loope
pop
jge
call
rcrl
js
mov
lret
jge
inc
int3
inc
insl
xchg
cmp
mov
cmp
test
adc
hlt
js
arpl
push
rcr
sarl
in
and
add
mov
std
scas
hlt
js
mov
mov
cmp
fdivrl
gs
jne
mov
add
outsl
xchg
add
scas
sub
fwait
sbb
lock
adc
xor
xor
xor
adc
cmp
aad
mov
sub
sub
push
inc
mov
dec
mov
push
arpl
adc
or
in
inc
inc
dec
mov
gs
dec
add
das
subl
pop
inc
sbb
xor
roll
inc
and
es
cmc
mov
fists
cmp
and
mov
fisttps
pop
repnz
push
pop
fdivrl
outsl
dec
mov
loopne
decl
jge
and
lock
loopne
fldt
dec
popf
imul
jnp
sbb
sbb
in
push
sbb
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
call
leave
jns
dec
mov
daa
icebp
fwait
aad
lock
in
test
sbb
movsb
or
mov
inc
imul
aam
in
hlt
imul
xchg
or
dec
pop
jl
insb
mov
fisttpl
les
and
dec
loopne
inc
fildl
add
aad
mov
sub
dec
cltd
adc
imull
cmp
cvtdq2ps
int
inc
pop
fimuls
pop
and
je
out
fistl
lret
popf
cmp
sub
mov
or
in
lret
in
adc
push
int
bound
test
cmp
mov
cmp
jle
ret
movsb
daa
icebp
aaa
sbb
daa
push
add
add
push
fwait
mov
and
sub
sbb
adc
pop
sbb
fwait
inc
add
xor
sub
pop
dec
cmp
sub
push
dec
outsb
xchg
test
notl
xor
data16
pushf
and
mov
and
jg
ret
or
cmpsb
sbb
lret
jge
je
add
adc
and
sub
cmp
pushf
xor
inc
mov
mov
push
aad
decl
push
imul
xchg
pop
loope
xchg
lret
jle
cmpsb
sub
mov
pop
jle
into
push
or
sub
push
hlt
push
xchg
pop
rolb
mov
clc
aaa
mov
xor
les
dec
in
hlt
sub
mov
inc
sti
push
lret
mov
xor
les
dec
in
hlt
sub
mov
inc
pop
inc
or
sbb
xlat
stc
add
sub
bnd
popa
xor
movsl
xor
inc
mov
xchg
or
cmp
xor
fnstsw
aad
mov
lds
add
mov
cmp
jno
xchg
data16
cmp
push
aas
sub
lret
out
icebp
arpl
bound
lahf
mov
iret
jp
xchg
inc
testl
pop
adc
outsl
imul
mov
mov
cmpsl
sub
mov
cld
mov
aad
stos
cld
xchg
fcompl
insb
notb
ret
push
enter
orb
pop
jmp
in
mov
out
out
ljmp
cmp
daa
sbb
outsl
int
leave
outsl
cld
sbb
pop
push
jb
data16
sub
movsl
cld
mov
cmp
movsl
scas
orb
cwtl
notb
xor
enter
mov
int
pop
enter
pop
mov
sahf
jmp
xchg
repnz
test
push
ljmp
push
scas
ret
movsb
cs
mov
mov
mov
aaa
cmp
fstpl
into
mov
jecxz
add
push
sbb
cmp
fstps
sahf
sarb
cmc
push
and
movsl
xchg
scas
rclb
mov
ror
rcl
mov
adc
xchg
sti
movsb
rcr
shll
testl
mov
push
cmp
dec
mov
pop
inc
pop
jnp
or
push
andb
daa
outsl
subl
push
jl
cmp
cld
popf
int
cmpsb
mov
fwait
push
in
jnp
or
test
dec
cmpl
xlat
jno
mov
jl
sbb
jg
insl
and
cmpl
add
test
daa
jle
jbe
lcall
fmull
lock
mov
mov
bound
adc
clc
fistpll
jecxz
jnp
or
dec
enter
xor
ret
insl
and
mov
inc
cld
pusha
test
mov
pushf
sti
in
std
shlb
icebp
or
into
shll
xchg
dec
mov
pop
movsl
sbb
jnp
add
jl
add
add
xlat
out
nop
sub
inc
lea
stos
xchg
pop
mov
push
cli
ret
xor
fmuls
cltd
loope,pn
xchg
in
lahf
in
aad
mov
fwait
loopne
in
mov
call
fwait
cmpb
push
orl
fisttpl
add
pop
imul
cld
xor
je
jno
push
ret
push
and
mov
mov
bsr
lret
ror
dec
movsb
shrl
add
aaa
pop
inc
ds
xor
addr16
notb
rorl
cmpsb
shll
push
scas
xchg
jb
test
xchg
xchg
aad
jecxz
addr16
das
hlt
stos
repz
repz
mov
loopne
cmp
lea
aas
aam
push
jns
arpl
pop
pop
out
das
and
out
inc
and
inc
xchg
es
addr16
out
inc
or
sbb
mov
dec
pop
and
and
sbb
jbe
mov
movsb
das
insb
and
rcl
ljmp
xchg
push
adc
test
inc
xchg
xchg
aam
and
lods
jge
sti
lods
and
mov
loope
outsl
stc
data16
fcmovbe
jecxz
jg
push
lcall
adc
and
fyl2xp1
mov
xor
sti
or
sahf
ret
pop
cmc
or
rclb
lea
jmp
lods
fcoms
bound
dec
lret
roll
and
movsb
loope
adc
pop
jecxz
mov
call
sahf
in
sbb
inc
push
lds
sbb
or
add
arpl
add
popf
mov
sti
push
jne
adc
inc
fimull
push
hlt
pushf
add
mov
xchg
ljmp
into
mov
fdivs
mov
lock
out
repnz
mov
and
aas
addr16
push
pop
sub
aaa
mov
xchg
add
mov
and
push
push
sub
push
test
add
into
fdivr
mov
add
xor
add
cs
test
pop
sbb
sbb
pop
subl
jo
xchg
lods
decb
ja
shlb
cld
lods
jle
jmp
xchg
movsl
leave
inc
sub
fs
mov
sbb
add
es
jl
cmp
or
or
xor
cmp
or
cmp
out
inc
movsl
add
mull
jnp
pop
push
lret
mov
lea
test
sarb
sub
out
pop
sbb
je
cs
mov
fdivl
pop
je
mov
add
sub
incb
cs
ret
dec
aad
mov
and
jp
push
ret
dec
shlb
mov
xor
mov
mov
xchg
and
pusha
mov
sbb
sbb
pop
lods
jbe
push
pop
es
add
fnstenv
xor
mov
ss
imul
shl
push
ljmp
pop
pop
js
or
repnz
xchg
and
mov
sbb
cmpsl
adc
repz
aaa
lods
pop
decb
sbb
mov
push
adc
aas
rcl
mov
dec
insl
addr16
jmp
mov
data16
shrl
push
loopne
sbbl
xchg
xchg
mov
push
sub
and
iret
sahf
cmc
lock
push
in
push
loopne
fisubs
sahf
lods
nop
push
pop
mov
cmpsl
mov
les
mov
push
xor
cli
mov
add
gs
ljmp
xor
inc
or
les
popa
adc
cmp
xchg
in
fldl
mov
push
push
and
aas
jl
mov
popa
cwtl
mov
out
bound
sub
mov
outsb
xchg
scas
cmp
mov
repz
fs
xorb
push
sbb
push
mov
inc
mov
lret
and
cmp
ss
mov
mov
pop
jmp
aas
adc
mov
mov
pop
inc
stos
das
xor
popa
imul
xchg
test
xor
jmp
sub
adc
test
jl
mov
test
cmp
sti
nop
mov
lret
test
pop
repz
lods
jns
jge
mov
mov
pop
xchg
push
xor
pop
cltd
inc
loop
mov
and
ret
hlt
xchg
adc
into
pop
mov
repz
xor
mov
lods
daa
sbb
inc
mov
inc
out
loop
out
insl
filds
xchg
das
stos
idivb
push
xor
std
dec
mov
iret
cs
popa
inc
jg
xchg
scas
push
mov
subb
scas
xor
js
push
aaa
mov
testb
xor
xchg
jnp
cmp
popf
xchg
orb
dec
jb
andb
mov
cmp
xchg
arpl
adc
xor
fldt
or
xlat
stc
leave
mov
pop
and
cs
in
lret
paddsw
insb
mov
ret
xchg
rolb
jge
daa
lcall
mov
mov
push
ret
push
sub
xor
mov
or
push
xor
and
xchg
jecxz
push
adc
imul
mov
rcll
mov
adc
adc
insb
inc
frstor
int
cwtl
inc
or
mov
scas
push
mov
fistps
aad
mov
movsl
xchg
push
in
lret
mov
or
mov
mov
cmc
cmp
popf
pushf
clc
scas
test
or
pop
xor
inc
je
fnstenv
xor
int
cwtl
sub
clc
jmp
das
in
push
lock
xor
loope
out
mov
fiadds
and
cld
dec
mov
xchg
shrl
push
jp
arpl
adcl
mov
sbb
popa
or
pop
js
in
inc
ja
push
sbb
jne
test
adc
adc
popa
and
dec
cmp
cmp
dec
inc
mov
cmp
dec
cmp
add
sbb
adc
sbb
lds
xor
cmp
xchg
sahf
xor
hlt
lods
outsb
sbb
cmp
or
insb
lret
xchg
stos
bound
lock
mov
fsubr
fisubrl
sub
jns
out
inc
cmp
stos
and
xor
sbb
xchg
sub
repnz
inc
inc
cs
push
cmp
cmpsb
imul
mov
clc
dec
and
popl
bound
xchg
shlb
jmp
outsl
lret
imul
insl
cmp
bound
dec
fildll
out
or
adc
cmpsb
xor
pop
scas
clc
incb
and
out
popa
inc
inc
inc
mov
xor
xorl
fs
cmp
aas
pop
xchg
ja
inc
js
xchg
pusha
sbb
push
js
lret
adc
cmpl
xor
xor
dec
jbe
push
push
cmp
mov
js
pop
jecxz
lods
out
and
in
lahf
repnz
or
cld
adc
loop,pt
xchg
hlt
push
jle
jmp
xor
test
aam
loope
jo
mov
jge
outsl
movsl
dec
and
xor
adc
xchg
pop
ljmp
jmp
shlb
test
jmp
mov
push
adc
loop
xor
push
cmpsb
mov
xchg
cmp
out
adc
cld
xor
jecxz
lret
jae
movsb
les
add
mov
dec
cmp
push
nop
les
movsl
and
and
and
insb
cli
outsl
pusha
lcall
mov
adc
divb
and
pop
rolb
xor
ss
sbb
gs
movsl
adcl
shlb
int
arpl
adc
lret
fcomps
movsl
fdivl
jne
adc
lea
push
cmp
call
lret
jl
push
and
stos
pop
push
dec
mov
lea
ljmp
mov
and
pushf
add
outsl
decb
ss
cmp
dec
stc
mov
shrb
loopne
and
cmp
aas
cmpsb
cld
ja
leave
mov
stos
add
inc
sbb
pop
mov
daa
mov
outsb
jmp
xor
in
pop
std
push
out
dec
js
into
stc
mov
jp
xchg
jns
sahf
ret
push
std
test
mov
add
mov
loope
mov
and
or
mov
scas
sbb
and
mov
push
mov
icebp
fmull
insb
adc
cmp
std
leave
sbbl
inc
jmp
mov
sub
xlat
shrl
fwait
fwait
inc
mov
dec
sarb
aaa
or
lock
sbb
mov
cmp
callw
dec
push
in
inc
jno
cmpsb
jbe
jbe
enter
or
cwtl
subb
jmp
mov
clc
dec
call
imul
jle
xchg
cmp
test
mov
xlat
pop
stos
addr16
adc
add
scas
jmp
and
cmc
rcll
test
push
mov
jno
push
ds
lods
xchg
adc
mov
cmpsb
mov
or
pop
dec
cltd
sub
jb
push
dec
jl
adc
bound
sub
mov
xchg
cmp
outsb
xchg
add
dec
adc
lret
mov
jns
dec
adc
inc
fwait
stos
js
sub
imul
jg
sbb
loope
push
jb
movsl
mov
cmp
pop
push
lret
lret
lds
lea
cltd
js
xchg
add
arpl
inc
sub
inc
aad
les
test
mov
insb
aam
cmc
and
xchg
mov
jb
fmuls
jne
repz
int
out
sub
les
or
data16
adc
sti
nop
jmp
roll
push
sub
or
dec
fidivrl
and
movsl
sbb
xchg
movsl
xchg
out
cmc
push
scas
sub
ljmp
iret
inc
jmp
dec
jmp
test
mov
into
mov
mov
fisubs
inc
xor
inc
xor
jo
add
es
pop
mov
imul
push
push
cmp
sbb
jno
jle
in
push
pop
push
dec
lods
repz
add
xor
dec
sub
lret
mov
xlat
rorb
rolb
pusha
pop
rcll
lret
adc
push
fcmovnbe
pop
testl
push
xor
pmullw
jg
pop
xor
cmp
jecxz
pop
sarl
or
pusha
stc
pop
das
push
mov
dec
outsb
fiadds
jo
inc
add
inc
push
fsin
push
outsb
mov
sub
cli
icebp
mov
sub
push
cmpsl
dec
popa
lcall
or
adc
movaps
or
xchg
mov
in
js
stc
es
in
jne
daa
pop
adc
movsb
sarl
mov
pop
ljmp
xor
push
test
mov
dec
rclb
adc
sarl
mov
dec
les
cmpsl
pop
out
xor
xchg
shll
int3
dec
movsb
and
xor
idivb
faddp
movsb
loope
pop
repz
repz
std
sub
lea
mov
pop
mov
mov
inc
movsb
daa
xor
mov
and
js
iret
mov
or
jo
adc
mov
mov
or
lret
inc
and
in
mov
and
and
cltd
aas
add
adc
nop
lcall
popf
jne
adc
sbb
pushf
shlb
popf
add
mov
das
ret
adc
and
mov
ja
hlt
aad
hlt
out
push
mov
repz
fimuls
jbe
xchg
xor
pushl
shrl
jns
inc
fstps
aam
fs
ss
add
mov
stc
xchg
cmp
adc
dec
nop
pop
jl
and
ljmp
cmpl
mov
mov
test
fcmovnbe
push
sbb
insb
insl
inc
subb
call
je
xchg
add
sub
and
push
stos
xchg
ljmp
movsb
xor
push
push
outsb
dec
jge
into
cmp
sbb
clc
arpl
dec
jb
pop
pop
sbb
cmpsl
int
data16
sarb
cmc
xchg
push
xchg
jg
adc
nop
bnd
dec
adc
idivb
or
or
add
sti
and
mov
cmpsb
iret
imul
ss
mov
pop
jmp
jb
hlt
outsb
dec
and
dec
sbb
in
clc
or
inc
add
aaa
js
ljmp
jl
psrad
icebp
push
push
insl
mov
sub
fdivs
shll
inc
and
hlt
test
imul
lcall
or
je
fisttpl
fistl
dec
xchg
int
lahf
dec
dec
mov
test
mov
sbb
push
int3
jne
mov
xor
mov
leave
or
leave
in
xchg
out
xor
cs
pop
insb
rcll
fnstsw
insl
adc
dec
push
jo
jle
sbb
sub
pop
push
sbb
sbb
sub
adc
sbb
stc
jmp
jg
fisubl
sub
fbstp
mov
mov
mov
outsl
cmp
aaa
inc
and
pop
add
jae
rorl
xchg
pop
pop
xor
mov
out
ja
mov
outsb
lcall
inc
dec
mov
dec
cs
jg
dec
inc
cltd
in
jecxz
xlat
ficompl
or
pusha
pop
call
xchg
lods
in
sub
adc
aam
push
adc
divb
xchg
sbb
push
ljmp
add
jecxz
cmp
stos
test
rcrb
mov
sub
aam
sbb
pop
adc
xchg
dec
sbb
and
mov
cmp
push
dec
and
in
mov
cmp
dec
fs
movsb
in
mov
xchg
xor
sub
dec
xchg
js
mov
out
inc
xchg
jmp
fs
add
decb
cltd
mov
addb
in
add
or
adc
cmp
sahf
jnp
ljmp
xor
add
cltd
scas
mov
xchg
andb
test
cmp
mov
sub
cs
xchg
sbb
jmp
stos
stos
jbe
and
jns
int3
rclb
mov
outsl
rcll
xchg
fdivr
fildl
xchg
mov
cmc
loop
nop
mov
data16
add
cmpsb
pop
xchg
push
cli
clc
mov
push
mov
pop
cmpsb
std
repnz
push
jne
xchg
outsb
jl
mov
cmp
push
rcrb
cmp
cmp
sub
or
mov
xchg
std
out
push
in
outsl
aad
jb
sub
outsb
out
sti
adcb
fwait
ljmp
dec
idivl
cltd
or
sub
iret
out
jo
cmp
jecxz
adc
into
cltd
in
add
mov
aad
sbb
pop
jnp
inc
data16
inc
and
cmp
mov
dec
xor
sbb
scas
ds
das
jmp
mov
dec
and
jo
pop
and
je
imul
push
aaa
mov
xchg
sbbl
mov
and
in
fistl
inc
push
mov
xchg
fs
lods
dec
jnp
pop
sti
imul
sbb
push
incl
adcb
fscale
push
out
out
out
push
incb
adc
mov
jae
push
testl
mov
and
xchg
and
cs
scas
ds
cmc
popa
repnz
clc
pop
sub
push
xor
leave
ret
leave
ds
sbb
js
dec
pop
negl
rcr
movsb
loope
inc
das
lahf
roll
sahf
jle
push
mov
cmp
mov
movsl
imul
lahf
es
jne
ret
gs
les
xchg
add
cmp
mov
movsl
mov
mov
lret
dec
inc
pop
ret
mov
jnp
out
dec
jge
fldcw
xor
push
add
fidivs
lea
clc
mov
loop
adcb
fs
sbb
mov
jle
js
std
jbe
mov
xor
sbb
pop
cltd
jmp
rolb
lahf
gs
dec
lahf
sbb
push
cmp
or
sbb
pop
scas
fs
push
or
jg
in
and
sub
lret
fnstcw
test
das
mov
pop
lods
fwait
sahf
stos
inc
cmp
test
rorb
and
fadd
repz
mulb
sbb
fs
and
cmpb
shll
ja
fwait
push
jno
incl
cmp
hlt
fdiv
inc
int
push
and
jo
jl
lcall
xchg
subl
pop
cltd
stos
jae
jecxz
dec
or
mov
push
adc
mov
iret
inc
popl
pop
es
pop
sbb
das
mov
and
mov
xor
fcmove
rcrl
pop
dec
movsb
movq
dec
movsb
out
push
inc
test
mov
dec
or
nop
les
push
inc
jo
in
enter
and
push
out
mov
stos
je
popa
out
bnd
mov
push
in
hlt
mov
or
cmc
xchg
leave
adc
faddp
add
or
inc
cli
mov
sbb
pusha
lahf
in
xor
aad
push
aaa
ror
mull
mov
pop
add
mov
fimull
and
xchg
aam
jne
outsb
cmpl
pop
aam
outsl
push
pop
add
ret
ret
pop
lahf
insl
pop
xor
jae
cmc
lea
xchg
dec
ret
hlt
leave
xchg
mov
outsb
int3
shrb
push
jg
adc
cvttps2pi
push
or
cmp
or
cmp
loope
imul
sbb
add
xor
or
lock
ljmp
lret
mov
sbb
dec
push
push
inc
lret
sbb
pop
cmp
out
fisttps
aam
add
mov
fildll
movsl
sub
rcrl
ljmp
push
pop
mov
inc
cltd
sub
pop
xor
lcall
cmp
inc
aas
scas
and
out
adc
dec
movsl
repz
dec
xchg
fsubrs
sub
subl
icebp
and
push
add
je
inc
pop
iret
jp
pop
xchg
jne
sub
or
mov
add
ljmp
int3
pop
sub
lret
inc
cwtl
cli
lret
imul
jno
incb
mov
mov
jno
lret
xchg
mov
and
out
ljmp
xchg
rolb
cmpsl
xor
or
data16
ja
enter
adc
fmul
arpl
cltd
pop
mov
jp
das
adc
loope
xchg
rcrb
popa
inc
mov
cli
mov
imul
jb
dec
mov
iret
insl
dec
jge
push
push
jb
sub
inc
or
rcll
cld
imull
push
int
mov
xor
inc
nop
fidivs
inc
xchg
mov
cmp
push
mov
stos
add
adc
and
xor
les
dec
in
hlt
sub
mov
inc
sti
push
lret
mov
xor
les
dec
in
hlt
sub
mov
inc
lret
push
stos
mov
xor
les
mov
test
xchg
or
cmpsl
push
xchg
pusha
sti
je
add
adc
and
hlt
imul
jle
in
sbbl
hlt
fnsetpm(287
lret
jp
lahf
fcoml
in
pop
cld
jns
push
jmp
mov
mov
xchg
insb
xchg
out
xlat
sub
cmp
int3
daa
fcoml
in
pop
cld
ja
addr16
push
lods
inc
out
cmpsl
pop
mov
pusha
sbbl
cmp
int3
cmpsl
fcoml
mov
pushf
jnp
mov
jg
push
out
xlat
pop
mov
dec
jbe
pop
xchg
push
test
cld
lods
and
test
or
sub
mov
arpl
lahf
jo
das
mov
jns
mov
mov
cmp
push
or
aad
sub
insl
addr16
aaa
rcll
xchg
sbb
pop
jg
negl
pop
shrl
jns
or
push
and
cwtl
test
pop
clc
push
push
stos
jbe
cwtl
popf
push
movb
mov
mov
jp
in
ret
cmp
call
add
adc
ja
notl
push
pop
out
xchg
ret
daa
push
call
lea
stc
dec
pop
pop
setbe
dec
xchg
sub
sub
daa
fcoml
in
imul
mov
pushf
push
lods
mov
dec
insb
cltd
jl
or
sbb
sub
push
inc
enter
in
imul
inc
ljmp
or
or
push
xorb
scas
mov
push
loopne
sarb
lds
popl
out
repnz
jmp
test
sbb
inc
mov
addr16
inc
cltd
xor
inc
mov
xchg
insb
xchg
out
xlat
sub
cmp
int3
daa
fcoml
in
pop
cld
ja
addr16
push
lods
inc
mov
xchg
insb
xchg
out
xlat
sub
cmp
int3
jecxz
mov
clc
push
out
popf
xchg
pop
cmpb
cwtl
cmp
cmp
cmpsb
cmp
or
fcomip
mov
inc
shrl
or
mov
jecxz
js
cmp
test
fs
pop
jle
lahf
mov
xor
mov
nop
and
mov
mov
sbb
xlat
lahf
nop
jo
dec
push
mov
ja
push
xor
xchg
mov
fimull
daa
jge
outsb
in
pushf
and
cmpsb
and
dec
sbb
cmp
push
pop
stc
jge
xchg
lods
mov
xchg
insl
xchg
rcrl
gs
cmp
mov
mov
test
addb
mov
xchg
sbb
nop
rorl
push
bswap
imull
test
mov
and
dec
xchg
fwait
shrb
mov
popa
test
inc
mov
fistps
mov
xchg
mov
cld
stos
repnz
jmp
imul
out
pop
lock
insb
subb
mov
jle
test
pop
cli
mov
xorl
enter
jo
inc
repz
les
lcall
xchg
pop
jne
stos
lds
out
xchg
scas
nop
mov
icebp
jle
inc
fucom
mov
jns
jl
inc
sbbl
lcall
dec
repnz
cld
add
int
add
mov
iret
mov
mov
lcall
push
jp
repz
push
push
inc
nop
popa
clc
sbb
mov
sbb
bound
movsl
iret
push
lret
test
jo
insl
lea
aam
pusha
push
stos
mov
add
pop
add
jb
imul
pop
rcrb
out
and
call
hlt
ja
dec
mov
push
test
int3
lds
jb
mov
add
jecxz
test
sub
test
mov
movsl
xlat
dec
dec
les
cmp
inc
fst
mov
add
jge
jbe
adc
fsubrp
mov
out
iret
inc
je
lahf
mov
data16
mov
and
pop
push
mov
xchg
mov
loope
sbb
std
add
mov
jae
inc
shlb
fldenv
sub
std
arpl
lcall
xlat
iret
sub
xchg
test
jg
test
cmc
and
rorl
je
fildll
ja
add
imul
inc
mov
lea
pop
pop
dec
dec
cltd
test
lcall
out
in
inc
jg
stos
xchg
sbb
int
rcll
rclb
add
ss
jmp
add
pop
dec
imul
cmp
and
jne
lahf
or
and
lds
push
mov
das
jnp
xchg
sub
loope
xchg
imull
cmp
adc
aam
mov
and
fdivr
xor
xchg
or
fdivrp
aaa
lds
test
lods
or
popa
mov
cmp
fisubrs
sti
pop
inc
and
xor
ds
inc
mov
aaa
jb
mov
ljmp
dec
orb
xchg
notl
comiss
add
fildl
mov
cmp
loope
outsl
pop
jae
loopne
rorb
inc
popa
mov
cli
xchg
push
and
dec
sub
mov
pop
sbb
lods
push
xor
fs
jbe
push
jae
push
ds
in
scas
inc
adc
iret
loopne
aaa
cli
mov
cltd
sbb
push
push
ja
jb
outsb
xlat
jle
add
mov
pusha
xor
loopne
xchg
scas
or
xor
scas
mov
movsb
jae
push
fsts
cmp
xor
mov
or
adc
out
sbb
fcoml
or
cli
inc
cld
aas
roll
outsl
loope
cld
fisubl
xchg
mov
mov
push
imul
and
xorl
jmp
jns
das
mov
aad
fcomps
mov
xchg
pop
push
popa
jne
mov
xlat
out
lock
fwait
scas
xchg
dec
js
cmp
pop
gs
enter
mov
cwtl
fstp
add
pop
xor
stos
add
push
pop
sbbl
addl
jp
and
adc
inc
insb
insl
ret
push
gs
or
ret
icebp
nop
lods
es
add
shlb
sub
mov
rol
and
xor
mov
mov
pop
mov
loope
dec
jmp
in
cmp
fists
jge
cmp
adc
adc
sarb
push
push
or
jns
sbb
mov
cmp
adc
fwait
mov
fisubs
scas
or
fisubl
xchg
add
mov
cld
lds
mov
adc
pop
stc
jl
lret
push
add
imul
mov
jnp
pop
loope
inc
fchs
std
cmp
xchg
pushw
call
cwtl
outsl
mov
stc
pop
push
push
mov
lods
or
pop
mov
adc
jne
mov
lahf
into
add
dec
test
cwtl
loop
add
movl
fs
es
mov
pop
fsubr
loope
or
xchg
push
cmp
sbb
pop
ret
pop
movsb
sub
inc
xchg
scas
lods
xchg
sbb
dec
std
mov
ljmp
sub
mov
loope
mov
mov
les
dec
cmc
pop
add
dec
sub
in
push
dec
or
jg
icebp
cmp
inc
jmp
and
scas
add
xchg
sbb
jb
and
xor
xor
lret
xchg
fistl
dec
inc
lock
cli
out
pop
adc
push
push
and
int
ss
dec
inc
pushf
mov
insl
pushf
mov
das
add
data16
or
push
dec
cltd
and
fwait
enter
jmp
out
mov
shlb
addr16
iret
and
mov
add
sti
adc
gs
lock
rorb
stos
scas
add
push
adc
pushf
test
dec
xchg
pop
incl
gs
xchg
sbb
and
dec
pop
pop
out
ss
cli
sub
push
addr16
nop
sub
xchg
stos
or
lods
mov
sub
dec
int3
mov
fisubl
mov
inc
jge
push
adc
xor
inc
std
ficomps
pop
mov
lods
sbb
mov
aam
jge
mov
fwait
bound
clc
insl
scas
mov
push
sarl
arpl
in
int
inc
out
insl
inc
cmp
call
xchg
pop
lock
addr16
fnstsw
movsl
xorb
xor
je
mov
ja
lret
in
pop
inc
cmp
pop
mov
add
repz
mov
insb
fwait
cmp
and
adc
enter
sub
ja
lods
or
cmpsb
xchg
pop
add
int
mov
in
push
inc
cmp
mov
lret
xor
cwtl
pop
mov
xor
movsb
add
jo
movsl
aad
in
pop
cli
mov
mov
jmp
mov
xchg
xor
xchg
add
test
loop
lcall
dec
in
sub
jbe
pop
sbb
jns
lea
ret
lcall
fcmovu
mov
pop
popa
adc
fsubrl
jnp
shrl
inc
pop
mov
pop
nop
cmp
jbe
pop
mov
addr16
cmp
inc
xchg
aaa
ds
push
cmp
int3
fdiv
jae
in
nop
jmp
stos
dec
fucomip
leave
xor
cmpsb
and
xchg
mov
sbb
push
fwait
and
pop
fs
shll
js
push
fwait
mov
pusha
mov
push
sahf
arpl
jns
aam
pop
daa
cs
iret
cs
push
cmp
sbb
sub
gs
scas
push
repnz
jl
mov
cmpsl
xchg
inc
xor
pop
push
push
cmp
in
mov
sbb
inc
push
mov
push
pop
cmp
jge
mov
mov
cmpsb
cmp
and
inc
mov
push
or
or
or
xor
adc
mov
push
jp
or
mov
xor
loopne
push
mov
xchg
push
leave
dec
movsl
idiv
adcl
test
out
ds
jns
rcll
mov
sti
leave
clc
mov
fdivr
sbbb
xchg
mov
loope
out
jo
cmp
cmpsb
jge
fnstenv
in
fcomp
sbb
push
inc
cwtl
imull
je
dec
lds
mov
pop
in
xor
dec
aaa
out
adc
add
aas
mov
ja
sub
sub
xor
sbb
or
mov
out
jae
pop
xor
or
pop
leave
notb
mov
imul
xchg
div
jb
pop
sahf
mov
insb
mov
mov
inc
repz
push
jne
rorl
popa
push
fiaddl
xchg
bound
mov
sbb
and
imul
mov
inc
cmp
shr
inc
xorl
jo
and
shlb
lods
mov
cmp
jbe
jno
push
rcll
or
adc
mov
mov
fcoml
push
ja
jnp
xor
gs
std
xor
pop
arpl
xchg
lods
sbb
negb
mov
adc
sarb
push
sbb
pop
scas
or
lea
add
mov
sub
push
rcl
lock
sbb
sbb
shl
jne
in
cmpsl
scas
pop
mov
xchg
mov
lcall
lcall
js
sbb
fstpt
sub
pop
sub
xor
rcr
push
push
push
pop
mov
ds
std
xorb
cmpsl
sub
out
in
lret
dec
enter
movsl
jle
das
sbb
aam
clc
lds
sub
lds
dec
stos
lcall
hlt
aam
scas
fcomi
mov
and
iret
test
push
jno
mov
popf
bound
mov
in
js
popa
lods
adc
int3
aad
arpl
cld
xchg
mov
or
out
aam
sbb
std
pop
push
in
or
sub
jl
lock
nop
dec
idivw
sbb
pop
fs
cmpsb
insl
pop
mov
es
dec
mov
or
jnp
aam
adc
sbb
adc
xorps
aaa
andb
mov
add
mov
or
cmpsb
sbb
dec
add
faddl
mov
das
and
outsb
mov
arpl
aam
sbb
popa
mov
mov
jmp
addr16
inc
dec
mov
aad
ficompl
inc
jne
fldt
sbb
dec
test
les
xor
xchg
push
cmpsl
int3
loope
testb
sarb
roll
fidivrl
xor
fldcw
fdivs
stc
repz
sub
stc
or
jmp
pushf
adc
imul
shrb
test
xchg
out
add
gs
cmp
call
pop
test
jecxz
mov
movsl
sub
lea
fcomip
popf
das
jle
xchg
sub
hlt
addl
movsb
cli
lods
push
inc
scas
rcr
fisubl
cmpsb
out
hlt
rolb
shlb
sub
push
xor
and
repz
mov
add
frstor
jecxz
lea
in
xchg
testl
outsl
sub
push
fisttpll
sbb
cmpsl
push
jecxz
xorl
sarb
or
fldenv
pop
outsb
loop
push
adc
pushf
sub
loopne
nop
mov
add
decl
jge
xchg
aas
jnp
xchg
sbb
mulb
push
mov
push
lahf
cmp
dec
aad
rcl
adc
loope
orb
pop
mov
lret
sahf
jne
xor
leave
stos
mov
or
into
dec
fsubrs
add
mov
sbb
lods
pop
mov
mov
ss
pop
push
jnp
mov
xchg
shlb
sbb
dec
sub
cmp
adc
out
mov
lods
adc
lods
fcom
cs
lock
xchg
cmp
dec
loop
xor
or
leave
sub
mov
push
shlb
jno
cmp
sbb
sub
sbb
jg
adc
or
and
dec
sarb
shrl
fsubr
iret
pop
sub
int
ss
xchg
lret
fs
daa
inc
push
jge
sbb
push
out
mov
repnz
pop
mov
rcll
cltd
inc
cmp
pop
lods
enter
dec
icebp
and
in
and
mov
in
jecxz
loopne
fildll
mov
fistpl
adc
mov
mov
or
inc
imul
cmp
cmpsb
adc
mov
test
addr16
inc
faddl
lea
test
ds
dec
jno
jecxz
pushf
mov
mov
jmp
push
mov
adc
mov
pop
popa
aas
inc
xor
mov
inc
adc
adc
xor
mov
imul
mov
ja
aad
mov
xchg
cmp
mov
push
push
push
add
pop
jns
xor
xchg
pushf
call
mov
lds
sub
jnp
adc
stc
dec
roll
stos
out
pop
mov
fbstp
test
repz
jne
rorl
jg
insb
stc
mov
mov
pop
out
sbb
mov
and
fwait
adc
lock
sbb
mov
ds
fisttpl
aaa
icebp
xchg
push
dec
push
cld
mov
fbstp
ret
inc
jl
push
mov
push
sbbb
das
adc
aas
dec
jle
dec
xchg
push
inc
mov
clc
arpl
fucomi
mulb
rcl
push
cmp
in
out
mov
mov
xor
das
je
int3
or
insl
dec
sbb
into
call
jbe
jbe
mov
xor
pop
add
aaa
into
rcrb
pop
out
into
fwait
dec
ret
lods
sbb
dec
stos
add
inc
das
fistl
fisubrs
inc
mov
cmpsb
jnp
cmp
fdivs
mov
sti
aam
pop
out
jl
adc
scas
mov
and
xchg
icebp
loope
fcmovne
out
jmp
cmp
iret
and
int
xorl
lds
ds
test
jle
imul
push
jle
test
push
push
leave
mov
out
mov
test
pop
out
in
scas
lods
add
mov
and
clc
sbb
pop
jp
mov
sbb
in
clc
or
inc
or
push
add
jle
test
xchg
in
rclb
out
adc
pop
pop
je
jae
xor
popa
ja
adc
jecxz
xor
xor
int
jbe
push
in
popa
popf
ds
inc
pop
bound
add
fistl
stc
sbb
or
loop
bnd
jae
pop
push
dec
dec
into
int
out
jmp
fld
dec
inc
xor
rorl
in
jecxz
xchg
insb
out
out
gs
leave
mov
mov
dec
sbb
sub
call
add
pop
jecxz
scas
movsl
rcrb
mov
bound
gs
rcll
bound
js
inc
cwtl
dec
mov
sti
mov
mov
sub
xchg
movsl
xlat
cmpsb
dec
mov
push
mov
fs
jbe
sbb
jae
mov
xchg
out
adc
sbb
jnp
add
mov
je
pop
xor
cmp
dec
or
and
mov
dec
mov
mov
inc
pop
xchg
mov
mov
push
fnstenv
inc
sub
icebp
faddl
xor
in
cmp
mov
lret
mov
enter
lret
mov
add
dec
sti
in
daa
lea
loope
xchg
mov
dec
xchg
cmp
pop
clc
mov
xchg
lret
inc
nop
cmpsl
pop
lea
jno
mov
lods
push
mov
or
outsb
sub
mov
lea
add
movl
fidivs
out
pusha
xor
repnz
pop
paddq
push
mov
fs
les
arpl
lds
fildll
mov
lret
idivl
add
std
cltd
cmp
sub
mov
ret
cwtl
mov
mov
cmp
push
push
mov
mov
inc
loope
inc
ljmp
xor
rorb
popa
pushf
cmp
adc
cmc
cmp
push
iret
sbbl
jg
push
xor
dec
mov
fcmovu
push
push
stc
fiaddl
leave
out
nop
jo
xchg
mov
ret
jb
cmp
and
adc
mov
jp
shrl
stos
mov
cmp
and
inc
push
out
add
sub
cmc
xchg
cs
pop
push
cmpl
mov
jnp
iret
jp
mov
adc
mov
les
sub
into
sahf
push
dec
lret
and
lods
cmpsb
jmp
rcrb
add
inc
nop
adc
mov
xchg
xchg
stos
sbb
mov
xchg
cltd
inc
stos
and
or
je
xchg
adc
push
xchg
insb
ret
jmp
pop
or
mov
ret
sbb
das
adc
pop
sub
and
cmc
push
mov
adc
mov
rol
jle
mov
jns
icebp
js
test
mov
xchg
jmp
das
xchg
mov
mov
mov
mov
inc
xor
sub
pushf
push
xchg
add
ss
sub
repz
xchg
sti
xchg
push
iret
dec
outsl
push
cld
xchg
jae
lahf
jg
andb
mov
insb
xor
int3
adc
xchg
push
in
adc
adc
mov
clc
mov
jb
sub
pop
jbe
mov
push
push
int3
lods
ja
fnstsw
cli
jle
jp
push
fsubr
adc
mov
clc
push
mov
mov
push
adc
mov
mov
push
ret
push
mov
jne
xor
sub
sbb
test
shr
jmp
call
movsl
mov
je
sahf
adcb
adc
sub
xlat
sub
and
push
adc
adc
lods
push
into
jne
insb
sub
stos
push
push
dec
pop
pop
sub
popa
iret
or
push
add
xchg
loope
call
sbb
movsb
mov
mov
inc
xchg
imul
stc
mov
xor
mov
adc
adc
sub
mov
test
cmp
jo
jns
mov
jbe
sub
scas
xchg
lea
push
out
mov
inc
out
lcall
ret
je
mov
in
insl
mov
shlb
adc
xchg
or
pusha
jle
sbb
int
jnp
and
test
ljmp
mov
or
sub
and
inc
sti
lret
arpl
mov
xorl
jmp
dec
xchg
cmp
push
push
in
sbb
push
inc
dec
xor
inc
frstor
xor
dec
lods
push
imul
out
lcall
mov
push
stos
add
test
into
xchg
lea
lods
mov
xchg
test
and
jo
cmp
jle
mov
jge
mov
push
lods
fs
jb
or
je
sub
push
add
jno
pop
int3
mov
jnp
mov
xlat
ljmp
lds
imul
cld
cmc
shlb
inc
int3
int
lahf
push
sahf
pop
ss
ss
xor
jno
push
or
imul
cmp
pushf
rclb
push
mov
notb
jb
cmp
pop
xor
divl
gs
mov
mov
inc
in
aas
dec
jg
je
xorb
or
mov
adc
push
jle
push
sti
push
mov
add
aad
aam
nop
call
inc
call
adc
lret
add
shl
mov
xchg
lds
lock
push
jns
mov
in
mov
ss
lret
xchg
sbb
xor
orl
mov
xchg
cmp
push
fnstsw
out
dec
sub
jne
push
into
or
mov
push
in
ret
push
in
xchg
jne
push
inc
mov
int3
xor
dec
inc
add
in
les
pop
mov
jp
std
int3
inc
shll
scas
jg
aas
cmpsl
je
repnz
add
out
mov
inc
mov
pop
mov
out
mov
gs
xor
sbb
cltd
lods
jnp
mov
rcll
push
sub
cmpsb
fistpll
repz
sub
push
push
mov
nop
in
sbbl
cmp
push
outsb
ret
js
je
shll
inc
insl
mov
mov
dec
fidivrs
mov
scas
sbb
or
push
shrl
add
jae
je
call
icebp
in
sbb
dec
stos
sub
mov
jns
shrl
outsl
inc
xchg
loop
mov
inc
mov
pop
lcall
cltd
clc
cld
fcmovu
xchg
jmp
lcall
js
movsb
lds
push
icebp
adc
jns
adc
xor
jno
mov
mov
dec
gs
imul
sub
xor
sbb
fdivl
in
sbb
ja
addr16
push
lods
inc
mov
xchg
insb
xchg
out
xlat
sub
cmp
int3
daa
fcoml
in
pop
cld
ja
addr16
push
lods
inc
mov
xchg
insb
xchg
out
xlat
sub
cmp
int3
and
pop
in
pop
cld
jbe
arpl
dec
cmpsl
pop
sahf
insb
cmpl
sbb
sub
cmp
int3
or
lahf
in
das
cld
ja
ja
push
lods
mov
cmp
test
sub
cmp
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
xchg
fiadds
adc
inc
cmpsb
pop
test
in
push
adc
and
jno
popa
rcll
add
jno
inc
loope
adc
and
jno
popa
rcll
sbb
imul
inc
and
push
mov
or
in
loopne
mov
enter
xchg
test
fildll
fldcw
sub
cmp
lret
cmp
jle
dec
mov
ljmp
lods
and
push
fs
movsb
daa
shll
outsb
fsubrp
mov
pop
call
jno
xor
adc
and
lret
aas
popa
rcll
add
mov
sbb
scas
loope
mov
popa
fisubrs
mov
push
mov
mov
xor
pop
icebp
cs
loope
or
sub
mov
les
jl
shll
jns,pn
mov
pop
pop
dec
nop
push
jnp
fcoml
inc
movsl
rcll
mov
arpl
push
and
or
popa
shll
loope
adc
and
jno
popa
mov
inc
loop
testl
scas
pop
sahf
sub
fs
inc
aam
xlat
mov
mov
out
cmc
xor
jno
adc
adc
cmp
dec
cmc
and
cmpsb
xchg
and
sbb
adcl
shll
loope
adc
and
jno
popa
rcll
add
jno
inc
loope
adc
and
jno
popa
rcll
and
add
pop
sar
dec
push
cmp
xor
pop
sbb
or
fwait
xchg
or
push
ja
stc
jecxz
dec
cmp
mov
and
inc
je
cld
ss
sbb
insb
repz
fnsave
loop
aam
xlat
loope
cwtl
push
cmc
push
ficoms
sub
mov
jge
or
cmp
and
out
cmp
shll
xor
int
and
fadds
aad
push
fildll
mov
in
add
cmp
push
dec
xorb
aaa
mov
mov
shrb
fldenv
add
mov
jb
xor
cmpsw
pop
add
sub
jne
repnz
sahf
stc
pusha
inc
cmp
mov
jmp
jle
stc
mov
test
cmp
test
xorb
adc
sub
call
dec
ret
lods
mov
loope
inc
pop
sub
loope
sbb
in
daa
ljmp
mov
mov
fildl
pop
xchg
mov
nop
loope
mov
popf
sbb
lcall
ds
sbb
int3
rcl
int
lcall
repz
dec
jge
rep
xor
test
into
inc
sub
xor
fisubrs
xchg
jg
xor
jecxz
cmpsl
jb
jecxz
addl
sbb
pop
and
adc
or
loope
push
sbbb
data16
or
outsl
mov
das
lahf
cmp
adc
movl
fwait
xchg
mov
rcll
ss
cmp
xchg
sub
xchg
pushf
fistps
sbb
ljmp
call
inc
sbb
cs
es
push
call
cltd
packsswb
aam
xor
daa
mov
dec
jno
jl
enter
xor
cmp
or
xchg
lahf
fisttpl
inc
out
mov
dec
popa
xor
jns
out
stos
outsl
dec
add
push
nop
jne
pop
or
pop
mov
inc
add
push
dec
mov
adc
or
jecxz
xchg
mov
mov
mov
dec
xchg
out
jbe
cld
sbb
and
and
xor
vpunpckhbw
mov
xchg
loope
cmpsb
mov
adcb
sbb
in
fwait
adc
adc
xchg
mov
mov
dec
les
lock
test
add
sbbb
test
les
xor
jle
mov
iret
mov
hlt
aam
sbb
mov
dec
jl
xchg
add
popf
sub
ljmp
and
iret
cmp
ljmp
mov
sti
sti
dec
bound
rcl
sbb
and
and
push
popl
test
cmp
mull
adc
jo
push
adcl
icebp
or
outsb
std
stos
out
bound
cmp
mov
movb
mov
xor
jne
or
out
ficoml
jne
jnp
scas
je
dec
mov
clc
adc
into
xchg
lds
xchg
dec
ja
mov
pop
insb
jo
dec
jl
dec
popf
inc
popa
pop
hlt
or
push
pop
mov
push
sbb
sub
cmpsb
sbb
push
or
mov
clc
sbb
mov
fcomps
jp
xor
aaa
dec
lret
mov
lea
pushl
add
or
xchg
adc
jns
jno
lods
shlb
sub
pop
sub
mov
insb
cld
sbb
mov
jecxz
inc
out
out
call
jbe
or
inc
adc
fidivrl
mov
add
int3
inc
test
daa
mov
loop
jne
scas
mov
inc
xchg
or
add
jnp
cmp
xchg
mov
cmp
lcall
push
mov
cmp
popa
fs
mov
in
push
daa
out
subb
test
lahf
mov
xor
and
cmpl
movsl
faddl
dec
sbb
mov
or
mov
int3
xchg
pop
popa
insl
rclb
pusha
mov
or
push
dec
sbb
mov
push
out
fidivrs
pop
dec
repnz
dec
pushf
jp
shl
mov
popa
pop
ja
fcompl
pop
jae
lret
dec
inc
mov
jnp
cmp
sti
fisubrl
lods
dec
mov
sahf
test
mov
cmpsl
dec
mov
cmc
imul
iret
rcll
cwtl
jno
xchg
sarl
sub
sbb
adc
dec
mov
xor
call
and
cmp
jp
stc
ret
fsubrp
data16
stc
jnp
fwait
mov
aaa
pusha
cld
movsl
xor
sbb
cmp
mov
cs
push
dec
sti
in
push
js
fcoml
or
jle
fs
iret
jge
inc
push
push
es
cld
das
mov
shrb
sbb
jnp
xchg
std
lds
cmp
ljmp
sbb
and
push
inc
ljmp
dec
sub
jecxz
inc
cmp
int
xorl
lock
inc
and
mov
sub
test
stos
int3
ret
stc
mov
stos
pop
mov
ss
mov
dec
xchg
mov
lcall
fadds
pusha
iret
rorb
cs
leave
fimull
xorb
ljmp
sub
sub
stc
in
jbe
pminsw
fistl
adc
pushf
lea
pop
and
cmp
into
mov
jo
ds
or
mov
stos
jmp
sbbl
mov
and
lret
negb
pushf
fnstcw
sub
cmp
stos
lds
scas
mov
fadd
mov
jge
mov
movsb
mov
int3
jmp
xchg
dec
jno
enter
pusha
xor
sbb
and
cs
xor
pushf
test
inc
mov
mov
adc
out
shrl
pop
xor
add
imul
mov
push
adc
sub
in
xchg
jbe
pop
out
movsb
jne
lret
or
jge
sbb
or
add
push
lcall
add
lahf
sub
lahf
mov
push
adc
and
aad
lock
mov
xor
mov
aas
leave
rcrb
push
and
aas
dec
cmpsl
fsubrp
ret
adc
sbb
lahf
jns
push
mov
push
xor
and
cmpsl
shlb
jb
into
and
mov
fiadds
inc
inc
maskmovq
lods
inc
nop
push
mov
movsb
push
mov
bound
jae
push
and
lret
or
push
stc
cmp
aam
lahf
outsl
xchg
mov
push
pop
ret
and
cld
ret
dec
jae
les
mov
xchg
jle
sub
jl
xchg
aas
cmp
push
mov
clc
dec
add
pop
push
inc
cmp
test
das
sub
addb
mov
sahf
push
in
jmp
test
lret
mov
clc
dec
inc
push
pop
xor
stos
mov
sbb
into
jae
dec
fisttpl
sub
dec
enter
pop
enter
mov
cmc
xchg
push
and
ja
or
add
cs
sub
bound
jmp
int
mov
or
lods
sbb
and
ret
jne
pushf
push
addr16
xlat
out
lahf
in
scas
into
in
mov
loope
in
and
and
jbe
insl
subl
add
cmp
mov
pusha
or
lret
adc
dec
fs
jmp
pop
rclb
sub
fdiv
pop
rolb
adc
cmc
inc
out
in
or
sbb
in
cmpb
mov
inc
jmp
insl
inc
pop
or
sti
ficompl
inc
mov
and
xor
mov
dec
lea
or
stos
lar
in
push
jne
mov
dec
cwtl
stos
sarb
mov
sbb
imul
ds
xchg
dec
scas
sub
sarl
test
mov
push
jo
jno
jns
and
push
addb
outsl
pop
mov
jp
mov
clc
imul
or
cltd
sbb
sti
in
lea
and
or
lods
std
jecxz
test
loop
xor
add
mov
pop
in
xor
dec
ja
inc
popl
jmp
jno
iret
sub
mov
loopne
ljmp
repz
jmp
orl
pop
and
in
insb
or
cs
and
mov
in
or
xchg
pop
fsubrl
pop
inc
test
fimull
stos
ror
mov
cs
push
mov
loop
mov
pop
out
rorl
jle
pop
loopne
cmp
cmc
data16
call
cmpsl
clc
or
dec
xchg
out
insb
lret
inc
pop
jle
cmp
repz
shlb
adc
inc
hlt
mov
int3
bound
loop
inc
or
bound
jle
fmull
push
scas
scas
sub
and
cmc
aaa
sbb
pop
xorl
shlb
xchg
mov
orl
cmp
notb
call
pop
stos
xorb
sbb
dec
add
mov
popf
outsb
insb
add
add
inc
sbb
push
dec
test
mov
mov
cmc
mov
adc
into
adc
insb
cmp
adc
inc
dec
mov
aam
mov
gs
lahf
in
or
and
push
push
out
arpl
notl
mov
jecxz
mov
out
or
nop
enter
in
lahf
out
in
call
fdivp
or
std
jmp
aad
repnz
mov
xor
cmpb
outsl
dec
push
sub
cmp
aam
mov
out
push
stos
pop
sbb
ljmp
hlt
lcall
add
add
jg
xchg
cmp
daa
rorb
cli
sarb
out
sbb
sbb
dec
and
bound
sbb
in
lods
add
stc
loope
fdivs
fcmovne
scas
inc
jmp
movsb
sbbl
cs
add
je
push
and
or
mov
insl
outsb
or
arpl
and
or
fidivrl
or
filds
lret
push
fsubrl
or
lret
sbb
dec
xchg
cmc
pusha
mov
add
scas
cs
mov
leave
divl
stc
cmp
jns
mov
addr16
test
sbb
push
popa
negb
xor
inc
fdivs
sbb
dec
jne,pn
rolb
inc
sbb
lock
or
mov
movsb
dec
cs
cwtd
cwtl
rorl
scas
pop
mov
std
je
push
xchg
adc
push
mov
leave
mov
push
push
inc
mov
jl
jnp
dec
dec
sub
out
jnp
stc
gs
and
stos
xchg
mov
pop
dec
mov
xor
gs
sub
pop
pop
add
xor
testl
and
mov
add
and
dec
or
outsl
stos
cmp
scas
mov
lods
or
fdivrl
xor
adc
setnp
je
jbe
sbb
push
inc
ficomps
mov
fs
cmp
push
push
testl
inc
xor
out
aad
and
or
jmp
out
outsb
mov
xchg
push
or
fwait
jmp
pop
or
scas
add
in
inc
xor
cmp
dec
imul
lcall
inc
data16
add
xchg
and
in
leave
repz
dec
arpl
jnp
bnd
movsb
les
and
lahf
mov
mov
cmpsb
fsubrp
cmpsb
mov
jb
add
push
out
jecxz
fs
gs
mov
jge
jl
xchg
or
test
mov
xchg
sbb
in
lcall
xor
push
or
sub
mov
adc
imul
js
aam
ss
add
fs
jb
dec
adc
lock
stos
adc
cltd
pop
leave
in
pop
jp
and
dec
mov
mov
js
inc
mov
dec
insl
mov
or
loop
movsl
dec
cmp
xchg
add
bound
sub
leave
sub
in
scas
jns
xor
int
stos
inc
int
lock
call
inc
icebp
adc
fsubp
mov
and
and
xchg
lret
and
loope
xchg
adc
jns
mov
xchg
inc
pop
sbb
enter
es
pushf
add
dec
inc
addr16
mov
addr16
lret
push
xchg
sbb
test
call
mov
xor
movsl
pop
arpl
jmp
mov
sbb
fildll
fistpl
xor
scas
or
xchg
jecxz
fisubs
mov
mov
in
jmp
xlat
pop
sti
loopne
sub
cmp
movsb
push
aad
jne
xchg
outsb
out
cwtl
pop
fs
adc
jmp
call
pusha
dec
xor
dec
out
dec
lock
stos
push
sar
loope
pop
repnz
add
push
out
inc
mov
dec
int3
test
mov
fcmovnu
lahf
inc
std
repz
adc
adc
mov
jbe
pop
mov
bound
or
jmp
push
pop
jg
push
jae
sbb
ds
insl
or
ficoml
cmp
mov
ds
and
loope
inc
push
jno
lods
sub
ret
pop
xor
imul
inc
sbb
jns
arpl
test
xchg
leave
push
rclb
mulb
xor
fs
lods
xchg
subl
inc
and
and
pop
xor
cmp
test
mov
in
lahf
cmc
push
or
pcmpgtb
addl
sbb
add
test
adc
adc
mov
push
loop
or
fldl2e
pop
sub
cmpsb
cwtl
mov
out
filds
jp
in
ds
cmp
aad
sbbb
jg
dec
sub
or
inc
sbb
add
dec
test
rcll
jnp
xor
sbb
outsb
cmp
xchg
mov
ret
subl
push
fnstsw
adc
ret
sub
jecxz
xlat
pop
inc
cmp
jmp
jecxz
push
push
pop
add
scas
jecxz
andb
sub
fsubs
imul
mov
ljmp
pop
loope
pop
cmp
jne
sub
push
or
inc
pop
movsl
adc
outsb
sbb
mov
fsts
push
mov
pop
xor
repnz
scas
add
stos
mov
fcompl
adc
xor
sbb
nop
inc
jmp
and
add
ret
push
push
mov
add
adc
xchg
jmp
insb
pop
sbb
outsb
sbb
dec
cs
dec
push
xchg
scas
hlt
repz
pop
adc
lods
inc
outsl
mov
lods
fnstenv
imul
xor
repnz
sarl
leave
aad
jmp
xor
push
and
loop
fs
mov
movsb
jbe
mov
inc
cmp
arpl
push
pop
jmp
addl
cli
mov
cli
rcr
lret
movsb
lds
ljmp
or
mov
cmp
fsts
adc
pop
fsubr
imul
xor
jae
pop
cmp
sub
fisubl
ja
inc
cwtl
cmp
mov
insb
pop
and
mov
and
stc
fistpl
cltd
sub
jmp
fdivs
ljmp
or
pop
cmp
arpl
fwait
bound
dec
les
daa
fmul
cmpsl
push
inc
jnp
jo
loope
mov
add
imul
inc
out
cmp
and
mov
into
lcall
inc
add
es
xorl
aas
xchg
lret
gs
dec
cld
fmull
add
sbb
jae
mov
sub
mov
jmp
ja
sbb
push
test
inc
push
inc
rep
rcrb
cmc
insl
movl
inc
ret
je
xor
lock
mov
loope
lret
popf
fistps
pop
adc
es
push
jbe
iret
out
add
pop
popf
dec
jp
sbb
push
sub
lea
aaa
add
sbbl
jge
pop
pop
call
fcmovne
jmp
jp
dec
ror
cmp
push
popf
mov
jo
sub
dec
xor
aad
sbb
loope
inc
xor
add
adc
jecxz
negl
jge
jp
repnz
loopne
jb
cmp
xchg
push
xor
outsb
push
outsb
test
fldcw
add
lret
scas
fsubrp
aad
out
out
mov
iret
cmpsb
and
sbb
xchg
clc
xchg
cmpl
repz
lods
xor
jno
inc
push
movsb
xchg
fxch
and
out
div
clc
std
mov
dec
push
mov
aad
mov
call
mov
jle
fildll
push
lcall
popf
inc
in
orb
pop
inc
mov
test
dec
add
jne
movsb
mov
iret
cwtl
xor
inc
push
dec
inc
xor
es
iret
push
mov
xchg
scas
inc
cmp
out
mov
addr16
jmp
jp
mov
cmpb
add
dec
repnz
out
ffreep
xor
movsl
pop
dec
aas
loopne
scas
in
inc
cmp
push
mov
and
pop
or
adc
push
and
mov
jmp
mov
push
pop
ror
gs
pop
cmc
pushf
sbb
jb
xor
pusha
repz
lods
cmp
and
out
pop
push
lcall
stos
fisubrl
inc
xor
mov
rorb
pop
pop
outsb
in
cmc
or
pop
jle
adc
popf
sub
xor
das
sub
mov
add
nop
lods
adcb
inc
lds
inc
xlat
sub
add
leave
push
ja
rcrl
xor
imul
inc
into
jns
int
mov
xchg
mov
into
test
fstpl
push
xor
inc
mov
inc
addb
add
cmp
push
loope
in
call
cld
xor
xchg
cmp
jbe
fdivs
aaa
imul
stc
mull
pop
insl
outsb
push
dec
dec
xor
pop
scas
sbb
mov
push
jle
dec
nop
int
push
push
popf
mov
inc
mov
mov
inc
shlb
mov
lock
pop
xchg
inc
mov
out
mov
push
mov
icebp
int
sub
testl
push
insl
pop
cli
scas
xor
jb
push
and
in
mov
and
pushf
jae
cld
outsb
push
shlb
push
ljmp
inc
dec
cld
ret
sub
shrl
xchg
les
jnp
cmpsl
nop
in
rcll
fstpl
sar
data16
lea
add
rcrb
mov
push
mov
xchg
sbb
jmp
popf
pusha
dec
sbb
cs
fdivs
outsb
jmp
xor
rcrl
gs
mov
mov
cli
fisttpl
mov
rorl
mov
shll
sbb
and
fnstenv
out
xchg
fidivrs
jmp
pop
sahf
pop
jb
inc
je
nop
loopne
jp
push
bound
xchg
insb
mov
dec
arpl
in
sub
adc
jge
mov
cs
jns
fisttps
jge
or
orb
add
test
inc
dec
or
and
cmc
sbb
fimull
stos
jge
cmp
ret
fnsave
fwait
test
mov
mov
pop
xor
je
test
pop
cmpsb
mov
insb
subb
or
pushf
mov
xor
adc
mov
dec
int
cmp
negl
insb
lcall
es
fiadds
testl
inc
int3
mov
stos
xor
cli
addl
sub
cld
cmp
mov
cmp
mov
cmp
xchg
movq
dec
stos
in
stos
inc
insl
dec
icebp
sub
or
xor
rol
out
jns
pop
xor
lods
outsl
lcall
mov
addr16
xor
je
in
mov
pop
in
xchg
and
push
fcoms
jmp
mov
lahf
prefetchw
xchg
inc
lcall
scas
je
mov
push
cltd
mov
mov
inc
xchg
fwait
jbe
test
cmp
dec
popa
xor
test
dec
cltd
pop
adc
shlb
dec
packsswb
mov
leave
mov
push
pushf
jg
sub
pusha
mov
cmpb
ss
fnstenv
cmp
int
mov
sub
inc
pop
and
jecxz
daa
rcll
mov
movsl
mov
cmp
ss
out
loope
xchg
lret
inc
add
adc
mov
icebp
pop
lods
arpl
test
xchg
ret
faddl
nop
loope
inc
push
xor
repz
paddq
popf
mov
mov
in
jle
rcrl
mov
mov
call
mov
jno
inc
loope
adc
and
jno
popa
rcll
add
jno
inc
loope
adc
and
jno
popa
rcll
add
jno
inc
loope
adc
and
jo
popa
rcll
add
jno
inc
popa
push
out
mov
and
es
jge,pn
insl
jo
add
mov
adc
add
in
mov
mov
rorb
pop
add
cmp
inc
or
mov
mov
nop
mov
rorb
inc
lcall
add
mov
mov
mov
mov
mov
add
push
cmp
outsl
sub
xchg
jnp
push
dec
push
ret
mov
lods
cld
inc
aas
mov
repz
jne
sti
cwtl
mov
les
xor
in
cmc
mov
popf
orb
scas
pop
or
decb
or
addl
popf
adc
pop
jl
jge
xchg
add
adc
je
inc
loop
or
jbe
in
push
call
cmc
lods
jge
aas
lea
std
lods
out
ret
jno
cmp
out
pusha
cmp
in
xchg
popf
pop
xchg
fisttps
rol
das
sub
add
loopne
push
popf
cli
clc
mov
mov
sub
mov
pop
je
adc
pusha
cmp
ret
cmc
sbb
adc
movsl
fdivl
loop
and
pop
cmp
dec
lds
push
xor
add
mov
mov
mov
xor
jl
xor
arpl
rorb
jmp
jmp
shlb
insb
and
jo
inc
or
mov
or
mov
rorb
pop
add
cmp
inc
or
mov
or
mov
rorb
loop
ds
push
pop
sub
ds
cmp
cwtl
xchg
sarb
fstpt
add
imul
dec
cmpsb
mov
or
xchg
jle
fstpt
sbb
dec
lahf
enter
jge
loopne
mov
cmp
mov
xchg
add
stos
data16
adc
xchg
mov
into
cmp
loope
insl
out
mov
test
jge
xchg
jmp
mov
incl
inc
add
jo
dec
bound
add
or
push
mov
xor
mov
fnstsw
pop
lahf
fcoms
pop
add
stos
je
int
add
cmc
imul
in
pop
jns
sbb
scas
insl
mov
adc
lret
pusha
mov
add
pop
jae
aaa
inc
push
add
push
int
fs
cld
fidivrl
pop
adc
jb
out
fcoms
leave
cmp
add
lods
popa
push
cli
mov
fildl
scas
outsb
push
xchg
mov
je
lahf
mov
adcl
push
lret
inc
movsl
mov
push
sbb
cli
cmp
sub
pusha
or
fildll
fdiv
sub
stos
mov
sub
dec
addr16
cmpsl
add
orb
popf
lret
subl
mov
jmp
jb
lds
cmp
pop
pop
call
bswap
pop
loop
push
dec
loop
dec
adc
movlps
jae
insl
orb
xlat
scas
leave
sar
pushf
mov
popa
or
xchg
aaa
insb
aad
fdiv
popa
adcl
push
mov
push
mov
mov
jle
lds
in
pushf
adc
or
xchg
and
lsl
mov
stos
jb
xchg
push
nop
xchg
popa
dec
cmpsl
sub
mov
sbb
jb
cmpsb
mov
outsl
jg
addr16
lret
out
out
inc
pop
inc
pushf
cmc
imul
jg
cmp
lret
ret
push
dec
adc
int3
ret
outsb
cmp
pushl
cmp
leave
pop
push
or
aam
mov
imul
xorb
jl
xor
mov
lcall
xchg
push
fcomi
lret
adc
cmp
sub
push
cmc
pop
shr
test
sbb
jo
scas
out
into
iret
iret
ljmp
inc
out
or
test
and
scas
je
xchg
sub
rol
xchg
sbbl
adc
ljmp
jno
lds
fmuls
int
xor
mov
or
pop
cmp
push
xchg
adc
jno
xchg
orl
dec
sbb
mov
pop
xchg
jns
sahf
arpl
xor
mov
xchg
popf
cmp
in
fsubrl
std
test
pop
xor
mov
jecxz
jbe
cltd
sub
imul
nop
lret
js
jmp
mov
insb
cmpsl
push
mov
in
mov
or
mov
jge
pop
leave
mov
aaa
stos
jmp
loopne
imul
push
rorl
cmc
lcall
in
cmp
mov
push
cmc
jmp
testb
xchg
push
push
inc
call
mov
fiadds
xchg
popa
lcall
hlt
cmc
in
std
pop
insl
pop
jae
dec
mov
das
xor
mov
icebp
mov
data16
hlt
pop
or
mov
test
pop
lcall
xor
sbb
rol
sub
outsl
jne
adc
loop
mov
pop
xchg
push
pop
pop
sub
add
and
ficomps
fwait
cmpsl
mov
bound
xchg
shrl
add
push
lret
call
pop
add
enter
mov
push
ljmp
sub
and
pop
sub
pop
jmp
int3
out
rcll
jecxz
popa
cmp
add
or
cmpl
in
pop
std
inc
outsl
sub
xor
popa
lods
stc
ret
es
mov
inc
jnp
jnp
jae
mov
add
push
cmpsb
lock
ret
or
sbb
rol
test
or
lds
push
dec
mov
fcmovbe
pop
repz
fs
pusha
mov
mov
rorl
iret
rorb
cmp
mov
add
lret
cmpsb
inc
iret
inc
pop
sbb
lods
pop
mov
int3
icebp
cmp
and
sub
shrb
bound
fsubl
push
dec
sbb
jmp
out
xchg
dec
orl
add
fiaddl
jae
subl
loope
inc
mov
rol
cltd
xchg
push
mov
out
in
fiadds
aaa
and
outsb
lret
and
mov
clc
mov
add
inc
test
lds
gs
inc
xchg
xchg
rolb
ljmp
ret
xorl
ret
jb
stos
ss
push
cmp
push
movsl
scas
lds
adc
dec
ret
dec
jge
sbb
neg
pop
icebp
call
dec
lret
adc
fidivrs
jmp
fwait
mov
repz
sub
arpl
push
dec
and
push
xchg
or
add
push
in
out
pop
popf
ficoms
inc
sahf
push
lret
cmpb
data16
adc
mov
xor
sbbl
and
push
inc
adc
testl
mov
insb
iret
clc
leave
inc
add
jl
add
leave
inc
dec
je
inc
add
in
push
fnstenv
mov
cltd
xlat
push
cltd
bound
dec
popl
mov
jg
and
push
je
icebp
jb
icebp
aas
inc
mov
inc
into
in
mov
pop
push
das
add
cmp
lods
sti
sub
push
loop
or
aam
mov
jmp
leave
ljmp
mov
test
popa
ret
add
sbb
xchg
push
sub
mov
adc
xchg
in
jge
mov
sub
jl
mov
daa
cli
add
jb
xchg
xchg
cwtl
lds
adc
cmp
stos
inc
je
push
stos
loopne
cmc
aad
ds
int
jge
fildll
add
inc
push
sub
aad
adc
into
mov
ret
hlt
frstor
sbb
jge
jmp
je
xor
add
loopne
test
jns
ss
pop
aas
cmc
loopne
loope
outsl
sarb
test
cmp
inc
hlt
fidivl
ja
scas
imul
js
mov
iret
xor
lods
and
xor
dec
lock
inc
insb
push
pop
mov
inc
out
movsl
pushf
loope
stc
xor
xor
jne
mov
push
sub
dec
mov
mov
cmpsl
pop
add
xchg
mov
push
jle
repz
cmp
sbb
adc
rcrl
in
sbb
mov
mov
iret
rorl
lods
sarl
imul
inc
test
test
sub
int
fbld
push
aad
mov
arpl
std
fptan
jp
unpckhps
push
mov
cltd
xor
sub
lods
mov
sar
dec
pop
lahf
mov
sti
adc
xchg
xchg
mov
mov
pushf
dec
rcll
add
mov
sahf
dec
int3
jp
xchg
lret
cs
icebp
popa
or
push
or
test
push
idivl
mov
pop
lods
aad
jne
negl
insb
movb
sub
cli
pop
xchg
nop
out
or
lret
sbb
out
loope
cmp
ss
and
ret
push
mov
xor
ljmp
mov
subl
or
arpl
xor
sahf
inc
filds
sar
je
gs
sbb
xlat
insl
sbb
aas
lcall
adc
and
and
sub
sbb
faddl
lret
std
or
into
dec
movsb
dec
jge
push
mov
sub
add
jo
rolb
jl
inc
mov
add
inc
xor
hlt
inc
xchg
cmp
ror
mov
xor
and
jb
out
sub
es
out
call
addb
movsl
xor
push
sahf
popw
add
out
fiadds
pop
and
inc
dec
lcall
lret
pop
ret
jae
jge
push
jbe
dec
inc
femms
add
mov
push
jmp
addr16
lock
xchg
and
jle
xor
mov
repz
inc
negb
mov
stos
jnp
lods
sub
mov
les
dec
ja
xchg
addr16
stc
mov
push
ds
or
xor
jno
pop
xchg
cmp
bnd
or
roll
imulb
push
pop
mov
sub
xchg
sbb
mov
mov
sub
xlat
rcrl
inc
push
fcoml
and
mov
shlb
hlt
clc
lods
rcll
popf
and
cmp
xor
in
ljmp
sub
adc
or
outsb
mov
adc
cmp
out
aad
mov
jmp
pop
stos
das
out
push
sbb
fbld
sbb
sbb
mov
shlb
lcall
mov
pop
add
add
inc
push
rclb
pop
out
dec
fnsave
push
dec
dec
mov
xor
jle
and
inc
out
fwait
sub
je
push
jp
jp
fnstenv
push
add
test
cmp
ret
adc
sti
pop
mov
in
iret
testb
hlt
nop
pop
cmpsl
inc
fcmovnu
lods
mov
in
cmp
mov
cmp
loope
mov
stos
pusha
cli
subb
dec
stos
int3
decl
push
aaa
mov
fsubrl
movsl
xorl
xchg
clc
fcmovnbe
mov
xlat
adc
xlat
cmp
push
in
lret
add
dec
popf
sub
cmpsl
andl
loope
xchg
test
into
fs
sbb
daa
pop
jns
enter
insb
adc
dec
push
dec
popf
rcrl
and
xchg
xchg
fidivrl
inc
xchg
movsb
ret
mov
gs
jbe
outsb
imul
adc
ficoms
dec
dec
adc
add
or
pop
mov
enter
push
fnstcw
xchg
rolb
sub
dec
imul
sti
imul
cmp
adc
imul
cmpsl
shlb
mov
imul
adc
shrd
ljmp
lods
aaa
or
jp
push
xor
jle
pop
out
imul
pop
cld
fnstenv
push
jle
pop
cmc
je
dec
xor
fistpll
fdivl
and
insl
arpl
dec
lret
mov
hlt
mov
testb
mov
inc
and
push
out
popa
rcr
push
sarl
cmpsb
popf
pop
rcrb
in
mov
push
ficomps
mov
push
push
addb
fildll
xlat
outsl
dec
sub
push
xor
js
jge
sbb
jecxz
mov
outsb
out
fiaddl
push
jbe
cmp
push
cmp
lea
repz
aaa
shrl
das
add
fs
dec
divb
xchg
lods
dec
jno
ljmp
lods
jl
pop
arpl
jb
cmp
mov
pop
pusha
cmp
and
mov
hlt
stos
dec
push
inc
clc
stc
xchg
sbbl
or
cmp
fstpt
fnstsw
nop
jp
subl
inc
push
xchg
scas
fildl
pop
adcl
dec
shrl
popf
push
das
push
punpcklwd
movsb
push
adc
data16
hlt
mov
test
push
dec
fcom
jmp
dec
mov
aas
mov
add
mov
push
sub
sbb
cmp
and
inc
push
inc
sbb
in
xchg
cmc
jb
aaa
push
mov
jae
inc
inc
mov
jae
stc
cli
sbb
xchg
mov
popf
mov
sbb
xor
int3
testb
cmp
or
xor
stc
jbe
jmp
jnp
xor
shll
mov
mov
aas
je
cmp
jne
in
scas
inc
jmp
inc
stos
cmp
pop
sub
fs
aas
out
and
hlt
jge
sbbl
jne
out
popf
sbb
test
scas
xchg
cmpl
mov
or
mov
pop
into
pop
daa
aad
adc
lods
fidivl
ja
cltd
jne
das
adc
ljmp
mov
mov
or
bound
mov
mov
pushf
hlt
jl
jle
xchg
add
addb
in
mov
mov
jb
cmp
mov
stos
sarb
lods
fs
inc
or
mov
add
scas
gs
xchg
aad
cmpsl
mov
pop
pop
add
ret
jp
xchg
sbb
pop
add
aaa
xchg
and
int
lods
adc
pop
cld
mov
std
jmp
pop
lcall
pop
xlat
mov
lods
push
cltd
jae
arpl
nop
lds
pop
mov
sub
lods
xor
cs
mov
cwtl
push
cmp
xor
ss
push
fwait
adc
dec
ja
lahf
add
sti
in
aaa
mov
push
dec
add
dec
xchg
movsb
inc
jle
mov
push
jge
aaa
mov
fdivrs
ds
push
rcr
pusha
xchg
sbb
ds
jns
mov
xchg
or
fdiv
push
jle
in
insl
sti
pop
cmp
adc
push
std
dec
cmpsl
sti
dec
stc
bound
or
mov
jnp
sub
mov
cmpsl
lods
pop
or
sub
sub
out
or
mov
rcrb
ja
sbb
repz
stos
shlb
cwtl
sbb
push
aaa
inc
mov
cmpsb
repnz
cmp
jle
mov
xchg
xchg
xchg
cmpsb
inc
lahf
shlb
jmp
jmp
push
adc
out
xchg
mov
adc
stos
stc
ljmp
cmp
inc
push
push
or
push
inc
sbb
fidivrs
dec
addl
push
das
cmpsb
adc
sbb
jg
sbb
rcll
inc
mov
inc
adc
push
stos
pusha
test
inc
sbb
push
add
xchg
pop
add
sub
mov
ljmp
xor
inc
test
cmp
das
test
std
les
mov
pop
pop
fnsave
mov
jp
call
push
iret
and
addr16
mov
mov
mov
cmp
scas
enter
popf
sub
test
sub
addr16
jle
cwtl
jbe
popa
inc
xchg
xchg
cltd
dec
adc
mov
cmp
cmp
in
outsb
arpl
mov
push
and
and
out
and
mov
fnstenv
mov
push
add
push
or
lock
xor
dec
xor
adc
adc
or
and
mov
test
mov
test
movsl
mov
lret
mov
jo
and
pop
mov
mov
vpsubw
mov
ds
mov
add
mov
add
mov
mov
andb
clc
imulb
or
mov
sbb
xchg
out
mov
jle
stos
icebp
sub
movsb
mov
jo
movsl
in
pop
mov
cmp
sti
movb
jns
pop
dec
mov
gs
mov
xor
pusha
xor
fstps
js
cmc
mov
test
repz
inc
mov
mov
js
dec
js
fs
cs
cmp
mov
arpl
xor
or
idiv
push
push
xchg
xchg
xchg
or
pop
popa
std
lahf
mov
imul
dec
movsl
push
call
xchg
add
ljmp
lds
mov
inc
dec
aad
lcall
in
or
data16
test
push
mov
mov
xchg
adc
rcrb
pop
mov
lea
rcrb
jb
mov
sbbl
loopne
push
fsubr
add
mov
cwtl
bnd
sub
fldt
jnp
lret
jp
mov
pushf
jl
inc
fs
mov
lret
lods
data16
movsb
mov
sarl
and
adc
push
push
iret
test
push
sbb
fldt
and
jae
into
cmpsl
and
mov
ret
jbe
and
xchg
and
mov
pop
ret
dec
push
xchg
out
fimuls
ficoml
pop
pushf
push
pop
test
or
mov
jecxz
mov
lret
cmp
adc
lds
or
pushf
lods
adc
xor
inc
jmp
popf
pop
cli
incl
aas
sti
testb
mov
stos
mov
add
push
jecxz
les
sar
adc
cld
and
push
mov
fwait
and
dec
or
jb
cli
add
ret
cltd
add
je
mov
push
pop
push
outsl
ss
ret
lret
xchg
call
arpl
dec
dec
mov
cwtl
mov
rol
lret
dec
xchg
clc
pop
push
dec
jle
mov
in
sbb
xchg
dec
mov
add
aas
inc
dec
sbb
mov
xchg
jmp
int3
lret
mov
xor
xchg
sbb
loope
popa
dec
insb
stc
push
xlat
add
call
jo
scas
cmp
xor
das
frstor
fisubrs
loopne
or
add
adc
jp
fists
out
push
jb
push
xchg
adc
inc
ret
mov
mov
sbb
cld
mov
lcall
testb
sbb
jp
or
shrl
out
jle
and
clc
leave
shll
or
ss
sub
dec
inc
mov
fsubl
xchg
and
lea
add
xor
cmpsb
add
ret
repnz
das
clc
and
pop
and
jl
cli
cmpsl
or
aam
test
xchg
add
and
xchg
stos
scas
mov
stc
insl
or
mov
daa
mov
pop
scas
pop
shl
out
lods
and
popf
or
mov
sbbb
popf
xchg
mov
sbb
add
je
jnp
call
lea
imul
outsb
add
out
bound
int3
adc
orb
sbb
movsb
repz
lcall
lcall
dec
mov
adc
xchg
stc
mov
xchg
jno
fs
pop
in
fdecstp
aam
int3
sbb
mov
shr
out
mov
daa
xorl
ret
pusha
movsl
clc
shll
lahf
imul
stc
shlb
rolb
or
sbb
add
or
sub
adc
enter
sub
push
push
sbbl
dec
xor
mov
in
and
ljmp
add
rcrb
mov
push
frstor
imul
shll
fdivrl
adcl
fidivrl
push
push
mov
fdivr
adc
in
shll
cli
int
push
mov
sbb
xchg
stos
daa
enter
in
jmp
clc
insl
cmp
and
pop
add
sub
into
orl
xchg
xor
cmpsb
lret
ss
icebp
idivl
jns
repz
out
jp
into
ret
out
cmp
shld
dec
mov
popf
loop
shll
js
les
inc
dec
xchg
ficomps
xchg
bts
hlt
jmp
mov
dec
shll
insb
shll
std
pop
decl
dec
loop
add
jns
push
dec
addb
mov
mov
lcall
int3
dec
and
sub
das
rolb
jbe
mov
dec
add
lods
mov
mov
mov
jnp
mov
cltd
int3
cmp
sbb
or
sbb
mov
push
hlt
mov
sbb
push
enter
mov
lahf
and
lods
fldenv
arpl
call
icebp
lds
dec
and
adc
scas
lcall
xor
mov
iret
jo
push
inc
cmpb
arpl
outsb
xchg
push
pop
js
pushf
lea
adc
leave
mov
aas
cli
push
xor
in
pop
nop
aas
push
data16
jle
pop
fidivl
xchg
pop
mov
shr
push
mov
ja
jne
test
rcl
xchg
and
and
fcmovbe
dec
jae
movsl
sbb
push
sub
aad
xor
mov
xchg
add
push
clc
mov
cmpxchg
stos
outsl
sub
imul
inc
cmp
je
xor
sti
fstl
mov
popf
add
cmp
sti
sti
sbb
jo
loope
cwtl
bound
mov
fbld
mov
inc
aad
inc
lods
push
cs
and
inc
test
scas
cld
test
xchg
xchg
leave
loope
cmp
adcl
pop
jb
sub
mov
out
lcall
sbb
jge
push
and
in
cmpsl
mov
stc
jo
jl
adc
cwtl
inc
lock
hlt
int
shlb
aam
inc
or
sbbl
cmp
jp
adc
sbb
pop
xlat
mov
paddb
inc
push
sbb
or
or
push
fwait
daa
rorl
jno
dec
or
fmull
cmpsl
das
pop
aam
scas
je
mov
mov
bswap
rcrl
and
push
sub
xchg
les
push
push
outsl
repz
ss
ljmp
pop
pop
jge
or
mov
xor
dec
adc
inc
or
mov
or
mov
rorb
pop
add
cmp
inc
or
mov
or
mov
rorb
pop
sbb
cmp
inc
or
mov
or
mov
leave
xor
les
pop
in
push
aas
pusha
sub
nop
add
sbb
int
lret
mov
jb
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
push
jb
bound
jp
insl
cli
adc
and
push
loop
xchg
sub
or
call
bound
xor
mov
cmp
or
fdivs
bound
xor
ret
sub
in
cmp
addr16
call
xor
aad
loope
call
imul
cmpsl
sbb
push
mov
pusha
lods
add
ret
mov
adc
cmp
outsb
adc
lock
jmp
push
mov
jb
into
js
cmp
xchg
dec
sub
inc
call
bound
mov
scas
scas
pop
or
jnp
or
das
add
neg
popf
push
adc
mov
or
inc
jle
dec
imull
add
call
fwait
pop
addr16
pusha
inc
dec
ret
mov
jecxz
xchg
inc
sbb
call
bound
xor
ret
dec
loop
xchg
sub
mov
xchg
sti
jle
add
jl
jb
mov
mov
lcall
jne
jl
cmpsl
push
stos
inc
lods
jb
adc
pop
int3
cbtw
inc
lock
stos
add
lea
pop
jmp
mov
adc
adc
and
push
loop
xchg
sub
clc
push
call
bound
xor
ret
dec
loop
xchg
sub
clc
push
in
or
lcall
mov
jmp
sub
clc
int
xor
push
mov
cli
cwtl
inc
cmc
stos
cmpsl
fcompl
gs
sti
mov
push
push
xor
inc
sbb
sbb
popf
dec
scas
jp
fld
mov
hlt
cmp
and
xchg
adc
add
xor
cmp
fprem
push
aad
mov
or
add
sub
jnp,pt
mov
mov
mov
sub
test
sbb
aam
mov
in
insl
in
inc
test
inc
enter
hlt
jnp
fisubs
pop
insb
sbb
call
sub
xchg
sub
fmull
and
in
pop
int3
test
call
jge
mov
out
xor
jnp
xchg
xchg
lahf
pop
dec
xor
and
xchg
pop
lret
pop
scas
dec
cld
dec
push
and
stc
push
sahf
push
jg
sbb
enter
pop
sub
int
mov
clc
dec
push
sbb
dec
add
movsb
in
push
mov
xchg
iret
sub
sbb
lahf
mov
out
inc
cmpl
in
cmc
jne
sti
call
adc
nop
push
xchg
or
leave
mov
dec
in
in
pop
les
mov
sbb
mov
fdivl
call
lods
sbb
add
daa
addr16
aaa
and
pop
out
movsl
cmpsl
or
cmpsb
mov
call
xchg
aad
inc
test
jb
mov
scas
movb
sahf
call
xchg
mov
mov
test
lret
sbb
das
repnz
mov
jne
aas
mov
mov
push
cmpsb
and
dec
mov
xchg
sub
fcoml
and
nop
arpl
ret
push
test
pop
rcr
inc
xlat
inc
arpl
movsl
es
popa
jle
repz
mov
les
lock
adc
push
xor
pop
sub
aad
pop
xor
add
dec
sub
mov
lcall
pop
iret
cwtl
arpl
mov
int3
or
mov
mov
sbb
jno
xor
pushf
lahf
inc
push
mov
insl
or
jo
add
scas
divl
scas
mov
push
aad
sub
pusha
lock
and
mull
or
cmpl
loopne
sub
addr16
mov
out
mov
push
mov
cmp
xchg
sub
add
jne
push
es
jp
scas
inc
fidivrs
mov
pop
std
jp
bound
int
scas
dec
bnd
fsubrp
movsl
add
push
mov
and
xor
xor
xor
and
arpl
pop
es
cmc
mov
cld
mov
clc
dec
jo
mov
test
arpl
jecxz
shrl
xor
jge
and
in
ret
jnp
push
dec
inc
fidivl
cmp
in
popf
sahf
push
add
pop
mov
call
xchg
sbb
mov
jle
loopne
dec
shlb
jmp
shll
jmp
push
fisubrs
inc
cmp
xchg
and
andl
or
cmp
mov
and
cwtl
sbb
fistpll
iret
cmp
mov
repnz
mov
jg
aam
lret
push
jb
test
add
fsubl
lret
add
pop
pop
xchg
popw
and
mov
loopne
cmp
scas
inc
pop
add
or
cmp
jnp
dec
mov
mov
cld
in
add
pop
add
pop
pop
cmp
xchg
fsubrl
mov
and
in
fs
pop
fs
xor
mov
xchg
std
inc
pop
mov
aas
insb
pop
ds
cmp
mov
mov
je
inc
test
loope
aad
ja
mov
cmp
inc
or
mov
ss
jne
fistl
mov
rolb
mov
inc
or
gs
add
sub
jge
out
push
dec
and
mov
dec
jb
lcall
insl
push
lcall
pop
ljmp
xlat
cmpsb
das
or
sbb
das
sbb
rol
jb
pop
inc
push
or
sub
out
gs
fildll
fildll
lea
fistps
and
loop
lret
test
sti
lret
mov
xor
clc
loopne
jmp
std
pop
mov
es
std
and
sti
data16
add
and
mov
mov
add
add
cltd
ja
inc
loop
ljmp
jo
cmp
xchg
push
lock
test
cld
clc
adc
cmpsl
iret
mov
adc
imull
leave
xor
test
or
cmpsb
push
inc
lods
xchg
iret
mov
test
xor
ret
sub
lds
cmp
cmc
mov
and
shlb
xor
ret
push
movsb
loope
imul
mov
inc
lods
cmp
ret
cmc
shl
cmp
stos
shlb
pop
xchg
incb
out
inc
fwait
stc
andl
push
inc
and
imul
cmc
mov
iret
pop
pop
mov
ficoml
lods
ljmp
sbb
jl
dec
loope
mov
jmp
repnz
mov
cmp
loop
inc
jo
das
sub
adc
inc
jl
stos
pop
add
cmp
xor
or
call
mov
dec
mov
sbbl
mov
and
adc
pusha
stos
imul
popa
and
or
and
repnz
add
std
xor
sbb
jge
xchg
cmp
jge
xchg
repz
jmp
out
js
and
xor
ret
shlb
es
adc
add
dec
pop
in
or
insb
ljmp
or
cs
js
out
add
add
or
push
les
es
xor
sub
adc
xor
loop
repz
pop
popa
jae
roll
test
jp
dec
leave
sub
pop
dec
adc
push
rcrb
fbld
cld
xchg
inc
xor
pop
mov
mov
repnz
adc
cmc
aaa
push
cmpsl
pop
inc
xlat
cmp
leave
adc
jb
add
mov
xchg
xor
insb
xor
adc
mov
inc
mov
insb
xor
pop
dec
push
jle
dec
popa
jmp
mov
cmp
sub
adc
outsb
sarl
pop
test
mov
inc
in
mov
fcmovnb
aad
ds
add
sbb
adc
inc
push
sbb
scas
sub
sahf
jecxz
dec
adc
inc
les
inc
mov
cmp
rcrb
inc
sbb
or
add
leave
pop
push
sarb
or
xor
and
jmp
and
icebp
dec
pop
mov
add
iret
inc
bound
arpl
sti
cmpsb
xor
aaa
and
mov
test
xor
push
or
divb
xchg
dec
sub
or
inc
lods
inc
inc
iret
mov
push
das
aad
mov
xlat
popf
sub
mov
mov
dec
mov
bound
mov
sbb
rcrb
mov
fadd
fiaddl
adc
shll
xchg
sbbb
sbb
mov
lahf
xorl
push
sub
add
sub
jmp
push
push
sar
xchg
dec
out
mov
cmpsb
fsubl
out
mov
hlt
fdivrl
out
mov
push
divb
jmp
push
pop
push
daa
inc
cmpl
ret
aad
leave
xchg
mov
daa
inc
ret
fmull
aad
test
hlt
lret
ret
mov
xor
cmp
lea
fldl2e
pop
dec
xor
push
cmpsb
insb
fimull
jno
mov
jbe
xor
xor
add
xlat
jmp
xchg
call
insl
nopl
and
into
je
sub
lahf
sbb
and
mov
xchg
jge
popa
mov
sub
jbe
je
cwtl
gs
jmp
dec
xlat
xchg
push
mov
inc
cmc
clc
ds
jg
lock
scas
in
cmpl
push
sbb
hlt
ret
sbb
movsl
nop
cmp
fimuls
push
ret
das
add
js
jl
aaa
ss
ror
sub
push
push
jecxz
or
inc
imul
mov
xchg
adc
inc
sbb
hlt
mov
out
js
xor
sbb
les
mov
in
data16
fstp
into
stos
pusha
leave
and
pop
imul
fisubrl
or
aad
xchg
or
lods
add
lret
repz
push
xor
jne
push
mov
movsl
pop
cmp
int3
mov
out
gs
jns
adcl
lret
lods
pop
cltd
and
xor
mov
jne
clc
add
mov
pop
and
pusha
loop
inc
aaa
fwait
call
push
sbb
jns
sbb
cmc
fwait
dec
mov
push
mov
movsb
pop
js
je
in
ret
push
js
xchg
push
cmc
sti
push
lods
xchg
mov
sahf
outsb
in
dec
test
cltd
icebp
xor
xor
mov
jnp
rorb
add
scas
mov
or
in
inc
and
data16
insl
or
pusha
push
mov
cmpsb
dec
or
adc
leave
mov
stos
jo
inc
bound
movsb
test
add
stc
cld
add
sub
roll
cmp
cs
jne
loopne
mov
jl
dec
add
cli
push
test
mov
inc
loop
mov
fmulp
cld
loopne
jns
cmp
aam
mov
mov
mov
push
and
mov
imul
ret
and
inc
loopne
int3
lods
std
das
jge
mov
xchg
mov
xchg
div
jge
push
and
xchg
and
adc
and
cli
mov
and
es
mov
pop
add
xchg
push
xor
xlat
arpl
adc
pop
push
jmp
in
sbb
call
mov
aas
adc
inc
mov
dec
mov
cmp
ret
ja
xbegin
cwtl
lret
gs
sti
scas
cmp
dec
mov
sub
enter
std
xchg
fbstp
fs
scas
shl
out
in
outsb
test
xchg
out
and
popa
mov
and
xchg
into
jge
mov
aam
scas
pop
fmuls
mov
xchg
pop
push
mov
inc
xchg
out
popa
clc
sub
or
jg
mov
xchg
inc
dec
out
lahf
scas
and
stos
cmp
xchg
jb
add
mull
or
outsl
jl
into
in
sub
xchg
adc
adc
mov
xchg
sti
scas
fbld
ja
das
xchg
ljmp
inc
and
leave
xchg
test
in
xchg
repnz
aam
fldcw
add
xchg
cmpsb
mov
mov
repz
mov
mov
jne
stos
rcll
repz
mov
pop
sti
push
push
mov
andl
xor
andb
xchg
ljmp
stos
int3
mov
cs
imul
or
arpl
push
in
adc
sub
sbb
stos
and
aam
or
fbstp
pop
mov
out
dec
stc
sub
hlt
aam
fstps
mov
and
das
mov
xchg
loopne
das
sbb
lock
push
xor
add
push
and
xchg
lods
mov
and
push
xor
movsb
daa
neg
jno
inc
sub
test
in
inc
xor
inc
and
sub
fisubrs
dec
dec
push
inc
cld
xorb
push
sahf
or
ljmp
push
out
call
xchg
addr16
in
dec
sub
and
or
in
jp
xchg
into
xchg
mov
mov
mov
xchg
repnz
outsb
mov
cmova
ja
enter
aam
scas
inc
in
aam
jl
into
ret
insl
aas
shll
push
push
lea
or
icebp
mov
jo
movsl
rcrb
or
pop
cmp
les
mov
ret
xor
scas
inc
mov
test
xchg
sub
and
inc
sbb
inc
adc
mov
outsl
notl
xchg
in
pop
or
push
lds
adc
and
shr
mov
add
les
inc
adc
cmp
push
lret
inc
push
add
sarl
mov
bound
jae
pop
lahf
icebp
shlb
fisubrl
leave
dec
outsl
pop
mov
rclb
mov
fucom
ja
js
mov
fs
sub
je
dec
cld
mov
ljmp
es
fcomip
int3
push
mov
adc
sbb
jge
and
adc
sarb
jl
sbb
ljmp
add
ds
mov
cmc
ficoms
test
out
pop
or
add
clc
jb
inc
pop
dec
or
pop
xor
int3
daa
xor
mov
jae
rcll
jmp
dec
pop
xchg
in
xor
xorl
cmp
jo
test
fstpt
cmc
adc
lock
push
jae,pn
and
loopne
leave
dec
and
mov
jp
ljmp
dec
in
lahf
and
sar
and
cld
mov
xchg
out
fimull
cs
sub
cmc
and
add
stos
fwait
fs
adc
cmp
pop
jecxz
or
mov
mov
lods
xchg
push
je
sbb
cli
leave
in
bound
jge
imul
fcmovbe
jbe
movsb
dec
or
jecxz
ret
dec
out
xchg
lcall
pop
adc
lods
mov
subl
cltd
roll
lret
in
scas
sub
imul
mov
jg
push
and
push
fst
xlat
test
xor
cmp
loopne
xchg
or
jno
dec
ds
aas
cmpsb
icebp
jo
xor
addl
je
xchg
add
repz
sbbl
inc
fadds
shrb
add
cmp
adc
arpl
jge
mov
je
add
jmp
push
jne
mov
out
cmc
shlb
jmp
test
ret
in
jae
jbe
dec
adc
push
jecxz
in
mov
mov
fistps
pop
jl
js
dec
mov
fisubl
lcall
add
test
sti
jl
test
arpl
pop
dec
popf
pop
pop
in
scas
jmp
mov
mov
and
cmp
pop
test
fistl
sub
les
fsubrs
fistpl
cli
adc
lds
pop
or
sti
cltd
lcall
sub
push
out
ja
mov
bsr
sub
inc
fwait
ror
xor
cmc
dec
insl
lret
adc
and
or
sbb
leave
and
xchg
mov
sarl
icebp
jne
movsb
cmp
ficoml
push
ficompl
ljmp
aaa
mov
lea
imul
in
dec
push
inc
mov
cs
sbb
lahf
or
pushf
push
pop
push
sahf
add
lock
flds
xchg
sub
mov
push
out
sub
xchg
xlat
mov
sbb
xchg
inc
and
push
sbb
mov
loope
cli
dec
mov
je
int3
pop
clc
jmp
jle
rcr
les
xchg
shr
aaa
cs
mov
stc
ret
adc
or
pop
sub
push
enter
arpl
lret
sbb
mov
je
add
dec
jmp
jbe
xchg
icebp
dec
sbb
cmp
xlat
cmp
testb
in
jle
lock
mov
clc
and
xchg
push
int
lcall
lea
inc
ret
movsb
xor
outsb
dec
push
pop
mov
nop
into
add
jbe
mov
sbb
adc
jno
es
adc
movsb
push
pushf
js
popa
dec
cltd
sbb
and
xor
test
xchg
jbe
add
sbb
dec
jnp
push
mov
lcall
push
xchg
cmc
iret
daa
mov
popf
cltd
loope
pop
mov
test
jno
mov
xor
nop
cmp
das
fistpl
inc
icebp
xchg
jno
sub
aaa
inc
mov
jg
dec
jne
push
lds
icebp
jle
and
punpcklwd
js
movsl
dec
out
pop
cmpsl
insl
ljmp
stc
aas
pop
loopne
push
shrl
add
ret
scas
nop
imul
in
sub
jns
push
imul
imul
mov
xor
push
divb
pop
fcomip
inc
lods
push
cmp
fsubr
or
sbb
xchg
fwait
mov
mulb
aaa
push
dec
jle
mov
stos
xor
decb
pop
pop
test
loope
daa
pop
fs
push
push
data16
ror
movsb
jne
xchg
leave
leave
addr16
aaa
or
mov
jle
lahf
int
mov
js
shl
scas
decl
mov
adc
push
mov
inc
enter
out
mov
js
fsubl
mov
xchg
or
mov
ja
ljmp
adc
fstps
mov
mov
fldenv
repz
jge
jmp
notb
lea
push
gs
xchg
jne
pop
movl
scas
mov
mov
adc
out
jnp
fcomps
sbb
jne
shl
call
mov
mov
in
push
add
xor
xlat
nop
mov
mov
int3
jnp
xor
mov
push
xchg
je
mov
jmp
pop
xchg
inc
adc
jae
xchg
cmpsb
jge
xchg
jp
dec
in
cmp
aaa
push
imul
stos
movsl
arpl
push
out
incb
stos
xor
es
add
pop
lds
pop
jb
imul
push
cmp
fcompl
cmp
pop
and
ja
inc
push
inc
cmp
and
mov
scas
dec
jl
pop
mov
jnp
jmp
push
outsl
sub
pop
sar
cwtl
push
or
adcb
or
test
nop
aaa
shll
add
sbbb
icebp
sub
into
fwait
push
sub
jbe
mov
pop
mov
add
inc
repnz
idivb
cmpl
sbb
mov
in
fistps
addr16
cmp
xor
imul
inc
mov
lahf
or
dec
dec
popa
mov
testl
movsl
mov
out
loope
xor
push
jns
test
ftst
cld
popa
jge
shrl
daa
dec
mov
aam
dec
xlat
add
loopne
sahf
roll
dec
adc
jge
cmpsb
dec
cltd
sbb
jge
mov
in
mov
test
iret
jp
stc
lods
ljmp
add
inc
xchg
je
jbe
into
jge
repnz
push
cld
mov
lahf
lods
fisubl
cs
sbb
mov
cmp
cltd
scas
push
xor
outsl
out
pop
aam
inc
loope
call
lcall
test
sbb
sbb
add
push
inc
and
add
scas
iret
lods
xor
shrl
in
ja
and
inc
xor
or
shlb
xor
xor
clc
xor
push
pop
cmp
sti
mov
leave
sarb
insl
ljmp
in
xchg
test
cmp
cmpb
je
stos
and
dec
pop
ljmp
dec
lcall
cmp
scas
jmp
pop
mov
sub
into
xor
aaa
lods
sub
outsb
subb
cmp
lods
sbb
movsb
popa
outsl
and
sub
in
sub
scas
or
pop
call
repnz
pop
ret
stos
subl
pop
and
leave
jmp
repz
push
loop
ffreep
jle
test
adcb
mov
jae
add
lock
popa
imul
jns
xor
out
cmp
in
setne
or
dec
repnz
jo
rcrl
jo
std
nop
dec
adc
pop
rclb
add
and
out
sub
sti
je
iret
jp
sbb
sub
lds
je
xchg
dec
cmpsb
rorb
sbb
insb
rcrl
bound
mov
fistpll
ret
pop
mov
testl
lret
jge
mov
jbe
inc
cmpsl
loopne
sub
hlt
les
push
pop
out
or
inc
push
cmpb
cmp
xchg
jecxz
idivb
dec
rolb
aaa
or
das
stos
jb
push
jle
push
outsl
cltd
inc
loopne
sbb
add
test
mov
out
xchg
mov
push
icebp
adc
or
fs
mov
pop
mov
sbb
ds
jo
repz
and
adc
mov
xor
loopne
nop
repz
leave
pop
sub
mov
stos
jns
movsb
data16
push
mov
cmp
mov
loopne
shrl
jb
bound
xor
ret
dec
loop
xchg
sub
clc
push
call
bound
xor
ret
dec
loop
xchg
sub
clc
push
call
bound
xor
ret
dec
loop
xchg
sub
stc
push
jmp
bound
xor
push
dec
sbb
pop
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
loop
repnz
and
xor
divl
jb,pt
inc
mov
xor
add
adc
loop
repnz
and
xor
pusha
xchg
adc
mov
xor
add
adc
loop
repnz
and
xor
pusha
xchg
jo
xorb
lds
xchg
dec
test
dec
repnz
mov
mov
mov
mov
sti
add
test
pop
push
xor
add
aaa
dec
pop
mov
mov
fs
xchg
nop
pop
outsl
iret
pop
xlat
movsl
fst
daa
mov
pop
in
mov
or
pop
idiv
or
jl
bound
cmp
aas
mov
cmp
repz
mov
push
bound
data16
pop
xor
xchg
adc
sbb
fucomip
cmp
xorl
jo
jg
test
loop
pop
adc
sahf
xor
pop
fstpt
sbb
xor
pop
dec
push
shll
addb
jp
mov
and
xor
pusha
xchg
jo
xorb
mov
xor
add
adc
cmpsl
popa
mov
into
pop
sti
and
add
jbe
and
rolb
xchg
inc
xchg
inc
xchg
loope
cmpb
push
in
ficoms
pop
in
loop
pop
loop
movsl
inc
jo
adc
inc
rorl
jb
push
andb
bound
push
mov
shlb
add
adc
loop
repnz
and
xor
pusha
xchg
jo
xorb
mov
xor
add
adc
loop
push
cmp
div
js
dec
push
pop
xchg
sbbl
mov
loopne
inc
cmpsl
addl
flds
outsb
out
subl
aaa
loop
pop
repnz
mov
push
cs
pop
inc
push
pop
cld
fidivrs
cmp
cltd
adc
lea
gs
das
int
add
mov
loope
cmpsl
jecxz
inc
shrl
jb
inc
mov
shrl
dec
xor
call
jg
mov
jmp
and
pop
sbbl
push
fists
sbb
mov
mov
jo
pop
push
adc
popa
shll
cmp
jne
xor
pop
pop
pop
es
mov
mov
stc
mov
scas
subb
es
clc
sarl
ljmp
in
aam
fisttpll
lcall
cwtl
cmp
mov
cld
xlat
and
lds
cmp
cmpsl
jno
jp
mov
aaa
jle
adc
fsub
jbe
push
jmp
pop
lds
call
and
loop
ljmp
dec
sub
cmp
pop
jecxz
dec
inc
into
adc
fistps
ret
pop
jp
dec
mov
xchg
xlat
fbstp
xchg
add
sbb
idivb
mov
cmpb
dec
pop
pop
dec
mov
pop
es
or
lret
sbb
test
and
hlt
dec
mov
repnz
xor
cmp
addb
in
mov
sbb
push
pop
movsl
cmpsb
dec
lods
dec
ror
lcall
pusha
jecxz
in
inc
scas
jae
in
add
clc
insl
hlt
jbe
mov
pop
insl
mov
ret
into
popf
stos
dec
mov
fidivl
lods
cmp
cmp
jae
test
xor
dec
jno
shr
arpl
ljmp
push
imul
and
fnstsw
adc
xor
inc
in
sub
mov
push
mov
xchg
push
mov
das
sub
aam
scas
cmp
push
xchg
lds
mov
or
aas
mov
aaa
jno
dec
push
loopne
stc
mov
xor
inc
mov
inc
mov
inc
rcrb
loopne
mov
fcmove
cltd
clc
sbb
pusha
sbbl
ds
int
lret
jp
pop
pusha
push
xchg
or
xchg
mov
pop
imull
inc
movsl
xor
xchg
xchg
dec
hlt
mov
jns
jmp
leave
push
add
mov
inc
dec
cmp
imul
mov
bound
loop
fs
adc
mov
popf
push
das
insl
mov
and
scas
mov
imul
enter
stc
mov
cwtl
jno
push
mov
lret
hlt
adc
jne
adc
out
sbb
pop
jno
mov
test
mov
out
data16
in
clc
enter
mov
sub
iret
nop
inc
xor
pop
outsb
mov
roll
bound
mov
lcall
push
clc
pop
and
xor
int
jge
mov
lret
je
lahf
inc
data16
lret
mov
ret
push
push
ret
cmp
and
stos
mov
jg
mov
adc
and
push
jo
push
dec
shlb
out
xor
sbb
push
lods
test
mov
inc
sbb
or
mov
push
addr16
out
test
test
shr
jge
inc
sbb
jp
lds
aam
insb
mov
scas
repz
xchg
mov
adc
ret
mov
daa
je
aam
loope
movsl
adc
jmp
out
imul
and
push
cmp
jge
out
jne
mov
jbe
aam
xchg
sahf
xchg
arpl
ret
pushf
xchg
enter
dec
gs
mov
xchg
incl
jp
sahf
sbb
cmp
clc
in
cmc
pop
sub
cmp
mov
repnz
movb
xorb
dec
psubusb
xor
xor
mov
xor
add
xchg
fmull
pop
cmpsl
jp
adc
push
cmpsl
popa
lret
popa
roll
mov
or
fs
xor
push
sbb
lock
lret
lea
or
test
pop
loop
push
jmp
out
loope
add
push
das
pushf
adc
sub
push
pop
xlat
xor
mov
dec
jae
in
mov
loop
mov
dec
mov
js
xchg
cmp
add
mov
mov
and
adc
imul
sub
lds
mov
inc
insl
cld
sub
out
sbb
sti
test
ret
int3
pop
jns
sub
jle
icebp
add
sbb
push
or
int
push
movsb
fisubs
cmp
pop
sahf
decb
cwtl
lcall
xchg
dec
xchg
pop
cltd
iret
cmp
sub
stos
cmp
mov
das
rolb
repnz
mov
jg
pushf
lret
xchg
adc
in
mov
ret
sbb
xchg
push
adc
cmp
call
sub
lods
cmp
les
ret
mov
icebp
les
mov
push
popa
mov
inc
fstl
jo
out
test
fcmovu
lcall
push
inc
lods
push
cmpsl
mov
cmpsl
add
pop
adc
aaa
push
int
outsl
das
mov
inc
clc
push
jge
xor
out
mov
movsb
and
mov
cmpsb
ljmp
cmc
orb
mov
cmpps
fldl
jp
lcall
xchg
insl
sub
fidivrs
pop
lock
xchg
add
mulb
inc
ret
jmp
aaa
jecxz
jmp
sbb
in
jmp
test
jne
mov
sbb
mov
outsl
mov
lahf
dec
sbb
xor
jle
jb
xchg
outsl
mov
jg
push
gs
jg
dec
sbb
arpl
loopne
adc
enter
in
pop
or
sub
loop
push
cltd
jns
push
lahf
push
xor
cmp
insb
mov
and
xchg
out
mov
aad
mov
and
xor
mov
outsl
fsubrs
jns
test
and
popa
ror
push
in
inc
test
pop
sbb
push
and
and
cwtl
xchg
int
fimuls
sub
out
or
or
jns
mov
js
xchg
cmpsb
imul
sbb
lds
mov
sbbb
outsb
mov
clc
jns
lret
jge
jbe
test
std
mov
adc
fwait
sub
xchg
cltd
dec
cmp
movsb
inc
stos
cmp
push
je
xlat
leave
fiaddl
xchg
jp
sbb
cmp
or
lods
sti
pop
ljmp
mov
lds
fdivs
mov
cmp
xchg
mov
shll
add
dec
add
lcall
sbb
daa
dec
data16
enter
in
call
mov
adc
jnp
sub
mov
lcall
push
sbb
xor
or
decl
add
sbb
cmc
ljmp
mov
push
hlt
fistps
js
sub
pop
mov
jg
mov
out
xor
xchg
jle
and
cltd
push
push
cmc
and
popl
sahf
pop
cmp
cwtl
mov
pushf
push
cmpsb
addl
negb
out
pop
pop
dec
mov
pop
in
push
push
xor
jnp
movsl
divl
sbb
jnp
es
jp
gs
pop
add
push
jae
mov
outsl
jl
or
and
sti
add
shlb
cld
pop
cmpsl
add
cltd
cmp
imul
loop
les
and
roll
insl
ret
jmp
pop
inc
lds
mov
out
adc
fdivl
mov
fisubrl
test
pop
add
nop
or
adc
cmp
add
add
scas
mov
insl
data16
stc
cmp
or
das
jae
mov
sahf
ds
pop
loope
in
sub
inc
data16
stos
jmp
sub
stos
adc
je
xchg
pop
mov
popa
sbb
cmc
mov
mov
xor
out
xchg
push
fnstenv
and
fisttpll
xchg
push
add
add
xchg
pop
jle
and
push
out
xor
push
stos
mov
outsl
ret
push
popa
jle
or
mov
cld
jle
push
cmp
and
push
xchg
pop
dec
pop
inc
lahf
cmpsl
mov
xchg
xchg
std
add
sub
push
mov
cs
dec
pop
xchg
in
inc
rcll
cmc
adc
mov
jle
into
inc
fdecstp
lds
inc
jae
ljmp
inc
xchg
cwtl
xor
or
enter
xchg
mov
pushf
push
sti
pop
and
mov
ficompl
mov
test
cmp
xor
imul
mov
pop
out
xchg
imul
dec
fsubs
sbb
push
mov
test
das
cmp
push
rcrl
into
test
push
push
pop
out
fiaddl
enter
xor
xchg
scas
imul
pusha
out
imul
int
jnp
xor
pop
add
inc
mov
into
arpl
scas
popf
adc
and
sbb
arpl
mov
and
mov
inc
pop
jge
mov
xchg
jmp
mov
xchg
enter
mov
push
xchg
fisubrs
xchg
and
mov
adc
push
arpl
dec
or
add
jae
pushl
adc
inc
push
pop
dec
mov
movsl
ret
push
push
xchg
and
push
and
rclb
sub
mov
sbbb
dec
sbb
mov
mov
stc
jnp
mov
mov
adc
fsubrs
inc
fldcw
jno
sub
mov
insl
insb
sbb
cltd
adc
mov
roll
ficoms
je
scas
jp
dec
arpl
js
mov
hlt
aaa
sub
stos
or
adc
cmp
shlb
xchg
pop
fstps
push
jecxz
fstps
xchg
xchg
sub
lret
test
mov
sub
cmp
test
inc
movsb
mov
mov
jo
nop
or
addl
mov
cli
mov
add
lock
and
fsqrt
scas
push
jbe
mov
cmpsl
sub
add
pop
mov
jl
cmpsl
mov
gs
mov
out
inc
cmc
inc
mov
xchg
in
mov
add
dec
add
inc
fsubp
lea
mov
in
xor
mov
push
mov
pop
sbb
push
or
or
or
jg
sbb
pop
notb
and
push
xor
mov
cmpsl
test
movsb
sbb
xchg
icebp
sbb
call
jp
pop
test
inc
test
lods
mov
clc
ret
push
ret
outsb
js
lods
rcrb
loop
das
cmpsl
into
je
movsl
enter
pop
neg
sub
pop
adc
adc
daa
inc
fisubs
aam
aam
sbb
pop
leave
out
pop
int
sar
insl
dec
daa
mov
aad
pushf
or
push
lahf
jo
es
daa
mov
add
gs
sarb
nop
mov
xor
jbe
pop
leave
pop
xchg
mov
sub
js
cmc
cmp
in
pop
je
loopne
mov
lods
cmp
outsb
fistps
cmp
inc
gs
popa
je
insb
lea
pop
lret
bound
and
mov
add
push
pop
adc
push
mov
add
lret
repz
pushl
dec
and
mov
and
cmpsl
jns
mov
mov
fisubrs
cmpsl
out
in
xchg
dec
cmpsl
jns
in
cmp
mov
lahf
adc
or
cmp
ret
pop
inc
into
hlt
pop
push
outsb
jle
shll
or
stos
in
out
cli
push
mov
sahf
imul
mov
jnp
xchg
movsl
xchg
pop
pop
dec
cli
jp
fwait
sbb
push
push
stos
dec
jp
out
outsb
mov
sbb
mov
jmp
xchg
cs
ss
cmc
cli
add
ds
lds
adcl
cmp
loope
cmpsl
movsl
je
pop
inc
andb
dec
aam
mov
out
sahf
jl
rol
es
xchg
addl
or
int
imul
push
addr16
mov
or
xor
xor
int
push
dec
fstpt
rcrl
dec
pop
and
pushf
nop
lock
inc
xchg
inc
mov
pusha
jle
mov
fcoms
jl
test
pop
dec
cmp
repnz
xor
sahf
popa
in
rcrb
movsb
jg
inc
lods
and
cltd
lods
inc
paddd
xor
xor
mov
pop
cld
cmp
les
and
xchg
mul
jecxz
out
push
fists
xlat
jg
nop
das
xchg
mov
lea
loopne
dec
jl
out
or
aaa
iret
sub
xor
xor
xchg
sbb
dec
cmp
jp
jmp
ret
call
enter
mov
pop
jb
lods
in
cmp
test
popf
and
pop
lods
dec
push
inc
push
mov
pop
or
jl
push
movsl
sub
push
vaddss
or
push
mov
and
jecxz
and
test
mov
lahf
mov
shlb
xor
add
dec
test
inc
rclb
adc
sarb
inc
sti
pop
xor
jl
sbb
mov
dec
jo
mov
ja,pt
movsb
icebp
xchg
push
jo
es
cmp
insb
dec
sub
add
ret
mov
leave
out
sbb
adc
sub
mov
jae
jne
mov
outsl
mov
push
rorw
loope
cmpsl
orb
sub
push
rclb
stc
ret
mov
add
mov
pop
push
ret
mov
cmpb
rcr
shrl
sbb
int
sub
adc
pop
cmc
add
aam
sbb
hlt
lods
jg
xchg
rep
jl
lock
push
cmpsl
or
push
mov
fidivs
cmpsl
mov
xlat
mov
and
je
ss
sbbl
repz
mov
cli
xchg
int3
mov
scas
in
cmp
in
mov
rol
sbb
xor
mov
cli
jbe
cmp
add
xchg
or
test
sbb
addb
insb
jecxz
test
jge
push
ret
out
sub
das
mov
adc
ljmp
cmpsb
xor
pop
mov
mov
inc
mov
pop
imul
push
mov
dec
sub
aam
daa
shll
imul
push
mov
and
test
mov
dec
cmp
je
xchg
enter
dec
mov
adc
nop
and
fs
xchg
or
popf
notl
stos
or
inc
ret
nop
mov
or
daa
sub
rclb
pop
jge
aam
sbb
push
imul
out
and
cmpsl
mov
inc
std
fmul
fcmovne
loop
scas
jmp
insb
aas
sti
imul
mov
sub
push
jo
dec
mov
xchg
sbb
mov
popf
andb
aaa
add
fisttpll
mov
jo
sahf
out
aas
xchg
out
test
or
push
inc
rorl
pushf
push
adc
incb
vpaddw
cmp
push
push
ficoml
pop
inc
jno
loopne
shlb
cld
mov
cmpsb
jno
xchg
sbb
fsubrl
cmp
push
std
jp
mov
fadds
je
fldcw
enter
rcll
cltd
shlb
dec
out
loopne
xchg
mov
lock
sub
or
sub
push
sub
imul
add
inc
xor
inc
ds
cs
lds
jle
pop
cltd
ds
addr16
xor
cmc
and
sbb
jo
addb
jmp
push
hlt
push
pop
enter
lock
stos
enter
inc
inc
cmp
mov
dec
mov
cmp
pop
xchg
lret
imul
sahf
ret
fs
mov
dec
scas
inc
or
loopne
mov
pop
pop
pop
lods
xchg
sahf
push
xchg
test
push
cmpsb
push
ret
sub
xchg
in
jp
pop
xchg
mov
rcl
ljmp
movsl
in
pop
or
int
pop
int3
cltd
fucomi
push
movsl
mov
sub
adc
dec
or
pop
sbb
push
adc
and
and
mov
shlb
xlat
mov
loope
lcall
mull
inc
in
adc
mov
fdivrl
movsb
cmp
test
xor
rolb
daa
out
sar
sbb
pop
outsl
call
imul
jae
fs
jne
pop
mov
mov
mov
pop
test
movsl
jp
add
dec
out
and
or
xchg
mov
insl
inc
addr16
xor
sub
sub
push
arpl
js
ja
out
pop
xchg
pop
jmp
mov
nop
push
inc
pop
and
stc
and
rclb
pxor
iret
les
xchg
jl
lahf
dec
scas
idivl
mov
mov
mov
test
add
ret
sub
push
push
pop
add
rclb
leave
dec
jno
mov
lods
sub
adc
push
push
movsl
xor
test
fcmovu
hlt
adc
int3
test
mov
xchg
fmull
cwtl
nop
xchg
mov
mov
popa
xchg
sbbl
inc
sbb
mov
addr16
push
mov
cmp
jb
sub
outsb
pushl
mov
mov
ret
shrl
mov
cmp
and
xchg
lods
movsb
test
loop
lahf
mov
mull
or
fs
int
sbb
cmp
mov
int
lea
and
adcl
aaa
insl
cmp
dec
mov
sub
test
rcrl
mov
push
adc
iret
mov
loop
pop
loopne
pop
int
jnp
mov
add
xchg
mov
and
jne
insl
pop
pop
inc
sbb
sub
cmpsb
cld
jnp
fbld
sti
xchg
dec
inc
fnstsw
pusha
jns
cli
jno
mov
mov
mov
mov
push
xchg
and
shll
add
cmp
xor
mov
mov
xchg
push
dec
pop
fwait
lea
xor
dec
lret
es
fcmovb
push
adc
movl
dec
int
inc
add
inc
rolb
out
roll
mov
icebp
inc
les
scas
stos
inc
es
mov
js
xor
lods
push
repnz
sbb
repz
mov
int
jo
mov
pop
mov
pop
lea
test
mov
dec
xchg
dec
sbbl
fsub
pop
push
in
xchg
cmp
and
lock
mov
iret
push
xchg
lods
add
add
cmp
push
aaa
adc
addl
out
lods
lds
das
mov
mov
cwtl
popf
mov
mov
add
inc
mov
repz
cmp
mov
sbb
enter
daa
test
dec
pop
or
push
mov
rcll
inc
push
xor
mov
outsl
jo
ret
or
out
daa
movsb
xchg
out
loope
mov
mov
stos
lea
jo
dec
push
setae
mov
cltd
sbb
xor
popf
jbe
loopne
call
mov
adc
shrb
sahf
inc
xor
enter
popa
rol
sbb
lods
shlb
push
into
les
pusha
movsl
call
call
jno
sbb
sbb
std
ret
popf
sub
outsl
leave
pop
std
lods
lret
loope
inc
shrl
aas
insb
ds
and
pop
fsts
push
loopne
es
mov
jb
dec
in
mov
xor
ficoml
popa
fidivrl
sti
add
mov
aaa
mov
cwtl
cld
movb
out
jnp
in
sub
sub
cmp
pop
es
stc
sbb
xor
rorl
push
add
aaa
hlt
cmp
jl
mov
add
daa
loope
jmp
add
mov
jl
rcrl
push
dec
mov
jl
pop
or
sbb
jmp
dec
sti
andl
loop
jo
inc
ljmp
xor
xchg
and
insb
clc
gs
out
fs
lret
mov
lock
repnz
cmp
adc
jmp
push
sbb
pop
loopne
out
sarb
jp
mov
push
pusha
mov
and
xchg
scas
mov
aaa
cmpsl
test
jl
rclb
pop
out
jnp
popa
and
add
sahf
imul
movsb
xchg
add
ljmp
mov
inc
dec
xor
push
orb
arpl
shrl
sub
sbb
and
jae
or
jge
rcrb
add
jo
adc
aas
cld
and
daa
jmp
sbb
enter
xchg
mov
add
mov
mov
lds
sahf
dec
movsb
mov
or
xchg
adc
outsl
loope
out
pop
mov
jl
xchg
cwtl
push
lods
xor
ret
lcall
inc
mov
andb
bound
push
mov
shlb
add
adc
loop
repnz
and
xor
pusha
xchg
jo
xorb
mov
xor
add
adc
loop
repnz
and
xor
pusha
xchg
jo
xorb
mov
xor
add
adc
loop
repnz
and
xor
pusha
xchg
mov
xorb
mov
mov
andnps
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
in
jbe
cltd
int3
test
into
mov
insb
or
dec
sub
sub
cmp
or
sbb
in
mov
cltd
int3
test
mov
lea
cmp
cmp
es
or
sbb
in
sbb
cltd
int3
add
mov
mov
pushf
loope
pop
jp
jbe
dec
sub
push
xor
jb
mov
cwtl
test
aaa
push
xchg
and
jmp
jns
mov
aam
sub
daa
movsb
add
nop
repz
jb
popa
mov
mov
mov
lcall
hlt
pushf
lret
mov
xchg
daa
lcall
insb
test
pushf
dec
movsb
pushf
mov
imul
in
dec
cld
mov
leave
test
push
loope
stc
dec
mov
ss
jl
popl
sbb
sub
and
loope
stc
test
or
out
and
jg
ret
pop
pop
js
xchg
dec
add
mov
dec
pop
add
mov
je
jl
mov
dec
imul
lods
leave
mov
jns
jl
dec
cmp
gs
or
sbb
lods
fisttpl
xchg
lods
mov
sahf
pushf
insb
dec
sbb
and
sub
sub
mov
cltd
fsubrs
cmpsb
stc
ljmp
sub
pop
sub
or
mov
cld
fisubs
lods
mov
stc
insb
or
sub
dec
cmp
or
sbb
in
mov
cltd
int3
test
mov
stc
insb
or
sub
dec
cmp
or
sbb
in
mov
dec
push
or
xchg
push
push
sbb
rcrb
mov
add
mov
cmc
dec
fdivp
outsl
insb
mov
out
jb
das
int
mov
xor
lea
lahf
mov
lret
mov
and
lcall
in
call
xor
jl
cli
pop
insb
xchg
jg
fnsave
cmp
daa
xlat
mov
jecxz,pn
xchg
orl
add
lods
mov
std
test
stc
pmulhuw
xor
lahf
jg
sub
cmpsb
dec
lods
jnp
iret
pop
and
or
decb
bound
inc
sti
vmulpd
adc
or
sbbl
sbb
inc
sub
mov
aam
mov
out
int3
jl
mov
imul
out
push
mov
mov
test
pushf
xchg
pop
cmpsl
adc
scas
shrb
xor
rol
adc
es
in
push
lcall
sub
adcl
gs
cmp
in
dec
mov
cld
adc
or
mov
fidivrl
pop
cli
add
or
pusha
pop
cmp
cmp
push
or
leave
sub
pop
enter
push
xchg
mov
adcl
sbb
lcall
stos
cwtl
lcall
push
jo
adc
mov
mov
fimull
jb
faddl
sbb
and
mov
mov
push
mov
mov
movsl
in
sbb
mov
inc
mov
ret
adc
add
and
jo
pushf
in
mov
xchg
xchg
ror
outsb
add
cmp
dec
push
inc
imul
lds
pop
cmp
and
lock
dec
aam
mov
mov
mov
dec
add
mov
mov
fsubrp
inc
cmp
lea
addr16
sub
cmp
movb
push
sahf
notb
push
push
lcall
sti
loopne
js
cmp
xchg
out
scas
mov
xchg
jg
xchg
push
add
cwtl
ja
inc
inc
sbb
push
inc
cmc
out
sti
stos
push
out
leave
adc
dec
das
sub
test
sbb
add
push
pop
fcompl
addr16
mov
jmp
movsb
pop
test
shl
fstl
sahf
and
inc
fdivrs
cmp
inc
sub
push
jbe
jno
sti
mov
inc
dec
imul
stc
lods
out
pop
push
packsswb
jle
add
arpl
mov
icebp
mov
adc
or
xchg
ja
lcall
jp
and
jl
xchg
push
xchg
sbb
cmp
add
adc
xchg
mov
insb
cmpsb
xlat
sbb
stos
testl
in
jmp
push
icebp
xchg
xchg
add
es
mov
clc
mov
mov
jno
sbb
mov
jg
xchg
sub
xchg
shl
mov
dec
cmp
dec
push
jno
ds
mov
cmc
cmp
imul
fucomip
ret
fdivrl
mov
pop
or
shrb
idivl
mov
lods
sbbl
xchg
aam
push
lahf
lcall
dec
mov
loopne
outsl
fsubp
or
lcall
or
jl
or
push
inc
or
repnz
pop
shll
out
das
sahf
movsb
push
pop
shll
sahf
mov
sahf
mov
jp,pt
cmc
pop
inc
xchg
pop
ret
and
add
push
aad
in
xchg
pop
push
push
in
add
push
jbe
push
daa
in
cmp
adc
mov
xor
and
add
jecxz
jnp
and
sub
push
jecxz
ret
cwtl
mov
pusha
add
mov
or
adc
or
or
jp,pt
notrack
ficomps
into
mov
jp
dec
mov
cwtl
pushf
pop
testb
movsb
nop
scas
dec
jnp
cld
rorl
sbb
xchg
add
decb
xor
mov
pop
cmp
mov
cmp
cmp
push
test
cmp
and
or
addr16
adc
mov
cmpsb
sub
mov
mov
mov
fldcw
and
outsb
loop
test
mov
lea
nop
mov
mov
std
pop
movsl
in
and
je
addb
adc
push
scas
imul
pop
or
mov
pcmpgtd
cmp
sti
rclb
fdiv
lds
in
stos
in
shr
arpl
test
mov
and
leave
cltd
mov
cmp
adc
xlat
jno
mov
xlat
mull
je
and
ret
xor
inc
testb
rclb
or
and
fnstenv
das
lock
cmp
sahf
loope
sbb
shrl
outsl
nop
ljmp
adc
cld
cmp
insl
popa
pop
insb
mov
add
aad
jle
xchg
pop
xor
in
shll
mov
div
js
jbe
ljmp
pop
mov
dec
fdivs
cmp
cltd
sub
adc
shll
adc
test
mov
shrl
cmp
ja
xchg
das
ret
icebp
pop
sbb
fisttpll
aad
push
push
je
adc
pop
mov
popa
lret
and
cmpsl
xorb
xor
xlat
test
mov
sti
add
adc
cmpl
fists
out
js
xchg
ret
arpl
arpl
xor
scas
aam
dec
push
jo
ret
movsb
in
into
daa
jns
es
lock
and
mov
idiv
icebp
and
xchg
jb
stos
xor
mov
fs
dec
push
or
cmc
xchg
cmp
mov
and
cmp
mov
inc
or
fists
xor
push
cmp
dec
mov
mov
mov
fisttpll
xchg
gs
jbe
out
or
and
sbb
test
movsb
shrb
sub
mov
aaa
pop
cmp
push
scas
arpl
jo
fnstcw
inc
cmp
mov
shl
imul
pop
adc
dec
in
in
or
push
inc
stc
mov
inc
int
test
inc
jge
cmp
inc
xor
test
sahf
jmp
nop
repnz
add
mov
shr
jne
lret
dec
rcr
lds
test
data16
and
lea
pop
jecxz
mov
jno
test
int3
aaa
imul
lods
fisubrl
jae
mov
mov
mov
jl
add
sahf
pop
sahf
movsl
cmp
rcrl
lahf
jge
adc
or
rcrb
or
stos
js
cmp
xchg
sahf
or
xchg
inc
cmp
movsl
loop
rcrl
dec
in
imul
movsl
push
dec
test
lods
js
cmp
fwait
or
test
jae
aam
pop
cmp
imul
inc
cwtl
arpl
das
or
xchg
xor
jne
popf
add
test
pop
adc
sti
sbb
and
repz
std
les
shl
push
pop
jp
scas
and
hlt
stos
xchg
shl
inc
fisttps
pop
inc
sbb
jg
and
pop
inc
out
xchg
jnp
imul
pop
lods
aas
pop
xlat
insb
push
enter
pop
pop
push
push
and
je
dec
jnp
sub
call
lock
sub
adc
cmpsl
mov
cmpl
test
ds
mulb
fwait
mov
push
pop
mov
mov
adcl
push
adc
fwait
repnz
or
cmp
fildll
dec
mov
mov
jmp
in
dec
adc
dec
inc
mov
rcr
rorb
jge,pn
jle
dec
mov
pop
mov
push
sbb
sbb
aas
popa
and
lahf
adc
inc
cmp
push
lea
jnp
push
jno
es
sbb
aam
xor
data16
and
gs
pop
push
or
and
adc
xor
outsl
jecxz
mov
rcll
sub
rorl
push
sbb
addl
pop
shll
pop
adc
xchg
dec
cmp
ret
lahf
sbb
push
gs
imul
in
loopne
mov
scas
mov
add
pusha
push
jg
or
repz
push
adc
jp
and
test
dec
push
les
and
les
dec
aad
xor
adc
movsb
or
mov
mov
push
test
mov
in
fwait
pop
fstps
push
mov
adc
sti
or
and
inc
mov
inc
inc
cmc
jo
negl
les
call
aas
mov
mov
outsb
repnz
cmp
push
stos
pushf
lcall
repnz
cs
fwait
mov
insb
ret
fcompl
sub
in
push
push
in
lea
sbbl
dec
mov
std
icebp
mov
adc
cmpsl
or
shl
lret
fdivrs
mov
pop
sub
lods
std
loop
dec
divb
ror
arpl
les
and
jne
shll
push
outsb
add
pop
test
add
mov
dec
add
dec
dec
mov
sbb
push
jnp
js
pop
cmpsl
outsb
sbb
je
jo
and
mov
aam
jecxz
sub
outsb
xor
xor
fwait
stos
jp
shlb
nop
in
dec
mov
js
add
ljmp
incl
dec
cmp
or
dec
mov
test
add
cld
cmp
into
xor
cmc
or
test
pop
cmp
xor
fsubrs
and
xor
cmp
iret
stos
jbe
xchg
lea
add
mov
dec
out
push
js
dec
push
sbb
sbb
adc
dec
lods
faddl
adc
and
sbb
ficoml
pop
shll
test
and
inc
stos
pop
or
in
pop
sub
jae
cld
mov
lahf
out
mov
insb
ret
lret
imul
cli
rorb
sbb
jg
ljmp
ret
movsl
ss
push
pusha
jecxz
decb
ret
addr16
mov
add
xchg
aas
jae
xchg
dec
ljmp
adc
pop
imul
adc
fistps
push
mov
fsubr
mov
repz
jecxz
push
push
js
fistpl
inc
ds
icebp
push
fstps
push
aaa
lret
mov
cmp
mov
pop
sarl
repnz
mov
inc
sbb
xchg
dec
push
dec
pop
imul
fs
inc
je
push
push
sub
mov
mov
inc
loope
xor
mov
lahf
dec
out
cmc
cmp
aad
lcall
prefetchwt1
or
mov
adc
out
sub
mov
jns
pop
insl
pop
cs
jl
out
in
jo
pop
cmp
dec
cwtl
add
loope
jo
add
sbb
arpl
pusha
dec
cwtl
mov
js
dec
cmp
pusha
aad
sub
sub
aaa
int
test
dec
pop
mov
sbb
add
arpl
int3
rcl
lea
fnstsw
lods
icebp
inc
hlt
cmp
push
pushf
jb
dec
shlb
daa
inc
lret
aaa
and
dec
mov
lret
lods
jb
inc
out
in
pop
pusha
stc
jmp
sti
lahf
int
lods
jp
and
nop
jmp
mov
jmp
push
aaa
jne
rep
sarb
cmp
cwtl
xor
imul
mov
out
hlt
imul
sbb
loopne
jmp
sbb
decl
lds
lock
pop
cmp
nop
cmpsb
jnp
out
mov
inc
sar
pop
or
mov
inc
push
arpl
cmp
xor
pop
movsl
sbb
scas
out
and
push
mov
mov
ret
jbe
fxtract
rorl
iret
cmp
sub
repnz
xchg
dec
ds
xchg
push
xor
xchg
and
push
pop
mov
cmp
push
xor
push
enter
cltd
jg,pn
jo
pop
cwtl
cmp
jge
popf
lods
add
cltd
cmpsl
pop
ljmp
mov
lds
cld
std
mov
inc
je
jl
data16
pop
lcall
cs
cli
les
add
insl
cmpsb
mov
sbb
push
pop
xchg
and
aad
sub
rorb
imul
jns
pop
or
mov
mov
insl
push
add
and
pusha
in
data16
push
std
cmp
lock
ljmp
pop
fimuls
and
mov
or
dec
mov
in
gs
xchg
adc
inc
push
or
leave
mov
fiaddl
rolb
pushf
leave
lods
and
xor
rclb
sarb
imul
sub
push
add
dec
test
xchg
out
sbb
jmp
dec
mov
insl
js
xchg
cmp
push
jle
ds
push
cli
les
pop
mov
mov
aas
cmpsb
sub
clc
xchg
data16
mov
or
sbb
lret
sbb
outsl
imul
das
jbe
xor
xchg
out
dec
xchg
int3
xchg
js
cmp
mov
sbb
out
mov
mov
lock
out
adcb
icebp
xor
leave
sti
mov
and
aas
out
test
jl
mov
nop
scas
mov
popa
inc
andl
movsl
cmp
dec
fdivr
and
sub
fwait
inc
push
dec
shrl
iret
ds
in
push
js
fcmovnb
xor
mulb
loopne
mov
jge
insb
repz
pop
add
adc
addr16
jae
mov
stos
popa
mov
fcmovne
and
shll
push
mov
mov
dec
out
pop
daa
and
mov
mov
or
test
fs
xchg
stos
mov
xor
push
outsl
fiadds
sarb
arpl
pop
push
cmp
sbb
fimull
fwait
adcb
ret
sti
std
imul
pop
popa
subb
mov
fdivl
push
jne
inc
push
sti
xor
mov
addb
xor
movl
inc
xchg
jne
call
frstor
mov
or
push
mov
sub
jbe
or
pop
frstor
jnp
decb
mov
cmpsb
data16
out
scas
out
cwtl
notl
daa
ret
inc
fs
test
cs
arpl
xchg
out
mov
nop
dec
mov
sub
sbb
xchg
xchg
sub
mov
push
dec
cmp
mov
lret
inc
mov
mov
inc
xor
or
lret
sub
enter
call
mov
pusha
dec
mov
negb
sarb
arpl
dec
rolb
lods
mov
iret
push
mov
mov
and
pop
add
lcall
stos
ljmp
pop
out
dec
cltd
or
or
jns
leave
mov
cltd
sbb
and
pinsrw
rol
push
ret
insl
sbb
push
jle
inc
mov
sti
inc
mov
call
pushf
jecxz
test
xor
pop
or
mov
jb
insb
mov
jae
pop
or
icebp
ret
mov
jge
mov
lods
xchg
inc
add
aaa
ret
negl
lds
xchg
lret
adc
lret
in
incb
mov
loopne
scas
mov
xchg
bound
inc
popa
sub
pusha
or
stc
rcrl
inc
shr
push
scas
cmpsb
pop
sbb
cmpsl
mov
cmp
cld
mov
sahf
addb
mov
orb
rcrb
or
sbb
inc
jae
adc
sub
mov
and
inc
aad
movb
push
mull
dec
lcall
jno
orl
mov
insl
test
mov
dec
mov
leave
fstpl
testl
dec
pop
stos
mov
sub
scas
push
cmpb
mov
xchg
cld
enter
xor
sbb
lods
insl
inc
sbb
cltd
lahf
cmp
mov
pop
dec
scas
into
cwtl
xchg
inc
and
es
dec
daa
push
mov
dec
and
adc
aas
fisttpl
repz
inc
pop
imul
icebp
shll
jo
push
cwtl
or
or
and
leave
jecxz
stos
push
in
cmp
add
mov
push
push
cmp
movb
nop
adc
es
add
lods
inc
inc
sahf
cmpsb
ss
mov
test
cltd
outsl
cs
lahf
aaa
fiadds
pusha
and
or
movsl
test
lahf
in
fisubrl
inc
cmpsb
inc
popa
lea
pushf
jmp
jnp
jmp
sbb
movl
shl
stos
das
xor
shlb
or
repnz
js
cld
movsb
cwtl
repnz
jmp
inc
mov
std
pop
hlt
xor
ror
adc
pop
push
insl
xchg
push
jge
or
cmc
mov
lods
pusha
ret
lret
sahf
ja
dec
push
inc
dec
add
jecxz
aad
mov
mov
stos
push
out
test
xchg
testl
or
lret
aaa
cmpsb
lret
ds
xchg
into
sbb
iret
insl
scas
jge
jmp
lcall
xor
mull
add
or
push
xchg
or
loope
fcmovnu
inc
push
push
mov
sub
lock
mulps
pop
push
sete
daa
pop
add
dec
into
test
pcmpeqw
out
outsb
loopne
cmpsb
sub
add
jae
adc
sbb
mov
ljmp
fs
out
pop
clc
sbbl
inc
mov
dec
jg
popa
xlat
jmp
loope
dec
sub
xchg
mov
push
mov
mov
pop
push
add
sbb
sub
or
dec
push
inc
pop
jl
icebp
sbb
add
or
add
lret
out
test
clc
or
and
mov
daa
aad
mov
dec
cli
lahf
pop
jle
adc
mov
cmpb
in
imul
push
sub
mov
jb
fadds
test
mov
je
nop
arpl
sbb
es
nop
adc
icebp
adc
fadd
jle
lret
xchg
mov
mov
push
arpl
les
shr
xlat
nopl
jns
pop
sbb
push
mov
lahf
ja
mov
fwait
test
shll
ljmp
enter
inc
fists
jbe
xchg
lock
adc
cmp
jo
ficompl
iret
mov
mov
push
xchg
ficoml
out
negl
rol
hlt
push
clc
sbb
inc
xor
or
push
cmp
mov
push
dec
out
dec
push
pop
outsl
cmp
jnp
scas
fdiv
push
cmp
aaa
filds
sbb
xchg
mov
mov
lock
or
sbb
mov
iret
or
scas
inc
cmp
popf
adc
rcll
shrl
in
inc
ss
mov
dec
inc
xor
mov
scas
mov
outsl
test
ss
cmp
scas
pop
xchg
and
test
cmpsl
leave
xchg
mov
jmp
shll
sarl
mov
cli
and
loope
mov
xchg
adc
test
or
leave
lret
sub
mov
in
mov
adc
out
and
arpl
rcrl
and
pop
aas
fmuls
and
sbb
inc
jmp
push
daa
or
in
dec
arpl
lcall
push
pop
sbb
mov
lret
cmpsl
shll
push
cmp
sbb
lds
ret
pop
movsl
xor
inc
pop
inc
mov
fidivrl
fdivl
jae
cmp
mov
mov
ds
dec
ret
lods
mov
shrb
mov
or
or
mov
shlb
jne
jno
insb
adc
lea
xchg
jmp
mov
test
mov
cmp
stos
es
xor
jle
push
inc
daa
adc
jne
icebp
cmpsl
xor
fstl
xor
test
mov
mov
lds
aam
rorl
inc
sbb
mov
mov
xor
fiadds
xchg
xor
repnz
cmpsl
insl
mov
mov
and
rol
loopne
xchg
test
loop
or
cmp
les
xor
add
xchg
repnz
test
ljmp
shl
add
sub
lret
scas
pop
sbb
cmp
stos
mov
icebp
mov
aam
sti
ljmp
mov
movl
inc
and
out
roll
loope
mov
cmp
ret
push
adc
daa
mov
jo
dec
pop
push
and
in
adc
mov
jmp
sbb
into
insl
add
outsb
xchg
shrl
jp
or
jns
in
dec
pop
into
jl
jg
dec
mov
or
mov
mov
rolb
fwait
xor
mov
add
out
popa
xchg
and
loopne
ret
push
sub
aam
sub
or
or
sub
jns
add
sbb
aad
push
mov
sahf
add
lods
leave
mov
stc
insb
or
sub
dec
cmp
or
sbb
in
mov
cltd
int3
test
mov
stc
insb
or
sub
dec
cmp
or
sbb
in
mov
rcr
mov
mov
sbb
insb
sarl
sub
dec
cmp
or
sbb
in
mov
cltd
int3
test
mov
stc
insb
idivb
sub
rorl
insb
xchg
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
add
dec
stc
jp
push
add
fiaddl
lahf
imul
pop
lcall
sbb
dec
stc
dec
leave
push
sbb
sub
sahf
dec
sub
sub
sbb
push
stc
leave
jb
add
cmp
and
mov
pop
leave
insb
ret
sbb
jmp
add
adc
js
mov
jp
jne
sub
dec
push
push
out
jbe,pn
mov
movsl
rcrb
mov
fstl
inc
lret
xchg
adc
xor
pop
es
daa
in
cld
dec
das
xor
test
push
decb
xor
mov
sbb
test
adc
or
imulb
mov
pop
clc
lcall
test
out
pop
mov
cmpsb
pop
jp
imul
je
add
dec
test
cmp
shrb
push
loope
jl
or
mov
enter
bound
sbb
xchg
xor
pop
pop
lcall
jmp
jge
or
xor
loop
repz
subb
cmp
test
sub
push
lahf
jle
addr16
cmp
inc
jmp
mov
test
testb
mov
jl
test
mov
leave
push
xchg
push
out
cltd
fsubrs
adc
incl
push
lret
ja
mov
push
lds
mov
fisubrl
jns
dec
ljmp
or
stc
jp
push
sbb
sub
cli
dec
ljmp
or
in
and
add
xor
adc
pop
xor
in
movsl
xchg
popa
push
rclb
ficoml
mov
cmpsb
jle
jg
inc
dec
add
inc
xor
xor
out
jp
inc
sub
cmc
mov
testl
imul
xlat
cltd
rcl
int
sbb
cltd
dec
add
mov
xlat
out
inc
mov
inc
and
dec
sub
andl
mov
dec
push
inc
inc
push
mov
jo
adc
xor
leave
dec
and
inc
push
and
fld
push
mov
xchg
dec
add
sbb
aam
push
cld
pushf
lahf
movsb
pop
nop
in
les
sbb
cmp
or
xlat
pop
mov
sti
lock
push
mov
inc
fmuls
push
xchg
sub
in
mov
icebp
fs
fidivrs
xchg
ds
fs
or
cmpsb
iret
out
iret
lock
add
out
nop
sbb
out
push
lods
test
mov
movsl
ja
mov
lds
les
adc
or
inc
add
jle
inc
mulb
mov
sbb
insb
mov
fldenv
add
xchg
inc
pop
enter
sbb
psrld
outsb
out
in
icebp
cmp
push
movsl
ret
mov
mov
mov
test
inc
inc
dec
insb
loop
mov
inc
es
scas
dec
popf
lods
sbb
sbb
sbb
sbb
xchg
jecxz
mov
les
push
and
imul
not
scas
cld
mov
scas
aad
lret
pop
pusha
cmpxchg
xor
mov
sbb
negb
dec
fsubr
xchg
push
pop
and
mov
lock
stos
into
sub
mov
xchg
sbb
stos
js
daa
inc
add
sti
jnp
add
jge
or
lds
mov
insb
pop
imul
scas
pushf
add
bound
mov
sub
mov
xchg
mov
or
jb
xor
xchg
ja
cmp
dec
outsb
jnp
fistpl
cwtl
data16
lds
sub
mov
and
idivb
lret
mov
or
mov
jnp
test
or
stos
lods
mov
xor
pop
mov
sub
sub
stos
mov
xchg
dec
jl
mov
xchg
sahf
xchg
mov
scas
push
push
dec
aas
popa
in
xchg
bound
rcrb
sbb
lahf
repz
pop
jmp
scas
out
inc
dec
lock
jns
sbb
fstpt
xchg
lret
ljmp
mov
aas
test
push
xchg
arpl
scas
decl
nop
xor
movsb
pop
cmpsb
and
adc
push
sbb
or
in
adc
cmp
jae
lcall
test
and
movsb
ror
psrld
xor
jne
arpl
pop
lret
iret
mov
in
add
add
insb
fstl
xor
dec
jne
mov
inc
scas
div
sub
gs
adc
xor
int3
scas
ror
in
sbb
xchg
inc
mov
cmp
mov
inc
ret
mov
cmp
test
pop
scas
ret
sbb
push
addb
xor
jnp
cltd
test
cmp
jmp
dec
sub
xchg
daa
data16
js
xchg
mov
stos
stc
aad
rolb
xor
cmpsl
pop
pusha
leave
inc
dec
dec
scas
sub
orb
jo
fidivrs
mov
mov
jbe
leave
jns
inc
xchg
mov
cld
loopne
test
push
push
push
aad
leave
push
or
std
ret
pop
mov
out
jnp
sbb
sub
xor
mov
xchg
lcall
repz
jne
push
push
insb
push
mov
sbb
filds
stos
pop
ljmp
inc
lcall
aaa
push
xchg
bound
negl
cwtl
sti
aam
sub
cmp
xchg
mov
sbb
or
pop
sahf
jle
sbb
shlb
cld
insb
cmc
jge
loop
jp
push
fs
mov
sbb
mov
xor
out
das
cli
xchg
pop
add
ja
call
sbbl
pop
es
cltd
bound
mov
dec
cmp
stc
xchg
lods
xchg
popa
call
mov
adc
shrb
push
mov
and
test
leave
or
ss
jecxz
loopne
ficomps
lds
out
pop
int
pusha
push
sbb
clc
fisubrs
sahf
inc
dec
cmp
test
ljmp
push
ficoms
es
mov
push
and
xchg
pop
jnp
add
mov
dec
adc
jo
add
stc
ja
and
pop
call
push
fs
icebp
lock
mov
or
cmc
push
jns
xor
call
imul
into
imul
xchg
xchg
pop
pop
fldenv
ds
arpl
xor
fadds
cld
push
xor
jecxz
cmp
pop
sbb
cltd
sbb
negl
inc
push
jecxz
mov
fdivl
enter
aaa
subb
jo
std
lret
outsb
aam
inc
sub
jne
xchg
lcall
paddsw
mov
mov
jo
mov
mov
movsb
inc
out
mov
divb
jnp
cmp
in
xchg
and
or
test
dec
cmp
ja
or
shrl
repnz
sub
lahf
cli
mov
push
es
lock
and
and
inc
mov
int3
add
loope
push
mov
jb
les
mov
cmpb
cmp
cwtl
popa
add
mov
fcomip
adc
cmpsb
popa
xlat
jo
cld
pop
jbe
sbb
jae
or
loop
adc
pop
cltd
xchg
fs
and
pop
test
mov
add
and
xchg
es
add
or
push
mov
lea
inc
andb
clc
add
sub
cmp
xchg
sbb
mov
inc
adc
inc
mov
inc
cwtl
dec
fsub
mov
ds
jns
xor
repz
test
inc
push
xchg
mov
lods
lock
mov
loopne
pop
popf
inc
mov
bswap
js
or
or
movsl
pusha
imul
mov
jbe
xchg
xchg
or
jp
push
mov
or
dec
xchg
icebp
cmp
testb
bound
fnstsw
ss
push
push
pop
adc
cmpsb
and
inc
lahf
sbb
int3
pop
insl
xchg
inc
aad
mov
cmp
lahf
imul
jmp
loopne
xchg
leave
xchg
adc
add
adc
xchg
hlt
sha256msg1
add
sbb
pop
xchg
je
jl
and
mov
or
or
clc
adc
jge
std
rcll
sti
out
fidivs
fstpl
cmp
jbe
pop
addb
out
xchg
cltd
bound
pushf
mov
inc
leave
dec
std
mov
cmpsb
dec
and
xor
cmp
add
sbb
xchg
in
ret
adc
inc
mov
insb
inc
fnsave
fsubrs
fadd
into
and
ja
mov
ret
lahf
xor
xor
shrl
add
pop
inc
inc
xor
jmp
ja
jg
push
jp
jne
pusha
pop
mov
jmp
mov
cmpsl
add
xor
pop
or
arpl
fnsetpm(287
mov
inc
mov
adc
rcr
aas
in
mov
dec
in
xchg
in
mov
pop
lds
adc
sarb
jle
jmp
pop
movsl
repz
lahf
xchg
ret
mov
push
mov
xor
sub
xor
mov
mov
fcmovnu
imul
adcb
adc
loopne
fsubp
mov
mov
adc
scas
scas
popa
cli
xchg
push
mov
dec
fnstsw
cmp
mov
aas
xlat
into
je
lret
inc
xor
aam
push
addr16
sbbl
mov
mov
mov
dec
and
adc
cs
sbb
aam
sub
sbb
jno
pop
inc
ja
call
or
es
adc
loope
xchg
inc
lock
mov
add
push
xchg
mov
mov
insl
and
js
hlt
push
cmp
adc
cmp
mov
mov
cmp
sbb
lds
rolb
jp
xchg
mov
insl
push
in
dec
stos
xchg
cmp
cmc
jnp
and
and
and
jmp
push
cmc
push
sahf
lahf
cltd
mov
scas
pop
dec
adc
ret
push
fs
popaw
cwtl
push
pushf
mov
into
lods
sarl
mov
test
jno
out
xor
shll
cmp
jp
cmc
js
scas
mov
std
insl
xchg
popa
inc
aaa
scas
mov
insb
sub
call
sti
fisubl
cmp
das
dec
ja
jp
dec
es
push
mov
clc
xor
test
push
test
jl
add
mov
jg
int
jne
icebp
dec
mov
jge
and
xchg
and
xor
xor
cmp
adc
ret
shrl
in
add
mov
mov
popa
xor
inc
fs
fst
and
ret
mov
mov
pop
es
sub
add
mov
shll
loop
dec
daa
mov
fadds
cld
sbb
je
adc
dec
out
stos
inc
in
pop
add
jmp
mov
rcl
scas
push
mov
xchg
lods
xchg
rorl
aaa
jo
cli
fadd
and
sbb
cmp
mov
fcmovbe
jae
mov
scas
jnp
dec
cli
xchg
arpl
xchg
aas
cltd
mov
or
insl
fists
pushf
push
fistl
lds
adc
cmc
pop
jg
pop
mov
sub
push
mov
int
cld
mov
adc
dec
fsubrl
push
dec
adc
stos
push
in
cmpsb
data16
push
faddp
test
and
pop
outsb
and
mov
xchg
daa
mov
add
loopne
lds
sub
mov
mov
loopne
adc
inc
inc
imull
test
roll
mov
in
or
les
arpl
sbb
jo
rcrb
mov
rorb
add
sub
mov
and
enter
lret
xor
mov
jb
ss
lret
ja
enter
shrl
or
sti
fcmove
mov
cwtl
lods
mul
cmp
mov
rolb
sub
fdivrl
imull
push
inc
jle
jb
inc
pop
call
lock
in
and
push
sub
inc
or
stos
cmpsl
aam
and
icebp
scas
fstp
in
cmp
mov
cmp
cmp
xor
sbb
in
jne
pop
sahf
ds
jmp
fwait
out
inc
adc
mov
pop
fwait
add
push
sub
insl
lds
loopne
rclb
das
jg
adcl
inc
push
cmpl
push
adc
adc
inc
popa
pop
push
mov
add
enter
jae
xchg
adc
fidivrs
add
das
scas
in
sbb
add
jnp,pt
movsb
mov
pop
in
ja
dec
adc
adc
adc
sahf
jle
xor
xor
inc
adcb
jo
cmp
xorl
sarl
incb
or
pop
xlat
inc
cltd
cmp
imull
incl
mov
mov
nop
mov
push
xchg
cmpl
aam
push
or
inc
mov
daa
jg
add
jecxz
add
cmc
dec
dec
adc
mov
sub
xchg
cmp
shrl
clc
push
pop
jo
sbb
jae
shrb
dec
mov
cs
xchg
outsb
cmp
mov
incb
jecxz
mov
add
jo
pop
in
mov
mov
inc
cmpsb
jne
sub
cltd
icebp
das
push
mov
cmc
mov
insl
outsb
inc
lods
mov
not
dec
rolb
iret
or
sbb
scas
pop
cs
mov
or
cmc
rorb
fildll
inc
xlat
pop
xchg
outsb
sbb
push
or
pop
daa
imul
xor
xor
jg
aaa
push
aad
out
fwait
loopne
aad
lods
xchg
xor
cmp
insl
xchg
mov
lea
mov
sub
jae
cltd
les
jle
sub
or
or
loope
addr16
jle
push
es
popf
fsubrl
jl
inc
mov
push
scas
inc
stos
divl
mov
lods
jl
ss
adc
loope
jbe
rorb
pop
out
ss
push
out
sahf
int
inc
jo
sub
das
sub
loope
sbb
and
scas
sbb
inc
js
xor
pop
clc
sbb
push
in
jg
xchg
adc
mov
push
xchg
cmp
dec
sub
mov
popa
xchg
rorb
icebp
and
hlt
nop
lods
fdivl
mov
jp
push
push
adc
xchg
mov
daa
les
or
cli
or
mov
pusha
into
inc
out
ret
lahf
mov
sub
mov
mov
sarb
xor
adcl
out
push
rorl
sbb
aas
ror
sub
inc
icebp
in
cmp
pop
push
shrl
push
mov
pop
mov
pop
jno
xlat
and
push
imul
sub
sarb
add
push
jl
jle
push
cmp
push
gs
neg
xchg
mov
testl
das
xchg
clc
aad
cld
add
push
testb
mov
lcall
mov
lcall
xchg
inc
sub
scas
xor
jg
mov
dec
mov
aad
xchg
out
fdivrl
mov
loop
inc
adc
push
adc
insb
ret
movsl
sbb
push
sbb
js
das
jo
in
leave
push
xchg
mov
shll
lahf
pop
fildll
mov
pop
out
dec
and
outsb
jns
cmp
in
ss
mov
aaa
jecxz
push
or
in
in
and
add
into
mov
fisttpll
loope
sahf
push
ficompl
push
add
std
popa
ss
adc
fistpl
jl
int
lcall
cli
std
aaa
or
call
negl
sub
daa
cwtl
out
pop
std
pop
fistps
xchg
ljmp
mov
pop
jbe
shll
shrl
adc
inc
das
test
sub
sarl
and
stos
add
push
bound
xchg
bound
add
xlat
mov
inc
jne
mov
rclb
adc
sub
cld
mov
push
cmp
ss
and
and
out
pop
pop
jae
fwait
movsl
push
cli
add
daa
test
pop
arpl
leave
arpl
push
call
inc
mov
in
cmp
dec
sbbl
add
push
pop
pop
inc
scas
cli
subb
sarb
cltd
and
std
lea
xor
lret
push
sbb
test
cmp
mov
stos
mov
xor
scas
in
outsl
cmpsl
lea
rorb
sbb
mov
mov
in
pop
jge
je
xor
push
inc
xorl
cltd
dec
es
aaa
lods
push
jp
adc
lds
shr
inc
or
mov
icebp
pop
pushf
dec
push
aaa
xchg
lret
lock
int3
push
or
adc
popa
inc
clc
pushf
test
notb
scas
inc
test
jbe
shrl
lock
int3
cs
fcomps
icebp
add
mov
mov
and
push
idivb
inc
ror
jmp
dec
mov
jge
sbb
rcr
lods
clc
aaa
ficoml
dec
mov
fildll
cmp
jb
pop
or
inc
cmpsl
mov
test
shll
and
into
xlat
pusha
adc
fidivs
push
dec
xchg
in
and
fiadds
jne
or
sub
xlat
sti
adc
orb
out
and
icebp
adc
call
push
jbe
adc
mov
vpmacssww
stos
test
icebp
scas
pusha
xchg
mov
in
mov
sub
cmp
aaa
shrb
push
jmp
xchg
mov
xor
in
xor
lcall
sbb
mov
mov
dec
ljmp
mov
mov
repz
xorl
dec
pop
pushf
jbe
icebp
mov
jp
lret
xor
lods
inc
test
sbb
mov
test
pop
call
std
push
mov
xchg
sub
out
xchg
std
push
les
rol
gs
insl
jl
cmp
and
mov
dec
lods
fidivs
mov
sarl
pop
cmp
dec
mov
mov
out
pop
fcmovbe
or
mov
ret
cltd
dec
cmpsb
xchg
sbb
cmp
and
or
iret
pop
enter
add
scas
mov
dec
adc
cmp
loopne
test
mov
jno
inc
aaa
jmp
jle
js
push
jl
pop
push
xor
popa
cmpsb
sbb
sub
stc
mov
bound
mov
out
stos
inc
mov
dec
and
pop
jns
cmp
sbb
in
stos
mov
xchg
inc
xor
in
popa
rcll
push
das
fwait
add
xor
popf
dec
adc
inc
enter
fbstp
xchg
or
inc
cli
inc
mov
repz
fiaddl
push
mov
sarl
ljmp
outsb
sub
mov
pop
rolb
rcr
out
addl
ret
clc
or
mov
orl
insl
jmp
xor
mov
adc
cwtl
lods
adc
pop
push
mov
jecxz
mov
mov
sbb
stos
mov
ficoms
xchg
icebp
sahf
popa
leave
int
adcb
xchg
insl
test
popf
mov
loopne
repz
jne
rcrl
jns
test
repz
ss
and
adc
rcrb
cmp
adc
lds
dec
jbe
cmp
xlat
jb
mov
iret
hlt
in
mov
sbb
aam
adc
test
jns
pop
popl
dec
jl
fsubs
cli
add
xchg
out
sbb
popa
dec
xchg
xlat
cmpsb
push
mov
push
mov
and
insl
imul
dec
fsubrs
ljmp
stos
ljmp
test
std
pop
inc
and
mov
hlt
xchg
sbb
push
dec
mov
lock
jp
clc
cwtd
sbbb
xchg
or
cmp
jo
sbb
aad
push
xor
out
jne
jg
pop
sub
out
or
add
lret
push
adc
ds
sub
sbb
mov
inc
inc
adcb
cmpsl
lods
jmp
movsl
pop
adc
ffree
bound
push
add
addb
or
dec
outsl
cmp
push
sbb
jbe,pn
fisubs
cmp
pushf
push
xor
adc
and
dec
sub
sbb
stc
lock
movsl
rolb
negb
mov
repz
cmpsb
loop
or
xor
inc
imul
sub
sbb
sub
and
pop
loop
adc
add
xchg
xor
sbb
imul
lret
and
lods
stc
xor
je
mov
scas
stc
xchg
sub
ret
push
jmp
nop
xor
js
mov
mov
stos
adc
mov
and
dec
das
push
outsl
sbb
add
test
jle
mov
and
jae
add
pop
push
mov
and
sbb
pavgw
or
in
dec
xlat
jmp
mov
add
test
pop
ljmp
aam
jns
scas
cmp
jns
fsts
sbb
cmp
out
jb
call
mov
call
and
mov
xor
jno
dec
jmp
sbb
inc
xorb
hlt
jmp
adc
fstpl
je
or
mov
mov
and
dec
push
jmp
jns
jl
mov
in
xor
add
outsb
icebp
out
push
sbb
push
testb
inc
and
ds
loop
repnz
mov
out
xlat
pop
sbb
jne
sbb
rorb
cli
mov
dec
stc
or
jecxz
iret
and
fstps
mov
insl
mov
daa
pop
mov
mov
xchg
pusha
je
push
rorb
jne
dec
inc
test
adcb
cmp
xor
and
popf
jnp
adc
inc
mov
cmp
call
pop
push
aad
xlat
push
adc
cmpsb
movsl
xor
cmp
mov
ret
imull
test
and
imulb
movsb
cmc
pop
orb
pop
xchg
pushf
mov
data16
mov
push
insl
jmp
pop
sbb
fstpl
pop
insl
inc
stc
popf
enter
test
sub
cli
dec
ljmp
or
stc
jp
push
sbb
sub
cli
dec
ljmp
or
stc
jp
push
sbb
sub
decb
pop
lcall
sbb
jle
dec
leave
push
sbb
stos
and
rcll
ljmp
notb
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
