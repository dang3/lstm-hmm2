jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
into
push
out
fcmovne
stos
pop
cmc
loope
sbb
pusha
add
push
add
add
add
add
push
add
add
lock
add
add
popf
add
add
add
add
cmp
adc
popa
add
add
mov
sahf
add
add
add
add
sub
imul
add
add
xor
dec
add
add
add
add
add
cwtl
add
add
cmp
push
add
add
push
add
add
add
cmp
push
sub
add
add
add
add
add
add
cmp
fiaddl
mov
aam
mov
add
add
add
mov
fiaddl
xor
and
pop
add
add
inc
add
push
add
add
add
cmp
push
mov
push
add
lods
add
add
add
add
add
cmp
add
add
add
pop
add
add
popa
add
fiaddl
sub
inc
add
add
add
push
add
add
xchg
popa
add
cmp
mov
cld
add
mov
rolb
cmp
inc
push
mov
mov
sub
mov
add
add
cmp
sub
add
push
add
jns
xor
cmp
add
add
add
sbb
mov
xchg
add
les
push
add
add
test
call
add
add
add
add
xchg
add
add
add
add
cmp
imul
add
call
add
jbe
xor
push
add
add
test
xor
push
flds
mov
add
xchg
add
cmp
cmp
mov
xchg
add
add
add
add
add
add
add
addl
add
add
add
jns
cmp
add
inc
push
cmp
sub
inc
push
mov
add
cmp
or
add
push
add
add
add
add
xor
cmp
or
inc
add
add
add
add
add
add
add
add
fadds
mov
add
imul
add
add
add
add
add
add
add
add
dec
add
popa
add
add
mov
add
add
cmp
roll
add
popa
add
add
faddl
jns
jns
lock
cmp
ret
add
push
add
xor
nop
add
add
add
cmp
fiaddl
jo
xlat
add
add
pop
add
add
add
mov
add
add
add
add
test
sub
push
add
jo
cli
add
add
add
popf
add
xchg
add
add
add
adc
jo
fadds
lcall
add
inc
push
push
add
pop
add
add
pusha
add
cmp
pop
add
lock
add
add
add
xchg
add
add
les
dec
add
and
jns
sub
cmp
adc
jns
pop
add
add
add
add
add
add
add
lock
add
add
add
push
add
add
add
pop
add
add
add
rolb
lock
add
imul
cmp
pop
add
fadds
jns
mov
cmp
rolb
lcall
add
add
add
adc
imul
add
add
add
add
xchg
xchg
add
add
add
jns
test
inc
add
add
push
add
mov
or
sub
inc
push
popf
add
add
imul
xchg
add
lret
mov
bound
dec
icebp
das
outsl
into
pop
inc
std
jmp
js
dec
xor
mov
adc
insl
test
mov
mov
outsl
xchg
adc
fdivs
sbb
jnp
push
clc
adc
les
fimull
jmp
adc
mov
jmp
pushf
push
rcr
add
lcall
cmc
test
fildll
lcall
xor
xor
push
jp
dec
xor
cmp
fldl
jb
movsl
add
pop
popa
je
jp
sbb
sbb
xchg
faddl
push
testb
mov
cli
jp
lods
frstor
inc
mov
xor
popf
jp
test
ja
xor
pusha
fidivrs
xor
cmp
aaa
movsb
add
xchg
fcoml
xlat
or
test
jbe
std
in
push
inc
sbb
pop
stos
mov
adc
clc
mov
outsl
test
jbe
push
dec
sbb
xor
in
imull
and
sub
fdivs
imul
push
jg
pop
mov
and
xchg
pusha
pop
arpl
sahf
add
loop
add
xor
data16
or
ficoms
sub
fiadds
mov
push
jmp
in
or
fsub
adc
sahf
imul
daa
fyl2x
scas
cltd
push
jecxz
jae
dec
fidivrs
int
jns
js
add
mov
xchg
pop
scas
lods
sbb
cmp
ficompl
mov
fldenv
mov
insb
xor
push
push
inc
les
jae
push
sub
sbb
adc
stos
test
mov
mov
mov
mov
orl
pop
push
clc
mov
daa
push
sbb
cwtl
in
and
scas
jmp
push
cmp
pop
cli
inc
out
out
push
cs
inc
cmp
add
push
ror
adc
sbb
sarl
dec
jge
int
mov
out
aad
out
adc
pushf
inc
dec
adc
out
mov
mov
cld
mov
aas
sub
mov
cwtl
popf
mov
int3
stos
daa
sub
mov
scas
iret
cmp
and
xchg
pmulhuw
jge
lret
xchg
pop
sbb
mov
cmp
push
push
cmp
jecxz
mov
notb
xchg
xor
ret
bound
sub
cmp
mov
loop
test
xchg
push
mov
push
cs
enter
stos
fistps
pop
insb
jnp
icebp
jae
popf
mov
pop
fs
or
test
iret
insl
fstpl
inc
outsl
dec
cli
ja
addl
pop
ds
imul
and
fs
in
into
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
repnz
imul
ret
not
dec
cld
pop
mov
jb
arpl
push
fildl
xor
add
rcrb
dec
mov
mov
jg
sti
lret
push
fildl
repnz
stos
adc
add
shl
ret
pop
mov
adc
inc
mov
test
xor
dec
ret
insb
mov
cs
push
jnp
sub
adc
lods
push
fistpl
orl
fiadds
aad
lock
cmp
dec
fsubp
mov
int
and
lcall
aad
mov
cmp
adc
mov
outsb
push
push
addb
pop
stos
ja
add
mov
cmp
hlt
incl
mov
int
bound
aaa
fmuls
or
outsb
adc
or
sbb
lret
popa
call
add
sbb
jno
jl
test
pop
xor
sti
xchg
subl
scas
push
push
fwait
orb
jnp
fwait
rcr
ret
cmp
mov
bound
xor
add
mov
xchg
imul
rolb
subb
pop
scas
push
scas
cmp
jno
inc
ljmp
scas
outsb
mov
out
ljmp
mov
xor
dec
out
cli
ja
xchg
sub
scas
sub
pop
mov
or
jmp
fildl
xor
add
rcrb
dec
mov
mov
or
jmp
fildl
xor
add
dec
clc
in
addr16
mov
lods
ja
push
jno
jb
mov
sbb
cmc
jno
add
mov
lret
and
cmpsl
sbb
sub
dec
sub
cmpsb
cmp
push
mov
popl
sub
std
push
xor
and
clc
decl
xchg
test
loopne
daa
insl
mov
leave
or
in
pusha
xor
lahf
test
nop
xchg
popf
scas
lret
mov
stos
cmp
xlat
and
ret
sahf
xor
and
data16
sahf
mov
mov
sub
flds
adc
jecxz
pop
or
stos
xor
sbb
lret
xlat
push
int
or
shl
inc
lds
scas
subb
rcrb
enter
mov
fs
mov
and
lahf
fwait
and
sbb
data16
xchg
das
cmp
ja
jns
loope
xor
pushf
cmp
lea
push
dec
jl
ja
pop
pop
test
mov
imul
jle
push
jle
xor
stos
test
mov
cltd
mov
int
ret
mov
pusha
sbb
sahf
pop
nop
nop
dec
dec
mov
dec
ljmp
xorl
fistps
int3
sahf
mov
fimull
mov
roll
cs
or
inc
push
lret
inc
rcrl
pop
xchg
xchg
push
ds
loopne
aam
and
xchg
dec
sar
add
popf
hlt
jecxz
call
sahf
shll
pop
int3
daa
in
and
push
cmp
xchg
mov
mov
repz
testb
fdiv
sti
in
add
lock
mov
mov
sarl
dec
jecxz
xor
mov
jecxz
stos
in
insl
dec
sbbl
enter
xchg
xor
jns
xchg
jg
sbb
jno
sar
iret
stc
and
adc
jbe
inc
xchg
mov
inc
gs
shrb
cmp
nop
cmc
jmp
fldcw
lock
xchg
add
pop
jb
clc
mov
dec
cmpsb
insl
inc
clc
jns
orl
js
and
test
lahf
les
aaa
xchg
xchg
inc
loop
mov
fsts
cmp
xor
add
jno
pusha
jne
dec
in
aam
sbb
cld
pop
repz
bound
out
push
clc
inc
fwait
xlat
fmulp
push
insb
pop
sti
jle
sub
inc
es
push
adc
sbb
pop
adc
mov
dec
pop
jo
add
mov
cmp
xchg
sbb
mov
pop
mov
leave
jnp
sbb
xlat
addr16
and
inc
outsl
fldt
jmp
cwtl
insl
in
add
or
subl
push
mov
popf
shll
mov
nop
adc
das
hlt
stos
imul
fdivrs
je
sub
rsm
cli
xchg
lahf
xchg
push
clc
jb
rcr
outsl
fidivrl
and
inc
sbbl
mov
test
shr
scas
test
push
popf
mov
add
hlt
subl
xor
in
out
idivb
sub
fdivr
inc
cld
std
push
aas
loop
pop
imulb
mov
mov
adc
adc
push
push
push
insb
adcl
movsb
add
xor
mov
pop
fiaddl
das
lea
divb
idivl
testl
outsl
sarl
cmp
mov
pop
xor
push
shrl
pop
sahf
and
bound
icebp
push
clc
mov
sub
mov
in
shll
cwtl
adc
jns
fisubl
xchg
sbb
xor
je
adc
push
and
das
adcl
lret
or
dec
jns
into
fcmovbe
cmp
mov
push
sub
adc
inc
add
mov
add
xchg
jp
pop
inc
adc
sub
es
sub
mov
adc
and
cmp
shrb
fxch
push
xchg
mov
inc
mov
lods
rcll
and
mov
jb
fldl
pop
sub
lods
or
inc
mov
sub
daa
inc
jae
adc
and
fisubrs
mov
push
push
mov
mov
shl
add
pop
adc
clc
jg
lcall
xor
push
lret
test
xor
stc
in
int
push
cmp
cmp
nop
mov
adc
jno
repnz
xchg
imul
test
imul
push
dec
jp
shr
or
add
outsl
aam
sbb
dec
lods
push
movsb
hlt
jo
lcall
adc
add
push
jne
icebp
inc
rcr
sub
add
nop
scas
jns
loop
push
mov
popf
cs
xchg
aaa
mov
sbb
testl
mov
bound
mov
jmp
jmp
sbb
outsb
bound
mov
in
stos
fdiv
loop
adc
mov
in
or
xchg
push
mov
outsl
aam
movsb
lahf
loop
pop
add
mov
int
out
push
jle
sarl
xchg
cld
ss
push
push
repz
push
lret
aas
cld
xchg
sbb
mov
xchg
and
fsubr
lahf
sub
nop
out
in
movsb
jp,pt
daa
jmp
lret
clc
mov
mov
xchg
lret
orb
test
sahf
lcall
mov
dec
xchg
rorb
xchg
repz
in
mov
mov
push
sbb
or
mov
enter
lret
jne
mov
push
pop
fbld
push
cld
inc
xchg
aad
fstl
add
dec
js
mov
cmp
in
lahf
xor
sbb
xor
xor
stos
pop
sub
popf
movsl
add
jecxz
xor
cltd
aaa
outsb
jbe
mov
jl
aam
mov
sub
pushf
and
int3
sub
imul
or
sbb
jg
out
add
testl
rclb
pop
sub
jge
lods
pop
ret
and
call
lahf
cmp
jbe
lds
mov
cmc
ljmp
scas
mov
loope
pop
push
adc
loop
adc
pop
ret
fmuls
loopne
sbb
lds
out
jns
outsl
repz
sahf
std
test
xlat
sahf
add
out
fcoml
pop
or
mov
dec
mov
mov
sbb
sbb
mov
pusha
adc
inc
fidivs
ficoms
pop
jo
push
dec
testl
decl
ret
lret
jb
mov
das
sbb
cld
testl
jl
cmp
inc
dec
out
scas
xor
mov
call
jno
insb
pop
lcall
xor
clc
or
sbb
pop
jns
daa
xchg
ror
arpl
cli
xchg
pushl
inc
mov
dec
pop
inc
sarb
std
pop
inc
call
into
inc
cmovo
loop
fildll
push
inc
lret
mov
xor
fimuls
in
xor
adc
adc
sbb
jnp
dec
add
xchg
sbb
jo
jg
jp
leave
sbb
jne
mov
adc
jl
push
ljmp
enter
mov
xchg
adc
fldcw
cmp
insl
dec
shl
adc
movsl
pop
pop
cmp
jnp
push
mov
cmp
jl
inc
mov
xor
mov
idivl
adc
pop
inc
cmpsb
mov
sbb
xchg
xchg
cmp
or
mov
and
sub
popa
dec
sub
mov
pushf
xchg
jecxz
xchg
inc
or
jle
mov
decb
mov
or
cwtl
test
loope
jb
pop
mov
xchg
lock
push
hlt
popa
orb
or
push
cli
sahf
or
push
push
lods
sub
jle
sbb
test
in
shll
adc
mov
inc
cmc
inc
push
lret
pop
mov
sarb
frstor
mov
xchg
pop
lcall
xchg
fistpll
inc
test
mov
adc
lock
lret
jge
lea
stc
out
incb
pop
xor
sti
iret
adc
mov
out
lods
inc
push
fldenv
xor
push
jp
xor
dec
sarb
imul
pop
mov
test
xor
call
js
ljmp
mov
lock
push
jl
xchg
out
lret
iret
add
lahf
test
cmpsl
jl
and
stc
dec
in
mov
je
fnstenv
cmp
mov
sbb
inc
or
adc
jo
mov
cltd
test
fdivs
cld
xor
add
mov
push
mov
mov
icebp
adc
push
cmc
mov
adc
addr16
mov
pop
and
xchg
cmp
repnz
add
jno
hlt
mov
cmp
scas
cmp
daa
mov
dec
fisubrl
je
push
pushf
cmpsl
pop
pop
test
mov
mov
stos
sbb
stos
add
xchg
scas
sbb
ficoml
mov
mov
mov
mov
scas
cmc
subl
mov
mov
sti
xchg
fisubl
inc
fnstsw
out
enter
jl
inc
cmp
iret
outsl
push
notb
lods
je
daa
nop
xor
fisubs
add
cmp
fdivs
imul
outsl
clc
repz
std
scas
aas
jne
add
and
loop
insl
dec
notl
test
in
test
sarb
stos
cli
or
lds
loop
imulb
stc
test
iret
std
mov
out
mov
and
dec
loop
mov
push
mov
mov
stc
dec
sub
rcrb
insb
cltd
dec
mov
in
inc
mov
jmp
shll
les
lock
add
hlt
inc
lahf
pop
mov
push
sub
push
loopw
lods
repz
roll
sarl
and
lods
pushf
lahf
xor
cmp
gs
imul
pop
es
insl
es
divb
jmp
ljmp
test
jmp
mov
cld
push
lods
sub
push
mov
adc
jg
adc
adc
cmp
sbb
mov
ljmp
int
cltd
aaa
sysenter
scas
cs
cmp
jns
cmp
mov
mov
push
xor
or
lret
cli
pusha
repnz
mov
and
adcb
out
sbb
mov
test
decb
push
ret
xchg
and
aam
push
mov
addb
pop
inc
pop
sub
loop
jo
push
fldcw
in
incl
test
and
push
mov
mov
xchg
inc
imul
ret
add
add
xchg
clc
xor
cmpsl
xchg
dec
or
xor
dec
jnp
ds
mov
jmp
jne
push
xor
xor
adc
lds
gs
int
dec
je
fsubrp
sbb
pushf
fld
and
pop
scas
inc
ret
jmp
sahf
fwait
push
xor
aam
xor
dec
lods
iret
addr16
dec
movsl
sbb
adcl
jecxz
and
mov
jle
inc
je
xchg
fs
jae
testb
lods
pop
sub
ret
jp
bound
lret
push
jl
sub
fnstcw
lea
js
add
orb
pop
icebp
push
popf
mov
dec
mov
addr16
inc
lods
adc
pusha
jb
loop
outsb
pop
lods
dec
out
mov
andl
jo
imul
cmpl
mov
xchg
stos
jmp
xchg
aaa
xor
dec
outsl
mov
outsl
adcl
sbbl
stos
mov
test
xor
gs
mov
mov
rolb
shl
sbb
test
fs
fisubrs
test
jp
push
jns
aas
jle
adc
sbb
fidivs
jmp
bound
or
cmpsb
ss
js
or
enter
jle
push
and
sbb
sub
fwait
sbb
shrb
test
pop
mov
fwait
adc
cs
loopne
in
in
xchg
xchg
mov
fmul
addr16
call
xchg
or
js
cmp
std
sub
ficompl
cmp
mov
mov
inc
out
out
movsl
adc
push
mov
imul
pushf
xor
push
pushf
aaa
cmp
pop
push
outsb
sub
addr16
in
data16
cld
xchg
addr16
xchg
daa
sbb
or
add
xor
add
fdivs
dec
adc
sub
gs
fisubrl
mov
jno
mov
movsb
imul
push
push
data16
xor
mov
out
ja
push
pop
inc
mov
jae
fcoml
hlt
or
and
dec
cld
in
dec
inc
dec
mov
scas
sub
movsb
mov
mov
out
leave
push
or
push
pop
pop
push
push
mov
inc
xchg
lcall
xchg
arpl
fs
xchg
clc
std
sahf
adc
xor
and
xor
sbb
adc
aaa
cs
call
clc
jp
xchg
aam
mov
out
enter
push
repz
and
loopne
outsb
scas
jns
jecxz
les
push
jbe
push
jge
stos
imul
or
inc
dec
pop
push
push
and
jmp
mov
js
les
inc
int
out
xchg
add
dec
dec
jae
inc
addr16
xchg
xor
fadds
push
dec
lret
loope
popa
jbe
subb
stos
xchg
jg
call
jg
or
jae
adc
and
mov
sbb
pusha
push
push
into
insl
mov
test
std
and
sbb
outsl
xchg
sti
test
lcall
and
sub
lea
jae
inc
adc
push
or
xor
fmul
xchg
inc
stc
shlb
test
pop
push
push
es
enter
inc
lret
ljmp
cli
mov
hlt
or
mov
les
sbb
xchg
mov
pushf
xlat
dec
or
ljmp
dec
or
mov
inc
add
shrl
pop
es
xchg
sbb
add
gs
cmpl
leave
repnz
and
sbb
pop
inc
fwait
sbb
xor
insb
js
jnp
push
sbb
add
popa
sbb
and
dec
xlat
mov
and
jne
pop
ret
mov
sbb
jle
mov
push
scas
sub
es
push
add
daa
test
clc
mov
fmuls
jbe
addr16
into
aam
in
lahf
jne
xchg
push
xor
scas
shlb
adc
frstor
lret
or
fsubl
adc
cli
ds
jmp
inc
sub
mov
jnp
adc
stos
cwtl
cmp
bound
sbb
and
mov
roll
xchg
jl
mov
loopne
dec
mov
shrb
xchg
cmp
xor
push
subb
test
pop
jle
dec
stc
or
shrl
lock
lods
and
out
ds
mov
daa
cmpsl
push
andl
inc
ret
jg
iret
mov
pop
adc
pop
mov
rcrl
test
pop
cmpsl
push
insb
lcall
insl
movsl
xchg
movb
mov
repnz
lock
mov
dec
adcb
rcll
pop
pop
orl
pop
aam
push
xchg
pop
adc
mov
push
mov
xrelease
test
inc
mov
adc
and
cld
jecxz
xor
dec
xor
dec
jno
aaa
mov
cld
xor
cmp
push
cmp
test
addr16
mov
inc
outsb
jl
add
cmpsl
aad
maskmovq
idivl
adc
jmp
gs
cmp
sub
push
xchg
pop
in
push
shll
aas
push
lock
ficoms
rcl
cld
sti
ret
and
sar
lahf
out
ret
outsl
outsl
fldl2e
jne
insl
mov
outsb
lahf
inc
outsl
cmp
callw
adc
lret
mov
outsl
shlb
inc
fnstcw
daa
jmp
xchg
sub
insl
pop
out
andl
jns
in
mov
fsubrs
cmpsb
inc
inc
arpl
in
aas
sub
int
pop
dec
xor
lcall
dec
cli
push
mov
pop
in
push
sub
decl
out
xchg
leave
aas
mov
cltd
xchg
mov
add
aas
dec
inc
pop
add
push
lods
lret
and
test
stos
ror
inc
out
sub
mov
inc
jge
inc
push
sbb
dec
in
int
inc
jge
inc
push
mov
pop
fs
in
push
mov
scas
inc
repz
jge
push
fnstcw
into
push
cmc
mov
mov
cli
inc
stos
clc
rcll
jnp
jae
adc
rolb
out
xchg
lcall
jecxz
mov
or
or
xchg
cmp
and
insl
rcl
out
data16
das
mov
shr
mov
pop
test
pop
ret
daa
out
aam
pop
clc
cli
enterw
adc
sbbl
push
hlt
out
stc
movsl
xor
pop
jae
cwtl
ror
ret
movsl
mov
out
mov
setb
sbb
mov
xlat
sub
cmp
popa
push
loope
mov
fdivl
mov
mov
mov
popa
ret
sub
push
push
jmp
stos
inc
dec
cmp
stos
ja
xor
jne
ja
add
in
repz
mov
nop
sub
lret
aam
or
jmp
stos
lret
test
lret
icebp
sahf
popa
sahf
iret
push
sub
rcr
inc
jecxz
gs
add
scas
inc
and
or
mov
stos
dec
jnp
xchg
cmpsb
fadds
push
lods
nop
jns
mov
jle
les
test
pop
lods
testl
testl
cs
xchg
xchg
nop
arpl
dec
dec
mov
mov
mov
xchg
pop
lcall
mov
faddl
imulb
cmp
int
jno
es
int3
mov
daa
push
dec
adc
adc
pop
mov
leave
sahf
xchg
ljmp
fst
jb
xchg
xor
int3
and
jb
mov
das
test
jo
icebp
int
add
sbb
jae
pushf
insl
addl
pop
ds
movsb
int3
jmp
pop
sbb
add
paddusb
fs
push
cmpsb
push
rcll
jle
bound
lods
xchg
and
outsl
jl
adc
mov
aad
test
dec
push
inc
xor
fs
jno
mov
xchg
cmp
dec
pop
cmpsb
aaa
shlb
push
mov
pop
or
icebp
push
fsts
push
mov
inc
cmp
pop
cmpsb
nop
adc
pop
stos
adc
adc
pusha
insl
aad
sub
jle
and
in
ss
xor
add
dec
and
std
mov
and
cwtl
sti
outsl
jg
dec
jmp
dec
outsb
pusha
jo
sbb
lcall
enter
ret
and
mov
adc
insb
pop
and
xchg
jge
nopl
roll
add
jbe
inc
mov
add
jmp
mov
jl
aas
adc
mov
movsb
push
jl
or
jmp
das
aaa
mov
mov
mov
xchg
dec
mov
loop
iret
xor
lcall
nopl
push
out
xor
std
jle
pop
add
dec
les
loop
push
xchg
aad
xorb
mov
ljmp
push
adc
test
push
fwait
mov
lret
jo
xchg
inc
pop
repnz
cli
icebp
movsb
repz
int
addr16
aas
add
sub
and
sub
sbb
cmp
sub
xlat
int3
jmp
mov
cwtl
sarl
xor
cmpsb
lret
sbb
aaa
add
inc
or
sar
add
xchg
jge
pop
lret
mov
mov
addr16
and
int3
or
mov
dec
bound
add
lods
mov
ss
sbb
push
mov
shll
popa
dec
sahf
pop
cltd
icebp
ss
pop
lods
xchg
fst
push
jbe
push
cmp
dec
out
jns
pop
xor
or
repz
jge
ljmp
sbb
fwait
cmpsl
dec
adc
divl
in
pop
and
push
pop
fwait
and
push
mov
mov
fcmovnbe
push
fimuls
and
dec
dec
and
adc
push
aad
rcl
sbb
mov
lock
test
xor
cld
push
xor
cli
inc
popf
inc
fstl
cmc
push
mov
addb
sbb
mov
push
fsubp
cmp
fimuls
inc
shlb
inc
testl
lcall
sbb
pop
jne
xor
les
dec
add
js
roll
push
inc
insl
out
arpl
cmp
ds
fprem1
jae
jb
cli
mov
xchg
shlb
push
xor
or
lods
push
sahf
sub
or
jg
dec
cltd
adc
mov
push
cltd
inc
jnp
xor
aas
aam
les
cmpsl
pop
inc
add
std
add
inc
and
sbb
and
stc
imul
ret
cmp
or
jmp
fildl
xor
add
rcrb
dec
mov
mov
or
jmp
fildl
xor
add
push
and
dec
xor
mov
or
jmp
fildl
xor
add
rcrb
dec
mov
mov
or
bound
fildl
inc
xor
bound
fcoms
enter
call
fstpl
int
pop
sub
js
push
cmp
sub
fcoms
enter
call
inc
mov
xchg
dec
xchg
push
cmp
sub
fcoms
enter
call
inc
mov
xchg
dec
movsb
or
inc
leave
jo
imul
pop
enter
lcall
je
bound
in
cmp
xchg
pop
sbb
push
pop
je
or
inc
or
mov
pop
in
scas
xchg
cmc
dec
in
mov
sbb
mov
pop
inc
xor
pusha
loopne
sbb
movsb
pop
xchg
and
mov
jp
sub
and
cwtl
push
cwtl
inc
inc
jg
xchg
pop
js
jno
and
pusha
daa
cmp
mov
sub
faddl
addr16
push
loope
xchg
test
xlat
fcomps
lock
sbb
inc
std
and
or
sub
xchg
cmp
inc
sbb
aaa
call
inc
mov
xchg
dec
xchg
push
cmp
sub
popf
jbe
data16
adc
xor
adc
adc
out
sahf
sbb
add
jge
popa
cmpb
fstpt
imul
in
mov
repnz
cmc
cmp
sub
push
dec
xchg
sub
xchg
push
jmp
inc
mov
xchg
dec
xchg
push
cmp
sub
fcoms
enter
call
inc
mov
xchg
dec
xchg
push
cmp
sub
fcoms
insl
das
inc
pop
int3
loopne
mov
mov
sti
mov
std
lret
pop
mov
loopne
loop
pop
pop
mov
pop
xchg
mov
mov
add
in
scas
aas
lret
xchg
insb
nop
sub
std
shl
xor
push
push
das
pop
dec
xchg
lds
push
add
jg
stc
mulb
push
cs
xchg
shll
adc
addr16
add
mov
add
dec
loopew
cwtl
jb
sub
cs
dec
ret
out
inc
sbb
enter
dec
stos
xor
movsb
sbb
fs
xchg
fsubs
or
add
stos
inc
and
push
adc
pushf
rcr
out
test
xchg
aas
and
inc
jb
xchg
ror
inc
insb
fidivs
movsb
add
adc
loope
arpl
jbe
add
and
cmp
les
les
inc
inc
loop
xchg
mov
outsb
adc
mov
cltd
std
mov
sahf
inc
mov
enter
jecxz
popa
lods
mov
inc
push
out
sub
fisubs
ljmp
jl
roll
sar
cmp
xlat
clc
in
scas
inc
leave
loope
push
inc
test
jge
add
pop
out
imul
push
addb
dec
push
ljmp
imul
sbb
lret
push
or
adc
hlt
lahf
rorl
sbb
fwait
test
idivl
lahf
mov
push
or
jmp
nop
cmc
std
mov
jle
aaa
sub
stos
stc
mov
jns
push
xchg
add
xor
sbb
addr16
or
cmp
push
scas
adc
movb
das
xor
push
fucomip
faddl
dec
loopne
cmpsb
jecxz
xchg
in
test
push
push
lods
cmpb
lds
inc
inc
inc
decl
jge
sub
mov
jg
call
and
sub
stc
push
xor
js
pop
notb
pop
stc
insl
push
lahf
pusha
addr16
cmp
jp
ss
push
mov
filds
sub
divl
jne
inc
jl
in
push
frstor
stc
adc
xlat
inc
je
nop
push
pusha
cwtl
pop
das
sbbb
and
popf
inc
inc
mov
clc
int
cmp
filds
sbb
or
popa
popa
and
xchg
dec
addr16
xor
insb
ja
cmp
jns
push
sub
jle
dec
mov
dec
jo
sbb
jg
jb
cmp
aaa
jns
mov
stc
stos
sbb
inc
mov
into
das
xor
out
fs
and
mov
inc
mov
loopne
inc
xchg
outsb
push
jmp
shl
es
mov
xchg
adc
sbb
popa
xchg
clc
add
fs
jo
ret
imul
mov
jecxz
mov
or
pop
fidivs
or
cli
aaa
subl
adc
add
cs
lret
and
negl
mov
lds
jne
inc
pop
mov
stos
fsubl
adc
out
push
mov
rorb
aad
push
lods
mov
xchg
add
xchg
jno
jns
inc
mov
inc
xchg
xlat
ds
ja
lahf
mov
sbb
sti
dec
aaa
push
sub
xchg
enter
xlat
ficoml
scas
lock
out
sbb
dec
aas
outsl
fistps
xchg
xor
lea
lahf
push
out
out
bound
lret
mov
out
cmpsb
adc
loop
or
paddb
cltd
push
mov
aam
xor
jmp
mov
icebp
push
rcrl
mov
jne
in
or
stos
ljmp
test
fwait
test
jno
das
push
ja
jg
lods
xor
sbb
sub
nop
fmuls
nop
dec
cmp
xchg
inc
jge
nop
leave
adc
mov
mov
jne
hlt
movsb
test
pop
inc
mov
or
jp
jmp
push
inc
lods
dec
ret
cmp
adc
jne
das
lret
lea
std
pop
dec
sbb
icebp
adc
sbbl
jae
and
push
pop
stos
enter
shr
mov
or
sub
filds
popf
sub
jp
mov
cld
and
data16
dec
hlt
arpl
lcall
xor
lea
call
dec
rcrl
scas
loope
mov
jg
int
mov
ja
int
mov
jp
andl
fisttpl
sub
addr16
mov
cmp
ljmp
movntps
hlt
imul
and
mov
stos
mov
lcall
andb
push
mov
xor
lock
sub
sub
mov
adc
mov
dec
shlb
pop
pop
andl
aad
mov
pusha
push
fistps
nop
push
clc
lea
fisttpl
mov
inc
daa
cmpsb
xchg
lock
push
cs
adc
in
test
xchg
cwtl
stos
cs
out
push
inc
cltd
pop
mov
mulb
popf
cmc
arpl
sub
jl
pop
push
xchg
stos
outsb
pusha
shlb
mov
std
leave
int
lret
sbb
jp
outsl
out
xchg
scas
shll
mov
add
adc
mov
shrl
push
out
lea
rorb
mov
das
roll
vmovhps
adc
sbb
jns
xor
daa
popf
test
loopne
dec
int3
dec
mov
mov
hlt
push
negb
inc
gs
cmpl
cmp
ret
sbb
movsl
pop
push
aam
scas
and
push
bound
dec
daa
cmpsl
xchg
js
jmp
mov
xorl
je
clc
mov
sbb
loop
mov
cmpsl
outsl
mov
sahf
decb
mov
lock
mov
and
cmp
add
js
jbe
loop
mov
jmp
push
sub
inc
pop
jne
cmp
jl
dec
sub
aad
dec
leave
or
sub
jnp
es
mov
push
fistpll
mov
mov
or
sub
fists
arpl
dec
jae
mov
jo
out
inc
arpl
out
xchg
stos
jl
sbb
cwtl
push
push
pusha
jns
dec
icebp
mov
mov
in
pop
adc
movsl
adc
or
repz
cli
popl
inc
sbb
mov
cs
push
hlt
pop
jle
mov
dec
into
ss
clc
inc
cmp
imul
aam
mov
repnz
add
jo
push
xchg
ss
jo
fwait
cli
or
push
into
cmp
lds
out
pop
scas
push
inc
aaa
adc
movq
sub
and
mov
xchg
je
mov
mov
jecxz
out
push
xchg
pop
popa
mov
jl
adc
popa
test
pop
or
mov
cli
pop
sti
cs
and
sub
mov
test
mov
test
dec
out
ret
ljmp
adc
jo
mov
push
adc
lock
je
sub
and
mov
loop
inc
es
inc
sub
pop
xchg
jge
mov
test
mov
cmp
enter
cmpl
jbe
fs
jno
out
cmp
loopne
enter
lcall
sbb
or
icebp
cs
dec
or
rorl
lea
add
push
fucom
jb
sbbb
cli
dec
cmp
fbstp
cmpsb
xor
sub
xchg
mov
dec
int3
xor
jecxz
xchg
mov
in
push
mov
es
loope
dec
movsl
adcl
out
imul
nop
xlat
or
les
ret
jp
sub
xchg
ja
popf
adcl
out
xchg
push
aad
xchg
mov
rclb
out
fldl
jbe
fld1
insl
mov
push
jne
ret
outsb
test
lret
fcomps
mov
mov
xor
push
cltd
lcall
push
gs
sbb
mov
movsl
add
pop
rclb
mov
notl
pop
xor
and
addr16
pop
xor
sbb
pop
jbe
jno
roll
lods
inc
inc
int
cmpl
lahf
inc
ret
pop
sub
jbe
pushf
mov
loope
inc
pop
xor
push
adc
es
sbb
cmpsl
out
jbe
out
adcb
push
test
lahf
shr
scas
sub
push
pop
movsb
les
das
push
repz
sub
xor
xchg
leave
movsb
clc
movsb
dec
pusha
leave
lret
xchg
out
or
jne
push
mov
cld
xchg
cmp
sbb
cmp
cwtl
cmc
mov
sbb
jp
andl
sub
out
jp
inc
or
and
andl
sbbl
and
pop
sub
mov
sti
pop
pop
andps
ljmp
imul
fnstcw
mov
lcall
jns
sub
outsb
pushf
ret
jno
lock
lock
pushf
push
xor
mov
les
push
outsb
or
dec
cmp
xchg
dec
lahf
sub
leave
hlt
mov
add
rorb
xchg
xor
adc
fcom
sbbb
push
adc
repnz
and
lahf
mov
nop
outsb
xchg
xor
cmp
jl
and
fldl
cli
repnz
dec
xchg
dec
fsubp
add
test
hlt
stos
sbb
sbb
or
adc
and
adc
sbb
popa
pop
adcl
movsb
in
sbb
dec
xlat
add
mov
add
out
insb
inc
pop
inc
fcomps
xchg
add
ds
rolb
mov
gs
into
jbe
mov
out
push
pop
pusha
and
push
add
cmp
scas
shll
fldt
outsb
mov
mov
rcrb
in
lahf
arpl
scas
push
jg
add
pusha
ja
popa
xchg
xchg
add
insl
xor
adc
sub
es
jle
pop
push
test
pop
fwait
jg
fisttps
fimull
mov
mov
addl
pop
cmp
adc
scas
adc
rorb
push
loopne
mov
repz
sahf
inc
push
xchg
jle
test
fwait
sub
push
movsb
mov
hlt
lahf
adc
call
es
mov
sub
cmp
lahf
mov
cltd
aaa
xor
xor
test
push
jmp
jl
daa
jne
rol
add
es
jge
sbb
and
testl
les
popf
ret
cli
mov
leave
daa
cmp
gs
pmulhuw
push
int
adc
gs
addl
add
pop
dec
ja
dec
xchg
push
int
loope
sti
loopne
pop
push
fnstcw
out
popf
pop
jb
scas
xchg
mov
cld
movl
clc
xchg
leave
repnz
rcrl
mov
dec
push
or
cwtl
mov
mov
les
add
jb
mov
sbb
mov
cltd
xor
adc
or
shl
xlat
inc
mov
jecxz
jmp
pop
xchg
xchg
sbb
push
shl
mov
dec
lret
sub
test
addr16
mov
cmp
xor
push
jo
cmc
push
or
in
sahf
ret
cwtl
roll
and
inc
mov
cli
mov
enter
fnstcw
clc
ret
mov
dec
fcoms
bound
sbb
movsb
imul
cmp
mov
mov
mov
mov
das
fisubl
jl
ja
pop
clc
cmpl
push
orl
fimuls
fstl
icebp
outsb
scas
jg
xor
and
lods
sbb
ss
add
sub
xor
push
adc
loope
cs
subb
orl
pop
movsl
call
pop
leave
sub
mov
out
adcl
aad
sub
push
loop
test
sub
sub
pushf
insb
push
push
stc
cmc
mov
xor
cwtl
push
cld
imul
nop
std
dec
xchg
testb
pushf
mov
cld
dec
test
inc
and
sbb
mov
out
mov
and
mov
push
add
lea
stos
dec
xlat
dec
xlat
and
pop
xchg
dec
xor
xor
dec
or
pop
cmp
mov
lahf
xchg
push
subb
pop
in
scas
xchg
xor
imul
pop
and
cmp
popf
jns
in
and
jns
enter
push
ret
xlat
sbb
insl
outsb
adc
inc
sub
lret
out
arpl
push
mov
mov
xor
jl
addr16
mov
ds
cmp
sub
mov
mov
scas
pop
aaa
inc
fisttpll
jmp
popf
lcall
leave
idivb
scas
pop
test
rcl
inc
add
fildll
adc
and
pop
pop
loop
sarl
xor
leave
loope
roll
pop
movsl
iret
jp
fs
popa
xchg
in
popf
dec
add
ret
fsubrl
sub
cmpl
and
test
mov
xor
mov
or
imul
int
sti
jge
xor
rcrl
xor
loopne
sub
in
fimuls
xor
dec
or
sbbl
jmp
sub
lret
movsb
cmpsb
mov
mov
mov
icebp
mov
fstps
push
ja
push
mov
push
and
idiv
add
inc
rcrb
mov
std
jae
and
lods
fdivrl
mov
or
xchg
dec
aam
mov
push
pushf
cs
insl
adc
loop
lret
cmpsl
xchg
xor
mov
lret
jne
jge
cmp
push
pop
mov
hlt
adc
test
stos
imul
rolb
sbb
push
scas
pop
stos
pop
sub
sbb
mov
xor
cmp
cmc
xor
jne
mov
psubusw
mov
in
fdivs
fucomp
mov
outsb
lahf
and
push
fldl
aam
xchg
inc
lcall
pop
adc
mov
in
out
and
scas
jae
sub
jl
cmp
mov
js
pop
push
xlat
sbb
fdivs
test
aam
jne
cmp
aaa
sbb
pop
pop
adc
js
mov
fs
daa
sub
cmpsb
mov
dec
ret
mov
or
ljmp
adc
push
or
ds
sub
sub
or
dec
insl
aam
mov
push
mov
adc
add
inc
es
push
jb
and
sub
shll
jle
mov
fucomip
insl
push
movsb
push
movsl
pusha
lret
cmp
cltd
xor
jmp
mov
pop
nop
fcompl
mov
addr16
push
jns
out
and
out
ss
mov
cmp
sbb
add
push
sub
push
or
dec
cwtl
cs
subb
push
xchg
mov
jmp
mov
jecxz
pop
loopne
mov
js
lret
lcall
ds
and
mov
loope
xor
inc
cmp
out
and
enter
aaa
sti
xor
cltd
cmp
mov
cmc
leave
imul
sub
mov
add
dec
adc
xlat
mov
out
js
push
push
das
fisubl
lods
jnp
xchg
dec
xor
adc
mov
mov
push
into
mov
dec
mov
sbb
aam
dec
test
int3
ljmp
push
test
int3
push
and
adcb
mov
jo
in
push
jno
aam
sbb
jmp
add
icebp
pop
pushl
and
sti
aam
pop
dec
jge
addr16
xchg
sahf
gs
iret
adc
adc
repnz
add
div
jg
and
pushf
push
pop
sbbl
lret
mov
fwait
iret
jbe
fisubrs
lret
jb
sub
pushf
fstpl
fmull
nop
push
cld
push
cs
xchg
or
xor
out
mov
cmp
sbb
rolb
in
sbb
lock
sub
push
sbb
stos
sub
imul
xor
pop
jae
xchg
test
lsl
leave
mov
imul
jle
stc
std
sbb
fisubs
mov
dec
add
icebp
test
out
out
push
jg
insl
lods
insl
lcall
mov
ss
je
loopne
xchg
pop
lds
jne
frstor
sbb
popa
mov
xchg
push
in
andl
iret
jo
xchg
mov
jmp
addb
mulb
bound
test
enter
adc
lahf
ds
pop
jmp
dec
mov
jo
jp
or
jmp
imul
mov
test
mov
cwtl
pop
push
adc
loope
pushf
stc
add
xlat
call
inc
test
lods
jle
jns
pop
sbb
cmc
cmp
xchg
dec
mov
mov
push
or
ficoml
stos
jle
lahf
xchg
xlat
mov
lock
lods
pop
enter
insl
cmc
add
aaa
sub
push
mov
pop
inc
mov
jno
gs
popf
notl
out
jmp
andl
in
mov
cmc
lret
mov
test
jne
mov
jns
mov
mov
xchg
lcall
cmp
hlt
mov
pop
addb
add
and
ret
popf
mov
ficoml
out
adc
lcall
dec
ss
mov
sahf
cli
and
dec
cwtl
mov
push
loopne
hlt
cs
mov
inc
rorb
fisubl
mov
test
ret
adc
shll
add
push
dec
mov
mov
jg
insl
js
add
mov
pop
in
lret
pop
mov
std
mov
repz
cmp
inc
fdivs
fidivl
xchg
cmp
test
lock
mov
or
aad
nop
pop
mov
xchg
movsl
sti
push
nop
xchg
mov
inc
es
lock
pop
leave
jo
dec
inc
xorl
jge
mov
inc
shll
addb
xor
mov
jnp
in
adc
fldl
incl
cli
push
sub
paddw
inc
insl
out
mov
mov
aad
xor
jecxz
gs
mov
lock
rcll
and
popa
xchg
les
ds
pop
mov
pop
orb
outsl
rclb
xor
into
sahf
add
xchg
xchg
mov
jae
stos
sbb
inc
out
iret
lods
add
fldenv
jne
sub
pop
push
out
push
dec
add
mov
lods
enter
sbb
pusha
or
mov
mov
pop
add
jmp
add
or
faddl
xchg
out
push
pop
mov
addr16
icebp
std
leave
inc
adc
das
or
test
mov
ret
push
sahf
mov
fcompl
push
pop
pop
xchg
es
sbb
sti
outsl
dec
nop
mov
icebp
jg
add
scas
cmpsb
cmp
loope
inc
mov
in
push
dec
pop
sbb
jmp
testl
rcrb
int
test
pop
cmp
xchg
jl
push
ret
and
adc
sbb
push
shll
sti
and
lods
je
jmp
xchg
dec
mov
xlat
push
add
das
pop
call
inc
sub
jecxz
and
mov
dec
push
pop
lds
pushl
xor
mov
jecxz
push
cmp
sub
or
jne
sti
cltd
add
lret
xchg
imul
dec
cmpsb
pop
xchg
inc
aas
xor
mov
adc
lret
mov
adc
mul
es
push
pop
mov
pushw
pop
cmpsb
jnp
les
dec
out
aas
or
cs
mov
adcb
aaa
popa
lret
inc
cmp
xor
xlat
sarb
or
inc
and
add
sub
xchg
adc
js
adc
xor
inc
andb
adc
xchg
in
lds
enter
iret
add
imul
xchg
divb
je
cmp
negl
mov
shl
stos
loopne
dec
das
subb
adc
adc
shll
xor
add
fnstenv
gs
xchg
cmp
push
insb
pop
jno
into
cltd
sti
shrb
dec
pop
sub
xor
test
outsl
xchg
pop
adc
push
add
test
xor
inc
int3
adc
mov
js
jmp
divb
cmp
pop
out
cmp
push
inc
add
pop
mov
or
inc
lods
xor
movsb
inc
test
sti
mov
sub
call
push
pop
div
test
or
out
push
sbbl
xchg
in
jae
xchg
sti
mov
adc
sub
adc
dec
shl
xchg
ret
test
push
aaa
call
inc
mov
xchg
dec
xchg
push
cmp
sub
fcoms
enter
call
inc
mov
xchg
dec
xchg
push
cmp
sub
fcoms
enter
call
inc
mov
xchg
dec
xchg
push
cmp
sub
fcoms
enter
call
inc
mov
xchg
dec
sub
outsl
pop
cmpb
or
sbb
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
int
fisubrs
mov
nop
iret
add
das
outsb
pop
jle
push
jg
outsl
cs
cs
stos
mov
decb
scas
fistpll
das
nopl
dec
adc
outsl
cs
ds
jbe
sub
jl
es
nop
out
mov
mov
or
insl
sbb
sub
xor
mov
notl
ljmp
insl
pop
xor
repz
cmp
jg
aam
adc
in
and
outsb
ret
jnp
mov
xlat
xor
mov
or
cmpsb
cs
rcrl
mov
call
outsl
cmpsb
sub
lcall
jle
push
push
outsl
out
add
adc
mov
or
sahf
out
push
mov
xor
pop
shr
fwait
sub
jg
xchg
das
push
ds
xor
sar
into
iret
arpl
jb
push
and
out
outsb
rcr
outsb
loopne
or
push
outsl
pop
xor
out
popl
iret
jno
ja
push
xlat
mov
out
mov
cmpl
cs
cmp
scas
out
lahf
decb
scas
fistps
iret
mov
les
sbb
dec
cmovbe
outsl
sbb
ds
mov
xchg
ficompl
or
jnp
cmp
or
pop
add
cli
lahf
out
sti
mov
sub
outsb
dec
push
push
adc
inc
or
mov
in
lods
ljmp
mov
das
outsb
pop
jle
push
jg
outsl
cs
ds
into
mov
decb
scas
fistpll
das
outsb
pop
jle
push
jg
outsl
cs
ds
into
mov
ds
inc
mov
pushf
daa
in
repz
jmp
mov
clc
aad
std
adc
jge
inc
stc
mov
bound
fimuls
cwtl
ret
xchg
mov
dec
ret
sti
add
icebp
movsl
or
sub
pop
cmp
iret
jno
out
test
adc
pop
dec
pop
dec
or
pop
push
lret
lret
sub
iret
inc
jns,pn
and
mov
int
insl
subb
mov
pop
mov
imul
xorl
mov
hlt
mov
pop
jmp
fistps
push
lock
fistl
jle
gs
push
pop
push
clc
mov
push
sbb
inc
sbb
pop
adc
imul
test
cltd
or
sub
cmc
add
xchg
jmp
into
repnz
xchg
hlt
jno
sarl
jae
mov
test
fs
push
fs
cs
add
pop
inc
lret
ljmp
fcomp
pusha
xor
jne
dec
cmpsl
mov
sbb
ja
jle
loopne
xor
jae
test
pop
stc
pop
xor
push
movsw
gs
xchg
xor
insl
push
shl
lds
fwait
js
or
push
sub
scas
fs
sub
test
mov
lds
arpl
int
shlb
pop
cltd
pop
jns
mov
pop
das
add
leave
jne
mov
or
popf
cmp
sub
dec
push
adc
faddl
mov
mov
das
sub
out
cmpsb
xor
push
rcr
in
xchg
sub
movsb
arpl
test
push
mov
loop
lcall
lahf
sub
cmp
cs
jno
mov
cmp
in
pop
inc
or
and
mov
ret
daa
ljmp
bound
inc
je
fstpt
sbb
or
xchg
ss
jae
xorb
push
jno
push
sbb
xor
scas
jmp
ljmp
mov
ljmp
lds
ja
fnstenv
push
sub
loopne
inc
push
out
popf
fisubs
pop
je
mov
aad
sub
sahf
xor
fistl
inc
fiaddl
andb
mov
and
cmp
fsubrl
jae
dec
xor
sbb
and
gs
std
inc
mov
in
fdivrl
xchg
sub
push
enter
mov
imul
mov
pop
iret
aas
sbb
shrb
ret
insb
push
negl
cltd
test
xchg
inc
cmp
sbb
jno
sar
sbb
and
mov
or
mov
shrb
sub
out
jae
aam
shlb
mov
data16
sbb
mov
push
lahf
mov
mov
pop
adc
nop
cmp
mov
xor
roll
cltd
sbb
push
ss
add
movsl
fisttps
jp
and
scas
mov
lcall
jl
int
fsubrp
cmp
mov
jbe
xchg
cmp
push
and
arpl
mov
lea
sti
pop
mov
sbb
ret
in
pop
in
or
jbe
xor
jecxz
clc
xchg
hlt
inc
test
cltd
jns
jno
fs
cmp
test
and
jmp
and
shr
pop
iret
xchg
iret
call
pop
or
dec
inc
sarb
inc
imulb
xchg
push
lahf
push
mov
push
insl
shrl
cli
pop
add
or
cmc
pop
outsl
jge
stc
lret
sahf
and
sbb
popl
sub
sbb
or
mov
iret
cltd
mov
dec
jne
cmc
mov
xor
or
cmp
xchg
cmpsl
dec
adc
sub
adc
mov
mov
sbb
negb
push
into
dec
pusha
dec
shlb
call
nop
xor
pop
jbe
pop
pushf
push
pusha
rcrb
ret
scas
cmp
subl
js
mov
sbb
sub
nop
dec
out
cld
mov
outsb
bound
jp
lcall
aas
sub
dec
mov
xchg
ja
mov
pushf
mov
mull
imul
mov
out
fisubrs
dec
aad
popa
pop
lock
adc
push
pop
inc
or
jo
push
push
stc
mov
jl
shrb
stos
dec
or
xchg
mov
in
negb
scas
outsb
or
jmp
movsb
int
push
in
test
sbb
mov
stos
push
dec
out
movl
and
and
stos
cmp
iret
sbb
cmp
inc
lea
movsl
cmp
mov
xor
cmp
repnz
pop
cmpsb
and
roll
mov
insb
jl
jb
sbb
rcl
or
pop
stos
cmp
xor
hlt
mov
push
aaa
xchg
push
add
jl
shlb
aad
icebp
stos
or
sbb
add
jmp
outsl
test
pop
add
xor
stc
out
dec
loope
stos
push
jle,pn
jg
aaa
mov
test
fstpt
and
pop
pop
mov
fstl
dec
xlat
xchg
push
dec
enter
pop
stos
jns
lret
mov
xchg
lret
push
loop
sbb
push
lahf
int
jns
jnp
loop
lret
mov
pop
testl
ret
inc
lret
negb
sbb
add
sbb
sbb
sbb
stos
lahf
std
pusha
mov
add
orb
mov
mov
mov
cmp
mov
pop
hlt
cmp
int3
idivb
mov
cs
jno
mov
jnp
in
test
cmc
shlb
std
cmp
fisubl
jmp
xchg
pushf
fs
push
jae
sub
idivb
dec
jl
mov
cmpb
or
stos
or
shl
outsl
lahf
sbb
daa
pop
sbb
inc
cmp
mov
fsubl
bound
adc
mov
sahf
xchg
mov
stos
jb
adc
xchg
push
sub
inc
mov
inc
dec
pop
xor
xlat
je
loopne
hlt
dec
nop
mov
xchg
mov
add
or
pop
pop
and
xchg
mov
cli
xchg
popa
and
rcrb
outsl
push
cmp
xor
subl
or
dec
or
scas
fsubrs
dec
jno
pusha
pop
jge
fiaddl
lds
push
pop
ret
inc
imul
xchg
lcall
les
repnz
dec
lcall
inc
mov
cli
lods
sub
jb
lret
mov
stos
sbb
xor
adc
stos
lret
push
imul
repnz
test
fs
mov
push
pop
test
add
mov
inc
pop
out
stc
cltd
sbbb
add
mov
mov
sarb
mov
mov
sub
add
mov
jl
jmp
add
out
leave
cmp
aad
push
pop
add
lret
outsb
idiv
sbb
lock
inc
in
test
inc
lods
outsb
pop
test
test
mov
movsl
xchg
xlat
ljmp
mov
add
dec
loopne
adc
outsl
jecxz
rorl
lcall
imul
bound
mov
rorb
faddl
mov
sub
dec
inc
cmp
mov
lret
pop
xchg
scas
push
push
sbb
subb
call
enter
movsb
pop
jne
pushf
repnz
flds
bound
fiadds
mov
cld
push
push
lret
loop
pusha
mov
testl
repz
mov
in
xchg
push
dec
add
inc
fstl
mov
dec
pop
dec
int3
xchg
in
iret
add
inc
loop
or
sbb
ja
adc
pop
stos
mov
mov
pop
sub
test
mov
call
sti
pop
bound
nop
lock
cltd
aad
mov
sub
into
gs
and
xchg
loope
outsb
adc
mov
dec
pop
jae
cmc
shr
inc
mov
cmp
jns
xchg
cmp
add
cmc
mov
jmp
jnp
lahf
add
push
jmp
sbb
sbb
aaa
pop
add
fcmovne
cmp
movsb
inc
lds
xchg
add
push
int
and
pusha
lds
mov
mov
stos
cmpsb
imul
cmp
xor
lret
testb
fstl
add
mov
jno
ret
adc
orps
push
jge
stos
add
loop
sub
test
mov
out
xor
pop
mov
lret
out
arpl
mov
addr16
lret
mov
and
or
pop
call
dec
adc
sbb
in
or
fisubrl
adc
or
mov
iret
rorb
cmp
flds
sbb
inc
and
pop
shlb
inc
js
xor
fbstp
call
xchg
loopne
add
test
dec
add
jno
and
adc
push
sbb
mov
idivb
or
pop
lret
mov
cs
sbb
sub
xchg
push
inc
lea
jp
or
sub
cld
jp
subb
cli
test
lret
sbb
cmpsl
ds
std
gs
xlat
cld
jb
imul
and
jge
into
jg
adc
or
out
jl
rorl
fstps
loop
push
push
fnstsw
or
mov
pushf
inc
leave
cmp
mov
and
pushf
mov
fbld
cld
dec
push
xchg
movsl
not
xchg
push
pushf
jbe
jp
shll
fstpl
dec
adc
xchg
pop
mov
sbb
stos
xor
xchg
daa
repnz
xchg
iret
push
filds
xchg
sub
negl
lahf
aaa
sub
pop
mov
xchg
insb
xor
das
test
test
iret
add
mov
addl
int3
cmp
mov
and
arpl
mov
lods
mov
sub
jno
cmc
in
mov
xor
or
in
and
sub
les
fsubs
mov
push
lods
dec
in
dec
mov
fwait
jmp
addr16
dec
and
jbe
stc
lret
push
jae
repnz
mov
imul
hlt
lret
mov
xchg
outsl
test
fisubl
pop
iret
popa
xchg
hlt
cmp
jl
push
inc
mov
mov
pop
mov
rorb
jae
push
mov
jmp
push
cmpsb
push
lahf
push
test
mov
js
jo
adc
xchg
mov
movsb
shr
leave
int3
push
push
loope
std
sub
stos
adc
sub
je
and
xor
mov
into
into
pushw
dec
cltd
mov
add
clc
lea
jbe
notb
pop
adc
xchg
dec
and
or
cmpl
inc
dec
jecxz
push
jge
ja
add
mov
es
and
xor
mov
xchg
fstps
mov
imull
and
inc
add
push
icebp
or
xchg
cld
push
ss
adc
sti
xlat
enter
xor
mov
xchg
mov
outsl
mulb
add
jl
push
sbb
js
aad
and
jp
xor
icebp
in
push
imul
pop
cltd
adc
movsl
jge
sbb
inc
mov
inc
cmp
inc
mov
mov
hlt
pop
sub
dec
pop
pusha
iret
pop
ss
movsl
repnz
call
lahf
mov
sbb
mov
shr
sub
add
cs
in
cltd
movsl
mov
dec
test
push
push
dec
inc
sbb
pop
scas
mov
mov
loop
lcall
cltd
add
stos
fwait
push
lods
inc
ret
mov
ficomps
lahf
jp
popa
or
xchg
xchg
sub
dec
xchg
mov
add
lcall
leave
jb
push
mov
mov
dec
hlt
push
and
adc
adc
test
mov
push
fbstp
sahf
xor
mov
enter
fcom
sbb
lret
or
xchg
ret
mov
mov
sbb
mov
cltd
idivb
scas
pop
arpl
push
pop
das
sti
inc
xchg
std
shrl
std
bound
mov
inc
test
xor
cmp
mov
mov
imul
in
xchg
jl,pn
pop
inc
and
lds
aaa
cltd
jbe
mov
pushf
inc
mov
sahf
jo
test
cmp
inc
sahf
lods
jne
cmpb
adc
mov
pop
out
lock
ret
cmp
ljmp
aas
imul
cmp
pusha
into
cmpsb
ljmp
iret
daa
fsubl
adc
sub
mov
adc
pop
mov
pop
mov
push
push
adc
rorl
rolb
dec
pusha
jne
jbe
sbb
imul
lea
das
push
int
into
loopne
std
int3
dec
pop
mov
in
test
fsubrs
out
pop
ret
loopne
mov
dec
stos
push
test
jge
inc
js
mov
dec
xchg
dec
jl
dec
push
push
outsb
cwtl
out
loopne
int
mov
bound
push
push
push
test
cmpsb
push
sarb
jmp
sti
popa
push
sbb
call
pop
or
jecxz
je
ljmp
mov
lcall
xchg
adc
pop
imul
out
ljmp
jl
in
sub
test
xchg
dec
mov
in
scas
vshufps
outsl
mov
into
outsb
leave
sub
pushf
hlt
mov
popa
into
push
xchg
pop
int3
jmp
cmp
sbbl
data16
sub
mov
stc
xchg
mov
daa
cs
jns
lcall
arpl
ss
and
sbb
sbb
cmp
in
pusha
fwait
ss
push
stos
or
push
mov
sbb
ret
lret
push
pop
cmp
or
notb
bound
loope
mov
imul
jecxz
xor
into
sbb
sub
jno
call
dec
stos
sub
mov
or
jge
ljmp
pop
arpl
psubusb
std
mov
add
add
or
push
inc
inc
subb
cmp
ss
sbb
sbb
fisubl
ss
jnp
sti
repnz
lock
cltd
xchg
xchg
ficompl
sub
cli
mov
orl
sbbb
xor
divl
xchg
xchg
mov
out
loop
hlt
fld
fadds
jnp
popl
mov
sahf
jb
es
mov
std
xor
aad
adc
mov
add
loop
push
mov
mov
scas
mov
push
imul
pushf
arpl
in
mov
and
negb
test
in
pop
test
ret
or
lahf
fldenv
jecxz,pn
xchg
sub
mov
mov
mov
icebp
mov
jg
ja
lods
jg
fimull
movsb
into
and
imull
shl
lods
add
in
or
pop
repnz
adc
sbb
sbb
xchg
lds
subl
ds
dec
mov
adc
scas
adc
fildl
popa
rol
ficoml
dec
in
xchg
mov
xchg
xchg
std
aas
or
lret
loope
fisubrs
cmpsb
xor
push
ret
aad
dec
fstpl
sub
xor
or
and
adc
mov
jnp
es
jle
leave
and
jo
lock
push
xor
jg
fcmove
sahf
mov
lret
nop
imulb
jg
into
mov
and
sbb
insl
adc
stos
ds
sti
mov
cld
push
xchg
int
and
std
jns
cmpsl
xchg
cld
cs
adc
add
std
in
aas
lret
dec
add
hlt
mov
stc
mov
fdivrs
adc
cli
jge
cmp
push
add
fdivl
data16
mov
in
mov
mov
sbb
xor
xor
in
xchg
mov
add
out
cmp
and
ja
mov
or
pop
mov
jg
insl
add
imul
fadds
cwtl
lret
out
sbb
out
jb
std
push
test
or
out
mov
fnsave
test
ljmp
test
shrl
adc
sahf
jne
xor
add
fcomp
inc
dec
jb
and
and
push
fisubl
mov
ljmp
out
ss
iret
jns
mov
andl
jge
sub
fcmovb
mov
imulb
xchg
jb
add
js
fimuls
xlat
or
es
mov
sbb
adc
push
adc
les
or
lcall
and
rcll
xchg
sarl
fstpl
ljmp
insl
xchg
cmp
inc
cmp
inc
cmp
dec
adc
icebp
mov
dec
xchg
push
inc
jb
dec
and
es
lds
or
aad
frstor
lds
push
xchg
repz
lea
mov
insb
cmp
push
xor
outsl
cmpsl
lret
loop
mov
std
imull
adc
lds
jecxz
popa
inc
xchg
sbb
adc
inc
pop
mov
push
outsl
add
mov
lock
outsb
pushf
adcl
stc
and
pusha
jp
dec
add
mov
xchg
enter
addr16
or
cmp
stos
daa
les
mov
cmpsl
nop
out
sub
ja
inc
rcrl
mov
dec
mov
mov
sub
fwait
mov
sub
sbbb
cmc
jbe
push
scas
orl
out
inc
clc
sbb
mov
add
xor
mov
inc
ja
leave
push
push
aas
pop
mov
testb
xchg
xor
mov
cmpsb
shll
add
pop
jp
ret
cmp
xchg
jmp
rcr
fs
out
cmp
rol
stos
nop
movsb
sbb
push
in
mov
daa
rcrl
test
pushf
jecxz
rorb
mov
jge
js
sbb
ljmp
jb
inc
ss
xchg
jae
aam
or
jbe
cld
hlt
lea
pop
xor
inc
out
adc
jo
and
in
insb
sub
add
daa
mov
sub
enter
dec
push
pop
scas
loop
sbb
orl
aam
and
not
pop
pop
hlt
scas
out
faddl
pop
idivl
call
or
xchg
dec
test
cmp
or
js
cmp
sub
jle
mov
adc
daa
lock
fnstenvs
add
rorl
mov
clc
into
outsl
out
mov
push
jg
enter
insb
pop
out
mov
lea
jmp
sub
xor
mov
addr16
test
leave
pop
sysexit
bndldx
sbb
out
mov
jns
mov
cmp
pop
push
sbb
stc
jge
xor
mov
call
pusha
hlt
add
pop
cld
in
fmulp
or
lods
fisubrs
cld
dec
aam
sbb
dec
test
call
xchg
xchg
push
jno
ljmp
cmp
insl
out
pushf
int
mov
pop
mov
mov
scas
cmpb
lahf
push
outsl
inc
stos
adc
rolb
adc
sub
sbb
popf
icebp
xor
push
pop
insl
cli
push
sbb
cli
mov
stos
andb
sbb
and
aas
xor
pop
out
adc
push
testb
adc
popf
sub
jns
inc
add
dec
scas
or
inc
sbb
pop
call
add
lock
ljmp
cmpb
imul
decb
fsubrs
cmp
int3
sub
jb
xor
test
sar
jo
mov
mov
adc
cmp
add
out
outsb
int
jmp
out
mov
push
and
push
xor
pop
ret
inc
or
xchg
add
jnp
aam
dec
cmc
adc
int
xchg
xchg
sbb
mov
sarl
adc
jg
scas
cwtl
lcall
xchg
andl
pop
fsubrl
sub
mov
add
mov
xor
outsl
mov
mov
adc
pop
std
js
add
pop
add
loope
pop
outsb
xchg
lea
adc
mov
iret
sarl
cltd
mov
js
xor
aam
inc
addl
cmp
fistpl
mov
test
jne
shlb
mov
lods
jecxz
add
push
addr16
mov
sbb
imul
ja
ss
lcall
icebp
popa
mov
add
cwtl
mov
into
into
inc
sbb
or
add
xchg
out
aad
movhps
push
insl
popf
jne
jl
push
and
pop
fwait
add
pop
jo
xchg
stos
inc
xchg
cmp
cli
mov
dec
out
loop
test
push
jl
lods
daa
sbb
sub
xor
test
lcall
iret
dec
aas
pop
das
outsb
pop
jle
push
jg
outsl
cs
ds
into
mov
decb
scas
fistpll
das
outsb
pop
jle
push
jg
outsl
cs
ds
into
mov
decb
scas
fistpll
dec
aas
pop
das
sahf
pop
jle
push
jg
outsl
cs
dec
fidivrl
fimuls
scas
fistpll
iret
dec
aas
mov
js
notl
mov
outsl
data16
dec
pop
addb
fisubrl
rcrl
push
out
pop
ljmp
jle
or
ds
outsl
fidivrs
dec
pop
mov
sahf
aas
scas
movsbl
push
out
pop
lahf
inc
iret
jle
push
scas
jp
cs
lahf
adc
pop
jg
dec
cmp
das
aas
orb
pop
dec
inc
xor
or
inc
rcrb
dec
lahf
outsl
and
call
mov
mull
cmc
pop
aad
pop
xor
xchg
pop
ret
call
sub
fisubrs
pop
lret
add
fimull
into
sahf
aaa
into
insl
out
mov
out
out
fimull
repz
adc
and
scas
xchg
jg
jo
push
mov
cld
xchg
subl
scas
cmpb
xor
inc
cmp
adc
and
jno
sbb
pushf
mov
push
test
xor
std
mov
dec
adc
fiadds
add
mov
jp
pushl
fistpll
mov
cs
std
outsl
fidivrs
dec
xchg
pop
mov
fidivrl
scas
clts
pop
mov
iret
pusha
fildll
add
mov
es
ss
jmp
mov
mov
mov
cmpsl
pop
cltd
addr16
jo
pop
lea
into
outsl
push
jge
dec
xor
pop
ret
pop
jbe
pop
mov
scas
adc
pop
ljmp
sahf
daa
mov
aas
scas
movsbl
dec
out
pop
ljmp
jle
push
scas
push
mov
into
outsl
fidivrs
dec
pop
mov
sahf
aas
scas
movsbl
dec
out
pop
ljmp
jle
push
scas
push
mov
into
outsl
sbb
inc
std
mov
aad
andl
adc
and
rcl
lock
add
push
dec
jp
loop
stos
call
add
cmp
fmul
out
mov
repnz
lea
daa
lods
jecxz
pop
repnz
out
rcll
icebp
jno
or
lock
sti
xchg
mov
pop
es
xor
outsb
xor
sub
and
sbb
ljmp
pop
or
sub
mov
jmp
dec
inc
mov
ret
out
add
xor
pop
xchg
adc
push
push
jb
sub
xchg
clc
popl
mov
jne
push
mov
and
or
sub
in
aad
push
popa
push
jecxz
test
stos
repz
dec
sbb
js
in
je
sub
mov
mov
idiv
sub
mov
jmp
je
aad
sahf
sub
adc
cmp
mov
mov
popf
jl
sahf
sbb
lcall
jge
cmp
insb
jno
testb
and
arpl
inc
cmpsb
pop
addr16
imul
and
inc
add
adc
push
xlat
lea
decb
xor
stc
adc
push
sti
aaa
jl
cmpsb
push
jmp
xchg
imul
dec
jbe
inc
ret
push
aam
pop
loopne
xchg
pop
stc
lds
push
mov
adc
lret
shll
inc
xor
adc
inc
mov
push
xor
iret
loopne
ds
clc
and
cltd
cli
ret
sbb
push
mov
mov
int3
jno
clc
rorb
gs
aas
jg
std
sub
fcom
cmpsb
ret
adc
inc
mov
inc
cltd
leave
enter
ds
je
jo
jno
jns
jns
pop
test
in
mov
sbb
and
clc
add
xor
pushf
fisubrl
jmp
adc
ss
ficoml
and
mov
jnp
sbb
jnp
or
cmp
pop
dec
pop
dec
and
fcoms
mov
sbbb
mov
sbb
outsb
sarb
xchg
test
into
scas
add
jge
push
pop
lret
pushf
mov
mov
xor
or
cmp
xchg
jo
cmp
inc
enter
and
pop
sub
fistps
mov
push
mov
test
dec
add
and
add
adc
iret
aad
push
lods
cmc
mov
ds
cmp
les
sbb
arpl
std
jnp
mov
rol
mov
fcompl
es
mov
out
fnstenv
daa
scas
out
lods
es
aam
xor
decb
lahf
dec
cld
xchg
mov
or
cmp
xchg
aad
xchg
stos
push
imulb
inc
fstl
test
rcl
lahf
mov
and
insb
stc
loop
sbb
mul
rcll
pop
mov
cld
fimull
push
or
pop
shr
sahf
xor
mov
les
xorb
mov
popf
add
icebp
jecxz
mov
out
mov
test
fstps
xor
pusha
inc
lods
arpl
pop
xchg
aas
aad
hlt
insl
mov
mov
int
cli
sbb
daa
in
rcll
mov
inc
xor
jne
inc
mov
pop
mov
stc
iret
imull
mov
cmp
jecxz
lahf
push
dec
stos
jae
jns
mov
vandps
ljmp
leave
sub
jo
push
mov
popf
gs
and
sbbb
xchg
sbb
xchg
iret
jp
jmp
addb
iret
fsts
mov
cmpsb
mov
stos
movsl
cmc
adc
loopne
decb
int3
in
call
dec
cli
and
movsb
ficompl
test
or
insl
xchg
jae
ret
add
enter
add
push
mov
sbb
pusha
outsl
sub
sahf
sub
inc
or
fwait
outsl
into
je
mov
enter
lret
mov
mov
jne
cmp
jmp
sub
imul
jecxz
jl
imul
ljmp
sbb
jle
pusha
cltd
in
push
ljmp
test
loopne
inc
push
xchg
cmp
cmpsl
data16
incb
leave
mov
outsl
pop
ss
in
lret
iret
xchg
mov
xor
cmp
out
cmp
call
fidivs
fs
xchg
mov
pop
repnz
push
orb
xor
and
out
add
stos
xchg
popf
inc
cltd
leave
mov
out
insl
and
jb
loope
dec
jle
js
out
sbb
cmp
adc
das
test
cmp
rcrl
mov
jae
push
pop
popf
mov
mov
ds
lds
xor
call
add
aad
mov
ljmp
or
test
enter
pop
mulps
decb
shl
movsl
stos
test
add
jg
cmc
mov
xor
hlt
insb
xlat
inc
mov
or
sti
xor
sub
jne
pop
aas
jnp
jmp
ja
aas
int
in
add
xchg
jg
repnz
stc
stc
sub
test
aaa
std
xor
ffreep
push
lods
test
and
mov
movsb
pop
mov
inc
mov
dec
outsl
dec
push
and
pusha
inc
and
clc
and
jmp
loopne
inc
add
popa
daa
or
inc
out
push
push
sti
sub
mov
and
data16
das
lds
cmp
xchg
xchg
lahf
pop
pop
outsl
mov
xchg
cmp
hlt
cmp
dec
jae
pop
sub
in
mov
sarb
icebp
data16
push
sarl
jecxz
mov
cmp
fs
leave
mov
cltd
pop
xchg
xlat
cmpsl
ja
ds
pop
enter
mov
push
xor
les
jno
mov
cmc
inc
loopne
pushf
mov
and
sbb
mov
dec
pop
fmulp
jp
ja
mov
dec
mov
lds
cmpl
outsl
jne
add
jmp
fisubrl
dec
les
jae
into
push
adc
fidivl
repnz
cltd
and
pop
mov
outsl
mov
faddp
pop
push
addl
cltd
xchg
inc
jg
jbe
mov
mov
xchg
out
lahf
mov
out
xor
jb
in
imul
cmp
dec
push
insb
ljmp
push
sbb
in
loope
xor
sbb
nop
xor
inc
pop
mov
outsb
dec
out
ja
mov
add
fsubl
out
mov
or
movsl
add
jg
pop
cwtl
add
fldt
push
jl
mov
add
lea
pop
mov
sbb
dec
iret
aas
jo
xlat
ja
js
sbb
cld
insb
mov
test
mov
add
ljmp
mov
icebp
mov
cld
popa
jge
fstpl
jg
pop
and
rcrl
inc
mov
leave
add
lcall
push
stos
cmp
adcb
je
push
in
cli
push
lcall
scas
push
mov
add
xor
enter
lret
cmpl
mov
outsb
pop
jg
pop
or
es
jge
daa
inc
mov
mov
lret
mov
int3
or
dec
add
ret
stos
cmp
sub
test
mov
xor
jmp
mov
or
cwtl
dec
test
mov
cs
incb
sahf
ss
mov
repz
sub
jns
and
sub
xchg
or
jl
sbb
push
push
mov
hlt
test
sub
inc
jbe
das
jae
das
add
aas
jnp
xchg
cli
nop
xchg
mov
xchg
inc
fiaddl
dec
iret
sub
push
jne
dec
mov
dec
shrl
xlat
dec
pop
int3
out
imull
mov
or
adc
rcrb
or
out
or
or
pop
inc
xchg
and
clc
sub
sahf
sbb
imul
or
popa
jo
lcall
mov
jmp
fcomi
shlb
nop
cmc
mov
xor
jbe
inc
add
xchg
adc
dec
xor
hlt
pop
or
ret
xchg
ds
clc
sbb
inc
dec
add
stc
sub
int
into
imul
movsb
orl
fs
jp
push
lea
lahf
cmovl
std
cmp
push
imul
out
mov
push
call
fimuls
lahf
test
adc
xchg
rclb
lcall
loop
jecxz
insl
jne
push
mov
sub
xor
andb
pushf
jge
fistps
aam
xlat
jae
cmpsb
mov
xchg
repnz
jmp
insb
fs
mov
pop
mov
add
mov
push
jp
ret
mov
inc
jmp
mov
jnp
js
mov
outsb
add
push
mov
add
mov
and
in
aam
ds
addr16
xchg
xchg
sub
or
pop
lock
shrl
cmp
lahf
mov
cs
or
xor
in
jmp
mov
xor
mov
addr16
ficoms
in
sbbl
xor
xor
pop
daa
push
lea
sti
in
cmp
xor
imul
cmp
test
inc
dec
jne
mov
dec
call
and
cmp
lahf
outsl
aad
or
out
adc
inc
push
clc
shr
dec
mov
je
push
or
xchg
test
jl
adc
mov
std
pop
test
fldt
adc
test
int3
jmp
fs
mov
adcb
jo
mov
inc
out
jg
lock
cmp
cmpsb
fistpll
outsb
popa
mov
push
dec
insb
adc
xchg
int
loop
popa
in
movsl
inc
mov
les
je
push
mov
mov
jge
outsl
cli
test
subb
test
es
sub
mov
jge
pop
fnstcw
rcrb
mov
mov
or
mov
repnz
flds
mov
pop
enter
notb
aas
inc
out
pop
cld
js
imul
cmp
ss
out
bound
fisubrl
bound
in
push
scas
pusha
xchg
and
ja
push
nop
push
inc
rolb
scas
in
ss
sub
jne
ffreep
mov
mov
add
inc
sub
rol
mov
sahf
and
push
sub
mov
cmp
adc
push
xchg
test
add
cmc
jecxz
sub
mov
iret
jns
fildl
xchg
push
fs
push
pop
or
lock
mov
fidivrs
jbe
mov
imul
jbe,pn
push
xchg
and
cltd
ret
xchg
push
xchg
dec
dec
stc
cltd
inc
adc
shlb
pop
outsl
xor
test
sbb
lret
xchg
rcrb
xor
dec
in
lds
fbld
xchg
and
inc
sbb
fidivs
inc
lahf
push
push
aad
xchg
sub
push
cmp
push
icebp
in
in
dec
xchg
fwait
jl
andb
add
dec
mov
pop
add
sbb
pushf
rolb
enter
xchg
pushf
addr16
mov
sbb
sarl
cmc
dec
cltd
scas
insb
call
ja
popf
out
pop
xchg
mov
inc
sti
mov
pop
inc
fdivrl
xchg
cmc
scas
in
pop
xchg
movsl
addr16
std
inc
hlt
idiv
enter
rcr
roll
cmp
or
decl
retw
in
adc
pusha
stos
and
mov
hlt
jp
mov
adc
jp
or
xchg
cmc
cmp
xchg
shrb
adc
jmp
push
cltd
sbbb
in
mov
add
mov
call
arpl
ss
jne
movsb
mov
add
sbb
and
fwait
addb
stos
mov
sub
pop
sbb
and
cmpsl
rcrl
cli
dec
pop
mul
jns
cmc
lds
cld
mov
scas
and
insb
stos
test
xor
out
gs
push
loope
in
fwait
xor
push
fcmovu
fcomi
andl
das
xchg
xchg
xchg
adc
test
enter
lahf
jg
sub
das
adc
push
sub
adc
cs
mov
jnp
pop
stos
jg
pusha
imul
mov
xchg
insb
aad
test
mov
add
in
sbb
adc
aad
stc
imull
test
orb
inc
aam
sbb
mov
push
inc
mov
mov
inc
out
and
jo
imul
aaa
mov
dec
and
leave
and
outsb
shll
mov
lret
aas
inc
xchg
test
or
adc
push
dec
and
int
lods
cli
cld
xor
test
fiaddl
push
mov
add
scas
or
pop
mov
ljmp
inc
mov
and
dec
cmp
xor
add
sub
jb
jmp
sbb
inc
xchg
in
stc
fldenv
add
dec
out
mov
gs
or
insl
sbb
clc
arpl
sub
lds
sbb
fadds
mov
sub
mov
bound
pushf
jb
adc
aam
dec
xor
cmc
stos
fs
pop
or
dec
cmp
mov
xchg
sarl
cmp
sub
addr16
inc
out
inc
arpl
cli
jl
pushf
jl
xlat
lods
cmp
shll
mov
mov
cmp
pop
negl
mov
adc
dec
repz
gs
mov
sub
movsl
xchg
jae
dec
sub
dec
in
and
das
and
ficomps
js
xchg
adc
xchg
lods
fmull
inc
mov
and
sub
dec
jae
ret
dec
mov
mov
cmp
sbb
xor
pop
xor
jb
call
sub
shrb
cmpsl
jge
sbb
xchg
adc
jg
call
adc
dec
inc
xchg
mov
sbb
imul
in
mov
mov
out
cmc
repz
gs
in
pop
enter
jb
lret
jbe
cs
test
push
and
xchg
xchg
ret
aad
inc
pop
add
or
jne
sbb
aad
xchg
aaa
data16
les
loopne
dec
dec
fldcw
jle
std
dec
fildll
addb
and
ljmp
and
hlt
fisttpl
cmpsl
dec
jo
jl
pop
dec
scas
inc
dec
xor
icebp
pop
adcl
js
test
stos
out
jg
and
out
xlat
add
xor
push
aas
push
xchg
or
dec
ret
lds
or
into
sbb
xor
sti
insl
xchg
popa
xchg
mov
insl
jo
sbb
jp
dec
ja
push
cmp
mov
lret
xor
or
mov
daa
cmpb
jecxz
call
pusha
stos
sbbl
scas
dec
loopne
xchg
or
cmp
loope
in
outsb
jecxz
push
and
add
aad
push
cli
and
repz
lods
lods
mov
mov
push
jp
test
jns
xor
xchg
rolb
mov
imul
jmp
daa
aas
mov
push
jno
jge
inc
sub
jo
lret
sub
and
cmp
scas
in
xorb
cmpsb
pop
dec
add
movsb
cmp
mov
push
jae
inc
pop
cmp
lods
jecxz
sub
xchg
das
rol
popa
pop
popf
dec
sarl
jae
outsb
lret
sub
and
mov
jl
mov
addr16
mov
fstpl
adc
jmp
or
sbb
aaa
rcl
or
dec
fsubs
testb
aam
or
movsb
sbb
movsb
pop
in
scas
cmpsb
xchg
fs
stc
jo
mov
inc
xor
jl
push
jnp
aam
mov
push
and
dec
push
addb
popa
or
dec
pop
jl
cmp
jne
sub
aaa
sbb
popf
xchg
pop
cmp
int3
test
jb
or
loopne
je
mov
xchg
mov
mov
mov
adc
jno
ja
rol
popa
pushf
pop
dec
aas
or
ss
push
xchg
subl
repz
jge
mov
enter
orb
stos
xorl
fwait
stos
push
loopne
xor
push
xor
lds
mov
cs
lret
rep
orb
into
div
and
fcoms
cmp
dec
pusha
rorb
xchg
rcr
std
ds
daa
cmp
int
out
lock
iret
mov
add
gs
lcall
add
jne
cmp
lea
inc
jmp
pop
inc
jmp
push
cwtl
aaa
and
movsb
mov
clc
ret
loope
and
lret
divl
sbb
cs
sub
push
test
lods
jp
mov
daa
jnp
int3
xor
push
mov
repz
repz
inc
jbe
jmp
jecxz
ljmp
add
push
ret
scas
mov
mov
mov
loopne
inc
sub
xchg
pushf
jb
cmp
push
decb
xor
cmp
and
scas
icebp
call
in
popa
pop
xchg
or
js
xchg
mov
std
sahf
rcrl
push
je
jle
xor
lods
pop
xor
add
sbb
loopne
mov
mov
mov
push
jecxz
xlat
push
adc
push
push
ja
or
sub
xchg
fstpt
jl
pop
cld
cmpsb
jb
jp
or
iret
pop
cmp
stos
xchg
pushf
xor
lea
inc
dec
sbb
outsl
sbb
repz
mov
cmpsb
pop
cmp
add
stc
movsl
adc
adc
scas
jne
xchg
mov
push
or
imul
mov
call
arpl
lea
pop
mov
cmp
mov
movsb
scas
mov
add
insl
into
mov
iret
push
pop
scas
negl
mov
into
xchg
xor
sub
push
add
test
dec
mov
add
test
push
aam
lahf
loope
mov
push
loop
push
mov
adc
or
test
add
mov
sub
cmp
adc
push
cs
fwait
adc
or
cmp
into
xor
imul
insb
ficoml
xor
pop
mov
lods
jnp
das
dec
jae
dec
sti
scas
in
outsb
inc
loope
pushf
cwtl
fidivs
mov
scas
loope
jge
jbe
dec
mov
movsl
inc
cmp
and
or
bound
shr
xchg
je
aaa
in
lds
xlat
push
add
sub
es
aam
sbb
dec
lcall
mov
pop
push
fidivs
rorl
mov
fs
mov
xor
sbb
outsl
hlt
sbb
mov
adc
dec
arpl
ljmp
jno
mov
loop
inc
stos
cmp
cmp
dec
sbb
shl
push
bound
shr
fsubrs
push
and
jmp
jns
sub
push
out
mov
dec
shrd
pop
push
stos
sub
test
add
out
inc
aas
addr16
cltd
imul
cmp
pop
lock
mov
inc
adc
repnz
jg
aaa
jecxz
jge
cmpsb
rcr
rcrl
dec
adc
test
in
cmp
adc
or
dec
ss
push
and
lods
das
inc
and
outsb
inc
out
addr16
sub
sub
cmpsb
sahf
jbe
and
xchg
mov
inc
push
inc
sub
pop
daa
aad
sbb
push
xor
add
hlt
test
lea
nop
mov
mov
lea
mov
adc
cwtl
enter
sub
inc
loop
jecxz
xchg
pop
outsl
adc
int
rcl
outsl
or
movsb
test
mov
cld
sbb
out
mov
xchg
insb
test
out
lahf
std
mov
ja
scas
aam
push
daa
cmp
mov
pop
jnp
adc
loope
cmp
daa
rcll
pop
lods
addr16
or
sti
ret
in
popf
adc
cltd
xor
movsb
push
or
xchg
rcll
push
cmp
sub
iret
and
arpl
repnz
repz
int3
sahf
cmpsl
bound
in
mov
call
pop
dec
mov
cmp
xchg
cmpsb
pop
push
push
pushf
sub
sub
pop
outsl
pushfw
aam
outsl
pop
test
pop
pop
jne
mov
cmp
sbb
cmc
ret
dec
and
fsts
loope
sahf
add
ret
js
cmpsb
inc
or
xor
dec
lods
xchg
xlat
lcall
add
mul
fsubl
inc
cmc
cmp
ret
xor
dec
cmp
mov
stos
push
loop
jmp
ficompl
dec
loop
mov
sahf
aas
scas
movsbl
dec
out
pop
ljmp
jle
push
scas
push
mov
into
outsl
fidivrs
dec
pop
mov
sahf
aas
scas
movsbl
dec
out
pop
ljmp
jle
push
scas
push
mov
into
outsl
dec
pop
das
lcall
outsl
pop
jmp
jp
push
scas
pop
mov
outsl
bnd
dec
pop
mov
mov
scas
pop
dec
out
mov
test
daa
xchg
inc
shll
pusha
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
scas
in
mov
fstps
nop
fdivrs
lods
aas
jb
jns
pop
outsl
sub
aam
or
scas
jmp
lahf
test
fbstp
cmovno
pop
outsl
pop
dec
cmp
pop
sbb
push
xchg
xlat
sbb
imul
outsl
jp
pop
adc
jge
lods
sarb
mov
or
pop
test
or
addr16
jle
xchg
imulb
cs
lds
data16
xchg
push
test
mov
or
cmp
dec
andb
jl
fldcw
sub
jnp
inc
jns
ret
shrb
xchg
cmpsl
outsl
fiaddl
fisubrs
int
fsts
mov
ficoms
in
ds
cmp
jg
negb
aas
xor
xor
adc
das
gs
dec
stc
cs
test
jg
mov
dec
xchg
inc
push
pop
push
enter
adc
std
dec
cmp
xlat
cwtl
sarb
mov
jb
dec
xor
inc
sub
dec
in
jae
cmpsb
test
or
imul
gs
xlat
push
adc
ret
jmp
jmp
pushf
or
aam
cld
das
sub
jl
jnp
outsl
outsb
sbb
jge
jo
scas
fidivrs
cmp
jmp
loopne
stos
insb
or
bndstx
outsl
data16
cmp
lret
sbb
movsl
divl
iret
mov
cltd
das
imul
pop
outsl
sub
dec
or
scas
jmp
lahf
test
fistps
cmovns
pop
outsl
sub
dec
or
scas
jmp
in
aaa
or
cmp
lds
cmc
sbb
or
and
test
xchg
data16
js
std
pop
lods
sub
lock
jnp
push
int3
mov
push
push
jae
inc
or
insl
fs
scas
test
fisttpl
loop
in
jne
or
jge,pn
dec
xor
push
jp
daa
neg
rcrb
xor
iret
in
outsl
jge
and
popa
hlt
movsb
pop
xlat
or
push
cmpb
mov
dec
aas
enter
mov
jl
in
dec
mov
push
loopne
and
and
push
inc
push
mov
movb
fidivs
jle
jg
popl
sub
add
push
cmp
jmp
jns
lret
pop
add
fisubs
mov
inc
and
cmp
sub
dec
xlat
ss
mov
fisubs
adc
mov
mov
fldenv
ds
and
notl
cli
fcmovb
ja
cwtl
xor
fistl
xchg
pop
nop
pop
push
jmp
out
je
and
fistpll
test
pop
enter
shl
inc
imul
fmul
add
fisubrs
out
sbb
jecxz
gs
or
add
arpl
mov
mov
push
cmpb
fisttps
and
mov
scas
loope
and
pop
xor
cmp
lret
jbe
cmpsl
ds
outsl
out
fadd
cmp
lahf
jo
lret
jo
push
idivl
cmpl
icebp
mov
mov
int3
movsl
dec
lcall
aaa
stc
shlb
pushf
jecxz
sub
shl
inc
shl
pop
dec
dec
push
es
sub
loop
or
pushf
jnp
lcall
xchg
loop
add
mov
pop
dec
shll
and
pop
repnz
inc
repz
cli
mov
xchg
lods
ja
sarb
and
or
dec
fnsave
out
dec
out
dec
loop
mov
mov
das
lods
and
cmp
add
cld
js
sbb
outsb
bound
dec
sbb
dec
out
rorb
movsb
push
adc
mov
push
int3
idivb
dec
insb
jle
sbb
sahf
sbb
jne
push
addr16
lock
inc
popa
sarl
and
inc
mov
in
fwait
pop
dec
cld
out
cmp
mov
dec
jmp
and
add
scas
pop
xlat
push
cmp
cmp
xchg
cli
in
bound
cwtl
lahf
and
sbb
jl
ret
dec
inc
in
popl
shrl
fnstcw
aas
or
inc
daa
subb
pop
xchg
jl
push
imul
lcall
daa
jge
out
xchg
movsb
cmpsl
sarb
ljmp
fcmovu
daa
outsb
dec
jl
mov
mov
pop
nop
test
rorl
mov
fistpl
daa
pop
pushf
dec
rol
sub
ds
dec
lea
xchg
push
xchg
dec
sbb
mov
cmp
push
mov
adc
aas
and
test
icebp
out
mov
ds
sub
repz
mov
sti
int
adc
lods
push
mov
das
dec
rcr
ja
dec
ljmp
pushf
cs
inc
mov
dec
dec
cmpsl
jne
sbb
or
push
stos
mov
sbb
or
loopne
test
rol
push
and
shrl
jp
mov
push
hlt
imul
jecxz
mov
mov
mov
push
mov
inc
xchg
bound
lods
cwtl
pop
dec
or
or
mov
ss
mov
psllq
cmp
popa
push
es
add
inc
add
sti
je
pop
jbe
cmp
lcall
clc
and
mov
mov
fsubr
or
outsb
das
mov
out
movb
imul
xchg
fisubl
es
or
and
movsb
push
xchg
and
fwait
adc
cmpsl
inc
or
pushf
icebp
push
movsl
pop
xor
fsubrl
rclb
adc
adc
mov
ror
jmp
mul
test
inc
bound
cmc
and
loopne
fidivs
sub
je
es
mov
mov
push
ds
sbb
repz
adc
test
dec
jnp
mov
stos
clc
das
cwtl
ljmp
sbb
leave
movsb
pop
pop
fcmovbe
dec
or
stos
mov
mov
xor
or
lret
aaa
jmp
cmpsb
repnz
bswap
vxorps
jae
mov
in
shrb
imulb
mov
mov
xchg
mov
dec
jge
xor
out
pop
lret
adc
mov
cmp
sub
inc
cmpsl
add
clc
test
adc
sar
dec
jb
or
lds
xchg
fnstsw
cmc
in
xor
fsubrs
mov
ds
jmp
jae
inc
jle
jle
dec
jmp
adc
or
mov
mov
inc
dec
push
popf
in
xchg
shll
loope
sarb
ljmp
xchg
popa
pop
lods
insb
and
adc
sbb
xchg
insb
ss
aad
stos
dec
test
jo
sti
adc
pop
adc
adc
mov
pop
je
jnp
jno
or
leave
or
cmp
pop
pusha
xor
cltd
aam
jecxz
les
cmp
push
push
jp
dec
in
mov
fidivrl
push
or
fadds
lods
lock
ja
lret
xlat
enter
and
stos
in
imul
inc
int3
jnp
push
mov
clc
push
je
imul
jnp
jbe
push
and
pop
lock
outsb
add
ds
divl
cmpsl
push
jl
xchg
ds
mov
mov
dec
xchg
movsl
cmp
cmp
aas
fiaddl
outsb
sbb
lret
cmp
mov
sbb
bound
loopne
mov
aas
fnop
pop
out
jg
inc
test
add
xchg
jbe
popa
jne
mov
std
call
test
je
mov
adc
or
jg
in
andb
adc
pop
push
ficompl
int3
xor
jb
push
fdivr
insb
loop
jecxz
push
mov
neg
jge
popa
cltd
pop
mov
ljmp
daa
fisttpl
divl
sub
nop
mov
ret
ret
in
out
fildll
notb
dec
sarb
aaa
loopne
test
scas
int
out
sub
cmpsl
icebp
push
les
cmc
ljmp
insb
pusha
and
aaa
addr16
rcll
or
adc
movsl
jns
jo
rorb
daa
mov
data16
test
jae
mov
imul
mov
push
lcall
aad
test
dec
inc
ret
push
call
xchg
in
push
test
adc
insl
mov
xor
xchg
ficoml
mov
arpl
out
fdivrl
pop
dec
outsl
mov
rcl
decb
scas
sbb
into
fstpl
pop
xchg
cmp
xchg
jecxz
and
add
ds
popf
xlat
in
push
mov
jp
and
inc
sbb
daa
xor
scas
sbb
adc
addr16
jno
call
mov
push
xor
and
and
aad
jne
inc
outsl
movsb
pusha
xchg
scas
or
mov
add
addr16
inc
push
mov
pop
mov
sbb
ficoml
dec
lahf
into
notl
pop
pop
test
inc
mov
jae
add
ljmp
dec
push
lret
repnz
inc
inc
and
pop
jne
jb
jns
sbb
arpl
mov
aas
stc
mov
aam
dec
fs
scas
xor
insb
push
or
sub
xor
mov
add
sbb
in
test
cltd
sbb
push
push
mov
sub
sti
nop
push
push
aaa
dec
xchg
and
push
js
adc
sub
pop
and
clc
outsl
pop
pop
cld
push
xchg
and
cmp
dec
nop
aaa
add
jae
add
or
andl
outsb
xor
dec
add
pop
popa
enter
inc
adc
dec
rclb
xchg
loopne
arpl
stc
insl
inc
add
jmp
cmp
push
mov
enter
mov
stos
adc
mov
in
push
xor
addr16
cltd
mov
mov
mov
out
adc
test
cmp
lret
out
pop
shrl
mov
dec
out
pop
mov
lahf
and
mov
pop
fdivrs
dec
arpl
mov
cs
pop
rcrb
push
mov
sub
in
outsb
aas
dec
push
push
je
mov
in
mov
pop
push
sahf
cltd
fldenv
pop
out
dec
and
mov
popa
add
sbb
add
pop
and
inc
and
and
orps
xchg
es
xchg
aas
xor
pusha
mov
mov
shr
lea
mov
add
lahf
loop
jb
mov
cli
inc
out
dec
xor
rcrl
mov
nop
add
adc
mul
bound
adc
lods
jmp
or
push
ss
inc
out
cmpsl
push
insb
add
sbb
mov
sbb
daa
aad
and
mov
mov
ret
or
cmp
adcb
push
dec
xor
and
sub
mov
lods
fldt
sbbl
cltd
mov
lock
cmpsl
mov
xchg
shll
lcall
pop
lcall
xor
imul
addr16
mov
es
test
ret
xor
mov
decb
add
lcall
std
sbb
dec
jp
cmpb
adc
pop
outsb
sbb
dec
pop
fs
nop
cli
fstpt
int3
dec
adc
mov
stos
scas
xchg
mov
xchg
cltd
dec
or
js
push
inc
ljmp
jnp
mov
mov
dec
jb
out
gs
xchg
in
push
mov
mov
mov
inc
push
xchg
xchg
pop
jg
dec
and
iret
in
into
sub
pop
xor
mov
hlt
add
mov
xor
jge
inc
clc
test
fistpl
test
dec
mov
push
add
inc
cmp
int
mov
hlt
imul
pop
clc
jne
xchg
div
gs
test
jle
xorb
adc
mov
inc
dec
std
fcoms
and
outsb
xchg
push
pop
add
jo
xor
jp
jg
jmp
movsb
push
cmovnp
inc
push
dec
ja
adc
mov
add
add
or
shlb
cmpsl
mov
mov
xor
ret
mov
addb
aas
pushf
fcomp
mov
xchg
jle
push
outsl
sahf
andb
daa
sub
mulb
xor
cmpl
and
inc
xchg
cltd
aam
mov
loope
cmpsb
aam
add
mov
xchg
je
iret
xchg
fcoml
scas
test
sbb
lea
inc
mov
aam
mov
pusha
lds
jo
daa
jecxz
jge
inc
sub
inc
pop
int
fdivrl
dec
pop
loopne
fisubl
out
and
cmp
add
xor
add
mov
xor
outsb
dec
push
insb
test
pop
ds
adc
sub
pop
fisttpll
sub
loop
or
stc
sahf
and
mov
dec
jb
pop
in
sub
imul
ficoml
out
loope
mov
xor
rcrl
pop
adc
mov
push
or
inc
inc
and
cmc
mov
out
das
or
into
pop
dec
ljmp
mov
inc
movsl
fldt
push
rcr
xor
dec
leave
dec
lcall
mov
sbb
xor
jg
xlat
test
out
mov
mov
jnp
xchg
cmc
mov
fstp
mov
leave
loop
fstps
das
adc
in
mov
adc
enter
jns
and
add
push
jp
inc
or
xchg
int
test
stos
cmpsl
cmp
ss
or
sbb
jmp
and
mov
test
mov
cmpb
inc
mov
jns
es
test
xchg
jbe
test
adc
mov
and
push
push
in
mov
stos
fsubl
scas
pushf
pop
cmp
stc
nop
inc
scas
add
or
cltd
jo
loop
lock
or
aaa
sahf
aaa
out
data16
fmuls
aaa
cmp
xchg
jp,pt
push
fcomip
sub
fdivrl
outsb
das
adc
xorb
push
imul
add
xchg
or
dec
scas
fsubrs
sahf
jle,pt
rorl
loopne
dec
das
lret
add
lea
fbstp
les
dec
loop
ret
pop
ljmp
sub
mov
xlat
xlat
lcall
aas
lret
lock
push
sub
mov
ficomps
les
data16
pop
lahf
js
aas
sub
pushf
out
xlat
mov
jno
and
add
arpl
dec
xor
jmp
or
nop
dec
lcall
lret
push
aaa
lds
out
adc
cmp
xor
sub
int
or
push
dec
imul
mov
push
setle
lock
add
pusha
jo
negl
stc
dec
push
sub
sbb
mov
fsts
cmp
rorb
cmp
outsb
jmp
mov
arpl
or
les
cmpsb
adc
dec
aad
push
mov
dec
adcl
mov
stc
cltd
je
data16
int3
das
push
cmc
enter
jle,pn
andb
mov
aaa
fsubs
rolb
sub
push
mov
sbb
hlt
mov
aad
aas
aam
call
add
mov
xchg
nop
in
mov
hlt
inc
xlat
xlat
xchg
dec
fwait
popa
inc
mov
push
add
incl
lret
xchg
test
enter
inc
cli
inc
xlat
out
and
lahf
push
mov
in
icebp
push
mov
repnz
xchg
sahf
in
mov
jg
jmp
xor
lret
fcoml
push
add
xchg
popa
mov
ja
leave
sbb
cmp
push
mov
gs
mov
scas
mov
mov
pusha
addr16
negb
xchg
clc
fnstcw
mov
fistl
mov
and
or
or
enter
xor
out
sti
pop
movsb
mov
push
push
loope
mov
sbb
shll
daa
xor
test
add
jns
mov
cli
fidivs
clc
mov
fildl
in
imul
pop
mov
lods
push
jno
dec
addb
outsl
popa
fdivrs
pop
mov
mov
jp
mov
jg
lods
inc
jmp
repz
les
cmpsl
add
dec
jbe
outsl
insl
mov
xchg
test
in
and
mov
shlb
dec
mov
inc
xor
sahf
adc
hlt
rol
xor
dec
push
push
xor
lahf
clc
and
mov
jp
leave
pop
jmp
pop
cmpsb
pop
mov
dec
rcrb
mov
dec
je
std
or
scas
or
mov
xor
scas
push
aad
mov
ret
push
mov
aaa
ja
lock
in
cmpsl
js
and
leave
and
jg
push
push
jcxz
and
sbb
and
adc
xchg
xor
jne
sbb
pushf
sarl
jle
mov
cmpsb
jmp
dec
pop
mov
pop
test
fstpl
mov
jb
sbb
cmp
and
jge
lret
xchg
out
fcmovbe
testl
and
decl
mov
push
clc
dec
inc
fidivrs
inc
sti
ja
mov
adc
js
inc
imul
aaa
fistpl
xlat
xor
or
imul
mov
lods
lock
sbb
jle
adc
jp
sub
je
jnp
inc
fcomps
fimuls
ss
rorl
add
in
sub
mov
mov
outsb
cmpsl
sub
dec
sub
mov
out
mov
hlt
scas
pop
sbb
js
xor
aam
ljmp
sahf
inc
lret
mov
push
jne
fmull
sub
push
hlt
ss
xchg
lcall
sbb
dec
cmpsl
mov
mov
inc
mov
xchg
pop
movsl
out
pushf
adc
lahf
aad
fsubrs
cld
imul
icebp
cmpsb
push
mov
lock
rorl
pop
jg
je
pop
mov
and
lods
lcall
add
cmp
sub
push
cld
mov
andb
jbe
sub
les
pop
or
mov
inc
add
pop
or
push
ret
lret
add
mov
xor
sub
cmp
jb
or
fldt
xchg
xchg
ja
and
pmaddwd
fistps
jnp
sbb
mov
ss
std
jnp
fwait
xchg
mov
pop
mov
mov
mov
xchg
jae
sub
dec
sub
dec
sahf
add
out
or
jmp
lcall
or
push
adc
fisubrl
add
add
in
rcrl
and
sbb
push
sub
mulb
les
adc
xchg
mov
or
sub
inc
fadds
rol
fidivrl
jp
sahf
decb
das
mov
and
sahf
std
pop
cmp
add
nop
mov
arpl
jl
fdivrp
pop
cmp
fsts
xor
sbb
xorb
faddl
gs
dec
mov
bound
xchg
or
into
cwtl
popa
aaa
in
outsb
push
bound
cmp
gs
add
mov
es
cmp
daa
lret
mov
mov
push
xchg
mov
fisubrl
inc
sbb
inc
test
das
and
push
js
and
push
andl
dec
sahf
sbb
sub
push
adc
push
mov
inc
std
xchg
enter
stos
xchg
fwait
xor
xor
push
ret
cmp
insl
jp
push
inc
rcr
jbe
and
or
add
aas
push
hlt
pop
pop
shr
not
scas
push
xlat
mov
inc
insl
fwait
mov
mov
shll
xchg
mov
push
mov
sub
insl
jmp
push
dec
or
shlb
adcb
sbb
ret
xchg
jg
out
mov
lcall
mov
mov
test
sub
mov
mov
and
jo
push
or
cltd
jle
pop
stos
push
jle
inc
lock
in
gs
sbb
mov
ret
ret
sbb
lods
inc
dec
push
mov
mov
mov
shrl
imul
adc
pop
or
aaa
jge
inc
mov
sbb
push
rcll
mov
add
loopne
std
pop
pusha
popf
push
dec
mov
dec
push
gs
xchg
add
outsl
cltd
cld
lahf
test
ret
inc
sbb
pop
cmp
in
cmc
cld
fdivs
xchg
fcomps
adc
jo
ja
and
xor
das
xchg
lea
repnz
mov
sbb
popf
mov
sub
sub
dec
mov
mov
daa
fwait
outsl
pop
int3
fldl
xor
xchg
mov
stc
jo
bnd
and
mov
push
mov
ret
sub
inc
mov
dec
dec
or
mov
outsb
popa
ja
pxor
xor
adc
cmp
out
mov
mov
clc
jne
out
push
push
jo
pop
fistpll
negb
adc
sub
jns
jbe
mov
fucompp
fimull
pushf
jge
push
pop
das
sahf
mulb
lcall
cld
xchg
shrb
ja
pop
in
pop
mov
adc
jle
sti
push
jle
push
fcmovnb
or
xor
xchg
xor
aas
lret
lods
lahf
loope
fwait
sub
pop
cmpsl
cwtl
shl
xchg
inc
popa
fldenv
xchg
mov
clc
push
in
sbb
pop
pop
push
push
mov
notb
es
fidivl
cmp
psrad
sbb
sbb
insb
push
gs
icebp
adc
lcall
cmp
jg
dec
loopne
or
movsb
leave
ret
jmp
dec
cmp
adc
mov
adc
idivb
cmp
mov
out
inc
inc
lock
push
mov
inc
xchg
add
stos
mov
dec
inc
jg
imul
jb
mov
pop
fnsave
pop
cwtl
rcrb
push
imul
rorb
stos
jle
mov
loop
movsb
std
mov
call
push
out
xchg
mov
mov
enter
or
loope
dec
push
divb
xchg
add
fwait
or
call
xchg
sbb
outsb
repnz
imul
adc
push
and
js
push
and
pusha
xchg
mov
test
lret
jns
shlb
lods
mov
dec
nop
mov
mov
nop
shrl
inc
je
jae
sub
std
aad
pop
mov
xchg
cmp
push
push
lea
ja
lcall
mov
daa
mov
mov
or
aam
daa
les
in
and
pop
push
xor
xchg
imul
dec
inc
imul
mov
mov
mov
lahf
test
fistps
cmovns
pop
outsl
sub
dec
or
scas
jmp
lahf
test
fistps
cmovns
pop
outsl
sub
dec
or
scas
in
mov
fucomp
test
fistps
cmovns
push
outsl
sub
pop
std
scas
or
lahf
cltd
in
test
pop
pop
rclb
pop
sbb
inc
mov
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
jge
std
jg
dec
fstpl
jnp
push
out
pop
stc
pop
insl
out
jge
dec
iret
pop
fildll
cmp
sbb
outsl
std
jg
dec
fstpl
das
mov
pop
insl
out
jge
sub
pop
fildll
sbb
jg
dec
fstpl
das
mov
pop
insl
sarl
sub
cmp
dec
std
push
fldt
outsl
std
or
jmp
scas
cld
in
repz
inc
iret
or
and
xchg
push
mov
pop
pushf
mov
pop
add
pop
sbb
lahf
adc
rcr
shrb
xor
in
push
mov
aaa
mov
or
sahf
insl
das
sub
pop
xchg
scas
std
mov
nop
std
jle
dec
xor
cs
das
insl
out
dec
jge
mov
and
cld
outsb
out
sbb
repnz
inc
das
mov
lock
dec
add
xor
jle
push
cli
mov
std
xchg
pop
sub
jne
jne
pop
lcall
rcr
pop
push
cmp
lahf
mov
std
jg
dec
fstpl
das
mov
pop
insl
out
jge
dec
iret
pop
fildll
sbb
lods
mov
inc
fdivrs
push
outsl
add
mov
jno
pusha
or
mov
or
dec
fsts
lea
pop
aas
stos
adc
data16
cli
add
fwait
aas
rorl
scas
cmp
sub
inc
mov
pop
insl
out
jge
dec
iret
pop
fildll
sbb
jg
dec
fstpl
das
mov
pop
insl
out
jge
dec
iret
pop
fildll
sbb
push
mov
lahf
hlt
imul
fisubl
cmp
cld
xchg
insb
push
in
adc
inc
and
arpl
pop
test
in
xlat
xchg
dec
or
xor
dec
push
jl
mov
xchg
mov
popf
or
iret
es
fbstp
dec
xor
jmp
sbb
mov
and
inc
ds
adc
ret
mov
movsl
sub
and
fdivrs
push
pop
cmpsb
mov
mov
pop
lahf
imul
lods
pop
inc
pushf
push
stc
xchg
and
shl
mov
sbb
pop
xchg
es
stc
outsb
xchg
adc
push
inc
mov
jno
push
xchg
inc
jb
lcall
loope
sbb
xchg
push
or
sbb
mov
or
dec
lock
nop
mov
jle
mov
fst
dec
movsl
call
daa
pop
sbb
loop
mov
pop
sub
mov
fimull
push
imul
pushf
ja
fisubl
les
dec
ljmp
addr16
int3
int
inc
loop
mov
or
xor
shrb
cmp
lods
or
mov
sub
sub
repnz
in
mov
les
test
scas
fisttpll
sub
cmpb
divb
mov
int
clc
xchg
repz
sbb
push
test
or
rcrb
xchg
out
out
mov
mov
push
shrl
adc
ret
in
lea
movsl
enter
cwtl
jne
out
popa
leave
rcll
arpl
call
adc
pusha
ljmp
push
nop
sbb
in
jnp
stos
sub
test
icebp
lret
mov
push
sti
push
hlt
ret
test
cs
inc
nop
int
mov
popf
in
addr16
aad
jg
mov
ljmp
leave
add
sbb
sub
pop
out
mov
mov
mov
fldt
adc
sti
or
adc
cmpsl
shll
lds
inc
jnp
notb
inc
inc
and
outsl
inc
lcall
mov
sahf
movsb
sub
pop
dec
ffreep
fistpll
int3
stc
jmp
int3
mov
mov
clc
jmp
sbb
xchg
dec
jns
fcoms
je
adc
ret
clc
ret
push
xorl
pop
mov
jmp
sbb
das
hlt
jmp
cmp
cmp
xor
xchg
repz
xlat
test
in
and
in
sbb
sub
add
movsb
ljmp
cmpsb
shrb
sbb
pop
in
push
xor
mov
das
lcall
pusha
sti
fstl
dec
cli
das
adc
stos
out
lahf
loopne
mov
jge
inc
dec
and
mov
scas
daa
scas
pop
jmp
jl
cmp
or
add
lret
or
hlt
mov
or
test
lock
and
std
repnz
sbb
scas
aas
cmp
incl
loope
fidivrs
popf
rcrb
sbb
cmp
pop
pop
and
arpl
add
sbb
ret
lahf
inc
push
sahf
dec
lcall
and
sbb
cmp
xor
lcall
dec
dec
clc
sub
shrb
inc
lcall
mov
add
mov
and
sbb
rorl
inc
add
out
scas
lea
push
adc
adc
fwait
in
movsb
xchg
movsb
dec
inc
sub
lcall
inc
pop
les
lret
aaa
and
cmp
shlb
xchg
inc
lods
bound
nop
outsb
aas
sub
add
mov
xor
mov
xlat
mov
arpl
sub
es
rolb
jge
shr
arpl
inc
mov
dec
xchg
mov
push
ret
mov
xchg
loope
xchg
adcl
dec
mov
nop
pop
ret
cmp
cmp
inc
or
out
xchg
cs
popa
cs
int
jle
div
mov
mov
repnz
daa
inc
lea
fs
or
pop
sahf
sbb
cli
aaa
add
mov
adc
jg
mov
and
iret
test
notl
cmpsl
fstps
mov
scas
scas
sti
xchg
ljmp
rcll
dec
inc
stc
adc
movsl
pushf
xor
dec
nop
push
push
cmp
xchg
sub
movsb
or
fld
push
std
shll
rolb
cmp
rorl
push
push
add
fidivrs
mov
lods
inc
jb
mov
inc
sbb
insl
call
rclb
sub
mov
mov
inc
push
sbb
inc
push
pushf
pop
pop
in
arpl
clc
gs
push
idivl
mov
mov
push
lds
hlt
or
push
aaa
sub
sub
xchg
sub
push
cs
loope
ja
inc
and
test
push
sbb
inc
test
movsb
test
add
cmp
mov
sub
sub
ud0
int3
cmpsl
cld
jmp
rcrl
iret
cli
dec
jo
jecxz
adc
jp
sbb
mov
imul
mov
rcrb
cltd
pop
sub
int
shr
lret
das
ret
ljmp
leave
ret
cltd
enter
mov
int
les
mov
dec
push
scas
call
mov
push
shl
aaa
jl
pop
mov
xchg
stc
and
out
addr16
mov
or
jecxz
orl
cltd
imul
inc
iret
xchg
cmpsb
push
and
cmc
testl
sub
jge
outsl
cmpb
jnp
or
push
or
jne
iret
cmp
dec
sbb
fisttpl
or
xchg
jns
repz
popa
push
popf
xchg
std
add
addr16
jg
xor
dec
mov
inc
cmpsb
les
rorb
xlat
lea
push
jge
notl
daa
sub
scas
lods
or
cld
xchg
fldt
mov
sarb
pop
adc
lods
loopne
enter
inc
sbb
pop
xchg
jnp
hlt
and
out
fsubl
stos
mov
xor
sub
cmpsb
push
mov
push
mov
push
and
mov
or
or
lods
hlt
adc
test
jge
loop
and
mov
dec
leave
outsl
inc
pop
lahf
arpl
loop
rcrb
push
int3
pusha
and
sahf
mov
inc
sahf
fs
dec
fcoms
fstp
int3
aaa
xor
aam
cmp
pop
stos
mov
jecxz
mov
int
icebp
xchg
dec
mov
test
adc
mov
std
or
sbb
xorl
mov
cmc
sbb
add
adc
and
inc
into
pushf
pop
add
dec
into
jae
inc
stos
mov
pop
jne
jl
sarb
leavew
ret
dec
pop
xchg
adc
and
je
nop
mov
cs
out
cli
out
ljmp
lahf
push
rolb
imul
shrb
jmp
clc
aaa
sub
cli
outsl
push
push
inc
orl
hlt
or
mov
cmpsl
sub
int3
cmp
fwait
xchg
inc
push
and
xor
lret
push
mov
sub
out
sub
mov
xor
xor
dec
stos
insl
repz
call
mov
xor
fildl
mov
cmp
out
loopne
rcl
lods
and
les
push
cmc
andl
adcb
fldt
jae
xor
cs
push
iret
sti
out
out
fwait
in
xchg
jbe
mov
mov
cmp
fsubl
test
clc
cmp
mov
inc
aas
ret
cmc
mov
shlb
stos
std
cmp
insl
mov
mov
or
rcrl
mov
test
pop
int3
xchg
mov
cs
aas
mov
sbb
sub
jno
dec
loopne
xchg
xchg
scas
inc
out
xor
sub
iret
stc
ds
mov
add
aaa
js
xchg
sahf
stos
lea
cmp
jle
leave
mov
xor
xorl
adc
add
add
lea
or
adc
fyl2xp1
fnstcw
fwait
es
or
pop
loop
push
adc
jl
mov
sti
sub
push
pushl
shll
loopne
pop
mov
dec
push
dec
mov
jno
out
in
adc
out
adc
mov
clc
mov
xchg
daa
fs
es
push
inc
imul
push
or
xor
mov
sti
or
xchg
adc
adc
adc
sbb
push
ss
cmpsl
push
mov
loopne
push
or
shl
fsubl
xchg
xor
add
inc
adc
xchg
cmp
add
pushf
inc
repz
jle
clc
in
jecxz
lret
adc
dec
xor
xchg
scas
popa
in
xor
movsl
cmp
xor
jae
sbb
arpl
ret
mov
loope
lods
cli
test
ret
mov
pusha
cmc
xor
sbb
mov
or
inc
mov
xor
shl
out
leavew
sbb
sbb
dec
and
mov
inc
inc
lret
sbb
subl
cmpsl
out
in
je
adc
mov
gs
movsb
adc
inc
sbb
cmc
mov
xor
push
es
push
sub
jge
cwtl
pop
jae
nop
outsl
cmp
insb
fistpl
push
std
or
test
pop
or
mov
pop
jns
stos
out
nop
sub
sub
loop
jle
push
les
iret
jp
popf
xor
xor
push
movsb
xchg
sbb
pop
push
pop
stos
mov
jmp
add
lock
jmp
inc
or
push
dec
into
cs
jno
pop
dec
pop
mov
pop
call
inc
sti
inc
push
xor
mov
mov
fstps
xor
cmp
add
fisttpll
xchg
orb
push
mov
dec
push
ficoml
inc
ds
cmp
jnp
lahf
mov
imul
gs
testb
xor
mov
xchg
stos
cmp
mov
loopne
fcmovbe
push
jmp
add
or
inc
and
cmp
es
lds
stc
pop
jb
cmp
test
mov
pop
sti
adc
lds
pop
mov
test
inc
addr16
dec
test
int3
and
ret
jmp
jne
push
xchg
mov
sub
mov
sub
or
add
pop
popf
pop
test
xchg
cmp
hlt
in
stos
jnp
pop
pushf
jbe
push
test
xchg
lds
ret
sub
dec
jle
ds
xor
outsl
in
and
or
xchg
mov
add
mov
movsl
ret
pushf
fldenv
add
lea
aam
cwtl
cmp
mov
sbb
sbb
outsb
jnp
pusha
push
xor
mov
repnz
inc
std
out
push
xchg
rcrl
nop
mov
or
movsl
sbb
mov
fstp
xchg
test
push
mov
dec
shrl
adc
lret
adc
jnp
ss
xor
clc
push
sar
mov
enter
shrb
mov
hlt
repz
in
mov
push
les
es
and
stc
and
into
rolb
dec
cmp
sub
sub
push
lcall
scas
loopne
jnp
adc
and
and
xor
and
arpl
push
das
imul
cmp
stos
out
cmc
lret
cld
frstor
mov
sub
mov
bswap
push
jns
jne
xchg
pop
or
mov
xlat
lods
and
and
cmp
inc
cmp
jnp
xchg
cli
cli
push
inc
lods
cmp
mov
sbb
mov
out
mov
imul
and
cltd
das
lret
mov
movsl
mov
xor
sbb
leave
mov
inc
ret
cmpsb
cmp
or
je
dec
push
cmp
outsb
jge
add
cltd
int
jne
mov
cmpsl
or
fs
adcb
jg
or
sbb
lret
pop
xchg
push
sahf
xchg
lods
sbb
jo
pop
inc
add
test
adc
andl
sub
sub
pop
and
je
pop
mov
and
adc
jge
pop
dec
xchg
xor
int
sbb
jae
ja
sbb
jnp
das
jle
mov
push
sbb
icebp
dec
fdivrs
mov
pop
dec
dec
dec
dec
mov
dec
and
cmpsl
pushf
inc
mov
push
nop
and
push
fiadds
ret
sub
push
fwait
shlb
inc
addb
rcrl
mov
sbb
dec
jl
mov
icebp
inc
mov
jno
add
loope
cmpsl
inc
cmp
push
xchg
sbb
xor
dec
pop
adc
add
mov
xor
mov
fwait
ljmp
xor
pop
dec
dec
iret
pushw
insl
cmp
and
int
xchg
lahf
push
popf
xchg
in
fidivrs
sahf
movsl
movsb
arpl
sub
scas
lret
cmp
hlt
dec
dec
ja
cmp
push
sahf
add
jge
sbb
lahf
mov
cmp
inc
lock
add
lahf
mov
sbb
ds
sahf
xchg
xor
jnp
jae
mov
lahf
push
adc
out
sbb
pop
stos
xchg
cmc
fidivl
gs
fdiv
or
rorl
or
out
mov
jmp
mov
out
in
orb
fimuls
das
fdivl
fnstenv
xlat
jno
idiv
adcl
stos
push
int
mov
push
or
cld
push
fwait
xor
setbe
jge
lcall
fs
out
orb
inc
mov
mov
mov
gs
test
aaa
push
or
je
cmpsl
push
or
jno
js
roll
bound
cmp
scas
fstl
imul
mov
mov
ds
push
push
dec
sbb
mov
add
repz
ret
daa
test
clc
aad
cmpsb
xchg
cmp
push
movl
add
std
add
inc
mov
sub
rcr
sub
jbe
mov
mov
xchg
mov
sub
sub
jo
add
leave
inc
fcomps
mov
jmp
jbe
mov
daa
adc
mov
clc
out
pop
fwait
push
nop
ds
ficomps
loope
in
lret
push
dec
daa
push
inc
jmp
test
cltd
insl
jp
jae
pop
arpl
mov
cmp
lret
push
sbb
hlt
aam
mov
fstp
sub
cmp
push
cltd
insb
pop
out
es
jge
push
xor
cld
flds
adc
movb
push
out
iret
xchg
popa
clc
in
push
insl
pop
xchg
sub
and
out
adc
stos
inc
stos
sbb
push
fisubrl
fbstp
and
or
imul
add
ret
jg
popa
pop
xchg
push
cmp
sbb
sbb
xor
xchg
or
mov
sahf
lret
jo
rcrl
outsl
leave
or
les
shll
and
inc
sub
sub
sub
inc
add
inc
fdivp
cmp
lahf
dec
jecxz
imul
jnp
sub
rorl
mov
test
arpl
or
sub
mov
test
jnp
push
mov
cld
ror
lds
mov
jmp
push
push
or
daa
xor
nop
mov
and
sarl
pusha
dec
int
jg
add
sarl
loopne,pt
mov
mov
push
cltd
outsb
xchg
adc
roll
push
test
dec
mov
or
aaa
xorb
nop
sbb
les
mov
mov
cli
iret
xchg
xchg
mov
push
mov
sbb
mov
iret
add
pop
dec
jp
lods
loopne
adc
dec
repnz
mulb
add
cmpb
out
popf
sarb
pop
scas
aam
xchg
icebp
mov
mov
lds
add
rclb
repnz
cld
pop
stos
jae
loope
inc
jae
jno
dec
in
mov
mov
inc
pop
cmc
out
inc
xchg
lcall
fistps
cld
adc
jge
jns
lret
loopne
add
mov
add
lds
stos
lods
aam
sbb
dec
pop
movsb
inc
pop
xor
xchg
dec
scas
imul
mov
cmp
xchg
inc
inc
xlat
add
jp
inc
dec
push
mov
inc
test
lock
jmp
jae
add
sbb
add
jb
mov
mov
cmp
jp
sti
lock
cld
cmpsb
mov
fmull
decb
shll
jno
scas
cmp
mov
push
pop
jb
insb
popa
sarl
or
ss
pop
and
hlt
mov
clc
outsb
cmp
mov
pop
jb
daa
xor
repz
adcl
std
les
mov
inc
pop
shlb
enter
rcr
mov
jl
stos
or
ret
repnz
cwtl
jne
mov
insl
mov
adc
jge
or
loop
mov
mov
sub
xor
xor
cmpsb
or
lock
xor
adc
stos
enter
push
cld
or
sub
dec
xchg
fst
stc
ds
daa
test
mov
jae
or
ror
and
repz
mulb
cli
in
or
sbb
repnz
aam
imul
inc
imul
dec
ja
push
jp
xchg
insb
fisttpl
clts
xchg
cmpsl
sub
inc
imul
and
test
lret
jnp
xchg
mov
mov
jl
sbb
or
mov
shlb
inc
dec
std
aam
mov
sub
leave
sbb
push
adc
data16
mov
inc
outsb
push
pop
pop
or
ds
pushf
divl
ds
pop
into
out
aas
mov
insb
notl
lods
cmp
shrl
adc
mov
add
and
pop
aam
pusha
cwtl
xchg
sub
test
sbb
jmp
gs
mov
loop
dec
jg
inc
lret
sub
mov
and
ret
call
loope
daa
mov
pop
mov
mov
outsb
clc
stos
cmp
cmp
jle
hlt
icebp
xchg
pop
ljmp
in
sub
push
lcall
cmpsb
shll
push
hlt
insb
jae
mov
cmp
enter
lret
nop
sarb
call
pop
or
xchg
xchg
pop
sbb
pop
ror
mov
popa
xchg
inc
add
pop
sbb
mov
sub
mov
and
out
scas
cmp
adc
mov
mov
inc
jb
cltd
pop
ja
negl
out
movsl
mov
stos
mov
cld
and
pop
scas
dec
push
inc
das
dec
pop
lods
pop
pusha
xor
mov
jg
pop
jp
ret
in
dec
adc
sbb
daa
adc
loopne
pop
addr16
dec
lahf
jl
and
mov
xchg
jns
pop
popw
mov
cli
adc
addr16
imull
dec
dec
iret
sahf
mov
dec
mov
add
jle
mov
pop
mov
or
in
inc
push
je
leave
imul
hlt
lahf
lods
mov
sar
cmp
sarb
jb
push
test
fcmovbe
lahf
pushf
mov
daa
push
push
cs
jnp
jnp
cmp
testl
xchg
fidivs
fimuls
test
test
and
imul
mov
add
fcoms
jl
imull
adc
shlb
rcrl
hlt
or
mov
xor
cmp
sbb
cwtl
test
pop
mov
xchg
cmc
enter
leave
mov
imul
cmp
fnstcw
inc
pusha
lods
filds
gs
cmp
push
rorl
pop
or
sub
mov
cmp
jno
ss
test
out
cmpsl
pop
sbb
fdivr
push
adc
mov
jmp
push
xchg
mov
push
shll
mov
iret
cli
xor
lods
clc
js
and
jecxz
pop
adc
jle
dec
fiadds
xchg
mov
dec
lods
loope
test
xor
jnp
leave
int3
and
mov
scas
dec
out
add
int3
mov
cmpsb
pop
xchg
adcb
or
inc
fisttps
adc
push
lea
cmp
daa
cmpsl
fildll
xchg
sahf
movsb
fnstsw
xor
sub
sub
popa
mov
aas
pop
int
or
push
push
push
mov
scas
lahf
sub
fwait
ret
ret
push
mov
cmpsb
add
cltd
aam
jl
fs
sti
lods
iret
dec
sub
jl
fwait
stos
cs
xchg
inc
adc
sbb
cmpsl
fsubrs
rorb
add
test
pop
ficompl
push
sbb
sbb
loopne
negl
out
mov
cmc
mov
cld
test
mov
ret
cwtl
fldcw
mov
xchg
mov
fwait
test
jg
dec
fstpl
das
mov
pop
insl
out
jge
dec
iret
pop
fildll
sbb
jg
dec
fstpl
das
mov
pop
insl
out
jge
dec
iret
pop
fildll
sbb
jg
dec
fstpl
das
mov
pop
insl
out
jge
dec
iret
pop
fildll
sbb
in
outsl
cld
jg
dec
fstpl
das
mov
loopne
adc
out
pop
test
daa
mov
bnd
pusha
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
pop
push
dec
loope
shrl
adc
push
dec
fisubs
sbb
inc
in
inc
popf
xor
add
dec
loope
shrl
sbb
xchg
sub
popa
std
jno
inc
popf
push
mov
mov
call
insl
fcomps
mov
pop
lea
inc
popf
jo
dec
incb
add
icebp
sub
jge
add
adc
js
montmul
cmpsb
inc
adc
push
ljmp
in
ljmp
pop
nop
cmp
rcrl
or
inc
mov
inc
adc
mov
je
adc
dec
mov
mov
mul
jb
arpl
fsubs
pushf
and
and
out
lods
add
push
mov
xchg
repnz
fs
sub
sahf
sbb
adc
inc
fwait
imul
enter
nop
and
xchg
sub
sbb
lds
adc
inc
int
or
popa
mov
inc
rcll
inc
cltd
stos
cmp
jne
inc
xchg
ficoms
scas
adc
shrl
mov
mov
jns
dec
in
pop
popf
sub
cmp
sarb
iret
push
std
test
sbb
pop
int3
jb
adc
insb
sub
sub
js
inc
xchg
js
push
add
inc
call
cmp
or
xchg
sub
popa
std
push
in
inc
popf
xor
add
dec
loope
shrl
sbb
xchg
sub
popa
std
push
in
inc
popf
xor
add
sub
loopne
adc
int
or
and
cld
in
mov
adc
rol
lahf
rorl
daa
inc
lods
data16
int
cmc
fldl2t
or
sbb
cmp
dec
push
sbb
cmp
xchg
mov
addr16
jl
outsb
pop
or
stos
pop
push
shrb
jnp
sahf
jg
and
push
lods
jb
jmp
call
loop
pop
mov
jns
pop
aas
fstl
leave
pusha
pop
andl
mov
dec
jns
add
add
fwait
scas
in
cmc
add
adc
xchg
lea
push
xchg
xchg
add
xchg
outsb
sbb
outsb
mov
pop
dec
rolb
cld
js
filds
pop
nop
and
sub
inc
and
movsb
mov
push
int3
iret
out
sub
jnp
outsb
ljmp
cmp
test
daa
mov
aaa
pop
les
pop
aaa
ficoml
jecxz
pop
bound
cmpsl
jo
addb
in
xchg
sbb
fnstsw
mov
jno
mov
stos
jbe
add
cmpsl
cmpsb
es
mov
push
jle
mov
dec
in
xor
test
pusha
mov
xor
dec
and
sbb
xchg
lea
shrb
arpl
jp
outsl
stos
cltd
mov
ljmp
lcall
mov
add
pop
or
xchg
pop
mov
pop
jbe
das
je
cmp
mov
stc
pop
scas
mov
adc
cmp
xlat
and
je
loopne
jp
push
fcmovbe
pop
insl
and
xchg
lock
sub
in
lcall
sub
mov
cmp
cmp
xlat
push
xor
sahf
push
pop
inc
shr
or
test
test
mov
push
sbb
adc
xlat
sbb
mov
sbb
aaa
xchg
out
inc
add
pop
mov
mov
jle
adc
fstpl
mov
dec
and
scas
icebp
xchg
dec
and
ljmp
push
dec
pop
adc
adc
imul
xor
mov
fwait
das
lea
divb
push
jns
pop
add
add
pop
mov
nop
popl
or
insl
inc
add
inc
int
lods
jbe
frstor
stos
add
sbb
mov
test
lea
mov
stos
outsb
cmpsl
seta
lret
les
loopne
push
add
sub
xor
inc
lret
dec
mov
mov
out
or
outsb
mov
mov
push
mov
jo
jg
pop
dec
pop
bound
outsl
aaa
orl
mov
andl
adc
cmpsl
arpl
adc
test
rclb
pusha
push
test
cmpsl
jle
mov
adc
sub
lcall
adc
fistl
or
or
push
out
rorl
sbbl
cmc
enter
mov
push
sub
mov
test
out
gs
shlb
mov
ret
and
je
inc
sub
cld
test
dec
push
inc
aas
pop
cmc
lret
addr16
shlb
lcall
mov
addr16
xchg
std
push
lret
leave
jl
add
in
inc
mov
sub
pop
jp
mov
insb
ficompl
ret
aad
xchg
daa
lcall
sahf
inc
jb
mov
xor
data16
rol
adc
lods
pop
roll
dec
push
inc
or
jnp
jle
jae
das
es
sub
outsb
mov
fdivp
pushf
jb
aad
mov
fisubs
sbb
popf
pushf
inc
mov
ret
pop
lret
clc
xor
rorb
in
cmp
popa
out
mov
cmp
jmp
sub
mov
push
lcall
or
cmpl
int3
nop
orb
daa
fstpt
push
xor
loop
adc
lahf
ret
xchg
fdivs
stos
inc
in
fstpl
in
clc
or
pop
notl
aad
scas
js
enter
test
sub
sarb
mov
cs
push
jp
mov
mov
mov
xchg
dec
push
stos
adc
or
ds
jb
jnp
xchg
pop
inc
fidivrs
xchg
add
sti
sub
jmp
into
jl
and
fwait
movsb
sar
or
mov
mov
jle
in
xorb
inc
sbb
mov
in
jmp
xchg
pop
mov
xchg
les
xchg
aaa
pop
push
lods
imul
mov
jbe
mov
lock
cltd
nop
xchg
mov
push
test
jecxz
fcmovnb
adc
out
loop
fmull
jae
fsubrp
cmpsb
cmp
adc
and
aam
mov
mov
push
gs
jne
out
pop
out
pusha
ds
sub
inc
call
xchg
ja
and
push
mov
int3
insl
jmp
mov
inc
xrelease
inc
cmp
jmp
cmp
xorb
fwait
cmp
repnz
in
add
popa
inc
mov
xchg
dec
fs
mov
inc
fdivp
dec
iret
mov
in
cltd
inc
mov
and
xlat
sahf
stos
xchg
test
add
sbb
out
dec
dec
cmp
es
lea
push
xchg
nop
mov
insb
xchg
xchg
imul
aaa
in
push
inc
loop
sahf
or
or
sbb
push
mov
dec
lock
out
inc
inc
cmp
mov
sub
in
adc
in
jbe
addr16
les
js
lret
mov
ficoml
lahf
movlps
hlt
loope
and
faddl
and
xor
rcrl
nop
in
fsubrs
jmp
xor
cmp
push
imul
lods
sub
mov
loop
push
out
sub
mov
xor
adc
mov
jne
out
cmp
mov
sbb
or
mov
jb
lret
pop
es
daa
push
loopne
test
imulb
push
jbe
cmc
out
inc
ficomps
dec
xchg
out
cwtl
pop
pop
and
ljmp
mov
cwtl
test
rorb
pop
cwtl
jp
pop
daa
into
xchg
bound
sar
add
rcll
dec
push
jo
repnz
mov
cmp
ljmp
jp
lret
dec
add
scas
lcall
dec
js
stos
aaa
jl
or
repnz
pusha
sbb
negb
mov
into
pop
or
add
lock
xor
dec
pop
inc
and
mov
push
push
push
aam
push
dec
les
add
mov
inc
mov
rcr
and
cmpsl
je
icebp
inc
mov
leave
imul
add
aaa
or
ret
ret
inc
fisubrs
dec
pop
jb
call
ss
jge
cmp
add
arpl
ja
aas
sbb
stos
xchg
sbbb
int3
hlt
or
mov
xor
add
push
xor
ret
xor
and
fidivrl
cmp
sbb
xchg
lret
adc
and
and
cli
out
pop
pop
cmp
inc
xchg
test
push
xlat
nop
mov
shrb
mov
mov
push
lret
cmpsb
outsl
mull
inc
in
push
testl
mov
dec
and
and
cmp
jmp
mov
xor
mov
repz
sbb
mov
sbb
mov
rcr
fdivrs
inc
dec
pop
mov
add
and
fwait
pop
sbb
jecxz
ret
push
popf
imul
mov
mov
pop
push
inc
dec
mov
adc
mov
inc
pusha
loope
lahf
inc
stos
pop
out
icebp
pusha
inc
push
cmpsl
xor
xchg
test
xor
and
ret
daa
xchg
push
ss
dec
aas
mov
shlb
cmp
push
mov
xchg
addb
loopne
leave
jp
mov
sub
kandb
arpl
jmp
jmp
rol
mov
push
rcll
add
inc
inc
mov
push
and
jno
xor
mov
mov
lds
cmp
fwait
and
fisubl
pop
dec
jle
pusha
jmp
adc
outsl
push
and
or
movsb
fidivrl
mov
xchg
push
jns
mov
cmp
enter
repnz
inc
daa
inc
jp
cld
or
inc
repz
fdivrp
mov
inc
iret
stos
fildll
adc
rcrb
inc
push
or
imull
adc
or
popa
or
mov
outsb
adc
pop
sbb
mov
mov
out
sub
push
test
jg
lcall
out
mov
jmp
mov
es
lcall
dec
inc
insl
xor
sub
shlb
outsb
pop
dec
sahf
pop
repnz
daa
jmp
cmpsl
jo
daa
sbb
sub
jge
das
mov
stc
sbb
mov
sub
out
push
push
je
add
cld
cld
inc
inc
imul
sahf
inc
shlb
into
pop
popa
dec
inc
mov
movsl
and
pop
sub
lods
inc
dec
or
mov
xor
adc
cmpsb
mov
lods
std
test
xchg
pop
sbb
je
rcl
mov
mov
jnp
cmp
or
lea
loope
add
mov
leave
repnz
and
jb
push
push
jp
loope
adc
inc
dec
xor
ds
inc
shlb
fcmovbe
pusha
inc
testl
repz
pop
incb
sub
insb
aas
sub
pop
push
dec
jle
test
cwtl
dec
inc
jge
sub
sbb
aad
int3
in
or
adc
dec
xchg
out
push
sbbl
in
sub
xchg
mov
stc
xor
or
or
mov
out
inc
iret
mov
add
xor
decl
jnp
pop
sbb
inc
dec
cwtl
xchg
mov
call
xor
rorb
add
lret
mov
inc
out
ss
jne
imul
les
in
loope
add
inc
fdivrs
mov
xlat
jbe
mov
dec
sar
adc
add
fcoml
das
popf
push
sarl
fs
mov
mov
out
xchg
fimull
movsl
push
sub
mov
mov
insb
sbb
fwait
cli
push
inc
dec
inc
jne
or
xor
lcall
icebp
icebp
xchg
and
inc
js
xchg
adc
adc
and
sub
out
pop
cltd
sub
mov
lcall
dec
xor
inc
or
push
push
mov
adc
std
push
xchg
insl
cmp
jecxz
xor
sub
or
mov
mov
mov
lods
and
call
loope
xchg
pop
hlt
outsl
aad
push
das
mov
and
pop
add
test
or
mov
cmp
add
mov
cmpb
insb
mov
pop
mov
pop
dec
mov
sub
xchg
jg
insb
cwtl
mov
inc
push
jne
mov
aaa
lret
add
pop
aad
rclb
icebp
lock
mov
jbe
sbb
sub
cld
mov
push
hlt
adc
dec
mov
sub
repnz
mov
cmp
or
scas
adc
sbb
or
push
mov
shufps
dec
test
mov
push
jnp
lea
sti
push
dec
pop
push
repz
and
out
xor
movsb
jmp
test
mov
inc
xor
push
lret
call
hlt
pop
fxch
ljmp
push
addl
xorl
cltd
add
das
insl
lds
sub
mov
ja,pn
dec
cmp
arpl
push
int3
out
nop
insl
mov
and
and
imull
sub
insb
dec
enter
inc
repnz
xlat
push
sub
sub
mov
andb
inc
inc
inc
inc
inc
std
mov
ds
repz
loopne
in
pop
out
cwtl
xchg
notb
mov
mov
fsub
rclb
sahf
rcll
in
xchg
lret
pop
mov
jbe
in
test
adc
xchg
repnz
dec
shl
shr
add
cmc
sub
jo
pop
or
fwait
xor
jo
in
shl
dec
mov
sub
int
cmp
cltd
mov
inc
es
mov
aas
jb
movsb
inc
aad
into
mov
movsb
sub
in
xchg
or
pop
mov
aaa
jmp
xchg
bound
fdivp
pop
imul
add
adcb
lcall
cmc
fdiv
add
bound
dec
es
pop
repz
adc
jo
cmp
fisttpll
and
ds
or
in
and
mov
jae
cmp
loopne
sbb
sbb
push
bound
lahf
or
leave
fmulp
xchg
or
loopne
outsl
test
gs
add
sub
f2xm1
mov
inc
clc
or
push
cli
hlt
cmp
test
fisubrl
stos
insb
or
pop
cmp
rcll
adc
adc
cmp
outsb
xor
inc
sbb
ss
xor
push
gs
lds
xor
aaa
imul
aad
ja
imul
mov
inc
shrl
mov
movsl
inc
add
or
fbstp
mov
adc
dec
std
enter
mov
dec
mov
cmp
lret
cmp
sbbl
jle
mov
jle
add
adc
mov
xor
cmpsl
es
push
int
and
mov
pop
mov
jecxz
mov
aam
xlat
data16
scas
cmpsb
xchg
andl
mov
pop
outsl
in
dec
repnz
pusha
xchg
sahf
cmp
jge
clc
sub
bnd
sti
mov
jg
push
imul
mov
stc
and
out
add
jle
lahf
mov
mov
fs
es
and
xor
push
jmp
outsb
push
and
xchg
stos
sbb
xor
push
or
xor
lret
pop
push
mov
cltd
mov
mov
mov
push
cmp
test
test
inc
push
and
hlt
movsl
aad
je
mov
push
lock
pop
gs
or
sub
ss
lds
lret
sub
test
xor
pop
rorb
daa
or
push
test
mov
jo
push
xor
leave
xchg
je
in
mov
test
jbe
push
filds
sub
or
jns
lods
dec
pop
mov
call
fldcw
mov
outsl
xor
jmp
icebp
sub
jb
mov
dec
arpl
mov
dec
jl
mov
pop
sub
push
pop
sbb
rolb
leave
jmp
int
push
popf
pop
cmp
inc
ljmp
mov
lahf
xchg
ret
and
sbb
out
ja
dec
push
shrb
aam
icebp
push
mov
scas
mov
stos
add
sti
and
call
jg
jnp
call
sub
jno
dec
sub
dec
pushf
imul
mov
add
mov
adc
xor
and
es
lret
outsl
push
stc
dec
push
sub
addr16
ret
gs
jae
mov
and
mov
fucomp
outsb
and
mov
lock
ftst
push
dec
jmp
mov
and
dec
fs
lcall
repz
cmp
mov
and
sbb
inc
xchg
rcll
out
fs
jb
jg
mov
fs
and
scas
out
rorl
fidivs
pop
lock
inc
mov
or
psrld
pop
push
pop
adc
xor
in
inc
popa
inc
pop
insb
jnp
dec
pop
mov
push
push
add
or
cmpsb
pushf
lret
adc
ret
shrl
pop
mov
jnp
dec
lret
xor
ljmp
fnstcw
cmp
in
aam
arpl
mov
pushf
mov
fisttps
cld
loop
dec
add
push
jae
cmc
and
add
xlat
inc
jmp
sahf
test
daa
mov
jmp
ja
jp
xchg
jmp
mov
mov
lret
lcall
shrb
mov
pop
cmp
call
in
sub
xchg
in
jbe
mov
jae
lret
xchg
insb
push
gs
fisttpll
mov
xchg
cmp
scas
cmpl
fcoml
ljmp
sub
out
and
push
outsl
mov
or
stos
mov
jnp
cmp
push
sub
imul
pop
add
shl
pop
sbb
int
lret
pop
lds
xchg
sti
xor
fucom
add
mov
xlat
dec
fcmove
sbb
sub
xchg
pop
loopne
das
sbb
push
hlt
xlat
mov
sub
in
sbb
popf
sbb
rol
fucomip
out
add
lods
das
test
jmp
cmp
iret
loope
sub
sbb
sbb
mov
fldcw
jp
movsl
insb
int
and
pop
cmpsb
xchg
cmp
in
add
add
cs
repz
or
iret
fnsave
sbb
andb
ficoms
push
fiaddl
mov
jbe
cmpsb
je
mov
sub
add
and
mov
shll
adc
shlb
jns
jae
jge
xlat
loope
lret
sahf
mov
cli
mov
stc
adc
movsb
outsl
mov
adcl
cmp
aas
push
imul
jbe
pop
push
dec
xchg
adc
inc
jo
imul
mov
movsb
adc
into
push
div
loope
mov
repnz
mov
in
xchg
fcomip
mov
in
shl
cli
lods
addr16
int
inc
ja
lds
ret
and
pushl
mov
push
pushf
js
in
jnp
mov
mov
lds
gs
or
xor
dec
push
sbb
xchg
test
mov
inc
pusha
mov
sub
xor
jnp
cmp
cmp
xchg
xchg
das
int3
push
xchg
and
test
ret
stc
mov
mov
mov
mov
and
add
pop
andb
inc
mov
inc
loop
push
sub
inc
mov
jmp
in
cwtl
imull
sbb
jl
sub
mov
addr16
lret
mov
popa
imull
outsl
cmp
rclb
cmp
xor
and
icebp
pusha
outsl
dec
pop
adc
mov
js
jne
test
push
js
mov
clc
cmpsb
push
jecxz
cmp
mov
mov
test
fistl
cs
aam
sub
and
es
adc
lcall
lock
insl
ds
ja
test
jae
orl
test
and
mov
adc
lahf
repnz
jl
std
add
sub
inc
jmp
jecxz
push
adc
push
lock
in
int3
dec
xlat
jg
outsl
das
btr
pop
lcall
xchg
mov
sti
rcrb
jae
mov
or
adc
bound
popf
std
fimull
aad
or
sub
push
pop
pop
cmp
cmp
jg
cmp
popf
scas
sbb
mov
cli
stc
decb
aam
push
int
and
daa
cmpsb
jns
in
fisttpl
push
xor
sbb
lret
sub
add
test
pop
arpl
sub
les
pop
or
ja
mov
adc
xor
pop
insl
lods
push
loope
xchg
mov
push
sub
push
lods
mov
or
xchg
pop
cmp
cld
andl
loopne
push
icebp
cmc
mov
push
push
xor
jge
imul
mov
faddp
gs
ss
sub
fcompl
mov
mov
xor
lea
loop
icebp
out
jle
cs
pop
fs
repz
cmp
popf
sbb
rep
mov
mov
jg
aad
jmp
out
cmp
inc
aad
sbb
decl
insb
dec
fisubl
stc
jne
aam
ret
cli
cltd
inc
pop
aaa
movups
push
lods
or
aad
leave
int
lock
or
dec
mov
arpl
cmp
jge
add
jge
mov
subb
pop
mov
popa
mov
inc
sbb
mov
sub
jmp
mov
xchg
fidivrl
iret
cli
pop
movsb
pop
mov
les
fisttpll
add
sbb
jae
or
xchg
pop
xlat
push
and
dec
mov
movb
sarb
aam
sub
xchg
das
ds
test
ljmp
xchg
repnz
das
or
lea
pop
loopne
shl
inc
ds
rcrl
sub
popa
std
push
in
inc
popf
xor
add
dec
loope
shrl
sbb
xchg
sub
popa
std
push
in
inc
popf
xor
add
dec
loope
shrl
sbb
xchg
sub
popa
std
push
in
inc
popf
xor
add
dec
loope
shrl
sbb
xchg
lods
andl
push
in
ss
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
or
inc
and
pusha
add
leave
jae
adc
dec
inc
xchg
test
mov
nop
icebp
shrb
mov
and
pusha
add
jno
jno
push
and
xchg
xchg
and
mov
mov
cmp
js
or
jns
dec
aaa
pop
shlb
xchg
hlt
mov
mov
inc
push
cmp
push
data16
fldcw
cmp
jl
mov
xor
stos
jo
jo
xlat
add
xchg
shrb
pop
xadd
jle
xchg
xlat
mov
mov
dec
and
sbb
mov
mov
outsl
push
lds
shll
subb
nop
out
jmp
xor
and
test
lock
mov
fs
shll
out
adc
inc
mov
adc
pop
xor
fmuls
pop
in
loopne
cmp
xor
mov
inc
push
aas
jmp
mov
rclb
adc
fnstcw
lret
movd
jle
fsts
nop
es
xor
ja
add
popa
xor
pop
leave
mov
mov
mov
cwtl
stc
mov
mov
push
adc
jae
add
cmp
shlb
xchg
in
aad
lds
adc
jno
das
pop
and
rol
hlt
xchg
xor
repz
mov
mov
xor
adc
inc
add
push
and
mov
mov
nop
icebp
and
shll
and
pusha
add
jno
popa
xor
inc
shlb
loopne
nop
icebp
and
shll
xor
xchg
or
aas
cli
xchg
mov
aam
test
fsubr
dec
scas
mov
inc
imul
sub
cmp
mov
lcall
inc
lea
out
sub
xor
jl
sarb
or
jg
push
adc
cmpsl
sbb
dec
sarb
xor
inc
pop
xchg
leave
repnz
dec
mov
std
lret
mov
push
pop
xchg
inc
or
inc
add
call
nop
push
add
xchg
outsl
sbb
lret
sub
push
cvtps2pi
jns
es
push
sbb
and
sti
cltd
shll
cmp
outsl
or
sbb
push
sbb
xchg
hlt
ja
mov
insl
dec
dec
dec
jge
aas
adc
xorb
stos
testb
test
xchg
ja
ss
or
leave
jl
out
xorl
mov
jmp
sbb
sbb
add
pop
in
pop
mov
pop
int
mov
xor
clc
fdivrs
out
dec
xor
and
mov
fistpll
sub
xor
sbb
mov
repnz
xchg
fsubrl
or
dec
xchg
mov
xchg
jge
inc
loop
sarb
inc
dec
inc
or
cmp
in
jp
sbb
jns
cltd
rol
cld
cmpsl
dec
pop
mov
push
out
adc
sub
dec
mov
cmp
or
mov
push
pusha
pop
push
fs
out
aam
popf
sahf
dec
les
push
js
jp
inc
mov
fidivl
ret
xorl
int
lret
push
and
lods
pushf
sub
addr16
dec
jmp
add
pop
shlb
clc
adc
out
mov
in
mov
mov
stos
das
jbe
adc
push
out
jle
cmpsb
cs
mov
cmpsl
jno
pop
dec
sub
cs
xchg
jl
push
jmp
ja
orl
and
cltd
jmp
shlb
push
mov
daa
test
sbb
repz
insl
mov
daa
xlat
inc
xor
jne
xor
test
cmp
mov
into
cs
pop
out
mov
pop
cmp
jmp
adc
jge
bound
push
js
popa
push
jle
or
mov
dec
in
test
stos
and
int
cmp
sub
mov
push
mov
daa
data16
outsb
movsb
inc
fcmovnbe
popf
mov
imul
in
push
fwait
fs
mov
cltd
notb
and
fsubp
ds
int3
je
inc
xor
nop
fwait
loope
mov
lret
ljmp
in
adcl
mov
and
xor
sub
sti
xchg
in
jmp
cmp
fmulp
jae
mov
jno
sbb
out
adc
cmp
repz
inc
add
mov
cmc
mov
lret
pushl
or
lcall
add
cmovo
test
std
xor
sub
pop
xor
mov
pop
jne
push
fstps
aad
jp
int
inc
mov
int3
daa
gs
add
enter
jns
push
mov
xchg
daa
xor
scas
in
mov
pop
lock
add
scas
add
std
xchg
leave
sbb
popa
and
jg
lods
cmp
cmp
int3
sbb
sbb
ljmp
fisubrl
and
shll
es
sbb
jle
out
inc
clc
cmp
mov
jle
mov
jp
sub
and
mov
dec
stc
and
sbb
mov
lock
pop
mov
adc
std
testb
int
or
xchg
fstp
clc
xchg
jb
fwait
mov
inc
adc
mov
cld
sbb
pop
add
imull
inc
push
test
clc
dec
ljmp
aaa
pop
add
and
in
pop
into
mov
js
stos
mov
es
sub
mov
lea
pop
push
xor
movb
rcr
out
xor
neg
ret
jge
sub
or
xlat
outsb
sub
sbb
pop
mov
outsl
push
xchg
in
adc
inc
scas
sbb
andb
popa
and
jecxz
fstpt
lcall
aam
add
jp
push
lods
jo
and
outsl
push
int3
inc
das
add
push
mulb
fstpt
pop
or
aas
or
sti
pushf
push
sub
fadd
and
lods
xchg
or
sub
andb
je
lods
pushf
stos
xor
push
ds
loop
sbb
lret
inc
pop
mov
add
pop
mov
aas
sbb
adc
push
push
pop
call
dec
jl
jp
sbb
xchg
insb
xchg
lahf
popf
lret
dec
pusha
fbstp
mov
add
or
pop
jg
pushf
cwtl
and
adc
ss
xchg
sub
push
mov
xchg
js
aam
iret
pop
ret
sbb
loop
sub
pop
or
pop
and
repnz
jns
push
pop
out
lods
push
stos
fs
xchg
lcall
mov
mov
ja
inc
int3
add
mov
rcr
movsl
adc
out
outsl
and
orb
repnz
rcl
pop
cmc
jle
xchg
arpl
pop
cmp
dec
jnp
jb
pop
repz
cmp
dec
sub
stos
not
inc
lea
loopne
in
iret
jae
xor
test
outsl
xlat
lods
ret
jo
jo
mov
adc
loope
enter
out
sbb
push
cs
jo
cltd
fsubrl
sbb
imul
rorb
out
hlt
ret
daa
addr16
out
mov
cmpsb
into
adc
mov
inc
cmovp
cmp
cmp
cmc
dec
nop
jecxz
cmp
pop
inc
sbb
leave
hlt
fld
jnp
xchg
lock
jle
push
mov
inc
imul
fdivl
push
mov
xor
pop
mov
lcall
dec
pop
aad
mov
and
aam
sub
sub
pusha
adc
adc
fcoms
imul
in
add
addr16
inc
sbb
push
push
sub
dec
mov
mov
jl
adc
or
call
sahf
dec
stos
push
inc
sub
cltd
mov
movsb
inc
and
outsb
cli
stos
lea
dec
lret
mov
mov
stos
std
mov
sub
cmpb
out
and
bound
ljmp
jno
lret
inc
arpl
pop
loop
pop
popa
sbb
jl
xor
xor
pop
inc
or
lock
dec
jns
jg
dec
cmp
loope
out
in
add
xor
out
andb
andb
cmp
cmc
mov
stos
movsl
test
jns
xor
stos
in
mov
mov
push
icebp
mov
jp
int
subb
push
repz
lcall
loop
daa
pop
int
or
push
cmc
aam
cli
shr
jne
jo
xchg
sahf
jmp
fldenv
push
test
mov
cmp
add
fistpll
xor
leave
fmuls
pop
push
push
fadds
out
es
fildl
stc
dec
sti
repnz
xorl
inc
jb
mov
add
cs
dec
jns
mov
into
loope
outsb
shrb
dec
xchg
mov
cmc
mov
add
insb
mov
inc
scas
mov
sbbl
push
or
pop
out
and
data16
sbb
cmpsl
xchg
lds
add
sbb
imul
mov
add
sbbb
insb
cmp
cs
out
xor
insl
ficomps
mov
sub
aaa
repnz
xor
out
in
popf
movb
movl
lea
arpl
mov
cli
sbb
adc
xor
test
xchg
mov
movl
fstl
lods
lods
pop
lcall
movsb
mov
fs
push
movsb
aaa
cmp
dec
cwtl
push
in
lahf
inc
pop
gs
das
out
data16
jl
sub
lcall
jl
push
scas
jno
mov
inc
mov
dec
sub
mov
ss
icebp
sub
movsl
inc
xchg
andb
jno
punpcklwd
push
movb
inc
xchg
adcb
ja
fstps
bound
and
call
xor
outsb
mov
cmp
add
mov
sub
xor
and
in
call
push
pushf
arpl
push
mov
sahf
pop
jge
cmpsl
imul
std
jmp
pop
popa
adc
aaa
cmpl
lret
out
outsb
cmc
ljmp
rol
mov
insl
cmp
dec
je
rol
ljmp
outsl
in
inc
aaa
clc
mov
out
mov
enter
nop
mov
xor
or
sbb
sub
mov
rcrb
pop
out
adc
mov
xchg
adc
xor
or
pop
mov
pop
mov
dec
js
ret
or
jle
adc
gs
test
mov
ret
cmp
mov
jg
xchg
pushf
call
push
xchg
mov
repnz
lret
cld
popf
sbb
mov
scas
mov
cmc
lds
int
in
mov
test
mov
fwait
add
aaa
test
daa
repnz
rclb
inc
bound
and
in
mov
repnz
adc
ret
lret
movsl
adc
xchg
in
push
cmp
pop
into
mov
ja
pop
imul
into
decl
mov
jp
lock
adc
cs
adc
sbb
xor
and
mov
ficoml
xorb
mov
push
xchg
mov
cmp
lret
ret
in
or
into
dec
xor
sub
xchg
daa
shrl
icebp
fldcw
sbb
in
sub
jns
aad
inc
inc
inc
popf
push
roll
adc
jp
mov
gs
negb
dec
arpl
and
rdmsr
adc
arpl
enter
fdivs
jge
mov
pushf
xchg
inc
mov
lods
inc
mov
sub
add
xchg
cli
fdivrl
test
and
pop
lock
pop
push
mov
sub
sbb
dec
lret
sbb
xchg
mov
mov
or
jns
divl
ds
xchg
ss
pop
cmp
mov
xchg
mov
dec
adc
push
out
inc
dec
xchg
arpl
icebp
cmp
clc
pop
or
imul
in
scas
imul
aas
add
adc
cmpsb
push
lds
hlt
andb
mov
adc
add
fs
mov
lods
cs
repz
mov
shr
pop
or
sbb
cmp
mov
loopne
xor
cmp
lahf
xchg
mov
dec
rol
pop
jl
popa
mov
mov
add
sub
movsl
sbb
loopne
xorl
shl
jo
cmp
sub
aam
mov
push
in
test
sbb
and
and
jnp
push
mov
push
mov
ss
ficomps
or
xor
xlat
movsl
jae
inc
cld
pop
out
add
out
std
push
negl
cmp
jg
pop
addr16
or
fwait
ljmp
jne
test
inc
nop
add
lcall
notb
adc
mov
fs
push
mov
int
adc
je
movsb
xorl
cli
iret
sbb
jl
fsubr
fstps
test
sub
rcrl
aad
sbb
pop
lds
daa
jne
aad
stos
jl
jno
pusha
xchg
ljmp
xor
pop
xchg
popa
inc
add
mov
xor
mov
cmp
imul
lds
fmul
jb
xor
adc
mov
sbb
mov
negl
sbb
repnz
cmp
shlb
mov
adc
rol
inc
or
sub
jmp
in
adc
adc
and
xchg
and
lret
dec
add
cmp
outsl
push
jp
xlat
je
in
ret
add
inc
xchg
sub
adc
pop
pop
push
add
jb
push
mov
pop
adc
mov
icebp
jnp
mull
std
xchg
ds
adc
fwait
aaa
or
add
test
push
mov
inc
xlat
scas
sub
cmova
xorb
fbld
jle
xchg
cli
and
pop
leave
sbb
push
mov
mov
mov
shr
rcr
jg
popf
mov
lock
jmp
loop
pusha
loope
shlb
lods
push
pop
push
jp
dec
or
ljmp
xchg
cmp
nop
jmp
cmc
leave
test
in
stos
sbb
jnp
adc
jl
lods
xchg
xor
stos
stos
xchg
repz
lods
pop
pop
fcmovne
push
les
je
cmp
sbb
mov
out
sbb
mov
push
add
jbe
cmpsl
push
push
cwtl
aaa
mov
jp
leave
jbe
nop
mov
sub
idivl
arpl
mov
mov
lods
jo
pop
out
dec
jbe
push
movsb
push
imul
dec
in
push
rcrb
mov
sub
arpl
cmp
fldl
pop
inc
jae
xor
pop
sbb
dec
ljmp
and
gs
inc
sub
mov
call
jecxz
rol
or
les
xor
or
pop
jg
or
and
push
sbb
in
out
icebp
mov
test
mov
or
mov
in
pop
push
push
ret
xor
push
lods
testl
add
shrl
jle
mov
xchg
nop
mov
sub
fs
pop
fmul
sub
mov
insl
adc
inc
jnp
lret
je
lahf
cmpb
pop
adc
or
push
and
mov
jecxz
out
cmp
pop
loopne
les
lret
xchg
stos
fdivl
ret
stos
int3
lcall
andb
fcomip
lds
orb
idivb
xor
jnp
cmp
lcall
pop
sub
rorb
add
pop
sbb
adc
add
pusha
ficomps
cli
inc
aam
test
adcl
iret
pop
aam
lret
insl
cmp
out
xchg
pop
sahf
cmp
mov
add
mov
leave
mov
pop
popl
mulb
xor
leave
lock
or
add
insl
insb
lds
push
ljmp
mov
aaa
aas
insl
push
lds
ficompl
push
scas
xchg
les
jb
ds
sub
test
outsb
popl
rclb
push
sbb
movsb
inc
and
hlt
out
inc
into
and
data16
fdivrl
es
cltd
movsl
fistps
pop
out
fcoms
push
testl
popa
jnp
rcll
mov
sub
cmp
das
and
out
sub
sahf
adc
dec
xor
scas
clc
add
in
js
dec
or
in
fildll
or
mov
sub
sbb
jge
cmpsl
jno
push
push
sub
dec
cmp
adc
xchg
sbb
jge
push
test
jbe
inc
push
jo
das
pop
iret
addr16
xor
adc
das
mov
aas
xor
and
nop
xor
push
ljmp
insb
inc
ja
mov
aaa
or
and
mov
loopne
push
adc
lret
rorl
iret
xchg
cmp
test
std
jnp
pushf
push
call
and
cmpsl
dec
and
sub
cmp
insl
inc
sub
popf
shl
sbb
stos
push
enter
jae
mov
push
js
call
xchg
xor
lods
pop
scas
jo
das
lcall
fs
insl
cmp
dec
jp
jl
fs
cmpsb
push
xlat
data16
or
pop
hlt
mov
add
xor
int3
enter
add
cld
jbe
adcb
mov
stos
adc
out
sub
jl
sahf
sbb
stos
mov
xor
sbb
pop
inc
mov
pushf
cmp
stos
lods
fcomps
cs
bound
or
mov
mov
cmpsb
mov
popa
xchg
push
jp
int
pop
iret
inc
push
rclb
fcmovu
fcomps
lret
mov
inc
scas
addr16
je
mov
imul
std
add
xchg
lds
lock
inc
insb
cmp
push
mov
js,pn
jnp
orl
in
jnp
adc
movsb
mov
bound
mov
jl
cs
mov
lock
cs
pop
xor
out
data16
scas
jnp
xchg
js
push
or
in
loopne
adc
sub
jl
jmp
pop
sbb
cs
rcrl
in
xchg
sahf
es
dec
es
mov
int
nop
cmp
mov
sub
push
lret
xor
xchg
mov
cmp
jmp
cli
stc
decl
inc
jg
and
mov
push
inc
mov
inc
xchg
pop
sbb
pop
push
mov
mov
jmp
fnstenv
sbb
inc
fadds
inc
adc
sbb
enter
addl
movd
push
add
lock
dec
outsb
fs
xchg
rclb
fcmovne
loope
icebp
out
sbb
sub
mov
pop
mov
xlat
mov
and
lds
ljmp
xor
mov
adc
xchg
sbb
xor
cmp
inc
cld
ret
loopne
int
push
inc
in
or
push
stos
cmp
pop
stc
pop
mov
loopne
movsb
fiadds
adc
sbb
test
aaa
push
sbb
push
popa
jle
add
mov
mov
lret
jo
pop
push
adc
rcrl
movb
mov
cmpsb
sub
mov
ret
aad
pop
pusha
xchg
xor
mov
les
xorl
fwait
mov
push
and
xor
xor
mov
ss
mov
push
fsubrl
sarl
loope
into
dec
jp
movsb
sbb
pop
iret
fnstenv
popf
add
dec
xchg
mov
push
jno
pop
jle
xchg
jl
pop
test
loopne
adc
outsl
mov
adcb
movsb
inc
sub
mov
ds
add
pusha
push
xlat
jb
hlt
push
mov
xor
xchg
jne
insb
inc
push
push
insb
inc
and
ret
idivb
out
pop
push
inc
hlt
push
icebp
out
js
pop
stos
loop
js
xchg
mov
hlt
sbb
dec
mov
insb
negb
push
decb
test
jle
stos
mov
xchg
mov
xor
aas
imul
adc
lods
dec
mov
push
cmpsb
cld
in
movsl
sub
pop
dec
insb
movb
dec
lahf
mov
push
adc
push
inc
enter
sbb
rolb
or
lock
inc
std
push
jg
loopne
sub
xor
imul
cmc
cmp
ss
test
leave
inc
push
fcmove
push
scas
sub
mov
aaa
pop
cs
in
loope
int3
cli
aad
mov
not
into
xorb
stos
inc
push
cli
lcall
sbb
mov
jae
fdivs
or
rcll
pop
scas
sahf
shrl
aaa
test
aad
jb
sbb
push
dec
cmp
ret
inc
enter
push
mov
cmp
dec
hlt
mov
cmp
imul
xchg
ss
push
out
lret
ljmp
das
xchg
pop
jbe
xor
outsl
dec
sahf
js
push
dec
mov
ja
enter
hlt
adcb
add
ja
out
int
mov
mov
dec
push
shl
test
pop
jns
xor
and
es
mov
pop
jns
or
xlat
aas
imul
sub
fwait
sub
sbb
adc
je
mov
push
mov
push
popf
dec
xchg
dec
or
outsl
sbb
jbe
cltd
jg
pusha
and
and
xchg
mov
pushf
into
or
mov
or
in
jp
inc
adc
popf
loope
pop
mov
nop
jge
inc
scas
into
add
stos
outsb
mov
shrb
nop
repnz
jno
mov
push
dec
and
in
cs
stos
insl
add
dec
jge
int
adc
cmp
ret
sub
inc
das
call
and
xchg
mov
jbe
cltd
repz
and
jo
or
lea
fdivrp
sub
dec
cmp
jp
dec
aaa
iret
into
shr
cmpsl
and
sbb
mov
aad
subb
inc
push
aaa
cmovl
mov
fwait
lds
mov
int
outsl
test
mov
xchg
pusha
mov
or
cld
jbe
mov
fsubs
pop
jg
dec
jle
jg
lods
mov
inc
xchg
movsb
mov
xchg
jae
neg
enter
push
and
pop
andb
aas
es
push
jae
sbb
xor
sbb
lret
test
loope,pn
std
ret
cmp
test
out
decb
cmp
pusha
jbe
pop
jb
outsb
push
mov
lock
cmp
mov
ds
and
pusha
add
jno
popa
xor
inc
shlb
loopne
nop
icebp
and
shll
and
pusha
add
jno
popa
xor
inc
shlb
loopne
nop
icebp
and
shll
and
pusha
add
jno
popa
xor
inc
shlb
loopne
nop
icebp
test
mov
xchg
lds
and
adc
popa
mov
mov
or
loopne
out
or
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
