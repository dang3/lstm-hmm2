add
or
add
add
add
jne
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
movzwl
movl
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
push
call
mov
push
push
push
pushl
call
mov
push
call
mov
push
mov
call
neg
sbb
inc
push
push
push
sub
lea
push
mov
push
call
cmpl
je
cmpl
je
push
call
mov
xor
xor
call
mov
xor
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
test
jne
mov
not
mov
or
mov
lea
push
call
mov
pop
leave
ret
push
imul
jb
je
arpl
add
add
push
pushl
call
push
mov
pushl
call
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
call
push
mov
pushl
call
mov
jmp
push
lea
push
push
pushl
call
xor
mov
push
push
push
push
pushl
call
pushl
mov
pushl
pushl
push
push
call
push
pushl
pushl
push
call
lea
push
call
pop
push
lea
push
push
push
push
call
push
lea
push
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
pop
jmp
call
push
mov
call
xor
leave
ret
push
mov
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
mov
add
xor
mov
movl
mov
add
mov
mov
cmp
je
movzbl
sub
push
call
add
cmpl
jg
mov
mov
mov
movzbl
sub
incl
test
jne
jmp
mov
mov
mov
call
decl
movzbl
sub
je
incl
call
jmp
call
mov
push
push
mov
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
andl
andl
push
mov
push
push
movl
movl
movl
movl
mov
call
mov
mov
push
push
movl
movl
mov
movl
call
andl
push
mov
call
pop
ret
push
mov
sub
push
pushl
call
pushl
mov
xor
movl
pushl
mov
movl
movl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
sub
push
push
push
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pushl
call
mov
mov
add
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
call
call
jmp
push
call
mov
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
push
pushl
call
mov
pushl
pushl
pushl
push
push
call
add
pushl
call
cmpl
jb
mov
pop
pop
pop
leave
ret
add
add
add
add
mov
add
xor
cmc
adc
add
popl
mov
add
add
push
or
add
add
jb
add
add
add
ja
sbb
sbb
sbb
sbb
sbb
add
fnsave
jne,pn
dec
arpl
fldt
dec
add
sub
inc
enter
jecxz
out
pop
fcmovu
dec
enter
mov
adc
mov
jmp
push
sub
repz
idiv
idiv
cs
push
pusha
adc
clc
clc
pushf
mov
xor
pop
pop
mov
sub
out
pop
add
push
ljmp
jmp
add
fildl
add
jbe
adcl
je
test
push
adc
jmp
cmp
test
test
cmp
or
or
adc
cld
call
mov
loopne
adc
je
clc
loopne
clc
mov
movsl
incl
mov
push
inc
cmp
add
add
push
adc
add
add
add
add
add
add
add
add
cmc
sbb
sbb
sbb
xchg
add
inc
add
gs
inc
jnp
outsl
add
arpl
gs
add
insb
add
jb
push
jae
outsl
inc
add
je
xor
add
gs
add
mov
imul
add
xor
add
add
add
add
add
add
fiadds
add
add
add
add
add
in
add
add
add
add
movsl
adc
mov
movsb
push
mov
jge
push
inc
push
lods
sub
pop
call
enter
out
popa
in
sbb
fildll
mov
cmc
loope
sbb
pop
in
enter
enter
dec
jns
pop
push
jae
ficomps
sti
pop
push
movsl
add
cmc
dec
test
dec
or
idivb
stos
cmp
pushl
xor
dec
mov
fdivr
lahf
scas
and
lcall
sarb
lock
or
into
xchg
fimull
push
jne
dec
ljmp
test
cmp
test
mov
lock
insb
xlat
dec
cli
inc
sahf
pop
sbb
bound
mov
xorl
inc
mov
jg
jnp
mov
std
mov
scas
adc
out
lahf
rcrb
fucom
jbe
test
sbb
fwait
notb
int
dec
jle
cmp
out
sbb
push
inc
sti
pop
mov
rorl
xchg
jns
ds
data16
mov
mov
xchg
inc
cli
lock
cmc
mov
mov
int3
xchg
jns
sub
fidivl
xor
inc
js
stos
push
cmp
enter
adc
fs
dec
push
mov
and
cs
es
adc
jecxz
mov
push
aam
in
das
xor
xor
xchg
addr16
jo
int
push
outsl
xlat
inc
sbb
das
jge
pusha
add
adc
mov
jmp
cltd
dec
push
xor
mov
jns
js
enter
out
jno
ret
xlat
int
sbb
bound
jnp
test
push
test
and
cmp
and
mov
das
repnz
sbb
lcall
mov
dec
fs
inc
push
jnp
inc
xchg
sub
jle
ja
addl
es
enter
dec
aas
mov
jge
adc
lret
inc
fs
jae
or
add
or
add
outsb
lret
inc
out
in
outsl
outsl
inc
cmp
decl
lock
lea
mov
notb
fmul
sub
out
lcall
push
or
ja
out
sub
push
neg
fildl
lock
dec
lahf
jmp
pushf
mov
lock
sbb
dec
out
xchg
fisubrl
jb
mov
mul
fdiv
js
pop
sub
adcb
mov
cmp
pop
sbb
rorl
leave
mov
dec
les
mov
daa
call
xchg
ficompl
or
or
fildll
popa
clc
xchg
addl
ss
inc
sbb
sbb
aaa
xor
sub
mov
popa
mov
loopne
repnz
xchg
xchg
aad
sub
dec
aaa
lds
cmpsb
lret
mov
and
fmull
adc
call
pop
adc
sub
add
jl
adc
movsb
pop
add
cmp
test
adc
ja
and
mov
pop
mov
inc
push
aam
enter
int3
or
js
push
jl
mov
int
shl
jge
gs
push
loop
inc
adc
shrl
mov
xor
jae
fwait
xor
cmp
pop
gs
jae
pop
mov
mov
xor
movsb
xchg
ds
mov
test
mov
in
data16
mov
sub
pop
imul
pop
push
mov
cltd
push
jo
sbb
rcl
pop
mov
std
scas
inc
test
xchg
and
fimull
lods
pop
hlt
xchg
xchg
cmpsl
insl
inc
call
aam
cli
push
sub
sbb
dec
arpl
test
movq
jmp
jle
je
enter
inc
adc
xchg
mov
dec
in
jne
mov
mov
popa
ret
repz
add
xchg
sahf
cmp
inc
rol
xchg
dec
fadd
leave
sbb
or
lret
or
ss
adc
and
xchg
inc
push
push
jo
shll
cmp
testl
aas
pop
daa
sbb
orl
je
and
xor
pop
fimull
mov
movsl
or
jne
mov
sbb
cmpsl
push
xor
into
repz
push
mov
subb
rcrb
fisubs
imul
in
lcall
add
jae
mov
aas
and
out
daa
jmp
cmp
pop
test
jnp
insl
bound
xchg
sti
into
push
push
ret
les
sub
jecxz
ret
inc
hlt
arpl
add
std
pop
push
cld
pop
sbb
lods
mov
std
sbb
and
push
dec
out
aaa
xchg
in
lds
ret
lret
call
fldl
adc
cmp
adc
ror
dec
lock
popf
pop
pushf
pop
lcall
bound
popf
fistpll
ja
jo
in
sbb
inc
mov
or
dec
pop
xchg
mov
xchg
and
test
jmp
nop
jl,pn
stos
cs
test
pop
call
xchg
jbe
mov
pusha
add
stc
push
xor
mov
lea
in
or
xor
dec
lods
cld
stos
enter
scas
loope
test
outsb
cmc
mov
sbb
rcrb
dec
jp
dec
or
adc
xchg
xchg
gs
push
stc
dec
push
lods
and
nop
push
bound
inc
mov
decl
pop
add
pop
or
iret
pusha
pop
or
and
mov
les
jbe
fmuls
cmpl
loop
sbb
cmp
sbb
or
inc
sub
cmpl
jge
leave
cmp
daa
sbb
xchg
lahf
loopne
popa
mov
movsb
ret
inc
inc
xor
mov
sub
dec
aas
roll
push
mov
add
imul
cmc
les
dec
pusha
xor
jecxz
cmp
inc
inc
mov
xchg
sbb
fidivrl
outsb
adc
inc
inc
jae
pusha
call
fwait
out
adc
mov
cmp
xorl
pop
repz
pop
pushf
aad
pop
inc
fidivl
sbb
pop
movsb
fsub
clc
push
aad
rorb
js
add
orb
aam
sahf
out
jp
adc
push
or
sub
sahf
sub
imul
mov
out
sti
in
inc
mov
and
mov
cwtl
sbb
and
hlt
jo
testb
xor
dec
popa
das
fucomp
lock
sbb
fcmove
or
mov
test
lock
xor
or
pushf
scas
lahf
xchg
aaa
lods
ja
test
stos
lods
jecxz
insl
shl
cmc
repnz
repnz
cwtd
pushf
or
pop
je
sarb
call
filds
lahf
add
adcl
out
dec
int
jo
jmp
out
cld
pop
insb
mov
enter
add
pop
cli
mov
repz
lods
ret
sar
sub
jle
popa
lea
pop
sub
cli
dec
repz
mov
mov
ljmp
insb
sbb
into
shll
xor
das
jb
mov
imul
mov
jns
lods
mov
add
fs
pop
pop
test
push
test
jo
mov
mov
cld
push
sahf
imul
mov
inc
lods
imul
cmp
inc
enter
out
jno
scas
jl
add
in
enter
mov
insb
mov
pop
pusha
rolb
dec
lret
stos
fucomi
adc
adc
insl
pop
mov
jbe
adcl
stos
fdivl
test
fdivl
sub
bound
mov
pop
lods
les
lret
scas
inc
ljmp
push
sub
push
and
cmpsl
mov
nop
xor
and
push
inc
inc
cmp
popa
jns
sub
out
pusha
and
pop
add
push
inc
rcrb
and
or
mov
bound
mov
dec
inc
icebp
lods
imul
sbb
sbb
lahf
sbb
and
andl
lret
adc
das
repz
jo
xchg
cs
mov
pop
inc
aad
fnsave
add
jns
jno
or
add
xorb
lret
and
or
nop
sub
mov
sub
mov
sub
mov
ds
add
int
jg
adc
popf
or
lahf
dec
movswl
push
sub
sub
sbb
out
icebp
test
and
enter
xor
xlat
sbb
sub
cmp
cwtl
or
mov
sarl
iret
sbb
cmp
int
cmp
mov
xor
lods
pop
inc
dec
fidivl
dec
xor
cwtl
pcmpeqd
shll
adc
inc
push
aas
imul
sub
shl
xor
push
cmp
sbb
cmp
push
xchg
roll
fisubs
mov
popa
loope
and
out
jmp
popf
mov
add
mov
int
pusha
sub
add
call
dec
cltd
mov
fdivrs
std
mov
shll
fidivrl
jbe
js
xor
mov
sub
mov
dec
in
int
mov
push
sti
fisttps
scas
nop
jp
enter
nop
inc
jne
push
push
addb
cmc
arpl
inc
pop
jle
fists
mov
imul
add
cmp
ret
inc
movsl
add
add
adc
bound
fs
lods
pop
dec
add
fnstenv
lea
mov
fdivs
mov
rorb
dec
fiadds
cmp
movsl
aad
clc
movsb
repz
daa
jmp
fwait
mov
lret
xchg
pushf
xlat
scas
cmp
mov
iret
mov
pop
mov
xchg
std
icebp
lret
xrelease
imul
adc
sub
mov
lahf
sbb
push
sahf
bswap
xchg
fwait
sar
pop
ja
cmc
shl
xchg
stos
shrb
mov
mov
leave
rcr
insb
cmp
les
or
fwait
neg
ret
leave
jg
sbb
and
mov
mov
mov
fcmovnbe
pop
outsl
dec
div
enter
fs
cli
mov
xlat
push
dec
jge
pop
pop
imul
test
adc
cmp
add
sahf
mov
mov
out
lcall
adc
and
insl
jne
loop
mov
mov
jg
jmp
jle
push
divl
leave
cmp
pop
sub
lods
lcall
icebp
fmulp
push
cmpsl
mov
cltd
dec
push
or
xor
jp
inc
lahf
lret
cmp
and
enter
fnstsw
js
or
ja
in
lds
fstpl
or
add
push
nop
sbb
sbb
sbb
mov
mov
inc
repnz
cmpsb
push
mov
cli
aas
push
cmpsl
dec
shlb
btc
push
pop
clc
and
xchg
lret
jno
ss
jl
xchg
xchg
inc
into
fs
and
ljmp
xor
mov
fs
push
das
pop
jmp
dec
in
jnp
mov
aam
pusha
aaa
sar
imul
pop
inc
push
jecxz
pcmpgtb
mov
adc
and
call
add
sub
push
xchg
dec
push
dec
xlat
or
add
ljmp
pop
popf
lahf
cmp
push
aaa
or
cmp
xchg
call
test
lcall
ja
cmp
mov
out
cwtl
mov
scas
lret
and
pop
lock
or
pop
outsl
insb
pop
push
inc
cmc
mov
xchg
xchg
sbb
pop
shl
movsb
cmc
add
jecxz
adc
cmp
jno
inc
fisubrs
in
scas
ja
scas
lds
add
add
or
das
movsl
or
xchg
imul
adc
pop
out
pop
pop
fstpl
mov
rcl
mov
insl
dec
imul
out
fld
inc
jae
xchg
cmp
mov
cltd
push
int3
mov
mov
sub
sti
mov
data16
add
push
or
push
negb
movsb
scas
mov
lds
mov
push
test
out
pop
push
xchg
adc
les
cmpl
in
rcll
rcrb
leave
shrb
adc
dec
adc
inc
fnstcw
pop
fucomip
pop
mov
xchg
stos
scas
and
hlt
aam
jnp
lea
push
dec
pop
aam
les
adc
je
lods
das
in
fcompl
dec
inc
pop
je
int3
insl
test
sub
fimuls
movsl
imul
mov
push
test
mov
rorl
orb
lods
outsb
jae
clc
outsl
mov
sbb
mov
adc
pop
jecxz
cmp
jmp
ja
add
dec
mov
adc
scas
pop
in
mov
fwait
mov
jb
sbb
and
add
bound
shrb
xchg
push
ss
sbbb
in
mov
cs
lea
push
scas
mov
shrb
in
popf
xlat
fisttpl
leave
adc
mov
into
imul
sub
mov
add
cmp
inc
or
jb
movsb
jg
or
insl
jno
jno
cmpsl
mov
push
sbb
scas
nop
inc
mov
mov
ja
adc
bound
pop
xor
stc
cltd
xchg
test
sbb
insl
popf
loop
into
stos
mov
jns
stos
jmp
stos
pop
mov
popa
xor
loopne
xor
loope
cmp
iret
into
mov
sub
leave
mov
pushf
movsb
pop
fmull
push
sub
scas
iret
or
or
xor
inc
arpl
in
out
test
adc
leave
shll
push
test
mov
mov
mov
lcall
cmp
insb
mov
lods
lods
dec
aad
jb
sbb
out
adc
gs
push
fucomip
xorb
mov
scas
movsb
data16
push
jae
xchg
inc
xchg
inc
push
das
pop
leave
sbb
xor
mov
mov
cmpsb
hlt
or
dec
mov
inc
or
adc
dec
hlt
xchg
shrb
or
sbb
sub
daa
dec
icebp
andb
pop
arpl
cmp
pop
ds
xor
out
loopne
mov
cltd
pop
dec
dec
lcall
jp
inc
sbb
outsl
sti
lret
jnp
loopne
push
dec
dec
idivb
lock
pop
or
push
mov
in
lds
cltd
fsubs
fdivrs
addr16
mov
lret
mov
aaa
mov
xchg
nop
jle
aam
sbb
ds
or
repz
xor
movsb
dec
pop
notl
xchg
in
pusha
out
mov
jnp
test
fwait
clc
gs
xor
pop
shrb
cmpsb
aaa
sbb
adcb
or
mov
push
popf
aas
fsubr
mov
subl
loop
mov
lods
rcrl
inc
int
inc
add
mov
xlat
ret
mov
out
xor
jge
push
add
mov
cmp
iret
int
mov
dec
pop
sub
test
jbe
adc
ds
add
dec
mov
pop
xor
wbinvd
stc
mov
hlt
jns
call
dec
xchg
out
dec
push
jmp
cmp
testl
in
mov
sbb
push
out
mov
mov
clc
jmp
jecxz
mov
ljmp
mov
jp
cwtl
sbb
cmc
cwtl
rorb
rorl
mov
sbb
dec
lea
test
pushl
inc
in
push
add
sti
daa
sbb
xchg
xchg
call
popa
lcall
inc
fnstsw
dec
mov
fucomi
sub
ds
and
xchg
jmp
add
test
mov
aam
pop
imul
cmp
jecxz
xor
push
das
adc
fdivp
inc
scas
sahf
mov
cs
add
pushf
lock
std
imul
adc
fmulp
inc
js
mov
xor
jo,pt
fiaddl
sub
seta
push
sahf
pop
test
xchg
bound
into
in
pushf
or
in
inc
push
outsb
lcall
fdivs
push
add
imul
jmp
dec
inc
int
cli
pop
xor
ficoms
data16
call
cwtl
mov
clc
ret
scas
lods
pop
push
into
xor
pop
test
fcmovnu
sub
jae
test
lret
into
sti
adc
div
jl
rcrb
test
out
or
into
and
enter
pop
mov
mov
jae
pop
add
pop
stc
mov
in
and
ja
and
in
xchg
call
cmc
push
adc
mov
and
movsb
cltd
rorb
shll
sahf
ljmp
mov
sbbb
sbb
pop
jno
jne
cld
mov
jb
movsl
pop
in
push
cmc
push
mov
xchg
mov
mov
les
repnz
out
adc
xchg
mov
dec
test
mov
jne
lahf
lock
mov
pop
js
jns
xor
or
test
or
xor
and
cwtl
cmpsb
out
leave
fs
mov
cli
sbb
ja
pop
and
push
leave
mov
jbe
clc
es
xor
mov
pop
inc
mov
es
pop
sub
sbb
stos
js
push
dec
je
mov
xchg
fsubl
dec
pushf
sbbb
jle
bound
lcall
out
lea
or
ret
xchg
dec
mov
pop
and
mov
mov
loop
cld
in
sbb
int3
push
cltd
cmpsl
imul
push
sub
ret
aas
enter
pop
pushf
pop
mov
sub
into
mov
inc
fdivl
pusha
orb
add
dec
fldl
ret
or
push
sub
dec
in
nop
xor
jmp
bound
popa
and
add
push
insb
sahf
inc
dec
mov
lds
iret
test
lret
or
cmpsl
test
mov
fistps
add
in
mov
mov
test
jns
mov
sti
adc
lcall
xchg
jo
outsl
add
gs
fcomps
in
addb
rcll
sub
daa
sbb
adc
and
in
jns
dec
xor
sbb
sbb
pushf
orb
loop
xor
add
add
add
in
add
add
add
add
add
add
jne
add
add
add
add
test
add
add
add
add
add
add
adc
add
out
add
add
add
add
add
add
jp
add
add
add
add
add
stos
stos
into
add
mov
jg
incl
add
into
add
outsb
inc
or
add
add
add
add
add
add
scas
add
add
and
add
add
outsl
add
add
add
xchg
add
add
add
pusha
add
mov
pop
add
push
outsl
imul
dec
outsb
add
push
leave
aaa
mov
popa
insl
iret
mov
inc
cld
inc
lea
add
dec
mov
mov
incb
inc
std
and
call
push
add
ret
push
add
add
mov
cmp
lea
rorb
rolb
add
add
push
add
test
dec
decl
xor
inc
incl
adc
incl
orl
sahf
call
jge
push
push
incl
push
adc
std
cs
mov
ret
orl
lock
jmp
incl
addb
add
jns
add
add
add
add
add
add
clc
add
add
push
je
imul
outsl
cmp
inc
gs
add
add
dec
arpl
popa
gs
gs
gs
insb
and
js
push
insb
fsubl
push
add
add
dec
insb
popa
jne
gs
sub
push
insb
arpl
add
add
add
outsb
add
cltd
add
incb
add
add
dec
add
stc
add
repnz
cltd
loopne
scas
imul
sub
ficompl
mov
cwtl
leave
fdiv
sbb
ret
inc
inc
dec
and
addl
mov
mov
stos
inc
or
daa
out
fsub
popa
dec
in
jecxz
pop
xlat
sbbb
or
or
jge
sbb
sarb
loop
push
movsb
lock
cmc
add
cmp
xchg
mov
adc
add
int3
cltd
mov
jg
jmp
jns
fs
in
xchg
mov
loopne
xlat
int
mov
mov
mov
or
lret
out
loopne
lcall
mov
or
orb
fdivrp
cwtl
jbe
or
dec
mov
cwtl
icebp
mov
scas
add
add
call
cwtl
jle
or
out
xchg
aad
in
inc
jmp
cs
dec
or
scas
adc
mov
xlat
jbe
sub
ljmp
xchg
xor
aad
adc
mov
js
lods
push
push
mov
push
addr16
xor
cli
pop
and
outsl
and
movd
cmp
adc
jae
rcr
and
push
cmpsb
dec
repz
mov
mov
adc
or
hlt
or
movsb
add
rorb
insb
lods
aaa
sub
addr16
mov
dec
jbe
dec
gs
xchg
adc
loop
fs
inc
test
aam
or
lods
inc
stos
mov
xchg
fistpll
pushf
cmp
sub
push
xchg
mov
push
stos
sbb
inc
test
stc
push
test
add
int3
adc
push
test
cmp
aad
mov
iret
push
xchg
cmp
popf
push
jp
les
out
pop
scas
imul
pop
out
pushf
outsl
add
lret
push
icebp
cmpsb
insl
je
ret
jb
fbstp
shrl
inc
ja
cmc
adc
inc
add
mov
call
xchg
cld
lods
xchg
mov
cld
ds
cmp
and
jg
test
mov
sbb
sbb
js
idivb
push
jg
jmp
aad
iret
mov
push
dec
std
sub
inc
mov
mov
xor
pop
aas
rcrb
imull
jg
incl
add
into
imul
dec
push
test
mov
test
push
test
inc
out
dec
aaa
or
fidivl
dec
jg
sti
sbbl
mov
test
lods
pop
mov
roll
mov
sbb
pop
pushf
mov
adc
outsl
lret
sahf
fwait
adc
mul
shl
adc
ret
iret
in
cmp
enter
pop
xor
rolb
xor
aad
push
jp
jns
clc
es
add
lcall
js
pop
mov
cmp
or
mov
enter
call
mov
sub
icebp
push
and
dec
clc
cmp
call
fcmovne
adc
scas
stc
mov
add
dec
mov
jmp
cmp
xor
xchg
fwait
jmp
out
mov
sub
roll
shll
mul
xor
push
push
xor
mov
dec
add
xor
mov
mov
and
sbb
cmp
lahf
xor
sbb
jb
lods
jle
xorb
pop
mov
add
mov
movsb
pop
les
enter
mov
pop
add
mov
stos
jg
lea
fwait
int
je
mov
add
popf
fwait
iret
pop
mov
push
sub
shl
adc
xchg
ds
xchg
cmpl
loopne
mov
pop
lds
mov
pop
pop
popf
dec
rep
pop
xchg
out
gs
sub
jp
jbe
mov
xchg
hlt
lahf
and
in
ffreep
pop
add
in
dec
jmp
imul
push
mov
enter
add
mov
enter
push
mov
cli
repnz
xchg
push
add
gs
les
lret
adc
xor
push
inc
outsl
and
sbb
lds
xor
movsb
imul
call
jo
lcall
push
int
add
mov
popa
cmpsb
xchg
pop
add
or
out
add
jns
dec
mov
in
xchg
and
rcr
cmp
fdivs
outsb
jg
arpl
push
inc
add
mov
mov
aad
xchg
nop
fldcw
pop
hlt
lret
ret
or
fisttpl
popl
dec
call
xorl
les
arpl
sub
jp
mov
mov
idivb
scas
xchg
xor
pop
cmp
push
adc
jmp
dec
add
jle
les
inc
pop
fstps
imul
lret
popa
add
sub
lds
insb
insb
rcll
mov
hlt
cli
aas
call
pop
pop
icebp
inc
sub
std
pushf
ret
pop
dec
xchg
inc
dec
out
mov
out
test
xor
dec
xor
sbbl
ds
cmp
and
cmp
mov
inc
sbb
outsb
pop
das
push
mov
loopne
xchg
adc
fstpl
outsl
cmp
rcll
les
test
in
xchg
movsb
out
mov
or
cmp
mov
outsl
dec
shll
or
jl
popa
or
adc
sub
jnp
cmp
cmp
cld
and
test
xor
push
jge
andb
fwait
test
dec
mov
jle
and
dec
addl
jne
imul
push
ds
sub
inc
xor
add
and
pop
std
mov
movsl
mov
out
dec
andb
xchg
jns
arpl
fucomp
insl
iret
aad
cmpsl
jno
jmp
jns
cli
icebp
add
sbb
cltd
xchg
or
push
sbb
mov
mov
inc
iret
fst
loop
ds
xor
and
mov
test
push
push
inc
mov
or
lret
fcmovne
mov
push
push
mov
push
add
nop
cmpl
pop
inc
sbb
mov
xchg
test
dec
nop
push
cmp
and
cmp
jae
pusha
push
jno
and
mull
cmp
adc
movsb
and
mov
mov
mov
loop
lea
add
push
ror
ds
sub
adc
cmp
sub
cmp
mov
in
mov
push
bound
push
push
pop
das
scas
add
dec
in
out
aad
into
pop
sub
fistpll
call
xchg
inc
pushf
cmpl
adc
mov
cmp
adc
in
movsb
in
mov
enter
jnp
pop
lods
push
je
mov
xor
inc
jb
fsub
lods
rorl
mov
test
scas
mov
movsl
inc
jmp
or
cmpsb
pop
add
xor
popa
ret
hlt
and
mov
lock
add
lods
and
scas
std
or
insb
idivb
pushf
jecxz
popa
push
clc
push
and
cltd
xor
test
mov
jbe
jmp
lds
ja
mov
scas
fwait
cmp
pop
or
xchg
mov
mov
data16
out
push
jg
aam
sarl
lahf
inc
xor
lods
out
stc
dec
nop
mov
lds
dec
lahf
pop
inc
lahf
and
push
mov
push
into
pop
subb
push
sbb
mov
sub
mov
jle
mov
lret
cmp
loopne
mov
pop
mov
cmpsb
mov
js
mov
or
jle
xlat
push
sahf
mov
push
lods
imul
es
inc
sbb
test
inc
lods
xor
outsl
into
push
or
hlt
add
add
cmp
pop
into
push
dec
imul
sbb
mov
ret
scas
jns
iret
xorb
je
mov
imul
jne
cmp
mov
xchg
arpl
fsubl
leave
call
nop
jbe
inc
inc
ds
or
jg
data16
inc
addr16
adc
jg
not
imul
push
stc
gs
lret
iret
sbb
add
or
mov
sbb
out
stos
les
xchg
out
and
imul
inc
lods
cmp
lods
iret
mov
pop
fcomps
or
cs
mov
pop
mov
add
adc
stos
sahf
sti
dec
lods
sti
jns
xor
inc
insb
mov
test
jb
je
push
adc
jbe
test
fistl
nop
shll
add
or
lock
lock
call
or
shrb
pop
xor
mov
xorl
dec
sbb
sbb
test
cli
lahf
fs
arpl
lret
dec
sbb
inc
mov
sub
adc
imul
pop
xor
jbe
sub
into
imul
mov
xchg
ret
jbe
shl
outsl
sub
ja
mov
fstl
pop
cmp
popf
pop
push
aaa
push
rorb
iret
jno
movzwl
inc
test
mov
sub
cld
daa
loopne
inc
repnz
insb
push
cmp
stos
lea
std
mov
inc
push
xor
fwait
mov
loop
jmp
fsubrs
popa
loop
xchg
lahf
fdecstp
mov
inc
mov
push
jg
mov
inc
fwait
xor
mov
test
divl
rolb
inc
idivb
or
xor
loopne
cwtl
fnstsw
mov
nop
mov
jl
adc
ret
repnz
into
mov
das
dec
mov
xor
sti
arpl
inc
xchg
or
adc
jo
mov
sarl
int
mov
cmp
or
add
push
pop
icebp
les
fimuls
loope
imul
and
lods
pop
bound
in
mov
push
cmp
mov
push
xchg
test
arpl
dec
and
mov
je
xor
pusha
xchg
pop
inc
lret
mov
mov
loop
or
ffree
out
or
ss
xchg
iret
cmp
pushf
mov
cmpsl
jae
lock
out
dec
inc
sar
jp
stos
mov
pop
add
flds
push
pop
test
push
dec
call
jb
inc
pop
mov
mov
movsl
nop
aam
pop
inc
xchg
stos
and
sbb
gs
add
test
lods
iret
pop
sub
cli
into
mov
cmpsb
addl
mov
outsl
jmp
mov
in
mov
dec
ret
push
lret
inc
jo
pop
lea
and
mov
scas
cmp
cmp
test
mov
mov
mov
xchg
andb
ja
cmpsb
push
jecxz
shrb
inc
rorl
pusha
sti
repnz
xor
loope
int
jle
fldcw
mov
je
push
dec
xchg
leave
add
xchg
jecxz
pop
scas
or
jge
divb
cmp
es
xchg
sub
inc
rolb
cmp
mov
nop
pop
and
insl
hlt
cmc
cltd
into
in
aaa
inc
jns
inc
mov
add
jns,pn
out
inc
stc
hlt
push
cs
cmp
or
gs
sub
pop
mov
ja
xchg
inc
outsb
repz
push
movsb
test
cmpsb
jbe
sahf
divb
mull
xchg
dec
pop
jle
jecxz
mov
icebp
push
test
sahf
hlt
mov
fcmovnbe
mov
xchg
data16
mov
inc
push
shrb
mov
cmp
inc
and
test
push
pop
dec
xlat
xor
inc
mov
mov
push
es
aad
lods
and
leave
cmc
or
inc
sahf
xchg
faddl
xchg
sti
int3
lret
negl
inc
or
xor
push
dec
setb
jne
fildl
push
lock
sbb
inc
aas
adc
rol
or
dec
sti
sub
sub
aaa
rol
aam
cmp
cmpsl
and
jns
sub
out
int
sbb
sub
fiadds
mov
xorb
mov
jae
jbe
call
mov
enter
mov
mov
aas
xchg
and
rolb
cwtl
dec
dec
mov
adc
dec
fldl
ds
push
lods
mov
leave
mov
push
push
sbb
mov
cld
enter
jnp
daa
jno
clc
pop
push
pop
xor
sub
mov
aas
pop
mov
cmp
popa
and
sbb
mov
lret
ds
fimuls
fldl
pushf
scas
lds
fcoml
xchg
lods
shll
mov
sub
and
fadd
sarl
es
decl
mov
xchg
dec
jnp
sub
inc
cmpsb
or
add
sti
cwtl
fs
nop
das
pop
xlat
inc
in
js
shl
out
lods
in
mov
inc
pop
push
mov
mov
or
lds
stos
xor
jne
dec
add
roll
cmpsb
repz
fldl
adc
stos
cwtl
mov
cli
xchg
pop
in
adcl
xor
stos
adc
ss
cmc
test
mov
sub
mov
je
lods
int3
inc
xor
push
mov
pop
repnz
je
in
push
cmp
rcr
inc
mov
popf
out
push
dec
call
lret
push
sarb
push
fwait
push
dec
inc
clc
sub
loope
push
rorl
mov
in
xor
clc
push
sbb
loop
cli
mov
sbb
std
or
js
cmp
mov
sbb
rorb
in
xor
sub
stos
mov
sahf
jl
or
xor
jg
mov
mov
pop
mov
clc
scas
mov
fmull
and
jno
clc
cmpsb
dec
mov
hlt
inc
js
fstl
out
shll
es
dec
in
es
shl
lods
lods
jae
push
out
mov
xor
fwait
lds
hlt
daa
pop
aas
add
mov
pusha
iret
inc
sub
lahf
sub
iret
outsb
inc
bound
hlt
insb
pop
adc
aas
cld
mov
sbb
or
clc
mov
in
test
hlt
cmpsl
fadd
sub
ret
dec
lahf
xchg
lret
cltd
imul
push
movhps
call
daa
push
pushfw
cmp
roll
inc
jp
adc
cmc
lock
jmp
pushf
add
out
push
movsl
dec
pop
mov
movsl
push
aad
add
daa
sahf
or
andb
xchg
sbb
xchg
mov
repz
jns
pop
fsubrs
int3
inc
jae
pop
stos
push
push
adc
lods
cmpsb
ljmp
jp
or
mov
bound
cmc
gs
jne
cmpsb
xchg
pop
sbb
and
inc
lcall
sbb
and
sbb
xchg
addr16
mov
inc
mov
arpl
pop
dec
pop
sbb
push
mov
ret
enter
stc
push
dec
rcll
mov
popa
cmp
ret
mov
and
or
imul
mov
outsb
mov
je
mov
dec
stc
mov
mov
fcmovu
jmp
dec
add
push
jecxz
dec
xchg
ljmp
pushf
es
movsl
mov
xor
clc
mov
test
fsub
jge
inc
rorb
xor
fdivrs
jmp
mov
sahf
js
or
test
lods
in
rcrb
and
or
call
sub
mov
divl
xchg
rcrb
mov
bound
sub
xor
bound
push
xchg
inc
or
out
out
inc
cmp
xor
subl
dec
faddl
mov
out
jl
sahf
cmp
fwait
and
aam
push
lret
xor
addr16
dec
adc
mov
js
aas
push
in
lds
pop
movsb
fisubrl
scas
sti
pop
pop
scas
mov
mov
and
and
call
rcrl
push
xchg
into
push
cmpsb
mov
shlb
push
ss
push
adc
xchg
xchg
popa
add
std
inc
mov
enter
mov
and
add
mov
or
cli
mov
mov
inc
das
faddp
insb
and
jne
aam
repnz
jno
cmc
aad
xchg
sti
subl
rcrl
call
scas
xchg
or
and
cmpsb
xchg
lock
shl
hlt
jg
mov
adc
sub
mov
dec
or
addb
enter
cmpsb
leave
icebp
pop
movsb
jg
lods
dec
fstl
inc
fiaddl
das
mov
popa
aas
andb
mov
inc
filds
sbb
gs
jge
xorb
lods
fidivl
inc
fdivrs
jo
imul
lret
push
mov
push
testl
sbb
addl
sbb
xor
orb
add
arpl
adc
mov
ds
cs
je
lret
pusha
add
notl
pop
sbb
aam
xchg
xchg
add
je
xlat
adc
xorl
pop
mov
sub
insb
in
mov
pop
ret
sbb
imul
mov
add
out
push
xchg
cmp
sbb
xor
xchg
mov
insl
cmp
fbld
xor
scas
inc
add
stos
pop
xor
adc
pop
mov
jb
jbe
data16
or
xchg
insl
xchg
shll
mov
mov
lock
sti
in
xchg
lock
and
jmp
mov
add
jle
sti
idivb
xrelease
pop
leave
pusha
testl
xchg
mov
xchg
mov
fists
xchg
mov
adc
mul
cli
testl
pop
add
lcall
sub
pop
cltd
cmpsl
jb
pop
xor
sbb
adc
mov
fimull
cmp
xor
shll
sahf
aam
iret
sub
lret
fildll
mov
or
dec
pop
in
stos
stos
pop
leave
icebp
adc
fwait
jmp
ja
scas
pop
cmp
xchg
aad
xchg
adc
bound
test
xchg
fbstp
sub
lds
mov
mov
cmp
pop
and
in
push
push
jecxz
pop
mov
jne
jg
pop
cld
lds
dec
addb
sbb
subb
adc
dec
push
add
mov
mov
pop
sbb
or
fwait
or
rcrl
add
repz
sarl
dec
fdivs
mov
cli
int3
adc
jae
jp
add
pop
sarb
out
mov
imul
push
xchg
cwtl
jno
cmp
out
in
adc
test
scas
sbb
jp
lea
mov
repz
gs
iret
and
mov
xchg
add
push
inc
mov
push
out
or
add
dec
add
stc
add
fiadds
add
add
add
flds
add
add
orb
add
addb
push
add
leave
add
fadds
add
add
cmp
add
add
add
add
add
add
test
ja
mov
jo
jo
add
add
add
sub
mov
outsl
arpl
or
add
add
add
add
add
add
xchg
add
add
add
testl
add
insb
xor
sti
add
add
add
sbb
sbb
sbb
sbb
sbb
imul
add
and
js
add
pop
outsb
push
jae
jae
dec
add
inc
push
and
add
xchg
jo
mov
pop
js
repnz
fmuls
decl
sub
add
test
cld
adc
adc
add
cld
or
cwtl
or
push
push
decl
add
add
leave
sub
jmp
add
mov
add
xor
add
decb
je
push
lea
loopne
decl
lock
push
ret
clc
push
add
incl
adc
call
adc
inc
pushl
add
repz
inc
call
lea
clc
push
adc
add
add
add
sub
pop
add
add
pop
sbb
sbb
sbb
sbb
sbb
ret
add
add
add
out
insb
add
inc
add
gs
push
add
fs
inc
gs
dec
outsl
gs
add
jo
insb
insb
add
cmp
gs
test
add
add
outsl
jle
insb
dec
insb
jb
and
mov
add
add
add
add
add
add
cmp
add
add
add
add
stos
add
add
add
xchg
add
add
das
push
aaa
je
adc
xor
ja
in
pop
in
daa
lock
gs
xchg
push
imul
ljmp
cmp
in
mov
push
sbb
fldt
jne
xchg
mov
push
jl
inc
pop
jl
mov
dec
add
mov
adc
dec
int
add
and
into
jno
push
bound
pop
aas
push
mov
mov
scas
and
js
mov
jg
in
pusha
jno
or
or
add
push
jle
add
cmpsl
lcall
mov
cmp
imul
mov
jb
jae
fisubrs
popf
xchg
outsl
inc
jp
gs
sbb
mov
dec
xchg
in
outsb
push
in
in
adc
push
dec
mov
mov
aaa
ffreep
leave
and
mov
push
add
and
ljmp
sbb
and
je
mov
les
pop
popa
push
fmull
xchg
mov
ret
les
out
pushf
loop
mov
mov
lods
push
cmp
dec
sbb
mov
out
shrb
mov
out
fdivr
pop
stc
pop
add
add
sbb
movsl
out
test
cwtl
jne
sahf
imul
push
cmp
add
fdiv
popf
int
pop
and
stos
repnz
movsb
ret
outsl
shll
sarb
loope
or
jl
mov
out
ficoml
dec
adc
into
xchg
dec
out
and
lret
pop
jmp
jnp
mov
popf
add
sti
sub
jp
add
sahf
inc
pop
push
filds
icebp
add
pop
xor
push
ja
pop
sub
jbe
jmp
lea
xor
in
mov
pop
adc
idivb
aas
cmp
imul
inc
inc
cmp
popf
notb
in
aaa
movb
es
in
out
or
aam
cmpsl
dec
cld
mov
mov
jns
sub
int
xchg
movsl
or
roll
scas
mov
into
loopne
sub
in
imul
xor
inc
push
jecxz
jle
iret
lods
jnp
sbb
dec
dec
shrl
lcall
insl
mov
movsl
inc
es
iret
cmpsb
sar
mov
lock
and
jne
shlb
mov
pop
adc
add
mov
sbb
lcall
pushf
idiv
imul
loope
cs
jl
push
ljmp
dec
sub
add
repnz
push
enter
hlt
cmp
adc
dec
inc
arpl
xchg
xchg
push
bound
lods
imul
lods
adc
push
ja
in
mov
stos
lahf
cwtl
scas
sbb
fwait
push
and
scas
cmp
ret
mov
or
shrb
pop
sub
ficoms
xor
fnsetpm(287
stc
lcall
jno,pt
mov
pop
pop
add
or
cmpsl
mov
jecxz
add
pop
xor
shrb
movsl
sbb
sbb
fwait
rcrl
adc
fisubrl
sbb
push
fidivrl
cmp
jl
int
fstpl
rclb
sub
jge
mov
mov
mov
inc
aaa
pop
cmp
ret
dec
jge
jp,pn
jle
into
push
std
pop
mov
arpl
sub
je
adc
or
jecxz
int3
sbb
sub
jge
imul
dec
or
enter
mov
leave
mov
lret
fcom
mov
add
loope
xchg
in
shlb
pop
xchg
adc
fstps
xlat
in
cmpb
inc
adc
fcoms
pop
sub
sub
mov
paddq
sbb
rclb
push
psubsw
mov
cmova
int
mov
mov
mov
movsl
sbb
out
fidivl
or
out
aam
rcrb
adc
cwtl
iret
ret
inc
icebp
movsb
mov
jo
rcll
cmp
or
nop
mov
aam
or
pop
and
rorb
adc
mov
jno
shrl
sub
sbb
jb
pusha
cs
popf
sahf
aam
pop
and
incl
sub
pop
in
imul
jo
lods
shll
mov
outsl
insl
shr
popf
add
mov
in
push
mov
in
repnz
sbb
in
out
inc
push
inc
aam
lock
cmc
scas
xor
call
dec
ljmp
mov
adc
sub
outsb
arpl
mov
push
daa
push
mov
stc
mov
fbstp
shl
stos
fs
push
sub
xchg
mov
sbb
stos
loop
imul
je
xor
in
or
xor
je
lahf
lcall
mov
pop
test
stos
xchg
inc
dec
sti
inc
or
and
mov
addr16
lret
mov
es
aad
mov
or
je
out
sahf
add
outsl
sub
fnsave
or
lahf
sub
fstpl
inc
std
hlt
xlat
andb
sbbb
jge
cmpsb
sub
jp
fld
xor
les
shll
pop
inc
and
mov
jecxz
lods
and
adcl
cmp
mov
pop
das
jns
sub
jbe
pop
repnz
add
jmp
jmp
push
pop
sbb
call
popa
dec
repnz
fcmovnbe
pop
loopne
in
rorb
or
adc
and
and
mov
sub
jle
xchg
pop
ja
nop
addl
sbb
inc
cs
pop
mov
out
cld
mov
les
sbb
jne
stos
push
stos
loope
sbb
shlb
out
jmp
and
adc
add
xor
nop
xor
sub
xchg
fwait
movsl
mov
push
mov
lahf
sbb
adc
xchg
aad
adc
aam
fwait
cmpb
out
add
test
in
lock
pop
mov
cmc
sub
sub
inc
lds
nop
adc
dec
inc
repz
movsb
roll
out
imul
mov
and
shrl
leave
aas
sub
imul
leave
mov
loopne
shlb
lcall
or
iret
out
insl
push
dec
jge
jle
imul
test
sahf
rorl
xor
lcall
fucomp
jmp
imul
mov
sbb
pop
dec
sub
or
insl
sbb
dec
ljmp
and
mov
sbb
nop
pop
push
dec
test
fadds
mov
clc
xchg
xor
cmp
mov
or
push
or
cs
mov
sbb
sbb
mov
mov
lods
xor
std
iret
in
loop
push
fcomi
cld
sub
out
sarb
push
jae
lds
xchg
pop
pop
pusha
ret
add
lret
push
xchg
cltd
dec
mov
pop
loope
mov
je
repnz
mov
push
shll
pop
pop
push
cli
add
add
dec
outsl
cmp
xorl
call
data16
jmp
clc
mov
sub
bound
cmp
dec
cmp
pusha
jo
inc
test
cmp
sbb
ja
fnstenv
dec
jecxz
or
push
push
mov
fadds
negl
pop
pop
enter
adc
repnz
movsl
or
push
popf
out
dec
mov
shl
push
push
pop
pop
lcall
ja
mov
das
xchg
aas
dec
js
push
mov
iret
or
push
data16
nop
rcrl
in
out
cmpb
aam
jecxz
int
and
adc
repz
mov
stc
jl
scas
stc
cmp
aam
jg
mov
imulb
sbb
repz
addr16
inc
dec
and
mov
mov
xchg
aas
stos
sbbb
sub
imul
fldl
inc
sub
sbb
imulb
iret
lahf
fisubs
sbb
xchg
cmc
lods
jne
push
in
repz
jg
pop
adc
dec
jae
add
shl
out
dec
sub
iret
neg
pop
leave
sub
dec
xchg
push
pop
inc
mov
aad
push
pop
mov
fdivs
xchg
ret
lock
inc
fisttps
jno
push
pop
xchg
mov
mov
add
dec
int3
scas
repz
je
xchg
cmp
mov
and
rcr
xchg
xchg
jmp
sbb
jae
cld
insb
inc
inc
and
mov
shr
mov
mov
adc
movsb
std
push
mov
sbb
pop
aad
or
dec
bound
loope
mov
addb
mov
push
xchg
fdivrs
mov
scas
out
icebp
add
and
insb
push
mov
addl
sbb
stos
push
mov
add
adc
add
mov
and
ret
movsl
shll
push
out
jo
test
test
inc
mov
fs
ret
sti
mov
jae
mov
rorb
jmp
push
xor
push
cmp
inc
push
jl
jbe
je
lock
mov
arpl
push
cmp
sub
ret
leave
push
sbb
es
dec
mov
xchg
mov
sbb
in
or
or
out
mov
movb
inc
or
decb
fadd
push
pop
imul
sbb
stos
xchg
test
xchg
mov
punpckhdq
jmp
inc
jmp
jo
mov
mov
fsubrl
sbb
xor
cmp
adc
cmp
cmpsl
pxor
mov
cs
bswap
test
mov
cmpl
jne
mov
jp
inc
pop
ljmp
dec
in
shlb
rcll
fists
push
cltd
mov
push
fidivrs
jecxz
sbb
lds
nop
subl
adc
arpl
pop
test
ljmp
mov
into
cld
pop
fildll
and
cmp
imul
in
mov
inc
push
cltd
push
pop
inc
enter
mov
xor
push
and
les
sub
incl
jg,pn
pop
imul
fcoml
xor
push
cmp
mov
xchg
xchg
addr16
sbb
pusha
cs
mov
mov
sub
sarw
pop
int
mov
popa
out
jae
cli
into
add
jo
test
sbb
adc
jge
stc
push
jle
xor
lods
fsubrs
mov
pop
mov
or
adc
jb
xchg
js
push
cmp
cmpsb
xor
push
xchg
xlat
into
cld
outsb
filds
mov
pop
sbb
repnz
add
mov
jg
xchg
inc
xchg
jmp
or
iret
es
shll
mov
int3
xor
ds
int
je
xchg
imulb
mov
out
mov
push
clc
mov
jns
dec
inc
add
xchg
sbb
push
fdiv
test
sub
das
pushf
les
aad
inc
and
scas
fwait
dec
sbb
into
jmp
stos
inc
xchg
mov
stos
sbb
mov
mov
dec
sub
mov
dec
xchg
jno
add
insb
cmp
or
icebp
js
test
cmp
test
lods
pop
sbb
jmp
mov
inc
jl
mov
mov
insl
sahf
outsl
repz
mov
xchg
cmp
push
insl
in
movsb
and
notl
jno
pop
rcrb
xor
repz
sub
mov
sar
int
mov
xchg
and
in
xchg
jne
push
sbb
dec
fsubrs
cmp
repz
jecxz
or
mov
push
and
incb
cmc
xor
fcoml
pop
pushf
fistps
cmp
adc
out
pop
mull
out
dec
mov
sub
scas
ja
pusha
jmp
mov
or
je
out
push
mov
and
sbb
dec
xor
shll
xor
repnz
jo
icebp
cmpsb
insl
cmp
js
imul
orl
rol
mov
or
mov
stos
and
adc
stos
cs
pop
adc
ljmp
fdivl
ss
imul
and
or
in
jg
test
dec
adc
iret
fiadds
ja
sbb
das
icebp
jge
pusha
test
repz
jge
bound
hlt
xorl
jge
test
push
in
cmp
insl
cmpsl
pop
fstp
cmpsl
js
jg
cmp
mov
cmp
pop
push
pop
test
inc
and
cmp
mov
cmp
loope
into
iret
mov
push
pushf
out
mov
jne
scas
mov
fs
ja
sbb
mov
lret
mov
xchg
cmp
je
push
out
mov
xor
xchg
jl
das
cli
andb
mov
pushl
mov
inc
sub
loopne
mov
inc
out
test
pop
test
loop
jge
cmp
xor
dec
ljmp
iret
sbb
test
mov
mov
mov
arpl
mov
xchg
cltd
adc
loope
decl
fistpll
lods
les
or
data16
outsl
aas
outsb
loop
jp
lea
imul
cmp
sbb
imul
scas
dec
imul
stos
add
jne
add
xor
inc
jl
fadds
fsubl
jg
push
lds
enter
cmp
ret
mov
imul
push
sbb
jmp
fcompl
xor
pop
rcrb
xchg
mov
mov
movsl
stc
adc
lret
mov
or
aas
dec
xchg
ja
pop
stos
js
pusha
mov
jno
subb
mov
and
mov
cmp
ljmp
into
mov
xor
xchg
inc
mov
inc
test
pop
xchg
bound
enter
mov
cmp
add
mov
cli
pop
jnp
lcall
adc
xlat
jbe
je
pop
adc
and
mov
jmp
xchg
sahf
pop
sbbb
sub
pop
xchg
adc
cld
push
push
fbstp
push
mov
or
or
movd
sub
neg
xor
repnz
pop
scas
outsb
out
sub
imul
xchg
or
addr16
mov
dec
cmp
mov
push
aas
bound
sbb
push
mov
in
mov
xor
jg
inc
push
repz
loop,pt
xchg
arpl
sub
mov
inc
cmp
shrb
mov
sbb
js
or
xchg
movsl
and
out
cli
pop
mov
bound
clc
ljmp
or
xchg
mov
sub
aas
lea
jcxz
push
mov
sbb
adc
cmp
adc
out
aaa
dec
flds
int3
enter
ds
mov
adc
test
repnz
ret
inc
daa
arpl
fildl
ljmp
jno
cmpsl
mov
mov
mov
and
add
cmpsl
cmp
fs
mov
std
cld
mov
gs
and
imul
jle
ret
scas
dec
icebp
sub
jns
imul
sahf
lds
cmp
inc
mov
mov
shl
mov
cs
jmp
stc
dec
mov
test
lods
clc
fcoms
faddl
push
cmc
xorb
sub
jo
into
add
leave
icebp
inc
push
cs
dec
das
inc
adc
jns
cs
dec
or
daa
sbb
jne
cmp
mov
and
cmp
fstl
flds
cwtl
es
adc
scas
movsl
push
push
pop
jns
mul
and
cmpsl
leave
mov
sub
or
pop
or
shrb
clc
dec
iret
ficoms
lods
lea
out
xor
lret
sub
in
sbb
jo
in
ja
ret
xchg
fsubs
ret
and
pusha
cmp
mull
push
fmull
push
pusha
jno
aam
sub
jmp
aaa
push
jnp
ret
sbb
xchg
pop
movsl
and
mov
or
stos
aas
sub
jae
repnz
push
ljmp
call
jae
cmp
shrl
adc
out
mov
outsb
pushf
adc
adc
mov
sub
fcmovnbe
loope
push
lea
cwtl
push
xchg
aam
sbb
adc
xor
dec
mov
mov
jle
xchg
dec
push
pushf
inc
arpl
add
jmp
fdivs
int3
ret
xchg
or
or
pop
mov
mov
out
mov
packsswb
jb
scas
lea
push
nop
loopne
pusha
out
adc
into
push
es
shl
gs
pop
pop
and
and
push
jns
mov
adc
inc
movswl
enter
nop
pop
cli
mov
rorb
xchg
inc
jp
aad
aas
ffreep
arpl
aam
pop
outsb
out
in
popf
outsb
sarl
jge
pop
jb
add
push
mov
ds
push
sub
fimull
sbb
test
aam
mov
in
or
sbb
fwait
or
xchg
mov
rorl
mov
je
push
iret
fstpl
mov
fadds
pusha
inc
outsl
std
xchg
rcll
inc
out
mov
js
fidivrl
xchg
sub
adc
sbb
repz
sbb
shlb
add
add
mov
mov
inc
leave
add
add
add
mov
cltd
out
nop
mov
aaa
imul
test
jnp
jnp
lcall
mov
xor
jl
mov
or
test
cmpsl
jmp
push
jecxz
out
xchg
aaa
popf
rorl
and
sbb
leave
rcrl
or
lcall
insb
and
in
int3
repnz
inc
dec
mov
ret
push
jp
cltd
jmp
clc
imul
xor
cli
pop
js
dec
push
loope
jp
cmpsb
in
dec
stc
mov
mov
add
imul
push
out
int3
jo
fs
movsb
xchg
fwait
jnp
jnp
jbe
mov
adc
fs
or
cmp
hlt
and
test
pop
mov
scas
cmp
inc
and
js
or
sbb
xchg
das
out
jmp
add
add
daa
add
stos
add
add
add
xchg
add
pop
add
add
add
pop
add
lret
add
add
add
ja
add
add
add
add
add
add
add
add
add
jmp
add
push
add
add
add
addb
add
stos
stos
add
mov
mov
pushl
jb
jo
add
lea
add
add
pop
and
and
fwait
inc
add
or
adc
add
add
add
add
pop
jmp
add
add
add
add
add
add
jnp
and
add
add
sbb
sbb
sbb
sbb
sbb
aam
sbb
pop
sbb
jecxz
cmp
pop
das
inc
dec
outsb
push
push
imul
dec
je
mov
inc
cld
fnstenv
sahf
adc
sti
mov
mov
add
push
je
cld
pop
or
cvtdq2ps
mov
cld
mov
lock
mov
xor
call
or
push
in
add
xchg
pop
ret
push
add
adc
add
inc
push
mov
inc
add
push
adc
loopne
mov
clc
and
pushl
push
incl
mov
push
cmp
loope
pushl
and
cld
in
push
adc
or
add
stos
inc
add
loopne
add
dec
add
pop
loopne
sub
call
adc
hlt
add
rolb
pop
add
pop
sbb
add
add
sbb
sbbb
sbb
and
sbb
pop
add
sbb
add
leave
add
outsb
add
je
add
jb
outsb
outsl
xor
push
add
add
add
add
insb
fs
insb
add
popa
inc
je
sbb
jae
or
inc
xor
popa
add
movl
cmp
add
add
mov
add
add
sbb
add
xchg
and
das
cmp
mov
xchg
mov
or
mov
rorl
cmp
sbb
mov
cld
sarb
nop
sbb
popf
sbb
adc
sbb
pop
fldcw
lret
pop
scas
bound
xor
lahf
sbb
imul
cmc
ret
stc
mov
jne
aam
mov
imul
lcall
movsl
andb
daa
fcmovbe
pop
sbb
aam
scas
inc
enter
push
push
movsb
or
mov
inc
pop
imull
adc
fwait
dec
mov
jo
mov
mov
jb
rol
mov
jle
cmp
adc
in
mov
idivb
shll
aaa
sbb
pop
adc
cs
mov
push
mov
xor
cmpsl
xchg
dec
xchg
cmp
xchg
lds
xchg
lcall
mov
leave
cld
les
movsl
push
push
nop
aad
loopne
popa
mov
add
stos
pop
pop
pop
out
xchg
aaa
call
das
xchg
shll
add
jp
imulb
jno
roll
add
bound
sarb
inc
repnz
mov
mov
sub
lret
cmpsb
aad
and
fiaddl
scas
inc
xor
js
xor
iret
sub
stc
mov
sbb
and
bound
pop
fwait
les
inc
add
adcl
adc
stc
and
xor
repnz
bound
mov
push
ss
or
add
push
mov
xchg
test
mov
adc
pushf
sub
scas
dec
push
cltd
rolb
lcall
scas
xor
imul
mov
mov
enter
jae
popa
jns
pop
scas
sahf
pop
jnp
xor
addr16
cmp
test
ficoml
cmp
int3
fmul
jge
fs
bound
outsb
insl
adc
stos
mov
xor
mov
enter
into
pusha
pop
sub
dec
push
es
lret
jb
sti
jecxz
xlat
mov
fdivrl
add
movsl
ljmp
out
enter
jno
push
mov
push
mov
fmuls
xchg
das
dec
add
mov
pop
shlb
jle
pop
sbb
mov
pop
mov
hlt
in
cwtl
sahf
stc
mov
or
aas
sahf
js
orb
bound
jae
cmp
int
xlat
push
popf
adc
popf
gs
sahf
adc
lods
int3
adc
aam
bound
sbb
fwait
add
addl
aaa
add
pushl
sbb
repz
cli
out
sub
js
adc
cmp
mov
fdivrl
addr16
or
mov
xor
add
sbb
xchg
mov
rcrl
fwait
dec
repz
push
in
or
hlt
pop
aam
pushf
xlat
pop
mov
inc
outsl
dec
icebp
xchg
or
imull
pop
out
sub
mov
inc
add
mov
clc
pushf
daa
or
adc
push
inc
aas
mov
fisubl
mov
fdivrs
lret
xorb
inc
jle
cmp
push
inc
ss
xor
xor
or
mov
and
ds
inc
pop
int
xchg
add
or
adc
out
dec
mov
data16
xlat
cmp
or
pusha
sbb
pop
mov
sub
dec
xor
mov
jl
stc
add
subl
sub
pusha
jno
adc
ret
push
sub
jnp
sub
xor
pmuludq
addb
pusha
add
out
mov
cmpsl
xlat
insb
loopne
xor
loop
aam
fisubrl
popa
fnstsw
jge
pop
pop
or
scas
mov
nopl
repnz
gs
stos
repnz
pop
add
cli
add
scas
jge
ljmp
inc
push
popa
dec
icebp
mov
jne
and
movsl
push
cld
mov
and
mov
inc
mov
roll
or
mov
sub
popa
adc
cmc
rcr
aam
lcall
jb
xor
dec
cs
adc
mov
add
enter
add
frstor
mov
out
sub
sarl
into
imul
sbb
sub
enter
test
repnz
out
pop
repz
gs
test
push
pop
lock
xlat
decl
adc
sarb
rolb
mov
sbb
xchg
ret
and
ror
scas
mov
jecxz
fstpt
jecxz
sub
cmc
lahf
jbe
sub
arpl
add
imul
jae
or
xchg
mov
xorb
imull
xchg
xor
mov
jo
lahf
rcr
push
sub
mov
mov
rcr
push
mov
lcall
call
je
cltd
adc
mov
fs
dec
hlt
in
inc
jnp
popf
fdivl
mov
aaa
push
lods
icebp
out
xor
or
xchg
and
nop
loope
pusha
cmp
ds
addr16
sub
rclb
sub
das
cltd
mov
loope
js
pop
jbe
test
repz
sbbl
adc
and
push
cld
cmp
iret
ja
mov
lods
pop
das
add
es
mov
jae
pop
xor
or
mov
xchg
add
mov
fs
pop
iret
sbb
jg
dec
repnz
stc
sbb
adc
and
pop
sbb
mov
sti
or
and
jbe
mov
xchg
movsb
js
std
cmp
divl
sbb
loope
add
jns
dec
push
sub
aam
repnz
in
jae
bound
sbb
pop
pop
jae
mov
push
mov
xor
push
xchg
aas
imul
adcb
je
mov
stc
out
mov
test
mov
scas
push
cmc
push
into
xor
and
xchg
add
out
mov
xchg
sar
cmp
xor
repz
aaa
xor
mov
ror
xor
stos
in
ljmp
dec
sbb
and
push
mov
dec
xor
add
insb
inc
imull
ja
sub
mov
mov
stos
stos
add
rorb
and
imul
push
pop
and
insl
inc
pop
sub
lret
dec
mov
pop
inc
movsb
aam
fidivl
insl
call
jne
test
sub
adc
sbb
push
in
inc
add
pop
sbb
fdivs
pop
cltd
sbb
inc
or
fimull
xchg
lods
jl
push
out
aaa
cmp
push
shrb
adc
cmpsb
or
mov
lret
scas
sti
sahf
fldl2e
add
pop
push
icebp
imul
out
jo
xchg
rcr
jle
xchg
xchg
mov
inc
int3
push
sub
push
fidivl
scas
xor
mov
jno
push
adcb
jp
inc
dec
push
test
sbb
inc
repnz
decb
xchg
movsb
jns
dec
shl
hlt
mov
jg
add
outsb
mov
hlt
mov
popl
rcrl
jbe
flds
popa
adcb
push
je
cld
jl
cmp
imul
pop
mov
rcrb
in
cmp
fidivrs
mov
mov
enter
mov
aaa
dec
iret
iret
push
pop
push
cmp
cmp
xchg
in
adc
rclb
sub
sub
subb
jb
or
xchg
pop
xchg
pushf
sbb
rol
inc
int
pop
data16
mov
xor
out
xchg
pop
pop
imul
cmp
and
xchg
arpl
leave
xchg
aam
loopne,pn
inc
adc
je
cmc
dec
int
outsb
and
in
mov
push
jno
or
test
scas
adc
fadd
xchg
push
bound
popf
jmp
out
ret
jbe
ret
push
test
out
mov
dec
inc
in
test
insl
jb
cs
je
add
fisttpl
mov
stos
clc
aaa
aas
xlat
fsubl
sti
out
push
inc
out
pop
pusha
mov
in
inc
fwait
rcrl
lahf
sub
cwtl
call
lcall
outsb
push
ljmp
sub
hlt
jae
insb
mov
mov
pmuludq
rolb
cmpb
loop
mulb
add
lret
movsb
into
scas
pop
shlb
sbb
pop
in
push
pop
fsubrp
cmp
or
popf
xchg
test
movsb
test
add
mov
jl
push
sbb
push
push
dec
cmpsb
fbld
push
and
incb
xchg
xchg
inc
movsb
xchg
ljmp
jle
mov
jle
out
dec
nop
jge
adc
arpl
cmpsb
fcomip
loope
popf
cmp
dec
sarl
add
aad
xor
or
sbb
sub
cmp
mov
pop
inc
add
jg
jns
test
lret
and
jg
cmp
orb
daa
jne
roll
lcall
je
and
lea
repz
cwtl
mov
leave
andb
sub
xchg
lds
mov
jae
xor
sar
dec
aas
cld
add
xor
mov
push
mov
fadds
daa
outsb
mov
jnp
xor
ror
test
push
push
mov
pusha
jl
mov
and
daa
lret
cld
xchg
jbe
mov
xchg
mov
xchg
jno
mov
loopne
xchg
test
out
jecxz
jnp
fsubp
pushf
aas
sub
xor
lretw
rolb
test
sbbb
sbb
fisttpl
pop
sarb
mov
int
test
dec
fsubs
xor
and
cli
mov
add
movsl
shrb
pusha
adc
push
inc
jmp
pop
push
imulb
sub
jnp
shll
add
les
xchg
cwtl
ljmp
lods
loopne
outsb
sub
enter
mov
or
dec
outsb
lret
mov
std
add
fisubrl
pusha
cmp
cli
mov
sbb
adc
icebp
mov
gs
dec
andb
or
lock
arpl
movsl
call
xchg
or
mov
dec
cltd
popf
mov
or
cmp
jmp
push
shr
popa
jno
mov
jl
jg
call
test
stos
scas
xchg
iret
and
fstps
or
clc
mov
js
xor
movl
mov
jp
mov
adc
test
in
sub
push
cli
cmc
scas
mov
mov
jl
pop
jecxz
inc
test
stos
add
sbb
dec
lock
insl
je
mov
out
mov
faddp
dec
add
xor
aad
imul
mov
jnp
mov
lods
inc
inc
gs
fistps
sbb
push
pop
xchg
or
arpl
out
sub
repz
inc
ja
and
mov
or
inc
xchg
sbbl
jecxz
push
outsb
pop
mov
sub
pop
lods
push
adc
cmp
inc
and
fdivrs
xor
gs
or
inc
or
out
repnz
mov
jg
stos
gs
out
sti
adc
sbb
in
mov
adc
and
mov
jno
sbb
push
aaa
jns
cld
pop
cmp
push
cltd
cmp
jns
fwait
inc
or
push
lret
jbe
inc
jb
outsl
sti
fidivl
inc
mov
and
rcll
orl
in
or
mov
daa
mov
xchg
aas
nop
push
mov
movsb
pop
fwait
dec
iret
fstpt
out
sbb
jge
hlt
ror
fnstsw
call
push
mov
fldenv
dec
pop
push
int
push
mov
sbb
jmp
movsl
loope
leave
outsl
and
xchg
and
add
aaa
fs
xchg
add
pop
fdivl
dec
mov
in
dec
add
push
mov
jg
mov
push
xor
mov
in
popa
mov
mov
and
cmp
rorb
jne
out
xchg
cmpl
imul
mov
jle
aas
inc
cmp
jo
jns
mov
enter
xor
jns
xor
cmp
or
jmp
xchg
cmp
fmul
mov
imul
iret
fs
cmp
insb
in
div
movsl
sub
test
add
mov
mov
bound
addr16
dec
jo
mov
iret
pop
lds
sbb
icebp
or
cli
push
or
andl
fdivl
js
outsl
mov
dec
push
sub
cwtl
pop
test
mov
add
add
in
mov
jne
je
jo
adc
call
mov
fdiv
and
xchg
mov
or
xchg
xorl
jecxz
rcrb
insb
leave
push
push
testl
pop
rol
xorl
add
lea
stos
ja
push
repz
cs
sub
das
jno
test
and
xor
jge
pop
je
jae
call
xchg
pop
mov
aad
pop
movsl
jns
cmp
push
loop
test
in
sbb
adc
jge
sahf
xor
xchg
push
hlt
mov
dec
mov
fcmovnu
mov
sahf
test
inc
aas
cmc
ljmp
mov
ja
lds
inc
sbb
loop
les
mov
inc
ret
pop
iret
outsb
je
push
loopne
mov
cmp
mov
fcoml
jno
fwait
xor
in
jno
out
or
xchg
inc
sarb
cmp
ljmp
test
mov
aas
scas
imul
xchg
inc
sti
mov
jge
xor
out
push
push
or
fnstenv
mov
ljmp
or
lock
lret
adc
jns
rcr
mov
inc
adcl
stc
xchg
ret
inc
jecxz
pushf
mov
dec
in
nop
add
insl
sbb
sub
xor
jge
idiv
jnp
push
dec
shll
cmp
sub
jg
in
pushf
push
mov
sbb
xlat
movsb
test
mov
mov
mov
leave
push
fcoms
int
mov
dec
int3
push
repnz
cld
in
in
roll
and
and
inc
pop
aad
in
mov
out
and
pop
negl
dec
sbb
mov
stos
int
out
addr16
add
sub
push
loopne
cmc
shll
cltd
aam
into
jno
fs
xchg
scas
mov
mov
stos
pop
dec
ror
mov
or
movsb
sub
out
sbb
lods
mov
out
scas
pop
and
sahf
add
inc
rcll
push
pop
mov
ds
shlb
or
pop
fnstsw
fsubrs
out
gs
jns
cli
je
jb
sbb
jbe
or
pushf
mov
in
push
adc
andb
add
fdivrs
ja
mov
mov
int
test
aad
mov
icebp
rorl
and
aaa
xchg
dec
xor
and
pop
cmpsb
out
mov
gs
enter
mov
das
cltd
dec
jge
sti
adc
shlb
clc
out
xorb
fistpll
je
ret
adc
je
loopne
mov
cs
movsl
mov
fs
dec
sarl
push
xor
lret
aad
dec
push
fwait
stos
scas
mov
cmp
aam
loop
pop
xor
aaa
xor
jb
push
xor
mull
aaa
sbb
movb
sbb
sbb
or
xchg
test
lds
jmp
and
jbe
sbb
pusha
and
push
outsl
std
aad
add
and
das
xor
mov
test
lahf
js
pop
adc
dec
out
negb
sub
outsl
xchg
mov
inc
ss
mov
movsb
jbe
cmp
sub
mov
out
test
add
repnz
into
call
lock
push
jae
popf
and
sub
or
into
mov
jbe
cmc
lahf
adc
cmp
push
pop
xor
lret
dec
lock
std
mov
stos
arpl
mov
add
repz
xor
fcomps
jle
leave
pop
xor
adc
ret
pop
str
and
sti
cmp
xlat
sub
cmpsl
xchg
ss
test
inc
pop
fadd
push
mov
aad
or
std
gs
addl
leave
imull
pusha
mov
icebp
imulb
dec
out
adc
leave
sbb
cmpsb
or
push
lods
out
mov
adc
sti
dec
incb
inc
cmc
jae
sbb
dec
cld
daa
mov
pop
scas
xorb
fiaddl
jecxz
in
in
dec
or
cltd
popf
cmp
fdiv
push
and
popf
hlt
push
cmp
inc
fwait
jnp
mov
mov
int
push
jnp
push
xorb
lods
pop
lcall
inc
jl
sbb
out
cwtl
call
or
cmp
xor
push
into
call
mov
dec
cli
das
hlt
pop
dec
in
ja
mov
mov
lcall
xchg
mov
jbe
and
lods
and
std
mov
ss
cmpsb
inc
inc
into
rcrb
shrb
mov
add
xor
pop
ja
cmc
cmc
cmc
pop
loope
mov
shrl
scas
ret
xchg
movl
clc
fstpl
sub
je
adc
lret
push
movsl
outsb
dec
leave
data16
jmp
adc
mov
ret
pop
xchg
xlat
xor
mov
pop
fbld
inc
xor
jg
mov
and
inc
pushf
nop
inc
test
jnp
pushf
xchg
pushf
and
aaa
cmpsb
lret
insl
mov
dec
add
xor
jb
xor
pop
rcl
xor
fcmovu
push
out
outsl
ljmp
mov
shrb
mov
rcrb
loopne
jae
jns
inc
dec
orl
adc
xchg
ljmp
mov
dec
cmp
rorb
mov
stos
test
mov
lods
jne
movsl
lods
fs
scas
icebp
out
cmpsb
out
or
add
xchg
inc
sarl
ret
lret
icebp
push
add
and
or
fucomp
les
xlat
adc
sahf
sub
repz
cmp
out
out
add
add
add
add
or
sbb
add
add
imul
add
sub
sti
add
add
fldl
add
add
add
add
dec
add
add
add
xor
add
fildl
add
add
addb
add
stos
stos
add
ja
mov
xchg
call
add
add
outsb
add
mov
add
add
add
adc
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
andb
arpl
pop
and
ja
dec
add
push
and
mov
xor
cvtdq2ps
lea
mov
push
out
adc
inc
lea
adc
lea
adc
mov
lea
test
adc
rorb
popa
movl
push
add
ljmp
orl
adc
add
add
adc
pop
incl
call
xlat
adc
add
sar
xor
adc
out
add
add
push
push
add
push
idiv
pop
add
mov
enter
mov
addr16
add
jne
pushl
push
add
add
pop
add
testl
add
add
inc
mov
je
inc
jns
inc
dec
xchg
inc
inc
gs
gs
jo
sbb
fs
push
dec
inc
insl
jb
gs
insb
adc
dec
arpl
repnz
cs
gs
jb
addr16
dec
gs
push
bound
push
jbe
cs
arpl
js
xor
add
add
xchg
addl
add
add
adc
add
add
add
add
add
add
add
add
add
jae
lahf
insb
fs
repnz
mov
jecxz
arpl
lret
fsubs
mov
pop
pop
and
cmp
lahf
and
pop
daa
push
out
sar
aas
movsb
dec
out
push
enter
jb
push
and
daa
scas
andb
mov
push
repz
dec
sti
out
push
in
push
sub
add
push
je
jno
and
lock
movsb
vbroadcastf32x8
jb
mov
adc
aaa
xchg
loope
push
shrb
dec
in
idivl
sub
insb
std
pop
int
cld
jge
loopne
movsl
xor
ds
push
nop
adc
popl
pop
int
nop
pusha
or
push
cmp
mov
mov
xchg
cmp
aas
xor
imul
mov
cmpsb
jmp
pop
fcomps
xor
sub
xor
not
xchg
mov
scas
jne
push
movsl
test
mov
rorb
push
dec
push
iret
int
or
mov
xchg
pop
mov
push
cltd
imul
dec
notb
sti
rolb
sahf
jmp
int3
testb
xchg
add
lret
adc
ret
int3
movsbl
jns
or
adc
int
rcr
jns
popa
cmpsb
movsl
dec
sbb
push
lret
adc
pushf
mov
out
sahf
xchg
pop
ret
pop
insl
rep
xor
dec
in
fsts
pusha
push
pop
out
push
ljmp
xchg
xchg
xor
aaa
mov
cmpsb
or
cmpsl
mov
icebp
push
push
in
mov
lret
fsub
jne
xor
adc
sbb
pop
lret
arpl
jne
out
cmp
push
leave
mov
mov
pop
mov
mov
notb
enter
add
pushf
cmp
ss
adc
xchg
xchg
xor
rcl
add
mov
and
add
pop
xlat
cmp
adc
dec
ret
and
push
in
call
shll
fstps
fidivrs
mov
loop
cltd
cli
mov
jle
je
cli
test
sbb
or
aad
and
popl
in
fildll
push
add
lcall
popa
repz
int
mulb
add
xor
cld
mov
je
push
bound
pop
adc
data16
mov
out
cmpsl
out
sub
es
bound
pop
sbb
call
ss
lds
push
fcompl
fcoml
jp
push
loop
in
push
mov
in
xchg
lahf
test
popf
mov
aam
es
fcmovbe
leave
test
adc
fucomi
not
lret
in
and
cmc
pop
gs
loopne
or
push
cltd
pop
add
jbe
popl
cli
nop
repnz
mov
mov
xor
push
dec
out
mov
mov
fisubs
cmpsb
sahf
in
pop
mov
fiaddl
fmull
jnp
ror
mov
popa
ljmp
mov
ss
mov
mov
adc
js
in
lods
xchg
or
stc
pop
popf
inc
pop
xor
mov
out
sub
scas
dec
or
push
sbb
adcl
jnp
pop
cs
pusha
lods
cmp
sbb
xchg
sti
sub
shr
cwtl
mov
sub
dec
inc
adc
push
in
dec
adc
shll
add
je
push
push
sub
mov
out
stos
lds
lahf
xlat
jle
loop
or
xor
imul
mov
add
xor
mov
add
pop
out
xchg
mov
movsb
push
ljmp
and
aaa
jg
popf
scas
sbb
fadds
jae
and
mov
add
scas
enter
shl
das
lret
fcmovu
adc
mov
in
lahf
mov
pop
scas
ficoml
pop
lea
and
mov
push
ljmp
push
loope
jae
add
pop
arpl
test
jnp
cmp
push
sub
cld
dec
cmp
clc
mov
jnp
jns
in
cld
cmp
xor
imul
mov
cs
mov
test
sbb
and
sahf
ror
cwtl
or
aad
mov
movsl
out
lock
push
dec
mov
enter
sub
sbb
adc
jno
arpl
push
imul
jno
dec
es
pop
gs
popf
cltd
lods
test
movsl
aam
es
dec
addb
or
cmpsb
mov
je
ljmp
stc
inc
inc
mov
push
nop
jbe
into
pop
xchg
dec
jne
das
inc
lahf
jl
jecxz
loop
outsl
dec
or
sbb
in
push
mov
mov
xchg
sbb
mov
ret
mov
xchg
sub
nop
mov
xor
jnp
inc
xchg
inc
je
lods
lds
int
xchg
xchg
jg
test
mov
js
dec
mov
xchg
xor
leave
dec
xchg
adc
inc
jp
mov
pop
fsubrl
lret
sub
call
adc
sbb
xchg
in
sbb
mov
mov
and
push
sbb
dec
iret
cmp
inc
out
imul
cmp
fimuls
mov
xchg
call
lret
jg
repz
gs
movhps
into
js
inc
push
cmpsb
adc
xor
icebp
adc
inc
je
shl
fsubs
xchg
dec
sahf
sti
jl
mov
rolb
jb
popf
rorb
push
movaps
push
lea
push
pop
call
jecxz
mov
inc
or
jg
cmp
lret
pop
dec
jb
inc
and
dec
pop
mov
les
lods
push
cmp
and
test
scas
pop
mov
sub
sbb
test
and
cmp
xchg
add
mov
mov
ds
insb
popf
mov
fsub
leave
test
jl
das
or
mov
jmp
dec
inc
fwait
scas
les
pop
in
mov
mov
jge
mov
xor
sub
add
and
cld
pop
mov
mov
xchg
or
loopne
or
jecxz
jmp
and
lret
pop
pop
scas
inc
movsb
inc
iret
cld
mov
sbb
adc
inc
ficoms
les
out
dec
jge
xchg
xchg
es
mov
or
xchg
xchg
jmp
out
jmp
pop
inc
jne
xchg
data16
jg
movsb
stc
stos
sub
in
cmp
jp
inc
lods
cmp
adc
sbb
fidivrl
mov
test
push
jns
shrb
call
jmp
mov
daa
sbb
mov
fwait
sbb
gs
adcl
daa
dec
data16
leave
popf
adc
cmpsl
lods
divb
or
loope
cmpsb
leave
jno
cmc
dec
sbb
fildl
or
push
mov
dec
outsl
ja
mov
into
mov
adcl
ret
test
dec
sbb
pusha
xchg
mulb
pop
lods
aad
lds
xchg
imul
clc
pop
mov
shll
lcall
popf
into
jo
out
dec
or
add
pop
xchg
mov
inc
and
ja
les
push
out
in
loopnew
pop
les
cmp
adc
sarb
add
mov
out
dec
insl
cli
jecxz
jae
adc
imul
das
pop
or
nop
mov
inc
push
cmpb
jno
jns
mov
mov
std
push
fnstsw
rolb
aaa
cli
popa
enter
mov
mov
mov
or
push
mov
js
adc
push
and
or
cli
fistpl
sbb
shll
mov
sub
call
pop
pop
push
das
test
pusha
ret
inc
pop
mulb
loopne
sub
mov
dec
and
pop
and
cwtl
sub
or
xor
sahf
jl
scas
cmp
js
push
pop
mov
cmpsb
cmc
push
cmp
jb
fdivrl
cmp
inc
cmp
pop
push
pushf
fwait
cmp
and
mov
stos
neg
sub
adc
push
cs
int3
shl
lods
jp
sub
dec
pushf
dec
lods
or
dec
xor
add
pusha
fadds
in
sti
stc
cwtl
sub
out
arpl
sar
sub
cmp
jno
dec
inc
int3
cmpsb
cli
xchg
out
cmp
lret
test
xchg
or
or
dec
push
push
adc
push
inc
cmp
sub
mov
mov
lods
mov
sub
call
int
test
jb
xchg
ds
cmp
and
in
xchg
nop
es
repnz
push
ss
add
test
mov
and
outsl
push
lds
inc
or
xchg
aas
mov
pusha
push
lahf
hlt
les
mov
inc
rcrl
xchg
das
add
jmp
in
ret
pop
inc
sarl
pop
adc
dec
sub
test
pop
push
int3
mov
dec
iret
xor
pop
imull
push
cmc
ljmp
in
xor
push
out
mov
in
aam
sub
out
fidivrl
pop
mov
shll
in
and
out
push
mov
ret
inc
shlb
add
push
inc
push
daa
data16
mov
out
push
dec
fs
xor
push
push
adc
mov
outsl
imul
icebp
aad
and
adc
mov
lea
in
or
pop
cltd
and
sbb
xchg
shl
sahf
arpl
ficompl
add
in
dec
scas
and
test
jle
dec
addr16
mov
xor
adc
or
sub
andl
xchg
xchg
inc
loop
cmp
aas
rorb
out
cmp
push
frstor
mov
add
aaa
push
lock
aaa
inc
add
dec
addr16
and
fcmovnu
adc
int
iret
xor
add
and
xor
int
jl
xor
mov
sbb
add
push
clc
xchg
adc
hlt
adc
je
pop
addr16
enter
ljmp
xor
jmp
loop
jp
or
mov
je
ret
jl
pop
gs
cmp
xchg
das
lret
loop
or
push
sub
jp
lods
in
lahf
pop
sub
jno
clc
movsb
mov
fisubrl
lds
inc
loopne
adc
andb
mov
fidivs
or
pop
sti
cld
into
adc
mov
inc
int
sbb
pop
cmpsb
mov
sbb
cmp
jmp
inc
jnp
push
mov
sbbl
xor
add
test
jnp
sbb
pop
test
sub
mov
and
mov
stos
cmovs
enter
push
jecxz
call
sub
dec
rolb
in
call
add
int3
lods
or
push
push
cli
lret
imulb
fnstenv
mov
enter
rorl
das
mov
arpl
cmp
pop
cmpsl
jo
push
cld
xchg
or
push
clc
mov
push
lods
lret
fadds
stos
xor
inc
insl
repnz
add
mov
jns
call
or
aad
lock
cmpsl
push
xor
xor
sub
in
aad
push
mov
ret
iret
fnstsw
std
add
fistpl
inc
push
adc
insl
xlat
dec
jmp
aaa
and
pusha
xchg
and
push
xor
leave
jge
push
scas
into
iret
cmp
pop
mov
cmp
xlat
push
out
std
push
clc
sbb
in
push
fisubs
xlat
fldt
or
sahf
js
pop
jbe
int
lods
adc
mov
xlat
mov
add
push
bound
shll
pop
fcompl
xchg
mov
jne
iret
mov
mov
popf
imul
mov
adc
jg
xor
or
jnp
xor
mov
mov
sbb
xor
ret
xchg
xchg
rclb
into
pop
push
imul
and
sub
out
ret
xor
xchg
dec
sti
and
rclb
outsl
insl
add
or
cmpl
mov
inc
push
sub
push
stc
pusha
mov
push
pop
pop
lods
lds
emms
lods
popa
or
lds
push
in
ficomps
pandn
xlat
or
xchg
xchg
jno
push
sbb
in
sbb
int
fdivs
arpl
sub
dec
mov
or
mov
int3
add
cltd
rcl
add
mov
ljmp
or
lock
int
mov
hlt
je
dec
outsl
ds
adc
xor
out
out
adc
pop
roll
and
mov
cmp
lret
shr
sbb
lds
hlt
and
and
mov
mov
and
cmp
psllw
outsl
mov
cmpsl
rcr
cmc
int3
cmpsb
subb
sub
cmp
mov
in
testl
adc
or
es
imul
jmp
scas
sub
mov
ret
enter
mov
dec
jecxz
mov
aas
jb
movsl
push
mov
add
outsb
daa
shrb
repz
mov
mov
cmpsb
insl
add
xchg
test
dec
rcrl
inc
cwtl
and
fscale
bound
shrl
jae
mov
pusha
loop
or
rcl
adc
and
leave
pusha
les
inc
test
inc
sub
xchg
fstps
call
fcoms
jmp
loopne
lods
div
dec
mov
pop
enter
jecxz
loope
scas
pop
sub
jmp
add
sbb
xlat
pushf
inc
mov
mov
das
lock
xchg
and
cltd
aaa
aaa
sbb
ret
stc
lahf
out
jl
and
sbb
xor
shll
jb
sti
loope
xor
dec
dec
sub
movsl
pop
repz
xor
mov
ljmp
xchg
rorb
imul
shlb
push
push
fimuls
shr
and
clc
dec
in
push
jl
mov
mov
test
lret
push
mov
dec
jp
fists
mov
call
fcomps
loopne
ja
adc
hlt
dec
loope
sbb
xlat
repz
js
mov
sbb
js
jo
adc
or
mov
je
rolb
fisttpl
xchg
aas
imul
pop
cmp
lret
pop
out
lds
test
mov
xor
inc
xor
jge
jmp
js
xchg
push
xor
inc
bound
mov
inc
add
mov
fs
in
lods
in
aaa
ficoms
sub
outsb
ljmp
sbb
fld
fisubrs
divb
adcl
cmp
cmp
xor
cmp
xchg
pop
call
add
ja
inc
pop
inc
mov
mov
ja
aaa
out
mov
fwait
inc
and
sub
cmpsb
sbb
jbe
rcl
repnz
popf
stos
aad
pop
sbb
xlat
dec
aaa
popa
fs
and
aad
inc
pop
cmpsl
pop
inc
add
cmc
stos
push
out
stc
bound
cli
lret
sub
sbb
dec
dec
mov
fdivrs
push
push
push
pop
dec
cwtl
xor
in
adc
pop
pop
les
xorl
aas
inc
mov
add
int3
insl
loop
jle
add
add
rolb
fdivrs
daa
mov
inc
add
add
mov
andl
fsubrs
xchg
sbb
pop
cmp
inc
cmp
push
pusha
call
adc
push
push
notl
mov
jge
adc
daa
push
test
inc
sub
cmpsl
push
ret
mov
les
fstp
mov
clc
mov
fldt
ret
push
out
out
ret
dec
mov
mov
mov
lods
std
mov
repnz
sbbb
mov
and
ficompl
mov
loope
mov
loopne
adc
xchg
stos
push
and
cmc
sbb
jbe
sub
sbb
dec
lcall
and
dec
pop
mov
das
sbb
lahf
cmp
sbb
cmp
mov
test
cmc
push
adc
cld
mov
pusha
test
leave
xlat
mov
jae
mov
add
jp
sbb
xchg
sub
aas
or
decb
fisubs
nop
enter
popa
sub
popa
aaa
out
enterw
pushf
xor
in
mov
xchg
jno
aaa
add
sbb
das
lcall
push
out
cltd
adc
add
test
mov
sub
cli
and
ljmp
cmp
mov
dec
mov
nop
fistl
loope
sbb
outsb
mov
pop
call
add
mov
cmc
push
stos
loope
insl
mov
cld
add
das
rol
and
push
jb
mov
or
sub
xor
enter
sahf
mov
or
mov
mov
xor
sub
in
and
cmp
enter
jecxz
push
loopne
ss
clc
fwait
jp
cli
mov
sbb
popf
push
add
shl
es
loopne
inc
iret
testl
mov
out
xor
cld
adc
xor
je
int
nop
aaa
ret
imul
xchg
loope
cmp
bound
fs
pop
or
mov
mov
adc
test
mov
ds
push
out
mov
sub
xor
add
ds
in
lods
mov
jl
push
imul
dec
cmp
sub
mov
stc
and
xchg
aas
push
nop
xchg
popf
imul
mov
in
xchg
data16
sbb
xor
aas
mov
outsl
clc
sbb
jl
fnstenv
fstpt
cmp
and
xchg
rorl
xor
in
pop
dec
pop
int3
jae
insl
bound
mov
mov
jg
dec
mov
test
mov
in
cmp
int3
pop
dec
mov
jmp
outsl
xor
add
lods
aad
ds
leave
mov
fld
xchg
pop
rcrb
inc
add
inc
dec
xor
jo
dec
or
jp
cltd
pop
cmc
adc
div
sbb
dec
fisubrl
stc
adc
in
jbe
leave
dec
pop
int3
dec
divl
aam
lock
ss
xor
add
stc
int3
data16
dec
scas
sti
inc
leave
call
mov
jbe
sbb
xlat
xchg
vpshuflw
cmp
and
loop
scas
inc
fmull
arpl
mov
out
cs
and
push
or
mov
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
movl
add
add
push
inc
cmpsl
roll
add
add
add
add
add
add
add
add
pusha
xchg
rolb
add
ja
mov
call
add
add
or
jne
or
add
add
add
adc
add
add
sub
add
add
add
add
add
add
cltd
add
add
add
add
xor
add
add
or
add
add
add
add
jo
gs
push
jae
inc
imul
add
shufps
jmp
mov
enter
or
pop
push
lea
mov
xor
incl
in
incl
clc
add
cld
or
or
jmp
add
adc
dec
insb
push
ret
lret
cmpl
add
add
jmp
add
add
adc
add
adc
add
xor
call
add
decb
cld
test
std
std
xchg
and
cld
decl
add
enter
add
push
cmp
clc
cmp
sub
mov
std
lret
adc
lock
add
call
adc
add
add
add
mov
add
add
adc
add
insl
dec
roll
inc
inc
outsl
outsl
les
test
insb
gs
insl
inc
jns
mov
gs
je
arpl
dec
push
gs
cs
outsl
inc
movsl
jb
insb
jge
add
outsl
imul
je
je
je
insb
imul
add
add
add
add
add
add
cmc
dec
add
add
add
add
cmp
popa
adc
rclb
gs
data16
aad
xor
lock
shlb
icebp
lods
xchg
pusha
push
jg
into
or
adc
pop
mov
pushf
popa
pop
pop
mov
movsl
sar
movsl
xchg
fs
leave
inc
sub
mov
pop
int3
jmp
int3
lahf
inc
push
lcall
in
dec
push
leave
jae
pop
test
shll
fistpll
mov
jge
fs
xor
fldt
mov
negl
push
and
or
inc
data16
push
xchg
test
inc
add
mov
test
ljmp
inc
js
fimuls
repz
mov
mov
leave
aam
jmp
repnz
stc
xchg
pop
fbld
jp
xchg
lea
nop
ljmp
or
shl
lret
scas
dec
inc
push
mov
inc
jmp
cmc
xor
test
popa
pop
xor
push
jp
mov
inc
adc
sub
aas
cwtl
xor
push
lcall
fnstenv
mov
fst
inc
add
nop
mov
lods
push
cmp
cmp
sub
ds
pushf
adc
inc
inc
lcall
pop
xchg
pop
or
cwtl
cmp
mov
sbb
mov
loopne
lret
nop
out
aam
cli
test
and
aaa
dec
push
gs
shrb
outsl
into
mov
cmpsb
cwtl
mov
dec
xor
cltd
push
lea
rcrl
mov
imulb
lret
mov
mov
xor
add
cmp
movsb
call
frstor
into
add
push
fidivl
push
imul
pop
mov
sub
push
ret
stos
cmp
in
cmp
or
scas
jmp
push
jmp
bound
sbb
or
mov
das
sub
bound
gs
mov
inc
mov
movsb
and
dec
pop
cld
hlt
mov
or
rol
movsb
adc
push
pop
sbbb
push
mov
sbb
fadds
sub
dec
lods
sahf
cmp
ret
int3
repnz
fbld
xor
mov
dec
test
or
push
xchg
or
jg
jbe
sbb
shl
pop
mov
or
ret
jo
sarl
push
pop
dec
jno
test
xchg
nop
jnp
pop
popf
je
sahf
xor
andl
dec
ret
mov
inc
mov
cmpl
leave
les
sbb
xor
and
jmp
dec
sbb
call
xor
gs
jno
out
dec
xchg
in
or
push
jne
cmp
cld
jo
jle
xlat
jb
cltd
add
es
xchg
mov
or
sti
loop
sbb
cmc
mov
fsubrp
pop
loope
lds
mov
inc
mov
rcrb
sbb
insl
jle
xor
jmp
mull
dec
xchg
jge
not
into
out
rcl
jecxz
lds
push
test
xchg
ret
leave
jno
imull
aad
fdivs
inc
in
lea
sarl
dec
sbb
dec
adc
ja
sub
xor
test
jmp
cmp
mov
popa
aaa
and
sub
xchg
inc
imull
pop
mov
into
imul
ljmp
loopne
jge
aad
mov
loope
ds
movsb
push
mov
jb
add
int
and
repz
mov
pushf
out
cs
xor
popa
aaa
adc
insl
push
push
xchg
cmp
xor
cmp
sbb
xchg
out
inc
push
adc
jnp
adc
lock
loopne
or
mov
mov
int
mov
sub
jno
hlt
popa
mov
inc
fcmove
movsl
test
int3
ss
repnz
and
cmpsl
and
jb
pop
daa
push
pop
loop
adc
mov
ds
push
repnz
aam
mov
jle
in
cs
sub
dec
repnz
nop
xchg
out
jl
mov
pop
and
jne
fwait
dec
stos
loopew
dec
mov
adc
ret
fdivl
jnp
je
add
je
mov
mov
adc
dec
testb
ffreep
movsl
pop
push
rcrb
dec
aad
dec
xchg
out
icebp
mov
lcall
in
cmp
push
call
in
arpl
outsb
xor
mov
in
call
adc
clc
sahf
dec
or
repz
dec
cmp
int
lret
mov
int
mov
in
cld
hlt
xor
lea
pop
adc
scas
dec
into
add
pop
cmpsl
push
int
cmp
jmp
add
mov
js
repz
enter
das
sub
adc
je
xchg
mov
pop
mov
jecxz
jo
iret
fcomp
pop
dec
mov
dec
adc
pop
out
mov
sub
sbb
pop
out
decb
or
sbb
pop
jmp
cmp
scas
sub
or
dec
sbb
jmp
mov
mov
mulb
imul
repnz
inc
or
push
sub
jnp
fldenv
test
insb
mov
repz
cli
sub
or
mov
pop
sub
aaa
jecxz
in
push
jb
mov
ss
xchg
add
repnz
psubq
cmc
int3
push
bound
cwtl
xorl
test
pop
arpl
xchg
adc
mov
pop
jp
xor
sub
lahf
ja
popa
lret
outsb
sbb
sub
movl
dec
roll
call
sbb
or
mov
out
fs
ljmp
mov
jb
jecxz
es
mov
es
cs
dec
test
push
jnp
enter
cmp
push
add
jmp
pop
lahf
aas
sbb
sbb
adc
dec
cmpsl
repz
imul
mov
movsb
fistpl
or
inc
dec
dec
cmp
cmpsl
push
and
lahf
daa
jle
hlt
ljmp
sahf
inc
repz
mov
add
mov
dec
mov
mov
fistl
jl
xor
jns
xchg
or
fdivl
jecxz
sbb
adc
mov
mov
pop
push
dec
cs
jp
pop
inc
inc
popf
rorb
mov
sub
movsl
jecxz
pop
out
pop
jns
loopne
sbb
cmpsb
out
ss
aaa
xchg
mov
add
inc
push
unpckhps
inc
xor
pop
cmpsb
imul
lods
pop
nop
cmpsb
addb
hlt
ret
daa
test
pop
sti
push
ret
sub
jb
cmp
dec
js
mov
aam
xchg
movsb
test
adc
std
cltd
and
xor
push
into
xchg
repnz
push
mov
xchg
adc
adc
mov
je
inc
xchg
inc
push
in
mov
push
xchg
popf
dec
in
mov
gs
or
sahf
int
or
mov
fidivrs
stos
adc
xchg
xlat
insl
inc
jmp
dec
sbb
push
inc
mov
lock
inc
jno
stos
idivl
sbb
jmp
xor
leave
push
cmpsl
lcall
pop
fidivs
push
adc
and
out
dec
cmp
fs
mov
jmp
mov
mov
aam
shlb
popf
iret
inc
push
cld
test
push
mov
inc
in
lds
call
out
mov
add
xor
mov
jl
adc
lods
cmpsl
cmpsl
mov
dec
inc
iret
jne
repnz
in
addr16
jns
sbb
notb
mov
popa
push
adc
jp
call
out
lea
adc
and
imul
fistpl
adcb
mov
movsb
nop
inc
add
js
dec
pop
cmp
cltd
lods
cmpsl
mov
adc
in
shrl
xlat
lret
lods
mov
and
enter
push
and
cs
lret
rorl
pushf
or
push
inc
ret
scas
cmpb
push
rcr
add
jp
fdivr
xor
mov
mov
insl
lea
adcb
ret
outsb
cmp
jg
out
loope
movsl
inc
xchg
hlt
dec
and
mov
mov
and
cmp
js
ja
mov
fstl
inc
xlat
ret
fnstcw
sbb
push
sbb
xchg
lds
fildl
dec
loope
std
sbb
notb
fs
out
pop
nop
testl
ret
or
mov
xchg
push
int
cltd
inc
sbb
popf
xchg
cmpsl
and
pusha
jp
fucomi
in
mov
sbb
mov
lods
ret
jle
lods
add
mov
sbb
mov
xor
in
pop
insb
mov
int3
mov
jg
orl
mov
hlt
enter
cmp
rclb
xchg
pop
sub
xor
xchg
shlb
jmp
je
jno
push
or
dec
shrl
loope
fidivrs
insb
andl
out
push
and
fidivrl
jb,pn
fidivs
jle
push
in
arpl
adc
mov
mov
cltd
or
outsl
adc
cmpsl
rcll
fmuls
mov
mov
call
xor
xor
test
test
out
xor
das
aas
push
and
js
into
fidivs
or
dec
mov
jmp
xlat
repz
lea
gs
mov
pop
sbb
cmp
shrl
fcmove
ljmp
mov
inc
xchg
xchg
mov
add
in
cmp
adc
leave
mov
out
pop
movsb
testb
int3
mov
jae
mov
xchg
inc
adc
pop
enter
shrl
xchg
xor
mov
add
lds
add
dec
lret
sahf
scas
xlat
in
mov
test
mov
mov
cwtl
ss
ficoms
inc
out
inc
lcall
fdivl
xchg
out
out
fdivrs
jecxz
sub
cmp
xor
sbb
push
mov
mov
jl
js
rcll
int3
cmp
mov
roll
test
push
pop
sti
inc
clc
dec
add
lods
in
arpl
imul
mov
or
push
frstor
imul
sbb
lcall
xlat
loope
movsl
shrb
dec
adc
xchg
jno
sbb
push
loope
lea
hlt
push
or
and
inc
cmpsl
xchg
lret
jg
cmp
mov
in
dec
push
pop
and
ficoml
addr16
lret
mov
mov
push
imull
mov
cwtl
out
dec
imul
lret
rcr
adc
les
lahf
mov
or
andb
rorb
js
adc
mov
fcoml
cmp
xor
push
xchg
lcall
xlat
and
in
ja
ljmp
xor
lret
cli
fs
notb
mov
pop
test
and
addr16
mov
hlt
shll
push
pop
pop
adc
aam
stc
repnz
jns
int
push
popf
cltd
aaa
sub
lods
xchg
dec
inc
xchg
mov
cmp
js
jb
mov
mov
ret
xchg
sbb
add
mov
pop
mov
icebp
mov
out
test
jne
inc
adc
cli
cltd
and
imul
dec
xchg
xor
add
mov
inc
lock
pop
into
push
jl
test
ret
pop
les
roll
jl
xchg
push
mov
lds
iret
mov
add
inc
ss
dec
jo
ja
cwtl
and
jmp
sbb
mov
xor
cmp
add
ja
cwtl
mov
popa
movsl
inc
dec
cmp
mov
jmp
adc
outsl
mov
ss
call
insb
push
arpl
xor
jne
mov
mov
xor
into
jnp
mov
mov
dec
mov
mov
cmpsl
add
sub
fdivrl
jge
imul
out
inc
or
sub
rep
xchg
dec
mov
add
fmuls
in
ss
les
add
sbb
dec
scas
insl
rcr
insb
movsb
dec
mov
je
adc
adc
or
inc
add
inc
cmp
push
in
pop
lret
or
out
aam
lret
out
leave
jbe
sub
dec
jecxz
push
jl
cli
aad
aam
int
lock
mov
inc
imul
addr16
loope
mov
or
dec
loope
jmp
xor
push
pop
in
pavgw
inc
sub
cmp
int
scas
cltd
jl
clc
test
cld
jne
scas
fldt
add
cmp
and
mov
fildl
push
cmp
inc
mov
cmp
sbb
sahf
cmp
jns
push
ja
mov
adc
push
in
enter
jbe
mov
sub
test
xor
adc
stos
test
add
mov
pop
cltd
xchg
int3
sbb
add
dec
rcl
push
xor
xchg
insl
mov
mov
sti
gs
fiaddl
xchg
sbbb
push
std
cmp
jno
add
icebp
ljmp
loopne
scas
sub
inc
jl
push
sbbb
sub
in
mov
sahf
dec
outsb
mov
mov
sti
jae
or
inc
subb
rcrl
mov
sahf
mov
inc
cmp
push
xchg
pop
std
add
push
aad
clc
sti
xchg
lcall
sub
decb
pop
out
push
inc
add
cwtl
jnp
adc
pop
aaa
inc
cld
pop
push
mov
mov
jns
sub
pop
stc
mov
push
and
sahf
sub
pop
mov
leave
inc
inc
jle
xor
mov
xor
inc
pop
sub
dec
mov
repz
jo
and
push
dec
sbb
sbb
mov
pop
mov
push
dec
mov
mov
cmp
sub
inc
fs
push
inc
mov
mov
push
cmp
imul
loope
out
or
push
jle
sbb
cltd
loop
pop
cmp
add
cmpsb
dec
jne
cmpsb
aas
std
jne
imull
rcrl
lcall
fidivs
in
test
cld
bound
xor
nop
sub
lea
sbb
xorl
je
int3
jne
lds
adc
std
mov
inc
sbb
lret
fchs
and
xorb
ffree
push
stc
std
dec
int
stos
ret
scas
and
mov
cld
std
mov
sub
mov
sub
or
jp
and
jecxz
dec
call
push
mov
xorl
jno
cmc
jo
dec
orl
aas
dec
xchg
fistl
sbb
leave
xchg
or
mov
aam
cmp
negl
addr16
and
fnstsw
push
int3
inc
adc
pop
cli
movsb
cmp
filds
pop
cld
fnstenv
aas
inc
aaa
push
dec
scas
in
mov
imulb
test
dec
pusha
cltd
cwtl
adc
int
shll
test
jnp
push
stc
icebp
loope
mov
push
out
sbb
subl
out
cmpsl
push
push
inc
pop
lds
mov
jmp
inc
and
stos
ret
int3
xchg
arpl
sbb
cmp
cmpsb
cltd
xor
sub
out
pop
mov
and
jne
jbe
dec
mov
loopne
jg
loopne
mov
push
ljmp
incb
dec
jg
cmpsb
cmp
and
mov
fsubp
xchg
pop
mov
outsl
and
cmpsb
js
inc
sbb
adc
xchg
mov
fstl
and
sbb
dec
in
sub
jns
or
push
pop
outsl
push
add
daa
xorl
out
pop
dec
or
add
sub
lods
xor
sbb
mov
decb
inc
and
mov
xchg
jno
xchg
mov
sub
pop
push
icebp
insl
pushf
sbb
dec
icebp
rclb
pop
xor
sbb
out
out
pop
jmp
pop
pop
leave
aad
je
jb
popf
and
and
cmp
jl
jmp
mov
jnp
mov
in
adc
mov
gs
mov
inc
xchg
xchg
mov
stc
mov
mov
sbb
neg
push
dec
movsb
aas
fstpl
out
sub
jb
jno
shl
push
sbb
cmp
shl
lods
mov
adc
push
xchg
lret
cmc
movsb
fidivrl
iret
mov
ss
and
stc
pusha
and
imul
sub
sub
push
xchg
pop
inc
adc
dec
xchg
aaa
push
push
inc
push
mov
enter
ja
ret
jmp
imul
dec
jp
fisttps
popf
jecxz
shrb
hlt
add
aaa
aas
out
cmp
aad
pop
cwtl
mulps
cmc
jecxz
mov
imull
fmul
aaa
or
pop
and
mov
sbb
sbbl
sbb
sti
sbb
jne
add
and
test
scas
push
call
sub
daa
pusha
pop
sub
fldcw
inc
shll
int3
mov
rorb
inc
push
jp
mov
dec
mov
iret
pop
les
jae
testb
popa
adc
mov
movsl
mov
rcrl
inc
movsb
or
cltd
push
mov
enter
or
or
sbb
mov
push
scas
mov
mov
pmuludq
mov
xchg
cmp
ss
test
rclb
push
cmpsl
cld
inc
xor
outsb
jg
jmp
cmp
or
or
sub
xor
jle
js
sti
les
lods
jmp
test
jns
cmp
dec
loope
sarb
inc
inc
push
subl
call
shl
inc
scas
lock
aas
cli
or
ror
jg
push
xor
inc
dec
ds
outsb
cvtpi2ps
cs
cmp
cmp
sbb
cli
scas
loop
das
int
dec
push
sub
fldenv
pop
adc
or
jns
xchg
xor
mov
adc
enter
mull
stos
push
mov
sub
push
mov
pop
sahf
inc
adc
fwait
jecxz
pop
bound
xor
jb
pop
inc
mov
pop
das
lds
jp
cmpsl
mov
outsb
mov
addb
sbb
push
cli
jno
xor
add
addl
dec
jbe
popa
and
jnp
inc
das
mov
test
or
mov
cmp
mov
inc
mov
sub
arpl
push
int
out
sbb
mov
sub
js
mov
mov
enter
lret
sahf
lcall
xor
sarb
scas
jl
sbb
adc
push
and
mov
push
or
cmpsl
sbb
call
dec
outsl
mov
fbstp
in
xchg
xchg
lods
jnp
sub
add
hlt
dec
add
add
add
add
cmp
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
and
add
add
add
addb
ljmp
ja
popa
clc
clc
incl
push
scas
add
test
add
add
add
popa
add
add
add
add
add
add
xchg
push
add
push
add
add
add
and
imul
outsl
push
jb
add
dec
pop
add
push
mov
add
fcmovu
sub
sahf
xor
pop
push
lea
add
add
in
push
cld
addb
cmp
push
lea
add
pushl
in
add
push
cld
inc
adc
push
insb
leave
lea
or
in
daa
std
add
adc
add
enter
fcoml
in
add
add
add
popl
incl
fildl
insb
aad
incb
add
add
add
and
mov
and
adcl
inc
shlb
clc
decl
add
stc
pushl
pushl
add
mov
hlt
add
adc
push
pop
add
add
add
in
js
add
daa
add
and
add
xor
dec
add
add
add
imul
insb
outsb
add
push
add
je
insb
gs
jb
outsb
jae
add
dec
add
mov
dec
gs
ja
add
push
jne
popa
cmp
pop
outsl
imul
push
insb
dec
insb
push
popa
push
add
add
and
add
xchg
add
aam
add
add
movsb
cmpsb
dec
ret
inc
iret
int3
adc
imul
push
imul
outsb
jbe
mov
jmp
xchg
imul
les
inc
shlb
xchg
mov
out
ljmp
imul
lret
jmp
lods
pop
andb
icebp
loopne
jb
adc
cmp
pop
adc
jo
or
in
jle
aad
mov
cmp
sbb
jle
popf
ret
sbb
adc
sub
fstpl
xor
lea
jb
enter
stos
or
or
pop
ss
in
xor
dec
pusha
and
mov
jnp
and
and
test
pop
xchg
ss
pop
jno
dec
stos
ja
cmp
xor
push
cmp
fisttpl
lods
inc
subb
or
sub
inc
enter
mov
jns
dec
outsb
mov
add
out
adc
jmp
xchg
mov
aas
mov
lods
xorl
dec
add
pushf
add
jns
adc
je
xchg
inc
cmp
ljmp
jo
mov
or
jo
fs
stos
pop
gs
pop
jne
xor
push
iret
cmp
insb
fimull
mov
mov
test
xor
loop
lods
jae
dec
push
and
ret
stos
movsb
icebp
sub
push
sbb
xchg
pop
scas
jb
out
jmp
ret
in
pop
and
adc
inc
push
adc
sti
mov
int
icebp
add
scas
sbb
sbb
andl
sahf
sbb
ds
xchg
mov
fcoml
aad
cwtl
aas
mov
add
daa
push
in
ret
mov
sub
fsubrl
test
pop
xor
sub
mov
pop
jmp
aas
into
repnz
mov
mov
pop
pop
das
imul
outsl
mov
nop
pop
xchg
mov
scas
xlat
xchg
sbb
dec
sub
ljmp
cmp
inc
sar
inc
mov
in
leave
repz
dec
in
push
test
leave
and
daa
mov
repnz
pop
imul
nop
lock
mov
in
xor
xchg
sub
mov
mov
cmp
pop
sbb
lret
in
ds
dec
movsb
scas
xor
pop
arpl
dec
cs
and
push
fsubp
inc
push
dec
xchg
mov
cwtl
movsb
cmp
inc
in
add
mov
jns
xlat
push
cltd
or
fwait
pop
call
and
in
andl
lea
popf
jb
loope
movsb
and
lahf
or
insl
hlt
rclb
and
loope
push
pop
and
popl
or
call
js
xchg
repz
add
ret
xchg
push
inc
cltd
pop
mov
divl
clc
inc
lods
cmp
ficoml
ret
mov
addl
fbld
push
adc
jl
cmp
das
lock
and
out
jle
inc
insl
mov
xchg
or
jl
std
scas
inc
lret
imul
test
sarb
jb
in
add
sub
fnstenv
adc
push
in
mov
dec
aaa
sahf
out
dec
pop
imul
dec
jo
das
stc
fwait
ret
pushf
mov
mov
sub
xor
aaa
pop
pop
movsb
and
outsl
idivb
jp
dec
clc
cmp
stos
mov
in
and
and
jge
imul
pop
push
aam
int
test
shrl
mov
ja
mov
sub
and
jb
int
pop
sahf
cmp
pop
shl
cmp
stc
out
xor
add
push
adc
mov
test
sub
or
nop
push
xchg
and
and
cmpsb
notl
fdivl
repnz
push
lret
repz
incl
pop
in
sahf
andb
daa
shrb
mov
loop
leave
je
sbb
bound
test
jbe
hlt
sub
dec
and
pop
dec
push
sub
testb
movsl
imull
sbb
inc
insl
loop
push
movsb
xchg
or
fwait
or
pop
cmpsb
pop
call
xor
pusha
push
shlb
push
shrl
je
sbb
dec
addr16
sti
iret
push
stos
add
jle
in
mov
mov
xlat
xchg
xchg
adc
xor
sti
mov
inc
pop
sub
pop
test
sbb
xchg
bound
xor
mov
jmp
jns
push
sti
xor
push
jmp
imul
mov
sbb
push
cmpsb
movsb
fiadds
enter
adcb
mov
jle
shlb
ret
inc
fsubs
push
jecxz
push
jl
shrb
cltd
lahf
cmp
stc
mov
lahf
jmp
xchg
test
jecxz
dec
pop
jmp
mov
jbe
or
inc
ret
mov
pop
addr16
adc
lods
mov
les
inc
pop
sbb
sbb
xchg
aaa
sbb
sub
popa
hlt
xor
jbe
mov
xor
loopne
jb
jns
fisttpl
dec
or
mov
sub
lock
or
xchg
xor
inc
aaa
sbb
lds
jge
push
xor
in
insl
dec
xchg
mov
xchg
inc
insb
sub
nop
stc
mov
in
add
xor
mov
mov
sahf
cmp
sbb
push
arpl
mov
addr16
mov
jbe
sahf
outsb
lock
push
out
add
das
pop
mov
mov
cmp
lcall
pop
push
aaa
mov
arpl
cli
std
lret
sbb
or
xchg
mov
movsl
stc
divl
rclb
sbb
mov
add
xor
mov
daa
dec
jo
jo
xchg
push
negb
add
outsb
shrb
push
pop
fdivrl
loop
popa
jecxz
lcall
aad
insb
mov
mov
aaa
imul
xchg
movsl
enter
pusha
mov
insl
leave
lock
sti
imul
xor
sub
scas
lret
adc
insl
imul
in
scas
pop
dec
add
test
iret
out
pop
mov
fbstp
jne
jo
jb
add
dec
mov
stos
mov
xor
or
call
repnz
lea
rorb
push
iret
xlat
jl
ret
arpl
out
inc
or
arpl
cmp
or
in
pushf
push
mov
stos
add
xchg
out
fists
in
push
mov
ss
push
cmpsl
scas
rcl
fs
je
mov
daa
imul
dec
sub
xor
out
cmp
jnp
lods
loop
jg
mov
sbb
push
xchg
jp
out
data16
aas
cmc
adc
out
in
es
pushf
xor
cli
fildl
cmp
mov
mov
lret
and
push
gs
out
cmpsb
outsl
lods
pushf
inc
clc
lock
add
pushf
push
sub
imulb
rorl
mov
sbb
rcrb
and
lods
jg
aaa
movups
xchg
or
sub
dec
enter
outsl
rolb
fcmovnu
mov
jp
xor
fldl
jb
mov
ja
and
shll
sbb
testl
jo
sbb
in
outsl
movsl
inc
dec
imul
jp
mov
mov
ret
loope
xchg
push
cmp
call
add
popf
sar
cwtl
pop
jle
out
nop
mov
jge
xor
fwait
push
mov
xor
mov
incb
mov
mov
mov
orl
movsl
and
lahf
cmp
fwait
jno
cmp
jbe
dec
pop
sarb
rcr
mov
movsb
ja
sbb
shrl
mov
xchg
aaa
lea
sub
fcompl
js
jp
frstor
cli
ret
jle
dec
outsb
cmpsb
imul
pop
xor
fidivrs
repz
fsts
iret
sarb
int
sbb
in
lods
pop
subb
decl
outsl
adc
out
add
sbb
bound
mov
fidivrs
cwtl
xchg
inc
into
rclb
out
dec
cwtl
cltd
les
mov
push
push
das
push
add
jg
cmp
mov
daa
xor
mov
mov
xor
adc
pop
std
sub
jnp
push
repz
out
loopne
movsb
push
scas
cmp
xlat
xor
cmpb
sub
sbb
stos
mov
enter
inc
loope
jg
sbbl
ss
xor
imul
mov
xchg
lcall
into
xchg
and
dec
inc
testb
jg
jl
or
sarb
loope
add
loopne
loopne
sbb
xor
xchg
jo
daa
imul
ja
jmp
jmp
addr16
repnz
cltd
push
jnp
cmp
leave
add
ja
fmul
hlt
xor
rorb
adc
pop
imul
push
xorl
or
les
and
xchg
leave
ss
jnp
jecxz
xchg
sub
stc
adc
jmp
out
add
fisttps
sbb
jecxz
xor
outsl
jl
dec
pop
cmp
into
mov
jmp
push
std
sub
call
mov
shl
inc
push
and
daa
sti
cli
mov
sti
and
sahf
aad
out
dec
jno
dec
cmp
gs
cmp
jp
inc
test
imul
dec
jb
imul
xor
mov
push
icebp
xor
or
jle
arpl
inc
fwait
add
std
aas
mov
and
js
jecxz
jge
orl
inc
es
lods
and
rcrb
in
in
jmp
adc
enter
les
xchg
divb
jle
jle
inc
popf
outsb
xorl
dec
arpl
jle
mov
repnz
sub
out
xchg
jo
scas
daa
pop
dec
lods
or
subl
gs
xchg
rcrb
or
sbb
iret
cmpl
nop
pop
sbb
inc
adc
jns
inc
ljmp
cmpsl
test
add
add
stc
sub
out
jnp
out
and
xor
dec
pop
nop
into
mov
fnsave
inc
mov
jb
pop
xor
sahf
sbb
mov
out
pop
mov
mov
loopne
fdivrl
and
imul
daa
shl
jg
or
dec
xor
inc
jecxz
sbb
lret
in
test
in
xorb
dec
jecxz
adc
cmp
sbb
pop
fs
inc
inc
das
jge
mov
cmp
xchg
les
cmp
dec
rcr
mov
test
or
pop
jbe
and
lret
test
rcll
loope,pn
mov
loope
pop
sti
dec
les
iret
and
xchg
xchg
cwtl
imul
xchg
push
outsl
daa
cltd
mov
cmp
adc
popf
and
xchg
mov
das
scas
push
sub
push
add
jae
or
mov
add
or
js
dec
test
mov
lret
int
fimuls
out
mov
add
pop
sbb
aam
jo
mov
jno
cmp
int3
pop
xor
fists
push
je
push
pusha
cmp
xchg
push
adcl
inc
jle
add
jns
imul
or
fisttps
push
outsb
pop
push
push
push
inc
das
jo
leave
push
rorb
pop
stos
loop
arpl
js
mov
mov
fcmovnu
mov
dec
mov
gs
out
cmc
inc
jecxz
sbb
mov
lods
subb
shl
stos
call
add
jnp
xchg
jg
mov
lock
sub
lahf
in
mov
mov
push
sub
pop
inc
lcall
pusha
dec
jae
pop
int
mov
pop
xchg
push
add
enter
adc
aad
inc
mov
lea
and
sbb
enter
ret
lret
inc
lods
inc
sbb
jns
inc
dec
mov
add
mov
loope
xchg
ss
push
cs
and
mov
loope
je
adc
imul
adcb
and
xchg
jbe
incl
cmp
leave
push
xchg
mov
and
inc
jge
sub
ss
adc
bound
add
inc
div
push
mov
es
cld
jecxz
dec
push
iret
fdivs
push
inc
pop
cld
mov
sets
cmp
jl
in
test
aaa
je
push
loope
sub
inc
fyl2xp1
adc
pop
arpl
scas
push
insb
lcall
mov
mov
jp
push
xor
push
mov
ljmp
out
inc
push
imul
int3
neg
popa
xlat
aam
hlt
fs
loopne
mov
jmp
mov
pushf
dec
aas
out
and
hlt
test
mov
push
lock
jecxz
fwait
xchg
and
mov
dec
push
pop
test
insl
cmc
sub
inc
or
xchg
push
mov
sbb
inc
lret
outsb
insb
mov
in
aaa
sub
xchg
leave
lcall
and
dec
adc
lret
bound
sbb
fs
cs
addr16
sub
bnd
and
ds
aam
mov
sbb
pop
cli
ss
jnp
pop
pop
scas
jge
dec
fildll
lea
sbb
gs
mov
sub
xchg
lahf
mov
push
ljmp
push
std
js
scas
sub
or
sbb
fwait
cwtl
cld
aas
push
and
push
add
fs
sub
mov
pop
sti
frndint
cmp
loopne
scas
out
pop
jb
fs
mov
xchg
pandn
lock
jno
out
mov
adc
fidivrs
scas
in
xchg
stc
scas
xchg
mov
fs
cmp
xchg
mov
movl
ds
std
ja
add
scas
jge
lds
fsubs
rclb
xchg
aas
mov
cli
lods
rorb
mov
xchg
arpl
pop
ljmp
ss
fimuls
ror
xchg
addr16
insb
jmp
mov
adc
inc
sbb
repnz
mov
and
push
arpl
loop
jp
enter
pop
mov
jg
mov
fnstenv
movsb
pop
jecxz
orl
xor
dec
int
mov
inc
lock
pop
lods
cmpsb
push
mov
jnp
sti
cmp
rep
or
adc
out
mov
jl
aad
sbb
pop
outsb
vpavgb
jle
fcmovu
test
adc
jecxz
gs
xchg
lret
icebp
stos
out
lock
xor
loopne
inc
mov
add
ljmp
mov
adc
imull
or
mov
jmp
mov
sub
add
setp
mov
test
cwtl
andb
or
sbb
push
mov
test
sarl
leave
movsb
in
or
sarl
or
cmp
mov
test
or
andl
cwtl
jge
out
add
adc
mov
aam
jbe
fldl
push
popl
fmul
jne
pop
lret
mov
ja
fwait
data16
push
sub
imul
clc
insl
rolb
mov
out
pop
push
test
push
cmp
xchg
icebp
outsb
in
mov
into
or
xor
les
mov
popf
daa
movsl
mov
pop
jb
sub
mov
or
jge
ljmp
adc
stos
loop
dec
cmpsl
jp
vpermpd
push
and
mov
inc
outsb
addr16
mov
loop
adc
dec
shl
pop
mov
out
aam
jecxz
stc
mov
lret
ret
dec
mov
movsl
mov
xchg
mov
rclb
je
scas
xor
jge
xchg
call
fs
dec
lds
test
ljmp
mov
pop
ficompl
mov
jmp
popf
ret
jmp
sbb
xchg
jg
ljmp
addb
in
mov
lret
push
lret
gs
mul
and
cmp
call
mov
sti
jp
js
and
ret
pusha
xchg
or
mov
xlat
iret
ret
leave
das
fisttpl
std
in
lret
add
inc
das
int
cmp
jmp
lds
jle
or
push
imul
and
jecxz
mov
jmp
xor
rorb
push
mov
jns
mov
jl
pusha
mov
push
add
adc
cltd
pop
adc
mov
jecxz
filds
pusha
loope
cmp
cli
xchg
push
movsl
xor
fistps
push
and
xchg
sbb
pop
lcall
xor
pusha
pop
subb
or
jmp
sbb
data16
mov
adc
push
add
gs
stc
daa
mov
xchg
lods
inc
adc
test
clts
scas
aad
sbb
xchg
scas
lods
sbb
enter
scas
sub
pop
cmpsb
leave
inc
mov
or
fmul
fbstp
rcrl
or
jl
add
and
enter
or
adcb
mov
jb
mov
aaa
test
cs
fwait
adc
xor
leave
push
pop
movsb
js
sub
leave
sbb
adc
jne
sub
inc
xchg
aaa
js
int3
popf
test
mov
loopne
div
frstor
inc
mov
js
jle
and
rcrb
inc
dec
pop
pop
and
dec
push
fisubs
subb
out
out
sarl
add
mov
scas
test
jg
lds
mov
or
xchg
stc
bound
out
or
jb
jbe
sbb
inc
adc
add
lret
call
jae
imul
pop
and
pop
addr16
out
data16
fsts
decb
lcall
stc
and
xor
mov
sbbb
es
fcoml
inc
jne
stos
int3
push
cmp
jl
xor
jb
inc
mov
shrb
outsl
and
push
sub
imul
imul
add
mov
sub
jne
daa
jae
dec
push
sub
cmp
notb
fcoms
fs
mov
cmp
cmp
mov
enter
mov
fmuls
fstpt
mov
mov
insb
inc
adcb
fiadds
cmp
push
cmp
andb
repz
mov
cwtl
cmp
aam
ss
xor
icebp
in
icebp
mov
and
add
sbb
mov
gs
rcrb
shlb
pop
dec
sbb
xor
push
push
loopne
ret
shlb
repnz
add
shr
jge
repnz
add
in
lahf
pop
mov
cmpsl
int3
repz
hlt
dec
lret
pop
mov
add
add
add
add
add
add
movsb
add
jno
add
add
andb
add
add
add
addb
mov
add
add
add
add
pop
add
loope
add
adc
add
addb
add
stos
stos
add
ja
mov
decl
mov
add
and
je
insl
and
les
add
xor
add
add
add
add
add
mov
add
add
xor
push
add
add
or
sub
cs
add
add
lcall
sub
clc
xor
add
and
ja,pn
jae
inc
inc
and
push
ja
mov
inc
stc
add
add
xor
jnp
fcmovnu
inc
or
pushl
and
push
ret
cmp
push
adc
test
test
std
cld
jmp
test
lea
push
xor
in
jno
push
lock
add
adc
cmp
push
cld
repz
movl
push
test
adc
xor
rolb
aad
push
loopne
incl
lea
lea
lods
std
std
sar
xor
cld
shlb
push
pop
loopne
lock
adc
test
add
pushl
rorb
jo
jmp
add
add
push
adc
adc
and
je
add
add
add
mov
pusha
cmp
out
mov
add
inc
aam
insb
outsb
movsl
jne
adc
inc
popa
inc
inc
jo
movsl
popa
dec
imul
imul
lret
insb
imul
xchg
jne
push
insb
xor
gs
jne
inc
jae
jae
loopne
insb
inc
insb
inc
dec
add
add
lock
add
add
add
push
add
nop
add
add
add
add
fisubrs
and
inc
cmp
mov
mov
sub
push
inc
inc
push
jno
loop
or
scas
dec
dec
cmpsl
or
cmpsb
cli
hlt
cmp
push
lods
test
cmp
inc
add
cmpsl
xchg
mov
leave
js
ret
jl
pop
enter
xchg
nop
pusha
lods
or
je
sahf
jno
mov
jnp
xlat
lds
lcall
cmpsl
popf
lods
pushf
stos
push
icebp
inc
pop
insl
push
imul
jecxz
pop
mov
fdivrs
add
cmp
pop
dec
psubsw
push
adc
push
shlb
int3
jp
adcb
jmp
xchg
fidivs
stos
or
push
inc
dec
outsb
push
xor
test
js
sarb
inc
xor
jo
mulb
aaa
lahf
jle
stos
test
out
out
push
loopne
andl
mov
adc
stos
dec
lods
pop
jle
stc
stos
out
add
inc
jg
add
mov
push
sbb
ja
mov
nop
pslld
in
test
mov
cwtl
clc
les
mov
arpl
cmp
sarb
cld
nop
clc
in
jp
ss
sarb
add
push
inc
pushf
adc
and
scas
sub
int3
cmp
xorb
or
mov
js
pop
loop
inc
ljmp
cmp
pop
mov
sbb
mov
adc
adc
fisttpl
aam
cmp
es
fs
ficomps
inc
mov
mov
cli
push
sub
bound
movsl
jge
sbb
mov
arpl
sub
inc
push
xchg
insb
jl
lods
test
stc
stc
fs
ljmp
je
sub
out
cld
mov
adc
jbe
push
iret
testl
cmp
mov
push
push
xor
stos
jmp
and
jbe
dec
dec
fisubs
or
or
jp
pop
push
hlt
sub
dec
pop
ds
xor
cld
sub
fistl
rcll
dec
sbb
adc
mov
inc
mov
iret
add
test
or
sbb
cmp
dec
mov
jbe
jp
or
sbb
jge
push
lcall
push
in
sbb
dec
add
loop
fldenv
shr
mov
ret
cmp
mov
push
ficompl
add
dec
push
push
sbb
mov
roll
mov
xchg
jmp
cli
hlt
inc
xor
int3
fistpll
mov
mov
fdivs
nop
xor
fnsetpm(287
ljmp
add
retw
jno
mov
xchg
or
mov
out
bound
dec
pop
jne
test
orl
xor
js
div
jae
lret
sbb
add
fistpll
mov
xchg
xchg
repz
int
mov
cmp
or
and
inc
mov
out
rep
fbld
in
pop
adc
fs
pushf
and
in
sbb
push
xor
inc
jno
dec
call
sarl
sub
or
test
jne
adc
outsb
push
out
je
mov
scas
push
outsb
popa
pop
shlb
inc
mov
pusha
inc
dec
cld
mov
leave
and
loop
cs
outsl
shrb
sar
aas
mov
ret
mov
dec
sub
sahf
jle
mov
mov
jae
nop
out
shll
jne
stc
test
adcl
in
xchg
repnz
decb
fstpt
lock
mov
push
mov
or
fwait
repz
sub
bound
mov
mov
pop
jno
fld
jbe
sub
adc
je
xchg
out
lods
lock
sbb
fwait
xchg
leave
mov
cmc
cmp
add
shlb
les
pop
imul
push
fdivl
mov
dec
xorb
add
inc
sahf
pop
lods
into
mov
add
out
mov
push
adc
xchg
pop
insb
rcr
jns
aas
cmc
inc
sub
or
nop
daa
fisubrl
mov
out
jae
out
mov
and
cli
fmul
xchg
mov
xor
cli
lea
arpl
lret
lahf
inc
daa
push
or
cwtl
adc
mov
pop
lods
fdivr
cmpb
jg
lahf
push
call
out
inc
popa
pop
fucomp
mov
lret
fisttpll
jo
push
subb
inc
add
mov
or
bound
pop
pop
jns
addr16
fstps
test
insb
xchg
imul
mov
gs
andl
cwtl
orl
xor
lods
mov
into
cmpsl
add
loope
ljmp
in
lds
add
jb
addl
mov
fildl
jp
pop
repnz
bnd
lea
push
mov
bound
push
les
mov
ljmp
xor
ror
mov
imul
cmc
xor
nop
adc
or
movsb
enter
jno
adc
incl
pushf
dec
cmp
fsubs
sub
push
sahf
test
mov
in
aas
mov
test
dec
outsl
xchg
fisttpl
jne
popf
xchg
fdivs
xorb
outsb
mov
xchg
sbb
adc
nop
push
nop
fldlg2
dec
pop
mov
and
cmpsl
add
push
mov
or
xchg
ds
vmaxss
addr16
in
mov
cmp
imul
cmp
cmp
lods
inc
lcall
outsl
mov
test
xchg
xchg
and
in
cbtw
jne
xchg
fistl
pop
inc
loopne
xchg
bound
enter
ret
fistpll
push
push
jg
cmp
lret
fisubrl
and
scas
les
mov
lea
dec
scas
xor
push
mov
add
test
frstor
push
fwait
xchg
pop
ja
pop
mov
dec
not
mov
jb
ljmp
xor
xorb
je
jb
fs
movsl
xor
and
cmp
pop
fld
in
dec
mov
sahf
sbb
rorb
ss
imul
dec
cmp
scas
movsb
int3
ficompl
call
push
leave
cld
testb
popf
push
mov
stos
sbb
jecxz
or
jmp
or
and
inc
movsl
inc
subl
adc
lds
cmpsl
das
test
pop
mov
enter
ret
ret
mov
mov
ljmp
aas
pop
addb
cmp
lock
mov
dec
mov
xor
jl
mov
repz
ja
lret
mov
push
inc
cmp
int
ds
rcrl
ret
stos
shl
std
jl
test
mov
leave
int3
imul
je
fbld
arpl
xor
and
sub
jle
lods
push
xor
sbb
mov
or
mov
push
lock
push
addl
mov
add
and
push
jo
xor
imul
std
pop
outsb
xchg
popf
cmp
pop
xchg
add
lods
pop
mov
inc
or
jnp
or
jle
lret
mov
cwtl
pop
mov
gs
inc
fbld
inc
mov
imul
lods
pop
ds
cmp
jmp
popf
xor
mov
ret
call
cmp
cwtl
fidivrl
cmpsb
nop
fisubrs
sub
movsl
insl
js
es
cmp
pop
cmp
jno
or
mov
jo
xchg
decb
push
ret
leave
loopne
push
sub
out
jae
sahf
push
inc
inc
sbb
insl
ret
adc
add
rclb
pop
sub
stc
int
add
testb
mov
ljmp
jns
sahf
pop
in
enter
jg
addr16
rolb
and
sbb
jno
and
aas
repz
push
in
and
mov
add
push
sarl
xchg
pop
fwait
xlat
dec
push
mov
std
inc
daa
xchg
rcrl
sbb
mov
push
fdivrl
std
int
push
adc
loope
sbb
lea
popf
push
scas
mov
dec
xor
dec
scas
mov
jb
outsb
lret
and
sbb
and
stc
xor
repnz
sbb
je
mov
mov
loope
idivb
and
outsl
lahf
out
cmp
fcmovu
imul
scas
scas
std
mov
divb
inc
xchg
lret
cltd
loopne
enter
jg
mov
addr16
das
and
sbb
push
scas
adc
dec
add
cltd
ret
jb
inc
jne
fwait
out
bound
cmc
sbb
add
push
dec
push
repnz
pop
jb
mov
fldt
jno
stos
mov
stos
xchg
push
add
cwtl
xor
push
or
add
outsl
jb
dec
popf
aam
repz
push
pop
mov
fidivl
test
lods
sbb
jge
arpl
dec
ficomps
dec
into
dec
cmp
mov
mov
cmp
lcall
dec
mov
jb
sbb
insb
jl
push
cmp
push
push
and
enter
imul
popf
mov
test
ret
dec
mov
cmp
pop
ret
mov
sbb
pop
bound
rorb
mov
mov
mov
pushl
inc
fisttpll
and
jae
xchg
pop
idivb
or
and
mov
mov
or
mov
enter
push
or
loope
cmpsl
cmp
mov
stc
pushf
gs
jmp
sbb
pop
jmp
movsb
int
pushl
int
mov
xor
sub
push
cmp
int
pop
push
int3
push
pushf
inc
jno
mov
fnstcw
mov
icebp
bnd
sub
imul
movsb
dec
movsb
xor
fwait
dec
scas
lret
ficompl
mov
rcl
shlb
xchg
mov
lods
jo
repnz
aam
adc
adc
xchg
or
mov
push
sahf
stos
push
lcall
test
cwtl
fwait
shlb
ja
jo
push
jecxz
and
int
push
mov
bound
flds
or
pop
adc
adc
mov
clc
imul
addr16
fs
pop
push
cltd
xor
add
aam
data16
test
call
dec
out
adc
push
pop
idiv
and
jl
jecxz
fbstp
sub
hlt
outsl
mov
jb
or
inc
or
leave
mov
icebp
adc
lcall
jmp
sub
cmp
mov
jp
sub
pop
nop
sbb
jb
pop
jge
inc
mov
adc
pop
stos
fdivs
jbe
mov
xor
xchg
stos
negb
xor
int3
stos
js
loopne
stos
and
and
aam
adc
push
shrb
jmp
shl
pop
or
test
int3
xor
out
pop
cltd
mov
aam
nop
cmp
mov
std
xchg
popf
pop
in
adc
popf
push
sub
cwtl
sub
pop
mov
cli
bound
sahf
mov
pushf
jmp
and
xor
push
jnp
mov
sub
xor
add
fs
push
dec
inc
mov
sahf
fmull
ja
scas
in
cmp
pop
leave
sbb
cs
or
mov
popf
cmpsb
jge
xchg
cmp
dec
dec
into
lret
push
in
push
in
pop
lods
call
sub
jne,pt
cmp
mov
jae
ljmp
int
pop
push
stc
jp
xor
out
mull
pop
inc
pushf
scas
mov
sbb
int
inc
add
pop
mov
lods
popf
mov
movsb
andnps
movsl
add
arpl
fsts
loopne
shr
sbb
test
in
xor
push
out
lds
in
outsl
sbb
dec
dec
fwait
pop
dec
mov
and
popa
xor
mov
in
loopne
inc
cmp
xor
adc
push
add
test
out
jo
daa
lock
mov
fisubs
mov
and
hlt
enter
scas
pushf
call
xchg
sbb
dec
inc
dec
fs
mov
clc
pop
xlat
add
or
nop
in
scas
cmp
adc
out
dec
std
bound
stc
cmp
subl
sar
pop
call
nopl
fdivrs
sbb
sub
adc
or
jbe
jno
outsl
iret
ljmp
mov
lret
loopne
jmp
adc
bound
mov
jg
test
xchg
inc
push
push
pop
stc
push
push
pop
mov
jno
pop
dec
mov
mov
shl
mov
mov
ficompl
push
loope
roll
jne
loope
fsubl
mov
imul
jns
cmp
jmp
push
jb
aas
movsb
mov
jno
or
xor
testb
dec
lea
adc
mov
jb
rcr
mov
or
mov
fwait
add
push
cli
loop
or
les
sti
inc
jl
out
fdivl
sbb
mov
xchg
iret
rclb
adcb
ss
movsb
push
xchg
ljmp
or
pop
adc
push
dec
xor
pusha
mov
stos
out
inc
cmp
ret
fnsave
push
adc
pop
dec
or
gs
pop
mov
xchg
jmp
sbb
das
xchg
jbe
sbb
sti
pushf
sbb
jns
xchg
pop
shrb
mov
fldenv
pop
aaa
shlb
adc
popa
fdivrl
into
nop
xchg
cs
inc
sti
cmp
loope
adc
sti
inc
fadd
xchg
push
jbe
test
loop
jns
push
push
xor
js
jg
mov
jecxz
lds
xor
cmpl
mov
mov
mov
sbb
mov
scas
andb
int
mov
out
adc
stos
int
inc
mov
test
fisubs
ror
aam
mov
adcl
popa
inc
pusha
mov
addr16
dec
fcoml
sti
mov
jg
cmpsl
sarl
or
cli
cmp
js
addr16
ret
mov
mov
rol
inc
xchg
out
out
in
lods
jnp
mov
push
or
sti
fldl
mov
lret
xchg
push
into
sbb
xor
adc
int3
out
mov
insl
xchg
xor
dec
push
add
add
or
jle
jecxz
mov
or
xor
scas
cmpsb
orl
xor
sbb
les
imul
push
clc
mov
pop
dec
xor
jmp
das
xchg
jg
test
mov
pusha
pop
inc
inc
sub
sbb
and
adc
inc
adc
inc
dec
jnp
mov
leave
loope
inc
insl
das
mov
dec
arpl
fs
jno
std
xchg
mov
sub
cmp
pop
pushl
aaa
add
lret
cmp
cmp
push
dec
int3
push
mov
pop
or
mov
jno
inc
inc
iret
repz
cs
leave
fsubr
aad
mov
lret
std
push
sbb
jecxz
bound
nop
sub
call
cld
and
inc
cmp
pop
jge
aas
enter
push
inc
mov
xchg
test
imul
outsb
aad
fwait
inc
cmp
call
into
sub
bound
shl
mov
fistpl
push
and
stos
loop
clc
sarb
or
repz
mov
mov
sub
js
sub
lahf
pop
sbb
mov
ljmp
mov
mov
roll
fsubrs
adc
insb
or
sub
scas
adc
mov
mov
dec
frstor
mov
imul
sysenter
mov
out
mov
lods
notb
mov
call
mov
int
stc
jecxz
push
mov
inc
stos
insb
std
andl
ja
jmp
mov
xlat
nop
xor
gs
sbb
cld
xchg
cmp
cwtl
ds
sub
push
jae
push
add
cs
je
es
ret
popa
aad
aad
dec
jae
stc
or
mov
inc
mov
daa
mov
adc
lret
loopne
ds
fs
mov
mov
test
xlat
shl
adc
vphadddq
or
scas
repnz
inc
rcr
dec
inc
sbb
mov
push
sbb
jne
cli
mov
fbld
cmpsb
mov
lods
mov
mov
cmp
clc
rorb
sahf
push
adc
aad
ja
stc
cli
push
ss
jno
dec
sub
push
mov
jl
sbb
sbb
lret
js
pop
sub
ja
daa
dec
in
mov
sub
ds
out
mov
inc
sub
fildl
jmp
cmp
imul
add
adcl
dec
or
cmp
andb
cwtl
enter
pop
push
mov
in
and
push
mov
stc
jnp
add
sub
mov
mov
and
loopne
aas
lahf
adc
pop
aad
popa
xchg
sbb
sbb
in
xchg
and
ret
mov
jecxz
cmpsb
mov
sarl
dec
fdivrl
pop
loope
jl
ret
mov
jae
repnz
sbb
pop
je
dec
sbb
sub
aam
jge
scas
gs
movsb
fbstp
add
mov
aaa
test
push
jne
add
jecxz
sti
leave
mov
xchg
jl
pop
mov
fsubp
pop
jo
loope
cmpsl
dec
inc
fsubr
dec
mov
sub
push
aaa
test
popf
pop
xchg
mov
sub
pop
xchg
neg
inc
jae
dec
rorl
dec
sti
jmp
xchg
popa
pop
ss
daa
mov
jg
scas
dec
call
pop
pop
out
or
ret
xchg
fildll
ss
in
xor
into
ss
add
push
clc
and
sub
add
test
pop
mov
rcl
mov
dec
sbb
gs
push
push
dec
test
mov
movsb
jae
icebp
lods
iret
int
adc
or
add
jl
dec
cs
xor
test
gs
in
cmp
test
or
jmp
sti
int3
mov
lret
fwait
test
sbb
call
mov
mov
ficompl
leave
mov
or
pusha
andl
pusha
mov
or
ljmp
loop
sbb
adc
mov
mov
decl
data16
sahf
popa
addr16
mov
pop
jge
stc
jecxz
push
out
outsb
scas
or
bound
dec
sub
jp
sub
loop
repnz
or
popa
mov
lret
clc
dec
push
xchg
pop
inc
jmp
jbe
mov
and
add
lock
mov
lcall
add
add
add
sbb
add
add
add
add
add
add
mov
add
add
add
add
cmp
add
add
add
add
push
adc
add
add
add
add
add
add
add
add
xor
sbb
jl
mov
sub
add
enter
rolb
ljmp
ja
mov
add
js
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
add
pushf
add
rcl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
aas
xlat
add
sub
add
and
add
sbb
add
adc
add
or
add
add
add
cld
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
xlat
add
pusha
xlat
add
insb
xlat
add
adc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
clc
xlat
add
sbb
add
inc
fadds
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xchg
fadds
add
add
lods
fadds
add
add
fadds
add
fadds
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
lock
add
fadds
add
flds
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
fiaddl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
fildl
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
fildl
add
faddl
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
faddl
add
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
faddl
add
faddl
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
