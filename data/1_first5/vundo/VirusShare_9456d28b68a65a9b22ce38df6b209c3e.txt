jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
dec
icebp
sbb
jb
mov
jmp
add
add
pop
add
add
add
or
or
sub
add
add
add
add
add
stc
add
mov
add
add
add
scas
add
add
xor
aam
addb
add
mov
add
add
dec
add
add
add
dec
add
add
add
add
inc
add
add
add
add
add
add
lods
add
or
leave
add
or
lods
add
int
push
add
and
lods
add
addl
aad
lea
leave
add
fiaddl
lods
add
mov
sub
add
add
push
add
lods
add
or
in
add
or
cmp
add
add
popf
add
sub
lods
add
add
add
add
popa
add
inc
add
add
add
add
add
add
stos
add
add
add
add
add
add
out
add
aad
or
add
add
add
insl
add
add
roll
and
cmp
roll
add
add
xchg
mov
add
jo
ret
add
add
add
add
add
add
xchg
add
addl
aam
popa
add
add
add
push
add
or
pop
add
inc
add
mov
insb
add
add
aam
push
add
add
add
pop
add
xor
xchg
scas
add
add
add
and
addl
or
pop
add
pop
add
add
add
add
add
add
and
cmp
pop
add
add
add
add
dec
add
add
dec
add
add
adc
int
mov
add
add
aad
aam
movsl
add
add
add
jl
xor
sahf
add
add
dec
add
aad
and
stos
add
add
add
or
add
roll
add
add
or
add
mov
addl
aad
or
sub
mov
add
add
add
add
add
data16
add
add
stc
add
or
add
add
add
add
xchg
scas
add
sbb
in
add
addl
xchg
adc
js
push
add
jl
mov
xor
push
add
add
add
add
sldt
add
aad
xchg
int
out
add
add
xor
mov
or
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
xor
loope
sub
push
add
add
jno
leave
add
add
xchg
add
add
add
or
jo
inc
add
add
add
int
addl
cld
add
add
or
pop
add
inc
add
add
pop
add
js
inc
add
push
add
add
add
dec
add
lea
lods
add
add
add
add
lods
add
add
add
sbb
scas
mov
fdivr
ja
out
mov
jno
lahf
mov
out
push
push
dec
sbb
clc
jg
cmp
and
js
jl
pop
or
out
and
in
adc
loopne
lea
insl
push
mov
jae
loope
or
andl
bound
movsl
adc
cltd
sbb
cmp
jbe
call
add
outsl
mov
cmp
dec
mov
sahf
mov
testb
mov
out
movsl
pushf
std
pop
cmp
pop
mov
out
cmp
fucomi
testb
addr16
pop
and
pop
pop
outsb
mov
push
cld
andb
or
xor
cmpsl
xchg
cmc
fs
lret
adc
mov
mov
out
inc
inc
addr16
iret
andl
int
fsubs
jne
mov
fcmovb
mov
aaa
andb
mov
dec
push
popf
out
testl
mov
jecxz
aaa
int3
xor
inc
pop
mov
loopne
outsl
xor
jnp
dec
sbb
pop
dec
adc
into
pushl
icebp
xlat
or
js
rep
jns
pop
mov
jg
xor
popf
adc
daa
lahf
std
rorb
loop
stc
pop
outsb
pop
adc
or
lcall
js
dec
loopne
pop
inc
cltd
jg
popf
test
cmp
into
add
stos
shl
cmp
pop
cmpsl
repz
mov
cmp
push
rcrl
push
lret
mov
jp
or
jecxz
subl
mov
or
mov
and
push
adc
bound
and
jle
mov
mov
cmpsb
cmpsl
fisubl
out
cld
call
cmc
mov
ds
lret
jp
mov
cld
mov
mov
dec
mov
mov
pop
sub
push
sar
cmp
inc
sub
movsb
inc
cmp
sub
xchg
pop
jo
movsl
fldt
adc
jl
lahf
shrb
push
xor
in
arpl
push
jmp
push
pop
test
cs
mov
inc
mov
cwtl
out
and
push
add
sahf
lock
iret
mov
bound
test
addr16
fldenv
add
ljmp
xchg
inc
ret
and
inc
das
xor
ret
aad
pop
insb
xchg
sbb
push
lcall
lock
pusha
push
in
push
stos
push
mov
add
js
jo
fidivl
xor
sub
dec
lret
sub
jg
nop
cmp
dec
gs
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
stos
leave
loopne
shr
sar
fst
divl
dec
pusha
pop
push
imul
adc
add
out
loopne
loopne
sar
mov
mov
xor
cmpb
and
adc
add
jmp
jmp
mov
mov
cmp
xor
pop
pop
insl
jge
dec
imul
pushf
lea
pop
mov
push
cwtl
or
imul
lock
clc
rolb
ja
pop
pushaw
movsl
dec
mov
hlt
lahf
cmp
leave
ja
cld
sub
setns
add
subb
cmpsl
add
iret
or
mov
lock
call
mov
js
sub
jp
dec
push
xchg
sbb
mov
jae
push
xlat
jmp
and
loopne
pusha
data16
js
lahf
pop
inc
xchg
inc
dec
lcall
imul
call
sub
mov
dec
scas
insl
inc
jns
divb
in
lock
cmp
leave
loopne
shr
xlat
stc
mov
test
js
dec
imul
adc
sbb
movsb
test
mov
movsb
mov
xchg
int3
in
leave
add
pusha
xor
pop
cs
pop
fs
pusha
jne
gs
lock
xchg
mov
ret
in
into
mov
mov
jb
pusha
xor
push
push
jbe
pop
add
cltd
shrb
enter
nop
test
pusha
pop
push
imul
adc
add
lock
loopne
shr
sar
mov
mov
push
imul
adc
add
lock
and
mov
test
lahf
dec
aaa
push
push
xor
xor
cmpsl
in
xchg
jo
xor
divb
add
rcl
lea
dec
mov
loopne
or
ret
mov
and
inc
or
fnstsw
jp
sub
out
jecxz,pn
addr16
or
push
jg
sbb
pop
adc
out
mov
dec
push
and
pop
inc
xchg
push
jb
lods
test
xor
mov
and
ret
mov
pop
jecxz
aaa
xchg
icebp
ror
sti
aad
sbbl
test
shrb
jbe
mov
push
ja
inc
cmc
inc
jle
and
or
jo
or
test
stos
ja
add
xchg
mov
int3
cs
sbb
loopne
fidivrs
xchg
out
cmp
out
imul
jecxz
rorl
std
pop
cs
sbb
insl
and
mov
or
sahf
mov
mov
dec
add
jno
lods
inc
stos
add
ljmp
lods
dec
arpl
mov
dec
lcall
nopl
push
adc
out
mov
adc
mov
imul
lock
movsl
cld
pop
movsl
jb
cmp
sub
cmp
cmp
call
mov
jge
sub
jl
mov
push
push
pop
pop
dec
or
in
push
shlb
sahf
addb
bound
jg
mov
adc
jbe
cld
js
aad
jo
cmc
xchg
subl
fsubr
repz
ja
fsubl
fwait
push
das
popf
xchg
lret
add
pop
sub
ljmp
nopl
addr16
jg
add
notb
aas
out
movsb
aas
inc
out
mov
iret
xchg
int3
loopne
add
mov
xor
ljmp
push
rcll
mov
mov
mov
aas
adc
pop
call
sub
out
jns
loope
addr16
shlb
and
jne
inc
jno
repnz
dec
fdivl
and
push
prefetch
or
dec
cld
xchg
or
cmp
cltd
popf
jp
mov
pop
fadd
ret
cli
imul
adc
shlb
xor
pop
add
addl
shufps
cmp
sub
mov
test
jg
dec
imull
inc
imul
cmc
jecxz
push
insl
xchg
xchg
mov
in
jmp
lods
ds
imul
xorb
fldt
lahf
mov
nop
sub
dec
mov
push
mov
test
or
es
mov
mov
mov
sbb
or
out
out
inc
popf
gs
ss
jo
int3
inc
push
pop
cmp
movsb
in
jae
xchg
enter
in
cmp
mov
adcb
cmp
lcall
sub
jecxz
or
inc
lods
and
cld
addr16
sub
cmp
int3
faddl
movsl
gs
jecxz
out
aas
cld
hlt
stos
mov
inc
shl
cs
into
cld
sub
dec
jb
lret
sbb
push
pop
sub
xor
sub
out
std
dec
into
lods
icebp
sub
insl
sub
roll
jmp
in
and
pushf
outsb
sarl
rcr
pop
pop
mov
mov
cmovno
pushf
inc
insb
xchg
or
sub
pop
enter
xchg
adc
stos
ljmp
xor
int
jl
jno
pushf
adc
lret
daa
adc
mov
pop
fcoms
push
test
setno
movsl
out
dec
sub
test
test
mov
rorl
aaa
sub
inc
mov
sub
cmp
sbb
pop
cltd
cmp
xor
call
daa
push
adc
sub
push
xor
fisubs
mov
lods
divb
dec
nop
inc
fidivrs
negl
std
dec
mov
inc
add
andb
cmc
nop
dec
mov
xlat
mov
sbb
popf
movsb
xor
cli
mov
int
stos
test
in
mov
stc
outsb
ret
mov
xchg
pop
divb
repz
fbstp
into
test
jmp
adc
iret
call
push
arpl
movsb
mov
pop
sub
cmc
cmc
ss
ja
in
or
or
inc
leave
push
cmpsb
outsb
stos
mov
scas
icebp
sbb
push
adc
into
jp
adc
xor
les
fidivrl
cmc
cmc
aaa
out
popa
adc
es
mov
mov
aam
int3
shlb
mov
mov
xor
aaa
mov
daa
in
stc
push
mov
lods
iret
fdiv
mov
pop
imul
jbe
in
popf
in
jo
jae
and
adc
dec
or
fisubs
sbb
cwtl
mov
mov
ficoms
lods
orl
popa
movsb
sbb
shlb
pop
mov
cli
pop
mov
mov
cmpsb
or
out
daa
sbb
dec
xchg
push
leave
or
push
jns
push
cmp
add
mov
inc
lret
xchg
mov
xor
mov
iret
jecxz
in
nop
shr
ficoms
sbb
adc
xor
gs
int3
decb
add
sub
jge
ror
sbb
fbstp
mov
clc
jns
pushf
xchg
fdivs
pop
jb
cmp
iret
out
jnp
ds
xor
dec
lds
mov
mov
les
clts
push
es
xor
cltd
push
mov
lds
mov
arpl
lret
sub
mov
or
jg
inc
xor
adc
out
jl
sbb
daa
cmp
enter
and
roll
push
and
mov
and
sub
mov
push
std
and
xchg
popl
pop
or
add
mov
dec
je
and
and
daa
cwtl
xchg
and
repnz
mov
enter
les
xor
pop
lea
insb
jbe
inc
mov
into
loopne
sbb
fdivl
and
in
mov
xor
mov
dec
inc
mov
inc
mov
sub
scas
lea
and
xchg
pop
fists
out
dec
pop
and
jae
je
push
inc
mov
rorb
mov
lds
cli
lods
jae
out
cltd
repz
aaa
jge
pop
fdiv
dec
mov
dec
leave
sub
xchg
outsl
sub
push
aaa
adc
cmp
daa
adc
xchg
addl
or
fidivrs
pop
mov
jno
shl
fwait
test
iret
cmp
test
sub
inc
adc
dec
sub
mov
inc
ficompl
test
or
gs
rol
popf
push
ds
loope
push
push
dec
push
fldenv
into
push
adc
jge
lods
inc
arpl
adc
adc
scas
psrlq
cmp
dec
test
popa
cs
aad
aam
leave
out
movsl
aaa
cmp
in
movsl
xor
dec
cli
and
loope
pop
jo
xor
aaa
push
sub
pop
xlat
inc
adc
mov
fdivl
pop
inc
mov
jle
cltd
xor
bound
xlat
push
mov
pop
xor
cmp
jae
cs
jg
jl
add
dec
mov
adc
and
cmpsl
loopne
inc
push
shl
xor
or
mov
cli
mov
in
jnp
icebp
jae
cmp
dec
test
push
pop
add
or
jbe
daa
out
outsl
pusha
mov
jmp
sub
mov
data16
mov
sub
adc
jbe
jmp
shlb
fsubrl
aas
fistl
or
sarl
xor
dec
push
in
dec
or
sbb
fsts
sti
xchg
jno
mov
dec
dec
jne
into
jb
add
inc
imul
sbb
mov
push
popa
out
pop
and
cwtl
push
inc
aad
xor
hlt
lahf
xchg
xlat
inc
mov
mov
sub
popa
pop
ret
inc
icebp
idivl
arpl
cmp
mov
mov
lea
out
stos
xor
repnz
addr16
popf
scas
cli
ret
dec
jae
adc
adc
inc
mov
arpl
out
sub
sbb
and
xchg
pop
jle
cmp
fnstenv
jge
adc
clc
insl
dec
or
fisubrl
nop
fldt
jo
mov
das
repz
cwtl
xor
jl
sub
pop
jnp
inc
adc
adc
repnz
mov
pop
mov
push
pusha
cmp
push
inc
out
out
notl
insl
outsb
pop
arpl
add
in
push
lcall
inc
pushf
wbinvd
push
scas
xchg
lahf
repnz
scas
xlat
fldl
add
sahf
insb
test
cwtl
shll
mov
iret
xchg
fwait
and
dec
cmpsb
dec
aaa
loop
pop
mov
imul
insl
cmpsl
ret
cmpsb
xchg
punpcklwd
out
fdivs
iret
add
mov
fmull
xchg
lea
push
add
mov
rcr
pop
ljmp
pop
cs
add
sti
shlb
pop
cmp
jne
lret
push
idivl
and
cmpb
lret
xlat
sarl
push
lods
sub
lock
mov
dec
pushf
negl
rol
data16
out
cmp
lret
test
xchg
mov
mov
jmp
push
sti
sbb
imul
push
sbbl
push
sbb
fmull
inc
jmp
fwait
arpl
popa
mov
push
push
lahf
dec
std
mov
dec
popa
popf
jnp
jns
sbb
cs
repnz
out
shlb
and
imul
push
enter
jns
aad
pop
xor
push
mov
pop
aaa
fadds
cmpsl
or
push
pushf
sub
aad
mov
adc
xchg
pop
das
nop
xchg
or
mov
push
and
fistpl
into
mov
xchg
or
jmp
xor
jmp
nop
pusha
movl
push
pusha
repz
adc
push
test
xchg
call
into
mov
addl
sub
cltd
jo
dec
mov
mov
or
adc
cmc
or
push
call
inc
aaa
add
mov
add
mov
adc
mov
pop
add
push
and
xor
stc
adc
cmpsb
out
js
shr
es
pop
call
mov
push
imul
jmp
aam
cli
push
call
loop
dec
pop
int
or
add
xchg
or
dec
inc
pop
out
js
push
and
clc
xchg
inc
pop
mov
xor
dec
ljmp
cmp
mov
or
mov
jg
ds
cli
mulb
cmp
pop
inc
fisubrl
dec
cld
inc
rorb
mov
cmpsb
and
sahf
jmp
push
iret
pop
xor
jno
xlat
jle
mov
outsb
test
into
pop
inc
xlat
or
fiaddl
cmp
jecxz
mov
xor
rcl
nop
mov
pushf
mov
leave
cli
jo
lds
or
dec
xor
imul
mov
xor
pusha
xor
cmp
adcb
dec
push
call
jecxz
xchg
push
arpl
push
cmpsb
shll
in
lcall
cmc
mov
js
adcl
stos
sbb
push
push
aam
popf
lahf
and
pop
xchg
inc
mov
push
jl
repz
test
and
jge
loope
data16
dec
cltd
push
dec
push
loope
jnp
push
cmp
dec
ljmp
jmp
int3
jae
repz
dec
cmc
lcall
add
dec
xchg
pop
lods
fcoms
negl
mov
pop
into
xor
push
and
push
lods
push
sub
add
dec
jecxz
mov
ret
shlb
mov
mov
cmpl
insl
fsubrs
adc
lcall
in
push
xor
shr
and
mov
aaa
xor
cltd
jns
jnp
in
push
lds
mov
pop
dec
sub
imul
sub
mov
push
adc
jno
push
push
mov
leave
je
push
mov
or
sbb
jge
outsb
cwtl
cs
adc
mov
sbbb
lret
pop
frstors
mov
mov
jnp
xor
mov
sbb
testl
loop
sbb
push
incb
sub
std
mov
jp
cmp
into
addr16
cmc
rorl
jo
lods
repnz
or
into
push
es
pop
dec
loope
pop
xchg
push
in
cmpsb
popa
jae
xor
fbstp
and
in
pop
xor
pop
push
cmp
outsb
and
int3
mov
inc
les
jae
or
jbe
leave
scas
jge
jp
hlt
inc
lock
pushf
dec
xchg
sub
sub
xchg
jmp
add
cmp
xor
adc
push
mov
imul
inc
imul
iret
orb
mov
cli
inc
add
push
sbb
pop
inc
dec
or
or
adc
jb
nop
out
lret
jmp
add
sbb
cmpsb
pop
pop
pop
xor
xchg
fldlg2
or
sub
dec
aaa
mov
outsb
mov
test
sbb
xor
mov
jmp
dec
and
lods
popf
mov
adc
push
lret
push
outsb
mov
xchg
cmp
xor
inc
mov
mov
out
jmp
adc
popf
popl
push
aam
sub
shr
dec
push
or
mov
sbbb
pop
adc
inc
int3
test
gs
and
jmp
addr16
int3
mov
push
addl
icebp
push
jne
mov
inc
pop
cmp
dec
test
add
fmull
xchg
shll
out
dec
jge
fidivl
mov
ljmp
outsb
int
cmp
sbb
andl
jbe
iret
mov
jne
jne
mov
cmc
insb
or
stos
nop
dec
cmc
mov
inc
int3
jge
sub
std
mov
std
mov
mov
add
outsb
push
cli
xor
lea
mov
pop
clc
sub
jecxz
and
rclb
jae
xor
hlt
jle
xchg
add
das
sbb
mov
bound
xor
pop
push
mov
sub
mov
stos
cs
pusha
stos
mov
xchg
jo
mov
mov
sub
js
add
jp
test
inc
push
roll
lods
jecxz
pop
arpl
ficomps
xchg
mov
xchg
mov
adc
in
js
xchg
sbb
leave
add
push
dec
cmp
adc
jo
push
test
sbb
js
daa
loop
mov
shll
ljmp
dec
inc
inc
mov
mov
insl
out
mulb
mov
xchg
movl
mov
pop
or
insb
push
xor
hlt
or
jns
clc
in
dec
imul
aaa
lea
fildl
adc
push
cltd
jb
sub
adc
es
add
mov
mov
pop
rolb
push
fidivl
clc
scas
ret
cmpsb
sbb
in
cmp
push
sbb
pop
xchg
xchg
mul
sub
mov
pop
mov
mov
pop
or
mov
lock
adc
lcall
orl
stos
ja
mov
sbb
pop
adc
inc
rorb
sti
test
adc
mov
lahf
mov
push
shlb
push
cmp
dec
sahf
mov
cld
push
popf
sub
in
cwtl
xchg
pop
jmp
mov
xchg
mov
sub
sub
sbb
sbb
xor
mov
cwtl
ja
sbb
popa
outsl
push
lds
sahf
mov
lret
xor
xchg
and
cmpsl
test
adc
xchg
pop
add
test
mov
sbb
mov
xor
imul
dec
rcrb
jg
jnp
mov
mov
in
mov
gs
sbb
jmp
push
test
sbb
sti
adc
jo
adc
pop
mov
push
or
push
fsubrl
mov
lds
xchg
nop
xchg
jp
mov
andb
aas
out
or
inc
enter
sbb
insl
pop
or
rep
xor
sarb
ja
jne
mov
dec
es
adc
ret
popf
ljmp
cmp
pushf
push
aaa
cli
push
jle
sahf
jge
jl
xor
aad
cmp
pushf
dec
mov
sub
imul
push
addl
push
jne
jae
rorb
fldcw
jbe
scas
mov
or
xchg
add
or
iret
jmp
dec
pop
ja
sbbl
inc
js
jmp
imul
pop
ds
add
scas
sub
fwait
insb
jp
adc
outsb
dec
add
nop
aad
mov
mov
adc
jno
push
sub
nop
dec
jb
arpl
xor
daa
repz
fiaddl
jno
icebp
xchg
outsl
jo
jns
xchg
aas
mov
add
add
lds
ds
adc
outsb
push
xor
sbb
popa
pop
mov
push
cmp
ds
mov
lcall
add
or
daa
pushf
lods
pop
or
mov
jecxz
inc
stos
adc
ss
fstpt
sbb
xor
push
jle
sarb
or
and
aad
imul
adc
lcall
shll
mov
mov
fwait
inc
cwtl
xorl
xchg
scas
add
dec
pushf
loope
adc
test
dec
xchg
int3
inc
mov
cs
lods
andl
andb
cs
mov
jp
enter
and
outsl
data16
lahf
movsb
jecxz
adc
mov
movsb
lcall
addl
adc
hlt
sbb
and
add
ficoms
mov
int3
cmp
ljmp
aas
mov
jbe
push
inc
inc
inc
push
mov
sahf
sti
ret
add
ja
jae
jno
imul
dec
out
fimull
lock
and
push
outsb
ret
pop
int
aas
or
subl
pop
rclb
gs
pop
inc
pushl
ds
adc
push
cld
inc
sub
pop
int3
adc
lods
imul
lods
cli
out
mov
rorb
mov
add
add
fidivs
clc
lods
movl
add
push
xchg
and
pop
std
jge
stc
and
pop
ljmp
clc
int3
cmc
push
ss
cli
mov
mov
dec
mov
mov
pop
int3
pop
aas
rcll
mov
jge
insl
sub
out
mov
aas
ds
popf
ror
rcll
mov
or
add
test
or
mov
scas
outsl
add
mov
movsb
dec
jl
aas
negb
lret
inc
cmp
test
push
test
nop
repnz
faddp
sub
in
and
outsb
shrb
stc
push
jo
mov
mov
lahf
sbb
mov
jno
adc
movsb
fucomi
mov
fcmovne
cmp
ljmp
xorl
xchg
add
cld
jb
or
jmp
jmp
mov
bound
jnp
imul
mov
mov
pop
clc
mov
xchg
and
addr16
inc
leave
lock
xchg
push
and
jo
or
ljmp
je
insb
lds
enter
mov
repnz
fsubl
xchg
adc
out
bound
cmp
jnp
jle
sahf
int3
data16
jecxz
cmp
stos
ja
lods
stos
cmp
ljmp
pop
out
pop
and
mulb
fstl
subl
cmp
dec
jo
sbb
pop
sbb
or
shlb
mov
mov
out
add
leave
adc
mov
jge
out
xchg
into
or
jle
into
mov
dec
lea
rclb
insl
and
fwait
push
or
xor
pop
push
dec
sbb
dec
in
mov
test
add
pop
or
pop
pusha
data16
adc
cmp
mov
loope
push
pop
mov
xchg
push
mov
dec
stos
jns
js
push
cli
pop
lcall
nop
xlat
add
push
mov
outsb
imul
jge
repnz
or
inc
pop
pushf
jmp
pop
cs
std
mov
cmc
mov
je
xchg
ds
fs
sbb
mov
add
xor
pop
nop
fsubrs
sbb
mov
rcl
cmpsl
sub
xor
in
rolb
addr16
idiv
mov
mov
jnp
jae
aas
push
inc
scas
cmp
xor
xchg
ljmp
add
sbbl
leave
inc
sub
xorl
sar
mov
mov
push
imul
adc
add
lock
loopne
shr
sar
mov
mov
push
imul
adc
add
lock
fnop
jmp
mov
mov
push
imul
adc
xor
leave
aam
out
sar
mov
inc
mov
repz
imul
out
inc
lret
imul
cli
ds
cmc
cmpsb
mov
dec
pop
jbe
inc
jp
or
sbb
lret
imul
cli
mov
mov
push
push
je
or
sub
sub
shl
ret
div
loop
xchg
cmpsb
xorb
into
jns
xor
arpl
jbe
insl
push
mov
test
lcall
clc
mov
roll
loope
mov
dec
mov
jbe
mov
lcall
mov
xchg
inc
test
pop
push
or
sub
inc
xor
xor
and
jp
sbb
xchg
stos
or
out
sub
cmp
and
jne
fwait
mov
or
sbb
test
cmc
dec
sbb
mov
push
push
or
sbb
jne
andb
lcall
repnz
aad
sub
lods
mov
cwtl
cmp
mov
mov
xlat
jbe
push
sub
xor
sub
cmp
add
ret
imul
cli
popf
cmpsb
mov
push
inc
jbe
inc
arpl
add
xor
cmp
mov
mov
out
mov
add
cs
adc
inc
jg
pop
add
push
movsl
out
hlt
test
mov
icebp
jmp
add
cmp
or
pop
pop
arpl
scas
scas
mov
xchg
lcall
pop
jbe
inc
jp
or
sbb
sub
cmp
lret
imul
cli
mov
mov
jbe
inc
jp
or
sbb
sub
cmp
lret
mov
out
sahf
pop
mov
fs
and
or
pop
mov
out
ss
ds
cmp
and
inc
testb
sarl
dec
dec
inc
cmc
sub
fs
jns
push
mov
int
mov
lea
hlt
sub
in
xchg
outsb
adc
push
jp
daa
add
xor
es
dec
shll
mov
mov
daa
in
adc
clc
push
ret
add
xchg
mov
adc
xor
data16
cmpsb
cmp
jecxz
sub
and
pop
aas
adc
add
ljmp
icebp
push
inc
fstpt
adc
insb
cltd
xor
out
mov
or
and
push
cmp
hlt
lock
lahf
stc
adc
cmpb
ret
mov
insb
pop
push
xchg
rcll
and
mov
mov
adc
cmpsb
divl
mov
xchg
and
add
bound
mov
pop
push
cs
outsb
jae
in
popaw
mov
cmp
mov
shlb
inc
test
cmp
out
or
jle
pop
add
jns
scas
jle
lods
sbb
push
aam
js
and
cmp
ficoml
dec
add
add
push
mov
into
lock
mov
pop
fldenv
jb
mov
cmp
js
cmp
sbb
lret
mov
jge
mov
aad
fcmovb
jno
ficomps
fcmovnu
int
dec
in
outsb
inc
xor
mov
jge
lods
jo
or
push
jns
rol
mov
fbstp
jbe
push
add
fnstsw
xor
scas
popf
lds
add
cmp
mov
adc
and
nop
aaa
xchg
jle
enter
lea
mov
jg
cmpsl
or
pcmpeqb
stos
dec
pop
test
jmp
or
mov
icebp
data16
sbbl
fdivr
loope
sub
mov
mov
xrelease
daa
rorb
mov
inc
dec
sbb
gs
push
pop
mov
cs
in
mov
push
cmp
push
push
and
or
sub
xor
cli
mov
xor
out
outsl
xor
mov
mov
xor
addr16
push
fisubs
mov
faddl
popf
les
clc
mov
testb
push
jb
stc
xor
arpl
push
and
dec
gs
icebp
out
dec
test
mov
xor
mov
pop
inc
cwtl
imul
fmul
lock
movsl
cltd
clc
pop
cmpl
adc
xchg
mov
add
std
insb
pop
movsl
arpl
xchg
and
aad
mov
fsubs
lcall
push
incl
daa
cmp
jo
das
pushf
xchg
shlb
push
jle
xchg
aas
inc
jge
inc
ds
repz
nop
inc
aaa
push
dec
and
imul
es
push
daa
lretw
in
and
mov
lret
xchg
in
sub
or
dec
in
add
addr16
ljmp
inc
sbb
jbe
adc
movb
jbe
or
das
push
sbb
fwait
mov
jmp
jl
cmp
or
je
rcrl
sub
jns
sub
in
jae
mov
dec
sbb
fsubrs
xor
cmp
icebp
add
test
hlt
add
mov
testl
gs
stos
jle
jbe
xchg
loop
addl
xor
xlat
sub
sahf
in
cmp
sub
lahf
loopne
pusha
loope
ds
mov
in
mov
mov
sub
mov
addb
in
in
inc
mulb
and
hlt
int3
cmc
push
es
jno
xchg
ss
xchg
dec
jne
push
and
clc
mov
mov
mov
adc
pop
mov
push
adc
movsb
push
sub
mov
stc
jmp
icebp
or
fmuls
inc
push
out
adc
and
xchg
and
out
xchg
in
fmul
leave
jl
and
pop
in
xchg
jnp
and
pop
mov
shr
pop
rcrl
push
sub
and
pop
dec
cli
loope
addl
fdivrs
adc
jmp
sbb
add
push
jne
xchg
aaa
xchg
cmpsb
and
add
lods
mov
fsubrl
cmp
sar
imul
jne
mov
adc
sar
movsl
xor
data16
sub
scas
enter
pop
mov
out
inc
xchg
and
mov
mov
add
cmp
cli
shll
lods
outsb
mov
jecxz
adc
pop
adc
lret
jl
sub
popf
std
dec
inc
sub
mov
movsl
cwtl
pop
mov
push
push
mov
xor
inc
les
lret
popa
mov
pop
ss
xor
idiv
mov
shlb
pop
movl
lret
test
outsl
or
cwtl
popa
pop
push
jmp
push
add
rclb
pusha
rolb
leave
jge
jae
adc
pop
loope
pop
out
cmpsb
mov
js
mov
div
mov
sbb
xor
int
add
sarb
fldl
dec
iret
jbe
dec
push
sub
inc
popf
xor
out
negl
and
test
leave
sub
mov
js
and
sti
lahf
pusha
pop
jno
sub
push
push
push
icebp
dec
sbb
adc
fimuls
sub
mov
adc
fstps
sbb
and
insb
jns
sbb
or
mov
ds
pop
jmp
xchg
sti
cmp
push
cmc
sub
ss
je
xor
cmpsl
inc
cmp
cmp
pop
inc
aam
scas
inc
mov
xchg
lret
sub
add
adc
mov
jne
stos
pop
daa
bound
xchg
lret
in
iret
jl
mov
xchg
test
popa
or
pop
inc
sub
mov
xor
mov
or
std
int
fldcw
mov
pop
mov
and
push
lret
mov
xor
inc
aas
data16
arpl
fs
ss
xorl
push
movsl
dec
into
imul
pop
test
lods
xor
in
daa
add
pop
sub
mov
call
cmc
pop
push
es
outsl
cs
inc
or
mov
pusha
xchg
push
leave
gs
cmp
cmp
dec
loope
xchg
popa
xchg
or
sub
fnstenv
mov
fdivrl
mov
mov
add
push
pop
pusha
fs
xor
inc
jecxz
nop
push
cmpsb
or
xchg
mov
dec
stos
mov
outsl
add
into
xchg
or
sbb
xor
mov
or
sbb
xchg
std
shrl
xchg
and
xchg
dec
shrb
enter
out
mov
idivl
shl
xor
jg
dec
into
call
mov
push
xlat
or
fxch
cli
inc
cli
sbb
lods
cmp
nop
in
jbe
lods
aam
leave
sub
pushf
movntq
xchg
sahf
pusha
repnz
aad
dec
aas
mov
movsl
movsb
test
mov
or
mov
jb
iret
mov
mov
cltd
push
xchg
mov
sbb
int3
xchg
jnp
addr16
lret
nop
faddl
aas
int
pop
enter
xchg
sbb
sbb
ds
push
movsl
sbb
call
or
addr16
mov
dec
xor
stos
push
movsl
mov
sbb
pop
fldt
hlt
mov
insl
fnstsw
fucompp
dec
sbbb
fildl
fiaddl
fbstp
nop
mov
das
mov
sbb
out
mov
inc
es
in
cs
repnz
pusha
and
arpl
into
aam
inc
lret
mov
inc
or
pop
fcmovnbe
push
lcall
fldt
push
sti
jg
inc
stos
jbe
xchg
jle
leave
mov
or
loopne
stc
aaa
or
std
adc
out
out
lds
lods
test
jmp
jno
jnp
push
sahf
fnstsw
fdivrs
andl
push
iret
inc
pop
cmp
incl
test
xchg
adc
push
xor
jl
pop
sbb
push
or
xchg
push
xor
xor
add
pop
aam
mov
pop
jns
dec
mov
cld
test
es
dec
repnz
cwtl
add
mov
fldt
hlt
add
and
fdivrs
jge
push
push
aaa
scas
pop
mov
or
cmp
mov
ficoms
add
imull
dec
shll
push
dec
enter
mov
scas
xchg
frstor
jo
and
sbb
jne
fstl
or
fstpl
test
testl
jbe
imul
ja
xor
cmp
jecxz
movsb
ret
adc
xchg
ds
das
mov
and
mov
outsl
andb
xor
out
fs
xchg
cmp
mov
cmp
aas
or
ljmp
in
push
jl
fdiv
les
push
dec
xchg
out
adc
ss
dec
fcomps
sub
aam
stos
mov
out
xor
rcl
push
mov
lock
jnp
ja
psubd
lods
stc
sti
subl
or
movsl
cltd
pop
xchg
push
int3
pop
dec
xor
mov
sub
cmp
icebp
clc
enter
push
mov
inc
xchg
enter
lcall
es
aad
jp
cmpsl
push
jge
cs
popa
add
and
test
sub
xchg
imul
push
inc
dec
scas
push
stos
stc
fisubrs
cwtl
mov
leave
ds
ljmp
cmp
adc
xchg
in
je
cmp
les
mov
popa
inc
jecxz
bound
popa
into
xchg
rorb
insb
xchg
test
push
push
sub
out
bswap
push
sbb
ror
sahf
or
inc
push
jns
cmp
push
scas
imul
pop
adc
pop
cmp
addr16
ret
cmp
adc
rcr
out
push
jae
xchg
xor
cmp
mov
sbb
aas
out
sub
jg
jns
fs
push
popa
and
das
sub
xchg
arpl
negl
xchg
aad
stc
pusha
pop
and
aad
jbe
dec
lock
mov
lret
fimull
jns
mov
xchg
mov
fs
lahf
cmp
and
mov
enter
daa
sbb
sbb
dec
addr16
lret
imul
inc
iret
or
shl
scas
sbb
hlt
aaa
mov
stos
imul
aad
mov
cmc
sbb
pop
fwait
sbb
cmp
adc
into
mov
jmp
pop
lock
dec
jle
or
outsl
push
and
insb
pop
lods
add
jb
cld
xor
clc
cli
sub
aad
test
push
fnstcw
xor
jb
mov
jge
jnp
lahf
add
mov
xlat
and
jmp
xor
dec
in
fsub
xchg
pop
xlat
scas
and
sti
xor
lcall
pop
repz
inc
mov
inc
jns
dec
jp
push
lock
jne
sbb
in
add
inc
fldt
insl
mov
or
mov
xor
sti
icebp
mov
addr16
adc
push
mov
mov
sbb
pop
mov
cmp
pop
int
push
xlat
mov
stos
xchg
mov
jecxz
ja
outsl
sbb
sti
aam
mov
hlt
add
out
mov
jno
sbb
subl
sbb
jg
cmc
mov
das
push
rcll
add
mov
aas
push
ljmp
jnp
mov
dec
xor
sbb
jmp
cmp
inc
push
pop
aam
and
stc
imul
shl
rcll
mov
call
sahf
lods
imul
cltd
test
mov
das
jp
cs
lret
adc
sbb
add
hlt
mov
dec
cmpsl
or
js
cld
add
fildl
popf
adc
frstor
dec
jbe
cmp
inc
mov
adc
adc
xor
cwtl
int3
lret
sbb
dec
imul
sbb
aaa
cmp
nop
test
mov
mov
pop
cmp
insb
int3
int3
xchg
mov
and
bound
add
mov
aam
popa
pop
insb
xor
xchg
inc
iret
sbb
mov
fstpl
mov
pop
push
inc
cmp
add
jo
stos
fimuls
sahf
jecxz
xor
xchg
push
jo
dec
push
rcrl
cwtl
scas
and
mov
mov
xor
push
pushl
dec
dec
ret
jmp
pop
es
arpl
mov
mov
sub
cmp
ficoms
fsub
mov
into
outsb
pop
fcomi
ja
aas
jmp
lret
inc
fcmovbe
mov
sahf
das
insl
pop
sarl
sub
inc
mov
pop
mov
cltd
pop
inc
xor
and
rol
push
mov
inc
iret
jp
sub
cmp
orb
fistpll
ret
inc
mov
push
dec
xor
loop
shrl
mov
push
inc
aad
fwait
xor
mov
mov
and
repz
fnstcw
cmpsb
cmpsb
and
jle
jp
outsl
cmpsb
mov
inc
fcmovbe
add
xchg
loopne
mul
into
xchg
mov
dec
or
nop
lea
inc
fs
xor
xchg
sbb
in
or
mov
adc
mov
bound
stos
pop
shrb
pop
out
sbb
mov
add
cwtl
mov
popa
inc
mov
and
cmpsl
or
int3
iret
mov
or
pop
out
inc
mov
pop
out
fsubrl
into
jp
mov
mov
loope
arpl
sub
push
popa
sti
xlat
ja
scas
sub
jae
lret
idiv
sar
movsl
dec
shll
xor
into
popa
movsb
rcr
out
inc
icebp
mov
push
pop
out
inc
xchg
popf
cmp
stos
mov
xchg
filds
mov
mov
repz
fadds
aad
rorl
das
insb
movsl
sub
lret
into
outsl
lods
stos
test
dec
and
mov
insl
int3
lock
movsb
adc
fwait
pop
xor
mov
test
push
mov
cmp
sbb
add
mov
or
xor
inc
push
pop
stos
popf
cld
arpl
insb
push
or
popl
test
call
xchg
shll
mov
adc
jecxz
out
ret
rcr
pop
add
pop
mov
mov
subl
sbb
ljmp
sub
fwait
pop
in
mov
mov
les
dec
dec
or
inc
add
fisttpl
push
je
in
rep
andl
xlat
shlb
std
sarl
fs
pop
das
push
addb
iret
jbe
lods
shlb
mov
les
daa
mov
fcomp
loopne
pop
adc
jae
outsb
subb
test
add
or
stos
pop
or
and
xor
or
xchg
mov
test
adc
pop
shrl
mov
inc
or
shl
ret
out
and
or
in
cmc
popa
subb
inc
iret
push
dec
jbe
lahf
call
push
dec
cli
lret
cld
arpl
mov
xor
mov
hlt
pop
jp
popa
in
insb
and
xchg
pop
cmpsb
fcompl
es
dec
test
daa
and
mov
push
xor
pop
cmp
lret
add
cmpl
lds
out
xor
and
dec
mov
push
pop
cltd
mov
inc
scas
idivl
lea
aaa
test
cwtl
inc
push
inc
cld
push
mov
pop
dec
dec
pusha
push
aas
cmp
rol
scas
fnsave
movsl
addr16
jo
adc
cmp
lcall
xor
push
aaa
leave
pop
in
scas
into
pop
cmp
insl
test
cmpsb
int3
dec
jo
movsb
je
aad
cmpsb
and
add
out
jns
test
imul
loopne
add
test
outsb
xchg
test
pushf
les
mov
jbe
jo
add
inc
je
je
cmp
dec
out
iret
in
pop
pop
mov
dec
das
cmp
into
fwait
in
and
in
mov
int
jmp
or
into
jmp
cmp
outsl
out
fcoml
xor
fisttps
dec
mov
imul
shlb
hlt
aaa
sahf
outsl
and
pop
incb
ret
clc
out
ret
or
and
gs
xchg
cmp
push
xorl
addr16
fadd
lret
int3
stos
or
dec
xor
xor
mov
aas
xchg
sub
mov
inc
incl
xor
fdivrs
fstl
mov
ljmp
jb
dec
sahf
cmpsl
mov
xchg
jmp
push
mov
lds
lahf
out
in
js
sbb
fstps
cmc
push
insl
jae
in
sub
out
movsb
xchg
and
lret
jns
fistpl
das
loope
fisubrl
rclb
push
cwtl
xchg
repnz
sbb
lods
dec
jg
outsb
push
and
movsb
shl
into
and
jae
xor
aaa
jbe
mov
pop
and
test
adc
into
dec
sub
cmp
fiadds
popl
add
ficompl
popl
addr16
mov
push
int3
mov
pop
bound
push
adc
xchg
sbb
cli
rorb
imul
cmp
push
add
xchg
fcmovnb
xor
pop
sbb
outsl
add
scas
mov
ds
jmp
or
lods
int3
insb
add
xor
inc
test
sub
add
fs
sub
sub
lret
test
jne
mov
loop
inc
pop
mov
adc
outsl
dec
lcall
sbb
int
mov
outsb
jmp
sbb
mov
adc
push
lahf
jmp
icebp
adc
cmpsb
or
ficoms
inc
in
ret
lcall
push
gs
jo
sbb
aam
jo
sbb
fildll
popl
aaa
cmp
loopne
int3
arpl
sub
pusha
test
pop
scas
jp
test
push
mov
lret
push
xor
xor
jne
add
pushl
pushf
imul
sbb
out
mov
and
dec
outsb
repz
dec
sbb
lea
or
xchg
fidivs
insl
fnstsw
dec
das
out
push
int3
pushf
addr16
pushf
and
lds
xor
stos
adc
mov
aas
rcll
push
fs
faddl
inc
gs
xor
aam
mov
movsb
mov
xor
mov
pop
jb
ret
cmc
xor
fstpl
fldcw
adc
or
jno
cmp
loope
test
push
int3
pop
pop
mov
xor
ss
pop
jbe
std
mov
sub
sub
xchg
rcl
jmp
cmp
mov
les
add
and
cmp
sbb
mov
cmp
xor
insl
jge
int3
add
lahf
add
push
ljmp
mov
mov
pop
icebp
pop
xchg
fdivrl
sub
inc
and
or
jp
js
xor
mov
pop
cmp
mov
aad
sbb
cwtl
xor
push
adc
xchg
cli
in
adc
shrl
imul
jb
pop
pop
call
test
leave
enter
jp
inc
and
repz
jp
mov
into
mov
push
ss
adc
jp
sub
adc
mov
out
push
je
jecxz
adc
mov
pushf
incl
adc
ss
stos
inc
push
mov
push
je
es
and
inc
push
or
sbb
repnz
and
cs
mov
xchg
jne
lahf
push
jecxz
cmp
cs
ljmp
arpl
add
adc
outsl
in
lret
imul
cld
jne
aad
cltd
push
mov
jns,pt
data16
add
pop
call
sub
aad
into
push
push
fidivrs
ficoml
fistpll
test
jne
sahf
xchg
xchg
test
adc
in
xor
jge
in
adc
sbb
mov
jp
sbb
mov
gs
loope
scas
push
mov
dec
push
repz
cli
popaw
bound
sub
loope
cld
adc
push
aam
xor
mov
cwtl
loope
rcll
dec
push
imul
adc
and
pop
stos
loopne
and
sub
mov
inc
pop
arpl
mov
dec
jmp
int3
inc
xor
pop
je
xor
jecxz
js
ficoms
sbb
hlt
and
mov
push
dec
stos
mov
xor
mov
sbb
in
enter
pop
push
arpl
lods
push
or
or
loopne
movsl
or
ret
shrb
and
mov
sbb
pusha
pop
adc
aaa
lret
and
cli
mov
mov
jbe
inc
jp
or
sbb
sub
cmp
lret
imul
cli
mov
mov
jbe
inc
jp
or
sbb
sub
cmp
lret
jbe
inc
cli
mov
mov
jbe
inc
jp
or
sbb
sub
cmp
lret
imul
cli
mov
cmp
rolb
jge
xchg
leave
aad
vandnpd
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
or
cmp
pop
xchg
jae
mov
cwtl
or
sub
ret
stc
insl
or
cmp
imul
cltd
or
or
jge
insl
or
mov
les
imul
mov
pop
leave
adc
add
jge
sub
push
lret
rorb
push
addl
and
js
lea
std
adc
popf
xchg
pop
jne
std
mov
pop
ds
add
push
insl
inc
shlb
cmp
je
pop
add
out
mov
push
sub
loop
daa
mov
sbb
jns
cltd
clc
movsb
hlt
mov
sub
ret
sbb
inc
cmp
outsb
fisttpll
mov
add
sbb
push
ret
ss
cltd
enter
jge
sbb
jb
inc
fsts
sbb
cmp
popa
loope
repnz
les
cs
call
ljmp
push
fidivs
addr16
ret
cltd
jne
lods
lods
jg
imul
sbb
dec
fstpl
imul
cltd
adc
leave
inc
fsts
addr16
insb
dec
popf
insl
incl
push
enter
lods
or
jb
or
enter
mov
mov
in
into
push
ret
sbb
adc
enter
mov
dec
test
mov
insb
popf
sbb
add
std
jns
mov
mov
dec
jmp
popf
sbb
dec
fstpl
imul
cltd
or
leave
pop
jge
insl
or
push
scas
mov
cld
and
js
sub
je
out
sbb
jmp
adc
lret
movsl
test
xchg
sub
or
aas
fistpl
movsl
inc
push
mov
push
gs
js
lcall
shlb
addr16
xchg
sub
xor
loope
add
ja
xchg
jecxz
xor
aaa
out
ljmp
test
lea
stc
and
mov
push
sub
pop
into
sbb
sahf
push
pop
ja
test
mov
ret
add
leave
push
mull
js
or
sti
pop
mov
sbb
mov
pop
mov
cwtl
aaa
or
enter
insb
fisubl
ds
daa
cmpsl
addb
popf
sub
mov
out
roll
pop
push
mov
xchg
inc
addr16
and
in
bound
xchg
in
sbb
call
lret
mov
push
lods
jns
fwait
xchg
out
jle
push
pop
xorl
xor
cmp
xlat
sbb
xchg
and
push
rcrb
icebp
mov
imul
jo
push
cmp
adc
push
pop
xor
outsl
scas
into
int
xchg
inc
rorb
jbe
daa
sbb
sub
ds
test
test
mov
call
fcomps
lds
xchg
pop
pop
lods
mov
fmulp
dec
arpl
lret
lods
aad
dec
cltd
cwtl
je
fcompl
push
pop
or
inc
insb
shrl
sub
js
or
arpl
add
cmpsb
in
dec
shrb
das
gs
lret
dec
mov
push
call
scas
les
hlt
pop
bound
xor
jge
scas
xchg
ficoml
xchg
pop
add
icebp
lret
scas
repnz
lahf
mov
rcrb
ja
fstp
lret
sub
popf
dec
sahf
sub
push
bound
loop
lret
xor
sub
stos
cmpsb
mov
jnp
mov
push
daa
sbb
or
dec
add
pop
mov
xchg
adcl
testl
mov
xchg
mov
add
test
xchg
test
dec
and
stc
mov
mov
test
dec
and
adc
in
fsubs
in
and
push
aas
xor
jecxz
call
addr16
icebp
iret
xor
popa
scas
imul
test
outsl
lret
data16
jbe
in
xchg
xor
sub
stos
movsb
inc
out
dec
mov
adc
or
jne
sub
std
push
sub
std
out
stos
lret
cmp
andl
stos
outsb
push
xchg
jbe
imul
arpl
arpl
xor
mov
mov
or
xchg
imul
sarl
inc
addl
xor
fnstsw
andb
mov
or
into
mov
nop
add
shrb
mov
stos
cld
rcll
aad
cmp
lret
std
inc
sbb
cmc
popf
addb
and
xchg
inc
arpl
in
lret
jle
ljmp
pop
int3
xchg
dec
loope
push
jg
dec
ss
roll
in
push
pop
rcr
sti
adc
push
inc
outsl
adc
stos
push
dec
mov
pop
inc
pop
out
test
lahf
sub
adc
sub
jp
in
jp
mov
lret
push
mov
or
add
add
mov
shll
inc
push
shrb
mov
scas
insb
outsb
mov
xor
pop
sbb
inc
pop
mov
xchg
or
fdivrp
mov
into
mov
and
sub
pop
cmpl
mov
bound
mov
pusha
pop
stos
mov
loope
push
jmp
adc
xchg
jmp
test
sub
mov
mov
into
mov
out
mov
xchg
inc
lea
fcoml
sub
lahf
add
mov
sahf
js
test
cli
lds
mov
pop
pop
cmpsl
inc
in
mov
push
inc
les
mov
fistl
jnp
inc
sub
mov
xorl
xchg
adc
scas
mov
das
pop
dec
call
movsb
jl
mov
es
xorl
pop
inc
popa
push
sarl
and
gs
aad
pop
mov
cwtl
mov
xchg
aam
inc
add
or
mov
push
inc
sahf
push
sub
das
mov
and
cmp
stos
imulb
bound
and
and
jne
xor
and
pop
mov
pushf
in
ljmp
xor
push
addr16
push
cmp
test
mov
repnz
mov
stos
sbb
and
data16
ret
mov
iret
mov
sbb
sbb
popa
xor
dec
loopne
mov
cmp
outsl
cmpsl
sub
icebp
gs
stc
daa
nop
out
shll
push
sub
jmp
mov
inc
arpl
inc
or
push
mov
push
sbb
aaa
andb
std
dec
cmpsl
ljmp
aaa
stos
aam
jne
push
leave
jb
int3
jae
jecxz
pop
out
das
jae
xor
aad
subb
cmpsb
repnz
pop
add
and
sahf
pop
sarb
in
sub
iret
mov
lods
popa
shlb
jb
inc
push
push
mov
add
dec
ss
arpl
push
in
fisubl
mov
jns
rcrl
mov
sbb
sbb
mov
je
xchg
call
sub
xor
cwtl
sub
adc
lret
pop
mov
xchg
or
dec
out
mov
lahf
xchg
lock
inc
ljmp
jge
cmp
xchg
aas
loop
shl
jb
add
cmc
dec
xchg
lods
dec
mov
pop
aam
mov
mov
shll
scas
sbb
cmpsb
inc
int3
fildll
add
mov
or
ret
test
cmp
call
lock
push
mov
dec
out
cmpsl
mov
loopne
pop
xchg
into
js
dec
call
aaa
mov
and
push
imul
cmp
and
mov
jns
in
ds
lret
push
icebp
enter
jnp
xchg
dec
add
and
and
add
pop
jbe
pop
sbb
or
jg
jl
scas
out
scas
and
mov
cmp
dec
xchg
iret
adc
mov
and
ss
dec
pop
inc
adcl
adc
xor
or
mov
lock
push
adcb
mov
xor
dec
loopne
mov
jp
mov
xor
sbb
out
jge
and
or
les
fstpl
xor
movsl
aam
or
ret
fcoms
jge
mov
xor
fsts
or
pop
mov
push
das
imul
xchg
fwait
jle
mov
pushf
pop
push
mul
xor
js
cli
dec
and
insb
mov
inc
sahf
pop
into
adcw
es
jae
movsb
xchg
in
decb
jmp
pop
or
lods
into
mov
adc
dec
mov
shrb
rclb
xor
ja
xor
jle
dec
imul
push
xchg
mov
test
loope
outsl
ss
sbb
xchg
stos
mov
loope
mov
xchg
mov
sahf
pop
out
nop
data16
loope
call
pop
dec
ja
pop
insl
sahf
sbb
push
fsubs
push
dec
push
ja
in
ficomps
rorb
sahf
pop
lods
jg
mov
xchg
mov
je
xorb
or
pop
div
jmp
cmp
add
push
xchg
jmp
sub
fisubrl
cmp
and
add
jmp
dec
push
std
sbb
sub
lock
pop
jne
aaa
mov
aad
push
mov
jge
test
ss
cld
inc
nop
push
add
mov
cmpsb
jns
loope
nop
popa
dec
cmp
movsb
mov
cs
jns
cmpsb
lods
pop
scas
dec
push
adc
mov
ljmp
mov
sub
ret
cld
pop
cmp
add
and
out
pop
stos
lret
loopne
sbb
push
mov
add
nop
xchg
push
data16
movsb
xchg
add
mov
sbb
out
jge
mov
imul
jne
out
andb
xchg
mov
sbbb
adc
loopne
test
cmp
loopne
xor
stc
in
iret
dec
xchg
lods
xchg
pop
sbb
pop
es
scas
push
fcmove
dec
in
mov
loop
mov
xchg
or
jnp
xchg
fsubs
inc
or
push
xor
mov
out
or
inc
out
sbb
rorb
jns
dec
or
test
ljmp
mov
pop
jmp
call
sub
jmp
adc
jge
xor
sbb
and
mov
and
sub
add
into
mov
cmc
and
cmp
dec
aam
repz
mov
xor
cwtl
repz
pop
jno
ljmp
pop
jnp
call
jb
cmp
dec
clc
adc
adc
push
pop
jno
lret
jl
arpl
stc
mov
les
cmpsl
lds
insl
ret
xchg
cltd
loopne
in
enter
push
and
cmp
xor
jl
mov
inc
rorl
loopne
push
mov
jbe
into
popa
pop
daa
cld
imul
mov
xchg
mov
inc
aam
jecxz
or
push
movl
jns
sub
adc
fstpl
cld
call
inc
jb
test
adc
popf
stc
xchg
cld
out
sar
adc
adc
sbb
jb
jge
or
jge
bound
add
les
mov
rcll
pushf
xchg
in
adc
and
and
fcmovnbe
shrb
jmp
or
ret
es
push
call
in
in
dec
xor
push
xor
insl
cld
cmpl
fs
mov
add
jecxz
test
orb
mov
xor
lret
push
mov
mov
clc
jle
rcr
stos
clc
jge
push
jge
inc
das
dec
mov
xchg
sbb
mov
add
mov
sbbl
cmp
sbb
std
mov
arpl
mov
or
and
or
add
mov
jb
xchg
loope
popa
lcall
mov
xchg
dec
and
daa
sbb
mov
popf
mov
mov
cmp
popf
outsl
adc
shrb
movsb
sub
mov
or
pop
jnp
mov
fs
ret
inc
pop
inc
or
jne
jmp
jg
pop
test
inc
insb
cmpsl
mov
cmp
mov
xchg
mov
jge
mov
dec
xlat
shll
loope
mov
out
jb
std
mov
push
out
sarb
jg
push
div
push
xchg
outsb
jmp
mov
and
les
icebp
dec
out
or
sub
or
and
and
sbb
and
xlat
popa
inc
xor
push
pop
inc
mov
inc
test
in
mov
inc
shlb
mov
daa
xor
popf
push
push
mov
adc
js
dec
jmp
mov
adc
test
lea
xor
pushl
rcrb
cs
inc
and
adc
popf
add
mov
leave
xor
mov
fwait
inc
and
mov
in
mov
cmp
fdivr
loopne
fsubp
sub
sub
or
adc
repnz
arpl
lock
mov
fs
or
fcomps
fsubl
add
ds
push
jmp
ljmp
inc
lret
jmp
pop
in
mov
out
and
lret
sahf
movsb
ss
mov
and
test
or
xchg
pushf
mov
lea
cltd
pop
and
mov
inc
inc
jnp
jns
sti
mov
cwtl
fildl
rcrb
mov
adc
dec
add
sti
adc
iret
aad
xchg
insl
jbe
inc
push
xor
negl
in
or
daa
push
add
jg
mov
adcl
pop
or
pusha
xorl
mov
xor
jmp
and
pop
mov
fdivrp
xchg
inc
sbbl
and
lods
xor
cltd
pop
imul
stos
or
mov
sub
push
xlat
push
add
fildl
fists
sbb
adc
outsb
sbb
nop
pop
fsubrs
xchg
xchg
lea
cli
xchg
popf
mov
or
mov
test
cmp
jp
xchg
rcll
dec
xchg
adc
out
xchg
ss
cli
add
inc
mov
incb
shld
cmpsl
icebp
dec
out
cwtl
shll
xchg
es
shrb
mov
adc
aad
mov
xchg
daa
dec
mov
sub
sub
mov
mov
mov
xor
nop
ds
sahf
cmp
inc
repz
mov
ret
sub
jmp
dec
es
movsb
mov
popa
add
mov
rcrb
mov
cmp
xlat
xchg
lret
inc
adc
push
cmpsb
pop
icebp
rorb
jb
and
jno
adc
jne
push
shrb
rcrl
pop
push
jbe
fstpl
mov
mov
cltd
lahf
sub
test
xchg
mov
stos
mov
out
and
lret
stos
ljmp
or
jae
xor
sbb
pop
jnp
sub
jae
out
push
ljmp
int
xchg
sbb
je
adcb
sti
std
arpl
inc
ret
into
loop
dec
imulb
sbb
aam
push
xchg
lea
pop
mov
testb
test
shll
pop
pop
mov
xchg
repz
xorl
lcall
sub
shll
mov
cs
test
or
push
mov
jmp
subl
movsl
and
xchg
stos
loopne
inc
adc
push
outsl
aad
adc
lret
mov
jnp
lcall
or
cmp
rolb
fidivrl
lret
test
adcb
mov
leave
popa
jg
sub
cld
cmp
jne
mov
nop
jb
xchg
cmp
pop
iret
lock
loop
test
adc
es
stc
cmp
pop
mov
movsb
push
sar
test
adc
out
mov
int
mov
ss
addb
cli
add
mov
test
xlat
in
test
movsl
mov
mov
sti
fdivl
mov
cltd
test
imul
in
adc
loop
inc
cmp
insb
sahf
ss
pop
out
mov
insl
daa
movsb
sarb
xlat
mov
adc
push
cmp
insl
repnz
add
in
or
dec
dec
sub
dec
sub
mov
jmp
push
mov
ret
filds
dec
jno
mov
daa
jne
push
aad
cs
fwait
pop
or
cmpb
pop
dec
xorl
push
jg
and
gs
xor
pusha
rcl
insl
jmp
mov
push
lds
mov
cmpl
xchg
hlt
cmp
push
push
pushl
jecxz
sub
jle
into
mov
jbe
outsl
frstor
pop
mov
ss
jmp
sti
fnstsw
shrb
pop
push
xor
loopne
and
dec
jg
xlat
push
adc
loop
mov
and
dec
mov
xor
sahf
fcoms
lock
push
popf
sbb
push
daa
xchg
stc
xor
ror
push
outsb
add
pop
xchg
mov
fsubrl
lds
mov
adc
cmpsb
xchg
lcall
addr16
sub
push
xor
cs
sti
push
jg
push
pop
mov
sbb
push
loopne
inc
inc
nop
cmp
clc
gs
leave
lods
sub
out
xor
dec
sti
push
inc
inc
lcall
inc
test
fists
adc
outsb
cwtl
xchg
pop
iret
pop
shll
cs
pop
lds
dec
sahf
lret
ss
js
pop
bound
mov
mov
fiadds
nop
adc
push
jb
lahf
xlat
ficomps
lcallw
pop
mov
dec
pop
clc
nop
outsl
or
jns
cwtl
jo
add
mov
imul
sub
push
lods
dec
or
addb
add
cli
cmp
xchg
data16
dec
pop
test
icebp
lret
sarl
push
sub
pop
dec
xor
hlt
movsb
xlat
xchg
push
outsb
xor
jle
fwait
xchg
insl
movsb
mov
jnp
xor
sbb
dec
pop
daa
mov
sbb
movsb
or
test
fs
pop
dec
push
jb
rorb
loop
subl
mov
test
test
dec
lcall
cld
std
pusha
push
insb
cmc
pop
push
out
lret
notb
int
sbb
imul
cmc
mov
mov
mov
ret
dec
lcall
mov
ret
xchg
test
lret
mov
inc
fcmovnb
xchg
aas
mov
add
xor
mov
xchg
sbb
aam
xchg
mov
lea
pop
lret
mov
jmp
mov
jbe
inc
xor
rcrl
popf
popa
les
pop
shll
dec
cwtl
adc
cli
and
pop
pop
xchg
shl
stc
mov
dec
data16
xchg
das
xor
test
mov
popa
mov
shll
cmp
test
lret
sbb
cmp
mov
add
mov
mov
mov
inc
sti
ret
std
mov
jmp
pusha
dec
dec
and
cltd
sarl
push
cmc
scas
mov
or
cwtl
mov
pushl
xor
arpl
sbb
lds
mov
pop
repnz
pop
dec
pop
push
fldcw
clc
add
sbb
mov
sbb
in
icebp
leave
sbb
adc
loope
das
mov
mov
pop
pusha
mov
lcall
xor
and
dec
lcall
ficompl
sbb
arpl
aam
fiadds
cmp
insl
pop
fstl
int3
jg
jecxz
mov
inc
ficoml
sbb
xchg
push
inc
xor
xchg
push
push
mov
fdivr
fstpl
jnp,pt
mov
das
out
fldl
xchg
sbb
fistpl
mov
popf
jae
shlb
cmp
pop
enter
push
stos
cwtl
mov
push
or
mov
aad
jl
xor
mov
pop
push
sbb
cmc
mov
and
xor
rcrl
loope
sub
pop
pop
mov
mov
dec
cli
mov
lret
dec
mov
mov
cltd
and
mov
cmpsb
or
adc
xor
mov
push
mov
ret
andl
std
inc
pop
test
mov
cmp
push
pop
add
xchg
ljmp
iret
jb
or
mov
mov
je
cmc
mov
stos
push
stc
jp
sbb
lahf
sub
mov
dec
mov
sbb
int3
stos
test
mov
imul
testw
es
rcrb
nop
pushaw
lcall
inc
mov
test
mov
dec
movsl
loope
push
cmp
inc
bound
push
sti
inc
mov
adc
jbe
xchg
jl
scas
cmp
data16
insb
xor
xchg
mov
pop
push
inc
pop
sbb
inc
pop
pop
lcall
addl
xchg
mov
push
inc
testl
pop
push
mov
push
add
jmp
pop
je
mov
push
fwait
dec
std
fstpt
negl
ret
scas
aaa
hlt
stc
sub
sti
jns
xchg
adc
xchg
xor
mov
pmaddwd
addl
lcall
add
push
jbe
loop
mov
cs
lock
push
mov
test
das
xor
jne
sbb
add
inc
dec
mov
fiaddl
in
jecxz
scas
icebp
out
push
ss
hlt
int
lahf
out
shl
push
fadd
rorb
jmp
push
add
into
mov
in
cmp
lock
rcl
aam
or
jmp
es
push
lock
cmp
jle
pop
inc
mov
lahf
add
pop
mov
or
or
divl
dec
sahf
movsl
mov
push
pop
rcrb
dec
movsb
filds
sub
pop
ja
cwtl
notl
shlb
cld
sbb
sub
jmp
mov
xchg
jecxz
and
andb
mov
mov
dec
xchg
xchg
cmp
xchg
ja
dec
inc
aam
inc
mov
dec
cmp
and
or
jmp
push
mov
mov
push
add
icebp
push
shl
pop
inc
cwtl
or
sbb
mov
ja
arpl
addr16
in
test
ret
inc
sub
cltd
mov
push
js
jno
push
xor
sub
sbb
sbb
cwtl
gs
adc
rcrb
jne
mov
or
das
add
mov
pop
int
std
jns
mov
mov
dec
jmp
popf
sbb
dec
fstpl
imul
cltd
or
leave
pop
jge
insl
or
cmp
imul
cltd
or
leave
pop
jns
imul
mov
pop
int
std
jns
mov
mov
xor
mov
addr16
push
pop
inc
jle
add
pop
dec
pop
mov
movsl
jmp
movl
xchg
ja
addr16
push
pop
inc
ja
addr16
push
pop
inc
pop
mov
cmpsl
out
testl
xchg
outsb
daa
addr16
dec
pop
pop
ja
addr16
push
cmova
out
loop
div
xchg
leave
xchg
shrl
pop
and
js
xor
mov
jl
insb
popf
roll
fwait
aas
imul
call
mov
scas
or
punpckhwd
js
mov
xchg
xchg
lret
dec
loopne
or
and
daa
popf
arpl
jmp
jb
daa
xchg
inc
mulb
movl
pop
pop
cwtl
out
dec
inc
clc
inc
cmpsl
sub
jbe
js
cmpsl
in
pop
das
sbb
mov
cmpsl
mov
inc
fldt
jp
out
xchg
or
cmpsl
fbld
sub
filds
pop
or
push
mov
mul
repz
adc
mov
adc
xchg
hlt
ja
jo
inc
pop
pop
ja
addr16
push
push
inc
push
mov
cmpsl
call
scas
out
xlat
xchg
jecxz
adc
push
inc
inc
adc
dec
cmp
push
sahf
ret
add
jno
cmpsb
hlt
mov
mov
inc
rcpps
daa
inc
inc
adc
adc
imul
rolb
lds
loop
ss
add
bound
xor
daa
push
pop
inc
pop
mov
cmpsl
out
xlat
xchg
divl
movl
ja
addr16
push
pop
inc
pop
mov
cmpsl
out
xlat
xchg
divl
movl
cmpsl
or
dec
push
bnd
pop
xchg
arpl
cmp
mov
push
scas
sbb
rcrl
test
ret
mov
xchg
pusha
dec
mov
sub
leave
cs
jecxz
mov
enter
sbb
cld
push
and
xchg
sbb
pop
jp
loope
stos
repnz
jecxz
xchg
mov
out
test
inc
adc
fistps
mov
fiadds
sub
mov
and
adc
or
push
xchg
enter
xchg
cmp
mov
sub
frstor
leave
out
or
sub
sti
or
outsb
cmpl
and
pop
push
cmpsb
push
cmp
add
pushf
sbb
mov
std
daa
sub
inc
lahf
sub
js
mov
bound
lods
xchg
repnz
mov
push
pop
push
push
push
pop
data16
mov
pop
push
pop
jl
xchg
lds
xor
inc
scas
mov
jae
ret
xlat
cli
jnp
add
or
rorl
lock
adc
adc
stos
mov
out
cmp
push
cltd
and
jecxz
mov
bound
movsl
inc
packuswb
adc
lcall
inc
mov
outsb
les
dec
xor
and
xor
push
dec
ljmp
mov
ret
push
inc
daa
test
sbb
pushf
pop
inc
cmp
sahf
dec
adc
call
jno
or
mov
sbb
mov
or
mov
xor
orb
add
test
sahf
in
pop
fstps
or
fstps
stc
push
int3
stos
pop
xor
ljmp
outsb
xor
jge
dec
pop
inc
addb
mov
and
in
mov
jp
mov
xchg
out
iret
mov
mov
scas
mov
daa
dec
dec
scas
cmp
push
inc
mov
hlt
mov
cmp
adc
pop
arpl
cmp
lods
ficoml
sbb
jbe
sbb
in
shll
push
cltd
add
mov
cmp
push
out
pop
imulb
inc
fwait
arpl
cmc
xchg
inc
in
pusha
lcall
add
jle
push
mov
dec
mov
push
inc
daa
lahf
and
sbbb
repnz
ret
mov
inc
repnz
sub
cltd
enter
and
mov
pop
jbe
inc
popa
or
enter
push
call
arpl
adc
lret
xor
addb
cmp
or
push
shr
jbe
jns
gs
test
les
and
lret
je
mov
aad
lcall
stos
stos
lods
insb
mov
pop
cwtl
test
ss
push
inc
inc
inc
fwait
mov
repz
stos
repz
inc
pop
and
ret
mov
dec
test
aas
jge
push
adc
or
jp
or
mov
out
xchg
fwait
and
jge
mov
shll
hlt
inc
mov
pop
add
add
xchg
mov
insl
add
sub
adc
rolb
jecxz
sbb
adc
lret
shlb
xchg
out
shrb
sbb
enter
jno
add
xchg
repnz
cmp
mov
jmp
and
pop
mov
mov
mov
insb
mov
xchg
sub
insb
add
addb
push
out
arpl
push
lods
pop
add
mov
add
int
mov
cmp
and
push
bound
es
sbb
ljmp
push
pop
orb
lret
mov
mull
iret
or
orb
lret
push
lahf
roll
adc
aad
stc
in
lds
or
sub
mov
dec
int
scas
stos
sbb
ds
push
in
sbb
call
loopne
loopne
mov
in
int3
nop
and
in
push
out
jo
ss
cltd
mov
call
sub
mov
int
add
sar
je
inc
int3
ret
adc
inc
add
inc
popf
cmp
jle
mov
inc
jno
orb
mov
in
mov
mov
stos
jge
popf
jo
mov
lretw
adc
scas
and
in
rolb
push
and
js
and
shll
jno
and
repnz
insb
push
mov
xchg
popf
lds
es
mov
fstps
add
sarb
adc
xchg
push
sarb
sub
pop
in
push
mov
inc
dec
and
data16
sbb
test
es
leave
sub
sbb
sbb
push
mov
shlb
shl
cmp
ret
mov
clc
fcmovne
int3
loopne
test
fwait
pop
jge
aaa
jnp
jae
sub
jae
jecxz
inc
push
jnp,pt
daa
adc
movsl
dec
arpl
mov
sti
fwait
inc
xchg
lcall
int
repz
xor
rcll
rcrl
nop
sbb
nop
loopne
in
mov
mov
lret
loop
data16
cmp
jb
push
cli
fsubs
push
scas
es
xorb
popf
pop
dec
and
mov
cmp
adc
add
lret
test
ss
pop
xchg
mov
jne
es
sarl
or
xorl
or
aad
test
stos
sahf
jg
flds
ret
mov
inc
inc
cmp
xor
fldl
ja
stc
mov
pop
jbe
cld
sbb
xchg
jbe
out
insl
xchg
and
jl
in
sbb
pop
push
popa
jmp
xchg
add
out
and
sub
pushf
mov
nop
lcall
int3
popa
or
ret
pop
shrb
xor
int
js
sbb
loop
out
jle
mov
xor
jl
jmp
adc
mov
inc
add
inc
sbb
aas
cwtl
fnstenv
sbb
xor
xor
add
fwait
adc
jnp
sub
xor
push
xchg
sub
dec
out
jne
add
mov
and
add
clc
cmpsl
mov
std
rcrl
pop
add
aaa
fsincos
push
inc
mov
aas
and
mov
aam
outsl
mov
mov
and
jne
xchg
adc
pusha
mov
divl
leave
push
dec
mov
test
and
cmp
xchg
mov
ficoml
sub
das
push
icebp
pop
xor
repnz
aaa
mov
in
ljmp
aam
xor
adc
jno
xchg
pop
lea
cmp
leave
jns
push
sbb
stos
lea
sti
test
sub
xor
lahf
inc
lods
push
stos
out
inc
pop
es
shr
xchg
addr16
push
fistl
pop
mov
inc
push
cmp
mov
push
insl
cmp
scas
sub
pushl
stos
pop
dec
call
fnsave
jl
pop
clc
or
jnp
or
adc
fsub
mov
out
xor
jnp
mov
rclb
mov
call
adc
loope
nop
roll
stos
cmp
mov
cs
insb
shrb
xchg
mov
dec
sbb
push
dec
fmull
jg
push
ljmp
punpckhdq
and
or
shll
in
xchg
test
scas
scas
inc
in
xlat
aas
loop
out
xchg
push
push
xor
stos
mov
test
mov
or
test
cs
ljmp
mov
or
aaa
cwtl
rorl
or
cmp
cwtl
addb
mov
push
mov
jo
mov
jnp
insb
int
dec
xor
sub
mov
int3
inc
sbb
mov
and
loope
or
pop
inc
cmp
scas
shll
roll
xchg
jo
push
cmpsb
fs
and
dec
inc
push
jp
aad
mov
mov
and
out
aaa
fildll
fistl
dec
cmp
jp
enter
mov
xchg
psubd
sub
push
and
and
fwait
sbb
out
jmp
loope
mov
sarb
jge
nop
sahf
push
or
bound
adc
hlt
dec
push
jns
test
and
call
lret
subb
pushf
push
push
and
pop
fcompp
jns
push
lods
pop
inc
push
xlat
inc
jo
lods
ficompl
movsb
dec
xchg
sbb
sahf
lock
in
cli
inc
pushf
adc
mov
jne
mov
test
sub
int
repnz
mov
neg
test
int3
jnp
into
or
xor
sahf
cli
lods
fistpll
pusha
popa
pop
mov
sbb
mov
xchg
cmp
xchg
inc
jno
popf
jb
clc
ret
mov
mov
sub
and
shlb
insb
bswap
fstpt
int
push
push
cmp
fimuls
xchg
sbb
fistpll
or
mov
fsubs
bsf
inc
int
scas
mov
inc
nop
stc
push
ret
add
cltd
adcl
add
lds
fisubrl
sbb
insl
push
add
ret
pusha
xor
imul
gs
adc
ret
das
aam
inc
iret
aas
incl
orb
pop
pop
repz
sub
jb
push
mov
mov
dec
sub
pop
fwait
das
jno
stc
sub
scas
and
cmp
mov
lods
dec
inc
testl
push
andb
add
jbe
pushf
jmp
xchg
jle
fsubs
or
popl
mov
dec
jbe
dec
mov
pop
cmc
aaa
mov
mov
xchg
in
loopne
xor
fwait
es
lds
mov
xchg
ds
mov
getsec
stos
aaa
loop
push
pop
lcall
mov
int3
loope
test
jo
nop
outsb
jnp
sbb
pop
repz
pushf
xor
pause
jp
ljmp
cmp
push
pushf
dec
push
mov
push
ljmp
es
cld
loope
roll
int
lcall
push
push
fdivr
cld
and
and
jmp
ljmp
mov
movsb
flds
mov
ret
mov
and
dec
lds
scas
jae
jnp
pop
pop
mov
jle
scas
ss
sahf
jnp
push
mov
jmp
into
andb
ficomps
in
dec
ljmp
andb
in
xchg
push
cmp
jae
xor
and
adc
dec
fcoms
rclb
test
mov
mov
daa
ret
loopne
jbe
cmp
ljmp
ficomps
sub
sbb
dec
iret
mov
repnz
lret
xor
inc
nop
outsb
fsubp
mov
ficoms
std
mov
testb
jnp
pop
adc
add
lds
lahf
dec
pusha
loop
jp
xchg
push
into
xchg
ljmp
scas
addr16
pop
mov
iret
std
outsl
movsb
adc
sub
movsb
sbb
lds
mov
test
ds
mov
nop
movsl
cmp
andl
repz
dec
fcomi
jmp
rcl
and
pop
adc
xlat
loop
test
ja
sti
xorb
and
push
mov
inc
clc
pop
aaa
cmp
push
in
jnp
adc
add
jge
cmpl
cmpl
mov
repz
push
loop
call
out
cmp
in
sarb
flds
jnp
push
adc
repnz
ret
mov
or
das
xchg
test
push
or
or
pop
xchg
fsubrp
in
sub
int
inc
pop
sahf
outsl
pop
cltd
push
idivb
cli
xchg
jge
fstp
icebp
xchg
aas
mov
xor
outsl
push
out
mov
sub
cmp
mov
or
mov
dec
inc
pop
stos
mul
push
nop
jne
cmp
add
loopne
jbe
shlb
or
loope
push
jcxz
mov
fwait
cmp
rcrl
inc
sbb
mov
or
push
mov
cld
jge
inc
lock
add
pop
jge
jmp
and
sbb
and
inc
or
outsb
stc
mov
or
mov
cs
xchg
sub
rcl
and
xor
sahf
or
cmpb
lmsw
iret
dec
mov
out
je
ret
inc
das
enter
jle,pn
rcrl
inc
shrl
sbb
push
imul
jl
enter
jle
icebp
inc
pop
test
repnz
mov
testl
ret
fsts
scas
out
div
mov
jge
pop
mov
das
mov
xchg
jno
push
inc
stos
or
push
stos
inc
cmc
ss
nop
xchg
xchg
mov
out
xchg
and
jp
pusha
sbb
aad
cmp
test
aas
add
and
mov
ja
adc
je
and
jecxz
les
arpl
sbb
sahf
sti
ret
outsl
dec
popf
mov
sub
rorl
rcll
or
daa
mov
cmpsb
imul
out
dec
mov
inc
fisubl
ss
pop
pop
loope
leave
xchg
xchg
add
nop
or
add
int
xor
jne
xorl
mov
and
sbb
mov
jecxz
mov
mov
lea
loop
jmp
adc
jo
outsb
int
pop
sub
xor
ja
aad
cmpsb
sarl
das
sbb
sbb
das
mov
lea
icebp
fnstsw
xchg
or
daa
jg
push
movsb
pop
cltd
inc
mov
inc
mov
test
adc
aad
les
and
cmp
and
and
dec
xchg
cwtl
dec
xchg
push
push
sub
mov
inc
mov
stc
mov
cld
imul
jae
xor
lret
stc
dec
int
fs
mov
adc
add
ret
push
stos
imul
mov
sub
sti
std
int
cmp
mov
xchg
pop
mov
xchg
cmp
xchg
add
mull
push
std
scas
inc
push
jo
cmpsb
adc
xchg
sbbl
inc
adc
std
and
push
pop
xchg
jge
pop
mov
add
mov
stos
dec
loop
mov
std
enter
fnstsw
imul
mov
mov
xchg
inc
loopne
repz
fsincos
fistpl
out
nop
cli
mov
mov
rorl
jbe
bound
or
or
xlat
ss
das
sub
pop
or
test
pop
outsl
in
cwtl
xchg
or
leave
inc
push
mov
rcll
cmp
xchg
mov
outsb
or
add
add
mov
mov
fsubrs
cli
xchg
xchg
pop
insl
jecxz
scas
mov
repz
push
mov
sbb
add
push
cmp
daa
loopne
mov
inc
mov
jmp
arpl
aaa
sbb
cmp
pop
test
xchg
cltd
popf
sub
lea
pop
cmp
adc
cwtl
out
xchg
mov
xlat
pop
cmpsl
push
cmc
sub
pop
fs
push
outsb
push
mov
in
int
mov
jmp
insb
xor
mov
mov
ret
and
popf
addl
add
dec
mov
ss
out
loope
jge
cs
lahf
stc
sahf
jo
xchg
jno
jge
dec
pop
ja
add
addr16
pop
fbstp
popl
bound
add
mov
pop
or
lret
loope
lahf
mov
push
out
dec
inc
mov
in
orl
jmp
fs
call
loopne
sbb
popf
jge
stos
callw
sbb
cld
loop
data16
inc
and
sahf
arpl
gs
ja
mov
ds
xchg
mov
rorb
fldenv
cmp
xlat
cmp
fwait
or
push
pop
adc
dec
xor
int3
push
sub
jp
xchg
cli
add
dec
jno
xchg
push
mov
jecxz
cmpsb
mov
push
addb
adc
inc
repz
xchg
jbe
jecxz
add
adc
mov
insb
negl
or
ficoml
inc
les
or
sbb
inc
mov
or
out
sahf
add
leave
fnstsw
lret
and
aam
dec
stc
leave
out
jp
insl
pop
aad
out
popf
adc
fists
sub
repz
loope
cwtl
es
call
xlat
mov
shll
sbb
sbb
mov
push
insb
mov
daa
sti
adcb
cwtl
das
adc
dec
sub
pop
int
sbb
adc
cmp
fwait
lahf
pop
loop
push
xor
scas
xor
push
pop
inc
cmpsb
mov
mov
mov
inc
aad
jb,pt
pop
cwtl
or
shll
sub
pop
lar
xor
jge
dec
call
push
sbb
jge
mov
lahf
fstps
mov
xor
push
daa
dec
inc
pusha
insl
lock
inc
rcr
out
jge
repz
mov
aas
out
rsm
xchg
divb
ffree
mov
dec
cmp
cmp
outsl
rcrb
insl
mov
and
cld
xchg
lret
inc
mov
stos
sub
nop
dec
and
clc
inc
loope
outsb
std
mov
lods
xchg
pop
xor
dec
enter
push
lret
movsl
js
sbb
in
or
mov
jg
movsl
sbb
and
adc
adcl
pop
cmp
jno
loop
aaa
sbbb
mov
cmp
gs
aaa
rcrl
push
mov
or
jmp
sub
push
add
ret
gs
sbb
mov
test
mov
int3
mov
daa
repz
xlat
push
test
subl
dec
rclb
lea
aad
push
test
mov
test
divb
lods
pop
mov
fnsave
lcall
iret
cwtl
movsl
push
push
cmpsl
rorb
inc
ret
stc
push
das
jns
jne
or
ljmp
adc
sbb
mov
out
out
hlt
adc
dec
shlb
loopne
ja
loop
cltd
xor
popfw
stos
and
xchg
mov
lahf
and
cmp
and
aad
xchg
clc
jb
cmp
decb
and
sub
jnp
idivb
sub
dec
push
loopne
mov
inc
cmp
mov
lods
mov
stc
xor
frstor
sbb
pop
sbb
add
in
outsl
xchg
in
repnz
ljmp
adc
adc
add
mov
push
sbb
xor
jb
push
rcll
push
cli
push
mov
fisubrs
cltd
testb
pop
xor
pusha
inc
popf
sarl
sti
xor
test
jne
inc
jle
mov
push
sahf
ret
sbb
xchg
lret
sbb
iret
inc
push
scas
add
je
out
jno
iret
xor
in
mov
pop
int3
pop
mov
sub
stos
scas
or
xchg
shl
dec
std
mov
pusha
js
call
dec
daa
xchg
mov
mov
xor
lret
mov
sbb
jnp
dec
lock
pop
in
mov
sar
jae
push
cmp
mov
dec
test
loope
fdivrl
xchg
lret
dec
cli
in
je
aas
out
cld
scas
push
mov
jl
int3
mov
cmp
cmp
test
mov
sbb
push
and
xchg
pop
pop
xor
int3
dec
fldl
out
jge
xor
pop
fcmovnbe
lcall
xchg
xchg
sarb
enter
sysret
popf
and
sub
pop
jecxz
inc
pop
gs
cmp
jo
jge
xlat
cmp
adc
jmp
adc
cmp
sub
fwait
popf
mov
add
inc
mov
mov
jnp
fstps
xchg
inc
inc
stc
jnp
pop
pop
outsl
mov
xorl
dec
lods
xchg
dec
push
outsl
cmpsl
dec
insb
ret
scas
ficoml
jl
int
jmp
sub
inc
or
cmp
or
xchg
mov
xor
cmp
popf
pop
popa
mov
cmp
out
jg
aam
bound
inc
sbb
mov
dec
aam
mov
fcoms
fcmovne
jae
cld
mov
mov
loop
push
aas
enter
repnz
xor
shrl
lcall
cmpsl
into
loope
xchg
in
mov
aad
daa
mov
mov
mov
xchg
das
stc
jo
and
push
in
pop
ljmp
outsb
xchg
scas
mov
test
mov
int
lea
aam
or
das
mov
and
scas
adc
aam
sub
fisttpl
imul
les
lahf
movsb
push
int3
gs
and
ret
lds
das
inc
aam
inc
push
movsb
popa
adc
sahf
fdivl
and
mov
adc
dec
inc
and
pop
popf
sbb
test
das
ljmp
push
sub
cmp
inc
xor
cmp
mov
xchg
dec
mov
xor
es
rcrb
sahf
pop
xchg
ret
mov
adcl
ds
jae
sub
mov
jge
inc
enter
or
xlat
scas
push
loope
repnz
mov
mov
inc
xchg
cmp
inc
jg
mov
cwtl
mov
sbb
jno
sub
mov
push
inc
xor
out
fisubrl
add
roll
icebp
mov
cld
ds
iret
xor
add
cltd
mov
ljmp
pop
or
je
fnstenv
sbb
or
push
cli
mov
loope
xor
sub
ja
addr16
push
pop
inc
pop
mov
cmpsl
out
xlat
xchg
divl
movl
ja
addr16
push
pop
inc
pop
mov
cmpsl
out
xlat
xchg
divl
movl
ja
data16
push
pop
inc
pop
mov
cmpsl
out
xlat
xchg
divl
movl
ja
addr16
xlat
pop
movl
cmp
aas
outsl
pop
das
push
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
sub
aas
fmull
in
pop
jl
inc
or
mov
insb
lahf
jl
or
push
iret
sub
cmp
int3
aas
fsubl
pop
cld
outsl
mov
dec
lods
pop
enter
jl
insb
lahf
jl
arpl
sbb
insb
fistpll
pop
int
popf
inc
jno
pop
mov
lret
xchg
pushf
aas
out
cli
je
pop
cmpl
jae
setns
imul
fs
scas
adc
lock
ret
inc
ret
int
mov
inc
inc
jmp
in
sar
pop
imul
insb
adc
and
jp
or
cmpsb
fistpll
movsb
inc
or
sarl
ljmp
sbb
in
jecxz
repz
int3
ljmp
hlt
mov
pop
inc
scas
mov
or
pop
popa
adcb
jmp
into
fildll
fnstenv
xor
mov
neg
les
dec
stos
fidivrl
lcall
rorb
popa
push
std
loope
nop
lret
xchg
pop
mov
push
pushf
dec
mov
bound
fdivrl
punpckhbw
testb
stc
cmp
lret
stc
jl
xor
and
in
sub
push
inc
sahf
dec
fdivrl
rolb
clc
adc
cmp
pop
fldcw
sbb
adc
cmpsb
insl
mov
popf
jge
jle
push
jecxz
scas
mov
sub
or
pop
nop
push
cmpsb
dec
sahf
push
inc
lcall
cmp
jg
dec
lods
pop
mov
insb
lahf
jl
or
sbb
sub
cmp
int3
aas
fmull
in
pop
cld
outsl
mov
dec
lods
pop
mov
insb
lahf
jl
or
sbb
sub
cmp
int3
cltd
or
dec
mov
pop
int3
shlb
in
pushl
or
sbb
add
icebp
repnz
fildl
mov
pop
lret
sbb
mov
clc
jb
add
pop
jb
lcall
push
xorb
out
enter
jle
ret
pop
fbld
push
jmp
push
aas
jp
xor
sbbl
iret
or
inc
lahf
and
ljmp
out
xchg
out
fwait
push
adc
push
lahf
add
cmp
cvttps2pi
insl
sub
je
xlat
cld
test
inc
je
call
and
push
lds
cmp
mov
pusha
cmc
jae
fs
xchg
roll
dec
cli
mov
inc
or
xlat
jecxz
and
imul
sti
sub
sbb
sub
xchg
inc
into
movsl
into
repnz
xor
fsubrl
sbb
out
repnz
cmp
popf
inc
mov
jbe
mov
mov
dec
or
push
push
in
enter
cmp
push
movsb
mov
loop
add
jbe
mov
push
sub
stc
sbbb
dec
or
movsb
fcompl
test
iret
mov
mov
mov
and
jnp
mov
cli
filds
ja
sbb
and
in
mov
dec
cmp
sbb
push
sub
jmp
outsl
sub
sub
movsl
repz
dec
pushf
scas
stos
pop
pusha
mov
add
add
adc
jecxz
jmp
mov
call
scas
mov
int
mov
push
enter
repz
mov
mov
xchg
lret
mov
push
loopne
ja
cwtl
push
lock
dec
dec
dec
or
mov
jns
pop
or
loope
mov
xor
insl
movsb
jp
insl
inc
dec
inc
xchg
push
and
call
inc
push
or
out
inc
mov
push
std
inc
cwtl
es
mov
sbb
mov
push
pop
stos
sbb
and
mov
cmp
data16
test
mov
ds
or
jl
push
shll
push
ds
out
iret
int
std
loopne
test
push
mov
xor
push
cmpsl
pop
scas
sub
mov
xchg
xchg
and
lret
mov
hlt
ja
test
xchg
mov
pop
in
call
sti
mov
idivb
jle
cld
push
dec
stos
lds
push
test
in
fstpt
mov
je
pop
cltd
push
fisubrl
sti
in
mull
mov
dec
jno
popa
pushl
push
inc
out
daa
add
mov
add
adc
leave
rorl
lods
push
dec
aad
xor
ret
cltd
ljmp
fildl
xor
xchg
push
and
jmp
sub
mov
mov
pop
daa
pop
mov
xor
outsb
jae
or
movb
pop
aad
add
xchg
pop
jecxz
sub
add
data16
shrl
out
xchg
stos
cmp
cmp
in
pop
cmp
push
ja
loop
daa
xchg
add
loop
inc
adc
loopne
pop
lods
test
sarl
andb
or
mov
sbb
enter
push
push
adcb
les
xchg
les
inc
pushf
in
das
popf
mov
arpl
out
jecxz
mov
jb
into
jmp
int3
loope
test
xor
sbb
mov
int
int
icebp
stos
sub
dec
ret
cmpsb
dec
sahf
and
cli
adc
mov
je
outsl
sar
stos
dec
loop
das
mov
cmc
xchg
sub
pop
cli
je
and
pusha
xchg
inc
stos
xor
sub
or
sahf
ficoms
push
aas
decb
pusha
push
jnp
cmpsl
test
sub
jecxz
lea
movsb
xchg
inc
cmpsl
sbbl
inc
cwtl
push
loopne
mov
cmc
mov
shrb
xchg
pushf
push
insl
xchg
pop
shll
mov
mov
adc
lock
mov
in
stos
das
pop
jae
andb
sub
repz
mov
aad
push
and
sub
jl
adc
pop
cmpsb
movsb
mov
dec
cmp
cmpsl
inc
pusha
jo
stc
jg
arpl
push
pop
add
jo
js
fmull
jns
push
aam
cs
fcomi
imul
stos
fdivs
popa
imul
out
arpl
lahf
int3
push
jle
pop
idivb
dec
xor
sarl
sub
loopne,pn
or
ljmp
jmp
aad
mov
jns
aas
xor
lock
mov
xor
mov
push
mov
cld
outsl
cs
sub
pop
scas
jne
mov
les
dec
dec
mov
sub
add
test
scas
inc
out
jne
outsl
mov
mov
loope
je,pt
jne
test
rcll
mov
loop
push
cmc
lods
xchg
addl
js
push
mov
lahf
movsb
fistpl
int3
add
stos
call
and
inc
in
movsb
rcrb
js
sub
in
loop
loop
xchg
jns,pn
lret
mov
inc
iret
jle
push
and
pop
jbe
insl
jmp
rcl
dec
pop
gs
pusha
adc
frndint
pop
cmp
sbb
iret
negl
out
xor
lcall
mov
xchg
cmp
lock
mov
pushl
repz
jns
adc
stc
inc
pushf
pop
lret
mov
cmp
mov
das
xchg
outsb
lock
ss
in
or
jecxz
mov
pop
push
xchg
fwait
mov
rorb
inc
pop
scas
or
mov
mov
xchg
scas
jmp
or
mov
or
inc
push
add
adc
mov
mov
adcb
ja
xchg
cli
push
das
push
mov
cmpsl
mov
mov
lods
loopne
lock
clc
popl
sub
jb
cmpsl
divb
out
fdivrs
xorb
xchg
or
jle
or
cmp
push
lret
out
fcmovnb
add
or
cs
insb
enter
fsub
loop
shrl
ror
pop
mov
sahf
mov
push
leave
pop
jno
inc
les
or
and
imul
or
std
clc
and
jae
ds
je
adc
xor
shl
fildll
cmp
jp
push
in
rcll
sbb
rorl
xor
fcmovb
lock
popf
stos
sti
jnp
xchg
cmp
sbb
ds
loop
in
sbb
cmp
push
loope
fstpl
fadds
adc
inc
iret
cld
fsubrl
divl
gs
jg
sub
dec
rorl
int3
stos
enter
sbb
mov
pop
adc
push
ds
repnz
sbbb
jno
imul
aaa
adc
hlt
cmp
xchg
push
mov
aad
fcmovbe
testl
cmc
nop
cmp
cmp
aam
addb
dec
movsb
rorl
jae
outsb
cwtl
push
int
test
mov
cld
dec
cmpb
rcll
aaa
fwait
das
scas
mov
jbe
lahf
leave
mov
addl
push
jnp
shrb
scas
scas
jnp
pop
out
fs
insb
stos
cmp
les
aam
mov
inc
jg
xchg
hlt
stc
insb
loop
ret
aam
inc
or
push
and
movsb
or
xchg
daa
sbbl
stos
cmpsl
pop
add
and
popf
cltd
repz
push
pop
or
inc
rclb
gs
jmp
xchg
in
and
les
in
add
jnp
or
sbb
ss
fisttps
sarb
imul
test
jmp
enter
cmp
push
ljmp
aad
xchg
xchg
idiv
mov
xlat
dec
popf
add
mov
lahf
in
lods
jl
imul
and
idiv
out
pop
out
insl
incb
movl
into
fldenv
adc
push
jno
or
pop
ret
rorb
xchg
adc
adc
pop
addb
mov
mov
jle
out
mov
mov
dec
pop
aaa
icebp
dec
andl
mov
dec
push
pop
jbe
mov
mov
negl
clc
jb
insl
xchg
pop
add
mov
push
xor
dec
das
enter
push
xchg
push
ffreep
dec
int
dec
ret
bound
jae
lcall
data16
sbb
mov
pop
notl
into
pop
pushf
push
addb
sub
insl
fimuls
dec
push
test
sub
bound
fs
subl
jae
ficomps
push
mov
xor
in
adc
fisttps
mov
in
decl
ficoms
and
sbb
pushf
shll
fmull
into
int
sub
sbb
ja,pt
lods
lods
test
jns
dec
sarb
jle
xor
fstpl
jae
mov
jns
and
sbb
lahf
popa
movsl
adc
lds
jge
aad
fdiv
ret
adc
mov
pusha
mov
cmc
xchg
jno
outsb
loop
gs
and
xchg
aaa
push
or
clc
inc
xchg
popa
sub
jnp
jno
ljmp
cwtl
ljmp
mov
das
xor
inc
js
cmp
je
lock
imul
xchg
adc
sbb
test
cmp
sub
enter
mov
mov
sbb
popa
cltd
insl
cwtl
add
adc
int3
shlb
cmpsl
lret
imul
subl
push
call
mov
sub
lea
cmp
fmul
ss
xchg
inc
xchg
ret
sub
iret
loope
shlb
dec
outsl
test
lahf
enter
shlb
les
repz
push
inc
stos
lahf
pop
xchg
je
jae
and
jns
iret
xor
dec
push
sub
mov
shr
or
gs
pusha
sub
jp
or
sub
adc
je
ljmp
dec
movsb
andl
push
cltd
pusha
out
jge
push
inc
adc
and
pop
jbe
fnstsw
in
outsl
mov
repz
cld
test
jecxz
inc
add
movsb
pusha
hlt
jne
push
in
sub
mov
push
ljmp
hlt
cmp
mov
es
and
int
mov
inc
mov
cmp
and
or
orb
lds
outsl
or
imul
sbb
test
xchg
sbb
inc
popa
js
sbb
hlt
lret
mov
mov
push
xchg
ficomps
mov
js
push
in
and
xor
mov
stc
in
sbb
and
ud2
xchg
aaa
jp
xchg
mov
jae
jl
out
jl
or
mov
or
lea
inc
sbbb
sbb
into
sub
push
xchg
rcrl
loope
mov
jns,pt
xor
insb
mov
inc
dec
add
in
adc
sub
ret
mov
shrb
mov
xchg
sti
cmpsb
sbb
imulb
cmc
sbb
leave
pop
sub
push
dec
int
sahf
pop
jp
lock
push
in
iret
pop
jmp
das
mov
lock
pop
jp
push
dec
in
add
mov
js
push
fidivs
movsl
push
test
jne
daa
cmc
xor
push
fbstp
and
testb
in
xchg
xchg
repnz
out
cs
cld
outsb
cltd
aas
and
pop
sub
cmp
sub
add
mov
and
es
push
jae
int3
decl
int
sarl
jno
pushf
push
pop
sbb
ds
cmc
cwtl
movsb
int3
or
in
or
cwtl
cld
insb
outsl
sbb
les
mov
cmpl
jp
mov
or
fmuls
jp
rorl
adc
add
or
or
mov
roll
xchg
mov
mov
rorl
fimull
movsb
aaa
xor
pushf
sub
out
fstl
sub
lret
movsl
mov
movsl
push
lret
sbb
push
pusha
jg
imul
pusha
push
fwait
jae,pn
es
movsb
lock
lods
inc
xchg
out
movsb
mov
sti
idiv
lods
aam
push
xor
fwait
and
in
dec
pop
shll
nop
inc
jb
mov
dec
and
mov
xchg
hlt
inc
pushf
lds
jmp
cmc
ret
adc
jbe
cld
sti
stos
jns
cli
nop
mov
inc
lcall
cld
loop
insb
sbb
inc
lret
push
adc
orl
lock
jmp
add
aaa
push
cmp
push
sbb
xor
sub
lods
sti
xor
mov
jecxz
sub
je
inc
mov
adc
mov
cmc
xor
cmc
icebp
fmul
sti
xchg
and
sub
inc
jmp
xchg
jne
xor
push
add
cwtl
mov
mov
inc
jbe
fstl
dec
out
lods
jecxz
mov
mov
cwtl
dec
loopne
cs
cld
jno
dec
mov
outsb
minps
in
daa
mov
rcll
enter
push
jns,pt
push
cmpsl
push
pushf
xor
js
inc
push
mov
pusha
mov
movl
mov
addr16
out
call
icebp
cli
bound
testl
mov
jbe
pop
pop
pop
js
shlb
push
xchg
add
cld
clc
ja
xlat
inc
xor
dec
jae
dec
out
fistps
mov
xchg
push
orb
adc
lods
mov
jae
dec
mov
imul
rcrb
cwtl
loop
xchg
les
orl
insb
jcxz
push
jno
ljmp
sbb
stos
inc
dec
jnp
fisubrl
stos
cmp
xor
dec
xchg
ds
ljmp
dec
xchg
cld
js
pop
dec
add
dec
inc
adc
fisubrs
pusha
push
xor
mov
dec
outsb
call
jmp
push
mov
add
push
mov
or
xchg
lock
into
fistps
fcomps
pop
and
inc
add
test
pusha
enter
dec
jae
out
sbbb
push
mov
ljmp
loopne
ljmp
cmpsb
push
jmp
and
mov
es
inc
jne
pmuludq
fildll
arpl
adc
mov
cmc
mov
cmp
test
dec
hlt
cmp
repz
out
fsubrs
cwtl
fisttpll
jle
cmc
aaa
rorb
push
ja
stos
aam
mov
sbb
xlat
fidivrl
sbb
cmpl
or
cli
scas
xor
add
arpl
mov
in
xor
inc
and
lock
in
fimull
mov
popf
mov
adc
pop
les
push
lods
sub
push
call
add
arpl
fnstcw
adc
dec
pop
xchg
xchg
inc
or
lock
inc
cwtl
mov
into
cli
sub
call
mov
or
ds
push
sti
and
daa
movb
in
dec
rorl
stc
mov
rclb
cli
add
outsl
or
jmp
jne
xor
and
adc
out
lods
sbb
add
cmp
add
cltd
gs
jne
aad
std
xor
or
ficompl
pop
aad
inc
not
flds
stc
in
out
idiv
xor
mov
mov
sub
test
and
jecxz
xor
sbb
imul
inc
push
jae
xchg
inc
stc
jmp
mov
insb
cmp
idiv
fwait
xchg
or
shrl
jle
leave
loope
sbb
js
inc
scas
repnz
sbb
adc
jb
cmc
movb
dec
mov
dec
or
test
repz
mov
addr16
inc
adc
or
mov
cmp
xchg
lret
mov
insb
ds
movsl
insb
popa
out
and
sbb
xchg
sbb
fnstenv
loope
mov
psubusb
fidivl
jne
or
jge
cmc
dec
mov
test
pop
pop
lret
sub
pop
inc
mov
imul
mov
inc
pop
pop
arpl
cmp
mov
mov
push
icebp
push
dec
push
out
addl
mov
push
xchg
jb
pop
mov
and
adc
cmc
jmp
xchg
or
xor
test
fdivl
int3
shll
adc
mov
jns
dec
adc
imul
pushf
dec
iret
fs
shr
mov
scas
es
jns
mov
inc
fadd
pop
xor
and
xchg
xor
movsl
sahf
add
out
adc
pop
out
out
mov
mov
mov
out
jb
cmpsl
rclb
push
jns
lahf
imul
cmp
loop
mov
mov
gs
mov
leave
xor
xor
cmpsb
scas
leave
jmp
push
mov
adc
pop
and
dec
lea
fnstcw
inc
ret
push
dec
repz
lcall
xor
pusha
cmc
jb
jns
pop
cmc
aam
lcall
mov
inc
cmp
mov
ret
fadds
add
sub
cwtl
in
stos
mov
push
xchg
pushf
inc
mov
push
cmpsb
push
call
rcrb
imul
mov
adc
jmp
lcall
mov
jns
sbb
lret
int3
sti
pop
sahf
xchg
dec
ret
hlt
repz
stos
sub
or
push
dec
mul
push
aam
add
in
aas
dec
stc
lea
in
mov
add
bound
loop
push
mov
js
cmp
cmp
cmpsb
std
jno
add
stos
mov
mov
sbb
hlt
ss
push
cmp
icebp
imul
sbb
cld
xor
or
dec
out
clc
add
pop
in
out
fs
test
pop
or
jl
adc
push
inc
sbb
mov
cmpsb
inc
div
fiadds
sbb
fsubrl
mov
or
es
and
dec
add
xor
xor
fbstp
stos
repz
pop
sub
pusha
inc
mov
xchg
dec
pop
ficoms
cmp
and
outsl
lcall
mov
lahf
cmp
mov
aaa
lds
mov
popa
xchg
xchg
mov
dec
jo
icebp
dec
push
rolb
mov
ficoml
hlt
adc
sbb
hlt
or
sahf
ja
cmpsb
mov
dec
aaa
cmp
xor
mov
call
cmp
push
push
dec
faddl
sti
scas
mov
gs
sub
mov
jne
mov
xchg
jns
test
pop
out
lret
fidivrs
lahf
jne
and
jle
es
cld
jp
mov
mov
pop
xchg
pop
push
mov
sarl
xor
test
and
inc
loop
out
repnz
jle
icebp
and
jno
jnp
movl
dec
sarl
test
aad
mov
aad
adc
pushf
rol
imul
daa
in
vmwrite
ret
out
pop
scas
ljmp
lods
sub
pop
stc
sti
xchg
add
cmpsl
pushf
cmp
arpl
sbb
mov
sub
jg
outsl
jge
outsb
clc
loope
in
xorb
rcrl
sub
cmp
sbbb
jmp
repnz
insl
xor
jo
icebp
aas
fdivrs
daa
and
push
repz
adc
movsl
movsb
jge
icebp
subl
mov
loope
test
out
sbbw
cmp
mov
cmpsb
add
jne
jmp
std
mov
inc
lret
inc
notb
repnz
adc
mov
cmpsb
pushf
sub
out
aaa
out
fimuls
int
or
pop
sbbl
and
jne
jno
cli
sub
xchg
push
sbb
je
lds
ss
sarl
mov
adc
lea
punpcklwd
out
jmp
jnp
pushf
pop
rorl
mov
dec
add
xor
pop
push
repnz
stc
sub
popa
xchg
inc
ret
je
fisubrs
push
scas
push
jle
sti
cmp
add
leave
sub
xor
insl
pop
icebp
dec
cltd
pop
jne
sbb
jle
popa
lret
xchg
mov
pop
pop
push
xchg
xlat
sahf
nop
mov
sbb
mov
ljmp
push
jno
xlat
mov
jg
rolb
idivl
stc
test
clc
fsts
repnz
sub
push
mov
pusha
mov
jbe
ss
or
mov
or
xchg
inc
cli
push
cmp
daa
enter
and
mov
arpl
mul
out
shlb
mov
xor
call
pop
xor
jp
sahf
inc
add
and
mov
sub
jae
cmpsl
cli
std
lcall
jae
fwait
scas
and
cmp
popl
test
push
push
xchg
cmp
sbb
fs
push
mov
fs
int3
xchg
add
xor
inc
xor
inc
xchg
mul
ds
lods
mov
lds
test
xlat
leave
add
mov
arpl
out
mov
fmull
pop
cld
outsl
mov
dec
lods
pop
mov
insb
lahf
jl
or
sbb
sub
cmp
int3
aas
fmull
in
pop
cld
outsl
mov
dec
lods
pop
mov
insb
lahf
jl
or
sbb
sub
cmp
int3
sete
pop
cld
decl
mov
jg
lahf
jl
or
sbb
or
cmp
int3
arpl
push
in
aas
std
outsl
mov
dec
sub
mov
and
test
xor
and
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
mov
sub
sbb
mov
mov
jb
jmp
jmp
sbb
sub
jnp
imul
adc
arpl
push
jmp
sbb
sub
jnp
imul
xor
insl
mov
test
decl
shll
jnp
rorb
or
rcrb
sbb
cli
dec
xlat
cli
pop
push
lods
lods
pusha
xchg
xchg
pop
jecxz
outsb
icebp
pop
push
dec
out
and
in
es
arpl
repz
adc
inc
dec
inc
pop
mov
push
add
adc
or
fisubrs
mov
xchg
aad
repnz
fldt
mov
dec
fdivrl
arpl
inc
out
hlt
pop
push
js
or
subb
int3
ss
stos
add
cmp
jecxz
or
mov
pop
lods
dec
xor
into
data16
scas
lret
xor
push
ljmp
xchg
sub
jnp
imul
xor
add
jae
arpl
push
jmp
outsl
mov
ficoml
gs
cs
cmp
push
mov
inc
cmp
aam
iret
jae
pop
xchg
and
iret
dec
ds
cmpsb
jnp
adc
leave
push
out
ret
je
push
nop
push
mov
pop
insl
repnz
sti
sbb
dec
jecxz
shrl
fwait
xor
add
jae
arpl
push
jmp
sbb
sub
jnp
imul
xor
add
jae
arpl
push
jmp
sbb
jns
sub
imul
or
xor
lret
clc
lcall
jp
dec
sbb
js
repz
out
popf
push
shlb
mov
rcr
or
push
cs
fisubl
or
push
fdivs
test
loope
sub
lds
pop
xchg
aaa
packuswb
xor
iret
jno
mov
cltd
in
test
xor
dec
out
or
adc
xlat
test
inc
adc
xchg
stos
test
mov
loopne
and
mov
je
mov
gs
xor
adcb
pop
xchg
push
orb
cmpsb
popa
adc
dec
jnp
sarb
inc
xchg
xchg
jp
mov
sbb
mov
movsl
and
aas
push
lock
clc
decl
lea
add
clc
xchg
add
pusha
inc
data16
jl
pop
inc
xchg
mov
pop
and
lods
jge
xor
xchg
mov
xchg
sbb
and
mov
sbbl
jb
es
test
add
push
or
insb
lcall
mov
scas
test
stos
in
push
es
push
leave
xlat
cmpsb
repz
iret
ret
cmp
cs
sub
mov
mov
lock
lds
xchg
and
sti
pop
out
jns
dec
inc
jno
nop
dec
or
add
dec
pop
or
or
cmpl
iret
pop
test
ds
cld
or
jae
and
dec
xchg
mul
fidivl
mov
aad
inc
int
add
xor
cli
fadds
mov
aas
sar
leave
sbb
sub
jp
xchg
dec
mov
pop
mov
xchg
push
rcrl
push
faddl
into
or
les
mov
mov
add
xchg
mov
lds
mov
in
mov
mov
pop
mov
je
divps
push
pop
push
mov
jns
sbb
je
lret
repnz
xchg
loopne
shlb
pop
shlb
xchg
lahf
out
lea
inc
call
outsl
outsl
data16
pop
jg
cmp
push
cmp
lds
daa
and
in
xor
fistps
arpl
jo
sarb
or
sahf
outsb
inc
into
xchg
or
xchg
aas
cmp
xor
jbe
subl
into
mov
sbb
test
insl
push
int
adc
push
inc
repnz
in
jnp
into
jmp
cltd
mov
test
inc
inc
imul
or
call
jbe
enter
shrb
loope
je,pt
and
jo
in
sub
in
js
jge
in
lret
pop
rorb
mov
into
aaa
xor
insb
in
dec
ficoms
xchg
hlt
insb
cltd
mov
je
adc
xchg
or
out
test
dec
xor
mov
adc
add
sbbb
cmp
nop
mov
inc
push
sbbl
adc
lock
aas
fisubrs
pop
stos
iret
lret
shll
adc
rorb
movsb
mov
daa
call
rclb
cmc
fdivl
mov
addb
sbbl
rcll
ljmp
mov
imull
push
mov
shlb
int
pop
bound
in
sbb
imul
cmp
and
xchg
out
cmpsb
mov
fmull
shll
lods
cmp
pop
inc
mov
push
shl
shll
cmp
mov
imul
mov
xchg
xchg
scas
ja
dec
arpl
imul
rol
inc
pop
mov
cld
int3
sub
xor
movsl
das
pop
lods
out
jnp
lcall
cmp
jle
fadds
xchg
sahf
xor
mov
pushf
push
cmp
or
in
mov
add
adc
dec
cmp
icebp
sahf
inc
pop
mov
sti
pop
das
ds
lods
pop
cwtl
jge
sti
andl
inc
cld
loopne
push
mov
mov
push
insb
ret
push
test
outsb
sti
adc
pop
lods
jnp
xlat
xor
arpl
ds
jae
jo
stos
out
mov
imul
sarl
into
daa
sbb
fidivrs
sbbl
sub
sub
cmpsb
mov
lahf
inc
ljmp
or
scas
adc
xor
xchg
arpl
jecxz
push
subl
in
jne
mov
sub
mov
xchg
sti
mov
inc
inc
scas
movsb
shlb
xchg
sub
pop
or
mov
jno
outsb
mov
scas
and
mov
sbb
clc
sbb
mov
and
push
jne
dec
nop
fcoml
and
or
or
adc
mov
mov
test
lock
add
bound
pop
dec
es
insb
pop
aaa
push
jo
addl
filds
lret
adc
jmp
scas
xchg
mov
or
fsts
daa
push
pop
outsb
pop
aam
push
push
and
inc
xchg
cmp
inc
shll
inc
dec
sub
jmp
imul
dec
ss
xor
das
push
and
pop
and
jmp
fmuls
cs
loope
jne
sbbl
rcrb
push
fs
cmpsb
pop
xchg
movsb
cmp
negl
les
rorl
sahf
mov
push
por
ficomps
jb
in
add
inc
mov
push
lds
out
add
lds
es
adc
ja
mov
lret
push
orb
arpl
loopne
popa
cmp
sub
mov
sti
or
das
mov
lods
ljmp
sbb
xor
in
pop
xchg
push
popf
mov
fwait
gs
cmp
and
shrb
sub
push
fldenv
mov
jo
addl
or
dec
std
dec
jle
dec
cltd
xchg
add
aam
sub
mov
jne
and
pop
jge
je
movsb
lahf
ret
or
push
cmp
dec
cmp
jbe
jp
mov
xchg
aaa
in
dec
fs
adc
addl
xor
cmc
xor
lahf
adc
cmpl
sub
hlt
push
mov
mov
outsb
push
xor
sub
adc
jnp
inc
xchg
xchg
test
xchg
adc
lods
cmp
jnp
push
mov
fnstsw
or
pop
clc
fldcw
scas
mov
pushl
mov
add
or
jge
mov
sbb
cmp
popa
pusha
inc
sarl
push
cmp
mov
push
jnp
cmp
cmp
xor
scas
push
xor
imul
xlat
adc
xor
pop
cmp
mov
xchg
dec
cmp
cmpsb
cmp
mov
addr16
lret
inc
ror
jl
jle
push
pusha
in
dec
imulb
inc
flds
out
hlt
lret
cmp
fcoms
sti
ret
mov
into
sbb
and
popa
int3
sub
add
xor
movsl
in
dec
gs
dec
jge
xchg
xchg
out
nop
sti
outsl
dec
and
sub
pop
adc
sub
push
cmpps
loop
clc
cmpsb
mov
movsb
ss
cmp
lret
dec
cmc
aaa
sub
sub
mov
inc
ss
cmpsb
std
mov
dec
popf
xor
hlt
jmp
lds
mov
mov
js
imul
cwtl
arpl
and
cwtl
mov
int
push
inc
fistpll
jb
imul
in
repnz
xchg
mov
loopne
push
add
or
xchg
push
dec
jl
sbb
mov
arpl
out
cmc
sub
popa
adc
lret
repnz
cmp
add
cmp
test
lods
push
stc
dec
xchg
cmp
push
or
shll
loope
or
push
sub
scas
inc
xchg
push
push
adc
fiadds
fldenv
and
jp
insl
and
ss
mov
ret
stc
ss
cmpsb
push
jmp
enter
mov
pop
add
cwtl
imul
ret
ljmp
data16
in
and
and
mov
mov
or
dec
leave
insb
mov
xchg
je
xorl
daa
fisubl
movsb
or
sub
inc
lods
xor
xchg
dec
mov
repnz
imul
add
or
sahf
lcall
imul
xchg
ljmp
shrb
cld
jge
clc
mov
aad
dec
out
incl
data16
mov
loop
cmpsb
jns
pop
pop
loop
xor
sbb
push
movsl
movl
loope
jbe
mov
test
jecxz
fsubr
mov
insb
sti
in
push
call
xor
pop
sar
or
cltd
mov
in
push
data16
and
into
push
out
cmpsl
lret
pop
push
adc
nop
cltd
icebp
mov
leave
sti
pop
mov
loopne
movsb
je
cs
cld
sub
data16
stc
sub
fsubl
xchg
xchg
mov
lods
xchg
push
faddl
inc
and
sub
mov
mov
test
fdivrl
insb
push
in
push
jne
push
dec
dec
push
stc
ljmp
add
push
fs
push
mov
dec
lds
loop
scas
mov
cltd
mov
push
or
faddl
sbb
scas
xor
cmp
mov
add
cld
push
mov
add
aas
xchg
jg
icebp
mov
xchg
sti
pop
ret
inc
mov
repnz
push
fldcw
clc
lea
inc
mov
movsl
cmpsb
imul
jp
sarb
lret
imul
mov
mov
test
mov
jns
dec
xchg
jno
filds
pop
mov
push
cmp
into
or
stos
leave
test
push
imul
pop
loopne
jecxz
les
push
add
mov
popf
pop
and
cmpsl
sti
mov
xchg
jmp
push
or
fmull
aaa
push
es
mov
movsl
push
lret
ss
lret
adc
icebp
add
cmpb
rorl
pop
mov
cmc
test
add
xchg
dec
push
in
das
inc
test
test
mov
or
mov
or
cmp
sbb
int
ror
and
mov
movsl
pop
testb
imul
frstor
int
adc
xchg
nop
xor
mov
jb
fnstcw
es
or
push
ficomps
ret
mov
aam
xor
jmp
jg
not
popw
pop
test
mov
or
inc
add
pop
out
je
cmpsl
adc
and
add
cs
clc
out
lea
out
inc
xchg
repnz
xor
subb
imul
outsb
leave
mov
xchg
in
cwtl
shrb
push
mov
inc
add
jp
jb
cs
xchg
das
dec
popf
lahf
aad
pop
and
je
mov
mov
mov
sub
add
divb
les
inc
mov
andl
pusha
sub
rorl
and
fbstp
test
das
adc
dec
ret
dec
daa
xor
jecxz
adc
mov
xchg
clc
cmp
mov
lds
imul
push
ret
mov
pushf
lret
test
addr16
cmp
cmp
fmuls
mov
imull
loop
imul
push
rcl
stos
pop
pop
add
dec
push
pop
xlat
mov
mov
jl
inc
nop
and
dec
imul
add
push
mov
xchg
frstor
pop
shlb
xor
stos
mov
outsl
leave
xchg
xchg
jbe
mov
push
pop
dec
scas
push
xor
icebp
stos
cmp
jne
cltd
std
cmpsl
subps
xor
sub
popa
int
out
pop
pop
mov
mov
push
into
mov
and
in
enter
add
mov
pop
iret
adc
sbb
test
pop
xchg
arpl
adc
into
xor
sub
sub
cmp
inc
adc
outsl
loopne
incb
pop
cmc
or
ret
fistpll
pop
pop
cs
jb
adc
jae
aam
ljmp
push
jno
popa
push
inc
ds
jmp
gs
dec
cmp
bound
insb
jns
scas
pop
xchg
in
int3
cmp
cs
jmp
outsl
jb
sub
jle
test
sbb
lds
cli
mov
push
iret
mov
sub
dec
jno
or
shrb
ljmp
lea
jnp
movsl
les
mov
xor
mov
inc
ss
sub
jl
jno
arpl
pop
xorl
lcall
aas
sub
cmp
dec
lds
add
bound
jmp
xor
sub
pop
pop
jae
xor
imul
jp
cld
in
mov
jecxz
and
mov
stos
push
pusha
sub
lret
imul
mov
pop
cmp
aad
push
mov
into
push
mov
cli
aam
and
jo
mov
xchg
arpl
pop
loope
ja
sbb
mov
loopne
sbb
jecxz
fidivrl
aam
mov
ret
xchg
ss
dec
pop
pop
cltd
xchg
ljmp
popf
adc
jb
outsb
xor
addr16
std
lcall
and
int3
xor
mov
rorb
in
and
adc
push
add
jno
stos
rolb
adc
sub
dec
and
adc
adc
loop
xor
scas
xor
jle
mov
jecxz
inc
mov
xor
movsb
inc
dec
in
fldl
testl
repz
and
adc
fcmovne
jmp
mov
std
outsb
in
sbb
movsb
push
push
popf
lock
sub
dec
insb
push
push
sub
movsl
out
call
xor
test
mov
scas
loopne
cmpsl
push
push
xchg
jae
pop
jne
cld
jnp
rorb
mov
jno
adc
aaa
cmpsl
jo
mov
mov
dec
sbb
add
lret
jp
dec
cs
sarb
les
insb
inc
jae
pop
adcl
sbb
mov
testb
dec
sbb
jmp
mov
cmp
cld
sti
xchg
xchg
mov
push
xor
shrb
out
stos
pop
dec
shr
sub
mov
push
xchg
lds
mov
iret
mov
fbstp
mov
jno
push
outsl
xlat
mov
pop
stos
ja
mov
stc
cmp
mov
pop
mov
loop
sub
lret
or
xchg
mov
test
gs
out
bound
insl
ljmp
push
outsl
movsl
jg
jnp
mov
mov
es
dec
mov
ss
add
ret
sub
rcll
dec
mov
call
mov
dec
cmp
sub
mov
scas
scas
int3
xchg
push
aad
and
xchg
jmp
test
jmp
cmp
imul
shll
iret
push
aad
dec
insb
loopne
add
inc
mov
mov
pop
mov
ret
jp
push
xor
lret
das
push
test
inc
cmpb
repnz
push
movl
cs
adc
lret
clc
xchg
push
fstps
enter
cli
in
pop
int
jbe
xchg
cmp
out
push
mov
mov
shl
jg
mov
shlb
jae
mov
insb
pand
popf
add
in
jnp
push
sub
jmp
sub
cmp
xchg
or
shlb
mov
incb
pmulhw
movsl
mov
stc
fnstcw
push
test
lea
or
sub
js
movsb
push
sahf
xchg
leave
pop
lahf
jnp
fdivl
and
xlat
fidivrl
adc
jnp
pop
not
cld
xchg
or
pushf
cs
lock
scas
jbe
inc
sbb
inc
adc
lahf
fmuls
dec
xchg
clc
movsb
scas
frstor
int3
imul
dec
popf
pop
cs
push
mov
xlat
addl
inc
jle
movsl
aad
into
mov
cltd
pop
into
in
xchg
imul
jbe
mov
cmpsb
les
xor
xor
sub
lods
stos
or
scas
cmp
lret
js
aam
mov
test
dec
ljmp
repnz
test
es
mov
xlat
jle
leave
mov
and
sbb
loope
inc
jbe
xor
dec
in
dec
cmpsb
inc
jp
dec
xchg
mov
and
pusha
adc
add
dec
test
lea
mov
fwait
xchg
test
jnp
add
outsl
jmp
add
mov
sbb
ret
or
lret
mov
cmp
pop
pop
stc
rclb
adc
push
int3
int
ljmp
lods
add
jne
pop
jg
sbb
stos
fnstcw
push
andb
mov
push
push
xor
pop
fs
mov
jae
clc
ds
lods
clc
and
repz
pop
or
push
mov
mov
roll
or
jg
inc
push
push
jbe
sahf
repz
sbb
hlt
push
or
fcomps
and
stc
pop
popl
leave
cmc
les
sub
xchg
fcomps
js
adc
sub
iret
jl
cmpsb
jne
iret
lock
in
pop
sub
pop
clc
arpl
lret
jg
cld
sbb
sar
popf
or
dec
fists
in
adc
daa
xor
pop
imul
imulb
fsubrl
repnz
inc
test
ss
loope
jns
jnp
mov
pop
adc
adc
inc
push
sub
sbb
pusha
inc
lods
outsb
je
jmp
out
mov
mov
lods
adc
mov
icebp
mov
cmpsl
sub
lret
sbb
out
cmpsl
movsl
sahf
cmp
in
push
jo
dec
rcrb
inc
test
mov
out
xor
cwtl
sbb
cmpl
ror
bound
out
sub
sbb
cmc
out
lcall
adc
fisttpll
lahf
in
call
add
lret
mov
push
mov
adc
cmp
sub
adc
ficompl
xlat
stos
sub
xor
les
outsb
ja
xor
mov
fsubs
stos
jl
sbb
jg
add
pop
sbbb
mov
inc
lea
cs
push
push
mov
add
movsb
mov
mov
imul
popa
jnp
test
fisttps
lret
das
ss
dec
fwait
loopne
sarb
mov
movsb
ja
setne
xor
jecxz
push
mov
and
lret
lret
dec
jo
mov
sbb
loop
jne
jmp
jmp
adc
xlat
push
push
pusha
cmp
sub
out
mov
fidivs
and
sbb
fidivs
jp
ja
dec
mov
or
add
stc
mov
into
popf
pop
dec
fisttpl
scas
mov
xor
lret
js
add
popa
test
roll
pop
and
add
xor
cmp
pushf
xlat
fstps
int
sbb
imul
mul
xchg
adc
adc
sbb
outsl
jp
xchg
jge
sbb
inc
and
mov
or
and
xchg
insl
jl
pusha
testl
js
repnz
dec
flds
xchg
testb
sub
adcb
push
lods
push
inc
and
bnd
inc
sbb
pop
imul
sbbl
mov
push
pop
mov
lods
in
push
into
out
mov
push
pop
out
jo
js
and
push
push
dec
lea
les
sbb
sbb
dec
dec
ficomps
or
xor
rorl
mov
adc
cmpsb
dec
scas
outsb
push
sti
dec
add
or
dec
dec
aam
xchg
mov
mov
stos
in
rolb
repz
pushf
and
std
push
adc
dec
popf
imul
or
mov
xor
add
xchg
sub
dec
add
dec
cmp
jle
pusha
movsb
out
cmc
adc
jb
pop
cltd
push
in
dec
out
push
cmpsb
sub
sub
xchg
adc
adcb
fucomip
outsl
push
mov
loop
sbb
test
push
push
ja
aad
xlat
rorl
sub
test
xor
int3
ljmp
test
xor
add
bswap
dec
int
in
repnz
aad
cmp
in
loopne
insl
and
data16
xor
mov
les
push
jb
scas
stos
pop
std
in
mov
orl
mov
add
sarb
call
and
fsubs
sub
addr16
sti
jo
mov
or
add
lea
push
cmp
in
and
cli
fcoms
fsubrl
lods
mov
cmpsl
es
mov
pop
aas
inc
imul
or
inc
mov
lahf
xchg
mov
pop
repz
jecxz
shrl
fwait
xor
add
jae
arpl
push
jmp
sbb
sub
jnp
imul
xor
add
jae
arpl
push
jmp
sbb
sub
jnp
imul
xor
add
jae
arpl
push
ljmp
xchg
sub
jnp
imul
xor
je
sti
inc
pushf
add
adc
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
stos
push
mov
arpl
pop
mov
adc
ret
or
sbb
push
jp
dec
mov
mov
mov
arpl
adc
add
xor
pop
sub
cmp
jle
sbb
push
jp
dec
mov
mov
mov
arpl
adc
add
xor
and
sarl
loopne
xorl
add
xor
jecxz
mov
arpl
mov
loopne
ret
fwait
loope
push
cmp
cld
and
push
lret
jg
pop
out
adc
sarl
sub
cmpsl
adc
xchg
lahf
xchg
mov
repnz
push
xor
sbb
gs
jmp
mov
xor
sub
jo
lret
subl
lcall
pop
sbb
mov
add
mov
sub
cmp
ja
add
pop
mov
loopne
mov
mov
pop
fildl
cmp
sbb
out
sarb
mov
pop
push
or
arpl
adc
cmp
xor
ret
repnz
push
xchg
jnp
dec
mov
mov
push
mov
arpl
adc
add
xor
and
sarl
ret
or
sbb
push
jp
dec
mov
lret
roll
out
jae
arpl
jne
ja
stos
ds
jbe
adc
push
lret
test
push
jmp
jg
dec
lret
inc
dec
cwtl
cmp
paddw
cmpb
pop
int3
ret
pop
fimuls
jecxz
fwait
push
ljmp
and
sarl
ret
or
sbb
push
jp
dec
mov
mov
mov
arpl
adc
add
xor
and
sarl
ret
or
sbb
push
jp
dec
mov
mov
xor
add
mov
mov
pop
rorl
and
mov
stos
leave
data16
fbstp
pop
jle
or
sub
ja
scas
cmc
pushf
out
test
cmpsb
adc
pop
push
mov
mov
and
and
push
cs
lock
pushf
cmp
in
cmp
pushf
imul
xor
popf
or
mov
cmpsl
xchg
mov
and
xlat
mov
repnz
xor
stc
shl
out
adc
sbb
sti
cmp
pop
jne
jns
xlat
int3
je,pn
mov
jecxz
adc
pop
and
in
mov
mov
cmp
pushf
xchg
adc
jge
sub
test
and
add
push
rcrl
and
mov
insb
clc
popa
inc
inc
das
imulb
adc
cmp
fs
mov
dec
orb
pop
xchg
and
mov
jb
inc
add
cmp
stc
int
shl
xchg
and
xchg
push
jg
ds
mov
es
push
sub
cwtl
enter
fnsave
bound
sbb
push
scas
les
insb
lock
push
aaa
int3
gs
clc
test
and
insb
sti
inc
inc
xor
push
out
dec
pop
xchg
dec
xchg
movsl
in
or
push
xchg
mov
xchg
push
xlat
js
push
ret
and
loopne
and
out
sub
cs
jb
addr16
sbb
fcmovu
sti
loope
decl
push
push
cmpsl
dec
call
push
push
and
cmpsb
mov
in
xor
out
inc
xchg
cmc
int3
les
add
inc
dec
subl
mov
call
mov
inc
imul
xchg
push
clc
test
sub
adc
filds
cltd
iret
cmp
rol
xor
mov
sub
jns
bound
mov
cmp
sbb
mov
lock
or
bts
lds
lahf
mov
or
mov
test
clc
or
shll
inc
inc
testb
imul
lret
data16
inc
stc
lds
stos
js
ret
mov
and
clc
fimull
and
xchg
mov
dec
sahf
stos
mov
xchg
out
or
mov
sbb
lret
shlb
push
das
xor
in
adc
pop
pop
dec
pop
psrad
cwtl
cmp
or
into
cs
mov
scas
xor
in
out
int3
mov
mov
dec
and
fsubl
stc
adc
cltd
addr16
outsl
pop
nop
lea
jae
pop
sbb
mov
add
in
xchg
sub
std
lds
cmc
inc
jecxz
or
sub
fwait
imull
sbb
pusha
xchg
test
mov
cltd
push
pop
inc
mov
fwait
mov
fldenv
wrmsr
movsb
ds
aad
mov
out
jnp
ljmp
bswap
popf
orb
pop
dec
dec
fisttpl
mov
std
jg
mov
cli
mov
inc
adc
mov
xchg
mov
and
in
mov
jge
es
pop
test
inc
js
add
aas
insb
cmc
lods
scas
cmpsl
sub
popf
and
bound
xor
xor
xor
inc
jae
ss
shlb
out
push
inc
out
lods
stc
ret
mov
mov
lea
jle
loop
cmpsl
icebp
jmp
fdiv
in
repz
fcomi
add
pop
loop
xchg
pop
add
mov
enter
insl
add
mov
inc
jmp
xor
pop
pop
push
test
in
and
popf
sub
push
aam
in
pop
push
jno
xchg
cmc
xor
sbb
test
pushl
or
je
fstpl
adc
jecxz
cmp
les
xchg
and
cmp
jns
xchg
adc
pusha
mov
jbe
sbb
notl
xor
dec
xchg
push
push
jb
xchg
fstpl
test
mov
add
sub
sti
stos
mov
cmp
xor
cmc
pop
into
enter
xor
daa
sub
jecxz
push
fidivrl
into
xchg
dec
pop
sub
lcall
sbb
movsb
push
pop
cmpsb
jbe
in
mov
pop
dec
jle
jg
test
stos
lret
add
das
mov
and
jbe
fstpt
sub
sub
fsubrs
dec
mov
mov
pop
add
scas
mov
aad
pop
addr16
sub
shll
push
sub
or
xor
xchg
sbb
pop
fidivrs
hlt
scas
jno
aaa
lds
mov
fcos
iret
cltd
ds
imul
repnz
sub
xor
in
ret
mov
pop
xchg
pop
sub
lret
lea
lds
and
xchg
and
das
push
arpl
add
cld
jmp
xor
or
lcall
int
fsubr
es
sbb
mov
mov
cmp
or
xlat
clc
insb
mov
push
lahf
xchg
xor
outsl
mov
insl
rorb
insl
imul
push
pop
cli
dec
jge
jg
push
mov
jbe
pusha
sub
addb
nop
lea
xchg
int
pop
and
xor
push
test
push
ret
es
push
cltd
cs
mov
cli
mov
lods
jno
rolb
sub
xchg
les
cmp
sahf
out
cmp
into
icebp
add
mov
push
gs
dec
sbb
stos
mov
lcall
mov
dec
cmp
cmpsb
push
xchg
push
gs
inc
pop
adc
or
xlat
pushf
fadd
sub
sub
mov
ljmp
push
popa
pop
inc
js
sub
testb
aad
mov
es
test
test
fwait
mov
stos
loope,pt
imul
bound
push
movsb
mov
rorl
add
inc
in
test
jg
inc
loopne
aam
add
scas
inc
sbb
push
mov
pop
xchg
aam
jb
in
rcrl
jnp
push
adc
jno
push
xchg
dec
mov
filds
insb
mov
push
lret
loop
movsl
ljmp
jp
out
popa
push
int
out
movsl
mov
push
scas
in
das
inc
dec
icebp
pop
adc
xchg
test
inc
cmpsl
mov
int
inc
mov
aas
jb
push
mov
fsubrl
mov
and
sbb
sbb
pop
scas
and
push
mov
cmp
pop
jge
repz
dec
pop
call
xchg
xlat
jecxz
ss
xchg
shll
pop
imul
cmpsb
jae
add
add
cmc
movsb
int3
mov
into
out
jns
cmpsl
insb
sub
and
xchg
push
pop
dec
cmp
iret
xor
insb
sbb
and
pop
ja
mov
mov
ret
jns
arpl
hlt
in
xchg
aad
jmp
cmpsb
jo
jl
test
adc
xchg
sub
pop
stos
in
push
xchg
xor
xor
and
aam
pop
mov
and
adc
and
dec
imul
add
lock
loope
insl
add
mov
jp
dec
xchg
movsl
mov
mov
pop
stos
pop
sub
aas
sbb
mov
pop
dec
push
testl
xchg
mov
xchg
into
cmp
pop
addr16
sub
imul
pop
mov
add
ds
out
addl
or
scas
or
sbb
pop
das
and
sbb
negl
arpl
push
jnp
pop
cwtl
push
mov
je
fidivl
loopne
inc
arpl
stc
addb
stos
push
push
iret
jne
mov
fistps
ds
subl
and
mov
aad
xchg
cmp
push
ret
jp
push
pop
mov
loope
dec
hlt
pop
mov
addr16
addr16
mov
sbb
out
in
pop
imul
sub
and
dec
jmp
push
xchg
test
aad
cmc
movsb
dec
sub
jo
pop
cmp
test
inc
cmp
cmc
mov
fbstp
in
loope
adc
and
jns
lahf
pop
in
icebp
xorb
imul
push
sbb
dec
ret
adc
arpl
fbld
mov
xorb
out
xchg
pop
push
lods
add
lret
in
clc
rcl
push
incl
sahf
or
jno
add
cli
mov
pop
out
mov
cmp
scas
jecxz
or
int3
cmpb
and
and
lahf
sbb
jg
dec
flds
hlt
popf
add
sub
sub
pop
ja
add
mov
push
sti
inc
idiv
sarb
js
sahf
push
jb
cs
or
addr16
nop
pop
mov
outsb
dec
call
int
call
mov
ss
arpl
mov
cmp
rcrl
and
inc
fwait
cwtl
mov
pusha
ret
pop
adc
cli
jp
inc
leave
jno
and
add
and
mov
rcrb
cmc
add
rolb
push
xchg
cmp
add
bound
sbb
pop
add
bound
ss
xor
je
pop
pop
call
bswap
jne
mov
xchg
popf
inc
int3
jne
jecxz
jl
sbb
adc
pop
ret
mov
jecxz
pop
stos
lea
mov
loop
push
frstor
out
shll
push
xor
mov
fs
fisttpl
mov
pop
xchg
xor
sub
pop
ret
or
xor
xchg
cltd
mov
pop
dec
cmp
dec
test
and
outsl
or
jne
decb
mov
dec
push
or
and
cmp
or
add
xlat
jl
adc
gs
jg
cwtl
mov
adc
scas
mov
xor
sbb
sbb
test
lds
pop
lds
dec
lods
in
in
sub
mov
adcl
movsb
in
test
icebp
out
mov
lods
cmpsb
inc
fsubl
rorb
pop
mov
xor
jne
sub
jno
cmp
jecxz
dec
cvtps2pi
sbb
push
dec
adc
xchg
es
lahf
jbe
stc
or
jnp
mov
jne
out
mov
arpl
xchg
jl
jl
cld
pop
lods
jne
mov
pusha
xchg
jge
push
xorb
out
test
aaa
daa
out
ret
dec
cltd
aam
fs
rol
jg
testl
lcall
aam
cmp
adc
andb
cs
out
cmp
out
dec
push
ljmp
test
cmp
and
xlat
movl
jb
add
or
pop
bound
lods
xchg
xlat
mov
adc
xchg
aad
mov
nop
xchg
imul
or
and
shrb
add
xchg
sbb
lret
sti
mov
nop
pop
dec
movsl
loopne
mov
push
pmulhuw
inc
in
and
sti
repnz
dec
mov
inc
and
insb
aad
pop
fisttpl
lods
ret
addr16
mov
push
pop
add
mov
mov
call
aaa
in
or
cmp
aaa
imul
jl
pop
xchg
cmp
cmpb
xchg
pop
pop
int3
call
loopne
pop
pop
add
cwtl
jp
mov
mov
sbb
and
xchg
jecxz
mov
push
push
mov
out
jmp
push
mov
sub
repz
sub
adc
insb
dec
cwtl
arpl
mov
das
jne
cwtl
add
mov
fwait
ret
pop
adc
imul
repnz
mov
xor
xor
adc
sbb
lods
jb
sub
mov
lods
xchg
pusha
lahf
add
mov
test
leave
lea
push
out
sub
cmp
jp
add
jmp
jecxz
adc
mov
out
push
cmp
mov
pusha
dec
cmp
mov
push
jmp
jns
mov
cmp
mov
or
and
adc
xlat
ss
cmc
mov
push
mov
ja
stos
dec
pop
adc
outsb
pop
gs
addr16
ds
cs
adc
fistpl
push
jno
pop
cmc
sub
inc
or
movsb
cmp
sbb
pop
mov
inc
sbb
mov
fstpl
pop
int
mov
pushf
jge
cmp
mov
jmp
push
or
jl
inc
and
jg
xchg
cltd
dec
fdivrl
push
and
sub
in
fadds
into
aad
push
add
add
fsubl
push
test
data16
cmpsb
loopne
mov
ja
add
push
jle
cmp
daa
adc
movsb
stos
push
pop
in
mov
pop
lock
mov
sbb
sub
pop
test
sbb
jmp
pop
into
scas
inc
mov
mov
sub
int3
daa
je
popf
add
movsl
stos
std
mov
inc
xchg
adc
push
in
adc
loopne
out
inc
and
cltd
mov
in
andps
in
add
ja
pop
loopne
test
popa
mov
fcmovnb
ret
inc
mov
movsb
cmp
push
push
aas
fisttpl
aam
pop
ja
fiadds
xchg
inc
cmpsb
inc
xchg
in
ljmp
inc
scas
jg
add
pop
imul
jmp
fsubl
lcall
outsl
mov
jne
xor
jmp
lods
fstl
inc
std
mov
lea
and
icebp
repz
mov
mov
popa
scas
in
mov
scas
sbb
dec
push
rcll
stc
test
xchg
aam
jnp
lods
dec
outsl
add
xchg
sar
les
pop
mov
dec
mov
out
aam
or
int
imul
pop
jb
fs
scas
xchg
imul
lcall
inc
xchg
cwtl
cmp
inc
mov
cld
push
xor
lcall
mov
das
addr16
mov
xchg
mov
xchg
mov
xor
jle
fidivrl
jl
test
push
aas
shl
xor
pop
popf
adc
push
cmpb
lods
stc
inc
add
mov
sbb
leave
add
jb
fsubrl
mov
fstpt
mov
cmp
and
fidivl
adc
stc
mov
ljmp
lds
out
mov
mov
lea
add
mov
add
sarl
out
out
sbb
ret
mov
jb
aas
jl
pop
inc
mov
jmp
out
mov
cmp
mov
lahf
movsb
and
and
add
out
sbb
ret
pusha
and
enter
divl
sbb
pusha
iret
pop
rorb
cs
lahf
and
sbb
test
push
sbb
ds
aad
dec
mov
sub
cmp
or
mov
testl
mov
rorb
pop
lds
add
pop
imul
xchg
out
jo
or
xchg
inc
mov
lret
adc
hlt
adcb
fsubl
je
shl
xor
enter
dec
pop
cld
aaa
aad
xor
mov
pop
xor
mov
xor
aam
divl
fdivl
idiv
sbb
add
add
inc
pop
pop
stos
inc
aam
or
loope
push
loope
add
jne
pop
xchg
inc
mov
cltd
popf
stos
jo
jbe
inc
in
es
ds
mov
mov
setg
sbb
fsubrp
and
pop
sub
aaa
sub
xlat
loope
insl
rorl
sub
jge
fwait
imul
pop
out
flds
jns
push
aas
cwtl
cmp
out
outsb
dec
lods
std
inc
shlb
sbbl
mov
mov
cmc
or
movsb
shlb
mov
push
rorb
das
test
in
cmc
enter
mov
ss
add
not
sahf
pop
imul
shl
les
cmp
sti
pop
cmpb
sti
in
in
xchg
mov
sarb
jns
sti
scas
subb
push
fmulp
inc
push
pop
jne
and
push
out
push
imul
jns
xlat
sbb
push
cld
xchg
rorb
int3
cmpsl
jae
les
outsb
sub
cmp
das
push
pop
and
cmp
xchg
xlat
movsl
or
les
dec
push
jbe
mov
mov
sti
push
std
jo
sti
or
xchg
mov
inc
and
or
pushf
adc
push
test
addr16
pop
subb
adc
pop
pop
fnstcw
into
jae
fs
rolb
mov
jge
or
mov
cmp
hlt
sub
adc
mov
dec
in
call
inc
repnz
out
cmpsb
test
xor
je
pop
ret
loop
out
pop
sti
pop
jbe
lods
pop
push
adc
cltd
lcall
aam
dec
mov
sub
and
push
mov
pop
jae
jnp
pusha
add
into
push
dec
nop
ljmp
mov
jnp
adc
ja
stos
mov
stos
int
inc
inc
fwait
jg
cmp
nop
mov
data16
or
push
pusha
sub
out
inc
pushf
movsb
das
cltd
mov
aaa
mov
aam
pop
fisubs
lods
sbb
outsl
jnp
sbb
jb
out
cs
enter
gs
std
loopne
rcrb
mov
mov
dec
xor
sbb
lcall
mov
or
jns
xchg
jbe
xchg
mov
arpl
sbb
jmp
int3
pop
bound
jb
add
add
mov
push
inc
jp
nop
cmp
mov
cld
test
jge
lcall
inc
fdivl
imul
mov
mov
lods
pop
call
testl
mov
pop
bswap
std
or
sbb
xor
lcall
imul
cmc
pushf
shrb
sub
notb
xchg
cmp
movb
repz
out
mov
jo
sub
mov
insl
out
mov
loopne
xor
inc
outsl
and
rcll
imul
outsl
sub
pop
xor
negb
loope
xchg
add
pop
rcll
sub
sub
sti
lret
lret
imul
or
ljmp
fsubrl
nop
arpl
sbb
add
mov
addr16
jno
or
out
mov
lfs
in
sub
xchg
cwtl
inc
gs
inc
sbb
mov
imul
sahf
scas
cmpsl
inc
fidivs
or
push
addr16
in
push
xor
push
push
adc
lcall
rcrb
ret
inc
sti
fisubl
xor
pop
clc
mov
fwait
xchg
lret
xchg
mov
out
and
inc
mov
loope
lea
push
movsl
mov
and
xchg
pop
repz
adc
outsl
jns
dec
xchg
xor
jge
pusha
wrmsr
daa
fisubrl
mov
and
add
out
adc
pop
sub
xor
sub
cs
cmpsl
pop
jmp
pop
jo
fistl
fimull
fsubp
push
lds
push
loope
push
pop
lret
int3
mov
dec
dec
ljmp
pop
pop
fcmovnb
mov
sbbl
mov
fidivs
xor
in
jle
das
sub
int3
pop
or
add
mov
push
xchg
icebp
or
rcl
cld
push
fsubl
out
pop
sub
mov
leave
into
iret
hlt
ret
fistps
add
add
mov
stos
push
fxch
cli
mov
xchg
or
or
fs
cmp
adc
aam
jo
lret
pop
js
outsb
adc
mov
mov
fs
jle
sbb
aad
daa
sti
fisttpl
fidivl
scas
and
lret
push
daa
pop
subb
mov
pop
and
leave
add
xlat
xor
jns
mov
xchg
dec
push
mov
pop
cwtl
mov
push
mov
fisttpll
mov
ffree
and
and
fsubs
int3
pop
mov
test
adcb
xorb
ret
sti
sbb
test
ljmp
jge
dec
in
sbb
stc
lcall
icebp
lret
add
insb
mov
cltd
cltd
adc
inc
data16
jae
pop
jp
pop
lret
mov
and
insl
arpl
jmp
loop
shll
jmp
test
icebp
sbb
mov
cmc
cmp
fwait
lds
adc
rep
fidivl
or
mov
mov
and
add
rorb
loop
leave
cmp
jbe,pt
push
or
or
add
dec
nop
mov
imul
lods
sahf
inc
jmp
inc
pop
hlt
lahf
negl
cmp
mov
mov
dec
push
lret
dec
add
add
fiaddl
jae
arpl
adc
add
xor
and
sarl
ret
or
sbb
push
jp
dec
mov
mov
mov
arpl
adc
add
xor
and
sarl
ret
or
sbb
push
jp
dec
mov
mov
mov
arpl
adc
add
xor
and
sarl
ret
or
sbb
push
jp
dec
mov
mov
mov
arpl
adc
add
xor
and
sarl
imul
dec
movsl
pop
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
add
pop
js
push
sbb
pop
cmp
cwtl
ds
call
mov
mov
push
pop
js
or
sbb
sub
cmp
cli
fsubr
sar
lret
cld
stos
test
mov
lods
out
sarb
add
sarb
cli
mov
mov
int3
fucomip
lret
out
or
js
sub
comiss
cltd
cmp
sti
jno
adc
push
frstor
inc
jns
test
pop
das
out
add
mov
push
pop
and
or
sub
xor
xor
clc
mov
pop
ljmp
pop
fildl
xor
dec
adc
dec
or
pop
sub
sbb
fidivrl
xchg
jg
or
and
lcall
lods
movsl
xchg
xchg
cmpsl
mov
sub
testb
mov
jnp
cwtl
mov
int
pop
xchg
xchg
das
fstpl
lods
push
or
test
clc
mov
in
jbe
loopne
negb
push
cmp
sbb
inc
xor
out
call
sbb
cmp
add
data16
insl
inc
cmp
dec
test
jg
test
fsubr
jmp
dec
cmp
sub
sub
js
jae
cmp
fwait
cltd
lahf
lea
std
stos
stc
stc
cmp
imul
jbe
sub
sbb
or
cli
fsubr
call
mov
mov
push
pop
js
or
sbb
sub
cmp
enter
call
mov
mov
cmp
daa
daa
movsb
inc
pop
jns
loop
and
ret
inc
sbb
mov
inc
pop
push
sbb
sbb
lahf
ljmp
xor
lods
xchg
aad
push
popa
idivb
fstl
pusha
icebp
test
rcl
or
xchg
xchg
adc
mov
jmp
push
cmp
mov
pop
fidivs
jle
test
push
arpl
xchg
js
call
jmp
rcl
in
rcll
push
mov
iret
es
in
les
pop
lcall
test
push
repnz
scas
aaa
cmc
push
cmp
imul
xchg
sarl
or
outsl
loop
push
imul
jmp
push
xchg
stos
sarb
pop
cmp
stos
and
out
jle
cmp
adc
mov
test
adc
jno
inc
in
add
or
sub
xchg
divb
push
or
and
adc
jno
sbb
dec
inc
aas
sub
jge
pushf
fildll
cmp
push
push
cmp
inc
les
stc
insb
aas
addl
dec
pushf
mov
pop
popf
and
cmp
mov
call
mov
mov
dec
movsl
lret
data16
ret
and
ret
cmp
insl
imul
lret
fs
or
incb
mov
sub
or
sbb
mov
mov
and
stos
mov
daa
loopne
loopne
lret
push
dec
xor
sbb
popa
push
stos
out
pushf
je
jg
call
sti
and
push
lock
out
pop
fs
js
pshufw
cmp
data16
mov
push
cmp
mov
cmpsb
mov
test
roll
call
shll
pushf
lret
sub
orl
mov
pop
dec
xor
imul
push
sub
mov
scas
inc
std
xchg
mov
cmp
popa
sbb
xchg
jge
fsub
and
push
movsl
mov
bound
sahf
cwtl
add
ss
mov
lods
pop
dec
and
push
jb
jp
in
cmpsl
xor
sbb
popf
xchg
popf
ds
bound
xchg
xor
mov
in
jp
jno
scas
scas
and
pop
sahf
cltd
add
pop
enter
lahf
movsb
in
pop
je
sub
test
test
push
add
xor
sub
fwait
or
dec
out
out
ss
inc
xor
mov
push
iret
jnp
fisubrs
mov
and
lods
inc
adc
push
xor
or
cmc
in
call
sbb
jecxz
ffreep
or
cmp
inc
insb
outsl
clc
inc
xchg
xor
cmp
cmp
leave
cmp
dec
bound
and
mov
sub
inc
sbb
mov
out
mov
out
mov
xchg
pop
push
push
dec
insl
mov
fsubr
cmp
xor
ret
arpl
mov
cli
add
movsl
dec
pop
mov
lret
fadds
push
sarb
xlat
scas
test
pop
sahf
out
jnp
pop
jg
fdivrs
mov
mov
lds
in
insl
out
lcall
pop
dec
jg
mov
jns
pop
mov
roll
sahf
stc
lods
and
xchg
xchg
and
scas
repz
add
out
inc
pushw
push
shrl
inc
xchg
cmp
jg
stos
cwtl
push
and
and
mov
mov
cmp
fisttpl
subb
and
fisubs
adc
clc
inc
xlat
stc
test
push
inc
cmc
push
mov
cmc
and
mov
out
pushf
xlat
and
sahf
data16
cwtl
cmp
orb
pop
cmpsb
inc
jo
insb
outsb
jg,pt
arpl
push
xchg
xor
jne
dec
pop
pop
dec
scas
fwait
scas
pop
cmp
pop
jno
mov
mov
lret
stc
jo
pop
lret
ss
xchg
mov
cld
jbe
in
insb
imul
sbb
sbb
jp
clc
lret
sub
mov
bound
mov
xlat
inc
cmp
mov
lock
adc
imul
int
jb
test
sub
adc
push
int
ret
leave
fisubs
pop
dec
jne
and
sbb
jno
sub
dec
push
cli
sbb
push
or
loop
out
or
loopne
arpl
stos
cmp
push
fmull
std
orb
in
cwtl
cld
scas
and
or
push
and
pop
insb
xchg
dec
add
pop
xor
int
sbb
fstpt
mov
in
add
xchg
push
into
cmp
out
xor
and
xor
add
pop
pop
sarl
iret
cwtl
pop
mov
divb
fdivl
icebp
outsl
adc
cltd
jl
fcomp
mov
lods
pop
cmp
jbe
loope
enter
arpl
popa
fldcw
popf
mov
das
pop
push
push
pop
xchg
rolb
add
std
rorb
lret
jg
sarb
and
sbb
call
call
adc
sti
and
mov
xchg
subl
data16
sbb
adc
mov
out
sub
lds
insb
bound
mov
popf
pop
cmc
repz
push
mov
sbb
mov
or
ret
push
sub
inc
pushf
add
dec
jecxz
xchg
lret
pop
pop
jmp
insl
fcmovb
leave
iret
xor
push
enter
in
and
scas
lock
imul
or
loopne
cmc
add
data16
mov
fiaddl
adc
js
pop
pop
sbb
mov
xchg
pop
incl
sbb
pop
mov
aad
test
push
or
xor
fmuls
fsubr
add
mov
dec
mov
out
inc
es
clc
mov
pop
pop
push
in
loop
or
rcrl
mov
inc
rolb
pusha
xchg
inc
add
push
cld
mov
mov
xchg
pop
xor
aad
lcall
outsl
out
into
loopne
adc
std
xor
mov
in
arpl
sub
mov
cmpsl
adc
cmpsb
adc
fidivs
push
popa
imul
mov
fsubp
jle
sahf
mov
xchg
in
jnp
inc
jb
mov
ljmp
mov
inc
jnp
ss
out
jge
rorl
mov
adc
cmpl
bound
push
mov
jle
gs
movsb
popl
jmp
lds
inc
sub
stos
xchg
push
ficoml
in
mov
out
mov
out
imul
push
fildll
clc
pop
dec
out
pop
mov
je
xchg
inc
popf
lahf
mov
in
shll
pop
repz
nop
or
sub
lods
push
into
jno
cwtl
add
cmp
inc
pop
mov
jmp
stos
lea
dec
in
push
push
test
jae
push
je
jmp
mov
lcall
xor
mov
int
in
jmp
mov
jl
sbb
pop
loop
push
cmp
mov
xor
sub
in
aaa
push
jns
sbb
lods
mov
stc
jg
sti
iret
scas
sbb
fdivl
cmpsb
movsl
dec
jle
jns
lods
scas
adc
add
sbb
shll
cmc
adc
fsts
enter
leave
jmp
adc
test
aam
call
inc
xchg
inc
int
push
dec
push
test
popa
dec
mov
jle
lret
cltd
and
leave
and
iret
clc
xlat
shlb
ret
lret
inc
push
adc
xchg
in
cmp
xchg
lret
arpl
insb
sub
fiadds
popa
dec
adc
bound
loope
adc
mov
and
addr16
outsb
adc
cmp
test
lret
stos
sub
dec
mov
into
or
sti
xchg
insl
mov
jo
jo
push
xchg
push
jl
xor
adc
push
mov
cli
cwtl
mov
sbb
ret
pop
cmp
add
push
pop
and
rcl
mov
inc
mov
mov
orl
jne
adc
push
daa
sbb
insl
nop
push
pushf
xchg
je
mov
pusha
mov
hlt
addb
pop
inc
jg
popf
dec
loopne
xchg
mov
and
or
je
mov
cmc
push
jp
fwait
mov
xchg
mov
or
dec
aad
push
mov
or
xchg
push
cmp
push
cmp
gs
ljmp
pop
pop
inc
sub
mov
jnp
push
jns
sbb
loope
cltd
aas
stc
jae
jnp
sub
repz
inc
out
pushf
pop
dec
xlat
pushf
loopne
shll
xchg
push
rcll
fs
mov
mov
xchg
std
lcall
sbbb
popa
test
adc
mov
jno
arpl
in
mov
imul
mov
push
xchg
sub
xchg
cld
pop
sub
and
ljmp
inc
cmpsb
adc
mul
sub
mov
loop
loop
push
add
mov
cmp
add
fisttpl
push
adc
stos
imul
jmp
and
lahf
mov
push
cltd
das
out
pop
out
lods
imul
in
stc
stos
pusha
sbb
adc
or
xor
mov
mov
xchg
out
stos
dec
fidivl
mov
out
mov
inc
pop
aaa
and
insb
lds
pop
mov
push
icebp
dec
xchg
data16
cltd
iret
push
sub
xlat
dec
mov
int
jb
cmp
es
xor
pop
icebp
mov
in
aam
mov
test
mov
out
inc
sbb
pop
and
mov
mov
mov
lock
mov
sbb
bound
dec
mov
cmp
out
and
mov
movsl
or
repnz
dec
out
sbb
mov
in
out
das
addr16
cmp
test
lcall
cmpsl
out
inc
mov
pop
into
int
cli
sbb
add
pop
movsb
adc
push
mov
sbb
mov
mul
cltd
fld
dec
setns
out
repnz
mov
imul
ds
pop
dec
sahf
ja
sbb
data16
bound
daa
sti
mov
cli
loope
mov
out
jg
pop
psadbw
jg
jae
cltd
cmp
push
mov
leave
shll
fcmovb
test
jle
hlt
add
cltd
and
insb
aaa
xor
jae
jle
aas
shr
push
push
addb
mov
in
loopne
fst
ds
dec
push
pop
push
xchg
mov
pop
mov
mov
shlb
push
sbb
leave
les
jg
pop
fisubrs
out
mov
lret
and
cli
xorl
repnz
mov
pop
or
jp
scas
popf
fstl
add
jp
xchg
sar
xchg
inc
inc
lock
outsb
clc
fmuls
xchg
inc
sub
sub
pop
mov
stos
or
jne
daa
orl
or
mov
fidivs
dec
cli
jne
push
int3
sbb
shll
into
or
stos
push
jbe
fimull
push
mov
rcrl
sbb
sbb
lret
mov
and
in
stos
mov
cmp
dec
push
arpl
in
repnz
push
popa
scas
cmp
adc
jp
scas
cld
jns
ror
sub
xchg
pop
sub
decl
dec
xchg
push
js
mov
in
sbb
aas
adc
addb
xchg
pop
and
arpl
repnz
jne
push
les
scas
jo
sub
shlb
call
mov
mov
jbe
mov
xor
in
mov
pushf
dec
bound
arpl
popa
cli
sbb
jne
push
inc
mov
dec
leave
je
loopne
lods
xchg
ja
sub
lea
adc
adc
pop
into
inc
test
in
daa
sbb
je
pop
sub
pop
out
push
push
iret
fcoms
insb
enter
mov
cwtl
rorb
stos
mov
rcrb
repz
mov
sub
jecxz
ret
sbb
pop
pop
arpl
sbb
call
out
and
mov
mov
insl
sub
cs
in
mov
mov
or
test
cltd
jp
outsb
pop
push
loop
inc
mov
xor
xchg
popf
jae
sbb
sub
das
ret
jg
sbb
pop
insb
testl
dec
bound
jecxz
out
cmp
imul
out
push
fucomp
int
lds
insl
in
sub
mov
push
js
inc
mov
arpl
sbb
shrb
arpl
imul
adc
or
xchg
popa
xor
filds
cli
nop
cmp
loop
ss
mov
data16
hlt
jae
jg
rolb
int
jno
inc
xor
arpl
push
je
daa
and
push
adc
lock
cwtl
out
and
aam
inc
call
and
add
cltd
dec
fldt
dec
cmp
inc
xchg
ret
jae
scas
mov
fnstenv
outsl
mov
aas
sbb
jne
lods
jg
mov
adc
xor
push
jno
mov
insl
call
sub
scas
shlb
mov
pop
jbe
push
dec
pop
test
js
sub
push
and
aad
outsb
outsb
pop
aam
ja
inc
and
lret
pop
and
jle
mov
fstps
sub
sbb
decl
push
jo
xchg
addb
mov
aam
and
push
push
and
fstpt
cmp
inc
adc
dec
stc
fistpl
jmp
sbb
xchg
movsb
jmp
divl
cli
out
mov
dec
push
sbb
push
sbb
out
or
in
sub
jge
dec
inc
pop
scas
test
mov
out
dec
aad
lret
push
push
in
pop
xchg
movsb
xor
rcr
out
sbbl
push
push
outsb
aas
adc
pop
inc
lods
jae
cltd
into
mov
stos
cmp
jle
enter
xchg
cmp
sbb
mov
sahf
push
mov
mov
push
gs
sbb
les
enter
push
cltd
mov
cmc
sbb
bound
subl
lahf
stos
dec
repnz
and
sub
cmpsl
dec
clc
xchg
dec
aad
xchg
pusha
daa
push
or
sti
sub
sub
push
int
cmp
jp
inc
clc
adc
das
stos
xchg
jmp
dec
xchg
dec
out
adc
xlat
lret
add
stos
movsl
cmpsb
int
add
mov
hlt
sbb
push
push
stos
sbb
jbe
cmp
daa
pop
mov
ljmp
notb
pushf
push
jno
add
sub
jbe
cltd
stos
and
fldenv
push
sub
ljmp
adc
push
icebp
sub
jmp
adc
mov
fdivrp
jne
into
xor
out
in
push
sub
fbld
imul
out
cmp
mov
sub
dec
mul
push
stos
pushf
js
aaa
mov
test
iret
in
bound
lahf
insb
cltd
pop
lods
dec
sbb
adc
jae
mov
enter
adc
lea
add
jmp
xchg
or
push
orb
jno
xor
addr16
pushf
nop
lret
fildll
push
mull
lods
lret
jg
push
jnp
dec
arpl
xchg
inc
inc
mov
and
push
mov
inc
leave
cmc
sbb
clc
bound
fidivrs
fidivrl
mov
cwtl
icebp
insb
add
push
shrb
cmp
push
inc
fiaddl
ljmp
inc
out
xchg
xchg
lret
push
push
pop
xchg
pop
cmp
pop
loope
gs
jg
xchg
xchg
popa
mov
xchg
adc
dec
mov
rcr
fldl
push
ret
rcl
or
idiv
sub
roll
loope
clc
cmpsl
int
loope
push
fwait
insb
sbb
pop
cmp
pop
xchg
sahf
push
test
mulb
insl
push
mov
sbb
in
dec
mov
xor
pusha
pop
xchg
icebp
push
shrl
jne
sub
push
cmp
das
or
inc
fadds
roll
dec
xor
das
jecxz
cmp
mov
js
sub
fildll
adcb
fsubr
mov
adc
popa
xor
fiaddl
mov
jae
test
jecxz
dec
data16
lcall
das
xchg
repz
loop
cmp
push
and
cmp
adc
test
mov
pushf
mov
int
inc
jo
dec
mov
sub
out
aad
lods
jbe
rcr
sub
xor
xchg
ss
mov
xchg
shll
xor
fistpl
aam
sub
imul
jb
dec
sahf
sub
push
mov
jle
sub
jg
pop
insl
aas
cld
out
lds
inc
int3
les
jp
xlat
push
les
sub
cs
inc
mul
mov
mov
push
inc
jmp
cli
inc
cmc
push
out
pop
inc
push
adc
dec
add
in
cwtl
lods
dec
sbb
fcmove
test
sub
pushf
outsb
cmpsl
add
mov
mov
enter
mov
xor
shlb
imul
pop
push
pop
test
push
jo
in
mov
adc
sub
mov
adcb
push
mov
scas
jne
dec
push
incl
jl
loop
dec
daa
dec
fsubrs
cmp
stos
push
bnd
mov
xchg
xchg
lds
dec
xor
xchg
test
cmp
shr
pop
cs
xor
pop
fs
sahf
pop
jns
lds
adc
lock
sub
sub
leave
popa
ds
ljmp
mov
pop
xor
stos
add
sbb
andb
lahf
xchg
outsl
lea
xor
pop
jp
adc
movsb
ss
ss
repz
adcl
loope
arpl
dec
mov
call
cs
lods
jae
jmp
and
jns
in
lock
stos
jb
fwait
int
movsb
mov
jp
adc
adc
popf
cmp
enter
push
fldcw
and
rcll
pop
pop
test
cmpsb
subb
mov
fldt
sbbb
add
mov
cmpsl
mov
aaa
popa
dec
or
rolb
dec
pop
ffree
scas
hlt
scas
or
sub
addb
push
mov
sub
stc
mov
push
adc
mov
test
cmpb
sbbl
mov
fnstsw
cmp
lea
testb
push
lcall
sub
and
jge
xor
test
xchg
xor
jmp
pop
popl
push
inc
nop
test
xchg
dec
loope
and
and
adc
fstpt
pop
mov
pop
ret
rorl
jb
push
mov
lea
nop
add
fisttps
mov
push
dec
lea
fs
cmpsl
push
adc
jmp
decb
push
adc
mov
push
dec
cmp
rcrl
xor
jecxz
dec
or
movsb
lea
testb
iret
jp
adcb
repnz
daa
lock
xor
popf
pop
push
push
mov
ret
add
cli
pop
inc
pusha
cmp
sub
int
aas
cmp
add
ss
or
mov
sub
scas
ror
fwait
pop
push
adc
xchg
lods
adcb
push
pop
fcmovb
clc
int3
subb
jns
popf
mov
mov
adc
jnp
rolb
or
fsubrs
adc
jmp
out
mov
into
scas
xlat
popa
sbbl
jae
and
arpl
cltd
and
inc
sahf
imul
push
lea
dec
ljmp
jge
mov
xor
fstl
stos
test
jge
lods
arpl
add
mov
sbb
test
loope
cmovbe
add
sti
push
mov
mov
add
cmp
xchg
movsb
ficompl
or
lock
cwtl
fs
push
test
movsb
icebp
mov
movsb
add
pushf
roll
fisubrl
pop
inc
movsb
cmp
and
pop
jnp
fucomip
shrb
scas
repnz
sub
pop
sub
aam
dec
xchg
xchg
xchg
lahf
insl
popf
or
xchg
fnsave
adc
pop
mov
lods
xor
scas
cmp
add
or
mov
insb
dec
mov
shlb
mov
out
stc
sahf
sbb
add
and
ret
fldl
mov
and
inc
in
arpl
iret
add
push
aam
xchg
fldcw
pop
sbb
in
stos
xor
pop
or
mov
insl
into
pop
rclb
mov
sti
bound
hlt
out
in
mov
movlps
adc
mov
in
cmc
enter
and
mov
insl
in
fwait
xchg
in
push
xchg
dec
mov
test
jp
dec
cmp
inc
xor
fs
or
sbb
sub
cmp
enter
call
mov
mov
push
pop
js
or
sbb
sub
cmp
enter
call
mov
mov
fs
js
or
sbb
sub
cmp
int3
sti
fsubr
loope
cld
ret
mov
mov
sahf
je
loopne
push
or
cmp
sub
lcall
inc
mov
push
loop
repnz
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
