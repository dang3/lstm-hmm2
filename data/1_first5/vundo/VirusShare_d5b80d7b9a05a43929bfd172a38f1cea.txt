ret
ret
push
xchg
jmp
push
addr16
pushl
nop
call
xchg
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
xchg
xor
xchg
inc
mov
call
addr16
jmp
dec
dec
push
nop
or
and
or
shr
mov
and
addr16
sub
push
pop
mov
xchg
andl
push
pop
push
nop
xor
xchg
and
push
pop
jmp
push
nop
push
addr16
push
mov
jmp
mov
push
pop
or
and
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
xor
xchg
jmp
push
mov
call
xchg
sub
xor
shr
pop
jmp
sub
inc
sub
mov
push
mov
push
push
pop
push
push
pop
push
mov
pushl
xchg
jmp
rol
add
inc
dec
and
add
push
xchg
push
addr16
push
mov
push
mov
add
mov
push
addr16
jmp
nop
nop
nop
nop
nop
mov
nop
nop
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
mov
mov
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cltd
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
and
xchg
jmp
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
xchg
jmp
call
xchg
jmp
dec
dec
dec
push
nop
sub
mov
push
mov
push
push
pop
push
nop
ror
add
sub
add
inc
mov
and
ror
shr
xor
mov
mov
shr
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
xchg
jmp
pushl
addr16
call
xchg
movl
push
pop
call
nop
jmp
dec
dec
dec
push
mov
shr
or
and
mov
sub
mov
push
xchg
push
addr16
push
mov
jmp
mov
xchg
jmp
je
jmp
dec
dec
dec
dec
dec
dec
push
nop
and
xor
shr
and
mov
sub
mov
xor
ror
and
mov
mov
xchg
andl
nop
push
addr16
nop
nop
nop
nop
nop
add
mov
shl
xor
mov
or
and
sub
shl
mov
push
mov
push
mov
mov
add
sub
mov
mov
xchg
add
push
pop
jmp
push
nop
push
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
addr16
push
mov
xor
nop
push
push
pop
push
nop
push
push
pop
push
xchg
jmp
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
push
mov
jmp
dec
dec
dec
dec
dec
dec
call
mov
mov
nop
mov
xchg
jmp
jle
xor
mov
xor
mov
mov
jmp
dec
call
mov
mov
mov
mov
xchg
mov
mov
and
and
mov
mov
jmp
add
inc
push
xchg
jmp
dec
dec
dec
dec
dec
push
push
pop
shl
and
sub
inc
mov
push
xchg
push
xchg
cmpl
nop
jmp
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
xor
push
pop
jmp
push
push
pop
call
xchg
movl
xchg
jmp
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
dec
dec
push
xchg
sub
shl
shr
mov
push
addr16
jmp
dec
dec
dec
dec
dec
push
xchg
jmp
push
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
call
push
pop
mov
nop
mov
push
pop
jmp
sub
mov
jmp
mov
mov
mov
addr16
jmp
dec
dec
dec
dec
dec
dec
dec
push
xchg
inc
add
mov
sub
xchg
or
or
sub
shr
mov
push
xchg
push
xchg
push
push
pop
push
nop
add
xchg
jmp
nop
and
or
dec
dec
dec
dec
dec
dec
dec
dec
push
nop
push
nop
pushl
xchg
pushl
push
pop
call
push
pop
leave
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
xchg
call
addr16
xor
ror
ror
mov
add
shl
add
inc
shr
mov
mov
add
or
mov
add
nop
jmp
add
xor
mov
add
xor
shr
xor
mov
xor
pop
or
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
jmp
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
addr16
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
or
inc
mov
inc
or
mov
shl
ror
xor
rol
and
pop
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pushl
or
or
push
mov
and
add
mov
dec
dec
sub
or
shl
sub
and
add
mov
dec
test
jne
pop
pop
call
jmp
dec
push
mov
rol
or
or
and
or
mov
sub
mov
jmp
add
mov
add
addr16
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
push
xchg
push
xchg
xor
xchg
push
add
xor
push
shr
or
sub
push
add
and
dec
pop
ror
inc
or
dec
test
jne
pop
pop
mov
call
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
call
xchg
jmp
pushl
push
pop
push
addr16
pushl
mov
push
xchg
call
xchg
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
inc
mov
mov
or
mov
andl
xchg
push
addr16
or
xor
mov
ror
pop
add
nop
jmp
call
mov
mov
dec
sub
and
add
pushl
xor
xor
and
mov
rol
pop
or
sub
and
add
add
add
rep
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
and
sub
and
add
and
ror
inc
xor
sub
mov
and
mov
jmp
call
addr16
or
sub
add
mov
jmp
push
nop
popl
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
movzwl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
mov
or
mov
pop
cmp
mov
jmp
mov
shr
dec
and
mov
movzbl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
nop
jmp
add
nop
push
nop
sar
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
nop
jmp
dec
orl
dec
dec
dec
dec
dec
dec
add
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jle
mov
nop
push
mov
rol
sub
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jle
or
sub
xor
mov
sub
xchg
jmp
push
nop
pushl
mov
push
sub
rol
xor
or
push
xor
mov
pop
add
sub
mov
dec
test
jne
pop
pop
call
jmp
push
xchg
xor
mov
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
xchg
dec
mov
shr
or
sub
rol
sub
mov
jmp
and
add
mov
shl
dec
mov
mov
mov
mov
push
pop
xor
shr
ror
and
shl
mov
add
pop
cmp
mov
pop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jbe
add
addr16
jmp
pushl
and
add
or
pop
jmp
mov
dec
ror
mov
and
xor
sub
shl
mov
add
xchg
movzwl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
mov
mov
inc
pop
cmp
xchg
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
xchg
and
rol
add
mov
push
nop
inc
sub
or
xor
ror
mov
push
xchg
xor
ror
shr
sub
mov
push
push
pop
rol
mov
jmp
jne
xor
mov
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
addr16
call
addr16
sub
pop
jmp
nop
dec
dec
dec
dec
dec
add
xchg
cmpl
push
pop
je
push
addr16
mov
or
xor
mov
sub
push
pop
shr
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
mov
mov
mov
xchg
xor
ror
rol
mov
jmp
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jbe
add
xchg
jmp
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
sub
mov
xor
xor
sub
pop
xor
pop
ror
or
sub
ror
pop
ror
pop
call
nop
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
movl
nop
xor
mov
sub
xor
inc
mov
shr
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
xchg
and
xchg
mov
xchg
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
xchg
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
jmp
sub
xchg
dec
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
mov
mov
sub
xchg
decl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
or
sub
pop
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
inc
mov
xor
rol
pop
jmp
inc
mov
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
or
sub
xor
or
pop
inc
add
sub
and
pop
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
xchg
andl
mov
add
addr16
mov
push
pop
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
add
ror
mov
add
xor
mov
jmp
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jle
mov
xchg
movzwl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
mov
and
xchg
cmp
mov
jmp
add
nop
mov
addr16
dec
mov
xor
shl
and
sub
mov
dec
mov
sub
mov
mov
rep
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
jmp
rol
mov
and
add
jmp
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cmpb
push
pop
jmp
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
jmp
jle
mov
ror
mov
add
addr16
add
nop
jmp
mov
addr16
dec
add
mov
movsbl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
rol
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
addr16
incl
nop
add
mov
add
xor
mov
jmp
push
nop
call
mov
mov
mov
inc
xor
shr
mov
movl
mov
call
addr16
mov
xor
shr
and
pop
add
inc
mov
call
mov
jmp
jne
and
mov
add
xchg
jmp
add
addr16
movzwl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
incl
mov
add
xchg
cmp
push
pop
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jl
jmp
clc
sbb
mov
dec
mov
mov
xchg
and
mov
mov
add
xchg
jmp
lahf
andb
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cmpb
nop
je
jmp
push
adc
mov
shl
xor
and
add
pushl
mov
jmp
mov
xchg
dec
mov
xor
add
xor
inc
inc
mov
jmp
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pushl
mov
pop
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
add
mov
mov
mov
mov
pusha
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
call
xchg
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
push
mov
jmp
dec
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
mov
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
mov
add
shl
and
mov
cmp
push
pop
jmp
lahf
dec
insl
push
mov
call
xchg
dec
mov
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
pop
push
xchg
push
nop
jmp
dec
pop
mov
fildl
xor
inc
add
sub
xor
dec
sub
pop
jmp
xor
je
incl
push
pop
add
dec
or
ror
ror
mov
jmp
add
add
mov
push
mov
call
push
pop
push
xchg
sub
or
mov
pop
pushl
inc
shr
shl
pop
xor
nop
jmp
inc
nop
inc
xchg
decl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
add
mov
cmpl
addr16
jne
or
sub
pop
jmp
mov
and
mov
or
and
mov
jmp
shr
sub
mov
rep
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
xchg
movzwl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
incl
xchg
add
xchg
jmp
mov
mov
push
push
pop
call
mov
add
nop
push
popl
movb
xchg
movl
xchg
call
nop
popa
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
xor
mov
add
add
add
xor
rol
pop
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
mov
dec
addr16
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
jle
ror
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
nop
jmp
cmp
push
pop
jl
xor
mov
jmp
jmp
shl
mov
mov
nop
add
mov
add
shr
ror
and
sub
pop
mov
and
ror
sub
and
ror
pop
leave
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
mov
call
xchg
mov
sub
inc
sub
pop
push
xchg
pushl
addr16
call
xchg
jmp
cmp
mov
jmp
jmp
mov
pusha
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
push
pop
popa
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
xchg
call
addr16
push
or
sub
sub
pop
jmp
je
add
ror
shr
xor
sub
mov
sub
push
pop
mov
xchg
mov
xchg
jmp
movb
xchg
jmp
add
xchg
dec
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
dec
shl
xor
shr
or
pop
dec
add
pop
leave
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
rorl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
xchg
dec
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
jmp
and
mov
ror
mov
sub
mov
mov
addr16
call
xchg
mov
push
pop
or
xor
rol
sub
and
mov
jmp
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jl
sub
and
mov
add
pushl
xchg
jmp
or
and
rol
mov
add
add
call
nop
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
incl
mov
jmp
sub
ror
shl
ror
mov
movzbl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
and
mov
movzwl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
xchg
add
xchg
sub
sub
or
pop
mov
sub
and
pop
mov
xor
sub
pop
leave
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sub
mov
xor
pop
mov
shl
dec
pop
xor
pop
leave
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
inc
and
mov
jmp
mov
cmp
rorl
loop
ret
add
adc
dec
dec
mov
jmp
mov
and
xchg
xor
xchg
inc
xchg
sub
add
mov
jmp
in
adc
out
xor
add
xor
mov
rep
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pushl
mov
call
xchg
jmp
add
xchg
call
nop
jmp
and
xchg
inc
xchg
inc
mov
shr
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
inc
shr
mov
rol
mov
xor
inc
sub
rol
or
mov
jmp
push
addr16
call
addr16
jmp
and
shr
and
xor
mov
pop
push
xchg
pushl
xchg
call
mov
or
sub
mov
add
sub
mov
sub
add
add
mov
mov
nop
jmp
sub
push
pop
mov
xchg
incl
nop
dec
push
pop
nop
nop
nop
nop
nop
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
jmp
mov
nop
mov
mov
jmp
and
mov
xor
rol
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
pushl
and
and
sub
xor
pop
sub
add
add
mov
add
addr16
jmp
call
push
pop
mov
xchg
sub
dec
sub
mov
and
mov
sub
add
or
dec
dec
and
add
rep
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
testl
loop
call
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
cmp
nop
jne
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
push
pop
jmp
sub
addr16
jmp
jmp
lret
cmp
pushl
mov
jmp
in
fcomps
dec
xor
mov
dec
mov
sub
mov
shr
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
call
xchg
push
xchg
call
xchg
shl
mov
shl
inc
sub
add
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
xor
mov
xor
mov
jmp
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
shl
add
xor
and
mov
sub
mov
mov
rol
sub
xor
rol
mov
mov
nop
incl
nop
jmp
jle
mov
mov
jmp
add
mov
sub
mov
jmp
sub
mov
sub
addr16
shr
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
dec
nop
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
jmp
sub
push
pop
jmp
dec
addr16
dec
mov
mov
shl
mov
nop
nop
nop
nop
nop
movzbl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
shl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
or
dec
mov
mov
movzwl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
shr
mov
and
addr16
cmp
addr16
jne
and
xchg
jmp
jle
mov
push
pop
inc
and
mov
inc
mov
mov
movzwl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
rol
shr
or
mov
and
xchg
cmp
nop
jne
jmp
add
mov
incl
xchg
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
or
sub
and
shl
mov
call
xchg
cmp
addr16
jmp
add
mov
add
xchg
add
mov
rol
sub
inc
add
or
mov
addl
xchg
decl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
mov
decl
add
nop
add
mov
add
xchg
jmp
rcrb
jne
add
mov
cmpl
mov
jne
call
nop
mov
mov
mov
nop
mov
mov
and
and
mov
shr
sub
mov
jmp
add
xchg
pushl
inc
sub
pop
addl
mov
decl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
add
jmp
sbbb
add
inc
addr16
jmp
mov
ja
incl
inc
add
xchg
cmpl
xchg
jmp
cmp
addr16
jb
inc
xchg
cmp
mov
jae
inc
push
pop
inc
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
mov
add
fwait
push
repnz
call
xchg
push
xchg
mov
push
pop
call
nop
shl
or
shr
and
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
mov
add
add
dec
and
or
or
mov
sub
rol
xor
sub
mov
sub
nop
mov
xchg
incl
mov
dec
xchg
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
pop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
mov
sub
call
addr16
mov
xchg
mov
mov
jmp
xchg
dec
inc
pop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
mov
nop
xor
sub
or
add
shl
mov
push
xchg
call
mov
andl
nop
sub
xor
pop
mov
xchg
push
mov
and
dec
xor
dec
rol
pop
jmp
jne
mov
mov
xor
nop
inc
xchg
jmp
and
and
mov
ror
mov
xor
xor
mov
nop
nop
nop
nop
nop
mov
push
pop
incl
mov
incl
push
pop
mov
push
pop
xor
xchg
cmpl
xchg
je
jmp
je
pushl
sub
pop
add
nop
jmp
add
xor
shl
mov
add
xchg
push
addr16
call
mov
cmp
addr16
jmp
add
nop
push
xchg
popl
addr16
pushl
push
pop
call
mov
nop
nop
nop
nop
nop
mov
add
and
and
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
shr
mov
sub
pop
sub
xchg
ror
shr
mov
or
pop
shr
add
add
mov
and
and
pop
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
or
shl
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
ror
xor
sub
inc
mov
pushl
sub
xor
ror
sub
pop
nop
nop
nop
nop
nop
or
or
ror
xor
xor
mov
add
xchg
add
nop
jmp
jns
movzwl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
mov
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
jmp
js
sahf
jmp
jmp
stc
sbb
add
and
add
add
addr16
jmp
or
mov
and
mov
add
push
pop
push
mov
call
xchg
cmp
push
pop
jmp
pushf
mov
ror
mov
or
sub
mov
add
xchg
add
mov
push
xchg
pushl
xchg
call
xchg
mov
nop
add
xchg
add
xchg
jmp
in
inc
sbb
inc
lock
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
add
and
add
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
add
mov
jmp
adc
cmp
rol
or
and
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
and
test
call
add
add
mov
or
rol
add
sub
mov
add
mov
add
push
pop
jmp
jmp
mov
pop
incl
jnp
add
jne
call
mov
mov
xchg
mov
sub
add
mov
pushl
xor
shr
rol
add
pop
or
shl
and
rol
pop
jmp
cld
cmpsl
sbb
add
movzwl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
or
or
mov
add
push
pop
add
mov
push
nop
jmp
add
push
and
pop
shl
sub
sub
pop
mov
mov
cmp
xchg
jne
and
shr
mov
add
add
nop
mov
nop
shr
and
inc
xor
and
add
add
add
jmp
push
pop
pushw
xchg
call
nop
mov
mov
add
push
pop
add
addr16
and
and
and
or
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
mov
pop
inc
add
mov
leave
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
add
mov
cmpl
xchg
jne
call
xchg
mov
mov
xor
shr
or
dec
mov
mov
and
sub
sub
and
add
mov
mov
nop
nop
nop
nop
nop
cmp
xchg
jne
and
or
mov
sub
mov
add
mov
sub
xor
add
and
pop
mov
mov
push
ror
pop
add
add
add
xchg
mov
shr
or
pop
nop
nop
nop
nop
nop
xor
add
xor
pop
leave
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sub
xlat
cmp
insb
jmp
adc
lret
xchg
push
sbb
shrl
test
push
out
add
je
lret
mov
add
loop
and
sti
jns
fs
lret
stc
ss
lcall
je
cmp
xor
imul
mov
mov
sbb
idiv
pop
shrl
push
jp
inc
leave
inc
mov
jae
mov
push
adc
sub
dec
mov
neg
ret
inc
cmp
loopne
test
nop
jns
loopne
jne
or
cmpsl
movb
pop
ja
sub
popf
xchg
mov
js
pushf
pop
jno
jo
int
fidivrs
mov
addl
roll
fisttpll
cmp
enter
aaa
cmp
addr16
jp
daa
cmp
scas
jno
adcl
and
iret
jnp
out
push
xor
mov
cmp
sbb
dec
pop
inc
rolb
adc
ror
mov
lock
mov
xor
subb
xchg
fbstp
mov
testb
shlb
mov
pop
jb
pop
xor
xor
sbb
daa
hlt
and
fsubr
dec
fcoms
mov
pushf
or
call
lret
arpl
std
cmc
mov
addl
es
cmpsb
jae
push
fwait
loop
and
mov
mov
jmp
and
js
dec
pop
jle
sbb
sbb
cmpsl
push
out
sbb
jp
cmpsl
imul
xor
adc
cli
mov
mov
dec
ds
jl
adc
das
mov
popf
sbb
incb
and
cmp
xchg
loop
pusha
mov
xchg
add
notl
mov
aad
sub
cmp
mov
adc
imul
sbb
fcmovne
hlt
add
out
sahf
nop
cld
stos
orl
sbb
push
sbb
test
fcoml
mov
ss
sbb
mov
das
lds
and
sbb
push
push
icebp
je
mov
or
pop
sbb
push
repz
pop
adc
or
push
js
xchg
mov
pop
push
insb
mov
adc
or
mov
jo
pop
jg
cmp
or
insb
rcll
push
push
in
pop
into
sbb
cmp
imul
dec
repnz
aam
outsb
cmpsl
fsubs
and
jns
mov
frstor
pop
mov
movsl
lods
pushf
mov
pop
pop
sub
dec
sub
cmpsl
stos
sbb
daa
xor
pop
movsb
aad
mov
jl
fstsw
test
pushf
inc
inc
cli
mov
test
jp
cmp
pusha
mov
jge
sbb
in
bound
iret
xchg
subl
sarl
loopne
jmp
negl
out
dec
lea
fwait
in
xchg
dec
mov
add
sub
push
mov
push
and
jle
loopne
test
or
add
pop
sahf
notb
xor
jmp
sub
sahf
add
lods
iret
or
inc
mov
or
xchg
lea
orb
inc
jne
out
cmpsl
jl
movsl
mov
test
sbb
pusha
cmpsb
add
sbb
call
lea
pcmpeqd
cmp
out
cmp
inc
xor
sbb
leave
and
mov
inc
lock
mov
xchg
test
pop
jb
xchg
hlt
in
cmp
jnp
xchg
or
stos
sbb
dec
xchg
xchg
xchg
insl
sub
and
add
sbb
push
adc
inc
adc
jge
and
fsubp
outsl
in
push
jae
jae
pusha
xchg
daa
cmpsw
subl
cmp
movsl
inc
and
sub
into
cmpsb
jecxz
xchg
add
in
repz
and
xchg
adc
cld
lods
mov
add
xor
popa
dec
test
sbbb
dec
test
xor
pop
inc
or
sarl
jl
loope
call
into
les
mov
test
movsl
pusha
in
jns
jg
adc
cli
push
cmp
ds
test
add
addr16
sub
xchg
movsb
ficoms
and
es
lds
pop
scas
xor
mov
sahf
loop
cli
lret
push
sub
lret
mov
mov
jge
ds
pop
ret
sbb
and
jge
out
test
les
cmp
or
mov
shr
xlat
cli
push
xchg
mov
or
loope
xor
pusha
insl
dec
adc
jg
jbe
sahf
jmp
jp
jbe
dec
inc
push
adc
in
inc
sarl
add
jecxz
mov
insb
push
les
movsl
and
lret
jb
int3
jp
jo
outsl
ljmp
repnz
clc
out
inc
adc
or
test
pushf
enter
cli
push
xchg
mov
inc
xchg
mov
cmp
add
xor
addb
mov
mov
bound
or
lea
repz
jns
repnz
push
in
mov
aas
dec
aaa
fnsave
xlat
mov
sub
aas
outsl
xchg
decl
add
lods
sbb
inc
popf
sbb
mov
push
push
sahf
je
push
xlat
cmpsl
arpl
or
fidivrl
loope
les
cmp
lock
adc
cwtl
fimull
xchg
sbb
mov
cltd
sbb
call
cmpsl
sahf
addb
and
ds
pop
fcomi
mov
sbb
or
pop
xlat
shlb
pushl
mov
jge
or
scas
and
or
inc
aaa
popa
pop
push
mov
ds
cmp
lods
rcll
add
jecxz
cmp
loop
lcall
das
cmpsl
out
sub
lea
adc
stos
pop
inc
clc
xor
outsb
pop
dec
sarb
or
xchg
dec
xchg
cmp
cmp
pop
stc
into
adc
push
test
sbb
and
inc
test
shll
popf
or
testb
ret
cmp
push
fwait
fwait
in
testb
push
pushw
inc
pop
jmp
mov
xchg
cmp
outsl
sub
daa
sahf
cmp
sbb
mov
pop
je
cltd
add
sbb
mov
outsl
push
cmp
fisttps
fs
xor
jle
mov
jl
mov
mov
push
subl
imul
jns
stc
mov
mov
mov
mov
fmulp
pushf
cmp
mov
incl
push
mov
adc
sbb
inc
inc
rol
push
push
cmp
lods
jne
test
mov
sbb
dec
adc
lods
and
rcll
xchg
mov
imull
lods
mov
sub
and
int3
jb
and
fwait
dec
jne
dec
mov
mov
dec
loop
lcall
fidivl
negl
rolb
add
dec
mov
imul
lret
std
mov
pop
pavgb
jbe
mov
or
lods
inc
out
dec
fimull
push
mov
andl
nop
cmpsl
adc
int
stc
xchg
movsl
icebp
jae
or
push
ss
stc
shlb
rorl
ss
movq
popf
int3
cld
xlat
mov
push
adc
in
lds
adc
jnp
ret
mov
and
cmp
pop
bound
sub
into
leave
pushf
xchg
push
pushf
pusha
loopne
aam
mov
popf
adc
and
cld
sbb
sar
pop
aad
arpl
mov
std
pop
aam
icebp
xor
push
sbb
cld
iret
or
sub
jl
and
scas
or
ficomps
mov
jne
lock
movntps
cmp
icebp
test
inc
test
ss
add
imul
lea
xchg
xchg
xchg
in
ret
pop
fdivs
loope
jae
inc
ja
sub
lods
mov
stc
mov
mov
shl
int3
xchg
add
xor
aad
das
push
push
mov
push
push
idivb
imul
mov
sbb
cltd
jl
das
icebp
xchg
mov
mov
and
pop
ja
fstpt
jl
js
into
xchg
stos
jl
sbb
adc
sbb
test
sbb
leave
lea
mov
shlb
jb
xor
dec
mov
and
xchg
sub
je
push
cmp
call
sub
call
jge
sbb
out
out
sbb
mov
sti
pop
fdivrs
inc
mov
rcl
cmp
xor
adc
scas
mov
jo
add
pop
in
ss
jg
pop
mov
jg
lahf
push
xchg
call
xlat
cmp
push
stos
pop
mov
fldenv
mov
cltd
cmp
roll
mov
sbb
mov
push
loop
sub
pop
sar
cmpsl
ds
and
vpshad
sar
sbb
pushf
sbb
fdivrp
and
inc
jle
xchg
inc
mov
into
incb
jg
pusha
cmp
cwtl
hlt
lcall
rorb
subb
sbb
inc
lret
jl
lods
sub
ss
sbb
loope
cli
push
sahf
ret
lods
xchg
mov
dec
push
imul
xor
addr16
ret
std
pop
jecxz
sub
jae
leave
adcl
imul
cmp
testl
mov
pop
mov
push
das
dec
into
xor
daa
add
or
cwtl
aaa
push
xor
pusha
pop
jg
leave
mov
push
adc
outsl
cmp
sbb
push
outsb
mov
adc
pop
cmp
movsl
idiv
add
xchg
nop
out
mov
sub
test
inc
int
lahf
pop
loope
inc
and
cltd
mov
stos
ficomps
mov
pop
mov
movsb
mov
jmp
jae
loopne
js
inc
mov
xchg
loop
cld
xchg
mov
ds
mov
mov
sahf
jl
out
addr16
dec
xchg
ja
popf
jno
fiaddl
mov
xchg
xor
das
lds
test
cli
jge
rorl
dec
pop
dec
push
insb
fcoms
or
iret
dec
into
lock
cmpsb
jns
pop
mov
bound
sahf
cmp
adc
pop
mov
vmulps
xor
mov
cmp
hlt
push
or
addl
xor
jo
add
inc
xchg
mulb
jbe
inc
jb
push
pushf
xor
pop
mov
cltd
sub
lret
dec
mov
mov
roll
jg
loop
cmp
sbb
out
mov
nop
xor
xor
test
stc
dec
out
movsl
push
rorb
ret
jnp
cwtl
mov
lods
enter
loop
push
sbb
aam
iret
or
and
xchg
dec
inc
cmp
lcall
ja
sbb
pop
adc
cmp
repnz
loope
jne
into
aaa
mov
xlat
cmp
test
add
fs
cmp
popf
xchg
adc
iret
jns
jno
add
cwtl
adc
and
stc
xor
repz
ja
push
xchg
mov
xchg
sti
ljmp
enter
ss
jnp
mov
jg
add
jmp
stos
jae
stc
int
es
and
and
jle
jmp
xor
inc
arpl
xorb
jae
push
sub
cltd
sub
inc
lret
repnz
xor
lcall
cld
iret
in
shrb
dec
or
or
cmpsb
mov
mov
or
stc
xchg
jle
add
test
adc
pop
into
mov
rcrl
pop
data16
mov
test
cmp
popa
cmc
push
in
sbb
lods
js
push
aam
test
dec
ret
cmp
int3
popf
xchg
mov
loop
nop
pop
shrb
xor
or
xor
adcb
movsb
jg
jbe
xor
test
fcomip
cmpsb
repz
shll
push
test
jecxz
sub
in
xchg
sbb
or
aad
or
std
and
sub
mov
nop
mov
mov
sbb
shll
mov
out
faddp
push
enter
xchg
mov
out
cld
dec
jmp
in
pop
lods
cmp
and
xchg
xor
sbb
outsl
cmovae
lahf
inc
or
sub
call
sub
out
sbb
mov
arpl
dec
out
fsubrs
in
rorb
ret
xchg
inc
ficoml
rolb
jns
xlat
pop
push
into
sub
stc
sahf
adc
mov
xchg
leave
xchg
je
jo
clc
aaa
insl
rolb
roll
mov
ds
and
xor
loope
jnp
ret
test
in
mov
pusha
sahf
jmp
pusha
popf
adc
sarl
nop
pusha
mov
mov
mov
test
outsl
test
lcall
adc
inc
loopne
pop
mov
fwait
push
sbb
jg
add
scas
out
xchg
and
popa
mov
jae
add
setp
mov
stos
push
call
shr
xor
pop
test
sti
div
push
mov
pushf
fimuls
imul
pushf
cmc
lods
lea
and
mov
imul
lods
pop
scas
sbb
sub
adc
sbb
iret
cld
xorl
mov
push
sti
jp
xor
mov
pop
dec
push
or
mov
push
adc
and
jne
push
movsb
popf
pop
aaa
mov
pushf
xchg
dec
test
mov
mov
mov
pop
cmpb
mov
lods
fmul
int
imul
pop
rolb
mov
adc
dec
add
decb
in
cltd
cltd
mov
inc
jne
pop
loop
stos
movsb
cli
mov
mov
and
fwait
rcll
mov
lock
jno
stos
popa
shrl
cmp
loope
xchg
sbb
cltd
inc
repz
push
mov
xor
jle
cmp
add
push
jl
pop
or
sub
aaa
scas
pusha
jno
dec
xchg
mov
stc
int
xchg
sbb
in
mov
es
in
test
add
gs
or
sub
adc
xchg
mov
sbb
xchg
stc
add
mov
pop
mov
push
and
fcompl
popa
jns
rcll
mov
sub
ss
lock
sub
cmp
xor
push
repz
inc
jp
lcall
xrelease
daa
adcb
jno
or
in
cmpsl
into
or
daa
add
sbb
pop
mov
cmp
test
movsb
add
jne
pop
fidivl
xor
mov
jle
mov
mov
mov
push
mov
ret
mov
daa
and
out
lea
add
pushf
aas
mov
push
xor
add
xchg
cmpl
loope
push
test
cmp
scas
icebp
xchg
popa
lahf
mov
mov
cmpsb
xchg
lret
fnstcw
dec
addr16
xchg
xchg
lea
in
push
xchg
aad
data16
arpl
cltd
or
test
sub
out
ljmp
mov
add
pop
mov
sub
dec
lds
cld
jle
add
xor
sbb
cld
imul
movsb
push
or
cmpsl
rcrb
lahf
pop
pop
fidivrl
ret
insb
add
xor
ds
sti
out
cs
sbb
std
cld
in
lahf
mov
pop
or
fdivl
dec
out
jle
jo
js
mov
in
or
lock
add
push
lcall
xor
inc
cmp
sar
cmpsb
fmuls
inc
mov
sbb
int3
dec
call
dec
lods
pop
loop
sarl
vpshab
loope
adc
addr16
icebp
dec
rcrl
xchg
or
cmp
cmpsl
or
lcall
jb
and
jmp
je
dec
jg
inc
and
sub
cmp
daa
mov
outsb
rorl
rcr
pop
imul
mov
je
jecxz
out
aas
lahf
adc
adc
movsb
jae
int
xchg
mov
or
xor
js
iret
jp
jmp
loop
rcl
cmp
xchg
mov
ljmp
stc
js
xchg
stos
shlb
dec
ds
roll
mov
cmp
cmp
js
pop
xor
pop
out
xchg
lods
mov
sbb
or
out
pushw
ret
inc
shr
int
xor
mov
mov
sti
mov
cmp
xchg
or
test
pop
inc
ljmp
outsl
jmp
add
dec
xchg
sbb
outsl
or
sub
into
sahf
cmpsb
dec
rolb
sub
pop
jmp
rcr
scas
jge
inc
shll
adc
dec
push
cld
test
movsb
and
and
push
sbb
add
stos
stos
pop
inc
movsb
and
stc
jle
daa
adc
or
mov
sub
sahf
test
lods
cs
xchg
and
mov
orb
push
into
ja
sub
test
lret
cmp
shrl
popf
adc
mov
lcall
mov
xor
inc
pop
push
je
dec
faddl
fwait
or
ret
push
or
and
cmp
or
clc
mov
mov
cmp
rcll
sbb
scas
mov
push
enter
test
jmp
in
ret
stc
mov
in
and
and
jg
mov
xor
sub
add
adc
xchg
adcl
jo
xchg
mov
inc
jge
push
rcrl
pusha
dec
ljmp
dec
pop
sahf
xor
mov
out
shl
pushf
fisubl
pop
pop
rclb
push
outsl
cli
pop
inc
daa
dec
mov
das
mov
or
dec
pop
icebp
int
push
test
ficoms
or
js
shlb
xor
mov
dec
loop
notb
lds
fwait
mov
fdivrs
and
test
aam
jo
js
ds
mov
cli
sbb
ljmp
adc
jp
nop
add
inc
jae
mov
leave
mov
test
inc
jl
pusha
sbb
loop
adc
jo
xchg
stos
push
jge
inc
inc
sub
push
aam
test
push
cmpsl
test
test
jg
jb
mov
xchg
arpl
sub
addb
insb
in
cwtl
fisttpll
mov
push
cmpl
sub
push
xchg
lods
test
out
int3
push
sub
jmp
inc
mov
adc
dec
mov
mov
movsl
outsb
cmp
stc
xchg
jecxz
test
mov
repnz
lcall
hlt
les
lea
xchg
cmp
sub
out
adc
sub
aad
adc
popf
cmpb
mov
jecxz
call
jmp
jmp
cld
cli
jmp
fistpll
sbb
out
dec
shll
and
cmpsb
jecxz
fwait
dec
sahf
ja
sbb
test
es
sbb
xchg
mov
push
cld
data16
push
jns
jb
push
mov
inc
jle
in
pop
jp
in
ljmp
sahf
das
add
dec
inc
lock
sbb
jbe
push
iret
mov
jno
ret
push
xchg
and
das
pop
lods
and
jnp
fidivs
mov
insl
inc
xchg
add
push
aaa
dec
inc
shll
cmp
push
arpl
rol
sbb
pop
orl
movsb
sub
testb
repnz
jp
jno
aad
inc
fdivrs
and
shlb
lds
or
nop
inc
jbe
inc
inc
lods
add
xchg
imul
xchg
loop
adc
ret
es
xchg
jmp
jle
hlt
out
push
mov
add
cmp
popa
pop
jle
outsb
out
in
js
cmp
adc
sbb
jmp
cld
jbe
jb
sub
push
movsl
cmp
rclb
in
loop
pop
loope
mov
add
in
enter
or
stos
or
sub
mov
cmp
mov
or
mov
mov
sti
sub
jno
jg
or
mov
in
in
fs
sub
movsb
sbb
mov
mov
push
push
bound
push
add
mov
jae
mov
xor
inc
movsl
mov
jecxz
data16
scas
sbb
xorps
mov
push
andb
cltd
mov
call
std
and
xchg
je
stc
mov
repz
das
xchg
cs
test
or
int
shrb
sti
sbb
mov
push
fsub
std
pop
inc
stos
or
cmc
fnsave
xchg
icebp
and
dec
sub
mov
dec
xchg
mov
int
pusha
jbe
pop
shll
fdivrl
and
xor
cmpsb
push
inc
adc
jle
mov
push
pop
push
cmp
sub
pop
mov
loope
lea
or
cld
adc
mov
push
add
sub
sbb
sub
mov
das
cmp
jne
xchg
cmc
loope
clc
cli
pop
mov
dec
cmp
push
pop
popa
push
daa
pop
xor
sarl
dec
call
mov
in
enter
int
xchg
imul
jbe
pushf
out
outsl
insl
outsl
or
or
cwtl
out
imul
sub
test
mov
jecxz
jnp
clc
out
pusha
add
pop
mov
in
rclb
mov
in
daa
out
adc
jnp
push
pop
push
mov
sbb
outsl
or
cmp
sub
ds
add
popf
lods
xor
ljmp
pop
lods
sahf
adc
mov
sub
fwait
insl
jp
xlat
jge
push
push
or
hlt
push
push
pop
ret
push
lods
imul
xchg
or
push
addr16
shl
jnp
cltd
push
sub
lock
xlat
in
lods
cld
cmpsb
dec
xlat
cli
and
cmc
mov
cmp
xchg
sbb
add
adcb
inc
ljmp
add
sub
cmp
jge
icebp
mov
sarb
push
lcall
scas
test
addl
leave
xor
and
xorb
cltd
lret
inc
aaa
inc
iret
cmpsl
fcmovbe
not
or
js,pt
sbb
mov
xchg
fucomip
negl
js
add
daa
addb
adc
cli
pop
scas
sub
testl
in
daa
andl
daa
push
ss
sub
ds
cltd
jno
pop
mov
pop
test
mov
inc
xchg
mov
mov
out
stos
fdivp
jae
insb
pop
dec
in
and
or
sbb
lcall
push
cmpsb
sub
in
mov
cmp
sub
add
test
and
cmp
adc
sub
sub
out
dec
sbb
jns
add
jo
push
mov
sub
xchg
xlat
or
dec
xorl
fs
xor
outsl
clc
and
jbe
mov
jbe
dec
clc
test
push
xchg
insl
imul
jl
out
ffree
sub
pop
imul
pop
sub
das
sbb
xor
push
or
outsb
fisubrs
imul
xchg
inc
lods
lds
ss
pop
cwtl
clc
pop
fs
stos
or
icebp
dec
in
push
inc
sti
sbb
imul
jl
push
jge
shlb
cli
in
sub
ljmp
mov
and
hlt
loop
sti
cmp
xchg
negb
xor
jns
jb
fst
adc
dec
leave
in
popf
in
or
mov
pop
add
sbb
loopne
mov
or
lock
pop
subb
adc
lods
imul
imul
jno
clc
pop
mov
xor
and
das
lock
mov
jo
data16
outsb
dec
test
lods
stos
lock
dec
test
pop
loop
and
test
jg
test
dec
ret
xchg
out
outsl
pop
ret
xor
jnp
pop
inc
cmpsl
cltd
pop
cmpb
ja
aas
or
cmp
sti
pop
jae
add
pop
adc
cmp
mov
jecxz
scas
xor
dec
and
adc
cmpsb
fsubrl
imul
mov
cmp
push
imul
test
lds
in
adc
int3
or
jmp
mov
sbb
dec
stos
pop
pushf
jl
mov
mov
pop
insl
shrd
cwtl
add
ds
je
xchg
aaa
xor
push
sbb
xor
xorl
add
mov
nop
mov
cmp
xor
std
mov
iret
test
mov
xor
lods
adc
jne
lds
push
jp
cmp
dec
dec
cmp
adc
push
sub
jmp
and
jl
xchg
mov
out
pop
push
xor
out
push
pushf
sbb
and
inc
inc
mov
cld
cs
sbb
ret
xchg
std
pop
mov
add
cmp
sbb
jno
pop
loop
pop
cmp
shl
jg
lds
inc
cmp
sbb
lock
add
jmp
or
orb
std
aam
leave
insl
fwait
add
add
mov
sub
arpl
sub
imul
push
add
outsb
pop
leave
add
aad
pop
or
add
mov
fstpl
imul
lock
aas
lds
fstps
sub
sub
add
shr
mov
and
gs
sbb
sbb
outsl
in
sahf
adc
scas
pop
jmp
notl
cltd
fisubl
and
aam
aam
addb
fistpl
lds
pop
jg
imul
mov
ret
loop
jmp
jbe
xor
mov
imul
push
sub
add
or
mov
inc
inc
sub
sbb
dec
pop
jge
cwtl
jmp
hlt
or
pop
pop
arpl
pop
sbb
daa
lcall
popf
inc
cltd
andl
mov
addr16
mov
sub
sar
es
sbb
scas
dec
push
mov
mov
stc
inc
testb
dec
mov
push
aam
rcl
shl
jecxz
push
les
cmp
add
adc
aaa
sub
dec
notl
dec
inc
loopne
ret
cmc
xchg
dec
int
jmp
xor
in
fcoms
outsb
jnp
test
dec
and
rclb
stc
int3
jnp
aam
inc
push
bound
or
insb
rclb
enter
imul
xor
leave
scas
inc
xor
xchg
icebp
lahf
inc
lds
add
cmp
xchg
inc
lds
xchg
cmp
and
dec
push
dec
pushf
and
pusha
xchg
icebp
rcrl
adc
in
shll
cmp
pop
aad
js
jl
and
mov
sub
aaa
popa
dec
arpl
inc
jle
insl
gs
test
arpl
rolb
flds
jae
popf
inc
mov
push
jb
mov
jg
fldenv
sahf
push
jb
sbb
adc
iret
fmulp
mov
mov
fdivrl
cltd
xchg
lds
into
mov
push
mov
jo
and
mov
cmp
mov
mov
jo
pop
dec
push
mov
and
test
fisubrs
mov
loop
enter
mov
xor
push
arpl
mov
dec
dec
ret
stos
jno
shll
inc
jecxz
add
push
mov
or
jmp
dec
mov
inc
xor
js
mov
jnp
or
subb
pop
xchg
cli
cmp
arpl
and
push
mov
mov
or
pop
stos
jg
imulb
aas
adc
test
arpl
loop
xlat
xbegin
imul
jbe
js
cmp
idivl
xchg
ss
mov
sbb
call
mov
inc
cmp
stc
stc
mov
bound
inc
int
cmpsl
rol
cmp
jle
mov
sbb
and
xlat
pop
xor
jmp
mov
or
ret
jge
jbe
pop
repz
fbstp
push
mov
imul
mov
divl
mov
lahf
arpl
rcll
out
orl
shl
sub
mov
clc
rclb
adc
int
add
xor
lcall
push
add
sub
test
adc
xlat
push
inc
pop
xchg
enter
pop
cmpsb
jle
aaa
repz
mov
xor
cwtl
or
scas
xchg
add
fmull
sbb
pop
lea
int3
fwait
mov
mov
sub
xchg
mov
mov
out
xlat
push
and
jno
pop
and
cmp
lcall
daa
push
and
les
or
shlb
ja
jg
pop
mov
inc
xchg
mov
iret
andl
into
cwtl
fistps
sub
adc
add
out
shll
fs
mov
pop
mov
mov
or
jbe
push
sbb
dec
sub
or
dec
out
aam
sar
je
lcall
std
pop
js
mov
xchg
cmp
fsubl
or
add
fdivr
adc
subl
add
pop
scas
mov
mov
lea
int3
lds
sbb
loopne
jnp
in
fwait
cwtl
adc
add
iret
mov
xor
push
cmp
pop
jg
enter
ret
sti
and
push
aad
shrb
mov
scas
bound
mov
sbb
popf
and
xor
rcrb
fisubl
and
push
sbb
lea
mov
mov
adc
insl
jle
push
pop
push
xchg
sub
test
pop
xor
das
sarl
xchg
xor
call
call
push
push
fiaddl
or
popf
add
xlat
fsubr
cmp
lea
ret
sbb
mov
outsb
sbb
out
int
mov
dec
and
mov
shrb
test
adc
cmp
cmp
arpl
dec
or
scas
mov
sbb
mov
movsb
mov
outsb
xchg
int
out
sbb
into
nop
sbb
imul
sub
xchg
adc
addb
jbe
dec
imul
notb
hlt
mov
int
pop
dec
ss
sbb
xchg
in
loop
lret
in
pop
jecxz
jns
mov
je
hlt
pop
mov
fisubl
leave
jbe
lds
fs
sbb
insb
mov
adc
inc
or
cmpsb
sbb
and
imul
pop
jae
stc
pop
mov
movsl
sbb
lds
xorb
or
cmc
stos
adc
and
cmp
iret
es
mov
and
pop
adc
les
mov
xchg
mov
fdiv
jmp
pop
outsl
js
je
inc
test
in
das
xlat
cmc
jne
loopne
mov
dec
jbe
ss
cltd
inc
rcrb
cmpsb
ja
add
jbe
pop
pop
pop
out
outsb
dec
lahf
fcoms
cld
ljmp
movsb
pop
push
rorb
xor
repnz
add
aam
push
sbb
mov
fwait
sbbl
xor
pop
ret
mov
push
rcrl
pop
fdivrs
cmpl
stos
es
sbb
arpl
movq
jae
mov
push
sub
nop
cli
out
jle
cmpsl
mov
xchg
dec
shll
mov
cs
dec
dec
or
je
andl
mov
add
jae
call
xchg
negb
jmp
stos
mov
jns
das
addr16
push
xor
xorb
inc
add
pop
shrl
mov
push
mov
cmp
insl
lods
int3
iret
lods
mov
xor
jge
sti
xchg
xor
idivb
jp
sbb
nop
jge
pusha
xchg
dec
outsb
ss
sbb
inc
in
rorl
sbb
sti
jne
cs
inc
leave
and
lret
imul
mov
das
nop
leave
mov
push
ds
push
inc
adc
rcrl
lcall
sbb
dec
mov
fwait
dec
hlt
and
lret
outsb
add
cwtl
shll
into
bsf
test
mov
pop
dec
push
xlat
int3
mov
cmp
inc
pop
mov
inc
mov
in
xchg
mov
ror
xor
cwtl
mov
add
cwtl
es
push
aam
cmp
scas
xchg
insb
out
ret
ret
sbb
dec
cld
mov
aad
sbb
mov
stos
or
mov
mov
mov
les
js
shrl
add
pop
shr
jne
sar
sub
lcall
icebp
sahf
repz
dec
adc
imul
stos
pop
ret
in
ss
cmp
cmp
inc
jl
fs
jnp
jge
roll
xchg
bswap
cmp
push
rorl
pop
dec
lods
xchg
pop
lea
scas
sub
bnd
cltd
adc
das
pop
mov
clc
push
pop
cmp
jb
cmp
movsl
or
and
jl
enter
into
cmpsl
call
adc
not
out
rcrl
pop
daa
mov
or
mov
mov
push
rorl
pop
push
sahf
hlt
dec
push
or
cmp
roll
xor
mov
addl
nop
pusha
rorb
push
push
outsb
adc
movsl
imul
rolb
push
shll
repz
sub
je
mov
mov
and
fidivs
lea
mov
andps
sub
or
push
cmpsl
push
cwtl
xchg
ja
mov
jle
hlt
push
rorb
sub
inc
dec
mov
push
pop
ret
push
nop
jmp
xor
in
popl
jbe
jecxz
sub
popa
push
sub
outsl
jae
stos
clc
cld
movsb
cmpb
and
ret
mov
js
ja
fisubs
imul
dec
or
test
jbe
into
mov
cmp
adc
or
mov
sub
jp
mov
fst
xchg
loopne
vrcpps
adc
cmp
es
jmp
jbe
pop
test
into
mov
jecxz
pop
mov
imul
pop
mov
fmuls
repnz
or
out
imul
push
mov
aas
scas
repz
les
cmc
xor
and
pusha
adcb
gs
icebp
movsl
pop
xor
sub
push
xor
int
add
mov
cwtl
cltd
xor
sub
ret
mov
mov
adc
xchg
push
in
in
ss
mov
lods
jl
dec
enter
jns
cld
or
and
movsb
or
jb
es
aas
mov
mov
sub
out
in
or
lahf
fcom
fsubs
inc
xor
fisubs
test
dec
movsl
push
scas
out
mull
in
insb
mov
stos
dec
mov
push
and
xchg
fsubrl
fbld
aam
scas
cli
adc
sbb
clc
mov
daa
inc
flds
ret
movl
fld
out
pop
xor
jbe
movb
mov
xchg
lret
in
gs
add
or
cmpb
dec
out
sbb
sub
add
cmp
fstl
lock
sbb
jns
filds
pop
gs
jo
xchg
into
pop
add
add
lds
dec
dec
add
lret
xchg
cltd
or
rcl
sub
push
lret
dec
jge
mov
sbb
pop
or
loop
iret
scas
mov
inc
test
mov
std
push
inc
sbb
inc
and
stos
aaa
jp
inc
loopne
int3
sbb
stos
xchg
inc
movsb
jae
jecxz
dec
fisubs
addr16
inc
test
repz
ss
mov
repnz
icebp
pop
lods
pop
cmp
mov
or
daa
mov
cmpsb
ss
add
mov
pop
xor
jl
lds
pop
scas
jle
cmc
fmulp
add
adc
adc
mov
outsl
test
stos
sbb
cmp
cmp
inc
dec
inc
jb
and
stc
pop
xchg
pop
fdiv
cmpsl
pop
jl
imul
das
sbb
out
or
in
pop
mov
mov
aam
rcr
test
mov
inc
ret
dec
je
lahf
pusha
scas
mov
stc
xchg
jo
lods
mov
mov
pop
mov
into
adc
jnp
mov
cmp
mov
or
icebp
jl
int3
mov
fwait
je,pn
jnp
jmp
aas
pop
push
jmp
enter
call
push
into
popf
popa
ljmp
xor
sbb
outsl
clc
fldcw
pushf
fdivrp
push
push
ja
mov
cmc
rcrb
roll
sub
mov
sbb
mov
xlat
clc
fs
xchg
jg
out
jle
adc
sub
mov
popf
jmp
dec
dec
fwait
xor
scas
and
aaa
sub
ss
daa
xchg
ret
pop
jge
push
dec
cs
push
lods
mov
add
scas
cmpsb
int3
loope
dec
insb
mov
jp
jo
mov
push
adc
popa
pop
stos
in
mov
jne
mov
popa
mov
loop
cmp
int3
mov
push
fdivrs
adc
mov
mov
test
dec
es
lret
cli
or
addr16
pushf
int
sbb
pop
repz
jmp
daa
arpl
ficoml
pop
xor
lea
push
mov
aam
mov
jl
pop
in
popf
lahf
sbb
adc
push
scas
rorb
insb
pop
mov
jle
and
mov
inc
cmpsb
xchg
stos
cmp
inc
ret
adc
sbbl
jne
cli
mov
orb
push
jo
fs
lods
aaa
test
lea
and
xchg
dec
sbbb
shl
cmp
stos
pop
fwait
pop
xor
add
rcll
inc
dec
push
mov
int
adc
dec
pushaw
xchg
inc
mov
jbe
push
mov
enter
inc
cwtl
aas
jle
push
inc
hlt
jg
inc
loopne
sbb
in
cmp
xlat
test
jb
adc
out
daa
adc
sub
xor
leave
repz
mov
or
sbb
add
popa
arpl
mov
push
cmp
cwtl
inc
sub
les
push
jns
fisubs
inc
push
outsl
lock
pop
fldt
adc
dec
push
bnd
in
sub
dec
movsl
test
mov
mov
mov
loope
gs
jmp
testl
out
mov
push
mov
jns
and
sub
es
int3
ret
xchg
jp
pop
popf
ficomps
outsl
adc
imul
jbe
incw
negb
mov
lret
jg
fisttps
add
cwtl
in
mov
jno
or
dec
lods
shrl
add
or
dec
js
lods
push
ss
cmpl
test
and
mov
popa
out
fwait
push
xor
test
jge
in
jg
fcmovu
decb
mov
or
sub
in
fcmovnbe
mov
repz
lahf
mov
inc
decb
mov
rcrl
cmp
das
in
stos
dec
movsb
pop
insl
sbb
xor
icebp
out
mov
sar
fisubrs
jge
clc
out
inc
adc
out
push
rol
pushf
lock
jne
push
adcl
mov
mov
dec
lds
insb
int
jno
or
mov
xor
xlat
mov
mov
lds
mov
or
push
clc
xor
mov
push
cmp
adc
xor
popf
pop
out
inc
out
cli
adc
pushf
inc
inc
subl
sub
dec
inc
or
cli
cmp
inc
mov
out
mov
and
push
arpl
and
adc
ss
mov
jp
cmp
and
xchg
xchg
std
dec
in
out
xchg
adcl
dec
xchg
pop
jnp
es
mov
pusha
xor
test
jno
pop
jnp
mov
cmp
push
mov
jb
xor
ret
or
and
jmp
or
call
xor
scas
popa
cmpsl
dec
loope
movsl
jmp
ljmp
push
cld
jo
outsl
fsubrs
sbb
add
push
fs
lods
mov
adc
cmp
aaa
or
jp
jp
cmp
adc
lock
lods
adc
pop
sub
sbb
fcoml
jmp
mov
mov
sbb
popf
cs
jnp
ret
aad
scas
push
gs
xchg
cmp
jecxz
aad
mov
mov
loope
fnstenv
clc
xchg
xchg
orl
pop
xor
data16
shlb
xor
in
mov
mov
pop
test
or
rol
sar
cmpsl
sbb
shl
lcall
pop
sub
lahf
call
jns
cmp
mov
mov
jp
js
dec
jg
aaa
bound
outsl
leave
push
xor
pop
movsb
sub
cli
repz
inc
jle
mov
out
ljmp
xor
mov
int3
nop
mov
mov
negb
rol
jmp
xor
test
in
and
adcb
stos
lea
mov
lret
xor
cli
adc
je
shlb
insb
or
cs
sub
mov
pop
shlb
stos
inc
ret
shlb
inc
jg
insb
lcall
negb
je
cltd
xchg
xchg
out
mov
repz
jg
or
sub
or
push
jmp
cmp
sub
fmuls
fildll
repz
int
lcall
and
stos
xchg
xchg
push
inc
pop
cmp
arpl
push
mov
mov
mov
sub
addr16
xor
mov
inc
dec
add
jno
mov
lahf
stos
fsubrs
adc
inc
in
outsb
int3
pop
sbb
sub
or
pop
mov
push
dec
jmp
cmp
and
pop
mov
test
lea
and
cltd
push
int3
jl
in
jmp
fwait
out
pop
sarb
push
xchg
jae
adc
sbb
shll
movsl
cmp
lock
fs
push
xchg
pop
mov
out
dec
inc
xchg
push
test
rcr
lods
push
sbb
mov
outsb
sub
xchg
xor
pushf
jo
popa
jp
push
add
lea
mov
adc
lock
pusha
or
leave
movsb
lcall
out
pusha
orl
fildl
sbb
xor
in
mov
movsl
es
xchg
fucomi
xor
movsl
pushf
loope
inc
pop
xlat
xor
repz
stc
bound
ljmp
movsl
adc
faddl
or
lea
mov
add
dec
dec
cli
mov
lods
mov
enter
stos
mov
mov
cmp
or
test
cmp
test
lds
mov
mov
mov
mov
cmp
pop
inc
cmp
lds
arpl
pop
xchg
test
ljmp
xor
lahf
roll
push
repnz
dec
mov
and
popf
jmp
xor
mov
lret
sbb
int
ja
ja
xchg
aas
imul
lret
div
jg
call
sub
jecxz
in
lock
mov
jnp
and
cmpsb
xchg
das
sahf
fldl
hlt
bound
sarl
sbb
test
mov
add
xor
cltd
xor
mov
cs
ds
cli
mov
adc
cmpsb
xlat
lods
imul
mov
adc
cld
sub
pop
xchg
mov
out
jo
mov
cmp
jno
repnz
push
or
jg
xchg
dec
sbb
aaa
pushf
into
out
daa
lock
ds
jecxz
outsb
leave
jl
mov
fstpl
pop
jmp
xchg
adc
cmp
push
divb
dec
rcrb
repnz
and
mov
push
lret
loop
mov
lret
jle
dec
mov
das
repz
xor
adc
dec
pop
dec
adc
adc
sti
adc
jo
xchg
mov
jno
inc
out
or
movsb
cmp
outsb
movsb
faddp
pusha
fimull
sbb
push
iret
stc
mov
ljmp
mov
cmp
mov
push
test
out
arpl
fs
adc
cmp
stos
cli
rol
fisttps
sub
mov
jnp
inc
fcomi
pop
and
sbb
std
xchg
icebp
push
jmp
pop
shlb
clc
and
mov
das
cmpsb
mov
daa
ljmp
mov
xchg
std
stos
jno
lea
pop
dec
and
mov
jns
pop
pop
sahf
push
test
out
movsb
scas
lahf
push
aas
push
inc
pusha
les
lds
insb
push
cmp
fincstp
lret
lret
popa
lds
mov
mov
cmpsw
fwait
call
sbb
ret
ret
sbb
fcom
cmp
pop
xchg
testl
pop
cmp
das
adc
xor
outsl
mov
push
mov
cltd
mov
sbb
fptan
mov
movsl
jns
push
sub
inc
add
lret
and
out
scas
pop
lods
push
mov
lcall
and
std
cmp
es
xchg
daa
mov
pop
outsl
push
stos
sub
push
cli
ja
adc
pop
lret
lea
fsubrs
push
mov
test
movsb
cld
jns
aad
add
call
bound
mov
xchg
test
nop
or
push
dec
mov
stos
sub
push
inc
cmpsb
pop
dec
push
push
lods
mov
lods
scas
pop
cmpsb
jo
jge
lret
std
mov
adc
jns
jne
jae
inc
mov
or
add
and
adc
xchg
and
mov
fcompl
pop
xchg
iret
sub
cmp
ret
dec
pop
inc
push
dec
sbb
push
les
testl
je
push
clc
inc
sub
fwait
adc
inc
jg
mov
xor
xchg
iret
xchg
pop
add
aam
int3
cmp
dec
mov
out
adc
stc
aas
cltd
mov
movsb
ja
cmp
inc
repnz
ret
outsb
adcl
cmc
add
mov
xor
das
push
push
scas
mov
lds
fistpl
xchg
cli
imul
adcb
dec
sbb
test
insb
fidivl
push
jg
sub
ss
loope
lret
pop
daa
pop
and
sbb
add
movsb
insl
in
cmpsb
inc
sub
std
les
jbe
or
push
dec
gs
add
jne
and
cmp
aaa
add
test
jnp
imul
lcall
sub
popa
fidivrl
outsl
fbstp
scas
stos
pop
sub
push
insb
movsl
popa
inc
daa
bnd
xor
rorb
cmp
push
sbbl
fisubrs
scas
gs
divb
xor
popa
inc
or
adcb
adc
sub
mov
repnz
xchg
push
xor
shll
inc
adc
jl
daa
jnp
loope
rcrl
fcmove
mov
out
cmpsb
test
pop
mov
js
mov
push
loop
jbe
xchg
push
sbb
push
xchg
enter
pusha
xchg
push
mov
sbb
rclb
and
inc
inc
or
or
repz
stos
fstps
add
jl
mov
mov
out
xchg
cmp
gs
shrb
ljmp
sub
sub
lahf
sbb
ljmp
xorb
test
jecxz
popf
inc
imul
aaa
ja
popa
loop
jecxz
push
pop
xor
aaa
xchg
je
jbe
jne
mov
pop
repz
stc
cwtl
xchg
mov
adc
push
repz
push
jnp
imul
xor
or
mov
jp
sbb
sbb
adc
jg
popa
or
sbb
sub
jge
mov
add
cmp
add
mov
lahf
mov
mov
add
pop
xchg
ss
sub
in
lret
rclb
lret
jb
out
loope
jp
sbb
sbb
dec
outsb
cmp
mov
push
cmp
xchg
and
outsb
jge
jns
jge
lea
fistpl
mov
adc
iret
ror
jo
mov
adc
ja
mov
mov
out
sbb
add
xor
mov
scas
pop
and
mov
pop
cmp
les
xchg
ljmp
mov
add
mov
test
es
test
push
loope
mov
sub
pop
mov
je
push
push
add
pushf
mov
mov
ljmp
adc
adc
sub
and
xorl
dec
mov
xchg
adc
les
inc
mov
and
fwait
rcrl
cld
pop
jge
int3
dec
loop
lahf
push
jb
test
int
scas
and
or
popa
ret
cmp
mov
in
aaa
dec
adc
loop
jo
out
and
mov
cmp
sub
mov
cltd
push
aas
pop
pop
cmp
mov
jecxz
push
ret
shll
xor
cmp
inc
mov
xor
in
xor
out
push
dec
sbb
dec
sbb
sub
lahf
mov
mov
pop
out
ret
fcoml
std
and
les
ret
ret
mov
rcrb
rcpps
adc
xchg
or
mov
mov
dec
fldl
mov
int3
jp
add
sub
mov
insl
adcl
xor
jb
imul
lret
dec
mov
cmpsb
hlt
rcll
mov
mov
cwtl
add
mov
into
call
sbb
dec
xor
into
or
mov
xor
aas
xchg
inc
cmp
ret
sub
and
mov
adc
xor
xchg
not
jecxz
jns
ljmp
aad
pop
jno
imul
std
and
push
lock
imul
fadd
jae
repnz
or
adc
or
ljmp
and
mov
jns
enter
daa
pop
dec
repnz
enter
and
lahf
adc
leave
mov
or
aad
les
push
sbbl
lock
int3
mul
add
adc
div
pop
xor
gs
hlt
nop
xchg
call
icebp
add
mov
mov
push
mov
ss
lock
sti
lret
lods
mov
jp
adc
sahf
cmp
mov
bound
aad
sbb
lahf
cwtl
adc
int3
fsts
dec
mov
mov
fcmovb
leave
cmp
add
ss
loopne
and
inc
call
mov
push
fisubrs
lret
fldenv
add
xchg
cmpb
ficoml
pop
in
int3
dec
inc
fisttps
loope
mov
jge
pop
add
imul
imul
popa
int3
rsm
fsubs
pop
in
jne
and
jae
pop
fldl
pushf
jno
cmp
ja
jns
imul
ja
fmulp
rorb
inc
test
xor
std
insl
xchg
cmp
and
rcl
push
bound
aaa
bound
subb
mov
pop
add
xchg
mov
dec
mov
popf
fcomi
jecxz
push
inc
jle
xchg
js
repz
cmp
cld
cmp
jecxz
ret
or
xchg
pop
sbbl
pop
and
loop
cmpsl
jg
fcmovbe
pop
rorb
jecxz
in
cmp
lret
addb
aas
loopne
mov
sbb
rorl
jp
in
sbb
xlat
flds
push
loop
sbb
jmp
mov
xor
pusha
dec
jmp
cmpl
es
ficomps
adc
dec
jp
data16
movsl
xchg
ljmp
dec
pop
jb
jp
sub
sub
cmp
mov
pop
push
stos
jb
cmp
pop
in
push
mov
shlb
sbb
add
mov
push
dec
insl
dec
adc
lcall
fcoms
lcall
and
pop
dec
mov
pop
mov
or
fstl
jnp
das
jl
adc
push
or
xor
test
sbb
and
inc
imul
jno
pop
pop
cmp
push
and
jae
aaa
pop
push
inc
aas
lds
rol
inc
movsl
mov
adc
jle
rorl
test
ror
sub
xchg
xor
adc
test
sub
xchg
test
jo
addr16
add
pop
cmc
call
js
ror
inc
into
mull
repz
sbb
movsb
fldenv
cwtl
jp
mov
fiaddl
outsl
mov
add
sti
cwtl
orb
in
mov
bound
dec
out
cmpsl
testb
enter
xchg
jle
loop
inc
adc
push
rclb
mov
jecxz
outsl
or
ds
das
icebp
ret
add
roll
ja
xor
cmp
and
sub
in
fsubl
loopne
neg
mov
sub
cld
cmp
and
push
fldt
jmp
cmp
fwait
mov
sarl
enter
shll
daa
and
out
add
pop
jns
add
pop
aam
ficompl
push
jl
dec
mov
push
cmp
dec
or
mov
mov
or
adc
out
inc
jne
lods
repz
inc
pop
sbb
jle
ret
sbb
aam
mov
leave
sbb
xchg
gs
das
std
in
das
mov
mov
jne
shlb
xlat
adc
test
dec
inc
lock
enter
rcll
or
adc
ds
fwait
aaa
insl
cmpsl
jge
mov
pop
xor
gs
cmpsl
xor
stos
ret
or
sbb
frstor
cmp
insb
clc
mov
sub
sub
mov
mov
pop
std
shlb
scas
and
jmp
xor
scas
jl
xchg
inc
mov
cmpsb
jnp
sub
and
hlt
jle
mov
jns
push
sti
mov
in
xchg
mov
ss
out
inc
pusha
shrl
fbld
out
push
push
roll
clc
hlt
aas
das
jp
leave
out
or
mov
iret
outsb
inc
and
movb
jg
mov
fiaddl
adc
pop
mov
movsb
cs
xchg
xchg
jp
mov
and
dec
mov
fcomip
add
in
inc
pop
ja
push
movsl
loope
orl
push
testl
sub
lret
roll
mov
js
daa
xchg
in
and
aam
sub
or
stos
insb
shrb
mov
lods
adc
in
outsl
push
cmp
shl
idiv
mov
push
jg
jns,pt
daa
popa
dec
cmp
lcall
imul
stos
add
xchg
pop
in
sub
add
mov
inc
adc
data16
jo
push
out
leave
pop
xor
mov
pop
pop
xchg
cltd
cmp
insb
mov
ja
dec
test
jg
divl
imul
pop
aaa
pusha
jle
rcr
inc
or
out
pop
mov
pop
iret
std
out
aam
fsubr
out
hlt
xchg
mov
hlt
aaa
jp
and
dec
inc
push
xor
dec
sar
sbb
pop
push
in
or
add
cld
fwait
or
pop
or
pusha
pop
dec
xor
sub
or
add
lret
nop
in
imulb
scas
sbb
xor
mov
jl
cld
fmul
dec
ljmp
and
xor
pop
or
jns
popf
ja
aam
adc
push
and
xchg
sbb
and
mov
pop
push
stos
jns
adc
or
nop
mov
xchg
cmp
or
add
mov
adc
push
sub
mov
ja
mov
fbld
testl
pop
lcall
cmp
or
mov
jl
ret
pop
inc
mov
push
sub
or
mov
mov
push
fdivr
pop
loopne
mov
adc
jae
ds
xchg
add
push
fwait
lahf
pop
inc
push
loopne
jl
ret
push
pop
fldt
shrl
cwtl
fisubrl
imul
sub
into
rorb
lea
leave
xchg
mov
fs
outsl
xlat
xchg
jle
popf
daa
iret
arpl
cmp
push
andl
inc
test
mov
push
mov
sub
into
or
mov
repnz
and
pop
addl
push
aaa
aad
mov
cmp
inc
mov
xor
add
jmp
push
aad
movsb
adc
add
inc
leave
shrb
or
notl
xchg
jecxz
pop
dec
addr16
addr16
jg
mov
int
mov
mov
mov
es
cmp
push
ds
loopne
jecxz
mov
push
fistl
inc
in
fnstcw
ss
sbb
icebp
loop
in
push
inc
mov
in
hlt
dec
mov
cs
cmp
ljmp
into
sub
repz
and
movsl
jle
es
test
outsb
out
or
rclb
cltd
orb
mulb
inc
rcl
xor
mov
jnp
mov
inc
pop
das
pop
jnp
cmc
call
xor
cmp
scas
sbb
push
and
pop
cmpl
cmp
pusha
pushf
shlb
mov
mov
and
lcall
pop
call
add
popf
push
cmp
sub
mov
out
daa
push
test
and
ret
push
test
jae
and
and
xchg
popa
mov
mov
lods
mov
push
sbb
pop
stc
pop
mov
mov
mov
sbb
dec
sbb
xchg
mov
xrstor
in
inc
mov
pop
ss
push
jle
pop
jge
and
push
inc
incb
and
in
scas
orb
nop
repnz
push
push
stos
cwtl
jge
in
push
pop
or
fimull
jecxz
rcl
push
jge
push
mov
sub
dec
adc
aad
xchg
imull
les
mov
adc
pop
jle
cwtl
adc
sbb
in
mov
sbb
ja
in
or
mov
repz
js
inc
bound
jge
sub
mov
lea
push
imul
data16
test
mov
or
int
scas
jbe
test
gs
sbb
leave
das
lcall
fidivl
out
imul
push
xchg
add
adc
push
sub
and
or
xchg
daa
mov
jmp
lret
iret
adc
int3
repz
cld
xchg
mov
stos
into
sub
shrl
daa
add
je
mov
ret
out
push
mov
cli
sbb
fsub
scas
ret
ss
sub
pusha
and
push
jns
mov
out
push
movsl
fsubrs
lods
jae
mov
mov
sbb
adc
repz
add
gs
les
cltd
es
xchg
pop
jb
stos
jge
ja
cmp
mov
out
pusha
mov
ds
out
js
les
mov
mov
cmp
pop
and
add
inc
and
imull
xor
sub
pop
add
inc
lock
into
outsb
jle
lahf
mov
push
into
sahf
ds
xor
test
ret
and
add
mov
mov
push
dec
jp
fcmovbe
scas
dec
xchg
rclb
sub
pop
cmpsb
rcr
add
inc
insl
imul
jnp
int
vsqrtpd
xchg
loop
arpl
cltd
or
cmp
andb
mov
setno
push
xor
pop
fwait
mov
xor
add
movsl
stc
clc
inc
ret
add
push
bound
jb
cmpsb
jmp
mov
cmp
dec
fwait
and
add
cmpsb
pop
nop
pop
add
out
in
out
push
pop
dec
cli
sub
lcall
and
push
aad
into
out
adc
fisttpll
xchg
stos
jle
loop
icebp
outsl
test
bound
adc
push
jnp
mov
mov
out
shrl
sub
jecxz
xchg
sub
cmp
add
xchg
pop
push
cs
repnz
icebp
mov
pop
sbb
fs
in
pop
shrb
xchg
push
lahf
jmp
adc
fstl
mov
inc
insb
xor
stos
fwait
sbb
push
pop
jp
cs
fdivl
dec
push
stos
inc
ret
in
repnz
fdivrp
cmp
and
and
jo
xlat
lahf
pop
pop
mov
dec
idivl
fcomps
imul
leave
xchg
ret
adc
pop
int
insb
push
lods
dec
orl
push
sub
sub
cmc
adc
lahf
add
sub
fidivrl
push
push
jmp
fisttps
or
insl
cmpsl
into
dec
mov
xchg
push
xchg
ftst
mov
mov
add
aas
nop
push
push
mov
lret
daa
loop
shrb
in
neg
push
adc
cld
popf
cltd
cmp
xchg
add
xor
mov
into
repnz
mov
inc
ret
jns
das
cmpsl
jbe
jle
sub
mov
mov
test
popf
jb
testb
add
insb
pop
fcoms
out
mov
insl
jmp
ljmp
orl
pop
das
and
jns
js
jbe
sti
jbe
cli
loopne
jge
adc
in
ret
in
mov
xor
frstor
xor
pop
mov
in
add
cmpsl
cwtl
stc
push
sbb
pop
ds
add
sub
pop
ljmp
int3
lahf
jb
arpl
lahf
into
scas
cmpsl
inc
or
outsb
out
fs
movsl
jne
ja
mov
fcmovne
dec
push
fadds
or
or
lods
outsl
pop
inc
sub
mov
sbb
outsl
les
lods
lock
xchg
jmp
push
mov
jnp
shrl
fcoml
inc
xor
jmp
jne
sub
fidivrl
ror
lret
loopne
es
and
sti
icebp
cwtl
out
cli
mov
and
imul
test
mov
sub
or
sbb
clc
inc
iret
jg
lods
jge
cltd
test
and
mov
je
cmp
repz
push
or
das
inc
sbb
jb
sub
sbb
cli
sbb
push
xchg
cmc
orb
lods
mov
fsubrl
neg
or
cld
mov
jb
popa
sub
jnp
test
bound
lahf
test
and
aam
jb
jb
sbb
push
sub
sbb
push
dec
subl
push
and
aad
push
ss
and
in
jp
jl
ret
popa
ss
mov
out
lcall
sbb
sbb
cmp
xchg
mov
push
lahf
rol
jbe
jne
cmp
add
ror
sbb
sub
add
sbb
inc
std
aaa
inc
aas
inc
outsb
in
nop
enter
lcall
shll
sbb
fnstsw
mov
cmc
imul
inc
pop
mov
stc
movsl
std
adc
mov
jge
je
sub
inc
jnp
std
pop
sbb
gs
sub
lea
lahf
mov
repnz
adc
cs
sub
push
lcall
push
cltd
adc
out
js
les
mov
movsl
adc
inc
jo
outsl
dec
pop
js
push
mov
rorb
jb
or
xor
jmp
mov
adc
cltd
sub
adc
popa
cltd
stos
repz
es
push
inc
int3
daa
jmp
roll
and
cmp
mov
pop
sti
cltd
mov
fcmovb
scas
dec
leave
and
sbb
das
dec
and
jb
xchg
mov
enter
roll
repnz
add
and
fwait
xor
jmp
cmp
mov
sahf
decb
pushf
test
aam
out
fs
dec
mov
adc
adc
lret
loopne
sub
xor
xchg
aaa
or
jmp
lcall
out
pusha
push
dec
xor
jle
outsb
in
pop
js
adc
cmp
test
imul
fsubr
fistl
pop
and
test
xor
xchg
dec
xlat
lods
out
popa
mov
dec
xor
push
push
aaa
cmp
adc
sub
fisubs
mov
push
out
xchg
pop
sub
jno
mov
lock
fsubrs
cmp
pop
xchg
mov
js
sub
jg
dec
fisubs
jb
cmp
int
aas
jge
xor
inc
insl
into
mov
push
mov
sbb
movsl
mov
push
inc
icebp
adc
aam
inc
jmp
movsl
pop
test
mov
xor
cmpsb
push
pop
sahf
or
jp
dec
push
inc
lds
int
cmp
sub
pop
xchg
divl
out
hlt
mov
mov
ss
pop
fldl2e
sub
mov
jbe
shlb
adc
test
sbb
pop
mov
cmp
test
inc
adc
out
xor
movsb
xor
mov
or
push
pusha
movsb
stos
mov
cld
push
sbb
jnp
fimuls
lods
inc
push
push
xor
pop
add
dec
fsubrs
sbb
xchg
adc
sub
fs
xchg
aas
dec
ret
cmp
mov
jnp
jo
testl
ss
adc
push
repz
or
outsl
adc
and
xchg
pop
je
insb
xchg
lar
imul
push
imul
fimuls
test
mov
mov
dec
and
pop
scas
mov
push
decb
mov
push
inc
pop
mov
iret
es
pop
xor
cmpsb
push
orb
dec
mov
aaa
push
lock
cmp
xchg
inc
jbe
orl
mov
push
fcmovb
cwtl
imull
cmp
add
negl
sub
sbbl
scas
add
dec
into
pop
bound
loop
dec
pop
mov
jmp
mov
aad
shll
adc
fs
in
sub
mov
pop
cli
sub
cld
add
pop
sub
idivb
and
adc
gs
aam
pop
ret
jp
pop
in
push
bound
sti
arpl
hlt
add
std
les
int
or
inc
adc
push
or
and
aad
adc
or
fstpl
jno
and
push
loopne
xchg
dec
sti
stos
outsb
cmc
addb
xor
xor
jae
es
mov
mov
mov
cmp
cmpsl
inc
push
and
or
jne
mov
iret
mov
hlt
stos
aad
gs
inc
leave
inc
dec
daa
outsb
fcoms
and
imul
mov
or
ret
sub
imul
and
outsl
add
into
imul
sbb
add
into
dec
push
lcall
and
mov
adc
stos
xlat
dec
or
daa
mov
dec
daa
mov
es
mov
add
clc
mov
bound
dec
aam
or
fists
dec
nop
repnz
fstpt
sub
mov
enter
fwait
and
fmulp
lods
fldenv
pop
and
fs
push
out
mov
jg
lods
push
push
fadds
push
je
lods
xlat
mov
or
or
cmp
cld
sub
imul
push
inc
xor
stc
push
fdivs
nop
xchg
inc
cmp
stos
ja
sub
in
xchg
xchg
dec
shlb
cmp
push
stos
stos
mov
rcrb
adc
dec
or
dec
jae
or
cltd
sub
lret
sbb
jnp
sub
movsl
leave
jl
adc
int
loopne
daa
and
xor
xchg
adc
mov
addr16
lock
int
test
pop
flds
repz
ret
lcall
mov
add
push
les
cmp
sbb
je
xor
cmpsl
jmp
mov
adc
mov
cmp
xchg
mov
lds
jb
rclb
or
cmp
sbb
ss
sbbb
gs
add
pop
add
sub
xor
fimull
cli
ss
repnz
or
out
in
and
idiv
rcrl
repz
out
inc
xchg
push
adc
dec
jg
inc
add
or
out
outsl
push
mov
xor
sub
adc
ljmp
dec
shrl
aaa
push
cmp
outsb
push
jecxz
lds
inc
mov
in
arpl
aad
sbb
sub
stos
cmp
push
push
cmp
test
add
pop
bndldx
jne
dec
test
jae
movsl
inc
dec
xchg
add
xor
and
in
mov
rcrb
lea
test
ds
mull
push
inc
or
repnz
cs
imul
pop
xchg
and
add
data16
xor
or
cmpsl
jg
je
mov
aas
sub
mov
adc
and
cld
cmp
je
lea
shll
lret
test
jns
cld
pop
mov
aaa
sub
ds
outsl
push
pop
scas
mov
pushf
sub
push
sub
mov
pop
ret
sbbl
and
testl
and
leave
sarl
push
scas
adc
lret
out
fnsave
xor
jbe
jns
sub
es
aam
nopl
ss
loope
int
je
dec
ja
push
pop
push
inc
xchg
xchg
iret
hlt
and
xchg
addb
dec
clc
fdivs
jge
push
jmp
mov
dec
push
add
push
sbb
aad
lds
adc
mov
ret
clc
and
cmpb
inc
inc
adc
mov
fisttpll
cmpsb
popa
mov
jmp
inc
imul
fdivrs
aam
pop
fisttpll
in
stos
adc
mov
lcall
ffree
jmp
call
add
aad
iret
out
mov
cwtl
dec
clc
push
ja
addb
pop
mov
cltd
cmp
mov
mov
daa
arpl
xchg
dec
leave
sbb
call
mov
incb
dec
cltd
mov
xchg
shrl
inc
pop
test
clc
mov
mull
or
js
sub
imul
lds
inc
cmc
jmp
rclb
inc
xor
je
mov
lret
and
xchg
or
mov
cmp
inc
mov
mov
mov
out
inc
ds
into
inc
add
sbb
nop
ficoml
mov
mov
dec
adc
jae
leave
pop
cmp
pop
xorb
push
mov
xchg
out
vcvtsd2ss
roll
add
int3
out
jne
dec
loope
fwait
adc
push
in
mov
lret
add
fnsave
xchg
cs
mov
mov
pop
pushf
in
adc
push
mov
adc
or
inc
dec
mov
cmp
int
cmp
mov
lods
dec
xchg
lcall
loop
cmpsb
cs
rorl
in
imul
ja
jbe
dec
in
ficomps
int3
jmp
dec
es
sbb
dec
insb
push
push
out
push
xchg
adc
cmp
or
jp
mov
loopne
xor
jg
fs
jae
adc
outsb
int
int
xor
xor
loope
jmp
inc
xchg
bound
mov
lods
in
mov
ljmp
sbb
outsl
ficoml
jnp
std
sbb
test
in
mov
repnz
outsl
insl
mov
data16
dec
nop
xchg
sbb
cs
fnstsw
loope
pusha
push
loop
sti
loop
popa
jp
nop
jp
mov
mov
ljmp
aaa
mov
das
inc
push
mov
sbb
aaa
test
stos
push
lret
pop
testl
pop
pop
rep
and
jae
scas
sub
cli
and
xlat
xchg
ja
outsl
cli
add
xchg
mov
scas
int
daa
in
jmp
inc
dec
aas
fld
push
sbb
jnp
jno
mov
pop
pop
out
mov
aaa
mov
mov
sbb
subb
xchg
outsl
inc
mov
and
jl
adc
std
sahf
test
fld
pop
dec
xor
mov
or
push
xor
inc
jg
cmpsl
insl
push
into
outsb
shlb
sbbl
xlat
stc
repnz
rcr
adc
jp
dec
out
int
cltd
pusha
aam
adc
subl
enter
cmp
add
movb
outsb
pop
push
nop
push
push
icebp
scas
aas
imull
mov
and
in
jo
int
mov
sahf
jp
out
cmp
and
mov
es
out
inc
imul
cwtl
aas
fs
pusha
outsl
sbb
ljmp
outsb
adc
jl
pusha
mov
sahf
lea
mov
inc
cmp
leave
sub
push
sti
lea
xchg
xchg
repnz
aaa
hlt
add
pop
add
mov
push
xlat
mov
jne
aad
pop
into
adc
mov
mov
xor
mov
mov
dec
xchg
lods
or
mov
adcl
into
data16
and
pop
in
enter
or
mov
mov
cmp
pop
test
xchg
dec
jl
xchg
test
loope
mov
sub
add
cmp
inc
dec
and
aaa
lret
cmp
xchg
xchg
lahf
mov
insb
xchg
aad
sbb
lahf
push
orb
movsb
jl
xorl
ja
cmp
js
out
cwtl
pop
jmp
pop
in
pop
test
repnz
jno
sbb
and
add
shrl
rcll
fsubrs
sbb
in
lret
es
push
xlat
jnp
dec
push
out
cmp
int3
pusha
loopne
inc
cmpsb
or
ja
mov
push
and
jns
mov
pop
push
adc
xchg
sti
and
lods
movsl
mov
and
add
sub
lea
lds
out
je
fadds
bound
mov
loope
ret
ficompl
divl
jp
js
dec
inc
xor
pop
in
js
push
push
or
add
in
sbb
jmp
int3
xlat
jge
or
xor
popw
ret
or
push
pop
mov
stc
cmpb
dec
shr
leave
jo
fimull
xchg
or
xchg
jne
jg
sub
add
push
adc
jno
clc
cmpsb
mov
sub
push
sbb
ror
cmpsb
mov
jecxz
arpl
cmpb
sbb
inc
cmp
iret
fsts
std
roll
sbb
sbb
int3
nop
dec
add
mov
mov
mov
movsl
cs
cmp
out
cli
aas
mov
push
or
inc
sub
push
mov
aas
sbb
sbb
adc
push
insl
pushf
inc
mov
push
fbstp
mov
mov
add
cmp
mov
push
push
mov
push
mov
inc
fwait
inc
mov
pop
test
push
daa
sub
or
sbb
pop
test
pop
sbb
popf
dec
fdivrl
hlt
inc
test
inc
cmp
sub
addr16
mov
push
mov
leave
lcall
jb
mov
dec
sub
test
decl
lods
mov
adc
std
es
call
xchg
in
icebp
mov
jp
mov
aad
jp
cmp
xchg
dec
gs
popf
xor
mov
dec
sbb
int3
pop
cli
xor
or
pop
popa
es
sbb
test
cmpsb
jnp
lahf
sbb
fxch
std
inc
push
lock
inc
jb
cld
xor
mov
arpl
or
pusha
ds
test
jp
movsl
adc
xchg
mov
lods
fwait
subb
fiaddl
and
jo
push
int3
imul
mov
pushf
in
mov
mov
addr16
mov
outsl
adc
jne
or
ret
xchg
fsubs
fidivs
mulb
lret
mov
pusha
push
dec
fldt
ret
outsl
fistps
pushf
inc
and
jns
lods
fldt
push
add
xchg
lcall
jb
sub
inc
mov
test
and
sbb
xor
repnz
adc
mov
or
cwtl
jb
xchg
icebp
jne
xchg
imul
imul
jbe
daa
mov
pop
jae
mov
sub
stc
mov
adc
xchg
loope
jp
jg
push
cmpsb
pop
stos
and
push
dec
sarb
es
inc
scas
add
pop
xchg
lret
jg
mov
jl
adc
fs
mov
push
jg
adc
dec
lds
adc
test
push
syscall
cmp
add
cmpsb
xor
adc
mov
adc
mov
adc
or
mov
adc
jo
sahf
scas
aaa
pop
push
fsubl
data16
inc
or
lret
pop
sahf
nop
outsl
push
jb
cmpb
jo
mov
aaa
inc
cmp
cmp
push
je
sbb
mov
fwait
pop
xacquire
pop
insl
aaa
insl
mov
push
pop
out
mov
jle
pop
int
push
xlat
neg
fstps
pop
sbb
mov
js
pop
shrl
dec
cmp
fcmovnb
in
pop
sub
adc
rorl
mov
push
aas
out
imul
xchg
push
jl
jb
mov
mov
inc
or
jb
test
ss
adc
icebp
popl
mov
or
pop
sbb
xor
xor
push
xor
daa
test
pop
bound
mov
cs
adc
and
sbb
or
dec
or
inc
lods
pop
dec
and
add
in
mov
jp
movsb
movsb
loop
sarl
mov
outsl
daa
xor
dec
sub
push
lods
bound
pop
fldt
aam
aas
add
sub
xchg
push
inc
in
std
cmp
lds
xchg
repnz
and
lds
scas
mov
gs
dec
xor
aam
fsubr
or
dec
inc
jp
in
popa
xchg
sti
test
push
jmp
test
dec
pop
insb
push
sbb
das
dec
into
xchg
pop
data16
arpl
push
stc
sbb
mov
popf
or
lock
jecxz
adc
fsubs
or
test
mov
push
bound
sti
or
push
xor
stos
adc
cmovbe
scas
loop
pop
movb
dec
xor
arpl
cs
mov
out
cld
popa
into
xorb
jne
adc
push
jmp
das
sbb
stos
cmp
push
dec
std
dec
pop
pop
sbb
jge
int
pop
xchg
and
xor
lock
iret
sbbb
inc
cs
movsl
xchg
lds
push
xchg
dec
adc
mov
sahf
jns
sbb
mov
inc
addb
fs
je
ret
fimull
sbb
lahf
int
jle
pushf
jmp
lahf
mov
clc
jae
pop
pop
pop
jae
rolb
jb
enter
and
test
add
jg
inc
fimull
ficoml
mov
jb
scas
or
add
cld
arpl
lret
mov
and
push
cltd
xchg
jne
repnz
mov
mov
xchg
scas
cmp
push
xchg
push
mov
mov
sub
push
lods
pop
in
inc
hlt
xor
popf
fsubr
pop
punpckhdq
ficompl
cli
data16
sbb
rcr
es
in
out
aaa
xor
xchg
cltd
pusha
neg
outsb
push
xor
int3
movsl
inc
fisttpl
jbe
or
stos
jmp
xor
jb
mov
arpl
test
cld
add
mov
sub
enter
sbb
and
pushfw
adc
mov
int
out
mov
push
in
ror
imul
lds
jbe
mov
jns
xor
testb
insb
adc
fcmovnu
pop
in
push
jb
fstpl
into
push
scas
mov
aam
push
add
sub
jle
push
jne
je
std
xchg
pop
imul
icebp
fldl
xchg
or
sbb
test
dec
leave
and
inc
adc
imul
pusha
insl
sbb
in
cmp
jb
fcomip
and
push
xor
shrl
dec
xchg
test
mov
movb
xchg
sub
aas
mov
sub
jns
cld
push
das
cld
pushf
loopne
dec
sub
hlt
or
nop
leave
push
in
push
xchg
enter
sbb
sti
ret
sub
repnz
rcrb
fstpl
push
dec
cmc
and
insl
ljmp
int3
or
rcll
xadd
je
sub
pop
movsl
mov
je
fisttpll
sbb
push
cmpsb
cld
inc
subb
in
pushf
pop
dec
aam
adc
sub
out
sub
subb
and
sbb
arpl
sbb
mov
popf
nop
jmp
frstpm(287
add
stc
in
or
call
lods
jp
sub
inc
daa
mull
xor
in
fcmovbe
into
mov
pusha
in
jle
mov
mov
adc
out
add
jbe
jecxz
mov
inc
aam
push
mov
mov
adc
test
xor
icebp
mov
lcall
bswap
testb
mov
and
mov
mov
sbb
xchg
xorl
leave
add
xor
es
jl
pushf
int3
jne
xchg
pop
pusha
xchg
je
mov
fdivs
dec
mov
ds
push
mov
fsubr
loopne
inc
or
fisubs
xchg
enter
mov
xchg
and
and
jecxz
aam
inc
aam
aam
mov
mov
sbb
scas
cmp
insl
lahf
and
ficoms
in
pop
mov
mov
aam
and
outsb
inc
and
out
or
mov
dec
sub
nop
iret
cs
mov
mov
cmp
outsb
pop
in
add
mov
mov
push
fnsave
dec
pop
mov
pop
mov
out
rolb
es
dec
pop
stos
cli
or
sbb
mov
push
ret
or
out
push
mov
mov
rol
ss
mov
roll
dec
pop
aas
fucomp
jno
dec
rorl
sarl
scas
xor
shlb
push
test
andb
ret
test
jo
and
fs
ret
iret
mov
xchg
mov
leave
cmp
test
inc
jecxz
xchg
fsubl
push
outsb
or
in
ret
aaa
leave
adcb
push
iret
pusha
fwait
xchg
inc
adcb
scas
ljmp
fs
arpl
pop
call
cmp
sti
call
jg
mov
cmpsl
aad
pop
inc
insl
mov
jg
mov
insl
stc
mov
in
pop
movsl
sbb
std
add
cmp
and
into
mov
mov
pop
repnz
xor
call
mov
gs
cmp
cs
inc
inc
je
inc
cmpsb
aas
push
divl
push
es
popf
xchg
mov
rcll
testl
outsb
inc
in
mov
cmp
dec
andl
cmp
movsl
or
lods
dec
adc
dec
push
aad
xchg
shrb
aad
and
test
insl
cmp
adc
imul
aam
inc
and
ja
mov
pusha
je
xor
pusha
pushf
lods
out
fs
jb
inc
popa
sbb
push
inc
je
mov
xchg
add
xchg
neg
aad
rcr
mov
dec
pop
sahf
int3
dec
stos
add
mov
mov
out
push
mov
and
cmp
xchg
fsubl
mov
fistl
ljmp
sub
mov
addr16
shlb
loope
fidivs
cmp
add
inc
imul
cld
stos
jg
lahf
test
aaa
sbb
jb
xchg
mov
mov
mov
mov
push
test
or
ret
jo
cmp
sbb
mov
inc
mov
pop
aam
sub
ljmp
insb
fidivs
mov
jmp
mov
adc
jl
test
iret
sub
jb
pushf
pop
sub
lret
xlat
jno
loopne
xchg
cld
sub
jns
cltd
mov
cmpl
sub
cltd
xor
cmp
aas
jb
jbe
leave
push
js
movsb
dec
jns
icebp
pop
test
cli
and
repnz
inc
cmpsb
lea
cltd
lahf
jg
int
ja
adc
cltd
out
arpl
add
out
cmp
push
rolb
sub
pop
pop
push
movsl
add
push
shll
iret
cmp
pushf
cli
jae
je
sbb
cwtl
lods
fucomi
xchg
insl
xor
push
outsb
imul
inc
push
dec
pop
popa
js
mov
ret
inc
je
xlat
mov
popf
enter
movsl
aas
pop
aaa
daa
ret
fldt
negb
addr16
jo
test
cwtl
ds
sub
scas
xchg
sti
sub
inc
xchg
fcoml
pop
sbb
lret
push
mov
cli
lahf
aas
xchg
xor
aad
in
xchg
jl
mov
cmc
sbb
dec
pop
int
hlt
push
xchg
mov
les
jge
dec
sahf
ja
inc
out
xor
jb
mov
shrb
mov
pop
sub
jecxz
scas
test
test
leave
outsl
insl
es
icebp
fimull
out
or
lcall
test
inc
cli
adc
aas
xor
movsb
les
mov
sbb
loope
mov
mov
push
hlt
imul
pop
jnp
rolb
ret
inc
mov
mov
cli
dec
jl
inc
sbb
dec
adc
push
xchg
sub
xchg
jbe
lea
aas
xchg
cld
cmc
aas
inc
cmp
ss
shrb
inc
inc
xlat
and
filds
aaa
adc
and
push
adc
push
sub
xchg
popf
xchg
arpl
test
js
cmp
push
lret
inc
sbb
xor
les
mov
or
jmp
dec
or
add
mov
or
mov
pop
xchg
enter
ret
bts
jg
sti
icebp
sbb
adc
mov
jne
stos
or
bound
pusha
xor
xorb
xchg
data16
aad
mov
imul
mov
in
and
iret
jp
xor
and
out
fwait
or
push
sub
popf
inc
inc
aam
jle
xor
xchg
pop
sbb
das
mov
ret
jge
sbb
lret
pop
gs
int
dec
hlt
test
hlt
and
pop
pop
mov
xlat
in
dec
mov
fwait
into
iret
into
xchg
adc
xlat
cmp
add
test
call
xor
push
cltd
jae
fcomp
sbb
or
push
dec
jb
pop
aas
sub
cld
push
and
jb
xlat
notb
push
hlt
add
mov
in
push
ja
mov
push
mov
adc
mov
mov
fsubr
ds
leave
mov
shrb
orb
push
pop
lods
dec
inc
test
daa
aam
dec
dec
cmp
sbb
mov
xchg
clc
je
faddl
push
push
mov
cmp
cmp
mov
xlat
ljmp
xchg
and
shll
mov
bound
in
pop
lock
scas
fldt
insb
sub
push
rorl
nop
ja
mov
xchg
adc
inc
or
sub
dec
out
hlt
movsb
push
shrb
mov
sbb
int
leave
das
popf
jecxz
inc
lods
jl
cmc
int3
bound
imul
push
pusha
add
mov
add
adc
lods
mov
sbb
push
dec
push
and
pop
inc
pushf
movsb
xor
push
mov
scas
mov
mov
jnp
fs
push
ljmp
adc
mov
mov
loope
cmp
or
xchg
adc
sub
leave
lret
xchg
or
pop
xchg
push
pop
and
or
sbb
jmp
inc
in
cmpsb
sti
cmp
push
cli
std
cli
data16
das
push
fcomps
pop
js
lahf
push
insb
pop
pusha
jp
aam
mov
pop
mov
inc
mov
mov
es
pop
ret
ja
pop
bound
pop
jmp
xchg
je
jg
pop
repz
pop
fcomps
and
cmp
or
jo
pop
or
daa
sub
dec
mov
lea
push
push
pushf
cltd
je
xchg
adc
dec
push
movsb
dec
or
pop
sbb
in
ds
loopne
cmp
push
mov
insb
imul
jne
sub
pop
dec
push
push
iret
cltd
cli
stos
notl
out
notl
insl
adc
out
and
mov
add
inc
or
mov
jbe
inc
xor
call
ret
pop
mov
ret
leave
fisttps
pop
mov
push
lret
in
mov
push
cwtl
sbb
push
push
outsl
scas
aas
adc
xchg
xchg
nop
jecxz
push
test
or
bound
pop
push
cmp
and
mov
out
rorb
dec
pop
or
test
cmp
or
popf
sbb
mov
sub
arpl
sahf
imul
inc
fsubl
lahf
repnz
lods
pop
daa
in
nop
gs
aas
jle
dec
mov
fcmovnb
mov
sbb
inc
sbb
pop
mov
add
xor
cmovnp
cmp
xchg
add
lahf
pop
cmp
sub
mov
outsl
ret
xchg
sbb
and
jno
mov
xor
mov
mov
mov
aas
pop
dec
daa
pop
sub
cltd
mov
lods
outsb
add
dec
or
call
fidivrl
dec
ffreep
cmp
xor
ljmp
dec
in
aas
and
inc
lret
bound
inc
mov
sub
xchg
mov
es
push
adc
popa
or
ret
xchg
and
jnp
je
dec
stos
jge
fdivs
mov
cmc
and
add
sub
mov
shrb
adc
inc
in
outsb
imul
test
mov
cmpsl
imul
mov
add
stos
mov
xchg
fdivrp
cmp
movsl
movsb
jae
mov
mov
in
movsl
std
movsb
add
in
outsl
dec
in
add
std
pop
pop
andb
andb
mov
sub
aas
jp
adc
int3
sub
clc
xor
aam
repz
xchg
and
int
int
mov
pop
pop
ficoms
adc
xor
pop
test
test
xchg
mov
xlat
in
xchg
adc
test
daa
pop
imul
xor
add
mull
pushf
shrb
jg
aas
sbb
hlt
mov
push
xor
or
xchg
ret
ja
ficoms
push
xchg
lock
push
mov
gs
cmp
imul
in
xchg
push
dec
arpl
pop
out
ljmp
xor
mov
cmc
int3
sub
and
dec
xor
xor
shll
in
and
ffree
test
shl
xchg
das
pop
adc
cmpsb
push
or
orb
cwtl
sub
pop
scas
cld
mov
sub
push
das
das
leave
sub
xor
xor
push
dec
mov
fcomi
pop
mov
jb
or
pop
cmp
and
addr16
inc
jl
mov
sub
adc
add
jns
sbb
pusha
add
std
into
lods
call
or
jbe
sarb
iret
jb
in
jecxz
mov
or
movb
into
pop
cmc
es
jg
add
pop
pop
cmp
adc
rolb
mov
xlat
jp
and
in
stc
into
movzbl
or
dec
cmp
or
mov
sbb
std
or
inc
adc
cmc
mov
and
je
sub
xchg
loop
sbb
mov
cli
add
fimull
stos
cltd
mov
fdivrs
pop
pop
sbb
add
lahf
pop
stos
add
inc
dec
stos
repz
insl
jo
popf
bswap
dec
xor
push
xchg
pop
cmp
pusha
pop
pop
jecxz
stos
aas
mov
daa
jns
push
xchg
xchg
mov
std
mov
add
notl
xchg
cwtl
clc
mov
hlt
pushl
jno
aad
add
hlt
and
movsl
mov
dec
test
imul
mov
jne
out
cltd
loopne
cmpsl
or
addr16
sub
sbb
jbe
cmp
or
jle
lcall
stos
pushf
in
mov
fstpt
jne
add
and
nop
dec
bound
sub
movsb
pushf
out
iret
sbb
sarb
mov
mov
stos
dec
filds
sub
mov
sub
push
ljmp
call
frstor
scas
inc
dec
repnz
fidivs
int
fnsave
jo
popa
insb
add
add
addl
ret
fidivrs
sub
imul
inc
sbb
fldcw
in
mov
decb
enter
stos
fsubp
andb
das
adc
popa
xlat
adc
mov
jmp
ret
jne
jno
in
pop
cmp
in
ss
mov
outsl
pop
mov
stos
test
pushf
xchg
aad
in
jmp
sub
cmp
push
jne
adcb
into
cmp
cmp
mov
test
cli
cmp
and
lods
imul
mov
test
adc
dec
dec
fdivs
je
inc
cmpb
mov
xchg
jp
and
add
sbb
adc
pop
outsb
pop
clc
pop
es
sub
cmp
addl
cli
shlb
sbb
mov
nop
mov
shll
dec
sub
shll
mov
and
or
mov
add
lret
push
jp
and
inc
roll
scas
movsl
icebp
aas
mov
jno
inc
add
push
nop
sti
inc
mov
mov
js
fimuls
xchg
mov
xchg
xchg
mov
mov
dec
lret
or
loop
push
mov
mov
mov
pop
jecxz
cld
cmp
enter
push
dec
and
dec
out
mov
lds
iret
push
mov
ljmp
loope
aam
xchg
xchg
inc
jae
jns
fidivrs
xlat
add
lcall
sub
and
sub
loopne
xchg
imul
mov
int3
out
adc
addl
aad
jno
cld
shl
out
and
mov
xchg
cmpl
jnp
cmp
sub
pop
es
mov
push
icebp
adc
push
fcomps
or
scas
imul
jae
xchg
gs
ja
mov
mov
mov
lahf
xchg
popa
xchg
xor
cmp
and
pop
out
add
or
mov
or
or
jmp
push
sbb
add
and
cmp
and
ret
stos
bswap
push
mov
add
loop
pushf
mov
jae
nop
ror
cmc
xchg
mov
or
das
fs
xchg
lods
loopne
dec
aam
call
mov
std
mov
rorl
xor
cmp
inc
push
push
xchg
mov
push
push
insl
sub
xchg
cwtl
aas
pop
lods
in
pop
out
mov
push
adc
lahf
push
and
sub
jae
and
ja
rcrb
mov
sub
test
adc
or
ja
leave
ret
pop
jg
jbe
xor
outsl
imul
or
addb
aas
xchg
testb
iret
test
fmul
popaw
popf
std
inc
movsb
pusha
gs
les
mov
and
mov
cmp
test
ror
cmp
ffree
mov
xchg
nop
dec
sbb
je
or
jne
fnstcw
jns
cmp
push
mov
push
addr16
stos
psubusw
add
cltd
test
outsl
push
push
or
pop
xchg
setl
std
or
dec
jecxz
and
icebp
jb
dec
dec
negb
inc
lea
icebp
dec
sub
jmp
add
pop
mov
iret
fsub
bound
dec
mov
nop
add
das
icebp
push
adc
je
push
push
or
pop
lret
aad
insl
lods
cwtl
neg
push
flds
cli
les
andb
daa
add
push
sahf
outsb
out
mov
dec
je
inc
les
out
add
stc
and
int3
loop
pop
sub
loop
and
jne
js
fwait
xor
scas
adc
pop
mov
jnp
push
or
xchg
data16
and
stc
inc
insb
cwtl
jg
call
shll
pop
pop
inc
sbb
imul
jns
mov
andb
imul
pop
imul
adc
sbb
mov
int3
in
sub
das
sub
inc
cmp
scas
leave
into
bound
jo
daa
push
mov
sub
jne
mov
jg
or
dec
int
shrb
jg
jecxz
scas
push
into
sahf
lods
add
sahf
pop
ret
sbb
pop
popf
dec
in
pop
xchg
inc
incb
add
lods
loop
sbb
aad
mov
jnp
jmp
out
or
loopne
inc
push
test
int3
xchg
jno
aad
push
push
aaa
orl
sbb
sbb
xchg
roll
mov
stos
into
sub
dec
imul
stos
push
jmp
repz
pusha
push
jmp
pop
add
dec
insb
outsl
addr16
pop
or
jle
and
mov
aaa
pop
sub
mov
lret
pop
jae
mov
lahf
xchg
cmp
aas
or
imul
out
pop
jl
mov
mov
aad
inc
cmp
nop
push
dec
sarb
loopne
rol
mov
jmp
xchg
and
add
sar
aam
shll
mov
gs
cli
repz
jne
lret
mov
lds
fs
lahf
call
xchg
scas
pop
int3
sub
outsl
mov
mov
fldcw
dec
scas
inc
imulb
dec
rcll
js
iret
fists
cmp
dec
sub
dec
hlt
nop
xchg
mov
jle
mov
add
adc
fwait
pop
mov
xor
dec
or
xchg
scas
fnstcw
jl
ja
mov
add
add
sub
mov
rdpmc
rcll
jle
icebp
sbbl
jp
fwait
aas
cmp
fwait
push
insb
lock
in
cmpsb
fistl
add
xor
shlb
sub
sbb
fwait
push
daa
lock
sbb
insl
mov
inc
sti
insl
popf
stc
mov
unpcklps
push
lds
jb
push
cwtl
test
push
idivl
cmp
jbe
iret
sti
adc
fcoms
aaa
jae
lock
nop
dec
push
in
xlat
popa
into
sbb
je
fcoms
outsl
insb
push
movsb
aaa
out
in
cwtl
dec
test
mov
mov
cmp
jle
ret
sbb
aas
push
addl
inc
mov
and
adc
loopne
pop
mov
xchg
das
cwtl
sub
cmpsl
jno
adc
mov
fstl
loop
lock
pop
fidivrs
mov
jbe
sub
mov
pop
popf
adc
leave
inc
out
xlat
xor
push
adc
jg
mov
aaa
leave
ljmp
cmp
aas
lahf
es
faddl
stos
jmp
and
mov
mov
hlt
sub
push
push
add
fldt
xor
les
mov
mov
mov
das
icebp
lock
cmpsb
add
clc
xor
das
repz
mov
mov
hlt
test
mov
adc
data16
mov
lock
mov
iret
fs
jns
mov
push
jecxz
sub
inc
or
cmp
div
das
push
add
jecxz
movsl
xchg
clc
xchg
add
lods
fwait
ret
cld
pushf
sbb
nop
out
sbb
ss
enter
dec
in
mov
rclb
int
sahf
mov
fs
cwtl
data16
adc
add
lahf
dec
aad
dec
leave
xchg
cmp
mov
lahf
adc
xor
es
jecxz
cmpsb
outsb
mov
inc
pop
inc
add
cmpsb
mov
notl
sub
sub
mov
mov
jns
jle
mov
lcall
test
aas
add
fisubs
cmp
lock
xchg
loope
add
pop
lcall
push
inc
cmpsb
repz
or
lcall
lea
insb
dec
jnp
mov
jge
sub
loope
jl
arpl
pop
aaa
das
or
mov
aaa
popf
pusha
dec
nop
test
ja
clc
xchg
cli
inc
test
icebp
jge
in
sti
stos
je
sub
mov
clc
xchg
rclb
mov
xchg
mov
iret
pop
sub
push
out
hlt
xor
adc
sti
pushf
mov
lret
inc
push
or
pop
add
push
mov
sahf
andb
xchg
pop
pop
pop
inc
adc
rcll
pop
aad
sbb
jmp
lods
mov
dec
mov
enter
xor
gs
sbb
es
push
daa
lock
pushf
mov
and
gs
add
out
mov
xchg
sub
or
arpl
and
jecxz
cmp
popf
test
lret
dec
lahf
int
enter
test
sub
jl
lret
pop
es
lret
mov
outsb
dec
bnd
ja
cmc
mov
movl
lods
in
ds
mov
xchg
fcomps
jb
sbb
mov
mov
dec
mov
lock
xor
xor
and
roll
xchg
push
adc
inc
jne
jno
je
and
jl
xchg
xchg
outsb
cmpsb
adc
lock
icebp
xor
fimull
or
cs
or
loop
xor
int3
mov
mov
add
jae
leave
push
sbb
mov
jl
adcb
fstpl
jl
jbe
jmp
mov
outsb
out
test
stos
popf
ret
das
dec
push
testl
scas
cmp
outsb
inc
fsubs
and
aam
fnsave
aad
add
into
adcl
out
xor
jns
scas
push
jge
xlat
int
out
jo
clc
enter
xor
pushf
rcrb
mov
idivl
nop
xor
xchg
cmp
cli
dec
imul
push
xchg
test
cmp
mov
fisubl
xchg
cmp
rcrl
sbb
xchg
test
adc
xchg
mov
pop
xchg
enter
sbb
xchg
shll
shlb
pop
mov
fs
xor
imulb
cmc
ds
ds
pop
lods
adc
shrl
sbb
or
ror
mov
data16
in
dec
aas
mov
push
aas
stos
call
in
mov
push
ds
lods
jae
stos
cmc
push
mov
adc
inc
jmp
inc
mov
add
sahf
adc
cmpsl
pop
mov
outsb
sub
out
lret
dec
mov
add
push
pop
xchg
cmc
cmpb
cmpsb
cmpsb
mov
pop
push
pushf
in
sub
dec
fbld
xchg
shll
push
mov
in
mov
fimuls
test
dec
lods
lahf
cmpsl
gs
mov
test
mov
popa
popa
sub
in
pop
pusha
cmpsl
js
sbb
mov
lret
pop
cmp
or
dec
lcall
test
ret
mov
push
aaa
add
or
loop
loopne
outsb
leave
pop
dec
mov
pop
daa
sbb
push
or
sarb
xchg
mov
flds
xchg
ss
sub
and
push
cli
fs
roll
mov
sbbl
and
mov
iret
mov
add
repnz
arpl
add
scas
inc
dec
cmp
vrsqrtps
je
xchg
mov
mov
xchg
ja
hlt
dec
push
cmp
loope
pop
xlat
mov
ljmp
fwait
inc
repnz
insl
mov
sub
mov
push
lret
mov
dec
or
mov
xor
mov
cmp
pop
jg
and
mov
sub
into
jbe
cmp
inc
in
xor
jmp
jb
pop
scas
in
insl
popa
xor
mov
jle
ss
mov
stos
notl
cmpsl
ljmp
mov
cli
xchg
insb
jp
bound
mov
test
push
jmp
mov
adc
pop
jecxz
add
scas
inc
adc
lcall
ljmp
in
pusha
sbb
ret
jo,pn
inc
fsubl
cbtw
sub
rcrb
adc
dec
outsb
pop
mov
rol
pop
mov
cmpsl
mov
cwtl
hlt
mov
push
imul
or
into
ss
adc
mov
mov
es
cmpsb
push
xchg
not
dec
add
mov
out
jmp
xchg
sub
xlat
mov
gs
insb
jle
sub
cmp
ljmp
icebp
jge
pusha
xlat
sarl
hlt
rcrb
stc
mov
push
jae
mov
jns
cs
out
jecxz
mov
aaa
mov
pop
and
mov
inc
aad
inc
xor
xor
jbe
vpmuludq
jle
mov
push
sub
mov
popa
jns
pop
cmp
scas
dec
call
outsb
shll
ja
rorb
cmp
mov
and
dec
loopne
mov
mov
mov
iret
sbb
mov
insb
roll
inc
scas
fldt
ljmp
incb
mov
enter
inc
dec
in
ret
push
or
cmp
pextrw
aaa
imul
lea
stos
jae
sbb
cmpsl
pop
in
mov
adc
jge
dec
or
ljmp
cmpsl
mov
push
or
ret
sbb
xor
mov
test
loope
pop
ss
cs
sbb
add
and
pop
clc
xor
push
push
and
pop
add
push
sti
mov
mov
pop
pop
pop
push
cmp
in
daa
add
shll
movsb
push
repz
enter
fisttpll
mov
scas
mov
add
dec
push
push
movsl
jp
push
jae
fs
repnz
scas
cmp
pushf
cmpsl
fs
xchg
scas
inc
out
repz
idivl
dec
pop
cwtl
sub
mov
imul
or
add
test
or
cli
fimuls
pop
xchg
or
pusha
push
lret
pop
pop
mov
movsl
test
arpl
fisubs
cmp
pushf
shrl
adc
push
stos
out
arpl
movsb
ljmp
xchg
mov
sahf
pop
pop
int
xchg
sub
and
inc
mov
out
cmc
clc
or
lods
ljmp
inc
xor
mov
push
sbb
push
test
and
mov
andl
mov
aad
adc
and
pushf
in
lods
movsb
jb
sub
imul
cmpsb
mov
push
jp
ds
dec
cmpb
rol
std
cli
pop
sarl
lods
and
roll
scas
sbb
xchg
repnz
mov
repz
stos
clc
adc
out
lret
sub
dec
inc
push
aam
mov
mov
fsubrl
adc
mov
push
or
add
mov
or
fiadds
adc
gs
pop
popa
pop
xchg
sbb
mov
mov
insl
std
or
sbb
fstpl
loope
jmp
jno,pt
sbb
sub
iret
xor
jo
icebp
lods
sub
ret
bound
stos
cmpsl
cmpsb
sub
int3
rcr
shll
cmp
xchg
shr
movsb
or
sub
test
fxch
out
xor
mov
jb
pushl
inc
cld
iret
jge
xchg
shrl
and
xchg
or
push
inc
insb
outsl
jecxz
and
add
push
rcll
ret
xchg
adc
or
cli
inc
xlat
pop
lock
fwait
iret
ja
xor
fwait
pop
xor
xor
push
dec
popf
cmp
jmp
orb
adc
sub
bound
inc
adc
call
inc
inc
fsubrl
mov
ljmp
inc
add
dec
xor
inc
shlb
daa
push
mov
dec
push
mov
movsl
std
std
aam
dec
int3
cmp
push
arpl
push
stc
ret
jns
jge
popa
inc
ficoms
mov
lods
shlb
iret
jge
jecxz
or
add
cmp
lcall
xchg
loop
popa
pop
pop
loop
push
je
sub
lcall
pop
push
repnz
decb
ljmp
testl
mov
xchg
xchg
test
imul
movsl
aaa
pop
add
mov
add
xchg
push
push
ja
test
dec
repnz
inc
data16
pop
test
pop
or
int
xchg
stc
cmp
sbb
daa
cmp
lret
cmc
cmpsb
aas
add
movntps
jp
rcrb
sub
stc
outsl
jae
mov
stc
cli
daa
jne
int
jns
movsb
mov
push
inc
or
add
and
das
jne
jge
fs
cli
mov
test
shlb
xchg
and
rolb
in
sbb
xchg
int3
mov
dec
fmul
mov
flds
mov
xchg
dec
mov
push
mov
jecxz
mov
fbstp
and
jo
push
aaa
mov
inc
add
ljmp
add
inc
add
adc
mov
adc
sbb
jne
arpl
dec
daa
cmc
sub
mov
jg
repnz
mov
daa
jae
outsb
pop
out
lea
adc
jbe
sbb
shr
in
mov
jae
iret
lret
fildll
addl
sub
lods
mov
pop
jb
gs
cmpsl
push
jmp
mov
pop
pop
fistpl
jnp
sarb
jb
jno
mov
jbe
pop
ds
adc
ret
lret
cmp
mov
vmovdqa
mov
xor
sub
cmp
xchg
mov
call
sub
or
mov
mov
in
push
inc
out
aam
shll
adc
ret
shl
lret
aad
fdiv
mov
xchg
jp
lods
dec
pushf
pop
add
inc
loope
orb
pop
stos
into
fdecstp
push
xlat
jle
call
mov
xor
addr16
push
xchg
xor
pop
int
loop
das
cmp
add
incl
leave
or
sub
sub
xor
add
and
lcall
jg
add
out
jb
push
dec
repnz
std
and
sub
cmp
pop
lahf
popf
jmp
int
mov
adc
test
adc
xor
dec
test
pop
ret
fbstp
jecxz
and
jns
sub
stc
cmp
scas
pop
fidivrl
push
fwait
sbb
dec
push
dec
push
jnp
xchg
pusha
adc
testb
cmpsl
mov
jg
mov
inc
mov
push
cs
sub
loope
in
cwtl
nop
test
cli
es
ss
dec
sti
fstpl
aas
xchg
mov
or
out
lock
dec
xor
icebp
lock
ret
adc
cmp
call
std
lds
clc
adc
or
jnp
push
or
push
bound
pop
mov
fisttpll
pop
push
mov
insb
add
mov
mov
xchg
loop
add
adc
sbb
adc
shlb
sbb
xor
les
dec
push
in
mov
dec
xor
sub
fcmove
jb
cld
test
cs
mov
push
cmp
mov
pusha
inc
daa
adc
dec
shrl
lcall
xorl
adc
in
add
fidivs
cwtl
popf
jge
add
push
dec
cmp
sbb
into
xor
ds
and
bound
popa
leave
push
test
stos
loopne
mov
test
mov
mov
adc
xor
ja
add
loopne
push
in
jnp
mov
leave
fsts
out
adc
aas
stos
push
cmpsl
js
fmull
popa
mov
push
enter
adc
push
push
arpl
mov
add
in
loop
mov
sub
popa
movsl
mov
rorl
andl
dec
mov
pop
sub
push
and
sub
push
adc
push
mov
ja
loope
dec
cs
and
push
insl
pop
mov
loopne
mov
jno
jmp
scas
dec
loope
out
into
sub
or
je
jno
jae
jge
lcall
pop
loop
xchg
and
es
mov
mov
pop
jg
shrl
lcall
into
stos
inc
jl
sbb
shlb
je
mov
shl
jb
pop
int3
shrb
iret
adc
cmp
les
repz
in
nop
ficoml
push
call
push
cld
dec
clc
je
js
enter
pand
inc
arpl
or
cmc
out
mov
inc
mov
pop
ds
and
xchg
xor
cld
dec
sub
xchg
shrl
add
cltd
cmpb
shrl
add
mov
lock
inc
dec
and
add
fldt
mov
fstpl
jno
pusha
jge
jle
push
ficompl
push
adc
sub
jo
pop
int
dec
jo
cmp
push
lcall
ss
shl
lret
cmpl
lods
je
adc
jns
jno
lds
xchg
enter
fxch
push
xchg
push
cld
and
lock
xor
data16
std
dec
das
push
scas
cltd
adc
add
pop
out
into
xchg
outsb
mov
fsubl
cmpsb
loop
ss
repz
push
jp
or
enter
push
stc
xlat
jl
aas
mov
insb
clc
add
jge
fstpt
mov
shl
lcall
test
xor
dec
mov
jbe
lcall
adc
lods
out
imul
push
or
jp
dec
movsl
lret
icebp
mov
xlat
addr16
and
mov
les
aas
xor
jbe
mov
data16
fs
cmc
aaa
mov
or
scas
and
lahf
xchg
jg
repnz
sbb
jns
mov
mov
shlb
imul
sbb
push
std
or
in
add
rcrl
daa
sbb
push
inc
pop
push
cmpsb
xchg
push
stos
mov
cmp
push
repz
test
fmul
insl
add
in
jne
inc
fnstsw
ss
sub
and
dec
data16
std
loop
outsb
jmp
and
xchg
cmp
int
push
xchg
dec
scas
pop
mov
xor
sub
ja
jmp
jmp
popa
dec
pop
popa
fsubrp
jecxz
cmpsl
lret
test
xor
enter
and
test
arpl
scas
sbb
shll
aam
adcb
std
cmp
aam
push
add
loop
mov
int
mov
fwait
icebp
je
mov
inc
xor
in
dec
insl
or
in
aad
in
dec
mov
mov
push
dec
push
jb
or
ja
inc
rolb
mov
cli
adc
cli
fwait
dec
insb
sub
lret
into
icebp
int
ds
rcrb
cmp
mov
mov
scas
lret
jmp
fildll
lods
push
pop
sbb
push
loopne
push
sub
jecxz
insb
into
pop
hlt
mov
insb
movsb
mov
shll
outsb
imul
jl
fimull
fimull
and
popl
add
lahf
out
sub
clc
fcmovnu
andl
xor
nop
rcrb
lods
sbb
xchg
mov
xchg
jo
out
outsb
inc
sarl
jne
andb
mov
push
movsb
cmc
stos
jmp
mov
cmp
addr16
mov
fistpl
push
dec
imulb
adc
lods
jo
scas
aaa
shll
push
mov
mov
dec
or
and
xor
pop
mov
dec
movsl
mov
lahf
dec
xchg
pop
cmpsb
outsb
push
fmulp
xor
mov
xchg
clc
int3
adc
add
into
rcll
cwtl
xor
add
push
daa
and
xchg
decl
scas
jg
pop
pop
out
int
fcmovnb
mov
hlt
mov
or
dec
cmp
xchg
mov
mov
pop
sub
and
dec
ret
les
cmc
mov
loope
stc
sahf
mov
fldenv
cmpsb
sbb
fcmovbe
dec
lea
loope
push
mov
out
adc
and
jb
pop
push
xor
dec
inc
addr16
insb
clc
inc
xchg
aam
dec
xor
cmp
mov
add
hlt
ret
cli
test
push
pop
cmpsl
pop
arpl
xor
or
and
sbb
fisubl
pop
dec
jp
dec
addl
rclb
clc
add
and
in
xor
sub
cmp
out
je
sbb
pop
stc
push
cld
add
ss
jecxz
push
rcrl
mov
subl
and
insl
data16
cmp
addr16
sub
lea
out
and
sbb
sub
or
cmpsl
cmc
aas
sbb
mov
jle
sahf
cli
fcmovne
loope
xor
sub
mov
cmc
int
jmp
and
add
inc
popf
mov
js
cmpsl
stos
dec
lea
xchg
ljmp
pop
cltd
mov
or
inc
jge
and
mov
jo
testl
and
cwtl
jb
jns
fcomps
insl
repnz
rclb
xchg
jl
adc
jb
xchg
sub
test
out
xorl
inc
addr16
cmpsl
mov
popa
dec
sbb
sbb
mov
lahf
xor
xchg
cmp
dec
pushf
test
jmp
imul
addr16
int
xchg
mov
xor
mov
mov
xchg
and
insb
popa
fistpll
xor
test
ja
xchg
mov
movsb
mov
push
inc
int3
in
lahf
push
jp
stos
fldcw
xchg
rcl
test
loop
mov
js
in
sub
push
jbe
mov
lods
xor
dec
push
or
idivb
bnd
imul
adc
stos
lods
int3
sub
mov
dec
imul
jnp
add
insb
enter
sbb
idivb
adc
xchg
stos
mov
cmp
setae
mull
jnp
adc
pop
sbb
adc
lods
aas
stos
pop
inc
sub
jmp
cwtl
pop
push
ret
repnz
sub
cmp
inc
outsl
mov
and
stos
in
pop
xor
mov
std
add
or
stc
or
shlb
xchg
in
sbb
sub
mov
add
bound
outsb
lds
and
cmp
aad
mov
push
test
xchg
lods
daa
dec
imulb
pop
leave
or
addl
mov
popa
stc
cli
inc
dec
xchg
lods
orb
pop
arpl
and
ljmp
imul
aas
popf
gs
in
popl
stc
dec
shr
fstps
push
movsb
aad
add
dec
mov
push
or
sbbb
test
loop
jg
xchg
loop
into
jno
xor
stc
jmp
lahf
push
subl
sub
js
pop
loope
out
shlb
xor
imul
inc
jb
xchg
fistpl
inc
sub
stc
push
adc
mov
mov
xor
sbb
test
jl
in
mov
aas
mov
je
and
xchg
xchg
or
push
push
testb
xchg
lcall
bnd
icebp
loopne
test
add
push
int3
or
inc
ja
mov
mov
out
out
xchg
dec
test
test
fs
addr16
dec
jne
jge
int
pop
test
mov
jge
scas
mov
add
pushf
ljmp
cmp
out
and
pop
cwtl
stc
xchg
repz
out
insb
sbb
out
rcl
aas
cltd
daa
mov
adc
fwait
mov
subl
jle
fisubrl
cmc
mov
jecxz
mov
outsb
fisttpl
aam
je
xchg
mov
loopne
enter
orb
gs
xadd
mov
mov
loopne
adc
je
repz
pop
fnstsw
outsl
and
test
jg
dec
lock
int3
in
test
and
in
adcl
fldcw
mov
or
xor
mov
xor
xchg
sub
sysexit
jg
movsl
jbe
stos
push
mov
adc
lret
push
xor
add
repz
or
rol
aam
mov
and
jg
dec
xor
xor
mov
xchg
cmc
mov
sti
pushf
sub
in
aam
push
and
sub
fstpt
out
fisubrl
lcall
loop
xchg
into
push
pop
cmpsb
cltd
cltd
test
cs
aaa
lcall
nop
inc
popa
test
cs
int
inc
lock
mov
mov
cld
and
adc
les
stos
rolb
stos
mov
and
fsts
jecxz
out
cli
xor
adc
scas
lds
movsb
je
movsl
mov
movsl
sbb
pop
iret
jle
add
dec
pop
xchg
idivl
mov
cwtl
cmp
mov
jo
fstp
lods
add
add
or
lock
push
out
sbb
cmc
mov
sbb
mov
push
sub
xor
out
sbb
test
push
fsubp
jo
aad
push
adc
lret
mov
mov
ficoml
dec
fimuls
adc
lcall
call
inc
lds
and
mov
jg
mulb
push
mov
lret
ss
ret
xchg
pop
adc
test
cmpsb
test
push
mov
in
lods
fwait
in
sub
sub
fwait
sub
movsb
lock
mov
or
dec
clc
call
push
push
jle
sub
insl
movsl
rol
test
insl
adc
sti
loope
dec
js
lahf
into
inc
xor
pop
mov
loopne
repnz
xor
jp
iret
xlat
sbb
cmp
adc
fbld
adc
fistl
or
je
les
mov
clc
mov
decb
sbb
sahf
xchg
jae
ja
dec
or
push
cmpsl
inc
adc
popf
or
push
and
cwtl
inc
lcall
ret
pop
xchg
sub
js
or
push
stos
imul
xchg
nop
adc
enter
aas
stos
mov
mov
add
rclb
pop
jecxz
inc
outsb
in
test
dec
xchg
shlb
les
dec
loopne
shll
mov
in
nop
sahf
mov
push
jmp
stos
mov
das
mov
pushf
and
sarb
scas
push
lret
xor
mov
ret
in
mov
push
dec
loope
mov
sub
sub
and
in
movsb
xor
sbb
and
fwait
mov
aaa
adc
push
inc
xchg
inc
or
sbb
xchg
xchg
cmc
sub
inc
add
pop
jo
or
push
add
fidivs
hlt
in
cmp
insb
push
ja
andb
ljmp
sub
cmp
dec
cwtl
push
fistpl
inc
insl
arpl
jmp
sti
cmp
out
lods
push
sub
jae
cli
adc
int
test
js
icebp
divb
mov
push
and
out
lret
bound
jmp
mov
and
loop
dec
popf
sti
mov
pushf
pop
push
outsl
in
push
ss
xchg
gs
packuswb
mov
xchg
movsb
hlt
xchg
sbb
loopne
xor
cmp
or
cmpsb
js,pn
fs
mov
imul
les
pushf
jno
push
stos
mov
mov
int
and
cltd
mov
fwait
adc
cmp
loope
movsb
or
mov
int3
fs
inc
mov
int
lret
sbb
hlt
jmp
inc
ficoms
mov
fiaddl
ret
ljmp
fmuls
fisttps
cs
in
fs
int
cmc
sub
xchg
sarl
fists
iret
inc
mov
sbb
inc
pop
imul
and
and
iret
cmp
sbb
xchg
inc
gs
stos
repz
ss
jg
addr16
inc
lods
dec
inc
inc
daa
faddl
test
cmp
inc
or
in
das
sahf
fisttpl
push
ja
loop
adcl
mov
int3
or
ret
movsb
mov
cmp
jg
pop
mov
rcl
mov
sub
jge
insb
push
and
mov
popf
push
fwait
icebp
loope
lock
cmpsl
sbb
pop
repz
and
xor
loop
adcb
and
jo
and
lods
clc
in
inc
es
cmp
mov
int
push
push
jae
arpl
or
mov
das
lcall
test
fldl
imul
and
jle
push
xchg
jp
or
arpl
pop
shll
dec
insl
scas
test
shlb
push
inc
dec
mov
call
out
lock
sub
pop
push
std
addl
adc
xchg
mov
cli
adc
and
fidivrl
or
xchg
ret
arpl
dec
stc
mov
movsb
cmp
sub
jl
addr16
mov
repz
or
mulb
cmp
jg
movsl
addl
fwait
cmp
sub
xchg
jae
repnz
add
pop
outsb
push
in
push
aam
addb
push
mov
dec
into
loope
mov
pop
cmc
jno
repnz
lcall
dec
add
js
xor
mov
inc
cmp
mov
fldl
or
cmp
lea
push
jle
and
ds
xchg
call
inc
lret
xchg
push
jge
rolb
sahf
scas
push
arpl
sub
hlt
pusha
mov
es
pop
mov
push
mov
jge
test
dec
mov
in
test
fwait
mov
jae
cmp
out
lock
mov
xor
mov
sbb
and
ds
invd
shll
xchg
sahf
mov
lock
xor
xor
add
mov
mov
mov
pop
inc
pop
xor
adc
mov
push
int3
call
lock
add
mov
dec
lahf
std
xor
push
lods
push
mov
mov
push
mov
sti
shrb
popa
popl
andb
push
mov
roll
insb
loop
xchg
sub
inc
sahf
mov
sub
or
xchg
movsl
std
mov
les
mov
sti
das
leave
inc
mov
xchg
fiadds
and
push
sbb
or
add
mov
repz
mov
test
push
xchg
loopne
mov
xor
fdivr
ds
fwait
pop
repz
icebp
inc
aam
jmp
xor
mov
sti
mov
stc
xchg
pop
shr
jecxz
push
and
insl
test
xchg
arpl
shlb
xor
push
enter
clts
jecxz
and
or
xor
addr16
popa
add
mov
arpl
negb
mov
in
add
movsl
pop
idivl
add
pop
lret
mov
rcrb
pop
jbe
mov
dec
ret
push
cmpsl
sahf
bound
push
dec
xchg
or
xor
stos
pop
sbb
dec
push
insl
and
lcall
push
cwtl
je
in
jbe
sub
mov
dec
out
sbb
scas
add
mov
xor
dec
ds
mov
fs
sbb
mov
sub
stos
test
insb
xor
arpl
and
dec
push
in
rclb
ss
or
push
test
pop
pop
subl
or
sub
push
jge
sbb
and
pop
into
movsb
dec
sub
je
cmp
mov
add
ljmp
rcrl
or
aaa
scas
pop
push
ss
aas
arpl
test
jmp
push
mov
lock
popa
add
cmp
mov
adc
xchg
jecxz
imul
int3
nop
xor
add
mov
popf
test
in
movb
mov
dec
int
xchg
shl
int
shl
aas
pop
cmpsb
xor
push
mov
inc
out
stos
mov
mov
xor
pop
pusha
dec
mov
mov
movsl
data16
mov
das
add
adc
rorl
mov
out
pop
stos
ss
inc
ljmp
pop
sub
fisubrl
cltd
pop
fcmovnb
dec
jo
popa
imulb
int
jp
jno
cmp
push
adc
pop
xchg
cli
mov
dec
mov
insb
scas
data16
adc
adcl
ds
mov
ljmp
cmp
pop
ret
cmp
dec
loope
pop
fsubr
call
mov
mov
mov
mov
fiadds
call
xchg
cmp
cmp
jg
cmp
mov
popa
mov
adc
dec
dec
sti
test
pop
cmp
popa
xchg
aam
mov
sub
iretw
ja
xlat
pop
jp
fyl2x
sarb
cs
shlb
sub
push
xor
dec
mov
dec
jmp
cmc
imulb
lret
jb
sbb
mov
mov
xchg
jl
sub
testl
es
mov
in
sbbl
mov
inc
cli
into
andl
inc
push
jno
push
add
iret
test
ror
incl
or
push
adc
loopne
les
add
mov
data16
jp
pop
es
xorl
aam
arpl
pop
outsb
or
testb
push
dec
mov
adc
scas
ja
insl
jmp
lret
add
cmp
mov
pop
out
sub
es
pusha
inc
repz
lds
xor
xchg
dec
jmp
cmp
scas
sarl
adc
aas
sub
iret
test
rcrb
enter
xchg
sub
jo
out
cmp
fldl
sbb
mov
xor
xor
mov
and
insl
jo
mov
cmpl
dec
ret
or
sbb
and
dec
push
scas
cmpsb
inc
cmc
xchg
cmp
adc
int
ffreep
inc
stc
inc
imul
pusha
push
lods
rcr
and
sbb
adc
pushf
aad
lret
es
cs
mov
add
dec
mov
xchg
enter
adc
mov
mov
sbb
jecxz
xor
mov
pop
mov
repz
leave
shlb
jle
jbe
sarl
push
and
push
in
dec
inc
push
xor
sub
aad
xor
jge
outsl
bnd
insb
cmp
push
jmp
cmp
mov
mov
inc
das
pusha
jmp
jb
sub
xchg
xor
inc
outsb
jb
test
push
push
add
mov
mov
ds
and
jle
mov
mov
out
cmp
add
dec
ds
test
xchg
imul
mov
lret
mov
cwtl
ret
ds
mov
stos
stos
xor
rcrb
ret
pop
adc
mov
ficompl
mov
pushf
enter
sahf
xchg
adc
push
lock
inc
sub
cmp
lcall
ret
out
inc
cwtl
add
lcall
dec
fwait
clc
fidivl
sti
aaa
dec
mov
lods
rcr
cltd
cmc
fidivrs
sub
push
add
ret
and
sahf
rorl
loopne
fisttpl
fcomi
pusha
push
in
push
js
xor
or
adc
lcall
js
int
in
mov
pop
mov
leave
lds
out
pushf
cmp
push
icebp
dec
cmp
jns
xor
sbb
pop
shlb
inc
movsl
test
addl
mov
int3
xchg
call
adc
jnp
insl
cmp
jno
in
ja
stos
leave
sub
lret
data16
cmp
cwtl
and
push
aaa
jl
insl
out
mov
dec
sub
rep
adc
and
pop
mov
and
dec
addr16
clc
lds
jbe
stc
das
ss
fcoms
fs
mov
ljmp
fldenv
cs
pop
repz
stos
push
xchg
mov
mov
aas
imul
jno
lahf
adc
push
mov
fldt
filds
test
ljmp
std
leave
push
pop
cmpsl
adc
sub
dec
mov
or
cmp
pxor
ja
lods
std
adc
jae
and
cwtl
fucomp
jmp
popa
cmpsb
sub
add
dec
cs
out
clc
stos
je
cmp
lret
mov
jp
and
mov
jle
pusha
xor
push
xorb
pushf
lds
sub
popa
rcll
out
push
je
xorl
out
sub
xor
cwtl
pop
out
repz
je
push
pop
jo
jl
out
xchg
push
mov
jbe
push
mov
sbb
lock
adc
fwait
es
pop
inc
mov
in
lods
imul
loope
into
movsl
jge
leave
adc
adc
push
lea
or
and
pop
cli
adc
cltd
fcompl
and
flds
js
lock
add
jl
pop
inc
lea
jl
sbb
adcb
pop
mov
pop
jg
rcl
sub
jne
adc
jno
cli
sbb
sub
sbb
pusha
add
mov
sub
or
push
pop
adc
sub
dec
pop
orl
sbb
pop
mov
test
inc
cmpsb
imul
add
lcall
scas
shlb
stc
jge
sbb
clc
jbe
and
roll
movsb
nop
ss
jo
hlt
lds
sahf
lods
xchg
mov
xchg
push
repnz
loopne
adc
and
loope
mov
lock
fwait
mov
out
xor
push
jo
xchg
jne
stc
xchg
daa
rclb
dec
mov
mov
mov
aam
cmp
fs
lcall
jae
jo
jae
repnz
inc
adc
inc
pop
mov
push
cmp
ds
push
pushf
xchg
mov
cmp
in
shl
aaa
enter
pop
or
scas
or
fsubl
stos
cwtl
mov
and
dec
dec
ret
sbb
loope
movsb
inc
in
sahf
movb
movsb
arpl
fcomps
mov
xor
mov
das
aad
cs
les
subl
icebp
inc
mov
stos
and
hlt
int3
frstor
pop
fldcw
aad
into
sub
jl
mov
aas
scas
adc
jp
jp
ds
adc
inc
or
inc
cmp
adcb
outsl
femms
fwait
mov
xchg
inc
sti
xor
sbb
jecxz
and
loop
inc
shll
cmp
sbb
std
dec
sub
push
shll
push
mov
outsl
out
scas
loopne
inc
push
in
push
jl
xchg
or
push
ds
pop
ljmp
inc
cmp
adcl
sbb
jge
inc
jnp
dec
mov
loop
sub
inc
adc
outsb
loopne
jle
test
sti
xchg
sbb
xchg
les
jp
lcall
mov
rol
and
xchg
ret
je
lret
dec
push
outsb
dec
fwait
icebp
dec
test
popa
mov
jb
ja
test
stc
nop
movsl
cli
adc
inc
jbe
test
and
mov
sti
mov
daa
cmp
shrb
mov
and
call
mov
test
cli
mov
add
dec
outsl
out
in
jo
mov
arpl
in
cli
faddl
test
and
outsb
adc
and
jbe
add
xchg
cltd
fs
mov
mov
mov
rorb
notl
das
push
adc
es
stos
dec
fbld
cmpsl
rolb
stos
cwtl
rorl
mov
lock
push
jge
xlat
and
ficomps
cmp
pop
test
ljmp
pop
orb
scas
in
add
test
xchg
mov
mov
pushf
sub
repnz
pushl
sbb
inc
gs
or
out
cmpsl
rorl
xlat
sub
insb
jb
add
fstpl
jns
jmp
jne
xchg
cs
or
mov
xor
mov
sbb
push
imul
xor
add
in
cmpsb
sti
adc
jmp
mov
aaa
and
imul
mov
popf
or
mov
lods
mov
popfw
out
fistpll
dec
into
pop
stos
in
jnp
pop
cmpsl
out
or
jmp
mov
add
mov
es
sbb
mov
pop
cmp
hlt
imul
pushf
inc
pop
cmp
jns
add
sub
xchg
imul
addl
je
sbb
ret
cmpl
jle
lds
andl
aam
mov
xchg
mov
popf
or
adc
int
gs
sti
call
jg
mov
lock
in
push
mov
mov
lea
cltd
or
clc
pop
inc
cmpsl
inc
adc
add
in
cmpsb
jns
mov
mov
inc
mov
mov
mov
sbb
sahf
clc
mov
dec
fs
ret
lds
pop
imul
jmp
ja
add
sti
xchg
push
cli
pop
or
pop
sbb
jb
inc
xor
cmp
les
jge
scas
insl
ret
cmpsl
lahf
mov
repnz
dec
lahf
mov
int
add
adc
fs
sbb
das
adc
int3
ss
mov
pop
adcb
dec
push
mov
xchg
mov
jbe
pusha
pop
adc
iret
lods
rorb
insb
adc
rcl
or
out
out
insb
fdivs
xchg
aad
out
insb
insl
pop
std
dec
add
xlat
mov
aam
sbb
in
push
xchg
pop
mov
pop
iret
pop
mov
xor
sub
addr16
jb
movsl
stos
out
mov
movups
add
sarl
jo
mov
mov
daa
rcr
or
fwait
pop
jmp
test
and
xchg
in
aad
mov
dec
cs
test
mov
or
xlat
loop
lcall
popf
xchg
mov
fildll
jae
outsl
repnz
xor
shl
jecxz
pop
mov
xlat
cli
jge
or
pop
inc
sub
cmp
outsl
movsl
adc
jge
xchg
jbe
adc
or
mov
in
jge
pop
mov
rolb
loop
inc
jmp
scas
adc
push
cli
add
xor
xchg
movsb
test
clc
pop
repz
lods
test
cltd
imul
ss
pop
aaa
shr
popa
or
sub
and
aad
or
shll
push
loope
repnz
ljmp
xor
cs
sbb
mov
jae
outsl
or
scas
pop
dec
and
adc
das
lods
xchg
ljmp
fists
stos
inc
outsl
pop
inc
dec
xor
ret
les
bound
jns
xchg
out
mov
xchg
inc
dec
push
add
mov
mov
inc
rclb
sbb
notb
mov
inc
loop
call
dec
inc
pop
push
push
into
pop
loope
mov
dec
dec
cs
repnz
jge
mov
mov
pushf
sbb
xor
lds
or
call
mov
adc
fwait
xchg
js
dec
xchg
in
cwtl
sub
sub
inc
pop
repnz
sbb
push
pusha
pop
mov
popf
out
xor
imul
mov
lods
jp
jl
mov
movb
inc
cmp
movsb
repz
adc
or
fnstsw
sbb
cmc
add
nop
mov
pop
loop
fbstp
sbb
fcmovnu
addr16
pop
std
inc
mov
rcrl
cmc
ss
sub
or
cmpsb
and
leave
sbb
pop
add
add
adc
inc
daa
inc
daa
aas
inc
pusha
andl
mov
popa
jb
mov
jb
push
repnz
sarb
jle
dec
imul
and
inc
std
mov
add
addb
mov
sbb
popa
loope
sub
fwait
push
ret
push
iret
jae
xchg
sub
nop
arpl
das
push
jo
movsl
sahf
out
dec
sbb
fisttpll
repnz
lahf
sbb
mov
fisubs
cmp
sti
dec
cs
sbb
xor
dec
xchg
jo
adc
adc
sbb
dec
mov
call
jp
or
push
push
mov
shrb
push
inc
pusha
icebp
xorb
sarl
jae
sbb
mov
cmpsl
cli
loope
adc
lock
mov
add
flds
mov
ja
cmp
pusha
xchg
out
mov
push
pop
test
add
jmp
add
lods
sub
mov
mov
stc
dec
pop
fwait
push
or
mov
int3
clc
lock
aaa
push
test
push
mov
nop
push
lods
sub
push
lods
pop
aam
test
cmp
sbbb
stos
mulb
cmp
shll
and
sti
jns
push
rcrl
cmpsl
xlat
sahf
imul
inc
dec
loope
fdivs
push
hlt
inc
xchg
flds
outsl
out
and
pusha
add
pushf
push
pop
dec
fldenv
negb
leave
mov
push
scas
out
fdivrl
mov
fsubs
loop,pn
sbb
push
gs
movsb
mov
mov
psrad
xchg
jle
add
in
pop
adc
add
das
push
xchg
flds
cmp
xor
movsb
cld
cmp
lds
pop
mov
adc
lea
cld
incb
and
mov
rol
insb
out
pop
xor
fcmove
call
out
adc
daa
push
adc
ret
pop
push
movsb
ret
push
pop
xchg
inc
sub
sub
mov
or
push
mov
mov
pop
sbb
or
xchg
add
xchg
out
jno
jge
jno
aad
stos
add
jmp
mov
push
imul
xchg
xor
faddl
and
ret
jle
lods
mov
push
mov
mov
sbb
and
pop
imul
in
femms
out
sahf
xor
inc
nop
inc
sub
out
pop
psubw
pusha
xor
mov
push
gs
movl
dec
lods
int3
xor
dec
sub
shll
in
xchg
sbbl
insb
orl
dec
mov
mov
decb
mov
dec
mov
jne
jle
adc
mov
jo
and
cwtl
or
imul
rcr
cltd
mov
jge
jmp
add
or
iret
push
or
dec
repnz
dec
sbb
aaa
mov
sub
and
push
mov
cmp
add
inc
out
das
mov
fnstcw
mov
test
popf
movsl
inc
xchg
xchg
and
pop
lret
pop
sbb
mov
push
mov
loop
je
hlt
sbb
cmp
jne
cmp
mov
je
std
xchg
rorl
xchg
aas
outsl
cmp
sub
stos
fisubl
ds
fcmovnbe
insb
pop
mov
pushf
lahf
adc
or
mov
ret
lret
mov
adc
mov
mov
rcrl
mov
aam
mov
pusha
call
sbb
sub
jp
inc
sub
cli
sub
xchg
sub
and
mov
scas
or
in
test
mov
stos
loop
inc
cmp
test
cltd
and
and
divl
out
jl
jg
jbe
xchg
dec
idivb
inc
pop
int3
dec
jns
adcl
cmp
sbb
nop
push
movsl
or
or
lea
cwtl
dec
push
xlat
pop
or
push
aam
mov
mov
fistl
or
ret
dec
pop
jo
mov
cwtl
push
pushaw
sarb
aam
fldl
xchg
cmp
cli
jnp
cmpsb
cmp
or
je
rcrb
movsb
or
mov
testl
stos
pusha
into
xchg
xor
lock
daa
inc
mov
loope
lods
lea
imulb
stos
xchg
aad
bound
jge
inc
ret
sub
out
or
fdivrs
mov
dec
jae
sbbl
in
cmp
jge
adc
mov
repz
jle
ljmp
sub
push
mov
lds
xor
popf
jne
inc
jg
das
cli
add
cwtl
repz
inc
cmp
outsl
jmp
xchg
insb
jecxz
cmp
dec
fsubs
or
cmp
in
inc
lcall
adc
je
mov
jns
pop
push
in
adc
jnp
in
inc
loop
adc
popf
dec
add
sub
aas
std
data16
scas
inc
mov
inc
jo
shld
jge
cmp
pop
jmp
pop
mov
roll
pop
nop
cld
push
fdivrs
mov
push
rclb
xchg
out
mov
inc
std
xchg
pop
fisttpll
xchg
add
setae
sub
jbe
pop
imul
pop
test
daa
sub
and
jmp
scas
ret
subl
and
jnp
popa
inc
shlb
rol
or
popa
sbb
push
clc
loop
xchg
cld
ss
and
mov
aad
inc
mov
aaa
sub
dec
and
loope
push
movsb
mov
repz
mov
push
sarl
stos
addr16
fs
xchg
inc
pop
shll
shrl
ja
out
inc
mov
inc
jg
cmp
inc
dec
popa
sbb
lahf
jp
lahf
xchg
test
test
gs
testl
sub
cmc
fldt
jno
sub
or
and
orb
or
jnp
aad
jge
jge
push
inc
xlat
pop
ret
mov
scas
xor
mov
and
cmp
subb
mov
fs
dec
cmc
jnp
lret
data16
bound
rclb
movsl
jo
mov
cmp
and
out
fcmovu
push
ss
mov
rcll
jnp
outsl
pop
mov
bound
jne
pop
inc
push
sbbb
or
cmp
pop
inc
jb
pop
rcr
and
inc
popf
mov
adcb
nop
popf
cmp
js
mov
xchg
hlt
sbb
sub
xor
in
adcl
das
mov
inc
daa
lret
pushf
mov
ss
lret
cmp
test
out
icebp
sbb
shrl
loope
adc
lds
mov
or
mov
or
lret
in
jp
cmp
aas
mov
add
loopne
test
mov
mov
xchg
pop
pop
outsb
imul
jmp
insl
push
push
jg
lds
cltd
inc
out
sub
cltd
adc
loope
jl
fidivs
sub
sub
sbb
nop
cmp
mov
mov
add
pop
in
rclb
sub
shlb
mov
mov
or
nop
nop
fiaddl
js
mov
aad
cmpl
cltd
add
add
and
loopne
arpl
add
das
sub
idiv
xor
sub
xor
push
mov
dec
ret
sub
push
lahf
into
nop
sub
stc
popa
ror
xchg
push
or
and
mov
lret
icebp
inc
leave
loopne
ja
outsb
cmp
mov
mov
clc
sar
enter
push
xchg
add
fmul
sbb
movsl
push
addr16
pop
mov
mov
das
int
xchg
js
lret
inc
in
mov
int3
push
repnz
jo
fst
pop
enter
sub
outsl
inc
pop
mov
loop
nop
lock
imul
inc
stc
jbe
xchg
dec
cmp
cmp
xor
mov
sub
sub
rorb
mov
cli
lods
fwait
pop
imul
iret
movsl
hlt
jnp
mov
pop
mov
leave
pushf
nop
bound
pop
inc
iret
arpl
fs
fistpll
jno
lods
jb
aas
xchg
mov
xchg
jmp
ss
mov
aam
ds
cmp
and
cmp
inc
or
mov
imul
lods
into
loope
cmp
into
ja
bound
xor
insl
sbb
push
sub
push
pop
inc
inc
mov
lock
in
xor
into
aaa
xchg
ds
mov
lods
jle
lods
cmp
dec
xor
fwait
mov
mov
inc
push
jo
mov
or
into
add
jp
adc
or
scas
stc
in
sbb
test
outsb
inc
repz
call
test
leave
roll
mov
or
jp
clc
mov
jno
push
ja
cmp
scas
jo
xor
push
pop
lcall
mov
xchg
xchg
fs
sbb
jle
clc
lea
push
neg
xor
aaa
cmp
icebp
dec
jmp
jo
jmp
add
fsubp
daa
mov
cmp
jns
insb
movsl
addr16
dec
aad
push
stos
add
loop
scas
gs
mov
fnstcw
inc
orl
aad
icebp
cld
into
sub
call
or
movsb
movsb
mov
lock
sub
inc
push
xchg
test
movsb
nop
fistl
sub
jl
push
dec
leave
insb
cmp
scas
shlb
xchg
pusha
inc
inc
mov
jg
mov
adc
push
es
mov
outsl
mov
movsl
incb
outsb
push
or
std
test
cli
loop
test
mov
stos
std
insb
sbb
xchg
push
fs
xchg
lret
jo
jmp
push
popa
ret
cmp
sub
mov
add
or
out
loope
popa
xor
sub
add
lahf
popl
ljmp
mov
xor
and
push
or
xor
inc
sub
scas
jae
cmp
stos
adc
push
xor
daa
push
pop
fistl
push
xor
cvtps2pi
mov
scas
mov
mov
cmpsl
sub
adc
dec
add
jno
fiaddl
push
call
xchg
pop
lods
push
jns
imul
push
addb
xchg
in
sbbl
test
cmp
mov
lock
pop
mov
mov
ja
adc
out
jne
adc
dec
push
inc
push
mov
rolb
or
mov
add
imul
rclb
sub
mov
push
int
outsl
inc
popf
and
xchg
scas
mov
mov
mov
or
mov
xchg
and
ror
mov
xchg
mov
pop
jne
inc
jno
push
cltd
jns
cmp
xchg
loope
dec
xor
clc
inc
mov
ret
ss
inc
sbb
mov
call
lds
jl
adc
sti
jns
outsl
mov
push
notb
push
push
negl
fsubrl
adc
adc
sub
push
dec
imul
push
mov
sbb
and
pusha
fwait
pop
gs
imul
sbb
iret
jecxz
pusha
les
cltd
jge
mov
ja
push
lahf
clc
outsb
fstps
or
adc
sti
push
mov
adc
xlat
sbb
adc
or
xchg
cld
inc
jle
push
sub
jl
scas
xchg
les
es
rcrl
in
sbb
aas
imul
xorl
pop
roll
xchg
std
clc
cltd
push
inc
movsb
shll
out
jp
dec
mov
test
es
ds
aaa
jne
and
jnp
jb
pop
mov
pop
call
mov
or
ret
enter
lods
outsb
dec
jecxz
cmc
cmp
movsb
xor
int3
leave
test
mov
cmp
add
adc
or
mov
int3
adc
sub
jns
jmp
inc
lds
sub
inc
jge
ja
lods
ficoms
push
jmpw
mov
add
mov
or
xchg
popf
push
mov
jp
mov
fwait
mov
add
lods
add
push
gs
jo
xchg
lods
sbb
jnp
fs
mov
fldl
mov
aad
mov
cmp
adc
loope
sti
aam
sub
out
lret
aaa
insb
orb
jbe
sbb
mov
dec
mov
and
mov
xor
js
sub
stos
jo
jge
ret
xor
lods
push
xchg
fisubrs
faddl
add
mov
movsb
mov
dec
push
push
inc
push
mov
pop
mov
cmp
lret
mov
aas
dec
adc
rorb
sbb
pop
das
or
mov
in
mov
out
pop
add
lods
mov
lock
std
cmp
or
push
addb
inc
jg
sar
les
mov
mov
mov
mov
lods
imul
add
xchg
jne
or
sub
pop
aad
fs
ss
fsubl
pavgb
adc
mov
jmp
xor
inc
dec
jmp
sbb
add
mov
ret
inc
mov
mov
adc
andb
xlat
mov
pushf
subl
mov
sbb
pop
jno
sub
ljmp
jecxz
pop
imul
lock
pop
xchg
and
ret
loope
daa
mov
or
imul
sbb
mov
xor
clc
scas
xchg
mov
sahf
rclb
nop
push
ja
std
mov
in
popf
push
inc
mov
stos
mov
inc
or
addr16
mov
sti
clc
add
mov
adc
cs
add
sbb
loop
xchg
push
or
mov
mov
dec
sub
pop
loope
bound
cmc
sbb
shlb
arpl
add
mov
mov
add
test
sub
adc
dec
mov
pop
add
sbb
je
push
gs
pop
pushf
iret
xor
mov
dec
ret
xchg
jno
cmp
in
jo
jne
adc
das
out
imul
dec
and
cmpsb
stc
arpl
xchg
rcll
xchg
nop
test
cmp
cmp
cltd
mov
hlt
negl
loope
mov
loop
add
mov
adc
jecxz
push
adc
dec
insb
push
mov
fistps
pushf
cmp
push
sub
inc
cld
mull
push
xor
cmp
pop
ret
mov
inc
imul
pop
or
jp
add
pop
mov
hlt
stos
cmp
gs
std
aaa
aad
add
mov
fwait
mov
pop
les
fwait
and
nop
pop
add
xor
add
shll
xchg
iret
int3
or
leave
je
adc
insl
test
xchg
add
bnd
leave
sbb
cli
pop
dec
lcall
andl
mov
sbb
xchg
push
sbb
inc
insl
js
mov
adc
xchg
popf
dec
mov
jns
adc
add
je
mov
xlat
jp
pop
fidivs
adc
or
sbb
mov
mov
mov
dec
adc
or
mov
addr16
adc
and
dec
addr16
or
jmp
std
sub
mov
out
test
mov
cmpsb
dec
jae
push
add
mov
mov
movswl
push
xlat
fsts
xor
les
xlat
sub
xchg
subl
jnp
pop
push
inc
js
out
sti
push
dec
add
and
xchg
inc
idivl
movsl
pop
jl
sbb
push
leave
mov
scas
push
sub
int
je
test
andnps
pop
cmpsl
cmp
adc
ret
pop
shlb
jl
jo
mov
aam
aam
jmp
dec
or
mov
mov
cwtl
xchg
sbb
jnp
add
aad
addr16
popf
push
fistps
in
insl
jbe
cmc
xchg
std
fs
jecxz
ja
movsl
pop
sbb
cld
repz
mov
in
lcall
sbb
cmp
mov
popa
loop
dec
jo
addr16
rcrl
addr16
test
sbb
xchg
xchg
sub
sbb
pop
mov
stos
rcl
sbb
cmp
xor
je
add
mov
fisubs
xor
jb
cmpsb
jmp
mov
jne
or
inc
or
add
jb
cwtl
fiadds
je
sub
repz
inc
and
xchg
loop
sub
repnz
out
test
out
mov
jg
add
mov
xor
fsubrs
mov
jne
fwait
push
jne
mov
xchg
inc
or
dec
jbe
pop
mov
nop
jno
sub
cmp
ret
jge
dec
adc
sub
cmp
sub
lea
bnd
movsl
and
lahf
jl
jbe
adc
leave
jo
rclb
push
pop
dec
and
in
and
pop
xor
or
jg
stc
addl
cmp
xor
push
sub
mov
imul
stos
push
mov
test
es
pop
nop
jg
sbb
xor
inc
cwtl
jp
insb
mov
pandn
cld
mov
xchg
jae
mov
arpl
pop
jge
inc
fcom
loope
outsb
cmpsl
dec
wrmsr
pop
mov
imul
mov
pop
xor
cmc
dec
mov
xlat
fidivrs
mov
sbb
dec
movsl
xchg
int3
add
outsl
sub
sbb
adc
outsb
push
pop
cmovno
insl
in
push
cs
jl
dec
rcr
push
pop
inc
scas
mov
leave
push
and
adc
cmc
cli
lods
movsl
dec
pop
cwtl
xor
mov
cli
and
sti
mov
add
cld
add
out
lods
insl
push
fistpll
push
mov
mov
out
or
mov
imul
ss
stc
adc
pop
fnsave
pop
adc
lea
mov
mov
sub
add
sub
mov
xchg
sub
int
rcr
pmaddwd
mov
adc
int3
mov
dec
add
lret
inc
cltd
adc
mov
loope
sub
lock
jbe
fimull
das
out
mov
and
mov
push
imul
addr16
xchg
jno
sub
dec
mov
jg
lret
fsubrs
sahf
mov
dec
add
icebp
push
xor
jecxz
cwtl
xchg
pop
aad
cmp
and
bound
add
jne
xchg
clc
data16
loopne
aad
push
shrl
mov
les
mov
sti
pop
jmp
cld
xor
test
in
mov
jg
sbb
jmp
push
jno
imull
push
ss
xchg
aam
test
add
and
or
mov
cs
lea
repz
mov
xchg
scas
push
jmp
add
push
in
jo
rcl
sub
fstl
sbb
addr16
scas
xor
xchg
xchg
add
push
jne
xor
push
and
lret
cmc
ret
cmp
addr16
cs
mov
fldz
or
mov
das
ret
dec
inc
cmp
cmp
bound
fs
mov
sbb
loope
mov
xchg
adc
lea
cmp
ret
sbb
xorb
mov
mov
lds
mov
inc
mov
xlat
dec
lods
xor
pop
les
and
jns
dec
xor
adc
inc
fildl
inc
aas
stos
es
loop
pop
jg
pop
lods
inc
sbb
add
mov
xchg
xchg
push
ret
mov
lea
adcl
mov
pop
dec
push
fbld
add
inc
jl
jecxz
lret
int
jns
push
and
xchg
cli
sbb
enter
jge
xchg
packuswb
push
jo
sub
adc
push
push
push
ret
je
mov
pop
fwait
cmp
xchg
push
into
sub
mov
jnp,pt
mov
push
push
push
cmp
sub
push
and
adc
xor
test
or
bound
push
add
imul
add
fistps
sub
mov
aas
sbb
add
nop
dec
das
cmp
push
push
icebp
ja
add
sbb
mov
stos
mov
lds
dec
rorl
pusha
lock
xor
rep
loop
or
filds
add
dec
pop
iret
daa
dec
add
push
pop
ljmp
repnz
jge
mov
pop
ds
inc
popw
pop
cmc
rcrl
pop
scas
sub
cld
ljmp
sbb
in
sbb
leave
daa
stos
pop
mov
mov
xchg
lea
in
push
movsb
in
test
mov
cmp
or
inc
movsl
fdivs
fisubrs
mov
std
gs
js
lret
shrl
into
test
jmp
in
cmp
loopne
push
enter
cmp
pusha
test
jmp
mov
cmc
mov
fnstcw
les
inc
arpl
xor
rcll
insb
cmp
lret
or
shr
mov
push
mov
clc
dec
pop
adc
jnp
sti
xor
jg
sbb
xchg
cmpsl
or
xor
add
fcmovne
push
es
and
lret
sbb
test
xchg
fnstsw
std
mov
lret
popf
enter
inc
aas
xchg
sbb
xchg
pop
dec
inc
shl
rcrb
jbe
push
jbe
in
inc
imull
push
scas
pop
cmp
leave
jle
scas
or
add
adc
enter
scas
adc
cmpsl
mov
aas
flds
es
lcall
shlb
mov
fdivs
mov
sbb
mulps
xor
mov
shll
pop
jmp
jns
inc
mov
cmpsl
mov
loop
mov
and
fnstenv
jecxz
add
mov
xchg
pop
add
scas
test
push
mov
ds
out
adc
repnz
in
dec
hlt
mov
ds
imul
call
sub
or
jo
sbb
mov
jmp
popa
pop
repnz
and
or
mov
mov
inc
dec
jb
xchg
lods
inc
stc
sub
adc
fnsave
xchg
push
call
out
xchg
ret
lods
enter
sbb
lods
push
jge
sub
hlt
das
fwait
mov
stos
jnp
lods
inc
cmp
dec
adc
scas
mov
jb
sbb
cltd
adc
movsb
pusha
arpl
cmc
loopne
stos
pop
dec
xchg
pop
leave
leave
scas
xchg
xor
xlat
fstpl
or
lret
inc
mov
or
fdivl
pop
mov
dec
xor
xchg
push
xchg
push
cltd
lret
jecxz
out
sar
iret
out
push
push
inc
aaa
mov
in
inc
pop
pop
cltd
andb
cld
in
push
mov
mov
cmp
mov
cmp
xor
mov
js
fiadds
into
jns
dec
xlat
xchg
xor
jno
ret
pop
and
lock
fldt
xchg
inc
push
shl
mov
or
mov
xlat
push
rcrb
cmp
xchg
mov
push
es
jno
push
jmp
out
cli
ja
enter
lock
cwtl
insb
dec
and
rcr
xor
or
dec
mov
push
xor
or
andl
xchg
add
or
repnz
outsl
popf
or
sbb
popfw
jnp
sbb
lock
mov
sbb
or
mov
in
pop
scas
test
icebp
cli
lea
cmc
mov
rcl
out
inc
dec
cli
pop
mov
sub
push
mov
jp
imul
pushaw
scas
loop
dec
or
or
dec
cmp
and
jp
and
or
inc
dec
ljmp
fidivrl
std
test
xor
mov
lret
mov
aam
add
dec
dec
int
repnz
jl
mov
jbe
mov
xor
in
cmp
lods
lock
cltd
add
xchg
mov
xorl
jb
out
push
add
inc
idivb
mov
inc
or
dec
fistps
cs
inc
mov
or
add
mov
les
lds
add
daa
in
test
std
scas
and
or
ss
test
lea
in
adc
es
xor
dec
mov
fadd
cltd
adc
sub
adc
stos
xor
jmp
mov
test
jnp
add
mov
mov
xchg
imul
xlat
gs
pushf
iret
test
out
es
rclb
pop
push
push
das
push
mov
mov
lds
jge
out
jb
inc
push
sub
mov
push
mov
ja
cli
cwtl
stc
jo
jl
movsb
maxps
mov
adc
pop
jmp
insb
test
loopne
sub
in
aam
arpl
cmp
sbb
dec
jle
es
mov
xchg
ss
fwait
xor
sti
add
cmpsb
and
movsb
jmp
jg
stc
sub
cmpsb
jns
dec
add
jb
jnp
jecxz
add
adc
xorb
sub
nop
hlt
addl
push
adc
or
cwtl
pop
aaa
cld
les
ds
bound
pusha
cld
or
call
and
xor
icebp
ss
xchg
inc
and
pop
adcl
jno
mov
orb
and
jl
dec
xor
test
cmp
cmp
push
sahf
mov
lods
aaa
pop
xor
out
stos
lea
cmc
jno
ret
out
rorl
dec
and
loopne
in
adc
cmpsb
dec
jecxz
jno
pop
shlb
out
mov
and
ljmp
xchg
mov
inc
mov
aas
adc
in
sbb
in
and
jmp
jge
cwtl
add
or
and
je
cmp
jbe
inc
shrl
jns
dec
dec
lods
addr16
outsb
imul
and
mov
nop
pop
popf
in
or
into
cmp
pop
std
je
test
cmpsb
sub
mov
test
cmpsb
xchg
cmp
sbb
into
mov
jle
sbb
daa
sub
and
push
mov
dec
xorl
push
cltd
mov
mov
sub
mov
in
push
xchg
std
out
fsubp
or
inc
mov
lahf
lea
sbb
mov
aam
out
jae
mov
xor
roll
rorb
pop
jnp
nop
mov
fwait
ret
push
aad
jge
mov
sbb
lods
mov
pop
mov
dec
scas
lahf
shll
shll
bound
push
xchg
stos
mul
cwtl
sbb
cmp
ljmp
cmp
fistl
mov
and
jbe
sar
dec
stc
cmp
lods
mov
mov
dec
inc
dec
add
cs
xor
inc
bnd
int3
jle
sub
mov
sbb
cli
dec
dec
push
mov
lock
cmp
cmp
lahf
lods
fstpt
pusha
jl
xor
fiaddl
cwtl
lret
jbe
lret
push
dec
mov
xchg
add
fs
mov
sub
out
in
movsb
lret
push
lods
dec
adc
sub
or
outsl
cmp
jl
dec
cmpsl
loope
divl
dec
and
mov
push
dec
xchg
lret
jecxz
push
or
adc
and
das
inc
mov
push
inc
or
shll
les
dec
hlt
jbe
data16
lock
and
and
icebp
and
xchg
mov
mov
and
lcall
cmp
cwtl
mov
pop
jb
les
sub
xchg
dec
adc
mov
enter
pop
mov
xchg
push
sub
or
mov
mov
push
clc
pusha
and
jmp
inc
inc
push
sub
and
dec
imul
leave
push
pop
adc
gs
pop
mov
mov
cmpsb
int
push
mov
adc
jne
lds
fldenv
sub
cmp
adc
popa
add
hlt
xorl
add
sbb
das
pushf
enter
dec
lahf
pusha
fisttpl
sbb
repnz
loop
add
pop
test
xor
rclb
int3
dec
sar
fildll
mov
lods
insb
jns
mov
call
outsl
jnp
and
cli
ret
mov
daa
hlt
cmpsb
call
dec
push
jmp
jnp
outsb
adc
in
inc
vpaddsb
ss
in
aam
xchg
shl
mov
push
subl
push
repnz
rolb
test
and
popa
cmpsb
push
xchg
push
push
fmull
in
or
in
and
mov
pop
les
xor
fcmovbe
xchg
xchg
jb
jno
aas
stos
mov
hlt
jno
scas
mov
ja
add
mov
xchg
push
subb
push
mov
ficomps
lods
mov
pop
mov
push
mov
sub
adc
add
arpl
or
stc
pop
mov
sbb
mov
test
inc
cmp
lcall
aaa
les
dec
rcll
rcrb
xor
pop
subl
rcrb
sub
iret
rcll
cmp
jbe
lods
les
out
inc
scas
inc
pop
dec
bnd
movsb
push
js
je
sub
fisttps
int3
ficoms
mov
jbe
mov
sub
jbe
inc
cmc
push
insl
mov
xlat
push
jmp
push
dec
hlt
mov
int3
push
pop
sbb
lea
dec
ja
loop
cmpsl
push
outsl
std
pop
mov
mov
and
mov
mov
xchg
rcll
mov
aaa
enter
add
sbb
jo
out
iret
and
xor
leave
sub
loope
lcall
orb
xchg
repz
adc
or
mov
adc
gs
sub
icebp
xor
jb
aas
jns
mov
mov
add
cmp
fdivrp
dec
fists
jno
xchg
in
adc
pop
insb
mov
das
mov
inc
andl
sub
adc
adc
jg
mov
jno
xchg
sbb
test
inc
pop
out
add
mov
addr16
push
pop
or
lock
push
into
lods
pop
adc
into
mov
lcall
dec
jmp
push
jbe
pop
orb
pop
push
pop
mov
out
sbb
mov
xlat
adc
push
rolb
dec
push
sahf
xchg
pop
pop
mov
xchg
xor
rcr
xchg
out
orl
popf
adc
push
push
add
push
pop
xor
mov
movsl
mov
fdivl
cmp
sub
xchg
lahf
sub
divl
data16
mov
andb
mov
sbb
pop
sti
or
push
add
cmp
inc
clc
fidivrs
xchg
in
jmp
fisubrs
imul
mov
push
call
ss
mov
jmp
dec
seto
addr16
sub
mov
cltd
fidivl
jbe
jmp
xchg
xchg
loopne
out
mov
into
push
push
mov
mov
inc
push
push
icebp
addr16
xchg
dec
cmp
lahf
cwtl
pop
lret
sbb
es
jp
jge
sub
sar
or
das
clc
push
fsubl
push
mov
test
jbe
push
dec
fsubs
in
scas
push
push
test
xchg
pop
addl
and
icebp
cmp
lcall
pop
leave
fs
mov
jns
push
daa
fs
call
lods
shl
pop
mov
popf
test
or
lcall
xchg
push
sbb
cmp
add
dec
outsl
cmp
mov
mov
lcall
mov
mov
jmp
mov
push
aam
adc
hlt
xor
fistps
pop
mov
cmp
inc
fisttpll
mov
mov
fldt
adc
clc
inc
dec
out
repnz
loope
lea
je
mov
cmp
dec
scas
repz
roll
test
push
arpl
imul
jecxz
movzwl
jmp
and
and
jle
pop
adc
sub
jp
cmp
leave
out
popa
das
fbld
test
loop
xor
icebp
test
lahf
adc
xchg
mov
push
pop
xor
or
and
inc
in
sbb
push
mov
jecxz
shlb
mov
add
or
orl
imul
lock
pop
movsl
push
js
bound
jns
mov
cmpb
fcom
or
ficomps
int
cmpsb
jno
or
adc
jmp
fsub
lea
gs
or
pop
popa
lret
jnp
jp
xchg
pop
push
push
notl
mov
jmp
fwait
push
xor
enter
aam
or
dec
popf
jg
les
fst
arpl
fwait
sbb
mov
jb
scas
loopne
sub
mov
fnstsw
lahf
jo
and
mov
mov
jmp
outsl
faddl
movsb
ljmp
addr16
sub
mov
loope
inc
std
push
cmc
xchg
jo
negb
shl
xchg
insb
mov
pushf
mov
ljmp
xchg
iret
and
lods
fiaddl
mov
add
push
pop
xchg
cmp
cmpsb
outsl
mov
pop
popf
sti
ja
in
push
gs
and
sbb
jo
daa
adc
ja
aas
dec
fcomps
data16
sbb
shlb
cmp
or
mulb
js
clc
insb
leave
not
mov
pop
cs
aaa
push
xchg
jl
bound
mov
out
jp
jo
in
aam
int
push
ficomps
lods
ja
int3
sub
in
cs
call
push
out
bound
js
fxch
add
in
sub
or
nop
push
adc
adc
push
adc
stc
std
cld
shrb
adc
add
mov
nop
ret
jo
mov
lcall
push
push
popa
int3
call
fnstsw
dec
mov
cmp
pop
fwait
sub
and
jg
out
mov
bound
pop
arpl
and
dec
rcr
insb
movsl
hlt
cmpb
inc
es
lods
sbb
cltd
and
test
dec
loope
inc
cmp
mov
fbld
call
ss
add
ror
add
mov
fwait
out
vpshlw
mov
test
xchg
les
xchg
ret
dec
and
orl
dec
mov
push
cmc
push
movsb
je
mov
je
rcl
sub
sahf
pop
jle
add
push
les
out
lahf
insl
sbb
outsb
cld
xchg
dec
mov
jecxz
add
test
xor
dec
int3
inc
xor
mov
lret
add
inc
std
not
popa
pop
xor
mov
mov
loopne
push
or
mov
inc
rorb
stos
in
or
mov
xchg
fstpl
out
mov
mov
and
movsb
ret
inc
cmp
cli
sub
and
sahf
bound
lcall
push
pushf
cs
loope
sub
cmp
cmpsl
mov
scas
ror
sbb
sbb
push
mov
cmpsb
in
movsl
dec
push
push
add
mov
scas
lcall
insb
inc
insb
pushf
mov
jecxz
jbe
xor
pop
inc
lock
out
test
or
sbb
scas
add
pushf
or
dec
sub
add
cmp
cmpsl
or
lret
daa
jbe
sahf
out
gs
iret
dec
movsl
jecxz
test
sub
in
fadds
sti
adc
cwtl
repz
push
mov
ret
out
imul
mov
xchg
lds
and
mov
loop
cmpsl
mov
xchg
fnsave
jo
movl
nop
int
bound
stc
pusha
out
fcoml
cmp
lahf
scas
pop
cmp
ss
hlt
iret
cmp
hlt
jmp
loope
bound
xor
dec
inc
mov
pop
bound
inc
mov
lcall
jo
dec
lret
add
xchg
lret
mov
fdiv
cmp
fbstp
cmp
xor
adc
ljmp
in
cmp
scas
xchg
sub
mov
adc
dec
fwait
imul
loop
shrl
cmpb
rcr
jecxz
dec
pop
mov
adc
push
gs
fcmove
xchg
fsubrs
mov
dec
xor
mov
cmc
fwait
mov
sub
repnz
mov
stos
xlat
add
or
jle
cmp
cmp
push
adc
fiaddl
repz
add
popf
ficomps
shlb
nop
mov
loope
inc
cmp
xlat
sbb
adc
insl
lret
cmpsb
decb
std
dec
xchg
push
and
in
pusha
test
pop
xlat
sub
inc
pop
jmp
pop
stos
cwtl
add
into
in
pop
out
cmp
inc
hlt
out
stc
das
sbb
bound
pusha
fxch
ss
fidivrs
push
mov
mov
test
add
sbb
movsl
adc
inc
sbb
jecxz
sbbl
scas
add
mov
push
push
pop
xchg
push
sbb
push
mov
aas
jl
sub
pop
daa
pop
aam
inc
push
out
out
xchg
sub
inc
xor
cmp
dec
xor
cmp
xor
cmp
jp
cmc
push
in
mov
mov
add
cs
sub
fdivrp
add
and
pop
imul
test
sub
xchg
std
int3
rcrb
push
stos
pop
dec
adc
xchg
stc
les
mov
dec
rclb
in
mov
aas
sti
das
adc
ret
inc
pop
icebp
push
lock
out
sahf
pop
sub
pushf
int3
sete
mov
add
lea
imul
mov
mov
fsts
les
fisubrs
mov
jp
ret
and
aad
or
mov
ljmp
and
stos
or
fiadds
or
inc
orl
gs
lcall
into
dec
test
leave
sub
orl
mov
jecxz
enter
inc
push
cmp
aad
int
inc
xchg
jg
jns
cmc
xchg
fcomip
mov
xlat
xor
pop
pop
clc
dec
xor
rclb
dec
add
pop
fistpl
adc
jns
push
sar
jns
test
add
and
xchg
and
jge
add
fs
mov
loope
cwtl
clc
inc
push
fst
cwtl
mov
jge
cli
subb
or
xchg
es
and
jecxz
fisubrl
and
add
and
cmp
aad
dec
add
fidivrl
in
push
or
cmpsl
das
out
ret
icebp
test
adc
out
popa
jp
push
loop
xor
xchg
dec
imul
daa
add
xchg
popa
outsl
stc
pop
aaa
push
outsb
jge
lock
movsl
jbe
or
test
push
jg
jnp
test
and
sbb
pushf
xor
ret
and
nop
sbb
inc
inc
movsl
fistpll
ret
xchg
call
sub
int
mov
xchg
xor
shrl
add
mov
aas
xchg
jmp
insl
and
rcll
movsl
sub
pop
push
dec
xrstor
scas
pop
loopne
mov
and
pop
aam
cmp
test
pop
mov
rorb
ret
jb
int3
jg
daa
xor
pusha
xchg
pop
das
fimull
mov
out
addb
sbb
jae
movsb
rcr
outsb
aad
pop
andb
je
jo
sbb
mov
sub
fdivrp
xchg
xor
adc
cmp
pop
xchg
loop
test
inc
mov
repz
or
or
jae
xchg
xchg
clc
cmp
in
inc
and
pop
inc
inc
enter
dec
cmpsl
jne
lds
mov
scas
pop
push
add
scas
popf
fisttps
mov
popa
mov
jecxz
repnz
inc
adc
inc
cmp
inc
mov
adc
faddl
test
jmp
dec
std
nop
fwait
mov
jno
mov
leave
scas
mov
and
inc
popf
sti
xor
cmp
mov
out
ret
cmp
jle
cmpsl
pop
sub
add
and
fsubl
xor
xor
add
jmp
mov
mov
mov
scas
xor
lea
xchg
xchg
mov
ja
jecxz
shl
popf
and
dec
xor
push
sbb
cld
fwait
ret
fsubs
sar
insb
pop
lods
testl
out
sarl
jns
stos
dec
stc
ja
in
push
pop
sbb
lcall
in
mov
dec
aad
sbb
aaa
cmp
lea
or
dec
imul
xor
xor
cmp
dec
call
pop
imul
sahf
or
mov
jb
int
add
mov
cmpsl
or
in
sarl
mov
mov
int
adc
and
pop
hlt
daa
sbb
xorb
sysret
jl
outsb
test
dec
mov
mov
pop
mov
in
mov
movsl
insb
ja
dec
mov
push
mov
movsl
cmp
sbbb
jmp
fsub
iret
pop
lahf
fnstsw
jb
bound
mov
mov
orl
imul
mov
sbbl
dec
mov
push
dec
adc
cmp
nop
and
ja
add
mov
and
lods
xor
xor
leave
mov
leave
jmp
pop
cltd
jecxz
adc
mov
testl
movsl
mov
xchg
xchg
pop
jmp
imul
push
sarl
dec
mov
mov
add
in
cmp
scas
cmp
ljmp
pusha
stos
aad
pushf
fwait
imul
jmp
imul
test
inc
dec
mov
dec
rorb
lcall
pop
pop
pop
sbb
outsb
jb
lret
mov
paddsb
loope
mov
shll
inc
push
mov
pop
push
aad
sbb
mov
jns
movsl
mov
movsb
mov
hlt
lods
adc
arpl
sarb
leave
sbb
loopne
adc
je
jno
push
inc
add
dec
leave
mov
insb
or
aam
push
xchg
test
aam
inc
stos
inc
cmp
jg
ja
cmpsb
mov
mov
adc
stos
ret
mov
leave
pop
push
ja
outsb
mov
jo
icebp
sar
leave
jae
push
push
cmpsl
push
jae
or
adc
push
pop
jnp
cmp
xor
cmp
imul
lods
fst
cmp
movl
out
out
cwtl
jecxz
sub
inc
push
inc
test
sbb
daa
lods
les
sbb
mov
sub
xlat
ss
jae
std
cmp
inc
loope
idiv
lea
ljmp
xor
push
sbb
aam
inc
push
cli
jecxz
lea
addr16
mov
push
cmp
xchg
testl
in
cli
insl
inc
fidivs
loopne
push
sbb
scas
inc
push
mov
jp
xchg
lret
outsl
rcll
cmp
push
or
pop
int
cmp
cmp
pop
dec
push
pop
xchg
add
jns
ss
or
ljmp
mov
jae
xchg
in
pop
popa
dec
adc
sbb
inc
xchg
decb
scas
adc
xchg
mov
in
stc
sub
xor
mov
movl
rcrl
or
stos
sbb
cs
pop
jns
sbb
mov
gs
jmp
iret
pop
mov
dec
and
xor
iret
push
and
out
cld
jmp
out
adc
pop
mov
mov
push
mov
in
or
imul
mov
fadd
or
jbe
xor
sbb
mov
push
sbb
aas
out
mov
and
loope
nop
stos
mov
in
mov
les
icebp
xlat
xor
ljmpw
inc
movsb
or
insb
xchg
mov
add
fists
popa
cmp
mov
pop
fsubrs
mov
jmp
cmpl
xor
out
push
pop
mov
sub
inc
les
sbb
cs
mov
cmc
mov
mov
cmpsl
out
outsl
xor
push
jnp
sub
andb
xchg
fs
pop
xchg
jns
jmp
mov
mov
sbb
and
movsb
xor
lods
cmpl
aam
scas
cmp
aas
inc
jle
xchg
lcall
push
sbb
stc
and
or
mov
push
cmovl
shll
cmp
stos
cmc
or
daa
jns
pop
push
pop
fidivrl
fstps
xchg
xor
gs
push
xlat
leave
jecxz
int
and
mov
pop
icebp
xchg
inc
xorl
pop
and
cmp
pusha
sub
inc
je
int
in
cmpb
xor
mov
scas
scas
push
mov
fstpl
popa
fwait
adc
stos
out
mov
flds
fbstp
test
insb
adc
orb
sbb
loop
sbb
mov
cmp
push
add
mov
lcall
lods
sbb
and
imul
add
pop
or
bound
inc
repnz
xchg
inc
push
lods
std
dec
jnp
mov
push
ss
gs
lret
or
fcoml
call
jle
dec
xchg
push
lods
lcall
and
jo
or
arpl
test
sub
jb
adc
and
sbb
push
jp
adc
pop
push
insb
cmp
lock
mov
pop
ss
or
inc
cmp
mov
mov
notl
pushf
pop
insb
mov
xor
mov
pop
push
xchg
cmp
push
loope
xchg
push
push
jmp
xor
cld
inc
insl
sub
xchg
loope
sub
jae
data16
dec
push
mov
shl
movsb
push
push
scas
adc
insl
dec
cmp
aaa
imul
cld
sub
push
inc
into
out
arpl
mov
pop
dec
shrb
je
in
add
pop
and
cmp
xor
jl
or
jnp
mov
jne
mov
repnz
add
xchg
aas
push
pop
popf
cmpsb
xchg
pop
popf
xchg
adc
jp
int3
ja
pushf
add
push
iret
dec
sub
rcrb
inc
sbb
fstl
push
cbtw
or
inc
dec
dec
or
in
lea
mov
inc
cmpsb
add
xorl
sbb
sbb
ss
mov
sti
and
roll
in
in
aam
dec
rorl
lods
xchg
mov
insb
repz
jmp
add
sub
neg
stc
int3
dec
inc
xchg
jecxz
push
mov
pushf
aas
enter
bnd
icebp
arpl
mov
mov
sub
or
sbb
jp
filds
cmp
mov
push
stos
mov
or
test
mov
in
idivb
sub
call
pop
movsl
mov
call
xlat
mov
sbb
or
fwait
jo
adc
dec
cwtl
mov
adc
ret
fdivrl
in
xor
in
leave
ja
callw
pop
and
pop
movsb
loope
cwtl
repz
je
mov
push
xor
dec
push
pop
fstpl
mov
sahf
inc
jl
xchg
shll
fcmovne
cmp
mov
jge
xlat
sub
test
xlat
inc
push
nop
mov
jnp
xor
nop
cs
mov
dec
clc
mov
mov
xlat
add
or
inc
lcall
push
out
cmp
add
sub
push
dec
ljmp
sti
add
push
mov
mov
inc
xchg
cld
pop
repz
inc
xor
lahf
jmp
ljmp
mov
xchg
out
mov
xor
pop
popa
cmp
dec
outsl
and
add
sub
lret
repz
adc
pop
cli
ret
cli
cli
xchg
in
sbb
arpl
cmpsb
dec
push
fisttpl
xor
xor
pushw
sub
xor
xor
add
lds
sbb
dec
sub
pop
sbbl
sbb
ror
daa
jl
repz
lret
outsl
popf
addr16
xchg
in
jle
imul
gs
cli
sub
dec
lret
or
sub
jge
jge
aad
jge
jle
mov
jmp
mov
mov
inc
test
out
xchg
mov
or
cmp
fcomp
xchg
push
je
jmp
inc
sub
xchg
xchg
sbbl
jno
sub
loope
nop
push
cli
fwait
jo
jg
push
inc
jecxz
cmc
jle
cmp
ljmp
loop
or
and
outsb
test
inc
add
stos
xlat
pop
mov
inc
out
icebp
cmp
outsl
scas
insb
mov
adc
or
insl
xor
mov
push
jmp
mov
add
or
mov
lea
cmpsb
push
dec
bound
inc
mov
xchg
push
pop
jo
jge
xlat
enter
icebp
or
mov
inc
data16
cmpb
push
fiaddl
jns
inc
fisubl
pop
test
push
and
mov
or
or
mov
add
sbb
adc
mov
xchg
add
and
das
adc
pop
jo
inc
pop
leave
daa
ret
mov
sbb
lock
jg
jno
ret
mov
std
adcb
adc
jmp
push
iret
ret
push
sub
inc
stos
mov
rolb
aad
mov
xor
cltd
fwait
push
xchg
int3
mov
or
adc
mov
xor
les
pop
popf
add
std
ljmp
mov
mov
jge
mov
add
imul
lods
pop
sub
outsl
sbb
sub
xor
repz
std
inc
adc
inc
mov
push
adc
mov
push
popa
mov
pop
lea
sub
xchg
pop
dec
push
adc
push
imul
dec
push
and
cld
jns
pop
test
jp
xor
or
cmp
inc
mov
pop
out
pop
dec
push
push
loope
rcrl
push
dec
sub
mov
scas
rclb
cmp
jp
xor
je
cmpsl
into
scas
cli
pop
mov
enter
decl
in
jmp
mov
js
int
sub
pop
push
mov
inc
cltd
or
xor
stos
in
data16
inc
mov
pop
push
nop
jle
inc
aas
push
in
sub
mov
rclb
pop
inc
aad
idiv
adc
cmc
sbb
and
lods
stc
pusha
push
sbb
adc
mov
cmpsb
add
arpl
out
cmp
filds
fsts
sub
xor
loopne
push
jg
add
pop
movsb
fwait
or
jg
xchg
enter
sub
repnz
add
int
push
sar
ljmp
cmp
mov
insb
in
xchg
ljmp
mov
clc
test
into
cmp
and
arpl
and
cvtpi2ps
enter
jmp
leave
cltd
fsubl
movsl
sbb
into
clc
jecxz
in
xchg
lcall
rolb
scas
js
imul
cmpsl
ret
jb
test
sti
add
dec
testl
or
xor
in
add
push
mov
cltd
sti
aad
fs
dec
hlt
cmp
imul
outsb
dec
gs
cmp
lods
sbb
jo
insb
xor
call
testl
pusha
js
in
xchg
jo
sub
ja
dec
flds
xchg
ret
push
jge
mov
mov
mov
dec
push
cmp
and
or
jg
sbb
rol
jl
adc
push
mov
lds
cmpsb
fistpll
shl
mov
jno
mov
lods
ds
ss
popf
mov
inc
rorl
fldt
pop
in
lds
push
xchg
or
test
ret
cmp
cmp
mov
sbb
adc
repz
cli
lock
push
inc
popa
cmpsb
jbe
xchg
stos
adc
or
mov
dec
mov
js
jne
xchg
jp
cmp
cmp
cmp
mov
jnp
mov
and
jmp
fisubrs
cmp
shlb
in
add
xchg
mov
mov
xchg
subb
pusha
aaa
push
das
pop
aas
shrb
lret
xor
dec
test
xor
xchg
inc
jae
sub
xor
jno
inc
hlt
mov
cli
mov
popl
push
pop
aas
or
and
into
das
xor
jbe
pop
addb
pop
loope
xlat
mov
sbb
xchg
push
fldln2
aas
xchg
push
add
loop
pop
xor
les
out
mov
jns
das
jge
mov
add
sub
xlat
rorl
pushl
stc
push
outsl
push
aam
or
push
adcl
mov
outsb
cwtl
jle
fistl
inc
and
mov
pop
xor
pop
sub
sbb
or
inc
dec
or
and
jp
push
fistl
push
jo
ret
dec
jb
cmpsb
and
cmp
and
sbb
aad
cmp
sbb
pop
scas
jno
sti
add
cmpxchg
stc
scas
sahf
mov
inc
dec
lods
xor
jmp
mov
xchg
pop
adc
mov
sahf
and
sbb
jno
sub
mov
mov
scas
int
ror
mov
aad
add
cmp
or
sti
scas
scas
into
xor
mov
cltd
popf
adc
sbb
data16
pop
insb
movsb
add
movsl
mov
mov
jbe
xchg
add
stos
test
pop
notl
icebp
cmp
pop
icebp
xchg
cmpb
push
push
mov
adc
sbb
out
or
pop
out
mov
in
ja
hlt
sbb
jmp
jp
out
js
lea
dec
mov
call
cwtl
push
cmc
mov
jae
fisttpll
bound
mov
dec
xor
aam
movsb
fbstp
aaa
push
rcrb
xchg
pop
mov
call
cmp
test
or
jmp
in
lret
test
andb
rorb
ret
jns
mov
ret
pop
loopne
popa
xchg
or
xchg
jo
out
adc
dec
movsb
push
das
inc
mov
imul
dec
xor
and
xor
or
add
mov
xchg
sahf
jle
leave
push
or
mov
mov
cmp
jg
cmpsb
mov
popf
push
mov
insb
rorl
into
aam
imul
aam
jne
cwtl
mov
push
xchg
mov
fistl
jg
adc
movsl
jnp
ret
add
in
ror
cmc
loop
xor
lods
fldt
add
fs
dec
adc
rorb
sahf
pop
stos
fwait
test
jae
sbb
shrb
repz
or
cmp
xor
xchg
ret
xor
ret
mov
push
imul
push
adc
das
lds
mov
push
mov
popf
js
loopne
repnz
iret
add
adc
je
dec
pop
popa
pop
imul
sbb
ret
rcr
mov
daa
mov
adc
in
cmp
pop
mov
cmpb
sbb
jl
hlt
sub
pushf
lahf
addr16
cmp
ss
cmpb
xchg
dec
mov
xor
mov
aaa
in
out
xlat
jae
int
sbb
lcall
jo
scas
pop
lret
lret
xor
rclb
fcomp
sub
bound
out
sahf
xor
mov
dec
inc
mulb
dec
mov
sahf
loope
fmuls
andb
adcb
push
xchg
pop
mov
or
push
mov
add
scas
mov
or
jo
das
scas
ljmp
add
lods
and
test
aaa
mov
mov
dec
jns
lcall
loope
sub
adc
lock
jb
or
jge
pop
scas
pop
or
pop
mov
ds
pop
and
sub
lds
outsl
mov
push
xchg
inc
push
mov
mov
cmc
movsb
or
fidivrs
cmp
lret
mov
xchg
stos
jle
sbb
mov
es
or
jp
cmp
out
mov
shll
mov
adc
cli
xchg
inc
call
into
fnstsw
adc
sbb
jmp
sub
cmp
add
jp
xchg
ja
cmp
movsb
mov
or
sbb
stos
inc
jl
in
mov
es
movsl
pop
popf
int
icebp
filds
fcoms
jl
cmp
sbb
outsl
sub
push
dec
sti
cmp
addb
ljmp
mov
xchg
movsl
mov
ja
push
mov
or
push
lret
fsubs
pop
mov
rcl
sbb
jo
cmpsb
test
mov
scas
imul
jp
xor
mov
jmp
sbb
insb
xchg
mov
xchg
shrl
fcmovnbe
xchg
jns
mov
mov
in
adc
jge
adc
dec
inc
pop
xor
cmp
xor
sub
inc
mov
stos
fidivrs
jno
mov
pushf
push
ret
stos
inc
or
test
xchg
jl
push
sub
xchg
cltd
sbb
push
frstor
inc
movsb
arpl
dec
clc
inc
mov
cmpsl
rcrl
gs
sbb
jmp
decl
popf
mov
mov
les
pop
push
and
test
gs
adc
jnp
pusha
leave
jne
das
dec
sub
add
imul
sbb
cmc
mov
out
divl
fwait
ret
xchg
bound
lret
scas
add
push
cmp
daa
cmp
jecxz
loope
pop
fstl
aas
leave
pushf
int
mov
aad
lock
loop
pop
shrb
cmp
stos
add
adc
push
jnp
in
mov
or
fstpt
add
loopne
xchg
cltd
xchg
andb
loope
dec
jb
and
jb
jle
test
push
adc
sbb
sbb
enter
fnstcw
cmpsb
popa
andb
aad
cmp
lea
sbbb
add
jnp
pop
pusha
loope
loop
mov
and
push
mov
inc
aad
or
fincstp
xchg
inc
dec
pop
repnz
cmp
lds
mov
xor
mov
inc
pushf
repnz
test
and
sbb
xor
sbb
mov
pop
mov
pop
cmp
imul
and
or
negb
sub
in
adc
sahf
xor
inc
lcall
gs
jg
or
nop
pop
add
mov
jmp
mov
push
decl
mov
mov
mov
adc
add
push
and
aas
add
pop
lock
xchg
jo
pop
xchg
adcl
mov
inc
push
sbb
adc
ret
sub
ja
fidivl
cmp
daa
aad
cmp
fldenv
mov
fs
idivl
sbb
testb
arpl
imul
sarl
leave
mov
sar
adc
das
cwtl
jnp
sbb
mov
mov
inc
mov
mov
pushf
notb
fwait
imul
fprem
mov
inc
and
lods
push
dec
xor
sub
mov
mov
xchg
movsb
adc
jecxz
hlt
mov
in
lods
jo
and
stos
sbb
iret
popa
mov
cmp
inc
out
inc
imul
cmp
sbb
nop
and
and
xlat
pop
xchg
inc
push
clc
fwait
mov
xor
and
loop
pop
iret
in
out
lret
mov
inc
cmp
adc
movaps
popa
and
add
adc
movsb
sbb
outsl
xor
sub
or
loopne
and
push
xchg
push
push
mov
movsb
cmpsl
out
and
sub
scas
icebp
mov
aaa
notb
mov
sti
xchg
adc
lret
scas
stos
add
mov
aas
xchg
sub
push
mov
jmp
cmpsl
mov
scas
mov
fs
fidivrs
inc
out
enter
cwtl
dec
pop
addb
and
adc
lret
int
sub
sbb
popf
scas
sub
xchg
loop
pop
mov
clc
sbb
cs
rclb
mov
fnstenv
jo
push
fstpt
mov
lea
sub
pop
cmp
push
cmp
lret
sahf
rorl
sbb
mov
push
mov
jnp
jb
out
pop
pop
sbb
dec
cmpsb
cmp
fwait
push
into
mov
jmp
mov
and
test
push
jb
adc
int
rorl
pop
mov
out
push
stos
pusha
out
pop
adc
xor
daa
imul
roll
xchg
inc
jo
and
inc
repz
in
call
xchg
pop
cmp
xchg
lahf
lcall
sbb
lds
notl
inc
jns
sub
mov
or
ss
lcall
fsts
dec
fcmovnb
inc
cmpsl
jnp
int3
cltd
lock
aas
jecxz
or
imul
int3
das
push
and
jo
xor
add
push
and
xchg
push
out
mov
stos
iret
js
pop
push
or
lods
shrb
mov
cmp
inc
or
add
in
lock
out
inc
lcall
add
sbb
cld
lock
cltd
cmpsl
icebp
add
lods
mov
icebp
setge
dec
push
mov
push
pusha
push
fisubrl
sarb
sub
loopne
adc
jne
cmp
push
lods
pop
sbb
sub
cmp
mov
cmpsb
shll
cs
xchg
mov
arpl
ja
dec
mov
fbld
cmp
fisubrl
xor
div
inc
xchg
call
sbb
out
in
in
xchg
in
fidivl
and
lahf
xor
roll
pop
test
stc
int3
sub
inc
xor
or
xorb
out
inc
xchg
lods
xlat
sbb
dec
mov
mov
out
into
jle
add
das
xor
loope
and
mov
push
jnp
fisttpl
or
mov
jmp
mov
andb
jmp
mov
sub
int3
inc
add
rorl
dec
int
mov
adc
mov
pop
fcompl
in
lcall
call
rol
fisubl
pop
iret
mov
pop
adc
dec
rolb
cmp
lds
or
sub
lahf
push
lcall
pop
cld
loope
cmc
cwtl
mov
imul
sub
adc
stos
fsubrl
in
popf
sarl
repz
das
xorb
stc
ficompl
roll
mov
repnz
sahf
jmp
push
jae
ja
mulb
andl
jo
loope
mov
hlt
fisubl
mov
repz
int3
pop
stos
push
jbe
mov
dec
sbb
sub
leave
push
ficoml
add
xchg
outsl
lret
pusha
push
shrl
adc
add
stos
enter
mov
mov
jl
xor
pusha
mov
inc
outsb
pusha
jne
xchg
hlt
aad
jb
cmpsl
mov
int3
stc
push
jmp
mov
adc
jno
lods
jns
push
dec
push
mov
outsl
jns
sti
add
mov
or
stos
aaa
jmp
loop,pt
adc
inc
push
jb
sub
mov
mov
mov
cmpsl
fnsave
ret
lods
ror
mov
mov
dec
jge
dec
fs
cmc
adc
jle
fwait
adc
jns
outsb
cmpsb
int3
in
add
xchg
test
push
inc
les
scas
xor
shll
and
jmp
jae
add
push
add
push
cmp
sbb
ret
or
aas
mov
out
push
shrl
in
sub
and
mov
dec
jne
jne,pn
pop
fnsave
mov
mov
stos
in
test
xchg
scas
mov
arpl
xchg
add
push
xor
push
sub
xlat
inc
outsl
fsubr
aam
sbb
aad
daa
inc
ss
test
or
cmc
pop
je
sbb
pop
and
jae
dec
xlat
xchg
mov
cmp
lea
xor
flds
cmp
mov
sub
dec
add
fsincos
inc
aaa
lods
dec
jne
movsb
xchg
shll
add
adc
inc
add
xchg
mov
and
adc
lds
movsl
fwait
mov
mov
push
mov
xor
mov
fs
mov
lret
mov
xor
movl
lds
push
dec
jo
dec
mov
roll
mov
jmp
mov
mov
data16
icebp
mov
or
sbb
adc
push
adcb
sbb
sar
sti
cmp
adc
in
sub
adcl
repz
mov
mov
repz
mov
inc
outsl
dec
mov
ljmp
jae
dec
cld
mov
sbb
push
push
dec
shll
sub
push
daa
scas
add
xor
stos
pop
sahf
es
mov
and
xor
xor
add
insl
rcl
scas
adc
shll
xchg
adc
jno
mov
mov
xchg
nop
cld
jno
lahf
xchg
popa
and
cli
lcall
cltd
adc
mov
xchg
shll
push
sbbb
pop
scas
jp
hlt
adc
mov
mov
adc
and
jnp
xor
mov
xchg
xchg
xchg
mov
icebp
xor
push
enter
sbb
dec
sti
lahf
lcall
daa
xchg
lods
xlat
lcall
bound
sbbb
lret
sbb
mov
insl
scas
mov
adcl
inc
hlt
popf
jb
push
movsl
fwait
aas
jmp
fwait
iret
test
mov
test
jae
js
cli
hlt
push
test
mov
outsl
gs
negl
add
dec
mov
adc
push
test
xchg
outsb
pop
mov
mov
pop
in
mov
loope
mov
out
adc
ret
xor
inc
ljmp
test
cmp
ja
jo
sub
and
aad
xor
lock
mov
pop
jb
mov
sti
scas
cli
jae
ds
mov
ja
mov
sub
push
sub
push
or
div
push
push
add
mov
shlb
lods
inc
cli
popf
jge
or
scas
mov
test
dec
sbb
xchg
pop
pop
lret
shrl
xchg
sub
pop
and
inc
or
dec
lahf
pop
iret
xor
out
pop
mov
add
dec
into
call
sub
xor
pusha
idivb
jns
mov
or
inc
test
cmp
xchg
jp
pop
jb
nop
jo
div
mov
xchg
into
sbb
xchg
out
iret
std
xor
lcall
mov
popa
and
push
sbb
sub
iretw
mov
data16
int3
fs
xor
test
push
and
pop
cmp
lock
push
in
leave
sbb
and
cmpps
lds
push
mov
push
ficompl
cmp
lods
push
cli
pop
imul
cmpsl
imul
cmp
jns
call
stos
push
ss
mov
aad
xor
jg
out
stos
xchg
les
jne
in
cmp
adc
cmp
mov
inc
fidivrl
call
aaa
xor
sub
int3
sbb
inc
fadd
cmp
push
jl
insl
dec
pop
aad
pop
pop
or
fdivl
stc
lret
lret
imul
imul
loop
push
arpl
js
and
jg
ret
push
je
cltd
stos
xchg
pop
sti
inc
leave
jnp
push
xorl
mov
cltd
cmpsl
test
jnp
repnz
mov
sub
in
cmp
and
test
mov
std
pop
push
xchg
scas
mov
add
and
lods
adcl
xorb
sub
test
jge
std
add
out
mov
dec
xchg
lahf
lcall
test
mov
fisubrs
sbb
bound
cs
fmul
and
and
add
incl
xor
push
lods
std
in
scas
sub
mov
push
popf
xor
push
int3
dec
idivb
or
mov
mov
mov
hlt
mov
jl
jno
pop
mov
ficoms
and
call
dec
sub
push
pop
jno
cmp
inc
rolb
xchg
adc
ljmp
cld
adc
adc
dec
aam
mov
pop
ja
inc
add
mov
cs
aaa
in
shll
and
ss
lcall
pop
orl
std
inc
mov
insl
aas
mov
xchg
pop
dec
or
out
faddl
les
pop
xchg
push
jbe
out
inc
dec
xchg
sti
jg
cld
pop
push
xlat
mov
out
add
cmpsb
push
nop
and
rcll
negl
xor
add
xchg
mov
repz
mov
dec
dec
shll
pop
or
jo
cld
popa
insl
push
cmpsb
leave
cli
stos
mov
daa
jge
mov
test
cmpsl
loop
pop
or
cmc
outsl
xor
aam
data16
sti
xor
xchg
decl
mov
subl
sub
aad
faddl
sub
sbb
lahf
ret
mov
xchg
aas
sub
mov
mov
push
push
mov
or
lcall
add
lcall
cmp
sub
cmc
ja
push
push
ss
test
popf
daa
push
inc
sbb
addr16
ds
push
fcmovb
inc
add
hlt
mov
outsb
inc
clc
pop
adc
sbb
out
add
inc
push
xlat
cli
push
sbb
in
jnp
popa
xchg
xchg
sarb
or
int
jecxz
adc
xchg
sub
loope
push
mov
pushf
mov
and
scas
ret
je
mov
push
shr
sbb
mov
.byte
arpl
.byte
