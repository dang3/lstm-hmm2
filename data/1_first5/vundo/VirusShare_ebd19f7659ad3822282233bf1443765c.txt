add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
popf
xor
shrb
xor
jne
lret
lods
dec
add
add
add
add
add
push
pop
jae
inc
add
dec
add
add
add
add
cld
add
add
add
add
add
mov
add
add
add
add
add
roll
dec
add
add
add
push
add
add
add
cltd
add
add
add
or
bound
jne
roll
dec
add
add
add
add
mov
add
roll
iret
add
add
add
add
add
add
roll
adc
insl
add
add
add
mov
add
add
add
add
add
add
add
add
add
roll
add
mov
add
roll
push
add
add
roll
push
add
add
roll
inc
add
addl
mov
add
add
add
add
mov
add
add
add
push
add
add
add
add
add
pop
add
add
push
add
add
add
add
xchg
add
add
xchg
add
add
push
add
add
add
add
jle
or
inc
add
dec
add
dec
add
add
add
add
add
add
add
adc
roll
roll
xchg
add
add
das
add
add
mov
add
or
adc
sbb
outsb
add
filds
or
or
xor
cmp
jo
aas
add
add
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popl
ljmp
add
add
add
addl
add
add
into
add
jno
inc
add
add
addl
test
or
jae
les
adc
sbb
roll
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
jl
roll
pop
add
add
xchg
add
add
add
xchg
add
add
add
pusha
add
add
add
add
or
roll
out
add
add
add
pop
add
add
push
add
mov
jno
or
gs
add
add
add
add
roll
adc
xchg
add
cltd
add
add
and
mov
push
add
pusha
add
add
add
add
xchg
pop
add
pop
add
add
add
dec
add
sbb
fadds
cli
add
add
add
xchg
test
pop
add
add
jo
xchg
add
add
add
incb
roll
str
add
roll
pop
add
add
pusha
add
add
add
add
add
add
add
add
add
adc
stos
add
add
add
add
add
add
add
imul
add
int3
add
lock
roll
int3
add
add
add
add
add
pop
add
add
add
add
add
add
icebp
add
add
add
add
out
add
cmp
dec
add
add
mov
add
jne
stos
add
add
faddl
inc
add
add
or
enter
inc
insl
out
dec
outsb
xor
jecxz
popf
je
hlt
mov
mov
mov
lds
mov
pop
sbb
lods
adc
and
aam
dec
fbld
pusha
stc
or
xchg
push
hlt
rcr
inc
push
mov
fbld
je
fldcw
loopne
shlb
shrl
inc
jo
cmp
jne
cmp
addr16
xchg
lret
xchg
mov
pop
dec
pop
pop
jg
cmpsb
aas
ja
das
fcoml
push
jecxz
inc
fdivrl
jo
adc
add
test
mov
lea
pop
shrl
push
jecxz
dec
push
or
xchg
lods
in
mov
and
dec
call
and
add
mov
lahf
daa
mov
aaa
sbb
push
clc
fisubrl
add
movsb
adcb
pop
push
pop
movsl
mov
fisubrs
adc
mov
lret
push
jnp
push
enter
sbb
mov
mov
insl
cmp
ljmp
stos
fidivrl
inc
ss
fidivl
mov
scas
lock
subb
test
inc
dec
fwait
jbe
jae
fsub
ret
iret
or
aaa
int
imul
std
cmpsb
push
cmpsl
scas
movsl
cmp
repnz
adc
jno
ds
imul
mov
cmp
mov
add
sub
stos
std
jo
push
xchg
stos
mov
jg
push
inc
mov
std
mov
sub
push
mov
sahf
cltd
mov
cwtl
or
push
mov
dec
insl
mov
stos
fidivs
les
inc
jl
mov
addr16
jle
mov
pusha
loopne
dec
jecxz
dec
lock
and
das
lahf
ss
neg
xchg
clc
cmp
mov
mov
add
cmp
or
mov
lds
in
movb
or
xchg
mov
rcl
ljmp
mov
imul
dec
out
push
push
fucom
out
popa
jl,pn
loope
pop
mov
mov
daa
and
push
sbb
mov
repz
call
lds
push
popa
push
imul
mov
es
push
nop
loope
cmpsb
ret
int3
loop
ret
push
xor
loop
leave
call
xor
rcr
or
lds
xchg
cli
cld
add
ret
out
in
sbb
sbb
inc
cmp
push
lock
js
fnsave
push
sbb
add
cmp
out
aad
adc
mov
mov
or
roll
jp
aas
push
or
cmp
fdivs
mov
sbb
lss
jmp
inc
icebp
jl
daa
ret
pop
cmpsb
jne
pop
mov
push
loope
push
and
popf
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
or
push
sub
jbe
daa
ss
push
je
mov
cltd
sbb
stc
cmpsb
stc
mov
inc
sbb
cmp
push
pop
push
imul
cltd
test
test
xchg
jmp
loopne
nop
xor
and
push
ss
pop
jno
jns
nop
mov
test
aad
lock
scas
shlb
jbe
sub
pop
out
test
mov
sub
movsb
loope
rcrl
xor
std
mov
xchg
push
adc
popf
in
fldlg2
leave
or
mov
push
sbb
cltd
xchg
leave
leave
jmp
cs
fidivrl
jg
mov
fucomp
loop
mov
xchg
out
or
jne
push
jb
jno
inc
or
bound
es
out
mov
pushf
sbb
ss
fstps
bound
lret
xchg
stos
movsb
and
mov
mov
pop
subl
cmc
jmp
test
mov
pop
in
push
jno
jbe
adc
aam
jmp
shr
dec
stc
fadd
lret
sub
cmp
push
dec
push
imul
cmpl
mov
stc
test
jl
dec
or
cmp
jns
mov
fstl
fwait
rclb
inc
adc
pop
inc
imul
mov
leave
leave
mov
lahf
ret
popf
lds
mov
or
add
push
imul
cltd
test
xchg
xchg
jmp
inc
sbb
cmp
push
pop
push
imul
cltd
test
xchg
xchg
jmp
inc
add
popa
sub
inc
inc
jb
dec
int
stos
test
add
dec
fnstcw
mov
and
mov
loop
xchg
je
mov
mov
rclb
or
ljmp
push
out
movl
mov
sub
xchg
jne
enter
or
sbb
das
sbb
ror
test
aam
ljmp
mov
push
inc
mov
fucomip
push
pop
cmc
int
sbb
push
rorl
repnz
mov
loope
xorl
iret
xchg
adc
inc
lret
cmp
lcall
popf
sub
les
mov
lcall
xor
sbb
cmp
icebp
enter
push
fistps
pop
fildll
or
cli
mov
aam
cmp
int
les
xchg
push
mov
mov
pop
addr16
dec
rcl
sbb
sub
cmp
adc
rclb
push
push
mov
mov
cmp
test
dec
ds
add
lahf
xor
pushf
cmp
push
jbe
lea
jge
pop
int3
clc
nop
xor
push
lods
mov
xchg
aas
lea
add
xorps
jle
mov
lcall
lds
ret
mov
pop
jb
dec
in
popf
mov
rcll
pusha
xlat
xor
or
or
fs
rolb
xlat
push
orl
testb
cmc
ja
das
inc
shr
mov
inc
dec
leave
test
mov
inc
std
push
mov
mov
jl
add
or
jno
inc
push
jne
out
jg
jp
lds
pop
les
xorb
adc
cwtl
push
lret
add
cmc
mov
mov
fwait
int3
dec
call
nop
loope
dec
cld
hlt
movsb
or
mov
add
cmp
adc
sbb
lds
ret
mov
scas
mov
jae
cmp
pop
fisubs
je
aad
test
fbld
pop
push
mov
mov
in
ss
cmp
adc
mov
add
mov
cwtl
dec
mov
push
sub
push
sub
ss
jmp
pop
pop
xchg
outsb
icebp
xor
out
pushf
jecxz
iret
int3
lds
cmp
je
in
sub
fdiv
call
sub
in
pop
cltd
add
sar
out
sarb
pop
inc
mov
fisubrs
and
xchg
pop
ljmp
inc
inc
stc
push
mov
pop
add
lods
repz
add
mov
paddq
in
jp
adc
pop
xor
testl
insl
mov
and
into
rcrl
shl
jmp
insl
icebp
dec
js
loop
lret
and
sbb
scas
mov
mov
out
sub
loopne
das
fldt
jp
inc
inc
enter
dec
sub
fmull
icebp
jg
inc
push
cld
mov
mov
add
push
dec
jecxz
inc
mov
cli
rclb
mov
das
jae
mov
add
movl
push
faddp
rcrb
aam
testb
fistps
cmp
lret
cmp
jle
push
into
xchg
fcomps
je
das
fs
xchg
push
out
scas
mov
addr16
je
mov
stos
inc
add
inc
mov
sbb
mov
rcr
shlb
jo
xchg
dec
cmp
outsl
test
sbb
inc
fldt
push
or
clc
inc
dec
leave
fidivl
adc
mov
mov
mov
out
push
adc
pop
mov
out
aad
and
lods
add
mov
sbb
int3
jmp
test
mov
pop
lahf
or
push
loop
sbb
xchg
pushf
xchg
std
sbb
xchg
and
push
jle,pt
aad
sbb
lret
pop
js
jg
pop
clc
pop
mov
adc
repz
lret
iret
mov
scas
shrb
inc
cmp
jle
pushl
jl
int
push
mov
cmp
mov
mov
test
cld
gs
xchg
jle
mov
cwtl
loopne
jp
outsl
mov
repnz
xchg
cmp
mov
mov
or
popa
js
and
xor
fstpt
fldt
mov
dec
aaa
push
dec
insb
adc
mov
daa
lret
add
jge
mov
sub
dec
int3
mov
mov
adc
sbb
pop
dec
xor
push
cwtl
sub
adc
dec
out
or
inc
inc
lock
stos
jb
xor
lods
jnp
xlat
mov
cmc
in
add
jmp
enter
adc
add
push
int3
into
sub
or
mov
pop
push
push
adc
sti
xor
and
cld
cli
xchg
jp
dec
adc
pop
pushf
mov
fldt
mov
add
push
and
jmp
xor
sub
or
sbb
enter
lods
scas
iret
cmp
mull
cmc
shrb
push
jo
movsl
xorl
fmuls
add
adc
jb
test
sarl
inc
dec
test
sbb
or
imul
dec
add
cmp
cwtl
inc
enter
jl
push
test
or
xor
stc
in
test
shl
shrl
dec
in
ja
sti
or
xchg
fimuls
jle
xor
int3
sti
ret
push
rclb
add
mov
sub
sbb
jmp
jl
dec
aas
andb
out
adc
pop
and
arpl
push
sahf
cwtl
les
dec
and
int3
add
in
cmpsb
data16
xor
mov
ljmp
clc
xchg
mov
and
loop
scas
dec
adc
fs
lahf
stos
push
mov
dec
mov
jg
lods
clc
nop
lret
repnz
pop
loopne
jb
into
inc
mov
ljmp
mov
sub
movsl
cmpsw
std
dec
ffreep
fmulp
mov
lock
hlt
jo
xor
mov
or
add
push
add
and
and
movsl
cld
adc
push
rcrb
daa
add
push
dec
pop
ljmp
and
mov
xchg
dec
pop
sub
loop
or
or
add
dec
es
mov
xchg
jno
insl
jg
enter
cs
sub
je
inc
icebp
mov
xchg
mov
adc
lret
push
in
inc
aas
lcall
add
jno
inc
xchg
aas
jns
sub
stc
das
pop
rcll
jecxz
cmpsb
clc
pop
jp
mov
mov
push
sub
mov
arpl
jecxz
sbb
sti
insb
xchg
fisttpl
in
cmpsb
pop
and
cld
xchg
jbe
je
xor
lret
sbb
push
cmp
fwait
lds
mov
mov
adc
ljmp
stos
out
in
addr16
lock
sbb
out
xor
cmc
pop
or
nop
add
mov
pop
loop
mov
sbb
lret
pop
mov
jo
cli
push
adc
lds
dec
xor
jmp
hlt
testl
sub
jge
outsl
rcl
and
add
mov
sub
fmul
out
adc
rorl
inc
push
mov
sarl
lcall
and
xchg
aaa
sub
repnz
dec
inc
mov
popf
sbb
mov
push
mov
pusha
iret
pop
mov
lret
loopne
mov
lods
mov
pop
daa
das
mov
xor
test
jmp
sbb
inc
mov
adc
mov
test
rcll
dec
insb
fbstp
and
pop
loope
sahf
imul
push
roll
in
movsb
or
aam
xlat
icebp
gs
loop
inc
test
adc
aas
popf
lods
gs
mov
jo
pop
repnz
test
xchg
inc
test
sub
xor
data16
fs
pop
dec
mov
sub
mov
scas
jno
imul
push
xlat
rolb
and
jae
cmp
xchg
adc
repz
pop
mov
in
dec
dec
lahf
icebp
ss
and
pop
mov
divl
jo
mov
xor
out
out
xor
or
loope
dec
xor
ss
or
stos
fldcw
nop
mov
insb
scas
int3
into
pop
ljmp
shrb
add
adc
idivl
mov
jle
inc
adc
jge
mov
lahf
or
mov
stc
sbb
inc
jno
mov
dec
scas
subb
mov
pop
out
je
jl
push
xorb
sarl
fstl
jo
cltd
push
cmp
out
push
divb
cltd
stc
popa
mov
dec
mov
fildll
dec
stc
push
cwtl
aad
clc
subl
xchg
dec
mov
outsb
add
cmpsb
cmpsl
in
je
or
mov
cld
js
push
jle
shrl
sub
push
in
cld
fs
jne
stc
mov
inc
or
sub
inc
or
lea
jne
int
ror
pop
out
sete
pusha
or
cli
fsubl
inc
pop
dec
and
ljmp
lock
dec
push
dec
outsb
les
push
lods
sbb
pop
stc
jecxz
jnp
out
outsl
xchg
push
mov
xchg
inc
add
outsb
lret
mov
stc
add
lret
and
in
call
cwtl
movsb
push
xchg
mov
mov
xchg
adc
sub
in
and
mov
ret
adc
insb
mov
movsb
inc
dec
jecxz
rol
jp
ljmp
push
lahf
ficoml
xchg
stc
icebp
mov
ja
xor
jl
xlat
inc
fsts
mov
xchg
jno
cwtl
out
mov
mov
push
xchg
dec
lods
divb
mov
pop
cs
xor
cwtl
aam
and
mov
sub
aas
jp
inc
jo
std
dec
ret
fmul
mov
pop
adc
ror
push
inc
jns
notb
jb
outsl
mov
scas
lods
mov
add
cwtl
orl
stos
test
lcall
adc
and
cmp
popl
test
mov
ret
adc
pushf
sti
cmp
ja
movsl
int3
test
or
sbbb
or
or
push
sbb
inc
andl
in
mov
xchg
std
push
mov
sbb
jae
pop
or
sbb
mov
or
dec
dec
xor
inc
xor
sbb
idiv
dec
pop
jp
test
aaa
push
ret
addr16
data16
jg
push
hlt
fisttps
subl
and
cli
and
movb
in
insl
xor
imul
rorb
outsb
stc
test
rclb
jmp
mov
sub
mov
dec
jns
sub
cltd
jns
mov
sbb
pushf
jle
subl
jmp
inc
inc
mov
sti
push
lret
jae
imul
inc
mov
jno
leave
or
sub
push
repz
stc
sub
lds
and
sbb
dec
xor
adc
dec
pop
jmp
adc
loope
inc
mov
icebp
mov
and
jl
cmp
dec
fidivrl
cmovg
pop
mov
dec
fwait
pushfw
cmp
sub
adc
xchg
inc
cli
mov
fstpl
or
dec
ja
dec
jne
xchg
xchg
lods
jae,pn
sbbb
inc
icebp
push
clc
xchg
mov
dec
mov
jb
lds
push
sub
pminsw
and
inc
lea
sub
cli
or
sub
push
cld
lods
pop
jp
fsubs
jl
mov
add
mov
ficoml
sub
mov
cmp
and
pushf
add
subb
adc
call
hlt
adc
sbb
pop
jne
lcall
mov
jecxz
cmp
sbb
icebp
into
adc
pop
cmp
repnz
or
xchg
pop
addb
aam
sbb
adcb
jge
adc
ljmp
xor
sarb
andl
add
jo
ljmp
loop
outsl
ljmp
je
mov
jmp
rol
mov
mov
mov
add
shll
fistps
jp
nop
and
jae
mov
leave
rcl
jp
jge
pop
cltd
pop
aam
push
and
lcall
and
add
das
ret
fwait
jb
dec
mov
sbb
jns
fcomps
sbb
out
enter
jmp
scas
mov
leave
xchg
out
loope
or
xchg
popf
push
adc
cmp
stos
popa
lods
mov
les
dec
xor
dec
mov
loopne,pt
les
mov
sub
lds
cmp
lods
mov
jecxz
movsl
push
and
xchg
sbb
popf
pop
pop
push
mov
lea
hlt
loopne
jecxz
or
lahf
ficoml
fadds
fnstenv
lcall
cmp
pushf
orb
cmp
fsubrl
out
shll
leave
sbb
adc
mov
aas
and
pop
lods
add
pop
das
mov
xchg
push
int3
cmp
and
mov
jg
cmp
test
xor
stos
add
adc
ds
pop
xchg
pop
roll
mov
loope
lcall
sub
adc
adc
lcall
xchg
push
lahf
mov
loope
cs
adc
pop
fistpl
mov
call
fs
stos
inc
icebp
mov
cmp
rcrb
aam
push
mov
mov
fs
sub
cmp
xchg
popa
rclb
lret
mov
mov
add
fld
fdivrs
out
dec
int
sahf
call
sub
mov
movsl
mull
int
jno
loop
pop
das
ret
repnz
int3
out
cwtl
stc
fstpl
lds
mov
xchg
pop
sbbb
scas
call
mov
mov
sbb
std
gs
loope
add
add
pop
and
into
sub
out
inc
shl
push
jp
mov
icebp
repnz
loopne
cltd
fildl
std
fwait
cmp
mov
push
popa
nop
add
mov
inc
xchg
mov
rcl
scas
mul
sar
mov
cmp
ss
pop
mov
fstl
sbb
decb
filds
aam
xor
inc
call
fidivl
nop
mov
ficoms
add
pop
jo
jns
push
int3
lahf
ret
fstpl
fdivrl
rol
repz
imul
call
in
and
push
jge
gs
add
insl
dec
lods
iret
popa
pop
push
fs
cmp
xor
add
mov
jno
jg
inc
sub
lods
daa
jle
pop
popa
out
cmp
outsb
mov
push
or
mov
pop
in
cmp
in
pop
cltd
push
popf
sbb
fbld
das
in
push
add
inc
cld
mov
scas
xlat
adc
rorb
test
adc
scas
mov
mov
rcrb
int3
outsb
cmc
lret
mov
sub
sti
add
add
push
aad
and
outsl
es
or
mov
lahf
or
lods
in
flds
out
mov
mov
pop
dec
dec
iret
adc
out
sub
xchg
sbb
fnstenv
cmp
mov
lods
ljmp
jae
ja
insl
js
lods
inc
sub
fs
jo
mov
inc
push
fidivrs
xchg
popl
pcmpeqd
enter
push
add
mov
or
jb
sub
in
xchg
fs
and
loope
mov
xchg
mov
push
pop
outsb
xor
mov
lcall
repnz
cmp
adc
jle
bound
outsl
sbb
and
xchg
or
push
in
push
cwtl
inc
mov
add
push
cmp
cwtl
cwtl
push
push
add
mov
scas
push
imul
imul
mov
xlat
xchg
push
lahf
add
mov
into
mov
and
and
test
mov
pusha
mov
mov
mov
sub
lret
push
xchg
adc
dec
jne
and
sub
sbb
fisubs
adc
cmpsl
aad
xor
mov
cmpl
imull
mov
imul
mov
imul
repnz
in
sub
shll
ds
into
shrl
divb
xchg
add
and
pushf
out
insb
aad
mov
rorb
and
cmp
push
mov
loop
int3
out
xchg
pmullw
fiaddl
push
sub
fldcw
or
fiaddl
out
add
inc
ss
cltd
sti
cmc
je
mov
test
and
sub
and
inc
sbbl
jb
xchg
sbb
arpl
out
or
add
ss
mov
outsl
ja
enter
dec
add
out
fwait
es
sahf
es
xchg
insl
xor
or
jno
loopne
hlt
inc
or
sub
fisubs
xor
add
push
fstpt
call
mov
pop
nop
in
cmp
push
jae
and
movsl
jl
xor
movsb
mov
jg
dec
inc
inc
xor
mov
call
cmp
push
fstl
repz
ret
mov
repnz
sub
lock
xchg
fisubrs
mov
dec
icebp
mov
mov
aad
mov
xchg
mov
mov
push
mov
lods
cs
lahf
data16
adc
push
mov
xchg
ret
dec
int
adc
out
loopne
lret
into
cmp
out
push
mov
in
sarb
mov
jns
push
jo
add
insb
or
ficomps
loop
call
push
cmpsb
pop
and
sti
or
adc
loop
cmp
mov
mov
fistpll
dec
imul
mov
add
inc
inc
cmc
or
fwait
adc
sar
aas
jno
inc
xchg
jne
clc
repz
addl
fiaddl
rcll
mov
cli
jecxz
imul
outsl
jmp
jmp
adc
push
push
add
sbb
cmp
test
sti
movsb
stc
cwtl
push
ja
aaa
push
pop
insl
push
push
inc
sahf
xorb
pusha
ror
mov
test
fs
in
or
mov
jle
adc
dec
mov
stos
xchg
cs
adc
rcrb
xchg
pop
sti
add
inc
iret
sub
hlt
out
pop
cmpsl
lods
pop
in
out
mov
jg
sbb
pop
lret
pop
add
shr
popf
jp
loop
cmpl
add
es
or
int
pop
mov
lret
test
out
xchg
js
sbb
mov
push
pop
sbb
clc
inc
sub
outsl
mov
push
mov
xchg
stc
mov
xor
or
jecxz
push
jg
hlt
pop
fisttpl
nop
jnp
andl
adc
cld
pusha
lods
pop
inc
outsb
jns
sub
pop
movsb
dec
fistpll
push
push
dec
fstpt
out
pop
dec
dec
mov
sbb
mov
mov
and
out
xor
repnz
mov
push
or
mov
xor
icebp
dec
lea
and
mov
out
xlat
or
push
xor
lretw
inc
lods
pop
insl
in
test
add
and
das
daa
cli
mov
pop
cmp
sarb
aad
push
movsb
push
inc
adc
jp
cmp
out
js
andb
inc
stc
push
adc
cmpl
popf
jno,pt
ds
hlt
adc
jns
adc
mov
test
dec
jo
mov
xor
scas
or
test
lock
jle
movsl
mov
pusha
xchg
xchg
pop
shll
ret
clc
ret
lea
mov
mov
cmpsl
adc
inc
icebp
and
idiv
fstpt
dec
dec
pop
inc
int
shlb
clc
in
xchg
dec
dec
fdivrs
lcall
fnstsw
lahf
test
mov
lea
xchg
sbb
and
lahf
and
push
dec
pop
aad
mov
les
pop
lods
jl
in
or
enter
loop
jp
mov
cmp
sub
pop
test
adc
push
mov
pop
sub
stos
into
je
shl
mov
jmp
mov
or
cmp
pop
pop
and
push
jne
repnz
repnz
call
and
add
stos
stos
add
mov
add
sbb
mov
xor
mov
xchg
lods
mov
jmp
inc
jns
and
pop
outsb
jmp
outsb
rorb
lods
out
rep
and
jae
stc
jmp
neg
push
jns
mov
cmp
mov
xchg
jp
icebp
outsl
mov
cmp
push
xchg
sarb
aaa
jmp
hlt
shlb
mov
fwait
je
outsb
lcall
in
int3
push
pop
push
and
dec
loopne
test
movsl
stos
fistpl
enter
scas
mov
arpl
jbe
push
pop
push
imul
cltd
test
xchg
xchg
jmp
inc
sbb
cmp
push
pop
push
imul
cltd
test
xchg
xchg
jmp
inc
sbb
jle
jb
push
pop
jge
and
mov
cltd
shrb
sbb
jmp
mov
cmp
dec
push
pop
push
jmp
cmp
add
mov
out
push
fiadds
into
sarb
outsb
mov
jb
dec
mov
orb
mov
out
cmp
mov
insl
mov
pop
lods
dec
fnstsw
int
std
push
in
jbe
decb
into
pop
shrb
scas
jge
insl
mov
or
dec
int
test
rcrl
adc
int
lods
dec
scas
jge
adc
or
push
std
fmull
fimull
push
mov
stc
xchg
out
test
sbb
cmpsb
mov
sti
or
xchg
sub
and
lea
xor
cltd
mov
adc
lret
stos
fdivrs
loopne
int
popf
arpl
ss
pop
pop
test
arpl
xchg
sahf
mov
sbb
fdivrs
cmc
dec
shlb
fcompl
out
lock
pop
adc
mov
xchg
sbb
jo
inc
push
insl
ret
and
movsl
fldl
pop
mov
scas
in
dec
scas
sub
sti
jecxz
dec
or
push
aas
xor
dec
in
cmc
mov
fdivrs
jge
scas
jle
outsb
mov
mov
std
push
push
push
out
lahf
out
in
xor
cmp
sahf
or
out
jp
das
stc
pop
ret
dec
mov
mov
pop
jl
dec
out
insl
mov
and
or
sub
popf
sbb
dec
mov
lods
bound
mov
xchg
pop
lea
shrb
scas
or
sub
out
cmp
sub
push
in
push
sbb
fisubrs
scas
jge
insl
mov
pop
lods
dec
fnstsw
int
std
push
in
push
sbb
fisubrs
scas
jge
insl
mov
mov
mov
out
arpl
mov
mov
cwtl
sub
popa
and
sahf
out
mov
inc
push
arpl
lock
imul
or
mov
or
negb
das
mov
in
inc
pop
pop
push
aaa
ret
stc
cwtl
popf
jp
mov
and
xor
xlat
inc
enter
push
in
fwait
mov
mov
sub
dec
add
out
test
jae
inc
ja
mov
mov
mov
stos
das
mov
in
into
cmc
cmpsl
push
fiadds
je
jp
mov
loop
mov
push
jnp
rorb
and
and
pusha
inc
movsl
js
leave
xor
shrl
in
mov
loop
jmp
fyl2xp1
and
mov
mov
jge
outsb
cmpsl
cli
xor
out
xchg
xor
lock
call
sbb
cmpsl
jmp
sti
test
sti
jmp
fmull
sub
imul
fildl
or
fwait
xchg
adc
iret
mov
jl
out
shlb
jge
sub
cmpsb
xor
shrw
dec
push
movsb
cmp
jne
pop
je
xor
jmp
dec
inc
aam
cld
fwait
mov
xchg
xchg
add
movsb
test
out
push
scas
std
mov
shrb
sub
adc
repz
mov
arpl
inc
or
enter
shlb
mov
fwait
into
outsb
push
xor
jne
push
testb
jp
cmp
shll
hlt
icebp
xor
int
push
xor
xchg
sbb
roll
call
push
ret
add
test
in
inc
sub
call
pop
gs
push
aas
rcr
dec
xchg
int
push
aad
or
outsl
mov
int
sbb
or
clc
inc
cmp
and
pushl
out
jecxz
mov
jl
test
and
mov
inc
cmp
js
cltd
mov
mov
inc
sarl
daa
dec
imul
rolb
aaa
fdivrl
mov
scas
jbe
inc
add
jo
xchg
outsl
loope
adc
mov
test
lods
arpl
cli
sbb
push
sahf
scas
adc
adc
sarb
lea
push
loopne
mov
lahf
jmp
fdivl
pop
ja
push
jno
mov
sbb
mull
lret
mov
pushf
repz
xchg
xor
int
mov
add
xchg
xchg
sbb
cwtl
pop
push
fildl
add
in
sub
int
mov
dec
mov
add
pop
enter
jl
xchg
mov
inc
mov
rclb
lahf
fsubl
mov
mov
sub
dec
ret
sbb
movsb
in
dec
addr16
push
mov
int
sahf
dec
aas
mov
add
shll
dec
sar
mov
push
and
cmp
imul
add
scas
cmp
sarl
imul
dec
pop
push
mov
out
fwait
mov
dec
pop
lods
push
cmpsb
js
test
mov
cmp
sbb
stos
mov
xchg
add
lret
repnz
inc
sbb
int3
fcomps
testl
mov
fildl
pop
jp
fmulp
cli
stos
sbb
or
cmp
or
jnp
jmp
cltd
insb
xchg
push
fs
pop
bound
and
add
scas
fcmovb
add
pop
push
int
inc
sub
ss
inc
jnp
xor
jne
cmpsb
rcrl
push
or
inc
mov
cmc
cmc
out
xor
dec
or
jp
adc
sahf
mov
inc
imul
xchg
rep
dec
inc
sbb
aam
sub
dec
push
push
add
call
jecxz
in
or
sub
sbb
pop
xor
leave
ja
and
bound
or
push
int3
sbb
in
inc
xor
pop
in
clc
lret
aaa
xchg
lret
sti
lahf
in
mov
cmpsb
push
add
in
pop
xlat
pusha
jnp
test
mov
clc
bound
add
ds
bound
outsl
jne
ficompl
xchg
imul
jecxz
out
xchg
mov
sbb
enter
xor
push
jae
push
aam
sub
push
or
pop
inc
stos
enter
jl
push
jmp
ljmp
sbb
inc
aam
sahf
mov
inc
push
and
mov
sbb
jmp
pop
xchg
lret
nop
repz
adc
jl
fidivrs
xor
in
dec
in
xchg
push
test
inc
mov
add
cs
mov
jmp
mov
mov
add
shll
imul
inc
ret
dec
bound
dec
mov
test
lock
cli
outsb
imul
cmp
jbe
cmp
inc
jp
les
push
cwtl
imul
inc
movsl
fmuls
jnp
cltd
inc
imul
mov
call
shl
xchg
jb
sbb
lea
out
sbb
jno
cs
or
push
clc
mov
jbe
dec
cmp
ret
aad
popf
adc
dec
test
xchg
xchg
bound
jp
sbb
loope
mov
jle
aas
dec
push
leave
jecxz
sub
pop
fs
xchg
popf
xchg
and
add
and
inc
sub
jnp
jp
sbb
xlat
mov
jg
xor
lea
insl
imul
push
mov
lahf
std
push
push
out
push
fsubr
pop
dec
add
fstpl
insl
xchg
mov
leave
fcoml
imul
fsubl
imul
cld
pop
or
add
push
cmp
inc
push
or
mov
mov
js
or
orl
sub
push
sahf
stos
xchg
jge
cli
and
xor
dec
dec
jl
ds
mov
or
jl
or
cli
add
mov
mov
sbb
out
shrb
xchg
movsl
fdivrl
cs
lcall
or
add
inc
push
jge
pusha
jns
movsl
cmpb
addr16
in
outsl
jb
mov
cli
mov
pop
orl
fidivs
mov
jae
fsubrp
fwait
mov
add
insb
sub
test
jae
sti
pop
icebp
mov
dec
notb
aaa
mov
test
xchg
mov
push
cmp
clc
lret
outsl
ja
arpl
pop
mov
es
lcall
out
inc
movsl
mov
out
pop
xor
outsl
xchg
in
inc
loop
xchg
movsl
ljmp
push
repnz
xorb
negl
cld
enter
adc
or
frstor
jbe
mov
jg
and
push
inc
xorl
sub
ss
mov
fs
fincstp
scas
movsl
jmp
jbe
in
sub
jecxz
jecxz
pop
ss
ja
popf
mov
sbb
imul
ja
test
pop
orl
jecxz
mov
push
mov
leave
cmp
test
test
push
fnstcw
mov
mov
mov
xchg
js
loope
les
adc
pop
test
ss
jge
mov
adc
imul
movsl
and
push
sub
sub
repz
mov
faddp
xchg
js
imul
inc
xor
cmc
lcall
mov
pop
push
mov
loop
dec
movsb
cmpsl
xacquire
xor
sbb
jg
xor
push
repz
gs
ret
push
leave
adc
adc
and
sbb
jle
push
xchg
cmp
stos
sahf
jg
cmpsl
sub
dec
lods
addr16
mov
xor
dec
mov
shrl
fiadds
mov
aam
and
and
ret
pop
cmp
les
jp
add
leave
xor
pop
enter
sbb
xchg
in
xchg
pop
icebp
stos
cltd
out
repnz
testl
clc
jl,pt
bound
inc
push
cli
xchg
lret
test
sbbb
push
cmp
outsb
push
cltd
outsl
inc
in
stos
sub
pusha
fistpll
xchg
dec
fldenv
push
pop
hlt
jb
pushf
push
and
add
cmc
mov
or
mov
cmp
push
movsb
outsb
push
insl
jle
lock
fisttps
cld
pop
lock
xchg
pop
nop
repnz
or
shll
sub
or
mov
test
in
and
stos
lods
ret
jns
jb
jae
cli
mov
cmpsb
push
xchg
xlat
scas
sahf
lods
repnz
push
pop
push
cmp
jle
rolb
data16
daa
jb
ret
cmpsl
mov
adc
sub
cmp
sbb
imul
fs
mov
dec
pop
add
ss
cmpsb
adc
movsl
mov
add
sbb
mov
pop
pusha
xor
or
std
rorl
or
inc
testb
mov
ds
stos
pop
loop
enter
dec
fildll
ss
mov
rcrl
push
insl
mov
push
adc
daa
test
push
mov
add
aam
not
sbb
inc
mov
in
loope
in
rorb
das
add
jns
mull
jg
lea
jmp
mov
bound
cmc
pusha
cmp
sbb
xchg
in
add
add
jo
mov
dec
add
jb
pop
pop
adc
lds
mov
movsb
push
loope
jb
movb
sahf
push
xchg
mov
cli
inc
enter
pop
fsts
inc
outsl
repz
repz
les
ret
rorl
sbb
mov
sbb
push
mov
xor
scas
lret
pop
push
movmskps
cmp
mov
decl
jne
push
add
scas
cmp
xor
shrb
stc
adc
xchg
lods
fdivs
jbe
cmpsl
faddl
setge
jl
aam
jecxz
out
scas
out
push
lcall
push
inc
mov
cmp
mov
enter
loope
cmpsb
movsb
or
cmp
cmp
jne
lret
push
pop
and
ficomps
daa
mov
call
add
outsl
pop
nop
push
and
arpl
pop
shll
push
mov
aam
mul
in
fiaddl
mov
jecxz
sub
jge
inc
imul
out
sub
lds
cmpl
testl
cmp
push
pop
cmp
call
push
rdpmc
lds
imull
mov
stos
fcompl
loop
dec
dec
jl
test
in
xchg
lds
call
push
adc
lea
pop
mov
mov
je
sub
cmc
inc
push
adc
cmp
lret
push
pop
or
xchg
pop
das
ficoms
mov
fadds
lods
push
leave
jb
stos
ficoms
pop
std
enter
stos
jb
shlb
fsubs
jge
or
imul
jg
mov
mov
pop
imul
negl
jl
sub
dec
orl
mov
dec
jmp
inc
aas
pop
in
sbb
cmp
or
rolb
pop
fstpl
cmp
mov
and
push
push
movsb
xchg
inc
pop
mov
loope
pop
test
arpl
mov
repnz
inc
sarl
sub
mov
mov
sbb
jbe
insb
imul
add
scas
aam
push
sbb
sti
out
push
or
or
xchg
jmp
dec
pop
push
inc
xlat
xor
pop
aaa
ret
or
ljmp
stos
fnsave
push
pop
icebp
push
stc
push
xchg
dec
pushf
add
imul
int3
push
mov
pop
lods
cmp
inc
pop
lahf
mov
roll
lods
and
push
jnp
rorb
sub
dec
add
data16
sarl
lods
xor
pop
repz
call
or
roll
and
pop
xor
jne
dec
cli
fdivs
jb
adc
test
dec
mov
clc
pop
imul
mul
push
jbe
cli
add
das
bound
vunpcklps
inc
dec
popf
stos
test
ljmp
outsl
cmpsb
cmpl
pop
call
and
cwtl
cmp
fsts
jmp
jno
in
mov
cmp
and
fsqrt
or
mov
and
pop
push
add
sbb
sbb
mov
mov
mov
push
repz
andb
inc
mov
cmp
decb
push
fbld
sarl
sarb
pop
mov
pop
test
push
mov
inc
hlt
ret
sbb
xor
cmpsb
les
or
add
and
xorb
notl
pop
push
es
inc
add
fcomi
pop
dec
inc
jne
jns
mov
mov
hlt
sbb
fwait
ret
jae
mov
das
sarb
mov
scas
push
lods
fisubs
sbb
pop
leave
pusha
lret
arpl
or
mov
shl
mov
es
or
fwait
dec
repz
push
xchg
mov
lods
jae
cmp
imul
pusha
jbe
mov
jbe
sub
push
flds
xchg
stos
add
nopl
insl
sbb
or
in
lods
ret
call
xor
sbb
mov
add
out
jecxz
push
mov
xor
mov
lods
loopne
enter
adc
aas
call
push
push
mov
lret
xchg
lret
popf
mov
inc
js
or
iret
js
cmp
rorb
popf
add
cmp
sub
movb
xchg
ror
push
in
pop
popf
pop
xor
popf
pop
es
sahf
lret
movsl
and
mov
mov
xor
mov
aaa
sub
std
ret
icebp
mov
xor
inc
mov
jns
cs
mov
cwtl
mov
adc
loop
imul
push
xchg
lret
mov
pop
jns
and
ret
mov
fwait
mov
cs
xchg
es
mov
mov
enter
pop
cld
imul
cmp
lods
inc
xchg
xchg
cmpsl
jge
call
daa
jmp
cmp
cmpsl
or
xor
or
fldcw
adc
lock
lcall
push
cmpsl
mov
mov
jecxz
xchg
mov
in
xorl
sbb
xchg
popa
stos
in
cmp
into
pop
shrl
xor
dec
scas
sub
sti
out
ljmp
mov
dec
aas
xchg
mov
cltd
push
test
sbb
xlat
dec
loope
int3
and
lods
aaa
inc
push
mov
sub
cmp
outsl
jp
ja
mov
pop
call
sub
fsqrt
xchg
inc
push
roll
add
cltd
jne
mov
ret
rcrl
sahf
das
test
add
in
scas
cs
xchg
push
dec
mov
scas
sub
push
add
cmp
jno
repnz
push
jmp
xor
dec
in
shll
stos
sti
inc
sbbl
pop
test
mov
xchg
push
add
es
out
xor
lret
or
stc
pop
mull
repz
or
nop
xor
fs
out
test
sub
insb
insb
sbb
mov
mov
dec
jo
mov
imul
adc
or
jp
mov
mov
and
pop
mov
aaa
xor
mov
xchg
mov
cmp
adc
inc
pop
rol
jmp
xchg
pop
inc
mov
in
inc
pop
leave
dec
push
dec
dec
inc
cmp
or
rcrb
lret
cmp
sub
sub
sub
jnp
loopne
es
sub
mov
pop
pop
scas
test
jecxz
mov
push
adc
out
xor
push
adc
mov
stos
push
dec
dec
scas
popa
out
push
inc
sbb
push
ja
loopne
aad
call
jne
lods
xchg
xchg
mov
push
sbb
cwtl
aas
stc
lret
ficoml
inc
andl
movsl
shl
sub
lea
dec
enter
in
fistl
xor
sti
mov
xchg
cltd
dec
mov
scas
sub
sbb
mov
ficompl
mov
xchg
inc
fnsave
cltd
hlt
ds
pop
in
movsb
int3
mov
add
insl
test
cld
js
in
cmp
loop
sub
inc
mov
imul
jp,pt
mov
push
jecxz
cmp
daa
nop
push
notb
pushf
ds
fwait
sbb
test
add
rorl
jbe
sbb
or
dec
cld
inc
pop
sub
adc
or
outsb
add
xabort
fucompp
mov
clc
lock
stos
pop
pop
pop
inc
popa
test
loopne
std
jne
repz
push
add
mov
pushf
push
add
dec
inc
lods
cmp
lock
es
mov
scas
push
and
mov
test
xchg
inc
dec
std
je
xchg
jns
popa
in
repnz
add
stc
outsl
jae
aas
inc
icebp
ss
cmc
repnz
neg
mov
mov
sbb
cmp
ja
sbb
cmc
cltd
aas
mov
mov
in
add
xchg
sbb
iret
sub
out
rolb
add
jge
pop
or
fimull
mov
cmpsb
mov
sbb
arpl
mov
movsb
mov
divb
push
out
mov
lea
out
insl
jmp
sbb
pushw
xchg
lods
loop
push
shll
in
sbb
pop
loopne
xor
imul
pop
loope
int
int
inc
loope
aam
sub
mov
insl
push
push
add
les
push
pushf
hlt
inc
popa
out
add
jb
xchg
fldcw
fcmovbe
jnp
and
mov
xchg
fisttpll
ret
or
arpl
mov
sti
inc
imul
mov
mov
cmp
out
test
ds
cmp
call
xor
xor
sarb
mov
movsb
xchg
adc
mov
jge
jg
sub
mov
scas
xchg
pusha
pop
lods
aaa
clc
jbe
sub
arpl
bound
ljmp
addr16
shr
stc
lret
pop
pop
in
fld
jb
mov
xchg
mov
dec
pusha
push
ja
std
in
mov
mov
ss
addb
mov
adc
cmp
je
dec
filds
outsl
dec
pusha
lods
loop
ret
gs
pop
cmp
test
sbb
and
shlb
adc
test
cli
inc
notl
notb
push
push
xchg
xor
lahf
icebp
inc
mov
jb
outsl
out
or
aam
dec
dec
stos
push
rolb
xor
shll
mov
push
sti
aas
cmp
cwtl
jl
mov
stos
jecxz
decb
sub
jl
negl
or
rcrl
lcall
push
cmp
push
mov
push
or
insl
mov
and
fcoml
fs
adc
add
cmp
out
xor
push
sub
icebp
sbb
movsl
mov
ret
adc
shrb
into
mov
cli
lcall
pop
fdivl
cmp
jp
sbb
and
xchg
push
mov
pandn
nop
icebp
clc
loope
por
cld
fdivrp
pop
into
into
mov
dec
mov
xchg
dec
xor
pop
test
mov
aaa
punpcklwd
xchg
mov
adc
stc
cmp
and
xchg
add
or
hlt
push
cmpsb
call
cmp
xchg
mov
or
add
xchg
cmp
clc
dec
dec
mov
pushf
xchg
test
pop
xchg
pusha
or
inc
sub
test
fbstp
inc
or
jae
lret
xchg
or
cmp
stos
sbb
pop
cmp
mov
jae
addl
int
and
and
loopne
mov
lock
jmp
std
ljmp
or
adc
sub
jb
push
clc
pop
fisubl
int3
jne
mov
adc
xor
in
fs
nop
out
sar
or
and
aas
fidivrs
sbb
push
lock
imul
xor
arpl
rorb
add
dec
pop
mov
fcomps
ss
test
aas
jo
pop
cmp
es
fdivrl
cmpsl
lcall
push
fcompp
xor
dec
movsb
jns
push
push
jbe
in
popa
sub
call
mov
aaa
jmp
push
add
bound
dec
mov
test
scas
movsb
jle
inc
dec
adc
sub
mov
adc
jno
into
pop
and
aaa
dec
iret
jb
out
lock
lds
repnz
pop
or
lahf
add
imul
sub
cmpsl
mov
lret
jg
pop
inc
aas
xor
and
stos
imul
cmp
scas
cmpsl
movsb
into
jl
out
dec
inc
cmp
or
aam
or
cli
sti
in
cmp
and
imul
into
jno
jge
pop
jmp
xchg
daa
dec
mov
imul
bound
into
cmp
push
fists
pusha
add
mov
mov
outsb
gs
mov
fnstsw
int
std
push
in
push
sbb
fisubrs
scas
jge
insl
mov
pop
lods
dec
fnstsw
int
std
push
in
push
sbb
fisubrs
scas
jge
insl
mov
pop
lods
dec
fdivrl
leave
cs
push
in
push
sbb
or
into
pop
mov
pop
mov
pop
test
std
push
insl
push
sbb
fisubrs
push
andb
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
data16
in
xchg
xchg
jbe
dec
push
jne
gs
adc
add
and
out
xlat
cmc
in
xchg
cmpsb
test
push
inc
aaa
je
gs
add
not
out
cmc
in
xchg
cmpsb
test
push
data16
adc
or
dec
pop
ss
imul
cmpsb
xchg
cmpb
mov
not
gs
cmp
loope
aad
aad
lahf
xchg
test
das
add
mov
lret
add
je
fldenv
cmpsl
and
outsb
repz
ss
add
lcall
inc
jmp
mul
sub
jbe
xchg
test
scas
loopne
add
or
or
shr
pop
push
scas
push
in
movsl
push
stos
adc
mov
gs
dec
adc
push
mov
rcrl
in
push
fisubrl
outsb
aas
inc
sub
push
mov
and
lret
lcall
pop
fisubrl
cmc
in
xchg
cmpsb
test
push
inc
push
jne
gs
push
arpl
mov
movsb
cmc
rol
icebp
rcl
jecxz
push
and
and
jnp
jb
test
mov
ret
loop
mov
or
adc
aaa
jge
push
xchg
inc
push
sbb
xchg
enter
out
mull
xchg
push
jne
gs
push
and
cmc
in
xchg
cmpsb
test
push
inc
push
jne
gs
push
and
pop
lcall
das
inc
push
push
xchg
sti
xor
outsb
xor
or
pop
cmp
pop
inc
push
mov
cmp
and
and
sub
popf
inc
cmc
jle
pop
lods
sub
test
ljmp
pop
xchg
lcall
out
and
mov
xor
pop
aam
mov
jbe
test
push
lcall
mov
mov
xchg
sarl
sub
mov
stos
inc
xchg
cli
mov
push
das
xor
pusha
xchg
std
add
xor
mov
or
pop
push
xchg
jmp
cs
pop
and
dec
test
pop
movsb
loope
out
dec
jg
adc
idivb
sbb
sub
inc
out
and
popa
add
inc
cs
inc
add
sti
sbb
stos
inc
pop
lock
lret
or
cld
jg
mov
pop
outsb
push
fucomi
xor
loopne
push
pop
jp
es
dec
fs
mov
xor
fadd
xchg
mov
xchg
push
and
inc
out
test
push
mov
test
mov
mov
push
fiaddl
test
pop
scas
ds
push
mov
icebp
push
adc
mov
sub
ds
add
mov
mov
mov
sub
jnp
push
jg
dec
mov
out
sti
xchg
xor
call
ja
and
icebp
cmp
in
stc
add
push
repnz
jne
mov
rcll
mov
mov
and
je
push
into
jne
pop
and
out
jo
rcll
and
adc
xlat
rcll
je
std
shlb
sbb
sub
push
push
push
push
xor
jg
pop
aas
jne
inc
test
dec
dec
and
stos
push
pop
bound
mov
mov
pop
insb
pushf
sub
jbe
mov
sbb
pushf
sti
lret
adc
incb
mov
push
bound
into
out
scas
push
jnp
add
add
rol
mov
lock
push
test
icebp
imul
sbb
pop
imul
sbb
outsb
mov
iret
sarb
das
iret
ja
push
mov
out
cmp
add
int
ret
pop
push
clc
and
rorl
fistpl
clc
das
jns
mov
mov
mov
push
sarl
jns
sub
add
xchg
jecxz
je
sbb
jae
add
ds
push
int3
xlat
push
pop
repnz
jp
pop
xchg
int
fistl
adcb
fsin
fldl
aas
push
xor
sahf
cmp
data16
lods
push
outsb
les
sub
push
ret
fildl
pop
test
dec
scas
js
add
mov
xchg
pop
mov
test
cmp
xchg
out
or
popa
adc
sbb
mov
in
sbb
lfs
sub
jo
and
and
test
cmp
push
insb
bound
cmpsb
adc
sti
push
mov
mov
repnz
faddl
lods
add
out
or
sbb
cmp
sahf
mov
cltd
lods
mov
push
and
cs
cmpl
cli
xchg
data16
sbb
sub
push
imul
xchg
out
pop
test
sbb
ret
andb
outsl
sbb
mov
in
lret
lods
mov
es
movsl
out
cmpsl
mov
pop
or
imul
mov
fstp
mov
loope
in
mov
mov
sbb
stc
rol
push
inc
sar
notl
jbe
push
push
movsl
pop
repz
mov
cmp
test
cmpsl
sahf
loopne
mov
pop
adc
loope
std
push
fwait
cmc
insl
ret
mov
nop
fmuls
adc
dec
cmp
or
test
decl
mov
sub
xchg
xor
das
sbb
notl
imul
jmp
leave
adc
and
xor
out
lret
mov
into
inc
sbb
jp
fstpl
or
sahf
push
les
cmp
arpl
jge
jae
inc
cld
mov
cmp
ret
jmp
cmp
sarl
lds
mov
mov
or
adc
fstps
adc
fsubrs
push
aad
pop
pushf
sub
gs
mov
xor
xor
dec
loope
aaa
rcrb
mov
jl
xchg
loope
mov
mov
pop
jo
imul
jp
xor
lds
mov
adc
aas
mov
lds
add
add
adc
sbb
xor
test
inc
popf
adc
fadds
pop
inc
sub
popa
aam
cmp
jbe
pop
jae
aam
mov
pop
inc
and
mov
aas
and
lds
cmp
push
loopne
lock
add
leave
push
icebp
add
inc
push
add
sbb
and
insb
and
add
int
lods
pushf
flds
movsl
pop
push
lods
mov
pop
cmc
cmpl
dec
jmp
dec
sbb
in
fists
int
xor
test
xchg
hlt
jae
pop
add
scas
cmc
adc
pop
ret
out
mov
add
mov
js
ret
cmp
nop
inc
cmp
stos
jmp
lds
out
cmpsb
push
leave
jns
push
cmp
std
pop
push
cli
out
mov
lret
sub
jl
sti
daa
fdivs
ss
js
pop
test
test
shlb
in
scas
sub
dec
cltd
sbb
mov
push
aam
lahf
in
insb
imul
dec
lds
mov
xchg
jle
pop
das
push
stos
shll
int
leave
xchg
mov
pop
negl
mov
pop
and
and
jmp
inc
pop
xor
sbb
dec
into
addl
jp
xor
adc
cmp
cmp
mov
leave
and
xchg
ret
jb
gs
das
ss
cwtl
call
pop
mov
outsl
mov
and
stc
aas
add
mov
sbb
inc
stos
shrl
pushf
mov
inc
cmp
push
add
dec
std
popf
pop
add
shrl
cwtl
outsl
mov
push
lcall
add
or
xchg
add
ljmp
jp
in
mov
stc
out
sub
in
fwait
mov
xchg
in
add
nop
jg
int
test
jns
mov
repz
icebp
adc
xor
jbe
jae
jns
int3
push
hlt
xor
cmp
es
jae
into
xchg
fisubl
pop
jle
cs
lret
in
aam
push
insb
xchg
mov
fstps
addr16
and
cld
clc
fstpl
adc
push
outsl
add
cwtl
or
dec
push
fisubrs
sub
pop
xor
inc
out
pop
fadd
sbb
in
cltd
mov
mov
xor
outsb
mov
shl
ror
lds
in
mov
cmp
pop
mov
mov
negl
add
inc
xchg
loopne
inc
lret
xor
pusha
pop
in
mov
add
scas
test
lods
cli
jno
jle
lds
insb
outsl
or
jb
test
sahf
push
rorb
es
push
loopne
cld
mov
dec
pop
cmp
and
mov
test
testb
movsl
lret
lahf
jg
sbb
inc
pop
push
test
js
mov
inc
orb
shll
ret
outsl
mov
mov
scas
or
inc
lods
fists
fs
aad
mov
stos
popa
inc
sub
xchg
imul
push
jmp
cld
loopne
mov
ret
enter
pushf
subb
ja
cmp
mov
out
cmpsb
aas
and
jp
jo
test
stos
es
xchg
xor
js
xor
xchg
cmp
cmp
add
aam
jl
lret
insb
push
aas
sahf
mov
push
hlt
aas
es
scas
call
inc
cmp
cmp
dec
xor
mov
sbb
fists
imul
add
add
add
les
into
or
paddd
push
and
or
pop
sub
ljmp
mov
jb
flds
stc
ret
imul
push
jo
scas
clc
orl
imul
aaa
xor
dec
lret
out
mov
push
outsb
fistpl
nop
bound
sub
lahf
lcall
xchg
xchg
jmp
decb
rorb
jecxz
pop
jecxz
jp
push
sar
movsl
scas
in
fildl
or
aad
nop
or
cmpsb
xor
cmp
daa
adc
bndstx
dec
sbb
in
icebp
negl
xchg
out
in
mov
fwait
dec
int
and
or
js
jne
imul
or
fiaddl
dec
lret
test
mov
sub
fs
push
mov
enter
ret
cmp
cmpsb
push
sub
inc
xchg
add
gs
out
lea
mov
fiadds
mov
pop
out
dec
dec
sbb
clc
inc
aam
decb
pop
out
in
xorb
fildl
sub
insb
push
inc
in
pop
cmp
mov
inc
mov
icebp
pushf
loope
ljmp
addb
pop
sbb
pop
cmp
loop
pop
pop
jmp
gs
scas
xchg
sub
ljmp
sub
ds
rorb
cmc
jmp
push
jnp
outsl
xor
sub
lods
cmp
fwait
loopne
rclb
les
xor
xor
add
or
xor
and
cmpsl
out
sub
xor
jl
xlat
dec
adc
sbb
dec
pop
sub
cs
fwait
xchg
cmpsb
jb
fsubr
jge
xchg
das
aaa
cmpsl
ret
loopne
movsb
cmp
shlb
mov
mov
in
mov
xchg
out
mov
sub
lea
inc
add
fwait
iret
mov
jne
or
std
lret
adc
enter
rcr
mov
ja
mov
or
fsts
mov
cmp
mov
push
loop
aad
ret
popf
cmpsb
scas
insl
cmp
shll
fstl
insl
cmpsl
inc
adc
gs
cmp
adc
cmp
in
lret
dec
mov
and
jns
push
mov
inc
stos
add
mov
lock
iret
scas
xor
xor
jl
mov
cmc
fsubrp
pop
and
jl
gs
xchg
rcll
aad
call
mov
sub
sub
rclb
jmp
push
clc
fisubrs
sub
lcall
adcb
out
xor
jnp
jle
test
sub
xor
js
jbe
fadd
out
push
rclb
dec
in
cwtl
or
rol
pop
sbbb
lock
cmp
or
aas
inc
cmpl
inc
dec
inc
cmp
jns
ljmp
pop
enter
inc
in
mov
add
xchg
and
in
or
pop
cmp
push
ret
cs
jmp
arpl
in
or
xchg
cld
xchg
lods
inc
push
adc
pop
hlt
jmp
pop
mov
jae
aas
add
adc
das
mov
adc
repz
int
lahf
dec
and
pop
in
jne
jg,pn
xchg
cmp
sbb
push
jae
loopne
mov
int3
inc
in
dec
lods
notl
cmp
subb
jae
ret
jg
lret
out
xor
jo
in
popa
or
jb
iret
enter
cmp
les
cmp
jo
sub
pop
scas
mov
and
out
dec
sub
sbb
rcrb
jb
stos
add
sbb
and
daa
fdivrs
push
and
jbe
xchg
in
adc
sub
outsb
sub
mov
xchg
jmp
dec
inc
lea
xor
and
sbb
outsl
testl
xchg
ljmp
mov
movb
fcoml
movsb
xchg
xchg
ds
js
imul
mov
add
addl
stc
push
nop
iret
mov
cs
adc
lret
jb
scas
inc
outsb
and
imul
repz
mov
or
leave
fs
xchg
sbb
inc
test
idiv
dec
iret
or
gs
repnz
insl
sbb
jmp
inc
test
jecxz
push
andl
ja
fcoml
lods
int
lahf
cld
push
fistpl
test
jae
call
shrb
mov
mov
lcall
sub
jb
cltd
loop
pop
lock
mov
leave
test
outsl
xor
data16
xor
test
add
sub
out
inc
rorb
repnz
pop
outsl
mov
dec
pop
push
cmc
iret
leave
outsl
dec
clc
das
cld
xchg
adc
and
xor
pop
mov
rolb
fdivl
add
into
mov
sub
movsl
jb
enter
push
fcomps
into
stos
and
jl
mov
insb
cwtl
outsb
insb
shl
in
call
cmpsb
ljmp
jne
outsl
mov
je
incb
sti
xor
cmp
movsb
stos
mov
stos
hlt
lahf
jae
sti
cli
dec
add
ret
je
cli
add
lods
js
cmp
lret
add
jns
inc
pop
orb
arpl
add
xchg
jp
mov
out
mov
fs
xchg
adc
sub
lods
mov
cmp
stos
cmp
dec
fwait
pop
sbb
inc
pop
out
push
jg
add
cs
adc
mov
jnp
push
jno
in
cld
lock
and
repnz
imul
leave
jecxz
es
pop
jno
cmp
jns
outsb
in
popa
imul
in
fnstenv
aam
lret
jo
cld
jecxz
jecxz
addb
in
insb
jne
lcall
add
shrb
mov
mov
cmpsl
mov
adc
les
pop
dec
jb
or
ss
rorl
push
push
cbtw
outsl
pop
xchg
fcompl
xchg
cmp
int3
std
dec
scas
lahf
das
icebp
jg
enter
push
ffreep
inc
add
pop
fimuls
sub
adc
cwtl
mov
push
and
cltd
xor
loopne
mov
fxam
ss
daa
shl
adc
loop
jp
adc
jmp
stos
in
aam
mov
test
mov
sbb
gs
and
push
push
in
pushf
add
push
int3
xor
mov
testb
fwait
add
push
or
out
or
test
cltd
sub
mov
sbb
lret
outsb
std
jnp
lods
xor
inc
cmc
lahf
ja
xchg
push
insl
xor
rcrb
lret
inc
leave
xor
dec
mov
das
scas
xchg
pop
stos
mov
pop
jge
mov
xchg
int
adc
sub
push
pop
movl
fwait
movsl
or
push
add
mov
jae
pusha
push
shrl
imul
loopne
shr
cmpb
pop
sbb
iret
js
dec
dec
repz
pop
adc
dec
ss
and
leave
adc
cld
inc
outsb
xchg
cmp
lcall
sbb
pop
int
loop
mov
sbb
mov
mov
clc
jne
aas
fwait
push
mov
cmp
sub
and
push
add
rcr
notl
pop
or
jbe
and
stc
scas
jae
mulb
mov
xor
sbb
iret
cmp
ret
adc
xor
cmpsb
mov
adc
fwait
pop
xchg
dec
jbe
xorl
mov
pop
je
pop
bnd
xchg
xchg
gs
aam
pop
stos
lret
faddl
fwait
and
pop
lret
jecxz
add
cmp
es
lcall
ret
stc
test
insl
cs
orb
shll
fs
cmp
mov
adc
adc
repz
ds
aad
mov
inc
lcall
inc
xchg
es
cmp
or
fadds
mov
dec
push
mov
insb
gs
test
in
cmp
push
dec
iret
sbb
and
xchg
cmpsb
cmpsb
loopne
in
enter
addr16
sti
push
lods
jne
jne
cmp
push
mov
lcall
aas
imul
jns
popf
xchg
push
xchg
test
data16
adcl
out
sub
iret
jnp
adc
in
adc
cli
sbb
cmp
imul
adc
ss
dec
mov
mov
jp
push
pusha
movsl
add
lret
mulb
and
stc
arpl
adc
int
scas
jbe
shl
cmp
jb
adc
jp
imul
dec
loope
sahf
or
dec
mov
add
xor
or
cmp
add
insl
cmp
cmp
cmp
push
aad
popa
divl
adcl
ror
inc
hlt
repnz
movsl
popa
das
dec
fwait
insb
and
je
sbb
push
cmpb
mov
repz
adc
jl
repnz
int
add
jae
mov
or
mov
push
lds
add
adc
inc
xor
xor
jle
icebp
in
inc
aam
ret
fisubrs
ljmp
xchg
iret
sbb
or
movsl
outsl
sbb
push
test
inc
push
mov
test
pop
or
mov
aam
hlt
jg
sub
aaa
inc
inc
movsb
push
pop
add
out
and
aaa
add
icebp
pop
dec
dec
insb
je
pop
popf
sub
shrb
xchg
mov
lret
ficoml
test
cmpl
out
push
sbb
sub
jg
jb
dec
pop
fbld
ret
imul
cmp
jl
dec
fcomps
push
clc
adc
xor
sbb
popf
or
dec
sub
les
jbe
or
or
jge
sub
pop
mov
sbb
push
stos
ljmp
aas
xchg
nop
es
xchg
nop
ds
and
and
stos
mov
push
jno
sbb
out
fstpl
dec
imul
loope
pop
sub
mov
lcall
dec
loope
shll
loopne
inc
and
xchg
lea
mov
leave
add
mov
jbe
lea
out
pop
xchg
sub
fxch
das
nop
ret
dec
push
mov
shll
cmp
fidivl
rcrb
jecxz
mov
lea
pop
mov
ja
out
lods
cs
aas
sub
rcrl
jno
repz
mov
pop
dec
xchg
ljmp
test
ljmp
mov
out
pop
ja
sbb
cmp
mov
xlat
iret
jb
insl
mov
jmp
jle
sub
ret
mov
inc
mov
xchg
sbb
pop
loopne
xchg
inc
push
movhps
adc
inc
add
mov
xor
xor
test
sub
mov
mov
xchg
mov
loopne
sbb
bound
or
mov
push
out
and
add
xchg
jno
jae
aad
cmp
adc
outsl
lcall
fbstp
iret
iret
or
cmp
xlat
ljmp
jg
mov
and
scas
cmpsl
in
sbb
sbb
loopne
xchg
dec
ljmp
gs
sub
mov
push
push
inc
lds
mov
sti
push
pop
mov
mov
cwtl
mov
jecxz
cmp
pop
test
inc
jbe
int3
push
scas
sbb
leave
scas
mov
push
jle
xor
out
push
addr16
loope
out
pop
cltd
insl
push
repz
mov
imulb
sub
sbb
dec
adc
push
shrl
xlat
pop
jp
nop
mov
cmp
adc
and
popa
outsl
int3
add
add
out
loop
inc
sbb
sarl
or
inc
shl
xchg
in
and
hlt
je
adc
lcall
mov
and
stos
repz
negb
dec
aad
mov
in
lods
insl
mov
mov
in
shlb
jge
xchg
jg
pusha
xchg
and
xchg
xor
xor
fbld
and
aas
mov
aaa
dec
mov
loope
pop
in
fiadds
push
outsl
data16
xchg
shr
or
jae
fldl
cmpsl
daa
insl
xchg
and
mov
std
std
mov
cmp
mov
mov
nop
jo
adcl
mov
xchg
arpl
inc
cli
scas
mov
mov
jge
mov
jl
rorb
adc
rclb
js
lods
cmp
mov
int
outsb
mov
insb
daa
fiaddl
xor
pop
enter
subl
push
or
cmp
xchg
or
jl
in
insb
test
repz
aas
cmp
stos
cmp
lret
mov
xor
jle
and
xor
je
leave
push
fs
cmpl
push
js
icebp
aaa
in
cmp
ds
cmp
pusha
adc
dec
mov
adc
adcb
mov
popf
shrl
adc
imul
scas
mov
pop
shl
aaa
lock
sbb
sub
dec
js
clc
pushf
call
scas
mov
into
and
sub
push
and
dec
icebp
les
mov
lds
xchg
cmpsb
test
push
inc
push
jne
gs
push
and
cmc
in
xchg
cmpsb
test
push
inc
push
jne
gs
push
and
cmc
in
xchg
cmpsb
test
push
inc
push
jne
gs
pop
and
xlat
cmc
in
xchg
cmpsb
test
push
out
cld
jne
adc
scas
cli
jmp
add
out
out
testb
in
enter
inc
jg
outsl
pop
ja
push
aas
push
sub
call
out
out
test
mov
mov
inc
jg
dec
pop
jbe
push
push
das
es
shufps
out
test
adcl
inc
mov
jbe
push
push
pop
setns
mov
out
lcall
orl
jl
aad
popf
mov
inc
ret
push
mov
mov
mov
mov
dec
int
pop
sarl
cltd
aaa
mov
ds
in
jno
mov
ljmp
jecxz
sub
repnz
data16
das
inc
fbstp
pop
aas
decl
add
fs
lret
adc
cwtl
push
mov
ds
shlb
ljmp
fistps
repz
scas
sub
jg
cwtl
or
insb
jmp
lock
sub
into
jge
inc
clc
fs
fbstp
pop
cltd
mov
fwait
shlb
mov
or
pop
out
test
mov
mov
inc
stc
push
test
push
adc
xlat
es
ss
xchg
lahf
loope
lret
in
ret
ljmp
push
es
push
push
pop
inc
pop
jo
mov
mov
rcrl
sbb
cmp
sub
outsl
js
dec
jle
mov
lcall
lahf
mov
inc
jg
outsl
pop
jbe
push
aas
push
das
es
ss
out
out
test
mov
mov
inc
jg
outsl
pop
jbe
push
aas
push
das
es
ss
cmp
js
in
pop
ljmp
dec
add
sub
popa
or
jne
repz
scas
push
fsubr
pop
cmc
pop
js
rcl
cmp
add
hlt
fidivl
loop
ret
pushf
stos
cmp
push
imul
clc
std
lea
addb
and
sub
add
out
rorl
lods
add
cmp
jno
insl
push
test
xchg
lret
mov
xor
and
call
cmp
lods
xchg
adc
add
sub
push
or
and
jns
pop
adc
rorl
mov
mov
pushf
xlat
shrl
int3
cmpsb
xlat
lret
mov
jge
mov
and
jae
fsubl
sbb
pop
cmpsb
fwait
movsl
bnd
add
xchg
dec
mov
sbb
sti
inc
or
in
mov
out
cli
enter
jbe
ret
cli
addl
dec
mov
and
fdiv
scas
cmp
lock
imul
jp
and
shr
movsb
in
mov
fwait
push
or
xor
inc
sbb
add
rcll
cmpsl
fmulp
call
xor
cmp
push
cs
cmp
in
xchg
cmp
adcl
dec
std
mov
xchg
imul
push
pop
shrb
rorb
pushf
movsl
or
lods
xchg
xchg
inc
jne
mov
cwtl
adc
xor
mov
insl
out
pop
dec
xchg
xchg
and
ds
leave
inc
push
dec
hlt
mov
data16
mov
mov
data16
cltd
rorl
jmp
sbb
push
jae
jl
imul
push
xchg
add
imul
xchg
lret
jle
ss
push
fwait
int3
ja
adc
adc
or
adc
mov
int
xchg
daa
xchg
xchg
aas
mov
loopne
xor
mov
jl
or
repz
int
dec
mov
mov
mov
les
mov
sarb
out
test
fildll
rcrb
shlb
fistps
cmpsl
imul
daa
lcall
mov
lea
inc
xacquire
popf
imul
push
inc
mov
stos
mov
pop
mov
shrl
cmp
orb
push
stc
in
mov
jl
mov
insl
jb
pop
ret
je
lock
out
cld
mov
std
push
scas
fwait
sub
inc
add
loope
popf
sbb
mov
subl
fisubl
flds
ds
or
xor
dec
fwait
xchg
je
mov
adc
out
add
fstps
jns
sti
cs
das
rcll
push
adc
push
dec
fisubrs
cs
fucomi
xor
sub
cld
sub
sub
ja
int
popl
push
mov
cli
fwait
mov
jg
xchg
xchg
pop
test
push
adc
lret
jl
pusha
sub
xchg
pop
ss
xchg
and
mov
mov
mov
and
dec
out
cmp
or
test
jno
add
insb
rcrb
call
or
rcrl
or
inc
scas
dec
xor
daa
mov
xchg
xlat
das
stos
cmpsl
cmp
outsl
mov
rclb
fwait
pop
mov
mov
test
movswl
adcl
xor
cmp
xor
xor
dec
lcall
movsb
mov
mov
ss
push
in
int
rcll
repz
inc
sub
pop
sub
pushf
pop
or
cltd
mov
out
stc
inc
in
fwait
push
push
and
dec
mov
fsubl
adc
push
daa
jge
cltd
mov
jae
fiadds
lcall
shlb
fldenv
sbbl
or
push
cli
sbb
mov
mov
out
insl
shlb
push
dec
inc
loope
push
mov
sub
pushf
jmp
aaa
jno
lods
mov
bound
push
out
scas
in
dec
xchg
out
jmp
nop
jle
xchg
mov
cmp
mov
test
xchg
enter
cmp
sbb
push
outsl
aam
jno
mov
cmpl
test
aaa
inc
inc
movsb
xchg
mov
push
mov
add
inc
pop
ja
lock
arpl
add
std
stc
lods
jge
rorl
sbb
xchg
repnz
cwtl
and
pop
iret
faddl
mov
es
add
mov
inc
mov
das
incb
int3
roll
dec
not
and
out
into
bound
fs
and
imul
cmpb
or
pop
push
push
inc
jg
rorl
add
sahf
push
sub
orl
and
call
or
aam
out
or
fiaddl
xchg
pop
and
cltd
and
pop
adc
iret
icebp
push
mov
and
call
rcl
test
pop
cmc
sbb
lods
jbe
imul
pop
or
add
shll
into
adc
mov
mov
out
xchg
shlb
add
gs
mov
mov
lahf
enter
pop
test
cmp
insb
scas
jp
cmp
fbstp
call
data16
xor
iret
mov
test
dec
inc
jg
je
int3
lret
fadds
push
sbb
mov
pusha
out
data16
push
jb
push
pop
jge
outsb
push
push
jmp
ret
mov
sub
xchg
loopne
sub
out
arpl
inc
cmp
pop
adc
testb
mov
popa
dec
xchg
jge
dec
cmc
shrb
sahf
repnz
ljmp
xchg
in
push
dec
push
shlb
ds
out
lret
jecxz
cs
in
cmpsl
jb
pop
pusha
ja
adc
push
xchg
xchg
stos
xchg
sub
rorb
out
movsl
repnz
or
lcall
adc
mov
shll
pop
ja
push
repnz
mov
ss
jmp
fucomp
mov
lcall
ret
call
push
add
fld
scas
lods
push
cmc
imul
std
ficoms
out
in
pusha
or
jmp
fstps
pop
push
imul
add
cmp
les
movsb
cwtl
xchg
repz
mov
add
aas
int
xchg
jmp
repz
rcl
cli
inc
lods
mov
test
xchg
iret
inc
je
pop
dec
and
clc
fsub
popa
and
iret
mov
xor
and
lods
idiv
dec
mov
ret
out
jp
dec
sbb
outsb
push
fadds
cmpsl
std
mov
addr16
push
cmp
xchg
in
sahf
mov
jmp
sub
add
das
scas
pop
cwtl
addl
mov
xor
jp
jecxz
incb
outsb
daa
sbb
inc
outsb
loopne
adc
pop
dec
push
in
add
sar
inc
pop
into
repnz
lahf
sbb
mov
add
push
xchg
mov
repz
in
les
push
sub
pop
cs
inc
lock
movsb
pop
xchg
scas
inc
in
dec
or
jecxz
sbb
mov
and
sbb
mov
mov
sbb
scas
sub
xchg
leave
xor
push
daa
jnp
int3
add
dec
popa
cmp
leave
fstpt
add
or
outsl
sti
xorl
inc
sbb
add
sub
xchg
dec
pop
push
mov
rcll
popa
xchg
cmpsb
cmp
sbb
push
pop
js
add
dec
mov
call
nop
mov
daa
ja
inc
mov
dec
jp
mov
daa
jns
shrb
mov
add
pushf
sub
jno
pop
cwtl
andb
aam
inc
out
shl
ficomps
sbb
mov
sbbl
out
push
pop
sub
add
and
push
and
mov
test
rcr
cld
jo
dec
mov
pop
fimuls
mov
sarl
and
or
lods
pop
dec
lods
hlt
fistl
jb
idivb
push
cltd
push
push
das
push
and
aas
inc
dec
jbe
lds
aas
inc
fst
mov
sub
aam
xor
mov
je
jge
sbb
mov
lret
jl
and
cmpb
push
aam
or
sbb
ds
mov
dec
inc
dec
sub
adc
push
mov
add
ljmp
shll
jle
loope
pop
in
ror
ret
inc
out
movsl
mov
sub
mov
pop
xor
stos
push
pop
ficoml
adcl
sarb
cltd
mov
loopne,pn
pop
dec
add
adc
or
add
push
cli
popa
and
push
scas
xchg
imul
sub
xchg
fcmove
rcrl
jp
push
mov
pop
fiadds
dec
mov
loope
or
xchg
pushf
aaa
adc
cmp
dec
imul
or
jo
mov
xor
jo
inc
mov
cwtd
add
and
pop
packsswb
stmxcsr
rcrb
mov
fsubs
ds
roll
inc
fiaddl
or
pop
mov
fstps
out
add
nop
inc
jge
sbb
add
sbb
shll
ret
sbb
outsl
cmpsl
cmp
push
and
sbb
mov
adc
mov
push
push
jge
xchg
push
or
loopne
inc
dec
sbbb
push
sub
fwait
mulb
in
jge
jmp
inc
nop
mov
fwait
mov
xchg
push
mov
in
or
push
sub
dec
add
je
lock
dec
jmp
or
push
aaa
jg
or
rcll
enter
arpl
cli
and
mov
mov
ja
pop
or
dec
mov
xor
pop
mov
sbb
gs
mov
js
scas
loopne
test
push
sub
push
mov
adc
adc
jmp
cmp
add
aas
mov
in
and
stc
push
dec
rcr
dec
inc
push
cwtl
mov
push
push
fidivs
shrb
jne
xor
cmp
mov
pop
pop
insb
scas
mov
dec
lds
aam
lret
lods
bound
adc
outsl
lods
hlt
js
jl
fwait
pop
or
out
mov
orb
xor
cmp
cmp
inc
sub
addr16
jbe
inc
iret
bound
push
inc
mov
mov
cmp
pop
mov
das
cmp
leave
jp
lret
fisubrl
jbe
sub
and
pop
movntq
ss
push
fistps
sub
bound
les
loope
fistpl
push
lahf
xlat
mov
dec
jbe
repnz
test
sti
stos
hlt
lea
sub
sbb
rcrl
inc
add
push
cmp
jne
andb
lret
mov
imul
mov
jns
mov
jle
outsl
aaa
xor
push
cmp
cmp
push
mov
lret
lcall
cld
mov
push
insb
pop
sub
push
sbb
pop
add
je
jle
and
fs
cmpl
movl
cmp
mov
xor
cmp
xchg
pusha
mov
out
nop
call
ds
cmpsl
mov
ja
out
mov
adc
mov
scas
cmpsb
in
icebp
pcmpgtd
inc
fs
pop
sub
sbb
mov
sarb
hlt
xor
loope
jecxz
adc
mov
cwtl
xor
pop
inc
lock
cs
leave
xor
aad
xor
daa
xchg
in
sub
jo
sub
jmp
icebp
leave
and
sub
fistl
xchg
xor
fst
pop
fwait
out
sub
leave
int
sub
jmp
or
stos
push
xchg
xchg
shlb
int3
push
inc
fsubl
and
fiadds
movsl
dec
test
mov
aas
mov
mov
imul
adc
inc
movsl
mov
pop
cli
into
mov
cmp
cmpl
call
outsl
jp
rdpmc
aaa
sbb
push
insb
sahf
or
xor
lahf
mov
stos
xchg
loop
xchg
ljmp
test
dec
add
out
mov
insl
lret
mov
out
sub
lods
clc
or
jmp
pop
xlat
push
sub
loope
cltd
xor
xor
xlat
testb
lret
enter
inc
jne,pn
mov
dec
or
fs
ret
outsl
mov
push
inc
pop
cwtl
pusha
std
push
or
adc
sub
jp
int
xor
dec
jo
adc
divl
fwait
push
dec
loope
stos
sbb
mov
jmp
xor
out
cmp
and
adc
shrb
outsb
cwtl
add
sti
sub
push
push
sub
mov
mov
xchg
and
mov
orl
push
repz
sbb
xor
adc
int
xchg
repz
aad
and
ficoml
es
xchg
imull
xchg
xchg
leave
jle
push
xor
in
pop
es
lods
push
mov
pop
inc
andb
in
mov
subl
sub
xor
lret
sbb
jg
jmp
sub
les
popf
test
fwait
push
xchg
outsl
xchg
outsb
and
fldcw
test
pop
movsb
inc
lcall
mov
or
outsb
pusha
test
outsl
scas
mov
xchg
aaa
mov
and
sbb
mov
jmp
mov
or
pop
xchg
mov
push
lods
mov
stos
xor
add
ret
mov
fcomp
or
push
and
mov
and
adc
fcmovne
pop
arpl
jo
fbstp
push
cmp
push
cltd
test
xlat
pop
jmp
faddl
adc
clc
fisubs
sub
fldenv
and
push
push
mov
push
jg
push
pop
push
push
repnz
addb
jmp
cmp
cmp
inc
jb
inc
stos
pop
add
cld
divb
sub
xchg
xchg
cld
arpl
jl,pn
das
shlb
mov
mov
jg
inc
fidivrs
add
sbb
mov
ror
inc
loopne
adcb
adc
outsl
xchg
xor
mov
jmp
sbb
or
stc
test
andb
sub
jnp
sarb
inc
ljmp
std
or
movsb
negl
jg
jbe
dec
daa
movsl
add
pop
adc
adc
ss
pop
jl
xchg
jns
add
fs
adc
jne
rcr
mov
pavgw
push
es
or
mov
adc
pusha
in
adc
testl
jb
sti
xor
repnz
mov
adc
dec
mov
test
xor
pop
xchg
jecxz
in
sbb
int3
out
test
ret
or
push
and
push
add
push
repz
mov
loop
loope
dec
jge
xlat
mov
sbb
pop
adc
adc
scas
shll
movsl
stos
in
in
es
xchg
cmp
jnp
sbb
jl
cmp
std
roll
mov
mov
jecxz
lods
insb
inc
fdivrp
jne
or
out
push
cmpsl
xchg
test
mov
jp
lret
cs
push
xchg
or
and
in
push
shlb
mov
push
addr16
mov
in
loopne
test
dec
repz
pop
stc
cmp
mov
inc
mov
insb
hlt
test
mov
or
pusha
in
fs
push
test
add
jnp
ljmp
repnz
stos
xchg
cmp
jle,pt
sti
pop
mov
jmp
cwtl
jge
fucomip
jge
stos
push
mov
sbb
pop
mov
xor
or
sbb
rorb
mov
xor
popf
xor
or
movsl
les
loopne
shll
and
add
sbb
xchg
jae
sbb
sub
dec
push
jl
push
pop
enter
or
xchg
push
xchg
vorps
out
push
fiaddl
sbb
aam
pop
jl
mov
out
fstpt
mov
push
jae
cli
mov
lret
mov
insb
xchg
lock
ja
xchg
imul
dec
adc
lods
mov
sub
int3
adc
inc
adc
scas
xor
xor
rcll
mov
inc
adc
lods
sbbb
shlb
test
jg
lret
xor
and
hlt
add
sbb
sbb
pusha
push
movsb
dec
mov
popa
jb
sbb
pushf
cltd
nop
jo
dec
xchg
repnz
pop
shr
jp
xor
mov
or
ds
rol
dec
int3
negb
pop
jp
imul
ret
js
repz
lea
ret
push
xor
movsb
hlt
dec
out
cmp
pushf
sub
cmpsb
dec
iret
test
shlb
and
cli
cmpsb
jns
movsl
cld
out
loopne
mov
xchg
shr
add
push
mov
fsubs
mov
mov
bound
xor
mov
push
cli
and
pop
push
testb
xchg
and
inc
dec
fadds
addr16
jnp
cs
sbb
negl
xlat
mov
sbb
shll
push
pusha
aam
scas
scas
mov
ficoml
mov
pop
mov
mov
dec
repnz
xchg
lea
pop
push
and
ret
xor
fsin
xchg
and
mov
push
stos
jo
mov
int
sub
movsl
and
jne
add
ljmp
xor
testl
gs
fimull
iret
loop
pop
hlt
cs
jge
test
fnstsw
adc
mov
push
cmp
and
imul
xor
pop
mov
pop
imul
test
lock
xchg
cwtl
mov
push
mov
mov
push
push
in
add
cmpsb
pop
pop
std
popf
jo
sbb
fmulp
lret
adc
add
jmp
push
pop
mov
push
mov
xchg
jbe
sbb
enter
and
sbb
sbbb
inc
pop
sub
aaa
add
xchg
xor
pop
fstpt
add
or
fildll
sbb
push
daa
mulb
cwtl
inc
dec
rcrb
push
out
sub
ljmp
notb
pop
into
push
fdivl
push
xor
mov
mov
iret
mov
mov
movsb
mov
cmpsb
in
mov
lods
sbb
filds
dec
lods
out
xchg
xchg
test
lret
push
and
and
mov
push
loop
enter
sub
loope
icebp
push
daa
add
jno
leave
rcr
cmp
insl
jmp
addb
sbb
mov
adc
bound
inc
daa
add
test
push
cld
outsl
stc
jnp
arpl
fs
xchg
sub
add
sbb
clc
push
add
or
cmp
pop
fildll
push
and
inc
adc
jae
sbb
mov
pop
xor
leave
je
xchg
addr16
pusha
pop
mov
test
mov
cmpsb
mov
push
mov
mov
adcl
sbb
adc
shl
xchg
push
popf
push
push
aad
clc
stc
inc
sbb
test
push
in
popa
or
mov
addr16
das
jecxz
lret
fdiv
lret
insl
xchg
mov
arpl
or
mov
shll
es
arpl
pop
mov
cld
cmp
sub
je
out
test
mov
add
jb
pop
dec
pop
mov
adc
andb
icebp
lahf
xor
jl
sub
or
and
pushf
fwait
call
xchg
cli
add
cmp
push
mov
iret
jg
jne
jae
pusha
test
dec
push
rorb
movsl
je
int3
mov
and
adc
jp
inc
sub
nop
shrl
adc
mov
je
int
mov
add
cmpsl
adc
mov
jo
dec
sbb
mov
mov
xchg
outsl
sub
fstpt
lret
out
test
stos
pop
push
insl
push
jnp
sbb
stc
mov
inc
jae
mov
mov
or
std
cmpsl
loop
popf
mov
sbb
roll
and
lock
out
mov
test
add
int3
mov
in
xor
cltd
push
dec
cmp
or
jnp
add
mov
jns
mov
and
scas
pop
xchg
fwait
pop
mov
inc
loope
xchg
or
cmp
cmpsl
mov
pop
adc
es
loopne
pop
inc
mov
pop
frstpm(287
dec
in
mov
xor
dec
or
popa
xor
repz
cli
or
insb
push
mov
mov
add
icebp
sbb
and
subb
imul
mov
outsb
push
ret
dec
xchg
pop
cwtl
fdivl
mov
fsubrs
push
mov
ljmp
test
das
mov
inc
sbb
jmp
shrb
xchg
ficoms
dec
fwait
enter
orb
loope
aaa
jg
sub
cld
dec
out
repz
push
adc
loopne
shrl
xor
add
out
out
test
mov
mov
inc
jg
outsl
pop
jbe
push
aas
push
das
es
ss
out
out
test
mov
mov
inc
jg
outsl
pop
jbe
push
aas
push
das
es
ss
cmpsl
cmpsw
test
mov
popl
push
outsl
pop
jbe
push
aas
push
das
es
ss
out
out
test
mov
mov
inc
adcb
pop
jbe
jbe
data16
inc
lock
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
sarl
rcl
out
negb
jmp
inc
pop
jno
popa
je
push
add
xor
and
rol
rcl
out
notb
cmpsb
mov
push
add
gs
xor
and
rcr
rcl
loope
xchg
lahf
orl
add
dec
jbe
inc
bound
jo
ss
mov
adcb
dec
cmp
pop
ja
int
fnstsw
in
adc
mov
fwait
jge
add
insb
or
sub
cmpsl
outsl
mov
out
adcl
fistpll
cmp
cmp
nop
xchg
int3
rorb
push
ret
sub
mov
mov
push
fsub
ss
xchg
rcl
out
xchg
cmpsb
xchg
push
dec
dec
dec
push
push
push
test
out
push
imul
cs
mov
fwait
sbb
push
sub
mov
push
popa
and
jbe
outsb
add
cs
stc
ss
add
dec
pushf
sub
add
inc
mov
sub
arpl
pop
rol
mul
in
xchg
xchg
scas
push
pop
inc
dec
jno
popa
outsl
adc
add
xor
and
mov
test
std
ror
clc
aam
loopne
adc
inc
adc
or
inc
jne
jne
sarb
test
xlat
cmc
in
movsb
mov
mov
aaa
xor
and
je
push
jns
dec
and
xchg
adcl
mov
push
jno
popa
jbe
push
add
xor
and
rol
rcl
out
notb
cmpsb
mov
push
jno
popa
jbe
push
add
xor
and
rol
fs
dec
mov
mov
fdivrl
add
jo
fs
cmp
pop
cmp
xor
movsl
xor
xor
lods
repnz
dec
cmp
mov
lods
frstor
inc
leave
aam
ret
bswap
test
pop
or
je
mov
std
addr16
pushf
into
push
lds
sbb
inc
adc
sub
xchg
shlb
aaa
pop
jle
and
addr16
js
stos
or
adc
or
xchg
add
adc
dec
push
dec
pushf
pop
leave
in
mov
jae
scas
imul
sarl
inc
mov
inc
mov
out
dec
dec
cmpsl
fs
out
cwtl
push
bound
and
cs
push
andb
sub
das
xor
jbe
cmp
push
xchg
in
xor
into
mov
cmp
es
cmc
cmpsb
or
inc
adc
lahf
inc
mov
inc
out
add
lods
push
outsl
dec
pop
sahf
jecxz
or
in
push
push
xchg
pop
test
out
notb
js
andb
sti
out
jnp
stc
xor
filds
xchg
push
sahf
xor
push
fdivs
es
mov
sbb
cld
sbb
rolb
mov
sahf
inc
repz
stc
mov
inc
dec
arpl
xchg
lret
adc
mov
push
outsb
sbb
jle
dec
mov
jne
shll
jb
and
out
push
push
jne
insl
inc
imul
xchg
mov
xor
jnp
fstps
jno
add
out
repz
popf
ja
sbb
stc
jg
dec
xor
cmp
and
hlt
out
or
mov
cli
movb
xor
dec
std
aam
jne
xor
xchg
lea
nop
mov
jp
pop
jo
psubq
pop
add
in
push
sub
out
dec
xchg
mov
int3
dec
loopne
es
push
jecxz
test
push
fdivs
mov
outsl
popf
loope
jmp
xor
jnp
or
loope
fstps
cs
jge
adc
je
adc
pusha
aad
cmp
cli
xor
mov
outsl
add
ss
gs
sub
lea
rol
aas
xchg
adc
mov
lods
adc
jg
stos
jne
fisttps
xlat
insb
jnp
dec
cwtl
xor
jns
push
loopne
sub
pop
and
rorb
inc
push
lods
test
gs
sarl
push
fstpt
pop
js
dec
out
pop
std
outsl
inc
xlat
xor
lea
addb
and
and
mov
ss
les
sub
ret
push
hlt
daa
cmp
jle
or
sbb
mov
sub
add
sbb
imull
sbb
adc
add
es
mov
test
push
fbstp
mov
out
and
mov
xchg
mov
sub
xchg
mov
mov
inc
in
sub
in
dec
xor
mov
out
cmpsb
idivl
pop
lahf
mov
aad
sti
cwtl
sub
lock
aas
adc
sbb
push
mov
ss
mov
and
push
sbb
inc
and
cmp
sbb
mov
mov
jb
mov
jae
ficomps
xor
rorb
stos
or
outsb
shll
arpl
sub
push
daa
sub
lea
in
into
std
rorl
mov
mov
call
popa
sbb
mov
fidivs
sub
fildll
fidivs
ja
les
neg
fs
jno
call
push
jne
push
sbb
sub
cmc
repz
mov
pop
mov
ret
in
aas
pop
js
cmp
cmc
push
and
pop
push
sbb
ljmp
xchg
jnp
lahf
stos
pop
mov
das
mov
and
adc
dec
cmp
jb
stos
pop
inc
test
enter
fimuls
stos
cwtl
and
in
cmp
insl
xor
cmp
dec
cmp
lret
xchg
hlt
sbb
iret
sarl
cmp
xor
inc
jle
repnz
cmp
sbb
movsl
jge
xor
std
adc
jp
mov
mov
push
sahf
cmp
cmpb
dec
sahf
sbb
inc
push
sub
loope
cmc
and
lahf
ss
pop
ja
jp
and
loope
xchg
push
push
fnstcw
inc
data16
xor
pop
push
add
dec
dec
idiv
clc
jp
jo
clc
mov
jbe
mov
clc
shll
push
cmpsl
sbb
dec
dec
or
les
xchg
inc
xorb
and
and
push
iret
les
xchg
into
jns
cltd
jno
push
inc
jmp
jp
test
test
mov
cli
dec
into
daa
xchg
cli
fucomp
in
jle
bound
lods
sti
outsb
test
xlat
push
ret
jae
sbb
nop
cmp
test
dec
aad
add
in
pop
xchg
repnz
dec
inc
hlt
or
rolb
rcr
or
adc
mov
sbb
add
jo
and
aas
cmpb
aam
ljmp
mov
mov
test
cmp
cmp
push
jno
push
sbb
int3
inc
loop
ja
add
jmp
mov
dec
fisubrl
dec
or
sub
or
add
xor
mov
cmc
adc
repnz
pop
pop
adc
leave
fs
lret
jge
sbb
xchg
es
dec
or
jg
or
jns
pop
sbb
aad
sub
cmp
mov
fldl
jle
popf
loope
push
dec
gs
leavew
icebp
xor
mov
jge
mov
xor
xor
sub
inc
xchg
cmpsb
ret
add
out
mov
pop
ss
jne
stc
cltd
dec
inc
dec
stos
sub
rcl
ja
shll
xor
inc
rolb
or
adc
adc
mov
xor
xchg
das
test
popa
enter
mov
sub
dec
sub
scas
mov
dec
icebp
ret
rcll
scas
ja
scas
insl
data16
inc
dec
les
sti
xchg
shl
xor
and
push
mov
cmpsb
or
add
push
rcrl
jge
mov
jb
outsb
and
cli
pop
out
hlt
cmpsl
cmp
cs
mov
icebp
sbb
push
pop
iret
dec
xor
je
lods
mov
cmp
sub
and
push
lcall
mov
pop
xchg
dec
sub
push
jb
cwtl
stos
mov
xchg
aas
xchg
or
test
jecxz
jno
or
mov
mov
push
lahf
pop
xchg
fdiv
sahf
movsl
sbb
pushf
lret
ficoms
mov
add
pop
xchg
testb
stos
inc
movsb
int3
dec
xchg
jns
adc
or
outsb
jg
mov
add
dec
pop
mov
push
push
dec
cmp
push
mov
pop
lods
sbb
mov
sub
xchg
sbb
pop
sbb
lods
xor
aam
add
adc
dec
cmp
arpl
xlat
ds
aam
or
test
or
cmp
adcl
mov
imul
pcmpeqd
iret
lcall
pushf
adc
sub
mov
push
mov
mov
xchg
dec
pop
repz
out
cs
jnp
cltd
sbb
add
and
aad
fxam
jbe
push
or
sbb
ret
mov
dec
fistps
inc
lahf
aaa
adc
xchg
or
test
and
dec
adc
imul
and
jb
outsl
ljmp
or
mov
pop
call
aad
jne
popf
jne
mov
xor
push
ss
leave
adc
sub
xchg
inc
jmp
or
dec
pop
mov
pop
cmp
call
sbb
sbb
lahf
push
shr
shll
testb
jb
push
dec
add
cmove
pop
imul
push
jge
xor
daa
sbb
mov
dec
pushf
jle
bound
aaa
sbb
adc
sbb
mov
stos
push
js
sub
mov
les
inc
loop
sbb
call
inc
inc
in
addb
cmpl
xchg
movsb
sti
mov
xor
notb
scas
mov
adc
jnp
stc
mov
sbb
frstor
aas
jns
push
ljmp
mov
sbb
mov
ret
addr16
mov
testb
orl
popf
ss
mov
js
imul
fbld
out
push
out
jnp
fs
scas
lock
test
and
lret
addr16
dec
scas
cmp
jmp
bound
inc
dec
dec
out
stos
lret
jl
inc
lea
or
std
fiadds
scas
ds
lods
and
sti
lock
push
or
pop
mov
popf
jne
inc
push
pop
push
mov
mov
add
fdivl
loopne
repz
push
ret
into
mov
mov
popa
insb
push
push
mov
pop
sbb
pop
call
lahf
mov
pop
jno
int3
cmp
add
cli
lock
mov
push
jl
test
lret
fidivs
xor
pop
mov
loop
lods
loope
jle
out
daa
xlat
or
xchg
repnz
mov
into
mov
adc
pop
mov
lret
fists
add
gs
imul
jge
pop
adc
arpl
out
mov
jo
lret
cmpsl
push
mov
movsb
adcl
cmp
adc
insb
iret
js
cmpsb
fsubrs
xchg
int
jo
lods
mov
in
mov
rcr
aad
nop
stos
rcl
add
js
dec
add
rorb
sbb
stc
xchg
pusha
sti
cmc
pop
insl
sub
xchg
sarl
dec
fistps
or
iret
mov
and
fcomps
xchg
and
dec
into
sub
mov
daa
sub
cli
out
sbb
pop
fucomp
aam
cmp
xorl
fucomip
mov
andb
ret
lea
ror
mov
xchg
xchg
add
sbbb
add
and
push
insl
xchg
dec
xor
shrb
mov
pop
inc
fcmovbe
jmp
push
cli
xchg
fucomp
mov
inc
call
outsb
mov
lods
aad
lahf
pop
mov
xchg
stos
out
mov
mov
stos
xchg
fisttpll
and
sub
fmull
push
add
jl
outsl
js
and
mov
sar
pop
push
lea
data16
std
sub
pusha
mov
jo
popf
pusha
lods
xor
and
ja
adc
in
mov
ja
jbe
jmp
mov
push
mov
roll
mov
cmpsl
dec
inc
fisttps
cmp
xchg
scas
xchg
pop
cmp
sbb
push
add
test
sbb
das
jae
pop
shlb
out
mov
jne
jg
jmp
lcall
popf
pop
and
fwait
ret
xchg
js
jae
adc
jl
subb
lock
push
int
fwait
cmp
inc
sub
sahf
cmc
mul
xchg
fnstcw
in
push
mov
popa
mov
lahf
out
inc
leave
mov
es
stos
jno
jo
movsl
push
xchg
mulb
pop
imul
xchg
dec
not
sub
or
imul
fs
mov
jae
dec
ss
popa
xchg
cmpxchg
or
imulb
push
jo
loopne
xchg
xor
out
jmp
imul
cmp
push
fisubs
cmp
ja
lds
add
out
xor
lret
and
popa
aas
scas
push
add
fbld
andb
fnstsw
xchg
or
xor
scas
or
call
clc
clc
fsubrl
in
sbb
jo
or
movsl
mov
loopne
sub
add
ror
cmpl
call
aam
pop
enter
push
stc
inc
adc
rclb
out
loop
add
daa
pop
dec
xor
jae
scas
adc
movsb
mov
test
mov
movsb
lock
add
sahf
xchg
mov
xchg
and
adc
dec
pop
cmpsb
dec
inc
or
jns
mov
sti
flds
imul
and
std
cmpsl
sbb
push
jle
adc
imul
inc
loop
aam
int3
inc
pop
std
jbe
sbb
stc
adc
sub
push
pop
cmp
repnz
shll
mov
add
jmp
sbb
imul
rcrl
movsb
cltd
pop
mov
ffree
xor
shl
xchg
pop
pop
dec
lcall
pop
lret
mov
orb
addr16
lahf
mov
loope
faddl
fisubrs
lret
movsl
xor
jo
ret
ficomps
fbld
jmp
xor
jge
in
pop
mov
mov
mov
fwait
sahf
inc
out
inc
jo
cmpsb
xchg
dec
cltd
sbb
mov
cmp
lock
pop
aaa
stos
xchg
into
roll
mov
mov
push
test
popf
pop
pop
sub
movsb
and
pop
jle
loop
outsb
sub
bound
aaa
dec
enter
adc
data16
adc
cmp
push
pushf
dec
mov
pushf
scas
add
sbb
mov
dec
dec
pop
jo
dec
insb
add
lods
repnz
stos
push
xchg
pop
mov
pop
enter
and
daa
push
adc
adc
xchg
mov
and
addr16
or
fcomi
and
imul
inc
mov
xchg
mov
mov
mov
mov
adcb
push
rcrl
orl
jg
and
daa
add
cmp
roll
fisubs
mov
fildll
into
lret
fidivs
data16
nop
mov
cmp
push
addr16
sub
movsl
js
rcrl
sub
inc
push
pop
and
sbb
stc
mov
mov
js
cmp
pushf
mov
mov
icebp
negb
mov
mov
add
cmp
cli
push
jl
icebp
mov
mov
incb
mov
adc
mov
jmp
mov
roll
jb
mov
jle
mov
sub
cmpsb
test
push
sub
add
dec
sarb
inc
jnp
mov
popa
mov
mov
shrl
scas
lret
mov
sub
add
xchg
cwtl
sub
cmp
sti
fidivrl
negb
push
pop
fisubrl
popa
pop
out
jns
lods
aad
js
idivb
inc
repz
enter
test
or
add
mov
dec
test
ret
add
inc
sbb
dec
aad
adc
sbb
stos
cmpsb
pop
js
pusha
xor
pop
inc
mov
or
jns
jo
and
or
iret
ja
in
jle
pop
push
mov
sahf
rcl
in
push
into
xchg
sub
fcompl
sbb
nop
mov
push
ja
sub
adc
movsb
adc
out
roll
loope
push
cmp
test
call
adc
mov
push
sbb
out
push
bound
fsincos
push
daa
fcoms
xor
les
xchg
repz
imull
push
push
push
dec
dec
test
xchg
in
fldcw
adcl
sbb
stos
xor
adc
sbb
xchg
mov
push
rcrb
ror
ret
frstor
jl
mov
mov
imul
pop
and
cmp
mov
leave
and
mov
subl
pop
dec
movsl
xchg
in
sarb
jbe
jl
dec
xchg
cmp
int
repz
clc
lock
cld
sbb
cmp
nop
push
mov
push
ss
cwtl
hlt
repnz
clc
mov
cwtl
xor
cmpsl
insb
fcomps
mov
into
inc
insb
jnp
movsb
mov
movsb
mov
xor
bound
and
das
iret
fcmove
add
mov
pop
mov
mov
inc
les
sbb
mov
ljmp
push
and
xchg
outsl
rcll
ss
mov
jne
dec
sub
pop
xor
pop
pop
mov
or
inc
gs
sbb
movsb
jle
shlb
test
ss
rcll
popa
jb
mov
mov
dec
dec
sbb
jne
mov
pop
mov
sti
sahf
xor
fisttpll
and
add
lods
mov
ret
test
lods
and
push
jle
cmc
stc
call
aam
sub
arpl
rclb
fisttpl
push
imul
jo
mov
iret
into
imul
dec
outsb
dec
add
push
inc
sarl
pushf
pop
scas
pop
pop
cmp
sbb
jmp
jecxz
fwait
jp
out
pop
in
cmp
insb
mov
sbb
daa
mov
mov
repz
push
loopne
adc
mov
xchg
dec
movsl
jg
cmp
pop
mov
fwait
repz
and
mov
mov
and
nop
xor
cli
sub
xor
push
cmp
push
xor
sbb
cwtl
leave
outsb
stc
inc
fisttpl
jge
fs
data16
sbb
sbb
jo
sub
scas
inc
sti
push
popa
cltd
lret
mov
mov
into
out
mov
or
mov
insl
lcall
cmp
xor
mov
xor
imul
and
jo
fcoml
jbe
fwait
lret
push
cli
pop
mov
dec
mov
xor
xchg
fwait
jmp
mov
movsb
add
pop
sbb
lock
insl
cmpsl
mov
inc
repz
aas
hlt
sbb
in
icebp
sub
popa
dec
aaa
outsb
stos
push
mov
call
add
or
repnz
lea
xchg
jp
push
xchg
lahf
fcmovne
repnz
outsb
adc
out
and
sbbb
pop
sub
pop
test
loopne
add
in
in
arpl
lret
jo
shll
mov
mov
imul
test
cmpsl
scas
pop
mov
sti
arpl
test
pop
fdiv
add
add
adc
pop
je
movsl
pop
push
sbb
push
rcl
push
inc
dec
dec
and
cmc
inc
out
mov
cmp
xchg
loopne
or
mov
stos
sbb
push
int
inc
out
popf
or
mov
or
sarl
cs
or
jo
adc
scas
out
roll
push
imul
mull
xchg
lret
sbb
xlat
cmpsl
and
addr16
xchg
js
psrlw
or
stc
inc
xchg
jne
sbb
in
into
hlt
clc
jg
imul
push
test
lods
and
lds
out
adc
add
rorl
lock
xchg
sti
mov
xor
adc
jae
adc
inc
jo
lock
movl
and
and
and
mov
add
into
cwtl
dec
jnp
aas
shll
movsb
ljmp
sbb
add
mov
cmp
popf
jg
or
xor
inc
int3
gs
sar
mov
test
mov
xor
repz
mov
dec
hlt
lods
jecxz
sub
inc
sub
aaa
dec
pop
fisubrs
pop
push
jmp
xchg
rolb
or
mov
and
jbe
dec
ds
in
rcrl
pop
xchg
iret
mov
enter
push
sub
loope
xlat
add
mov
outsl
lret
cmp
push
mov
cmp
sub
out
daa
idivl
fwait
fwait
inc
xchg
xchg
repnz
scas
and
sarl
imul
push
xchg
ljmp
xchg
push
xor
inc
mov
cwtl
or
mov
add
fcmovne
and
add
add
es
in
adc
pushf
icebp
stos
pushf
neg
mov
aad
jne
stos
rcrl
push
mov
je
cmpsb
lret
add
mov
lea
sahf
jmp
loop
inc
add
mov
sub
inc
adc
fmul
and
adc
insl
dec
sub
push
cmp
repnz
lods
inc
mov
lret
mov
and
lahf
pop
add
test
jge
cmp
dec
cmp
pop
xor
test
orl
bound
push
mov
xchg
shlb
dec
scas
sbb
and
xchg
push
xchg
loope
addr16
cmpsl
mov
imul
out
mov
pop
jle
jno
shll
push
xorl
int
out
out
fcoml
pusha
stos
dec
andl
or
fbstp
jnp,pt
scas
jnp
rcr
cltd
subb
pop
cltd
adc
pop
out
in
fsub
or
inc
bound
adc
inc
mov
out
aam
cmc
and
xchg
inc
push
mov
es
notb
and
sub
xor
out
aas
repz
mov
aas
or
pop
je
jno
pop
push
dec
mov
jnp
ljmp
or
notb
cmpsb
mov
push
jno
popa
jbe
push
add
xor
and
rol
rcl
out
notb
cmpsb
mov
push
jno
popa
jbe
push
add
xor
and
rol
rcl
out
notb
cmpsb
mov
push
jno
popa
ja
push
add
xor
and
rol
rcl
out
notb
cmpsb
mov
cld
add
mov
into
leave
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
scas
mov
popf
xchg
in
mov
popf
in
nop
repz
fnsave
or
arpl
dec
inc
dec
push
leave
mov
popf
xchg
in
jecxz
repz
fst
sub
add
jae
inc
pop
push
adc
addl
jecxz
repz
fst
dec
sbb
js
push
xor
pop
sbb
add
mov
hlt
jg
and
divb
push
push
push
add
stos
dec
enter
stos
inc
repz
sbb
inc
iret
push
fcmovnu
sahf
dec
push
mov
loope
xchg
mov
mov
gs
je
jmp
mov
push
jnp
cmp
sarl
cmp
mov
aad
push
loop
jecxz
sub
subl
es
jecxz
xchg
xor
dec
mov
mov
lods
push
add
jecxz
or
cmp
test
lcall
sub
push
add
and
andb
sub
xor
call
and
xchg
pop
push
mulb
popf
xchg
or
test
int
jnp
jmp
cmpsl
xor
sub
jae
inc
pop
adc
stc
vpmullw
cmpsb
frstor
push
push
adc
and
cmp
loopne
fdivr
incl
cwtl
fnstsw
lods
mov
dec
outsw
pop
or
or
sbb
ss
shl
in
test
repz
fst
sub
add
jae
inc
pop
push
lods
mov
popf
xchg
in
jecxz
repz
fst
sub
add
jae
inc
pop
push
lods
mov
pop
inc
and
orb
jp
sbb
inc
jl
pop
shl
pushf
outsl
push
mov
cmpsl
adc
mov
inc
inc
outsl
jecxz
push
fdivrs
and
testb
fisubl
in
or
loop
cmpb
xchg
fucomi
cmp
clc
add
iret
bound
inc
cld
pusha
mov
ret
seto
or
sbb
push
cmp
adc
pop
pop
mov
int
sbb
jg
jmp
and
mov
dec
push
sbb
insl
cld
jmp
sarl
mov
fadd
testl
sti
enter
lret
cld
pop
cmp
mov
cmp
test
mov
pop
sbb
xor
jnp
mov
jle
cmp
sbb
sub
mov
inc
dec
bound
add
mov
or
push
cltd
pushf
in
out
lods
loop
bound
nop
insb
jae
sbb
sub
push
mov
outsb
adc
cmp
adc
arpl
fwait
dec
or
test
rcrl
sti
and
cmp
sarl
fisubs
push
mov
fldenv
xchg
outsb
rorl
cmp
mov
mov
mov
fistl
test
mov
dec
daa
pop
outsb
mov
xlat
clc
cmc
decl
add
add
xchg
inc
xor
ss
dec
popa
xchg
push
xchg
adc
mov
sub
adc
arpl
repz
or
mov
or
cld
sbb
fadds
dec
pop
mov
and
add
cwtl
js
in
mov
mov
arpl
outsl
out
cmpsl
mov
nop
out
sbb
push
imul
mov
adc
pop
push
rorl
sbb
je
enter
test
adc
fiadds
loop
xchg
cmpsl
lret
jmp
aad
ja
xchg
push
imul
ror
jmp
lods
fwait
xchg
xchg
clc
jb
in
cmc
push
pop
mov
sbb
fs
loop
or
negl
xlat
popa
dec
mov
test
rclb
pop
push
sbb
push
pushf
xchg
movsb
mov
push
adc
mov
inc
cmp
adc
push
mov
mov
test
pop
mov
test
mov
jb
inc
cmp
scas
outsl
pop
fmul
enter
dec
frstor
in
pusha
mov
inc
sbb
push
repz
mov
jp
test
mov
repz
mov
adc
aad
test
jp
std
lret
cmp
loopne
push
add
sub
xchg
jmp
mov
insb
fwait
push
add
or
mov
ds
push
jnp
mov
jl
push
aaa
loope
mov
pop
xor
fs
push
or
cmp
arpl
int3
sbb
xchg
push
ret
fidivrl
mov
cs
jb
imul
pop
dec
and
mov
pop
xchg
andb
les
fwait
jmp
push
pop
cmp
push
orl
daa
test
pop
popa
stos
mov
add
loope
dec
jl
in
out
add
shll
dec
mov
mov
dec
xchg
pop
fscale
jnp
push
cmc
mov
push
das
sti
jnp
scas
mov
inc
mov
mov
mov
and
dec
and
lods
pop
xchg
mov
dec
xorb
jmp
adc
or
mov
aas
inc
ffreep
ljmp
cmc
std
rorb
loopne
ss
out
push
daa
test
push
lret
shrl
pop
dec
and
pushf
rcrb
mov
rorl
or
jmp
sarl
sti
and
js
xchg
int3
push
ja
jnp
test
pop
outsl
add
rcll
jns
sbb
in
mov
push
pop
lock
fadds
xor
jb
mov
jnp
and
mov
inc
test
das
pop
clc
mov
jb
int3
test
mov
dec
and
lret
int
pop
cmc
xchg
lret
sbbb
insb
dec
test
out
xor
paddq
call
mov
icebp
add
add
mov
clc
mov
int
and
pushf
inc
xor
aaa
mov
popa
mov
mov
insb
pop
add
fiadds
or
xor
push
xchg
and
mov
leave
dec
pop
mov
cmp
fimuls
fsts
or
fstps
scas
jne
mov
mov
xchg
push
adc
dec
shll
ss
adc
lret
dec
sbb
out
adc
fcom
outsl
xchg
mov
mov
test
xchg
std
lcall
lea
lcall
jecxz
xor
lods
mov
mov
std
add
imul
fsub
mov
and
mov
nop
xchg
push
xor
sahf
add
or
inc
dec
pop
movsb
test
cmp
insb
shrb
pop
cmc
xor
sub
cmp
ljmp
pop
scas
ret
add
adc
int
insl
xchg
inc
sbb
leave
mov
mov
cwtl
sbb
jp
shr
xchg
push
shlb
loope
push
lock
mov
pop
xchg
inc
lods
jno
movsl
jge
jmp
mov
outsb
int
hlt
dec
cmp
out
and
pop
enter
and
adc
push
mov
aaa
cmp
dec
shll
imul
addb
push
int3
insb
mov
jnp
pop
outsl
and
mov
addb
popf
fucompp
sub
add
xchg
push
push
inc
cld
cmpsl
les
insl
sub
push
loop
div
imul
pop
or
bswap
mov
jo
mov
out
jle
sub
ljmp
outsl
cld
rcrl
xchg
pop
xor
cltd
cmp
sahf
fistl
lcall
loop
pop
xor
pop
lret
mov
adc
cmp
adc
jge
pop
pop
xchg
pop
stc
cmp
imul
cmp
add
dec
or
mov
lds
int3
jb
shlb
hlt
or
jmp
xchg
gs
push
imul
iret
add
xor
icebp
sti
fiaddl
icebp
push
repnz
out
aaa
repz
mov
xor
jno
aaa
enter
and
jg
test
sbb
sahf
push
jno
add
or
jbe
cmp
and
xor
jp
out
jecxz
jae
and
into
roll
xchg
mov
and
or
xor
ret
xchg
or
mov
xlat
fcoms
rol
jge
aam
or
les
and
mov
int
lods
jno
imul
and
cmp
mov
push
les
in
popf
sarb
mov
jb
pop
mov
imul
stc
pusha
xlat
aam
scas
gs
cli
pop
subl
ret
lds
xchg
mov
cld
push
push
test
leave
xchg
ds
lahf
ficomps
or
or
inc
loopne
fidivs
or
pop
jg
clc
adc
in
int
xchg
std
gs
stos
data16
dec
mov
stos
movsl
sti
mov
and
and
xlat
cmp
std
scas
pop
imul
wrmsr
add
and
dec
xor
mov
jo
fdivl
xchg
rclb
dec
mul
or
xchg
mov
stos
push
sub
test
xor
shr
arpl
sub
adc
into
xchg
inc
pop
push
fadds
dec
fisttpl
lea
scas
stos
mov
adcb
shlb
fimuls
add
jbe
push
jle
mov
daa
adc
shll
jl
rcrb
pop
negl
cmp
push
pop
mov
push
fxch
xchg
mov
jbe
pop
out
pop
pop
xchg
cmp
aam
mov
jne
scas
mov
pop
push
daa
iret
xchg
movsl
jbe
xor
adc
push
pop
cmp
push
adc
pop
sarl
lock
xchg
iret
add
mov
jo
add
sbb
cs
mov
jae
add
sbb
dec
adc
clc
cwtl
lds
jae
inc
out
push
ffreep
jb
and
cmp
imul
pushf
xchg
xchg
jbe
nop
jne
pop
jo
xchg
xchg
inc
in
scas
test
xor
aam
add
enter
mov
mov
inc
mov
outsb
cmp
xchg
filds
insb
pushf
fsubl
pop
xor
dec
scas
push
push
cli
pop
fldt
movsl
add
rcr
pop
cmp
or
pusha
adc
and
lret
aad
pop
xchg
notb
xor
stos
jbe
push
inc
repz
into
jb
and
inc
addl
out
pop
dec
lea
icebp
insb
nop
fildll
mov
lea
lods
nop
mulb
push
in
mov
cli
out
int3
dec
enter
das
mov
add
pop
in
jne
inc
test
loopw
out
dec
repz
cmp
stos
je
pop
and
and
jp
cmp
sbb
dec
loopne
dec
fucomi
pop
or
out
add
out
cld
cmp
push
or
sbb
dec
hlt
idivl
cmp
mov
repz
sub
pop
pusha
jge
testb
imul
sbbb
arpl
push
mov
frstor
jge
mov
sub
cmp
xchg
jmp
sarb
adc
pop
pop
add
inc
push
lret
xchg
jecxz
sti
sub
add
dec
icebp
gs
sbb
cmp
into
xor
push
pusha
pop
or
sbbl
hlt
jp
sbbl
xchg
mov
cmp
xchg
adc
push
mov
rep
adc
insb
lcall
xor
lock
stos
add
movsl
cmpl
in
sbb
cmpsl
mov
stos
mov
and
pop
aad
adc
xor
sub
stos
test
xorb
mov
mov
shlb
lea
mov
loope
mov
jecxz
hlt
mov
dec
int
jg
pop
fsubrs
lds
fiaddl
push
inc
mov
rcrb
fsubrs
aad
daa
push
push
loop
mov
inc
fdivrl
jle
repnz
push
xlat
ror
jb
xor
cmp
testl
ja
push
aaa
testb
les
lcall
stos
adc
imull
and
sahf
fs
imul
stos
ljmp
cmpsl
pop
imul
mov
push
and
stos
call
test
push
xchg
or
scas
mov
push
push
icebp
or
sbb
push
insl
push
mov
cwtl
jno
repz
mov
xlat
sub
loope
jle
inc
or
push
fnstenv
and
loope
fmuls
call
xchg
insl
xchg
cs
icebp
jns
leave
inc
fdivrl
inc
dec
fs
test
xchg
jbe
ds
add
fdiv
sbb
jno
push
cmp
cmpsb
mov
repnz
cmpl
outsl
out
aas
pop
mov
mov
cwtl
xor
clc
dec
ret
push
popf
push
es
pop
pop
dec
outsl
movsl
adc
scas
icebp
notb
xchg
scas
stos
dec
sub
xor
add
popf
push
add
mov
pop
in
push
stc
movsl
je
add
mov
dec
lea
adc
dec
mov
adc
adc
dec
shrb
pop
shll
rol
mov
sbb
mov
idivl
cli
pop
pop
movzbl
jb
mov
cld
jbe
sub
mov
faddl
addr16
inc
sbb
mov
adc
adc
fs
loopne
adc
jbe
and
or
test
pop
xorb
test
lret
dec
push
mov
aam
aam
nop
cs
out
dec
dec
add
pop
fs
adc
test
insl
arpl
lcall
ror
pop
mov
mov
movsb
xchg
pushf
iret
addr16
jmp
push
xor
cmc
ret
xor
fnstenv
mov
arpl
push
cmpsl
inc
mov
shlb
push
frstor
lret
mov
or
fldz
pop
sarb
divl
inc
lods
hlt
sbb
arpl
xchg
mov
push
pusha
int
out
pop
insb
cltd
inc
xor
mov
adc
adc
xorb
add
shrl
rcrb
xor
mov
xor
int3
cwtl
sub
arpl
lods
aas
push
sbb
mov
and
dec
sub
xchg
push
sti
xchg
sbb
sub
push
inc
or
mov
and
sbb
add
call
mov
nop
shlb
lods
add
jp
xchg
cmc
lea
inc
sar
and
or
jecxz
lahf
dec
into
cmp
push
dec
adcl
out
sub
pop
mov
lea
mull
dec
xor
mov
mov
jb
loopne
push
mov
mov
cmp
add
add
sub
sub
lcall
mov
add
mov
ficomps
lods
xchg
ljmp
ja
scas
xchg
pop
mov
mov
out
jbe
mov
push
and
aaa
aaa
add
mov
es
cmp
sbb
std
cmpsl
iret
or
jecxz
xchg
pusha
mov
call
cmc
push
add
jns
and
sbb
stos
out
jmp
out
call
in
cmp
xor
lods
dec
arpl
jne
xchg
jle
iret
cs
adcl
push
lahf
out
stos
xchg
jp
test
mov
les
lcall
ljmp
pop
addr16
xchg
jo
popf
mov
mov
mov
mov
lret
jns
pop
mov
jnp
cs
leave
addr16
sarb
or
scas
jmp
ja
cwtl
btr
std
lds
jnp
jmp
cmp
mov
inc
mov
xchg
popf
loop
loopne
dec
inc
mov
mov
or
jmp
mov
mov
std
fs
or
sub
mov
fwait
lods
dec
push
test
jb
xchg
in
sbb
dec
insb
push
and
ret
sahf
mov
xor
mov
fldcw
jbe
sahf
mov
cwtl
or
out
mov
dec
xchg
dec
push
leave
mov
mov
dec
jge
dec
daa
clc
pop
pop
push
popa
sbb
push
outsb
mov
sar
or
mov
lock
sub
or
push
cmp
mov
outsl
les
fidivrs
or
sub
xchg
fnstsw
out
or
pop
ret
xlat
xlat
sbb
sbb
adc
rorl
movsl
cmpsb
icebp
jne
lret
and
popf
sahf
cwtl
lcall
nop
sub
jne
in
cmp
xlat
cmc
fnstcw
cmp
xchg
daa
jg
popf
mov
iret
add
icebp
push
push
insl
jge
push
jnp
cmp
in
scas
jg
mov
push
es
sub
cmpsl
cld
xchg
jge
push
adc
repnz
and
cmp
arpl
or
mov
dec
dec
outsl
jmp
mov
or
or
int
inc
jle
ds
mov
push
add
inc
mov
ljmp
ds
bound
mov
mov
pop
stos
in
jo
ret
rolb
mov
call
jmp
test
mov
inc
inc
hlt
repz
mov
gs
pop
frstor
mov
sub
or
repz
xchg
pop
jns
aad
pop
adc
xor
ffree
push
cld
test
pop
neg
mov
jns
fmuls
sahf
cmp
ds
je
push
stc
leave
inc
test
mov
int
popl
sbb
pop
arpl
push
xchg
mov
pop
shrb
cmc
jge
push
xor
cmp
outsl
imulb
out
addb
cltd
dec
mov
jge
cmp
lods
aas
sahf
jmp
xchg
push
lods
mov
mov
xchg
sub
and
enter
push
pop
dec
jo
andb
mov
and
xchg
popf
add
pop
adc
fsubrs
cmp
xor
dec
mov
adc
xchg
and
repz
jp
mov
jae
scas
cmp
jp
sbb
jnp
mov
sub
outsl
sbb
pop
jbe
dec
cmp
mov
gs
pop
in
fs
std
loop
xchg
mov
push
pop
int3
xor
or
xchg
mov
movsl
icebp
pop
in
or
cmpsb
shr
leave
xchg
mov
movsb
sub
fidivrs
cmpb
movsl
test
or
popa
ja
mov
shll
sahf
in
cld
add
xchg
mov
scas
insb
pop
les
inc
nop
in
shlb
push
mov
sub
add
cld
mov
xor
pop
adc
push
and
push
xchg
pop
adc
sub
data16
sub
inc
pop
fsubrl
popa
outsl
dec
aad
loopne
and
mov
outsl
rcl
cmp
add
movsb
sub
mov
xchg
cli
std
jecxz
dec
jl
cmp
push
movsb
fcmovbe
cmp
jmp
sti
inc
jg
or
or
popf
or
insl
lret
adc
or
sbb
enter
dec
push
mov
out
add
ficoml
xor
scas
scas
es
rorb
leave
inc
cwtl
scas
cltd
pop
mov
and
mov
mov
or
arpl
push
add
sub
pop
dec
aad
inc
push
dec
pop
fmulp
jbe
push
dec
xchg
outsb
xor
aaa
dec
not
cltd
fidivrs
dec
pop
les
ja,pt
pusha
jbe
jge
and
adc
xchg
es
sub
or
adc
pushf
mov
or
dec
inc
mov
jmp
out
daa
addl
pop
xor
sub
mov
jbe
add
add
stc
inc
cmc
cmp
enter
adc
dec
push
cs
sbb
popf
add
out
mov
clc
mov
lods
mov
xor
cmp
xor
cwtl
dec
rolb
dec
mov
testl
and
xor
add
sub
dec
dec
stc
xor
push
xor
lock
outsb
mov
and
or
shll
imul
xlat
cmpsl
cmp
ret
dec
ja
rclb
xchg
mov
mov
inc
inc
cmp
into
enter
inc
xor
mov
jne
bound
push
outsb
sbb
jecxz
out
fdivrs
push
or
sub
repz
pusha
fmul
shlb
aas
stos
inc
push
mov
push
push
jmp
or
lods
xchg
in
pop
mov
stos
aad
jno
cli
ljmp
fldcw
jo
xchg
cmp
cwtl
pop
insl
movhps
js
mov
cwtl
and
out
js
shld
fiaddl
xlat
mov
jge,pt
adc
addr16
or
mov
leave
repz
hlt
adc
or
cmc
fisubrs
xor
jmp
adc
push
mull
adc
je
push
mov
aaa
mov
or
mov
cmpsl
pop
testb
fisubl
mov
loopne
fs
push
mov
sub
out
popf
adc
addb
mov
mov
xchg
xor
loopne
and
subl
and
enter
jmp
ja
stc
adc
xor
xchg
dec
call
data16
es
push
mov
repz
in
push
int3
jp
ficoml
es
cmpl
push
call
loop
push
stos
and
adc
outsl
cmp
push
mov
cmp
mov
les
into
mov
mov
push
unpckhps
xor
insl
adc
adc
cld
mov
in
add
pushl
out
jle
push
jbe
jbe
cmp
push
repz
and
cmpsl
mov
cmp
sbb
jmp
ds
mov
in
mov
cmc
in
or
mov
jne
pop
push
test
jns
out
call
sar
push
dec
mov
ret
jl,pn
fwait
aas
cmp
idivl
mov
xchg
je
lock
mov
jmp
sbb
rolb
xchg
fsts
mov
push
push
push
iret
arpl
mulb
shr
xchg
jecxz
sub
sub
sub
mov
popa
mov
mov
ds
ja
mov
sbb
int
pusha
push
fmuls
jns
popf
push
push
mov
notl
adc
pop
sbb
sbb
or
inc
mov
xchg
pop
call
xor
jo
roll
adc
jo
fsubl
jne
je
cmpsb
test
fs
cmp
mov
movsl
divl
jge
and
and
mov
adc
add
idivb
fdivrl
dec
out
inc
xchg
stos
dec
add
fnsave
xchg
test
sti
pop
ds
mov
xchg
ljmp
mov
cmp
data16
jnp
es
lcall
nop
psraw
fistpl
in
cld
mov
pop
inc
mov
xor
push
fisubrs
push
adc
push
mov
xchg
in
jecxz
repz
fst
sub
add
jae
inc
pop
push
lods
mov
popf
xchg
in
jecxz
repz
fst
sub
add
jae
inc
pop
push
lods
cmpsl
lea
jge
std
repz
sbb
xor
add
jae
inc
mov
mov
cmpl
int
pop
sub
fadd
cltd
cmpsl
add
mov
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
insl
inc
jge
dec
addr16
ja
outsl
pop
js
pop
adc
out
call
int
lods
xchg
mov
inc
jge
dec
addr16
ja
pop
cmp
aaa
in
std
mov
out
imull
in
mov
inc
jge
dec
addr16
ja
pop
cmp
aaa
in
outsl
mov
ret
into
aad
mov
inc
sbb
dec
or
and
push
out
xchg
xor
mov
jb
inc
ss
scas
fidivl
adc
mov
and
ja
das
jo
xor
and
repnz
out
pop
pop
inc
daa
nop
adc
js
out
mov
inc
fistl
call
or
popf
ds
push
pop
aam
stos
pop
ja
push
ret
test
enter
mov
std
in
mov
cmp
cmpsl
clc
test
loop
mov
push
sbb
mov
cmp
addb
aaa
std
xchg
cmp
cmp
test
push
jb
lcall
mov
testb
push
dec
mov
mov
inc
jge
dec
addr16
ja
pop
cmp
aaa
in
std
xlat
int
lods
xchg
fimuls
sub
push
or
sbb
dec
imul
imul
mov
out
in
movsl
in
negb
inc
or
addr16
dec
dec
jbe
dec
push
pop
aaa
lahf
mov
fstpl
in
mul
or
jge
or
cmp
push
daa
sbb
xlat
int
lods
xchg
mov
inc
jge
dec
addr16
ja
pop
cmp
aaa
in
std
xlat
int
lods
xchg
mov
inc
sbb
rcl
and
std
lret
add
out
and
fld
mov
out
xchg
inc
push
or
push
shlb
call
loop
pop
jbe
int
pop
or
mov
sbb
cwtl
and
push
jo
jmp
mov
das
mov
out
inc
testb
jmp
out
fidivs
sbb
dec
nop
lods
add
hlt
sarl
push
add
in
in
addr16
scas
cmpsb
mov
aaa
daa
sub
lea
cs
scas
cmp
icebp
scas
icebp
outsl
sti
jno
push
outsl
es
packsswb
add
mov
fcomps
dec
int3
adc
add
cmp
insb
mov
icebp
notb
mov
imul
dec
pop
leave
mov
xor
test
mov
bound
inc
lds
sub
cli
adc
cmpsb
fadds
add
mov
adc
lock
sub
jmp
loopne
sub
lcall
push
shl
repnz
add
and
fs
cltd
pop
adc
push
add
push
cli
mov
out
jle
addr16
das
not
aas
xchg
mov
cmp
sub
jg
sub
lret
push
jns
xlat
inc
insl
in
and
insl
fldpi
jp
push
push
mov
adc
cwtl
sarl
imul
repz
push
movsl
add
and
xor
xor
xor
sti
mov
mov
inc
shl
mov
or
test
ret
mov
inc
call
push
push
mov
cwtl
mov
icebp
ds
fisubs
js
mov
or
sahf
cli
inc
sbb
outsb
shlb
xchg
pop
push
xchg
adc
aad
lret
movsb
cmp
mov
mov
push
pushf
xchg
shlb
cli
into
mov
lcall
shrl
adc
sahf
cmp
aam
stos
mov
cli
mov
stc
jmp
dec
sub
stos
stos
lret
push
movsb
xchg
sub
ftst
fcomps
aaa
das
lods
inc
xchg
or
xor
ljmp
mov
lret
mov
stc
scas
dec
aam
and
mov
aaa
in
or
push
mov
cmp
lcall
and
aam
add
pop
call
sbb
adc
loop
fsubl
loopne
ljmp
es
ret
sub
jbe
in
shl
sub
setle
sub
fs
and
xchg
sbb
and
dec
clc
mov
cwtl
das
stos
loop
lahf
add
mov
or
cli
lea
sub
addl
insb
cld
scas
pop
pop
mov
and
daa
popa
lods
cmp
ss
and
insb
mov
addl
gs
pop
lea
arpl
rcrb
mov
xor
lret
subl
negb
inc
add
xor
jo
jne
pop
mov
mov
and
into
add
or
test
subl
fisubrl
lods
int3
or
jbe
dec
dec
mov
pusha
ja
jecxz
lds
ja
stos
cmp
xchg
lea
jge
dec
push
movsl
mov
xor
fistpl
and
into
andl
cld
lss
out
in
aaa
xchg
outsb
mov
push
test
outsb
pop
pop
das
inc
jo
mov
stc
jl
cmp
testl
mov
jl
lahf
xchg
jmp
and
dec
mov
cld
mov
mov
pop
inc
adc
imul
inc
xchg
flds
rcl
jns
inc
fstl
sti
pop
in
clc
mov
jg
xchg
push
mov
push
adc
stos
jge
or
rorb
aas
fcom
ss
ss
pop
xor
cwtl
push
adc
jp
das
test
inc
push
mov
out
xor
dec
lahf
mov
inc
and
scas
scas
fistl
push
stos
sub
andl
mov
in
fidivl
pop
sub
ret
or
xchg
jbe
faddl
sahf
push
lret
pop
mov
fstpt
cmp
sub
jo
push
mov
xor
lods
into
ret
xchg
aas
leave
popa
ja
stos
das
dec
xchg
lods
sub
lcall
outsb
mov
adc
daa
xchg
in
addl
cltd
lret
xchg
inc
lcall
sarl
ds
cmp
cmp
addr16
clc
cmp
inc
ret
in
push
jno
add
dec
cs
push
cmp
xchg
nop
in
and
or
test
push
sahf
fucomp
mov
fildl
lods
jmp
sub
ljmp
pop
fimull
outsl
into
dec
jmp
adc
lock
cltd
rcll
arpl
adc
lock
loop
mov
dec
jg
stc
iret
push
adc
nop
imul
sbb
pop
sti
inc
mulb
mov
push
dec
pop
dec
inc
js
jmp
mov
lods
call
into
fdivrl
iret
mov
iret
leave
cmp
jge
mov
dec
add
lcall
xor
sbb
lret
or
ja
lahf
sarb
imul
push
xchg
pop
lahf
mov
lcall
sub
push
jge
out
mov
and
das
adc
mov
push
loopne
test
sub
add
or
cmp
sub
pushf
and
fbstp
sub
ret
jmp
es
adc
add
rcrb
popa
xor
in
int3
push
inc
shr
cmpsb
jmp
xor
ljmp
loop
repz
and
fucomip
fsubrs
lcall
adc
lar
cmpl
lea
aam
stos
pop
clc
mov
or
imul
add
add
repnz
and
cmp
js
repz
adc
orb
mov
ret
outsl
lods
cmp
jecxz
and
cld
dec
jbe
add
xchg
clc
mov
xor
xchg
add
cmp
jne
jbe
push
fadd
mov
aas
lahf
jmp
divb
loop
push
in
add
jb
stos
sbbb
push
test
jae
lods
lds
or
adc
test
xchg
sbb
aad
fsubp
xchg
adc
fnstcw
adc
dec
dec
sbb
xchg
ljmp
jmp
dec
cmp
pop
pop
add
cwtl
arpl
lods
rclb
test
dec
fucompp
imul
pop
jne
fwait
xor
mov
jl
hlt
rcrb
and
sbb
ds
les
and
in
pop
add
pop
aas
push
cld
rcr
inc
loope
das
inc
xor
cmp
and
nop
and
clc
fisubrs
fsts
xorl
rorb
add
mov
notb
cmp
popa
inc
sub
mov
cli
cmpsb
pop
int
jge,pn
insb
mov
ds
sbb
out
scas
outsb
or
out
rcl
ja
push
pop
iret
mov
inc
je
xchg
ret
pop
hlt
jae
pop
sbb
repz
f2xm1
adc
jle
cmp
aaa
loope
stc
inc
push
xor
jbe
cltd
adc
data16
cs
pop
mov
and
lock
roll
outsb
pop
out
outsl
jg
xchg
cmpsl
movsb
lret
xchg
jnp
xor
sbb
outsl
popa
inc
cmp
push
testb
ljmp
sub
mov
lock
mov
sahf
jmp
push
ss
fcmovbe
test
fstl
pop
and
push
mov
shlb
fmulp
mov
in
mov
pop
xor
and
es
xchg
jl
cli
popa
sub
les
movsl
fsubr
jmp
mov
pop
pop
in
imul
movsb
sbbb
into
ljmp
sbbl
cs
ja
mov
test
or
xor
push
rcrb
mov
es
push
in
loop
movsl
jns
jecxz
in
movsb
fidivrs
fisubl
and
mov
shrb
pop
in
xor
xor
jmp
dec
mov
dec
lods
test
inc
clc
orb
call
or
ss
fmuls
fdivrl
pushf
push
scas
sub
sub
push
pop
push
inc
outsb
push
mov
and
pop
sbb
aaa
aaa
jo
mov
out
sbb
ret
lret
data16
aaa
cmpsl
sarb
mov
push
and
push
or
stos
cmp
push
out
xchg
add
fstpl
xchg
adc
sub
outsl
xchg
or
mov
xchg
shll
mov
inc
mov
pusha
mov
xor
imull
fiaddl
rcll
dec
or
sub
inc
fstps
jno
in
shrl
jge
mov
std
push
add
cmp
xchg
psrld
sub
leave
mov
adc
int3
mov
sub
test
xchg
int
push
sub
lcall
dec
or
pop
xchg
insl
fidivl
cmc
jne
jecxz
and
arpl
shrb
jl
xchg
aaa
mov
imul
pop
hlt
xor
or
pop
inc
int3
mov
fidivrs
lock
mov
fwait
dec
fistpll
scas
cmovle
mov
push
movsl
ret
aam
jnp
push
jo
jp
adc
pop
cmp
add
xor
sbb
adc
xchg
xor
jno
and
mov
or
stc
mov
and
stos
lods
lock
andb
mov
sarl
xchg
icebp
sub
outsb
mov
std
mov
mov
push
shr
push
icebp
xchg
pop
xor
bound
mov
bound
pusha
cmp
xchg
outsl
lods
dec
pop
lret
lods
shrl
cmp
in
lret
js
repz
and
call
enter
icebp
mov
add
daa
jo
je
rcrb
je
mov
jge
call
lock
sbb
mov
dec
sti
mov
add
push
push
and
call
jmp
dec
fwait
push
dec
leave
js
fisubrs
adc
pop
fwait
adc
daa
cmp
mov
sbb
cltd
loopne
repnz
sub
dec
inc
push
stc
out
shl
repnz
mov
shr
int
jbe
and
jecxz
pusha
mov
leave
mov
xor
pop
add
jmp
push
pushf
xor
mov
out
dec
shl
mov
xchg
sub
cmp
push
xsaveopt
pop
jae
dec
ja
out
sbb
ja
sub
add
test
idivb
daa
arpl
push
addr16
out
xor
rol
bound
daa
push
and
xchg
sub
icebp
aad
lahf
lock
lods
mov
in
mov
xchg
popf
push
mov
out
inc
lret
jl
dec
es
inc
and
pop
mov
jg
repnz
mov
std
cmc
or
push
fldl
cli
cmc
in
or
pop
aas
jge,pn
pop
ljmp
cmpsl
xlat
imul
sahf
imul
leave
xchg
sahf
cld
fcmovnb
arpl
jge
pop
push
push
out
test
insb
or
pop
jecxz
icebp
fnstcw
shl
dec
aam
dec
out
sbb
daa
cmp
jae
adc
and
loop,pt
mov
dec
cli
push
dec
subb
mov
aaa
sub
push
and
xchg
push
std
ja
rorl
mov
adc
mov
pop
mov
int
sbb
push
cmp
jne
mov
mov
push
popa
xor
and
loop
mov
add
cltd
dec
sbb
jmp
int3
push
xchg
lahf
ja
enter
sahf
rcrb
pop
add
pushw
sbb
mov
cmpsb
cmp
pop
out
loope
lock
enter
hlt
scas
aaa
sbb
outsb
cmpsb
mov
stos
inc
scas
xor
mov
ljmp
ret
and
pop
xor
sarb
sub
loopne
notb
icebp
add
lret
fcomi
or
add
lock
inc
jae
in
mov
push
mov
xlat
pushf
rol
pop
mov
pop
movsb
aad
push
cmc
sbb
movsb
gs
dec
and
test
insb
xchg
icebp
out
push
jge
jne
mov
imul
inc
pop
or
cmc
xchg
xchg
jne
test
add
loope
call
test
aam
inc
jno
cmpsl
pop
or
shl
cmp
sbb
pop
push
das
inc
push
mov
into
push
push
or
icebp
add
dec
and
inc
pop
push
push
pop
rorb
ljmp
xor
out
inc
inc
push
movsl
sub
cmp
ret
mov
and
jne
in
xor
ret
xor
mov
outsl
std
cmp
dec
and
adcb
xor
enter
dec
clc
cmp
mov
xor
addr16
pushf
loop
outsb
loopne
adc
mov
cmc
push
mov
jae
ds
shlb
cmp
je
aaa
shrb
or
push
mov
push
int
ja
lods
dec
sbb
loop
das
mov
and
ret
jmp
jno
inc
adc
fistl
mov
cmp
xchg
cmp
or
scas
inc
xor
jmp
adc
lahf
add
imulb
dec
sub
cmp
icebp
repnz
adc
stos
insl
pop
lods
adcb
call
jg
pop
gs
imul
jb
xor
sar
scas
repnz
add
iret
jo
mov
pop
mov
int
fwait
std
lahf
fs
sbb
xor
xchg
xchg
sbb
mov
sbb
adc
xor
lcall
adc
cmp
mov
popf
scas
mov
les
in
push
xor
fidivl
rorb
inc
xor
lock
mov
pop
fbld
testl
sahf
xchg
jge
mov
jnp
xor
dec
shl
push
sub
mov
mov
sti
scas
mov
andl
xorl
and
mov
dec
out
popf
dec
mov
adc
and
jmp
pop
sub
adc
mov
fnstenv
mov
jns
pop
mov
and
into
into
pop
mov
sbb
out
adc
xlat
inc
pusha
jnp
mov
inc
sarl
mov
lcallw
or
xchg
out
pop
inc
mov
stc
dec
or
sbb
arpl
dec
xchg
lret
adc
sub
aad
test
jno
add
mov
cwtl
cmc
inc
daa
test
sub
sub
rorb
ret
or
mov
lret
push
sbb
fs
mov
outsl
je
mov
mov
or
add
mov
push
sbb
scas
adc
push
popa
data16
cld
pop
outsb
mov
push
add
call
push
sar
mov
out
jl
fists
mov
int
mov
stc
int
movsl
aad
ds
sbb
xchg
pop
outsb
add
fsts
pop
sub
inc
mov
adc
jg
push
lock
fwait
jns
bound
dec
and
adc
mov
mov
out
pushf
adc
mov
or
push
inc
scas
dec
sub
and
bound
in
nop
push
cmp
lock
dec
jmp
lods
mov
daa
sub
xchg
test
cmp
pmaxub
pushf
mov
jae
inc
cmp
add
xchg
jmp
rcrl
aad
imul
scas
roll
call
sti
push
imul
nop
xchg
lea
jge
cmpsb
imul
jne
jnp
push
in
cmp
sahf
addr16
sarb
loope
jmp
dec
mov
mov
push
ds
dec
mov
subl
or
pop
and
or
sub
scas
sub
dec
daa
xchg
xchg
lahf
mov
jns
xchg
pusha
sbb
cmp
mov
std
xchg
pop
jle
cwtl
fucomp
pop
inc
scas
jb
or
mov
insb
push
dec
mov
inc
inc
sti
lea
out
jns
ja
or
inc
mov
inc
ss
xchg
imull
ret
add
addr16
andl
mov
xor
and
pushf
fs
mov
push
ret
cli
mov
bound
mov
xor
dec
mov
imul
mov
inc
icebp
mov
mov
mov
fmulp
mov
clc
rcrl
adc
push
mov
inc
scas
dec
adc
cmpsl
push
ja
int
insl
outsb
daa
enter
loopne
dec
mov
mov
add
lret
loope
or
xchg
cmpsb
xchg
adc
adcb
mov
imul
mov
push
or
cmc
fmulp
clc
inc
scas
movsb
cmp
and
sub
adc
ret
jg
push
cmpl
dec
pop
and
or
int3
je
or
pop
xlat
jne
adc
das
push
push
shll
mov
adc
sub
addr16
aam
cs
push
xor
xor
ljmp
iret
push
sub
jbe
xor
or
lds
in
fs
sub
mov
pop
test
iret
mov
fs
lahf
insl
xchg
adc
pop
sub
es
add
adc
daa
lret
mov
cmpsl
jae
cmp
xchg
mov
fwait
jle
mov
bound
mov
jp
nop
cmp
clc
cmp
sbb
xlat
das
pop
test
and
push
rclb
jle
xchg
test
lds
lahf
jns
int3
xchg
lods
mov
mov
inc
mov
flds
out
leave
jmp
cmp
loop
adc
cwtl
outsl
leave
mov
sbb
dec
fadd
or
lret
negl
and
or
adc
mov
push
mov
xchg
and
js
inc
into
push
sahf
and
rcrl
jns
xor
decl
jge
push
popf
sub
mov
push
sub
in
rorl
add
sub
mov
fucomi
sti
push
sub
mov
dec
and
lret
mov
jmp
adc
ljmp
negl
in
out
pop
inc
add
orl
inc
nop
mov
ret
push
cld
cmp
mov
cmp
sbb
push
inc
and
movb
sbb
ljmp
popa
fisttpll
jbe
push
mov
mov
rcl
loope
push
mov
dec
jae
clc
jg
xor
lret
xor
sub
cmp
sub
xor
ret
cmp
icebp
inc
cwtl
nop
fldt
dec
cs
and
loop
rcrb
cmpsl
and
jp
test
mov
jns
fs
sarb
push
push
adc
std
jp
lret
xchg
and
outsl
in
adcb
jae
scas
and
push
loopne
movsb
imul
add
sbb
bound
fdivrs
aad
mov
call
push
movsl
inc
lds
dec
lahf
jge
push
and
jae
sub
imul
lcall
mov
or
test
jno
mov
mov
popf
repnz
aas
out
fsubs
sbb
divl
inc
aam
mov
imul
sbb
cwtl
dec
sub
lea
sub
sti
xor
lods
mov
shll
or
push
sbb
repz
mov
lock
scas
lret
adc
in
fnstcw
adc
xor
inc
xchg
lcall
mov
lods
and
inc
inc
data16
cmp
add
js
and
cmp
inc
fisttpl
in
sub
pop
pop
pop
cmc
aam
mov
add
mov
jp
push
or
xor
orb
shl
pop
adc
jmp
shrb
inc
jge
push
pop
scas
push
xchg
dec
int
mov
push
jne
mov
pop
hlt
push
xor
aas
loopne
stc
int3
xor
mov
push
adc
pusha
pop
popa
pop
push
adc
sti
and
mov
jne
aad
mov
sbb
lds
in
pop
ret
fcoms
cmpsb
outsl
xor
int
push
fisttps
scas
popa
lods
cmp
ror
sub
aam
aam
xchg
jmp
mov
adc
or
push
dec
iret
mov
pop
js
mov
pusha
dec
cmpsb
data16
mov
addr16
je
sub
and
stc
es
cmp
jl
mov
dec
push
pop
int
xchg
inc
push
or
adc
lds
out
push
int3
mov
sbb
mov
mov
scas
pop
icebp
inc
xchg
test
sub
cld
and
push
movsb
js
popf
pop
shl
cmp
and
aad
sub
cmp
stos
mov
daa
push
mov
xor
icebp
aam
sub
test
inc
lret
stos
sbbl
jle
cmpsl
addr16
mov
lea
bound
add
jb
pop
ja
pop
cmp
aaa
in
std
xlat
int
lods
xchg
mov
inc
jge
dec
addr16
ja
pop
cmp
aaa
in
std
xlat
int
lods
xchg
mov
inc
jge
dec
out
ja
pop
cmp
or
inc
std
xlat
int
fdiv
lods
xchg
mov
inc
jge
dec
addr16
ja
pop
cmp
aaa
adc
add
out
sbb
xor
dec
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
imul
adc
jae
sub
testb
popf
repz
mov
int
cmp
add
push
pop
inc
cmp
popf
inc
repz
loop
rcr
ret
int
and
xor
add
jp
dec
inc
push
push
mov
test
jmp
idiv
fdivl
stos
mov
pop
js
push
mov
lods
pusha
mov
pop
loopne
cltd
outsl
mov
and
mov
cmp
adc
or
mov
insb
int
jb
popf
mov
aas
sub
and
rcll
bound
outsb
pop
adc
idivl
pop
cmpsb
push
jns
add
jecxz
xor
repz
pop
push
jge
jge
sub
xchg
push
xchg
filds
jbe
mov
xchg
and
fst
mov
ja
and
push
and
xchg
xor
jmp
std
pop
mov
dec
rol
and
in
xchg
imul
enter
sbb
insb
bound
or
repz
cmp
arpl
insl
push
pop
pop
push
stos
mov
lcall
fcmove
inc
cmp
addr16
push
xor
sub
shlb
call
mov
cmpsb
mov
jbe
add
jge
and
sub
jg
leave
mov
xchg
lea
mov
jbe
add
dec
arpl
pop
inc
dec
mov
mov
repz
jecxz
rcr
ret
int
cmp
add
push
pop
inc
dec
mov
mov
repz
jecxz
rcr
ret
int
cmp
imul
idivb
sarl
loopne
adc
mov
das
cmc
adc
lcall
in
xchg
in
mov
pop
dec
xchg
pop
sub
sbb
cmc
insb
push
ja
cwtl
ja
in
loope,pn
test
cmp
fstps
cld
mov
in
adc
iret
push
sbb
call
dec
and
push
mov
insb
mov
mov
pop
decl
dec
in
fucomp
das
ljmp
or
in
add
scas
add
push
adcb
pop
mov
mov
lods
cmpsb
mov
adc
adc
movsb
das
aad
xor
mov
in
cmp
jne
cmp
mov
mov
mov
pop
shll
bound
jge
out
dec
jbe
mov
insl
mov
arpl
rcrl
cmp
popf
ds
jne
sahf
jb
push
addr16
insl
xchg
negb
inc
out
pop
add
shl
mov
shlb
xor
mov
loope
fbld
arpl
sbb
or
xchg
jb
sbb
and
sarl
dec
into
jge
sbb
xor
fsubrp
mov
dec
fs
pop
sarl
and
dec
inc
leave
adc
and
dec
clc
mov
jp
das
xchg
sbbb
jp
mov
mov
les
jecxz
mov
and
mov
xlat
fiadds
or
xlat
cld
and
pop
push
push
push
leave
test
cmp
data16
movsb
addl
mov
imul
in
jo
dec
cmp
faddl
mov
cmp
loop
or
or
dec
cmp
add
xor
test
push
arpl
hlt
aam
in
cwtl
aam
push
push
fildl
push
je
sub
xor
adc
pop
xor
xchg
fsubs
dec
cwtl
lods
xor
loope
dec
push
fs
jg
inc
js
scas
test
mov
imul
out
inc
enter
xorl
int
in
les
outsl
jne
push
xor
test
mov
daa
out
adc
lds
cmp
push
sub
repnz
es
dec
pop
and
jbe
aaa
jae
outsl
popa
hlt
push
xor
and
push
lret
mov
mov
pushf
lahf
sbb
or
pop
adc
pop
mov
rorl
scas
xor
shll
mov
inc
fldcw
xchg
xchg
dec
pop
adc
inc
xchg
pushf
xorl
add
add
gs
sbb
sub
out
or
lock
addl
pop
mov
ljmp
and
adc
inc
push
inc
pop
or
xor
lock
test
ret
and
pop
int
jb
xchg
dec
fdivrl
in
popa
jno
fsts
popf
mov
stos
adc
hlt
xor
xchg
xchg
add
cmp
jge
jl
pusha
aas
jnp
das
inc
add
mov
add
or
xchg
das
dec
shrb
or
int3
ja
addl
aaa
fdivl
in
cmc
add
cli
or
pop
or
mov
cmc
mov
ret
lret
push
xchg
lea
movsl
in
push
inc
pop
push
pusha
movsl
roll
dec
cmp
sub
adc
sub
js
leave
movsb
mov
xchg
adc
cmp
mov
dec
mov
roll
sub
movsl
mov
or
push
sarb
jmp
mov
push
rolb
fsubl
mov
lret
negl
je
popa
inc
mov
jb
loope
icebp
fwait
and
jl
jo
mov
pop
cmc
aaa
gs
js
jle
xchg
adc
adc
cs
push
add
cmp
or
movsb
les
mov
mov
shl
pop
adc
xorl
insb
adc
pop
imul
adc
cld
sub
out
push
pop
sub
popl
test
mov
mov
aaa
lods
movsl
aam
push
pushf
jecxz
push
and
xchg
or
ret
mov
push
pop
hlt
out
loopne
adc
adc
jb
lods
fidivrl
cmp
rcrb
ds
jbe
xor
lds
pop
dec
int3
sahf
cli
ja
sti
shll
ds
add
mov
xchg
cli
nop
sarl
in
jnp
shlb
sub
aaa
lods
sub
jne
test
ud0
inc
sarl
jne
int3
stos
aam
jo
dec
aaa
shlb
imul
mov
jmp
push
inc
and
fnstsw
sti
cs
ljmp
sbb
and
sbbb
add
xorb
aad
cmp
push
cltd
arpl
jmp
rcr
jnp
pop
push
lea
loop
ret
xchg
sub
pop
hlt
mov
sub
push
adc
addb
cmp
test
pop
xchg
les
dec
fdivp
or
mov
iret
lret
jae
ret
sub
add
pop
lcall
out
das
loopne
sub
out
es
jmp
dec
adc
mov
outsl
pop
pop
call
popf
aas
fcoms
pop
cmp
jno
xchg
jb
movsb
rcrl
ss
in
and
stos
movsb
jno
and
in
xchg
mov
fs
mov
inc
mov
pusha
cmp
push
lods
push
loop
inc
sub
popa
int
mulps
adc
vmovaps
js
push
push
je
and
jmp
out
jl
add
test
mov
test
xor
pop
out
int
call
fldl
pushf
pop
jnp
mov
mov
xchg
cmp
lods
mov
add
push
mov
cmp
test
enter
sub
and
and
dec
push
lret
daa
push
cltd
stc
stc
cmp
mov
or
pop
fisttpll
sub
mov
das
lahf
sub
add
pop
mov
jl
mov
js
ret
or
cmpsb
push
pop
stos
and
dec
in
mov
inc
and
push
sbb
fdivl
jecxz
movsl
sbb
sub
pop
dec
pop
ret
push
pushf
push
or
adc
pop
out
xor
xchg
xchg
idivb
mov
insl
js
sub
stc
pop
add
dec
inc
lret
int
mov
adc
sbb
stc
mov
in
pop
jl
mov
stos
adc
adc
leave
pop
fwait
or
xchg
mov
rcrl
mov
arpl
add
nop
dec
adc
test
sub
rcll
or
or
stc
loop
dec
xor
fisubs
aaa
stos
pusha
add
insl
push
cltd
push
icebp
cmp
lods
imul
cwtl
xor
xchg
scas
mov
cltd
imul
dec
adc
or
in
jo
mov
pop
sahf
clc
pop
aaa
dec
loop
out
xlat
jmp
xchg
rcrl
int
data16
bound
cmp
repz
ljmp
ljmp
popa
divb
push
and
mov
or
adc
ja
and
xchg
notl
push
xor
ljmp
jns
mov
jnp
das
cmp
cmp
adc
daa
add
sbb
inc
mov
inc
mov
push
andl
imul
jg
mov
pop
or
lret
cmp
xor
mov
inc
ja
hlt
movsl
inc
mov
or
push
in
addr16
jg
jle
jmp
test
clc
es
lsl
int3
dec
mov
or
out
pop
add
push
jno
add
movsb
xor
sub
xor
cmp
jge
sub
ja
popf
lret
dec
push
or
inc
rcrb
scas
loope
mov
ret
pop
jns
enter
in
dec
mov
push
jg
cmc
push
mov
mov
push
jle
lea
lahf
ds
je
xchg
orb
lahf
cmc
push
push
dec
out
aad
repnz
dec
out
dec
and
push
mov
movsb
jmp
and
pop
add
pop
sarl
push
push
out
jmp
jns
push
insb
inc
jle
adc
adc
dec
mov
lret
ja
inc
pop
std
and
adc
js
mul
add
jo
data16
mov
xchg
jecxz
push
aaa
inc
xchg
inc
sub
add
sbb
test
lds
xor
popa
js
sub
mov
shll
xor
fsubrl
or
imul
aas
xchg
cmp
inc
ja
imul
sub
ljmp
dec
out
shrl
pop
dec
lock
xor
pop
or
test
loop
scas
lods
ret
pop
movsl
jne
fsts
mov
int
push
stos
stos
loop
or
dec
test
loopne
add
push
xchg
sar
lahf
repnz
daa
inc
sahf
cld
jnp
adc
insl
dec
add
call
adc
sahf
insb
xchg
pop
mov
stc
adcl
cmp
mov
mov
cmp
jo
and
cmpsl
adc
mov
je
mov
out
ja
mov
jl
cli
out
push
cmc
enter
and
xor
dec
sbb
cvtdq2ps
cltd
inc
mov
loop
pop
test
lcall
mov
jnp
add
cmpsl
lret
mov
pop
lock
mov
loope
cmp
ret
jo
imul
push
cmp
pop
dec
add
hlt
pop
xor
push
push
cmp
sbb
popl
or
loopne
lret
lret
inc
mov
rcll
push
mov
fstpl
mov
sbb
lods
imul
ss
mov
lods
stos
cwtl
ret
push
jno
add
call
xchg
adc
add
stos
test
push
ljmp
pop
cs
xchg
lock
int3
mov
dec
stos
xor
sahf
push
inc
jno
sbb
lds
add
fsubrs
out
out
and
lods
sbb
gs
and
dec
loopne
loopne
test
sbb
in
outsl
scas
push
popa
lret
push
fimull
vmwrite
xor
inc
dec
cmp
mov
fstpl
lods
xchg
out
xor
outsl
jnp
subl
bound
mov
rcrl
push
push
xchg
lret
push
cmpsl
lods
scas
add
dec
add
xlat
sub
xchg
mov
push
mov
sub
leave
lea
mov
movb
push
pushf
scas
psubw
jl
loop
jg
test
lret
pop
insb
and
mov
popa
inc
mov
fistps
add
lcall
add
stos
arpl
call
bnd
push
loopne
sti
arpl
sub
je
in
dec
inc
mov
or
push
xlat
xchg
loopne
pop
pop
jl
cmpsl
cmp
scas
into
sub
cmpsl
shrl
mov
add
clc
loopne
arpl
jmp
js
dec
imul
mov
test
jne
cmp
mov
jle
add
xchg
shrl
js
test
sub
sub
jp
shlb
xor
out
movsb
jb
and
add
test
xor
loop
out
lahf
jb
dec
xor
ljmp
mov
xchg
nop
mov
add
hlt
aam
psrad
cli
push
popa
popa
jbe
test
addr16
std
add
ja
cmc
pop
adc
add
imul
in
mov
clc
icebp
add
shld
loopne
dec
outsb
aam
in
imul
xor
lcall
repnz
adc
outsb
sti
lcall
cmc
jo
clc
jne
push
mov
lods
mov
test
mov
outsl
xor
pop
mov
jp
ror
popf
cld
clc
lock
mov
cmp
in
xor
mov
add
xchg
daa
jl
loop
popa
int
movsl
or
fadds
adc
mov
rcll
mov
pop
xchg
mov
lods
xchg
sub
rolb
mov
add
stos
cwtl
aad
pop
inc
xor
pop
push
daa
cmp
pop
pop
inc
and
scas
outsl
or
rcll
clc
or
lods
repnz
and
jo
sahf
xor
in
push
sub
xlat
push
cwtl
ret
shrl
imul
aam
add
xor
mov
pop
rol
xchg
jbe
cmpsl
sbb
repnz
dec
es
mov
mov
inc
mov
test
sbb
jg
repz
xchg
pop
mov
jmp
cmpsl
xchg
mov
gs
or
inc
in
popf
jns
loop
cmp
mov
inc
sbb
jo
into
pcmpgtd
pop
and
fsubr
outsb
xchg
dec
mov
ret
adc
addr16
clc
sbb
imul
push
mov
notl
cmc
pop
or
cmpsb
out
leave
jae
sbb
aaa
int3
sarl
add
sbb
jge
jle
stos
mov
sub
aas
std
jl
cmp
fcmovnu
ljmp
jmp
xchg
cmpsb
rclb
hlt
adc
fdivr
pop
das
pop
ss
xlat
mov
mov
sbb
daa
shll
pusha
js
inc
lahf
out
shll
scas
js
jmp
mov
lds
or
mov
xchg
xchg
lods
dec
fcompl
push
xchg
xchg
popf
arpl
pop
push
stc
inc
xlat
lret
or
xor
aam
nop
ret
inc
fs
stos
inc
scas
adcw
sub
dec
mov
cmp
iret
or
inc
fildl
ljmp
push
fcmovb
add
xchg
dec
push
ljmp
dec
je
fsubs
cwtl
movsb
cmp
cmp
mov
sbb
bound
hlt
scas
or
jmp
add
shr
std
mov
out
push
cmp
mov
les
or
mov
push
cmpsb
loop
push
mov
jmp
pop
sbb
pop
addr16
mov
sbbb
mov
sbb
filds
add
mov
imul
adc
or
leave
mov
dec
mov
xor
cld
sbbb
or
leave
sbb
mov
cmpsl
icebp
adc
push
inc
cmp
shll
lea
add
mov
cmpsb
jmp
lds
sub
popf
pop
xor
in
negl
and
out
es
jns
loopne
pop
xchg
gs
andb
mov
lods
dec
and
mov
and
dec
adc
jecxz
sub
jbe
jns
mov
iret
jp
out
xor
mov
pop
int3
dec
mov
mov
jg
repz
mov
lahf
inc
xlat
test
cltd
stos
idiv
cmpsl
bound
push
pop
mov
jne
jge
fisubs
push
mov
js
ss
or
pop
jg
mov
cmc
xchg
add
fsubs
arpl
mov
mov
dec
adc
ret
xchg
dec
push
sbb
mov
lret
sub
fs
repnz
jne
sub
insl
fcompl
inc
sub
pop
mov
cmp
push
add
stc
sub
and
mov
movsl
adc
sar
xchg
sub
push
inc
adc
inc
mov
pop
push
add
jmp
cmp
addb
push
cmpsl
mov
dec
out
mov
inc
pushf
call
push
lods
arpl
add
fs
or
or
ret
mov
out
int
xor
mov
inc
mov
inc
adc
sbb
sub
mov
mov
sub
inc
sub
jns
daa
dec
mov
daa
ja
jb
adc
clc
add
pop
lods
sbb
fidivrs
mov
cld
jo
xchg
sbb
push
jecxz
push
jle
std
dec
aam
sarb
xor
mov
shr
xor
or
mov
mov
push
xor
dec
ss
lock
bound
cmpsl
out
outsb
lret
dec
ljmp
dec
jle
mov
out
jae
lret
test
pop
sub
jecxz
std
jb
dec
scas
fmull
jnp
sti
fnstsw
pop
rsm
test
mov
fcomip
lds
inc
gs
lock
clc
jb
push
mov
sar
mov
mov
dec
imul
jnp
push
inc
dec
pop
mov
imul
arpl
data16
add
in
fnstsw
mov
pushf
ret
mov
fstps
and
enter
rcr
into
out
xor
shr
and
pusha
in
pushf
cli
mov
ja
jg
lods
adc
fisttpll
push
mov
dec
scas
pusha
jp
pop
jnp
fcmovnbe
jmp
popa
rolb
popa
jns
insl
fbstp
cli
iret
adc
or
int
daa
push
jg
leave
mov
mov
cmp
adc
push
sub
dec
test
mov
sti
das
mov
test
adc
sub
nop
fists
mov
sbb
mov
and
popa
iret
int3
aad
or
sub
clc
xchg
mov
mov
out
and
pop
dec
jmp
xchg
jb
xchg
stos
das
in
leave
cmp
mov
stos
into
add
jb
mov
dec
jge
xor
mov
sub
cmpsl
ja
adc
fs
cmp
cmpsl
xor
xchg
push
hlt
mov
pop
ljmp
sbb
dec
test
sahf
jp
push
repnz
nop
mov
dec
je
push
popf
inc
jge
dec
fsts
or
and
loop
or
stos
ficompl
add
push
mov
mov
xchg
sub
jg
mov
jb
jbe
movsb
or
add
and
push
adc
jmp
or
sub
push
enter
mov
pop
mov
ljmp
addl
mov
jbe
insb
idiv
cmpsl
or
mov
arpl
inc
dec
sarb
fldenv
out
loop
aas
test
leave
jnp
jnp
shlb
leave
scas
pop
jne
icebp
add
jl
fsubp
lahf
es
mov
imul
xor
icebp
dec
std
cmpsb
mov
jg
sarl
push
fs
jmp
dec
sahf
adc
fstl
or
cmp
mov
dec
rcrb
push
bswap
inc
dec
andb
repz
lods
or
cli
lods
popf
mov
std
es
push
push
cmp
pop
jo
ja
jno
mov
das
mov
and
lahf
add
in
cmp
sti
adc
jmp
out
lods
fstl
cmpsl
pop
push
dec
xor
cli
dec
mov
push
lret
jecxz
inc
imul
dec
ljmp
mov
sbb
jnp
push
test
jns
stos
pop
add
xchg
loop
fstps
std
lock
movl
inc
shr
rclb
imul
jl
add
jbe
insb
lods
stos
not
mov
mov
lret
or
add
mov
hlt
sub
mov
lds
daa
and
out
fmuls
addr16
cmp
or
sarb
cmpsb
xchg
es
lea
cmp
jmp
shrl
pop
in
mov
mov
fs
and
and
shl
sub
fs
insl
fwait
mov
pop
jl
dec
ljmp
and
xor
fsubrs
xchg
ret
icebp
mov
push
imul
das
sub
mov
outsb
cs
sub
orl
xor
pop
gs
mov
pop
pop
push
sub
sub
out
mov
cmp
jp
movsb
lahf
jne
inc
xor
daa
sarl
test
mov
sub
mov
lds
lcall
and
scas
addr16
nop
push
lahf
xor
jne
pop
stc
mov
mov
dec
sti
xor
lods
imul
add
outsb
sti
sub
dec
inc
and
das
out
cmpsl
pop
test
aam
mov
lds
xor
cs
push
add
push
cltd
jl
shrl
mov
xchg
in
jne
call
int3
and
pop
jle
xor
imul
xchg
pop
stc
jge
jg
lods
pop
dec
and
scas
mov
clc
fldt
sub
popa
push
sarl
xor
js
nop
push
push
fs
push
je
movsb
bound
and
ja
pushf
mov
cmp
add
fisttpl
pop
pop
sbb
cmpsl
mov
mov
jmp
rorb
push
sti
push
aaa
les
pusha
sub
fstpt
mov
stc
bound
jle
sbb
int
add
sub
mov
push
rcrb
push
mov
mov
out
mov
cmp
fdivl
leave
cmp
scas
pop
in
push
insb
mov
ds
pop
push
pop
push
sub
jae
arpl
pop
inc
dec
mov
mov
repz
jecxz
rcr
ret
int
cmp
add
push
pop
inc
dec
mov
mov
repz
jecxz
rcr
ret
int
cmp
add
push
pop
inc
dec
mov
mov
mov
std
out
rcr
repnz
pop
cmp
sub
jge
insl
rcrl
lea
pop
cmp
imul
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
