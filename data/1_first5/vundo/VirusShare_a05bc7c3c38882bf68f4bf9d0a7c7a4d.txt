jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
sbb
push
xchg
stos
das
xchg
xchg
arpl
mov
or
add
add
or
add
add
inc
add
xchg
add
add
add
add
les
mov
add
add
add
xchg
add
push
add
xchg
add
add
add
add
add
add
inc
add
add
add
mov
add
add
add
add
jo
push
add
add
add
mov
lock
add
add
add
pusha
add
add
push
add
add
ljmp
add
push
add
add
add
add
add
push
add
add
addb
add
add
add
push
add
add
pusha
add
add
push
add
add
ljmp
add
push
add
add
add
add
add
add
add
add
add
add
add
je
fadds
add
add
add
add
add
add
mov
add
add
add
mov
and
in
addb
add
mov
add
sti
add
add
add
add
add
add
add
rolb
add
add
hlt
add
add
leave
add
add
add
add
xchg
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
loope
mov
ds
add
add
add
add
add
add
xchg
add
add
add
add
push
add
mov
add
in
mov
xchg
add
mov
jo
push
add
add
add
add
add
add
add
add
sbb
inc
add
add
add
pop
add
add
add
add
add
xchg
add
arpl
popa
add
add
add
add
add
add
add
add
ss
add
add
add
add
jo
push
add
add
add
add
push
add
add
add
add
add
push
add
pop
add
or
add
add
jne
push
outsl
add
add
sbb
adc
test
push
add
add
add
add
add
push
add
add
xchg
add
and
cwtl
add
add
add
add
add
add
outsb
add
add
add
pop
add
popl
mov
xlat
add
add
add
add
add
imul
add
add
add
add
add
add
add
movsl
add
add
add
add
add
xchg
add
in
lods
add
add
add
add
add
add
mov
stos
add
add
pop
add
add
add
or
mov
add
add
add
add
add
add
or
add
add
add
xchg
add
add
out
add
add
add
add
add
dec
add
leave
add
fwait
add
add
add
add
add
add
add
add
add
mov
les
ljmp
add
add
add
or
dec
mov
lret
loopne
push
sbb
stos
test
and
lcall
test
xchg
in
out
inc
push
inc
cltd
test
xor
add
aaa
aam
iret
jbe
iret
mov
jae
fwait
jbe
pop
xchg
inc
shlb
xchg
mov
je
mov
mov
and
xorl
test
mov
xchg
push
jne
idivl
mov
push
clc
loope
jo
mov
sbb
pop
stc
jae
adc
pop
sbb
psadbw
xor
mov
outsl
add
fldt
shrl
jae
push
sub
push
inc
js
popa
mov
push
push
mov
or
bnd
ds
aaa
sbb
outsb
and
test
sbb
add
sub
fwait
jmp
adc
lret
push
dec
mov
andl
out
outsb
lods
xchg
nop
push
ret
cmp
leave
add
ficomps
push
jge
jnp
cmp
cmp
and
add
mov
ret
iret
xchg
movsl
xchg
es
mov
out
repz
lret
fwait
loope
shrb
aaa
pop
sub
sub
call
jbe
je
mov
push
xor
les
andl
je
push
in
movsl
pusha
jnp
inc
ja
sti
orl
jg
sbb
fxtract
dec
out
mov
int
jns
ljmp
in
jecxz
jecxz
je
stc
pop
sbb
mov
nop
push
out
pop
pop
std
insb
push
out
add
ja
repz
push
push
jl
lret
dec
negb
data16
xchg
mov
sub
cmp
mov
or
cmp
inc
cli
mov
cld
push
dec
int
decb
mov
lret
test
outsl
add
push
insl
mov
cmp
insb
push
xchg
in
test
dec
test
scas
movsl
xchg
lds
gs
pop
in
out
add
mov
xor
movsb
jne
cld
nop
push
aaa
jbe
and
addb
and
xchg
mov
fiadds
rorl
movsb
xor
movsb
lret
xlat
cmpsb
test
inc
mov
out
into
repnz
jp
xor
jmp
inc
shll
add
fs
or
mov
pop
sub
aam
je
pop
adc
cltd
and
xor
inc
leave
push
adc
daa
xchg
ljmp
lcall
nop
push
inc
outsl
push
add
dec
inc
in
pop
mov
lea
adc
lods
adc
mov
cmp
adcl
jb
and
fstpt
mov
cmpsl
adc
in
inc
cmp
or
xchg
add
sbb
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
jo
lock
push
sbb
nop
sbb
das
hlt
push
pusha
xchg
jo
inc
xchg
push
xchg
out
jns
adc
loopne
lock
push
mov
inc
nop
and
jo
and
xor
add
adc
loopne
lock
rcrb
push
mov
pop
nop
dec
pusha
cmpsb
jo
and
xor
andb
jg
nop
push
inc
mov
jno
scas
nop
mov
movsl
mov
sti
dec
addb
sub
movsb
jge
cmp
mov
mov
mov
xchg
test
ss
pop
iret
xor
cmp
jne
or
and
sahf
inc
lock
add
xchg
daa
js
leave
loopne
cmp
mov
xor
dec
inc
jns
sbb
fisubl
adc
sbb
sbb
stc
lds
cmpsb
mov
or
dec
adc
das
jae
pop
out
xchg
out
push
sbb
lock
dec
push
pushf
inc
in
js
js
push
push
lahf
into
cmpsb
fdivl
into
xor
add
adc
mov
pop
rclb
mov
inc
nop
dec
pusha
cmpsb
jo
inc
lahf
push
and
xor
add
adc
xchg
es
lods
arpl
pop
sub
xor
leave
ret
xorb
cmpl
fs
mov
cwtl
jns
data16
xorb
fs
sbb
xchg
imul
mov
mov
push
mov
addb
pusha
cmpsb
jo
inc
xchg
and
xor
add
adc
loopne
lock
push
mov
inc
nop
push
pusha
cmpsb
jo
inc
xchg
and
xor
add
adc
loopne
cmc
and
shr
xchg
fwait
fs
jg
fcmove
icebp
pop
mov
scas
icebp
jno
loopne
insb
mov
mov
and
mov
fmulp
sub
ja
stc
faddp
inc
pop
lock
xchg
cs
sbb
xchg
lods
jp
dec
into
roll
mov
jmp
dec
shrl
mov
sbb
lds
andps
daa
fadds
push
sub
mov
mov
mov
test
xor
arpl
je
mov
add
daa
cwtl
dec
inc
fisttpl
gs
lcall
xchg
into
movsb
cmpsl
push
xor
xor
in
rcrb
clc
in
pop
mov
mov
faddp
mov
test
aaa
nop
insb
add
jb
adcl
bound
push
push
add
lcall
loopne
push
push
test
ss
out
je
dec
pop
notl
sarb
sub
sub
rcrl
aas
cmpsb
inc
sub
inc
cmp
push
dec
test
int3
add
sub
cmp
xor
jnp
imul
mov
and
loopne
idiv
cmp
fnsave
inc
test
adc
sbb
loope
insl
jl
subl
mov
jnp
adc
add
in
pop
mov
lds
test
add
clc
or
mov
imul
sbb
inc
cltd
scas
inc
cmp
fimull
orl
dec
jne
loope
push
cld
mov
xor
pop
jo
lea
dec
pop
xchg
addr16
jg
shrl
or
push
mov
call
pop
cmc
andl
lret
ret
and
pop
dec
add
cwtl
mov
xor
mov
xor
push
mov
dec
dec
and
pop
adc
aas
popa
jmp
mov
hlt
xchg
sbb
enter
dec
jge
pop
lods
lods
orl
mov
mov
mov
in
mov
lds
repz
aad
xchg
mov
icebp
pop
cmpsl
lret
lds
mov
xor
stc
inc
fwait
daa
push
xor
push
movsb
sti
movsb
out
and
cmp
and
shll
push
outsl
clc
pusha
lret
xor
lds
es
mov
ficomps
fidivl
sub
jl
test
inc
and
in
nop
notb
bound
test
lods
xor
leave
jne
repz
mov
aas
push
inc
leave
push
cmpsb
mov
js
cmpsl
in
out
xor
jge
ljmp
xorb
loop
out
es
or
aas
sbb
stc
hlt
mov
mov
push
lock
push
lret
add
test
frstor
dec
rsm
out
sbb
mov
mov
cmp
mov
insl
push
push
mov
stos
jp
test
les
outsl
xchg
stc
pusha
sahf
sub
add
pop
lret
mull
mov
inc
iret
in
mov
sub
test
fistpll
nop
xchg
aas
pop
xchg
shlb
js
add
push
shlb
cs
sbb
sub
add
shr
icebp
in
add
stos
mov
mov
repz
gs
xchg
rolb
test
xchg
out
popl
mov
ds
sbb
sbb
jnp
add
and
ja
xor
outsl
dec
pop
mov
xlat
xchg
sqrtps
cmp
jo
stos
test
loope
pop
pop
imul
jl
push
aaa
inc
pop
ss
dec
ljmp
mov
mov
in
in
rolb
into
cs
repnz
lods
sub
add
orl
enter
sbb
xlat
into
rorb
insl
stc
and
pusha
aas
or
push
insl
sti
xor
jb
mov
and
adc
ss
inc
rclb
lea
dec
sbb
lods
push
sbb
out
jge
fxch
mov
inc
jne
sahf
sbb
inc
je
mov
cwtl
sbb
dec
fucomp
ret
mov
sub
mov
dec
add
loope
in
hlt
jp
movsl
xor
or
leave
fstl
or
push
or
push
aam
and
mov
adc
repz
or
cwtl
lock
xchg
ds
adc
fadd
cwtl
cli
sub
inc
adc
rcrl
or
lods
sub
add
sbb
or
push
je
in
fs
cmp
pop
push
aas
cmp
out
rorb
cli
sbb
pop
xchg
aas
sub
imull
pop
jae
push
pop
push
inc
icebp
ds
push
pop
out
xor
dec
push
lcall
or
fs
add
adc
xchg
jl
pop
sub
push
outsb
imul
mov
jp
push
test
sti
test
stos
or
in
adc
add
and
lds
cltd
mov
loope
or
pusha
lock
jg
add
and
jmp
and
jecxz
cmpsl
bound
mov
jo
mov
pop
push
mov
popf
mov
cs
add
mov
scas
icebp
fdivrl
add
mov
je
decl
mov
std
or
ljmp
xor
popf
mov
test
movsl
jmp
sub
aam
mov
dec
sti
cmpsb
and
je
mov
pop
pop
cmp
lcall
repnz
pop
scas
movsb
adc
icebp
fwait
inc
das
sub
jle
pop
std
sbb
les
lock
test
pop
adc
dec
jg
shlb
fs
js
inc
and
inc
jge
mov
enter
ds
push
movsl
std
bound
arpl
push
sub
test
sbb
mov
pop
adc
addl
xchg
pop
loop
xchg
cmpsl
jnp
push
fisubs
adc
fcompl
cmp
loopne
pop
mov
mov
fidivl
lods
adc
aaa
ret
mov
mov
mov
mov
data16
in
xor
fwait
or
dec
xchg
mov
cmc
cmp
iret
int3
and
test
pop
mov
or
lock
sbbb
insl
xchg
jo
mull
push
lcall
pop
test
hlt
adc
fmull
adc
out
push
jne
xchg
and
mov
mov
incb
cmpsb
jb
inc
jl
adc
stos
or
add
inc
inc
aam
insl
sbb
xor
push
test
mov
mov
xor
fisubs
mov
jl,pt
nop
add
cltd
jbe
shrb
mov
imul
fnstenv
jne
push
xor
or
mov
aaa
or
lret
cs
cld
or
jle
push
hlt
push
inc
daa
iret
pop
fmuls
rcll
and
insl
push
in
inc
insl
push
cmpsl
and
fists
cli
jmp
std
dec
test
sbb
jg
cmpsl
jnp
xor
or
pop
fmuls
dec
jp
xchg
das
inc
testb
nop
inc
loop
push
add
shlb
or
icebp
jge
clc
pop
mov
fnstenv
aam
jo
sbb
and
pop
leave
test
icebp
pop
add
jmp
xor
mov
jo
sahf
dec
mov
call
mov
mov
jp
inc
pop
loop
xchg
aaa
jle
push
in
ss
adc
lds
into
jno
out
movsb
repnz
jg
inc
fimuls
jo
test
sub
cmpsb
in
imul
mov
inc
cs
mov
mov
rorb
test
loop
pop
clc
add
dec
mov
rcrb
mull
roll
bound
cmpsl
loop
arpl
aas
cmpsb
mov
or
dec
test
pop
push
mov
jno
push
mov
mov
clc
notl
mov
sub
xorb
cs
nop
std
iret
mov
sub
jb
mov
jg
pop
iret
aaa
pop
adc
mov
fdivl
and
pop
outsl
cmp
scas
les
data16
jge
arpl
pop
int3
xor
xor
dec
jb
hlt
popa
lock
arpl
and
outsb
pop
aaa
ds
jnp
pop
aam
stc
stc
jae
clc
add
aaa
and
pushf
xchg
in
and
inc
das
mov
test
fistpll
fstpl
mov
nop
xchg
ret
xchg
jg
stos
shrl
shr
jmp
test
pop
test
sbb
mov
xor
xor
sti
lahf
inc
and
outsb
mov
enter
repnz
push
pop
dec
jl
jbe,pt
clc
sub
aas
ud0
test
inc
or
mov
jns
jle
lods
call
push
xor
fs
jecxz
nop
cmp
cmp
xchg
sub
punpcklbw
lods
jae
out
mov
jl
ljmp
push
mov
fbld
adc
sti
sbb
ret
stc
push
jne
imul
inc
ja
push
or
push
adc
cmp
in
cmp
pop
sbb
mov
sub
rorb
pop
leave
xor
xor
lods
cmc
shll
aaa
jb
inc
aam
jge
push
push
ss
add
bswap
out
jae
mov
pop
jae
mov
es
jns
fisttpl
ds
ljmp
sti
jl
xchg
cmp
dec
in
dec
cmp
jg
aad
dec
hlt
fildl
daa
daa
es
bound
inc
pop
into
popf
into
ret
dec
int3
les
and
mov
das
jl
ret
jg
push
aas
inc
sub
sub
mov
adc
mov
cmp
sbb
test
and
dec
pushf
sbb
dec
iret
xor
fsts
and
add
cmp
daa
and
testl
sbb
shlb
nop
inc
or
mov
pop
frstor
cmp
in
mov
movsb
stos
rcrb
or
aam
outsb
pop
mov
enter
add
pop
sub
into
loop
mov
shl
lret
sub
imul
std
mov
jp
clc
daa
inc
pop
out
mov
js
jae
mov
sarl
mov
push
jl
push
add
xor
loop
add
mov
xor
ficoms
push
test
mov
mov
adc
sar
inc
leave
int3
xchg
ds
dec
add
mov
mov
das
dec
popf
inc
pop
gs
sbb
pop
jmp
sub
cmpb
lods
cmp
leave
push
sub
mov
xlat
daa
mov
xor
fldl
jg
jno
shlb
outsl
lret
adc
std
fucomi
xchg
inc
pop
pop
enter
add
xor
imull
je
sub
fisubrl
clc
jmp
mov
dec
sti
sub
or
int
ss
loope
mov
adc
stos
lahf
filds
xor
bswap
xorb
jg
sbb
push
in
sbb
iret
popf
aam
or
inc
pop
sahf
ret
push
flds
pushf
sbb
out
fists
shr
push
pop
inc
test
sub
jecxz
lock
mov
cli
in
xchg
movsb
cld
mulb
outsl
adc
sbb
clc
sub
sbb
jg
xor
push
jne
and
les
shr
inc
dec
cmp
push
in
fcompl
adc
xchg
mov
push
stos
xor
clc
jne
arpl
jp
in
pop
add
jne
mov
xorl
xchg
jmp
insl
cmp
hlt
cmp
xchg
arpl
adc
out
xchg
inc
jnp
xchg
aas
sbb
mov
jbe
icebp
lock
loope
into
orb
adc
and
in
jmp
pop
lods
push
cmp
lods
push
movb
jp
jne
jns
enter
mov
push
adc
mov
mov
clc
std
xorb
pop
cli
jmp
sbb
cmc
jae
jbe
add
pop
into
adc
ror
or
sbb
addr16
popl
xchg
lcall
push
dec
add
je
pop
push
jbe
shrb
jbe
pop
xor
fcoml
xor
scas
out
cltd
gs
fdivs
mov
jbe
dec
or
or
loope
xchg
lds
cmp
cmp
out
fdivs
cmp
mov
cmp
cmpsl
in
sbb
std
sub
inc
sti
pop
push
fldl
inc
popa
pop
xchg
xchg
inc
les
cwtl
push
pushf
nop
je
sbb
add
pop
xchg
rclb
lcall
test
sarl
lods
lcall
pop
xor
jmp
addr16
bound
mov
roll
test
inc
mov
loop
and
lock
xorb
jae
ss
pop
cmp
xchg
cli
mov
mov
add
xor
xor
pop
dec
in
mov
dec
add
fstpl
testl
inc
pop
leave
outsb
arpl
aad
push
fwait
je
push
jnp
mov
lcall
sbb
fisubs
fists
xchg
sub
ret
pop
mov
jge
popa
test
test
sbb
mov
ret
sbb
inc
in
mov
xor
cmp
je
rorb
addr16
aad
sub
jns
test
push
mov
cli
mov
xchg
dec
in
movsbl
andl
gs
jo
xor
inc
inc
ljmp
int
mov
sbb
mov
sbb
out
sbb
pop
jg
cmp
cmp
mov
fcmove
pop
in
jge
pop
js
loop
sub
insb
jl
sbb
test
or
in
test
mov
std
dec
jecxz
test
jno
cmpsl
xlat
jmp
jae
or
xor
subl
std
jmp
xchg
pop
mov
jecxz
shlb
jb
inc
pop
fld
ds
movsb
jl
ror
fwait
lods
add
dec
mov
pushf
and
out
or
addr16
ret
hlt
jae
push
sbb
push
in
xchg
hlt
test
jno
mov
mov
jb
rorb
insl
cmp
lds
jmp
push
and
jnp
and
test
repz
xchg
cwtl
int
loopne
push
insb
add
aad
mov
subl
jp
lea
in
test
or
lock
dec
mov
pop
insl
add
int3
jnp
lret
into
jge
fildll
inc
repz
jmp
sub
int3
add
ret
xor
sub
rcll
pop
aas
test
mul
pop
add
clc
idivl
mov
bound
ljmp
ret
add
pop
cwtl
mov
mov
add
dec
movsl
mov
mov
add
push
and
dec
mov
loop
enter
cmp
add
pop
pop
push
mov
faddl
and
stc
dec
inc
or
adc
in
mov
dec
sub
dec
popa
ja
out
xor
and
pop
int
aas
inc
mov
or
dec
js
inc
mov
dec
cs
adc
dec
test
add
mov
mov
nop
push
mov
dec
sub
test
dec
cmp
loop
enter
and
ljmp
paddd
aas
mov
lods
es
push
dec
mov
xor
not
add
mov
stos
in
cmp
inc
aas
mov
push
sub
pop
jne
sti
or
sbb
mov
push
inc
and
arpl
or
pop
jle
push
loopne
sbb
les
aaa
lret
pusha
jle
stos
xor
xchg
cltd
dec
add
out
jg
fs
and
rcll
dec
pop
aaa
mov
ds
xchg
jle
lods
data16
or
sub
push
ret
repnz
jmp
addr16
or
xchg
jbe
xchg
pop
notb
jae
push
sub
dec
sahf
dec
push
adc
add
mov
jecxz
dec
sub
out
leave
loopne
sbb
mov
adc
xchg
jns
cmpsl
push
xor
mov
lods
sar
dec
roll
mov
cmp
pop
ljmp
popa
push
add
dec
test
jg
pop
cli
lds
xlat
in
into
ret
pop
repnz
icebp
jnp
pop
xor
je
mov
jae
stos
xor
fadd
lods
mov
xchg
sub
xor
lods
cmp
push
jmp
push
mov
es
sahf
mov
push
jne
cmpb
and
xor
rol
aaa
clc
fmuls
mov
add
push
or
fcmovu
cwtl
aad
addr16
enter
mov
fildll
aam
push
out
loopne
cmp
cmp
pop
xor
rclb
jge
ljmp
xchg
mov
lcall
mov
dec
out
mov
cltd
or
adc
fimuls
call
inc
push
rol
repnz
lds
sub
int
sub
mov
jbe
mov
push
pop
mov
lret
hlt
sub
ret
mov
mov
lahf
insl
dec
cmp
or
or
sbb
mov
outsb
jbe
xor
sbb
mov
xlat
outsb
xor
insb
bound
ja
adcl
cli
out
xor
ljmp
mov
pop
add
aaa
push
pop
lods
sub
popa
iret
or
sti
insb
or
and
sarb
xchg
in
jnp
call
push
in
inc
mov
pop
movsb
int
mov
cmp
sub
cmp
adc
sub
cld
cmp
mov
repnz
jmp
cli
mov
lods
push
lea
add
xor
jb
in
adc
xchg
push
inc
xor
sub
rclb
idivl
jns
sbb
pop
pop
movsb
cmpsl
ds
jmp
xor
int
pop
jecxz
jle
aam
or
stos
mov
fxrstor
ret
push
mov
sbb
and
test
and
nop
cmp
aaa
sbb
xchg
mov
adc
in
mov
mov
int
dec
adc
or
add
subl
jb
arpl
imul
inc
insb
and
sub
ret
ret
mov
adc
scas
adc
mov
cmp
adcb
mov
outsl
xor
inc
fimull
push
es
mov
aam
hlt
sub
xchg
cmpsb
and
cmp
pop
jo
inc
inc
or
xchg
das
mov
inc
clc
sub
or
cmp
lret
mov
add
sub
repnz
or
roll
mov
mov
sub
cli
mov
ljmp
mov
rcrl
jo
inc
dec
add
jb
or
enter
mulb
or
adc
inc
sub
sbb
mov
jl
xor
cmp
jmp
mov
pop
insl
mov
pop
in
xchg
ds
push
cwtl
push
xchg
lahf
shrl
xchg
inc
cmpsb
leave
std
sbb
dec
dec
inc
dec
imul
xchg
call
imul
xchg
xlat
add
cs
lock
push
mov
push
into
pusha
les
inc
jo
mov
out
xchg
add
cltd
movsl
mov
in
int
pop
shrl
ret
mov
sar
jmp
push
and
fsubs
mov
std
inc
int
das
subb
jae
dec
imul
rorl
jno
imul
adc
adc
out
cmpsl
pushf
cmpsb
nop
jns
idiv
iret
mov
test
cmp
adc
xor
icebp
roll
repz
stos
inc
shr
xchg
xor
aaa
ljmp
rcll
enter
pushf
or
jb
std
stos
pop
cmpsb
mov
xor
cmpsb
sbb
xchg
add
insb
cmp
jb
dec
shll
xchg
sbb
cmpsb
rorl
jo
fwait
in
pop
mov
pop
xlat
test
imul
or
and
call
ds
dec
sub
mov
push
cwtl
jg
popf
mov
sbb
mov
pop
pop
mov
in
ds
sbb
add
daa
pop
mov
iret
icebp
cmp
or
push
in
aad
insb
jmp
pop
add
outsl
push
mov
cmp
xchg
mov
fistpl
lcall
mov
adc
cmp
int
pop
call
inc
pop
jp
pop
xor
fs
shl
cmp
jns
popf
dec
pop
cmp
icebp
cbtw
inc
popf
adc
sahf
mov
cmpb
subb
mov
push
enter
ret
pop
icebp
in
pop
jge
icebp
into
push
das
pop
push
clc
lock
pop
adc
fsubr
ljmp
jae
js
mov
int3
stos
pop
inc
dec
sbb
icebp
cmc
mov
and
pop
ds
push
and
jp
call
mov
rol
inc
jb
mov
lods
sahf
mov
sbb
push
pop
or
mov
jns
or
mov
test
push
sub
pop
clc
pop
pop
into
sbb
rorb
add
add
sarl
cltd
xchg
or
push
mov
inc
nop
push
pusha
cmpsb
jo
inc
xchg
and
xor
add
adc
loopne
lock
push
mov
inc
nop
push
pusha
cmpsb
jo
inc
xchg
and
xor
add
adc
loopne
lock
push
mov
inc
nop
push
pusha
cmpsb
jo
inc
xchg
and
xor
add
adc
loope
icebp
xor
add
push
mov
inc
nop
xchg
pusha
cmpsb
jo
ljmp
mov
mov
sahf
lock
sarb
mov
fwait
nop
push
pusha
push
jl
push
ds
dec
and
outsb
adc
mov
sahf
lock
sarb
out
cmp
push
bound
jo
pusha
ds
dec
inc
pop
loopne
add
mov
sahf
lock
fdivrs
test
cwtl
decb
pop
xor
cmp
adc
loopne
cltd
fnsave
imul
sti
out
insl
push
or
cld
ds
add
dec
xor
sub
in
or
clc
loopne
cwtl
mov
movsl
dec
outsl
add
ja
lahf
ss
test
xchg
hlt
adc
je
sar
push
aad
xor
xor
mov
lock
aas
loopne
or
adc
xchg
outsl
push
xor
mov
jae
iret
outsb
mov
fsubr
adc
aas
xchg
jne
aad
out
sar
xchg
push
in
loop
ds
pop
mov
jno
cmpsb
adc
rcrb
lcall
pop
popa
je
push
jnp
jb
pop
inc
outsb
call
add
loopne
out
sarb
mov
cltd
decb
cs
ds
dec
cmp
outsb
add
enter
lret
rcr
mov
in
mov
or
push
aas
sub
arpl
add
jge
cwtl
in
lock
mov
aad
shll
cld
imul
adc
jnp
sub
pop
sbb
jle
out
cli
xchg
mov
fidivs
push
pusha
push
jo
inc
ds
dec
and
outsb
add
mov
sahf
lock
sarb
out
cmp
push
pusha
push
jo
inc
ds
dec
and
outsb
add
mov
cmp
loope
ret
adc
and
fwait
mov
out
call
scas
idivl
pop
fcompl
jle
decb
jo
enter
mov
jnp
push
repnz
pusha
daa
sarl
push
sbb
inc
mov
mov
cltd
into
lods
cli
mov
or
popf
test
fcmovu
mov
negb
jl
pop
sub
cmp
inc
fsubr
mov
cmp
sbb
nop
cmp
dec
sarb
and
scas
and
test
xor
out
sbb
jnp
mov
push
stos
and
mov
adcl
inc
imul
ret
fimull
aad
or
pop
stc
mov
mov
sub
sbb
mov
jne
sahf
sub
daa
inc
pop
in
jae
neg
inc
aas
imul
mov
dec
xchg
insb
inc
mov
arpl
and
lcall
cmpsw
push
stos
pop
ds
mov
test
push
adc
movsb
aas
inc
mov
std
mov
repz
insb
adc
add
jmp
push
sbb
pushf
add
xchg
les
lahf
mov
sahf
sub
sub
js
bound
sbb
inc
scas
filds
test
lock
add
xor
push
enter
outsb
xchg
inc
lds
fstpl
dec
jbe
mov
dec
sub
cmpsb
add
jns
lods
movsl
pop
jo
lret
inc
and
enter
push
and
je
cmp
lods
or
cmp
icebp
xor
pop
gs
incb
test
in
mov
inc
add
mov
andl
jae
pop
in
inc
aad
lea
int
stos
xor
lahf
pushf
sub
mov
pop
mov
mov
out
icebp
lea
stos
push
in
sbb
scas
aaa
loopne
cmpsl
or
sbb
mov
or
mov
inc
and
fdivr
lahf
adc
jge
jmp
and
sahf
gs
xor
inc
fdivl
aas
pusha
cltd
sub
add
es
out
xor
dec
mov
dec
adc
fimull
jl
mov
jbe
icebp
sbb
sbb
dec
out
pop
and
push
hlt
test
lcall
dec
xchg
mov
out
sub
popf
pop
bound
cltd
or
mov
stos
stc
jge
push
jge
in
mov
sub
mov
mov
aaa
fistps
je
mov
scas
mov
lahf
imul
stos
in
das
mov
rcl
cltd
adc
cmp
add
test
mov
pop
fcmove
repnz
xor
dec
rcr
loope
cli
xchg
adc
push
cmp
xor
cld
leave
or
sti
cmpsl
ret
mov
fs
addr16
nop
sub
push
stos
hlt
fwait
pop
add
push
subl
xchg
or
sub
subl
mov
lods
or
sahf
jbe
aam
int
or
pop
std
jmp
imulb
iret
scas
scas
sar
cmp
cld
int
cmpb
mov
or
add
ss
dec
ror
cmpsl
push
sub
or
ret
cwtl
mov
jmp
jg
shrb
outsl
inc
xchg
mov
add
jmp
mov
lahf
ss
sbb
rorb
popa
or
jge
inc
sub
xchg
push
sbb
add
pop
mov
call
repz
fisttpll
xchg
neg
sub
mov
jbe
dec
and
adc
xchg
mov
fistpll
mov
pop
icebp
fisubs
and
repnz
jge
jne
sar
and
out
arpl
mov
adc
rcr
je
or
hlt
mov
jnp
pop
jp
mov
mov
into
imul
flds
dec
iret
mov
mov
ss
cld
in
push
xchg
pop
out
dec
or
aam
add
clc
sbb
sub
sub
int
xor
insl
insl
xchg
lock
add
leave
mov
and
xchg
sbb
jns
inc
push
or
mov
pusha
pop
bnd
lods
fwait
leave
std
lret
cmp
insl
pop
in
xor
mov
decb
repnz
sarb
scas
jmp
rorl
xchg
mov
fs
mov
pushf
pop
shll
fimull
shlb
xchg
loop
sub
jb
lahf
add
add
add
xchg
xor
shlb
inc
or
push
pop
pop
test
dec
pop
mov
lds
movsl
and
cli
fnstcw
cmp
or
adc
push
outsl
stos
orb
scas
movsl
lcall
sahf
sbb
or
push
xor
shlb
lds
test
lcall
fmul
cmpsb
adc
mov
push
sahf
or
jle
shll
insl
mov
dec
jp
and
and
test
in
mov
xor
sbb
movsl
cmp
inc
lds
mov
leave
and
aas
jmp
lret
xchg
adc
pop
scas
rolb
aad
lea
mov
repz
mov
xchg
or
aad
pop
inc
data16
inc
enter
out
clc
lret
lahf
pop
scas
and
jo
add
sub
or
pushf
dec
xor
xchg
test
jmp
jl
rcl
cli
repz
push
rcr
idivl
add
adc
mov
fbld
test
adc
std
pop
dec
out
mov
inc
pop
jb
mov
add
mov
cmpsl
sbb
pop
lods
sub
pop
xlat
imul
add
aas
jno
rcrl
mov
or
pop
mov
jne
sub
dec
out
jb
mov
pop
mov
and
xchg
lret
dec
sub
repnz
inc
sub
push
jp
xor
das
push
sbb
aad
aad
movsl
outsb
ja
testl
pop
sub
jmp
jecxz
pop
sub
sub
xor
jmp
push
call
lods
xlat
push
std
repz
or
test
mov
push
jbe
shl
xchg
insb
inc
jo
inc
push
inc
fs
add
lret
mov
aaa
out
inc
mov
mov
push
jecxz
and
inc
jl
mov
mov
cwtl
xchg
and
xor
xor
fisttpll
aam
pop
addb
cmpsl
push
gs
push
xor
xor
mov
pushf
out
addr16
daa
cmp
dec
fldl
sahf
cmpb
aas
mov
xor
sbb
sub
ret
stos
ss
js
ret
idivb
and
cli
lods
repz
jmp
dec
lret
push
stos
lods
and
mov
outsb
out
aaa
jp
inc
leave
push
sbb
orb
adc
xor
dec
lock
mov
adc
test
adc
add
mov
inc
outsl
push
adc
sbb
pusha
pop
fidivrl
pusha
sub
pusha
jecxz
inc
out
mov
sub
mov
sub
dec
add
adc
inc
xlat
aaa
xlat
icebp
stc
pop
daa
add
pop
aaa
mov
leave
pop
or
push
mov
bound
in
add
lahf
fildll
iret
mov
aam
lods
shr
sbb
scas
adc
adc
shll
insl
scas
dec
fdivrp
mov
xorl
push
push
xor
out
lds
stos
popa
push
loopne
pusha
pusha
mov
lahf
mov
sbb
lcall
pop
mov
call
cmp
jbe
insl
dec
mov
out
pop
and
repnz
insl
gs
push
sahf
sbb
movsb
jo
shrb
sar
in
cmpsb
lahf
dec
fdivl
ljmp
jge
inc
in
imul
test
jmp
xor
jne
sub
lcall
sti
xchg
jmp
cltd
lock
pop
xchg
and
xchg
out
push
cmp
loopne
adc
add
xor
add
sbb
fistps
xor
and
in
sub
fdivl
pop
pop
jno
popf
call
pop
xor
outsb
sbb
shlb
inc
xor
mull
call
rcll
xor
popf
out
es
pop
clc
data16
orl
or
js
clc
jmp
fistpl
jecxz
push
out
dec
push
movsl
mov
push
xchg
cmp
mov
aam
mov
jbe
cmp
lret
sub
jns
jl
inc
pop
add
sub
test
jno
push
call
in
mov
or
jo
mov
fsubs
loopne
shlb
jmp
rorl
xchg
mov
push
xor
stos
sbb
in
sbb
mov
jne
mov
mov
enter
and
rorl
mov
js
pop
lds
cli
leave
cld
pusha
ret
int
mov
jmp
xlat
xchg
jecxz
pextrw
sbb
jmp
and
mov
or
in
es
push
xlat
outsb
stos
aas
push
scas
popa
fsubs
div
aam
xor
jp
lahf
pop
ret
out
inc
inc
sub
out
out
sahf
xchg
sti
fmuls
out
std
mov
xchg
out
shrl
cmc
outsl
xchg
sbb
mov
dec
mov
jne
cmc
cmp
push
pop
xchg
jae
xor
and
cmp
jo
push
rcl
mov
sbb
jmp
jae
movsl
out
sub
sub
xchg
xchg
int3
sbb
cli
inc
fwait
or
or
popa
xchg
mov
adc
les
pusha
mov
nop
dec
pushf
push
adcb
hlt
push
sub
or
inc
inc
cld
pop
aad
push
lret
aad
int
repnz
push
nop
fwait
adc
inc
and
sbbb
jl
cmp
in
cmc
repz
push
inc
mov
pushf
sahf
mov
push
jae
sub
fstpl
mov
mov
call
lea
push
flds
ret
mov
and
sub
fstl
fsubrl
scas
adc
jl
mov
push
jns
subb
mov
cmpsl
push
mov
push
mov
dec
outsl
sub
rcrl
popf
add
shll
loopne
hlt
in
hlt
mov
push
push
add
sub
adc
pop
add
pop
loope
adc
push
movsl
scas
int
loopne
mov
cwtl
and
loop
push
jecxz
adc
out
ret
mov
rcrl
cmp
mov
repnz
add
pop
xchg
test
mov
fimull
cmp
cmc
in
xor
mov
adc
push
or
repz
jl
adc
inc
ret
or
sahf
stos
mov
mov
adc
or
sbb
push
ret
mov
addr16
loop
jbe
clc
push
shl
sub
add
mov
mov
stos
test
mov
je
jmp
enter
and
and
movsb
mov
dec
ret
cmp
push
lret
fs
jae
push
std
shrb
shrl
aam
bound
fisttpl
xchg
test
lock
aam
iret
inc
shll
cmp
out
xchg
mov
lods
sub
dec
lods
scas
sbbl
loopne
scas
call
aad
lret
sub
dec
pop
push
loop
enter
shll
aam
les
or
xchg
shr
in
mov
ljmp
sti
loopne
repz
fnstcw
rolb
sar
sti
xchg
jp
jecxz
xchg
cmp
ss
sbb
mov
sbb
xchg
push
dec
mov
aad
adc
push
mov
or
mov
adc
pushf
mov
cmp
popa
and
nop
mov
pop
push
cmp
shll
fst
mov
xchg
adc
mov
pop
loop
andb
pop
in
xchg
jmp
adc
jbe
insl
xlat
dec
mov
sahf
mov
push
out
popa
and
and
xchg
repnz
addb
adc
sbb
mov
xchg
xchg
cmp
out
in
jmp
fsubrl
dec
or
fnstcw
outsl
xor
iret
mov
or
push
pushf
mov
inc
andl
lret
movsl
ds
mov
out
mov
pop
sub
sahf
aaa
push
add
jo
mov
mov
addr16
xchg
xchg
in
xchg
js
jmp
fsubl
pop
inc
xchg
lret
adc
dec
cltd
cmpsl
es
jl
dec
xchg
dec
jb
loop
cmp
adc
cld
xchg
or
aam
xor
sub
sbb
insb
lods
mov
je
or
loope
int
push
call
add
add
jno
mov
xchg
loope
inc
popf
out
addb
movl
clc
movaps
jge
pusha
iret
daa
jae
std
stc
cmpsl
xchg
mov
add
out
add
sub
sarl
xchg
outsl
dec
jnp
mov
push
jl
popf
stos
jbe
mov
add
stos
adc
mov
add
std
jbe
xchg
adc
insl
icebp
or
mov
push
and
popa
daa
mov
mov
and
fisubrs
jl
jo
lods
enter
or
mov
fnstcw
in
fwait
repz
fadd
mov
scas
add
jo
inc
aam
jns
ljmp
mull
pop
sbb
rcrl
dec
rcl
fwait
pop
pop
cmp
rclb
out
aaa
or
inc
fdivrl
adc
jmp
dec
imul
ret
sahf
mov
flds
xor
stos
sbb
mov
xor
jns
xor
push
and
xorl
sbb
fnstsw
pushf
sbb
orl
mov
dec
ss
mov
repnz
cmc
rolb
xchg
mov
mov
stc
xchg
cmc
enter
mov
lock
xchg
popa
jns
nop
mov
adc
dec
and
push
in
push
inc
pusha
stos
lea
mov
lret
sub
ds
movsl
jns
je
sub
aad
fisttpll
imul
add
inc
in
jecxz
out
jg
rolb
or
rcrb
sub
std
cmp
and
test
or
push
jns
dec
fs
fs
sub
mov
outsl
outsb
mov
icebp
std
fildl
sbb
and
mov
mov
pop
andl
xor
pop
push
adc
mov
sbb
or
sbb
or
jo
dec
push
inc
stos
int
sbb
mov
lock
sub
and
ficomps
aad
in
jnp
pop
sbb
test
xchg
idivb
jno
imul
out
repz
push
mov
ds
sub
in
push
push
cmc
add
je
pop
xchg
ret
dec
lea
imul
jmp
or
jge
add
es
insl
test
rcrl
cli
mov
in
jmp
pop
shll
cli
adc
imul
cli
or
mov
shlb
xor
pop
mov
pandn
int
pop
cmpsl
mov
adc
adc
or
in
inc
test
jns
movsl
movsl
cmp
adc
jp
add
loope
or
testl
jno
jnp
mov
xchg
lret
add
data16
cmp
xchg
repnz
out
mov
inc
imul
loope
fstpt
and
test
pusha
mov
je
sub
push
int3
loopne
cltd
mov
insl
mov
or
push
inc
sbb
jmp
int
pop
mov
or
sti
mov
jl
ljmp
cmpsb
jmp
sub
insl
xchg
pop
out
ja
out
rolb
bnd
inc
cmp
xchg
add
cmp
sbb
dec
xchg
rcll
daa
jmp
cmp
jp
aaa
sub
xlat
out
dec
in
jge
mov
popa
push
jo
loop
mov
clc
pop
adcb
mov
xchg
es
push
int
or
mov
jge
std
mov
daa
test
pop
cmc
xchg
lret
mov
mov
cmp
popa
jecxz
scas
sbb
stc
mov
lret
shrl
dec
repnz
mov
jb
jnp
pop
dec
js
loop
insl
mov
dec
jl
lret
popl
push
inc
pop
lock
sub
hlt
xor
xor
test
xchg
nop
sti
cwtl
fiaddl
mov
mov
popf
mov
test
outsl
out
jbe
out
dec
adc
out
into
call
cltd
fisubrl
enter
mov
and
cwtl
jnp
and
inc
sub
mov
ror
fcmovnu
not
and
inc
mov
mul
fidivrl
and
add
sub
movsb
jns
call
pop
loop
mov
mov
mov
jns
lahf
sub
mov
xchg
push
cwtl
add
push
cs
mov
sub
aas
dec
mov
fnstcw
cmp
mov
mov
sub
in
xor
push
ljmp
std
mov
xchg
mov
std
push
ss
mov
mov
jl
xor
rcrb
jmp
lahf
imul
mov
fisttpll
mov
cld
lods
std
out
lret
adc
dec
lcall
popf
call
pop
jecxz
fdiv
movsb
mov
mov
ret
jp
push
pushf
stos
mov
pop
clc
sub
mov
or
jecxz
adc
mov
aas
addb
xchg
adc
in
cmp
lahf
add
fisttpl
je
lds
add
adc
sbb
stos
fdivs
cmp
loop
add
xor
cmp
dec
and
and
lods
ret
xor
mov
or
mov
and
push
sub
fisttps
pop
fisttpl
lea
push
xor
in
mov
sub
jns
push
gs
jne
adc
icebp
mov
cmpsb
ret
add
jge
rclb
outsl
jle
iret
fsubs
jmp
mov
push
mov
push
lea
shr
nop
mov
in
lods
aam
and
orl
mov
movsl
or
pop
dec
scas
insb
loopne
shlb
out
xor
decl
clc
and
out
push
xchg
cmpsl
push
lods
mov
adc
pop
jae
dec
test
xchg
scas
pushf
push
fmull
or
pop
or
mov
addr16
push
fsubrs
push
popa
cwtl
fs
es
daa
add
add
imul
sub
jb
test
rcll
idiv
lcall
das
jg
stos
inc
out
mov
outsl
dec
pop
mov
sub
pop
data16
aad
pusha
mov
cmp
imul
loop
inc
cmpsb
dec
jle
out
fsts
adc
icebp
pop
mov
xlat
inc
out
and
pop
mov
ljmp
dec
lcall
cmp
and
scas
or
sarb
adc
jmp
sub
mov
xchg
lods
fistpl
out
lds
lea
movsl
inc
shlb
xchg
pop
xor
push
and
dec
fsubp
scas
int
mov
mov
jne
cld
dec
cld
jb
mov
sti
repnz
adc
out
and
push
push
pop
push
cmp
pop
or
out
push
mov
push
aad
push
call
stos
sub
jmp
gs
in
pop
lcall
pushf
and
shlb
rcpps
cmp
pop
jecxz
or
fsubs
imull
in
repnz
lods
xchg
cwtl
push
mov
jge
ja
popf
mov
sahf
test
lcall
inc
adc
mov
out
test
xor
mov
or
add
movswl
sub
sbb
cltd
jge
daa
pop
or
loopne
mov
lret
adc
fbld
and
test
popf
push
call
ret
je
sub
lds
xor
cmp
shrl
pop
fld
fwait
ret
testl
pop
jbe
pop
js
jl
out
jmp
repnz
cltd
mov
cmp
in
leave
ss
and
addr16
arpl
jl
push
adc
cs
push
jbe
in
sub
mov
dec
xor
fucomi
mov
jecxz
xor
xor
xchg
pop
fwait
mov
aam
push
fadd
or
inc
xchg
adc
rcr
mulb
mov
int
jle
push
mov
xor
mov
scas
xchg
xor
mov
fdiv
pusha
jnp
mov
push
lahf
jno
pop
or
shll
xchg
xor
inc
fstl
jnp
cmp
jb
testl
insl
cltd
int
mov
adc
xchg
pop
push
add
sub
sub
stc
push
adc
jb
jno
in
and
xor
cs
in
add
repnz
in
fnstenv
mov
adc
xchg
mov
adc
loop
push
xchg
jbe
ja
jle
xchg
rol
xor
scas
int
jecxz
shlb
loop
js
idivb
inc
adc
sbbb
popa
pop
cmpl
mov
insl
push
popa
movsl
jae
mov
call
les
rcrl
divb
adc
push
add
in
fdiv
fsubrs
mov
mov
cmp
push
pusha
push
jo
inc
ds
dec
and
outsb
add
mov
sahf
lock
sarb
out
cmp
push
pusha
push
jo
inc
ds
dec
and
outsb
add
mov
sahf
lock
sarb
out
cmp
push
pusha
push
jo
inc
ds
dec
and
outsb
add
mov
sahf
lock
sarb
out
cmp
push
pusha
push
fiaddl
iret
xchg
incl
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
mov
cltd
xchg
mov
lods
addl
cmp
sub
sbb
or
jno
inc
pop
inc
dec
lds
xchg
mov
stc
icebp
jmp
and
xor
pusha
sbb
or
jns
imul
inc
test
stc
xchg
jmp
inc
pop
adc
imul
cmp
dec
iret
mov
clc
gs
icebp
sub
sub
add
pushf
pop
and
jno
inc
rclb
dec
mov
jmp
iret
add
dec
aad
rcl
inc
dec
test
in
or
pop
scas
mov
lods
hlt
jg
outsb
xchg
sub
loop
ja
xor
adc
adc
jno
xor
mov
fldcw
push
clc
icebp
stc
ds
cltd
and
xor
sub
inc
cmpsl
push
push
mov
stc
jns
dec
es
lahf
add
add
push
cmp
jno
mov
cmp
push
sbbb
ljmp
xor
or
xchg
popf
inc
dec
push
dec
cli
mov
xchg
mov
fnstenv
out
stos
sub
and
sub
imul
ret
jp
fucomip
iret
mov
sarl
fs
adc
pop
adc
in
clc
aam
repz
lock
mov
leave
inc
jl
inc
add
sbb
push
push
sub
daa
int
fstp
loopne
ret
xchg
icebp
jmp
and
xor
add
adc
popa
jns
imul
mov
sbbl
ror
and
xor
add
adc
popa
jns
imul
pop
mov
cs
and
inc
or
xlat
sub
leave
add
lds
ljmp
cmpsl
or
int3
stos
and
ds
addb
jge
sahf
stos
lret
addr16
add
mov
mov
sub
jle
or
ja
pop
sbb
les
outsl
mov
inc
inc
daa
es
mov
adc
ja
pushf
insb
push
arpl
sbb
pop
sub
stos
push
jge
cmp
out
mov
or
or
dec
int
add
jnp
addr16
das
repz
popa
inc
xor
and
and
sbbl
and
xchg
cmpsl
sahf
cli
rcrb
lcall
mov
mov
push
int
mov
mov
inc
push
pop
mov
daa
add
shrl
je
fildll
lcall
and
push
or
shl
push
adc
mov
fsubs
fucomip
cmp
mov
push
popf
cmp
imul
popf
sbbb
popf
sub
xchg
mov
dec
inc
fadds
or
imul
mov
sbb
cwtl
add
repnz
fcomp
repnz
push
xchg
roll
rcrb
jg
enter
fbstp
xlat
sbb
les
std
sub
jne
ret
adcb
mov
jp
aam
sbbb
imull
push
dec
sbb
pusha
or
scas
xchg
outsb
out
add
pop
hlt
lea
mov
hlt
fwait
or
jbe
push
sub
dec
in
outsl
movsl
scas
dec
test
pop
jnp
mov
mov
lods
daa
in
or
sti
sub
dec
ret
inc
lret
stos
mov
mov
cld
pop
faddl
mov
aam
add
rcll
fdivp
sahf
push
xchg
inc
or
or
and
inc
dec
ss
jmp
sbb
sub
mov
loopne
hlt
inc
inc
jno
cmp
call
shrb
ret
cmpsb
jnp
pop
and
mov
adc
jp
and
in
lods
jno
and
loop
call
sbb
xor
mov
pop
ret
test
pop
lds
push
test
sahf
push
jb
int3
cld
mov
ret
cs
inc
ret
aad
shrb
jecxz
aaa
lcall
repz
push
xorl
movsb
stc
lret
xor
nop
inc
push
sbb
push
cmp
iret
outsl
xchg
arpl
inc
mov
xchg
adc
xor
cmp
repnz
fdivrs
pop
add
mov
jmp
aad
sbb
mov
pop
sub
cltd
pop
xor
pusha
and
xor
jg
xor
push
fwait
shll
cmpsl
jb
enter
orl
mov
push
mov
cmpsl
mov
jmp
lods
jp
insb
inc
xchg
mov
mov
pop
fs
insl
xor
inc
mov
sub
inc
outsb
divb
repz
mov
dec
insl
cmpsl
jl
shll
pop
pushf
push
nop
aam
cs
mov
and
lcall
addb
sbb
sti
sbb
insb
mov
jbe
aaa
and
rcrb
dec
and
sarl
rcrb
jmp
adc
push
pop
fs
xchg
fildll
dec
lock
loop
sub
add
xchg
shlb
add
loopne
sub
out
lods
jb
dec
cmc
inc
pop
or
cmpb
int
adc
aam
mov
cld
aaa
sbbb
sub
mov
or
fsub
shl
dec
mov
xor
xorb
int
sub
adc
ret
mov
jns
lock
mov
fimuls
loope
loopne
loope
jnp
data16
in
jmp
and
sbb
pop
es
dec
loop
mov
inc
pushf
dec
fmull
pop
and
xlat
cwtl
mov
add
xor
mov
cmc
or
out
clc
js
jge
cmp
nop
or
stos
leave
xor
idivb
adc
in
xchg
or
call
pop
sbb
mov
pop
mov
insl
sbb
add
int
xor
pcmpgtb
or
sub
sub
inc
divb
mov
subl
or
int3
clc
jl
mov
and
mov
in
stos
jno
fs
mov
ds
mov
je
fsubl
repz
jnp
adc
divl
out
xor
pop
mov
rcrb
pusha
pop
div
int
je
mov
mov
dec
push
cltd
popa
les
dec
insb
shr
cli
or
push
mov
dec
push
pusha
sub
push
mov
mov
cmc
pop
fildl
std
and
xchg
xchg
pushf
test
movsl
pop
inc
sahf
adc
daa
mov
mov
jge
jmp
sbb
adc
mov
dec
jnp
mov
sarl
mov
pop
data16
adc
out
stc
mov
mov
xor
cmp
mov
adc
insl
xchg
mov
dec
addr16
push
xor
sub
xor
dec
lods
jno
and
jecxz
test
and
xor
test
in
lods
outsb
aam
jp
and
dec
mov
or
add
dec
negl
js
sahf
adc
repz
add
fidivl
pop
les
cld
fcmovnbe
pop
shrd
mov
push
mov
cs
sub
insb
mov
sub
add
cmp
xchg
cmp
pushf
es
add
xor
rdtsc
jle
and
leave
mov
stc
movsb
adc
or
mov
jle
es
and
jns
movsl
mov
add
imul
in
into
adc
cmp
mov
mov
xchg
jns
pop
pop
scas
dec
jge
inc
jle
sti
or
pop
push
in
push
mov
xor
out
xlat
out
js
ret
test
push
sbb
ja
out
sub
jge
add
push
xchg
pop
jno
sub
xchg
adc
xor
fdivr
arpl
cmpsb
rorl
mov
cli
pop
ds
imul
mov
and
in
xchg
cmpsb
cwtl
es
call
data16
xchg
mov
fstpl
mov
leave
mov
fmuls
sbb
sub
dec
and
pop
popf
adc
adc
cmp
mov
mov
shrl
fbstp
add
push
stos
ss
in
xchg
push
lds
inc
mov
mov
and
xchg
lahf
cmpsb
add
stos
pop
xchg
pop
inc
in
lret
aam
stos
pop
pusha
mov
nop
popf
sahf
stc
dec
les
cmpb
fdivs
mov
sti
sbb
fsts
ja
roll
mov
adc
pop
jp
inc
fstpt
cmpsb
insl
mov
rclb
sbb
das
fdiv
lock
xor
push
and
std
inc
sbb
pop
jg
mov
jbe
sub
push
adc
test
adc
sub
outsb
push
dec
fwait
inc
or
repnz
daa
jp
dec
test
stos
push
sarb
inc
mov
cmp
lock
gs
mov
mov
pusha
loopne
adc
inc
mov
lahf
data16
mov
mov
shrl
pop
sub
andb
sub
push
jne
cmp
mov
inc
cli
add
sbb
xlat
xorb
or
mov
mov
test
adc
lods
ret
and
sub
lods
push
and
repz
loop
aas
lock
mov
pop
fsubl
and
lock
add
cs
mov
xor
fisubl
imul
decb
cltd
repnz
out
jge
punpckhbw
or
jl
and
dec
xchg
and
and
hlt
xchg
cmp
inc
mov
mov
fsubrs
enter
mov
lret
lret
clc
out
push
xor
add
cmp
sahf
inc
add
sbb
sub
xchg
pop
test
stc
scas
push
and
dec
mov
pop
ret
cmpsl
mov
adc
ss
addb
adc
sti
dec
das
dec
ficompl
sub
int3
xor
pop
cmpsl
and
pop
pop
popa
je
popf
jmp
inc
and
lcall
popa
stos
test
into
fs
test
jns
dec
lret
and
add
int
cmp
das
or
dec
mov
scas
push
in
jae
xchg
test
cmp
mov
fs
mov
or
jne
jb
ljmp
cmpsb
mov
pop
push
fcomi
xor
jmp
push
out
or
mov
dec
insb
stos
test
dec
cmpsb
xorb
repnz
mov
push
lahf
pop
jmp
cld
dec
imul
mov
cmpsl
xor
std
notb
sbb
adc
xchg
or
sbb
push
sbbl
test
negl
cmpsl
dec
popa
pushf
ljmp
xchg
in
lods
je
aad
lahf
jle
stos
pop
and
cmp
shlb
cld
push
pop
test
pop
and
adc
sbb
scas
add
cmpsl
icebp
jo
inc
sbb
inc
jl
sbb
inc
cmc
repnz
dec
pop
mov
mov
dec
cs
cmpsl
mov
ret
add
push
fnsave
pop
mov
fadd
push
xchg
out
sub
sub
xor
shlb
dec
or
loope
f2xm1
les
cmp
jno
mov
cmc
mov
ret
pop
pop
sub
in
stos
add
xorl
pop
orl
rcrb
call
lahf
mov
arpl
filds
and
int
imul
sbb
push
fmuls
imul
push
jno
add
cmp
cmpsb
pop
mov
sub
fadds
imul
jp
aam
leave
jl
clc
lods
dec
inc
sub
xchg
mov
xchg
js
lea
sbb
inc
sub
push
sbb
hlt
pop
jp,pt
mov
adc
sbb
push
pop
dec
add
jg
loop
aaa
fcoml
popa
jecxz
xchg
out
mov
and
mov
dec
lcall
mov
pop
mov
test
out
cmp
and
push
inc
int3
and
orl
ret
and
mov
mov
mov
fisttps
mov
xor
lock
dec
cmpb
jle
imul
lods
test
sbb
pop
test
mov
dec
add
push
mov
jns
push
or
mov
and
pop
rolb
shll
repnz
dec
dec
lcall
inc
inc
xor
pop
mov
push
leave
add
mov
popl
imul
cmp
lock
sbb
xor
mov
push
add
mov
and
jmp
repz
push
pop
mov
shll
sbb
sub
xor
inc
sbbb
xor
mov
mov
jg
inc
push
adc
das
mov
dec
out
lock
push
ret
popa
and
cmpsl
add
aaa
inc
push
adc
les
mov
repnz
xchg
xchg
out
fsubrp
sbb
lock
fsubrs
lea
mov
addb
out
mov
sahf
repnz
mov
inc
rorb
repz
fs
imul
sub
std
icebp
xor
mov
aaa
add
std
push
out
pop
outsb
lea
js
movsl
negl
cmc
iret
or
fisubs
pop
jno
and
sub
mov
test
adc
loop
or
inc
mov
out
jge
xlat
out
or
push
idivl
js
repnz
cltd
push
jae
lret
inc
or
jge
fs
xchg
jle
test
sbb
std
out
test
das
mov
mov
sub
subb
mov
scas
fsubrs
sub
test
mov
es
jbe
jg
es
ret
sbb
cmp
xchg
cmp
add
in
mov
scas
mov
dec
mov
add
xchg
adc
outsb
push
add
jl
push
popa
mov
sahf
stos
jp
xchg
mov
pop
mov
les
add
jnp
lds
sti
mov
mov
imul
fidivrs
lea
sub
jns
xorl
cmp
mov
pop
pushf
shll
rcl
cs
jge
jae
push
ficomps
iret
jbe
push
jns
in
sbb
add
repz
clc
jg
pushf
ss
fs
cmp
ljmp
ficoml
std
add
sbb
add
in
xor
xlat
jecxz
lea
stos
inc
leave
jb
push
push
mov
or
data16
fdivs
adc
mov
pop
push
xor
aad
test
jo
stos
aaa
addb
mull
jecxz
lods
shll
add
sbb
arpl
xlat
xor
and
int
or
add
pop
jmp
mov
adc
mov
and
lods
push
andb
aaa
ljmp
mov
sti
nop
int
repnz
cltd
out
fwait
inc
mov
push
add
or
mov
or
jbe
out
xchg
call
cmpsl
push
fbstp
ficompl
sbb
xor
shrl
ds
ja,pn
xchg
mov
mov
or
push
lds
push
push
adc
inc
push
mov
or
add
in
sbb
pop
jo
aaa
push
mov
push
inc
jle
js
dec
push
cli
pop
dec
add
mov
arpl
mov
sbb
pushf
sbb
sti
jge
sub
in
pushaw
or
cmpsl
iret
and
push
mov
and
mov
dec
inc
popa
jle
jae
fsubl
inc
sbb
pop
icebp
add
cmp
xchg
pusha
cli
xchg
pop
mov
loope
push
jle
loopne
lahf
in
call
lods
scas
shrb
cvtps2pd
push
repnz
xor
xchg
movsl
jne
mov
repnz
cld
cmp
lds
xchg
ret
and
pop
stos
cs
lods
int
fisubrl
rorb
scas
and
shl
pop
mov
lret
jmp
lcall
pusha
and
dec
mov
lcall
push
aam
mov
push
sub
stos
rorb
lock
fwait
iret
jnp
shlb
aam
jg
dec
fisttpl
pusha
jbe
fldl
xor
out
pop
movsl
incb
inc
mov
inc
sbb
or
jnp
ret
int3
cmpsb
and
xchg
fadds
cltd
test
jbe
cmp
bound
and
dec
fs
sbb
xor
enter
ja
outsb
mov
lret
sub
jae
lods
fidivs
mov
pop
insb
sub
lret
idiv
ljmp
dec
fadd
mov
rcrl
fnclex
add
aam
clc
lret
ds
push
mov
mov
loop
jo
rcr
imul
aam
imul
cmpsb
inc
mov
mov
je
cmp
inc
fistpl
sti
and
loope
test
stc
xchg
fsincos
fimuls
xor
nop
push
loope
add
mov
push
cwtl
fstpt
nop
negb
pop
jg
hlt
push
adc
clc
mov
jne
add
ror
adc
ljmp
pop
out
filds
scas
movsb
sti
sub
fsubs
or
mov
call
aad
pop
addr16
sub
mov
aas
fwait
dec
gs
int3
cld
push
jge
outsl
or
imul
lock
ss
test
daa
call
int
xchg
adc
hlt
stos
mov
jmp
repnz
xchg
rcl
inc
lahf
jns
dec
sbb
xor
js
jno
stos
clc
lcall
sub
adcl
add
dec
xchg
fldl
cld
jge
mov
cmpb
pop
jb
daa
sub
or
sbb
mov
sbb
sub
jg
xchg
cmc
pop
inc
lcall
scas
subl
out
xor
mov
outsb
movsl
sub
xchg
mov
mov
adc
mov
sbb
adcb
add
jg
adc
ret
jb
loop
or
daa
mov
fwait
enter
or
adc
arpl
inc
arpl
loop
test
pop
cli
xor
jl
mov
inc
jo
cmp
dec
xchg
jge
pop
iret
lea
cmpsb
adc
adc
fisubl
inc
add
out
lahf
xchg
jle
jl
inc
addr16
xor
inc
je
or
cs
lock
ljmp
cmc
mov
arpl
jno
mov
loop
shrl
js
shl
mov
stos
int3
lret
in
sbb
xor
mov
subl
aam
shrl
sub
movsl
add
int3
push
outsl
cmpsl
mov
mov
fldcw
pop
xchg
scas
add
jmp
adcb
aaa
imul
inc
push
fwait
cmp
nop
das
imul
xchg
and
and
scas
shll
xor
dec
mov
sub
mov
insb
mov
gs
cmp
cmc
scas
mov
mov
pusha
push
sbb
xlat
mov
mov
or
mov
mov
cli
out
add
stos
ljmp
push
lcall
dec
out
jg
cld
ficompl
sbb
mov
mov
push
cli
jl
inc
rcl
ret
cmp
adc
dec
js
sub
in
test
or
push
mov
push
lahf
jbe
dec
jp
leave
call
inc
sbb
mov
jp
push
pop
and
dec
orl
popa
xchg
arpl
pop
repz
xlat
pop
idiv
loope
sti
xchg
nop
ljmp
clc
pop
jns
inc
add
fwait
xlat
jne
das
sbb
into
cmpsl
pop
inc
cmp
jmp
xor
mov
push
cmp
aad
mov
insb
xchg
or
adc
scas
out
int3
sbb
sbb
scas
push
loopne
mov
scas
std
pop
insl
aam
adc
sbb
jne
mov
mov
xchg
pop
sti
aaa
pop
jbe
lret
fisubl
aam
out
test
aad
xchg
jo
mov
push
fs
inc
lret
dec
pop
adc
or
push
pusha
push
sbb
inc
outsb
divl
xchg
imul
lret
xchg
sbb
mov
mov
outsb
addr16
xlat
push
test
sub
test
divl
mov
scas
ss
ss
leave
out
pop
add
outsb
cmp
sub
jns
leave
adc
xchg
fs
out
aam
mov
loop
xchg
xor
enter
adc
imul
or
pop
inc
bound
cmp
cmpsl
call
cmp
out
xor
test
pop
push
mov
sub
xchg
imul
mov
mov
lock
movsl
cmp
dec
cmpsb
add
shrl
loop
push
cli
pop
movsb
adc
stc
mov
or
mov
pop
aad
mov
pushf
pop
test
xchg
shrl
cld
cmc
fstpl
mov
cs
aas
in
lret
pop
cld
daa
pop
jge
mov
rolb
dec
idivl
shll
unpckhps
iret
or
gs
test
fisubl
mov
pop
ja
les
jo
xor
andb
ja
mov
jae
sub
and
jbe
cltd
mov
sub
leave
lods
call
in
enter
sarb
xchg
jo
pop
xchg
mov
jle
cmp
fsubl
sub
data16
repz
cmp
scas
mov
lods
fcompl
sub
fwait
xchg
jns
push
sbb
fstpl
iret
popa
cmp
jecxz
jl
pop
cltd
fistps
mov
dec
out
sbb
pop
fistpl
sub
lods
fwait
push
lock
test
mov
data16
dec
ret
stc
in
leave
fldenv
mov
mov
test
mov
lcall
adc
orb
pusha
xlat
std
mov
arpl
nop
xorl
add
data16
sbb
in
cmp
popa
dec
jo
xor
jbe
sar
mov
add
inc
dec
push
mov
lahf
pop
lods
repz
repz
imul
adc
cmp
cmp
imul
lods
js
lods
dec
lahf
dec
loopne
dec
or
shlb
xchg
jle
jnp
or
pop
adc
cmp
test
push
loop
pop
pop
stos
lods
lds
dec
sahf
and
in
jg
xor
jo
xchg
mov
int
leave
sub
sahf
xchg
jp
adc
in
rcr
sub
scas
setle
idivl
mov
xchg
pop
cld
or
jmp
pop
sub
cs
popl
mov
cwtl
xchg
mov
stc
icebp
jmp
and
xor
add
adc
popa
jns
imul
mov
sbbl
ror
and
xor
add
adc
popa
jns
imul
subl
rcr
leave
and
xor
icebp
sbb
or
popa
imul
in
test
loope
loope
rcrl
and
into
subl
stc
xchg
mov
nop
adc
dec
xor
dec
loop
pop
adc
out
xchg
jmp
scas
sarb
add
jg
dec
xor
das
push
mov
pshufw
nop
fbld
rcl
loopne
lock
add
adc
out
pop
inc
adc
pusha
loope
pop
xorb
pushf
rclb
mov
lahf
je
jno
and
pop
or
pop
mov
adc
dec
in
mov
lahf
dec
push
pop
xor
lret
in
in
outsb
fists
push
ret
pushf
dec
cwtl
pop
cmp
sbb
iret
xchg
scas
sarb
mov
jp
push
jns
adc
test
test
inc
xor
mov
add
aaa
out
das
scas
push
cmp
jo
jo
sbb
and
addr16
push
jp
xchg
movsl
sbb
fidivrl
pop
sti
pop
cmpl
mov
cmp
call
imul
les
jecxz
out
aad
push
xor
and
addl
repnz
outsl
adc
inc
das
push
aas
pusha
aad
lahf
subb
mov
adc
loopne
lock
gs
jbe
and
data16
jp
test
cmc
mov
rclb
jbe
fs
jno,pn
and
popa
xor
test
aaa
pushl
hlt
cmp
cmp
push
cmp
dec
push
aas
pusha
pshufw
out
nop
jmp
scas
sarb
add
jg
dec
xor
das
push
aas
pusha
pshufw
out
nop
jmp
scas
sarb
add
test
in
dec
jae
mov
sub
stc
lds
leave
mov
adc
lods
cwtl
push
aaa
js
fs
inc
cmp
sub
fsts
aad
scas
xor
pop
shrb
jae
cmpsl
sbb
les
xor
mov
dec
xchg
sub
xchg
dec
or
xor
pop
fisttpl
mov
fidivs
mov
jle
mov
push
mov
push
mov
xchg
gs
mov
into
jb
push
mov
lret
and
mov
mov
es
mov
mov
jg
rep
pusha
test
pop
xchg
add
push
adc
push
scas
popa
adc
cmp
jae
adc
add
popf
add
aaa
mov
hlt
xchg
cmp
or
fisubs
int3
and
and
cmp
mov
std
pop
ljmp
push
dec
dec
push
je
fdivrl
into
mov
fists
sbb
mov
pop
inc
jge
imul
mov
clc
jne
les
jle
mov
jmp
mov
repnz
data16
negl
pop
inc
imul
sub
xorb
cmp
cli
jle
frstor
sbbl
divps
cmp
out
jecxz
or
imul
int
in
add
rcll
loopne
stc
bound
pop
mov
adc
fbstp
and
dec
jmp
mov
add
sub
or
movsb
les
shlb
push
jae
mov
inc
xchg
sbb
ret
jmp
push
inc
push
lea
mov
push
sbb
cmp
es
test
pushl
adc
push
dec
mov
pop
sbb
js
adc
inc
lods
xlat
loop
pop
push
push
dec
mov
lahf
insl
pop
pusha
mov
lcall
and
mov
fistps
push
testb
cmc
outsl
test
and
inc
into
int3
jnp
pop
imul
rcrb
les
dec
xor
push
xor
popa
xchg
or
sub
std
push
aas
sub
daa
xlat
mov
sub
sub
push
cmp
out
jno
sbb
loop
mov
inc
pop
jbe
xor
dec
sbb
mov
mov
xchg
popf
adc
cmp
shlb
add
movsl
aam
in
pop
stc
or
imul
sub
testl
ss
xchg
and
pushl
push
sub
subb
je
cmpsb
add
and
mov
lahf
xor
xchg
ljmp
jp
xor
mov
pop
jl
stos
shlb
jg
cld
repnz
sub
jne
and
aam
test
push
sub
add
shlb
pop
fwait
push
shlb
ss
pop
cmpsb
outsl
and
mov
and
clc
and
lock
mov
jg
adc
imul
enter
sbb
ret
dec
sub
push
jg
test
ret
inc
push
jmp
and
mov
mov
add
loopne
xor
pop
lret
movsl
and
lods
jmp
iret
sti
or
pop
push
lahf
fwait
or
dec
push
les
addr16
data16
and
sbb
add
xor
pusha
aas
fisubl
dec
mov
test
rclb
in
lods
pop
das
xchg
scas
outsb
pop
inc
jb
mov
sbbl
mov
inc
cmc
sbb
test
cmpsb
mull
xor
in
pop
jg
push
sbb
inc
rcrb
fiaddl
stos
inc
idivb
sub
in
jno
ljmp
rcll
adc
repnz
outsl
fiadds
dec
sub
pop
cltd
add
jae
jb
adc
fisttpl
cmovns
ds
inc
je
ljmp
mov
pop
testb
aad
movsb
lods
lret
xorl
aas
repnz
add
push
jae
enter
dec
jne
loop
shr
or
sbb
push
inc
lret
call
mov
inc
test
push
push
mov
ss
ss
jmp
cld
jle
imul
sbb
xchg
ss
push
pop
adc
jmp
jl
adc
pop
ret
insl
dec
sbb
xchg
pushf
sbb
mov
jnp
js
ljmp
fnsetpm(287
pushf
rcll
sub
pop
dec
sbb
xchg
mov
adc
leave
mov
pop
icebp
jl
sbb
jmp
in
mov
lret
je
fcoml
pop
mov
dec
jmp
mov
xchg
loope
sub
loop
rcl
lea
out
jb
pop
mov
pop
lods
pop
and
cmpb
cmp
jne
dec
push
xor
inc
push
arpl
lcall
add
cmp
lahf
push
inc
in
shlb
xor
rcrl
mov
ja
vpmacswd
and
inc
push
test
stc
clc
iret
or
push
stos
sbb
int
mov
dec
add
dec
adc
jne
scas
dec
cmp
mov
inc
xor
pop
push
mov
xchg
sbb
adc
cmp
or
xchg
dec
cld
or
loop
fwait
cld
into
nop
loope
in
outsb
std
adc
outsb
in
scas
in
das
add
pop
test
in
hlt
mov
cmp
inc
add
fisttpll
add
mov
xor
xchg
push
imul
aad
imul
fisubrl
int3
notb
sbb
push
test
fisubrs
fidivs
sbb
ds
add
je
loop
in
sub
shlb
mov
jne
pop
nop
clc
xor
sub
cwtl
iret
ret
push
aad
jg
or
or
add
push
jo
dec
push
xor
ficomps
sub
cmpsl
lcall
jmp
sbb
frstor
fucomi
inc
mov
mov
mov
inc
stos
sub
push
xchg
jg
adc
sub
dec
inc
mov
scas
jg
lahf
cmp
pop
sbb
stc
sbb
adc
insl
addr16
inc
shrl
cmp
mov
mov
rcrl
push
fmuls
or
mov
xchg
test
loopne
in
sti
repnz
fildll
sub
pop
mov
mov
dec
test
xor
aam
xchg
xor
mov
jns
jl
sub
and
lods
adc
fstpt
jmp
insl
mov
mov
arpl
pusha
inc
daa
mov
lret
fsubrs
inc
cmpsl
push
sbb
inc
mov
pop
or
jo
in
mov
xor
neg
xor
sbb
and
rol
lds
cmp
lret
lea
neg
mov
scas
loopne
mov
ss
dec
inc
es
mov
cmp
sbb
neg
lcall
sub
inc
inc
inc
sbb
cltd
mov
ja
add
mov
cli
cs
mov
insb
push
xor
pop
inc
les
lock
inc
mov
mov
pop
and
mov
pop
add
inc
xor
lahf
out
loop
daa
push
fcmovne
imul
mov
dec
daa
ljmp
into
mov
jb
mov
push
jnp
pop
xchg
sahf
shl
xor
into
imul
clc
and
or
pop
cmpb
out
scas
enter
jg
fldcw
jbe
or
jmp
fs
mov
fcmovu
mov
cmpsl
fimull
divl
stos
xchg
int
ficompl
pop
cmp
stos
ljmp
mov
and
cmp
movsl
xor
dec
lds
rol
mov
xchg
sbbb
andl
xchg
add
iret
fwait
push
nop
dec
fwait
inc
in
sti
arpl
insl
push
dec
inc
jae
shlb
pusha
outsl
gs
fcoml
call
xchg
scas
out
and
fstpl
lret
cmp
jmp
mov
pop
inc
mov
and
cmpsb
pop
rcrl
jno
push
push
jno
pop
or
lods
and
xor
jp
and
outsb
lods
lret
mov
lock
xor
cmp
cmp
scas
pop
cmpsl
popf
push
mov
and
mov
cmc
pop
dec
mov
lods
cltd
nop
jnp
sbb
addr16
sub
jae
jb
loope
out
adc
cltd
call
xchg
inc
sbb
mov
fcomps
mov
mov
adc
pop
bound
adc
out
mul
fcomip
enter
fdivl
and
into
scas
cs
and
scas
cli
fdivr
dec
rolb
xchg
pop
movsb
leave
push
xchg
rol
sbbl
fxam
adc
pop
push
sub
cli
es
ret
loop
push
fwait
push
leave
adc
xchg
arpl
daa
incb
mov
int3
dec
out
mov
scas
mov
iret
dec
mov
mov
or
cmp
push
cmp
enter
hlt
push
sar
test
add
mov
inc
pop
dec
mov
out
or
mov
ficompl
mov
fstp
sub
xor
out
mov
mov
stos
fdivp
xorl
cltd
push
cmp
xor
mov
notl
sbb
pop
insb
push
ss
pop
cmp
and
mov
divps
pop
sbb
lret
repnz
rcrb
adc
jl
enter
pop
ret
xor
outsl
inc
push
pop
stos
clc
xor
rolb
jg
sbb
or
or
nop
cmp
fiadds
add
inc
cmpsb
xor
sbb
xchg
push
xor
leave
inc
daa
aam
adc
stos
pop
popf
movsb
and
ret
clc
pop
fldenv
mov
adc
xchg
clc
out
inc
xchg
mov
xor
push
ret
nop
and
ficoms
sbb
xor
sbb
sub
pop
cltd
pop
sub
mov
outsl
imul
loopne
movsl
cmpsb
mov
pusha
push
mov
pop
jecxz
mov
mov
jle
jno
out
outsl
je
mov
rcl
insl
lds
xorb
jge
jnp
dec
lods
jb
rclb
sbb
les
inc
mov
shl
ljmp
mov
jb
mov
push
cmpsb
pop
ret
push
int
add
mov
jecxz
loope
in
data16
mov
push
mov
into
flds
lods
adc
inc
dec
inc
jecxz
aas
fsubp
mov
outsb
data16
clc
loopne
test
dec
inc
popf
mov
mov
jno
sub
mov
in
or
sbb
rcrl
insb
in
push
sub
fsubrl
movsb
ret
stos
outsb
cmp
icebp
lea
or
mov
ljmp
lea
jo
dec
and
aad
jo
jg
out
pushf
or
cmp
inc
cmp
insb
dec
and
insl
mov
mov
or
push
cmp
ljmp
in
and
or
in
pop
cmp
push
clc
or
rcr
xor
movsl
je
cmp
repz
cmp
xchg
in
loope
lea
mov
pop
mov
cmp
push
mov
imul
repz
movsl
push
mov
out
movsl
ss
and
fnstcw
pop
jmp
mov
popf
lret
rcl
fadd
push
mov
loopne
loope
push
mov
dec
and
push
jo
mulb
insb
sbb
loope
rorb
insb
outsb
sarl
sbb
xchg
mov
jnp
jmp
and
leave
ret
pop
fsub
cmp
les
jns
jg
or
stc
in
outsl
xor
sub
ja
insb
jecxz
inc
mov
scas
and
enter
mov
cld
scas
xchg
adc
cli
lcall
test
pusha
sbb
adc
in
mov
shll
adc
cmp
sbb
sahf
iret
movsl
inc
xor
test
mov
and
push
inc
stos
repz
out
pop
repz
psllw
scas
popa
sub
js
push
mov
mov
lods
adc
out
imul
loopne
outsb
lock
mov
in
jge
push
add
test
add
xor
mov
mov
dec
out
arpl
fdivrl
out
inc
mov
aaa
cmp
dec
jg
pop
mull
adc
jmp
and
rcll
push
cli
and
and
mov
gs
in
out
pop
hlt
lods
in
push
push
das
repnz
in
mov
mov
outsb
test
mov
fcoms
sub
sbb
loopne
cli
pop
imul
fwait
int
sub
pop
out
xorb
or
mov
push
lret
push
xchg
outsb
stos
inc
btc
inc
inc
mov
mov
mov
mov
cmpb
mov
stos
das
xlat
sbb
lods
or
cmp
inc
jo
lahf
shl
add
nop
std
pop
lods
mov
in
inc
inc
and
fstpl
popf
aam
inc
mov
add
icebp
jg
jnp
pop
xor
out
mov
sbb
pushf
push
sub
mov
shll
into
mov
cwtl
add
pop
fcoml
je
mov
add
and
cmp
emms
pushf
mov
mov
inc
xchg
pop
add
adcb
and
inc
mov
in
mov
notb
aam
xlat
sub
ds
push
cmp
inc
repnz
gs
pop
pop
mov
cli
adc
out
mov
hlt
pop
or
js
imul
pop
ds
inc
movsl
pop
insb
mov
mov
cmp
xor
out
xchg
and
push
add
xchg
or
test
and
popa
mov
mov
dec
jle
ret
push
dec
mov
pop
rcrl
mov
ljmp
mov
cmp
add
adc
cmp
adc
fsubrp
dec
and
xlat
xor
in
xchg
lret
in
or
in
xor
flds
push
scas
andb
push
stos
outsl
mov
mov
xchg
in
pushf
aaa
mov
adc
xlat
loopne
out
xchg
in
sahf
xchg
xchg
inc
cmpsl
pop
or
in
mulb
andb
addr16
pop
add
and
mov
or
jle
lock
mov
push
ja
or
ljmp
cmp
test
lahf
fcompl
lds
inc
inc
jecxz
or
addr16
xchg
mov
sarl
popa
shl
inc
dec
inc
call
jp
fwait
mov
cwtl
jb,pn
ss
xchg
popf
dec
js
cmp
leave
cmpsb
mov
dec
int3
ret
icebp
cwtl
hlt
xchg
cmp
pop
mov
ret
or
adc
mov
lcall
xor
pop
pushf
imul
pop
outsl
jecxz
jno
dec
pop
xor
xchg
inc
xchg
push
add
xchg
pop
in
jle
test
es
add
adc
sbb
push
or
sbb
icebp
push
out
cltd
sub
jb
fs
rep
fidivrl
inc
lods
cmp
popl
inc
pop
dec
pop
mov
icebp
cltd
add
lret
jns
and
jg
inc
mov
int3
cld
dec
imul
outsl
or
data16
rcrl
cmc
jecxz
int
inc
dec
xchg
fsts
fnstcw
inc
rorl
aaa
fs
in
jno
aad
push
data16
fnsave
mov
repnz
and
cltd
mov
pop
fst
aam
mov
test
in
cmp
flds
bound
xchg
testl
adc
movsb
repnz
ss
into
pop
ret
mov
gs
or
loop
stos
mov
sahf
pushf
popa
ds
ss
shlb
pop
popf
pop
in
adc
dec
add
icebp
jae
inc
dec
cmp
xlat
sbb
call
adc
mov
mov
cltd
push
sbbl
incl
hlt
sbb
jmp
cmp
adc
cltd
pop
pop
adc
pop
rol
jb
addr16
dec
loope
rorb
jl
movsl
bound
pushf
aas
lods
xchg
cmpsb
mov
arpl
lcall
cmp
sbb
scas
jp
dec
or
psraw
popa
scas
lcall
xor
sahf
jl
in
out
push
pushf
mov
test
enter
gs
pop
mov
cmp
ss
or
daa
pop
mov
punpcklwd
js
rcrl
push
ds
push
pop
xor
or
push
cwtl
fisttpll
rcl
outsl
test
xchg
mov
repz
xor
dec
fbstp
shl
dec
sub
mov
cmp
push
mull
sub
adc
sbb
repnz
inc
mov
jecxz
or
xorb
enter
inc
push
mov
idivb
rcll
es
pop
adc
mov
in
push
or
cli
test
xor
in
dec
cld
mov
mov
push
fiadds
mov
sub
add
pop
mov
sbb
loop
dec
and
or
mov
out
popa
mov
je
sarb
fdivrp
icebp
mov
mov
inc
or
xor
enter
fisubl
push
sub
mov
cmpsb
sbb
enter
stos
lret
test
loopne
sti
add
inc
das
lds
xor
add
xchg
popf
fcoms
xor
add
push
pop
mov
ret
lret
cmp
and
sbb
or
aas
movsb
and
repnz
xor
insb
loope
ret
jbe
popa
mov
add
sahf
sub
jb
loopne
sbb
into
and
out
mov
add
adc
pop
sub
cmp
sub
jl
ja
sub
inc
cmp
clc
out
hlt
mov
cmp
negl
loope
push
out
cld
mov
pop
cmp
dec
sub
pop
cltd
xlat
inc
jno
sub
movb
aam
jg
aaa
push
inc
push
cmpsb
mov
ss
jae
lock
sub
jno
xor
jne
ss
mov
fdivl
cwtl
push
ds
rorb
mov
push
pop
and
icebp
xlat
and
push
je
ficoml
dec
jno
adc
lret
push
push
mov
aad
int
in
es
pop
jbe
arpl
rcll
pusha
lcall
and
adc
stos
xlat
lods
test
mov
or
fs
adc
jmp
scas
mov
mov
movsb
fdivrs
xor
call
sbb
in
popa
inc
outsb
xchg
inc
insl
fmull
sbb
lds
mov
push
inc
mov
scas
dec
lret
ficomps
outsb
lret
jmp
andb
les
cld
and
dec
jge
rorl
fistps
dec
das
lcall
je
cwtl
stc
jg
cs
sub
add
cmp
mov
fwait
cmp
mov
dec
test
jbe
aas
xchg
jg
mov
lods
sbb
xchg
dec
in
in
pop
ret
dec
lods
jp
fwait
pop
loop
sbb
lahf
add
add
pusha
xor
adc
push
or
cs
jb
daa
sbb
pop
pop
add
fwait
push
mov
icebp
icebp
enter
push
aam
cmp
hlt
adc
pop
dec
inc
push
iret
in
add
cmp
or
test
imull
ja
jne
jae
xor
pop
dec
push
pop
xor
jl
adc
push
mov
popa
sbb
cmp
sbb
jnp
jge
stc
imul
test
cmp
das
cld
pushf
pop
mov
daa
leave
stos
call
fs
mov
jmp
jae
xchg
jmp
dec
jb
mov
rcrb
pop
imul
rorl
xor
sarl
cmp
inc
cltd
dec
xchg
or
shrb
sub
into
call
cld
sbb
mov
popf
pop
inc
pushf
repz
push
xchg
pushf
hlt
xor
jno
rol
xorb
fidivs
shll
push
loope
frstpm(287
mov
cmp
sub
iret
loopne
push
in
imul
push
movsb
fsubs
fs
inc
hlt
mov
adc
out
arpl
cs
xor
scas
adc
addr16
xlat
xchg
add
pop
sbb
add
js
xor
sbb
or
mov
sbb
push
ret
lock
pusha
jg
repnz
adc
inc
repnz
xchg
ret
mov
mov
cs
push
cmp
stos
lods
sahf
stos
int
mov
mov
adc
cmp
fadd
nop
test
rolb
sub
push
hlt
in
jnp
jne
andl
out
int3
sbb
add
fsts
cltd
jmp
push
mov
or
jmp
test
lds
insl
popf
jae
lds
fisubs
ret
pop
push
scas
dec
out
jns
stos
lret
insl
sub
xlat
xchg
sahf
int
mov
cmp
jnp
push
jbe
mov
or
xchg
mov
mov
pop
push
cmp
mov
and
addl
imulb
fidivrs
and
pop
inc
das
push
aas
pusha
pshufw
out
nop
jmp
scas
sarb
add
jg
dec
xor
das
push
aas
pusha
pshufw
out
nop
jmp
scas
sarb
add
aaa
and
xor
das
push
xchg
pusha
pshufw
aaa
nop
jmp
scas
sarb
add
jg
dec
xor
das
push
aas
loopne
lock
jg
outsl
push
or
mov
mov
pop
inc
sbb
pusha
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
lds
cmc
xchg
xor
cli
xchg
xlat
loop
testb
xor
add
inc
xor
mov
xor
test
xchg
repnz
ret
push
and
or
add
inc
xor
je
sbb
in
rorb
loopne
and
cmp
pusha
add
xor
lods
out
repz
xor
in
xchg
or
adc
test
sub
jle
mov
sub
testb
notl
sub
cltd
std
mov
ja
sub
cmp
sub
push
or
xor
adc
stos
and
clc
in
add
xchg
xor
mov
xchg
xchg
jp
xchg
ret
mov
into
cmpsl
push
rclb
mov
cli
ja
ljmp
je
dec
push
rorl
cs
add
loop
or
fildll
testl
add
mov
bound
aam
js
or
and
cs
xchg
in
cmc
xchg
xchg
loop
repnz
ret
pop
and
jge
insb
cs
pop
xor
fldl
inc
repz
call
popa
cmp
cmpsl
adc
and
pop
cmp
icebp
test
jmp
stos
out
push
inc
xor
push
xor
add
daa
push
and
out
popf
dec
scas
xchg
repnz
ret
inc
and
add
add
inc
xor
mov
xor
test
xchg
repnz
ret
inc
and
add
add
inc
xor
in
incl
jno
mov
jno
das
inc
vpaddb
outsl
adc
push
mov
jmp
test
or
ds
xlat
pusha
fsubr
orl
push
lea
repz
cs
out
ret
push
mov
xor
push
mov
xchg
mov
dec
mov
insb
mov
jns
and
out
xchg
cwtl
push
mov
and
cmp
popf
test
cmp
int3
cld
inc
adcb
insl
mov
dec
sub
push
inc
mov
jae
mov
in
test
mov
add
out
fsubp
dec
aas
punpckhdq
push
pop
jl
push
jns
or
sub
mov
pop
pusha
lock
addr16
cmp
cli
rcrl
popf
push
lods
out
mov
xchg
cwtl
and
mov
cmpsl
sbb
xor
cmpsl
xchg
add
add
jl
iret
xchg
sbb
js
sbb
jo
push
sbb
shlb
sub
sahf
push
add
push
lret
ljmp
test
adc
jo
hlt
jb
clc
jne
mov
jae
je
pop
add
shlb
jmp
mov
lds
dec
or
jns
and
repz
repnz
es
lahf
adc
inc
push
stc
bound
sti
pop
mov
dec
out
or
jno
xchg
out
sub
lods
cltd
rcr
ror
aas
pop
sub
mov
xchg
js
in
xchg
sbb
fdivl
adc
push
sbb
out
in
outsb
xor
repz
or
imul
adc
leave
jbe
out
push
out
inc
jl
and
cwtl
xor
adc
repz
iret
test
shrb
xor
pop
jg
test
outsl
lea
pop
or
lock
adc
xchg
inc
push
popa
ret
popf
sub
mov
mov
outsb
imul
outsb
jbe
in
and
rclb
rcll
cmc
js
cld
scas
std
ret
jmp
andl
out
arpl
cmp
hlt
dec
or
loopne
jle
insb
mov
mov
jmp
xchg
cmc
aad
pop
aaa
sbb
jae
xor
or
icebp
data16
pop
xlat
or
adcl
lea
stc
insb
sti
loopne
xchg
jg
test
mov
adc
xchg
mov
gs
mov
out
mov
sub
adc
mov
mov
inc
push
cltd
imul
cli
xor
iret
popf
iret
xor
pop
sahf
xor
jl
in
loopne
fstp
or
into
out
push
add
ja
ffreep
pop
scas
aad
movsl
call
daa
dec
inc
push
cltd
mov
mov
jb
mov
inc
loop
xor
or
mov
pop
jb
leave
jp
adc
add
data16
fidivrl
loope
in
fsub
outsl
lahf
xor
cmc
ljmp
movsb
mov
aaa
and
inc
stos
fs
cmp
movups
sub
or
push
in
jbe
repnz
sub
mov
push
mov
rolb
enter
mov
inc
mov
add
add
icebp
mov
ljmp
loop
push
sbbb
ss
add
aam
sbb
mov
mov
pop
popf
mov
jp
mov
cmp
inc
and
insl
inc
ret
cmp
cmp
lds
subl
ds
js
mov
mov
nop
cmp
loopne
xchg
repz
jns
ljmp
retw
or
sub
sbb
jne
mov
repz
push
inc
xor
adc
arpl
dec
cmpsl
xor
test
fs
in
jecxz
sub
pop
push
lret
push
jle
pop
push
jbe
movsl
adc
push
notl
push
xchg
dec
subl
mov
insb
cltd
int
les
cmp
xchg
mov
lret
scas
fcomps
lcall
movsb
fs
stos
add
mov
cmp
fs
paddw
mov
mov
adc
int
notb
push
outsb
jecxz
push
sbbl
jnp
outsb
fwait
inc
mov
ret
lcall
push
je
orb
pushf
sahf
and
pop
xchg
aaa
pop
jp
inc
push
shrb
mov
insb
ret
test
arpl
or
adc
pop
insl
adc
mov
mov
pop
pop
stc
scas
push
aad
sbb
aaa
callw
js
jne
xchg
mov
pop
lods
fs
inc
add
push
sbb
int
mov
mov
in
mov
add
sub
xchg
mov
shrb
icebp
jno
mov
mov
out
push
mov
stos
sbb
outsb
mov
clc
fcomi
shr
jmp
jecxz
push
xchg
in
insl
cmp
testb
mov
lcall
pop
xchg
mov
arpl
sbb
sub
das
idivl
adc
rcl
test
icebp
pushf
sub
add
mov
test
xor
jb
sub
in
xchg
outsb
sbb
and
push
jns
les
insb
pop
loop
orl
xchg
jae
jnp
sbb
push
lea
dec
out
shlw
imul
or
test
push
push
test
out
mov
enter
lods
and
out
addl
push
inc
leave
mov
inc
or
lcall
decl
jns
aaa
pushf
icebp
pop
clc
out
subl
adc
les
mov
or
das
push
mov
fstps
jo
sub
pop
aaa
jl
sub
sub
mov
ret
fldcw
xor
pop
ret
scas
mov
adc
inc
sbb
cmc
inc
mov
je
jp
inc
sti
sbb
icebp
and
lea
out
ficoms
xor
mov
ljmp
movl
fimull
insl
cmpsl
test
xchg
test
mov
mov
mov
inc
pop
pop
add
or
test
inc
mov
push
push
dec
mov
and
lock
xor
pop
je
pop
aas
or
mov
dec
push
and
mov
divb
jge
inc
adc
cli
js
pusha
jmp
mov
aas
insl
test
sbb
das
fwait
nop
mov
iret
das
pusha
mov
pop
cltd
icebp
or
mov
ljmp
adcl
mov
mov
fildll
das
and
sbb
or
pop
xchg
iret
mov
daa
scas
js
pop
mov
mov
test
pop
mov
test
inc
xlat
mov
push
xchg
mov
or
pop
ficoms
pop
xchg
jb
das
and
add
sub
inc
pop
call
jecxz
aam
hlt
mov
cmp
sub
mov
dec
or
call
mov
mov
or
in
inc
cld
aas
shl
xor
test
orb
movsb
ds
jmp
out
cs
mov
mov
xor
insb
hlt
popa
pushf
hlt
inc
xchg
scas
or
pusha
cmp
lret
inc
jp
mov
sub
aam
sub
fldcw
dec
inc
mov
jmp
sub
xlat
mov
sbb
pop
mov
xchg
cmp
into
daa
imul
fistpll
aad
adc
cs
es
mov
shlb
adcb
and
sub
out
ficompl
pop
out
inc
test
xchg
ret
xor
inc
insl
xlat
sub
stos
xchg
fcmovbe
xchg
adc
popf
sarl
jnp
movsb
mov
lods
popa
idivl
pop
imul
jb
lahf
fsubp
mov
add
fucompp
pop
int3
inc
mov
sbb
cmpsb
mov
push
push
sbb
imul
add
sub
clc
dec
xchg
dec
lcall
ds
mov
iret
mov
les
push
mov
fidivl
cli
push
clc
loope
mov
xchg
ds
ficomps
mov
dec
aaa
mov
dec
pop
inc
mov
ret
sbb
inc
addr16
in
add
ret
loop
or
mov
xchg
int3
mov
ja
fdivs
jae
sahf
int3
jmp
jge
xor
jle
jle
xlat
mov
jmp
fstps
and
add
mov
mov
add
lahf
mov
icebp
and
mov
into
xchg
push
mov
or
fnstcw
jg
int
test
inc
cmpsb
or
xor
inc
sbbb
pop
mov
inc
mov
mov
push
push
cmp
xchg
cmp
mov
ljmp
mov
jg
ss
aaa
test
xor
jecxz
fwait
les
test
add
jns
cmp
jbe
addr16
or
in
bound
lock
xor
pop
mov
mov
lahf
inc
stc
les
popf
sahf
in
shlb
fdivrs
cwtl
pop
rorl
xchg
mov
xchg
pop
xor
pop
fwait
or
and
push
jno
inc
cmp
and
in
ret
cmp
addb
push
pop
lahf
and
leave
dec
in
and
push
mov
sub
es
push
dec
pusha
rol
sbb
inc
mov
sub
add
popa
hlt
int3
xchg
lock
jo
dec
fimull
aam
clc
adc
pop
leave
pop
icebp
sti
mov
jmp
in
mov
dec
imul
loopne
jp
imul
lods
sahf
aam
sbb
sbb
add
cmp
mov
dec
inc
push
repnz
xor
jnp
and
out
sub
aas
jl
loope
push
push
fnstenv
xchg
test
add
les
xlat
cwtl
add
push
mov
jbe
add
lea
and
or
aad
pushf
daa
stos
jmp
adc
xor
cmc
fwait
jns
subl
cmp
pop
or
push
and
dec
xlat
out
fcomp
push
xchg
gs
pop
dec
iret
push
cs
les
cmc
ja
in
out
pminsw
popa
adc
pop
xchg
jge
or
fwait
mov
xchg
inc
push
fsubrs
cli
add
lahf
insl
push
lcall
push
stc
mov
jmp
subl
test
movsb
pop
fmuls
psubb
negb
add
mov
mov
push
xor
stos
iret
out
test
mov
mov
sbb
mov
test
sub
scas
cmp
ljmp
clc
cmpsb
or
mov
or
test
daa
jg
out
cmpsb
pop
test
xor
pop
fsubrs
push
sbb
xor
cltd
imul
shr
push
cmp
aam
jnp
mov
sbb
mov
mov
jbe
and
loop
pop
sbb
pop
cs
mov
popf
inc
sahf
outsb
fdivrp
js
adc
mov
lcall
cmp
inc
test
fcos
cmpl
inc
pop
jmp
lds
pusha
adc
lea
out
or
rep
xor
lahf
js
rorb
scas
ljmp
push
aam
sti
pushf
xlat
xor
xor
imul
sbb
sarl
push
or
test
add
xchg
sbb
popa
out
stc
push
inc
ljmp
outsl
and
ljmp
sti
in
or
or
ret
or
daa
or
add
mov
fidivl
out
test
out
mov
push
adc
mov
fldcw
adc
outsl
jg
mov
fs
add
sbb
jl
movsb
jg
aas
imul
jle
arpl
sub
push
aad
push
sbb
ret
mov
out
iret
jle
push
lahf
pushf
aaa
xor
jae
movsb
pop
imul
pop
pop
test
ret
cwtl
ss
ljmp
or
rcr
enter
xor
mov
out
int3
shlb
jle
jmp
ret
gs
xchg
lock
mov
jg
in
push
or
and
pop
idivl
and
and
adcb
aas
leave
add
cld
ss
sbb
int3
push
sti
add
jne
or
mov
lds
xchg
jp
dec
imul
dec
ljmp
add
das
pop
xor
ds
arpl
cmp
cmc
push
fcomi
jmp
sti
in
je
je
mov
xchg
and
lret
xor
repnz
out
or
cmp
add
out
fidivs
arpl
inc
dec
and
fwait
lcall
xor
lods
or
mov
cwtl
outsl
xlat
jp
inc
out
xor
inc
push
cwtl
cmp
aaa
push
pop
sub
out
in
add
cltd
xchg
inc
stc
push
pop
xchg
and
mov
dec
daa
adc
jp
stc
shlb
iret
pop
pushf
xor
andb
and
jmp
jb
test
jmp
push
add
xchg
imul
jle
mov
gs
jb
sarb
xchg
or
inc
rorb
int3
jo
idivb
xchg
repz
lock
push
sbb
or
jo
fmull
inc
mov
mov
cmp
inc
xchg
dec
mov
sahf
cwtl
adc
mov
jmp
cmp
xor
jno
pop
cmp
push
jmp
int
sbb
push
jb
imul
dec
push
stos
cmpsl
inc
push
jl
xchg
lock
add
aad
xor
cmp
and
repz
push
je
mov
jae
insl
fistps
repnz
add
inc
mov
or
aaa
push
and
lahf
lea
mov
xor
movsl
sub
in
ret
cmp
jge
cltd
inc
inc
sbb
cmp
push
mov
cs
cmpsl
mov
mov
mov
adc
cli
addr16
inc
ret
std
mov
fstpt
push
mov
test
stos
aas
lods
das
cmp
sarl
jg
insb
clc
cmp
push
jecxz
sub
mov
shll
bound
or
add
test
push
xor
adc
fldt
leave
dec
sbb
movsl
mov
cmp
mov
xchg
fwait
cltd
pop
test
rolb
jb
push
jge
negb
arpl
fnstsw
ss
push
lea
mov
and
lock
aaa
cmpb
jmp
outsb
mov
hlt
xchg
lea
fstps
and
mov
fstpt
adc
xchg
push
stc
dec
icebp
mov
test
push
pop
je
jle
pop
or
bound
rcll
cmp
dec
xchg
add
pop
shlb
int
pop
loope
pop
push
sbb
cmp
icebp
jecxz
pop
mov
orl
pusha
adc
or
push
mov
sahf
adc
mov
jns
cld
xor
xchg
pop
stc
add
mov
add
lock
fsubrl
insb
sbb
js
push
mov
pop
pop
imul
cs
sub
xchg
or
adc
out
fdivs
adc
push
inc
push
jo
mov
enter
imulb
outsb
ret
mov
lcall
js
adc
mov
push
fdivs
fcom
iret
xchg
jl
sbb
aaa
hlt
pop
dec
mov
fs
and
and
inc
and
pop
add
sub
insl
stos
int
mov
or
mov
inc
out
sub
cmp
in
pop
in
pop
iret
ror
in
fldt
lds
and
es
cld
xchg
mov
gs
movsl
sub
mov
or
cmp
iret
jbe
adc
daa
imul
lock
call
jp
adc
pop
lea
aad
imul
lcall
jbe
out
jo
dec
mov
cltd
sti
movl
ss
test
xchg
lea
sub
call
jns
mov
sub
sahf
sub
icebp
add
pop
lret
jo
inc
dec
loop
adc
xor
aam
dec
rorb
pop
cli
js
flds
cwtl
xchg
clc
shrl
or
jmp
sahf
cmp
popa
in
push
adc
push
hlt
daa
pop
and
stos
pop
add
mov
mov
mov
sub
inc
arpl
test
stc
movsb
cmc
add
sub
jg
insb
adc
inc
cmp
or
add
out
cmp
and
jle
rorl
mov
push
dec
cmp
and
or
sub
xchg
jle
pop
stos
or
push
movsb
aaa
js
push
cld
push
dec
cmp
inc
cli
dec
fwait
arpl
pop
sub
mov
cmp
sub
inc
cmpsb
addr16
jno
dec
lcall
clc
jge
push
inc
mov
jle
inc
or
lods
adc
imul
xor
shll
xchg
push
sub
dec
sub
adc
mov
imul
or
icebp
fimuls
cmp
and
jmp
cli
sbb
loope
mov
ja
xchg
jmp
fdivrs
repnz
mov
mov
mov
adc
sub
xchg
push
fldt
les
stos
das
sbb
xor
pusha
mov
jl
incb
inc
jl
dec
outsb
dec
or
and
pop
xchg
mov
aam
aam
mov
scas
push
mov
mov
mov
jle
aam
ss
int
push
rorb
jle
lods
mov
cltd
icebp
inc
add
mov
adc
imul
sub
adc
rcrb
xor
lods
xchg
sbb
inc
adc
pop
imull
lods
adc
mov
jge
jp
xchg
mov
mov
hlt
jmp
shr
xor
sarb
lock
xor
xchg
inc
dec
dec
fsubs
cltd
xchg
xchg
pushf
iret
les
mov
fs
rol
and
sbb
inc
lods
mov
and
ret
jnp
out
mov
hlt
xchg
push
in
and
mov
pusha
or
lret
call
or
or
mov
data16
int
inc
add
cmp
mull
cmp
sbb
rorl
in
out
dec
imul
mov
mov
lods
mov
out
mov
das
in
lret
pop
or
sahf
divb
ljmp
xor
clc
enter
adc
cmp
pop
outsl
push
nop
enter
lock
inc
icebp
imul
es
jns
stos
xchg
pop
xchg
jns
cltd
ljmp
scas
aaa
jge
adc
dec
jl
aad
mov
push
or
sbb
cli
in
add
pop
xadd
or
mov
adc
imul
xlat
cmp
pop
test
jae
in
lds
xor
lret
mov
fdivs
je
cmp
jno
xor
push
xlat
adc
test
xor
in
aaa
mov
pop
inc
jne
adc
push
pusha
sub
movsl
pop
jne
inc
addb
push
test
fsubrp
dec
lahf
sub
lret
repz
xchg
sub
push
call
inc
lret
mov
pop
cmp
mov
lock
lock
loopne
movsb
adc
test
inc
mov
stos
dec
xlat
push
push
icebp
push
jnp
jo
out
mov
add
sub
mov
outsl
jae
mov
shll
pushf
lods
enter
xchg
ret
loop
sub
fisttpll
and
pop
adc
jmp
mov
addr16
inc
fildll
aaa
imul
inc
test
add
leave
fwait
lock
cltd
jb
mov
lret
push
adc
jl
aam
inc
fdivl
sarb
lock
mov
and
test
xchg
fwait
cltd
push
and
out
xchg
jns
pop
sti
push
or
stc
sub
and
and
mov
movsl
vpsrad
aam
mov
xchg
sub
dec
cltd
daa
push
dec
jne
adc
mov
outsl
pop
dec
xor
inc
outsb
push
pop
add
cmc
cmp
xchg
pop
test
push
hlt
mov
add
in
fstpt
and
cmp
jno
mov
frstor
ret
push
sbb
inc
mov
jg
sub
inc
or
sbb
push
mov
xchg
shl
imul
cmp
hlt
shl
mov
add
add
add
notl
imul
fisubl
inc
call
push
hlt
add
xor
aaa
arpl
mov
mov
or
fs
sbb
dec
jb
push
xchg
mov
add
mov
pop
and
lret
cmp
xlat
add
mov
repz
cli
cmp
call
cmp
push
jo
insb
ja
xchg
sbb
insb
or
ja
push
jg
sahf
jge
jg
jno
xor
mov
xchg
std
scas
jl
sbb
bnd
js
sub
inc
ds
jnp
inc
sbb
and
pop
mov
mov
imulb
in
je
adc
stos
push
sarl
ret
adc
clc
push
xorl
pop
clc
sub
dec
out
data16
mov
add
mov
sub
jo
je
orl
pop
xchg
xor
adc
mov
out
arpl
dec
xor
xor
pusha
jl
jo
inc
mov
xchg
xchg
test
xchg
repnz
ret
inc
and
add
add
inc
xor
mov
xor
test
xchg
repnz
ret
inc
and
add
add
inc
xor
mov
test
xchg
cltd
movsl
mov
inc
and
add
add
dec
aaa
mov
inc
xlat
push
in
cmc
rolb
inc
xor
cwtl
iret
add
jb
popf
or
cmp
sub
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
jle
xor
add
adc
jnp
pop
test
loope
mov
xchg
mov
in
mov
les
push
lcall
fidivl
cli
push
xchg
scas
sbb
in
cmc
dec
les
push
lcall
jge
insl
lret
inc
ljmp
loopne
lret
push
mov
sbb
ret
dec
sarb
insb
cli
mov
ja
lods
popa
pop
stc
dec
jg
repz
nop
pop
or
icebp
add
add
mov
repnz
loopne
outsb
dec
cmc
jnp
cltd
dec
pop
pop
mov
cmp
rcl
lods
sub
jne
push
or
dec
dec
xchg
arpl
sbb
dec
outsb
call
shl
fbld
in
lahf
std
inc
jns
lret
lods
nop
push
adc
in
cmc
test
cmpsl
mov
jo
imul
lret
ficompl
pusha
daa
xor
mov
push
nop
inc
lret
dec
inc
xchg
lds
dec
jp
xchg
les
xor
dec
stos
cltd
ljmp
jg
pop
or
jnp
xchg
aas
and
in
and
aam
in
xor
add
add
inc
cli
dec
ljmp
lea
cld
pop
in
dec
les
add
push
lret
popa
mov
sbb
shlb
or
pop
cli
pop
mov
nop
das
mov
pushl
popa
fists
stos
adc
adc
shrl
xorl
add
popa
enter
hlt
je
inc
cli
push
ljmp
xchg
sub
pop
hlt
dec
les
push
lcall
fidivl
cli
push
ljmp
xchg
sub
pop
hlt
dec
les
push
lcall
dec
scas
jecxz
add
dec
jl
into
fildl
lock
fsubs
insb
leave
aaa
imul
lods
addr16
xchg
addr16
das
and
xchg
mov
fisubl
lock
jne
fcmovnbe
xor
push
ss
gs
and
adc
insl
and
xchg
xchg
add
bndstx
sub
sbb
std
cld
add
xchg
stos
pop
mov
dec
test
adc
movswl
daa
add
and
in
or
or
xchg
xor
aaa
je
jnp
divb
das
pop
mov
mov
jo
das
mov
fidivrs
test
int3
mov
mov
or
mov
leave
iret
addr16
mov
sbb
and
jae
ljmp
cmp
sbb
adc
cmp
pop
and
jbe
push
hlt
sbb
xor
jge
pop
jo
hlt
sti
outsl
lcall
xor
mov
or
lea
pop
mov
pop
rclb
nop
push
cli
xor
mov
mov
inc
mov
cmp
bswap
xor
mov
mov
push
add
add
pop
dec
cmpsb
xlat
push
popa
mov
enter
mov
mov
into
lahf
jb
jo
add
sbb
or
fst
dec
cmpsl
fldenv
inc
ja
sub
les
jg
mov
out
xlat
cmpsb
sahf
ret
les
out
je
push
stc
mov
fnsave
pop
fcompl
or
mov
add
adc
neg
mov
pop
sub
ret
mov
orb
sbb
popf
ljmp
aas
test
rclb
or
out
mov
pushf
in
mov
jmp
push
mov
push
stc
add
scas
outsb
jns
nop
inc
pop
ret
lock
pop
movsl
int3
push
cwtl
lods
adc
adcb
xchg
add
sub
hlt
dec
push
pop
jp
fwait
inc
cmp
dec
mov
push
repz
xchg
scas
or
adc
jne
icebp
insl
addb
cmp
fimull
sub
test
loope
iret
fs
xchg
add
fistpl
test
jle
out
fldl
insl
loopne
pop
adc
pop
sarl
out
stc
jb
movsl
insl
or
data16
push
idivl
jo
add
mov
gs
jae
mov
xor
mov
mov
lock
dec
mov
add
shr
xchg
rorb
xchg
inc
add
es
fcmovnbe
sub
jns
or
lret
lahf
jl
inc
sahf
cltd
mov
sti
sub
loope
stos
aad
shl
push
pushf
in
js
out
in
idivb
adcl
mov
jecxz
xchg
sbb
push
jne
sbb
xchg
lds
js,pn
pop
fxch
jno
mov
push
pop
lret
popf
pusha
cltd
mov
cmp
or
mov
inc
push
mov
xor
mov
mov
jg
cmp
divb
xor
bnd
stos
cltd
mov
js
sahf
mov
movsl
es
sub
ret
jl
inc
std
mov
push
outsb
inc
inc
inc
sbb
cmp
test
idivb
dec
lods
fs
and
int
fsubrl
lock
pop
pop
cld
and
out
mov
mov
push
jae
sbb
dec
and
xlat
inc
sub
add
pop
imul
jnp
adc
inc
subb
std
imul
jno
jle
xchg
mov
loopne
cli
push
ljmp
jge
lahf
imul
stos
and
mov
mov
jne
icebp
loop
dec
aaa
es
dec
jbe
leave
imul
jb
cltd
push
pop
sbb
loop
jo
mov
push
xor
adc
pop
xchg
pop
scas
jl
repnz
xorb
stos
adc
and
and
iret
sub
jb
addb
sub
cmp
add
add
sbb
sbb
push
sbb
and
js
in
out
in
inc
andb
adc
addr16
adc
pop
pop
xchg
cmp
or
lret
inc
mov
mov
addr16
mov
es
lret
js
push
lret
mov
icebp
inc
loope
jnp
popa
jbe
dec
adc
ds
pop
stos
xchg
or
adc
cmp
shll
dec
mov
jne
into
fsts
outsl
pop
or
insb
enter
pop
sbb
mov
sub
call
dec
sub
inc
jp
xchg
mov
mov
add
xor
enter
jns
pop
bnd
mov
adc
push
fildl
int3
scas
test
jnp
adc
push
mov
lock
test
lock
xor
sub
in
pop
mov
aad
push
and
fwait
lock
je
inc
arpl
fidivrl
cmp
cmp
imul
pusha
jb
repz
xor
mov
pushf
je
cmp
lock
mov
adc
xor
sahf
adc
mov
test
jo
xor
push
cld
dec
and
mov
push
jle
lahf
mov
mov
adc
je
scas
sub
mov
pop
adc
xchg
in
xchg
scas
or
cmpsb
or
or
arpl
inc
sbbl
dec
mov
test
and
pop
cltd
jle
loopne
lcall
push
sub
js
adc
ret
push
vaddsubps
jle
aas
adc
in
mov
bound
lret
pop
jae
inc
xchg
mov
bound
lods
adc
or
js
outsl
repnz
lock
lds
cmpl
movnti
std
mov
adc
mov
and
jg
movl
aaa
add
push
mov
push
aaa
stos
stos
pop
dec
xchg
xchg
enter
adc
lcall
lahf
mov
pop
je
push
sti
pop
cmpsb
pop
loopne
push
sbb
test
lret
sbb
dec
mov
mov
ds
xchg
scas
setge
popl
repz
ficomps
jl
notb
std
pop
out
lahf
xor
push
add
aam
dec
adc
mov
xchg
shrb
dec
mov
and
out
out
outsb
sbb
mov
inc
lea
cmpl
ljmp
pop
aas
mov
pop
ljmp
clc
test
cmp
pop
mov
loope
add
dec
xchg
pop
cli
cs
cmp
sbb
add
mov
push
imul
stc
lret
mov
out
das
loopne
mul
stc
jge
int
cmp
insl
xor
sbb
pop
pop
repz
push
mov
mov
pop
mov
das
cmp
pop
adc
sub
jb
xor
adc
sbb
js
stc
sub
push
fistl
push
arpl
imul
inc
mov
xchg
jmp
out
inc
jl
adc
xor
adc
test
dec
xlat
movsl
adcl
inc
or
pop
stc
add
xor
imul
loopne
sbb
scas
pushf
push
aam
ja
push
shl
mov
jae
sbb
mov
rolb
dec
pop
sbb
inc
lods
loope
sub
push
xor
into
sbb
fst
jp
je
pop
les
mov
jecxz
clc
movsb
out
loope
mov
icebp
cld
pop
adc
adc
in
hlt
call
fisubrs
lock
iret
test
inc
dec
sahf
lret
ret
mov
inc
imul
inc
cmp
adc
lcall
jge
fcoml
inc
lret
addr16
mov
cmpl
cld
mov
sti
dec
sbb
je
bound
in
xor
in
in
mov
pop
ror
mov
push
out
sub
ficoml
ja
pop
mov
mov
ficoml
dec
lock
inc
cmp
mov
std
out
pop
into
lea
dec
sahf
outsb
mov
push
add
dec
arpl
mov
push
xchg
andl
fistps
ds
sbbl
cltd
imul
and
subb
add
in
loop
mov
push
fnstcw
scas
cmp
xchg
pushf
dec
mov
dec
lcall
pushl
mov
add
lods
mov
pop
enter
lods
add
out
mov
mov
xchg
std
fildl
cmpsl
mov
mull
mov
pop
xchg
aaa
fildll
push
test
mov
in
scas
adc
das
jle
cld
pop
pop
dec
adc
inc
sbb
jno
xor
mov
push
inc
mov
stos
push
sub
adc
icebp
scas
mov
mov
imull
sahf
std
sbb
negb
notb
popa
jae
setbe
jmp
adc
adc
scas
movsb
jb
movsb
add
xchg
jecxz
cmp
pop
out
fistps
das
push
test
jns
mov
sahf
je
jns
sub
es
jb
shlb
push
push
js
mov
pushf
inc
test
mov
add
jns
in
jle
or
ffreep
fs
fwait
jae
rorl
adc
imul
mov
jge
lock
pop
popa
mov
int3
aaa
cltd
pop
cmpsb
aam
cld
aad
pop
add
cmpsb
adc
mov
subb
movsl
dec
pop
mov
lret
bound
out
sub
pop
adcl
cltd
idivb
pop
mov
and
jg
sub
mov
testl
cld
sbb
addr16
push
test
nop
push
fwait
dec
rorb
sti
shl
pop
inc
xchg
ffree
scas
add
decb
add
dec
sub
dec
push
aad
and
pop
aaa
mov
xor
inc
adc
lret
xor
mov
in
jp
sbb
sbb
jae
mov
cmpl
movsb
lods
dec
sbb
fidivrs
cltd
add
sahf
fisttps
sub
add
adc
xchg
jns
adc
rcrl
cmpsl
jo
xorb
mov
mov
sub
sbb
movsb
xchg
les
shlb
add
inc
out
inc
cmp
sbbl
push
aam
inc
mov
int
push
push
test
out
cmp
jo
testl
mov
mov
ret
xor
out
loopne
loop
leave
inc
fcompl
sbb
jp
xlat
mov
mov
and
sub
mov
aam
in
aam
cmpsl
push
je
lahf
xchg
mov
push
lods
nop
rcll
and
jne
and
in
fdivrl
pop
fcomp
inc
mov
or
mov
mov
aaa
out
in
mov
push
rclb
sbb
mov
ja
push
dec
mov
jmp
xchg
repz
jbe
and
ja
add
repnz
push
mov
dec
jecxz
cmpsl
push
jg
push
les
mov
or
lahf
ret
out
add
lea
add
mov
jb
lcall
inc
shrb
sbb
cltd
jnp
fldl
int3
pushf
cmp
iret
fisubs
jp
xor
inc
in
test
add
test
or
cs
sub
popa
ret
insb
inc
jmp
fwait
sbb
cli
jle
and
and
inc
jne
push
sbb
pop
mov
fmul
mov
cltd
inc
or
inc
out
jno
mov
dec
rolb
sub
mov
or
xchg
int
or
or
movsl
pushf
mov
xlat
test
cmp
add
fcomi
push
movsb
mov
and
gs
enter
jg
dec
lods
inc
xor
cmp
pop
jns
and
test
stos
cmpsb
outsb
xchg
or
addr16
jnp
mov
test
xchg
pop
in
nop
and
sub
imul
je
ror
ret
xor
cli
repz
cmpsb
pusha
sbb
sbb
mov
fldcw
stc
xchg
cmpsb
mov
ljmp
jns
popa
ret
mov
jne
add
arpl
dec
addl
lret
insb
dec
and
fwait
insl
and
push
mov
inc
adc
pop
fstp
fsubs
or
std
push
inc
inc
cld
xchg
mov
psrlq
or
stc
mov
in
outsl
mov
jae
nop
sub
xchg
push
and
lods
data16
scas
mov
rclb
jp
xchg
out
xor
inc
pushf
and
roll
and
outsb
jg
bound
mov
mov
adc
hlt
jo
fucomip
inc
xchg
push
cmp
mov
lahf
ret
scas
imul
sbb
mov
stc
gs
hlt
lods
imul
and
dec
int
sbbl
push
jne
add
lahf
rclb
clc
and
mov
push
jnp
xchg
push
adc
nop
lret
jns
mov
call
iret
test
inc
fistps
cwtl
and
cmpsl
cmp
xchg
mov
inc
fidivl
out
into
inc
popf
inc
aaa
call
cli
cmp
in
lods
outsb
jbe
jnp
jno
add
xlat
lcall
shrb
and
out
pop
ret
stc
xor
movsb
or
dec
inc
pusha
mov
lret
call
ds
cmp
lods
jb
pop
fwait
adc
and
xor
push
pop
sbb
lret
out
mov
pop
leave
pop
ret
and
jecxz
pop
xchg
addr16
push
es
mov
adc
xchg
int3
aas
out
in
mov
dec
call
xchg
adc
lret
ret
les
or
std
sti
insb
or
inc
adc
xor
adc
orb
push
inc
lods
fdivrp
push
loopne
add
xchg
movsl
in
stos
and
and
mov
stos
jae
push
in
sbb
xor
add
arpl
mov
add
stos
dec
stos
cs
ficompl
jbe
xchg
inc
mov
mov
fsts
sub
inc
lock
push
in
jbe
pop
add
mov
arpl
jo
push
sbb
ss
lods
push
roll
sbb
push
inc
push
jmp
in
pop
popa
loopne
jl
push
popa
sub
andl
gs
inc
inc
lods
jmp
pusha
push
popf
xchg
sbb
cltd
sahf
rclb
lods
inc
fnsave
pop
bound
cld
push
mov
hlt
js
aas
stos
sbb
xchg
aaa
cmp
mov
ljmp
pop
adc
xor
or
jle
movsl
and
scas
lret
pop
mov
cmpsl
daa
sbb
sub
jbe
jb
xchg
outsl
mov
xor
push
cli
or
push
dec
int
call
push
jge
outsl
add
rorb
gs
fimuls
cmp
scas
adc
movsl
add
insl
lods
adc
xor
arpl
repz
cmp
inc
out
and
decl
stos
lret
mov
ret
dec
jno
enter
test
jmp
push
in
cmp
imul
and
pop
mov
test
pusha
push
clc
push
jb
inc
inc
push
pop
insl
fcomps
push
inc
hlt
addr16
adc
cli
inc
xor
sbb
arpl
cmpsb
sti
stos
xchg
inc
xchg
sub
jnp
ljmp
ret
push
or
push
xchg
in
mov
inc
jae
or
mov
hlt
clc
add
dec
sbb
ss
sbb
inc
adc
cli
nop
push
movsb
jecxz
jle
jp
lret
in
xchg
fwait
sbb
add
shlb
inc
xchg
popf
cmpl
push
scas
pop
out
es
push
loopne
jg
sub
jne
neg
jbe
adc
xor
outsb
int
xlat
stc
fcoms
movsl
mov
stos
je
mov
enter
cwtl
xchg
movsb
pop
ljmp
outsl
ds
sbb
xchg
fldl
test
xchg
test
imul
in
jo
in
jb
jecxz
xor
mov
lock
cmp
xchg
je
rorb
adcb
xchg
stos
sbb
mov
and
cli
repz
add
jl
test
push
repnz
add
fdivr
mov
cmp
movsb
and
pop
out
mov
les
dec
pop
aas
outsb
scas
movsb
cmp
pushf
hlt
orl
in
lods
bound
add
xchg
mov
sbb
xor
loop
int
xor
cmp
js
pop
dec
dec
mov
sbb
and
mov
fscale
es
mov
dec
adc
sbb
mov
inc
or
sbb
mov
mov
jb
call
push
and
outsb
and
fisttps
dec
cmp
test
fistps
arpl
imul
sub
push
sub
mov
subl
mov
xchg
dec
cmp
push
dec
jle
xchg
aaa
lods
lods
or
add
outsb
cmc
sbb
int3
icebp
xor
jne
cmpsl
rcl
cmc
sub
mov
push
adc
jbe
xchg
mov
lods
rclb
leave
pop
xor
xchg
mov
lods
les
mov
xchg
or
add
xchg
ret
loope
addb
lea
lret
cmp
fadd
inc
rorb
cmpsb
or
xchg
push
jns
mov
and
ss
jmp
sbb
mov
mov
leave
pop
dec
sub
mov
dec
sarb
adc
adc
insb
in
pop
sub
sbb
mov
pop
sarb
mov
jp
pop
enter
push
sub
jnp
adc
push
cs
outsl
out
cmp
idivb
inc
push
xor
aaa
je
or
mov
shll
gs
xlat
mov
jo
add
mov
adc
pusha
dec
push
rcrb
add
and
insl
xor
cmpsb
js
rcl
inc
jns
scas
sub
ljmp
fstps
call
adcb
test
test
xchg
jbe
or
push
pop
dec
mov
lret
or
scas
out
add
dec
mov
cltd
int3
roll
addr16
pop
mov
mov
sbb
dec
decl
push
push
mov
sub
lods
bound
pop
scas
jnp
outsb
movb
mull
mov
adc
inc
and
ss
xor
ds
arpl
aam
inc
lods
sub
lcall
mov
test
in
sbb
sbb
dec
pop
rcr
pop
or
add
sti
into
movsl
mov
ja
rolb
lret
cmpsb
or
pop
dec
cwtl
xor
test
outsl
push
jl
fldt
scas
push
push
add
or
gs
push
mov
lret
bswap
push
lods
sbb
xorl
repz
push
dec
mov
lret
and
push
stc
ja
and
in
mov
fists
rcrl
outsb
stos
aam
mov
lahf
add
adc
jo
fcoml
js
cvtdq2ps
cmp
xchg
pop
push
push
xchg
lea
inc
inc
mov
into
xchg
mov
and
hlt
xchg
mov
popf
sbb
andb
push
test
lahf
repz
bswap
rorb
pop
cltd
clc
mov
ss
add
or
out
jge
data16
mov
mov
sti
mov
pop
popf
dec
mov
leave
testb
add
lea
roll
jmp
xchg
and
mov
or
and
dec
cmpsb
in
or
leave
arpl
ja
test
pushf
dec
stos
and
xlat
cli
xor
sbb
adc
sarl
push
jbe
xchg
xlat
decl
int
fs
test
jo
mov
or
ret
ja
dec
xchg
lods
mov
lret
mov
scas
scas
lahf
sub
rcl
hlt
or
dec
mov
inc
insb
push
jg
sub
test
cs
idiv
lret
mov
jne
dec
bswap
call
shr
mov
fisubrl
lods
ret
in
jns
mov
fbstp
fs
sub
or
pushf
fldl
dec
xchg
repz
cld
nop
mov
fisttpl
xchg
fwait
add
jl
add
nop
int
sub
mov
lock
movsl
push
aas
mov
repnz
or
cmpps
inc
sbb
cld
and
inc
jge
into
nop
lods
sub
shrl
cwtl
xchg
or
aas
lods
popa
sti
inc
push
stos
and
xor
cmp
dec
add
cmp
jae
rcrb
pop
cmp
and
pop
adc
insl
loop
out
adc
out
out
jno,pn
sub
daa
xor
xchg
lods
outsl
shll
cmpsl
andb
enter
aaa
rcr
movsl
loopne
pushf
ret
push
cwtl
fmulp
inc
test
and
test
and
into
xor
mov
jp
mov
sbb
js
jp
inc
lcall
into
mov
loope
add
inc
sbb
fcompl
into
mov
push
add
pushf
lds
or
cmp
sub
faddl
jl
and
or
or
cmp
clc
ret
xchg
jmp
mov
bswap
dec
je
mov
stos
fidivl
cli
push
ljmp
xchg
sub
pop
hlt
dec
les
push
lcall
fidivl
cli
push
ljmp
xchg
sub
pop
hlt
dec
les
push
lcall
fidivl
cli
push
ljmp
xchg
sub
pop
lock
les
push
lcall
fidivl
cli
aam
pop
sbb
cmp
cmp
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
nop
push
adcb
mov
cmp
xchg
xchg
xor
inc
push
jo
pusha
notb
mov
push
lock
adc
and
jo
pusha
notb
mov
push
lock
adc
and
push
subl
add
push
in
mov
int3
sbb
sti
mov
iret
sahf
mov
add
xor
push
or
das
push
pusha
sbb
imul
mov
cmp
mov
cmpsl
rcrb
mov
aad
pop
lret
mov
jnp
mov
imul
cmp
jg
adc
testl
mov
pop
dec
out
lods
add
repz
outsl
out
jmp
mov
inc
jae
movsl
cmc
clc
jp
shll
mov
jnp
nop
jg
jae
sub
adc
xor
jge
loopne
inc
repz
iret
mov
mov
ror
adc
push
adcb
mov
push
lock
adc
and
jo
pusha
lahf
shrl
push
pop
shrb
mov
xchg
sub
es
gs
into
pop
lock
cmpsl
inc
movsl
adc
es
push
in
aad
int3
inc
rorb
test
mov
mov
jne
push
jecxz
and
push
movsl
cs
cmc
dec
addb
int3
push
pushf
inc
rclb
loopne
adc
and
jo
pusha
notb
mov
push
lock
adc
and
jo
pusha
notb
xchg
jno
mov
scas
call
leave
inc
mov
adc
popf
mov
pop
test
cld
sbb
and
rcrb
cmpsl
push
pop
stos
sub
ret
in
fstl
mov
std
nop
ret
outsl
test
jecxz
out
orb
das
aaa
fsubrs
loop
fsubrp
mov
fildll
in
add
sub
push
inc
clc
dec
test
aas
mov
lret
ret
jno
or
fisubs
int
sbb
add
lds
js
mov
cmpsb
pop
in
fs
lds
xchg
mov
dec
loopne
out
jmp
xor
xchg
js
in
mov
mov
sbb
mov
mov
mov
fsts
adc
dec
jbe
jnp
cmpsb
pop
gs
cmp
out
scas
xor
jae
test
mov
ljmp
fisubl
leave
mov
sbb
imull
loope
dec
pop
or
lcall
sub
cmp
add
insb
or
popf
mov
scas
sahf
xchg
cmp
add
sahf
mov
push
mov
mov
or
mov
mov
shll
mov
xchg
jle
xchg
rcll
cmp
out
xchg
mov
ficompl
or
andl
lods
aas
jecxz
sbb
inc
mov
mov
enter
rorb
hlt
add
pop
popa
pop
dec
cmp
int3
and
shr
or
cwtl
mov
push
cmc
xchg
lds
test
sbb
lret
cltd
sub
dec
fisttps
mov
hlt
cmp
sub
xor
inc
sub
sbb
les
cmp
pop
stos
sub
stc
fs
cmp
ss
xor
cs
xor
inc
movsl
data16
jg
push
jno
iret
sbb
push
inc
outsb
or
mov
jns
add
pop
dec
adc
cmpsl
enter
lcall
pop
jno
leave
lret
aaa
ja
into
xor
inc
mov
fs
sub
jae
lret
xor
dec
mov
and
or
mull
xor
cmpsl
pop
push
pop
mov
test
jae
enter
dec
dec
notb
fdivr
clc
imul
std
ret
in
arpl
mov
scas
outsb
mov
mov
cmc
ja
aad
pop
mov
popf
pusha
xor
inc
pop
cltd
jo
stos
xchg
inc
push
sub
int
std
push
daa
mov
insb
mov
xchg
decb
pop
scas
test
cmp
xchg
push
sub
mov
rcrl
nop
jl
loopne
out
pop
cld
cmpl
test
into
sub
xchg
jmp
iret
jo
jmp
in
xchg
subl
ss
sbb
cmpsl
negb
pop
pusha
btc
sub
mov
or
lea
sbb
jmp
or
popf
pop
ljmp
pop
mov
dec
sub
mov
pop
push
or
bound
jo
pop
mov
test
or
mov
repz
aad
cmp
test
mov
daa
xchg
lret
in
adc
add
aam
xchg
dec
jns
adc
arpl
or
js
pop
mov
lret
jno
js
or
pop
aaa
add
lret
outsb
test
cmp
push
leave
es
push
movsl
mov
push
les
clc
movsl
inc
jnp
loop
enter
aam
xacquire
pushf
mov
cmp
add
shlb
fwait
xchg
lock
loopne
push
push
int3
jge
jns
call
aas
push
outsb
daa
sbb
cwtl
mov
pop
mov
sub
xchg
cli
and
jb
jg
int
cli
icebp
adc
outsl
insl
cli
adc
inc
mov
add
fisubs
mov
clts
stos
in
pop
aas
or
push
repz
inc
mov
insb
rclb
sbb
adc
pop
out
imul
lret
cwtl
sub
loope
loopne
mov
cwtl
mov
mov
add
jo
int3
or
jp
outsb
aas
call
push
into
loop
adc
mov
inc
gs
int
outsb
lods
jmp
sbb
dec
mov
mov
lods
daa
xchg
or
inc
test
add
js
dec
aaa
scas
dec
lcall
outsl
mov
jge
pop
repz
jle
lret
mov
xor
jne
loop
rorb
inc
jmp
arpl
ds
add
sub
mov
add
aaa
sub
daa
insb
add
mov
fdivl
xor
add
int3
mov
ss
push
fs
xor
negb
mov
jnp
hlt
out
ds
xlat
mov
lea
adc
dec
xchg
jne
mov
inc
mov
rol
xchg
xor
loopne
dec
mov
mov
inc
xchg
test
sub
cmp
mov
fs
insl
cmpb
mov
in
add
inc
lds
mov
jl
pop
lods
das
stos
scas
repz
into
jl
arpl
and
lock
ja
cwtl
mov
sub
push
mov
jb
xor
out
mov
mov
sub
stos
movsb
fstpt
pop
inc
inc
jno
push
fwait
lods
testl
loopne
gs
std
lcall
inc
jecxz
inc
insb
lea
mov
pushf
pop
jno
jmp
xchg
pop
fisubs
in
lcall
scas
mulb
jg
add
in
test
xchg
lcall
mov
mov
or
cli
sub
xchg
mov
mov
or
imul
and
push
or
ja
cli
imul
and
sub
fistpll
xchg
int
mov
and
mov
test
push
or
ret
sbb
in
movsb
popa
rolb
test
in
pop
mov
into
repz
mov
outsl
sub
pushf
in
jo
adc
jge
push
sbb
push
and
out
je
arpl
icebp
pop
fnstcw
in
sbb
fs
adc
add
fadds
out
call
dec
inc
sbb
cmpsl
sub
mov
xor
mov
sbb
test
sahf
xchg
lock
jno
cli
cld
sbb
orps
or
cltd
cmp
enter
push
xchg
dec
xor
imul
test
mov
push
fists
iret
loop
imul
nop
jb
test
std
pop
xchg
push
mov
lret
adc
cmp
adc
jae
jne
leave
mov
inc
sbb
gs
and
inc
fists
sub
shlb
imul
mov
push
jmp
movsb
mov
sub
popf
push
repnz
shll
mov
mov
xchg
mov
sbb
incb
ss
in
jl
push
xchg
sbb
cmp
aas
lcall
scas
jmp
rorb
cmp
pop
test
shlb
jmp
pop
or
imul
cmp
fs
cmpsl
push
push
andl
pop
bound
test
mov
or
test
out
aas
add
adc
lods
adc
cmpsl
mov
das
push
mov
cmc
clc
mov
icebp
mov
jae
cmp
jmp
clc
out
push
xchg
dec
loop
test
mov
cmc
sahf
movsb
push
in
push
jl
mov
fs
mov
push
xor
ljmp
push
pop
or
xor
lods
push
bound
push
sbb
dec
push
aam
inc
mov
popf
in
lret
test
dec
pop
cltd
lock
lret
fstl
movsl
stc
out
nop
cmp
dec
xchg
or
icebp
cmpsl
rclb
mov
cld
or
and
fdivp
push
js
insl
jl
movsl
push
mov
subl
mov
aam
sbb
mov
lret
push
jnp
push
jne
push
cmp
adc
xchg
xorb
stos
and
inc
arpl
in
fwait
adcl
xchg
add
daa
mov
jb
add
insb
int
test
jnp
jmp
push
sbbb
in
mov
aam
lahf
mov
jecxz
xlat
xchg
mov
jp
add
cmp
lods
xor
pushf
jmp
and
sahf
pop
les
clc
push
aas
push
cmp
cmp
sar
sahf
mov
dec
mov
loop
cld
pop
scas
mov
ds
ss
mov
out
imul
inc
xor
nop
push
xor
mov
stos
call
mov
inc
rolb
mov
inc
int3
adc
fsubs
add
mov
test
js
pop
popf
pop
imul
lahf
mov
pop
test
sub
push
and
repz
push
and
xchg
dec
jecxz
clc
inc
int3
push
mov
pop
imulb
out
popa
xchg
or
push
dec
mov
into
sahf
test
daa
jl
fs
fildll
mov
pop
pushf
sbb
jae
idivl
scas
inc
or
jbe
adc
jp
dec
popl
jl
fmuls
sub
rorb
icebp
adc
mov
dec
cmp
pop
and
daa
push
das
shrb
push
sarb
push
mov
mov
adc
jecxz
sbb
mov
push
xor
popa
imul
dec
inc
cltd
mov
pushw
cwtl
and
xor
imul
es
dec
lcall
ljmp
xorl
jge
pop
dec
dec
imul
sahf
or
cmp
and
dec
or
mov
jle
pop
int
iret
ret
hlt
xorb
mov
loop
add
xchg
icebp
lods
xchg
sub
cmc
mov
fsubrl
xchg
mov
testl
out
adcl
mov
inc
out
jb
sbb
pop
mov
mov
loopne
negl
push
scas
sti
mov
pusha
adc
mov
xorb
xchg
jo
pop
add
mov
insl
ljmp
incb
mov
xor
jle
data16
cmp
push
add
xchg
jmp
cmp
xchg
adc
jle
jnp
sub
pop
dec
jp
adc
sahf
inc
sub
mov
xor
sub
loope
leave
lock
pusha
andl
mov
or
pop
addl
mov
cmpsl
das
cmc
inc
mov
in
jne
sub
cmp
clc
cmc
adc
loopne
sbb
sti
cmp
push
sarl
jb
icebp
lahf
scas
cltd
jb
jle
sarb
pop
stos
jp
insl
aam
push
adc
add
sarb
sbb
lds
add
out
adc
cmp
lea
lahf
sti
cmp
adc
pop
dec
mov
sub
jne
jl
mulb
cwtl
repz
jno
mov
icebp
cmpsl
jne
push
data16
loope
mov
push
shrb
and
pop
jb
jns
jbe
cmp
xchg
fmull
adc
jbe
imul
mov
push
ljmp
xor
lods
pushf
jnp
xlat
out
or
jae
add
into
mov
les
ret
jae
and
push
ret
xchg
popa
mov
and
cli
cmp
jl
mov
xor
es
sub
sub
pop
pop
das
jg
bound
xor
adcb
cmpb
jb
push
insb
jae
adc
xor
mov
or
lret
adc
xor
cmp
in
jnp
aas
mov
test
or
pop
sbb
xor
cmp
mov
xlat
cmp
xchg
insb
int
ret
dec
cmp
cmp
gs
enter
inc
push
js
jle
sub
dec
shl
lahf
sub
adcb
cld
fsubrs
shlb
stos
push
sub
jge
inc
outsb
jbe
add
into
add
jae
pop
mov
xchg
daa
mov
lods
pop
mov
mov
es
adc
mov
pop
mov
mov
daa
dec
xchg
cli
xchg
ss
mov
jle
cmp
scas
fwait
add
js
movsb
fucomi
movsl
stos
xchg
sbb
repz
adc
fnstcw
cmpsb
shr
ljmp
cmp
push
xchg
or
out
aas
add
push
dec
lret
add
lret
daa
out
std
dec
jne
pop
xchg
mov
or
xlat
push
fiadds
pushf
fdivrs
out
fstpt
jl
idivl
loope
sbb
loop
in
sub
jp
mov
lods
xlat
jbe
push
mov
aaa
push
pushf
ljmp
or
insb
fucomip
cltd
pop
cmp
pop
add
mov
std
mov
and
xor
movsl
fcmovb
movsb
pop
movsl
mov
sarb
push
fimull
jo
and
test
mov
inc
sub
push
in
add
repnz
loop
pop
adc
fsts
roll
mov
mov
and
shlb
push
arpl
mov
xor
in
test
rorb
inc
andl
ss
sbb
adc
mov
test
fdivr
jmp
jmp
mov
aad
or
cmp
pop
pop
out
sub
ja
sub
add
cmp
mov
mov
into
aad
push
adc
adc
sub
jle
popa
inc
mov
adc
sub
test
out
dec
das
roll
mov
test
xor
call
call
mov
lds
push
push
push
push
sub
fwait
jmp
fwait
inc
lcall
mov
popf
add
fwait
mov
pop
in
jp
adc
outsl
ljmp
jl
ss
lods
add
adc
add
out
cmpsl
outsb
xor
test
fdivl
loop
push
mov
shl
std
mov
jmp
dec
adc
mov
push
mov
push
mov
add
xorb
add
lods
cmpsb
vpshlq
mov
ret
cmp
xchg
in
fdivl
lods
fcompl
das
add
ja
xor
cmpb
xchg
mov
adc
sbb
dec
jnp
mov
hlt
add
lret
out
or
pusha
pop
fstps
ret
ds
ret
or
loopne
pop
inc
pushf
pop
lret
lahf
xor
fstpl
ficompl
add
jnp
cltd
clc
adc
popa
dec
daa
mov
add
js
loopnew
pop
call
mov
push
xchg
push
outsb
mov
mov
cmp
adc
mov
inc
mov
mov
in
adc
aas
jle
inc
cmp
loop,pt
xor
test
add
inc
add
pop
rorl
fmul
lcall
dec
cmpsl
xor
sub
subl
popf
cli
cmpsb
mov
std
push
aam
mov
or
divb
mov
scas
jns
outsb
sub
xchg
dec
pop
mov
jns
jno
daa
xor
dec
repz
jbe
add
push
xchg
das
mov
adc
sahf
das
test
xchg
call
push
jnp
loope
insl
inc
xchg
mov
rorb
aam
fsub
int3
jo
in
imul
jg
jnp
mov
inc
mov
sbb
out
mov
aad
xor
inc
nop
fidivl
gs
pushf
cmp
cmc
mov
sbb
repnz
inc
test
sti
xor
jg
negb
sub
dec
ds
aam
jmp
and
mov
add
dec
sbb
xor
ret
pop
loopne
sarl
pop
mov
xor
xchg
push
loopne
flds
ret
pushf
fsubr
jmp
out
inc
pop
mov
jge
aad
cmp
ss
stos
xchg
aas
icebp
fldl
clc
fwait
dec
mov
dec
sti
testb
sbb
add
dec
andb
sbb
xchg
dec
scas
cltd
or
sub
jns
jae
jecxz
int
repnz
jl
int3
sub
sbb
add
or
mov
inc
jb
bound
jo
loope
pop
dec
popf
fisttps
shl
test
aad
push
test
inc
inc
fcomp
jl
pop
nop
or
mov
sub
outsl
pop
in
add
adc
loop
cmp
mov
dec
and
iret
jge
pop
push
mov
jae
ficoml
out
push
lahf
mov
in
xor
loopne
insb
jmp
call
sub
dec
jl
inc
push
xchg
jnp
jbe
lds
lret
fbld
mov
shlb
jg
mov
sub
inc
inc
enter
jmp
out
xor
xor
jp
out
cmpsb
adc
arpl
jo
xchg
add
jne
test
pop
sbb
inc
inc
inc
fldenv
in
je
cmp
iret
out
ljmp
insb
rorb
cmp
xor
inc
xchg
in
push
mov
mov
cmp
pop
cs
mov
xor
lret
inc
pop
or
fcomip
lcall
cmp
ret
in
and
xor
inc
cmp
sbb
pop
mov
fwait
std
xorb
pushf
cmpsl
fnstenv
int
cmp
aaa
es
inc
stos
jl
mov
push
or
stos
dec
cli
mov
adc
adc
outsl
cmp
in
es
cmp
leave
ds
int3
mov
jg
pop
mov
or
sbb
pop
xchg
inc
jno
testb
fidivl
xor
fisttpll
xchg
sub
add
ret
pusha
push
shr
xchg
adc
cmpsl
pop
jnp
or
ror
adc
ucomiss
lret
xor
mov
cmp
test
inc
adc
mov
stc
test
xchg
pop
cwtl
mov
or
fsubl
gs
int3
mov
push
add
xchg
sbb
xchg
mov
xor
sar
fisubrs
pop
loopne
in
and
jne
mov
lahf
and
lods
sub
repz
dec
ret
movsl
mov
out
aaa
fimuls
xchg
jns
add
dec
inc
out
roll
sbb
mov
bound
bound
les
push
mov
ret
cltd
and
imul
pop
cmp
mov
call
insl
jb
jno
jmp
repnz
out
pop
xlat
pop
mov
dec
ret
addl
xor
sbb
subl
lret
sbb
and
push
dec
pop
cmpsl
jo
je
and
inc
pop
int
ss
push
push
scas
rorb
sub
mov
adc
ljmp
inc
fstpt
shrb
pop
and
adc
xchg
cmp
sbb
call
sbb
or
inc
sbbb
xorb
imull
dec
push
imul
jl
sbb
lret
push
lea
pop
cli
xchg
in
sbb
adc
or
pop
imul
scas
cmpb
pop
aaa
jb
stos
scas
movsl
mov
inc
fdivrl
loopne
sub
in
and
idivl
mov
in
adc
xor
clc
cmp
or
jo
sub
jnp
push
sti
and
cmc
outsb
clc
es
arpl
xor
sub
leave
shl
enter
sti
jecxz
out
pop
adc
idivl
std
lret
outsl
add
fucom
xchg
fdivrs
les
sub
ss
push
xor
fwait
leave
or
add
inc
pop
push
hlt
incl
and
mov
jle
in
repz
gs
dec
pop
insb
xchg
xor
dec
add
fucomip
sub
pop
dec
movsb
decb
icebp
dec
sub
pushf
push
jmp
jl
and
ficompl
mov
push
jp
push
fdivl
mov
push
pop
ds
push
cmp
movsb
or
scas
test
int
inc
dec
jle
div
movsl
shrl
popa
dec
push
sbb
add
push
cmp
and
popf
lahf
jmp
fs
sbb
jp
adc
daa
fcmovnbe
lret
add
lea
out
dec
test
pushf
mov
or
out
ja
mov
leave
fldt
pop
dec
aaa
loopne
insl
xchg
ds
xchg
lods
add
repz
andl
xchg
cld
xchg
sbb
jbe
pop
lea
mov
inc
in
cmp
or
je
dec
cmp
jl
les
xor
je
inc
in
mov
mov
aad
jl
mov
fldl
aaa
cs
in
bound
movsb
pushf
ljmp
or
cmp
lods
adc
imul
fs
sbb
pop
adc
jp
or
cmp
out
mov
aas
test
arpl
in
addr16
dec
jnp
adc
popa
jecxz
adc
lcall
add
jp
leave
arpl
mov
fs
aaa
jne
mov
pop
sbb
test
mov
jg
fmulp
add
iret
jg
xor
or
and
fadds
fs
flds
imul
clc
xor
and
cmp
add
out
je
outsl
push
mov
mov
push
lock
adc
and
jo
pusha
notb
mov
push
lock
adc
and
jo
pusha
notb
cmpsb
mov
lock
jbe
push
add
push
movb
out
notb
mov
push
lock
adc
and
and
sub
sbb
or
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
push
pushf
mov
cmp
in
setb
in
lret
mov
stos
sub
pop
lret
dec
sti
insb
jmp
adc
lods
pop
fmull
jnp
imul
cmp
scas
dec
sti
jl
insb
rcrl
dec
faddl
int3
push
cld
xchg
in
fwait
sbb
das
fstpl
inc
sti
sbb
sbb
sub
jg
pop
leave
shlb
and
push
lock
and
aad
cmp
pushf
pop
pushf
add
mov
inc
push
je
popw
or
repz
ret
inc
cmp
pop
pop
jp
cmp
sbb
stos
imul
cmp
push
das
fistpl
or
and
inc
jo
icebp
mov
pop
adc
inc
test
mov
jp
imul
cli
push
test
out
or
sahf
pop
divb
inc
jmp
movsb
push
enter
and
pop
jecxz
sbb
sub
bswap
pop
stos
adc
mov
add
inc
jbe
arpl
or
dec
lret
sbb
jl
xchg
sub
lods
pop
fmull
int3
jnp
shr
imul
sub
pop
aad
sti
jl
sub
jge
jg
inc
in
xor
cltd
or
jmp
lret
sub
or
lock
hlt
loopne
xor
sbb
mov
pop
jle
cmp
cmp
cmp
dec
fldcw
push
out
dec
int3
jnp
imul
sbb
or
cmp
sub
pop
lret
dec
sti
jl
insb
sbb
lods
pop
fmull
jnp
imul
sbb
or
cmp
sub
pop
lret
dec
sti
jl
insb
sbb
imul
sub
shlb
xchg
imul
jbe
xlat
adc
lock
repz
mov
xchg
mov
mov
mov
mov
aad
push
and
jnp
or
test
mov
pop
mov
ja
bound
rorb
mov
sbb
lds
popa
mov
mov
jge
mov
and
or
ffree
popf
pop
adc
push
or
cmp
popa
push
inc
addr16
movsb
pop
lret
mov
mov
aam
inc
sub
dec
inc
rol
outsl
adc
or
push
adc
dec
push
jb
fmull
cmpsl
adc
jmp
mov
imul
jge
dec
adc
mov
jmp
test
push
movsb
arpl
imul
popf
xor
pop
jl
push
mov
js
push
push
sbb
int
sbb
sub
test
pop
lahf
in
dec
arpl
sub
iret
dec
sub
lds
pop
sbb
cwtl
popa
in
cmpsb
fisubrl
stos
movsb
pop
adc
sbb
push
add
lcall
xor
testb
call
jb
testb
aad
dec
ja
xchg
sub
lods
jge
xchg
out
testb
pop
mov
sbb
jno
add
sbb
pop
nop
sbb
mov
stc
test
test
mov
mov
lods
roll
mov
cmp
out
push
sub
mov
mov
sarl
pop
xchg
pop
pop
sub
cmpsl
scas
cmp
iret
mov
adc
inc
jb
cwtl
sub
and
out
je
xor
imul
xor
adc
xchg
js
dec
es
sahf
minps
shr
cmpsl
inc
mov
add
std
inc
mov
scas
xchg
xor
mov
stos
sbb
cltd
mov
test
xchg
repnz
push
insb
call
pop
aam
out
arpl
push
stos
inc
in
pop
or
movsb
nop
ret
sub
jmp
inc
sti
add
dec
pop
push
sbb
sti
add
push
add
test
lock
icebp
jo
push
je
jg
sbb
cli
fcmovb
in
fs
xchg
lret
pop
sub
icebp
xchg
mov
ret
push
popf
or
pop
outsl
push
jl
pop
mov
push
push
rcrb
mov
ja
outsl
pushf
mov
mov
xchg
inc
fsubrp
lret
mov
icebp
adc
lds
jbe
daa
pop
mov
aas
dec
add
jno
cltd
fs
loope
andb
sbb
pop
jbe
rorb
aas
in
dec
jge
push
dec
jo
addr16
out
bound
jno
or
cmp
shl
or
cmp
in
fcoms
and
jp
cld
xchg
ret
addr16
mov
sbb
adc
jnp
jns
hlt
addr16
mov
clc
mov
add
aaa
cmp
mov
rcr
jle
in
lret
or
dec
imull
xor
mov
sbb
and
shrl
nop
xchg
jl
or
push
mov
jp
mov
xchg
inc
call
fcoml
adc
out
sbb
cmp
jne
popa
dec
lods
or
fimuls
fldcw
movsb
sub
mov
mov
sbb
insl
push
lret
xlat
adc
loope
mov
inc
je
add
pop
stos
jno
ret
cmp
outsl
in
xor
addl
imul
xchg
dec
adc
xchg
xor
lods
push
test
inc
hlt
enter
outsb
stos
cmp
xchg
orl
cmp
mov
cltd
mov
xchg
movsb
adcb
bound
shll
dec
xchg
inc
pusha
jecxz
xchg
aam
fadds
inc
stc
lock
pusha
jbe
arpl
mov
sub
and
in
fisubrl
dec
jnp
jno
test
out
sub
int
xor
sbb
push
jo,pn
add
nop
xchg
cmp
xor
es
leave
push
out
sti
ss
mov
aam
xchg
mov
mov
stos
pop
out
popa
out
je
jno
out
aam
jmp
cwtl
pop
add
mov
das
or
mov
jl
sti
mov
dec
test
lcall
andb
push
mov
mov
call
and
stc
sbb
or
orb
cmp
addr16
sub
push
mov
mov
cmpsb
jmp
add
mov
adc
sbbl
cmpb
mov
bound
mov
dec
inc
insb
mov
shll
or
xor
cmpsb
xor
mov
fwait
add
sbb
cmp
push
addr16
cmp
fwait
lahf
idivb
jae
sub
mov
sub
sbb
add
iret
xchg
paddusb
mov
sub
pushf
cmpps
dec
add
mov
lea
cmp
jb
aas
repnz
dec
mov
repnz
mov
aam
mov
sbb
lret
pop
mov
cmp
jmp
sub
xchg
push
popf
mov
mov
push
push
aam
push
mov
cltd
sub
aaa
xchg
fwait
addr16
pop
inc
das
or
jnp
sub
sub
test
jns
mov
push
adc
xor
ds
out
mov
lds
or
cwtl
and
lock
push
insb
push
xchg
dec
aam
ret
lahf
fprem
xor
jmp
or
jnp
sbb
into
call
mov
mov
aaa
rcl
mov
mov
stos
sbb
push
lret
xlat
stc
ja
adc
fistpl
add
in
sub
std
lods
dec
out
push
xor
inc
ret
in
stc
inc
mov
cmc
add
ror
sti
mov
xorb
push
hlt
sub
negl
pop
lret
fisubs
out
test
fstps
into
push
dec
jg
mov
jmp
xchg
aaa
sbb
cmpsb
xchg
sbb
xchg
mov
xchg
or
jns
or
jnp
shl
icebp
aas
les
add
xor
movsb
push
mov
mov
and
int
aam
mov
xchg
add
pop
add
aam
jmp
push
mov
xchg
cmp
call
or
inc
cli
inc
je
iret
cli
dec
mov
push
dec
push
aaa
xchg
adc
adc
stos
out
sbb
and
testb
test
mov
inc
pop
jle
roll
mov
dec
sbb
loopne
out
sbb
pop
icebp
jne
xor
inc
dec
xchg
and
adc
addr16
out
ret
xchg
xchg
push
jae
lods
mov
and
sub
mov
or
ret
lret
js
sub
lds
js
out
movsl
fcompl
cmp
lahf
mov
xchg
add
cmpsl
sub
adc
das
push
inc
xchg
mov
pop
insl
jl
movsb
stc
in
mov
fcoms
adc
add
pop
add
faddp
iret
into
js
adc
jb
int
shr
pop
aad
dec
cmp
xchg
mov
cmp
fdivl
pop
lds
pop
das
inc
push
inc
xchg
and
hlt
push
insl
mov
stos
fldln2
js
ret
iret
pop
outsl
add
sub
incl
ljmp
icebp
ja
aaa
lods
mov
add
sbb
or
sbb
sbb
addb
xor
cmpsb
push
jecxz
je
out
test
mov
adc
xchg
pop
sbb
xlat
mov
mov
mov
and
subb
lds
hlt
mov
push
repnz
int3
aad
cmp
test
test
mov
jle
dec
cld
popf
cmp
xchg
repz
mov
push
jl
mov
lret
xchg
imul
mov
push
je
sbb
adc
dec
cmpsl
dec
pop
mov
lods
dec
sbb
leave
mov
test
xchg
loope
loope
lea
xor
dec
dec
push
xchg
js
jl
aad
xchg
popf
mov
aam
inc
mov
fcmovbe
je
jae
pop
popf
add
andl
mov
adc
and
add
push
cwtl
stos
orl
ljmp
jns
jnp
and
call
mov
nop
insb
aaa
stos
ret
dec
xchg
sbbl
pop
stc
xchg
leave
xchg
mov
punpckhdq
adc
pusha
loop
cmpsl
lcall
pop
sub
add
sub
adc
pop
loopne
xchg
dec
rorb
sub
xor
into
lahf
gs
dec
adc
mov
mov
push
mov
pop
popl
outsb
sbb
cmp
les
nop
mov
xlat
jbe
roll
or
cmp
jmp
inc
aaa
sub
filds
lret
in
and
sbb
inc
ja
push
fists
out
cmpsl
cmp
push
fsubl
lahf
stos
mov
push
data16
or
sti
xor
jae
mov
add
loopne
rcrb
scas
sub
dec
jmp
sub
inc
inc
inc
push
inc
call
imul
lods
cli
xlat
outsb
sub
repz
mov
lock
and
mov
adc
jle
repnz
in
and
mov
inc
subl
lock
mov
int
sub
test
std
pop
cmp
push
outsb
mov
push
ja
jb
xchg
ds
mov
cmpsl
fwait
jg
shll
mov
cmpsl
xor
push
fs
or
mov
and
push
add
xchg
xchg
pop
aad
imul
push
and
cwtl
lcall
in
stos
mulb
mov
loope
loopne
inc
push
add
pop
sahf
jbe
inc
inc
dec
test
xchg
das
push
leave
andl
add
cmp
inc
daa
call
rolb
ds
enter
pop
add
fsub
das
adc
sub
or
fs
addb
das
pusha
fwait
mov
dec
mov
stos
xor
adc
sarl
xor
iret
stc
cmp
nop
add
loop
jbe
inc
sub
jno
fucom
mov
add
jb
dec
cwtl
mov
jl
cmpsl
repz
push
pushf
movsl
dec
loopne
cmc
mov
fists
test
sub
jae
and
jge
arpl
xor
ja
fistps
jo
sbb
sub
test
inc
push
xchg
out
shl
jp
push
fbld
mov
out
cmp
push
mov
das
push
repnz
cmp
cmpsl
inc
stos
or
or
sti
idivl
jmp
loopne
and
or
push
jge
movsl
cmc
mov
xchg
inc
and
cmp
mov
sub
bound
xchg
shl
jnp
or
in
dec
add
sbb
dec
mov
or
shr
xchg
sbb
pop
lret
adc
mov
cmp
inc
insb
rolb
stos
inc
lcall
xchg
insb
push
mov
roll
es
cmp
sbb
mov
iret
jne
xchg
rolb
cmc
sub
mov
sub
int3
pusha
mov
scas
sub
lret
cli
int3
pop
mov
jnp
mov
jns
add
mov
ficoms
cld
cmpsb
xchg
loop
es
fidivs
test
jo
dec
jns
hlt
mov
pop
std
push
inc
push
fs
inc
pop
lahf
xor
je
pop
bound
cltd
nop
icebp
adc
popf
insl
pop
xor
sub
rcrl
xchg
mov
pop
shrb
sarl
test
repz
sbb
xchg
fcomi
icebp
mov
out
pushl
rcrb
sbb
icebp
je
and
test
pop
das
sti
enter
xor
sbb
mov
ja
adc
lret
inc
add
jmp
cld
add
mov
mov
sahf
ds
sahf
mov
adcl
push
or
xlat
inc
mov
cmpsl
fisubrs
shlb
push
inc
or
jbe
sub
pop
mov
insb
jo
mov
negb
mov
cmc
and
dec
fidivrl
push
inc
mov
adc
sub
scas
adc
std
dec
push
mov
repnz
icebp
dec
add
jnp
push
xchg
xchg
pop
test
fstps
push
push
imul
test
dec
cli
subl
arpl
je
mov
or
fcoms
jle
aam
jl
push
jp
xor
push
xor
mov
sub
xchg
fcoml
bound
into
pop
push
or
mov
sbb
test
mov
jmp
mov
js
out
push
bound
stc
or
pop
aam
pusha
fsubrs
mov
scas
push
pop
notl
xor
jge
fnstenv
lret
addl
loope
add
ret
inc
fwait
popa
sbb
imul
mov
mov
inc
cmp
cmp
shrl
stc
mov
out
out
sub
jmp
popf
and
mov
push
pop
clc
jp
dec
lea
lods
outsb
jne
ror
mov
test
insl
insl
aad
nop
fisubs
scas
sarb
into
or
stos
out
or
sbb
cltd
xchg
xchg
out
xor
pushf
and
int3
add
test
xlat
stc
out
sbb
sbb
sbb
movsb
cmp
cld
inc
out
lock
or
mov
lods
aas
xor
ret
dec
lret
inc
or
mov
not
mov
push
mov
lret
add
outsb
or
or
sarb
lea
outsl
adc
fcomi
out
jne
fsubl
int3
pop
pusha
movsb
scas
imul
inc
and
xchg
test
sbb
lcall
daa
sub
sub
lock
daa
lret
xlat
addl
inc
pop
test
scas
scas
pop
testl
push
lods
and
sub
stos
jbe
adc
dec
stc
push
je
cwtl
fidivrl
enter
xor
stc
or
lahf
iret
stos
iret
xchg
mov
and
dec
adc
xor
bnd
sbb
pop
fxch
sbb
cmp
jns
xlat
dec
lods
enter
subb
and
fdivl
lret
mov
cmc
push
imul
xchg
jbe
xor
arpl
sub
dec
sbb
add
mov
or
add
imul
aas
lods
out
push
and
adc
enter
orb
arpl
mov
cmpsb
pop
push
repnz
push
roll
fwait
popa
push
addr16
scas
sub
pshufw
les
push
rcll
mov
add
or
inc
arpl
add
inc
pusha
jns
xchg
xchg
fmuls
add
es
pusha
adc
jbe
stos
add
cmpsb
rcll
xor
loop
cmp
or
mov
or
mov
xor
jp
mov
roll
sub
mov
fwait
and
and
rorb
adc
test
mov
xchg
sbbl
stc
sbb
mov
in
cmpl
xchg
xor
add
mov
stos
cmpsb
dec
aas
cwtl
ja
cs
jae
pushf
cwtl
pop
repnz
xchg
stos
mov
fsubp
sti
shrb
cmc
daa
icebp
jmp
cs
repz
fs
push
nop
mov
cmp
cmpsl
adc
fildl
and
and
adc
inc
push
gs
or
cwtl
push
sbb
xchg
std
mov
cli
jmp
das
jg
insl
fimuls
push
test
jb
dec
popf
mov
jns
lock
hlt
aam
jmp
pop
out
sub
cmpsb
push
sti
pop
into
and
and
bound
popf
incl
or
mov
insl
mov
js
popf
outsl
xor
in
je
xchg
dec
ficoml
or
mov
stos
fists
es
shr
mov
mov
stos
sar
sbb
sub
ret
cwtl
push
inc
jo
lods
rorb
add
adc
mov
mov
jae
xchg
int
mov
and
sbb
mov
dec
leave
sbb
jae
fwait
cld
and
cld
lahf
and
subl
xchg
xor
stos
dec
mov
andl
cmp
es
pop
cmpsb
inc
loope
mov
adc
xchg
inc
jbe
loop
lea
and
enter
mov
push
in
push
mov
je
inc
test
pop
and
jge
xchg
fnstenv
std
ret
in
mov
pop
leave
and
and
inc
push
inc
movq
add
cmp
xlat
in
dec
push
add
repz
xorl
aaa
jmp
addl
test
lret
sub
leave
imul
mov
rorl
jns
cltd
sub
aas
dec
scas
int
lods
sub
lods
sub
jnp
mov
push
sub
out
outsb
mov
xor
and
and
inc
fisttpl
xchg
inc
jne
pop
jnp
jno
mov
out
cmp
or
je
cmp
into
lods
pop
shlb
stos
aad
jns
stos
fdivs
sbb
out
lock
pop
scas
adc
testb
inc
repz
jl
or
stos
je
aas
out
mov
outsl
mov
outsb
adc
enter
ja
les
mov
pop
cmp
stos
push
sti
push
xor
and
in
nop
rcrb
stc
jecxz
test
test
mov
jbe
dec
cmpsl
ljmp
and
orb
xor
fbstp
inc
cmpsb
mov
mov
out
xor
and
mov
push
lods
or
adc
in
cmpsb
sti
sbb
aad
jns
jmp
cmp
stc
xchg
lret
shll
enter
test
push
or
and
xchg
cli
xchg
ret
js
fstp
cmpsl
cmp
sbb
cmp
jne
fwait
sti
test
inc
cs
inc
leave
dec
and
sti
in
jmp
cmp
loop
jbe
int
and
pop
pop
lods
mov
fs
aam
dec
je
jns
mov
lods
ror
fnsave
cmpsl
mov
sbb
fistpll
xchg
sub
jne
cmp
outsb
adc
xchg
xchg
out
lret
mov
gs
cmp
xor
adc
adc
lcall
sub
mov
mov
push
imul
add
mov
clc
test
sub
aad
or
daa
sub
sbb
movsl
dec
pop
jno
push
mov
jnp
inc
mov
mov
inc
xor
push
cmp
and
fwait
xchg
movsl
aaa
test
lock
jecxz
popa
mov
cmp
and
dec
cmp
test
cs
popa
cmpsl
xor
shrb
in
dec
jp
imul
test
jb
outsb
movsb
stos
pop
dec
mov
adc
mov
ror
sbb
loopne
ja
rorl
js
notl
or
jl
lods
pop
inc
cmp
out
das
add
inc
push
sub
cmp
fs
in
sbb
cmpb
cltd
repz
add
pushf
sub
lcall
call
jg
outsl
sub
test
pop
xor
div
or
in
pop
in
and
cwtl
decl
push
shrl
push
stc
scas
aaa
or
daa
int3
pop
jns
xor
inc
out
shrl
jns
movsl
pop
xor
shr
dec
stos
hlt
lahf
test
xchg
loopne
mov
inc
mov
movsb
add
push
or
adc
das
loopne
aaa
icebp
push
lods
mov
testb
inc
popf
hlt
test
mov
mov
movsb
pusha
clc
icebp
pop
hlt
fucomip
rcrl
call
mov
psrlq
cmp
sbb
rorl
imul
mov
fidivrl
mov
rcll
mov
data16
push
pop
in
cmp
mov
popf
pop
loop
jl
push
rolb
sbb
outsb
in
dec
push
sbb
js
dec
cmp
or
mov
shlb
inc
xor
stos
shll
mov
in
pop
mov
pop
pop
cpuid
lock
jbe
push
mov
test
shll
and
stos
js
roll
int3
test
push
test
lea
and
fisubrs
push
push
aas
cmpsl
ret
incb
dec
cmc
popa
cmp
fcmove
dec
push
pop
lock
js
mov
dec
aas
xchg
mov
lods
rcll
gs
inc
shll
hlt
je
cmp
dec
adc
hlt
add
popf
ljmp
mov
mov
in
addr16
in
jg
jg
sbb
or
jp
cltd
fiaddl
rcrb
scas
push
xchg
inc
push
add
movsl
mov
mov
movl
adc
rol
pop
stos
or
ror
mov
mov
mov
dec
int3
jnp
imul
sbb
or
cmp
sub
pop
lret
dec
sti
jl
insb
sbb
lods
pop
fmull
jnp
imul
sbb
or
cmp
sub
pop
lret
dec
sti
jl
insb
sbb
lods
pop
fmull
jnp
push
lahf
sbb
or
cmp
sub
pop
rorb
fldt
daa
mov
fcompl
jnp
jmp
fwait
sbb
cmpsb
adc
pop
lods
aam
mov
adcl
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
