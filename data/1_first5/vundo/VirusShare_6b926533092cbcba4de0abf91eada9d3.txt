sbb
add
outsl
std
clc
and
jl
xor
and
mov
push
cmp
adc
scas
jo
push
xchg
mov
ret
int3
add
out
cmp
test
pop
idivb
rorb
sbb
add
adc
hlt
cmp
out
fisttpll
popf
fs
repz
xlat
and
or
and
int3
mov
sbb
popf
push
popf
out
adc
jg
fcoml
fiaddl
pop
das
xor
adc
xchg
loop
int3
scas
scas
or
sbb
and
mov
lret
and
clc
ret
or
dec
fdivs
std
aam
lods
in
mov
dec
shlb
push
pop
dec
and
sbb
mov
fdivl
hlt
mov
loop
arpl
xor
jp
jp
les
popa
lods
mov
xor
sbb
ret
push
add
into
movsb
ror
mov
add
mov
push
orl
ljmp
xchg
movq
outsb
clc
cwtl
xlat
scas
xor
test
aas
loopne
cltd
in
mov
push
push
iret
into
add
adc
test
xchg
pop
pop
add
jnp
popa
add
in
icebp
mov
inc
shll
lret
inc
mov
mov
or
insl
adc
cmpsl
lock
push
inc
push
arpl
mov
jbe
adc
pushf
cmp
mov
add
movsl
xchg
sbb
inc
cmpsl
sti
xchg
cmp
sub
pushf
das
jb
cmp
stos
add
sbb
or
and
lret
mov
shrb
call
orb
dec
daa
mov
loopne
jo
pop
test
pop
loopne
add
or
dec
andb
lcall
lret
in
rclb
dec
mov
out
fmull
fimull
push
std
pop
and
aaa
push
stos
dec
dec
xlat
mov
mov
enter
push
icebp
jg
in
dec
mov
xor
lea
jae
popa
sti
jecxz
pop
cld
pop
inc
shr
pop
bound
push
std
adc
add
cmp
dec
and
bound
into
inc
sub
jmp
mov
outsb
stos
lret
sti
dec
sub
xchg
inc
repz
add
js
movb
rclb
xor
ljmpw
call
mov
xor
xchg
les
pop
movsb
cld
int3
repnz
ror
dec
pop
sbb
fcomp
scas
inc
cwtl
jne
test
dec
test
add
out
or
dec
pop
add
add
fidivrl
jns
mov
mov
mov
sahf
mov
hlt
leave
cmpsb
pusha
sarb
popa
or
or
xchg
shl
xor
lahf
push
sahf
dec
push
iret
fsubrs
push
inc
pop
pop
out
xor
ret
xlat
in
clc
and
into
shrl
mov
cmp
xor
jecxz
pop
add
out
sub
jnp
lds
add
bswap
push
fldt
repz
cmc
mov
shll
push
mov
dec
aam
and
pop
dec
shl
push
sbb
fisubrs
xchg
mov
mov
xchg
sti
fmuls
pushf
rclb
outsl
push
imul
out
jmp
push
dec
sbb
addr16
ficoms
adc
or
mov
mov
out
pop
hlt
mov
lock
sbb
xchg
js
aas
sbb
fwait
inc
add
mov
pop
pop
sub
push
inc
cwtl
dec
dec
bound
fistpll
xorl
inc
xchg
cmp
push
imul
cmp
gs
hlt
sbb
les
xchg
insb
or
or
xor
push
add
push
or
jge
or
fnstcw
xchg
inc
or
dec
or
xor
add
mov
xchg
enter
filds
jmp
adc
fs
addl
pop
sbb
mov
inc
insl
cmpsl
and
inc
xchg
stos
cmp
jae
dec
sub
add
pop
lods
inc
push
xchg
addl
add
xchg
inc
and
stos
pop
mov
lock
ja
push
or
movsl
or
sbb
test
xor
aad
adc
mov
adc
rcr
add
xchg
add
inc
daa
mov
rolb
sahf
iret
cmp
cs
mov
or
or
js
stos
lea
out
add
or
sbb
stos
scas
jp
loop
and
test
xor
sub
mov
out
ret
bound
xor
inc
push
fistpll
mov
dec
and
cmp
push
test
xchg
mov
mov
icebp
mov
sbb
dec
test
xor
dec
ret
mov
push
push
out
cmp
and
dec
sarb
lock
sbb
mov
mov
fcmovu
adc
ficoml
cmp
in
cld
stos
cli
leave
iret
add
out
pop
movsl
sbb
xorl
mov
lods
ret
jno
cmp
shrb
xlat
push
loopne
sbb
test
sbb
pop
pusha
push
adc
lds
pop
lcall
ret
mov
jmp
push
jl
in
sbb
pop
sub
mov
loop
jmp
ljmp
in
loop
jg
sarl
add
das
stos
cltd
gs
stos
push
test
repz
lods
das
pop
xchg
pop
adc
pop
rorl
mov
pop
sti
loopne
pop
test
inc
nop
faddl
push
addl
cmp
sbb
xchg
xor
lahf
adc
jge
leave
pop
xor
cmpsl
cli
push
mov
xchg
mov
xor
xor
inc
cld
outsl
push
fistpll
icebp
add
xlat
mov
dec
adc
cmp
add
jne
jg
inc
or
adc
div
pop
testl
in
sbbl
fisubs
mov
repnz
cmpsl
adc
shlb
push
mov
dec
push
push
sub
aaa
jmp
jbe
test
xor
inc
mov
sti
jb
adc
sbb
pop
cmp
andl
pop
sbbb
mov
mov
xor
aaa
mov
inc
push
xor
mov
sbbl
int
push
jp
mov
ret
lret
aaa
idivl
out
mov
xor
push
sbb
das
cmp
mov
leave
int
mov
in
scas
repz
cmp
or
js
sub
or
xor
jb
push
fsubrs
inc
xchg
fmuls
push
fmulp
xlat
ja
mov
adc
or
xchg
lret
add
or
fwait
cltd
ret
adc
sbb
dec
xchg
sti
repnz
popa
das
xor
pushf
sbbl
push
out
cmovs
dec
xchg
cltd
inc
cli
or
sub
addr16
xchg
test
daa
insl
orl
push
push
inc
sbb
fstpl
inc
stc
fcoms
mov
clc
pushf
fs
fucomp
mov
dec
jmp
shlb
ror
cld
arpl
leave
push
insb
aad
xchg
inc
sbbb
mov
jl
lods
scas
cmp
enter
xor
or
xor
int3
fwait
movsb
xor
jle
insb
pop
adc
and
add
rolb
decb
in
and
mov
inc
xchg
adc
ficompl
pop
les
rclb
adc
testl
mov
ljmp
ffreep
cmp
jl
mov
fimuls
into
inc
addr16
outsl
pop
jne
xchg
pusha
add
aam
push
adc
inc
jmp
mov
or
ret
jmp
test
add
cmp
xchg
pop
mov
mov
xchg
imul
iret
mov
mov
cwtl
cld
pop
cwtl
lods
cmp
jle
or
xor
test
push
mov
dec
jecxz
dec
xchg
adc
mov
test
in
lock
and
out
adc
xchg
out
xor
leave
filds
mov
cld
es
clc
jmp
icebp
sbb
les
testb
sahf
out
jge
in
sbb
test
mov
outsb
jae
lock
into
pop
imul
xor
mov
push
adc
rolb
sub
mov
into
js
xchg
sbb
mov
jbe
dec
jge
addr16
mov
sbb
das
out
jns
movl
jge
adc
pop
popf
test
arpl
test
faddl
add
mov
push
lahf
stos
xor
call
mov
outsl
fwait
call
jl
and
pusha
sub
icebp
test
jae
in
mov
enter
sbb
nop
pop
jecxz
das
aas
add
cmp
test
leave
cmpsl
cmp
mov
sahf
push
pop
mov
push
lods
lds
mov
jmp
mov
pop
mov
adc
pop
mov
jmp
mov
aad
imull
and
ja
pop
xor
sahf
sbbl
arpl
pop
fdivs
push
pusha
xchg
mov
cltd
dec
int3
jge
sti
je
call
cmp
and
dec
dec
mov
shr
loope
add
add
mov
mov
js
mov
fnstenv
mov
mov
shl
aam
cmp
mov
sbb
xor
sub
jl
bound
arpl
stos
popl
cmp
scas
adc
bndldx
fnstenv
loop
rolb
jmp
sbb
pop
cmpsl
aad
sarb
xor
adc
repz
icebp
sbb
inc
stos
nop
jmp
push
lahf
adc
jns
xlat
in
in
orb
or
subl
mov
ds
or
fcomps
testl
enter
and
rcrl
mov
lret
out
push
ja
jno
lret
push
cmp
outsb
xor
movsb
dec
in
js
xchg
fsubs
jne
loop
fildll
dec
sti
stos
xor
push
jecxz
insl
add
push
or
and
xor
loope
fiadds
ja
mov
shl
lods
push
push
movsl
add
jmp
enter
arpl
pop
push
jl
stc
aas
stc
je
mov
fstps
mov
insl
fisubs
inc
cld
dec
nop
fwait
inc
lret
lods
iret
and
push
push
pop
les
das
cmp
pop
das
dec
xor
mov
push
add
dec
les
cwtl
adc
jp
icebp
icebp
icebp
in
push
cld
mov
scas
cmpsb
mov
cmc
xchg
sti
pop
mov
or
outsl
cmpsl
and
xor
xchg
out
xor
or
push
incl
push
mov
insb
mov
lcall
fsubrl
in
push
sub
xlat
add
and
aaa
or
mov
jnp
rcrb
xor
repz
cltd
nop
add
das
pop
rorb
int
sub
icebp
ret
in
mov
insb
push
sbb
aaa
cmp
push
pop
push
xchg
aas
push
leave
xchg
mov
andl
xchg
xchg
iret
mov
sub
cmp
xlat
loope
xchg
cs
mov
imulb
and
sub
out
adc
pop
sub
sar
addr16
popa
sub
mov
push
pop
cld
cmpsl
pushf
push
cwtl
xor
pop
sub
scas
xchg
jmp
or
ljmp
and
push
repz
mov
subb
lds
ret
push
pop
sbb
sub
frstor
and
pusha
leave
mov
mov
or
inc
adc
fistps
clc
sub
sbb
lret
inc
pop
xchg
push
xchg
push
lret
pop
aaa
pop
into
hlt
lods
data16
popf
fwait
xor
cwtl
ret
mov
mov
push
xchg
movzwl
decb
mov
loopne
add
push
mov
mov
cmp
lret
mov
inc
add
mov
or
sbb
pop
jno
es
jecxz
das
imul
stos
es
data16
scas
dec
sbb
cwtl
dec
jp
cwtl
mov
repnz
pop
pop
mov
inc
notl
inc
mov
adc
inc
push
jae
mov
or
aam
sbb
and
mov
sub
and
mov
popa
ss
dec
andl
cmpsl
jecxz
pusha
sbb
cmp
aam
sub
fwait
xchg
int3
data16
repz
rcl
mov
push
mov
and
bound
mov
fwait
test
aad
cwtl
jmp
fnsave
inc
repz
jb
test
fmul
and
sub
lret
adc
fbld
jb
inc
int3
mov
and
sbb
popf
mov
jge
adcl
pop
push
sub
jge
ftst
lret
jmp
movsl
push
insb
pop
inc
les
adc
and
add
and
jns
pushl
stos
push
lret
cmp
mov
jle
mov
xor
je
push
lods
xor
add
or
popf
les
ror
add
lcall
shlb
sbb
or
int3
ja
cmp
gs
icebp
dec
push
jp
int
ret
std
push
js
or
into
test
sar
mov
pop
xchg
adc
popa
cmc
inc
loopne
mov
mov
js
cmc
dec
rolb
in
cmp
xor
pop
cmp
ljmp
orl
popf
inc
rolb
enter
std
sbbb
mov
pop
or
inc
or
and
sub
loope
scas
dec
inc
loopne
js
mov
cmp
lds
dec
lds
xchg
inc
xchg
jbe
and
jo
mov
je
pop
xlat
pop
add
cmp
cmp
sbb
dec
data16
jecxz
cmp
setae
jecxz
imull
inc
inc
clc
enter
fucom
rcr
sub
sti
xchg
xchg
jl
aad
cmpsb
in
outsl
mov
inc
xchg
pop
ja
scas
lret
mov
cmc
mov
mov
in
and
push
xor
xchg
mov
sub
pop
xor
lods
xor
push
fildl
adc
mov
in
cmpsl
ds
adc
adc
in
out
pop
ljmp
push
leave
mov
imul
or
test
arpl
lods
subl
jge
sbb
push
and
lds
mov
lea
sbbb
mov
pop
sbb
cmp
das
mov
mov
test
lcall
push
adc
orl
xchg
inc
mov
and
dec
push
out
mov
xchg
push
out
pop
jmp
cmp
xchg
xchg
enter
ss
testb
pop
imul
scas
jb
data16
mov
cld
jge
es
mov
mov
add
pop
test
push
push
mov
dec
dec
mov
lods
or
sti
or
add
pop
mov
jge
enter
pop
push
adc
stos
lret
mov
dec
or
push
sub
inc
sbbl
das
lret
sbb
mov
pop
xor
in
repnz
jmp
mov
xchg
mov
mov
rorl
movsl
in
or
cli
inc
mov
nop
leave
mov
mov
cmp
sbb
fnstsw
xlat
repz
test
cmp
sbb
cmc
xchg
xchg
push
xor
push
or
ss
inc
enter
xchg
or
xchg
repnz
mov
jno
add
decl
ljmp
mov
popl
movsb
out
sbbl
jae
arpl
lea
dec
aaa
rcr
jo
outsl
add
mov
push
cmp
aad
cmp
mov
push
xchg
add
mov
sub
xlat
jo
in
iret
xchg
js
sti
insl
inc
loopne
xchg
jge
clc
lods
sbbb
inc
pop
fwait
aas
lcall
lods
adc
add
xchg
shlb
dec
aaa
dec
iret
repnz
or
clc
aaa
into
mov
xor
in
sub
pop
jmp
add
pop
xor
and
mov
inc
jl
ret
dec
cmp
xor
sub
scas
or
and
rcrl
aam
scas
aam
and
fs
dec
mov
imul
push
outsb
aam
movsl
sbb
aad
enter
lret
mull
pop
movsb
xor
loope
stos
sub
sub
xchg
cld
nop
rcrb
loop
repnz
adc
movb
mov
or
test
movsb
adcb
and
jae
and
fs
mov
inc
xchg
cmpsb
xchg
mov
add
jno
mov
mov
dec
cmc
cld
xchg
dec
pop
jnp
push
into
in
fldcw
lahf
jmp
mov
dec
leave
mov
lahf
psrlw
and
push
int3
insl
mov
inc
jle
or
and
push
xor
mov
mov
adc
push
shl
lods
push
sbb
testb
push
pusha
out
mov
cmp
push
jne
je
inc
dec
gs
and
popa
sub
xchg
popa
ret
in
cmp
mov
sbb
pavgw
adc
lret
cmp
push
jge
sti
jo
xor
shrl
pop
xchg
push
push
test
rol
je
jecxz
fildl
sbb
adc
into
enter
movsl
leave
pop
mov
ret
repz
mov
lret
outsb
mov
dec
push
addl
shrl
aam
in
lahf
cli
idivl
jle
jno
push
out
or
aam
and
hlt
lock
pop
ja
pop
imulb
dec
mov
inc
mov
pop
and
lahf
fcmovbe
lea
sub
xorl
fnstenv
jne
inc
xchg
out
cwtl
pop
cwtl
mov
mov
lods
jb
sub
aad
mov
inc
adc
add
cmp
bound
mov
cld
stos
popf
hlt
rorl
mov
jp
xor
dec
jbe
pusha
in
mov
and
push
adc
js
stos
sbb
xor
mov
ljmp
push
not
sbb
adc
fbld
push
mov
cmpsl
je
inc
jo
gs
imul
insl
lahf
jb
adc
cmpsl
fwait
inc
jge
jecxz
pop
rcr
ss
push
mov
jecxz
pop
xchg
sbb
aaa
movsb
sbb
push
cmpsb
aam
mov
dec
pop
test
push
push
pop
cmpsl
pop
jnp
mov
mov
je
fldcw
cmpsb
xor
sub
filds
insl
mov
shlb
push
les
lret
gs
adc
jle
jg
js
out
aad
push
jg
xchg
test
sbb
xor
fistl
mov
cltd
jae
stc
mov
test
lock
cmc
stc
adc
mov
mul
negb
pop
and
dec
cmpsl
sbbb
je
imul
jecxz
pop
lea
mov
cwtl
adc
shlb
bnd
mov
or
lret
adc
jb
dec
sti
aam
in
fstl
mov
aad
jp
clc
pop
cmp
or
test
rclb
test
xchg
mov
movsb
cs
out
ja
adc
leave
mov
mov
xchg
cwtl
and
xchg
mov
jg,pn
cmp
js
inc
lahf
scas
xchg
xchg
out
dec
fistl
into
xchg
aam
sbbl
faddp
sbb
xchg
or
aad
sub
insl
aad
push
imul
cmp
jmp
les
sub
fwait
leave
xchg
lahf
sub
dec
mov
mov
xchg
ss
in
push
mov
mov
mov
or
lret
sbb
cmp
inc
inc
push
cmp
gs
sti
jge
mov
push
xlat
mov
in
xchg
imul
imul
jo
aas
push
push
add
lods
xchg
incb
mov
popf
iret
xchg
mov
xor
enter
pop
xor
xchg
xchg
sarl
inc
in
jp
cs
xchg
dec
mov
adc
or
ljmp
push
sbb
pop
mov
cmp
jecxz
daa
sub
inc
aaa
shrb
jg
dec
movsl
pop
dec
sbb
or
ljmp
xor
cld
sub
leave
push
in
jp
in
jo
imul
loope
xchg
sub
out
hlt
mov
in
pop
xchg
lds
cmp
mov
loop
pop
stos
jge
data16
xchg
xor
or
xchg
and
xchg
mov
pop
sarb
sbb
push
andl
mov
pop
dec
aaa
push
xchg
call
hlt
xchg
sbb
sahf
inc
insb
inc
cmp
mov
push
mov
xchg
les
pop
addr16
inc
test
andl
cmpsl
movsb
sub
xor
xor
inc
add
negb
lcall
insl
cmp
mov
in
push
outsb
cld
fwait
or
push
stos
mov
hlt
stc
ja
aaa
pushf
repz
push
or
mov
inc
int3
jnp
mov
xor
jo
xchg
sub
pop
repz
loope
mov
inc
pop
int3
dec
push
int
mov
out
jp
es
in
add
xchg
jns
jae
mov
adc
xchg
cmp
mov
sti
add
cmp
pop
jmp
pop
lret
js
ja
outsb
movsl
pop
punpckldq
enter
dec
std
sub
jmp
insl
cmp
jmp
lcall
sbb
iret
test
inc
test
ss
stos
mov
pop
repnz
and
sbb
mov
xor
pop
cli
or
in
push
dec
in
imul
and
mov
das
mov
and
adc
xchg
jne
xor
adc
pop
aam
loopne
xchg
sbb
sub
push
jae
jne
push
xchg
in
push
stos
dec
pop
movsl
sahf
repz
loop
push
xchg
loop
xor
mov
int3
mulb
jne
inc
add
push
pop
jo
pop
jecxz
out
addb
ljmp
jp
out
in
jp
pop
sbb
movsb
fiaddl
js
pop
push
jp
pop
and
sub
dec
gs
xchg
jns
out
sub
into
add
jbe
clc
mov
into
rorb
mov
sbb
jle
shl
mov
dec
xchg
jo
jno
lret
pop
mov
jmp
jmp
sub
and
jge
dec
add
hlt
inc
cmp
sub
shl
pop
fldenv
jbe
fimuls
pop
jo
pop
and
ret
std
js
js
sti
cltd
stos
dec
cmpsl
sub
and
mov
stos
sbb
cltd
inc
or
jecxz
xchg
daa
testb
mov
sbb
scas
pusha
into
mov
sahf
mov
mov
xor
fdivs
push
push
lods
xchg
bound
lret
cwtl
pushl
inc
mov
dec
fs
sub
inc
das
jnp
push
popf
imul
ss
ja
mov
out
mov
js
aad
lcall
cs
andb
subl
hlt
jl
pop
xlat
push
subb
lds
lods
stos
loope
and
movsl
test
jmp
mov
loop
ja
es
push
repnz
adc
icebp
inc
lock
xchg
mov
or
and
ja
insl
cmp
pop
xchg
sti
outsb
sub
add
cwtl
mov
int3
jge
loopne
stos
and
adc
adc
clc
mov
mov
imul
xchg
pop
pop
in
sar
fldcw
mov
iret
add
mov
daa
xor
int3
in
sbb
mov
sbb
mov
jns
mov
dec
hlt
subl
sub
push
dec
or
pop
es
mov
test
push
loopne
and
push
aas
xchg
ret
add
mov
push
stos
rolb
add
pop
sub
inc
test
cmc
gs
lods
mov
div
add
adc
push
ljmp
xchg
lea
stos
insb
popa
sub
js
js
jne
push
popl
or
lds
mov
repz
les
pop
mov
mov
and
add
stos
sbb
loop
cwtl
add
mov
es
aas
xchg
xchg
push
enter
aam
ret
mov
jo
push
cwtl
inc
xchg
ret
inc
jge
or
wbinvd
cmp
push
vmread
sub
mov
pop
xchg
xor
shl
imul
arpl
inc
sar
cld
stc
add
xchg
push
imul
push
xor
mov
sbb
lock
loopne
pushf
pop
js
push
xor
mov
xchg
mov
popa
fisttpl
sub
dec
ss
pop
or
out
inc
add
loopne
aaa
fxtract
dec
lds
pop
jnp
add
in
in
pop
out
sahf
mov
cs
aas
pop
lock
cmpsl
sti
mov
push
add
je
insb
mov
sbb
pop
sub
insb
fsubrs
mov
inc
xchg
mov
add
cmp
lods
and
dec
aaa
insl
out
dec
icebp
lods
sbb
mov
sti
push
scas
push
lcall
stos
shl
mov
pop
cwtd
lret
imul
add
xor
mov
dec
movsbl
dec
mov
lods
sub
jecxz
out
jns
sub
ret
icebp
or
test
xor
sbb
and
fidivl
mov
dec
inc
cmp
adc
sbb
or
dec
aas
xchg
jmp
stc
inc
jno
inc
mov
pop
xchg
shll
dec
js
jbe
insl
pop
push
jne
mov
pop
adc
add
pusha
repz
nop
sub
sbb
cmp
hlt
cmp
mov
xchg
pop
fwait
sahf
push
push
pop
xor
jg
adc
mov
jne
sarb
push
out
ljmp
repz
fldl
adc
out
cwtl
mov
add
adc
je
add
shrb
movsl
std
push
popa
mov
add
jo
sub
mov
sub
push
add
xchg
ret
popa
push
sub
mov
mov
mov
lea
in
sbb
xchg
cmp
adc
scas
inc
sub
int
fdivrp
dec
stc
cltd
push
xor
cmp
mov
xchg
mov
aaa
loop
add
xchg
push
xor
and
jbe
lock
cs
shll
xor
js
or
sbbb
outsl
inc
jb
mov
jge
inc
and
sbb
outsb
jg
lods
push
lods
aad
xchg
and
iret
into
jecxz
shlb
es
cwtl
rolb
pop
fidivrl
xor
outsl
jbe
popf
shlb
aas
inc
cmp
dec
jl
std
jp
push
ficompl
aaa
pop
mov
ret
inc
test
pop
pop
loop
jl
fisubrs
dec
cmp
lods
add
jge
mov
pop
test
xor
loop
xorl
add
jmp
test
mov
int3
out
scas
xchg
jbe
or
pop
mov
xor
dec
cmp
pusha
clc
inc
fwait
lods
lea
or
mov
shll
or
or
pop
pop
push
gs
lret
pop
stc
push
and
adc
dec
pop
lods
or
push
lret
mov
loopne
inc
mov
je
insl
or
shrb
mov
scas
data16
je
sbb
ficoms
sarl
pushf
icebp
mov
cmp
mov
out
dec
mov
bound
sbb
adc
sahf
sbb
test
movsl
mov
jl
sbb
into
fiadds
shr
shr
inc
mov
int
sub
or
pop
jbe
pushf
dec
pop
or
pop
jl
pop
bnd
insb
sarb
pop
sbb
pop
das
xchg
mov
imul
xor
sbb
testb
ret
es
cltd
xchg
or
mov
mov
add
push
in
mov
lea
addb
xchg
add
fiadds
cltd
cld
inc
notl
int3
sahf
add
pop
movsb
push
sbb
cmp
andl
mov
pop
push
push
out
mov
jecxz
bound
sbb
fstl
repz
rorl
aaa
addr16
lea
jo
adc
sbb
push
xorb
sub
mov
std
sbb
add
jmp
inc
jecxz
lods
mov
and
mov
push
fists
push
xchg
int
shrl
push
fwait
test
and
stc
xlat
xor
push
pop
add
and
sub
movsb
je
lretw
mov
shrl
mov
dec
xor
pop
test
scas
pop
pop
lock
mov
mov
mov
scas
mov
scas
xchg
cmp
mov
popf
lret
xorl
pop
inc
dec
mov
cmp
inc
rolb
lcall
testb
cli
fcmove
fcmovnb
push
pop
mov
sub
outsl
add
sub
dec
dec
fwait
mulb
dec
xchg
loopne
fists
jo
addr16
jmp
push
and
jg
xor
lcall
add
div
ret
xchg
xlat
inc
jl
out
fcomi
adcl
fdiv
mov
push
rcrl
mov
pop
xor
ds
dec
leave
adc
data16
test
inc
jnp
addr16
and
cltd
add
or
pop
xor
aaa
mov
shlb
hlt
stc
jo
mov
pushf
mov
out
and
in
outsb
test
scas
fsts
adc
jbe
cmpsl
andl
push
push
pop
mov
mov
pusha
divl
sbb
dec
sub
cld
mov
xor
jmp
sbbl
negl
clc
stos
in
popf
std
cmp
push
out
pop
stc
icebp
mov
ja
mov
push
bound
jl
mov
enter
add
mov
test
push
sub
aad
sub
sbb
cs
and
dec
xor
dec
sahf
movsb
inc
loop
arpl
xchg
pop
sbb
clc
adc
es
addr16
out
push
mov
push
xchg
push
hlt
cwtl
push
xchg
and
es
lahf
enter
mov
shlb
cmpsl
loope
pop
adc
rol
es
sub
cld
mov
das
mov
cld
mov
and
adcb
test
pushf
imul
jb
loopne
dec
inc
loop
cmp
shll
pop
mov
and
filds
pavgb
or
dec
shlb
inc
cs
or
pop
test
lret
add
pop
popf
scas
jns
out
mov
push
cli
and
cs
and
aas
xchg
add
pushf
mov
insl
test
testb
or
mov
pcmpeqd
and
xchg
test
pop
mov
repnz
push
sub
int
bound
add
add
mov
and
lahf
pop
mov
lods
cmpsb
pop
cmpl
imul
fsubrp
and
dec
gs
shrl
in
push
rcl
rol
add
hlt
arpl
shl
ljmp
testb
clc
cmpsl
testl
mov
xlat
cmp
clc
addr16
adc
push
ret
mov
mov
fdivrs
out
jne
push
dec
lods
xchg
add
push
sahf
jg
xor
sbb
into
push
fs
fmuls
hlt
inc
pop
xchg
mov
inc
lods
xchg
mov
inc
and
test
jne
lcall
in
xor
mov
scas
es
jo
sbb
out
mov
leave
ficoms
sbb
and
dec
pop
sbb
stos
xor
mov
lods
fcomp
roll
jmp
jecxz
inc
mov
or
test
cmp
pop
inc
sub
cs
rorl
lds
sbb
xchg
fmull
lods
jle
lock
stc
xor
push
push
xchg
mov
cmp
sbb
or
lods
jb
fisubrs
sti
adc
test
push
pop
push
out
fwait
add
test
int3
popf
pop
ja
iret
xchg
mov
test
cmp
sub
mov
fcomps
jne
mov
stos
pop
cmpsl
inc
insl
mov
cltd
push
cmpsl
lret
add
cwtl
dec
inc
inc
jg
ja
test
js
roll
lods
into
dec
jmp
xor
push
or
jo
or
imul
sub
pop
std
dec
add
and
jae
data16
cmpsl
icebp
data16
lret
xorb
mov
cmp
sahf
mov
sub
mov
dec
test
fwait
iret
enter
negb
inc
inc
sbb
push
mov
mov
push
xchg
jns
es
test
push
mov
fmul
mov
iret
insl
cltd
fisubrs
fidivs
roll
mov
sahf
cmp
pushf
std
stos
mov
sub
in
gs
or
pop
add
push
mov
dec
mov
mov
mov
jo
mov
cmp
enter
adc
out
cwtl
mov
sub
xchg
mov
inc
mov
inc
pushf
dec
jl
imul
fdivrl
fcompl
loope
movsl
mov
sub
inc
xor
dec
in
push
data16
or
add
in
cmp
xor
and
cmp
mov
loopne
sbb
leave
cwtl
xchg
out
pop
jmp
xchg
xor
shrl
jecxz
xchg
push
mov
jne
aad
es
icebp
dec
or
sub
sub
fcompl
adc
shlb
push
adcb
adc
icebp
mulb
jae
dec
lcall
xlat
pop
xor
fs
mov
stc
jne
aaa
test
mov
test
fs
xor
js
dec
loope
arpl
cmp
loop
jbe
add
push
xchg
outsb
ss
adc
jp
add
jno
add
xorb
daa
cmpsl
mov
xor
push
ja
es
or
mov
inc
or
push
push
xor
int
cli
arpl
mov
scas
and
or
ror
pusha
push
pusha
das
and
insb
stos
mov
and
cmp
sbb
in
rorb
mov
cmpsb
cli
inc
and
inc
inc
arpl
jle
bound
test
sub
test
dec
test
nop
dec
lahf
push
loopne
mov
push
sbbl
sub
dec
xor
repz
mov
xchg
stos
enter
add
mov
add
jnp
out
push
add
std
popf
sub
nop
cmp
inc
test
clc
pop
loop
jbe
inc
xor
iret
mov
ja
inc
cwtl
sub
icebp
pop
inc
fmull
adc
cld
mov
hlt
ret
jp
push
or
mov
out
in
icebp
and
iret
push
test
jle
in
xlat
mov
and
imul
pop
lret
in
xchg
xor
add
rcr
idivb
out
push
lock
imul
pop
jne
or
lret
push
dec
hlt
jecxz
pop
call
movsl
fwait
std
xchg
mov
imul
mov
cmc
cmp
leave
and
push
je
mov
sub
dec
cmp
pushf
in
sbb
mov
cmp
dec
pop
add
insb
out
popfw
adc
stos
mov
fdivs
cmp
scas
sar
ret
adc
or
push
push
addr16
and
mov
jl
jae
and
repz
mov
aas
xor
scas
stos
fcomps
ror
jae
jge
sbb
das
lods
and
out
xchg
adcb
pop
fsubrs
ret
js
lcall
imul
fs
push
imul
sbb
push
int
mov
pop
rorl
call
sbb
fcoml
mov
decb
test
mov
mov
or
leave
and
cmpsl
and
out
mov
lret
in
pop
lock
jbe
cltd
mov
pop
pop
movsb
sub
cmp
cs
mov
push
xchg
sbbb
xchg
adc
rep
ret
cmp
sbb
inc
sbb
push
sbb
in
inc
insb
inc
fcmovb
or
fsubrl
rcrb
clc
push
out
and
xlat
hlt
lret
adc
rorb
jb
stc
sub
es
mov
fs
push
push
mov
mov
movsb
adc
fisubl
loop
movsb
cmp
mov
test
push
and
mov
and
jle
sbb
mov
rcll
out
push
lods
lock
outsl
xlat
mov
hlt
mov
repnz
loop
das
adc
leave
inc
subb
in
loope
mov
notb
arpl
jbe
dec
cs
pop
sbb
stos
jecxz
push
jae
icebp
xchg
rcrb
xchg
mov
dec
cs
push
sbb
movsb
xchg
data16
lock
movsb
rcrb
int3
mov
or
lds
shll
xchg
lcall
inc
test
fstps
cmp
inc
ror
sbb
sub
je
cmp
mov
stos
add
jge
cmp
and
push
pushf
inc
xchg
mov
sbb
sbb
jae
adc
and
mov
jbe
push
mov
ljmp
movsl
xchg
pop
jge
rcrl
in
sub
mov
inc
lcall
pop
mov
shlb
jmp
mov
xchg
lcall
mov
jo
sbb
sti
add
scas
push
stos
lahf
scas
push
movl
arpl
nop
pop
mov
xchg
fstpl
ss
add
xchg
dec
rol
loope
push
jg
outsb
xchg
pop
xor
push
fcmovu
or
adcb
mov
cmpb
shlb
pushf
dec
xchg
das
dec
int
xchg
shlb
cmp
je
pop
dec
push
aam
ljmp
add
jmp
push
mov
cmpsb
dec
sub
sub
inc
cmp
popa
dec
dec
lret
sbb
push
cmp
pop
lret
inc
shrb
jge
dec
punpckldq
mov
jnp
pop
jmp
ss
push
and
fiadds
ud1
jbe
or
xchg
gs
call
or
pop
add
in
jbe
or
int3
push
outsb
fwait
xor
push
daa
cltd
outsl
sub
xchg
mov
or
sub
jbe
in
pop
pop
es
pusha
jg
cwtl
inc
jle
sub
xchg
in
int
or
cmp
cs
ja
jge
adc
inc
iret
js
mov
in
mov
lds
pop
js
test
push
jns
lret
jle
dec
or
in
push
add
push
shlb
das
addr16
xor
sahf
mov
test
in
je
xlat
test
popa
out
nop
loope
test
into
aam
std
popf
aas
movsb
sbb
aam
arpl
sbb
xor
shl
or
push
scas
dec
je
and
mov
sub
jb
iret
mov
outsl
dec
add
mov
xchg
and
scas
movsl
dec
push
cmp
je
lret
sbb
cmp
pop
sti
lea
insl
iret
cmp
add
pop
xchg
adc
inc
push
enter
cmpsb
nop
sbb
fs
insl
stos
testl
push
push
push
fxch
aad
lcall
in
outsl
decb
stos
mov
xchg
ret
icebp
nop
cmc
cmpb
mov
cli
out
lods
mov
push
lret
imul
dec
or
cmpb
dec
incl
loope
fucomi
cmp
cmpsl
and
inc
adc
cmpsb
inc
stc
ss
cltd
inc
and
adc
out
bound
jp
test
in
cmp
adc
js
inc
loope
xchg
jmp
add
repz
data16
or
cltd
xor
inc
add
cmp
not
lock
or
dec
cld
popa
mov
xor
pop
cli
push
lea
rol
and
adc
in
sarb
dec
fsubs
daa
mov
pusha
pmuludq
call
lock
aam
cmpsl
test
xchg
fidivs
imull
xchg
in
lock
jnp
out
mov
adcb
jmp
dec
adcb
fstl
test
jg
lock
adc
insl
imul
jo
fwait
popf
movsb
rcrl
pop
int3
or
pop
int
mov
lods
subb
rcrb
aad
dec
sub
inc
pop
xchg
dec
cld
mov
out
fidivl
dec
mov
mov
sbb
jno
cs
icebp
sub
pop
pushf
mov
fcompl
add
shl
ret
adc
andb
mov
xchg
daa
scas
aam
lods
in
int3
nop
jmp
lret
dec
mov
cwtl
push
push
xchg
sbb
pop
outsb
xor
aas
fdivp
adc
scas
inc
dec
cmp
push
ss
cmp
jnp
fwait
cltd
and
lret
femms
lcall
out
jl
mov
enter
faddp
lods
push
pop
sbb
aas
in
test
fwait
or
xlat
shlb
loop
cmpsb
push
outsl
mov
mov
push
xorl
push
mov
dec
mov
mov
mov
push
or
lods
pop
sbb
cli
xchg
stc
jp
mov
pop
jg
in
clc
jp
mov
movsl
cs
adc
pop
xor
xchg
aam
adc
pop
fwait
jo
dec
aad
clc
mov
push
sub
add
xchg
aad
enter
push
out
fimuls
not
shl
xor
out
call
ljmp
insl
scas
mov
mov
fstps
ficomps
dec
stc
popa
xchg
hlt
leave
jl
sub
or
ret
cwtl
iret
and
hlt
pop
in
ret
in
lcall
jmp
lret
mov
mov
fisttpll
notl
test
xchg
dec
mov
fs
insb
pop
jbe
push
cli
imul
sbb
push
dec
pop
mov
mov
xchg
in
cli
into
adc
out
clc
and
and
dec
insl
cmp
es
sbb
bound
aaa
jl
adc
sbb
push
shl
xor
orb
mov
jmp
xor
pop
jbe
call
rcrl
mov
and
fstp
lret
sbb
mulb
mov
push
mov
dec
mov
dec
xlat
rcrl
or
pop
int3
mov
and
push
cmp
in
fs
push
imulb
push
and
jo
sub
cwtl
mov
subl
mov
in
fstpl
jle
jmp
add
sub
and
outsl
cs
pop
repnz
push
sarl
mov
push
pop
ss
dec
shll
adc
pop
jbe
xchg
ffree
and
jbe
ret
jle
cmp
fbld
repz
gs
add
mov
sbb
pop
dec
mov
inc
mov
push
into
bound
pop
pop
out
adc
mov
loopne
shll
sub
sub
shll
push
jge
lea
fisubl
sub
fnstenv
pop
mov
lock
cmp
cmp
or
test
or
and
test
test
add
clc
repz
out
jnp
shlb
mov
das
daa
fstps
mov
pop
std
push
mov
cmc
movsl
notb
inc
sti
pop
jecxz
jnp
out
ret
mov
mov
fcoml
sub
orb
dec
sub
jge
cwtl
sbb
neg
push
roll
clc
mov
mov
push
pop
stos
push
in
stos
cli
adc
mov
int
je
mov
push
lds
movsl
adc
jecxz
cmp
nopl
jge
movsl
movb
mov
lock
cs
xchg
stc
fldt
fwait
jg
jg
out
dec
aaa
cmpsb
andl
mov
rcrb
arpl
mov
hlt
sub
test
adc
cwtl
jae
cmpsl
pop
lods
and
scas
pop
mov
add
or
push
nop
lret
je
jp
pushf
push
sub
imul
test
pushf
dec
out
je
rcl
mov
mov
stos
or
cmp
imul
mov
loope
out
dec
xchg
test
xor
push
xchg
push
sti
jae
jb
mov
mov
fildl
adc
loop
leave
jb
outsb
aaa
cmc
fs
inc
add
enter
jbe
fnstenv
sbb
mov
pop
shlb
push
xor
test
push
jnp
and
call
fsubl
arpl
jcxz
movsl
push
xchg
add
out
xor
xchg
jne
insl
cmp
push
inc
jl
test
aaa
imul
jl
sarb
xchg
cmp
dec
stc
pushf
and
mov
dec
add
mov
adc
jmp
outsl
or
add
pop
adc
sbb
mov
out
stos
xchg
out
and
pop
shlb
popf
mov
ss
rorb
sub
xor
mov
ja
std
and
cmp
adc
shlb
je
cltd
dec
jecxz
ja
mov
loop
mov
inc
scas
mov
das
and
js
mov
std
mov
mov
imulb
scas
out
inc
pop
or
nop
mov
cmp
imul
in
stos
sub
inc
inc
pop
lret
dec
subb
leave
in
fstpt
in
and
fstps
out
inc
pusha
repz
arpl
imul
push
imul
loop
stos
push
mov
dec
or
push
std
mov
mov
leave
repnz
lahf
mov
insl
out
and
xchg
push
push
ja
and
push
ljmp
mov
je
mov
rcrb
adc
sbbb
movsb
or
movsl
mov
xor
pop
mov
and
sarb
mov
out
dec
and
shl
add
stos
mov
or
xor
cmpsl
cs
pop
fcompl
mov
sbb
push
sbb
dec
cmpsl
pop
mov
subl
sti
iret
mov
fdivp
mov
sbbb
and
xchg
mov
push
push
push
addr16
sub
cmp
shl
sub
cmp
cwtl
mov
cmp
xchg
vunpcklps
lret
lods
mov
xor
clc
ret
sub
xorb
mov
dec
les
inc
jmp
xchg
sub
lods
out
les
cmpsl
inc
rolb
inc
xchg
jg
mov
rclb
test
mov
repnz
test
arpl
mov
dec
mov
push
or
jbe
or
sub
shll
mov
cmc
nop
stos
int3
call
sbb
push
mov
fstpl
pop
pushf
xor
add
push
sahf
mov
add
cld
sbb
movsl
lea
shrb
push
addr16
fdivl
and
inc
jp
and
push
popa
sbb
xor
cmp
pusha
mov
sbb
cmp
in
insl
jl
fidivrs
sbbl
jbe
mov
pop
adc
in
and
test
rolb
aas
pushf
test
sub
cwtl
xchg
or
jmp
push
mov
test
in
sub
xor
jae
push
popf
push
int
push
stc
xor
outsb
inc
popf
fisttpll
xchg
push
out
push
in
cmp
scas
mov
enter
lret
ror
dec
or
mov
rcrb
loope
negb
jae
mov
push
into
mov
pusha
dec
nop
xchg
movsl
and
dec
mov
mov
xchg
add
ror
std
jl
dec
pop
pop
jb
imul
jno
inc
add
xlat
aad
pop
cmp
jno
and
jo
in
dec
adc
js,pt
data16
mov
data16
inc
push
pop
mov
add
xor
jno
flds
or
mov
fimuls
mov
repz
or
movsl
xor
lds
out
add
insl
dec
int3
testb
dec
dec
inc
int3
les
ret
inc
inc
inc
test
pop
sbb
dec
add
test
or
pop
push
inc
jb
adc
cli
adc
dec
orl
cmp
js
dec
icebp
popf
fdiv
fimull
cmpsl
cmp
out
lods
sub
pop
int
fcom
adc
sbb
sbb
mov
mov
jnp
dec
test
cmp
cld
push
ljmp
inc
lds
cwtl
sti
fildl
sub
orl
shl
in
sbb
inc
xor
jne
adc
lahf
in
pop
ret
sbb
xchg
dec
mov
aas
test
out
sbb
adc
stos
ret
xor
mov
push
inc
packsswb
cmp
adcl
shl
sub
les
lret
mov
and
jbe
mov
mov
mov
pop
xchg
pusha
push
add
jle
out
test
jne
ficomps
mov
mov
fldt
sti
cli
sarl
ss
jmp
imul
cmp
adcb
fwait
iret
dec
mov
cli
mov
test
sahf
out
ss
jno
add
sti
mov
pop
roll
adc
or
jo
jp
mov
shr
movsl
es
pop
xchg
xchg
clc
lock
cmpsl
aad
inc
mov
out
xchg
test
hlt
test
add
sbb
cmp
sbb
and
out
sub
mov
sub
jae
sub
mov
pop
leave
dec
cmp
adc
xchg
aaa
aad
fsubrl
or
xlat
sbb
les
sub
mull
adcb
cmp
mov
std
xchg
addr16
test
out
xchg
test
mov
dec
testb
jae
jae
push
push
sbb
out
out
mov
push
push
mov
sbb
outsl
xchg
out
mov
lret
sahf
hlt
repnz
call
fimull
mov
mov
cmp
xor
cld
repz
jl
mov
sbb
imul
dec
push
or
push
fwait
sub
cmp
inc
fisubs
test
add
dec
sbb
inc
int
and
repnz
pop
mov
cltd
jge
pop
iret
xor
mov
sbb
ret
addr16
sbb
test
xchg
lret
filds
mov
insb
cltd
and
jl
push
nop
std
or
adc
xor
or
ljmp
cld
stos
mov
movsb
inc
sbb
data16
xchg
dec
fwait
cmp
roll
add
ds
cmp
jmp
nop
aas
stos
gs
leave
imul
xor
dec
int3
dec
inc
fildl
xchg
sub
mov
dec
push
repz
loope
sub
lea
in
test
push
pop
mov
hlt
adc
dec
lock
inc
jae
xchg
imul
pop
pop
xchg
jno
rorl
xor
mov
xor
pop
cmpb
daa
lock
arpl
aad
nop
filds
jno
cmp
mov
arpl
ja
sub
mov
sarb
inc
cs
aaa
mov
in
adc
mov
pop
jbe
scas
push
xchg
push
aam
data16
loop
dec
out
and
cs
cmp
xor
xor
jbe
or
lahf
jmp
dec
mov
pop
sbb
pop
loopne
fildl
jmp
lahf
xchg
fcom
jmp
pop
dec
jbe
add
and
mov
ret
cmc
jp
icebp
lock
inc
leave
mov
pushf
or
cmp
in
or
pop
in
aad
adc
test
stos
adc
mov
adc
pusha
inc
pop
xor
adc
inc
jg
mov
mov
insb
inc
into
push
jae
int3
cmc
xor
mulb
inc
mov
sbb
sarb
pop
lahf
pop
stos
inc
cmp
imul
mov
or
mov
enter
inc
sub
out
outsb
rol
arpl
mov
ffreep
jmp
gs
push
push
mov
jo
in
adc
fcompp
jge
cmpsb
ret
inc
and
push
adc
jg
pop
pop
sub
mov
pop
mov
rclb
xchg
push
pop
or
push
pop
sub
loop
cmpsl
aas
test
mov
push
enter
hlt
jg
inc
add
push
das
sub
loope
push
fstpt
test
pop
lcall
hlt
push
xchg
or
xor
jno
lret
aam
dec
or
int
mov
insb
push
xchg
adc
jne
imul
and
xchg
jle
movsb
mov
adc
pop
mov
insb
adc
imul
mov
fcomps
mov
insl
add
inc
xor
pop
add
arpl
mov
pushf
in
lods
dec
sti
xor
arpl
fstl
iret
mov
pop
stos
jp
xor
sbbb
mov
icebp
dec
add
outsb
xchg
push
test
mov
push
pop
jg
sahf
imul
cmp
lcall
and
popf
jle
pop
out
fucom
pop
or
add
aas
mov
repz
jnp
insl
movsl
mov
adc
inc
cmp
or
dec
fsubs
in
movsl
adc
fistl
mov
cltd
lret
jns
jno
inc
mov
xchg
lods
es
mov
jo
loop
stos
cltd
or
mov
faddp
and
in
pushw
cmp
in
xchg
std
push
adc
jb
mov
sub
jae
mov
add
mov
jl
std
nop
push
push
les
push
pusha
lahf
dec
xchg
mov
lret
jp
addr16
arpl
push
fdivrs
fdivp
mov
mov
jge
ja
lcall
add
jo
test
cmp
out
sub
sti
and
mov
xlat
xchg
mov
ja
cld
rorl
push
pop
stc
rcrb
push
xchg
out
test
push
adc
jp
jb
jecxz
mov
mov
lcall
iret
int3
fwait
xlat
out
int
jnp
sbb
push
stos
jmp
pusha
and
xchg
aad
cltd
adc
and
mov
or
ljmp
jo
mov
jle
sbb
mov
loop
inc
ja
fwait
sbb
ljmp
add
lcall
inc
sbb
mov
fwait
push
xor
pop
inc
jl
addl
and
cmc
mov
ffreep
insl
mov
cmp
add
or
fcmovnbe
ljmp
inc
jp
das
push
repnz
int
inc
aas
std
sbb
xchg
imul
adcl
and
das
jb
and
push
cmc
dec
fsubrl
into
push
repz
inc
cltd
mov
fisubrs
repz
xor
push
and
adc
jmp
ror
lock
xchg
sbb
in
lock
xchg
fcmove
jmp
jl
xchg
mov
cwtl
xchg
cmpsl
and
or
outsb
int3
js
shlb
xchg
fnstenv
scas
test
pop
popl
pop
jnp
shll
pushf
sbb
pop
lea
and
pushf
ljmp
es
push
mov
cmp
push
mov
divps
fwait
dec
xchg
jnp
outsb
out
pushf
inc
leave
sub
movsl
add
aad
in
iret
lods
sar
or
jge
fnstcw
inc
loope
int3
scas
flds
ljmp
sahf
mov
pop
imul
icebp
cmpl
mov
int
jno
add
push
in
into
inc
adc
mov
jne
inc
je
inc
mov
and
out
daa
inc
sbb
mov
stos
push
lea
xor
mov
adcb
fs
and
push
sbb
push
insl
aaa
int3
pop
mov
sub
sub
add
xchg
mov
lcall
sbb
subb
rol
jmp
jne
popl
sub
ss
cld
ss
pop
mov
cmp
sub
aaa
mov
insb
hlt
mov
adc
mov
sub
add
lret
fsubrl
fs
xchg
into
push
out
sub
movsl
repnz
push
add
mov
or
sbb
clc
push
adc
addr16
cld
inc
sub
les
stos
int
loope
pop
and
pop
sbb
ds
fsts
popfw
orl
test
push
xchg
scas
movsl
dec
sub
shrl
mov
outsb
pop
xor
test
pop
pop
ret
push
push
cmp
adc
adc
adc
mov
or
jb
daa
pop
das
roll
aaa
add
dec
adc
pop
cmc
loopne
push
and
jnp
push
or
xor
test
test
dec
ret
popf
push
enter
sub
sbb
notl
adc
jbe
sbb
pop
mov
aam
inc
cmp
stos
xchg
aam
div
or
in
xor
and
cmp
adc
cld
mov
pop
fwait
xor
and
push
lea
xchg
inc
sbb
insb
gs
jle
insb
cmpsb
punpcklwd
cltd
aaa
or
mov
test
inc
daa
je
int3
popa
push
cmp
mov
scas
jmp
inc
jnp
sbb
aam
fstpt
sbb
lods
dec
jns
push
mov
lds
mov
add
fsubrs
inc
lahf
not
mov
xchg
or
insb
push
lahf
add
lahf
xor
xor
cmp
jle
hlt
mov
inc
mov
or
daa
jl
test
push
mov
sbb
fcmovu
mov
jno
push
lods
mov
mov
sbb
inc
mov
xor
movsb
sti
sbb
dec
or
or
mov
push
mov
inc
outsb
test
and
cltd
out
inc
or
stos
test
stos
int
xlat
push
push
insl
fs
sbb
inc
mov
push
adc
cmp
stos
or
in
cmpsl
dec
jg
jb
imul
inc
mov
push
mov
mov
les
push
add
inc
test
addr16
and
jo
adc
loopne
inc
mov
scas
rcrl
push
xlat
add
negl
roll
dec
or
cwtl
pop
mov
mov
test
adc
cltd
pop
xchg
push
cmp
mov
daa
push
dec
test
popa
addr16
fidivs
jmp
dec
ljmp
arpl
int3
in
push
push
lock
movsb
sub
jge
adc
pop
adc
sub
mov
cmpsl
xor
mov
xchg
aad
aad
sub
negl
mov
mov
clc
les
dec
les
adc
loopne
out
jge
push
dec
and
and
mov
in
dec
jno
dec
popf
test
jns
add
lcall
movsl
cltd
lock
dec
jl
js
sbb
jp
lods
pop
sbb
out
call
ficoml
lea
inc
lods
shlb
cltd
mov
shll
shr
js
inc
sub
out
sub
push
inc
stos
insl
adc
jecxz
push
scas
pushf
or
imul
inc
into
mov
jne
es
cmc
enter
icebp
roll
and
sub
mov
cmp
test
fldl
xor
scas
ja
in
lahf
pushf
pop
mov
out
outsl
in
push
jg
bound
jmp
add
shrl
jl
sub
stc
mov
mov
and
jb
ret
jmp
inc
aas
add
mov
mov
add
xor
rcrb
dec
lahf
insl
mov
xor
xorl
push
push
aas
andl
mov
xor
subb
jmp
lea
dec
mov
fwait
rolb
loop
sbb
or
xor
xorb
dec
sub
out
pop
xor
fs
movsl
aas
lods
fnstenv
movsb
cmp
incb
shr
hlt
ficomps
in
mov
pop
push
sbbb
xchg
js
pop
dec
pop
str
push
dec
inc
cltd
das
fs
cld
fnstenv
in
pop
fidivs
add
and
mov
aam
sbb
cs
xlat
mov
dec
test
xchg
jno
insb
xchg
xor
jo
jns
out
xor
test
aas
icebp
dec
cmpsl
xor
jl
sub
cmc
and
add
xchg
outsb
outsb
jge
jbe
sar
pop
fnop
test
sub
jb
idiv
sub
sbb
rcrb
test
push
adc
dec
xor
mov
sbb
pop
lock
ds
fwait
sub
rorl
lcall
nop
mov
jecxz
push
mov
movsb
inc
aad
xor
ret
int3
adc
add
push
mov
mov
cmp
mov
push
add
shl
jnp
pushf
add
test
push
addl
popa
repz
mov
pop
push
adc
dec
into
push
inc
lret
jnp
mov
into
mov
dec
dec
lods
jl
int
push
iret
imul
test
dec
in
in
and
sub
mov
mov
add
je
add
push
ljmp
sarb
mov
test
mov
loopne
rcll
andl
push
fisttpll
cld
push
cmpsl
mov
cld
push
cli
add
pop
fisubl
into
pop
movsb
and
push
adc
cmp
add
lods
out
fdivs
sub
rorb
pop
out
push
adc
mov
jne
pop
jmp
mov
addb
pop
mov
or
dec
lock
sub
hlt
jle
fwait
inc
jp
mov
mov
out
inc
xchg
inc
push
pop
and
sub
pop
sub
arpl
xchg
bound
loopne
shlb
jg
jg
push
xor
ljmp
repnz
push
jo
subb
clc
ret
ljmp
movsl
inc
jo
test
mov
inc
lret
repnz
push
xor
push
int3
lcallw
push
push
cmp
mov
sbbb
inc
pop
push
adc
test
add
or
fldcw
cmpsb
sub
inc
add
je
cmpsl
xor
pop
cmp
jno
xchg
call
mov
imul
adcl
adc
add
sbb
xchg
les
or
push
loopne
mov
push
or
aas
std
xchg
add
insb
adc
lret
adc
insl
bound
mov
popf
dec
and
cld
fcoml
lcall
fimull
arpl
push
sub
iret
sti
enter
sub
sarl
call
in
and
outsl
stc
push
pop
cmpb
ret
insl
sub
mov
add
clc
mov
lods
or
and
adc
das
cmpsl
inc
and
out
enter
test
data16
jmp
adc
pushf
in
add
sub
pop
lock
inc
jp
scas
mov
push
mov
push
xchg
cmp
jnp
jge
fucomp
mov
xchg
test
das
sbb
in
shll
dec
mov
fdivp
and
push
push
jmp
adc
fucomp
push
mov
inc
or
lahf
insl
sbb
out
push
shll
xchg
xchg
mov
add
int3
add
sub
mov
cld
stc
add
pop
mov
pop
dec
jbe
mov
dec
inc
mov
cwtl
insl
in
cmp
mov
aas
inc
cmc
lahf
mov
push
push
outsb
mov
es
das
fwait
adc
sbb
adc
fisubs
imul
hlt
fsubl
es
hlt
ret
gs
cli
in
push
mov
je
fildll
imul
icebp
or
popa
mov
xchg
lods
push
or
adc
and
mov
mov
or
shrl
sbbb
sbb
sahf
cmpsb
dec
mov
aas
seto
jle
fdivr
daa
or
fadds
adc
or
movsb
stc
dec
ds
inc
out
rol
pop
dec
mov
and
notl
fldt
push
dec
fwait
shll
adcl
adc
cmp
mov
test
xchg
pusha
xchg
mov
adc
jns
mov
sub
cmp
and
test
push
imul
das
xlat
mov
or
rorl
inc
cmp
mov
mov
lcall
push
xor
lcall
jne
cmc
sti
mov
sarl
adc
cmpsl
xchg
sbb
fmull
scas
test
add
cmp
adc
cmp
xor
repnz
dec
lods
mov
outsb
enter
or
mov
fwait
imul
xchg
lret
test
fs
test
jne
lods
clc
xchg
mov
lea
test
sbb
add
mov
sub
aaa
scas
and
leave
mov
aad
lcall
gs
cld
iret
test
lret
icebp
in
unpcklps
fsubs
ret
adc
fisubl
filds
outsb
or
and
popa
fwait
xchg
cmp
cmp
or
mov
dec
and
in
push
ficoms
sub
xor
mov
and
adc
int3
mov
xchg
xor
sub
jge
mov
int3
nop
lret
push
and
lahf
idivl
dec
scas
push
sti
sbb
mov
stc
test
mov
ret
pop
sub
insb
repnz
push
imul
or
stos
rol
adc
inc
pop
cli
int3
add
pop
or
pop
mov
mov
mov
mov
xlat
daa
inc
push
mov
aaa
movsl
aas
sub
std
xchg
adc
pop
test
std
testl
push
lahf
repz
imul
ret
xor
inc
lret
xor
push
gs
or
jg
enter
movsb
mov
fisubrs
repz
jnp
push
ja
mov
mov
fbld
mov
add
jmp
sarb
fnstenv
add
push
adc
repnz
in
push
addr16
jbe
imul
cmc
add
aad
mov
mov
repz
push
testb
inc
mov
mov
lret
sub
push
dec
sub
lds
fcomi
mov
fwait
add
or
and
fbstp
outsl
xor
xlat
mov
cmp
mov
jle
enter
cmpsl
inc
xchg
shll
popf
inc
int3
lret
fdivl
mov
test
xor
mov
pop
es
add
mov
shlb
inc
cmp
inc
icebp
add
ds
pop
cli
sbb
xchg
cld
lds
push
jnp
movsb
dec
int
insl
stos
sarb
lcall
mov
cltd
and
lret
lcall
popa
in
dec
or
aas
cwtl
mov
bound
jb
push
xchg
insb
test
adc
jp
cmp
mov
xor
inc
cmc
pop
pop
pop
push
ljmp
scas
cmp
and
aam
shl
fdivs
sub
rcl
fwait
lret
sar
mov
xor
call
out
xchg
dec
fisubs
aas
add
fxch
jno
mov
sub
xchg
fdivl
pop
or
mov
rolb
and
lods
frstor
pushf
mov
cmp
data16
jae
ljmp
sbb
and
into
jmp
adc
cmpsb
mov
fstp
sbb
test
cmp
pushf
and
cmc
jmp
sbb
and
add
les
aad
pop
loope
jge
enter
aas
js
div
or
push
adc
mov
movsl
or
insl
sub
jl
int3
addr16
fmull
push
mov
insl
cmp
lahf
cmp
in
call
sarb
jecxz
lock
mov
mov
cmp
notb
sarl
adc
push
jbe
stos
cmp
jp
mov
adc
and
imul
fisttpl
or
in
push
inc
fisubl
xchg
mov
pop
mov
cltd
dec
and
cmc
addr16
add
pop
outsl
jmp
cmp
jecxz
rcrl
push
out
test
push
loopne
icebp
mov
jmp
lds
adc
or
sbb
xor
adc
and
lahf
cmp
je
rcll
lock
mov
pop
sarb
mov
mov
call
push
xchg
incl
stos
adc
push
xchg
cli
mov
jne
scas
dec
sti
aas
loope
xor
ja
push
sub
pop
mov
aas
arpl
and
loopne
jmp
shlb
std
inc
pop
jae
cs
out
fdivrs
lock
test
mov
adc
adc
jecxz
out
ja
out
adc
fwait
pop
push
test
cmc
js
xor
push
and
xchg
mov
xor
iret
xchg
add
scas
jg
ret
jne
jecxz
and
aaa
mov
mov
fmull
and
lahf
sub
dec
xlat
jle
or
outsl
gs
pop
sbb
arpl
mov
xchg
int3
je
rorl
xchg
js
in
fistps
mov
movsb
in
jb
clc
cmc
jo
stos
lods
push
shll
cmp
or
pop
add
std
test
add
mov
push
lahf
cmp
sub
insb
cltd
les
mov
andb
or
sub
mov
jmp
out
pusha
inc
lcall
ret
pop
outsl
nop
std
mov
fndisi(8087
add
add
adc
fimuls
fnsave
mov
nop
dec
lcall
out
test
loopne
mov
cmpl
icebp
cwtl
jo
pop
add
sub
fisttpl
add
sbb
push
je
pop
mov
mov
sbb
outsb
inc
pop
inc
ret
sti
push
shrl
fldcw
mov
adc
push
and
cmp
fisttpll
push
add
in
negb
ret
jge
scas
ret
fcmovu
imul
or
clc
mov
enter
sbb
push
mov
fcompl
push
xchg
es
arpl
mov
sti
insl
fs
jmp
jp
jns
cmpsl
and
pop
xchg
jne
sbb
ret
mov
lcall
scas
sub
es
pop
sbb
jb
hlt
mov
jne
or
adc
mov
jl
inc
dec
aad
sbb
imul
subl
and
and
in
mov
aaa
in
cmp
jo
mov
cmpsl
leave
inc
cwtl
imul
xchg
jp
in
mov
jge
dec
test
test
adc
and
hlt
mov
cwtl
mov
sub
scas
lods
sub
dec
insl
arpl
sti
cwtl
rcrl
stos
mov
xor
cmp
scas
and
fwait
pop
xchg
xchg
mov
stc
enter
lods
in
jl
fsubrs
mov
xlat
aam
test
call
pop
jmp
mov
inc
sarl
push
dec
push
mov
fisubs
pop
jmp
inc
out
jl
imul
jo
dec
out
clc
cmp
cltd
mov
movl
ja
or
sbb
nop
or
arpl
rcll
push
mov
pop
adc
sbb
inc
and
add
xchg
insl
pop
mov
repnz
cmc
mov
adc
inc
bound
orl
sahf
call
sub
shlb
mov
es
or
mov
xchg
fwait
add
stc
sbb
cmc
jmp
mov
fwait
mov
add
and
jbe
dec
lods
xor
and
insb
and
jns
daa
adc
lds
and
cmp
cs
mov
ss
dec
cmp
imul
push
icebp
mov
mov
cmp
inc
and
and
int3
add
mov
jne
adc
popa
iret
mov
pop
fisubrl
mov
adc
sub
sti
lret
dec
stos
cmp
sub
adc
pop
addb
jmp
pusha
imul
aam
dec
bound
sub
cmpsb
lock
inc
inc
ss
inc
dec
int3
ljmp
xor
out
movsl
push
out
sub
popa
outsl
rcr
lods
divl
push
les
lahf
nop
rorl
call
je
arpl
inc
sub
push
mov
repz
xchg
ficoml
rcr
pusha
dec
push
je
in
sbb
inc
test
stc
fldt
jl
xchg
dec
stos
sub
mov
daa
rcr
mov
sbb
stos
adc
lret
ss
sub
into
sub
and
loope
mov
ret
cmp
xchg
add
jae
imul
inc
in
fs
or
mov
ret
mov
ljmp
enter
xchg
pop
jmp
xchg
fidivrl
daa
push
lcall
adc
sbb
sub
jle
pop
cmp
fwait
pop
xchg
dec
jne
mov
cmp
mov
lods
call
call
xchg
and
push
jb
push
testb
subb
push
ljmp
inc
icebp
pop
mov
aas
lds
xor
cmp
scas
aam
popa
pusha
pop
gs
je
dec
push
lret
pop
imul
adc
inc
sbb
sub
sbb
fs
push
ret
test
mov
popf
fistpll
fnstcw
js
xchg
outsb
push
mov
xor
lret
push
dec
iret
fstl
stc
adc
push
lods
xchg
out
ficoms
cmp
jo
add
repnz
mov
cli
push
sub
lret
or
sub
push
lods
pop
cmpsb
push
sbb
jge
dec
js
shrl
repnz
fwait
cmpsb
dec
pop
and
inc
stos
mov
fdivrl
xchg
jns
out
adc
pop
in
adc
inc
inc
add
sub
mov
push
cmpsb
xchg
ret
inc
scas
mov
xchg
addr16
sub
inc
sub
jl
test
fcomps
pop
ljmp
lret
sbb
sti
std
mov
out
popa
and
ljmp
xorb
std
test
adc
mov
add
sub
jo
packsswb
iret
xor
push
rcll
push
xchg
adc
fdivl
ja
add
lret
add
push
xor
cld
push
push
xchg
daa
sbb
jno
into
mov
movsl
int3
sub
inc
data16
fdivrl
mov
scas
fcomps
leave
fnstsw
dec
es
dec
sub
int3
shlb
scas
repz
xor
sarl
daa
sbbb
mov
cltd
cmp
test
push
std
and
inc
inc
cs
cmc
daa
xchg
gs
subl
xorb
movsb
out
jb
add
int
pop
dec
movsb
dec
cwtl
int3
faddp
out
shll
dec
js
stos
aam
sbb
xchg
mov
cltd
push
repz
push
out
jo
cmpsb
dec
nop
mov
xchg
ret
inc
mov
inc
es
lods
hlt
rorb
xor
xor
or
xchg
mov
js
xor
jo
push
fstpl
sub
push
faddl
es
mov
test
lea
pop
xchg
mov
mov
dec
sti
incb
lcall
lret
inc
popa
outsl
push
push
outsl
pushf
mov
and
lcall
and
leave
cmpsb
and
icebp
mov
or
sub
pop
mov
push
test
xor
add
cwtl
das
cmp
divl
mov
pusha
cmp
mov
lods
ret
dec
sub
and
jmp
and
ret
lods
test
jb
hlt
repz
stos
adc
and
idivb
out
ds
pusha
pop
cmp
xchg
mov
fildll
lods
xor
jge
sub
outsl
jl
push
jg
aam
lahf
and
out
push
lret
push
rorl
negb
lds
test
xchg
add
mov
and
call
aad
inc
sbb
adc
clc
xchg
mov
dec
pop
inc
or
lds
cs
lcall
rcll
pop
jb
jbe
xlat
lcall
xor
sub
int3
ljmp
cmpsb
jno
jb
iret
jecxz
bound
mov
in
inc
fisubs
shl
mov
push
mov
mov
test
or
pop
popf
push
test
pop
and
aam
stc
mov
sub
lock
les
es
dec
repnz
imul
add
hlt
pop
inc
dec
xchg
fs
rcrb
push
mov
mov
mov
push
test
cmp
in
sub
fcoms
ret
stos
insb
xchg
lods
xchg
cwtl
ret
xchg
fcomp
ja
icebp
pop
inc
sbb
dec
rcrb
testb
pop
gs
into
add
inc
das
fimull
mov
in
lock
xchg
pop
pop
mov
nop
pop
icebp
xchg
mov
imulb
pop
dec
cmc
mov
add
mov
rcl
out
cmp
lods
sbb
cmp
cmp
mov
xchg
mov
mov
xor
push
mov
gs
insb
addr16
pop
rcrb
ds
mov
sub
xor
in
dec
stos
mov
mov
int3
mov
and
push
add
clc
mov
sbb
stos
sahf
adc
cmp
mov
inc
xor
outsb
and
pop
mov
mov
pop
jge
lahf
push
mov
xchg
lds
hlt
add
sti
xchg
daa
ds
in
aaa
dec
xor
pop
xchg
cld
adcl
pushf
lcall
rorb
pop
or
mov
adc
dec
or
sub
cmp
push
sahf
in
xchg
outsb
icebp
sbb
push
aad
jp
repnz
sbb
fidivrl
je
stos
aas
in
inc
adc
dec
cmp
pusha
push
jno
loope
add
icebp
out
fcompl
mov
push
enter
imul
cli
push
aas
stc
pop
push
sbb
xor
es
jecxz
movsl
inc
fsubr
push
jge
add
imul
repnz
jmp
pop
xchg
xor
cld
add
mov
sub
adc
sti
adc
mov
and
shrl
cltd
dec
jns
lods
fimuls
sarb
movsb
ret
ret
lods
es
jne
imul
adc
imul
sub
popl
xchg
orw
out
sbb
xlat
cltd
test
imul
xchg
andb
cmp
mov
in
inc
rolb
dec
inc
ss
std
xor
sarl
xchg
lret
sub
mov
pop
and
inc
add
xor
push
stos
xor
lret
jp
lods
and
xchg
or
adc
dec
fistpl
inc
cmp
add
inc
pop
lds
push
popa
mov
jnp
js
test
push
in
in
std
jge
mov
inc
bound
icebp
push
dec
pop
jne
jmp
int3
jl
sbb
xchg
xchg
jl
mov
sar
sarb
out
inc
mov
inc
in
nop
cld
dec
mov
mov
lock
das
out
mov
cmp
jl
lods
inc
imul
xchg
cli
and
lret
scas
push
cmp
jmp
mov
fdivrs
lods
push
icebp
rcrb
hlt
mov
daa
mov
inc
and
push
mov
xor
in
mov
xchg
and
mov
cmp
sub
inc
inc
adc
sbb
cmp
lds
xchg
pop
inc
scas
pop
mov
xchg
loop
fists
or
jg
fadd
jl
icebp
cltd
into
xchg
or
mov
dec
in
cld
dec
ja
sbb
xchg
cmpsb
jbe
mov
out
les
jle
add
push
pop
jns
aam
xor
je
jno
dec
lods
xor
cmp
sbb
push
dec
push
je
js
sbb
pop
into
pop
lahf
mov
scas
inc
push
pop
adc
add
adc
cmpsb
cmp
arpl
stc
jmp
hlt
sub
push
jb
push
rcrl
xchg
push
mov
testb
adc
mov
outsl
cmpsb
xchg
jmp
inc
cmp
inc
cltd
mov
add
popf
pop
icebp
das
idivl
pop
sar
cld
cs
outsl
or
fbstp
xchg
or
out
dec
cmp
fs
xor
loop
xor
and
cmp
cmp
jb
mov
cmpsl
dec
rcrl
arpl
ss
xor
pop
or
sub
and
lods
push
outsl
aad
fs
lret
enter
mov
xor
pand
rcl
lcall
xchg
rcrb
jge
cmpsb
in
mov
es
jb
mov
inc
sub
mov
jl
test
fwait
insl
test
test
lahf
push
into
scas
and
sbb
in
es
xor
or
leave
inc
rorl
mov
test
sbb
sarb
and
xor
mov
xchg
mov
sbb
mov
addr16
pop
push
mov
xchg
mov
push
or
mov
push
cltd
rorl
cmp
aaa
add
adc
dec
jns
mov
mov
pop
push
test
and
sbb
add
pop
ret
mov
push
ret
lock
clc
lahf
jo
add
rol
jge
dec
in
iret
mov
and
xchg
enter
push
sbb
sbb
xchg
pop
pop
loope
out
repnz
sub
add
fistl
stos
inc
inc
adc
sbb
and
dec
or
cltd
call
and
aad
repz
xchg
sub
mov
dec
jge
cmp
mov
jl
popf
lcall
mov
pop
clc
test
inc
jo
jmp
popf
sti
mov
mov
cmp
popf
cmp
sub
hlt
sahf
mov
repnz
mov
sha1msg1
sarb
pop
shlb
lahf
xor
sub
cmp
mov
in
push
loop
xchg
movsl
lahf
sub
mov
xchg
fsubs
inc
stos
enter
idiv
sti
xor
mov
push
fstl
jne
popa
inc
dec
pusha
arpl
aad
pushf
fistl
stos
jnp
sub
cs
push
pop
pop
movsl
repnz
std
cmp
push
jne
cmp
loope
lods
pop
ss
int3
sub
popf
pop
inc
testb
jbe
hlt
or
add
ss
jg
inc
ds
sar
test
inc
push
loope
inc
shrb
cwtl
mov
push
jge
ljmp
mov
call
sub
aam
adcb
cmp
push
push
dec
mov
mov
ret
data16
adc
out
inc
xchg
es
mov
mov
or
jbe
jge
adc
ljmp
dec
fcompl
jno
mov
xchg
pushf
inc
loope
sub
jg
jns
mov
sbb
and
je
inc
xchg
sub
sub
push
inc
inc
mov
cli
addr16
xchg
sarb
mov
push
dec
add
pop
cmp
push
jae
push
fimull
sub
scas
inc
repnz
movsl
hlt
add
adc
test
fwait
jge
scas
fisttps
imul
and
ljmp
testl
mov
lock
cmpl
push
add
jae
xorb
dec
inc
jb
lahf
adc
into
mov
testl
insb
enter
mov
inc
popf
ds
xchg
dec
dec
ficoml
jb
inc
in
mov
mov
or
icebp
or
jns
or
outsb
mov
test
dec
in
mov
jl
xlat
insl
jno
dec
or
xor
adc
sbb
mov
inc
sbb
out
xor
mov
sarb
add
shl
cmc
rclb
int3
sbb
cld
fidivrs
cltd
xor
call
das
test
jp
sbb
add
dec
xor
stc
pushf
enter
cmc
xor
dec
dec
mov
sub
xor
sahf
test
xor
jno
insb
or
js
push
mov
or
jg
xchg
shl
inc
bound
mov
scas
mov
fstps
mov
out
add
hlt
gs
aaa
cmp
hlt
jae
mov
and
into
adc
dec
aam
test
xchg
mov
leave
adc
sbb
pop
mov
mov
jmp
fs
je
movsl
enter
ds
dec
cs
xlat
test
nop
mov
call
pop
cmp
les
loopne
gs
push
mov
punpckhdq
pop
xchg
jp
sbb
jnp
and
jmp
dec
and
sub
push
cmpsb
call
jb
insl
dec
nop
adc
sbb
aad
ret
mov
pop
aad
sub
repnz
test
jle
xchg
test
adc
mov
xchg
mov
insl
fs
add
mov
add
push
dec
dec
or
add
pop
js
push
pusha
inc
subb
lahf
aas
scas
fdivr
pop
mov
mov
cmpsb
mov
jl
cmp
xor
fisubl
dec
adc
rcrb
pusha
sub
pusha
imul
cmp
daa
icebp
adc
roll
fisubl
pop
ss
sahf
jb
lret
test
les
rorb
int3
cld
mov
mov
das
jo
push
push
mov
mov
test
jge
push
movsl
cmp
mov
pmulhw
leave
jmp
pop
and
xlat
push
mov
sbb
jo
mov
jns
sub
ds
push
popa
cmp
xor
push
test
subl
mov
inc
pop
loope
or
scas
pop
popa
test
inc
iret
push
add
out
push
sub
sbb
dec
stos
mov
pushf
add
fs
push
pushf
ret
popf
xchg
xchg
pop
push
loopne
stos
sbb
fdivs
imul
mov
stc
cmpsl
sbb
in
dec
out
in
xchg
jecxz
xlat
pop
lret
pop
inc
and
pushf
in
nop
pop
das
cli
dec
cld
lret
dec
sti
lcall
push
outsl
or
scas
lods
ljmp
inc
pop
test
hlt
fnstenv
sub
adc
sbb
dec
jb
dec
rol
push
cmp
pushf
sbb
xchg
mov
lock
cld
add
jbe
repnz
and
test
shll
mov
fstp
cmpsl
fdivr
and
jg
mov
daa
sbb
arpl
js
sbb
mull
lods
mov
lods
and
xchg
mov
jle
xchg
jmp
lret
clc
inc
shrb
rcrl
loopne
mov
inc
lahf
test
daa
lahf
dec
das
xor
test
sbb
inc
jae
filds
jo
pop
rorl
out
repz
mov
mov
shrb
loopne
xchg
add
fcmovnbe
sbb
xor
scas
arpl
xor
or
mov
pop
not
jge
and
mov
add
fldcw
sbb
std
jle
sbb
add
pop
movsb
sub
int3
mov
outsb
fdivrs
outsb
mov
mov
cmp
adc
sarl
ljmp
push
mov
daa
sbb
enter
ss
popf
divl
cmc
cmp
fwait
out
push
sub
inc
ret
xchg
sbbl
jno
mov
jae
fstpt
xchg
aaa
fisubl
cmp
cltd
je
or
push
and
sti
pop
jecxz
into
push
adc
xchg
xchg
pop
xchg
xchg
xor
lret
or
sub
les
cmpsb
and
ja
lcall
sbb
xor
repz
xor
jmp
or
lods
sarl
jle
imul
aad
popa
push
je
sub
mov
imul
movsl
dec
cmp
pusha
adc
popf
push
nop
daa
insl
sub
xlat
mov
lods
movsl
popf
mov
xor
addr16
add
movsl
daa
add
int
repz
cmp
lods
jl
mov
mov
andb
push
mov
cmpsb
js
sbb
jo
sti
aam
loopne
shrl
es
mov
mov
inc
aaa
mov
or
cmpb
xchg
and
cwtl
fisubs
add
add
xor
inc
push
mov
adc
mov
jge
push
sbb
jbe
sti
mov
xor
jp
add
sub
lret
jg
int
cld
push
js
jno
push
mov
jge
add
in
andl
cmc
fisubs
pop
add
sahf
dec
lock
or
mov
cmpl
dec
sub
pop
add
cwtl
into
sub
iret
mov
mov
pop
gs
xlat
xchg
pop
push
add
andb
test
add
adc
lds
notl
xchg
insb
and
pop
jg
mov
mov
sti
es
and
hlt
jns
or
add
fwait
into
movsb
fnstsw
daa
shlb
ret
jbe
pushf
mov
xor
je
lds
sub
inc
push
fists
sti
xor
inc
sub
xchg
mov
cmpsb
dec
pop
push
and
xor
sahf
fisubl
sub
cmp
cmp
mov
ret
jle
arpl
je
notl
enter
mulb
add
fwait
jno
xchg
sahf
call
dec
andl
repnz
mov
jmp
push
sbb
mov
sbb
sbb
call
or
in
and
in
std
inc
push
gs
out
and
es
ja
inc
cmp
hlt
ljmp
rorl
insb
mov
test
mov
jmp
push
jmp
dec
cmp
lods
xchg
popa
jne
orb
cmp
imul
inc
cs
mov
ljmp
dec
mov
xlat
repz
imul
sti
inc
rolb
ret
mov
mov
add
fucom
dec
cmc
int
lahf
mov
mov
dec
or
movsb
xor
pop
jp
roll
pop
jg
shll
sub
testl
mov
or
jp
lods
leave
movsb
jge
icebp
jo
xorb
ljmp
push
xchg
je
in
push
loop
jmp
roll
mov
sub
les
call
jl
nop
inc
fists
aad
cmp
std
shr
cmp
pop
int3
sub
ljmp
rcl
jl
out
pushf
out
enter
lds
shll
mov
sahf
sbb
pop
fbld
jb
xlat
xlat
ret
fisubl
mov
ret
adc
xchg
jge
test
or
jg
repz
je
and
fcoms
or
cmp
sbb
adc
lock
xlat
jge
xor
push
lea
sarl
dec
aaa
repz
sbb
mov
imul
add
lods
cmp
lods
sub
or
into
repz
icebp
arpl
sub
pop
stos
dec
call
es
pop
adc
push
jmp
mov
enter
push
inc
into
jne
int
fwait
in
sub
xchg
gs
bound
jecxz
jmp
test
addr16
adc
mov
sub
add
add
faddl
out
dec
sub
pop
lock
mov
dec
cli
test
xchg
mov
mov
lods
cmp
ds
out
ret
data16
xor
jnp
pop
dec
jmp
bound
lods
ret
jmp
cmpl
and
out
push
mov
shl
shl
dec
test
aad
push
jns
jecxz
jno
jb
xor
mov
xlat
arpl
and
sbb
push
and
mov
pop
data16
fs
imul
xchg
lcall
mov
out
daa
pop
push
or
or
repz
or
sarl
add
or
cmc
dec
cwtl
push
add
pop
lds
cmp
inc
sub
ret
shlb
sbb
adc
js
cmp
pusha
pop
and
sbb
mov
out
ds
or
lcall
xor
and
push
push
mov
cmp
jg
pusha
mov
adc
fucomi
imul
sbb
xchg
leave
mov
dec
push
ja
in
sahf
in
movsl
push
fwait
dec
in
ret
xor
adcl
roll
adcl
out
fisubrl
nop
cmpsl
jg
fwait
jp
mov
daa
in
cmp
and
sbb
cmp
mov
inc
inc
and
and
aas
rcrb
xorl
push
dec
repnz
push
mov
int3
sub
aaa
pop
xlat
cmpsl
jg
adc
cld
mov
jne
dec
or
pop
jno
sahf
cmp
xchg
fmul
int3
sbb
movsl
mov
push
jp
mov
subl
lcall
xor
push
sbb
pop
stos
outsb
ja
mov
pusha
stc
inc
mov
and
and
and
filds
daa
into
cmp
movsb
xchg
lahf
pop
push
fstpl
or
fwait
mov
shll
mov
dec
ud1
cmpsl
imul
cmc
or
or
mov
dec
xchg
dec
mov
mov
imul
sarb
and
dec
std
mov
daa
sub
call
xor
pusha
test
fwait
rclb
movsb
sbb
jl
mov
xchg
lock
nop
jbe
sub
shrl
xor
das
sbb
xor
pop
fldenv
aaa
sub
notb
fmull
shll
dec
push
push
xchg
lds
lods
rclb
mov
scas
lods
cli
cmpsb
gs
rorb
cmpsl
push
mov
xor
das
test
xchg
push
hlt
pop
gs
fisubs
stos
mov
mov
mov
mov
cmc
mov
negl
jne
insb
add
jo
sub
sbb
insb
push
daa
mov
and
jle
cwtl
cmp
adc
lods
xor
inc
aas
push
xor
push
sbb
push
pop
jae
nop
call
dec
cmpsb
ficoms
pop
aam
mov
ja
ficompl
adc
mov
mov
xchg
ficoml
sahf
inc
jnp
jge
jmp
mov
mov
dec
dec
sti
and
dec
cmp
jns
add
xor
and
imul
lds
es
mov
mov
add
ret
pop
aam
mov
sbbl
or
out
jecxz
cwtl
fbld
sahf
add
mov
sarb
sub
in
adc
std
xorl
mov
lock
push
es
ds
adc
daa
dec
mov
jb
push
xor
or
jle
shlb
loop
xor
ljmp
push
cmp
add
repz
fwait
imul
test
dec
mov
xor
xor
sbb
jne
and
push
and
leave
and
jmp
orb
rorl
pop
push
inc
cmp
push
push
arpl
outsl
imul
scas
std
mov
adc
iret
xchg
lods
ret
clc
fs
dec
repz
leave
xchg
jp
lahf
mov
sar
into
xor
cmc
jnp
push
test
cmpsb
xor
xlat
lcall
pop
lea
xorb
fs
add
std
lret
jb
les
das
mov
std
orb
in
xor
push
je
mov
sbb
adc
jo
push
xor
in
sarl
mov
add
sahf
ds
enter
cmp
mov
movsl
scas
stc
push
lcall
sbb
cmp
push
add
sarb
lock
lods
ds
xchg
dec
add
jmp
push
arpl
cltd
cmp
xor
inc
mov
test
or
add
jp
mov
mov
pop
mov
sub
jl
stc
das
hlt
pushf
mov
xchg
xchg
ror
outsb
ljmp
sub
dec
loope
lods
imul
out
aam
cmc
in
neg
or
sti
cmp
lock
movsl
outsb
sarb
aad
adc
addr16
inc
aad
jns
movsl
call
cmp
and
js
outsb
ret
add
mov
repz
inc
rorl
lahf
movsl
test
sahf
pop
ds
push
imul
sahf
cmp
xchg
test
nop
int3
add
add
push
mov
sbb
es
ja
addr16
cmp
iret
mul
popa
lahf
sarb
add
inc
sbb
imul
ss
scas
test
out
sbb
subb
sub
sbb
dec
test
test
push
lcall
aas
or
pop
mov
mov
roll
neg
mov
fsubrp
mov
inc
or
out
mov
incb
xchg
and
xor
mov
inc
pushf
call
hlt
clc
jge
shl
mov
mov
aad
push
or
outsl
sbb
adc
psubsw
mov
dec
hlt
cmp
cmp
imul
out
test
pop
je
mov
and
ret
mov
nop
pop
imul
lods
cmp
scas
movsb
fistps
or
and
std
push
cmp
nop
cs
push
dec
mov
outsb
jle
push
sbbb
jne
scas
add
xor
fwait
lds
js
iret
rorl
leave
jnp
data16
fcmovnbe
sti
or
call
pop
imul
dec
loope
repz
out
push
sbb
mov
adc
adc
pushf
xchg
movsl
xchg
sarb
outsb
add
jo
sbb
inc
movq
and
imul
test
ss
out
sub
sub
cltd
fcomi
dec
xor
jnp
imul
arpl
fs
ret
push
pop
stos
test
sbb
jns
std
mov
mov
lret
cmp
mov
dec
inc
mov
in
fdivl
pop
push
pop
sub
jae
stos
add
jnp
in
fsts
outsb
or
inc
test
inc
das
jmp
lea
insb
sti
add
adc
insb
lret
mov
push
jge
adc
add
sub
mov
cwtl
lea
aad
scas
add
pop
push
jp
push
aas
aaa
and
mov
push
neg
sbb
xchg
sbb
pop
inc
cmp
lods
insl
lods
xchg
ffree
inc
imul
fwait
xchg
mov
pop
sub
dec
cs
bound
mull
int
inc
lcall
lods
stos
adc
out
pop
rolb
lret
inc
or
nop
cmc
pop
push
aam
sub
test
repz
dec
dec
inc
adc
fwait
xchg
loopne
add
cs
idivb
aam
test
add
jnp
inc
in
xchg
pusha
call
push
loope
inc
insb
bound
adc
mov
or
lret
fdivl
int
jge
add
jae
or
out
push
sub
cmc
sbb
scas
lock
pcmpgtw
sub
cwtl
inc
outsb
jnp
adc
dec
add
and
mov
xor
lret
inc
cld
loop
scas
call
aad
sahf
lahf
lock
clc
stos
jnp
rorb
jb
sbb
xor
and
dec
data16
cld
es
dec
add
xchg
xchg
jbe
sub
mov
les
ss
adc
insb
adc
sub
insb
pop
ljmp
mov
test
or
jl
sarl
cld
ljmp
je
lahf
add
shll
mov
ljmp
fadds
cmp
sbb
mov
mov
or
in
add
pop
clc
ds
xchg
dec
dec
inc
adc
xchg
mov
xchg
adc
or
or
sub
mov
and
mov
fdivl
fs
dec
insl
inc
fs
and
pop
sbb
push
lock
sub
ret
ss
jge
std
push
inc
push
jae
cmp
inc
stc
in
mov
ret
inc
filds
sti
push
cmp
imul
push
arpl
enter
lea
cmp
loopne
pop
lods
test
iret
sub
sbb
cmp
mov
testl
jo
add
test
lahf
push
push
out
nop
cmp
sahf
xchg
sahf
fdivp
mov
dec
sbb
pusha
push
movsl
lcall
xchg
mov
subb
mov
adc
in
loope
lods
mov
std
sub
test
cmpsl
imul
inc
popf
rorl
add
inc
cmp
push
shr
mov
and
xor
sbbl
push
ljmp
xchg
push
clc
dec
lock
cld
lahf
ret
push
adc
loope
iret
xor
cmp
mov
sbb
fstps
mov
or
jp
xor
cli
test
sub
sub
cmpsl
aad
outsb
popa
sarb
sbb
ja
stc
mov
xlat
and
pop
sub
pop
test
pushf
jl
and
mov
xor
ror
into
shr
es
mov
das
out
cmp
xor
orl
push
aam
fucomi
add
rolb
ret
jl
and
and
and
jnp
fadds
lcall
jne
fsubs
pop
inc
stc
pop
lods
and
insb
sub
popa
arpl
and
insl
je
out
fisttpl
mov
fsubrl
adcb
dec
jns
mov
cmc
pop
and
loop
and
fs
daa
lea
movsl
mov
stos
andl
movb
inc
fs
lods
pop
push
mov
adc
popf
cltd
and
jle
mov
cmpsl
xor
xor
cli
or
jl
cmp
xor
add
rcrl
add
bts
pop
in
xchg
add
xorl
repnz
popa
xchg
mov
inc
leave
outsb
jae
dec
xchg
int
push
repz
pop
jae
fcoms
sbb
out
adc
mov
xchg
sbb
lahf
into
ss
sub
xor
sti
xor
es
arpl
jecxz
inc
aas
aad
popfw
mov
imul
jmp
mov
jae
push
push
frstor
and
sbb
mov
pop
into
add
addr16
mov
or
dec
sti
jl
cmp
ret
adc
push
adc
imul
mov
add
mov
push
insb
loope
stos
jg
or
sub
xor
mov
cmpsb
mov
push
fstp
in
push
in
adc
push
adc
xor
fsubp
loop
xlat
insl
pushl
and
nop
addr16
pop
push
addr16
addr16
pushf
out
sbb
and
bound
push
lret
mov
out
mov
push
push
inc
xlat
in
xchg
xchg
adc
sub
cwtl
dec
mov
inc
push
dec
divl
inc
mov
js
and
xchg
mov
add
xchg
pop
cs
adc
rclb
jb
cmpsb
testb
in
push
xchg
inc
add
mov
cltd
push
or
push
jge
xor
popf
cmp
pop
aad
pop
sub
cwtl
out
js
out
sub
sub
test
dec
fsubr
pop
and
xchg
lock
clc
cs
movsb
push
cltd
inc
xor
fisubrs
stos
lods
xchg
add
ljmp
out
in
cmpsb
sub
sbb
js
icebp
aas
rcll
xchg
std
jno
add
lods
lods
inc
jns
push
loope
outsl
rorl
in
dec
dec
mov
jb
mov
push
cmp
mov
push
mov
inc
pusha
xor
je
pop
sub
lods
fcoms
jl
movsb
movsl
inc
clc
fadds
ds
jno
or
jle
mov
xchg
mov
push
scas
loopne
jbe
sbb
xchg
scas
in
rclb
dec
sub
test
pop
in
pop
pop
mov
dec
lcall
in
push
ss
shr
sarl
adc
dec
pushf
sub
mov
popf
sub
xchg
shrb
pop
pushf
mov
cmp
cmpsl
adc
dec
mov
sti
cwtl
push
pop
add
add
push
shr
dec
xchg
fmull
in
and
mov
adc
stc
cld
test
test
jb
lea
repz
cs
stc
lret
clc
sbb
loopne
negb
xchg
fnstsw
sub
repz
add
fwait
mov
adc
or
dec
xor
xchg
popf
sbb
fwait
data16
das
inc
cmpsb
mov
scas
out
mov
xchg
inc
adc
cld
jle
and
loop
out
pop
out
sub
enter
arpl
inc
sbb
xor
inc
test
dec
pop
pop
sub
loope
mov
repz
int
arpl
into
sbb
xchg
inc
fdivp
aad
dec
dec
testl
mov
jb
in
xchg
mov
cs
mov
sub
adc
xchg
mov
or
inc
mov
loope
adc
inc
lods
rolb
jne
ret
mov
ss
call
adc
or
int
jnp
xchg
ret
incl
stc
push
int
mov
add
lock
mov
xchg
sbb
dec
sub
jp
jg
xor
lahf
mov
mov
mov
rcrb
jg
xor
outsb
mov
pop
out
add
push
sub
movl
jbe
out
ret
and
or
push
rclb
mov
test
xchg
fdivs
add
push
sbb
add
jmp
sbb
js
jo
xchg
xlat
pushf
aaa
in
or
sahf
out
fildl
dec
sub
mov
lods
bound
or
dec
mov
push
push
mov
mov
cld
out
dec
sbb
dec
loop
sti
in
in
test
imul
aaa
add
inc
sti
or
adc
lods
adc
add
inc
cmpl
jl
push
inc
and
or
movsb
sbb
cmp
ret
mov
lea
hlt
jle
mov
xchg
add
jnp
add
fdivrs
xchg
lods
imul
xor
xor
cli
mov
pop
loopne
fwait
lock
lret
loope
dec
insl
ljmp
pushf
mov
lahf
std
repnz
mov
in
int3
mov
xlat
pop
cltd
test
inc
adc
clc
fistl
dec
cmc
cld
mov
xor
repz
inc
mov
push
adc
push
aas
pop
aas
pusha
push
cwtl
mov
test
push
in
iret
clc
adc
clc
xlat
ljmp
add
mov
sbb
adc
out
lods
dec
fisubl
push
ja
add
dec
and
cmp
jnp
xor
ret
movb
push
sbb
sbb
aas
mov
dec
sar
lds
fucom
fcoml
xchg
lahf
inc
add
cmc
mov
mov
stc
out
rcrb
xchg
insb
loope
orl
adcb
pop
fwait
or
inc
sbb
insb
ljmp
sub
jbe
add
clc
das
bnd
add
push
add
inc
loop
adc
jp
inc
mov
rclb
jno
inc
add
jecxz
or
hlt
sahf
inc
sbb
ficoml
dec
xor
es
dec
and
cmp
in
pop
add
sub
sub
loope
dec
nop
dec
cmp
stos
fisubrl
out
aam
addl
mov
mov
xchg
outsb
loop
jne
inc
loopne
mov
push
mov
pop
in
mov
movb
push
int3
test
fidivrl
enter
imul
outsl
push
mov
imulb
xor
sub
push
cmc
neg
insl
jg
adc
xchg
mov
mov
mov
inc
mov
xchg
scas
inc
push
sar
sub
andb
pop
cmp
ja
pop
and
or
mov
or
scas
pop
cmp
sbb
fidivs
call
add
cli
cmc
dec
dec
add
and
dec
inc
je
sarb
pop
inc
test
inc
movl
mov
ficomps
lds
mov
push
sub
sub
fbld
fidivl
aaa
clc
aad
push
fbstp
mov
adc
pop
andl
pop
popf
push
scas
inc
push
add
inc
push
adc
pop
sahf
loopne
call
xchg
or
aad
negb
arpl
enter
push
les
xchg
scas
in
and
pop
xorb
stos
fistpl
jge
lret
push
cmc
out
push
jbe
out
xchg
xchg
mov
sarl
push
dec
mov
inc
sub
in
jbe
int
out
ret
push
adc
cli
xchg
repz
mov
jmp
mov
test
faddl
shl
outsl
sbb
test
mov
or
rcrl
xor
sti
push
ds
sbb
clc
icebp
test
sub
gs
je
rcrb
insl
out
jnp
inc
xlat
sub
xor
es
mov
sbb
mov
mov
outsl
xchg
mov
das
cmp
jb
insb
add
jns
jmp
mov
sub
cltd
in
pop
sbb
call
test
or
cmp
je
int3
mov
jnp
pop
sub
mov
jno
rcr
xchg
ss
mov
aas
push
ret
mov
into
push
lret
cmc
adc
imul
mov
addr16
add
leave
cmp
cld
sbb
call
repnz
and
testl
and
dec
push
jne
int3
jge
insb
jle
daa
rcrb
in
mov
sub
movsb
in
mov
lahf
cmc
and
cmc
ret
scas
lods
rorb
mov
pop
pusha
pop
pop
outsb
xchg
je
jmp
add
or
in
pop
push
mov
imul
pop
xchg
out
xchg
mov
mov
push
mov
popf
lret
sbb
mov
xchg
add
dec
mov
addb
jle
sub
dec
cli
inc
cmp
or
sbb
rcrb
sub
adcl
mov
ror
mov
xor
sub
push
mov
xchg
jecxz
sub
imul
mov
dec
rorl
rolb
sbb
add
fcmove
jnp
dec
sub
insb
inc
lahf
mov
dec
imul
dec
cmp
mov
imul
xor
mov
fsubrl
mov
lods
pop
js
test
sbb
jge
cmc
int3
lret
lret
sub
xchg
cmpsb
mov
test
push
pop
or
push
cmp
adc
icebp
xchg
pop
sbb
push
jmp
mov
stos
xor
repz
daa
xor
mov
mov
or
das
mov
lret
imul
stc
jmp
sub
xchg
mov
in
jmp
sti
icebp
push
lcall
mov
jge
sub
mov
sub
incb
int3
bound
lret
push
daa
icebp
aas
jns
leave
and
or
push
mov
or
in
iret
fwait
pushf
out
mov
insb
hlt
xor
xlat
add
bswap
or
lods
mov
lds
cli
rorl
jno
aad
fdivrl
psllw
xor
dec
jo
mov
and
jl
jp
push
aas
out
addl
or
fsubl
pop
shrb
aad
loop
mov
shrl
shr
push
out
cmpsl
mov
cs
xchg
xchg
dec
or
in
out
sub
scas
mov
xchg
sbb
xor
jecxz
dec
jmp
and
call
into
push
sub
or
fstl
adc
add
and
mov
popf
or
xor
xor
lret
push
ljmp
fstpt
test
jge
ret
sbbb
mov
out
pop
cmc
jns
sub
ret
cmp
mov
xchg
mov
loopne
xchg
jle
inc
sahf
adc
mov
sub
cmpsl
call
push
insl
push
hlt
ret
js
push
or
ss
mov
test
sbb
inc
xchg
cmc
lcall
inc
push
sbb
dec
fisttpl
mov
ds
lods
cmp
push
insl
cmp
jbe,pt
pop
adc
pop
dec
ret
loop
xor
mov
or
pop
sub
fsubrs
bound
sbb
cmp
push
cltd
out
popa
xchg
push
sbb
lahf
cltd
bound
stc
aas
sub
mov
sti
cmp
add
outsl
sbb
adc
mov
movb
pop
or
push
pop
daa
mov
jge
ffreep
mov
loope
into
shrb
cmpsl
lock
je
jecxz
test
inc
mov
or
je
in
sub
push
std
test
int3
jnp
int3
sub
mov
sahf
adc
sub
pop
and
sub
movsb
cmpb
daa
pop
stos
push
push
or
imul
hlt
testl
jmp
pop
xor
push
popf
loopne
addr16
mov
sbb
add
ret
addr16
mov
sub
jg
sub
sbb
cmpsl
push
shrb
test
ret
sub
imul
cmp
xor
xor
adc
idiv
xchg
test
pushl
adc
dec
ljmp
out
addr16
jl
shlb
jp
dec
adc
popf
jle
pop
lcall
data16
mov
mov
jecxz
dec
mov
adcl
xor
adc
js
getsec
out
das
daa
or
pushf
mov
jl
sub
ljmp
cli
xchg
lret
shrl
xchg
jnp
mov
pop
sarl
popf
adc
inc
aam
cmpsl
mov
lods
xor
xchg
in
insb
mov
loop
jge
dec
cmp
pushf
adc
jno
fwait
xchg
insb
mov
pop
lods
fildll
jge
pop
mov
jae
push
icebp
xor
or
pop
cmpsb
mov
mov
arpl
xor
int
and
jno
inc
adc
add
inc
adc
pop
cltd
stos
adc
pop
mov
add
in
insl
push
xor
fistpl
mov
aam
rolb
sbb
cmp
add
lret
cmp
popw
or
push
stos
sbb
ror
or
jbe
xor
pop
lret
dec
repnz
push
push
mov
into
add
dec
es
fcom
mov
test
add
cmp
mov
loop
int3
sbb
pop
das
mov
mov
bound
imul
pop
push
dec
mov
and
in
cmp
or
cmp
jbe
in
into
cmp
cli
lods
aas
lret
pop
in
mov
mov
icebp
sbb
jecxz
adc
sbb
cmpsl
sbb
inc
mov
and
roll
mov
mov
pop
xor
iretw
hlt
jae
mov
cltd
adc
dec
roll
lock
shll
stc
pushf
movsl
xchg
jge
bound
stos
jo
xchg
fwait
mov
xchg
inc
mov
fists
jge
xchg
pop
fs
fidivrs
dec
mov
or
add
pushf
popa
sahf
push
sub
imul
out
pop
jmp
js
mov
addr16
xchg
cmp
lods
jge
jns
jmp
mov
push
jp
pop
mul
xchg
scas
cld
stc
or
or
pop
sbb
pop
and
jb
pusha
mov
je
cmp
inc
inc
ret
add
loop
dec
sbb
xchg
push
insb
cwtl
and
pop
lock
insl
fdivrs
nop
into
mov
and
inc
jle
movsb
je
out
or
jecxz
and
cmp
mov
push
mov
out
cmp
sarb
fwait
mov
in
int3
pop
or
loope
popa
xor
icebp
or
cmpsl
add
jns
ret
adc
inc
enter
test
sti
push
aaa
pop
mov
push
cmp
dec
ret
sbb
mov
jo
hlt
loop
mov
inc
int
dec
or
or
bound
jns
adc
imul
mov
in
pop
pop
movsl
sub
xor
shl
cmp
sbb
dec
data16
mov
push
movsl
inc
cmp
push
cmp
int3
pusha
pop
cmp
jecxz
ret
cltd
mov
mov
ss
jl
ror
fprem1
cmp
fldenv
adc
fsts
sbb
pushf
leave
pop
rcrl
xorl
dec
pop
mov
cli
psrld
inc
cltd
pop
cli
enter
or
icebp
jae
or
or
imul
mov
fiaddl
notb
lock
bound
lahf
pop
lcall
mov
lods
pushf
ljmp
lds
cli
sbb
add
gs
xchg
fiaddl
add
mov
int
cmpsl
xchg
adc
out
jnp
scas
int
mov
and
popa
mov
xor
mov
push
dec
jns
in
out
inc
mov
sbb
jo
or
or
in
pop
shlb
rclb
stos
push
mov
add
sub
mov
adcl
xor
ret
call
out
rcr
jge
xchg
xor
push
lahf
test
sbb
cwtl
cld
fldt
outsb
push
jo
adc
push
ss
cmpl
push
push
fisttpl
notl
cmp
mov
xor
outsl
cs
out
movsb
cld
test
out
cmp
enter
push
les
mov
mull
mov
inc
push
pop
and
inc
aad
xchg
in
mov
jg
pushf
sahf
loopne
outsl
les
or
mov
mov
adcl
mov
or
pop
aaa
fistpl
cmp
push
pop
xchg
dec
inc
xchg
je
jg
cmc
fxch
popf
cltd
cmpsl
in
iret
aad
out
mov
jl
fistpl
daa
pop
lods
cltd
adc
lret
push
movsl
xchg
sub
int
fs
enter
pop
fwait
lahf
icebp
pop
adc
and
sti
repnz
mov
nop
fildll
mov
jno
sbb
lcall
outsl
cmp
xor
jle
fidivs
push
fisubl
call
test
test
mov
add
aaa
mov
inc
push
jle
ds
shl
lock
cmp
pusha
and
and
cmc
sub
push
imul
and
fcoms
movsl
insl
daa
mov
js
ds
pop
pop
jae
or
lea
jmp
mov
fistpll
scas
inc
push
mov
add
cmpsl
les
repnz
scas
xor
mov
add
mov
adc
add
pushf
fwait
mov
das
jmp
push
loop
jbe
sbb
and
inc
inc
popa
push
or
inc
out
inc
add
inc
push
cmp
mov
data16
sbb
lods
outsb
lcall
sub
adc
notb
mov
sub
sbb
pop
cmp
xor
fbld
inc
and
sti
mov
lods
subb
mov
jo
xor
jge
adc
xchg
test
stos
dec
fmull
mov
in
pop
lcall
push
cld
or
cltd
mov
add
mov
fmull
pushf
mov
rcrl
testb
fbstp
shlb
jns
xchg
ret
pop
cli
mov
cmp
call
mov
or
xchg
es
sub
mov
pop
sbb
das
mov
leave
movb
loope
pop
insl
jle
cli
or
lahf
rorl
scas
push
rcll
int
cwtl
in
add
dec
test
xor
cld
add
jbe
cmp
inc
jns
andb
sub
pop
cmc
pop
adcb
insb
test
addl
pop
xchg
sub
outsl
data16
mov
clc
std
fiaddl
adc
repnz
pop
aas
stc
inc
jae
jge
jbe
mov
ja
pop
and
out
in
inc
cwtl
mov
aaa
out
jb
add
mov
sub
push
shlb
mov
add
mov
fbstp
push
xor
cmp
xchg
dec
je
push
neg
jle
mov
ja
add
dec
xchg
xor
je
int3
pop
pop
inc
inc
loopew
xchg
int
lcall
inc
mov
adc
cmc
xchg
sbb
inc
in
fimuls
int
dec
cwtl
cmc
and
jp
push
sbb
popa
icebp
xor
mov
xchg
pop
fs
test
lods
scas
out
int3
sub
fcoms
hlt
and
pop
mov
scas
adcl
cmpsb
lret
adc
in
sbb
mov
in
adcl
or
adc
call
subb
mov
idivb
std
cwtl
mov
pop
sbb
mov
xchg
das
fwait
shr
or
mov
outsb
mov
fmul
dec
mov
stos
cs
mov
roll
ljmp
push
xor
pop
mov
push
std
mov
jge
int
add
xor
fwait
imul
cltd
push
or
and
mov
xchg
xor
mov
lea
push
sub
xor
movsl
pusha
sub
push
dec
jmp
xchg
std
pusha
das
push
daa
test
cmp
aam
mov
cmp
test
jle
pop
xchg
cmp
int
pop
testb
popf
add
in
outsl
mov
ljmp
mov
mov
adc
and
loope
xchg
in
iret
dec
icebp
mov
cmp
dec
or
cmp
cmp
or
xlat
mov
repz
push
jae
mov
pop
adc
push
or
in
add
sub
test
mov
add
mov
push
mov
add
fnstenv
dec
loop
mov
insb
leave
outsl
xchg
sahf
loopne
ljmp
cmp
lcall
pop
mov
xchg
lahf
inc
inc
js
cld
roll
fstps
adc
pop
popa
cli
cmp
mov
out
xchg
xchg
and
fs
adc
jns
add
fcomp
cmp
test
dec
in
adc
or
jecxz
adc
jmp
ret
pop
lea
push
ret
xchg
adc
jno
cmpb
imul
gs
push
fists
xchg
cmp
mov
mov
test
adc
cmpsb
std
dec
movsb
xchg
stc
lea
cwtl
mov
mov
push
sbb
jecxz
push
dec
stos
stos
jno
pop
push
mov
and
js
ljmp
insl
mov
push
cmpsl
and
sahf
lret
fdivl
xchg
pop
int
fwait
jne
cmp
jns
pusha
in
movsl
pop
out
fldcw
push
test
push
xchg
jns
sub
out
int
push
dec
add
movsl
in
sub
ds
add
pusha
shrb
add
cwtl
and
sarb
shrl
push
scas
push
dec
push
fs
adc
das
jl
rolb
sub
cltd
les
scas
push
loop
dec
mov
fsubrs
sub
dec
das
xor
iret
mov
sbb
and
and
dec
jecxz
ds
movsb
les
jo
dec
inc
xchg
dec
sbb
xor
rcrb
sbb
movsb
xlat
sub
fistpll
movsl
fwait
lock
dec
imull
sbb
fsubp
or
add
jecxz
int3
inc
adc
sarl
in
mov
jno
mov
rolw
pop
test
ljmp
test
pop
adc
add
dec
push
mov
addr16
jb
mov
mov
shl
adc
test
movsl
mov
aam
inc
jae
mov
xor
add
shl
push
jecxz
iret
mov
decl
test
jp
pop
rolb
cmc
aam
xchg
imul
push
rolb
fnsave
pop
divb
jg
insl
or
push
andb
jge
jle
mov
xchg
jns
mov
sbb
push
mov
bound
sbb
jp
jbe
cmp
sbb
clc
jno
xorl
and
xchg
xchg
int
movsb
ljmp
imul
jmp
pop
in
xor
js
cltd
imul
push
and
mov
sub
call
js
icebp
loopne
mov
xchg
sbb
or
jbe
dec
cmpsb
mov
jge
movl
std
push
add
in
imulb
dec
rclb
xchg
xor
lds
dec
pop
adc
pop
div
rol
into
loop
mov
inc
cli
addr16
mov
in
push
jbe
sbb
inc
scas
xchg
lret
cli
dec
jno
lods
sahf
pause
push
push
sbb
push
cmp
data16
xchg
loopne
out
push
andl
test
neg
in
incl
sub
pop
cli
add
sti
mov
mov
je
pop
jmp
cmp
and
jmp
mov
cmpsb
inc
pop
addr16
cmp
adc
jmp
mov
movb
xchg
pop
call
mov
mov
mov
es
stos
mov
outsb
inc
mov
stos
mov
fcomps
xlat
cmp
jb
mov
fsubrl
mov
pop
adc
out
pop
test
xor
pop
jns
xchg
repz
les
cmpsl
insb
mov
cmpsb
and
int
int
stc
in
cwtl
xor
fmul
push
inc
and
xchg
pop
std
sbb
inc
rolb
add
push
fisubrs
cmp
jl
push
xor
repz
fisubrl
mov
mov
fsubrl
add
dec
js
nop
sti
icebp
imul
and
jns
push
lret
jo
jge
add
pop
sbb
movsl
cmc
jg
bound
lea
add
or
sub
lahf
and
xor
and
add
loopne
cmpl
aas
push
or
xchg
mov
shll
inc
cmp
xor
incl
dec
and
and
sub
outsl
mov
xor
push
or
sub
add
cmpl
mov
fs
and
xor
mov
mov
pop
mov
sub
sub
nop
mov
sub
and
cmp
notl
dec
es
orb
icebp
loopne
mov
pop
dec
nop
lea
sbb
or
inc
adc
xchg
decl
cli
std
push
push
push
pop
adc
and
test
cmpb
dec
push
aaa
mov
dec
dec
popa
dec
mov
xchg
pop
mov
call
mov
mov
cmp
stc
add
mov
push
sub
shlb
ja
xor
int3
cld
pop
jp
test
lods
aas
adc
imulb
or
mov
mov
pusha
cmpsb
mov
push
inc
lock
xor
lea
movsl
mov
add
add
pop
adc
je
sti
push
cmp
clc
shll
stc
test
xchg
lret
icebp
mov
sti
jo
cmp
pop
mov
adc
into
stc
and
jns
scas
lds
pop
mov
xchg
add
fstps
lods
jne
loopne
push
jb
ljmp
xor
pushf
sub
adc
outsl
sahf
adc
cmp
bound
fwait
ja
negb
push
js
xchg
sbb
sbb
loope
inc
test
sub
aas
inc
cmp
add
sub
lret
in
xchg
cmp
sti
push
enter
xchg
push
shr
mov
sub
xchg
or
movsb
sbb
adcb
push
push
shll
add
rorl
push
daa
xchg
inc
and
je
imul
clc
pop
iret
movsl
xlat
into
mov
sub
or
loop
call
ss
fldenv
lcall
andb
xor
or
mov
mov
push
pop
adc
pop
and
test
in
arpl
pop
pop
sbb
popf
push
lods
cmp
popa
iret
pop
fnstenv
int
jle
xchg
shlb
xchg
xchg
scas
mov
xor
mov
dec
insl
jmp
cltd
stos
xchg
aam
out
loop
lret
jmp
test
xor
push
cmp
movsb
clc
push
xor
into
pop
add
scas
dec
lcall
out
sbb
movsl
scas
mov
je
adc
testb
pop
mov
test
pop
lods
cmp
push
inc
arpl
cltd
dec
testb
bswap
pop
sub
adc
xchg
sbb
cs
push
add
das
xchg
xchg
hlt
jle
out
out
addr16
into
push
jmp
add
jg
insb
movsl
jne
popf
sub
int
fldt
mov
dec
pop
inc
cmp
int3
push
pop
js
push
add
cwtl
or
sub
sbb
ja
hlt
rolb
in
inc
lock
in
orb
pop
pop
js
dec
pusha
or
add
add
dec
lods
mov
pop
lcall
movl
movsl
jmp
xor
or
adc
sub
nop
jns
sarl
sbb
popf
xor
pop
out
pop
in
cmp
pop
sbb
inc
inc
stos
popa
cmp
jnp
ljmp
jl
in
loop
sbb
lods
or
std
fisubs
aas
jle
fs
ja
jl
mov
stc
mov
clc
pop
fildll
subl
stos
faddl
loopne
in
sub
dec
test
pop
jecxz
xor
and
xchg
jb
jno
mov
or
and
mov
and
int
cmc
lods
xor
stos
sarb
dec
stos
out
add
enter
pop
cs
push
pop
pop
jp
xchg
stc
stos
ss
adc
add
jge
add
cld
roll
xor
push
repnz
jl
inc
loope
scas
xchg
dec
fucom
cmp
stos
push
imul
fistpl
fsubrs
sub
pop
sbb
ss
or
aad
dec
dec
jmp
push
cmc
mov
enter
push
lea
sahf
mov
adc
in
xchg
push
adc
cld
inc
jmp
mov
mov
xchg
inc
xor
mov
loop
insl
xchg
mov
mov
or
cmp
inc
inc
lock
in
not
inc
and
mov
add
fstps
cwtl
and
jae
clc
adc
fidivrs
jl
pop
test
in
loope
inc
inc
nop
sbb
hlt
mov
std
inc
push
dec
in
shl
jnp
cs
pop
push
and
jne
mull
mov
xlat
in
mov
movsb
cmp
pop
push
out
inc
test
pop
daa
shll
jle
std
and
mov
lahf
repz
sti
out
aam
dec
cmp
fsubl
and
dec
jne
inc
mov
dec
xchg
xchg
sar
xchg
adc
aad
xchg
loop
mov
add
mov
fwait
lret
push
dec
xor
rcrl
xor
jl
pushf
aad
insl
das
scas
mov
adc
vandnps
or
inc
test
and
jl
popl
cltd
test
loope
mov
mov
setle
cwtl
mov
mov
rclb
cmpsb
roll
jmp
dec
sti
cmp
outsb
cmc
lods
scas
xor
fsubr
outsl
push
adc
xchg
cli
xchg
pop
inc
fcom
jp
divb
out
cld
fsubl
test
jb
loope
in
jg
jp
xor
sub
idivb
push
nop
inc
pusha
add
ret
js
testl
cmpsb
cmp
cmpsl
ret
int3
aad
adc
fucom
sbb
in
sbb
mov
inc
inc
fndisi(8087
mov
sub
cltd
insl
lret
incb
scas
sahf
insl
jne
adcb
dec
mov
jns
negb
loop
nop
aam
leave
mov
stc
mov
cmp
imul
xor
pop
sub
in
pop
sub
cmp
test
mov
pop
and
movsb
xchg
push
outsl
out
ss
pushl
sub
mov
pop
icebp
test
jmp
push
mov
popf
cmpsl
shll
outsb
cltd
xorb
mov
xor
push
mov
jae
in
inc
es
fs
aad
iret
add
sbb
jl
and
cmpsl
cli
fisttpl
cld
bound
outsb
andb
xor
sub
or
pop
int3
fisttps
mov
sub
add
punpckldq
cvtps2pd
notl
push
sbb
mov
rcrl
push
test
dec
add
lock
mov
xchg
sbb
push
loope
xchg
adc
lds
xchg
ss
add
dec
adc
aad
adc
jmp
mov
fstpt
btc
mov
inc
rcrl
enter
ss
and
inc
imul
fdivr
test
frstor
mov
inc
fdivrl
mov
fcoml
test
data16
inc
cltd
sbb
jg
imul
cmp
adc
mov
movsb
repz
lea
pushf
aas
mov
jp
mov
sahf
loopne
dec
shrb
cs
pop
jae
imul
sbb
movsl
dec
bound
inc
or
jp
cmp
cs
lods
xchg
and
mov
call
jle
jb
pusha
jp
orb
sub
ret
jae
imul
stc
inc
lcall
cmc
insl
outsl
imul
cwtl
xchg
movsb
in
jl
or
cmp
ja
addb
add
mov
incb
cmpsl
movlps
adc
or
sub
mov
xchg
inc
shl
dec
jnp
cmp
test
push
jl
xor
popl
mov
xchg
jl
dec
sub
xchg
dec
hlt
sbb
loopne
ja
std
dec
outsl
push
jnp
insl
mov
movsl
dec
xchg
test
add
shrl
jmp
pop
cwtl
cmp
mov
mov
ds
inc
or
test
and
lods
mov
xchg
bound
insb
mov
jle
xchg
or
insb
lret
cmp
pop
lahf
mov
ljmp
xchg
xchg
scas
popa
stc
sbb
shll
jo
fstl
rcrb
jp
dec
in
clc
pop
das
std
fbstp
inc
jo
mov
push
je
dec
stc
xor
popf
xor
leave
push
iret
dec
stos
lret
pusha
loopne
shrl
cmpsb
dec
jnp
and
mov
sbbl
adc
jg
outsl
sarb
cmp
data16
push
movsl
les
insl
repnz
cwtl
sahf
push
push
push
mov
xor
xlat
or
xchg
mov
es
jns
mov
jle
adc
sbb
fsubrs
jle
and
in
pusha
int3
sbb
cmpsl
add
xchg
call
fsubrl
mov
mov
cld
cli
nop
mov
mov
sub
or
xorb
push
aaa
das
std
push
ja
pop
popa
mov
cld
cmpsb
xor
loop
add
fnstenv
xor
mov
xor
nop
add
jne
mov
sbb
or
inc
mov
adc
int
xchg
dec
inc
rolb
mov
imul
sub
lods
push
lds
xchg
je
lahf
fsub
xor
daa
jp
push
push
dec
jecxz
mov
int
push
out
jg
icebp
pushf
roll
inc
and
icebp
push
test
xor
push
mov
xor
xchg
test
sub
cmp
jg
iret
test
in
xchg
shr
mov
lcall
adc
sub
in
fcompl
aaa
mov
push
roll
push
and
lcall
lret
mov
adc
outsl
xor
push
andl
popa
inc
push
jb
jno
jge
mov
orl
dec
mov
addr16
pop
pop
neg
je
mov
mov
outsb
in
push
adc
cltd
and
push
jnp
adc
stos
cmc
cs
js
push
adc
andl
les
test
ja
loop
mov
test
pushl
lcall
adc
push
fs
dec
enter
addr16
pop
pop
rorl
xor
jg
jb
adc
cmpb
mov
sti
sbb
int3
dec
push
les
mov
pop
lcall
jb
and
mov
insl
out
mov
mov
out
xor
jmp
jae
es
jmp
mov
inc
inc
lock
mov
cmp
and
xlat
pop
sub
stos
lcall
cmp
mov
repz
push
mov
add
das
or
mov
add
xorl
jp
sbb
cmc
sbbl
add
mov
rep
cmp
dec
addr16
mov
lahf
ja
mov
cld
int
loop
ja
or
insb
sub
rcrl
jnp
inc
mov
repnz
and
xorb
rorl
std
mov
pop
xor
fldt
or
ret
ret
cltd
inc
pop
xchg
outsl
mov
jne
imulb
imul
pop
mov
jbe
jp
jnp
cmp
push
fnstcw
xchg
fldl
movsb
ffreep
adc
mov
enter
lahf
cmp
notl
xchg
lds
xor
or
xor
out
jp
popf
sbb
xor
cmp
cmp
stos
pop
push
sarb
ljmp
nop
sbb
mov
xor
dec
movsl
imul
out
push
mov
insl
pop
ljmp
data16
call
jbe
xchg
movsl
push
rol
push
mov
mov
ljmp
mov
push
neg
aam
mov
sahf
fdivs
jbe
cmpsl
xchg
ds
pop
loope
mov
lds
pop
lds
dec
mov
dec
mov
in
xchg
in
enter
xor
jnp
dec
cmpb
xlat
pop
push
jne
inc
icebp
lret
adc
sub
fdivr
pop
xor
inc
sbb
mov
pop
lock
jg
push
jp
iret
ror
hlt
cmp
clc
xchg
test
outsl
mov
nop
dec
cs
add
pop
addr16
xchg
cmp
mov
mov
js
enter
sub
imul
out
shll
jb
es
cmpsb
popf
stos
push
iret
or
cmpsl
sbb
mov
add
fldcw
mov
push
into
jo
jge
andl
ja
dec
loope
add
aad
mov
into
mov
pop
dec
loope
pop
mov
icebp
mov
jns
fcoms
pop
sub
inc
jnp
fs
cld
rorl
cmp
push
in
cltd
imul
inc
adc
cltd
and
push
sub
je
cmc
int
repz
sub
xchg
gs
fldenv
cli
pop
out
jg
add
inc
mov
jecxz
jge
sbb
fidivl
popf
dec
sbb
inc
xor
mov
cmpsl
fdivrp
imul
add
jne
loopne
lcall
or
inc
push
test
sub
nop
pop
or
push
push
insb
mov
movsb
out
or
xor
add
or
mov
push
je
jg
adc
inc
loope
sahf
repz
lock
pop
cld
mov
stos
imul
jge
clc
mov
cltd
fisubs
enter
fcmovbe
mov
xchg
rorl
mov
test
adc
mov
dec
add
or
mov
shll
xor
adc
sub
jnp
inc
or
cmpsl
pop
and
imulb
rcll
cltd
push
sub
pop
fnstcw
popf
inc
lods
ss
dec
and
push
lcall
jb
pop
in
pop
test
icebp
jnp
push
ret
stos
out
xchg
ret
add
sti
jecxz
loop
repnz
insb
jmp
and
add
popl
pop
in
push
and
ss
sub
adc
rclb
loope
cli
aaa
hlt
cmp
das
mov
pusha
xchg
jecxz
aaa
movsb
repnz
rorl
adc
push
add
ret
shrl
jbe
push
add
dec
add
xchg
push
cltd
stc
add
dec
push
pop
clc
loopne
sbbb
mov
mov
movsl
jb
data16
ja
mov
xchg
clc
in
mov
out
jne
push
cmp
popa
test
in
das
icebp
dec
sub
leave
jecxz,pt
mov
add
je
dec
or
lret
inc
stos
add
out
xchg
bound
daa
mov
sub
dec
decl
pop
ja
out
push
imul
inc
fildll
popa
gs
inc
mov
cld
mov
add
shll
dec
fwait
jns
ds
outsl
xchg
pop
mov
mov
in
sub
rcrl
arpl
push
icebp
sub
or
leave
sbb
push
xchg
mov
lcall
mov
mov
push
arpl
fs
into
neg
dec
js
jmp
and
ds
fmuls
dec
cs
inc
xchg
sti
push
add
and
mov
nop
inc
and
shlb
mov
mov
mov
nop
mov
cmp
or
test
push
pop
push
mov
pop
mov
add
icebp
out
mov
jle
adc
inc
popa
sarb
mov
cmc
mov
mov
mov
pushf
ja
rorl
xchg
shll
sbb
sub
jne
jl
pop
idivl
xchg
or
push
and
and
cmp
xchg
xchg
push
decb
sub
xchg
cld
pop
sub
mov
sub
mov
movl
inc
cmpl
hlt
jl
in
sti
repz
xor
fdivl
mov
mov
mov
and
das
gs
mov
jno
and
jp
mov
sub
sti
mov
loopne
jp
enter
test
out
ret
xor
adc
and
repnz
sbb
cmpsb
jg
jmp
scas
mov
xor
mov
in
xchg
mov
jmp
mov
inc
stos
sub
loop
es
mov
nop
lods
mov
lret
loopne
movsl
xorl
push
pop
pop
out
fs
fidivrl
sub
sbb
out
mov
fildll
mov
inc
mov
sub
je
f2xm1
mov
fcmove
pop
push
rclb
push
xchg
lret
daa
inc
stos
push
clc
push
add
call
movsl
fiadds
out
movsb
cmpsl
pop
sub
dec
imul
jp
loope
dec
adc
and
mov
dec
icebp
pop
in
cmc
mov
pop
insb
adcl
fildl
imul
insl
into
int3
shlb
mov
sbbb
dec
mov
push
adc
ret
push
cmp
lods
andb
subl
mov
cmp
cs
cmp
loopne
xor
cmp
movsl
and
jle
push
mov
adc
insb
test
movsb
xchg
sbb
mov
mov
out
lods
push
adc
test
mov
cltd
and
add
inc
push
sub
inc
ret
fisttps
mov
jb
mov
lds
inc
es
jnp
jae
movsb
aam
hlt
sbb
imul
jecxz
dec
jecxz
cli
loopne
test
mov
gs
les
dec
jb
sar
adc
push
mov
dec
shr
mov
lret
and
stc
pop
fisttpll
mov
push
sbb
mov
pop
shrb
ds
out
sbb
mov
xlat
stc
notl
insl
sbb
fsubrs
pop
mov
sbb
inc
sti
loope
push
add
push
fisubrl
sar
cmc
in
mov
push
pop
enter
jmp
pop
movntq
push
jno
xor
adc
jmp
mov
xorps
adc
mov
sub
lds
scas
xchg
add
daa
sub
sbb
out
mov
push
rcl
adc
xchg
jno
nop
mov
lahf
pop
cwtl
lds
pop
popf
cli
push
xchg
cmpsl
ret
cmp
or
lcall
call
inc
pop
pop
lret
adc
dec
lea
cmc
sbb
pop
lods
sub
pop
xor
decb
sbb
mov
cmp
aas
stos
push
lret
rolw
cmp
les
pop
add
inc
dec
mov
xchg
dec
jle
pushw
fnsave
cmpsb
jns
insl
add
xchg
pushl
cmp
push
inc
roll
cli
ret
jmp
pop
jmp
ja
push
cld
or
dec
xor
scas
mov
xor
push
mov
xchg
lea
lds
fidivrs
les
pop
cmpsl
iret
in
mov
xor
mov
stos
cmp
pshufw
sbb
scas
jg
inc
cmp
pusha
xor
mov
mov
icebp
mov
pop
fs
sub
test
lret
out
mov
cmp
sahf
cwtl
insl
stos
jmp
imul
mov
jmp
ret
mov
icebp
or
data16
outsb
adc
inc
inc
sbb
mov
mov
orb
iret
sub
push
iret
int
mov
push
cmp
cmp
mov
add
or
cwtl
in
push
in
mov
movsl
into
sub
or
pushf
shll
jecxz
cltd
lods
sub
scas
and
or
jle
cmp
int3
hlt
mov
jge
mov
insb
mov
cmp
jecxz
scas
push
cli
je
lods
lret
sub
jno
sbb
mov
adc
push
jns
cs
xchg
nop
cmc
iret
xchg
sbb
xor
pushf
inc
fs
mov
outsl
ja
rclb
mov
rolb
nop
movsl
out
adc
cld
dec
shlb
dec
cmp
jmp
lds
cmc
pop
or
cmp
cmp
xadd
iret
es
into
movsl
fwait
stos
outsl
in
into
mov
adc
xchg
xor
dec
cli
or
stos
stc
pusha
je
and
imul
mov
jge
or
fdivrl
cmpsb
movsb
inc
mov
call
adc
mov
gs
shll
inc
scas
int3
add
call
inc
in
jge
shll
mov
push
stos
sub
cmp
mov
in
loopne
ret
outsl
cwtl
stos
mov
mov
imul
and
push
stc
pop
shlb
mov
jl
jbe
popl
in
sti
sbb
test
sub
pop
xchg
into
sub
rorl
test
add
push
xlat
jbe
icebp
cmp
aad
add
add
and
cli
cmp
lea
rolb
inc
shll
and
pop
and
jae
jecxz
add
push
popa
cmp
mov
cs
sbb
mov
or
fxam
xor
pushf
repz
lods
cmp
fdivr
stos
and
adc
cmp
mov
js
into
adc
pop
hlt
pop
ret
clc
orb
stos
shl
and
test
jno
lods
rorb
xchg
pop
cmp
push
mov
or
inc
cli
xor
jmp
aad
push
imul
daa
fnstsw
or
ds
stos
lea
mov
xrelease
sub
dec
loope
adc
cs
mov
jne
xchg
pushf
shll
add
jnp
jbe
cmpsb
sub
xchg
pop
fcoms
sbb
lds
stc
subl
dec
sbb
outsl
in
shrb
inc
ljmp
dec
in
ljmp
jecxz
stos
into
jne
out
lret
aas
mov
pop
push
lret
lds
fiaddl
dec
mov
popa
add
ficomps
jl
jmp
xor
jl
mov
lcall
xor
hlt
jmp
mov
insl
push
dec
cmp
dec
data16
mov
pop
adc
addl
cmc
inc
cmp
pop
mov
jle
sbb
enter
icebp
mov
lock
jle
adc
shl
push
jg
rcrl
jmp
mov
dec
push
aaa
push
jns
jns
add
or
sbb
in
cmp
cmp
int3
jo
inc
fcmovb
and
ret
jns
mov
into
push
and
xor
push
cmp
loopne
ja
inc
and
inc
movsl
negl
frstor
nop
imul
xchg
or
jne
ss
fcomi
cs
js
fldt
mov
push
push
shlb
arpl
movsb
clc
mulb
sub
test
cs
inc
xchg
repnz
ficomps
push
adc
or
leave
lock
pop
aas
into
loope
or
ljmp
add
mov
xchg
xchg
push
out
test
das
les
nop
xchg
mov
push
jmp
and
mov
push
jmp
fwait
mov
add
in
and
ret
daa
mov
mov
jp
jb
fsubl
xor
mov
jae
cwtl
push
xchg
in
xchg
sbb
sub
or
loope
data16
subb
sti
and
fimuls
xor
mov
jge
mov
aas
adc
stc
stos
outsb
mov
fsts
fcomp
lds
add
bound
adc
arpl
sbbb
nop
jl
mov
mov
mov
addr16
popl
fldenv
xchg
paddd
cwtl
inc
in
adc
jnp
inc
xchg
xor
loope
push
bound
inc
dec
mov
mov
fwait
into
fcoms
repz
jp
mov
dec
adc
pop
xchg
cmp
es
arpl
daa
dec
pop
xor
fists
jns
add
cmp
or
mov
adc
fst
orb
clc
pop
adc
mov
icebp
mov
and
clc
xchg
push
and
jecxz
cmp
into
mov
stos
or
xor
jns
fisttpl
imul
jmp
aam
jo
out
xchg
and
push
es
xor
pop
es
jmp
add
aad
ja
and
mov
fcompl
jge
mov
push
jecxz
add
sbb
push
aaa
jae
test
fisubrl
sbb
inc
fucom
loope
xorl
or
xor
iret
or
adc
adc
outsl
mov
ret
jmp
mov
pop
scas
jne
iret
out
sahf
add
xchg
pushf
sub
ljmp
sbb
add
pop
jle
sub
sub
into
push
fsub
pushf
aam
div
mov
cltd
xor
sub
int
es
xchg
in
jnp
and
imul
imul
mov
shrb
cmc
push
out
push
cmp
les
push
sti
xchg
cmp
xchg
and
pop
pushf
fstpl
insl
push
inc
xor
je
sub
pop
jo
mov
sbb
cmpsl
and
imul
js
out
mov
mov
mov
jns
and
mov
and
dec
mov
fisubrs
or
sbb
xchg
dec
mov
mov
roll
or
loopne
mov
xor
adc
lods
ss
lods
ret
imul
clc
in
jp
xlat
ja
leave
push
mov
sbb
mov
icebp
mov
pop
dec
xchg
xor
test
pop
sub
xchg
lods
in
mov
leave
jecxz
mov
inc
inc
fisubs
xlat
sub
mov
adcl
pop
or
mov
fwait
xchg
mov
daa
pop
push
in
sub
add
ret
dec
std
ds
pop
pop
or
roll
enter
or
loope
sbb
xor
lahf
cmpsb
dec
in
enter
fiadds
or
stos
add
push
bound
ret
adc
cld
xor
out
stc
adc
int
xor
ret
add
xor
movsl
and
repnz
aas
enter
in
outsl
and
mov
jnp
dec
fimuls
inc
ss
mov
mov
cltd
out
sub
bound
inc
repz
cmp
adc
mov
std
or
sbb
jg
mov
push
dec
pop
inc
ss
test
fwait
sbb
repz
xor
push
fisubrs
repz
dec
loopne
mov
xor
push
xchg
into
mulb
cld
add
sub
gs
insb
mov
xchg
push
sbb
xchg
jge
push
shlb
loop
lret
test
lock
es
or
mov
shll
ret
pop
mov
add
mov
mov
and
add
inc
out
mov
ljmp
adc
pop
fstpt
or
ljmp
xchg
dec
pop
push
add
add
stos
or
xchg
scas
dec
fsubs
pop
inc
add
fcompl
xchg
or
push
js
jp
xlat
pop
mov
rcrl
in
or
add
and
xchg
dec
aad
mov
push
lock
or
inc
addl
sahf
jae
cld
and
pop
mov
aas
in
xor
imul
lcall
loopne
fsubr
jge
jg
jo
mov
outsl
fs
scas
mov
mov
es
push
repnz
dec
pop
stos
imul
lods
push
sub
sub
sbb
or
scas
cmp
inc
fimull
mov
fidivrl
lcall
inc
and
cli
mov
mov
cmp
fs
loop
push
fs
pop
int
mov
mov
test
mov
cmpsb
sub
fldt
adc
shrl
iret
mov
clc
test
jb
push
xor
xchg
outsb
imul
bnd
or
push
mov
and
mov
aad
ss
sbb
or
test
push
enter
pusha
sbb
pop
outsb
lods
loopne
adc
mov
xchg
andl
shrl
popa
cmpsb
fadds
shl
lret
xor
sub
aam
jge
mulb
cmp
mov
adc
or
mov
movsb
aam
nop
icebp
mov
xchg
mov
hlt
flds
test
sbb
pop
xor
in
dec
or
ret
jb
adc
xchg
cmc
and
lret
jns
lds
pop
call
sets
mov
jbe
repz
pop
dec
or
dec
leave
imul
outsb
xchg
bound
jp
leave
imul
das
sub
stos
pop
xor
movsb
sahf
inc
roll
outsb
adc
pop
leave
xchg
jle
aam
xlat
pusha
imul
inc
sub
js
shlb
scas
adc
sub
jae
push
cmp
movb
test
jno
adc
mov
or
lret
cmpsb
jp
jo
push
cmp
stc
in
out
fsubrs
sqrtps
out
in
mov
cli
add
xor
and
cmp
dec
int3
loope
and
jne
insb
xchg
mov
xlat
cltd
cs
int
das
jae
mov
cmpl
dec
sbb
jnp
or
testl
add
xor
push
xchg
pop
lret
cld
cld
jb
insl
ljmp
mov
bnd
sbb
ds
inc
mov
popa
sbb
cmp
aad
lcall
iret
lcall
and
ret
jnp
adc
cmpsb
dec
imul
sub
xchg
jle
repz
jge
iret
in
mov
jg
add
shlb
or
or
xchg
dec
dec
jp
pop
test
xlat
lock
sti
out
adc
std
pop
sbb
mov
add
inc
push
sub
dec
sub
lds
hlt
es
movsl
mov
pusha
andb
inc
jmp
xor
scas
jnp
add
inc
xchg
and
aaa
aad
mov
insl
dec
scas
sbb
aas
mov
mov
imul
inc
jg
adc
inc
shl
adc
loop
aam
andl
mov
jmp
fmull
sub
lret
sub
fldcw
pop
mov
dec
pop
dec
mov
inc
mov
push
mov
in
movsl
push
insb
imul
dec
jle
sub
int3
popa
cmpsl
cmp
outsb
and
mov
cltd
mov
into
repz
push
repz
cli
mov
mov
ret
push
fstpt
push
jo
loop
sub
pop
fs
mov
pop
cmp
inc
sub
xchg
cmpsb
data16
bound
sti
test
and
mov
mov
push
jg
add
mov
mov
fldenv
push
xor
iret
imul
movsb
lahf
mov
insl
pusha
mov
rolb
jo
cbtw
jl
mov
data16
jle
ret
aas
lret
dec
int3
ds
ljmp
in
sub
inc
cmp
adc
cli
sbb
dec
aas
dec
jo
or
mov
jp
push
jg
aad
xor
adc
mov
test
add
test
scas
xchg
jo
cs
stos
mov
repz
out
in
xchg
test
push
or
fldt
xor
aad
idivl
cwtl
mov
or
imul
ret
xor
jmp
insb
inc
push
fwait
test
xchg
clc
push
sahf
push
popa
mov
sub
dec
cmp
dec
mov
stos
mov
rcrb
iret
dec
mov
mov
fistpll
arpl
shlb
sub
inc
sub
shl
push
mov
sub
popa
dec
mov
test
lea
pushf
mov
lea
cmp
add
or
push
fcomp
pop
mov
mov
test
scas
push
add
lea
shll
cmc
xor
pushf
mov
jno
sbb
pusha
test
imul
int3
ljmp
pushl
stc
dec
inc
pop
sbb
pop
neg
std
movl
xchg
fldcw
imul
push
pop
addr16
fimull
mov
mov
sub
sarb
lods
lods
ja
pushf
or
pop
scas
iret
daa
iret
subb
arpl
loopne
mov
or
xchg
fucomi
int3
dec
or
jp
icebp
mov
jge
cs
add
and
dec
fyl2x
aad
dec
cmp
mov
sub
mov
adc
cltd
inc
sar
push
popa
lods
pop
mov
mov
dec
mov
mov
int3
inc
pop
adc
insl
sub
jns
push
jp
mov
mov
nop
xchg
xchg
aas
xchg
jno
jmp
sub
dec
es
xor
mov
jle
inc
mov
xchg
mov
std
pop
mov
scas
test
jmp
js
sti
fsts
mov
scas
insw
movsb
fmulp
jo
jge
dec
adcb
inc
out
sahf
mov
shll
imul
pop
ror
insl
pop
sbb
lcall
push
dec
sbb
mov
pop
lea
inc
popf
sahf
lock
push
movb
jge
enter
lods
sub
inc
data16
mov
mov
insl
cmpsb
insl
test
sbb
xchg
inc
sahf
lods
sbb
inc
insb
fisttpll
or
mov
ds
lcall
inc
fldl
mov
sbb
aas
inc
rolb
or
or
or
xor
mov
jle
lea
jle
loopne
les
sarl
mov
xchg
ret
jmp
xchg
jno
jb
or
jbe
adc
mov
push
cmp
fisubrl
jl
popf
jmp
into
mov
mov
xorl
adc
popa
ja
ret
push
cltd
repz
fistl
xchg
movl
hlt
clc
mov
jge
add
outsl
sbb
inc
iret
sub
sarl
aad
and
loopne
mov
jg
popf
mov
add
pop
pop
sub
fs
xor
cmp
lods
shll
sub
xor
cmp
cltd
push
mov
mov
loope
inc
call
shrl
cmp
mov
arpl
repz
adc
adc
test
and
stos
cmp
xorb
test
jle
rolb
mov
sub
and
aaa
cmp
and
inc
imul
mov
mov
stos
adc
je
or
sub
addr16
aaa
out
les
test
lret
in
and
pushf
shlb
and
sbb
add
mov
cli
mov
inc
push
inc
cmpsl
scas
negl
xor
push
push
jb
stos
popf
mov
popa
adc
cmp
stc
and
or
and
xor
mov
mov
jbe
add
repz
and
sbb
movsl
pop
test
dec
std
out
sbbb
cmp
xchg
sbb
and
mov
loop
adcb
push
push
mov
jbe
subb
fwait
out
and
xor
mov
push
clc
imul
sbb
insb
popa
fcoms
mov
aad
xor
or
cmp
mov
xchg
push
adc
popa
lea
imul
dec
psubusw
and
insb
je
popf
mov
lret
mov
stos
lods
and
adcl
pusha
mov
mov
es
ss
push
out
in
dec
push
sub
mov
push
pop
and
icebp
out
cmp
mov
jb
sub
jle
xor
iret
decl
dec
pop
dec
cmp
push
mov
arpl
jge
xor
xchg
and
jle
pop
ret
push
into
jecxz
loop
inc
inc
and
lcall
lods
shrb
out
push
xchg
cmove
push
push
aaa
loopne
inc
mov
mov
inc
xchg
jp
jno
add
lods
cmp
stos
das
jmp
sarl
xchg
cmpsl
jmp
jb
mov
fsubl
jge
mov
imul
mov
jp
std
jp
stos
pop
test
jp
jne
pop
repnz
dec
iret
mov
push
push
loopne
mov
mov
mov
pop
pop
mov
mov
shrl
lret
sub
mov
fbld
mov
outsb
fwait
stos
pop
imul
loop
cmp
mov
imul
xchg
sub
pop
xchg
cmpl
into
aad
in
call
xor
sbb
mov
pop
mov
loope
jmp
and
pusha
out
movsb
inc
inc
sbb
in
pushl
jae
mov
jno
inc
add
cli
mov
loope
cmp
pop
data16
inc
jle
cmpsl
test
cwtl
jno
mov
ret
ja
mov
add
and
ficomps
inc
fs
jne
imul
cmc
xchg
mov
dec
js
testl
test
subl
xlat
aad
push
ret
js
sbb
sbb
inc
std
or
negl
int3
add
lret
movsb
fbld
pusha
loope
mov
sahf
pop
cmc
sub
call
aaa
in
lret
xchg
sub
push
js
das
hlt
insb
imul
xchg
pop
iret
xchg
xchg
jecxz
ss
aam
pop
mov
jle
xchg
mov
ja
pop
sub
es
stos
dec
pop
dec
cmp
pop
les
xor
or
mov
enter
and
clc
cmp
and
mov
mov
lock
push
inc
jns
fildll
out
out
pop
ret
xchg
push
adc
int3
xchg
jb
push
out
negl
mov
outsl
push
rolb
or
adc
mov
mov
cmp
pushf
mov
xchg
rcrb
popa
sub
dec
pop
inc
data16
push
nop
mov
loope
jnp
movsl
inc
inc
xor
bound
jnp
stos
shr
imul
ss
add
fistpl
lods
xchg
dec
xlat
push
fs
mov
insb
cmpsl
push
xchg
or
adc
hlt
or
push
shlb
out
pushf
add
test
push
jg
sub
jne
dec
push
xchg
fwait
adc
xor
cmpsl
inc
sahf
push
rcll
ja
test
push
cmpsl
pop
and
cld
rcll
out
sub
mov
hlt
shlb
scas
loop
in
mov
lahf
push
fcompl
push
in
sub
push
fiadds
adc
jnp
jg
fisttpll
dec
sbb
aam
outsl
jo
or
imul
cmpsl
and
xchg
push
adc
aaa
cli
shrl
fidivs
fistl
xchg
ss
js
fcoms
sub
mov
jp
mov
enter
inc
push
in
mov
inc
xchg
mov
xchg
arpl
shrb
mov
fcmovne
sti
and
int
ds
pusha
cs
xchg
sbb
out
lret
pop
mov
imul
mov
push
jnp
test
mov
pop
mov
out
pop
inc
and
aaa
add
addl
repnz
cmp
lock
imul
mov
inc
jl
rorb
jne
dec
inc
roll
xchg
enter
jmp
mov
cld
lods
dec
fwait
mov
out
stc
inc
ret
dec
insb
xorb
xor
push
stos
sub
movsb
or
lret
jp
fmull
mov
inc
mov
cmp
cmovnp
cmc
sbbb
lcall
dec
fisubs
arpl
mov
xor
clc
clc
adc
gs
shll
sbb
adc
jns
push
rcrl
sbb
inc
pushf
lea
xor
fiaddl
cmc
lods
aas
inc
sbb
dec
in
dec
push
mov
inc
fimull
lock
sbb
sbb
aas
outsb
dec
inc
jb
sbb
mov
pusha
mov
stc
test
cmpsl
xchg
ja
and
jecxz
scas
ret
and
mov
test
je
mov
cmpsl
out
push
adc
push
in
std
dec
ja
jne
push
and
aaa
pop
pushf
mov
shlb
sub
mov
push
mov
cmpsb
dec
cmp
out
push
cs
aam
pop
fmull
pop
out
sub
roll
sub
loopne
ret
mov
shrl
cmp
incl
adc
xor
mov
test
in
rorb
pop
xchg
inc
push
loop
and
push
pop
dec
mov
inc
stos
icebp
pop
inc
and
mov
aam
xchg
sub
push
sbb
xchg
hlt
mov
call
mov
mov
mov
and
push
mov
xchg
inc
jb
mov
lahf
lahf
adc
mov
lret
arpl
or
mov
pusha
cs
xorb
test
pushf
cmp
std
sbb
out
dec
mov
push
stos
nop
pop
push
and
jo
push
mov
cli
imul
jmp
adc
lock
fs
jne
in
test
shrb
scas
sub
je
notl
lds
mov
and
int3
and
scas
jge
mov
xchg
ret
ljmp
adc
xlat
orb
loope
sahf
add
mov
out
push
jb
jb
jge
push
push
stos
mov
test
xchg
test
push
bound
es
mov
cmp
cs
and
inc
dec
xor
insb
mov
inc
jle
lods
or
ret
ljmp
lods
xchg
cmc
cltd
lock
and
scas
out
push
cmpb
mov
pop
adc
shlb
addr16
lcall
mov
rcl
mov
test
cs
bswap
dec
push
push
js
pop
scas
mov
loopne
mov
inc
addl
mov
cmp
rolb
roll
or
mov
js
cmp
repnz
mov
jb
cmpsb
cmp
daa
adc
out
and
lea
aas
loop
test
lea
out
dec
data16
int
addr16
dec
je
scas
insl
and
and
inc
mov
bound
les
add
and
aas
mov
add
add
out
jo
outsl
lret
movsb
jmp
popa
std
es
shll
dec
xor
and
mov
ror
call
cmpsb
ret
push
outsb
push
sub
jle
divb
and
push
mov
jo
lock
adc
ss
outsb
adc
outsb
subl
mov
inc
sbb
mov
out
stc
add
adc
sbb
sub
iret
fwait
and
sti
das
fists
daa
push
adc
cmp
xchg
mov
imul
jbe
push
ret
lea
xchg
pop
xor
rorb
and
inc
xor
push
mov
fsubrp
outsb
dec
mov
or
sub
jp
add
sbb
and
in
adc
icebp
lahf
push
shll
cmp
cmc
mov
adc
lea
pop
pop
fwait
int3
and
xchg
dec
mov
lods
jns
jge
aad
push
sub
loopne
ds
or
jno
dec
call
dec
cmp
js
in
pop
out
and
jae
rol
into
add
cmp
incb
mov
adc
fdivr
cmpsl
jecxz
sub
xchg
xchg
dec
loope
dec
jmp
loop
enter
pushf
add
std
rcrl
or
sbb
cltd
and
pop
shr
mov
pop
pop
hlt
insb
mov
xor
inc
pop
and
fdivr
std
sub
je
int3
scas
cmp
xor
vpunpckhwd
sub
into
add
cld
addps
movsl
jno
mov
lock
push
jle
bound
cli
movsl
call
addr16
rcll
mov
cmpsb
sbb
and
mov
mov
daa
scas
movsb
ret
sub
push
jne
pop
jbe
outsb
movsl
loop
ror
xchg
sub
mov
push
leave
ss
inc
push
inc
int3
inc
repnz
fistpll
push
pop
and
iret
and
and
jl
jo
xor
sbb
cmp
mov
out
jp
stos
in
std
insl
jle
jne
pop
std
cmpsl
addb
out
or
jo
push
outsl
mov
mov
loopne
mov
lret
push
dec
loope
iret
loopne
arpl
sar
jle
pusha
mov
mov
pop
ficoml
jecxz
test
enter
test
cmp
mov
jne
add
frndint
out
cmc
inc
in
fsts
mov
mov
push
pop
jb
jnp
in
lahf
dec
lahf
loope
jae
cld
jp
cmp
jle
in
cmp
add
pop
insb
ret
in
aas
push
pop
jne
add
cmpsl
mov
xor
orl
mov
xor
pop
mov
mov
add
test
pushf
enter
inc
leave
daa
mov
lcall
js
dec
std
lock
lods
dec
adc
in
sbb
mov
ror
xchg
xchg
jne
cmp
adc
pop
jmp
push
lahf
mov
sub
daa
sbb
les
add
lret
ret
add
rorb
inc
data16
sub
jecxz
cli
dec
iret
add
repz
mov
add
insb
cli
scas
inc
cmp
call
xlat
cli
out
lea
cmp
adc
mov
enter
out
push
ficomps
mov
enter
out
hlt
jmp
stos
arpl
aaa
punpckldq
repnz
xchg
or
push
pusha
push
jecxz
fisubrs
cmpb
pop
jns
xchg
mov
mov
mov
inc
cmp
scas
jne
pushl
outsb
or
in
sbb
lods
jl
js
in
movsl
in
jp
nop
in
jne
stc
cli
jg
call
push
cmp
je
add
xchg
push
test
test
mov
mov
jb
scas
sub
sub
and
loope
mov
mov
mov
cmp
adc
scas
loopne
ljmp
pop
daa
mov
cmc
mov
pop
sbb
push
jl
mov
fwait
outsl
pusha
mov
out
sbb
imul
jo
mov
xchg
paddsb
sarl
push
lds
test
mov
xor
loop
pop
push
movaps
daa
imul
popf
add
push
scas
push
pop
pop
or
mov
ret
data16
inc
neg
addr16
lds
inc
shl
lret
push
or
outsl
call
push
jo
sbbl
aam
ret
fucomip
xchg
data16
mov
inc
dec
cwtl
iret
loopne
cmp
call
push
pop
jo
popf
out
pop
or
loope
in
aaa
arpl
out
xchg
adc
fdivrs
subb
xchg
lods
push
es
adc
inc
mov
add
pushl
jnp
into
addl
push
insl
jmp
mov
inc
pop
insb
push
cmpsb
insb
push
jmp
mov
cmp
pop
sub
int
xor
xor
mov
popa
js
xchg
push
push
sti
adc
mov
xor
loope
adc
mov
inc
and
ret
fidivrl
pop
adc
cli
lods
inc
subl
ret
push
inc
mov
scas
in
out
into
sub
rcr
ffreep
cli
movsb
mov
mov
std
pop
mov
add
sbb
ss
cmp
dec
pusha
jl
imul
test
mov
aad
cmp
test
jl,pt
das
rolb
inc
insl
push
mov
push
push
nop
mov
sahf
or
mov
cld
test
push
repnz
nop
test
js
inc
cmp
push
stos
ficoms
pop
mov
sbb
push
mov
aaa
and
aam
popa
nop
aam
setae
ret
cmp
cmp
xchg
push
fisttpl
xchg
lods
inc
push
xchg
hlt
add
rclb
test
in
addr16
jb
add
rcll
mov
mov
push
sbb
push
push
sbb
fnstsw
ds
inc
fadd
mov
in
lahf
stos
scas
xor
in
mov
sub
push
aaa
or
shll
mov
add
xor
push
dec
fnstcw
xchg
call
fisubrl
mov
rclb
sub
adc
in
addr16
test
push
mov
into
test
push
fdivl
inc
stos
sbb
adc
inc
divb
stos
aad
jmp
jmp
stos
cmpsl
scas
jl
outsl
pop
cmp
xchg
adc
or
lcall
in
mov
sbb
rorb
pop
mov
xchg
adcb
shl
out
add
mov
mov
xchg
push
addr16
xor
aas
pop
push
pop
pop
bswap
jecxz
jae
movsl
or
push
dec
test
and
xchg
cmp
aas
push
ret
cmp
aad
mov
les
out
dec
jno
add
andb
repnz
movsb
xor
xlat
mov
pushf
lret
call
popf
fprem
push
cmp
add
incb
sub
stos
mov
or
nop
popa
or
pop
pop
jecxz
ret
lahf
divl
std
inc
cltd
jbe
data16
mov
pop
insl
fildll
and
push
lcall
adc
xlat
or
push
pop
int
ret
sar
lods
sbb
nop
mov
cmp
aaa
fwait
adc
and
mov
lahf
int
cli
dec
and
popa
push
dec
mov
fs
idivl
aad
mov
insl
js
push
sbb
insb
cmp
xchg
adc
fld1
cmp
mov
mov
inc
xor
ss
cs
fldl
mov
shrl
xor
push
mov
xor
sbb
dec
je
repnz
and
cmp
jp
pop
xor
in
inc
divl
adc
cmpsl
fwait
inc
add
lock
in
dec
jmp
inc
sbb
pop
nop
insb
dec
xor
or
sub
pop
add
jecxz
stos
nop
pop
es
loop
add
mov
inc
inc
ljmp
cmpl
cltd
dec
push
out
jge
push
push
jl
pop
jbe
sbb
repnz
loope
incb
rorl
movsl
cmp
nop
pop
pop
push
outsl
push
sub
sub
lcall
cwtl
lret
mov
dec
js
ret
fisubrs
lcall
inc
pop
mov
fdivrs
or
cld
jo
cmp
xchg
sahf
nop
mov
sti
subl
js
outsb
cmpsl
std
push
push
stc
insl
mov
popf
push
dec
fwait
mov
pushf
mov
pushf
test
and
imul
cli
xor
mov
out
repz
roll
jne
mov
push
add
push
in
test
je
gs
dec
cmp
sbb
dec
addb
stc
cmpb
add
lcall
aam
push
jbe
ss
and
and
push
scas
cwtl
cli
xor
jle
jnp
movsl
pop
push
mov
sub
incb
or
cld
rcll
popf
jle
mov
sub
mov
sarb
pop
pop
lds
out
jae
push
dec
push
orl
rol
xchg
mov
mov
bound
mov
dec
roll
inc
push
imul
sbb
xor
into
pusha
es
mov
or
es
jno
mov
push
data16
add
jecxz
scas
push
xchg
loop
pop
jg
dec
inc
cmpsb
lahf
mov
stos
inc
addr16
cmpsb
inc
es
sbb
and
lds
shrl
dec
xchg
dec
insl
scas
and
popf
inc
jno
cwtl
add
aad
xor
popf
cmc
popf
sti
add
push
ds
in
lret
cmp
and
das
mov
xor
out
inc
dec
imul
or
out
inc
jnp
fisubs
loope
ja
and
fcmovnb
dec
out
in
arpl
in
stos
mov
jmp
pop
jecxz
lcall
nop
pop
scas
pop
int3
sub
inc
rorb
mov
lea
sbb
jbe
xchg
xchg
in
test
insl
cld
loope
fcmovbe
mov
imulb
jle
daa
sbb
popf
inc
push
rcr
mov
out
imull
pop
outsl
lcall
insl
ja
or
mov
dec
inc
dec
aaa
popa
sahf
cmp
dec
pop
jmp
jmp
in
pop
arpl
insb
lahf
xlat
mov
push
and
xor
addb
movsl
hlt
gs
jbe
hlt
push
fdivrs
xchg
xchg
mov
xor
ret
mov
sub
jmp
mov
pop
nop
pushf
sbb
lods
jo
cmc
shlb
pop
popa
lret
testb
int3
xchg
gs
vprotd
mov
or
aas
push
add
fnsave
sbb
scas
or
push
add
xor
orl
mov
sub
andb
jl
sub
ficomps
int
aam
sub
loop
movzbl
jmp
daa
aaa
jmp
scas
mov
jnp
addr16
inc
and
test
mov
cmp
ficoml
vpsubusw
scas
lret
lock
out
dec
mov
and
sub
enter
mulb
mov
add
lret
xor
das
cli
jb
cmp
mov
xchg
push
repz
push
pop
jle
pop
into
push
sbb
xor
adc
pop
xor
icebp
icebp
ret
xor
jmp
xchg
aaa
dec
mov
mov
push
repz
js
repnz
jmp
popa
mov
out
enter
pop
out
addr16
mov
dec
dec
push
hlt
stc
mov
fs
cli
push
mov
rorl
aas
loop
push
cmp
movsb
das
or
cmp
inc
jle
push
rclb
sbb
pop
in
shll
mov
xor
lods
inc
or
dec
jmp
sbb
mov
or
test
jle
js
mov
push
loop
repnz
pop
dec
sub
sub
push
jo
adc
negb
cwtl
notb
xchg
ret
sub
cmp
rcrl
ljmp
push
dec
mov
int
jl
jae
inc
shlb
dec
into
pop
mov
lods
je
and
or
push
inc
mov
in
insl
jp
hlt
fiadds
ja
fnstcw
jb
cmp
int3
hlt
inc
fsubrs
mov
shlb
shll
xor
les
ss
shrb
cmp
adc
xor
ss
shlb
cmc
mov
mov
test
cmp
stos
jne
xchg
mov
outsl
mov
ja
mov
mov
repz
dec
outsl
inc
sti
jnp
push
stos
xor
xchg
xchg
push
mov
dec
das
jno
xchg
inc
adc
xchg
mov
out
int3
and
inc
dec
fcmove
or
mov
inc
sub
sahf
out
xchg
insb
rcr
xchg
inc
enter
sub
aaa
lock
add
bound
or
mov
cmp
call
icebp
popf
outsb
jg
fs
sbbl
nop
jp
testl
lods
adc
es
out
xor
shll
xchg
cmp
xchg
scas
cmp
jmp
ljmp
fisubrl
jmp
test
pop
lods
imulb
insl
xchg
push
push
insl
movsb
jb
aad
push
and
push
addr16
mov
shl
into
pop
arpl
out
fdivrs
inc
aaa
cmp
add
ljmp
cmc
xchg
jb
inc
cmp
cwtl
into
dec
sbb
xchg
cmpsl
cmp
adc
xchg
insl
aas
mov
out
mov
and
je
dec
and
sbb
jle
test
insb
push
mov
out
sbb
cmc
dec
mov
cmpsl
fmull
xchg
gs
xchg
movsl
sbb
or
addb
cmp
ret
pop
xor
lahf
sbbb
mov
xlat
jge
mov
dec
or
test
mov
cltd
xchg
sti
lock
lret
sbb
fnstcw
add
jb
xor
xor
cli
clc
gs
rcrb
xor
ds
out
push
jmp
data16
pop
or
push
add
pusha
jnp
jl
js
ss
or
nop
js
shlb
jnp
inc
add
xor
adc
into
push
add
adc
push
and
cmpsl
icebp
ficoms
and
adc
iret
sbb
loope
push
aad
mov
adc
push
push
or
movsl
out
adc
fdivr
push
into
jecxz
mov
jmp
lret
movaps
xchg
sub
dec
stos
dec
cwtl
sub
out
sub
pop
jae
xchg
rorb
lcall
jae
flds
in
cmp
push
insb
fs
clc
mov
outsb
cs
aad
mov
inc
fldt
cmp
loope
std
dec
push
sbb
inc
jno
cmp
jb
lea
scas
out
add
cli
test
cmp
es
insb
sub
mov
ret
add
xor
jge
push
outsb
and
mov
or
icebp
fbld
xor
and
jo
push
adc
orb
mov
enter
xor
jp
icebp
mov
add
rorb
mov
inc
push
push
mov
fwait
hlt
inc
lea
ret
jo
or
mov
xchg
add
das
mov
jno
jns
in
aam
clc
push
out
js
pusha
cmpsb
addr16
mov
leave
sbb
sahf
dec
fsubrs
leave
outsl
and
jnp
test
add
sub
push
das
or
test
and
insb
iret
dec
jge
xchg
dec
mov
mov
sahf
jmp
or
testl
or
push
xchg
adc
jo
add
sbb
push
ret
hlt
sub
repnz
sub
push
push
add
push
loop
sti
ret
jnp
fistl
arpl
mov
push
in
mov
or
pop
into
gs
mov
mov
insb
push
push
add
loope
add
mov
ja
ficomps
js
imul
cld
adc
repz
loopne
sarb
mov
cmp
js
jmp
mov
ret
mov
enter
stos
adc
shlb
push
in
xchg
jp
stos
call
cmp
sub
xor
loopne
pmulhw
loop
std
mov
push
aad
xor
repz
add
add
outsb
sbb
mov
xor
xchg
xor
imul
add
mov
cmpsl
enter
lods
aad
loopne
or
clc
sub
mov
sub
adc
inc
popl
push
lret
out
jo
adc
mov
or
push
fdivp
jns
lahf
jg
lret
xchg
call
nop
xlat
add
mov
mov
ret
outsb
adc
ret
xlat
lock
lret
and
fsts
inc
pushf
add
push
cmp
adc
mov
roll
cmp
lods
push
dec
imul
sti
addr16
stos
out
dec
pop
inc
or
push
scas
cmpsb
xor
repnz
fwait
popf
mov
lret
dec
in
xchg
adc
push
sbb
lea
add
lds
add
jmp
icebp
dec
fwait
sub
addl
cmp
dec
popf
pop
sub
mov
mov
fldt
or
test
mov
icebp
sub
pusha
movsb
xchg
ss
out
imul
pop
gs
scas
and
sub
push
sarb
push
push
xor
dec
call
clc
js
out
pop
movsl
popa
pop
xlat
pop
xlat
test
sbb
mov
pop
je
cli
mov
adc
dec
fsubl
jb
xchg
jp
loopne
dec
scas
pop
stc
daa
inc
dec
add
cltd
fldt
mov
adc
add
jne
mov
mov
out
push
sub
xchg
inc
and
mov
sub
jecxz
fmull
mov
jnp
mov
fildl
cmp
jbe
lcall
cmp
xchg
pushf
decb
mull
or
xor
xor
subl
and
lahf
xchg
jnp
bound
inc
std
dec
sub
dec
cs
inc
js
jbe
ficompl
in
sbb
mov
aam
push
in
pop
sub
adc
sub
scas
fnstsw
loope
push
addr16
add
lds
jle
cmp
insl
mov
les
xchg
mov
js
jno
outsb
and
shlb
les
data16
dec
add
pop
sbb
xchg
add
mov
jo
sub
sahf
mov
pop
out
int
dec
jb
jo
fs
imul
cmpsl
mov
add
call
pop
sbb
dec
add
sub
pop
jb
jbe
xor
mov
pop
in
ds
loope
lock
das
hlt
mov
adc
aam
aad
and
cmp
clc
idivl
push
xchg
shll
gs
js
sbb
mov
scas
inc
lds
pop
sub
out
xchg
jnp
push
in
jb
lea
mov
repnz
cmp
adc
out
lahf
lcall
pop
aam
stc
inc
mov
loope
lea
add
pop
loop
or
cmc
ret
mov
shlb
inc
outsb
cmp
rcrl
push
mov
negb
lahf
jl
test
and
ret
ljmp
testl
outsb
jecxz
xchg
stos
ret
in
fsubrp
pop
mov
and
jbe
outsb
arpl
pop
int
insl
inc
cmp
aad
fimull
push
or
mov
adc
dec
pop
ss
mov
out
popa
hlt
daa
daa
rclb
jge
inc
cmpsl
fwait
sarl
jo
std
mov
xchg
jle
stos
sub
lds
clc
fsubl
call
clc
sbb
inc
push
mov
push
inc
cli
testl
and
jp
lcall
pop
push
or
shll
and
xor
ficoms
xchg
int
imul
inc
dec
fisubrs
cld
cmpsl
xchg
loopne
push
fistl
jno
cli
xor
sub
mov
int3
mov
cld
jns
and
mov
or
repz
push
adc
sahf
sub
mov
ds
xor
outsb
jmp
loope
or
and
sbb
push
cli
push
ret
pop
and
aad
ljmp
test
push
lcall
pop
stos
out
dec
pop
dec
mov
xor
fsubrl
xor
jb
test
ret
add
sahf
loope
push
imull
je
mov
pusha
jmp
mov
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
