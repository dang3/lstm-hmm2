add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
cmc
adc
psrad
pop
loope
pop
fildl
push
add
add
add
push
add
add
xor
sbb
addl
add
add
adc
int3
add
add
aad
stc
add
add
lock
add
add
add
add
add
add
add
add
fldl
fldl
fldl
into
add
add
add
add
add
dec
add
add
adc
and
das
add
add
add
pop
add
add
add
add
and
sbb
inc
add
add
inc
add
add
add
setl
stc
add
add
add
xor
sbb
pop
add
add
lock
sbb
or
and
nop
add
add
add
add
add
push
add
add
add
and
sbb
inc
add
add
add
xor
sbb
dec
add
add
add
add
add
xor
sbb
imul
sbb
pop
add
add
add
je
sbb
out
add
add
lock
inc
add
add
add
add
mov
add
add
add
add
add
add
sbb
cmp
add
add
jo
movb
add
fldl
sub
test
clc
add
rolb
sbb
xor
inc
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
pop
add
add
add
add
pop
add
add
add
add
add
and
mov
add
add
cmp
add
add
imul
adc
adc
test
mov
pop
add
add
stos
add
out
add
pop
add
add
mov
add
add
add
add
add
add
add
add
add
add
dec
add
add
and
add
add
sbb
movl
clc
add
add
add
and
push
add
jmp
add
add
add
add
sbb
cmp
lock
add
add
add
add
add
add
add
xchg
aad
sbb
sbb
or
add
add
popf
add
adc
leave
add
add
add
add
add
add
add
stos
add
add
add
add
sbb
test
sbb
cmc
add
add
add
add
add
sbb
cmpsb
add
test
add
add
imul
add
add
add
add
add
gs
add
add
add
add
add
add
add
add
out
add
add
dec
add
add
add
add
add
add
add
add
add
out
add
xor
jo
add
add
add
inc
add
add
add
sbb
out
add
add
add
flds
out
add
imul
rolb
sbb
and
sbb
mov
add
add
add
mov
sbb
jo
add
sbb
mov
add
out
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
sbb
add
add
mov
add
add
add
add
add
add
add
add
add
addl
add
add
mov
sub
movsb
add
add
test
clc
add
add
add
add
stc
add
add
add
add
add
adcl
fcmovne
cmpsb
lahf
fsubrs
adc
cmc
push
sti
cwtl
cs
jbe
loopne
stos
mov
aam
out
pop
cmp
test
jle
cmp
sbb
out
xor
add
daa
push
dec
jo
and
dec
jmp
xchg
lods
mov
clc
rclb
push
mov
adc
shl
sub
push
inc
in
mov
sbb
mov
aam
mov
test
gs
out
fs
int
xchg
call
xor
push
lods
pop
cwtl
lea
fs
rcrl
jl
add
or
sub
or
dec
or
mov
add
mov
cmp
add
xor
out
aad
sub
out
inc
dec
xor
and
movsl
inc
loopne
mov
test
out
aas
ret
shrl
out
dec
add
dec
ja
bound
dec
and
loop
mov
vorps
sub
fldl
shr
jle
push
and
push
add
xchg
pop
iret
push
nop
add
inc
dec
popf
xlat
sti
mov
gs
adc
mov
hlt
roll
push
inc
shrl
mov
mov
popf
mov
sub
insl
pop
scas
test
test
inc
push
xchg
popf
or
test
mov
jg
xlat
push
clc
inc
loopne
sbb
jns
loope
xchg
jp
fnstenv
rcl
aad
or
ret
mov
nop
xor
pop
pop
xor
inc
pop
lahf
rcll
fidivl
and
fcomi
sbb
and
imul
or
mov
arpl
xchg
sbb
ficoml
sub
shl
push
jb
cmc
mov
jbe
or
pushl
xchg
popf
sub
data16
cmpb
jo
loop
sub
push
push
fwait
adc
xlat
repz
rolb
stos
cwtl
mov
mov
mov
inc
leave
push
xchg
inc
mov
mov
syscall
repnz
pop
je
dec
mov
fucomip
sub
push
test
mov
add
push
out
adc
lds
sub
xchg
lretw
pop
std
pop
ljmp
mov
add
push
add
je
xchg
dec
ret
divb
pop
mov
popa
cmp
int
adc
sub
je
cld
mov
out
ljmp
arpl
iret
sub
cwtl
jmp
push
mov
jg
cmpsl
mov
add
mov
iret
and
aaa
pop
das
sarb
cld
xchg
arpl
xor
jnp
pop
mov
mov
in
popf
inc
sub
movsl
pop
mov
addr16
and
pop
aas
sub
outsb
mov
push
ja
xlat
ds
push
adc
push
cmp
jle
rcll
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
les
add
xor
and
sbb
push
push
inc
fs
les
aam
les
inc
add
xor
and
push
add
xor
and
aam
les
mov
movsb
in
adc
add
xor
and
push
add
xor
and
aam
les
testl
inc
dec
cmp
lahf
je
inc
iret
call
out
push
ja
icebp
sti
jge
fcompl
jg
mov
add
mov
mov
loopne
jnp
mov
jnp
mov
adc
or
add
les
ret
mov
roll
loope
xchg
push
inc
and
jae
imull
inc
aam
and
les
jnp
xor
je
xlat
cmp
mov
test
xor
and
mov
dec
in
movl
inc
mov
and
fs
push
int3
mov
jl
and
test
xlat
orl
mov
movsl
icebp
or
add
xor
and
push
add
xor
and
aam
les
aam
les
add
xor
and
xor
jae
inc
xor
adc
xchg
enter
shrb
add
and
cmp
xor
pop
add
out
rcr
test
and
dec
pop
inc
inc
inc
push
jp
inc
xor
and
aam
les
aam
les
inc
add
xor
and
push
add
xor
and
aam
les
aam
les
inc
insb
stc
fnstenv
out
and
lea
xchg
lahf
int3
xlat
sti
jno
shlb
cltd
movsb
cmc
jge
jge
sbb
lret
shrl
ror
dec
jecxz,pn
adc
xor
jmp
add
xor
hlt
dec
cmp
hlt
dec
adc
or
aam
xor
imul
notb
or
mov
cmp
insb
mov
or
add
das
out
xor
push
shrl
mov
jo
das
sbb
cmc
loopne
mov
testl
cltd
lds
leave
pop
sub
cmp
test
das
clc
loop
ss
sbb
bnd
xor
bnd
loope
dec
adc
pop
jge
bound
cmp
in
bnd
sbb
mov
sahf
les
pusha
sti
divl
push
cmp
mov
add
xchg
sub
repz
adc
add
xor
and
lret
or
mov
fldenv
jmp
ss
xchg
jmp
mov
mov
lret
pop
and
mov
mov
rcll
movsl
add
movl
jns
sahf
inc
dec
push
ret
inc
int3
mov
dec
mov
cltd
inc
cmp
or
push
mov
dec
pop
add
cltd
push
ja
pushf
stc
add
scas
adc
jne
adc
out
in
jle
fsubs
in
add
into
sahf
outsb
xchg
nop
cltd
pop
ds
clc
sbb
loope
fmul
adc
dec
ljmp
and
es
xchg
clc
sbb
fs
mov
push
pop
push
xchg
sub
dec
idivw
mov
cmpsl
stc
testl
xchg
inc
stc
xor
in
push
jnp
mov
enter
loope
mov
leave
scas
rclb
std
pop
data16
scas
leave
jne
sbb
push
shrl
and
or
cmp
sub
in
adc
mov
enter
push
adc
adc
icebp
pop
xchg
int
xor
pop
pusha
out
bound
push
sub
and
sbb
push
dec
enter
sub
and
mov
clc
jns
mov
add
jae
fs
lea
pusha
mov
mov
sub
int3
fs
pop
rolb
mov
mov
xlat
pop
iret
popf
push
enter
jnp
jne
push
dec
jg
scas
xchg
das
cmpsl
and
bound
incb
in
xor
lods
jnp
cmp
inc
cmpsl
rorl
popf
xchg
mov
inc
add
mov
test
in
sti
dec
lock
stc
xor
loopne
jg
or
add
adc
rolb
sahf
fwait
xchg
pop
add
ss
arpl
jbe
inc
hlt
xor
push
lods
mov
sub
mov
lahf
scas
js
rcll
add
xchg
xor
xchg
xchg
push
pop
lret
ljmp
mov
insl
rcrl
push
gs
dec
push
loopne
fbstp
or
out
lret
test
adc
mov
fs
adcl
jmp
fldcw
das
jno
cwtl
rol
arpl
inc
xchg
mov
dec
cli
movsl
push
pop
insl
icebp
inc
rclb
sahf
lahf
lret
xchg
pop
cwtl
xadd
lds
sbb
aaa
sbb
andb
push
popf
leave
lea
sbb
jns
test
dec
push
stos
pop
pop
add
rorb
outsb
push
imul
cltd
cmpsl
in
cltd
and
inc
adc
in
xlat
or
repnz
push
stc
jecxz
sbb
addr16
ret
pop
cmp
insb
jp
int3
das
mov
mov
and
xorl
mov
xchg
dec
subl
stos
fidivrs
loopne
mov
add
mov
shrb
xchg
xor
stos
test
dec
pop
push
push
sbb
pop
mov
and
push
lea
mov
repz
std
aad
cmpsl
fldt
loopne
inc
adc
jle
xchg
loopne
jae
adc
and
ljmp
push
cmc
jns
ret
loopne
mov
dec
scas
sarl
cmp
sub
shrb
and
repz
mov
dec
jle
in
or
cmp
inc
in
sbb
fs
test
sahf
andl
addr16
cmp
mov
add
lret
sub
xlat
inc
addr16
lret
popf
orb
push
mov
xchg
sbb
jecxz
push
jg
mov
xor
xchg
lret
int
inc
adc
movsb
test
repnz
mov
mov
xchg
ret
test
jl
adc
or
xor
leave
and
fs
push
mov
fs
push
repz
sets
fildll
cmc
sub
ja
jb
xor
and
push
rorl
loopne
pop
xor
push
js
sbb
mov
jecxz
cltd
mov
xor
xor
dec
jp
jle
sbb
jle
cmp
mov
pop
fcmovnbe
jl
imul
cmpsl
ja
in
test
mov
xor
mov
cmp
mov
addr16
sub
loope
mov
ds
stc
jg
addr16
push
shlb
xchg
arpl
test
aam
es
ret
shlb
cmp
cltd
mov
add
sub
sbb
bound
pop
out
sti
daa
js
mov
int
imul
jb
adc
lods
out
push
push
mov
xchg
sti
repz
adc
sbb
ja
mull
mov
sub
mov
fcoml
frstor
pop
pusha
and
cmc
sbb
stos
inc
orl
scas
sub
out
push
mov
nop
stc
adc
andb
in
ljmp
shrb
repz
stc
adc
out
sub
jns
fsubrl
movsb
cmpsl
cmp
adc
lock
jb
mov
int3
adc
mov
ret
or
imul
insl
in
lock
and
xchg
outsl
mov
rol
fstl
mov
xor
or
jge
and
push
cltd
sbb
and
ja
cs
je
mov
jle
imul
repz
jnp
jg
sub
adc
fadd
cmp
sub
or
rclb
or
jns
jb
cmp
cmp
pop
pop
ja
pusha
mov
pop
mov
jbe
inc
aas
rcrb
jae
adc
mov
cmp
jge
or
mov
imul
cwtl
mov
dec
leave
pusha
cmpsl
out
mov
enter
in
lcall
jmp
fimuls
push
mov
sub
scas
mov
mov
scas
jns
shlb
mov
shll
inc
nop
imul
xchg
popa
mov
jbe
jmp
mov
subb
push
and
fs
xchg
adc
dec
std
inc
sbb
or
shll
shrl
fadds
and
into
cmc
mov
clc
pop
xlat
imul
dec
lods
in
mov
in
lds
pop
sbb
or
dec
pop
test
setae
add
pusha
insb
sbb
dec
jge
inc
or
push
and
dec
adc
stc
or
jne
cmc
and
loope
arpl
out
in
xchg
xchg
stos
mov
xchg
sbb
xchg
mov
push
inc
push
sets
mov
repnz
mov
repz
xchg
cmp
addl
sub
or
sbb
mov
pop
jp
test
insb
fs
fnstcw
xchg
and
cwtl
push
push
cmp
cmp
call
js
mov
daa
inc
cwtl
push
mov
mov
lds
jge
inc
inc
jle
lods
adc
cmpsb
hlt
insb
xor
pusha
inc
aaa
stos
in
cmpsl
fdiv
imul
xchg
cmp
pop
add
jge
call
cld
push
mov
push
sbb
mov
sub
sub
pop
adc
fdivrs
xor
and
and
or
test
add
movl
jg
imul
push
jge
outsb
push
xor
xor
mov
cs
pop
ret
popf
cmpl
cmp
std
and
jnp
fbld
jle
pop
insl
aaa
xorl
mov
and
mov
add
jno
sub
out
add
cmpsb
inc
adc
into
mov
mov
xor
mov
xchg
mov
mov
inc
mov
adc
movsl
push
xor
rorl
or
loop
mov
sbb
and
std
adc
cmpsb
pop
sub
pop
jle
jns
pop
aad
mov
pop
movsl
adc
jnp
add
lcall
call
cmp
xor
cmp
add
and
mov
jge
and
jmp
xchg
pusha
pop
mov
clc
push
inc
xorl
movsb
sarb
testb
xchg
cli
insb
in
dec
out
sub
movsl
lods
inc
xor
in
add
frstor
xor
mov
ret
into
push
push
fldt
cmp
add
aam
movsl
fldcw
or
or
inc
fisubl
movsl
fcoml
jp
jno
inc
add
mov
inc
stos
and
iret
int3
xchg
jecxz
into
imul
xlat
dec
sti
test
iret
sbb
jnp
pop
mov
imul
inc
popa
cmpsl
cmpxchg
leave
pop
inc
cld
in
sbb
push
lock
fistpl
jbe
xlat
pop
dec
pop
in
data16
movsb
push
dec
inc
and
xchg
lret
ffreep
test
push
jmp
sub
iret
jge
hlt
daa
cmp
jnp
dec
dec
sarb
fistpl
negl
cwtl
xorb
mov
call
andl
subb
bound
push
sub
addl
add
pop
fcmovnb
adc
dec
aaa
and
shlb
test
mov
pop
jmp
nop
add
dec
jno
xor
cli
imul
mov
mov
into
cmp
fcomp
stos
mov
and
imul
adc
ljmp
cmp
push
pop
sbb
sub
mull
mov
mov
inc
mov
in
fldcw
mov
push
popl
dec
inc
in
neg
scas
rcl
dec
loopne
cli
xor
sti
movb
mov
xchg
fdivs
xor
shll
sub
loop
xchg
push
xchg
adc
adc
add
xor
stos
imul
scas
or
jbe
pop
shl
xchg
sbb
xchg
rol
shrb
dec
in
nop
add
fucom
inc
pop
sbb
in
ljmp
cmpsl
jo
cs
pop
test
inc
sahf
xlat
sub
adc
push
xor
loopne
xchg
jecxz
scas
dec
daa
dec
pop
or
lret
xchg
sub
adc
ljmp
push
push
push
inc
xor
xor
aaa
and
aaa
out
sbb
lods
fwait
mov
daa
pop
adc
adcb
adc
mov
insb
lds
cmp
loop
mov
mov
hlt
sbb
mov
sub
jne
dec
push
data16
inc
in
les
pop
fcoms
mov
fisttpll
test
cmp
mov
out
cmp
jbe
and
xchg
ds
inc
out
push
mov
mov
imul
mov
pop
xor
test
aaa
ret
and
add
fwait
test
lcall
sub
adc
pusha
xchg
fstps
imul
lods
mov
push
lock
inc
fisttps
enter
inc
xor
pop
sar
lahf
int
add
cmp
jge
push
and
out
dec
mov
xchg
xor
xor
movl
jno
jns
popa
jle
add
fldenv
clc
insl
cmp
mov
insl
aam
mov
es
cwtl
push
call
xorb
add
pop
repnz
pushf
or
stos
lods
add
repnz
sub
pop
mov
mov
mov
outsl
movsl
aaa
mov
adc
jb
std
jl
icebp
adc
jo
push
jbe
das
add
mov
daa
push
adc
xlat
in
pop
mov
iret
mov
pop
mov
push
xlat
lret
inc
lea
loopne
in
mov
lock
mov
pop
loope
fstpt
cmp
dec
xlat
fldt
sub
enter
cltd
cmp
dec
or
stc
repz
mov
mov
in
adc
jl
mov
mov
add
adc
aas
inc
and
dec
outsl
das
insl
add
addl
sahf
xor
out
cltd
xchg
out
or
jmp
fimull
mov
es
ror
fwait
aad
jne
xlat
movsb
adc
rclb
inc
inc
test
ja
xchg
gs
clc
jbe
test
xchg
or
sub
inc
pop
cmpb
in
inc
jmp
leave
dec
mov
movsl
mov
or
js
sahf
ljmp
not
cmp
cmp
mov
mov
mov
out
lea
icebp
movsl
sbb
xchg
pop
cmp
aaa
les
fnstenv
incl
aaa
mov
out
shr
lcall
inc
xchg
cli
pop
std
adc
and
clc
mov
orl
stos
popa
jp
cs
mov
sbb
outsl
mov
xor
aaa
stos
aaa
adc
stos
lahf
hlt
repz
rcrl
add
icebp
xchg
add
popa
pop
add
mov
jbe
xor
xchg
fidivs
loopne
and
pop
sahf
push
inc
repnz
shlb
ss
mov
out
fisttpll
das
ss
push
cmpsl
mov
add
pop
mov
xchg
push
sub
ret
stos
pop
mov
daa
cmpsb
into
loope
hlt
aam
push
xorb
notb
xor
mov
fildll
mov
fstl
pop
and
repnz
loope
xchg
sbb
je
aad
int3
or
or
lret
call
jmp
cltd
jae
repz
jl
movsl
out
mov
add
popa
das
in
mov
inc
outsb
cmpsl
hlt
pushf
mov
fnsetpm(287
test
or
jae
mov
fstl
cli
daa
jmp
sbb
lcall
push
dec
loopne
mov
psubsb
fdivl
jecxz
sbb
rep
adc
inc
jmp
dec
push
nop
mov
ret
jne
divl
pop
cwtl
imul
ljmp
jl
test
addr16
adc
cmpsl
cmp
lods
cmp
cwtl
fidivrl
jo
fisttpl
insl
sbb
aas
fwait
in
pop
or
rolb
fmuls
push
cmpsb
inc
inc
rcrb
jb
xor
outsl
fstl
outsb
lods
adc
jno
adcl
and
imul
icebp
or
push
sahf
nop
and
dec
je
push
shrl
push
das
mov
adc
push
adc
sbb
mov
cmp
pop
jmp
imul
cli
xchg
cmp
pop
mov
add
lds
fwait
rorl
fildll
aaa
arpl
pop
adc
das
mov
adc
jno
in
pop
movl
dec
cmp
popf
xchg
dec
andl
push
movsl
push
sub
ja
push
inc
call
jge
push
jl
xchg
mov
and
inc
adc
mov
jbe
add
xor
mov
and
ja
adc
jecxz
push
mov
adc
cs
sbb
js
pop
aaa
push
sti
fld
dec
test
idivl
jge
leave
loopne
cmp
and
out
add
push
aam
loope
push
lds
push
or
cmp
lret
and
adc
pop
arpl
addr16
ja
jb
dec
push
ds
fadds
xchg
inc
dec
aad
mov
popf
pop
pusha
test
pusha
lds
inc
fimuls
in
repnz
or
jmp
in
inc
adc
sbb
test
fucom
lret
loopne
jge
adc
xchg
cmp
sbb
and
lahf
push
mov
call
fwait
jp
mov
aaa
or
add
xchg
fneni(8087
or
push
xor
stos
adc
mov
pop
jnp
jo
std
cmp
sbb
or
scas
mov
mov
mov
push
push
nop
push
push
into
stc
outsb
or
lds
push
dec
adc
or
mov
jbe
lock
sbb
pop
pop
jnp
insb
mov
add
adc
mov
ret
add
cs
xor
push
mov
shll
mov
dec
inc
jno
push
add
jg
adc
cmc
xor
pop
rcrb
cld
mov
mov
xchg
add
shl
ds
pop
ja
jbe
es
shlb
rcrl
and
ficoml
jecxz
fiaddl
lret
lret
xchg
out
inc
mov
hlt
imul
mov
sbb
ds
insl
in
leave
hlt
or
and
lcall
hlt
sbb
arpl
push
sbb
pop
jecxz
mov
into
cli
cs
sbb
movsl
inc
mov
mov
in
cmp
sub
es
sbb
lahf
xor
scas
and
lea
fiadds
cmpl
pop
pop
into
shr
outsl
fsubrs
jle
add
mov
sbb
or
mov
daa
adc
sti
sar
ret
ret
lods
icebp
sbb
aam
jp
push
sahf
sti
popa
fsub
pop
push
out
fiadds
push
jns
inc
or
loope
xor
jl
cmpsb
addr16
iret
cli
into
je
xor
push
stos
push
or
ret
add
jne
lock
fmuls
cld
sub
ret
mov
jp
lods
cmc
popf
jecxz
ss
push
shrl
mov
leave
xchg
mov
test
nop
jl
arpl
addr16
fdivp
inc
enter
loop
mov
sahf
jge
mov
hlt
xor
pop
add
mov
mov
inc
test
sub
rorl
pop
insl
mov
dec
ficomps
mov
push
repnz
mov
xchg
push
push
inc
std
movsb
cwtl
fwait
mov
xchg
repnz
xor
sbb
test
pop
jl
jle
xor
iret
cmp
mov
jb
inc
add
push
jo
shlb
cmpsb
mov
push
add
push
mov
cmpsl
test
pop
loope
repnz
push
fs
jb
and
rol
sbb
mov
rclb
xor
aaa
pop
sub
je
idiv
sub
push
pop
mov
adc
push
mov
push
adc
std
lods
dec
test
pop
xor
nop
outsb
xor
in
add
pop
jmp
push
outsb
rclb
push
pusha
xlat
push
xor
dec
gs
aam
xor
fucomi
daa
jb
xchg
ret
jno
xor
or
jle
mov
jb
dec
in
xor
daa
loope
sbb
push
pop
and
outsl
fisttpll
cmpsl
or
jb
stos
lods
jns
sub
fistps
inc
adc
fldl
mov
stc
pop
sti
daa
add
add
punpckhwd
adc
fs
jae
adc
out
cmp
mov
jae
and
xor
orl
mov
push
int
repnz
fstpl
lret
lods
jg
pop
push
cmp
int
aas
stc
sti
xorb
jge
aas
out
xchg
jl
das
mov
inc
lret
push
cmp
jmp
les
loop
mov
add
sub
or
ret
sub
xor
js
je
shr
data16
jp
push
mov
ss
outsl
ret
jae
repz
imul
push
inc
xor
push
mov
sbb
ss
sahf
mov
scas
cmp
nop
pop
rol
popf
push
mov
xchg
dec
bound
jp
lret
shr
sbb
subl
add
push
gs
loopne
sub
or
mov
dec
xchg
fidivrl
je
fidivs
mov
xchg
mov
xor
les
ss
inc
cld
out
fwait
cmp
cld
xchg
pop
lret
mov
mov
push
jl
push
dec
cmp
inc
cmovno
inc
mov
mov
push
jbe
fdivrl
mov
or
repnz
mov
rorl
nop
lea
push
or
cltd
pop
sbb
dec
aas
stc
lock
not
mov
sti
mov
or
inc
call
movsl
ljmp
out
jnp
ja
dec
adc
pop
xchg
bnd
adc
mov
mov
add
xor
and
push
add
xor
and
aam
les
aam
les
inc
add
xor
and
push
add
xor
and
aam
les
aam
les
inc
add
xor
and
push
add
xor
and
aam
les
aam
les
inc
add
xor
and
push
add
xor
and
aam
les
pop
mov
shl
pop
or
dec
or
mov
rol
sarb
call
push
push
inc
inc
xor
and
add
lock
aad
mov
mov
and
push
inc
inc
xor
adc
loopne
rolb
shlb
jge
jne
or
xor
jns
bound
ja
mov
mov
ds
dec
xchg
xchg
xchg
pop
or
or
mov
xor
stc
lock
in
mov
pop
sub
icebp
pusha
cwtl
lahf
stos
scas
scas
push
mov
mov
xchg
test
push
movsl
loopne
and
add
cmp
dec
mov
popa
stos
push
mov
sbb
popf
pop
int3
mov
popf
cmc
test
nop
xchg
mov
pop
mov
pusha
mov
lahf
inc
xchg
mov
rolb
cli
add
sbb
sub
add
dec
rol
int
mov
xor
inc
arpl
loopne
test
pusha
enter
sub
sbb
jo
fs
and
and
inc
lock
aad
test
mov
xchg
pusha
lea
inc
push
xor
and
lock
cltd
xchg
xchg
stos
sbb
cmc
in
adc
and
add
inc
dec
addr16
bound
cmc
pushf
insl
mov
repz
in
imulb
xor
sub
inc
push
inc
mov
jne
push
xchg
test
xchg
nop
test
push
push
inc
inc
xor
adc
loopne
rol
shlb
test
push
push
inc
inc
xor
adc
enter
pop
stc
inc
xchg
arpl
cmp
fidivs
popw
bound
lock
js
cwtl
or
adc
clc
iret
repnz
pop
push
push
xchg
inc
xchg
inc
xchg
push
data16
dec
frstor
mov
leave
xor
in
aas
subl
push
imul
repnz
dec
rol
mov
cmc
mov
lock
in
hlt
into
mov
jle
cmpsl
fcoms
int3
cmp
push
arpl
lcall
xor
cwtl
sti
idivb
jne
mov
sahf
iret
mov
sbb
jmp
cmpsl
sbb
aaa
or
sbb
adc
pop
shl
jecxz
cmovp
fiadds
sbb
pop
pushf
and
push
pop
jmp
push
push
dec
or
and
loop
lahf
cli
fldenv
test
ja
add
sub
es
mov
es
lcall
enter
or
add
fbld
lods
icebp
ss
lods
add
lret
mov
fwait
dec
into
jmp
jno
es
inc
cmpl
mov
and
dec
inc
andl
aaa
test
jle
dec
adc
sub
mov
insl
inc
js
in
test
jg
jns
in
into
nop
cmpsb
mov
inc
gs
std
xor
pop
push
pop
aad
lcall
out
push
div
adc
and
pop
sahf
adc
stos
movsl
mov
mov
enter
cwtl
idivl
rol
inc
outsl
shll
cmc
andb
imull
xor
stc
xor
xchg
add
fcmove
aaa
mov
test
push
insl
fists
lret
cmc
iret
xlat
mov
adc
jmp
jle
sub
iret
mov
jmp
sub
cmp
movsb
ja
cmc
jmp
rolb
dec
dec
mov
hlt
xor
popa
mov
leave
inc
shrb
adc
das
fsubs
sahf
adc
imul
sub
jno
lods
xchg
push
xor
or
jg
scas
sarl
push
lock
or
decl
push
and
ret
and
lea
in
add
mov
repnz
rolb
lock
popf
ss
and
xchg
sbb
out
pop
jnp
and
xorl
jno
fdivs
mov
cmc
sbb
ja
mov
lret
push
mov
es
inc
daa
mov
pop
push
out
xchg
fisubl
stos
int3
fmulp
fwait
mov
cmp
negb
decl
pop
mov
test
shlb
lret
fadds
mov
call
sub
cmp
xchg
push
loopne
aad
ficoms
inc
pop
mov
jnp
push
inc
cltd
sbb
or
and
stc
clc
dec
addl
sbb
add
add
dec
push
stos
dec
ficompl
add
pop
adc
shrb
xchg
clc
leave
cmp
shrb
push
lahf
call
or
icebp
pop
pop
cmp
aad
imul
inc
test
dec
jne,pn
dec
sbb
inc
test
inc
in
out
mov
and
xor
push
push
in
sti
or
inc
add
fs
stc
adc
popf
imul
repz
jmp
jge
jns
xor
cwtl
adc
sbb
jne
pop
pop
inc
mov
add
dec
imul
sbb
mov
jecxz
or
jbe
push
add
test
popa
adc
push
sbb
pop
jecxz
mov
mov
dec
push
aad
in
push
loopne
sbb
mov
ds
push
and
cmc
mov
push
rorl
ljmp
out
xor
push
clc
dec
and
scas
fmulp
ds
cmp
out
les
sub
ret
lods
inc
fdivs
lds
aad
andl
lret
jns
loope
jl
out
iret
xchg
lret
cmp
xor
fs
mov
inc
mov
mov
push
dec
mov
mov
dec
in
jl
sti
push
inc
jnp
dec
xor
ret
loope
add
xor
enter
and
daa
sub
les
pushf
inc
add
push
outsl
scas
lea
xchg
adc
add
test
daa
popa
push
fnstsw
repnz
push
sub
insl
popf
adc
inc
push
and
mov
and
les
aas
push
imul
push
xor
xchg
pop
lret
mov
pop
inc
add
int3
rorl
loopne
testl
test
pop
lret
test
push
xchg
xchg
jne
das
sbb
inc
stos
call
xor
push
jno
out
and
pop
mov
sub
push
pop
popf
leave
push
mov
add
stc
adc
pop
test
fs
out
lock
push
push
jle
mov
jle
cmpsb
push
shrb
inc
ja
inc
xchg
dec
and
sahf
sbb
outsb
ds
add
dec
loop
or
addb
stos
add
outsb
shld
pop
sub
pop
and
or
xchg
push
ja
jle
cmpsb
call
js
stos
ljmp
lret
xchg
adc
bound
je
xor
mov
fsubs
ss
mov
fsubl
inc
popa
adc
imul
add
ljmp
jo
or
ret
hlt
mov
imul
pop
pop
popf
sbb
nop
inc
push
stos
mov
push
std
mov
fnstcw
out
pop
fs
stc
mov
and
lret
or
inc
lea
dec
rcrl
and
jmp
sbb
jnp
mov
sbb
js
pop
cmp
into
outsl
mov
fnstsw
cmpsb
out
or
divb
jl
repnz
sbb
not
adc
aam
xorl
repz
xchg
and
imul
in
sub
add
cmpsl
jmp
push
daa
fwait
idivb
fiadds
mov
fidivs
inc
push
fidivrs
add
mov
out
cld
cmc
ds
jmp
mov
stos
inc
mov
add
jg
dec
lcall
xor
lods
jnp
cmpl
outsl
das
and
mov
idivb
test
arpl
mov
cld
aaa
inc
sti
icebp
push
cltd
and
jo
dec
jp
push
lcall
jb
notl
pop
mov
add
adc
imul
mov
add
dec
push
inc
mov
sub
ret
xor
mov
sbb
and
mov
subl
mov
lock
push
loope
ret
cmp
xlat
add
and
push
mov
fcomps
outsb
mov
insb
pop
push
or
jp
dec
dec
pop
dec
loope
pop
cmp
xorl
stos
mov
jo
repz
cmp
arpl
xor
test
hlt
repnz
stos
jg
orb
dec
mov
in
cmp
sub
mov
cld
mov
negb
popl
stos
mov
aas
sub
out
pop
call
lea
add
call
and
insl
push
stc
testl
pop
es
outsl
add
std
lret
cmp
push
sbb
scas
push
pop
andb
mov
stos
jecxz
mov
sub
mov
or
scas
jge
sbb
jbe
jno
mov
mov
inc
into
inc
ljmp
inc
mov
adc
sub
mov
iret
push
out
lret
xchg
mov
add
clc
mov
pop
arpl
add
sub
cltd
sbb
pop
push
dec
push
data16
push
out
lods
xor
aam
pop
data16
data16
and
jmp
mov
xor
iret
push
fwait
fstps
movsb
xor
or
std
mov
lock
iret
jae
or
jge
stc
push
daa
dec
push
inc
jmp
pop
pop
mov
lret
push
sbb
dec
pop
add
das
xor
repz
dec
scas
pop
aad
sarl
jge
xor
out
dec
pop
shrl
mov
inc
addr16
dec
jne
ja
lock
jmp
sbb
outsl
pop
or
mov
push
bound
push
das
or
repnz
enter
js
daa
jecxz
sbb
ret
jb
mov
sbb
lret
sahf
sub
insb
int
push
jecxz
rcl
mov
sub
les
mov
jmp
xchg
clc
mov
adc
and
lock
xlat
pushw
repnz
cmp
mov
xchg
mov
push
add
cmp
xchg
adc
pop
mov
and
shll
mov
lsl
pop
mov
inc
cs
jo
pop
imul
and
and
inc
adc
or
sbb
icebp
bound
scas
shrl
ljmp
add
xor
push
jg
push
test
imul
ret
sbb
fldl
mov
jbe
ss
lods
ja
int3
test
and
and
push
or
push
mov
push
sub
push
out
inc
cmp
negl
jl
xchg
push
push
mov
push
mov
push
pop
movsb
paddw
clc
or
inc
inc
iret
popf
out
jecxz
cmovae
cmp
stc
xchg
add
rorl
inc
pop
inc
cmpsl
push
sti
mov
mov
pop
lods
jo
mov
movsl
sbb
cs
xor
adc
inc
inc
fwait
cld
dec
rcr
in
push
mov
cmc
scas
cmpsl
cmp
clc
bound
pop
pusha
in
rcrb
pop
push
sub
mov
jge
adc
push
rcr
cmpsl
out
arpl
pusha
scas
loop
or
imul
inc
ficoms
cltd
pop
and
push
les
mov
aaa
sub
pop
imul
es
mov
and
xor
cmp
sbb
jns
jmp
mov
faddp
xchg
jo
cmp
loope
add
imul
shrb
cltd
stc
add
jl
adc
xor
cmp
sub
lea
pop
nop
push
jbe
adc
mov
jne
jbe
mov
pop
push
mov
pusha
xchg
or
mov
mov
call
jb
jmp
mov
insb
xchg
aad
sbb
push
inc
or
add
shlb
outsl
lret
stos
xor
repnz
cmp
cmp
call
mov
insb
in
loope
and
dec
sbb
lds
fldenv
mov
push
out
xchg
subl
inc
or
and
mov
adc
inc
inc
or
out
xor
fs
ljmp
dec
pushf
xlat
shr
push
loope
idivl
icebp
xor
push
or
or
mov
nop
pop
pop
xchg
js
lretw
xor
out
lret
ds
fcmovb
push
in
mov
xor
fcompl
nop
jo
div
ss
ds
mov
lods
fistpl
inc
cld
add
xchg
gs
mov
mov
lds
in
cmp
out
add
cs
scas
je
cmp
push
inc
imul
imul
stos
sub
movsl
outsl
lods
jle
sbb
in
stos
les
and
xor
cwtl
pop
loopne
or
lahf
jnp
lcall
or
adc
je
xor
mov
es
add
cli
stos
fisubrl
mov
std
in
das
das
filds
movsl
insb
and
cs
or
ficoms
insb
lods
xchg
out
fildl
jge
out
bound
dec
jbe
lahf
mov
cmpsb
mov
push
int
les
sub
mov
or
push
lods
ds
pushf
and
outsl
add
mov
jno
push
rclb
das
xchg
ja
dec
xor
adc
pushf
shlb
jne
fstp
xor
pop
xor
inc
pop
jae
push
cmp
insb
stos
fadds
fsubl
es
pop
adc
or
pop
sbbb
dec
shrl
adc
fsts
mov
add
mov
push
dec
fcmovnb
adc
pusha
dec
mov
std
je
mov
dec
outsb
les
mov
lock
xlat
rolb
daa
fisubrl
pushf
es
push
jnp
cmp
stc
sti
data16
sbb
jbe
mov
sbb
ss
pop
push
or
inc
dec
mov
xor
and
push
pop
xchg
push
mov
xor
inc
inc
xchg
popa
jg
cmp
mov
add
push
mov
add
jbe
call
hlt
outsl
or
mov
test
adc
push
add
add
sbb
std
call
inc
shlb
stos
test
daa
add
pop
pop
xor
popf
push
das
and
mov
decl
inc
lret
sub
scas
mov
sbb
imul
dec
aas
inc
adc
jl
adc
test
push
das
and
insb
push
fwait
call
mov
sub
mov
pop
ss
ja
jae
lods
cmpsb
and
adc
pop
sbb
mov
sbb
shrl
cltd
ljmp
pushf
push
add
loop
push
cmove
sbb
rclb
xchg
clc
jge
adc
add
out
and
sbbl
je
arpl
pop
xor
cmp
les
outsl
mov
stos
jmp
fsubr
xor
inc
push
jl
xor
out
jno
in
adc
mov
out
dec
lret
push
xor
fidivrs
mov
je
xchg
xchg
mov
sbb
mov
cmpsl
rorb
sub
sbbb
cmc
in
mov
pop
stos
out
mov
cmp
push
mov
add
lods
ret
out
imull
pop
push
and
sahf
xchg
mov
mov
addl
ret
dec
out
pop
adc
stos
subl
fisttpl
sbb
jl
les
push
shrb
loope
and
getsec
addr16
gs
icebp
inc
cld
mov
sub
and
test
pop
cmp
mov
xor
inc
rorb
jbe
pushf
dec
fwait
das
in
aaa
mov
mov
into
cmp
imul
sub
das
fstpl
imul
cli
scas
in
sbb
test
xor
dec
sbb
and
push
cwtl
arpl
or
xor
xchg
mov
pop
lret
mov
xchg
adc
jae
jle
inc
cli
mov
cmp
sub
lcall
addl
cmpsb
mov
iret
movsb
or
add
jne
and
jb
jmp
outsb
or
in
mov
rcrl
pop
dec
pop
repz
mov
adc
out
xchg
and
loope
cli
mov
orb
sar
pop
aaa
cs
mov
mov
notb
jno
xchg
out
dec
dec
or
jmp
ja
sbb
fwait
shrb
mov
mov
inc
cmc
cmp
lahf
jne
dec
push
jmp
divb
adc
sub
and
inc
adc
dec
enter
mov
inc
dec
push
sub
mov
cmpsb
ds
stc
mov
fwait
inc
fldenv
call
push
jne
cmp
or
fidivs
or
mov
mov
xchg
lods
in
outsl
pop
and
pushf
cld
dec
ss
dec
sbb
sub
aas
adc
pop
cmp
loopne
push
je
testl
cmp
les
sti
push
lret
xchg
add
rcrb
rcll
dec
pop
ja
push
pop
add
xchg
xchg
aam
mov
sahf
inc
mov
aam
lahf
xor
inc
or
dec
sub
inc
fldl
lods
cmp
xor
mov
pushf
push
push
mov
pop
arpl
mov
std
lret
and
pop
lret
jne
outsb
rcrb
push
sahf
stos
adc
adcb
sub
addb
shlb
dec
and
pop
push
ljmp
sbb
jns
js
or
dec
and
push
or
fwait
and
adcb
movsb
ds
cmc
test
enter
xchg
pop
or
xchg
xchg
xor
stos
enter
xchg
popa
push
mov
fidivrl
cltd
ds
cli
xorb
dec
stc
lea
sub
lret
xchg
cmovp
rcll
sbb
sbb
and
testl
pop
jnp
lcall
cmp
ret
pusha
lock
pop
sub
addr16
fs
rol
mov
out
loope
stos
jmp
loopne
jne
sub
jns
cmp
mov
ret
scas
pushf
pusha
ret
out
push
add
ljmp
insb
fbld
mov
fimull
cld
mov
call
or
add
ret
and
sub
fistps
sbb
jbe
out
out
loop
stc
sar
insb
pushf
stos
stos
lahf
fcoml
xchg
or
pop
je
lds
imul
and
adc
rcl
rorb
dec
add
push
repz
loop
lcall
out
shlb
push
aas
add
fistl
sub
lds
loop
jns
pushf
rclb
dec
xchg
and
ds
mov
cs
pop
xor
notb
cmp
les
popf
aas
mov
fwait
stos
mov
loope
cmp
leave
es
repnz
cmpsl
mov
mov
imul
pushf
mov
les
pop
lcall
cmp
cltd
in
shr
sahf
lret
enter
inc
in
inc
mov
out
bound
inc
sahf
ja
loop
ja
aas
out
xchg
stos
push
xchg
cli
leave
mov
test
mov
dec
cmp
sbb
pusha
mov
jae
call
xchg
lea
cmpsl
sbb
cs
dec
fmuls
inc
bound
popa
mov
push
xchg
clc
les
cmc
or
arpl
inc
daa
xor
fcomp
dec
daa
xor
cwtl
cmp
dec
movsb
inc
xor
sub
rcrl
leave
sub
cmpsb
in
sbb
loop
mov
in
add
inc
imul
pop
pop
add
icebp
ds
aaa
leave
stos
stos
stos
js
lods
icebp
or
push
xor
add
push
cld
mov
lret
xchg
stos
adc
and
iret
ret
sbbl
test
dec
push
jmp
push
mov
mov
jp
cmp
int
jmp
and
test
inc
ja
ljmp
mov
in
dec
push
xor
fsubl
jns
stos
mov
aam
push
fld
inc
jecxz
in
ret
pop
xor
adc
xor
cmp
dec
push
add
xor
push
xchg
sbb
cmpsl
cmp
imul
jnp
dec
and
sub
inc
pop
jmp
fstpt
dec
aad
add
xchg
inc
mov
xchg
inc
mov
fistpl
dec
imul
hlt
add
mov
sub
shlb
mov
pop
push
jbe
pusha
jns
movsb
cwtl
nopl
pop
popf
loopne
jns
xor
sbb
push
pop
cmp
fldt
imul
pushl
or
or
loopne
mov
bound
pop
jmp
mov
jo
int3
mov
das
jp
ja
loop
xor
mov
inc
push
cmp
scas
cltd
pop
and
mov
push
jg
or
add
jecxz
push
jp
hlt
std
lahf
test
sub
add
mov
push
inc
jo
iret
sub
popf
or
pusha
je
dec
dec
jbe
shrl
ds
add
xchg
and
popa
icebp
dec
mov
std
mov
bound
or
mov
xor
les
loop
mov
sub
xor
xor
sub
mov
aas
test
pop
sub
sub
inc
mov
cld
pop
push
out
sbb
adc
adc
or
jbe
mov
aaa
inc
adcb
add
popf
mov
orl
pop
arpl
cld
subl
cmpsl
jle
bound
xor
les
push
and
ret
repnz
pushf
das
shl
cmpl
mov
pop
pop
arpl
je
jmp
jae
aad
push
loopne
push
scas
ds
cwtl
arpl
and
mov
repnz
cmp
xchg
and
out
cmp
subb
xor
ret
iret
inc
insb
push
int
pop
int3
pop
and
dec
negb
cli
push
or
lods
hlt
mov
mov
and
iret
dec
into
in
flds
mov
leave
add
arpl
adc
js
jnp
mov
out
test
fiaddl
add
in
fisubl
xchg
in
fidivs
lret
add
jg
mov
rol
sbb
loopne
rcr
shlb
test
push
push
inc
inc
xor
adc
loopne
rol
shlb
test
push
push
inc
inc
xor
adc
loopne
rol
shlb
xorb
pusha
pop
push
inc
inc
xor
adc
loopne
shr
shlb
add
lret
inc
aaa
inc
mov
cli
call
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
or
inc
sub
pusha
dec
inc
sub
arpl
sarb
stos
lock
shr
jmp
outsl
push
sbb
jo
pusha
dec
adc
imul
and
lock
sub
sti
mov
mov
adc
add
jnp
out
out
mov
loopne
ret
mov
push
push
xor
adc
mov
pop
shll
test
hlt
lock
xchg
fistpl
cmp
imul
popa
mov
jmp
cmp
sub
out
mov
xor
xchg
jmp
add
cmc
inc
pop
xchg
pop
xchg
mov
dec
mov
mov
nop
sahf
mov
dec
mov
into
jno
je
adc
xchg
fnstcw
mov
fwait
aad
push
inc
pop
xor
fcmovnbe
ljmp
mov
mov
sar
loopne
lock
xchg
sbb
stos
or
rorl
mov
lock
aad
mov
mov
mov
xchg
sti
dec
movsl
mov
hlt
dec
loopne
outsl
mov
clc
mov
sub
pusha
scas
adc
add
frstor
dec
rolb
rcr
mov
adcl
out
cmp
inc
es
xor
push
mov
mov
xor
or
pop
aaa
and
cs
pop
cs
xchg
leave
lods
stos
cmpsb
ret
mov
lds
xor
add
adc
jl
add
jnp
mov
fwait
shrb
fildl
or
inc
sub
pusha
dec
adc
imul
and
lock
sub
sti
mov
jmp
aad
xchg
pop
lods
movsb
mov
mov
mov
mov
cmp
ss
negl
into
mov
xchg
fs
xchg
and
lds
xchg
cwtl
and
lea
das
push
or
sub
lcall
add
call
clc
jbe
dec
dec
mov
adc
jnp
mov
inc
loop
cmp
push
or
adc
bound
je
test
int3
imul
adc
pop
sbb
iret
addr16
test
xor
mov
jp
xor
pusha
sbb
jne
clc
and
dec
aam
sub
loop
push
and
je
mov
or
fldenv
data16
dec
xor
add
shl
ret
sbb
frstor
adc
inc
sub
aaa
and
pop
arpl
dec
mov
leave
dec
sub
xor
dec
pop
mov
and
dec
sub
inc
push
add
mov
dec
out
repnz
dec
and
xchg
es
sub
push
inc
adc
mov
scas
ds
cmp
adc
subb
daa
popf
std
xor
jecxz
lds
adcl
lcall
mov
test
adc
or
jo
mov
inc
sbb
imul
in
or
pop
or
sahf
jle
mov
mov
in
cs
orl
sub
addb
pop
cmpsl
jnp
jecxz
mov
mov
aas
adc
pushf
and
push
sub
mov
jge
ljmp
cs
and
rcrl
cli
cmpsl
push
xchg
lret
cmp
pop
movsb
lahf
cmp
mov
out
nop
push
adc
call
in
inc
hlt
inc
mov
into
out
jo
cltd
out
cli
sub
jbe
hlt
test
fmul
or
mov
xor
psrlq
sbb
cli
lahf
iret
or
sub
cmp
fprem1
fcomps
sbb
ljmp
jno
testw
mov
sarb
adc
inc
imul
sub
in
or
das
inc
and
test
adc
clc
ljmp
jo
cmp
out
xor
jo
stos
xorb
dec
xchg
mov
xchg
lahf
test
ljmp
or
stc
movsb
xor
jle
and
ret
adc
mov
mov
cwtl
shrl
rep
ss
dec
adc
fdivrs
js
insl
dec
adc
test
repz
inc
mov
adc
daa
jno
adc
negb
mov
or
xor
and
stc
dec
movsl
pop
inc
fsts
movsl
xor
lret
add
mov
popf
push
aam
imul
sub
jno
orb
dec
xchg
and
inc
cmp
mov
stc
stos
or
popa
fsubs
ds
imul
push
xor
pop
je
push
dec
test
jo
mov
adc
mov
mov
pop
push
mov
mov
push
cmp
inc
insl
loop
lcall
mov
adc
xchg
pop
push
cli
xor
push
mov
scas
push
and
nop
aad
xor
js
xor
xor
push
mov
push
xchg
out
ljmpw
mov
push
xchg
out
lods
ds
mov
fwait
stc
sbb
scas
faddp
retw
dec
push
cld
jne
cmp
icebp
sar
lock
mov
out
insb
mov
out
sbb
mov
add
jno
push
push
adc
pop
cli
mov
mov
jo
mov
pop
dec
out
std
xor
or
sahf
or
mov
scas
int
push
dec
gs
mov
push
xchg
aad
jo
repz
mov
push
lcall
ja
lret
mov
jmp
mov
mov
js
test
jecxz
loope
push
mov
pop
lea
add
push
into
inc
sbb
sub
sbb
pop
mov
cmc
fisttpl
lea
adc
sahf
xor
push
mov
or
cld
and
inc
and
fiadds
push
stos
jmp
enter
jbe
lods
outsb
gs
push
mov
xchg
int3
and
enter
cwtl
cmpsb
jmp
icebp
les
mov
bound
xor
mov
iret
cmpsb
rolb
jne
mov
out
in
call
jae
adc
jle
rorb
cltd
shl
aam
jnp
mov
bound
ljmp
aam
stc
xor
dec
add
add
loopne
cltd
ds
mov
pop
scas
popf
insb
adc
out
daa
pop
test
sub
mov
test
and
ret
call
lret
inc
in
mov
mov
and
inc
das
out
lock
or
repz
adc
les
imul
nop
mov
mov
orl
inc
jno
adcl
mov
inc
push
push
repz
mov
es
out
dec
add
push
adc
cli
mov
xor
push
dec
fidivrl
push
mov
scas
fmuls
je
push
pop
cmpsb
sbb
icebp
cmp
stos
addr16
cmp
and
mov
xor
push
adc
shlb
mov
jae
out
push
mov
mov
and
jecxz
lds
sub
mov
shrl
inc
fisubs
loope
lret
push
subb
xchg
in
mov
pop
cmc
ds
aas
push
cmp
mov
in
adc
stos
mov
mov
pushf
out
test
jg
inc
shll
and
ja
cmp
pushf
jae
iret
or
sarl
cli
fs
xchg
imul
or
js
xchg
xchg
in
lret
mov
push
or
dec
je
jnp
sub
jbe
leave
ljmp
jle
sarl
pop
ret
inc
pop
dec
jl
xchg
rcll
fisttpll
dec
std
xor
jg
testb
cltd
xor
pop
test
xchg
mov
xor
jb
popa
adcl
hlt
adc
jne
imul
push
mov
sti
out
add
cmc
scas
jmp
xchg
outsb
mov
xor
in
cltd
aam
cmp
jl
add
mov
inc
jecxz
sbb
sub
fidivrs
mov
ret
or
shlb
movb
lea
in
inc
sbb
cltd
jne
and
dec
cs
sbb
clc
flds
inc
sub
mov
bound
mov
mov
mov
sub
popa
add
and
sbb
and
aas
jge
fisubl
push
test
add
xchg
jns
lods
add
adc
shll
mov
mov
push
nop
lods
xor
rorb
xchg
shrb
shll
pop
xchg
mov
mov
rcr
pop
push
dec
jns
pop
xlat
add
and
cs
push
xchg
xor
xlat
dec
js
jo
adc
das
adc
bound
iret
sbb
inc
cmc
xchg
cwtl
or
sbb
hlt
inc
mov
call
imul
or
cmp
inc
pop
sub
cwtl
pop
imull
stos
or
and
adc
in
jbe
push
leave
xchg
shrb
mov
cmpsl
imul
dec
inc
mov
xorb
ds
pop
fdivl
movsb
ficoml
and
add
xchg
cmc
or
mov
mov
adc
push
dec
adc
movsb
out
jno
bound
cmp
repz
aaa
mov
les
xchg
inc
out
and
push
pop
in
test
pop
lcall
jle
mov
xchg
repz
adc
scas
lock
fcmovnb
jmp
jecxz
cs
shrl
dec
jmp
mov
mov
testl
pop
mov
aaa
and
shr
mov
push
sbb
inc
negb
mov
shr
and
jb
gs
mov
pop
lret
fwait
jns
xor
andl
or
loope
add
subl
or
inc
pushf
gs
cmpsl
pop
call
leave
jbe
insb
je
xchg
mov
cli
xor
rol
pop
sti
dec
fs
in
into
mov
fsubs
rorl
push
lcall
mov
and
push
nop
pop
inc
mov
stc
shll
unpcklps
mov
into
jge
jecxz
sub
cmp
lahf
mov
push
sub
movsl
jmp
mov
pop
inc
aaa
cwtl
sub
xor
adc
out
mov
add
icebp
xlat
sbbb
adc
mov
jecxz
mov
lea
cltd
jg
lock
mov
add
cmp
das
popf
push
and
andl
sub
arpl
inc
cmc
inc
aas
mov
cmp
mov
jne
mov
mov
xchg
cmp
orb
pop
out
mov
int3
test
test
sub
shll
inc
hlt
insb
inc
add
ljmp
xor
mov
adc
adc
fnstsw
addr16
cmpsl
pusha
leave
fcmovnu
mov
or
bound
inc
lcall
call
daa
div
sti
dec
and
mov
and
pop
mov
arpl
adc
push
push
dec
sub
int
xor
aas
xor
jmp
das
mov
jl
inc
dec
xor
out
pop
lcall
push
lahf
sti
daa
xchg
iret
jbe
jb
mov
pop
jb
rclb
jmp
push
inc
push
sbb
sbb
xchg
dec
orb
adcl
ljmp
adc
in
daa
pop
sbb
addb
pop
cmpsb
pop
mov
scas
inc
stc
mov
and
pop
push
in
test
insb
and
xchg
sub
add
dec
push
adc
pop
rorl
iret
mov
iret
pop
repnz
or
pop
cmp
adc
outsb
xchg
fstpt
rcl
sub
hlt
sub
test
ficompl
mov
clc
enter
incl
sbb
pop
call
push
mov
dec
inc
cmp
sbb
rcll
or
sub
enter
dec
into
lods
jl
mov
lcall
push
test
movsl
mov
fcompp
es
and
xchg
pop
jo
and
insl
pop
jnp
ret
dec
jne
pop
bound
enter
add
push
in
daa
mov
std
ds
inc
loopne
lcall
fs
pop
sbb
imul
filds
mov
or
orb
fsubs
and
shll
dec
in
xchg
je
les
pop
mov
flds
mov
stos
pop
repnz
pop
cwtl
test
orl
jno
fs
pop
out
jne
lds
test
cmp
or
cs
lods
movl
or
cld
pop
adc
ret
and
mulb
mov
ret
mov
icebp
jnp
enter
pop
fld
push
cmp
aas
aas
adc
inc
stos
add
sub
xor
sti
and
stos
andps
xchg
push
lock
je
sbb
jns
outsl
lret
call
lret
inc
xor
pop
stc
xor
and
ljmp
jecxz
es
leave
jg
add
lahf
mov
jae
aas
cwtl
pop
adc
mov
pop
andb
xor
dec
sbb
mov
jl
mov
daa
and
outsb
clc
loop
or
adc
sti
add
icebp
dec
lret
jns
in
stc
jnp
test
jmp
mov
sub
in
adc
xchg
mov
mov
repz
or
outsl
or
sub
xchg
push
cltd
inc
xchg
cwtl
stos
and
arpl
or
xchg
fistps
icebp
add
xor
mov
pop
jne
in
pop
mov
sub
jg
jno
jle
fstps
xor
xchg
pop
hlt
lock
pause
shrb
cmp
test
sbb
lods
pop
or
adc
fdivrs
bound
call
aam
inc
mov
pop
rol
in
std
imul
loope
mov
faddl
dec
addr16
test
pop
inc
cwtl
dec
and
inc
jo
hlt
pop
xchg
cmp
xor
xor
jmp
in
je
out
sub
add
mov
inc
mov
popf
mov
insb
in
lods
jl
hlt
jae
sbbl
mov
jl
fsubs
clc
mov
cmp
mov
xchg
xlat
pop
enter
cld
jb
loope
sbb
dec
add
ror
ja
insl
inc
mov
xlat
leave
mov
aas
ds
mov
scas
std
mov
in
push
es
cmp
in
sbb
stos
cmp
sbb
je
dec
jb
mov
shrl
jg
icebp
pop
lock
arpl
int
dec
sub
mov
in
or
push
out
push
jle
adcl
aad
stos
push
dec
lret
les
sbb
testl
pop
jns
fcomps
xor
dec
add
arpl
adc
inc
xchg
push
xor
out
xor
dec
add
jmp
adc
inc
rcr
and
adc
enter
mov
pop
jbe
in
mov
int
rcll
leave
pop
push
sub
dec
pop
add
leave
mov
lock
mov
into
mov
jp
push
out
and
jae
inc
dec
xor
dec
cmpl
cmp
ret
or
jb
jae
repnz
jo
loope
stc
mov
into
add
in
in
je
pop
pusha
push
inc
jmp
dec
cmp
mov
popf
ss
in
test
ss
data16
addl
xor
stos
loopne
jnp
adc
ret
push
scas
lcall
push
mov
mov
psraw
movb
cli
jns
aam
cmpsl
daa
dec
insb
fcoml
cmp
pop
and
cmpsb
pop
enter
sahf
inc
xor
mov
stos
lds
xchg
int3
add
mov
adc
cld
lcall
pop
jl
jl
pop
push
test
jno
pop
sbb
pop
stos
mov
cmp
vaddsd
aam
lea
imul
mov
sub
arpl
fcoml
outsb
fucomp
or
std
lret
scas
xchg
shlb
add
movsb
iret
stos
pop
jbe
cltd
insl
int
sbb
pop
cmpsb
std
add
jbe
xchg
xor
push
stc
cmpl
push
sub
aaa
mov
fldcw
aaa
lods
lret
addr16
jns
jnp
cs
outsl
or
mov
les
fistl
les
scas
adc
adcb
dec
and
stc
les
jmp
scas
ljmp
jge
out
test
mov
jne
pop
ficoms
jae
icebp
jae
inc
cmpl
inc
fnstsw
pop
push
std
in
pop
mov
shll
std
push
or
rol
cmpsl
popf
pop
mov
mov
jbe
sub
mov
arpl
and
cmpsl
pop
mov
sub
inc
sub
int
jecxz
aad
lcall
jo
sarl
stc
jecxz
xor
ret
mov
pop
not
fwait
mov
jge
inc
cwtl
imul
pop
sub
bound
dec
movsl
js
std
insl
lock
mov
idiv
add
xor
pop
adc
pushl
cmp
mov
sub
adc
orb
and
ljmp
mov
inc
inc
je
cltd
fisubl
nop
int3
leave
pop
jle
out
mov
mov
adc
repnz
outsb
and
gs
and
xor
mov
sti
jle
cmpsl
test
xchg
scas
mov
sub
call
inc
cmp
dec
jmp
push
je
adc
push
dec
or
push
pop
inc
xor
sbb
sub
adc
stos
push
jle
hlt
xchg
cli
lret
fcomps
mov
mov
push
sti
dec
out
jbe
shll
rclb
cwtl
add
stos
add
leave
mov
adc
mov
jp
jl
call
insl
aas
mov
mov
in
xor
inc
clc
cmp
mov
adc
xor
mov
cmp
pop
push
out
push
jne
cwtl
mov
pop
into
push
adc
push
xor
mov
mov
push
sarl
push
mov
or
push
test
vhaddpd
sbb
stc
popf
pop
cld
xchg
cmp
xchg
and
es
out
or
mov
mov
icebp
adc
inc
cmp
mov
jecxz
out
mov
adc
jne
insl
sub
xchg
int3
fstps
loop
jl
ja
or
pop
push
jns
cmp
shrl
jbe
aas
arpl
lea
jl
pop
fimuls
dec
and
fimull
or
mov
inc
popf
out
and
cmpsl
inc
mov
lods
mov
pop
in
push
fisubrl
push
xchg
aad
adc
ljmp
mov
mov
mov
cmp
pop
inc
pop
add
sbb
xor
adc
and
leave
or
pop
and
xchg
frstor
dec
fcomps
fdivrs
imul
adc
add
jo
scas
and
push
dec
out
sbb
jo
movsl
shl
sbb
xchg
int3
mov
test
sbb
test
mov
call
idivb
sub
jl
mov
cmp
adc
stc
lock
mov
jp
mov
mov
js
or
dec
pop
mov
dec
out
das
pop
int
cmp
cmc
and
push
lock
sbb
mov
push
scas
mov
nop
jmp
push
inc
add
lret
add
mov
jle
ret
mov
icebp
daa
jo
into
ret
ss
dec
or
stc
in
int
pushf
xchg
ret
cwtl
cmp
jmp
add
imul
pop
pusha
mov
push
dec
lock
mov
jb
je
dec
lret
mov
pop
iret
sub
movsb
or
push
jecxz
mov
jae
pop
sub
fcompl
push
push
mov
cmp
lret
push
and
jmp
inc
cld
push
std
arpl
jmp
lods
mov
pop
dec
sbb
cmp
push
pop
in
pop
pop
pop
push
sti
or
mov
mov
xchg
push
adc
outsb
mov
mov
jae
add
mov
es
cmp
push
pusha
push
push
jle
xor
mov
push
and
lcall
and
call
in
dec
stos
jbe
fidivl
test
inc
lcall
aas
pop
cltd
ja
mov
in
cs
sbb
pop
lahf
aad
push
sbb
jmp
faddl
pop
dec
cld
or
aam
inc
scas
in
pop
or
movsl
adc
loopne
mov
aaa
fst
inc
mov
or
fs
rol
add
mov
mov
dec
sbb
or
cmc
das
repz
and
inc
fdivrs
ret
push
lock
add
jp
lods
and
je
jmp
fldcw
mov
mov
dec
push
lret
mov
test
mov
scas
sub
mov
aaa
sbb
adc
or
mov
scas
xchg
arpl
mov
pushf
rcrb
aaa
push
aaa
std
fsubr
in
mov
decb
or
sub
repnz
inc
ds
fdivs
and
js
adc
std
das
cwtl
sbb
mov
jg
dec
mov
iret
and
fadds
aad
push
sti
cmpl
mov
cld
rcll
scas
cltd
decb
cmp
xor
popf
testb
fisttps
lret
lods
bound
jl
das
leave
mov
mov
into
inc
xlat
pop
enter
dec
out
enter
lahf
movsl
das
lret
cs
xchg
adc
addl
mov
and
ret
test
jae,pn
ret
jecxz
pop
and
add
setno
xchg
lret
jne
xchg
ret
cmp
or
push
push
add
jge
cld
sub
pop
cmp
stos
fiaddl
or
jecxz
es
ljmp
pop
js
or
add
xor
fstl
fwait
xchg
xchg
mov
sbb
sbb
sti
cmp
test
or
shll
pop
push
mov
mov
inc
int3
and
adc
rclb
jno
shrb
int3
mov
js
jnp
xlat
jne
test
lret
insl
mov
fdivrs
mov
add
adc
call
and
cwtl
pop
adc
cmp
jne
mov
mov
lods
inc
arpl
add
repz
sbb
cld
mov
gs
outsl
adc
out
imul
mov
mov
pusha
dec
adc
imul
and
lock
sub
sti
mov
sub
pusha
dec
adc
imul
and
lock
sub
sti
mov
dec
jo
popa
fistl
pop
add
mov
rcrl
loopne
xchg
lret
sub
adc
jno
sbb
dec
subb
fisttps
lock
jg
dec
add
cwtl
aam
les
cld
scas
jmp
xchg
in
sbb
cmp
pop
adc
cmpl
mov
mov
xchg
enter
call
and
je
fs
adc
add
jbe
and
aam
les
xchg
enter
call
inc
dec
adc
pop
push
cmp
inc
add
aam
fwait
mov
push
lahf
adc
mov
xor
das
loope
rol
nop
cmp
out
xorb
xchg
push
sbb
pop
enter
add
movsb
mov
xlat
jmp
cs
mov
rolb
loope
lea
sbb
hlt
mov
cmpsb
test
lods
cltd
pop
adc
push
inc
jnp
scas
in
xchg
aaa
test
popl
xor
jle
sti
or
test
cmp
xchg
call
daa
sbb
mov
clc
xchg
push
cmp
loope
or
inc
pop
and
enter
mov
and
pop
aam
les
xchg
enter
call
inc
cmp
pop
adc
add
xor
dec
std
mov
out
lea
cli
insb
hlt
push
sbb
and
jne
ja
sbb
aam
fcomi
jmp
loopne
ret
lods
movsb
push
outsl
xor
sub
scas
ja
outsl
adc
je
popf
mov
popf
xchg
enter
call
inc
cmp
pop
adc
add
xor
and
aam
les
xchg
enter
call
inc
cmp
pop
adc
add
xor
and
aam
lea
pop
cmc
jne
mov
or
xor
jge
sbb
mov
clc
and
outsb
pop
lcall
or
pusha
scas
cmp
mov
mov
jp
movb
repz
fwait
sbb
dec
les
stos
lcall
sub
or
and
xor
rcrb
push
sub
lret
sarl
add
insl
xor
mov
out
cs
out
push
mov
arpl
loopne
sti
fwait
inc
jae
mov
mov
inc
insb
pop
pop
push
pushf
or
xor
pop
inc
mov
push
xchg
sbb
imul
push
aam
mov
jmp
lcall
mov
mov
add
fiadds
adc
outsb
outsb
shll
mov
or
sbb
ret
dec
subb
movsb
pop
push
add
and
enter
and
adc
lcall
sbb
in
dec
push
or
mov
mov
mov
aaa
leave
inc
xor
sbb
jg
shlb
cmp
cmp
fidivl
gs
jmp
outsb
cltd
xchg
cmp
cmc
clc
xchg
adc
fisubrs
cmp
mov
fcmovbe
fs
jae
xor
jle
inc
je
stos
inc
push
inc
xor
test
push
daa
adcl
insl
sti
aaa
gs
xchg
or
push
xchg
or
stc
pop
xchg
mov
ret
shll
xchg
add
cmp
ja
dec
jg
or
cmp
pushf
cmp
gs
lret
nop
mov
adcl
dec
jae
add
rorl
aam
aas
sbb
stos
imull
xor
aas
jbe
sti
bound
and
fnstsw
pushf
ljmp
mov
jmp
ficompl
mov
pop
jno
dec
inc
xor
inc
lcall
xchg
outsl
jbe
xor
inc
jbe
sub
and
pop
fisubl
add
decl
sub
jno
jo
mov
xchg
ficoms
dec
jae
jg
pushl
into
loop
cmp
mov
mov
fistl
das
inc
jbe
jge
push
aas
jbe
popw
mov
in
jg
sbb
mov
into
pop
je
pop
sbb
ficomps
rcl
jb
orl
gs
mov
mov
enter
jns
jns
mov
sub
aam
fsts
xchg
mov
mov
mov
test
and
adc
push
push
ds
sbbb
mov
mov
imul
repz
mov
and
in
or
and
fsubs
lret
inc
and
inc
popf
icebp
pop
inc
jl
push
add
add
xorb
ret
imul
pop
cmc
and
jne
icebp
cmp
aas
stc
rcrl
adc
inc
icebp
int3
movsl
sub
mov
mov
xor
add
xchg
and
xor
pmaddwd
jae
cs
mov
sub
hlt
push
inc
mov
xor
pop
arpl
stos
adc
aad
addr16
pop
jne
xchg
nop
lods
arpl
jae
adc
cmp
fisttpll
sub
jge
sahf
call
sarl
xchg
not
fnstsw
xchg
inc
popa
out
inc
and
xchg
loopne
xor
mov
pop
aad
imul
push
fstpl
fs
adcl
mov
jle
sub
mov
adc
xchg
out
jno
pop
inc
cli
mov
popf
js
or
xor
mov
sahf
cmp
adcl
xchg
sarl
and
mov
jl
ja
add
stc
fwait
scas
insl
cmp
ds
mov
and
sub
popa
xor
mov
adc
mov
mov
in
test
cmp
xchg
pushf
test
add
pop
jecxz
or
scas
scas
shlb
shrb
and
rcrl
jmp
push
call
fcmovb
sti
std
jb
aas
sub
ljmp
in
adc
inc
jle
xor
aaa
out
mov
stc
punpcklwd
mov
pop
in
les
test
mov
cmpsl
loopne
sti
xchg
repz
mov
hlt
xor
mov
or
addr16
rcrl
mov
ja
in
imul
repz
mov
mov
inc
mov
mov
xchg
and
adc
test
mov
inc
dec
sbb
insb
mov
or
out
dec
sub
add
fsts
mov
sahf
or
xchg
push
icebp
pop
popa
shll
push
or
jo
jne
ljmp
das
or
or
mov
ljmp
xor
es
sub
ljmp
mov
call
nop
sbb
and
pop
xor
xchg
out
scas
push
adc
xchg
push
call
dec
daa
jae
call
sti
jecxz
sbb
or
out
jl
and
jb
inc
sbbl
aas
mov
icebp
mov
mov
pushf
mov
loope
jne
outsl
push
xchg
insl
mov
mov
iret
dec
inc
xchg
and
sbb
enter
mov
cmp
mov
xchg
repz
js
mov
outsb
or
test
jbe
int3
cmp
pop
adc
ffree
dec
add
jmp
cmp
mov
xor
andl
and
xor
push
stos
jo
lods
cmp
jbe
sti
std
addr16
sahf
cld
adc
repnz
or
dec
fildl
xor
dec
inc
in
int
sbb
xor
cmp
je
sub
into
push
or
imul
dec
lret
mov
insb
clc
or
cwtl
mov
mov
pop
sub
mov
mov
daa
mov
adc
aas
std
mov
xor
dec
inc
jbe
jl,pt
fstpl
xor
int3
and
cmpsl
repnz
pop
sbb
push
dec
pop
xchg
sbb
xor
popa
lahf
add
cmpsb
mov
and
fdiv
fisubrl
inc
push
adc
movsl
inc
popa
and
repnz
adc
negl
pop
jb
subl
cmpsb
push
stc
mov
data16
test
iret
into
sahf
xchg
push
cmp
mov
out
dec
pop
or
loopne
mov
push
mov
cmpsl
and
enter
dec
lods
fisttps
mov
pop
je
lea
icebp
orl
sbb
push
xchg
push
push
cmpb
or
cmpsl
lret
es
xor
lds
rol
add
mov
xchg
in
sbb
fcompl
push
addr16
xchg
cmpsb
mov
jg
leave
pop
ds
aad
outsb
imulb
mov
in
mov
mov
cmpb
push
ret
adc
sarl
dec
dec
loopne
fwait
mov
jle
sti
mov
shl
int
pop
out
lret
mov
cmpsb
adc
fmul
mov
in
push
insb
fiaddl
out
int3
iret
push
add
test
cmpsb
pushf
imul
dec
stos
scas
adc
push
inc
push
fwait
xchg
or
push
loopne
outsb
pop
rorb
mov
xor
pop
push
pop
in
xor
xlat
pop
lahf
lds
push
mov
stos
loop
cmp
lcall
int
ds
mov
pop
sbb
or
push
data16
sub
inc
ds
aas
sub
ret
add
push
cmp
lahf
es
movsl
jmp
mov
lea
mov
int
addr16
xlat
std
cmp
add
data16
mov
push
xor
hlt
sahf
mov
insb
andb
pop
inc
sahf
ret
repnz
shlb
add
cmp
push
shrl
mov
jo
test
pop
cmp
lahf
inc
mov
mov
rcr
int3
inc
push
jge
mov
inc
fs
std
fbld
mov
adc
adcl
cmc
jecxz
or
adc
jg
jo
dec
jb
into
call
cmp
outsb
pop
pop
loope
fadd
nop
pop
add
sbb
push
dec
lea
loope
clc
sub
or
fs
sbb
mov
test
jmp
or
fwait
roll
aad
pop
mov
dec
mov
aad
push
lea
sbb
out
push
das
adc
adcb
fiadds
mov
push
add
dec
mov
fisttps
fildl
pop
arpl
jge
push
shl
fmul
in
shl
mov
pusha
cmpl
mov
ja
jbe
das
rolb
repz
dec
mov
push
daa
mov
ret
push
mov
popa
jnp
sahf
roll
adc
add
imul
jg
dec
fisttpl
pop
fs
loopne
xchg
cmc
mov
or
cmp
mov
out
lcall
add
jno
fwait
jp
cmp
stos
push
inc
adc
mov
sarl
jae
pop
lret
inc
mov
or
jg
lds
daa
in
out
or
fiadds
push
loopne
negl
xor
jle
xor
incl
in
lcall
and
mov
sbb
in
adc
lock
add
and
push
xchg
fstpt
and
mov
iret
fsubr
in
pop
outsl
sbb
pop
js
in
push
xor
jns
dec
in
xchg
int3
sub
mov
dec
scas
int3
add
dec
mov
pop
mov
cli
mov
sarl
mov
ds
popf
lock
ljmp
xor
add
add
into
shrb
pop
push
dec
movsb
call
call
leave
clc
fs
aaa
ds
jnp
jnp
inc
cmpsl
lea
push
adc
js,pn
movsl
or
xchg
xor
xor
call
cmp
add
mov
outsl
inc
and
mov
sub
lcall
enter
pop
pop
mov
pop
scas
pop
movsl
std
mov
push
daa
or
or
sbb
xor
and
and
cmpsl
pop
inc
xor
xchg
movsb
cs
imul
addr16
setae
mov
or
ljmp
lret
popa
sar
jp
sahf
mov
mov
int3
inc
daa
xor
sub
mov
iret
mov
jbe
and
adc
dec
js
or
test
push
push
fsubrl
mov
push
lea
sbb
cmp
movsl
mov
xchg
sub
xlat
dec
rcrl
mov
popa
test
xchg
imull
pop
inc
xchg
xchg
dec
sahf
pop
mov
mov
imul
nop
rclb
push
mov
in
stos
je
xor
sub
cmpsl
loope,pn
dec
cs
mov
call
fdivrs
push
add
lahf
fidivl
or
pop
sbbl
lock
out
push
jmp
pop
int3
cld
fadds
insb
xor
loope
in
out
insl
inc
pusha
movsb
pushf
mov
mov
das
mov
jo
fs
fistpl
push
mov
xor
movb
fdivrp
xor
jnp
cld
xchg
or
clc
pop
push
add
sbb
pushf
xor
imul
adc
xchg
inc
cmpsb
insb
repz
mov
add
dec
enter
cmp
in
shll
std
shl
pop
push
loopne
scas
fistpll
jbe
fwait
pop
std
cltd
sub
push
in
add
adc
add
lea
cmp
inc
mov
mov
and
add
aam
mov
xor
adc
sbb
ljmp
add
adcb
fs
sub
arpl
sahf
cli
or
je
or
xchg
push
mov
movsl
pop
je
xchg
xor
xor
mov
adc
cmp
xchg
gs
ret
xlat
cs
cltd
xchg
cmp
jmp
je
pushf
sub
mov
enter
out
loop
jnp
stos
push
push
or
jnp
inc
ss
out
push
cmc
jo
stos
dec
xchg
ret
je
and
inc
cwtl
in
cmp
xchg
mov
mov
push
xorb
push
dec
and
ja
and
pushf
add
mov
sarl
sbb
mov
mov
das
lret
int
or
notl
ret
mov
and
sbb
push
mov
xchg
fs
push
sbb
push
cmp
jmp
sbb
add
cmp
jp
jns
daa
jnp
mov
add
push
fdivrl
nop
arpl
mov
jns
cmpb
divl
lods
or
dec
mov
push
jne
push
mov
xchg
fcomps
cmp
dec
inc
cwtl
iret
out
notb
dec
sbb
xor
sub
ret
xor
adc
pop
ds
and
je
xchg
popf
pop
sbb
inc
movsb
inc
sti
subb
mov
mov
cmp
push
mov
outsl
mov
int
sbb
and
sub
sub
cmpsb
popa
lods
in
add
xchg
xchg
inc
fucomp
movb
stos
ffree
imull
ret
cltd
adc
iret
mov
mov
fwait
pop
aam
into
xchg
leave
mov
or
sbb
stos
scas
add
adc
mov
outsl
xchg
ret
andb
nop
imul
mov
int3
ljmp
pop
dec
jbe
or
xchg
movsl
popa
sti
mov
dec
mov
adc
xor
iret
call
lods
mov
push
orl
lds
xor
aaa
xor
or
jae,pt
push
mov
gs
fistps
dec
cmp
push
dec
jno
adc
jge
add
dec
mov
adc
iret
lret
sahf
dec
cli
pop
imull
shlb
sub
outsl
dec
adc
in
xor
mov
mov
mov
and
mov
mulb
lret
sbb
imulb
cwtl
cmp
xor
fistps
xor
adc
adc
sub
sbb
in
lcall
jmp
andb
insb
enter
cld
addr16
lret
les
cmc
fidivs
pusha
push
loopne
mov
ljmp
and
fsubs
xchg
les
jns
mov
push
popf
stos
mov
ja
jg
mov
mov
fsub
and
mov
pop
shll
or
das
test
lock
mov
stc
test
sbb
addr16
push
add
ficoms
mov
push
dec
rorl
repnz
mov
mov
test
psubw
inc
jecxz
mov
loope
bound
test
inc
rcll
and
insl
test
cmp
push
arpl
inc
adc
push
fwait
inc
les
imul
and
jne
cmp
push
pop
pushf
mov
sbb
adc
xor
mov
and
and
or
es
rcr
aad
add
mov
jns
mov
push
mov
pop
nop
in
cmp
pop
aam
xorps
dec
mov
push
leave
mov
mov
push
inc
mov
jnp
notl
or
enter
fiaddl
inc
mov
adc
jnp
bound
shlb
jo
push
loop
lods
mov
cld
fistps
jmp
in
sti
jmp
sbb
test
test
xchg
sub
mulb
adc
clc
lret
shr
fisubrs
adc
mov
fldt
pop
shr
xor
jg
les
and
mov
adc
js
mov
outsb
xchg
mov
repnz
mov
loope
shl
lcall
shlb
push
in
adcl
inc
test
mov
call
add
xchg
stc
push
push
test
paddw
jns
jmp
imul
scas
mov
add
roll
aam
sub
xchg
imul
jmp
dec
inc
cmp
sbb
jae
xchg
subb
into
nop
cld
dec
pushf
imul
mov
fdivr
repnz
xor
add
and
stos
mov
loop
xor
xor
jbe
dec
pop
xchg
or
test
es
test
daa
rcl
rcrb
or
dec
mull
mov
flds
pop
cld
stos
insl
jns
aas
aam
hlt
loop
dec
stos
sub
dec
repz
jle
sbb
or
vpmullw
cs
stc
mov
inc
fwait
mov
or
and
xchg
lock
int3
fidivrs
xlat
iret
cltd
inc
push
shll
pop
rcrb
fyl2x
outsb
mov
aaa
mov
jne
jbe
add
pop
push
or
jecxz
sahf
cmp
mov
imul
scas
je
and
mov
int
insl
push
adc
fnstenv
xchg
loopne
sub
lods
enter
push
jecxz
sub
bound
xor
push
das
mov
sub
clc
and
pop
xchg
int
aas
push
push
call
push
ds
lahf
jb
xor
jb
stos
mov
jmp
xchg
cmovbe
lret
or
jne
or
lret
sahf
stc
dec
cmpsl
mov
cmp
out
out
or
rcrb
push
adc
ficomps
fidivrl
mov
add
dec
shll
xchg
ss
mov
jmp
inc
into
push
xchg
fcomp
lahf
lea
mov
jbe
xchg
jge
movsb
cmpsl
fcomps
add
or
dec
mov
addr16
imul
enter
mov
test
imul
jg
cld
xchg
or
and
call
jl
mov
fsubrl
mov
mov
lret
arpl
imul
jbe
leave
ret
sbb
inc
adc
in
jo
fcoml
or
enter
leave
or
insb
or
xor
iret
mov
or
lcall
xchg
and
lret
push
cmp
mov
xchg
ret
outsb
adc
cltd
icebp
pop
bound
mov
sbb
loope
jecxz
test
pusha
mov
imul
arpl
cmp
and
push
insb
xor
xchg
adcb
xchg
dec
out
out
ja
out
sbb
pop
mov
in
jecxz
mov
mov
cmp
imul
mov
out
mov
dec
cli
inc
xrstor
jne
fs
add
cld
mov
stos
adc
int
cld
or
xlat
or
mov
jg
pushf
mull
add
mov
mov
add
fdiv
sbb
jnp
aas
cmp
movsl
fisttpl
dec
jecxz
xchg
je
fwait
stc
pop
and
mov
add
xor
popa
push
lcall
mov
std
add
xor
add
jae
rcrl
xchg
imul
dec
jns
fucomi
repz
aas
aad
cmpsl
dec
test
clc
xchg
lret
sbb
xchg
or
cltd
xor
into
or
push
and
push
cmp
cmp
lock
pop
add
pop
fwait
xchg
jae
pop
cmp
es
lods
ret
pusha
insl
mov
dec
and
push
sbb
push
xchg
dec
in
movsl
sub
je
icebp
sub
je
lret
mov
xlat
movsb
inc
push
movsl
xchg
dec
lret
pop
and
pop
sub
pop
mov
leave
out
mov
js
push
sahf
aad
mov
loopne
or
dec
dec
out
bound
cmp
mov
clc
mov
push
ds
mov
nop
repnz
jge
sbb
push
ja
push
push
pop
mov
std
xchg
mov
jb
xchg
mov
daa
and
mov
jne
pop
adc
jp
mov
data16
fbstp
jmp
mov
nop
ficomps
sbb
add
lret
or
aas
flds
mov
mov
sbb
inc
push
fisubrs
out
sub
in
test
pusha
repnz
sbb
push
ficomps
imul
aad
in
and
add
inc
movsb
pop
inc
xchg
sub
int
mov
sbb
sbb
mov
mov
leave
imul
iret
cwtl
mov
dec
lahf
push
fidivs
aam
out
rcrl
cltd
push
lret
test
out
mov
push
lcall
xchg
push
hlt
or
aam
add
and
test
popa
pop
aaa
popa
push
sbb
xorl
sub
popf
mov
lods
fstl
popa
out
int
insb
mov
xor
jg
xor
pop
xchg
aam
inc
push
popa
xlat
or
pop
ficoms
and
imul
movsb
shrb
dec
mov
push
jmp
jp
int3
cltd
les
xchg
enter
call
inc
cmp
pop
adc
add
xor
and
aam
les
xchg
enter
call
inc
cmp
pop
adc
add
xor
and
aam
inc
mov
xchg
leave
add
mov
movsb
sbb
or
sub
dec
add
xor
and
aam
les
xchg
enter
push
out
xchg
je
adc
pushf
sar
lret
nop
fistl
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
out
idivl
pop
adc
adc
add
mov
lahf
push
popf
daa
out
xor
das
idivl
pop
cmpsl
outsl
mov
xchg
pop
ja
ja
inc
scas
pop
lahf
daa
mov
das
pop
iret
pop
ss
aas
fists
iret
push
mov
push
xchg
inc
jle
push
test
cli
das
lahf
daa
scas
pop
xchg
pop
cltd
inc
fisttps
jnp
xchg
hlt
xorb
loope
mov
mov
leave
das
add
ret
fbstp
test
or
xchg
in
addl
das
pop
push
mov
push
stos
pop
iret
call
mov
cmp
jg
cmp
xor
mov
xor
sbb
dec
incl
xor
jg
aas
push
psllq
pop
dec
mov
js
xchg
mov
jb
test
fdivrs
mov
pop
jp
dec
lock
lcall
scas
or
addr16
and
lret
filds
pop
and
and
filds
push
mov
je
lahf
rcrb
lcall
pop
xor
iret
cs
out
sub
pop
xlat
add
xchg
inc
jle
outsl
cmpsl
pop
xchg
dec
xchg
imull
call
mov
aas
mov
cmp
adc
and
xor
xor
daa
adcb
iret
jp
mov
aas
test
cmpsl
sbb
sbb
dec
xchg
les
and
adc
inc
sti
push
fsubl
popf
pop
nop
jno
jae
subb
stos
outsb
mov
jg
dec
xchg
pop
scas
ja
inc
push
lahf
daa
out
aaa
incl
iret
pop
das
idivl
pop
cmpsl
outsl
mov
xchg
pop
scas
ja
inc
push
lahf
daa
out
aaa
incl
iret
pop
das
fdivrs
lret
push
ret
dec
in
scas
adc
and
inc
les
call
push
jae
add
cmp
pop
stos
xor
sub
pop
mov
mov
sbb
mov
shl
mov
adcl
je
mov
insb
cmp
push
pop
dec
mov
push
and
xor
lock
push
shl
jae
rclb
sarl
mov
pop
iret
loop
shl
xlat
dec
ret
sub
mov
cltd
mov
fstps
arpl
out
mov
pop
lock
orl
jae
xchg
jo
mov
test
pop
dec
clc
fldcw
scas
add
xchg
sub
add
xor
sub
adc
cwtl
shr
xchg
jecxz
mov
aad
mov
gs
dec
fcomps
lahf
mov
jae
mov
or
xchg
das
data16
cmp
inc
and
sbb
adc
lcall
dec
repnz
add
scas
fs
mov
cmc
ret
fs
cmc
mov
mov
cwtl
jbe
cmp
and
push
jo
lahf
mov
mov
mov
movsl
cwtl
iret
xor
es
xor
cmp
mov
aaa
test
pop
lcall
or
inc
adc
stc
sbb
stos
aad
pop
dec
or
and
mov
les
lret
inc
int3
mov
mov
mov
outsl
push
test
sar
mov
lods
sub
push
jae
addl
adcb
mov
push
les
xchg
xor
outsb
in
jg
xor
sub
xchg
pop
fbld
sarl
pop
clc
pop
lock
repnz
stos
lea
xchg
std
stos
add
or
jge
enter
fcomps
das
cmp
adc
mov
push
int3
outsl
adc
imul
adc
dec
sbb
ja
imull
or
inc
cld
cmc
ja
aad
jo
push
shll
das
cmp
aas
push
jl
icebp
mov
cmp
mov
enter
mov
pop
stos
sub
jb
adc
cmc
mov
sahf
mov
addr16
mov
pop
dec
repz
fimull
sarb
xor
sbb
test
xor
xor
fnsave
test
outsl
inc
mov
fidivrl
insb
lahf
ja
and
sti
addr16
or
out
dec
addr16
stos
or
rorl
scas
adc
into
neg
mov
push
mov
mov
jae
xchg
sti
movsb
std
out
pop
ficomps
adc
or
fists
out
mov
cmp
inc
adc
mov
bound
and
and
cs
hlt
push
jp
andl
sti
lea
mov
mov
dec
dec
mov
xchg
cmp
popa
cmpsl
out
inc
fdivs
test
push
into
lds
push
lea
and
out
orl
and
xchg
loop
pusha
sbb
or
add
mov
fbld
cwtl
add
add
jne
jg
popf
fiadds
jl
jg
or
push
aas
jb
pop
xchg
insl
jmp
fstpt
adc
sbb
ficoml
adc
lcall
test
push
xchg
sar
insl
loop
popa
push
ret
lods
and
test
dec
pushf
mov
jbe
movsl
xchg
jl
lcall
mov
and
fidivrl
scas
flds
les
mov
add
loope
mov
outsl
lcall
mov
cmp
addr16
pusha
shl
and
add
call
adc
ss
das
pop
cld
add
mov
test
add
mov
repnz
and
mov
call
jae
xor
mov
push
add
jp
arpl
cld
cmp
mov
jbe
iret
stos
push
imull
jl
sub
imul
fisubl
and
xchg
jmp
mov
and
and
pop
ds
add
andb
pusha
je
idivb
xchg
lret
dec
mov
dec
imul
push
mov
lock
inc
pop
daa
out
sub
shrb
dec
fsubl
mov
push
mov
ret
es
je
lret
fistps
cld
push
or
in
push
mov
lea
dec
scas
lock
pop
or
sub
sbb
daa
lock
adc
cld
mov
mov
rcll
pop
mov
mov
movsb
pop
out
pop
jg
dec
pop
pop
sahf
xchg
push
push
leave
or
fiadds
inc
outsl
sbb
xchg
pop
bound
jg
jecxz
fnstenv
push
es
ljmp
pop
pop
ds
and
aad
pop
sbb
pop
leave
imull
cmpsb
sbb
repz
mov
xor
arpl
roll
push
jb
pop
and
jecxz
mov
outsb
mov
and
inc
xchg
cmp
arpl
sti
dec
in
xchg
xchg
ret
sub
xor
iret
test
mov
mov
jl
push
fadds
ret
ss
add
push
push
jmp
loopne
xchg
movl
das
jmp
pop
push
iret
mov
mov
xchg
xor
xchg
add
clc
in
popa
sbb
mov
shll
push
jno
xlat
jmp
cmp
pop
imul
jl
sub
dec
je
or
out
xchg
lods
es
mov
frstor
data16
dec
pushf
push
out
es
aad
dec
dec
fucomi
orl
lods
std
add
sbb
mov
sub
adc
cld
imul
and
xor
fcompl
xor
push
jecxz
sub
xchg
jecxz
lock
popa
jns
out
sbb
aaa
mov
pusha
jb
add
mov
repz
aaa
xchg
jns
and
ret
daa
js
cmp
push
in
sub
add
js
jge
loop
mov
stos
fucomi
sub
rorl
call
xchg
push
jle
fiaddl
or
sub
scas
ja
push
jecxz
jmp
xchg
dec
inc
in
mov
shrb
pop
fisttps
mov
jns
mov
int
jne
cmp
rcl
inc
mov
pushf
pop
jmp
pushf
sub
js
mov
pcmpeqd
add
mov
out
std
mov
in
xchg
dec
xor
cs
out
shr
mov
movsb
stos
xor
sbb
mov
sub
hlt
jbe
and
cli
dec
outsl
and
fbld
aad
lret
inc
sbb
cmp
mov
mov
adc
jmp
cmpsb
loope
dec
cmp
or
xchg
push
jle
mov
stos
sub
ficomps
fdivs
xor
popf
or
fisttps
jnp
adc
cmc
xchg
add
cmp
inc
insb
pop
and
jb
stos
outsl
push
cmpsb
or
and
aam
fs
pop
mov
jmp
add
dec
and
and
scas
sbb
add
jbe
je
sbb
push
in
adc
gs
or
xchg
push
incb
xor
or
idivb
cmp
xor
pop
in
leave
push
inc
dec
dec
movsl
popa
and
fnsave
imul
mov
fnsave
ss
inc
push
stc
adc
mov
stos
call
xor
inc
jl
cmp
les
aaa
push
scas
out
mov
sbb
cwtl
push
push
ret
rol
int3
das
inc
shlb
push
cmp
add
lods
sub
cmc
push
add
cs
cld
dec
dec
sub
jo
cmp
lahf
jp
in
mov
sub
jnp
adc
je
enter
dec
inc
mov
mov
sub
pop
cmp
xchg
push
pop
enter
xchg
test
xor
ss
aas
test
adc
sub
and
scas
rcrb
adc
mov
popa
pop
int3
lds
sbb
scas
mov
sbb
mov
sbb
aaa
adc
push
jbe
popf
xchg
or
iret
mov
mov
mov
mov
ja
daa
stos
aaa
adc
popa
shl
sar
jp
mov
aad
pop
lds
adc
cltd
clc
push
push
mov
and
cmc
outsb
push
into
adcb
xchg
inc
mulb
adc
in
push
and
push
add
in
mov
inc
cmp
mov
jecxz
cmc
or
adc
aam
xor
pop
mov
pusha
push
xlat
les
movsl
mov
xor
je
lods
xchg
mov
push
scas
xchg
mov
sub
cwtl
or
xor
add
inc
fwait
into
push
fildl
fs
mov
inc
pop
push
faddp
test
inc
jle
pop
mov
cmp
std
xor
fwait
popf
xor
fildl
mov
inc
popf
in
inc
push
cmc
bnd
movsl
rcrl
mov
out
jmp
or
les
push
fwait
pop
push
mov
jle
xchg
push
imul
pop
mov
fildll
adcl
je
cld
stc
or
xor
sub
mov
push
stos
sub
pop
nop
fld1
jae
pusha
or
or
push
movsl
lds
cmpsb
add
mov
cmc
or
cmp
push
pop
jg
sbb
bound
pop
xor
scas
lret
fiaddl
jmp
inc
jno
add
xchg
dec
ficoml
push
fcoms
push
jmp
xor
in
icebp
add
fwait
sbbl
pop
mov
mov
mov
adc
sbb
mov
xor
ja
test
scas
mov
popf
sub
inc
jp
ja
push
repz
stos
test
arpl
shl
addb
fwait
mov
popf
int3
mov
fwait
xlat
sbb
xchg
jne
fwait
inc
push
adc
rcr
or
sub
in
ret
dec
testb
adc
in
clc
push
jecxz
lods
or
mov
faddl
lcall
lods
xor
jo
sbb
sbb
xor
sub
test
test
jnp
frstor
sub
scas
jae
or
xchg
setae
mov
dec
not
jg
outsb
int
xlat
jg
fildll
and
sti
aad
lds
cmp
dec
mov
push
or
mov
xchg
cmp
dec
in
xchg
push
je
inc
jp
lret
pop
adc
fcmovu
dec
cmp
pop
sub
jne
out
fwait
and
lock
xchg
pusha
int
testb
push
fildll
pop
mov
cmp
fbstp
add
mov
cmp
add
xor
jg
pop
lcall
lods
ret
enter
xor
pusha
jae
mov
and
or
stos
and
or
sub
inc
mov
imul
adc
sbb
inc
inc
add
cmc
mov
cmpsl
scas
inc
outsb
jle
push
xor
pushf
loop
mov
loopne
push
inc
mov
sbb
lods
fstl
ret
sbb
pop
leave
jp
sub
stos
cwtl
cmp
in
scas
stos
pop
push
fcompl
jmp
dec
lods
shll
add
pop
push
outsb
lret
aad
notb
cmpsb
mov
ret
dec
mov
adc
cmpsb
pop
xor
lea
sub
sbb
add
movsl
ja
xor
lret
dec
mov
dec
pop
sbb
out
fs
mov
xchg
or
fldl
imul
icebp
cmp
xor
stos
sbbl
adc
dec
repnz
ljmp
pop
cld
out
call
push
loope
insb
test
arpl
dec
ss
sbb
outsl
sbb
jmp
xchg
sbb
or
scas
mov
or
jo
and
or
test
call
or
xchg
or
mov
xchg
fdivl
and
popa
std
mov
or
dec
push
mov
test
test
int
xor
mov
pop
loop
into
or
pop
cmp
int3
adc
xchg
jge
xchg
into
xlat
arpl
xor
in
inc
dec
cwtl
xor
xchg
popa
adc
mov
pop
repnz
and
xchg
add
mov
jecxz
stos
pop
or
inc
daa
mov
les
lock
and
lcall
jg
and
stos
adc
cld
addr16
pop
mov
pop
cmpsb
imul
cmp
arpl
not
xchg
xchg
mov
daa
sub
imul
cld
inc
scas
cld
xchg
pop
mov
jbe
xor
add
pop
push
es
icebp
fsubr
imul
out
fwait
movsl
sahf
shll
mov
mov
cmpsb
into
mov
cli
adc
sub
scas
xor
jecxz
movsb
push
out
dec
add
inc
arpl
mov
aam
test
enter
pop
jg
dec
pushf
out
lcall
jbe
cmp
jmp
fwait
pusha
xchg
sub
dec
pop
into
xchg
add
loopne
mov
test
adc
int
inc
mov
ljmp
int
arpl
mov
aas
loopne
faddp
insb
mov
test
ret
daa
and
or
test
adcl
mov
or
mov
sbb
cltd
jae
sub
lods
xchg
bound
cmpl
jecxz
xchg
out
and
xchg
sbb
sbb
cld
xchg
adc
xlat
insb
in
les
pop
mov
leave
mov
in
cmpsb
cmpsl
mov
cmp
ljmp
pop
cmpsb
mov
jbe
lods
push
mul
out
mov
repnz
fidivrl
dec
xor
daa
mov
xor
or
push
sbb
in
or
leave
jle
sub
inc
push
dec
xchg
push
adc
icebp
imul
mov
dec
adcl
inc
and
shlb
pop
dec
aam
and
pop
jne
jno
icebp
and
sub
orl
dec
mov
mov
and
notb
ss
inc
jle
mov
sti
loope
sub
mov
xchg
pop
or
xchg
sub
jecxz
clc
or
xor
stos
mov
lahf
ds
bound
outsb
jae
push
insb
push
fists
rol
ss
sbbb
sahf
int3
insl
mov
popa
dec
sbb
push
mov
pop
aam
enter
cvttps2pi
mov
adc
mov
fidivrs
dec
jg
inc
or
pop
aaa
loop
adc
daa
cmpsb
mov
or
and
mov
or
pop
mov
popf
insl
loope
sbb
data16
gs
sub
xchg
sub
mov
daa
out
fs
adc
in
imul
pop
xor
dec
jae
xchg
push
shrl
data16
xor
push
sbb
stos
into
lock
xchg
aad
and
loopne
mov
enter
fldl2e
xor
adc
aad
xchg
std
or
and
lods
xchg
mov
insb
rclb
add
int
dec
xchg
inc
mov
testl
sahf
ret
cwtl
insb
xchg
cltd
sbb
data16
sbb
push
xchg
dec
lods
popf
incb
push
call
scas
bound
sbb
or
sbb
repnz
pop
ret
mov
adcl
movsb
xchg
jae
sbb
arpl
fiaddl
ljmp
inc
bound
mov
stos
pop
outsb
xchg
test
popf
or
xchg
pop
jmp
lods
fistps
xchg
jmp
push
xchg
sub
fldt
mov
mov
sub
mov
shlb
mov
cltd
lds
pop
cmp
xchg
les
dec
or
stc
fnstenv
sub
pop
pop
jb
jnp
mov
pop
std
test
ret
fs
scas
repnz
dec
xor
push
dec
xchg
les
rorb
pop
movsl
dec
mov
fwait
aas
push
pop
dec
push
jbe
bound
push
mov
inc
inc
jae
jecxz
or
inc
jno
ret
jmp
fsub
mov
mov
pop
cmpb
lea
test
mov
inc
insb
push
mov
aas
dec
pop
cli
mov
cmp
test
dec
xchg
out
mov
ljmp
dec
cmpb
pushf
shl
ljmp
scas
ja
pop
fidivrl
fldt
outsb
idivb
lahf
or
out
xor
jg
xchg
addr16
xor
cmp
jl
adc
adc
fistpl
inc
jae
daa
sub
rol
int
xor
test
in
rorb
push
mov
xchg
xor
push
lods
inc
sub
stos
xchg
mov
dec
das
jg
jae
cwtl
push
in
in
mov
pushf
cmc
or
xchg
aad
push
adc
mov
cld
mov
aas
ds
cltd
add
xor
pop
cmpsl
nop
push
xchg
jno,pn
push
fsubs
out
fnsave
loop
movsl
pop
stos
je
cwtl
aad
ds
ret
daa
ljmp
or
mov
ds
sbb
xchg
std
fs
jecxz
shrb
push
pop
push
jle
lcall
hlt
push
popa
sahf
ss
std
icebp
pop
out
out
mov
push
mov
enter
inc
add
and
pop
jns
cmp
in
and
cld
mov
mov
add
daa
mov
lock
cmpsl
outsb
cmp
sub
cmc
jp
mov
xchg
repnz
shll
icebp
mov
sbb
int3
cmpl
daa
jb
fisubs
push
clc
mov
dec
inc
js
inc
jecxz
push
mov
lcall
aas
in
hlt
add
push
fsubl
dec
xchg
sub
loopne
fsubl
roll
call
inc
cmpl
lcall
adc
xchg
inc
pop
xchg
pop
pop
daa
lahf
fwait
popf
hlt
outsb
jae
imul
jmp
inc
inc
pop
movsl
stc
xchg
in
mov
jnp
popf
adc
mov
cmp
dec
mov
gs
adc
cmp
adc
popf
sbb
sbb
je
adcb
inc
cmp
inc
lods
pop
and
mov
lret
lods
test
mov
pop
jp
das
push
out
xchg
loopne
pop
fildll
jne
sbb
xor
sbb
imul
loop
cld
sub
enter
movsbl
dec
or
ljmp
insl
test
fldcw
into
cmpsb
jle
jb
lcall
es
testl
enter
or
or
clc
pop
fsubrs
mov
mov
inc
add
or
fld
stos
xchg
adc
test
adc
cmpsl
mov
fsubs
sarl
xor
stos
xchg
inc
jno
mov
ret
daa
jg
pop
loopne
test
fwait
testl
loop
cmp
sub
rcll
push
clc
loop
rolb
sbb
stos
push
dec
aas
mov
push
jg
inc
mov
and
fmul
mov
or
daa
rcll
add
add
xor
xor
and
and
shll
dec
pusha
and
inc
scas
loope
call
mov
cwtl
pop
aaa
inc
cli
dec
mov
shrb
pop
fbstp
out
not
inc
loop
enter
xchg
mov
adc
mov
xchg
arpl
or
mov
loop
in
pop
sti
es
xlat
stos
push
nop
dec
nop
mov
xchg
xchg
je
arpl
cltd
aad
cmp
jmp
cltd
fsubrp
insb
push
dec
jp
insl
testl
rorb
mov
pop
xor
int
mov
mov
add
movsb
cld
fwait
cmp
stc
into
and
mov
inc
xchg
mov
jmp
push
pop
adc
divl
outsb
mov
lret
loop
xor
pop
aas
xor
lret
loope
sub
cld
iret
movsl
mov
and
into
loop
xor
mov
add
sub
inc
push
icebp
dec
sub
dec
pop
les
fsubs
leave
ret
stc
dec
mov
xchg
mov
cmp
mov
push
add
repnz
xlat
pop
stos
cmpsb
ret
lds
repnz
mov
repnz
xlat
fldenv
mov
shr
xchg
out
inc
xchg
daa
fs
icebp
sub
sbb
hlt
add
xchg
or
add
xor
xor
mov
fstl
add
and
into
lret
popf
jge
or
pop
mov
mov
leave
sbb
cmpsb
jl
icebp
or
xchg
sbb
lret
cmp
cmp
popa
aaa
in
bnd
mov
cltd
sbb
xchg
addl
xlat
out
loopne
popa
jnp
movsb
pop
xchg
movsb
push
jo
pop
ret
aas
jbe
fisubrs
xchg
push
xlat
sbb
push
stc
in
mov
inc
nop
jbe
ss
cmp
dec
pop
push
imul
nop
lods
sbbb
mov
mov
enter
inc
or
push
cwtl
jns
shr
adc
adc
cmpsb
test
xchg
mov
xchg
cltd
xchg
pop
enter
cmpl
loopne
pop
cmpsl
outsl
mov
xchg
pop
scas
ja
inc
push
lahf
daa
out
aaa
incl
iret
pop
das
idivl
pop
cmpsl
outsl
mov
xchg
pop
scas
ja
inc
push
lahf
daa
out
aaa
incl
iret
pop
das
idivl
pop
cmpsl
outsl
mov
xchg
pop
scas
ja
inc
push
sahf
daa
out
incl
into
adc
aas
pop
movsl
outsl
mov
pop
dec
pop
pop
cwtl
scas
mov
push
addr16
and
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
dec
adc
std
xor
and
pusha
xor
push
leave
setge
insl
cmpb
sbbb
cmpb
or
add
add
and
push
lods
inc
xor
pusha
jmp
aam
bound
inc
sarl
jg
std
sub
fisttps
pop
subl
mov
fcoml
aam
jp
push
cmpl
pusha
in
add
pop
lcall
imul
jns
dec
sbb
clc
dec
out
inc
adc
in
xor
mov
fistps
jg
dec
and
xchg
sbb
insl
nop
popf
in
add
jns
loop
push
incb
bound
js
xchg
loopne
clc
loopne
pop
shrb
or
daa
or
rcr
stos
gs
push
aad
jbe
bound
cld
mov
mov
or
clc
call
add
jo
cwtl
jg,pt
movsl
mov
cmp
sbb
loop
sub
lods
out
ljmp
outsl
insl
jg
dec
mov
inc
adc
ret
loopne
shr
add
inc
lods
pop
mov
mov
cwtl
mov
enter
lock
gs
push
mov
fldcw
clc
in
cmpb
cmp
xor
inc
movsb
dec
xchg
dec
test
add
ret
sbb
and
sub
sub
cmp
insb
loopne
jns
xor
sub
inc
mov
nop
insl
cmpb
mov
cmp
adc
add
xor
and
push
lods
inc
mov
nop
insl
cmpb
mov
cmp
adc
ret
sub
dec
icebp
jg
pop
imul
aam
xor
sahf
cmp
mov
mov
out
pop
mov
adc
push
xor
nop
pop
mov
jge
js
add
push
daa
nop
jbe
pop
push
stos
dec
lock
out
mov
mov
push
loop
imul
pop
and
jae
mov
mov
xor
inc
inc
add
xchg
ret
mov
xchg
sbb
lcall
call
mov
jnp
popa
inc
arpl
mov
dec
sub
jge
in
cmp
fsubrl
jmp
xchg
aam
jle
xor
and
clc
fwait
pop
test
pop
lahf
mov
mov
xchg
cli
es
dec
rcl
stos
incl
pop
iret
adcb
in
dec
push
int
dec
xor
jns
ljmp
add
or
mov
add
and
and
sub
xor
inc
mov
addr16
add
mov
jp
cmpsl
or
sub
insl
inc
movsb
es
and
push
sbb
mov
jno
shlb
mov
aam
adc
fistpll
adc
push
sbb
mov
lds
inc
call
sub
push
je
xchg
pop
and
pop
push
int
dec
cmpb
loope
adc
or
fisttpl
cld
dec
aaa
inc
pushf
and
inc
in
dec
enter
jnp
shlb
or
sbb
and
cmp
or
pop
dec
int
mov
subl
in
lcall
sbb
jo
sub
mov
lds
or
adc
pop
testb
inc
mov
inc
lock
xchg
mov
loop
fwait
cmpsl
or
mov
mov
push
in
outsb
xor
xchg
es
int
jl
sbb
lret
daa
xchg
adc
cmpl
fcoml
mov
push
xor
insb
push
or
out
ja
ljmp
cld
dec
mov
sbb
filds
xor
into
add
shll
pop
mov
cmp
stc
data16
clc
push
dec
inc
jge
jmp
pop
xlat
push
jno
mov
mov
shr
inc
scas
pop
addl
jnp
mov
xchg
mov
adc
cwtl
ss
les
push
sub
add
imul
pop
fs
repnz
mov
leave
into
das
pushf
push
cmpsb
icebp
jo
mov
loope
mov
out
movsl
push
push
out
dec
fsubs
lret
jecxz
cwtl
dec
or
insl
in
cmpsb
mov
jp
movsl
mov
mov
das
cmc
xor
lea
inc
dec
adc
or
add
sub
adc
inc
hlt
ljmp
and
and
cmp
lret
dec
and
xchg
cmp
xor
aad
fstpl
in
cmpsb
call
push
cld
jns
pop
adc
mov
adc
pop
mov
sbb
push
fldenv
sar
push
sub
sub
pushl
popa
es
sbb
fistpll
or
enter
mov
pop
dec
ljmp
in
jae
into
cmp
add
mov
mov
fsubl
xor
push
cwtl
popa
push
aas
aas
insl
jle
or
addr16
jo
sub
jne
adc
push
fidivl
call
ret
je
dec
mov
mov
cmp
and
inc
sub
addl
ret
shll
xchg
jl
mov
cmp
pop
loop
push
and
jmp
mov
mov
popa
jmp
dec
rcll
in
into
inc
je
and
sub
pop
cld
pop
sbb
addb
lock
int3
sub
jecxz
pop
call
popf
mov
das
sub
pop
xchg
xchg
ret
shrb
movsl
int
lock
xor
mov
dec
repnz
lock
mov
pop
push
adc
fwait
loopne
enter
dec
in
mov
rorb
sbb
mov
jne
sbb
cmp
nop
mov
dec
mov
xor
dec
xor
pop
pop
rcll
mov
jb
jb
or
mov
jecxz
cmp
cli
dec
insl
aad
lret
sbb
fisttps
aad
movsl
push
cmp
jns
lods
nop
xchg
sub
out
and
mov
xchg
data16
push
add
subb
dec
pusha
mov
add
lods
pop
mov
push
adcl
leave
test
or
imul
mov
in
pushf
cmpsb
push
arpl
add
subb
lret
dec
sbb
inc
inc
fs
pop
je
jl
ret
dec
mov
out
or
xchg
xor
scas
hlt
pusha
add
dec
test
or
fwait
inc
in
adc
in
jnp
dec
pop
roll
mov
and
sbbb
sbb
xchg
sub
adc
sbb
loop
sbb
jbe
les
ja
adcl
dec
pop
insl
pop
pushf
hlt
js
je
add
sbb
inc
pushf
ret
subl
xchg
cmp
xor
shrb
or
cmp
test
cmc
push
adc
rcr
stos
jo
or
ljmp
aaa
jae
iret
in
jge
shrl
jno
fldln2
repz
jbe
es
jge
stos
sahf
orl
xlat
lret
iret
pause
in
lea
aaa
test
sbb
imul
bound
imul
lcall
scas
cmp
cli
mov
fisubrs
adc
lods
cmp
inc
pop
fistl
out
ljmp
push
mov
jp
adc
and
or
dec
fnstenv
repnz
adc
mov
repnz
lret
clc
aam
jmp
mov
xchg
xor
loope
sub
scas
mov
dec
aam
mov
sub
mov
dec
pop
outsl
stos
jns
xchg
aad
push
sbb
fst
add
mov
dec
sti
sub
arpl
shlb
xor
insl
bnd
das
and
mov
sar
andb
in
stos
imul
xor
push
loope
push
enter
mov
mov
inc
add
test
pop
in
js
rsm
add
leave
in
insb
aam
xor
mov
iret
cmp
xchg
subl
cmc
pop
lock
mov
hlt
pop
xor
mov
sub
mov
imul
scas
je
jb
cmp
inc
xor
enter
inc
and
dec
xor
add
and
inc
std
scas
dec
push
pushf
adc
fists
int3
test
xor
jp
mov
ljmp
test
add
insl
xchg
mov
mov
adc
jmp
cmp
mov
or
call
xchg
inc
sub
dec
mov
loop
mull
loop
push
sbb
iret
push
movsb
inc
adc
je
aaa
pop
in
dec
cli
outsb
xor
add
push
sub
adc
mov
leave
lods
mov
sbb
das
fimull
adc
inc
shll
xor
adc
or
add
shlb
adc
mov
dec
mov
xor
je
es
cmp
xor
cld
sbb
push
imul
push
daa
sub
and
or
insb
mov
fcomip
pushf
das
xchg
inc
sub
sub
lret
sti
jmp
jle
dec
test
xorl
jge
xchg
push
push
data16
mov
mov
adc
roll
xorb
pop
sahf
in
nop
scas
mul
fistpl
mov
ret
out
hlt
mov
fstps
dec
cmp
ficompl
push
xchg
mov
lea
push
xor
mov
jae
scas
mov
xor
and
xor
in
aad
cli
js
or
inc
lea
add
notb
xor
inc
jbe
sub
mov
outsb
adc
jge
lahf
or
cmp
dec
stos
xor
pop
getsec
ss
call
mov
mov
in
fcoml
popa
jo
aas
lret
lahf
daa
pop
adc
inc
push
outsb
lret
cs
cmp
ljmp
fld
ds
divl
xlat
cld
mov
pop
jp
mov
sbb
cmp
or
and
jle
lods
insb
mov
cmc
or
sub
mov
shrl
daa
daa
mov
sbb
insb
or
pusha
jo
orb
jge
int
daa
xchg
pusha
addr16
popf
or
cli
imul
arpl
lock
idivl
xor
mov
add
mov
xor
cmpsl
jbe,pn
insl
imul
out
push
lahf
cli
dec
adc
cmpsl
add
ss
and
add
stos
cmp
dec
lods
int3
dec
sti
add
pop
jb
divl
aam
imul
lret
push
loop
movsl
shr
test
pop
out
mov
xchg
fwait
xchg
sbb
fstl
jno
jmp
hlt
push
jl
ret
aaa
or
scas
dec
loop
aaa
mov
adc
outsb
repnz
push
jg
ds
xorl
jnp
aas
fsubr
pop
mov
mov
stos
outsb
cmp
filds
and
xchg
andb
jae
notl
push
dec
hlt
icebp
mov
mov
stos
and
fiaddl
jp
nop
fadd
sbb
insl
sahf
addr16
int3
enter
fisubs
or
mov
sub
xor
ja
lcall
mov
push
clc
inc
or
inc
adcb
loope
aas
jecxz
jnp
pop
sbb
adc
mov
xchg
dec
cmp
jno
mov
fsubr
jp
push
imul
mov
shrb
insl
mov
fpatan
nop
adc
mov
lods
stos
imul
mov
or
negb
ja
xchg
decb
fsubrl
int
inc
or
arpl
jno
cmp
jb
enter
lods
sbb
mov
cmp
or
fs
rolb
arpl
xchg
nop
js
fsubrl
pop
hlt
aam
push
pop
ja
cmpl
test
dec
fimull
repz
pop
or
mov
xor
add
rorl
push
pop
inc
test
icebp
scas
sub
pop
dec
mov
add
mov
add
pop
cltd
std
out
or
xor
xlat
mov
push
negl
cmpsl
std
jp
jecxz
repnz
dec
add
movsb
aaa
xor
mov
add
adc
jnp
pop
adc
jb
out
mov
cmp
loope
cmp
imul
push
inc
sub
fisubrs
decl
pop
cld
and
fidivs
cltd
xchg
fistpl
push
incb
fmull
push
subl
into
pushf
lods
lret
out
dec
mov
outsb
add
rclb
aam
jnp
push
dec
mov
jecxz
lahf
ret
inc
jecxz
add
xor
xchg
jb
dec
inc
push
adc
inc
adc
xchg
jnp
aad
or
aas
push
comiss
or
push
mov
sahf
jecxz
or
adc
adc
jle
stos
mov
jl
pop
shlb
int3
sbb
les
mov
ret
push
std
cli
mov
fsubrl
and
fwait
pop
pusha
cmp
popf
sbb
push
pop
add
jg
ret
fisubrl
and
lods
add
cmp
ret
xor
mov
cmp
popf
mov
mov
xchg
lea
ja
popf
cmp
inc
mov
int3
aam
dec
scas
mov
pop
add
ror
push
and
out
je
jecxz
push
mov
lcall
sbb
mov
fisubrl
pop
and
pop
xor
loop
cmp
icebp
cmc
pushf
fisubs
cltd
enter
and
add
cmpsb
fstpl
push
add
xor
or
jne
sub
les
dec
and
out
xchg
insl
mov
xchg
daa
cld
les
imul
scas
lcall
sbb
push
dec
repz
mov
inc
pushf
inc
add
push
test
js
xchg
stos
jmp
cmp
mov
add
push
scas
pop
scas
or
in
or
sti
push
loope
clc
dec
or
xor
fnsave
pop
add
sub
cmpb
inc
movsl
push
lods
mov
mov
mov
cmpsl
xchg
stos
rcr
cmpsb
or
test
xor
adc
adc
test
fs
rcr
push
dec
jne
call
jbe
xor
iret
mov
xor
jne
ljmp
stos
adc
add
jns
jg
cmpsb
faddl
mov
pushf
mov
lock
test
or
sub
enter
repz
add
and
addb
ljmp
es
pushf
sub
pop
mov
ja
push
ror
shlb
and
push
lods
dec
ljmp
nop
sbb
and
fdivrl
movsl
cmpsb
xor
sti
sub
ds
sti
cmpsl
sbb
les
les
shrl
inc
xor
jo
add
out
inc
movsl
test
enter
imul
loop
popf
pop
add
enter
out
mov
xor
dec
pop
adcl
fs
gs
mov
data16
mov
sbb
int
inc
cld
push
xchg
outsb
add
lods
mov
ss
icebp
test
sub
fdivl
push
xor
xchg
inc
push
fdiv
xor
pop
adc
add
loop
dec
push
cwtl
mov
mov
sub
or
jno
cmp
or
faddl
push
test
daa
sbb
pushf
dec
adc
movsl
push
inc
pusha
sbb
sbb
jg
jno
mov
xchg
loopne
mov
les
rclb
adcl
mov
cmpsb
fs
pop
arpl
lcall
jge
sti
xor
dec
mull
pcmpeqw
insl
adc
inc
inc
mov
daa
xchg
mov
cwtl
or
xor
mov
inc
notl
std
jp
mov
mov
pop
adc
adc
out
insl
out
xor
rsm
addr16
cmp
aaa
and
fdivl
inc
insl
inc
movsb
dec
ds
jnp
inc
imul
and
adc
add
dec
cld
fidivrl
aaa
sub
adc
xchg
addl
ljmp
add
add
adc
aas
in
shll
push
mov
mov
add
cmpsb
shll
stos
xor
scas
mov
mov
mov
xorb
jmp
ss
mov
mov
jno
out
fsubs
into
jae
fildll
lds
mov
aas
call
jle
sbb
out
cld
aad
inc
jbe
sub
sbb
mov
sub
and
stos
mov
push
test
xchg
test
outsl
ftst
ficoml
stos
xor
fwait
sub
lds
inc
aam
cld
sub
sbb
add
insb
das
push
stos
jecxz
xor
sub
call
push
rorl
test
mov
sbbl
subl
push
in
aam
aad
mov
movsl
xchg
jne
xchg
adc
out
jbe
jns
xchg
cmp
sub
inc
sub
jp
mov
dec
test
es
mov
shll
sub
adc
outsb
in
cmp
dec
jl
adc
les
pop
enter
sbb
xor
rol
pop
add
inc
mov
fisubs
stos
gs
jl
addr16
std
push
inc
push
ret
or
mov
scas
jb
pop
add
push
xchg
and
in
mov
pop
mov
mov
xor
and
aaa
xchg
lahf
mov
ljmp
popf
push
nop
sti
dec
mov
xchg
inc
loop
aaa
pop
push
dec
and
mov
sub
and
and
add
aas
ficoml
std
shrl
or
adc
mov
scas
in
fnstsw
je
icebp
dec
sbb
sub
cmpsl
enter
faddl
pop
lret
push
jae
and
push
cmp
fisttps
mov
pop
jmp
aas
inc
stos
int
add
xor
clc
jns
jb
shll
mov
xchg
jecxz
call
outsb
sbb
enter
in
jns
and
fiaddl
mov
and
push
adc
repnz
gs
dec
or
and
xchg
xchg
imul
in
test
mov
mov
sub
mov
xor
jns
andl
cwtl
and
push
inc
xchg
insb
decl
adc
sbb
test
xor
nop
cld
add
adc
test
andb
xlat
or
aas
fistps
ds
inc
repz
or
pop
sbb
sub
mov
movsb
addr16
xchg
dec
xor
stc
push
rcrb
mov
lods
xchg
xchg
outsl
dec
aad
leave
or
add
xchg
insl
add
jmp
cmp
mov
cmp
push
sub
jo
xchg
or
and
outsl
repnz
nop
add
mov
push
roll
das
pushl
stos
pusha
in
jb
sub
repz
jp
loop
cmp
int3
dec
stos
and
xchg
clc
out
jne
or
in
sub
mov
mov
adc
sbb
das
mov
loop
ds
cmc
fidivrs
pop
or
dec
out
fbld
adc
push
mov
cmp
rorl
mov
out
pop
mov
xchg
addr16
popa
dec
insb
adc
xchg
outsb
les
mov
shll
fwait
imul
pop
data16
sarl
ja
ret
jne
mov
repz
adc
xor
pop
pop
mov
lretw
ljmp
mov
push
jecxz
jo
pop
out
mov
sbbl
rorl
pop
call
lds
rorb
cmpsl
insb
lahf
stos
pop
mov
outsb
sbb
aad
rcrb
pop
scas
fisubs
dec
lock
mov
orl
jp
mov
imulb
sbbl
rcll
inc
test
mov
xor
shlb
cmpsb
jge
jne
mov
fdivs
bound
shl
fildl
or
pop
mov
pop
adc
dec
fnstsw
jl
stc
inc
adc
inc
mov
mov
cmp
das
fdiv
xor
dec
and
push
not
in
sub
push
std
and
push
push
sbb
jb
mov
and
adc
xor
jg
insb
sar
jb
xor
push
adc
cmp
lret
add
ret
aad
jne
dec
repnz
pushf
push
or
mov
outsl
cmp
push
lods
call
aas
cmpsl
lea
cmp
icebp
or
pusha
jns
mov
fsts
imul
sbb
adc
loopne
sub
daa
sahf
sub
or
mov
sub
mov
mov
dec
out
lock
test
cmp
leave
inc
int
sbb
or
pop
lret
out
mov
cmp
dec
and
je
add
pusha
cmp
sub
mov
in
mov
in
sbb
adc
and
inc
sti
mov
clc
out
std
nop
push
leave
adc
mov
popfw
xor
in
push
or
cmp
mov
xchg
mov
pop
mov
mov
fldcw
push
cmp
dec
push
loop
insb
pushl
inc
dec
jl
pop
lods
mov
mov
sub
sbb
mov
xor
pushf
lahf
in
cmp
dec
mov
mov
jge
mov
xorb
loopne
cmpsl
scas
sub
sub
xor
scas
sti
mov
lahf
sbb
mov
mov
das
cmp
push
sbb
andb
xchg
mov
cmpsl
and
adcb
jmp
push
jnp
dec
jae
fnstenv
call
push
in
bound
sub
addr16
shl
cmpsl
push
add
sbb
lea
mov
xor
mov
push
ljmp
loop
inc
mov
dec
out
cli
cmc
sarl
fsubrp
mov
dec
mov
cmp
push
inc
push
add
mov
dec
cli
mov
sbbl
popf
xchg
loopne
push
test
loope
sbb
dec
adc
test
insb
push
sarl
out
ret
fwait
stos
ljmp
out
pop
mov
ret
sbb
push
pop
cmp
adc
lcall
xor
adc
fsts
jmp
and
mov
shlb
xchg
loop
xchg
iret
sbb
cld
push
lret
sub
mov
push
scas
push
test
add
imul
dec
imul
adc
adc
pushf
das
stc
fldt
sbb
sarl
xlat
jnp
push
shlb
fstl
inc
mov
nop
insl
cmpb
mov
cmp
adc
add
xor
and
push
lods
inc
mov
nop
insl
cmpb
mov
cmp
adc
add
push
lods
inc
adc
nop
mov
jge
dec
mov
cmp
and
xor
push
int
fcoml
inc
mov
outsl
xchg
jg
sbb
sub
repnz
loop
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
test
mov
out
mov
out
xchg
rolb
or
addr16
aaa
pop
daa
test
mov
out
xchg
clc
xchg
mov
mov
push
cmp
jg
addr16
js
dec
aaa
pop
daa
test
mov
xchg
call
mov
sbb
sbb
cmp
xchg
faddl
and
and
fdiv
mov
sub
cmp
insb
loopne
xor
andl
cmp
ss
and
mov
xchg
add
pop
mov
mov
scas
in
pop
arpl
jle
inc
xchg
sub
push
or
cltd
cmp
add
loopne
xlat
mov
out
sub
dec
ja
sub
mov
xchg
add
mov
enter
add
push
movsb
clc
xchg
popf
pop
shlb
xchg
gs
cmp
adc
fs
stos
push
sub
dec
adcb
sub
or
fsubs
mull
cmc
inc
or
pop
mov
out
xchg
clc
xchg
mov
xor
or
pop
push
das
pop
adc
loope
icebp
mov
xor
loopne
adc
aaa
or
pusha
add
push
js
sub
dec
int
fldl
call
fimuls
xor
and
push
pop
and
sub
daa
out
hlt
mov
fsubs
or
addr16
aaa
pop
daa
test
mov
out
xchg
clc
xchg
mov
cmpsl
sub
inc
or
addr16
aaa
pop
daa
test
popf
xchg
adc
lock
rcl
xchg
jecxz
fisubs
lcall
dec
bound
sbb
jne
dec
inc
inc
pop
and
stos
fldenv
and
or
es
pop
jg
and
cmpb
mov
sub
out
ljmp
repnz
mov
cwtl
xchg
addr16
dec
pop
leave
push
push
aas
mov
mov
movsl
xchg
and
filds
scas
mov
in
sahf
mov
mov
jo
sarl
jno
rep
dec
and
mov
xor
ja
or
adcb
pop
push
insl
lock
mov
jle
dec
sub
test
add
jmp
dec
stos
sub
inc
loopne
idivb
pop
pop
fisttpll
fcom
jb
sbb
jg
inc
or
pushl
mov
push
scas
scas
jl
fcmovnb
ja
jge
ret
ds
jb
jmp
mov
movsl
pop
ds
xchg
mov
push
jmp
xchg
adc
sub
aad
add
pop
sahf
xchg
cmpsb
call
xchg
outsb
popf
les
addr16
cli
movsb
in
in
xchg
xchg
or
or
int3
lea
sub
adc
imul
mov
jmp
sbb
sti
das
push
lcall
adc
inc
dec
gs
in
fnstsw
push
loope
fistl
xchg
inc
out
jae
and
out
sub
aas
add
arpl
mov
jmp
cwtl
mov
pop
adc
sti
mov
sub
aas
cmp
lea
repz
sub
or
inc
sub
mov
fs
fstl
mov
cmp
inc
dec
xor
arpl
movsl
mov
pop
movsb
int
data16
xchg
cmp
scas
mov
cltd
into
sbb
cld
cld
jg
pop
pop
inc
stos
pop
add
lcall
cmp
adc
sub
mov
xchg
mov
mov
inc
out
fs
mov
jge
mov
or
add
scas
dec
cmp
in
pop
addr16
or
xchg
cmc
pop
aaa
iret
mov
arpl
outsb
jmp
cmp
decl
dec
push
or
and
sbb
roll
rcrb
adc
dec
cmp
push
shll
cmp
inc
aad
mov
pop
xchg
repnz
lcall
inc
stos
int3
sub
xchg
jecxz
insb
fs
and
and
push
out
scas
and
mov
ds
ja
lret
pop
inc
lret
push
test
mov
mov
ds
push
clc
xchg
enter
fabs
pop
jge
pop
push
test
and
push
dec
add
pop
ret
inc
test
xchg
inc
jne
je
outsl
jne
outsb
fstpt
and
dec
mov
mov
lock
lds
jmp
mov
xor
es
shlb
push
mov
in
sbb
sti
cmp
sbb
sbb
loop
mov
dec
ret
fisttpll
shrl
cmpsb
mov
out
dec
cmp
outsb
out
bound
notb
sahf
inc
mov
and
xchg
movsb
lret
inc
dec
jno
or
test
xorl
inc
xor
adc
aas
xchg
in
push
mov
sti
scas
fstpl
push
pushf
jp
xor
notb
icebp
mov
nop
xchg
scas
lahf
push
rclb
xor
aas
push
nop
call
sbb
int
sbb
xor
pcmpeqd
insb
out
push
sbb
jne
fprem
aam
in
enter
pop
test
sbb
dec
dec
clc
das
rcll
dec
ljmp
cmpsl
test
roll
jg
jnp
push
adc
jnp
xchg
mov
addb
xchg
xchg
dec
mov
shlb
ret
mov
adc
xor
xchg
popa
test
out
outsb
fs
xchg
insb
adc
bound
mov
mov
mov
xchg
pop
shlb
sbb
xchg
xchg
pop
decb
arpl
aam
and
out
arpl
xor
pop
cld
mulb
pusha
dec
sub
jecxz
test
gs
leave
lock
inc
icebp
sub
int
pop
xchg
fucomip
cli
dec
scas
push
and
dec
add
insb
xchg
mov
dec
xchg
mov
sbb
mov
xlat
fbstp
adc
jmp
das
bound
jne
ss
mov
je
pop
xor
xchg
loope
fwait
pop
addr16
or
jmp
ret
loop
sbb
mov
lea
jb
lock
cmp
movsl
stos
mov
add
dec
push
inc
cld
dec
sahf
dec
cmp
lea
test
movb
add
push
es
in
cwtl
lret
add
pop
frstor
jb
fmuls
fcomps
leave
fisttpl
leave
cwtl
rcrl
popf
xor
or
or
pushw
lret
lcall
out
sub
out
repz
xchg
arpl
daa
cmpsl
and
aas
mov
mov
push
lods
sub
shr
daa
cmc
fldcw
std
clc
adc
mov
lret
jns
push
sub
jae
lds
mov
fwait
out
fs
add
je
rclb
pop
xor
push
cmp
push
test
arpl
fld
movl
jp
je
add
and
inc
insb
sub
xchg
leave
mov
lea
rorb
adc
rolb
mov
dec
pusha
sbbb
dec
sub
cmp
dec
pusha
or
jmp
inc
push
outsb
inc
scas
out
cmp
lock
enter
jne
push
iret
mov
fistl
lock
or
xorb
and
push
aad
shlb
in
fldenv
fsubr
dec
movd
mov
in
xor
push
add
jg
int
cmpsl
daa
mov
mov
jl
dec
jp
mov
in
stos
mov
int3
jle
test
and
jae
out
mov
jmp
pop
pop
addr16
psubusb
shll
insl
ja
out
mov
subb
push
dec
ljmp
add
cmp
push
mov
cmp
sub
fisubrs
fstps
xchg
rol
movsb
dec
dec
jbe
lret
xchg
adc
mov
cmp
les
jg
dec
ljmp
adc
in
movsb
pushf
add
test
jae
or
gs
inc
test
shlb
push
jno
lcall
pop
cmpsl
and
call
inc
cmpsl
add
mov
lds
dec
out
dec
inc
into
outsb
cwtl
dec
xchg
cmp
dec
push
lcall
movsb
adc
mov
jnp
jle
pop
in
std
dec
mov
out
rcl
ret
mov
mov
sub
jae
mov
push
iret
add
pusha
cli
add
mov
ss
es
shll
nop
addl
xor
cmpb
call
out
and
arpl
xchg
pop
in
and
pop
jmp
add
std
xchg
xor
mov
jl
mov
je
inc
dec
push
out
push
out
xchg
pop
fiaddl
push
test
inc
sti
and
out
pop
xor
and
pop
mov
sub
int3
shll
add
in
sub
arpl
mov
mov
sub
and
fnstsw
sahf
pop
fucomi
lods
jl
inc
dec
jae
cmp
outsl
dec
and
mov
ds
pusha
loop
or
xor
sbb
ds
and
jno
add
icebp
push
dec
call
es
pushf
in
stc
sub
orl
mov
and
or
dec
out
mov
jbe
or
ljmp
or
test
lods
mov
cs
jecxz
fiadds
repnz
repz
ljmp
dec
in
ss
dec
lahf
dec
outsb
ds
std
lock
in
cli
sbb
and
int3
and
es
mov
cmc
lods
inc
rorb
push
jae
inc
push
lahf
pop
jg
ljmp
mov
jl
add
movsl
cmp
dec
dec
mov
cmp
add
jne
dec
jp
ret
shl
and
aas
pop
stos
xchg
adc
cmp
bound
mov
dec
mov
cli
into
mov
mov
add
adc
xlat
jge
and
xchg
call
pop
pushf
mov
jle,pn
in
lret
xchg
arpl
fldcw
jae
push
dec
pop
sub
xchg
cli
bound
mov
inc
mov
fdivl
and
test
insb
push
cs
mov
dec
xchg
mov
jnp
cli
in
jbe
pop
inc
fmuls
icebp
rorb
pop
sbb
aaa
stc
imul
fstps
fimull
stos
push
jnp
andl
repz
lret
js
test
adc
pusha
enter
scas
int3
lcall
sbb
jne
and
test
inc
lahf
sub
mov
in
xchg
pushf
cmp
in
enter
and
popf
les
je
add
jb
xchg
shll
fldt
out
inc
adc
arpl
scas
cmpsl
enter
cmp
jne
sub
ja
push
sbb
pop
pop
ja
jae
pop
push
add
pop
jge
fucomi
nop
add
subb
inc
push
arpl
std
xor
lods
push
fldl2e
lock
sbb
aas
mov
lds
and
dec
dec
les
pop
push
stc
pushf
xor
inc
lods
imul
cmp
xor
add
jg
mov
add
in
test
jg
pop
imul
int3
add
inc
ss
mov
jmp
gs
cmpsb
xchg
mov
jo
je
pop
pusha
sahf
jnp
xor
pushf
out
mov
push
or
fs
cmp
mov
sbb
xor
lds
js
xor
nop
inc
mov
stos
pop
ficomps
scas
lret
push
lahf
testl
shlb
cli
xchg
cmpsb
add
outsl
push
adc
push
sub
rclb
sbb
sahf
nop
jo
sbb
idivl
sbbl
ret
fidivl
xor
or
sbb
fiaddl
subl
gs
adc
sarl
push
mov
lods
adc
dec
xchg
xor
mov
cmp
aaa
add
nop
inc
or
pop
aad
xor
push
mov
adc
int3
rclb
jae
pop
int3
adc
xchg
adc
lea
movsb
cld
pop
jmp
and
hlt
maskmovq
negl
andl
flds
mov
fbld
cmp
and
sahf
rcrl
test
cmc
and
mov
sbb
faddp
pop
push
imul
sahf
arpl
push
pop
dec
and
jb
mov
xor
lock
cli
push
dec
cmc
in
or
loop
push
jns
lret
mov
imul
fs
xchg
push
inc
jecxz
aam
pop
cli
fdivrs
mov
mov
xor
add
push
add
mov
pop
ja
fstps
decl
push
adc
xor
mov
sti
xor
xchg
xchg
arpl
xor
cmpsl
es
fdivrs
mov
inc
sahf
sbb
pop
sar
clc
mov
add
cli
xor
mov
xor
movsb
adc
sti
inc
es
mov
aad
gs
jns
push
push
mov
call
leave
sti
sahf
mov
std
and
cmp
dec
inc
push
fmuls
aas
sbb
xchg
int
addb
mov
sbb
jae
pop
xchg
sub
enter
inc
je
dec
shlb
jae
mov
and
xchg
fadds
mull
andb
shlb
in
adc
repnz
imul
out
aaa
mov
xor
fidivl
and
mov
sarb
jmp
pop
jns
xor
dec
jne
cmpsb
dec
pop
jmp
fdiv
cmp
cmpsl
jb
bound
lret
mov
xor
sbb
aaa
xor
out
push
jnp
push
loop
inc
out
mov
adc
lds
pusha
xchg
imul
icebp
dec
inc
fdivrl
test
mov
test
sbb
xor
outsb
adc
pop
inc
es
cld
scas
xchg
dec
lret
arpl
cli
xchg
call
gs
and
cltd
xchg
shrb
inc
or
dec
or
stc
mov
push
pushf
movsb
sti
mov
or
xchg
add
incl
clc
jle
xchg
mov
mov
test
or
push
mov
or
pop
aam
pop
xchg
cmp
push
jge
ljmp
cwtl
fs
cmp
sub
dec
xor
sub
ret
bound
int
pop
popf
lahf
add
out
sbb
cltd
xchg
stc
push
pushf
gs
dec
cmp
loop
dec
test
pop
loop
fwait
sbb
imul
mov
sub
test
xchg
jecxz
inc
lea
or
popf
jbe
sbb
js
shlb
test
pusha
jmp
clc
push
in
pop
test
dec
mov
stos
mov
add
lret
adc
iret
inc
mov
push
dec
push
push
fwait
and
cmp
stos
shl
xchg
pop
adc
mov
add
adc
rcrl
push
sti
test
sub
std
pop
fbstp
or
pop
into
push
in
out
in
push
cmc
pop
push
movsl
sbb
fisubrs
stos
add
mov
mov
enter
xlat
dec
mov
fcomi
push
push
pop
enter
sub
xor
cmp
movsb
insl
cs
sub
mov
pop
sbb
xor
gs
add
outsb
jmp
out
rolb
in
sub
mov
mov
push
adc
xchg
rcll
xor
aad
lret
pop
inc
test
xchg
xor
std
loope
add
aam
cli
sub
pop
jmp
clc
or
adc
dec
loop
ljmp
add
mov
imul
and
in
movsb
out
pop
in
pop
xchg
mov
shr
sub
lds
imul
and
and
mov
fdiv
mov
push
xchg
cmpsb
mov
call
lcall
inc
repnz
repz
dec
add
jae
hlt
xchg
xchg
in
mov
dec
in
cs
mov
push
lock
sub
push
or
mov
push
out
jmp
jl
mov
cltd
dec
or
imul
ds
imul
sub
in
jp
cld
mov
in
cmp
movsl
aam
jno
jp
xchg
daa
lcall
xor
adc
aad
rep
or
fistl
das
dec
cmp
out
xor
inc
xchg
aas
add
cmp
sub
mov
push
jb
aam
dec
outsl
cmp
mov
or
movsl
push
mov
shrb
xlat
mul
xchg
test
stc
fidivrl
xorl
add
pop
jp
push
xchg
repz
push
push
aas
popf
mov
ds
lahf
xlat
mov
mov
xor
je
adc
pusha
shll
filds
inc
dec
or
call
sub
push
imulb
aaa
loopne
push
sub
mov
sbb
sbb
stos
mov
cwtl
rclb
inc
mov
cmc
push
pop
lcall
push
outsl
add
xor
roll
and
mov
imul
or
lods
popf
or
fwait
int3
lcall
aad
mov
cmpsl
cmp
in
out
jp
stos
lods
pop
enter
rorl
dec
es
fidivl
imul
test
xchg
cs
fwait
push
clc
sbb
mov
dec
stos
adc
adc
popl
xchg
xchg
cmp
aam
lcall
shlb
jno
xchg
push
das
sti
or
outsl
imul
out
lret
jle
daa
dec
dec
ret
loope
test
sbb
ret
cltd
nop
in
in
or
fstpt
or
mov
mov
leave
scas
inc
pop
and
mov
push
jl
fsubrs
xchg
cmp
and
inc
lds
fbstp
inc
mov
or
data16
leave
test
jmp
imul
push
lret
fwait
adc
aad
sub
in
div
jnp
or
mov
sahf
sbb
cli
or
and
push
sti
sbb
sub
loope
stos
mov
or
shl
or
sub
out
ja
dec
pop
ret
mov
sbb
pop
add
xchg
dec
call
xor
jbe
push
cmp
aas
popa
sub
jge
sub
jl
sub
cmc
ret
push
xchg
mov
inc
jns
pop
xchg
pop
mov
dec
repz
loopne
test
out
cmpsl
and
cmc
mov
mov
adc
in
shll
xchg
loope
insl
pop
testl
outsb
xor
add
or
lret
or
push
lret
out
cmpsb
xchg
test
jb
sub
out
insb
dec
insb
and
fwait
scas
clc
std
sti
pop
fldcw
add
cmc
ja
pusha
int
jge
xor
enter
jb
sub
inc
add
xchg
stos
outsl
mov
dec
sbb
lea
out
jno
out
loop
rol
jnp
sub
fcoms
jb
xor
fwait
das
add
add
inc
xchg
subl
gs
mov
or
mov
dec
orb
mov
hlt
scas
cmp
into
push
bound
rclb
xor
rorb
mov
sub
jmp
loop
push
adc
out
cmp
fldenv
sub
xor
daa
ret
jb
lret
insl
cltd
lds
lahf
inc
jne
fldenv
test
stos
into
sarb
mov
movsl
or
imul
mov
push
fimull
push
icebp
das
lret
cmp
xor
jl
hlt
add
pushl
dec
pushf
scas
mov
and
cmc
jle
fdiv
or
ss
es
cs
add
popf
in
cli
mov
pop
aas
aas
sub
push
cmpsb
sub
cmp
roll
lahf
pop
pop
mov
xchg
mov
dec
mov
fsubrl
dec
or
pop
ljmp
pushf
xchg
jns
pop
jmp
je
pop
cmp
insl
btsl
popa
adc
inc
pop
pop
push
ficomps
lret
lds
inc
sti
sub
sub
mov
or
arpl
nop
repz
mov
sbb
lahf
and
mov
sbbb
ds
pop
test
adc
adc
clc
lock
add
push
cwtl
mov
aam
jbe
sbb
inc
jge
jne
gs
fdivr
mov
sub
ror
es
add
cmp
icebp
dec
jae
add
loopne
loop,pt
or
mov
and
add
aam
std
add
int3
notl
sti
popa
loopne
lds
mov
jmp
and
xor
sub
ret
sbb
mulb
out
jg
cmpb
mov
aad
mov
test
in
push
push
leave
loopne
sub
or
xchg
jb
or
lret
mov
fwait
sbb
mov
pop
loop
add
outsl
out
js
dec
rcrl
add
push
sbb
and
mov
clc
add
push
jle
sbb
in
insb
push
cmpsb
outsl
mov
or
fists
lock
sti
dec
rclb
fwait
inc
ds
push
rcll
mov
lret
cmpsl
or
movsl
popf
vmwrite
cmc
call
popf
cmp
sbb
inc
pop
xchg
mov
push
jl
popf
and
and
adc
hlt
dec
daa
mov
mov
loop
xchg
jecxz
and
jl
icebp
jge
dec
out
add
icebp
xor
dec
cmc
fsubl
push
or
vpcmpestrm
xlat
mov
fcmovu
rcl
int
mov
repz
add
mov
sbb
sub
out
test
test
cmp
mov
sahf
mov
outsb
xchg
cli
xor
test
mov
pop
mov
das
les
rolb
outsb
shl
mov
add
or
xchg
test
and
test
jecxz
xor
and
pop
loop
cmp
sbb
sbb
ret
pop
adc
mov
decl
std
lods
mov
push
inc
push
ret
dec
mov
xor
ljmp
pusha
arpl
pop
inc
push
mov
out
shlb
arpl
sub
shl
and
cwtl
and
in
loopne
shr
mov
sarl
test
push
mov
cmc
adc
int3
add
sbb
aad
or
and
or
jg
sub
fidivrs
or
outsb
jno
xlat
test
sahf
sar
ss
je
sbb
inc
sub
cs
inc
pop
xor
pop
jmp
int3
scas
lods
test
pop
int3
mov
adc
es
push
movsb
loop
mov
mov
enter
cltd
jge
jmp
setne
std
sub
xchg
stos
mov
cld
mov
daa
mov
lahf
mov
cwtl
out
xchg
clc
xchg
mov
cmpsl
sub
inc
or
addr16
aaa
pop
daa
test
mov
out
xchg
clc
xchg
mov
cmpsl
sub
inc
or
addr16
aaa
pop
daa
test
cmp
or
cwtl
jecxz
xchg
clc
in
enter
sub
inc
or
outsb
push
ds
ret
test
mov
cmpsl
call
aaa
fsubs
test
in
mov
outsl
or
dec
sub
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
mov
mov
popf
movsb
mov
sub
or
pop
insl
pop
jns
imul
fldln2
stc
int
cmp
cmp
dec
pop
jns
imul
shr
fucom
int
cmp
inc
and
push
cmp
hlt
aad
stc
out
fdivr
into
mov
sbb
push
inc
testl
jge
rolb
adc
push
test
cmp
lret
out
notl
cmp
pop
mov
loop
mov
loop
lret
cmp
push
addr16
in
cmp
sub
lods
jbe
inc
or
std
fscale
fldenv
lea
notl
gs
jns
sbb
jbe
inc
mov
inc
sbb
mov
sub
roll
sub
inc
xchg
std
fiaddl
and
clc
inc
mov
in
dec
inc
jno
test
jecxz
lods
cltd
popf
mov
in
leave
int
cmp
and
push
pop
arpl
sti
cltd
sti
clc
fsubr
int3
xchg
jl
sub
jle
popa
dec
sbb
dec
sbb
sbb
int
call
xchg
int
pop
insl
das
insb
pop
pop
dec
sub
sub
dec
das
push
dec
sbb
hlt
fisttpll
int
cmp
cmp
dec
pop
jns
imul
fldln2
leave
int
cmp
cmp
dec
pop
jns
imul
push
jne
loop
out
dec
mov
int
cmp
sub
sbb
or
repnz
lods
cmp
addl
adc
mov
sti
jecxz
shll
push
dec
dec
mov
pushf
sbb
sbb
cmp
xchg
xchg
add
aas
repnz
dec
or
push
inc
jbe
sbb
xor
scas
sbb
xchg
lret
insb
ss
fnsave
cld
add
fwait
repz
mov
or
push
popa
gs
out
test
repz
cmpsb
mov
jbe
mov
pop
jns
jne
xchg
pop
lods
in
scas
loope
js
fmull
cmpl
fidivrs
or
ror
push
mov
adc
call
ds
xlat
outsl
inc
jb
xchg
cmpsb
xlat
dec
das
push
cltd
repnz
sbb
das
std
xorl
das
cmp
call
je
mov
mov
xor
mov
ja
call
push
or
mov
lret
loope
dec
adc
mov
inc
and
in
cmp
push
dec
sbb
push
dec
xchg
out
ds
and
xlat
in
or
or
roll
xchg
or
test
sbb
loop
dec
fcom
dec
mov
pushf
cld
mov
cli
sbb
nop
xor
daa
or
test
lret
push
shrl
and
mov
outsb
in
fistpl
shll
cmp
dec
sub
std
sub
cli
xor
mov
and
jb
pop
jbe
jle
in
iret
lea
test
mov
mov
ffree
bound
push
or
in
les
jo
dec
sbb
gs
out
mov
adc
mov
fildll
push
mov
lret
lea
add
mov
clc
mov
xchg
xor
cs
dec
lret
and
and
mov
fstpt
loopne
repz
pushw
lds
aaa
jnp
pop
xchg
in
stos
and
mov
aaa
nop
or
sub
stos
inc
lock
pop
cmp
adc
sbb
lcall
and
jne
rclb
cmc
fisttpl
jae
out
fmull
cmpsl
mov
fcoml
push
jae
imul
lods
jmp
fsubrs
or
xchg
and
fidivrs
js
sbb
lea
stc
pop
adc
aam
adc
ficompl
jmp
xor
addr16
inc
cmpsl
scas
gs
orl
fisttps
icebp
notl
hlt
mov
out
fwait
aaa
sub
push
sub
test
push
pop
insb
js
shlb
push
aaa
into
iret
popf
mov
movsl
jbe
fwait
test
mov
in
jmp
inc
es
aas
nop
cmp
mov
repnz
loopne
and
add
les
adc
cmp
cmp
mov
pop
and
jo
mov
daa
ja
call
rorb
outsb
loop
dec
pop
adc
cmp
mov
xor
pop
jl
mov
xor
icebp
inc
out
les
lret
adc
loopne
mov
mov
push
popa
loopne
inc
xor
arpl
mov
mov
ret
cmp
xor
imul
xor
repnz
jp
pop
sbb
stos
jb,pn
inc
pop
insb
js
pop
les
pop
push
and
loopne
lret
test
pop
fsub
xorb
fnsave
jle
push
sub
gs
or
add
jno
int
sbb
xor
xor
cmc
cmp
dec
sbb
icebp
adc
sti
or
push
cwtl
xchg
sub
adc
fstenv
shlb
test
xchg
cmpsb
jecxz
out
mov
fwait
mov
int
mov
scas
test
sub
jge
imul
pop
inc
mov
pop
add
xchg
fwait
idiv
mov
out
xor
leave
sub
xchg
subl
cmc
scas
loope
test
ror
mov
pop
pop
cltd
add
jmp
popa
std
push
cmp
and
xchg
fistl
inc
out
sbbb
outsl
xchg
fwait
add
jbe
add
icebp
sub
push
push
mov
push
pop
loop
adc
sbb
jmp
jp
push
sbb
outsb
push
fsubrs
ds
loop
cli
push
sbb
pop
ret
les
ret
lcall
fimuls
fisttpl
out
or
lods
dec
nop
mov
add
sub
xlat
fdivrs
sub
cmp
xchg
adc
pop
test
pushl
xlat
cmp
stos
hlt
in
repnz
sbb
scas
pop
popf
out
pop
movsl
inc
leave
mov
ret
jge
push
daa
stos
push
ss
mov
add
outsl
ss
adc
xchg
into
mov
and
mov
pop
arpl
pop
and
and
and
inc
jp
iret
jp
add
mov
sbb
mov
test
mov
mov
mov
jnp
jle
jmp
cmpsb
mov
ret
cli
pop
or
mov
js
dec
inc
dec
fld
dec
mov
mov
cmp
jb
mov
ret
and
xor
push
add
dec
imul
cltd
sahf
or
mov
adc
outsb
jg
loopne
enter
mov
daa
mov
mov
rorb
rol
add
fsubl
jp
arpl
inc
push
jae
movsl
notb
push
popf
loopne
sbb
xor
sbb
lcall
and
imul
jo
mov
inc
cmp
ss
in
pop
jle
dec
sub
mov
bnd
mov
jle
rcll
mov
and
pop
xchg
ja
scas
dec
push
leave
jmp
add
ret
fmuls
inc
jno
pop
sahf
sbb
leave
and
call
std
popa
scas
imul
mov
hlt
mov
addb
sti
cmpsl
out
icebp
rorb
adc
sbb
imull
and
push
push
out
pop
rcll
jbe
mov
sbb
cmpsb
inc
mov
loopne
invd
jecxz
or
in
mov
lcall
ret
or
jb
js
dec
pop
inc
mov
xchg
mov
add
adcl
adc
sbb
fwait
js
std
pop
insb
or
push
jb
rorl
push
sahf
into
mov
je
add
mov
cmpsl
adc
adc
add
inc
aas
lar
out
or
idiv
and
scas
xchg
add
fsts
xchg
inc
cli
jge
xor
in
pop
mov
popl
lret
sub
or
xchg
xor
inc
inc
xlat
int
rorl
pop
outsl
xchg
mov
sbb
jl
je
cwtl
add
adc
sub
jg
out
sarb
rcrl
mov
cwtl
inc
xlat
cmc
iret
dec
in
or
dec
sbb
imul
mov
xor
push
into
mov
stc
jmp
sub
out
lahf
xchg
jnp
push
insb
add
jbe
mov
pop
push
adc
lock
xchg
popa
or
arpl
loope
lret
enter
inc
inc
add
out
lahf
sbb
inc
push
jo
insl
pop
mov
lods
push
rol
mov
shlb
loope
jg
pop
sar
negb
ss
push
into
outsb
mov
lock
pusha
lahf
stos
jecxz
sbbl
mov
mov
aaa
out
sub
test
dec
dec
scas
mov
scas
jno
scas
push
cs
mov
clc
loope
cmp
and
xor
lock
jb
movsl
rol
shlb
fildl
sbb
pop
call
gs
cmp
cmp
mov
jb
xor
shrl
jbe
outsl
lret
sub
and
in
or
pop
daa
or
sbb
sub
ljmp
ret
mov
jge
pusha
sbb
jb
fmull
push
test
jno
inc
sbb
jl
inc
pop
fs
sub
test
andl
in
or
loopne
dec
jno
xor
lock
xor
cmp
outsb
or
mov
call
sbb
lret
sbb
cld
in
rcll
xor
pusha
push
pop
cltd
cmpsb
fiaddl
andb
mov
and
bsr
cltd
add
dec
in
scas
test
sar
mov
aas
pop
leave
push
rolb
add
je
outsb
xchg
pop
jmp
out
pushf
push
jge
dec
stos
insb
push
test
xor
inc
test
dec
cwtl
daa
call
mov
shll
xor
imul
addr16
jge
mov
or
cmc
ds
xlat
imul
mov
test
or
mov
jecxz
dec
mov
aaa
mov
call
cmp
insl
mov
sbb
push
cmp
jecxz
ret
cmpsb
out
xor
lods
push
cmp
lea
gs
repnz
sbb
cmp
movsl
lcall
je
cmp
sti
lods
push
push
loopne
lods
pushf
inc
imul
xor
or
in
leave
inc
sub
mov
pop
dec
pop
lahf
dec
inc
sbb
push
cli
arpl
mov
popa
mov
jecxz
xor
rcrb
push
cmpsl
hlt
xchg
test
negl
icebp
jae
data16
lcall
insb
sbb
xchg
xchg
orb
fildll
mov
cmpsl
add
fucomp
add
mov
pop
in
popa
mov
jbe
dec
imul
mov
and
xchg
pop
fisubs
jmp
movsl
test
les
mov
cmc
mov
inc
insb
divb
or
jge
pusha
mov
inc
icebp
mov
repnz
cmp
inc
sahf
cmp
or
jl
xchg
sub
fimull
mov
std
mov
mov
inc
pop
jle
fidivl
pop
sbb
fimull
in
mov
mov
adc
cld
fptan
pop
xchg
sbb
and
les
mov
loopne
sub
xchg
mov
pushf
lock
repnz
xor
leave
out
and
jp
add
stos
dec
in
cmp
jg
jg
pushf
lock
sub
fisubl
sbbb
sub
xor
add
shlb
test
sub
mov
cs
loopne
hlt
movsb
cmpsl
or
add
pop
sbb
and
imul
adc
pop
xchg
enter
mov
push
mov
ljmp
fcoms
inc
daa
xchg
int
jo
shlb
push
roll
dec
cmp
jno
xor
gs
scas
adc
push
iret
jl
adc
je
insb
pop
inc
jmp
pop
int3
dec
cmp
arpl
sub
stos
and
mov
push
orb
add
or
insl
cmc
setno
shrl
scas
cmc
inc
jns
cmp
orl
add
and
xchg
jo
xor
cs
mov
into
fwait
pop
add
stc
jp
frstor
loopne
add
cwtl
add
sub
mov
xchg
dec
out
cmpl
cmp
dec
jecxz
arpl
jmp
mov
cmpsl
or
xchg
out
out
cld
adc
or
lods
mov
pop
cmc
mov
jle
sub
jbe
xorb
inc
add
jge
cmp
test
jb
pop
cmpsb
es
mov
inc
fs
jg
cmpb
addr16
outsb
xor
aam
mov
mov
sarl
sbb
inc
cwtl
fdivs
je
aad
mov
inc
xor
mov
mov
aaa
jo
lcall
in
add
sub
mov
sub
aaa
xchg
sahf
sub
jmp
int3
js
mov
cmp
pop
out
stos
cmp
sbb
xchg
movsl
xor
jne
clc
push
movb
and
loope
popl
pop
ljmp
clc
nop
das
or
nop
aad
out
mov
adc
stc
jno
in
pop
stos
mov
mov
push
xor
mov
jp
loopne
cmp
arpl
cmp
inc
mov
pushl
dec
popf
movsb
loop
mov
jl
lret
mov
pushf
cs
cmp
int
out
push
pop
jle
test
push
or
push
cwtl
sti
adc
inc
add
icebp
jl
repnz
xchg
das
out
sarl
inc
mov
jbe
lds
ret
ret
cmpsb
pop
jo
loope
jae
pusha
jo
fnstcw
inc
das
mov
gs
fs
jmp
pop
push
rcrb
jge
dec
dec
fildll
pop
mov
int
mov
sub
lods
sbb
cmp
addl
sarb
sahf
adc
pop
jmp
jae
test
filds
xchg
pushf
and
loopne
xchg
leave
lods
mov
rcrb
fidivl
cmp
loope
add
dec
lea
shlb
notl
jmp
sbb
inc
or
shlb
push
les
sub
pop
or
mov
testb
cs
leave
movsl
pop
scas
sub
mov
lret
repnz
mov
vminpd
or
in
push
fiaddl
testl
out
push
insb
sub
lcall
and
push
sub
cld
cmp
std
xchg
push
rcll
or
xchg
fbstp
arpl
push
mov
leave
shl
rcrb
mov
pop
arpl
sbb
cli
push
int
push
jns
push
loop
pusha
mov
cltd
and
fidivs
push
sahf
push
repnz
icebp
idivl
mov
inc
xor
call
mov
pusha
and
aam
aam
ja
inc
sahf
outsb
les
sub
popa
div
jbe
mov
mov
xchg
xchg
dec
call
or
ffreep
dec
es
xchg
aaa
insb
test
mov
push
mov
sahf
les
shr
sub
adc
mov
cmp
adc
std
push
popa
cmpsb
into
push
mov
mov
sub
test
mov
test
lea
cmp
iret
mov
add
pop
pop
dec
aad
cli
es
in
mov
cmp
out
adc
fidivs
insl
add
push
sbb
stc
mov
sahf
and
mov
mov
cmpb
daa
mov
ds
and
mov
insb
sub
inc
out
sub
scas
clc
cli
sub
lcall
cwtl
fstpl
aad
test
sub
cmp
daa
lods
xor
xor
dec
push
mov
sbb
push
fdivrs
cmpsl
hlt
daa
andb
or
lret
inc
mov
jmp
push
rcrl
and
nop
dec
jmp
xor
mov
ss
push
mov
mov
jle
pop
mov
es
inc
pop
jmp
push
pop
fcomps
rcll
pushl
jge
rcll
or
imul
fstps
mov
jns
mov
add
fnclex
pop
cmp
enter
push
jg
movsl
cld
xchg
add
add
popa
mov
fildl
adc
leave
dec
fmull
fmul
ja
or
push
lcall
mov
dec
pop
push
roll
roll
push
mov
adc
or
or
sbb
xchg
cmp
testl
insl
or
out
stos
fcmove
cmpsb
es
shrl
dec
lret
aas
xchg
lret
iret
push
pop
cmp
xchg
push
pop
and
or
imull
mov
es
xchg
sub
mov
aas
cmc
sub
movsb
add
xor
xor
cmp
imul
push
or
xor
jp
xor
ljmp
shll
and
mov
pop
pop
jbe
inc
pushf
push
push
dec
add
mov
aas
jle
add
sbb
xchg
cmp
sahf
enter
clc
mov
fisubrs
push
ljmp
imul
imul
and
pop
push
test
jnp
jl
cmpsb
in
mov
loope
sub
add
ds
js
test
mov
cmpb
xchg
sbb
movsl
fs
enter
mov
rclb
test
sbb
jmp
int
push
out
insl
pop
int
and
push
and
rcrb
aaa
jbe
xor
add
and
std
lcall
fdivrs
addl
fiaddl
imul
andb
or
fwait
dec
stos
sbb
add
lret
mov
inc
fsubr
mov
xchg
or
mov
mov
aam
pop
loopne
fistps
ljmp
pop
mov
fwait
sbb
or
lock
push
push
pusha
fbld
ficoml
testl
fists
cmpsb
dec
push
pop
sbb
pop
fisubs
xchg
add
stos
imul
cmpsl
sahf
lock
sbb
cmp
inc
xchg
jecxz
lea
jae
sub
cld
jae
movb
data16
loope
lcall
fmull
fisttps
mov
xor
leave
daa
or
xor
outsb
int3
lods
cmp
call
in
data16
cmp
mov
clc
inc
pusha
outsl
andb
pop
dec
push
mov
and
push
rclb
cmp
pushf
xchg
popa
mov
gs
stc
aaa
cli
lds
aam
cli
mov
ja
inc
and
xchg
inc
mov
insb
nop
mov
lock
shl
push
xor
jns
dec
add
mov
inc
aam
scas
inc
jecxz
aaa
or
out
icebp
push
outsb
and
xorb
push
xchg
leave
pop
mov
xchg
call
pop
jle
addr16
push
xor
rclb
inc
stos
sub
mov
jne
int
jno
pushf
out
mov
out
popf
cmp
jl
xchg
and
add
jle
pop
sub
and
loopne
in
lcall
mov
in
jle
and
mov
dec
sti
adc
mov
xchg
test
adc
ret
pop
jae
xchg
mull
xchg
jl
insl
pop
cmc
dec
mov
dec
cmp
cmp
jnp
and
int3
xchg
idivl
mov
icebp
filds
inc
ret
sbb
mov
test
popa
shl
imul
lret
adc
pop
dec
test
adc
inc
daa
and
cld
mov
xchg
adc
ja
addr16
js
and
lahf
not
clc
xlat
and
or
cmp
ds
mov
stos
jmp
add
es
insb
sbb
cmc
stc
inc
xchg
push
adc
mov
mov
lds
aad
mov
fistpl
push
xchg
inc
testl
ds
dec
adc
loopne
inc
jmp
cmp
or
add
jle
sub
cmpsl
mov
setnp
notb
cwtl
pop
lea
xchg
xor
cmp
aam
inc
mov
and
outsb
fwait
test
fwait
std
sbb
adc
scas
cmp
icebp
ss
jno
sub
mov
movsl
pop
data16
repz
popa
and
jge
xchg
add
sbb
clc
addr16
jae
dec
mov
and
popl
and
add
mov
xchg
addr16
push
or
mov
mov
xlat
add
jg
cmpl
pushf
ret
aam
adc
sbb
cltd
push
sub
fxch
xchg
xor
xchg
mov
lods
fildll
lods
leave
repz
pop
and
pushf
cmpsl
push
push
dec
adc
cmpsl
loope
mov
and
cwtl
xor
mov
shl
inc
std
dec
lea
and
pop
jb
movl
or
rorb
jbe
sbb
pop
fadds
fnstsw
xor
lahf
xchg
push
push
or
jecxz
dec
sub
pop
out
mov
cmpb
xor
cmp
adc
pop
roll
push
inc
pop
sbb
adc
sahf
call
nop
and
xchg
sti
push
aas
jmp
push
daa
enter
aas
cs
ret
adc
or
mov
adc
add
rcll
push
outsb
adc
sti
pop
aas
std
push
popa
lahf
jl
mov
adc
cmpsb
inc
lcall
cs
fs
ljmp
xchg
repz
dec
fstl
xor
and
jbe
lcall
xchg
xor
cmp
add
outsl
sbb
push
mov
aam
gs
cld
cmpsb
jmp
xor
inc
mov
pop
dec
into
and
push
xchg
call
mov
jae
loop
xor
xorb
add
fcom
add
mov
in
leave
int
cmp
cmp
dec
pop
jns
imul
fldln2
leave
int
cmp
cmp
dec
pop
jns
imul
fldln2
leave
int
cmp
cmp
dec
pop
jge
insl
mov
mov
in
leave
int
cmp
cmp
mov
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
