jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
cld
in
mov
dec
cs
push
addr16
je
cmpsb
add
or
or
add
add
add
add
add
call
add
add
add
adc
add
add
push
add
add
add
pop
add
add
ss
mov
aaa
add
add
insl
add
sub
lret
add
add
pop
add
add
add
add
add
add
add
push
add
add
add
fldl
jbe
jno
mov
lret
add
add
faddl
ss
add
pop
lret
add
add
add
add
lret
add
add
add
add
add
add
add
faddl
cmp
fldl
jbe
jo
mov
lret
add
out
faddl
ss
add
pop
lret
add
roll
faddl
lret
add
jbe
ja
lret
add
faddl
lcall
add
lret
add
add
faddl
and
sbb
lods
add
add
add
add
movsl
add
add
add
add
je
or
lret
add
add
sahf
add
add
add
add
add
add
add
add
or
lret
add
mov
cmp
push
add
add
add
add
add
or
faddl
add
add
add
mov
add
add
add
add
add
add
add
ljmp
add
ljmp
add
add
add
sub
faddl
sbb
add
or
flds
lret
add
or
insb
add
add
add
add
ja
sbb
flds
cmp
lret
add
add
add
jo
faddl
ret
add
add
add
add
add
add
ss
add
add
faddl
mov
adc
adc
add
add
add
adc
jno
push
add
add
add
add
add
add
add
cmpsb
add
lret
add
add
add
add
lret
add
ljmp
add
test
ljmp
add
add
add
fadds
faddl
test
flds
sub
add
addr16
add
xor
cmp
cmp
adc
add
add
loop
cld
add
add
add
add
addl
add
add
add
add
add
add
pusha
add
add
faddl
das
add
add
addl
add
add
add
add
or
add
add
add
add
add
addl
add
mov
faddl
ss
add
daa
add
add
add
add
add
add
add
add
loop
imul
fadds
pop
add
add
add
add
lret
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
mov
lret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jne
aad
inc
add
add
test
call
add
nop
add
add
add
add
add
add
sub
add
add
test
dec
xchg
jns
test
push
sub
xchg
in
test
jge
cmp
icebp
or
and
inc
fwait
int3
int
mov
jmp
aas
add
pop
fcoml
and
dec
cmpsl
lds
out
xchg
mov
mov
inc
or
adc
test
jl
push
stc
imul
dec
out
and
cvtdq2ps
push
dec
lret
stos
rcll
outsl
add
adc
sub
adcl
mov
jmp
inc
push
loopne
mov
ret
inc
test
xlat
adc
ja
test
push
repnz
out
push
movsb
jo
push
nop
int
jbe
cltd
hlt
xchg
sub
repz
add
ja
cmc
xor
xchg
and
jb
lds
mov
jns
jne
mov
je
push
fcmovne
es
sub
ja
mov
add
add
test
aam
aaa
xor
push
add
cwtl
lcall
lds
mov
loopne,pn
add
mov
cwtl
mov
loopne
sbb
pop
mov
xchg
push
out
fldcw
or
jae
sbbl
rclb
insb
xor
sub
inc
sbb
inc
cwtl
xchg
aaa
sbb
pop
repz
es
lret
and
push
mov
mov
and
pop
mov
scas
sub
daa
push
push
cltd
xchg
push
pop
pop
jg
sub
stos
push
jge
out
rolb
imul
and
fucomip
pop
sub
inc
test
mov
aas
add
cmp
add
and
loope
stc
cmp
aam
ret
inc
sub
test
mov
sub
repz
mov
pop
add
adc
xchg
inc
jecxz
loopne
fdivrl
int
mov
xchg
sarb
sub
js
sbb
sti
dec
mov
mov
stos
mov
clc
push
les
sahf
popf
out
cmc
lods
sbb
ljmp
movsb
add
sbb
mov
stc
les
dec
insb
cmp
jo
sbb
and
pop
adcl
std
addr16
dec
fldt
inc
test
push
imul
and
daa
cmp
and
cmp
std
mov
inc
popf
call
add
xor
rorb
fldl
pop
stos
push
push
add
cli
mov
dec
adc
pop
sbb
pop
mov
mov
pop
in
sbb
and
out
lret
stos
pop
int3
ficoms
push
fsubrs
sub
mov
into
inc
jo
in
sub
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
dec
outsb
pop
jle
dec
jg
setbe
packuswb
push
sbb
out
into
scas
lahf
xor
outsb
pop
jle
dec
jg
ucomiss
cs
push
aas
push
loop
decb
fcompl
sahf
divl
addr16
push
cmpsl
inc
adc
jg
xor
aas
add
out
cld
fldl
loope
lret
jecxz
and
adc
outsl
sub
cmp
out
push
in
adc
mov
mov
lret
lret
xor
mov
inc
cli
push
and
int
icebp
mov
cmp
stos
add
add
jo
ret
loopne
jle
data16
sbb
movsl
pop
adc
cltd
out
cli
movsb
jmp
lahf
or
pop
mov
xor
orl
jp
fwait
into
push
filds
imul
push
jo
lahf
cmp
jmp
orl
xchg
dec
movsb
push
mov
out
adc
ss
scas
push
fnsave
or
adc
rorb
or
xchg
xchg
xor
and
xchg
pop
scas
mov
outsl
push
jg
jmp
addr16
push
cltd
pop
or
inc
out
xlat
iret
mov
xchg
mov
or
sub
cmp
jno
pop
bound
jnp
orl
loope
repnz
cmp
sbb
jp,pn
fidivrl
sub
lcall
neg
lock
and
jle
sub
pop
sbb
aas
push
iret
out
out
into
fimuls
mov
jle
dec
jg
ucomiss
ds
push
aas
push
iret
out
out
into
fimuls
mov
insl
lods
leave
mov
shll
xchg
daa
out
cmp
xchg
jbe
inc
call
insb
sti
ds
jg
cmp
in
loopne
cmp
rolb
fmuls
sub
mov
popa
mov
push
or
imul
sub
daa
adc
dec
or
xchg
xchg
test
in
test
vpmulhw
repnz
scas
push
add
lds
push
inc
mov
divb
inc
imul
sbbl
add
cwtl
das
xor
mov
adc
test
call
adc
push
push
mov
dec
push
lcall
nop
push
test
lret
mov
pop
jb
push
les
push
ljmp
loopne
pop
adc
call
pop
dec
xor
push
rorl
dec
mov
inc
mov
pop
popf
repz
inc
push
imul
mov
ss
lock
ffree
add
mov
xchg
push
sub
std
sbb
mov
xchg
jae
es
subb
outsl
pop
adc
jbe
test
cmp
int
bt
inc
pop
and
pushf
jecxz
repnz
insb
inc
dec
push
test
cmp
ror
pop
mov
stc
xchg
mov
mov
xchg
pop
sub
je
leave
test
adc
dec
adc
push
mov
pop
jns
add
pusha
test
ds
or
hlt
movsb
aaa
es
mov
push
dec
repz
add
inc
jl
movsl
cld
jnp
xchg
adc
mov
push
pop
inc
mov
cmp
test
mov
adc
test
in
sbb
stos
inc
add
js
xchg
faddl
mov
pop
cmc
cmc
fwait
notb
test
xor
sbb
mov
and
inc
stc
incb
push
dec
imul
daa
mov
cmp
scas
js
dec
int
psrld
sub
jmp
adc
mov
pop
arpl
add
pop
pop
mov
or
fstpt
jl
hlt
jl
dec
sahf
lret
mov
dec
pop
les
pop
aas
xchg
adc
out
cmp
stos
js
rorl
xor
out
xor
loopne
gs
scas
xchg
push
icebp
sub
adc
inc
mov
push
and
push
clc
cmp
jo
loope
mov
aam
add
out
mov
adc
loopne
sbb
test
and
jae
loopne
xchg
test
filds
repz
mov
xchg
popf
or
out
mov
test
pop
xorb
repz
jnp
and
pop
xchg
jmp
hlt
jg
xchg
data16
std
dec
and
lcall
bnd
mov
les
inc
push
dec
addr16
hlt
and
push
pop
add
sbb
xchg
leave
movsw
and
sbb
inc
sub
movsl
xor
mov
or
pop
addr16
ss
pop
push
outsb
xchg
inc
sbb
mov
fisttps
aas
pop
stc
test
leave
rcll
int3
dec
cmp
and
and
mov
popa
repnz
add
test
stos
xor
out
dec
aad
ret
cmp
xor
cltd
out
ss
shrl
mov
lret
push
out
jmp
into
jae
sbb
test
iret
jp
sub
pusha
jp
nop
int
adc
es
shl
sbb
or
mov
daa
pop
jno
addb
mov
hlt
sbb
pop
enter
rol
fdivrp
sahf
pop
jge
xor
adc
loopne
jnp
lods
dec
js
inc
insl
mov
push
mov
stos
testl
sbb
push
pop
sbb
repz
pushf
jne
add
cmp
cwtl
adc
mov
stc
sbb
mov
sbb
lret
movsb
pusha
ljmp
xor
mov
xor
fmuls
andnps
sbb
push
out
xchg
lods
or
test
sbb
ret
push
mov
or
in
iret
inc
les
in
arpl
cmc
add
stos
inc
inc
loop
sub
adc
xchg
or
cli
inc
push
lods
lcall
jns
out
sti
push
xchg
ret
pop
addr16
fsubp
cmp
out
enter
jae
stc
push
repz
mov
xlat
mov
shlb
inc
out
pop
popl
push
lods
mov
inc
cwtl
test
adc
out
xorb
sar
xchg
ja
dec
sbb
cmp
mov
add
imul
sbb
cmp
inc
sub
pop
jo
std
js
outsl
add
lret
scas
lods
jl
push
inc
lret
out
push
mov
ljmp
pop
xchg
data16
cmp
mov
ja
pushf
mov
mov
jae
arpl
lea
jo
pop
addb
xor
lcall
pop
mov
jb
inc
mov
xchg
xchg
xchg
dec
mov
push
dec
jg
mov
add
cmpsb
mov
pop
fwait
in
mov
sub
cmp
add
push
jg
out
sbb
cmc
fucomip
outsl
mov
lock
iret
ret
aad
pop
daa
push
sbb
rclb
arpl
add
insb
pop
or
fadds
sub
gs
and
jmp
add
dec
push
fmuls
mov
xchg
lods
jmp
dec
outsl
dec
movsb
hlt
fcmovb
ret
les
xlat
xor
cltd
sbb
dec
cmp
popa
mov
movsb
insl
mov
mov
push
mov
arpl
loopne
ficomps
cmp
cmp
das
mov
arpl
xor
sarb
inc
pop
dec
pop
pop
mulb
outsb
pop
xor
mov
mov
jo
aad
std
cld
mov
and
lea
mov
or
fmulp
ljmp
repnz
jb
dec
cmp
scas
fisubrl
and
iret
fidivs
adc
xchg
inc
test
dec
push
and
and
cmc
mov
outsb
dec
cmp
cmp
push
hlt
repnz
and
out
mov
cmpb
mov
pushf
scas
sbb
frstor
xor
shrb
sbb
mov
leave
inc
xor
test
jge
xor
adc
jb
and
mov
sbb
mov
pop
and
or
mov
outsl
xchg
mov
mov
mov
push
adc
jb
xchg
loope
sbb
stos
cmp
cli
sub
daa
and
clc
insl
inc
and
subb
and
rorl
lods
arpl
movsb
and
adc
mov
push
loopne
push
movsb
sbb
dec
mov
jecxz
int3
and
dec
repz
xor
cwtl
and
call
es
inc
cmp
int
mov
cwtl
movsb
gs
cmp
loopne
call
push
pushf
jbe
push
mov
dec
aad
mov
jb
push
out
adc
jnp
sbb
outsb
notl
mov
cmp
sbb
jo
inc
pop
fcoml
sti
dec
mov
lahf
aaa
divl
daa
insl
sub
pop
rorb
and
sub
test
aad
clc
out
loope
pop
ja
dec
jmp
jge
ja
mov
hlt
les
shll
add
in
lds
movsl
sbb
js
pop
repz
cli
add
jmp
pop
stos
loopne
movsl
psraw
cmovae
mov
cmp
xor
xchg
repnz
mov
mov
shlb
ret
aaa
cmp
jl
jb
ljmp
dec
sbb
and
jbe
test
testb
push
out
pop
push
rcll
cld
push
mov
sbb
pusha
dec
add
jb
sbb
jbe
repz
sbb
outsl
arpl
ret
aas
outsl
pop
xor
sbbl
mov
jne
jge
movsl
or
xor
callw
push
cmpsl
int3
cld
imul
or
xchg
mov
mov
mov
insl
and
and
nop
cmpsl
into
cmc
xlat
sub
mov
shr
rcll
dec
ficoml
sbb
push
jo
jnp
lret
mov
cwtl
mov
xlat
xchg
inc
stc
stos
xchg
xchg
insb
xor
jae
xor
and
popf
sub
jmp
sub
cmp
add
nop
shll
push
ljmp
lods
out
add
jns
mov
mov
lods
mov
fmull
movsb
xlat
push
out
pop
sahf
js
push
xor
loope
mov
test
negl
test
mov
icebp
mov
or
xor
jmp
popa
mov
dec
movsb
pop
inc
mov
out
inc
repz
pop
out
xor
and
pop
or
xchg
push
aas
icebp
adc
sbb
cmpb
adc
inc
inc
ds
xor
aad
dec
mov
test
add
or
cltd
das
mov
mov
push
outsb
cmp
dec
nop
loopne
lret
loopne
jle
imul
negb
sarl
into
mov
add
nop
inc
lods
xlat
mov
adc
jmp
pushf
pop
lret
cmpsl
mov
shlb
loopne
int3
push
inc
cld
loope
adc
fcomip
iret
add
jb
cwtl
fimuls
dec
and
cltd
loop
ret
adc
clc
fidivrl
popa
cmp
inc
pop
mov
cs
cltd
divl
in
jmp
addr16
fwait
mov
and
aaa
sahf
and
aaa
pusha
xor
stos
mov
mov
push
int
rcll
cmp
outsb
cmp
stc
mov
push
loope
rorl
rcrb
in
adc
mov
cli
js
mov
sub
flds
push
shll
out
cmp
jecxz
les
aad
or
dec
in
insb
xchg
mov
sub
stos
xor
lods
bound
add
jmp
push
cmpsb
test
lcall
fnsave
lret
fdivrl
cld
dec
sarb
dec
and
adc
xchg
andl
addl
leave
scas
cmpsl
lret
mov
inc
testl
jl
sahf
xchg
cltd
std
movsl
inc
imul
sub
subb
loope
mov
mov
test
mov
ljmp
clc
pop
scas
les
push
js
pop
xchg
lret
ja
mov
out
rol
inc
sarb
sub
lock
ret
fwait
outsb
dec
push
ret
ja
xor
xlat
popf
pop
fidivs
cs
mov
test
nop
cmpsb
imul
inc
and
aaa
mov
cwtl
adc
gs
jecxz
fst
cli
mov
add
mov
test
rcll
fsts
stc
lods
sub
jge
out
mov
dec
pop
mov
xchg
loopne
iret
add
push
xchg
test
mov
fbld
push
mov
test
xchg
sbb
imull
insl
shlb
sbb
std
int
es
out
jo
jmp
dec
xchg
leave
jge
sub
fisttps
out
out
dec
mov
sub
in
les
dec
cmc
and
and
xor
sub
and
xlat
dec
pop
push
pushf
repnz
adc
mov
cmc
fwait
xchg
das
pushf
xlat
repz
pop
mov
pushf
enter
movsbl
aas
test
popf
cmp
jno
daa
mov
test
pop
and
add
in
out
lods
stos
fidivrl
dec
into
je
repz
xor
enter
mov
das
mov
jo
inc
cmpsb
inc
sti
pop
dec
mov
or
aas
sarb
sahf
mov
bound
push
cmpsl
cmp
popf
rclb
push
cmp
push
rcl
push
push
decb
fstpl
ja
push
mov
movsb
outsl
es
pop
popf
mov
push
xchg
push
inc
adc
mov
daa
mov
repnz
mov
out
nop
sbb
scas
outsb
and
jns
pusha
and
dec
jo
arpl
repz
jmp
push
js
test
sarb
popf
movsb
jbe
daa
leave
dec
ror
cwtl
scas
push
xor
adc
aaa
mov
or
cltd
pop
inc
ss
xor
leave
inc
lea
jle
inc
out
xor
push
lds
jge
push
cmp
push
int3
pop
pop
sbb
sub
ret
mov
mov
lea
popf
mov
leave
xchg
dec
lret
xchg
or
out
jb
fmull
mov
outsb
cli
cmc
arpl
dec
xchg
pusha
mov
aaa
jmp
fistps
in
out
fs
push
das
or
into
fwait
lret
jp
pusha
inc
and
inc
in
adc
aad
jp
and
in
dec
aas
sbb
ret
clc
jmp
mov
in
and
das
stos
cwtl
or
je
nop
inc
scas
mov
dec
cwtl
jmp
fmuls
pop
mov
inc
in
lods
sbbb
add
nop
xorb
mov
add
add
adc
pop
jge
sbb
sub
dec
cmc
in
push
pop
test
maskmovq
testl
rorb
jp
push
mov
fidivrl
jne
cmp
mov
pop
dec
dec
in
lods
mov
add
les
call
jp
shlb
fmuls
sti
fsubs
in
pop
and
xor
jmp
jnp
sar
inc
mov
outsb
pushf
lcall
mov
mov
iret
data16
fdivr
xor
clc
aaa
adc
add
add
popa
movl
mulb
push
sub
mov
xchg
pop
xchg
lret
dec
test
dec
mov
test
das
mov
stos
or
pushf
leave
cs
or
in
outsl
cwtl
xchg
xchg
xchg
je
sti
xor
repz
inc
pop
fnstsw
nop
jg
xchg
div
lods
in
xor
push
mov
das
out
mov
arpl
mov
push
bound
cmc
fdivrs
add
push
jbe
and
push
stc
cmpsb
ja
sbb
mov
add
dec
icebp
int
jl
int3
mov
mov
fchs
outsl
dec
fimull
mov
pop
jb
push
push
push
jmp
test
sbb
or
loop
cmp
sub
movsl
idiv
push
cs
fucomi
fisubrs
fs
push
or
icebp
icebp
pusha
jg
fs
xlat
mov
fistpl
push
js
popf
xor
jmp
mov
push
xchg
je
ss
sbb
scas
and
mov
mov
call
ret
loope
mov
cmp
jno
stos
or
sub
rorb
out
pushf
lcall
jne
sub
jmp
test
mov
std
in
or
ret
push
pop
sbb
or
fisubrl
out
movsl
jecxz
leave
adc
mov
and
and
inc
out
bound
push
rclb
scas
pop
jl
or
push
stos
adc
pusha
dec
jo
popa
loop
das
adc
pushf
orb
adc
add
push
inc
sbb
mov
dec
mov
dec
insb
ds
mov
mov
add
mov
lahf
mov
or
aaa
mov
in
and
jo
cld
add
or
add
loope
fists
scas
mov
pusha
jbe
das
leave
inc
sub
lret
loope
je
je
add
cli
cld
imul
mov
jae
into
ljmp
in
test
dec
out
sbb
sti
shl
mov
cmp
data16
mov
mov
call
dec
inc
jo
mov
dec
sbb
aam
mov
xor
bound
add
add
outsl
lret
movsl
pop
lret
adc
loope
mov
lahf
sub
mov
cmp
fimuls
arpl
mov
insl
outsl
push
jle
lea
cmp
leave
and
push
hlt
pop
sti
or
push
fimuls
jnp
cltd
dec
jl
inc
jg
and
sub
push
xor
push
mov
mov
rcr
mov
sbbl
fdivr
pop
clc
sbbb
int3
mov
lahf
cltd
shlb
pop
mov
stos
mov
push
leave
mov
inc
push
test
adc
mov
cmpsb
mov
in
cs
sbb
out
rolb
push
sub
loopne
adc
cmc
mov
imul
lock
sub
add
cmpsb
addr16
arpl
or
shll
mov
rol
fistps
imul
bound
jle
lock
or
cmpsl
adcb
sarb
mov
stc
sub
jg
sub
lahf
push
adc
jl
nop
sub
clc
add
xor
in
inc
xchg
test
das
pop
fwait
xlat
add
test
pop
adc
jecxz
imulb
fs
movsb
ret
rcrb
imul
in
jg
sahf
fwait
std
mov
xor
or
movsb
jne
and
sbb
ds
push
pop
testb
scas
mov
xchg
xor
and
sub
push
mov
xor
lods
mov
fwait
xor
lds
mov
pop
mov
dec
pop
jo
lods
fnstenv
imul
outsb
add
inc
cmpsb
xchg
pop
pop
or
je
repnz
jns
jecxz
jg
lret
or
es
lock
and
xchg
push
fcoml
cld
sahf
fists
in
xor
js
dec
lea
inc
in
imul
inc
jecxz
pop
jmp
loope
les
sbb
xchg
inc
inc
push
xor
sbb
xchg
clc
adc
add
jle
cmp
out
or
imul
mov
les
lds
mov
dec
rclb
cmc
psubq
and
jp
or
loop
movsb
xor
cld
mov
ja
jne
or
jl
push
push
cli
bound
popf
sbb
adc
inc
adc
mov
es
sbb
pop
aas
sbb
stc
xchg
fists
test
ret
mov
pop
mov
idivl
xchg
cmp
cmp
sub
push
pop
test
or
sti
mov
xchg
in
mov
fs
lods
push
mov
cs
popf
cmp
js
int3
xchg
cltd
mov
mov
cwtl
lods
in
inc
inc
dec
lods
cli
jae
jb
or
out
mov
adc
in
xchg
push
cli
add
sti
jo
push
sub
push
js
jbe
lcall
xor
adc
pusha
mov
push
pop
loopne
mov
inc
ret
mov
sub
in
inc
fdivrs
or
mov
inc
roll
loop
mov
push
or
jge
es
sbb
orb
sub
and
out
into
out
mov
sub
call
or
push
mov
cli
add
jl
hlt
push
jb
mov
in
cmp
lret
leave
nop
jmp
imul
or
dec
sti
inc
sub
hlt
iret
icebp
xor
mov
sub
loope
fs
cld
int
sti
sub
push
popa
cmp
cwtl
jmp
sahf
sarl
and
xor
cmpsb
sbbl
lea
movsb
call
xor
xchg
adc
cmp
sub
pop
cmc
stc
sbb
shrl
jecxz
cltd
nop
jb
cli
ss
sub
sub
flds
addr16
pop
out
icebp
rclb
add
inc
loop
jle
push
or
repz
aas
ss
pop
ja
xor
das
hlt
xchg
out
cwtl
sahf
push
inc
adcb
dec
test
aad
lods
ret
and
call
rcr
arpl
bound
cmpsl
xor
fadds
fwait
xchg
pop
pop
dec
add
test
push
mov
fwait
mov
push
jne
inc
repz
mov
mov
cmpb
lock
adc
sub
mov
inc
cwtl
sub
cli
push
dec
hlt
cwtl
in
scas
gs
das
repnz
test
inc
jle
mov
mov
sbb
jp
adc
sub
jae
cmp
and
sbb
jge
xor
push
popf
mov
lods
add
icebp
mov
pushf
or
stos
faddl
leave
je
into
lods
out
ja
sbb
sbb
cmp
dec
loop
lds
dec
out
dec
loop
mov
mov
jle
xchg
ret
mov
sbb
xchg
dec
test
gs
shlb
sarl
dec
test
and
xor
push
shl
lock
mov
sarl
popf
mov
dec
xor
stc
mov
fnsave
mov
iret
daa
jp
dec
mov
push
inc
inc
fwait
mov
fnstsw
repnz
les
xlat
jg
mov
cmp
rorl
jmp
fdiv
inc
pop
gs
fstpt
jnp
int3
fisttps
mov
jecxz
test
adc
imul
das
mov
jge
adc
je
inc
add
lret
and
mov
stos
xchg
aas
insl
lock
shrl
or
std
ret
dec
in
gs
inc
ljmp
lahf
pop
scas
xlat
mov
xchg
pop
pop
mov
jmp
sbb
sti
push
cmp
pop
sarl
test
iret
cmc
mov
pop
pop
inc
cmp
ljmp
push
mov
mov
imull
or
add
aas
add
mov
push
sbb
and
or
mov
pop
ucomiss
ds
push
aas
push
iret
out
out
into
fimuls
mov
jle
dec
jg
ucomiss
ds
push
aas
push
iret
out
out
into
fimuls
mov
jle
dec
jg
lahf
cs
ds
push
lcall
iret
out
pop
into
fimull
mov
pop
push
jp
dec
pop
pop
ucomiss
ds
push
mov
push
inc
into
ljmp
push
icebp
inc
loope
sub
frstor
pop
into
jecxz
div
mov
dec
jb
bound
xor
ret
fucom
lods
xchg
mov
addr16
jge
sub
bound
jb
and
inc
in
aad
scas
movsb
mov
insl
lea
and
jo
jle
je
popf
sar
lods
addl
fs
push
test
test
rorl
pop
jo
int
int
push
inc
jle
repnz
loopne
ja
adc
adc
loope
nop
scas
pusha
sar
movl
test
outsl
filds
out
shlb
js
cmpsl
repnz
cmp
loop
pop
mov
popf
pop
pop
lods
adc
sahf
test
outsb
std
dec
jno
movl
addr16
mov
popf
mov
adcb
pop
bound
and
fisttpll
jecxz
fcoms
aad
add
mov
xchg
push
subb
lea
adc
cmpsb
sub
jbe
call
lea
and
test
inc
sub
xor
sahf
sbbb
leave
out
in
fcomi
sbb
or
pop
jbe
jae
inc
in
xchg
std
subl
shll
outsl
aaa
jge
or
sub
jge
sbb
test
idivb
mov
dec
jb
bound
xor
ret
fucom
lods
xchg
mov
mov
dec
jb
bound
xor
adc
orb
xchg
dec
inc
nop
fiadds
adc
scas
cmp
loope
adc
jnp
cmp
push
pushf
loope
xor
cli
orb
xor
or
push
ret
fsubl
mov
imul
cmpl
push
imul
mov
sbb
sbb
inc
mov
sub
xchg
cmp
mov
movb
mov
xor
loopne
dec
cli
sub
jp
xor
push
or
loop
std
xchg
cmc
jp
jmp
cmpsb
fisttpll
sbb
cmpl
jp
add
pusha
mov
loop
adc
mov
sbbl
inc
add
cwtl
and
in
fwait
nop
iret
xchg
shl
mov
push
jb
xchg
sub
les
js
inc
adc
adc
cwtl
push
lea
sbb
mov
fldl
mov
stos
jns
mov
xchg
or
sub
jmp
sub
pop
pop
lret
into
mov
pop
lods
pop
mov
mov
cs
jnp
and
and
imul
pop
jae
mov
xor
loopne
and
orl
jns
push
sub
test
adc
arpl
adc
push
sbb
out
fs
arpl
lahf
pop
addb
ficomps
ss
or
xor
cwtl
int3
pushl
fimull
cmp
call
adc
inc
jo
sub
pop
movsb
shrl
nop
mov
dec
xor
mov
pop
xchg
push
or
mov
pop
mov
cmpsl
lods
mov
stos
ds
sti
pushf
aam
and
pop
mov
jbe
mov
fcompl
xchg
mov
pop
mov
mov
add
fxch
or
fnstsw
adc
mov
mov
mov
or
jg
shll
imul
jno
sbb
mov
xlat
xor
adc
add
cli
jnp
xor
into
pop
mov
add
not
int3
sub
imul
push
ss
cltd
or
outsl
push
xchg
add
pop
popl
lret
push
or
push
push
out
jnp
adc
popl
jno
lahf
pop
pop
mov
mov
into
fidivl
mov
in
push
jns
es
out
daa
mov
mov
faddl
push
mov
popf
out
mov
and
cltd
jg
scas
mov
rcrl
dec
sbb
jno
fdivl
mov
push
into
adcb
lret
cmp
fiadds
xchg
loop
add
dec
mov
out
jl
inc
popa
inc
jecxz
sub
mov
call
loopne
pop
rorb
mov
push
daa
popa
dec
adc
gs
pop
mov
cmp
ret
pop
pusha
fs
sti
test
orb
lret
cmpsl
ror
push
loope
jae
xchg
lcall
push
into
push
ja
pop
sbbb
leave
pop
and
and
mov
je
pop
cmpl
push
ficompl
sarb
out
and
inc
pop
into
ja
stos
adc
orps
mov
stc
mov
out
jl
jns
mov
fildl
push
pop
dec
aas
shll
int
rorl
sub
rcl
mov
leave
popf
xchg
fisubs
imul
ret
push
lcall
rclb
lahf
mov
das
push
dec
or
xor
sub
or
add
sbb
lcall
cli
mov
fimuls
jg
outsb
jecxz
jo
or
data16
test
inc
lock
sub
iret
mov
movsb
mov
or
mov
mov
data16
pop
sbb
movsb
roll
test
loop
push
push
sub
repnz
les
pushf
xchg
pop
fcomps
cmpsb
inc
push
aas
push
ret
lcall
fdivrs
cli
lods
call
es
mov
jnp
cs
loopne
loop
aad
outsb
and
or
pop
add
or
outsb
movsl
pushl
and
int
out
fistps
jo
jecxz
xchg
mov
imul
arpl
pop
fsubs
iret
mov
push
push
fcmove
ret
lret
mov
fcoml
scas
xchg
jp
and
cs
lret
and
mov
and
and
int
lods
lret
mov
adc
out
push
loop
inc
inc
lock
loopne
dec
int3
sbb
sbb
ret
dec
fidivs
add
lcall
clc
aad
js
nop
cld
mov
mov
sbb
nop
mov
aam
cmp
mov
imul
xchg
lock
enter
lcall
add
dec
sahf
sub
das
mov
andl
cmpsb
inc
popf
xchg
cmp
inc
aam
das
inc
aas
mov
gs
dec
faddl
inc
insl
imul
aas
call
jle
ret
call
inc
ret
mov
nop
xchg
insb
xchg
xchg
sbb
inc
add
mov
or
or
add
arpl
sub
push
les
push
jno
aas
fisubrl
mov
push
aad
dec
adc
pop
xorl
and
adc
mov
call
fcom
mov
out
repnz
mov
adc
mov
out
fmuls
dec
or
nop
cmp
imul
mov
dec
lds
insl
arpl
addr16
or
xchg
imul
jle
sub
stos
xchg
pushf
arpl
fdiv
out
cwtl
xchg
fstl
scas
sbb
std
pop
add
jae
lods
gs
adc
fmull
fs
popf
dec
sub
scas
pop
push
pusha
std
cmovno
jl
stc
sub
cwtl
sub
lahf
jle
push
stos
push
and
pop
pop
jg
xchg
adc
dec
pop
into
mov
mov
xchg
mov
jno
lret
add
pop
mov
cmpsl
movsb
lcall
fisttps
inc
pop
jle
xchg
push
mov
leave
fildll
je
out
daa
sbb
rorl
sub
in
xorl
shrl
daa
sarl
dec
fs
rcrl
lods
cmp
cld
in
cmp
mov
test
adc
or
test
mov
stos
push
fisubrl
and
aaa
and
fadds
pop
mov
testl
fistl
mov
pop
fcompl
sub
jno
adc
popl
test
je
in
jbe
bound
inc
xor
subl
out
jo
adc
ds
adc
xchg
in
cmpsl
cmp
lods
xchg
popa
xor
clc
lds
pushf
imul
iret
ffreep
and
outsl
mov
out
inc
jg,pn
push
mov
cmc
xor
inc
mov
out
jns
mov
jns
stos
pop
sbb
pop
mov
mov
and
stc
dec
push
lret
dec
insb
repnz
mov
inc
pop
repnz
xchg
adc
aas
xchg
shl
adc
xlat
faddl
add
dec
dec
daa
cs
sub
adc
pop
hlt
fisubl
imul
int3
add
insl
daa
test
neg
aad
out
addr16
and
mov
jge
pop
test
out
jns
imul
mov
out
lock
push
repnz
enter
ret
int
mov
stos
push
or
xor
xchg
push
push
jnp
xchg
imul
inc
test
sub
mov
shl
cs
sub
sbb
fmull
out
in
cmp
pushf
lods
mov
fbstp
xor
shll
dec
cltd
pop
mov
cli
loopne
jo
shl
sub
pop
out
cltd
test
shll
idivl
pop
xor
scas
jle
and
or
xor
pop
int3
ret
pop
pop
and
std
add
enter
outsl
movsb
fsubrl
cmp
sahf
mov
cs
fmul
sbb
ss
add
ret
shl
popa
pop
or
mov
add
sub
rcll
ss
out
inc
in
push
int
dec
dec
mov
xlat
movsb
es
or
sub
out
inc
insl
pop
adc
mov
jl
popa
loop
dec
mov
in
aas
push
imul
lea
adc
add
dec
rorb
imul
das
lea
dec
or
in
inc
mov
imul
fsubrl
push
shlb
aaa
pop
jns
cwtl
mov
nop
or
pushf
mov
and
xchg
arpl
ficomps
ljmp
shlb
lcall
test
cmpsb
inc
sahf
add
cltd
arpl
lods
sub
jo
faddl
ror
adc
and
pushf
jl
lahf
xorb
cwtl
lea
dec
out
insl
pusha
sbb
xchg
xchg
stc
mov
jnp
inc
mov
sub
cmp
jno
cld
ficomps
loope
or
stos
dec
inc
mov
dec
jl
lcall
adc
dec
inc
dec
lock
push
add
imul
rcrb
xchg
pop
hlt
clc
push
push
popf
inc
in
loope
push
jge
pusha
outsb
enter
and
mov
in
jne
pop
and
bound
xchg
sbb
scas
sub
xor
push
rolb
jo
das
xchg
aad
xlat
addr16
std
add
mov
adc
pop
bound
insb
inc
pop
xor
mov
add
shl
mov
insb
cwtl
add
mov
mov
pop
fimull
lahf
in
push
mov
pop
xor
imul
sub
cld
clc
outsb
push
shrb
imul
sbb
mov
or
push
hlt
subb
mov
imul
inc
aas
dec
jecxz
xchg
imul
insl
add
mov
aaa
dec
sub
push
pop
insb
mov
aam
aaa
mov
jge
sbb
pushf
add
mov
aam
and
gs
mov
pop
xor
pushf
mov
test
fs
sti
cld
nop
lcall
mov
jae
stos
scas
pop
push
divl
mov
push
adc
cmpsl
inc
jbe
lcall
lcall
push
shll
cmpsl
adc
enter
pop
movsl
icebp
jbe
xchg
inc
xchg
xor
add
cli
roll
and
cmp
int3
rorb
aas
not
xchg
mov
inc
jne
out
inc
pusha
ss
add
data16
mov
imul
mov
pop
mov
mov
inc
std
adc
testb
pushf
imul
aaa
fsubr
and
sub
aaa
test
adcb
mov
jg
mov
dec
inc
loope
push
mov
sub
xchg
jne
movsl
jp
jecxz
xchg
cli
push
sub
loop
jp
mov
mov
pushf
lock
jge
icebp
xchg
and
mov
clc
insl
aaa
inc
loope
add
fsubs
lds
xchg
jno
rcrl
xorl
jp
sbb
aas
clc
jge
or
das
jne
popf
xchg
add
pop
sub
lret
sbb
lret
cli
fists
push
jns
ret
and
ret
push
pop
cld
jo
sbb
addb
jns
adc
jecxz
jae
xlat
stos
adc
rclb
test
push
pushf
pop
xchg
push
mov
xchg
and
pushf
ret
call
sahf
and
jge
int
dec
jnp
push
inc
popa
call
stos
movsl
cmp
iret
xchg
stos
imul
push
push
add
insl
into
movb
std
add
pop
mov
pop
mov
gs
cmc
and
popa
inc
jb
mov
lods
dec
push
rcr
imul
movsl
outsb
pop
and
ret
mov
in
mov
mov
das
inc
xor
mov
mov
pop
imul
stc
lahf
repz
mov
adc
shrb
loop
es
pop
dec
dec
push
out
pop
dec
out
int3
outsl
mov
jne
and
push
or
out
push
cmpb
xchg
cmp
mov
sub
jne
int3
andb
jne
or
adc
addl
add
xor
movsl
loopne
dec
inc
jae
js
adc
popf
ja
jg
push
mov
sar
popf
mov
mov
xor
arpl
movsb
ret
cld
mov
sbb
dec
push
push
or
and
test
nop
jno
ret
repnz
cld
div
aad
in
sbb
inc
dec
mulb
push
into
test
dec
rorl
test
jmp
pushf
and
dec
scas
out
les
pop
add
inc
lock
cli
popf
pop
or
jp
sbb
jnp
inc
dec
lods
mov
mov
jae
xchg
out
fcomps
leave
mov
scas
jno
jp
in
jno
popa
add
cltd
mov
or
je
fucom
mov
xor
daa
sti
dec
ficoms
addr16
xor
testb
push
loop
aas
fsubs
cmp
incb
fbstp
lret
jbe
add
jle
cmc
fnstcw
xor
les
inc
loope
cmp
icebp
pop
fwait
test
addr16
shll
loopne
adc
pslld
int3
lcall
fstpt
stc
aam
pushf
cmp
js
and
rcll
repnz
ret
adc
inc
xor
xchg
mov
dec
popf
jae
popf
adc
imul
sbb
cld
rclb
dec
mov
push
das
cs
cmp
fidivs
push
cwtl
mov
out
jle
cmpsl
inc
and
xchg
mov
adc
testb
fimuls
mov
jecxz
test
sti
sub
clc
or
pop
bnd
sub
inc
jmp
cld
inc
fidivrl
mov
cmp
mov
mov
lock
hlt
mov
stc
loope
cld
push
cmpsl
push
call
xchg
xor
adc
jg
subb
mov
lret
dec
jbe
paddusw
xchg
mov
push
cli
movsl
stc
jo
cld
jnp
rcrl
xchg
negl
es
paddw
cmp
fistl
adc
sub
mov
adc
je
add
imul
hlt
repz
cmp
sub
jmp
mov
mov
scas
inc
or
lods
shrb
mov
sbb
push
mov
cs
das
mov
push
or
jl
jmp
xchg
add
xchg
out
push
add
es
outsb
mov
cmp
mov
mov
mov
mov
pop
jle
ds
adc
jle
xchg
mov
pop
dec
sbb
cwtl
sti
out
sub
sbb
mov
xor
or
pushf
scas
mov
popf
sahf
pop
jle
inc
ret
ljmp
mov
push
mov
jp
sbb
shrl
cmp
test
or
xor
push
fistl
jle
dec
lret
je
test
pop
call
imul
xchg
mov
inc
movsb
xor
rcll
fidivl
repz
add
dec
and
ficoms
out
cmp
xchg
mov
xor
scas
mov
push
ret
xchg
add
in
pop
dec
shll
cltd
enter
shll
add
mov
es
bound
pop
add
icebp
cmp
in
fisubl
loopne
stos
and
push
add
jb
call
aam
add
fistpl
adc
cmc
push
xchg
adc
push
push
mov
mov
push
xlat
or
push
xchg
add
and
rorb
je
repz
mov
pop
lock
sub
mov
jo
jns
pop
jmp
xchg
cmp
imul
cmpl
fisubrl
push
ss
jmp
sarl
cmc
mov
mov
ds
jo
mov
aaa
ja
mov
push
xchg
cltd
movsl
jg
fdivs
test
or
mov
fwait
adc
fxch
inc
sub
or
jge
or
dec
out
jecxz
sbb
jb
push
subb
or
fldt
fiaddl
ss
stos
jno
andl
push
rorl
lret
mov
orb
or
jmp
enter
loope
into
push
lcall
je
mov
mov
icebp
mov
aaa
push
push
pop
shl
out
jle,pt
int3
shlb
fbstp
jo
hlt
call
xchg
pop
stc
mov
pushf
push
ficoml
jb
loop
stos
xchg
sbb
test
push
fdivl
xor
cmpsl
inc
mov
or
mov
in
fmull
das
xchg
add
lock
adc
data16
mov
inc
push
hlt
lock
shl
aas
nop
pop
jge
mov
dec
xor
clc
inc
arpl
in
dec
jl
imulb
xor
fldenv
inc
mov
sbb
popa
add
add
pop
adc
or
sbbl
sbb
push
cwtl
clc
popl
sub
pop
xchg
xor
repz
pop
cli
nop
clc
mov
lahf
inc
xor
pop
ss
nop
mov
inc
aaa
xchg
ret
roll
push
in
sub
divb
adc
lods
mov
cmp
push
int3
adc
xor
sbb
bound
mov
mov
out
rorb
add
inc
or
imul
mov
popf
loopne
arpl
and
popf
lahf
testl
iret
icebp
out
rclb
inc
pop
inc
out
sbb
sbb
je
into
cli
adc
into
xchg
leave
xchg
push
stos
loopne
cmovbe
xor
jl
les
fdivrl
sti
inc
stos
mov
mov
loop
mov
jbe
jb
push
sub
movsb
rcrb
cltd
test
jmp
test
jnp
xor
mov
inc
shrl
pop
mov
mov
dec
sbb
xchg
inc
mov
stos
das
mov
stos
arpl
xor
mov
stos
lret
jnp
cmpl
mov
jne
xchg
std
pop
xlat
cmp
or
scas
pushf
jge
mov
je
in
pop
mov
shrl
xchg
test
cmp
and
aas
sbb
xchg
lods
sub
stos
adc
push
pop
pop
push
jne
out
pop
inc
sub
pop
jne
mov
jbe
xor
xchg
push
cli
gs
jnp
dec
or
pop
pop
movsl
jg
aad
push
sbb
dec
xchg
jl
stos
loopne
adc
lods
add
pop
das
shlb
pop
adc
adc
cmp
test
ficompl
dec
and
outsb
popf
outsb
mov
pop
cli
mov
xchg
cmp
fidivrl
xchg
pop
mov
jmp
jge
in
mov
jg
aaa
cmpxchg
dec
push
pop
add
js
fchs
push
push
push
add
fsub
repnz
pop
or
jbe
inc
inc
out
cmp
lahf
nop
sbb
xchg
orl
leave
push
out
mov
mov
out
push
jmp
inc
mov
sub
int
push
and
ss
insw
test
rorl
xchg
mov
dec
xor
pop
pop
pop
sbb
mov
lcall
fcom
xchg
and
add
adc
sub
imul
dec
mov
jg,pn
jno
in
lret
jns
mov
lods
clc
push
and
lahf
cmp
jne
out
jmp
repnz
push
or
pop
pop
movsl
push
xchg
nop
cmp
xor
push
loop
push
es
cwtl
xchg
sahf
popf
pop
leave
sub
inc
in
pop
and
or
fisubl
cmc
inc
test
sbb
sub
pop
js
test
and
lods
sub
sbb
inc
dec
push
stos
out
fdivs
ja
lahf
xchg
lea
imull
cmp
xor
arpl
mov
scas
fiaddl
pop
and
dec
mov
dec
rorb
in
pusha
fnstsw
push
sub
mov
dec
mov
adc
mov
sti
and
push
arpl
add
push
movsl
fsubrs
out
adc
arpl
clc
insb
lret
les
mov
data16
pop
push
std
daa
inc
push
movsb
and
cltd
js
arpl
shlb
arpl
mov
push
sub
in
jg
insl
aad
pushf
inc
ja
stos
jno
ss
mov
xor
sub
dec
rcrb
jge
push
lock
xor
popf
fisttpll
test
inc
xchg
xor
xor
jle
ja
mov
adc
lahf
ja
ret
cmc
pop
and
loopne
mov
aaa
push
pop
mov
lds
sbb
addr16
dec
int3
gs
mov
pushf
or
mov
shll
test
aaa
popf
jge
sbb
test
lcall
mov
lret
dec
outsb
mov
xchg
inc
cs
jecxz
pop
xchg
sub
testl
sub
lods
insl
sbb
inc
sahf
fucom
lods
xchg
mov
mov
dec
jb
bound
xor
ret
fucom
lods
xchg
mov
mov
dec
jb
bound
xor
mov
mov
loop
xchg
mov
mov
dec
jb
bound
adc
leave
ret
fucom
lods
xchg
mov
mov
out
pop
adc
repnz
fstl
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
mov
push
fmul
int3
fbstp
scas
loope
sub
insb
jg
dec
dec
pop
cmp
sub
sbb
or
hlt
out
in
fmul
int3
fistpll
mov
sub
insb
jg
dec
dec
pop
cmp
dec
aas
sbb
or
es
insb
lcall
or
lods
scas
in
mov
je
jl
add
sub
push
mov
cmpsl
mov
mov
dec
mov
push
xchg
daa
out
imul
lock
inc
pop
in
scas
push
cmp
sbb
cmp
jno
repnz
fnstsw
call
cmp
movnti
mov
cmpsl
mov
out
mov
in
popa
imul
rorl
repz
jns
adc
inc
daa
das
ss
les
mov
jl
aas
dec
vmwrite
jns
in
jb
fildll
xor
jne
test
sub
mov
dec
mov
nopl
iret
out
in
fmul
mov
mov
mov
jg
dec
push
pop
pop
das
xor
sbb
push
mov
ror
vphadddq
sub
pop
push
mov
stos
pop
ret
int
lock
sti
inc
and
push
cmp
cmp
dec
imul
mov
mov
lods
mov
jl
insb
jg
dec
dec
pop
cmp
sub
sbb
or
cld
out
in
fmul
int3
fistpll
mov
pop
dec
dec
pop
cmp
sub
sbb
or
cld
out
sub
lock
int3
push
mov
mov
icebp
icebp
negb
lods
pop
inc
push
das
sbb
adc
fildll
fildl
in
xchg
push
mov
jge
adc
inc
arpl
adc
lea
shlb
cs
adc
cmp
push
sar
mov
jl
cmp
lahf
push
inc
xor
repz
inc
popf
rolb
add
clc
sbb
jo
popa
movl
mov
mov
xor
lods
pop
in
add
cmp
aaa
pop
pop
mov
loope
add
cli
xchg
and
sub
pop
pop
test
sar
push
pusha
jnp
psubd
cld
sahf
test
jne
or
dec
mov
int
lock
in
and
sbb
les
cmc
roll
sub
in
pop
mov
sub
sbb
in
jecxz
mov
bnd
and
lret
stc
jge
fidivrs
inc
cmpsb
icebp
or
xor
add
loopne
lds
lcall
gs
inc
shll
sar
movsb
sub
mov
lret
dec
cmpsb
and
mov
ds
mov
pop
sbb
aas
pop
adc
addr16
jmp
movsl
pushl
cmc
in
stos
fsubr
aas
jmp
push
mov
xchg
jge
incl
movsl
pop
mov
xor
jg
dec
mov
inc
sbb
jo
jmp
push
mov
fs
mov
jne
sub
inc
in
mov
je
jp
dec
and
jno
stos
push
xchg
cwtl
test
pusha
sbb
fsubs
and
lock
aas
adc
jb
push
js
pop
iret
jp
lcall
adc
jo
aaa
insl
ret
add
icebp
test
adc
fidivrl
outsb
inc
push
icebp
test
lock
das
sub
ret
cmpsb
pushf
add
std
std
inc
adc
cmp
dec
ds
test
loopne
mov
lcall
test
out
mov
inc
je
push
inc
pop
ret
sbb
scas
sbb
jle
jge
or
jge
push
xor
es
pop
fisttpl
sub
dec
lret
xor
mov
mov
ret
out
add
in
dec
xor
out
test
and
data16
decb
movb
ljmp
xchg
xchg
fcompl
test
xlat
ds
into
add
jmp
out
dec
sub
xchg
inc
dec
adc
aam
out
xor
stos
mov
sbb
and
jp
mov
xchg
jb
xor
popa
mov
or
pop
xchg
push
pop
js
cmc
fcoml
flds
scas
mov
xor
je
pusha
inc
mov
push
nop
fisttps
popf
in
add
adc
repnz
push
shl
std
rcrb
rol
inc
gs
xchg
dec
add
jo
push
xchg
std
into
mov
repnz
mov
mov
mov
imul
xor
sar
inc
loop
mov
repnz
mov
mov
push
pop
mov
stos
sbb
lcall
lret
lods
ds
wrmsr
aas
mov
pop
pop
pop
pop
movsb
mov
jp
stos
mov
dec
addr16
fisttpl
stc
cmpsl
add
jne
mov
push
mov
sub
pusha
push
fwait
rol
popa
cli
rorb
xor
sahf
dec
push
nop
sbb
or
pop
dec
mov
mov
push
sti
aaa
xorl
lcall
rorl
cwtl
cmpsl
ror
test
sbb
dec
scas
popa
sahf
movsl
mov
mov
jg
je
rorb
pushf
jae
mov
bound
scas
lret
xlat
adcb
rclb
cltd
rclb
add
add
push
ror
mov
inc
add
push
mov
add
sub
sub
cltd
data16
outsl
push
out
sbb
sub
mov
orl
test
mov
xchg
dec
add
xchg
cmpsl
sarl
loopne
mov
pop
jbe
test
push
fisttps
lds
das
aas
scas
sarb
std
xchg
inc
add
int3
push
or
sub
das
test
push
mov
in
inc
mov
pop
cmp
xor
insb
daa
push
insb
in
pop
lahf
loop,pt
or
leave
nop
cld
sahf
out
adc
dec
xchg
jb
ror
in
xchg
mov
pop
mov
repnz
lock
push
ss
mov
inc
push
mov
addr16
fwait
pusha
lret
movsl
and
jge
or
cmovae
ret
dec
int
mov
imulb
mov
sub
or
cmc
cmp
ret
inc
dec
jmp
mov
push
push
xor
ljmp
push
into
jle
push
out
mov
lea
jg
das
dec
loopne
jne
icebp
sbb
xchg
outsb
push
xor
sub
jl
test
in
mov
mov
jl
cmp
sbb
add
sub
jo
stos
out
dec
lock
rorb
cwtl
jecxz
mov
sub
ret
in
jg
fildll
jno
stos
shr
lret
xchg
jle
insl
push
push
or
push
bound
mov
incb
cwtl
scas
cmp
dec
jns
gs
push
les
notl
xlat
fdivl
or
test
push
mov
mov
lret
push
outsb
cltd
aam
mov
test
xor
shrl
dec
stos
jl
cmc
dec
mov
adc
xor
in
adc
insb
lods
sub
shl
jp
fildl
mov
loop
inc
and
push
push
inc
jecxz
mov
sti
out
pusha
cmpsb
push
les
iret
dec
cwtl
push
mov
dec
into
cmp
mov
mov
cmc
mov
fisttpll
mov
movsb
dec
lock
mov
xchg
cld
mov
out
shll
dec
pop
out
jns
and
arpl
popa
mov
pop
pcmpeqd
in
nop
out
inc
clc
dec
push
xchg
stc
push
pop
out
push
hlt
outsb
and
dec
lea
sbb
mov
jae
stos
jns
sbb
mov
ret
sbb
push
xchg
sub
mov
rorb
xor
call
mov
out
decb
inc
pop
push
iret
xor
jo
pushf
cli
xor
mov
loop
rcll
pop
and
scas
int3
mov
cmpsl
cltd
jne
sbb
loope
movb
test
inc
and
stc
xchg
sbb
scas
sub
lds
sbb
nop
sahf
push
dec
dec
jne
adc
push
mov
and
sbb
inc
aaa
jl
jae
cmp
xchg
mov
fsubl
fistpll
pop
adc
out
pop
xor
cmpsb
ljmp
lea
mov
pusha
mov
inc
fs
adcl
mov
and
insl
repz
mov
push
cmpsb
dec
inc
loop
mov
fiaddl
aam
push
pop
mov
cs
into
sub
ret
jecxz
inc
lret
loop
jo
lret
mov
sub
ret
rclb
imul
fisttpll
mov
out
mov
in
jae
push
add
sub
cmp
sub
and
shlb
mov
mov
pop
dec
shrl
cmpsb
fstpt
clc
add
nop
lds
insl
pop
shll
scas
adc
xchg
repnz
cmp
inc
mov
jo
mov
hlt
and
leave
push
cmc
xor
jp
pop
str
lret
xor
mov
or
movsl
iret
mov
push
dec
jmp
and
xchg
aad
mov
stos
notb
movnti
jns
inc
xchg
jp
dec
jno
xchg
pop
stc
mov
call
ja
outsb
mov
cmp
adc
or
test
sahf
xchg
mov
aad
jns
jo
clc
loopne
stos
std
sbb
mov
add
sub
pop
in
add
sbbl
sbb
dec
ret
mov
xchg
push
pop
ret
jo
mov
in
movsl
pushf
push
into
xchg
mov
aad
inc
js
scas
mov
mov
cmc
pop
stc
push
mov
dec
popa
outsb
int3
pop
pop
lods
push
arpl
dec
sbb
push
cltd
or
fnstenv
test
xor
xchg
pusha
outsb
stos
fs
add
inc
cmc
iret
mov
lock
pop
iret
inc
xchg
std
es
mov
jbe
sbb
sub
ss
add
popf
push
xchg
sbb
in
mov
pop
mov
jne
dec
movsb
jbe
jnp
adc
xor
orl
xor
cmp
lahf
imul
mov
dec
pop
aaa
sub
mov
mov
std
and
mov
jae
in
dec
jle
lea
jne
sub
test
pop
or
mov
or
outsb
push
lret
mov
adc
das
fucomip
mov
subb
sub
and
popf
test
mov
cmpsb
xor
and
xchg
out
test
leave
and
jnp
cmp
fisubrl
or
inc
mov
add
syscall
dec
cmc
push
cs
into
pop
dec
push
out
cmc
out
push
int
xor
aam
sbb
ja
mov
pop
popf
les
mov
and
mov
or
pop
mov
clc
push
stc
adc
je
dec
sbbb
outsb
test
xor
pop
repz
ljmp
xchg
sahf
mov
pop
cmpsl
pop
xor
pushf
arpl
sub
and
xchg
std
shrb
adc
mov
in
jg
mov
cmpsb
cmovp
aas
fidivrs
push
inc
inc
popf
adc
ret
je
sbb
inc
push
jb
lcall
jbe
inc
daa
sbb
xchg
mov
mov
js
mov
leave
xchg
adc
fnstsw
cmp
pop
mov
das
mov
cmp
insl
in
cmp
mov
lock
sub
xor
clc
stos
sbb
jg
shll
pop
push
and
lcall
xchg
stc
iret
jg
or
xor
vdivpd
int3
lret
sbb
xchg
or
xchg
adc
popa
mov
lahf
mov
push
test
enter
lock
mov
cmp
mov
mov
pop
imul
xchg
lock
dec
inc
mov
fs
fcmove
call
out
out
leave
and
push
adc
jge
jne
outsb
cmpsl
push
jo
xor
mov
cwtl
pop
hlt
dec
fwait
sbb
xorb
mov
pop
pop
add
push
push
push
scas
fldenv
out
and
dec
push
lret
lahf
push
and
cmp
sbb
jb
clc
hlt
insl
sub
or
sub
adc
aas
insb
mov
mull
pop
cmc
mov
xchg
enter
mov
jmp
sbb
mov
jmp
roll
cltd
push
add
mov
xor
sbb
imul
push
cmc
je
and
inc
mov
in
adc
jb
shr
xchg
xchg
daa
dec
test
add
outsl
ljmp
xchg
fidivrl
out
loop
in
mov
dec
or
bound
jns
repz
insb
jge
xlat
inc
inc
fwait
cmp
pusha
and
bnd
cmp
mov
leave
int
xor
cli
jp
xor
push
dec
popf
mov
mov
dec
or
cmc
xor
daa
xchg
sbb
fidivs
iret
pop
or
test
clc
adc
adc
es
sbb
imull
inc
add
outsb
aas
sub
shl
mov
inc
xchg
mov
in
cmpsl
js
leave
pushf
enter
out
cmc
lods
lcall
xlat
gs
lock
icebp
pop
sub
je
xchg
push
je
mov
arpl
scas
bound
mov
or
out
jb
into
jle
and
jnp
or
adc
mov
jle
inc
xor
fsts
xchg
lahf
nop
push
in
mov
std
rorl
rolb
loop
shll
jp
test
nop
dec
sub
or
fistpll
push
outsl
adc
xchg
pusha
stc
test
lock
imul
fcmovnb
sti
dec
mov
lret
and
cmp
inc
inc
xor
inc
mov
add
jno
sbbl
ja
into
sub
jnp
ret
mov
js
xor
into
clc
pop
sbb
mov
mov
shrb
cltd
ret
int
add
mov
aad
jnp
cmp
js
out
mov
dec
mov
pop
push
int3
cmc
ret
rorl
sub
out
movsl
and
je
mov
leave
or
imul
or
scas
lock
dec
jb
adc
out
lods
inc
pcmpgtb
xchg
inc
cmp
orl
dec
mov
pop
xchg
jnp
xchg
push
cmp
cmc
adc
scas
imul
or
je
sbb
mov
clc
inc
xor
sahf
daa
ret
jo
nop
out
xor
mov
and
ficoml
sbbb
xchg
inc
cmp
mov
adc
das
push
imul
mov
pushf
mov
mov
mov
mov
test
jne
jle
jp
lahf
inc
dec
or
addl
jmp
das
xchg
gs
aaa
jbe
int
jl
imul
sub
mov
sti
inc
mov
adc
ret
in
xchg
pushf
insb
push
add
repz
sub
lock
adc
jle
test
cli
fs
pop
ret
scas
mov
xchg
mov
out
jg
call
mov
add
fstpl
divl
sbb
in
sbb
jg
outsl
fdivrs
loop
outsl
lock
jb
mov
adc
hlt
and
clc
jl
bound
iret
add
cmp
add
outsl
adc
xor
in
jp
rclb
jno
test
mov
xor
sub
pop
mov
push
pop
push
add
pop
jne
ja
cmp
jge
aas
dec
add
cltd
lahf
jbe
das
pop
pop
pop
jmp
pushw
cltd
or
loop
pusha
rorl
into
cmp
push
sub
loopne
pop
cmp
mov
xor
call
int
call
popa
ljmp
andb
inc
dec
inc
and
xchg
loop
xchg
dec
dec
xor
jbe
fisttps
mov
movsl
iret
inc
stos
mov
xchg
adc
mull
xorb
mov
push
icebp
nop
ret
jns
pop
lods
and
sbb
mov
mov
cmpsb
xchg
aas
sbb
mov
sti
out
push
push
xor
frstor
inc
fmul
outsb
aam
pop
imul
div
pop
dec
cltd
iret
fisubl
pop
adc
jno
call
iret
push
pop
outsl
cli
and
or
mov
fisubs
sbb
and
fstpt
push
loop
add
ja
mov
lret
push
jmp
inc
xchg
clc
call
push
jl
stos
cmp
orb
cmp
out
xchg
mov
xchg
js
or
jg
dec
sub
mov
xchg
in
imulb
nop
mov
cltd
sub
shlb
pop
xor
cs
fs
dec
dec
mov
jo
xor
jle
test
sbb
sub
mov
ret
adc
lret
add
arpl
loopne
jecxz
mov
shlb
imul
mov
je
hlt
inc
inc
jbe
add
and
dec
and
mov
push
pop
pop
push
fdivs
movsb
push
sub
fdivs
rolb
sbb
movsb
push
dec
lss
sbb
jno
jle
pop
dec
pop
pop
imul
pop
pop
fs
or
mov
or
jo
std
rcrb
stos
cld
mov
mov
outsl
jne
shrl
cmp
xchg
mov
aad
sub
in
or
xchg
lahf
pop
paddd
scas
rcrb
push
scas
pop
inc
cmp
loop
lea
xchg
jge
out
lods
scas
in
mov
cmp
adc
rcl
mov
add
add
into
fwait
and
add
and
xchg
add
aas
out
dec
pop
stos
jno
cld
push
add
pop
sbb
pop
shll
xchg
mov
mov
pop
stos
outsb
push
aam
rorb
pop
lahf
in
out
mov
or
sarb
push
add
dec
pop
loop
rorb
orl
adc
adc
dec
ja
repz
jg
push
cmpsb
dec
cmp
ret
jecxz
mov
jb
int3
adc
inc
nop
sahf
test
fwait
nop
fildll
mov
mov
or
adc
and
cld
sbb
or
popf
enter
test
ss
sub
mov
push
jge
test
mov
clc
add
out
shl
jbe
dec
add
iret
add
loopne
test
stc
and
cwtl
inc
ret
mov
aad
es
cmpsb
and
stc
stos
jno
sbb
sbb
cmp
in
sarl
push
test
das
roll
or
inc
add
repz
mov
jl
jno
aaa
and
std
mov
adc
and
jns
inc
mov
je
lret
sbb
dec
test
add
fwait
push
fiadds
fistpl
xor
add
testb
nop
or
pop
addb
mov
mov
pop
add
pop
or
cmc
int
sub
pop
pop
ljmp
rclb
xchg
or
push
imul
jns
cli
divl
lock
mov
xchg
cli
loopne
and
adc
push
out
cli
pushf
mov
mov
cmpsb
decb
add
dec
dec
mov
std
adc
and
xor
pop
pop
xor
xchg
aas
add
clc
sub
mov
inc
sub
or
dec
mov
sbb
jnp
ret
out
sub
xchg
jns
out
xchg
pushf
pushf
push
or
xor
xor
pop
shll
stos
pop
popa
es
push
addr16
lret
sub
dec
mov
repz
xchg
cmpsb
scas
rcrl
in
push
rorb
add
cld
subl
psrlw
and
out
shl
shr
push
mov
dec
fistps
das
cmp
in
shlb
mov
push
int3
pop
out
cld
loop
add
repz
push
add
cmp
cmp
cmc
jnp
xor
cmp
out
inc
pop
xchg
fcomi
cs
mov
aas
xlat
call
dec
fdivrl
jb
sub
repnz
popa
xchg
call
lcall
adc
fwait
out
stc
ss
push
stc
xchg
stos
add
xor
lods
lods
mov
out
andl
sub
cmc
test
ljmp
cmp
mov
inc
mov
cmp
mov
repz
jo
pop
mov
mov
mov
pop
lods
loop
dec
cmc
pop
mov
aas
dec
in
pusha
dec
fistps
sarl
cs
add
rcll
mov
dec
cmc
adc
imul
sub
scas
ror
xorl
hlt
pop
fwait
xchg
vmread
inc
mov
xchg
jb
jmp
xchg
xor
lahf
cmp
sub
or
cltd
cmp
inc
stos
sub
push
and
adc
aad
cmp
and
int
xchg
je
call
lahf
sub
lcall
xchg
movl
and
jl
das
xchg
inc
mov
ret
lret
into
scas
test
cmp
push
xor
sub
gs
scas
inc
xor
mov
push
lea
je
es
icebp
mov
aam
imul
pop
cmc
push
leave
enter
jmp
dec
leave
cmpl
das
inc
repz
or
movsb
dec
sbb
loop
cmpsl
pop
and
fldenv
pushf
ret
fcmovb
push
fnstsw
inc
jl
add
push
push
cwtl
movsl
jg
ret
loopne
inc
sub
pop
cmpsl
sub
in
cmp
in
or
js
popf
mov
jp
test
test
ficoms
icebp
repz
and
push
les
dec
push
mov
pop
pand
or
repnz
sti
mov
das
jae
dec
inc
in
lret
into
mov
jg
lret
sub
int3
std
scas
in
lcall
sbb
arpl
jb
add
or
sub
push
dec
cs
and
std
sub
aas
mov
int
fwait
inc
xor
mov
sbb
movsl
dec
outsb
add
repnz
cld
jecxz
mov
jno
dec
push
imul
or
mov
xchg
ds
mov
loop
xchg
enter
jp
outsb
mov
js
jb
jmp
aaa
add
loope
fildll
sbb
jno
rcll
flds
push
lcall
sub
rcr
mov
mov
pop
dec
dec
pop
cmp
sub
sbb
or
cld
out
in
fmul
int3
fistpll
mov
pop
dec
dec
pop
cmp
sub
sbb
or
cld
out
out
dec
iret
int3
fistpll
lea
push
dec
dec
pop
cmp
xor
pop
in
sar
iret
in
mov
or
jl
xchg
aad
dec
dec
sub
movsb
shl
repz
test
sbb
cmp
push
fldcw
or
cld
fisttpl
pop
sub
sbb
dec
leave
pop
fnstcw
or
jns
or
pop
xor
add
push
leave
pop
fnstenv
insl
jecxz
jmp
xchg
push
xchg
cmp
or
insl
enter
sbb
mov
xor
pop
ret
pushf
jecxz
cli
repnz
fwait
stos
inc
cmp
cmpsl
inc
push
push
into
iret
into
cltd
rcll
mov
sbb
aam
stos
clc
jle
cmc
test
ljmp
rorb
mov
push
in
push
fcmovnbe
sub
cltd
xchg
call
pop
es
mov
dec
adc
sti
xchg
fcmovnbe
jnp
mov
xchg
xchg
call
stos
pop
stos
aad
outsb
mov
imul
jns
test
lret
aam
aas
fildl
out
in
xchg
pushf
jns
mov
pop
ss
sbb
sbb
pop
fistpl
test
sbb
dec
leave
inc
fnstenv
or
jns
dec
inc
pop
mov
sbb
pop
mov
popa
lcall
or
sbb
mov
pop
mov
or
call
push
nop
adc
loopne
ljmp
jnp
dec
leave
pop
fldcw
or
jns
dec
fistpl
test
sbb
dec
leave
pop
fldcw
or
jns
dec
fistpl
test
push
adc
test
lahf
jle
in
sub
cli
inc
test
ss
lea
and
lahf
push
or
inc
mov
lods
aas
sub
mov
mov
hlt
cltd
imull
xlat
push
into
test
icebp
cmp
idivb
adc
call
jb
add
fwait
jnp
in
cmp
mov
test
and
enter
mov
fdivr
lret
movl
insb
cs
cltd
dec
test
push
icebp
push
xor
push
lret
push
inc
int3
stos
and
popf
les
jae
rolb
mov
aas
pop
outsl
lret
mov
out
shll
sub
mov
xchg
adc
ljmp
jecxz
lods
sbb
stos
or
xchg
movsb
pop
out
add
push
xor
imul
out
or
sbb
adc
push
or
mov
pop
in
adc
push
int
or
jl
dec
mov
jbe
mov
lret
and
mov
mov
cwtl
jns
fmulp
int3
enter
iret
lahf
adc
sub
sub
mov
arpl
loopne
ficoml
imul
aam
jp
cmc
add
mov
pop
inc
movsb
stos
xor
dec
jecxz
mov
jg
adc
cmp
outsl
xor
test
mov
mov
sub
pushf
jbe
dec
push
mov
dec
pop
jg
mov
rcl
movsl
pop
js
or
aaa
shll
jae
mov
idivl
jge
scas
mov
je
test
add
sub
mov
lock
push
lret
mov
shlb
mov
and
dec
pop
jns
mov
sbb
cwtl
test
or
jp
mov
popf
call
shll
xchg
and
arpl
xchg
xchg
fucomip
lods
movsb
mov
or
loopne
adc
push
or
inc
xchg
mov
mov
mov
insb
js
jnp
jbe
scas
mov
xchg
pop
mull
loope
pop
inc
bound
test
push
or
pop
push
shlb
sbb
and
loop
data16
into
jmp
gs
xor
fistps
sti
adc
out
mov
pop
in
test
fcoml
pop
jecxz
xor
pusha
jae
mov
mov
add
pop
pusha
mov
stc
mov
out
sub
imul
jae
leave
add
inc
sar
mov
flds
mov
pusha
mov
nop
mov
sub
stos
push
test
mov
mov
cmp
cmpsb
xchg
cld
sub
or
les
add
xor
mov
jno
int3
es
scas
into
les
dec
leave
adc
lods
dec
test
inc
push
jne
mul
inc
aas
xchg
out
or
push
out
pop
mov
mov
das
pop
outsl
and
sub
adc
and
mov
les
xor
push
pushf
arpl
push
rorl
cs
push
add
dec
cltd
add
mov
xchg
cmc
sbb
push
cmc
mov
mov
mov
aas
movsl
adc
xchg
jo
in
cmpsb
rcll
and
lods
jns
mov
inc
pop
ret
pop
pop
pop
fdivr
ds
and
inc
in
incb
std
push
hlt
jb
ret
dec
aad
push
sub
stos
and
adc
rolb
mov
js
cwtl
cmc
dec
lahf
insl
mov
xor
jo
push
outsb
mov
or
push
xor
lahf
sahf
pop
sub
xor
push
icebp
adc
sub
xchg
pop
aaa
cli
mov
dec
pop
lahf
jge
arpl
jg
lcall
dec
lods
movl
aam
dec
int
push
insl
add
adc
adc
icebp
outsb
adc
xor
cmp
cmp
jge
inc
cltd
xor
ror
sbb
jae
out
hlt
bound
jne
adc
adc
sub
inc
loopne
sbb
std
testl
out
push
xchg
mov
rorb
daa
sbb
xor
movsb
subl
enter
cmpsl
mov
xlat
mov
ret
sbb
xorl
jae
std
jno
jp
dec
dec
xor
jecxz
adc
btsl
xchg
cmp
sub
subl
in
popa
sub
icebp
and
mov
in
inc
push
inc
xor
out
mov
sub
add
jp
xor
repz
sti
pop
xor
cli
cmp
adc
sahf
cmc
lcall
push
ret
lcall
adc
dec
stos
jnp
add
out
cmp
mov
shlb
ss
mov
pop
jb
imul
mov
jne
push
loope
sbb
cli
test
and
insl
cmp
push
jle
xchg
cmp
aam
movsb
gs
xor
repnz
negb
xchg
xor
ret
dec
xor
rol
or
pop
int3
jecxz
mov
repnz
cltd
mov
xchg
inc
mov
aas
movsl
in
aas
pop
cmp
cwtl
inc
fwait
dec
repz
aaa
arpl
or
fisubrs
sub
sbb
outsb
hlt
negl
call
imul
andb
jnp
jb
and
add
jecxz
dec
sub
xchg
iret
ret
adc
test
lods
out
dec
mov
add
int
incl
xchg
or
mov
pop
xchg
and
sahf
xchg
iret
or
sbb
test
adc
iret
xor
xlat
mov
outsl
inc
faddl
insl
imul
and
jmp
scas
ljmp
push
out
leave
pop
and
mov
xchg
mov
sti
cmp
sub
js
test
fildl
xlat
adc
clc
sbb
pushf
lcall
mov
and
loope
add
or
in
push
push
and
lods
repnz
and
enter
sahf
stos
inc
sbb
ret
push
add
pop
iret
xchg
aam
inc
mov
adcb
aas
iret
mov
xor
xchg
loop
int
mov
sub
mov
mov
add
insb
sbb
scas
mov
mov
dec
mov
sbb
mov
push
aaa
ss
cmp
or
cmc
sbb
outsl
xchg
push
sbb
mov
enter
rcl
sbb
cmpsb
insb
dec
mov
outsl
and
jle
jmp
adc
jnp
mov
lret
mov
jl
cmp
adc
jge
mov
popf
and
in
mov
mov
or
lahf
and
std
in
outsl
cmpsl
imul
fwait
lods
out
dec
jl
fsub
inc
pop
push
fsub
add
adc
enter
inc
andb
shll
xchg
mov
mov
jg
outsl
mov
xchg
scas
cmp
mov
mov
jle
jmp
fists
dec
or
add
jp
ja
mov
hlt
inc
ficompl
dec
mov
stos
imull
adc
mov
data16
ja
add
sbb
mov
arpl
lea
and
jb
jmp
shl
cmp
int
insb
dec
pushl
std
dec
jns
iret
lcall
ss
jmp
test
call
int
sbb
jmp
mov
sub
mov
dec
xchg
adc
clc
cmp
jnp
pusha
dec
jb
movsb
faddl
and
mov
fcompl
adc
ret
mov
stos
adc
or
cmp
inc
dec
adc
jp
ja
test
insb
outsb
and
sub
imul
jmp
jns
add
and
in
dec
testb
push
enter
mov
adc
imul
jo
xchg
sbb
in
and
pushf
loope
loope
adc
mov
dec
das
lcall
clc
jno
push
jnp
scas
adc
in
pushf
pushf
pop
js
pop
add
rcr
je
mov
jecxz
imul
lahf
fbstp
inc
jne
and
pop
js
sti
add
loopne
movsl
enter
cwtl
mov
push
jl
dec
push
faddp
pop
and
or
iret
fstpl
push
gs
and
repnz
das
push
or
mov
in
jle
fisubs
xor
jmp
stc
repnz
scas
push
mov
pop
scas
lahf
mov
mov
push
push
cli
fcmovne
ret
enter
loope
jbe
or
lcall
popf
cltd
cs
dec
inc
gs
cs
imul
push
xor
mov
aaa
push
jl
dec
cmpb
mov
popa
sub
jg
sub
xchg
sbb
and
cwtl
mov
xchg
push
pop
inc
jae
jnp
or
mov
sbb
pop
arpl
pop
add
andb
iret
imul
dec
push
push
in
mov
push
aas
pushf
cmp
into
or
or
sar
mov
negb
dec
stc
and
ret
outsb
jmp
inc
test
jecxz
adc
cltd
insb
or
repz
insl
adc
divb
and
loope
pop
in
dec
pop
lret
xor
rcrb
jle
shlb
lods
or
jl
sbb
push
std
decb
jb
dec
pop
push
pop
pop
lds
call
mov
jecxz
dec
pop
arpl
push
and
sub
jne
stc
cmpsl
call
xor
sbb
gs
xchg
pusha
lock
in
pop
jmp
lret
aaa
outsb
sub
in
sub
inc
or
jp
mov
sar
sbb
and
xchg
and
jae
loop
mov
outsb
clc
and
jl
and
sarb
int
push
mov
adc
notl
and
add
sub
xor
mov
fwait
or
push
or
scas
mov
adc
cmpb
ret
fmulp
pop
pop
mov
push
stc
enter
dec
xor
fisubl
xchg
mov
ret
insl
in
jne
subl
or
and
lcall
cmp
push
push
stos
lret
in
xor
mov
mov
add
scas
sbb
xor
sti
sbb
push
jne
jnp
push
pusha
ret
scas
pushl
cld
mov
lahf
jno
outsb
push
clc
setne
ret
mov
flds
bound
ja
ds
cmp
push
loopne
ja
out
mov
aam
lds
cltd
int
inc
and
enter
insl
bound
cld
xor
lds
lods
mov
repnz
cmp
jp
aaa
mov
mov
out
push
xchg
jmp
xchg
add
mov
stos
sahf
sbb
add
push
xchg
lods
loope
iret
sti
iret
js
je
jmp
jnp
je
ds
jge
nop
mov
aad
jb
mov
sbb
sub
and
repnz
inc
cmp
pop
aad
scas
push
push
sahf
mov
mov
in
xchg
subl
dec
sarb
cld
sbb
inc
int3
movsl
add
inc
std
cmpsb
stos
mov
jbe
mov
adc
cld
mov
jl
xchg
sbb
sbb
jne
test
inc
jge
insl
pop
add
xchg
filds
pop
add
mov
int
adc
pop
cpuid
mov
lahf
sub
sub
jnp
sarl
mull
and
stc
js
cmp
push
push
popf
mul
cmp
xor
mov
sub
das
aas
xchg
loope
cmpsl
add
int
fbld
sbb
imul
mov
outsl
mov
jp
jae
push
stos
icebp
lret
cmpl
inc
sub
stos
cmp
test
fnstcw
sahf
testl
and
mov
test
stos
pop
fldcw
jae
or
jecxz
push
int
pop
jle
sbb
js
inc
ja
jns
fisubrs
push
xor
shll
fistpl
fadds
test
outsb
clc
or
pusha
pop
mov
dec
sub
or
sahf
mov
aad
or
pop
fcomp
orb
outsl
cmp
inc
push
scas
sbbb
pusha
iret
sbb
mov
add
mov
sbb
adc
in
outsb
pop
loop
cmp
ja
adc
or
add
pop
lret
mov
adc
xchg
add
add
fwait
pop
adc
pop
movsb
pop
jns
sub
sub
mov
hlt
mov
loop
xchg
aam
aam
test
or
shrb
movsb
lds
mov
push
sub
aas
out
cli
sbb
mov
sbb
inc
bound
adc
shll
cmp
add
dec
cwtl
pop
adc
or
out
inc
loop
cwtl
jnp
xchg
cmp
in
add
arpl
dec
pop
jle
sbb
pushf
sub
add
in
mov
or
dec
sbb
ja
aad
lods
mov
xchg
ret
xor
sbb
mov
or
lret
cmpsb
sbb
mov
mov
add
adc
lds
popf
outsl
jns
push
inc
mov
neg
jns
cld
popa
inc
ss
xchg
adc
cmp
push
in
test
push
mov
ret
js
cmp
ficoms
gs
repz
mov
xchg
fsub
fisttpl
xchg
cwtl
scas
pop
ret
sub
shlb
adc
mov
jb
in
xor
sbbb
xchg
clc
enter
test
imul
sub
inc
cwtl
and
jb
les
xchg
shr
jl
add
bound
cli
test
movsb
cmp
mov
dec
lods
jmp
fmull
push
jns
mov
inc
inc
mov
iret
fnstenv
adc
in
push
xor
loopne
mov
xor
jle
icebp
or
xchg
push
stc
das
mov
cmpsb
sbbb
popa
fwait
into
sbb
jl
pop
dec
dec
rol
aaa
ret
cmp
cmp
xchg
pop
or
fldz
add
push
out
clc
js
pop
aas
pusha
xchg
dec
add
cmp
mov
push
mov
cs
xchg
xchg
shrl
stos
add
andb
fdecstp
fistps
lret
test
jne
push
fwait
push
push
lret
xor
cmp
adc
lds
cltd
sahf
mov
dec
out
or
jl
mov
inc
bound
push
jmp
jno
out
imul
sbb
dec
and
fisubs
and
mov
mov
cltd
or
push
xor
ret
ds
add
test
fdivl
movsl
decl
sbb
mov
push
mov
cltd
xchg
lock
xchg
scas
call
into
sub
ja
ret
ror
push
lcall
jae
cmp
pusha
rcrb
push
and
in
sbb
lock
aaa
xchg
inc
lcall
out
xchg
mov
movsl
sub
add
lcall
shrl
dec
enter
add
lcall
stc
cmp
xchg
xor
nop
addr16
aam
adc
enter
push
jns
loopne
lahf
arpl
and
cmp
mov
cmp
adcb
shlb
add
cmp
sbb
cwtl
out
jle
jbe
test
or
pop
inc
xchg
cmp
insb
xor
cs
dec
xlat
push
cs
arpl
pcmpeqw
fsubrl
es
outsb
mov
jmp
lods
hlt
inc
scas
mov
jle
dec
decb
and
cmp
incb
lahf
cli
adc
cld
pop
fs
dec
movl
loopne
mov
repnz
adc
pop
repz
dec
or
in
and
pop
sahf
in
push
ljmp
cmp
cmc
pop
jl
outsb
test
jmp
sub
into
pop
xor
daa
dec
mov
and
hlt
cmp
jge
xor
jge
xor
cmp
jns
dec
lods
enter
out
push
out
mov
pop
add
aas
dec
adc
xchg
inc
add
in
and
xchg
adc
jp
cli
push
in
decb
dec
shll
xchg
or
popf
cli
pop
pushf
mov
mov
out
pop
add
andb
cmc
fidivl
push
es
sbb
into
fs
jae
pop
push
daa
pop
mov
push
jle
add
daa
fldcw
in
jle
lods
sbb
fdiv
cmp
mov
jp
arpl
and
aam
xchg
mov
or
xchg
rorb
addr16
jg
lcall
dec
jno
add
in
orl
imul
jecxz
cmp
push
es
sub
out
test
jle
xchg
addr16
addr16
lret
repnz
dec
arpl
cmp
fucomp
aad
add
test
dec
cwtl
loopne
push
cli
faddl
mov
cmc
or
std
adc
pop
adc
sar
push
xchg
pop
push
xor
push
inc
push
adc
les
adc
jmp
test
inc
test
std
test
cwtl
cmpsb
in
aaa
aad
shl
xchg
push
test
clc
leave
repnz
vaddsubps
lods
xor
cmp
pop
jmp
je
lock
in
inc
test
sbb
xor
test
dec
rcrb
dec
or
cmpsl
movsb
xchg
pushf
int
inc
fcomp
pop
testb
mov
outsb
mov
hlt
fsubp
jecxz
push
xor
aad
push
leave
arpl
ds
sbb
mov
sub
test
ret
add
int3
push
jecxz
or
inc
pop
add
jle
xor
and
enter
pop
stc
fidivs
std
or
loopne
add
loope
cld
shrb
out
jecxz
sbbb
xchg
lret
in
adc
bound
notb
xor
mov
adcl
jl
test
dec
sti
pusha
and
add
cli
lods
dec
test
dec
mov
call
sub
push
mov
and
and
nop
push
leave
mov
int
lahf
lds
pop
sbb
inc
xchg
lahf
bound
clc
fsubl
test
mov
std
mov
cld
js
mul
or
and
out
rolb
scas
bnd
cmp
nop
hlt
js
xor
lods
subl
and
divb
cmpsl
cmp
mov
stc
mov
push
daa
push
sub
mov
pop
mov
sbb
jp
adc
xchg
iret
or
inc
decb
lods
mov
xor
jecxz
xchg
dec
and
push
movsb
xchg
or
repz
mov
jnp
inc
mov
sti
stc
into
sbb
pop
mov
push
movb
sbb
daa
mov
jne
xchg
lahf
lahf
add
fldl
test
dec
inc
das
inc
sarl
dec
nop
arpl
in
or
xorb
lret
jo
xor
mov
dec
jle
or
lret
xchg
xor
aam
fidivrl
aam
dec
ror
int3
out
sbb
cs
insl
mov
adc
adc
jo
jnp
sbb
ffreep
sbb
jge
jae
xor
out
xchg
cwtl
es
xchg
xor
arpl
insb
out
and
imul
sub
cmpsl
sbb
inc
cmpsb
xor
sbb
jl
mov
mov
jge
push
mov
mov
mov
pop
sbb
add
xchg
pop
jne
stos
xchg
dec
adc
movsb
sbb
roll
jecxz
dec
lahf
out
stc
iret
inc
insl
or
out
xchg
gs
pop
sbb
mov
sahf
in
xchg
add
or
rcrl
pushf
cmp
jl
in
loope
xchg
lods
adc
cmp
fdivs
lea
dec
insb
xchg
mov
jne
int
data16
sbb
add
adc
mov
pop
cmc
and
sbb
xor
fs
add
dec
call
out
push
jl
mov
sbb
jmp
mov
xlat
sti
cli
mov
in
cs
aad
sbb
sbb
dec
add
pop
pop
andb
inc
mov
fsubrp
dec
cmp
inc
popf
cmpsl
add
mov
mov
mov
mov
int3
or
sub
xchg
cmc
js
mov
imul
test
adc
sbb
in
loop
std
push
sbb
sub
outsl
mov
dec
xor
test
shlb
dec
adc
cmp
push
sub
ljmp
lcall
sub
ljmp
sub
and
push
mov
outsb
or
xor
xchg
lret
push
ss
inc
mov
aam
pop
stc
sub
add
je
jge
mov
aaa
outsb
jnp
aad
int
sbb
push
xchg
mov
sbb
clc
rorb
adc
adc
shll
mov
es
pusha
push
mov
into
jne
adc
adc
adc
and
imul
mov
jmp
inc
sub
adc
pop
es
nop
adc
fsub
sub
inc
cmp
out
popf
loope
xchg
aad
mov
sarl
dec
arpl
and
cmp
cltd
outsb
cmp
imul
stc
dec
leave
pop
fldcw
or
jns
dec
fistpl
test
sbb
dec
leave
pop
fldcw
or
jns
dec
fistpl
test
sbb
dec
leave
pop
fldcw
or
jns
dec
fstps
test
sbb
lret
leave
fcmovnu
push
sub
or
xchg
and
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
or
loopne
lock
subl
pop
lods
pusha
mov
adc
xor
xor
loopne
lock
sbbb
mov
popf
push
fldenv
jo
fstl
in
and
xor
loopne
lock
sbbb
mov
popf
jae
add
mov
inc
inc
mov
xchg
or
mov
inc
lods
gs
cmp
int
pusha
fistpll
rcr
mov
addr16
fstps
jnp
mov
and
enter
add
rclb
aaa
adc
dec
pop
adc
jae
inc
notl
data16
insl
call
lods
cmp
lds
mov
nop
xchg
test
push
lea
cmc
xor
mov
in
push
pushl
repnz
inc
pop
add
jg
icebp
jl
popf
mov
xor
inc
push
filds
or
cltd
and
clc
mov
pushf
sbb
inc
notl
clc
icebp
adc
inc
in
and
shrb
sbbb
mov
popf
push
lods
pusha
mov
adc
and
jbe
shlb
pop
mov
adc
or
cmp
int3
xor
add
push
test
mov
or
xor
insl
idivl
call
pop
clc
and
inc
std
fs
dec
mov
nop
insl
mov
popf
push
lods
pusha
mov
adc
and
xor
loopne
lock
sbbb
mov
popf
push
lods
pusha
mov
adc
and
xor
sbb
xchg
jne
aas
sbb
sub
inc
je
fsubrl
pop
mov
pop
popa
jmp
dec
dec
xor
ror
dec
mov
dec
loope
ss
fstl
mov
imul
out
sbb
mov
mov
add
and
dec
lcall
js
jmp
in
and
dec
js
xchg
jp
push
insb
xor
sub
pop
popf
iret
les
shrl
and
push
daa
outsl
std
incl
lods
mov
jge
repz
rcrl
fcmove
test
into
leave
dec
nop
jecxz
int3
shll
movsl
out
xchg
mov
adc
stc
jb
cmpsl
scas
push
dec
mov
lahf
insl
inc
fnstsw
les
js
dec
loopne
xchg
cmp
mov
fidivrs
cmp
add
xchg
and
aad
mov
inc
loop
fmull
rolb
push
test
out
movsb
ror
push
ds
std
adc
or
call
int
aam
xchg
push
mov
pop
add
ret
sub
push
test
sbb
test
sub
mov
mov
pushw
outsl
fcoms
jae
or
push
rorb
lock
xchg
mov
addb
out
fbstp
sub
sub
out
pushf
jne
cs
daa
popa
inc
add
cmp
insl
jle
mov
test
fld1
imul
mov
cltd
pop
pop
fs
cmp
sub
data16
and
aaa
les
xchg
or
mov
pop
fildll
xchg
xchg
cmpsb
testb
loope
cmp
or
ss
stos
dec
fistl
xor
lds
shll
outsb
cmp
rolb
sbb
xchg
cmp
xchg
sbb
insl
pop
xchg
sbb
movsb
fidivrs
or
add
scas
ja
out
mov
call
xorb
cmpb
in
mov
push
pop
ljmp
and
and
pop
fsub
jbe
or
dec
mov
movsl
divb
cmp
mov
dec
cwtl
es
sbb
shufps
cmp
cwtl
pop
pop
push
ror
xchg
adc
xchg
mov
ljmp
adc
pusha
stos
mov
mov
xor
push
ja
ja
dec
jp
pop
or
and
xor
dec
or
in
mov
cld
mov
shr
xchg
cs
add
cli
mov
mov
outsb
mov
sbb
add
mov
lods
jge
jp
ja
bound
adc
je
push
mov
jp
dec
cli
rcll
je
adc
pop
sub
xor
jecxz
loopne
mov
cmp
cmp
xchg
fs
rcrb
push
arpl
out
stos
fstps
ret
into
inc
out
jmp
test
scas
add
loopne
sub
adc
test
sbb
xchg
push
pop
ja
fiaddl
cmp
mov
mov
jecxz
adc
ja
mov
enter
xchg
pop
bound
add
fsubrl
sub
mov
int
ss
icebp
sub
pop
in
imul
cltd
lcall
or
mov
pop
ficompl
add
stos
add
mov
jno
in
push
fstps
aaa
ret
xchg
fsubs
sub
loopne
ljmp
pop
hlt
mov
repz
clc
add
pop
pop
in
mov
push
shlb
push
enter
dec
int3
mov
sbb
les
fstpt
je
popf
cltd
je
pushf
xlat
xor
mov
ljmp
rol
mov
gs
xchg
xchg
pop
rolb
fs
in
push
lea
xchg
mov
sub
int3
aaa
cmp
and
jno
aam
aam
add
mov
jnp
jmp
and
pop
mov
pushf
mov
sub
out
idivb
pop
into
pop
movsl
lds
or
lret
sbb
fnsave
mov
xchg
inc
sbb
cmpsl
ljmp
or
dec
push
mov
and
mov
fistps
repnz
iret
cmpsb
push
and
inc
je
or
or
pop
loop
shrb
cli
push
fsubr
movsb
test
push
xlat
popf
xor
and
jp
cwtl
xor
jnp
push
inc
mov
rcl
imul
pop
dec
aad
rorb
cli
jo
or
add
sub
pop
sti
in
sub
pop
xchg
ja
mov
andl
pop
xor
leave
xchg
clc
pushf
pop
mov
pop
cwtl
and
loopne
ud1
iret
jnp
and
enter
pusha
sbb
and
stos
outsb
adc
lcall
sbb
mov
mov
adc
out
jge
idivl
movsb
fnstenv
test
subl
mov
je
loope
inc
dec
push
mov
fstl
jae
stos
bnd
stos
dec
adc
jecxz
add
sahf
rcll
mov
out
or
daa
add
imul
and
sahf
out
xchg
jnp
sbb
pop
jo
ret
loopne
fsubl
mov
xchg
fucom
or
ja
pop
inc
test
sbb
dec
push
push
inc
jmp
add
and
or
dec
mov
xchg
movsb
mov
fcom
xchg
in
clc
push
out
adc
test
scas
adc
or
icebp
mov
lods
fwait
jns
ret
leave
outsb
insl
mov
in
push
xor
mov
inc
in
mov
loop
nop
jo
add
dec
sub
mov
cmp
cld
clc
xor
and
into
pop
xor
cld
inc
cmpsb
shlb
ja
inc
inc
les
repnz
and
repnz
pop
fnstsw
and
mov
fbstp
adc
aad
xor
test
dec
inc
dec
push
adc
or
cmpsl
stos
lea
dec
loope
xchg
jnp
aad
jne
popf
fidivs
push
mov
sub
pop
pop
test
cmp
imul
nop
sub
and
xchg
mov
fs
xor
dec
dec
scas
and
cmp
jmp
sub
and
pop
lds
push
les
pop
mov
nop
outsb
pop
test
inc
xchg
add
mov
push
out
pop
cmp
and
into
mov
add
js
out
sbb
pushf
mov
sub
loop
in
pop
stos
inc
scas
lods
ss
out
mov
arpl
movsb
shlb
ja
adc
inc
jp
jmp
sub
jbe
push
mov
adc
scas
xchg
inc
rcr
or
xor
aam
xor
arpl
idivb
icebp
add
sti
loope
lahf
sub
pushf
inc
pop
addr16
and
popa
jnp
jecxz
mov
iret
sub
mov
lds
xchg
repz
xchg
jb
mov
push
or
mov
test
mov
xchg
lods
nop
add
dec
mov
js
ds
add
lcall
sbb
cmp
adc
fdivl
loop
add
sub
sub
add
adc
dec
rcrb
fdivrs
xchg
pop
xor
xor
in
enter
mov
pop
lea
outsl
scas
mov
mov
testb
dec
jmp
cli
dec
push
les
incl
push
xor
in
or
ja
popf
mov
and
or
cmp
cmp
jbe
push
iret
xor
stos
fsubrl
loope
das
test
pop
lock
pushl
and
mov
inc
js
inc
mov
pop
lcall
out
in
rcrl
sbb
xlat
cmc
divl
pop
bound
jmp
popa
push
bound
scas
inc
sbb
push
fdivs
mov
jno
xor
push
jmp
mov
mov
cmp
je
xor
xor
sbb
testl
sbb
je
lea
fdivrs
insl
and
pop
push
pop
jg
stos
dec
sahf
push
xchg
adc
std
push
jno
notl
fcmove
lds
sbb
sbb
bnd
xor
mov
dec
push
sub
ficoml
js
cmp
push
dec
cmp
sbb
movsl
stc
idivb
xchg
imul
fnstcw
add
pusha
or
or
imul
ljmp
xor
xchg
fstpt
push
lcall
andb
sub
nop
scas
rcl
push
loopne
cmp
rorb
pop
andl
or
add
or
dec
arpl
jns
insl
aad
pop
sbb
push
or
push
cltd
or
mov
mov
jmp
xor
sbb
fisttps
cmc
push
adc
scas
fld
jmp
fcmovu
loop
sbb
lock
xchg
or
dec
lock
pop
or
mov
jno
sub
push
pop
cmpl
or
dec
bound
in
sub
aaa
lahf
push
sub
addl
cld
pusha
fsubrl
ficoms
inc
shl
ret
xchg
xor
bound
scas
idiv
jne
enter
mov
dec
sti
jbe
imul
cmp
mov
out
cli
xchg
scas
sbb
inc
and
mov
jg
cmpsl
mov
add
cs
sub
mov
je
xor
mov
xor
pop
movsl
xchg
add
arpl
xchg
add
rclb
in
and
and
inc
mov
in
and
inc
add
fwait
pushf
mov
push
ss
xchg
ljmp
mov
xchg
inc
scas
into
out
pop
mov
jmp
add
xchg
lret
movsb
cmp
into
push
in
into
sbbl
rcll
pop
cltd
xchg
data16
shl
std
pushf
lcall
icebp
mov
mov
int
push
push
pop
add
lods
cmp
int
lahf
adc
aad
lahf
push
sub
inc
andb
inc
nop
ret
or
loopne
faddl
daa
jp
popa
out
push
jmp
lea
popa
lods
or
mov
xor
lods
stos
xchg
push
ss
adc
inc
xor
sub
push
pop
jge
mov
in
inc
adc
addb
xchg
dec
push
ljmp
mov
test
iret
inc
mov
scas
xor
xor
mov
or
and
xor
jbe
outsb
roll
inc
icebp
or
pop
dec
enter
iret
push
mov
into
xchg
int
repz
push
push
pop
fbstp
scas
es
cmp
out
xchg
mov
loope
pop
ret
dec
sbb
xor
stos
mov
pusha
add
rolb
push
xchg
ds
and
popf
fld
add
fwait
fwait
mov
hlt
arpl
lcall
cltd
pop
xchg
sub
mov
out
inc
lock
xchg
xchg
popa
mov
pushf
flds
cmp
sbb
cmp
mov
jae
or
jmp
dec
xchg
adc
shrl
xchg
mov
and
dec
fnstcw
or
or
add
mov
daa
xchg
xchg
pop
ss
mov
test
fimull
push
jg
adc
sub
popa
icebp
stos
cmp
dec
js
pusha
dec
mov
mov
cmpsb
sub
fidivrs
mov
push
xchg
sbb
aas
push
std
cmp
jl
xchg
cmp
rcrl
jbe
lods
clc
std
fidivl
stos
fistps
addr16
rcrb
pushf
inc
movsl
and
sub
shll
push
mov
pop
movsl
mov
pop
fildl
test
aas
mov
jae
inc
into
jno
xchg
fidivrs
xchg
stos
push
jnp
mov
js
xchg
in
add
lret
scas
stos
sbb
stc
mov
pop
sub
sahf
mov
or
mov
push
or
fnstenv
les
lret
lods
test
jns
test
rol
dec
dec
pop
mov
pop
lcall
jo
xlat
xlat
cli
aam
push
mov
popf
fiaddl
push
or
jo
mov
cli
xchg
lret
mov
rolb
rorb
iret
jle
shrl
les
jnp
int3
ljmp
loop
pop
fmuls
xchg
push
insl
push
shlb
jecxz
mov
dec
pop
jecxz
push
fistpll
stos
dec
lods
rcl
cmp
sbb
jbe
jns
dec
dec
push
inc
or
mov
fcmovnbe
mov
jg
mov
mov
adc
rcrb
cwtl
arpl
and
cmp
inc
das
rorl
sbb
mov
mov
ficoml
inc
fwait
push
clc
mov
imul
cmc
push
mov
insl
mov
cmp
cs
pop
in
gs
mov
dec
add
mov
xorl
mov
jbe
and
adc
and
out
inc
fs
jo
das
stos
imul
mov
xchg
xchg
fdivr
andl
jo
repnz
ret
repz
mov
mov
ret
comiss
fdivrl
nop
dec
mov
ret
popf
ljmp
inc
lret
out
mov
mov
add
inc
xchg
mov
mov
mov
out
iret
push
jl
addr16
sub
inc
ljmp
loope
nop
xchg
mov
inc
fyl2xp1
js
clc
scas
mov
in
hlt
or
push
ficoms
push
push
fld
jle
cmpsb
mov
or
xchg
orl
fcompl
ss
addps
add
xlat
xchg
stos
pop
pop
rcll
xor
shrb
and
xchg
rcll
cld
pop
push
jbe
xchg
mov
sbb
fs
xlat
mov
stos
sbb
fmuls
sub
shrl
sbbl
std
lds
mov
xor
and
gs
jp
cmp
sub
daa
mov
push
aaa
popa
xor
into
adc
pop
dec
movsl
jno
push
and
rcrl
jmp
icebp
mov
aaa
sub
ja
fldenv
push
sbbl
jb
xor
outsl
dec
mov
cmp
roll
mov
data16
cmpsb
addr16
sub
dec
lea
in
imulb
ficomps
scas
fldl
loopne
adc
sahf
add
xchg
es
xor
jecxz
testl
int
popa
mov
jp
iret
add
popa
not
gs
lods
xchg
insl
push
and
cmp
mov
roll
or
and
cmp
jb
stos
pop
mov
out
cmp
out
mov
xor
pop
xor
sti
dec
pusha
bound
pushf
xchg
or
loop
add
loop
mov
jnp
adc
cmp
push
out
xchg
negl
jg
pop
or
rclb
lret
iret
vunpcklps
fwait
cltd
mov
dec
jnp
stc
sub
ret
outsl
cmp
fcmovb
cmp
mov
xchg
sahf
jl
in
and
orl
insl
dec
push
repnz
or
lret
push
inc
mov
ljmp
jno
push
call
dec
mov
pop
inc
and
mov
jo
cwtl
out
movsl
mov
jle
and
cmp
std
fs
les
cmc
cltd
in
frstor
push
out
push
ret
xor
das
movsl
mov
inc
addb
cmpsb
sub
or
outsl
ret
jns
ljmp
cmc
xor
cli
mov
int
lret
dec
mov
adc
push
mov
js
pusha
sub
pop
inc
cwtl
xor
push
jcxz
push
push
push
ficompl
or
xor
stc
push
cmpsl
in
iret
pushf
push
and
icebp
push
out
mov
or
ror
fsubp
mov
push
test
xchg
ljmp
daa
mov
pop
xchg
jg
xchg
test
cwtl
dec
cli
out
in
add
loope
es
jl
xor
mov
mov
mov
pop
ret
mov
pop
sub
pop
nop
dec
dec
xchg
lods
arpl
cmp
adc
inc
pop
cmp
movsb
jno
testl
int
dec
outsl
arpl
js
inc
jno
or
daa
and
subl
add
xlat
jbe
mov
pop
jg
mov
nop
xchg
xchg
pushf
lret
add
sub
sub
inc
push
mov
scas
ljmp
stos
int3
cmp
sub
push
jmp
in
outsl
lret
mov
sahf
inc
sub
bound
xchg
mov
gs
aad
or
repz
sahf
pop
test
in
xchg
dec
out
fldenv
rclb
and
icebp
sub
rcrb
enter
adc
xorb
aas
fisttpl
mov
clc
mov
loope
mov
mov
sub
movsb
insl
loop
mov
mov
push
jne
or
or
push
xor
ret
pop
shr
mov
mov
adc
pop
dec
gs
mov
xor
and
pop
dec
pop
xchg
into
divl
ds
mov
and
dec
mov
inc
enter
icebp
push
lea
outsl
imul
xor
mov
sub
jno
into
les
and
int
xchg
mov
or
in
test
insb
fidivrs
fwait
ret
idiv
push
xor
into
int
jecxz
iret
adc
or
dec
cmp
inc
int
pushf
aad
sbb
outsb
insw
inc
mov
jle
dec
ja
outsb
jmp
push
popa
insb
dec
mov
pusha
test
pop
arpl
adc
ficoms
inc
sbb
add
out
imul
and
lcall
outsb
fisubl
sub
jbe
xchg
adc
fstl
ljmp
jns
fnsave
and
shll
xchg
sbb
cmpsl
dec
flds
ret
push
hlt
and
std
push
in
call
jne
sub
out
pop
pop
sbb
outsb
jecxz
fnsave
pop
std
cwtl
stos
xchg
inc
cmp
xchg
xor
pop
mov
dec
movsl
mov
int
sub
pop
jmp
aad
movsl
push
test
mov
push
push
popa
cmpb
ds
rcr
clc
sub
jmp
adc
cmp
gs
lock
xchg
jo
sub
cmovae
repnz
jg
and
scas
mov
and
jno
mov
sbb
add
pop
dec
inc
lahf
stos
fadd
hlt
popf
sarl
fnsave
shll
outsb
dec
adc
mov
cli
inc
mov
jge
mov
hlt
xor
add
xchg
sbb
or
out
cs
popa
jl
scas
rolb
out
in
add
sub
mov
ficomps
cmpb
arpl
push
aad
loope
inc
push
stos
fisttpl
lret
dec
inc
addr16
lret
mov
mov
popa
sub
add
sub
movsb
sub
in
add
add
add
jmp
push
sub
fwait
xchg
mov
pop
lds
push
mov
push
xchg
push
dec
sub
hlt
divb
mov
ds
push
int
push
and
jge
iret
add
xchg
push
ljmp
fildl
mov
outsl
xacquire
mov
jp
aam
les
jbe
cmc
nop
mov
icebp
sub
paddd
inc
sub
ljmp
in
dec
sarb
call
add
in
mov
cmpsl
fwait
xor
dec
int
dec
movsl
jne
push
push
aas
jnp
div
loopne
addr16
mov
sub
sub
repz
loop
or
mov
iret
jbe
mov
adc
into
or
mov
dec
or
mov
xor
push
subb
lret
loop
xchg
lahf
pop
push
cmpsb
bnd
aad
lods
hlt
or
adc
mov
jb
or
inc
rcl
lds
xchg
dec
test
loop
ljmp
outsl
aad
lcall
dec
sbb
into
add
outsb
adc
daa
xor
mov
mov
mov
das
push
sbb
dec
test
xchg
pushw
mov
xchg
xorb
outsl
pop
lret
inc
inc
fstl
jp
stos
subb
jns
fdiv
add
adc
int3
xchg
jbe
out
xchg
std
cmovo
or
xchg
fwait
inc
xor
popl
lods
aam
lcall
in
std
in
insb
xor
inc
mull
pop
cmp
jg
xchg
push
dec
fisubs
lea
dec
add
ret
stc
test
stos
out
sub
clc
inc
nop
sub
fstps
rorl
or
fs
jbe
shll
inc
dec
jo
fwait
lods
iret
cs
lods
xlat
dec
loopne
inc
jne
orb
sbb
testl
fnstenv
or
roll
push
jmp
addb
mov
push
jae
cltd
lock
add
das
mov
push
lea
loopne
lock
sbbb
mov
popf
push
lods
pusha
mov
adc
and
xor
loopne
lock
sbbb
mov
popf
push
lods
pusha
mov
adc
and
xor
loopne
lock
sbbb
mov
popf
push
lods
pusha
mov
adc
and
xor
loopne
lock
sbbb
mov
popf
cli
pop
pusha
mov
out
adc
add
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
fldcw
jmp
nop
xlat
popf
mov
jns,pt
push
cmp
pop
fldcw
jmp
mov
cs
jns,pt
imul
cmp
pop
fldcw
jmp
mov
adc
adc
cmp
sbb
pop
xchg
test
sub
aas
mov
push
cmp
lock
test
pop
imul
cmpsb
inc
movsl
lahf
push
popa
pushw
mov
inc
ret
movsb
xchg
int3
pop
xchg
xchg
pop
out
or
outsb
dec
movsb
mov
jns
repnz
negl
out
sbb
fimuls
je
pop
mov
pop
fsts
mov
mov
daa
test
sub
cmp
sbb
xor
inc
sbb
arpl
out
mov
cmp
in
mov
repnz
dec
cmpsb
idivb
imul
inc
cmp
jnp
xor
test
das
xchg
inc
push
dec
xchg
test
adc
mov
sahf
cltd
out
mov
mov
cs
jns,pt
imul
cmp
sbb
enter
cmp
scas
pop
inc
sub
jns
adc
add
pop
pop
int3
outsl
cmp
test
cltd
mov
rol
mov
sbb
pop
imul
cmp
dec
lret
test
aad
mov
mov
cs
jns,pt
imul
cmp
pop
fldcw
jmp
mov
cs
jns,pt
imul
cmp
pop
fldcw
dec
sub
xor
aaa
jmp
push
rol
loope
pop
pop
push
aam
jne
iret
repnz
cmp
loop
pop
mov
xchg
push
xor
jb
scas
mov
adc
adc
ja
in
enter
jns
fisubrl
arpl
rcrl
jmp
lods
aam
jge
dec
in
imul
lods
aaa
notb
or
adc
pop
push
lahf
call
loope
dec
lock
push
xor
mov
push
mov
adc
ljmp
cmp
push
pop
imul
xor
aas
imul
mov
sub
fnstenv
jb
imul
xchg
cmp
mulb
outsl
out
cwtl
aam
iret
sub
sbb
in
mov
scas
sbb
mov
adcl
pop
pop
push
xchg
push
dec
xchg
mov
es
cmp
orl
jns
out
ret
and
mov
dec
pop
sbb
adc
sahf
lret
xchg
mov
movsl
int3
jno
outsb
push
mov
cmp
or
cmp
test
div
loop
or
xor
jmp
push
aad
xchg
popa
dec
pop
cli
lret
adc
push
xor
aad
daa
sti
addr16
lret
adc
mov
cmc
pop
pushf
inc
in
sbb
jp
sbb
popa
ret
addl
mov
mov
cmp
mov
push
stc
loope
and
mov
inc
cmp
cmpsl
mov
mov
lret
movsl
mov
fmuls
pop
popa
add
aad
outsb
cwtl
clc
dec
or
popf
je
imul
lods
outsl
out
pop
mov
sub
insl
mov
xchg
sbb
xor
scas
cmp
and
push
sbb
shrl
enter
jp
push
dec
or
outsb
add
pop
mov
scas
push
dec
sbb
xchg
int
jge
mov
fcomi
loop
popf
aaa
jns
inc
jno
cmc
xchg
mov
jg
jbe
pusha
rcll
pop
xchg
push
cmp
and
push
pop
push
push
cmp
jae
push
sub
mov
mov
add
and
sub
popf
sub
push
pop
ficompl
mov
jle
xchg
notb
pushf
adc
mov
lds
cmc
iret
stos
bound
push
add
push
stc
and
push
orb
fs
mov
outsb
dec
aaa
adcl
fnstenv
out
outsl
cmpsl
jns
xchg
or
add
pop
lahf
xor
jb
sub
and
je
and
icebp
mov
mov
ret
aam
cs
fdiv
push
lret
mov
cmp
cmp
mov
cwtl
or
mov
adc
sub
bswap
icebp
movsl
inc
pop
dec
inc
jmp
mov
mov
xchg
out
inc
sahf
movaps
popaw
adc
int
adc
ret
arpl
cmpsl
dec
jecxz
movsl
xchg
fists
jae
les
mov
mov
or
mov
sbb
es
fisubs
dec
fbstp
mov
cmp
loope
into
mov
scas
adc
mov
loop
sarl
call
and
add
out
pop
cmc
lret
adc
ret
mov
js
pop
jecxz
inc
cmp
jecxz
test
add
add
xor
inc
pop
inc
sub
in
and
aam
lahf
inc
imul
jae
in
divb
push
out
adc
cmc
test
pushf
aaa
and
adc
cld
mov
ljmp
loopne
aaa
cmp
aad
fdivs
push
xor
pop
loop
stos
lea
xchg
repnz
lahf
jbe
jbe
rorb
leave
xor
sbb
inc
in
flds
and
sbb
xchg
stos
mov
mov
pop
push
jb
repnz
mov
mov
ss
rcll
cmp
stos
add
cs
jae
test
pop
xchg
outsl
dec
bound
popf
xor
mov
jo
cwtl
push
jg
cmpl
jmp
mov
sahf
dec
cmpsl
enter
xchg
mov
push
inc
fcmovnu
mov
xor
imul
dec
mov
mov
sarl
aad
adc
mov
sub
mov
stc
jb
and
sbb
loopne
es
lods
pop
das
inc
aaa
mov
xchg
jno
sarb
mov
mov
aad
push
fcoms
call
push
push
scas
or
mov
daa
sub
test
xorb
addl
movsl
in
movsl
add
cmc
cmp
sub
scas
jg
stos
imul
mov
fimuls
shrb
fucomip
xchg
mov
fnstsw
out
notl
cmp
test
add
xchg
aaa
xchg
mov
jmp
or
sbb
andb
enter
inc
rolb
inc
hlt
fnstenv
and
fsubs
movsb
cmpsb
sub
iret
sbb
ret
mov
dec
mov
hlt
xor
dec
add
adc
sbb
daa
sbb
mov
ret
add
mov
lods
sub
popf
iret
mov
and
or
mov
fwait
jecxz
jne
pushf
testb
mov
xchg
push
mov
ss
dec
add
lods
in
out
mov
pop
adc
sub
mov
movsb
mov
fs
shll
daa
cmpsl
pop
sub
scas
sub
pop
int
outsb
out
adc
adc
add
cmc
cmpsl
and
inc
mov
les
stos
test
ja
mov
jl
lcall
mov
jg
imul
hlt
jge
cmp
clc
popa
bound
add
xor
test
imul
lcall
jne
test
hlt
cmp
cmp
jp
xor
testb
mov
inc
mov
imul
inc
addr16
push
fwait
lret
mov
pop
mov
pop
mov
call
adc
mov
mov
and
ss
dec
mov
into
mov
cmp
shl
and
hlt
loope
jo
out
andb
movsb
jb
push
xor
bound
loopne
inc
popf
movsb
pop
adcb
pop
and
icebp
dec
insl
xchg
icebp
pop
int3
add
je
clc
cli
adc
mov
addr16
fdivrl
daa
out
cmp
jne
es
ljmp
xor
ret
push
adc
mov
int
xor
movsl
push
sahf
mov
adc
xor
jne
adc
out
adc
cwtl
and
and
shrl
les
or
and
adc
rcrb
nop
lods
test
das
dec
mov
fwait
jp
lods
inc
mov
push
push
sub
cs
popa
jns
loope
repnz
movsb
lods
mov
pop
jmp
jle
cld
iret
sub
add
daa
pop
add
clc
fistl
mov
lock
lock
into
cmp
pop
popa
psubusw
jno
nop
test
ja
in
mov
les
rcll
lods
mov
test
in
jmp
push
icebp
cltd
dec
mov
xchg
xor
xor
repnz
loop
sub
mov
cmp
mov
lods
sub
xchg
push
les
mov
std
sub
shll
xlat
mov
push
fsubr
jne
stos
push
pop
rorl
pop
repz
inc
std
mov
pop
imul
mov
nop
jl
rol
clc
sti
shlb
add
test
test
cmp
jp
leave
lods
sub
scas
xchg
mov
divl
mov
cmp
fdivl
leave
lods
mov
ret
outsb
je
pop
add
dec
cmpsl
jb
hlt
and
mov
ds
in
ss
sub
insb
xor
fnstenv
xor
dec
adc
mov
xchg
icebp
inc
mov
sbb
out
loope
jne
jl
push
sbb
shlb
divl
subb
dec
test
push
sbb
inc
xchg
dec
pushf
push
xchg
in
fisubs
fcoms
xor
cmp
sti
lea
xchg
dec
dec
mov
iret
sbb
xor
sbb
jns
in
sbb
rcrl
lods
adc
loopne
xorps
movb
inc
stos
outsb
shrl
and
pop
adc
add
xorb
ljmp
cs
xchg
adc
call
hlt
or
ror
cmp
lock
addr16
ret
mov
adc
xchg
in
jae
mov
sub
xchg
sub
or
mov
xchg
jmp
pop
daa
iret
xor
cli
jp
pop
test
in
adc
jo
adc
push
outsb
dec
je
mov
xchg
test
and
add
add
pop
push
lea
imul
xchg
xchg
popa
inc
fdivl
adc
sub
mov
push
iret
cmp
sbb
mov
daa
les
int
ffree
aaa
les
xlat
mov
xor
es
push
xchg
lods
push
mov
arpl
or
lahf
mulb
cmp
stos
push
jne
push
sbb
test
jg
jb
mov
jb
ror
mov
add
cli
mov
or
test
mov
inc
movl
int
shlb
ffree
pop
ret
ret
xchg
fsubrs
leave
mov
mov
aas
shlb
sbb
mov
dec
mov
pop
sub
loope
dec
notl
inc
jg
or
js
int3
push
notl
sub
mov
adc
ja
pop
rolb
fs
adc
pop
lds
jle
pushf
and
push
sbb
xor
test
loope
or
add
xchg
shll
or
scas
leave
cmp
inc
fnsave
aad
cmp
xor
fldt
rclb
repz
sbb
call
shr
test
daa
mov
in
mov
adc
xchg
cmp
adc
push
mov
push
xchg
mov
add
lods
iret
fs
es
xchg
fisubrl
xorb
adc
cmp
xor
mov
dec
movsb
ss
jne
dec
js
push
and
lea
push
lods
repz
jae
xor
data16
mov
rclb
shl
jne
sub
mov
aad
daa
fbstp
movsl
pop
mov
xor
scas
dec
xchg
or
test
stos
ret
lcall
in
xor
orb
push
adc
mov
sbb
inc
sbb
and
inc
pushl
push
fiadds
outsl
ret
push
or
in
or
and
pop
negl
and
mov
out
fisubrs
pop
mov
inc
mov
movl
outsl
movsb
jne
sarl
arpl
pusha
mov
jo
pop
pop
adc
mov
inc
push
jp
add
sahf
fdivp
test
or
mov
and
out
mov
shll
mov
pop
rcr
jmp
mov
push
stos
test
or
pop
ret
repnz
pop
sub
cmp
adc
sub
xor
les
std
pop
jnp
sbb
pop
cs
xor
mov
cli
sub
push
fcoms
adc
pop
jns
dec
ret
insl
mov
mov
sti
push
push
lret
sbb
movsl
jnp
bound
je
jo
mov
sbb
xchg
mov
arpl
cmp
je
enter
shrl
out
loop
cltd
into
mov
ret
fsubrs
sub
in
xlat
add
dec
add
in
lahf
dec
pop
or
insb
clc
shrb
out
fdivp
mov
mov
gs
test
pop
sti
ja
xlat
testb
nop
jns
push
push
cmpsl
xchg
popa
inc
push
push
adc
and
lahf
adc
repz
cli
leave
mov
insb
loopne
inc
and
pop
and
subb
test
aas
loopne
in
pop
lods
int3
or
sub
pop
lret
jnp
leave
adc
cwtl
lcall
or
lret
mov
test
loopne
and
cmp
lea
mov
test
orl
jg
out
ljmp
push
aam
ret
ss
fucomi
or
lcall
gs
adc
fdivs
sub
ficoms
dec
adc
pop
add
mov
out
icebp
and
xchg
test
jecxz
push
je
gs
es
cmp
clc
add
orl
ja
daa
sub
push
test
and
jno
or
push
cmpsb
fcomp
adc
add
ret
sub
bound
imul
ds
sar
xlat
add
sbb
lea
leave
stc
mov
leave
push
dec
in
sbb
in
xor
push
sbb
dec
mov
es
mov
dec
outsb
sahf
fldt
mov
shrl
and
sub
in
jge
dec
xorb
mov
push
rcll
test
test
sbbl
cmp
mov
pop
push
shl
add
in
andb
xor
push
jno
out
imul
jnp
sub
jle
movsb
mov
or
out
xor
sahf
repnz
cmpsl
push
add
pop
mov
sub
int3
adc
mov
xchg
stos
test
stos
push
and
and
cmp
nop
inc
xor
lret
arpl
nop
and
push
jl
jae
xor
rcl
xchg
sbb
enter
mov
inc
nop
aad
dec
ja
xchg
jmp
adc
mov
xor
mov
jne
rcl
adc
leave
out
mov
rcrl
pop
insb
aad
das
loopne
jge
jne
ja
and
cwtl
dec
dec
mov
jle
jmp
xchg
inc
sbb
add
dec
pop
inc
sub
iret
xlat
xor
and
out
cmpl
enter
imul
dec
push
rcl
into
ds
mov
repnz
es
cltd
fpatan
xchg
sti
stos
mov
lcall
cmp
mov
lret
je
xor
mov
jle
jmp
xchg
outsl
ss
hlt
cmpsb
iret
pop
sbb
xchg
out
mov
mov
mov
mov
iret
fnstenv
mov
clc
cmp
xchg
out
fmull
mov
int
insb
aam
jecxz
lret
cmp
pop
aas
clc
mov
jge
orl
mov
xchg
xor
loop
or
call
ss
inc
push
sub
lock
jo
sbb
and
xor
ljmp
in
mov
cld
inc
or
and
adc
inc
pop
cmp
mov
dec
iret
jnp
and
cmc
xor
inc
std
sti
sbb
jmp
mov
mov
insb
dec
clc
loope
jmp
or
stos
push
and
push
xlat
insl
push
icebp
xchg
call
jmp
pop
cltd
movsl
les
rclb
cld
inc
and
test
cmp
int
lahf
sar
mov
pop
sub
sti
pop
and
add
mov
es
xchg
imul
cmpsl
loop
xchg
jp
xchg
cmp
movsb
adc
lahf
sahf
or
lret
xor
xchg
shlb
xor
push
shlb
inc
sahf
mov
jmp
lock
push
movsb
pop
dec
xchg
add
ljmp
out
rol
stos
sub
add
inc
fidivrl
add
push
sub
fcomip
int
add
mov
mov
inc
jge
sub
clc
or
sbb
cmc
popa
pop
adc
adc
push
test
lret
shrb
mov
lods
outsl
jp
sub
outsl
es
dec
push
lods
pop
pop
pop
not
mov
jp
xchg
cmp
dec
sti
push
xor
aad
stos
imul
mov
daa
xchg
nop
mov
pop
cmp
shr
lods
pop
hlt
push
push
jne
ss
sbb
mov
dec
in
inc
push
out
pusha
outsl
sub
shll
cwtl
idivl
or
cmp
cmp
or
add
stos
adc
jb
add
mov
push
int3
sub
hlt
lds
icebp
lock
xlat
aas
mov
push
mov
push
jne
in
add
shrb
fwait
orb
jb
pop
addr16
out
xor
inc
sub
jp
insb
movsl
mov
mov
sub
sub
cmc
fidivs
cmp
sbb
pop
push
loope
inc
inc
jb
cmp
jmp
adc
fs
mov
push
add
or
jge,pt
and
arpl
insl
push
mov
mov
fsts
es
or
add
sbb
into
movsl
popf
pop
sahf
xchg
xor
repz
out
mov
dec
mov
negl
lods
jbe
rolb
mov
and
adc
mov
push
stos
mov
jmp
inc
jnp
sub
inc
pop
hlt
sbb
mov
adc
xchg
imul
lret
sbb
imul
cmp
call
movl
mov
or
xor
xchg
les
popf
pop
cli
sub
cmp
movsl
ret
roll
or
xchg
pushf
jecxz
dec
lcall
xor
lea
mov
lahf
fdivrs
mov
sti
jecxz
loop
imul
lods
sbb
mov
call
xor
xor
arpl
push
mov
jge
bound
sbb
xchg
push
and
inc
outsl
notb
xchg
sbb
mov
in
xchg
sub
scas
mov
push
cmpsb
mov
and
into
fidivrs
cld
cmp
leave
outsl
mov
in
sbb
jae
or
out
ficoml
pop
insl
pop
mov
pop
repz
shl
fsubl
movsl
dec
mov
dec
cmp
lock
adc
test
icebp
lcall
inc
nop
cmp
push
in
dec
imul
mov
lea
add
mov
out
in
pop
pop
dec
loope
adc
pop
cmpsl
loope
inc
jecxz
jmp
push
adc
and
push
adc
cltd
inc
and
xor
or
lock
mov
xchg
lahf
aas
or
outsb
and
pop
sbb
mov
rol
or
sub
push
fstpl
jp
scas
aad
xor
rcll
dec
xor
xchg
xor
cs
cltd
xchg
inc
filds
js
jno
sarb
ror
outsl
test
cmp
lcall
xor
mov
insb
test
or
sahf
fwait
pop
lods
pop
repnz
sub
and
mov
das
cltd
mov
jle
pushf
insl
pop
repnz
aad
cli
adc
pop
scas
test
inc
push
mov
fcoml
ja
add
pop
jns
pop
lret
jnp
lret
jb
cld
inc
into
ret
add
mov
ftst
imulb
mov
dec
jno
inc
cmc
mov
outsb
pop
xchg
inc
jp
cmp
hlt
fwait
jecxz
add
pop
adc
fcoml
ja
data16
jb
and
jle
lods
pushf
adcb
mov
bound
movsb
pop
push
dec
mov
cmpsl
fisubrs
inc
mov
xchg
loopne
jle
jne
in
pop
insl
pop
xor
adc
push
in
out
fidivrl
pop
insl
lcall
pop
xlat
das
in
add
fucomi
jle
mov
fisttpll
into
mov
ds
xchg
js
hlt
int
fstpl
cwtd
push
mov
fs
fcompl
popaw
add
mov
or
outsb
dec
mov
enter
js
loopne
in
jno
push
mov
fists
loopne
jbe
lcall
fadds
int3
push
mov
ds
add
inc
push
xor
pushf
dec
push
out
lock
lcall
dec
adc
inc
push
call
cs
leave
jge
repnz
ficoml
out
xchg
jge
lret
dec
pop
lock
or
xor
inc
inc
enter
fcompl
add
xor
push
push
mov
mov
testb
xor
or
push
cli
out
nop
pop
ljmp
aad
sbb
cmpl
clc
jle
jnp
inc
adc
jno
push
mov
jns
flds
sub
fistpl
or
cmpsb
mov
dec
bound
inc
popa
inc
sbb
rcrl
stos
stos
loopne
pop
ja
dec
jmp
or
aaa
inc
movsb
lahf
jno
ret
push
jge,pn
pop
and
pop
mov
xchg
sub
call
or
xor
mov
ja
lahf
aaa
push
cli
or
push
ljmp
out
pop
cmp
xchg
dec
into
lods
mov
add
or
aam
sbb
ss
jge
jnp
aaa
loope
loopne
cwtl
ret
pop
or
lcall
dec
outsl
jns
cmp
cmp
jge
mov
cbtw
mov
inc
gs
sub
bound
pop
fwait
lahf
and
imul
jno
loop
insb
dec
xchg
clc
movsb
int
mov
outsb
out
sbb
and
popf
push
mov
cltd
out
mov
mov
cs
jns,pt
imul
cmp
pop
fldcw
jmp
mov
cs
jns,pt
imul
cmp
pop
fldcw
jmp
mov
cs
aas
jns
imul
cmp
pop
fldcw
jmp
jle
dec
test
xchg
rorl
imul
mov
mov
in
inc
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
or
sbb
sub
cmp
inc
sbb
inc
sbb
or
leave
mov
test
or
sbb
sub
cmp
dec
cmp
sbb
sti
pushf
jmp
int3
fcmovu
jns
cltd
cld
mov
sbb
sub
cmp
dec
and
add
sbb
leave
int3
clc
scas
scas
iret
xchg
mov
jge
sub
push
ret
or
xchg
mov
cmpsb
fnstsw
xchg
add
mov
sub
rol
mov
mov
xlat
nop
xchg
xchg
xorl
leave
inc
leave
fwait
cmp
cld
mov
xchg
inc
push
jne
sbb
sub
jl
sub
push
test
or
cmp
pop
cmp
sbb
idivb
push
dec
cmp
pushf
ljmp
pop
inc
cltd
mov
sbb
dec
testl
and
and
cltd
cld
jbe
jbe
mov
pop
ret
andb
enter
test
clc
fscale
pop
int3
fldcw
ljmp
iret
jns
jle
dec
cmp
dec
cmp
add
loope
icebp
lods
sarb
cltd
cld
in
imul
dec
sub
inc
add
fs
nop
stc
xchg
fisttps
cli
mov
push
dec
sub
sbb
jge
incb
mov
movb
sbb
push
pop
cmp
push
pop
sub
or
mov
test
or
sbb
sub
cmp
dec
cmp
sbb
stc
pushf
jmp
int3
mov
cld
mov
jge
mov
inc
pop
pushf
add
mov
cmpsb
push
lods
insl
pushl
jbe
lcall
pop
and
dec
fwait
pop
push
js
cmp
adc
pusha
xorl
sti
ja
jmp
inc
movsl
push
push
enterw
clc
xchg
stos
cmpb
xchg
and
add
je
movsb
inc
test
inc
icebp
mov
sbb
aaa
sbb
xchg
xchg
in
insl
mov
push
mov
sti
out
push
xor
push
mov
cltd
or
fimuls
inc
je
jmp
jg
ja
xor
add
je
cli
arpl
mov
test
adc
push
in
xor
stc
pop
push
push
mov
pop
mov
sub
loopne
ss
sbb
test
or
popf
lds
push
aam
insb
mov
mov
arpl
mov
pop
lods
pop
pushl
movsb
pusha
cmp
lahf
lea
insb
pop
or
icebp
aam
push
ret
sbbl
test
mov
push
sbb
insb
mov
addr16
in
push
lret
addr16
cmpl
dec
addl
dec
ret
js
xchg
sti
lea
arpl
xlat
aad
jne
sbbl
outsb
fistps
sar
lods
movsb
dec
add
outsb
je
sub
rcl
dec
insb
inc
lods
or
dec
push
cvtps2pi
push
add
test
mov
ficomps
mov
pushf
in
nop
mov
or
add
loopne
scas
pop
imul
and
popf
xchg
jno
push
xor
xchg
add
hlt
jmp
xor
push
outsl
mov
test
lcall
mov
dec
repz
or
fs
bound
pop
pushf
lahf
inc
jmp
mov
mov
jno
dec
push
xchg
adc
sbb
push
lea
lock
cmp
idivb
ret
mov
xor
repz
fsubrl
cwtl
test
dec
jbe
sub
ja
fildll
mov
loop
stos
sbb
xor
in
pop
repz
ljmp
in
mov
jnp
mov
pop
cmpsl
mov
lret
mov
mov
lock
adc
xacquire
sub
dec
lds
jno
dec
cmp
into
adc
sti
les
aaa
mov
mov
inc
cmp
addr16
shl
jmp
push
jae
jnp
and
push
inc
subb
push
xchg
xchg
pusha
js
cmp
and
imull
stos
aam
sbb
cltd
jecxz
inc
cli
adc
inc
pushf
subl
rol
push
inc
and
lods
pop
xchg
repz
mov
sub
inc
mov
push
mov
frstor
jo
test
js
xorl
bound
xlat
inc
xor
sbb
jns
and
adc
or
lock
sub
mov
pop
pushf
nop
xor
das
iret
enter
xchg
pushf
push
shlb
lock
add
call
sahf
fsubrl
arpl
adc
sahf
data16
inc
pop
mov
out
loopnew
outsb
xchg
xchg
mov
repz
adc
cmp
mov
xchg
add
mov
jge
mov
out
dec
loope
cltd
notb
add
jge
bound
mov
imul
push
pop
loopne
into
ret
pushf
fmull
jnp
xchg
mov
pop
pop
fs
push
jns
push
xchg
add
add
jle
pop
das
lret
cwtl
loopne
mov
arpl
sbbl
dec
mov
stc
mov
hlt
mov
int
sub
and
and
add
mov
mov
xchg
pop
repnz
fstpl
in
jb
sub
xor
and
popf
and
push
push
test
es
push
icebp
xchg
enter
movsb
cmp
adc
cmp
jae
inc
adc
add
mov
jmp
inc
cmp
out
fwait
mov
stos
pop
imul
jecxz
out
mov
push
mov
iret
fcompl
xor
scas
sub
hlt
pop
xor
inc
pop
push
lret
pop
ds
mov
mulb
fwait
push
cli
jmp
in
inc
mov
push
adc
and
jns
jmp
cmpsl
cmp
xor
arpl
bnd
xchg
movsl
sub
ja
mov
push
fisubrl
mov
fadd
cmp
insb
sub
mov
pop
mov
daa
sub
insl
sub
pop
in
fistl
jno
stc
cmpsl
bound
mov
dec
out
adc
jne
jbe
xchg
mov
or
insb
stos
lock
push
inc
dec
fs
mov
leave
es
mov
push
movsl
cli
mov
negb
jmp
cmpsb
adc
jb
stos
dec
xor
and
out
add
pop
sub
daa
mov
repnz
outsl
and
cmp
xor
addl
pop
pop
repnz
scas
xlat
cs
sbb
mov
insb
mov
fistpl
jns
inc
shll
add
lret
dec
pushf
add
push
sbb
test
mov
ffreep
es
or
jp
mov
outsl
inc
aaa
jbe
aas
repz
sub
repnz
push
lea
pop
and
imul
pop
hlt
push
test
xchg
out
dec
andb
dec
mov
and
iret
sub
push
test
push
and
aam
xorb
xorb
push
inc
inc
jl
mov
cmpsb
mov
aam
addb
in
push
imull
sbb
les
push
mov
stos
and
popf
pop
jp
push
pop
push
data16
cmp
sub
mov
push
outsl
outsb
repz
dec
mov
ljmp
inc
jp
hlt
pop
sbb
xchg
lret
cmp
in
inc
jg
imul
sub
dec
adc
sub
inc
loopne
mov
and
xorb
aad
push
and
ret
sbb
lahf
mov
iret
mov
aaa
sub
aas
adc
stc
std
cmpsb
iret
and
add
xchg
test
xor
cli
push
ljmp
mov
addr16
test
ss
cmp
call
xchg
out
loope
sbb
xor
pop
inc
push
cs
outsb
add
and
mov
add
loopne
sbb
nop
sub
scas
bound
shrl
out
jmp
xchg
adc
lock
push
xchg
inc
lcall
call
xor
fcoml
and
cs
sahf
mull
add
xchg
and
push
sub
enter
cmp
mov
ret
mov
pushf
add
leave
aas
in
sub
push
and
dec
xorb
int
loope
mov
test
mov
pop
mov
xor
sub
push
insb
ljmp
loop
shrb
inc
clc
xchg
pop
lahf
sbb
push
ret
sbb
xchg
fidivrs
sbb
outsl
mov
lods
jle
dec
mov
out
jb
out
outsb
test
fs
sbb
jb
test
aad
xor
test
pushf
pop
rcll
mov
cmpsb
mov
add
push
int
sahf
ds
push
xchg
call
or
sub
sub
inc
adc
outsl
xor
cmp
xor
lcall
push
cli
adcl
adc
sbb
in
test
xchg
loope
popa
jnp
outsl
mov
mov
fldl
add
adc
hlt
daa
ss
sub
pop
push
les
pop
pop
ljmp
lret
jmp
lret
lods
scas
mov
or
dec
out
imul
mov
pop
and
pop
orb
mov
arpl
xor
lcall
dec
rorl
cmp
adcl
cmp
mov
jmp
cmc
pop
and
pop
data16
lcall
imul
imul
cmc
sbb
add
enter
lret
dec
push
and
jg
mov
loop
iret
aad
shll
in
dec
jge
jne
arpl
sub
mov
stos
out
push
jl
jmp
jns
mov
pop
mov
mov
mov
ret
outsl
xor
jge
out
xchg
or
pop
test
loope
repnz
push
adc
movsb
adc
jno
cmpb
push
jmp
jmp
cld
es
ss
mov
subl
mov
rclb
xor
pusha
cli
xchg
mov
dec
push
dec
movsb
enter
std
lock
test
sub
outsb
jmp
inc
and
andl
lahf
xor
mov
xor
mov
inc
and
stos
jge
outsb
push
rep
xchg
repz
xor
dec
mov
popw
xchg
mov
push
add
cli
mov
and
outsl
shr
hlt
push
call
mov
dec
cmpsl
incl
arpl
sbb
loopne
mov
inc
xor
scas
out
inc
movsb
push
lret
outsb
decb
push
test
jnp
mov
xchg
and
repnz
enter
xchg
stos
and
out
out
mov
mov
pop
xchg
ss
fistl
push
push
subl
push
push
mov
in
fwait
push
aam
imul
mov
sub
enter
xchg
sar
xor
xchg
push
jecxz
sub
push
pop
xchg
mov
mov
clc
and
out
cwtl
movsl
aam
imul
ret
andb
shr
fidivl
sub
mov
lods
imull
add
pop
repnz
sahf
dec
pop
jo
xlat
js
jo
sub
pop
mov
and
xor
mov
outsl
push
movsb
jb
xchg
xor
mov
mov
repnz
ja
inc
sar
and
pop
jo
inc
pop
imul
jns
pop
repz
adc
dec
sti
call
mov
pop
push
sbb
pmuludq
outsb
pop
sub
adc
fcoms
xorl
xor
cmpsb
xor
xor
stc
scas
cwtl
mov
push
std
jmp
gs
and
push
out
dec
pusha
out
xchg
insb
mov
sbb
in
dec
add
mov
push
lds
push
xchg
jo
jns
inc
add
cmpsb
mov
movq
loope
adc
and
fcmovnb
mov
jl
lret
fsubrs
mov
lock
dec
test
mov
int
insl
aaa
mov
push
cwtl
xor
jecxz
xor
xor
jb
xlat
rcrl
idivb
jnp
mov
jns
fimuls
icebp
inc
cmp
sahf
sbb
mov
lods
test
das
jae
fdivr
jle
out
addr16
les
dec
jbe
in
add
aad
push
adc
imul
sub
pop
loopne
jle
cwtl
nop
repnz
add
xchg
les
es
xchg
rorl
add
adc
nop
inc
jecxz
mov
mov
aad
bound
or
sbb
fldz
inc
inc
je
pop
cmp
test
je
cmp
add
jle
push
shrl
cmpxchg
aas
cmp
add
outsb
sbb
daa
call
fbld
sub
jmp
adc
xor
sbb
push
xor
stc
mov
jp
pop
sub
sbbl
sbb
arpl
mov
add
mov
cld
rcr
jno
imul
sbb
imul
das
lcall
in
inc
loop
cmp
inc
icebp
cmp
mov
push
lret
cmp
mov
pop
cmc
xchg
pop
insb
xchg
test
xchg
lea
xlat
fsubr
mov
lods
jge
in
in
dec
push
jb
data16
imul
sub
push
mov
push
mov
push
mov
clc
orl
std
xchg
sbb
mov
push
aam
in
mov
xor
outsl
pop
in
in
mov
movsl
std
clc
mov
inc
mov
inc
jp
js
inc
call
rclb
inc
push
pop
rorb
push
sbb
push
inc
je
mov
mov
fsubl
adc
and
dec
scas
jge
and
lahf
pop
fwait
mov
push
cmp
scas
sbb
outsl
in
sbb
and
push
in
enter
lret
add
mov
pop
lods
jbe
inc
xchg
adc
xlat
lret
mov
aaa
push
jg
mov
out
xchg
mov
xor
addr16
bound
scas
inc
mov
cmpsl
lea
or
xchg
xor
stc
mov
mov
out
add
pop
out
xchg
sub
jns
adc
int3
cmpsb
cli
pop
mov
dec
icebp
xor
pusha
push
jno
adc
fistps
gs
xor
ficoml
sub
negb
lods
jb
pop
jmp
mov
into
mov
sub
adc
add
mov
inc
jbe
daa
xchg
dec
xchg
out
in
adc
popf
out
adcl
sub
fnstcw
adc
and
jno
das
sub
rorl
xchg
movsb
lods
push
dec
stc
out
and
cli
jle
or
sti
scas
jmpw
mov
or
and
pushf
lcall
fisttps
xor
jns
call
jno
cmp
mov
sub
mov
addr16
push
hlt
jp
cwtl
data16
cli
pop
inc
sub
rcrb
test
dec
rolb
jns
movsl
adc
clc
jbe
xlat
mov
js
and
fwait
pop
orb
icebp
das
aam
push
movsb
xchg
jecxz
sub
pop
sub
inc
add
pushf
cmp
push
mov
dec
jle
jno
das
popl
or
lret
mov
jb
call
ret
inc
jo
popa
jge
adc
enter
adc
adc
jecxz
xchg
fnsave
mov
adc
xlat
imul
jae
mov
stos
nopl
dec
pushf
mov
mov
popa
stc
in
stos
add
jmp
xlat
cmc
add
dec
pop
jo
jge
mov
pop
inc
pop
shll
in
pop
fsubrl
mov
pop
add
aas
push
cwtl
addr16
or
push
scas
push
or
add
push
mov
push
cmpsl
jae
lret
and
in
pop
pop
sti
jmp
fisubs
mov
adc
cmp
sub
mov
int
fdivl
or
and
mov
dec
lret
cmp
push
xor
sbb
mov
add
and
hlt
inc
add
in
add
stc
and
xchg
mov
jb
mov
adc
les
ljmp
aam
cmp
mov
clc
xor
pop
int3
mov
cld
push
dec
clc
or
lea
jecxz
mov
imul
jmp
out
loope
adc
sahf
subl
cli
jb
xchg
rol
sub
xchg
inc
pusha
push
mov
xlat
push
mov
mov
loope
jp
jle
xchg
dec
dec
cmp
fpatan
pop
push
lret
or
std
adc
mov
inc
jle
mov
popa
jp
popf
fmulp
faddp
mov
pushf
lret
pop
bound
mov
push
bound
in
ss
sbb
jb
or
inc
sbb
stc
mov
or
fisubrs
insb
loopne
fsubrp
xchg
add
aaa
xlat
and
mov
js
loope
xchg
dec
out
ret
std
shrl
and
loopne
xlat
ror
pop
inc
push
push
movsb
dec
sbb
ds
mov
mov
push
push
pop
cmp
ficompl
mov
ljmp
add
mov
cmpsb
lods
xchg
xchg
out
jnp
sub
jnp
fistl
jno
mov
push
sbb
jno
jge
jnp
das
faddl
fnsave
xor
pop
dec
int
cmp
and
cmp
add
aaa
adc
sub
push
jb
sbb
mov
test
add
sbb
or
sbb
imul
cs
sub
daa
and
pop
cmp
jle
imul
push
inc
or
daa
lods
subb
push
pmaxsw
fwait
ljmp
inc
xor
push
sbb
cmp
inc
arpl
mov
or
lret
pop
xor
push
inc
popa
pop
fisubrs
or
jno
dec
sarb
or
pop
fadd
daa
adc
daa
mov
outsb
push
call
movsb
jnp
ljmp
pop
cli
pusha
mov
icebp
sti
sub
pop
aam
repnz
test
mov
fs
pop
in
pop
es
mov
ss
xor
daa
fldt
movsl
jecxz
das
sub
sub
adc
popa
in
or
ja
xchg
ror
push
dec
insb
lea
xchg
pop
fimuls
lds
fisubs
push
mov
inc
cmp
faddl
xchg
jge
test
push
mov
mov
loope
jl
fdivrs
xchg
popf
cmc
rorb
inc
loopne
dec
cs
inc
cmpsb
and
test
mov
clc
sbb
lahf
sub
shll
dec
cmp
inc
fiadds
mov
cmovb
xor
mov
jcxz
movsb
or
push
ret
outsl
lds
xor
cld
cmp
je
stos
add
cltd
xchg
pop
inc
push
cmpsl
cmp
pushf
jecxz
je
pop
pop
ds
fcomps
outsl
mov
sti
xor
xchg
rep
mov
in
lock
cmpsb
sarb
dec
pop
mov
shl
sub
pop
out
xor
fdivrs
frstor
insb
and
jne
lret
and
popa
jo
scas
test
ss
adc
lods
jae
es
pop
jmp
sub
push
mov
ds
int
push
cwtl
adc
dec
xchg
adc
jmp
sub
xorl
lods
xor
js
jl
sbb
jecxz
mov
pop
sahf
repz
ds
clc
imulb
jae
xchg
loop
cltd
addr16
adc
xchg
loop
movb
mov
push
xchg
cwtl
xchg
xchg
das
push
dec
scas
inc
rcll
jae
sbb
mov
and
inc
push
adc
into
cmp
sub
aas
adc
shl
rorb
ret
sub
jl
sub
mov
or
fwait
xor
cli
addl
and
xor
jno
xor
jo
add
xchg
jge
rcl
jecxz
pop
call
inc
jp
and
mov
lret
outsl
mov
imul
lret
mov
into
or
cmp
fdivrs
mov
add
push
ds
or
sub
xor
sub
call
push
dec
pop
stos
data16
mov
scas
outsl
cmovp
cmc
push
adc
ljmp
lcall
cs
cmp
jbe
mov
mov
inc
pop
rolb
dec
dec
lods
shl
sub
ss
inc
aas
or
and
sbb
jo
aam
or
jecxz
jb
mov
js
loope
leave
or
rclb
gs
adc
sub
arpl
jno
jne
loop
data16
cld
mov
outsl
clc
aam
cmpsb
lock
andb
jge
cltd
adc
dec
ja
cmp
sahf
jmp
pop
cwtl
pop
and
test
adc
cmp
pushf
cltd
fs
adc
adc
inc
adc
mov
bound
pushf
adc
and
push
add
mulb
in
xchg
cwtl
inc
xor
jo
xor
mov
std
jmp
ror
xchg
sbb
or
lret
pushf
mov
push
adc
mov
xchg
aaa
pop
pop
adc
mov
fisttpl
or
push
shl
cmpsb
sbb
in
mov
fstl
and
sti
push
mov
out
into
ds
in
test
shrb
push
in
adc
rcl
test
and
xor
dec
push
fcoml
mov
lods
aad
jge
push
or
shrb
bnd
or
xor
xor
mov
mov
mov
jmp
sbb
sub
xchg
js
adc
or
inc
mul
push
jg
fs
int
push
jmp
leave
fisubrs
jp
icebp
pop
jmp
aam
adc
lret
mov
mov
jp
in
hlt
shlb
sar
sbb
xor
adc
pop
mov
insb
das
ds
pop
out
ja
xchg
fidivs
int
lret
vpminsw
add
inc
out
sub
stos
sub
lods
xor
mov
inc
frstor
fidivs
sub
or
dec
jge
std
add
and
mov
in
jbe
jnp
push
cmp
cld
sbb
sub
sahf
scas
fistps
into
dec
movsb
addl
repz
add
ret
jl
cmp
in
addr16
outsb
lods
push
pop
mov
lret
pop
lret
lcall
or
jp
mov
shr
and
push
sub
pushf
mov
rcll
inc
push
push
icebp
testl
adc
mov
mov
dec
xchg
and
out
xchg
inc
mov
dec
dec
cmp
sbb
stc
pushf
jmp
int3
mov
cld
mov
sbb
sub
cmp
dec
cmp
sbb
stc
pushf
jmp
int3
mov
cld
mov
sbb
sub
cmp
dec
cmp
insb
sbb
stc
pushf
jmp
int3
mov
cld
mov
sbb
sub
cmp
dec
cmp
sbb
or
arpl
fnstcw
adc
add
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
es
cmpsb
or
cmp
imul
push
call
inc
mov
cmpsb
dec
xchg
js
push
cmp
push
fsubs
enter
call
push
mov
cmpsb
mov
sub
inc
xor
sbb
fsubs
jmp
cltd
arpl
jbe
sub
sbb
or
sub
or
sub
push
and
add
repnz
inc
int
jecxz
sub
testl
fnstenv
pop
mov
pop
xor
adc
hlt
insb
icebp
pop
enter
fnstenv
inc
stc
stc
push
enter
aad
add
pop
cmpsb
dec
mov
push
testb
ss
movsl
es
loopne
pop
pop
out
jmp
inc
inc
dec
aam
mov
lds
out
or
stc
aam
sti
push
lahf
inc
sbb
sbb
jmp
and
sbb
add
cs
add
leave
mov
cwtl
arpl
mov
push
push
inc
ret
cmpsb
push
negb
out
cmp
mov
push
cli
push
aam
movsb
data16
mov
loop
cli
adc
add
mov
mov
mov
add
sub
cmp
xor
jmp
or
add
dec
sbbb
mov
mov
cmp
fstpl
shrb
test
adc
add
push
out
cmp
sub
fsubs
enter
call
push
mov
cmpsb
dec
xchg
js
push
cmp
sub
fsubs
enter
call
push
mov
mov
xchg
je
inc
mov
cmpsl
mov
addr16
cmpsl
sbb
dec
mov
test
jns
sti
add
add
jo
out
add
dec
repnz
or
in
in
repz
add
and
mov
mov
sbb
aaa
dec
dec
cmpsl
add
pop
pusha
iret
lcall
xor
jle
je
sub
add
addr16
mov
in
xor
cs
or
and
repz
sub
push
test
test
jp
cmp
cmp
fs
and
sbb
fistpl
scas
test
shl
jne
dec
je
adc
adc
jne
mov
or
dec
cltd
push
adc
mov
mov
push
cwtl
inc
enter
pop
push
dec
stos
ljmp
sub
mov
mov
push
mov
fimuls
fbld
nop
rorl
jo
mov
cltd
loopne
push
std
loopne
in
push
sbb
cwtl
jae
push
lcall
jle
dec
mov
sbb
xlat
aad
cli
sub
mov
gs
xchg
ja
xchg
push
or
push
mov
cmp
xchg
loop
psubusw
and
shrl
push
test
push
mov
insl
jmp
stc
subb
xchg
mov
push
jle
or
xchg
and
push
mov
sbb
dec
jge
mov
arpl
test
rcrb
pop
lahf
mov
xchg
in
out
xchg
lcall
ljmp
xor
xor
sbb
xchg
jnp
push
sub
loop
movsl
pusha
xchg
cmpb
cmpb
inc
inc
pop
mov
lods
sbb
sub
lretw
fnstcw
jge
fs
pop
cwtl
mov
xor
in
sbb
imul
xor
xlat
sbbb
lret
inc
subl
movsb
dec
xchg
add
iret
test
mov
jmp
cmp
test
nop
jl
negb
stos
addr16
call
sbb
lods
je
jne
push
cmpsb
xchg
addr16
push
add
mov
mov
es
lret
xchg
mov
lret
sbb
sub
jne
add
jmp
mov
inc
adc
xchg
ljmp
push
cld
mov
mov
xchg
adc
adc
and
mov
sbb
mov
jno
push
xchg
repnz
cmp
push
sub
jl
and
xor
adc
inc
add
xor
xchg
push
addr16
mov
adcl
test
mov
push
lds
cmpsl
mov
push
add
in
rcrb
fs
adcl
iret
lcall
sub
fnstenv
jle
jl
inc
dec
fadds
cmp
xchg
shl
aaa
sbb
push
pop
fisubrs
dec
lret
pop
fs
out
xchg
call
loop
es
push
lds
data16
pop
lods
scas
imul
pop
lods
loop
scas
inc
jp
inc
insl
imul
daa
fs
push
and
inc
sub
in
fs
pop
mov
adc
pextrw
xchg
aaa
movsl
mov
or
cmp
outsl
sub
or
or
test
ljmp
cmpsb
cmp
dec
pop
cmp
fstpl
js
stos
bound
push
add
or
jg
jmp
or
testb
pushl
in
fidivrs
push
xchg
dec
pusha
jle
clc
into
cmp
js
faddl
lret
cmp
jmp
xchg
mul
push
cmp
xor
jle
out
scas
ss
mov
into
loope
cmp
mov
rorb
sti
pop
xchg
int
cmp
out
repnz
sub
mov
inc
pop
fisttps
pop
jbe
mov
pop
insl
comiss
inc
push
jp
push
mov
adc
fs
test
repz
arpl
mov
stos
push
cli
daa
repz
inc
xor
mov
jo
push
inc
sub
ret
sbb
jbe
xchg
mov
sbb
mov
jns
fucomip
sbb
icebp
pop
pop
movsb
cli
test
sub
jmp
mov
cmpsl
push
xor
lods
xchg
xor
ret
mov
sarl
inc
or
xchg
sbb
cmc
mov
or
lods
cli
fnstenv
and
xor
scas
adc
sub
hlt
mov
ja
jns
les
push
xchg
cmpsb
cmpsl
xchg
pop
dec
cli
lds
daa
ljmp
iret
mov
push
jecxz
mov
jno
sahf
sbb
mov
pop
inc
sub
cwtl
nop
jb
fadds
notb
imul
stc
leave
fstpt
in
xchg
aad
pop
sbbl
dec
pop
je
xlat
enterw
int
xchg
popa
add
adc
inc
mov
jo
xor
mov
imul
bound
roll
in
sbb
sub
add
daa
xor
test
stos
cmovns
das
sbb
push
out
xchg
and
xchg
mov
sub
or
repnz
fs
cltd
fsubrs
jnp
clc
xor
mov
xlat
leave
ljmp
cli
mov
mov
in
cwtl
testl
pop
lcall
ds
inc
push
xchg
pop
lock
fstpt
ja
mov
mov
in
cwtl
cmp
dec
aad
daa
or
in
push
aad
push
loopne
fists
icebp
aad
jg
adc
dec
cltd
mov
mov
cmp
jg
into
push
cmp
xor
adc
jp
push
sbb
aam
mov
and
insl
cmp
push
sub
push
cmp
orl
xchg
ret
repz
pushf
xor
rorb
or
sub
fists
push
add
sar
cs
mov
jl
sbb
push
sbb
divb
mov
push
lds
inc
fdivs
stos
pop
mov
stc
movsl
push
stc
leave
mov
sub
mov
sbb
outsb
mov
cmpb
push
adc
repnz
pop
out
jno
mov
add
mov
daa
pop
test
xchg
test
insl
and
ss
mov
iret
xchg
ret
xor
gs
imul
stos
test
cmp
xlat
xor
sbb
or
push
mov
adc
test
repz
out
dec
adc
and
dec
bound
mov
cs
or
cmpsl
jecxz
mov
cmpsl
ret
push
pop
sarb
push
pop
in
fdivrs
jno
shrl
outsb
lock
rorl
inc
sub
sub
jle
or
pusha
xchg
out
and
cmc
push
cmp
dec
or
add
adc
loopne
xor
mov
inc
sub
test
enter
dec
test
imul
mov
and
dec
mov
js
call
inc
inc
fcmove
or
pop
fsubp
xchg
repnz
test
test
adc
outsb
xor
xchg
sbb
ret
xor
mov
mov
and
loopne
jge
clc
hlt
adc
xchg
out
inc
and
imul
in
fmull
jp
adc
cwtl
hlt
outsl
pop
cmp
pop
adc
add
sbb
subl
pop
push
fisubs
adc
or
mov
dec
mov
adc
add
jbe
sbb
add
mov
std
inc
shl
mov
bound
popl
out
jle
dec
test
mov
mov
xchg
gs
fsubrs
xchg
xchg
sub
fidivl
mov
call
mov
ret
inc
sbb
stos
dec
and
inc
adc
dec
pop
js
mov
lahf
dec
test
inc
js
add
push
sbb
adc
sbb
jne
fidivrl
out
push
filds
or
jecxz
xor
hlt
adc
ja
mov
pop
lret
fistpll
push
mov
pop
mov
stos
lods
pop
cltd
push
sbb
not
insl
push
xchg
icebp
in
sub
sub
xor
add
xchg
lods
pop
mov
bound
or
or
leave
pop
les
bound
cmpsb
dec
aas
mov
xorl
out
push
icebp
aad
out
outsl
loop
add
cmp
pop
sub
sub
push
lea
test
fnstenv
or
adc
lea
cmpl
push
jle
stos
cmp
lret
hlt
cmpsb
mov
outsb
add
pushf
out
lods
push
aas
jle
mov
lahf
fdivrs
in
cwtl
add
dec
stos
cmc
lahf
sti
enter
pop
aam
push
cmp
push
out
cmpsb
cmp
and
in
movsl
sti
sub
jne
sbb
movsb
fyl2xp1
cld
int
cmp
das
xchg
es
insb
cltd
jbe
fcomps
fbld
push
rcrb
stc
jno
enter
enter
sub
push
sar
and
test
mov
dec
nop
jns
enter
movl
ds
add
pop
test
jge
sub
mov
cmc
push
mov
shrb
es
adc
mov
jbe
mov
cmc
shlb
sbbl
sbb
inc
mov
sbbl
test
pop
lcall
or
stos
fdivl
ret
adc
push
es
in
incl
hlt
xlat
jp
shll
lret
pusha
cmp
inc
push
lahf
and
sub
pop
xor
imull
mov
or
sub
sub
xchg
xor
fcoms
std
cli
int3
or
aam
inc
pop
sbb
cs
ljmp
ss
cmpsb
inc
or
js
outsb
fisubrs
in
ljmp
aas
int3
sbb
mov
push
jecxz
testl
outsl
cli
cmpsl
ljmp
or
adc
or
pop
pop
jae
cltd
lods
sbb
xchg
daa
enter
mov
imul
mov
out
push
sti
inc
push
lods
imul
mov
jg
mov
and
push
das
fdivrs
xor
icebp
call
out
jle
stos
cmp
insb
sub
pop
add
jle
in
xlat
and
lret
or
sarl
pop
and
cmp
and
mov
add
jge
cmp
addl
push
ror
xor
xchg
mov
xchg
ja
xorb
lods
in
dec
xor
movsb
mov
jle
es
xchg
pminub
popa
mov
jnp
fcomps
movsl
cmp
add
adc
and
xor
and
and
jle
adc
fld
add
mov
bound
fmull
cmp
cmc
fcomps
lods
stc
pop
sbb
icebp
call
pop
push
dec
addr16
mov
pushf
pushl
mov
mov
lock
out
insl
sub
mov
test
mov
pop
fisubrl
in
test
imul
xchg
sub
fdivs
jge
mov
inc
push
lock
jp
lds
loopne
fwait
aam
push
bound
inc
adc
and
lret
jmp
icebp
cmp
lcall
push
inc
xorl
repnz
cmpsb
jp
mov
xor
and
icebp
cs
ljmp
nop
mov
imul
lock
jg
mov
mov
mov
mov
iret
leave
stos
in
pcmpeqw
and
scas
push
push
sbb
add
mov
lea
ds
addr16
fdivr
test
jge
push
add
sub
pop
sub
adc
add
jecxz
pop
aad
cmp
push
jecxz
and
mov
or
mov
pusha
loop
cltd
push
mov
enter
and
out
shlb
call
xlat
dec
loope
pop
mov
push
outsl
cmp
push
popa
jle
sub
sbb
jp
outsl
cwtl
push
ss
negl
aas
arpl
jae
icebp
xor
and
repnz
outsl
int
icebp
add
xor
in
repnz
push
pop
mov
mov
jle
pop
in
jo
ret
mov
mov
mov
mov
mov
rcll
or
mov
stos
je
popf
mov
cmp
xchg
lcall
imul
sub
inc
cli
jbe
out
mov
fnstsw
out
xor
call
bound
add
add
dec
icebp
or
daa
roll
movsb
decl
or
mov
je
push
stos
fs
pop
add
pop
push
add
adc
push
mov
mov
inc
shlb
adc
cmc
jno
xor
mov
pushf
call
pop
insb
ds
mov
test
aas
out
dec
or
dec
sbb
add
mov
ret
dec
test
cmp
or
loop
in
lea
pop
sbb
adc
lret
stos
and
stos
xchg
shl
hlt
push
stc
fs
xchg
ds
subl
icebp
rorb
arpl
cld
fs
xchg
fstl
or
sub
push
cmp
xchg
cwtl
push
popf
pop
loope
mov
test
inc
dec
rcrb
or
decb
daa
rorb
fadds
repz
lods
ss
cmpsb
push
shrb
xchg
xchg
in
xor
inc
test
cmp
xor
dec
out
cld
fsts
in
mov
push
popa
clc
cltd
jle
jne
mov
fcomip
xor
jae
stc
dec
jle
dec
push
clc
jno
dec
mov
shrl
jmp
xchg
jb
out
mov
add
into
jns
mov
fs
aaa
push
mov
sub
mov
fsts
scas
scas
movsb
xor
insl
mov
mov
scas
outsb
stos
dec
push
jecxz
cmc
mov
js
pusha
cmpsb
and
jb
sub
add
fmulp
mull
jle
iret
lret
fs
imul
std
icebp
inc
mov
adc
ret
out
mov
jbe,pn
fistl
jl
movsl
mull
xchg
or
adc
clc
insl
ficompl
and
mov
cmpb
add
jbe
hlt
push
mov
dec
xor
add
dec
ret
xchg
xchg
or
dec
imul
xor
jp
cmp
addr16
ret
jmp
fldl
xchg
xlat
pop
pop
xor
fisubrs
sub
jno
js
hlt
mov
jl
shl
and
pusha
jp
pop
xchg
fisubs
ds
fwait
or
shlb
arpl
out
fs
mov
inc
xchg
inc
mov
ja
xchg
repnz
xchg
sub
pop
lret
loope
cmp
jmp
hlt
int3
push
or
test
dec
xchg
dec
out
leave
jecxz
sahf
lret
outsb
cmpsl
loop
push
cmp
jb
out
adc
mov
in
cmp
or
mov
sahf
rorl
or
xchg
int
lcall
ret
fsubr
test
dec
mov
ljmp
out
mov
or
push
fiaddl
mov
fcomps
mov
sarl
pop
or
out
daa
mov
mov
sub
pushf
outsb
aad
mov
pop
pop
xor
lcall
and
scas
pop
pop
push
sarl
cmpsl
es
fsubs
xor
into
jno
add
lea
mov
xor
cltd
sbb
push
push
xor
ss
adc
ss
lods
jne
dec
std
push
aad
pop
xchg
iret
roll
inc
mov
icebp
adc
jo
ds
hlt
rorb
aaa
add
mov
movsl
ror
imul
pop
daa
pop
ret
mov
xchg
mov
test
mov
das
adc
jle
insb
cltd
lods
xchg
xchg
iret
mov
es
dec
cmp
in
stos
xchg
cmp
mov
aad
cwtl
pop
arpl
hlt
push
adc
add
dec
dec
add
ljmp
test
je
xor
sbb
ds
jg
arpl
lcall
aad
subl
jns
cltd
xor
mov
es
subl
xor
and
xchg
or
in
push
cmp
xor
lret
xchg
je
sub
shll
loop
add
fs
add
mov
xchg
or
fnstenv
neg
gs
dec
repz
xor
hlt
scas
add
sbb
data16
push
jo
push
bound
in
xchg
adc
push
jl
xchg
jns
dec
movsb
and
sarb
add
jbe
or
sbb
add
dec
lahf
out
xchg
adc
popa
jbe
addr16
xor
sahf
lea
sub
cmp
sbb
and
ja
mov
pop
add
jge
jo
pusha
pop
aas
jmp
push
aaa
sbb
xor
fwait
xchg
dec
add
sub
daa
insl
ficomps
push
mov
xor
and
cmp
cmp
push
dec
or
pop
jp
jne
cmove
clc
ljmp
sbb
cmp
shrb
sahf
leave
jne
xor
mov
lock
popa
mov
fidivl
inc
or
cmp
mov
push
scas
les
mov
add
mov
xlat
xor
nop
pop
sub
cmp
pop
and
into
pop
pop
push
xchg
clc
movsb
js
test
imul
hlt
sahf
aad
mov
push
xlat
loopne
divl
push
push
sub
cmp
out
fucom
and
pop
shl
add
xor
or
pop
rolb
andb
mov
jl
lret
imul
mov
stc
mov
mov
pop
lahf
inc
gs
mov
addr16
xchg
mov
sahf
insb
call
sub
popf
push
pop
mov
cltd
aad
shrb
pushf
arpl
jb
lods
call
pop
adc
loope
stos
xchg
cmp
clc
cwtl
add
fnsave
mov
into
sub
mov
sub
sbb
inc
mov
push
sbb
xchg
mov
sub
outsl
sub
inc
or
adc
inc
out
sti
test
insb
xchg
gs
inc
cltd
enter
xchg
mov
bound
push
aam
iret
shlb
or
adc
or
jns
mov
sub
xor
jbe
jno
jnp
int
pop
push
imul
out
push
insl
jo
popa
das
gs
test
scas
test
push
aam
sbb
je
cld
jno
add
jp
cltd
mov
stc
fsubrs
movsl
mov
fadds
in
les
fucom
or
bound
stos
add
sub
imul
pop
fadds
add
jns
mov
dec
cmpsl
cmp
adc
movsb
in
push
rolb
bound
pop
loope
push
fldcw
push
fldenv
movsl
adc
mov
popa
das
mov
sub
push
mov
mov
lcall
dec
outsl
push
mov
clc
xchg
mov
scas
iret
mov
int
shl
sub
imul
cmp
int3
insb
add
pop
jnp
pop
xchg
sub
push
cmp
jo
xchg
push
into
pop
nop
out
movsb
hlt
ret
push
cmp
sti
je
xorl
out
ljmp
jo
cmp
fwait
sub
inc
sbb
pop
inc
lods
inc
hlt
push
jg
add
sbb
mov
jge
inc
inc
jg
adc
pop
pushf
mov
dec
inc
into
jnp
xchg
xchg
adc
dec
bound
shlb
or
push
mov
pop
jae
pop
je
mov
adc
mov
jae
insl
push
mov
sbb
cmp
sahf
jl
pop
jbe
sub
icebp
loopne
test
sub
sub
gs
test
dec
in
stc
inc
jecxz
adc
lret
popw
test
dec
xor
fbstp
xor
cltd
pushf
jg
int
fiadds
icebp
inc
sub
cmc
sub
dec
arpl
adcl
jae
jns
jp
es
repz
dec
lea
sub
int
dec
and
fbstp
mov
push
inc
mulb
subl
aas
repnz
es
incl
jl
or
sbb
xorl
rol
pushf
pop
inc
aaa
out
mov
or
mov
lea
pop
and
loopne
xchg
pop
inc
add
mov
repz
jmp
lea
mov
int
mov
fdiv
fsubrl
mov
or
arpl
lret
cltd
pop
mov
pop
call
imul
cmpsl
jnp
inc
push
gs
test
shl
xchg
negl
lock
movsl
jno
push
jl
movsl
sbb
out
jle
mov
pusha
cld
sbb
sbb
lods
and
cmc
jo
pop
adc
mov
cmpsl
dec
sbb
pop
sbb
and
add
and
lods
out
fstpl
jge
add
pop
call
dec
mov
sbb
or
cmp
sub
fsubs
enter
call
push
mov
cmpsb
dec
xchg
js
push
cmp
sub
fsubs
enter
call
push
mov
cmpsb
inc
xchg
pusha
xchg
out
cmp
sub
fldenv
int3
push
clc
push
loope
pushf
data16
inc
dec
mov
cmpsl
lods
xchg
pushf
xchg
negb
out
mov
bound
out
lock
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
