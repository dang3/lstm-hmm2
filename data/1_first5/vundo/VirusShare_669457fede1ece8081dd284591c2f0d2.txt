xor
and
or
mov
jmp
push
push
mov
jmp
shr
ror
rol
mov
push
mov
mov
movl
movl
call
lea
addl
jmp
add
add
push
add
sub
mov
jmp
call
push
jmp
dec
jmp
call
push
dec
push
addl
push
jmp
jmp
push
addl
call
push
jmp
call
int3
ret
push
subl
call
mov
mov
mov
jmp
cmpl
jne
cmpb
jmp
bound
inc
add
jmp
mov
add
loope
jle
add
mov
mov
push
lea
sub
and
shl
mov
sub
test
jne
add
ror
shr
add
mov
jmp
mov
jne
xor
jmp
jne
nop
nop
mov
add
sub
add
dec
mov
nop
jmp
call
ret
add
add
add
sub
dec
or
mov
or
mov
mov
xor
mov
add
add
jmp
out
shrb
jmp
call
call
ret
ret
pop
xorl
jmp
push
cltd
pop
mov
lea
push
lea
push
movb
movb
movb
jmp
sub
mov
sub
cmpw
jne
sub
mov
mov
xor
and
jmp
mov
lea
or
rol
mov
jmp
push
mov
mov
mov
jmp
call
and
add
or
xor
mov
push
push
mov
mov
jmp
push
jmp
int3
call
call
inc
call
push
xorl
jmp
sub
cmpl
jmp
push
call
ror
shl
shr
inc
mov
cmp
jmp
pushl
call
pushl
ret
or
or
and
shr
mov
mov
add
inc
mov
add
mov
shr
lea
jmp
rep
jmp
add
add
insb
and
mov
jmp
shl
inc
mov
jmp
ret
test
jne
push
jmp
jmp
call
xorl
jmp
mov
shr
sub
add
inc
mov
mov
mov
add
sub
mov
test
jne
add
ret
and
rol
add
shl
xor
mov
or
sub
shl
xor
sub
mov
jmp
cmp
sete
mov
ret
add
add
add
add
int
in
jmp
mov
movl
jmp
call
test
jne
push
jmp
int3
ret
call
push
jmp
nop
int3
call
addl
call
add
ret
add
add
add
incb
mov
and
mov
mov
add
jmp
lret
sub
test
jne
or
xor
xor
mov
movzbl
add
mov
lea
jmp
add
xor
cmp
jmp
push
and
or
and
mov
sub
shr
test
jmp
call
mov
add
mov
add
sub
mov
lea
push
push
jmp
jmp
call
int3
xorl
jmp
test
je
jns
movzwl
push
jmp
mov
lea
push
jmp
add
mov
test
je
jmp
push
lea
sub
rol
inc
shl
mov
add
jmp
movzbl
add
jmp
je
sub
mov
sub
mov
test
jne
add
and
mov
jmp
add
jmp
ror
xor
mov
shr
and
add
jmp
add
add
and
xor
sub
xor
mov
test
je
mov
add
cmpl
je
jmp
add
ret
mov
and
cmpw
je
jmp
lea
jmp
lea
je
push
jmp
nop
jmp
pushl
call
add
pusha
mov
call
popa
jmp
add
xor
mov
shr
dec
mov
sub
push
push
xor
and
add
xor
mov
mov
test
push
jmp
test
jne
add
ret
rol
mov
or
shl
mov
push
jmp
leave
call
push
call
nop
xorl
jmp
shr
and
lea
rol
and
sub
mov
add
jmp
mov
inc
add
add
or
shl
mov
sub
nop
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
jne
jmp
add
add
int
or
inc
and
sub
mov
sub
mov
push
mov
movl
mov
push
jmp
push
push
push
jmp
ret
nop
push
call
call
ret
inc
push
pop
int3
addl
jmp
push
push
jmp
call
leave
pop
call
call
ret
addl
call
mov
and
mov
xor
and
mov
movzwl
movzwl
jmp
mov
rol
mov
lea
inc
xor
and
rol
shr
mov
add
jmp
lea
cltd
and
add
sar
test
jle
and
and
mov
jmp
jmp
mov
ret
add
add
add
stc
decl
or
add
add
add
sub
movb
movb
movb
movb
call
cmp
push
jae
jmp
and
sub
mov
dec
rol
mov
jmp
sub
test
jne
jmp
xor
mov
jmp
push
jmp
sub
sub
jne
jmp
add
add
add
add
cmp
shr
sbb
incl
add
add
jmp
push
pop
jmp
call
jmp
call
addl
jmp
cmp
mov
in
sbb
push
jmp
push
jmp
call
call
pop
call
ret
xorl
call
ret
add
add
add
add
add
pop
add
pop
add
add
mov
call
call
jmp
push
jmp
nop
call
call
leave
addl
push
jmp
leave
subl
call
test
je
jmp
je
jmp
add
add
jmp
add
inc
add
add
pop
and
xor
sub
and
ror
mov
jmp
lea
nop
jmp
shr
add
sub
or
mov
test
jle
mov
mov
sub
sub
sub
mov
jne
jmp
push
push
call
push
jmp
call
call
addl
mov
call
push
jmp
ret
int3
dec
addl
mov
call
jmp
mov
mov
jle
jmp
add
mov
mov
jmp
lret
int
or
xor
rol
xor
mov
lea
sub
test
mov
mov
mov
jmp
ret
add
add
mov
lea
or
inc
mov
shr
and
add
test
jmp
add
jne
add
ret
mov
xor
test
je
movsbl
jmp
movl
jle
add
jmp
mov
add
shr
and
inc
mov
mov
jmp
movzwl
dec
mov
and
cmp
jne
and
add
add
add
jmp
push
call
add
mov
shl
and
mov
add
test
jne
jmp
push
jmp
call
call
push
push
pop
push
ret
xorl
mov
call
push
jmp
addl
mov
call
jmp
rol
add
jmp
xor
xor
sub
mov
add
mov
or
inc
mov
sub
or
mov
dec
dec
or
and
mov
mov
mov
jmp
add
sub
jne
add
cmpl
jne
pop
pop
pop
jmp
add
cmpl
jne
pop
pop
pop
mov
pop
ret
add
add
add
jmp
add
mov
call
push
jmp
jmp
jmp
call
push
subl
push
jmp
xorl
push
jmp
push
inc
push
xorl
call
test
je
jmp
jl
push
xor
mov
test
jne
jmp
mov
pop
ret
pop
mov
pop
ret
mov
ret
add
add
add
cld
incl
cmp
jno
inc
mov
mov
add
mov
add
add
sub
jne
jmp
add
ret
pop
pop
mov
pop
shl
xor
mov
pop
ret
add
add
add
rorb
nop
sub
test
mov
jne
movzbl
add
jmp
das
sbb
test
add
add
add
add
mov
push
add
ror
mov
mov
add
add
sub
add
cmp
nop
nop
nop
nop
nop
mov
mov
jl
xor
mov
dec
ror
mov
mov
jmp
pop
and
mov
jle
jmp
xchg
mov
xor
add
shl
sub
mov
mov
mov
or
add
add
sub
mov
shr
and
add
test
mov
jmp
push
or
mov
nop
nop
nop
nop
pop
xor
pop
jmp
mov
movsb
popa
add
push
mov
push
add
jmp
and
mov
lea
push
ror
add
mov
jmp
daa
int
je
dec
xor
rol
mov
sub
jmp
push
mov
inc
cld
pop
mov
or
mov
xor
add
jmp
inc
outsl
cs
jne
movzbl
add
mov
jmp
sahf
js
dec
mov
pop
ret
sub
and
xor
mov
or
mov
movzwl
sub
xor
xor
sub
add
mov
mov
pop
jmp
pop
test
shl
mov
sub
mov
jmp
xor
incl
push
lcall
pop
shl
or
mov
pop
ret
add
add
add
rcl
rol
mov
shr
and
add
jmp
add
pop
or
add
dec
dec
xor
mov
pop
ret
add
add
add
cmpsl
idiv
incl
lock
call
push
jmp
leave
push
push
jmp
call
addl
push
jmp
push
pop
push
pop
xorl
push
call
nop
nop
nop
nop
nop
inc
add
and
mov
call
shl
dec
xor
add
mov
call
movl
lea
call
mov
shl
mov
jmp
fs
xor
add
add
call
movl
shr
rol
add
mov
add
mov
sub
test
jne
movzbl
add
lea
add
shr
mov
jmp
jo
call
inc
or
inc
or
or
jmp
pop
inc
sbb
call
add
subl
lea
jmp
jecxz
cld
mov
cmp
jne
mov
add
pop
mov
jmp
mov
cmp
incl
sbb
test
add
sub
or
add
ror
mov
jmp
cmpsl
out
mov
pop
sbb
mov
pop
inc
mov
mov
pop
ret
add
add
add
mov
mov
add
jmp
nop
nop
nop
nop
nop
movb
add
jmp
movzbl
mov
dec
mov
dec
shr
mov
and
nop
nop
nop
nop
nop
add
add
shr
mov
mov
je
test
nop
nop
nop
nop
nop
je
mov
xor
sub
mov
sub
add
sub
mov
mov
nop
nop
nop
nop
nop
jne
add
mov
nop
nop
nop
nop
nop
mov
mov
movl
jmp
movl
mov
movl
jmp
lea
nop
nop
nop
nop
nop
call
cmpl
jne
cmp
jne
call
test
mov
je
nop
nop
nop
nop
nop
xor
mov
sub
add
sub
mov
mov
jne
mov
jmp
nop
nop
nop
nop
nop
sub
jmp
sub
xor
mov
movzbl
shl
add
nop
nop
nop
nop
nop
add
lea
xor
sub
xor
mov
mov
call
cmp
jb
nop
nop
nop
nop
nop
add
cmp
jb
add
cmp
jae
add
test
mov
nop
nop
nop
nop
nop
je
lea
xor
mov
sub
mov
mov
add
sub
nop
nop
nop
nop
nop
jne
mov
mov
xor
mov
xor
sub
mov
nop
nop
nop
nop
nop
or
or
mov
inc
sub
xor
ror
mov
movl
jmp
mov
mov
add
add
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
movl
mov
cmpl
nop
nop
nop
nop
nop
je
pop
sub
sub
dec
mov
sub
pop
pop
and
add
xor
ror
sub
mov
pop
ret
add
push
popa
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
push
popa
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
add
add
add
inc
insb
outsl
jae
inc
jb
jbe
jb
or
dec
jo
outsb
inc
jb
jbe
jb
add
add
push
popa
je
push
outsb
popa
insl
gs
js
outsb
jae
outsl
outsb
inc
add
imul
push
gs
outsl
jbe
inc
jb
jae
add
add
je
inc
imul
inc
outsl
insl
jo
outsb
outsb
je
add
push
add
gs
je
inc
imul
js
je
jb
arpl
jae
mov
je
push
add
filds
inc
gs
imul
je
adc
add
add
add
add
xor
add
add
add
xlat
pop
loope
add
add
sbb
add
add
add
cmp
jne
sub
xor
push
aas
pop
aas
jae
xor
aaa
push
aaa
xor
cmp
ss
fdivrl
mov
xchg
xor
ss
cmp
cmp
cmp
fnstcw
aam
push
xor
xor
xor
icebp
cmp
cmp
cmc
aaa
add
fwait
cmp
add
add
add
xor
xor
sub
mov
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
cwtl
inc
mov
sub
das
jae
push
jle
sbb
add
inc
and
sub
mov
push
fdivrl
xchg
xor
movsb
nop
aad
push
cld
xorb
pop
imul
and
jge
ljmp
mov
cli
mov
jne
fcoml
pop
inc
pop
andl
add
lods
sbb
imull
mov
push
mov
pop
or
pop
fsubr
ja
jmp
imul
or
filds
mov
aad
movsb
mov
sub
adc
aam
adc
sbb
pusha
lret
pop
das
inc
push
sub
test
int3
or
dec
addb
aad
mov
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
mov
sub
push
add
nop
or
push
sbb
aaa
ds
push
jb
repnz
int3
or
jp
in
push
xchg
adc
push
add
mov
cmp
fistpll
pop
inc
fnstsw
cmpsb
popa
sbb
js
dec
ja
sbb
push
push
inc
les
pavgw
add
pushl
mov
mov
and
add
std
lea
imul
mov
aas
clc
repnz
lods
rol
add
testb
mov
dec
xor
into
std
lret
out
gs
les
fisubrs
ss
mov
test
ss
insb
fidivrl
add
dec
add
ret
mov
dec
scas
add
mov
dec
dec
pop
ret
cmp
in
sbb
inc
or
js
dec
push
scas
sub
adc
push
push
push
push
cmp
dec
and
shll
xor
adc
sbb
or
cltd
push
mov
mov
inc
dec
stos
push
dec
cmpsb
mov
shrl
lret
jge
xchg
addr16
push
addr16
jl
fidivrs
test
lea
inc
xorl
js
and
scas
loopne
jmp
lret
fst
sbb
add
mov
int
and
push
and
iret
movsl
ret
inc
mov
push
inc
adc
cmp
out
bound
mov
in
ljmp
sahf
fcoms
pop
aad
fidivl
or
popa
xor
ja
lcall
loope
stc
add
mov
xchg
ret
jns
jo
cmpb
