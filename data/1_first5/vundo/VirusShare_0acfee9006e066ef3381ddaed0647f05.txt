sub
pop
add
inc
pop
add
pop
add
nop
pop
add
push
add
loopne
add
pop
add
push
pop
add
pushf
jg
adc
inc
movw
pop
addl
xor
jmp
push
xor
mov
mov
push
popl
mov
lods
mov
pop
ret
push
mov
add
push
and
jb
push
mov
subw
orl
xorw
sbbb
pop
push
push
push
mov
jmp
jmp
scas
lahf
scas
pcmpgtd
jmp
movsl
clc
jne
jp
fwait
pop
sub
mov
xchg
dec
and
pop
inc
jp,pt
pop
or
lods
xor
sub
pop
sbb
clc
or
mov
dec
mov
and
lock
xor
jle
and
shlb
add
pushl
mov
add
add
jmp
mov
sub
je
testl
call
xor
cmp
scas
shr
xor
std
mov
sbb
pop
cvtps2pi
xor
cmpsb
ficoml
fists
call
popf
push
inc
cmpsb
push
ss
out
cmp
xchg
in
cmp
mov
add
xor
lea
mov
add
mov
xor
push
mov
and
popl
mov
rol
xor
inc
cmpb
jne
cmp
je
sbbl
js
call
cmc
add
mov
dec
jp
jbe
jns
enter
negb
dec
fistpl
loop
xlat
and
xor
jle
test
jp
cli
iret
cmp
adc
cmpsl
xchg
cmp
ja
jmp
testl
add
inc
cmp
jb
mov
add
xor
jno
push
mov
andl
pop
movzwl
mov
add
mov
add
pop
cmp
jbe
push
popl
cmp
jae
pushl
pushl
push
ror
add
mov
shr
mov
sub
xchg
addl
pushl
call
sbbl
jns
push
mov
sbbb
subw
movw
pop
call
pop
pop
pop
pop
leave
ret
call
test
jne
sbbl
ret
push
push
jmp
push
inc
dec
dec
std
mov
xor
xchg
out
shlb
stc
clc
xor
sub
or
mov
call
push
xor
add
mov
sub
xchg
addl
push
call
push
push
inc
mov
sub
xchg
mov
pusha
call
andw
mov
push
push
add
mov
xor
pop
addl
push
call
cmpl
jne
orl
jmp
jmp
popa
pusha
call
mov
push
shr
mov
add
xchg
sub
addl
push
call
mov
mov
xor
xor
jmp
xchg
test
out
stos
pop
test
frstor
cmp
adc
adc
xchg
mov
in
lret
push
rcrl
add
xchg
adc
out
push
jmp
dec
stc
mov
xchg
jo
outsl
aas
push
jl
movsl
add
test
mov
jo
in
pop
push
sub
mov
lods
shl
adc
pop
mov
xor
and
daa
mov
sub
loop
stos
lods
test
mov
jnp
rolb
dec
jne
cmp
je
cmp
jne
popa
shl
push
xor
push
pushl
popl
ja
push
mov
movl
pop
call
int3
jmp
popa
shl
jmp
mov
cld
xchg
sub
int3
jmp
dec
push
ss
and
mov
jo
jmp
inc
cmp
mov
orl
mov
cmp
add
jmp
xchg
je
dec
adc
jmp
jecxz
ss
sahf
xchg
sbb
add
jl
leave
gs
push
jb
mov
and
pop
sbb
sub
rcr
add
ss
push
call
movl
ja
call
ret
imul
cmpsl
adc
add
push
cmp
adc
lea
lds
das
pop
dec
adc
filds
test
out
adc
daa
cltd
and
sti
jge
pop
out
adc
and
mov
cmp
add
or
insb
mov
jns
lret
pop
cmp
les
fs
adc
adc
clc
push
jmp
pop
mov
push
jmp
xchg
push
leave
xchg
sbb
jno
dec
add
outsb
and
fs
add
jo
mov
dec
arpl
outsb
pop
cmp
xor
lret
rep
pop
pop
push
inc
shl
lea
not
mov
add
xchg
push
xor
jmp
mov
sub
iret
pop
subl
cmp
jbe
jg
or
popa
adc
jmp
mov
sbb
fsubr
adc
add
sub
mov
add
sub
mov
add
or
jne
add
jmp
xchg
inc
pushf
xchg
testb
loopne
push
test
int
das
movb
pop
lret
sarb
and
call
mov
jmp
leave
hlt
sub
into
cmpsl
call
cli
cld
aad
jmp
test
jnp
jb
les
sbb
call
je
fisubs
inc
sub
xchg
call
add
cmp
xorl
add
fimuls
mov
pop
add
add
mov
cmp
jne
subw
jge
call
mov
in
inc
push
mov
or
mov
cli
cmp
xor
cmp
sub
je
pop
ret
jecxz
sub
mov
js
or
cmp
add
add
data16
add
bound
dec
call
ljmp
inc
pop
leave
hlt
inc
mov
xchg
sbb
arpl
pusha
js
cmp
mov
pmaxub
adc
cmpw
jne
ret
call
mov
cltd
xor
loopne
pop
jne
outsl
or
hlt
addr16
scas
bound
or
call
movl
cld
xchg
pushl
mov
ret
dec
pushl
rol
fstpl
divb
mov
sarb
cs
sahf
jbe
mov
int3
aaa
pop
pop
or
push
xchg
mov
push
sbb
xorb
rorl
popa
push
into
add
xor
in
stos
out
out
or
push
adc
jecxz
jno
mov
cs
jns
mov
arpl
movsb
fdivr
mov
pop
pop
jg
sub
xor
and
inc
lods
or
add
lock
jle
push
movsb
into
daa
inc
pop
testl
icebp
or
jb
pop
cmpl
push
movsb
call
stc
out
fdivs
dec
xchg
mov
add
xchg
stc
xlat
jo
pushl
mov
test
xor
rcr
xor
gs
cwtl
add
mov
scas
leave
ja
cmp
add
mov
sbb
mov
enter
aad
jp
sub
mov
xor
jmp
dec
mov
jmp
cmp
imul
xchg
scas
mov
lcall
dec
jl
jno
inc
mov
or
pop
sahf
jo
cmp
cltd
inc
jle
and
push
mov
in
cmp
jge
inc
jno
cmp
xchg
scas
fucomi
test
lcall
aad
mov
pcmpeqw
sahf
mov
fcoms
lea
xlat
push
pop
dec
stc
sub
dec
push
and
sub
int
inc
test
fidivl
jbe
xchg
popf
jl
out
cmpsl
leave
cltd
sbb
jge
scas
xchg
xchg
lds
outsb
jg
adc
fwait
xor
add
mov
imul
mov
shrl
int
or
sbb
popf
or
mov
mov
movb
sbb
pop
mov
mov
sarb
jno
fs
jns
mov
cmpl
js
adc
rcl
scas
add
mov
xorl
cltd
xor
sub
mov
shll
aam
inc
imul
je
push
orl
ror
negl
scas
leave
test
ficoml
testl
cmc
lret
hlt
gs
insb
dec
push
repnz
sbb
add
cwtl
test
xor
leave
sbb
inc
jne
push
movsl
sti
adc
test
iret
stc
or
lds
and
rcrb
sub
sub
push
push
inc
add
in
dec
jecxz
es
int
movsb
add
enter
xchg
push
leave
leave
cltd
sbb
xor
je
mov
loope
ljmp
leave
push
fadds
daa
jnp
mov
xchg
leave
cmpsb
or
pavgb
or
jecxz
jne
xor
or
das
or
xchg
lods
pop
dec
test
test
inc
xor
in
cwtl
out
cltd
xor
sub
sbb
jno
cmpl
cmp
loope
push
into
pop
pop
push
jecxz
push
add
sbb
aas
movb
fwait
jne
popf
incb
aas
gs
push
mov
mov
jno
inc
mov
xchg
pop
fs
mov
les
loope
cmpb
test
in
test
push
pop
sbb
lahf
xchg
leave
lock
jmp
adc
cmpsb
je
mov
xchg
pop
in
xor
cld
mov
cltd
xor
mov
xchg
mov
xor
jge
insl
test
insb
sbb
cmp
mov
lcall
addr16
hlt
mov
iret
xor
in
xor
iret
sbb
adc
jo
pop
cmpsl
sbb
push
sbb
and
scas
leave
push
sahf
mov
xchg
movsb
adc
mov
jp
push
inc
pushf
pop
pop
outsb
inc
pop
add
jge
cmp
add
ss
push
scas
leave
jmp
add
jno
pop
inc
gs
fadds
xor
hlt
sub
popf
add
mov
xlat
xor
ss
add
dec
fnclex
enter
sti
icebp
js
call
mov
jl
in
ss
or
push
fnstsw
jmp
pop
jbe
mov
aaa
xor
mov
out
mov
leave
cltd
push
mov
mov
mull
stc
jl
sbb
and
and
xchg
insl
mov
stos
gs
sub
out
jo
xchg
dec
mov
push
cmp
in
cld
push
and
inc
mov
sbb
pop
push
mov
fcmovnu
fwait
sbb
jnp
lahf
mov
std
xchg
je
cwtl
xor
xchg
push
mov
mov
xor
out
mov
jl
jo
jle
scas
fmuls
xor
test
sbb
roll
fcompl
cmp
and
insl
aam
daa
and
xchg
mov
adc
xchg
mov
and
lcall
xchg
mov
mov
ja
mov
mov
cmp
inc
icebp
pop
sbbb
jb
ficomps
lock
xlat
fwait
testl
lods
mov
int
xchg
test
cltd
xor
xlat
push
cltd
clc
adc
xchg
jg
cli
sub
int3
les
aaa
mov
cmp
loope
inc
repz
gs
mov
and
jmp
sti
mov
lods
aam
add
es
fimull
cltd
cmpsb
fisttpll
pop
or
leave
dec
lahf
mov
mull
xchg
xchg
fs
xor
pop
das
scas
add
cltd
xor
add
jp
sub
pop
loopne
pop
outsl
subl
mov
call
mov
sub
dec
xor
dec
xor
arpl
scas
cmp
movsb
pop
lret
push
mov
pusha
pop
push
ljmp
cmp
and
daa
orb
sub
xor
hlt
mov
sbb
sub
mov
insb
dec
int
pop
stos
xor
sbb
negb
cwtl
or
andl
fmull
inc
cwtl
cmpsl
or
mov
ss
jb
iret
sub
loope
pop
stos
xchg
in
scas
fisubl
scas
leave
sbb
ss
or
push
pop
idiv
push
popa
push
add
xchg
stos
jecxz
mov
pop
ss
xor
mov
xchg
into
out
cltd
xor
sub
bound
pop
fs
xchg
mov
into
jo
add
cld
xchg
into
movsb
mov
jp
mov
leave
push
in
push
xchg
sti
lahf
mov
cmpsb
in
fistpl
mov
xor
jmp
inc
test
jae
dec
scas
leave
mov
sbb
lock
ss
xor
pop
fucomi
call
loopne
cmp
out
pushf
test
imul
fs
popa
fldl
pop
add
xchg
or
call
jmp
imul
divl
adc
inc
mov
dec
or
jmp
sub
push
jmp
in
jmp
push
mov
xchg
mov
mov
gs
leave
icebp
mov
leave
cltd
repnz
sbb
movsl
pop
inc
or
xor
cltd
mov
xchg
pcmpgtw
daa
loope
test
shlb
in
jmp
lcall
xchg
and
cltd
fwait
out
pop
jmp
xchg
subb
jg
inc
scas
leave
fistpl
pusha
xchg
outsl
dec
xchg
mov
xlat
or
pop
stos
mov
and
cwtl
inc
cltd
xor
std
and
lar
jns
lea
mov
mov
arpl
jo
add
shrl
scas
popf
jno
jno
or
pop
ret
aas
es
jg
and
push
jg
sub
shl
shll
dec
add
stc
dec
scas
dec
out
insl
andb
cwtl
adc
jg
xor
sbb
out
add
pop
adcl
sub
mov
lcall
sub
out
inc
test
rcrb
lods
dec
dec
and
mov
clc
addr16
leave
pop
dec
fisubrl
out
adc
jns
je
je
bound
xchg
push
test
ficomps
push
jg
xorb
push
or
inc
sbb
lahf
mov
cmp
mov
jae
push
or
mov
leave
cltd
or
popa
sub
mov
jmp
enter
pop
xor
into
in
ss
add
movsl
and
int
mov
mov
push
aaa
jg
sbb
inc
cwtl
aam
arpl
adc
fadds
aam
ret
pushf
lcall
lea
sti
movb
into
or
sub
dec
pop
jnp
repz
testb
jae
dec
lea
cmpsl
dec
lea
scas
out
add
out
jp
fstl
add
test
pop
sbbb
pop
dec
fdivl
out
cmp
call
inc
mov
call
daa
add
call
and
sub
insl
sub
jecxz
pusha
rcrl
xchg
clc
jnp
inc
pop
scas
inc
add
ljmp
push
hlt
sub
jo
sub
ficoms
lahf
cs
inc
inc
and
add
dec
adc
push
push
int
dec
orb
fwait
dec
lea
sub
scas
iret
xor
jl
outsl
mov
adc
data16
push
cltd
jnp
adc
add
sti
inc
cli
pop
ja
cltd
je
mov
cwtl
inc
sbb
cld
mov
imul
pushf
jg
sub
sbb
subb
xchg
jge
lcall
push
roll
dec
js
sti
ret
sbb
xor
cltd
xor
rcll
ss
jno
sub
test
adc
sub
xor
xor
xchg
jne
in
cwtl
test
addr16
out
into
and
xor
aam
pop
mov
lcall
leave
test
xchg
sbb
pop
dec
cltd
add
push
push
mov
sub
test
outsl
ds
pop
xorb
pop
push
mov
push
or
mov
sub
push
cld
pop
mov
xchg
inc
pop
lock
or
cmp
clc
bound
push
xchg
shlb
or
adc
cmpl
rcrl
push
dec
lret
add
and
xlat
xchg
jmp
mov
loopne
xor
lock
mov
push
mov
cltd
xor
test
mov
mov
cltd
xor
xchg
js
ss
pushf
adc
add
sbb
scas
arpl
mov
iret
jmp
pushf
and
jne
inc
push
and
test
pop
jno
and
movsl
sahf
out
mov
or
mov
xor
test
fwait
jg
sub
pop
sub
out
arpl
mov
xor
fcoms
jecxz
out
repz
notb
or
lcall
mov
lcall
push
outsb
mov
jae
fstpl
mov
dec
push
daa
repnz
sub
pop
adc
inc
jbe
js
mov
add
xchg
jmp
movsb
outsb
sbb
ss
add
jae
int3
or
cltd
or
adc
pushf
std
mov
repz
jle
outsb
xchg
data16
dec
jmp
movsb
gs
jecxz
xor
aas
or
jg
jmp
pushf
jge
scas
inc
and
pop
pop
loopne
push
add
je
xchg
xchg
push
lcall
loope
lock
lock
xlat
pop
gs
push
dec
outsb
pop
lea
sbb
stos
adc
repnz
jae
fisubl
call
outsb
xchg
popf
aam
xor
sub
in
push
inc
scas
dec
add
movsb
push
xchg
std
pop
pop
and
aad
inc
dec
lods
xlat
mov
pop
jmp
mov
mov
out
or
adc
mov
jge
lfs
cli
pusha
jo
inc
jno
add
in
imul
push
push
mov
adc
xchg
or
sbb
jle
lret
testl
addr16
mov
dec
dec
sbb
xchg
push
out
mov
leave
cltd
xchg
mov
mov
sbb
jecxz
mov
adc
in
scas
dec
lahf
lods
cmp
fsub
push
mov
jns
adc
mov
lock
mov
mov
aas
enter
leave
mov
pop
jo
dec
pop
paddw
lock
mov
jmp
aad
xor
aam
loop
cmp
mov
out
cwtl
inc
cltd
xor
imul
ja,pt
xchg
pop
fstp
push
or
push
sub
dec
fwait
add
in
popa
test
imul
mov
aam
mov
xlat
fwait
sahf
mov
pop
pop
push
shll
loop
mov
divb
out
push
stos
mov
inc
mov
sub
lret
adc
xchg
xchg
inc
jnp
add
ret
ss
and
jae
sbb
jmp
sub
mov
in
adc
out
aad
jae
fst
sbb
ret
add
and
aas
sbb
sub
mov
ljmp
iret
and
mov
mov
leave
push
inc
in
push
dec
pushl
add
xor
incb
dec
aaa
mov
mov
cmp
add
fnstsw
sbb
fsubl
and
mov
sbb
mov
push
jb
xchg
jge
scas
xor
push
testl
xchg
leave
cltd
in
shll
scas
fwait
and
xchg
jmp
pop
and
ljmp
xor
ljmp
fldcw
sub
dec
xchg
scas
mov
adc
pop
xchg
lds
and
repz
psllw
sbb
xchg
mov
nop
jbe
decl
adc
das
fsubl
rcl
iret
movsl
pop
aas
mov
andl
ret
xchg
in
ss
cwtl
mov
lock
imull
inc
cld
add
cltd
xor
lea
sbb
jge
scas
cmp
xchg
cli
test
bound
les
fistpl
scas
cltd
push
fildll
push
mov
pop
fnstenv
cmpsl
mov
cwtl
fwait
adc
cmc
pop
xlat
mull
pop
xchg
pop
fs
shr
push
int
xchg
inc
dec
lock
and
sub
xor
adc
adcl
lret
aam
fisubl
add
sub
nop
mov
mov
out
inc
xchg
mov
and
movsl
mov
mov
leave
cltd
sbb
jge
scas
popf
mulb
cld
mov
cmc
ljmp
clc
sbb
jge
je
loopne
or
fiadds
ss
sbb
push
dec
fists
mov
pop
aaa
les
push
inc
stos
ss
aas
scas
leave
das
ljmp
sahf
imul
mov
fxch
cltd
out
stc
pop
ja
in
sbb
push
leave
sbb
cmp
or
or
sub
jnp
aaa
movsb
and
xor
xchg
sub
rol
test
sti
rcrl
ficoml
pop
cltd
jne
jbe
cs
leave
inc
test
scas
int3
mov
adc
movsb
and
push
loop
sub
xor
jl
test
xchg
jecxz
insb
xchg
icebp
fdivl
icebp
lods
lods
pop
cltd
push
jne
in
xor
jns
movsl
pushf
test
int3
movb
incb
sub
fisubs
call
adc
loopne
dec
mov
cmove
dec
scas
leave
lds
push
sbb
mov
xchg
icebp
shr
mov
fistpll
cmp
mov
imul
inc
mov
andl
and
mov
int3
inc
mov
mov
push
push
cmpb
mov
cltd
xor
mov
data16
call
scas
enter
add
xor
mov
int
leave
movb
mov
insb
std
test
mov
stos
sbb
or
data16
les
and
scas
leave
mov
mov
dec
lock
fwait
add
add
pop
mov
xchg
jl
jo
mov
jle
mov
adcb
hlt
popa
cmpb
or
dec
daa
mov
push
cltd
xor
pushl
enter
and
sahf
xlat
sbb
les
andb
popa
decb
and
bound
out
mov
push
fwait
or
leave
int3
or
scas
leave
stc
pop
pop
pushf
loopne
xor
daa
jp
xchg
xchg
shll
cmp
and
scas
push
cmp
mov
xchg
frstor
scas
leave
je
int3
movsb
movsl
or
fucomi
in
adc
jns
stos
push
daa
mov
adc
push
pop
and
test
mov
mov
rcrl
add
lret
orb
sub
out
inc
loope
hlt
fbstp
xor
pop
jnp
adc
fcoml
sub
xor
lock
jle
scas
and
mov
sbbb
das
adc
jns
mov
jnp
clc
std
sarb
mov
mov
inc
dec
mov
push
jb
jne
lea
push
mov
mov
push
adc
mov
jl
sub
push
cmp
ljmp
mov
popl
movsl
clc
repz
xchg
xor
pop
mov
insb
cs
data16
pop
lahf
jo
dec
popf
push
or
movaps
addl
leave
push
mov
jo
in
mov
sub
xor
int3
test
ljmp
mov
sub
pop
dec
leave
mov
jae
int
and
jle
mov
fnsave
mov
push
insb
push
mov
rclb
pop
sbb
inc
loopne
sub
or
cmp
fcmovu
sbb
fs
pop
mov
jno,pn
pop
add
cmc
lcall
arpl
fsubs
fcoml
mov
into
int
addr16
test
sti
or
or
push
xor
ficompl
pop
jmp
test
push
cwtl
mov
xchg
adc
mov
test
jmp
loope
xor
jg
sub
in
inc
cmpsb
push
lods
xchg
xchg
clc
adc
mov
mov
lret
jb
inc
add
pop
in
cltd
or
dec
mov
js
fcoml
das
inc
xchg
inc
cmp
in
out
fstps
and
and
incl
testl
mov
fwait
mov
xor
inc
scas
leave
popa
lods
arpl
mov
jecxz
jne
outsb
dec
push
sahf
sub
lret
pop
sub
jne
add
cltd
andl
scas
leave
lds
dec
push
aas
aaa
xlat
jl
xchg
push
imul
inc
mov
orb
or
test
adc
loope
mov
sbb
xlat
pop
and
xchg
push
cmc
push
jge
arpl
test
rcrb
jge
mov
mov
cmp
xchg
in
add
sarb
mov
aaa
scas
rcrl
js
xlat
cltd
push
cmpsb
mov
stos
jmp
mov
ljmp
jl
movsl
test
in
cs
jle
in
jmp
cwtl
jbe
cltd
xor
addl
jg
add
jle
pop
mov
mov
pop
sti
ja
outsb
push
mov
xchg
mov
sahf
push
ja
xor
jg
sub
fnsave
mov
push
dec
jae
test
enter
dec
inc
lock
jmp
test
or
push
in
sub
inc
lret
dec
adc
mov
ret
and
ret
push
in
out
mov
dec
jg
xchg
push
and
rcrl
movsb
in
into
stc
in
cmpsb
lret
fisubl
sbb
jle
negl
js
jae
mov
call
inc
mov
push
cmpb
sub
test
leave
fildll
shlb
popf
mov
int
or
mov
daa
rcll
divb
jp
scas
xchg
pop
xchg
jno
pushaw
sbb
sbb
sbb
popa
sbb
dec
scas
ds
cwtl
add
inc
cmp
sub
mov
ss
and
dec
sti
std
jl
mov
xchg
xor
sbb
pop
dec
shrl
aam
lret
add
mul
repnz
push
push
adc
push
mov
test
fnstenv
mov
jmp
fnstsw
xchg
shlb
inc
mov
enter
and
je
lods
xchg
sbb
adc
jae
add
cmpl
adc
addr16
or
repz
mov
sub
or
mov
cwtl
flds
or
scas
insb
dec
repz
push
mov
shr
fisubs
jns
into
push
int
cltd
movsb
mov
sbb
jae
adc
loope
ja
xchg
or
into
fbstp
lret
add
jge
scas
ds
xorl
mov
inc
jle
push
pop
daa
xchg
xor
xchg
sub
daa
lcall
sbbb
test
pop
fimull
push
and
add
jge
add
mov
xor
push
push
testb
sub
ljmp
xor
lcall
inc
filds
mov
arpl
jge
jbe
push
fists
mov
and
fs
leave
orl
or
xchg
adc
mov
mov
mov
fwait
pop
push
test
daa
fbld
shl
and
or
leave
cmp
testb
xor
pusha
cli
pushf
scas
arpl
ret
dec
ja
push
jno
and
scas
mov
xchg
and
jecxz
inc
lods
data16
xchg
mov
in
lock
loop
shrb
stc
pop
sbb
push
aaa
dec
xchg
jle
fnsave
test
mov
leave
cltd
mov
fnstenv
pop
loopne
jp
dec
cmpsb
jle
inc
push
xor
mov
fsubrp
loop
mov
sti
dec
lret
sbbb
sub
and
negb
aam
dec
in
ficomps
and
mov
cmp
add
push
fs
stc
add
fwait
outsl
mov
arpl
adc
add
jg
iret
imul
int
stos
cmp
mov
lods
lea
dec
ret
insl
andb
xchg
icebp
repz
imul
sbb
mov
jle
cmp
cmp
push
xor
mov
daa
nop
test
test
mov
enter
pop
push
adc
out
loop
fadds
jl
test
cmp
or
xor
pop
fchs
maskmovq
notl
jp
ja
inc
dec
inc
xchg
jno
fadds
fwait
xor
daa
xchg
rcrb
dec
xor
loope
fiadds
mov
sbb
pop
sbb
mov
stc
mov
pop
sub
pop
jmp
cmp
xchg
int
jg
roll
pop
dec
mov
mov
push
insb
mov
jmp
cwtl
and
lret
ja
xchg
pop
fcompl
and
mov
ss
pop
fxch
pushf
ljmp
adc
sbb
data16
adc
gs
sti
or
test
into
movsb
iret
dec
sub
repz
dec
push
pushf
cmp
and
bound
adc
dec
dec
dec
daa
inc
subb
cmp
jae
mov
cltd
xor
insl
ljmp
sub
push
cmp
mov
addb
loope
add
iret
cs
shll
ds
jae
cmp
and
mov
stos
mov
leave
cltd
cmp
pop
fs
sbb
test
leave
ret
sahf
push
jg
ret
dec
xlat
sbb
mov
xchg
data16
pop
decb
cmp
out
mov
fisttpl
xchg
fldl
mov
mov
mulb
popf
out
movsb
jecxz
lods
mov
insl
dec
fst
push
stos
sub
sbb
clc
push
push
push
xchg
inc
cltd
xor
cltd
lods
fbstp
or
addr16
int
test
insb
repz
jmp
and
cmp
push
push
pop
arpl
fsubr
lds
lock
sub
push
sub
xor
rcr
xor
sub
cmp
in
repnz
pop
push
scas
cmp
pusha
inc
pop
les
into
bound
and
adc
mov
push
daa
push
adc
rorl
les
ljmp
or
addr16
or
xor
cmp
and
cltd
xor
sub
cmc
adc
icebp
loop
jge
push
push
inc
jg
sbb
addr16
add
pop
dec
pushf
or
dec
insl
add
out
pop
je
lds
sbb
pop
pop
out
dec
sar
mov
es
jns
jle
dec
inc
ja
push
jle
sub
mov
jb
cltd
jae
add
movb
addr16
lods
data16
fistpl
imul
and
sti
out
add
sahf
leave
mov
adc
aad
mov
in
pop
pop
add
mov
mov
xor
cltd
xor
inc
xor
rcl
mov
mov
cltd
xor
xchg
mov
mov
ror
das
ret
cmp
outsl
subl
xor
adc
pop
push
sahf
or
out
leave
cltd
sbb
jge
scas
jb
jl
lods
mov
call
inc
cs
push
fidivrs
cltd
xor
jbe
mov
jg
dec
scas
leave
movb
test
xor
out
adc
sbb
and
stc
sub
add
pop
out
dec
loop
push
fldt
or
mov
dec
mov
cmp
jg
sub
xor
jbe
mov
jg
dec
outsb
xor
jge
and
push
push
scas
ret
stos
shll
lods
add
push
ss
sub
xor
jbe
mov
jg
xor
orl
shll
xor
shlb
lret
sar
sbb
insb
outsb
push
xor
and
or
xor
cmp
push
sbb
cltd
test
lods
xor
int
jle
jp
or
and
adc
lcall
mov
mov
xchg
lods
pop
hlt
mov
into
cli
adc
mov
cli
push
test
inc
cld
jno
mov
add
cwtl
test
xor
xor
mov
mov
daa
adc
call
out
pop
ds
fistpll
jbe
push
cmc
shrb
dec
in
xor
jbe
dec
imul
scas
mov
cltd
xor
and
popa
mov
imul
in
xor
push
lock
push
loopne
push
jb
rcll
es
adc
les
pop
and
aad
arpl
mov
aaa
arpl
ret
into
add
xor
dec
in
sbb
out
rorl
lods
mov
roll
dec
push
js
in
and
call
in
lcall
repz
sahf
cmp
mov
dec
lret
mov
sub
xchg
mov
cmp
sub
xor
inc
mov
int
jb
cmp
out
push
inc
xor
movsb
fnstenv
push
out
pusha
test
dec
push
movsl
arpl
popa
xchg
aad
sbb
mov
test
fwait
inc
dec
test
cmp
xchg
cmp
aas
ss
push
push
xchg
mov
inc
leave
mov
mov
and
add
xor
leave
movb
xlat
pop
xlat
lcall
push
mov
rcrl
mov
hlt
sbb
sarb
fcoms
lock
jb
sub
and
pop
out
shlb
lods
pop
int3
add
cltd
subl
scas
leave
orb
xor
aad
xor
or
pop
lds
jbe
sbb
pop
pusha
pop
out
cmpsl
mov
scas
leave
mov
int3
adcl
mov
scas
push
repnz
sub
and
test
pop
and
sbb
lret
iret
stc
outsb
inc
gs
sbb
pop
inc
imul
je
adc
jae
pusha
test
int3
xchg
pop
xchg
test
aaa
repz
dec
push
xor
cwtl
add
cltd
xor
lahf
aaa
pop
cmpsl
lahf
dec
scas
or
inc
xor
je
or
je
inc
shll
mov
cmp
mov
inc
mov
call
int3
xor
mov
jnp
cld
int
push
cltd
jge
mov
mull
inc
aad
js
test
xchg
dec
sbb
int3
adc
fwait
jg
sub
leave
push
lods
jnp
cmp
imul
inc
dec
ret
push
push
mov
bound
pop
mov
ret
nop
scas
mov
mov
cltd
mov
mov
test
xchg
mov
pop
mov
push
lds
out
mov
shll
popa
pusha
pusha
push
push
lds
sub
xor
ret
push
movb
aaa
hlt
cltd
popf
mov
jne
dec
jo
jp
jg
adc
push
js
pop
cwtl
adc
jne
lahf
lret
rorb
mov
dec
push
xor
push
jns
int
mov
ds
jge
js
xor
add
sahf
movsb
sbb
xor
shll
cwtl
mov
mov
adc
imul
je
push
sbbb
adc
mov
or
loope
lret
aad
add
mov
mov
xor
mov
xor
in
jb
jae
and
mov
xchg
cmpsl
es
cmp
adc
aad
mov
pop
jg
sub
loope
jne
xchg
sub
adc
in
gs
fnsave
or
jge
sbb
cld
cwtl
divb
movb
push
repnz
adc
adc
jmp
mov
push
stos
cli
push
jno
mov
int3
sbb
movsb
roll
cmpps
sbb
pop
xor
mov
lock
mov
xlat
push
jne
repnz
movsl
inc
sbb
jmp
and
push
je
rsqrtps
xor
add
mov
jae
imul
out
pop
xor
fidivrs
test
icebp
push
push
gs
lret
hlt
aad
ficoml
pop
mov
in
popf
cmc
in
inc
stc
daa
mov
xchg
shrl
or
mov
mov
pop
and
xchg
es
shlb
and
test
int3
lret
jecxz
lret
cmp
rcll
mov
hlt
imul
or
jno
int3
test
sub
sub
cmp
xchg
cmp
jbe
sub
std
test
pushf
sub
adc
cld
fwait
in
add
ftst
xor
cmc
inc
insl
cmp
pop
pop
jne
fwait
cmp
push
jg
sub
cs
ja
pop
adcb
std
pop
mov
rcrb
cli
push
inc
mov
in
jo
out
sub
int3
shll
push
filds
add
sbb
push
lock
push
iret
iret
loopne
or
xor
dec
mov
pop
int
sub
xor
pop
mov
dec
or
inc
pop
stos
and
jnp
push
cs
adc
sbb
cmp
int
cli
adc
dec
or
popf
adc
cli
movsl
arpl
fisubrs
sbb
fdivr
in
mov
outsl
movsb
sahf
fnstcw
daa
push
xchg
scas
leave
lods
mov
jmp
dec
lods
mov
push
sbb
out
xlat
lods
cwtl
mov
orl
push
and
push
mov
es
sub
pop
addl
and
divl
popf
ss
push
pushf
jne
rcr
aam
sti
cwtl
or
loopne
mov
lret
jae
shll
push
xlat
pushf
or
repnz
ljmp
sti
or
cmp
dec
mov
jg
mov
imul
and
dec
adc
jno
pop
and
cmp
mov
bound
leave
cmpsb
insb
push
and
addr16
out
and
rcl
jne
rolb
aas
jne
xchg
sub
jge
add
enter
push
xor
mov
mov
mov
and
arpl
sbb
stos
mov
mov
scas
sbbb
daa
es
xchg
jge
fstpl
pop
out
adcl
inc
mov
lds
xchg
adc
jmp
cmpsl
jb
mov
mov
ret
mov
lock
icebp
movsl
mov
jmp
xchg
cltd
xor
cmc
mov
xchg
fisubrl
clc
adc
mov
pop
and
push
test
out
xchg
and
mov
pop
test
lcall
add
xor
inc
or
shrl
sub
jne
cmp
xchg
jnp
rorb
mov
and
lahf
push
stos
xchg
add
push
out
movsl
imul
js
std
cli
cltd
hlt
push
push
vshufpd
nop
pop
and
mov
dec
or
int
iret
cltd
xor
adc
mov
sbb
xor
mov
repz
or
cmpsl
inc
paddw
les
aaa
test
pop
sub
xchg
fistps
incb
inc
sti
sub
sbb
movsl
push
roll
push
hlt
test
xor
xchg
sub
fnsave
bnd
ret
test
rorl
mov
iret
cmpsb
bound
push
xchg
sub
fldcw
adc
dec
bound
aam
nop
in
cmpb
xlat
out
pop
inc
icebp
into
sbb
test
sub
stc
test
stos
mov
int
pop
fnstcw
jge
loopne
scas
push
das
jle
mov
add
and
mov
pop
gs
lfs
cmp
insl
aad
out
xor
jl
scas
and
stc
push
lcall
sbb
xchg
loopne
test
or
divl
ficoml
push
jle
xchg
sub
cmc
jmp
pop
outsb
jns
in
das
push
fs
xchg
sub
fisubs
ja
das
mov
popa
mov
push
lcall
jl
cmc
dec
es
sub
xchg
add
int3
cmp
daa
xor
fwait
or
push
pop
mov
sbb
test
sub
imul
or
cmp
std
movsb
mov
fmuls
shl
xchg
sbb
jae
push
sbb
adc
jns
or
sub
js
test
orb
mov
push
daa
es
jge
scas
push
jns
lods
sbb
dec
mov
mov
pop
popa
jo
xchg
sub
insl
sub
jecxz
sbb
test
jne
lcall
aad
mov
jg
in
mov
lds
decb
or
xchg
ds
dec
ljmp
adcl
sub
or
shr
loopne
int
xchg
inc
push
xor
sbb
loope
aad
xchg
mov
aad
pop
inc
add
sub
sbb
jge
scas
cld
jp
aad
icebp
cli
xchg
je
dec
insl
sub
in
fwait
pop
pop
mov
rolb
cmpsb
cmp
sub
pop
sti
ja
dec
mov
adc
loope
jbe
push
rorb
dec
insb
call
lahf
movsb
aas
dec
mov
push
adc
xor
out
pop
ret
adc
sbb
lock
into
pushf
add
in
loope
adc
pop
sbb
sbb
leave
cli
mov
mov
iret
xor
sbb
inc
xor
inc
push
xchg
and
push
inc
jp
jae
scas
enter
push
push
inc
adc
mov
in
jg
push
inc
mov
dec
sbb
adc
mov
or
mov
adc
mov
enter
sahf
jge
scas
out
ret
out
sub
cmp
lock
popa
movb
mov
cmp
add
and
mov
sub
inc
daa
stc
call
xchg
paddq
popa
adc
xor
jns
jae
push
iret
test
cmp
and
sub
das
divb
adc
das
push
mov
sub
mov
sub
lahf
cmc
pop
xor
mov
aaa
aad
int
loopne
dec
inc
repz
sbb
inc
insb
push
js
jmp
mov
mov
and
mov
fisubrs
pop
add
xchg
bound
dec
cmp
or
mov
sub
jmp
ret
test
sbb
out
push
pop
xor
jmp
in
shlb
sub
mov
rorb
cmp
mov
mov
aaa
aam
in
push
cmp
mov
push
add
inc
cmp
in
loope
push
ja
cmpsl
fcmovne
bts
lock
sarb
cmp
out
push
sub
mov
jecxz
pop
ja
cld
insl
and
and
push
adc
sbb
jp
scas
mov
adc
sti
jmp
lock
mov
lahf
iret
jge
or
popf
push
pop
aad
pop
mov
cmp
jb
fdivs
inc
into
cltd
sbb
fcomps
cmp
mov
push
cmpsl
jne
mov
lret
cltd
sbb
jge
scas
mov
xchg
in
cmp
fmuls
orb
mov
int3
hlt
pushf
mov
stos
ret
cltd
xor
cmp
xor
andl
push
dec
jnp
inc
loopne
adc
int
shrl
mov
aaa
in
mov
pop
xchg
or
popf
fmuls
xor
mov
inc
add
sub
and
dec
test
std
cmc
stc
addr16
test
push
dec
out
dec
mov
testb
std
sub
shrl
fwait
sbb
jge
scas
mov
mov
enter
inc
add
sbb
xor
lret
cltd
xor
sub
xor
mov
jmp
leave
addr16
movsb
arpl
and
mov
es
je
outsl
ja
jne
fistps
mov
sbb
mov
adc
outsl
or
xor
sbb
test
cwtl
mov
add
or
cli
cmp
pop
cmp
jne
mov
arpl
and
xor
sub
cwtl
jb
adc
lahf
dec
int3
xchg
xchg
jl
add
mov
sarl
xchg
mov
cmp
jae
enter
out
out
or
cs
leave
mov
add
push
or
or
ljmp
aaa
idivl
sbb
mov
adc
cli
mov
and
cmpsb
dec
inc
sbb
xchg
out
push
dec
add
cmp
xor
sub
ja
cmp
stos
mov
in
mov
lret
lea
sub
push
imul
pop
pop
sub
jmp
popf
jmp
repz
or
add
xchg
push
pop
and
sub
mov
insb
fstps
in
jb
stos
jns
push
sbb
arpl
stos
pop
jge
mov
outsb
xor
bound
fmuls
xor
pop
scas
lret
cltd
mov
lret
cltd
sbb
jns
scas
mov
cltd
xor
sub
in
pop
push
mov
sbb
lds
jo
xor
push
cmp
lret
rolb
cmp
xor
jbe
mov
jg
jnp
mov
xchg
xor
out
mov
jg
jnp
mov
xlat
insl
out
std
int3
xlat
and
mov
out
lahf
or
xchg
push
inc
jb
loopne
pop
dec
pop
xor
repz
jb
mov
int3
test
xor
insl
outsl
cwtl
out
cltd
xor
sub
call
push
push
lods
and
in
lock
and
sub
mov
mov
repnz
enter
cmpl
cwtl
jg
sub
sub
imul
mov
dec
loop
and
mov
or
mov
sbb
dec
jae
daa
mov
sbb
jns
mov
das
mov
fidivl
pop
sub
mov
stos
ds
fsubs
push
inc
cmpsb
adc
in
pusha
out
xchg
adc
mov
lods
hlt
jge
in
mov
mov
rolb
sub
pop
push
adc
and
inc
pop
imul
and
pop
or
and
loopne,pn
ud0
mov
in
and
popf
in
lahf
mov
lods
xchg
test
dec
and
repz
popf
sub
xchg
in
rcrb
insb
psubq
cmp
notb
dec
cmp
mov
leave
je
adc
outsb
jb
xchg
fld
mov
jle
scas
leave
aad
outsb
jg
sub
cmp
pop
xchg
imul
out
jg
ror
mov
mov
movsl
sbb
pushf
fwait
xchg
call
mov
push
cvtpi2ps
aaa
and
mov
xor
jge
mov
jg
scas
lods
dec
cltd
xor
fstps
mov
es
add
push
mov
out
inc
mov
push
aad
push
js
rorl
ss
mov
pop
jbe
sbb
dec
sarb
pop
lcall
loop
xor
push
sbb
out
lds
aam
shlb
mov
push
hlt
xchg
orl
sub
inc
pop
sbb
jo
or
je
popf
sbb
mov
cli
pop
xchg
and
lcall
popf
mov
movsl
push
aas
cli
cld
in
cmp
fadd
inc
nop
cmp
notb
sbb
arpl
xchg
inc
or
and
jle
sbb
inc
add
sub
cmp
jae
out
cltd
outsb
out
addl
push
int3
inc
inc
popa
pop
dec
mov
je
and
test
add
push
pop
sub
mov
sbb
push
cmp
fistps
or
mov
mov
ds
dec
xlat
cmpsl
test
push
push
mov
add
push
je
dec
mov
popa
jmp
cld
add
cmp
daa
push
into
je
fbld
jle
sbb
lret
mov
stc
xor
mov
jl
mov
fnstcw
test
jae
sub
test
inc
ja
scas
push
or
xchg
inc
mov
cmove
adc
xchg
xchg
dec
jne
shl
sub
dec
sbb
cmpsl
cmpsb
dec
pop
inc
lock
sbb
dec
jg
sub
add
inc
xchg
js
push
push
add
push
sbbb
ja
outsl
aam
orl
sub
push
cmp
inc
mov
cs
into
mov
jecxz
push
xchg
sub
cmp
aad
jg
rcll
insl
pusha
mov
shl
inc
insl
jle
stos
dec
lods
jns
xchg
jns
sbb
lahf
xchg
mov
add
xchg
jp
push
inc
xchg
or
gs
sbbl
pop
sbb
mov
xchg
sbb
popa
movsb
ss
popa
and
scas
jp
pop
jb
mov
dec
les
xor
cs
cmp
stos
mov
cmp
mov
xor
jne
mov
jnp
rcrb
popa
sbb
push
aad
xchg
mov
cmp
shll
jbe
jp
mov
push
test
aad
or
mov
push
push
js
mov
cmp
mov
test
in
jmp
mov
rcll
xchg
inc
ror
xchg
icebp
xchg
aas
pushf
fstpl
jge
scas
push
jmp
mov
js
outsl
in
push
imul
sarl
xchg
rcrl
fstl
xlat
mov
scas
arpl
in
or
rclb
jno
mov
cmp
ret
sbb
push
gs
fidivrl
test
sahf
lods
sub
fdiv
push
jecxz
dec
ds
cld
or
dec
mov
mov
sub
data16
xchg
dec
sub
rclb
and
rorb
push
cli
popa
xor
repnz
mov
cwtl
cli
or
outsb
mov
ss
imul
fadds
aas
mov
dec
movsb
imul
pop
mov
shrl
cltd
hlt
cltd
xor
int3
sub
adc
xchg
cmpsl
cmp
push
sbb
add
jmp
scas
sub
loopew
cmp
mov
call
ffree
out
lret
cmp
shr
or
adc
sbb
jg
cld
xchg
jle
xor
iret
fimull
test
nop
out
outsl
sar
fwait
sbb
jge
scas
adc
pop
dec
int
push
sarb
enter
inc
push
into
inc
xchg
test
mov
push
or
sub
mov
jge
scas
cmpxchg
xor
mov
dec
adc
rolb
xchg
sub
mov
xlat
dec
pop
shrl
mov
mov
mov
add
leave
push
ss
lahf
cmp
test
lea
cmp
push
mov
pop
jne
mov
shll
and
ret
cmp
cmpb
ljmp
sub
xor
sub
adc
and
mov
idivb
mov
leave
cltd
xor
jns
and
jg
push
ljmp
fisubs
mov
fistl
call
sbb
mov
scas
leave
stos
clc
xchg
mov
ds
cltd
fistl
leave
sub
outsb
or
test
mov
pop
test
pop
sbb
cmp
js
adc
scas
mov
mov
inc
scas
leave
fsubs
add
out
repnz
shl
jl
mov
push
xchg
xor
decb
daa
mov
sub
xor
adcb
dec
out
lods
cwtl
fsubrs
ss
jp
xchg
addb
inc
mov
sbb
xchg
sti
push
fucomip
enter
adc
dec
fcmovbe
negb
lret
cmp
xor
addr16
inc
scas
sbb
cmc
xchg
scas
