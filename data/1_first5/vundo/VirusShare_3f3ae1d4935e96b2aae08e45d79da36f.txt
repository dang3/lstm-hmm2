jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
xchg
divl
mov
sub
add
pop
add
push
add
add
push
add
add
add
and
ja
les
and
addl
popa
add
add
add
add
xchg
add
lods
add
add
add
add
add
nop
add
inc
add
add
add
add
add
dec
add
add
add
add
add
add
loopne
ja
inc
add
add
add
add
add
pop
inc
add
aad
ja
test
and
add
ds
in
test
dec
add
lods
add
pushf
add
add
ds
roll
add
add
lea
add
rolb
sub
test
ds
lea
pop
add
ja
loopne
cli
add
add
add
add
pop
inc
add
add
add
add
ds
in
sub
dec
add
lods
add
add
ds
jns
popf
add
add
aas
add
add
add
pop
xor
stos
add
inc
add
sub
inc
add
add
add
xor
push
add
add
loopne
test
add
add
pop
add
add
ja
sahf
add
or
add
add
enter
jg
outsb
add
test
adc
sbb
lock
add
add
out
add
add
sub
ja
verr
add
ds
add
add
add
add
sbb
les
out
add
add
add
add
pop
add
add
test
add
sub
sub
xlat
add
add
add
sub
add
add
nop
add
add
ja
inc
add
add
add
mov
flds
enter
mov
add
es
mov
add
test
or
lahf
add
add
ja
outsb
add
add
add
add
mov
add
ja
mov
scas
add
add
inc
add
add
add
add
cmp
ja
loopne
xlat
add
add
popl
ja
out
add
add
sub
add
inc
add
pushf
add
loopne
mov
dec
add
add
add
addb
add
loopne
ja
pop
add
test
push
add
add
add
add
add
add
sbb
dec
add
add
mov
test
pop
add
and
loopne
ja
xor
mov
mov
add
add
add
add
inc
add
add
add
cmp
inc
add
add
add
add
add
sub
dec
add
pop
add
pusha
add
add
loopne
sub
sub
leave
add
add
add
add
add
add
or
movsb
add
add
add
sub
fiadds
mov
roll
pop
add
add
adc
mov
loope
xor
mov
lock
pop
add
add
ja
leave
add
add
ja
stc
add
add
lea
dec
add
add
add
add
stos
add
sub
into
add
mov
add
add
ja
ja
mov
add
loopne
ja
pop
add
add
add
in
xor
mov
ja
nop
add
push
add
add
ja
dec
add
add
ja
push
popl
pop
add
add
addl
cli
add
add
add
add
add
add
add
movsl
add
add
adc
sarb
pusha
loope
push
outsb
jbe
clc
loopne
fistl
mov
xor
dec
add
push
mov
pop
in
pop
cmp
adc
stc
inc
inc
leave
out
aam
mov
xchg
fisubrs
xlat
lret
jg
hlt
and
outsb
xlat
cmpsb
xor
push
nop
aas
xorb
cmp
fidivrl
inc
lds
or
aas
push
popl
sti
or
dec
scas
cmpsb
dec
sbb
mov
jno
clc
or
pop
push
sarb
xchg
dec
lahf
push
xor
jo
push
and
xchg
pop
push
hlt
scas
ror
out
cltd
int3
aad
mov
add
jno
mov
xchg
xchg
and
xchg
ja
insl
ss
fsubl
rep
gs
inc
gs
xchg
out
fs
add
repnz
adc
stc
dec
cmpsl
repz
in
mov
push
mov
mov
cltd
pop
fcomi
icebp
call
les
pop
insb
cwtl
cld
xchg
fnstsw
sbbl
hlt
jge
xchg
jae
outsb
movsl
es
cmpsb
xor
mov
das
jo
xor
aad
mov
ljmp
dec
stos
lds
mov
pushf
adcl
in
in
les
cmpl
hlt
mov
push
mov
ss
movsb
mov
or
pop
inc
inc
pop
push
ja
mov
adc
dec
inc
mov
fbstp
pop
jne
jo
jno
gs
cld
sub
cmp
cwtl
xor
push
out
loopne
repnz
sbbl
inc
es
rcll
jb
in
push
sbb
sbb
fistps
dec
pop
psrlq
jbe
dec
loop
xor
adc
jl
roll
pop
jg
sub
pop
jle
ss
in
or
mov
and
pop
xor
rclb
insb
cwtl
cld
and
adc
sti
and
rcrb
mov
xor
mov
movsl
sar
mov
mov
inc
push
push
out
cwtl
push
sub
and
mov
cmp
xor
in
iret
mov
subb
or
add
cmp
sbb
test
repz
out
es
and
push
stos
int
cmp
jae
ret
pop
adc
in
aad
xor
icebp
mov
adc
repz
incl
xor
imul
roll
daa
scas
sbb
mov
dec
sbb
ds
mov
pop
ja
outsl
sub
lea
pop
pop
arpl
jne
xor
mov
popf
mov
pop
xchg
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
lods
or
sbb
sub
cmp
cmp
jp
mov
push
stos
mov
lcallw
loope
out
out
cmp
push
jp
mov
xor
daa
ficoml
ljmp
into
sub
cmp
push
jp
mov
cmp
xor
gs
outsl
cli
xchg
out
lcall
fwait
movsl
imul
lahf
stos
stos
in
inc
int
add
popa
or
testb
pop
cmp
lds
pop
movsl
data16
jb
aaa
cltd
cli
test
or
cli
ljmp
lahf
fldl
clc
sbb
sahf
sti
je
cltd
fs
scas
mov
jmp
es
negb
sub
xchg
dec
mov
jle
xchg
inc
mov
sbb
cltd
jne
push
adc
fistl
xchg
sbb
cld
mov
out
movsw
xchg
cltd
fwait
inc
push
inc
mov
stos
push
out
cltd
sub
or
lods
decl
scas
inc
mov
idiv
push
cli
ss
sbb
sub
cmp
push
jp
mov
dec
stos
pop
mov
push
ljmp
mov
mov
sbb
data16
sub
pop
cmpsl
inc
mov
testb
mov
les
das
enter
ret
jp
iret
data16
cld
xor
push
movsl
push
mov
lahf
push
xchg
lahf
pop
aam
mov
dec
into
cmpsb
pop
xchg
push
jp
mov
push
stos
inc
mov
push
ljmp
sub
cmp
push
jp
mov
push
stos
inc
mov
push
ljmp
fsubrs
xchg
push
repz
or
int
jl
xchg
xor
out
xor
ss
daa
jns
xlat
add
test
aas
jo
cltd
mov
jg
fisttpll
jo
mov
xchg
sub
adc
scas
in
mov
mov
push
dec
stos
cmp
mov
and
push
dec
xor
jg
xchg
ds
sbb
mov
insb
mov
xor
xchg
cmpsl
xchg
jb
lret
mov
daa
mov
add
lods
scas
add
fwait
stos
mull
push
jne
cmpsb
push
arpl
cltd
adc
js
or
cli
adc
out
test
cwtl
inc
jecxz
sub
or
shr
jb
mov
push
inc
arpl
and
inc
in
bound
stos
sarl
dec
in
add
dec
mov
xchg
xor
stos
rorl
lods
mov
mov
imull
out
mov
and
js
pushf
insl
cmc
or
add
adc
pop
scas
push
mov
out
push
jmp
lahf
sub
dec
mov
inc
sub
inc
cmc
xor
push
arpl
mov
push
lcall
jno
xchg
pop
popf
and
inc
scas
jno
jae
stos
cld
dec
cmpsl
mov
frstor
mov
fldt
movsl
loope
scas
sbb
mov
xor
imul
out
mov
fmull
and
sub
ret
fmuls
inc
and
cs
sbbb
outsb
adc
in
call
jmp
jo
add
stc
aad
ss
xchg
mov
add
push
inc
idiv
dec
fdivrs
xchg
stos
lret
lahf
jl
jne
cltd
std
add
int
clc
je
sti
das
sbb
or
ds
jle
and
test
scas
xor
mov
pop
pop
popf
inc
mov
int3
fwait
into
xchg
sub
sti
popl
adc
faddl
mov
cmpsl
daa
sub
cltd
mov
roll
jle
xlat
repnz
xlat
fldenv
nop
ljmp
sbb
add
jge
imulb
mov
add
lods
dec
jo
pushf
out
loopne
xchg
mov
pop
int
mov
xchg
cli
shl
pop
pop
stos
add
in
rcrl
mov
idivb
shll
adc
mov
jo
cltd
dec
inc
mov
xor
loope
aaa
sub
enter
lret
jae
adc
mov
iret
cmc
ret
arpl
jecxz
pop
shl
ss
psubsw
mov
fistpll
cmp
sti
mov
jp
movsb
push
inc
cmc
adc
repz
in
mov
cmp
xchg
jg
dec
int3
jo
dec
daa
popf
mov
jne
decl
test
mov
shll
add
fistpl
push
rorl
jmp
jle
jnp
push
iret
movsl
out
pusha
inc
mov
dec
xor
enter
icebp
call
jb
pop
mov
xchg
pop
into
jmpw
jmp
pushf
xor
or
rcll
dec
enter
push
sub
movsb
mov
ja
mov
cltd
ss
std
leave
stos
adc
out
or
je
rcrl
jb,pn
or
movsb
popa
xchg
push
std
sub
popf
dec
lret
cmp
std
mov
sbb
cld
stos
cmp
adc
int
mov
xor
mov
push
fsubrs
jb
int
pop
cmp
xor
xchg
pop
inc
sub
out
int
xchg
sub
xchg
fwait
dec
cmp
orb
cmp
lret
into
filds
jge
idivl
test
mov
pop
faddp
sbb
into
sbb
jne
cltd
repnz
push
fcomip
jne
movsb
sbb
and
ret
stos
push
sbb
imul
inc
mov
stos
aam
sbb
loope
shlb
and
inc
andb
je
jecxz
mov
fstpt
adc
insb
cli
mov
xor
fcomps
cmpsb
imul
test
push
jbe
lret
std
mov
cltd
push
and
loop
jg
test
arpl
inc
test
push
push
out
stos
fcmovnbe
mov
sub
push
movsl
sahf
lods
dec
movsb
mov
aam
lcall
or
dec
incb
out
in
cmp
cmp
sbb
ss
stos
stos
ds
xchg
jp
rcr
test
fwait
xor
lcall
and
sbb
cmp
call
jae
ljmp
dec
xchg
fldenv
adc
push
out
cmp
sub
xchg
call
cmp
icebp
imul
into
mov
cli
mov
pop
loopne
push
loopne
cli
es
jbe
dec
push
mov
cmp
jmp
loope
xlat
pop
sub
stos
mov
mov
ss
gs
mov
insl
inc
jo
sarb
xor
xlat
xor
or
inc
push
pop
xorl
mov
shlb
jp
popf
gs
push
int
cld
bound
jae
popf
out
cltd
pop
out
pop
sti
nop
mov
pop
mov
add
fnsave
sbb
movl
mov
mov
pop
dec
mov
sbb
in
or
ret
jl
sbbb
js
test
mov
imul
outsl
mov
jge
mov
bound
mov
outsb
mov
popf
inc
xchg
push
in
imul
push
in
mov
aaa
lods
push
adc
mov
sub
xchg
inc
or
jl
movsl
mov
out
inc
xlat
mov
push
cmpsb
mov
sbb
into
xor
cmp
cmp
push
pop
out
adc
inc
std
jb
fldenv
arpl
or
test
inc
dec
mov
repnz
stc
scas
sub
enter
inc
fidivs
daa
push
jne
pop
jns
and
in
xchg
scas
fcmovu
and
ss
inc
jmp
pop
por
jne
dec
test
das
or
xor
push
daa
sub
add
adc
fwait
lahf
add
jl
loope
stos
jnp
in
jbe
out
mov
fwait
inc
ds
das
aas
jle
mov
testl
inc
pop
or
jle
jns
cmp
xlat
fcoms
sub
lcall
adc
vpshuflw
push
jnp
shr
aad
out
add
ljmp
cs
icebp
mov
loope
pop
jo
mov
gs
or
rclb
add
xchg
mov
push
hlt
and
pop
mov
push
dec
add
cli
inc
fucom
imulb
sbbl
pop
adc
dec
lods
loope
test
mov
xchg
ja
add
ret
xchg
addr16
push
jecxz
repz
stos
imul
mov
aam
imul
cmp
adcl
es
scas
sub
mov
mov
inc
sbb
unpcklps
fstpt
pop
xchg
scas
pop
add
adc
xor
ljmp
pushf
insl
sub
xchg
jle
std
in
and
dec
adc
cbtw
pop
jno
out
daa
shlb
scas
cmp
hlt
nop
dec
orl
mov
in
insl
push
shll
test
and
int
negl
mov
js
leave
xor
or
mov
test
mov
dec
xor
je
cmp
jmp
mov
cli
lods
inc
dec
adc
or
test
loop
out
cmpl
fisubl
inc
in
fistpl
mov
imull
mov
push
jns
sub
inc
mov
xchg
aad
cmp
and
imul
std
sub
mov
push
xor
inc
pop
sti
jno
loope
pop
pop
cmp
aad
cmc
inc
mov
cli
xlat
in
rclb
fisubrs
xchg
loope
std
test
scas
and
xor
arpl
dec
push
mov
dec
jo
call
cmp
pop
pop
adc
movsl
ret
out
mov
push
dec
or
push
in
lret
test
adc
jle
inc
jb
testl
jnp
idiv
sbb
sbb
enter
cmp
and
push
sub
xlat
loope
mov
jecxz
dec
cmc
imul
mov
clc
or
testl
stos
pop
xor
lahf
in
jb
adc
add
mov
pop
call
in
mov
mov
dec
and
cs
cwtl
fstpl
in
ljmp
mov
movsl
enter
sarl
ljmp
or
into
and
cli
cmp
jl
test
mov
out
cmc
cmp
or
jecxz
fisttpll
in
cmp
push
data16
je
cmpsb
sub
dec
adc
cmp
xchg
out
ss
ljmp
sbb
mov
test
sbb
xchg
mov
mov
movsl
int3
jne
mov
in
or
or
aad
xlat
in
in
add
andb
or
rcrb
pop
cwtl
jb
adc
inc
aaa
jne
jl
sbb
lcall
pop
jecxz
add
dec
jnp
add
dec
or
mov
mov
inc
sub
mov
dec
insl
aas
cmp
test
lock
ljmp
mov
sbb
int3
movsl
fisttpl
arpl
les
mul
fisttpl
jo
xor
into
and
into
dec
cmp
test
sub
out
and
xchg
data16
mov
inc
rclb
aas
inc
call
add
cmpsl
cmpsl
sub
movsb
sbb
pop
test
cmp
data16
add
or
push
shll
dec
jp
mov
xchg
add
sahf
push
je
push
out
xchg
hlt
fldl
add
movsb
mov
sub
into
jne
push
lods
xchg
inc
pusha
xchg
scas
fdivrs
push
stos
xor
aaa
popa
pop
cmp
jo
leave
insl
cmpsb
pop
cmp
inc
ficompl
out
inc
lock
push
dec
inc
jmp
out
sbb
or
or
into
push
or
jbe
fistl
jp
shr
pushf
jo
cmpsb
fdivr
sbb
insl
pop
mov
ret
push
bnd
lods
popf
mov
jbe
mov
pushf
lahf
test
xchg
cmp
insl
gs
imul
pop
pop
ret
dec
unpckhps
fiaddl
jo
sub
std
daa
insl
cmp
inc
jg
xor
xlat
pop
lcall
mov
cld
mov
jp
sub
pop
xlat
lret
jno
call
adc
int
test
pop
adc
repnz
je
clc
cmp
fwait
aaa
mov
or
stos
xor
xchg
mov
stos
cld
xchg
cltd
inc
and
xlat
je
fists
fwait
mov
push
enter
cmp
mov
push
add
cmp
mov
mov
push
sub
mov
cmp
cmp
jns
lahf
xor
push
loope
pop
outsb
outsb
iret
ja
bswap
push
and
mov
xchg
pop
xchg
loop
fcomps
push
lods
into
pusha
pop
mov
or
jbe
xchg
lahf
or
ret
ret
aad
rorl
mov
mov
jne
aam
int3
sub
inc
mov
cmp
add
push
out
jns
push
add
cmp
in
insb
inc
daa
out
jnp
in
xchg
popf
shrl
dec
pop
jnp
push
sti
ss
rcl
rol
loopne
jmp
mov
push
push
inc
dec
insb
lahf
cmpsl
jae
jno
js
or
sbb
mov
push
inc
out
pop
in
mov
jo
add
mov
outsl
shrb
int3
adc
xorb
dec
inc
sbb
mov
mov
pop
mov
bound
outsl
push
pop
mov
movsb
sar
mov
and
aad
test
xchg
sbb
out
xchg
addl
and
and
popa
xor
cli
inc
out
scas
insl
lret
inc
dec
jae
arpl
xchg
sub
adc
mov
xor
test
mulb
stos
add
add
aad
insb
inc
xor
adc
ss
in
and
and
jb
js
cmp
and
add
or
sahf
push
cmpsb
imul
inc
inc
push
lcall
lcall
out
pop
add
subb
clc
xchg
inc
pop
aam
jbe
pop
out
xor
mov
sahf
push
rclb
fisubrs
icebp
vmwrite
das
push
fcoml
inc
hlt
rcl
in
xor
add
shll
dec
mov
xchg
and
ds
lret
xchg
mov
cmpsb
clc
sbb
pop
stc
insl
add
dec
cmp
sub
fprem
sub
fimuls
fstps
das
addr16
shrb
sub
pop
jb
mov
sbb
dec
pop
out
cs
enter
push
insb
decl
in
pop
push
sub
incl
inc
add
int
out
push
lret
rolb
dec
push
sbb
repz
mov
jno
push
mov
shlb
push
jmp
ja
add
test
stc
and
fldt
clc
cmp
shl
inc
dec
mull
pop
mov
jmp
movsl
inc
aad
inc
xchg
inc
jne
inc
fs
aas
loop
ds
ret
daa
mov
cmp
push
mov
sub
cltd
add
or
adc
nop
lock
sub
dec
mov
jge
fisubrl
je
mov
fadds
loop
jbe
sahf
popa
je
dec
sbbl
adc
jg
jne
dec
add
out
add
push
push
sub
lret
sahf
loop
cmpsl
ljmp
loopne
cmp
inc
mov
mov
insb
dec
pop
mov
ds
lret
negb
mov
xor
lods
jns
lea
mov
lret
cmp
arpl
mov
pop
aas
add
xchg
and
add
test
push
dec
test
lcall
jmp
mov
imul
stos
adc
xchg
lods
pop
fstpl
sub
xchg
pop
aad
subb
cmp
aad
jl
popf
cld
and
lcall
je
test
xchg
das
popa
int3
inc
leave
cli
loop
and
ret
dec
dec
xchg
push
fs
pushf
pop
lret
cwtl
pop
decb
loopne
iret
inc
mov
mov
mov
idivl
in
mulb
jmp
fisttps
out
mov
add
out
shll
testl
push
ficoml
jns
out
clc
bound
pop
out
mov
mov
iret
xor
cmc
test
push
imul
ds
xor
xlat
jae
mov
sub
push
es
adc
sub
dec
jns
push
push
pop
mov
fwait
data16
lret
hlt
sbb
fistpll
cmp
fisubl
cmp
push
iret
mov
cmp
filds
jno
or
jb
mov
scas
test
int
push
repz
test
ja
and
dec
aaa
leave
inc
dec
add
dec
push
shlb
fmull
inc
fbstp
jecxz
stos
cltd
lahf
cmpsb
sbb
fldcw
mov
adc
add
add
ljmp
in
mov
outsb
stos
pop
mov
and
jg
push
movsb
gs
das
jl
push
ret
and
call
sti
out
push
or
std
dec
xor
fldt
lock
xchg
cwtl
cmpsb
loopne
loope
mov
xlat
xchg
xor
jge
xorl
mov
jge
inc
or
hlt
fs
out
inc
inc
mov
movsb
add
push
and
adc
add
addb
and
les
xchg
stos
cmp
cltd
ja
data16
jo
jo
pop
stc
xchg
mov
push
adc
mov
adc
rorl
lahf
jge
mov
rol
int3
data16
pop
push
add
hlt
stos
dec
jae
sub
je
lds
imul
jp
mov
and
outsl
jmp
fs
mov
test
mov
cld
push
push
cmp
sub
fidivrl
fsubs
cmp
fstl
stos
in
ss
scas
lahf
out
int3
imul
test
xor
mov
and
inc
sub
mov
push
les
sub
pop
and
xor
enter
insb
int
subl
pop
shlb
fstpl
sbb
js
dec
imul
ja
push
dec
pusha
cli
inc
inc
lock
push
or
dec
das
and
sbb
xchg
and
jb
inc
push
out
scas
cmpsl
dec
rorl
das
cmp
xorb
pop
mov
div
dec
inc
add
xor
push
lods
mov
jle
xor
loope
clc
add
jecxz
imul
and
cltd
and
or
lods
dec
xchg
test
inc
or
pushf
scas
lea
and
repz
add
jo
icebp
fisttps
xchg
mov
int
jae
addl
cltd
sahf
iret
dec
cld
pop
add
dec
or
pop
lea
and
push
loope
cmp
mov
pop
inc
decl
outsl
pop
xchg
mov
push
addr16
cld
push
enter
adc
mov
cmpb
lods
bound
dec
mov
enter
xchg
scas
cltd
cmpsl
inc
mov
orl
dec
jno
xchg
icebp
imull
mov
out
mov
sbb
and
outsl
mov
fsubr
adc
mov
fnstcw
repz
das
push
lock
jnp
or
add
arpl
inc
inc
cmc
and
lret
mov
push
mov
xorl
pop
pop
jg
loopne
jge
mov
or
fwait
jg
ret
adc
mov
fdivl
int3
sub
mov
stos
ret
cmp
inc
push
dec
pop
repz
enter
popf
mov
jbe
mov
movsl
lcall
sbb
adc
frstor
dec
push
rorl
scas
jnp
lods
cmovns
andb
cmp
in
xchg
movsl
push
js
sbb
pop
add
loopne
mov
fisttps
add
push
std
stos
mov
cltd
in
xchg
dec
fwait
cltd
sbb
jae
mov
jecxz
cmp
jbe
push
add
xchg
stos
shll
cmp
sbbb
aas
sahf
pop
mov
enter
subl
aad
stos
mov
pop
push
test
movsb
cmp
sarl
cmp
movsb
inc
jmp
and
mov
cmp
pop
cmp
ja
lods
push
data16
aad
sti
outsb
rcrl
ljmp
sahf
mov
test
xor
push
adc
jmp
stos
shlb
ss
ljmp
test
insl
add
cld
xchg
stos
xchg
xorb
adc
shll
lods
xor
mov
fistpll
mov
mov
repz
scas
jno
mov
xlat
daa
xor
cli
jbe
lcall
cmp
sbbl
dec
in
in
mov
cmp
and
mov
cs
sbb
jg
jle
and
les
ret
cwtl
call
xchg
jns
mov
ret
or
cmpsl
jle
pop
or
sti
mov
xlat
aad
sbb
push
mov
add
add
iret
stc
imul
insb
adc
cli
jns
daa
popa
mov
les
adc
dec
add
xchg
sub
xchg
int3
sub
call
push
inc
ret
dec
cmp
aas
sbb
outsl
fcom
sub
sub
and
add
mov
ss
cli
pop
adc
je,pn
sbb
daa
sbb
dec
inc
shll
es
jae
pop
dec
xor
cmp
inc
add
lahf
or
sub
cmp
imul
or
sahf
dec
push
mov
or
pop
mov
and
adc
scas
cmp
int
pop
pop
cli
jo
out
fnstsw
mov
fiaddl
jo
icebp
iret
adc
add
popf
aad
je
js
lcall
ret
jb
xor
add
cmc
mov
in
push
mov
lret
cld
out
mov
data16
inc
add
or
test
xchg
pop
loop
or
data16
aaa
cmp
pusha
andl
fimuls
push
cmp
lods
sub
das
mov
pop
adc
imul
jne
dec
jp
cmpsl
into
sahf
sub
or
fdivr
inc
hlt
mov
pop
jmp
lret
dec
ja
mulb
ja
jmp
notb
push
cmpsl
ja
out
stos
das
cmp
into
or
std
add
fsubrp
sarb
mov
fisttpl
stos
std
rclb
outsl
mov
fdivrl
dec
cmp
movsb
scas
xchg
inc
push
jecxz
scas
xchg
or
adc
imul
push
js
stos
add
dec
or
ficompl
dec
sub
stc
cltd
mov
xchg
pushf
pop
cmp
add
jae
ret
push
test
cwtl
sub
stos
fsubs
ret
cmc
sub
mov
lret
or
insl
push
test
pushf
push
dec
cmp
stos
pop
pop
inc
and
fcmovne
cmp
xchg
pop
mov
bound
jg
jl
cld
popa
lock
sahf
pusha
lds
jl
jmp
mov
stc
ret
test
push
aad
into
lds
cmp
mov
mov
insb
bound
loopne
adc
das
mov
stos
fwait
push
fst
filds
sbb
cmp
push
jp
mov
push
stos
inc
mov
push
ljmp
sub
cmp
push
jp
mov
push
stos
inc
mov
push
ljmp
sub
cmp
imul
push
stos
inc
mov
push
ljmp
loopne
ds
cmpsb
ficoml
ljmp
cld
stos
inc
int
inc
scas
and
fcomps
cmp
rcr
subl
xor
and
jne
adc
shlb
cmc
and
inc
bound
push
push
inc
and
jne
adc
add
leave
lds
sbb
dec
push
xor
sbb
push
push
adc
loopne
cltd
icebp
mov
pop
pop
dec
subb
out
es
sti
cmp
mov
add
cld
push
dec
cltd
mov
sub
test
cmp
or
xchg
loopne
cwtl
lret
push
shlb
call
ja
lahf
and
mov
hlt
fnstsw
cli
mov
cld
fcmovnbe
stos
xor
xor
mov
lock
aam
cmp
fsub
outsl
add
push
and
jae
iret
pusha
mov
adc
xor
addb
shrb
jo
add
inc
mov
adc
test
dec
rolb
pop
lcall
in
popa
std
fs
and
inc
xor
jne
cmpsb
loopne
out
ror
lret
xorl
in
pop
cmp
cmp
jne
add
repz
ror
mov
in
test
je
inc
or
inc
aas
cmp
sub
add
jge
cwtl
or
aad
shll
sub
xor
adc
push
and
insb
and
out
mov
lds
lds
adc
inc
and
xor
adc
shlb
cmc
and
adc
inc
and
xor
adc
loope
ret
cltd
popf
movsb
cmp
mov
out
fxch
out
cwtl
scas
lahf
cmp
jg
lcall
push
mov
sbb
add
lods
push
repnz
adc
scas
dec
aad
cli
cmp
xchg
lcall
jnp
lahf
mov
adc
bound
test
test
add
cmc
xchg
xor
jg
pop
popf
and
or
add
stc
inc
add
xlat
push
jge
out
xchg
ljmp
cwtl
leave
inc
lock
push
push
mov
mov
bswap
in
mov
xchg
jle
popf
je
into
sub
inc
and
push
movsl
aam
mov
jae
xchg
mov
lret
add
fists
pop
jecxz
sbb
dec
lret
ds
mov
in
inc
in
shll
loop
mov
dec
xor
in
pushf
sbb
addr16
add
xchg
pop
mov
xchg
cli
ljmp
addb
daa
dec
dec
cmp
and
jp
or
movsb
daa
out
aas
add
out
les
and
mov
dec
stos
dec
sub
repnz
sahf
mov
or
pushf
int
adc
cli
cmpsb
sub
push
or
addl
cmp
inc
cmc
mov
or
in
imul
pop
addr16
js
add
ja
xchg
mov
xlat
and
xor
cltd
push
pop
sub
pop
mov
mov
lcall
jle
jl
xchg
mov
sub
xor
mov
mov
movswl
lret
out
pop
fldl
test
pusha
push
stc
pusha
out
add
dec
jecxz
jb
cmp
jb
dec
mov
shlb
mov
sti
fsubp
xor
xor
inc
and
xchg
add
add
pop
push
push
rorb
inc
popa
out
flds
sub
mov
xor
xchg
in
xchg
cmp
rcl
testl
xor
xchg
int
inc
ljmp
dec
adc
lahf
jns
cmp
insl
cmp
pop
lds
xor
stc
into
fs
push
jle
adc
dec
jmp
mov
lret
xlat
cltd
stos
pop
hlt
dec
ret
xor
repnz
fnstenv
jno
adc
out
mov
aaa
or
mov
dec
pop
xor
mov
adc
neg
lock
or
push
sub
inc
cmp
daa
mov
xchg
hlt
mov
inc
sub
dec
or
popa
stc
nop
mull
sbb
cmp
ret
dec
pop
dec
cmpsb
cmc
jp
xor
push
js
testb
jnp
int3
mov
call
push
and
push
xor
imul
iret
gs
addr16
pop
fwait
sbb
stos
loop
jo
mov
mov
in
loope
sub
dec
fisubl
fidivrs
test
jae
mov
pop
inc
and
or
aad
pop
mov
pop
push
cltd
push
add
xchg
fimuls
icebp
out
pop
and
push
push
sub
inc
lock
xorb
mov
sbb
add
bound
shll
pop
lods
inc
mov
cltd
mov
bound
adc
lds
mov
imulb
dec
jb
push
push
cmp
hlt
sub
aad
imul
inc
fbstp
icebp
pop
or
add
iret
lds
inc
sub
shl
cltd
insl
xor
inc
adc
lds
les
leave
test
insb
stos
bound
mov
leave
mov
scas
push
xchg
pop
mov
and
jae
xor
stos
jl
mov
mov
mov
cmp
mov
cli
int3
push
in
cmp
inc
addr16
push
push
jbe
jno
jl
xor
jne
sbb
testl
shlb
negl
aaa
repnz
stc
test
stos
sub
call
mov
add
test
loopne
imul
mov
cmp
sbb
iret
test
pop
push
or
xor
fidivrs
loop
cwtl
push
mov
jl
shlb
cld
ds
repz
sbb
iret
lahf
inc
mov
outsl
and
mov
or
mov
xor
or
pushf
mov
fiaddl
fdivrp
xlat
pop
lds
mov
shl
ret
int3
sub
pop
js
fstpt
pop
subl
stos
roll
jb
imul
sbb
mov
test
call
test
sahf
fisubl
dec
int
xchg
in
ds
xor
mov
je
in
xor
dec
ret
shl
pop
jne
jnp
repnz
addb
movsb
add
add
fs
mov
jg
js
and
add
push
bound
sbb
mov
mov
jge
lret
ds
fisubs
lods
cmc
mov
push
xor
lahf
rclb
imul
dec
aam
scas
xor
int
inc
rorb
jecxz
lds
mov
data16
xorb
add
scas
inc
adc
call
adc
jnp
div
mov
shlb
int3
sarb
or
mov
test
clc
mov
fisttpll
mov
imul
push
jb
and
int
out
cli
arpl
add
aad
or
cmc
sub
xor
mov
ljmp
fdivrs
xchg
inc
jle
idivl
cmp
push
dec
jmp
push
scas
addl
dec
add
loop
std
and
pushf
lds
or
push
sti
inc
insb
stc
and
mov
inc
jnp
and
jp
fmul
xor
insl
push
mov
cmp
add
cld
dec
cltd
das
xor
outsb
cmp
ss
lahf
imul
cmpsb
sbb
fsts
fs
mov
lret
mov
or
pusha
add
mov
and
dec
dec
imul
jns
shll
ret
mov
das
scas
adc
loopne
insl
push
and
push
imul
inc
lea
sub
pusha
xchg
scas
xchg
std
mul
sbb
test
push
scas
mov
jg
int
jge
jecxz
cltd
shll
out
mov
mov
dec
test
push
cmc
fnsave
dec
jle
inc
out
or
mov
push
lea
push
sub
mov
mov
inc
daa
in
pop
and
movsl
inc
int3
sbb
fimuls
rep
call
enter
and
add
xchg
pop
pop
sar
in
popa
xor
push
aam
popa
std
arpl
repz
sub
lods
scas
cmp
xchg
adc
pop
push
push
stos
imul
daa
sbb
inc
sub
or
loopne
inc
mov
aam
sbb
jle
cwtl
push
push
gs
clc
push
stos
cmp
popf
sbbb
iret
mov
loopne
adcl
repnz
sti
and
xchg
or
je
sub
and
ficompl
pop
in
adc
inc
and
js
neg
rorb
inc
push
decl
dec
mov
or
aas
pop
addr16
mov
pop
loop
js
fwait
std
mov
sahf
jp
ret
rorb
pop
sti
jo
fstpt
push
imul
sub
jg
adc
sbb
mov
pop
aam
sahf
mov
cmp
lods
loope
fsts
scas
dec
inc
mov
insl
dec
test
xor
cld
sub
std
pop
insl
cmp
cmp
sarl
jnp
loope
icebp
test
jnp
mov
pop
add
sarb
xorl
inc
inc
jp
sub
dec
jo
into
add
pop
adc
call
xor
ror
les
daa
dec
xchg
mov
push
shlb
fidivrs
mov
outsl
test
sub
test
inc
test
pushf
aaa
xchg
insb
add
ljmp
std
int3
push
sbb
ret
pop
lahf
out
cli
push
lret
sub
int
int
sbb
cmpsb
mov
inc
jmp
pop
inc
pop
mov
or
insl
xchg
imul
cmp
xchg
and
mov
xchg
cmp
loope
ss
jns
xchg
movsl
sub
xor
fs
sbb
sahf
fists
xchg
stc
and
or
clc
aaa
dec
jp
mov
inc
pop
lods
lea
cs
inc
test
xchg
scas
iret
adc
inc
dec
jo
inc
je
insb
pop
stos
or
push
xchg
loope
divl
call
sti
aad
shll
sbb
add
mov
dec
sbb
push
loop
sbb
bound
stos
int
mov
inc
stos
fsts
sbb
push
xchg
pop
mov
nop
inc
or
push
and
ss
sarb
jno
out
sarb
loop
notl
cmp
outsl
add
sub
jns
push
aaa
icebp
xorl
outsl
jb
add
adc
orb
hlt
sub
fistpl
test
push
sbb
loope
hlt
push
out
fists
mov
jne
or
leave
xor
stos
dec
lock
daa
pop
ss
mov
or
jno
lret
mov
in
xor
lahf
popa
mov
loopne
sbb
jge
sbb
call
cmp
xchg
lods
jmp
inc
push
stos
lret
lock
xlat
leave
data16
adc
int3
jg
scas
shrb
insb
dec
bound
jecxz
or
out
adc
mov
clc
call
ret
adc
mov
sti
lods
lret
adc
jnp
push
sbb
adc
nop
and
lods
cmp
push
pushf
scas
mov
ret
js
sbb
out
jnp
mov
rolb
pop
jnp
adc
push
xlat
jge
gs
iret
jae
and
adc
mov
das
cs
or
icebp
and
je
sbb
sub
inc
xchg
sbb
les
add
cmc
lock
mov
mov
cs
inc
push
or
stos
into
or
inc
sub
dec
push
sub
jmp
push
mov
stc
in
add
sbb
les
jo
dec
push
rol
insb
and
cli
or
push
and
in
pop
cli
shl
pusha
jle
lods
or
pop
mov
in
inc
and
and
xor
je
adc
negl
dec
or
cmpb
rclb
adc
jle
mov
mov
loop
cmp
flds
dec
cwtl
inc
js
mov
cli
arpl
fsubl
push
ja
std
rol
hlt
loop
into
rolb
insb
movsb
pusha
bound
lds
mov
and
iret
and
sbb
or
out
xor
sbb
clc
dec
push
lods
dec
arpl
rcl
or
outsl
adc
jmp
xchg
jae
test
shll
cmp
xor
mov
pop
push
ljmp
rolb
fcom
sub
fsubs
jl
in
push
mov
adc
lahf
xor
das
addr16
jns
sahf
stos
fcompl
push
xor
sub
pusha
adc
cld
neg
mov
fldl
dec
mov
xchg
loop
xchg
leave
mov
push
dec
mov
cld
in
fcompl
enter
inc
into
aam
into
jnp
es
mov
lds
lret
inc
sbbb
cmpsl
dec
enter
push
lock
mov
sub
ljmp
fsubrs
pop
push
pop
mov
jb
out
dec
pusha
sbb
lahf
mov
aad
push
jns
mov
pusha
lahf
cli
push
xchg
xchg
call
scas
cmp
dec
mov
mov
xor
nop
fsubrs
lea
cmpb
push
mov
xor
outsb
mov
rolb
xor
push
fs
mov
inc
mov
shl
iret
negb
jno
mov
fucom
push
mov
paddd
orb
fldt
push
daa
outsb
insl
or
dec
mov
iret
xor
add
xor
es
jnp,pn
popf
mov
sbb
mov
cmc
ja
test
jecxz
sub
pop
popf
adc
pop
sahf
sbb
popf
sub
cmp
inc
ss
lcall
push
fadd
mov
dec
or
sti
xchg
popl
push
push
shl
test
fisubrs
xchg
adc
fsubp
rcrl
lea
inc
imulb
push
pop
ljmp
xor
jle
lea
push
aaa
push
repz
loop
sub
outsl
lcall
push
or
ret
xchg
int
inc
test
push
push
repz
js
in
jo
mov
out
push
ljmp
push
push
jle
push
shll
test
stos
inc
cmp
mov
mov
xchg
std
pop
jns
pushf
jne
sub
or
cli
mov
ffree
jg
repnz
into
stc
icebp
or
adc
cli
push
jb
aaa
lret
aaa
outsl
mov
pushf
popa
jns
idivb
adc
gs
call
movsb
xchg
cmp
push
add
cmp
jne
pop
movsl
lahf
mov
sub
mov
cld
loopne
pop
mov
cmp
dec
adc
push
pushf
inc
jb
dec
cld
test
mov
mov
mov
push
fwait
push
cmp
dec
push
and
ja
pusha
sbb
movb
inc
and
and
loope
or
roll
xchg
xchg
push
imul
xchg
outsb
xorb
pop
lds
mov
roll
fnstsw
dec
jmp
pusha
add
cmpl
dec
call
ja
jno
out
push
mov
shrl
xchg
outsl
sahf
add
and
xchg
cmpsb
sbb
repnz
inc
orb
push
or
cs
test
or
xor
stos
fimull
ljmp
mov
stc
xor
pop
in
jno
mov
jecxz
inc
out
movsb
cld
out
out
shrb
mov
cltd
out
mov
lahf
fistps
popa
mov
pop
cmp
xchg
mov
adc
inc
fdivs
adc
cmc
cmp
push
popa
cmpsl
sub
jge
je
jmp
jbe
xchg
push
xchg
xchg
dec
cli
cmp
mov
push
insb
pop
dec
addr16
sub
repnz
inc
xlat
and
inc
enter
or
xor
push
dec
lods
cmc
or
aas
mull
iret
enter
cwtl
fstpl
mov
dec
lret
cmp
adcb
punpckhdq
jno
xchg
pop
inc
mov
cmp
je
out
xor
icebp
pop
fcomi
xchg
push
movsb
adc
lock
pop
and
dec
inc
xchg
test
pop
dec
pop
lahf
pop
sarl
mov
fwait
or
lods
pop
sbb
adc
xchg
push
test
scas
cmc
xor
mov
push
xlat
rcll
hlt
sbb
lea
cmp
and
gs
sub
mov
pop
mov
loope,pn
cmp
jnp
push
stos
imul
cmpsl
inc
ret
mov
jp
ficompl
fisttpl
stos
mov
std
xchg
lods
movsl
inc
sub
in
dec
sbb
jbe
adc
mov
jg
mul
stos
cmpsb
dec
mov
insb
mov
mov
lock
xlat
sub
xchg
in
insl
jno
pop
cmp
cld
vmulss
sub
fmull
sbb
pop
insb
push
push
je
add
dec
loopne
dec
std
aas
loopne
jmp
daa
test
push
push
call
mov
xor
in
push
test
adc
mov
aas
inc
addr16
mov
outsl
test
inc
dec
jle
int
inc
push
ret
jns
xchg
ret
sub
test
mov
xor
pop
ja
fildl
lds
mov
aad
add
xchg
test
and
clflush
rcl
jle
faddl
int
aam
fwait
cmp
outsb
cltd
jg
sbb
push
mov
inc
adc
jae
mov
out
cmpsl
leave
push
jl
popf
mov
sbb
and
ss
mov
sbb
test
nop
dec
fbstp
ret
ds
cmp
jnp
xlat
nop
xchg
add
and
rol
pop
mov
subl
push
pop
add
jno
mov
out
sbb
push
negb
push
aam
orb
icebp
adc
iretw
mov
lock
loop
mov
int
test
js
sbb
adc
pop
add
mov
out
movsb
sub
cmp
call
in
mov
in
mov
pop
xchg
push
std
xor
daa
scas
sub
mov
dec
stos
rclb
add
sarl
lock
popl
aas
sbb
repz
out
dec
mov
jecxz
add
arpl
push
fidivs
pop
xor
mov
sbb
sti
jle
rolb
fistpll
sarb
or
mov
cltd
inc
insl
in
loopne
jecxz
mov
pushf
nop
sub
int3
js
push
fs
lea
inc
aas
insl
popa
iret
test
gs
fbstp
sbb
mov
push
lock
mov
cmp
push
dec
push
dec
frstor
jne
out
push
imull
lahf
push
ljmp
mov
rcrl
js
xlat
cmc
stos
iret
inc
insb
pop
xor
jl
in
dec
popl
xor
dec
cltd
sbb
testb
test
insb
aas
aad
fs
jo
out
mov
cmp
mov
fiadds
scas
jo
push
pop
dec
adc
lock
fsubp
jecxz
nop
aam
xor
adc
xor
add
rorb
pop
add
in
aam
add
jno
dec
test
repnz
mov
pusha
ficoms
fbstp
imul
dec
iret
es
push
sub
daa
push
mov
test
cmc
or
sbbb
out
push
icebp
or
movsl
ret
jmp
sti
mov
ror
cld
and
mov
mov
out
daa
jns
mov
sub
clc
rol
sbb
adc
push
mov
sub
iret
adc
fistps
outsl
xor
cli
inc
dec
mov
fidivl
sub
cmpsb
aas
cmp
rcl
lret
pop
sahf
xchg
push
dec
pop
mov
bound
jns
cmovs
xchg
stos
lret
test
pop
lock
loope
add
jg
push
mov
jge
mov
shl
add
push
loop
jne
roll
leave
cs
push
push
inc
ss
push
arpl
sub
adc
mov
jg
lret
xchg
sub
push
js
subl
xchg
dec
mov
sahf
pop
adc
icebp
sbb
sbb
or
mov
sub
dec
mov
xchg
fstl
int3
mov
xchg
or
jbe
ljmp
push
repnz
outsl
dec
test
rclb
pop
pusha
lods
cs
daa
mov
or
sbb
sbb
in
push
dec
lods
pop
push
xchg
jb
sub
test
rcl
jae
mov
xchg
xor
cld
pop
dec
mov
fadd
sbb
aad
add
mov
outsb
mov
jl
or
int3
lods
test
sbb
fists
or
lea
mov
xlat
dec
sub
and
inc
loopne
pop
aad
cmpsb
aam
xchg
xor
mov
xchg
cmp
mov
mov
das
jb
mov
mov
cmp
mov
mov
sbb
xorb
aaa
dec
pushf
out
inc
or
xor
jg
jne
xlat
mov
js
sbb
pop
fcoms
mov
or
call
pop
xor
in
addr16
aas
aas
jb
int3
sub
and
arpl
cltd
jg
data16
cld
mov
adc
add
mov
jle
jbe
icebp
fdivrp
in
aam
bnd
mov
pop
sub
or
sbb
int3
xchg
jae
add
jecxz
pushf
les
xor
or
out
in
xor
test
push
mov
in
ja
mov
xchg
push
jno
sbb
xor
mov
dec
inc
test
idivb
ss
cmp
mov
mov
jge
dec
mov
imul
popf
and
jge
sbb
push
rcr
imul
pop
mov
test
or
push
lret
test
stc
push
xchg
repz
cmp
mov
mov
mov
and
adc
insl
inc
mov
jbe
add
dec
inc
push
lds
pop
push
jp
leave
out
ret
in
int
movsl
sub
inc
fcmovnbe
lret
in
stos
jne
aad
pop
jae
jge
add
test
call
loope
pusha
push
scas
adcl
lcall
insl
stc
outsl
sbb
sbb
jnp
xchg
into
add
and
rcl
fwait
out
dec
sub
movsl
popa
jecxz
lods
mov
cmp
mov
mov
movsb
xchg
je
int3
out
cli
or
or
or
lods
push
arpl
or
jb
je
lods
sbb
adc
aaa
jmp
es
in
sub
sahf
jle
out
and
pop
pop
in
add
outsb
lock
das
mov
mov
and
adc
inc
and
xor
adc
shlb
cmc
and
adc
inc
and
xor
adc
shlb
cmc
and
adc
jo
inc
and
and
add
loopne
lock
mov
gs
adc
inc
and
iret
mov
lcall
xor
faddl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
divb
movb
mul
loop
repnz
inc
push
ss
mov
push
push
inc
divb
movb
xchg
jbe
data16
inc
push
ss
es
push
push
inc
notb
out
or
lock
cmpsb
scas
xchg
faddl
add
pop
and
push
out
lds
sbb
mov
adc
push
test
pop
gs
dec
jns
jecxz
insl
popf
sub
or
fcmovu
jmp
xor
pop
or
fisubrs
push
iret
dec
jbe
sbb
popf
jbe
or
test
test
xorl
loop
push
mov
fucomi
pusha
pop
enter
push
test
xchg
pop
mov
lds
cmp
lcall
sbb
jae
add
ficomps
jecxz
push
dec
mov
or
jbe
rolb
or
daa
and
mov
out
loop
xchg
xchg
data16
inc
cmp
dec
mov
dec
push
je
mov
leave
mov
mov
mov
mov
bound
mov
gs
xor
push
and
cmc
lock
loopne
in
ljmp
xchg
adc
push
pop
inc
add
push
cmp
xor
xor
mov
mov
xchg
jbe
es
push
inc
push
ss
pushw
push
push
inc
divb
movb
xchg
jbe
es
push
inc
push
ss
pushw
push
push
inc
divb
loop
insb
xchg
pop
gs
xchg
stos
nop
push
std
push
rorl
divb
sti
push
jmp
jecxz
lds
lahf
in
mov
add
aaa
test
dec
mov
push
rorb
xchg
aas
dec
dec
repz
inc
pop
sbb
push
mov
enter
repnz
out
scas
mov
jg
je
adc
add
and
arpl
ret
std
lds
orl
lret
das
jbe
ja
jl
lea
mov
xchg
dec
pop
mov
insl
cmp
push
mulb
pop
mov
sub
mov
xchg
inc
add
jg
jne
push
popa
mov
into
push
insb
fisttpll
fwait
or
mov
push
fnstsw
mov
xchg
int3
jo
xlat
shl
dec
mov
nop
jge
mov
lock
sbbb
inc
push
xchg
jp
adc
or
jnp
jae
in
push
mov
iret
out
jnp
loopne
jmp
mov
xchg
sub
inc
inc
outsl
scas
inc
mov
sub
add
in
outsb
aad
fisubrl
cld
loopne
mov
aas
aad
lock
pop
add
ror
divl
outsb
or
fwait
pop
sahf
mov
xor
mov
pushf
push
ss
pop
xchg
xchg
lret
sub
xor
jg
push
rcrl
and
ret
dec
pop
imul
mov
outsl
test
or
or
push
adc
xchg
pop
jmp
fwait
jae
add
out
xor
or
clc
lahf
out
push
fidivrs
push
push
pop
and
cmp
ljmp
cs
std
inc
mov
ljmp
ja
or
je
ljmp
notl
outsl
gs
test
mov
in
sub
cmpsb
pop
mov
xor
insl
xchg
out
faddl
stos
push
shll
in
xor
icebp
add
push
dec
movsb
je
lcall
imulb
and
sub
fiadds
bound
xchg
xor
ret
stos
add
push
insb
cmpsb
cmc
ja
out
repnz
inc
mov
outsl
or
cmp
sub
arpl
sbb
daa
jne
mov
inc
lds
adc
stos
push
inc
sahf
jnp
jp
jo
or
push
out
add
pop
mov
popa
sub
add
jmp
lods
mov
jg
fldt
test
in
adc
stc
lret
add
add
cltd
dec
enter
popa
mov
jbe
add
adc
mov
adc
dec
mov
push
popf
test
cld
je
loopne
imul
fucomip
divb
ret
xor
stos
jno
mov
push
inc
cmc
cld
push
repnz
lods
sahf
lds
mov
fldl
aad
fdivrs
xchg
dec
push
and
daa
mov
fs
add
mov
cmp
mov
lcall
popf
int
sarb
out
out
rcl
mov
sahf
xchg
xor
decb
dec
or
lods
or
fistl
push
jecxz
and
stos
jl
and
in
lret
inc
ds
das
sbb
dec
mov
mov
sbb
lret
pop
popf
in
adc
jb
xchg
jns
pop
stos
ja
fisttps
add
scas
push
fcmovnbe
repnz
pop
mov
and
sub
jns
cwtl
fwait
mov
fnstcw
mov
push
arpl
push
sbb
cwtl
cmpsb
movsl
xchg
out
fcmovu
add
inc
push
and
shll
je
sbbb
jecxz
ret
mov
in
rcll
cmp
pop
out
stc
imul
and
or
nop
pusha
adc
arpl
pop
aad
inc
gs
out
pushf
mov
lds
cmp
movb
fildl
xchg
repnz
dec
xor
cmp
and
das
mov
mov
ljmp
xor
cs
mov
hlt
in
aaa
lds
test
mov
adc
mov
mov
and
sub
gs
js
fwait
scas
les
push
adc
mov
xchg
add
cs
js
subb
mov
push
mov
or
cmp
dec
cmc
imul
adc
mov
dec
xchg
xor
xchg
int
lds
pop
push
cmpb
xor
in
aad
lock
adc
sub
cmp
xor
loope
enter
sahf
dec
jp
xor
shlb
cli
lds
mov
outsb
cs
js
push
mov
enter
notb
mov
pop
push
sahf
leave
cmpsb
or
adc
lcall
iret
scas
ror
mov
mov
insl
jg
adc
mov
outsl
call
mov
testb
xchg
mov
jno
mov
adc
lds
imul
out
jbe
mov
aas
fidivrs
test
xor
or
es
ja
jae
sub
push
loopne
movb
std
sbb
fisubl
add
insl
xchg
cltd
xor
sbb
lcall
push
cmpsb
push
xchg
ljmp
sub
orb
xor
jo
or
pop
lock
pop
xchg
mov
test
pop
dec
lret
mov
je
xchg
scas
or
mov
or
dec
pop
or
add
push
lret
xchg
pop
jnp
shll
rorb
sbb
rol
xor
cs
dec
pop
loope
push
push
fistpll
and
pusha
pop
mov
mov
xor
pop
adc
inc
cli
fsub
mov
jmp
mov
xchg
xor
cmp
arpl
sub
mov
aam
test
sbb
pop
cltd
pop
xor
jle
fcoml
jge
xorb
lds
out
cmpsb
pop
dec
inc
pop
stos
pop
das
dec
adc
mov
test
cmpsl
dec
es
insb
data16
pop
sti
mov
mov
or
ret
push
jo
cmp
xor
push
and
inc
and
jecxz
mov
outsb
jne
and
inc
stc
test
jmp
cmp
xor
xor
push
out
into
dec
lahf
je
ja
mov
mov
test
mov
into
test
decb
sahf
adc
push
mov
lret
call
movsl
ror
inc
and
jno
popl
into
std
add
pop
lds
mov
mov
jbe
jecxz
lret
jae
dec
adc
jge
add
add
stc
mov
pop
shrb
cli
cmp
in
outsb
sbb
sbb
mov
xor
stc
movsb
std
mov
push
push
notl
or
mov
adc
dec
sbb
xorb
sub
or
xchg
xchg
ret
push
test
adc
dec
mov
les
test
jmp
es
outsl
arpl
test
adc
adc
arpl
sti
mov
notb
pop
je
pop
sub
dec
in
add
push
inc
sub
jno
lea
sbb
sbb
jb
mov
pop
or
dec
xchg
mov
ds
fcmovnb
in
jl
mov
lret
fmuls
clc
jo
into
hlt
addr16
sarb
jnp
cmp
dec
jno
es
into
jmp
jbe
nop
arpl
lods
xchg
mov
ret
pop
cltd
push
cmp
das
in
push
jae
mov
cmc
imul
pop
mov
jb
push
cltd
fisubrl
cmp
push
xchg
ds
inc
outsb
xor
cwtl
push
out
xor
aad
pavgb
xchg
fcomps
mov
dec
add
imul
lods
jns
jecxz
mov
jle
push
jmp
jmp
incl
xchg
in
filds
mov
mov
fidivs
insb
dec
repz
popa
test
or
ret
loop
sub
outsb
std
popl
ss
xor
adc
cmc
hlt
xor
cmp
sub
cmp
jne
ljmp
xlat
notl
dec
pop
popa
int3
mov
loop
lods
gs
test
in
mov
aas
pop
fimull
and
sub
or
sbb
in
xor
or
arpl
pushf
ret
dec
cmp
mov
jno
std
push
mov
adc
sub
clc
movsl
stos
repnz
pop
lds
insb
sbb
hlt
pusha
mov
out
sbbl
gs
mov
jg
push
sbb
sbb
dec
loope
mov
cmp
mov
shll
inc
dec
je
mov
sbb
mov
cmp
push
mov
sbb
ss
mov
cmp
mov
stc
ret
push
jle
adc
pop
xchg
sub
clc
data16
ljmp
imull
inc
hlt
push
xchg
out
andb
cmp
push
lcall
mov
sbb
push
xorb
insb
or
fwait
add
lods
dec
xlat
insb
lds
add
cmp
out
mov
dec
andl
rcl
in
idivl
outsb
cmp
mov
lret
outsb
cltd
out
rcll
add
jge
sarb
fistl
ja
cmc
push
mov
push
mov
out
xchg
cmp
adc
out
and
xchg
and
mov
loop
mov
lods
inc
mov
and
or
dec
subb
jo
and
out
addr16
int
sbb
adc
pop
push
pop
int3
mov
adcl
addr16
inc
cld
adc
fsubl
and
mov
iret
js
dec
loope
mov
aaa
or
cmp
mov
mov
push
or
jl
mov
lahf
aam
push
in
push
push
and
or
sbb
cmp
xchg
aad
lea
daa
sub
test
cltd
imul
cli
negl
sar
sbb
cltd
enter
insl
or
adcl
nop
insl
mov
mov
mov
lods
mov
in
enter
xchg
push
cs
mov
xor
das
aas
pop
fmulp
cld
rcrl
jnp
test
cmpsb
test
outsl
pop
or
adc
dec
fildl
jecxz
sbb
fdivr
pushf
mov
adc
jo
ljmp
ja
sbb
lahf
ljmp
test
dec
add
ds
xor
pop
out
xchg
ljmp
mov
bound
aad
setns
sbb
push
dec
dec
cli
lods
or
repnz
push
out
jecxz
mov
dec
dec
and
mov
and
test
add
loope
int
jb
mov
mov
sti
cmp
xor
jmp
clc
lods
jge
add
scas
add
jmp
sub
stc
mov
mov
xor
repz
fnsave
mov
jmp
mov
sub
sbb
outsl
mov
aad
mov
xchg
inc
mov
push
push
mov
hlt
repz
pop
xchg
pop
dec
mov
mov
pop
mov
jmp
out
mov
mov
jle
shl
mov
sbb
arpl
ffreep
iret
push
pusha
sub
push
repnz
xchg
and
fdivrs
jecxz
xchg
sub
repz
mov
dec
not
shlb
xchg
mov
lahf
aad
cltd
cmp
daa
mov
adc
or
divb
sub
jmp
push
stc
fdivrs
and
sub
mov
cmc
add
and
stos
out
inc
dec
add
mov
and
push
xchg
dec
mov
add
iret
iret
pop
gs
or
aam
nop
and
xchg
stos
std
inc
jp
lea
aam
in
mov
jbe
xlat
pop
lock
pop
lcall
push
jecxz
std
icebp
ret
mov
xchg
pop
jne
out
fcmovnu
push
sbb
adc
sbb
outsl
mov
daa
sbb
popl
daa
or
decb
int
pushf
add
sarb
inc
subb
test
or
fsubr
mov
add
aas
cmp
sarb
daa
subl
inc
dec
es
fnstsw
les
jb
jecxz
es
notl
out
ret
out
push
sub
mov
pop
ljmp
int3
xchg
sbb
jnp
pop
mov
cmp
cwtl
add
cld
shlb
push
push
fsts
jge
call
pop
int
pop
es
pop
scas
push
leave
repz
dec
pop
dec
clc
add
dec
xchg
lods
pop
mov
idivb
stos
inc
pop
lods
into
xchg
cs
ss
aam
or
mov
push
ljmp
add
mov
xor
dec
sti
mov
push
test
out
mov
imul
cli
sbb
stos
int3
pop
fld
leave
hlt
and
cli
lock
or
ljmp
adcb
mov
mov
jnp
inc
fcmovb
xchg
or
les
aad
mov
cmp
insb
cmp
mov
in
pop
sbb
jbe
mov
jp
jbe
lods
dec
and
dec
or
push
bound
jecxz
sbb
cld
shll
mov
into
cmp
lcall
leave
xchg
insb
pop
int
dec
lahf
mov
add
inc
dec
ror
ss
cmp
lahf
mov
jae
loope
sbbl
pop
enter
andb
lods
jmp
out
outsl
cmpsb
xchg
lds
scas
mov
mov
outsl
movsl
lret
inc
or
mov
jl
cmp
inc
dec
in
jns
lcall
out
mov
or
jmp
push
push
mov
and
mov
add
scas
movsb
nop
in
dec
mov
in
mov
out
in
in
jp
into
in
inc
shll
pop
loopne
ja
pop
loop
sbb
aaa
sbb
clc
cmpsb
popf
dec
sbb
data16
in
es
enter
adc
sbb
cmp
cmpl
adc
mov
lcall
add
dec
push
dec
push
xchg
ret
jg
push
cmp
xorl
movsb
hlt
int3
mov
sbb
mov
jecxz
mov
inc
pop
or
push
push
jb
sub
lahf
lahf
mov
xchg
sbbb
fnstenv
jecxz
cld
fisttpll
aas
stc
pushf
xlat
xchg
cmp
jg
and
pop
xchg
mov
xchg
inc
inc
cld
aad
lea
fbld
xchg
add
mov
xlat
pop
das
sbb
xchg
adc
mov
sub
cli
ds
add
inc
addr16
shlb
cmp
inc
inc
andb
and
pop
jbe
addr16
dec
add
lods
and
fbstp
add
adc
xchg
lods
clc
btc
flds
gs
inc
test
inc
enter
dec
daa
push
push
jno
xchg
cmp
or
push
inc
test
xchg
je
pop
xchg
add
fnstcw
xor
sbb
imul
pop
mov
add
mov
push
fiadds
sbb
in
daa
jmp
xor
mov
jnp
insb
pop
cltd
test
adc
fiaddl
mov
xor
sub
popf
add
lock
outsl
inc
pop
cmp
inc
add
pushf
pusha
cmp
pop
dec
push
jmp
add
stc
test
cmp
inc
neg
popa
xor
js
and
fwait
pop
push
inc
and
and
jmp
sub
daa
add
jo
sbb
rcl
mov
repz
mov
mov
sbb
inc
inc
mov
mov
sbb
xor
pop
js
xchg
ds
lcall
arpl
xor
mov
jno
mov
in
insl
div
es
inc
dec
call
pop
push
xor
shl
int
ret
push
shlb
dec
xchg
dec
and
icebp
hlt
in
aam
in
add
cmc
adc
shlb
mov
inc
movsb
andb
mov
clc
fwait
xorb
andb
pop
outsl
addr16
mov
inc
loop
idivb
mov
jmp
aad
cli
cmp
adc
cmp
and
dec
pop
add
mov
adc
in
dec
xchg
inc
mov
pop
sarb
fbstp
arpl
push
leave
mov
xchg
sbb
dec
inc
sub
xor
xor
ja
jbe
inc
xchg
sarb
sbb
rcrb
sbb
mov
mov
mov
popa
std
nop
enter
dec
or
push
test
leave
je
popf
sbb
inc
xchg
cmp
decl
test
in
mov
add
shrb
mov
mov
and
scas
inc
jge
shrl
xor
sbbb
pop
inc
ds
pop
movsb
push
aaa
xchg
dec
das
sarb
dec
push
or
xchg
xor
int3
sahf
mov
lcall
scas
mov
mov
enter
jmp
fsts
jle
mov
jle
inc
test
mov
pop
push
clc
pusha
in
xchg
lods
mov
xchg
leave
xor
xor
xor
loope
icebp
and
cmpsb
scas
mov
xchg
jg
jb
es
cmpl
mov
lret
icebp
in
jae
inc
rcr
xchg
xchg
repnz
push
jmp
lea
or
popa
es
fwait
or
in
jb
loopne
and
dec
sbb
roll
mov
lea
aaa
inc
xlat
push
sub
cmp
addr16
sti
aas
fistpl
popa
out
ja
ss
adc
sub
popf
fldenv
loopne
push
in
jae
aam
out
or
jnp
dec
insb
subb
or
js
ds
xlat
xchg
mov
shrl
or
in
enter
pop
test
inc
push
push
pusha
pushf
inc
movsl
pop
or
push
ljmp
xor
adc
repz
sbb
outsb
pop
push
aas
out
pop
and
cld
test
fildll
xchg
je
shl
sbb
and
repnz
mov
jo
pop
arpl
inc
sbb
sub
out
arpl
pop
mov
inc
xchg
outsl
cld
sbb
jle
out
stc
inc
push
xor
mov
cmc
inc
ss
push
jg
enter
xchg
js
in
or
pop
cmp
pop
es
mov
jbe
push
ljmp
repz
fildl
lret
data16
in
mov
mov
mov
je
add
sub
js
mov
fmuls
pop
out
sub
in
mov
scas
jmp
mov
inc
xlat
cmp
hlt
shrb
lods
cltd
test
mov
mov
dec
or
sub
shlb
mov
push
sbb
das
jne
cmpsb
push
mov
adc
into
imul
lahf
idiv
addb
not
cmpl
cmp
into
test
mov
jo
bound
xor
cmp
jne
sbb
loope
or
xchg
imul
adc
test
mov
adc
cld
mov
fcmovb
lock
mov
stos
sbb
mov
leave
jnp
xchg
dec
inc
sti
mov
push
inc
hlt
jmp
scas
cmpb
sub
xchg
push
xchg
in
cltd
jo
fs
aam
ud2
sbb
test
movsb
pop
xor
scas
fnstcw
loop
aad
pop
or
sbb
stos
nop
jle
bound
cmpsl
or
cmp
in
test
hlt
inc
mov
enter
sub
loopne
cltd
lahf
aam
mov
dec
cmp
and
push
sti
lds
mov
push
pop
test
pushf
mov
movsb
lea
pop
jp
cld
dec
jnp
xor
sbb
sub
cmp
jmp
cmp
aam
stos
lea
sbb
sub
decb
cmp
neg
nop
aas
int
sub
sahf
ljmp
sbb
inc
push
cmc
in
cmp
call
stc
add
push
pop
fwait
fwait
adc
lcall
add
cmp
mov
jge
repnz
and
lock
xchg
mov
xchg
xor
push
pop
test
aas
icebp
push
mov
stos
aam
mov
xor
adc
xor
mov
dec
and
data16
jecxz
cli
test
pop
inc
cltd
in
ljmp
and
leave
cmpsl
add
or
dec
cmc
inc
pop
sarl
mov
cmp
mov
push
ds
dec
hlt
xor
popf
mov
imul
les
ffree
inc
xlat
jne
and
jbe
and
dec
inc
pop
rclb
nop
push
adc
out
mov
fidivs
fbld
and
inc
hlt
fsubrl
in
push
sub
nop
cld
cwtl
fsts
lahf
or
lock
rorl
jae
insl
rorb
leave
inc
insb
lcall
int3
jbe
adc
lret
iret
cmp
sahf
jns
sbb
or
push
mulb
cmpsl
xchg
movb
xchg
jbe
es
push
inc
push
ss
pushw
push
push
inc
divb
movb
xchg
jbe
es
push
inc
push
ss
pushw
push
push
inc
divb
movb
rolb
and
inc
jb
pushw
pop
push
mov
jb
mov
cmpsb
out
push
xchg
jbe
mov
push
inc
jno
push
scas
push
jmp
sbbl
ret
mov
ret
div
or
adc
and
xor
pop
push
imul
mov
mov
shr
jecxz
mov
add
adc
and
xor
pop
push
imul
mov
mov
shr
jecxz
repz
cmp
pop
push
pop
push
dec
pop
sub
or
cli
fisubrl
jecxz
add
js
loopne
and
cmp
movb
inc
sub
sub
shlb
incl
lret
ret
fistl
jmp
stc
mov
xchg
in
aad
les
inc
pop
lcall
icebp
sahf
ror
mov
lret
or
adc
cmp
arpl
rclb
out
lret
mov
mov
in
pusha
and
mov
sti
or
lret
rcrl
inc
pop
lods
xchg
imul
ret
cs
ds
sti
pop
pop
mov
or
adc
fdivl
push
xchg
arpl
mov
arpl
xchg
mov
repz
push
sbb
jmp
dec
adc
fcmovnu
push
es
inc
or
lods
arpl
dec
sbbl
lret
ret
fcmovnbe
jmp
sti
repz
sbb
sub
cmp
dec
inc
pop
push
imul
out
xchg
shr
mov
mov
test
jle
pop
inc
jle
int
sbb
push
sbb
cmp
enter
scas
scas
nop
lahf
scas
mov
push
jo
push
mov
xor
fucomi
rcr
mov
fcmovnbe
jmp
sti
repz
sbb
sub
cmp
dec
inc
pop
push
imul
mov
mov
shr
jecxz
repz
sbb
sub
cmp
dec
inc
pop
push
imul
mov
les
mov
mov
and
xlat
js
icebp
lock
rcll
lods
shl
mov
cltd
stc
cltd
in
sbb
xchg
arpl
popf
cmp
inc
jne
insl
mov
fwait
test
lea
daa
sub
repnz
idiv
inc
jp
ss
pushf
inc
lahf
adc
mull
sbb
test
xorb
sub
test
xchg
cld
cmp
cwtl
sti
and
mov
popf
sbbl
mov
ret
leave
mov
gs
inc
popa
test
scas
cmp
stos
aam
stos
cmpsl
xor
mov
mov
mov
cmp
pushl
mov
inc
xor
movsb
test
sub
and
adc
popf
xor
lock
test
add
daa
and
aam
sub
fcoms
pop
mov
gs
gs
fadd
fisttpl
lods
in
loopne
dec
sahf
pushf
dec
addr16
dec
scas
cmp
mov
cmp
rolb
push
mov
insb
and
fs
xchg
scas
jnp
inc
mov
cwtl
sbb
mov
sub
fmull
sbb
pop
jno
add
sub
sbb
or
jns
fdivp
enter
jne
mov
das
mov
cmp
fmuls
mov
sub
out
inc
ret
lods
xchg
lods
movsb
sub
pop
clc
idiv
mov
das
add
iret
in
jge
into
aaa
xor
in
popa
out
addb
stc
mov
dec
push
inc
and
cwtl
outsl
stos
mov
data16
in
adc
xchg
push
jmp
mov
pusha
adc
sbb
push
loop
add
and
pusha
movsl
or
inc
sbb
lret
clc
enter
jns
mov
mov
inc
add
cld
les
xchg
ljmp
mov
inc
or
and
mov
in
mov
pop
pop
cmp
imul
sub
lock
jne
sub
in
pop
xlat
frstor
and
imul
push
fwait
lods
xchg
xchg
jge
outsl
fidivrl
jbe
out
loop
pop
ss
lds
mov
pop
or
sbb
enter
or
cmp
dec
lret
fwait
dec
loopne
mov
mov
mov
mov
in
loopne
dec
ljmp
pushf
cmc
hlt
cmpsl
xchg
push
ret
adc
pop
out
loope
pop
add
dec
negl
jno
lods
clc
and
sub
sub
pop
ret
pusha
stos
bound
sub
popa
push
mov
fisubrl
pop
adc
cmp
lret
insb
pop
mov
inc
dec
sub
pop
dec
mov
repz
jmp
mov
jmp
mov
testl
mov
aas
nop
push
xor
inc
push
imull
adc
add
mov
ds
mov
mov
inc
movb
pop
pop
pop
loope
xchg
xchg
aam
pop
add
adc
ds
xchg
in
add
int
cs
inc
aas
jo
pop
repnz
test
int
or
pop
mov
mov
int
ljmp
ret
ss
mov
push
ss
adc
das
dec
rcl
outsl
mov
lret
loopne
push
outsb
icebp
dec
andl
lret
xor
rcrb
call
xchg
or
jge
dec
xor
test
dec
ds
pop
mov
gs
sbb
sub
call
fcompl
lret
inc
call
xchg
sub
lds
mov
jo
sbb
aaa
sbb
into
cmp
mov
jbe
outsl
popf
push
or
pop
lock
dec
pop
int3
mov
cmp
stos
sub
mov
fisttpll
lods
dec
xchg
inc
shll
cmp
cmp
adc
inc
cli
fcoml
push
movsl
out
out
jne
xchg
sbb
enter
popf
test
mov
mov
mov
xlat
lea
sbb
sahf
nop
ficoml
xorl
and
sbb
cmp
and
scas
out
mov
mov
iret
jns
pop
scas
pop
jmp
mov
mov
loop
mov
and
ss
repnz
xchg
cmpsl
and
rcl
daa
aas
xor
filds
les
pop
shll
lea
jns
dec
cmp
sub
adc
pop
sub
mov
xor
in
pop
xchg
dec
mov
fwait
repz
cmc
inc
arpl
cmp
mov
or
xchg
push
repz
xlat
mov
jo
int3
mov
test
mov
pop
aad
int3
negl
inc
in
inc
orl
daa
addr16
scas
mov
jo
lret
mov
dec
mov
mov
data16
sbb
stc
inc
jne
iret
mov
dec
and
push
out
inc
mov
sahf
js,pn
ficoms
popf
popa
cld
sbb
xlat
nop
cltd
push
int3
popl
sarl
pop
ss
mov
sub
mov
lods
fwait
mov
ds
cmp
jge,pt
xchg
popa
int3
leave
orb
std
cmp
add
sub
push
adc
js
sbb
lds
and
inc
push
push
jmp
mov
push
outsb
stos
arpl
fidivl
push
daa
int
call
jmp
mov
mov
fcoms
dec
cmp
mov
adc
jecxz
xchg
insb
icebp
cmp
sahf
jmp
inc
scas
scas
test
mov
daa
pushf
mov
sub
sbb
mov
mov
dec
stos
sahf
test
out
outsb
lret
cmpsl
pusha
jo
jbe
cmpb
and
xorl
pop
pop
jp
sbb
rorl
mov
je
inc
adc
icebp
hlt
insb
pop
push
cmp
clc
fwait
sbb
ja
xchg
push
adc
mov
ret
idivl
ret
and
ss
ljmp
int
mov
mov
pop
pushf
ja
cltd
push
inc
mov
loop
pop
cmp
rcr
mov
pop
xchg
int3
cmp
out
or
out
lcall
jmp
adc
xlat
cmp
into
pop
jnp
and
push
pop
sar
cld
mov
fimuls
sub
lock
xor
push
jae
dec
insl
xchg
out
and
ss
pusha
cmc
xchg
mov
aad
dec
xchg
notb
push
inc
ss
hlt
mov
mov
into
mov
testb
sbb
add
mov
push
aas
rorb
add
xor
xchg
jb
push
inc
hlt
das
sub
fst
jge
add
push
lcall
ds
cmp
lret
sbb
movsb
movsl
clc
stc
aas
push
scas
into
sub
mov
xor
shrb
pop
cmpl
jno
in
inc
cmp
pop
fmul
add
lahf
adc
lcall
dec
aam
add
ss
insl
stos
and
sbb
add
mov
int
xchg
mov
lahf
lods
cwtl
jo
add
ja
mov
inc
xchg
les
subb
dec
pop
xor
roll
mov
test
sarl
test
or
ds
add
adc
ds
mov
negl
mov
pop
push
popa
push
jle
push
push
add
pop
out
push
mov
addr16
jno
mov
push
cmp
xor
rcll
bound
ljmp
into
and
lret
jno
iret
ret
fildl
das
or
sbb
stc
xor
out
cmp
cs
mov
pop
cmp
sub
mov
xchg
sbb
lods
jnp
out
adc
jns
dec
clc
icebp
xchg
pop
add
mov
jno
daa
sbb
into
mov
push
mov
subl
or
movsl
xchg
sbb
lods
xchg
out
loope
mov
pop
fdivrp
in
or
jecxz
xlat
pop
hlt
inc
out
and
aaa
cmp
pop
dec
iretw
push
mov
jmp
jnp
hlt
mov
shll
mov
aaa
jge
scas
js
imul
enter
push
popa
adc
imul
pop
xorl
lods
cmc
cld
mov
xchg
andb
test
sbbl
aad
push
bound
mov
mov
jle
pop
push
mov
lock
stos
jge
testb
test
mov
cmpsl
mov
or
pop
iret
mov
insb
sbb
movsl
pop
std
leave
adc
out
dec
push
cmp
notb
aad
test
notb
mov
in
mov
loopne
mov
pop
sub
lods
mov
mov
daa
insb
jb
les
sbb
in
fs
pop
mov
mov
loopne
ret
mov
enter
leave
lcall
out
nop
ret
outsl
pop
loope
cmpb
ja
popf
sub
std
sub
les
fstpl
pop
fsub
test
push
jl
mov
push
adc
in
or
scas
cwtl
push
mov
lds
cli
mov
add
std
jl
stos
ds
stos
push
mov
push
into
mov
mov
add
popf
cld
sub
scas
movsl
lock
ja
sub
mov
popa
dec
and
cwtl
dec
jae
xchg
sti
mov
cmp
lret
outsb
data16
mov
mov
arpl
mov
push
std
or
pop
or
xor
mov
add
dec
push
mov
es
xor
test
ljmp
fcoml
sbb
or
pop
xor
add
imul
dec
cmpb
in
push
add
mov
int
scas
pop
insb
pop
insl
sub
push
sub
sti
inc
insl
jnp
dec
call
xor
dec
xchg
fwait
jecxz
in
cmpl
xchg
lods
mov
test
push
mov
outsl
push
adc
or
lock
push
pop
repnz
inc
ret
in
xorb
xor
sub
mov
push
add
or
test
shll
mov
or
jbe
idivb
nop
movsb
pop
cmp
cmc
jno
jae
pop
push
or
xor
mov
call
sbb
pop
or
int3
mov
idivl
xor
in
js
gs
stos
add
mov
pop
adc
out
adc
outsl
cmpsl
and
cmp
leave
sbb
repz
push
mov
add
std
xchg
sub
pop
aaa
xchg
aad
repnz
aas
and
and
cmp
jnp
mov
sbb
jl
ret
fstpl
push
psrlq
mov
cmp
stc
adc
mov
inc
ja
sub
push
pop
cmp
fdivrl
sbb
ljmp
mov
or
pushf
xchg
push
fstps
inc
scas
std
je
jae
jle
xor
mov
int3
xchg
mov
faddl
dec
cmp
cmp
inc
adc
or
pop
and
inc
xorb
adc
jp
dec
lock
sarb
mov
xchg
aaa
xchg
adc
sbb
lahf
ror
xchg
push
lcall
push
out
add
jae
out
shlb
jmp
jge
sub
jnp
pop
in
shl
shlb
push
xchg
loop
std
jb
adcb
mov
mov
cmpb
or
mov
fdivr
jp
in
adc
push
cmp
mov
iret
dec
movsb
jmp
pusha
xorl
cmpsl
into
add
or
ret
mov
in
fbld
add
in
int3
mov
nop
popa
fwait
sbb
les
ja
sub
fsubs
inc
jmp
xchg
xchg
mov
add
roll
jle
jle
fimuls
sbb
xchg
inc
add
arpl
jae
mov
sahf
mov
add
xchg
dec
xlat
or
jnp
loope
push
mov
out
mov
and
xor
sub
or
jp,pt
xor
pop
lahf
mov
xchg
xor
ds
sbb
shlb
rcrb
cmpsb
mov
xor
sarl
xchg
cmp
lahf
and
call
xchg
jb
sub
fcoms
jl
sbb
jmp
mov
pop
ljmp
data16
mov
add
aam
xor
jmp
jae
xor
shl
adc
add
movsl
in
mov
movsb
xchg
inc
mov
mov
xchg
fsubrs
xchg
push
xchg
enter
loop
test
cmc
mov
outsl
ja
xor
dec
add
adc
in
inc
mov
cmc
or
popf
mov
imul
daa
push
sub
addr16
cmp
xorl
push
mov
stos
pop
leave
rol
and
adc
and
push
dec
ds
mov
adc
roll
lods
cmp
inc
mov
add
fildl
and
dec
movsl
pop
cmp
inc
rorl
pop
sub
jg
sarl
mov
fdivl
lret
or
cmpsl
shrl
jo
dec
add
ds
pop
cmp
int3
subb
into
xchg
mov
mov
pop
mov
lock
cmpsb
add
jne
pop
sub
and
pop
xchg
das
sub
mov
hlt
cs
popf
push
imul
xchg
popa
dec
mov
dec
cmpb
sub
ret
into
insb
movsb
mov
sbb
inc
jle
lock
sbb
pop
shlb
test
outsb
in
lahf
andb
rclb
sub
cli
mov
mov
ja
arpl
in
movsl
adc
cs
xchg
lret
xor
push
mov
adc
out
pop
into
push
pop
scas
sbb
mov
out
sub
mov
stc
mov
loopne
pop
dec
mov
enter
lods
and
pop
mov
addr16
push
pop
xor
dec
rorb
ljmp
in
push
mov
push
jno
loop
stos
in
ret
iret
sbb
bound
xor
in
sub
xchg
pop
lods
out
pop
in
aaa
cmovle
mov
cmp
hlt
fsubl
cmp
xor
dec
mov
mov
ja
rcl
cmp
or
fdivr
ds
sbb
mov
xor
and
mov
or
iret
push
and
sbb
outsl
andl
loop
jo
shll
sub
jmp
mov
jecxz
push
lcall
imul
stos
loop
cmpsl
mov
pop
jmp
xlat
inc
cmp
xor
push
out
shlb
push
push
cmp
mov
stc
jmp
adc
ljmp
cmc
fisttpl
jb
and
sub
dec
sbb
lods
jmp
je
notl
lcall
xchg
popa
stos
add
xchg
sub
movsb
js
daa
inc
fistl
mov
shlb
jg
sbb
dec
cltd
loop
pop
imul
and
test
xor
sub
mov
pop
push
enter
mov
mov
sub
jge
and
dec
neg
xchg
test
mov
mov
cmpsb
pushf
scas
sub
lods
out
lods
insl
cs
add
dec
lods
or
pop
lds
adc
test
xchg
in
lea
adc
ss
adc
outsb
cmp
sub
pop
sub
scas
or
cmp
pop
std
popa
add
sub
mov
cmp
repz
inc
adc
sbb
lcall
sub
out
gs
js
mov
sbb
maxps
in
push
push
push
loope
mov
dec
outsl
jecxz
fcoml
pop
jno
inc
pop
mov
inc
jns
add
push
lret
js
iret
xor
pop
data16
test
shr
pop
xor
ret
dec
mov
out
mov
pop
test
out
jge
push
into
jno
aam
inc
dec
fsubrp
imul
pusha
pop
push
mov
dec
cmpsb
cmp
lret
lock
enter
imul
outsb
bound
or
xchg
cmp
dec
inc
cmp
xchg
inc
dec
xor
fiaddl
loope
mov
dec
adc
bound
mov
std
std
insb
mov
mov
dec
aas
cmp
pop
sbb
loopne
dec
cmp
cs
leave
fs
sahf
stc
xchg
pop
arpl
xlat
into
add
jnp
mov
das
lret
arpl
ss
rcrl
lret
sub
cmp
push
jecxz
push
inc
orb
loope
loope
add
jp
data16
lock
ljmp
sub
push
ljmp
data16
jne
cld
ljmp
and
inc
adc
loopne
cmp
mov
imul
inc
mov
adc
cwtl
insl
inc
rclb
push
fistps
inc
imul
sbb
rcll
inc
arpl
cmp
jbe
lock
mov
sbb
and
outsl
mov
mov
aam
jle
add
and
add
mov
les
imul
cwtl
out
mov
ljmp
xchg
sarb
rorl
icebp
lahf
ja
and
adc
daa
out
aas
daa
xor
aaa
outsb
fstl
jp
fdivrl
stc
push
sbb
bound
and
popf
mov
fisubl
and
popf
sub
and
dec
aam
jp
lods
inc
clc
pop
dec
jg
pop
es
sbb
sbb
jae
jmp
negb
fldenv
cmp
daa
pushf
mov
jmp
pop
leave
mov
jmp
lods
pop
push
pop
popf
adc
insb
mov
or
adc
in
jecxz
xorl
loope
xor
jb
or
push
or
jp
jmp
testb
out
adc
mov
xlat
aas
xor
shlb
xchg
fisttpll
pop
punpckhwd
inc
leave
mov
gs
mov
andl
and
cmpsl
or
push
icebp
push
push
ljmp
lret
adc
cmc
pushf
sub
cwtl
push
xor
outsb
xchg
mov
cmpsb
add
sahf
dec
add
inc
mov
or
movsb
les
jecxz
mov
jnp
inc
int
outsb
shll
aad
sub
stos
iret
mov
and
cmp
xor
stos
orl
clc
idiv
xchg
xchg
sbb
or
mov
mov
mov
and
inc
aad
and
lsl
sbb
adc
lret
push
xlat
adc
cli
push
sub
mov
addr16
shll
ljmp
push
push
sub
push
mov
ss
into
push
cmc
scas
sub
lcall
cli
push
lea
cli
jne
jp
out
cmpsl
mov
lahf
lods
mov
lahf
dec
dec
jno
xorb
ss
mov
sbb
mov
insb
dec
xlat
out
stos
dec
sbb
inc
fidivl
shll
lcall
arpl
bnd
push
sub
jb
xchg
add
mov
movsb
add
jo
in
dec
or
lds
lcall
aas
shll
push
sub
icebp
dec
push
insb
inc
adc
leave
js
lcall
xchg
jmp
int
imul
adc
dec
jmp
cmp
cwtl
lahf
jae
mov
stos
dec
fistl
out
sub
fidivrl
int3
sub
jg
or
jmp
push
or
mov
ljmp
or
fwait
lretw
jnp
inc
mov
out
sub
jne
add
shrb
adc
adc
js
repnz
ret
xchg
sar
insb
xor
test
push
mov
fldcw
and
jae
ret
aas
aad
pop
cltd
sahf
xchg
jns
leave
push
xchg
aam
fwait
mov
int
jmp
imul
push
mov
lds
imul
fldt
and
dec
js
and
lock
cmp
test
mov
jg
sub
push
and
push
movsl
les
or
dec
lea
pop
push
mov
fldenv
inc
mov
xchg
call
fdivs
jno
stos
cmp
inc
cmp
and
loopne
fwait
test
popa
je
cmp
mov
mov
xchg
mov
test
lahf
adc
ret
mov
stc
dec
jns
jno
mov
adc
std
sub
sbbb
lds
jne
jno
fmuls
push
xor
test
and
out
push
aas
or
sbb
cmpsl
mov
dec
pop
pusha
aaa
addr16
push
sub
les
lret
mov
test
push
int
jne
test
loop
pop
inc
pusha
dec
jmp
repz
int
adc
or
or
mov
mov
jnp
repnz
gs
in
push
shll
fwait
sahf
fistpl
dec
and
in
xchg
xlat
inc
inc
xchg
adc
and
movsb
leave
fwait
mov
insb
add
xchg
xor
call
lret
ret
fcmovnbe
jmp
sti
repz
sbb
sub
cmp
dec
inc
pop
push
imul
mov
mov
shr
jecxz
repz
sbb
sub
cmp
dec
inc
pop
push
imul
mov
mov
shr
jecxz
repz
sbb
sub
cmp
dec
inc
pop
push
push
jnp
mov
mov
shrl
jnp
hlt
add
mov
cmp
shrl
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
das
fstpt
lret
psubq
jmp
repz
stos
scas
pop
mov
imul
decl
das
fstpt
lret
psubq
jmp
fwait
jg
dec
mov
mov
imul
decl
iret
jns
sub
fstpt
lret
psubq
jmp
fwait
jg
dec
mov
pushf
dec
jecxz
lahf
imul
nop
fs
fistpl
sete
cmpsb
pop
hlt
push
into
lds
push
cs
out
stos
fdivrl
jmp
push
popf
loopne
nop
sbb
mov
mov
mov
jp
out
outsb
out
imul
xorl
or
xchg
push
or
sti
add
cmpsb
jmp
mov
or
fbld
gs
pop
jmp
lcall
and
cmc
cmp
jno
hlt
dec
ljmp
jle
adc
lcall
inc
cmpsl
jmp
stos
mov
fisubs
int3
popf
xchg
adc
into
pop
dec
clc
cs
dec
jo
mov
mov
das
pop
sub
fstpt
lret
psubq
jmp
fwait
jg
dec
mov
mov
imul
decl
iret
cmp
inc
outsb
mov
lret
xchg
jbe
outsl
testl
aas
adc
sub
lods
cmp
leave
push
jae
outsl
sarl
out
aaa
int3
or
lea
lahf
add
js
pusha
mov
xchg
aas
cwtl
pusha
xchg
jae
and
pop
stos
scas
pop
mov
imul
decl
iret
cmp
sub
fstpt
lret
psubq
jmp
fwait
jg
dec
mov
mov
imul
decl
iret
cmp
sub
fistpl
adcb
fisubl
xor
jbe
ss
cmpsl
lods
cmp
inc
mov
lahf
insl
sbb
ja
lock
lods
sub
std
pop
fsubl
lret
into
dec
das
sbb
cmp
push
fwait
insl
lret
mov
js
roll
push
sti
sarb
or
in
xor
adc
pop
shlb
arpl
scas
push
cmp
adc
pop
sahf
cs
fcmovnu
xor
push
inc
std
cmpsb
jmp
or
loope
inc
lret
ret
and
add
xchg
int
sub
cmp
fnstcw
mov
sub
xchg
push
or
mov
mov
dec
fidivrs
test
mov
mov
mov
mov
jb
jbe
mov
fwait
dec
and
fld
jmp
gs
inc
or
add
out
popa
push
dec
lock
and
jle
push
gs
mov
sbbl
cmpsl
jmp
or
inc
xor
fs
call
test
xor
das
or
xlat
ret
test
pop
imul
pop
aam
xchg
rcrl
add
popf
scas
cmpsl
add
pop
pop
or
lret
test
sbb
jbe
jb
and
push
dec
jbe
pop
dec
and
clc
mov
xchg
addl
sbb
sbb
lcall
cmp
aam
adc
mov
int
xor
cmc
cld
jle
inc
cmp
mov
xchg
incb
cmp
inc
rorl
out
sbb
adc
xor
loopne
out
and
aad
sti
add
xor
in
sub
pop
cwtl
cli
xchg
xlat
push
bound
nop
es
push
mov
add
js
mov
clc
nop
inc
sub
adc
cmc
add
dec
loopne
fld
inc
jmp
leave
push
pop
subl
popf
push
cmp
cltd
xor
fstl
inc
loop
add
mov
rcll
mov
push
mov
sub
xchg
aaa
pusha
scas
sbb
mov
sub
call
sub
lea
pop
push
or
stos
pop
adc
sub
push
xchg
sub
pop
repnz
je
sarb
fadds
mov
push
je
sahf
test
pop
or
mov
jbe
inc
pop
mov
adc
sub
inc
stos
mov
lods
fdivrp
lcall
movb
push
xchg
les
push
pop
clc
scas
adc
xor
push
lcall
lahf
xchg
test
mov
repnz
es
dec
pop
js
push
dec
xorl
sub
inc
repz
clc
sbb
movsb
test
out
sbb
push
dec
add
add
ret
lock
stos
or
xor
push
rorb
push
cmp
ljmp
mov
cltd
inc
inc
xchg
inc
sub
jmp
outsb
mov
ds
xlat
fisubrl
mov
aaa
lds
cmpsb
pop
dec
cmpsb
pop
adc
stc
fsubrl
jge
in
imul
add
notb
add
pop
and
movsb
stc
sub
loop
dec
push
inc
pop
xorl
adc
add
shrb
clc
hlt
mov
orb
sbb
mov
add
test
push
lea
bound
mov
mov
mov
inc
movsl
in
add
push
jmp
lret
pop
push
leave
add
test
push
lret
rcr
ljmp
or
repz
xchg
jbe
jecxz
lahf
xchg
out
inc
xor
movsb
pop
add
push
xlat
jmp
subl
scas
pop
in
gs
mov
pop
test
test
jp
jo
imul
xchg
fwait
and
or
mov
nop
dec
ds
push
lcall
popa
xor
movsb
test
lock
loope
fidivrs
cmp
mov
insl
mov
rcl
jae
in
lahf
test
sub
sub
xchg
xchg
ftst
stos
mov
in
in
mov
jb
push
iret
sbb
ds
jns
push
sbb
jns
pop
push
leave
or
imul
dec
arpl
add
add
lret
and
repnz
inc
int3
and
outsb
and
inc
aaa
xor
sarl
mov
cwtl
fcomps
mov
push
sbb
sub
aad
je
lods
push
ss
jbe
sbb
sub
mov
lock
ljmp
hlt
cmovs
xchg
icebp
fs
mov
pushl
and
mov
sub
push
arpl
clc
cld
mov
lock
inc
mov
repz
leave
sub
loopne,pt
ds
xor
hlt
push
lahf
lock
lds
jge
mov
hlt
and
xor
pop
mov
sub
decb
pop
push
clc
into
ss
icebp
xchg
inc
pop
jns
test
ffreep
pop
cmc
bound
lods
xor
and
out
xor
cmp
gs
pushf
fmuls
ja
jb
xchg
xor
mov
shlb
ds
js
push
mov
daa
imul
movsb
sahf
and
push
xchg
into
mov
jl
or
test
push
pop
cmpsb
sub
mov
insb
mov
lahf
sub
cs
rcll
scas
xor
inc
lea
xchg
or
sarl
or
enter
mov
inc
mov
ret
xchg
jns
mov
mov
add
or
js
sarl
inc
sti
jbe
lea
push
iret
or
scas
push
mov
mov
adc
imul
inc
or
movsl
mov
stos
sub
in
pop
xor
enter
rorb
lea
aas
pop
pop
xchg
push
fmul
dec
mov
out
jae
pop
roll
push
ljmp
test
dec
push
shl
stc
xchg
imul
xor
out
push
dec
cmp
das
jp
and
std
leave
add
cmp
das
xchg
add
fdivp
cmp
fucomi
bound
push
xchg
cmpsl
cmc
mov
dec
bound
or
add
imull
adc
jae
das
mov
inc
inc
imul
nop
xchg
mov
xchg
rclb
movsl
push
mov
jmp
adc
mov
mov
mov
mov
arpl
sbbl
xor
stc
stos
test
inc
lock
jle
lods
cmp
inc
rorb
cmp
addr16
sbb
out
inc
nop
sbb
cmpsl
xorb
cmp
mov
popf
aad
jae
and
ret
sub
add
enter
cmp
mov
out
dec
sbb
idivl
xor
and
pop
and
call
lds
push
aas
dec
insb
fcmove
or
jecxz
jmp
lea
jbe
pop
sub
aam
mov
adc
xor
push
adc
cli
inc
pop
cmp
pop
stos
xor
jbe
xlat
sub
sarb
bound
aas
pop
or
out
lods
mov
dec
inc
pop
scas
loope
mov
movsl
aad
loope
into
mov
xor
sbb
ljmp
and
inc
in
mov
lods
push
cmp
mov
sub
inc
or
jns
mov
mov
jmp
idivb
pop
call
lock
mov
ficomps
adc
int3
dec
jl
add
insb
in
xchg
mov
loope
mov
pop
and
cmp
cmp
ret
and
jecxz
adc
dec
cwtl
daa
xchg
test
mov
or
lcall
loop
test
in
mov
add
fst
push
push
repnz
inc
mov
rcll
in
mov
cmpsl
sbb
adc
lahf
jg
inc
pop
adc
cmp
sub
and
mov
out
call
inc
mov
pop
cwtl
sbb
jbe
daa
and
mov
cmp
sub
push
pop
xor
jno
rcr
xchg
cltd
jp
cli
rorl
push
lods
sahf
add
imul
inc
data16
sbb
cmpsb
pop
xchg
mov
adc
cmp
mov
mov
divb
aas
xchg
mov
repnz
clc
jbe
in
sahf
pushf
jbe
pushl
push
add
mov
inc
popa
xor
sub
lret
les
fs
cmp
cld
cmpsl
and
rcll
daa
cmpsl
movsb
stos
fwait
jne
imul
cld
jmp
or
scas
xchg
or
in
xchg
or
stos
xor
add
into
or
add
dec
push
adc
and
into
lret
into
adc
mov
mov
cmpsl
shlb
mov
xor
rcrb
mov
cmpsl
rcrl
test
test
aad
outsb
or
adc
mov
icebp
and
add
jg
negb
push
rcll
lcall
ret
mov
jmp
lret
dec
xchg
or
ljmp
movsb
sti
idivb
dec
mov
test
xor
repz
rolb
pop
sahf
dec
sub
dec
sub
mov
flds
sbb
pushf
cmp
popf
insl
or
mov
xor
mov
cmp
loop
fsubrs
xor
sbb
les
push
in
icebp
sarb
jge
mov
push
icebp
pop
push
stc
imul
cs
dec
loop
cli
insl
xchg
pop
enter
es
orb
hlt
dec
daa
inc
pop
cmp
leave
cli
fimull
mov
xor
jb
mov
addr16
mov
das
lock
cli
jae
inc
call
mov
roll
jae
or
pop
je
fisubrl
aad
outsl
popa
cld
out
mov
mov
push
sti
fs
je
and
js
ret
xchg
sahf
push
mov
mov
mov
mov
pop
arpl
cltd
pop
xor
sbb
xor
repnz
int3
dec
jae
jecxz
and
mov
test
inc
insb
test
xchg
mov
mov
xlat
movsb
inc
movsl
sbb
movsl
xchg
push
jno
outsl
js
sbbl
jo
es
sahf
pushw
test
js
mov
outsb
xchg
out
stos
fs
jmp
test
jno
mov
pop
pop
stc
xor
ja
xchg
add
repnz
xchg
lcall
or
ret
add
mov
jno
rcl
xchg
in
jp
jae
imul
inc
lds
xchg
aad
loopne
xchg
and
pop
jb
je
sbb
jmp
jmp
xchg
lcall
add
xlat
mov
dec
incl
lahf
jae
sbb
dec
mov
pop
je
sub
fstpt
push
or
bound
adc
adc
dec
xorl
xchg
daa
sbb
out
mov
lods
mov
int3
adc
pop
in
insl
mov
add
mov
je
inc
fildl
fdivrs
test
pusha
xor
pop
jbe
adc
mov
inc
mov
sbb
push
or
or
loope
fs
inc
mov
jbe
loop
loop
pusha
dec
pop
mov
stc
xchg
mov
ret
pop
mov
cmp
aad
in
cli
int3
fnstenv
out
or
loop
inc
ss
dec
xchg
mov
pop
mov
fdivr
jno
inc
dec
push
cmpb
adc
std
mov
or
pop
push
call
add
xor
mov
sbb
shlb
sbb
push
pop
xchg
cli
dec
cmp
sbbl
test
xchg
lcall
mov
aam
fs
xor
shl
mov
xchg
icebp
mov
jns
outsb
sbb
jmp
test
lret
mov
call
mov
pushf
stos
xchg
pop
sbb
mov
ja
dec
mov
fcompl
loope
imul
lods
pop
pop
insb
sbb
lds
cmp
cmp
dec
pop
es
pop
mov
loop
xor
jl
dec
in
into
jmp
inc
dec
rcr
add
xchg
inc
inc
daa
int3
xchg
imul
inc
and
mov
push
add
nop
fistps
icebp
inc
mov
and
loop
iret
pusha
sbb
add
and
mov
or
inc
icebp
xchg
mov
bound
mov
cmp
lods
js
xor
ds
das
es
push
jb
out
addb
push
test
add
movl
dec
fs
sar
test
sti
sub
mov
das
xor
inc
test
jle
xchg
dec
out
inc
mov
out
mov
repz
mov
test
sahf
sub
cmp
pushf
add
adc
push
inc
movsl
ljmp
mov
lret
shl
cmp
lahf
outsb
mov
daa
js
jnp
push
iret
mov
jne
and
jb
out
or
push
cltd
sbb
mov
mov
xchg
std
jle
ror
fiaddl
lret
cmp
cmpsb
push
scas
jg
jns
fcoml
mov
xor
jl
or
mov
lret
shrl
push
shrl
sbb
or
dec
mov
pop
cli
out
movsl
sub
mov
pop
icebp
sub
mov
sub
jbe
call
shl
cltd
fistpl
inc
adc
movsb
mov
xlat
lods
addr16
out
ret
sub
jg
lods
nop
xchg
xor
ds
mov
enter
scas
pop
jmp
adc
push
mov
jl
mov
sbb
xorb
mov
loopne
int3
ljmp
inc
cs
outsl
stos
lods
push
or
and
pop
movsb
in
cld
mov
test
daa
lcall
add
inc
sbb
je
push
sbb
rolb
iret
and
jne
sbb
in
fwait
xchg
sbb
test
aas
push
out
fsts
stos
mov
rcl
mov
add
repz
push
shrb
int3
pop
or
test
faddl
movsb
cld
movsl
xor
rol
mov
loop
sub
ret
push
and
loopne
mov
dec
movsb
mov
sbb
outsl
xchg
leave
into
jbe
sbb
mov
mov
fdiv
jo
pop
inc
cmp
sbb
aaa
dec
add
cmp
clc
in
mov
xor
add
mov
sub
xchg
dec
stos
mov
cld
jns
je
rcrl
insl
xor
shlb
rcrl
xor
std
dec
iret
or
inc
cs
adc
cwtl
sbb
and
lcall
cmp
jg
mov
sbb
push
or
mov
pushf
mov
aad
push
rcll
out
inc
jae
mov
test
or
and
mul
movsl
out
mov
mov
stc
dec
jae
jmp
ds
test
cltd
xor
addr16
cmovns
pop
push
inc
push
cmp
test
push
xchg
loopne
ret
jbe
dec
mov
mov
add
out
sahf
add
mov
das
iret
jne
aas
xor
mov
icebp
push
lret
pusha
out
imull
sub
enter
bound
cltd
icebp
movsl
and
inc
out
sahf
ffreep
xchg
jo
arpl
inc
test
test
daa
and
outsb
idivl
and
inc
fisttps
sub
scas
push
imulb
dec
mov
data16
cmp
pop
inc
push
flds
cwtl
push
stos
out
gs
push
cmp
into
mov
mov
push
push
dec
inc
pop
inc
dec
push
sbb
inc
mov
out
mov
loope
inc
adc
inc
inc
jb
inc
inc
ljmp
aad
add
lret
mov
out
inc
test
sub
pushf
loop
pop
mov
loope
sbb
decb
sub
sbb
mov
aas
jno
pushf
stos
mov
aaa
pop
scas
inc
pop
loope
jg
cmp
jbe
mov
jbe
sbb
cltd
outsb
mov
mov
mov
mov
lret
and
decl
add
mov
sub
dec
and
xchg
mov
jnp
std
sbb
or
add
loope
adcl
sbbb
adc
sbb
faddp
bound
data16
jo
lea
loopne
test
mov
sub
mov
dec
lret
outsb
cmp
mov
and
mov
xor
adc
sbb
in
and
pop
int
testb
and
dec
mov
test
push
pop
mov
mov
iret
cmp
xlat
mov
repnz
jg
rolb
jp
and
dec
jg
repnz
addr16
adc
in
gs
sub
xor
cmpsl
adc
pop
cwtl
add
inc
je
push
push
pop
leave
push
push
aaa
inc
add
sarb
sbb
mov
cltd
rep
inc
adc
push
flds
and
lock
cmp
in
lret
xchg
lret
push
mov
and
mov
repnz
stos
shll
inc
xor
cmp
push
divb
rolb
xor
ret
push
lcall
cmp
dec
sti
loope
insb
sbb
in
imul
stc
cmp
out
pop
loopne
xchg
xor
cmp
test
gs
lcall
iret
shll
lds
adc
in
mov
pop
push
movsl
jno
fwait
jle
mov
pop
aas
and
or
imul
les
mov
or
push
mov
les
testl
sahf
xorb
idiv
cmpsb
insb
or
mov
bound
lods
mov
pop
pop
jmp
stos
xlat
add
cmp
js
int3
and
pop
cmp
adc
mov
cmp
adc
xor
enter
cltd
cmpsl
jge
enter
cwtl
bound
and
sbb
dec
add
sti
scas
mov
xor
cltd
mov
icebp
mov
push
jns
out
mov
add
imul
loope
mov
pop
xorl
adcb
add
mov
push
fsubr
push
stos
dec
shrb
imul
inc
pop
in
imul
mov
popa
out
sub
out
addr16
add
xor
mov
arpl
xchg
icebp
fistps
cwtl
and
inc
roll
lock
xchg
hlt
sbb
add
sar
outsl
int
rolb
xchg
dec
cmp
inc
mov
push
mov
or
nop
cli
push
leave
mov
jl
inc
push
adc
icebp
insb
stos
add
cmp
cmc
lret
mov
jecxz
fs
je
xor
test
loop
outsb
jecxz
orb
dec
pop
add
js
dec
mov
add
out
xor
sub
adc
add
push
cmp
push
cld
mov
popa
or
outsl
pextrw
dec
imulb
es
xor
sbb
cwtl
dec
sub
push
add
das
push
iret
in
rclb
cli
and
lds
scas
xchg
mov
imul
aam
jmp
mov
and
sub
jbe
sarl
stc
scas
imul
out
nop
push
inc
bound
fisttpl
pop
popf
xor
jnp
inc
push
les
aaa
adc
cmc
pop
stc
mov
cld
es
sbb
pop
je
fisttps
fs
orl
ja
aam
xchg
or
push
test
popl
inc
popa
stos
sahf
std
pop
dec
ja
call
mov
dec
icebp
inc
movb
adc
jo
in
jge
mov
cld
inc
or
jns
cli
lret
xchg
lods
inc
rolb
push
cmp
jl
sub
jo
xor
test
mov
jmp
out
inc
cmp
stos
roll
fwait
mov
hlt
jns
push
dec
mulb
test
leave
out
in
and
or
fsubrs
lcall
jno
dec
adc
fmul
stc
push
int
push
xor
add
repz
sarl
ja
popf
cltd
jle
sub
out
in
xorl
mov
movsb
adc
nop
test
sahf
faddl
and
push
cmp
jo
dec
ljmp
sti
cmpl
pop
inc
test
fstl
ficompl
mov
xor
mov
adc
psadbw
or
jns
mov
mov
std
inc
test
cld
mov
cs
xchg
cmp
jmp
pop
sbb
mov
stos
addr16
pushf
xor
and
out
adc
or
js
rorb
xchg
xchg
pop
jmp
dec
sub
and
sub
adcb
sub
out
cmp
push
jo
mov
push
mov
rcrl
xor
in
and
rcrl
lahf
cmc
inc
dec
fadds
mov
push
cli
fsts
mov
sbb
fldenv
adc
hlt
add
jmp
fstps
pop
xchg
sub
iret
sub
add
shlb
jbe
jmp
or
lods
sbb
sarb
or
inc
movsb
push
jge
and
cwtl
out
fisubrs
adc
sbb
add
pusha
dec
shrl
aaa
sbb
int
pop
add
inc
jp
lret
push
sti
pop
jmp
fwait
jg
dec
mov
mov
imul
decl
iret
cmp
sub
fstpt
lret
psubq
jmp
fwait
jg
dec
mov
mov
imul
decl
iret
cmp
sub
fstpt
jmp
fwait
jg
dec
mov
mov
imul
decl
iret
cmp
sub
fstpt
lret
psubq
jmp
fwait
jg
dec
mov
mov
sbb
xchg
hlt
mov
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
test
xchg
xor
popa
mov
push
add
adc
nop
inc
loope
icebp
jne
jne
test
xchg
xor
pusha
aad
in
cmc
xor
and
test
shlb
and
fsubl
jo
inc
cmc
push
sbb
ss
jp
dec
incb
cmp
insb
cli
inc
movsl
push
ret
jne
fcmovbe
lahf
and
xor
and
dec
lods
fldt
dec
imul
and
popf
out
jo
std
pusha
enter
mov
dec
fnstcw
test
js
cmpl
repz
push
sub
xor
mov
xchg
int3
gs
jne
test
xchg
inc
cmp
jo
dec
hlt
mov
pop
adc
adc
adc
out
mov
rcl
loopne
iret
sub
push
sbb
test
add
movsl
and
lds
lcall
es
dec
sbb
das
xlat
sti
push
lret
cli
mov
outsl
add
push
mov
dec
and
shlb
jo
inc
in
push
sbb
or
nop
pop
loopne
lock
jne
jmp
inc
rcll
mov
test
cmc
and
sarb
push
rcll
inc
xchg
xor
ljmp
jae
and
xor
inc
lds
and
test
adc
stc
arpl
push
aad
in
cmc
push
add
xorb
shlb
and
adc
pusha
aad
in
cmc
push
add
xorb
shlb
and
xlat
test
jl
movsb
xor
outsl
int3
test
push
imul
cli
andl
lcall
ljmp
sbb
sub
shll
xchg
push
orb
in
in
pop
inc
inc
sbb
xchg
jge
mov
fistpl
lock
shlb
mov
cs
dec
inc
lds
mov
stc
jno
fadds
incl
jne
cmp
xchg
mov
pushf
imul
xchg
pop
ljmp
jbe
lret
or
mov
xchg
loopne
jbe
jmp
xor
outsb
pop
pop
push
lret
mov
rorl
adc
inc
cmp
rclb
fdivr
in
xchg
ret
cmp
addr16
lock
xchg
push
enter
idiv
fisubs
inc
std
and
push
les
repz
addl
sub
and
dec
les
jne
mov
push
xchg
or
stos
mov
cmp
mov
push
std
sub
imul
or
shll
xlat
outsb
add
and
mov
int
sarb
sbb
pop
and
mull
movsl
jns
sahf
clc
in
rolb
sbb
xchg
adc
inc
enter
addb
lret
sub
pop
iret
cmpsl
cmp
int3
dec
movsb
shl
or
mov
fmul
push
mov
mov
and
clc
xor
inc
rcll
testl
and
icebp
sub
repnz
paddq
mov
nop
cld
ret
aas
mov
js
mov
loopne
loopne
arpl
cld
cmp
ficompl
xor
xchg
cld
stos
or
pop
sub
and
mov
decl
rep
push
pop
sbb
sub
pop
jne
mov
push
xchg
cmp
mov
scas
sbb
in
aaa
movsb
lods
pop
push
std
sub
outsb
ss
test
pop
mov
push
lods
test
iret
sub
out
push
or
loopne
inc
je
adc
fldl
dec
movsb
insb
or
cmc
daa
sbb
pop
cs
loope
aad
aad
push
mov
push
sbb
std
mov
loop
or
inc
std
xchg
sbb
fwait
jmp
mov
lret
dec
pop
xchg
add
js
dec
ljmp
pop
pusha
mov
aaa
pop
fwait
hlt
xchg
xor
sbb
cmpsb
out
xchg
cmpsb
and
xchg
sarb
test
test
movl
aas
loop
pop
cli
aaa
pop
fidivrl
dec
adc
leave
bound
mov
out
mov
jae
stos
pop
outsb
aam
out
enter
jmp
mov
loopne
js
into
jp
dec
xor
cmp
push
fdivr
sbb
mov
pop
lods
shrb
imul
xorl
lcall
sub
jae
arpl
lds
mov
jbe
dec
xor
out
adc
sbb
out
xor
enter
clc
shlb
scas
jb
xor
or
js
push
shll
jle
sub
cli
xor
shrb
or
shr
mov
leave
dec
push
pop
dec
and
jo
push
xor
push
movsb
mov
jl
jle
pop
xchg
test
les
mov
jle
adc
iret
dec
out
add
fidivl
mov
xchg
and
shlb
push
out
or
mov
cmp
mov
sub
loop
pusha
arpl
inc
inc
movsl
faddl
bound
push
jne
xlat
jg,pt
xor
fsubr
orb
loope
and
push
push
fs
int
mov
ret
inc
pop
lods
cmpsl
mov
cmp
push
outsl
and
adc
sbb
sbb
js
jo
js
xor
xor
sbb
push
out
mov
into
pop
mov
cmp
jb
fs
in
lahf
dec
fldt
gs
aam
rcrb
and
in
ret
dec
pop
negl
in
cltd
aas
movsb
insl
xor
cwtl
xorb
pushf
mov
outsl
xor
adc
mov
add
inc
stc
lcall
out
fisttpll
int
in
sbb
adc
inc
xor
lock
fwait
push
lret
das
stos
xor
xchg
insl
cld
subl
stos
pop
int
pop
daa
dec
shrb
push
cmpsb
inc
mov
cmp
scas
ret
insb
xor
push
ret
cmpsl
adc
in
punpcklbw
jb
xor
xor
in
adcl
arpl
xchg
fdivr
insl
out
or
ret
mov
and
fisubrs
mov
sbb
clc
dec
add
inc
fs
jle
mov
insb
sub
pop
or
adcb
mov
mov
and
insl
fbld
pusha
pop
add
xchg
testb
insl
xor
add
jge
mov
ds
cmp
jmp
xor
icebp
push
adc
ljmp
out
adc
insl
mov
jbe
jnp
fwait
or
mov
xchg
push
ds
das
pop
inc
mov
jo
xchg
es
scas
mov
and
shrb
ror
xchg
aam
cltd
call
ss
add
xor
sbbb
mov
loope
test
nop
add
insl
xor
or
and
cmp
das
sahf
insb
xchg
jmp
lret
out
mov
subb
repnz
cwtl
jecxz
xchg
cmpb
or
sahf
dec
std
arpl
cli
mov
mov
or
popf
sti
es
pop
loop
scas
adc
dec
out
adc
dec
xor
push
testb
jbe
addb
mov
and
out
dec
inc
sbb
cli
icebp
lcall
ffree
sbb
jnp
push
lahf
push
and
jge
inc
cmp
shrl
out
cwtl
xor
jp
or
shll
add
movntps
es
push
aad
pop
test
or
js
pusha
fimull
addr16
jg
mov
mull
push
insb
push
cmp
pop
je
add
fidivrl
and
or
push
xchg
and
ljmp
xor
push
fs
mov
pop
addr16
add
jecxz
jl
jae
call
aad
lret
cltd
scas
sarb
inc
push
sub
rorb
loope
jl
cmp
mov
orl
and
sbb
stc
orl
dec
xchg
in
xorl
sub
xchg
add
xor
xchg
mov
dec
in
add
xor
mov
rcrb
fcmovbe
ljmp
clc
sti
cmp
add
call
lock
push
mov
or
leave
verr
lcall
mov
or
xor
ret
test
out
mov
cli
aad
mov
adc
bound
dec
jecxz
cld
stos
mov
push
cmp
int3
test
add
dec
stos
ljmp
sbb
ds
xchg
adc
leave
jg
fs
enter
jno
push
jne
add
in
sub
push
sbb
pop
jne
push
cmc
aaa
mov
pop
notl
sub
mov
cmp
push
aad
js
pop
imul
jns
mov
mov
in
mov
adc
shll
cmpsb
pop
mov
cwtl
aam
xor
adc
mov
das
out
mov
jg
iret
lds
int3
pop
pop
sbb
arpl
adc
add
roll
dec
and
mov
inc
addr16
push
shll
pop
push
jl
and
stc
lahf
cli
aad
or
or
mov
repnz
sbb
insl
pop
pop
and
xchg
push
pop
mov
sbb
jns
mov
movsl
mov
pop
inc
sbb
in
and
cmpsb
outsb
xor
out
fadd
cmp
add
cmp
cmpsb
nop
hlt
adc
addr16
add
cmp
movsl
jecxz
xor
and
inc
xchg
popf
add
lcall
pop
inc
adc
inc
push
mov
push
sub
inc
push
fcmovb
sarb
xor
out
or
mov
in
rcll
nop
imul
cmp
xchg
movsl
mov
mov
les
xchg
dec
ss
mov
loopne
into
sub
rcrb
xchg
mov
xor
push
imull
hlt
jmp
nop
mov
in
orb
scas
or
inc
push
and
add
shl
loope
xor
adc
push
mov
sbb
ja
shlb
cwtl
jo
outsb
pop
and
ljmp
inc
stos
xchg
mov
sarl
adc
cmp
aam
mov
fidivs
jl
mov
jno
fstl
mov
sub
mov
mov
add
loope
loop
xorl
xchg
mov
data16
repnz
dec
enter
in
jp
pop
and
xchg
ret
ret
and
jge
ljmp
aad
roll
or
mov
xchg
mov
ret
jo
or
dec
jne
cmpsb
xchg
cmp
cwtl
into
mov
fsubs
orl
cltd
mov
add
cwtl
ljmp
aas
enter
stos
scas
sub
dec
mov
inc
add
lock
repnz
jle
and
rcr
mov
rclb
xor
or
outsb
fisttps
xor
mov
jl,pn
or
shl
mov
rol
lock
shl
push
mull
in
jnp
inc
push
and
daa
inc
popf
mov
fstl
sbb
add
mov
pop
jecxz
add
pop
inc
xchg
cltd
fsubp
jle
aas
cld
stc
adc
outsb
cmp
cmpsl
push
mov
xchg
lret
das
pop
loop
test
xchg
lods
into
or
mov
stos
or
or
xor
call
movsb
pop
call
mov
mov
dec
and
orb
in
not
icebp
xor
and
ret
ret
dec
xchg
xor
add
or
sub
test
cmpsl
adc
movsl
add
or
mov
insl
dec
mov
pop
add
out
mov
shl
and
sbb
sbb
cmp
adc
cmp
xchg
rorl
outsb
std
inc
test
add
lcall
je
xchg
ja
dec
incl
aad
push
mov
push
mov
xchg
inc
inc
movsl
out
mov
sub
std
xchg
jp
clc
in
mov
std
setne
mov
mov
xchg
sub
sbb
mov
xor
push
ret
aad
leave
nop
insl
ds
aas
xor
cli
push
dec
loop
mov
or
gs
pusha
inc
mov
dec
ja
movsl
sbb
mov
or
fucomip
int3
dec
fists
cmp
outsb
xor
fldcw
mov
xchg
fwait
ret
pop
mov
and
xor
les
rorb
les
lods
adcb
push
sahf
dec
or
mov
jno
adc
adc
mov
into
mov
int
leave
add
jne
adc
inc
cmpl
cmp
scas
ret
mov
push
cmpsl
bound
cmp
cltd
push
repnz
rolb
je
negb
push
fstps
rcr
inc
adc
jnp
and
sub
std
lea
call
jp
lcall
push
lahf
mov
cli
jne
lods
xchg
dec
fimull
mov
xor
add
test
or
push
mov
push
cmc
sahf
jno
inc
push
imul
xor
adc
clc
pop
mov
mov
cmp
jnp
jg
je
loope
ror
leave
into
stc
sub
loope
jb
mov
stos
and
xchg
fwait
mov
scas
in
mov
inc
lds
push
xchg
jbe
push
xor
aas
lds
and
pop
or
pop
or
pop
pop
popf
mov
pop
sti
xchg
or
cld
stc
sub
cs
mov
mov
es
xchg
movnti
cmc
sub
sahf
dec
imul
out
std
loopne
add
push
push
sub
jnp
jo
and
lea
cmpsl
mov
jno
add
fs
dec
ficompl
jb
mov
mov
jp
add
out
sub
es
adc
inc
sbb
pushf
ja
ds
xchg
xor
pop
sahf
xchg
push
xchg
bound
cmp
xlat
push
cmc
xchg
cmove
ret
push
push
inc
dec
mov
rol
in
inc
aad
and
clc
cmp
push
fisttps
stos
cmp
repz
int3
push
sub
stc
fiadds
jl
movsl
xchg
sbb
xchg
push
comiss
jne
push
shl
mov
inc
int3
aaa
sub
inc
xchg
sahf
cld
xchg
lahf
aam
inc
sbb
lret
leave
sbb
fcomp
mov
lcall
sbb
es
addr16
xchg
or
xor
out
loop
das
fdivrp
cmpb
fwait
and
xor
iret
fwait
jg
addr16
fnsetpm(287
adc
cmc
cmp
xchg
aam
pop
xchg
xchg
mov
loope
fcmovnb
sbb
call
shrb
rolb
ljmp
jo
mov
dec
insb
mov
loop
aam
jb
lods
lea
pusha
adc
inc
and
in
adc
adc
std
cli
dec
repnz
push
subb
push
out
movl
dec
mov
test
subl
insb
inc
xor
das
loope
ret
fadd
sbb
out
mov
jl
insl
and
mov
jo
adc
les
mov
popa
fstpl
outsl
jg
mov
sub
mov
pusha
push
jle
push
fcoml
or
push
ret
fwait
ret
inc
sbb
mov
data16
loopne
fcoms
addr16
sub
mov
sti
or
mov
pop
sub
push
loope
mov
inc
enter
add
popa
cld
jns
xchg
adc
and
add
cs
test
sub
push
inc
sbb
add
mulb
imul
mov
movsb
mov
jmp
aad
sbb
cmp
sets
add
outsb
std
cmc
inc
daa
ss
loop
leave
xchg
lea
adc
jo
mov
clc
jns
daa
mov
arpl
or
adc
sbb
in
lods
rclb
imul
gs
jns
sub
stos
jbe
dec
imul
xlat
pop
xor
dec
adc
push
pop
dec
push
cltd
jecxz
les
pop
jmp
adc
aas
add
inc
jne
ja
xchg
mov
cmc
inc
sbb
in
jbe
inc
mov
sti
sbbl
daa
mov
lods
lret
xchg
insl
pop
in
popa
adc
dec
mov
cwtl
lahf
jmp
pop
lahf
jecxz
jne
jns
or
pop
inc
sbb
mov
or
xchg
dec
js
and
pusha
notb
xchg
ljmp
mov
dec
xchg
pop
mov
cs
jp
std
call
arpl
cmp
xchg
push
addb
push
lods
pop
js
pop
int
mov
mov
sar
dec
aam
pop
dec
xchg
ss
iret
inc
push
and
fistps
push
adc
or
jecxz
lds
push
nop
stos
lea
push
notl
mov
push
cld
bound
rcl
sbb
jno
push
mov
ja
movsl
mov
sbb
mov
iret
push
push
in
or
stos
jnp
imul
mov
cmpsl
cmpsl
mov
insl
in
pop
sbb
ret
in
pop
sti
fwait
inc
or
xchg
and
or
or
inc
mov
lret
call
and
bnd
ss
sub
sbb
jle
xorl
sbb
push
mov
jg
mov
test
adc
inc
inc
or
jnp
les
test
ljmp
pop
dec
rcrl
mov
rcl
das
inc
hlt
xor
fdivrs
adc
inc
jne
shll
adc
jo
push
loop
test
cmp
mov
popa
pop
dec
fwait
or
xor
int3
inc
xchg
mov
pop
pop
les
or
sbb
jmp
mov
push
lahf
sub
pop
or
addr16
daa
push
sti
push
pop
cmp
scas
shlb
mov
mov
mov
lcall
rcl
sub
jle
push
sahf
incl
inc
insb
std
jle
cmpsb
sub
cld
dec
cmp
pop
cld
mov
mov
loopne
shlb
test
sub
or
mov
es
dec
cmp
jg
dec
popf
xchg
xchg
xchg
xor
and
ret
lds
dec
outsl
mov
mov
dec
cmc
dec
mov
xor
lret
outsl
pop
push
cmp
fsub
push
dec
jns
push
and
ret
divb
mov
rorl
int3
adc
adc
mov
push
and
mov
addl
loop
lcall
add
lock
sub
mov
jns
pushf
jns
push
fidivs
add
cmp
push
subl
dec
or
movsb
dec
add
fsubl
fdivr
mov
mov
adc
cmc
cmpsb
jns
cld
popf
push
lret
das
adc
in
cmp
addl
dec
pop
ja
push
push
mov
lahf
xchg
imul
loop
rcll
push
scas
leave
outsb
jbe
xchg
rcrl
repnz
aaa
xor
jp
xchg
dec
inc
repz
pop
popf
test
adc
inc
lods
fdivs
mov
xchg
jp
fsubs
cmp
into
sbb
loopne
outsb
mov
ja
add
clc
cmp
mov
fwait
xor
dec
nop
and
es
aas
test
cmp
fimuls
std
jno
pop
push
insl
mov
mov
jp
arpl
repz
fidivs
add
sti
push
xchg
push
add
loope
and
ds
das
dec
stos
scas
and
add
mov
and
inc
dec
mov
xor
lods
jb
mov
lds
inc
pop
add
mov
adc
sub
out
out
daa
stc
inc
sub
imul
mov
jle
push
and
push
jo
xchg
rcr
push
and
icebp
add
es
mov
mov
push
jb
sahf
xchg
sbb
pop
add
ret
loope
stc
xchg
sbbb
loopne
and
dec
fs
ficomps
ret
push
xchg
outsl
cmpsb
add
fmull
pop
mov
inc
push
pop
sbb
fmul
aad
iret
daa
cld
jmp
aam
mov
insl
ljmp
sbb
inc
lds
xchg
out
mov
imul
addl
adc
push
cmp
push
mov
mov
push
xor
mov
push
add
outsl
stos
jp
xor
jg
rolb
cli
lret
scas
dec
jmp
iret
les
fstps
outsl
movsb
into
push
xchg
das
mov
mov
jno
out
push
lds
rclb
or
stos
ja
js
inc
aas
pushf
xchg
add
aad
add
das
aam
shufps
sahf
jmp
add
ljmp
outsb
pop
mov
cmpsl
ss
ret
fsubr
cmpb
cmp
mov
lcall
out
loop
outsl
xor
pusha
sahf
mov
adc
add
popf
inc
mov
stc
out
enter
es
add
xor
xchg
jge
inc
ret
dec
pop
dec
jo
jmp
xchg
mov
ret
push
cmp
jno
das
aad
jle
mov
inc
sahf
clc
jge
sbbl
clc
outsb
mov
jnp
popf
aas
cmp
xchg
mov
int
div
bnd
or
push
pushf
icebp
push
cmpsb
rcrl
xchg
faddl
xlat
or
sub
loopne
add
or
and
aas
or
rclb
cmp
addr16
xorl
xor
xchg
adc
push
sahf
and
stc
mov
dec
cmpsb
imul
les
jg
test
xor
lods
clc
and
pop
shll
ret
pop
sbb
loop
inc
sbb
jmp
cmp
xchg
and
daa
mov
dec
mov
daa
xor
inc
mov
fsub
push
mov
lock
xorl
inc
dec
je
into
mov
insl
and
roll
sbb
stc
mov
ficompl
sar
push
adc
cmp
push
mov
cltd
stos
repnz
loop
out
gs
cmc
adc
stos
ret
inc
clc
jnp
pop
bound
or
sbb
popf
andb
push
in
pop
mov
stos
xchg
or
int3
inc
out
sbbb
xor
jp
adc
int
add
fisubrs
jne
ljmp
jo
sbb
into
or
pop
sbb
out
xchg
icebp
call
cltd
aas
and
imul
dec
leave
adc
lea
gs
es
and
lahf
shlb
outsl
mov
ja
mov
and
jecxz
mov
xchg
sbb
sahf
fimull
loop
cmp
sbbl
pushf
add
fwait
mov
add
stos
imul
popa
xor
pusha
aad
in
cmc
push
add
xorb
shlb
and
adc
pusha
aad
in
cmc
push
add
xorb
shlb
and
adc
pusha
aad
in
cmc
push
add
xorb
shlb
and
adc
pusha
aad
gs
jne
cli
mov
xor
setp
mov
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
jecxz
arpl
push
in
inc
jge
inc
add
jno
addr16
shrb
jge
or
cmpl
in
inc
std
xor
add
repz
jecxz
mov
ret
jge
bound
cmp
push
inc
inc
pushl
mov
mov
repz
jecxz
mov
cmpsb
push
rcrb
je
pop
in
cmp
pop
cwtl
adc
call
dec
loopne
fsubrl
aaa
nop
les
arpl
inc
out
int3
es
inc
xor
incl
add
pop
ficomps
int3
fcomps
shll
fisubrs
repz
or
in
sub
jae
scas
inc
xor
add
mov
or
push
or
loop
lds
xor
fldt
add
subl
sbb
cmp
ret
arpl
cld
mov
lret
jmp
lds
dec
xor
gs
or
loop
sub
arpl
xor
add
sarl
xor
xchg
sub
daa
fnstsw
scas
or
repnz
les
fwait
or
mov
out
imul
mov
pushf
daa
mov
fcoms
inc
scas
adc
jnp
mov
or
push
ret
dec
pushf
push
add
mov
and
repz
jecxz
shrl
jge
or
cmpl
in
inc
std
xor
add
shrl
jge
or
cmpl
dec
adc
inc
adc
mov
pop
in
rorl
sub
mov
and
repnz
jae
xor
mov
daa
decl
das
add
xchg
lods
mov
ds
cmp
and
and
add
in
sub
les
pop
push
mov
adc
jp
mov
mov
push
fstpl
xchg
lahf
jbe
stos
push
pop
leave
mov
adc
mov
xor
stc
sarb
push
and
rolb
cmp
fdivs
pop
jl
iret
mov
xorb
add
popa
dec
and
stos
rcrl
mov
pop
cwtl
ret
out
mov
mov
sub
mov
sbb
roll
or
inc
cmp
mov
push
cmp
fldenv
cli
sbb
lea
gs
imulb
hlt
sbb
inc
jne
push
jo
jb
stos
add
js
inc
push
and
adc
sub
mov
enter
repnz
js
sbb
and
push
push
fisttpl
dec
sbb
ret
xchg
inc
out
mov
jmp
sub
nop
inc
adc
add
cmp
stc
cltd
cmpsl
rorb
add
shll
daa
cmp
stc
shlb
scas
es
shl
aam
adc
jnp
enter
jb
fists
divb
loopne
adc
inc
sub
ret
scas
and
data16
push
movsb
pop
in
scas
mov
jge
test
sbb
shll
pop
add
pusha
pushf
jae
test
or
ljmp
cmpsb
daa
enter
dec
push
in
mov
movsl
sbb
aam
jle
pop
sub
fwait
pop
mov
insb
dec
data16
in
dec
icebp
and
mov
cmpsb
xor
or
fstl
mov
test
pusha
inc
clc
dec
sub
mov
sbb
push
lods
or
mov
addr16
pop
das
xchg
roll
mov
js
adc
inc
rcr
in
je
add
jae
sbb
mov
es
inc
dec
nopl
push
push
jg
xor
call
lds
push
je
jae
jge
stc
mov
dec
imul
stc
jae
inc
nop
push
cld
iret
jno
xchg
inc
xchg
std
out
inc
xor
and
sahf
arpl
adc
and
mov
xor
mov
or
sahf
das
js
xchg
leave
jne
clc
jl
add
loop
pop
pushl
xchg
and
dec
push
push
and
insb
adc
in
mov
add
jge
and
pop
dec
out
sbb
add
pop
js
lea
mov
mov
xlat
stc
mov
push
notb
jle
ljmp
dec
out
aaa
mov
pop
insl
lods
test
fdivr
sbb
sbb
mov
xor
push
fldcw
addr16
xor
sub
nop
adc
adc
rclb
xchg
orb
cmp
lcall
testb
loop
and
rcrb
add
pop
in
pop
mov
call
lret
inc
sarl
imul
je
hlt
nop
pop
jnp
jo
mov
mov
mov
adc
and
je
sahf
add
xchg
add
xchg
mov
push
fst
shlb
push
mov
push
xchg
in
test
bound
or
sar
nop
cmc
maskmovq
negl
jl
stc
and
and
sub
jmp
push
loop
ret
mov
incb
dec
flds
inc
pop
sbb
ja
jo
pop
mov
mov
lcall
out
jae
fistpll
inc
arpl
pop
out
es
loope
mov
mov
movl
cmp
pop
dec
out
or
mov
push
lock
aaa
stos
dec
ror
or
mov
rorb
add
stos
push
adc
test
jnp
add
scas
and
test
aam
shl
adc
ret
xchg
fimull
pop
pop
or
gs
into
adc
sub
mov
jno
or
insb
pop
mov
adc
mov
xor
lret
bound
insb
xchg
sbb
mov
pop
push
mov
mov
jae
stos
lds
or
aaa
icebp
dec
in
cld
adc
das
addr16
lods
arpl
sbb
xor
popf
les
loope
mov
cli
and
pop
mov
enter
mov
inc
push
test
xor
sbb
and
mov
sahf
or
ret
add
lds
pop
and
pop
pop
xchg
cmp
lods
js
pop
shlb
repz
sub
shl
stc
push
iret
scas
sahf
sbb
add
js
add
call
jmp
fsub
inc
popf
jnp
mov
sbb
and
sub
iret
es
pusha
jb
shll
pop
icebp
cmc
and
and
out
mov
push
sub
fisttps
movsl
gs
out
push
push
subl
lret
leave
mov
mov
jg
ss
iret
cmpb
adc
cwtl
out
xorps
dec
or
pop
loope
loop
mov
scas
push
adc
mov
test
lock
pop
xor
dec
aad
inc
ds
pusha
out
cld
jg
push
adc
mov
and
jecxz
add
fwait
jns
and
jne
cld
leave
ret
fsubp
stc
inc
daa
cmp
fs
loope
cmp
faddl
xor
outsl
xchg
jbe
sbb
repz
add
jle
jmp
mov
cmp
mov
xlat
mov
repz
add
adc
mulb
lds
or
xchg
jnp
jns
mov
or
mov
mov
iret
xchg
roll
outsb
and
mov
push
mov
imull
push
daa
mov
outsl
mov
xchg
pop
sub
out
movsl
and
inc
and
xchg
cmp
pushf
cmp
xchg
arpl
pusha
jb
lcall
mov
sub
xchg
ljmp
fld
enter
pop
inc
sub
pop
mov
in
pop
sub
jle
inc
cs
rorb
jne
fsubl
pop
xchg
pushf
sub
adc
filds
cld
xchg
sbb
sub
push
mov
mov
jmp
mov
scas
or
stc
mov
fadds
popa
cwtl
xchg
fistpll
lahf
adc
out
fnstenv
xor
jno
popf
rorb
or
mov
or
es
stos
aad
fidivrs
cmpsl
int
out
mov
pop
dec
enter
cltd
xchg
pushf
push
inc
lea
or
xor
clc
push
lea
cmp
adc
clc
aas
fisubrs
pushf
aaa
jg
and
dec
movsb
int3
pop
and
popf
lahf
sub
fsub
jnp
xor
mov
inc
in
mov
js
dec
pop
adc
popa
idiv
cmp
pop
or
pop
push
ja
jns
add
cli
push
fistl
jge
insb
inc
push
sbb
lret
dec
ljmp
and
lcall
scas
xor
mov
jg
movsb
mov
shl
ret
pop
ds
lods
roll
rolb
lret
sbb
mov
icebp
or
inc
mov
mov
cmp
mov
or
mov
scas
jb
movsb
paddusb
aas
sub
jne
sahf
jne
mov
or
aas
sbb
mov
in
cmpb
ss
addl
lcall
xorl
jae
inc
cmp
lock
ret
lock
mov
cmpsl
sbb
dec
xchg
pushf
add
pop
pop
add
jmp
xor
lods
jp
leave
shrb
pushf
jbe
imul
jp
cld
pop
jg
push
pop
cmc
push
je
mov
rcll
mov
adc
xor
rcll
mov
shll
push
adc
je
mov
ljmp
call
lahf
or
int3
ds
js
sbb
les
pop
jns
call
mov
push
mov
repnz
out
cmpsl
int3
lods
push
les
mov
sub
mov
or
fxch
popa
hlt
out
lcall
mov
jno
xchg
mov
inc
or
fwait
int3
addb
jge
cmp
idiv
push
call
dec
pop
push
mov
push
test
sub
jno
scas
lea
loopne
test
mov
mov
ljmp
sub
inc
ljmp
mov
mov
inc
pop
push
or
cwtl
push
das
mov
out
adc
jb
roll
sub
daa
inc
push
mov
mov
incl
adc
cmpsl
jae
fisttpl
ss
xor
aas
xchg
lods
imul
xchg
flds
neg
pop
lock
in
mov
pusha
xchg
sbb
jecxz
fucomi
rcr
xchg
cmp
mov
inc
dec
or
into
xchg
mov
jecxz
cwtl
jle
mov
call
cmp
xchg
push
jne
and
and
fs
out
into
xchg
sub
shll
loope
sbb
test
outsl
cmp
sbb
repz
jg
aam
add
cmp
and
pop
aaa
sub
bswap
xchg
out
mov
sub
data16
fwait
and
dec
cmp
and
xor
add
mov
sbb
push
pop
sub
pop
cwtl
add
int3
mov
pop
pop
cli
and
mov
xchg
lock
jl
dec
fcompl
sbb
out
mov
mov
insl
shrl
ja
scas
sbb
jbe
jne
mov
aaa
pop
or
test
push
fstl
sbb
mov
add
stc
outsl
pop
ljmp
je
sbb
cmp
xchg
mov
dec
ret
loop
pop
insb
mov
repz
and
pusha
roll
test
cltd
mov
fwait
pop
imul
cmpsb
sbb
push
arpl
pop
xor
sbb
inc
clc
movsb
iret
and
push
rorb
jecxz
mov
lock
dec
imul
addl
pop
sbb
mov
divb
cs
mov
adc
push
das
mov
cmp
adc
xor
xchg
and
mov
mov
xor
mov
test
push
in
dec
sbb
pop
xchg
faddl
push
and
push
lcall
mov
call
sbb
push
mov
push
dec
dec
adc
push
mov
mov
sbb
rcl
mov
int
pop
lods
xchg
in
addr16
pop
jle
cmpl
mov
jbe
pop
popf
jge
mov
icebp
pop
and
outsl
mov
pop
js
test
jo
aaa
orb
sbb
sub
mov
cmpsl
or
add
mov
cmc
sbb
addl
or
shrb
lahf
add
inc
mov
sbb
cmp
pop
inc
js
mov
aas
cmp
and
mov
hlt
mov
sub
or
jne
sub
test
jp
mov
rclb
push
movsl
loope
outsb
sahf
xor
pop
dec
inc
pop
int3
cmpsl
icebp
add
out
xchg
pop
movsb
nop
xor
push
je
dec
icebp
inc
fcompl
mov
fs
dec
ss
cli
test
loopne
bound
jl
stos
cwtl
inc
pop
and
das
shll
lds
xor
pusha
xor
xchg
cmp
icebp
or
inc
push
mov
xor
mov
mov
jp
push
pop
push
ret
sbb
inc
mov
addr16
mov
out
or
ds
lea
push
sbb
xor
mov
or
dec
shlb
out
rcrl
adc
stc
leave
fs
dec
inc
enterw
hlt
mov
std
in
call
pop
push
dec
movsl
movsl
jne
push
jnp
cwtl
sub
sub
mov
dec
movsb
out
leave
outsl
xor
in
jmp
gs
andl
icebp
cmp
pop
jae
rcrl
mov
push
dec
mov
sbb
cmpsl
imul
jbe
mov
adc
loopne
dec
mov
push
cwtl
pop
and
xchg
mov
add
sbb
scas
xlat
mov
or
js
add
xchg
mov
lret
sbb
mov
test
pop
fsubs
in
push
pushf
xchg
push
mov
or
cmc
jb
jl
ds
cmc
outsl
lahf
es
cmp
pusha
add
jmp
dec
kmovb
and
pop
xchg
and
cmp
cmp
inc
xor
into
add
ss
sub
cs
add
pop
addb
sub
aaa
cmpsb
sub
mov
pop
sub
dec
movsl
test
mov
or
xor
test
sbbl
sbb
imul
stos
addr16
pushf
test
out
pop
sbb
add
out
js
fcmovbe
ss
inc
popa
jnp
test
sbb
imul
imul
mov
daa
sub
sbb
jp
rorb
dec
push
lret
je
lcall
ret
cmp
lret
xchg
inc
ljmp
aam
mov
in
icebp
mov
rorl
pop
std
nop
dec
std
mov
jb
leave
fwait
xchg
inc
push
xor
cmpsb
cltd
push
add
sub
push
rol
xorl
mov
enter
imull
stc
pushl
repz
in
cmpl
rorl
dec
inc
daa
cmp
push
mov
ror
push
sub
hlt
movsb
lea
fistl
rolb
and
daa
mov
adc
xchg
jle
ja
mov
cltd
das
stos
add
repnz
enter
cmc
andb
cli
inc
pop
pop
hlt
bound
cmp
mov
int3
xchg
adc
push
aam
sbb
aaa
stc
aaa
dec
xor
cmp
je
sbb
push
test
popa
les
jl
jl
and
sbb
jno
outsb
in
push
lcall
mov
pop
sub
push
das
std
pushf
add
enter
fcomps
cmp
xchg
inc
inc
mov
stos
mov
push
mov
cld
mov
pop
xchg
in
jae
mov
pushf
pop
imul
add
xchg
xor
movsl
stos
mov
xchg
cmp
adc
into
push
daa
and
fistpll
cwtl
imul
and
push
ss
stos
xchg
rcrl
lea
cmp
sub
jb
pushf
pop
popf
fstl
scas
jnp
dec
out
sbb
jp
aam
push
rorb
lcall
nop
filds
pusha
cmp
shrl
cmp
jg
sbb
or
outsl
in
jmp
mov
sub
orl
lds
mov
inc
inc
or
int
xor
adc
cmpsb
loop
lock
mov
jecxz
mov
adcl
int3
sub
xor
or
inc
ljmp
rcrl
pop
imul
pusha
mov
cmp
arpl
int
clc
mov
jae
sbb
adc
test
test
out
jge
div
pop
or
and
stc
nop
dec
call
lods
in
inc
push
cmpsl
inc
mov
push
xchg
pop
xchg
bound
jmp
ljmp
pop
pop
mov
test
cli
inc
lret
xor
test
dec
and
movsl
adc
mov
inc
shlb
pop
jbe,pn
call
rolb
inc
ds
icebp
xor
add
ds
jp
sub
adc
mov
inc
movsb
dec
sbb
icebp
xchg
mov
jg
jmp
inc
outsb
push
adc
mov
faddl
push
imulb
ret
inc
inc
sahf
mov
sub
arpl
out
or
cmp
sbb
out
xor
daa
fsubrp
fisubrl
add
push
mov
pop
cltd
js
lock
mov
imul
xor
clc
add
ljmp
jne
sarb
or
iret
jge
dec
int3
stos
cmp
xlat
in
push
gs
jle
lret
push
push
flds
in
mov
mov
pop
cmc
fimuls
shlb
fs
mov
inc
iret
lmsw
ja
insl
jecxz
out
xchg
push
out
xchg
lds
lock
mov
insb
test
adc
push
retw
ja
cmp
push
add
push
lods
aaa
mov
int
ret
jmp
out
test
arpl
and
xchg
ss
lods
mov
push
ret
subb
push
cmp
sti
in
add
xchg
cmp
mov
js
in
xlat
dec
out
sub
mov
dec
sbb
in
push
mov
aaa
or
gs
jae
shll
push
push
repz
jmp
sbb
add
cmp
xchg
nop
aam
fs
popa
add
xchg
or
mov
outsb
push
jae
mov
daa
xchg
mov
jmp
jl
mov
lret
sti
xor
test
cmc
fcompl
dec
sbb
cwtl
cli
xchg
xchg
jmp
arpl
xor
pop
jg
adc
push
adc
sub
gs
mov
je
outsb
mov
cmp
in
shrb
pop
mov
pop
push
cmc
mov
popf
jmp
lea
xchg
loope
jns
aas
dec
sbb
notb
add
stos
leave
jge
pop
xchg
les
pushf
test
clc
jo
add
rol
imul
mov
mov
mov
sbb
jl
mov
scas
sub
lock
insb
jle
aaa
loopne
and
lea
and
fidivrs
xor
movsb
aas
adcl
xchg
inc
lret
daa
pusha
dec
aaa
dec
sbb
in
fs
fs
or
iret
hlt
push
mov
push
fdiv
fucomip
movsl
sub
mov
xor
jmp
pop
fiaddl
fcompl
aaa
popf
adc
incb
or
lea
imul
fisubl
je
push
std
push
inc
xchg
jmp
add
dec
pop
jo
mov
xchg
inc
sti
adc
out
mov
int
sti
push
roll
pause
xchg
test
enter
mov
scas
xor
out
jnp
jne
adc
cs
sahf
inc
xor
or
xor
sbb
add
jae
lock
call
into
xchg
push
jg
js
push
sbbl
push
test
mov
in
push
inc
inc
stc
jb
mov
or
sub
rorb
mov
dec
cmpsb
push
mov
insb
xchg
mov
lcall
ret
or
dec
push
sub
pusha
jnp
imul
aad
push
inc
ret
jo
popf
insl
add
jecxz
out
xchg
xor
gs
std
push
pop
int3
daa
dec
in
push
add
cmp
push
aaa
sbb
push
dec
je
cmp
push
addr16
shl
mov
sbb
inc
xchg
sbb
insl
push
xlat
mov
lea
or
xchg
dec
push
xchg
inc
xor
lea
jbe
cmp
fwait
add
lock
orl
aaa
ret
lock
inc
xchg
mov
loope
pop
fdiv
cwtl
mov
sub
clc
dec
out
test
jne
enter
outsl
outsb
stc
mov
adc
xchg
loop
cli
mov
bound
data16
enter
gs
sub
pop
sub
popf
mov
mov
arpl
iret
mov
add
mov
push
xchg
pop
in
call
inc
mov
loop
mov
sub
cmpsl
mov
xlat
push
mov
adc
outsb
add
shl
into
jbe
cmp
pusha
xor
ja
sbb
data16
sub
and
lock
add
cmp
shll
test
sbb
ljmp
mov
push
xlat
inc
xor
loopne
sahf
add
dec
pop
inc
cld
sbb
lods
loopne
cs
iret
shll
cmc
jl
cltd
sbb
mov
mov
loope
push
xchg
sahf
aad
rcrb
shr
aad
push
mov
pop
sbb
push
jp
js
adc
dec
dec
or
inc
or
cli
into
imul
nop
sub
repnz
in
mov
ret
inc
lret
cmpsb
outsb
mov
es
clc
dec
loope
cmpsb
aas
xchg
in
test
jg
lret
push
test
loopne
mov
jmp
lds
pop
or
aas
adc
test
rcll
daa
xor
loope
jg
adc
int
fadds
cmp
stos
mov
leave
mov
xchg
decl
subl
inc
push
cmp
test
rorl
orb
sub
lcall
sbb
ss
outsb
xlat
sbb
pop
enter
push
jae
sarb
xchg
mov
ror
and
dec
cld
add
inc
or
test
test
adc
xlat
pop
ja
pop
mov
stc
adc
call
test
fwait
xor
jp
pop
push
test
fldl
std
xor
add
shrl
jge
or
cmpl
in
inc
std
xor
add
shrl
jge
or
cmpl
xchg
inc
std
xor
add
shrl
jge
or
cmpb
in
inc
cld
xor
add
jns
ret
or
test
loop
sarb
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
cmp
mov
add
xor
dec
inc
mov
lods
sub
cmp
dec
std
pop
bound
int
cmp
mov
jge
pop
cld
cmp
sbb
dec
popf
cmp
or
pop
out
insb
fnstsw
and
xor
add
mov
push
push
in
clc
daa
mov
cltd
cmp
rcrb
js
push
mov
lods
ss
das
loopne
cltd
mov
or
js
pusha
cmp
cmp
or
jno
cli
inc
push
jb
popf
add
jb
flds
cs
push
add
outsb
iret
adc
sbb
cmp
cmp
pop
pop
sbb
inc
mov
hlt
rorb
push
pop
xor
jge
sub
enter
push
test
ret
rcrl
jl
jae
xchg
rorb
push
sbb
ja
sub
lahf
push
sub
jns
or
pop
std
xchg
mov
jae
add
in
xchg
divl
sbb
movsl
enter
prefetch
lret
xlat
sub
cmp
sub
insl
in
pop
pop
push
lret
mov
test
add
push
cmc
pop
jl
in
out
pop
fdivrs
push
cwtl
xor
sub
dec
lods
dec
cltd
pop
call
add
push
stc
inc
fisubrs
bound
sub
enter
xor
mov
lock
lahf
dec
fsubrl
pop
cld
dec
or
sbb
sub
cmp
dec
std
pop
in
insb
fnstsw
cmp
mov
insl
in
pop
cld
dec
or
sbb
sub
cmp
dec
std
pop
in
insb
fnstsw
cmp
jl
add
mov
fsubrs
xchg
aam
inc
xchg
mov
mov
and
sbb
cmp
adc
ja
mov
in
insb
inc
mov
ljmp
sub
pop
cmp
sarl
das
in
roll
mull
xchg
sahf
insb
sti
outsl
push
jmp
or
test
sbb
xchg
call
mov
adc
idiv
lahf
popa
fcmovnu
sbb
out
xchg
cmp
cld
ljmp
mov
mov
test
push
test
jecxz
mov
mov
pop
xchg
jno
data16
and
int3
aam
mov
inc
popa
lods
aaa
mov
mov
cmp
enter
push
lea
shrl
add
push
pop
push
cmc
inc
call
stos
xor
dec
cmp
sbb
xchg
xor
mov
push
shll
mov
lret
test
out
inc
sbb
jmp
fiaddl
inc
cmpb
in
sub
mov
xchg
ja
or
jnp
mov
rolb
shlb
adc
push
repz
insl
xor
std
movsb
test
pop
dec
loop
mov
dec
loop
aaa
pop
jbe
mov
jg
xor
xor
or
add
les
mov
cltd
jmp
push
xlat
xor
pop
pop
test
xchg
add
push
test
inc
inc
aam
mov
mov
out
and
cmpsb
and
enter
sti
lock
mov
int
mov
rcrl
lcall
and
lret
jo
xchg
adc
or
arpl
mov
or
fldenv
iret
ret
scas
push
xchg
fmuls
into
add
rcl
pop
push
xor
push
ss
ja
ffree
in
fnclex
ret
sbb
loopne
outsb
sarb
mov
test
repnz
adc
push
je
xor
aaa
jp
mov
sbb
dec
js
cli
mov
imul
mov
jecxz
inc
adc
loopne
mov
mov
fcmovnbe
repz
lcall
jno
popa
xor
adc
jecxz
dec
or
pop
aas
loopne
je
out
dec
xor
pop
lret
rol
stc
lret
es
xor
repnz
fisubl
and
out
push
mov
dec
mov
bound
out
iret
lcall
ljmp
sbb
cwtl
cmp
xchg
xchg
lds
pop
jne
dec
sub
cltd
dec
mov
icebp
test
push
jae
addr16
mov
sbb
pop
stos
outsb
dec
sti
addb
or
rcrb
push
ljmp
jno
outsb
mov
ficomps
fnstenv
insb
out
push
fwait
add
sub
imul
push
cmp
dec
push
mov
lods
sub
jl
das
not
xchg
cmc
cltd
sbb
fidivs
sbb
nop
in
dec
pushf
pop
jo
adc
daa
and
sub
mov
loop
jg
enter
xchg
rolb
leave
stos
aam
xchg
orl
fisubs
pop
call
or
push
stos
mov
adc
ret
fs
leave
inc
fdivs
and
push
out
mov
int
xchg
jp
jo
xchg
adc
pop
cmp
out
test
mov
rcr
add
fwait
js
fildll
movsl
cld
push
scas
add
mov
mov
ja
ljmp
dec
movsb
mov
rcr
mov
mov
popa
in
adc
xchg
fidivs
xchg
inc
push
or
sbb
pop
imul
data16
xor
mov
push
adc
push
int3
pusha
test
pop
in
and
jmp
pusha
shlb
mov
jne
repnz
arpl
push
in
enter
in
ja
es
xchg
mov
cs
ljmp
cmp
ja
adc
push
sub
mov
loopne
aam
cmc
mov
je
push
or
jmp
rcrb
outsl
mov
leave
ret
push
jecxz
pop
popf
jae
cmp
stc
js
add
repnz
test
andl
lret
dec
push
inc
push
cmp
sub
scas
lret
or
pop
std
or
sub
jne
cmpsl
add
enter
jg
pop
outsb
movsl
or
fistps
repnz
iret
leave
out
fwait
lods
add
loope
push
addb
jp
or
inc
fiaddl
outsb
xchg
cs
xlat
subl
mov
movsb
add
outsb
shrb
mov
daa
fnclex
fs
sarl
rcll
or
shl
lock
xchg
jmp
xor
mov
iret
push
ret
adc
lret
cmp
in
or
stos
lret
mov
inc
inc
xor
push
jb
mov
popa
mov
pop
mov
les
and
cmp
scas
xor
in
and
push
rorl
gs
flds
push
insl
lods
arpl
jmp
pop
stos
roll
ss
xchg
outsl
push
je
dec
xchg
loopne
xchg
lea
notb
adc
fsubrs
loop
ret
orb
mov
inc
add
icebp
cli
sbb
leave
mov
inc
pusha
es
fiadds
and
mov
sub
lea
sbb
push
add
inc
push
sbb
pop
mov
lahf
sahf
fsubp
fiadds
push
mov
push
out
inc
nop
enter
fdiv
cmp
in
leave
cmp
mull
sarb
jo
adc
fldlg2
idiv
addr16
out
mov
mov
mov
xchg
xor
test
cmp
aaa
mov
xchg
mov
clc
mov
mov
fistpl
aas
lock
rcr
lret
mov
out
jle
sbb
or
cmp
in
insb
daa
imul
sti
insl
leave
mov
daa
fsubr
adc
sub
jae
cmpsb
lret
jns
sbbb
and
cs
ljmp
pop
adc
fisttpll
push
jb
popf
mov
scas
jns
jno
mov
xchg
aam
push
imul
inc
dec
imul
test
out
xchg
cmp
jo
sahf
movsl
call
movsb
test
bound
cmp
sub
jecxz
xorl
sub
adc
cmp
dec
mov
adc
stos
sub
cmp
les
xlat
sbb
pop
mov
je
popf
cmp
enter
fisttps
jecxz
xchg
cmpsb
mov
pop
inc
loopne
insl
test
stos
push
je
in
pop
mov
xor
outsb
jl
cmp
and
cmpsb
cmp
cmp
add
out
lea
test
repz
dec
push
cwtl
push
test
aaa
mov
dec
sub
loope
shl
xor
push
mov
jbe
stos
sub
sbb
mov
sub
pop
cld
pop
insb
pop
insb
sbb
mov
addl
scas
aas
ret
rorb
push
jns
daa
mov
cmp
sti
xchg
add
nop
mov
add
mov
push
add
out
mov
cld
insl
push
push
imul
pop
mov
loope
add
cmp
hlt
adc
mov
iret
and
push
lret
mov
mov
popa
or
pop
and
mov
loopne
scas
jb
leave
push
sub
mov
into
cmp
xchg
fbstp
cmc
pusha
fstps
mov
xchg
cmp
pop
adc
aad
cwtl
push
scas
push
and
pop
or
sbbl
subl
and
aam
inc
jbe
cmp
push
push
xor
cs
add
inc
rcll
pusha
dec
outsl
into
mov
dec
nop
pop
cmpsb
stc
fs
adc
cmp
hlt
push
sbbl
mov
pushf
imul
faddl
jno
scas
sbb
shr
pushf
stc
inc
jne
pusha
mov
jae
mov
cmc
xorb
push
or
jecxz
mov
pop
es
mov
jns
ret
dec
data16
insb
pop
and
scas
and
push
mov
adc
mov
popf
dec
icebp
rcrb
mov
mov
jmp
repz
mov
sbb
je
call
loop
out
add
or
xor
mov
dec
inc
cmp
and
push
add
sub
repnz
aad
jecxz
add
dec
jl
jnp
sti
int
out
mov
das
pmaxsw
and
jg
pop
pop
pop
das
ret
mov
push
xchg
xor
pop
fldt
jo
clc
insl
out
cmpsl
cmpsb
es
pop
and
mov
pop
int3
sub
dec
push
cwtl
push
sub
sub
test
jns
popf
adc
push
out
mov
dec
fisubrs
mov
add
movsl
or
pop
pop
iret
lods
cltd
fildl
jle
adc
loop
xchg
jnp
repnz
test
mov
movsb
sbb
cmp
arpl
cld
nop
arpl
xlat
loop
icebp
in
sub
lea
in
jge
jle
inc
cmp
add
sub
sbbl
dec
sbb
test
ret
scas
int
imul
cmpb
pop
adc
adc
fs
movsb
dec
xchg
push
sub
or
mov
repz
push
das
jae
shrl
dec
xchg
dec
sbb
or
fcoms
idivl
jns
les
and
in
cli
fldt
int
pusha
subb
mov
pop
cmpsb
mov
in
mov
mov
pop
xor
loope
add
mov
je
or
adc
mov
lahf
and
pop
mov
jecxz
inc
mov
jge
or
in
hlt
int3
dec
je
inc
inc
lods
push
mov
aad
xchg
inc
xchg
fwait
nop
mov
in
les
and
xchg
mov
or
push
jo
mov
pop
ret
cwtl
dec
ja
test
xor
stc
sub
call
leave
mov
mov
inc
std
and
out
adc
mov
push
add
arpl
sub
jae
ret
imul
push
ret
out
mov
jb
les
push
pop
enter
les
repz
mov
xchg
push
cld
or
gs
jl
push
fsts
in
int3
or
jnp
push
ljmp
icebp
mov
and
xlat
xchg
xchg
jo
je
fimuls
addb
push
xor
mov
push
lahf
int3
cmp
rclb
rcrl
lods
repz
dec
sti
dec
cltd
aaa
loope
enter
jle
test
xor
sahf
adc
loopne
or
repz
dec
sub
jecxz
cmpsb
enter
or
and
into
scas
neg
mov
insb
loopne
push
xor
jmp
inc
fisubs
xor
les
mov
add
inc
inc
cmp
or
rcrl
dec
dec
mov
xchg
incl
aam
adc
js
mov
lret
popa
imul
inc
and
mov
cmpsl
inc
fcmovnu
push
mov
sarb
or
cltd
dec
repz
movsb
rorb
popf
add
int3
stos
pusha
cli
mov
inc
iret
in
dec
std
and
mov
das
mov
outsl
cmp
aas
sub
push
mov
std
inc
push
insl
add
sub
xor
xchg
lcall
loopne
sbb
jecxz
test
pop
sbb
dec
and
pop
jle
rol
cmpsl
clc
xchg
mov
mov
popa
or
inc
out
jno
jno
sbb
mov
push
sahf
pusha
mov
int
mov
inc
pop
sbb
fstps
and
pop
lea
lods
jae
popa
cmp
pop
pop
fsubs
push
mov
mov
dec
cld
mov
pop
lock
pop
adc
cmp
dec
xor
lock
sub
into
jo
pop
xor
out
test
dec
xchg
pop
add
test
sti
aaa
loop
scas
popa
add
xchg
mov
jbe
mov
in
pop
and
xchg
inc
les
fnstsw
js
movsb
inc
je
pop
jle
push
cwtl
add
loope
push
test
mov
fcoml
pop
inc
cli
sbb
and
sub
sub
mov
out
cmp
rorb
clc
stc
lahf
inc
stc
pop
dec
stos
pop
out
lea
shlb
push
fsubs
sbb
rol
jb
int3
mov
loop
mov
bnd
repnz
and
data16
mov
hlt
ss
sub
test
push
fs
xchg
mov
dec
int3
and
mov
jp
pop
shrl
and
mov
mov
jmp
adc
es
jns
sahf
sbb
lahf
cli
dec
inc
into
popa
add
sbb
xlat
adc
iret
mov
inc
iret
divl
repnz
mov
dec
and
jo
pop
test
sbb
mov
sub
pushf
cmpsl
inc
loopne
mov
mov
push
test
je
call
inc
ljmp
movsb
sbbb
shlb
sbbb
xchg
jnp
mov
add
cmc
mov
or
pop
ja
or
dec
mov
stos
daa
outsb
push
outsl
dec
pop
nop
mov
mov
inc
insl
mov
push
in
ss
inc
lds
dec
adc
push
xchg
inc
jnp
daa
movsl
lods
loopne
and
pop
sbb
or
imul
and
xor
mov
or
xchg
lret
stc
xor
in
test
inc
sub
fisubl
fstl
daa
xor
ss
add
push
ficompl
nop
adc
jne
jle
sbb
dec
cmc
hlt
lds
mov
lods
lods
inc
mov
dec
and
jmp
sub
inc
xchg
fstl
sub
mov
xchg
inc
mov
inc
lret
and
lcall
aas
int
or
aad
pop
mov
cwtl
inc
dec
mov
jle
outsb
pop
sar
loop
rorb
fimull
push
inc
pushf
xor
ss
ds
loop
adc
jno
cmp
pop
aas
adc
push
jnp
sbb
push
and
cmp
sbb
iret
or
sbb
mov
stc
pop
stos
xchg
cs
dec
mov
les
pop
sub
movsl
addb
fisubs
aad
test
cmp
and
movsb
mov
enter
out
pop
sahf
scas
or
pop
cld
ja
aam
inc
jbe
insb
cltd
push
xchg
jp
pushf
adc
mov
xchg
mov
cld
add
mov
pop
jl
negb
imul
pop
fs
sbb
test
shlb
cli
mov
and
sub
mov
dec
cmp
aaa
aam
xor
push
or
xor
into
aam
adc
cmp
sub
in
pop
mov
in
outsb
jns
pushf
clc
push
sbb
addl
and
pop
imul
push
lock
sahf
xor
loopne
and
jg
jecxz
in
push
in
sbb
adc
jl
or
mov
arpl
fcomp
jo
rcll
cmp
nop
leave
lds
mov
aaa
push
push
cmp
movsl
or
lret
mov
aaa
push
sub
andb
jge
jl
popa
fstps
xchg
fsts
jecxz
mov
inc
pusha
jp
imul
mov
pop
jl
repz
mov
dec
add
xchg
xchg
jmp
shrl
lret
pushf
add
lret
mov
cli
sbb
sub
imul
cmp
sub
adc
push
aad
scas
sbbl
daa
leave
dec
dec
and
inc
adc
inc
sahf
and
cs
leave
inc
adc
es
aaa
shrb
mov
orl
addb
xchg
sub
jnp
inc
loope
mov
loopne
push
xor
fdivr
inc
iret
pop
xor
mov
dec
icebp
movsl
ljmp
pop
jae
xchg
lahf
stos
push
pop
inc
sbb
sbb
mov
push
cmp
pop
fnstcw
sti
and
loope
cmp
dec
jle
jmp
or
sti
mov
xchg
outsl
enter
mov
sbb
aam
xor
test
fimuls
es
aaa
pop
inc
or
xor
gs
outsb
dec
cmc
cmp
test
jge
adc
pop
outsl
test
les
out
push
test
xchg
jg
push
xchg
imul
in
cli
or
jnp
ret
lock
sbb
sti
xchg
dec
push
ja
call
adc
sub
adc
out
negb
xor
cmp
aaa
pop
jecxz
mov
imul
js
out
scas
jmp
hlt
and
mov
movsb
int3
pop
imul
xchg
stos
andl
mov
sar
ljmp
scas
movsl
sar
je
adc
mov
and
es
lea
dec
scas
push
xchg
insb
pusha
and
mov
jne
rcrl
xchg
jnp
rol
inc
je
fldt
mov
stc
loopne
cs
adc
imul
jo
icebp
xor
inc
mov
das
scas
mov
mov
lods
enter
inc
xlat
add
fcos
sub
inc
test
ds
xlat
xchg
cld
aaa
jge
mov
into
andb
sub
std
and
push
movsb
popf
adc
clc
mov
shrb
inc
xor
das
scas
fcmovbe
mov
dec
jmp
imul
dec
mov
mov
mov
or
daa
cmpsl
leave
jmp
jb
insl
add
repnz
dec
ret
sbb
dec
call
ljmp
xchg
xor
sbb
cs
scas
fwait
sti
arpl
call
leave
sub
xchg
add
adc
and
wbinvd
mov
xchg
or
in
inc
ss
popa
dec
pop
add
decb
test
fs
push
sbb
mov
sub
xchg
or
imul
mov
mov
mov
packuswb
mov
dec
ret
jne
push
lods
dec
sub
mov
adc
push
pop
push
nop
mov
call
in
popf
pop
mov
jp
xor
push
xorb
push
mov
sbbl
clc
notl
push
push
hlt
roll
cwtl
xor
arpl
xor
jno
ja
imul
add
inc
xchg
push
add
mov
sti
popf
daa
mov
mov
in
sbb
push
jg
sbb
inc
push
mov
test
call
ficomps
push
sub
mov
cltd
pop
and
data16
inc
mov
loope
cmp
pop
icebp
xor
xlat
adc
mov
addr16
call
test
xchg
shlb
pushf
icebp
adc
sub
xor
pop
add
out
and
mov
stos
rol
mov
lahf
shr
cld
pop
icebp
or
adc
mov
mov
xchg
ds
mov
jnp
push
push
js
add
jp
testb
shll
fidivs
icebp
mov
cltd
mov
sbb
pop
scas
js
xchg
rcrb
neg
pop
adc
cmp
adc
loope
dec
roll
fwait
shl
lret
jl
aad
inc
xor
js
mov
fldl
jl
idivl
push
cmp
dec
xlat
or
je
dec
out
into
fists
pusha
add
xor
icebp
fs
or
jae
call
adc
cmpsb
jp
mov
mov
pop
mov
loopne
sti
mov
sub
dec
inc
pop
xchg
dec
movsl
out
mov
or
cmp
mov
push
inc
shll
std
iret
sub
and
pop
sub
aaa
jl
mov
data16
aad
lret
cmp
push
bound
push
int
inc
sbbb
xchg
dec
int
stc
imul
push
mov
push
test
sahf
cwtl
dec
xor
addl
fists
sub
jae
bnd
cmp
out
rcrb
incb
ret
xorb
and
shlb
cmpsb
fstl
inc
repnz
dec
and
sub
cmc
leave
repnz
insb
imul
pop
jne
into
mov
xchg
xlat
fisubrl
jno
insb
addr16
cs
lahf
cmpsb
stos
int3
jge
xlat
pop
push
and
mov
std
cmp
mov
xor
jns
cli
mov
jns
xchg
push
shll
ret
stc
or
andb
mov
inc
mov
repz
outsl
dec
xor
cmp
jmp
pop
cmp
inc
adc
xor
xchg
into
inc
aaa
call
sbb
jns
jnp
inc
imulb
out
mov
push
jge
mov
js
int
fwait
xchg
aaa
and
inc
mov
mov
jle
in
pop
or
mov
or
stos
cwtl
ret
pop
outsl
fxch
into
out
pop
jnp
fisubl
iret
pop
mov
incl
sub
jmp
sub
int3
jge
insl
in
pop
cld
dec
or
sbb
sub
cmp
dec
std
pop
in
insb
fnstsw
cmp
mov
insl
in
pop
cld
dec
or
sbb
sub
cmp
dec
std
pop
in
insb
fnstsw
cmp
mov
insl
in
pop
cmp
or
sbb
fcompl
dec
in
insb
fsts
negb
pushf
or
in
pop
jl
or
jecxz
xchg
aam
xchg
mov
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
