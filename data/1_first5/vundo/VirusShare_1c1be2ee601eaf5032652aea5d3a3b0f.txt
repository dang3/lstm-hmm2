mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
push
push
mov
add
loop
xor
out
sub
ss
aam
dec
mov
jo
loopne
mov
dec
sarl
jno
bts
push
nop
inc
test
scas
and
inc
shl
xchg
int3
xchg
add
xor
inc
sub
add
xor
shl
clc
movb
push
push
dec
not
lret
out
stos
inc
icebp
xlat
pop
push
cmpsl
and
cmp
jecxz
cmp
lret
sub
pop
pop
jge
sqrtps
leave
andl
sbb
push
enter
jns
out
add
push
pop
add
xor
xchg
cvtps2pd
mov
or
loop
lahf
pop
add
repz
jbe
xor
shlb
push
push
sbb
sar
add
push
hlt
inc
or
mov
adc
ret
shr
cwtl
iret
out
add
cld
add
inc
mov
addr16
mov
sub
cwtl
scas
push
jo
cwtl
loopne
lahf
clc
cmp
sbb
push
push
inc
nop
xchg
add
pop
sub
add
push
lea
gs
push
pop
xor
ds
pop
arpl
inc
fisubrl
repz
out
lock
pop
stc
or
sub
dec
not
in
out
inc
mov
add
pop
push
inc
cmpsl
daa
int3
andb
lea
push
push
mov
jecxz
jge
ds
jne
mov
test
sbb
lea
imul
push
out
mov
pop
pop
jmp
adcb
pop
call
cmp
xchg
push
add
pop
add
cli
imul
pop
pop
mov
loopne
ficomps
out
sub
movsl
add
jecxz
cld
add
inc
js
icebp
rcrl
inc
sbb
mov
out
fisubrl
cmp
cld
movsb
mov
push
sub
std
push
sbb
mov
inc
out
imul
and
add
push
mov
mov
dec
es
imul
xor
lea
adc
mulb
sbb
pop
jnp
testb
es
mov
xchg
or
in
ss
add
push
mov
dec
mov
jo
call
xchg
add
push
push
push
lea
jb
cmp
stos
sbb
out
push
jne
adc
popa
sub
test
shl
pop
cmp
add
test
adc
cwtl
nop/reserved
pop
or
push
lods
mov
js
pop
jecxz
loope
loopne
add
sub
mov
dec
shl
jbe
jl
xor
sub
je
add
pop
cmp
sarb
shr
mov
mov
push
lgs
enter
lea
cmp
push
cmpl
lock
add
push
cmc
push
dec
push
inc
push
adc
cs
xchg
push
dec
lock
loope
and
sub
lock
and
mov
adc
xchg
ficoml
testl
pop
push
inc
mov
jp
in
add
cmc
push
push
mov
pop
or
imul
xor
iret
add
insb
nop
pop
add
or
or
push
cmc
or
or
mov
mov
fldl
nop
lea
xchg
notb
nop
add
cs
xor
push
fdivl
push
lea
sub
or
jg
movsl
xchg
andb
or
movsb
jg
sbbb
cltd
jle
cmp
and
sub
aas
fstps
sub
sub
dec
sub
imul
mov
push
lea
lods
clc
or
shl
inc
xor
sub
sub
in
in
xchg
mov
aaa
push
insb
sarl
cmp
sarl
xor
inc
push
sti
rclb
mov
leave
mov
lea
and
lret
lods
mov
or
or
ror
out
sbb
not
add
adc
inc
or
xor
rcl
incl
push
pop
rcll
jle
jmp
mov
mov
loopne
inc
dec
jb
pop
mov
pop
push
push
daa
insl
inc
mov
sbb
and
cld
addr16
push
arpl
mov
inc
lea
xchg
test
mov
push
insb
push
cltd
and
pop
mov
lds
jmp
add
std
jmp
jne
iret
roll
mov
push
adc
mov
jle
jg
in
mov
xor
mov
and
sbb
add
icebp
mov
add
add
nop
xchg
add
aaa
pop
pop
push
inc
dec
jo
aas
add
add
pop
jb
inc
dec
push
bound
push
hlt
inc
xor
nop
inc
pop
js
nop
jno
pop
pop
push
jnp
inc
adc
add
mov
xlat
into
mov
nop
push
lea
fstl
push
test
dec
sbb
adc
mov
shr
xor
mov
imul
push
repnz
xor
jno
push
xchg
ret
adc
cli
rcr
sbbb
add
push
lea
xor
dec
push
cld
xchg
xorl
push
cmp
pop
or
cli
lds
mov
lret
in
mov
or
dec
push
push
inc
cwtl
sbbl
lea
xor
sub
loopnew
call
fs
sbb
pop
add
pop
xchg
inc
mov
push
lea
and
scas
push
mov
or
cltd
adc
testl
sbb
ret
inc
or
add
mov
pushf
into
or
fs
das
adc
cmp
jl
xor
or
insb
fsub
and
pop
add
push
pushf
cmp
cmp
dec
fidivl
or
fldenv
jl
add
push
add
sub
cmc
pop
lea
and
inc
xchg
cmp
pop
mov
repnz
ret
rcrl
rorl
subl
dec
test
dec
push
push
mov
inc
adc
push
add
leave
idivb
mov
xor
pop
ret
ja
mov
or
es
movsb
jl
inc
add
nop
jle
shrb
cltd
pop
jle
mov
cli
out
iret
add
mov
inc
push
inc
push
xchg
testb
push
add
cli
push
pusha
dec
inc
sub
xchg
or
test
pop
nop
sub
mov
adc
add
mov
out
mov
fcomps
xchg
add
rolb
mov
adc
sub
adc
sbb
add
or
je
sbb
jo
cmp
push
add
sub
inc
popf
fsubs
ljmp
mov
clc
jnp
jle
lret
fs
pop
or
add
fimull
adc
or
je
in
push
inc
add
dec
sub
xorb
mov
fstpt
push
dec
pop
out
mov
pop
sbb
push
sbb
xor
cli
loopne
in
cmp
pop
sub
sar
dec
rol
pop
mov
or
push
pop
lea
or
dec
mov
cmp
jae
or
xor
xor
rcl
dec
xor
cbtw
pop
push
push
sub
js
xor
pop
lock
xor
mov
fildl
add
into
incl
dec
xchg
add
push
add
shl
xchg
lea
sub
xor
push
cmp
pop
mov
and
push
pop
sti
mov
push
aas
push
pop
add
nop
es
add
lea
xchg
push
inc
out
das
dec
mov
js
mov
stc
add
dec
clc
pusha
xchg
add
push
lea
mov
mov
call
add
movsb
lret
imul
les
add
xchg
int3
enter
add
adc
jne
xchg
or
incb
xor
stos
pop
add
lea
pop
loopne
int3
add
fistpl
xor
pusha
sbb
into
lea
add
push
jb
nop
cmp
icebp
push
aam
pop
cld
clc
mov
es
jb
sbb
xchg
add
push
mov
push
jmp
cmc
add
jg
not
dec
bound
sbb
pop
hlt
inc
add
push
push
stos
push
aad
inc
cmp
add
pusha
xchg
cli
sbb
add
popa
push
sub
enter
pusha
xor
push
xlat
popa
pop
inc
pop
jae
pop
into
push
inc
mov
pop
mov
xchg
icebp
sbb
movsb
fcoml
sub
or
loopne
inc
fnstsw
popa
inc
push
push
push
push
sbb
add
dec
sub
clc
shrl
add
sbb
mov
push
push
pop
push
push
fcomp
xor
pop
add
ljmp
shll
dec
push
jle
in
mov
dec
sarb
sbb
pop
jg
xor
mov
push
rcll
push
and
scas
aaa
pop
inc
fistpl
fwait
mov
outsb
jne
inc
arpl
sbb
pusha
adc
push
push
dec
outsl
and
fiaddl
sub
inc
mov
les
xchg
pop
cwtl
stos
aas
scas
jne
call
inc
arpl
sbbl
pop
add
xor
test
push
ret
sub
add
les
jno
push
push
or
jmp
push
fistps
cmp
iret
adc
cli
xor
inc
xchg
xor
add
pop
push
push
push
ljmp
push
mov
mov
gs
inc
sbb
add
add
inc
sub
rorb
mov
lods
rclb
push
jne
push
push
incb
pop
push
fdivrl
xor
add
dec
addr16
out
fidivrs
xchg
sbb
idiv
sub
xchg
negl
insb
and
add
mov
popf
sbb
inc
aad
call
add
loop
push
xchg
pop
ret
enter
push
bound
inc
add
or
loopne
xor
add
sbb
ja
fnstsw
pop
ss
in
sub
push
or
sbb
adc
push
lea
movsb
ret
jno
shrl
out
adc
shl
arpl
ror
add
sub
mov
push
jnp
xor
xchg
or
mov
or
mov
cwtl
xchg
jbe
sbb
ja
dec
mov
jne
cmc
dec
mov
mov
adcb
cwtl
pop
decl
scas
lret
adc
pushf
jns
or
push
sub
dec
int
aam
pop
das
rep
add
call
sahf
popl
or
add
shl
inc
enter
dec
cmp
xor
out
loopne
push
cmp
cld
pop
cwtl
scas
mov
and
mov
push
mov
cli
sahf
jns
fs
repnz
pusha
sbb
imul
adc
sub
lods
cmp
in
add
cmp
push
xchg
addl
stos
paddd
mov
out
xchg
push
add
adc
ja
cwtl
sbb
test
aad
dec
rorb
adc
jge
mov
and
xchg
or
push
dec
cmpsb
push
or
or
inc
xor
sbb
or
dec
add
das
shrb
inc
lods
and
jbe
shr
pop
xchg
adc
add
repnz
mov
dec
lea
cmp
push
push
test
xor
adc
lret
lcall
stc
jne
or
test
incb
push
lea
cmp
loopne
mov
or
ds
mov
inc
add
pop
rolb
mov
fdiv
pop
mov
add
mov
xor
rol
inc
mov
xchg
push
inc
push
je
rol
add
lea
lahf
adc
pop
inc
popf
in
xchg
or
rol
push
mov
adc
push
push
lea
push
rcll
add
lret
not
sub
pushf
adc
push
jge
bound
mov
inc
dec
mov
pop
gs
in
in
cld
push
push
sub
mov
mov
icebp
dec
pop
push
cld
arpl
ret
push
shlb
cld
or
push
lds
out
or
push
sahf
lods
aad
xor
push
jl
push
in
sub
mov
add
dec
dec
rol
aam
rcr
add
lret
jo
test
jg
add
cmp
js
dec
pop
iret
pop
mov
jo
xlat
ret
stos
jae
dec
lea
xchg
mov
sub
vxorps
add
hlt
mov
pop
mov
fucom
aas
inc
popf
jae
shlb
adc
lea
filds
rcrl
imul
sub
ret
adc
cli
xchg
in
data16
inc
cld
mov
push
push
lods
mov
test
pusha
mov
inc
test
push
js
mov
insb
scas
movsl
hlt
daa
add
pop
sbb
int3
pop
ljmp
adc
lea
mov
jo
xorb
cmp
jmp
movsb
mov
lea
jg
push
adc
fstl
sub
stc
xor
lea
mov
add
sub
aas
add
add
xor
in
sbb
push
sub
pop
add
dec
inc
pop
pop
and
sbb
pop
add
das
push
shlb
mov
sub
scas
scas
xorb
sub
shll
js
jp
loope
jmp
fwait
mov
rcrl
push
incb
inc
lea
inc
sub
mov
lods
test
inc
jno
lods
call
push
xlat
pusha
loopne
mov
cmc
mov
adc
loop
arpl
shl
mov
stos
mov
flds
fs
adc
pop
mov
popa
bound
jo
call
das
lret
cmpsl
jle
mov
xchg
insb
push
dec
mov
fsts
dec
pusha
xchg
add
xchg
js
push
lds
push
ja
mov
setnp
out
xor
jb
rcll
pop
nop
imul
arpl
es
dec
pusha
lcall
femms
test
std
pushl
add
sbb
or
push
mov
das
adc
ret
dec
and
or
sub
or
inc
mov
shrb
or
cmpsl
ds
mov
leave
adc
sub
lods
push
into
sub
nop
push
outsl
mov
mov
cli
mov
mov
mov
add
sbb
inc
mul
sbbb
xor
arpl
or
test
sub
add
add
call
cmc
rol
dec
pop
inc
insb
push
insl
dec
pop
xor
jg
mov
push
add
fwait
lret
std
push
andl
mov
movsb
lahf
inc
into
jmp
repnz
les
stc
popa
pop
xor
mov
cmc
jecxz
mov
repnz
lea
sbb
jp
pop
pop
add
jne
jb
xor
popf
push
shr
js
push
lea
jp
push
or
mov
sbb
ja
and
lods
out
or
dec
sub
call
pop
add
push
scas
add
mov
jp
lock
jb
or
xor
mov
rorb
adc
incb
sbb
rorl
or
push
push
enter
je
std
sbb
cmp
addl
mov
cmp
xor
xchg
cmc
in
inc
sub
ror
ljmp
lcall
roll
dec
lret
add
leave
mov
mov
jbe
call
nop
mov
push
pop
enter
pop
inc
sbb
call
pmulhw
dec
push
and
add
leave
fwait
pop
negb
push
movsb
cmp
dec
add
ljmp
jb
add
test
sbb
inc
adc
inc
enter
push
call
outsl
fldl
mov
adc
or
imul
xlat
pusha
cmp
movsb
or
arpl
dec
mov
sub
aam
out
or
aaa
jp
cmp
adc
fwait
push
mov
sbb
lds
cmp
fstl
imulb
test
xchg
aaa
jns
dec
sbb
push
push
sub
insb
fwait
xchg
cld
dec
add
pop
in
pop
mov
mov
xor
lds
xchg
xchg
mov
mov
sub
mov
sub
and
sbb
push
aam
in
pop
pop
push
call
pusha
pop
lret
sti
or
sub
mov
cli
or
push
dec
insb
push
sub
sub
mov
pop
sub
pop
push
jne
sbb
mov
jae
call
adc
loopne
arpl
bnd
mov
xor
pop
push
sbbb
mov
cs
fimuls
and
std
cmp
call
dec
mov
cmp
leave
xchg
dec
jmp
cmp
add
mov
cmp
or
sub
add
inc
mov
push
jno
add
roll
aad
push
mov
push
das
dec
sbbb
mov
mov
mov
mov
bound
cmc
push
add
nop
sbb
mov
int3
sub
and
mov
cld
adc
nop
ja
push
push
xchg
inc
or
ds
outsl
addb
adc
nop
dec
and
sbb
scas
add
loopne
repz
or
add
sahf
add
pop
push
push
sub
pop
call
or
fdiv
mov
xor
adc
shlb
push
push
out
adc
test
pop
lods
movsb
mov
pusha
push
push
push
mov
cmp
or
stos
imul
sbb
xor
std
pop
push
ficomps
sbb
adc
lods
push
fimuls
mov
movsb
sub
rolb
cmp
xor
add
inc
mov
push
and
mov
or
adc
pop
sub
pop
jecxz
add
mov
loopne
andl
push
call
pop
loope
les
adc
sub
in
or
fisubs
add
xlat
xor
mov
push
int3
pop
push
push
add
jb
shlb
loopne
add
sub
sbb
and
xor
lret
dec
in
cmp
hlt
sub
addr16
inc
repz
inc
or
pop
cmp
loop
out
jge
and
xlat
adc
mov
inc
sbb
repnz
add
enter
cmp
mov
jno
aas
stos
int
repz
addl
mov
popa
or
loop
sub
adcb
pop
not
dec
sahf
pop
push
ljmp
mov
in
mov
stos
mov
popa
fsubl
lods
and
sub
lea
rclb
not
mov
pusha
and
xor
mov
xor
and
push
mov
jge
rorl
jb
sub
lds
push
ja
mov
into
orl
mov
push
dec
divl
pop
loopne
mov
jmp
or
rcll
imul
mov
imul
outsl
out
adc
push
das
add
inc
clc
nop
mov
or
push
ret
rolb
pushf
rcrb
sbb
imul
xchg
push
push
mov
insl
scas
cltd
push
add
out
mov
push
pop
jb
sub
cld
inc
adcb
and
pop
scas
gs
or
fiaddl
mov
mov
lods
dec
scas
out
xchg
sub
xlat
or
fs
xchg
movq
jg
pop
and
sti
or
jg
push
jb
sbb
and
mov
cmpsb
dec
lea
dec
jp
mov
push
xlat
cs
sarl
adc
sub
pop
pusha
mov
outsb
or
cmp
dec
xchg
push
dec
jle
xor
movsl
push
lcall
pop
push
dec
add
std
add
jbe,pt
pop
push
mov
push
push
xor
pop
fisttpll
push
and
sub
lock
nop
mov
jns
loop
loopne
xor
xor
rclb
add
icebp
jecxz
call
push
push
lea
sbb
in
sub
es
push
sbb
test
cmpb
and
movd
xchg
mov
pop
sbbl
pushf
jg
cmp
pop
xor
mov
inc
fs
mov
repz
js
or
loope
cltd
adc
sbb
nop
xlat
lds
rorb
sub
je
in
lret
and
cmp
not
dec
or
pop
or
cmp
shrb
dec
adc
inc
or
leave
xor
inc
cmp
push
test
inc
cmp
test
sub
sub
les
ret
jbe
dec
adc
int3
pop
shrl
dec
add
mov
inc
adc
pop
mov
lock
aam
jl
outsl
and
cld
call
bound
sahf
mov
fnstcw
adc
ret
lret
inc
shr
xor
and
adc
and
fnstcw
xchg
xor
xchg
xchg
ret
add
and
je
jl
add
les
imul
xor
pop
dec
mov
cmpsb
popf
das
add
and
jp
inc
movsb
add
lahf
int3
jb
add
mov
rcrl
push
push
lea
sbb
sbb
mov
ja
sub
arpl
and
iret
xchg
push
sub
xor
cwtl
mov
sahf
stos
jp
jl
push
jb
movsl
add
clc
mov
dec
dec
or
pop
ret
adc
in
push
mov
pop
xchg
add
cmc
xchg
mov
add
outsl
dec
push
push
shll
mov
imul
add
push
fdivrp
add
outsb
add
mov
mov
add
les
or
out
push
cs
inc
xor
push
push
cwtl
aad
pop
cwtl
ss
mulb
mov
call
ljmp
mov
jns
mov
mov
inc
mov
lock
mov
rcrb
add
add
push
push
push
xor
shl
push
movsb
mov
mov
int3
pop
fdiv
lahf
jae
std
mov
repz
sar
lds
pop
lds
or
xlat
stc
inc
push
jle
pop
mov
adc
or
pop
fcmovnb
into
lret
and
push
push
push
sub
hlt
std
jae
push
out
in
add
inc
repnz
xor
jge
lea
icebp
pusha
xor
mov
pop
cli
add
repnz
inc
dec
sub
mov
jne
aam
or
outsl
push
mov
xchg
pop
ficoms
ljmp
inc
pop
je
dec
push
xorl
add
jne,pn
nop
mov
adc
mov
lret
push
loopne
xchg
mov
dec
mov
es
pop
add
iret
xlat
dec
push
fcomp
dec
sub
jns
xor
mov
inc
adc
fucomp
add
sbb
outsl
in
adc
aam
clc
es
out
arpl
mov
push
call
inc
push
xchg
or
cld
mov
xchg
xchg
add
ds
fbld
adc
ss
cmp
and
sub
mov
imul
add
pop
leave
test
pusha
dec
push
add
push
sub
add
push
mov
dec
cmp
push
adc
pop
push
mov
call
add
shll
mov
add
mov
cli
loope
sbb
cs
mov
or
insb
adcb
add
mov
fndisi(8087
in
stc
push
outsl
inc
mov
dec
fmul
icebp
pop
push
mov
push
push
test
dec
xchg
pop
pop
push
add
lods
mov
xlat
es
add
cmp
push
mov
lock
pop
inc
ret
inc
leave
and
iret
cs
adc
push
mov
adc
popa
loop
add
jg
aas
lea
mov
sbb
dec
dec
pop
add
jmp
sbb
loope
dec
divps
stc
jle
or
push
dec
adcb
pop
inc
xchg
ja
cmpl
xor
dec
sub
mov
aad
sbb
and
movsl
push
fsubp
xor
sbb
xchg
cmp
add
data16
mov
sub
mov
jmp
jbe
lret
lds
push
push
sbb
add
pushf
pop
sti
sbb
loopne
push
loope
out
xchg
cs
movzbl
xchg
add
mov
ret
push
adc
dec
mov
pop
jno
cwtl
dec
add
repz
call
les
enter
pop
sub
or
nop
ljmp
loop
mov
out
adc
into
faddl
mov
loop
call
stos
pop
xchg
fnstenv
lret
imul
lret
sub
pop
call
movswl
fldl
add
add
inc
adc
push
call
xor
rorb
out
add
inc
test
sub
dec
sahf
popf
sbb
xorb
lcall
fs
lea
mov
fimull
sub
mov
lahf
cmp
jp
mov
rolb
xchg
incb
xor
pop
imul
call
sub
mov
loop
mov
jmp
dec
adc
aaa
cwtl
push
push
in
mov
xchg
mov
jp
cmp
stos
push
pop
fstl
es
fisubl
pop
mov
clc
jge
jg
ds
iret
test
hlt
scas
mov
push
push
ret
cltd
cmp
paddsb
cmp
sbb
stc
sbb
add
lret
jl
jmp
push
inc
pusha
inc
jp
lock
repnz
icebp
aas
mov
ret
or
call
mov
push
add
xchg
add
sub
es
and
pop
jge
fnstcw
orb
mov
add
pusha
ret
add
mov
xchg
sub
or
jne
pop
sub
or
add
jge
iret
mov
xor
pop
jb
inc
and
decl
cmp
push
mov
push
pop
call
inc
xchg
pop
or
pop
lds
shr
outsb
nop
mov
shl
sub
not
rcl
mov
arpl
mov
daa
test
dec
out
cltd
and
or
jns
pop
ss
std
mov
aam
mov
push
inc
in
clc
sub
add
push
pop
test
aas
jo
js
xchg
clc
and
fwait
xchg
je
push
dec
movsl
pop
jmp
push
stos
sub
or
mov
pop
pop
adc
enter
pop
add
mov
ja
sub
and
dec
pop
decl
xchg
mov
xor
lret
cmpsl
and
jns
movb
rcrb
add
push
shr
ja
aas
mov
ja
and
sbb
push
cmp
test
inc
or
mov
add
xor
add
or
push
or
add
cwtl
jg
popf
dec
mov
dec
dec
add
adc
xor
add
adc
je
std
sub
lea
sub
movsb
ds
das
cs
jnp
jecxz
test
stos
repnz
push
push
scas
xchg
out
lods
mov
xchg
stos
jno
and
jl
fld
inc
in
push
je
int3
add
orb
loope
mov
xchg
repnz
push
test
arpl
jp
add
and
push
cmp
mov
mov
inc
repnz
push
test
ret
push
sbb
pop
fstpt
lret
adc
jbe
pushf
inc
shr
lea
inc
xor
add
mov
test
out
arpl
adc
je
dec
loop
xlat
add
call
inc
jns
lock
add
push
icebp
out
loop
mov
sub
add
add
push
xchg
fldl
inc
lret
push
in
call
pop
sbb
sub
addb
jmp
pushf
cmpsb
mov
dec
shlb
call
push
jnp
jge
cmp
inc
add
push
stos
xchg
push
mov
sub
push
push
push
iret
dec
jns
xchg
ljmp
out
adc
jne
movswl
rorb
adc
fcoms
lea
and
pop
jg
or
sbb
sti
and
ret
or
hlt
mov
lods
jp
test
push
push
push
mov
icebp
hlt
or
sub
cmpsl
add
mov
hlt
mov
xor
js
push
outsb
adc
and
inc
iret
cmpsb
test
push
jmp
push
rorb
out
sbb
jp
add
dec
rorb
inc
mov
movsl
inc
fs
dec
shl
jne
test
xchg
jno
iret
fs
incl
xor
imul
xchg
and
mov
xchg
sbb
dec
stos
iret
cmp
in
dec
mov
add
or
pop
pop
cltd
mov
jecxz
mov
outsb
cmp
jns
add
pop
xor
inc
add
push
loopne
mov
add
clc
cmp
add
pop
sub
out
popf
clc
inc
push
mov
dec
mov
movsb
push
jae
lcall
pop
mov
imull
jl
sbb
jmp
jge
sub
push
in
sub
lea
xchg
push
je
or
pop
pushf
les
and
xlat
sub
push
pop
icebp
add
mov
outsb
mov
inc
ror
push
push
clc
mov
enter
pusha
rol
push
add
push
jl
add
inc
lds
inc
dec
mov
jmp
loopne
mov
xchg
enter
in
test
je
mov
mov
mov
add
push
push
mov
pop
dec
xlat
jno
test
xchg
mov
ja
pop
clc
add
sub
mov
add
testb
test
mov
pop
popa
push
dec
call
movsl
imul
prefetchnta
mov
push
daa
mov
xchg
or
xor
sub
lret
pop
sub
ficompl
repz
sbb
adc
mov
add
jo
add
adc
sub
imul
lods
cmp
pop
push
push
jmp
ds
fildll
cld
dec
push
in
sbbb
mov
les
cmp
inc
or
mov
jg
repz
add
out
sub
mov
ljmp
hlt
stos
dec
pusha
inc
or
lds
xchg
pop
add
sbb
or
pushl
cmc
xor
adc
repz
push
dec
cmp
into
popf
loope
dec
int
pop
fnstcw
jg
ss
mov
mov
push
mov
call
adc
fsubrl
pusha
dec
leave
lods
add
dec
dec
movsb
cmpsb
push
cli
sar
lret
not
pop
add
pop
cmc
add
popa
imul
xor
or
inc
ja
add
mov
mov
jno
lea
xor
dec
pop
push
in
int
push
addr16
stc
and
mulb
push
jbe
add
mov
pop
dec
inc
inc
add
cmp
sub
jecxz
pop
out
xchg
sub
mov
and
pop
push
cmp
lret
insb
lock
sub
fcmovnb
test
into
cmp
rcll
inc
sub
inc
add
jae
jno
xor
movsl
clc
bound
add
mov
or
mov
xor
rolb
sub
mov
jb
mov
fimuls
inc
cmp
and
pusha
lcall
and
shrb
adc
in
icebp
stos
in
faddl
cmpsl
lods
inc
push
ret
loopne
and
in
mov
fs
pop
popf
adc
xor
aas
adc
sbb
mov
and
dec
ja
cmp
pushf
test
jne
pop
inc
xor
xor
cmp
movl
in
rcpps
push
outsb
outsb
test
xchg
cltd
stos
and
cmc
adc
sub
add
fs
lcall
cli
je
shl
sbb
cmp
out
fists
leave
ret
push
ficoml
mov
sti
daa
cwtl
rcrb
out
or
ret
rcr
out
mov
or
mov
clc
aaa
pusha
push
pusha
fisttpll
pop
pop
movsl
jo
in
sbb
clc
xchg
jecxz
pop
ds
push
add
sbb
add
imul
push
xor
sub
xor
rorl
ds
pop
push
je
pop
ja
pop
add
push
mov
fistps
data16
or
dec
push
lods
daa
daa
inc
mov
xor
mov
mov
jmp
rol
lea
add
dec
or
pop
in
push
push
jg
inc
aaa
push
cwtl
lea
test
sbb
sub
xor
inc
jle
mov
clc
push
add
push
or
ljmp
jno
xchg
cmp
sbb
inc
mov
mov
pusha
push
push
or
negb
pop
cltd
xor
push
jle
es
or
add
test
cmp
xchg
add
sti
cmp
push
sbb
mov
or
mov
outsl
push
neg
push
clc
add
jae
jae
add
bound
push
or
ja
in
and
aam
fisttps
jg
into
jne
cli
add
pop
jns
pushf
aaa
xchg
add
fdivrs
pop
outsb
lock
cmp
loop
dec
pushf
add
popl
add
cmp
stc
jle,pt
movsb
pushf
popf
dec
loop
add
inc
and
adc
loop
out
inc
add
mov
xor
adc
not
add
pop
cmc
mov
cld
adc
add
lods
add
mov
jno
or
inc
lea
dec
aas
sub
mov
push
sub
mov
jno
dec
ja
pop
add
cwtl
mov
mov
xlat
adc
popa
clc
leave
mov
hlt
dec
iret
fwait
jb
lea
dec
cmc
dec
shl
iret
mov
repz
jge
cwtl
cmp
jo
cmp
adc
pop
out
out
dec
mov
push
fldpi
or
add
leave
dec
add
mov
mov
sti
add
adc
cmp
inc
sub
hlt
lret
push
dec
lea
cmp
add
jmp
inc
lea
cld
jmp
cltd
dec
mov
mov
lods
subb
cmpsl
test
xlat
dec
loopne
pushw
test
ror
push
sbb
pop
cmp
lahf
fsts
xor
imul
jg
scas
sti
cmp
mov
cmp
and
syscall
push
and
dec
sbb
mov
cli
or
out
push
pop
mov
rcrb
jbe
jo
adc
pop
inc
loopne
mov
int
add
mov
add
xchg
lock
mov
test
aad
push
cli
jno
add
push
and
lea
adc
cmpb
cmpsb
xlat
sub
adc
cwtl
lea
push
rcl
in
sub
fldl
loop
lea
add
jae
cmpsl
jmp
shl
push
mov
or
push
icebp
jmp
sarb
jne
out
xchg
push
xchg
or
cmpb
cli
jmp
into
lret
add
js
in
test
mov
cmpl
fcompl
and
push
inc
lea
dec
jecxz
mov
push
push
dec
jne
mov
mov
jg
sahf
jns
jmp
push
jge
jmp
int
loope
xor
stc
pop
dec
jae
inc
mov
mov
int3
xchg
add
sub
xor
mov
lods
push
add
add
out
pop
test
pushf
xchg
int
jp
hlt
scas
cmp
leave
stos
popf
aad
fsubl
xchg
xor
test
pop
push
cld
scas
daa
pop
nop
mov
push
and
dec
add
mov
lods
dec
push
pcmpgtb
jge
push
pop
repz
push
les
cmc
push
lret
cmp
push
loope
or
inc
adc
sbb
or
push
sti
inc
test
jo
sub
add
and
mov
not
cmp
dec
pop
arpl
daa
adc
and
dec
inc
sub
inc
std
mov
and
popa
fcoms
les
inc
out
dec
imul
xor
add
testl
pop
decl
stos
pop
sbb
mov
mov
mov
adc
push
jg
cwtl
fldl
cmpsb
in
ljmp
and
add
mov
or
je
out
inc
jae
xor
mov
xchg
mov
and
pop
push
inc
dec
cmpsb
xor
sub
or
shll
mov
add
fdivrl
repz
add
lea
push
rorb
inc
mov
mov
repnz
push
cmpsl
pusha
sbb
lea
xchg
xchg
dec
fwait
mov
inc
call
out
and
movsb
fcoms
cmp
clc
cmp
mov
mov
cmpsb
in
loope
les
repnz
fstl
and
mov
cmp
sti
aam
cmp
pop
fs
rorl
movsl
nop
cmp
inc
add
lret
pop
sbb
stc
adc
in
cli
orb
xchg
daa
pop
dec
inc
push
push
jnp,pn
in
and
mov
mov
pop
jecxz
push
cli
int
add
addr16
pop
divl
mov
jo
push
push
lods
dec
xchg
mov
mov
mov
and
fsts
jo
sub
add
jbe
fidivl
in
dec
xchg
roll
fisttpl
shr
les
add
fnsave
loopne
mov
push
popf
bound
lret
add
jmp
inc
shlb
scas
ret
adc
pop
gs
ja
call
add
jg
xchg
cmp
loopne
lea
mov
mov
jb
push
add
cmpsl
loopne
push
inc
lcall
shlb
sti
mov
adc
scas
test
mov
inc
jle
scas
add
movsl
popf
nop
sahf
add
pop
add
push
pop
mov
lret
sbb
mov
add
ficompl
fisttpl
test
add
test
imul
cmc
iret
daa
int
aas
into
cli
fucomi
movsb
dec
push
jo
mov
repz
shr
inc
add
xchg
cmp
xchg
cmp
push
jl
bound
jg
popa
pop
dec
jnp
jo
push
dec
add
les
add
push
pushl
push
iret
mov
shr
and
testb
das
or
scas
loop
bound
ja
aas
or
adc
aad
stos
call
outsl
pop
push
shl
rol
xor
insl
aas
pop
scas
xchg
icebp
pop
and
and
add
jmp
movsb
push
push
adcb
in
arpl
sbbl
fmul
pushf
hlt
das
pop
mov
inc
push
push
pop
lret
mov
inc
mov
addr16
push
push
dec
push
sbb
add
inc
lea
test
push
or
jl
jo
push
pusha
push
sub
sar
pop
push
lods
sbb
js
std
loope
lds
into
sub
test
sub
or
mov
jnp
and
sub
stos
sahf
mov
out
add
ficompl
test
les
dec
mov
in
mov
cs
xchg
adc
add
test
jo
ror
pop
and
testl
subb
adc
mov
jbe
or
mov
push
push
pushl
xchg
pop
push
adc
adc
mov
sub
mov
subl
jae
pop
lea
daa
iret
insl
push
and
cmp
dec
test
dec
sbbl
mov
add
hlt
pop
add
xchg
and
adc
pop
sub
or
loope
xchg
sub
pop
leave
push
push
push
push
lea
mov
jne
add
mov
stc
cs
les
push
scas
adc
ret
loope
scas
in
cmp
dec
cltd
in
stos
hlt
mov
sub
or
xchg
cmp
jo
mov
adc
add
push
lea
icebp
aam
cmc
sbb
lods
jno
jo
sub
mov
lret
jne
sahf
push
adc
fs
addb
xchg
adc
iret
pop
test
pop
test
dec
and
nop
or
mov
fsts
add
xor
sbb
popa
sub
inc
int
ds
adc
mov
mov
pop
jne
push
mov
repnz
loopne
nop
mov
mov
inc
lods
call
rolb
push
push
dec
push
fisubrs
popf
movsl
fcmovnb
lods
push
sti
ljmp
xor
ror
push
shr
out
lea
pop
and
jne
lock
shrb
cld
shr
inc
dec
movsb
pop
inc
in
xchg
pop
shlb
jb
dec
ljmp
cmc
pop
push
sub
mov
add
mov
mov
jg
inc
lods
xor
sub
rorl
add
cli
mov
fsubr
xor
sarb
sbb
subb
cld
lahf
mov
cmp
push
ja
xchg
push
lahf
adc
jnp
sbb
adc
sbb
push
sub
jne
dec
push
jo
aas
test
stos
scas
leave
inc
cs
sbb
or
adc
rclb
cmp
xchg
lcall
lock
jl
push
test
jb
add
jp
loopne
add
mov
sub
cmpsb
xchg
mov
or
mov
push
mov
pop
ja
stos
dec
cli
sub
testl
lret
jno
push
pop
cwtl
fabs
sub
pop
pop
lahf
pop
cs
mov
xor
sbb
movsb
negl
aam
mov
or
in
mov
jmp
sti
arpl
cmc
shl
pusha
push
add
dec
mov
pop
jecxz
mov
push
and
xchg
pop
leave
xchg
loopne
dec
or
push
xchg
loop
pop
hlt
or
lret
loope
test
adc
ret
push
sbb
out
push
or
arpl
sahf
add
xchg
push
mov
and
push
push
push
push
push
jg
mov
sub
add
mov
ja
cli
pusha
cmp
push
jmp
inc
mov
mov
sub
lods
imul
into
push
and
cmc
add
mov
jmp
sub
inc
movsb
arpl
xor
out
cmp
fwait
pop
into
les
dec
sti
mov
push
out
outsb
xor
shl
mov
jl
xor
dec
adc
cmp
mov
xor
daa
xor
push
lea
pop
incb
or
push
push
push
lock
mov
or
mov
jne
lea
ror
insl
dec
inc
mov
mov
loopne
loopne
xor
out
popf
xorb
sub
enter
sub
inc
aad
or
icebp
xor
lea
stos
add
pop
xor
add
hlt
arpl
jbe
add
into
mov
mov
push
lea
pushf
call
out
mov
mov
and
inc
bound
in
mov
enter
inc
add
sub
pop
out
sub
jg
push
mov
add
movsb
sbb
js
imul
sub
push
add
test
shrl
fsubs
sbbl
mov
xor
mov
inc
js
fwait
inc
in
cli
repnz
mov
push
sbbl
or
pop
push
sbb
inc
xor
add
ficoml
xchg
jnp
xor
inc
add
xor
add
ror
add
mov
call
push
add
and
cmp
adc
push
lea
mov
je
gs
ja
xor
imul
pop
xor
int
loope
add
jg
add
test
jecxz
rorl
inc
mov
mov
sbb
mov
mov
call
imul
mov
mov
and
test
nop
std
add
fnstsw
jns
jne
add
inc
lea
cltd
pop
leave
jo
notl
or
xchg
push
push
scas
pusha
adc
mov
xor
fs
out
pop
incb
push
push
lock
pop
popa
and
jae
fidivrs
ror
stc
test
add
push
xchg
adcb
sub
mov
leave
jp
and
push
iret
push
add
clc
fs
or
sub
jne
jp
ss
inc
adc
pop
ficomps
push
jbe
add
push
ret
leave
in
mov
adc
push
push
dec
adc
pop
rcrl
jmp
imul
js
add
movb
pop
lret
sbb
mov
hlt
and
add
xlat
pushf
sbb
mov
mov
sub
rcll
movsb
dec
xchg
adc
sbb
add
cmp
inc
rcll
push
push
mov
push
jo
lahf
test
pop
lea
push
repz
lret
pop
jo
lea
lahf
popa
cmpsl
jnp
push
aad
sarb
repz
push
xor
ljmp
mov
orl
cmpsl
adc
cld
lea
xor
iret
adc
movsb
in
outsl
mov
pop
pop
sbbb
test
add
pop
push
inc
xor
roll
pop
lea
pop
push
xchg
call
pop
leave
loopne
inc
cli
push
sub
dec
notb
push
mov
call
test
fiaddl
lock
in
and
inc
dec
sub
add
and
mov
cmp
sbb
push
ret
or
shr
test
push
push
pusha
push
push
push
or
sub
xchg
loop
faddp
pop
or
inc
ror
fucomi
and
add
push
lahf
aaa
xchg
push
cld
jns
shr
add
aam
push
stos
jmp
outsl
stos
testl
jl
xor
ds
test
push
push
push
in
xchg
xchg
out
add
nop
stos
enter
add
mov
add
in
ljmp
je
inc
call
mov
test
and
fidivrl
out
loope
xor
into
push
shlb
mov
pushf
setge
xor
rorb
xor
mov
iret
sbbb
inc
cwtl
add
mov
mov
inc
test
nopw
mov
add
sub
dec
inc
mov
xor
std
in
fistps
xlat
push
lret
cmp
dec
pop
js
jne
sbb
adc
pusha
mov
and
push
push
inc
adc
lret
add
orl
xchg
rclb
inc
adc
push
je
clc
mov
add
dec
pop
sbbl
call
mov
push
push
jl
aas
mov
cmp
decl
iret
pop
add
cld
and
hlt
aam
fldl
addb
mov
mov
cmp
push
add
lea
dec
hlt
shll
push
jbe
lret
add
jnp
sbb
push
lea
std
jnp
jmp
faddl
add
jmp
lods
lea
outsl
mov
push
hlt
je
rcll
or
cltd
pop
add
push
testb
jbe
pop
pushf
mov
add
aaa
mov
cli
mov
cwtl
lods
pop
add
in
push
sbb
add
call
aas
xlat
inc
adc
mov
mov
loopne
xor
xor
pop
cmpsb
shrl
adc
inc
add
mov
add
mov
xchg
push
mov
cmp
movsb
lods
loopne
cld
pop
push
iret
add
mov
push
sub
pushf
pop
xor
roll
popa
rcll
inc
enter
cwtl
icebp
and
adc
add
xchg
pop
hlt
xor
dec
test
arpl
scas
inc
outsl
mov
int3
add
loope
sub
cmp
or
add
sub
xchg
in
loop
add
rcl
std
mov
cmc
add
mov
pshufw
add
cltd
ja
add
imul
iret
inc
pop
jle
negb
push
cmc
dec
jge
fsubrs
imul
dec
dec
enter
stos
pshufw
cmc
inc
dec
movb
popf
or
decl
jmp
lcall
mov
xchg
push
faddl
dec
mov
cmp
jle
add
fisttpll
dec
jno
sahf
mov
mov
in
test
fcoml
cmpsl
push
cs
sbb
cmp
jb
mov
add
aam
sbb
or
mov
inc
nop
lcall
data16
icebp
add
pshufw
cwtl
call
xor
pop
cmpb
ret
cmp
jle
loopne
push
fidivs
ja
in
loope
pushf
cmc
add
insl
and
cwtl
movl
cmp
jo
loop
fs
add
test
cmp
enter
add
and
mov
cmp
repz
cmp
adc
into
dec
add
jecxz
std
roll
xor
mov
jae
fwait
add
and
loope
or
rclb
sub
mov
mov
inc
and
inc
mov
xchg
or
inc
sub
addb
push
imul
mov
shrl
add
adc
mov
fstps
xor
addr16
push
test
shrb
xchg
jge
pop
add
movsb
lds
dec
enter
add
out
data16
outsb
jg
test
fbld
adc
xchg
call
movsbl
iret
mov
dec
jmp
aad
or
outsb
jne
add
xchg
push
jl
out
cmpsb
out
xchg
add
in
mov
and
or
outsl
bound
add
jecxz
cmp
sbb
mov
add
add
sub
pop
inc
stos
jl
add
inc
mov
cld
add
out
cmp
add
add
cmp
das
pop
jo
scas
or
adc
pop
or
fmuls
call
jns
or
int
cmp
xchg
arpl
xlat
inc
adc
add
push
adc
ficoml
insl
push
dec
orb
nop
jnp
lcall
test
mov
pushw
dec
lods
pop
jle
pop
and
sarb
sub
add
inc
rol
ret
jg
lock
push
mov
enter
add
imul
pop
sub
outsb
add
ja
clc
and
push
or
and
adc
dec
packuswb
jae
js
xor
jns
mov
and
shlb
cmp
pop
inc
movb
subl
sbb
and
xchg
in
cmp
jae
clc
sub
push
les
cvtps2pd
jo
pusha
scas
or
imul
mov
hlt
cltd
fcomps
sar
rcrl
pop
push
sahf
sbb
add
adc
js
pop
loope
in
fildl
loop
leave
pop
outsl
add
lcall
jg
pop
mov
cmpsl
ljmp
push
xchg
pop
push
pop
cmp
or
adc
pop
push
inc
push
cli
pop
incb
bound
loopne
mov
outsl
in
icebp
mov
adcb
cmp
add
adc
dec
fisttps
lahf
jo
aaa
push
push
xchg
nop
mov
jle
out
aam
nop
add
dec
test
pop
sbb
mov
and
pop
lock
leave
aad
call
roll
popl
jmp
lock
cmova
aaa
movsb
cmp
add
xchg
lock
in
imul
add
mov
adc
mov
jne
adc
repz
xlat
in
imul
mov
insl
sbb
inc
mov
cmp
int3
push
dec
xchg
mov
add
mov
mov
jnp
add
loope
testl
stos
push
mov
mov
orb
cld
imul
add
xor
sbb
or
mov
in
jnp
out
je
dec
fnstcw
lahf
pop
add
xchg
cmp
gs
jle
xor
cld
and
push
repnz
add
enter
cmp
add
stos
push
xchg
add
jb
cmp
dec
aam
inc
adc
lock
insb
dec
push
add
and
xor
pop
dec
popa
inc
add
imul
test
jo
pop
add
push
mov
je
add
xlat
subl
jl
sbb
rolb
mov
movsl
jecxz
sub
fmuls
inc
add
add
xchg
dec
js
sbb
iret
popf
add
cmp
inc
cmp
flds
lods
test
add
sbb
xor
cmpsb
push
jno
xor
outsb
mov
notl
adc
cmp
push
loop
popf
inc
mov
cmp
add
loopne
or
jo
out
xlat
add
dec
xor
inc
or
lahf
mov
add
pop
xchg
jns
jge
ret
add
lds
les
mov
or
je
enter
adcb
sbb
ret
jno
push
jae
outsl
xor
inc
sbb
loope
add
aad
sahf
mov
pusha
sub
push
ret
jne
imul
cmpsl
add
rclb
xor
sub
mov
sbb
movsl
xor
das
push
add
aad
mov
pushl
add
sbb
loopne
cld
add
imul
and
and
mov
in
jbe
int
jecxz
hlt
pop
out
add
stc
rolb
cwtl
imul
outsb
xor
mov
mov
rorl
popl
jo
jg,pn
in
pop
mov
stos
xchg
out
mov
add
sti
push
jno
pop
add
mov
lea
ljmp
lds
stc
inc
push
jo
js
or
xchg
cmp
add
pusha
lds
pop
cmc
mov
mov
shll
aam
orl
sub
leave
add
inc
cs
mov
testb
ss
inc
mov
cwtl
add
leave
jae
xlat
movsb
fldl
stos
loop
fsubs
je
xchg
mov
xor
ficoml
xchg
lods
mov
add
sbb
xor
inc
add
cld
nop
lds
mov
repz
and
add
jecxz
cs
mov
dec
add
lods
add
add
mov
push
stos
mov
lods
fiadds
jp
pop
pop
xchg
inc
mov
add
cmp
add
or
inc
or
add
aas
xor
and
ret
fisubrl
sbb
test
movsl
aam
popa
jb
cmpsl
add
loope
dec
out
cmp
rcll
add
mov
add
jae
sbb
adc
add
movsb
jecxz
add
cmp
add
test
out
es
pushf
add
push
jp
add
leave
lcall
push
in
jp
mov
mov
xchg
hlt
sub
lret
les
push
cmp
and
rolb
leave
push
add
iret
negb
nop
cltd
xchg
call
sbb
mov
sbb
ljmp
lcall
jp
or
test
add
add
out
js
inc
data16
inc
enter
jno
cmpsb
into
fsts
mov
push
mov
and
mov
fnsave
push
sti
shll
mov
mov
out
out
cld
sbb
out
push
clc
or
or
push
shr
pop
sub
and
add
mov
pop
add
roll
jae
cltd
out
mov
mov
lods
sbb
fmul
cmp
testb
jae
jl
insb
and
insb
add
mov
sub
and
jecxz
mov
repz
pop
addl
lods
insb
jo
out
repnz
pop
xor
pop
add
ds
xor
rorl
std
mov
addb
lods
fcomps
int
cmc
add
push
xchg
dec
mov
add
xor
stos
repnz
jl
push
outsb
js
fiadds
loopne
hlt
inc
sbb
add
push
cmpsl
aas
daa
cmpsb
add
pushl
add
lcall
add
repz
inc
in
dec
out
nop
add
ja
arpl
mov
xchg
lahf
sbb
std
in
pop
mov
rorb
mov
popf
in
pop
mov
pop
pop
iret
out
cmp
pop
faddl
pop
lods
cli
xchg
jae
loopne
out
sti
sub
jbe
add
icebp
mov
pop
je
xor
cmp
popf
or
sti
sub
ret
jecxz
xchg
add
fisttpll
shrb
and
in
add
inc
xor
mov
addb
add
mov
cs
add
xchg
mov
out
cmp
pushf
add
lret
ror
mov
xor
xor
add
out
in
mov
xchg
push
pop
fwait
inc
outsb
loopnew
adc
ds
add
cmp
je
dec
adc
filds
stos
jle
mov
jl
add
mov
add
jmp
jne
aaa
repnz
add
mov
pop
aad
loopne
push
fsubs
add
cmp
aas
and
popl
popf
pop
add
leave
and
add
adc
lods
cli
arpl
pop
rorl
lret
sub
pushf
data16
fiaddl
int3
insb
iret
or
ret
arpl
mov
add
mov
jnp
inc
push
push
loopne
repz
add
subb
jge
scas
push
cli
inc
out
add
mov
lods
mov
loope
into
inc
mov
jae
popf
test
pop
ret
sub
sub
out
fnstenv
or
and
js
add
or
mov
inc
jge
sub
pusha
rcrb
push
popf
mov
push
cmp
rolb
sub
add
jmp
xchg
nop
js
mov
scas
adc
lds
sarl
xchg
in
xchg
rcl
pop
addb
out
in
jp
mov
addb
inc
add
cwtl
mov
pop
push
dec
in
mov
mov
xchg
in
xor
jg
push
inc
mov
lahf
xor
scas
cmp
push
add
enter
push
pushf
repnz
scas
mov
sub
mov
cmp
lock
cmpb
and
test
xor
js
loop
push
clc
call
add
ss
shrb
rep
dec
sub
xchg
loopne
add
dec
mov
mov
imul
sub
movsl
mov
aam
push
add
pop
cmc
loope
shrb
dec
sub
cli
shrb
pop
mov
idiv
xchg
ss
daa
in
mov
popfw
aaa
mov
into
dec
mov
add
dec
and
orl
mov
fdiv
mov
xchg
and
pushl
add
in
mov
jmp
int
ret
sub
mov
add
pop
jbe
xor
mov
add
insb
cmp
mov
ja
cmp
aad
sub
mov
push
iret
lods
addr16
mov
int
inc
dec
jecxz
or
cs
pop
add
ret
add
or
lods
dec
cmp
repz
movsb
mov
test
ljmp
test
es
inc
inc
add
shll
roll
insl
pushf
xchg
mov
aaa
mov
add
cmp
or
es
cmp
adc
popf
lock
mov
pop
push
xchg
insb
pop
cmp
add
inc
ds
jecxz
sub
or
mov
fildl
push
add
xor
cmp
roll
sub
xor
and
sbb
ja
in
shlb
out
push
mov
xchg
cmp
lods
loopne
pop
arpl
addb
repnz
sub
inc
xchg
outsl
xor
fnstenv
lods
sub
jae
nop
inc
xor
stos
das
add
orb
outsl
sub
test
add
mov
filds
inc
arpl
push
test
cmp
insl
and
add
sbb
mov
or
mov
fucomi
aam
rolb
cmc
fwait
jp
xchg
mov
xchg
movsb
loop
and
dec
add
pop
outsl
jmp
in
mov
adc
nop
pop
jge
sti
cmp
add
mov
in
xlat
push
cld
inc
icebp
pop
push
inc
cmp
mov
aaa
jp
scas
xorb
add
adc
clc
jle
roll
icebp
movsb
sbb
add
mov
and
and
xchg
xchg
adc
lahf
or
mov
add
mov
inc
jbe
call
icebp
popf
imul
or
dec
insb
call
pop
add
and
hlt
arpl
jns
add
daa
push
add
xchg
pop
outsb
mov
iret
sbb
jbe
repz
arpl
cmp
xor
cmp
cmp
or
lahf
jns
inc
out
loop
add
lods
cmpsl
bound
xor
fisubrs
pusha
dec
rcl
add
cmc
xchg
outsl
add
jne
loopne
pop
xor
xchg
adc
in
add
pushf
cld
insb
lret
fcoms
cli
shrb
aad
mov
shr
inc
sbbb
add
add
lret
adc
aas
call
xor
incl
push
dec
mov
cmc
lcall
push
add
jns
add
pop
stos
sub
and
or
sbb
repz
sbb
ret
sbb
sbbb
or
jno
cmp
movsb
add
jne
add
push
insb
scas
pop
in
roll
pop
stc
and
xor
add
jno
popf
int3
xchg
sub
bound
mov
sar
xchg
jno
stos
xor
fldl
add
lock
xchg
nop
jmp
insl
sbb
sub
pop
xchg
pop
and
sbb
enter
lfs
or
test
dec
dec
xchg
andl
dec
add
xchg
mov
in
inc
or
push
xor
and
xor
dec
rolb
in
rcrb
jge
mov
or
push
addr16
fiadds
mov
lods
add
enter
test
add
cmpsb
aam
mov
bound
inc
dec
cld
sbb
sbb
rorb
xchg
outsl
pop
add
pop
nop
cmp
jmp
sub
sbb
test
subb
loope
sbb
jmp
test
and
jl
push
lock
out
scas
cmpb
adc
mov
xlat
inc
jge
mov
xor
mov
outsb
fnstenv
add
call
cltd
lods
pop
ret
ret
pusha
pusha
repz
outsb
jp
add
mov
xor
inc
mov
not
dec
shrb
rclb
jmp
or
bound
js
cmp
adc
loopne
sub
sub
mov
xchg
cmpsb
and
mov
mov
test
in
das
cmp
sbb
inc
mov
repnz
cmp
sysret
imul
dec
shrl
push
testl
in
leave
pop
popf
inc
iret
sub
add
jb
add
push
jb
add
popa
cmpsl
xchg
cwtl
cmp
lock
add
inc
jnp
pop
gs
or
and
fcomip
in
jae
add
lods
decb
in
xchg
lcall
adc
hlt
push
adc
inc
or
mov
cmp
aas
jne
lods
mov
add
and
pop
daa
iret
cmp
test
leave
fcmovb
add
out
rcrb
or
cmp
inc
popf
inc
xor
sbb
mov
clc
add
push
ds
data16
mov
sbb
popf
jmp
mov
pop
adc
mov
xor
cli
fldlg2
push
add
test
ds
push
add
in
scas
xor
daa
mov
lock
xor
lods
faddl
out
in
add
push
lock
add
adc
aam
push
add
xor
fcomi
cmp
add
fldcw
jmp
mov
aad
sbb
mov
add
popf
and
push
mov
imul
pop
jp
add
in
mov
jecxz
push
in
cmp
push
add
ljmp
or
xchg
mov
push
aam
push
sbb
int3
add
mov
jbe
into
leave
loopne
cmp
adc
push
shlb
add
jae
stos
rolb
or
fwait
cmp
pop
add
push
adc
pop
cmp
out
push
add
push
mov
dec
or
cmpl
lods
add
jnp
loopne
pop
mov
add
ror
add
xchg
push
inc
fwait
mov
std
loope
repz
add
push
popf
arpl
lods
add
jb
call
dec
dec
and
pop
rcll
pop
scas
inc
aaa
and
fidivl
call
hlt
les
das
cmp
dec
std
mov
repz
dec
sbb
out
push
xor
xchg
sub
in
mov
dec
add
ss
push
inc
and
lods
jl
add
cmp
rolb
inc
dec
jg
mov
or
test
add
push
inc
sbb
insl
add
xchg
insb
pop
or
nop
imul
adc
pusha
dec
mov
iret
repnz
and
add
xlat
xor
jmp
or
jl
cmpsb
add
test
sbb
mov
jecxz
lcall
sub
mov
int3
gs
add
shlb
out
jns
jg
jb
add
sub
sbbb
pop
add
call
jle
ljmp
ror
out
pop
addl
lock
lods
or
clc
movsb
add
dec
out
xchg
ficomps
clc
sub
mov
xchg
jge
and
add
gs
int3
xchg
add
inc
adc
mov
fistpll
push
cwtl
add
ret
ja
add
inc
sbb
cli
sti
stos
cmp
and
and
pop
and
push
push
add
push
jmp
adc
in
jp
mov
dec
cmpsb
add
repz
inc
in
test
test
hlt
jo
add
stos
aam
dec
scas
sbb
add
xor
or
cmpsb
jnp
add
ret
add
mov
rorl
aas
add
scas
mov
nop
mov
std
mov
ret
mov
hlt
je
sub
add
mov
or
add
rcll
inc
lahf
mov
mov
mov
dec
lods
mov
andb
push
stos
adc
or
pop
sub
cmpsl
fnstcw
pop
inc
int
pop
scas
mov
mov
repnz
addb
ror
add
add
shrl
cmp
xor
sub
add
sub
mov
lcall
pop
mov
inc
movsb
mov
inc
jge
add
add
mov
pop
popa
cmpsb
inc
and
sub
push
mov
or
test
flds
icebp
and
in
js
pop
enter
mov
into
add
pop
and
call
mov
add
cld
pop
fwait
test
add
enter
cwtl
xchg
jl
fcoml
add
cmp
mov
cmpsl
mov
adc
push
jp
inc
xchg
xor
into
in
clc
lret
sahf
mov
jae
test
shll
fldl
incb
movsb
cmp
mov
in
push
adc
xchg
mov
fistl
pop
sbb
add
push
test
sbb
add
in
dec
pop
jge
cmp
pop
add
push
cld
cli
iret
dec
enter
repnz
shr
rcrl
inc
push
les
xor
push
repnz
ss
daa
cmpsl
add
outsb
ja
add
inc
add
and
xchg
aam
mov
xchg
and
add
dec
cmp
repnz
adc
popa
fnstcw
and
lea
sub
sbb
shrl
sub
push
aas
jp
daa
inc
repz
or
sahf
adc
cld
orb
pop
add
hlt
imulb
push
and
or
and
add
aas
fisttpll
jl
jnp
adc
dec
ret
jp
sbb
adc
mov
inc
push
push
mov
cmp
or
jnp
in
xchg
popa
mov
iret
pop
or
jae
out
xor
gs
sub
add
dec
outsb
pushf
mov
xor
cwtl
imul
sbb
add
fidivs
dec
add
add
aaa
add
gs
mov
dec
mov
push
sbb
mov
xchg
push
pop
out
into
imul
fcmovb
mov
jne
and
nop
add
pusha
mov
or
jnp
add
popa
push
outsl
inc
sub
add
cmpsl
xchg
push
mov
sarb
aam
cmc
repnz
ljmp
add
cli
cmp
fldenv
bndldx
cmp
mov
imul
js
sbb
mov
add
mov
fdivr
roll
lock
dec
jbe
or
aas
add
sbb
hlt
jae
xchg
cld
or
lods
pushf
test
repz
and
adc
cmp
xor
adc
jns
add
in
inc
cmp
mov
lea
insb
push
movsl
xor
scas
lock
movb
scas
in
inc
jecxz
lret
add
add
mov
imul
mov
add
inc
leave
cmp
add
push
inc
ja
mov
add
xchg
out
push
jnp
lret
mov
pop
cmp
add
outsl
jp
and
mov
mov
shrb
cmp
adc
xor
mov
add
mov
xor
sbb
dec
push
xchg
push
bound
push
loopne
stos
test
jg
dec
fstpl
add
sbb
and
cltd
aad
pop
data16
jbe
movsl
sub
addb
push
push
clc
jbe
add
pop
lock
mov
sbb
out
and
cltd
add
ljmp
aaa
add
cld
in
add
imul
xchg
out
push
mov
or
pusha
dec
subb
int
sbb
mov
jle
push
fwait
adc
pop
ret
mov
aaa
push
add
movsb
mov
sbb
pop
sbb
fwait
sub
popf
lcall
aad
xor
add
subl
mov
add
lret
cld
in
inc
add
and
jmp
or
adc
loop
dec
fdivrl
and
xchg
sbb
inc
pusha
and
push
lea
sub
xorb
andb
cmp
movsl
into
add
add
in
dec
xchg
mov
add
cwtl
je
add
adc
sar
stc
pop
add
jp
add
jecxz
aam
popa
fadds
push
xchg
cmp
xchg
loopne
aaa
pushf
mov
push
push
sbb
cli
mov
sbb
add
fidivs
jl
in
pop
and
roll
push
mov
adc
fwait
or
add
mov
out
popa
adc
sbb
fisubrs
iret
push
mov
scas
les
add
jecxz
lds
jl
sarb
cli
pop
bound
dec
lock
in
add
test
pop
movsl
push
ljmp
pusha
sub
pop
jns
add
dec
xor
and
xchg
mov
push
rcrl
push
fxch
jb
add
pop
jmp
jne
add
cwtl
test
inc
arpl
xlat
add
insb
inc
movsl
mov
push
add
ss
pushf
jle
add
fsts
xchg
inc
idivl
add
outsl
cld
test
pop
insl
push
xchg
call
lcall
lahf
mov
or
xor
dec
add
nop
add
js
stos
mov
lds
jo
adc
loope
cmp
add
negb
test
in
push
inc
scas
or
lods
xor
mov
cli
adc
jge
xor
inc
push
ja
cmp
das
add
sbb
sbb
push
subb
js
hlt
adc
fs
add
loop
fistpll
sbb
cld
xorb
add
repz
mov
fnsave
loopne
popf
pop
ret
cmp
cwtl
sbb
jno
in
jns
nop
fs
push
stos
add
dec
pushf
fsubrs
in
outsb
add
sub
mov
push
aad
and
iret
or
fwait
pop
pusha
pop
push
cmp
fs
cld
push
int
jle
stos
xor
mov
or
add
mov
fidivl
add
pusha
out
std
sbb
add
cltd
hlt
mov
and
ds
add
int
es
cs
fwait
inc
cmp
scas
or
jb
sbb
test
mov
pusha
push
cmpsl
add
stos
jne
andl
push
cmp
push
xchg
jb
ja
pop
fs
add
sbb
mov
add
mov
or
std
imul
add
mov
shlb
cmpsb
fcompl
nop
cwtl
rolb
lods
cmpsl
popf
jb
adc
push
dec
loop
push
inc
mov
addr16
ds
xchg
add
cmp
dec
mov
clc
in
add
sbb
inc
inc
jb
and
pop
fwait
dec
pop
jg
mov
jmp
nop
mov
xor
lods
push
push
or
add
frstor
sbbb
push
int
add
lret
cwtl
or
arpl
mov
hlt
loop
add
jmp
mov
incb
repnz
sub
shr
movsb
test
cwtl
fstpl
dec
addl
push
or
add
loope
sbb
insb
fadds
xorb
outsl
add
push
add
sub
dec
lret
roll
add
das
std
pushl
jnp
add
pusha
mov
loop
adc
push
ds
enter
pop
jbe
aas
jnp
rcrb
and
sub
jne
mov
scas
push
loope
rorb
mov
icebp
lods
int
rcll
jl
xlat
add
jne
xor
das
add
aaa
xchg
jle
add
mov
ss
mov
dec
inc
in
les
js
mov
add
mov
xchg
dec
repnz
or
cld
add
fsubl
add
aam
dec
clc
loopne
imul
mov
cmpsl
fcomip
add
mov
imul
cmp
add
jecxz
sub
cmp
add
mov
std
pop
add
or
jecxz
out
and
sub
sub
lret
adc
outsl
jnp
das
add
mov
rolb
out
insb
sbb
mov
repz
lcall
mov
push
pusha
cmc
pop
add
mov
pop
add
addl
cmp
cwtl
push
test
addl
in
ret
outsb
dec
cmp
test
rolb
dec
add
xchg
and
or
mov
jne
xchg
dec
outsl
add
xor
pop
add
cmp
adc
stos
cmp
enter
or
xor
inc
dec
cmpsl
sbb
push
pushf
dec
je
xchg
jne
add
pop
rclb
inc
add
xor
and
fcoml
test
jnp
sub
mov
xor
mov
push
lea
cmp
or
aad
psubsb
cmp
adc
push
jae
outsl
rorb
add
add
lret
adc
in
and
jle
add
mov
enter
in
leave
lret
and
dec
or
mov
mov
rsm
ficompl
inc
jne
in
dec
add
dec
xchg
test
add
and
xor
mov
cwtl
push
dec
mov
sbb
lahf
pop
mov
cltd
sahf
cmc
add
mov
int3
popf
shrb
and
add
cld
sub
nop
add
mov
cmp
push
adc
add
add
or
cmp
inc
fcoms
add
pop
inc
jno
in
add
sbb
inc
fcomi
mov
sti
fisubrl
lock
or
jl
out
stos
xchg
cmp
mov
mov
mov
inc
test
inc
cwtl
fwait
in
sub
add
inc
fcmovbe
andb
cli
push
aaa
negl
das
sti
or
pop
xchg
xchg
add
repnz
flds
sub
pushf
pop
pop
sbb
lds
les
lods
aad
lock
leave
mov
aam
and
push
stc
pop
cmp
dec
sbb
pop
in
sbb
dec
call
push
xchg
rclb
dec
movsb
add
xchg
jmp
aas
add
rol
in
push
push
sbb
cwtl
popa
sub
jbe
mov
pop
es
add
add
add
scas
mov
roll
sub
xor
das
pop
les
add
adc
dec
in
or
mov
pop
sub
pop
pop
aam
pop
xor
orl
push
pop
mov
addr16
xchg
cmp
pop
sbb
mov
in
push
rorl
sub
cmpsb
lock
jl
sbb
jbe
negb
lret
dec
stos
dec
int3
add
add
andl
ret
mov
sbb
jbe
int
and
or
je
rcrl
lahf
cs
andb
add
mov
stos
pop
fnsetpm(287
add
test
pop
add
sub
or
push
dec
mov
clc
add
sbb
pop
mov
add
xchg
adc
push
loopne
mov
add
jl
les
out
shlb
xor
push
test
add
sbb
adc
unpckhps
hlt
xor
adc
pop
adc
imul
cli
add
xchg
iret
ret
xor
sub
mov
adc
lods
iret
add
xor
cmp
add
or
int3
js
mov
xchg
mov
in
mov
add
pop
dec
mov
and
aam
pushf
lea
adc
push
sbb
push
mov
push
jb
sub
add
add
out
push
ret
jnp
mov
jo
jb
mov
or
ret
sub
aad
add
or
jmp
jnp
mov
stos
adc
adc
add
mov
rolb
lds
add
add
in
jne
mov
ficoml
lcall
add
cmp
test
sbb
testb
aas
and
add
cltd
jecxz
jge
mov
adc
add
lds
clc
outsb
popl
xchg
imul
call
mov
nop
cld
int
xchg
stos
dec
addb
xor
adc
iret
mov
gs
mov
sahf
stc
xor
fisttpll
xchg
les
jbe
pop
lods
inc
lock
pop
add
pop
and
divb
pusha
cli
sub
popl
inc
inc
roll
xor
mov
pusha
jg
cmpsl
add
insl
jno
and
pusha
dec
jb
lcall
mov
in
movl
cld
fs
imul
aad
lods
jns
paddusb
icebp
ljmp
pop
adc
jmp
mov
es
je
pop
add
pop
inc
cmpsb
push
into
fadds
filds
addr16
push
xchg
jmpw
int3
add
jo
sbb
ljmp
fcoms
adcb
std
outsl
pop
xor
dec
sahf
or
add
pop
mov
ss
cmp
jl
pop
and
cmp
add
add
dec
push
sbb
add
cltd
arpl
inc
adc
lret
adc
jle
push
sub
add
push
jp
add
jnp
xchg
xor
xchg
xor
mov
arpl
adc
add
inc
mov
sub
xchg
inc
cmp
call
ret
loope
push
adc
bound
jns
aas
lods
add
cmp
inc
mov
ret
add
mov
pushf
fwait
jns
cmp
std
add
stos
loopne
stc
adc
bound
sbb
or
add
scas
sbb
outsb
jg
add
cld
adc
mov
mov
add
and
clc
enter
jno
in
lods
and
mov
loopne
dec
mov
adc
outsb
mov
add
cltd
stos
pushf
add
xor
add
hlt
shlb
mov
push
shll
cmp
sahf
add
dec
mov
je
xchg
adc
out
cmp
ret
push
mov
lods
das
add
cwtl
lock
or
mov
mov
int3
testl
cmp
jecxz
sbb
adc
sti
xor
add
std
or
jl
pop
ss
pop
jo
loopne
subl
mov
mov
pop
mov
mov
nop
in
pusha
fdivl
add
std
mov
mov
je
cltd
jo
popa
mov
jae
add
push
sahf
in
pop
cmpsl
xchg
mov
pusha
add
inc
enter
jge
cmp
add
sub
add
imul
add
or
ret
addl
sub
mov
sbb
cmp
jecxz
imul
test
addr16
cwtl
test
sbb
inc
sub
xchg
cwtl
stos
pop
cmpsb
idivb
mov
add
test
push
mov
daa
arpl
sti
out
cmp
cmp
pop
add
fmul
jle
add
adc
adc
movb
mov
stos
mov
xor
mov
nop
repz
add
pusha
adcb
test
push
out
add
adc
fildl
add
jne
icebp
or
popa
cmpsb
jle
or
andl
cltd
pop
inc
lods
popl
ficompl
test
ret
add
clc
les
jbe
push
mov
stos
cmpsb
push
xor
inc
add
jbe
test
cmp
fucom
pop
mov
fldcw
mov
divb
fwait
pop
faddp
les
xor
ds
pxor
pop
fdivr
mov
lds
add
loopne
std
cmp
nop
mov
cld
mov
sbb
loopne
ret
add
movsl
out
add
call
jae
in
cmp
lahf
add
nop
mov
adc
in
mov
sub
cmp
movsl
mov
test
popa
xchg
push
push
pop
cmc
push
sarb
imul
cmp
fwait
xor
mov
push
jbe
add
dec
add
ret
jo
sbb
sbb
call
jno
cld
call
enter
iret
leave
fiadds
out
bound
cmc
out
sub
inc
add
in
setbe
pushl
cltd
pop
dec
xor
inc
add
sub
mov
jl
in
movsl
add
inc
dec
xor
mov
lcall
xlat
lods
cmp
push
and
jmp
pop
add
jge
push
cltd
pop
xchg
add
mov
orl
test
les
xchg
shl
pop
xchg
jp
add
shl
cmpsb
add
mov
call
sbb
in
push
sahf
fld
add
and
add
pop
orb
mov
xchg
pop
mov
push
push
ljmp
imul
negl
add
jo
cmp
in
add
inc
mov
cmc
test
in
mov
lock
mov
cwtl
repz
test
adc
mov
add
sub
add
repz
imul
add
cwtl
and
xor
ret
or
pop
and
push
in
add
or
cmpsl
popl
fildl
lock
sbb
dec
add
pop
xchg
imul
iret
pop
daa
mov
adc
push
add
cmp
add
push
ficoml
sub
and
push
dec
add
dec
shrl
insb
ret
jbe
sbb
and
jp
in
add
loope
jecxz
sub
cmp
mov
outsl
add
adc
add
cmpsl
jae
scas
inc
sbb
sahf
lods
pop
mov
fisubrl
inc
icebp
adc
movsl
jp
add
adc
mov
test
or
inc
mov
mov
add
pop
aas
jb
add
jbe
cmp
xor
sahf
jns
das
in
add
mov
arpl
mov
cld
fdivr
add
mov
sbb
movsb
push
cs
jp
sub
imul
push
dec
ja
js
fldt
sbb
xchg
jo
scas
push
jmp
movsl
jns
xchg
add
push
pop
fsubr
insb
call
xor
ds
add
inc
in
add
neg
mov
aaa
sub
fildl
lahf
pop
xor
jno
push
mov
xchg
into
xlat
pop
je
pop
lcall
sub
test
and
mov
pop
xor
adc
movsl
inc
outsb
aaa
xlat
cli
jp
sbb
shlb
cmc
mov
call
push
dec
cmp
add
fcompl
ja
xchg
jo
cmp
sub
pop
push
add
in
xchg
add
mov
insl
push
and
test
rorl
mov
add
fimull
or
arpl
sbb
rolb
pop
and
add
inc
add
sub
fnstenv
dec
ficoml
dec
add
xor
or
mov
xor
ja
popa
into
inc
arpl
add
sbbb
jmp
stos
int3
pop
incb
cmp
mov
aaa
push
lcall
mov
gs
inc
in
nop
dec
add
xor
ret
testb
dec
ret
or
lock
testl
pusha
push
lcall
andb
push
add
cmpsb
cmp
pop
mov
cltd
fiaddl
pop
inc
pop
add
dec
imull
leave
daa
sarl
stos
stos
enter
psraw
adc
loopne
xor
xlat
lea
push
xchg
add
das
add
push
test
add
and
jnp
out
pop
pushf
outsl
stc
inc
jbe
faddl
jg
arpl
out
mov
adc
push
mov
les
movsl
add
in
cmp
jmp
cli
loopne
in
lock
xor
xor
pusha
jmp
and
js
cld
cwtl
ja
mov
xorl
out
addl
icebp
in
push
xchg
mov
mov
mov
or
cmp
add
add
pop
movsl
and
add
or
sbb
out
pop
pop
and
movsb
xchg
push
jg
dec
and
xor
adc
cmp
popl
loop
nop
lods
mov
lret
add
jne
scas
imul
ja
or
jne
test
fstpl
clc
xchg
dec
adc
sub
pop
sub
out
stos
ja
arpl
jecxz
stc
loopne
enter
push
push
jb
mov
adc
push
xor
add
in
outsb
push
lcall
sbb
testl
imul
in
sbb
cmp
mov
xor
aad
or
rolb
jle
and
imul
xchg
sub
and
js
mov
arpl
fistps
imul
cmp
add
mov
add
leave
sub
push
and
push
push
adc
or
mov
jae
add
imul
movsl
pop
repnz
add
shl
push
mov
flds
xor
outsb
pop
pop
jp
add
mov
enter
jo
sbb
push
mov
or
pusha
repnz
cmpl
xchg
fidivrl
fbstp
xchg
popa
cli
pop
imul
outsb
xchg
inc
inc
or
popa
jae
loop
xor
xchg
in
cwtl
xor
scas
loopne
or
pop
cmp
cmp
adc
jo
div
add
scas
xor
loope
add
pushl
les
lock
scas
dec
add
aad
shlb
dec
fsubr
add
lods
sarl
mov
mov
jecxz
les
push
rolb
or
int3
fldt
or
xchg
ja
mov
or
lcall
cmc
cs
sub
add
xchg
pop
dec
add
xor
add
pop
pop
stos
loope
sbb
sarl
add
out
jno
in
sub
add
xchg
mov
arpl
xchg
fdivrl
mov
add
scas
pop
push
cmc
sub
add
cmp
ljmp
movsl
lret
addl
clc
fnstcw
hlt
jecxz
pop
add
inc
imul
movb
dec
lods
inc
dec
jbe
ret
add
mov
or
add
mov
adc
xor
mov
sarb
or
std
inc
mov
push
lods
jno
push
sbb
cmp
faddl
test
sub
cld
mov
mov
adc
add
mov
cwtl
loope
lods
sub
lret
pop
push
test
xchg
dec
mov
add
push
adc
add
fcompl
cwtl
add
test
add
mov
xchg
dec
lahf
cmpb
jne
in
stos
cmpsl
add
and
cmp
shl
aad
in
stc
mov
int
mov
jecxz
xchg
adc
ja
aam
loope
lods
or
push
movsb
add
add
xchg
sub
pushf
fisubrl
sbb
rcrl
push
lods
jle
sub
push
inc
xchg
mov
xchg
leave
lods
add
jp
das
add
mov
enter
push
stos
in
add
dec
xchg
repnz
xchg
inc
jno
mov
inc
cmp
add
inc
or
idivb
lret
mov
imul
add
subb
out
lahf
testl
aas
popf
cmpb
mov
add
icebp
dec
in
ret
push
leave
rclb
sbbb
int3
xchg
add
push
or
mov
ljmp
jno
rcll
xchg
andb
pop
or
loop
push
add
lock
ficomps
add
adc
dec
xor
stc
arpl
aam
xchg
pushl
test
repnz
mov
inc
pop
or
outsl
sarl
xor
movsl
arpl
pop
add
mov
lock
cmp
repz
data16
sub
aaa
enter
mov
sub
and
movsb
int3
rorb
or
adc
mov
fucomp
cmpps
scas
or
cmp
outsb
dec
add
ss
and
add
mov
js
cmpsb
mov
fs
mov
cli
fsubrs
dec
inc
add
lahf
mov
cmpsl
pop
inc
outsb
lcall
and
stc
add
mov
popa
pop
int
push
add
and
xchg
add
and
hlt
test
mov
subl
mov
dec
shlb
mov
add
sub
ljmp
dec
loopne
test
xor
inc
xor
push
nop
stos
push
add
jbe
and
or
aas
dec
testb
dec
jl
call
add
call
mov
popf
lret
xlat
cwtl
jge
add
xchg
sbb
movsl
mov
push
add
mov
sub
push
in
add
pop
outsb
insl
bound
shrd
and
int
cs
incb
sbb
push
jl
push
push
xor
add
xchg
add
fldl
add
adc
pop
or
sub
adcb
orl
jecxz
add
pushf
adc
sub
hlt
mov
adc
mov
daa
psrlw
rcrl
fisubs
in
xchg
or
pop
aam
cmp
loop
sub
es
add
xchg
cmp
add
jp
addb
gs
data16
jle
sub
nop
ret
xchg
mov
add
dec
pop
sahf
scas
xchg
enter
cmp
fs
xor
cmp
subb
jmp
sub
mov
jae
or
mov
aaa
xchg
pusha
fwait
jbe
push
xor
mov
orb
jp
je
fcoml
adc
mov
rcrl
fiaddl
push
inc
cmpsb
cwtl
and
sti
ficoms
cmp
cs
idivb
mov
inc
loopne
jno
and
pushf
out
mov
inc
stos
adc
lock
je
pusha
ljmp
xlat
mulb
packuswb
rclb
nop
cld
aas
add
or
push
sbb
dec
pusha
movsb
adc
jg
add
aad
xor
pushf
cmp
inc
add
push
movsb
add
and
add
jle
push
add
cli
rolb
mov
add
and
mov
in
push
subl
add
scas
or
xchg
dec
jg
test
xchg
enter
push
sbb
mov
mov
lods
ljmp
mov
rcll
push
je
sbb
xorl
adc
cwtl
dec
add
mov
pop
lea
add
out
jno
test
lods
jle
push
imul
aas
add
cmpsb
cli
faddl
add
dec
mov
jle
js
add
inc
je
stos
cwtl
shlb
pop
push
inc
int3
sub
icebp
add
add
int
daa
fidivs
call
std
xchg
cld
sub
mov
sti
add
fistl
push
adc
cmpsb
adc
pop
ficoms
es
dec
sarl
dec
imulb
es
stos
outsl
adc
xor
mov
push
cmovns
add
dec
lock
xor
aam
pmaxsw
add
loop
xchg
cmp
inc
daa
cmp
add
ljmp
test
ret
add
mov
mov
jo
add
xor
fldl
sbb
sub
repz
leave
add
cli
xchg
mov
movsb
cmp
shll
add
add
popf
xor
sbb
push
ds
call
jmp
mov
cmp
sbb
sub
push
add
fildl
and
mov
cmp
adc
xchg
push
add
inc
rolb
mov
push
mov
cmpl
add
les
ds
cmp
xchg
mov
bound
ss
add
inc
lea
in
sbb
jg
add
mov
xlat
jne
add
insb
out
leave
stos
fwait
push
data16
ret
jae
jo
add
pop
mov
pop
pop
sti
or
pop
orb
shrl
mov
outsl
push
mov
xchg
pusha
imul
pop
cmp
jecxz
xchg
xor
xchg
add
pop
or
jb
lock
mov
or
hlt
add
dec
leave
xchg
test
fistpl
and
mov
loop
push
xchg
mov
insb
pop
sbb
mov
rcll
lock
add
mov
fdivrl
mov
jnp
xchg
aad
sbb
imul
mov
sub
clc
inc
cs
in
out
pop
sbb
pop
mov
xlat
lock
ficompl
mov
scas
adc
sarl
sti
add
sbb
sub
andb
jle
jne
jl
aas
sub
clc
mov
cwtl
sub
hlt
cmp
stos
inc
push
ret
mov
repnz
lcall
cld
sahf
add
dec
xchg
or
cld
push
add
or
loop
mov
shrl
pop
mov
pop
jnp
add
cmp
incb
sbb
rolb
xchg
out
sbb
add
inc
sbb
pusha
fidivrs
add
imul
les
cwtl
outsb
and
jno
inc
fcomi
roll
xchg
das
push
iret
mov
push
add
sahf
push
mov
pop
nop
xchg
jo
ds
add
inc
in
insb
cmp
mov
pusha
es
and
mov
call
inc
add
xchg
cmp
ja
or
jbe
add
push
jecxz
add
mov
dec
nop
mov
push
cmp
add
and
and
test
int3
in
adc
loop
cmp
in
push
cmpsl
xchg
in
push
and
mov
jmp
mov
stos
mov
lods
xor
mov
xor
pop
mov
ja
push
inc
add
rcrb
popf
pop
mov
movsb
push
adc
pop
cltd
mov
test
mov
sub
pop
jecxz
jae
add
jle
in
aas
gs
add
dec
and
add
fsubl
xchg
mov
xlat
jl
je
icebp
test
add
popa
push
xchg
out
fmull
sub
mov
ljmp
push
out
sbb
jg
mov
cmc
and
adc
in
mov
fists
jle
jmp
mov
jne
test
rorb
dec
or
mov
mov
ja
mov
xor
inc
jmp
stos
add
sbb
icebp
xchg
and
or
inc
pop
add
mov
fldcw
fmulp
add
test
mov
and
lods
inc
xchg
mov
in
jbe
jns
dec
jmp
inc
rorb
aam
dec
imulb
popf
jne
or
fnstsw
lods
mov
add
dec
xor
inc
movsb
or
adc
into
repnz
cmpsl
cmp
lods
mov
lea
sti
out
add
mov
int3
push
add
test
lret
mov
lods
push
add
incl
loop
push
scas
mov
out
ja
icebp
mov
sub
and
icebp
pop
pop
pop
lods
outsb
add
stos
int3
add
jns
fcomps
add
cli
inc
repnz
popa
mov
sbb
outsb
cs
fs
popa
pop
push
std
mov
add
sahf
lock
call
add
push
jge
movsl
int
rcrb
xchg
dec
push
and
sbb
cmp
add
jmp
data16
les
inc
jo
arpl
jmp
repz
jle
add
and
insb
add
cmpsl
push
pop
add
cmp
insb
add
and
inc
push
cltd
add
mov
lret
arpl
xchg
pop
or
push
out
dec
lahf
xlat
push
pop
into
imul
xor
in
and
aad
jmp
xchg
mov
mov
add
rcrb
in
add
repnz
aaa
inc
push
leave
cmp
and
mov
add
xor
filds
sti
icebp
inc
cmp
push
lods
xchg
inc
data16
xor
add
add
inc
shll
push
xchg
add
std
lods
stos
inc
ja
dec
lret
cmp
repnz
mov
out
dec
dec
pusha
xchg
fnstsw
sub
mov
xchg
and
ds
pushf
xor
ret
subl
mov
stos
or
add
add
xchg
mov
xor
cmp
mov
dec
mov
lds
popa
xor
jo
add
cwtl
mov
inc
mov
dec
add
pop
dec
into
push
out
out
add
jae
dec
test
cmc
imul
out
dec
dec
pushf
add
in
push
popa
hlt
add
or
add
sbb
aad
in
add
jae
in
dec
pop
sahf
push
insl
lock
inc
mov
repz
mov
in
push
ds
cmpsb
lock
jecxz
jge
popa
mov
dec
add
loopne
mov
mov
jnp
add
scas
or
add
xor
cmp
add
out
je
data16
lock
xor
jmp
push
rclb
add
int3
mov
lds
insl
imul
add
cmpsb
xchg
jns
out
xchg
and
mov
pushf
rclb
scas
pop
xorb
imul
mov
fadds
xchg
popa
jge
pop
out
in
add
dec
mov
rcrl
adc
loopne
mov
and
push
es
xor
xchg
or
add
pop
test
jb
ja
sbb
sub
push
xchg
movzwl
and
add
adc
or
cmp
int
bound
pop
sahf
dec
test
cmp
mov
scas
enter
fisubrl
cli
xor
add
push
jbe
push
xor
pop
add
xlat
xor
scas
int
popa
add
shlb
add
pop
jl
std
nop
jle
add
in
imull
mov
imul
push
pop
jmp
mov
xor
in
sahf
lret
out
or
jge
cmc
sbbb
push
adcb
jecxz
xchg
sbb
cmp
sub
popa
flds
mov
sbb
out
cltd
sbb
pop
xadd
mov
dec
adc
fwait
cld
pushf
or
add
sbb
fldt
jmp
lods
mulb
cmpsl
imul
add
lods
lds
pushl
test
cmc
add
dec
xor
inc
rorb
in
or
xchg
jns
sti
dec
jg,pt
cmp
fdivrl
outsb
stos
cmp
cmp
jb
das
mov
cmp
leave
add
outsl
mov
dec
add
pop
aam
pusha
xchg
bound
and
xlat
sub
add
stos
mov
push
pop
add
xchg
into
mov
in
sub
sub
push
outsl
stos
or
out
add
dec
popf
mov
mov
add
sbb
imul
and
cmpsb
inc
cmp
lods
cs
push
lret
in
add
dec
rolb
dec
add
pushf
jle
add
inc
mov
pop
movsb
mov
mov
into
jge
add
lds
sbb
add
and
inc
nop
imul
mov
inc
add
or
pushf
addr16
cmp
or
das
loop
sbb
sar
xor
add
dec
test
mov
mov
or
jge
add
mov
inc
add
clc
xchg
push
push
xchg
add
xchg
shr
add
xchg
arpl
inc
loope
inc
mov
in
cmpsl
rolb
loop
sub
je
push
adcb
cmp
add
mov
cld
stc
outsl
add
pusha
inc
xor
pop
inc
flds
divb
lods
sahf
inc
mov
movsb
xorb
and
inc
pop
shrl
enter
add
sbb
push
xchg
push
outsl
and
call
add
fldenv
mov
add
imul
inc
inc
or
sarl
dec
mov
add
mov
leave
add
cmpsl
lea
add
sbb
cwtl
pop
movsl
or
sbb
mov
inc
fwait
cld
xchg
sub
cwtl
add
cmp
adc
adc
add
xchg
mov
add
insl
ret
fwait
cmpsb
or
xor
adc
addb
xlat
ss
outsl
jle
add
sub
jg
add
out
and
sbb
jecxz
xchg
aas
sti
sbbb
rcrb
add
out
mov
mov
mov
in
rcrl
ficoms
cld
fcoms
mov
roll
cld
int
add
sub
pop
cmpl
addr16
fstp
lock
jle
iret
xor
stos
ja
js
add
repz
sub
add
jecxz
test
in
jbe
pusha
jns
jge
and
adc
mov
adc
lea
aad
jo
fadds
jb
out
adc
sbb
loop
subb
call
cmovns
or
push
or
jns
repz
inc
dec
outsb
sahf
add
xchg
pop
int3
cld
faddl
push
shr
xchg
sub
pop
pop
add
outsl
dec
or
shll
rol
fs
int3
mov
add
xchg
aad
cmpsl
add
call
ja
loop
mov
idivb
or
adc
xor
lret
add
xchg
adc
ret
scas
push
mov
out
fdivrs
fcompl
cs
cltd
aam
rol
bnd
add
daa
pop
imul
push
in
les
mov
jg
fdiv
and
insl
pop
ret
jne
fiadds
inc
push
xchg
int3
or
cmp
nop
sub
gs
jb
add
and
mov
fsubl
xchg
push
or
jne
dec
inc
in
sbb
sbb
add
cmp
pop
jo
add
call
out
add
push
pop
mov
jnp
pop
adc
jmp
ror
add
cli
pop
add
push
dec
jnp
mov
int3
xchg
sbbb
push
xlat
add
aam
or
arpl
add
ficoms
hlt
jnp
add
inc
pop
decb
pop
adc
mov
test
test
pop
mov
loope
and
add
mov
and
cmp
stos
cmpb
lahf
pop
mov
jb
jl
cmp
ret
int
shl
mov
test
add
cwtl
insb
call
fcomip
pop
pusha
lds
cs
xor
jg
adc
hlt
mov
and
into
push
pop
insb
pop
test
add
fwait
in
add
adc
call
aad
addb
jne
inc
adcl
in
xor
call
add
iret
sub
ret
sub
rcl
xor
pushf
add
add
cltd
arpl
push
pop
pop
mov
add
jmp
icebp
nop
inc
aam
mull
test
adc
call
jns
pop
ja
cmp
outsb
adcb
xchg
imul
fwait
pop
inc
into
insl
push
out
testl
mov
and
std
or
jns,pn
mov
jg
add
movsl
cwtl
push
or
inc
mov
cltd
fiadds
add
mov
sub
cmp
int
outsl
pop
into
in
jge
push
xchg
xcrypt-cfb
cmpsl
loope
mov
adc
mov
xlat
dec
sub
pusha
and
mov
lock
sbb
cmc
dec
inc
jne
popa
call
cmp
loope
sbb
mov
fs
cmp
ljmp
jge
aad
pop
add
or
xor
lods
repnz
dec
dec
imul
cltd
jg
dec
hlt
add
mov
add
cmpsb
mov
sub
add
mov
cmpsl
ljmp
pop
lods
sbb
cmp
divb
cmpsb
mov
outsl
and
scas
mov
loope
or
fwait
add
in
ret
pop
jne
inc
out
in
pop
mov
lahf
fmuls
add
iret
and
add
mov
mov
sbb
sbb
addr16
mov
outsb
loopne
mov
add
push
pop
jae
decl
dec
adc
add
test
xor
and
dec
add
and
or
xchg
add
xorl
jge
pop
je
add
mov
xchg
lea
rorl
pop
jp
repnz
add
nop
pop
dec
and
fldenv
outsl
mov
sbbb
and
fisubrs
shlb
mov
test
inc
add
call
iret
lods
shlb
je
add
shrl
lahf
jnp
mov
testb
mov
add
mov
pusha
pop
int3
in
push
call
or
and
or
hlt
jmp
sbbb
icebp
cwtl
ret
xchg
popf
mov
pop
add
inc
dec
cmp
pop
iret
mov
addr16
mov
jg
add
loope
insl
add
inc
xchg
push
pop
in
or
cltd
loopne
add
xlat
add
fisubl
shlb
into
movsb
add
jecxz
rdmsr
arpl
jge
fsubr
ret
mov
test
imul
loop
nopl
or
out
cmp
mov
lret
sbb
notb
fnstenv
adc
or
jmp
addr16
add
xorl
shll
lock
popf
icebp
stc
inc
add
sbb
repz
mov
mov
mov
cmp
add
push
xor
gs
add
xchg
mov
mov
out
dec
in
sub
jg
std
xchg
inc
add
repz
outsl
xor
pop
int
add
xor
rcrl
add
std
int3
jp
addl
lret
inc
testb
xor
inc
add
pop
xor
repnz
xor
add
adc
inc
mov
dec
add
push
jecxz
or
mov
and
push
fbstp
insl
dec
adc
mov
aad
cwtl
add
ret
sub
pop
dec
adc
xchg
inc
inc
add
or
movsb
cmc
jecxz
push
and
add
pop
cmp
dec
cld
add
mov
xchg
faddl
loop
lods
xchg
and
jmp
and
mov
pop
mov
pop
xchg
add
xchg
call
add
out
mov
ds
add
mov
mov
add
scas
push
cmp
aaa
cli
loop,pn
stos
aam
xor
xchg
icebp
and
nop
test
shll
mov
mov
push
xlat
add
stos
and
cmpsl
imul
jo
arpl
add
stos
dec
mov
add
adc
dec
addr16
rorb
mov
insb
add
cld
cmp
je
pop
mov
or
jl
add
sbb
insl
filds
data16
xchg
outsb
aad
stos
or
cmp
add
pop
push
sbb
push
add
ljmp
adc
iret
cmp
mov
rolb
dec
mov
push
test
push
dec
xor
lcall
jo
pop
push
mulb
add
mov
jle
add
fcomi
mov
insb
outsl
iret
push
add
js
mov
lcall
jmp
inc
dec
xchg
add
fwait
xor
add
imul
mov
sbb
add
lds
adc
sub
sbb
add
into
lods
inc
push
std
add
pop
add
jb
mov
xchg
push
mov
sub
loop
insb
push
mov
js
and
dec
add
add
sbb
loop
out
cwtl
testb
cli
pop
cld
repnz
lret
push
testb
jecxz
jle
xchg
flds
mov
lcall
add
clc
add
data16
addr16
add
cmp
push
repnz
mov
sub
movsb
jo
outsb
add
jne
aad
mov
loope
into
and
gs
adc
call
lea
inc
cmp
xchg
fcomps
mov
inc
insb
push
imul
adc
add
jnp
cmpl
and
mov
stos
push
inc
pop
push
in
data16
jg
mov
fwait
pop
push
stos
repz
xchg
mov
adc
ss
xorl
movb
jb
sbb
cli
arpl
push
or
rcrb
add
mov
nop
stos
shll
pop
loopne
jb
rcl
popl
add
insl
ret
shl
push
add
mov
add
pop
adc
sahf
xchg
in
add
jne
aad
cwtl
leave
les
cmp
arpl
loopne
cs
shr
xchg
sub
add
pop
outsl
insb
out
add
pop
jne
mov
add
mov
inc
cs
out
es
pushf
sbb
ss
mov
mov
subb
add
xor
mov
fiadds
or
and
in
inc
shlb
cmp
pop
xchg
add
and
mov
es
popl
loopne
mov
fistl
add
pop
ret
popf
xor
sbb
add
pop
aaa
xor
mov
pop
or
xor
sbb
ljmp
cmpsl
in
push
movsb
sbbl
xchg
je
jbe
add
xchg
imul
jbe
mov
ds
les
negl
push
xchg
cmp
out
sub
test
jbe
iret
shlb
sub
into
fistpll
adc
popa
push
addr16
lcall
pusha
adc
pop
jge
pop
loop
xchg
ja
push
jo
js
dec
or
add
dec
into
or
enter
xchg
add
push
popa
test
fsubl
movb
dec
fcompl
cmpsb
pop
or
sub
cmp
jo
lcall
pop
mov
out
and
add
add
aam
mov
or
xor
fdivrl
sub
xor
mov
ljmp
adc
ljmp
test
add
mov
add
fbstp
inc
add
fnstenv
cmp
cli
mov
addr16
cld
jecxz
add
mov
add
outsb
jne
pop
pop
mov
fmull
add
daa
and
cld
jae
add
mov
add
jbe
mov
add
sub
add
insb
repnz
or
mov
sahf
add
clc
and
push
add
push
push
adc
push
fstl
jbe
lds
lods
add
add
sbb
add
cld
adcb
sbbb
lds
dec
dec
in
mov
fwait
add
lock
sbb
je
mov
jmp
ja
jmp
cmp
sbb
ror
ljmp
mov
add
sbb
lock
mov
pop
mov
xor
ret
repz
add
mov
int3
pop
sbb
dec
push
lret
sbb
xor
ds
les
push
test
sbb
stc
mov
shl
sub
add
fldcw
sbb
mov
ret
das
mov
cld
repnz
dec
fbld
popa
or
flds
rorb
call
pop
mov
pop
and
cmp
jge
cmc
loopne
xchg
cwtl
jne
push
into
jb
push
push
mov
adc
pop
add
sub
ja
hlt
lock
pop
repnz
sarb
dec
mov
lar
in
pushf
jecxz
sarb
arpl
xchg
push
sbb
dec
into
movsl
ja
add
movsl
add
sbb
jg
sbb
push
lock
outsl
add
xchg
adc
fmull
dec
add
push
sub
or
pop
inc
cld
sbb
add
push
mov
inc
mov
pop
xchg
sub
cmp
incb
shrb
add
bound
add
sbbb
in
ljmp
ja
add
arpl
out
loope
pusha
addl
inc
mov
outsb
jmp
jae
aas
dec
xor
ja
out
push
stos
leave
jl
pop
xor
mov
addl
sub
stos
inc
inc
jno
and
add
inc
rolb
inc
lahf
dec
into
mov
add
sarl
scas
add
xor
cld
push
add
dec
inc
add
push
mov
push
add
int3
jns
add
xchg
push
std
shll
lock
dec
ret
in
int
cmc
inc
scas
add
arpl
and
adc
pop
add
repnz
add
flds
add
adcl
lods
fldl
add
sahf
std
mov
fcoms
add
cmpsb
cmc
aaa
pop
in
int3
mov
push
pop
in
push
shrb
stc
jbe,pn
inc
or
jle
adc
ja
test
xchg
hlt
insb
arpl
cwtl
scas
popf
mov
jno
sarb
ret
push
addl
push
jb
add
shlb
sahf
inc
mov
clc
in
add
mov
mov
mov
push
cmpsb
inc
mov
pop
push
arpl
pop
add
or
mov
push
roll
addb
xchg
lods
es
sub
insb
and
pop
imul
add
popf
loopne
ss
add
enter
xlat
popa
add
mov
ljmp
std
mov
add
and
add
in
sbb
mov
mov
adc
stc
movsl
or
ds
inc
add
fcomps
inc
add
push
cwtl
std
inc
repz
movsl
add
packsswb
js
sub
or
shll
pop
add
push
and
testl
loopne
ret
sbb
ljmp
popf
test
int3
xlat
or
add
aad
fcomps
cmpsb
xchg
sbb
mov
and
add
int
mov
mov
cld
add
pop
arpl
add
xlat
dec
mov
in
insb
lock
sub
rorl
mov
mov
cmpsl
insl
data16
sahf
pop
and
scas
xchg
and
pop
jno
outsb
mov
xor
data16
ljmp
mov
test
sahf
pop
jns
addl
mov
mov
stos
mov
pop
je
dec
and
stos
mov
imul
iret
push
rcl
out
in
sub
mov
mov
mov
xchg
xor
inc
add
and
add
sbb
add
shlb
add
xchg
add
xor
sub
enter
push
dec
adc
add
fwait
dec
xor
xchg
lds
jnp
dec
xchg
push
jb
in
insb
dec
repnz
push
leave
lahf
push
xchg
mov
nop
add
fwait
add
push
jl
ret
inc
dec
stos
fsubp
mov
stc
push
mov
addl
xchg
mov
pop
jg
jae
add
pop
push
rolb
ds
hlt
into
pop
xor
notb
ss
enter
push
sbb
add
push
nopl
jl
add
lea
stc
sbb
sbb
add
jne
pushf
add
orb
add
repz
add
dec
xchg
sbb
leave
loopne
mov
pop
lods
pop
mov
in
pushf
mov
add
ficoml
add
les
sysexit
sbb
mov
inc
or
cmc
in
aaa
mov
or
lea
pop
sti
sub
cmpsb
lcall
mov
aas
repnz
jmp
mov
jmp
mov
into
call
add
xor
popf
sub
hlt
test
shll
jmp
or
and
in
mov
sub
stc
mov
dec
or
aaa
add
stos
push
test
mov
inc
mov
je
aam
inc
add
sub
in
fbstp
add
adc
popl
popa
xchg
mov
mov
pusha
add
js
adc
adc
out
sbb
les
aad
arpl
in
es
and
lahf
jo
ljmp
lret
mov
add
pcmpgtw
into
jge
lods
cltd
add
push
add
dec
negb
inc
popa
cwtl
aaa
add
lock
test
mov
lahf
pop
cmp
add
push
lock
push
outsb
add
xor
js
lock
mov
mov
push
add
pop
cmpsl
push
add
out
push
mov
xchg
and
adc
sub
xor
mov
sbb
scas
enter
xor
cmp
xchg
mov
mov
std
add
jge
stc
or
sbb
pop
arpl
sbb
mov
jnp
fcmovu
test
xchg
xchg
sub
pop
incl
and
add
sbb
sub
loopne
xchg
pusha
fcomps
add
fwait
mov
push
cltd
or
xchg
add
cmp
push
outsl
fisttpll
sti
mov
inc
imulb
lcall
mov
inc
jae
ret
cmc
add
sub
xor
xchg
or
repnz
scas
movnti
leave
lods
sbbl
pop
add
ljmp
adc
and
add
out
xchg
orb
dec
jno
inc
add
fcompl
sub
sbb
mov
les
mov
subl
push
inc
mov
test
jmp
adc
jno
fsubs
push
test
cltd
pop
xchg
rol
push
in
pusha
adc
cmp
pop
add
orl
les
jo
push
arpl
int
mov
xor
push
push
fstl
add
pushf
das
shl
shlb
loop
dec
cld
add
xor
sub
xchg
add
pushf
adc
add
jge
fdivrl
pop
in
addb
mov
push
clc
je
ror
xchg
ss
xor
cmp
pop
xchg
lahf
adc
mov
mov
xor
es
push
mov
aam
in
add
insb
fbld
sahf
push
shlb
das
into
cmp
ret
int3
jns
jge
and
iret
mov
sti
out
xchg
imul
cmp
sub
xor
xor
gs
jo
mov
jo
add
in
sub
mov
ret
pop
dec
bound
sarl
icebp
add
lea
mov
lock
int3
test
add
loop
cmc
cli
lret
mov
jnp
jge
push
push
imul
add
mov
add
ror
pop
xlat
shrb
push
jg
loopne
pop
gs
clc
mov
push
iret
add
int
jg
sbb
dec
insb
dec
js
leave
mov
cli
insl
add
xchg
in
jne
add
xchg
pop
mov
cmp
dec
sbb
cltd
push
sub
std
mov
mov
mov
and
lods
pop
call
stos
and
mov
pop
rcll
mov
std
repnz
mov
cmc
push
scas
ret
cmp
mov
outsb
mov
sbb
add
in
xchg
xchg
cmp
sub
pusha
arpl
sbbl
push
out
es
push
cmp
fcompl
leave
pop
rolb
pop
push
negb
dec
inc
add
repz
adc
in
jg
add
iret
shrl
das
movb
or
and
pop
cmp
jmp
push
push
repnz
jmp
xchg
iret
pop
add
daa
mov
jnp
add
push
or
and
sub
add
mov
dec
add
imulb
and
mov
mov
push
outsl
movb
push
mov
xchg
xchg
jp
jb
fcomps
add
jo
mov
cwtl
in
pusha
or
incl
shll
shlb
loopne
add
fstps
mov
popl
add
fistl
pop
push
push
pop
sub
add
sti
pushf
fmul
fildl
push
std
xor
sbb
jae
add
orb
add
lea
sbb
jnp
rol
lret
popa
scas
mov
inc
add
or
inc
call
xchg
repnz
inc
cld
jg
add
sbb
add
dec
lcall
cmc
sub
in
loope
cmpsb
inc
or
jne
adcb
jnp
add
mov
xchg
add
pop
movaps
mov
fs
adc
in
add
pop
adc
jp
movsb
loope
rolb
cli
cmp
add
pop
int
adc
mov
mov
jne
mov
xor
cmp
ror
incb
add
fwait
jb
add
pushf
fcompl
in
add
cmp
cltd
or
orb
add
mov
cmp
fbstp
aaa
push
repnz
add
inc
movsb
add
stos
outsb
and
pop
rorl
jns
test
shlb
xor
add
leave
push
lret
sbbb
push
mov
lods
lods
and
jg
sahf
add
jecxz
and
xor
rcrl
sub
jno
das
sbb
add
jb
push
repnz
sub
jno
pop
xorb
add
int3
ret
shll
mov
out
fisttps
add
js
je
imul
add
and
add
lods
xor
sbb
sub
dec
adc
ljmp
push
push
push
fwait
cli
sub
cmp
mov
cmp
sbb
fcomp
data16
andb
push
jae
add
fisubrs
jmp
aaa
mov
and
mov
mov
and
pop
or
add
jb,pn
cld
out
fs
lret
jg
rolb
add
mov
and
cmpsl
push
jbe
push
lock
out
cltd
add
mov
or
mov
out
scas
mov
mov
add
lods
sbb
add
addr16
add
xchg
imul
pop
pop
mov
mov
out
icebp
add
bnd
imul
mov
mov
jo
add
and
outsb
or
jo
push
gs
cmp
add
mov
add
lods
inc
je
out
insb
aaa
add
mov
lcall
cmc
jns
orb
inc
ja
or
es
jg
push
sbb
add
or
jge
cltd
xchg
mov
sbb
pop
imul
jp
mov
mov
fwait
scas
loope
and
push
sbb
cmp
repnz
cs
cwtl
add
jge
subl
inc
push
and
cmp
add
mov
fildl
stc
lretw
out
mov
lods
add
pop
lods
add
inc
sbb
es
andb
test
call
hlt
pop
xchg
add
and
push
add
jno
xchg
testb
rep
mov
dec
push
test
popa
mov
cmp
mov
pop
sub
xorl
add
movsb
inc
mov
add
push
sbb
negl
inc
es
jns
add
sarl
jo
mov
std
jecxz
sub
sbb
dec
outsl
negl
ds
add
fsts
add
rorb
iret
xor
add
pop
data16
or
test
lea
and
mov
add
push
mov
mov
shrb
xorl
addr16
bound
es
cs
sub
add
shl
xchg
clc
add
test
adc
add
mov
add
inc
into
push
and
popl
stc
mov
xor
cs
push
sarb
dec
add
sub
mov
mov
and
test
dec
adc
fcmovne
add
gs
pushl
or
sub
add
jl
in
add
sbb
pusha
xlat
negl
or
test
in
add
pushf
push
mov
jbe
mov
xor
dec
cmpsl
adc
jg
fcoml
pop
add
dec
filds
xchg
push
or
sahf
lods
pop
stos
inc
imul
cmp
mov
inc
push
cwtl
sahf
fimuls
jp
in
std
in
lock
pushf
mov
dec
add
inc
insl
lahf
movsb
test
dec
adc
xor
shr
xchg
adc
lret
add
fdiv
xor
das
pop
aam
insb
mov
add
mov
imul
dec
mov
pop
scas
mov
les
add
pusha
jo
in
dec
mov
lcall
inc
mov
pop
inc
mull
outsl
add
rcll
fstps
pop
sbb
push
cmp
jnp
jae
mov
cmc
fdivr
mov
xor
repz
clc
aas
add
add
cmpsb
pop
stos
cmp
add
arpl
add
add
shl
adc
scas
shl
or
enter
and
es
ss
adc
xor
xor
inc
jo
add
jbe
scas
arpl
dec
aas
movl
adcl
psubq
ljmp
jbe,pt
or
add
cmp
jne
out
shl
add
das
ret
pop
or
xchg
xor
jg
add
push
cmp
cmp
sbb
dec
add
sti
popf
push
aas
and
add
shlb
xor
jle
std
loop
fucomi
stc
or
in
les
lock
pushf
fnstcw
push
movsb
sbb
in
repz
cs
adc
cmp
out
push
mov
loopne
bound
and
lahf
sub
inc
lcall
add
mov
out
test
jecxz
inc
mov
cltd
call
call
jg
add
popa
stos
leave
add
lcall
and
shlb
out
inc
aad
in
shlb
and
pushf
jge
scas
loopne
jnp
orps
xchg
aaa
aas
add
gs
pop
scas
das
add
inc
push
pop
inc
sbb
dec
cmpsb
lock
push
and
mov
dec
lds
enter
push
data16
or
imul
je
in
fbld
add
xchg
add
sub
call
sub
cli
xchg
inc
sbb
jmp
pop
lret
add
std
and
jmp
mov
xchg
cmp
xor
cmp
inc
loope
sbb
dec
lock
and
dec
dec
mov
mov
ljmp
mov
adc
in
cmp
xorl
inc
jb
sarl
xor
test
lret
inc
xor
add
icebp
nop
or
push
leave
add
rcr
clc
add
sbb
jb
sub
std
add
rorb
fimuls
mov
dec
push
xchg
outsl
mov
or
add
push
ret
add
je
mov
stos
cli
lods
in
add
mov
fiaddl
add
repz
sarb
pop
push
sub
mov
add
test
mov
or
sub
add
loope
sbb
xlat
cld
gs
int3
add
les
dec
insl
dec
xchg
add
lods
jo
psubusb
sub
outsb
cmp
mov
and
inc
test
scas
add
cmova
pusha
insl
scas
pop
sahf
pop
movsb
adc
setns
add
add
roll
and
frstor
in
fs
sub
add
xchg
or
add
outsl
testb
fwait
std
push
out
jg
pop
jns
imul
inc
jae
add
sbb
repnz
aas
jp
int3
pop
add
rorb
sbb
adc
jns
popl
pop
adc
jnp
in
add
pop
mov
mov
scas
orl
and
mov
push
add
mov
inc
xchg
and
cmpsl
add
imul
add
cwtl
mov
arpl
loope
mov
or
inc
xchg
inc
lcall
imul
arpl
cmpsl
popf
dec
add
push
roll
and
rol
inc
stos
adc
adc
insl
mov
lcall
insb
push
sbb
das
mov
test
xor
dec
cmc
and
fldl
rolb
adc
imul
mov
jae
cmp
ss
icebp
inc
in
sub
add
pop
fistps
xchg
stos
dec
loopne
xchg
add
dec
movb
dec
lock
mov
mov
and
mov
xor
add
test
gs
pop
add
sbb
push
xchg
push
ja
rcl
daa
xchg
repz
cmp
sbb
mov
mov
adc
cld
lahf
or
scas
mov
cmp
add
js
divl
dec
flds
xor
or
out
in
mov
mov
lcall
movl
jl
xor
add
add
push
mov
mov
hlt
inc
pop
les
add
leave
xor
out
adc
stos
xor
in
sbb
jnp
or
in
das
enter
add
mov
call
lock
repnz
std
cli
jle
lods
mov
cmpsb
push
ja
adc
pop
xor
add
pusha
pop
add
or
cmp
jle
add
mov
testl
xorb
out
jmp
fisubrl
xchg
rcll
dec
and
pushf
add
lret
pusha
pop
loop
add
cmpsl
ret
addl
add
jnp
cmp
mov
lock
mov
hlt
add
ds
nop
lds
mov
mov
dec
lahf
or
pop
popa
pop
scas
and
inc
les
lock
add
int3
pop
mov
add
push
inc
or
mov
lret
add
shlb
or
push
mov
fstps
dec
add
popa
daa
pusha
ja
rolb
jns
mov
sbb
mov
pop
hlt
add
loop
sbbl
add
test
sub
pop
clc
enter
inc
mov
adc
cmp
test
fdiv
out
mov
mov
jo
add
jne
mov
sub
daa
cmp
std
add
in
stos
fcomps
outsl
add
je
out
xchg
loop
loope
pusha
add
or
fucomip
push
xlat
inc
mov
and
in
mov
aad
and
jb
xchg
xchg
dec
pop
rcrb
shll
and
sti
and
add
das
rclb
std
jb
fstps
xchg
add
and
pop
sarl
les
loopne
or
fdivrs
xorb
jge
adc
lds
pop
imul
mov
fwait
cmpsl
and
mov
add
sub
les
lods
clc
pop
add
sbb
dec
xchg
mov
and
jge
cmpsl
or
inc
add
dec
aaa
in
push
mov
and
push
arpl
inc
pop
das
jo
add
sbb
and
dec
xor
sbb
jmp
adc
repnz
pop
arpl
pop
sbb
add
les
lret
in
sbb
test
pop
addb
xchg
or
pop
cmp
loope
inc
dec
dec
stos
mov
outsl
mov
pop
add
add
adc
ds
call
repz
loop
add
sti
das
gs
clc
xchg
jae
dec
add
pushf
and
and
ja
in
jecxz
testb
push
mov
and
pop
push
into
inc
test
mov
clc
inc
push
fs
rorl
enter
aam
mov
mov
mov
decl
pop
pslld
adc
and
inc
stos
daa
outsl
add
pop
sub
push
jg
add
outsb
test
pop
sbb
mov
sbbb
ja
add
lret
add
test
add
fnsave
cmp
loope
fisubl
test
push
outsl
xchg
fistpll
test
pop
lahf
nop
mov
vpunpckldq
dec
ds
add
cltd
pop
push
jecxz
push
cmp
add
jl
mov
and
dec
mov
popf
adc
add
jo,pt
or
add
loopne
push
adc
xor
mov
add
pop
pop
lea
ja
ret
aaa
clc
shl
xor
loopne
add
add
xchg
das
les
add
pop
arpl
pop
fbstp
das
addr16
cld
ficompl
dec
pop
aas
push
test
adc
mov
sbb
lock
aam
and
scas
lahf
cmp
pop
add
jbe
jnp
inc
stc
loopne
add
mov
mov
lock
popa
xchg
xor
aas
add
jb
xchg
sbbl
mov
push
add
lods
inc
push
and
test
sub
loop
lea
or
add
mov
add
fdivrs
and
inc
cwtl
xchg
movd
mov
test
add
add
jo
add
pop
xchg
jmp
pop
mov
add
pop
imul
xlat
push
mov
add
ficompl
sub
sbbl
add
xchg
loope
mov
testb
jnp
std
push
and
test
rorb
cmc
ds
subb
dec
adc
call
mov
mov
das
sahf
sti
pop
mov
push
je
add
hlt
push
inc
add
xor
add
inc
pusha
outsl
jg
pop
cmp
sbb
adc
mov
mov
stc
shll
fwait
mov
iret
out
adc
add
in
mov
or
aas
jmp
scas
sbb
je
sbb
push
sub
push
add
xor
icebp
add
add
daa
jns
clc
add
das
clc
sbbl
jecxz
push
andl
imul
cli
sub
push
jmp
les
movsl
push
cmpsb
mov
fdivr
out
jle
add
pop
jae
call
loop
push
imul
pop
cmp
or
add
repnz
in
nop
xchg
ret
mov
pop
jnp
sbb
sbb
mov
mov
pusha
lcall
pop
xchg
jno
std
daa
push
loop
pop
clc
jl
in
sbb
mov
ja
xchg
inc
imul
pushf
movb
sub
aaa
pop
mov
icebp
cmp
push
subb
outsl
inc
std
popf
dec
add
movsl
adc
add
mov
pop
loop
xchg
add
daa
xchg
adc
lock
jl
cmpsb
xchg
mov
in
repnz
lods
sbb
into
jb
jp
push
pop
sub
and
shrb
rcll
dec
shlb
sahf
jmp
cmp
jnp
add
and
sub
or
cld
dec
inc
sarb
add
into
xor
addl
add
cmp
and
pop
and
jae
shr
add
or
inc
sbb
sbb
cmp
inc
subl
loop
push
mov
xor
add
pushf
stc
sub
jbe
or
xchg
cmpsl
add
xor
mov
sbb
addb
xorl
dec
xchg
mov
test
xchg
in
popa
mov
imul
lods
rorb
pop
pop
loope
mov
cmc
icebp
xlat
push
les
and
xchg
push
inc
cs
pop
subl
add
aad
sbb
fdivs
mov
and
add
or
lods
add
adc
jne
sbbb
aad
push
add
out
es
add
test
sbb
pusha
dec
pop
dec
addr16
push
jns
std
clc
in
lods
add
fs
jmp
in
cvtps2pi
sbbl
cmp
js
cmp
hlt
sub
pop
push
lds
jg
mov
bound
fmul
jne
push
lahf
push
pop
filds
cwtl
add
dec
bound
inc
ror
add
xchg
push
jo
out
dec
ss
jbe
sbb
addr16
pop
adc
lahf
sub
cmp
sbb
out
sub
pop
fisubs
nop
add
jl
xchg
sbb
lcall
enter
jbe
repnz
add
leave
icebp
sub
add
xchg
ucomiss
inc
into
inc
xchg
jno
pusha
add
xor
sbb
cwtl
add
shr
add
pop
int
lock
sub
addl
push
jecxz
sbb
daa
mov
cs
jnp
and
mov
in
in
inc
jae
mov
add
les
test
jns
add
push
scas
pop
adc
daa
je
add
outsl
dec
mov
add
jge
aad
data16
pop
out
stc
test
incl
mov
add
jns
movsl
mov
ficomps
popa
cmp
cmc
lret
cld
ljmp
in
pop
add
add
or
stc
out
ja
add
int
and
enter
mov
add
lret
mov
pop
jne
iret
out
cmp
popa
add
in
or
and
nopl
jns
add
cwtl
mov
lahf
add
popf
inc
xchg
jle
jbe
add
cltd
ja
cmp
jp
push
fistpl
mov
sbb
rcr
test
shl
inc
out
add
xchg
adc
mov
add
lds
icebp
mov
out
test
and
sbb
push
add
mov
fildl
add
mov
fiadds
test
jge
popa
sbb
jmp
in
jbe
imul
popa
add
add
ss
xchg
testl
jo
insb
loop
xor
orl
cmp
pop
cmp
shrl
mov
ss
adc
loopne
movsl
dec
pusha
ror
aam
cmpl
mov
hlt
aam
push
add
adc
outsl
enter
add
push
mov
jne
dec
pop
lret
jo
cs
push
inc
pop
pop
mov
clc
fiaddl
sub
add
loope
add
pop
fisubrl
scas
add
jle
movsb
shlb
pop
xchg
lahf
in
jg
cmp
stos
push
add
in
orb
mov
out
adc
inc
mov
mov
ja
andb
and
mov
orb
jae
mov
push
in
lods
push
add
iret
jg
pop
test
pop
fadd
dec
lods
int
mov
inc
das
xchg
ja
pop
int3
test
jecxz
repz
pop
loopne
push
les
xor
shrb
clc
cli
add
pop
mulb
inc
stos
aaa
shlb
enter
int
push
pop
xor
xchg
adc
pop
rcrb
pop
outsl
add
or
mov
test
or
cmpsl
push
or
sub
cld
lods
push
cmp
jno
and
addr16
punpckldq
or
jg
orb
push
cwtl
add
inc
mov
loopne
cld
clc
add
scas
je
jecxz
dec
out
inc
add
sub
jmp
push
and
add
mov
iret
lcall
sub
xor
popf
daa
add
inc
aad
pop
cmpsb
add
mov
xchg
clc
cli
jl
shr
sbb
lock
add
sarl
xor
les
shlb
inc
xor
sbb
push
cmp
mov
ja
add
push
sarl
mov
flds
mov
push
inc
repnz
in
addl
addl
mov
jns
add
sti
or
into
adc
dec
jp
and
pop
inc
cmp
faddl
out
inc
push
cmp
push
mov
or
mov
int
pop
cltd
pop
lcall
lahf
ret
test
cltd
hlt
add
cmp
sub
fnsave
dec
cmc
test
or
mov
sbb
gs
out
mov
add
inc
adc
add
shrb
mov
add
jns
or
adc
pop
fwait
xchg
sbb
add
lods
movsb
pop
fcoms
shlb
scas
lret
stos
sbb
add
push
pop
out
in
or
push
add
out
add
jae
out
fsubs
cs
cld
and
push
and
cmp
sub
push
fiaddl
insb
mov
scas
mov
test
add
sahf
lds
jl
pop
int3
jb
pop
lods
insb
outsb
test
imul
jnp
cmpsl
pop
xlat
daa
leave
incb
mov
imul
xchg
je
inc
push
stos
leave
iret
add
xchg
psubb
push
lds
add
sbb
sarb
push
add
add
lock
incb
cli
dec
ret
ret
xchg
add
out
sub
add
mov
flds
adc
sub
negb
dec
add
shlb
add
push
inc
in
sub
enter
stc
nop
test
out
push
mov
ljmp
push
xor
or
add
clc
sbb
mov
testb
pop
push
aas
or
insl
cmpsb
lock
inc
dec
imul
in
popa
add
cmp
mov
stc
into
xor
repnz
out
lea
mul
rcll
lock
dec
add
pop
add
pop
ja
sbb
clc
inc
push
int
imul
push
mov
push
mov
pop
add
sub
mov
fmull
add
fldt
popa
jns
rcrl
mov
movsb
dec
packssdw
das
cwtl
jle
fs
sub
roll
xor
add
rol
lea
sbb
iret
cli
inc
clc
pop
loop
xor
push
sub
or
imul
mov
add
sub
dec
add
add
mov
or
adc
daa
cli
lret
jnp
data16
movsb
mov
add
pop
rclb
adc
push
pop
leave
pusha
inc
aam
ja
inc
lock
jge
lds
add
sub
pusha
xchg
or
jnp
xlat
std
inc
push
inc
xor
add
add
daa
sbb
dec
je
and
roll
jmp
loopne
enter
fists
push
push
add
jne
push
aaa
xor
mov
cmp
lahf
sbb
pop
fwait
movaps
testb
xor
fldl
inc
and
or
xor
inc
mov
enter
inc
sbb
push
mov
mov
cmp
ficoms
add
jl
addb
cmp
adc
stos
test
jne
xorb
popa
mov
arpl
das
stc
push
fadds
inc
ja
add
daa
sarl
mov
xorl
call
jmp
add
jne
mov
stc
adc
mov
pop
clc
pop
add
scas
fs
dec
xlat
mov
cmp
cld
call
sub
testb
test
adc
xchg
dec
les
add
mov
add
or
scas
adc
addr16
lcall
ja,pt
pop
and
test
dec
pop
push
loope
fwait
data16
and
sbb
ret
cmp
add
jmp
popa
add
cmc
inc
out
scas
add
push
xchg
ss
mov
aam
loope
repz
in
add
add
jg
into
mov
cmp
dec
cmpb
mov
jmp
push
mov
add
lret
popa
mov
add
mov
sbb
out
add
rorl
jmp
mov
push
cmpl
push
rorb
fnstsw
inc
rolb
lock
mov
fisubrl
jl
push
jae
add
push
or
cltd
mov
les
jo
jmp
jae
stos
cmp
and
push
add
push
xchg
ss
push
leave
cltd
cmp
icebp
mov
sub
mov
push
outsl
mov
aaa
xchg
xlat
add
mov
mov
sbb
movups
test
call
inc
push
addb
repz
sbb
xchg
push
push
cmpsl
mov
add
push
scas
pop
pusha
pop
jge
add
stos
loope
clc
jecxz
jo
mov
cmp
lock
js
mov
sbb
icebp
add
arpl
add
das
ds
insb
enter
cwtl
jae
out
fcmovu
xor
cmp
xor
cmc
lock
or
loope
cmp
pop
add
mov
daa
loopne
jmp
outsl
jge
cmpsl
xor
aam
es
test
jns
lret
sbb
inc
xchg
lret
sub
xchg
rol
enter
cmp
sbb
inc
jns
add
dec
aaa
mov
cmp
dec
adc
gs
mov
adc
dec
sbb
ss
pause
xchg
or
loop
add
pushf
rcrb
rorb
push
add
mov
or
or
out
add
dec
pop
jb
pop
out
lods
sbb
stos
cwtl
fwait
add
or
inc
inc
inc
movsb
and
sub
cmp
jl
push
dec
push
cli
mov
std
add
xchg
shrb
mov
ljmp
add
xchg
pop
movsl
add
push
insl
cmp
push
add
xor
mov
das
arpl
frstor
gs
popa
movl
scas
fstpt
aad
xchg
stos
fbstp
lret
inc
popa
fiaddl
mov
xchg
orl
push
sub
insb
rclb
notb
sarl
pop
mov
cmpl
imull
xor
adc
mov
add
xchg
add
add
addl
push
inc
mov
lea
insb
arpl
lock
mov
push
cs
xchg
jb
aaa
roll
pop
out
add
cmc
into
cwtl
shl
data16
push
or
mov
xchg
orl
add
out
cmp
mov
adc
xchg
repz
add
adc
inc
add
and
xchg
push
outsb
push
loopne
pop
sub
mov
add
mov
add
dec
sbb
add
movsb
gs
mov
fildl
and
outsb
sbbb
nop
out
add
mov
shlb
inc
jno
imul
gs
filds
testb
jbe
imul
gs
jo
shrb
adc
xchg
sub
inc
pop
negb
or
scas
loopne
test
ret
sbb
movsl
mov
mov
add
fsubs
stos
push
push
les
shll
je
outsb
mov
bound
imul
mov
add
or
xor
xchg
xchg
inc
movb
add
sbb
cltd
inc
in
mov
jno
in
shr
addr16
into
dec
fincstp
jecxz
or
jmp
xor
jle
mov
jl
mov
jne
popa
adc
jns
dec
pushf
ds
outsl
add
add
xor
nop
xor
testb
add
shlb
jg
and
insb
add
jnp
mov
push
push
fsub
jge
icebp
cmpsb
sti
loop
cld
dec
xchg
or
add
test
adc
stc
cmp
and
jl
add
mov
icebp
add
and
dec
xor
mov
jo
test
inc
add
sbb
icebp
pop
jmp
add
push
dec
xor
nopl
jbe
pushf
cmp
mov
push
iret
decb
mov
int3
loope
das
add
addr16
pushf
xlat
pop
rolb
cmp
sub
outsl
hlt
inc
add
mov
xchg
or
lret
sbb
mov
test
jb
push
sbb
std
xorl
je
mov
shld
mov
push
test
loope
mov
inc
sub
cmp
mov
mov
xlat
aas
add
inc
inc
imul
cmp
and
or
bswap
pop
inc
imul
sub
add
sbb
test
fs
pop
push
fidivl
psubusb
data16
das
mov
stos
pop
mov
push
and
fbstp
add
orl
cmp
mov
mov
sarb
mov
ffree
dec
movsl
popf
pusha
loope
add
xchg
cwtl
ret
or
pushf
pop
dec
mov
jns
add
adc
and
push
cs
ret
add
sarl
sbb
out
sub
jno
add
imul
cmp
xchg
sub
sub
fld
jg
std
add
add
push
adcl
ss
dec
mov
sub
add
ret
jns
sub
dec
and
dec
movsb
cmp
add
inc
cmovo
pusha
shl
xor
cs
cmp
xor
pop
add
test
ljmp
jnp
fwait
mov
cmp
dec
out
dec
add
push
sti
add
inc
iret
xchg
aad
mov
add
jo
int
xorl
cmp
adc
inc
pop
cmpsl
lahf
aam
incl
test
mov
rep
jg
mov
ss
pop
lret
sub
cld
cmp
sahf
add
repz
pop
or
dec
adc
sub
cltd
das
fs
and
jae
sahf
lock
repnz
pop
push
inc
in
mov
adc
add
xchg
loope
lds
pop
and
adc
pop
mov
into
pusha
and
xor
js
jo
add
pop
ret
cld
jb
add
sub
outsb
mov
mov
hlt
pop
imul
add
inc
sahf
aam
movsl
push
loop
adc
stos
mov
daa
add
jge
jecxz
or
rcrl
fiaddl
cmp
fsubrl
add
ret
mov
bound
cld
neg
or
add
pop
pop
shl
add
pusha
cmp
sbb
mov
and
popa
addr16
and
mov
pop
lods
dec
dec
add
jle
jle
add
loop
insb
out
dec
js
loopne
add
popf
and
add
add
jnp
sub
testl
xorl
xchg
jg
cmp
lahf
add
cmc
in
sbb
adc
add
sub
out
mov
mov
mov
inc
cmp
sub
xchg
roll
int3
imul
in
inc
mov
add
aaa
pop
and
sbb
cld
adc
fwait
mov
out
js
popa
mov
push
roll
jge
ja
pushf
stos
nop
mov
xchg
push
insl
add
sub
jo
xchg
cmpsb
xchg
lcallw
loopne
aad
xchg
add
movsb
push
and
js
adc
mov
lods
sub
mov
push
mov
hlt
add
ret
push
add
pop
in
jbe
xor
add
andl
aam
jmp
add
iret
sti
xor
xorb
imul
out
sbb
push
mov
aaa
jne
cs
mov
adc
and
add
or
pop
ljmp
repz
imul
add
pusha
jl
inc
push
add
ffreep
xor
add
xchg
cmp
scas
sub
mov
outsb
adc
mov
and
stos
xchg
aaa
int
mov
mov
inc
mov
add
jge
mov
xchg
or
jno
lea
mov
or
sub
inc
repz
popf
add
xchg
push
sbb
sbbl
outsb
pop
mov
and
scas
cltd
sub
add
push
andb
rcr
sbb
cmp
jmp
bswap
in
bound
cmp
rolb
pop
roll
clc
js
stc
shrd
pop
fwait
pop
cmp
cmpb
pop
add
ljmp
popa
adcl
clc
xor
jle
add
cli
add
scas
jo
jne
pop
inc
add
lods
les
sahf
sub
jnp
dec
mov
dec
mov
pop
in
lods
cmp
mov
insl
add
in
xchg
mov
cwtl
push
in
sarl
add
test
ret
out
fsub
add
mov
and
out
repnz
xor
push
mov
cli
jne
clc
cmpsl
scas
pop
mov
sbb
call
xor
add
dec
xchg
jnp
add
insb
mov
inc
jae
sbb
or
add
push
inc
mov
push
dec
popa
cmp
dec
je
std
mov
add
fs
out
cli
dec
mov
das
popf
xchg
imul
jecxz
cmp
ret
add
bound
fistl
jno
lock
out
mov
fwait
add
pop
lods
inc
cwtl
call
std
dec
add
jne
popa
in
rorb
dec
ss
xor
clc
lock
ret
pop
ss
add
shrl
add
mov
test
inc
repz
pop
out
in
je
add
mov
add
ja
loope
shll
scas
add
ror
add
push
and
xchg
jbe
data16
test
dec
rol
mov
add
fisttpl
cltd
out
fldl
ds
cwtl
fcom
aaa
jo
sub
xlat
stos
xadd
mov
in
add
pop
mov
push
ret
fiadds
pop
inc
aas
inc
inc
add
mov
in
lock
fsubs
and
scas
add
movsb
push
fldcw
jns
push
pop
xor
into
sub
outsb
add
xchg
lods
cli
mov
mov
fsubp
insl
cmp
out
sbbl
mov
sahf
pop
ret
enter
mov
add
repz
cmc
or
in
out
les
push
push
push
sar
mov
lds
pop
jo
adc
mov
aaa
or
scas
orb
add
and
jge
call
jge
add
in
add
adc
mov
pop
add
hlt
xchg
push
add
mov
test
add
pop
cltd
jl
pop
jg
push
pop
arpl
loopne
sub
jmp
js
pop
bound
xor
mov
adcl
popf
lea
xor
fwait
mov
mov
add
and
xor
push
out
add
xchg
xor
add
test
jbe
add
jbe
shrl
mov
cmc
shll
add
or
aam
shrb
pop
sbb
xor
inc
add
lds
push
into
xor
add
ret
lea
out
mov
nop
sub
mov
push
adc
cld
ja
or
sub
xchg
andl
imul
mov
mov
cs
mov
shll
add
out
call
mov
loope
adc
add
pushf
hlt
xchg
mov
xor
pop
inc
or
add
ds
cmpsl
adc
test
ss
jl
hlt
add
sub
fimuls
enter
push
push
cmp
add
mov
mov
sub
xchg
icebp
dec
push
mov
rcl
clc
push
in
pop
lods
mov
push
add
adcb
push
and
cmp
push
sbb
outsl
sbb
enter
dec
dec
add
subb
shl
fs
pop
dec
out
jp
add
or
mov
sbb
mov
je
mov
lahf
mov
xchg
push
jno
add
mov
je
cmpsl
lret
add
lcall
push
decb
adc
repz
jns
ret
add
add
movsb
les
ja
add
inc
scas
mov
add
dec
sbb
add
test
add
ds
mov
pop
add
les
xchg
test
aaa
enter
jp
sub
pushf
add
enter
out
loop
insl
inc
adc
jl
add
xor
movb
pushf
or
outsb
xchg
insb
fcompl
sub
cmp
rorl
bound
shlb
imul
and
outsl
in
in
js
std
add
and
mov
out
insl
mov
push
or
add
pop
add
insl
enter
pop
cmpsb
hlt
mov
fbstp
loope
pop
add
dec
aas
push
sbb
jo
xchg
jp
sbb
fimuls
pop
pushf
xor
jnp
cld
cmp
xor
inc
insb
lods
sbb
bnd
inc
and
add
push
pop
inc
add
mov
mov
and
add
or
xchg
or
push
xorl
stc
dec
aas
pop
add
ss
sbb
inc
test
mov
pop
adc
mov
dec
jne
push
push
jp
mov
lods
mov
pushf
jmp
inc
das
sbb
hlt
xor
lods
xor
movsb
cmp
orb
xor
xor
neg
add
sbb
outsl
scas
xchg
push
gs
add
imul
popa
add
loop
mov
sub
xor
xchg
je
mov
cmp
pop
ds
ret
xchg
outsl
sbb
in
daa
loop
add
pop
xor
sbb
repz
mov
rorb
es
pop
lock
mov
stos
clc
xchg
pop
add
xchg
xchg
mov
in
fwait
push
xor
push
fcom
push
iret
test
add
dec
jbe
cmp
xchg
mov
push
fldl
lods
xor
lret
les
mov
jb
add
mov
jmp
mov
mov
xor
mov
cmp
lds
out
add
jnp
or
mov
push
xchg
mov
ja
dec
add
push
testl
jl
inc
leave
add
stos
sbb
js
add
icebp
mov
mov
sbb
or
es
jnp
pop
lods
popa
dec
sbb
adc
push
sahf
arpl
jnp
mov
lret
adc
testb
test
pop
mov
and
add
jle
add
inc
and
lea
pop
jno
pushf
addr16
decb
add
fistpll
add
sub
inc
pop
add
rcr
dec
mov
xchg
inc
enter
pop
mov
inc
inc
push
cmp
mov
add
and
into
dec
dec
adc
sbb
loopne
xchg
push
mov
loop
aas
mov
fstpt
cmp
push
sarl
dec
leave
in
ficomps
add
rclb
mov
xchg
lahf
pop
or
dec
shlb
enter
hlt
push
push
fmull
and
jge
push
and
xor
add
rcll
add
les
ljmp
enter
mov
cmp
out
loopne
outsl
add
clc
pusha
mov
xor
les
xchg
inc
add
fdivrl
imul
mov
lods
stos
push
add
lcall
add
dec
out
fldenv
mov
rcl
adc
cltd
add
xchg
dec
roll
adcl
rcll
push
cmp
push
sbb
frstor
xor
stos
cmp
shrl
sub
add
fidivl
mov
inc
pop
sub
and
out
lods
pushf
add
jb
pop
scas
cltd
mov
cmp
loopne
ljmp
pop
mov
xchg
lods
cmp
push
cmp
xorb
xchg
dec
dec
jecxz
sarb
lcall
inc
sub
enter
mov
mov
jg
add
inc
and
or
mov
call
inc
mov
test
aam
xor
and
and
loopne
xchg
rolb
mov
adc
add
imul
cmp
inc
add
jmp
fdivl
add
xchg
loop
jp
jns
leave
or
clc
popf
add
fisubrs
mov
push
out
xorb
xchg
mov
xor
xchg
add
sbb
mov
pop
test
add
stos
xor
push
insl
adc
add
lds
push
mov
jg
out
adc
mov
es
nop
jg
add
lcall
add
xor
or
pushf
sub
jp
sub
add
outsb
popf
adc
xchg
jo
pusha
dec
inc
repnz
add
or
jle
faddl
pop
mov
xor
jns
cmpsl
addl
add
mov
shl
adc
add
shlb
ret
xchg
dec
inc
pop
cmc
inc
xchg
mov
repnz
mov
sbb
cld
mov
or
pop
cmp
cltd
out
imul
aaa
sahf
test
imul
sub
adc
push
pop
sbb
add
inc
aas
neg
add
test
addb
clc
pop
jno
test
add
cmp
frstor
push
mov
dec
lds
xor
pop
pusha
loop
fadds
jno
adc
out
pop
and
xchg
sub
out
mov
adc
adc
cmp
mov
fwait
sbbl
xchg
loopne
mov
jne
add
inc
sub
pop
and
push
pop
add
or
lret
xchg
lds
shll
sub
mov
fdivrl
pushf
add
bnd
pop
in
shll
pusha
pop
mov
xor
mov
add
mov
stos
add
test
dec
ljmp
ss
xor
mov
leave
add
add
push
sbb
xchg
outsl
mov
mov
das
daa
push
shl
roll
out
call
imul
cwtl
lods
stc
pop
xchg
push
negb
cmp
dec
out
sub
add
push
rolb
jp
sbb
add
mov
add
xchg
mov
jmp
xor
pop
shrb
add
ja
xor
dec
shlb
loope
cmp
aaa
jp
test
stc
xchg
movsb
and
cmpsl
sbb
jo
or
cs
aam
jp
pusha
pop
pop
pop
add
push
lods
fcompl
add
jbe
push
fsubrp
int
es
into
std
loopne
or
sub
and
nop
xchg
mov
mov
pusha
daa
mov
pop
add
mov
jmp
dec
add
repnz
push
add
or
xor
or
addr16
dec
data16
adc
pop
pop
jl
call
jle
xchg
hlt
daa
add
push
dec
or
orl
cltd
pop
push
dec
outsl
push
adc
add
test
ret
dec
loopne
ret
xorb
cmc
cmp
and
hlt
dec
sbb
cmp
or
in
cli
ffreep
or
adc
int3
and
testb
xor
pop
call
mov
in
sbb
clc
test
insl
sarb
movsb
add
stc
adcb
adc
std
pop
data16
subb
clc
enter
inc
or
addr16
stos
inc
pop
out
fildl
lds
and
dec
or
add
lea
dec
inc
ss
push
mov
rclb
pop
mov
push
stos
shl
test
test
imul
sbb
in
js
in
xor
repz
hlt
inc
inc
xchg
xchg
jmp
loope
pushf
cmp
mov
jmp
aas
jg
mov
out
rcrb
push
mov
pop
add
fdivs
add
rorb
xchg
je
add
fnstenv
insb
inc
loop
add
idivb
dec
lock
sarl
inc
lods
aad
add
pushf
ret
inc
dec
add
and
fs
cmc
pusha
fiadds
sub
pop
or
int3
lret
das
add
popa
into
add
inc
add
add
fbld
add
cmp
outsb
pusha
stos
pop
pop
pushf
cmp
rclb
inc
jbe
mov
js
xchg
add
movsl
aad
push
fsubrs
add
adc
pop
movl
mov
adcl
mov
mov
cmpsl
incb
adc
jno
ja
fadd
pop
add
dec
push
pop
add
out
jne
adc
pop
in
mov
out
xor
adc
add
add
ffreep
push
add
cmp
test
out
test
push
subb
pop
dec
pop
enter
scas
mov
add
pusha
hlt
cmpb
xor
sub
js,pn
xchg
push
push
faddl
int
mov
sbb
jb
push
pop
mov
mov
push
cmp
add
or
xchg
add
dec
fcoml
xchg
mov
inc
pop
adcb
add
pop
mov
add
cltd
pop
sub
mov
outsl
inc
sti
jno
add
adc
aas
fcmovnbe
adc
mov
add
mov
arpl
add
pop
adc
mov
out
jns
test
nop
loopne
xchg
mov
push
add
push
fmull
fisttpl
test
lds
pop
jb,pn
sub
xlat
push
or
fs
adc
pusha
pop
mov
add
mov
add
and
inc
dec
push
add
stc
sbb
loope
jo
add
sbb
add
mov
pop
add
inc
jae
push
fimuls
cmp
jb
add
add
xor
call
sub
lods
dec
xchg
xchg
lock
mov
add
ret
mov
rorb
js
lock
testl
pop
outsl
stc
inc
xchg
ror
out
xor
add
fcompl
and
pushf
imul
pop
iret
pop
loopne
inc
into
cmp
negl
lods
xor
out
std
out
enter
dec
add
add
mov
fisubs
rolb
lock
js
inc
movsb
sbb
insb
stc
mov
push
push
jb
inc
je
xchg
add
leave
clc
repz
push
cmovs
lea
and
jecxz
add
insl
cmpsb
and
idivl
mov
sti
ret
gs
add
cmpsl
movsb
push
add
clc
adc
mov
daa
mov
mov
add
ss
mov
mov
adc
cmpsl
add
aaa
xchg
gs
scas
mov
xchg
lret
js
std
push
xor
add
leave
ret
adc
dec
or
rcl
add
insl
sbb
test
add
les
sbb
dec
sbb
pop
pop
fidivl
insl
out
mov
out
push
fisttpll
mov
jae
jp
and
movsb
mov
lret
sbb
sub
in
add
insb
hlt
in
mov
adcb
rcrb
sbb
pop
jmp
call
xchg
pop
or
dec
int
cmp
mov
mov
js
sub
add
movsl
hlt
cmp
xor
das
into
pop
loope
jns
nop
pusha
or
rolb
xchg
mov
loopne
pop
dec
and
add
mov
pushf
jl
cmp
lcall
push
mov
xor
ss
pop
mov
jno
add
and
jne
ret
add
adc
mov
cmc
fdivrs
nop
aam
adcl
jno
inc
inc
int
mov
adc
jnp
xchg
push
pop
inc
pop
js
pop
mov
dec
adc
ljmp
fcmovb
or
jno
pop
ss
xlat
repnz
cmp
hlt
enter
lods
fwait
dec
pop
mull
stos
aam
mov
ror
xchg
mov
mov
sbb
fildl
pusha
addb
xchg
pop
sbb
pop
shl
lds
stos
popl
push
adc
in
rclb
mov
jns
mov
scas
add
ja
add
mov
es
hlt
or
arpl
push
lds
inc
ficoml
add
cmp
minps
push
or
add
push
pushf
xchg
cmp
dec
mov
nop
aaa
push
sub
or
mov
push
push
test
cmpsl
ds
push
mov
aas
jae
adc
ret
add
xchg
cltd
pop
xchg
push
add
stos
push
mov
mov
jle
inc
in
add
jmp
jp
adc
mov
popf
sub
jl
mov
mov
sbbb
fwait
and
lahf
in
add
mov
inc
sbb
mov
hlt
cmpb
add
lcall
adc
xchg
mov
stc
push
pop
loopne
cmp
jae
mov
add
in
pop
mov
mov
loop
cs
pop
clc
mov
cmp
sbb
pop
sbb
jle
xchg
adc
popf
imul
or
add
and
and
jb
aad
je
xor
scas
xor
mov
aad
sbb
push
fwait
or
out
ret
or
ljmp
pusha
jecxz
pop
xchg
dec
lcall
add
jnp
add
dec
pop
and
or
cmp
cli
or
jle
daa
add
int
shrb
repnz
sbb
and
data16
lea
or
lret
cmc
mov
push
add
add
ja
pop
dec
add
jmp
rorb
and
mov
xchg
mov
cmc
add
ret
sahf
decl
dec
push
cs
xlat
mov
lock
sar
repnz
mov
pushf
rclb
add
pop
loopne
stos
push
pop
aam
pop
push
mov
fistpl
xor
mov
out
fs
add
repnz
add
or
stc
sarb
mov
and
add
inc
jbe
fisubl
gs
shrl
and
mov
mov
outsl
cmc
xor
fldl
jbe
mov
outsb
negb
es
or
andb
xchg
add
sub
dec
jnp
add
xchg
lock
pop
imul
repz
add
dec
stos
or
aam
inc
pop
pop
push
stos
add
jp
mov
push
call
pop
jge
xchg
xor
xchg
repnz
insb
movsl
add
hlt
sar
adc
push
xchg
or
loopne
sub
xor
into
and
xchg
clc
fnstsw
cs
inc
add
fdivs
sbb
imul
jae
lret
dec
jno
add
test
cltd
rclb
pop
xor
xchg
daa
rolb
in
dec
bound
test
mov
inc
icebp
add
push
ljmp
add
test
inc
aam
xchg
stos
add
std
imul
mov
jno
cmp
pop
mov
pop
in
sahf
out
ljmp
xchg
rolb
mov
xchg
cwtl
jno
jo
aam
jnp
xchg
mov
insl
inc
in
jle
fdivrl
adcl
mov
add
dec
lea
jae
cmp
xorl
mov
fwait
push
cld
add
fadds
or
add
or
xchg
mov
filds
enter
mov
lahf
andb
sbb
leave
jb
mov
and
inc
adc
sbb
add
push
add
nop
sub
idivl
rcr
test
jo
movsl
add
pop
movsb
leave
sbb
shlb
add
push
jge
push
add
aaa
out
pop
jg
add
jmp
insl
in
add
mov
add
fisttps
push
jmp
fnstenv
jae
pop
call
incl
mov
pop
mov
add
rol
inc
sub
into
outsl
add
cld
out
push
add
loope
in
pushf
jg
loopne
in
push
mov
xchg
push
inc
xchg
mov
mov
add
pop
push
push
pop
mov
add
push
ljmp
in
cmp
push
push
cmp
mov
mov
jo
pop
mov
sub
mov
pop
and
pop
popf
daa
aas
jo
rcr
pop
in
add
out
add
sub
leave
roll
dec
loopne
shlb
jns
hlt
movl
sbb
add
popf
xchg
xor
cmpxchg
jge
inc
roll
std
and
test
jae
out
sbb
cli
pop
cwtl
add
aas
insb
cs
or
xchg
mov
jo
cmp
jmp
inc
divb
adc
mov
xchg
inc
loopne
insb
xchg
add
xchg
push
je
adcl
xchg
stos
sub
push
xor
push
add
push
adcl
leave
jge
mov
out
arpl
add
jle
pop
cwtl
imul
push
outsb
loop
add
rolb
adc
or
aas
cltd
imul
mov
xor
js
cmpb
in
orb
insl
inc
aaa
and
mov
push
sbb
xor
inc
pop
jge
sti
add
add
push
out
push
enter
mov
sbb
add
fcmovne
nop
clc
mov
pop
add
xor
mov
mov
dec
js
cmp
iret
xorl
push
adc
add
jl
add
sbb
enter
cmp
mov
mov
call
add
or
xchg
mov
and
sub
or
sahf
pop
jecxz
add
push
pop
loopne
mov
ja
jl
dec
xor
xlat
sub
cmp
push
into
sbb
pop
push
pusha
sbbb
addb
dec
cld
les
pop
mov
dec
xchg
inc
mov
bound
fcmovnu
push
inc
ficomps
cmp
js
jbe
das
pusha
xchg
xor
iret
add
sbb
ror
hlt
or
and
loopne
jb
jnp
stos
push
jge
stos
dec
push
add
mov
in
repnz
add
out
test
jbe
fiaddl
adc
hlt
cli
loope
lcall
std
in
sub
icebp
cmp
pop
sti
lods
fidivrs
fsts
mov
cmpsb
sub
xchg
ja
xchg
imul
mov
sbb
sub
add
mov
nop
add
ret
inc
pusha
dec
add
call
xor
daa
iret
in
dec
add
adc
pop
add
or
sbb
add
xchg
xchg
aas
fsubrs
add
lea
gs
pop
psubw
ror
sarb
loope
imull
arpl
mov
pusha
ljmp
iret
pop
leave
adc
les
mov
fwait
addl
push
lea
mov
push
sub
xor
test
mov
stc
sahf
add
pop
or
sbb
add
rcl
push
push
cli
fiadds
sti
cmp
pop
repz
sbb
and
loopne
out
push
std
inc
es
mov
pop
add
insb
fstcw
aad
lldt
out
popa
sub
add
mov
jns
jo
cmpsl
cmp
adcl
popa
mov
hlt
dec
pop
cmp
daa
insl
and
add
lahf
sbb
loop
add
and
pop
jge
xchg
pop
bound
push
ror
lahf
roll
jne
push
jg
mov
sbb
add
jnp
ja
add
mov
call
and
sbb
xchg
fnstcw
add
push
scas
out
cmpl
mov
mov
scas
imul
sub
dec
push
fwait
nop
mov
lcall
jo
pop
mov
sbb
sbb
scas
xor
pushf
hlt
sub
mov
jne
orb
fwait
inc
cmp
xor
and
jb
sarl
sub
mov
cltd
inc
cld
xchg
inc
add
data16
jnp
imul
test
jp
xchg
in
inc
push
sub
add
fs
das
cld
nop
fnstsw
mov
popa
stos
pop
add
and
sbb
mov
out
inc
inc
leave
lds
arpl
std
jne
or
add
outsl
and
adcl
pop
push
inc
in
sarl
int3
cmp
into
cmp
mov
dec
aaa
push
and
add
testb
or
mov
jo
sbb
mov
add
adc
lock
dec
into
jmp
lods
faddl
test
or
int3
xor
jno
add
aas
jnp
push
hlt
icebp
sbb
cld
dec
ds
mov
add
lret
add
cmp
mov
dec
push
pop
aad
out
dec
and
add
sti
sbb
lret
out
add
pop
push
and
lds
cli
dec
subl
imul
adc
scas
mov
mov
mov
push
xorb
mov
test
or
daa
adc
mov
jb
jns
shr
test
add
adc
push
sti
jle
add
lret
cs
sub
out
testb
rolb
aaa
inc
outsl
push
ljmp
int3
inc
loop
psrld
rcrb
inc
add
push
pop
add
xchg
jp
add
jo
adc
sub
cmp
jns
sub
add
xor
jno
jmp
add
jnp
je
cs
dec
in
and
add
nop
mov
lods
int3
inc
or
call
hlt
jmp
sbb
insb
push
add
sti
test
pop
push
jb
dec
outsl
pusha
stos
adc
mov
mov
adcl
test
dec
sarb
dec
adc
dec
repnz
fwait
inc
mov
scas
push
inc
addl
cltd
mov
loopne
lldt
pop
sbb
popf
and
testl
mov
les
add
repz
ss
add
cmp
movsl
cltd
sbb
jmp
cmpxchg
ret
in
jbe
cmp
jge
outsl
lods
pop
pop
leave
mov
push
loop
jo
sub
or
nop
lahf
out
add
rcrb
sahf
loop
shr
add
push
mov
xchg
add
std
addl
call
add
lahf
dec
add
jge
pusha
in
mov
xchg
loop
je
pusha
shlb
sub
leave
ds
sbb
and
sub
shr
pop
popf
imul
pop
pop
pop
mov
sbb
inc
outsb
cmp
cmc
loope
test
icebp
add
lahf
xchg
pusha
nop
stos
xchg
sub
sbb
push
pop
and
outsl
rclb
cwtl
cs
fadds
inc
stos
mov
hlt
sbb
inc
mov
pop
and
cmp
lods
jne
xchg
push
shlb
push
mov
inc
iret
push
sub
add
popa
sbb
xor
popf
notl
push
into
push
dec
out
cmp
mov
mov
or
push
pusha
in
push
adc
sbb
enter
cmp
ret
aad
jns
jo
out
push
loopne
sbb
mov
arpl
imul
inc
jne
ret
jg
lock
inc
stos
jno
add
push
ljmp
das
rolb
clc
jl
add
mov
push
sbb
das
into
ljmp
push
sub
dec
mov
add
fnstcw
push
xor
adc
pop
add
mov
add
lods
push
aas
pop
fdivr
jns
pop
cmp
jl
call
mov
dec
mov
shl
paddb
popf
mov
xchg
dec
bound
fwait
adc
sbb
cmp
fucomi
sarb
in
add
jecxz
cmc
jbe
xchg
add
adc
js
sub
dec
mov
cmp
add
mov
add
adc
and
and
add
mov
and
add
fidivrl
out
push
stos
add
arpl
add
movsl
or
dec
mov
sti
push
data16
lods
cmpsl
sarb
pop
or
hlt
mov
lret
add
stc
movsb
push
add
xor
adc
mov
rcr
enter
jp
xor
loop
add
jno
inc
xlat
addl
cmp
xor
repz
jne
xor
push
dec
dec
rol
insl
movsb
fiadds
stos
or
mov
jp
sub
pop
add
cli
mov
and
lods
popa
mov
lret
xor
mov
sbbb
mov
add
jo
xchg
jl
lods
xor
fldt
in
add
outsb
push
lods
sub
popf
out
roll
xor
jmp
outsl
add
pop
pop
lret
push
or
inc
pusha
dec
add
xchg
and
sar
aad
stos
xchg
add
test
imul
scas
cmp
add
xchg
sbb
pop
leave
push
push
mov
fsts
sti
ret
xor
cmp
outsb
movsb
add
push
jp
dec
lds
add
mov
mov
sarb
testb
movsb
in
add
mov
add
int3
inc
test
cmpsb
xor
adc
adc
movsb
sub
and
push
inc
xchg
fstpl
out
adc
pushf
jle
and
add
lods
roll
push
mov
push
loope
push
out
psllq
ret
ret
scas
inc
loope
jecxz
adc
push
xchg
add
add
xchg
stc
dec
add
dec
push
test
fstpt
pop
dec
sbb
inc
ja
out
and
hlt
inc
aas
and
shll
add
inc
shll
sbb
or
mov
pop
mov
dec
mov
fiaddl
cmp
and
in
loope
add
sub
pop
mov
xor
add
lcall
cmp
les
sub
add
imul
add
jmp
lret
lahf
roll
or
popa
call
rorl
je
add
push
inc
add
push
arpl
dec
scas
lods
jo
cmc
push
pop
add
xor
inc
enter
daa
push
sbb
add
sbb
pop
push
sbb
add
mov
mov
pusha
mov
and
mov
cwtl
cltd
or
in
call
dec
inc
add
push
add
pop
add
negl
stos
movaps
mov
adcb
add
scas
mov
jl
mov
dec
mov
movsb
sbb
rclb
lea
aad
mov
jns
loopne
add
dec
inc
rolb
sub
cmp
shl
in
add
aad
dec
sbb
mov
sub
repz
cwtl
imul
pop
add
fdivrs
iret
dec
sarb
xor
sub
add
inc
push
cmp
add
test
push
notl
call
je
mov
dec
fwait
pop
shl
outsb
add
jecxz
out
aas
into
add
pushf
popf
adc
push
pop
xor
mov
and
ret
xchg
das
repz
mov
sub
jg
cmp
cmp
rcrl
aad
push
jle
js
add
xor
leave
inc
mov
nop
and
add
ja
add
jbe
adc
test
add
or
adc
nop
push
add
aas
loope
inc
rcl
add
xor
imul
add
fld1
movsb
xchg
add
shr
imul
in
fidivs
add
jecxz
iret
cwtl
mov
mov
lds
add
pop
add
mov
add
test
fucomi
lret
push
sub
pusha
leave
test
pop
add
xor
add
xchg
adc
fbstp
xchg
add
jmp
das
add
cmpsl
and
icebp
repnz
cli
lcall
sbb
xchg
sub
add
and
dec
add
enter
inc
and
dec
inc
xor
jns
insl
add
cmp
arpl
notb
jp
add
and
mov
add
repz
roll
scas
lret
add
aaa
clc
outsb
add
mov
pop
xchg
lods
xchg
sub
arpl
call
add
dec
fbld
adc
pop
cmpsl
and
in
jne
inc
adc
mov
stc
mov
popa
pop
add
pushf
and
repz
push
xchg
xchg
mov
xchg
mov
lock
insb
pop
addb
lret
pop
dec
cltd
pop
add
push
mov
adc
insl
pop
cmp
scas
pusha
add
into
mov
push
sbb
add
push
mov
push
test
cmp
or
jg
push
inc
jns
ds
cmp
xchg
inc
fidivl
mov
inc
repz
mov
mov
xchg
fcomps
xor
insl
adc
mov
add
add
and
push
mov
sbb
lock
jl
add
in
sbb
dec
add
rcl
xor
and
inc
pop
test
add
jp
lret
incb
insb
xchg
mov
xchg
sub
add
out
add
scas
stos
jmp
sbb
enter
or
inc
pop
fisttpll
mov
lret
rcrb
in
sbb
rorb
adc
addl
cltd
mov
call
jg
cli
add
jne
push
add
lods
dec
fbstp
add
ret
xor
push
xchg
in
mov
add
add
fstpt
cmpsl
inc
in
pop
in
gs
adc
or
das
inc
pop
adc
add
xor
rcl
add
add
test
roll
daa
mov
inc
add
sub
arpl
rol
call
mov
add
xchg
push
in
pop
call
xor
pop
jo
lods
jmp
hlt
jle
cmp
mov
adc
mov
and
and
repnz
lods
sti
dec
outsb
lods
pop
jl
lea
rorb
imul
push
lock
mov
mov
jge
pushf
mov
mov
hlt
cmp
pop
mov
push
xchg
rcrb
add
movsl
mov
ret
cmp
xor
test
xorl
xchg
pusha
cmpsl
xlat
scas
add
xchg
pop
push
sbb
mov
call
add
dec
outsl
int3
cwtl
add
add
sbb
mov
roll
insb
and
cmp
or
repnz
cli
xchg
das
fnsave
xchg
enter
ret
mov
mov
hlt
repnz
movsl
sub
add
lock
add
mov
movb
gs
xchg
cmp
mov
and
push
push
xor
xchg
sbb
les
in
jbe
add
cmp
xchg
add
in
push
xor
add
test
outsb
shl
imulb
push
push
insl
dec
into
mov
jb
push
xchg
btr
pusha
popf
das
and
sbbl
adc
pushl
jge
inc
push
mov
mov
xorl
push
leave
add
bound
pop
data16
mov
mov
cmpsl
mov
pop
add
xchg
insl
push
test
mov
sub
add
push
shlb
cmp
pop
dec
repz
sbb
mov
lods
add
dec
iret
movsl
or
aaa
adc
subb
rolb
dec
scas
add
jno
pop
addr16
lock
mov
mov
jae
pop
lahf
push
or
cmp
subl
movsl
shll
add
fcomp
cmp
mov
ja
mov
je
sub
test
loope
jae
xchg
cli
add
add
inc
fiadds
fs
rcrl
push
stc
sub
add
sbb
test
add
roll
sbb
push
add
mov
ja
mov
or
rorb
jns
repnz
insb
out
mov
inc
sbb
dec
xor
xchg
add
out
stc
adc
sahf
xchg
int
mov
and
pushf
sub
cmpsb
mov
cmp
xchg
lds
dec
mov
add
jb
xor
lcall
dec
pushf
imul
lods
loope
add
loop
mov
mov
les
movsb
push
rclb
bound
out
add
outsb
push
dec
ljmp
leave
pop
orb
loop
dec
imul
jo
jg
leave
lret
add
repnz
loopne
mov
loope
shlb
sbb
mov
add
push
stos
dec
add
cltd
inc
es
sub
lods
xchg
mov
cmp
push
add
out
aas
out
insl
mov
dec
enter
ficomps
lods
mov
xor
add
jl
clc
lock
add
pop
inc
and
pop
pushf
stc
push
xorl
int3
xor
and
cmp
pop
add
add
mov
scas
popl
jbe
sbb
ret
jae
stos
add
mov
aam
cli
fmuls
test
pop
adc
cltd
add
xor
call
lcall
shlb
xchg
sbb
dec
int3
cmpb
cmp
mov
add
mov
push
nop
add
fs
push
mov
add
test
lret
mov
xchg
sarl
lcall
fcompl
and
fdiv
xchg
scas
pusha
in
add
sbb
in
add
sub
addb
idivl
sar
jge
add
cs
hlt
pop
jl
ds
xchg
scas
pop
xchg
insl
daa
add
mov
outsb
mov
and
test
add
pop
shll
shrb
cmp
push
adcb
xor
popa
clc
jp
adc
test
loopne
pop
sbb
stc
outsb
dec
inc
adc
repz
rolb
into
mov
test
add
jno
push
mov
add
push
popa
inc
jl
outsl
add
mov
out
push
pop
lret
mov
inc
mov
pop
mov
aas
lret
mov
and
lock
lret
cmpsl
roll
leave
pushf
cmp
out
ja
in
repnz
push
xchg
and
mov
cmp
lcall
adc
inc
add
jbe
repnz
cmp
and
inc
xor
dec
loopne
std
add
and
sub
mov
or
jl
shll
add
cmpsb
inc
jp
imul
pop
adc
push
clc
mov
nop
sbb
mov
pop
inc
shlb
xor
add
scas
adc
push
jmp
mov
xchg
jp
icebp
inc
shll
mov
mov
fnstenv
pop
push
xchg
add
mov
push
in
ljmp
ret
cltd
pop
dec
adc
rolb
add
ret
jne
sub
pop
jmp
add
xlat
dec
push
int
xchg
or
mov
stos
int3
add
cmp
mov
gs
mov
or
scas
adc
or
pop
add
ret
into
andl
add
sbb
or
pop
push
sahf
mov
mov
fsubs
jae
cs
nop
adc
rcr
xchg
adc
add
gs
stos
mov
add
inc
mov
pop
xor
out
push
jl
add
mov
lcall
shrl
in
incb
and
cmp
filds
mov
pop
pop
adc
mov
popf
shll
or
add
insb
lcall
add
out
test
pop
jae
inc
minps
adc
out
cmpsl
jno
add
ds
push
pop
or
into
adc
rcr
popa
test
add
enter
cmpsl
cmp
xchg
mov
psubb
sbbb
sbb
fldenv
sets
adc
dec
push
xchg
shrb
fwait
and
add
mov
push
jle
sbb
sub
sub
or
xor
pushf
movsl
repnz
lock
hlt
push
jo
cmp
add
lds
fdivr
jmp
lcall
pop
cmp
jae
aas
mov
mov
sub
xorb
add
sahf
sbb
mov
pop
ja
push
lock
add
mov
pop
rorb
xchg
loopne
scas
push
jns
xor
pop
pop
data16
fcomps
mov
inc
test
outsl
cmpsb
xchg
ljmp
jne
xorb
in
pop
movsb
xor
stc
call
out
add
out
lret
lods
aaa
mov
nop
mov
pop
out
jp
sub
outsb
xchg
repz
lahf
dec
add
pop
fcompl
pop
rorb
cmp
sbbb
push
iret
jno
ret
pop
repz
cmp
sahf
xor
jecxz
leave
jo
xchg
jns
sbb
push
in
sbb
inc
mov
fwait
stos
add
ljmp
add
adc
lcall
jg
xchg
das
cmpsb
jmp
pop
push
test
andl
pushf
adc
shl
push
nop
mov
cltd
push
push
push
or
xchg
mov
mov
es
loopne
dec
cmp
ljmp
xchg
push
lods
inc
mov
mov
inc
je
js
push
enter
into
bound
add
xor
mov
arpl
cmp
int
clc
add
xor
stc
jle
add
xchg
mov
cvtpd2pi
add
loopne
pusha
cmp
add
and
dec
cmpsb
in
cs
mov
jne
add
pop
call
adc
stos
xchg
mov
jbe
enter
pop
pushf
push
cmpsb
add
xchg
les
push
add
sbb
add
inc
lods
dec
jbe
inc
xlat
ltr
out
cmp
jnp
fs
addb
push
add
xor
sbb
pop
lea
adc
dec
mov
cmovbe
mov
or
hlt
sbb
and
mov
movl
push
les
xchg
add
divb
pop
jno
or
stos
mov
cli
or
inc
cmp
int3
push
pop
add
pop
dec
aaa
out
add
jg
popa
dec
js
xchg
push
das
daa
xor
sbb
bound
add
dec
mov
mov
popa
push
sarl
ret
sub
imul
dec
scas
js
out
dec
lahf
add
or
in
movsl
pop
mov
xchg
loopne
jmp
std
dec
and
mov
popa
push
adc
aaa
mov
scas
inc
repz
fwait
popf
ficompl
hlt
mov
adc
dec
mov
scas
call
out
add
cmp
loope
mov
lret
mov
popf
add
mov
jb
sbb
insl
mov
add
cmp
aad
add
mov
addb
mov
fcmovb
add
inc
jl
mov
dec
je
add
pop
sbbb
repz
mov
jbe
repnz
aaa
and
test
add
test
add
xchg
sub
dec
bswap
sub
lahf
outsl
mov
or
testb
or
and
outsb
leave
xchg
pusha
das
sub
and
pop
adc
mov
mov
add
ja
push
xchg
lcall
xchg
fwait
rclb
lock
fs
add
xor
xchg
add
mov
cmp
adc
sbb
or
lods
idivl
lods
add
xchg
das
sbb
jle
add
push
clc
mov
js
jecxz
mov
pop
pop
mov
mov
enter
int3
mov
stos
out
cmp
scas
push
lcall
mov
dec
add
mov
push
loopne
cmpsb
mov
add
enter
add
into
sub
xor
add
mov
cld
jne
aas
call
add
jno
dec
out
es
sbb
mov
icebp
add
rcr
fldenv
add
mov
inc
sub
push
outsl
fwait
add
xor
movsl
incb
loopne
push
aad
mov
outsl
sarl
mov
xor
bndstx
mov
inc
pop
scas
jb
inc
add
mov
jmp
hlt
add
xor
adc
mov
pop
out
and
mov
dec
add
cmp
sahf
arpl
int3
sub
add
in
aad
jle
les
jae
xlat
arpl
stos
dec
mov
lcall
mov
rcrb
mov
lods
xor
cmpsb
fs
xor
mov
sbb
mov
jp
sub
nop
into
add
outsl
arpl
add
mov
add
gs
inc
push
pop
shl
jnp
sti
sub
popa
add
les
add
cltd
movsl
data16
mov
rcrb
pop
loopne
fsubrl
out
fadd
jne
fs
pop
int3
pop
bnd
dec
outsb
add
je
data16
add
sahf
pop
jo
sub
loop
outsb
inc
cmpsl
ficoml
mov
cmc
cmpb
loop
sbb
jns
sub
aam
enter
xchg
add
xchg
mov
call
out
shll
push
jno
loop
xchg
pcmpgtd
in
sahf
movaps
push
iret
push
outsb
pop
cmpb
push
in
jl
pop
testb
push
test
sub
sub
mov
loop
fcoml
pop
sbb
push
fcoms
xor
andl
xor
bound
in
mov
jg,pn
add
push
mov
add
lret
mov
imul
cmp
pop
sub
outsl
in
fiaddl
ja
out
push
push
inc
add
mov
cmp
add
imul
mov
adc
sbb
ret
mov
xchg
aad
add
addb
scas
sbb
add
idivb
lahf
sbb
add
orb
aaa
aas
movsb
mov
push
movsl
pop
ss
mov
or
pop
out
enter
and
stos
imul
xchg
sbbb
mov
mov
cwtl
dec
mov
cmp
rcrb
gs
ja
jbe
ret
leave
and
sub
add
inc
cmc
xor
xlat
add
or
out
cmp
push
arpl
sub
sarb
scas
sub
push
xchg
leave
dec
ret
loopne
and
push
mov
sbbb
inc
fstpt
or
jp
stos
dec
add
pop
dec
popf
add
out
sbbl
out
sbb
lret
xchg
mov
ljmp
stos
mov
sbb
lret
mov
dec
addl
cmpsb
ljmp
test
and
clc
adc
dec
data16
in
dec
movsl
add
cmpsb
sbb
jae
lret
cmp
cli
mov
sbb
pop
stos
or
xor
rorl
lcall
fcmovnu
cli
push
es
and
test
mov
sahf
push
aas
and
pop
fbld
inc
aaa
fsub
mov
cmp
xchg
adc
sbb
jg
or
add
mov
add
mov
sub
jo
jmp
jmp
movsl
fnsave
hlt
cli
pusha
mov
inc
mov
add
and
mov
mov
test
add
cmpsl
jg
xchg
outsb
sarb
add
sahf
jo
mov
cmp
aad
push
add
pusha
sub
add
rcrl
or
xchg
push
lock
cmpsb
dec
mov
inc
push
dec
fs
sub
bound
mov
fsubl
sbb
inc
pop
add
fisubrs
cmp
xchg
inc
popf
xor
aad
lldt
jmp
jne
inc
mov
aam
sbb
xor
jmp
add
pop
ljmp
pop
push
dec
cmc
sub
pop
aas
push
jmp
int3
add
xchg
inc
adc
insl
jp
add
mov
xchg
js
roll
xchg
inc
dec
add
adc
or
inc
ret
addr16
xor
lock
jnp
sub
mov
mov
ljmp
jmp
adc
pop
push
add
cld
rol
in
std
enter
add
test
xor
lret
push
jl
inc
imulb
cs
pop
icebp
cmc
add
add
test
iret
push
add
stc
adc
popf
daa
sbb
pop
ja
fiadds
dec
in
inc
lret
jo
add
inc
int
iret
imul
add
mov
or
mov
pop
xor
mov
ret
shlb
adc
pop
rcrb
mov
imul
inc
xorl
filds
mov
jl
add
mov
jae
add
push
testb
cmpsb
insb
inc
mov
test
mov
push
stos
in
mov
clc
popa
sarl
add
add
fucomp
sub
fsts
enter
les
insl
mov
mov
add
mov
cmpsl
mov
stc
dec
roll
out
add
jb
daa
push
out
push
pop
test
popa
and
sarb
push
insb
add
pusha
aad
add
adc
and
sub
push
sti
cld
and
xchg
mov
mov
outsl
inc
test
add
dec
dec
pop
add
and
jns
add
cwtl
inc
xchg
adc
int
cmpsb
fcoms
adc
push
lock
pusha
add
adc
mov
add
shl
insl
sbb
jbe
sbb
cmp
add
ss
pop
dec
push
add
jb
inc
mov
roll
into
enter
lcall
repnz
inc
pop
insl
mov
sub
clc
cltd
inc
or
mov
cmc
add
arpl
in
ja
inc
add
int3
cmp
stos
sub
push
lahf
xor
test
and
add
add
aam
add
sbb
js,pn
cld
verw
push
adc
push
inc
ret
xor
loope
cltd
mov
out
xchg
dec
or
sbbl
add
test
or
scas
scas
or
es
and
mov
mov
out
xor
cmp
popa
popf
int3
add
sub
fdivrl
aad
sub
xor
in
xor
add
pop
roll
pop
sub
cmp
dec
inc
mov
daa
cli
sbb
lret
push
icebp
fcompl
gs
dec
mov
jmp
xor
mov
repnz
add
jl
iret
mov
add
sbb
dec
push
add
movsb
mov
mov
bound
out
xchg
add
shll
in
cmp
push
fcomps
iret
and
cmpsb
call
jno
into
popf
leave
ficompl
push
sbb
mov
and
negb
lods
jmp
add
ret
mov
and
inc
pop
cmc
stos
mov
jmp
hlt
in
cmp
enter
in
jl
les
sbb
insl
cld
add
xchg
ret
fisttps
lock
repnz
lcall
sti
mov
fcompl
add
jo
xor
mov
add
test
jg
xor
add
push
adc
add
inc
adc
in
aam
add
lds
jns
dec
pushf
add
xor
sbb
clc
std
cmp
sbb
add
add
cld
ret
addl
mov
add
cs
iret
idivb
outsl
sbb
shrd
xor
xlat
rolb
jb
stos
mov
mov
shl
dec
loope
repnz
sbb
faddl
outsb
bound
aad
lds
pushf
or
scas
mov
outsl
rorb
cmpb
sbb
mov
test
push
xchg
jae
jge
add
or
push
jnp
sub
loopne
icebp
jge
filds
sti
mov
test
mov
push
mov
sbb
pop
inc
ret
aam
mov
push
jnp
shlb
sbb
lods
addl
dec
push
cs
jle
lahf
loope
sbb
repnz
or
mov
mov
fnstsw
mov
push
mov
shlb
pop
js
imul
gs
lods
je
add
lods
mov
test
xlat
ret
popf
in
add
inc
imul
sub
cmp
in
nop
not
aad
mov
popf
ret
push
xchg
add
out
imulb
sti
inc
add
inc
mov
jg
xlat
fldl
pop
dec
mov
dec
mov
xchg
add
sarb
dec
out
cwtl
divb
push
imul
add
sbb
pop
lahf
xor
mov
orb
push
mov
faddl
ret
pusha
lods
aad
mov
xchg
mov
jae
add
nop
add
jge
mov
push
movb
subb
push
jecxz
add
adc
ds
sub
es
jnp
adc
sti
mov
and
sub
xlat
insl
dec
cmp
add
push
or
mov
dec
and
inc
push
dec
jae
aam
jbe
xor
mov
outsb
lods
scas
and
in
hlt
add
add
test
add
xchg
mov
loopne
add
adc
mov
cmpsl
push
outsb
inc
push
mov
sub
sub
imul
inc
filds
emms
mov
insl
ljmp
jbe
or
fdivr
andb
jo
add
sub
js
add
les
insl
js
add
out
inc
xchg
mov
jb
cmp
out
push
and
dec
lds
sti
or
out
cmp
push
stos
jmp
xor
fstpt
cmc
push
ds
out
add
dec
xorb
jno
jle
xor
and
dec
pop
outsb
mov
jle
lret
xorl
inc
push
mov
in
cli
mov
inc
call
cli
mov
sarb
clc
add
dec
mov
mov
cwtl
add
xor
jo
test
add
lret
add
add
xchg
jle
jb
fsubrl
xchg
sbb
and
mov
add
sbb
loop
ficomps
incl
mov
hlt
mov
push
lret
rclb
add
mov
into
jo
add
add
add
js
data16
jne
push
cmp
aas
xchg
jge
popf
sti
notl
call
jae
fdivl
or
push
or
or
ret
add
sub
xor
cmp
xor
xchg
hlt
aas
and
es
add
mov
cmpb
sub
lods
ds
add
faddl
popf
rcrl
lea
dec
lahf
mov
sub
add
enter
add
add
hlt
jmp
pop
and
push
add
adc
out
and
fwait
add
loop
lret
aad
xchg
cld
push
pop
jo
add
mov
rcr
xchg
cmp
pop
clc
mov
jl
js
jp
dec
ret
xchg
add
call
stc
add
int3
pop
dec
push
mov
data16
dec
xor
enter
addr16
add
lcall
add
adc
lahf
push
inc
lods
pop
scas
cwtl
mov
add
add
xchg
jmp
lds
pop
sub
popa
sbb
roll
sarb
add
clc
cli
std
es
adc
lds
mov
sbb
jp
mov
pop
das
pop
adc
xor
mov
fwait
jg
add
pushf
insl
fdiv
push
mov
adc
sbb
add
ret
in
es
and
mov
xor
addr16
fadds
lods
sbb
ret
sub
push
push
add
mov
pop
mov
dec
xchg
jnp
push
ret
or
mov
add
add
and
pop
jae
lea
mov
rcll
outsb
add
lret
xchg
repnz
mov
shlb
xor
xchg
cmp
sbb
mov
or
cld
mov
mov
push
add
xchg
sbbb
insb
movsl
inc
fcom
add
ds
dec
fs
mov
adc
mov
sub
xchg
xor
sub
add
dec
sarb
out
xor
dec
out
pop
imul
add
mov
cmp
int
out
imul
repz
daa
mov
rcrb
sbb
movsl
lock
pushf
inc
add
dec
rcll
lock
sub
add
jbe
cli
add
push
jo
xlat
and
test
cmp
cwtl
push
inc
cwtl
and
leave
enter
mov
pop
and
mov
popa
add
test
hlt
ltr
mov
pop
mov
in
ja
add
sbb
insb
push
xor
add
pop
push
test
les
add
jbe
arpl
test
cmp
add
out
or
pushf
inc
add
test
sbb
ret
dec
fistl
and
scas
popf
inc
sbb
jle
jg
pop
shll
in
cmp
inc
mov
or
mov
jbe
push
out
add
jns
out
cmpsb
pop
mov
add
outsb
pop
mov
cmp
in
mov
jecxz
icebp
fistpl
xchg
mov
aas
lds
in
testb
movsb
rcrl
pop
add
adc
pop
hlt
lods
pop
jo
adc
lahf
lock
jmp
les
in
push
add
xor
pushf
adc
sahf
fnstcw
and
in
pop
add
int
test
cs
clc
add
pusha
and
adc
in
and
ds
cli
add
jne
clc
jnp
add
jnp
cmp
iret
add
adc
lea
lds
pop
cmp
and
lea
jl
inc
mov
dec
xor
cmc
enter
mov
add
mov
repnz
add
push
cmp
clc
add
mov
fwait
or
dec
adc
add
cmp
in
add
das
sbb
mov
add
into
xchg
mov
mov
sbb
call
addr16
insb
cltd
add
lds
add
rorb
sub
sbb
mov
pop
lea
daa
inc
dec
lock
fs
push
jbe
dec
pop
mov
pop
roll
cwtl
add
in
mov
subb
popf
cmp
or
push
lahf
mov
cmc
mov
push
or
insl
int
sti
xchg
pop
inc
push
add
aaa
sbb
repz
push
add
mov
into
add
fmuls
clc
jg
lea
cmp
xchg
shlb
sbb
xlat
add
pop
pusha
cld
cmp
int
andb
dec
mov
aaa
in
bswap
xor
dec
insb
movsl
test
loopne
xchg
and
mov
pop
mov
mov
add
lods
leave
xlat
sti
in
daa
push
and
sub
cmc
mov
jp
pop
mov
cmp
mov
sbb
add
push
mov
cwtl
add
bound
push
test
mov
add
pop
ljmp
sbb
and
cltd
fldt
push
sub
cmpsl
jecxz
xlat
or
faddl
sbb
mov
inc
add
in
add
mov
arpl
dec
add
inc
mov
cmp
repz
adc
add
mov
add
addr16
icebp
test
aas
stc
add
popa
es
adc
add
ss
add
adc
ds
jae
mov
lock
cmp
push
flds
les
lret
pushf
vmread
fcmovnb
push
notb
rorb
mov
rclb
add
or
pop
add
fcoms
stc
pop
ret
push
mov
sbb
loop
dec
psllw
add
and
cmp
out
shll
lret
movsb
inc
add
hlt
push
loope
xchg
repz
or
cld
in
add
scas
pop
sbb
fwait
adc
testb
or
adc
insl
xor
jnp
push
dec
int3
sbb
jle
je
cmpsb
sbb
lds
lahf
mov
stos
daa
pop
pop
rclb
dec
scas
addb
into
loope
int3
scas
add
pop
fistps
xlat
add
mov
jne
jmp
fiaddl
fwait
movsb
test
add
mov
sbb
add
jp
add
cmp
mov
or
mov
inc
jle
ljmp
dec
je
add
adc
out
mov
sub
scas
in
cltd
dec
jge
cmp
push
dec
rcrb
inc
minps
enter
shlb
jecxz
sub
or
xchg
inc
add
mov
and
int
adc
pop
or
punpckhbw
imul
mov
loope
and
clc
jecxz
leave
popl
jno
inc
push
out
pop
add
rcll
shrb
sbb
cltd
addb
add
sbb
sbbl
jmp
bts
push
dec
add
imul
xor
lahf
pop
outsb
data16
cltd
fiadds
fisttpll
sub
insl
xchg
pop
sbb
aad
jecxz
push
out
popf
add
inc
iret
idivb
or
add
mov
add
mov
jmp
sahf
inc
sbb
dec
add
xor
jae
add
roll
lcall
into
mov
add
mov
add
push
call
push
mov
sub
test
push
pop
and
lahf
andl
lock
add
fs
xor
ret
or
cs
jo
add
inc
call
inc
icebp
jmp
jns
lcall
mov
pop
push
test
mov
nop
out
mov
add
pop
xchg
iret
mov
cmp
cmc
cmp
imul
daa
in
jns
add
add
or
sbbb
pop
je
sub
insl
or
adc
add
jge
dec
adc
jbe
push
rclb
cld
cmp
inc
in
add
test
int
cltd
inc
add
and
jo
cmp
rcrl
cli
dec
cmc
sub
dec
xchg
aas
add
xchg
add
adc
jl
negl
or
rcrb
arpl
mov
push
call
pop
add
sub
add
or
mov
mov
insl
push
adc
inc
loopne
aam
loope
cmp
dec
filds
scas
add
imul
cltd
or
add
pusha
add
loopne
cld
gs
mov
icebp
xlat
cs
add
pop
das
imul
rcr
repnz
adc
xchg
clc
jne
jne
popa
dec
hlt
xchg
fmul
lods
add
ficompl
call
mov
mov
flds
add
mov
pop
jne
push
inc
jecxz
and
orb
xchg
cmpsb
inc
dec
add
add
or
rolb
pop
dec
pop
jbe
xor
or
adc
outsb
jl
pushf
nop
mov
addr16
inc
test
sbb
xchg
add
mov
add
sbb
dec
or
adc
fistpl
pop
add
add
push
scas
xor
push
das
sbb
incl
dec
fadds
sub
test
lcall
mov
call
sbb
jmp
xor
sub
fdivl
popf
cli
add
add
mov
loop,pt
and
adc
in
jnp
add
xchg
out
mov
pop
fldcw
mov
pop
out
addb
shl
mov
js
pop
mov
das
inc
and
pop
dec
cmp
push
jae
nop
incl
int3
xor
js
and
shl
add
movsb
sbb
add
or
shll
es
cld
ljmp
lea
nop
add
es
andl
je
dec
test
add
or
daa
ljmp
rcr
and
rorl
lods
outsb
je
mov
sahf
into
sti
dec
and
sub
out
or
scas
dec
adc
jmp
fdivs
add
jl
and
sub
jmp
sbb
aad
jo
xlat
inc
add
int
hlt
fstpl
push
add
outsb
mov
and
xor
push
add
das
sub
test
mov
jno
add
lcall
jo
clc
jne
add
cmp
stos
cli
push
cmc
mov
add
xor
out
mov
dec
test
mov
addl
sub
dec
pop
imul
sbb
push
push
sbb
mov
add
mov
data16
push
cmp
xor
std
and
paddsb
andl
ret
add
std
loope
fdivr
jp
add
push
dec
mov
inc
stc
jle
repnz
push
fistpll
add
and
sbb
jp
out
push
add
push
jbe
ds
dec
adc
test
lds
mov
lahf
repnz
add
mov
xchg
test
push
shlb
or
pop
sarb
in
sub
insb
pop
stc
cwtl
jmp
fidivrs
in
inc
js
pop
push
sarb
add
ja
inc
repz
popa
add
out
cmp
add
push
or
add
xor
repz
sbb
test
push
fnstcw
ja
mov
cmpsl
add
inc
adc
das
add
jmp
rol
int
cmpsl
inc
pop
shr
test
push
mov
xor
icebp
in
mov
sub
add
cld
fwait
ret
inc
popl
mov
int3
divb
jbe
dec
or
cmp
xor
adc
jle
add
movsb
out
and
xchg
add
and
lea
or
adc
sub
or
mov
das
cmp
inc
sub
jns
roll
repz
scas
add
mov
testb
push
xchg
iret
mov
lsl
add
jmp
movsb
add
int
inc
push
sbb
gs
call
lock
jmp
sbb
testl
cmp
rclb
or
xor
test
das
pop
jnp
add
xor
push
push
lcall
fs
stc
jbe
int3
test
add
dec
arpl
in
inc
sub
movl
mov
push
fwait
cmpsl
cld
hlt
daa
add
jne
xchg
aam
xchg
in
cmp
add
fdivl
adcl
and
movsb
xchg
imul
sbb
add
fdivs
dec
fildll
in
cmp
xchg
push
mov
inc
mov
in
xchg
or
mov
loope
out
xchg
push
add
or
adc
std
iret
dec
cli
sbbl
mov
popa
cmp
pop
loope
cmp
add
loopne
add
test
outsl
lock
cs
add
xchg
mov
in
mov
sub
pop
inc
out
mov
add
shrl
loopne
add
mov
leave
add
sahf
xlat
test
cmp
add
sbb
dec
hlt
bound
add
cmpsl
fdiv
adc
mov
mov
addb
mov
fstl
inc
sbb
sub
mov
add
sar
dec
xchg
jp
adc
and
fiaddl
sub
inc
subl
add
loope
xor
in
add
jle
out
jp
add
jmp
addl
xor
xchg
daa
jne
add
clc
add
dec
xor
cmp
rorb
insl
lret
dec
add
xchg
mov
jno
dec
add
xchg
filds
gs
cmp
pop
xor
jns
push
sbb
add
stc
and
lcall
xchg
xor
das
push
xor
push
clc
pop
jb
sub
pop
cmp
add
cmp
mov
and
add
pop
mov
xchg
call
push
rclb
push
rolb
and
loope
xor
jbe
loop
dec
cmp
mov
movsl
out
sahf
mov
dec
xchg
and
sbbl
cli
sbb
mov
pushf
adc
out
repnz
jbe
inc
pop
gs
test
xor
in
loopne
cwtl
sysret
or
mov
fucom
pop
rcrl
pushf
dec
shrb
rolb
pop
add
aad
jnp
sbb
add
rcl
ljmp
fs
xchg
xchg
pushf
sub
jb
imul
add
push
push
xor
push
cmp
addb
pushf
add
adc
sub
lahf
mov
adc
loop
add
scas
out
aad
push
add
rcrl
mov
decb
mov
sbb
sbb
fcomp
add
mov
cmpsl
push
add
rcrl
outsl
sbb
xor
jne
inc
int
pop
or
fwait
jmp
mov
stos
add
jp
sbb
add
mov
jo
adc
pop
shl
inc
pop
mov
or
add
xchg
fsubp
mov
cmp
dec
and
mov
add
adc
inc
mov
pusha
mov
and
std
popa
adc
mov
ds
add
sbb
fiadds
and
inc
pop
dec
das
incb
jg
mov
add
xchg
imul
and
bound
sbbb
cltd
add
pop
inc
pop
sarb
add
mov
add
push
lahf
xchg
pop
add
aas
test
jno
lods
cltd
in
add
mov
call
fs
add
stos
or
adcl
movsb
ret
mov
dec
and
cmpsl
in
cmc
mov
add
or
jno
jmp
push
add
pop
mov
cmp
dec
cmp
add
stos
and
outsb
out
push
pop
fstpl
xchg
jb
add
scas
fbld
test
shll
push
jle
sub
add
lahf
dec
sbb
xor
add
jle
rcrl
jmp
push
sbb
jnp
shl
popf
add
cwtl
mov
push
call
add
adc
roll
jno
in
outsb
rorl
add
test
add
sbb
and
push
lret
push
lds
cmp
sub
mov
out
jne
ret
stos
sub
in
xchg
nop
jmp
add
xorl
aad
mov
lcall
decl
aad
and
add
test
cmp
push
jle
jnp
les
add
pop
mov
mov
rcll
or
add
pushf
mov
xchg
dec
stc
push
or
xor
outsb
sti
inc
xor
es
mov
inc
pop
add
mov
andb
cmp
add
jle
insl
test
pusha
jbe
call
mov
loop
test
fs
cmp
jg
loop
push
and
and
adc
pop
xchg
fwait
pop
scas
mov
add
add
sub
jle
lods
idivb
mov
push
addb
jno
daa
jg
out
fildl
int3
aaa
jnp
aas
repz
lods
or
into
xlat
push
les
cmp
dec
add
out
lods
fnstcw
scas
insb
jnp
sbbl
and
mov
xchg
add
jbe
mov
mov
repz
mov
sti
mov
cmp
inc
add
xlat
fdiv
mov
mov
test
aaa
or
cld
adc
cmp
add
cli
das
dec
mov
aam
or
add
sbb
cmpsb
setae
push
lret
andb
add
and
pop
outsl
add
mov
pop
xor
and
sbb
out
mov
pop
or
push
jb
gs
daa
mov
and
mov
out
test
cwtl
add
mov
or
pop
nop
sub
dec
cmp
aam
mov
inc
ret
pop
xlat
mov
ficoms
aam
loop
cli
mov
cmp
cmp
dec
inc
xchg
mov
call
notl
rcl
add
push
add
cmp
pop
inc
andl
in
pop
push
cmp
mov
dec
cmp
add
dec
call
xchg
jnp
mov
into
adc
xchg
inc
lea
add
mov
ret
ja
std
adc
in
add
in
xchg
loop
rorb
inc
cs
xchg
push
cmpl
sbb
pop
ljmp
push
pop
add
push
sub
in
add
mov
scas
lcall
arpl
popa
push
dec
sub
mov
test
fisubrs
or
insb
pop
xor
mov
js
flds
add
mov
or
cs
or
aaa
mov
add
push
sub
pop
pop
fcompl
imul
mov
sahf
lods
sbb
jge
inc
lret
xchg
outsl
pop
call
lods
cs
mov
ds
mov
roll
xchg
mov
sbb
loope,pt
add
push
pop
out
and
in
add
je
repz
jbe
push
add
int3
cmp
aas
adcb
push
cld
add
sub
lcall
mov
test
jg
insb
movsl
pop
push
lods
ds
cmpb
jo
testl
push
in
mov
stos
add
insb
stos
lods
inc
and
imul
cmpsb
adc
aad
add
ljmp
hlt
add
adc
add
pushf
pusha
test
cs
add
lods
insl
sub
dec
sbbl
icebp
into
lcall
xor
cmp
pop
dec
cld
cmp
ja
filds
pop
inc
stos
scas
movsl
xor
imul
add
bound
xchg
jno
mov
scas
outsl
out
out
inc
push
inc
cmc
xchg
pop
add
fimuls
idivb
imul
mov
scas
sub
fsubl
adc
mov
loopne
cli
mov
add
adc
push
sub
outsb
push
or
add
add
nop
mov
repz
or
in
sub
fisttpl
add
add
call
add
add
add
inc
sarl
sbb
cmp
inc
mov
mov
outsl
push
push
or
push
lea
lret
add
daa
outsb
jb
push
add
xchg
jne
xlat
fcom
int3
mov
cmc
inc
rolb
add
jge
js
mov
sub
faddl
add
cmp
aad
mov
test
in
call
mov
or
ja
add
or
cs
push
sbb
add
xor
add
es
add
aaa
jb
add
push
inc
or
fisubl
jmp
je
dec
lret
inc
mov
stc
pop
test
pop
dec
cmp
jecxz
xchg
call
rolb
inc
es
jns
jne
sbb
aad
pop
jl
xor
les
xchg
sahf
std
repnz
add
arpl
push
mov
pusha
mov
cmp
mov
andl
out
ss
fistpl
sub
pusha
out
fidivrs
lds
or
gs
dec
movsl
mov
jae
pop
add
pop
add
dec
pop
in
in
or
shll
nop
scas
add
das
or
insb
popa
sub
add
lret
imul
or
jno
test
fcmovb
insl
sub
fldt
mov
loopne
stos
shrb
hlt
test
mov
ficoml
adc
push
in
hlt
push
mov
mov
dec
repz
or
add
jmp
loopne
iret
popa
xchg
mov
add
clc
loopne
pop
add
and
add
dec
xor
cmp
cmp
mov
jecxz
xchg
stos
mov
je
pop
aas
ja
clc
add
add
lret
movsb
rolb
loope
pop
fnstenv
xchg
shld
imul
add
or
xchg
cmp
add
sub
lret
ret
sbb
subl
loopne
das
add
push
xchg
mov
jg
add
sbb
inc
scas
mov
in
ror
pop
adc
test
jl
lahf
lcall
dec
iret
push
sub
loope
xchg
stc
insl
sbb
cltd
ret
shl
enter
xorb
add
or
cmp
cli
jle
add
outsl
enter
or
rol
push
int3
sbbb
cmpl
inc
in
mov
xor
int3
mov
xchg
dec
add
scas
adc
jmp
sar
add
std
sahf
cmp
add
jns
out
insb
nop
pushf
add
add
mov
test
out
sbb
push
out
lds
xlat
aaa
jecxz
pop
iret
call
and
xchg
adc
add
sub
dec
daa
dec
pop
mov
add
rclb
lcall
add
ds
xorb
bound
loopne
cld
sub
mov
xor
add
aas
push
cmp
sub
add
mov
fisttpll
adc
sarl
xchg
mov
lock
mov
pshufw
arpl
in
mov
xchg
rolb
adc
dec
cwtl
lods
push
cmp
clc
sub
add
faddl
add
dec
xor
jge
add
jecxz
std
movsl
outsl
addb
jo
mov
add
sub
mov
sbb
xchg
jbe
testl
mov
xchg
add
add
mov
cli
inc
jnp
mov
jo
or
push
mov
arpl
xor
pop
xchg
jg
push
repnz
sbb
add
aam
test
repz
jb
fbstp
xor
fidivrl
mov
pop
or
cmp
nop
jp
popf
add
movsl
cwtl
pop
push
das
cs
inc
pop
dec
push
add
jns
add
cmc
or
pop
test
int
pop
or
pop
jl
ja
jecxz
sub
pop
inc
jl
lret
add
xor
in
push
jle
add
mov
cwtl
add
jge
pop
jmp
xchg
add
jno
dec
lds
mov
inc
xor
rclb
mov
push
mov
dec
mov
cmc
popa
imul
js
add
rcl
aam
dec
sbb
inc
jnp
fsts
in
mov
les
mov
cmp
rorl
fistpl
div
and
sub
mov
push
mov
jg
repz
add
dec
shrb
dec
cmp
jl
add
in
mov
push
xor
fldl
add
jp
mov
fstpt
jae
cmp
cmpb
jecxz
rcrb
or
pushl
mov
ds
mov
outsl
pop
mov
xor
outsb
dec
jne
push
inc
or
call
and
pop
jg
push
ljmp
sub
add
clc
dec
int3
pop
aaa
inc
push
mov
loopne
testb
rdseed
sub
cmpb
mov
jle
and
pushf
test
or
jecxz
jg
sbb
outsb
sub
xor
sbb
jns
inc
andb
and
mov
mov
insl
inc
or
cmpsl
mov
test
outsl
cmp
push
das
dec
lahf
push
pusha
stos
dec
add
out
decb
add
pushf
enter
lods
add
je
rorb
push
xor
cli
cmp
pop
lahf
pop
mov
sbb
call
push
dec
bound
mull
mov
sbbl
dec
pop
jmp
in
jle
mov
mov
mov
push
rcll
xchg
sbb
cmp
mov
add
std
mov
outsb
and
sbb
xlat
add
push
cmp
xor
subb
lcall
push
in
cmp
aad
add
sbb
push
popa
mov
loopne
push
add
mov
xchg
add
push
jge
pop
push
jns
test
dec
insb
jecxz
inc
xlat
ljmp
enter
add
nop
call
cmpsl
add
subb
add
mov
adc
push
add
ret
pop
mov
daa
fstpl
arpl
aaa
sbb
cld
nop
pop
pop
sub
mov
adc
cltd
jle
adcb
fadds
push
and
call
in
dec
add
jmp
sbb
add
add
and
dec
daa
sub
mov
mov
xor
sbb
or
js
push
pop
cmp
loopne
dec
lea
add
adc
cmp
and
xchg
imul
add
ljmp
jb
add
adc
aas
loop
pop
roll
xchg
jecxz
mov
js
jae
inc
add
pop
and
dec
test
pusha
mov
pop
sbb
xchg
dec
out
add
lods
or
cmp
js
xlat
idiv
lret
jecxz
push
add
fmul
or
jne
inc
in
outsb
in
add
pusha
push
in
push
fwait
add
aas
js
imul
mov
hlt
jecxz
jl
cmp
mov
ds
fstpl
cmpsb
add
inc
mov
aas
mov
lea
sbb
sbb
or
lods
mov
mov
inc
mov
add
mov
push
into
cmp
out
daa
push
lcall
xlat
mov
mov
pushf
fdiv
add
xchg
inc
pop
jp
movb
aaa
or
push
add
pop
add
insl
shlb
push
negl
mov
push
or
repnz
cltd
mov
mov
ljmp
out
stos
xchg
std
jl
mov
subb
add
and
or
mov
pop
mov
das
xor
pop
mov
xchg
inc
outsb
stos
shrb
dec
add
insl
sti
nop
rcrl
add
out
pop
or
jmp
rolb
out
in
and
insl
sbb
repz
add
cmp
fwait
outsb
lret
add
arpl
loope
jmp
inc
add
daa
cmp
pop
mov
add
pusha
cld
icebp
rolb
filds
adc
push
call
lock
mov
pop
fwait
or
xor
lods
lods
cmp
ljmp
popa
adc
mov
add
xor
std
in
aad
jno
movsb
cmp
pop
push
mov
cmp
add
pop
lea
out
add
dec
xchg
pop
dec
repnz
mov
faddl
inc
inc
inc
add
jbe
mov
dec
and
pusha
push
mov
cwtl
ljmp
cltd
and
mov
jno
pop
pop
mov
rcr
sub
dec
leave
addb
in
mov
add
stos
xchg
inc
pop
pusha
cmp
out
push
add
fcomi
mov
mov
push
cs
fcomps
jae
sbb
and
mov
jp
and
lret
add
sbb
stos
add
jp
jnp
pusha
aas
mov
xchg
ret
inc
aas
pop
nop
fs
inc
cmp
stc
adc
sti
jl
xchg
inc
out
add
push
push
orb
mov
int
cmpsl
imul
push
mov
ret
paddsb
sub
jnp
lock
fsubrs
add
sbb
shl
jle
cmpsl
sbb
jb
arpl
pop
inc
xor
dec
ret
loopne
add
add
push
add
int3
lret
paddd
popf
dec
mov
bnd
inc
add
inc
push
insl
add
int
pop
mov
lahf
jae
fwait
and
cltd
sbb
mov
xor
ss
popf
ds
dec
add
push
mov
add
jns
mov
mov
aas
xchg
loopne
xchg
mov
repnz
pop
insb
mov
mov
pop
pop
add
adc
xchg
rolb
dec
mov
scas
add
stos
add
jecxz
cmp
push
das
xchg
in
pop
pusha
js
jnp
icebp
add
adc
incb
mov
pop
jg
movsl
popw
push
jb
inc
in
mov
repnz
int
mov
push
and
add
dec
pop
and
adc
sbb
sub
in
add
push
xlat
mov
jmp
outsl
inc
sbbb
popf
mov
and
push
enter
out
ficoms
jne
xlat
jbe
movsl
push
and
bound
ret
adc
lea
ficomps
les
loop
sbb
add
mov
xor
fiaddl
sahf
xchg
mov
xchg
pop
mov
sbb
cld
push
add
jbe
adc
mov
lock
pop
aam
add
inc
add
push
mov
addb
cmp
cmp
pop
mov
hlt
sti
je
add
xchg
movsb
shrl
push
orl
ret
ds
test
adc
mov
inc
cltd
or
adc
add
xchg
lcall
fcmovnb
push
pushf
dec
mov
adc
and
lods
jge
jnp,pt
sbb
jle
inc
dec
lcall
mov
js
std
das
add
arpl
sbb
bound
in
and
sbb
push
outsb
orl
jne
js
cmp
sub
addb
xchg
sti
outsl
adc
sbb
add
lds
sbb
loopne
pop
mov
pushf
lret
clc
fwait
pop
hlt
cmp
pop
sahf
pop
jne
cmp
lret
sbb
add
stos
out
or
or
jg
cmpb
es
nop
inc
add
lahf
out
mov
mov
aad
adc
push
mov
cltd
jo
ret
sub
inc
add
adc
pop
push
enter
jg
xor
cmp
ja
add
rcrl
push
int3
into
add
mov
movsl
xchg
cwtl
adc
add
call
add
rorb
imul
arpl
xor
stc
add
shll
mov
xor
test
jecxz
lock
fnsave
pop
cmp
bound
aas
pop
add
mov
or
mov
cmp
movsb
sbb
lcall
xor
add
adc
mov
pushf
cmp
mov
out
daa
stc
pop
rcrb
test
lock
add
lods
repnz
fcomp
jge
es
fs
add
shll
add
mov
push
inc
xchg
add
fildll
xor
mov
sti
add
xor
sbb
lods
lahf
xchg
jge
loopne
and
ljmp
dec
roll
mov
scas
nop
xchg
pop
and
add
fists
fdivs
enter
jecxz
mov
das
les
inc
push
movsb
pop
jle
add
xchg
xchg
fldl
xorl
and
dec
add
lahf
dec
and
inc
add
dec
push
mov
xchg
negb
xor
or
jl
cs
or
mov
sbb
aas
shl
iret
test
imul
mov
and
adc
cmp
pushf
pop
loope
andl
inc
jle
push
ror
loop
mov
int3
icebp
add
cmp
jo
adc
push
loope
fiaddl
xchg
enter
scas
mov
arpl
addb
add
push
movsb
les
add
fs
fdivl
ljmp
mov
loop
add
xor
outsb
cwtl
lea
repz
fnsave
add
sub
push
ljmp
ja
stos
iret
add
push
push
imulb
cwtl
or
fsubr
flds
push
jl
icebp
dec
dec
jne
pop
jb
cmp
and
sub
imul
or
dec
mov
stos
add
adc
mov
add
cmp
add
lods
stos
outsl
cmp
and
cmp
push
mov
es
add
add
mov
prefetchnta
out
mov
cltd
xchg
pop
shl
mov
mov
push
xor
pusha
ljmp
cmp
scas
cli
mov
ljmp
fwait
add
into
repz
mov
and
push
dec
xchg
add
push
fldcw
lcall
pop
xchg
mov
sbb
add
fistpll
mov
add
mov
sar
gs
mulb
aam
xchg
test
fisubl
pop
add
mov
pop
mov
mov
jne
mov
pop
add
ljmp
pushf
popf
xor
inc
xor
test
or
xor
mov
push
movsb
jb
cmp
add
popf
lea
scas
flds
and
pop
dec
and
cmp
mov
sub
mov
loopne
nop
mov
add
sbb
ja
cmp
cli
inc
xor
mov
aam
mov
ja
push
sub
add
aam
shrb
pop
mov
fcmovnbe
inc
add
pop
cwtl
lods
scas
xor
aad
rorl
pop
sbb
mov
inc
inc
ja
lcall
jg
cld
out
add
or
mov
repz
and
rcrl
sti
cld
adc
pusha
mov
cmp
jo
add
pop
add
mov
out
cwtl
mov
addl
sub
pop
pushf
addr16
add
inc
addb
and
mov
adc
push
in
inc
pop
sbb
rorl
add
shll
addr16
leave
loopne
lea
cmc
lods
dec
cld
fwait
dec
cld
jbe
add
insb
fidivrs
jp
jge
pop
fcoms
xchg
shll
cmp
testb
mov
movb
shlb
faddl
in
mov
scas
mov
add
enter
in
clc
xchg
ret
sub
lcall
add
xchg
pop
push
jbe
add
aad
pusha
icebp
and
add
mov
ror
add
fstpt
jae
sub
jecxz
cmpsb
push
inc
add
fwait
std
cmp
dec
inc
add
je
cmp
mov
xchg
dec
pop
jb
add
jmp
pushf
inc
sbb
in
daa
movsl
pop
mov
cld
pop
cmpsl
inc
jne
lret
mov
sbb
out
ds
mov
cs
add
inc
mov
jo
data16
cmp
test
mov
addb
getsec
cmpsl
inc
sahf
or
add
dec
xchg
lret
jno
shl
addr16
adc
add
mov
jecxz
jno
sbb
rcrb
test
psubsw
nop
andl
pop
jbe
dec
jns
adc
pop
sbb
and
mov
scas
push
mov
cmpsb
or
push
fwait
js
lea
insl
jecxz
add
mov
sbb
mov
aas
sbb
mov
xor
add
inc
lea
push
lcall
cmp
and
adc
out
popa
push
jbe
add
fwait
sub
add
lea
add
movsl
or
insl
mov
fadds
jns
adc
mov
outsl
dec
xchg
pop
mov
adc
bound
je
ja
add
je
scas
push
shrb
jbe
fcoml
jecxz
sahf
ljmp
lods
inc
xchg
addr16
ja
sbb
cmp
lahf
push
cmp
push
cwtl
out
cmp
sbb
adc
dec
enter
es
jb
sub
add
pusha
lcall
sbb
sub
loop
jae
or
sub
outsb
mov
cmpsb
dec
pop
loopne
ljmp
sub
iret
dec
mov
fs
outsl
pop
lcall
hlt
mov
push
and
pusha
sub
push
movsb
dec
and
int
ds
jb
pop
jmp
dec
xor
push
inc
sbb
jge
push
imulb
mov
je
int
jl
stos
add
and
lahf
xchg
roll
xchg
add
push
and
roll
mov
ret
dec
mov
aad
mov
mov
shld
push
in
repz
outsb
xor
loope
or
lret
cltd
mov
movsl
push
rclb
and
cli
pop
aam
call
pop
fiaddl
inc
jae
in
testb
int3
or
mov
xchg
push
fildl
stos
jnp
xor
mov
add
stc
pop
pop
add
pop
insb
cmc
xor
adc
xorb
cmpsl
or
add
and
pop
jecxz
xor
dec
xor
in
pushf
psubd
sbbl
roll
out
sbb
push
orb
test
outsb
pop
jnp
jb
xchg
in
add
jecxz
test
subl
sbb
outsl
in
cmc
inc
das
xor
ljmp
gs
fdivs
ret
fldcw
push
in
add
sbb
xchg
cmpsb
add
push
fmull
or
pop
push
mov
enter
xchg
xor
push
xchg
scas
aad
fmull
pop
jg
mov
add
movsb
cmp
sbb
sar
scas
lods
inc
mov
mov
fs
je
add
push
pop
stos
and
into
aas
xchg
pop
icebp
sarb
std
push
jne
aaa
lock
sub
add
inc
test
xor
repz
shl
inc
jg
das
push
and
adc
insl
sbb
or
xor
outsl
in
add
push
jmp
hlt
sar
push
add
das
andb
xchg
test
or
mov
js
cmp
add
mov
or
dec
jle
fbstp
and
js
incl
xor
mov
call
jne
lods
loope
add
movsb
push
pop
or
add
pop
sbb
lret
mov
in
enter
adc
jmp
push
inc
mov
mov
pop
cmp
lea
pushf
add
mov
sarb
movsb
mov
cmc
adc
outsb
daa
lahf
pop
aaa
add
iret
outsl
ljmp
shrl
in
enter
fs
mov
fwait
mov
xchg
mov
xor
bound
popf
ljmp
mov
dec
lcall
or
push
and
or
and
aaa
shl
test
mov
push
addb
sbb
add
je
pop
push
addr16
arpl
std
aas
dec
test
push
add
out
xor
leave
cmpsb
mov
loope
or
push
fwait
pop
xor
fldt
in
inc
xlat
add
out
pop
push
mov
in
add
mov
add
cmp
push
add
or
inc
pusha
insl
lret
xchg
das
out
add
mov
ret
enter
inc
jge
setle
dec
cmp
fadds
sub
lcall
jp
ss
js
outsb
dec
lock
add
inc
sub
lret
xor
out
cmpsl
push
jmp
ret
out
pop
cld
sbb
and
cld
insl
pop
addr16
cwtl
push
push
xchg
ss
outsl
add
mov
jbe
jp
jno
add
jmp
lahf
insl
mov
loopne
add
je
and
stc
test
pop
pop
mov
pop
mov
loopne
enter
add
dec
stos
lods
add
fs
lcall
aam
cmp
add
cli
and
or
cmp
add
fcmovbe
fadds
hlt
inc
daa
cmp
popf
add
ret
mov
xor
add
add
or
rcrl
jl
mov
add
je
push
jb
add
push
mov
or
and
xor
dec
cmc
leave
jns
add
jge
imul
adc
or
call
pop
dec
imul
mov
mov
insl
mov
or
cltd
jo
and
pop
add
jne
dec
add
in
adc
in
mov
add
aas
loop
xchg
mov
add
int3
cltd
xchg
sub
adc
out
je
into
add
xchg
mov
sub
pop
loopne
xor
mov
cmp
add
mov
mul
inc
orl
jmp
out
mov
adc
sbb
mov
pop
add
pop
sub
add
dec
retw
pop
mov
fwait
scas
and
push
cltd
add
pop
fs
cmpsl
mov
lock
inc
pop
jp
cmp
cmp
mov
cmp
and
add
rorb
add
test
inc
or
aas
add
xor
into
mov
push
sbb
subb
dec
xor
jns
xchg
push
cli
mov
mul
mov
add
rclb
gs
and
shlb
xor
mov
cmp
sbbl
jne
add
mov
jle
add
adc
pop
pop
dec
out
test
add
mov
xchg
and
mov
dec
adc
inc
call
jp
add
jecxz
pusha
add
cld
cmpsb
add
adc
in
pop
cmp
js
int
mov
mov
sahf
jmp
xlat
pop
jg
add
sbb
add
je
mov
push
or
pop
add
cwtl
add
loope
sbb
adc
repz
xchg
mov
or
adc
rcrl
arpl
and
mov
scas
je
cmp
adc
add
into
insb
mov
sahf
out
ficoms
sbb
xchg
add
sbb
adc
add
out
inc
sbb
adc
or
mov
loopne
pop
add
loope
mov
mov
or
push
sbb
aas
mov
addr16
addr16
subl
fldenv
add
imul
add
cmpsl
mov
xchg
insb
add
mov
dec
add
cmp
pop
jb
cmp
add
ret
outsl
pop
mov
mov
and
out
fistps
sbb
add
pop
adc
aaa
cmp
jp
pop
clc
sub
add
test
add
sbb
push
add
dec
push
jnp
sti
lea
test
xchg
inc
adc
jecxz
mov
addl
mov
dec
enter
aaa
aam
pop
add
sub
xchg
fs
cmp
inc
sbb
mov
sub
sbb
cmc
inc
push
inc
push
stos
insl
cli
leave
pop
je
adc
xor
add
aad
or
inc
std
jbe
jo
add
fistpll
pop
sbb
fwait
sub
push
nop
sbb
cld
jno
jnp
add
pusha
in
dec
pop
lcall
push
mov
sbb
jne
ret
push
and
adc
jle
jle
jl
sbb
into
and
aaa
test
sub
scas
or
mov
adc
push
lds
cmp
adc
add
sub
sti
add
ret
dec
inc
stos
loope
sbb
mov
pop
sub
add
jns
pop
add
gs
sub
out
add
mov
add
iret
jne
std
sar
add
sub
cmp
mov
cmp
je
mov
sub
push
icebp
prefetch
test
daa
add
test
jg
push
add
sub
aas
addr16
shr
add
jle
mov
jge
imul
les
jmp
pop
shll
xor
loope
add
mov
or
mov
add
jp
inc
ret
add
test
call
mov
lock
out
add
data16
lcall
xor
rcrb
pop
dec
call
mov
pop
call
lock
sbb
popl
inc
repnz
jae
sub
jnp
rorl
mov
test
outsb
mov
dec
addr16
cmp
xor
mov
ret
dec
loop
add
imul
hlt
push
data16
loopne
sbb
sbb
bound
add
mov
mov
icebp
call
outsb
inc
cmp
std
add
jo
and
inc
call
cmp
and
lret
std
pop
sar
testl
xchg
lods
in
lock
insl
push
add
xor
sahf
bnd
shlb
outsb
add
rolb
mov
sub
mov
jle
ret
dec
add
push
and
mov
shlb
lock
bound
mov
les
rcrb
cwtl
lock
add
jne
sub
cmp
push
and
add
repz
add
lret
test
ret
fnstenv
add
mov
movsb
mov
xor
mov
ljmp
shrl
ljmp
std
imul
pop
sub
jo
xadd
jle
pop
cmp
and
mov
cmp
ljmp
fmuls
add
push
je
sub
sbb
and
int
mov
jne
pusha
movsb
mov
pop
cmpsl
fistpl
in
std
xchg
mov
int
in
jg
pusha
fildl
adc
imul
outsb
and
inc
dec
dec
add
push
xor
jmp
out
lea
repnz
adc
mov
fcomps
divb
adc
and
repnz
jp
pusha
or
loopne
fistps
jge
repz
add
ja
pop
loop
rdmsr
fwait
pop
loopne,pt
push
or
roll
lahf
cmp
fdivl
xor
ret
add
clc
push
cld
xor
sbb
xor
mov
push
push
repnz
mov
mov
outsb
imul
mov
and
xchg
adc
cmpb
push
add
rorb
mov
xchg
fisubl
js
add
sub
add
out
dec
dec
mov
adc
push
xor
push
mov
push
sub
pop
sti
divb
jnp
outsb
lea
pop
mov
loopne
dec
sahf
add
mov
jp
push
lcall
and
sbb
jle
mov
add
sub
inc
push
sahf
mov
dec
jp
mov
out
jge
cs
dec
jecxz
pusha
out
loope
sub
add
std
push
add
negb
pop
lods
pop
add
fs
aas
cmp
xchg
jbe
and
mov
dec
shlb
pop
adc
int
mov
ret
jbe
push
push
add
in
fsub
push
jmp
sbb
adc
fs
shlb
mov
push
bound
push
mov
add
add
insl
xor
aad
sub
mov
lret
pop
mov
mov
mov
loop
adc
mov
lea
stc
push
cmp
lahf
xor
cs
fldl
jmp
inc
das
push
mov
int
les
sbb
mov
mov
pop
in
mov
sysenter
and
and
adc
add
xchg
xchg
mov
dec
out
gs
repnz
mov
sub
push
inc
mov
sbb
inc
pop
or
add
pop
and
pop
ja
insl
hlt
mov
mov
sahf
pop
rolb
dec
mov
mov
mov
repz
je
stc
sub
or
pop
mov
iret
les
dec
cltd
push
in
int
ret
xchg
loop
push
inc
shl
add
mov
jbe
ljmp
das
repz
push
cmp
add
jmp
sahf
outsl
lret
inc
sub
mov
js
int
es
cltd
out
add
xor
add
lcall
aas
mov
lods
add
add
adcl
pushf
jbe
xor
cmp
jge
in
or
push
imul
movsb
pusha
push
aas
mov
add
and
jae
pop
je
pop
push
add
mov
sbb
sti
repnz
ja
shll
add
and
jg
xor
jl
pop
cmp
ror
int
sbb
icebp
push
popaw
aas
pop
out
adc
loope
push
xor
subb
xchg
sbb
mov
push
cmpsl
mov
mov
pop
out
and
push
add
xchg
test
mov
pop
ficomps
mov
das
or
loopne
add
ds
pusha
mov
cmp
lcall
das
ret
ss
lahf
fisttpl
cmpsb
add
pusha
pop
js
sbb
cltd
cwtl
jbe
jb
into
or
push
inc
mov
mov
or
call
mov
adc
mov
xchg
orb
pushf
xor
adc
xchg
cmp
popw
dec
add
lds
mov
mov
dec
ffree
addr16
xchg
or
sti
or
mov
daa
roll
add
pushf
and
dec
lret
or
xchg
mov
dec
add
cltd
inc
jo
or
push
lahf
pop
out
push
pop
ja
add
pop
jns,pt
ss
add
mov
popa
xchg
cmp
test
mov
or
add
test
stos
in
shlb
lcall
cltd
ret
lods
add
je
fnstsw
leave
aam
pop
add
mov
add
dec
adc
cmp
test
pop
ss
cmpsl
hlt
add
pop
sbb
out
or
push
dec
pop
outsb
aas
inc
dec
jmp
in
jne
fnsave
into
push
pop
in
cltd
cwtl
shlb
add
fstps
xor
sbb
dec
ljmp
js
cs
push
scas
add
pop
lods
xorl
xor
jb
xor
stc
add
aas
imul
sub
or
js
add
scas
push
sti
stos
leave
mov
out
mov
lret
cmp
mov
mov
fildl
pushl
insb
add
jns
ret
jg
push
jge
add
mov
and
add
cmp
outsb
movsl
aad
fidivrs
movsb
and
outsl
ret
adc
clc
or
push
fiaddl
push
test
inc
ja
aas
movsl
mov
mov
adc
jnp
jle
push
in
out
aas
jmp
add
and
stos
sarl
cmp
dec
lock
add
sbb
cmp
pop
xchg
std
add
xor
cmp
fnstsw
pop
test
and
add
mov
insb
add
xor
iret
hlt
dec
mov
add
aam
jg
fbstp
sub
outsl
lock
psubsb
xchg
or
fnstenv
jnp
add
adc
loop
add
lret
pop
out
out
pop
add
and
xor
pop
gs
fs
add
push
test
mov
jl
lahf
popl
xor
adc
arpl
js
add
orb
push
mov
or
push
sbb
add
mov
mov
sahf
mov
lea
jge
imul
insl
mov
popa
fucomi
pushf
incb
out
sbb
push
add
loopne
sub
jmp
mov
cmp
or
mov
xor
test
addb
sahf
imul
shll
pop
add
dec
jbe
incb
and
cltd
xor
jnp
add
fdivp
cmovns
ds
in
repnz
frstor
icebp
adc
adc
add
push
add
xchg
xlat
loope
les
into
dec
push
adcb
dec
xchg
lcall
in
jns
fdivs
pusha
andps
cmp
lods
mov
dec
mov
add
mov
pop
push
pop
mov
sub
xchg
dec
insb
xor
les
add
push
inc
xchg
jnp
test
lcall
or
jl
add
inc
adc
mov
clc
popa
jl
cmp
adc
lock
cmc
imulb
pop
jb
pushfw
push
jge
rorb
fs
inc
ss
filds
cmpsb
loopne
mov
scas
aad
iret
and
rcr
mov
adc
or
inc
hlt
xchg
shl
add
push
scas
sbb
jge
add
adc
xchg
pop
mov
pop
rcll
add
lcall
icebp
dec
into
inc
imul
add
lahf
test
in
into
add
in
mov
lock
dec
stos
adc
add
add
sbb
add
xor
fldt
ret
sahf
and
inc
add
xlat
pop
inc
jp
mov
push
pop
jmp
hlt
dec
inc
out
stos
lods
pop
xlat
xchg
rolb
mov
add
out
or
cmpsb
xchg
or
add
push
push
ss
sbb
sti
and
cmpb
pop
or
data16
ljmp
and
push
shl
pop
sub
ret
add
enter
mov
inc
dec
subl
fdivrp
xorb
cmp
push
and
mov
mov
loopne
add
and
das
lea
test
repz
adc
add
aad
add
xchg
insl
sti
xchg
cmp
push
mov
pop
and
cmp
sbb
pusha
push
xchg
jecxz
mov
adcb
out
adc
push
test
gs
dec
ss
sub
add
lcall
add
adc
mov
orl
xchg
sub
out
push
jge
cs
sub
repnz
lods
pop
insl
gs
mov
mov
add
outsb
sub
mov
dec
mov
mov
jo
sub
mov
add
cltd
xchg
mov
add
test
in
pop
sbb
pop
bound
and
sub
jp
push
xor
cmc
inc
in
movsl
out
push
push
add
testb
imul
push
pop
dec
add
mov
outsl
push
lret
or
and
fimuls
inc
inc
sbb
add
and
mov
andl
test
push
mov
add
lods
popf
je
or
sti
jo
testl
jbe
mov
push
fldl
aad
sbb
cmp
lahf
pusha
add
mov
loope
lods
mov
xor
push
mov
ds
adc
popa
enter
ljmp
outsl
dec
xor
jo
cmp
mov
and
shlb
mov
mov
push
hlt
inc
add
and
or
pop
xchg
push
mov
mov
test
add
mov
xchg
dec
xchg
push
add
mov
orl
or
xchg
inc
icebp
push
lock
mov
imul
cmp
add
xor
xor
test
pop
scas
jmp
cmc
in
dec
add
fst
into
out
pop
cli
add
push
and
and
mov
mov
hlt
pushf
loopne
add
adc
mov
mov
fstpt
cld
pop
rcrb
push
mov
rcrb
lods
dec
rclb
push
xchg
arpl
clc
sbb
xchg
cwtl
add
xchg
shrb
addl
mov
ss
call
js
hlt
jo
insl
pop
xchg
mov
ds
leave
aaa
or
cs
adc
bound
jecxz
cmp
pop
mov
stos
mov
and
and
push
fidivrl
mov
mov
or
jg
loop
out
add
aam
mov
and
add
rclb
jns,pt
add
daa
cmp
fcmovnu
or
ss
ret
fldl
cmp
jns
cmp
add
jae
jmp
adc
dec
mov
pop
sti
outsl
cltd
or
mov
test
ret
pop
jecxz
data16
cmp
mov
movsl
mov
daa
add
test
outsb
inc
add
mov
add
inc
test
add
push
push
jle
fiaddl
fdivrl
clc
add
inc
adc
pop
and
outsb
cmpsb
mov
add
aam
notl
push
add
shll
add
fs
mov
add
xor
add
popf
mov
dec
add
adc
lea
movl
add
and
pop
add
pushf
or
cmp
add
xchg
outsl
cwtl
xchg
cmp
clc
sbb
sub
test
shrb
and
add
sar
jg
test
imul
test
mov
lds
jp
add
nop
fmul
lods
cmp
add
mov
nop
xchg
jl
pop
test
inc
mov
mov
addb
lcall
add
sbb
xor
add
enter
ljmp
push
sbb
lea
cmpsb
sub
mov
pusha
call
sbb
mov
add
push
push
inc
clc
sbb
push
mov
xchg
add
dec
add
aas
enter
sbbb
test
pop
movl
add
add
xor
sti
shlb
inc
add
iret
jbe
mov
aas
add
push
cwtl
add
popf
dec
add
ret
xchg
jg
rcrb
mov
divb
jnp
popa
push
orl
lock
ja
add
inc
mov
xchg
nop
repz
cmp
mov
push
and
lock
mov
lcall
and
add
xor
push
dec
push
mov
add
pop
and
inc
imul
add
cmp
fldcw
fdiv
test
adc
mov
popf
loope
shrb
out
lret
rcr
fs
jle
add
adc
mov
add
mov
push
aaa
add
rcll
cli
add
aas
orl
add
dec
mov
pop
lock
in
rcll
add
xchg
fcompl
xor
ja
add
data16
or
andb
push
or
insl
dec
scas
testb
pop
sbb
and
add
mov
jge
mov
mov
test
mov
lock
testl
add
lods
inc
add
adc
cmc
aad
hlt
mov
add
das
ja
add
xchg
in
in
repnz
lds
scas
mov
add
dec
xchg
add
or
outsb
mov
add
shlb
sub
adc
add
outsb
cwtl
and
add
cmp
shrl
mov
and
imul
push
call
outsb
jb
aaa
xchg
fnstcw
adc
and
inc
add
mov
shl
dec
int3
mov
jge
sub
cmp
or
or
jo
test
dec
jge
dec
das
mov
xor
xchg
sbb
cwtl
jle
loope
sti
add
sub
out
sbb
push
insb
sbb
add
or
cmp
sahf
mov
sub
jge
mov
xlat
clc
test
cmp
adcb
or
filds
add
and
mov
mov
std
stc
mov
pusha
nop
rcl
pop
add
int3
push
popf
add
sub
xor
add
out
sub
hlt
and
add
dec
pop
test
jge
cmp
pop
mov
xor
xchg
out
sbb
and
cld
adcl
movsl
mov
pop
cmp
cmp
add
fisttps
add
repnz
cmpl
outsl
xlat
insb
daa
sti
pop
emms
add
mov
clc
dec
stc
lock
movsl
cmp
pop
fbstp
add
pop
mov
mov
xor
push
pop
repz
and
pop
mov
add
jge
lods
es
add
lret
fisubs
add
int
aaa
pusha
adc
add
mov
andb
inc
sbb
sbb
idivb
jge
add
std
xor
push
lret
int
pop
mov
pop
add
scas
cwtl
insl
add
push
shr
pop
xchg
pop
shrl
jns
test
addb
lahf
add
push
push
inc
test
test
insl
push
add
jnp
and
xor
dec
add
test
test
add
sbb
mov
fs
cmc
jge
dec
lods
dec
inc
or
xchg
cmp
pop
mov
cmp
sub
incl
addb
push
aam
leave
inc
inc
lahf
push
jge
out
push
lds
sahf
ja
add
xchg
lods
cmp
jl
add
addr16
mov
adc
data16
pop
mov
mov
or
pop
or
inc
bound
call
mov
mov
add
jne
lcall
inc
stos
clc
enter
add
mov
fdivs
or
addl
sub
cltd
adc
add
push
testl
inc
outsb
cmpsl
mov
inc
add
and
add
mov
xchg
xchg
add
inc
repnz
mov
mov
xchg
mov
inc
push
add
dec
out
add
and
push
fisttpl
loopne
xchg
xor
mov
pop
shl
xchg
add
addb
lock
or
cmp
add
loope
mov
add
sysexit
xor
icebp
mov
das
xchg
movsb
int3
inc
stos
cmc
add
inc
lahf
cmp
add
pop
xchg
xchg
pop
and
and
fldenv
add
cmp
outsb
stos
push
push
and
lods
add
cli
dec
or
xchg
out
add
jns
in
sbb
add
xchg
repz
sub
add
adc
cmp
xor
and
push
pop
inc
shrb
dec
cwtl
add
clc
je
pop
test
loopne
popf
ret
inc
add
arpl
jmp
add
pushf
or
or
sbbl
or
cwtl
and
dec
inc
mov
in
rclb
add
ret
mov
jp
cmp
addb
pop
pop
aam
aas
add
mov
sub
cld
out
sbb
fists
mov
add
dec
outsb
bound
pop
cmp
or
push
dec
pop
aad
sbb
mov
mov
jnp
and
dec
shll
xchg
add
testb
leave
sbb
iret
adc
fwait
dec
cmpl
mov
add
add
push
pop
and
push
sub
rcl
outsl
mov
and
mov
mov
dec
mov
pusha
dec
mov
in
and
adc
mov
push
add
jg
lret
insb
or
inc
shlb
movsb
mov
std
addb
cmpsb
adc
in
mov
lods
int3
cmp
pop
cmp
rcrb
xchg
insb
jnp
push
ret
push
adc
pop
dec
pusha
mov
mov
adc
imul
add
lea
mov
dec
lcall
sub
out
ret
rep
add
sbb
fdivrl
push
mov
fsub
sub
ljmp
fiaddl
dec
aam
scas
lock
add
mov
cmp
add
add
add
inc
pop
inc
cmp
push
std
jg
lock
push
xchg
arpl
xor
add
jbe
adc
push
pop
fdivrl
sar
test
xor
cltd
cmpl
jo
and
add
das
sub
leave
mov
aam
in
frstor
push
add
inc
idivl
sbb
push
mov
mov
aaa
gs
sub
mov
daa
mov
add
fisubrl
add
push
push
pop
mov
aaa
xchg
mov
clc
out
add
xor
sub
shl
or
pop
jp
inc
xchg
pop
in
jle
pop
pop
sbb
pop
pop
add
pop
mov
adc
sub
ffree
push
cmpsb
push
or
sarb
clc
dec
insb
mov
mov
push
dec
call
xchg
sbb
add
outsb
out
enter
push
rcr
in
rcrl
jecxz
mov
jl
pop
pop
in
fucom
and
mov
xor
jo
loop
mov
cld
add
push
cmp
jb
daa
loop
mov
js
out
mov
lds
fstpl
stc
test
int3
jle
repz
loop
dec
stos
roll
adc
fidivrs
sbbl
fwait
mov
fdivs
and
rcll
dec
clc
mov
dec
push
jmp
lock
xchg
lea
add
sub
ljmp
lret
ret
pop
push
xchg
sahf
and
add
dec
imull
jnp
aam
dec
jo
add
enter
loope
mov
push
or
ss
out
cmpb
add
sbb
mov
ss
lahf
add
jo
frstor
push
unpcklps
loopne
push
xchg
gs
imul
mov
push
in
add
cmp
add
mov
add
adc
mov
push
dec
mov
and
xchg
add
and
mov
push
arpl
in
or
mov
pop
adc
cmp
loopne
pop
fs
call
jbe
rcrb
inc
xchg
cmp
je
lcall
dec
pop
xor
pop
leave
mov
fcmovb
call
pop
add
rol
sarl
mov
out
add
mov
mov
jbe
inc
cmpsl
add
pop
insb
outsl
ret
xchg
add
lds
push
cltd
cmp
jno
add
mov
jne
jnp
mov
jae
mov
xchg
pop
mov
hlt
sub
add
ds
cmc
std
mov
add
sub
pop
ljmp
add
mov
addr16
mov
dec
clc
das
pop
jns
jo
mov
or
push
daa
inc
xchg
xchg
push
cmp
add
out
pop
push
xchg
scas
add
mov
jg
and
shlb
fcoms
push
add
push
daa
nop
rorl
lock
in
dec
add
flds
add
jle
nop
int3
add
rorb
lret
sar
rcrl
add
aas
std
xor
push
pop
je
sub
pop
iret
jecxz
cmp
push
stos
xor
push
sub
add
inc
call
add
or
das
scas
mov
add
xchg
sbb
enter
sub
sub
pop
popf
inc
fsubl
dec
leave
adc
lds
xchg
push
sahf
movsb
push
cwtl
mov
iret
nop
push
xor
mov
loop
loopne
sbb
sub
arpl
out
add
pop
inc
sub
or
sub
shrb
in
add
mov
xor
out
movb
pop
cmp
add
je
dec
add
enter
mov
and
mov
inc
aam
andl
push
test
mov
mov
inc
adc
fs
or
xchg
jnp
fiaddl
cmp
sub
cmp
aam
shlb
jg
add
dec
push
shll
mov
int3
bound
jg
or
popf
ret
jle
add
mov
jno
push
sbbl
add
out
jmp
cmp
loopne
jp
sti
push
xor
cmpl
lock
sub
xchg
mov
or
add
inc
lds
adc
fistpll
shrl
add
out
outsb
popf
fmulp
mov
popa
mov
data16
add
arpl
int
sahf
testl
mov
pop
lods
dec
test
sbbb
out
sahf
jae
cmc
jne
push
jecxz
add
les
loopne
adc
xchg
popf
cltd
es
jo
lcall
xchg
pop
jecxz
cmc
mov
inc
add
sbb
add
add
hlt
mov
add
imul
jg
jnp
pop
add
mov
out
add
pop
loope
mov
add
hlt
pop
cwtl
mov
stos
fistl
xor
das
add
xchg
xor
xor
jns
add
cmp
xchg
ds
incl
jne
rolb
xor
call
ss
or
ds
mov
pop
sbbb
inc
mov
popf
adc
pop
cli
sub
mov
xchg
xchg
cmp
cmpsb
add
adc
arpl
fsubs
stos
add
repz
add
mov
movsb
add
pop
sarl
sub
pop
clc
pop
push
rcrb
repz
pop
insl
xlat
int3
jo
and
sub
jmp
sub
iret
cmpsb
adc
add
rorb
cmc
aam
lock
loope
test
mov
rol
inc
imul
outsl
ljmp
push
test
inc
mov
add
push
ja
lock
adc
add
sbbb
adc
out
add
push
ljmp
jl
adc
js
bt
daa
push
gs
nop
sahf
cmpsb
push
push
xor
sbb
inc
test
pop
enter
sbb
push
add
cmpb
xchg
add
or
add
add
xor
add
daa
xlat
push
push
sahf
push
add
add
add
xchg
clc
outsl
das
jnp
js
ja
std
push
mov
jle
test
jg
cmpb
add
adc
jne
lods
clc
ja
les
push
push
cmp
aad
or
scas
stos
cwtl
movsl
cmp
mov
and
sti
fstl
mov
aas
mov
and
and
and
add
mov
mov
mov
xchg
lahf
sbb
dec
add
mov
jg
into
push
sbb
mov
mov
dec
dec
jmp
inc
cmp
mov
sbb
inc
lret
test
push
add
inc
pushf
xchg
js
sbb
push
rorl
add
cmp
sbb
and
add
xor
cmc
sarl
hlt
add
add
mov
add
cmp
and
test
lods
loopne
fisubrl
add
hlt
cmc
add
adc
dec
add
in
negb
scas
cmp
sbb
cmp
fmull
addr16
sub
lods
xchg
add
mov
mul
loopne
push
add
mov
push
push
out
xchg
dec
lods
adc
out
or
mov
sbb
pop
insl
or
or
fldln2
pop
and
data16
xchg
and
mov
pop
xchg
inc
push
cmpb
add
xor
inc
and
add
add
out
mov
dec
faddl
push
rorb
cvtps2pd
mov
push
inc
test
mov
lret
ljmp
mov
inc
jg
push
pop
in
add
push
aam
cmp
repnz
out
repz
test
into
popf
imul
adc
pop
gs
aad
push
sarb
push
add
mov
jb
dec
add
add
clc
sub
pusha
adcl
test
adc
cwtl
push
push
pop
pop
sbb
add
mov
daa
repz
nop
cwtl
add
es
add
xchg
daa
xor
cmp
lret
adc
dec
jle
push
mov
movsl
lret
xchg
sti
jp
push
cmp
mov
fwait
testb
fcomps
sub
mov
xchg
pop
or
push
pushf
add
mov
add
and
iret
pop
xchg
mov
push
nop
xchg
sub
mov
xor
mov
outsl
pushf
out
iret
stos
test
in
or
add
adc
or
mov
mov
or
sbb
bound
inc
ret
xchg
aad
andl
sub
and
add
lock
ja
int3
mov
enter
idivb
add
cltd
add
test
lahf
add
faddl
add
bound
push
pop
and
das
add
ljmp
push
jg
sbb
add
pushf
and
test
addl
pop
das
or
maxps
pop
cltd
neg
ss
filds
add
sbb
and
add
lds
faddl
in
js
cld
sub
dec
add
cmp
cltd
add
or
shl
dec
cmp
jns
out
lock
add
mov
push
cmp
dec
dec
into
sbb
jle
xor
add
fwait
dec
add
and
test
sub
imul
mov
fs
xor
psubusw
call
add
dec
lock
xchg
lock
xor
inc
sbb
mov
popa
pop
lock
xchg
or
cmc
add
cld
dec
add
pop
xchg
hlt
pushf
outsb
add
mov
xor
loope
jle
stos
jge
pop
int3
sbbb
adc
mov
clc
cmp
rorb
xchg
into
add
pop
ret
xor
mov
les
in
out
pop
dec
add
sub
add
imul
aad
shld
push
and
and
pop
stos
dec
in
daa
mov
xor
pushf
insl
pop
mov
add
test
inc
stos
mov
mov
jmp
jg
add
mov
sar
lock
testl
fidivrl
mov
in
fisubrs
or
rdpmc
mov
lahf
in
pop
add
rol
lret
jo
cmc
lret
push
sub
pusha
jno
das
push
push
loop
add
xor
mov
cwtl
inc
add
jl
ret
pop
xchg
pushf
inc
add
lahf
add
mov
and
out
imul
andb
test
fadds
enter
mov
push
add
add
pop
inc
leave
cmp
jl
add
fimull
mov
stc
scas
lds
add
fs
rclb
rol
es
js
testb
cli
add
stos
push
mov
mov
add
cmp
adc
pop
xchg
std
mov
fsubs
aaa
lret
pop
outsl
inc
out
daa
or
mov
push
jo
pop
dec
pushf
add
cld
dec
enter
sar
repz
fwait
dec
mov
adc
icebp
dec
sbbl
mov
shl
scas
push
cmp
add
sbb
cmp
mov
add
sarl
fwait
sbb
push
fbstp
add
push
mov
int3
sarl
push
add
pusha
pop
fwait
movsb
fisttps
cmp
cmp
lret
xchg
sbbb
in
in
shll
cld
ficomps
xchg
stc
dec
stos
inc
pop
add
je
into
enter
roll
inc
fisubl
ljmp
sbb
mov
add
add
mov
add
leave
clc
rolb
cmpsb
xchg
lods
nop
adc
xor
fs
inc
lods
sub
push
dec
add
and
push
xchg
ss
dec
mov
push
cmpsl
inc
push
lcall
push
push
mov
shll
adc
dec
call
in
push
xchg
cmpsb
filds
movsb
sbb
jge
subb
xor
or
push
pop
out
dec
mov
push
and
and
add
cmp
mov
lahf
xchg
add
loope
hlt
mov
fcomip
orb
add
or
clc
cwtl
jg
sbb
shrb
js
cltd
adc
add
inc
sub
leave
inc
dec
add
aas
test
stos
jg
movsl
dec
fcmovbe
aaa
or
movq
nopl
call
push
testb
dec
cmp
add
or
sbb
jmp
xchg
cwtl
add
nop
test
clc
js
add
xor
add
sub
dec
jae
add
xor
adc
in
dec
add
jge
xchg
mov
aam
out
jmp
ret
out
xchg
mov
or
pop
adc
add
imul
lock
fdivl
add
mov
jg
push
scas
clc
add
jbe
in
add
ret
cwtl
xor
mov
add
popa
xchg
clc
addr16
pop
push
jmp
jns
adc
jg
cmp
and
add
pop
dec
cmpsl
insb
pusha
cmp
mov
and
sbb
push
aad
xlat
shrb
addl
cmpsb
jbe
jl
roll
inc
add
lds
cmpsl
xorl
js
sub
testl
mov
jae
loopne
jmp
scas
out
ret
mov
pop
pop
stos
rorl
das
shrd
pop
sbb
imul
cmpsl
in
pushf
add
adc
cmpsb
mov
add
jno
pop
add
add
cltd
add
stos
aas
adc
imul
jge
sti
test
add
xlat
fimull
xor
adc
xchg
sub
lcall
fisubrs
js
rcl
cwtl
sahf
add
icebp
fcomip
and
xchg
fcom
sbb
xor
sbb
xchg
mov
add
fs
or
cs
push
sbb
out
mov
shlb
inc
test
ficomps
and
gs
cmp
jbe
insl
push
imul
cmp
push
add
ds
jbe
inc
jb
je
arpl
push
mov
fs
add
call
mov
jb
inc
inc
sub
dec
inc
push
dec
pusha
dec
xor
cs
into
sbb
sbb
jp
inc
arpl
adc
mov
push
dec
sbb
arpl
imul
js
xor
add
add
jae
addr16
inc
leave
mov
push
jb
lods
inc
mov
lcall
ss
jp
js
jo
push
mov
inc
sbb
insl
sbb
mov
fs
and
in
outsb
adc
mov
mov
xchg
int
cli
fisubrs
call
lea
jo
and
push
adc
inc
pusha
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
inc
add
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
les
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
add
add
add
add
bound
xor
add
push
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
add
add
jns
jae
je
add
jae
and
dec
add
arpl
outsl
add
jo
outsl
add
popa
add
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
add
add
outsl
add
add
and
inc
add
add
outsb
add
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
sub
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
inc
add
add
jb
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
add
add
add
add
add
add
add
bound
add
add
jns
jae
je
add
jae
and
dec
add
arpl
outsl
add
jo
outsl
add
popa
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
inc
add
add
add
add
add
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
inc
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
sbb
add
inc
add
imul
inc
add
je
add
add
add
add
and
dec
add
jns
and
xor
xor
and
xor
xor
xor
xor
and
xor
xor
cmp
xor
xor
add
add
add
add
or
add
inc
add
imul
push
add
jb
jae
imul
add
xor
cmp
add
add
add
add
xor
xor
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
movsb
dec
add
add
sub
add
add
add
add
add
add
add
clc
inc
add
lock
add
in
inc
add
add
add
add
or
sbb
add
push
adc
add
arpl
push
bound
je
jae
add
movsb
inc
add
mov
add
enter
fadds
add
add
hlt
inc
add
add
add
sbb
add
add
add
inc
add
add
add
call
add
xor
add
add
add
call
inc
add
cmp
add
add
add
decl
inc
add
cmp
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
gs
xor
fs
insb
add
add
push
push
jb
insb
insb
inc
popa
jb
add
add
popa
fs
jo
xor
cs
insb
add
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
push
pop
mov
push
pop
pop
push
lea
sar
punpckhdq
outsl
push
popl
in
call
scas
add
add
or
dec
add
mov
cmp
cld
mov
xor
movsb
or
add
insl
sub
leave
push
or
shl
test
ss
mov
icebp
dec
sbb
rol
jne
stos
jmp
aam
dec
sbb
inc
inc
jmp
sub
leave
enter
pop
shl
mov
cmpl
or
cmp
outsb
ja
and
jne
add
sub
rep
pop
jmp
add
shlb
mov
inc
adc
ret
shr
call
xchg
jb
ret
sub
popa
xor
or
push
addb
mov
push
add
shlb
add
and
or
mov
adc
adc
dec
cmp
sub
xor
mov
sbb
clc
adc
or
rep
inc
addb
sbb
sahf
into
push
inc
inc
mov
mov
jp
sbb
xor
rsqrtps
cmp
fmull
push
call
in
dec
adc
or
add
inc
sub
xchg
fidivs
sbb
push
repnz
lods
stos
add
nop
cmpl
je
adc
idivb
addl
inc
aad
and
sahf
pop
inc
sbb
jb
xor
push
or
repz
adc
jo
nop
add
mov
mov
inc
push
push
nop
xchg
aaa
and
mov
testb
jb
mov
pand
or
add
push
sahf
dec
add
xchg
test
or
cmp
xor
jnp
adc
sbb
jne
inc
cmp
sbb
je
push
and
loope
cmpl
xor
aas
pop
mov
sbb
enter
iret
aas
shlb
bound
test
dec
xor
or
and
and
or
dec
inc
lock
add
add
push
jmp
int
and
inc
and
push
call
push
adc
setge
or
pop
pop
pop
pop
cmp
add
xchg
mov
sub
loopne
add
add
push
call
inc
mov
jle
sbb
xchg
sti
sbb
push
push
negl
ret
mov
xor
ret
in
lods
sbb
jne
scas
leave
mov
mov
jge
pushf
inc
sbbb
ret
je
pop
and
cmp
xchg
pause
shrl
fmuls
cmp
xchg
bound
or
sub
cvtdq2ps
in
movw
in
lods
lock
out
add
add
testb
rcll
cwtl
sti
cld
shll
or
pushl
pop
js
inc
popa
add
dec
enter
movsl
jbe
jae
shll
inc
enter
pop
pop
add
or
pushf
or
nop
add
push
push
and
ds
nop
pop
push
cmp
or
or
inc
xor
push
pop
mov
movzwl
pop
test
je
push
xchg
arpl
ss
cmp
jge
xor
push
inc
imul
call
dec
mov
xor
sub
ret
and
or
rclb
xchg
dec
push
push
inc
pushf
into
add
jae
inc
jmp
pop
pop
sub
push
mov
inc
pop
ret
add
pushw
push
push
call
pop
mov
pusha
aas
push
lcall
inc
pop
aas
mov
lret
adc
in
pop
jp
je
loopne
jae
xor
dec
or
loop
push
add
movsl
pop
sub
jnp
xchg
cli
movsb
nop
jno
rcrl
stos
clc
lret
stos
pop
into
pusha
insl
cmp
cmp
ret
xorb
mov
pushf
inc
lcall
push
push
xchg
xchg
mov
test
push
mov
sbb
outsb
inc
adc
sub
sub
mov
pop
xor
stc
xchg
jl
sbb
mov
hlt
push
xchg
dec
or
dec
in
xor
push
into
push
in
lret
rolb
adc
je
xchg
jae
out
adc
adc
lret
sbb
popa
jne
stc
jmp
inc
ficompl
add
outsb
loopne
sub
pop
jns
fcmove
or
jecxz
sbb
lret
jne
mov
inc
or
pop
rolb
mov
push
je
add
push
push
dec
or
into
cmpl
cmp
push
push
push
call
cwtl
sbb
mov
clc
dec
test
into
jne
insl
jae
bound
in
and
sbb
inc
or
subl
rclb
scas
and
inc
les
dec
push
inc
or
rclb
xor
pop
test
cmp
jmp
and
inc
jmp
add
adc
rcrb
testb
mov
in
mov
jg
test
and
jmp
mov
inc
mov
push
jno
xchg
dec
fs
dec
pop
push
dec
sbb
xchg
add
push
xchg
mov
push
xlat
sub
repz
sub
mov
shr
push
adc
sbb
dec
or
inc
jmp
cmp
imul
insl
dec
sub
adc
sbb
inc
mov
dec
adc
jl
sbb
add
test
shr
pusha
loope
push
lea
test
sti
inc
push
mov
pop
test
cmp
cmp
sub
mov
sbb
xchg
mov
xor
adc
inc
and
cmpsl
sbb
and
movsb
mov
insb
imul
outsb
and
push
fdivr
push
adc
ljmp
add
out
mov
in
fs
fistpl
adc
jae
lret
insb
out
outsb
addr16
bound
mov
imul
xor
popa
outsb
insb
and
xor
int
arpl
ss
jne
fwait
cmp
xor
dec
js
popa
jnp
push
inc
outsl
js
emms
je
arpl
data16
adc
cmp
or
je
movsb
dec
dec
roll
push
fs
rorb
loop
sbb
je
cmc
inc
les
pop
jl
imul
jle
sub
fs
mov
int3
cmp
or
mov
cmp
dec
xor
jp
jno
lea
movsl
sbb
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
push
inc
add
nop
push
add
xchg
add
add
dec
add
sub
sub
add
add
add
and
and
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
