or
mov
mov
adc
push
add
addb
pop
nop
add
mov
and
add
or
out
lock
mov
add
pshufw
add
xadd
bound
pusha
add
add
nop
add
add
add
push
push
add
or
add
or
add
xor
mov
nop
add
or
add
add
add
or
add
or
add
or
add
pop
lock
lock
or
add
lock
add
incl
loopne
push
or
add
pop
inc
add
loopne
int3
or
add
add
add
or
lock
add
add
adc
into
add
or
or
add
or
mov
addb
or
add
pop
addb
add
add
or
and
or
add
or
push
add
add
cmovo
iret
or
add
pavgb
inc
or
test
adc
test
add
jo
jno
nop
add
add
loopne
add
add
push
add
rolb
call
xadd
xor
jo
or
or
add
add
add
add
add
pusha
add
adc
add
addb
fiadds
add
sbb
add
fidivs
add
mov
lock
push
loopne
push
add
add
addb
add
add
push
rolb
inc
add
and
cmp
add
or
add
pusha
add
addb
push
and
pop
pop
push
add
add
add
or
add
push
or
add
add
add
add
dec
or
imul
add
push
nop
add
or
insb
push
jo
int3
or
add
add
add
add
add
add
add
add
rolb
or
add
nop
add
pusha
add
add
rolb
add
ss
add
add
pop
loopne
or
and
push
mov
mov
push
popl
mov
movl
mov
movw
mov
call
push
popl
movw
cmp
jne
push
popl
movw
ret
mov
push
orl
movl
push
addl
push
popl
mov
push
popl
pusha
movl
call
subl
andl
mov
and
push
addb
xorl
sbbb
push
popl
addl
sub
push
popl
push
xorw
subb
call
push
popl
sub
cmpl
jne
orw
call
andb
xorl
ret
movl
orw
jmp
push
popl
push
popl
xor
sbbl
movl
mov
push
popl
push
popl
shl
push
popl
push
popl
mov
push
popl
shl
subl
mov
sbbb
xorb
cmp
jne
add
movl
mov
xorl
push
popl
sub
movb
or
call
push
popl
popa
xor
pusha
push
popl
add
call
subb
mov
mov
push
popl
push
xorb
xorl
sbbl
addw
addl
xorw
push
and
call
andb
push
addw
mov
xorl
movb
sbbw
addl
subb
xorl
pop
push
popl
cmp
jne
orw
push
popl
ret
andw
push
popl
popa
orw
call
push
popl
and
push
add
or
xorl
push
popl
xorl
addl
push
popl
push
popl
push
push
popl
call
xor
push
push
rol
mov
mov
mov
rol
mov
add
xchg
push
popl
mov
push
popl
addb
shl
movl
push
and
add
xor
addb
push
and
call
and
push
popl
push
movw
push
popl
mov
push
popl
push
push
popl
addw
jmp
subl
sbbw
pop
push
popl
push
popl
mov
or
addb
push
subb
push
popl
push
xor
push
popl
push
push
popl
andw
mov
and
mov
push
popl
rep
subl
push
popl
pop
subl
pop
push
mov
inc
not
mov
sub
xchg
push
rol
sub
shl
dec
mov
xor
xchg
orb
xor
xorl
jmp
sbbl
push
popl
sub
sub
mov
add
andl
sub
sub
push
popl
sub
mov
push
popl
mov
push
popl
orb
sub
xorw
or
jne
xor
add
xor
push
popl
jmp
push
popl
push
popl
mov
push
popl
push
popl
shr
addw
shl
movw
orw
mov
orl
add
xorb
jmp
addb
sub
xorw
push
popl
mov
movl
movb
add
movb
cmp
jne
push
popl
mov
andw
subw
add
push
popl
andb
mov
mov
push
popl
add
push
popl
cmp
jne
sbbl
subl
ret
addl
push
popl
push
mov
orl
xor
addw
pushl
push
popl
orb
pop
orw
mov
lea
movb
andb
or
push
popl
mov
mov
mov
push
popl
mov
push
popl
orl
lods
push
popl
mov
push
popl
subw
pop
push
popl
ret
xorb
subb
push
push
popl
xorl
mov
push
popl
add
push
popl
push
andl
push
or
push
popl
push
push
popl
sbbl
push
andw
push
xorl
push
popl
mov
push
popl
addl
mov
movl
add
or
pushl
orl
addl
mov
push
popl
push
popl
add
push
popl
add
xorl
mov
push
popl
mov
add
push
popl
xorw
xor
sub
lea
sbbw
andb
mov
andb
sbbb
add
push
popl
mov
orl
xor
xorw
rol
push
popl
xor
andl
movw
inc
push
popl
mov
cmpb
jne
push
popl
push
popl
cmp
je
andw
inc
push
popl
push
popl
cmp
jb
orl
mov
movb
orl
add
xorl
mov
movzwl
addl
mov
push
popl
orl
add
orw
mov
xorw
push
popl
add
sbbw
pop
and
cmp
jbe
sbbl
cmp
jae
sbbb
pushl
sbbb
pushl
sbbw
sbbb
push
or
xorl
orl
addl
sbbb
push
popl
pushl
push
popl
call
orl
push
popl
call
or
orw
pop
mov
addl
pop
subw
pop
xor
pop
push
popl
pop
addl
and
leave
addl
ret
push
popl
movl
call
or
lock
mov
jge
stc
loop
jo
mov
js
jge
outsl
pop
mov
cmc
mov
addb
sbb
xor
rorb
sub
xlat
sbb
call
ss
sub
add
cli
incl
stos
loopne
fs
mov
cmp
call
push
xor
push
fsub
mov
pop
sti
idivl
cmpsl
cmp
push
ret
loope
add
xor
cld
ss
lock
pop
std
ds
push
aaa
add
push
aam
xchg
push
or
sub
mov
adc
pop
inc
int
jle
imul
pop
aad
xor
push
enter
pop
push
loop
mov
and
cmc
pop
out
or
mov
mov
in
daa
bound
push
and
divb
push
std
pop
mov
bt
mov
pop
mov
pop
jecxz
scas
xor
jmp
lahf
mov
pop
shrb
insl
or
sub
pop
xor
lret
std
fcoml
bnd
sub
pop
fdivrl
mov
mov
or
cmc
xor
out
cli
push
inc
xchg
ljmp
or
int
mov
enter
jp
pushf
pop
ljmp
add
rcrb
rcrl
ljmp
loope
push
cltd
bound
repnz
mov
dec
or
sbb
jae
inc
cmp
adcb
push
fcmovne
mov
mov
loopne
xor
add
pop
mov
outsl
test
jle
les
iret
mov
jo
xchg
pop
mov
loope
ret
sbb
fdivrl
inc
xchg
mov
shrl
pop
add
jo
jbe
pand
pop
lock
imul
push
or
or
pop
or
ficoms
mov
arpl
in
sbb
jne
dec
mov
cmpsl
or
mov
fildl
decb
add
pushf
int3
fucom
out
icebp
push
lods
xchg
mov
aam
div
in
inc
jl
ss
xchg
repnz
call
jnp
ret
pop
scas
push
addr16
divl
int
les
mov
mov
outsl
or
pand
mov
bound
jle
push
mull
inc
test
and
loope
lret
cmp
outsl
jle
test
inc
dec
fbld
testl
xor
or
mov
rcrb
mov
dec
add
notb
loopne
daa
adc
int3
popa
in
jo
mov
mov
push
and
xchg
shrl
popa
out
ja
movsb
or
or
out
mov
mov
xor
cmp
xlat
cs
out
in
dec
lods
sub
mov
lea
ss
out
adc
sbb
insb
je
sbbb
inc
jno
stos
movsl
aaa
lock
adc
xor
or
orl
in
or
dec
out
idivb
testl
ja
cmp
stc
push
ret
int3
pop
fdivl
mov
loop
dec
test
xchg
xor
daa
mov
xor
mov
outsl
or
sarb
sub
dec
add
mov
hlt
stos
cmpb
jae
addr16
loope
dec
cltd
icebp
xor
dec
sbb
sub
mov
mov
cwtl
adc
outsl
jle
cmpsl
push
inc
int3
xchg
mov
jbe
xchg
out
cltd
jp
es
fisttps
pop
pop
sbb
mov
in
gs
push
mov
fdivr
gs
xchg
cmp
push
lahf
insb
inc
pusha
dec
push
in
jbe
mov
out
or
push
mov
aaa
daa
jecxz
lea
sub
mov
enter
xchg
mov
push
fsts
xor
fbstp
int3
pop
mov
das
sbb
into
sbb
test
fcoml
or
sub
test
or
test
mov
dec
dec
mov
cltd
scas
jno
and
mulb
call
inc
aaa
pop
pusha
mov
aaa
repz
rcrb
inc
inc
jmp
out
mov
mov
push
int
mov
mov
lcall
fldl
jno
ret
lds
nop
push
test
out
and
pop
adc
mov
add
cwtl
test
or
int
incl
popf
prefetchwt1
or
popf
mov
outsl
or
push
sub
adc
gs
cmpsl
inc
jno
jg
jb
adc
or
push
jl
cmc
mov
jle
xorl
ss
testb
or
xchg
jle
or
sbb
insb
jb
or
or
cmp
xor
out
mov
daa
nop
icebp
in
dec
nop
jmp
fbld
lods
mov
jae
imul
push
jno
ss
mov
cmp
pop
jb
pop
test
mov
cmp
outsl
jno
mov
outsl
or
inc
sti
mov
push
das
enter
jo
mov
lods
ljmp
out
or
testl
test
xchg
mov
dec
adc
adc
in
scas
fdivrl
xor
das
add
adc
adc
nop
sub
xchg
dec
mov
lods
cltd
jmp
clc
inc
adc
xchg
pop
neg
cmp
jae
shl
and
adc
jmp
fdivrs
jp
jno
test
or
push
loopne
mov
pop
roll
push
sub
test
fdivrs
int
ja
xor
loop
mov
xlat
pusha
imul
xor
xor
or
fnstsw
sub
pop
faddl
ja
or
or
add
cmp
test
mov
or
sub
mov
shlb
or
push
loopne
ljmp
movsl
loope
in
jmp
cmovns
ds
push
mov
lods
fists
xorb
cltd
push
ror
push
adc
hlt
je
pop
fdivrl
cmpsl
xor
test
xchg
push
or
fs
adcb
or
push
pop
ret
cmp
mov
psllw
movsl
cmp
and
cwtl
loopne
xor
mov
adc
or
jo
mov
cltd
and
jg
mov
ds
mov
les
mov
sub
push
gs
jl
mov
cmpsl
and
mov
loope,pt
mov
je
cld
mov
loop
dec
mov
pop
test
pop
repz
sub
or
xor
fstps
pop
addr16
xor
aaa
ss
leave
add
cmp
loope
add
insb
enter
ss
cmpsl
push
xor
and
leave
push
mov
inc
aaa
xor
pop
ret
lock
xor
xor
mov
sbb
test
jp
movsl
dec
cmpsl
or
es
mov
xchg
pop
xor
test
roll
rorl
aaa
push
dec
gs
test
incb
lods
rclb
sbb
test
sub
jns
pop
mov
sarb
jge
push
pop
lock
xor
pop
xor
sub
mov
shlb
push
jbe
mov
dec
fistps
xlat
and
movsl
cltd
mov
lahf
xor
lret
sahf
and
mov
jns
push
test
mov
adc
mov
push
adc
lahf
jno
adc
lock
jae
jecxz
pusha
pop
test
pop
in
push
imul
test
out
xlat
sahf
dec
lock
push
push
xchg
xchg
popl
sbb
push
fdivs
push
xor
push
rolb
ror
cwtl
test
push
mov
stos
lcall
jno
jl
lret
mov
lock
or
push
pop
or
test
into
hlt
nop
ljmp
ja
in
cld
or
fsubl
pop
inc
les
lret
jl
mov
sub
xchg
aas
je
cmp
mov
inc
xchg
xor
mov
xor
xor
sub
jb
xchg
mov
loopne
xor
adc
pop
or
or
inc
ja
aad
movsl
mov
rolb
sub
jo
leave
pop
test
push
xchg
xor
movsb
call
inc
mov
cltd
in
xor
inc
pop
or
push
movsb
mov
inc
dec
push
hlt
and
mov
cltd
sbb
movsb
cmc
mov
jne
cld
mov
loop
dec
mov
pop
xchg
jb
movb
add
outsb
mov
add
test
sbb
sahf
adc
ljmp
xchg
in
push
add
aas
inc
or
xorb
cmp
faddl
ret
inc
mov
jae
and
mov
mov
rol
sti
lock
or
jecxz
mov
pop
jg
lods
or
in
ja
aam
loopne
int
lcall
push
stc
adc
push
mov
jb
xlat
pusha
testb
cltd
stos
sarb
bound
mov
xchg
add
and
out
cmp
dec
push
mov
inc
add
sahf
lret
add
jl
dec
push
jns
loope
fstl
push
jge
jle
xor
add
ds
and
loope
int3
mov
sbb
or
mov
pop
setle
push
sub
xchg
sbb
jnp
rcll
loope
stos
pop
ret
xchg
push
scas
cs
adc
arpl
lcall
pop
dec
fsubs
rol
pop
arpl
mov
in
mov
repz
ljmp
and
cmp
cmp
jp
xor
std
fwait
lcall
mov
mov
lea
add
scas
rcrb
nop
fstl
inc
out
out
dec
and
or
push
jno
mov
movsb
and
mov
sarl
les
shrl
sbb
push
inc
int
hlt
xchg
outsl
jle
out
jge
jmp
or
sub
insb
test
outsl
push
into
sbb
andb
pop
push
xor
dec
clc
inc
or
mov
mov
xchg
arpl
lock
jge
ss
test
stos
lcall
pop
push
fdivrl
xor
stos
xor
xor
es
inc
test
loopne
cmp
pop
mov
push
sbb
jge
cs
in
push
cmp
pop
xchg
dec
xor
lahf
push
movsb
int
jmp
roll
jg
adc
mov
lcall
test
arpl
icebp
inc
xor
lret
pop
adcl
jp
hlt
adcl
and
mov
sbbb
add
hlt
pushf
xor
in
mov
daa
cltd
movsb
mov
push
outsb
jbe
lea
repz
inc
in
les
icebp
inc
repnz
mov
popa
add
jge
jno
lret
dec
adc
leave
and
daa
in
les
lods
cmpb
jns
mov
dec
call
rorl
dec
sub
test
iret
out
fucom
addr16
aad
ja
mov
bound
cmp
dec
andb
cwtl
in
xor
mov
mov
push
mov
lds
mov
clc
cli
cmp
adc
lret
sarb
mov
cmpsl
sub
daa
jmp
mov
outsb
jge
inc
mov
or
xchg
xchg
shrl
adc
in
mov
mov
or
inc
daa
fcomps
pop
mov
mov
lret
sub
push
or
test
int
nop
idiv
icebp
insb
xor
xlat
pop
fdivrl
shlb
mov
lods
mov
or
xchg
cmpsl
sub
mov
or
jmp
outsb
icebp
jmp
out
adc
jns
ret
or
cmp
shrb
mov
ss
push
xor
ja
jge
cwtl
push
outsb
out
jmp
pop
sub
mov
xchg
aam
rcr
sbb
sbb
movsb
adc
mov
xchg
mov
or
jb
mov
or
arpl
mov
mov
fdivrl
out
das
mov
repz
mov
hlt
lea
jb
into
daa
pop
les
ret
jnp
mov
dec
pushf
rcrb
dec
xchg
push
sarl
shl
pop
fmull
les
arpl
lret
imul
call
scas
inc
fisttpll
inc
jge
jle
push
ds
scas
aas
cwtl
fisubl
call
int3
in
das
js
out
fimull
sbb
cwtl
mov
inc
cmp
mov
in
ja
mov
data16
cmp
mov
rcrb
sbb
ja
test
into
cmp
jnp
ss
leave
scas
js
enter
sarb
sbb
pop
leave
shlb
imul
sub
jg
or
xchg
icebp
shll
or
out
inc
ds
or
hlt
cmc
mov
sub
movsb
and
inc
dec
test
xor
scas
adc
sub
cmpsl
and
or
in
lock
add
or
mov
mov
sbb
cmpsl
and
out
dec
repnz
xchg
cmpsl
and
mov
inc
popa
fdivrl
xor
pop
ret
dec
enter
add
std
shl
ret
sub
addl
test
fs
pop
xor
ret
stos
addr16
pop
inc
mov
loopne
divps
adc
mov
push
mov
mov
inc
aam
jo
mov
jp
shrl
pop
add
outsl
xor
lret
pop
mov
mov
or
or
or
fucomp
call
rcll
jle
xchg
out
cmp
ds
fimull
jmp
js
jl
cmc
stos
icebp
aaa
mov
dec
popa
xchg
dec
ss
hlt
push
cltd
repz
aas
push
inc
push
fdivl
mov
das
sti
sub
ficompl
ss
fcmovne
pop
mov
xor
cmovns
stos
aas
cmp
aaa
cmp
fidivrl
pop
and
jmp
push
aas
stos
push
and
ss
jecxz
fiadds
dec
into
loopne
xchg
inc
loopne
mov
adc
mov
add
cmpl
jg
ss
or
cmp
mov
jg
and
stos
call
test
jg
xchg
jns
or
int
fidivrs
xchg
icebp
xchg
mov
data16
jns
lds
in
xlat
xor
push
ja
and
jmp
pop
mov
cmp
or
in
fiaddl
jo
repnz
sarb
mov
push
jne
mov
movsb
and
mov
sarl
pop
imul
arpl
divb
mov
icebp
int3
pop
dec
pop
fisttpl
les
fdivrl
push
or
pop
divl
bound
mov
popf
mov
push
fs
or
xor
xor
je
mov
or
adc
call
imul
repnz
sbb
sbb
mov
xor
add
or
mov
test
cmp
sbb
or
ret
je
add
jae
test
std
adc
or
negl
outsl
cmpsl
pop
xchg
outsl
popf
iret
rcrb
cmpsl
daa
sub
jp
push
packssdw
push
dec
mov
pop
pop
mov
cmp
cli
push
mov
mov
stc
cmc
inc
dec
mov
adc
mov
add
jg
xor
mov
push
mov
adc
in
mov
inc
mul
and
mov
xor
out
outsl
or
cmp
cld
in
cli
push
push
xchg
in
testb
lock
jns
xor
shrl
sbb
les
in
out
sbb
xchg
outsb
test
sbb
xchg
mov
mov
sub
jg
lret
addr16
push
mov
fadds
sbb
cmpsb
pop
or
sub
mov
cmc
pushf
adc
adc
cmovo
loopne
or
scas
and
mov
pop
cmp
lea
cmp
popf
stc
and
adc
xchg
shll
mov
adc
in
lock
shll
in
push
out
cmp
icebp
dec
fsubrp
icebp
inc
jb
fldenv
aas
out
mov
adc
xor
pop
xor
and
aaa
pop
lods
cwtl
cmp
loopne
mov
ficompl
and
ret
fldcw
out
lock
push
jmp
add
adc
mov
push
adc
lea
pop
cmp
or
cs
jmp
push
jmp
lods
in
push
ret
or
mov
xchg
pop
ret
mov
fimuls
fisubrl
adc
cmp
jle
fnstsw
out
test
mov
and
loope
leave
mov
push
adc
pusha
mov
xchg
out
test
cmpl
lret
xorb
push
flds
pop
daa
leave
jne
push
jl
cmc
test
adc
fstpl
or
ss
movsl
lahf
stos
insb
cmp
dec
cli
testb
je
aad
mov
jae
in
ja
push
cld
ljmp
out
fucom
mov
sbb
sub
test
xchg
adc
jg
inc
add
imul
leave
jg
test
push
test
or
pop
pop
adc
lea
jb
mov
les
movsb
fdivrl
xor
lock
jb
sbb
jne
jns
icebp
dec
and
cmp
sub
in
add
jecxz
or
imul
rol
loop
das
push
ja
dec
pop
mov
adc
mov
hlt
mov
lock
mov
xor
adcl
cmp
xchg
push
xlat
out
aad
insl
testb
ja
mov
jecxz
mov
or
xor
lock
xchg
das
test
sti
insb
push
enter
stos
jnp
xor
pop
imul
mov
push
mov
sahf
mov
jns
movsl
jo
or
inc
sar
mov
inc
mov
mov
das
into
push
int3
mov
xor
ja
mov
sbb
cmpb
lea
std
mov
aaa
xchg
jmpw
xor
jbe
pop
mov
adc
scas
or
or
fdivl
mov
loop
dec
movsl
cmpsl
pop
test
pop
push
and
jb
addb
mov
mov
cs
mov
push
mov
xchg
inc
in
pop
loop
inc
mov
jg
add
xor
nop
es
or
xchg
in
out
or
enter
test
sbb
loopne
in
mov
or
jmp
sub
inc
dec
and
movsb
imul
mov
pop
sub
mov
dec
mov
xchg
adc
mov
mov
sub
mov
jg
data16
jp
adc
mov
mov
sbb
xchg
shlb
sbb
dec
mov
mov
gs
cmpsl
inc
lcall
pop
btr
jmp
and
adc
mov
cwtl
es
int
iret
xor
jmp
dec
ret
dec
dec
jle
and
loop
sbb
arpl
icebp
xchg
mov
xlat
hlt
popf
sbb
jecxz
out
xlat
stos
lods
mov
mov
lcall
fstps
add
mov
pop
rorb
in
and
lds
mov
repz
mov
sbb
inc
int3
jae
xchg
jno
fcomps
mov
in
fisttpll
inc
jge
jle
push
packsswb
call
jns
pop
fsubl
pop
xlat
xchg
std
pusha
aas
je
pop
fdivrl
insl
xor
test
lret
jbe
push
inc
mov
or
or
jle
loop
sbb
jb
ja
pop
fisttpl
sbb
xchg
std
lock
pop
in
xor
mov
movsb
int
mov
sbb
fcomi
jbe
mov
cmc
popf
sbb
ficomps
xor
ja
icebp
xchg
add
jge
dec
push
addr16
fnsave
rorl
jne
cmpsb
xlat
adc
mov
jb
xchg
or
aad
cmovs
pop
fdivrl
test
popa
ja
loop
and
sbb
jecxz
in
push
scas
fistpl
mov
lock
mov
or
andb
daa
pop
jle
pop
adc
inc
outsb
jmp
movsb
push
repnz
mov
sub
cli
lea
push
mov
addb
pop
jo
mov
jnp
or
jp
fwait
inc
lahf
mov
jp
mov
loop
dec
mov
cmpsb
scas
xchg
mov
int
dec
lds
sub
aam
pop
jge
fdivrs
or
clc
or
sub
or
popf
xchg
fdivrs
fiaddl
dec
dec
scas
sub
jae
in
stos
enter
push
jl
repz
mov
mov
jo
mov
jnp
dec
push
ja
fbstp
and
dec
nop
das
pop
test
and
sbb
push
cwtl
add
push
or
lcall
cmpsl
xor
mov
es
lock
aam
mov
and
adc
jb
ret
push
push
test
scas
lock
icebp
jle
mov
in
dec
cs
fists
test
scas
les
push
cld
pop
or
xchg
xor
ss
mov
nop
add
push
iret
jg
jbe
les
test
cli
testb
mov
add
leave
popa
push
jg
fcoml
arpl
or
jbe
pusha
fwait
mov
or
stos
inc
and
es
fildll
ja
ffreep
ret
pop
cmp
inc
xchg
inc
ss
enter
adc
add
lret
out
pop
mov
ret
stos
push
mov
vshufps
fidivl
or
clc
pushf
cmp
imul
loopne
cmp
arpl
test
hlt
jb
mov
push
jo
loopne
inc
int3
jo
mov
popf
fs
lds
shll
lods
xor
xor
add
loopne
cld
adc
or
std
cli
dec
cwtl
or
ficompl
les
fdivrl
or
adc
xor
jge
pop
adc
fcoms
push
or
movsl
pushf
int3
adc
imul
mov
lock
xchg
jmpw
das
adc
pop
inc
pop
nop
xchg
fdivrs
in
ja
and
jl
mov
or
sbb
or
pop
or
lcall
fidivrs
lock
pop
lea
loopne
xchg
jecxz
lea
push
mov
les
outsl
or
addl
ja
inc
push
and
jecxz
test
sti
or
pop
push
int
rol
inc
icebp
into
xor
xor
jb
adc
dec
xchg
popa
or
cmpsb
or
hlt
mov
adc
adc
pop
movsb
xchg
fdivrs
cmp
push
or
sub
out
in
ja
mov
bound
or
faddl
test
cmc
cmpsl
enter
hlt
mov
cwtl
rcrl
ss
movsl
push
icebp
mov
inc
fsubrp
icebp
subl
mov
ds
xchg
das
ret
pop
add
jbe
jl
ja
jnp
sbb
movsb
cli
lock
mov
xchg
push
movsl
cmpsb
or
sahf
iret
je
pop
fdivrl
shll
mov
rorb
sub
jne
lahf
add
mov
inc
fadds
pop
sub
movsl
cld
pop
jecxz
or
push
out
lahf
aam
pop
adc
sbb
dec
sbb
in
mov
or
sub
pop
mov
jecxz
pop
fnstsw
cmpsl
dec
loop,pn
loop
mov
sub
jns
mov
sbb
dec
mov
repz
cmp
lcall
dec
sub
subb
cmpsl
mov
and
loopne
push
aaa
or
mov
es
jge
hlt
inc
mov
adc
mov
add
push
test
enter
test
jle
pop
or
sahf
gs
dec
pushf
adc
mov
inc
clc
mov
insl
xchg
pop
movsb
aam
icebp
das
int
jle
pop
mov
movsl
sub
mov
cmp
pop
sbb
cmpsl
es
lahf
push
mov
test
sbb
mov
sti
and
cmp
xor
outsl
jle
test
cli
sbb
inc
aaa
jecxz
or
sbb
sbb
sub
pop
divb
loope
add
jnp
sbb
movsl
in
pusha
dec
pop
xchg
push
aaa
or
and
and
pop
mov
add
cmpl
push
aad
test
shll
hlt
add
call
jbe
and
adc
xchg
loope
mov
in
adc
outsl
or
aas
pop
fnsave
jo
xor
cmp
cmp
fcompl
jns
test
shlb
aam
popa
gs
xorl
int3
ss
lock
mov
mov
aaa
or
stos
mov
xor
outsl
or
movsb
cmpb
lds
mov
add
test
and
adc
in
icebp
push
add
xchg
xor
roll
push
xlat
icebp
ja
fisttps
les
jnp
xor
mov
xorl
sbb
cmp
fildl
mov
sbb
push
lods
jp
add
jmp
mov
pop
xor
sub
inc
jg
aaa
ds
popa
test
pop
mov
or
sub
aad
mov
push
mov
mov
stos
lcall
add
ds
outsb
or
adc
fstpt
sbb
test
lock
call
daa
xchg
fs
pop
push
mov
cmpsb
or
scas
push
hlt
or
and
dec
pop
nop
aam
and
jp
pusha
pop
dec
outsl
test
sbb
lods
imul
jecxz
mov
push
popl
jns
mov
push
insb
hlt
adc
jge
mov
dec
mov
mov
jo
mov
jnp
shrl
pop
add
push
push
int
jo
mov
or
or
xor
jmp
xchg
inc
jg
enter
add
jne
out
stos
loop
xlat
loope
add
adc
cltd
stc
jl
ss
sub
xchg
pop
test
and
lret
xor
lock
adc
aam
or
ret
dec
mov
push
fnsave
jp
shlb
mov
subb
les
filds
sbb
push
dec
int3
movsb
xchg
mov
jnp
sbb
mov
add
cld
mov
data16
mov
jno
mov
or
sti
dec
mov
movsb
fdivrl
push
or
push
divl
in
jb
int
hlt
xchg
pop
pop
add
mov
movsl
add
or
bt
push
xchg
negl
out
xchg
insl
mov
aaa
sub
xor
jns
xor
movsl
pop
sbb
cmp
jnp
xor
shrb
jecxz
cmp
jg
out
xchg
test
inc
xlat
cld
pushf
ss
add
inc
xorl
dec
ss
xor
fdivrl
cmpsl
cmp
push
push
dec
rcrb
nop
cmpsl
and
mov
sbb
nop
push
les
xor
pusha
in
push
leave
xor
jmp
daa
inc
jp
data16
sub
fnstenv
xchg
adc
lock
sti
pop
scas
mov
repnz
xchg
shr
aaa
or
sub
jmp
or
int
or
out
push
pop
notl
mov
aaa
cmp
fnstenv
call
aam
cmpsl
jp
mov
or
test
adc
ljmp
insl
pop
shr
jge
dec
xchg
icebp
test
lods
jae
das
rsm
andl
or
adc
lcall
pusha
adc
mov
adc
add
jg
ja
fbstp
inc
jg
pop
test
pop
loope
jae
cli
shll
orl
mov
pushf
data16
adc
out
xchg
xor
push
test
loop
adc
jae
cli
mov
dec
outsb
out
jmp
pop
lock
sub
fisubs
adc
mov
hlt
xchg
lock
jae
in
inc
loopne
test
imulb
pop
out
ljmp
mov
push
js
mov
cmpsb
dec
fs
pop
mov
sub
test
and
jbe
shrb
js
fists
lahf
xor
mov
or
xor
pcmpeqd
jno
inc
stc
jmp
mov
out
jle
adc
lcall
fsts
mov
or
jmp
mov
jae
mov
hlt
xchg
add
dec
jp
push
cli
adc
fisubrs
imul
int
jmp
or
and
rcll
jb
mov
mov
sbb
jae
push
mov
arpl
fdivrl
push
test
shlb
adc
cmp
ror
cli
repnz
xchg
cmpsl
and
out
or
mov
pand
paddusw
mov
inc
ljmp
aaa
inc
and
loope
lret
aas
or
adc
or
cmp
lret
ret
add
repz
cld
jbe
repz
sub
sub
sbb
std
outsb
xor
xor
jnp
shrl
cmp
pop
in
std
notl
xchg
or
mov
sti
pop
or
or
sbb
cld
iret
adc
stc
movsl
jle
xorb
fndisi(8087
or
sarb
add
enter
xchg
xchg
pop
lcall
in
jbe
mov
std
hlt
mov
lcall
cmp
test
xchg
imul
call
push
jle
xorb
xchg
push
shlb
inc
faddl
movsl
push
iret
jg
dec
mov
test
cli
nop
fcoml
les
inc
rcrl
cmp
lds
or
repz
cmp
stos
or
hlt
jg
mov
or
xor
fs
push
dec
xchg
aam
and
dec
roll
into
jg
out
pop
jmp
xchg
sub
mov
mov
pop
inc
adc
lods
xchg
lret
dec
mov
lods
xchg
cmp
aas
enter
cmc
xchg
add
xchg
les
movsb
aaa
inc
repnz
mov
pop
push
out
and
sbb
andb
ret
movsb
xchg
pop
rcrb
xchg
decl
stc
out
fisubrl
sbb
jle
lock
mov
in
jg
or
jg
out
or
cmp
es
push
xor
popf
sbb
fidivs
xor
ja
gs
fdivs
cmp
mov
shll
xor
xor
inc
cmp
mov
sbb
or
inc
push
adc
sub
mov
ret
mov
jb
jne
shufps
jle
push
mov
js
mov
stos
enter
or
lods
mov
jle
mov
xlat
or
sub
loope
mov
ds
adc
adc
pop
aam
scas
fidivl
fdivrl
imul
push
idivl
ja
cld
push
fisttps
xchg
mov
mov
mov
or
ja
jp
inc
inc
test
or
sub
cmp
add
mov
int
push
leave
pop
lock
xor
sti
mov
pusha
out
fists
xchg
adc
fsubrl
ret
push
test
push
arpl
add
dec
call
aaa
out
outsl
add
xor
cmp
outsl
jle
test
jle
cmpsb
push
mov
lea
jns
test
mov
ficomps
out
call
test
mov
or
stos
pushf
aaa
out
xor
fbld
push
cmc
mov
cmp
pushf
mov
xchg
inc
loop
pop
out
or
outsb
jmp
cmpsl
hlt
pushf
sbb
fisubrs
ret
pop
push
or
stos
enter
jg
test
jg
inc
add
jns
out
xlat
push
aaa
pop
xor
stos
jns
cmpsl
xor
jnp
xor
add
mov
jge
ja
mov
popa
sbb
ja
mov
mov
ret
or
lods
adc
in
or
push
lods
outsl
shl
xchg
lds
aas
fsubrl
fbstp
mov
enter
pop
mov
loopne
xor
adc
fcoml
cs
sub
testl
lods
fbstp
aam
inc
mov
jg
xor
outsb
jg
adc
pop
mov
loope
in
pop
xchg
pop
nop
jl
stc
das
into
push
out
in
ja
xlat
call
xchg
ss
out
sub
fs
mov
xchg
mov
test
jb
push
cltd
mov
nop
ja
mov
pop
jecxz
xor
aaa
mov
sahf
adc
loopne
mov
sbb
push
lds
enter
shll
or
add
cmp
mov
enter
mov
mov
in
ja
cli
cmp
aaa
cmp
push
jmp
clc
into
mov
mov
add
call
jle
mov
jo
or
mov
inc
jns
adc
cs
xchg
testl
xchg
fwait
cli
push
sbb
test
mov
dec
fistpl
sbb
mov
icebp
out
add
pop
sahf
mov
and
das
jp
dec
out
mov
jge
or
or
fdivrl
fnsetpm(287
lahf
sbb
andb
push
inc
int
hlt
xchg
mov
push
dec
sub
jmp
or
loope
or
fnsave
mov
dec
cmpsb
negb
jae
inc
mov
sub
push
outsb
jg
adc
add
fdivrl
inc
mov
pushf
testl
pushf
aas
out
test
insl
mov
push
les
in
mov
sub
lea
testb
or
in
pop
clc
jnp
mov
xor
jmp
dec
leave
notb
inc
movl
adc
sti
jge
cwtl
sbb
cs
cmp
mov
stos
mov
in
test
ret
in
push
adc
aaa
incb
mov
push
push
fldcw
lret
leave
pop
xor
pop
sub
mov
jg
push
cmp
jo
mov
jp
test
xchg
xchg
add
mov
dec
xchg
pop
push
dec
fstp
das
lret
or
xor
lods
mov
xor
lods
lock
cmp
pmulhw
adc
mov
movsl
sub
mov
sbb
addr16
jg
in
pop
inc
mov
divb
inc
push
test
jo
jle
jb
lods
and
cmp
mov
xchg
mov
inc
push
ja
js
mov
cmpsl
sub
cmp
iret
lods
repnz
fistpl
mov
push
push
xchg
jle
cmpsl
dec
inc
inc
fisubrs
mov
sub
mov
dec
xchg
pusha
hlt
jns
test
aas
or
xor
pop
sbb
inc
cmp
jg
sbb
push
mov
repz
int3
addr16
sbb
mov
mov
lods
scas
jg
lret
push
push
mov
pop
rolb
pop
pop
rorl
hlt
jbe
mov
cmc
mov
xchg
inc
movq
movl
push
fs
shl
mov
xor
lock
push
pop
push
sub
sbb
das
jg
ss
cmpsb
lret
push
clc
mov
xor
jecxz
push
xorl
pop
scas
push
or
icebp
inc
cwtl
push
lret
jg
dec
cmp
add
out
push
shll
rcrl
jbe
mov
movsl
sub
mov
push
in
lods
sahf
idivl
mov
pop
or
loopne
ret
sbb
xor
mov
jo
jne
imul
jge
icebp
stc
shrb
xchg
popa
in
or
divps
unpckhps
dec
jae
jg
sub
jmp
sbb
adc
dec
adc
mov
sub
sbb
or
cmpl
mov
rcrl
mov
adc
fiadds
das
or
rcr
push
jl
scas
int3
xchg
or
mov
add
movsl
adc
mov
mov
vmovd
in
lret
or
and
cmc
sub
or
stos
pop
int
mov
xchg
pushf
lods
inc
add
imul
lret
clc
sub
mov
sbb
fst
icebp
mov
test
ret
icebp
fiaddl
and
mov
ret
dec
scas
push
les
xor
push
insl
pop
fdivrl
icebp
shll
or
add
adc
cmp
imul
insl
mov
out
push
push
pop
mov
insl
push
fsubrs
mov
cld
mov
cli
std
or
or
xor
insb
out
loope
add
test
cs
mov
add
cmpsb
sahf
sub
or
addr16
cmovns
mov
adc
fucom
addb
xor
jns
test
add
pop
mov
cs
push
movsb
lods
push
pop
sub
int
push
mov
add
inc
lock
mov
xor
mov
ja
movsb
or
imul
lcall
pushf
icebp
pushl
dec
out
jns
test
sti
or
nop
fs
pop
in
sbb
subb
push
adc
sbb
mov
mov
xchg
inc
push
push
movsl
inc
into
insl
jmp
or
adc
add
les
outsl
or
testl
mov
test
inc
xor
mov
ja
or
outsl
pop
mov
movsb
sub
mov
in
jae
lcall
jge
das
adc
data16
popa
dec
testb
push
mov
fsub
fists
notb
or
mov
fisttpl
int
push
nop
mov
and
push
mov
xchg
lret
data16
inc
outsb
cmpsl
push
xchg
dec
test
fs
jo
in
jb
xor
aad
pop
inc
lods
popf
jg
lret
fs
mov
test
rolb
into
jae
loope
jb
jecxz
inc
fdivr
mov
xor
xor
loop
shrl
leave
arpl
test
inc
jp
ljmp
mov
testb
push
jb
es
popa
pop
mov
insb
mov
loope
loope
inc
sbb
mov
sub
jecxz
sub
nop
push
and
loope
add
jb
gs
jmp
in
mov
in
sub
inc
lea
invd
and
das
dec
loop
jo
cmp
cli
sbbl
mov
xor
leave
das
enter
sub
adc
push
push
pop
mov
mov
shl
or
or
mov
adc
sbb
inc
xlat
mov
pop
mov
in
fsubrp
das
int3
movw
inc
ljmp
inc
push
mov
mov
mov
xor
adc
pop
inc
pop
aam
jl
hlt
test
out
in
push
jl
xor
sbb
dec
inc
popa
hlt
test
jo
lods
pop
test
cmp
pushf
int
ljmp
or
nop
cmc
into
bound
xor
and
or
icebp
cmp
pop
cwtl
loope
add
fwait
mov
loope
in
ss
in
sub
inc
insb
xchg
outsb
test
pop
rolb
wrmsr
arpl
cmp
outsl
pop
loop
push
fnstsw
test
or
add
addr16
ljmp
divl
shll
add
fwait
add
in
aaa
push
mov
mov
inc
xchg
jns
add
in
jno
and
pop
lock
movsl
adc
mov
hlt
mov
push
pop
jge
pop
or
add
jecxz
jb
sub
sahf
jle
push
or
das
leave
arpl
movsb
push
mov
adc
add
jge
jle
sub
jmp
and
loope
int3
mov
loopne
cmc
daa
scas
lock
les
lock
mov
sub
or
lods
lcall
sub
aam
insb
cmp
cltd
and
cltd
in
xor
incl
inc
aad
icebp
adc
in
sbb
push
bound
push
mulb
dec
or
mov
test
repnz
ja
inc
mov
and
dec
arpl
and
push
icebp
lods
xor
xor
fidivs
push
or
lret
cli
pop
pushf
adc
hlt
mov
jge
jge
in
push
fucompp
es
add
hlt
stos
je
popf
clc
scas
jnp
ss
sub
lods
xchg
inc
sub
flds
test
xor
mov
lcall
pop
dec
imul
mov
or
xor
mov
or
inc
mov
push
arpl
cld
addr16
das
popa
jne
es
add
out
or
repnz
repz
std
stos
hlt
mov
loope
fistpl
in
inc
inc
shll
xchg
xlat
iret
sbb
mov
fdivrl
xlat
pop
fdivrl
sub
ret
xor
xor
sarl
int3
or
loopne
cmp
jae
test
cs
cmc
or
inc
int
fdivrl
iret
lock
or
imul
cmp
insl
or
and
mov
jae
loopne
inc
std
mov
pop
das
lret
mov
jmp
stos
outsl
or
cmp
stos
xchg
shll
bsf
adc
mov
pop
jecxz
sbb
and
dec
test
frstor
jg
mov
cwtl
xchg
xor
or
mov
lcall
push
movsl
xor
sub
mov
sub
push
and
cmpsl
inc
push
out
cld
out
pop
or
jle
jge
subl
outsb
add
sti
xchg
in
divb
jg
and
or
adc
pushf
mov
fisttps
or
push
shrl
popa
push
or
or
pop
fdivrl
mov
adc
mov
stc
push
lock
in
push
fsubs
jo
loopne
cld
decb
notl
mov
or
cmp
cld
cmp
lods
out
test
stc
enter
mov
xor
nop
adc
mov
shlb
cmp
sbb
inc
pop
rol
in
sub
dec
and
sub
inc
mov
cs
push
popf
cmp
movsl
out
lock
jmp
test
dec
lock
mov
sub
mov
outsl
or
cmp
outsl
jle
test
xorb
push
leave
xor
daa
mov
int3
add
jo
jbe
fsubrl
stos
ljmp
or
in
sbb
lds
xor
clc
and
aam
fsubrp
jmp
mov
inc
add
sbb
adc
fdivrl
std
or
fiaddl
cmpsl
test
aaa
cmp
enter
dec
div
mov
cmp
pop
and
cwtl
mov
add
jp
inc
and
icebp
push
xor
shll
fwait
sarl
rorl
or
test
rorb
repz
mov
or
loope
test
stos
pop
sbb
addr16
sub
in
jb
ds
or
sbb
in
or
jmp
andb
fmulp
inc
int3
jne
xchg
mov
les
xor
outsb
jg
mov
cs
sbb
inc
jb
mov
sub
inc
mov
jg
adcl
mov
mov
flds
jbe
cltd
call
repnz
xchg
cmp
pop
lock
outsl
or
jno
scas
aas
jecxz
test
daa
mov
out
dec
mov
jg
fcoml
lea
fimuls
push
les
outsl
or
jae
inc
inc
testl
xchg
cmpsl
daa
mov
adc
ret
cli
cmc
fstl
dec
shlb
inc
pop
xor
shld
lcall
push
or
add
adc
test
xchg
lret
push
xor
mov
xchg
shlb
adc
xor
aam
shr
adc
leave
loope
or
xor
lea
adc
push
cmp
push
push
cmp
xor
mov
push
cmpsl
repnz
mov
ret
push
jp
sbb
movsl
or
cmpl
mov
jl
or
ret
xor
loopne
jmp
mov
out
push
push
rorl
inc
loop
cmc
hlt
movsl
inc
bswap
cltd
repnz
or
addr16
mov
xlat
add
leave
lahf
or
loop
movsb
ficomps
push
out
popf
in
lea
xchg
adc
or
js
dec
scas
xor
adc
in
imul
pop
jge
pop
or
lds
mov
ljmp
add
mov
addr16
shrl
popa
in
jno
mov
movsb
sub
mov
jae
hlt
xchg
push
mov
movd
mov
mov
outsl
pop
loop
sbb
xchg
mov
hlt
aas
js
inc
or
pop
cmp
std
mov
sbb
or
pop
test
enter
shll
or
stc
adc
out
decb
hlt
or
loopne
cmp
arpl
mov
xchg
push
test
popa
bnd
loop
addr16
sub
pop
mov
iret
sub
cld
ss
out
stc
pusha
stos
cs
cmp
sbb
push
lret
bound
and
push
aaa
push
pop
sbb
jb
dec
daa
outsl
or
out
push
insl
mull
pop
out
clc
in
push
loope
aad
xor
mov
pop
dec
testl
fs
cwtl
mov
xchg
aad
cmpsb
call
jnp
xchg
outsb
test
sub
scas
jae
idivb
loope
mov
adc
fwait
lds
loope
lods
lea
mov
and
push
adc
ficoms
or
insl
jge
jle
ret
ds
dec
and
andb
loope
int
and
pop
fmull
sti
jle
adc
xchg
je
pop
fdivrl
sarb
ret
adc
xor
jo
repz
or
xor
pop
jne
push
mov
fdivrl
xor
xor
xor
in
adc
aam
sbb
nop
loopne
xor
pop
imul
lds
pop
sahf
xchg
fdivrs
cmp
jae
jnp
in
or
mov
xchg
sbb
fiaddl
push
push
fsubs
xor
sub
fsubs
jecxz
push
test
push
xchg
js
test
sbb
or
sub
mov
cli
out
out
jecxz
cmp
pop
ja
mov
pop
fmull
pop
mov
lods
xor
xor
push
or
xchg
dec
js
nop
loopne
xor
popf
push
or
nop
inc
mov
dec
pushf
jmp
das
int3
popw
test
mov
shlb
movsb
fdivrl
mov
ja
cwtl
ss
mov
rorl
mov
fwait
hlt
mov
mov
popf
push
hlt
jb
mov
or
loopne
test
sbb
insl
cmpsb
fsubrl
mov
adc
aas
ja
or
or
or
adc
mov
sbb
cmpsl
and
gs
outsb
in
out
xchg
in
clc
jae
shld
adc
cwtl
and
push
push
dec
lret
or
cltd
lcall
rorl
stc
fs
push
das
push
push
cmpsb
ja
or
es
outsb
pop
push
push
adc
test
mov
cmp
xchg
pop
idiv
jo
mov
test
or
loopne
lock
lea
or
orl
enter
dec
mov
or
sub
or
stos
sahf
push
loopne
das
dec
iret
testb
stos
mov
daa
sbb
cld
sbbb
lret
xchg
ret
cmp
xchg
dec
aaa
or
or
clc
out
negl
adc
pop
mov
xchg
xor
out
adc
cwtl
int
sub
sub
push
push
cmpsl
das
xlat
call
push
lret
jg
call
cwtl
xchg
loopne
cmp
imul
pop
xor
loop
repz
sub
out
fucom
incl
shrl
pop
jl
cmc
test
cmpsb
in
movsb
cs
push
movsb
add
jne
xlat
xchg
hlt
or
xor
or
movsb
cwtl
jl
pushf
mov
or
stos
pop
push
pop
inc
adc
lods
sahf
jg
lret
andb
enter
aad
mov
repz
mov
sbb
cmpsl
es
dec
push
pop
adc
or
loop
mov
mov
cmpsb
movsl
movq
mov
jbe
data16
loopne
fdiv
leave
lea
call
xor
pusha
jecxz
hlt
mov
dec
xchg
mov
pushf
fwait
sub
push
mov
lds
fnsave
mov
sub
add
std
mov
and
loope
int3
pop
fisttps
fistpl
fnstsw
jge
jle
mov
iret
xchg
pushf
arpl
and
loope
lret
les
jne
and
test
sbb
movsl
lock
pop
lods
fs
mov
inc
xchg
call
adc
outsl
or
adc
loope
or
hlt
xchg
sahf
aaa
bound
out
inc
adc
xchg
loope
xor
cmpsl
or
test
xor
mov
sub
ficoml
cmpsl
repz
loope
add
test
xchg
inc
sbb
xor
sbb
jno
mov
xor
shlb
inc
mov
and
adc
cmpsl
daa
mov
xchg
shl
insl
xchg
cmc
xchg
bound
pop
loopne
or
jb
mov
pop
psrad
mov
xchg
mov
insb
cmc
sahf
sbb
loopne
out
mov
or
cwtl
jno
adc
dec
imul
add
test
jno
or
jb
pop
xchg
loope
shll
aas
cmp
xor
pop
ds
or
or
loopne
cmp
xchg
lock
inc
in
outsl
jle
test
test
sbb
loopne
xlat
xchg
jmp
dec
pop
add
push
nop
jmp
jmp
or
ljmp
jecxz
call
pop
mov
shr
mov
inc
push
push
andl
push
xlat
call
mov
jl
mov
frstor
push
fnsave
cmp
sub
fbld
ss
adc
mov
in
sub
xor
push
pop
xor
adc
addr16
push
and
mov
xlat
pop
jmp
push
sahf
lods
adc
mov
xchg
shrb
push
mov
or
cli
push
arpl
scas
imul
and
pop
and
inc
sbb
xchg
inc
ss
xor
dec
outsl
arpl
push
addr16
xchg
cmp
lds
mov
cld
fsubr
inc
jge
rolb
mov
hlt
jne
mov
sbb
loope
rolb
adc
ss
xor
nop
xchg
mov
inc
aad
mov
push
sahf
push
adc
fldcw
lret
adc
fists
mov
xor
jb
stc
cmp
dec
or
push
std
and
mov
test
fnsave
add
dec
ret
out
adc
dec
sub
mov
out
jge
subb
and
hlt
pop
es
clc
push
mov
push
movsl
dec
mov
sti
jl
cmp
call
cmc
shr
pop
fiaddl
out
je
pop
fdivrl
jecxz
and
out
inc
jno
stos
mov
or
xor
in
out
push
inc
mov
jne
out
inc
iret
mov
inc
bound
das
int3
popw
xchg
jb
popl
dec
mov
xor
xchg
popl
lret
sahf
pop
sub
aaa
adc
inc
cmp
mov
mov
mov
sbbb
jg
xchg
iret
les
in
dec
or
cmove
jns
push
pop
sub
jmp
add
int
inc
cmpl
iret
jmp
adc
sysexit
inc
jg
test
mov
lcall
ja
fstpl
imul
ret
xor
aas
jle
subb
dec
jmp
jmp
lock
int3
das
stc
sub
dec
stc
jmp
gs
xor
dec
out
jne
stos
cmpl
dec
xchg
out
or
mov
test
popa
cld
fimull
repnz
cwtl
shl
xchg
xor
mov
add
sahf
inc
pop
push
test
xor
mov
cmp
or
pop
aaa
xor
or
push
fimuls
clc
movsl
gs
testl
xchg
rorl
mov
popf
jbe
in
xor
jg
push
add
jmp
cwtl
or
rcll
addr16
or
push
ds
cli
mov
jp
and
test
repz
mov
adc
mov
or
ja
adc
dec
cwtl
enter
mov
sub
pop
leave
das
jl
cmc
stos
int3
repz
rolb
xchg
bound
out
cltd
mov
jae
sbbb
mov
sub
inc
std
sbb
sbb
cli
aam
push
ficompl
dec
jge
jle
push
ds
and
or
lock
leave
lret
xlat
in
or
fbstp
push
mov
loop
dec
mov
pop
mov
aad
inc
mov
in
jge
pusha
out
outsl
or
cmp
adc
xchg
mov
xor
test
mov
movd
movsl
and
add
inc
int3
ja
push
dec
xchg
in
lea
out
test
or
js
dec
cmp
sbb
cmpsl
and
xchg
mov
outsb
ljmp
outsb
jg
adc
cmc
mov
add
je
cmp
xor
cmp
push
nop
shrb
xchg
xlat
shrl
cwtl
xorb
sarb
jbe
sbb
movsl
jge
sbb
aaa
or
shlb
mov
jg
or
adcb
mov
call
lock
ja
enter
stc
pop
sbb
fisubs
xor
adc
pop
push
shl
sahf
jne
sahf
in
and
and
cld
xchg
xor
inc
mov
sub
jecxz
cmpl
add
aaa
mov
mov
pusha
jg
and
jmp
fsts
testb
repz
xchg
or
jns
cwtl
push
cmp
sbb
mov
cmp
mov
or
lret
pop
mov
stc
pusha
inc
mov
xor
adc
pop
sub
int
rorl
mov
mov
jp
cmpsb
adc
mov
pop
fcompl
arpl
enter
mov
or
jmp
pop
outsb
ljmp
imul
jno
pop
fdivrl
xchg
ljmp
test
jl
add
cmc
add
mov
test
jo
add
aaa
lret
cwtl
lcall
mov
outsl
pop
loop
sbb
repnz
mov
xor
aaa
aad
pop
adc
jl
stos
test
xchg
jae
insl
and
mov
adc
mov
in
popa
xor
dec
jg
aaa
cmp
repz
xchg
out
push
pop
rcr
aam
test
fistpl
mov
loop
add
pop
adc
xor
repz
sahf
xchg
dec
test
int3
imul
inc
popf
in
lea
bound
outsl
or
dec
ficomps
pop
sbb
cmpsl
and
sti
stos
loopne
push
ret
or
sbb
jge
xor
bound
int
inc
add
mov
aaa
test
cmc
add
shrl
popa
jmp
mov
lret
je
pop
fdivrl
adc
jecxz
pushl
rcl
pushf
mov
push
pop
mov
cwtl
mov
and
mov
xchg
pop
lock
lea
fnstcw
push
jl
cmc
test
sbb
xchg
daa
push
mov
mov
jne
push
lock
ja
pop
clc
testb
jnp
dec
fnsave
out
popa
call
or
or
ret
jnp
push
sti
mov
cli
push
push
cltd
and
sbb
hlt
stos
jp
ljmp
mov
xchg
mov
cltd
repz
in
adcl
shrb
test
daa
mov
ss
pop
jnp
dec
int3
movsb
bound
or
xlat
pop
mov
pop
fdivrl
mov
in
adc
push
mov
pop
adc
dec
adc
add
pop
out
or
aad
push
ret
pop
cmc
mov
mov
mov
sbb
mov
cmp
pushf
icebp
mov
test
ret
inc
pop
fsubl
jae
push
ret
pop
fdivrl
cmp
out
xchg
mov
enter
jp
rclb
mov
mov
lods
or
pop
jg
les
or
orl
mov
pop
insb
xchg
fidivs
add
cltd
sti
mov
adc
filds
mov
popf
dec
aas
jl
xor
add
push
sarl
loop
push
test
mov
xchg
addr16
add
mov
ret
sbb
scas
jge
ss
or
pop
mov
cmp
sarb
ret
daa
lock
mov
sti
adc
lods
fistpl
adc
mov
mov
lret
mov
cmpsl
and
or
adc
pop
lock
add
outsl
or
pop
or
aas
loopne
test
inc
or
rolb
hlt
xchg
pop
mov
cmc
mov
addr16
test
fists
xchg
jle
clc
pop
sub
test
sahf
mov
das
inc
push
mov
enter
test
xor
ret
jmp
loop
stos
shlb
out
add
add
fs
cmp
mov
cmc
lds
insl
dec
mov
iret
enter
xchg
das
sbb
inc
pop
fdivrl
adc
inc
jb
push
shlb
pop
jmp
mov
lahf
mov
leave
pop
pop
jl
xor
push
andl
call
mov
pushf
aaa
cmc
rol
arpl
addr16
bt
mov
into
jno
pop
xor
mov
jnp
cmc
lods
cld
stos
sbb
das
and
lahf
sub
mov
sahf
mov
jge
jne
jns
test
push
loope
or
popa
divb
adc
dec
lods
push
mov
sbb
push
or
mov
ja
dec
jp
cmp
or
mov
adc
adc
bnd
inc
jge
jle
hlt
ds
mov
or
push
test
mov
mov
outsl
or
andb
test
inc
int
hlt
xchg
nop
jg
int
jae
sahf
jns
dec
imul
mov
cmpsl
dec
pop
add
jmp
fwait
subl
fistpll
fidivl
sub
xchg
movsl
ss
insb
mov
push
add
add
add
xchg
addr16
pop
jmp
stos
in
adc
lock
xor
icebp
outsl
or
leave
push
mov
lds
repz
push
or
cli
adc
lock
mov
in
jp
out
or
jg
out
nop
xlat
inc
mov
repnz
mov
sbb
sbb
fnstcw
pop
fstl
mov
je
std
lock
inc
push
and
loope
enter
insl
int3
adc
push
or
jp
pop
jae
ret
sbb
fistpll
jg
aaa
cmp
and
mov
xchg
test
aad
jp
mov
sub
inc
aaa
mov
and
scas
mov
lcall
mov
mov
mov
fistpll
loop
nop
mov
pop
sbb
cmpsl
or
mov
inc
jecxz
test
dec
bound
clc
push
addb
mov
fdivrs
push
push
or
jae
in
movsl
pushf
int3
or
das
mov
mov
push
adc
pop
mov
test
je
sbb
sbb
iret
xchg
cmpsl
sub
mov
mov
leave
fwait
inc
rcr
mov
mov
repz
in
outsl
or
dec
mov
sbb
ja
sti
int3
jle
add
insb
pop
int3
jb
fucomip
ja
icebp
mov
add
enter
xchg
add
xchg
add
mov
add
inc
add
xor
adc
xchg
adc
dec
je
pop
fdivrl
jle
lds
loope
fbld
jle
mov
or
xchg
das
in
test
repnz
fistps
sahf
and
mov
out
pop
cmp
aas
xor
ret
lods
test
sub
popa
into
jle
mov
mov
add
cltd
in
xor
cmpsl
stos
movl
xchg
mov
fs
fdivrl
cli
push
negb
and
xchg
xchg
fbstp
and
dec
and
xlat
pop
cld
add
mulb
dec
dec
jl
xor
xor
mov
ljmp
push
inc
xlat
cmp
mov
or
fldcw
ficompl
sbb
mov
lock
insl
ds
cli
mov
out
mov
or
adc
jb
mov
jge
shrb
ret
jae
outsb
lock
or
pop
sub
pop
xlat
ja
adc
out
or
sbb
pop
pop
in
and
mov
fistpl
cmpsb
sbb
mov
inc
ss
inc
hlt
jns
mov
xorl
sbb
push
or
mov
or
xchg
or
stos
and
add
lock
push
ja
cmp
daa
adc
test
out
mov
fnstcw
cltd
jge
mov
sub
ficomps
out
lahf
mov
and
or
xchg
sbb
aam
aaa
lock
xchg
push
or
push
je
pop
fdivrl
push
mov
popa
ja
stos
push
xlat
xor
xchg
cmpsl
or
mov
rcrb
pop
lods
xchg
lret
dec
shll
cmpsl
enter
dec
scas
pop
fidivs
loopne
loop
dec
cmpsl
stos
pop
xchg
mov
xor
pop
inc
clc
fwait
inc
pop
fnstsw
inc
jp
mov
or
outsl
or
aaa
or
jb
pop
cmp
xorb
jb
stos
jns
cmpsl
aaa
out
and
lcall
call
push
lret
xor
push
stos
pushf
aaa
cli
pusha
data16
mov
outsl
pop
mov
movsb
sub
mov
or
decb
rcl
jnp
repnz
xchg
cmpsl
and
outsb
ljmp
ret
mov
xor
push
adc
push
push
or
and
fdivrl
jb
cwtl
adc
push
nop
xchg
mov
mulb
test
imull
xchg
pushf
aad
dec
or
jno
out
call
adc
out
or
cmpsb
inc
out
sahf
and
jecxz
sbb
and
add
movsl
adc
popf
push
lds
mov
les
in
mov
mov
mov
mov
std
out
sub
loopne
or
ja
jge
mov
cmpsl
sub
xchg
inc
dec
mov
mov
inc
insl
fidivrs
lret
movsb
lock
test
pop
mov
xchg
mov
sbb
mov
subl
fstl
push
pop
dec
loop
mov
xor
add
in
lcall
mov
mov
mov
repnz
fmul
cmp
movsl
lahf
or
jmp
jae
mov
int3
adc
dec
orl
cvtps2pd
jo
mov
jnp
or
mov
hlt
ja
mov
shll
mov
popa
testb
rolb
test
xor
xor
push
insb
bsr
or
mov
adc
hlt
mov
jmp
dec
jo
xor
and
and
out
lret
mov
pop
jg
test
fadd
leave
and
testb
lock
in
push
fcoms
cmp
sub
insl
loope
rcll
pushf
dec
mov
test
test
inc
pop
scas
mov
cwtl
xchg
or
jl
dec
rorl
hlt
ja
mov
push
ja
jns
rcrl
loop
push
jle
mov
lock
pop
xor
nop
dec
add
mov
clc
mov
into
pop
in
adcb
pop
stos
shrb
dec
jl
add
and
add
mov
push
pop
mov
mov
enter
sub
mov
lods
jge
daa
hlt
jns
mov
mov
or
sbb
jne
push
ljmp
lods
adc
xchg
pop
xor
or
pop
ja
in
mov
and
lcall
loopne
loopne
inc
pop
int
daa
xchg
and
and
jnp
add
mov
sti
pop
mov
outsl
out
addb
lock
gs
dec
xchg
push
fdivrs
movsl
pinsrw
hlt
js
mov
push
adc
imul
mov
faddl
add
inc
mov
sbb
mov
xchg
stc
icebp
cwtd
jo
mov
jle
jge
or
rorb
or
xor
test
jle
pusha
mov
or
push
mov
fldcw
bnd
xor
cmpsl
inc
jae
adc
ss
sbb
or
sub
rcrb
xor
push
push
push
test
xchg
fs
popf
sub
jle
mov
jecxz
fists
fisttpll
mov
fs
xchg
push
xchg
fldcw
sub
cmpsl
in
mov
xchg
addr16
les
xor
mov
mov
jle
lret
fcoml
popa
sub
cmpsb
lea
ds
js
xor
adc
stc
or
lods
arpl
pop
or
sub
rolb
mov
sbb
or
or
fdivrl
mov
outsl
jle
test
fisttpll
or
or
int
or
push
xor
in
or
js
xchg
loop
loope
add
test
cld
inc
stc
jmp
cmp
jmp
adc
or
xor
push
cwtl
cmpl
pushf
ja
push
jno
lock
dec
andl
out
aaa
cmpsl
in
js
inc
xchg
outsb
test
and
sub
xchg
cld
movsb
pushf
int3
popl
pop
mov
xor
inc
out
jmp
lock
sub
fcoml
or
mov
jbe
and
push
std
fxch
jl,pn
pushf
cmp
push
movsb
pop
daa
inc
leave
cld
or
pusha
ljmp
stc
loop
sbb
pop
hlt
icebp
xchg
mov
inc
sub
ret
jae
into
imul
divb
fwait
sbb
mov
dec
popf
int3
inc
sbb
push
mov
repz
mov
sub
das
xor
dec
les
loope
xor
mov
mov
or
lea
mov
addr16
and
hlt
xchg
mov
mov
aam
jle
xor
or
push
or
and
cli
sbb
cwtl
addl
movsl
cld
sub
stc
popf
sahf
xor
adcl
lea
mov
xor
ficoms
mov
test
adc
pop
bnd
ljmp
cmpl
cld
ja
nop
sub
xchg
inc
int3
in
les
cli
xor
test
insb
jle
inc
pop
shll
xchg
pop
sbb
and
or
xchg
inc
arpl
mov
inc
pop
jl
addr16
das
popa
pop
add
or
stc
or
cmp
dec
repnz
mov
pop
sbb
cmpsl
and
mov
shlb
pop
mov
dec
js
and
popf
xchg
fdivrs
sub
add
adc
rolb
imul
inc
add
pusha
dec
inc
cmp
arpl
lret
clc
out
clc
inc
cmp
mov
fdivrl
add
xor
pop
cmp
loope
jl
shll
mov
mov
data16
lods
enter
cmpsb
out
pop
xor
test
adc
call
lcall
stos
pushf
aaa
icebp
dec
ret
jns
imul
dec
adc
mov
inc
or
mov
inc
ja
sub
das
int
out
mov
dec
je
pop
fdivrl
sbb
in
cli
adc
inc
shll
fldz
mov
in
or
lret
or
mov
mov
sub
add
jo
in
jnp
and
mov
sub
aam
shlb
hlt
push
into
jg
insl
mov
mov
test
or
das
mov
jne
ds
pop
mull
or
mov
cmpsl
xor
test
imul
pop
or
movsb
imul
pop
scas
inc
repnz
mov
mov
xchg
add
out
sbb
jae
data16
pusha
adcb
push
push
inc
jae
mov
std
dec
insb
adc
or
xchg
or
mov
and
mov
sub
outsl
mov
les
xorb
mov
mov
pushfw
scas
imul
int3
into
mov
jnp
pop
sub
outsl
jle
test
mov
push
xor
mov
mov
jg
mov
adc
divb
jo
andl
lahf
mov
sahf
and
insl
xchg
inc
test
jae
das
es
sbb
repnz
mov
andl
es
insb
dec
repnz
lea
xchg
inc
mov
add
fildl
sub
out
inc
mov
and
loope
sub
xchg
or
lahf
mov
sbb
jns
push
xchg
das
test
bswap
sub
or
daa
insb
or
mov
popf
in
pop
cs
inc
lock
in
push
ficomps
popa
in
pop
sar
fildll
dec
push
testl
subb
jo
movsl
je
jecxz
push
sarb
aaa
push
mov
notl
lods
out
in
jecxz
push
xor
dec
xor
mov
or
xchg
aas
std
hlt
or
testl
icebp
shrl
test
out
and
popl
push
movsl
cmp
pop
adc
test
ret
test
imul
lea
out
fadds
sbb
pusha
fucom
call
adc
adc
in
mov
and
nop
daa
test
jo
fisubrl
jnp
xor
jno
mov
in
js
mov
call
or
jmp
lea
mov
es
outsl
cwtl
enter
fidivrs
and
push
jle
orl
cltd
hlt
repz
xorb
loope
push
jecxz
cltd
and
inc
loopne
movsl
pop
loopne
ljmp
pop
or
sub
mov
and
cmpsl
sub
inc
pop
movsl
pop
jge
pop
push
fld
ja
mov
xor
mov
daa
xchg
pop
or
mov
mov
and
cmpsl
sub
clc
sbb
pop
jge
pop
adc
dec
outsb
ljmp
xor
cltd
pusha
aam
push
out
or
movsb
push
out
sub
cmp
bound
fildll
loope
mov
xor
fmull
add
xchg
xorb
loope
xor
mov
pop
or
mov
pop
ja
push
pop
and
cmpsl
and
cmp
jg
mov
stos
jge
mov
jae
pop
mov
movsl
and
mov
shll
ret
jge
movsl
lock
pop
jge
pop
adc
inc
in
shrb
inc
xor
mov
cld
in
movsl
daa
movsl
adc
mov
andb
ja
dec
mov
mov
popf
js
adc
mov
fnsave
or
inc
mov
mov
sub
jp
test
cmp
mov
ret
cwtl
mov
jmp
insl
mov
jg
xorb
add
mov
sti
push
mov
popf
ret
sar
gs
dec
jge
push
mov
mov
test
sarb
es
push
push
pop
xchg
dec
xorb
cmc
sub
fildl
out
sub
pushf
inc
jmp
in
xchg
lods
push
iret
jg
adc
stos
xchg
mov
pop
dec
imul
outsb
or
mov
ss
pop
fdivrl
iret
jle
mov
cmpsl
daa
aas
jg
mul
popa
das
pop
les
mov
fwait
inc
fdivrl
mov
popf
test
adc
mov
movl
or
adcb
sti
sar
xor
fsubp
pop
lcall
sbb
aad
icebp
xchg
mov
pop
inc
and
xchg
jg
lret
jge
mov
stos
enter
cmovo
inc
rcll
jle
cmpsl
dec
dec
rclb
add
call
add
jae
fildll
ja
scas
pushf
imul
xor
push
xor
aam
mov
sarl
and
pop
es
cli
fildl
mov
sub
sub
mov
mov
pop
fdivrl
adc
jle
movd
mov
aaa
cmpsb
scas
mov
push
arpl
shrl
push
xor
in
imul
push
xor
push
fisubl
rol
mov
cmp
add
popf
xor
sub
sahf
inc
xchg
into
insl
dec
add
out
dec
sbb
cmp
inc
enter
movsl
mov
or
mov
pop
jne
ret
into
hlt
mov
jae
testb
mov
jae
xchg
dec
test
push
addr16
jge
pop
outsl
or
or
cmp
aas
repnz
mov
xchg
push
jmp
and
loop
push
pop
mov
in
or
mov
mov
sahf
popf
stc
lock
mov
movsb
mov
mov
lock
aad
lock
adc
movsl
adc
mov
xchg
fwait
testl
data16
aas
loopne
test
sub
xor
loop
daa
adc
sub
add
or
mov
mov
xchg
hlt
mov
cmpsb
cmpsb
cwtl
addl
test
out
movsl
lcall
mov
sub
stc
dec
mov
scas
cltd
aad
js
adc
pop
aad
xor
xor
out
push
daa
xchg
xor
test
xlat
repz
ja
sbb
sbb
push
scas
dec
push
test
dec
sub
jge
jno
cmp
int
dec
aaa
or
xchg
cs
inc
jno
jnp
lds
outsl
.byte
.byte
.byte
pop
.byte
