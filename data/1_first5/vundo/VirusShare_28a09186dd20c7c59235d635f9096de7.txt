jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
push
cmp
mov
add
add
push
add
pop
push
add
add
add
add
movsl
add
add
add
add
add
mov
add
add
add
push
add
add
add
pop
add
add
and
sub
addb
add
add
add
add
add
sub
mov
add
add
add
add
add
add
jge
sti
add
bound
movsl
add
add
add
add
add
jge
push
add
add
mov
add
push
add
add
mov
movsl
add
lea
lea
push
add
add
dec
add
add
add
add
jge
sti
add
add
movsl
add
add
add
add
add
jge
push
add
push
add
pusha
add
push
add
add
add
add
add
add
add
add
inc
add
add
nop
add
add
mov
add
add
add
add
add
add
pop
add
add
add
xor
or
add
add
movsl
add
add
stos
add
add
add
add
pop
add
add
add
push
add
imul
lret
add
add
xor
cmp
ret
add
pusha
add
add
add
add
add
push
add
add
add
push
add
add
sbb
add
add
add
xor
fiadds
pusha
add
add
add
add
pop
add
jno
movsl
add
add
add
add
mov
add
add
add
add
add
imul
add
pusha
add
add
add
add
sti
add
add
add
add
add
jle
movsl
add
int3
add
add
add
sub
pop
add
add
add
add
add
push
add
add
add
fiadds
add
add
add
add
movsl
add
add
pop
add
add
mov
add
add
add
add
add
add
add
pusha
add
pop
add
add
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
sub
adc
add
pop
add
add
add
cmp
push
sbb
and
push
add
pop
add
dec
add
icebp
add
push
add
pop
add
add
add
add
sbb
push
add
add
add
cmp
mov
add
add
sub
or
arpl
cmp
pop
add
add
push
add
add
add
add
add
add
pop
add
add
add
and
movsl
add
add
dec
add
popa
add
add
movsl
add
dec
add
xor
or
add
add
add
add
push
add
add
push
add
add
movsl
add
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
add
add
add
add
mov
add
add
int3
add
xor
push
add
pop
add
add
push
add
push
add
movsl
add
add
mov
jg
push
and
push
push
jp
fsqrt
test
mov
cmpsb
cmp
lret
sbb
sbb
std
fs
lods
mov
xchg
mov
shrb
aam
repz
add
and
jecxz
insl
adc
rclb
push
mov
xchg
imul
sub
mov
mov
adc
icebp
and
mov
pop
mov
dec
pxor
inc
movsl
je
daa
or
jo
iret
bound
pop
repz
add
inc
mov
inc
into
inc
pavgb
es
add
cmp
push
pop
test
lret
pop
push
jg
lret
movsl
push
mov
mov
sbb
xsha256
iret
xchg
repz
sbb
push
mov
imul
sub
push
xor
into
adc
inc
pop
test
stos
mov
dec
jns
rclb
cmp
sbb
cmp
data16
dec
xchg
xchg
push
sub
lret
sub
adc
push
stos
fwait
in
stos
lcall
push
push
iretw
leave
iret
out
pop
ljmp
xchg
mov
mov
mov
xor
cwtl
cmpsl
nop
sub
adc
xor
cwtl
sub
sar
sbb
out
push
jp
inc
aaa
push
fstp
mov
lods
insb
iret
xor
xchg
adcb
inc
ret
stos
lds
movsl
divl
xor
sahf
popf
addr16
pushf
out
inc
into
pushf
sbb
rcrb
inc
push
xor
lods
aam
iret
pop
imul
jnp
push
call
xorb
jl
addr16
imul
mov
shlb
aad
imul
rcrb
clc
cmp
movsb
pop
sbb
push
jl
aam
mov
hlt
mov
jecxz
adc
inc
mov
dec
hlt
jnp
addl
enter
inc
dec
xor
insl
and
jne
fwait
cmc
fcomps
cs
jecxz
ljmp
sub
push
add
mov
adc
mov
xchg
out
inc
xor
sbb
push
mov
jo
sub
pusha
js
xlat
in
loopne
sub
and
inc
mov
xchg
shl
add
cs
xor
shrl
dec
mov
jle
jae
adc
inc
dec
jmp
fisttpl
repnz
outsb
fs
ret
xchg
out
push
iret
out
mov
and
inc
dec
add
fcmovb
dec
or
movntps
gs
ljmp
xchg
rcl
test
jg
adc
notb
and
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
addr16
cmpsb
sbb
negl
jge
and
clc
mov
push
std
ja
fldl
inc
sub
or
out
dec
mov
stc
pop
dec
push
std
adc
data16
inc
and
xor
add
divb
pop
mov
jae
push
scas
xor
push
lds
jne
xchg
or
mov
inc
mov
ficoml
dec
mov
adc
aad
ret
mov
mov
cld
sbb
imul
push
fldenv
adcb
mov
out
inc
pop
mov
sub
inc
xor
push
add
int
jb
add
or
std
addl
mov
dec
es
rcl
cmpl
xchg
jbe
pop
inc
imul
dec
xchg
mov
push
xor
and
xor
mov
sub
insl
mov
ss
and
mov
cmp
push
int
std
mov
cmpsb
sbb
divb
pop
push
movsb
ss
test
xchg
push
in
cmc
data16
add
dec
fistpll
imul
pop
mov
mov
inc
lods
aas
out
inc
jecxz
xchg
add
and
fimuls
in
mov
mov
mov
jno
push
cwtl
adc
adc
cmc
js
or
out
dec
mov
push
lea
std
jbe
data16
inc
cmp
xchg
or
out
dec
mov
push
lea
std
jbe
data16
inc
cmp
stc
gs
push
add
dec
lcall
pop
ret
stc
push
pop
mov
pop
stc
mov
outsb
mov
scas
adc
enter
into
xchg
push
outsl
subl
push
into
les
adcl
insl
sar
enter
mov
into
dec
adc
inc
pop
enter
jl
xlat
sub
fdivp
jecxz
call
dec
mov
mov
scas
loop
jp
mov
cmc
inc
add
mov
and
pop
aam
lds
add
pop
add
hlt
pusha
or
mov
sar
dec
mov
nop
hlt
jl
call
xor
mov
push
das
xchg
shlb
cmp
jmp
mov
aas
mov
mov
sub
cwtl
pusha
rol
cmp
dec
mov
xor
neg
pop
xor
xor
aaa
mov
dec
and
push
and
inc
push
jg
js
fildll
ss
lret
clc
fidivs
xchg
or
cmp
popa
hlt
mov
mov
stc
sbb
pop
imul
or
push
xor
int
scas
push
popa
dec
rol
inc
add
mov
mov
and
fwait
or
scas
mov
push
adc
cmp
popf
psrld
es
out
jg
mov
outsl
scas
call
aas
repz
ficompl
mov
das
pushf
das
call
into
xor
shl
aas
dec
int
out
in
adc
mov
cmp
pop
imul
adc
rcrl
pop
mov
ret
mov
test
mov
sbb
pusha
outsb
stos
xchg
incb
inc
sub
cld
fwait
jb
call
mov
out
fs
loopne
mov
in
xor
mov
pop
popa
mov
jmp
push
mov
mov
out
and
cli
and
push
int3
scas
adc
push
fldt
aam
test
or
sbb
fnstcw
jp
div
xchg
mov
pushf
in
push
aad
aas
aas
lods
mov
cmp
pop
idivb
lret
iret
push
loopne
and
ror
sub
pop
sub
popa
fldl
hlt
xor
nop
jmp
sti
std
fs
movsl
gs
sbb
bnd
iret
push
push
dec
jl
add
out
jnp
jg
cmp
mov
mov
inc
int3
cmpsb
and
pushf
or
mov
pop
inc
or
xor
jl
jg
xor
inc
mov
adc
shr
mov
flds
xchg
xlat
xorb
add
inc
jg
test
rorl
xchg
push
and
shl
pushf
or
mov
xor
out
cmp
lds
arpl
jg
test
lods
sub
js
xchg
jb
inc
adc
inc
out
out
ret
add
shr
clc
xor
movsb
or
loopne
mov
inc
or
ret
jb
xchg
nop
xor
push
mov
ljmp
mov
ret
movsb
rorb
ss
movsl
or
pop
das
mov
cmp
pop
mov
sbb
cs
scas
sub
mov
and
cwtl
cmovae
dec
sbb
fnstcw
inc
mov
dec
cmp
out
lock
xor
leave
sahf
sahf
mov
popf
mull
cltd
fnstsw
add
jmp
mov
cmpsb
push
lret
dec
in
popf
and
dec
mov
scas
pop
mov
outsb
fnstenv
inc
fldl2e
mov
push
push
lds
test
loopne
dec
mov
mov
cld
mov
sub
lods
test
hlt
cmpsb
mov
xchg
pop
fidivrs
mov
test
mov
mov
xchg
xchg
sbb
orl
fiadds
jle
dec
mov
aam
cmp
jg
enter
jns
mov
mov
in
ja
cmpsb
xor
pop
fs
pop
in
inc
jb
mov
loopne
stos
popf
add
filds
pop
pop
jne
xchg
xchg
cmp
jae
jns
inc
int
in
out
adc
cmpsb
xchg
pop
sub
jae
insl
sub
adc
mov
gs
xchg
in
xchg
fildll
xchg
mov
mov
push
aam
out
jns
push
inc
push
das
lcall
inc
int3
fnsave
stc
ror
gs
fsubrp
mov
ror
add
push
das
popa
call
sbb
sub
mov
lods
jbe
cwtl
mov
inc
popf
adc
and
push
inc
movl
repnz
fldenv
bound
xchg
lods
dec
cmc
and
cmp
inc
or
sbb
insl
repz
loop
jae
jg
xchg
jge
xchg
lods
jns
data16
jae
mov
mov
adc
xchg
cs
mov
jmp
enter
test
fisttpl
dec
pushf
out
cli
and
or
pusha
push
js
lods
jnp
and
in
out
adc
adc
test
dec
imul
loopne
sbb
int
pusha
add
mov
movsb
popf
call
jmp
bound
jns
mov
xor
scas
sub
mov
and
data16
js
lods
outsb
or
popf
pushf
xor
fnstsw
adc
call
sahf
icebp
in
or
cmpsl
xlat
push
loop
mov
jb
sbb
cld
enter
inc
les
fcmovne
inc
xchg
lds
sbb
mov
adc
push
jp
fstpt
out
negb
jl
mov
lcall
mov
clc
xchg
add
mov
icebp
sarl
popl
sub
lods
loope
xchg
mov
push
mov
test
test
pop
mov
mulb
xchg
dec
pop
dec
dec
adc
xchg
loop
lock
ljmp
subl
aad
js
cmc
push
cmp
xchg
sub
push
push
adc
xchg
rorl
ffreep
fld1
mov
cmpsb
ss
push
sub
cwtl
mov
aas
loop
out
and
pop
fsubp
xchg
pusha
mov
xor
jb
out
push
test
sub
inc
std
cwtl
cwtl
cmp
cmpsb
test
adcl
stos
dec
lahf
aad
fmuls
lods
fadd
mov
cmp
lods
xchg
sbb
cmp
pop
pop
lahf
cmp
jnp
cli
fsubs
xchg
es
out
add
dec
scas
aas
lret
sub
push
ror
mov
cmpsb
idivb
cli
cltd
or
jo
outsl
xor
mov
jmp
pop
mov
dec
pop
add
arpl
scas
ret
pop
arpl
or
rcll
inc
jnp
push
sti
loop
sbb
sarb
mov
les
mov
or
mov
cmpl
std
rep
mov
jb
xchg
test
add
imul
cmp
or
shl
sbb
loope
or
cmp
mov
push
pop
js
pop
call
xchg
adc
sub
mov
and
popa
fisttpl
inc
push
int
insb
inc
scas
jnp
in
push
and
leave
pop
add
push
mov
jo
scas
inc
addr16
mov
jo
pushf
mov
int
aad
nop
xchg
adc
xor
rorb
mov
xchg
and
fdivs
xlat
jno
cltd
and
mov
mov
cmp
repz
pop
mov
jne
mov
ljmp
clc
ret
js
int
outsb
cld
les
jne
mov
jl
mov
out
fmull
insl
add
test
and
mov
cmc
sbb
pop
call
aaa
xor
sub
mov
and
mov
pop
xor
das
xor
cmp
shrb
fdivs
sbb
add
inc
into
mov
cmp
mov
cmpsb
mov
pop
dec
cmc
icebp
or
rcrb
sbb
dec
jns
ror
call
into
xchg
jo
and
or
movsl
js
mov
and
stos
or
adc
faddl
dec
test
adc
int3
dec
mov
jno
filds
lcall
sbb
push
outsl
sbb
dec
insl
subb
add
outsl
cmp
daa
pop
pop
mov
dec
inc
sub
adc
in
and
jbe
int
cli
ret
dec
inc
sub
add
int3
jb
les
mov
jae
xor
add
cmp
dec
cmpsb
scas
pushf
and
mov
jl
sbb
jg
loopne
shl
aam
xchg
lods
testl
aad
stos
popa
adc
jno
test
fistl
jae
push
dec
mov
cmp
das
sbb
jmp
les
gs
out
adc
ja
mov
out
sub
sub
sub
fs
pop
xor
jo
cld
popf
or
push
ret
pop
pusha
icebp
jp
push
in
aam
dec
shrl
out
mov
dec
inc
mov
add
xor
add
dec
sti
mov
dec
jle
pop
inc
dec
out
pop
aaa
cs
mov
lea
add
mov
or
mov
pop
mov
ficoml
jle
xchg
dec
loopne
inc
xchg
cld
and
les
dec
ret
and
and
hlt
push
and
lods
aaa
dec
sbb
iret
sbb
xor
fcomp
decl
lods
dec
sub
and
adc
or
jge
je
loopne
fbld
sub
mov
data16
push
xchg
sbb
cmp
je
fcmovnb
lods
mov
sti
mov
sub
xor
jno
addr16
xchg
add
mov
test
mov
rcll
and
jnp,pn
or
adc
mov
mov
std
stc
aam
mov
aam
mov
enter
paddw
ret
sarl
cmp
and
shl
mov
xchg
aas
pop
pop
ss
xlat
xchg
sti
test
str
sub
or
cmp
adc
xor
mov
push
sbb
mov
imul
int3
jnp
xor
ljmp
fidivrs
addr16
enter
aas
pop
mov
fyl2xp1
mov
cmc
cmp
es
or
cmp
scas
jmp
xchg
fldenv
push
jl
mov
sub
ds
dec
cmp
mov
and
xor
pop
push
dec
sbb
sbb
jne
scas
out
dec
int
jne
cmc
dec
imul
in
push
jle
lods
stos
ss
cmc
fistpll
pop
jp
bound
lret
xchg
enter
aas
shrl
fdivr
ds
or
subl
ja
mov
in
pusha
push
jne
cmpsb
dec
or
pop
mov
and
js
jg
mov
lea
das
notl
and
xchg
outsl
in
out
mov
mov
cld
pop
lret
pop
int
inc
loopne
xchg
popf
xlat
stos
push
mov
loopne
add
add
aam
add
mov
cld
test
cmpsb
adc
mov
mov
lahf
dec
les
xlat
aaa
cmp
pop
shr
cs
fistl
aaa
inc
insl
call
icebp
jmp
ret
pushf
lret
fstpl
dec
repz
or
push
cmp
aad
mov
jp
lahf
or
int
in
ficomps
inc
adc
cmp
enter
jo
fs
push
jne
clc
dec
lds
jge
scas
sub
repz
ds
shlb
xchg
push
cmpsl
in
inc
pop
cwtl
cmp
add
push
fisttpl
outsl
aaa
aam
and
iret
fwait
stc
mov
mov
and
mov
dec
sar
pop
call
xchg
or
mov
cmp
inc
sti
mov
push
mov
in
aas
fiaddl
add
pop
xor
mov
popf
pusha
xchg
repnz
in
inc
pushf
lock
das
push
std
xchg
leave
push
xor
push
jne
xchg
dec
popa
dec
popf
loopne
aas
enter
scas
add
cltd
insl
xor
test
shl
jp
lock
lea
sbb
repnz
xchg
scas
int3
xchg
out
cmp
cmp
rcl
orb
dec
bound
adc
test
adc
sbb
add
jge
rorl
or
pop
jno
push
lret
dec
icebp
and
mov
mov
mov
xor
jb
add
stos
mov
push
imul
subl
mov
push
sbb
test
cmpsb
cld
jg
add
daa
pushf
decb
xchg
pop
jnp
sub
pop
pushf
ficoml
xchg
sete
push
add
mov
lds
shlb
cld
push
aad
clc
aas
mov
pop
or
pop
data16
xor
movsl
stos
faddl
push
mov
mov
cmp
popa
int3
fstl
xchg
leave
outsl
cltd
pop
dec
into
mov
push
or
and
test
adc
rclb
imul
and
out
addr16
jae
jnp
adc
xchg
sahf
lret
sub
mov
lods
jmp
ror
pop
mov
addr16
mov
mov
push
cmovb
cli
ds
sbb
pop
mov
jge
cmpsl
dec
lahf
jo
in
fsubrs
inc
fisubrl
mov
aam
fbld
mov
xor
daa
xlat
lods
xchg
mov
add
add
std
dec
inc
aad
push
outsb
subl
mov
loopne
add
loop
push
pop
mov
ret
out
pop
or
pop
adc
enter
outsl
pop
rcll
in
sbb
addb
loope
mov
sub
loopne
lods
sbb
loope
pop
jl
iret
sbb
ret
jp
cltd
int3
jl
test
insb
jge
inc
adc
push
pop
adc
shll
ret
add
sub
cmpsb
pop
incb
es
dec
in
or
sbb
pop
bound
cmp
repz
int3
fwait
outsb
aam
cmp
xchg
mov
test
xchg
inc
dec
imul
xchg
rolb
pop
pop
jl
inc
movl
fadd
outsb
incb
dec
mov
faddl
inc
movsl
js
dec
outsl
mov
xchg
pop
sub
adc
add
cltd
je
sub
mov
orl
icebp
lea
loop
ja
scas
xor
clc
bound
mov
cmp
xchg
and
pop
adc
fstp
mov
mov
mov
sbb
fwait
jl,pn
in
mov
or
push
cmp
xor
mov
ljmp
les
out
or
xor
dec
sbb
std
test
test
popf
dec
or
ret
and
jmp
into
xorl
ret
fstpl
insb
loopne
or
mov
pop
lock
lods
push
in
daa
fsubrs
pop
add
dec
and
xor
lahf
fdivrl
les
xor
sbb
sub
push
repz
push
mov
fwait
jge
outsl
iret
xchg
sbb
repz
jne
in
lods
mov
pop
xor
mov
add
push
pop
push
cli
hlt
addr16
lcall
roll
sbb
aam
cld
test
clc
and
mov
pushf
and
push
dec
shll
fisubs
daa
push
xor
xor
or
mov
das
or
mov
das
xchg
add
lcall
cli
push
clc
test
and
lcall
mov
dec
les
push
mov
fisubrs
cmp
mov
add
pushf
xchg
fs
dec
pop
mov
popa
testl
lods
sti
cmp
scas
xor
cmp
jns
add
push
call
jmp
push
insb
inc
mov
sub
fistps
test
jl
sub
lret
movsl
inc
xlat
cli
hlt
sub
dec
nop
xchg
and
loop
mov
pop
pusha
stos
dec
xchg
adc
push
jmp
fdivr
loope
aam
cmp
lret
sbb
outsb
xchg
pushw
sbb
fbstp
push
in
in
nop
int
sbb
lods
fsubrl
or
pop
adc
inc
cwtl
jns
jg
jns
dec
lods
mov
pop
aam
clc
lahf
cltd
pop
imul
std
movb
or
or
add
rorl
adc
inc
mov
adc
out
and
rcll
idivb
cs
hlt
jecxz
add
sahf
jne
mov
orb
out
cmp
icebp
js
sarl
test
inc
adc
movsb
jle
ja
or
mov
imul
mov
data16
fildl
loopne
ss
pop
scas
pop
ret
mov
loop
mov
push
mov
add
movsl
pop
and
or
and
xor
add
sub
pop
pusha
xor
movb
in
pop
mov
or
bound
les
sbb
addl
jp
mov
xchg
fisttpl
ds
push
adc
dec
xchg
cld
inc
dec
lea
xorb
out
pop
mov
or
mov
xchg
add
xorb
push
cld
xchg
xor
mov
push
mov
xor
mov
mulb
mov
ljmp
sub
xchg
popl
ret
add
pop
scas
sub
and
lret
and
jo
xor
out
es
ret
call
adc
iret
cmc
xchg
and
jbe
icebp
mov
and
sub
pop
jmp
pop
pop
in
pop
and
xor
das
xchg
and
mov
add
mov
and
and
mov
mov
and
lret
loopne
mov
and
aad
xlat
hlt
pop
pop
cltd
ds
pop
jno
insl
jae
mov
mov
push
mov
add
div
mov
stos
and
rcll
sub
sbb
sbb
sub
mov
adc
insl
xor
lods
es
je
jle
mov
lods
push
and
push
mov
insl
loope
add
jo
notb
add
push
push
and
mov
je
in
mov
lahf
icebp
mov
popf
daa
mov
inc
pop
popf
test
mov
mov
aad
push
popa
cli
call
pop
jnp
mov
enter
ljmp
lcall
push
lds
ret
shll
daa
shrl
jp
adc
popa
jae
aaa
aam
mov
or
iret
jge
insb
or
repz
repz
dec
sub
cmp
cld
xor
fwait
pop
push
mov
imul
and
mov
div
adc
hlt
fs
pop
mov
inc
mov
jle
cmpsl
push
jns
lock
sbb
out
add
lock
adc
xor
or
sub
mov
sbb
dec
rcrb
push
mov
aaa
jecxz
divb
sub
add
push
cmp
ds
mov
xor
mov
jo
xchg
mov
aad
aas
andl
clc
ret
fisubrl
or
aaa
arpl
push
divl
cmpsl
dec
xor
cli
lret
or
test
aas
pop
jo
cwtl
cmp
sbb
shll
or
sbb
mov
arpl
jno
pop
ror
sub
inc
popf
pop
sbbl
enter
fildll
pop
xor
jae
test
xchg
mov
jmp
aas
sbb
es
scas
es
push
push
fmul
fucom
fwait
xlat
or
test
lods
mov
lret
push
mov
aam
xchg
dec
xchg
fwait
pusha
push
popa
mov
xchg
push
mov
dec
pop
testb
ret
cmc
rorl
xchg
cli
mov
arpl
xorl
out
std
jmp
mov
hlt
cmpsl
pavgw
and
loop
bnd
scas
sub
pop
pop
add
out
add
mov
push
lcall
adc
jmp
push
mov
lds
mov
adc
sub
xchg
popa
fidivrl
das
enter
mov
push
stos
test
rolb
pushf
jge
aas
bound
xlat
pop
iret
xor
or
mov
add
cs
push
sbb
xchg
lea
jne
shr
inc
fisubrs
adc
fdivs
xor
adc
jb
outsl
inc
testl
fbstp
ret
dec
xchg
mov
into
sbbl
in
dec
decl
or
push
ficoms
adc
push
stos
add
arpl
cwtl
scas
dec
cmc
mov
xchg
sub
movzwl
adc
xor
dec
xchg
lds
cwtl
push
jnp
sahf
add
in
push
mov
jno
xor
cli
jge
push
or
int3
push
push
lods
js
incl
push
sbb
scas
aaa
mov
repz
sarb
push
roll
xor
mov
sbb
enter
ljmp
lock
fdivl
out
and
les
in
mov
rclb
cmp
sahf
adcl
inc
imul
add
insb
cmpsl
aas
mov
or
stc
scas
das
hlt
and
jge
sub
cmp
dec
or
testl
jge
insl
out
dec
mov
push
lea
std
jbe
data16
inc
cmp
xchg
or
out
dec
mov
push
lea
std
jbe
data16
inc
cmp
xchg
or
out
dec
mov
push
lea
std
jbe
data16
inc
or
or
out
int
inc
ss
mov
push
lea
gs
and
inc
stos
jne
or
lahf
inc
lret
aad
lds
hlt
sbb
or
movsl
dec
push
mov
mov
or
test
sbb
stos
jne
mov
xor
lds
inc
cmpb
in
add
mov
xor
pusha
into
push
adc
xchg
cli
fnstenv
loop
cs
add
and
adc
or
mov
push
cmp
jae
sbb
jp
mov
mov
add
adc
push
inc
aad
xchg
scas
mov
pop
inc
imul
loopne
xchg
jnp
mov
adc
and
jnp
cs
xchg
movsl
mov
sbb
enter
fisttps
lret
mov
fsub
or
sub
push
dec
pop
mov
jnp
push
decl
int
int
jecxz
sub
adc
in
adc
jp
xchg
mov
movsb
iret
or
adcl
mov
in
xchg
push
test
and
add
push
pusha
test
inc
scas
mov
outsl
andl
sbb
sub
incb
ljmp
popa
fdivs
pop
test
lea
insb
fisubrs
mulb
in
mov
in
push
lret
inc
call
xor
cmp
sub
sbb
or
pop
movsl
dec
push
mov
mov
sub
sbb
or
pop
movsl
dec
push
mov
aaa
cmpsl
bound
clc
shrl
inc
mov
jp
movb
test
xchg
jo
sbb
or
insl
sub
and
and
jbe
or
add
xor
cmc
mov
mov
aas
pop
test
push
mov
jnp
push
mov
xchg
ret
jnp
adc
push
adc
dec
pop
dec
mov
mov
lret
ret
dec
cmc
nop
jb
inc
jo
cmp
iret
popf
dec
pop
subl
xrelease
inc
bound
mov
or
dec
mov
or
cwtl
je
jmp
or
jle
dec
fwait
in
jno
adc
int3
lret
imul
rclb
popf
xchg
jo
out
je
fsubs
fwait
sub
daa
aam
dec
dec
add
mov
or
pop
mov
in
out
sbb
aas
sbb
sub
add
mov
jp
pop
xor
mov
mov
pop
aad
inc
dec
sub
ds
pop
movsl
and
iret
and
sub
insl
bound
add
lods
xor
cmp
xchg
mov
mov
inc
dec
popf
jbe
out
inc
sbb
dec
pusha
lcall
in
pop
adc
xchg
mov
dec
cmpsb
mov
loopne
ret
cli
lcall
dec
insb
mov
pushf
mov
inc
add
pop
mov
cmp
pop
imull
repnz
pop
imul
or
inc
roll
out
jae
mov
sbb
adc
lock
loop
orl
xor
lock
flds
mov
dec
adc
jp
mov
push
inc
mov
dec
das
imul
fldenv
pop
adc
push
mov
pop
add
xchg
lods
mov
daa
mov
fstpl
es
pop
dec
pop
in
std
rep
and
cmc
inc
int
lds
fwait
clc
add
test
xchg
add
dec
mov
push
lds
popa
push
lret
fcoms
or
int
adc
ficoms
mov
in
xchg
dec
mov
rcrb
andl
icebp
adc
fwait
subl
mov
mov
inc
sub
je
data16
mov
jp
sub
adc
add
outsl
test
xchg
sub
pop
push
pusha
das
add
icebp
xor
mov
cltd
popa
or
and
jecxz
aad
jo
inc
repz
mov
inc
addl
xor
aad
inc
xor
jecxz
jae
ja
aam
mov
sub
out
mov
and
cmp
xchg
lret
xor
movsb
in
loop
mov
xor
test
xor
arpl
xor
jp
adc
das
out
test
xor
adcb
je
jecxz
jo
fsubrs
stos
or
aad
and
sbb
mov
in
rcll
jnp
jl
outsb
mov
adc
push
sbb
into
enter
and
add
and
stos
jecxz
mov
mov
aam
jb
adc
movsl
shll
xchg
mov
repz
fsubp
dec
xchg
jbe
inc
adc
cmp
orl
dec
add
sub
mov
mov
mov
in
repz
mov
test
push
cmpsb
xchg
dec
popa
xchg
sub
push
jl
push
jl
into
mov
dec
outsb
pop
aaa
push
sbb
test
and
mov
mov
add
sub
pop
pop
mov
stc
addr16
pop
mov
and
int3
jle
or
push
push
out
mov
loope
inc
andb
fwait
ja
dec
pop
sbb
js
movl
scas
mov
lds
fstp
imul
scas
and
out
mov
fmuls
enter
push
addl
jecxz
inc
push
leave
stos
outsb
cmp
fcomps
rclb
mov
in
xchg
daa
or
stos
and
xchg
jg
cld
mov
sub
sbb
sbb
cld
push
shll
lea
fimull
mov
sahf
ja
xor
or
sub
xchg
jle
lcall
or
mov
mov
flds
cltd
xor
out
inc
ret
jb
xor
lret
iret
jge
int3
dec
scas
sub
imul
or
fdivs
jbe
out
das
dec
jbe
ja
mov
mov
jle
inc
mov
mov
fwait
jo
sbb
js
repz
cwtl
lahf
rorb
push
mov
pop
cs
xchg
inc
out
iret
leave
loop
sysexit
inc
xchg
jns
dec
mov
xchg
test
xchg
add
scas
push
jge
js
xor
dec
jecxz
or
xchg
ljmp
sti
adc
xchg
test
scas
mov
gs
xchg
xchg
dec
mov
rcll
mov
fwait
sub
std
inc
mov
inc
repz
jne
jle
mov
fstpl
push
out
js
icebp
imul
sub
mov
iret
lahf
insl
rcrl
jno
add
mov
cs
inc
jne
or
xor
cmp
push
mov
stos
jae
fdecstp
mov
jbe
jae
jne
mov
inc
or
mov
cmp
aad
mov
jp
out
pop
xchg
test
aad
mov
iret
mov
mov
sub
bound
jecxz
loope
jno
mov
imul
adc
cmp
mov
and
test
negl
loop
cld
mov
and
lds
das
mov
and
pop
adc
add
inc
mov
aad
inc
insb
loopne
cmp
xorl
inc
push
pop
pop
pusha
in
jmp
xchg
push
mov
mov
dec
js
inc
loop
and
les
lret
stos
xor
sub
test
inc
jns
mov
pop
mov
stc
data16
and
jbe
xchg
inc
cltd
int
xchg
jle
out
hlt
notb
sub
cwtl
pop
adc
add
sub
mov
jns
and
in
test
add
clc
mov
xor
testl
adc
mov
enter
dec
into
mov
xchg
push
repz
loop
dec
adc
sbb
sbb
loope
stos
and
lods
sbb
add
rcl
mov
in
aaa
sbbb
movsb
xchg
cmp
testl
lods
inc
test
dec
cld
and
shll
pop
out
hlt
test
and
lock
out
pop
test
pop
or
cmpb
fs
jmp
js
in
push
mov
pop
push
inc
shr
push
cmp
and
push
enter
fnstsw
cwtl
and
adc
dec
lret
arpl
pop
add
inc
je
cs
push
jae
pop
inc
andl
jmp
cmp
jnp
call
shll
mov
aaa
mov
fiadds
and
popf
icebp
mov
jge
xchg
fucomi
in
test
imull
push
push
mov
fwait
psubq
icebp
test
testb
and
push
and
inc
add
aam
mov
jae
mov
call
adc
divb
pop
ss
sub
shlb
push
sub
fadd
imul
pop
sub
adc
cmc
xchg
jecxz
out
gs
pop
jbe
adc
icebp
add
in
lods
and
push
lods
sub
inc
xlat
and
fistps
dec
xor
jp
mov
sti
inc
adc
imul
movsb
xchg
pop
push
fists
or
xchg
sbb
sub
push
push
in
out
scas
push
out
fstpl
xchg
idivl
push
cmpsb
and
mov
push
mov
sub
xchg
mov
movsb
clc
mov
xchg
ds
mov
or
jg
idiv
ficoml
adc
xchg
dec
rcrb
jle
lret
call
sub
add
ss
add
cmp
add
add
xchg
outsb
data16
je
outsb
stos
push
push
das
lcall
sti
add
imul
add
scas
xor
push
ret
fldt
shrb
imul
xchg
jmp
gs
loopne
aad
cmp
mov
inc
push
negl
cmc
icebp
data16
repnz
push
push
cmp
je
push
cmpsl
mov
dec
and
dec
adc
fimull
imul
jmp
xor
clc
enter
stc
loope
jge
dec
dec
out
jecxz
push
pop
fnstsw
mov
out
repz
and
testl
fsubrl
pusha
sbb
movsl
hlt
sbbb
stos
mov
in
cmc
jae
push
fstpl
iret
jmp
pusha
in
ret
jo
cmp
fiadds
adc
jge
jg
sti
or
sub
lcall
dec
out
fcompl
scas
cmp
mov
adc
pop
loopne
push
cmp
ret
mov
xlat
pop
sbb
sub
jae
or
inc
fcompl
lret
sub
cmp
cmc
shrl
cmp
mov
ficoms
xchg
test
dec
cmp
out
dec
xchg
mov
mov
andb
bound
inc
pop
fstl
pusha
aad
scas
pop
inc
ds
mov
hlt
pop
cli
in
js
jno
sbb
xor
in
fimuls
stos
in
cmp
sbb
xchg
out
dec
adc
add
std
cmp
mov
cmp
jl
add
fbld
enter
or
jl
insl
xchg
mov
scas
sbb
fadds
lods
add
mov
pop
pop
xor
adc
cmp
daa
mov
jb
fistps
xchg
notb
jno
jno
cmp
fdivrl
aam
fdivrs
in
inc
jmp
movsl
add
sahf
push
shll
hlt
fnstenv
out
pop
ljmp
xchg
hlt
adc
dec
jmp
xor
hlt
pop
cwtl
sarl
repnz
push
es
jns
adc
jo
leave
xchg
pushf
push
or
in
out
or
and
and
mov
punpckhwd
cmp
aam
leave
sahf
mov
mov
adc
incl
lret
sti
mov
loope
and
in
cmpsb
push
sahf
sbb
das
jns
test
std
or
jge
imul
xor
push
sbb
sbb
inc
push
or
cmp
btcl
lods
adcb
fbld
push
ss
insb
ja
push
mov
mov
scas
pop
jo
sub
paddb
dec
inc
inc
mov
inc
sub
hlt
sbbb
cmp
push
push
lret
mov
fcmovbe
fidivl
xor
inc
xchg
in
push
aad
xchg
into
or
jb
xchg
and
divb
adc
shl
or
rorl
int
aaa
jnp
pop
sub
mov
cmpsb
add
xorl
sbb
sbb
add
push
gs
sub
rclb
lahf
jns
jno
mov
nop
inc
icebp
push
mov
iret
mov
ret
mov
sahf
push
inc
lds
std
and
lahf
cld
mov
sbb
dec
inc
jle
pop
outsl
leave
mov
mov
lock
pop
fs
jo
cmp
in
loop
and
addb
dec
xchg
cmc
pop
ret
filds
cli
xor
jbe,pn
ss
cmpl
lcall
sbb
int3
pop
aam
in
sbb
jbe
and
pop
xor
pop
shlb
xchg
stos
add
mov
fdivrs
test
hlt
mul
roll
repz
in
adc
je
jecxz
xor
xchg
pusha
and
andl
pop
in
rcrb
xlat
mov
adc
cs
xor
gs
push
ret
insb
es
fstpl
cmpsb
sub
adc
pop
lds
sar
loopne
insl
call
xor
insb
test
mov
dec
cmp
dec
dec
out
and
dec
push
sbb
add
adc
frstor
mov
inc
push
stc
add
mov
mov
xchg
aad
sbb
prefetch
or
jns
pop
mov
xor
sarl
test
ljmp
js
dec
mov
shll
std
mov
cmpsl
inc
mov
je
cld
adc
or
loope
imul
jbe
test
outsl
push
addb
pop
movsb
out
mov
fadds
rcrb
or
int3
jg
mov
dec
push
bnd
fwait
mov
aas
jl
sti
jns
movsl
fwait
push
mov
fidivl
ja
and
mov
stos
mov
je
shll
and
push
add
add
cmp
cmp
insl
fmuls
sbb
rclb
subb
sub
lock
or
jl
jg
inc
mov
push
rcrl
mov
push
addr16
std
jge
pop
aam
inc
dec
aam
pushf
scas
pop
mov
xlat
sbb
stos
xchg
stos
lods
mov
nop
shld
repz
pushf
mov
or
nop
mov
std
lcall
std
and
out
mov
enter
fldt
mov
pusha
xor
mov
mov
lods
rolb
mov
dec
add
jge
pop
lea
xor
imul
cmpsl
shrb
cmp
xchg
cmc
cs
mov
test
add
fcmovnbe
mov
push
mov
repz
mov
popf
into
add
jmp
sub
mov
mov
ljmp
cmovno
loopne
loopne
sub
add
nop
shrl
mov
fstl
fistpl
fimull
mov
lret
popa
gs
push
xchg
fs
nop
fstpt
push
jnp
lock
mov
or
pop
xchg
clc
pop
fs
inc
sbb
subl
jmp
popf
aam
outsb
rcrl
cmc
scas
or
sbb
push
xor
dec
pop
inc
cmp
mov
mov
xor
and
sub
lret
jp
aad
loop
fisttpl
test
or
test
fbstp
mov
add
ss
int3
add
dec
rcll
push
inc
xchg
rcll
mov
fisttps
jge,pn
mov
dec
and
fildll
add
push
pop
sahf
loop
shld
fisubrl
xchg
ret
les
fdiv
jbe
sbb
xchg
cmpsl
pop
in
pop
icebp
dec
add
ss
out
movsb
jmp
jl
jmp
pop
push
dec
sbb
xchg
mov
fisubrs
or
and
and
xchg
pop
movl
mov
cmp
insl
xchg
es
lret
sarl
jp
cmp
lods
repz
pushf
xchg
pop
and
addr16
mov
pop
sub
or
imul
pushf
movsl
adc
add
shll
inc
rorl
and
cwtl
ret
pusha
and
lret
outsl
add
call
mov
notl
mov
call
jo
xor
icebp
mov
enter
imul
jnp
daa
ja
js
jae
jl
insl
mov
lret
incb
aad
inc
loop
rclb
ja
stos
je
enter
bnd
cmp
jmp
std
sbbb
ds
rcr
jg
sbb
fisubs
cwtl
idivb
sbb
mov
shrl
ficoms
push
fisubrl
or
popf
repz
aas
mov
shrl
fs
data16
orl
test
push
aas
pop
cwtl
jp
aam
jb
iret
adc
outsl
push
add
adc
cld
mov
fdivs
or
mov
xchg
push
scas
jo
js
andb
repnz
mov
add
xchg
pop
xor
test
lret
dec
mov
stc
bound
jae
popf
mov
xacquire
dec
fldcw
cmpsl
insb
or
xchg
into
sbb
pop
mov
mov
movsb
push
cltd
repnz
sarb
ja
push
aam
ds
lret
add
jg
mull
sub
mov
mov
jle
shll
jno
and
mov
insb
cld
push
arpl
mov
xor
pop
sub
sbb
mov
iret
sbbb
insb
cmc
mov
add
mov
and
add
scas
in
add
out
cmpsl
push
imul
pop
loope
mov
call
sbb
pop
popf
mov
mov
jo
js
loopne
mov
icebp
dec
push
stos
sub
mov
vmwrite
arpl
or
test
gs
add
fcoms
rorb
mov
or
stos
shl
icebp
nop
bound
xchg
adc
add
sbb
xor
xchg
add
inc
mov
pop
fbstp
adc
sub
outsb
add
and
je
das
aas
mov
lret
push
dec
pop
jp
cs
inc
es
cmpsb
mov
inc
ret
aam
mov
mov
xchg
scas
jmp
cmp
faddp
dec
pop
cltd
jnp
sbb
inc
enter
mov
sub
inc
test
loope
das
cmpsl
cltd
inc
lods
adc
dec
mov
ss
sub
pop
pop
mov
imul
xchg
lods
xchg
add
ret
mov
push
pop
repz
insb
addb
sbbl
xchg
jnp
cld
loop
test
ret
xlat
es
jbe
int
iret
sbb
mov
fs
pop
sbb
enter
enter
repnz
into
pop
ret
jl
imul
leave
aas
mov
enter
xchg
mov
rorb
jnp
fisttps
push
cli
in
mov
ds
outsb
xchg
jecxz
sbb
cmpsb
punpcklbw
push
and
mov
pop
stos
sub
mov
and
push
sub
out
pusha
mov
cmp
scas
mov
sub
cmp
inc
cmp
xchg
xchg
jg
mov
fistl
or
fsubp
ljmp
add
adc
push
lds
mov
cs
cli
mov
loope
mov
or
xchg
mov
test
loop
cmp
dec
fdivr
xchg
dec
sub
pop
mov
das
mov
or
push
in
and
test
mov
inc
fdivrs
loope
dec
sub
lods
inc
pop
push
sbb
es
les
out
xchg
dec
scas
and
and
scas
je
test
xchg
mov
fidivrs
push
or
dec
loope
addr16
pop
es
mov
cmc
mov
jae
mov
repnz
xor
dec
cmp
cld
aam
jbe
scas
ljmp
lock
cmp
xor
mov
popf
dec
imul
rcl
adc
in
movsl
xchg
push
pushl
pop
jae
cmp
jne
inc
ficomps
push
pusha
ficompl
mov
mov
and
adc
repnz
and
in
aas
aaa
pop
repnz
mov
mov
push
cmpsb
sbb
testl
dec
mov
mull
pop
loopne
jo
sub
out
lds
sbb
js
fisubs
cmp
sub
jno
or
or
insl
aaa
js
pop
push
int
stc
cmp
leave
pushf
inc
xchg
hlt
in
out
lock
stc
mov
repz
test
shlb
adc
repnz
xor
and
out
xchg
pop
pop
mov
sbb
mov
mov
into
push
mov
imul
mov
or
sbb
insb
aas
dec
jp
scas
int3
xor
lahf
adc
mov
cmpsl
inc
mov
mov
icebp
jno
dec
stos
dec
jnp
add
imul
push
scas
add
cwtl
jmp
shl
and
testb
inc
pop
imul
xor
jne
faddl
cltd
mov
jns
xchg
sbb
pushf
xor
xor
dec
push
jecxz
add
add
jae
popf
add
mov
cld
mov
or
mov
pop
mov
xor
sub
mov
call
jmp
cmc
ficoml
dec
dec
mov
push
pop
jne
adc
mov
sbb
jbe
mov
divps
xchg
stc
jl
sub
scas
jb
lods
in
adc
push
jbe
test
out
rcrb
push
fidivrs
dec
mov
stc
cwtl
repnz
xchg
cmp
pop
adc
jno
fldt
mov
xor
dec
mov
test
push
enter
push
cmpb
mov
test
cwtl
xchg
add
outsl
in
scas
jle
mov
je
dec
push
jg
lock
sarb
movsl
scas
xchg
in
xor
data16
sbb
mov
mull
adc
sub
sbb
or
pop
movsl
dec
push
mov
mov
sub
sbb
or
pop
movsl
dec
push
mov
mov
sub
sbb
or
jnp
dec
push
mov
mov
pop
and
sbbl
or
mov
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
cld
sub
mov
fdivl
jl
insb
adc
xor
sub
sbb
or
cld
sub
mov
shrl
add
and
sub
or
cld
sub
mov
shrl
add
push
bound
adc
bound
mov
in
fsubrs
loope
aam
push
jp
loop
fs
call
cmp
xchg
ljmp
sub
inc
xor
shrl
xchg
jmp
inc
out
shll
push
ret
inc
cmp
add
addr16
adc
inc
mov
leave
mov
movsb
jl
push
pushf
mov
push
movsl
push
jns
int3
leave
mov
mov
mov
mov
jl
shll
inc
scas
sbb
push
jo
cmc
cwtl
shll
cmpsl
pop
popf
mov
pop
dec
faddp
xor
cld
popa
sbb
fwait
mov
icebp
inc
shrb
jmp
push
inc
movsb
and
inc
sub
mov
mov
lods
rcrl
insb
adc
xor
sub
sbb
or
mov
mov
in
stc
cmpsl
int
cmp
inc
and
add
pop
sbb
jmp
sahf
hlt
mov
test
popf
pushf
mov
sbb
das
js
outsb
aaa
or
xchg
lds
aam
out
lods
rcrl
insb
adc
xor
sub
sbb
or
cld
sub
mov
shrl
add
and
inc
sub
sbb
or
cld
orl
data16
mov
lcall
repnz
ret
stos
sub
inc
hlt
lea
jg
or
sbb
adc
xchg
out
mov
imul
scas
sbb
fsubr
mov
sbb
jecxz
xchg
mov
cmp
dec
or
cmpsl
dec
imul
aad
ja
mov
int
inc
jns
cwtl
adc
dec
ds
in
fbstp
imul
popf
subb
inc
push
aas
stos
fnsave
out
push
mov
out
rorl
mov
dec
popa
or
cmp
ret
push
xchg
rcll
pop
and
stc
xchg
cmp
jb
jne
aam
pop
pop
sti
mov
jae
addr16
and
jne
sbb
and
cmpsb
mov
sbb
pop
mov
and
lds
cmp
insb
mov
or
mov
das
jp
jne
mov
sbb
in
enter
cwtl
in
sbb
inc
nop
enter
mov
je
and
xorl
adc
pop
mov
adc
je
mov
stc
std
ds
xor
or
and
lock
mov
leave
cmp
cmp
mov
cmp
xchg
test
das
mov
test
or
xchg
mov
inc
push
movsb
fcomps
cmp
jg
mov
xchg
mov
rolb
cmc
mov
js
test
cmp
mov
dec
jb
pop
or
push
sub
push
in
xor
pop
add
cmp
mov
orb
pop
int3
cmp
sub
popl
mov
xlat
mov
push
addr16
fwait
adc
test
sub
cmpsl
mov
xor
xchg
sbb
in
or
sbbb
aad
mov
jg
push
xchg
dec
aas
mov
mov
pushf
push
xchg
adc
mov
push
test
das
popf
repnz
xchg
cwtl
xlat
rcl
mov
int3
mov
mov
mov
cmpsb
icebp
sbb
sahf
aaa
push
jmpw
lock
add
shrb
dec
sub
into
call
mov
add
sub
or
jo
in
cmp
xchg
loope
hlt
int3
jo
sbb
mov
mov
in
jno
shll
sub
adc
push
and
mov
repz
lfs
stos
loopne
jae
and
pand
jnp
dec
das
push
aam
mov
arpl
dec
loopne
mov
fwait
enter
jmp
inc
inc
inc
cmp
jmp
ss
inc
gs
xlat
js
mov
in
nop
pop
test
push
loopne
add
cmpsl
mov
and
in
cwtl
mov
jnp
nop
inc
xor
fdivl
add
pop
das
outsb
sbb
push
aam
loope
adc
popa
xchg
test
mov
mov
bound
popl
ret
jns
mov
shlb
xor
fdivrs
add
and
push
xor
movsl
ret
sub
scas
push
jne
jp
push
jge
cld
leave
and
xchg
jecxz
out
adc
push
mov
cmp
mov
js
andb
sub
cli
inc
clc
sub
loope
outsl
sub
mov
arpl
lods
test
push
sbb
xchg
push
jg
xchg
push
dec
push
mov
cmp
add
aaa
push
repz
aam
xor
xor
lahf
std
das
pop
les
clc
inc
jae
test
outsb
dec
jg
add
pop
movl
addr16
pop
int
xor
dec
add
cmp
mov
mov
insl
mov
push
xchg
lea
insb
outsl
movlps
scas
add
add
lods
dec
xor
andl
mov
jmp
push
xchg
sbb
sub
and
push
fidivs
add
mov
js
popa
fistpll
outsl
dec
mov
sahf
orb
lret
pushf
in
cmc
iret
cmpsb
mov
push
sub
leave
into
sahf
cld
stos
inc
mov
sub
insb
cmp
adc
jae
ds
cmp
adc
fisubrl
arpl
or
mov
int
jo
sbb
out
nop
and
push
xor
pop
out
push
pushf
push
daa
sub
and
pop
out
out
insb
adc
insl
xlat
out
stc
pop
xchg
aaa
inc
out
test
or
cmpsl
sub
adc
xor
sbb
cmp
cmpsl
jne
ds
xchg
mov
jecxz
add
outsl
clc
pop
lret
dec
ficompl
ret
mov
mov
bound
adc
aas
lock
cmpsl
int
sti
xor
fists
mov
sbb
js
cmp
jb
mov
aam
lds
xchg
in
or
pop
imull
jp
aas
lcall
data16
idiv
orl
fdivl
adc
push
mov
loope
repz
fdivrs
movsl
dec
inc
mov
or
mov
mov
cmpsl
push
or
or
dec
jg
jno
sub
lock
enter
divl
lret
call
mov
dec
xor
adc
mov
add
or
movsl
ret
movsl
dec
fbld
pop
adc
mov
pop
divl
jecxz
mov
add
out
jecxz
nop
cwtl
addr16
mov
leave
lahf
sti
ret
push
gs
xor
and
arpl
push
push
std
push
dec
je
filds
cmpb
shll
mov
xchg
push
add
adc
cld
call
cmp
mov
mov
xchg
pop
xchg
mov
imul
fcompl
sub
hlt
xor
js
aam
xor
les
xchg
dec
sub
sbb
mov
add
ljmp
and
fistpll
aaa
sahf
inc
lods
imul
mov
cmc
fldt
or
das
sub
aad
lods
je
fisttpll
stos
add
mov
cwtl
push
pop
cmpsl
out
fcomi
mov
ja
outsl
cld
xchg
loope
push
xchg
cmp
daa
dec
jne
sub
xchg
in
leave
sti
repz
ret
ficompl
xor
sub
adc
lds
xor
dec
invd
or
sbb
test
pop
bnd
mov
or
mov
iret
or
jbe
mov
sub
sub
call
jmp
ds
pusha
jp
dec
pop
or
data16
mov
jge
mov
aam
stc
mov
shrb
clc
loopne
stos
mov
xor
out
mov
insb
xlat
rol
in
roll
imul
fwait
nop
repz
ret
iret
jmp
mov
loope
es
lods
mov
enter
mov
push
inc
adc
mov
ret
cmp
cmp
scas
in
addr16
addb
rclb
test
inc
mov
mov
leave
aaa
mov
cmc
and
push
sbbb
out
fisubl
pushfw
jbe
faddp
mov
jl
cmp
ss
nop
mov
jg
push
mov
xchg
push
add
cmpl
xchg
xlat
dec
dec
dec
stos
inc
mov
js
repz
xor
loop
inc
fs
and
inc
lods
clc
sub
outsb
call
addb
test
js
and
dec
sub
lea
mov
mov
or
dec
test
inc
add
adc
scas
mov
and
pusha
fbld
decb
sbb
jle
fcompl
iret
jae
shrl
test
xor
push
push
out
repnz
xchg
cs
flds
je
add
pop
dec
mov
pop
mov
inc
js
lret
add
ljmp
mov
fwait
psubd
adc
cmp
add
jle
sbb
xor
pop
mov
ret
sbbb
pop
inc
sub
stos
gs
adc
push
mov
jbe
xor
scas
iret
imul
xchg
mov
mov
aam
bound
das
push
jb
aaa
lahf
jp
add
jmp
jno
adc
shrb
jle
adc
and
popf
adc
sub
addr16
arpl
aaa
mov
add
test
sub
loopne
dec
push
mov
xchg
jno
mov
adc
pusha
jecxz
mov
ret
xor
adc
xor
adc
or
iret
add
cmpsb
sub
nop
dec
xor
sbb
rcl
mov
mov
fprem
dec
fcompl
fbstp
adc
push
in
mov
push
mov
sarl
xlat
adcb
xor
test
pop
mov
popf
jmp
push
icebp
dec
sahf
and
and
inc
sub
cmp
das
jb
and
stc
xchg
rcrl
in
pop
test
mov
push
out
inc
repz
loope
mov
sahf
cs
and
das
fildl
ret
cltd
repz
ja
jb
mov
fs
xorl
cmpsl
xor
imul
mov
pop
subl
cmp
cmp
enter
dec
or
fsubrl
aam
and
ljmp
mov
inc
loop
cmpb
push
iret
repz
add
int
push
js
jne
imul
mov
xor
fidivrl
sub
or
test
cmp
cld
das
and
xor
xor
mov
lret
sbb
or
xchg
mov
pop
daa
loope
pop
leave
aas
addr16
jnp
and
sub
push
adc
stc
mov
lds
sub
mov
sarb
imul
mov
pusha
movsl
js
xlat
or
dec
pop
mov
mov
aam
mov
push
pop
push
xchg
xchg
push
xchg
out
mov
insb
xchg
inc
imul
xchg
icebp
pop
adc
xchg
gs
or
lahf
dec
movsl
stc
cmp
pop
inc
cwtl
nop
jo
daa
pop
sbb
mov
hlt
arpl
mov
pusha
jecxz
aas
adc
repnz
jbe
xchg
std
mov
out
jne
in
mov
idivl
in
insb
lods
leave
or
adc
add
add
lods
js
xchg
in
sbb
idiv
testb
pop
pop
aad
or
add
jle
mov
mov
mov
in
mov
dec
in
in
mov
mov
nop
inc
or
ljmp
mov
pop
popa
lock
add
mov
into
movsl
cmp
into
adc
adc
sbb
mov
aad
clc
subl
pop
fisubrs
jb
loop
xor
mov
and
jp
jl,pn
ret
jmp
shll
aas
mov
insb
sahf
cmpsb
sar
pop
xor
dec
in
and
mov
stos
xor
inc
pop
out
negb
imul
sahf
call
aam
add
pop
ret
ret
mov
out
pop
mov
stc
ja
jae
in
mov
jbe
pop
or
std
js
mov
movsl
mov
sub
icebp
cli
loope
push
scas
jecxz
das
cmp
fcmovbe
scas
insb
add
enter
stos
pop
jle
mov
stos
push
mov
cmp
add
jb
ja
push
rcll
movsl
pop
mov
lods
std
sti
jns
mov
in
ja
mov
dec
pop
cld
mov
addr16
cli
jne
fcmovb
jne
nop
cmpsb
repnz
nop
cs
lea
xchg
sub
inc
add
xor
test
dec
iret
cmp
sbb
adc
leave
xchg
das
popf
cmpsl
shrb
in
test
mov
inc
sbb
cmp
lret
je
fstpl
shlb
in
aaa
fbstp
push
in
divl
jnp
loope
push
jmp
enter
dec
clc
inc
jb
dec
imul
mov
pushf
jae
jae
aad
arpl
fistps
xchg
inc
js
push
cmpsl
adc
push
std
test
in
fldln2
fwait
pop
mov
scas
ljmp
sub
mov
mov
lods
je
and
sbb
aas
jp
pop
jmp
test
fiaddl
cmc
jbe
mov
cmp
xchg
and
sar
popf
pop
pop
scas
push
sahf
insl
mov
outsl
lods
shl
mov
repnz
out
iret
sub
xchg
lods
mov
outsl
push
lret
adc
lock
rcll
lret
pusha
pop
mov
pop
nop
mov
cli
loope
stc
sub
jecxz
cmpsb
shrb
and
mov
mov
lahf
or
pop
hlt
mov
push
std
outsb
xchg
stc
fbld
dec
out
cmc
mov
in
add
mov
ret
cmp
cmpsb
lcall
negb
jg
adc
ret
mov
stos
mov
or
push
cmp
rolb
cli
xor
aam
jp
mov
rclb
js
leave
pop
cmp
pop
andb
add
stos
in
hlt
fsubr
shlb
fldcw
aaa
hlt
jecxz
sub
xchg
cmpsl
fmul
jne
adc
pop
leave
iret
out
cmpsb
outsb
xor
test
ss
pop
cmpsl
mov
cmp
pop
pop
mov
imul
int3
aas
into
pusha
sub
xor
icebp
sahf
imul
or
pop
cmp
rorb
test
faddl
shlb
fdivs
cli
popf
push
sub
mov
sub
inc
es
iret
arpl
sarl
fisubrl
in
addb
aam
dec
lods
les
imul
out
clc
loopne
fcoml
addb
stos
or
imul
dec
dec
mov
sbb
cmp
pop
jo
push
xor
je
ja
call
orl
aad
cld
mov
xchg
dec
ds
cmc
cld
xor
jg
scas
cmpsb
bound
jecxz
dec
in
lods
push
sbb
mov
jno
clc
push
pop
fstpl
andb
lods
clc
xchg
and
push
icebp
loopne
cwtl
push
popa
sbb
mov
out
sub
jl
xor
lahf
cmp
push
lahf
das
and
packssdw
jns
xchg
lret
lods
and
push
inc
pusha
xor
aam
and
pop
sbb
je
flds
adc
pop
outsl
adc
dec
loope
mov
mov
and
leave
outsl
icebp
dec
and
inc
lods
pop
aam
pop
mov
cmp
aaa
mov
fdivrl
loop
mov
leave
sbb
leave
xlat
inc
jno
hlt
sub
sbb
testb
pusha
adc
mov
outsl
in
or
jecxz
test
call
bound
daa
push
cmp
fldcw
rorl
xor
fcmovb
mov
das
push
fldl
andb
mov
enter
dec
mov
insb
insb
jecxz
mov
and
enter
imul
xchg
scas
pop
out
loopne
adcb
insb
add
jl
add
js
jae
jbe
cmp
and
movsb
pop
adc
and
out
jne
ret
sbb
mov
inc
lods
or
ret
shlb
adc
int3
ret
mov
in
ja
lcall
mov
fcomps
lahf
adc
jns
adc
in
add
push
ret
mov
dec
jp
inc
fldcw
pop
pop
imul
pushf
or
push
inc
hlt
push
out
ret
xor
fdivs
scas
movsb
adc
jo
mov
mov
aad
or
cltd
cmpsl
daa
testl
mov
fwait
xchg
pop
jle
xchg
sub
lahf
sarb
xor
lds
cltd
test
sub
cmp
lods
gs
mov
push
xor
fists
rclb
adc
rolb
sahf
push
call
cmpl
or
orl
and
imul
fidivs
sub
rclb
mov
jo
call
dec
push
inc
in
addr16
test
dec
pusha
out
sbb
sub
fidivrs
sbbl
push
add
aaa
mov
mov
mov
mov
std
negl
out
xlat
fld1
and
sbb
inc
cmpsb
into
pushf
and
add
mov
subb
cmp
popw
data16
xchg
outsb
loop
clc
enter
inc
ja
cmp
rclb
outsb
add
lcall
dec
jb
push
push
lods
cmp
mov
mov
mov
xor
add
adc
or
sbb
lods
icebp
add
mov
pop
fcompp
add
cs
adc
push
jmp
clc
dec
mov
jle
out
push
sub
and
sub
sti
push
pop
cmp
xchg
decl
inc
shrb
pop
inc
shl
daa
dec
stos
aad
xor
push
dec
cwtl
pop
and
nop
mov
xor
daa
dec
bound
std
jl
adc
fldcw
sub
mov
and
xchg
fists
lahf
into
js
std
les
mov
lea
int3
pop
mov
xorl
mov
jns
mov
scas
arpl
add
sbb
cmp
jb
add
jb
and
dec
test
or
cmp
sti
jge
clc
bswap
testl
lods
inc
mov
loop
popf
insl
pop
fmulp
xchg
sbb
int
and
xor
ja
xor
dec
rcll
jecxz
dec
testl
pop
sbb
sub
sbb
or
inc
mov
fwait
das
inc
imul
ja
stos
pop
in
fdivrs
imul
gs
mov
leave
icebp
mov
sub
imul
out
add
stos
out
xor
incl
cmpl
aad
adc
lcall
adc
sub
inc
lock
mov
jmp
and
out
mov
jno
mov
pop
sub
lcall
lea
movsl
pop
popf
push
out
cmp
jge
pusha
repz
adc
repz
inc
rcl
jae
das
or
cwtl
jo
mov
inc
lods
jae
xor
mov
out
ljmp
push
push
and
out
xor
inc
movsl
xor
outsb
sub
sbb
pop
dec
gs
lea
jo
push
inc
lock
and
inc
dec
or
push
pop
pop
or
mov
fimuls
dec
push
scas
xchg
mov
ds
and
call
in
xchg
ss
lret
loopne
pop
sub
fmul
push
push
not
inc
fsts
mov
stc
mov
lds
cmpsl
sub
cltd
sbb
test
data16
sbb
cmp
leave
mov
cmc
pop
scas
cld
sbb
fs
and
adc
shrb
out
inc
xchg
pop
les
cwtl
inc
or
xchg
std
inc
lahf
test
pop
push
mov
movsb
adc
pushf
cmp
push
fnstcw
ss
mov
push
push
pop
data16
cli
mov
or
in
pop
push
loope
mov
lock
out
jmp
ljmp
mov
inc
int3
fs
xor
push
sub
rep
or
call
inc
arpl
std
sub
push
pop
and
pop
mov
test
std
dec
dec
jl
xor
cmp
and
std
jo
es
add
nop
cmpsl
push
cld
cli
cwtl
xor
add
mov
jle
push
cmpsb
int
int3
sbb
jg
mov
and
je
pop
jmp
repz
sarb
jp
push
cli
pop
and
and
dec
xchg
fimuls
test
and
push
add
out
lahf
lcall
mov
mov
adc
loopne
and
pop
aas
clc
xor
ret
mov
rclb
pop
repnz
pushf
outsl
mov
call
pop
mov
push
sub
mov
mov
aas
shll
xchg
ss
imul
jo
cmp
pop
push
imulb
nop
inc
jg
ss
rclb
mov
bound
push
testl
dec
int3
sub
inc
loope
jle
sbb
jmp
add
mov
icebp
lahf
or
jbe
outsb
sbb
add
ss
in
dec
jae
fmull
sar
xchg
mov
fcoml
sbb
gs
jbe
stos
pop
inc
adc
push
cmp
xor
add
les
and
jecxz
inc
push
cmp
mov
imul
push
hlt
and
sbb
pop
add
sub
loope
cmp
xchg
adc
aaa
movsl
or
push
xor
scas
outsl
push
mov
outsl
and
repz
push
enter
push
sbb
mov
fsubl
mov
bound
pop
add
pop
fs
enter
cmp
push
adc
add
sti
inc
pushl
push
cwtl
or
mov
sub
mov
test
cmovge
xchg
mov
loope
jmp
add
sbb
jne
arpl
dec
or
pop
adc
or
inc
out
lds
clc
pop
sub
mov
jg
test
int3
mov
shrl
add
and
inc
sub
sbb
or
cld
sub
mov
shrl
add
and
inc
sub
sbb
or
cld
sub
mov
shrl
add
and
inc
sub
sbb
or
cld
sub
mov
shrl
add
and
leave
movsb
scas
jecxz
repz
jae
inc
jbe
data16
imul
icebp
mov
shl
mov
mov
cmpsb
arpl
inc
inc
jbe
and
xor
add
adc
jecxz
repz
ret
not
out
xchg
mov
xor
cmpsb
arpl
inc
inc
jbe
and
xor
add
adc
jecxz
rol
mov
mov
mov
cli
cmpsb
pop
push
adc
inc
sbb
aaa
sub
fs
in
cwtl
and
dec
fmul
leave
mov
cmp
popl
mov
mov
xchg
xor
pushl
sti
pop
jle,pt
cmp
jecxz
push
out
negl
sbb
jbe
loope
leave
jbe
lret
out
shll
push
sbb
dec
xchg
das
arpl
lds
pop
int3
push
pop
mov
jle
and
sub
repz
mov
jnp
sbb
xor
scas
cltd
fcoml
adc
jmp
cwtl
movsl
loop
sti
xchg
dec
or
xrelease
jp
dec
xchg
sub
mov
or
mov
mov
mov
inc
inc
mov
jae
inc
jbe
and
xor
add
adc
jecxz
repz
shl
mov
mov
iret
push
cmp
inc
add
jp
push
insb
js
jbe
mov
mov
sahf
xchg
mov
out
jecxz
adc
jbe
adc
pop
js
inc
inc
push
es
scas
xchg
mov
xchg
rorl
ljmp
adc
pushw
xor
add
adc
jecxz
repz
shl
mov
mov
cmpsb
arpl
inc
inc
jbe
and
xor
add
adc
jecxz
repz
shl
mov
mov
cmpsb
arpl
pmaxub
sub
repz
in
sbb
add
sub
mov
mov
out
pop
mov
sti
xchg
jne
or
xchg
jb
test
xor
pop
incb
mov
cmp
std
and
xchg
or
sbb
pop
es
testl
inc
call
mov
and
movsb
xchg
mov
in
rclb
add
mov
insl
test
adc
fwait
push
sarb
lcall
inc
xchg
cmp
jbe
das
jno
pop
mov
sbb
loope
jo
cld
ret
or
ja
mov
int
jns
ds
or
mov
les
push
adc
inc
push
bound
mov
or
aaa
aas
out
dec
fs
shrb
sub
enter
repnz
xchg
cmp
scas
mov
shlb
addr16
out
cmp
data16
xchg
sub
insl
out
mov
pop
cmp
pop
push
mov
daa
leave
icebp
push
push
cmp
popa
adc
xor
aam
out
push
inc
xor
mov
or
adc
and
mov
mov
fnstenv
inc
and
inc
ret
aaa
mov
pop
mov
jg
inc
mov
cmpsl
mov
xor
adc
or
mov
aaa
ret
test
notb
cwtl
std
arpl
push
jl
xchg
and
stc
nop
stos
insl
test
adc
cli
mov
pop
jle
and
pop
out
sarl
adc
sub
ss
mov
or
aas
pop
frstor
movsl
add
pop
jmp
adc
fmull
xchg
cmp
loop
xchg
inc
movsl
jg
inc
outsl
jge
cmp
push
ror
mov
add
cmc
enter
lret
stc
push
lcall
fs
xchg
imul
idivb
sbb
mov
and
or
in
fwait
rol
sahf
ds
pusha
fsts
jmp
int
dec
repz
repnz
out
repz
or
in
lahf
bound
xchg
pop
imul
dec
mov
mov
mov
push
cmpsl
out
cmp
fucomip
and
insb
xor
out
dec
leave
push
hlt
adc
mov
pop
cld
insl
aam
jle
push
jl
aam
popa
cmp
adc
push
jp
cmp
pop
sbb
shlb
push
lods
mov
xchg
lock
clc
enter
loopne
mov
faddl
dec
cld
dec
cmpsl
into
repnz
lahf
cmp
addr16
fisubs
xchg
int
adc
lods
jae
xchg
lahf
push
adc
shlb
cmp
and
ss
sbb
adc
jae
cmp
mov
dec
xchg
mov
xor
aaa
icebp
repz
or
pop
ljmp
popl
sbb
inc
mov
lcall
clc
shl
loop
mov
pop
pop
fxam
mov
clc
cld
hlt
dec
in
pop
and
loopne
adc
cmp
repnz
pop
inc
jge
jge
in
stos
and
mov
les
nop
stos
gs
fcompl
jnp
clc
js
loopne
ss
imul
les
mov
xchg
mov
aaa
mov
dec
or
xor
popf
jp
decb
aas
sbb
psubw
sarb
scas
pop
popa
repnz
scas
ljmp
cmp
push
rorl
mov
and
sbb
sub
jns
mov
sub
lea
insb
mov
push
adc
insl
lods
add
and
jle
push
push
mov
hlt
enter
inc
mov
gs
ss
xchg
pop
hlt
outsl
pop
subb
ror
jecxz
or
cmp
dec
fwait
rcll
add
push
sbb
mov
lret
cmp
mov
mov
fnstenv
pushf
sbb
in
es
jae
in
mov
sahf
jp
vpunpckhbw
fisubl
es
dec
out
in
dec
mov
iret
leave
dec
xor
inc
xchg
mov
mov
xor
or
jl
and
lock
pop
jmp
or
and
cmc
mov
fidivrl
push
cltd
cmp
jg
mov
test
dec
sbb
sahf
iret
dec
mov
or
fiaddl
fwait
movsb
fcmovnb
pop
daa
das
mov
ret
scas
pop
bound
mov
mov
dec
mov
imul
xchg
mov
sbb
aaa
adc
lds
outsl
in
or
mov
sbb
pand
and
inc
aam
sbb
xor
xchg
scas
lret
loopne
push
xor
mov
test
jle
into
imul
push
xor
jmp
mov
ficomps
sbb
daa
mull
cmpb
popf
imul
mov
js
xor
insb
out
cmp
jbe
ss
int3
test
cld
mov
jmp
sbb
lcall
push
sbb
outsb
sub
loopne
or
push
les
pop
scas
roll
cmpb
mov
das
int3
pop
inc
das
push
push
daa
and
ljmp
or
cwtl
out
lret
fs
adc
roll
sahf
push
in
ret
hlt
outsb
dec
cmp
sbb
cmpsb
or
jp
lahf
rolb
inc
sub
jae
cwtl
fisubrs
sti
mov
push
in
add
mov
fwait
mov
mov
dec
ja
cld
jp
ds
je
gs
and
adc
mov
dec
test
inc
jmp
xor
and
mov
sbb
imul
lret
rorl
fmul
outsl
mov
sarl
mov
jnp
lret
cmp
test
and
jno
repnz
adc
testl
movsl
js
xorb
xor
iret
aaa
insl
out
jl
push
push
lock
in
imul
pop
push
insl
insl
mov
stos
push
jo
xor
mov
mov
sbb
test
ret
cmp
add
rcrl
add
and
jbe
shl
push
or
jo
shll
test
stc
aam
sahf
loop
inc
fidivrs
int
inc
nop
jmp
xchg
mov
mov
pop
push
cmp
adc
in
sub
into
lret
xchg
stos
outsb
outsb
xor
out
aam
adc
data16
leave
dec
mov
std
xchg
sub
pop
movsb
inc
mov
or
lock
push
test
mov
xchg
or
jnp
inc
inc
hlt
dec
and
dec
push
cmp
sbb
dec
xor
lea
test
bound
add
and
test
mov
sbb
xor
pop
cmc
ret
jbe
push
xor
jg
add
adc
fsub
loopne
and
push
loop
and
sub
mov
gs
stos
les
jge
rorb
mov
sub
push
ss
cmc
add
jae
and
jbe
jge
ret
dec
xor
insb
mov
or
lea
adc
push
fwait
movsl
xor
insb
xor
das
jae
arpl
hlt
sbb
push
jmp
push
sbb
dec
movsl
xor
xor
push
cli
or
pop
add
jp
xchg
ss
pop
and
inc
ja
inc
hlt
xchg
push
clc
aas
fstpl
in
mov
inc
mov
inc
adc
ds
insb
je
xor
add
jmp
fwait
mov
push
subb
clc
xchg
pop
xor
adc
mov
or
int3
mov
jl
pushf
movl
pop
movsb
xchg
or
andl
push
jno
sti
mov
xchg
lret
adcb
mov
lods
inc
push
aaa
out
add
or
fdivr
cmp
stc
xchg
cmc
movsl
and
mov
adc
stos
xchg
pop
dec
mov
mov
add
ljmp
sbb
push
lret
push
cltd
sub
fcmovnb
push
cmp
adc
stos
cld
jo
int
jl
mov
inc
aaa
insl
pop
jmp
je
xor
ds
dec
test
adc
and
and
mov
adc
fnstenv
dec
jo
pop
mov
lods
js
dec
mov
inc
ret
cli
push
or
lea
testl
out
add
cs
aas
jmp
jle
movsl
in
sti
popf
mulb
add
xchg
es
decl
adc
adc
mov
sahf
jg
add
data16
test
enter
xchg
xchg
and
in
adc
jmp
adc
pop
cmpxchg
sub
dec
push
dec
and
sbb
add
mov
mov
int3
inc
jne
xor
cmpsl
ds
jle
dec
mov
jb
or
add
dec
cmp
pop
push
adc
adc
mov
dec
mov
pop
repz
dec
or
dec
loope
cmp
out
pop
add
xor
fsubrl
jns
es
dec
loope
jl
inc
sub
pop
mov
jae
repz
enter
xchg
mov
sub
jecxz
scas
pop
insl
push
icebp
mov
adc
ja
shl
lods
and
add
test
arpl
lods
in
iret
mov
jge
adc
cld
testl
std
xchg
ss
jae
inc
and
fmuls
inc
test
mov
and
test
jmp
fdivs
dec
adc
pop
out
dec
fscale
xor
jle
mov
pusha
repnz
getsec
mov
loop
adc
hlt
rcr
sbb
cmp
mov
leave
pop
mov
movsl
mov
sarb
or
or
and
loopne
repz
out
sub
rorb
inc
pop
sub
rol
cmp
movsb
or
shll
negl
sub
hlt
cmp
int3
xor
cmpsb
scas
mov
add
push
fsts
mov
jae
pusha
mov
cld
add
mov
pop
cmp
data16
test
sub
leave
iret
outsb
adc
shrb
sarb
enter
mov
loope
insb
rorl
dec
imul
jge
push
push
stc
inc
mov
jnp
mov
lcall
into
aas
loop
mov
sbb
repnz
int3
fs
aam
sub
cmpsb
in
mov
out
andb
xor
xor
repz
in
push
dec
fwait
int
in
cmpb
jo
ljmp
jp
sbb
imul
out
dec
inc
pop
shll
xchg
rorb
inc
inc
into
repz
jo
into
inc
sub
sub
dec
push
mov
mov
cmpsb
inc
and
mov
jae
add
movsb
add
xchg
in
add
mov
test
xchg
ret
daa
jl
jecxz
xor
mov
jl
shr
or
jle
jno
cmp
cld
cmp
inc
mov
mov
cmpsl
andl
mov
adc
mov
shll
hlt
cmc
test
aad
pop
leave
ss
and
mov
xchg
or
sub
push
cli
or
js
out
outsb
xlat
xchg
pop
xor
mov
sub
sahf
adc
mov
lret
mov
push
pop
nop
test
inc
pop
leave
in
nop
and
lret
xor
add
hlt
pushf
lods
mov
pop
cmp
mov
enter
jno
and
xchg
or
pushf
cmpsb
mov
push
jp
movsb
pop
sub
cmc
daa
out
ficoms
cmp
push
mov
aad
lret
push
popa
aad
mov
outsl
bound
je
push
cwtl
out
fdivs
das
mov
cli
xchg
and
popf
mov
xchg
sub
add
popa
jge
andb
cmc
jae
fwait
lods
mov
rorb
jns
scas
out
add
add
lds
mov
mov
in
xchg
les
mov
add
lret
jne
out
xor
sti
leave
or
mov
pop
lea
sti
mov
jno
dec
xchg
jnp
pop
sub
mov
dec
dec
test
sbb
mov
mov
cmp
add
rolb
jmp
out
pop
ds
mov
lcall
cmp
mov
adc
inc
sbb
inc
cs
mov
pop
sub
shrb
add
addr16
das
sub
lock
adc
cmp
adc
xchg
dec
dec
jg
pop
pop
stos
lea
jnp
pop
fmul
rcrb
ds
into
xor
leave
xchg
adc
mov
sub
cmp
clc
out
outsl
clc
movsl
filds
icebp
iret
pushf
out
and
dec
mov
mov
inc
out
mov
inc
cli
popf
mov
scas
sbb
adc
jo
les
rcll
lret
mov
push
aas
outsb
sbb
mov
cli
pushf
mov
lret
std
dec
mov
jl
sarb
or
sub
divl
pop
andb
mov
stos
inc
mov
shll
mov
andl
push
or
sbb
and
mov
shlb
inc
insb
stos
ret
or
clc
jp
cmpsb
jle
mov
jmp
lea
loopne
jns
filds
lock
add
mov
ret
sbb
fiaddl
push
pop
movsl
popa
adc
add
jae
dec
push
jb
in
outsb
pop
add
call
stc
jb
nop
adc
inc
push
add
cmpsb
subb
xchg
frstor
push
fwait
jo
xchg
mov
adc
mov
es
push
out
push
cmpsb
xor
imul
jne
pop
sub
pop
mov
mov
push
pop
mov
pop
out
in
jns
cmp
add
jge
and
sub
aaa
mov
push
mov
jbe
roll
sub
lock
cld
add
cmp
mov
in
repnz
add
jnp
or
sahf
orl
mov
jmp
and
xlat
mov
icebp
xchg
iret
mov
cmc
sub
mov
jmp
lahf
jne
scas
mov
cmp
inc
pop
push
sti
push
mov
out
stos
mov
lds
mov
and
pushf
mov
and
xchg
call
sbb
add
into
cltd
jns
push
xor
push
loop
cs
loopne
lret
or
jmp
jge
inc
dec
aas
popa
jp
mov
inc
sub
xchg
cltd
fdivrp
stos
xchg
lret
mov
and
repz
push
or
xor
cmp
pop
popf
add
dec
push
stos
pop
push
xchg
pop
push
mov
xlat
cltd
subl
and
rcr
je
and
test
inc
insb
xchg
repnz
jo
sbb
mov
xchg
or
cs
xchg
in
in
loopne
xchg
aam
xchg
mov
or
mul
add
add
sub
and
cltd
sbb
test
clc
sbb
cs
cmp
inc
mov
adc
jno
ret
repnz
loop
roll
jo
dec
mov
movsb
testl
mov
or
and
cltd
or
cmp
orb
jns
inc
out
or
push
fmulp
mov
mov
aad
fs
xchg
incl
jl
dec
sub
loop
jge
fidivl
stos
or
push
jae
pop
or
xchg
nop
and
xor
movsb
cmp
xchg
test
divb
cwtl
aad
in
ret
inc
jecxz
cmp
or
jbe
pop
cwtl
xchg
push
stos
pop
neg
push
arpl
shlb
add
mov
push
repz
lods
push
ja
in
repnz
push
adc
loop
js
dec
jo
inc
mov
iret
add
sbbl
jle
fmull
mov
xor
rcll
add
sbb
xchg
xchg
ss
stos
loope
inc
xlat
jmp
xchg
jp
xchg
out
dec
sbb
pusha
xchg
inc
ds
into
icebp
push
mov
in
jbe
lret
push
and
inc
xchg
stos
push
push
sbb
aaa
mov
mov
inc
ss
fwait
cli
js
es
mov
ss
rep
testb
inc
pop
data16
pop
sbb
xor
pushf
rorb
xor
push
pop
insb
insl
jge
out
outsb
mov
lcall
cmp
mov
pushf
test
inc
dec
jne
push
dec
ja
push
and
and
xchg
incl
daa
outsb
ss
addb
or
testl
or
cmpsb
rcll
dec
cmp
sbb
gs
scas
cmp
push
sub
jg
imul
stos
add
xchg
mov
lea
add
jbe
lds
mov
and
and
ss
sbb
cmp
sbb
les
ret
sub
adc
mov
mov
shrb
jns
push
cld
pop
orb
mov
cmp
roll
mov
mov
cs
jae
xor
cltd
cmp
in
mov
les
and
mov
push
xchg
mov
dec
cmp
sub
pop
aaa
int
testl
ja
add
hlt
sbb
insl
aas
aaa
filds
sub
jmp
push
jmp
mov
rcll
dec
or
mov
dec
pop
test
dec
push
mov
shlb
xor
nop
das
or
add
addr16
pushf
cltd
mov
xor
or
and
cltd
pop
enter
cmc
push
mov
cwtl
mov
out
xchg
xchg
xchg
xchg
push
sub
dec
mov
popf
pop
loope
inc
mov
in
testb
cmc
popf
loop
pop
inc
and
andl
xchg
sub
or
hlt
popf
or
xor
push
mov
shrb
movsl
out
enter
cwtl
popf
adc
push
sahf
xor
pop
lret
and
jne
mov
jl
in
jbe
das
lcall
std
sbb
jo
fistl
pop
mov
xor
outsb
stos
mov
pop
ret
jns
into
add
ljmp
mov
pop
rorl
add
in
ret
std
xorl
jno
inc
and
jp
push
inc
and
push
sub
inc
pop
insl
sub
jge
adc
cmc
push
scas
dec
sub
sbb
dec
jmp
adc
rolb
pop
jne
sub
add
mov
std
lret
clc
int
jne
mov
testb
popl
or
lcall
jecxz
inc
outsb
adc
test
xor
mov
xor
dec
adc
mov
jo
data16
ret
fisubrs
stos
fwait
rcr
pop
cmpb
pushf
sbb
das
mov
fldenv
popl
fcompl
jecxz
out
das
inc
sub
adc
sarb
in
pop
inc
inc
jecxz
jno
jne
das
pop
mov
jge
mov
add
insl
jnp
jp
pop
and
sbb
ficoms
rcr
fs
movsb
and
pop
add
in
ja
push
roll
hlt
mov
das
mov
fadds
out
adc
sub
dec
rcr
std
in
push
adc
xchg
xor
ds
popf
xchg
fidivrs
jne
cmpsl
adc
in
aam
xchg
in
stc
lret
aaa
fdivr
in
shll
les
out
mov
outsl
sahf
fnstsw
into
sub
cmp
or
inc
not
sub
adc
jg
inc
or
or
nop
mov
pop
loope
cmp
lahf
mov
jle
xor
cmpsb
das
mov
push
jp
call
sub
cmp
mov
addr16
mov
stos
cwtl
or
and
sub
mov
and
enter
or
jns
cmp
mov
inc
xchg
ljmp
push
out
sub
xor
xchg
jg
cmpsl
pop
mov
mov
cwtl
inc
lcall
mov
pop
or
mov
ja
mov
or
dec
aam
pop
out
sub
xchg
jle
aam
add
push
push
cmp
aam
xor
inc
adc
pop
mov
mov
push
sub
pushf
mov
ret
jg
jp
clc
in
add
pop
mov
push
js
into
mov
mov
add
clc
xchg
mov
cld
aad
mulb
inc
outsb
sbb
mov
jns
negl
push
pusha
mov
shll
xchg
push
inc
imul
scas
sbb
xlat
cmp
out
add
jo
jae
sbb
adc
pop
gs
jb
push
call
mov
stos
jg
and
inc
cmp
mov
and
decl
cld
pop
out
lahf
adc
push
ljmp
test
sti
add
fisttpll
mov
ficoms
and
dec
dec
mov
rorb
into
insl
mov
arpl
jp
clc
leave
loopne
push
enter
and
add
rcll
adc
xchg
add
pop
inc
inc
inc
jl
push
and
xor
add
adc
jecxz
repz
shl
mov
mov
cmpsb
arpl
inc
inc
jbe
and
xor
add
adc
jecxz
repz
shl
mov
mov
cmpsb
arpl
movb
and
xor
loop
repz
shl
mov
mov
cmpsb
arpl
inc
inc
jbe
and
xor
xorl
es
or
imul
cmp
dec
imul
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
outsl
adc
dec
xor
loop
dec
cs
and
or
fisubs
lock
loopne
adc
dec
xor
das
push
aas
inc
pshufw
out
nop
incl
outsl
sarb
loopne
adc
dec
xor
das
push
aas
inc
pshufw
out
scas
mov
adc
cli
xchg
icebp
loopne
adc
je
push
xor
out
mov
add
out
mov
imul
xlat
cli
sbb
jnp
sub
sbb
inc
adc
mov
mov
adc
and
fdiv
adc
add
sub
dec
lret
test
loope
push
stos
jle
mov
pusha
call
ret
setg
outsl
out
jg
and
push
sub
cltd
pop
xor
jp
xor
pop
push
cmp
or
stos
rcll
mov
mov
pop
aad
orl
inc
test
icebp
sahf
mov
xchg
cmp
xor
push
in
fwait
int
cmpb
xchg
xor
xor
in
loopne
adc
dec
xor
das
push
aas
inc
pshufw
out
nop
incl
scas
sarb
cmpsb
jge,pn
shll
jbe
data16
aas
dec
add
sbb
jmp
scas
mov
flds
sub
xor
xor
dec
pusha
mov
scas
in
int
scas
mov
ljmp
inc
xor
aas
inc
pshufw
out
nop
incl
scas
sarb
loopne
adc
dec
xor
das
push
aas
inc
pshufw
out
nop
incl
scas
sarb
loopne
adc
rol
jo
rcll
xor
jbe
pop
pop
in
test
ret
insb
dec
out
xchg
insl
mov
pop
ljmp
or
mov
test
cs
popa
sar
cmpb
cmpsl
or
lea
push
jno
inc
movsb
add
xchg
sub
sub
rorl
mov
test
cmp
leave
mov
and
cmp
hlt
adc
add
push
scas
lods
mov
cmpsb
cmp
adc
dec
ret
testb
add
or
pop
dec
icebp
insb
loop
js
mov
mov
inc
push
and
adc
push
mov
sti
mov
inc
insb
cld
divb
cmp
iret
or
fwait
lahf
jle
out
stos
dec
sub
imul
cmpsl
aaa
or
sahf
xor
xchg
std
ficompl
pop
jbe
rolb
or
xchg
lret
test
push
cmp
push
sub
rolb
ja
sub
daa
rolb
testb
pop
lds
xchg
movl
enter
dec
std
push
ficoml
mov
lods
dec
and
leave
pop
cmp
mov
stos
xor
orb
mov
push
mov
inc
aas
jmp
rolb
jge
dec
leave
lods
xchg
rclb
mov
out
fbstp
pushf
out
loopne
into
pop
dec
repnz
dec
popa
shlb
insl
fdivl
mov
iret
sub
sub
xor
cld
jp
cmp
in
xor
cmp
cmpl
mov
jne
sub
jl
cmp
mov
xor
and
xchg
jb
mov
imul
popa
pop
and
rorb
mov
xchg
sub
js
popa
aam
inc
add
pop
lret
lahf
pop
push
in
cmp
mov
jl
mov
mov
cmp
loope
pop
xchg
sbbb
divl
lret
stos
jge
sub
adc
xchg
jecxz
sub
icebp
mov
pop
mov
pop
js
cmc
and
loope
inc
aad
adc
sbb
mov
inc
fnstsw
divb
adc
repz
out
pop
repnz
mov
cmp
enter
mov
inc
xchg
or
pushf
mov
imul
xchg
scas
repz
push
mov
ret
pusha
out
or
lea
jg
enter
lods
fnstenv
cmc
repnz
xchg
stos
mov
data16
sbb
repnz
enter
dec
bound
jp
add
fimull
sbb
fildll
popa
cmc
sbb
in
movsl
push
adc
lea
subb
notl
push
or
movl
mov
repnz
in
mov
mov
rclb
inc
out
mov
cmpsb
add
dec
and
dec
shrl
xor
add
in
inc
stc
rolb
lcall
sub
popf
lock
pop
cmc
xchg
addr16
mov
enter
popa
adc
push
dec
push
daa
pop
mov
scas
jg
xor
xor
mov
loope
xchg
push
dec
jp
jmp
in
lea
jne
mov
xchg
scas
test
xchg
xor
add
call
int
sahf
or
adc
sub
or
jnp
out
jecxz
ljmp
sahf
push
adc
adc
into
out
jnp
shrb
jg
popa
bound
add
xchg
pop
cli
sub
fdivl
xchg
out
mov
cmp
test
fdivp
mov
mov
stos
or
imul
cmp
pop
xor
fcompl
sub
test
jno
cmp
sbb
xchg
pushf
adc
or
sub
sbb
inc
pop
mov
mov
leave
pop
mov
jp
adc
push
mov
pop
mov
addr16
pop
xchg
push
bound
jle
jnp
jno
loop
sub
ss
stos
imul
mov
xchg
adc
jmp
add
les
mov
sti
test
push
jge
cltd
add
cmp
push
mov
and
pop
nop
loop
dec
push
mul
jno
xchg
add
or
les
sub
es
mov
sar
jae
in
dec
jmp
ja
adc
fs
inc
decb
sub
stc
cmpsl
std
sbb
fldl
add
repz
sbb
ficomps
mov
lret
adc
cmc
sbb
pop
lret
call
sar
pop
movsb
mov
xchg
aas
push
sub
lock
xlat
iret
je
push
ss
dec
xchg
jbe
mov
out
shl
add
cmp
dec
test
int
iret
fdivrs
xorl
mov
mov
push
push
aam
fistps
pop
stos
jg
cmp
sbb
rcll
sbb
loope
jp
es
out
lods
dec
xchg
cmpsb
push
aas
shl
stc
dec
sbb
in
xor
lret
outsb
dec
repnz
jo
lcall
scas
mov
pop
sbb
inc
ljmp
dec
nop
iret
fdivrl
lret
mov
cld
xor
or
xchg
stc
out
lds
jne
mov
and
stos
mov
sub
xchg
push
movsb
xchg
dec
mov
dec
scas
stc
popa
jl
cmpsl
sub
fdivl
dec
jns
jne
and
out
cmpsl
pusha
or
shr
cs
lret
xacquire
push
push
xchg
dec
push
dec
pop
or
or
pop
dec
out
cli
or
push
jl
and
fistps
mov
sbb
cmpsb
lcall
out
and
or
jecxz
aas
push
push
pop
data16
leave
sbb
inc
xor
xchg
mov
insb
sbb
ljmp
sbb
adc
in
das
xchg
and
push
mov
sbb
mov
sbb
jp
lahf
sub
xchg
fidivrs
or
mov
jle
mov
enter
mov
leave
mov
aad
iret
lea
fldl
ret
movsl
xor
repnz
jo
push
shll
scas
cmp
push
push
dec
pop
sub
pop
jb
cmp
xchg
or
repnz
inc
adc
pop
cld
test
ds
repz
sbb
lods
mov
adc
or
test
pop
dec
fnsave
in
fstl
mov
sbb
pop
mov
shll
add
sbb
es
inc
popf
jo
push
xchg
mov
cmp
lret
mov
call
int
imul
insb
sub
add
push
aad
shl
push
movsl
add
repnz
imulb
jns
jo
pushfw
movsb
add
addr16
pop
scas
cmp
jecxz
sahf
mulb
push
push
push
aas
out
testl
lret
pusha
or
mov
adc
arpl
stc
sahf
or
sbbb
imul
or
or
jns
mov
mov
xor
nop
jmp
adc
out
and
mov
pushf
sti
roll
pop
gs
jecxz
and
mov
jmp
adc
test
or
adc
imul
test
pop
shr
pop
fistpl
xor
add
and
stos
cli
and
sbb
test
sbb
loop
push
lock
sbb
aam
add
jmp
adc
test
sbb
mov
push
add
repz
pop
xchg
jne
dec
lds
cwtl
pop
mov
add
mov
int3
or
and
xlat
jle
bound
outsl
xor
lods
cmp
push
sub
cltd
sahf
dec
in
sub
add
and
in
shrl
rorb
push
ror
rclb
mov
test
pop
add
mov
cltd
addb
lock
inc
roll
push
insb
xchg
xor
mov
adc
sti
test
xor
and
dec
mov
sbb
and
cmc
push
add
push
fsqrt
mov
and
lret
mov
movsl
adc
pusha
arpl
enter
jae
mov
dec
cmpsl
sub
sbb
dec
mov
pop
ret
or
push
add
popa
or
mov
fdiv
mov
test
out
sbb
add
adc
mov
loop
cmp
adc
je
mov
jo
fs
ja
icebp
lcall
ret
xchg
test
jo
ret
jl
scas
imulb
lret
hlt
add
mov
shl
sti
mov
pusha
out
in
inc
int
push
sahf
pushf
das
push
sub
sub
xchg
fbld
aam
xchg
jns
psllw
rcll
push
test
jecxz
adc
out
pop
scas
std
insl
test
int3
add
outsb
add
fadds
fnsave
sbb
fcoms
cmp
imul
or
sahf
inc
xor
jecxz
pop
push
pop
out
aad
std
mov
mov
pop
sbb
and
adc
pop
lret
xchg
das
pop
cmovl
fs
lret
mov
push
jae
cli
xchg
push
call
into
dec
out
adc
push
jle
pusha
outsb
sub
repz
mov
ret
lock
xchg
push
jl
mov
xor
pushf
lcall
call
mov
xor
add
sub
sbb
popa
js
inc
pushf
lds
jne
dec
iret
mov
jae
in
xor
adc
std
out
sbb
jg
xchg
cmp
test
int
add
lret
shr
and
xchg
fistps
adc
mov
shrl
jbe
or
mov
insb
loop
lock
hlt
mov
lods
gs
add
xchg
and
leave
dec
pusha
push
sbb
cmp
cld
pop
cmc
jmp
popf
aas
or
xchg
mov
xor
lds
and
mov
loopne
popf
lock
imul
test
xorb
sub
inc
int3
leave
in
clc
insb
push
cmp
jbe
sbb
xchg
or
std
cmp
sub
add
cmpl
xor
mov
mov
push
or
ds
ret
or
aaa
lcall
xor
jo
and
adc
jg
iret
stos
pop
scas
and
fcomps
in
or
sbb
xor
cmp
pushf
shll
and
sti
cmp
inc
stc
loope
push
sbb
or
nop
adcb
dec
cmp
mov
inc
mov
fdivrs
sbb
leavew
lea
lea
mov
mov
ds
pusha
mov
inc
ja
mov
mov
arpl
cmpsl
adc
sub
or
mov
mov
cmp
jg
push
in
popf
subl
mov
sub
sub
cld
add
and
cmp
cmp
mov
fsubl
adc
push
insl
outsl
or
repnz
sub
mov
pop
test
add
adc
mov
scas
add
adc
loope
xchg
js
popf
fcmovnu
int3
sbb
ret
mov
xchg
mov
mov
repnz
dec
pop
cld
or
insb
js
add
jg
roll
fstpl
loopne
cmp
movhps
ficomps
or
jl
add
jl
push
pop
jnp
test
cli
and
mov
aaa
push
dec
add
and
cmp
push
mov
xchg
add
ss
test
in
fcoml
xchg
notl
aaa
jns
inc
pop
repz
or
fstps
ret
mov
stos
out
sahf
sti
hlt
add
lret
jle
mov
add
mov
cmc
sub
mov
out
roll
ret
arpl
mov
imul
mov
pusha
ja
xor
das
jns
lahf
lods
jnp
int3
inc
lret
sbb
mov
inc
fbld
fwait
jnp
pushf
mov
aam
mov
scas
cmp
and
xchg
adcl
icebp
jbe
lret
adc
mov
jo
rep
std
leave
xchg
cmp
into
fs
fisttpl
mov
xchg
mov
jo
and
add
test
xchg
leave
in
jge
das
popa
inc
jl
pushf
lret
add
xor
out
sub
xchg
or
test
xor
push
jns
inc
pop
sub
rcrl
imul
sub
aas
lods
pop
cmp
mov
push
outsl
adc
mov
fsubl
aam
lret
mov
out
mov
fs
mov
ss
in
lods
add
add
test
xor
mov
or
fimuls
lea
ret
daa
pop
push
fcomip
out
sub
cmp
aas
mov
imul
popf
lds
sbb
ljmp
rcl
push
add
mov
adc
aad
or
or
mov
dec
les
adc
sub
rcrb
das
ja
sti
add
mov
lahf
jecxz
mov
lcall
xlat
fnsave
adc
fstl
or
adc
outsb
mov
fcomps
shr
pusha
push
lret
pop
mov
jne
mov
aad
or
insl
insl
ja
jbe
aam
adc
and
aas
insl
cmpsl
inc
xor
lahf
adc
or
leave
dec
rolb
xor
jae
sbb
jg
mov
pop
jae
mov
xor
inc
inc
fucom
jb
sub
push
mov
xor
nop
cmp
mov
xor
cmpsl
dec
mov
sbb
sub
sub
push
sahf
jno
mov
sub
movsl
or
int
lea
daa
scas
adc
std
shlb
fbstp
jmp
stos
cwtl
cmc
cmpl
fiadds
inc
dec
push
lahf
mov
mov
or
int3
dec
sbb
push
daa
jge
jns
jb
sub
mov
lods
sub
cmpsb
out
fdivrs
stc
xchg
jnp
push
fdivs
add
shrl
into
pushf
pop
mov
ficompl
fistpll
mov
sub
mov
jp
xchg
push
pop
xchg
adc
xchg
mov
sbb
testl
push
int
dec
sbb
mov
adc
sbb
or
repz
xlat
sub
dec
mov
sbb
mov
cmpsb
xor
loope
stc
mov
in
jns
pop
lcall
shlb
push
rorb
mov
fsubr
dec
mov
testb
fists
and
cwtl
mov
push
dec
xchg
in
in
and
sahf
add
mov
push
pop
inc
mov
loop
test
stos
bnd
push
hlt
push
mov
fwait
inc
movsb
flds
cs
push
aad
pop
xchg
jb
cmpsb
and
xchg
sbb
cwtl
mov
or
mov
aam
outsl
aam
leave
pushl
icebp
js
push
jmp
dec
movsb
outsb
cltd
mov
sbb
in
add
bound
mov
lret
inc
adc
sub
arpl
aas
jb
lcall
lods
fidivrl
enter
mov
scas
cmp
hlt
cs
cwtl
lods
and
adc
or
data16
jnp
aad
pop
rolb
jmp
andb
cmp
xor
subb
adc
mov
dec
js
fldcw
push
add
jecxz
pop
sahf
scas
popa
mov
cs
mov
shlb
pop
inc
je
loopne
xchg
lcall
push
or
fcompl
adc
fs
sbb
mov
call
lret
mov
sub
popa
fwait
loopne
into
mov
inc
fs
ja
fsubl
call
int3
cs
sbb
stos
push
xchg
pop
lcall
in
and
xchg
mov
jo
lret
xchg
repnz
into
hlt
outsb
add
shl
nop
xchg
xchg
sub
mov
pop
xchg
pop
incb
fiadds
inc
jl
es
mov
bound
lods
pop
and
adc
sub
or
ret
mov
mov
push
loopne
sti
xor
jge
xor
lcall
sub
adc
sarb
test
push
and
jae
insb
pop
mov
fwait
lahf
stos
loope
sub
add
fnstenv
scas
test
fwait
push
fistl
dec
mov
fnsave
mov
mov
mov
dec
jo
loop
jmp
fdivrl
pop
mov
fbstp
push
insb
leave
popf
jae
jecxz
es
fbstp
mov
mov
jg
push
sbb
enter
jge
in
in
or
jle
jle
mov
test
jmp
push
in
xchg
jne
call
shll
pop
sbb
insb
int3
sti
jecxz
outsb
jp
or
lret
mov
into
std
fidivl
adc
hlt
daa
cmp
mov
or
push
mov
jg
repnz
xchg
es
jns
movsb
and
cltd
mov
inc
add
dec
jp
sbb
adc
xor
mov
fwait
pop
mov
pop
ja
outsl
push
fwait
outsb
es
pop
and
dec
xor
pop
push
pop
fwait
add
push
mull
dec
dec
int3
mov
gs
and
popa
dec
sub
mov
mov
sbb
mov
enter
data16
pop
or
mov
dec
cmc
je
pop
push
or
int
int3
or
movsb
int
inc
popf
mov
sub
mov
push
test
xchg
push
test
imul
pusha
inc
lret
mov
cltd
mov
jnp
pop
mov
dec
fmulp
gs
mov
sbb
mov
jmp
cmp
cli
popf
pop
jp
mov
out
add
andl
and
jg
loope
jp
mov
das
std
scas
lahf
mov
test
sub
or
sub
add
lret
lock
xchg
push
int3
test
popf
pop
xor
enter
call
test
loopne
push
ficoms
aad
nop
push
and
test
popl
mul
jge
lea
roll
and
xchg
fnstsw
ds
test
mov
lea
pop
xor
sahf
mov
sub
and
fs
sbb
pop
xorl
ret
jmp
fwait
bound
push
push
lods
dec
and
cwtl
cmp
jmp
arpl
into
rep
int
jns
mov
lock
xchg
mov
sbbl
test
and
ret
sti
bound
cmp
push
mov
push
popa
cmp
fucomip
cltd
lar
xor
mov
dec
xor
jl
cmp
mov
hlt
mov
push
dec
ss
icebp
push
out
outsb
dec
or
cwtl
and
cld
mov
jns
and
dec
outsl
xchg
sbb
push
push
mov
ljmp
sub
jo
inc
xchg
adc
mov
in
nop
mov
pop
lret
ds
movsb
pop
and
inc
jns
cmp
mov
pop
pop
cltd
je
mov
fcmove
jge
mov
cmp
stos
mov
idivl
sub
popf
sbb
popa
sahf
add
pop
push
fldcw
add
and
inc
loop
add
rorb
aaa
pop
mov
push
pop
std
jb
loopne
loopne
cs
add
dec
movsl
sub
jo
ds
insl
test
sub
sbb
stc
fsubrl
cmp
sahf
mulb
jl
xor
icebp
out
ficoml
xor
xchg
mov
mov
pop
sbb
lods
fildll
call
inc
dec
adc
cmp
push
xchg
push
jb
scas
adc
adc
mov
in
out
std
out
sub
mov
jg
mov
sub
and
jecxz
jae
xor
aas
sbb
sub
pop
int
lds
cmpsl
js
cmp
inc
stos
mov
mov
or
add
daa
clc
loope
fs
or
sub
scas
cld
xchg
mov
dec
pusha
jle
push
and
jmp
dec
lock
inc
mov
xor
xchg
in
xor
dec
cmc
stos
rcl
nop
mov
or
es
andps
mov
sbbb
jo
ja
sbbl
inc
push
lahf
and
test
std
sub
mov
mov
movsb
pop
inc
jae
leave
mov
mov
jmp
pusha
cmp
lret
push
xchg
mov
dec
jl
cltd
jmp
adc
je
jle
sub
test
roll
push
add
push
lret
hlt
push
out
adc
in
subl
popa
pop
sbb
push
aad
mov
imul
bound
bound
dec
xor
das
push
aas
inc
pshufw
out
nop
incl
scas
sarb
loopne
adc
dec
xor
das
push
aas
inc
pshufw
out
nop
incl
scas
sarb
loopne
adc
add
xor
scas
push
aas
inc
lahf
pusha
out
nop
incl
scas
sarl
loopne
adc
dec
xor
das
push
aas
rorb
pop
lahf
out
outsl
ljmp
gs
xlat
fistps
aas
decl
out
pop
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
mov
repnz
loop
sub
mov
add
jb
adc
push
xor
mov
repnz
loop
xchg
icebp
xchg
shll
inc
add
bound
inc
add
push
and
ljmp
fldcw
adc
or
popa
pop
push
jbe
inc
push
dec
enter
adcl
push
dec
cmpsl
mov
js
ljmp
and
dec
dec
stc
sti
sub
jno
dec
inc
pop
movsb
lods
sbb
jb
pop
inc
ret
pop
dec
dec
test
and
jne
dec
adcl
inc
cmp
pushf
popf
popa
mov
mov
mov
or
lock
ds
shlb
stos
mov
mov
sahf
jno,pn
lret
xor
push
cmp
or
jno
push
push
jmp
lret
idivl
cltd
adc
mov
sub
outsb
push
xor
mov
popf
and
and
inc
xor
push
jmp
loop
xchg
loope
shll
pop
sbb
jnp
or
pop
sub
int
aam
in
in
xchg
nop
xchg
jecxz
and
jne
popa
ja
add
pop
cmp
into
mov
loope
lea
adcb
pop
push
pusha
popa
bound
add
push
xor
ret
stc
cmpsl
test
mov
mov
add
bound
jno
inc
xor
mov
repnz
loop
xchg
icebp
add
shll
add
bound
jno
inc
xor
mov
jne
loopne
sbb
outsl
loop
packuswb
push
cwtl
movsb
pop
jo
push
xor
lret
out
push
push
push
mov
sbb
out
or
inc
fstpl
push
leave
int3
cmp
or
cmpsb
aam
mov
cld
mov
outsb
push
aaa
movl
pop
push
sub
sub
cmpb
mov
dec
xchg
or
cmp
mov
mov
push
xchg
push
xchg
or
iret
test
and
pop
jnp
jge
dec
mov
cs
mov
mov
loopne
test
out
mov
dec
hlt
rcll
mov
mov
push
mov
shlb
dec
sbb
test
outsb
jmp
ja
fists
dec
lahf
push
jae
sub
xor
popf
jno
cmp
leave
inc
jns
sbb
mov
jmp
lret
jb
pop
push
jo
inc
cltd
fldenv
mov
xor
push
xor
pop
cmc
gs
test
or
sbb
pop
jnp
xchg
dec
cmp
loopne
out
mov
bound
mov
out
mov
cmp
rolb
jo
dec
aad
out
push
push
mov
iret
testl
ret
fidivrl
dec
call
mulb
cli
leave
bound
aam
push
lcall
adcl
mov
jge
stos
mov
inc
inc
jle
call
rclb
pop
mov
adc
inc
enter
or
gs
jae
mov
sbb
sbb
iret
cld
cmp
sbb
testb
rorl
xchg
fs
adc
test
adc
sbb
scas
nop
test
and
cs
xor
or
int3
lock
and
pop
hlt
iret
inc
cwtl
adc
stos
in
cmp
mov
or
jae
jae
fs
xchg
inc
cmp
cwtl
pop
imul
addr16
dec
sbb
pop
loopne
or
rcr
rcrl
jle
sbb
pop
push
push
repnz
pop
in
adc
jae
dec
jg
pop
sub
iret
xchg
push
loopne
cmp
mov
mov
stc
imul
mov
pop
out
sbb
xchg
jne
mov
outsl
cwtl
or
rclb
and
xchg
jo
call
dec
mov
or
je
sbb
lret
dec
sti
sti
jmp
imul
negl
push
rcrb
push
push
std
fsubrl
mov
in
or
lods
mov
orb
std
or
mov
in
dec
xchg
aaa
jg
fnstenv
xor
cmp
addr16
sbb
mov
pop
in
mov
jne
push
cmc
fdivl
outsl
iret
push
mov
jae
lds
cmc
movsl
add
out
jns
lock
shll
clc
jbe
sub
xor
add
jg
mov
mov
cwtl
pop
add
sbb
fnstenv
addb
sbb
adc
shl
dec
fbld
and
sub
mov
sub
add
leave
pop
stos
sbb
insb
int3
sti
push
fisubrs
cwtl
enter
cmpsb
adcl
or
cltd
sbbl
xchg
or
fsubl
sub
sbb
fwait
mov
or
cmp
lret
mov
stc
push
cwtl
sub
lods
adc
int3
popf
test
mov
les
cmp
cltd
in
xor
iret
inc
shll
adc
mov
cmp
test
inc
lock
cmp
pop
inc
cltd
fldenv
push
pop
ss
mov
or
sub
push
add
sbb
out
test
xchg
mov
mov
inc
cltd
scas
cmc
popa
add
rolb
test
dec
call
inc
sbb
and
jp
pop
push
mov
lret
inc
lret
stc
lahf
mov
out
ds
das
mov
xchg
jne
addb
jmp
ds
aam
xchg
fdivrp
pop
andl
into
repnz
dec
xchg
inc
outsl
jp
shl
mov
jb
inc
jae
aaa
leave
out
jo
aam
and
dec
call
loopne
cmp
mov
and
fisttpll
enter
and
mov
mov
push
mov
add
cmp
daa
push
std
lret
sbb
lret
aaa
xor
lods
scas
inc
mov
jl
sbb
jp
add
out
outsb
xchg
insb
jns
or
mov
int3
sbb
mov
inc
iret
jb
pushf
sarb
jmp
cmpsl
push
mov
fsubrl
mov
cli
adc
xchg
xchg
pop
mov
call
idiv
filds
adc
lea
pushf
mov
inc
movsl
ljmp
lcall
pop
pop
aad
cmp
fdiv
mov
and
mov
push
pop
jl
popa
addl
imul
add
add
les
dec
push
or
loopne
push
push
out
adc
int
jnp
aaa
clc
shrb
add
pop
jo
loope
cmp
testl
xchg
inc
mov
mov
cmc
mov
mov
and
fwait
sahf
iret
xor
outsl
hlt
push
sub
push
or
jg
pop
cs
dec
popa
jp
in
shlb
add
pop
int3
pushf
and
mov
jl
pop
xor
jbe
adc
mov
add
mov
jne
push
inc
aam
fs
mov
ljmp
mov
or
or
sahf
mov
xor
push
push
orps
ds
pop
mov
mov
push
fidivrl
pop
inc
nop
cwtl
js
jne
and
jg
subb
push
xor
lock
test
jmp
xchg
jns
xor
cmpsb
xchg
aas
imull
jl
into
inc
fildl
mov
test
scas
mov
inc
sbb
hlt
push
mov
ret
xor
add
sub
fdivrs
fdivrl
push
or
dec
cwtl
mov
lods
sub
adc
subl
adc
lock
pop
jo
sbb
jne
test
mov
mov
lret
ror
into
fnstenv
pslld
push
ss
scas
cwtl
add
cld
add
mov
arpl
scas
out
bound
lret
or
add
adc
into
arpl
xchg
adc
jl
dec
pop
in
cmp
ror
mov
mov
je
sti
pop
js
ret
inc
xchg
add
movsl
pop
mov
sbb
inc
adc
inc
aam
jnp
mov
jmp
jb
movsb
sub
or
jns
mov
rorl
and
pop
pusha
lock
sbb
cmpsb
dec
mov
xorb
xchg
lock
mov
add
pushf
repz
fsubl
inc
pop
gs
inc
pop
test
xchg
imul
push
fs
and
push
mov
sti
push
inc
int
pop
cltd
imul
shl
jbe
push
addr16
cmp
lret
ljmp
push
in
and
push
push
aaa
inc
jne
add
jl
xchg
sbb
lcall
loope
es
inc
jae
stos
xor
fcompl
jo
dec
mov
fsubr
cmpsl
popa
dec
lret
hlt
inc
shrl
popa
pop
jecxz
xor
and
xchg
cmpsl
test
push
pop
sub
adc
inc
fsts
jno
xchg
pop
dec
je
repz
ds
cmp
aad
and
or
cmpsb
je,pn
inc
jbe
pushf
jle
inc
and
lock
mov
cli
push
lea
js
dec
ds
adc
std
into
cmpsl
lret
xchg
cmp
es
sub
lcall
inc
testb
in
into
push
and
roll
adc
stc
aaa
out
js
scas
push
push
xor
inc
ljmp
push
inc
lcall
cli
dec
mov
cli
lods
aas
pushf
xor
jmp
jae
fistpll
add
inc
ret
sar
ljmp
sbb
std
add
in
pusha
in
xchg
out
ljmp
pop
shr
and
sbb
cmp
inc
adc
stos
adc
mov
aaa
int3
stos
jl
add
or
mov
mov
daa
push
gs
movsl
add
js
sar
imul
add
inc
push
add
int
ljmp
mov
jmp
loope
enter
stos
xchg
shlb
aaa
js
ror
or
cs
insb
mov
dec
fs
sub
and
sbb
and
arpl
inc
sub
inc
jecxz
xor
in
sub
stos
mov
roll
dec
inc
in
mov
cltd
push
pusha
loope
sub
scas
aad
imul
dec
andb
add
xchg
clc
cmpsb
or
fidivrl
fmulp
sahf
mov
call
loopne
test
mov
cs
sarl
insl
cwtl
sti
jno
and
stos
jns
aaa
imul
jo
fimull
ss
in
cmp
insb
mov
jbe
ds
push
out
data16
fdivrs
ljmp
leave
negl
leave
xor
lds
ss
sbb
out
jae
repz
mov
or
push
mov
jge
neg
mov
out
and
push
daa
outsb
mov
nop
pop
loop
push
dec
jmp
bound
push
inc
inc
adc
lret
jecxz
cmp
std
repnz
clc
xchg
sbb
into
sbb
scas
int3
and
popl
dec
adc
fwait
aas
std
and
je
mov
jmp
jl
jmp
orb
stc
xchg
dec
jmp
lds
mov
loope
cwtl
loopne
sub
sub
or
fstpt
push
ficoml
int
cld
test
popf
jg
cmc
push
lods
xchg
cmp
jo
insb
and
popf
and
stc
rclb
mov
mov
sub
mov
pop
pop
mov
pop
ja
insl
stos
xor
lret
push
and
mov
out
sbb
mov
notl
and
pusha
or
sub
stc
mov
fidivrs
jne
fwait
lods
mov
jae
int3
out
and
push
cmp
dec
adc
movsb
aas
cltd
iret
bnd
hlt
add
xchg
adc
addr16
cmpsl
ficomps
sti
dec
lea
js
pushf
xchg
xor
sub
sub
mov
jmp
push
push
mov
mov
insl
insl
jmp
jo
dec
shrb
das
test
loopne
mov
lods
sub
lcall
or
push
xchg
fidivl
pop
rorb
lea
into
fnstsw
adc
dec
fdivrs
in
call
dec
adc
add
es
ds
sub
add
pop
adc
jno
sub
push
aas
ds
adc
leave
add
dec
sub
pop
subb
pop
inc
sarl
xchg
and
in
sbb
mov
add
mov
call
loope
cmp
jge
mov
and
pop
popf
xorb
mov
and
sarb
pushf
loope
xor
sbb
test
add
lea
mov
gs
leave
stos
add
mov
dec
repz
faddl
push
std
dec
lock
fidivrl
xchg
pop
jl
leave
popf
pop
jg
addl
loopne
paddsw
pmulhw
xchg
sub
sahf
cmpsb
ljmp
jae
sub
cmp
mov
loope
cli
mov
pushf
push
shlb
daa
pop
cmc
cwtl
push
out
sbb
into
cmc
das
dec
jb
mov
jmp
ret
nop
mov
pop
mov
adc
xor
mov
mov
int
movsb
xor
cli
dec
movsb
js
and
popf
imul
cmp
sbb
add
fldenv
loop
and
fidivs
hlt
je
notl
mov
jo
rep
adc
sbb
insl
repz
rcrl
aaa
sbb
nop
cmp
jns
lock
xor
ss
jb
arpl
das
fcompl
clc
stc
mov
jne
sub
cmc
dec
insl
jno,pn
mov
je
sub
mov
mov
daa
mov
jns
fidivrs
cmp
dec
xor
jl
dec
xchg
insb
insb
pushf
lret
xchg
mov
data16
arpl
fsubl
dec
push
out
fidivs
inc
fldenv
sub
repz
mov
add
add
push
pop
rcl
andb
push
lcall
and
sub
pusha
les
arpl
mov
xor
shl
insb
adc
sbb
and
add
mov
lcall
dec
pushw
xchg
jae
cmp
push
pop
sub
jne
testb
aam
adc
jae
pushf
shrb
data16
loop
dec
rol
lock
inc
aad
cwtl
jg
inc
call
mov
inc
pushl
cmp
sub
fdivrs
cmp
dec
in
push
jne
scas
push
pop
inc
jno
sbb
xchg
mov
pop
popf
jle,pt
dec
adc
add
loopne
xor
fidivl
movsb
mov
push
pop
mov
notb
and
pop
sub
int3
add
stos
dec
loopne
nop
inc
mov
xchg
and
pop
movsl
cwtl
inc
fdivrs
or
push
cmp
jnp
push
mov
pop
nop
addr16
dec
sbb
mov
gs
test
mov
fsts
push
fldt
das
push
aaa
or
jle
dec
mov
mov
jo
stos
push
and
ret
push
xchg
sbb
pop
dec
test
cmp
xchg
lret
pop
pop
out
bound
aas
jmp
and
sub
loopne
loop
pop
push
in
mov
test
dec
call
lods
adc
pop
leave
aas
es
sub
mov
cmc
fcmovnu
jl
push
jp
lods
popf
dec
mov
ja
mov
jle
dec
sub
dec
lock
xor
mov
mov
mov
popf
mov
add
or
push
push
mov
mov
mov
cmp
ret
cmp
subl
add
cmpsl
movsb
in
sub
mov
xor
mov
lcall
sbb
clc
lret
pop
movl
sbb
jns
sbb
mov
rcr
loop
mov
pushf
cmp
mov
pop
lret
mov
cmp
sub
jmp
sub
adc
sub
add
scas
dec
js
push
push
fisttpll
inc
pop
push
ja
xchg
pop
xchg
and
fstpl
and
jne
mov
mov
daa
inc
out
and
cmp
iret
clc
outsl
pop
into
xchg
add
movsb
stos
mov
cwtl
or
aam
fistl
dec
decb
data16
jmp
and
enter
xor
push
pop
addr16
xor
punpckhwd
mov
xchg
cmp
xchg
jp
jecxz
scas
iret
mov
sub
push
xchg
divl
testl
mov
mov
mov
pop
rcl
loop
rcll
xlat
xchg
pop
or
sub
jne
ret
xor
or
icebp
inc
jl,pt
dec
and
adc
dec
push
fdivs
sbb
lret
xor
mov
in
fiadds
dec
inc
dec
or
fwait
push
xchg
mov
jno
jmp
dec
sbb
loopne
pop
adc
lret
arpl
inc
cmp
cmp
pop
xchg
mov
push
mov
ss
or
movsl
push
ss
cld
lods
ss
xor
jno
in
lret
sub
xor
fstpt
lret
cmpsb
enter
sbb
adc
into
cli
mov
scas
loopne
mov
mov
testb
xchg
popa
push
divb
add
xchg
andb
add
push
xchg
mov
sub
add
mov
call
iret
stc
inc
mov
pop
xor
aas
jl
lods
dec
adc
cmpl
xor
jl
add
pop
cmp
dec
js
mov
lret
in
cmp
or
xchg
es
xchg
cmp
xchg
jp
cld
cmp
insl
jo
iret
xor
repz
in
push
out
inc
ljmp
cmp
add
adc
push
clc
mov
xchg
mov
in
add
and
sti
jb
cmp
sub
es
jns
mov
cmp
into
pop
mov
in
jecxz
and
loopne
in
inc
shl
lods
ret
clc
jno
je
mov
dec
mov
mov
or
shrl
cmp
mov
mov
std
add
test
add
add
xchg
mov
mov
xor
in
pop
icebp
fcoml
test
cli
xchg
xor
adc
lods
rcrl
add
pop
call
scas
fbld
adc
out
cmp
aas
fcomip
sub
push
sti
jbe
pop
or
daa
cld
push
imul
inc
cmp
xchg
sahf
mov
sti
sarl
xorl
push
js
mov
ljmp
sub
in
add
hlt
pusha
enter
mov
jg
add
mov
ss
pop
ret
pop
cmp
xor
sarl
xchg
jnp
xchg
mov
sub
add
push
mov
test
cli
cmp
push
lahf
lods
pushf
xchg
les
cld
fstps
mov
mov
mov
xchg
insl
int
stos
mov
sub
repnz
sub
popa
adc
popf
xchg
jecxz
iret
cmpsl
mov
movsb
pop
icebp
jl
push
or
dec
aam
mov
cmpsl
adcl
jno
jnp
dec
rorb
dec
push
mov
pop
mov
push
xchg
adc
pop
dec
dec
gs
shll
xchg
mov
sti
roll
mov
lods
dec
stos
nop
cmp
dec
xor
push
push
pop
aaa
out
mov
pop
loop
sbb
mov
xchg
fsubs
cmp
mov
pushf
stc
sub
jne
mov
pop
mov
movsb
jb
cmpsb
mov
dec
fs
mov
sar
in
fimuls
jae
bound
xchg
jae
xchg
fs
xorl
pop
cwtl
stc
pop
ret
out
sub
in
in
out
mov
pop
pusha
lret
adc
sub
sbb
pop
dec
or
lods
mov
das
repz
or
mov
test
pushfw
fistpll
inc
push
fs
lds
idivl
lea
cmp
movsl
popa
repz
fidivl
ret
fistps
push
imul
cld
das
hlt
int
mov
aam
out
movsb
lret
pop
sbb
xor
pop
xor
fsts
sahf
add
cmp
scas
cmp
mov
jns
cltd
jmp
out
out
imul
cmp
mov
decb
lahf
cmp
lods
shrb
adc
mov
sbb
jle
lock
daa
shll
jg
mov
pop
lret
rol
push
ja
inc
lea
jge
or
mov
pop
pop
pop
sub
adc
mov
mov
icebp
movsl
sub
das
push
enter
mov
mov
and
outsl
insl
sub
test
cmp
loopne
loop
mov
mov
mov
xor
xchg
mov
imul
inc
filds
mov
inc
rolb
fwait
mov
mov
mov
jl
pop
das
mov
shll
sub
add
jae
add
dec
cmp
jne
aam
movsl
les
ss
pop
mov
repz
ficompl
xlat
mov
jo
push
add
push
call
mov
xchg
cmp
cmp
test
ret
popa
les
enter
jmp
pop
jno
xor
xlat
xchg
and
andb
dec
dec
dec
leave
iret
cmpsl
jmp
pushf
inc
pop
fcoml
pop
sub
adc
in
lds
cmp
aad
ljmp
rcrl
or
into
push
repnz
cmc
pop
fsubrs
dec
mov
ss
push
sub
mov
jne
aad
mov
fisubrs
test
push
ds
mov
pushf
jbe
inc
push
pusha
push
mov
movsb
cmp
mul
pop
dec
fdivrp
jmp
pop
lea
sti
stos
cmp
pop
mov
push
sbb
divl
call
add
mov
sti
mov
scas
pop
call
das
enter
jmp
mov
stos
pop
xchg
push
and
inc
inc
xchg
jg
lods
inc
add
pop
push
dec
push
add
loope
fs
lds
out
mov
scas
cmp
lock
int
ss
xor
or
add
push
adc
insb
add
cmpb
push
fwait
lods
xlat
cs
jae
xor
aad
xchg
xchg
lods
aam
or
sub
dec
jge
fstpl
das
icebp
inc
in
dec
leave
pop
mov
xchg
loop
xchg
icebp
add
shll
add
bound
jno
inc
xor
mov
repnz
loop
xchg
icebp
add
shll
add
bound
jno
inc
xor
mov
repnz
loop
xchg
icebp
add
shll
add
popaw
adc
inc
ss
mov
notb
addb
ficoms
call
push
lcall
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
fcoml
iret
inc
pushl
out
and
push
addl
subb
xlat
comiss
repnz
loop
adc
add
push
popl
jb
dec
pop
xchg
dec
sbbb
outsl
mov
aas
repnz
loop
mov
les
aaa
push
andl
push
cmp
or
je
jge
imul
inc
jmp
inc
fwait
pop
mov
sbb
jl
and
loop
pop
or
into
cmp
xor
jg
push
mov
bswap
xor
cmp
dec
xchg
repnz
push
popf
aas
jns
scas
and
pop
mov
rclb
into
mov
or
outsl
pop
mov
mull
adc
sbb
add
pusha
inc
jb
mov
out
pop
pop
dec
sti
dec
xchg
mov
ds
ret
iret
jb
arpl
inc
xor
and
jg
int3
aad
push
sub
mov
and
in
push
std
incb
repnz
sbb
lcall
fs
enter
xchg
push
sub
test
out
and
testl
xchg
aad
or
add
shlb
pop
xchg
dec
lock
das
lret
pop
scas
and
sbb
or
insl
xchg
popa
lods
push
xchg
xchg
push
stos
inc
lea
dec
testb
adc
cli
push
cmp
sbb
xchg
popfw
pusha
ret
outsb
xchg
mov
mov
dec
int3
push
popl
jb
bound
dec
cmpb
mov
aas
repnz
loop
adc
add
xor
and
jb
bound
dec
cmpb
mov
aas
repnz
loop
adc
cmp
xor
cmp
shrl
jmp
lock
sub
sbbl
ljmp
jle
out
addl
pop
xchg
inc
lcall
les
jnp
push
test
pop
mov
cmc
mov
daa
mov
push
notl
test
xor
inc
test
adc
sbb
out
cld
into
lea
pop
push
daa
jp
dec
lahf
jns
pop
xor
xchg
adc
mov
xchg
or
pusha
dec
addr16
and
repz
lret
dec
jp
outsl
cwtl
and
dec
lret
scas
adc
mov
lcall
push
popa
aad
sub
or
ds
jne
mov
in
jae
out
push
fdivrs
mov
jge
push
rorl
xor
cmp
cmp
ljmp
stos
mov
inc
cwtl
sbb
pcmpgtd
imul
or
outsb
addr16
xchg
jle
jns
mov
pop
imul
pop
leave
scas
ret
xchg
leave
jl
push
adc
mov
mov
fwait
pop
xchg
mov
mov
sub
ret
xchg
xchg
xchg
mov
mov
add
adc
push
cltd
xor
cli
jo
jns
sarl
xlat
enter
fmull
out
clc
cs
mov
fsqrt
cmp
inc
xchg
popa
adc
pop
lcall
inc
jns
popa
sbb
mov
dec
sub
add
rcl
fmulp
fldl
jae
test
or
add
xor
jmp
or
loope
lods
add
pop
mov
fcoml
sbb
addr16
cmpsb
inc
pusha
fidivrl
lds
sub
movsb
lods
push
aaa
fs
add
loop
imul
lods
xchg
dec
xor
mov
cmp
mov
fcoms
cmp
sub
int
in
pop
fsubrl
mov
mov
sub
repz
push
subb
lret
cmp
and
gs
jp
dec
lahf
jbe
nop
jns
adc
lds
dec
cmc
out
aad
ss
push
sub
pop
pop
or
stc
jno
scas
in
enter
mov
inc
pop
pop
adc
mov
popf
and
mov
add
or
or
sub
pop
lahf
inc
adc
std
xor
mov
addr16
sub
sahf
stc
pop
cmc
loop
and
fildll
rclb
call
mov
dec
inc
insb
clc
cld
daa
jge
clc
mov
push
dec
or
shrb
lss
mov
cmpb
sbb
or
mov
outsl
pop
pushf
mov
ret
sub
js
movsl
leave
jmp
jb
fs
and
cmp
or
stc
mov
push
lahf
mov
push
test
in
imul
jnp
xor
cmp
cmp
dec
and
test
lock
mov
adc
sbb
adc
mov
test
lcall
fnstsw
add
fdivrs
jge
sbb
jns
int3
inc
jecxz
loop,pt
dec
push
loope
je
lods
or
ja
sbbb
addr16
and
repz
and
xchg
xchg
push
mov
push
mov
sub
cmp
test
sahf
cmc
mov
fistl
sub
and
sarl
mov
bound
sbb
push
cld
mulb
jnp
dec
es
pop
push
mov
pop
stos
shrl
das
loope
push
call
add
mov
shll
shrb
je
push
sub
adc
inc
ja
sar
mov
mov
or
sbb
call
in
or
xorb
test
xorb
mov
dec
adc
leave
mov
pop
add
ret
loope
nop
call
clc
pop
xchg
xchg
push
dec
mov
jecxz
push
inc
adc
inc
push
xor
call
mov
ret
mov
dec
cltd
ljmp
pop
jae
lret
or
jge
bound
sbb
insb
cwtl
popf
jl
aad
loopne
hlt
add
jmp
inc
or
sub
ja
mov
rcrl
out
fmuls
pop
gs
pop
ja
and
push
lret
mov
arpl
inc
test
adcl
aam
inc
lock
and
leave
scas
loop
fwait
loop
jl
mov
and
dec
bound
rcll
or
fsub
stos
popl
daa
fwait
insl
pushf
hlt
out
lret
xor
pop
gs
push
ljmp
dec
imul
adc
jmp
ret
stos
mov
add
dec
mov
push
mov
dec
mov
in
lods
out
es
pop
mov
pop
orb
inc
loop
mov
fcoms
shrb
in
mov
or
lock
cmc
xchg
movsl
xchg
cmpsl
xor
mov
js
jl
push
lea
sub
mov
shll
xlat
stos
inc
insb
sarl
push
lock
add
sbb
cmp
dec
movsb
test
xchg
or
jnp
loope
es
inc
jmp
fisttps
dec
push
lahf
inc
mov
pop
lret
pushf
push
inc
xchg
lds
cmp
mov
stos
or
dec
xchg
ja
pusha
sahf
xchg
roll
inc
std
lods
stos
sti
jne
pop
inc
mov
sub
xor
ljmp
mov
jae
fcoml
in
sahf
or
push
dec
push
jno
mov
xchg
lock
daa
cwtl
sbb
aad
cmc
mov
push
adc
pop
pusha
cmp
or
int3
ficoms
inc
sub
jmp
mov
mov
jl
sub
scas
mov
inc
sti
pop
daa
mov
in
scas
xorb
loop
test
jno,pn
out
shl
mov
jns
data16
sbb
mov
push
out
lret
jmp
lret
sub
jl
mov
sub
shll
aaa
pop
imul
push
stos
gs
mov
stc
and
je
pop
xor
hlt
mov
pop
out
in
inc
shr
lock
sbb
jl
sahf
rcrb
mov
lods
mov
std
repnz
adc
adcb
xchg
push
sbb
rcrb
cmp
scas
jp
inc
mov
mov
fists
mov
jno
sbb
xor
adc
push
aam
xor
mov
pop
nop
sbb
je
add
jne
int
add
loope
adc
aaa
out
adc
hlt
out
cmp
pushf
dec
in
pop
add
or
popf
jmp
data16
xchg
dec
cmp
adc
mov
cwtl
fiadds
test
jne
sti
push
ljmp
scas
mov
aas
or
out
stos
outsl
mov
push
mov
jle
call
xchg
shl
pop
aas
leave
dec
rcl
jp
es
into
repz
out
mov
pop
movsl
in
enter
imul
sbb
adc
das
inc
add
imul
cs
xor
mov
adc
out
cmpsb
adcb
add
cmpl
sub
add
loopne
out
dec
rorb
faddl
lea
lds
arpl
in
js
in
pop
enter
xor
or
cmp
ljmp
pop
xor
push
popa
cwtl
test
jge
xchg
lods
jne
arpl
in
jbe
mov
xor
and
daa
loope
js
ja
stos
into
sub
pop
mov
mov
and
fldlg2
test
push
and
lods
mov
scas
test
inc
pop
jno
mov
imul
cs
and
loopne
xchg
push
pop
xor
adc
into
adc
push
jnp
movsl
stos
sbb
shl
sbb
pop
aas
les
adc
jecxz
push
adc
xor
adc
or
sub
pop
cmp
test
push
int3
fidivs
jnp
pop
stos
sub
fs
xor
outsb
das
mov
aad
roll
pop
neg
inc
inc
sub
xchg
ljmp
dec
mov
xchg
dec
pop
mov
sbb
mov
in
ss
adc
add
imul
sub
movsb
or
mov
mov
loop
loopne
and
xchg
fimull
add
fcompl
movsl
jbe
and
add
mov
cmpsb
stos
push
in
mov
jge
add
xchg
adc
adc
mov
rcr
dec
mov
dec
rolb
adc
aad
adc
mov
sub
imul
sbb
cmp
pop
ljmp
and
sbb
mov
adcl
pop
xor
sub
dec
add
cmpsb
fistps
lcall
lcall
dec
test
daa
out
xor
bound
adc
out
movsl
lods
add
sub
stc
xchg
push
xor
push
aas
pop
push
and
mov
cmpsb
aam
mov
sbb
cs
js
mov
xchg
loop
sub
mov
xchg
cmp
sbb
bound
cwtl
jp
repnz
out
movsb
inc
and
jmp
std
cs
popf
outsb
mov
xchg
test
sbb
push
pop
pop
rcrb
xor
ss
xchg
mov
aam
and
dec
repz
mov
pushf
outsl
push
ret
mov
repnz
orl
imul
loope
das
negl
xchg
fwait
dec
mov
or
sub
dec
push
lahf
jmp
pop
xor
sub
daa
mov
mov
ja
fiaddl
cmp
stos
cmp
scas
jmp
lahf
xor
add
inc
repnz
in
mov
nop
push
mov
jmp
mov
shl
push
or
mov
add
cli
movups
or
pop
mov
add
xchg
es
lods
cmp
mov
fcompl
int
fnstsw
jbe
push
jno
add
out
hlt
or
xlat
pop
add
in
stos
cld
cmpsb
add
das
ja
in
or
mov
cs
mov
jmp
xor
push
adc
adc
roll
push
mov
mov
data16
loopne
sub
mov
cli
jne
insb
icebp
movsl
std
ficompl
sbb
lods
and
inc
arpl
pop
clc
adc
mov
or
pop
xchg
jmp
dec
inc
pop
sahf
in
lar
sub
fs
out
loope
in
je
mov
xchg
popa
insl
js
mov
dec
or
adc
lcall
call
mov
ss
jle
addr16
sub
pop
gs
imul
fwait
out
scas
loop
lock
jo
dec
fwait
dec
fildll
filds
icebp
cmpsb
daa
jecxz
int
lods
out
imul
dec
cltd
ret
sub
scas
into
mov
rcr
aam
mov
shlb
or
gs
push
fmulp
inc
out
inc
adc
insl
imul
xchg
lret
stc
dec
pop
dec
push
stos
mov
in
gs
add
movsb
or
imul
mov
push
adc
daa
bound
and
in
sub
je
mov
addb
mov
sti
popa
pop
sti
dec
adc
fidivl
lret
movsb
add
dec
stc
dec
jne
jl
je
xchg
lret
test
cmpsb
adc
ret
jb
and
clc
data16
insl
pop
cmpsl
inc
iret
test
fcoml
cmp
jmp
outsb
mov
out
outsb
mov
icebp
push
sub
xor
sub
jne
rol
sbb
adc
mov
lea
out
or
dec
jmp
adc
jp
push
push
and
fs
ss
test
xor
xor
enter
mov
add
inc
pop
in
roll
scas
int3
adc
bound
mov
jge
nop
xchg
cmp
fimuls
jge
bound
aad
xor
scas
push
out
dec
ret
xchg
pushf
pop
pop
loope
lods
subl
xchg
mov
mov
push
mov
and
or
jne
movsl
xor
lods
and
leave
dec
mov
pop
mov
inc
push
add
xchg
lcall
pushf
cmp
push
rol
mov
sub
mov
adc
xor
inc
push
cmp
xchg
cmc
adc
jg
cmp
clc
loopne
or
nop
out
dec
dec
sub
jno
jo
jb
jmp
or
divl
lds
mov
push
dec
xor
push
dec
add
call
jp
pop
test
add
jb
jmp
cmp
pop
aam
flds
cmp
cltd
push
js
imul
stos
mov
shll
shl
int3
and
aam
loop
dec
lods
push
cmpsb
mov
xor
jmp
sbb
aas
int
mov
aam
and
and
xchg
inc
push
stos
and
push
pop
mov
repnz
mov
scas
push
ss
pop
test
out
cwtl
ja
xlat
lods
test
and
cmp
add
jne
lcall
and
fistpll
shlb
push
push
inc
pop
lret
pop
mov
add
mov
sbbb
cmp
add
mov
jno
add
call
and
sub
add
icebp
cld
mov
sub
mov
xor
cmp
sbb
int
scas
shll
cmp
pop
roll
jl
ljmp
pop
imull
cltd
push
xor
jg
mov
lea
and
add
pop
add
inc
rolb
out
outsl
out
mov
inc
inc
mov
jecxz
leave
mov
fnstsw
lret
add
xchg
push
in
or
in
rcrb
jl
aad
mov
dec
imul
dec
in
add
pusha
sub
ficompl
push
fimull
fstl
lock
pop
xchg
lcall
xorl
and
xorb
imul
rclb
lret
jle
gs
je
int
xchg
inc
jno
add
xchg
fs
stos
fdivs
cmp
ret
cli
ljmp
inc
mov
cmp
aas
add
popaw
or
repnz
push
xor
les
sahf
movsb
cmc
add
sbb
add
out
or
mov
hlt
dec
dec
cmp
fmull
loope
jo
pop
xor
mov
mov
pop
popa
ss
das
cs
sub
xchg
push
test
icebp
push
mov
jge
xor
pop
lods
jp
push
rcl
push
pop
mov
call
lahf
popa
dec
mov
or
push
jo
shl
pop
jge
add
add
insl
cmp
or
dec
leave
repnz
push
lret
jle
or
aaa
and
xchg
gs
insb
divb
sbb
inc
lret
adc
fistl
stc
pop
pop
dec
pop
sti
data16
insb
mov
jp
loope
insb
push
aam
and
jae
sub
mov
and
lahf
lods
sub
nop
pop
arpl
jno
mov
xor
xchg
lahf
dec
in
mov
mov
lret
inc
mov
dec
jp
pop
aas
shr
repnz
fildll
ss
pushf
push
pop
push
movsb
xchg
inc
jmp
orl
or
nop
lock
adc
hlt
outsl
gs
jae
sub
inc
mov
ljmp
xchg
push
enter
or
ds
sbb
dec
mov
test
inc
scas
fsubrl
wbinvd
shr
stos
clc
in
daa
jns
outsb
fcmovnb
dec
mov
jmp
psrlq
scas
mov
inc
jb
cmp
fisttpl
adc
xchg
lods
imul
push
sti
xchg
mov
sbb
js
pop
addr16
cmpsl
mov
lock
je
stos
rcll
ja
out
hlt
data16
jno
xchg
push
cwtl
cmpsb
pop
adc
push
mov
sbb
xchg
and
pop
pop
mov
mov
xor
dec
lods
cwtl
shrl
aaa
jne
adc
stos
xor
jg
add
and
sub
enter
inc
ret
inc
adc
sbb
xor
mov
cmpsl
mov
pop
xchg
inc
xchg
xor
add
inc
fsts
xchg
mov
icebp
clc
rep
push
sbb
cmpsb
adc
pop
outsl
repz
test
mov
add
mov
fdivl
and
repz
std
mov
sub
int3
pop
or
mov
and
les
pop
add
mov
cli
ss
shll
lea
mov
clc
xor
nop
mov
cli
out
mov
inc
cmp
adc
fstpl
mov
pop
ficoml
and
and
scas
sub
aam
popa
cmc
pop
mov
rorb
cmp
mov
divl
xchg
mov
mov
rorl
xchg
xor
xor
mov
add
xor
sbb
test
mov
mov
pop
test
push
in
lods
adc
les
lea
out
xchg
jo
fs
push
movl
jbe
lds
xadd
jns
sub
xchg
mov
jae
inc
aas
ret
incb
sub
jne
out
or
into
mov
mov
inc
loope
inc
ret
ss
jo
lods
cli
xlat
and
mov
dec
scas
aaa
frstor
push
int
pop
jmp
and
test
test
xor
pusha
int3
outsb
push
push
adc
test
ja
fcmovb
pop
mov
xor
call
pop
sbb
xlat
pushf
lods
jb
add
jns
popa
pop
or
jmp
lahf
cld
das
sub
push
xchg
cmpb
scas
scas
outsl
sub
test
sub
bound
xchg
mov
dec
fidivrl
insb
xchg
cmpsb
or
repnz
mov
and
push
mov
cmp
icebp
xchg
jns
fxch
test
dec
adc
or
pop
sub
or
aas
clc
jb
mov
idivb
mov
mov
pop
jns
imul
dec
shrl
faddl
pop
loope
insl
imull
push
fidivrs
cs
pushf
aam
xchg
push
fucom
inc
mov
and
mov
add
scas
mov
and
lret
xor
daa
scas
mull
fsubl
fwait
out
adc
mov
jecxz
popa
fld1
inc
shr
dec
inc
lret
lock
bound
aad
push
daa
jo
push
and
bound
sti
cmp
dec
sub
into
sti
jnp
xchg
pop
das
jno
inc
xchg
inc
inc
add
mov
or
inc
bound
lcall
movsb
dec
test
ss
cmpsb
inc
lods
inc
repz
sbb
dec
jo
arpl
push
pcmpeqb
push
ja
mov
pop
ss
popa
jle
jne
imul
jecxz
mov
lods
pop
int3
pop
inc
xchg
imul
push
xchg
int
push
scas
push
cmp
pop
mov
or
lea
loope
mov
std
lock
std
out
and
inc
dec
jle
jl
xor
xor
mov
mov
daa
movl
mov
ficoms
popa
sub
cli
lahf
repz
add
icebp
aaa
pop
xchg
or
insl
mov
scas
or
enter
or
into
mov
sub
cmc
mov
push
stc
jg
js
fcompl
loopne
cs
xlat
inc
push
xchg
rorl
orb
sub
mov
dec
jne
sbb
sub
xor
shl
mov
sahf
inc
add
pusha
sahf
les
pop
repnz
sti
mov
xor
fistl
jno
ja
mov
push
or
ret
jno
jge
add
sub
fildl
in
mov
mulb
sbbb
inc
dec
push
dec
aam
popf
fs
pop
in
cmp
dec
je
xchg
insl
daa
inc
lods
pop
or
pop
push
pop
aam
mov
jmp
sub
lahf
gs
int
xchg
jo
cmp
lea
or
xor
leave
add
push
out
jbe
pop
inc
shrl
pop
sbb
pop
shll
popf
push
mov
leave
dec
int
dec
repnz
sarb
es
enter
test
stc
jo
cmpsl
js
mov
movsl
cmp
dec
xchg
mov
lcall
stc
arpl
fs
fmull
neg
and
pop
jle
and
fsub
adc
mov
nop
and
mov
subl
lahf
or
int
cmp
lods
mov
add
sbb
addr16
add
imul
out
icebp
inc
push
stos
jnp
add
lahf
aam
test
jns
mov
lcall
dec
incl
popa
sub
mov
push
popl
jb
bound
dec
cmpb
mov
aas
repnz
loop
adc
add
xor
and
jb
bound
dec
cmpb
mov
aas
repnz
loop
push
decl
sub
rsqrtps
bound
dec
xchg
pop
ret
movl
movsl
iret
bound
repnz
mov
aad
outsl
aad
stos
xchg
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
sbb
cmpsl
jne
xchg
insb
mov
dec
movl
ja
addr16
movsl
inc
pop
mov
cmpsl
jne
xchg
xlat
and
daa
in
xchg
adc
mov
push
movsl
inc
scas
lds
add
iret
fstp
aad
test
pop
mov
ret
inc
adc
gs
xor
adc
sbb
xor
push
out
lods
cli
adc
dec
pushf
rcrb
xchg
sbb
ljmp
inc
jl
sbb
pop
mov
iret
or
push
pop
adc
adc
xor
sub
add
enter
mov
sbb
out
stos
sbb
inc
test
cmp
mov
xlat
cli
daa
xor
daa
cmp
addr16
fsub
negl
clc
sbb
cwtl
mov
mov
addr16
adc
push
out
popw
test
in
sarb
mov
std
push
mov
fmull
ss
pop
adc
push
data16
mov
xchg
popf
adc
into
popf
fisubs
das
push
aas
sub
outsl
fwait
jo
push
shll
shlb
cmpsl
xor
jo
es
test
inc
test
sbb
xor
push
loop
push
iret
int
xor
scas
cmpb
pop
mov
stos
in
dec
test
arpl
or
cmp
and
divb
add
fwait
add
aad
lds
cmc
pop
in
xchg
ja
addr16
movsl
inc
push
mov
cmpsl
jne
xchg
xlat
and
daa
cmc
pop
in
xchg
ja
addr16
movsl
inc
push
mov
and
mov
xchg
pop
lret
fidivrs
sbb
pop
outsl
popf
mov
aad
pushf
xor
push
dec
adc
mov
add
ret
out
fcmovu
mov
ret
rcrl
aas
mov
sbb
mov
pusha
sub
sti
cwtl
roll
in
ret
cs
stos
sbb
xchg
lret
cmpsb
xchg
and
ljmp
and
sub
or
rcll
sahf
xor
mov
les
cli
into
lods
push
clc
imul
leave
mov
push
cmovns
xlat
inc
adc
andb
pop
or
xor
int3
sbbl
cmc
inc
orb
pop
pushf
sub
out
das
jmp
sar
add
jle
xchg
jp
sbb
fs
cli
xchg
icebp
cmp
repnz
leave
add
daa
xchg
ds
ja
scas
xchg
gs
xchg
mov
and
adc
or
xchg
loope
imul
or
dec
int3
int3
std
jb
mov
inc
add
test
iret
mov
test
jle
mov
xchg
in
jbe
nop
push
int
pop
ret
inc
xchg
push
mov
dec
xor
mov
cmp
decb
into
push
stos
and
push
sub
les
or
fwait
push
idiv
stos
push
lret
outsb
jno
sbb
or
or
mov
cmp
and
xchg
push
push
in
cli
or
pop
mov
jle
sub
pop
out
sbb
pop
add
cmp
adc
aaa
cltd
bound
sbbb
lcall
shrl
jb
sub
adc
or
xchg
jmp
out
jge
mov
xor
std
xor
jno
or
js
mov
negb
pop
jmp
jne
mov
sbb
add
cmc
outsl
pop
pop
xchg
inc
pop
xor
inc
jb
mov
sub
push
push
mov
mov
addr16
lret
pop
mov
pop
repnz
lods
cmc
cwtl
sbb
inc
sbb
mov
rolb
icebp
mov
add
push
divb
inc
movsl
das
jg
shlb
mov
stc
jmp
adcb
jmp
addr16
stos
xchg
xor
ljmp
scas
mov
mov
test
shl
pop
fistpll
sub
lods
loope
mov
sbb
adc
leave
addr16
cmp
xor
in
sbb
push
push
push
add
daa
add
xchg
push
jmp
and
frstor
or
mov
sbb
ss
aam
pop
and
pop
lret
jae
xor
cmp
and
jae
sbb
cmp
add
pop
arpl
pop
jne
scas
shr
enter
scas
and
cwtl
inc
jb
addl
addr16
lock
mov
dec
ds
or
and
mov
dec
ja
lret
iret
adc
add
lea
ja
outsb
cs
into
aaa
add
inc
roll
cmpsb
shll
xchg
xchg
ds
xchg
pushf
add
or
mov
es
enter
pop
inc
inc
testl
shll
ficoms
jl
xor
stos
cmc
jl
mov
fnstenv
fimuls
lods
add
sub
adc
and
push
aaa
adc
adc
dec
or
negl
mov
push
inc
xor
fsub
cmp
cmpsl
mov
iret
or
incl
sbb
movsb
xchg
xchg
ss
xor
add
fnclex
insl
inc
ret
popa
add
std
add
xchg
test
add
shll
mov
cwtl
mov
xchg
sahf
and
xchg
adc
filds
jg
fcmovnb
mov
xor
aad
rcrb
mov
imul
cmc
sbb
aas
int3
cmp
adc
cmp
lret
insb
push
sub
das
imul
cmp
xchg
adc
jle
orb
jb
ss
cltd
shl
and
jb
call
sahf
stc
jae
pusha
popf
test
out
imul
jb
test
es
cmpsb
lods
insl
xchg
sbb
lds
repz
flds
push
cmc
push
push
mov
pop
cmp
jnp
and
out
aam
jp
jl
sub
fwait
mov
repz
das
aad
pop
lret
jge
lods
pop
movsb
jecxz
adc
int
cltd
jmp
gs
clc
sbb
inc
fs
test
addl
popf
xor
stc
mov
inc
clc
fldenv
outsl
loop
dec
std
sub
xor
nop
xor
aaa
xor
ljmp
jbe
pop
jae
icebp
out
das
sar
int3
adc
dec
jo
ret
out
inc
orb
mov
or
jmp
lret
scas
neg
mov
dec
rorl
cmp
loopne
adc
pop
sbb
cmp
pop
xchg
aas
fiaddl
mov
xor
rcrb
js
and
lea
dec
fxch
inc
aas
xchg
ret
cmp
add
flds
push
in
das
xor
adcb
push
xor
cmp
mov
adcl
mov
ss
add
add
pusha
xlat
scas
daa
imul
push
mov
imul
punpcklwd
dec
push
test
sbb
push
xor
xlat
lds
hlt
mov
test
push
inc
pushf
pop
es
xchg
outsl
and
mov
xchg
add
roll
add
cli
dec
mov
mov
mov
mov
jb
fwait
int3
pop
jb
jbe
add
sub
sub
into
mov
push
loope
or
inc
push
cld
stc
jle
dec
es
add
pop
test
or
fcoms
stos
and
xchg
int3
pop
mov
lock
mov
sub
cmpsb
fisttpl
mov
sub
and
adc
xor
ljmp
fstp
cmc
sbb
pusha
repnz
mov
pop
or
sti
lods
daa
xchg
inc
leave
push
aas
sbb
rcl
out
push
add
pop
sbb
mov
inc
fsts
shlb
mov
imul
fdivrl
inc
mov
adc
gs
addr16
adc
xchg
cmp
pop
add
ljmp
out
sub
nop
and
lea
hlt
pusha
test
or
and
cltd
cmp
shlb
lock
in
or
add
sbb
jb
mov
outsb
sbb
std
pop
cmp
aaa
inc
fidivrl
push
loopne
movsl
jp
loopne
jno
call
inc
stos
push
mov
incb
jb
and
xchg
pop
movsl
insl
shl
dec
fisubl
aaa
adc
lods
shrb
inc
fldl
jnp
cmpsb
fnstenv
sub
inc
jno
rcl
dec
iret
jg
adc
mul
xchg
xchg
mov
pop
lea
mov
testb
loop
andb
push
jno,pt
adc
daa
stc
adc
mov
mov
push
push
or
xchg
mov
scas
xchg
aad
fisttps
or
xchg
jp
xchg
mov
push
mov
sbb
xchg
pop
ds
mov
scas
fnstsw
push
xlat
nop
xchg
adc
mov
icebp
xchg
movsb
mov
and
mov
in
stos
mov
aaa
rclb
shll
xor
sbb
fcomps
xor
imul
test
pop
pop
mov
pop
jo
sbb
dec
mov
cmp
xlat
ljmp
xchg
xor
jb
mov
in
and
or
test
mov
mov
push
insb
pminsw
mov
mov
roll
fdivl
test
push
cld
int3
pop
lea
ret
dec
lods
pusha
or
clc
insl
addr16
ljmp
or
push
movsb
insl
adc
push
dec
leave
add
add
gs
inc
ds
cmp
mov
arpl
mov
ret
data16
xchg
loope
and
into
sbb
lret
jnp
mov
inc
push
mov
sub
jle
inc
or
addr16
mov
lods
pusha
shlb
scas
idivb
xchg
inc
xor
icebp
into
notb
inc
add
sbbb
add
sti
jg
add
dec
stc
xchg
inc
or
pusha
push
daa
jmp
mov
and
or
adc
test
mov
push
add
push
fsts
aam
lcall
inc
lds
sbb
pop
into
sti
mov
hlt
cltd
arpl
out
pop
sbb
mov
jmp
add
pop
sbb
sub
xchg
xchg
sahf
aam
fmull
test
or
cmc
dec
sbb
push
mov
adc
das
mov
mov
add
jae
mov
jb
in
mov
pop
sbb
xchg
in
cmp
js
dec
notb
or
jecxz
negb
stc
push
lds
cmpsl
xchg
push
cld
pusha
jns
loop
sbb
aam
adc
lods
sub
clc
or
cmp
cs
and
jg
imul
aad
dec
push
mov
leave
in
je
cmp
fildl
ret
call
bound
in
xor
xor
ljmp
cmc
fcompl
mov
pop
jnp
sbb
pop
sub
adc
je
xlat
jg
in
jns
cmp
hlt
roll
lcall
mov
pop
xor
xor
mov
mov
fsubp
add
mov
jo
imul
fstpt
pop
mov
xor
aam
mov
pop
mov
inc
cmp
loope
cmpsl
bound
pop
arpl
inc
xsave
and
mov
pop
rcrb
push
fiadds
mov
rcrb
xor
out
loop
fwait
jo
rcrb
call
jge
in
sbb
fwait
xchg
push
or
in
pmulhw
gs
dec
call
mov
xlat
repz
or
loope
inc
lahf
or
fldt
filds
seto
mov
lret
xchg
sbb
lods
jmp
popa
arpl
mov
or
dec
sub
add
mov
das
lock
shlb
mov
test
insl
lahf
lods
xchg
ljmp
xchg
les
inc
adc
int3
xor
mov
pop
insb
sub
enter
push
xchg
ljmp
xchg
es
mov
test
bound
imul
mov
push
iret
sbb
pop
subl
out
enter
out
int3
add
sub
cmpsb
into
or
pop
int
repz
xor
scas
fdivrs
or
sub
mov
xchg
adc
outsb
aam
and
lret
testl
dec
dec
mov
out
inc
rclb
notb
push
adc
push
jns
adc
movsl
in
push
fs
insl
addb
sbbl
pop
mov
arpl
flds
add
ds
mov
jae
ja
jno
sbb
scas
sub
push
mull
jp
loopne
call
add
or
and
icebp
es
ds
fs
in
xchg
sahf
mov
subb
lcall
sub
decb
xor
clc
mov
and
sub
cli
jno
fisttps
xlat
andl
inc
sarl
stos
mov
pop
dec
xor
pusha
sub
ret
bound
and
leave
push
sarb
ss
in
jp
jle
mov
aam
pop
stos
pusha
test
testl
into
xor
pusha
fsts
arpl
test
popf
pusha
arpl
loop
test
cmp
rorl
insb
ds
or
jne
out
data16
jb
mov
out
movsb
jae
nop
add
xchg
xlat
outsb
mov
es
lods
imul
push
addr16
ds
mov
movsl
xor
sub
or
xchg
in
ret
push
xor
jb
cmc
dec
fisubs
inc
jo
jge
inc
push
sahf
fmulp
xchg
pushf
sbb
andb
out
mov
add
mov
mov
mov
fs
addr16
into
imul
pusha
push
adc
aaa
and
inc
aad
fbstp
mov
rcrl
and
lds
sbb
xchg
ljmp
ja
xor
and
dec
sbb
jle
fxch
pop
test
int
test
inc
fistpl
test
lret
mov
xor
xchg
sbb
mov
jo
dec
cli
cmp
shrb
repz
mov
pop
nop
das
adc
xor
pshufw
push
xor
and
or
and
mov
push
rcrl
sbb
inc
sub
fsubp
stos
push
sqrtps
cmpsl
jb
outsl
sub
lock
iret
in
icebp
mov
mov
mov
lret
dec
pop
movsb
push
or
rcl
out
sub
jae
hlt
iret
add
in
or
xor
aaa
jmp
filds
dec
js
in
pushf
mov
mov
test
and
ljmp
outsb
sbb
in
lods
xor
insb
adc
and
mov
outsb
jno
inc
stc
sarl
clc
jmp
imul
repz
xor
push
pop
stc
inc
repnz
sbb
pxor
std
lods
mov
bound
mov
dec
lret
sti
dec
pop
add
add
mov
xchg
and
cmc
xor
pop
xchg
inc
push
cmp
pop
mov
lock
mov
lods
cmp
dec
or
sti
mov
lret
aad
inc
cmpsl
aam
cmpsl
clc
pusha
push
sbb
jo
loop
jmp
or
std
mov
je
or
gs
or
mov
loopne
pop
decb
cmp
jp
cmpsb
xchg
xor
movsb
push
sub
test
popf
adc
and
jno
fcomps
fs
jnp
adc
mov
cmp
add
sub
xchg
inc
das
into
mov
xor
shrl
shrb
inc
mov
cmc
and
flds
xchg
mov
xor
repnz
enter
fptan
mov
add
insb
and
popa
jg
out
lea
dec
incb
add
xor
xchg
mov
or
and
adc
cmc
rol
sub
addr16
aas
insb
cmc
nop
call
cmp
flds
filds
add
popf
cli
fs
dec
out
inc
hlt
je
loop
add
jae
dec
cs
insl
cmc
repnz
mov
xlat
clc
int
cmp
in
lret
insl
insl
in
dec
gs
call
cmp
scas
and
outsb
mov
dec
iret
ljmp
out
fwait
aas
std
xchg
fwait
ret
and
cmp
xchg
push
sti
xor
dec
mov
aas
cmovns
data16
cmp
cld
insb
imul
sbb
rcrb
leave
sbb
sub
cmpsb
shlb
jmp
mov
push
pop
insb
imul
fwait
mov
movb
inc
mov
dec
cmp
xor
xchg
stc
stos
xor
sub
inc
std
xor
mov
xor
sahf
inc
mov
es
loopne
pop
cmp
arpl
dec
xchg
in
sub
mov
sbb
movb
add
ljmp
arpl
out
and
mov
mov
pop
pop
inc
mov
sahf
insl
push
adc
fdivr
pop
push
lea
inc
mov
mov
dec
or
in
adc
sahf
fists
adc
cs
inc
aas
call
adc
imul
ds
rcrb
sbb
jp
mov
movsb
into
stc
xorl
inc
aad
pop
inc
out
sub
sbb
je
jmp
into
ficomps
stos
xchg
mov
push
inc
jno
sub
arpl
xchg
xor
jb
jl
jo
sbb
xchg
jmp
jecxz
xor
cmpsl
mov
repz
pop
cltd
faddp
repnz
sbb
fcompl
mov
jns
jo
mov
outsb
roll
jle
fs
fidivs
sub
divb
mov
call
jb
sub
jne
into
dec
mov
lahf
popf
and
adc
and
jp
dec
ljmp
lods
inc
xor
push
testb
les
imul
push
clc
add
push
mov
jne
js
mov
or
ret
sbb
inc
arpl
mov
lock
sbb
cmp
add
mov
mov
pop
mov
inc
or
pusha
xor
arpl
sarb
or
mov
daa
add
shl
xor
pop
aaa
jo
cmpsb
and
fisubs
dec
jnp
test
es
rcr
push
fdivl
aas
sub
ficomps
lret
es
data16
rorb
jmp
cmc
xchg
cmp
mov
mov
icebp
and
sahf
mov
dec
pusha
sub
call
lea
lds
and
lock
xor
inc
out
jge
push
dec
mov
in
xchg
insl
mov
jg
adc
pushf
inc
jge
mov
xor
movsl
clc
fcmovbe
inc
push
or
loopne
push
pop
test
add
inc
adc
jae
inc
mov
inc
clc
xchg
mov
stos
fdivr
scas
pop
xchg
mov
mov
es
outsl
sub
cld
mov
inc
sub
movsl
pop
outsl
aad
fmull
fimull
jae
mov
mov
orb
or
xlat
inc
sub
ret
iret
jecxz
jecxz
inc
mov
mulb
in
cli
xchg
xor
add
cmpsb
add
push
push
cmpsb
cmp
cld
data16
and
adc
fldenv
dec
mov
vorps
push
call
jb
out
mov
test
cmp
pushf
dec
inc
mov
js
cmpsb
popf
jge
movsl
pop
cmpsb
adc
jle
fildl
lahf
imul
and
lea
jle
mov
xor
testl
pop
aad
insb
sbb
popa
pusha
sarb
pop
mov
in
gs
add
add
jl
sub
call
lret
rolb
xchg
addr16
pop
repz
lods
movsl
adc
insb
mov
and
jge
mov
ret
dec
fsub
sbb
dec
lret
insl
or
out
push
cmp
mov
test
push
cmp
mov
xchg
iret
push
sti
icebp
or
or
popa
or
das
das
push
inc
mov
cmc
pop
stos
cld
jp
or
hlt
lret
icebp
inc
dec
cmp
push
xchg
sbb
xchg
sbb
jo
fmuls
xchg
pop
inc
mov
mov
xchg
inc
xchg
jb
jbe
inc
pop
iret
addr16
out
sub
iret
sti
dec
xor
dec
cmpb
xchg
pusha
gs
or
sbb
adc
and
ljmp
pusha
push
adcl
shl
idiv
mov
ds
repnz
leave
sub
mov
and
and
lods
and
add
mov
in
inc
pop
or
leave
mov
ret
pop
in
mov
and
mov
aaa
cs
xor
inc
jl
pop
fwait
add
ss
push
and
sahf
inc
mov
xchg
in
call
out
adc
mov
xorl
mulb
lds
in
dec
test
das
push
jns
scas
in
addr16
xor
aad
lods
inc
or
inc
jno
cltd
loopne
xor
sub
sbb
inc
xchg
push
pop
dec
cmc
sbb
out
orl
xchg
jecxz
test
jl
dec
dec
out
or
add
das
out
inc
sub
inc
push
and
sbb
into
pop
xor
out
mov
pop
mov
pop
loope
scas
cmp
mov
cmp
pop
xor
popa
xchg
loop
xor
sub
cli
jecxz
sti
js
add
ret
push
fwait
xor
cmp
mov
cltd
jmp
add
xchg
fcmovbe
packssdw
and
sbb
mov
xchg
cs
inc
ss
jecxz
rorl
sbb
int
pop
mov
pop
jnp
mov
xchg
pop
aas
scas
bound
dec
lock
popa
cld
paddusb
setle
rcrb
loope
out
popf
push
mov
cwtl
sbbl
dec
adc
loopne
aad
call
sbb
cli
pop
sbb
push
push
stos
jp
pop
stos
movsl
enter
lock
or
nop
cld
mov
and
stos
mov
push
push
dec
sahf
out
mov
testb
fldenv
push
and
sbb
bnd
or
push
dec
push
mov
sbb
lret
push
iret
push
adc
mov
or
test
jns
adc
xlat
and
daa
cmc
pop
in
xchg
ja
addr16
movsl
inc
push
mov
cmpsl
jne
xchg
xlat
and
daa
cmc
pop
in
xchg
ja
addr16
movsl
inc
push
mov
cmpsl
gs
xchg
add
xor
aaa
lds
cld
pop
loope
xchg
ja
addr16
xchg
inc
dec
mov
cmpsl
std
xchg
dec
xchg
xlat
movsl
aad
cmp
loop
or
mov
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
