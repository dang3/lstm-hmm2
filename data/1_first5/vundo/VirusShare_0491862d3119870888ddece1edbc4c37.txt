scas
dec
lret
aam
sti
test
lret
fs
sti
test
lret
xor
sti
test
lret
xor
into
push
adc
mov
inc
lret
adc
and
cmpb
shl
mov
popa
inc
pop
jae
pop
fnstsw
sub
fstpl
pushf
push
jle
cmp
push
stos
jecxz
add
mov
xor
popa
daa
adcb
adc
xchg
cmp
mov
and
sbb
lods
std
dec
icebp
and
push
int3
aas
lods
adc
repz
sub
das
pop
sub
cmp
insb
xor
sbb
xorl
xchg
mov
imul
popa
cli
sub
adc
orb
mov
call
mov
mov
and
or
mov
xorb
and
and
push
popl
mov
and
sub
jmp
sbbw
sub
movl
mov
or
and
cmp
jne
push
or
and
popl
mov
lea
push
popl
pushl
popl
mov
subw
mov
and
push
xor
or
popl
mov
cmp
je
xorl
xor
push
sub
or
popl
mov
ret
pushl
popl
push
xor
push
mov
xor
popl
mov
and
mov
sbbw
and
or
mov
and
subb
mov
push
or
and
popl
mov
and
push
popl
lods
andw
and
mov
or
pop
pushl
popl
ret
xorl
push
pushl
popl
mov
push
popl
add
movl
push
push
movb
push
push
push
popl
pushl
popl
push
mov
subb
mov
push
sub
add
popl
mov
add
pushl
pushl
popl
mov
add
push
popl
pushl
popl
add
pushl
popl
mov
add
push
popl
xor
andw
lea
mov
push
add
mov
popl
mov
add
mov
addw
xor
rol
movb
xor
push
popl
inc
push
popl
pushl
popl
cmpb
jne
cmp
je
push
popl
pushl
popl
inc
addw
cmp
jb
push
popl
mov
push
popl
pushl
popl
add
movzwl
push
popl
mov
add
push
popl
mov
add
addl
pop
cmp
jbe
push
popl
cmp
jae
pushl
andb
pushl
andw
sub
push
popl
movl
addl
andw
pushl
or
call
call
mov
pop
pop
push
popl
pushl
popl
pop
pop
push
or
xor
popl
mov
pop
leave
pushl
popl
ret
pop
push
popl
pushl
popl
xor
call
push
popl
pushl
popl
test
jne
add
ret
xorl
push
orl
push
push
popl
mov
pusha
pushl
popl
call
mov
orw
sub
push
popl
pushl
popl
movl
addl
orl
push
call
push
popl
cmpl
je
xorl
cmpl
je
push
popl
pushl
popl
cmpl
jne
push
xor
or
popl
mov
call
push
popl
popa
call
andb
sub
movl
xorl
addl
push
push
popl
pushl
popl
call
push
push
mov
ror
mov
xor
xchg
addb
mov
xor
shl
pushl
popl
push
xor
push
popl
push
pushl
popl
call
push
sbbb
mov
pushl
popl
push
jmp
push
popl
pop
mov
andw
push
pushl
popl
push
push
andb
mov
mov
sbbb
rep
push
popl
pushl
popl
pop
push
popl
pushl
popl
pop
push
sub
add
inc
add
mov
add
xchg
push
sub
add
mov
xor
xchg
addb
xor
and
jmp
sub
orl
mov
sub
movb
sub
mov
push
popl
pushl
popl
sub
or
jne
pushl
popl
add
jmp
addb
call
add
xchg
jecxz
je
add
lahf
loopne
inc
je
arpl
out
xor
mov
pusha
leave
ss
aaa
loop
std
inc
xchg
lret
mov
movsl
push
adc
sub
gs
lea
sbb
inc
jne
xchg
adc
lret
mov
xchg
jecxz
push
mov
push
fistpl
or
neg
mov
stc
sub
data16
cmpsl
in
lret
ds
jle
jnp
adc
sub
cwtl
xor
push
mov
sub
push
lea
add
mov
mov
and
jecxz
lret
call
insl
xor
xchg
mov
pop
pop
mov
les
pushf
lret
aam
pop
pusha
neg
mov
enter
je
or
lods
or
daa
je
addl
xchg
cmp
scas
mov
enter
sahf
mov
jecxz
mov
xor
aad
lret
lcall
pop
mov
xchg
in
sub
cmp
mov
dec
push
and
or
push
cmp
mov
jns
push
dec
mov
data16
mov
mov
sub
cmp
add
mov
or
stc
lcall
and
pop
xchg
fwait
gs
xor
ror
mulb
jp
lock
dec
adc
std
inc
scas
sbb
mov
adc
cmc
add
xchg
cmpsb
xchg
or
insb
mov
dec
sub
mov
mov
inc
lods
dec
jp
sbb
pop
cltd
mov
xor
leave
pop
out
dec
dec
mov
ret
loop
test
cld
test
sbb
xor
mov
inc
sbb
jo
xchg
leave
stc
aad
sbb
mov
loop
push
or
pop
xchg
mov
les
out
lcall
pop
adc
xchg
pop
cmp
aam
daa
je
xor
or
mov
mov
or
mov
cmpsl
inc
adc
jmp
add
sahf
js
scas
xchg
mov
sbb
xor
lds
mov
repnz
imul
lret
aad
addr16
and
cmp
movsl
jecxz
scas
mov
outsb
icebp
inc
in
cmp
or
xor
pop
test
cwtl
pop
insl
lds
mov
outsb
push
jg
mov
xchg
lahf
int3
adc
or
faddl
xor
lds
mov
clc
loopne
push
xor
adc
or
fcomps
push
fstpl
or
aam
ss
pop
pop
push
xchg
mov
inc
xchg
ja
dec
mov
add
mov
lret
pushf
fcomps
leave
mov
push
out
ja
gs
movsl
ljmp
andb
mov
lret
dec
test
pop
test
jb
dec
rol
fdivrs
add
mov
sbb
popf
jb
scas
xchg
mov
scas
inc
mov
xchg
cmp
test
aad
pop
stc
dec
sahf
cmp
or
dec
cmpsb
ja
fimuls
out
mov
mov
mov
mov
xor
inc
test
fidivrs
inc
aad
int
xor
nop
aas
jge
mov
ja
shr
cmp
cmp
ss
lret
fnstcw
es
inc
inc
inc
jge
sbbl
ljmpw
test
popa
sub
fs
dec
fucomi
jbe
adc
sub
sbb
cmp
add
out
jl
cwtl
xchg
imul
jae
or
and
pop
pop
hlt
ror
xor
scas
stos
sti
mov
mov
jmp
xor
int
ljmp
or
pop
int
sub
iret
mov
xchg
jecxz
lds
xchg
sbb
xor
add
sub
popa
enter
mov
push
lds
adc
fsubl
fwait
and
int3
xchg
jecxz
ljmp
jle
sbb
dec
test
in
js
je
or
xchg
xor
es
es
seto
jb
lret
insl
xor
mov
das
loop
int
cmc
ljmp
pushf
out
push
fistps
jecxz
push
sbb
sub
xchg
addb
mov
cmp
xchg
cmp
lock
scas
sbb
inc
ss
es
jns
lret
int
lcall
aad
enter
das
mov
fucomip
push
xchg
test
icebp
shr
jne
aad
and
mov
les
xor
movsb
or
adc
les
rclb
push
jge
jle
pop
mov
scas
stos
out
add
arpl
jo
cmpsl
sbb
insl
fisubl
test
xchg
mov
cmpsb
adc
add
fisttpll
sti
dec
adc
scas
and
fwait
jge,pt
test
inc
inc
mov
mov
imul
jp
dec
mov
sbb
cmp
outsb
jo
sbb
jecxz
je
adc
jp
cwtl
rolb
lcall
aad
and
xor
fwait
test
push
js
mov
adc
sbbl
jmp
mov
jl
divb
or
sbb
xlat
insb
aaa
jl
popf
dec
cmpsl
cmp
or
jle
pop
outsb
aaa
out
jl
dec
rorb
jge,pt
mov
xchg
cltd
mov
adc
xchg
dec
stos
dec
mov
loopne
jmp
jge
js
scas
adc
fwait
stos
in
sbb
jns
mov
dec
xor
xor
inc
push
in
js
stc
sbb
jae
jg
jae
sbb
dec
lea
inc
or
xchg
test
mov
cmovnp
ja
lret
sarl
aad
inc
xchg
jge
and
push
fadds
sbb
int
pop
in
fwait
sub
push
leave
adc
packssdw
pop
adc
push
cmp
scas
int3
xchg
jecxz
xor
sub
pop
push
xchg
dec
push
adc
or
sbb
orl
pop
stos
and
jecxz
lock
imul
jecxz
imul
js
aas
jge
mull
pop
pop
ucomiss
call
mov
dec
shr
test
pop
pop
sbb
loopne
push
adc
dec
mov
push
jp
gs
inc
sbb
jecxz
ret
add
dec
xor
cmc
es
aas
test
imul
jl
xor
daa
mov
mov
repz
lcall
add
fisubrl
mov
dec
gs
add
push
and
stos
lea
mov
ret
bound
jp
pop
mov
call
popl
lret
adc
aad
and
aad
sub
clc
notb
es
mov
xor
pop
pop
ja
das
or
in
push
adc
inc
pop
adc
inc
cmp
imulb
add
pop
mov
aaa
mov
lds
mov
filds
cltd
rol
xchg
jecxz
and
xor
into
aaa
into
add
cmp
leave
cs
loop
iret
movsb
stc
lret
test
ja
sti
mov
les
outsb
int
push
push
out
adc
in
negb
cli
out
das
sub
and
popf
pop
inc
adcl
add
mov
adc
jle
push
imul
nop
push
test
and
mov
cmpb
out
in
or
mov
mov
adc
sub
adc
ljmp
jecxz
je
popf
iret
sbb
fs
xchg
loop
lods
xchg
jecxz
je
shll
fwait
sbb
dec
mov
stos
lock
xor
sbb
test
mov
sti
mov
es
testw
pop
jge
scas
aas
scas
std
mov
push
jmp
jbe
mov
and
xor
ffreep
jne
xor
popf
xchg
mov
pushf
mov
or
jb
dec
xchg
mov
xchg
enter
inc
movsl
dec
xchg
insl
pop
inc
cmc
aaa
std
add
xchg
pop
call
sbb
aas
jne
or
int3
mov
inc
cmp
into
jae
sbb
pop
dec
lds
adc
mov
mov
pop
dec
mov
test
sbb
scas
jo
enter
xchg
add
mov
lret
loope
iret
sub
cmp
sub
test
leave
scas
add
rsqrtps
mov
stos
push
sbb
mov
mov
in
cmp
inc
inc
shll
jbe
outsl
dec
aaa
fistps
clc
lds
in
nop
push
fdivrs
jle
sbb
sub
mov
mov
stos
es
jae
enter
and
xor
lds
sub
jo
orb
pushf
popa
adc
cmp
clc
mov
out
sub
inc
mov
loopne
mov
call
mov
enter
add
cltd
imul
insb
imul
arpl
lcall
sbb
jmp
mov
jo
lods
lds
or
ljmp
jae
mov
das
mov
xor
out
mov
int
add
jae
sub
scas
sbb
and
xlat
jbe
dec
xchg
pop
or
and
cmovne
mov
inc
pop
je
add
or
mov
fcmovnu
or
shr
into
sub
jno
scas
xchg
outsl
bound
sbb
jns
fwait
xchg
mov
add
aas
pop
dec
nop
jle
in
xor
daa
cs
pop
jge
jge
inc
xor
push
daa
push
inc
pop
lea
inc
cmpsl
pusha
xlat
jge
flds
lcall
insb
add
add
std
in
cmp
and
sub
cmp
jg
push
cmp
and
je
add
adc
and
add
fistps
or
ss
std
pop
repnz
xor
cmpsl
in
outsb
bnd
in
sbb
dec
faddp
inc
sbb
xchg
xchg
xchg
cmovnp
ja
push
inc
xchg
jecxz
les
sbb
insb
pop
es
inc
cmp
pop
dec
nop
xor
inc
aam
lcall
aam
cmp
jp
in
dec
xchg
mov
cs
dec
jbe
push
push
test
pop
pop
add
fisubl
mov
dec
push
xor
push
sbb
out
mov
jp
clc
or
test
jecxz
add
mov
cmc
push
cmp
pop
or
pusha
adc
adcb
pop
push
cwtl
mov
push
jbe
or
sbb
xorb
push
add
nop
mov
in
loop
jbe
dec
mov
or
cmpsb
je
adc
mov
iret
cmp
testb
xor
sbb
lea
roll
cmp
aas
jns
xor
jne
mov
call
xchg
rcll
cmc
lock
aam
shl
pop
cwtl
js
pop
adc
sbb
hlt
sti
fwait
sahf
inc
or
xchg
sub
jecxz
and
push
ljmp
push
mov
ljmp
stos
mov
test
push
fmulp
es
je
xchg
fstl
add
adc
repz
xchg
sbb
rclb
cltd
ret
jecxz
cmc
sbb
sub
ret
cmp
js
cs
push
in
jp
pop
dec
loop
int
popf
lret
mov
jmp
pop
cmpsb
sbb
sbb
in
rol
cltd
lret
jecxz
pusha
xor
mov
fsubs
sbb
push
in
jns
sbb
pusha
xchg
lds
jmp
mov
std
sub
pushf
push
out
add
out
add
pop
mov
mov
sarl
add
cmp
dec
arpl
jmp
inc
jmp
cmpsb
push
or
outsb
fists
lea
rcrb
and
inc
xchg
outsl
outsb
jge
arpl
lcall
mov
bnd
xorb
push
sbb
adc
or
and
ljmp
daa
jecxz
mov
dec
push
aad
lahf
ds
pop
push
insl
data16
pusha
pop
push
xchg
xchg
lret
adc
aam
fidivrl
jae
xor
andb
push
xchg
jno
push
cld
jle
sbb
sbb
mov
jecxz
push
lret
imul
imul
pop
pop
out
xchg
inc
loop
int
je
sbb
fstps
testl
cmp
or
fisttpl
insl
push
or
pop
repnz
and
cwtl
mov
xchg
and
jbe
adcb
inc
sbb
adc
ljmp
xor
outsb
adc
insl
insb
imul
mov
jo
movsb
rolb
test
call
add
push
clc
push
xor
push
sbb
iret
scas
mov
adcb
and
lock
shll
loope
xchg
repnz
push
sbb
rorb
sub
test
in
daa
and
sar
pop
sub
std
pop
test
insb
push
ret
loop
fadds
push
sahf
das
out
pop
sbb
nop
pop
sub
cmp
adc
jae
inc
sbb
pop
js,pt
ror
testb
sub
test
push
push
pusha
std
adc
lods
jmp
inc
sbbl
push
and
sub
fwait
lods
inc
push
xchg
jmp
jge
mov
imul
rcrl
jge
hlt
neg
mov
mov
or
movsl
rorl
fbstp
test
jecxz
je
sbb
mov
mov
flds
daa
add
mov
cld
or
fmuls
xor
sbb
sub
pop
adc
sub
cmp
iret
add
les
dec
and
in
es
jmp
lds
pushf
fstpl
jge
inc
dec
inc
mov
lcall
test
xchg
jae
or
sti
and
and
loopne
and
scas
jp
cwtl
jecxz
je
hlt
push
cmpl
pop
and
jl
inc
xor
leave
jl
pop
dec
inc
imul
jmp
insb
insb
sahf
ja
sbb
pushf
repnz
in
test
pushf
fcoml
mov
jge
add
push
cmc
and
mov
push
or
lcall
jp
mov
cmp
aas
jns
sbb
and
sbb
loopne
sbb
dec
gs
add
xchg
test
mov
dec
shll
std
sbb
ficomps
lds
adc
mov
pop
cs
int3
test
imul
jle
stos
lock
fs
ja
ret
enter
jo
lods
lds
pushf
cmc
mov
dec
sahf
cmp
or
adc
arpl
dec
xchg
mov
cmpsl
fiaddl
add
mov
sbb
and
insb
xchg
repnz
test
call
je
sbb
sbb
pop
js
mov
es
es
rclb
adc
daa
xchg
rclb
mov
cmp
popf
sub
sbb
adcl
cmp
cltd
sbb
faddl
jns
fisttpll
xor
push
xchg
nop
aad
sub
adc
xchg
repz
es
lods
cltd
out
je
or
call
adc
movl
jno
loopne
jecxz
cmc
adc
das
je
mov
notb
insl
sar
add
mov
lret
jl
std
push
nop
fidivrl
icebp
push
mov
dec
xor
xor
mov
and
xchg
adc
fcomps
jge
test
inc
data16
push
call
test
cmp
lret
fld
les
adc
js
mov
pushf
jge
sbbl
dec
mov
mov
scas
inc
loop
rcrb
addr16
sbb
es
es
mov
rol
les
push
mov
sbb
lock
cli
xor
into
inc
loope
xchg
jne
xchg
xor
out
sub
mov
sbb
cmp
mov
mov
mov
cmp
mov
ret
sub
fwait
test
sbb
adc
jmp
jbe
scas
cltd
pop
inc
xor
xchg
enter
sbb
hlt
xchg
jecxz
leave
fwait
stos
aas
xchg
push
daa
sbb
mov
push
mov
pop
ss
cmpl
leave
jl
loope
xor
es
js
lods
cmpsl
lock
test
add
cltd
rol
xchg
jecxz
push
cmp
arpl
adc
popf
jg
add
dec
xchg
shlb
cld
or
sbb
dec
je
mov
int
adc
ljmp
pop
jae
addr16
loop
xor
xchg
push
int
pop
push
int3
lret
push
imul
decl
push
daa
mov
sub
cmp
sarb
pop
inc
adc
insb
lock
sbb
jns
cld
shl
and
imul
jge
sbb
mov
pop
dec
jmp
pop
jg
movsl
push
iret
pop
in
ja
jmp
cmp
push
mov
cmc
or
in
cwtl
jne
repnz
sbb
mov
scas
inc
out
ret
xchg
test
dec
ffree
xchg
decl
jne
pop
dec
jb
fwait
dec
push
shll
xor
clc
inc
fnop
sbb
and
mov
jnp,pt
cmp
cmp
sbb
mov
mov
hlt
in
cli
dec
sbb
push
xchg
xlat
into
push
mov
scas
mov
mov
loop
mov
in
push
mov
jecxz
les
into
out
and
jns
dec
es
rolb
inc
mov
mov
movsl
push
test
data16
dec
mov
lret
push
sbbl
lds
jecxz
ficomps
or
xchg
push
and
cltd
lret
jecxz
pop
cs
mov
iret
outsl
stos
cmp
into
add
lds
outsb
sbbb
daa
push
xlat
fldt
mov
mov
lods
mov
aad
int
xchg
sbb
mov
adc
fisttpll
in
mov
andl
into
cmp
add
out
add
in
popa
sbb
jge
adc
pop
mov
imul
add
movsl
adc
push
aas
lods
pusha
add
hlt
push
popf
in
pushf
fnstsw
jnp
cltd
outsl
xchg
xchg
mov
add
adc
or
xchg
scas
movsb
jecxz
ja
popf
sbb
mov
cwtl
cltd
int3
les
pushf
fstpl
pop
int
jp
callw
mov
add
data16
cld
or
adc
je
es
dec
inc
frstor
je
add
ret
mov
jb
push
adc
mov
loopne
ds
jp
inc
mov
cmp
xchg
jecxz
mov
in
cmp
add
out
rolb
into
sub
push
jmp
leave
movsl
popf
push
dec
jns
fwait
roll
push
pop
jae
mov
inc
and
inc
xor
dec
pop
aad
add
mov
cmpsb
push
adc
cmp
sub
mov
xchg
fwait
xchg
mov
mulb
mov
sbb
jmp
shll
sbb
inc
adc
xchg
mov
dec
sarl
xchg
stos
outsl
fwait
mov
jg
mov
imul
mov
mov
cmp
mov
sahf
jae
scas
xchg
out
or
cmpsl
in
cmp
and
pushf
or
push
adc
jmp
test
lock
push
mov
ds
lock
leave
lcall
gs
cmp
pop
mov
pop
sub
cmp
jo
notl
mov
sbb
outsb
adc
fisubs
add
rcrb
jb
adc
ljmp
adc
roll
add
nop
inc
or
jle
and
cmpsb
out
mov
inc
lds
sub
cmp
and
dec
fs
or
outsl
push
inc
add
fmull
enter
negb
mov
xor
adc
cmc
pop
adc
sub
out
dec
sub
cmp
add
js
adcl
mov
into
movsl
es
dec
out
jge
sbb
sub
add
cmpsb
inc
adc
mov
xchg
into
das
dec
adc
int
xchg
jp
je
adc
mov
sub
stc
fcmovb
dec
inc
cltd
jecxz
ja
or
ret
pop
mov
mov
outsb
std
cmc
adc
ret
pop
loope
arpl
movsl
add
adc
mov
mov
ja
rorl
cmpsl
push
or
repz
in
outsb
adc
add
mov
inc
loope
push
push
pop
inc
nop
shlb
mov
or
pop
inc
nop
xor
jecxz
xor
push
and
jge
adc
int
push
xchg
in
call
cmp
call
into
jmp
cmp
fistpll
iret
sub
fwait
scas
jns
add
sub
pusha
jne
rcll
mov
out
into
sub
jb
xor
test
mov
pop
jns
lret
call
pushf
mov
fadd
adc
pop
bound
mov
in
mov
call
sub
jbe
cli
mov
les
ss
into
cmp
jecxz
clc
test
mov
sbb
adc
mov
loopne
pop
fisttps
push
lock
rcl
and
out
pop
cmp
add
int3
std
sbb
scas
pop
jnp
sbbl
lahf
sub
stos
pusha
pop
add
jle
cltd
clc
xor
dec
fs
push
mov
popf
pop
or
mov
fistps
cmc
push
aad
test
and
icebp
xchg
jecxz
idiv
mov
das
jge
stc
fwait
mov
push
out
loop
out
mov
aaa
fisubrs
jmp
fstps
cli
outsb
imul
idivl
sti
xchg
or
les
outsb
mov
jmp
or
pop
sub
jne
mov
push
in
imul
ffree
cmc
in
lcall
je
push
sbb
rorb
jecxz
les
cmp
jge
les
mov
mov
xchg
add
adc
ficoms
in
add
sub
out
cmp
aas
jp
lds
jbe
mov
sub
lahf
pop
mov
out
sub
add
shrb
loop
pop
out
mov
inc
jle
aas
sarl
scas
aaa
push
or
adc
aaa
cmp
mov
and
movsl
cmpsl
inc
test
fdiv
in
out
ja
test
aaa
fwait
test
sbb
cli
inc
push
enter
push
cmovs
push
lock
jmpw
mov
clc
stos
and
jae
or
mov
cmc
rorb
jecxz
imul
mov
repnz
cmpsb
sbb
hlt
aaa
in
jb
rcll
cmc
jecxz
adc
cwtl
jae
lret
cmp
add
cwtl
mov
fucomip
pop
pop
xor
jne
aad
and
ss
fldenv
xchg
jno
and
repnz
dec
pushf
frstor
fstps
in
ljmp
mov
adc
in
xchg
cmp
push
mov
inc
pop
popf
in
cwtl
jb
sbb
in
xchg
pop
in
stos
cmp
push
lods
in
cmc
in
outsb
pop
in
out
in
cwtl
je
cmp
mov
les
sbb
lcall
mov
test
mov
bound
add
xchg
mov
mov
jbe
mov
and
and
js
call
insl
fisubl
mov
pop
inc
mov
adc
pop
mov
daa
xchg
repnz
inc
aam
aam
push
lea
and
sub
sbb
fdiv
pusha
in
sub
nop
pop
aaa
fwait
mov
lods
dec
sbb
sbb
pushf
int3
ljmp
lret
mov
addr16
lds
in
incl
lods
xchg
jecxz
je
xchg
mov
ljmp
cld
add
stos
xor
xchg
les
test
mov
mov
ss
lds
es
mov
xlat
insb
ret
mov
ret
xchg
insb
xchg
mov
int3
ret
adc
add
call
add
pop
xor
mov
call
pop
insb
or
add
fnstenv
push
or
inc
push
pop
or
je
ljmp
sbb
sbb
xchg
jecxz
xor
mov
adc
pop
call
dec
test
movsl
test
xchg
cmc
adc
pop
xchg
lret
sub
add
pushf
lret
fs
jp
neg
mov
int3
imul
mov
push
cmp
add
ficompl
mov
pop
data16
cmp
popf
gs
jmp
inc
jno
ds
insl
es
xor
sub
dec
aad
xchg
stc
out
std
test
sti
sbbl
loop
xchg
std
ja
rcll
notb
add
dec
cmpsb
jae
aas
icebp
sbb
imul
sbb
xchg
jecxz
xor
xor
push
push
ficompl
mov
pusha
jnp
add
movsb
adc
gs
mov
rclb
shlb
and
ljmp
es
xchg
lock
js
scas
lcall
adc
push
aam
mov
sbb
outsl
xor
lds
ljmp
jle
test
xor
mov
rcl
cwtl
sbb
jno
dec
jbe
cmp
lock
lods
mov
and
out
js
add
out
jb
mov
leave
ffree
shlb
cmp
les
es
mov
adc
mov
push
lret
pusha
cmp
pop
test
and
leave
cmp
sahf
push
inc
fldl
dec
sub
and
movsb
addl
mov
loope
xchg
jp
in
insb
testl
xor
adc
lret
sub
sbb
roll
subl
xchg
lret
nop
movsl
push
inc
mov
mov
inc
cltd
iret
les
enter
clc
test
jmp
sub
mov
push
out
pop
cld
mov
les
sub
push
loop
lret
lcall
mov
call
adc
xchg
pop
inc
popf
fs
xchg
int
push
mov
xchg
das
push
shrb
pop
sbb
ss
or
mov
ja
xchg
cmp
popa
hlt
mov
pop
or
jnp
and
fstps
xor
test
push
jne
mov
mov
es
aas
stos
sub
jle
add
mov
pop
push
jno
sbb
or
mov
cltd
inc
test
aad
dec
mov
jmp
jg
adc
jp
inc
mov
into
les
mov
adc
xor
xchg
into
das
ds
and
cld
or
pusha
jb
xchg
mov
out
jb
imul
imul
mov
xchg
mov
fs
lods
cwtl
jecxz
je
jo
cmpl
pop
pop
xchg
in
push
ss
aam
loop
rcrb
pop
insl
mov
pop
dec
leave
mov
pop
cmpsb
sbb
sbb
jb
lods
mov
xor
shrb
dec
shr
testl
mov
jg
and
add
in
lcall
aas
xchg
xchg
and
sbb
fcmovnb
pop
repz
andb
mov
adc
sbb
xchg
mov
es
ret
bound
les
xchg
aam
sbb
adc
mov
in
out
fnstcw
push
push
jecxz
xor
aam
lds
mov
scas
iret
mov
cmp
scas
ss
insl
pop
adc
inc
cld
outsb
or
xchg
sub
sbb
mov
xchg
cmp
les
aas
sub
jp
es
xchg
fisttpll
push
mov
pop
xor
mov
jbe
fstps
jmp
mov
testl
int
mov
movsl
adc
xorb
jb
jne
int3
jge
nop
xchg
enter
add
add
repnz
jl
scas
mov
mov
sbbb
les
stos
loope
mov
mov
inc
iret
loopnew
sub
mov
jge
xchg
arpl
dec
mov
xchg
and
pop
repz
int
mov
mov
add
dec
sahf
sahf
cmc
xchg
sbb
jmp
mov
and
jecxz
fldt
cs
mov
outsb
adc
dec
sub
aaa
and
pop
cmp
mov
iret
sub
fwait
lods
adc
pop
test
js
mov
pop
jge
sbbb
dec
xchg
xchg
and
jmp
pop
cmpsb
sbb
scas
jo
jecxz
insb
imul
mov
jo
xchg
lock
fs
xchg
in
mov
call
sub
das
jae
or
ret
pop
inc
adc
notb
scas
clc
xchg
pop
inc
iret
add
adc
adcl
std
dec
inc
test
jb
ret
ds
push
or
aas
pop
push
mov
rcll
nop
xchg
loope
out
lret
sub
inc
mov
adc
andl
add
pop
dec
cmp
xchg
and
in
or
or
dec
push
inc
mov
out
cmp
dec
pop
dec
dec
or
xor
cli
xorl
mov
push
jo
mov
hlt
cmp
add
cmp
aas
jle
cmp
adc
mov
cmp
iret
movsl
popf
dec
mov
mov
les
cmpsl
adc
xchg
nop
push
lret
jns
mov
lock
sarl
ljmp
adc
add
and
fisubl
mov
xchg
lcall
addr16
pushf
mov
xor
sbb
fisubl
and
negl
or
stos
popf
jb
scas
xchg
jae
pop
es
add
pop
sbb
mov
cmp
push
mov
cmc
lock
in
cwtl
js
xor
stc
jecxz
je
mov
int
aaa
and
dec
ret
xchg
mov
les
pushf
ficomps
jge
idivb
adc
aam
mov
sbb
jne
mov
inc
int3
adc
les
add
rolb
test
stos
lock
pop
es
imull
dec
shlb
dec
add
cmpb
pushf
fldenv
jge
sub
leave
jl
lcall
inc
test
adc
daa
je
mov
and
adc
cmp
notb
xchg
dec
jno
add
out
arpl
xor
into
cmp
or
add
pop
jecxz
push
cmpsl
sarl
or
lcall
jbe
std
sub
ret
into
or
pusha
insl
xor
lds
lea
sahf
jecxz
icebp
xor
daa
pop
inc
nop
aaa
inc
loopne
lock
push
ret
jge
ja
clc
es
or
mov
outsl
push
sub
in
sub
add
in
scas
arpl
push
sbb
and
jecxz
je
pushf
aad
jge
std
ljmp
std
jae
or
sahf
outsb
cmp
and
lcall
stc
into
sub
jmp
pop
xor
xor
jmp
dec
inc
out
cmpsl
cmc
sub
test
subl
xchg
jge
rclb
int3
jge
testl
dec
sahf
sbb
push
xor
movsl
mov
je
out
mov
and
pop
mov
cli
scas
mov
les
das
call
imul
xchg
test
and
xchg
in
xchg
out
int3
jb
adc
in
jg
in
cmp
pop
xor
inc
ds
cmpsl
inc
jmp
sbb
mov
xor
aaa
sarl
or
inc
imul
test
cmp
cmc
das
mov
lea
aas
ja
nop
fadds
fnsave
ljmp
xchg
mov
push
dec
dec
or
and
xchg
test
dec
sbb
js
out
dec
int
or
and
xor
ljmp
out
pushf
jns
scas
daa
or
js
or
mov
leave
push
xchg
ror
dec
jge
mov
test
and
xor
into
inc
scas
gs
in
add
jbe
mov
scas
arpl
sub
fimuls
or
jns
xor
mov
xor
jg
push
or
lcall
jecxz
jmp
je
mov
jne
xor
mov
dec
mov
out
push
fcomp
adcb
inc
sub
sbb
fstps
xchg
and
adc
mov
dec
push
clc
mov
in
adc
cwtl
xchg
dec
and
pop
inc
mov
ss
mov
cmp
sbb
lcall
int3
dec
addr16
lcall
je
inc
cmpsb
sahf
inc
cmpsl
lods
or
sarl
mov
xchg
cmp
fisubl
je
rorl
push
adc
mov
adc
lock
imul
pop
jge
or
test
out
sub
fnstenv
aas
flds
sbb
mov
test
dec
or
mov
jmp
mov
sbb
loop
iret
add
push
cmpsb
dec
gs
push
sub
and
aad
push
adc
push
push
nop
in
std
lret
xor
adc
xor
out
push
mov
push
shll
ficomps
push
lock
into
xchg
jecxz
xor
inc
fisubl
jb
iret
sub
fsubrp
jb
in
push
ljmp
sbb
mov
rcrl
xchg
jecxz
push
pop
mov
sub
mov
call
insb
les
adc
sarl
test
div
rcrl
in
es
xor
push
and
lcall
mov
in
jnp
mov
xchg
ds
jns
or
jae
mov
inc
xchg
pop
in
data16
cltd
into
les
pop
cmp
xchg
mov
xor
es
loope
mov
inc
loop
aam
not
pop
in
mov
rcll
cmc
in
mov
jne
push
or
inc
jns
cld
mov
les
mov
popf
imul
loope
ja
cld
call
insb
xchg
mov
jl
sbb
aas
cmpsl
fisubrl
scas
lcall
std
pop
sub
dec
or
add
xchg
jno
sbb
and
rcrb
cmp
cltd
and
add
xchg
inc
and
stc
arpl
mov
mov
mov
adc
or
lcall
add
or
lret
jno
enter
lcall
gs
pop
mov
jmp
sbb
sbb
inc
icebp
and
xchg
lea
sarb
mov
ret
rcrb
jnp
lret
sub
pushf
clc
xchg
shrb
scas
hlt
mov
shlb
jno
inc
in
cmp
jge
mov
inc
movsl
xor
adc
movsl
push
or
push
and
xchg
pop
adc
popa
dec
sahf
inc
adc
jne
xor
shl
pop
jne
divb
sub
in
jbe
adc
jmp
inc
adcl
jns
mov
scas
into
sbb
inc
xor
fnstsw
jnp
mov
xor
sub
movsb
or
sbb
loop
aas
push
fcmovnu
out
std
insl
outsl
inc
in
cmp
pop
inc
lea
lds
icebp
sbb
into
in
popa
or
or
idivb
pop
repnz
fildl
fsubrl
pop
add
hlt
bound
adc
sbb
data16
xchg
mov
lahf
mov
dec
jp
cwtl
or
loop
out
inc
xor
push
push
xchg
add
mov
lods
nop
mov
mov
ljmp
inc
xchg
fwait
rcll
int
push
dec
stos
xchg
jecxz
je
sub
loopne
loop
cmp
pop
inc
sbb
cmp
jae
stos
inc
mov
addl
stos
xor
inc
add
mov
fwait
enter
mov
std
add
mov
or
dec
jecxz
adc
movlps
mov
sbb
rcrb
dec
pop
mov
in
cmp
pop
inc
outsl
lahf
imul
ds
out
out
sub
shlb
add
or
dec
fs
sqrtps
popf
and
jle
in
js
testl
cwtl
jecxz,pn
call
pushf
in
xlat
pop
pop
mov
loop
cmp
test
inc
xor
mov
jo
cltd
mov
push
jb
out
sub
or
es
shrl
xchg
loopne
jecxz
mov
out
leave
xchg
jmp
cmp
push
test
cmc
mov
daa
xchg
in
cwtl
ja
push
sbb
mov
rcll
xor
aad
movsl
daa
je
icebp
aad
lods
jecxz
je
add
std
xchg
mov
call
mov
enter
xor
mov
xchg
xor
ja
rorl
xchg
adcl
adc
inc
xchg
pop
pop
pop
pop
sbb
ljmp
xor
jmp
mov
int
jecxz
mov
cmpsl
mov
dec
mov
scas
insl
xchg
rcr
test
or
into
cmpsb
call
adcb
aad
or
mov
mov
sbb
leave
daa
je
mov
cld
jl
js
bound
testb
out
daa
popa
pop
cmc
in
pushf
fsubrp
aas
xchg
adc
or
pop
std
in
mov
cmpsl
push
xchg
or
adc
ret
lret
inc
loope
sbb
es
test
daa
je
add
fldcw
enter
mov
sub
mov
ss
lret
imul
add
je
lcall
xor
dec
adc
mov
jne
fdivl
xchg
sub
pop
loope
xchg
dec
push
int
repz
sub
push
cmpsb
shrb
pop
icebp
stc
and
popa
jae
popa
xchg
xchg
int3
ja
int
pop
mov
mov
fldt
sbbl
sub
pop
inc
xlat
stc
xchg
xor
fstps
ret
mov
ljmp
xchg
in
aaa
stos
xor
xchg
les
les
sub
les
mov
inc
jae
es
imulb
dec
repnz
pop
pop
pop
fldcw
call
aas
sbb
mov
test
inc
add
adc
mov
xor
shll
mov
es
cld
rol
pusha
add
dec
mov
cmp
push
sub
bound
xchg
jne
aad
and
out
insb
imul
arpl
lcall
mov
push
inc
mov
call
insb
xor
lds
jp
movsb
cli
sub
in
in
cmp
fld1
xor
xor
mov
lret
out
sub
and
nop
loopne
pop
cmp
add
jns
cmpsb
mov
add
sub
sahf
loop
jl
push
ret
sbb
mov
cmp
push
stos
jb
icebp
pop
sub
push
in
cwtl
jns
dec
mov
mov
les
cmp
movsb
jle
ret
adc
ljmp
mov
cmpsb
xor
add
push
insl
inc
mov
sub
test
push
testl
andb
stc
out
add
pop
and
pop
clc
xor
push
and
out
cld
jg
iret
xor
shl
push
pop
imul
xor
xchg
jne
leave
repnz
js
mov
inc
cmp
or
and
inc
xlat
add
dec
push
mov
nop
pop
test
jg
jae
mov
xchg
cmp
les
fists
xchg
push
mov
pushf
xor
push
mov
xor
enter
fwait
mov
mov
xor
test
pop
push
stc
das
lods
and
dec
cwtl
arpl
inc
jae
es
mov
call
insb
add
jbe
movl
push
pop
mov
rorb
adc
dec
mov
into
jo
pop
adc
add
xchg
add
out
xchg
out
int3
jb
xchg
out
mov
and
pop
in
jnp
rcll
imul
ss
in
cwtl
je
es
ss
out
cli
stos
jp
es
int3
lods
mov
adc
test
aaa
sbb
movb
sbb
mov
sbb
dec
dec
mov
mov
nop
pop
mov
outsb
rcrb
push
or
push
scas
mov
clc
sub
pop
or
jecxz
cmp
sub
push
fs
or
cmpsb
jo
dec
scas
inc
stos
cmp
or
adc
les
cmovg
add
dec
stos
cmp
pushf
iret
push
xchg
call
lods
das
cmp
lds
push
pop
arpl
inc
jae
sub
ljmp
andl
mov
or
mov
test
add
adc
mov
or
into
cmc
push
aad
test
jns
aad
icebp
xchg
insl
push
and
inc
sarb
ljmp
mov
dec
mov
jl
xor
jbe
add
pop
and
mov
cmp
insl
xlat
adc
scas
movsb
cmp
ja
mov
cltd
into
sub
mov
sbb
xor
les
xor
jmp
in
subb
or
cmp
cltd
xchg
dec
push
int3
mov
out
sub
in
xor
inc
shlb
sbb
out
add
mov
push
aad
jbe
pop
adc
daa
je
mov
sarb
pop
gs
xchg
pop
push
mov
dec
add
mov
aaa
xchg
mov
mov
xor
mov
stos
xchg
sarl
inc
repnz
add
sub
xor
arpl
int3
je
mov
inc
mov
or
lret
les
lds
mov
jle
neg
mov
int
pop
mov
xor
mov
cmp
xchg
jecxz
in
add
add
das
xor
jl
scas
sub
lock
loop
and
pop
jns
aam
jecxz
leave
xlat
mov
and
or
and
sbb
ljmp
lcall
in
jne
mov
sbb
ljmp
mov
lea
add
call
adc
shlb
lods
inc
or
es
xor
addl
push
sbb
sbb
pop
mov
adc
mov
push
adc
cmp
xor
mov
and
jns
xor
out
into
sub
jl
shlb
andps
mov
xchg
mov
add
xchg
jecxz
je
push
mov
mov
lret
sub
fstl
stc
jmp
lds
pop
mov
fldcw
mov
jmp
mov
sub
test
mov
test
movsb
pop
call
mov
out
push
pop
jne
inc
lds
es
jmp
jl
inc
mov
aad
push
add
adc
sub
jle
push
and
lods
xchg
jne
stos
je
cmc
push
xchg
xchg
lcall
add
jg
pop
clc
data16
and
into
cmp
or
xchg
pusha
dec
stos
jmp
pop
jecxz
cli
mov
les
dec
icebp
lds
cmp
fistl
ss
pop
or
out
and
int3
jg
sub
cmp
dec
jnp,pt
mov
xchg
xchg
sbb
inc
lock
mov
push
jle
test
inc
std
jb
jns
es
cwtl
fmuls
adcl
mov
sub
xor
int3
jl
lock
es
jp
sbb
jg
in
dec
cltd
lret
les
lds
mov
mov
lock
jl
cli
sbb
test
jo
lods
lds
pushf
neg
bound
sbb
mov
mov
in
add
divb
xchg
jge
pop
insl
and
in
sti
adc
mov
leave
cmp
lea
add
cld
ret
cmp
and
jno
jp
mov
in
es
ret
pop
fidivs
rcrb
xchg
in
neg
mov
ret
or
lcall
mov
popf
inc
je
mov
push
dec
das
mov
xchg
test
mov
sarb
dec
int
add
out
or
sbb
dec
out
and
clc
jle
sub
xor
lret
xor
hlt
pushf
in
mov
dec
mov
add
test
or
lcall
shl
andl
aas
jns
mov
mov
out
movsb
push
jp
xor
jmp
cltd
mov
inc
test
cwtl
cmp
jno
xor
loop
cmp
or
lds
pop
stc
cmp
mov
scas
pop
jbe
add
pop
cmp
aas
ja
cli
dec
xor
outsb
test
xchg
jecxz
jmp
sub
out
in
cmp
js
fnstcw
ret
add
xor
out
jg
dec
jg
cltd
fs
nop
ficoml
mov
mov
aas
aam
or
mov
pop
xchg
fidivs
jecxz
rorb
les
adc
or
pushf
into
adc
clc
popf
gs
test
movsb
or
push
fists
fwait
inc
add
push
stos
outsl
cmc
loop
rorb
sub
jecxz
loopne
fiadds
clc
ret
fwait
mov
cmpb
and
mov
jl
lods
repnz
idivl
pushf
jecxz
je
pusha
mov
cltd
add
mov
into
cmp
shr
and
cmpsb
jmp
and
and
mov
je
in
test
sbbb
popa
aad
pop
add
fdivl
sbb
add
sbb
ret
insb
inc
repnz
xchg
test
not
mov
xchg
pop
dec
sarl
sbb
loop
loopne
xor
movsb
clc
pop
pushf
jp
int
push
sub
imul
add
mov
es
mov
mov
outsl
stos
ds
pop
xor
inc
fsubl
lock
inc
test
push
xor
hlt
or
mov
movsb
push
adc
pop
pop
push
pop
call
mov
pushf
or
dec
lods
sbb
insb
pop
movsl
pop
inc
les
test
pop
clc
dec
mov
pop
xchg
aaa
xchg
pop
push
xchg
pop
xor
dec
outsl
adc
cltd
int3
xchg
xchg
mov
and
fiaddl
sahf
push
or
mov
int3
or
mov
movsb
outsb
cli
loop
push
inc
mov
inc
rcrb
subl
clc
adc
cmc
lahf
dec
mov
cs
sub
adc
pop
push
sbb
dec
frstor
and
xchg
push
cmp
mov
dec
iret
jne
popf
push
in
inc
jle
add
pop
pop
ds
cmp
add
cmpsl
stc
movl
and
popf
pop
push
jbe
fnstsw
aam
shrl
jmp
rcr
sub
jns
sbb
sahf
mov
mov
or
cmp
into
sub
ret
jl
movsl
das
pop
sbb
cmpsl
in
movsl
aas
je
pop
sbb
pop
mov
add
mov
test
movsl
popf
push
sbb
enter
mov
ljmp
mov
daa
pop
inc
lret
and
adc
ljmp
addr16
scas
inc
stos
lods
lds
lret
iret
pop
inc
call
rol
insl
leave
push
dec
push
test
mov
jb
pushf
ja
sbb
adc
ror
insb
or
outsl
push
and
xor
loopne
jl
jmp
add
lock
rcrl
call
les
cli
dec
xchg
imul
hlt
pop
dec
mov
mov
ljmp
rorb
jecxz
neg
mov
cmp
mov
lock
gs
shlb
sbb
adc
jmp
cltd
and
repnz
stos
sub
or
lcall
stc
xchg
daa
push
les
sbb
xchg
fmull
decl
cmp
dec
pop
cmpb
jle
cli
pop
fwait
sub
pop
jmp
ftst
and
xchg
jecxz
je
pushf
xlat
pop
jge
nop
in
inc
arpl
in
jbe
mov
and
loop
les
adc
pop
cltd
stos
mov
fs
push
and
lods
cwtl
jecxz
je
xor
or
sbbb
fst
push
jae
scas
cltd
arpl
ret
mov
lds
dec
out
pop
clc
add
es
or
out
jb
rcll
into
xor
xchg
js
nop
sbb
loopne
mov
xchg
jecxz
les
jmp
mov
pop
and
xor
lods
and
leave
movsl
popf
sbb
jecxz
pop
mov
mov
in
sti
idiv
jns
in
cwtl
jae
push
sbb
mov
cmp
push
rorb
dec
in
cwtl
ja
sbb
icebp
and
repnz
in
mov
add
scas
inc
testl
sbbl
fsubrs
mov
cmp
dec
iret
xchg
mov
pop
clc
jl
lock
pushf
orb
or
icebp
cmp
sub
mov
dec
sub
in
lea
inc
dec
add
jp
shlb
jle
or
lcall
xchg
fiaddl
int3
push
push
fs
or
cmpsb
mov
ss
mov
pop
dec
arpl
frstor
xchg
inc
insb
xor
adcb
or
call
andb
pushf
mov
add
sub
loop
mov
add
jle
mov
mov
cmp
stos
popf
pop
or
jno
dec
shl
es
mov
jp
cmp
loope
xchg
add
xor
inc
aad
and
insb
js
mov
ljmp
dec
lock
lods
mov
adc
pop
or
push
movsb
sbb
jecxz
incb
mov
lds
test
dec
mov
clc
test
test
add
mov
gs
add
adc
mov
pop
xor
subl
cmp
stc
shl
loop
push
jg
or
pop
mov
enter
mov
enter
jne
pop
mov
mov
and
pop
out
lea
jne
mov
add
or
mov
push
sbb
cwtl
arpl
mov
mov
lock
insl
pop
clc
scas
mov
data16
mov
repz
fimull
or
jg
adc
scas
sub
pushf
lea
mov
jge
pop
sub
cmp
mov
xchg
lds
stos
pop
das
sarl
cmp
lret
push
inc
xor
dec
and
cli
fcmovb
dec
gs
loop
add
or
xchg
jecxz
je
jno
out
or
cli
ret
pop
std
mov
fbld
adc
xchg
aad
cmp
xchg
or
in
cmp
insb
inc
pushf
mov
pop
sub
add
and
lret
push
stos
xchg
vmread
mov
pushf
jge
sbbl
fwait
insl
sbb
cmp
lret
dec
es
js
mov
sbb
das
and
dec
mov
add
pop
sbb
mov
adc
dec
xor
add
cmp
adc
jecxz
ret
xchg
pop
add
xchg
out
int3
jb
push
and
pop
test
std
mov
call
adc
dec
push
inc
pop
enter
test
lea
es
rol
xchg
jecxz
ljmp
in
push
into
cmp
add
call
mov
outsl
dec
es
jae
rclb
fnsave
lahf
data16
leave
xchg
jecxz
lret
dec
pushf
ficomps
ret
push
in
jge
out
fistpl
sbb
sbb
lretw
insb
add
out
jb
sbb
xor
fdivs
mov
test
inc
aad
push
push
test
movsl
cmc
es
stos
ret
sbb
adc
xchg
push
daa
cltd
fcoms
pop
aas
call
out
fsubrp
dec
ds
mov
lret
and
movsb
les
mov
iret
cvtdq2ps
mov
pop
adc
daa
je
mov
add
insb
pop
mov
dec
sub
and
mov
xor
sbb
shrl
cmpsb
xchg
jg
jo
cmp
aad
jbe
mov
inc
xor
or
fbstp
or
addr16
sbb
test
xchg
jecxz
pop
xor
mov
push
push
insb
cltd
jle
cmp
in
jnp
mov
es
jns
xor
xchg
loop
xor
xor
push
rcll
mov
dec
push
repnz
into
sbb
daa
je
mov
and
or
adc
cmp
pop
inc
in
and
inc
jecxz
stos
fs
dec
aad
lahf
or
add
inc
push
fdiv
les
cmc
lcall
dec
push
fisubrl
lods
andl
inc
mov
push
add
mov
and
les
pushf
lret
ds
xor
pushf
lret
inc
es
jae
stos
rclb
dec
stos
xchg
jecxz
je
add
stos
or
sbb
add
fmull
loope
jmp
out
jp
xchg
mov
push
mov
lods
lcall
inc
stos
xchg
adc
push
or
pop
fnstenv
clc
xorl
cmp
jl
jmp
dec
in
negl
sub
xchg
push
push
xchg
pop
push
iret
sbb
mov
scas
pop
sbb
sbb
aas
flds
jmp
adc
cmpsb
mov
pop
cmpb
jne
mov
imul
insb
imul
fcoml
fucomp
ds
call
sbb
and
lret
xchg
jecxz
aad
hlt
xchg
jge
and
push
mov
add
pop
in
outsb
insb
pusha
sub
ret
xlat
iret
pop
cmp
popa
mov
pop
and
sbb
rcrb
sub
push
xor
lret
jl
and
mov
and
outsb
in
insl
insb
sbb
arpl
push
inc
lea
insl
pop
mov
call
insl
add
call
adc
fdivs
xorb
sbb
xchg
adc
add
xchg
daa
jl
add
je
xlat
add
push
jge
jg
and
push
push
in
aad
popf
jb
scas
cwtl
addb
ret
sub
ret
jae
mov
or
xchg
adc
jmp
cmp
push
shll
ljmp
cwtl
jb
push
inc
cmpb
pop
sbb
adc
xchg
shll
in
or
pop
xchg
in
dec
and
pop
outsl
mov
mov
cmc
iret
sahf
push
inc
ja
sarl
in
stc
or
dec
in
xor
push
push
jg
or
mov
fsubs
sbb
fstps
cmpsb
sbb
and
loop
cmp
cmp
sub
pushf
fistps
xchg
cwtl
pop
outsb
jbe
sbb
mov
push
push
fs
push
int
dec
dec
mov
or
dec
fsub
fs
cld
sar
cwtl
jecxz
je
and
pop
push
mov
sub
inc
outsb
ja
les
ret
xchg
loop
cmc
sbb
pop
fs
mov
or
cmp
add
jmpw
mov
pop
cmp
cmpsl
in
int3
adc
adc
mov
add
cmp
jge
mov
xchg
mov
pop
inc
nop
mov
loop
push
fstl
loopne
clc
out
push
xchg
cs
into
push
sub
push
js
decl
xchg
cmp
jp
add
or
adc
test
jnp
lods
or
lods
push
ss
xchg
jecxz
insb
sbb
jecxz
add
scas
lcall
int3
lret
mov
mov
dec
and
pushf
leave
mov
add
cmp
sbb
xchg
jecxz
aad
nop
xchg
lea
fisubrs
mov
sbb
ljmp
add
call
adc
andb
cmp
lahf
addr16
js
add
cwtl
mov
xor
jne
aad
push
sbb
jns
pop
repnz
jns
sub
sbb
cmp
add
ljmpw
fistps
pop
or
sub
mov
sbb
dec
cltd
rol
xchg
jecxz
notb
pop
pop
jle
into
cmp
add
popa
xor
sahf
js
scas
xchg
andl
jp
aad
sbb
es
push
leave
les
add
stos
add
xor
inc
aad
and
sahf
cmp
jl
or
mov
cmp
loop
cltd
adc
cwtl
push
or
pop
or
lcall
mov
push
mov
lret
add
mov
popf
jno
roll
fld
les
pop
imul
sub
sbb
cmp
add
and
lret
xchg
sahf
js
mov
and
outsb
je
sub
test
jbe
shrb
and
jecxz
dec
lods
cmp
fdivp
sbb
out
pusha
popf
push
adc
test
sbb
jp
es
xchg
push
les
cwtl
stc
bound
sub
dec
pop
ljmp
js
mov
add
mov
jne
mov
rcll
sti
es
add
or
clc
mov
int3
add
lods
pop
or
xor
lds
aad
les
stos
push
sbb
es
aas
ljmp
cmp
lock
sbb
cmpsl
stos
loop
rcrl
lds
jecxz
sbbl
addr16
dec
mov
adc
add
pop
in
cmp
pop
inc
pop
jmp
movsl
adc
xor
repnz
enter
jbe
lahf
orl
lret
jbe
lret
insb
stc
out
add
lcall
aas
pop
mov
mov
or
mov
cmp
into
pop
adcw
test
ret
mov
mov
enter
lret
jb
ss
fiaddl
outsb
add
lahf
push
push
clc
push
push
int3
mov
sbb
pop
xchg
jbe
repnz
xchg
pop
or
callw
sbb
cmp
mov
fs
jnp
pop
lods
lcall
mov
jb
int3
cli
xchg
push
mov
lcall
and
ret
xorb
xor
es
test
mov
sahf
aam
adc
sub
jo
in
push
je
sbb
pop
push
loope
push
clc
add
lds
pop
dec
cltd
or
add
int3
push
aas
pop
cmp
adc
std
cmp
pop
sahf
inc
inc
jo
stos
xchg
mov
outsl
std
adc
scas
mov
xchg
shll
mov
ret
xchg
test
inc
xor
add
stc
aad
shl
es
es
testl
inc
adc
push
mov
cmp
or
cs
imul
or
lea
je
outsl
add
mov
repnz
sbb
cmp
push
enter
lods
xchg
cmpsb
dec
cwtl
mov
je
pop
sbb
jb
lods
mov
mov
test
movsl
divb
cmc
adc
xor
ror
xor
pop
jge
fwait
jno
stos
xor
xor
test
leave
mov
mov
and
and
mov
in
cmc
adc
sub
fstcw
pop
sbb
in
ja
sbb
lods
icebp
push
sbb
je
leave
lcall
cld
mov
call
push
mov
dec
adc
divb
stc
sbb
scas
iret
xchg
jecxz
jp
mov
pop
xor
lock
mov
das
pop
and
dec
cmpb
imulb
inc
js
sarl
xchg
imul
hlt
push
dec
sahf
rcl
mov
sbb
jecxz
cli
ret
pop
mov
sahf
sub
or
pop
or
lea
ret
loopne
outsb
mov
repz
adcl
and
mov
xchg
popf
jecxz
add
jmp
test
outsb
movsb
insb
xor
sbb
in
in
and
add
add
mov
xor
leave
jl
xor
pop
and
subb
mov
les
dec
mov
out
into
sub
jl
cmp
add
mov
jns
pop
js
aaa
loope
jae
mov
add
xchg
jecxz
je
jns
call
in
fdivrl
stos
xorb
jge
xor
ss
pop
jnp
fistpl
add
enter
push
pop
or
push
les
and
outsl
or
stos
jp
icebp
jmp
cmp
push
fcomi
adc
in
cwtl
jne
sbb
jle
ja
xor
lods
add
xor
jne
aad
sbb
jo
test
push
jb
or
shl
push
inc
and
test
jo
push
and
bound
jp
es
aad
iret
cmp
mov
push
mov
sub
xor
lret
jl
jae
xchg
and
out
mov
xor
lods
gs
fcompl
mov
out
or
or
jnp
push
dec
xchg
popf
ljmp
and
push
in
pop
js
push
hlt
and
sbb
in
xor
mov
out
push
mov
mov
dec
xchg
push
sub
mov
push
jecxz
in
jecxz
mov
data16
jecxz
mov
cwtl
jae
enter
jl
mov
xchg
stos
add
xor
lock
movsb
jne
aad
and
mov
stos
jge
loope
adc
lret
adc
sub
loope
and
add
cmp
or
loop
sbb
aaa
ds
lea
mov
push
cmp
aas
ja
out
and
jo
mov
out
lret
jo
inc
loop
mov
mov
in
loopne
cli
call
test
jge
movsb
cmp
les
leave
adc
jle
shr
lods
mov
nop
jge
inc
pushf
in
sub
pop
push
std
in
xchg
scas
add
mov
stos
mov
lods
notb
rcll
lods
push
je
mov
push
lret
cmp
test
jb
int3
jecxz
and
lods
xchg
jecxz
je
lret
mov
jmp
sub
xor
jl
pop
sub
rorl
dec
mov
pop
in
popf
gs
stos
cmp
push
lds
aam
in
cwtl
je
inc
call
mov
add
out
xor
xlat
push
lcall
loop
cmc
adc
imul
sbb
xor
inc
push
out
js
popa
movsb
les
mov
ds
sbb
mov
cmp
push
loopne
cmc
pminub
daa
in
cwtl
ja
jnp
push
mov
ss
push
xchg
jae
shlb
push
push
and
sti
ja
movsl
pop
aam
negb
mov
sbb
out
int
add
lock
mov
call
adc
loopne
subb
jecxz
scas
fcmovnb
dec
mov
sahf
cmp
jl
ljmp
adc
ljmp
xchg
add
fdivrp
cwtl
push
xchg
pushf
pop
arpl
pop
cmp
pop
adc
mov
es
xchg
popf
cmp
popa
push
out
andl
and
leave
call
pushf
hlt
xchg
data16
out
sbb
push
mov
out
aaa
inc
sbb
cmp
dec
in
pushf
jecxz
les
add
push
mov
xor
xchg
xchg
rcr
pop
std
in
sub
xchg
in
adc
add
xor
call
sbb
iret
lods
fbld
je
xor
rcrb
pop
and
mov
pop
mov
stos
push
shrb
sub
int3
jl
dec
and
js
es
jp
sbb
inc
sbb
xchg
test
roll
pop
dec
sarb
and
adc
repz
scas
iret
xchg
jecxz
insb
movsb
fsubs
fiaddl
mov
push
dec
sahf
jbe
scas
xchg
push
adc
and
stos
push
sbb
lods
mov
sbb
pushf
xlat
mov
adc
jmp
jbe
sbb
mov
mov
lcall
jns
xchg
mov
pushf
cld
adc
roll
pop
std
int3
outsb
push
clc
outsb
adc
std
fists
jl
