add
mov
add
mov
test
jmp
rcrb
sar
lea
jmp
pop
xchg
jmp
mov
jmp
jmp
nop
push
xchg
xor
mov
inc
cld
call
push
pop
jmp
nop
nop
nop
push
cld
inc
mov
and
mov
add
mov
and
nop
sub
xchg
mov
xchg
andl
mov
push
nop
xor
mov
jmp
cmpb
jmp
je
xor
shr
rol
or
or
mov
call
xchg
cmpb
mov
je
cmpb
xchg
jne
jmp
xor
cld
ret
jmp
xchg
cmc
pop
stos
movsb
mov
mov
cmp
addr16
jne
jmp
lea
jmp
aam
push
xchg
push
xchg
pushl
push
pop
pushl
mov
call
leave
jmp
mov
jmp
nop
nop
nop
nop
nop
mov
add
and
add
andl
mov
push
mov
push
xchg
push
push
pop
push
addr16
push
xchg
add
mov
jmp
inc
mov
add
and
dec
mov
add
xor
mov
rorl
jmp
pop
out
repz
add
addr16
dec
jmp
pop
ljmp
incl
pusha
mov
shr
mov
or
pop
ret
jmp
cmp
nop
add
mov
and
cld
mov
push
pop
ret
jmp
jb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
subb
nop
pushl
addr16
and
shl
xor
rol
inc
pop
cmpb
mov
je
jmp
nop
push
cld
and
ror
rol
ror
sub
mov
push
nop
jmp
nop
nop
push
xchg
mov
shr
dec
xor
mov
push
mov
jmp
mov
jmp
rcll
outsl
add
add
jp
sub
mov
movzbl
jmp
mov
pushw
jmp
lea
jmp
add
fnsave
fwait
std
jmp
test
jmp
add
jle
and
jne
or
add
add
inc
xor
mov
ror
and
and
rol
inc
pop
ret
jmp
xchg
scas
nop
nop
nop
nop
nop
test
jmp
jmp
xor
dec
add
add
push
xchg
add
mov
sub
xchg
jmp
and
cld
mov
xchg
lea
jmp
dec
inc
xchg
push
nop
mov
mov
mov
xchg
lea
jmp
fildll
call
xchg
jmp
push
addr16
push
xchg
push
xchg
push
push
pop
pushl
mov
push
xchg
pushl
or
push
xor
shl
add
mov
dec
mov
or
dec
test
jne
pop
pop
call
push
popl
pushl
mov
dec
pop
jmp
add
jne
push
pop
pushl
mov
dec
or
or
push
and
and
or
mov
or
mov
add
mov
and
dec
xor
rol
dec
test
jne
pop
pop
call
push
mov
mov
and
pop
mov
shr
shr
mov
mov
shr
ror
pop
jmp
push
and
pop
add
pushl
sub
dec
pop
rep
jmp
fistps
mulb
sub
or
xor
and
mov
add
shl
or
rol
mov
and
add
add
or
xor
mov
dec
and
mov
sub
push
pop
jmp
and
and
mov
jmp
shl
sub
shr
ror
and
add
pusha
jmp
inc
push
xor
or
sub
mov
jmp
inc
addr16
mov
push
pop
mov
mov
movl
xchg
or
shl
add
mov
sub
or
and
sub
xor
mov
shr
jmp
out
jmp
add
xchg
jmp
addb
mov
xor
xchg
inc
addr16
ret
jmp
lea
nop
nop
nop
je
call
xchg
test
jmp
aam
jmp
add
call
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
push
nop
cmpl
mov
jne
push
cld
lea
jmp
push
xchg
push
xchg
push
cld
dec
mov
add
and
add
jmp
nop
nop
nop
nop
push
cld
push
xchg
or
shr
ror
push
xor
inc
push
ror
xor
pop
ror
dec
test
jne
pop
lea
call
pushl
shr
shr
add
mov
and
pop
mov
add
mov
and
xor
mov
or
mov
nop
nop
nop
nop
nop
add
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
add
add
add
nop
call
mov
add
xchg
mov
movb
mov
movl
xchg
jmp
add
xchg
cmpl
addr16
je
push
nop
or
add
mov
sub
xchg
shr
jmp
mov
ret
shr
add
addl
je
push
mov
xor
push
pop
rol
and
dec
mov
pop
lea
jmp
cmp
call
mov
dec
xchg
lea
jmp
xchg
push
add
lea
jmp
push
pop
dec
sti
sub
test
xlat
movzwl
jmp
inc
fwait
mov
add
or
sub
pop
cmp
xchg
mov
jmp
push
scas
push
loop
mov
inc
in
add
add
scas
jmp
mov
mov
xor
decl
cltd
ljmp
decl
add
test
and
mov
pusha
jmp
jmp
int
jle
mov
cld
movzwl
jmp
inc
pop
jmp
jmp
mov
and
nop
cmp
nop
jmp
loopne
xrelease
jmp
sub
aaa
sbb
jne
jmp
call
jbe
add
addr16
jmp
pushl
xor
sub
sub
pop
jmp
sbb
sti
call
gs
and
mov
jmp
ret
jmp
addr16
nop
nop
nop
jne
test
jmp
add
jp
decl
test
add
add
add
add
nop
add
mov
add
addr16
pushl
shr
sub
and
pop
inc
cld
inc
nop
decl
jmp
mov
mov
mov
addr16
xor
sub
inc
mov
add
push
pop
mov
push
pop
jmp
inc
leave
aad
test
incl
inc
add
nop
cmpl
mov
jne
or
and
rol
pop
jmp
mov
or
sub
mov
and
mov
or
sub
or
mov
dec
mov
rep
jmp
je
and
add
mov
movzwl
jmp
repz
int
inc
clc
xchg
add
mov
cmp
xchg
jmp
je
dec
mov
sub
nop
mov
xchg
mov
cld
jmp
nop
nop
nop
nop
nop
movb
mov
incl
mov
jmp
ror
mov
add
mov
movzbl
jmp
jmp
pop
mov
add
mov
mov
mov
mov
mov
add
mov
mov
xor
and
and
dec
pop
mov
xor
inc
pop
leave
jmp
jbe
cmc
push
cmpsb
ret
jmp
push
jle
jne
nop
nop
nop
nop
nop
mov
jmp
pop
jl
jmp
mov
leave
incl
push
pop
jmp
cld
out
inc
sub
dec
add
mov
pushl
and
add
ror
xor
pop
nop
nop
nop
nop
nop
pushl
and
mov
pop
pushl
shr
xor
pop
add
nop
mov
mov
shl
and
shl
mov
add
addr16
jmp
mov
mov
inc
xchg
or
add
mov
mov
sub
mov
nop
nop
nop
nop
nop
and
nop
inc
xchg
inc
mov
shr
jmp
inc
cmp
sbb
cmpsb
je
test
jmp
shlb
test
sub
mov
or
add
mov
shl
mov
jmp
arpl
jmp
cltd
js
jmp
xchg
add
xchg
xor
mov
shr
jmp
pop
pop
sbb
sar
jmp
repz
jmp
nop
call
mov
jmp
fs
sub
nop
mov
cld
jmp
add
jmp
dec
push
ds
out
jle
nop
nop
nop
nop
nop
mov
xchg
jmp
clc
sets
inc
and
xchg
dec
nop
mov
jmp
in
test
nop
jne
jmp
mov
mov
mov
xchg
jmp
call
mov
test
jmp
out
adc
cltd
jne
cmp
mov
jmp
in
popa
mov
pop
jp
mov
add
add
and
jbe
jne
lea
jmp
fidivrs
xorb
cmc
jmp
shr
inc
jbe
dec
inc
and
add
mov
ror
mov
mov
push
pop
sub
mov
sub
mov
nop
nop
nop
nop
nop
decl
jmp
jne
rol
shr
xor
mov
mov
addr16
jmp
mov
jmp
je
dec
das
je
or
xor
mov
or
mov
sub
cld
add
mov
nop
nop
nop
nop
nop
mov
xchg
incl
xchg
dec
cld
mov
jmp
and
test
jmp
sub
xchg
jmp
sbb
movb
dec
in
jmp
jp
aad
inc
aam
test
shr
popf
mov
jmp
imul
pop
jle
ror
or
sub
mov
add
push
pop
nop
nop
nop
nop
nop
add
mov
dec
jmp
jne
test
jmp
jecxz
or
sbb
sub
inc
add
add
pop
jmp
or
sbb
mov
add
add
iret
jmp
jge
lds
cmp
add
addr16
dec
jmp
scas
jne
push
mov
push
mov
jmp
mov
pusha
dec
xchg
add
shl
add
mov
movzbl
jmp
mov
test
loopne
jmp
add
mov
incl
xchg
lea
jmp
sbb
loope
or
mov
call
addr16
jmp
and
push
pushl
xchg
push
mov
push
or
or
mov
sub
dec
mov
sub
and
xor
add
and
add
add
xor
mov
rol
add
dec
test
jne
pop
sub
add
and
sub
and
mov
add
call
jmp
push
and
add
xchg
jb
inc
xchg
cmp
addr16
jb
jmp
aaa
add
sub
sub
ror
mov
mov
mov
call
nop
mov
nop
jmp
mov
xchg
cmp
xchg
jae
inc
cld
inc
xchg
test
jmp
call
je
rol
shl
or
inc
shr
mov
jmp
sbb
jmp
into
loope
lods
dec
or
xor
mov
and
rol
add
mov
add
rep
jmp
mov
push
xor
loop
rol
mov
and
inc
mov
sub
xchg
mov
addr16
incl
addr16
dec
mov
mov
jmp
cmc
dec
sbb
es
cmp
or
rol
mov
dec
shl
ror
mov
push
addr16
push
nop
jmp
cmovle
jne
mov
mov
jmp
xor
push
jne
xchg
call
nop
push
xchg
jmp
imul
mulb
inc
push
pop
jmp
nop
nop
nop
nop
nop
and
sub
and
shl
mov
xor
inc
ror
inc
shl
mov
mov
nop
jmp
arpl
inc
push
cld
push
xchg
call
xchg
mov
add
or
xor
rol
mov
rol
dec
xor
mov
nop
nop
nop
nop
nop
test
jmp
test
xor
jmp
addr16
test
add
dec
mov
jmp
inc
fiadds
cld
incl
mov
mov
xchg
xor
xchg
cmpl
addr16
je
sub
mov
nop
nop
nop
nop
nop
ror
or
pop
sub
cld
ror
or
inc
pop
mov
sub
and
sub
mov
add
rol
and
add
add
pop
ret
jmp
popfw
inc
fwait
and
nop
add
mov
sub
mov
jmp
and
mov
sub
cld
shr
jmp
nop
test
jmp
lds
jo
sub
add
cwtl
pop
nop
nop
nop
nop
nop
jle
mov
xchg
nop
nop
nop
nop
nop
ror
shr
inc
mov
movzwl
jmp
loop
addl
sub
or
add
mov
mov
nop
nop
nop
nop
nop
and
mov
cmp
push
pop
jne
and
nop
add
cld
add
cld
add
xchg
pushl
or
ror
add
pop
addl
mov
nop
nop
nop
nop
nop
decl
jmp
mov
jne
add
mov
cmpl
nop
nop
nop
nop
nop
nop
jne
mov
xchg
test
jmp
xor
jg
je
add
cld
cmpl
nop
nop
nop
nop
nop
nop
je
jmp
xor
mov
sub
or
inc
mov
add
mov
nop
nop
nop
nop
nop
push
mov
push
xor
mov
and
or
push
mov
xor
rol
push
and
ror
inc
pop
or
and
or
dec
test
jne
pop
pop
call
cmp
mov
mov
jmp
dec
lret
mov
nop
je
xor
mov
test
jmp
xor
nop
nop
nop
nop
nop
jne
and
mov
mov
or
mov
nop
nop
nop
nop
nop
shr
mov
mov
sub
mov
add
mov
shl
mov
nop
nop
nop
nop
nop
add
cld
test
jmp
dec
jecxz
xchg
je
jmp
shl
rol
shr
add
or
mov
test
jmp
nop
nop
nop
nop
nop
nop
jns
movzwl
jmp
pusha
pop
jb
or
add
add
xchg
add
cld
push
nop
nop
nop
nop
nop
nop
pushl
xchg
call
add
push
pop
mov
mov
xor
mov
add
mov
test
jmp
dec
pop
or
jne
add
cld
cmpl
nop
nop
nop
nop
nop
nop
jne
mov
jmp
andl
mov
inc
xor
mov
rol
mov
mov
mov
nop
nop
nop
nop
nop
shl
mov
rol
xor
sub
mov
mov
dec
sub
xor
pop
xor
pop
nop
nop
nop
nop
nop
or
xor
add
pop
mov
nop
nop
nop
nop
nop
nop
cmp
xchg
jne
push
and
pop
add
add
add
mov
mov
mov
mov
mov
add
mov
leave
jmp
ret
jmp
xchg
jl
pop
sbb
nop
nop
nop
nop
nop
cwtl
xor
add
xor
add
xor
add
add
call
xor
add
xor
add
add
add
add
stos
add
test
add
mov
add
loopne
add
nop
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
pusha
xor
add
add
mov
add
cltd
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
add
test
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
and
add
aas
xor
add
pop
xor
add
jns
add
test
add
add
add
mov
add
shll
add
xor
add
clc
xor
add
adc
add
sbb
add
sub
add
xor
add
push
add
pop
add
jo
add
jg
add
nop
add
popf
add
add
add
mov
add
add
add
out
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
pusha
xor
add
add
mov
add
cltd
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
add
test
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
and
add
aas
xor
add
pop
xor
add
jns
add
test
add
add
add
mov
add
shll
add
xor
add
clc
xor
add
adc
add
sbb
add
sub
add
xor
add
push
add
pop
add
jo
add
jg
add
nop
add
popf
add
add
add
mov
add
add
add
out
add
add
add
imul
gs
xor
cs
insb
add
add
add
gs
inc
imul
js
je
jb
arpl
jae
add
inc
imul
add
add
outsb
fs
imul
gs
add
add
gs
imul
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
jne
jb
outsb
je
push
dec
add
add
je
imul
add
inc
gs
imul
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
inc
gs
outsl
fs
gs
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
fs
imul
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
insb
jae
jb
jo
outsb
add
add
jb
outsb
add
add
insb
je
inc
jns
gs
outsl
push
imul
add
push
gs
fs
imul
je
outsb
fs
inc
imul
je
imul
gs
add
push
outsb
push
gs
js
gs
imul
gs
add
push
imul
insb
insb
outsl
arpl
add
push
imul
jb
add
add
jb
jne
insb
push
jb
je
arpl
add
fs
push
dec
jne
je
inc
jns
add
add
imul
add
jne
gs
xor
fs
insb
add
add
add
je
imul
add
add
imul
jae
addr16
add
add
jae
dec
gs
popa
addr16
add
add
jae
push
jne
je
gs
popa
add
add
imul
popa
jae
inc
add
add
insb
gs
jae
inc
popa
jo
jne
add
add
insb
gs
jae
inc
inc
add
add
outsb
fs
gs
popa
addr16
add
add
je
jne
jae
jb
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
outsb
jne
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
inc
add
add
je
jb
jo
add
add
je
arpl
insb
insb
push
outsl
jae
add
push
gs
arpl
insb
insb
push
popa
outsb
add
add
je
jns
inc
outsl
insb
outsl
jb
add
add
je
imul
push
gs
imul
outsb
addr16
add
add
je
imul
jae
add
imul
insb
add
add
add
gs
dec
bound
arpl
add
je
gs
arpl
popa
jo
add
add
je
imul
inc
gs
je
arpl
bound
arpl
add
jbe
push
outsl
inc
js
add
push
arpl
insb
add
add
jae
outsl
jb
inc
inc
add
add
jbe
inc
inc
add
add
insb
arpl
push
arpl
add
je
imul
outsl
jb
add
push
gs
imul
add
add
je
jb
jae
dec
jb
inc
js
add
push
gs
imul
push
gs
je
gs
push
outsl
fs
add
je
gs
inc
outsl
insb
outsl
jb
add
push
gs
imul
addr16
js
add
push
je
gs
push
add
push
gs
dec
jne
inc
add
add
gs
insb
xor
cs
insb
add
add
add
push
outsb
jb
imul
jb
gs
add
push
push
js
arpl
gs
add
add
insl
fs
xor
cs
insb
add
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
add
adc
add
add
sbb
out
sub
sahf
popf
inc
shlb
shll
fidivl
cmp
in
pushf
adc
or
cmp
add
popf
jae
lret
mov
xor
cmp
or
add
sub
xor
aaa
inc
aaa
pop
xor
jbe
xorl
ss
ss
xchg
cmpsl
ss
xor
aaa
cli
aaa
mov
cmp
aas
out
aas
nop
aaa
mov
xor
xor
xor
xor
xor
ss
cmp
pusha
cmp
fidivrs
add
mov
add
add
xor
xor
pop
xor
xchg
xor
xor
xchg
xor
xor
xor
xor
xor
data16
or
pop
test
inc
mov
pop
lea
push
sbb
clc
mov
mov
bound
aas
cmp
and
xchg
pop
mov
movsb
push
push
jbe
xor
push
idivl
mov
add
push
inc
or
lea
add
add
ja
jbe
pop
or
mov
adc
push
outsb
cmp
jg
pextrw
mov
inc
inc
in
xor
add
mov
movsl
xchg
mov
lods
in
in
mov
pusha
pop
test
test
xchg
imul
jae
fidivs
mov
loope
andb
sub
or
aaa
inc
clc
cwtl
xchg
push
mov
fs
repz
pop
pop
loope
or
add
pop
add
jmp
imul
lret
pop
dec
mov
ljmp
test
clc
sub
xchg
shll
sub
sbb
lds
lcall
imull
cmpl
adc
fdiv
loop
xchg
inc
xchg
mov
mov
sbb
call
insb
cmp
adc
push
je
outsb
inc
dec
or
les
adc
xchg
jae
sub
stos
fcomps
inc
loopne
jb
and
enter
dec
push
repz
cmp
mov
leave
sbb
int3
test
xchg
dec
mov
dec
aad
pop
push
call
cld
pop
mov
ds
mov
sarb
mov
jg
push
js
push
sbb
iret
dec
xor
std
repz
hlt
popa
push
addr16
sub
out
cmpsl
or
inc
lock
pop
pop
mov
dec
in
inc
fwait
or
jae
nop
ds
pop
dec
cmp
imul
mov
pop
cmp
inc
sbb
cmpsl
imul
jb
testl
pusha
jp
fildl
push
xchg
divl
in
and
icebp
jg
lcallw
fstpl
test
outsl
lret
cld
data16
sbb
inc
call
mov
sub
cmp
data16
mov
mov
and
test
push
je
aam
sub
add
and
lock
and
in
testb
shlb
sbb
jne
jge
mov
pop
movsl
sbb
mov
xchg
inc
inc
ja
sbb
sbb
sbb
movsb
adc
fcmove
stos
jo
xchg
int
pop
in
repz
bound
mov
ja
cmp
mov
rorl
mov
bound
mov
out
sarl
push
pop
cs
jle
adc
mov
mov
mov
mov
xchg
push
inc
mov
cld
dec
outsl
outsl
pusha
push
sahf
lds
push
cwtl
push
sti
ficomps
mov
movsl
inc
popf
jmp
out
repnz
sub
xchg
push
fdiv
movups
fs
hlt
mov
or
rorb
lcall
mov
les
or
push
push
mov
mov
mov
jno
fsubs
adc
mov
out
test
pop
movsb
jg
and
sbb
std
cmp
out
fdivs
inc
mov
inc
push
mov
dec
and
cmc
or
xor
xchg
xchg
in
push
out
bound
stos
shr
ret
inc
mov
test
push
or
dec
cmpsl
adc
inc
aam
or
push
sbbl
mov
mov
mov
icebp
mov
inc
push
push
mov
or
or
in
mov
cmp
insl
call
mov
adc
push
int3
push
mov
fwait
sub
test
pop
aas
aam
repz
leave
insl
std
pop
push
pushf
cmpsl
sub
push
dec
imul
mov
out
cmp
nop
out
cmp
cmp
xlat
jae
fcomps
add
adc
int
insb
cmpsb
push
subl
loopne
cmp
cli
fdivl
and
adc
stos
pop
shll
cmp
addr16
nop
iret
int
loop
sbb
and
sub
call
ss
aas
sbb
mov
push
loopne
in
or
scas
push
mov
rolb
jmp
fsubl
jg
call
nop
arpl
pop
js
js
xor
and
movsb
and
cli
mov
ficoml
xchg
cmp
mov
inc
push
mov
sbb
xor
sub
repz
iret
jbe
sub
leave
fcomps
mov
xchg
and
xor
cmpsl
leave
cmp
dec
fsubl
mov
inc
pop
dec
ret
rcll
and
and
outsl
jnp
rolb
ja
xor
push
pusha
loopne
mov
pop
pop
fdivs
in
or
jb
int3
gs
int3
mov
and
push
pop
inc
jmp
lods
adc
add
sbb
sbb
mov
test
and
rcll
lock
int
add
sbb
dec
sub
repz
into
out
cmp
push
mov
push
gs
cmp
mov
xchg
sbb
outsl
fsubrs
lea
lret
push
fcmove
pop
aam
cmp
mov
sbb
sahf
and
push
lods
je
mov
inc
movsl
rcll
dec
sub
xchg
mov
xchg
lret
jns
sbb
outsl
hlt
std
mov
or
and
loope
mov
xor
inc
sub
jbe
push
enter
ret
push
inc
inc
xchg
mov
adc
aam
dec
sbb
fidivrs
popa
int3
xchg
mov
test
movsb
andb
xchg
inc
sahf
dec
lret
test
push
lds
mov
cli
or
dec
scas
ds
insb
arpl
fwait
movsb
sbb
cmpsb
ret
movsb
icebp
aaa
or
pop
cmpsl
test
cmc
loope
jae
cmp
jnp
xchg
scas
int
iret
lock
xchg
test
xor
out
lret
xchg
lcall
xlat
cmc
jecxz
sbb
movsl
push
pop
mov
scas
ja
lahf
dec
push
dec
insl
add
int3
cmp
sahf
cmp
mov
inc
sub
fdivl
rcrl
push
xor
mov
mov
pop
insl
mov
inc
push
insb
inc
ret
shll
aas
movsb
xchg
jmp
xchg
jp
mov
mov
jo
cmp
push
cld
iret
dec
stos
faddl
popf
jge
sub
sbb
mov
mov
jp
lcall
bnd
ds
mov
cs
mov
addr16
negl
push
xchg
lcall
push
movsl
movsb
mov
xchg
xlat
int
movsb
andb
cmp
fistpl
lea
sub
push
in
mov
sbb
insb
imul
xchg
mov
pop
pop
and
in
jne
xchg
sub
adc
mov
or
jmp
lds
repz
pop
pushf
add
cs
mov
push
test
in
bound
or
fmul
addr16
or
test
or
outsl
imul
dec
pop
idivl
xchg
mov
inc
mov
mov
pop
push
lret
call
ret
sti
push
sbb
mov
xor
sbb
cmp
pop
outsl
jns
out
and
mov
mov
sub
pop
das
aas
ret
jae
jo
fnstenv
loopne
mov
out
in
cs
pop
loope
test
daa
mov
mov
imul
mov
or
jne
bound
push
orl
jecxz
pop
js
xchg
add
lret
xchg
add
pop
stc
jbe
sub
data16
adc
push
ds
push
fldcw
jp
daa
jg
cld
icebp
loope
out
scas
hlt
sarl
pushl
fs
xor
pop
jecxz
or
sub
add
mov
ljmp
push
sahf
aam
aaa
ja
pop
data16
dec
pusha
je
ss
dec
inc
ljmp
aam
sbb
movsb
or
rorl
popa
adc
xor
or
push
icebp
xor
orl
test
mov
arpl
daa
imul
pop
call
into
insb
stos
adc
sub
shr
or
ss
dec
adc
ftst
test
sbb
push
ret
ja,pt
xorl
inc
stos
mov
xchg
and
add
lods
mov
lret
nop
cli
mov
and
mov
push
xchg
sbb
movsl
add
inc
inc
pop
mov
aas
int
in
das
cmp
lds
daa
mov
cmp
or
outsl
lock
xor
fstl
add
mov
call
outsb
or
jo
dec
add
movsb
jecxz
pop
jne
mov
mov
loope
adc
cmpb
xor
pusha
mov
cld
push
jo
rcrl
std
out
repz
fs
jbe
icebp
fcomps
mov
push
dec
clc
fs
push
outsb
arpl
mov
pop
mov
cmc
bound
popf
inc
mov
mov
jnp
and
mov
movsl
jno
jno
sbb
lcall
add
push
daa
dec
data16
daa
mov
or
sbb
std
sub
jno
add
sbb
pop
push
push
lret
repz
dec
ds
repnz
popf
out
mov
mov
sub
leave
lock
in
jb
mov
xor
in
loope
bound
cwtl
lret
shll
lahf
add
sbb
push
dec
xchg
subb
mov
xchg
jno
xchg
adc
sahf
sub
mov
dec
jcxz
movsl
sub
jnp
lret
sbb
mov
mov
es
cld
xchg
push
aas
jmp
wrmsr
cmc
or
fucomi
cmc
add
sub
cwtl
adc
add
lret
fmull
jmp
adc
cmp
pop
stos
sti
int3
mov
sarb
add
pushf
mov
in
or
bound
mov
or
ficomps
push
mov
fwait
and
dec
sub
jnp
enter
repz
pusha
sahf
cmpsb
xchg
jle
loop
mov
xchg
outsb
xchg
cmp
dec
mov
test
fidivrs
lods
pushf
cltd
out
xorl
mov
add
or
pop
mov
fdivrs
jp
and
orl
mov
adc
clc
push
adc
imul
nop
push
in
cmp
roll
aam
mov
dec
aam
popa
std
adc
cmp
pop
or
mov
push
push
push
jno
fidivl
ss
idivl
imul
pushf
dec
nop
sahf
in
mov
mov
fnstsw
rol
xor
stos
test
cmp
lcall
pop
dec
lahf
mov
addr16
mov
leave
sub
test
lods
shrb
or
add
je
aam
jge
sub
imul
pop
mov
hlt
add
dec
cmp
fs
js
or
adc
fdivrl
subb
les
arpl
lea
sbb
pusha
in
in
jmp
stc
adc
pop
popf
movsl
dec
jo
fwait
cmp
mov
lds
sti
sub
push
sti
call
inc
in
xor
popf
ss
mov
adc
lahf
sahf
je
inc
clc
cli
push
fcmovnb
sub
outsl
mov
movsb
popf
outsl
xchg
hlt
add
add
fidivrs
mov
out
movsl
and
out
and
inc
pop
pushf
imul
mov
inc
push
adc
je
out
mov
mov
fistpl
scas
mov
cmpsl
dec
sub
arpl
adc
std
in
mov
mov
adc
jge
cmp
lcall
int
add
xor
jmp
nop
inc
jnp
adc
stos
jg
out
push
mov
push
add
in
mov
out
fistpll
push
push
ret
ret
loop
and
in
jne
pop
lcall
rcrl
lods
imul
stos
jmp
pop
dec
fildl
cld
mov
fldenv
mov
dec
push
xchg
pop
dec
push
push
push
or
call
adc
fimull
push
lock
repz
pop
cmpsb
cli
cs
iret
pushf
les
lea
xchg
xorb
ret
push
sub
lds
xchg
push
addr16
and
fistl
pop
scas
ds
ds
std
data16
icebp
loop
aas
mov
and
jne
fildll
inc
push
pop
pop
icebp
xor
js
scas
or
adcb
or
lea
or
jmp
xchg
and
add
out
test
cmpsb
pop
push
xchg
mov
xchg
pop
inc
inc
aad
clc
pop
pop
nop
jae
rol
iret
pop
inc
mov
or
loop
cmp
add
imul
mov
or
fisubrs
or
pushf
dec
std
add
xor
push
pop
fsub
aas
sarb
pop
push
push
add
pop
scas
inc
stos
push
mov
cmp
sub
push
and
mov
idivb
mov
imul
jecxz
jecxz
sbb
sbb
mov
leave
xor
pop
adc
mull
cmp
xchg
pop
and
aad
mov
arpl
push
pop
ret
test
sub
jg
inc
jecxz
cli
pop
sti
fcmovnbe
gs
pop
arpl
cmp
in
cmp
xor
lock
pop
addb
mov
jbe
movsb
sbb
ss
push
gs
dec
leave
repz
sub
jns
out
mov
insb
mov
or
sarl
mov
imul
adc
aam
lahf
sti
repnz
outsl
cmp
nop
mov
mov
add
push
pop
jge
adc
dec
pop
arpl
fisubl
psrlq
ljmp
mov
inc
imul
int3
lods
movsb
jl
sub
outsb
and
shl
mov
mov
wrmsr
cmp
mov
int
xor
cmp
xchg
push
ss
xchg
mov
jg
clc
push
mov
dec
xchg
inc
xchg
push
jecxz
int
push
aas
test
lea
dec
mov
mov
and
fiaddl
mov
loope
stos
test
rolb
dec
sti
cmc
adc
dec
lret
rorb
mov
pushf
nop
dec
pop
mov
cmp
movsb
add
xchg
or
int3
pop
jp
imul
imul
xor
aam
or
mov
add
rcrb
and
je
enter
pop
or
xor
sub
xor
and
pop
rorb
sub
popf
push
clc
mov
cs
movsb
insb
outsb
movsl
pop
pop
jecxz
test
mov
mov
xor
xlat
ficoml
inc
mov
adcl
outsb
pop
ja
xchg
xor
js
ds
int3
lret
pop
rorb
pop
mov
xor
or
cld
aaa
mov
cltd
xchg
pop
int3
pop
mov
nop
xchg
jmp
pop
push
jne
dec
bound
fs
hlt
insb
xchg
mov
push
xchg
shrl
mov
or
jl
adc
fstp
mov
andb
dec
idiv
sarl
lcall
ret
mov
mov
scas
mov
bound
pop
lds
xchg
push
push
pop
adc
mov
mov
push
or
add
mov
out
mov
das
jge
jmp
aas
lds
loope
call
push
mov
inc
add
add
call
or
aas
rcrb
pop
daa
jecxz
gs
and
pop
ljmp
shr
fs
pop
fimull
in
add
cwtl
push
add
jmp
out
jecxz
add
mov
aad
add
in
jge
shlb
and
cmc
mov
cld
mov
stos
out
fidivrl
adc
mov
sbb
pop
mov
fldt
int
lret
inc
cli
dec
mov
pop
xchg
mov
dec
insl
jmp
push
gs
push
inc
loope
in
push
lods
sbb
sbb
mov
stc
sbb
or
jl
cmp
add
test
repz
xor
push
sbb
out
cmpsb
pop
sbb
popf
pop
notb
cmpsb
or
inc
mov
lods
mov
pop
mulb
or
out
jg
in
test
or
cmp
and
add
cmp
xchg
and
aas
testb
outsl
inc
mov
aam
add
gs
mov
adc
sbb
fcmovbe
es
shlb
cmp
cli
leave
mov
dec
js
push
adc
pop
lcall
push
lods
cmpsl
test
nop
dec
repnz
fidivl
pop
inc
and
adc
movsb
ljmp
mov
xor
in
daa
xlat
sub
jnp
xchg
sub
pop
push
dec
sub
mov
test
cmp
loopne
aad
out
sbb
jbe
cs
outsb
mov
fcompl
aam
mov
push
sbb
adc
imul
hlt
iret
in
sbb
faddl
add
stos
addr16
or
push
xchg
pop
cmpl
insl
cld
rcrb
xor
pop
inc
jnp
ds
dec
mov
repz
fcmovnbe
fldt
dec
add
es
bound
divb
pop
xchg
xlat
out
sbb
imul
hlt
icebp
mov
es
into
pmullw
sub
in
fbstp
cmp
mov
es
scas
lcall
aad
mov
popa
and
int3
negb
pushfw
faddl
arpl
stos
cmpsb
jae
data16
mov
add
imul
add
bound
movsl
aas
test
jns
push
jno
mov
mov
dec
into
out
sbb
cmp
push
and
loop
push
inc
sbb
xchg
std
push
test
fbstp
sbb
pop
gs
xchg
and
lahf
adc
outsl
les
jmp
out
jg
in
adc
gs
out
adc
fisttps
mov
not
clc
in
shrb
jne
aas
cmp
xchg
into
sbb
xchg
stos
pushf
dec
inc
lret
shr
mov
je
sbb
xor
adc
push
adc
mov
jle
andl
jns
arpl
dec
xchg
jno
mov
loopne
mov
in
jo
cmp
aaa
sub
pop
mov
add
xor
jb
jmp
out
xchg
pop
loop
jb
cltd
pusha
pop
pop
sarl
push
stos
aam
pop
xchg
es
out
mov
jecxz
mov
outsb
or
das
shll
inc
jge
add
repz
cmp
push
sti
fcomps
jmp
cmc
mov
inc
sbb
mov
pop
popa
movsb
repz
out
dec
cli
push
pop
jbe
lret
inc
in
sbbb
ljmp
sbb
adc
mov
incb
pop
cltd
add
mov
imul
bound
push
mov
inc
or
dec
lea
dec
mov
xchg
dec
movsb
rorb
ljmp
inc
dec
pop
test
gs
ret
mov
out
add
icebp
pop
nop
mov
sti
ja
fldt
sbb
cmp
push
xchg
in
aaa
and
fisubl
aad
out
dec
shll
cli
inc
je
push
push
loop
or
inc
test
jnp
cmpb
push
in
jnp
mov
loopne
inc
pushf
add
cmp
stos
out
sbbl
or
jae
inc
push
fnstcw
mov
push
fldenv
into
dec
add
sbbb
xchg
fwait
mov
cmp
mov
mov
adc
fwait
lods
cmp
and
or
sti
xor
in
pop
cmp
rclb
push
jne
loop
push
inc
popa
sbb
movsl
jl
mov
rclb
popf
cs
xchg
pop
adc
out
fstps
insl
add
js
es
je
mul
nop
imul
aad
lock
stc
push
mov
ret
mov
mov
pop
es
inc
adc
inc
mov
cmp
pop
dec
inc
push
or
cli
cmc
mov
xorb
nop
push
mov
test
dec
mov
dec
test
mov
or
xchg
into
xchg
inc
lahf
pop
pop
pop
jb
js
push
sti
adc
fnstcw
fimull
shl
out
cld
rolb
aad
icebp
int
call
push
arpl
fldt
mov
push
pop
jecxz
cltd
xor
push
shl
pop
push
pop
int
stc
or
adc
mov
add
inc
inc
xchg
icebp
xorl
es
xchg
pop
movsb
inc
jge
xchg
mov
pusha
dec
outsl
and
sub
push
and
mov
pop
and
xchg
sub
jns
adc
cmp
bswap
pop
and
fwait
mov
mov
mov
pop
adc
popf
lret
stos
push
sti
dec
loopne
imul
inc
sahf
sbb
and
aas
imul
out
stos
push
xorps
jo
jl
and
push
xchg
jne
out
iret
insl
outsl
cmpsl
jmp
ffree
push
jecxz
bound
inc
mov
bswap
loope
dec
fisubs
popa
mov
cmpsl
push
lods
push
mov
out
jl
mov
cmova
xchg
rcrb
push
dec
or
pop
clc
sbb
add
rcr
iret
mov
adc
lods
adc
and
insb
test
lods
les
ljmp
pop
mov
cmp
jmp
mov
mov
sub
into
add
int
mov
cmp
js
xchg
xchg
xchg
arpl
clc
cli
sbb
mov
and
dec
cwtl
cmpl
push
xor
scas
leave
int
or
out
jbe
test
mov
popl
xchg
jp
mov
shrl
xor
sbb
pop
cmpsb
lds
and
cmp
sub
adc
add
dec
mov
movb
jecxz
test
call
xlat
pop
call
fwait
enter
mov
mov
lahf
and
jno
jle
push
into
daa
jge
xchg
clc
imul
inc
popf
xlat
fdiv
fcomip
xor
sti
adcb
pop
adc
xorb
test
cwtl
sbb
divl
nop
ds
int3
in
lret
pop
xor
mov
iret
loopne
push
lcall
fisubrs
or
and
in
incl
insl
dec
pop
outsl
popf
adc
inc
jb
test
dec
mov
frstor
fs
mov
pop
jmp
jb
xorl
bound
push
dec
or
leave
enter
xor
lods
mov
filds
adc
lods
cmp
pop
jp
rcl
cmp
and
pop
lcall
loope
pop
jnp
cmpl
lcall
or
cmp
mov
xchg
cli
mov
into
cltd
out
clc
add
add
add
jae
loopne
jp
dec
or
stos
out
add
jge
bound
dec
popf
dec
jp
outsb
add
mov
lret
bnd
popf
in
mov
dec
int
out
and
cmp
xor
sub
ljmp
mov
imul
lret
nop
mov
jbe
dec
in
scas
lret
lahf
cmpsb
movsl
jle
leave
dec
cmp
jg
push
xchg
es
arpl
adc
leave
loop
sahf
push
cwtl
or
dec
mov
lods
pop
mov
out
jns
jae
xlat
jno
mov
sbb
fnstcw
shrb
lret
mov
pop
sti
jecxz
dec
push
dec
lcall
jp
notb
mov
mov
das
pop
aad
js
xlat
sub
clc
push
push
stc
out
cmp
push
shrl
lea
sbb
pop
jno
not
mov
lods
push
mov
xchg
mov
hlt
mov
std
mov
stc
cmc
push
lods
cmp
adc
adc
cld
stos
add
or
lds
inc
jo
jnp
sbb
jne
pop
push
repnz
add
in
cmp
push
xchg
xor
fisubrs
inc
mov
xchg
xor
jae
adc
sbb
js
orb
mov
fisttpll
xor
ljmp
mov
inc
mov
scas
sbb
pop
fstpl
test
adc
faddp
sbb
cmpsl
mov
or
inc
and
shll
add
dec
xchg
mull
cmp
jl
enter
jp
mov
sbb
in
mov
mov
outsb
pop
jecxz
or
push
jo
into
into
dec
cmpsb
iret
iret
stos
shll
rclb
mov
pop
mov
inc
jnp
frstor
inc
or
cmpsl
cld
clc
shll
sbb
push
cld
mov
mov
or
shlb
adc
xchg
fists
rcll
ret
loop
cltd
mov
inc
fbstp
in
jmp
int
sub
das
stos
dec
rol
cmp
dec
lods
imul
addr16
and
nop
dec
add
cmp
add
jb
jbe
jae
inc
enter
pop
pop
xlat
leave
outsl
mov
popa
je
push
add
scas
mov
cmp
jmp
adc
cmp
pop
xchg
lds
jmp
add
and
xchg
fldcw
aad
sbb
adc
sbb
std
lods
outsb
push
push
sahf
add
add
cs
mov
mov
ss
sbb
mov
dec
xchg
shlb
movsb
adc
sarb
sahf
or
test
movsw
cmp
push
loopne
std
or
nop
sub
xchg
jae
push
pop
pop
enter
ss
xor
cmp
repnz
arpl
scas
pushf
stos
jg
and
add
mov
sti
in
mov
push
dec
push
sahf
mov
out
movsb
dec
pop
xchg
cs
stos
call
cld
ja,pn
arpl
and
xor
inc
mov
jle
lret
push
pop
fwait
xor
aam
sub
and
das
jo
xchg
dec
ljmp
movhps
jmp
movsb
mov
or
pop
subl
cwtl
test
aaa
cld
test
and
insl
popa
push
adc
in
adc
icebp
loopne
fmul
sub
testl
lock
pushf
or
imul
pop
inc
dec
mov
pop
or
jg
sub
sub
mov
nop
add
lods
or
in
cmc
daa
outsb
mov
in
ret
jbe
js
and
fisubl
xchg
lods
stos
nop
mov
inc
mov
xlat
or
pushf
fldl2t
pop
xor
nop
fistps
out
sub
imul
into
cltd
and
lods
jp
add
pop
sti
pop
jp
jmp
xor
scas
jmp
xor
movsb
test
clc
and
roll
push
xchg
sbb
push
lret
jno
mov
movsb
xlat
jae
je
in
repz
mov
xor
gs
pop
mov
cmp
mov
fisubrs
cmp
inc
or
and
addl
sbb
testb
mov
in
fwait
out
adc
dec
out
mov
outsb
xor
popl
cmp
sti
push
imul
pop
outsl
pop
fcmovb
out
ror
pushf
lret
cmpsl
fsubs
in
xchg
pop
sti
insb
clc
sahf
xchg
fwait
sbb
inc
dec
and
aaa
push
arpl
cld
ljmp
xor
sbb
mov
jge
test
xchg
mov
cmc
jnp
mov
sub
lret
sti
lods
mov
dec
outsl
ja
fldenv
fwait
cmp
stos
inc
outsb
push
cwtl
imul
mov
add
arpl
mov
test
cmp
cwtl
push
cltd
and
pop
mov
dec
repnz
xor
xor
or
push
push
xor
inc
jnp
rcll
cmp
xchg
add
jge
popl
xor
mov
ret
fnsave
std
clc
mov
lret
add
jo
mov
cwtl
dec
ja
lcall
inc
mov
push
push
adc
jp
sbbb
xor
mov
sub
rcll
pop
adc
fstl
push
test
and
into
jae
xor
sti
add
xor
ds
push
stc
fcmovb
jno
push
push
dec
fistpl
push
data16
and
pop
add
xor
mov
ds
ss
dec
cmp
xchg
sub
in
or
sahf
adc
cmp
fs
mov
sub
dec
or
inc
in
cmp
shll
fcmovne
cmpl
lock
push
mov
and
lds
adc
cmp
shlb
out
mov
int
pop
adcb
inc
gs
jno
push
cmpsb
jmp
sbb
out
loopne
in
push
dec
inc
inc
scas
or
out
sub
mov
jnp
test
out
jnp
fs
inc
fmull
dec
and
add
into
loopne
cmp
push
adc
cmpsb
xchg
add
addb
xchg
lret
daa
cltd
push
mov
mov
add
inc
dec
lcall
pushf
jp
cmpsl
jg
int
xchg
outsl
xlat
loopne
sbb
mov
jecxz
xor
xor
pop
xor
andl
and
cwtd
testl
das
cli
aas
push
mov
adc
cmp
movsl
cli
xchg
xchg
push
adc
fisubrs
sub
dec
repz
repz
icebp
sbb
cmpb
pop
aad
xor
and
test
jmp
push
out
dec
adc
pusha
inc
aad
jb
int
decl
lcall
imul
jl
data16
jg
jbe
xor
and
iret
jb
loope
adc
sub
jb
fdivl
orl
dec
pop
xor
sub
push
sbb
insb
jns
enter
xor
fcompl
fwait
xor
imul
les
sub
push
add
stc
xchg
out
add
ret
fmuls
ja
daa
pop
mov
mov
jecxz
and
dec
sub
dec
in
mov
and
mov
mov
jmp
je
decl
and
adcb
mov
loopne
cmp
dec
push
pop
adc
sbb
fdivrp
pop
jl
push
or
adc
pusha
jae
pop
stos
insb
xlat
cmp
cld
imul
xor
xor
and
cltd
add
mov
mov
push
icebp
dec
test
mov
pop
test
adcl
ja
js
dec
outsl
xor
xchg
aam
xchg
jno
add
dec
or
jo
push
mov
jmp
in
mov
insl
repnz
lcall
movsl
aam
idivb
rcr
lods
adc
push
push
push
pop
push
ljmp
mov
daa
mov
and
orb
je
sub
cmp
and
test
test
inc
jnp
sub
in
movsl
pop
aad
dec
cmp
xor
inc
xor
sahf
js
call
rep
icebp
cltd
dec
fistpll
mov
aas
aas
jle
fists
insl
pop
adc
push
outsb
aam
and
fmuls
or
push
mov
or
fwait
xrelease
or
cmp
pop
shll
and
shrl
in
in
push
stos
lods
lea
cmp
adc
inc
xchg
lahf
jb
hlt
stc
cmp
icebp
rolb
xor
call
dec
mov
cmp
adc
push
aas
cmpsb
xor
movsl
enter
js
ret
jl
add
add
movsb
pop
scas
xchg
add
cmp
test
push
adc
and
lds
mov
aaa
lds
jns
cmpsb
fs
ljmp
rolb
test
and
sbb
add
mov
push
sarl
adc
sahf
lds
cmp
in
cmp
fiaddl
pop
test
lret
ljmp
lods
aas
or
dec
mov
pop
sti
loop
xchg
out
adc
push
xchg
sahf
xchg
iret
cmp
stc
adc
add
in
pop
mov
imul
and
jne
nop
inc
xchg
int3
fimull
jp
mov
movsl
adc
adc
jne
icebp
add
loope
filds
popa
wrmsr
add
imul
xchg
and
cmc
ret
xchg
mov
adc
loope
ljmp
mov
mov
fadds
xor
fnstenv
loope
push
mov
sub
loop
frstpm(287
lods
scas
push
neg
js
arpl
loopne
xchg
scas
xor
rclb
insb
out
add
cmp
jno
imul
sbb
push
cwtl
mov
daa
shll
mov
adc
incb
pop
test
aas
fistpll
lea
xor
push
das
add
inc
push
pop
cmc
aam
inc
out
seto
or
mov
fstpt
pop
sub
inc
lret
test
les
push
pop
inc
and
pop
push
stos
cmpl
lods
push
in
data16
mov
xchg
and
mov
inc
adc
or
or
outsl
outsl
or
push
cmp
stos
adc
or
mov
push
stos
sahf
push
pop
sub
rcrb
out
mov
fnstcw
lret
jno
scas
mov
scas
lds
cwtl
repz
sbb
mov
sub
and
int
stc
mov
data16
jp
stc
mov
ret
shr
cmp
mov
xchg
add
scas
mov
popf
cmp
mov
pop
enter
andl
add
push
sbb
mov
orb
jge
adc
adc
jp
ja
stc
lret
stos
movsl
mov
adcl
jno
mov
daa
xchg
rorb
cmpsb
dec
dec
jl
out
dec
sti
mov
js,pt
jg
rorl
lret
test
stos
jo
jle
nop
sbb
cmp
lret
xchg
dec
mov
daa
or
aaa
dec
add
shl
insl
mov
pushl
sbb
adc
jb
add
aad
mov
cmpsb
inc
lock
push
pop
sbb
mov
jp
mov
ja
int
icebp
mov
push
jae
lahf
cmp
add
mov
test
fcom
outsb
vshufpd
xchg
fcom
cltd
fwait
jno
add
cmp
stos
adc
lods
jns
cmpsl
mov
int
shrb
rorb
pop
xchg
fimull
jmp
movl
addb
lret
pop
int
mov
stos
jo
pusha
mov
sarl
outsl
out
in
push
fisubrl
icebp
fwait
or
bound
loop
mov
nop
jb
pop
adc
lcall
jmp
call
lods
push
xchg
ror
out
cmp
sbb
jno
mov
cmp
into
mov
les
fcmovnb
ja
push
cmp
pop
jns
xchg
jl
pop
lds
das
mov
push
mov
repz
jl
push
pop
add
add
daa
inc
loopne
mov
cmpsl
jo
stc
pop
lods
add
sti
push
mov
adc
out
sub
cmp
mov
mov
fsts
and
repz
jge
add
popa
jmp
push
addr16
mov
test
outsl
push
jne
or
sbb
sarl
dec
pop
mov
gs
pop
faddp
jno
pop
lea
push
push
orb
inc
jno
mov
and
push
mov
mov
mov
lods
stc
test
mov
adc
jb
jbe
sub
ret
loopne
testb
xor
popf
roll
pushf
mov
stc
xor
sbb
mov
flds
add
adc
xchg
in
xchg
cmc
mov
les
insl
arpl
inc
dec
movsb
outsl
mov
push
outsl
jne
icebp
mov
shlb
cli
fistpl
push
lock
rcll
push
or
call
cld
dec
divb
loopne
pop
fdivl
xchg
xor
jg
cwtl
outsb
push
sub
mov
negb
adc
sti
xor
shrl
lock
and
ret
nop
sar
sbb
pop
ss
mov
jle
je
jb
scas
pusha
shll
sahf
xor
mov
leave
mov
imul
add
mov
or
and
ds
in
rcll
push
inc
xor
stos
pop
mov
cmpl
dec
aam
pushf
cmp
shlb
cltd
popa
sbbb
xchg
or
rcrl
inc
mov
pop
outsl
cmp
dec
jae
popf
mov
sub
push
cmpsb
mov
in
mov
fwait
adcb
adc
xor
inc
add
pop
.byte
nop
.byte
