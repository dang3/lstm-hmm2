test
sub
push
add
add
add
add
dec
incl
add
roll
inc
mov
dec
call
push
mov
sti
push
decl
in
dec
inc
dec
add
dec
mov
push
xor
ret
mov
add
mov
leave
mov
inc
popa
jb
dec
jns
iret
jmp
add
sub
inc
dec
movl
add
cli
inc
mov
jmp
add
sti
imul
inc
mov
je
dec
push
add
jo
je
push
add
xor
mov
add
add
insb
dec
add
inc
ret
sub
mov
add
jbe
jne
bound
pushl
add
mov
add
mov
stc
test
fbstp
xor
mov
dec
push
imul
std
pushl
dec
push
inc
dec
mov
add
dec
sub
xor
fistpll
lock
mov
mov
ds
fiaddl
inc
xor
inc
add
mov
push
jo
cs
fiaddl
add
mov
mov
push
add
mov
rolb
pop
insl
sbb
mov
mov
xchg
dec
inc
dec
jae
push
pop
jmp
mov
push
sub
or
ja
add
mov
mov
ss
fbstp
aaa
inc
inc
add
and
push
inc
xor
movsb
js
sarl
addr16
sub
jne
dec
mov
outsb
mov
add
push
in
dec
jbe
testb
fmuls
rorb
add
add
push
cld
es
mov
mov
jae
popa
mov
mov
fsubs
inc
push
aaa
xor
push
imul
call
mov
jmp
les
movsb
lret
pop
sbb
push
outsl
jp
jbe
add
pop
lods
push
add
out
dec
sub
mov
mov
mov
shl
das
clc
pop
mov
jmp
fs
push
add
add
cld
push
gs
mov
inc
imul
mov
sub
pop
fiaddl
imul
or
and
repz
dec
or
and
or
popa
dec
lock
push
jae
add
rcll
ja
shr
mov
fmuls
imul
mov
mov
xchg
mov
mov
or
adc
push
rolb
arpl
jno
clc
fsubp
dec
mov
add
sbb
clc
call
cmp
lock
cmp
stos
inc
inc
pop
inc
mov
xor
rcll
push
cmp
cmp
add
aaa
xor
xchg
jmp
pop
xor
leave
add
lcall
xor
in
mov
xchg
jno
jp
gs
xor
mov
jo
lret
ret
jo
fs
jmp
outsb
xchg
ljmp
popf
add
sub
call
xor
inc
dec
mov
add
call
mov
inc
xchg
jmp
ljmp
push
outsl
mov
push
push
popa
dec
inc
mov
mov
cmp
push
fdiv
mov
push
inc
imul
push
inc
pop
fistpll
sbb
mov
fsubrp
dec
jb
mov
fs
aaa
fmul
aam
push
fisttpl
shlb
imul
adc
addr16
mov
lds
in
pushl
dec
pop
xor
inc
in
mov
hlt
loope
ja
mov
nop
dec
jno
mov
adc
mov
jg
jns
dec
outsb
jmp
mov
and
sub
sbb
xor
iret
xor
jne,pt
insb
jb
pop
shll
mov
aaa
push
mov
lock
sub
imul
dec
divl
out
mov
inc
rclb
xor
int
push
add
cmp
mov
jmp
mov
jae
js
cmpsb
testb
outsl
in
mov
push
fidivl
inc
jbe
sub
cmp
mov
je
push
dec
cmp
jmp
push
hlt
popf
clc
xor
scas
stos
jmp
jo
add
dec
inc
or
jbe
dec
push
dec
inc
mov
jl
xor
xchg
fs
or
jne
pop
leave
dec
sbb
mov
push
outsb
inc
pop
xchg
jno
sub
scas
popf
or
inc
dec
inc
fcoms
xchg
mov
adc
xor
mov
push
pop
fdivl
pop
or
jb
gs
outsl
push
outsl
scas
inc
call
insl
iret
xor
js
jo
loopne
add
movsb
add
dec
push
lcall
outsb
dec
fidivs
outsl
push
push
aaa
inc
mov
push
ljmp
ret
pop
push
std
cmc
in
cmpsb
dec
cs
outsl
dec
outsb
sub
movsb
ret
lods
push
mov
push
js
jns
rclb
xchg
add
mov
push
jl
outsl
insl
ret
dec
sbb
xlat
push
mov
loop
or
jle
sub
push
lods
mov
and
divl
or
dec
dec
xor
rcll
dec
mov
mov
dec
loop
xor
data16
dec
jg
int3
add
add
fadd
dec
imul
pop
outsl
aaa
outsl
dec
std
shl
add
dec
je
inc
aaa
add
add
xor
mov
and
aad
inc
fldl
js
push
out
rolb
aaa
push
repz
add
mov
jbe
inc
pop
add
pop
add
mov
fcoml
testb
or
out
sbb
inc
repnz
or
stc
insl
inc
sbb
mov
and
mov
add
push
mov
movsl
inc
inc
repnz
inc
mov
lahf
pop
inc
xchg
inc
xchg
mov
call
and
dec
loopw
pop
jp
sbb
mov
push
pop
pop
cmc
inc
mov
xor
sti
arpl
repz
jnp
fnstenv
mov
test
xor
leave
inc
add
andb
xchg
fwait
ror
push
ret
mov
addl
mov
add
xor
incb
xor
jl
adc
test
ficoml
xchg
adc
adc
sbb
xor
and
add
and
and
mov
bound
adc
cld
sbb
scas
push
and
popl
push
mov
ja
and
dec
xchg
mov
add
imul
loope
cld
adcb
xor
inc
rolb
ja
fs
cmp
sub
or
or
aaa
and
jle
adc
stos
icebp
pop
and
push
das
adc
add
in
xchg
ficoms
push
cmpl
cltd
sub
scas
test
dec
enter
xor
or
xchg
cmp
scas
push
js
dec
fcoms
lods
and
clc
icebp
mov
cmp
cltd
lock
sbb
lea
sub
xchg
dec
push
in
test
stc
add
pop
lcall
f2xm1
ret
jbe
and
adc
and
addr16
scas
repz
mov
sub
dec
fwait
push
inc
inc
pop
xor
in
clc
xchg
mov
jg
pop
mov
push
inc
push
hlt
and
repnz
push
in
add
or
push
mov
iret
dec
rcll
outsl
push
xor
fiaddl
and
and
jae
mov
dec
sbb
stc
fs
call
inc
shll
dec
xor
cmp
mov
addr16
fmul
cld
add
incb
or
cld
mov
adc
or
or
leave
je
scas
mov
add
lds
mov
cmp
sti
dec
push
push
fstps
lea
mov
jg
xor
cltd
ja
sub
pop
js
daa
fmuls
mov
or
rcll
and
pop
lods
iret
adc
add
int
cs
inc
adc
rcr
fiaddl
test
xchg
rorb
mov
mov
stc
add
inc
dec
int3
scas
bound
add
addr16
dec
and
out
adc
cltd
add
pop
add
nop
fwait
pop
mov
cltd
dec
adc
push
popf
or
or
shrb
dec
and
enter
int
dec
mov
xor
cltd
push
or
add
and
inc
xor
cmpsl
fs
xchg
and
lcall
repz
sbb
push
lcall
shr
adcb
fisttpl
cmp
sbb
fistps
or
aas
add
sbb
sub
mov
mov
mov
mov
movb
or
shl
or
nop
lods
aad
insb
test
lock
push
xchg
lahf
and
mov
mov
sbb
dec
sbbl
add
shlb
pop
mov
pop
xchg
jne
adc
or
shll
add
adc
out
xchg
loopne
test
stc
insb
cmp
sub
sbb
nop
arpl
inc
int3
pop
loop
xchg
xchg
jl
mov
add
pop
and
cmp
loop
dec
into
mov
clc
or
cmp
or
inc
out
sti
loope
cmp
jle
add
aam
pop
out
repnz
jo
aad
in
add
add
pop
lcall
test
mov
pop
lahf
sub
xchg
mov
mov
xor
insb
mov
dec
or
lock
inc
repnz
xchg
test
adc
enter
adc
pop
xlat
add
enter
sti
xchg
je
fadd
aam
loop
cs
xor
push
rclb
cmpb
dec
dec
pop
sub
stos
xchg
inc
leave
mov
dec
jo
adc
scas
xor
pop
cmpl
add
xchg
add
and
pusha
inc
out
mov
mov
or
add
xlat
jmp
push
or
inc
add
pop
dec
iret
cmp
aad
call
push
daa
push
jmp
ss
ficoml
enter
or
cmpsb
mov
and
lcall
rorl
mov
add
and
popa
sub
decl
stc
or
test
mov
add
push
pop
out
test
sub
stos
sub
test
test
rclb
loop
addr16
push
dec
inc
inc
pop
push
pop
push
rcrb
or
add
cs
push
es
add
fistpll
pop
out
adcl
and
ja
sbb
add
mov
mov
jp
jno
and
xchg
nop
xor
scas
flds
out
mov
and
enter
or
jns
nop
sarb
mov
xor
jecxz
daa
dec
adc
mov
dec
adc
fwait
pop
repnz
stos
repz
jne
jne
mov
jb
inc
fstpt
sub
lods
fbld
push
jg
cwtl
mov
push
jbe
push
xor
jecxz
sbbb
rorl
mov
jbe
inc
dec
xor
popf
and
xor
pop
dec
dec
inc
xchg
xchg
inc
mov
adc
ret
jb
decl
clc
pop
int3
les
and
call
int
in
push
push
inc
outsl
outsl
and
ret
add
sbb
inc
mov
inc
push
outsl
test
mov
rcll
add
sub
aas
pop
popl
push
cmovg
insb
repz
pop
repnz
add
aam
inc
dec
push
pop
xorl
push
mov
adc
imul
imul
jmp
add
rcr
int
rcl
int
mov
addr16
push
dec
add
push
add
or
inc
push
test
mov
adc
or
shr
inc
cli
dec
adc
sub
sti
adc
push
adc
push
insl
sub
inc
movsb
inc
mov
jb
jl
fstps
shrb
mov
xor
inc
xor
test
inc
inc
in
rorl
rcrb
loop
sub
in
push
xor
hlt
outsl
aaa
or
jno
mov
pop
pop
sbb
outsl
arpl
add
bound
mov
rcr
sub
xchg
cmp
sub
pop
adc
jnp
add
xor
sbb
pop
cmp
and
mov
rorl
lahf
xlat
xchg
les
inc
mov
push
sbb
add
xor
mov
xor
pop
test
push
sbb
sub
push
repz
aaa
aas
mov
sbb
stos
inc
aad
push
or
and
frstor
pop
dec
inc
cmpsl
enter
std
shll
jo
pop
or
inc
mov
add
pop
dec
fistpll
clc
orb
lahf
jb
movsl
mov
cs
and
jl
repnz
lret
fsts
fnstsw
adc
and
mov
add
repnz
mov
dec
add
fnstenv
xor
lret
dec
pushf
cmp
cmpsl
pop
mov
add
push
adc
inc
out
outsl
andb
lds
ds
xor
stos
pop
mov
pushf
mov
pop
dec
aad
inc
iret
and
stos
lods
add
adc
xor
insl
adc
add
push
dec
ret
mov
adc
xor
stos
mov
jle
jno
add
mov
stos
inc
sub
lea
je
mov
cltd
adc
movsb
mov
adc
sahf
mov
aas
sub
inc
add
mov
int
mov
inc
enter
shll
movsl
je
shll
sbb
mov
mov
push
inc
sbb
sub
sbb
push
cmp
add
mov
jp
shlb
push
jno
cmp
jo
sub
push
ljmp
adc
ljmp
push
mov
insl
fs
sub
inc
inc
lret
jecxz
lcall
push
inc
or
push
xor
lods
aam
push
jb
cmpsb
out
outsb
or
push
ja
adc
shr
or
mov
push
adc
in
or
mov
int3
push
xor
push
dec
xchg
loopne
lock
push
sub
xchg
mov
mov
push
jne
mov
sub
sub
pusha
addb
jg
sbb
test
aam
mov
add
inc
cwtl
sub
dec
or
or
orb
movb
inc
or
loopne
xchg
sbb
repnz
inc
dec
xchg
inc
pop
adc
inc
sbb
xor
pop
int3
jecxz
int
dec
sbb
cmp
ss
jb
xlat
notb
push
rorl
jno
mov
incb
das
inc
mov
push
mov
loop
movsb
scas
push
ds
popa
jae
add
lods
stc
mov
add
sbb
hlt
pop
pop
aam
push
cmp
sub
pop
rcll
push
add
test
cmp
dec
sbb
cmp
lret
xor
mov
ljmp
lods
cmpsl
adc
dec
sahf
andl
inc
mov
sbbl
cmpsb
sub
movb
je
dec
adc
pusha
push
pop
shl
mov
sti
inc
xchg
cmp
out
lea
push
xor
out
pop
jno
xchg
add
or
pop
mov
repnz
mov
xchg
je
bound
xchg
das
adc
cwtl
imul
addl
ret
outsb
push
xor
or
out
aas
int
and
clc
nop
test
loop
repz
cld
arpl
inc
pushf
push
jg
adc
loopne
sub
addr16
mov
sahf
or
lret
fnstsw
or
or
cmovg
mov
pop
xor
cs
or
add
adcl
lret
mov
shl
popa
jl
xchg
and
dec
cli
cltd
or
mov
adc
nop
pop
js
mov
or
and
outsl
mov
and
or
adc
and
mov
and
jmp
fisttps
xchg
dec
and
jl
test
mov
sbb
orb
pop
cltd
xor
jg
adc
and
dec
jmp
dec
or
or
fdivrp
dec
xchg
mov
mov
mov
xchg
pop
outsl
jle
pop
jns
or
dec
movsl
sub
xor
add
inc
sub
add
xchg
repz
fwait
add
icebp
and
or
scas
int
andb
jle
leave
loop
sub
or
test
pop
outsl
or
xchg
mov
stos
ss
adc
stc
int
lods
je
jo
cmp
jne
in
arpl
hlt
pandn
outsb
sbb
and
mov
inc
fldcw
sub
je
push
outsb
push
pop
xor
push
mov
jae
sarl
add
fwait
push
dec
call
les
lods
clc
dec
mov
lret
and
call
adc
fwait
push
cs
leave
fmull
into
mov
adc
repz
jns
outsl
jae
mov
pop
repnz
xchg
push
add
in
sub
cmpsb
cs
insl
pop
jl
je
imul
add
add
sub
inc
mov
pop
das
jmp
stc
push
mov
adc
mov
ljmp
jae
sbb
lret
mov
adc
sbb
inc
inc
js
jle
lock
stc
and
hlt
gs
dec
push
inc
ljmp
or
add
out
lcall
inc
sbb
xor
jbe
insb
inc
mov
push
lock
outsb
cs
xor
adc
inc
xor
push
or
or
prefetchnta
xor
fdivrp
test
gs
test
cmp
je
jg
aaa
fistps
mov
sbb
and
je
and
fisttps
add
sub
cmp
aaa
pop
call
test
jae
jl,pn
les
sub
or
dec
sbb
out
fbld
dec
xor
dec
mov
mov
pushf
jo
push
test
fsubrs
add
sub
movsl
mov
dec
int3
mov
xchg
fnstsw
dec
dec
repz
insb
jbe
jae
test
cmp
cwtl
jne
insb
xor
shrb
incb
inc
xchg
les
cli
inc
jo
dec
outsb
out
and
sbb
xchg
aam
out
cs
aas
jg
xchg
lcall
addr16
xor
stos
lea
cmp
jle
nop
lret
jo
ds
lret
inc
push
adc
mov
inc
test
jno
sub
or
or
push
cmp
xor
cmpsb
jg
das
sbb
inc
xchg
movsl
push
sbb
xchg
ss
aaa
call
push
push
sbb
jbe
mov
sub
push
jp
cmp
push
push
dec
jb
inc
mov
cmp
insl
std
rcrl
les
mov
inc
sti
jae
sbb
into
jb
cli
adc
sbb
bound
push
inc
testb
push
insl
in
sub
cld
add
inc
jb
outsb
dec
dec
ret
inc
stc
sbb
cltd
pop
arpl
test
push
mov
xor
outsb
cmp
frstor
pop
fsubp
mov
das
push
jo
push
push
push
cltd
aas
jg
cmp
push
popa
push
inc
mov
shlb
cmp
arpl
inc
stos
or
mov
xor
sub
mov
adc
dec
popf
push
sub
inc
movsb
stc
out
adc
scas
or
or
xor
aad
lcall
js
push
push
xor
pop
mov
addr16
fadd
xor
stc
pushf
xor
repz
jo
cmc
fs
sbb
mov
movsl
sbb
cmp
cmp
les
es
pop
std
and
dec
or
adc
cmp
in
or
int3
clc
cli
out
dec
pop
cmp
pop
pop
add
jecxz
xchg
mov
jns
jo
stc
push
pop
imul
cmc
ret
and
pop
std
or
loope
cvttps2pi
mov
pop
aas
push
xchg
lahf
call
mov
xchg
add
cs
in
mov
insb
mov
push
xor
add
xchg
jo
sbb
xchg
push
loope
cmp
ret
cmp
ret
inc
sub
imul
je
xor
scas
jl
sbb
jbe
scas
out
push
cmp
leave
lock
push
pop
sub
gs
lret
movsl
std
shll
outsb
cmc
repz
mov
bound
lock
lcall
push
xlat
pop
bound
or
jbe
aam
stos
pop
nop
out
inc
js
mov
push
jl
out
fs
roll
sbb
stc
int
push
xchg
adc
dec
xchg
add
mov
stos
in
movsl
mov
inc
lahf
dec
adc
dec
shrl
fwait
aas
leave
lahf
test
les
cmp
fldenv
std
cmpb
je
inc
cmp
mov
int
jmp
das
rcrb
fsubrl
cmpsb
pop
test
jbe
cmp
clc
push
test
jo
popf
and
cmp
insb
dec
jmp
cmp
mov
aaa
pop
dec
pop
push
dec
pop
dec
lret
rorl
mov
push
outsb
push
xor
stc
test
or
test
lods
pop
push
mov
push
add
jne
mov
cmp
loopne
inc
cmp
xor
push
fistpll
gs
add
das
movb
jle
and
outsb
add
imul
clc
pusha
add
iret
jg
or
into
sarb
jmp
lock
mov
je
cmp
or
sub
repz
push
jmp
mov
cmp
jae
push
xor
leave
call
rcrl
sbb
pop
mov
popf
out
in
sub
mov
dec
cmp
push
fcoms
dec
jnp
scas
xchg
loop
pop
cmp
sub
mov
repnz
cmp
jge
jge
mov
rorl
ljmp
sub
or
ret
dec
cld
push
sbb
aas
pop
enter
rclb
sbb
or
js
pop
mov
add
jno
jnp
dec
add
sbb
mov
xchg
sub
inc
nop
xlat
lock
xor
mov
add
and
xchg
add
sbb
xchg
leave
or
mov
in
dec
aad
xchg
jbe
dec
stos
cmp
mov
mov
shll
inc
mov
sub
mov
xor
mov
and
xor
cmp
xor
cmp
lea
fisttpll
xor
negb
mov
rcrb
fs
push
test
pop
jbe
lahf
fsubrs
leave
add
pop
mov
lods
sbb
dec
fimull
test
mov
nop
outsl
jle
inc
xchg
or
and
enter
aaa
pop
test
pop
inc
xchg
lds
xchg
cld
push
jle
scas
push
mov
inc
jecxz
push
out
or
dec
mov
leave
popf
mov
jge
add
iret
and
mov
test
ret
jle
mov
or
leave
ret
mov
dec
iret
pop
mov
fnstenv
adc
orb
or
out
xchg
or
idiv
mov
fwait
dec
pop
mov
jg
fdivs
adc
jbe
rcrb
push
call
inc
in
mov
jno
fdivrl
cmovno
and
sarl
cld
mov
sub
aas
fimuls
out
mov
pop
or
sub
xor
rcrl
cmc
xor
cltd
or
mov
fcomip
fnsave
iret
arpl
hlt
dec
xor
lahf
mov
cmpsb
dec
and
jl
mov
cli
and
int
and
mov
faddp
out
xor
outsl
mov
mov
rcrl
cmp
or
pop
sbb
mov
cmp
aas
loopne
sahf
xchg
jg
lock
fisttps
mov
and
ds
add
fistpl
sbb
xchg
dec
xchg
adc
inc
and
mov
inc
popf
enter
lea
inc
rorb
pop
insb
test
fucom
mov
call
rol
aam
loope
loopne
dec
loop
adc
inc
xchg
lahf
mov
jmp
sub
dec
pop
push
jb
jl
fwait
pop
lcall
clc
cvtpi2ps
je
add
sbbb
shlb
xchg
ret
cmc
add
lea
mov
xor
sub
push
push
and
fsubl
xchg
enter
push
lret
push
dec
les
lea
stc
inc
add
and
cmp
mov
sbb
shrl
or
inc
dec
push
call
and
sahf
pop
mov
sub
add
mov
mov
push
enter
xor
scas
xchg
addr16
mov
cmp
mov
je
popf
xor
xchg
out
enter
mov
insb
orl
fwait
jg
mov
lret
add
inc
je
push
jmp
jne
mov
enter
pop
decb
jg
push
adc
sbb
sbb
sub
sbb
push
enter
cld
out
mov
les
push
mov
push
js
mov
and
je
fiaddl
aaa
ret
lock
stc
xchg
or
pushf
inc
test
push
pop
push
jl
je
loope
dec
add
jnp
and
fwait
ljmp
push
adc
test
bndcu
test
add
adc
jl
push
or
adc
fwait
clc
push
pop
xor
and
repz
adc
call
sbbl
adc
mov
mov
add
mov
adc
inc
inc
enter
cwtl
sbbl
fiadds
sub
xor
in
aas
into
lcall
sbb
push
adc
cmovbe
mov
cli
cld
xor
jns
dec
or
std
add
add
dec
jne
aam
xor
rorb
mov
jmp
mov
mov
repnz
inc
xor
pop
sbb
stc
xchg
cmc
nop
mov
jne
pop
cltd
jbe
popa
adc
mov
cmp
inc
fs
dec
adc
and
mov
adc
fsubs
loop
test
sub
iret
addl
inc
adc
or
sbb
xchg
lcall
and
stc
out
pop
and
fistpl
or
push
rcrb
sbb
pusha
clc
cmp
push
and
sbb
push
dec
aam
push
ficomps
stc
xchg
lea
out
fcompl
orl
jne
call
mov
pop
daa
imul
push
stc
mov
scas
cld
rorb
pushf
xlat
mov
scas
iret
pop
movsb
adc
test
cmp
add
sti
loopne
mov
stos
frstpm(287
inc
xchg
mov
dec
aas
aad
jno
test
sarl
mov
mov
add
cmp
ret
and
pop
mov
adc
mov
jne
lcall
hlt
lret
mov
add
loopne
inc
sbb
sbb
daa
nop
call
pop
int
inc
shlb
ror
iret
arpl
cmp
je
jecxz
adc
subl
int3
nop
mov
xchg
inc
call
jecxz
push
sbb
pusha
sub
mov
push
jmp
test
flds
iret
cmc
inc
dec
xor
popf
mov
out
call
dec
jmp
repz
sbb
ret
daa
xchg
xchg
ds
data16
test
and
pop
stc
sub
cmp
js
repnz
mov
iret
cmp
stc
subl
dec
pusha
lahf
in
cwtl
call
dec
ss
or
call
or
aas
add
pop
decb
add
xor
outsl
inc
xchg
mov
push
and
shll
and
outsb
mov
rorb
cli
add
and
and
sbb
pop
ret
push
dec
push
adc
aas
inc
sub
and
xor
sbb
fiadds
je
dec
or
jne
push
jg
and
popa
jno
inc
jg
push
je
jmp
mov
daa
lds
fwait
in
push
ffree
pop
add
test
movsb
cli
stos
mov
push
dec
shll
iret
scas
and
pop
rclb
xor
cld
out
std
cmp
and
or
outsb
pusha
pop
test
xor
mov
ret
pop
in
sahf
jns
xorb
sbb
fildll
add
add
jl
pop
das
andl
push
jae
nop
push
adc
lret
xchg
test
andb
lcall
gs
pop
movsl
dec
xor
add
adc
jle
inc
incl
xchg
push
mov
lods
sbb
cld
jo
sbb
lock
mov
lods
into
sub
in
ret
mov
js
fwait
ds
out
lods
add
sub
inc
sub
cld
sbb
nop
dec
mov
inc
out
stos
outsl
xor
ficompl
mov
pop
add
push
or
sub
cld
sub
mov
lock
mov
inc
std
push
cld
adc
mov
outsb
pop
loopne
stc
int
and
adc
mov
cld
add
adc
pop
or
daa
testb
or
pop
call
or
call
ja
sbb
cli
sbb
inc
mov
pop
xor
fildl
jmp
inc
insb
and
dec
jmp
out
inc
loopne
add
and
dec
pop
sub
adc
lret
out
inc
mov
addl
xchg
push
xor
sub
inc
pushl
cld
mov
push
in
sbb
and
hlt
mov
jl
aas
ljmp
jne
and
xchg
nopl
fsubr
fwait
cld
or
lret
mov
and
sub
je
and
push
mov
pop
or
and
dec
xor
insb
inc
and
imul
dec
xor
mov
enter
sbbb
popf
and
decb
jg
std
inc
dec
mov
sahf
adc
jo
cmp
inc
add
xor
xor
inc
adc
pop
clc
imul
mov
aam
jo
pop
and
filds
mov
xor
cltd
data16
inc
aam
int3
lea
mov
dec
jg
clc
xchg
addl
insb
sub
inc
je
dec
negb
or
xor
aad
and
call
fsubs
pop
sbb
and
jg
rcrb
nop
filds
or
cmpb
aaa
xor
dec
or
mov
or
inc
lret
xor
mov
fsubs
jl
inc
add
sbb
enter
mov
inc
test
or
inc
mov
pop
stos
mov
lods
clc
das
std
jl
pop
mov
add
out
mov
arpl
or
mov
ja
aam
loope
push
movsl
ja
push
add
jg
das
in
cmpsb
pop
testb
mov
cmp
shl
sbb
hlt
dec
adc
lea
repz
cli
pop
mov
insb
fs
mov
cmp
mov
add
addr16
adc
push
out
adc
xchg
mov
cmp
mov
pop
adc
adc
push
sub
mov
xchg
pop
mov
jle
push
loopne
sbb
fisttpl
adc
jp
inc
cmpsb
mov
orb
mov
xor
inc
shll
mov
adc
out
pop
insb
inc
jmp
pop
xor
jmp
add
mov
and
dec
mov
mov
in
sbb
xchg
shlb
push
imul
xchg
outsl
js
push
xchg
mov
cmpsl
ss
ss
out
lock
inc
inc
mov
mov
adc
ud0
inc
leave
sbb
cld
mov
pop
cmpb
mov
inc
lock
push
ret
lock
and
jmp
push
scas
fs
fs
pop
lock
daa
push
xor
xchg
jge
inc
or
inc
subl
mov
adc
lret
mov
pusha
stos
into
les
mov
push
enter
inc
jg
addr16
leave
std
shll
pop
sub
das
stc
xchg
push
push
xlat
or
loop
pop
dec
mov
dec
and
stos
push
add
fnstsw
push
pop
cltd
loop
stc
insb
add
inc
decl
aas
and
and
or
les
lret
cld
and
push
testb
dec
jo
inc
stos
jle
sbb
inc
outsl
and
hlt
add
push
inc
fwait
dec
inc
mov
sbb
cmp
aam
lods
loop
clc
sti
out
jge
les
pop
andl
xorps
lock
call
aas
mov
dec
push
loope
stc
dec
cmp
clc
mov
in
mov
pop
cmpsl
jge
out
aad
lea
call
aaa
mov
jne
push
andb
sbb
pop
xor
sbb
mov
mov
cmpsl
loopne
lahf
push
push
xchg
and
push
add
mov
out
lock
adc
scas
stc
jbe
aaa
mov
fcoms
pop
les
fwait
sbb
cmp
mov
cwtl
and
adc
fstpt
cmp
rcr
inc
push
xor
adc
cmp
test
incl
lods
mov
add
jg
add
les
xchg
or
test
sub
push
cld
and
adcl
sub
lahf
scas
inc
adc
ljmp
lahf
jg
xor
enter
rcll
pop
cwtl
icebp
pop
or
dec
movsl
jno
notl
icebp
cmp
cmovno
sub
mov
mov
adc
into
mov
jbe
fisubs
pop
adc
rolb
push
mov
mov
movsb
stc
popf
into
inc
adc
cmp
push
stc
incl
sub
add
mov
mov
pusha
pushf
je
or
les
mov
or
jbe
in
adc
vmread
push
out
mov
or
sub
cld
cld
stc
push
mov
jmp
adc
int
enter
jae
jge
ret
jle
mov
xor
push
shlb
stc
pop
ret
adc
sbb
call
adc
call
mov
inc
push
cmp
inc
loop
jne
add
ret
xchg
cs
je
jge
jo
and
outsb
jl
icebp
dec
popf
loop
nop
dec
loope
lods
dec
insl
xor
inc
xchg
mov
incl
cmp
call
add
jmp
cmp
mov
sbb
add
sub
cmp
dec
jp
push
dec
jne
repz
inc
mov
fbstp
sbb
sub
clc
sbb
or
jb
jbe
or
dec
scas
les
push
aad
add
cmpl
jp
push
decl
clc
sbb
aam
lret
inc
sbb
not
nop
inc
push
and
add
mov
lea
hlt
sub
xor
gs
lds
adc
inc
cs
jne
xorb
jb
sbb
aas
sub
stc
and
or
cmp
in
jmp
insb
mov
out
enter
mov
dec
jp
push
jnp
and
mov
and
inc
mov
mov
shlb
cwtl
mov
cmpsb
scas
or
pop
mov
aad
cmp
xor
in
xor
push
jae
pop
inc
mov
sbb
inc
inc
jbe
push
jo
mov
stc
lods
in
add
cli
sub
call
ds
inc
in
test
int3
cmp
and
add
add
cld
stc
fstpt
fs
adc
jae
or
jb
jne
lock
add
ljmp
dec
test
mov
xlat
insb
add
sbbl
in
sbb
adc
xchg
pop
pop
dec
outsl
aas
or
push
xor
les
xchg
push
sub
ds
cld
out
cmpl
lret
sbb
cmp
pop
dec
xchg
test
cli
popf
ret
out
xor
push
and
sub
loop
enter
cmp
int3
call
nop
fwait
push
adc
jmp
int3
repnz
pop
mov
clc
sub
fwait
xchg
or
hlt
pop
inc
in
daa
pop
xor
movsl
popf
or
imull
stc
sub
fcoms
and
sub
jno
scas
cltd
mov
out
xor
call
push
mov
loope
inc
sbb
sbb
dec
push
jecxz
arpl
int3
push
test
add
fsubrs
mov
iret
hlt
inc
or
push
push
pop
popf
repnz
lock
mov
dec
arpl
ljmp
inc
push
in
test
mov
in
aas
and
mov
stos
and
popa
pop
enter
sti
cmp
ja
adc
inc
lret
test
mov
decl
adc
or
and
pop
clc
inc
out
dec
dec
dec
fmulp
bnd
push
sbb
mov
mov
add
jl
dec
scas
mov
sti
cmp
dec
cmpsl
int
neg
fwait
int
imul
jge
sub
dec
imul
xchg
xchg
ds
in
pop
aam
cwtl
push
inc
push
sub
inc
je
iret
aas
adc
and
lcall
stos
add
mov
push
jbe
les
dec
or
andb
adc
add
sub
jge
and
out
mov
std
repz
movsb
mov
dec
mov
push
lods
mov
aaa
jg
clc
xchg
divb
adcb
xchg
test
sti
xlat
fisubs
stos
push
in
inc
cmp
stos
fs
cmpsl
sbb
add
stos
mov
dec
or
mov
mov
pop
sub
fsubr
add
insl
sbb
movsl
jle
add
dec
addr16
mov
adc
repz
enter
inc
clc
xchg
cld
sub
adc
stc
cld
add
or
jl
xchg
jbe
sarb
add
push
out
aaa
adc
daa
inc
js
cltd
mov
icebp
cmp
mov
lret
out
inc
adc
adc
or
fwait
mov
lock
push
xchg
dec
lret
jle
int
jb
stc
sub
xchg
mov
push
xchg
adc
jg
lds
stos
hlt
loope
clc
jno
test
sbb
cmpsl
jg
das
test
mov
mov
adcl
jmp
cmpsl
fildll
std
sbb
outsb
fdivs
xlat
call
enter
scas
xor
sub
dec
aaa
lock
je
inc
inc
pop
xor
push
jg
mov
and
dec
mov
mov
sarl
arpl
and
lret
testb
inc
hlt
mov
cld
cmp
or
cmpsb
mov
sub
jmp
sbb
jmp
pop
jecxz
dec
pop
repnz
and
push
clc
dec
mov
inc
pushf
gs
mov
dec
outsb
and
ljmp
imul
dec
hlt
push
pop
roll
nop
faddl
fisubs
ljmp
adc
loopne
and
fwait
lret
loopew
out
jno
icebp
faddl
xlat
xchg
mov
movsb
inc
call
mov
cli
adc
mov
dec
xor
and
repnz
fiadds
adc
in
lcall
repnz
bound
js
mov
test
mov
jle
cmpl
jno
or
pop
out
and
cmc
inc
mov
decb
stos
cmpb
xchg
cmc
cmp
stc
dec
sbb
push
sub
fwait
pop
inc
inc
xchg
mov
jno
mov
insb
bound
mulb
test
cmp
das
and
adc
inc
inc
pop
movsb
outsl
fs
daa
mov
rcrb
aam
shl
dec
jl
push
andl
push
test
rcl
repz
inc
cmp
dec
xchg
xor
dec
inc
adc
adcl
or
mov
je
xchg
and
mov
inc
adc
loopne
add
add
and
aas
pusha
add
je
scas
jno
lcall
xor
daa
test
mov
out
xchg
and
setl
je
cmp
out
sub
repz
adc
mov
cs
sti
pop
and
mov
shl
sbb
ljmp
hlt
out
aad
jp
jmp
cmp
jbe
movsl
aas
cmp
test
and
xlat
test
and
icebp
push
fldl
jb
ret
or
push
xchg
or
or
mov
cmp
jb
fiaddl
mov
push
adc
cltd
das
or
test
xchg
and
adc
nop
leave
movq
xor
in
sub
push
fadds
inc
xchg
pop
push
mov
adc
dec
adc
and
stos
mov
sbb
rcrl
cld
mov
lahf
leave
xor
sbb
dec
adc
mov
jp
and
and
dec
and
or
rclb
imul
aas
pop
push
inc
jne
xchg
jge
mov
stc
inc
test
adc
rcl
nop
pop
data16
out
mov
push
xchg
and
pop
inc
call
fnstcw
stc
dec
sbb
popf
and
sub
ljmp
xchg
add
adc
mov
push
dec
adc
ficoms
pop
outsl
push
mov
adcl
xchg
xor
fwait
push
push
pop
std
xchg
inc
adc
and
cmp
sub
jg
cmovns
push
cmp
popa
fiadds
nop
pop
cli
jne
les
aas
and
pop
inc
jl
inc
daa
inc
pop
add
xor
repnz
cmp
push
push
mov
add
pop
mov
xor
out
xor
mov
pop
push
pushl
shll
lret
repnz
and
aas
jmp
mov
add
ljmp
lea
cmp
and
mov
aam
pop
dec
or
std
add
sarb
sbb
ja
add
in
cmp
ja
daa
jmp
dec
std
movl
mov
testl
int
mov
push
rclb
inc
inc
mov
shrb
jg
xor
mull
mov
jp
xchg
aad
fidivrs
mov
cmp
testl
add
xor
push
fidivrs
mov
jne
xchg
adc
mov
push
xor
dec
std
xor
cld
pop
pop
xor
test
dec
pop
stc
ret
sbb
cmp
xorb
mov
push
mov
cmpb
mov
push
adc
inc
adc
lret
aaa
jmp
lods
enter
cwtl
les
xchg
jg
cmpb
add
adc
jp
sbb
stc
add
int
xchg
insb
add
jecxz
sub
jg
push
stc
or
jmp
or
xchg
cmc
and
pmaddwd
push
inc
call
test
jp
xor
push
call
push
fisubrl
loop
jbe
stos
testb
cld
add
dec
dec
pop
push
and
out
fwait
mov
mov
and
jl
test
cld
out
push
stos
pop
or
adc
inc
xchg
enter
mov
push
mov
or
sbb
daa
ljmp
adc
test
jo
mov
stc
mov
push
in
mov
insl
popa
loope
decb
into
mov
add
roll
les
xchg
ret
call
adc
inc
mov
mov
jge
int
mov
sbb
add
rclb
jg
addr16
imul
push
call
dec
loop
mov
xor
cld
jne
jg
pop
push
dec
jne
mov
repnz
jge
aaa
jmp
dec
push
mov
inc
mov
iret
push
xchg
clc
cmpl
sub
sbb
xor
sub
and
nop
jg
push
sbb
sub
push
push
xor
jecxz,pn
fildll
ss
js
jne
fadds
rcl
aas
push
push
xsavec
or
shrb
jl
fwait
mov
pop
push
pop
mov
call
cmp
mov
nop
pop
mov
pop
repz
jne
dec
cli
and
rorb
dec
sbb
push
into
dec
push
xchg
mov
data16
sbb
rclb
pop
jmp
aad
cmp
cltd
adc
mov
dec
icebp
push
push
xor
xchg
pop
test
sub
cmp
jbe
roll
stos
mov
movsb
xchg
mov
xchg
sahf
rcl
aas
hlt
stc
xchg
sub
addr16
mov
xchg
push
cmp
fwait
addl
adc
aas
or
shlb
mov
xorb
iret
xor
dec
mov
cs
stc
int
pop
rcl
cmpsb
cmp
xchg
push
push
jmp
test
cld
cmpl
adc
test
mov
bound
lods
sbb
ret
repz
ljmp
fisubrl
ljmp
das
lahf
out
and
mov
jae
filds
popf
sti
inc
clc
out
ds
cmp
out
inc
cmp
or
jnp
adc
and
scas
inc
inc
nop
fstl
mov
mov
aad
fldl
fsubrl
lods
adc
mov
mov
pop
int
xchg
lock
hlt
inc
or
push
jae
je
inc
in
jns
icebp
lds
pop
jne
xlat
inc
stc
inc
cmp
lahf
jmp
ja
xor
sbb
ss
scas
mov
jno
lahf
cmp
mov
push
sub
mov
pop
push
test
jmp
push
fsubrl
clc
sub
pop
daa
dec
pop
push
cmp
xchg
and
popa
aas
jo
mov
pop
pushl
fists
bound
int
adc
sbb
lods
adc
jl
push
pop
mov
pop
je
jle
scas
mov
or
or
filds
jno
movsb
dec
das
pop
pop
in
out
inc
adc
call
lret
or
or
enter
adc
rcrl
and
fxch
cmp
xchg
fisttps
pop
je
mov
cld
inc
jl
mov
mov
aaa
pop
cmp
cmp
lea
jl
mov
inc
call
push
fwait
xor
push
xor
aad
mov
jp
mov
pop
js
push
scas
les
daa
pop
ror
jl
sub
and
out
cwtl
js
movsl
or
notl
daa
push
sti
mov
mov
mov
mov
sub
xchg
push
ljmp
stc
sub
push
dec
mov
mov
lea
fcomps
adc
dec
xor
adc
jae
into
ret
stc
sbb
and
fmul
lahf
mov
push
mov
jmp
jns
cmc
outsl
clc
xchg
ret
pusha
mov
in
leave
mov
inc
mov
adc
icebp
out
inc
cmp
les
push
cltd
jmp
mov
fsubs
aam
and
cld
push
cmp
xor
aas
cld
jo
or
lea
movsb
jmp
inc
cli
rcrl
mov
call
cmp
xlat
sub
dec
push
or
aas
and
add
mov
mov
pop
or
hlt
scas
fnstenv
pop
in
hlt
adcb
pop
mov
xchg
jg
mov
cmp
lods
stc
test
mov
pop
mov
pop
sbb
mov
sbb
cld
add
andl
pop
jne,pt
das
mov
repnz
mulb
test
add
stc
cltd
dec
cmp
cmp
sub
aaa
sbb
and
sar
sarb
lea
clc
ja
add
sti
dec
jl
clc
mov
pop
js
add
jae
jns
push
out
mov
fucomip
inc
pop
adc
in
in
cli
adc
pop
jmp
push
mov
xchg
add
jecxz
sub
loope
das
xor
movsl
mov
xchg
pop
lock
jg
mov
mulb
and
push
push
outsl
mov
push
inc
xlat
fwait
xchg
cld
out
call
xchg
push
pop
inc
data16
ljmp
imull
testl
pop
or
push
scas
mov
pushf
in
xlat
push
xor
sbb
call
idiv
iret
clc
inc
cmpsb
icebp
adc
mov
fmul
in
aas
jmp
mov
dec
bound
stos
push
dec
or
pop
loopne
test
xor
inc
jmp
and
lahf
and
xor
clc
int
jmp
cwtl
push
rolb
repz
cmpl
fildll
je
cld
jo
hlt
push
xor
push
sbb
les
inc
movsb
pop
and
add
in
pop
lock
inc
scas
push
dec
xor
lock
ret
xor
cmp
mov
sbb
fdivrs
fbstp
movsl
push
call
adc
xor
lret
in
or
movsb
mov
jmp
stos
sbb
xchg
or
pop
sub
loop
adc
js
cmpl
stos
adc
mov
adc
sub
jl
cmpsl
mov
stc
or
sbbl
add
xor
movsb
mov
xchg
test
jg
fs
pop
call
mov
cmc
xor
cld
fcoms
adc
leave
xor
cld
sub
mov
pop
lock
cmpb
in
fiadds
mov
or
pop
xchg
test
ret
jl
and
bswap
pop
gs
add
gs
inc
fcoms
or
add
push
adc
adcl
adc
sub
mov
and
xchg
cld
and
push
in
data16
cli
cld
das
jle
sbb
push
divb
les
jp
jo
lock
cmp
sti
inc
addb
int3
xor
inc
inc
daa
aaa
dec
repz
movsb
gs
lods
cmc
push
movsb
scas
mov
rcll
cmp
cwtl
lahf
out
lock
xchg
adc
xchg
lods
pushf
es
jmp
ret
loopne
shrl
sub
sub
mov
sbb
aad
rep
test
mov
aam
lock
rorl
aaa
jne
mov
int3
xchg
hlt
mov
lods
dec
call
cld
fwait
outsl
and
mov
or
pop
stc
cmpl
adc
dec
cwtl
inc
xor
mov
movd
stc
push
dec
outsl
dec
pop
jmp
cld
cmpsl
xchg
ljmp
dec
pop
add
mov
les
xor
sarb
mov
dec
mov
outsl
icebp
mov
xor
adc
inc
fwait
pop
jne
je
fwait
pop
pop
add
or
add
out
push
lcall
mov
cmp
cld
es
iret
adc
jmp
stc
pop
sbb
je
push
jmp
mov
sahf
mov
test
pop
jb
adc
inc
sbb
inc
pop
shl
dec
jmp
cld
mov
outsb
out
enter
push
mov
jg
dec
fcompl
xlat
jns
pop
adc
repz
push
in
cmp
hlt
inc
dec
orl
icebp
fidivl
inc
call
push
push
push
out
aaa
jecxz
pop
pop
xlat
mov
pop
inc
fdivl
add
lcall
jp
in
jmp
lret
and
mov
or
popa
push
clc
mov
int3
hlt
cmp
out
out
stos
lock
or
out
or
cmpsb
push
xchg
jp
loopne
and
cmp
rcll
mov
mov
jmp
mov
idivl
jmp
aam
and
xor
rclb
jge
mov
jg
and
and
adc
cmp
xorl
in
icebp
jbe
dec
fnstsw
sarb
sbb
adc
mov
sub
cld
sti
dec
scas
aad
or
or
xor
jmp
js
pop
call
call
test
pop
jg
dec
dec
divl
jmp
mov
cmp
add
in
stc
out
fidivrl
and
and
inc
and
pop
fsubrl
cmc
pushf
push
push
clc
lods
sbb
fists
dec
and
inc
lea
insb
clc
out
pushf
xlat
ret
stos
into
sbb
sbb
or
sub
cli
pop
jg
mov
and
lock
test
push
sub
jl
clc
inc
sbb
lret
insb
push
dec
push
inc
push
dec
xchg
aam
pop
mov
sbbl
push
mov
add
icebp
mov
mov
sti
imul
test
dec
in
insl
scas
shll
cmp
sbb
adc
push
cli
cli
pusha
dec
pop
push
push
xor
inc
loop
lcall
iret
test
or
call
lock
jg
int
daa
int3
xchg
rcrb
fst
xchg
test
push
loope
and
hlt
outsb
test
sub
inc
mov
and
decl
leave
test
add
pushf
rcl
les
jp
pusha
ja
aam
daa
jns
repz
mov
repz
jmp
mov
call
jns
pop
in
adc
xchg
dec
out
push
push
jmp
and
fs
push
and
and
popf
pop
sub
pop
nop
push
mov
fcomip
mov
cmp
jle
adc
jo
stc
or
adc
adc
daa
mov
inc
or
adc
inc
and
push
fldcw
or
stos
add
jp
repnz
push
pushl
les
adc
sbb
sti
movsb
jl
ficoml
sarl
ss
xor
cmpsl
pop
orl
push
push
icebp
outsl
lcall
mov
inc
xor
dec
adc
jmp
je
loope
clc
push
push
mov
jmp
pop
adc
call
add
cmp
inc
inc
mov
sub
je
aaa
jle
ret
cmpsb
inc
mov
jbe
pop
jg
pushf
push
inc
and
pop
cwtl
or
or
sahf
fs
xchg
bnd
loop
and
inc
sbb
loopw
add
mov
les
subb
jae
jo
mov
fmull
inc
sub
in
and
dec
push
mov
xchg
mov
outsl
adcb
fwait
push
loop
xchg
add
imull
cmp
dec
inc
call
pop
cli
jmp
fbld
add
mov
mov
cmc
pop
out
jl
fs
mov
xchg
jle
pop
mov
mov
lret
mov
mulb
xor
mov
clc
je
cwtl
xor
fisttpl
dec
test
imul
lahf
mov
in
push
add
sub
lcall
movsb
scas
jmp
dec
ret
jnp
mov
sbb
ss
jp
jl
cmpb
push
fwait
jae
pop
push
mov
dec
js
das
pushf
dec
lock
enter
mov
into
adc
stos
out
xlat
cwtl
push
xchg
mov
fwait
adc
mov
repz
leave
jecxz
nop
dec
jae
mov
inc
push
cmp
jge
inc
adc
or
sbb
int
andl
cmc
dec
mov
int3
and
in
lds
adc
dec
int3
xchg
mov
lods
icebp
cld
add
sub
test
lock
notb
out
push
out
mov
push
sbb
mov
ljmp
sub
imul
sti
jne
leave
mov
or
mov
jecxz
out
fcomps
call
js
sub
jno
sub
sub
lret
stos
scas
test
add
test
shl
mov
cmpb
fisttpll
clc
pop
push
outsb
push
inc
lea
sbb
pop
je
and
dec
cld
out
add
jp
inc
jnp
xchg
ret
lret
aaa
aas
mov
shlb
and
icebp
sbb
or
cmc
or
jp
mov
andl
cmpb
inc
push
sti
add
xor
imul
cld
cwtl
push
fisttps
or
adc
int3
push
shrl
or
xchg
faddp
je
test
clc
mov
fcoml
shl
testb
push
lock
mov
imul
and
mov
scas
xor
mov
push
jl
adc
lret
xchg
and
mov
stos
leave
push
push
pusha
sub
fwait
mov
sbb
mov
jne
jl
ret
cmpsb
mov
rolb
ljmp
mov
and
inc
sbb
lea
pop
pushf
add
andb
lcall
mov
push
out
rcll
ja
adc
add
sub
decl
test
add
jle
push
lods
lds
xor
lea
repz
imul
clc
dec
call
lock
popf
lock
jge
and
adc
lret
enter
es
mov
and
das
std
aad
dec
mov
add
sbbl
xchg
pushf
sub
mov
and
xor
lods
pusha
pusha
nop
sub
js
jecxz
add
jge
inc
xor
or
out
js
data16
pop
and
les
and
out
lock
sub
dec
icebp
fisubl
adc
mov
lds
loope
add
outsl
inc
sbb
int
shrb
xchg
out
stos
cmc
adc
xor
pop
pop
push
xchg
clc
mov
es
jmp
stos
cmpsb
add
mov
pop
or
std
mov
mov
xor
jle
pop
mov
xchg
pop
stc
data16
test
xchg
and
stc
das
sbb
dec
mov
xor
popf
outsl
dec
out
hlt
roll
push
shrb
repz
enter
clc
add
iret
xor
test
inc
cwtl
mov
sbb
subb
scas
icebp
add
movsl
rclb
adc
push
nopl
pop
sub
shll
ljmp
cli
ljmp
shlb
scas
icebp
out
scas
cmp
jle
jmp
aaa
adc
popa
andl
sub
pop
ret
inc
add
notb
and
jbe
and
push
test
sbb
cwtl
xchg
incl
jmp
xchg
xchg
popf
icebp
xor
sbb
mov
add
fnstcw
pop
out
xchg
rclb
xlat
push
mulb
pop
fldt
dec
iret
mov
sbb
mov
sbb
inc
inc
outsb
and
fildll
mov
mov
imul
jbe
fs
das
sub
ret
mov
dec
loope
jp
adc
clc
pop
clc
sbb
inc
jo
loope
sub
sub
lock
imul
iret
push
shr
pop
hlt
decl
fmull
xchg
enter
add
cmc
ss
aaa
fsubl
dec
test
loop
pop
leave
out
mov
mov
stc
xbegin
jle
cmc
addb
and
and
adc
cld
adc
and
sbb
mov
mov
test
inc
mov
js
jl
scas
aam
clc
and
fadds
and
into
popf
and
cld
add
cmpsb
leave
aad
out
hlt
adc
imul
adc
test
cld
imul
call
ret
aaa
loope
repz
and
mov
mov
filds
push
add
fdivs
aam
adc
loop
push
and
in
lcall
adc
jl
outsb
ret
ss
mov
inc
push
outsl
pop
xor
enter
faddl
mov
sahf
cmp
pop
cmp
mov
aas
add
mov
pop
repnz
loopne
add
mov
mov
aad
and
jmp
std
repnz
adc
xor
rclb
dec
adc
repnz
mov
xor
cli
sti
add
jae
mov
jle
cmp
sub
xor
call
dec
mov
cmp
out
dec
sub
and
sbb
aam
push
into
xor
lret
aam
adc
lods
push
pushf
and
aaa
xor
mov
or
cmc
mov
in
fdivrl
sbb
add
push
push
adc
jne
add
pop
mov
inc
dec
add
cltd
popf
and
iret
pop
loopne
or
inc
andb
dec
clc
inc
sub
call
xor
push
fs
call
cld
out
jl
jmp
int3
sub
sti
int3
adc
pop
or
cmp
clc
mov
mov
pop
out
mov
pusha
in
cwtl
repz
mov
jl
fwait
xchg
jbe
mov
sub
shlb
pop
sbb
pop
insb
xchg
push
imul
clc
rclb
adc
stos
aas
mov
adc
push
adc
push
outsl
rcrl
enter
ds
stos
cmp
jbe
inc
lods
jl
out
xchg
xor
cld
adc
cld
je
jmp
pop
or
out
mov
ja
lcall
sar
mov
cmp
movsb
and
clc
pop
and
ficomps
pcmpgtb
mov
ret
push
cld
push
xchg
popf
xor
icebp
push
clc
mov
nop
push
add
lock
and
xor
hlt
or
sub
sbb
pop
inc
or
pop
repz
mov
xchg
jns
test
lret
jmp
sbb
push
mov
push
add
mov
sarl
loopne
xchg
or
add
add
in
cmpsb
negl
xor
inc
push
loopne
mov
sub
std
dec
mov
cld
loope
out
and
testl
mov
aad
ret
fdivl
movsb
dec
out
ds
jge
sub
test
in
mov
jg
and
xorb
push
hlt
test
xor
and
int
lods
push
negb
out
fcoms
dec
xchg
or
pushf
mov
divb
repnz
lods
mov
stos
push
push
fisttps
xchg
adc
jp
sbb
aaa
sbb
aaa
sbb
or
rclb
pusha
and
and
pop
stc
push
xchg
int
sti
sbb
jmp
adc
outsl
jmp
or
push
and
cld
dec
pop
dec
outsl
lods
inc
or
data16
adc
das
dec
ja
dec
jne
insl
mov
or
pop
nop
xchg
sbb
cmc
repz
orl
ds
and
lds
xchg
sbb
jne
xchg
stc
pop
aad
jo
push
sub
add
add
sub
pop
and
in
mov
pop
loop
stc
int
mov
xchg
in
adc
jmp
aaa
out
push
push
call
aaa
push
mov
jne
xor
mov
lock
sbb
xchg
out
mov
xor
test
pop
imul
pusha
fldenv
fidivrs
fwait
stos
mov
pushf
pop
or
xchg
loopne
fldt
ret
cmove
dec
shrb
and
jo
daa
jg
ret
mull
pop
filds
mov
mov
cmpsb
pop
mov
repz
cld
sub
outsb
sbb
lcall
imul
enter
jle
jle
or
mov
xor
add
int3
adc
cli
xchg
dec
xchg
lods
pop
jae
lahf
data16
adc
push
or
push
mov
daa
sbb
decl
imul
std
fs
jecxz
cmp
ds
das
lock
xchg
icebp
lock
rolb
mov
call
jmp
out
enter
push
add
adc
sbb
fistpll
sub
jne
cmpl
or
lds
aas
fs
pop
or
cmpsb
lods
fsubl
mov
cld
push
js
pushf
adc
stos
cld
es
call
jmp
jnp
inc
jp
mov
cmp
or
sarb
mov
std
push
stc
int
lcall
xor
dec
or
es
pop
xor
xor
cmp
jbe
or
sbb
sub
push
sbb
fmull
scas
add
cmpsl
shrb
sbb
ds
add
jg
imul
push
inc
ret
add
or
and
iret
push
cld
sub
jno
sbb
jbe
call
inc
lcall
xchg
pop
addr16
test
jle
adc
cmp
loope
jns
inc
cpuid
inc
stos
mov
stos
ret
mov
test
push
xor
jo
ffreep
stc
dec
mov
lock
xor
pop
jmp
fcoml
or
cltd
lods
push
pop
lock
xlat
stos
dec
popa
out
jl
jg
stos
pusha
or
xor
repnz
push
fwait
xorl
inc
aam
cltd
ss
push
sub
xor
xor
mov
jecxz
jg
and
cmpsb
xchg
pop
not
stc
loopne
arpl
inc
push
stc
dec
dec
mov
mov
xor
ret
enter
addr16
and
mov
inc
pop
or
xorb
test
pmulhuw
add
addr16
shlb
push
adc
movl
jmp
sbb
or
fsubp
fcoml
and
adc
pop
fcompl
dec
outsb
out
and
pop
cmp
sub
subl
mov
fistpll
cld
test
imul
daa
loope
cmc
sub
sub
xor
cmp
cmp
mov
mov
xor
ret
movsb
pop
adc
dec
out
add
outsl
mov
jp
mov
dec
or
std
dec
loop
cmp
or
mov
sti
cmp
jbe
jns
add
adc
inc
call
inc
imul
ret
pop
sub
mov
jns
out
dec
rorb
sub
out
aas
mov
or
add
or
adc
xchg
jg
or
test
adc
jns
loop
add
roll
test
and
mov
or
hlt
xor
fninit
push
shll
sti
iret
repz
push
sub
jmp
mov
test
adc
lods
fdivr
dec
cli
or
sbb
mov
mov
pop
ret
mov
inc
sbbl
push
sbb
and
xor
push
loopne
jne
out
mov
mov
xlat
add
js
and
ljmp
fs
jl
push
ja
lock
icebp
add
jnp
xorl
aas
xor
mov
scas
ja
mov
lock
out
jmp
scas
nop
sbb
leave
or
or
or
aaa
ljmp
enter
jne
test
ret
dec
push
inc
mov
mov
cmc
add
cmovl
xchg
and
mov
xchg
daa
or
adc
cld
sbb
or
fcomi
stos
lcall
pop
add
pop
enter
rcrb
xchg
out
jmp
add
int3
movups
loop
das
repnz
jle
inc
in
nop
aaa
adc
sbb
dec
jmp
lock
hlt
sahf
adc
enter
push
jae
clc
push
lods
insl
pop
add
pop
adcl
push
fdivrs
xor
lcall
sub
dec
pop
mov
sbb
aaa
mov
or
cmp
jmp
push
aas
nop
jg
loope
inc
testb
or
or
loop
add
inc
xor
hlt
pop
in
es
inc
push
in
mov
in
sub
mov
aas
xlat
lahf
aam
faddl
adc
and
sti
repz
lret
sti
add
or
shr
cmp
mov
adc
cmp
dec
repz
add
les
and
add
jle
jae
stos
xchg
daa
push
divb
pop
icebp
ret
pusha
std
lea
xor
push
bound
add
cli
dec
cmp
aam
loopne
add
push
cmpsl
shlb
movsb
popf
xor
xor
fldt
js
sbb
cmp
sub
mov
dec
loopne
and
xchg
sti
iret
aaa
inc
lds
adc
push
push
je
xor
sub
in
adc
mov
mov
nop
out
cwtl
jo
shll
pop
jp
fs
syscall
jecxz
dec
insb
repz
adc
or
mov
pusha
shr
insb
mov
xchg
test
adc
in
stos
mov
inc
aam
push
mov
mov
pop
jg
leave
xchg
cmp
dec
out
cmc
sub
stc
dec
xorb
mov
pcmpeqb
int3
push
mov
inc
test
cmp
or
loopne
add
push
les
pop
std
adc
add
stc
ja
ljmp
pop
dec
fstl
mov
cli
out
scas
jns
mov
stc
vmwrite
jmp
pusha
or
cmp
clc
int
push
mov
test
jne
mov
cld
xor
shlb
adc
popa
add
int
testl
cs
sbb
lock
cs
pusha
xchg
filds
mov
add
add
fisubrs
mov
or
mov
mov
or
or
mov
mov
jge
aas
mov
push
scas
add
push
mov
and
sub
inc
aam
dec
pop
repz
cmp
jno
pop
xchg
out
mov
mov
cld
push
imul
cmp
xor
push
scas
cmp
mov
mov
sbb
cmp
xchg
pop
push
dec
int3
hlt
push
repnz
loope
jo,pn
sbb
xchg
xor
push
push
lcall
push
inc
imul
jns
cmc
sbb
lods
pushf
push
imul
cmp
adc
je
or
add
cmc
aaa
jecxz
int3
pushf
push
dec
dec
test
and
js
sub
hlt
jle
adc
ficomps
sub
dec
jle
inc
iret
push
push
out
imul
mov
jle
jno
jg
xor
ffree
pop
jg
inc
inc
js
or
mov
je
push
xchg
adc
lea
int3
jbe
pop
jb
repz
cltd
lret
popa
lods
and
jae,pn
sub
lcall
cli
dec
cmp
push
push
jmp
lock
shll
push
mov
and
inc
push
int
les
test
inc
adc
inc
mov
scas
jp
mov
push
stos
insl
adc
pop
xor
loope
mov
adc
repz
out
data16
pop
adc
sbb
xchg
push
mov
xchg
pop
adc
add
out
fisttpll
int
inc
mov
sbb
jl
es
dec
popa
insl
adc
inc
outsl
lcall
jl
bound
cmpsl
mov
das
mov
test
adc
outsl
hlt
add
and
into
ja
aas
lcall
jo
inc
dec
push
divl
ljmp
out
sub
popa
addr16
adc
lahf
adc
imul
and
mov
je
xchg
push
cltd
adc
lcall
cld
test
jl
push
popa
sub
stc
notb
orl
inc
int3
push
jmp
cmp
sub
ret
pop
xchg
sub
loope
es
xor
and
stc
out
jns
fmull
stc
lret
dec
cmp
mov
jecxz
add
hlt
data16
lret
jns
push
mov
xlat
inc
mov
or
lods
add
push
jae
sarb
scas
jecxz
call
mov
imul
icebp
sub
mov
inc
mov
mov
cwtl
insb
xchg
cmp
or
mov
pushf
pop
dec
and
or
rorl
xchg
dec
mov
cwtl
sub
mov
leave
pusha
fs
sbb
adc
mov
sti
pop
add
xchg
out
loope
push
rcll
rcrl
nop
fldcw
stc
mov
jecxz
lock
sbb
xchg
outsl
es
jbe
add
and
test
push
mov
out
lahf
cld
cld
out
in
sbb
out
add
loope
ds
leave
fistpl
nop
fists
jne
xchg
jmp
jl
cmp
dec
mov
xchg
js
aaa
ljmp
out
stos
jmp
sbb
aad
pusha
aam
aas
add
add
add
xor
stc
xchg
stc
pushf
mov
stc
int
loop
iret
pusha
jp
lea
jle
icebp
out
jmp
sbb
in
sbb
lcall
icebp
stos
icebp
xchg
ss
lret
dec
mov
add
sahf
jl
jle
jle
cwtl
jle
jle
jle
mov
pop
loopne
dec
inc
sahf
push
js
dec
jb
jns
adc
out
jge
iret
mov
push
fcomps
movaps
inc
jmp
stc
cmp
dec
jl
push
lock
jb
pop
bound
ds
stc
aad
mov
cmp
aas
pop
idivb
jp
data16
jg
pusha
in
jle
jle
inc
inc
pushf
nop
pop
inc
stc
int
xor
call
clc
pop
cmp
daa
pop
pop
jle
out
notl
adc
std
cmpb
push
rcr
hlt
cs
xchg
sti
xchg
mov
jl
dec
jle
jle
mov
jle
nop
cmpl
xor
in
mov
adc
lds
jg
mov
nop
iret
fwait
adc
push
clc
ret
sbb
pop
mov
push
cmp
in
jbe
push
jle
mov
iret
stos
push
shl
mov
ret
pop
les
loop
mov
mov
shl
ret
rorl
xchg
les
into
stc
in
add
cmp
xor
incl
pop
jne,pt
mov
in
dec
cmp
adc
sub
das
xchg
js
int
sbb
xchg
jmp
inc
mov
cmp
cmpb
mov
aad
dec
in
adc
jl
jle
jle
sbb
xor
mov
out
fbstp
dec
hlt
push
clc
push
lcall
mov
cwtl
cs
lcall
and
in
cmpsl
add
jecxz
repz
or
js
pushf
loope
jmp
cmp
leave
rcrb
enter
and
fxtract
jl
jle
jle
ja
das
push
dec
call
orl
mov
mov
jmp
stc
test
into
scas
push
stc
loop
push
aaa
mov
jp
dec
push
adc
pop
dec
ja
jmp
daa
pop
inc
outsl
aam
nop
int
inc
shlb
clc
out
dec
cli
shr
jmp
clc
adc
jb
je
js
jp
stc
inc
arpl
pop
push
xchg
insb
mov
dec
mov
iret
jecxz
lods
rcl
adc
ja
push
dec
sti
hlt
xbegin
jg
test
adc
inc
popf
popa
sbb
aaa
out
xchg
je
out
cmp
cmp
and
xchg
loop
dec
int
repnz
loop
call
fidivl
xchg
mov
cld
fcomi
xor
popa
jo
fmull
rep
rorb
stc
les
push
int3
lock
out
and
leave
ds
and
xor
hlt
push
outsl
ja
sub
jbe
test
mov
movzwl
in
jmp
cmp
pop
testl
pop
push
add
cmpsb
adc
cmp
incl
jle
imul
mov
cmp
adcl
cmpsl
cmp
loopne
call
je
mov
xor
add
push
xchg
mov
fcoms
adc
sbb
test
or
pop
ss
jmp
aad
scas
cli
xchg
je
mov
jmp
icebp
fsubrs
cwtl
fwait
aas
adc
cmp
mov
cltd
out
cmc
das
stc
out
cmp
iret
lcall
ret
push
add
aas
jg
repz
repz
call
sub
jp
sbb
adc
inc
enter
mov
int3
cmp
cld
out
dec
ljmp
flds
addr16
add
shl
push
jno
jge
test
orl
in
push
pop
xchg
sub
sub
sub
pop
xor
js
std
mull
xchg
pop
ljmp
sub
adc
xor
popf
cs
mov
les
sbb
xchg
aam
jle
popa
jo
jb
aam
fmuls
jae
cwtl
js
cld
pop
lock
lret
and
pop
call
xor
xchg
push
rorb
fs
je
stos
dec
pop
pop
and
mov
int3
out
loop
repz
out
jb
loope
int3
xchg
push
sbb
add
movsb
in
sbb
ds
aas
es
dec
jp
or
add
mov
imul
out
sar
jg
js
mov
in
push
pop
mov
mov
mov
xor
xchg
cmp
inc
movsbl
push
stc
nop
stc
lods
stc
test
hlt
push
clc
jno
aam
fdivr
fdivrl
sub
aaa
push
lods
push
call
push
mov
xor
ja
jmp
mov
mov
add
adc
xor
dec
cmp
and
cld
loope
and
cli
dec
push
or
cld
roll
stc
dec
stc
add
pop
aas
data16
into
jl
cli
push
lahf
mov
rclb
idiv
out
js
pop
sbb
enter
ljmp
andb
out
xchg
add
sub
mov
repz
adc
in
out
sbb
popa
popf
jno
cltd
inc
dec
adc
dec
in
sarl
push
mov
xor
sbb
sbb
push
mov
cld
imul
clts
pusha
inc
cld
mov
cld
je
sbb
pop
mov
int3
dec
sub
je
lcall
dec
repnz
lods
and
add
add
sub
add
movb
rclb
scas
sbb
dec
push
sti
add
je
or
ss
push
nop
daa
mov
jl
repnz
add
xchg
mov
adc
test
push
or
jmp
inc
xchg
and
jmp
and
pusha
jg
cs
add
fnstsw
xchg
test
stos
push
add
add
test
inc
enter
test
jb
pop
inc
roll
repnz
fistpl
sahf
enter
pop
loopne
dec
mov
add
mov
pop
test
daa
xor
test
ds
in
pop
add
adc
jnp
add
add
sahf
xor
add
mov
add
subl
fiaddl
imul
fbld
mov
aaa
cmp
mov
rorl
push
cmp
js
pop
insb
xlat
mov
adc
hlt
sub
addb
dec
les
sbb
push
sbb
call
cmp
mov
stos
add
or
out
xor
inc
inc
or
out
scas
push
in
adc
xchg
mov
ret
shlb
inc
or
mov
inc
pop
cmc
adcb
stc
add
cmpsb
adc
pop
sbbb
call
sbb
mov
or
add
add
pop
push
stc
cmp
fs
sbb
bnd
cli
loopne
cmp
sub
mov
jecxz
ret
push
je
test
xor
xchg
movb
shlb
mov
out
pop
mov
or
or
aam
push
icebp
mov
add
and
lods
stc
testb
sbb
out
int
popa
stos
movsb
cmp
cmp
popa
out
jmp
test
jo
je
icebp
jl
inc
test
add
mov
add
out
inc
xor
ret
fwait
ret
add
cmpb
mov
mov
dec
cmpsb
mov
or
into
loope
jl
nop
pop
cwtl
add
iret
mov
bnd
inc
jne
int3
mov
push
outsl
cwtl
icebp
jae
mov
icebp
push
cwtl
test
lods
push
loope
push
sub
lds
inc
dec
xor
mov
mov
adc
call
sarl
xchg
add
cld
jmp
loopne,pn
mov
pop
push
sbbb
jno
repnz
movsl
push
loope
jbe
add
subb
in
xchg
dec
or
lcall
mov
push
adc
push
aam
in
pusha
pop
push
sbb
pop
sub
and
rorl
lds
les
add
test
addl
push
add
mov
lcall
or
iret
add
leave
cmp
lds
rorl
mov
add
xor
sub
jbe
lock
add
out
gs
mov
sub
cmc
push
mov
cmp
in
xchg
rclb
add
or
or
push
adc
fstpl
cmpl
pop
jg
dec
cld
mov
add
and
aam
or
pop
add
cwtl
dec
and
push
pop
pop
push
mov
aad
jnp
mov
push
nop
pushf
mov
pop
sub
call
xor
or
pop
adc
or
pop
lock
inc
and
and
add
lahf
lahf
mov
or
mov
stos
mov
mov
pop
movsb
stc
push
dec
jne
add
out
sub
addb
mulb
out
fsubl
push
pop
mov
or
add
lea
cmpsb
xchg
sub
sbb
clc
push
push
bound
sbb
jb
adc
xor
inc
lock
jmp
insl
jle
test
and
xchg
nop
mov
lret
lods
addb
aad
pop
mov
add
xor
es
jle
fistl
bound
inc
test
push
arpl
mov
push
dec
or
jae
sub
push
rcll
inc
dec
daa
push
cmp
stos
stc
ror
or
xor
push
xlat
insb
adc
mov
das
sarl
shl
mov
subb
enter
sbb
or
jne
mov
cld
sub
dec
inc
add
stos
add
lahf
adc
in
push
and
sbb
popf
mov
lods
cld
add
mov
sbb
addb
inc
pop
xchg
push
cmpb
and
stc
cmpl
adc
outsl
xor
push
pop
lret
push
jle
testl
adc
jbe
mov
or
icebp
adc
adc
or
jns
push
int3
dec
sub
pop
lahf
cmpsl
mov
mov
cmp
add
push
ss
add
add
flds
or
js
add
push
push
inc
mov
or
pop
lock
sub
fwait
repz
and
push
rcrl
mov
push
sub
sub
andb
lds
repnz
add
xchg
adc
push
pop
inc
cwtl
or
mov
and
and
add
xchg
adc
push
pop
imul
in
dec
mov
mov
lds
and
rorb
fmull
adc
add
xchg
jl
sbb
add
ss
mov
cmp
fstpt
push
into
lds
push
and
sbb
jmp
test
xchg
addl
int
dec
cmp
aam
or
and
mov
sub
push
lret
out
test
sbb
or
lods
adc
push
dec
xchg
xor
aam
adc
out
mov
sbb
and
push
pusha
sbb
mov
add
add
cmp
mov
incb
mov
cmpsl
push
add
test
inc
xor
std
shll
mov
push
mov
and
sbb
mov
and
test
rorb
mov
adc
xchg
add
sbb
imul
xor
mov
test
jbe
push
or
mov
mov
repnz
dec
fldl
xchg
push
iret
scas
addb
adc
arpl
rcrl
add
out
and
jne
dec
xchg
jecxz
rolb
sub
cli
or
ret
dec
jbe
inc
push
popl
lcall
mov
mov
pop
jno
xor
add
in
and
sbb
adc
jecxz
ret
xchg
adcb
and
pop
sbb
aas
fs
add
inc
pop
cmpb
mov
xchg
mov
les
xor
stos
enter
jnp
mov
mov
insl
jno
sbb
xchg
push
repnz
mov
fcoml
adc
jle
mov
stos
mov
mov
loop
sub
sbb
adc
xchg
mov
adc
movsb
inc
or
push
dec
inc
orb
loop
dec
cmpsb
rolb
xor
daa
adc
xchg
mov
loopne
and
movsl
xchg
sti
aaa
add
mov
cmp
add
lock
jb,pt
clc
mov
adc
imul
pop
add
cmpsl
mov
icebp
jns
aas
or
in
sbb
dec
stos
cmovno
mov
jne
stos
xchg
push
mov
nop
mov
mov
cmpsb
nop
add
add
and
pop
test
test
arpl
dec
sub
dec
stc
cmpsl
push
repnz
xor
mov
insb
xor
out
adc
mov
push
xchg
mov
mov
iret
loopne
push
test
int
scas
test
ljmp
push
mov
shl
and
sbb
cmc
xchg
mov
and
nop
inc
test
call
outsl
xchg
push
mov
add
loop
stos
adc
xchg
pop
adc
pushf
or
in
cmp
add
push
mov
sahf
das
addb
sbb
sbb
enter
lret
mov
pop
pop
data16
inc
jle
cmp
adc
aam
or
pop
lcall
les
stos
xor
push
and
push
cltd
outsb
pusha
push
inc
adc
addr16
fisttps
jo
insl
call
js
xchg
stos
and
sbbb
sub
cld
cmp
push
stos
xor
push
bound
push
mov
xchg
in
es
mov
nop
add
add
imul
fiaddl
cmpsb
rclb
mov
adc
lock
in
xor
inc
cmp
add
sbb
leave
pushf
adc
inc
sub
push
adc
add
jle
xchg
add
sub
mov
ss
ljmp
add
popf
cmp
xchg
xor
aaa
test
ds
repnz
test
mov
ret
or
imull
add
sub
and
push
lds
pop
add
out
inc
xor
fcoml
and
les
inc
imul
add
inc
imul
and
push
stc
push
mov
pop
add
adc
ret
fdivrs
push
mov
loop
jmp
test
add
mov
movsl
repz
add
addb
mov
sbb
dec
ljmp
mov
mov
pop
xor
inc
rolb
sub
ja
movsb
mov
jno
add
inc
xor
notl
sub
sarl
add
mov
stos
add
pop
scas
sti
movsl
or
pusha
cmp
adc
sbb
lret
add
xchg
ret
jb
jmp
push
push
mull
mov
mov
push
sub
dec
xor
rorl
jne
pushf
jnp
fwait
rorl
inc
in
dec
push
push
add
enter
icebp
add
packuswb
dec
pusha
inc
loopne
mov
test
outsl
nop
cmova
or
adc
loopne
cmpsb
xor
stos
fs
mov
fdivrs
dec
push
test
cmp
rclb
sbb
es
xchg
pop
scas
adc
xchg
loopne
je
or
pop
subb
adc
and
adc
inc
inc
in
test
inc
xchg
ret
jne
mov
jb
jle
lods
int
sbb
add
in
dec
pop
stc
mov
int3
sub
add
cmc
ficomps
and
adc
add
pop
ror
or
inc
lock
fnstenv
pop
sub
lret
inc
sub
push
scas
push
add
and
call
and
inc
or
rolb
loope
jg
sub
push
lea
lahf
adc
sub
adc
jae
sahf
jge
add
test
leave
push
loopne
les
mov
shll
leave
sub
adc
xchg
loopne,pn
cli
or
repnz
outsl
push
shrb
jg
and
lock
js
aaa
mov
jecxz
add
mov
jno
enter
cmp
mov
xchg
push
mov
pop
inc
repnz
mov
add
out
cltd
add
test
into
push
testl
repz
mov
adc
xchg
repnz
or
and
lods
add
testl
jmp
xchg
add
xchg
sub
and
adc
and
jnp
push
add
iret
inc
fcoml
ja
popa
push
cmp
mov
add
mov
pop
gs
stc
cmpsl
dec
sbb
rclb
and
mov
call
jle
jge
cmp
daa
pop
jae
inc
test
push
and
adc
add
mov
lret
inc
jb
add
mov
add
mov
fwait
or
push
rclb
scas
in
adc
adcb
push
stos
sub
mov
and
dec
add
les
lahf
out
shll
mov
add
adc
adcb
inc
mov
sub
xchg
daa
add
test
sub
out
xchg
dec
pop
cmp
in
nop
cmp
sub
mov
pop
push
rcll
loope
mov
fs
inc
loopne
push
sub
sti
sub
cwtl
nop
push
pusha
cmp
add
adc
sarl
sbb
lods
add
in
shlb
mov
and
push
or
xor
push
sub
adcb
sbb
popf
rolb
jne
jno
mov
sub
int
icebp
xchg
mov
lahf
pop
adc
insb
jl
add
or
insl
subb
movq
inc
sub
call
jns
ds
pop
les
push
adc
push
pop
mov
out
sbb
fs
jo
mov
inc
xchg
jno
test
cmpsb
pop
insb
loop
mov
jo
shrl
leave
cld
push
cmp
jnp
test
pop
dec
stc
cmc
push
xchg
push
sbb
call
out
lock
shll
pop
jmp
xor
and
push
jb
in
cmp
adc
fnstcw
cmp
icebp
divl
inc
leave
xchg
push
lcall
aam
mov
add
aad
xchg
sub
sahf
mov
adc
push
sub
add
adc
pop
faddp
fwait
lock
cmp
das
adc
lea
jmp
mov
jg
loopne
mov
test
rorb
shll
je
xor
popa
cli
les
xchg
push
and
adc
pop
je
rcrb
xlat
and
xor
gs
xchg
pop
xchg
cmp
ss
dec
iret
push
adc
bound
jns
mov
mov
bswap
and
js
jp
jle
push
pop
mov
dec
sub
pop
jle
jmp
mov
rorb
mov
jp
adc
jae
xchg
xor
pop
les
push
add
inc
mov
xor
jg
leave
or
in
adc
dec
jno
stos
in
fmuls
add
or
sbb
pop
and
out
leave
arpl
jae
leave
movsl
fistpl
mov
popa
push
prefetch
xor
pop
mov
jns
xorb
xchg
jg
xor
cmp
add
push
and
adc
leave
test
dec
clc
fnstcw
adc
push
adc
adc
cs
and
xchg
dec
push
ds
out
stos
scas
dec
aad
icebp
xor
cld
inc
das
dec
aas
push
adc
cmp
push
int
sbb
hlt
orb
std
add
or
dec
push
rcrl
push
jnp
test
sbbb
xor
mov
nop
or
dec
and
adc
sbb
sub
xchg
aam
jb
into
push
push
xchg
or
push
add
jge
dec
ficomps
cmp
mov
loopne
imulb
leave
jmp
push
and
adc
add
push
nop
insb
ss
movsb
fs
call
jle
push
frstor
ss
xor
jl
stos
dec
loope
mov
mov
and
mov
pop
cmpsb
add
pop
adc
daa
xchg
or
push
jae
fnstenv
cmpsb
adc
adc
int
pop
mov
jno
cmpsl
xor
andb
jno
aas
stos
fwait
aas
add
aad
or
push
ja
mov
adc
sub
dec
cmpsb
sub
adc
movsb
icebp
and
jmp
jae
mov
and
shrb
fwait
push
fimull
adc
popa
xchg
movsl
test
imul
nop
inc
add
ljmp
jb
adcl
imul
test
scas
loop
sahf
mov
and
jo
sbb
push
add
or
and
push
popa
fadds
and
sbb
add
rorb
push
xor
jecxz
dec
xchg
mov
jno
out
or
cmp
pop
es
aam
sbb
iret
repnz
adc
pop
test
aaa
push
stos
sub
and
and
jmp
shll
xor
push
push
sbbl
dec
add
subl
dec
leave
jae
inc
mov
js
sub
push
jmp
std
and
push
cmp
add
scas
xchg
int3
add
sbb
xchg
je
fst
xor
ja
push
dec
push
xor
stc
int
jne
cmp
add
pop
orb
inc
daa
adc
mov
dec
xor
cmp
pop
loope
dec
dec
rcr
decl
test
dec
stos
adc
rol
and
test
std
fildll
or
fisttpll
inc
xor
clc
sub
add
out
enter
sub
imul
mov
inc
cmp
in
cmpl
mov
ljmp
pop
adc
daa
inc
pop
daa
movsl
pop
dec
cmpsb
mov
pop
imul
jo
push
mov
adc
lret
inc
shlb
adc
xchg
sbb
mov
mov
rorb
inc
xchg
xor
push
add
add
or
test
pushf
cmp
inc
arpl
adc
mov
adc
cltd
xchg
mov
and
mov
je
inc
pop
cmp
test
mov
fwait
inc
mov
cs
getsec
movsl
add
test
test
xchg
sbb
jle
test
out
filds
pop
mov
add
add
mov
sub
add
add
sbbl
mov
xor
adc
jnp
or
push
scas
test
fs
add
or
xor
pop
nop
inc
call
or
sbb
in
jmp
stos
push
je
mov
or
pop
adc
outsl
or
add
repnz
add
test
xchg
pop
pushl
fs
bound
xchg
dec
stc
push
cwtl
jp
ret
test
in
mov
lret
bound
add
icebp
shll
or
push
pop
add
add
jo
cmpsl
lahf
bound
add
sbb
clc
xor
movsb
or
cwtl
and
jge
and
mov
inc
loope
mov
xchg
mov
insb
lahf
scas
sub
jns
xchg
jo
je
adc
sbb
mov
sub
cmc
add
loopne
jg
add
pop
inc
and
bound
leave
xchg
jmp
loop
jns
push
add
add
sub
push
stos
test
shlb
adc
orb
push
dec
rolb
and
in
inc
pop
add
jo
inc
je
sbb
adc
cltd
std
insl
call
aad
push
add
std
xlat
or
push
sub
mov
xor
jecxz
and
add
inc
inc
and
dec
and
adc
and
cmp
clc
mov
mov
xchg
jg
cmp
dec
push
push
pop
lds
xchg
cmpsb
ljmp
and
add
mov
inc
inc
sbb
stos
push
dec
cmpsl
add
push
fldenv
stos
xchg
jmp
cmpsl
adc
mov
add
rorl
pop
xor
pop
cld
test
xor
adc
test
mov
xor
cmp
mov
fs
sarb
lods
or
push
sub
cwtl
insl
repnz
mov
sahf
and
jl
pop
pop
shrl
lods
adc
push
pop
or
xchg
cwtl
cld
nop
push
mov
mov
xor
cmp
jmp
subl
enter
lcall
fstpt
xor
aas
inc
push
add
push
add
xor
leave
jns
sahf
popf
addl
adc
call
xchg
mov
add
outsb
sahf
test
mov
jge
js
enter
xor
dec
int
or
inc
lahf
loopne
aaa
adc
les
and
lcall
jge
cmp
shlb
and
arpl
movsl
dec
bound
inc
mov
andb
mov
and
inc
insl
and
add
rcrb
int
lret
adc
out
mov
and
cmpsb
xchg
pushf
or
lahf
out
stos
das
imulb
or
pop
xor
pop
std
js
popf
mov
call
adc
adc
or
adc
iret
repnz
lock
cli
je
aad
xchg
dec
gs
fwait
add
push
xchg
jne
and
xor
jge
loopne
inc
test
or
sub
out
push
cmp
dec
add
daa
mov
stos
mov
cli
inc
out
rorb
ret
pop
test
test
add
adc
add
dec
test
mov
fists
dec
clc
dec
jne
inc
jb
add
sahf
or
jl
pop
pop
or
dec
add
inc
pusha
and
jne
test
mov
mov
adc
xor
pop
adc
cmpl
sub
mov
add
rorl
cmp
push
push
mov
test
jns
dec
fwait
or
jns
pop
push
xchg
test
rolb
lret
sub
xor
cmpxchg
negl
mov
inc
vmwrite
cmp
bound
cmpb
fnstsw
or
shlb
test
add
adc
rolb
sub
dec
adc
lahf
popf
dec
pop
add
dec
sbbb
dec
int3
or
loopne
jnp
mov
jl
jg
xor
mov
mov
or
or
mov
outsb
add
mov
sbb
or
arpl
sub
je
and
movsb
ret
mov
add
mov
shlb
rolb
les
inc
lock
jno
mov
sub
scas
xchg
outsb
or
inc
movsb
xor
sub
out
push
mov
push
les
loopne
cli
and
pushf
add
rolb
es
outsl
dec
add
cmc
push
loope
xor
lahf
push
stos
popa
or
add
stc
or
cmp
dec
push
jo
cmp
jno
pop
and
fs
and
xchg
mov
mov
mov
lahf
sub
add
add
jnp
and
shlb
leave
lods
out
push
ror
je
cmp
rclb
lea
imul
leave
xor
mov
aaa
or
cmp
sbb
push
dec
dec
mov
scas
imul
test
or
imul
and
lcall
addb
or
pusha
imul
adc
and
lcall
add
push
jo
push
add
dec
add
jae
es
push
movsl
dec
cmp
dec
es
rclb
jno
sub
adc
ret
int
or
push
roll
rorb
xchg
lods
rcrb
je
mov
out
imul
mov
nop
xchg
or
and
xor
ror
jecxz
scas
insb
dec
push
inc
mov
or
lahf
jns
cmp
mov
test
and
pop
inc
push
ret
pop
repnz
ret
or
inc
js
dec
mov
scas
mov
ja
sbbb
and
out
loop
outsl
psubd
addb
call
push
add
rolb
and
repz
mov
leave
adc
lret
fwait
or
cmp
call
push
push
cmp
adc
sbb
add
add
je
mov
mov
movsb
push
rcrl
sbb
mov
and
cld
insl
cli
movd
lret
iret
mov
out
push
fcoms
repnz
or
or
sub
pop
sbb
fistl
and
es
pop
test
cmp
jp
pop
sbb
sbbb
aad
sub
sub
out
imul
leave
insl
imul
shl
movsl
arpl
mov
lods
pop
inc
add
push
inc
sub
sbb
adc
adc
cwtl
and
xor
int3
ljmp
push
adc
mov
add
adc
ss
add
sbb
stos
adc
roll
pop
mov
adc
adc
lret
fs
dec
adc
bound
push
adc
stos
or
jae
push
push
push
rcrb
push
xor
cli
add
pushf
inc
mov
sub
arpl
ret
or
lret
jo
sbb
push
add
test
cwtl
add
nop
sub
sub
in
andb
cmp
mov
addl
insl
aaa
mov
ret
push
icebp
push
jo
inc
testb
shll
xor
loope
inc
pusha
sub
sub
andl
mov
sbb
aam
arpl
xlat
subb
rcrb
addb
fcomps
or
jmp
jp
add
icebp
rclb
pop
int
stos
add
sub
bswap
add
or
and
sbb
mov
xor
lcall
jo
in
iret
push
adc
cmp
nop
daa
mov
jno
rolb
inc
add
xor
xchg
push
sbb
sti
test
push
dec
rolb
add
jo
cltd
cmp
mov
inc
lods
or
flds
loope
cmpl
loopne
sbb
mov
push
push
sub
scas
mov
add
xor
int
adc
pop
inc
dec
rclb
push
or
add
out
lds
adc
push
stos
leave
rolb
cmp
icebp
sub
loop
and
or
pop
xchg
push
inc
je
push
adc
jo
add
inc
adc
loope
rorb
arpl
dec
pop
test
add
xor
in
sub
aaa
jno
or
scas
sub
gs
inc
and
and
add
shlb
in
stc
xor
clc
mov
sub
gs
xchg
pop
inc
xorl
pop
adc
push
mov
and
shrb
sub
cwtl
and
bswap
pop
xchg
sbb
or
cmp
cmp
push
aas
test
test
xor
mov
add
fsqrt
mov
push
mov
lods
je
popf
push
dec
orps
ret
push
sub
daa
mov
add
das
xchg
shlb
pop
cmpb
add
pop
cmpsb
loopne
xorl
inc
cmpsl
loope
shlb
push
add
push
push
push
add
push
push
push
paddd
inc
push
nop
adc
cld
inc
test
xor
or
pop
lcall
in
sbbl
stos
jne
dec
outsb
test
movsl
dec
xchg
fidivs
pop
cs
dec
and
add
inc
rol
cmp
pop
dec
cmp
nop
lods
mov
fistpl
mov
lds
lock
jmp
aam
adcb
sbb
pusha
mov
daa
sub
lret
out
or
loop
call
xor
sub
add
mov
rsqrtps
pushl
xor
pop
int3
ret
gs
xchg
add
push
je
lret
lea
bound
lds
test
jl
push
sbb
in
add
lahf
and
xchg
stos
mov
mov
sub
imul
add
inc
sbb
cmp
adc
enter
dec
or
push
scas
sbb
cmp
rorb
dec
clc
sahf
jecxz
cmp
adc
mov
push
push
jmp
or
pop
mov
shrb
subb
mov
jecxz
dec
repz
jl
nop
js
add
leave
in
in
or
out
dec
movsl
mov
cmp
or
and
or
dec
inc
push
jo
movsl
pop
push
mov
scas
ficoml
out
mov
fnstsw
pop
cmpsb
stos
mov
and
inc
scas
aad
inc
add
mov
add
push
push
je
add
jno
add
xor
xchg
sub
mov
push
ja
stos
subl
mov
stos
repnz
mov
pop
js
push
add
adc
imul
add
cmp
or
mov
std
js
les
std
out
inc
movsl
xchg
adcl
jnp
and
add
push
sbb
je
test
pusha
in
dec
jg
pop
nop
xor
popa
insl
iret
sbbl
andl
inc
jb
push
leave
or
or
xor
ret
jle
test
cmpsb
rcrl
loop
push
cmp
push
pop
add
out
or
push
add
outsl
bound
subb
add
add
mov
insl
out
imul
dec
mov
add
rorb
jne
psubsb
lcall
push
inc
and
inc
add
pop
jns
mov
add
push
inc
xor
hlt
adc
pop
push
push
adc
imulw
sbb
rcrb
mov
subb
or
sub
testl
mov
jo
xchg
xor
and
mov
nop
inc
aad
lods
pop
cmpsb
push
push
add
fadds
and
sub
inc
xor
inc
push
lar
nop
or
jnp
les
pop
aaa
fcmovu
cmp
jo
inc
roll
or
cld
sar
inc
sub
fsubl
test
adc
and
push
jne
mov
lea
push
mov
inc
and
frstor
xor
push
and
enter
sub
xchg
add
xchg
addr16
push
adc
xlat
jbe
and
sbb
xchg
xor
sub
sub
and
or
push
cwtl
nop
add
mov
rolb
adc
adc
ljmp
and
and
mov
repz
test
leave
inc
mov
or
add
dec
inc
mov
stos
in
es
mov
loopne
xor
dec
or
push
or
xchg
mov
in
add
bound
pusha
pusha
test
or
adcl
inc
stos
in
inc
jne
or
jl
js
ds
and
fs
je
subb
push
movsl
and
adc
inc
rcll
xor
push
add
repnz
jno
jle
xlat
and
pop
inc
int3
mov
and
pop
adc
lds
ret
sub
xor
pusha
das
clc
jmp
ror
aad
pop
adc
mov
adc
pop
cmp
mov
mov
sub
mov
inc
adc
mov
jnp
cmp
imul
mov
inc
inc
sbb
shll
pushf
and
shll
adc
xchg
push
lret
scas
mov
push
add
xchg
daa
xor
cmp
add
test
int
cwtl
cmp
aad
loope
push
sbb
adc
push
and
popf
nop
addr16
xchg
and
stos
sbb
cwtl
push
lods
stos
push
and
add
adc
aaa
inc
add
lret
lahf
sub
add
sub
mov
jge
xor
push
test
aas
testl
pop
mov
inc
mov
addr16
in
mov
sub
fldl
cmp
add
or
lock
dec
ljmp
movsb
mov
push
and
int
scas
sub
je
mov
add
add
mov
sbb
in
cmp
outsb
push
or
cmp
mov
pop
xchg
cmp
jo
mov
inc
scas
xor
pop
mov
push
xor
daa
sbb
add
xor
xchg
jle
scas
cmp
cmpsl
dec
dec
les
push
mov
push
push
and
mov
rcrb
ss
cmp
sbb
xor
les
test
add
and
cmp
or
mov
dec
jo
mov
test
lea
or
sbb
mov
and
adc
cwtl
push
mov
sahf
inc
push
sub
add
test
jbe
adc
sub
lods
mov
jecxz
nop
jo
daa
sub
and
ret
rep
or
cs
push
ss
xchg
push
inc
adc
pop
aaa
pop
and
loop
repnz
push
add
bound
clc
xchg
jno
sub
pop
test
cmpsb
loopne
xor
dec
dec
cmc
dec
add
in
test
cmc
sub
push
loop
mov
xchg
jo
adc
xor
push
add
xor
push
fcoml
pop
mov
lea
inc
or
pop
xchg
pop
jl
jge
or
je
lahf
adc
enter
movsb
add
inc
dec
popf
pop
adc
and
and
stos
test
xchg
push
jb
inc
inc
or
fwait
or
push
les
sbb
test
cmp
pop
mov
addb
orl
cs
mov
rcll
pop
add
mov
mov
push
dec
inc
jae
pop
xchg
pop
or
or
fsts
aam
ret
mov
adc
adcb
out
adc
mov
aam
loope
push
cmp
or
add
sub
adc
das
pop
and
sub
inc
sub
int
outsb
pop
insl
aaa
imul
jmp
add
js
out
aas
imul
or
add
lcall
mov
push
dec
push
out
inc
bound
nop
lret
rolb
sbb
jg
mov
push
aad
jb
dec
nop
push
add
test
jl
pusha
dec
and
and
js
adc
sub
subb
imul
add
insb
xchg
ret
dec
call
idiv
xchg
stos
rcll
mov
adc
mov
ret
call
add
sbb
pop
mov
push
pop
xchg
adc
cltd
push
xchg
mov
outsl
sbb
inc
mov
rorb
and
cmpsl
ds
adcl
push
xchg
sbb
mov
inc
or
repnz
inc
leave
sbb
in
mov
cltd
cmpsb
add
inc
dec
push
mov
in
push
add
scas
pusha
cmp
push
inc
add
vpcmpeqb
les
incl
stos
sbb
and
cmp
push
arpl
push
imul
add
cs
fucomp
xchg
mov
pop
mov
jae
fildl
xchg
ss
test
push
cmpsl
movsb
lds
movsl
add
push
jmp
aas
rorb
adc
sub
orl
inc
inc
bound
cmp
xchg
cmpsl
jl
adc
jecxz
adc
mov
add
or
fwait
sub
xor
or
loope
lock
xor
ds
xor
or
test
sub
add
ljmp
mov
jmp
and
imul
and
stos
inc
inc
loope
sbb
push
inc
cltd
or
and
add
add
adc
cwtl
sbbb
adc
out
lods
hlt
addl
mov
xor
push
xor
push
dec
mov
add
add
mov
dec
dec
aaa
adc
mov
call
insl
pushf
xlat
and
mov
add
mov
mov
add
adc
call
xchg
mov
jmp
mov
mov
movsl
loope
sbb
add
mov
xchg
adc
push
cmp
sbb
inc
das
adc
push
stos
cltd
pop
jp
push
push
rclb
add
cmp
add
adc
xor
or
cmp
sbb
pandn
push
rorb
sbbb
dec
subb
push
rclb
or
or
xor
inc
in
icebp
mov
push
imul
push
mov
int3
add
xor
sub
jecxz
mov
cs
adc
adc
add
sbb
mov
cmc
inc
xor
sub
adc
movsb
icebp
enter
fsts
adc
cmp
dec
andb
stos
cmpl
or
ror
es
cmp
cmpl
sbb
push
inc
and
jae
mov
add
cmovs
ret
dec
sbb
push
or
xor
adc
sbb
sti
insl
add
pop
and
add
dec
ret
xlat
in
xchg
add
fisttpl
xchg
cmp
dec
inc
pop
sub
sbb
mov
lea
popa
std
pop
inc
test
pop
fisubrs
add
orl
lea
and
xchg
test
mov
and
aas
push
adc
mov
sbb
or
and
les
cmpb
aad
cmp
bound
push
imul
adc
gs
add
sub
dec
fstpl
enter
dec
shrb
lea
add
sub
add
imul
and
pop
add
adc
insl
and
int
or
out
or
mov
jo
test
mov
enter
test
sarl
sub
and
sbb
arpl
jg
add
add
and
hlt
popf
stos
adc
mov
sbb
sbb
add
mov
test
add
daa
je
and
fs
or
adcl
adc
in
xor
push
lret
add
daa
and
mov
inc
mov
or
push
and
test
test
and
add
sahf
lea
repnz
xchg
push
add
cwtl
loope
ss
push
ja
jne
or
push
or
adc
or
cli
mov
or
je
push
adc
push
or
arpl
mov
push
andb
cltd
fcmovnbe
adc
scas
or
push
and
inc
rolb
pop
push
inc
pop
inc
je
int
mov
xchg
mov
push
adcl
xor
test
shlb
or
xchg
push
arpl
push
cmp
sti
mov
rclb
adc
sbb
mov
or
stos
bswap
xchg
add
adc
pop
push
call
and
push
xlat
adc
pop
filds
mov
ret
add
nop
mov
mov
ret
push
push
pop
or
dec
jmp
jnp
adc
and
add
mov
mov
stos
stos
sbb
aam
push
scas
roll
test
or
or
sub
sub
xchg
mov
daa
loopne
pop
enter
add
mov
pop
or
scas
outsb
dec
or
loopne
insb
cmp
xchg
sarb
push
and
aaa
mov
shlb
cmp
mov
inc
jmp
test
rorb
adc
pop
xchg
cwtl
jo
xchg
iret
push
addr16
add
or
mov
test
stos
es
nop
dec
outsl
jecxz
pop
inc
test
add
in
sub
pop
add
add
mov
add
dec
sub
adc
or
pop
loop
adc
pop
add
cmp
lods
leave
out
xor
push
mov
scas
adcb
or
mov
das
inc
icebp
xor
push
mov
mov
xor
sbb
jmp
in
xorl
xor
loop
fwait
ret
and
pop
dec
sub
pop
push
andl
mov
add
ljmp
inc
and
adc
add
and
cs
adc
sub
add
or
add
mov
cmp
sbb
add
sub
gs
out
mov
into
sbb
repnz
sbb
subl
pusha
xchg
xor
mov
sub
jbe
cmp
rolb
fnstsw
imul
dec
push
ret
push
pop
jno
cwtl
in
mov
clc
or
popf
sahf
arpl
xor
cmp
test
inc
sub
inc
and
gs
imul
ljmp
or
repnz
mov
or
dec
jne
inc
arpl
jae
out
or
add
sbb
rclb
lods
adc
and
scas
add
lds
xor
icebp
jno
add
stc
mov
clc
mov
push
adc
loope,pn
lods
orb
adc
pushf
andl
test
cmp
or
inc
and
jb
add
add
inc
pop
xchg
cli
push
push
adc
orl
stos
push
xchg
push
shlb
pop
shll
add
mov
sbb
add
xchg
sbbl
loopne
lcall
push
inc
jne
sub
sbb
and
test
xchg
jne
jns
lods
xlat
xor
push
cmpb
push
add
or
outsb
nop
cmp
lahf
adc
cmp
fbstp
popa
push
and
fistl
fildl
pusha
test
icebp
pop
mov
push
sbbl
cmp
push
mov
sub
cmpsb
test
mov
loop
repz
sbb
push
lea
cwtl
verw
inc
sahf
jae
or
mov
inc
pop
stc
sbbb
push
in
adc
cmp
inc
adc
dec
push
sub
mov
imul
adc
jnp
dec
loop
fnstcw
mov
pusha
push
add
xor
pop
aas
jo
addl
jecxz
or
xor
push
jmp
inc
testl
rolb
sub
mov
sub
sbb
xor
vcmpss
mov
dec
and
jno
jp
addr16
daa
test
inc
xchg
and
add
lds
and
add
sbb
ja
stos
movsb
or
push
mov
push
mov
mov
rclb
jg
add
int
or
in
sub
cltd
bound
xor
loopne
mov
inc
cld
jg
pop
adc
pop
dec
test
mov
insb
ret
fdivs
pop
inc
dec
dec
xor
jo
inc
and
adc
inc
cli
inc
xchg
push
and
fwait
rclb
xor
in
cld
lock
pop
push
and
dec
cwtl
mov
jo
adc
and
and
fdivrl
push
rclb
push
les
adc
push
dec
test
subb
pop
cmp
loop
xor
and
adc
lods
jno
sti
dec
pop
cmp
addr16
mov
cmp
aad
inc
jl
das
ffreep
test
insl
adc
push
leave
lea
inc
push
adc
icebp
jbe
jo
cwtl
fwait
mov
insb
add
xchg
cmc
add
rolb
add
push
pop
add
arpl
repnz
inc
popl
xchg
test
hlt
sub
nop
dec
sbb
sbbb
pop
and
and
stos
xchg
mov
roll
push
sbb
cwtl
cmp
adc
test
add
pop
nop
dec
ljmp
and
or
ret
jno
push
mov
add
dec
pop
adcb
mov
in
jmp
adc
pop
xor
or
mov
orb
repz
clc
pop
mov
adcb
inc
adc
scas
leave
mov
test
les
movsl
test
sbb
adc
jg
addr16
sbb
rorb
add
ljmp
dec
push
inc
jno
inc
mov
push
sub
mov
add
cltd
mov
add
and
jo
adc
enter
imul
popa
mov
add
lods
pop
or
push
lea
cmpl
mov
les
dec
testb
add
outsl
mov
mov
inc
fdiv
test
negl
fstl
adc
jmp
mov
mov
sbb
ret
mov
repnz
jmp
mov
add
inc
xor
inc
gs
ds
mov
xorb
mov
adc
dec
and
inc
add
push
jno
mov
stos
xor
scas
enter
mov
jecxz
stc
add
mov
cmpsl
xchg
jecxz
xchg
pop
imul
add
pop
nop
sbb
xchg
sub
mov
adc
push
mov
push
xor
fcoms
and
frstor
xlat
adc
shlb
add
or
fwait
adc
inc
jge
add
add
leave
icebp
int
das
addb
leave
add
arpl
ret
and
push
and
add
cmp
inc
jmp
jo
or
scas
aas
sub
je
add
add
mov
aad
fsts
aam
and
adc
fstps
sbb
inc
pusha
or
int3
inc
pop
xor
and
inc
pushf
test
popf
test
addr16
insb
out
sbb
shrb
popa
daa
sub
sbb
bound
lahf
cwtl
adc
add
dec
in
movsb
mov
mulps
or
xchg
movl
imul
add
sub
push
add
adc
push
repz
xor
arpl
and
jo
imul
hlt
fldenv
jno
dec
es
xor
ret
lds
ret
sti
mov
icebp
push
cmp
and
add
pop
les
andl
mov
rcl
stos
pop
add
adc
push
bound
addb
xor
push
in
adc
scas
lahf
xor
inc
dec
cmp
mov
inc
and
test
fcmovb
aam
inc
and
dec
pusha
test
pop
sub
push
or
movsl
push
movsb
mov
dec
xchg
or
popa
pusha
or
jne
sbb
shl
andb
mov
pop
push
adc
pop
xorl
es
in
leave
in
jmp
stos
dec
aas
xchg
es
and
cwtl
loope
aaa
rolb
aam
test
push
mov
pop
stos
and
or
adc
mov
add
subb
lahf
icebp
push
test
pop
les
sub
ljmp
stos
sbb
inc
inc
adc
xor
sbb
dec
cmp
or
pushw
cs
pop
xchg
push
push
mov
pop
rolb
sub
and
sbb
push
mov
fisttpll
inc
xchg
hlt
imul
hlt
jbe
popa
fs
adc
adc
cmp
inc
sub
ds
mov
push
inc
push
imul
rclb
add
push
dec
jecxz
rolb
lock
inc
dec
pusha
and
mov
push
dec
dec
outsl
mov
dec
and
test
add
mov
inc
fisttpll
jo
lcall
mov
adc
and
add
adc
leave
mov
pop
mov
inc
adc
decl
inc
xchg
xor
add
pop
fs
gs
mov
dec
adc
add
push
in
push
or
adc
sbb
pop
add
leave
and
sti
and
mov
mov
add
jne
push
adc
lret
jg
pop
fcoms
dec
mov
jb
add
and
or
adc
sbb
or
sbb
lret
test
movsb
mov
mov
pop
add
push
cmp
loope
test
inc
add
adc
orb
and
adc
or
add
inc
test
inc
inc
sub
xchg
jno
or
mov
dec
sbb
mov
popa
lea
add
sub
jecxz
xor
dec
push
rorb
rorb
xor
enter
inc
sti
xor
adc
mov
adc
push
push
dec
cltd
or
xor
push
and
or
inc
stos
jecxz
mov
test
xchg
movsl
ret
add
fsubl
adc
xchg
adc
mov
orl
cmp
adc
orb
in
fwait
lock
inc
and
jo
lds
fists
arpl
mov
push
adc
cwtl
test
mov
push
mov
scas
or
mov
jmp
sub
jge
push
xchg
add
js
int3
es
fwait
sbb
pop
adcl
jae
rclb
jbe
orb
jns
rolb
add
add
mov
inc
sbb
pop
jmp
dec
push
gs
pop
push
cmpb
cmpsb
inc
jmp
jo
and
adc
mov
push
repnz
loop
stos
cltd
push
cld
sbbb
xchg
mov
add
mov
shlb
adc
push
xlat
adc
xchg
xor
test
mov
mov
jo
jno
adc
inc
and
mov
inc
mov
ss
and
push
jg
int
adc
adc
mov
dec
mov
sbb
out
push
rclb
xchg
lods
push
test
dec
sbb
mov
pop
push
jb
je
xchg
test
or
mov
xchg
daa
fisttpll
call
jl
rclb
or
popa
pusha
mov
or
inc
ret
jmp
popf
shrb
lods
xor
aad
add
cmp
je
fdivrs
inc
insb
loopne
or
in
roll
or
xchg
xadd
ficoms
dec
inc
mov
out
cmpsl
sbbb
dec
adc
xchg
data16
or
sbb
adc
scas
mov
mov
mov
mov
mov
xchg
and
mov
outsb
jb
or
cmpsb
sub
xlat
adc
ret
xchg
sub
inc
dec
jl
add
daa
testb
sub
add
jp
add
push
sbbl
pop
int3
mov
adc
and
sub
into
sub
movsl
pusha
loopne
adc
mov
data16
movsl
mov
cwtl
loope
cmovl
rolb
fst
push
pushf
sbb
lds
int
and
je
popa
dec
dec
push
inc
test
imul
or
inc
decl
sbb
call
xor
pop
xor
les
pop
inc
out
pushf
test
or
std
rclb
cld
fistpll
insl
xor
mov
aas
enter
jl
bound
xchg
icebp
add
mov
aam
add
push
loop
fldl
nop
test
bound
and
daa
adc
insl
insl
cmp
clc
or
inc
add
add
xor
pop
pop
inc
lret
incl
xchg
push
jl
sbb
or
lret
adc
lea
and
sub
je
jmp
inc
loopne
aaa
aas
lds
mov
dec
push
and
cmp
sbb
xchg
int3
andb
shrb
add
adc
stc
cmp
icebp
andl
sbb
jb
insb
pop
inc
jne
sub
jno
sbb
mov
and
cmp
leave
movsl
stos
and
sub
dec
and
jne
ja
adc
push
adc
and
roll
cltd
or
cwtl
mov
push
mov
add
add
or
test
call
in
dec
or
adc
or
pop
push
dec
icebp
loope
mov
push
push
mov
roll
pop
xchg
icebp
xchg
mov
jge
lea
subl
add
xchg
lds
or
xchg
and
and
jno
test
cmp
adc
scas
jae
add
push
inc
add
jge
jb
adc
pushl
je
push
xchg
cmp
xor
adc
popf
xchg
mov
sbb
sub
xchg
inc
adc
cmp
rol
add
sbb
scas
orb
out
mov
push
jmp
ja
outsl
dec
xor
xchg
xchg
jb
xor
lds
push
push
sub
add
xchg
cmp
mov
adc
adc
shl
std
inc
jecxz
or
cmp
jmp
sahf
pop
sbb
add
jl
pop
imul
sub
mov
add
sbb
inc
xor
sub
aad
push
test
cltd
shrl
mov
push
pusha
and
mov
movsl
ret
clc
adc
inc
mov
mov
adc
sbb
inc
int
cmp
add
xchg
push
call
xchg
xchg
inc
dec
mov
lods
cld
stos
sbb
mov
pop
inc
and
pushl
xchg
ds
fcoml
xor
icebp
mov
and
lods
mov
and
bound
xor
xor
mov
movsb
fisttpl
adc
mov
push
or
aam
clc
testl
pushf
mov
divl
inc
adc
add
cmp
inc
xchg
or
adc
jno
inc
push
push
pop
scas
repnz
and
dec
mov
or
mov
push
aaa
sbb
push
pusha
dec
or
mov
and
push
jle
push
sahf
movsl
inc
fistpll
test
lret
adc
xor
pop
mov
loopne
adc
cmpsl
inc
loopne
mov
mov
add
nop
and
dec
add
movl
xchg
adc
and
fs
inc
or
push
and
arpl
insb
rorl
stos
inc
jle
or
mov
std
in
pop
test
jns
ss
xchg
rclb
push
inc
add
push
cmp
aaa
daa
rorl
adc
je
or
test
movl
lods
ljmp
jp
inc
xor
pop
sub
sahf
pop
test
dec
cmp
adc
mov
push
inc
inc
in
xor
add
stos
fcomps
sbb
stos
push
stc
loopne
or
les
imul
ffreep
fs
lods
mov
push
pop
xor
movaps
daa
andl
gs
xchg
mov
xor
mov
mov
push
and
test
movsb
xorl
sub
scas
adcb
pop
mov
sub
frstor
xchg
xor
lods
push
sub
sbb
pop
mov
xor
sbb
leave
push
push
add
add
test
or
inc
or
ss
jecxz
cwtl
xchg
imul
cmpsb
add
inc
imul
mov
les
call
stc
xchg
sbb
in
lea
xor
adc
sub
inc
push
popa
mov
xor
test
push
dec
daa
addb
mov
and
sub
adc
pop
and
lcall
into
add
cs
nop
cmc
in
fcmovnb
cmc
add
aam
add
push
faddl
dec
push
pusha
mov
inc
sbb
rcrl
dec
adc
sbb
add
and
push
iret
adc
inc
push
jbe
je
dec
rorl
add
aaa
jae
jno
clc
sub
mov
mov
adc
and
jae
sbb
aam
fcoml
xchg
push
rclb
and
cmpsb
mov
test
or
popa
push
loop
sbb
sbb
inc
add
clc
adcl
jle
push
orl
and
and
add
jns
test
decl
repz
inc
add
jo
xchg
inc
sub
add
iret
and
adc
sub
mov
jno
adc
pop
mov
mov
add
pop
mov
inc
jno
test
sub
or
inc
sub
mov
loopne
adc
add
add
arpl
pop
daa
incb
jne
add
ret
ret
push
mov
sub
pop
xor
xchg
mov
pusha
addr16
push
iret
andl
push
pushf
mov
pop
dec
xchg
insb
dec
push
cmp
add
add
enter
and
fisubrs
lds
xchg
push
or
aam
add
mov
xchg
add
aaa
jns
add
xor
loop
push
and
outsb
outsl
add
aaa
adc
sbb
mov
mov
mov
aam
add
or
sar
roll
pusha
and
aas
and
stos
inc
jnp
cmp
sbb
addr16
or
xorb
push
add
mov
rolb
shl
test
gs
push
and
or
roll
xor
imull
push
stos
inc
mov
rclb
cltd
test
xchg
addb
xorl
rolb
int3
inc
scas
test
or
adc
fmuls
je
and
add
sbb
jne
push
sbb
xor
or
sahf
out
pop
inc
mov
pop
test
push
lds
test
adc
std
cmp
inc
pop
aad
lcall
xchg
rolb
push
pop
es
rcrb
aaa
pusha
cmc
test
inc
cmp
call
lret
dec
add
sbb
xor
xor
mov
rolb
mov
add
shrl
inc
push
or
adcb
dec
lret
addr16
push
mov
sub
inc
and
les
dec
int
inc
jecxz
outsl
lock
sbb
push
or
add
rcrb
stc
call
xor
and
xchg
dec
add
ss
outsb
or
add
imul
adc
mov
mov
rcrl
inc
mov
xorl
dec
xor
mov
call
inc
pop
mov
adc
orl
add
mov
and
push
xor
mov
jne
adc
dec
aas
mov
adc
movsb
mov
or
mov
inc
lret
jge
mov
inc
mov
xor
push
adc
inc
mov
bound
nop
or
mov
adc
pop
sub
inc
or
gs
cmpsl
test
add
mov
aas
push
pop
inc
insb
sub
mov
popa
mov
stos
cmpb
jo
or
push
sbb
fstl
stc
filds
sti
push
add
test
addl
shrb
cmp
aad
mov
sti
adc
or
jmp
ret
xchg
ja
enter
out
aaa
mov
fstl
jo
lds
jl
add
dec
mov
das
xor
pop
out
ljmp
inc
les
cmpsb
adc
dec
call
sbb
adcb
or
cmp
cltd
dec
or
and
cmc
cld
mov
or
andb
push
cs
mull
push
mov
or
xchg
and
mov
pop
sbb
or
sbb
rolb
int
and
out
jge
push
aad
cmp
adc
mov
adc
mov
loopne
pop
inc
jne
fistpl
inc
or
rorl
outsb
loope
push
std
sbb
sub
icebp
or
add
addb
aaa
adc
adc
rcpps
add
enter
push
add
inc
jo
cmp
mov
addb
jb
in
cs
aam
adc
sbb
sahf
or
cltd
mov
push
and
push
push
pop
cmpsb
add
sbb
xchg
xor
repz
les
movsb
call
dec
inc
or
stos
sbb
sub
ret
dec
pop
add
dec
sub
and
and
mov
lock
jno
out
inc
push
sarl
es
mov
or
add
push
les
lods
xchg
push
cmp
or
add
adc
fs
inc
lea
inc
mov
and
loope
or
sbb
push
cmp
dec
shrl
das
or
sbb
mov
mov
dec
inc
push
ljmp
push
mov
mov
add
fisubl
mov
adc
mov
sbb
inc
mov
jecxz
bound
dec
sbb
rclb
leave
mov
addl
mov
push
or
ja
cmpsb
es
jecxz
mov
cmp
cmpsb
push
jne
xchg
imul
es
xchg
push
inc
or
push
cmp
inc
movsl
or
inc
es
add
adc
or
add
add
and
adc
inc
repnz
leave
dec
and
mov
enter
push
add
adc
rolb
add
ret
rolb
adc
je
pop
flds
jno
lret
lods
loop
mov
jno
mov
je
leave
pop
mov
mov
xor
add
repz
lds
jp
movsl
andl
inc
cmp
add
add
sub
mov
aam
inc
sbb
inc
idivl
call
daa
shrl
inc
sub
mov
sub
adcb
orb
xor
cmpb
xchg
or
xor
or
in
mov
test
dec
les
je
je
aam
mov
cmpl
or
adc
xlat
stos
psrad
adc
or
mov
or
test
or
xorl
and
mov
std
popf
scas
mov
subb
push
mov
and
sub
and
cmp
push
sbb
cs
das
scas
rcrb
stos
push
jne
mov
inc
jae
pushl
xor
or
mov
mov
adc
add
push
jmp
adc
enter
rcll
mov
mov
sbbb
fwait
shll
adc
aaa
mov
mov
push
mov
aaa
daa
adc
inc
xor
xchg
add
les
push
stos
and
inc
xor
mov
pop
imul
xchg
outsb
stc
jns
or
dec
loope
add
and
test
lcall
sbb
addr16
data16
push
and
call
inc
and
mov
xchg
inc
inc
adc
or
ljmp
das
and
and
add
push
outsl
pusha
lock
sub
pop
roll
stos
xchg
inc
jg
push
pop
xor
cltd
and
repnz
fwait
iret
add
jl
inc
lods
add
daa
mov
jno
add
cmp
mov
or
imul
sbb
aas
lahf
test
cmpsb
test
stos
mov
das
push
adc
dec
sub
andb
ffree
cs
jno
movsl
add
enter
sbb
adc
and
xchg
inc
jmp
push
imul
test
xor
add
push
or
dec
arpl
lahf
nop
mov
mov
mov
arpl
test
sub
repz
adc
pop
add
inc
jo
loopne
and
fstpt
arpl
sbb
cmp
pop
mov
cwtl
in
icebp
adcl
push
cmpsb
sub
in
inc
add
sbb
cmp
jns
pop
mov
xor
dec
js
jb
and
or
mov
outsl
xor
sahf
xor
or
inc
sbb
adc
xlat
rclb
sub
scas
movb
adc
push
jge
fdivl
subb
sub
cmp
cmp
and
cmp
loopne
mov
add
adc
add
test
pusha
movb
dec
rolb
jno
pop
pop
mov
nop
ds
les
sti
cmp
sub
adc
add
dec
push
xchg
adc
adc
lcall
test
cwtl
sbb
inc
cmp
add
mov
cwtl
sub
test
jns
inc
and
adc
inc
sbb
inc
add
fldl
dec
movsl
adc
jl
les
pop
dec
add
push
andb
sub
lcall
and
and
test
fldenv
mov
xorb
insb
inc
or
mov
push
pop
cs
and
lods
mov
int
rolb
in
out
inc
inc
and
mov
sbb
mov
inc
mov
ljmp
xlat
xor
mov
arpl
popa
and
jne
add
pusha
mov
and
fisttpll
imul
adc
in
sub
pop
cmpsb
es
rorl
adc
and
rclb
jecxz
xor
scas
pop
push
subb
adc
mov
mov
pop
add
mov
mov
inc
or
xchg
adc
cmpb
mov
dec
xor
sbb
or
out
jb
mov
out
push
or
inc
sbbl
inc
sub
xchg
jo
popa
ret
je
aaa
cmp
xchg
int
xchg
mov
movsb
or
ss
xor
sub
ds
imul
pushf
negl
mov
je
divb
add
imul
xor
add
sbb
sub
push
push
xor
je
inc
inc
inc
pop
xor
add
lea
and
adc
mov
adc
out
in
inc
stc
push
aam
stc
pushl
dec
push
xchg
test
addl
mov
inc
dec
push
test
orb
je
jmp
and
scas
jge
push
in
test
sahf
test
push
inc
stos
pop
inc
sub
cs
push
jl
cs
or
inc
or
mov
inc
adc
mov
mov
sbb
inc
shrl
daa
xchg
cmp
push
sbb
adc
scas
lret
loop
xorb
pop
ja
loop
or
stos
scas
loopne
add
mov
jmp
add
mov
inc
xorb
dec
adc
leave
xor
call
std
inc
mov
xchg
into
or
inc
loop
sbb
xor
pop
add
je
rclb
outsb
ret
adc
cs
mov
scas
adc
mov
xchg
jp
adc
and
sbb
push
sub
test
inc
loopne
mov
mov
push
jge
xor
addl
add
enter
and
test
add
push
adc
push
sti
ret
popw
dec
lahf
adc
adc
mov
add
xchg
loope,pt
inc
add
es
and
and
xchg
mov
sub
mov
arpl
ret
adc
sahf
add
aaa
or
sbb
push
dec
dec
out
push
fldcw
jp
xor
push
fcmovb
add
dec
sbbl
pop
pop
add
test
cmpsl
inc
xchg
test
inc
adc
push
mov
add
and
add
mov
sbb
sub
or
lret
sub
mov
dec
xchg
leave
and
lods
or
adc
adcb
ret
daa
or
cmpsl
push
orb
sbb
sbb
iret
cwtl
dec
cmp
fmuls
add
add
dec
subb
xor
sbb
xor
push
pop
push
add
xor
sti
xor
add
mov
les
mov
sbb
stos
push
jbe
adcb
add
sub
push
cmp
xor
add
adc
test
xor
jo
icebp
and
cmp
sbb
mov
xchg
daa
xor
sahf
push
mov
adc
xor
add
rcl
cmp
xchg
jno
sbb
sub
pop
cmp
sub
mov
movsb
push
inc
les
adc
or
loopne
inc
in
jmp
loop
shrb
or
or
mov
adc
mov
and
or
jmp
push
and
mov
adc
mov
les
add
pop
jmp
repnz
clc
inc
cs
mov
pop
rolb
xor
pop
test
inc
das
and
les
test
adc
in
add
jmp
sbb
call
repz
dec
pop
push
dec
mov
jl
and
fcoms
and
jo
dec
mov
lods
xorb
leave
test
xchg
hlt
lods
sbb
mov
mov
push
adc
call
sub
or
rcrb
inc
xor
test
addb
push
int3
sahf
or
and
jge
dec
push
adc
leave
data16
xor
jmp
adc
or
rorb
mov
popa
test
push
push
cmc
out
cmp
xor
pop
roll
or
lahf
lcall
adcb
xorb
mov
or
pop
mov
sbbb
adc
xor
std
mov
xchg
inc
addr16
jmp
mov
outsb
loope
pop
pop
sub
rclb
cmpl
bound
xchg
dec
movsl
inc
mov
jp
or
stos
xor
ljmp
sub
push
adc
sbb
xchg
mov
test
mov
mov
push
aad
loop
loopne
icebp
inc
fisubrl
ljmp
pusha
or
mov
sti
cltd
inc
pusha
cmp
in
stc
mov
add
pop
mov
subb
push
popa
icebp
inc
cmp
inc
sbb
cmp
test
dec
sub
lcall
pop
inc
les
orl
aad
jnp
xor
inc
test
adc
pop
and
cmp
and
dec
in
add
add
jg
mov
pusha
or
jne
and
ss
adc
enter
sbb
add
or
add
mov
inc
movsl
dec
push
cwtl
insl
jecxz
and
add
les
push
mov
fwait
xchg
lds
cmpsl
and
push
and
lds
ds
xlat
imul
rclb
cmovo
cltd
shl
or
jo
mov
push
push
and
cmp
fldl
add
sub
push
inc
les
add
mov
cmp
mov
dec
sub
and
pop
adc
mov
xchg
rcrb
sbb
dec
arpl
ret
and
in
rorb
sub
xchg
jo
cmp
lcall
mov
lret
cmp
inc
pop
dec
insb
dec
sub
rorl
adc
dec
dec
push
jecxz
jnp
mov
loopne
and
lcall
sbb
ficompl
cmp
les
push
std
sbb
inc
pop
sub
mov
or
hlt
or
mov
inc
jae
jecxz
adc
sbb
inc
lea
pop
and
push
add
aas
and
push
inc
sub
push
lea
dec
jecxz
orb
jo
jmp
add
frstor
jno
push
jg
in
adc
cli
pop
popa
test
sbb
test
dec
dec
imul
dec
xchg
jecxz
xchg
out
cmp
and
jmp
jae
subb
xor
adc
outsl
add
or
push
mov
mov
andl
addl
pusha
bound
jge
nop
cwtl
addb
jmp
push
inc
gs
stc
ss
bound
add
lcall
movsb
je
rcrl
leave
ljmp
push
sbb
mov
fildll
push
bound
leave
pop
xor
loop
xlat
shl
or
movsl
push
jnp
movsb
mov
bound
scas
mov
adc
lahf
add
adc
pop
mov
adc
push
push
sysenter
cmpsl
mov
sub
daa
in
push
gs
aad
out
popl
outsl
dec
pop
sub
je
add
jno
pop
jno
add
rclb
jo
mov
mov
stos
push
rorl
iret
scas
loopne
sbb
add
jne
or
or
inc
inc
pop
cmpl
jg
push
mov
push
push
sbb
or
xor
movsb
mov
jne
pop
movsl
cmp
add
adc
movsb
filds
add
shrl
lea
push
loopne
mov
outsl
je
mov
inc
jle
jo
push
addr16
cs
popl
mov
sub
add
add
pop
jge
push
loopne
xchg
cmpl
add
fstp
mov
dec
push
or
jns
into
push
cmp
inc
and
lahf
mov
mov
jo
xor
pop
lret
test
cmp
stos
lret
add
addb
and
push
cwtl
cwtl
stos
rcr
inc
xor
aam
cltd
jg
or
sbb
mov
inc
adc
adc
cltd
cmc
xor
jb
or
xchg
out
xor
filds
sub
scas
adc
or
nop
dec
add
mov
loop
jno
xchg
push
sbbb
and
add
pushf
xorl
cmc
mov
rol
push
in
roll
add
cld
orb
sub
inc
inc
leave
push
mov
adc
push
xchg
pop
xor
mov
mov
and
ficompl
sub
add
mov
mov
and
rorl
mov
add
push
and
ds
sbb
ljmp
adc
xchg
testb
jns,pn
push
inc
or
and
adc
in
add
cwtl
mov
cwtl
sub
cmpsb
push
in
test
out
sub
and
pusha
pop
loope
mov
mov
or
xor
xchg
in
mov
adc
adc
push
adc
jle
inc
inc
inc
loopne
lret
inc
inc
ss
shlb
add
dec
xor
push
arpl
movsl
add
movsb
push
cltd
cwtl
test
push
aaa
sti
jns
add
push
mov
aad
sbb
push
push
xor
push
or
xor
jge
xlat
push
leave
mov
push
inc
cmp
mov
inc
ffree
cltd
test
pop
inc
push
loope
mov
and
and
in
sbb
or
adc
jb
add
jo
add
sbb
sahf
and
pop
rol
and
sub
pop
add
add
mov
adc
orl
inc
out
add
test
sbb
loopne
pop
mov
jno
sbb
bswap
ret
push
pushf
push
xchg
pushf
or
add
xchg
xchg
xorb
cmp
sbb
add
push
add
stc
pop
adc
add
or
and
lods
inc
dec
add
dec
inc
out
movsb
inc
lcall
cwtl
or
dec
orb
les
leave
add
into
and
mov
scas
sbbb
dec
or
inc
adc
xchg
push
stos
lret
mov
mov
push
xchg
jmp
jl
in
dec
imul
dec
or
adc
rorb
mov
xor
jno
and
idivl
fld
push
add
adc
popf
ss
cmpb
inc
push
sarl
add
mov
cs
add
adc
jecxz
add
es
hlt
outsb
pop
inc
xchg
inc
rorl
mov
loop
add
add
jno
aad
dec
fbld
hlt
xor
add
imul
fs
movb
push
and
add
adc
in
xchg
xchg
push
inc
inc
loope
inc
inc
add
cmc
add
repz
mov
enter
ret
xchg
je
adc
mov
cmp
xchg
imul
iret
add
add
roll
cmc
popa
inc
and
in
mov
sbb
orl
xor
and
inc
arpl
jne
or
loope
mov
cmp
pusha
icebp
dec
or
test
or
jecxz
les
cmp
outsl
pop
mov
mov
test
pusha
mov
and
or
movsl
jmp
inc
sub
les
adc
add
fimull
je
leave
mov
pusha
add
adc
in
or
ret
mov
push
test
push
lea
aad
or
arpl
loop
mov
or
stos
lods
je
shlb
xchg
cltd
mov
gs
add
cmp
test
sarb
and
insl
pop
sbb
imul
inc
pop
push
mov
rsm
ja
bound
jmp
test
mov
adc
out
jmp
sbb
addb
nop
xor
inc
or
lahf
popa
loop
inc
push
inc
call
jns
jmp
into
les
pop
cmpb
dec
jns
jmp
or
andl
mov
mov
push
dec
mov
mov
scas
pop
add
and
mov
ror
mov
adc
add
scas
sbb
push
and
sub
fstps
add
inc
or
add
dec
adc
fnstenv
cmpsb
adc
mov
movsl
sub
jb
xor
dec
or
xor
dec
push
jae
dec
movb
inc
jns
ja
xchg
xor
mov
lret
pop
pushf
jmp
imul
add
jno
sub
sub
test
xchg
cmp
dec
add
sbb
and
scas
or
inc
mov
les
sub
imul
addl
dec
xor
pusha
addb
mov
rolb
out
or
inc
push
addr16
dec
call
movsb
ret
xor
or
js
fwait
and
outsl
roll
cmp
test
jno
xor
les
ss
mov
shll
mov
add
and
adc
and
jmp
jecxz
clc
ret
and
shrl
mov
inc
and
loopne
out
je
lcall
fsubs
inc
push
pusha
pushf
cmpsb
pop
push
pop
scas
adc
and
adc
xor
arpl
or
cltd
jl
push
add
imul
cmp
pusha
sub
stc
inc
mov
add
push
push
ret
push
jl
test
add
inc
jb
inc
or
add
add
cmp
mov
je
sub
xor
inc
xor
jmp
mov
push
sub
cmpsb
and
cmp
or
mov
xchg
nop
jno
xor
les
rolb
cwtl
fwait
inc
sbb
or
push
xor
cmp
add
lahf
mov
sbb
add
jns
xor
xchg
pop
push
xchg
sbb
and
push
test
or
lcall
mov
and
or
sub
sub
cli
mov
inc
dec
adc
and
insl
or
jno
imul
push
mov
dec
inc
lcall
jae
xchg
fs
lods
mov
mov
xchg
inc
sub
or
aas
fsts
inc
arpl
movsb
or
sbb
adc
mov
add
enter
jl
xchg
mov
ret
imul
inc
mov
es
aam
jl
int3
sbb
inc
add
fnstenv
sbb
iret
pop
test
inc
inc
mov
jg
sbb
lahf
pusha
iret
cmp
jns
push
xor
subl
and
pop
aaa
mov
xor
rol
inc
sub
stos
inc
sub
fcmovb
adc
add
sub
xorb
andl
loope
cli
inc
xor
xchg
sub
add
cwtl
and
xchg
mov
sbb
out
push
or
movsb
add
sarb
cmp
inc
pop
shrb
push
subl
xchg
adc
shlb
inc
xor
les
push
and
inc
push
jmp
dec
or
or
or
out
add
mov
xchg
addl
mov
xor
inc
xor
and
dec
or
inc
bound
dec
jg
movsl
test
add
xchg
adc
outsl
pop
pop
xchg
jo
repnz
nop
push
pop
add
aam
cmp
push
xlat
push
mov
push
stos
daa
das
loop
je
mull
lock
inc
inc
ljmp
push
cs
call
xor
pop
push
js
imul
adc
stc
push
mov
inc
push
rorl
test
inc
mov
cmpsl
dec
pusha
dec
or
or
insb
test
repz
sbb
sbb
movsb
dec
adc
pop
addl
adcb
mov
push
aam
jl
int3
or
xor
cmp
repz
inc
dec
jno
sbb
or
mov
adcl
adc
add
idivl
or
sbb
inc
xor
shlb
hlt
jne
call
mov
mov
ret
push
push
inc
mov
sbb
dec
and
pushf
mov
aam
inc
push
pop
push
add
add
xchg
pop
je
rclb
cmc
iret
sbb
mov
int
jo
fcoml
stos
push
adc
out
sub
mov
test
mov
enter
cmp
push
xchg
andl
mov
add
test
ret
and
dec
jl
or
jno
jne
push
sbb
in
dec
or
xor
or
flds
pusha
and
add
push
xchg
and
lds
iret
jl
dec
jmp
and
dec
adc
movsb
jno
cmp
jmp
dec
je
pop
mov
adc
inc
mov
cmp
subb
lcall
xchg
and
andl
cmp
or
imul
xchg
xor
pusha
xchg
dec
sub
mov
add
std
test
sbb
push
int3
nop
int3
sub
jno
loopne
or
jg
shlb
arpl
mov
adc
orl
add
loop
fwait
sarl
ljmp
test
adc
add
push
pop
sbb
inc
or
dec
sbb
test
jne
xor
or
rorl
fidivl
lods
xchg
sub
and
adc
clc
xor
test
or
mov
out
ret
push
pusha
cld
loop
mov
push
pushf
or
push
test
mov
ja
stos
fiaddl
jae
pop
addb
je
nop
leave
lret
cwtl
pusha
push
jg
or
cmp
jns
sub
loope
subb
push
jle
nop
bound
or
repz
sub
mov
mov
lcall
subl
sti
push
nop
icebp
mov
adc
add
mov
and
loopne
jno
or
adc
test
push
push
call
adc
mov
jns
lcall
out
std
lret
add
mov
lcall
mov
mov
mov
mov
cmpl
cmp
ret
add
inc
adc
mov
dec
or
fs
inc
inc
in
mov
inc
mov
add
sbb
push
sbb
adc
dec
jne
pop
ret
mov
mov
mov
push
es
push
mov
loopne
mov
ja
test
inc
mov
xor
adc
lock
movsb
ret
add
xor
inc
push
sub
and
push
and
out
adc
or
add
lods
xor
or
adc
or
test
cmpsl
inc
xor
push
psllq
add
add
jbe
jnp
mov
mov
sub
movsb
inc
andl
sbb
dec
ja
push
cmp
jae
orl
and
mov
add
or
leave
dec
push
imul
jae
mov
adc
push
je
cmp
js
or
outsl
or
xchg
enterw
xchg
dec
in
iret
mov
xchg
add
push
leave
mov
add
orl
dec
js
inc
test
and
pusha
mov
mov
xor
jo
int3
in
xchg
adc
push
iret
lret
mov
mov
outsl
mov
cmp
mov
add
adcl
mov
cmp
or
sbb
outsl
in
add
jns
or
andb
add
rol
dec
add
bound
mov
mov
and
or
xor
adc
and
add
pop
or
stos
outsb
jge
stos
ret
xchg
push
xor
xchg
push
inc
call
orl
lds
jmp
cmp
add
xorl
outsb
adc
sub
push
pop
adc
mov
dec
push
pop
push
jo
aam
leave
fcmovu
clc
xor
add
cmc
repz
sbb
mov
push
add
inc
daa
xchg
aam
add
mov
or
push
mov
jmp
gs
dec
fsubs
cs
out
push
xor
test
lret
cmpsl
call
adc
and
movsb
mov
push
add
popf
jl
mov
pop
adc
adc
or
lahf
add
pop
inc
pop
xor
cmpsb
push
and
inc
lock
jecxz
inc
fwait
adc
inc
sbb
or
or
leave
inc
mov
shrl
jle
push
lods
out
cmp
stos
leave
add
and
and
adc
and
jo
pop
js
adc
sub
lock
mov
sbb
adc
les
add
add
aad
rcll
inc
popa
ds
adc
xchg
adc
pop
test
mov
push
rol
jno
cwtl
aam
inc
aad
push
test
and
mov
mov
scas
lock
xor
xchg
cmpsb
sbb
arpl
rorb
xor
test
or
add
add
adc
dec
inc
dec
arpl
enter
mov
repnz
xor
inc
and
adc
cmp
and
sub
mov
xorl
out
test
xor
push
mov
jg
add
jle
and
mov
mov
sbb
cmpsb
mov
ret
fst
push
add
lods
fstps
push
test
cmp
and
dec
and
ss
imul
xchg
inc
inc
cmp
and
cmpsb
mov
add
xchg
and
add
sahf
int
outsb
frstor
lds
and
pop
cmp
and
in
push
push
adc
fwait
mov
add
inc
push
adc
loopne
cltd
pop
fcomip
xor
addl
stc
les
jb
ss
add
or
adc
sti
cmp
divl
sub
lods
jb
inc
inc
mov
add
add
jmp
push
movsb
or
lods
cmp
ljmp
push
jmp
push
cs
pushf
cmpsb
adcb
xor
mov
cmp
sbb
and
jae
or
test
testl
push
movsl
je
sub
add
and
cmp
fwait
icebp
test
movsb
lret
add
add
add
pop
movsl
notl
test
cmp
sub
and
sbb
push
stos
iret
aam
repnz
adc
ret
scas
add
shll
inc
xrelease
dec
inc
pop
flds
sarb
pusha
mov
mov
dec
cmc
nop
add
sub
mov
pop
enter
xchg
popa
push
mov
dec
sbb
xchg
mov
mov
and
lcall
or
inc
add
lock
jo
das
push
push
adc
add
mov
jmp
sbb
clts
loop
push
inc
inc
adc
mov
test
dec
sbb
cmp
or
test
and
lds
imul
fstl
aam
sub
mov
inc
adc
filds
addb
test
push
lahf
adc
jnp
sub
and
iret
dec
adc
mov
sbbl
sub
in
pusha
test
sub
rolb
pop
push
xchg
rclb
push
sbb
add
cmc
push
test
sbb
or
lgdtl
dec
and
and
in
pop
subl
shrl
pop
push
stos
dec
loop
in
aad
and
gs
xor
shll
push
inc
rorl
add
mov
inc
loope
inc
or
mov
mov
or
add
sbb
inc
shll
push
scas
mov
sbb
add
and
pop
adc
jge
les
adc
and
gs
addl
and
mov
stos
add
shl
imul
and
or
sub
dec
imul
inc
jno
xchg
pop
jo
test
jge
and
inc
addl
or
test
and
outsb
jmp
test
gs
or
jb
in
scas
or
jecxz
and
addr16
bound
and
pop
in
add
mov
jecxz
rclb
xlat
mov
mov
sbb
pop
movsl
jmp
push
push
mov
mov
jno
int
insl
arpl
and
jmp
ljmp
lcall
in
pop
mov
inc
test
mov
dec
mov
pushl
orb
stos
push
and
sub
xchg
rcrl
mov
push
fnstenv
push
sbb
push
cmp
pop
repnz
sbb
mov
dec
inc
jne
adc
push
sub
and
adc
mov
pop
jecxz
mov
xor
out
shr
loope
inc
rorl
xchg
push
push
in
dec
lahf
mov
push
sbb
push
sbb
xor
sbb
and
orl
negl
add
ret
ss
xchg
inc
jno
fsts
cmp
lods
decl
dec
rcrb
dec
add
loope
sahf
mov
adc
xchg
mov
push
stc
mov
orb
or
xor
add
stos
incb
stos
dec
adc
cmpsl
lods
sbbl
ret
mov
dec
sub
mov
nop
mov
or
xor
out
rcrl
xchg
movsb
xor
adc
in
push
scas
js
xor
xchg
ja
icebp
adc
xchg
out
movsl
test
rclb
mov
bound
push
xor
stos
mov
adc
fs
lret
mov
ljmp
mov
push
push
or
sub
mov
add
add
addl
scas
push
jne
push
test
sbb
push
cmp
sbb
mov
mov
stc
add
and
jno
xor
or
add
push
dec
add
rclb
mov
dec
test
jne
adc
add
orl
adc
jo
sub
loop
sub
mov
or
sbb
add
movb
mov
cmp
movsl
or
roll
and
adc
or
jl
mov
lcall
nop
dec
adc
xchg
fldl2t
lds
jecxz
add
inc
mov
push
jo
sbb
xor
push
adc
or
icebp
stos
mov
xor
orb
stc
dec
push
stos
sbb
push
adc
movsl
mov
sbb
inc
sti
cmp
pop
and
shr
xor
add
dec
xchg
movsb
push
ret
push
add
xor
negb
cmp
xchg
je
aad
mov
pop
popl
movsb
xor
inc
rep
dec
adc
mov
pusha
fs
pop
dec
imul
push
ja
xchg
and
ja
mov
xor
dec
subl
gs
daa
push
push
adc
aam
pop
adc
mov
inc
sahf
mov
jne
fmull
mov
inc
mov
movsl
push
cmpsb
push
fidivl
int
inc
leave
js
mov
mov
xor
mov
adc
inc
adc
cmpsb
mov
cmp
dec
jle
or
rolb
cmp
push
fildl
cs
cld
inc
bound
jo
adc
adc
sbb
pop
xor
gs
mov
push
inc
mov
cmp
or
fwait
mov
push
xor
pop
jl
xchg
es
leave
push
enter
xor
sub
xor
jle
mov
popa
leave
gs
pop
pop
xchg
je
movsl
stos
inc
add
dec
or
sbb
lods
mov
add
xor
jge
adc
jo
leave
cmpsb
addb
and
or
adc
mov
cli
add
push
xor
inc
test
pop
adc
hlt
test
shrb
mov
mov
out
jmp
adcb
xor
dec
aaa
imul
mov
xchg
leave
ljmp
xor
inc
subl
adc
lret
lahf
aam
xor
dec
les
and
jle
push
mov
cmp
pop
clc
xor
and
xor
mov
lret
sbb
add
cmpsb
cmp
xchg
pop
or
jecxz
sub
mov
cmc
push
inc
xchg
lret
imul
adc
add
mov
leave
push
xor
mov
pop
cmp
cltd
pop
inc
and
adc
jb
mov
rcll
cs
cld
push
mov
mov
and
cwtl
jno
cmpsb
bound
frstor
sub
movl
xor
push
rclb
es
push
aaa
pop
pop
adc
scas
mov
dec
pusha
outsb
loopne
cmpsl
mov
mov
and
adc
mov
lods
pop
adc
xchg
dec
lea
or
int3
test
imul
ljmp
adc
cmp
add
cmp
mov
andb
add
adc
shll
lods
lcall
inc
mov
sub
push
call
pop
jg
rcll
xor
inc
iret
pop
jl
inc
mov
int3
insb
pop
mov
es
addb
push
pop
mov
out
mov
out
les
rorl
push
popa
repnz
or
jb
push
jno
adc
mov
je
and
leave
loope
xor
adc
xchg
push
nop
sbb
test
lcall
imul
inc
shll
and
cmp
adc
cmp
mov
cmp
mov
imul
push
das
and
inc
lods
and
test
daa
frstor
xor
dec
adc
inc
repnz
je
push
das
and
jne
pop
fiaddl
adc
or
je
shlb
xchg
pop
or
enter
les
push
cltd
loopne
mov
shlb
sbb
lret
les
push
cltd
int
in
jne
jae
add
add
movsb
icebp
ja
pusha
add
imul
je
pop
inc
or
inc
push
int3
adc
out
xchg
xor
mov
xor
scas
jae
and
jge
sub
lcall
sbb
or
adc
and
xor
or
andl
and
add
mov
push
jno
jns
adc
or
loop
or
jns
adc
rcrb
shlb
imul
dec
push
inc
fisttpl
push
dec
add
xor
popf
xor
push
add
dec
aaa
lods
add
fdivr
or
roll
pushf
dec
mov
cmpsb
test
add
repnz
dec
andl
loope
int
sbb
inc
adc
adc
arpl
push
sbb
mov
push
dec
add
les
sbb
lret
stos
rorl
adc
inc
inc
cmp
mov
mov
loop
cmpsb
daa
mov
sbb
enter
mov
xor
xor
adc
aam
inc
and
cmp
xlat
rol
adc
stc
jne
adc
andb
inc
gs
inc
pop
das
mov
movsl
rcll
and
mov
pop
add
xchg
pop
push
push
or
in
xlat
repz
stc
inc
adc
and
in
arpl
mov
fwait
repnz
push
popf
outsl
je
adc
adc
pop
and
nop
adc
popa
sub
cmp
and
repnz
shlb
movsl
pop
mov
dec
pop
pop
adc
imul
push
in
adc
das
dec
daa
lods
add
lgdtl
jno
mov
rolb
inc
aam
arpl
sub
or
xchg
jle
pushl
add
test
add
adc
add
or
sbb
pop
cmp
iret
aam
sbb
loopne
call
sbb
cltd
xor
les
cmpb
push
int
inc
dec
mov
aas
mov
data16
xchg
lcall
push
mov
mov
scas
lock
scas
and
addb
enter
stos
ss
add
jl
cli
cwtl
adc
shrl
lods
jecxz
inc
sbb
add
mov
mov
in
cmp
les
outsb
aam
cmp
or
sbb
ret
push
incl
popa
jno
pop
xor
sub
sub
or
jno
mov
sub
enter
daa
les
mov
xor
imul
jne
jnp
mov
sbb
arpl
push
dec
cmpsb
inc
ja
push
aaa
inc
std
add
add
or
movsl
mov
add
dec
sahf
mov
jmp
push
pop
je
into
shll
sbb
test
inc
es
mov
adc
jo
xor
and
adc
ja
and
lcall
sub
adc
adc
xor
loop
xchg
and
add
inc
xchg
cmp
packsswb
test
scas
je
inc
and
mov
inc
je
inc
fisttps
aam
fsubrs
aam
leave
add
inc
xchg
adc
inc
lods
sbb
jmp
push
mov
or
cmpl
xchg
dec
mov
add
jns
add
pcmpeqb
lock
dec
lods
mov
adc
ja
mov
mov
sub
push
push
cltd
push
rclb
pop
cwtl
and
pavgb
xor
scas
addb
xchg
mov
jnp
repnz
lods
test
add
add
nop
out
cwtl
and
test
sbb
sbb
mov
xchg
scas
jno
xchg
sub
dec
popa
stos
adc
movb
movsb
rcr
push
xor
or
lahf
cmpps
fs
dec
lods
and
xchg
cld
test
test
les
or
in
insl
bound
push
lea
xor
sub
dec
jmp
or
adc
and
or
dec
add
call
dec
push
cmpsb
mov
sbbb
imul
add
adc
shrl
or
pop
adc
stos
movsb
dec
cmpsl
mov
push
sbbb
and
sbb
and
aam
cs
clc
xchg
sbb
movb
push
cs
push
fistps
dec
mov
rcl
push
xchg
rolb
rolb
push
pop
and
or
pusha
push
cs
jl
test
xor
ss
add
test
add
insb
loopne
dec
mov
pop
test
cmp
out
cmp
add
pop
pusha
push
fs
mov
test
sbb
int3
imul
cs
push
mov
cmc
pop
dec
les
mov
dec
cmc
fsubs
push
add
int3
js
es
pushf
mov
xor
sbb
mov
pop
push
or
cmp
cmp
hlt
jl
xor
add
push
sbb
add
test
add
adc
push
in
xor
add
xor
scas
xor
adc
sub
inc
sbb
pop
adc
aad
sbb
adc
mov
mov
cmp
in
ficomps
cmp
sbb
mov
push
jecxz
mov
jg
push
pop
lcall
test
jmp
mov
mull
mov
gs
aad
jnp
adc
sbb
sub
cmp
jcxz
js
xor
jl
sbb
and
sub
insl
sub
or
lds
ret
and
mov
adc
mov
mov
and
insl
pop
add
adc
aad
or
in
aad
and
mov
outsb
jmp
inc
xlat
inc
adc
add
sbb
push
lods
xor
scas
adc
jg
test
fcoml
fsubrl
xchg
shlb
pushl
push
pop
adc
rclb
pop
and
pop
stos
imul
push
stos
data16
sti
ljmp
cwtl
aam
movntq
out
in
adc
cwtl
fsts
repz
push
addl
jnp
jge
xor
mov
cmp
or
idivl
imul
adc
cli
xchg
or
mov
repz
js
data16
push
pop
arpl
js
sbb
popa
jbe
out
std
insl
pop
push
inc
in
xchg
jl
push
inc
push
aaa
addr16
push
test
ds
dec
push
sub
jg
and
xor
dec
das
cwtl
push
sbb
push
dec
iret
or
cs
fs
adc
shl
cmpsb
cld
sti
fsubrs
mov
adc
mov
aaa
addr16
xchg
call
imulb
xchg
jge
in
inc
inc
ja
or
sahf
and
inc
sahf
xchg
ja
push
adc
ss
orb
dec
pop
inc
inc
aam
sahf
xchg
aas
dec
dec
inc
inc
aam
jg
nop
scas
lahf
sbb
mov
pop
std
push
in
aas
jnp
adc
push
push
js
jl
inc
sti
repz
in
loop
push
lcall
mov
cwtl
iret
lahf
test
aas
sahf
arpl
cvtpi2ps
push
and
jecxz
orl
or
adc
add
pop
addb
sarl
cmp
cmpxchg
push
add
mov
enter
adc
and
inc
push
outsl
sbb
bound
in
enter
pop
pop
jecxz
xchg
xor
add
outsl
adc
cmpsb
dec
dec
sahf
jle
mov
pop
cmpsl
inc
jnp
inc
sahf
cmpsl
out
in
in
inc
jns
aad
xchg
jge
adc
dec
in
xchg
ja
in
push
jns
mov
xor
mov
js
shrb
pop
in
sahf
inc
dec
inc
adc
inc
xchg
cmpsl
repnz
inc
dec
jbe
dec
in
cmp
dec
push
inc
xchg
addl
dec
insb
pusha
dec
sub
and
adc
jns
push
jns
jno
jo
jne
nop
lret
jl
jne
fisubs
xchg
aaa
je
jb
jp
jp
popa
adcl
jg
lahf
das
js
inc
inc
sti
sub
ret
cwtl
xchg
out
pop
inc
ljmp
shlb
sub
mov
adc
add
sti
sbb
mov
sbb
movsb
sbb
lcall
adc
jne
ljmp
in
bound
jmp
stos
pop
mov
push
xchg
shl
ret
add
clc
adc
pop
out
incb
or
data16
ret
cmp
xchg
jmp
clc
lock
outsl
xlat
jp
mov
sbb
outsl
notl
iret
sbb
adc
inc
jns
sti
mov
pop
push
lret
adc
add
inc
sti
cs
lcall
adc
iret
and
cmp
adc
std
cmpsb
cmp
mov
cmp
rclb
iret
fnstcw
jnp
sbbl
ja
fwait
add
sti
and
data16
sbb
fcoml
dec
lock
in
pusha
push
clc
adc
lret
and
add
lret
sti
pop
sti
add
pop
inc
push
jne
mov
dec
imul
cwtl
add
xor
repnz
jecxz
sti
out
in
mov
lret
call
sub
or
mov
sbb
stc
jbe
mov
out
cwtl
push
and
ret
sub
jns
aas
enter
ffree
cmp
cwtl
pop
inc
xchg
rol
fucomp
adc
and
stos
jnp
jle
adc
enter
push
jo
lret
lret
int
mov
adc
addb
push
pop
and
cwtl
inc
sub
adc
inc
sti
cmpsl
push
pop
sbb
scas
aaa
or
and
dec
nop
sarb
pop
je
filds
es
lods
pop
inc
dec
rcll
pop
mov
adc
stos
adc
adc
stos
jg
jnp
in
xor
xchg
cmp
jge
jl
notb
std
or
nop
pop
out
mov
adc
dec
ficompl
into
aad
jnp
push
push
popf
inc
sbb
outsb
push
scas
sarl
rcrl
mov
cld
es
fisubs
jo
sti
mov
aaa
mov
idivb
insl
xor
out
jnp
push
adc
xchg
pop
mov
sub
iret
jb
jl
je
push
xlat
leave
push
repnz
das
jg
fildl
rcr
pop
xchg
stos
in
pop
xchg
adc
incl
and
inc
cwtl
call
test
inc
inc
ljmp
mov
jp
push
cmp
xchg
xchg
nop
sub
jo
or
out
stos
das
sbb
xchg
push
sti
add
nop
aam
sti
sub
inc
adc
push
dec
adc
sub
push
mov
sbb
inc
jmp
xchg
data16
movsl
push
and
adc
push
sbb
push
mov
cwtl
stos
iret
adc
subl
dec
sbbb
push
pop
mov
mov
push
out
sbb
notb
push
mov
dec
pop
and
adc
std
sub
push
data16
xlat
test
repnz
cwtl
sarb
pop
mov
es
cwtl
pop
sbb
addr16
sub
addr16
jne
cwtl
pop
pop
nop
cli
dec
loopne
jg
xor
adc
hlt
in
sbb
sar
pop
in
nop
jmp
adc
lock
sub
add
adc
cld
fcmovne
stos
pop
lret
mov
sbb
adc
sbb
outsb
pop
ja
push
and
dec
pop
je
pop
mulb
cwtl
push
movaps
popw
mov
pushf
push
or
out
mov
pop
xor
adc
data16
mov
cld
in
xchg
add
lret
jne
shll
in
in
lock
cwtl
inc
and
sahf
cwtl
leave
cwtl
add
shll
in
sub
clc
incl
sahf
popa
aas
push
sbb
cli
clc
or
aam
jne
loope
fildll
pop
jb
sbb
imul
adc
loopne
or
imull
js
push
cwtl
push
or
lods
ret
ret
sbb
sbb
imul
push
imul
rcrb
mov
adc
clc
sub
cwtl
jecxz
clc
sbb
in
in
add
data16
push
in
call
aaa
adc
or
pop
shl
adc
pop
sets
sbb
sbb
imul
adc
stos
add
pop
arpl
jp
cmp
push
xlat
push
data16
ret
inc
pop
pop
inc
fwait
xor
push
jecxz
mov
mov
add
cld
jns
jnp
rclb
sub
xor
test
iret
out
in
push
pusha
mov
inc
sahf
into
xor
movsb
jns
jge
push
mov
out
orl
push
mov
popa
lods
pop
add
mov
int3
pusha
fwait
cld
insl
sub
sub
repz
in
cwtl
fs
jle
clc
pop
mov
push
fimuls
fistpl
shll
fwait
jmp
testl
sbb
ror
or
xchg
pushl
inc
inc
xor
shl
dec
pop
cltd
adc
adc
loopne
lock
cmpsl
data16
pusha
xchg
jb
push
jb
cmp
enter
fidivl
sbb
sti
lret
pusha
test
push
jb
sbb
fisubl
test
lock
hlt
ss
into
add
or
mov
mov
pop
sti
and
cltd
add
daa
mov
iret
pop
mov
sar
xchg
fsubr
popf
pushf
sub
cmp
movsl
sub
jns
cmp
dec
cli
dec
adc
shrl
cmp
sti
xchg
xchg
adc
add
lahf
fistl
inc
leave
push
fwait
addb
sub
ret
repz
or
leave
add
sub
ficoml
out
push
xchg
mov
nop
jmp
xchg
mov
dec
push
mov
push
addl
andb
push
jb
and
jecxz
pop
xor
loopne
lds
icebp
sub
xor
adc
mov
imulb
jns
xchg
cltd
add
adcb
mov
pop
xor
push
shll
fiaddl
pop
cmp
pop
push
add
push
push
imul
mov
aaa
cmp
jge
inc
mov
cwtl
rclb
cwtl
ret
sti
push
clc
add
dec
dec
cli
into
lret
cmp
pusha
add
shlb
or
push
push
add
or
xchg
cmp
loopne
push
add
cmp
push
mov
aas
push
stc
jg
aas
std
sti
push
aaa
cmp
fisttpll
ss
push
pop
xlat
sti
mov
psubw
push
fnstsw
in
push
std
js
pop
push
aas
mov
sbb
ja
jnp
jnp
push
out
mov
pop
sti
cmp
out
out
xchg
out
scas
pop
mov
jbe
fmull
dec
das
fcmovne
cmp
dec
jg
sti
jg
cmpsl
push
fidivrs
pop
jg
filds
rorb
mov
jnp
pop
pop
pop
mov
iret
jg
jg
jmp
into
sub
daa
adc
mov
loopne
cmp
xlat
rol
mov
ja
or
into
sahf
testb
xchg
ja
sub
pop
mov
into
ret
iret
outsl
dec
daa
push
push
push
xchg
aas
push
aas
movsb
loopne
mull
out
loope
cmp
and
insb
or
or
addr16
mov
mov
mov
jg
stc
scas
out
add
divl
sti
sbb
cmp
ret
sarl
das
jnp
ret
mov
aas
das
push
jecxz
jnp
pop
fistpll
into
das
lahf
cmpsl
mov
pmaxub
jno
pop
fistps
iret
ljmp
loope
cmp
scas
in
mov
mov
ret
sti
pop
push
push
daa
dec
xor
pop
aas
pop
cmp
push
and
mov
ss
addr16
cmpsl
add
mov
subl
mov
pushf
mov
cmp
jnp
adc
sti
push
mov
sub
mov
rclb
and
pop
lret
push
dec
mov
add
jp
inc
dec
ljmp
in
das
lods
add
xchg
add
dec
dec
daa
shll
loop
add
add
aaa
mov
stc
mov
push
add
inc
inc
cld
jmp
incl
movsb
and
add
xchg
cmp
xor
ja
lcall
fistps
pop
xchg
mov
js
and
sbb
add
or
out
outsl
jg
leave
clc
fdivl
or
idivl
mov
rcr
adc
stc
dec
jmp
cli
and
lcall
xchg
or
jmp
mov
fwait
cmp
pop
and
adc
mov
pop
or
pop
icebp
pop
adc
or
push
rclb
sub
or
adc
inc
gs
outsb
pushl
jb
outsb
insl
outsb
je
je
imul
je
sub
fdivrp
idivb
gs
je
inc
dec
arpl
jns
and
cmpsb
imulb
inc
push
jo
outsb
mov
int
xor
and
jne
insb
inc
insb
insb
xchg
sbb
gs
pusha
jbe
push
data16
mov
outsl
jne
sbb
out
jge
or
jb
je
push
jae
dec
out
shrl
pop
je
push
popa
loopnew
add
or
into
adc
gs
mov
out
or
sbb
pop
inc
jne
data16
cmp
jb
pop
insl
mov
and
mov
push
outsl
dec
dec
sub
ret
sbb
sbb
jo
int
push
mov
in
lea
outsb
jae
cmpsb
xorb
rorl
fmuls
sbb
sbbb
push
pop
pop
in
mov
inc
popa
arpl
jo
pop
in
frstor
adc
rorb
enter
outsb
cmp
xchg
push
jns
gs
pop
inc
jmp
add
inc
lds
imul
mov
arpl
jmp
lcall
push
outsb
stos
jo
test
je
insl
imul
aam
mov
in
or
fs
insb
test
push
sahf
jb
push
rclw
lock
fisubrs
jae
push
mov
jns
push
call
imul
sub
mov
pop
pop
ja
sub
mov
fadd
dec
insb
repnz
jbe
imul
cmp
imul
insb
jo
mov
sbb
imul
inc
xlat
inc
add
hlt
inc
push
xor
and
insl
dec
push
cld
icebp
fs
inc
popa
jo
ret
add
sub
push
neg
adc
mov
dec
xorb
push
inc
inc
dec
outsb
loop
push
repnz
into
aad
inc
adc
or
lret
aas
sub
jl
pavgb
sidtl
add
add
or
ss
add
sbb
add
or
add
imul
push
cmp
mov
movlps
lock
mov
push
pop
add
into
les
fucomip
adc
je
push
mov
and
pop
rorl
add
push
pop
test
adc
iret
and
neg
test
cs
dec
push
pushf
add
xor
jae
cmp
xchg
lahf
bound
out
adc
dec
add
outsl
add
lock
pop
lahf
imul
jnp
cwtl
enter
adc
mov
and
nop
and
dec
xchg
and
add
add
add
add
adc
mov
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
