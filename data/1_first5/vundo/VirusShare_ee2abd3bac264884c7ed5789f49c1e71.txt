add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
jle
dec
sub
pushf
pop
xchg
int3
movb
pop
push
add
or
add
push
add
add
add
add
addb
add
add
add
add
add
icebp
add
add
popl
icebp
add
lods
add
mov
mov
mov
push
add
add
add
add
add
add
add
add
mov
add
add
xchg
add
add
lods
add
add
add
add
imul
lods
add
icebp
add
add
push
add
add
add
inc
add
add
add
add
add
sub
icebp
add
add
add
lods
add
add
add
adc
add
add
add
icebp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
js
cmp
xchg
inc
add
add
add
add
mov
and
add
add
icebp
add
jbe
jno
mov
add
add
add
add
sbb
xchg
sbb
add
sub
mov
or
cmpsl
add
mov
add
ja
adc
pop
add
add
add
add
add
and
pop
add
add
or
add
pop
add
icebp
add
mov
aaa
add
add
js
into
add
add
add
add
movsl
add
add
add
add
add
icebp
add
add
xor
mov
add
add
add
add
faddl
roll
or
icebp
add
add
add
add
add
add
add
add
add
add
test
lea
int3
add
add
add
add
add
add
inc
add
add
add
lea
icebp
add
add
add
add
lret
add
add
add
sub
add
mov
inc
add
add
icebp
add
mov
mov
adc
add
inc
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
xchg
pop
add
add
add
add
xchg
add
add
ja
sahf
add
add
add
add
add
add
add
icebp
add
add
add
add
xchg
add
scas
add
add
add
add
add
add
add
push
add
add
add
add
push
add
icebp
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
push
add
add
add
filds
int3
add
add
add
add
jnp
roll
inc
add
imul
int
test
roll
pop
add
add
sbb
xchg
sub
test
std
rol
mov
mov
leave
jle
in
sarl
jmp
pop
add
mov
mov
dec
shrl
data16
mov
dec
mov
jnp
dec
faddl
inc
lret
sbb
mov
and
jl
mov
in
das
sub
dec
enter
sbb
stos
push
mov
ss
inc
test
movsb
jmp
test
dec
mov
jns
sbb
add
xchg
popf
lods
xchg
divl
dec
hlt
sbb
lret
ja
hlt
sub
ficoms
cwtl
cs
lret
in
fstp
cmp
std
inc
das
mov
insl
add
leave
cmp
in
decb
fistpl
pop
je
xchg
mov
mov
mov
sbb
or
fnstsw
sti
add
jle
aad
mov
mov
jbe
adcl
xchg
leave
sbb
rol
jg
arpl
fs
iret
aad
dec
call
pop
arpl
xor
stos
scas
push
rcll
cmp
clc
ds
lods
push
pop
inc
and
popf
cmpb
ss
and
push
cmpsb
call
pop
mov
test
cmp
add
inc
cmp
jae
sbb
adc
scas
std
icebp
int3
push
cwtl
dec
mov
aas
int3
sub
adc
sub
jne
and
inc
pushf
shlb
jp
mov
pop
movsl
mov
stos
je
imul
cmp
mov
dec
and
jmp
pushf
hlt
mov
xchg
inc
es
bound
andl
xorl
or
ffree
mov
push
adc
push
mov
lds
sub
lahf
pusha
and
jb
inc
jle
dec
xchg
jp
and
or
popa
push
sbb
ja
inc
xchg
aas
mov
nop
sti
test
xlat
cmpb
mov
mov
xchg
out
int
push
mov
aad
cmp
xchg
test
loope
xchg
imul
xchg
mov
sub
mov
lock
mov
outsb
xchg
sbb
in
loop
stc
cmp
cmovg
xor
mov
scas
jge
xlat
mov
aaa
notl
mov
mov
das
arpl
lods
jo
dec
add
mov
add
popa
adc
fwait
pop
popa
into
dec
sub
aas
incl
push
dec
cmp
and
dec
mov
push
jns
pop
clc
lahf
push
cmp
add
int3
movsl
fsubrl
imul
sti
xchg
jb
in
xor
sbb
jnp
in
jo
mov
jns
add
sub
fs
test
sub
sbb
rorb
jle
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
xor
sbb
dec
cmp
dec
inc
jp
add
jp
xor
nop
fisubrs
scas
fistpl
or
pop
sub
ds
cs
push
push
pop
scas
mov
lcall
lret
ljmp
fsubrs
mov
cs
pop
xor
jp
mov
aam
mov
xchg
std
lea
inc
dec
push
jns
pop
mov
imul
or
shl
inc
icebp
gs
jmp
fistl
cmp
inc
mov
pop
rcl
xor
lcall
cmp
aas
sbbl
sbb
pop
clc
into
std
mov
pop
xchg
push
ss
and
out
shll
push
mov
sbb
rcrl
bound
jmp
mov
aas
xor
lods
cmp
lret
mov
shrl
jne,pt
and
mov
into
cmp
sti
push
outsb
or
xchg
jmp
mov
rcrl
mov
sahf
into
inc
cmp
scas
mov
ljmp
pop
sub
cmp
dec
push
push
push
jp
mov
stos
sarb
sahf
ljmp
sbb
jnp
or
outsl
push
lahf
cli
scas
orl
rcrb
data16
sbb
pop
push
or
jb
jge
out
scas
call
int
lret
dec
jmp
iret
scas
or
pop
dec
cs
cmovb
cs
push
push
jp
mov
lcall
scas
ficompl
or
pop
sub
ds
cs
push
push
jp
mov
lcall
scas
ficompl
or
std
jb
or
rcll
shr
jmp
pop
jnp
test
or
testl
inc
imul
filds
and
inc
xor
cmp
dec
xor
or
xchg
cmp
jle
pop
ja
test
in
call
mov
sbb
inc
test
mov
fisubrs
es
dec
mov
int
xor
mov
movsb
arpl
loop
orl
dec
mov
sbb
or
jge
xor
adc
pop
loope
aaa
movsw
jmp
mov
int3
pushf
sbb
idiv
stc
stos
push
mov
and
jp
pop
and
pop
dec
loopne
loop
mov
xchg
imul
pop
mov
data16
and
hlt
or
xlat
ret
cmp
xchg
cmp
add
mov
pop
mov
cmp
pop
xchg
clc
fldcw
xor
je
bswap
ja
mov
ds
outsb
xchg
std
cs
mov
hlt
xlat
pop
and
jae
mov
and
fistl
or
sti
adc
xchg
lgs
push
xor
int3
and
sarb
dec
xor
rolb
call
in
mov
cld
fwait
out
jmp
in
nop
pop
lcall
adc
cmp
repnz
or
mov
testl
xor
sub
sbb
cmp
jecxz
sub
dec
rcrl
push
loop
xor
lret
push
imul
sbbb
mov
in
mov
ror
or
mov
in
mov
jb
mov
adc
dec
loopne,pn
test
lods
mov
shll
pop
xor
lods
outsb
aaa
ljmp
fsubrl
push
les
fiadds
in
imul
ss
bnd
xlat
xor
dec
xchg
inc
jmp
shll
xor
jge
xor
rolb
adc
enter
push
xor
pop
cmp
pop
xchg
leave
xor
inc
add
adc
or
dec
dec
into
jl
mov
aas
jg
lock
xor
lahf
xchg
mov
mov
jnp
call
fstpt
jae
test
daa
push
idivb
loope
fcmove
cli
out
pop
fmulp
imul
roll
aaa
fnstenv
fs
jne
jecxz
icebp
cli
pop
nop
fwait
xorl
out
sub
jae
xlat
sbb
fmull
or
jns
fcmovb
das
js
loope
mov
xchg
shll
mov
mov
add
ret
pop
mov
push
ss
lods
lret
aam
fs
insl
adc
mov
neg
mov
rolb
cs
pop
hlt
leave
mov
push
test
flds
sbb
test
enter
xchg
pop
leave
add
and
push
xor
pusha
cmp
add
into
inc
xchg
or
daa
sub
cmp
sbb
mov
jne
aad
mov
jle
lahf
imul
lods
mov
mov
jmp
inc
jno
jecxz
jb
xchg
popa
pop
sub
cmp
insb
or
dec
mov
test
push
xor
nop
adc
dec
add
or
xor
lahf
xorl
sub
jle
mov
ds
pusha
inc
push
frstor
lahf
adc
jge
inc
loope
inc
ss
shl
mov
jmp
dec
mov
sar
in
outsb
movsl
lock
stos
pop
fnstcw
cwtl
jp
loop
add
push
lods
pop
xchg
push
leave
mov
mov
inc
mov
loope
jae
cmpsb
jp
push
es
jbe
bsr
stos
sub
mov
ficoms
cmp
jae
mov
lahf
mov
repnz
cmp
cmp
xchg
xchg
mov
dec
lds
mov
jne
mov
mov
int3
ret
loopne
push
xor
dec
mov
scas
les
insl
pusha
jmp
test
xchg
fiaddl
mov
and
push
cmpsb
and
xor
lea
lock
xchg
bound
data16
jge
out
mov
cltd
sbb
add
pop
dec
repnz
divl
scas
xor
mov
xor
cmpsl
addb
xor
dec
jmp
addr16
js
inc
inc
dec
mov
cmpb
jns
and
int
out
jge
data16
xchg
sub
incl
pop
add
inc
pop
lea
push
push
cmpsl
pushf
sub
jmp
cs
and
or
dec
jecxz
pop
sub
dec
bound
into
test
shl
nop
mov
push
dec
pop
hlt
or
lret
sub
pop
imul
aam
inc
and
shll
adc
mov
cmp
cli
jp
mov
ret
lahf
jmp
pop
adc
inc
xor
out
and
sbb
stc
jp
lcall
or
mov
daa
lret
dec
inc
subl
hlt
and
test
pop
data16
insb
add
shr
sbb
or
sbb
int
cmp
rol
pop
mov
pusha
dec
fwait
in
sbb
mov
xor
in
jmp
fidivrs
xor
clc
xchg
jo
je
sbb
inc
out
push
std
jns
pop
pop
clc
xchg
push
xchg
popf
fs
outsb
xchg
es
pushf
or
xchg
mov
inc
stos
les
aas
outsl
sub
sub
jle
aad
test
daa
enter
mov
fdivl
add
cmp
int
data16
pop
sub
and
add
mov
leave
xor
dec
lods
rol
mov
adc
pop
mov
push
or
or
mul
push
pop
lea
and
sub
mov
inc
jle
lret
mov
xchg
adc
icebp
inc
ljmp
xchg
mov
mov
cmc
test
ret
fldln2
xor
mov
jg
std
jmp
das
outsl
test
loope
add
and
mov
cltd
cltd
and
inc
lea
cmp
pop
pop
neg
fdivrl
das
insb
loopew
loop
insl
add
addr16
insl
es
lea
sub
jle
or
and
jnp
inc
mov
ljmp
mov
cmc
es
xor
pop
sbb
mov
inc
movsl
xlat
xchg
jp
in
or
jp
sub
push
jns
in
dec
cmpsb
sub
sarb
xor
cltd
test
xor
addr16
addb
push
stos
xchg
aad
addb
inc
fldt
inc
sbb
mov
es
lcall
add
push
std
add
subl
dec
mov
push
addr16
fisubrl
jp
dec
notb
in
xlat
mov
push
stc
mov
arpl
frstor
adc
rolb
ret
imul
cmc
push
fcompl
aaa
sbb
adc
icebp
jnp
xor
pop
xor
add
dec
inc
jnp
mov
ficomps
sbb
dec
lods
or
lret
jl
pop
adcl
test
jmp
dec
hlt
imulb
out
sbb
mov
jno
pop
pop
inc
flds
mov
mov
ret
scas
inc
andl
jo
mov
sbb
mov
test
or
mov
sub
dec
mov
and
mov
negl
aas
mov
xchg
jmp
jl
add
sti
and
add
shr
arpl
in
and
and
fldt
or
xchg
jp
imul
lods
es
dec
in
or
cmpsb
inc
or
dec
je
lock
dec
mov
mov
cs
fmulp
inc
enter
jae
dec
add
xor
insb
jge
cli
shlb
imul
filds
add
jp
push
sbb
aaa
pop
popf
outsb
mov
push
cmc
xchg
bound
or
and
out
pop
enter
lods
cmp
in
dec
cmp
or
jo
or
cli
pushf
les
push
xor
sub
sbb
bound
mov
xor
icebp
adc
hlt
out
and
scas
idiv
je
pop
adc
in
mov
in
enter
xchg
lods
mov
enter
cmp
jo
sub
xor
sti
or
sub
inc
stos
cmp
ret
imul
sub
mov
insl
nop
mov
cld
push
and
push
cmp
shll
cmp
pop
in
xlat
hlt
sbb
mov
pop
je
pop
inc
cmp
mov
ret
dec
mov
scas
and
aaa
or
in
pop
fsts
loopne
and
pusha
xchg
stos
jns
push
xor
ljmp
cs
int
pop
lret
jns
xchg
sub
sti
lock
jo
xchg
sbb
js
gs
stc
aam
int3
daa
dec
mov
ret
idivl
jg
aam
les
mov
mov
cmp
jle
or
pop
lods
dec
adc
lds
mov
loop
pop
mov
ljmp
rcr
out
adc
mov
dec
mov
add
hlt
jg
sahf
shr
sbb
mov
xlat
pop
cmp
dec
jecxz
pop
add
mov
dec
or
pop
stc
iret
push
inc
dec
in
loop
aas
bound
pop
psubusw
imul
sub
cmpsb
incl
pusha
mov
jnp
arpl
mov
xlat
and
sti
push
dec
jno
jp
fiadds
xchg
push
inc
mov
xchg
dec
sbb
mov
ljmp
jbe
es
cmpsb
stos
inc
js
inc
mov
cltd
sbb
mov
cli
pop
pop
mov
mov
subb
aam
adc
ret
inc
je
add
mov
ja
shll
shrl
inc
inc
movsl
lods
sbb
cmp
arpl
inc
pop
test
xor
dec
mov
inc
movsl
sub
xor
fldl
mov
cmp
imul
jp
scas
dec
xchg
mov
movsl
data16
test
or
push
ss
jecxz
lcall
div
inc
pop
in
mov
add
dec
mov
stc
aas
cmpb
scas
je
add
mov
jge
and
push
in
cmpsb
fnstcw
lcall
inc
repz
jle
loop
mov
lret
sub
inc
lock
adc
pop
sti
out
leave
sbb
sahf
mov
hlt
stos
xchg
mov
sbb
stos
movsl
add
inc
ljmp
cld
hlt
test
add
movsb
js
enter
lcall
cmp
loope
jl
or
clc
or
or
repnz
push
aad
xor
mov
mov
in
dec
lods
ja
mov
adc
pop
out
adc
dec
jmp
adcb
mov
adc
sbbl
leave
mov
roll
imul
fimull
dec
in
cmp
repz
shlb
add
sub
push
xchg
out
mov
push
or
jnp
xchg
cmp
sbb
inc
orl
daa
lea
jl
dec
or
and
cli
lcall
dec
ret
push
cmc
mov
pop
lock
jmp
cli
ljmp
jecxz
int3
repnz
mov
push
ss
xor
jns
cmp
aad
push
sahf
xchg
arpl
or
out
outsl
push
adc
xchg
popa
jp
test
jnp
outsb
leave
js
push
dec
or
aad
rclb
les
adc
js
inc
xorl
sub
loop
jbe
xor
dec
mov
mov
loop
mov
call
or
call
jmp
in
add
std
mov
idivl
addb
sub
or
or
push
pusha
jp
mov
inc
sbb
xchg
lcall
xor
rcl
mov
sbb
daa
mov
jbe
jl
in
scas
mov
and
shl
push
mov
cltd
test
test
lcall
faddl
adcl
push
je
icebp
jecxz
or
enter
jae
je
dec
jp
std
and
xorl
pop
clc
pop
mov
roll
cmp
mov
dec
rclb
orb
xchg
ficoml
push
mov
stc
push
adc
add
dec
adc
xchg
cmp
jle
js,pt
stos
sarb
inc
xor
mov
and
fld
xor
nop
mov
cmp
addb
jne
test
stc
mov
repz
xor
lods
jl
xor
pop
lcall
test
or
out
dec
jge
or
out
in
je
sbb
jle
xor
roll
icebp
add
jae
movsl
and
leave
rorl
sub
cwtl
test
mov
nop
sbb
jmp
adc
shrl
push
cmc
popa
icebp
inc
jle
xor
mov
adc
loopne
jl
push
sahf
pop
insb
mov
leave
cld
ja
xchg
into
mov
scas
aam
inc
jns
or
jno
test
lcall
lret
mov
jns
ret
jbe
pop
push
test
push
inc
xchg
loope
pop
sbb
mov
lds
mov
dec
push
pop
cmpsb
xchg
push
and
bound
pushf
ss
cmp
or
nop
inc
mov
and
push
jne
cltd
fstl
dec
ret
jbe
adc
jae
in
cmpsl
xchg
bound
ret
push
adc
mov
cmp
lods
mov
pop
iret
pop
stos
jbe
testl
lahf
daa
jb
xor
dec
fwait
mov
nop
jb
stos
mov
pushf
ss
sub
mov
movb
pop
aas
adc
sbb
icebp
pop
push
cli
sbb
push
out
adc
or
ljmp
out
or
mov
sub
mov
test
stc
pop
sbb
or
cmpsb
dec
cmc
in
jo
xor
mov
hlt
mov
sub
push
shlb
add
mov
imul
mov
dec
mov
jae
loopne
dec
bound
cmp
insl
xor
mov
test
dec
mov
arpl
aam
and
push
jo
jmp
imul
scas
inc
jb
mulb
xlat
int
cld
inc
cltd
lock
inc
std
lea
xchg
outsl
pop
cwtl
adcl
cmp
mov
ficoml
xor
imul
ret
xchg
push
loopne
cmpl
pushf
rcll
mov
xchg
sbb
push
jmp
xchg
jp
and
jp
in
scas
pop
push
mov
js
mov
mov
and
sti
or
jge
or
add
push
mov
daa
xor
je
testl
pop
xlat
sbb
mov
ret
inc
dec
ja
inc
mov
aas
sub
jne
push
mov
stos
cmp
ss
arpl
imul
and
mov
dec
mov
outsb
cmp
pop
aam
dec
pop
pushf
xchg
lret
cmpsb
add
jg
aam
xchg
das
sub
jl
mov
sub
add
xor
pop
jl
inc
mov
push
pop
imul
f2xm1
or
cmp
and
xor
pushf
or
call
mov
adc
outsl
cmp
lock
mov
fsubrs
jg
jo
shll
mov
out
stos
cmp
sbb
jb
aaa
fs
add
fs
cwtl
iret
mov
fsub
push
dec
flds
cli
mov
and
call
inc
push
roll
in
inc
add
jns
icebp
scas
stc
rcrl
cwtl
lock
test
pushf
stos
add
fistpll
cmp
xchg
rcrb
jl
clc
fsubl
xor
or
dec
fdivrp
jge
cmpsl
std
cmp
and
adc
or
push
push
jnp
sbb
andl
fwait
test
cli
mov
cltd
mov
or
lock
out
aad
sbb
inc
pop
lock
xchg
jmp
out
pop
stos
movsb
lcall
fldenv
enter
sub
push
das
ret
jge
adc
call
mov
adc
mov
mov
sahf
xchg
dec
int3
or
mov
pushf
pop
imul
sbb
or
sub
out
sbb
mov
fstps
imull
add
jle
cld
out
scas
mov
es
sub
cmp
pop
insl
movsb
inc
bound
into
or
cmp
mov
sarb
adc
sbb
jmp
pop
ds
sahf
movsb
repz
popa
push
cmpsl
dec
dec
cmp
fistl
outsb
ffree
stc
int3
jl
lahf
lock
sbb
jecxz
das
add
dec
sbb
or
sub
add
test
xchg
xchg
sti
xchg
jo
adc
cmpsb
outsl
fstps
test
sbb
lea
cmp
les
jnp
cmpsl
inc
cli
cmpb
pusha
scas
clc
cmp
lock
cmpsl
dec
lods
jge
lcall
sub
dec
movsb
mov
sub
call
fimull
jecxz
push
pop
xchg
pop
sbb
cmp
outsl
cmc
movsb
push
xchg
jbe
jo
scas
mov
jmp
xchg
jne
dec
push
aaa
mov
enter
xor
int3
lcall
ffreep
xlat
fcoml
xchg
mov
xchg
or
in
dec
push
ret
mov
push
pop
xor
ljmp
int
pop
xchg
imul
sbb
icebp
movsl
andl
inc
lea
sub
clc
pop
les
jae,pt
fimuls
add
push
xchg
cmp
add
sub
pop
js
or
insb
roll
push
adc
adc
dec
pusha
add
shld
arpl
ror
xor
or
data16
fs
add
lret
scas
das
sbb
sbb
cmp
jmp
fbld
cmp
inc
test
pop
xchg
push
lret
sub
pushf
stc
lret
push
outsb
push
and
mov
jno
ss
es
rcrb
add
push
imulb
imul
sub
lock
xor
daa
out
fs
fcoml
xor
xor
jo
leave
in
je
repz
or
das
push
jmp
mov
addl
rep
addr16
add
mov
adcl
cmp
fimuls
pop
sbb
jae
nop
adc
cltd
sbb
cwtl
add
outsl
pushl
ud2
movsl
ret
push
addr16
rorb
and
and
inc
xlat
in
fsubrs
or
cltd
ljmp
mov
lahf
stos
mov
in
dec
lea
xchg
dec
outsb
aaa
sub
cmpsb
mov
ret
jmp
flds
push
push
push
fmul
add
or
xchg
mov
leave
or
das
pusha
mov
cmp
dec
movsl
ret
cmp
adc
xchg
mov
ds
or
sbb
add
out
mov
cmpsl
je
mov
jecxz
lret
cmp
dec
clc
bound
stos
mov
cmpsb
pop
outsb
xchg
filds
add
movl
fs
mov
mov
shld
repz
adc
mov
sub
leave
jno
dec
shll
popa
and
cmc
push
xchg
lods
out
sbb
or
mov
cmp
and
imul
dec
jno
in
mov
sub
int3
test
insl
test
sahf
dec
imul
cmp
arpl
and
sbbb
outsl
aam
in
push
mov
movsb
in
adc
dec
xor
push
push
stos
cmp
mov
insl
cltd
fidivrs
mov
xor
sub
push
xchg
out
mov
movsb
push
cli
adc
rcrb
test
in
les
stc
push
pop
into
je
imul
mov
adc
das
mov
and
aam
push
or
jne
jecxz
pop
jo
sub
in
lahf
lea
dec
pop
add
fldl
xchg
out
stc
pop
push
loopne
adc
jnp
iret
cli
sub
xchg
enter
cmp
cmp
movsw
sub
pop
and
aaa
jbe
jo
inc
cmp
test
push
sbb
jl
pop
fimull
pop
iret
xor
mov
cmp
lahf
dec
mov
mov
mov
pop
fdivp
push
inc
mulb
cwtl
mov
mov
ffree
sub
pop
shrb
je
and
pusha
add
aad
ja
dec
pop
std
stos
pushf
loopne
scas
lahf
pop
les
inc
in
divl
jle
lahf
or
imul
cmp
fnstcw
fmull
cmp
dec
cs
push
push
jp
mov
lcall
scas
ficompl
or
pop
sub
ds
cs
push
push
jp
mov
lcall
scas
ficompl
or
dec
sub
aas
dec
sub
push
jp
mov
lcall
mov
lcall
sbb
sub
ds
ds
push
push
mov
je
into
int
inc
es
pop
ret
js
push
cld
dec
icebp
and
push
clc
call
push
mov
ret
js
push
xchg
cmp
enter
call
adc
ret
js
push
xchg
cmp
jmp
mov
lea
push
sti
jbe
inc
shll
ret
js
add
pop
inc
pop
push
shll
jecxz
repnz
out
and
push
test
mov
xchg
xchg
or
les
inc
xor
bound
jae
ret
out
and
into
cmpsl
xlat
and
adc
ficompl
repnz
ja
data16
call
add
and
sarl
xor
popa
dec
sub
sub
inc
sbb
inc
inc
fsubl
adc
pop
int
std
xor
movntq
mov
push
jne
arpl
lret
inc
and
sub
xchg
xchg
dec
adcl
mov
xorb
jg
stos
xor
loop
repnz
sub
clc
call
adc
scas
sub
movsb
cs
in
rcll
lods
ret
lods
cmp
outsl
leave
imul
fcoms
cmpl
loop
movsl
jge
inc
mov
stos
pop
scas
test
push
outsl
insl
in
jge
push
ret
xchg
dec
cmpsb
ds
or
xchg
cmp
enter
call
adc
ret
js
push
xchg
cmp
enter
call
adc
ret
in
pop
and
inc
xor
les
add
out
fisubl
ja
cmp
aad
xchg
and
jp
mov
ss
pop
pop
es
xchg
pop
push
dec
sbb
into
into
inc
cwtl
lret
out
xor
repnz
seta
lcall
shlb
xor
js
scas
mov
test
and
fistl
fldcw
sub
mov
push
stc
insb
int3
push
xchg
mov
inc
jne
das
mov
fisubs
ret
iret
mov
ja
mov
pop
mov
mov
or
ja
out
fsubs
pop
test
add
pusha
lods
pop
pop
mov
mov
mov
jg
adc
push
mov
out
es
in
popa
lahf
add
leave
into
negl
mov
and
mov
loope
decb
add
inc
nop
sbb
mov
jp
lret
mov
sub
xchg
fadd
test
pop
and
jb
xor
push
mov
ds
mov
or
xchg
mov
je
mulb
fwait
jge
test
out
fnstcw
scas
leave
mov
cmp
lods
bound
adc
mov
xchg
gs
cld
cmc
aad
push
xor
sarb
xchg
daa
aam
inc
cltd
jecxz
xchg
xchg
jne
pop
cmp
mov
inc
xor
xor
shrb
mov
ja
mov
loope
pop
imul
push
mov
and
or
dec
inc
mov
mov
in
movsl
pop
pop
dec
mov
out
dec
popf
xchg
pop
and
bound
std
mov
inc
pushf
repnz
lea
cmpsl
es
leave
movsl
add
adc
ds
scas
lret
and
icebp
xchg
cmp
sub
push
loopne
adc
leave
imul
cmp
jnp
jnp
add
pushf
fnstcw
push
ret
arpl
outsb
movsl
sbb
push
mov
cmp
ds
cmp
ds
xor
pop
sbb
loope
adc
pop
mov
ja
fs
cli
outsb
mov
sahf
cmc
pop
aaa
sbb
ja
scas
pusha
pop
hlt
pusha
sbb
push
int
or
inc
hlt
xchg
repnz
test
jmp
ret
aas
mov
aam
xlat
lea
test
cmp
xor
out
out
idivb
jl
lds
and
add
jp
fdiv
push
jbe
ret
mov
xor
sub
mov
test
icebp
jne
ds
rcrl
repnz
leave
test
jle
cmpsl
iret
ret
cs
xlat
lcall
fs
fs
adc
out
fnsave
mov
fcompl
mov
sub
insb
mov
out
mov
and
popa
dec
arpl
test
repnz
mov
push
push
nop
rcrb
or
enter
push
fidivl
lahf
iret
sbb
jg
mov
test
ds
call
aas
dec
test
ret
mov
sar
aaa
inc
out
jbe
movsb
mov
adc
push
xchg
adc
in
cltd
or
mov
xchg
data16
jae
pusha
es
int3
aas
inc
cmp
lahf
imul
mov
pop
lcall
push
cmp
xor
cld
aas
adc
ret
mov
out
stos
push
inc
dec
cmc
mov
pop
les
scas
fcoml
repnz
mov
mov
pop
add
int
xchg
jmp
aas
call
sbb
scas
push
xor
mov
pushf
mov
xchg
add
dec
mov
jne
daa
sbb
push
in
xor
xor
sub
stos
add
insb
jns
ficoms
sbb
mov
rclb
lret
repnz
xchg
rcrb
enter
sbb
jb
sub
rorb
imul
out
mov
lcall
gs
ret
icebp
rclb
out
dec
ds
dec
sbb
fisubs
jp
nop
and
push
cmp
cmp
and
fcoml
out
out
mov
and
and
cmp
or
and
push
xchg
cmpsl
arpl
mov
cli
ja
push
rcrl
dec
jl
test
clc
add
pop
repz
cmp
or
mov
add
lcall
cmpsl
incb
mov
adc
mov
mov
pop
xchg
jle
jecxz
dec
adc
repz
aaa
dec
int3
add
or
pop
insb
cmp
hlt
insl
test
pop
xchg
dec
pop
xlat
loopne
int3
inc
pop
sbb
cld
sub
add
mov
xor
mov
pop
pop
lods
sub
rcr
movsl
addr16
add
pop
lahf
aam
aaa
test
repnz
out
lret
jae
xchg
mov
ret
cmp
cmp
adc
sbb
pop
sti
jae
push
maskmovq
testl
in
mov
cwtl
dec
mov
call
roll
push
jmp
movsb
std
das
pushf
lds
pop
jp
std
repz
or
inc
loopne
js
push
jge
hlt
inc
mov
xor
xor
mov
xchg
inc
dec
sub
jmp
add
std
fwait
loop
sbb
or
mov
nop
pop
cmp
mov
jl
lods
sub
jmp
or
popf
push
inc
mov
dec
cmp
cmp
push
mov
addl
jb
je
int3
xor
xchg
mov
mov
jmp
movsb
gs
repnz
popf
add
sub
pop
data16
and
je
dec
test
ficoml
test
shrb
jp
scas
push
aad
cli
push
movsb
jno
in
mov
sub
mov
js
test
pop
sub
cli
mov
scas
aad
popa
adcb
pandn
fiadds
shrl
lcall
sub
add
mov
dec
ja
mov
cld
mov
push
cmp
mov
jl
and
loopne
add
pop
fisttps
jno
dec
negb
pop
mov
jno
mov
xchg
cld
arpl
jp
je
dec
add
xlat
inc
xor
int
mov
push
add
ror
in
lock
cmc
in
push
add
adc
mov
sti
loopne
stc
in
testb
int
mov
sbb
test
mov
test
xor
mov
aas
out
call
push
div
imul
xchg
sbb
sbb
sahf
inc
adc
lock
fidivs
mov
push
rcrb
adc
lods
xor
loop
mov
inc
mov
loop
inc
pop
mov
enter
push
bound
cli
mov
mov
call
sbb
dec
xor
fmulp
push
inc
lcall
pop
aad
loopne
sub
xchg
mov
clc
push
and
movsl
dec
jae,pt
or
loopne
jns
stc
ljmp
iret
cwtl
add
mov
sahf
pusha
mov
insl
cli
or
xchg
jmp
scas
popa
mov
insb
int3
or
mov
stc
cmp
inc
push
clc
inc
push
inc
or
icebp
cmpsl
pusha
jp
add
fcomp
loop
aaa
push
pop
push
imul
pop
sub
push
mov
xor
dec
out
pop
push
popa
into
mov
shrl
insb
stos
sub
es
call
mov
enter
jmp
lods
loop
mov
xchg
les
add
addl
jns
repnz
dec
pop
pop
ret
pop
movsl
cltd
in
add
inc
movsl
mov
adc
pop
mov
mov
mov
sti
xchg
ss
int3
lock
push
or
mov
dec
sub
mov
cwtl
sub
cmp
lods
push
dec
add
mov
inc
ds
add
dec
dec
and
call
jmp
push
cmp
idivl
add
rcl
jno
in
push
test
push
xor
shlb
les
dec
and
pop
and
xchg
mov
pushw
pusha
cld
inc
orl
push
fsubp
inc
lods
test
jmp
lret
in
incl
ljmp
jae
ljmp
jp
add
jne
int3
lahf
cmp
jle
dec
lods
mov
arpl
jecxz
repnz
into
fbstp
fldl
pop
outsb
inc
fstl
mov
push
jo
pop
clc
rclb
clc
jmp
cmp
outsl
std
jae
sub
adc
mov
push
jl
xchg
pop
dec
repz
inc
loop
out
out
loopne
xchg
fsubrp
cmpsb
mov
fisubs
ljmp
stos
sub
addr16
push
in
fsubl
push
adc
sub
jl
xchg
lret
sbb
leave
xchg
rorl
popf
push
cmpsb
negb
dec
push
cmp
iret
push
push
mov
xor
cmp
mov
jg
inc
pop
fadds
icebp
addb
mov
dec
sbb
mov
imul
scas
je
cmpsb
es
inc
into
and
cmp
pusha
jge
xor
stos
decl
sub
fisttps
fisttps
lret
or
lds
pop
cmp
loopne
setl
scas
daa
cwtl
addr16
or
inc
sub
adc
cmp
push
push
inc
test
mov
push
fidivs
or
stos
ret
push
cmp
daa
or
ljmp
push
mov
into
std
test
cmp
gs
dec
fdiv
fisubrl
lock
dec
je
adc
jno
push
aas
pop
inc
daa
fs
sbb
insl
jae
int
scas
adc
out
dec
jle
test
xor
and
sbbb
mov
mov
addr16
aaa
stos
dec
cmpsl
mov
pop
cmc
test
repz
add
repz
mov
mov
push
lea
xor
mov
out
cmp
jp
shr
scas
jmp
cmp
dec
cmpsl
mov
loope
cwtl
aad
sbb
mov
scas
inc
into
rcr
rol
inc
dec
push
lahf
loopne
sbb
dec
lock
loope
cltd
xor
popf
daa
mov
mov
xchg
push
stos
mov
mov
das
lret
mov
push
into
jo
jno
push
aaa
movsl
jmp
pop
sub
fmull
stos
pop
call
in
push
into
mov
pop
and
cmp
xor
pop
inc
inc
lret
scas
mov
or
lahf
push
inc
lret
cli
add
in
pop
fcomps
jo
out
cmp
jl
mov
jmp
mov
mov
dec
xor
fists
clc
ret
js
pop
ret
ljmp
adc
push
mov
stos
jae
push
adc
xchg
adc
mov
adc
imul
inc
sarl
or
jmp
jbe
rorl
fistpl
cmc
adc
and
mov
ds
int3
mov
int3
mov
jno
hlt
inc
push
mov
test
sub
lret
out
dec
pushf
cmp
mov
test
sbb
adc
mov
cmpsl
clc
push
mov
adc
dec
xchg
mov
dec
mov
adc
popf
lahf
pop
mov
adc
into
push
jno
push
popa
mov
test
xor
stos
push
adc
test
cmp
mov
enter
cs
fimull
pusha
mov
ret
psubsb
pop
inc
leave
push
inc
pop
mov
in
jmp
or
aam
sub
pop
out
nop
mov
jmp
das
xor
pop
std
jecxz
lods
fbstp
sub
sub
add
das
mov
push
lfs
xor
aad
cs
cli
mov
push
push
adc
mov
notb
xchg
xchg
push
sbb
add
push
mull
sub
sub
cwtl
mov
leave
cmc
in
xorl
xlat
mov
shrb
jl
ja
mov
in
sub
pushf
fstps
imul
sbb
add
inc
dec
and
dec
inc
sub
jae
icebp
xor
cli
daa
xlat
lahf
jmp
mov
or
jne
pop
dec
gs
std
push
sub
mull
or
xchg
cmp
jo
shll
jne
push
sti
ja
mov
rep
mov
cmp
aaa
mov
pop
push
and
insl
mov
and
add
jnp
sub
dec
nop
add
test
mov
dec
cli
and
and
lret
les
aam
add
enter
cs
in
or
fimuls
and
jno
jle
and
cmp
mov
cmpb
ret
jb
sub
jae
xlat
movsb
sti
push
push
add
xor
jecxz
in
and
xchg
call
mov
lret
xlat
sub
enter
out
jecxz
shrl
sbb
or
mov
mov
xchg
mov
inc
incb
pop
cmpb
sub
cmpsb
mov
xor
lds
xor
add
cmp
repz
mov
aaa
cltd
inc
ds
loopne
aad
dec
mov
xchg
ret
jne
aas
inc
cs
jecxz
cmc
or
jne
leave
rcl
out
mov
fstpl
xchg
gs
pop
ss
nop
jns
or
stos
pop
ret
lds
out
arpl
enter
xor
mov
jge
or
ljmp
fildll
leave
jno
pop
pop
pop
cmp
cmp
ds
xchg
mov
pop
aas
pop
lcall
sbbl
dec
add
xchg
pusha
jp
popa
enter
shl
xor
repz
movsl
pop
mov
push
lds
or
xor
cld
adc
ja
dec
add
sub
pop
aam
ja
sub
movsl
jnp
lcall
icebp
and
cmpsl
mov
int3
popf
inc
leave
cmp
loopne
or
sub
push
sub
js
lods
das
or
or
ret
adc
and
daa
jbe
inc
push
lcall
loop
adc
lods
jmp
ljmp
lret
xchg
ss
jns
jmp
inc
pop
adc
pop
out
mov
pop
loop
sbb
push
jbe
or
xor
sarb
fidivrs
mov
out
mov
pop
lock
notl
fisttpl
add
sub
adc
insl
adc
and
imul
jbe
sub
cmp
dec
lret
pop
adc
data16
mov
cli
pop
loop
jecxz
in
sbb
clc
adc
add
movsl
movsb
stos
insl
or
and
cld
xchg
movsb
xchg
push
dec
cmpsl
iret
and
jg
psubq
ret
movsl
cmpsb
stc
decl
sbb
lods
add
dec
push
repz
inc
test
and
jnp
pusha
jl
ljmp
loopne
je
hlt
mov
scas
pop
push
or
subl
cmp
mov
leave
add
fwait
push
fisttps
sbb
je
xlat
les
sub
push
popl
xor
fldcw
xor
repnz
jg
or
lret
jno
lahf
fcoml
xchg
push
std
das
pop
pusha
fdivs
stc
sarb
cmp
cmp
and
fsubs
out
shll
xlat
loopne
inc
stos
fdivs
je
out
out
ror
imul
push
pop
push
push
xor
into
pop
mov
andl
ret
outsb
cmpsl
inc
ret
mov
jae
shlb
mov
aam
out
mov
inc
andl
mov
adc
mov
mov
in
or
dec
and
das
add
dec
cmp
adc
call
xchg
ljmp
fisubs
xchg
dec
lods
inc
sub
push
mov
ljmp
sub
xchg
sub
aaa
xchg
fcom
test
stos
mov
mov
sub
add
sub
cmp
sub
xchg
lret
aam
bound
pop
mov
mov
jo
incl
outsb
outsb
jl
mov
cmpsl
scas
pop
xor
in
push
mov
ja
and
aas
scas
arpl
inc
inc
call
lea
mov
lea
xor
dec
mov
dec
insb
mov
bound
into
cld
dec
push
in
sbb
push
sbb
lret
clc
push
mov
out
xchg
sbb
sub
xor
shll
loopne
push
mov
jge
ss
xchg
cmp
stc
jne
xchg
jne
adc
and
movsl
cmp
jb
xchg
test
imul
xor
mov
iret
or
xlat
adc
cmp
push
sub
movsb
inc
dec
and
jle
inc
xor
sub
dec
test
mov
or
jns
or
xchg
xchg
repz
sbb
icebp
sbb
push
hlt
fwait
test
xchg
rcl
rcrb
mov
pop
ljmp
andl
adc
inc
loope
aas
in
xchg
xchg
and
fistpll
jb
mov
pop
sbb
bound
mov
sbb
cmp
add
push
xorl
outsb
mov
cwtl
hlt
arpl
and
addb
ja
bnd
cmc
pop
inc
fmul
push
rorb
or
cwtl
aaa
lods
test
insb
fs
sbb
add
mov
xchg
mov
lahf
into
inc
xchg
mov
add
imul
or
push
dec
pushf
xchg
js
cmp
cmp
ss
adc
mov
dec
movsb
test
pop
pop
adc
push
incb
pop
push
call
sbb
dec
and
fsubl
mov
std
aaa
stc
push
pop
add
dec
pop
jbe
nop
cmp
test
inc
and
shll
test
lret
dec
iret
lods
imul
int
mov
adc
jmp
imul
movsb
pop
add
sbb
push
and
and
sbb
fisubrl
xor
fdivrl
in
xor
popf
or
stos
cmp
cs
push
cmpb
pop
mov
nop
loopne
jmp
push
mov
arpl
pushl
lds
cmp
xor
cmpsb
inc
clc
pop
lods
shl
dec
call
xor
and
pop
int
jne
sbb
xchg
xchg
in
fcompl
lret
push
xor
sub
push
push
adc
cmp
repnz
iret
pop
cltd
mov
ficomps
fstl
dec
popf
add
test
not
jl
cmc
sahf
pop
cmpsb
mov
jmp
xlat
testb
mov
or
or
inc
xchg
cmpsl
inc
movsb
mov
mov
in
lock
fwait
es
mov
fcoms
or
push
push
out
xchg
xchg
push
mov
cmc
imul
adc
lret
stos
mov
imul
imulb
xchg
mov
ljmp
fucomi
pop
jnp
stos
jl
xor
add
mov
pop
or
xor
mov
loop
call
or
repnz
shrl
xor
roll
cmp
adc
ss
mov
and
inc
fcomp
xchg
rcrl
mov
adc
adc
sbb
outsb
clc
mov
dec
ja
cmc
xchg
sbb
add
xor
mov
adc
shrl
jns
xchg
aad
inc
push
pop
jl
dec
rcl
jae
cli
movsl
adc
xor
dec
mov
leave
pusha
adc
lret
dec
pop
shrl
and
push
jge
imul
aaa
sub
jb
and
sahf
cli
lock
mov
divl
sti
dec
repz
rep
jecxz
cwtl
xchg
lds
xchg
inc
and
in
fisttpll
out
test
cmpsb
cmpsw
pop
clc
jb
and
lock
movsb
jno
jns
jo
mov
mov
mov
addr16
psrlq
mov
andl
mov
mov
ret
loopne
mov
cmp
push
movsb
adc
dec
les
xor
mov
sbb
adc
fstl
adc
pushf
aaa
out
fsubl
mov
inc
and
and
dec
push
das
and
sub
pop
loopne
push
pusha
cmpsl
pop
dec
mov
pop
adc
mov
lcall
push
jb
push
add
sbb
jmp
faddl
mov
pop
lea
mov
pop
iret
fs
or
jo
adc
cli
jle
jb
xlat
add
jo
shrl
lcall
hlt
adc
push
popa
dec
fsubr
xor
cmp
xor
xor
movsl
fiaddl
loope
loope
das
xchg
stos
call
pop
out
dec
sbb
adcl
or
mov
stos
push
push
xchg
das
xchg
xchg
mov
test
ds
arpl
pushf
je
sti
push
cli
sub
jmp
cmc
or
xchg
popa
bnd
xchg
mov
push
xchg
cmp
enter
call
adc
ret
js
push
xchg
cmp
enter
call
adc
dec
sarb
push
xchg
cmp
enter
jmp
adc
ret
js
push
adc
mov
call
in
inc
fstl
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
cltd
push
mov
insl
and
ficomps
or
cmp
sub
pop
outsb
dec
jl
dec
imul
mov
jb
into
jmp
push
cmp
daa
push
pop
add
jns
imul
es
rcl
ret
jmp
pop
push
push
insl
pop
cmp
pop
and
scas
out
mov
fxch
jne
shrb
push
lahf
sub
jno
push
xchg
dec
repz
and
adc
add
pushf
pushf
or
outsb
lds
push
or
mov
scas
jne
dec
xchg
out
mov
mov
sub
mov
movsb
xchg
pop
dec
mov
jns
imul
sahf
lea
es
enter
call
outsb
or
loop
outsl
dec
xor
mov
dec
sbb
lret
mov
sbb
sbb
cs
fstps
mov
pop
jns
jno
imul
es
loope
out
test
icebp
jns
sbb
sbb
push
scas
nop
dec
mov
out
fsin
stc
adc
pop
add
xor
inc
push
xchg
imul
fmul
fnsave
mov
jmp
jnp
jp
ja
add
or
add
imul
call
mov
stc
mov
insb
push
pop
and
comiss
stc
aad
sar
mov
stc
into
jmp
cmp
sub
pop
outsb
dec
jle
dec
imul
mov
stc
into
jmp
cmp
sub
pop
outsb
dec
jle
dec
imul
sub
mov
add
xchg
test
jnp
fwait
cld
outsl
xor
adc
xchg
xchg
shlb
add
fiadds
lret
mov
add
xchg
nop
sbb
fimuls
cmp
dec
xor
pop
inc
out
dec
and
adc
inc
jns
popf
pop
xchg
shll
mov
push
pop
insb
lret
push
xchg
adc
movsb
es
mov
push
stos
sbb
rcrb
scas
das
mov
push
inc
sbb
fsubs
jae
les
loop
mov
mov
pop
in
pop
fimull
aam
int
scas
sbb
adc
jbe
test
mov
pop
push
in
out
rcrl
dec
lcall
adc
hlt
xchg
mov
jbe
mov
dec
mov
enter
cmp
push
dec
notl
cmpb
stos
jl
repnz
ljmp
dec
dec
xchg
push
add
xor
into
decl
lea
int
pop
fisubs
mov
cs
cmp
mov
dec
inc
mov
inc
and
and
sub
in
or
xor
les
lea
iret
fiadds
or
xlat
iret
lcall
pusha
les
movsl
mov
test
mov
mov
mov
ds
iret
dec
mov
cld
push
push
and
scas
jge
into
xor
movsl
fisubs
cmp
jae
je
and
hlt
add
add
enter
or
out
ret
js
aas
cli
pop
ret
xor
jmp
adc
and
aas
push
pop
or
insb
outsb
int3
jo
jae
pop
or
outsl
imul
pop
sbb
lock
in
and
enter
nop
test
je
cmp
xlat
scas
int3
mov
mov
and
iret
scas
mov
mov
outsl
jmp
push
and
imul
mov
sub
pop
incl
add
cld
stos
lock
cmpsl
into
imul
pop
mov
test
clc
das
stc
scas
or
sbb
pop
cmp
imul
jno
lret
xchg
xor
or
inc
inc
jp
sbb
test
nop
in
scas
lcall
mov
std
mov
test
mov
push
mov
inc
fucom
and
int
std
out
jl
jmp
sub
sub
int3
xchg
ljmp
enter
mov
sti
xchg
popf
pop
xor
dec
xor
and
adc
mov
jle
mov
mov
push
mov
pop
add
pushf
popl
xor
ljmp
xchg
adc
push
pop
ja
mov
test
push
or
jge
rol
lahf
xchg
sub
ljmp
pusha
shld
movsl
mov
les
inc
rcll
mov
pop
test
sbb
lock
daa
scas
xchg
bound
test
ss
les
pop
inc
sub
pop
sbb
add
push
test
outsl
sbb
pop
push
sbbb
lods
loope
repz
loop
mov
xchg
lods
add
loop
and
in
sub
push
cltd
mov
out
cmpl
in
mov
sub
jmp
loopne
push
ficomps
and
or
xlat
jmp
fdivrp
adc
cmp
shlb
xorb
push
fbstp
mov
iret
mov
dec
cmpsl
aas
sbb
ljmp
sub
cltd
push
mov
ljmp
jne
aam
mov
cld
popa
cld
push
dec
cld
pop
out
cmp
jo,pn
and
dec
enter
in
lret
and
push
jns
mov
sti
popf
jecxz
mov
fimuls
inc
push
inc
add
jbe
lret
stos
adc
out
sbbb
sbb
dec
push
shl
pop
push
iret
inc
dec
jno
mov
cmp
mov
dec
add
sti
jmp
mov
inc
sbb
dec
adc
or
rcll
popa
and
stos
repnz
enter
ja
in
inc
in
xor
mov
lock
divb
test
or
mov
push
lcall
mov
mov
dec
push
mov
or
inc
lcall
jl
inc
movsl
push
clc
outsl
adc
and
jnp
mov
mov
hlt
outsl
jl
negb
cli
in
jmp
clc
sar
cmp
stos
bound
bts
outsl
or
aaa
cmpsb
test
cmp
add
inc
xchg
or
xchg
pop
data16
or
push
fsubr
sub
pop
in
or
imul
ret
push
roll
mov
mov
repz
pop
stos
push
decl
jnp
icebp
jo
dec
in
mov
mov
lret
inc
mov
xchg
cmp
cmp
sub
mov
jl
cli
fsubs
push
or
sub
mov
push
push
mov
or
in
rolb
sbb
aam
pop
push
daa
and
mov
arpl
incl
sbb
into
ja
push
adc
dec
jg
or
clc
sub
leave
mov
sub
arpl
jle
or
add
repz
lret
fwait
dec
sbb
adc
push
movsl
lods
rolb
mov
iret
xlat
mov
ret
mov
inc
fiadds
add
rcll
test
xchg
aas
sbb
xchg
sub
jl
pop
cmpsb
dec
out
pop
pop
jae
xlat
mov
mov
push
std
sbb
clc
pop
rcll
enter
out
and
or
hlt
push
cmp
pusha
mov
inc
adc
mov
and
sub
ja
push
xor
imul
lea
adc
sbb
lret
push
jne
sbbl
add
pop
dec
in
dec
aam
into
mov
fidivl
sub
jne
dec
das
data16
sub
push
outsb
fcoml
movsb
adc
and
add
test
mov
cmc
inc
sbb
movsb
add
xor
mulb
fnstsw
fs
data16
and
mov
outsb
mov
xlat
repz
fstl
int3
fs
mov
rclb
jg
jg
std
xchg
pop
or
sub
call
sbbb
mov
xchg
jge
or
lods
and
mov
jbe
mov
cli
flds
fisttpl
fimull
pop
stos
mov
std
push
mov
cmp
subb
int3
lahf
loopne
and
jo
pop
pop
add
and
scas
pop
lret
fistl
sbb
xor
inc
mov
push
add
cwtl
adc
lods
lahf
and
jecxz
xor
aam
xlat
jle
mov
pusha
xor
addr16
push
fistl
pop
pop
xchg
int3
jl
mov
lock
loopne
mov
cltd
sti
xchg
iret
add
cltd
imul
mov
jg
sub
sub
mov
push
jae
mov
addr16
xor
lods
mov
inc
stos
aad
pop
pusha
add
pop
xchg
fucomi
mov
jecxz
jmp
or
test
add
icebp
lods
jb
test
ret
mov
aas
fmulp
inc
dec
fadds
hlt
cltd
xor
lret
dec
jns
or
jnp
adc
mov
push
push
sbb
stos
push
in
inc
jb
and
cmp
pop
sub
clc
adc
mov
test
xchg
jge
lret
loopne
sub
icebp
popf
or
fs
sti
pop
jo
jb
adc
dec
movsb
or
jg
push
cmp
cmpsl
xor
mov
int3
ret
add
sbb
mov
frstor
xor
and
xchg
cs
not
fistps
mov
pop
fs
je
lock
cwtl
lcall
roll
dec
inc
pop
loop
dec
lods
push
sub
aas
test
pop
mov
gs
leave
rcrb
push
or
push
ja
mov
sbb
imul
xor
xor
cli
mov
adc
sub
adc
jmp
or
mov
mov
cmp
pushf
jecxz
icebp
mov
push
mov
cwtl
sbb
push
jge
in
inc
jnp
dec
data16
out
mov
jmp
and
pop
imul
psrld
lods
mov
adc
cmc
push
push
sbb
mov
loop
add
pop
daa
imul
inc
or
lret
cld
jle
pushf
mov
mov
scas
mov
fmull
rcr
mov
pop
xchg
addr16
daa
pushf
inc
mov
testl
pusha
inc
xchg
fiadds
push
or
out
mov
cmpsl
negl
add
movsb
stc
mov
clc
adc
fnsave
in
push
mov
test
clc
in
in
xchg
lcall
inc
outsb
out
js
cmp
jle
adc
sbb
sub
gs
loope
mov
xchg
pop
das
movsl
mov
jns
test
insb
addr16
sahf
jmp
or
dec
push
es
pop
pop
push
fmul
mov
cmp
bound
jle
dec
scas
sti
jmp
inc
or
enter
aad
sbb
arpl
popa
cli
pop
adc
or
mov
sti
lret
and
rcll
mov
cltd
std
stos
enter
imul
mov
mov
push
pop
jbe
jbe
mov
dec
jne
xor
call
sub
fcomps
cmp
mov
aad
push
push
clc
aad
push
loop
mov
mov
repnz
and
mov
adc
insb
decb
xchg
sbb
mov
cmp
cmp
sbb
clc
mov
std
cwtl
dec
lret
daa
jno
int
xor
cmp
sbb
pop
cmc
shll
mov
add
les
xlat
inc
and
gs
dec
and
scas
sahf
roll
adc
pushf
mov
addb
and
pop
je
lahf
in
or
cmp
mov
jno
popf
xorl
dec
in
push
loope
loope
leave
inc
mov
sbb
jne
je
lcall
pop
dec
or
mov
ss
adc
scas
in
pop
dec
ss
cmc
cli
sbb
xor
sti
daa
je
and
or
test
out
mov
repnz
call
inc
mov
stc
mov
inc
xchg
leave
imul
pop
add
cmp
arpl
rorb
or
outsl
sti
cwtl
cmp
dec
cmp
divb
xchg
pop
hlt
xlat
pop
pop
pushf
jmp
movsb
test
push
hlt
loopne
fwait
aaa
cwtl
outsb
xor
lds
dec
jnp
inc
cli
pop
pop
subb
mov
sbb
mov
jmp
cmp
stos
add
das
sbb
pop
lea
fs
bswap
out
mov
fimull
rorl
jbe
cmc
test
adc
jns
dec
shrl
add
lret
push
rcrb
dec
jp
shrl
stc
and
int3
xchg
mov
sub
cltd
dec
rcl
ss
adc
xchg
sub
iret
jbe
pop
insb
pop
fs
sahf
cwtl
sub
mov
jb
movsb
fldt
sbb
inc
push
fsubl
mov
cmpsl
aad
jg
inc
lods
add
fdivr
lds
std
fwait
pusha
mov
mov
lods
mov
inc
cs
xchg
cltd
movsl
push
cmp
pop
jle
loop
dec
mov
and
popf
pop
push
test
pop
add
xchg
or
push
jmp
stc
push
lcall
mov
jecxz
dec
push
jg
adc
inc
xchg
fildl
imul
out
stc
mov
pop
rorb
or
sti
scas
sbb
sbb
dec
ja
into
adc
rcr
inc
lret
imul
lds
fdivs
scas
aaa
jo
fldcw
cli
imul
dec
sbb
push
add
jae
mov
or
or
xchg
in
xor
mov
aam
add
pop
int
add
cld
bound
cmp
dec
stc
lahf
push
inc
cmp
imul
dec
fs
sub
adc
bnd
ss
ds
incl
mov
aam
jb
mov
cmp
xorl
std
das
inc
jnp
outsb
pop
cmc
adc
push
movsl
subb
jnp
rcr
mov
mov
data16
lret
out
or
fiaddl
sarl
sahf
pushf
enter
xchg
loopne
pop
and
jmp
xor
mov
lahf
sub
loop
mov
jnp
jae
fbld
mov
dec
nop
std
mull
mov
testl
test
dec
out
lahf
outsb
mov
xor
jno
insl
xchg
lock
jo
xchg
push
push
cld
jg
dec
stc
pop
jp
popf
mulb
push
fistps
lock
aam
sbb
or
mov
cmp
hlt
inc
outsb
xor
and
sbb
negb
in
insb
mov
stos
add
and
mov
aad
sub
into
or
add
test
mov
dec
dec
mov
loopne
pop
ss
cmp
stos
fidivrl
add
adc
data16
mov
fsubl
mov
push
nop
jne
test
in
clc
fildl
push
push
fdivrl
mov
loopne
movsl
int
test
push
lods
roll
jb
xchg
aad
mov
das
jp
addr16
xchg
add
lds
sbb
lahf
add
xor
dec
sbb
pop
push
xlat
pop
into
mov
loopne
mov
jle
out
jo
and
test
add
or
popa
arpl
sbb
rcl
repz
pop
mov
ja
insb
adc
or
adc
mov
movsb
sbb
pop
test
int3
aas
pop
dec
xor
fmul
push
ljmp
xor
mov
dec
repnz
jno
fnstenv
outsl
lahf
jnp
test
imul
or
adc
dec
mov
and
nop
pop
addr16
lcall
xchg
sbb
inc
filds
push
insb
and
push
insl
inc
mov
test
pcmpeqb
or
lret
mov
cmp
add
push
sbb
inc
cmp
cmp
adc
aam
sahf
es
mov
daa
ret
insb
mov
or
mov
adc
or
push
into
dec
push
outsb
jmp
lods
int3
and
aad
inc
add
movsb
sbb
sub
cmpsb
mov
mov
and
test
ds
and
adc
push
xchg
inc
mov
push
pop
dec
pusha
push
sbb
xchg
aad
rclb
div
sub
test
mov
mov
insb
lahf
xor
cs
jg
ret
insb
push
mov
xor
lea
mov
fwait
jp
sti
je
daa
gs
pop
lds
and
mov
lcall
cmp
xchg
dec
dec
add
mov
jp
ja
in
jbe
xchg
jae
jbe
ja
cmc
test
mov
mov
xchg
and
jno
jno
xchg
cmp
xor
mov
lcall
loop
stc
and
fcmovnu
js
pop
cmp
sbb
push
jge
hlt
test
sub
add
loopne
fnstcw
je
imul
push
xor
inc
clc
sub
aad
xor
out
andl
or
sti
add
lods
mov
cmp
mov
mov
cmp
push
push
lcall
leave
shl
xorl
cmc
ds
mov
ljmp
push
xor
xchg
mov
pop
dec
push
mov
jmp
xchg
ljmp
push
stc
pop
test
xorl
add
pop
mov
sbb
andb
test
lret
xorl
pop
inc
shlb
andl
out
hlt
xor
repz
stos
dec
xor
jno
inc
cld
xor
repz
popf
add
pandn
enter
scas
or
rorb
mov
sti
push
lods
lock
rcll
cmp
push
lea
jbe
sbb
flds
neg
shlb
push
and
jge
ss
sahf
out
sub
out
je
mov
jne
fnstcw
dec
sbbb
inc
xchg
push
lret
das
mov
xor
test
xchg
fst
mov
xor
inc
jns
out
int3
pop
adc
mov
and
push
enter
das
pop
out
repz
cli
sub
xchg
movsb
popf
inc
pop
lahf
repnz
out
push
dec
cmc
pop
outsl
fdiv
inc
ja
and
sbb
setp
sub
popf
xchg
scas
mov
loop
pop
mov
and
inc
lea
sahf
lods
out
lods
icebp
push
pop
in
je
mov
and
mov
dec
jb
popf
push
ficoms
repz
repnz
add
jno
push
mov
outsb
in
add
movsb
sbb
fimuls
mov
push
xchg
ficoms
mov
sub
and
lods
out
jg
xchg
mov
jecxz
inc
xchg
ds
adc
and
mov
movsb
adc
and
cltd
jo
jl
sub
sahf
jns
xchg
cmp
outsl
pop
xchg
fwait
pop
jg
daa
mov
push
loope
sbb
ror
lds
mov
jp
mov
test
dec
push
pop
test
xchg
cmpsb
sbb
loop
jo
add
or
add
jl
inc
cmp
sub
jle
aad
xchg
dec
xchg
mov
xor
ret
sbb
pushf
dec
mov
mov
sub
jge
cs
enter
push
xchg
adc
out
dec
in
loopne
xchg
and
imul
fcoms
jb
xchg
jae
mov
or
aam
hlt
sub
mov
sbb
cs
daa
pop
or
aad
or
int
out
push
jge
mov
mov
sub
stos
pushf
xchg
jae
iret
or
inc
pusha
cli
imul
jmp
mov
out
std
and
imul
inc
jns
roll
inc
pushf
dec
sub
lahf
or
dec
daa
stc
sbb
lcall
xchg
inc
int
jg
jne
aad
push
add
dec
xor
lret
sbbl
aaa
std
dec
push
cmpsb
jbe
int3
pop
mov
xchg
cmp
es
adc
negl
add
repnz
dec
leave
daa
sub
cld
adc
cli
es
push
xor
or
sbb
aam
outsb
insl
mov
adc
pusha
fldt
inc
add
in
xor
nop
xor
in
push
jb
jecxz
out
mov
movsl
adc
xchg
loop
je
xchg
leave
jmp
dec
jecxz
popa
mov
daa
test
outsl
pop
dec
cmp
xlat
scas
mov
in
sahf
xor
sbb
push
aas
lods
adc
mov
push
push
sub
sbb
and
inc
pop
imul
xlat
pushf
push
pop
lds
mov
mov
cmp
sbb
inc
lods
sbb
pop
xchg
push
xlat
mov
mov
leave
dec
xchg
sbb
jnp
negl
cld
lods
xchg
mov
stos
adc
sbb
testb
lcall
sbb
test
jg,pn
jno
push
ret
test
and
cmpsl
shlb
ret
scas
daa
loop
and
inc
fdiv
divb
out
rcrb
or
loopne
and
sub
arpl
enter
sahf
xchg
pushl
jmp
push
loope
inc
add
icebp
sbb
movsl
jp
out
fwait
and
xchg
inc
and
xchg
mov
in
sbb
mov
inc
jmp
popf
mov
test
cmpsl
leave
jg
xlat
scas
sbb
pop
scas
jmp
ds
gs
stc
jb
es
clc
lods
or
icebp
fisubl
out
mov
inc
sbb
decl
inc
push
pop
jle
test
sbb
stos
pushl
jo
xchg
cmp
jb
cs
pop
test
ja
outsl
out
aaa
icebp
insl
clc
pushf
enter
xor
add
mov
pop
pop
dec
mov
adc
add
push
outsb
addr16
cmc
push
and
push
push
and
pusha
bnd
push
lds
dec
lock
xor
and
inc
xor
shll
and
das
push
push
movsl
mov
push
jnp
jbe
cmpsl
pop
inc
pusha
mov
aas
mov
fidivrl
stc
fwait
push
pop
lret
or
mov
int3
push
ljmp
out
test
add
scas
repnz
mov
daa
push
cmp
inc
inc
and
imul
aas
or
in
adc
jns
mov
aam
ja
jo
jg
push
pop
out
pop
mov
scas
mov
movsl
enter
and
outsl
xchg
stc
inc
dec
cmp
push
cwtl
into
dec
sub
jmp
jns
jge
sbb
xor
imul
lea
fsubr
sbb
xlat
mov
mov
roll
adc
out
imul
sahf
fldz
leave
stc
into
jmp
cmp
sub
pop
outsb
dec
jle
dec
imul
mov
stc
into
jmp
cmp
sub
pop
outsb
dec
jle
dec
imul
imulb
push
stc
into
jmp
cmp
sub
pop
outsb
dec
jle
outsb
imul
mov
fucomi
leave
jns
imul
xchg
push
sub
out
addl
jmp
mov
mov
and
jns
or
pusha
sub
or
fldenv
mov
cltd
loopne
lock
and
jns
or
pusha
imul
leave
nop
fldenv
mov
cltd
loopne
lock
dec
or
aas
jbe
pop
push
cmp
leave
hlt
xchg
dec
pop
jp
jae
mov
test
into
adc
sti
enter
cld
dec
push
aas
or
pushw
scas
or
cmpsb
fildll
hlt
mov
jns
push
cmpsl
push
lds
imul
push
add
test
or
mov
fcoml
stc
out
lds
lea
pop
sub
inc
mov
sub
inc
insb
dec
push
cltd
mov
mov
mov
call
xchg
dec
mov
xor
jno
jge
outsl
arpl
and
cmp
pop
fistpll
js
sbb
fisubs
leave
nop
fldenv
mov
cltd
loopne
lock
and
jns
or
pusha
sub
shll
nop
shl
cltd
test
bnd
and
dec
aas
inc
push
ss
leave
cmc
fcmovnb
jmp
xchg
std
cwtl
fisubs
sub
or
push
inc
push
jb
dec
add
mov
sbb
cltd
loopne
lock
and
jns
or
pusha
sub
or
fldenv
mov
cltd
loopne
lock
and
jns
or
pusha
sub
or
nop
cmp
inc
mov
adc
test
lods
pop
xchg
in
dec
jae
cmpsb
sub
out
jl
lahf
sub
hlt
sub
and
imul
pop
pop
add
adc
into
pop
idivb
xchg
dec
mov
insl
cmc
cli
shlb
jp
cmp
jo
cmc
test
mov
mov
dec
ficoms
and
and
pusha
sub
in
lea
xchg
popf
fwait
lret
daa
sub
ja
xchg
dec
pusha
clc
rcrl
fwait
int
shl
push
daa
add
insl
mov
fcoml
and
mov
dec
enter
ja
imul
outsl
mov
into
jb
ret
loopne
imul
inc
pop
sbb
test
push
mov
mov
mov
xor
xor
jl
pop
jp
jp
lds
fisubs
prefetch
xor
pop
pop
sbb
sub
xchg
nop
pop
dec
jmp
es
insl
adc
test
rcrb
popa
sub
ret
mov
aam
dec
dec
mov
cwtl
push
imul
push
fmul
rorb
fadds
sbbl
mov
lock
xor
xchg
dec
pop
sub
jp
nop
out
dec
mov
aaa
fldcw
roll
pop
add
inc
cmpsb
jmp
pop
out
or
add
mov
xchg
shrl
shlb
sub
push
push
arpl
mov
push
rcr
sbb
cli
hlt
cmp
lea
test
idiv
pop
icebp
ret
push
cld
lret
dec
push
mov
outsb
addr16
mov
aad
jb
sbb
push
pop
dec
cmpl
jns
xchg
xchg
or
or
mov
sahf
lret
daa
jp
nop
xchg
pop
fwait
inc
push
cmp
and
xor
mov
mov
repnz
sub
aas
mov
xor
mov
inc
sub
inc
sarl
nop
popf
ljmp
inc
mov
or
daa
stc
push
push
inc
xor
loop
mov
mov
dec
pop
cmp
das
xchg
mov
out
outsl
push
bound
sub
jg
add
inc
loope
inc
lods
insb
outsl
cmp
lcall
mov
stos
and
loop
ss
dec
cmp
out
ss
out
push
and
and
cmp
xchg
cmc
sub
cmp
mov
shll
fwait
jge
adc
scas
enter
sub
xchg
jb
adc
leave
and
cmpsl
mov
aaa
gs
push
cmp
movsb
lahf
mov
mov
xchg
ss
aaa
inc
loop
test
pop
jecxz
adc
adc
and
inc
adc
dec
pusha
lcall
dec
xchg
in
push
sub
cmp
and
ficoms
cmpsb
sbb
iret
fcomip
push
test
or
loop
inc
pop
das
sahf
jp
insl
and
inc
fstpt
add
ret
pop
lea
aam
push
push
ja
fcmovnbe
pop
xchg
mov
pop
xchg
push
inc
hlt
xorl
or
out
fadds
add
dec
inc
loopne
iret
lahf
mov
adc
aaa
add
sarb
xchg
sub
or
xchg
pop
movl
ret
pop
dec
xor
insb
sub
cmpsl
push
mov
movsl
or
xchg
clc
aas
imull
cld
xchg
jo
mov
cmp
mov
movsb
xchg
mov
das
push
hlt
xchg
rep
xchg
inc
cmp
jae
cmp
dec
adc
pop
and
pop
sbbl
iret
clc
jmp
mov
sub
outsl
lcall
add
mov
leave
pop
xor
pop
lcall
dec
sub
in
push
aad
sbb
or
xlat
sub
adc
les
lds
lret
and
mov
roll
popf
and
mov
adc
out
ja
or
clc
dec
push
sti
jnp
mov
jmp
adc
fdivl
movsb
dec
popf
adc
test
test
rcl
in
mov
add
jns
je
call
mov
inc
xchg
cmc
inc
ljmp
cmovp
js
pop
popa
pop
xchg
aaa
inc
daa
xchg
pop
insl
xchg
or
or
hlt
mov
push
aas
push
pop
out
call
lahf
ljmp
dec
xor
cs
clc
dec
and
std
adc
xchg
rorl
xchg
push
dec
xor
or
mov
data16
xor
xor
addl
cltd
adc
mov
mov
vsqrtsd
mov
jle
push
es
cmp
hlt
int
dec
daa
add
pop
push
add
jmp
imul
sbb
lahf
add
fsubrs
mov
mov
sub
or
stos
ss
outsl
outsb
push
cmc
cmp
inc
mov
jo
sbb
sarb
xchg
sti
in
mov
inc
jo
ret
adc
jecxz
fdivr
flds
and
sbb
fs
mov
subb
iret
in
stos
pop
lods
sti
adc
cmpsb
sarl
dec
mov
lds
mov
leave
lret
mov
mov
cmpsl
imul
sbb
mov
shl
mov
sbb
imul
jle
call
mov
inc
xchg
xor
imul
pushf
in
mov
inc
inc
cmpsb
xor
cmp
dec
int3
adc
mov
jecxz
fstpl
test
or
cmpsb
cltd
movsl
xchg
xchg
dec
je
jmp
stc
xchg
fbld
nop
cli
iret
pop
and
adc
adc
aaa
xchg
xor
insl
ret
js
jg
rolb
in
dec
roll
ret
dec
fwait
arpl
fistpll
aas
push
jnp
jnp
lcall
mov
cmp
xchg
sti
out
mov
push
xchg
pop
mov
gs
imul
ja
fisubrl
mov
rcl
inc
xor
aas
push
mov
and
test
mov
loop
daa
jecxz
dec
imul
pop
jl
lahf
fcomps
leave
push
mov
inc
xchg
mov
or
xchg
mov
pop
and
out
loop
cltd
das
lahf
mov
pushf
cmpsb
mov
pop
loope
sysenter
mov
inc
push
shrd
mov
ret
mov
inc
shrl
out
decl
push
ficoms
nop
ljmp
lahf
daa
dec
lret
fistl
sidtl
jl
loope
jg
cmp
stos
movsl
push
xchg
sub
incl
orl
adc
inc
mov
fnstcw
pushf
add
cmp
pop
enter
mov
push
and
pushf
mov
sbb
enter
repnz
jge
psrad
mov
xor
xchg
roll
rcrb
mov
push
mov
mov
mov
out
mov
js
mov
sahf
jp
mov
jl
scas
lahf
repnz
lret
jle
mov
fwait
mov
lcall
stc
inc
sbb
les
lds
sub
lds
mov
xchg
cmpsl
push
and
add
sub
dec
dec
popa
out
xchg
mov
ds
hlt
inc
lret
cmp
mov
xor
jbe
cwtl
fidivl
in
lods
dec
or
pop
ret
int3
push
xchg
mov
orb
stc
insb
inc
inc
lret
imul
stos
andl
fdecstp
clc
mov
rcr
fstpl
mov
push
jge
push
pop
mov
cmp
inc
outsl
dec
rcll
iret
testb
pop
movsl
es
popf
mov
popl
test
push
es
into
cmpb
push
cmp
data16
rolb
inc
xlat
jecxz
stos
jns
sub
out
ja
scas
mov
mov
or
push
push
mov
das
mov
or
xor
in
xchg
ret
bswap
mov
es
fstps
fsub
jno
daa
into
les
or
imul
or
sbbl
adc
cld
and
inc
out
cmpsb
imul
and
std
jle
jmp
pop
and
divb
lahf
xor
fsubr
loope
or
shlb
jns
and
xor
xchg
jo
jp
in
cmp
mov
mov
fwait
sub
pop
inc
stos
pop
push
inc
lret
rol
stc
movsb
adc
pop
setge
sbb
aaa
add
push
or
test
xchg
xor
fnstenv
aas
push
lcall
jecxz
mov
cmp
xchg
pop
ja
cmpsb
or
icebp
rolb
rcrl
lds
pop
or
in
cmp
push
jmp
or
xchg
xor
xor
xchg
cmp
push
lcall
call
sub
jmp
xchg
sub
xchg
jecxz
push
bound
aaa
leave
outsb
mov
or
cmp
sub
add
adcl
and
aam
sbb
mov
xchg
pop
pop
gs
ljmp
mov
scas
test
scas
sahf
mov
jge
and
dec
pop
xchg
add
int
in
ljmp
push
cwtl
pop
mov
cmp
je
dec
ds
pushf
push
xor
cmp
decb
cmpsb
in
xchg
adc
sbb
mov
jmp
inc
xchg
jmp
loope
sbb
sub
mov
ds
mov
ds
xchg
pop
cmpl
jmp
mov
sbb
scas
iret
arpl
xchg
fcmovnbe
sub
fstl
sar
fcompl
mov
mov
and
jl
out
pusha
ljmp
test
dec
mov
outsl
mov
pop
pop
js
dec
jle
mov
mov
push
xchg
push
xchg
sahf
sar
mov
fucomi
dec
dec
lahf
mov
sub
gs
pop
push
sub
add
pop
arpl
ret
ficoms
je
mov
fldt
shll
mov
in
pop
sub
push
sahf
fwait
mov
jo
pop
testb
cmc
push
pusha
repnz
mov
data16
movsl
test
icebp
push
ret
pop
lods
testl
dec
inc
xor
inc
fcomi
clc
stc
out
add
jecxz
insb
out
pop
scas
cltd
push
add
nop
fsubl
lcall
xchg
addr16
push
jp
sub
outsl
ret
xchg
xchg
xchg
inc
push
jg
nop
lahf
adc
jle
adc
pushf
sbbl
xchg
adc
mov
call
xlat
call
xchg
sti
pop
sub
push
pusha
or
clc
je
sahf
jecxz
cltd
dec
or
shll
sub
arpl
jmp
or
sub
icebp
jbe
cmp
xchg
fucompp
mov
dec
mov
outsl
xchg
std
mov
sbb
les
dec
das
and
push
dec
jle
int
popf
or
hlt
mov
mov
in
adc
push
daa
pusha
inc
add
out
iret
testl
jb
jo
xor
dec
movsb
mov
jae
cwtl
dec
daa
aam
lcall
pop
shll
fidivl
arpl
mov
cmp
in
negb
lcall
dec
gs
xor
sbbb
cmc
xchg
adc
fbld
pop
call
lret
and
arpl
in
icebp
xchg
out
push
xlat
adc
mov
inc
mov
mov
out
fmulp
push
jg
cmc
adc
dec
jnp
mov
mov
movsl
aaa
mov
fsubrs
mov
sarl
cmpsb
and
push
ljmp
push
push
jecxz
adc
dec
in
jecxz
push
nop
das
repz
ds
imul
int
repz
pop
aas
inc
repnz
fdivrs
fisttpl
stc
and
or
leave
subl
dec
movsl
dec
jo
mov
shlb
mov
sub
and
out
mov
mov
cmp
stos
movsb
mov
lret
inc
ljmp
and
js
filds
adc
cld
rcll
cld
sbb
or
push
jne
lahf
enter
adc
add
pop
stos
sbb
and
pop
cmp
xor
rcl
outsl
jnp
test
sub
outsb
movsl
pop
cmp
in
xorl
lcall
push
cmp
or
imul
ret
xorl
call
push
xor
and
xchg
out
jmp
bound
mov
inc
inc
daa
jecxz
stos
dec
js
test
repz
dec
stos
cld
add
shl
add
stos
not
push
fs
out
mov
ret
sub
jo
loopne
add
mov
cli
stos
mov
jl
testl
rclb
pusha
repz
mov
scas
imul
sahf
pop
or
or
sub
push
inc
sub
mov
punpckhbw
adc
xor
je
test
mov
shr
mov
inc
rolb
dec
xchg
rol
stos
icebp
cmp
call
add
icebp
xchg
lcall
cmp
imul
jbe
and
pop
push
ret
xchg
pop
decb
cmpsb
inc
fildll
mov
arpl
in
in
data16
lods
scas
xchg
imulb
int3
sahf
and
std
ja
into
aam
cmc
dec
jnp
pop
cli
push
xor
inc
aaa
pop
scas
sar
mov
out
mov
jge
test
mov
rolb
and
lret
ja
push
movd
enter
test
stc
sub
or
or
ljmp
sbb
xchg
jg
add
out
jg
add
dec
pop
pop
sbb
test
mov
jo
dec
sahf
cmp
xor
pop
scas
lods
or
jmp
jbe
cmc
lods
fisubs
imulb
and
das
or
jb
mov
cmc
cli
es
and
lods
mov
out
test
aaa
xchg
xor
push
mov
fwait
push
fsub
aaa
mov
lret
fsubs
pop
shlb
iret
xchg
inc
mov
mov
push
cmp
sbb
jmp
loopne
addb
dec
in
mov
pop
insl
mov
stc
cmpsl
and
lret
test
call
in
xchg
xor
xrelease
mov
cwtl
inc
loopne
xchg
push
loop
push
adc
and
fs
repz
xchg
push
pushf
rol
pop
xchg
push
jge
out
les
mov
inc
cltd
jae
in
lea
inc
loopne
xorb
or
pushf
hlt
push
or
push
sti
cvtpi2ps
stos
add
sbb
jmp
and
addb
sahf
and
pop
subb
fistpll
sub
sub
cmp
aam
mov
fwait
mov
jne
add
or
jmp
pop
jp
ret
stc
pop
mov
push
sbb
pop
shr
pusha
call
pop
jne
dec
fistpl
push
les
test
sub
loop
push
lret
adc
xchg
xor
in
movsb
sub
jmp
cltd
dec
and
dec
idivl
push
xor
mov
pop
sahf
sub
ficompl
in
mov
stc
addr16
pop
mov
rcll
das
pop
or
or
xchg
sarl
cmp
stos
hlt
add
bound
jmp
jbe
out
push
fdivrs
pop
and
pop
pop
popf
ljmp
sub
mov
xlat
dec
cli
mov
cmp
cmp
out
mov
mov
imul
inc
mov
mov
sub
jbe
push
or
popf
add
clc
fcmovnb
int3
ret
int3
lods
movsl
addl
add
jnp
mov
sahf
xlat
sub
ret
cli
sbb
mov
fdivs
mov
sbb
sub
mov
fs
push
pop
or
movsb
in
push
mov
mov
jno
or
mov
pop
mov
clc
xor
mov
push
sbb
aad
sbb
movsb
push
mov
and
mov
repz
fnstenv
push
jmp
andl
int3
adc
test
xchg
cmc
loop
sbb
out
out
pop
cwtl
push
push
pusha
sub
sti
cltd
bound
imul
sbb
adc
leave
in
lcall
ljmp
pop
push
loop
sub
addr16
inc
clc
cmpsl
adc
mov
mov
aad
jae
xor
xchg
cmp
dec
movsl
inc
mov
sti
jno
cmc
inc
and
cmpsb
in
arpl
lret
test
cmp
or
push
sbb
add
aas
in
jb
shl
mov
push
testl
inc
xor
mov
xchg
push
leave
scas
xor
call
loop
mov
movsb
cmp
out
repnz
jns
insb
pop
lahf
shlb
dec
fs
xchg
mov
divl
push
rcll
fisttpl
sub
xchg
int3
xor
mov
movsl
push
adc
pop
leave
or
in
add
pop
fistl
jbe
popa
jo
in
mov
pop
lret
xlat
and
ret
les
sub
daa
push
jo
or
ljmp
jnp
sbb
cmpl
test
pushf
jnp
mov
fs
fwait
xor
lahf
or
or
ljmp
push
loop
movsb
push
lea
and
test
arpl
push
push
jo
push
jp
jmp
fs
push
sub
out
stc
sbb
inc
jns
gs
sbb
pop
scas
xchg
into
sbb
aad
notb
inc
pop
outsb
fisubrl
mov
mov
and
and
cmpsl
or
std
push
movsb
lcall
mov
shrb
insl
sub
jb
stc
shlb
mov
arpl
dec
mov
ljmp
hlt
cmpsb
loopne
cmp
adc
clc
testl
shll
mov
insb
jle
orl
push
pop
sbb
mov
in
xor
popa
and
stc
jp
push
out
pop
fnstenv
mov
lods
mov
addl
mov
mov
or
or
addr16
and
sbb
push
lods
loop
xchg
jg
or
cmp
mov
jns
jmp
add
pop
xchg
jo
xorl
fldenv
dec
push
hlt
cs
aad
out
adc
ljmp
pop
mov
pop
xchg
aam
push
sahf
xor
push
icebp
ret
jl
loopne
mov
loopne
aas
push
dec
and
xchg
mov
mov
dec
outsl
pop
cli
jns
adcb
push
ds
xor
mov
mov
sbb
sbb
mov
mov
mov
add
or
rolb
ret
stc
and
adc
inc
xchg
shrb
cmp
lahf
test
mov
test
jae
inc
repnz
bound
inc
out
push
fcmovb
les
sbb
cmc
sub
outsl
mov
xchg
mov
jle
push
mov
mov
out
sub
dec
push
xchg
decl
in
ss
bound
xor
pop
mov
adc
push
sbb
or
out
pop
mov
mov
adc
mov
jle
fstp
cltd
xor
mov
pop
pushf
jne
push
jno
enter
sbb
inc
add
xor
jmp
shll
cmp
dec
int3
fs
xchg
je
and
xchg
push
mov
testb
stc
sub
xchg
cmpsl
mov
cmp
xchg
movsl
cmp
add
push
cmp
subb
fdivrs
jno
sahf
jae
mov
ja
lods
dec
bnd
test
add
fwait
mov
push
into
ret
or
or
adc
or
adc
or
or
repnz
mov
movsl
fmulp
add
mov
hlt
imul
xor
pop
int
lea
js
stos
es
mov
bound
lods
mov
push
xchg
cmpsl
aam
test
movsl
xlat
test
pop
mov
pop
sub
xor
int3
push
jp
in
add
cmp
pop
inc
scas
mov
jae
or
repnz
inc
push
jl
pop
popa
scas
mov
xchg
xor
jle
movsl
mov
pop
mov
mov
xor
jb
cltd
sbb
lea
and
xor
ds
jp
divl
in
or
jnp
sti
mov
scas
lret
rcrl
inc
pop
mov
jo
jns
and
and
or
pop
das
lcall
aaa
jecxz
gs
mov
dec
dec
mov
sbb
test
mov
jnp
cld
push
enter
cltd
es
inc
jo
push
int3
hlt
pop
lret
cmc
or
loop
mov
test
sahf
pop
adc
shlb
sti
mov
xchg
pop
xor
in
pop
adc
xchg
jo
out
leave
in
jo
push
insl
sub
scas
flds
adc
rep
test
mov
push
adc
aad
into
aaa
push
idiv
xchg
push
push
in
pop
xor
mov
stc
rorb
mov
and
jns
or
pusha
sub
or
fldenv
mov
cltd
loopne
lock
and
jns
or
pusha
sub
or
pop
and
stc
inc
mov
sbb
test
adc
imul
sbb
jo
or
fldenv
mov
cltd
loopne
lock
mov
push
xor
add
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
out
hlt
outsl
les
dec
movsb
jae
dec
movsb
aas
mov
out
inc
fists
mov
add
cmpb
test
aam
movsb
aas
mov
test
xchg
ja
pushl
fists
shll
add
adc
pop
jg
outsl
push
pop
or
mov
pop
xchg
call
sub
xor
push
icebp
dec
cld
mov
les
mov
sub
mov
lcall
xor
add
rorb
sub
out
add
mov
xor
or
sbb
ror
stos
fstpt
jmp
sbb
bound
aaa
cmc
scas
mov
cmpsl
pop
xor
push
lahf
xor
jno
int3
sbb
aaa
cmp
pushf
dec
and
sbb
mov
jnp
xchg
icebp
add
pop
stos
das
fstpt
adc
sbb
stc
aas
in
dec
ret
cmp
pcmpeqw
das
inc
add
mov
popa
in
xor
cld
lahf
sbb
cli
imul
pop
ds
out
pop
mov
mov
test
lahf
pop
lcall
aam
inc
aas
int3
das
test
xor
mov
fbld
mov
adc
lea
cs
lods
dec
lret
pop
fiaddl
pop
xchg
pop
xchg
out
and
pop
lret
jno
test
cmp
arpl
shrl
es
inc
mov
pop
rcrl
insl
leave
push
loopne
cmp
sub
adc
pushl
fists
mov
adc
in
hlt
outsl
les
dec
movsb
aas
mov
test
xchg
pcmpgtb
je
inc
fists
mov
adc
in
push
pop
push
mov
lea
lret
mov
out
bound
push
dec
hlt
int3
mov
xor
cli
aad
mov
lods
mull
pop
push
xchg
or
push
insb
loopne
fwait
pop
ret
nop
mov
mov
jp
fcomp
xchg
int
out
push
mov
cmp
jle
aad
in
mov
test
mov
dec
pop
out
test
repz
rorb
aam
insl
sub
mov
mov
mov
push
daa
data16
lods
sbb
xchg
inc
das
xor
subb
loop
fcoml
clc
mov
mov
icebp
push
cltd
pushf
push
pop
mov
adc
call
fcoms
and
push
cmc
dec
ret
mov
sbb
out
arpl
test
mov
data16
in
pop
add
idivb
cmp
mov
je
xor
mov
lds
test
repnz
faddp
sbb
mov
sti
push
ja
or
xor
out
stc
mov
inc
pop
fsts
frstor
mov
negl
add
pop
or
xchg
mov
xchg
or
mov
xor
add
hlt
jg
andb
and
add
push
mov
jo
mov
pop
orl
push
push
xchg
fwait
cmp
pop
flds
icebp
pusha
xchg
shrl
sbb
or
or
data16
pop
xchg
mov
mov
mov
ret
xchg
int
loop
insl
xor
mov
pop
div
bound
and
cmp
scas
shlb
sbb
movb
cmc
sbb
lret
cmp
pop
movsl
jo
mov
mov
stc
jl
inc
ret
lret
cmpl
sub
fisubrl
add
or
pushf
xchg
data16
lods
test
xchg
lods
ret
pop
inc
sub
lods
fisubs
icebp
mov
xor
out
cli
aam
push
lret
je
test
outsl
pusha
fdivr
mov
inc
out
mov
inc
add
cli
xlat
xor
mov
pop
pop
pushf
and
mull
setnp
ds
out
shll
rorl
adc
mov
push
or
jmp
pushf
xchg
xchg
popa
pop
sbb
mov
das
inc
sub
call
push
arpl
leave
fwait
shr
das
out
repz
cmpsl
cmp
pop
cmc
cmpsb
lret
sub
sub
jle
pop
jp
lock
cmpsb
movsl
jae
mov
bnd
data16
mov
les
jecxz
arpl
in
cmp
push
add
addr16
dec
mov
adc
push
xor
shrb
sahf
and
jb
mov
in
insb
test
hlt
push
fldl
dec
aaa
adc
insb
inc
dec
test
sahf
cmovne
int
jmp
inc
mov
jno
push
adc
jle
addr16
filds
push
stos
jg
xorb
push
fisubrl
mov
loop
pop
mov
popa
dec
sarl
fisttpl
aad
into
push
test
mov
sti
testb
cmp
gs
jmp
xlat
sub
cmpsb
lock
mov
push
scas
mov
xor
test
mov
add
ret
xor
cld
cmpsl
scas
or
mov
jmp
lock
bound
ljmp
lcall
mov
mov
inc
xchg
adc
ss
lcall
jae
mov
cmp
and
repz
fs
negl
in
or
dec
mov
mov
push
push
mov
addb
cmp
leave
ret
fs
mov
sbb
adc
int
fwait
push
popw
popa
insl
scas
jo
lret
and
mov
sahf
pop
jo
and
mov
cwtl
or
outsl
fldenv
rcll
pop
and
pop
dec
arpl
mov
xchg
clc
aaa
pop
outsb
inc
aam
mov
fistps
mov
xor
fs
loopne
popa
js
cmp
xorl
lods
mov
int
scas
test
adc
lea
sub
rcrl
fsubrl
push
mov
in
mov
dec
les
bound
xor
xlat
insb
mov
cltd
mov
xchg
loop
jns
xchg
enter
xchg
gs
sahf
mov
xchg
and
jno
mov
adc
lds
sti
mov
dec
fnstcw
adc
aas
xchg
xor
dec
cmpsl
int
std
jmp
andb
or
lcall
inc
inc
sbb
aaa
or
fisttpll
popf
or
pop
inc
rcl
in
je
imul
adc
sbb
std
movsl
stos
out
xchg
xchg
cltd
gs
adcl
xor
pop
cmp
sbb
or
mov
add
test
jns
ret
adc
cltd
jecxz
adc
testb
xchg
mov
fistpl
sbb
push
loop
test
jl
popa
loopne
cmp
sbb
dec
gs
jmp
pop
cmpsl
enter
negl
adc
rcrl
aas
mov
ljmp
mov
add
adc
dec
sbb
mov
add
js
mov
aad
imul
xchg
jnp
cmp
xor
xchg
lds
dec
mov
and
lods
repnz
test
aam
xchg
inc
xchg
push
sti
sub
inc
ljmp
popa
mov
popf
add
cltd
mulb
or
pop
sub
xchg
je
call
aam
mov
leave
mov
movsl
es
mov
insl
mov
sub
mov
test
inc
test
mov
push
ret
rclb
mov
dec
mov
in
push
push
cmp
mov
repz
mov
adc
sub
cmp
js
testb
insb
inc
dec
xchg
add
pop
movsl
pop
int3
inc
xor
lret
ljmp
xlat
packuswb
cli
xchg
mov
repnz
fxam
jp
cld
fisttpll
out
jb
out
enter
push
call
push
push
sub
imul
hlt
int3
mov
in
mov
outsb
xchg
xchg
jp
ss
int
push
xchg
das
arpl
imul
adc
xor
jge
mov
mov
icebp
sbb
mov
fisubs
and
das
subb
add
add
fdivrp
inc
lea
cmp
xchg
pop
ss
cmpb
dec
push
out
cwtl
cmpsl
inc
and
test
fdivp
rcrb
xchg
mov
movsb
xorl
push
call
xchg
out
pop
out
iret
cmpsb
push
xor
xchg
aad
sbb
mov
imul
repnz
or
jno
jle
and
ljmp
repz
rol
lods
iret
rcll
hlt
cltd
js
inc
shlb
push
push
pop
pop
or
lods
and
mov
les
icebp
sub
insb
xchg
jno
fs
xor
aas
inc
sub
and
fiadds
test
xor
lds
sbb
es
into
lret
sub
inc
mov
arpl
cmpsb
mov
xor
adc
add
rcl
sbb
adc
dec
popa
or
lahf
outsl
dec
pop
addr16
leave
lcall
fs
cld
popa
and
mov
arpl
add
push
mov
sub
shrl
inc
hlt
push
mov
lea
and
mov
mov
lret
test
add
lea
push
shlb
cltd
enter
out
mov
mov
mov
scas
out
sbb
xchg
sub
push
pop
stc
dec
hlt
test
les
inc
lock
aaa
xchg
sar
adcl
das
ret
lods
cmp
lret
enter
test
dec
imulb
sbb
adc
fimuls
or
xchg
push
in
dec
cltd
int3
movsb
push
pop
aad
lahf
push
loop
jnp
pop
mov
inc
add
adc
lock
mov
or
pop
pop
hlt
mov
inc
in
std
sbb
fwait
dec
or
push
insl
aad
adc
mov
pop
and
out
jmp
jns
mov
pop
inc
cmp
test
stc
cwtl
loop
pop
mov
test
lods
cs
jecxz
inc
pusha
jecxz
adcl
lcall
cmpl
mov
dec
xor
scas
lret
jmp
in
inc
mov
push
fsubrl
insl
mov
mov
jns
dec
xor
and
insl
pop
xchg
arpl
jl
push
test
inc
lahf
inc
pusha
mov
push
aad
lret
cmp
cmp
and
popf
xchg
jl
mov
inc
into
mov
and
test
cwtl
in
fildl
and
xor
cld
adc
mov
in
in
or
push
or
cwtl
sub
or
jecxz
leave
rcrl
sbb
cmpsl
xor
jbe
lods
rorb
in
or
in
nop
out
push
pop
std
out
sbb
xor
sbbb
into
repnz
pop
outsb
jo
xchg
mov
and
cld
mov
xor
cmp
std
mov
adc
sarl
in
lds
lret
inc
mov
cmpl
aad
mov
mov
ret
in
cmp
add
inc
in
push
push
jo
enter
cmc
enter
loopne
push
cmp
cmc
and
fcompl
xchg
loopne
pop
pusha
sahf
add
sub
sahf
sub
pop
jmp
mov
xchg
mov
sbb
mov
add
fs
out
aam
and
or
test
xchg
xchg
inc
popf
add
mov
sbb
push
pusha
cmpsl
pop
fsubrp
insl
inc
cmp
pop
mov
cmp
xor
push
mov
sbb
pop
xchg
shll
mov
adc
inc
pop
sahf
mov
lcall
leave
shll
xchg
repnz
hlt
cmpsb
sub
jecxz
dec
or
push
xor
add
sbb
lret
cs
or
dec
stos
imul
xor
cmc
pop
gs
ljmp
dec
mov
cmc
fs
mov
sub
arpl
hlt
pop
xchg
mov
or
and
scas
popa
xchg
out
sbb
xor
mov
inc
ficoms
loopne
rcrb
dec
or
ljmp
mov
fisubrl
subb
adcl
xchg
or
sbb
out
jo
add
ja
lahf
or
mov
sub
dec
mov
sub
cmpsb
dec
in
mov
data16
mov
push
push
sahf
mov
jg
fmul
push
dec
aaa
je
and
mov
mov
nop
push
or
ret
loop
imul
stos
and
jbe
mov
mov
sbb
adc
cmpsl
jp
int3
mov
inc
lahf
and
sbb
gs
pop
jns
testb
call
adc
popa
mov
push
out
sub
scas
jl
leave
or
mov
push
loop
jle
mov
sub
int3
mov
jecxz
and
movsl
int
adcb
jne
int3
pop
sub
adcb
add
jge
push
in
repz
pop
jns
lcall
jne
inc
push
cmp
loopne
repnz
xchg
inc
add
xchg
mov
add
adc
xchg
mov
in
jo
iret
xchg
lods
adc
sahf
dec
cmc
stc
outsl
icebp
nop
jbe
pop
mov
enter
pop
sub
mov
scas
sar
subb
mov
jge
mov
cmp
jmp
inc
dec
outsb
test
pop
ss
ja
scas
ret
lock
stc
mov
ret
imul
iret
jo
shll
sub
mov
data16
cmp
jb
ss
popf
es
notb
sahf
cmp
scas
cmp
jp
idiv
mov
lock
or
repz
popa
je
lret
mov
insb
in
in
imul
out
mov
push
fldcw
xchg
pop
jbe
mov
pop
rcrl
incl
xchg
mov
test
lea
and
xor
sbb
fwait
push
ja
mov
add
in
test
mov
nop
push
sbb
jae
in
and
or
mov
xor
mov
je
repz
lock
ja
and
add
fiaddl
insb
sub
repz
call
sahf
stos
xor
sbb
sahf
inc
push
int
pop
xchg
jnp
es
push
xchg
push
push
subb
mov
test
cmpsb
and
xchg
pop
mov
aaa
rep
or
mov
lock
pusha
scas
push
cltd
fs
out
hlt
mov
paddw
mov
in
jnp
mov
stc
push
les
arpl
out
mov
and
push
jle
movsl
into
nop
std
lods
cli
mov
pop
imul
cltd
dec
incl
pop
add
enter
cmp
lea
mov
ja
sbb
xor
dec
jno
mov
sti
ja
push
adcb
repnz
dec
test
dec
aam
stc
xor
cmp
dec
jl
mov
aam
shrl
cmp
cli
push
jecxz
jl
lods
push
xchg
xor
stos
or
xchg
push
sti
out
icebp
pop
loop
ret
pop
xor
and
das
pop
xor
adc
sub
add
inc
gs
inc
push
push
test
sbb
popa
clc
rorl
lahf
repnz
out
and
cli
jl
scas
cmp
mov
sub
mov
push
fiaddl
movsb
add
mov
adc
cmpl
cmp
popf
or
pop
sub
adc
and
scas
push
je
inc
jb
or
xchg
loope
insb
arpl
push
mov
in
ret
jbe
and
add
jge
jecxz
je
es
insl
lock
mov
mov
or
cmpsl
push
mov
pop
mov
inc
fs
mov
orb
xor
lock
into
mov
pop
jae
push
stos
mov
inc
in
gs
leave
pop
sbb
jb
repnz
pushf
imul
sti
mov
repnz
sub
inc
dec
outsl
in
bound
cs
dec
stc
or
insl
cs
ljmp
xchg
in
jmp
cld
sub
fcoms
mov
push
in
sarb
mov
xchg
shll
fwait
dec
pusha
popa
pop
shlb
sub
scas
dec
and
out
dec
fwait
dec
sbb
cld
mov
fsubl
or
push
insb
movntps
push
lret
mov
lock
xchg
test
ss
shlb
and
lcall
xchg
inc
addr16
cmp
lret
mov
dec
cli
mov
cmp
xor
sbb
pushf
pop
jo
mov
mov
jo
in
and
repz
push
jno
fldcw
fisubs
lock
jne
mov
mov
rol
dec
cld
and
imul
js
outsl
jae
das
inc
pcmpeqd
jo
dec
popa
arpl
loop
mov
int
out
clc
xchg
cld
psraw
dec
sbbl
jg
push
daa
fdivl
xor
pop
iret
or
adc
mul
andb
sbb
jae
mov
mov
iret
jne
and
fdivl
fdivr
cmpb
xor
call
or
rorb
or
or
inc
push
cmp
mulb
mov
in
add
leave
jae
jmp
test
aaa
test
mov
dec
int3
push
mov
or
mov
adc
aam
xor
pop
or
addr16
add
xchg
mov
notl
dec
flds
xchg
fidivs
dec
ret
adcl
jg
imul
sub
fdivl
xacquire
inc
push
adc
mov
pop
adc
in
push
pop
xor
xchg
or
adc
inc
fisubrl
fcoml
lds
bound
inc
iret
rcll
mov
push
cmpb
and
movsb
jns
outsl
repz
inc
sbb
mov
or
mov
mov
fists
cs
and
jl
fcomi
xchg
add
mov
std
mov
mov
dec
imul
jo
insb
lods
push
aad
repz
sbb
push
jbe
push
outsl
rclb
xor
push
and
aaa
xor
mov
jno
es
cmp
cltd
dec
cmpsb
nop
scas
scas
loopne
pop
xor
xor
sub
das
or
ljmp
enter
mov
scas
adc
mov
mov
xchg
pop
addr16
sarb
sub
inc
pop
popa
sbb
cmp
xor
fcmovnb
mov
stc
mov
adc
dec
mov
in
dec
inc
stc
cmp
or
lds
dec
cmp
or
cli
hlt
lahf
rcrl
mov
leave
sub
sub
and
out
ss
fisttpl
mov
loopne
mov
movsb
pop
and
repnz
aam
mov
xchg
cli
lea
in
roll
push
push
roll
or
cmpsl
xor
pop
jb
adc
subl
cmc
cs
sarb
out
str
push
mov
aad
mov
cld
and
and
lret
pop
jo
xor
sub
ljmp
dec
jl
fsubr
pop
jnp
stc
loope
add
mov
repnz
push
shll
push
cmp
jbe
mov
das
jnp
aaa
ljmp
mov
mov
mov
xor
test
int3
inc
mov
or
lret
xchg
ds
or
je
sub
jne
jecxz
lea
sub
psubusb
xchg
xchg
xor
mov
pop
cmc
divb
pop
inc
push
pushf
mov
mov
dec
sub
adc
fnstsw
or
lret
lcall
sbb
pop
sub
dec
or
mov
sub
addr16
push
adc
sbbb
push
inc
or
data16
lods
mov
jmp
mov
movsl
mov
jns
adc
push
or
rcl
push
shll
dec
dec
rcll
dec
inc
test
cmp
fcmovnb
push
je
add
mov
lcallw
sub
gs
mov
aad
push
xchg
mov
hlt
mov
inc
cs
mov
outsl
scas
pop
mov
outsb
jo
shr
or
jecxz
mov
dec
sbbl
and
dec
loope
inc
push
push
or
mov
cmp
dec
push
cmc
xchg
dec
fwait
xlat
outsl
jp
mov
cmc
jg
add
xchg
jnp
icebp
mov
push
imul
popa
pop
sahf
mov
inc
dec
xchg
and
pop
dec
inc
shll
cmp
lahf
lcall
out
fwait
dec
iret
mov
popf
mov
inc
lret
cli
pop
in
add
lcall
xor
push
adcl
mov
push
xchg
mov
xchg
adcl
ret
jnp
sbb
imul
jbe
stos
adc
cli
pop
xor
das
sub
je
call
mov
js
push
dec
cmp
int
test
mov
adc
dec
sbb
mov
in
add
out
fists
fstps
mov
das
sub
pop
jmp
or
int3
mov
mov
cmp
xchg
shr
jns
scas
lret
or
popf
stos
mov
mov
rolb
sarb
pushl
add
lahf
cmp
sbb
sbb
mov
sub
xor
lock
push
out
mov
pusha
jmp
mov
in
xor
sti
mov
stos
andl
ss
frstor
cmp
jno
xchg
pop
dec
adc
mov
jb
push
icebp
scas
push
dec
push
out
push
pushf
outsl
andl
mov
stc
cwtl
xchg
in
push
mov
daa
cmp
mov
scas
xor
enter
lock
jecxz
mov
dec
int
push
add
sub
sbb
rcr
rcr
and
test
lret
push
cmp
sbb
aas
ficompl
cli
xor
xlat
add
pop
sub
mov
pop
inc
sbb
mov
jb
pop
add
sbb
divb
sbb
lock
insb
mov
push
add
rorl
imul
mov
xchg
or
into
inc
insb
mov
sub
es
jge
fstps
pop
negb
movsl
xlat
adc
xor
dec
lods
mov
std
cltd
lods
sti
mov
xchg
fisubl
imul
mov
and
add
mov
pop
sub
add
mov
push
jmp
jecxz
and
lock
loop
cld
fimuls
or
xor
mov
es
dec
cmp
and
stos
loop
push
mov
and
dec
leave
icebp
dec
inc
aad
pop
dec
mov
pusha
sub
pushf
std
leave
in
lcall
in
imul
fmuls
add
test
inc
nop
sbb
imul
aam
movsb
aas
mov
test
xchg
pcmpgtb
je
inc
fists
mov
adc
in
hlt
outsl
les
dec
movsb
aas
mov
test
xchg
pcmpgtb
je
inc
fists
mov
adc
in
les
pop
aam
xor
mov
test
push
pcmpgtb
je
mov
push
iret
and
and
add
cld
lock
outsl
sahf
pop
hlt
dec
movsb
aas
movsb
das
test
adc
decl
mov
sti
pusha
jmp
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
sub
movsl
or
or
stos
xor
fwait
pop
jmp
sti
gs
inc
fildl
mov
movsl
or
jnp
dec
aad
lds
xor
sti
mov
push
fildl
lods
cmp
imul
std
dec
int
fildll
pusha
mov
xorl
test
mov
bound
imul
rorb
imul
jmp
inc
test
xchg
sbb
lcall
inc
pop
lods
dec
pop
mov
int
add
out
xor
push
and
and
lret
xor
mov
shl
je
icebp
orb
gs
stos
sbb
in
movsl
jge
lcall
lea
cmp
cmc
mov
lcall
dec
inc
popa
push
gs
jo
dec
test
mov
push
adc
sub
mov
dec
xchg
sti
dec
xchg
iret
mov
dec
sti
xor
xor
ficoms
lret
stos
mov
jne
cmp
imul
in
int3
pop
fsubrl
or
sbb
insl
sti
jb
push
insl
rclb
outsb
xchg
jle
pop
mov
sbb
call
sbb
sub
int
movsl
pop
in
subb
pop
test
lret
inc
mov
scas
or
hlt
pop
shlb
lock
lds
adc
sti
gs
push
fildl
mov
movsl
or
jnp
dec
aad
lds
adc
sti
gs
push
fildl
mov
and
enter
xor
es
stos
test
pop
shll
mov
jmp
pop
sub
jmp
sbbl
in
push
jle
jo
fidivrs
out
dec
cli
xor
jmp
and
out
pop
xor
call
or
sbb
cld
xor
lods
add
int3
es
sti
mov
int3
jbe
adc
push
filds
cmp
fmuls
jecxz
pushf
test
xchg
in
inc
push
sbb
mov
in
mov
fisubs
sbb
arpl
hlt
lcall
jbe
and
in
push
cmp
outsb
push
xchg
or
call
mov
insb
mov
inc
push
mov
addl
in
mov
outsl
ljmp
inc
ja
leave
in
cli
loop
lahf
int3
repnz
xor
scas
dec
adc
mov
neg
scas
sub
ds
mov
insb
shr
sub
les
lods
sbb
mov
cmp
int3
insb
push
js
es
and
cld
mov
jp
pop
sti
push
stc
das
sub
or
pop
test
xchg
lds
xor
ljmp
push
lret
add
cwtl
jns
fstps
ror
roll
stc
das
repnz
sbb
and
dec
sbb
sti
push
sub
sti
pop
dec
adcb
stos
jo
jge
test
das
loop
sti
inc
out
fldenv
rcl
adc
inc
pop
cs
sbb
dec
inc
movsb
cli
call
testb
push
push
xor
popf
mov
cmp
test
lcall
xlat
shl
inc
push
roll
in
fmuls
mov
sbb
xchg
inc
sbb
sbb
stos
mov
push
les
rorb
mov
pop
cmp
addr16
out
lret
pop
mov
push
test
jmp
jmp
cmp
cld
out
mov
std
xor
and
add
mov
sbb
lods
jo
test
frstpm(287
add
sub
jno
push
popa
imul
add
jp
dec
int3
ret
pushf
inc
scas
iret
mov
dec
into
push
sbb
js
ljmp
cmpl
cli
sbb
cmp
push
push
xchg
fistpl
jmp
add
mov
fyl2x
stos
ret
pop
xchg
hlt
mov
push
lods
inc
adcb
stos
dec
outsl
mov
mov
jae
sub
and
and
mov
adc
bound
shl
or
jmp
cmp
cmpsb
les
mov
cmp
mov
pop
test
rolb
sub
adc
dec
mov
jae
inc
add
stos
mov
cmc
sub
pop
inc
cmpb
popf
hlt
xchg
data16
dec
mov
jne
popa
inc
mov
out
imul
mov
icebp
pop
pusha
sub
dec
dec
mov
inc
sub
call
orb
mov
mov
fwait
or
test
sti
aad
jns
jnp
push
cmc
cltd
mov
adc
cmp
scas
cs
inc
sysenter
ja
pop
jnp
dec
add
cmp
aas
adc
loopne
pop
mov
mov
popf
ret
push
xor
xor
push
cld
test
jmp
dec
mov
push
push
inc
cmpsb
add
sbb
jno
inc
shll
test
cmpsb
jbe
mov
sbbb
in
popf
jle
sahf
rcrl
push
gs
leave
fstps
js
insl
dec
lock
test
dec
lret
pop
lret
sub
jmp
mov
dec
sub
inc
bound
data16
lcall
add
lds
pop
pop
add
jl
shll
js
mov
ret
pop
addl
pop
bound
push
mov
movsb
pusha
sbb
jo
jns
lret
add
js
fistpl
add
adc
aaa
sti
int
stos
loope
add
popf
or
pop
dec
in
loope
xor
lret
rcrb
js
shll
mov
cmp
push
pop
fs
adc
dec
and
sbb
push
addr16
pop
fcomip
xchg
xchg
add
stc
adc
mov
jnp
sbb
and
ja
test
mov
mov
pop
mov
push
adc
in
lds
stos
jmp
sti
andb
or
les
in
mov
inc
data16
fld
iret
test
jp
jmp
and
es
mov
cli
or
stos
sub
add
into
into
ret
jb
sbb
and
dec
call
sbb
sbb
push
xchg
xor
pcmpeqw
adc
pop
ret
pushf
ret
pop
xchg
sub
mov
call
sub
sub
push
and
bound
mov
addr16
cmp
addl
fcoml
adc
imul
and
mov
jle
jge
ret
mov
in
mov
xor
cmp
adc
xor
enter
rorl
fisubl
push
test
mov
jb
aaa
cwtl
idivl
inc
mov
and
inc
pop
in
mov
mov
xor
dec
xor
adcl
xchg
loopne
push
mov
scas
into
xor
fs
mov
xchg
es
ret
mov
pushf
cmp
insb
sub
rclb
in
jne
fdivs
jb
mov
push
mov
sar
in
insl
lahf
and
adc
sbbl
in
pop
dec
inc
mov
movsl
rclb
dec
add
mov
lods
and
sbb
arpl
mov
pop
int3
les
jg
movsl
sbb
out
xor
or
xchg
and
loop
repz
mov
adc
rclb
pop
xorl
rcrl
dec
dec
mov
and
movsl
xchg
shr
cmp
in
mov
popa
cmp
xchg
enter
idivb
adc
pop
mov
hlt
mov
lea
sbb
cmpsl
add
lret
or
rcrl
and
insb
inc
inc
cltd
push
pop
fnstcw
out
push
mov
push
jb
insb
cmp
or
sbb
sbb
ljmp
mov
and
mov
xor
inc
repnz
pop
xor
xchg
loopne
and
xchg
aad
cmpsb
pusha
xchg
sbb
sar
cmp
push
mov
mov
pop
test
aam
xlat
gs
mov
lods
hlt
add
xchg
cmp
mov
mov
mov
push
ret
mov
in
pop
cmp
or
and
and
adc
loopne
sub
jmp
push
xor
cltd
ja
mov
in
ficompl
push
push
lock
or
jmp
imul
inc
ret
adc
cmp
into
in
dec
iret
xor
jecxz
orl
pop
pop
clc
push
out
int
push
out
cmp
aad
mov
test
inc
loope
shll
add
or
lods
fs
push
mov
iret
jge
and
out
xor
pop
jno
shll
sbb
iret
mov
cmpl
cmp
lds
dec
dec
fcomip
es
inc
int3
imul
push
clc
gs
inc
cs
sub
cmp
push
insl
or
or
xor
add
sbb
xor
js
adc
les
loope
and
popf
fbstp
ss
imul
dec
fiaddl
add
pop
mov
out
leave
mov
insl
std
and
cld
cmp
cmp
ja
flds
js
push
jns
jbe
xchg
pop
call
sbb
cmpsl
shll
fldcw
pusha
insb
pop
fdivp
stc
outsl
jle
pop
push
out
inc
pop
mov
mov
movsl
sbb
fdivrp
lcall
call
inc
cmpsb
add
rcr
stc
sub
rclb
add
les
stos
test
jo
adc
cmp
into
sahf
ja
cld
and
out
jecxz
sarl
xor
ret
out
shrl
and
sti
or
mov
stc
imul
and
shll
arpl
test
or
mov
pop
dec
call
test
push
or
mov
inc
roll
adc
lret
jae
je
rcll
je
push
shl
out
adc
jmp
cld
push
push
xor
xchg
cmp
dec
add
out
sub
shll
lds
sub
aaa
jae
clc
push
push
cmp
cmp
int
mov
cmp
pop
in
mov
jle
cmp
mov
fwait
adc
inc
ret
fs
ljmp
test
push
loope
mov
dec
push
adc
scas
xlat
xor
ret
inc
jle
adc
sbb
filds
inc
xor
mov
cmp
push
mov
lahf
shl
jle
iret
jnp
ss
adc
pop
shrb
lcall
jnp
cmp
xchg
ds
xchg
pop
lret
leave
imul
xorl
lods
imul
shr
cmp
inc
xor
inc
mov
mov
xor
aam
cmp
rorl
lret
push
push
mov
push
inc
push
xlat
adc
imul
push
adcl
mov
inc
aam
hlt
mov
push
mov
es
aam
push
fs
imul
cltd
dec
in
sub
lea
rol
jge
push
push
mov
jp
adc
sub
mov
bound
push
mov
je
add
in
mov
mov
dec
add
or
into
inc
sbb
fwait
push
stos
mov
in
insb
xor
push
jae
push
fldt
les
sahf
xor
jl
push
scas
mov
out
lods
pop
and
aad
es
mov
xchg
pop
inc
cs
fstpl
loop
xor
jmp
mov
mov
loope
mov
xor
pop
scas
mov
pop
fidivrs
mov
sbb
push
sub
into
scas
aam
cltd
lds
xorl
aad
insl
mov
push
pop
repnz
inc
mov
mov
bound
dec
mov
cmpsl
push
xor
movsb
push
push
and
ret
push
mov
push
sub
iret
shll
jns
dec
xchg
imull
shr
xor
jne
cltd
outsl
dec
mov
sub
rorl
cmp
sar
fisubrs
or
mov
outsb
dec
inc
push
xchg
pop
inc
ret
outsb
cmp
mov
insb
icebp
mov
insb
gs
and
dec
daa
pop
fs
mov
cld
hlt
testb
sub
sub
mov
stos
int
xchg
cwtl
push
xor
cld
lock
loopne
sub
gs
or
xor
test
pop
scas
cmp
fisubrl
add
popf
insb
adc
aaa
xor
movsb
mov
pop
xor
push
dec
xor
jmp
cwtl
in
shl
outsl
rorb
outsb
mov
xchg
gs
lahf
pop
or
fstpt
icebp
jle
mov
and
mov
scas
decl
lock
ret
fdivrs
test
cmp
out
in
fs
jbe
cmpsb
mov
cmp
pop
jg
add
add
xchg
jnp
out
test
and
or
fistpll
sub
add
sahf
in
movsl
movsb
add
mov
push
dec
test
les
push
test
in
cli
and
addr16
in
or
pusha
add
stos
pusha
not
jns
xor
outsl
xchg
pop
test
popa
test
fidivrs
aam
orb
adc
sbb
aas
mov
inc
dec
xor
jo
mov
insb
inc
sbb
fmuls
add
xchg
lret
add
lahf
int3
lods
pop
rorb
and
rcl
push
sti
xlat
imul
dec
mov
push
pusha
ror
or
mul
addr16
mov
jo
filds
and
xchg
pop
scas
pop
pop
addr16
loopne
jmp
sbb
mov
sahf
xchg
push
jbe
xor
mul
jge
lods
or
rclb
xchg
in
pcmpgtb
stc
push
and
mov
xor
stos
fs
test
stos
xor
rcll
sub
fdiv
imul
cmp
in
cmp
sub
lret
mov
lcall
in
push
mov
inc
popa
inc
xor
jl
dec
push
mov
add
syscall
mov
adc
test
inc
mov
lds
in
es
pop
adc
fdivl
xor
ljmp
fucom
shl
cmp
xchg
dec
jno
insb
push
dec
sbb
movsb
ret
adc
ds
pop
call
into
xchg
mov
mov
mov
inc
je
fldl
jle
cmp
leave
cwtl
out
pushf
fildl
adc
rep
scas
aaa
mov
and
outsl
xchg
mov
ja
mov
jmp
loope
mov
sbb
sbb
in
mov
rcrb
xchg
jns
shlb
xchg
xor
int
inc
dec
mov
xor
and
test
dec
jns
hlt
push
test
mov
and
loop
xchg
icebp
sti
inc
mov
or
cmp
popf
inc
out
adcb
fldcw
cmc
inc
add
int
and
pop
or
call
push
mov
adc
cltd
sbb
out
imul
test
les
jl
mov
stos
mov
lret
mov
ret
jmp
fcomip
aad
ja
sbb
aas
out
test
cld
inc
or
xor
addr16
cmpsb
in
jb
xchg
sbb
mov
sbb
mov
dec
gs
aam
lds
mov
or
in
insl
mov
cmc
sub
test
aad
scas
lret
enter
jnp
jg
shll
shl
sar
loopne
andb
mov
mov
loope
ljmp
mov
in
lahf
in
sbb
shrl
fstp
dec
in
arpl
rcrl
adc
xchg
push
adc
lahf
or
test
scas
jp
sub
int
mov
fldcw
test
sbb
dec
rcr
pop
cmp
jmp
pop
pop
pop
add
pop
jb
loop
pop
sub
idivb
cmp
lods
popl
push
scas
xchg
xchg
mov
mulb
push
xchg
inc
xlat
aam
adc
or
aam
mov
jmp
notl
jns
jno
cmp
mov
sti
insb
in
popa
popa
leave
cs
test
mov
sar
push
ficoml
adc
or
es
mov
rcrl
std
add
xor
jno
dec
mov
inc
mov
adcl
jg
dec
out
pop
lock
lret
push
mov
adc
cmpb
xor
outsl
mov
inc
xchg
jno
sti
inc
push
mov
adc
inc
push
xlat
in
pop
xor
stos
or
daa
sti
repz
mov
adc
xor
pop
pop
dec
pop
aaa
jge
jo
cmc
rdmsr
les
sbb
dec
adc
cld
mov
jae
int3
mov
mov
jp
imul
imull
cld
jae
insl
add
inc
test
jne
inc
cli
jae
jns
jge
cmp
nop
mov
sbb
in
xchg
inc
add
test
pop
fs
mov
iret
mov
stc
pushw
dec
push
or
sub
fldt
mov
mov
mov
pop
or
shll
dec
xchg
push
jne
ret
cmp
mov
sbb
push
loop
gs
out
dec
sub
addb
sbb
mov
insb
sbb
dec
cmpsl
xlat
cmp
adc
sub
mov
lret
pop
push
in
call
mov
push
cmpsb
xor
sbb
adc
xchg
pop
fwait
mov
sti
mov
in
pop
xchg
fildll
dec
jmp
stc
dec
movsb
push
sbbb
into
sub
into
mov
inc
aaa
shl
cmpl
aaa
dec
inc
lock
sub
jno
adc
or
shl
add
xchg
inc
in
mov
mov
roll
xchg
lock
mov
or
mov
mov
dec
mov
mov
mov
repnz
mov
jb
sub
das
nop
bound
mov
das
and
sbb
cmp
in
aam
sbb
inc
jp
add
rcrl
loope
and
sub
adc
icebp
or
fwait
stos
and
ds
mov
std
xor
add
scas
gs
and
loop
test
add
inc
jbe
scas
movswl
pop
rcrb
mov
cmpsb
lcall
jbe
call
pop
mov
pop
mov
xor
es
mov
lods
test
sbb
mov
orl
mov
scas
enter
xor
cli
xchg
cmpsb
lahf
xchg
gs
adc
mov
rol
mov
mov
subl
ret
aaa
sbb
jecxz
mov
mov
mov
loopne
cs
or
xchg
xor
test
das
pop
incb
sti
sbb
push
lods
in
lds
inc
add
push
jg
push
adc
mov
xor
sub
testb
and
push
scas
push
push
insb
jae
jmp
mov
cmp
sub
jle
pop
ffreep
dec
pop
adc
scas
push
pop
mov
das
xchg
sbb
aad
data16
scas
scas
ja
mov
outsl
mov
cmp
cmpsb
call
jb
cwtl
pop
icebp
inc
sti
jecxz
add
mov
cmpsl
outsb
push
mov
movsb
xor
sub
addr16
aas
push
xchg
lods
xchg
xchg
cmpsb
into
mov
mov
out
aas
pop
call
mov
scas
mov
push
out
clc
aaa
adc
repnz
ja
adc
push
lock
into
fsubp
mov
sub
rcll
lock
fstl
or
cmp
loop
mov
lret
aam
inc
pop
rcll
mov
inc
jnp
inc
sub
hlt
mov
scas
shrb
std
lods
cwtl
sub
mov
push
xlat
cld
loopne
xchg
popf
dec
dec
loope
gs
add
call
pop
shr
xor
mov
clc
ret
popf
test
push
cmp
jl
cltd
pop
dec
jns
mov
je
ret
xor
xchg
andl
xor
lods
addr16
jmp
leave
lcall
xchg
xchg
out
add
and
mov
das
and
sub
in
and
lret
cltd
pop
adc
stc
rcrb
das
pop
mov
jo
add
inc
jbe
fwait
push
test
mov
insl
scas
cwtl
inc
xor
je
sbb
ds
cld
jb
nop
mov
outsl
ljmp
add
xor
mov
daa
movsb
or
xchg
push
lret
pop
mov
mov
popa
out
or
xchg
sbb
les
push
clc
adc
cltd
lods
arpl
push
lds
sbb
fwait
movsl
subb
popf
not
adc
mov
jo
arpl
sub
xchg
pop
clc
and
aas
dec
out
push
enter
outsb
lret
push
es
addr16
pop
mov
jmp
pop
fxch
movsb
sbb
or
fnsave
pop
outsb
push
xchg
rcrb
lods
cmp
cmp
fisubl
mov
filds
in
ficomps
mov
cmp
xchg
mov
xor
sub
rol
jnp
add
xor
popa
jmp
inc
in
sarl
cmp
sub
mov
sbb
imul
lret
push
xor
aad
test
fldcw
incb
sub
pop
pop
inc
rorl
xorl
sbb
jno
xlat
mov
test
shlb
mov
lret
or
push
mov
das
add
pop
outsb
sahf
inc
dec
mov
jle
mov
sti
stos
push
sbb
hlt
xor
dec
test
push
adc
in
rol
testb
fldt
in
mulb
or
cmp
and
cmp
jge
push
out
out
xor
mov
push
imull
aaa
sbb
fnsave
iret
or
pop
mov
inc
cwtl
out
scas
cmp
adc
cmp
aam
test
out
ljmpw
or
je
pop
iret
loop
repnz
fsubs
out
inc
push
xchg
pop
cld
add
xor
dec
sahf
cmp
scas
add
lret
and
inc
loopne
push
jl
adc
hlt
jp
fidivl
dec
out
xchg
aam
in
aaa
cltd
loope
jae
mov
dec
xor
bound
in
push
and
dec
lahf
jno
imul
scas
push
sub
push
vandps
imul
inc
test
sub
stos
das
shll
xor
cwtl
dec
xchg
popa
test
nop
mov
jae
mov
movsl
xor
test
jnp
dec
aad
lds
adc
sti
gs
push
fildl
mov
movsl
or
jnp
dec
aad
lds
adc
sti
gs
push
fildl
mov
movsl
or
jnp
dec
aad
lds
adc
sti
gs
push
fildl
mov
movsl
or
jnp
dec
aad
lds
adc
jae
xor
and
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
fisubrl
jp
mov
cmp
lret
aaa
jmp
cli
sbb
imul
mov
or
sbb
sub
cmp
lret
cmp
add
sbb
inc
lcall
or
push
jp
or
sbb
sub
pop
mov
outsb
jmp
ds
cmp
pop
std
fildll
stc
and
or
in
stos
testl
scas
xlat
jg
clc
cmp
stc
adc
and
repz
ja
and
les
gs
insb
push
add
xchg
sub
add
subb
lcall
dec
mov
int3
lret
push
fisubrl
adc
mov
jp
inc
cmp
arpl
fists
std
sub
scas
imul
repnz
push
pop
inc
loopne
decl
rorb
sarb
insb
lahf
fidivl
incb
cmp
and
push
jp
or
sbb
sub
cmp
sub
xchg
ljmp
xchg
stos
push
mov
roll
loopne
lock
dec
jg
insl
mov
push
jg
sub
adc
cmp
xor
push
pushl
lock
mov
inc
out
cwtl
dec
mov
xchg
pop
lahf
sub
and
jl
sub
pop
or
pop
lock
mov
cmp
lret
cmp
or
sbb
insb
lcall
lods
pop
mov
or
sbb
sub
cmp
lret
cmp
or
sbb
insb
lcall
lods
pop
ljmp
outsb
pop
xchg
or
lods
sub
in
mov
test
inc
xchg
imul
sbb
pop
and
inc
jne
in
aad
jbe
sbb
into
idiv
stos
lock
clc
out
dec
dec
pop
xchg
outsb
clc
jg
lahf
jns,pn
mov
popa
aaa
ljmp
cs
stos
sub
xchg
mov
or
mov
and
dec
insl
xchg
jle
cltd
mov
adc
pop
cmpsl
and
in
dec
outsl
push
sbb
add
popa
dec
out
pop
out
fdivl
dec
ljmp
fldcw
adc
jl
out
pop
jmp
mov
push
dec
jns
dec
push
movsl
les
daa
loope
cld
lea
js
movsb
mov
sbb
aad
or
lds
add
hlt
adc
mov
scas
mov
loopne
iret
jge
into
stos
and
insb
movsb
test
add
daa
das
into
pop
mov
into
sub
inc
pop
xor
movsb
jb
aad
roll
add
mov
sahf
pop
das
mov
adc
add
ljmp
push
rol
xchg
mov
imul
jno
gs
fdivs
dec
mov
inc
shlb
pop
xor
dec
in
repnz
jo
mov
jnp
mov
jns
push
stc
ficompl
shll
xchg
fsubs
jl
push
out
adc
pop
fstl
ret
std
and
sub
aad
addr16
add
mov
leave
mov
xchg
lods
push
popf
stos
leave
inc
fisubl
xlat
mov
cmp
xchg
stos
mov
jl
test
notb
repz
test
fisubrl
popf
cmpl
lds
test
mov
test
pop
pop
xchg
test
push
jge
nop
push
in
mov
fsts
js
xchg
mov
push
lcall
xchg
cli
or
jmp
insb
push
ffree
test
mov
add
adc
aam
sti
outsl
mov
fnsave
xor
roll
data16
in
repnz
xor
mov
insb
inc
mov
inc
sbb
loope
push
cmpsl
jnp
add
mov
repz
or
jne
lcall
sbb
push
sub
js
jno
cmp
cmp
pop
xor
dec
movsb
call
enter
rol
or
push
jle
pushf
push
test
xchg
out
cld
shll
push
mov
inc
mov
shll
dec
pushf
jp
int3
fcmovne
testl
bound
fldt
push
js
push
push
adc
stos
sbbl
mov
push
cli
pop
xchg
rorb
ss
or
mov
rclb
arpl
jmp
into
repnz
mov
inc
pop
mov
sub
fstp
jne
add
xor
xor
sbb
rcll
idiv
lock
xchg
xor
sbb
xchg
or
pop
jle
jp
xchg
lret
rcll
and
call
fwait
notb
neg
pop
jb
mov
sub
lods
loope
pushf
sbb
addr16
cmp
loop
xchg
jmp
pop
repnz
push
lock
xor
pop
bound
dec
dec
popf
dec
add
xchg
sbb
test
push
clc
cmp
decl
mov
xchg
jnp
into
int3
scas
xor
pop
add
sbb
loop
mov
cmp
fmull
mov
mov
inc
aaa
int3
jecxz
xchg
test
xchg
cmc
inc
lock
xor
mov
cwtl
dec
mov
xchg
stos
mov
incb
mov
push
loop
arpl
push
add
imul
push
cs
arpl
sub
repz
and
dec
dec
ss
cmp
decl
pop
or
popa
dec
sbb
inc
fs
inc
test
scas
cmp
push
nop
pop
mov
push
adc
add
popa
or
add
mov
add
add
in
add
push
mov
sbb
mov
in
out
add
mov
mov
out
jmp
push
int3
xorl
cltd
push
push
cwtl
push
sbb
cli
push
mov
test
sbb
iret
sub
mov
sub
inc
or
pop
jg
dec
sub
sbb
pop
push
sub
imul
cmc
cmpsb
lock
push
sub
std
cli
xchg
bound
in
iret
xchg
lds
adc
pop
call
pop
mov
and
sub
rcrl
testb
aaa
rol
push
addl
gs
mov
in
jne
js
pop
js
sub
ficomps
arpl
fdiv
int
loop
jle
ljmp
aad
pushw
mov
out
int3
mov
stos
fiadds
es
inc
mov
test
push
lahf
sahf
jae
andl
pop
adc
popa
ljmp
cmp
mov
or
xlat
xchg
jge
push
cwtl
leave
shl
mov
adc
mov
iret
cmp
and
test
cmc
fidivrl
movsl
dec
mov
decb
mov
mov
pop
mov
push
cmc
shll
inc
xor
xchg
hlt
push
outsl
pop
xchg
or
and
out
scas
xor
cld
cmpsb
xor
xchg
mov
jge
outsb
jl
stos
jns
loope
push
mov
jmp
shll
or
je
sarb
push
or
aaa
leave
or
sub
add
pusha
mov
push
call
pop
cmpsb
ss
std
pop
ss
leave
shrl
movsb
push
cmovp
adc
jl
xchg
shll
push
aas
sub
dec
shrd
jae
inc
mov
rorb
mov
bnd
inc
add
inc
or
addb
repz
pusha
cmpsl
rcrl
sub
cmp
das
xor
addl
or
pop
std
cmp
pop
icebp
insl
push
fsubrp
push
and
sahf
rcr
popf
push
ret
pop
scas
imul
fwait
scas
mul
mov
fidivl
out
adc
sbb
mov
lods
and
xor
out
fisubl
outsl
cmp
mov
test
ficomps
icebp
cwtl
cmp
adc
bound
pop
add
cmp
pop
mov
out
cmp
stos
mov
inc
dec
jle
enter
fdivrs
shrb
xor
pop
fldt
test
orb
xchg
aaa
out
stc
xchg
push
sub
dec
std
inc
mov
adc
xor
mov
xor
dec
push
data16
xchg
ss
in
faddp
mov
push
data16
cltd
pop
dec
lods
pushf
sbb
aad
loop
lods
insb
mov
in
mov
mov
cmp
cmp
ja
test
dec
rorb
loopne
insl
mov
pop
pop
dec
or
jg
das
shld
sbb
insb
mov
je
fcomip
lock
inc
and
dec
mov
cmpsl
jbe
add
sahf
sarb
jg
or
mulb
ss
and
adc
mov
aas
mov
mov
cmp
js
cmp
movsl
xchg
shrl
mov
and
xchg
divl
xchg
inc
lods
js
jb
add
sub
xchg
jbe
push
mov
add
in
movb
add
out
sbb
loope
mov
adc
repz
jae
fisttpll
sbb
aad
adc
adc
inc
inc
mov
push
iret
push
sbb
lret
test
push
and
inc
jg
fs
es
je
sahf
ds
stos
icebp
xchg
and
sbb
mov
in
xor
sarl
xchg
xchg
sub
mov
mov
jmp
push
or
ja
jmp
lret
test
mov
jne
ret
push
and
addl
lahf
addl
outsl
in
push
stos
xor
inc
push
or
cmp
mov
adc
stos
lods
shll
pop
data16
jo
push
and
xchg
addb
mov
push
aad
lcall
les
jmp
dec
ret
cld
imul
xchg
mov
popl
das
adc
or
inc
xchg
inc
push
cmc
clc
addb
adc
jnp
cltd
mov
adc
leave
xor
jl
aas
inc
test
int
scas
sti
sarl
arpl
fnsave
lahf
ret
cld
popa
mov
push
push
add
mov
xchg
and
jle
movsl
insb
jecxz
cltd
sbb
lret
data16
or
lock
pop
rcpps
sbb
repz
xor
into
lret
je
sub
cmc
lahf
mov
inc
ljmp
sub
mov
xchg
jge
cmp
xchg
adc
movsb
loope
mov
aad
std
dec
arpl
mov
out
mov
dec
fidivrs
pop
sbb
movsl
mov
js
mov
sbb
sbb
popa
mov
adc
lea
in
push
and
and
mov
pusha
sub
inc
pusha
pop
sahf
mov
and
lcall
int
stc
mov
mov
fmull
stos
lods
mov
inc
gs
jnp
dec
repnz
cmp
loop
mov
push
xchg
and
ret
jns
test
shlb
sub
out
out
adc
notb
sub
neg
pop
outsl
bnd
mov
adc
cmp
inc
inc
ljmp
mov
mov
out
ljmp
xchg
repnz
stos
dec
stos
movsl
into
sahf
jecxz
fmull
jmp
add
call
pop
mov
call
or
jns
jecxz
adc
add
push
mov
jbe
lret
xor
sahf
insl
xorl
mov
lock
jno
stc
mov
out
cld
loope
repz
stc
xchg
adc
in
test
and
jae
inc
stc
in
or
mov
jp
shll
jg
or
pop
cmpb
mov
cmp
fs
mov
or
fs
inc
jns
pushf
push
das
inc
test
fmuls
xor
aaa
pop
test
push
jb
pushf
in
data16
repnz
push
push
sti
dec
mov
outsl
in
or
xchg
pop
and
fld
es
shrl
or
mov
adc
sbbb
mov
in
sub
inc
jbe
sti
sub
mov
mov
dec
fnstsw
jg
and
test
mov
aas
push
mov
not
push
sub
insl
xor
imul
inc
fcmovb
sub
mov
hlt
ja
sub
fidivrs
mov
jp
loop
movsl
cmp
cli
sub
xchg
push
mov
test
decl
cwtl
sbb
inc
sti
mov
pop
jnp
nop
je
subl
pop
xchg
xchg
lahf
ret
xor
cwtl
add
das
xor
pop
mov
inc
lods
mov
jbe
rolb
flds
out
mov
mov
fstl
aad
cmp
rol
jno
inc
insl
ds
cmp
push
out
repz
fists
fcmove
inc
andb
dec
movsl
dec
into
push
test
ds
outsl
sti
pop
arpl
mov
lcall
pop
out
xchg
mov
lods
imul
mov
mov
lret
insl
cs
sub
js
out
push
mov
mov
or
imul
add
divb
sub
or
imul
shll
ja
mov
aam
mov
imul
sbb
fdiv
mov
ss
xchg
in
push
pushf
rorl
imul
imul
cmp
jge
gs
or
xor
cmp
leave
xchg
mov
xchg
cs
aaa
aad
mov
xor
lock
scas
mov
cmpsb
outsb
stos
fsubs
loope
push
stc
sub
inc
movl
aad
and
iret
xlat
dec
jmp
inc
mov
imull
in
fdivl
and
jmp
andb
loopne
pop
out
lds
lods
sub
aas
or
pop
pop
mov
sub
sbb
mov
lock
je
orw
ja
pop
loop
aam
xchg
pushf
cmpl
stos
sbb
cmp
in
pop
imul
das
push
inc
xchg
dec
cmp
sti
push
sbb
mov
fwait
mov
shlb
pop
psllw
loope
aas
cmp
jle
xlat
loope
xor
sahf
and
mov
in
sub
ja
es
je
notl
out
lods
scas
enter
jmp
xchg
inc
inc
jecxz
int3
sub
xchg
adcl
mov
or
xor
aas
mov
in
in
stos
add
into
jmp
scas
pop
ss
pushf
popf
push
mov
mov
mov
sub
iret
pop
pop
sti
jno,pt
cld
xchg
rolb
dec
lcall
addr16
and
adc
imul
mov
or
repz
and
push
adc
cmc
jle
int3
or
inc
xchg
xor
test
dec
xor
push
sbb
aad
call
inc
notb
roll
stos
scas
inc
xchg
pop
jno
jp
lahf
add
popf
xchg
adc
les
xchg
icebp
jb
mov
push
add
pop
jne
cmc
add
cmpsl
shrl
out
pop
push
xchg
xor
pop
movsl
sub
imull
jl
sbbl
imul
xlat
mov
jl
and
xlat
test
cwtl
aaa
aas
cmpsl
and
rolb
inc
or
sub
cmpsb
push
add
cld
nop
mov
imul
push
insl
dec
loop
test
fldl
dec
je
pop
dec
mov
jle
mov
lret
stc
push
and
xchg
test
negl
jle
jmp
std
pushf
jge
xchg
ss
rorl
mov
inc
test
and
sbb
out
int3
or
dec
lods
xchg
add
dec
repnz
icebp
adc
adc
fwait
xchg
dec
mov
jmp
xchg
add
pop
imul
popfw
sub
cltd
mov
or
inc
and
shlb
and
inc
shll
jno
movsl
adc
jne
adcl
jg
insb
call
xor
int
inc
popa
add
lea
and
sbb
insl
and
fwait
mov
push
movsb
outsl
push
jbe
fisubs
jne
aas
fisubs
mov
inc
jle
jae
popf
add
enter
imulb
pop
in
jge
jle
stos
cs
repnz
and
inc
dec
pushf
call
push
fwait
or
add
xor
xchg
lcall
out
pusha
leave
repz
decl
fldcw
mov
ds
pushf
xchg
jp
xchg
out
sbb
push
sar
mov
call
ss
xchg
lods
nop
out
jne
inc
and
loopne
sbb
sahf
loope
daa
js
leave
in
ja
dec
push
adc
inc
imul
mov
es
leave
dec
fdivr
lock
or
outsb
pushf
dec
ja
xor
jecxz
mov
pop
out
aam
popa
stos
daa
adc
jb
addl
jmp
jmp
mov
stos
add
stos
div
rcll
jns
jp
sahf
in
push
push
stos
mov
lret
push
xor
pop
sti
mov
mov
xchg
push
or
out
cmp
inc
mov
adc
dec
data16
fbstp
sbbb
dec
loop
or
pushl
push
push
mov
mov
add
mov
pop
fcoml
scas
sbb
inc
and
in
insb
fs
fstp
lahf
cmpsb
jae
push
mov
cmp
imul
jne
sub
xchg
push
push
addr16
xor
sbb
scas
call
jbe
push
xchg
faddp
inc
lods
out
pop
iret
add
dec
pusha
cltd
je
cmp
pop
jns
jne
dec
fiadds
imul
xchg
mov
loope
sti
adc
mov
sbb
jno
and
scas
jg
push
sub
push
adc
cmp
mov
incb
xorb
inc
in
push
pusha
mov
cmp
mov
push
mov
ficompl
iret
mov
mov
adc
in
icebp
loop
arpl
or
add
loop
in
cli
sti
add
insl
ljmp
xor
push
xor
jmp
xlat
or
fcmovnu
jecxz
testb
adc
cld
mov
xor
xchg
addr16
add
jge
addl
jbe
dec
mov
cmpsb
dec
imul
inc
mov
and
pop
ret
and
out
fadd
sbb
dec
pop
aam
xchg
pushf
jbe
adc
out
clc
xor
fcoms
popa
fs
push
mov
jnp
push
imul
rorb
and
cmp
idivl
sbb
rorl
push
jo
mov
cmp
cwtl
mov
jle
inc
pop
decl
xor
stos
repnz
roll
push
rcrb
loope
jmp
inc
and
outsl
pop
adc
shrb
loopne
jecxz
mov
fstpl
inc
push
pop
adc
dec
mov
ss
dec
cld
ss
icebp
xor
mov
push
mov
adc
lds
pop
pop
push
jno
sub
sub
scas
testb
pop
mov
in
push
sub
inc
in
jle
xchg
lret
adc
nop
mov
mov
inc
sub
data16
lods
imul
addl
shr
xchg
mov
mov
cwtl
clc
mov
loop
inc
sub
xor
inc
outsb
sbb
pop
push
mov
inc
bswap
lret
push
mov
pushf
mov
or
cmp
pop
aas
cmp
mov
push
mov
xor
add
and
inc
xlat
cmpsl
dec
cwtl
adc
dec
mov
std
jecxz
jns
insl
and
imul
sub
push
imul
xor
sbb
stc
xchg
test
push
mov
dec
jne
jecxz
xlat
aaa
fstpl
out
roll
addb
push
jmp
test
jmp
mov
mov
sub
fldl
rorb
mov
mov
fdivrl
mov
popa
or
test
je
add
xchg
into
sbb
xor
loope
shll
cmp
adc
inc
add
dec
inc
inc
push
pop
pop
mov
lret
out
mov
popf
cmp
fldenv
fwait
sub
pop
aas
lods
xlat
push
lock
loopne
mov
popf
ss
jecxz
mov
inc
sub
into
xchg
add
mov
push
pop
jmp
aas
gs
lcall
cmp
cmp
dec
fdivl
jmp
ss
xor
or
xor
lods
fs
or
pop
cmpsb
push
test
sub
push
popa
mov
sbb
dec
aas
sahf
cmpsl
sbbb
sbb
dec
iret
inc
mov
sbb
adc
cmp
cmp
mov
and
mov
cmp
push
addr16
loopne
mov
mov
pop
xchg
jmp
loope
or
pop
xlat
addr16
dec
test
cmp
sub
xchg
fcompl
xchg
jne
clc
daa
je
sbb
cmp
add
inc
push
and
cld
iret
cld
sbb
or
adc
daa
pop
dec
js
jnp
aad
push
adc
fwait
pop
cmp
pop
int3
mov
push
cltd
xchg
test
daa
jl
mov
add
movsb
popf
cltd
cld
mov
mov
cmp
ss
push
pop
push
mov
and
sahf
sbb
pop
iret
pusha
loope
pushf
jae
outsb
and
cli
cwtl
add
bnd
sbb
faddl
in
stos
mov
lea
mov
inc
and
repnz
and
icebp
xlat
int
xchg
lret
xlat
jecxz
lds
jmp
jbe
mov
or
aaa
sub
push
xor
sahf
ss
xchg
mov
aas
jno
xchg
mov
mov
inc
movsl
push
mov
pop
mov
jne
dec
or
push
cmpsb
push
xchg
and
std
pusha
fsubs
jg
xor
cli
and
mov
mov
mov
or
and
xchg
call
inc
stc
imul
popf
mov
mov
or
jne
hlt
ds
aad
and
fsubs
mov
fistpl
sub
lea
and
loop
pusha
repnz
std
data16
out
cltd
lea
mov
cmp
cmp
stc
or
mov
mov
cwtl
xchg
pop
test
jnp
xor
je
xor
jbe
mov
fidivl
mov
call
inc
inc
and
movsb
fisttpl
stos
rcrb
sbb
mov
popf
xchg
and
adc
push
jp
add
dec
out
adc
jmp
jg
pop
popa
ljmp
test
mov
or
xchg
inc
lcall
mov
dec
xor
pusha
in
test
fcoml
mov
enter
pop
jmp
pop
lock
push
dec
sbb
adc
pop
adc
addl
or
sbb
sub
cmp
lret
cmp
or
sbb
insb
lcall
lods
pop
mov
or
sbb
sub
cmp
lret
cmp
or
sbb
insb
lcall
test
mov
xchg
jp
or
sbb
lret
cmp
or
adc
stos
inc
mov
pop
imul
or
sbb
sub
lret
xchg
inc
or
imul
adc
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
stos
pusha
loope
roll
push
scas
cwtl
rcrb
imul
icebp
push
aam
shlb
popa
aas
adc
loope
loope
rcll
mov
fs
popa
lock
shlb
mov
addb
call
pop
cmp
or
push
cmp
out
insb
les
push
add
call
js
mov
cltd
mov
inc
pop
fnstsw
sbb
jmp
rorl
add
pop
ret
popa
decl
mov
nop
dec
das
shlb
jo
push
cwtl
jae
ud0
cltd
dec
jae
sahf
lock
or
ds
xor
mov
jns
adcl
mov
jb
push
jg
adcb
push
and
loopne
inc
orl
sahf
cmove
inc
imul
lahf
loope
sahf
mov
sub
mov
inc
das
icebp
mov
push
icebp
addb
xor
pusha
rcrl
push
mov
add
call
sub
sbb
mov
movsl
xor
xchg
insb
in
jne
popa
lock
das
mov
lds
je
fs
icebp
or
sbb
iret
jle
je
and
popa
xchg
adc
xor
push
rclb
popa
out
in
pusha
shll
and
adc
xchg
add
lock
rolb
mov
add
roll
push
mov
mov
adc
popa
lock
rolb
mov
add
mov
test
repz
scas
mov
insb
and
sarl
cmp
dec
mov
pop
movsl
push
sbb
in
fdivs
popf
sub
adc
adc
sub
addr16
adc
jmp
jecxz
aaa
mov
movsl
repnz
cmp
mov
int3
add
stc
cmp
sbb
shll
adc
data16
call
pop
jne
and
xor
sarb
loopne
insl
push
das
cmp
popw
pop
and
ss
inc
jo
mov
and
sbb
dec
dec
adc
dec
dec
iret
cmp
inc
jmp
push
mov
cmp
pop
jae
pop
jp
push
and
push
xor
adc
mov
inc
repnz
lcall
xchg
mov
not
je
jno
pop
pop
lcall
mov
add
inc
sahf
dec
adc
or
jno
xchg
adc
ret
xor
int
mov
sbb
fcom
imul
outsl
and
xor
sbb
aaa
les
imul
loope
xchg
jno
loop
push
inc
add
das
imul
leave
fidivrs
into
ljmp
arpl
add
fs
and
loopne
mov
mov
fcmovbe
add
jnp
scas
sbb
jmp
adc
stos
lods
lea
inc
xchg
mov
mov
sub
xor
popa
enter
test
call
or
mov
fldcw
shlb
out
es
xlat
add
fcomps
addb
push
test
mov
je
roll
dec
fwait
mov
mov
int3
stc
filds
setp
dec
mov
push
inc
xor
and
xor
and
sti
xchg
inc
sarl
cli
lock
and
and
rcl
xchg
sbb
sbb
push
jmp
cmp
stc
aad
ds
test
pop
xchg
lret
fstp
out
or
xchg
insb
dec
je
mov
push
add
ret
es
cmp
clc
xchg
movsl
pop
cmp
outsl
xor
pop
jne
xchg
mov
jnp
lea
mov
int3
lcall
in
pop
inc
je
mov
xchg
adc
cmp
sbb
fwait
mov
loop
inc
inc
testb
cmpsb
lret
dec
fisubs
test
mov
cmp
js
test
loop
sub
stc
add
xchg
xchg
cmc
repnz
pop
andb
sbb
mov
xlat
aad
ret
divb
push
loope
push
xchg
adc
push
push
push
bound
rcrb
pusha
xor
int
inc
mov
pop
incb
add
inc
test
adc
pop
leave
push
sbb
adc
push
fidivrs
lds
pusha
iret
push
arpl
lahf
mov
mov
pop
movsl
not
mov
pop
mov
xchg
or
addb
cli
push
inc
pop
sub
and
jo
dec
xchg
mov
in
mov
loopne
out
into
push
inc
cs
setl
mov
cltd
cwtl
pop
scas
fsub
jne
movsl
sbb
test
test
push
cmp
shrb
movsb
sahf
or
sbb
clc
jnp
inc
jmp
test
push
fisttps
inc
mov
loopne
orb
and
les
pop
or
aaa
andb
push
push
dec
lea
or
das
push
jmp
aaa
scas
frstor
pmulhuw
sbb
dec
push
dec
int
sub
movsl
out
test
scas
fcmovu
xor
mov
pusha
mov
sub
in
jns
sbb
fwait
in
insl
movsl
add
add
sbb
xchg
ror
sub
mov
adc
je
aaa
xchg
repz
cmp
sahf
inc
xor
push
ffreep
movsb
scas
xchg
movsb
in
xchg
xchg
sbb
cltd
jno
and
dec
and
hlt
pop
je
repnz
das
lods
cli
cmpsb
pop
scas
add
lret
aas
pop
xor
imul
aad
pop
jmp
pop
pushf
not
in
fs
int3
xchg
add
pushf
ja
inc
jle
mov
cmp
lret
pop
jl
inc
xor
jo
or
push
and
mov
imul
inc
lea
dec
inc
jmp
cmp
push
cltd
in
inc
push
outsl
lds
in
push
xchg
ljmp
add
push
xorb
pusha
push
stos
fstpl
jne
push
test
cmp
in
mov
ss
dec
ljmp
js
icebp
inc
subl
add
lahf
aad
jle
out
pop
or
add
sbb
mov
jo
push
add
pop
stc
frstor
nop
inc
arpl
outsb
and
popf
lods
pushf
push
incb
bound
pop
ret
test
sbb
inc
push
cltd
test
mov
inc
mov
mov
dec
xchg
pop
aam
mov
and
movzwl
addl
test
sbb
lock
jg
add
and
dec
in
out
add
jae
pop
pushf
or
sahf
test
xor
popf
xchg
add
insb
jl
arpl
loope
stos
addr16
pop
mov
sbb
loope
mov
mov
cmpsb
inc
mulb
mov
push
jbe
stc
push
add
inc
fistl
and
mov
aam
sub
repnz
movsl
push
xchg
cmpsb
add
out
pop
negl
outsl
aas
xor
fdiv
inc
sbbl
call
xchg
in
mov
xchg
clc
into
fsubrp
xchg
xor
ss
testb
stos
imul
lods
adc
or
and
or
lcall
cmp
jns
imul
loope
mov
popa
push
mov
lret
stos
outsl
pop
mov
adc
dec
mov
push
rcrl
jne
jae
pop
push
jae
imul
fcmovne
shlb
das
shrl
add
adc
lahf
lret
mov
dec
fbld
gs
dec
adc
push
les
or
sub
dec
cwtl
jle
je
inc
jg
or
mov
jecxz
fs
pop
dec
lds
icebp
int
sbb
pop
sub
inc
mov
xor
dec
nop
sub
not
xchg
mov
aam
add
lret
std
lods
insl
clc
or
push
inc
pusha
xchg
mov
cmc
jbe
stc
push
mov
jbe
scas
lcall
outsl
xchg
add
loope
push
jle
je
jmp
jo
dec
push
xor
andl
loope
dec
aas
push
and
aad
data16
stc
fwait
daa
adc
cmpl
out
int
xor
shll
xlat
addr16
addl
sbb
mov
adc
fildl
gs
shl
daa
jle
pop
lahf
ficoms
into
xor
push
or
fucom
inc
mov
clc
pop
arpl
std
pop
push
jge
xchg
inc
push
lahf
or
pop
in
push
outsl
jbe
cwtl
add
xor
getsec
fidivrs
push
in
ja
and
push
push
mov
add
idiv
mov
cmp
mov
push
pop
mov
aad
outsl
nop
sbb
ljmp
es
and
cld
xchg
jo
pop
filds
cld
aaa
notl
fdivl
subl
rorl
push
js
js
mov
push
fsubs
addb
insb
test
add
loop
xor
fidivrs
pusha
xchg
and
mov
cmpsl
sti
inc
sub
iret
mov
icebp
cld
or
push
push
sti
insb
xor
rcrl
mov
push
bound
mov
adc
pop
mov
rorl
adc
ljmp
sbb
out
dec
dec
aad
inc
into
sbb
icebp
aaa
iret
inc
xor
sub
and
pop
xor
dec
sbb
movsl
inc
fidivl
into
flds
adc
cmp
mov
movsl
lock
lret
lret
jg
outsl
push
or
daa
inc
xchg
push
insb
lds
adc
cmp
rolb
mov
add
das
dec
mov
imul
push
xlat
arpl
rol
outsb
push
add
into
and
aad
mov
xchg
scas
loopne
mov
pop
outsl
mov
mov
xchg
xor
push
lcall
mov
std
fwait
lods
mov
lock
sbb
sbb
stc
push
loope
adc
out
mov
jecxz
stc
hlt
inc
das
fmuls
dec
dec
add
shlb
push
bound
fucomp
push
xchg
or
push
dec
sub
subb
fstp
lock
and
adc
mov
sub
pop
jl
cmp
dec
inc
cmp
popf
xor
repnz
cli
scas
lds
push
mov
mov
lds
loopne
push
jl
js
sahf
repz
fwait
cmp
jbe
mov
inc
sbb
mov
mov
mov
cmpxchg8b
mov
adc
movsl
cmp
pop
call
xorb
rdpmc
sbb
and
imul
int
pop
sub
mov
mov
jb
test
dec
mov
cmp
test
pop
and
sbbb
or
insl
cwtl
mov
mov
push
push
or
aad
jmp
fwait
or
pop
inc
jno
or
xlat
inc
popa
test
cmc
les
push
cmp
sbb
lret
adcb
lret
insl
add
stc
addr16
sub
ret
sub
xor
cs
sti
rcr
dec
ja
das
lods
ljmp
push
iret
nop
or
cmp
daa
dec
jae
push
andl
pop
jo
dec
cld
adc
andb
mov
push
ds
mov
add
or
add
stos
int
dec
or
inc
popa
movsb
lock
into
adc
loop
cltd
aaa
jb
pusha
negb
cmp
add
xor
mov
push
lret
cmpsb
dec
mov
xchg
icebp
jmp
ss
mov
mov
cld
cmp
ficompl
adc
dec
jge
popa
or
and
xor
xchg
hlt
ret
pop
inc
cmp
sbb
pop
rcrb
js
jp
scas
cmp
aaa
xchg
pop
sti
mov
lds
das
mull
dec
push
decl
xorl
push
shlb
sub
dec
sub
sbb
lds
push
push
imul
jp
sub
dec
push
dec
inc
and
addr16
std
lods
data16
sub
cmpsl
addr16
dec
ss
in
fs
cmp
push
lcall
and
fs
pop
inc
xchg
test
sub
mov
enter
mov
je
and
jno
push
scas
pop
test
jmp
cs
test
pop
and
frstor
in
stos
xor
ss
scas
inc
aas
orl
stos
xor
stc
cmpb
les
stos
jecxz
ret
dec
sbb
jg
sbb
cmpsl
loop
clc
fidivs
shl
mov
shll
push
lds
hlt
int3
inc
jmp
outsl
mov
out
or
leave
or
out
xor
imul
sub
push
cmp
dec
stos
insb
xor
cmp
fwait
test
xor
in
mov
mov
imul
and
pushf
jge
push
dec
shrb
rcrb
aad
stc
rclb
int
stos
xlat
push
cwtl
push
das
mov
xchg
push
add
hlt
lret
ljmp
ficoml
sub
out
mov
mov
aam
mov
call
pop
xchg
cmpb
cs
je
pop
aas
xchg
cmpsl
push
mov
or
rcrb
dec
push
shrb
lds
testb
dec
aas
loop
mov
les
insb
fs
mov
fisubrs
cli
pushf
xchg
xor
sbb
out
decl
sub
lret
lods
lea
cs
and
fildl
mov
push
stos
xor
lods
iret
icebp
and
adc
adc
push
mov
jle
pop
dec
dec
in
je
pop
outsb
flds
pushf
fcompl
fiadds
stos
jp
jl
adc
mov
xchg
jp
cld
stc
mov
mov
aas
fistpl
inc
sub
adc
nop
xlat
add
xor
push
in
test
dec
idivb
xor
push
rol
into
mov
jae
stc
mov
fisubl
inc
cmc
and
adc
xlat
dec
or
xchg
dec
data16
inc
sub
inc
add
test
mov
mov
mov
push
jo
push
repz
lcall
arpl
scas
lods
test
adc
scas
dec
push
outsb
pop
loope
push
adc
mov
stc
imul
in
lret
pop
stos
sub
cmp
fwait
arpl
dec
cmp
lea
xchg
xor
fdivl
dec
cmpsb
daa
out
popa
dec
xchg
jo
sbb
inc
jno
adc
enter
sub
and
adc
mov
mov
and
nop
xor
or
leave
les
inc
lret
sub
sub
jmp
clc
popf
adc
das
fs
es
xorl
stos
mov
xlat
cmp
mov
xor
mov
ret
mov
jecxz,pn
movsb
lret
xchg
add
ljmp
adc
jo
mov
enter
jle
adc
cmc
js
push
push
jb
out
lods
in
sahf
fimuls
adc
rorl
out
xor
out
sub
psignd
and
nop
jl
in
push
ret
test
shll
or
insb
lods
xchg
add
aam
adcb
pop
fdivs
adcl
enter
outsb
mov
gs
test
jae
cmpsb
push
out
jns
aaa
xchg
insl
sub
push
jne
fcmovne
lcall
imul
pop
fwait
nop
xor
or
fisubl
adc
cmp
test
push
pop
mulb
mov
xchg
cs
js
xor
dec
sbb
int
and
and
mov
cwtl
test
push
inc
inc
sbb
cmpb
pop
imull
mov
out
push
dec
mov
stos
outsl
aam
pop
inc
add
and
out
adc
lea
cs
imul
and
push
mov
inc
fbld
fsubr
aad
push
repz
out
and
aaa
xor
stos
xchg
jo
adc
jmp
push
sub
insb
push
popf
dec
mov
push
test
stos
mov
lret
dec
es
xchg
pop
inc
cmp
pop
sub
in
or
clc
ss
sarl
mov
enter
daa
mov
push
sarb
pop
clc
test
ljmp
imul
into
mov
mov
push
cli
test
cmp
sub
adc
adc
inc
xchg
add
fs
pop
jnp
stos
orb
mov
mov
push
cmpsl
leave
in
xchg
scas
xchg
xchg
mov
lahf
sub
je
lret
mov
roll
test
dec
adc
movsl
cmc
dec
or
ror
test
inc
mov
repz
stos
mov
daa
fiaddl
scas
aaa
dec
push
mov
icebp
mov
push
nop
jno
pushf
shr
sub
cli
inc
xlat
into
sbb
aas
dec
adc
jno
loopne
adc
push
enter
repz
mov
xor
lock
out
cwtl
imul
lcall
cli
push
mov
fucomi
sub
cmpsb
rep
outsl
scas
lret
daa
ja
xchg
scas
jmp
test
push
daa
jne
push
aaa
ret
xchg
cmp
xor
xor
inc
xchg
push
push
fwait
fwait
mov
jecxz
mov
mov
lcall
fwait
sti
cmp
lods
and
pop
adc
xor
cmpsl
popf
insl
dec
int3
and
sbb
push
xor
xorb
mov
or
out
mov
out
xor
or
xor
jns
ljmp
and
hlt
xchg
xchg
push
inc
xor
xchg
adc
aad
cmp
pop
rcrl
pop
fildll
cmp
adc
cmp
popa
hlt
mov
stmxcsr
inc
insb
add
xlat
dec
cmc
or
sbb
or
cli
in
push
xchg
mov
pop
cmp
mov
mov
fwait
sub
push
dec
xchg
push
subb
mov
rcr
pop
inc
out
lea
mov
out
lret
push
pop
xor
mov
jmp
mov
js
sbb
mov
test
mov
lcall
fsubrs
jle
or
or
hlt
cmp
lds
and
or
notb
mov
sbb
mov
inc
push
push
sbb
dec
rcll
mov
inc
loopne
stc
adc
or
addb
mov
lods
pop
add
or
icebp
or
data16
add
push
push
rol
xchg
and
fldz
pop
mov
popa
ds
dec
add
fneni(8087
cwtl
xlat
cmc
xchg
inc
outsl
aam
mov
cmpl
mov
cmpsb
lods
or
add
into
xchg
aaa
repz
and
popa
cmpsl
mov
out
mov
mov
push
xchg
jnp
fcompl
daa
in
xor
rclb
pop
add
out
cmpsl
cmpsl
mov
sbb
repz
cmp
pusha
inc
cmp
jle
fnstenv
push
adc
aad
or
loope
mov
lods
pop
xor
movsl
aam
daa
jno
aas
adc
es
mov
inc
shll
adc
adc
adc
add
inc
mov
mov
gs
aaa
lds
aam
jno
repz
xorb
repz
inc
lret
dec
inc
lods
xor
fcompl
add
jle
dec
ret
sbb
jns
pusha
sahf
xchg
test
xor
pop
rsqrtps
sbb
arpl
push
sbb
add
cwtl
mov
mov
adc
je
je
cmp
into
fs
aam
je
mov
mov
push
loop
mov
test
sbb
push
add
std
jmp
mov
in
stos
repz
stc
jle
fstpl
sub
mov
lcall
hlt
lds
jp
cli
cmp
in
jmp
jge
inc
pop
pop
adc
and
jmp
mov
stos
icebp
in
clc
pop
orl
xchg
push
lods
xchg
cld
repnz
mov
loop
xchg
jle
in
jge
mov
mov
fmull
stc
sahf
jle
and
nop
sub
and
loope
inc
pushl
push
inc
cmc
aam
outsb
ljmp
xor
insb
cltd
mov
mov
arpl
aas
jb
fisubl
fstpl
dec
daa
in
and
mov
movsl
in
addl
out
fwait
mov
imull
lods
es
ljmp
cltd
add
cmp
sbb
sbb
add
push
outsl
adc
iret
movsl
test
fsubs
mov
or
test
enter
add
pusha
push
repnz
adc
jo
cld
or
shlb
cmp
lret
xchg
push
pop
xor
xchg
mov
sub
or
mov
cmpsb
sbbb
decb
aas
incb
cmp
mov
push
popa
std
stc
out
out
les
les
xbegin
outsb
mov
nop
cmp
xchg
pop
adcb
mov
pop
mov
and
mov
xchg
and
push
sbb
rclb
out
sbb
cmp
clc
xchg
fucomi
decb
pop
mov
inc
addb
cmp
adc
cld
jae
ds
cmp
jl
jmp
popa
push
pop
adc
cld
jb
stc
cltd
or
push
daa
xor
aam
mov
or
fistps
fldenv
icebp
inc
xchg
mov
mov
mov
lret
mov
movsl
icebp
xor
inc
outsl
std
push
or
add
les
scas
pop
cmovs
incl
std
cmp
outsl
pop
jmp
xor
repz
ret
or
sahf
mov
mov
pop
rcl
cmp
fwait
imul
jne
jmp
mov
dec
test
icebp
nop
push
lcall
es
jge
xchg
push
sar
xor
lcall
jecxz
call
rorl
test
std
push
jno
popf
mov
add
and
aam
mov
loope
pop
lock
push
jle
out
adc
cmp
movl
cmpsb
daa
xchg
outsl
add
xchg
push
bound
push
pop
dec
test
cmpsb
test
xor
mov
pop
mov
les
xchg
aam
xor
sbb
mov
and
shlb
daa
sbb
cld
loopne
movsb
cmp
ljmp
pop
dec
xchg
lret
cmpsb
daa
mov
xchg
and
je
shlb
add
jmp
sbb
mov
js
in
in
fiaddl
in
xchg
in
dec
mov
out
js
jle
jno
les
cmp
in
xlat
jl
dec
add
in
enter
cmp
das
sti
sub
enter
ret
xor
pop
mov
imul
es
dec
testb
and
add
ds
pusha
fnstenv
jo
inc
rcll
mov
adc
popa
lock
rolb
mov
add
roll
push
mov
mov
adc
popa
lock
rolb
mov
add
roll
push
mov
mov
adc
popa
lock
rolb
mov
xor
inc
rcll
mov
rorb
rolb
sub
out
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
