sbb
add
divl
out
daa
lods
inc
int3
cmpb
xlat
enter
jg
and
lret
xor
sub
xchg
je
mov
setg
aad
subb
nop
stos
and
lea
inc
and
leave
pop
adc
in
dec
out
lods
mov
cwtl
scas
dec
cltd
xlat
push
xchg
nop
inc
mov
imul
push
cs
je
enter
jne
cmp
xor
push
addb
iret
lcall
jnp
dec
call
lods
xchg
test
mov
jmp
push
xchg
hlt
loope
movl
mov
and
popf
jbe
in
outsl
mov
popf
pop
imul
dec
loope
jle
out
fbstp
pop
lcall
pop
ret
inc
jle
lods
popf
pop
loopne
shll
outsb
imulb
adc
fstl
inc
fmull
dec
imul
icebp
cmp
test
xchg
pop
pop
xchg
sbb
xor
xchg
shll
cmp
pop
jnp
dec
ds
or
movsl
xor
fs
ror
xor
aam
push
pop
or
jae
jmp
sub
inc
cwtl
add
pop
mov
cli
or
mov
mov
mov
push
jp
adc
xchg
inc
aaa
pusha
xor
xor
fisttpll
adc
sbb
hlt
pop
in
adc
test
jnp
add
push
xor
bndstx
cmpsb
push
mov
pop
sbb
or
dec
add
add
mov
pop
dec
push
test
iret
fs
cmpsl
out
lods
cmp
stc
add
adc
test
cmpl
push
xor
xor
and
cli
push
pop
leave
subb
sbb
push
das
je
jae
fs
sbb
leave
sbb
xor
les
ror
outsl
jno
or
fyl2xp1
pop
push
iret
mov
mov
lods
mov
add
das
dec
je
pop
xchg
sarl
in
push
ficoml
pushl
push
sbb
stos
mov
lret
add
mov
xchg
mov
pop
inc
jb
jns
xchg
punpckldq
jno
fwait
int3
roll
iret
rorl
add
and
or
call
movsb
inc
cmp
jle
jp
cltd
jecxz
ja
int
mov
rcl
into
xor
mov
jl
xor
inc
jns
loopne
mov
cmp
jae
or
aam
add
mov
push
mov
out
xchg
dec
add
nop
ret
xor
gs
xchg
sbb
cmp
add
es
aaa
rcll
pusha
mov
fmul
das
in
mov
mov
push
jns
mov
cmpsl
sbb
dec
jmp
aad
fsub
fisttps
push
mov
adc
cmp
lea
cmp
popf
add
xlat
jg
fsubs
aas
stos
push
jg
shlb
sti
fsubr
es
in
jae
gs
or
adc
fs
les
pusha
xchg
xchg
dec
add
inc
aad
adc
dec
pop
pop
add
sub
adc
sbb
inc
mov
sub
pop
leave
or
jl
sar
lods
inc
in
insb
rolb
lret
xchg
cs
popa
icebp
aam
xchg
in
push
rorb
aam
push
nop
stos
jmp
xchg
pushf
pop
dec
mov
mov
or
dec
mov
sahf
push
mov
cs
and
pop
push
repnz
add
mov
inc
jp
rcll
xor
in
addr16
hlt
fs
xor
push
bound
push
std
inc
inc
nop
xor
daa
fbld
add
outsl
push
xchg
jne
ljmp
clc
sbb
into
push
cmpl
ret
fistl
jnp
mulb
adc
in
pusha
or
addr16
ja
push
cs
sbb
xor
mov
add
test
out
jns
clc
sbb
es
add
cmc
out
push
popa
imul
or
jno
jne
fcompl
pusha
lds
test
sub
es
sub
xorb
cld
add
cmp
lock
aad
stos
pop
pop
mov
shrb
jb
es
push
dec
mov
std
adc
test
push
popa
xchg
lock
sbb
xchg
xchg
or
fnstenv
cld
jmp
inc
jmp
cmp
adcb
xor
test
rcrl
pop
adc
xor
mov
mov
sti
dec
xchg
repz
xchg
std
adc
xchg
rolb
cmp
jnp
or
movsb
jge
inc
jns
dec
inc
jmp
test
or
xor
dec
sbb
ret
xlat
jae
cwtl
pop
jecxz
mov
aas
mov
add
lods
enter
add
out
xor
iret
sarl
dec
push
add
sub
jmp
mov
data16
adc
pop
jbe
lock
dec
mov
push
lods
xor
lcall
ljmp
cld
inc
pop
jo
int3
push
pop
in
cmc
out
xchg
aam
lock
es
xchg
testl
xorb
xchg
add
pop
out
inc
jecxz
es
jns
add
mov
test
lods
fists
stos
mov
daa
fcoml
mov
mov
fwait
adc
pop
jns
ret
cmpl
out
test
cmc
fdivl
adc
test
rorb
jne
xchg
jecxz
pop
cmpsb
sub
and
fdivrs
xchg
cmpsl
mov
sbb
xchg
add
daa
or
out
pop
mov
into
and
dec
ss
lods
repz
inc
fistpll
cmp
pop
mov
pushf
xchg
mov
add
mov
mov
dec
lods
filds
aad
cmp
in
push
outsb
pop
ficompl
or
ficomps
je
arpl
cmc
mov
cmpsl
scas
into
push
jne
mov
and
mov
inc
pop
cmp
pop
in
movsl
mov
fwait
jp
adc
add
lret
xchg
and
and
mov
jle
push
add
pop
je
imul
jno
push
aas
inc
mov
push
lock
xchg
leave
xor
es
test
repz
xor
das
lret
ss
cmp
cmpsb
out
jmp
inc
and
loopne
fists
sbb
test
dec
push
adc
hlt
test
push
sub
or
daa
inc
cmp
inc
push
outsl
adc
mull
inc
sahf
stos
popf
lods
xchg
and
mov
jg
mov
insb
or
loope
xchg
adc
push
das
test
xlat
insl
int3
add
pop
cmpsb
out
mov
scas
sub
repnz
dec
repz
mov
into
jbe,pn
sbb
jno
mov
bound
mov
popa
jge
jmp
xchg
cld
dec
jb
xchg
outsb
je
ror
fdivrp
loope
xchg
cltd
int
mov
ja
xchg
imul
ja
icebp
fisubl
addr16
sub
ja
add
test
adc
adc
xor
add
inc
xchg
xchg
rorl
or
mov
pop
add
pop
add
dec
mov
fcom
mov
notb
js
and
cmp
repnz
iret
lock
xchg
in
cmpsb
mov
dec
jbe
and
cmc
jbe
sub
ss
lods
dec
into
xlat
xor
add
pop
dec
cwtl
in
cmp
mov
dec
in
fcmovbe
dec
out
mov
mov
mov
repz
fsubl
inc
pusha
popf
dec
ret
add
lahf
rcrl
sbb
jno
lods
push
test
fst
ss
or
fs
xor
xlat
cmpsl
mov
psrad
int
mull
fildll
out
in
mov
adc
mov
leave
xchg
mov
out
sbb
notb
inc
dec
mov
sub
ljmp
mov
stos
dec
imul
or
or
mov
jae
incb
inc
cld
xor
aaa
jecxz
mov
pop
aas
cmp
vphadduwd
xchg
fildll
adc
cwtl
rcr
stc
subb
mov
pop
dec
xchg
pop
pop
xlat
faddl
loop
enter
pop
push
or
jo
or
pushw
mov
stos
jo
mov
mov
movsb
dec
jne
xchg
mov
sti
insl
mov
push
ja
adc
pusha
sub
pop
inc
int3
insl
xorb
xchg
inc
xchg
xchg
dec
scas
insb
xor
rol
jbe
pusha
mov
xor
fistpll
hlt
aaa
push
test
inc
inc
rol
ja
mov
add
lret
fbld
stc
lahf
mov
mov
das
sbb
dec
fsubs
pop
sbb
or
cmp
negb
movsb
and
push
sbb
add
or
clc
xor
mov
and
loop
push
aad
loope
cltd
stc
and
sbb
cmp
sub
mov
xchg
repz
in
idivb
mov
mov
nop
shll
mov
hlt
xor
out
sahf
or
add
and
cmpsl
lds
inc
or
mov
test
sub
fisttpl
test
lock
xor
mov
pusha
cmpsb
imul
xor
daa
fsubrl
adcb
fisubl
and
cltd
pop
add
jecxz
dec
jl
add
or
dec
jg
int3
mov
push
mov
call
or
repz
insl
pop
fsubl
or
mov
or
jbe
insb
xor
mov
dec
std
or
fcomip
inc
sub
out
cmp
stc
enter
inc
jae
fisttpl
rcll
lds
lret
push
gs
loopne
call
cmc
push
cwtl
ds
push
or
pop
mov
jge
inc
scas
in
push
stos
add
insl
adc
outsl
fsts
mov
mov
mov
mov
or
std
sahf
mov
fisubl
int3
cld
mov
popf
stos
adc
aad
das
je
dec
sarb
scas
or
ljmp
pop
jne
test
dec
jge
paddw
jno
adc
je
mov
ret
dec
xchg
cltd
adc
sub
xchg
inc
sub
arpl
push
int3
bound
adc
not
jne
pop
fcmovu
loopne
cwtl
shrl
aam
sbb
jg
clc
insl
aam
mov
hlt
divb
cmp
xchg
bound
popa
push
sarl
jnp
loopne
outsl
jg
and
leave
mov
cmp
sarb
jns
mov
sub
ror
xchg
jnp
iret
js
into
js
jle
push
inc
xchg
test
pop
xor
add
dec
jmp
jno
jmp
scas
cs
fldl2e
xchg
pop
lret
sti
sti
inc
iret
stc
dec
pop
mov
add
dec
add
pop
insl
sbb
or
out
mov
cld
mov
and
outsl
or
or
pop
ss
lcall
or
push
aam
jne
nop
pop
shl
xchg
mov
xchg
in
nop
sbb
xchg
int3
xor
cmp
lea
addr16
gs
fnstsw
push
inc
dec
repnz
lods
push
mov
in
vmovups
notl
out
cmc
mov
in
cmp
je
push
sub
push
pop
shl
jecxz
std
shl
add
add
xchg
ds
cmp
ja
jecxz
shrl
sbb
adc
jmp
push
pop
adc
pop
xchg
xchg
xchg
push
sub
xor
or
fbstp
mov
dec
lods
mov
mov
xor
loop
dec
hlt
mov
into
roll
pop
out
xchg
jl
dec
je
push
lea
mulb
std
mov
jo
sub
jne
iret
xor
sbb
and
fmull
sti
fdivs
ds
andb
rol
imul
inc
dec
rcrb
jmp
pop
shll
pop
push
push
mov
push
inc
xchg
hlt
sbb
jp
les
jne
lahf
dec
insl
movsb
sbb
mov
mov
cmp
loope
jl
rcrl
popf
arpl
jae
xchg
mov
jns
add
outsb
inc
pop
add
and
cltd
fisttpll
cmpsb
lock
rcr
jnp
popf
fmuls
imul
lods
mov
and
cmp
sub
ds
pushf
pop
push
sbb
insl
insl
and
bound
adc
push
jo
lods
shll
movsb
ret
lret
adc
and
push
push
setne
imulb
mov
xchg
lret
inc
push
es
movsl
aam
mov
jge
outsl
std
dec
push
sti
aaa
jbe
jno
pop
cmc
mov
mov
loopne
mov
outsl
loop
jae
imul
mov
stos
andnps
insb
repz
adc
jns
notb
sbbb
fisubs
push
cmp
push
scas
arpl
mov
mull
xor
lret
fsubr
jne
sub
imul
dec
add
jg
cmp
jno
mov
es
or
sbb
pop
push
pusha
fs
int
push
sub
ror
add
ja
cld
lahf
lock
lds
xor
mov
sub
test
test
jnp
scas
xchg
adc
fs
dec
je
cmp
sti
adc
fdivrl
js
popf
jle
xor
or
cmpsl
fs
lods
les
add
mov
pushf
mov
hlt
add
hlt
out
in
vpsubsw
sti
or
sub
out
mov
mov
inc
lea
test
mov
into
imul
push
xor
cmpsl
jecxz
lods
loop
movsb
in
movsb
shlb
mov
inc
dec
gs
in
mov
rorb
xchg
lcall
cmpsb
fiaddl
addr16
xchg
pop
fsts
insb
ret
jl
repnz
xchg
out
stos
inc
loopne
hlt
push
ret
mov
xorl
xor
popa
into
test
ds
jns
push
xchg
icebp
add
sbb
pop
rcrb
dec
jno
sahf
addl
out
push
cmpsb
lods
sbb
dec
and
fstl
aad
insl
cmp
or
icebp
mov
xchg
mov
jp
cmp
scas
cltd
out
push
les
pop
xchg
add
pop
cs
push
clc
pop
mov
daa
push
repnz
or
mov
jp
inc
sub
push
rcll
mov
and
push
adc
lods
sahf
sbb
sub
das
stc
loop
ss
xchg
iret
test
sub
decl
pop
push
mov
je
mov
sub
lret
adc
outsb
xchg
mov
mov
test
pushf
mov
dec
pop
pop
and
add
jp
jecxz
mov
xchg
push
dec
cmc
test
dec
add
stos
mov
cmc
or
xor
iret
push
hlt
xor
add
jg
dec
les
mov
call
push
xchg
push
inc
mov
stos
aas
in
addr16
xor
sub
jmp
mov
aad
cs
in
sbb
inc
push
sub
sbb
fiadds
mov
mov
scas
mov
xchg
lea
jmp
mov
ret
fldt
insl
scas
push
dec
pop
sbb
jae
mov
mov
cmp
orb
add
fs
xorl
mov
sbb
sbb
xchg
pushf
rclb
xchg
jne
adc
adc
iret
out
dec
and
imul
subl
jns
popf
fcompl
xor
mov
pusha
fists
mov
adc
stos
fstpl
scas
loopne
xor
into
adc
mov
decb
aam
inc
adc
cmp
enter
out
add
pop
mov
test
push
fmuls
mov
mov
and
jb
idivb
dec
daa
xchg
js
sbb
mov
cmp
aas
in
fisubl
sub
iret
mov
mov
push
fldenv
jne
gs
ljmp
xchg
dec
adc
into
cmp
push
std
xor
or
xchg
lcall
cs
inc
loope
sub
std
push
lds
pop
push
loope
jle
adc
add
out
in
lahf
fnstsw
sbb
popa
popa
push
mov
dec
pop
jmp
cli
cmp
mov
xchg
push
cwtl
add
in
aam
fucomp
cmp
mov
pusha
dec
loopne
mov
and
xor
mov
hlt
mov
aad
ss
jle
arpl
mov
jnp
loop
nop
xchg
dec
cmc
and
fsubrl
fs
push
ljmp
cmp
not
mov
outsl
jge
jae
adc
test
inc
push
ret
dec
push
fwait
out
jmp
and
inc
cmp
sbb
add
sbb
fidivrs
inc
daa
mov
jae
daa
ja
sub
mov
orb
sbb
mov
inc
mov
test
roll
std
inc
pop
sbbb
lods
mov
sbb
jmp
movsl
inc
xor
test
out
cmc
fwait
add
and
shr
nop
dec
orl
sti
adcb
pop
cwtl
cmpsb
adc
fcompp
jno
push
fwait
cltd
shl
sar
pop
sar
and
add
or
rcrb
adc
push
or
sbb
push
aad
insl
or
or
xchg
adc
popa
into
cwtl
scas
lret
rcr
xor
aaa
in
adc
pop
mov
leave
out
cmpsl
xor
gs
cmovb
bound
inc
mov
pop
ljmp
js
repz
fwait
xchg
inc
fnsetpm(287
movsl
cmp
psrld
das
sbb
add
test
stc
add
in
rclb
inc
mov
push
ljmp
cmp
in
push
loope
inc
daa
popa
pop
aaa
dec
rol
out
mov
pushf
pop
test
pusha
scas
idivl
and
scas
popa
fnstcw
adc
cmp
iret
dec
pop
mov
mov
stc
jae
xchg
fst
fwait
dec
mov
cmpsl
xor
das
jmp
data16
stos
adc
mov
cmpb
fidivrs
inc
add
in
inc
lds
sbb
movsl
scas
adc
inc
push
xor
imul
inc
jge
loope
mov
xchg
out
scas
or
std
mov
inc
adc
xor
pop
xchg
leave
cli
jnp
add
test
mov
xchg
adc
dec
sarb
call
cmpsb
xchg
fsubs
mov
jle
and
mov
ds
pop
add
jp,pt
mov
pop
hlt
stos
stc
adc
icebp
jne
popa
jp
pop
arpl
bound
mov
xchg
xlat
fdivl
ljmp
daa
inc
sti
lcall
lahf
or
jns
and
pop
push
pop
iret
sub
ljmp
cmpsl
sahf
ror
aas
inc
lahf
imul
add
sub
frstor
lods
imul
and
pop
jne
arpl
pusha
xor
pop
adc
rcrl
mov
loope
ss
repz
and
push
inc
repnz
into
cmovs
stc
out
sbb
outsl
mov
arpl
movsb
cmc
pushf
push
lret
in
sub
jl,pn
popa
push
sarl
popl
ror
cmpl
push
test
and
std
jb
mov
out
imul
cwtl
jg
fdivr
mov
jmp
cmp
les
xchg
push
or
mov
jle
dec
xchg
xchg
dec
cmp
inc
sarb
lea
icebp
dec
and
push
mov
popf
jo
and
cld
cltd
lret
cmp
mov
add
inc
mov
push
adc
das
repz
or
and
lea
mov
jmp
iret
mov
xor
push
and
xlat
ret
in
hlt
and
je
iret
sub
movsl
mov
fmul
and
jp
in
sbb
imul
cld
movsb
repz
add
addl
mov
mov
hlt
and
xchg
push
dec
bound
adc
xchg
adc
adc
or
inc
fiadds
inc
jl
sub
cmp
psllq
out
jecxz
sbb
mov
ss
in
pop
inc
xchg
cmc
cmp
jl
shrb
mov
stos
int3
push
insl
mov
sbb
cmp
hlt
mov
sarb
clc
loope
pop
mov
stc
and
push
stc
lea
mov
ljmp
jle
push
pushf
jmp
inc
push
jo
pop
xchg
push
dec
push
nop
mov
in
outsb
aas
jp
into
lcall
aas
stos
and
inc
inc
lods
sarl
aam
cmpsl
adc
xchg
pop
jo
mull
movsl
rcll
rcll
dec
mov
fdivl
loopne
loopne
xor
cmp
shrl
popa
fwait
test
in
sarb
sub
mul
xchg
rcrb
push
rcrl
dec
xchg
in
pop
fisubrl
fnsave
bound
test
push
aas
push
xor
jl
sub
nop
push
in
push
bound
xchg
xchg
cmp
mov
ret
cmc
inc
pop
lds
or
dec
pop
lds
fldl
test
mov
ror
xchg
scas
scas
sub
sub
test
push
xor
mov
ja
or
daa
dec
lret
adc
add
jmp
xchg
ret
in
and
push
sbb
cltd
lret
or
inc
int
dec
and
or
imul
and
jge
pop
pop
or
dec
lahf
add
adc
mov
ror
sbb
lahf
sbb
loop
mov
and
leave
repnz
push
mov
int3
mov
in
xor
lret
adc
sub
scas
xchg
push
cmpsb
add
sbb
loope
lret
or
lods
push
xchg
loopne
ret
std
mov
xchg
cltd
repz
sub
out
push
jmp
jg
ljmp
mov
and
push
jo
mov
add
adc
pop
mov
and
loope
clc
sarl
cmp
cmpsl
mov
or
icebp
mov
xchg
pushf
hlt
mov
jge
jmp
addr16
add
push
fs
inc
push
mov
sbb
scas
push
adc
pushw
add
push
dec
cld
push
nop
adc
mov
sti
sub
sub
add
xorb
or
mov
fstpl
mov
mov
and
sarb
inc
mov
xchg
sub
stos
ret
pop
rorl
outsl
mov
push
fistl
cmpsb
push
push
jmp
xor
dec
out
inc
in
in
push
out
orl
clc
xchg
xchg
dec
xchg
cmp
adc
ret
into
xor
fsubrl
cmp
mov
push
add
mov
sub
pop
xor
mov
idivl
pop
mov
mov
insb
pop
push
ljmp
test
out
lahf
out
mov
sbb
sbb
push
xor
movsl
push
jmp
rcr
push
fdivrl
adc
xchg
mov
pop
adc
scas
add
rorb
int3
dec
or
ss
test
daa
and
cli
xchg
dec
mov
std
aad
jg
pop
scas
or
cmc
mov
adc
gs
mov
push
je
or
cmp
or
adc
test
pop
jb
push
cmp
scas
pop
push
fmuls
scas
sub
fidivrl
pusha
movsl
mov
lock
pusha
inc
pop
shlb
cmc
js
add
mov
pushf
mov
lret
pop
jo
and
dec
adc
stc
push
cmp
push
movsb
jl
sbb
mov
jge
sub
ja
sub
push
sub
popl
lods
insb
mov
cld
sub
jge
xchg
call
mov
repnz
xor
push
adc
mov
shlb
jp
jo
mov
outsb
pop
mov
push
mov
inc
stc
fisubl
daa
gs
test
fistpl
cmpb
jecxz
ret
scas
negl
xlat
or
jle
sbb
pop
dec
or
iret
pop
xor
inc
push
xchg
pop
and
hlt
sub
mov
mov
cli
ret
push
sub
int
nop
gs
insb
addl
push
enter
or
adc
and
mov
cmp
outsl
leave
and
mov
xchg
mov
fidivrl
mov
cmp
ja
inc
std
test
pop
lods
cmpsb
in
dec
jae
rcl
pop
add
cli
jb
push
inc
push
xchg
lret
push
inc
lea
rorb
sub
mov
int3
xchg
sarb
jb
rcll
cmp
sbb
xor
stos
repnz
pop
subps
call
into
mov
mov
jbe
test
shrl
xchg
inc
xchg
fimull
daa
and
sbb
jo
sbb
jecxz
cmp
rcrl
jbe
rcr
xchg
inc
and
rcll
xor
mov
mov
mov
xchg
dec
ret
and
in
aaa
sbb
or
out
add
icebp
lret
out
mov
les
jns
inc
push
xor
int3
mov
pushf
add
pop
loop
adc
ret
addr16
and
shl
arpl
add
orl
sahf
add
push
fldl
mov
mov
stos
sub
stc
dec
add
xchg
jmp
dec
mov
add
aam
inc
xchg
daa
xor
sub
dec
call
jmp
in
data16
ret
dec
std
adc
icebp
jecxz
call
lock
into
les
xor
fsubs
xchg
int3
sub
add
fiaddl
pop
sub
sub
addr16
xor
xchg
sbb
inc
push
stc
es
adc
add
ds
inc
cli
idivl
fisubs
test
push
paddw
cmp
icebp
add
out
sbb
movsl
imul
icebp
mov
push
adc
pop
pop
hlt
xchg
stos
dec
sub
mov
loopne
jno
cmp
jl
xchg
cld
push
adc
cli
inc
jmp
lret
fcoml
xor
rorl
adc
das
cmp
scas
adcb
daa
dec
outsb
lahf
pushf
lahf
sbb
sbb
xor
and
xorl
xchg
cmp
dec
dec
cmp
in
outsb
xchg
fwait
cmpsb
cmp
adc
adc
sub
neg
fstps
pushf
in
shl
fiadds
shrl
les
push
add
call
mov
add
adc
rcrb
fidivrl
or
push
cmp
xchg
mov
rolb
cmp
mov
adc
stc
les
mov
shll
insl
mov
push
add
std
in
bound
and
pushf
jl
sub
notl
lahf
push
into
mov
xchg
pop
push
cli
fdivr
xor
enter
adc
in
and
notl
fmul
and
loope
jp
fadds
enter
std
js
jb
insb
repnz
mov
pushf
cmpsl
or
pop
stos
enter
shll
mov
xchg
fists
fistl
outsl
mov
in
lds
sub
es
je
icebp
inc
push
scas
mull
mov
jg
jnp
popa
js
xchg
xchg
pushl
jp
sub
mov
and
orl
dec
cmpsl
movsb
xchg
lods
adc
fcmovnb
and
push
push
cltd
push
insl
ret
mov
sub
xor
cmp
shrl
pop
ja
shll
mov
sbb
mov
mov
in
jmp
ss
inc
scas
leave
fdivr
lods
jbe
add
xor
mov
xchg
rolb
xchg
cmpsb
jno
fs
and
insl
adc
jg
dec
clc
fstps
and
test
rcl
scas
nop
and
xchg
jnp
ljmp
daa
mov
shrb
and
rcl
mov
inc
imul
inc
mov
fstpl
into
sahf
xchg
adc
out
adc
arpl
mov
ljmp
mov
push
insb
cwtl
lret
pop
mov
xchg
jp
out
lods
outsb
push
cmp
sahf
jp
jb
dec
or
mov
movsb
xor
arpl
rclb
jb
dec
neg
cmp
or
adc
mov
stc
test
inc
stos
in
and
cmc
mov
out
ret
das
mov
stos
or
pop
jge
adc
push
push
lock
aam
sub
out
icebp
xor
js
xchg
xor
lret
cmpsl
and
jmp
sub
add
fmul
ds
in
inc
jnp
imul
dec
and
enter
test
call
add
dec
xchg
enter
fistpll
fwait
pop
insl
subb
loop
test
iret
cmp
xchg
pop
push
js
jbe
pop
pop
add
adc
roll
pop
hlt
insl
mov
mov
pop
pusha
loopne
lods
mov
mov
push
mov
dec
cmp
xlat
cmp
movb
lret
ret
push
inc
popf
mov
mov
fists
push
sahf
es
test
out
test
popa
rorl
mov
add
rclb
add
in
arpl
xor
jno
iret
mov
sbb
ret
add
mov
lcall
sarb
popa
jae
xchg
push
inc
pop
gs
test
xchg
xor
cs
cld
xor
pusha
pop
jae
and
dec
pop
push
mov
cmp
mov
jnp
or
aaa
mov
jae
bswap
mov
mov
mov
jmp
fdivs
in
dec
cmp
jae
adc
out
sub
sub
mov
mov
pop
cmp
outsl
cs
aam
into
repnz
std
shlb
push
mov
mov
stc
dec
dec
imul
adc
mov
fcmovbe
pop
push
mov
mov
mov
fwait
sub
gs
push
cmp
mov
imul
lods
ljmp
push
data16
xlat
aaa
dec
sub
outsb
loope
loop
bound
dec
add
into
mov
fbld
xor
notl
ljmp
leave
and
shrl
jmp
cmp
shll
addb
cmp
faddl
push
decl
es
push
orl
xchg
sbb
mov
std
fdiv
incl
popa
jmp
imul
xchg
stos
xchg
dec
div
orb
xor
imul
mov
mov
push
inc
jl
sub
add
scas
mov
dec
test
sbbb
ljmp
sahf
orl
inc
mov
int3
dec
ss
add
subl
jmp
xchg
adc
dec
mov
loopne
fwait
inc
inc
or
daa
push
sbb
mov
sbb
test
add
mov
dec
pushf
out
adc
and
sub
cmp
pushf
jecxz
leave
aas
aaa
mov
add
cmp
mov
lock
test
cs
cmp
mov
test
vmptrld
xor
repnz
scas
sahf
sbb
test
dec
movsb
aas
loopne
in
dec
xor
mov
ror
shl
int3
sbb
xchg
fs
in
jp
xor
clc
xlat
ja
jp
push
sbb
mov
cltd
pop
dec
xor
sub
rolb
loop
aaa
sub
subb
fistps
cltd
cmp
xorl
xor
aam
and
sti
int3
jecxz
xchg
inc
repz
sbb
xchg
fwait
jae
mov
adc
adc
sahf
test
cmp
aaa
cmp
cmp
je
sub
mov
sub
daa
pop
iret
cli
or
xchg
imul
cmpxchg
inc
fbstp
cmc
lcall
shrb
xchg
fmul
shr
pop
cld
adc
sub
sub
xchg
fistps
sbb
inc
gs
emms
mov
mov
test
rolb
fwait
pusha
adc
and
inc
daa
ror
shlb
mov
je
int3
push
jmp
sbb
repz
inc
bound
sub
inc
lret
sub
pusha
lahf
add
pop
xlat
call
jo
push
sub
dec
clc
ds
dec
mov
mov
fnstsw
lds
in
xchg
pop
and
and
mov
ret
xchg
cwtl
call
fidivrs
cmp
movsl
dec
add
cmp
jb
push
jge
aad
rol
call
rorb
push
flds
add
or
xchg
repnz
cs
xchg
sti
cmpsb
les
into
mov
adc
out
mov
in
in
enter
lret
add
repz
jge
clc
ljmp
je
mov
and
fucom
ja
testl
xchg
insb
jns
dec
xchg
addr16
lods
ss
jge
jo
add
jne
ss
inc
jns
xor
movl
in
icebp
popa
out
xor
or
or
or
pushf
or
xor
and
es
popf
out
out
xor
xchg
in
sub
mov
enter
xor
push
add
lcall
or
mov
sub
lods
or
or
out
fnstcw
sti
mov
jne
ljmp
jecxz
sti
ret
lea
jae
dec
das
fnstsw
add
and
push
xor
add
mov
in
std
shlb
mov
pop
in
mov
js
in
lea
and
mov
lret
push
into
mov
pop
pop
outsb
mov
pop
test
cwtl
out
push
dec
mov
add
mov
jmp
std
pop
mov
or
mov
adc
add
mov
cmp
ja
imul
leave
jl
adc
sub
les
lea
xor
jle
outsb
cmp
push
out
pop
popa
in
mov
lret
out
iret
inc
fs
daa
jecxz
jne
xchg
out
fiadds
xor
mov
mov
adc
imul
lock
xor
xchg
out
mov
xor
cmp
int
bnd
dec
and
jecxz
roll
mov
sub
xchg
sbb
pop
jle
cmp
add
jns
fmull
mov
mov
push
aad
dec
push
scas
or
dec
insb
lock
loop
mov
push
pusha
pop
and
xor
xchg
cmp
ja
jne
fdivl
cli
stc
bound
jno
adc
dec
pop
mov
jp
or
push
lahf
rolb
scas
shr
jb
dec
test
push
std
pusha
xchg
sar
repnz
xor
pusha
insb
add
test
cmp
push
movsb
jle
decb
cmc
iret
iret
insb
rcll
or
and
insl
fnstsw
jae
popf
fstpl
fdivr
xchg
push
sbb
pop
cs
lock
jmp
pop
add
cwtl
xor
mov
gs
sbb
data16
fimull
or
jg
push
mov
popa
pop
cmp
mov
inc
inc
push
add
arpl
xchg
fnsave
or
loopne
insb
xor
pop
sti
xor
adc
pop
shr
cli
ljmp
cmp
inc
sbb
mov
push
int
lret
jae
mov
insl
adc
mov
xor
xchg
dec
test
push
jmp
xchg
sub
aaa
nop
invd
mov
push
mov
jp
ret
xchg
adc
lret
into
ljmp
ficoms
test
sbb
into
jmp
sbb
cltd
out
es
out
and
test
add
cmp
lds
xchg
dec
cmp
mov
fmull
push
rolb
and
jnp
std
fldcw
in
mov
insl
cmp
and
mov
imul
lock
sbb
loope
pop
out
xor
cwtl
lahf
sub
adc
ret
xor
and
and
hlt
xor
das
imul
adc
movsb
dec
shlb
mov
lods
push
shlb
js
mov
push
push
lret
xor
daa
lcall
dec
inc
jecxz
ja
push
cmc
iret
cmp
ljmp
xor
inc
jmp
and
mov
popf
push
ficoml
add
cwtl
aas
mov
insb
cmp
clc
ret
pop
xchg
lahf
ja
fisttpll
mov
jl
or
pop
in
dec
cmpsb
sbb
sarl
cmpb
adc
jno
shll
mov
cmp
es
into
add
cmp
push
mov
xor
xor
test
mov
mov
js
loope
mov
das
ljmp
ljmp
mov
dec
outsb
jno
addr16
ret
or
sbb
push
pusha
rcrb
xorl
int
jmp
add
or
in
pop
adc
repnz
andb
mov
fists
mov
jecxz
mov
cmpsb
lret
in
inc
fisubrs
test
jg
sbb
sub
sub
or
inc
lret
dec
movsb
lods
dec
xchg
mov
cmpb
xor
push
cli
push
jns
lcall
les
mov
xchg
and
ret
fbstp
stc
lret
and
outsl
dec
inc
mov
in
hlt
xchg
push
sti
dec
sti
cmpsl
push
and
sbb
ljmp
dec
dec
lods
test
js
and
mov
fwait
popa
adc
lods
cld
mov
jno
cmp
cmc
adc
stos
repnz
ljmp
rclb
sbb
sti
sub
mov
and
add
or
inc
adc
mov
sub
sbb
cmp
inc
jle
sbb
mov
pop
pop
jnp
cmpsl
std
jle
or
push
xchg
cmc
sub
xor
adc
fdivrl
mov
cwtl
cltd
and
jle
mov
push
dec
out
cltd
xchg
test
or
fucomp
std
xor
fnsave
inc
inc
pop
mov
ja
jb
daa
push
lret
jl
inc
mov
movsl
movsb
adc
mov
and
lods
jp
inc
mov
jne
add
cmp
das
rcrb
mov
sub
jno
lods
and
mov
lahf
or
aas
dec
das
pop
shll
pop
pop
pop
cmpl
mov
sbb
sub
out
jnp
js
out
xchg
or
mov
inc
shlb
std
shl
mov
int
jns
adc
clts
push
arpl
dec
xchg
scas
in
xor
inc
xchg
or
dec
push
and
mov
call
cmp
cmp
mov
xor
fstpl
clc
into
popf
sbb
jge
fnsave
or
mov
jle
xor
mov
clc
xor
icebp
mov
fimull
push
fstps
loopne
insl
lahf
push
sbbb
ljmp
sub
cmp
call
jmp
ds
push
jg
mov
push
or
jmp
add
in
mov
in
jle
jp
fiaddl
sub
mov
mov
call
rolb
lods
xor
mov
cltd
jg
cmpsb
das
leave
je
mov
add
iret
dec
or
call
inc
jg
xor
lret
leave
mov
ret
cmpsb
repz
sub
mov
fwait
add
pop
jg
mov
pushf
je
mov
out
or
daa
cs
xor
imul
jne
and
ret
sub
icebp
xchg
loop
stos
stos
adc
cwtl
xchg
nop
popf
add
lret
clc
scas
lods
mov
jb
jb
cmp
aaa
add
imul
xorl
nop
into
jno
incl
adc
aad
lahf
movsbl
bound
cwtl
out
fptan
pushf
push
xchg
sub
aam
nop
nop
cmp
push
lahf
sub
xchg
cmp
push
pmaddwd
fstps
mov
adc
dec
icebp
inc
jbe
cmp
sbb
divl
int3
mov
shl
jns
sbb
mov
out
test
jb
or
add
lret
xchg
test
ret
push
push
lods
cmc
inc
enter
stc
xchg
in
or
je
dec
dec
add
insl
clc
addb
and
test
adc
sbb
push
clc
sbb
fwait
loope
jp
mov
and
pop
fisubs
push
mov
mov
mov
imul
sub
sbb
clc
sub
dec
fidivl
std
jne
xchg
mov
xor
scas
or
outsb
test
inc
or
ret
rcrb
ja
inc
fidivrs
or
cmpsl
rcll
push
jb
aas
jae
out
popf
mov
pop
negl
movsb
stos
pushl
push
hlt
ja
sbb
jmp
push
popf
js
jb
js
test
jg
inc
insb
ljmp
dec
jp,pn
cmp
out
in
lods
xchg
loop
xchg
rcr
add
out
inc
fstpt
insb
sub
push
dec
ret
dec
and
imul
call
loopne
push
push
cli
shrb
loop
dec
stos
shll
ja
or
cwtl
jnp
dec
pop
sub
mov
push
shll
and
dec
xor
scas
sbb
inc
stos
lds
adc
rorb
ret
addr16
jbe
mov
add
imul
inc
and
mov
and
adc
call
xlat
les
ret
ret
add
hlt
aam
adc
pop
mov
and
mov
mov
mov
sub
xchg
lods
jle
mov
xor
jg
dec
call
inc
mov
out
mov
ret
push
xchg
adcl
jle
mov
dec
out
out
jo
out
inc
in
xor
jl
xor
mov
iret
nop
mov
sub
push
pop
mov
inc
jns
mov
hlt
fs
jnp
adc
and
aaa
test
inc
add
mov
dec
dec
xchg
xor
popl
rorl
lret
mov
lahf
cld
orl
int3
lock
cmp
and
push
andb
out
sbb
iret
jb
or
inc
pop
lret
repz
scas
mov
jge
push
data16
jg
aad
xchg
xchg
pop
xchg
mov
loope
lahf
inc
lods
pop
testl
lods
mov
cwtl
pusha
mov
dec
andb
cld
stc
add
inc
imul
cmp
insl
les
movsl
add
movsl
or
mov
mov
pop
ds
xor
scas
and
loopne
and
mov
sub
mov
pop
decl
mov
mov
test
mov
or
pop
daa
mov
cmpsl
or
jmp
sbb
mov
mov
push
pop
fwait
jp
out
push
adc
add
cld
repz
dec
lds
xchg
mov
lods
dec
aad
mov
call
stos
sub
dec
mov
icebp
loope
adc
lret
test
inc
cmp
push
outsl
fmuls
sub
mov
and
sbb
sbb
cmp
dec
mov
sbb
imul
lods
xor
or
fwait
nop
scas
jp
add
add
cmpsl
mov
adc
inc
push
aam
shrb
adc
int
lods
add
inc
pop
fidivs
adc
aaa
sbb
push
rclb
dec
stc
mov
repnz
enter
clc
xlat
cld
sub
out
mull
and
out
lea
pop
imul
in
adc
loope
inc
test
bound
in
lea
repz
mov
dec
ret
jno
adc
sbbl
mov
mov
push
sti
fs
sub
outsb
and
or
pop
out
adc
mov
pop
mov
push
aam
aam
sub
pop
cltd
loop
push
aam
and
jecxz
mov
mov
enter
mov
push
out
push
xchg
imull
insb
notb
push
xchg
popa
cmp
dec
xchg
xchg
add
mov
ja
inc
insb
cld
aas
or
adc
aas
pop
sub
je
mov
and
or
rcrl
mov
jno
movsb
mov
mov
jmp
xor
add
dec
loopne
xchg
cmp
push
xchg
movl
add
repnz
notl
sub
mov
daa
mulps
fnstsw
dec
popa
lods
mov
or
mov
ret
cmp
jge
addr16
enter
sbb
mov
bound
ficomps
inc
sub
rcrb
push
cmpsb
sarl
cmp
xor
dec
popa
mov
mov
das
popa
jmp
xlat
inc
jae
aas
jp
out
outsb
inc
outsl
das
ss
out
pop
out
loope
jne
jmp
orb
test
cmp
and
aad
jg
mov
and
mov
outsb
push
pop
lea
jno
jp
inc
push
pusha
add
sbbb
imul
aad
inc
pop
mov
jp
call
mov
inc
jecxz
fnsave
mov
xchg
subb
out
mov
mov
sbb
shr
in
pop
sti
inc
xor
popf
adc
jnp
jg
mov
mov
xor
imul
add
pop
push
jp
or
mov
add
cmp
into
lahf
ret
enter
int3
lods
loop
mov
dec
outsb
push
mov
inc
pslld
daa
fmul
inc
popa
jae
mov
pop
add
add
xchg
mov
or
mov
push
aaa
cmp
ret
or
es
stos
jno
jns
sbb
or
scas
loopne
stc
les
movsb
xchg
lock
fiadds
sbb
repz
xchg
sub
push
push
pop
xchg
xor
inc
xor
push
push
add
clc
and
outsl
fisttpl
stos
fdivrp
insl
shlb
lcall
in
stos
ss
repnz
push
dec
pop
inc
sub
pop
out
jg
iret
repz
or
xchg
cmpsl
daa
push
xchg
les
fldenv
xchg
loope
ret
jbe
outsb
and
inc
lds
insl
aad
dec
inc
mov
bswap
xor
mov
in
xchg
jle
mov
sahf
rcl
mov
inc
adc
inc
mov
mov
rorb
jbe
sbb
out
push
js
dec
cmp
stos
adc
cmpsl
lahf
out
mov
dec
fmulp
loop
add
xchg
cmpsb
sbb
and
pop
cmp
cmc
jp
mov
inc
loope
mov
cmpsl
arpl
xchg
leave
inc
inc
jnp
mov
imul
cmpsb
push
imul
movsb
mov
arpl
add
int
sbb
popf
lret
mov
add
mov
mov
jno
outsb
pop
js
pop
test
lret
out
mov
subl
ds
int3
push
cld
lret
jno
mov
xchg
or
cmp
js
jo
mov
ror
std
dec
mov
test
sbb
icebp
jmp
add
pop
std
mov
rcr
cli
mov
xchg
mov
add
mov
jp
out
xchg
pop
push
bound
imul
mov
lock
push
adc
mov
cmp
mov
adc
test
ds
hlt
scas
repz
out
jmp
lcall
add
cmp
sbb
fcomps
adc
jo
sbb
ljmp
push
inc
mov
lds
xchg
shll
jmp
out
jl
bound
mov
dec
clc
xchg
sub
mov
pop
mov
mov
insb
sahf
lahf
aad
mov
mov
sbb
mov
stos
adc
cmpsl
rcrl
sti
out
push
test
addr16
xchg
adc
cmpsb
int
je
xor
ja
fidivs
std
test
xor
pushf
mov
and
cltd
push
cmp
movsb
cmp
cmp
sub
dec
push
mov
inc
js
mov
lahf
cmp
cs
and
clc
cmpsb
mov
int3
or
cmpsl
push
dec
iret
icebp
imul
js
inc
mov
and
push
fistpll
xchg
jo
xchg
outsl
jnp
in
movsl
sub
aaa
push
push
adc
add
pop
xchg
fsubrp
mov
xor
sub
icebp
cwtl
jmp
mov
sub
mov
aam
in
lret
pop
pop
fisttpl
int
push
push
xor
imul
add
enter
add
add
jecxz
xchg
es
leave
adc
jns
call
xor
in
adc
and
es
push
lods
cmp
cmc
sbb
shl
stos
out
rol
repz
enter
sub
adc
or
lods
jo
or
mov
cmpl
inc
sar
mov
cmp
out
adcl
sahf
sarb
int3
lret
adc
xchg
nop
ret
push
imul
mov
sbb
sbb
gs
mov
in
jmp
mov
push
xchg
enter
xor
scas
sub
rcrl
shlb
adc
pop
and
jp
xchg
pop
addl
iret
js
mov
adc
xorl
mov
add
jns
push
pop
sbb
mov
lock
xlat
popf
mov
stos
mov
pop
outsl
inc
repz
js
mov
dec
or
jbe
imul
mov
cwtl
lods
add
clc
jae
xchg
daa
jmp
xor
stos
or
add
mov
enter
cs
fwait
mov
cmp
filds
cmp
outsb
pushf
pop
out
mov
out
pusha
fs
repnz
xlat
or
xor
mov
mov
pusha
inc
inc
iret
vandnpd
mov
lcall
sahf
jae
push
mov
dec
mov
ja
stos
scas
jb
jne
push
je
jno
xchg
loop
xlat
or
popa
faddl
rorb
outsl
mov
pop
sahf
lcall
mov
sub
cmp
dec
dec
cs
data16
sub
nop
inc
es
movsl
and
imul
setg
cltd
aaa
inc
shrb
dec
ds
imul
stos
lret
scas
into
push
jmp
push
or
xor
push
push
outsl
loopne
out
jb
jbe
mov
jge
leave
add
add
sbb
push
sbb
popa
nop
dec
cld
std
push
lods
adc
add
scas
mov
mov
pop
and
xor
lret
icebp
out
imul
cld
ja
iret
fldt
lahf
mov
call
mov
adc
aam
cmp
cmpsb
mov
jnp
jmp
or
pop
xchg
dec
and
out
cmp
pop
movsl
js
addr16
adc
adc
loop
ficoms
jmp
mov
mov
cmpsb
mov
into
scas
jmp
decl
and
cs
push
loop
ret
stc
pop
subps
mov
mov
mov
aaa
pusha
push
popf
lock
jecxz
and
jno
jge
mov
fldt
repz
subl
aad
insb
lods
out
ss
in
movsl
fwait
mov
mov
sbb
jl
adc
out
inc
jmp
push
orl
fwait
cwtl
mov
and
mov
sub
addr16
cmp
icebp
xacquire
xchg
xchg
pop
pop
popa
mov
in
dec
inc
push
jmp
mov
shrl
adc
dec
pop
sti
pop
jnp
mov
add
int
iret
push
icebp
jp
outsl
mov
inc
in
sbb
imul
mov
int
mov
or
data16
aam
dec
lock
push
adc
mov
fcoml
ds
and
lahf
cmpsb
mov
inc
inc
add
popf
std
push
test
loop
sub
add
in
inc
ja
imul
inc
mov
jne
dec
push
div
loope
cmpb
dec
shlb
fdiv
mov
or
rorl
xchg
dec
mov
sub
sub
fdivrs
jne
jl
in
pop
xlat
pop
mov
jmp
movsl
sahf
imul
lcall
push
sbb
nop
sar
lret
mov
mov
add
jb
dec
cmp
dec
sti
test
xor
aam
sbb
popa
mov
aad
fcompl
lret
dec
pop
int
mov
jnp
dec
dec
in
push
or
test
xchg
ss
in
bound
div
jp
inc
cmp
dec
or
movsl
jo
sub
add
or
pop
xabort
int3
mov
lret
and
jae
or
jno
sub
xor
arpl
pop
aam
fwait
dec
aas
or
add
repz
and
xchg
scas
inc
bound
xor
sub
dec
mov
lods
pop
stos
adc
sar
aad
loope
lock
mov
mov
bound
mov
sahf
movl
mov
sub
aaa
iret
adc
push
xor
pop
mov
dec
pop
mov
rcll
jle
js
inc
mov
push
fdivr
dec
mov
lret
adc
mov
aad
stos
lods
int
mov
adc
sti
sub
into
add
cmp
mov
push
lcall
mov
pop
out
xor
mov
mov
pop
andl
lea
adc
ljmp
fadd
rcpps
idivb
sub
adc
lret
jae
fisubl
scas
and
mov
jg
repz
add
jmp
adc
aas
cwtl
cld
xor
movsl
jle
pop
mov
xor
hlt
xor
insl
inc
and
sbb
flds
fsubl
sarb
dec
jmp
pusha
pushf
cmc
and
int3
in
pop
stos
mov
add
jecxz
insb
sub
cmpb
sub
and
pop
cld
pop
fs
insl
xlat
popf
stos
ja
add
lret
pop
push
or
sbb
push
mov
add
push
sub
lock
insl
incb
into
push
into
cs
je
push
ror
rorl
xchg
lods
pop
ja
cmp
push
lods
jns
xor
stc
aam
fidivrs
ljmp
movsb
clc
stos
jp
fnstsw
out
outsl
cli
cmp
sub
aas
and
inc
push
jg
nop
pop
shl
notl
pop
into
mov
in
mov
mov
or
imul
push
clc
mov
sub
jo
mov
fsubrp
outsl
dec
fidivrl
pushf
sahf
out
and
cmp
dec
imul
fsubrs
inc
cwtl
xchg
scas
and
xchg
aaa
testb
sbbb
outsb
push
pop
bound
std
xor
or
mov
adc
insl
mov
loopne
adc
sbb
mov
aaa
mov
fbstp
inc
push
lret
mov
cwtl
mov
fists
insl
cs
xor
ljmp
inc
mov
mov
ljmp
jge
or
and
fcmovb
or
sub
repnz
clc
mov
jle
test
cld
stos
loope
or
icebp
sub
inc
rorl
push
and
out
jecxz
dec
sbb
adc
aas
ja
push
icebp
loop
fsubl
dec
fisttpl
pcmpeqw
cmp
pop
sub
xlat
std
jne
jg
push
mov
jno
dec
aaa
adc
fidivrl
mov
xchg
and
ret
sbb
popf
mov
into
cmpl
jmp
movsl
insl
clc
scas
cmpsl
call
das
addr16
push
out
add
fildll
lds
fldl
fmull
out
aad
xchg
dec
mov
jo
in
pop
adc
sbb
add
and
aad
mov
insb
push
aas
add
fiaddl
sbb
out
mov
sub
subb
mov
xchg
in
addb
mov
jb
subl
mov
in
xor
mov
ffreep
and
cmpsb
inc
cmc
pop
push
jb
xor
inc
pushf
push
leave
mov
dec
mov
fwait
inc
mov
movsl
push
stos
dec
inc
lahf
sarb
stos
mov
jnp
mov
inc
mov
pop
inc
cmp
mov
adc
xchg
sbb
xor
fsubr
inc
and
pop
mov
movsb
iret
push
aad
test
sub
popf
or
jns
insl
push
dec
ja
xor
ds
pop
jnp
iret
ja
inc
and
lods
repz
jp
je
loopw
rolb
enter
test
cmp
sbb
movsl
addr16
std
xchg
adc
jge
add
dec
dec
aaa
mov
mov
lds
fimuls
push
int3
mov
push
cs
fldcw
mov
xor
loop
shll
fidivs
cmp
cld
mov
mov
popf
mov
je
adc
dec
dec
inc
pop
fldcw
bound
or
dec
jns
sahf
nop
add
mov
lahf
sbb
inc
xor
aam
arpl
pop
mov
inc
movsl
jl
fsubrs
mov
pop
lret
fstpt
imul
and
insl
into
aam
xrelease
pop
icebp
pop
mov
ljmp
incb
xlat
popa
arpl
in
shrb
popa
fisubrl
sahf
xor
cmpsb
inc
cmp
inc
mov
xchg
lds
and
cld
jp
push
or
scas
jle
icebp
push
adc
rol
xchg
out
es
cmovle
mov
cmp
fcmovbe
mov
lods
sti
xor
cwtl
insl
push
repz
clc
push
mov
sbb
mov
cmp
dec
rcll
lods
pushf
enter
push
pop
mov
fstpt
iret
outsl
pop
repnz
cltd
and
or
dec
cmpl
mov
push
adc
add
repz
sbb
jne
and
movsb
bound
xchg
lahf
mov
sbb
into
sbb
pop
js
jae
pop
out
dec
mov
movsb
xorb
xor
rolb
xor
and
push
data16
outsl
mov
push
test
mov
je
pop
mov
push
arpl
and
jnp
jp
sbb
cltd
adc
pop
mov
jp
leave
stos
push
mov
repnz
js
mov
bound
gs
insl
sysret
in
cmp
aaa
mov
add
inc
pusha
mov
aad
or
int
fs
loop
fdivr
lcall
jae
add
add
xor
pushf
rcl
dec
jl
adc
sbbb
mov
pop
nop
mov
imull
and
gs
out
cltd
cltd
mov
jne
jp
push
jle
xor
leave
pop
xchg
lcall
cltd
xor
jae
pushf
mov
cld
ja
sbb
gs
mov
mov
hlt
aam
jno
dec
mov
pop
mov
test
sbb
movsb
mov
pop
inc
jbe
movl
push
add
orb
add
insl
cmp
sbb
test
pop
add
std
adcl
movsl
outsl
mov
and
test
xchg
dec
xchg
or
les
cld
ja
sbb
fmulp
fcoms
xor
mov
jmp
cld
ret
cld
cmp
pop
push
out
bound
icebp
scas
cmpsb
adcl
inc
pop
cmp
adc
bound
out
jae
test
push
lds
push
dec
je
sub
loope
adc
divl
call
sbb
dec
push
mov
cs
xchg
int3
out
jbe
les
mov
out
les
dec
sbb
loopne
insb
ror
out
jg
imul
mov
pop
pop
fdivrl
push
je
movsl
aam
push
scas
movsb
sub
adcb
mov
pop
pop
or
xor
pusha
das
frstor
stos
cmp
push
sub
xor
mov
andl
jno
addr16
vcmpps
xchg
push
or
mov
push
mov
sub
scas
push
sbb
fdivrl
int
movsl
cmpsb
xlat
jmp
lods
pusha
mov
inc
rolb
xor
bound
mov
and
int
fmull
xchg
das
push
pop
fmul
push
aaa
mov
sarb
test
ret
setp
add
mov
and
mov
das
sub
mov
sub
and
mov
cmpsb
adc
in
push
add
mov
daa
xor
and
mov
cmp
mov
pop
scas
std
push
mov
or
cli
adc
and
gs
jle
hlt
pop
cld
sbb
ss
imul
leave
rolb
jb
fsubl
lock
insb
out
mov
adc
repnz
xchg
or
and
jg
or
and
or
call
mov
xor
xor
mov
jns
sbb
je
sarl
rcl
adc
push
fwait
sbb
mov
xchg
mov
inc
xchg
jl
add
loop
pop
add
xchg
punpckhwd
jl
dec
pop
cmpsl
mov
fbld
jbe
outsl
leave
mov
mov
jmp
inc
repnz
ss
push
push
add
fs
test
stc
dec
ja
std
stos
scas
es
or
insl
mov
mov
ret
dec
bound
xorl
clc
xor
into
nop
movsb
add
mov
imul
popf
sahf
ja
jp
scas
adcb
ljmp
loopne
dec
aaa
popa
sub
push
frstor
inc
mov
jno
xchg
jecxz
cmp
fisttps
push
mov
xchg
xor
bound
push
and
lcall
adcb
jp
cmp
ret
fldenv
daa
ja
daa
ljmp
pop
int
jle
push
pushf
sub
xchg
sbb
mov
and
push
mov
in
xor
add
cmp
jmp
and
sub
push
mov
sar
push
push
fmull
cli
insb
js
push
sti
xor
cmp
and
arpl
lea
cs
out
out
nop
leave
ret
fbstp
pop
sub
mov
into
inc
sbb
or
stc
out
or
andl
js
test
jmp
scas
test
rol
sbb
mov
pop
sarl
xchg
xchg
fcomi
mov
mov
jae
pop
mov
inc
rolb
xor
movsb
fldt
shr
hlt
mov
stos
mov
rolb
xchg
and
rclb
jge,pt
out
xchg
sarb
inc
cmp
pop
jo
dec
movsl
xor
fwait
nop
push
jbe
adc
xor
sub
sbb
fidivrs
aad
xorb
cmp
sub
je
dec
add
cmpsl
insb
sub
inc
movl
or
call
imul
xlat
gs
mov
andb
push
cmpsl
fstps
sbb
and
cmc
popf
mov
js
imul
and
xchg
sbb
outsb
adc
jp
adc
pop
jae
dec
cwtl
vpshlq
or
inc
adc
xor
iret
push
lds
andl
dec
movsb
mov
adc
lret
mov
rcrl
mov
test
pop
mov
cmpsb
xchg
fcmovbe
lods
push
sti
jno
sti
int3
cld
mov
jb
outsl
and
jg
mov
mov
push
gs
lock
xchg
cmpsb
cmp
insb
add
cmpsl
xchg
mov
jle
jmp
mov
loop
imul
outsl
dec
mov
pop
int
movsl
or
lea
ret
pop
popf
or
das
iret
ds
sbb
outsl
mov
leave
ret
addl
dec
leave
jno
fldcw
test
je
and
jo
jne
xchg
inc
scas
mov
repnz
xchg
push
pushf
cmp
jns
sbb
call
les
sub
mov
sub
jne
ret
imul
jmp
push
adc
movsb
inc
pop
push
mov
inc
inc
data16
mov
idivl
cld
push
jp
scas
mov
dec
into
lahf
test
xchg
and
mov
shl
mov
inc
inc
pop
mov
aam
outsl
xchg
mov
xor
mov
push
addps
sbb
pop
jns
mov
in
push
dec
mov
xlat
push
mov
inc
nop
xchg
add
cmp
cmp
inc
ret
push
jmp
fiaddl
fists
pop
in
pop
fwait
shlb
pop
test
stc
pop
cmp
shll
or
sbb
push
arpl
mov
or
ret
sbb
addl
push
repnz
jb
repz
pop
sub
mov
imul
aam
cmp
push
imul
hlt
jo
dec
lret
and
mov
into
aad
jl
repnz
jmp
mov
mov
stc
jl
sub
fisttps
mov
xor
dec
scas
sbb
pop
arpl
mov
mov
push
pop
movsl
mov
jo
adc
jmp
mov
jmp
jnp
xor
repz
fwait
jns
fdivs
inc
adc
aam
lods
jno
mov
arpl
les
sub
jo
arpl
dec
pop
loopne
out
sub
subl
mov
inc
scas
xchg
adc
sub
in
cmp
ljmp
or
test
ljmp
pop
jp
enter
and
xchg
daa
test
pop
or
loop
shlb
and
mov
stos
lret
adc
push
dec
inc
or
and
push
sbbl
mov
jo
lods
dec
fwait
dec
push
js
adc
fcmovnb
adc
insb
fidivl
mov
clc
sbb
inc
sbb
shll
loop
mov
jl
stc
push
pop
jb
add
xor
add
lret
xor
loope
cmpl
hlt
pushf
sub
fs
cmc
and
push
dec
mov
scas
sbb
jge
imull
push
jae
xchg
mov
jns
rcll
jno
sub
xchg
or
jg
addr16
inc
mov
popa
in
pop
cmp
pop
movups
or
and
sbb
sti
dec
dec
push
xor
movsb
addl
jns
lahf
xchg
mov
icebp
mov
cmc
int
mov
lret
and
pop
mov
lsl
in
mov
hlt
mov
adc
adc
mov
test
xor
mov
aam
sub
ljmp
popf
xor
inc
mov
mov
call
aad
inc
pop
jbe
decb
loop
sbb
or
insb
push
sub
inc
in
stos
rorl
cltd
sbb
clc
inc
sahf
dec
push
inc
jg
and
test
into
outsl
in
fwait
mov
mov
mov
cmc
shlb
add
icebp
loopne
push
daa
ja
daa
faddl
imul
jp
cltd
push
and
shrl
xchg
movsl
rorl
or
push
pushf
pop
in
dec
push
adc
jp
add
test
mov
mov
mov
jae
sbb
les
mov
in
fidivrl
nop
aad
inc
rclb
pop
inc
sub
xchg
mov
movsb
imulb
xlat
outsl
jg
jmp
imul
xor
add
mov
enter
lods
fldl
xor
or
mov
cmpsl
out
ret
sbb
or
test
pusha
adc
rcrl
iret
mov
fiaddl
sub
xlat
jne
sub
mov
mov
test
xchg
insb
gs
cmp
xchg
pushl
fsub
lahf
ret
daa
inc
xchg
bound
xchg
and
push
mov
mov
mov
push
lds
sub
test
xlat
fs
adc
cmp
xor
push
imul
pop
outsl
test
add
push
insb
jo
les
pop
fldt
fstl
mov
arpl
mov
add
stos
jno
adc
test
mov
rol
xchg
mov
dec
lret
push
ljmp
inc
jmp
pop
leave
shlb
outsl
insb
sbb
pop
imul
mov
push
movsb
ret
adc
test
xor
push
subb
loop
outsl
sbb
push
mov
push
jg
sbb
adc
rorb
lahf
cmp
pop
xor
hlt
pop
push
cltd
fisttpl
std
mov
mov
scas
mov
or
mov
push
dec
cli
into
add
popa
cmp
rorb
mov
dec
push
iret
push
jo
fs
inc
imul
push
sbb
fdivl
and
out
rcll
lret
cmpsb
mov
jnp
in
mov
insl
push
cmp
sti
out
call
dec
and
xlat
and
sbb
adc
inc
ret
cmpsb
cmp
push
cmc
movsl
mov
or
imulb
mov
fnsave
xor
fimuls
jbe
add
in
mov
mov
inc
loopne
dec
xlat
loopne
jge
pop
cmp
xchg
aaa
int
cmp
mov
add
push
addr16
ret
fwait
and
xchg
adc
pop
mov
inc
fiadds
and
inc
imul
mov
insb
sub
xchg
add
out
call
mov
add
cld
addr16
nop
inc
pop
pop
mov
popa
jg
xchg
pop
fidivs
push
adc
fsubrp
es
jmp
in
movsl
xor
xchg
mov
ja
aaa
cmp
hlt
xchg
fcmovbe
mov
js
sub
js
xchg
pop
pop
ds
xor
sbb
push
int3
xor
jne
shlb
add
push
cmpsb
movsl
mov
imul
jg
dec
mov
xor
mov
rcll
pop
inc
nop
pop
xchg
xor
push
pop
pop
sub
ret
int3
fcmove
dec
xchg
movsb
test
ror
int3
insb
bound
push
dec
test
jge
insl
mov
loopne
sbb
mov
jmp
adc
pop
scas
pushf
gs
aam
or
in
lea
sbb
lret
inc
hlt
pop
mov
popf
fs
pop
faddp
jbe
stos
aad
or
icebp
inc
inc
cmp
popf
ljmp
pop
sub
les
sub
pop
inc
movsl
jo
dec
jo
jae
adc
dec
lods
setnp
rcrb
ret
cmp
jb
lret
cwtl
outsb
and
dec
rclb
lret
out
icebp
mov
fsubr
jnp
js
call
mov
xchg
je
xor
push
xchg
adc
je
outsb
xchg
aaa
fnstenv
call
repz
xchg
sub
or
mov
adc
cmp
push
ret
fsubs
sbbb
cmovbe
and
add
adc
popf
inc
aam
jl
ds
insb
lret
pop
shl
push
sahf
cwtl
out
in
dec
adc
xchg
test
sub
pop
push
pushf
repz
ret
and
jg
xchg
gs
int3
mov
ja
fcmovb
dec
cmp
cld
push
pushf
dec
ret
cwtl
mov
xlat
push
mov
fs
cld
dec
sub
cmp
rcrb
addr16
ror
sarl
and
sbb
jmp
ja
test
mov
push
hlt
jbe
mov
adc
scas
das
pusha
fbld
pop
stc
jmp
mov
xchg
sbb
int3
out
lret
std
sub
imul
jecxz
inc
mov
fadd
and
stos
cli
daa
or
aas
push
mov
dec
adc
push
sbb
pop
pusha
movb
jmp
insb
pop
dec
divl
mov
xlat
dec
repnz
sti
xchg
add
ss
out
scas
xchg
cs
cmp
jle
sti
fcomip
das
stos
sub
jae
inc
mov
cmp
sbb
mov
mov
imul
or
mov
add
add
sbb
lods
mov
leave
cmp
mov
iret
lea
into
or
dec
popa
popa
adc
mov
ja
and
push
or
adc
and
outsl
movsb
clc
xchg
cmp
cmp
pop
jmp
gs
repz
andl
out
mov
out
out
nop
enter
dec
jp
xchg
or
xchg
adc
jae
enter
data16
ss
and
and
mov
mov
adc
pop
lock
fsts
mov
xlat
movsb
test
das
xchg
in
lods
dec
cmpsb
xchg
call
xlat
jae
push
fwait
jmp
and
xchg
nop
in
jns
out
xlat
mov
or
xchg
mov
add
dec
adc
insb
test
add
icebp
pusha
xchg
jmp
sbb
mov
ljmp
sbb
or
test
sub
push
mov
and
pop
or
cs
add
clc
out
mov
pop
fldl2t
cld
ljmp
pop
out
sbb
adc
test
add
mov
cmp
jg
mov
aaa
add
jne
aam
add
pop
lods
lods
and
inc
mov
sub
cmp
rol
stos
mov
mov
adc
add
sub
hlt
lea
sbb
jp
std
xorb
push
mov
add
mov
or
les
pop
dec
inc
int3
inc
lahf
sahf
hlt
repz
sbb
xchg
sahf
cld
lret
push
shlb
out
push
mov
fdivrs
aam
sbb
es
stos
pop
fisubrl
mov
push
aas
pop
mov
push
ret
mov
test
lea
sbbb
mov
xchg
mov
int3
test
cs
jmp
aad
sbb
repnz
decb
mov
pop
imul
add
mov
lcall
cs
out
movl
insl
notl
ficompl
pop
and
out
xchg
insb
test
push
scas
mov
sub
jl
cmp
popf
and
inc
dec
scas
pop
xor
mov
loop
and
js
adc
in
js
idiv
stos
insl
mov
adc
pop
xor
repnz
xor
and
popf
sbbb
ret
dec
pop
roll
fbstp
fwait
icebp
repz
adc
movsb
push
mov
dec
call
sahf
stos
push
test
int
inc
xchg
adc
sub
dec
xchg
dec
mov
imul
icebp
push
mul
outsb
xchg
test
push
mov
lods
mov
sub
mov
pop
call
add
adc
notl
jg
and
add
cmp
enter
mov
popa
aam
fwait
and
inc
pop
call
inc
sub
int
add
enter
ss
xor
cs
dec
aad
push
test
arpl
cmpsb
es
pop
stos
push
adc
mov
cltd
gs
sbb
jmp
jecxz
imul
xchg
aad
ret
cmpsb
inc
xchg
mov
cwtl
mov
push
jl
and
jmp
add
call
hlt
xor
imul
loop
cmp
mov
add
xchg
fmull
add
loop
mov
add
nop
inc
push
iret
mov
pop
inc
mov
movsl
test
cmc
fsts
sub
mov
mov
cmp
in
cmp
ljmp
add
or
mov
je
out
sub
mov
addb
mov
mov
in
inc
outsl
lods
push
repz
fcmovu
insl
cmpl
cs
mov
clc
std
popf
push
add
push
fsubrs
cltd
ret
jp
cmp
pop
shl
push
inc
shlb
cmpl
jmp
jno
mov
xchg
xor
scas
xor
jo
push
aas
leave
and
aas
mov
ja
aam
fisubl
jmp
jb
dec
fstps
add
sbb
inc
pop
scas
mov
xchg
fdivl
pop
mov
ss
jp
xchg
call
mov
cmpsl
cwtl
add
outsl
jne
add
pusha
int
scas
in
lcall
adc
mov
cwtl
lock
pushf
repnz
pop
sbbb
and
dec
jae
cmp
sbb
rol
cmp
push
test
aad
jno
fucomi
imul
cmp
lea
stc
sarb
add
xchg
dec
adc
insb
cmp
jg
dec
push
dec
daa
dec
in
xor
imul
mov
repz
out
mov
cli
mov
call
mov
pop
pop
int
xchg
mov
xor
aam
sbb
cmp
fmull
sbb
inc
inc
aad
jae
sbb
fmull
sub
in
or
xchg
xor
lods
push
push
ljmp
and
xchg
fiaddl
add
mov
add
repz
nop
int3
movsl
xchg
push
out
or
ret
xchg
push
pop
insl
cmp
inc
dec
mov
daa
jle,pn
cmpb
cld
aad
das
in
fs
subl
dec
push
insl
repnz
mov
cmp
shlb
mov
dec
xor
cltd
bound
cvtdq2ps
aad
addb
lret
jbe
rcl
adc
dec
pushf
pop
mov
and
and
inc
jns
or
and
cld
and
lret
repnz
js
mov
xchg
imul
inc
loop
xor
dec
pushf
pop
pop
mov
mov
int
out
mov
adc
xor
in
out
add
jle
std
js
in
sub
lcall
mov
mov
dec
push
stos
mov
cwtl
mov
push
insb
outsl
mov
je
and
sahf
mov
push
push
add
add
sbb
stos
addb
push
outsb
adc
push
add
or
cmp
lock
and
pop
xchg
cmc
mov
push
mov
popa
addps
sub
stc
push
decl
icebp
les
cmpsl
lods
enter
loope
or
popa
inc
mov
int3
lahf
fwait
inc
mov
int
idivb
loope
mov
add
or
dec
xchg
jp
scas
iret
cmp
pushf
daa
push
xchg
push
mov
in
fmuls
sbb
gs
das
sub
xlat
cmp
mov
mov
or
mov
pop
jno
push
inc
add
hlt
out
js
popf
dec
sbb
fidivrl
pop
int
cmp
int
loop
mov
jge
cli
outsb
or
lods
add
outsb
fldcw
pusha
jecxz
cmc
into
mov
jb
out
inc
push
ljmp
sbb
jb
aas
cmpsb
aam
and
mov
xchg
inc
test
jmp
lods
dec
push
and
mov
inc
or
in
mov
add
arpl
lret
les
lret
cwtl
insb
hlt
notb
cmp
push
or
in
insb
popa
add
in
dec
loopne
xor
mov
cld
rolb
cmp
or
stos
jo
andl
rorb
cmp
or
pop
nop
les
and
jno
add
cld
mov
mov
xor
sahf
movsb
pop
adc
shrl
call
loope
jg
push
gs
test
jle
popa
aad
imul
enter
mov
leave
cli
dec
mov
in
insb
xor
enter
lret
inc
push
sti
les
xor
sti
cwtl
negl
add
mov
push
lret
xor
sti
test
shl
ss
shlb
cltd
add
mov
call
int3
subb
push
xorl
sbb
inc
testl
decb
arpl
loopne
and
pop
ss
sub
push
mov
das
adc
nop
movsb
push
dec
xchg
fwait
inc
mov
sub
out
sub
adc
shlb
mov
idiv
repnz
jge
mov
jno
dec
pop
jge
inc
mov
jae
popf
ret
fistps
stc
cmp
mov
loopne
sub
clc
add
mov
dec
cmp
lcall
cmp
scas
push
sbb
dec
pop
movl
aad
enter
inc
dec
push
les
push
mov
cmp
push
fsubp
fnstsw
imul
cmp
dec
jmp
hlt
dec
pop
lea
insb
jbe
loopne
mov
imul
jle
clc
cmp
pop
inc
hlt
xchg
pop
int3
call
aas
es
addb
mov
movsl
lea
lods
sub
out
shlb
call
dec
cltd
lcall
cld
pop
pushf
nopl
or
xlat
mov
jp
iret
mov
bound
shl
lods
je
in
adc
mov
add
cmp
daa
push
and
mov
add
xor
xor
dec
sbb
fwait
in
test
push
cmpsb
stc
sbb
stos
sbb
movb
cltd
cmp
xchg
sbb
push
sti
xchg
mov
dec
pop
imul
or
fidivrs
pminsw
xor
arpl
jecxz
adc
nop
cmp
in
push
leave
xchg
daa
mov
xchg
push
pop
or
xchg
mov
pop
outsl
cmpl
jnp
xorb
les
in
jne
xchg
imul
adc
mov
jl
sub
lods
mov
lock
xchg
lods
imul
gs
fwait
out
sbbl
dec
xlat
push
test
mov
adc
js
mov
push
out
push
or
xor
xlat
test
test
cmpsl
push
enter
lret
arpl
roll
arpl
aad
mov
out
pop
adc
jg
lds
mov
lret
dec
jo
popa
bound
cmc
mov
lahf
in
mov
lods
mov
mov
push
inc
repz
dec
push
xchg
dec
or
mov
int3
push
push
sub
mov
mov
push
or
cmpsb
dec
mov
push
outsl
xlat
fs
mov
movsl
stos
and
repnz
adc
xchg
arpl
xchg
out
daa
mov
pop
out
mov
test
lods
and
cmp
adc
cmp
xor
movsb
addl
lods
dec
jle,pt
test
push
out
mov
mov
lcall
dec
dec
xorl
pop
add
mov
mov
or
lret
mov
cld
xor
loopne
push
mov
mov
iret
stos
sbb
cmp
adc
or
add
add
dec
iret
mov
lret
out
sbb
adc
nop
sbb
push
loopne
shlb
add
add
adc
in
jb
dec
jno
xchg
inc
rol
mov
add
test
es
sub
rcl
mov
sbbb
loop
xchg
cmp
outsb
rcrb
pusha
iret
clc
daa
fsubrl
inc
ds
cmp
mov
mov
sub
fsubp
fmul
and
cmp
ljmp
addr16
mov
insl
roll
shl
dec
push
mov
and
mov
adc
outsb
mov
xchg
push
pop
and
icebp
xchg
stc
mov
inc
push
insl
push
mov
mov
std
push
out
pop
mov
cmpsl
pop
push
fistps
dec
mov
cs
sub
mov
test
negl
xor
add
mov
fs
mov
test
in
inc
movsl
dec
scas
xor
daa
sti
stos
push
jne
pusha
xchg
lea
xchg
hlt
xchg
aaa
in
fs
test
mov
enter
mov
lods
inc
test
sti
outsl
dec
iret
inc
mov
jne
subb
mov
pop
sahf
ss
lcall
fdivs
addb
jb
fstcw
jmp
jge
fmull
jnp
add
pop
xor
int
mov
in
push
xchg
lock
mov
fiaddl
adc
cmc
pop
les
testl
sbb
bound
sbb
add
xor
inc
sbb
sub
sub
inc
mov
clc
les
popa
xchg
sub
cmpsb
rcrb
outsb
or
enterw
enter
int3
divb
lods
xorb
inc
out
mov
daa
mov
or
fsubl
mov
jae
ljmp
add
sub
in
int
sub
and
das
cmp
psubq
cmp
mov
stos
xor
sbb
add
pop
add
enter
or
push
add
add
in
movsb
loop
dec
xchg
comiss
lods
add
divl
aaa
fisttps
ret
lcall
jmp
into
push
xor
cmpsl
int3
js
dec
lods
into
lret
sbb
fistpll
adc
dec
xchg
popf
adc
mov
adcl
add
mov
inc
cwtl
mov
inc
adc
and
outsl
inc
mov
sbb
jmp
xchg
in
mul
xchg
push
jne
lcall
sarl
roll
in
mov
adc
shlb
adc
push
xor
lock
mov
scas
out
lret
mov
movsb
out
sbb
dec
out
xor
push
mov
mov
xchg
loop
mov
adc
jl
mov
and
jle
pop
jmp
fsubrl
xchg
mov
and
rcr
jns
adc
lret
sub
insb
mov
fcmovu
push
int3
outsl
cli
fbld
in
pop
jns
test
das
adc
xchg
repz
cmc
ljmp
pop
xchg
cld
das
int3
icebp
dec
push
test
out
shll
mov
pop
ljmp
fwait
repz
test
insl
imul
cmc
inc
xchg
test
sahf
mov
sub
insb
xlat
and
cmp
jmp
xchg
in
sub
data16
sub
lret
and
out
nop
lock
pop
es
mov
mov
in
mov
mov
xchg
jne
cmp
divl
or
test
inc
jo
test
push
je
adc
dec
mov
dec
adc
and
jb
adc
dec
push
mov
jl
mov
add
fisubl
mov
push
fs
repnz
cmp
pop
pop
call
xchg
arpl
ret
mov
lea
or
sub
cmp
jg
cmp
adc
test
xchg
add
test
jne
push
mov
int3
les
xchg
mov
sub
pop
jl
add
es
popa
cmp
lock
jle
jns
inc
and
inc
loope
cltd
fldcw
mov
pop
cmpsb
jae
xchg
jmp
dec
xchg
jae
push
icebp
ficomps
int3
adc
mov
scas
into
xchg
or
pop
fsts
lret
insl
pop
adcb
imul
push
jae
mov
mov
and
cmpsb
cwtl
or
repnz
movb
dec
inc
push
rol
and
push
push
in
lahf
jp
rcrl
inc
jg
xor
hlt
popa
dec
icebp
mov
xor
inc
jmp
or
cmp
jge
mov
sbb
enter
sbb
jae
popf
lret
out
ljmp
pop
lock
test
in
jae
sub
sbbb
xor
or
sbb
mov
push
ds
pop
jne
xchg
aas
push
pop
ss
push
mov
pop
pop
movsb
mov
aas
ret
stc
aad
mov
jns
shll
cmp
icebp
and
jmp
xchg
lods
mov
xchg
push
cmc
sub
lcall
popl
cs
sbb
jge
ds
lret
xchg
pop
jbe
xchg
imul
jmp
dec
out
test
cmpsl
in
mov
out
xor
mov
outsb
lods
lds
cmp
cmc
and
popa
fwait
das
cmp
fwait
jle
cld
loopne
ja
scas
loopne
mov
mov
mov
outsl
shl
movsb
mov
fisttpll
xor
mov
dec
imul
jl
mov
stos
movsb
pop
jle
rcrl
mov
pop
xchg
jg
sbb
cmp
mov
test
addr16
xchg
stc
mov
push
lds
add
icebp
dec
mov
sub
scas
outsl
inc
xlat
inc
adc
shlb
movsl
sbb
sbbl
and
negb
jns
push
jg
push
xchg
mov
in
jne
xchg
mov
fimull
add
inc
push
jb
aaa
jno
xor
push
xchg
push
cmpsb
lea
cmp
or
int3
push
push
in
adc
scas
lods
cmp
test
pop
ja
stos
addr16
dec
leave
push
inc
jb
inc
hlt
xor
leave
stc
mov
push
inc
push
in
rcl
jae
test
mov
repnz
das
jmp
push
lock
movsl
mov
inc
lock
ds
stos
outsl
test
ret
test
dec
add
imul
sbb
mov
sbb
add
xcrypt-ctr
cmpsl
cwtl
fistl
push
push
ja
js
mov
daa
leave
and
call
shrb
inc
push
add
sti
lahf
int
mov
arpl
sub
or
pop
ljmp
fimuls
leave
jnp
inc
dec
leave
ds
out
dec
test
mov
cmpsl
add
pusha
jmp
push
sbb
sahf
pop
inc
or
sub
sub
push
in
inc
push
add
sub
cltd
shlb
fdivs
stos
ja
jecxz
rcll
mov
mov
inc
and
xor
inc
adc
and
or
aaa
inc
mov
aad
jbe
rorl
and
imul
shll
fsubs
push
cmp
aam
mov
cli
add
insl
push
mov
pop
cmc
xchg
mov
dec
iret
ja
lods
out
cli
inc
pop
daa
xor
xchg
xchg
cmp
add
lret
cwtl
ficoms
jnp
out
cs
inc
push
mov
out
cmc
xor
cmp
mov
pusha
mov
add
or
cmc
mov
xchg
ja
jo
movb
pusha
mov
insl
sbb
sbbl
push
cwtl
lahf
clc
jne
arpl
fistl
frstor
cmpl
movsl
int
pop
ret
test
add
mov
loopne
inc
adc
iret
sahf
jp
sbbb
mov
data16
jle
pushf
cmp
es
bound
iret
repnz
add
les
clc
outsl
inc
dec
and
xchg
insl
add
in
sub
cmpsl
dec
pop
xchg
adc
adc
mov
push
or
mov
mov
push
lahf
dec
fidivrl
incl
mov
mov
mov
cmpsl
movsb
jo
add
xchg
js
in
xchg
cmp
inc
inc
bound
bound
mov
mov
pop
push
out
xor
xor
push
xchg
adcl
in
push
fildll
mov
in
sbb
popa
fistps
adc
push
mov
fisubl
xchg
adc
adc
fcmove
call
mov
aas
in
xchg
fld
out
inc
cmp
jne
push
loope
popa
out
aaa
push
int
sub
test
jl
lahf
ret
xor
ret
mov
jle
pushf
std
int3
adcb
mov
sbb
call
push
stos
int
and
std
push
add
scas
arpl
into
push
jg
insb
mov
mov
lea
inc
or
push
mov
or
jne
movsb
repz
inc
mov
out
lcall
xchg
inc
cmp
and
rorl
xor
xchg
jl
in
adc
adc
fwait
pop
movsl
stos
dec
dec
push
shlb
cmp
bnd
mov
cmp
adc
mov
lds
pop
rcll
pop
ret
xchg
jg
mov
pop
popa
js
dec
fdivrs
sbb
aas
and
bound
cli
dec
lods
stc
repz
test
decl
xor
shll
cmpb
inc
sub
repnz
fwait
es
pop
aas
stos
add
xor
inc
outsl
sub
mov
aad
mov
xchg
out
aam
cmc
jnp
out
xor
dec
jnp
lret
lock
cltd
and
scas
cli
dec
cmp
nop
cmpl
xchg
cli
insl
imul
push
or
rorl
cmp
jle
mov
fstl
jg
lods
add
lret
bound
sub
pop
sarb
pop
sbb
inc
push
jp
push
aam
pusha
cli
scas
insl
xchg
and
push
mov
jne
cmp
jno
push
int3
mov
ds
cs
outsb
mov
cmp
das
int3
add
jbe
cld
and
cmp
jo
mov
lcall
jecxz
cmp
pushf
push
xor
addl
xor
dec
adc
jae
or
mov
pop
js
pop
aaa
leave
mov
icebp
out
lock
ljmp
in
in
shl
or
jg
testl
mov
jne
mov
lret
repz
mov
loopne
and
add
jl
js
mov
cs
divl
popa
in
mov
cmp
leave
jg
popa
xchg
rcll
push
ja
clc
xor
xchg
dec
sbb
dec
push
cmp
pop
stos
shll
iret
push
lock
das
repnz
add
cltd
mov
in
pushf
out
rolb
mov
mov
mov
jno
stc
add
jg
mov
mov
mov
decl
aas
sub
ret
push
push
cmpsb
sub
cli
jmp
in
mov
sbb
inc
pop
cmpb
pop
cmpsl
dec
lret
inc
xor
pop
in
xchg
xchg
leave
mov
jmp
pop
mov
aas
fmull
leave
mov
mov
ret
sti
call
mov
iret
mov
inc
clc
push
jle
gs
xor
mov
insb
dec
pop
inc
mov
outsl
pop
jp
hlt
mov
fwait
mov
data16
ja
push
cmp
or
xchg
andl
call
adc
and
jbe
mov
call
jae
stos
jae
mov
jbe
mov
test
mov
mov
pop
pop
and
sbb
adc
int3
jno
mov
test
lcall
hlt
jb
jp
mov
cmc
xchg
imul
pop
sub
xor
inc
stc
cmp
jle
fucomi
les
jo
lods
cmp
cmc
sbbb
in
test
and
mov
xchg
sbb
out
popf
lods
insl
aam
mov
aaa
push
sbb
push
or
in
or
fcomi
add
mov
adc
not
cmp
and
push
fwait
add
jns
push
xchg
push
addl
sbb
shll
inc
outsl
stos
test
cwtl
rclb
fistpl
aas
add
dec
inc
clc
les
mov
xchg
sub
push
repnz
icebp
jne
js
data16
inc
mov
or
ss
repz
mov
lods
ljmp
push
mov
sub
je
mov
gs
ficompl
pop
fdivrs
adcl
cmova
ret
add
jns
popf
mov
mov
pavgb
repz
sub
fcmovbe
mov
sbb
sub
lahf
enter
sbb
js
inc
xlat
lcall
les
lock
enter
ja
jbe
xchg
xchg
cmp
into
xor
push
mov
test
mov
xor
les
ret
cmp
scas
ss
adc
ret
int
xor
xchg
bnd
fucomp
movsb
xchg
out
test
dec
cmp
icebp
outsl
pusha
and
imul
pop
and
fmull
jo
or
fucom
jmp
xchg
sub
fucomi
jb
xor
leave
pusha
addr16
add
sbb
xlat
mov
data16
clc
imul
pop
or
in
mov
out
jo
fisttpll
aas
in
repz
in
dec
mov
mov
xchg
int
fimuls
cmpsb
mov
data16
cmp
insl
daa
iret
jae
fisubrl
lock
stos
pop
mov
fadds
scas
xchg
ret
mov
mov
das
add
mov
rorl
pop
add
and
mov
pushf
push
mov
or
cmp
pop
aas
xchg
sti
add
addr16
or
or
daa
sbb
sub
push
dec
adc
inc
test
mov
fcompl
adc
les
and
pop
lcall
das
jp
js
xor
and
xor
roll
dec
pop
addl
pop
add
lock
movsb
cmc
testb
mov
add
shr
pop
ja
lds
xchg
dec
push
xor
jp
nop
sarl
ror
fisttpll
xchg
jg
xor
fldl
imul
adc
inc
dec
fsubp
outsb
fldcw
cmc
aam
mov
adc
push
cltd
push
push
ja
jmp
sbb
mov
lahf
adc
fidivrs
pop
outsb
fbstp
push
and
adc
popa
mov
inc
inc
in
push
push
sbb
insl
xchg
mov
add
sti
gs
dec
mov
es
adc
xchg
xor
and
xor
and
mov
es
adc
or
xor
f2xm1
xchg
stc
aas
imul
sbb
in
into
scas
enter
push
mov
enter
rcl
stos
scas
mov
xchg
or
into
outsl
daa
loope
and
repz
push
iret
ja
psllw
cmp
mov
lret
cmp
iret
test
pop
cmp
lahf
jmp
dec
jle
cmc
enter
xor
in
outsb
lea
jge
pushf
ficoms
out
aad
js
inc
mov
sarl
inc
jo
std
mov
insl
mov
cs
stos
insl
pop
mov
adc
mov
lret
ja
int3
xchg
inc
dec
sub
sbb
xchg
pop
and
sarl
cmp
lcall
pop
adc
fistpll
call
and
loop
dec
xchg
pop
data16
and
and
and
cmpsb
inc
mov
repnz
insb
mov
lcall
pushf
cmc
add
das
je
out
outsl
adc
jecxz
inc
std
loope
test
push
xchg
inc
lret
fwait
mov
clc
lods
stos
iret
outsl
xchg
pop
mulb
lahf
add
out
icebp
lret
inc
fstl
push
pop
push
jmp
jl
fidivrl
repz
mov
loop
adc
mov
lret
or
push
stos
aad
js
jns
jno
xor
inc
stos
xchg
cs
ds
push
jns
repnz
aad
mov
addb
mov
das
or
jge
stos
jge
hlt
ret
addl
sbb
jmp
mov
cmp
shrl
inc
inc
das
in
jo
or
adcl
in
sub
push
test
push
mov
aas
es
scas
adc
pop
inc
hlt
pop
out
mov
xor
push
xor
aaa
cwtl
sbb
cmp
in
adc
inc
push
lods
pop
sub
cs
andb
sub
out
mov
mov
or
sbbl
xchg
inc
data16
xor
movsb
in
push
pusha
push
jl
add
inc
jo
pop
adc
mov
lock
test
xorb
cmpsl
mov
xor
ret
mov
cwtl
push
int3
mov
icebp
cmp
cwtl
mov
insb
mov
or
sub
pop
bound
xor
push
icebp
pop
jns
fstpt
fstpl
in
xchg
or
pop
mov
je
mov
es
loopne
push
xor
and
xor
nop
andl
add
xor
cltd
sbb
and
into
mov
add
aas
fcoms
push
cmc
inc
divl
add
mov
mov
aas
mov
push
fists
fs
mov
iret
dec
pusha
jns
fwait
pop
xchg
dec
pop
outsl
or
pop
mov
sbb
pop
mov
or
js
cmp
into
sub
ret
mov
cld
leave
rorb
mov
xchg
xchg
push
lds
cs
fwait
pop
xchg
cmpsb
push
aad
out
ljmp
sarl
clc
scas
jg
mov
sub
dec
xor
shlb
icebp
out
cld
std
xchg
push
fbld
scas
mov
jmp
ss
push
mov
adcl
popa
mov
js
and
dec
pop
inc
shr
xor
mov
mov
fs
inc
int
add
xlat
iret
inc
jbe
and
dec
aaa
xor
inc
and
jecxz
fldenv
scas
pusha
icebp
sub
dec
ljmp
hlt
mov
inc
bound
xchg
data16
jge
test
loopne
outsb
push
sarl
pop
imul
mov
ljmp
mov
mov
or
std
in
negb
cmp
xchg
scas
aas
push
xchg
fnsave
xor
out
sti
dec
pop
inc
inc
ror
cmp
stos
fucom
xor
repz
mov
bound
push
test
ret
jmp
and
mov
mov
or
in
popa
sub
js
das
xor
xor
test
jbe
or
pop
movsl
shll
jbe
movswl
xor
ja
rolb
test
adc
fistps
dec
push
dec
pushf
dec
loop
xchg
sbb
xchg
push
sbb
jge
or
inc
sbb
dec
and
aam
aaa
negl
sbb
js
in
inc
fsts
insb
xchg
dec
adc
out
adc
push
xor
xor
hlt
mov
mov
cs
popa
pop
dec
sahf
stc
shrl
dec
pop
mov
dec
jno
lock
push
mulb
and
in
push
add
cmc
aas
gs
pop
sbb
and
or
rcll
iret
jg
shlb
jp
out
or
pushf
dec
jne
loop
mov
adc
add
rcrl
sub
xor
stos
sbb
inc
pop
jp
ret
push
out
movsb
testl
out
mov
sub
pop
in
xchg
add
mov
sub
or
ljmp
dec
lret
das
mov
push
lea
out
pop
jle
xor
lret
adc
loopne
andb
jp
mov
sbb
ficoms
xlat
ja
in
or
jns
push
dec
inc
push
cwtl
push
sub
jecxz
add
pop
cmpsb
sarb
int3
test
loopne
out
sbb
mov
pop
nop
loopne
mov
nop
subb
clc
outsl
xchg
stos
fstpl
xchg
jp
sbb
pop
sbb
pop
pop
or
icebp
lock
popf
mov
imul
ljmp
xchg
jae
cltd
sahf
ljmp
sahf
sti
and
bswap
das
mov
xor
sbb
adc
push
mov
xchg
xchg
jo
out
ret
mov
mov
or
fwait
pop
cld
or
ja
pop
sbb
xor
add
xor
test
cmp
cmp
adc
data16
dec
arpl
jbe
adc
and
roll
into
xchg
dec
dec
push
adc
popf
popf
cmp
jp
jp
pop
es
mov
outsl
jnp
dec
int
jle
inc
inc
mov
gs
in
mov
jecxz
flds
xorl
mov
std
ljmp
int3
adc
mov
or
std
pop
lods
add
sub
iret
jb
xor
push
test
xlat
xor
jmp
stc
dec
push
js
cmp
add
mov
push
add
push
sbb
sub
lock
je
mov
mulb
and
ljmp
push
outsb
add
stc
xor
pushf
and
jle
les
fcmovne
addr16
add
into
adc
push
fcmovnbe
enter
cltd
imul
and
push
daa
les
xchg
aad
dec
out
jnp
sar
sbb
xor
and
dec
add
cmp
jns
xchg
pop
notb
sub
es
std
fiaddl
mov
cmpsb
push
dec
jmp
cmp
sub
jmp
enter
stos
inc
dec
or
mov
lock
mov
push
std
push
mov
jl
xor
jle
arpl
loope
xorb
notl
cmp
mov
adc
ja
jmp
push
out
adc
push
aam
pop
inc
stos
out
loope,pn
lcall
insl
push
test
sbb
stos
dec
and
jmp
mov
xchg
movsb
adc
gs
mov
addr16
fs
push
psubd
xlat
shlb
add
idiv
popl
lock
or
jo
inc
test
fdivr
std
push
jecxz
ljmp
fs
das
mov
mov
int3
lahf
mov
daa
push
ds
lcall
add
cmp
andl
cmp
enter
das
sbb
faddp
ret
dec
imul
mov
push
or
push
loop
stos
jl
test
arpl
mov
lret
xchg
inc
cmpsl
fisubrl
inc
and
xor
xchg
dec
jmp
push
sub
push
xor
es
subl
ds
fdivrl
aaa
pop
js
inc
inc
fstps
sbb
popa
or
push
pop
pop
pop
pop
stc
fsub
xchg
dec
sub
sarb
cmp
dec
stos
shll
dec
dec
mov
rolb
daa
push
jg
das
or
mov
and
iret
mov
addr16
dec
xchg
movsl
sub
cli
jl
mov
je
dec
dec
int
pop
add
cmpsl
push
int3
mov
jecxz
aad
mov
jg
push
pop
jnp
lds
and
sbb
sti
jns
mov
aaa
xor
mov
cli
popf
into
mov
or
insb
test
ret
pop
cmc
and
or
add
xor
jbe
loope
jl
lds
pop
mov
add
pop
sbb
or
jl
gs
adc
pop
arpl
jns
and
sub
and
inc
fwait
dec
cmp
mov
popl
subl
sub
pop
push
daa
push
sub
lock
pop
movsb
inc
xor
testb
in
inc
push
fwait
daa
arpl
lods
cmp
lods
fisubs
call
mov
shrl
mov
xchg
inc
rcrl
adcl
cmp
and
int
out
push
in
sbb
push
or
or
aaa
cmpsl
icebp
adcb
xchg
cmp
sub
sub
sbb
xor
add
stos
dec
xlat
fs
and
into
jecxz
xor
mov
repnz
or
pop
mov
leave
lahf
mov
pop
outsb
scas
fs
sbb
outsl
outsl
mov
lret
pop
pushf
fldt
lahf
push
push
push
inc
or
mov
iret
aaa
repz
mov
adc
xchg
jmp
push
cmpsb
rorl
sub
xor
cltd
jae
pop
xchg
mov
fildll
pop
jecxz
inc
mov
lock
lcall
or
leave
popa
ret
rclb
lcall
push
jg
ja
outsb
xchg
movsb
or
xchg
pop
inc
cltd
xchg
test
shl
push
add
mov
sbb
jno
push
and
es
bnd
mov
call
lret
or
sbb
or
xchg
test
stos
mov
fdivrp
mov
in
or
mov
jle
jne
add
push
pushf
cli
jmp
inc
test
sarl
push
mov
xor
cld
pop
and
pop
jmp
movsb
scas
call
rorb
sub
ficomps
xchg
fs
cmp
stc
or
jge
sbb
std
std
pop
adc
je
xor
inc
pop
icebp
aas
mov
dec
pushf
iret
jp
push
add
fcomps
sub
out
je
jne
sbb
pop
and
rorb
es
es
cmp
clc
mov
orb
cmp
sub
pop
push
cmp
loopne
ljmp
xor
popa
xor
loope
mov
mov
movsb
movsb
movsb
xchg
xor
or
mov
mov
pop
jno
stos
jne
fistps
add
int3
lods
or
or
inc
push
mov
sarb
jno
adc
scas
xorb
jo
mov
dec
call
inc
ja
ret
repz
js
push
pop
lahf
adc
mov
mov
push
mov
cmpsb
jo
rcrb
int
mov
lret
std
cli
lock
and
dec
jno
lea
xchg
push
pop
xor
mov
test
lods
iret
sbb
in
sbb
mov
add
sbb
sub
inc
je
jmp
sub
and
nop
clc
sub
loope
xor
aam
es
xchg
jle
jmp
mov
scas
cs
lods
addl
cs
xchg
jae
push
ret
mov
cwtl
les
movsb
into
adc
mov
sub
dec
adc
sub
sbb
loop
in
xchg
adc
in
add
cli
mov
mov
mov
xor
ja
pop
xorb
adc
enter
push
leave
dec
rcll
fwait
popl
test
or
lods
fdivr
popa
movsb
mov
pop
out
imul
sbb
xor
das
cmp
jo
fidivrs
jg
shll
lcall
movb
pop
inc
mov
insl
dec
daa
and
xchg
stos
xchg
shll
sbb
mov
ljmp
rcrl
stc
or
inc
clc
push
lock
xchg
sahf
cmp
out
xchg
imul
rclb
ja
cmpsl
pop
pop
mov
repz
add
and
push
sub
lods
sub
test
cltd
jmp
xchg
or
scas
movsb
inc
in
sbbb
mov
and
adc
cld
ljmp
inc
xchg
inc
stc
cmp
dec
lcall
repnz
dec
sub
inc
mov
jns
sbb
fisubl
dec
xor
cmpsl
in
xor
cwtl
jl
pushf
sub
adc
dec
push
out
mov
lods
notl
sbb
pop
cs
mov
jle
push
cmp
pop
pop
cli
mul
push
scas
mov
les
mov
rclb
scas
cmc
faddp
push
cmpsl
add
mov
push
cld
dec
adc
push
mov
sbb
adc
int3
cwtl
and
jae
aaa
ljmp
inc
inc
add
push
gs
add
xor
jno
mov
stc
lds
push
pop
mov
stos
add
mov
das
aam
mov
jmp
das
or
mov
sti
pop
fisubrs
pop
xchg
fs
shlb
push
sub
pop
and
mov
dec
pop
sarl
push
jns
aad
ret
xor
push
inc
xchg
mov
mov
shlb
lret
jecxz
jb
push
sbb
mov
cmc
out
leave
mov
mov
shlb
popa
push
je
test
lods
ficoml
shr
in
nop
fcomps
rclb
mov
in
inc
push
jae
jg
cmp
jns
pop
add
mov
mov
or
std
push
imul
repnz
lea
out
mov
push
inc
pop
jne
hlt
lret
mov
gs
jl
push
data16
mov
cmp
movsb
addr16
lcall
cwtl
dec
add
cmp
das
daa
lret
flds
adc
xor
movsl
xchg
mov
sbb
es
iret
mov
neg
push
mov
jg
ficomps
ffree
lods
lods
xor
rcrb
out
push
pop
pop
fcmovu
mov
out
sbb
out
cmpsb
daa
jle
dec
add
fidivrl
inc
mov
je
dec
aad
sub
cmp
test
in
filds
dec
bnd
xchg
dec
into
add
mov
cmp
jmp
js
mov
into
imul
mov
shl
fwait
cmp
bnd
inc
jne
push
jp
inc
add
jle
imulb
add
imul
push
fndisi(8087
fcom
mov
add
mov
pop
aaa
pop
adc
cltd
mov
jno
or
stos
mov
pop
mov
adc
stos
dec
cmpsb
sbb
aam
pusha
dec
lds
arpl
mov
inc
icebp
sbb
adc
push
jbe
sbb
xor
scas
imul
sti
sbb
mov
add
lret
call
jno
sbb
test
repz
cli
push
mov
test
out
xchg
dec
jle
xlat
scas
push
mov
daa
push
inc
fidivl
jbe
aas
testb
mov
push
xchg
push
jmp
and
and
push
push
std
lods
cmpl
loopne
das
and
das
jb
mov
inc
in
imul
cltd
pop
aam
dec
out
data16
inc
gs
stos
mov
aam
sbb
jo
std
xor
or
cmp
push
pusha
fsubrl
and
out
xchg
or
jl
ja
pop
imulb
add
lret
fnstsw
xchg
or
push
sbb
andb
test
clc
cmp
jnp
fbld
mov
xor
and
dec
loop
xchg
movsb
loop
test
mov
fnstsw
push
add
inc
mov
ja
adc
jne
loop
imul
fcos
std
mov
test
jo
push
mov
lea
jg
sub
xor
mov
jb
stc
ret
xor
lock
sub
push
adc
addr16
push
adc
xor
push
xchg
pop
ret
mov
iret
and
adc
xor
mov
jecxz
pop
arpl
shlb
xchg
sub
loope
hlt
and
shlb
pusha
push
mov
movsb
cs
lahf
jno
inc
jo
adc
inc
lods
dec
push
dec
push
push
xor
inc
mov
repnz
add
xor
and
jo
or
lods
push
fdivr
or
inc
nop
mov
decb
jecxz
repz
aam
lods
mov
fstl
mov
aas
xchg
fnop
test
outsb
pop
std
jne
and
shl
mov
adcb
icebp
sbb
iret
pusha
pop
fwait
pop
ljmp
xchg
enter
inc
lods
pushf
push
fs
xor
sbb
sub
int
cli
sbb
pop
cli
push
inc
jge
xchg
mov
or
fcomps
fisubrl
sub
cld
test
arpl
cld
gs
out
jl
jbe
xor
rcrl
pop
cmpsl
inc
pop
ljmp
adc
lods
movsb
push
rorb
pop
enter
pop
sbb
push
xchg
mov
lods
testb
push
test
out
xor
push
stc
pop
jne
or
and
inc
xor
cld
leave
lret
and
adc
xor
jmp
or
xor
adcl
and
sub
or
xchg
mov
mov
mov
das
xchg
cmp
inc
xor
imul
pop
jmp
rcrb
icebp
inc
pop
adc
sub
stos
mov
aaa
sbb
push
in
xchg
add
incb
pushl
xor
and
dec
popf
stc
cmp
push
xchg
dec
sahf
scas
inc
cs
in
mov
push
daa
push
sub
call
add
pop
pop
fs
ret
mov
jg
inc
out
test
or
into
add
pop
mov
div
popa
adc
mov
fnsave
cli
or
cwtl
xchg
adc
adc
mov
ror
mov
lods
pusha
push
inc
hlt
inc
test
pop
call
jbe
and
lods
repz
or
ss
repz
mov
push
cmp
jno
push
ds
into
fwait
push
sub
loope
and
ret
pop
inc
pushf
pop
test
push
jo
aas
loop
mov
or
jno
sbb
mov
fstpt
mov
icebp
arpl
push
push
roll
xchg
pop
ja
mov
ret
scas
jns
cwtl
push
sub
sahf
in
cs
pop
popa
lds
add
mov
repnz
fucomp
inc
push
cmp
cmp
push
add
pop
push
jl
fsubl
pop
lods
cmp
aaa
fimull
inc
out
shrb
idivl
test
repz
dec
stos
adc
mov
lods
and
lods
bound
jg
ficomps
xchg
mov
or
or
je
int
xchg
repz
cmpb
ja
jl
in
push
push
mov
dec
js
shlb
popa
popf
push
leave
roll
mov
xor
mov
mov
push
dec
fdiv
dec
mov
pop
addr16
inc
pop
insl
mov
rcll
js
xor
or
pop
sbb
cltd
xor
es
mov
pop
dec
lahf
in
cmp
outsb
mov
mov
scas
mov
pusha
xchg
fs
int3
roll
mov
ja
dec
rcrb
mov
js
icebp
dec
iret
sub
jl
iret
mov
iret
adc
negb
and
orb
cmp
sahf
sbb
cmp
fisttpll
ret
call
lret
pop
rclb
shll
lods
js
xchg
ret
out
mov
push
pushf
lahf
cltd
or
jne
imul
sti
fimull
pop
in
rorb
int
cmp
xchg
bound
repnz
test
lahf
gs
xchg
mov
int3
cmp
std
jnp
cmp
fnstsw
decl
mov
fs
push
jne
imul
stc
stos
gs
scas
mov
xor
mov
into
jle
clc
adc
pusha
jb
outsb
push
jmp
push
rcl
repz
das
popf
adc
pushf
jg
xchg
and
dec
sbb
cltd
dec
push
push
jecxz
fs
je
dec
movsb
insb
adc
cmp
mov
xor
jmp
xchg
jae
and
inc
dec
loop
outsl
cld
ret
xor
orl
mov
in
fstps
out
insl
inc
leave
bound
inc
add
mov
faddl
push
mov
cli
andb
jmp
jmp
cmp
in
int
sbb
cmpsb
adc
repnz
cltd
test
jb
sub
xchg
fidivs
inc
test
hlt
add
sub
dec
adc
adc
pop
aas
add
pop
push
dec
insl
adcb
mov
and
imul
xor
fdivrl
inc
cmp
pop
repz
ja
lret
push
sub
cmp
test
shll
loop
mov
cmpl
mov
add
mov
dec
xor
mov
and
push
sahf
pop
mov
dec
repnz
adcb
loopne
or
xchg
iret
jb
mov
pop
sub
dec
or
jmp
xchg
mov
sub
js
jb
mov
push
int3
pop
int3
push
in
or
mov
sub
inc
into
nop
bound
fisubl
movsl
xchg
aam
data16
lods
cmpsb
subl
insl
jne
rcrl
cmp
fucomi
fisttpl
icebp
loop
nop
leave
dec
mov
cltd
cltd
push
roll
stos
add
mov
mov
dec
call
dec
fs
psrlw
dec
cmpsl
pop
sbb
adc
clc
aam
mov
mov
sbb
sbb
mov
es
inc
jno
mov
jo
out
xor
lret
movl
push
inc
lahf
scas
das
xor
push
jle
sub
cmpsb
les
ds
jne
aaa
aad
lods
insb
mov
sbb
or
xchg
in
xorb
int3
mov
jns
jl
mov
aas
push
out
pop
lds
push
leave
jge
sbb
dec
mov
mov
dec
stos
xchg
pop
push
sbb
dec
adc
inc
inc
dec
bound
push
test
or
aaa
aas
xlat
mov
outsb
call
mov
and
adc
repnz
jne
out
pop
jecxz
fdivrl
adc
movsl
mov
daa
xor
fidivrs
das
call
add
mov
leave
movsl
mov
mov
mov
lods
test
sub
lods
pop
cmc
inc
and
and
or
int3
aam
jge
clc
mov
outsb
dec
adc
lret
cmpsb
mov
iret
movsl
notb
test
es
xchg
ret
mulb
leave
cmpl
or
adc
es
sub
sbb
jmp
popa
mov
scas
into
stos
aad
dec
jmp
sbb
and
pop
sub
movsl
sbb
adc
dec
dec
cld
ja
stc
sbb
stos
fidivrl
sar
mov
inc
xchg
mov
push
push
xor
and
rclb
das
test
xchg
or
adc
lahf
repnz
pop
xor
sub
xchg
adc
lcall
inc
pop
mov
in
pop
adc
jecxz
mov
mov
roll
andb
fcmovne
rclb
scas
mov
loope
es
cmpsb
cmpsb
inc
and
movsb
ljmp
sbb
mov
xchg
push
xor
shll
push
dec
cmp
xor
pop
cmp
jle
sub
fidivrl
sti
inc
int3
dec
jo
xchg
mov
hlt
xlat
test
fmuls
pop
cmp
movsl
mov
enter
push
xor
cs
inc
addb
push
add
negb
xchg
mov
js
rcr
sbb
lock
jl
inc
sahf
mov
xor
std
test
int
push
out
lods
push
test
ljmp
mov
out
arpl
test
jne
test
iret
out
hlt
cmp
cltd
mov
int3
xor
jne
and
inc
movsl
ja
push
repnz
stc
jmp
and
test
lret
stos
movsl
push
dec
mov
cld
jg
add
out
pop
xor
scas
mov
nop
jle
mov
push
sbb
jp
pop
call
insb
push
cli
in
push
fnsave
outsb
or
lcall
inc
out
or
add
ds
xor
mov
js
xor
daa
sbb
xchg
or
loop
int
inc
lcall
xor
mov
sbb
add
mov
cmpsl
fwait
push
cmp
jbe
pushf
push
jecxz
push
sbb
inc
ja
and
mov
inc
xorl
xor
cmp
mov
sub
xchg
mov
out
jl
mov
int3
cmp
je
pop
stc
xor
cmc
rorb
pop
sub
cmp
inc
inc
js
int
xor
push
sbb
lea
or
or
adc
adc
aad
and
pop
cwtl
loop
cwtl
add
cltd
jmp
mov
scas
mulb
stos
adc
loopne
aam
jmp
shll
js
lcall
and
lock
imul
and
jmp
xor
mov
iret
fstpt
adc
xor
lret
pop
xor
jo
pop
or
loop
inc
adc
mov
dec
jo
jmp
mov
cli
jne
mov
sbb
in
add
mov
mov
pop
push
enter
outsl
cli
adcl
cwtl
push
sbb
adc
daa
fistl
in
cmp
shl
jae
lcall
adc
pop
icebp
icebp
push
daa
push
inc
imul
mov
stos
gs
sbbl
push
inc
movsb
sub
sbb
enter
push
sbbl
sbb
into
cmp
lret
and
adc
mov
sub
repz
mov
push
inc
mov
fmull
enter
fbstp
into
push
jo
add
rolb
lds
inc
stc
sub
mov
mov
mov
inc
pop
push
cs
pop
je
jnp
mov
and
neg
sti
lret
dec
add
les
mov
mov
mov
ljmp
mov
aas
push
jmp
and
shll
movsb
mov
popa
insl
push
lds
ficoms
jmp
insb
xchg
cmc
js
mov
adc
out
fistpl
jl
arpl
xor
test
popf
cld
pop
and
cmp
push
arpl
or
dec
mov
inc
xchg
xchg
les
subb
cwtl
dec
dec
cmp
push
sub
xchg
inc
fwait
add
mov
popf
pop
cmp
cmpb
pop
jp
loope
adc
push
mov
push
imul
or
pop
mov
dec
inc
pop
insl
ds
into
push
jno
xor
dec
cs
push
xor
ss
sahf
cltd
pop
xor
int3
mov
cmc
inc
lret
inc
sti
mov
inc
movsl
mov
nop
sarb
pop
sbb
adc
mov
scas
fsts
insb
mov
mov
mov
inc
rcl
sbb
dec
xchg
sbb
xchg
addr16
lea
and
cmp
mov
clc
sbb
jb
mov
xchg
repz
adc
loopne
mov
sub
test
subl
and
add
add
jo
orl
lcall
push
jae
mov
call
inc
jno
addr16
jns
rclb
sbb
lds
popf
inc
gs
ret
cmp
or
inc
push
jb
push
and
mov
stc
inc
in
xor
mov
sbb
mov
push
sbb
adc
sub
cmp
inc
lods
insl
mov
sti
out
add
sbb
push
xlat
aam
mov
shlb
stos
lods
je
mov
cld
lock
clc
or
jnp
nop
imul
or
jne
sahf
push
mov
icebp
add
push
ret
pop
push
shrb
out
mov
and
test
sub
sbb
aam
cmp
add
fstpl
inc
xor
aaa
mov
add
add
push
xor
jnp
sarb
outsl
adc
jg
jb
jne
ds
or
cld
ljmp
cltd
out
cmp
pop
jg
xchg
fbld
dec
inc
pop
rcll
sbb
add
add
sbb
push
pop
fwait
ds
ret
idiv
dec
dec
sub
testl
xor
insl
fisubl
int
aaa
push
cmpsl
jne
mov
lret
sbb
lret
sahf
insb
mov
enter
jmp
inc
insl
inc
xor
scas
stos
xchg
sbb
cmp
dec
repnz
test
xor
out
sub
jae
dec
lret
pop
and
testl
mov
nop
mov
data16
ds
leave
cmp
mov
or
cmp
imul
pop
sub
out
bound
mov
cmp
loope
pop
lods
mov
sbb
lret
push
pop
lret
dec
sbb
push
call
cmc
aas
test
and
shll
jb
popl
or
jo
xchg
inc
pop
mov
outsb
jno
pop
mov
jno
cwtl
dec
fstpt
cs
pop
add
ss
cmpsb
cmp
xor
push
jecxz
lock
mov
cltd
and
lds
cmp
jns
aas
sub
rcrl
jbe
repz
xorl
fs
push
mov
push
leave
sub
push
out
leave
ret
mov
mov
mov
push
cmp
adc
scas
mov
enter
call
scas
and
or
pop
cmp
jnp
cmp
or
sbb
jecxz
lds
pusha
popf
fisubs
test
mov
outsb
sub
jne
pop
lock
pop
test
push
jl
jmp
fwait
or
mov
cmpsb
daa
test
loope
bound
stos
lods
loop
inc
xor
push
inc
daa
mov
loop
test
dec
mov
fisttpll
push
rolb
addr16
xor
notb
inc
out
xchg
jmp
gs
mov
and
filds
pop
repnz
ss
jae
inc
pushf
push
sahf
pop
sahf
push
sub
repnz
insl
gs
dec
mov
lods
jo
push
pop
mov
push
out
repz
push
mov
inc
or
add
call
mov
add
inc
inc
and
xchg
push
inc
cli
ret
pop
cmp
lods
out
xchg
hlt
pop
pop
insb
sbb
in
adc
adc
lds
insb
fwait
cmpb
adc
mov
loopne
jae
xor
iret
mov
sub
mov
push
xchg
fdivrp
xchg
xchg
xor
or
insb
je
jp
lgs
and
mov
and
pop
dec
dec
push
pop
loopne
out
xchg
inc
and
adc
fbld
cltd
or
mov
inc
mov
jl
pushf
mov
and
repz
xchg
sti
cwtl
lea
add
inc
leave
je
nop
fbstp
mov
sbb
sub
aad
jmp
lret
sbb
out
inc
fldl
xor
or
and
adc
add
xlat
stos
ljmp
jmp
neg
js
fwait
orb
fs
mov
push
mov
outsb
jne
pop
jle
out
js
jnp
push
sbb
cmpsl
jo
das
sbbl
stos
mov
mov
pop
stos
push
inc
add
sbb
add
cmp
xchg
or
xchg
ret
sbb
out
cltd
push
das
xchg
pop
adc
jge
lock
out
push
mov
leave
in
inc
jg
jno
push
js
out
shll
and
les
and
xchg
xchg
xor
or
fdivp
push
rorl
and
ror
mov
inc
pop
xchg
inc
xor
xlat
movsb
adc
in
or
aad
sahf
pop
out
popf
hlt
add
lds
mov
or
test
test
inc
sbb
inc
fwait
xor
fildll
aad
movsb
repz
inc
faddl
lods
mov
inc
lcall
dec
lcall
xchg
sti
mov
int3
push
repz
pop
cmpsb
pop
arpl
loopne
les
out
aad
pusha
sbb
pop
inc
clc
dec
enter
or
cmpl
mov
mov
repnz
jmp
inc
pop
and
lock
ret
push
push
dec
pop
jae
pushf
gs
mov
mov
xor
xor
mov
test
adc
add
mov
mov
out
jne
movsb
outsl
xchg
out
dec
inc
out
lcall
insb
call
dec
xor
fcompl
jp
loopne
xchg
outsb
mov
lds
loopne
and
inc
pop
dec
daa
adc
into
xlat
data16
jecxz
addr16
xor
insl
ret
pop
xchg
test
fsubrl
cmc
jo
mov
pushf
mov
pop
adc
stos
sahf
cltd
ja
loop
bound
pop
lcall
je
push
add
xlat
aam
popa
and
scas
mov
adc
aas
in
add
adc
fistpl
fnstenv
adc
sub
stos
jge
add
pushf
repz
and
test
pop
lea
lea
in
mov
mov
aam
call
lcall
push
mov
ror
ja
push
cld
jl
outsb
sbb
xor
leave
mov
xor
push
in
sub
jle
xchg
repz
cmp
fbld
cmp
and
cmpsl
mov
fidivrl
ja
js
push
dec
test
sbbb
push
cmp
pop
push
inc
inc
aas
ss
cltd
out
out
inc
bound
lds
and
xchg
in
xor
scas
mov
inc
lds
cmp
lcall
imul
aad
int
jno
das
negb
es
dec
es
adc
in
in
jg
pushf
es
jmp
mov
cmp
push
jae
fwait
pushf
adc
pop
cmp
cmc
sbb
stos
add
divl
mov
paddq
nop
cwtl
ja
pop
inc
mov
mov
mov
jb
xchg
iret
rcl
arpl
or
jae
lods
adc
adc
mov
pop
ficompl
inc
jle
mov
je
push
xor
or
or
in
pop
or
lret
cmp
inc
int3
adcb
pop
cmpsb
cmc
rorb
xchg
fdivrl
xlat
cmp
iret
int3
cmp
sbb
es
movsb
xchg
mov
loope
outsb
into
pop
loop
dec
sahf
push
cmpsl
ds
jp
cs
lret
cmc
mov
sarl
test
fbstp
fldcw
fstps
leave
adcl
xor
les
mov
or
aaa
lahf
xlat
xchg
negb
popf
xchg
xor
xor
xchg
inc
dec
aam
jne
lock
scas
sub
mov
inc
cli
add
clc
into
pop
in
push
sar
out
mov
test
mov
stc
out
jnp
xchg
pushf
test
jo
repnz
pop
in
ret
out
push
mov
loopne
vpacksswb
lahf
imul
lock
mov
out
in
adc
mov
fwait
loop
mov
out
ja
mov
cwtl
inc
jne
dec
mov
je
icebp
push
dec
jae
xor
mov
xor
pop
repnz
mov
daa
test
pop
pop
mov
pop
push
and
lds
rorl
pusha
cmp
pop
in
push
gs
jle
movb
mov
sub
fistps
pop
adc
negb
fstpt
jbe
les
or
push
test
sub
adc
movsl
lcall
rclb
or
aas
or
pushf
lods
int
fucom
dec
pop
pusha
into
cwtl
pop
lahf
add
les
cmp
mov
ds
fmuls
insl
clc
addr16
frstor
popf
test
adc
xchg
jl
sbb
cmp
sub
pop
push
scas
fdivr
cmp
or
movsb
popf
data16
mov
sub
xchg
pop
stos
xor
popa
aad
cmp
neg
cmpl
xchg
jmp
push
jg
xor
push
aam
movsb
dec
adc
push
adc
scas
mov
sub
mov
push
sbb
sub
sti
pop
mov
scas
ds
std
push
inc
test
push
push
push
adc
fwait
movsb
pop
pop
outsl
mov
add
ja
cmpl
add
imul
add
sub
arpl
out
cmp
mov
fistpl
add
inc
fwait
rcrl
js
lock
or
push
push
jae
jb
inc
fwait
inc
push
hlt
ror
das
xchg
cld
sbb
pop
push
pop
mov
cmp
retw
and
imul
pop
mov
lods
imul
add
mov
aaa
inc
lock
mov
xchg
sarb
cmp
outsb
sub
jae
sarl
and
rolb
insl
mov
ret
bnd
fcmovbe
or
je
scas
js
ja
cmp
shr
inc
and
rcrl
adc
mov
shrl
push
lret
repnz
dec
mov
xlat
jnp
popa
or
loopne
or
xor
fwait
cmpsb
sub
jl
jnp
bound
inc
dec
addr16
mov
js
cmp
xor
pop
dec
pop
jp
add
out
cmp
dec
out
cs
xchg
fiadds
jmp
xor
test
popa
scas
je
jne
sub
mov
jb
mov
ss
fdivrl
popf
and
lcall
xor
inc
imul
fucomi
outsl
add
or
data16
adc
mov
inc
test
or
add
fisttps
les
cmp
popf
fwait
sub
mov
aad
inc
lret
mov
sub
iret
rcrl
sub
cmp
mov
imul
inc
adc
dec
pop
pop
aaa
mov
xor
es
mov
xchg
cmp
dec
add
push
int
std
mov
add
dec
fsubp
loop
cwtl
pop
int
cmp
sbb
insb
mov
int3
enter
outsl
xorb
push
fadd
push
shl
or
rolb
int3
mov
pop
ja
repz
ret
push
and
or
movsl
rclb
or
push
adc
jmp
arpl
sbb
or
stos
jg
jns
mov
fisttpl
cs
cwtl
inc
push
addr16
cli
push
in
shrl
mov
hlt
dec
ljmp
xor
pop
cmp
mov
fmuls
dec
jl
inc
add
sbb
rolb
popf
mov
dec
ret
pop
cmpsb
aaa
rcll
repz
dec
aas
repnz
or
cmp
subb
jmp
inc
dec
vmwrite
mov
cwtl
add
xlat
fiaddl
push
in
sub
loop
or
xor
mov
loope
cmp
cwtl
bound
push
rcrb
add
js
pusha
outsl
mov
sub
inc
shll
and
imull
sub
call
ss
rol
repnz
aas
and
jns
insb
in
loopne
lods
fs
in
mov
mov
push
test
mov
push
mov
mov
sub
dec
ficoml
fcmovu
jo
pusha
dec
dec
lods
aam
xchg
inc
jg
fwait
scas
mov
push
sub
push
dec
movsb
pop
repz
dec
mov
sub
jge
and
addr16
loope
jne
dec
xor
inc
jbe
mov
ds
in
sbb
cmp
or
mov
out
test
cmc
pushf
shll
dec
imul
inc
mov
fcomip
fiadds
repnz
loop
insl
lcall
insl
jl
les
mov
and
out
inc
stos
add
jmp
rcll
and
outsb
pop
lcall
inc
imul
sti
cmp
int
hlt
mov
add
pop
ret
dec
xor
xchg
inc
push
or
out
stos
testl
cmp
jae
xlat
jnp
jmp
daa
or
stos
xor
cltd
arpl
call
mov
orb
jnp
mov
inc
cltd
out
jo
dec
push
and
inc
mov
lds
int
out
outsl
dec
in
ds
aaa
enter
mov
push
or
xor
gs
xchg
je
fdivl
xchg
orb
xor
pop
lret
lret
and
sbb
pop
in
aas
add
js
cmpl
stos
xor
sub
jl
mov
mov
mov
jne
popa
cmp
cmp
xor
mov
push
sbb
pop
and
cs
mov
icebp
pop
xlat
cmpsb
int3
xchg
dec
mov
fcmovnu
mov
sarl
inc
push
icebp
fucomp
or
movsl
pop
push
and
movsl
call
inc
rolb
sahf
mov
dec
daa
fs
mov
rclb
or
stos
add
xchg
add
mov
stc
push
jecxz
or
gs
cmpsb
cmp
xor
xchg
out
cli
sbb
cmpsl
inc
fiadds
fwait
dec
jne
dec
xor
fs
and
scas
push
lret
xchg
jmp
cmpsl
pushf
pop
or
or
cmp
pop
mov
pop
xor
rorl
movsb
pop
mov
fscale
outsb
mov
ljmp
push
stos
rcl
mov
dec
insl
sub
rcll
or
adc
cmc
mov
pop
mov
imull
mov
push
lods
push
pop
sti
popf
ret
sub
outsl
test
push
ss
or
jmp
add
loop
rorl
inc
xchg
and
movswl
pop
test
mov
sbbb
les
lret
pushf
rclb
mov
mov
std
roll
in
stc
jns
inc
xchg
push
pop
push
pop
and
mov
dec
sub
flds
ret
mov
test
cmp
iret
xchg
loope
mov
mov
xor
jbe
in
inc
imul
inc
leave
pop
lods
out
loopne
std
test
or
repnz
xor
mov
dec
adc
dec
cmp
dec
cmp
sub
mov
jl
jno
mov
xchg
adc
sahf
and
bound
mov
enter
push
adc
out
clc
popf
mov
jo
mov
sub
lds
mov
fcmove
jg
jl
dec
mov
push
hlt
lods
nop
mov
out
fs
shll
into
mov
push
mov
mov
xor
mov
cltd
and
push
orl
push
cmpsl
push
jecxz
std
scas
cmp
cmp
loope
lock
xor
and
es
dec
cmpsb
fcomps
jecxz
xchg
daa
jmp
or
inc
xor
aad
mov
push
je
in
cld
mov
stc
jle
daa
stc
aas
rcrl
mov
sbb
add
push
repnz
xlat
lock
stc
repz
mov
pop
push
xor
mov
jg
rclb
sub
jmp
sub
jp
leave
pop
leave
xchg
xor
and
das
cmpsb
orl
incb
andb
mov
lcall
push
inc
aad
push
in
mov
out
push
gs
xlat
push
cwtl
and
fildl
xchg
decl
mov
inc
push
xchg
jo
and
insb
mov
pop
sbb
lcall
xchg
adc
mov
les
hlt
loop
addb
lock
aam
bnd
dec
ror
add
lds
insb
xchg
sbb
sub
mov
mov
stc
daa
cmpsl
and
and
nop
mov
inc
xor
sub
movsl
mov
ret
mov
sub
into
mov
pop
mov
and
rorl
loop
mov
arpl
test
xchg
movsb
arpl
mov
iret
loop
imul
call
xchg
xchg
std
stos
cmp
sahf
push
mov
mov
add
mov
pop
mov
mov
push
cmp
xlat
jne
xchg
aam
add
andl
push
ret
mov
xchg
insl
aad
fldpi
rol
cmp
hlt
test
or
xchg
push
mov
lea
int3
aas
sbb
cltd
pushf
in
xor
dec
in
sbb
leave
clc
ss
js
cli
sbb
xchg
push
lock
push
sbb
mov
and
stc
insb
and
fldcw
stos
xchg
lret
dec
sahf
pop
mov
xchg
push
mov
sbb
out
pushf
xchg
sbb
lret
pop
and
ja
nop
jmp
out
inc
fnstenv
adcb
ljmp
mov
sbb
mov
or
nop
push
shrl
mov
repz
push
fistl
sub
cmp
adc
dec
mov
push
gs
std
mov
in
push
mov
stos
jno
or
enter
add
xor
sub
out
and
ret
fidivs
cmp
std
cmp
mov
sub
stos
adc
pop
push
test
fsts
mov
pop
mov
ljmp
imul
mov
les
ret
mov
inc
sbb
or
adc
push
std
xchg
sub
xor
xor
sub
movsl
pop
xchg
fwait
dec
sarl
mov
lods
lods
pop
les
out
adc
loope
shr
xor
addb
data16
es
mov
dec
sar
das
movhps
or
es
hlt
in
imul
xor
xlat
in
pop
lods
and
push
mov
cmp
cld
jge
or
jns
jp
push
fwait
nop
rcrl
mov
mov
ja
mov
leave
pop
out
pop
push
pop
imul
push
cmp
in
sbb
mov
xchg
in
dec
pop
jge
jle
pop
fdivrs
sahf
ret
test
xchg
mov
stos
jecxz
xchg
inc
pusha
inc
in
gs
test
cmp
mov
xor
loopne
pop
nop
add
mov
icebp
imul
and
or
jb
ret
inc
data16
int
inc
addb
xor
mov
fmuls
jp
addr16
fcomi
arpl
sub
and
call
mov
xchg
sub
lret
stc
inc
hlt
cmpl
lds
mov
mov
push
dec
outsb
cltd
insl
cli
sbb
fidivrs
out
mov
or
push
inc
xorb
xchg
or
dec
adc
les
movl
jle
xchg
lret
mov
add
mov
insb
test
inc
pop
dec
int3
and
mov
bound
decb
push
mov
mov
jne
sarb
outsl
clc
sub
in
cmp
leave
shrd
sbb
loop
sti
mov
mov
popf
xor
adc
xor
push
filds
scas
rorb
push
pop
cmp
arpl
fistps
dec
negb
dec
and
andb
mov
sub
or
dec
imul
insl
ss
out
iret
cmp
mov
test
out
pop
inc
cmp
cld
sbb
loop
adc
jne
andb
bound
sarb
out
ljmp
adc
jmp
int3
mov
insb
iret
fidivrs
or
fwait
cmp
pop
or
dec
repz
add
jae
xchg
or
cmp
fnstcw
lock
cmp
mov
add
adc
rorb
movsl
scas
iret
inc
inc
dec
imul
jae
lock
leave
rcll
adc
jne
aad
inc
push
sub
add
mov
mov
les
sub
scas
xor
fisubl
iret
aaa
and
dec
call
rcrl
xchg
pop
add
ror
test
xorl
mov
mov
or
icebp
adc
fs
mov
jnp
test
stos
lret
xor
pop
jns
xchg
mov
push
jb
in
fs
iret
pop
inc
repz
int
addr16
sub
shlb
sbbb
or
sahf
clc
shlb
je
into
stos
mov
dec
addr16
jg
pop
inc
pop
xchg
fbld
push
or
mov
lcall
jecxz
mov
add
test
sub
pop
sub
out
cltd
cs
adc
test
test
popa
insl
repz
xor
cmp
jne
mov
and
and
iret
stc
push
jne
jb
mov
add
cmp
imul
out
outsb
mov
lcall
pop
add
in
pop
lcall
mov
dec
pop
inc
sub
sub
jno
test
inc
pop
mov
in
ds
cmpsl
pop
imul
dec
dec
push
test
pop
xchg
or
mov
jecxz
jne
daa
test
pop
out
test
lock
mov
and
jb
jbe
adc
sub
pop
test
mov
ss
add
mov
gs
sbb
and
jle
push
lcall
inc
fdivrl
int
out
pushf
std
es
push
jge
popf
lret
leave
pop
push
repz
jmp
push
in
jmp
popf
icebp
out
mov
mov
push
les
aad
inc
or
arpl
repz
cmpsb
pushf
add
std
scas
jae
insl
pop
adc
and
or
mov
pop
inc
jle
adc
mov
mov
and
xchg
fdiv
push
jecxz
loopne
or
mov
cmc
scas
dec
push
lahf
jl
ret
aam
mov
mov
out
sub
xchg
or
mov
hlt
fisttps
adc
pop
add
push
jnp
xor
jnp
aaa
mov
shll
js
cmp
in
lds
test
adc
jmp
push
push
testl
out
aas
imul
add
pop
orl
push
push
std
stos
lcall
cwtl
jmp
mov
dec
flds
xor
not
pusha
mov
cltd
xor
cmp
mov
stc
add
adc
addr16
cmp
adc
mov
cltd
inc
shl
fldt
mov
push
or
fists
pop
xor
adc
stc
inc
js
jno
cltd
add
push
idivl
das
js
sbb
xchg
mov
inc
je
push
fstl
mov
sarb
cwtl
dec
shll
xchg
or
pusha
nop
jmp
sahf
sahf
loop
push
pop
sbb
addr16
mov
sub
xchg
inc
aad
aam
loope
pop
xor
xor
jne,pn
je
xchg
xor
add
js
gs
jecxz
mov
dec
js
jbe
aaa
ja
inc
inc
enter
xchg
sub
sbb
xor
ds
jae
es
out
in
or
shll
clc
scas
sbb
adcl
push
pop
sub
sbb
inc
frstor
xor
leave
inc
xchg
dec
sbb
fcmovb
ret
mov
jg
mov
fcoms
test
inc
mov
jge
popa
daa
inc
je
inc
cmp
out
adc
xor
daa
in
pushf
adc
rcrl
hlt
pushf
mov
mov
mov
in
jecxz
leave
pop
mov
inc
fdiv
dec
ds
test
mov
inc
pop
idivl
adc
push
xchg
addr16
jnp
add
hlt
mov
mov
iret
pop
push
push
adc
mov
mov
scas
lea
pop
ffree
dec
inc
imul
cli
and
push
and
bound
cmpsb
jecxz
inc
lret
xlat
shr
jbe
ja
rorl
pop
out
inc
cmp
mov
push
and
sub
add
mov
cmc
dec
push
mov
adc
lds
aaa
loope
and
inc
idivb
mov
adc
xchg
jecxz
lret
ret
je
inc
or
scas
pop
push
addl
jge
ljmp
aaa
add
es
addb
mov
dec
sti
mov
andb
js
add
outsb
pop
outsl
xor
xor
cmp
das
xchg
add
inc
fsubrl
fdivs
or
or
mov
xchg
cmpb
jo
push
add
sub
inc
and
xorl
loopne
loop
mov
and
test
hlt
stc
pop
push
xor
daa
stos
dec
cmp
xchg
call
nop
test
inc
movsl
sub
jge
movb
jle
test
lds
popa
clc
mov
dec
cwtl
stc
lods
jno
sarl
cwtl
or
add
cmpsl
fidivrl
cld
fld1
lcall
xchg
push
dec
xor
in
es
push
aaa
scas
pusha
aad
or
notb
push
mov
cmc
sub
cmp
inc
aaa
mov
mov
or
add
imul
xchg
cmp
push
mov
lds
mov
push
xchg
mov
das
test
js
out
jle
xchg
fnsave
aam
popa
inc
add
cmp
and
test
das
jns
sub
sub
inc
adc
jns
cmp
or
xchg
push
sbb
jbe
das
dec
ljmp
sbb
out
andl
xchg
lcall
xor
xchg
int3
cmpsb
nop
mov
cli
stos
mov
xor
mov
inc
jns
sbb
mov
mov
cmp
xchg
inc
shlb
std
rorb
dec
push
pop
fstpt
mov
sbb
and
mov
out
jne
es
adc
xor
js
sub
lea
daa
sbb
jecxz
scas
hlt
imul
das
or
in
cmp
imul
dec
cmp
in
sahf
call
mov
lahf
or
xlat
push
nop
inc
addr16
es
mov
loope
sti
hlt
stos
cmp
or
adc
hlt
lock
scas
inc
and
pushf
mov
jo
or
and
inc
rcl
xchg
rcrl
test
jno
mov
cwtl
dec
add
popa
lahf
lcall
je
pop
jle
orl
popa
in
out
push
repnz
gs
push
sbb
mov
jae
addl
stos
pusha
add
push
or
or
jle
es
in
xchg
xchg
mov
push
popf
movsb
push
sbb
ljmp
sub
arpl
mov
ret
aas
cmpsb
push
jle
addr16
fs
and
add
ret
in
mov
adc
mov
xchg
mov
enter
pop
sub
repnz
mov
pop
push
outsb
cld
daa
rolb
ja
int3
ljmp
inc
aad
add
bound
mov
jmp
push
and
sub
addr16
pop
shr
fs
add
js
xchg
cmpsb
mov
outsb
int3
add
nop
inc
inc
incl
push
call
mov
mov
add
imul
clc
xor
gs
push
mov
popf
xor
push
jecxz
dec
mov
test
add
lret
xchg
mov
mov
cld
in
je
fisttpl
and
push
xor
xchg
aas
ffree
pop
inc
jl
mov
add
stc
jl
and
ljmp
pusha
stos
pushf
fdivs
cmpsl
cmp
movsb
stos
sahf
pop
xor
adc
lret
dec
xchg
movsb
lock
scas
out
sbb
outsb
xor
xchg
mov
aaa
rolb
cmpb
inc
cmpb
hlt
ret
fdivrl
sub
jl
push
xor
orb
clc
xchg
adc
pop
xor
cli
mov
shlb
cmp
js
pop
xor
adc
mov
push
inc
loopne
int
or
dec
sti
jae
scas
outsb
inc
out
arpl
mov
xchg
xor
jno
adc
out
lods
and
lahf
mov
push
jecxz
sub
or
fdivrp
dec
or
sbb
mov
mov
sub
scas
lcall
cmc
arpl
cltd
and
cs
insl
mov
lods
sahf
push
das
roll
fwait
or
insl
out
mov
xchg
add
sbb
jmp
add
adc
fldt
filds
stc
pop
add
hlt
out
scas
pop
cmovg
adc
cld
scas
fadds
inc
ret
dec
sti
push
pop
addr16
inc
mov
pop
cmp
and
add
sub
repz
inc
mov
push
aam
std
jae
dec
call
sbb
mov
fcompl
sub
ja
leave
mov
add
lods
add
incb
jl
mov
fadds
add
push
and
aas
jbe
popa
sub
add
and
pop
add
mov
and
jl
mov
cs
xor
mov
push
xor
cmpsl
filds
cmc
imul
fisubrs
cmp
xor
aaa
dec
jp
mull
mov
lcall
pop
push
pop
push
jb
push
xchg
in
ret
movsb
sbb
cmpsl
test
and
hlt
in
sub
outsb
mov
aam
std
fidivrs
sub
or
outsb
stc
call
clc
mov
sub
add
in
sub
addb
jae
ficomps
pop
jbe
xor
mov
aas
cmp
lahf
into
push
cmp
sbb
push
sub
enter
cmp
gs
addr16
sbb
stos
in
push
sub
mov
push
sbb
cmpsl
mov
jns
out
nop
pop
inc
xchg
rcrb
mov
bound
inc
das
xchg
sbb
test
imul
in
cmc
imul
aaa
lahf
dec
pop
subb
xor
imul
and
in
inc
sub
test
mov
outsb
inc
inc
loope
sub
filds
xor
xchg
fnstsw
jge
jge
iret
sub
mov
xor
movsb
add
mov
insl
lretw
jne
pop
sub
mov
movsl
cmp
out
scas
int
pop
mov
add
test
jno
dec
sbb
shr
outsb
and
cld
cmpl
ja
jl
push
aam
xchg
mov
add
inc
pop
stos
lret
xor
mov
cltd
pop
sub
incl
lret
pushw
cld
daa
xor
xor
fistl
out
fisubl
jecxz
je
sahf
shr
adc
push
out
push
fidivrl
mov
xchg
rorl
xchg
or
sub
xchg
fwait
mov
jns
xchg
int
stos
loopne
sarl
stc
inc
repz
xchg
out
cmpsl
decb
or
xrelease
out
dec
cwtl
jge
insl
dec
hlt
arpl
pop
insl
insb
sub
inc
stos
inc
inc
lcall
adc
rorl
lea
sbbb
jbe
mov
fidivrl
test
pop
cs
cli
insb
rorb
and
cmp
xchg
mov
imul
mov
jae
repnz
mov
fcoms
xor
imul
pop
push
dec
sub
in
cltd
xchg
xor
xor
jns
and
xchg
pushf
fcomi
mov
push
ss
inc
fists
into
sub
int
mov
repnz
inc
shlb
and
sti
dec
mov
ret
popa
outsb
xlat
pop
xchg
in
adc
adc
arpl
sub
adc
jae
test
fnstenv
sbb
movsb
pop
dec
pop
scas
lds
cmc
enter
in
out
aaa
lock
jo
out
xor
mov
aaa
xchg
hlt
cmc
push
jecxz
fwait
cmpb
shl
mov
add
je
scas
rolb
int3
and
jnp
sbb
cmp
mov
xor
mov
mov
sarb
or
lods
sbb
mov
into
stos
movsl
je
mov
jno
aad
fs
add
cmpsl
and
push
pop
inc
rolb
push
das
ret
jg
adc
cmpsl
pusha
mov
push
fxtract
mov
push
push
lock
test
cli
cmp
jnp
rcl
cmp
adc
ds
aas
sbb
mov
test
scas
lahf
mov
in
add
jp
jle
push
leave
test
outsl
sbb
sub
inc
mov
into
push
push
jbe
es
push
pop
and
sub
jge
mov
add
cmp
mov
sub
data16
int3
sbb
jo
outsb
pop
mov
xchg
push
xor
push
mov
xchg
ss
cmpsl
jbe
icebp
loope
mov
lods
repnz
sbb
in
push
jns
adcb
pop
sahf
jecxz
mov
xor
and
jecxz
mov
push
out
add
data16
lret
xor
scas
aam
test
lea
and
lret
int3
out
mov
mov
sti
andl
mov
mov
or
outsb
dec
test
mov
sub
xchg
lods
jecxz
mov
fcompl
mov
in
enter
daa
pop
push
fwait
icebp
repnz
popf
sub
call
pop
push
fwait
xchg
add
ljmp
push
push
lds
pop
lret
inc
mov
cmp
dec
aam
std
sub
out
pop
mov
in
mov
ss
data16
dec
adc
mov
pop
scas
dec
jmp
fdivr
ret
pop
jnp
lods
mov
sarb
adc
mov
pushf
adc
push
jp
repnz
jne
shr
lds
int
add
sub
pop
into
push
jg
mov
cmp
hlt
out
aad
fisttpll
cmp
and
icebp
inc
add
mov
add
mov
mov
push
mov
inc
dec
stos
jmp
bound
fwait
cmp
in
mov
xor
or
sbb
lea
push
scas
and
jnp
cltd
xor
mov
pop
sub
dec
adc
loop
dec
repz
cmp
lea
pop
jno
xchg
sub
jbe
test
test
std
push
jns
mov
mov
sbb
or
shl
and
mov
repnz
jmp
daa
not
fcomps
shll
bound
xor
adc
jge
inc
jb
fbld
push
sbb
sbb
cwtl
rorb
jg
into
mov
xchg
aam
inc
sarl
popf
je
inc
stc
subl
jle
dec
cmp
mov
inc
pushf
cli
adc
push
pop
lds
cmpsl
loopne
repnz
leave
sub
unpckhps
imul
jae
xchg
cmp
aas
sbb
out
lret
sbbl
xchg
or
or
mov
loop
pop
cmp
and
lret
in
mov
outsl
sbb
xor
dec
push
sub
mov
flds
and
sbb
shlb
jns
and
push
xor
cli
outsb
pop
cli
cli
or
repz
std
insl
jb
insl
cmp
jbe
jnp
dec
dec
adc
cmpl
lods
jp
fildl
lret
mov
test
xor
stos
xor
mov
aaa
or
sbb
cmp
enter
ficomps
adc
add
xchg
cmpsb
shl
jl
cld
leave
add
inc
sbb
gs
mov
fistpll
sar
fcomps
call
add
popa
sti
or
test
pop
arpl
std
neg
aad
jae
aas
test
xor
add
cmpsl
sub
lahf
mov
dec
mov
daa
pop
arpl
arpl
or
and
rcrl
hlt
cmp
nop
xor
std
int3
iret
rcll
movsb
icebp
repnz
out
jl
ja
out
pop
xor
dec
xchg
jno
movb
test
in
sbb
lret
jecxz
int
push
clc
cmpsb
and
daa
xor
aam
mov
or
xchg
push
mov
pop
inc
ficompl
jns
imul
sub
test
mov
mov
dec
push
out
fnstsw
cmpsl
loop
fimull
pop
push
cmc
xchg
movsb
or
fisubrl
sub
popa
jmp
es
enter
mov
xor
and
fldenv
add
jae
mov
popl
out
movsl
les
int
jnp
cmpsl
sarb
test
pop
stos
jmp
jmp
and
inc
pushf
mov
leave
inc
arpl
add
inc
fisttpll
cmp
mov
sbb
mov
mov
test
shll
int3
test
icebp
daa
sub
push
lods
call
movsb
add
hlt
or
sahf
mov
ret
pop
dec
mov
xor
and
dec
pop
popa
push
inc
imul
lcall
pop
repnz
xchg
mov
push
xorl
fdivrp
das
cmp
clc
xchg
cmp
and
je
xor
ja
xchg
mulb
sbb
stc
jbe
jns
xchg
movsl
js
maskmovq
testl
sub
push
lret
and
inc
shll
dec
xor
das
add
pop
pop
inc
adc
push
shll
std
mov
scas
sbb
fwait
hlt
sbb
mov
and
je
repnz
lods
hlt
cmp
daa
xchg
jnp
xchg
cmc
mov
push
rcrb
loopne
push
cli
je
fsubrs
in
push
xchg
jno
sbb
repnz
in
bound
add
into
out
add
adc
inc
lock
add
shl
and
shrb
lret
mov
imul
hlt
ss
push
mov
lods
inc
push
cmpsl
gs
adc
popf
cmp
xchg
jne
xchg
out
jns
cmc
mov
mov
jbe
cmp
pop
fldl
mov
mov
ljmp
ja
sbb
je
sbb
push
cmpsl
cld
push
or
clc
sbb
hlt
test
cwtl
sbb
inc
xor
xchg
insb
out
xor
fisubrl
sbbb
xor
test
xor
sbb
in
push
jg
cmp
out
shll
dec
push
ficoml
fwait
cli
pop
fucomp
mov
or
hlt
addr16
or
testl
cs
test
jecxz
push
and
mov
mov
out
shr
rolb
cmpsb
daa
mov
icebp
inc
int3
js
sbb
or
pop
and
je
fs
inc
cmovns
xor
bnd
sbb
mov
xchg
cmc
jne
sbb
or
adc
rclb
jnp
or
adc
mov
add
in
mulb
mov
inc
sbb
jnp
insl
pop
xchg
loope
pop
cli
jp
xlat
cmpsb
into
and
shll
cltd
mov
pushf
push
or
js
inc
loop
hlt
fsubrs
aas
cmp
push
arpl
push
xchg
hlt
inc
mov
pushf
mov
sub
jmp
sahf
decl
adc
inc
cli
dec
push
pop
movsl
cltd
or
adc
negb
dec
aaa
xlat
fildll
push
into
sub
into
xchg
imul
aam
stos
ret
pop
aam
mov
inc
lret
push
gs
and
jae
frstor
sbb
sarb
fs
clc
imul
lds
xchg
mov
aam
add
sub
js
lea
mov
popa
out
mov
cmp
mov
loopne
xchg
es
nop
das
jle
rorl
xchg
sbb
jae
lods
lcall
out
lds
mov
notl
call
cmp
mov
sub
es
scas
movsl
scas
int
lods
inc
and
or
pop
or
jmp
fmuls
icebp
test
mov
insb
mov
out
loope
incb
shll
insb
lcall
stc
xor
popf
or
stc
sub
sub
pushf
sub
adc
jnp
addb
ds
bswap
cmp
sbb
bound
leave
xchg
pop
sub
ret
cmp
in
jbe
mov
and
or
and
jne
clc
sub
sar
mov
xchg
jbe
cmp
or
iret
and
push
jmp
mov
lock
mov
rcrb
in
imul
cmp
out
in
inc
jle
or
movsl
sub
jmp
ficoms
daa
mov
and
mov
inc
sbb
add
out
add
loopne
jno
push
pushf
mov
push
sbb
push
mov
push
push
pop
rcll
pop
cwtl
popa
mov
pushf
fistps
icebp
xor
push
jle
jns
cmp
inc
faddp
pop
fmul
rcrl
cmp
imulb
arpl
xchg
mov
mov
or
inc
nop
mov
nop
outsl
std
int3
pop
add
jg
clc
cmc
push
xor
mov
data16
lods
enter
mov
fbld
cltd
mov
mov
jo
sbb
xlat
shrl
lds
cmp
lea
shlb
fsub
xor
imul
in
mov
jbe
add
and
cli
in
lret
je
out
cmp
cli
xorb
fwait
je
push
dec
or
and
aas
icebp
int3
ss
xchg
inc
sahf
cmp
xchg
lds
dec
cmc
xor
sub
jecxz
jl
mov
pop
repz
mov
ds
test
mov
inc
shrb
in
jle
hlt
pop
fldt
cmp
icebp
in
xor
std
andl
and
lret
pop
or
push
pop
enter
cwtl
mov
sbb
mov
mov
loopne
les
mov
movsb
into
sbb
dec
out
ss
push
inc
mov
sub
fisubl
scas
lcall
mov
int3
dec
sub
pop
add
mov
movsl
mov
xor
mov
mov
and
add
rol
jns
and
in
lea
jnp
lcall
mov
mov
mov
fcomps
dec
mov
in
arpl
mov
pop
dec
pop
lret
jnp
push
bnd
sbb
in
in
dec
repz
and
cmp
jle
push
stos
push
pushf
cmpsb
das
cld
dec
ret
ffree
call
pusha
sbb
or
mov
stc
shll
mov
je
jmp
cmp
in
mov
mov
push
loope
jle
lods
cbtw
jle
fnstenv
xchg
rorl
movsl
pop
push
sbb
icebp
enter
in
xchg
mov
adc
mov
aaa
or
xchg
add
sbb
or
test
add
sub
fistl
jae
in
cmp
popa
fwait
sbb
outsb
push
fsubr
inc
pop
sbb
stc
sub
mov
in
insl
mov
xor
lods
jae
rcrl
roll
popa
lret
cmp
inc
push
sbb
ljmp
mov
shr
es
out
cmpsb
sahf
dec
shlb
out
addl
mov
fisttpll
and
outsl
mulb
jnp
insl
mov
aaa
test
jg
dec
iret
cmp
push
mov
clc
movsl
int
and
adc
hlt
dec
mov
iret
mov
xlat
xchg
decl
clc
and
scas
out
and
sub
cmc
fdivrs
clc
repnz
in
insl
push
test
mov
and
adc
popa
mov
mov
outsl
jbe
nop
mov
xchg
pushf
inc
inc
pop
fwait
loope
push
repnz
fidivrl
hlt
nop
pop
leave
dec
lret
mov
xchg
or
pop
test
aam
test
dec
in
pop
xchg
into
mov
jne
cmp
lcall
push
or
sarl
shl
push
dec
mov
lret
mov
daa
outsb
mov
jno
push
xor
xlat
xor
cli
cli
cmp
mov
lcall
cmpsb
cmp
clc
mov
cld
or
push
arpl
sub
daa
jp
enter
fs
pushf
loop
sub
push
fsubs
jne
insb
push
pop
shlb
adc
and
mov
cmp
in
dec
sbb
imul
sti
insl
aad
push
notb
add
sbb
mov
sub
mov
jmp
sbbb
mov
fwait
cmpsb
mov
addb
push
in
mov
add
mov
aas
mov
into
pop
lds
jecxz
add
mov
and
xor
test
mov
xchg
ret
nop
test
push
push
aaa
xor
mov
mov
stc
movb
in
test
mov
adc
cmp
ficomps
repnz
push
sbb
jae
add
les
lret
mov
rorb
sbb
push
mov
mov
movsb
popf
js
push
leave
xor
fdivrl
out
es
or
mov
inc
dec
mov
xchg
jbe
nop
fcomps
pop
scas
push
push
cmp
and
sbb
and
mov
mov
lcall
fadds
adc
sti
jmp
xchg
xchg
mov
sub
outsb
mov
inc
lods
ljmpw
repnz
add
rol
jmp
mov
pop
xchg
loopne
xchg
arpl
jp
inc
adc
mov
fwait
shlb
sub
aam
add
mov
shrl
leave
lea
sarb
testb
inc
jae
movsl
cmp
pop
test
movsl
fwait
lcall
in
mov
outsl
push
xor
cs
into
mov
push
shlb
outsb
push
adc
or
sub
out
lods
and
mov
ljmp
loop
xor
xor
shrl
cmpsb
ja
mov
cld
xchg
mov
les
flds
repz
adc
add
or
jns
or
mov
cmp
roll
and
leave
adc
lea
cmpsb
dec
jp
sbb
mov
add
rclb
cmp
push
dec
jge
fdivs
outsb
jb
repz
cmp
fcomi
or
sub
jb
data16
cmc
dec
hlt
in
out
sbb
mov
or
mov
pop
test
aad
lea
ss
sbb
cmpsb
pop
clc
push
rorb
movsl
or
out
and
lahf
cmp
mov
mov
hlt
cltd
outsl
lret
add
push
mov
sbb
fcompl
in
data16
cmp
mov
dec
and
xlat
movsl
jmp
shr
xchg
out
insb
cs
mov
andl
shr
lods
push
stc
mov
xor
add
cmpsb
cli
movsl
adc
cmpl
pop
jecxz
inc
subb
inc
sbbb
test
push
scas
out
xor
inc
aas
movsl
das
sahf
leave
sbb
mov
mov
jnp
dec
push
mov
jo
push
mov
prefetcht1
hlt
movsb
mov
xchg
fcmovnb
iret
imul
leave
cs
jnp
out
pop
testb
and
mov
push
cmp
or
leave
mov
out
adc
jbe
je,pt
xor
jp
xor
cli
dec
xor
dec
pop
popf
sbb
test
je
xchg
outsl
loope
dec
int
sub
rolb
push
mull
push
push
mov
pop
adc
add
dec
mov
adc
adc
pop
shl
cmp
adc
adc
push
mov
inc
shl
and
call
or
jns
or
push
and
ficompl
cmpsb
push
push
xchg
mov
movsb
fstps
outsb
mov
shl
lahf
pop
cs
out
sbb
push
adc
ljmp
xchg
dec
xchg
jo
jecxz
push
inc
xchg
mov
sub
adc
icebp
leave
add
mov
stos
pusha
sub
add
xor
lods
jno
xorl
sub
mov
adcl
or
pushf
in
in
lods
pop
fnstcw
sbb
cld
lcall
in
push
in
or
sbb
aaa
ds
fwait
out
mov
sub
shrl
leave
jno
addr16
mov
adc
pop
aad
ret
mov
lock
das
cmp
stos
mov
push
cmp
enter
mov
xor
outsb
add
or
loop
movsl
push
jae
xor
xchg
xchg
out
mov
jmp
mov
mov
repnz
bound
fdivrp
and
add
in
fdiv
int
mov
movsl
jb
mov
dec
xchg
jae
not
push
jnp
lret
bound
cmp
ds
sub
mov
sbb
cltd
ds
data16
cmpsl
pop
out
nop
mov
pop
test
sbb
subb
jnp
sbb
cli
stos
ljmp
cmp
les
fstps
cmp
fdivrp
aaa
cmpsb
mov
dec
imul
insb
inc
pushf
in
nop
push
loop
sbb
sahf
sbb
mov
inc
cmc
test
push
in
xchg
out
adc
mov
mov
dec
pushf
leave
pop
xlat
shll
int
movsb
in
in
push
or
sbb
jp
cmp
shrl
adc
lret
lahf
cmp
adc
nop
paddb
cld
in
sti
xchg
lock
pop
dec
test
in
pusha
xchg
adc
vmovups
xchg
jne
ljmp
aaa
mov
sub
sub
add
lcall
mov
adc
stc
cmc
testl
fcmovb
fiadds
dec
cwtl
mov
inc
leave
mov
icebp
push
inc
mov
mov
or
inc
repz
xchg
rorl
in
enter
movb
idivl
sti
div
inc
subb
sbb
nop
iret
outsl
inc
aam
sbb
or
out
cmp
into
daa
mov
in
pop
mov
aam
mov
mov
push
js
cmp
movsb
in
loop
or
sub
cmp
aam
icebp
xor
mov
sbb
inc
dec
mov
push
sahf
scas
daa
sbb
pusha
into
inc
lods
scas
jae
pop
mov
andl
pop
dec
inc
in
ret
pop
addr16
xor
xchg
dec
xchg
push
hlt
aam
mov
push
pop
pop
cmp
adc
hlt
inc
adcb
ljmp
sub
lahf
push
cmp
mov
movq
fadd
nop
scas
imul
int3
xchg
sub
pop
add
mov
das
insl
imul
fwait
add
pop
nop
fidivrl
xlat
ljmp
inc
adc
xor
std
or
lret
int
cltd
jmp
cltd
and
aam
mov
mov
sub
and
pusha
jmp
push
std
ljmp
mov
repnz
inc
inc
pop
cli
mov
pusha
outsl
into
or
mov
push
inc
movsb
into
les
scas
imul
push
jno
push
xorb
and
imul
cmc
push
push
fldenv
mov
xor
sbb
sbb
mov
jo
imul
cmp
outsl
imul
pop
pusha
ret
mov
fimuls
in
dec
pop
shl
sbb
and
xor
mov
mov
popa
push
das
clc
adc
jns
sbb
mov
mov
sbbb
pusha
xor
enter
pop
push
stos
fadd
cmp
cmp
xchg
gs
lret
xor
notb
jle
sub
jno
or
int
push
scas
push
aam
aaa
sti
movsb
nop
fsubs
loope
cmp
fcompl
lods
inc
mov
rcrl
hlt
push
push
ds
or
decl
rorb
movsl
aad
repnz
add
cld
imul
mov
sbb
je
dec
xchg
mov
loop
js
pop
fcompl
mov
mov
jo
popf
xchg
push
shl
aas
sbb
pop
testl
shl
mov
inc
les
lds
adc
jmp
and
lret
push
inc
loope
ljmp
imul
jbe
nop
hlt
fidivrl
cmp
cmpsb
sub
adc
sbb
or
jg
out
and
data16
mov
adc
mov
je
jbe
sbb
adc
xchg
pop
add
jge
pop
inc
jbe
faddl
pusha
xlat
cmpl
push
int
mov
dec
push
and
push
in
adc
pop
out
pop
lods
fsubrs
jnp
inc
insb
mov
mov
xchg
cmovg
inc
mov
mov
pop
jl
sbbl
das
inc
mov
xchg
push
fistps
mov
jmp
add
in
xorb
cltd
mov
adc
enter
pop
hlt
pop
inc
mov
cmpsb
call
and
or
cmp
loope
and
or
cld
dec
xor
sti
sti
xchg
inc
and
jmp
leave
in
fdivp
or
inc
jp
in
enter
mov
faddp
shr
aad
loop
cmp
nop
lods
sbb
std
cmp
outsb
scas
jnp
int
es
inc
aas
cli
mov
outsb
cwtl
rorb
bound
ss
shrl
cmp
xchg
jns
rep
mov
push
inc
lcall
scas
cmpsb
enter
ja
jae
roll
cmpl
lcall
mov
push
and
xchg
pusha
mov
sbb
imul
cmp
xchg
lahf
jecxz
std
jg
cmp
and
fnstcw
fisttpl
add
push
pop
xchg
push
push
mov
pusha
jle
or
stc
pop
fdivr
jne
ds
inc
and
push
adc
mov
mov
and
icebp
stos
test
std
pop
pop
lods
mov
lret
jne
xchg
or
dec
mov
out
lcall
shl
out
pop
insl
movsb
fstcw
xor
stos
leave
test
mov
cli
movsb
popf
imul
jns
mov
les
pop
test
jg
leave
inc
pop
add
call
dec
add
adc
add
stos
icebp
pusha
fmulp
sub
insl
adc
sub
lret
pop
or
or
xchg
js
outsl
mov
xchg
sub
js
sbb
out
in
cwtl
movsl
outsb
aaa
and
bound
lahf
sbb
add
xchg
fsubl
push
outsl
adc
pop
push
inc
addr16
sbb
pusha
jp
xor
js
xor
push
push
shll
pop
pop
sti
mov
xorb
pop
movsb
lret
inc
xchg
adcl
xchg
lret
xor
inc
and
add
xor
dec
mov
mov
lret
out
dec
xchg
jmp
ljmp
fimull
adc
test
and
sbb
popl
xchg
mov
mov
cmpsl
pushf
pop
orl
dec
add
movsl
jp
daa
mov
stos
les
test
test
std
sub
scas
cmpsl
jecxz
test
daa
loope
sub
shlb
int3
enter
rcll
inc
dec
repnz
test
push
hlt
mov
adcb
rclb
jo
mov
stos
pop
or
enter
mov
call
int
or
fsubs
pop
jns
aad
mov
call
fildl
pop
cmpsb
fcmovnb
nopl
outsb
and
mov
xchg
movsb
sub
aad
mov
js
ds
negb
jo
sub
call
adc
dec
arpl
arpl
cli
sbb
xchg
sub
int3
iret
pop
scas
mulb
xbegin
arpl
cmp
mov
mov
into
xchg
xor
jg
mov
test
popa
sbb
add
or
or
cmp
and
cmp
nop
gs
pop
lock
sbb
jecxz
in
scas
add
dec
jno
sar
mov
inc
pop
xor
into
pushf
inc
nop
aaa
inc
mov
push
fldpi
pusha
jns
mov
fstpt
mov
lea
pop
popa
loope
add
jae
aam
fs
aas
sub
scas
or
adc
sbb
mov
mov
pop
mov
stc
fsubrs
push
out
ljmp
add
push
cmc
stos
lea
stos
call
sarb
fistpll
popa
fdiv
into
inc
or
popw
stc
and
push
push
and
aaa
and
repnz
push
and
das
adc
int
or
adc
decb
cs
xchg
movsl
adc
mov
or
push
cmovae
pop
dec
scas
xlat
pop
mov
jecxz
or
add
push
insl
aam
stc
dec
pop
stos
int3
scas
and
jecxz
jl
jge
mov
and
add
pushf
test
aaa
inc
cmp
hlt
jb
stos
pop
jnp
out
cmp
mull
mov
rcl
adc
andl
lcall
xorl
push
adc
into
mov
and
or
push
xor
lods
jnp
into
cmpsl
add
xchg
mov
inc
dec
loop
or
cmp
popf
push
or
mov
xchg
dec
sub
vcvttpd2dqy
icebp
pop
and
cld
xchg
lret
movsb
outsl
mov
inc
icebp
xchg
test
lret
push
xchg
cmp
out
in
xor
and
cs
flds
aaa
jae
cmp
xor
cmp
mov
mov
je
ret
stos
pop
lods
in
fxch
push
or
jno
xchg
sbb
mov
loopne
inc
insl
loop
mov
inc
cmpsl
adc
in
cmpsb
in
mov
dec
push
jb
dec
stc
jecxz
push
mov
insb
jge
push
sub
stc
out
ret
adc
out
sbb
jmp
jo
ret
popa
and
push
cmp
shll
mov
push
add
mov
lret
push
aaa
mov
add
xchg
jecxz
inc
pop
addr16
imul
cmp
call
sub
mov
scas
nop
cltd
test
pop
stos
sub
clc
sahf
filds
in
cli
adc
jbe
je
fcomps
push
dec
mov
in
movsl
enter
fsts
push
inc
adc
test
dec
push
cmpsl
xor
mov
or
mov
jge
mov
or
push
nop
pusha
xlat
pop
mov
je
lret
outsl
ljmp
dec
enter
mov
dec
xchg
or
mov
jnp
arpl
jns
push
jg
push
lret
scas
push
pop
mov
movsl
xchg
jmp
test
outsb
sbb
call
mov
clc
imulb
cmp
xchg
pop
jbe
aas
sbb
add
push
mov
imul
push
push
test
inc
push
dec
in
into
inc
mov
or
pop
jb
mov
inc
arpl
mov
mov
mov
fistps
iret
mov
xchg
hlt
mov
adc
adc
subb
pop
xchg
pop
and
sti
sub
es
lods
aad
dec
push
fldenv
mov
lea
inc
mov
es
pushf
mov
xor
ret
das
cmp
lcall
cmp
dec
repz
add
test
stos
jno
je
popf
aas
std
mov
gs
adc
mov
fstl
out
lcall
push
xor
jo
aam
mov
shrb
addl
outsl
mov
hlt
clc
jnp
pop
movsb
inc
pop
call
aad
cwtl
dec
aaa
push
gs
or
test
fcomps
sbb
adc
pop
scas
mov
movsl
call
cmpsl
movsb
push
mov
leave
mov
arpl
and
sarb
cld
test
mov
lods
adc
ficomps
into
movsb
jecxz
xorb
dec
cmp
cld
cmp
xchg
loopne
lods
cmp
and
or
aam
sub
into
push
xchg
arpl
mov
lock
mov
adc
lock
dec
jle
cmp
push
and
jl
mov
mov
push
sbb
adc
insb
shll
add
sub
out
lods
mov
xchg
and
imul
in
in
in
jmp
mov
sub
scas
stc
inc
or
push
test
push
arpl
adc
mov
and
into
mov
aam
rol
xor
jne
imul
ret
fsubl
outsb
mov
lock
es
xchg
jecxz
sbb
movsb
lock
dec
cmpsb
rol
mov
test
xchg
jo
cmp
sub
test
les
jne
dec
push
pushf
repz
cmp
lods
jg
pop
mov
push
test
movsl
jo
pop
xor
call
xor
cwtl
push
sbb
fisttps
pop
shrb
clc
pushf
stos
jmp
or
add
repz
stos
xchg
orl
sbb
stos
repz
push
inc
and
popf
fucomip
setge
push
bound
clc
inc
fnstenv
cmp
lret
les
sub
push
push
mov
push
adc
inc
filds
mov
xchg
push
pop
icebp
mov
rclb
mov
leave
jne
dec
out
jo
inc
in
add
push
dec
pop
mov
test
adc
inc
pop
mov
mov
stc
sub
repz
dec
int
sbb
loopne
orb
fnstcw
push
pop
mov
mov
stos
repz
push
js
xchg
push
mov
pop
jl
sbb
mov
movsb
fdiv
cmp
repnz
jmp
cmpsb
cmp
repnz
lea
xor
stos
adc
mov
adc
int3
adc
imul
loop
cli
ss
push
dec
jnp
xchg
dec
push
pop
test
push
mov
shll
imul
pop
into
outsb
outsl
mov
std
arpl
shl
xchg
jmp
in
sahf
shr
cltd
stos
xchg
pop
and
sub
sub
into
loopne
xchg
pop
mov
push
mov
and
sbb
popf
sub
add
cwtl
pusha
push
push
push
add
xor
and
sbb
int3
mov
leave
fldt
push
aam
lret
inc
inc
sub
clc
and
repnz
ja
or
jns
and
push
lds
fdivl
adc
and
push
daa
js
mov
lds
pop
ds
push
mov
enter
repz
pop
mov
push
insb
lcall
mov
loopne
mov
pop
scas
sub
stos
xor
mov
mov
clc
xchg
jmp
inc
bound
fdivs
mov
fsubrl
in
into
popf
adc
incl
mov
pusha
cmp
fisttpll
jbe
js
push
adc
push
cli
or
pop
add
frstor
push
jmp
imul
fwait
mov
push
push
sub
inc
adc
xor
dec
mov
addr16
fbstp
sbb
mov
xlat
sahf
add
inc
jg
aas
lret
mov
out
jle
fsubr
aas
in
mov
pop
inc
int
fldt
push
xor
sub
dec
mov
jl
pop
push
inc
fs
jne
add
jns
loop
cwtl
mov
or
das
call
xchg
mov
mov
imul
fdivrs
lcall
popa
je
adc
in
out
hlt
push
mov
outsb
gs
mov
cmp
mov
jmp
cwtl
and
es
inc
adc
dec
or
mov
mov
sub
out
sbb
mov
mov
movsl
adc
dec
sbbl
xlat
jns
cmp
xor
xchg
fnstcw
push
and
aaa
scas
adc
add
div
xchg
and
lea
pop
orb
int3
inc
mov
mov
repz
cmpsb
xor
mov
jnp
dec
push
xor
xor
jp
or
sub
scas
inc
push
pusha
xorb
cmp
fisttpl
jo
jp
loop
cmp
ret
inc
mov
aaa
inc
dec
aam
js
loop
add
outsb
jl
push
inc
in
insb
lret
out
inc
shrl
pop
clc
ret
mov
jnp
stos
xor
sbb
adc
ss
sahf
xor
cltd
xor
insl
xor
mov
idivb
pop
push
daa
pusha
and
jl
pusha
pop
mov
scas
pop
int
imul
test
push
push
mov
adc
movsb
or
mov
lds
mov
and
fwait
addr16
clc
pop
pop
add
push
mov
xchg
bound
fsubp
pop
rcrl
sbb
addr16
push
inc
cmp
repz
enter
and
jae
ljmp
loope
scas
add
cmpsb
sbb
into
lds
cmc
orl
rcll
movsl
lahf
lret
ljmp
int
sarl
jae
bound
mov
lahf
pusha
sbb
inc
addr16
je
mov
inc
movsl
fldenv
mov
push
sahf
divl
adc
inc
push
mov
out
fldl
jmp
dec
sub
movsl
loopew
loop
js
mov
add
push
enter
mov
xor
push
xchg
rcll
xchg
lds
push
fiadds
test
pop
popa
iret
add
mov
push
lea
push
sub
dec
mov
adc
imul
in
adc
pop
mov
icebp
fstpt
sbb
sbb
adcb
jp
enter
mov
stos
out
mov
mov
xor
push
mov
push
orl
jp
mov
sahf
mov
jo
pushf
or
pop
pop
add
pushf
cwtl
je
inc
stos
cli
mov
int3
cld
sti
mov
in
testl
jb
jmp
lret
mov
add
popa
xor
push
dec
sub
inc
loop
je
jecxz
aaa
fwait
shlb
gs
and
dec
sbb
xor
clc
cli
dec
push
adc
insb
mov
pushf
std
fcomps
add
or
inc
inc
or
adc
int
in
xchg
cld
sub
mov
cmpsl
pop
sub
cmpl
jecxz
push
add
or
fadds
and
mov
cltd
cs
popa
inc
rcr
repz
push
jge
sub
mov
add
mov
xlat
mov
hlt
sbb
mov
aas
pop
pop
push
stos
or
mov
popf
out
sbb
adc
pop
or
div
loop
and
repz
pop
and
cwtl
cld
dec
adc
insl
aaa
inc
mov
push
and
cmp
fadds
inc
pushf
dec
stc
cltd
in
in
or
mov
mov
inc
fidivl
xchg
lea
loope
and
jno
test
leave
xchg
inc
mov
popa
in
imul
push
or
xor
scas
add
iret
mov
sub
cld
pusha
push
mov
cmp
aad
es
in
aad
pushf
mov
std
fdivp
xchg
xor
xchg
in
sub
popa
pop
bound
sahf
into
jmp
lods
insl
pop
jp
mov
dec
adcl
arpl
repz
stos
hlt
inc
pop
hlt
andb
pushf
lcall
dec
add
mov
lods
aaa
iret
stos
and
shrl
aaa
in
pop
pop
xor
sub
outsl
call
sbb
les
lock
cmp
clc
test
mov
pop
sub
shl
xchg
sub
pushf
test
pop
dec
mov
nop
xor
dec
mov
in
push
cmp
in
mov
or
cmp
inc
jmp
dec
push
in
xor
pushf
adc
xor
and
inc
inc
cmp
jno
mov
inc
xor
jae
movsl
jns
aam
cmp
mov
and
xchg
push
aaa
xor
pushf
je
mov
js
jns
test
sub
cmc
xchg
stos
xchg
bound
sbb
pushl
mov
fldt
sub
sbb
jne
push
add
sti
ds
hlt
mov
jl
jne
std
mov
aaa
shl
mov
xor
xchg
sub
sbb
fmull
aas
aad
lahf
dec
cltd
jnp
pushf
cwtl
outsb
jg
aad
push
fwait
inc
mov
ret
dec
pop
push
dec
es
inc
fiaddl
hlt
pop
sarl
daa
jae
or
and
sbb
aaa
inc
cmp
push
outsb
ret
push
outsl
xor
add
faddp
jp
cmpsl
shlb
push
std
divps
push
hlt
inc
nop
mov
mov
scas
push
cltd
lods
add
divps
pop
dec
adc
push
test
outsl
outsb
mov
orl
jl
aam
adc
imul
scas
sub
imul
adc
aam
aam
popf
subl
sub
cmp
lahf
xchg
push
aad
and
push
stos
rol
pop
xchg
xchg
ret
pop
jb
sbb
gs
adc
cwtl
push
push
xchg
sbb
xchg
imul
dec
pop
shll
pop
ss
in
dec
sbb
jo
adc
push
pop
int3
add
add
push
dec
sarl
dec
outsl
mov
and
add
ljmp
mov
popf
dec
inc
dec
jle
repz
jg
adc
jge
enter
xor
mov
jns
add
fsubr
loope
shrb
orb
fldt
fwait
jnp
imul
in
inc
sub
clc
add
loop
loop
pop
aam
aas
iret
push
add
iret
cmpsb
xor
ss
fimuls
inc
mov
mov
iret
add
sub
je
out
jp
cmp
sbb
push
jns
test
inc
arpl
ret
xchg
xchg
inc
jbe
mov
mov
jo
push
test
cli
pop
js
aaa
in
rcrb
mov
mov
call
test
cmpsb
cwtl
push
mov
pop
test
test
fisubs
pop
jp
fs
mov
dec
test
mov
dec
fwait
rorl
cmp
test
add
pusha
test
mov
andb
mov
push
xchg
insb
and
sahf
xchg
dec
jmp
sub
or
adc
mov
shlb
gs
add
mov
out
pushf
mov
mov
xchg
pop
mov
sbb
dec
mov
xor
sarl
mov
leave
das
pop
dec
push
dec
idivb
and
mov
pop
push
stc
mov
enter
loope
sub
in
loop
sub
cld
test
add
mov
sbb
shlb
popa
imul
adc
add
imul
push
cmc
mulps
push
aas
add
lret
cmp
jo
les
jle
or
cli
hlt
aad
xor
mov
in
mov
dec
sub
enter
leave
into
adc
add
lea
repz
mov
in
dec
inc
nop
or
pop
jle
cld
ss
pop
cld
add
dec
mov
jb
loop
cmp
cmp
cs
iret
mov
mov
or
push
push
enter
mov
cmc
mov
mov
mov
xchg
xchg
inc
pop
add
aad
frstor
xor
addr16
fwait
nop
call
mov
sub
jb
inc
xorl
mov
pushf
sub
push
movsb
dec
out
loope
scas
pop
or
cld
xor
inc
movsl
xchg
out
out
push
call
mov
lock
sbb
mov
mov
cmp
mov
or
shrb
push
xchg
ds
jo
or
xchg
mov
dec
rcl
or
sbb
jnp
add
jne
add
popa
xor
in
leave
mov
repnz
adc
cltd
and
pop
dec
jae
push
sub
loope
mov
cmp
test
repz
test
outsl
sbb
sbb
push
mov
cmpsl
push
mov
insb
inc
fisubrl
pop
clc
aad
idivb
pop
movsb
aad
stos
and
or
mov
or
pop
cmp
adc
aad
push
repnz
lods
inc
shlb
pop
inc
mov
int3
aaa
stos
jno
outsl
sahf
jno
xchg
jbe
rclb
push
cmpl
js
add
dec
aam
pop
add
adc
push
sub
pop
sarb
cmp
clc
mov
inc
jecxz
pop
in
jle
xchg
inc
xchg
subb
lret
mov
sbb
stos
and
cmp
cltd
sub
jmp
push
in
inc
js
mov
pop
and
insb
add
mov
jp
out
and
pop
jb
mov
ljmp
dec
pop
jbe
addr16
adc
repz
fisubrs
subb
daa
aam
hlt
push
dec
mov
lods
fsubs
mov
xchg
in
dec
xchg
test
arpl
movsb
push
fwait
jne
xchg
mov
push
std
sub
movsb
jg
ljmp
pushf
popf
jmp
dec
aad
fidivrs
cli
or
inc
pop
and
mov
mov
cltd
mov
dec
sbb
sbb
push
ss
mov
xor
inc
cmp
mov
ficompl
loope
scas
clc
std
xor
enter
mov
and
clc
cmc
mov
xor
pop
cmc
sub
stos
or
jmp
inc
out
jo
pop
aas
fs
mov
push
xchg
xor
fidivrl
aas
pop
adc
sub
add
mov
jae
xchg
pushf
add
out
mov
ja
pushf
push
xor
cmp
inc
jb
mov
mov
rcrl
cld
push
push
ret
add
dec
jne
xor
or
adc
inc
mov
xchg
sbb
imul
repnz
je
and
sbb
stos
scas
pop
cwtl
in
add
sahf
fs
pop
inc
pop
sbbl
daa
lods
or
mov
jae
fisttpll
pop
sbb
dec
sub
cmpsb
or
pop
call
add
mov
add
es
or
sbb
in
push
xchg
mov
sub
iret
dec
popf
icebp
push
mov
adc
cmc
lods
dec
lcall
insb
imul
daa
mov
loopne
js
pop
daa
add
xor
jne
insl
mov
cld
mov
sbb
xchg
and
mov
shll
js
xor
jns
pop
rolb
pop
and
mov
ficoml
sub
sbbb
xor
xchg
clc
mov
pop
sti
fwait
leave
daa
cltd
ljmp
jb
push
mov
into
push
jmp
loope
icebp
mov
xlat
hlt
sbb
sbb
adc
add
clc
repnz
dec
adc
adc
pop
jbe
push
ss
add
pop
lret
in
cmp
mov
push
xchg
int3
pop
lcall
mov
xlat
fidivs
fs
daa
jb
push
out
scas
fdivl
movsl
add
cmp
movsb
cmp
dec
and
into
mov
inc
roll
enter
push
movsb
movsb
arpl
aas
cmp
mov
sbb
xor
daa
imul
jns
pop
mov
fadd
cwtl
enter
adc
lock
dec
jle
fstps
test
movsl
and
mov
xchg
into
test
mov
mov
jnp
ficompl
pushf
lret
dec
or
mov
adc
cmp
jmp
mov
cmp
dec
repz
mov
adc
js
sub
add
push
mov
sbb
jl
call
sbb
jmp
push
pop
jg
shrb
int3
gs
or
fstps
adc
dec
inc
es
int3
loopne
fwait
jne
sub
testb
fsts
les
xchg
lret
mov
inc
clc
test
pop
pusha
mov
mov
cmpsb
mov
dec
sbbb
mov
pop
push
int
ja
dec
jno
js
mov
jle
test
xlat
popa
je
xchg
scas
cmc
xorb
or
mov
popa
loope
iret
xchg
and
adc
sahf
rcrl
dec
pusha
lds
js
out
fwait
push
and
mov
xchg
push
ret
mov
test
fiadds
push
mov
flds
ljmp
jo
adc
lret
test
and
add
lods
mov
out
push
sbb
add
cmpsb
fstpt
pop
sti
insb
xor
lea
jp
clc
sub
into
into
arpl
mov
adc
cmp
aam
adc
lods
pushf
movsb
mov
fistpl
faddl
xor
sahf
je
sub
testl
pop
cltd
sub
es
mov
mov
into
pop
sbb
jb
int
mov
repz
push
andnps
dec
out
dec
ja
dec
insb
mov
out
cmp
scas
popa
pop
rcll
in
xchg
cmp
sub
add
pop
dec
les
in
rcr
decb
sub
xor
popa
jbe
mov
mov
sbb
jne
cmp
xchg
sbb
push
lret
insb
imul
xchg
cmpsb
mov
push
aad
out
das
cmp
xor
movsl
or
jbe
mov
je
sub
push
cmp
loope
add
sub
jno
in
andb
mov
mov
push
add
imulb
movsl
adc
jmp
fiadds
xor
jae
push
adc
fmuls
nop
adc
cmpsl
push
push
mov
sbbl
dec
cmpsb
adc
test
and
in
popw
cmp
cmp
mov
cmp
div
cltd
mov
outsl
jae
add
ss
mwait
subb
sub
sbb
iret
mov
js
es
sbb
xchg
repnz
loop
aam
mov
in
pop
cld
stos
popa
clc
in
aaa
ret
add
pop
mov
pushf
pop
test
dec
push
push
test
lods
imul
ds
xchg
js
js
xchg
repnz
push
out
rorl
daa
mov
ja
jecxz
mov
pop
sub
adc
loopne
leave
mov
or
push
loopne
jp
lahf
cmc
fdivs
ds
cmp
lea
aad
mov
cmp
jp
out
xchg
int3
and
or
push
cmp
outsb
xor
sbb
mov
pop
imul
movb
ds
subl
mov
xchg
mov
loopne
icebp
pop
aad
fdivrl
push
in
or
pop
xor
jle
jle
clc
test
data16
xchg
push
daa
mov
mov
loope
and
adc
adc
jl
jge
lods
push
data16
out
xchg
insb
sbb
outsl
leave
push
mov
sbb
add
jge
mov
out
movsl
xchg
aas
lret
sbb
mov
push
scas
lods
test
push
lock
outsl
rcrb
add
push
add
mov
xorb
xor
mov
and
aam
dec
push
sbb
idivb
jae
cmp
out
mov
cmpsb
in
rorb
ret
or
jne
mov
popl
out
outsb
stos
sub
cmpsb
outsb
mov
out
jmp
out
push
pop
xchg
leave
sub
cld
movsb
fs
xor
int3
fmuls
and
xor
int
mov
pop
repz
and
sub
inc
int3
mov
pop
sub
popf
adc
fnstenv
repz
aam
mov
cmp
push
clc
jmp
xchg
jno
xchg
sub
jno
push
bound
jb
test
pop
fmulp
scas
mov
inc
pop
push
stos
adc
pop
sahf
and
xchg
lods
insl
call
pop
ret
inc
mov
test
out
sbb
roll
loope
ja
adc
icebp
jmp
mov
fdivs
cmp
int
pop
jmp
fidivrl
push
push
lahf
or
fdiv
mov
cmpsl
and
out
mov
add
mov
or
mov
rcl
test
inc
xchg
pop
popf
fsub
xchg
push
in
dec
cmp
xchg
dec
pop
int
cli
dec
movsb
in
push
push
loopne
aaa
inc
ljmp
push
jbe
fcomps
ffreep
or
lock
push
loope
dec
dec
cmp
test
add
pop
adc
lock
and
loopne
jecxz
sbb
sbbb
sahf
rorl
fdivr
mov
cli
int
mov
push
lods
or
out
gs
or
orl
push
sti
shlb
inc
dec
into
push
sbb
roll
push
push
pop
jg,pn
cmpsb
cmpsb
mov
mov
xchg
shll
sahf
frstor
jecxz
fiaddl
or
push
js
test
push
mov
pop
pop
jg
cmp
adc
fwait
leave
push
xor
shlb
std
in
pop
mov
sbb
mov
arpl
inc
sub
cli
mov
pop
in
and
cwtl
lea
push
sbb
xor
lret
data16
test
sbb
cli
add
adc
mov
and
add
pop
scas
cmp
mov
jno
orb
rcl
cmp
divl
cmp
test
movsb
js
sub
mov
push
and
insl
inc
decl
pop
jnp
push
mov
cld
sbb
push
push
mov
xor
pop
adc
call
je
push
inc
sbb
xor
sahf
or
into
jmp
cmpsl
xchg
lcall
xor
push
leave
js
and
xorl
mov
lahf
adc
sarl
pop
mov
cmp
hlt
in
test
stos
sarl
mov
icebp
ret
andps
std
add
xor
shll
sbb
fnsave
les
lods
hlt
jb
xor
insl
pop
fwait
ret
xchg
pop
aas
mov
cmc
mov
loopne
or
mov
outsl
sub
push
ja
or
pop
jmp
cmp
scas
mov
cmp
daa
and
out
mov
mov
imul
mov
pop
jmp
daa
sbb
mov
sahf
stos
push
in
push
dec
adc
or
mov
loop
sub
gs
arpl
popl
fisttpll
push
cwtl
jp
nop
or
xor
mov
sbbl
adc
add
mov
or
sarb
xchg
jp
jae
mov
pushf
mov
loope
jl
inc
push
leave
dec
mov
sub
das
stos
jg
mov
pop
movsb
jge
out
dec
enter
andb
mov
push
dec
aad
repnz
bnd
jnp
add
mov
xor
clc
das
inc
imul
es
sarb
cmp
int3
fstpl
dec
insb
mov
fidivrl
aaa
pusha
testl
mov
sub
add
mov
bound
pusha
and
xchg
mov
pop
ret
or
mov
inc
stc
fisubrl
addr16
hlt
cmp
popf
adc
cmpsl
imulb
adc
jno
inc
push
pop
in
push
loop
dec
loope
mov
add
aad
push
sbb
roll
test
cltd
and
mov
jmp
mov
call
subb
jns
lods
ds
sbb
rcr
or
out
adc
add
jge
push
lahf
inc
jmp
daa
or
add
fsubrl
jns
je
shll
mov
aaa
je
cltd
push
or
sbb
sub
jmp
adc
out
push
mov
fsubs
notb
mov
rcrl
sub
test
das
vpmulhw
in
iret
loope
cld
inc
sub
push
in
dec
xlat
fcmovu
xor
adc
arpl
dec
arpl
xor
sub
dec
mov
pop
das
xor
test
aaa
sarb
xchg
and
imul
adc
sub
xor
push
int3
inc
cli
xchg
jecxz
enter
ret
mov
mov
xor
sub
out
fiadds
jecxz
ljmp
or
fcomi
sub
xor
xchg
sub
jge
xchg
and
mov
lods
xlat
outsl
repnz
icebp
scas
in
add
jae
and
sbb
mov
data16
and
mov
cltd
mov
pop
xor
cmp
stos
mov
pop
je
mov
and
cmp
mov
lock
sti
into
and
or
xchg
or
and
aam
sub
stos
addl
popa
adc
inc
xor
xchg
xchg
nop
das
push
jmp
inc
hlt
movq
iret
xorl
gs
adcl
jbe
xchg
mov
aad
cwtl
popa
lret
mov
ss
dec
push
jle
fs
scas
sahf
lahf
fsub
in
or
jl
sbb
rolb
aad
add
push
shlb
or
js
repnz
mov
in
popa
mov
imul
cmpsl
insl
imul
cli
in
adcl
add
mov
or
xor
sub
mov
pop
inc
add
sbb
lcall
sti
xchg
push
dec
xor
imul
loope
out
ljmp
xchg
inc
cmp
repz
dec
xor
jecxz
ret
cltd
jnp
xor
lea
adc
test
or
ja
gs
adcb
sbb
mov
mov
push
and
lods
sub
xor
jl
push
mov
out
xchg
push
sbb
push
or
cli
adc
pop
inc
sar
pop
in
sarl
ds
std
outsl
add
or
sub
push
fcmovu
bound
mov
pop
sbb
mov
adc
je
and
shrb
insl
mov
adc
add
sbb
cmp
fcompl
add
stos
pxor
jmp
inc
adc
loope
lods
dec
push
movsl
inc
adc
pop
mov
aaa
adc
js
jp
sub
inc
and
test
insl
rorb
or
push
sahf
pushf
add
stos
lock
push
mov
sbb
sti
mov
pop
mov
push
cmp
xor
movups
jnp
lock
mov
push
out
out
cmp
bound
call
mov
fistpl
push
jbe
add
shl
leave
movsl
cltd
xacquire
aad
pop
lret
lock
shlb
cmp
jecxz
or
push
jne
or
bound
cmp
movsb
das
sub
cwtl
mov
xchg
cwtl
mov
in
test
xor
out
mov
insb
mov
cmpsb
mov
jmp
add
or
sbbb
scas
decb
sbb
adc
xchg
imul
inc
jnp
test
and
inc
and
or
repz
and
outsb
rep
lea
ja
ret
mov
pop
fs
dec
and
cmpsl
hlt
divb
stos
xor
jo
mov
ss
jle
mov
inc
insl
gs
sub
pop
cmp
cmp
mov
or
push
mov
pop
adc
sub
cmp
cmp
mov
bnd
fsubl
push
outsb
mov
js
adc
lock
rcrb
and
pop
inc
pushf
xor
xchg
mov
mov
or
popf
pop
dec
fildl
pusha
jmp
ss
cmp
andl
adc
push
addr16
push
mov
scas
or
outsb
outsb
sub
lret
subb
imul
out
mov
xor
mov
out
mov
push
fcmovbe
ret
sub
cwtl
sub
pop
in
aas
jge
imul
adc
push
ds
lret
push
out
pushf
mov
mov
nop
mov
cs
rol
pusha
movsb
bnd
lea
daa
mov
mov
inc
filds
je
fwait
test
test
scas
inc
adc
push
outsb
ret
sbb
xor
push
mov
xchg
fcomp
fstps
lret
stos
jbe
mov
in
mov
sub
rclb
ljmp
adc
ret
or
movsb
xsaves
and
mov
or
push
aaa
cmpsl
push
lahf
pop
fidivrs
mov
setbe
jmp
jns
std
jb
fdivrl
mov
inc
movsl
ja
out
mov
pop
lea
mov
insb
mov
mov
cmp
inc
dec
xchg
cmpsl
push
mov
pop
mov
ror
pop
jl
push
jb
adc
adc
push
dec
dec
xchg
notb
movsb
mov
jle
lds
gs
mov
fldl
ds
mov
popa
xchg
cwtl
push
mov
sub
test
les
add
xor
rcl
test
pop
in
cltd
dec
fs
adc
dec
add
jl
sub
fdivs
xor
push
scas
push
aas
push
add
add
pop
cmpsl
sbb
dec
je
cs
xor
aad
xor
dec
cmpb
sub
imull
jp
rclb
dec
hlt
push
jbe
push
xlat
mov
in
xchg
loope
lcall
xlat
xchg
mov
xchg
icebp
jmp
inc
jbe
icebp
movsl
pop
fdivs
nop
push
push
lock
mov
in
and
orb
adc
lea
cmpsb
push
mov
insl
sbb
cmpsb
testb
inc
repz
test
cmp
movsl
cmp
sar
rol
in
imul
dec
out
cmp
jmp
xlat
outsl
sub
jl
push
subl
mov
cltd
inc
push
fisubl
xchg
and
stos
inc
adc
sbb
push
pop
push
popa
inc
jge
add
mov
or
ret
sbb
ret
fisttps
jge
das
xlat
push
cmp
mov
dec
sub
ret
and
mov
push
pop
and
cmp
adc
pushf
lret
rorl
or
cwtl
rcrl
pop
jns
jnp
mov
and
cmpsl
fildll
adc
cs
xor
sub
xor
out
test
rcrb
pop
mov
test
xchg
std
add
mov
loop
dec
aad
mov
outsb
xor
mov
xor
pop
daa
or
jbe
negl
fld
pop
inc
sub
fsubl
mov
xlat
sbb
sahf
cld
ljmp
outsl
insl
imul
stc
xor
dec
cmp
and
dec
loop
fcoms
mov
cld
add
cli
insl
jle
add
or
outsb
mov
aas
dec
incb
out
mov
pop
negl
lods
mov
ds
jle
add
mov
fs
sbb
es
hlt
je
pop
outsl
push
adc
roll
push
insl
cmpsl
jno
mov
mov
xchg
add
dec
in
in
dec
int3
lret
outsl
pop
push
pop
cmp
aad
xor
xchg
inc
fwait
pop
out
cmpsb
js
mov
mov
mov
insb
out
dec
add
pop
cmc
out
in
jmp
es
pop
popl
sub
subb
push
sbb
jmp
imul
sbb
cmp
scas
or
mov
arpl
xor
pop
sub
pushf
fidivs
pop
insb
movsb
or
repnz
ja
insb
out
in
xor
mov
push
and
push
arpl
or
int
pop
mov
pop
xchg
lret
mov
lret
sub
xchg
push
pusha
or
out
int3
cmp
pop
dec
sub
loopne
js
sbb
sbb
push
aad
insb
and
adc
dec
dec
add
jbe
rol
imul
mov
aas
test
cli
push
imul
cs
dec
inc
aaa
pop
enter
push
adc
aaa
mov
dec
out
adc
movsl
stc
popf
dec
push
mov
ja
lods
dec
jno
xor
std
mov
cltd
sub
sub
mov
cmp
lea
push
fs
or
push
jne
pop
clc
sbb
mov
push
sbb
lock
add
cld
js
clc
in
cmpsl
lock
lret
aam
inc
fsubrl
pop
das
dec
test
cmpsl
add
and
aad
jo
sbb
adc
shrb
xchg
and
aas
and
cli
mov
les
inc
pusha
and
addl
xor
push
and
out
iret
cmc
adc
sti
movsb
bound
aaa
jecxz
out
fistps
add
jnp
int
adc
rcl
mov
fnstcw
xor
daa
mov
bnd
jno
inc
or
stc
in
or
dec
jne
mov
add
mov
push
aas
outsb
xor
jmp
xor
das
xor
bound
stc
add
movsl
lret
jge
and
jns
in
push
outsl
test
inc
jle
jns
and
ret
int
lret
dec
clc
pop
leave
or
xchg
adc
sub
out
mov
popf
loope
bound
sbb
cmp
loopne
inc
pop
sub
ficomps
xchg
pop
in
xor
cmp
xor
xchg
and
popa
push
cli
aaa
sub
push
sub
sub
jo
ljmp
jmp
push
out
int
sti
insl
mov
adc
call
sbb
sbb
dec
dec
dec
lock
sbb
jp
push
lret
adc
jmp
inc
xlat
push
test
insl
roll
xor
inc
les
andb
stc
push
pop
icebp
shl
mov
movsl
push
cmp
xchg
push
fcmove
or
or
inc
push
repnz
outsl
xor
push
arpl
inc
call
adc
push
mov
xlat
mov
cwtl
inc
cmc
and
test
sbb
dec
sbb
jno
push
aam
enter
iret
data16
iret
push
idiv
mov
int3
cld
int
add
push
xor
mov
xor
adc
xchg
push
pop
insb
add
pop
aaa
mov
and
test
dec
xor
sub
inc
orl
add
sti
push
stos
mov
mov
test
jecxz
in
cmc
mov
mov
into
in
inc
xchg
addr16
hlt
jmp
jns
int
inc
cltd
pusha
sub
sub
add
dec
mov
sbb
sub
jo
out
call
xchg
pop
dec
mov
pop
aas
lds
scas
sbb
clc
mov
cli
movsb
add
faddl
xchg
in
jle
mov
mov
sar
jae
mov
cltd
dec
scas
dec
and
test
mov
inc
scas
or
out
push
mov
ss
cmpsl
loopne
leave
dec
iret
jg
pop
pop
cli
jge
or
or
aam
push
in
das
mov
pop
mov
xchg
pop
pop
into
sub
push
xlat
out
mov
sbb
rcrl
mov
out
lret
mov
mov
push
mov
std
out
cmp
mov
add
popf
cltd
cmc
mov
mov
popf
push
or
and
mov
movsl
repz
add
xor
xchg
rorl
sbb
sub
push
inc
mov
jns
jb
xchg
xor
mov
insb
sub
movsb
add
sub
mov
arpl
call
push
push
sti
hlt
mov
inc
pop
out
adc
dec
test
jno
dec
dec
dec
in
mov
scas
pop
fnstcw
hlt
dec
es
js
hlt
jge
xchg
negb
sti
xchg
rolb
adc
jmp
mov
mov
add
ds
lret
cmp
mov
jbe
fadd
insb
fcom
jg
mov
out
mov
lahf
pop
ss
mov
mov
and
cmpsl
push
arpl
mov
inc
xchg
xorb
or
shrb
mov
adc
push
mov
cmp
test
lret
xchg
pop
sahf
popa
mov
push
or
push
loop
and
lahf
mov
add
or
xor
lcall
cmpsl
xchg
jecxz
dec
ss
lods
ss
pop
adc
fs
out
xchg
push
rcll
adc
and
aam
ret
push
ret
xlat
mov
inc
cmp
sar
movsb
mov
jge
cltd
imul
jbe
nop
pop
ret
shr
xor
gs
js
pop
gs
outsl
and
add
test
mov
mov
into
psadbw
xchg
nop
in
and
enter
mov
adc
enter
testb
sub
cltd
popf
lods
sbb
and
or
fs
sbb
dec
xor
insl
sahf
shlb
jo
pushf
xor
outsl
pop
pop
iret
notb
insl
test
and
inc
inc
sarb
mov
jnp
stc
mov
ret
out
adc
in
mov
mov
std
or
in
sub
mov
cmpsb
aaa
rol
inc
jp
stos
cmpsl
mov
dec
dec
jb
mov
push
xchg
inc
ror
pop
mov
pop
or
xor
aaa
js
out
vpslld
arpl
jb
add
mov
ds
lods
pusha
cld
lret
mov
jmp
negb
lods
lods
adc
xor
imul
fdiv
enter
iret
add
dec
and
punpckhwd
mov
pusha
and
into
pop
add
sti
fcompl
cwtl
inc
or
mov
mov
std
cmp
xchg
ss
jmp
in
insb
jl
push
in
aaa
or
les
sub
cmp
repz
mov
decb
fnstcw
push
lcall
lock
jmp
adc
jl
inc
stc
pop
mov
aam
push
inc
mov
mov
mov
push
fistpl
sahf
dec
popa
shlb
jle
lods
mov
ret
fwait
xor
jb
and
test
lea
fwait
pop
mov
cli
shlb
scas
pushf
sub
inc
cmpb
xor
mov
leave
insl
data16
sub
push
jb
mov
inc
mov
jmp
out
stos
xchg
jecxz
loop
pop
jb
xchg
les
into
loope
mov
inc
mov
jns
lea
repz
sbb
xchg
cwtl
mov
iret
js
bound
test
dec
cmp
fcmove
repz
adc
leave
daa
movsl
test
cmovne
cli
andl
mov
xor
repz
pop
xor
push
and
jno
leave
in
loop
and
sbb
add
cmp
pop
jp
mov
and
jno
jnp
inc
push
aad
xor
data16
cmp
call
push
pop
mov
fisubs
inc
imul
andl
pop
test
pop
ds
adc
int
outsl
je
sub
adc
jbe
sahf
incl
dec
mov
cmp
imul
ret
lret
sbb
mov
xchg
in
mov
or
adcb
sar
xor
mov
xchg
loop
cmovno
outsl
xor
rcrb
cmc
ss
mov
and
repz
out
fbld
push
mov
and
lods
add
sbb
jno
pop
out
cwtl
adc
in
cwtl
cmp
or
xchg
jl
out
jge
stos
mov
ret
xchg
test
jg
mov
pop
fs
and
cwtl
test
mov
adc
pop
lods
data16
mov
jnp
or
mov
lods
xor
js
pop
cmp
addl
dec
jp
xchg
pusha
dec
hlt
cmp
push
test
leave
jnp
push
scas
ret
xchg
stos
jbe
inc
xchg
andb
in
iret
clts
sti
iret
aam
push
inc
imul
add
lds
adc
shll
and
and
in
inc
addr16
movsb
arpl
mulb
mov
pop
das
mov
fisubs
rcll
aam
dec
adc
lock
xor
mov
jle
stos
in
icebp
mov
ret
jnp
mov
xor
adc
ss
add
adc
sarl
pop
hlt
mov
stc
in
jl
push
ret
sbb
push
xchg
mov
jmp
jbe
sub
jecxz
fcoms
out
mov
adc
add
adc
push
cltd
divb
xchg
sahf
test
pushf
sub
daa
jp
cli
fdivs
in
xchg
rorb
jb
fucomi
sub
jae
cli
and
dec
and
pop
stc
je
adc
or
push
call
ss
test
mov
xchg
test
push
mov
pop
imull
sbb
cmp
and
dec
insl
pushf
pop
ds
mov
cltd
xchg
out
sbb
push
mov
pusha
inc
mov
js
loope
mov
ja
sub
outsl
jge
xor
aad
pusha
pop
mov
or
sarb
jmp
pmaxub
std
loope
jp
push
test
sbb
inc
mov
pop
or
pop
sbbl
fadds
pusha
adc
pop
jnp
adc
sbb
and
scas
adc
or
clc
data16
or
imul
sarl
sbb
sub
cmp
mov
aaa
push
fwait
and
sub
loopne
inc
mov
test
mov
dec
jmp
sarl
push
das
xor
repz
push
ret
jl
leave
cmpsb
push
push
stos
xchg
push
cltd
inc
fcmove
sbb
inc
test
mov
pop
mov
jne
aad
out
pop
shl
push
gs
clc
push
mov
outsb
lret
cmpsl
in
adc
xchg
pop
test
or
jle
clc
push
adc
out
mov
push
les
xor
in
xor
negl
push
rcr
ljmp
sahf
loop
jge
mov
jmp
push
aas
jnp
mov
mov
insl
mov
loop
push
jge
or
xor
xchg
je
arpl
rcrb
xchg
sbb
icebp
push
sti
push
notb
ja
iret
lret
fiaddl
and
lcall
popa
popa
inc
ret
jne
inc
insb
mov
sbb
jmp
frstor
andl
jmp
or
cmp
cltd
insb
pop
mov
push
lock
inc
mov
int3
xor
push
inc
cwtl
fnstsw
rol
in
jp
fsubr
mov
add
dec
inc
call
outsb
cmp
ficoml
pop
add
add
sub
movsl
mov
push
pop
push
dec
xchg
and
out
call
sbb
hlt
test
lret
adc
and
lret
jns
jge
lret
lods
lods
push
adc
test
xchg
cltd
cltd
aad
push
adc
in
mov
push
into
stc
xchg
dec
xor
popf
inc
lret
inc
pop
cmp
cli
sub
mov
mov
and
and
lds
jp
out
inc
or
or
xchg
dec
imul
enter
sti
inc
inc
inc
leave
mov
dec
pop
rolb
jmp
jno
xchg
addr16
enter
fldenv
int3
or
std
test
push
push
fdivrs
sbb
int3
out
js
cmpsl
pop
in
iret
mov
inc
mov
inc
sub
icebp
ret
repz
push
xchg
push
int
mov
out
pop
pop
dec
cmp
psllw
inc
push
xchg
cli
aaa
stos
loopne
decb
into
inc
pop
out
jns
cmp
push
mov
stos
lods
mov
js
mov
adc
mov
pop
out
mov
jno
pop
xor
adc
pop
pop
lcall
mov
dec
push
or
imul
adc
ficoms
or
add
andl
mov
pop
jo
mov
sub
movsl
push
mov
xchg
lahf
dec
cmp
cmpsb
mov
xchg
cmpl
iret
xor
mov
xchg
mov
xchg
outsb
mov
fdivs
add
ret
into
mov
pop
rclb
js
push
xlat
cmp
js
push
fs
xchg
std
sub
andl
push
push
jl
adc
mov
or
decb
scas
inc
push
mov
or
and
xchg
imul
xor
cltd
hlt
jmp
stos
mov
or
or
cmp
pop
dec
fidivrl
lret
mov
mov
orb
adc
stos
sbb
sub
js
fs
rolb
pop
mov
leave
mov
add
dec
rcr
jmp
pop
jb
xchg
stos
xor
out
not
mov
mov
and
cltd
or
mov
bound
loope
std
xchg
pop
or
pop
jp
or
fcomps
mov
out
mov
xchg
lahf
pop
ficomps
mov
jae
and
jo
xchg
rep
pop
roll
adc
fistpll
mov
out
jl
cmp
jl
fwait
test
lahf
add
pushf
fucomip
sarb
sti
lahf
in
xor
jno
cmp
mov
outsl
ds
or
rcll
jp
mov
in
sbb
popf
cs
cs
mov
aam
jae
out
rolb
sbb
cmp
adc
repz
repz
outsb
xor
add
outsl
rcr
test
in
and
outsb
in
xor
jo
cmp
push
sahf
inc
lret
jno
inc
aam
fcomps
sub
cmp
dec
dec
lods
dec
je
push
fsubrp
scas
add
adc
lahf
jns
bound
dec
outsl
pop
adc
jmp
sub
xchg
fisubrl
pop
ljmp
mov
dec
inc
insl
es
fsubs
jg
popf
addr16
push
cmc
dec
or
popa
je
push
xor
jecxz
inc
xor
or
jle
aas
std
aad
or
sub
adc
adc
cmp
test
popf
pop
push
repnz
imul
jns
lret
imul
fsts
xor
jns
out
mov
mov
lds
mov
push
xor
and
push
mov
pop
roll
mov
sub
sbb
mov
arpl
lea
mov
lcall
arpl
sbb
mov
rcll
in
add
loop
push
loopne
push
adc
jae
imul
add
dec
test
and
mov
repnz
cmp
arpl
data16
fs
mov
adc
out
notl
lcall
push
mov
lcall
mov
jmp
inc
or
push
std
sub
mov
repnz
sub
and
mov
add
outsb
dec
test
or
add
dec
test
jbe
rcrl
and
gs
nop
xor
xor
out
add
rorl
xor
sbb
ror
sub
push
pop
out
fwait
mov
pop
xor
jmp
sbb
cli
pop
push
cmc
loop
bound
pop
push
cmp
loop
xchg
mov
int3
mov
inc
sub
stos
xor
loopne
sub
mov
loop
mov
cmpsb
inc
test
push
sub
jg
cmp
lret
sbb
movsl
cltd
sub
xor
rolb
or
ds
xchg
inc
dec
iret
jp
mov
fsub
and
mov
and
ss
mulb
arpl
cmpsb
arpl
data16
test
cmpsl
xor
xchg
out
int
shlb
hlt
arpl
or
mov
dec
add
sti
mov
or
dec
fidivl
mov
xor
sbbl
push
aas
ret
xchg
daa
cmp
pop
xor
push
xchg
sub
loopne
add
pop
ljmp
push
scas
jmp
imul
lods
repnz
jo
cmp
cmpsl
aas
out
sar
loopne
adc
jg
inc
stc
xor
addr16
jecxz
push
dec
cmc
notl
jne
sub
jmp
scas
stos
push
adc
aas
sbb
js
xor
inc
jo
fdivrl
xor
cmc
mov
stos
pop
xor
push
shlb
fdiv
ja
jnp
dec
fwait
mov
roll
jl
jl
jmp
lret
dec
dec
push
cli
mov
add
sahf
and
jg
mov
adc
data16
rcrl
test
or
out
std
push
cmc
movsl
insb
mov
pop
add
xlat
mov
jno
inc
mov
inc
bound
xchg
adc
add
das
imul
mov
push
push
pop
fwait
sub
ds
mov
sbb
and
mov
imul
stos
sti
xchg
imul
mov
imul
popf
je
shrb
xchg
fcomi
cs
rolb
jb
pop
arpl
sub
or
mov
ficompl
fs
jne
aad
scas
and
xlat
sub
test
dec
mov
scas
push
addr16
rorl
cwtl
cli
jae
xchg
repnz
add
pushf
adc
inc
mov
out
lcall
sahf
adc
inc
mov
sarb
in
mov
and
xchg
mul
bound
fs
out
push
xlat
push
jo
jg
std
xchg
loopne
xor
sub
or
ret
xor
movsb
mov
aaa
jo
push
mov
ds
pop
js
jne
test
js
add
repnz
push
lods
das
jmp
sub
or
dec
push
lds
in
inc
inc
lock
dec
pop
sub
inc
icebp
mov
mov
pop
nop
fdiv
push
jbe
cmpsb
scas
sbb
out
stc
add
in
sbb
sbb
or
mov
mov
and
mov
js
nop
mov
sbb
out
inc
shl
lret
cltd
jge
and
push
sub
popf
adc
rolb
jne
cmpl
mov
and
mov
fs
imul
cwtl
jp
adc
in
mov
fsubrp
rclb
shrl
pop
daa
push
mov
test
pop
fwait
call
out
test
sub
push
andb
inc
icebp
adc
lods
sub
fdivrl
or
mov
pop
arpl
cmp
xchg
pop
adc
and
pusha
mov
insb
xchg
cmc
mov
flds
mov
pop
popa
inc
test
test
mov
xchg
insl
adc
outsb
stc
push
sbb
aam
xor
sahf
imul
scas
xor
fwait
pop
and
shll
lock
or
adc
pop
mov
in
popa
insl
test
rcll
es
pop
mov
sbb
clc
cmp
jbe
lods
outsl
pop
dec
test
cmp
scas
cli
hlt
scas
pop
insl
sbb
jns
int
push
push
lcall
sbb
daa
mov
les
sub
and
fisubs
sub
xlat
rol
inc
sbb
mov
push
lcall
jecxz
pushf
mov
cmp
outsl
imul
and
dec
pop
repnz
pop
es
test
cmp
ljmp
into
fiadds
loopnew
adc
push
push
jb
mov
mov
adc
push
cli
stos
xor
pop
bound
aas
push
insb
aas
hlt
lds
sub
pop
cwtl
dec
out
fs
vpexpandd
loop
cltd
mov
dec
cmp
adc
push
push
mov
xor
repz
imul
xchg
adc
adc
push
int
mov
xlat
cmp
cld
outsl
stc
ss
push
push
enter
sti
mov
out
shll
fisttpl
mov
xlat
cmp
jl
xor
push
loop
push
mov
xor
sbb
mov
dec
sbb
sbb
mov
push
out
inc
stc
not
loope
popa
push
test
adc
adc
push
lret
cld
sub
xchg
iret
or
test
pop
mov
mov
ret
sub
out
sbb
push
mov
pop
sbb
xlat
inc
out
jb
xor
rcl
jae
or
scas
or
add
or
movsb
xorl
xor
sti
and
ret
inc
fmull
adc
cld
jmp
mov
bound
adc
sub
or
xor
in
inc
adc
inc
aaa
add
filds
mov
cs
jno
jno
push
mov
mov
mov
aas
or
stc
std
xchg
mul
push
or
xor
push
push
xor
and
sbb
orb
sub
add
popa
and
roll
leave
lret
inc
out
ror
clc
cli
in
in
pop
or
in
addb
and
les
pop
shll
cmp
jp
stos
adc
das
rcll
or
sbb
aam
or
pop
mov
sti
das
ljmp
adc
jns
les
push
push
sarl
sub
adc
push
pop
in
inc
loopne
xchg
cmpl
rorl
addr16
addr16
push
enter
leave
lahf
mov
sub
or
das
rcl
inc
cmpsl
add
sbb
ss
hlt
pushf
cmp
js
push
sti
push
cmpsb
aas
das
inc
mov
mov
dec
lods
xor
push
xchg
pop
xchg
lcall
loop
in
inc
push
xor
aad
ja
ds
nop
and
das
sub
in
data16
repnz
push
push
rcrb
mov
and
add
out
adc
call
sub
inc
push
xchg
jno
pusha
in
push
mov
mov
mov
sbb
shrl
fcoms
add
loope
jp
pop
cld
test
pop
arpl
dec
or
inc
mov
das
pushf
add
pop
sbb
sarl
lahf
pop
pop
sbb
lcall
or
pop
mov
dec
in
xchg
mov
popa
xchg
push
scas
add
stc
rorl
push
arpl
arpl
dec
push
cmpsl
jp
jp
push
stos
push
pop
mov
xchg
fstpl
pop
add
adc
xor
xchg
pop
clc
push
ficoms
addl
and
popa
jmp
sti
cs
dec
mov
xor
xor
sti
cld
xorb
jns
ds
inc
fdivs
jo
jl
sbb
mov
jge
outsb
lods
mov
push
sbb
inc
int
cld
fsub
mov
mov
mov
adc
add
mov
xor
and
jb
fsubrl
sub
sub
jg
das
and
pop
out
cltd
scas
cmp
mov
adc
mov
mov
cmpsb
ret
adc
add
out
sub
out
ficompl
xor
sbb
xor
sahf
pop
out
jns
push
ret
mov
xchg
push
addr16
add
add
call
and
adc
jne,pt
jae
xchg
adc
inc
cli
imul
je
sahf
rol
jbe
push
cld
or
aad
into
cmp
sarl
in
cmp
cmp
xor
clc
cmp
dec
xor
cltd
cmp
mov
lock
push
jl
or
test
orl
or
stc
mov
test
rcr
dec
sub
cltd
bound
push
imul
sub
sbb
jo
mov
jecxz
test
repz
pop
jl
fnstsw
push
mov
cmp
push
sahf
jp
sub
mov
cmp
sub
movsb
lea
jmp
mov
add
decl
insl
test
lods
xchg
hlt
xorl
sbb
fisttps
xlat
loope
lock
cld
lock
pop
add
in
push
push
ror
aas
jnp
adc
push
pop
sahf
out
sar
out
aas
cltd
jl
and
movsb
call
test
out
mov
xor
xchg
mov
mov
shr
call
ss
ss
cmc
dec
ffree
mov
sbb
popa
push
sub
cwtd
xchg
jno
sbb
aam
in
sub
or
mov
xchg
lds
psubsw
inc
push
mov
push
mov
fs
mov
jnp
jge
out
ja
fstpl
cmp
leave
xchg
fs
orb
inc
mov
add
adc
adcb
xor
stos
add
test
and
xor
add
pusha
pop
push
sub
imul
js
xchg
inc
mov
insl
mulps
repz
call
test
inc
xchg
adc
mov
int3
push
out
sub
sub
pop
in
repz
ds
hlt
out
iret
mov
data16
arpl
adc
int3
xchg
loope
and
sub
mov
add
or
stos
and
or
jg
sub
in
mov
in
fmull
add
stc
pop
popf
repz
xorl
xchg
insb
jg
or
inc
pushf
mov
outsl
lds
dec
pop
out
xchg
fnstenv
adc
mov
arpl
jns
push
into
cld
sbb
out
mov
dec
std
fucom
sub
bound
mov
pushf
adc
nop
cmpsl
or
xor
add
pop
inc
sbb
xor
or
mov
jge
mov
and
mov
xorl
divl
push
pushf
lods
xor
nop
lea
les
push
mov
repz
cmp
mov
popf
and
sbb
pushf
xchg
add
cmp
lret
pop
outsb
cmc
fists
and
or
pop
sub
shlb
cmpsb
cld
cwtl
jns
sbb
andl
in
pop
inc
insb
mov
jg
jl
aas
or
js
mov
mov
cmp
xor
bound
xor
mov
roll
jecxz
cwtl
jle
shrl
int
stos
xor
mov
and
nop
lock
fs
flds
mov
dec
mov
pop
arpl
aas
fmull
sbb
push
jecxz
jge
pushf
cmp
xchg
jp
xchg
adc
sbb
dec
fcomps
stos
out
pop
cmp
mov
jl
pop
fistl
in
xorl
mov
and
in
scas
xchg
sbb
aam
mov
mov
ffreep
pop
fistpll
sbb
xchg
repnz
pop
icebp
es
add
push
dec
iret
mov
mov
cmp
cmp
shl
ljmp
stos
add
cmp
test
jne
and
xorb
mov
gs
push
cmp
and
lcall
mov
xchg
rcll
dec
lock
cmp
rolb
xchg
xchg
mov
out
inc
daa
adc
dec
jns
mov
cmpsb
dec
xor
addr16
and
xchg
dec
lds
xchg
jl
sub
into
add
dec
jb
mov
ja
mov
enter
pushf
and
xchg
and
arpl
call
cld
push
gs
add
sbb
and
jp
mov
adc
jbe
daa
mov
mov
push
in
pushf
xchg
and
sub
outsl
xor
pushf
mov
push
arpl
pop
xchg
mov
out
loope
jne
inc
pushf
mov
cmc
adcl
imul
mov
jnp
and
push
adc
xor
xlat
add
pop
push
dec
popa
pop
pop
mov
mov
shl
aam
jnp
mov
mov
lds
fstl
cli
mov
xor
daa
push
testl
and
xchg
fnstenv
js
mov
orl
cmp
rcll
pop
add
jo
adc
mov
ret
mov
pop
decb
xchg
arpl
jle
pop
push
insb
gs
jbe
std
stos
pop
or
sub
or
dec
outsl
test
dec
inc
mov
mov
je
insl
loop
les
xchg
sub
mov
fsubrp
andl
imul
adc
loopne
xchg
xchg
add
and
dec
dec
dec
push
fnstsw
aas
gs
int3
and
insl
push
ja
fstpl
enter
xlat
dec
leave
xor
and
inc
pop
sbbl
dec
ja
shl
mov
adc
mov
leave
and
bound
shll
pop
ja
sbb
push
repz
fiadds
jge
jb
mov
test
sbb
icebp
inc
gs
sahf
sub
or
push
out
out
xchg
push
xchg
xor
call
shlb
imulb
add
add
push
xor
popa
js
jns
popa
or
jns
outsl
dec
add
mov
cwtl
sbb
mov
pop
jl
mov
xorb
inc
dec
mov
jge
xchg
pop
fbstp
popf
es
and
mov
cltd
cmp
out
xchg
cwtl
repnz
cmpsl
pop
xchg
jnp
dec
testl
and
mov
shl
cmpsl
movsl
out
repz
mov
mov
xchg
gs
imul
lods
push
jne
and
aas
pushf
lret
lea
lret
arpl
and
pusha
fs
mov
nop
xchg
loop
dec
mov
lret
push
mov
dec
jnp
shrl
and
gs
mov
in
sub
pop
or
adc
adc
push
fwait
push
xchg
outsb
xchg
mov
cmpsl
es
fs
adc
orb
dec
scas
iret
dec
stos
int3
repnz
pop
icebp
sub
mov
jae
out
xchg
aas
std
mov
popl
dec
stos
fs
cmpsl
mov
fsts
repnz
lret
test
mov
or
inc
and
mov
fprem1
dec
jnp
inc
les
pushf
jmp
xor
pop
lret
push
std
add
jecxz
mov
outsb
in
sub
sub
jge
stos
push
add
mov
sbbb
movsl
cmp
inc
and
cmp
inc
xlat
loopne
hlt
xchg
dec
push
adc
mov
jnp
fstps
daa
sarb
jl
std
add
lahf
xchg
ss
in
or
shl
push
arpl
xlat
pop
test
add
sbb
gs
pop
pop
push
mov
movsl
xchg
push
rcrb
rcll
lods
sbb
adc
cwtl
dec
jmp
pop
pop
inc
pop
cmp
xchg
cld
insb
test
jp
push
lods
inc
jmp
push
lcall
and
mov
repz
loopne
test
add
lret
and
cmc
lods
test
adc
jg
xlat
jge
push
sub
incl
daa
inc
and
lret
cmp
push
push
and
mov
push
lret
sbbb
test
stos
pop
dec
addb
in
ror
cmp
gs
insl
cmpsl
aas
imul
dec
cmpb
lret
push
mulb
or
fs
cmp
aas
mov
repz
inc
hlt
int3
pop
loope
push
or
and
mov
fisubl
jmp
jns
movsl
call
in
decl
or
mov
mov
in
push
js
cmpsl
dec
mov
int
sbb
cltd
pusha
adc
sbb
mov
bound
adc
push
jno
push
test
adcl
inc
sar
rorb
xchg
pop
lret
sbb
fucomp
jae
dec
sub
mov
fiadds
das
test
aas
pop
xchg
mov
les
sarb
mov
sahf
sti
jmp
mov
mov
orl
lods
mov
icebp
in
xor
fisubrs
aaa
pop
adc
sub
scas
int
pop
jno
fstpl
mov
enter
rcrb
lods
cmp
pop
and
daa
or
jbe
arpl
xchg
das
cmp
cmp
jmp
lds
jp
push
shl
mov
shr
mov
fs
in
leave
sub
ds
imul
sbb
decb
add
jne
and
mov
jne
jnp
out
inc
enter
and
insb
push
xchg
sbb
iret
inc
imul
test
mov
sahf
adc
mov
jno
jg
jnp
push
sahf
or
in
lock
mov
test
arpl
xor
mov
or
xchg
int3
xor
addb
int
scas
adc
movsl
add
add
insb
cli
inc
ljmp
mov
mov
inc
std
hlt
fdivrs
int3
ja
sub
xor
cmpsl
sbb
aam
enter
mov
pop
lcall
xchg
add
les
in
fbld
sbbb
loop
xchg
es
lcall
adc
add
pusha
xlat
aaa
repz
xchg
inc
add
xor
movsl
popf
ja
repz
push
lret
fistps
ljmp
lret
pop
pop
adc
jg
mov
and
es
jp
adc
pop
dec
fimuls
cmp
ljmp
arpl
lret
hlt
mov
fwait
hlt
push
push
or
leave
sar
and
cs
inc
shlb
xor
cli
and
push
cltd
pop
pop
mov
dec
bound
xor
pop
fs
xchg
fstl
dec
cmpsl
jns
mov
add
daa
test
mov
jmp
hlt
jo
cld
arpl
mov
pop
sub
sahf
rcrl
adc
mov
jbe
stos
dec
rorl
add
test
repnz
xlat
xchg
mov
dec
loopne
std
ficoml
and
ds
lcall
movsb
cli
sub
mov
dec
xchg
jno
into
or
and
cmp
test
mov
pop
popa
fs
jle
pop
call
xor
les
pop
sti
pusha
pop
push
dec
jo
add
xchg
idivb
xor
cli
stos
mov
mov
nop
lret
jno
cwtl
xorb
loope
jnp
jl
mov
imul
iret
ja
popa
rorl
add
mov
js
xchg
fcomip
test
aas
xor
jae
aaa
in
insb
cs
and
int3
cmpsb
mov
add
fstp
in
cmp
subl
stos
repnz
dec
or
fstpl
lock
lcall
mov
push
enter
ret
cmpsb
movsb
vpminsw
or
mov
cmp
sahf
stos
sbb
or
mov
jo
push
pop
movsb
aaa
divb
mov
pushf
jo
jno
hlt
imul
sub
cs
mov
into
mov
shl
xchg
in
ds
jg
into
pop
roll
push
mov
inc
leave
or
bound
cmp
inc
popf
xchg
pop
fisubs
mov
or
clc
lods
push
sbb
mov
xchg
dec
sbb
hlt
bound
push
lods
lret
xchg
icebp
lcall
dec
int
mov
pop
add
dec
xchg
xor
clc
movsl
pop
pop
mov
dec
inc
mov
fdivrp
insl
imul
fstps
and
mov
cmp
mov
add
add
jl
and
das
ret
jecxz
dec
pushf
insb
dec
test
in
or
fisubrs
and
jecxz
movsb
sub
ret
mov
jae
pop
dec
ljmp
cmc
nop
push
cmp
fs
mov
jb
sub
loope
dec
cmc
sahf
inc
pop
xchg
out
jecxz
pop
jne
add
and
dec
sahf
cld
js
out
cmp
adc
clc
cmp
cld
adc
add
inc
repnz
lods
push
test
repz
lahf
repz
cmc
subl
and
insl
lea
push
out
dec
aaa
aad
adc
xchg
pop
add
xor
and
shrl
dec
leave
cmp
popf
cmp
roll
dec
jnp
push
jnp
jnp
push
pop
sub
jo
mov
fisttpl
addr16
or
cmp
push
subps
iret
add
mov
add
pop
cmp
jnp
push
push
jp
je
mov
lret
jecxz
js
inc
out
ja
xchg
outsl
loope
ja
fdivp
sbb
add
or
fs
sub
cli
xlat
and
jg
out
out
ds
adc
ret
jno
mov
xor
aam
add
inc
xchg
mov
mov
cld
jp
movsl
aas
dec
btc
adc
cmp
mov
ffreep
lcall
mov
mov
jp
mov
push
pusha
sub
outsb
ret
mov
out
sbbl
out
add
cmp
add
xchg
jnp
imul
roll
xor
out
stos
mov
bswap
or
adc
das
mov
imul
popf
rorb
pop
sbb
xor
sub
je
aaa
pusha
pop
fisttpll
fsub
mov
call
ss
dec
xlat
test
sub
pop
pushf
push
popa
adc
mov
ret
jle
int
pop
and
outsb
inc
in
shl
mov
nop
mov
imul
xchg
push
aad
loopne
mov
or
fisubs
outsb
in
or
jb
sbb
mov
xchg
out
lret
enter
mov
aad
inc
call
test
jecxz
sub
push
mov
adc
js
adc
ja
sahf
cmp
adc
fildll
arpl
pop
dec
sub
ror
mov
mov
icebp
addb
lea
in
and
adc
xchg
pop
add
movsl
clc
push
adc
xor
push
inc
pop
mov
sti
out
jno
fsubrl
cmp
das
jb
iret
je
or
xchg
out
adc
pop
mov
cwtl
mov
and
adc
and
jl
or
aaa
icebp
sahf
mov
in
cmp
jbe
and
mov
fisttpll
cmp
jmp
adc
es
push
fistpll
hlt
std
outsb
enter
scas
adc
push
call
sbb
ret
sub
or
mov
mov
stc
daa
shlb
and
push
iret
in
sbb
scas
push
mov
and
xor
jnp
jnp
xchg
int
mov
data16
mov
mov
jnp
test
addl
inc
sbb
inc
push
test
xchg
and
lea
sahf
xchg
or
lods
or
cmp
sub
jae
and
aaa
das
mov
loope
fsubl
xchg
lods
les
push
mov
inc
imul
adc
cmp
icebp
xchg
addr16
mov
test
cmc
cmp
inc
ret
leave
pop
push
mov
push
and
jg
or
xor
les
lods
fmul
add
and
repnz
lds
imul
and
cmpsb
rolb
mov
cmp
sub
mov
loop
pusha
pusha
cpuid
fmull
sbb
int
lahf
lock
int3
out
pop
adc
or
mov
mov
mov
mov
into
sub
movsb
stos
pop
mov
sbb
imul
push
cmc
mov
mov
out
lods
lret
out
lods
in
pop
ret
js
xchg
es
mov
test
into
icebp
sbb
xchg
jbe
mov
pop
ficoms
mov
sbb
sbb
mov
in
and
clc
aaa
pop
push
mov
std
cli
inc
cmp
adc
repnz
popa
sarb
xchg
inc
pop
jb
ds
mov
lret
and
aaa
in
out
test
sbb
sbb
add
aam
cmp
cld
push
push
jne
stc
or
xchg
jo
jmp
add
add
inc
adc
repnz
sub
jns
dec
bound
scas
js
mov
and
ret
imul
pop
ret
outsl
cmp
xchg
lock
adcb
dec
inc
pop
ja
add
loopne
xor
mov
push
cmp
cld
out
arpl
xchg
outsb
cs
and
cmovp
pop
scas
sub
sbb
lahf
mov
pusha
adc
cmp
lods
aam
lcall
fnstcw
cmc
stos
xchg
pop
call
leave
mov
adc
rcrb
clc
pop
add
adc
dec
sbb
or
icebp
cmpsb
sti
sbb
cmc
lock
lret
mov
cmpsb
rcll
xchg
cli
lahf
out
sbb
mov
test
mov
add
push
shll
dec
aas
cmp
xchg
mov
and
inc
pushf
and
shll
xchg
test
adc
fldcw
dec
cmp
sub
add
fisubrs
aas
cs
ret
mov
pushf
dec
xlat
ret
jne
in
add
mov
cmp
cwtl
shlb
es
jo
lods
lahf
loope
push
sbb
add
jl
in
dec
orb
dec
xchg
movsb
push
out
lahf
mov
cld
push
loope
addr16
jle
fsub
push
mov
xchg
mov
cltd
leave
add
pop
xchg
cwtl
jp
push
xorb
out
or
or
xchg
fsts
jns
mov
jmp
dec
mov
sarl
jns
sub
dec
cmpsl
pop
mov
cli
outsb
je
push
sbb
fimull
dec
aam
cmp
sarl
mov
cmp
fnstenv
ret
enter
mov
push
xchg
add
leave
push
dec
lods
and
in
sub
inc
arpl
inc
jl
cmp
movsl
test
cmp
outsl
dec
mov
xchg
cmp
int
inc
lahf
cld
enter
push
cmp
or
pop
sbb
outsb
sbbl
xor
ljmp
dec
rorb
js
adc
arpl
jb
lahf
aam
movsb
xchg
push
xchg
in
mov
dec
scas
cltd
pop
adc
inc
fwait
subb
fs
or
mov
lods
inc
lcall
das
xor
rorb
sub
popa
movsb
xchg
idivb
bound
mov
push
ja
cmp
mov
call
sbb
je
dec
mov
fstps
dec
dec
clc
add
mov
xor
or
mov
imul
out
xchg
or
or
pop
dec
jb
jl
test
in
int3
loopne
subb
insb
mov
mov
sar
xor
dec
imul
and
inc
sub
stos
shr
dec
testb
rcrl
ja
lahf
and
and
sub
pop
pop
push
jnp
nop
push
cmpsl
push
jle
add
scas
test
push
mov
aam
mov
add
xchg
xor
gs
cmpsb
sub
ret
mov
push
jns
rclb
mov
mov
sub
loope
dec
mov
in
subb
jp
push
lea
jnp
push
jnp
xor
or
fbstp
mov
adc
dec
inc
inc
jne
mov
or
mov
imul
mov
out
neg
icebp
cmpsb
inc
dec
mov
icebp
imul
fmuls
fistpll
loop
mov
or
in
adc
leave
pop
push
jo,pt
jle
leave
jge
stos
pop
xor
mov
lret
outsl
xchg
fsubrl
outsl
ja
cmp
mov
pop
popa
push
mov
and
xchg
popa
dec
add
stos
mov
jo
std
add
dec
popf
cmp
push
imulb
mov
jo
inc
lcall
jnp
mov
cli
adc
cmc
movsb
dec
mov
in
inc
mov
sbb
pop
cmpsl
gs
inc
jno
dec
push
fmuls
lcall
cmpsb
insw
cli
call
cwtl
mull
inc
or
mov
dec
andl
add
sti
sbb
repz
cld
push
xor
xchg
and
mov
int3
push
cli
data16
or
jmp
insb
pop
cmpsl
and
ss
sbb
pop
jne
cmp
adc
rcrl
out
ss
sahf
sub
lcall
lahf
cli
fimuls
adc
and
mov
mov
pop
push
dec
js
sti
cmpsb
jge
sub
mov
arpl
add
dec
and
loope
xchg
sbb
push
jne
adc
aaa
xchg
clc
add
mov
loopne
cli
emms
dec
add
mov
fs
in
and
mov
jecxz
fstp
jns
popa
ret
adc
lahf
add
push
js
dec
push
or
inc
mov
stos
jnp
cmp
cmpsl
dec
popf
mov
mov
add
add
jmp
and
add
decl
xor
mov
add
sbb
push
xchg
push
fcomps
xor
scas
ja
cwtl
pop
mov
into
xchg
dec
xorl
xchg
or
divb
pop
push
imul
xor
fnsave
icebp
icebp
mov
jmp
sub
jno
bound
inc
xchg
fidivrl
call
mov
fs
into
fimull
or
jne
rorl
push
mov
push
jg
pushf
adc
cmovl
subl
es
or
fistl
add
dec
adc
pop
pushf
out
pop
jp
mov
sub
add
mov
imul
adc
test
les
popa
daa
in
bound
or
mov
and
insb
pop
and
dec
sub
push
fsubrs
fisubrl
enter
pop
add
leave
push
aam
fmuls
pusha
hlt
lods
sbb
fisubs
xchg
scas
adc
push
pop
mov
jnp
mov
mov
add
pop
cli
xor
xchg
jne
or
xor
scas
call
sub
in
cwtl
pop
pop
cmp
mov
lahf
outsl
xor
cmpl
in
ror
bound
aad
mov
dec
xchg
dec
mov
psubusb
dec
push
or
xchg
fildll
aaa
gs
and
or
imul
jg,pt
and
mov
call
enter
insl
inc
dec
pop
dec
ljmp
div
push
dec
lods
loope
cs
sahf
jns
mov
fwait
dec
dec
ja
out
iret
mov
push
test
pop
add
dec
mov
pushf
mov
iret
and
mov
mov
pop
imul
stos
cmpsb
int
bound
mov
or
lods
movsb
sbb
cmpsl
mov
fadd
push
ret
push
mov
mov
shl
mov
hlt
mov
ret
aaa
out
lret
xchg
iret
ljmp
sahf
adc
sbb
cmp
shlb
inc
pop
push
jmp
stos
add
aas
rcll
mov
dec
rorl
lret
jp
fdivrl
add
push
adc
pop
adcl
dec
mov
cmp
call
or
aaa
sub
or
jg
lods
push
push
std
jnp
add
jne
mov
test
test
call
repnz
mov
fwait
mov
ss
das
mov
adc
gs
daa
add
lcall
out
xchg
mov
call
sbb
inc
cld
dec
mov
int
popa
mov
jecxz
jmp
scas
add
inc
jg
stos
pop
dec
push
dec
out
loop
cs
adc
mov
pop
push
repz
ffree
mov
testl
subb
add
out
mov
cmp
inc
das
jbe
das
sub
jp
pop
jmp
jmp
sarl
nop
mov
ret
and
inc
lret
xor
dec
adc
or
fsubr
hlt
subl
mov
cs
cmp
push
mov
dec
rcrb
loop
mov
jl
xor
sti
xor
js
jb
adc
pushf
out
xorl
dec
cs
pop
inc
inc
addb
adcl
push
lea
pop
psubsw
mov
stc
pop
jp
loopne
push
inc
movsl
mov
aas
pop
bound
out
in
fdivrs
adc
dec
mov
cwtl
and
xchg
clc
loope
jp
xor
jno
push
jno
shrb
call
mov
cmc
shrl
sub
cmpsl
push
stos
mov
jo
scas
les
rclb
add
adc
call
mov
mov
call
js
rcrl
mov
jle
aad
jmp
fisubs
pop
mov
pop
adc
cs
lret
lock
pop
xchg
in
fcomip
adc
push
dec
dec
test
mov
xlat
cmp
sub
mov
add
ficompl
mulb
sti
cltd
stc
sub
aas
cmpsb
shrb
sbb
mov
inc
lea
cmp
cli
cmpsl
xchg
nop
pop
decl
or
imul
lret
mov
es
outsb
and
outsl
lret
jge
in
mov
xchg
sub
cmp
ja
js
cwtl
xchg
shll
add
jns
sbb
shll
popa
xor
sub
mov
enter
scas
adc
outsl
pop
lea
push
shlb
cmc
pop
jp
add
jle
ss
sbbb
push
lret
mov
sti
or
sbb
push
loop
push
or
mov
leave
mov
fmuls
cmp
xor
mov
outsl
rcrl
push
xchg
inc
test
and
adc
adc
and
cwtl
and
addr16
cmp
aad
insl
xor
aam
test
jle
insb
dec
xchg
cs
stos
sbb
xlat
divb
aad
decb
inc
popa
push
in
jbe
out
xor
pop
stos
push
ja
ja
adc
cs
enter
sub
stc
or
stos
rorb
clc
jl
pushf
ss
lret
mov
sub
jno
int3
xor
das
push
shl
scas
adc
dec
and
ds
negb
inc
xchg
test
jae
daa
dec
das
movsb
clc
push
mov
sbb
test
jb
mov
or
fsubrs
test
jle
enter
incb
push
xor
mov
push
mov
pop
xchg
pop
loop
sbb
dec
push
xor
call
jb
mov
out
mov
outsl
mov
popf
div
std
jo
mov
popl
ljmp
inc
mov
leave
cmc
inc
xchg
push
push
jo
in
push
and
sub
cmp
dec
dec
mov
push
nop
jno
push
fsts
pop
popf
fucom
mov
stc
jl
sbb
xor
mov
mov
pop
leave
add
jmp
xlat
es
pop
sti
mov
and
adc
xchg
cld
inc
pop
xor
cld
sbb
fs
add
imul
pop
jmp
mov
mov
ljmp
sbb
inc
mov
xor
in
mov
sbb
inc
shlb
gs
cmp
mov
jb
aam
in
in
jae
push
gs
xor
mov
mov
jae
aad
or
xchg
outsl
cmc
sbb
dec
sbb
fisttpll
andb
add
dec
or
movsb
jae
mov
adc
out
mov
and
mov
aad
xor
lret
sbbl
les
jp
xorb
sar
jp
push
lret
jg
icebp
mov
adc
test
xor
fcoms
mov
stos
adc
jo
loop
jp
stos
out
imul
test
adc
pop
pushf
push
or
fisubs
cmc
sbb
stc
mov
sbb
push
sub
or
push
push
movsb
inc
imul
cmp
lcall
xchg
aas
dec
cmpsl
mov
sbb
out
sbb
dec
daa
cltd
cli
rcl
xchg
cmp
test
fcomi
adc
jb
sub
mov
inc
mov
out
or
pusha
inc
sub
push
mov
cltd
aas
fmul
dec
jns
push
inc
lret
cmp
jl
jle
mov
cmp
aas
cld
or
push
add
mov
adc
icebp
lret
adc
adc
outsb
cmp
aaa
pop
xor
mov
imul
in
cltd
push
cwtl
gs
fsubl
idiv
fsubrp
and
and
fwait
aam
loope
lcall
hlt
and
dec
and
push
into
hlt
mov
adc
mov
mov
push
sub
lods
cmpb
add
fs
and
out
cmp
xchg
and
jmp
js
in
adc
or
lcall
jg
ja,pt
stos
push
xchg
and
inc
movsl
xchg
sbbl
out
sbb
mov
jl
pop
pop
cmp
icebp
outsl
xor
cmp
inc
sub
stos
popa
and
sub
dec
test
pop
nop
scas
sti
lods
inc
es
xchg
add
outsl
mov
push
jmp
leave
or
push
fnstcw
cmp
cs
mov
add
push
pop
clc
xor
cmpsl
mov
lret
mov
jge
cmp
dec
aaa
aam
pushf
mov
mov
insl
outsb
inc
out
pushl
add
add
dec
sti
jle
pop
push
clc
aas
dec
adc
push
cwtl
push
mov
xorb
push
push
icebp
pop
mov
pop
xchg
push
xchg
mov
icebp
imul
dec
xlat
in
or
mov
fdivl
xor
scas
pushf
mov
jg
add
movsl
inc
orb
xchg
mov
or
divl
fs
sbbb
mov
aam
mov
stc
sarb
mov
add
test
scas
pop
jl
pop
and
mov
and
stc
fistpll
lea
cmp
inc
xor
pop
cmp
arpl
pop
cmpsl
xor
jl
mov
mov
mov
pop
into
mov
adc
insb
cwtl
ljmp
adc
shlb
mov
sbb
xor
add
cmp
leave
cmp
movsb
jno
jle
or
mov
nop
cmp
imul
mov
test
add
fwait
js
add
jle
leave
cmc
loop
imul
fisubs
adc
pop
xchg
xchg
xchg
sub
mov
inc
stc
std
jl
xor
adc
adc
xor
cli
add
pop
ljmp
inc
mov
fistl
cli
lea
cmc
dec
push
sub
xchg
xor
jbe
enter
jns
stos
test
mov
popa
cmpsb
lock
or
cmp
je
cltd
jmp
daa
inc
push
sub
ds
lcall
nop
mov
mov
ds
sbb
xchg
inc
out
test
add
scas
fdivl
and
xchg
shlb
jne
dec
xor
dec
enter
inc
jle
push
mov
xchg
sbb
and
add
mov
sub
mov
lds
lcall
shll
and
scas
lret
sub
push
mov
xor
mov
cli
mov
pop
mov
scas
xchg
iret
add
daa
test
lea
jno
or
out
xor
int
aas
mov
aam
lods
loopne
mov
mov
call
mov
leave
or
pop
fxsave
scas
sbb
inc
fiaddl
orb
lahf
cmc
inc
faddp
jge
xchg
sar
aad
int
inc
xchg
or
scas
aas
xchg
or
adc
mov
add
dec
icebp
loope
mov
inc
sub
movsb
js
lock
inc
popf
aam
pop
enter
mov
push
imul
push
cmpsb
jge
clc
jl
icebp
xor
xchg
imul
mov
sarb
inc
cmpl
cs
aas
jae
fnstsw
inc
rorl
mov
and
and
adc
push
divb
ds
pop
ja
pop
add
nop
xchg
adc
and
dec
enter
push
mov
movsl
pusha
pushf
jno
xor
sbb
int3
cmpsl
pop
rcl
lahf
push
das
std
cmp
daa
push
xor
dec
push
and
stos
call
clc
out
and
ficoms
dec
scas
popa
repnz
xchg
dec
bound
mov
push
in
mov
in
and
jne
lret
mov
sti
cltd
cld
mov
mov
repnz
fisubrl
lret
pop
or
jne
nop
sbb
dec
cmp
outsb
lock
stos
in
adc
pop
push
flds
xchg
adcl
jge
jns
pop
shlb
in
mov
dec
rorb
int
cld
out
add
pop
fwait
fs
sub
in
scas
mov
mov
ret
pop
hlt
lcall
push
mov
inc
xor
pop
pusha
enter
cld
mov
in
adc
xor
dec
lea
hlt
mov
lea
cmc
outsb
add
stos
mov
aaa
xchg
jo
push
sub
and
sub
jb
icebp
dec
or
int3
mov
jl
adc
jmp
mov
and
fcomp
mov
shl
or
cmpl
mov
es
mov
sbb
cli
jl
testl
sbb
cld
xchg
sub
aad
inc
sub
dec
cmp
sub
jo
rorb
xchg
push
mov
mov
popf
in
in
loope
pop
sar
cmp
dec
mov
lea
pop
inc
rcr
push
stos
jg
mov
scas
sub
xchg
sahf
rcll
xchg
test
mov
test
aam
xlat
mov
stos
les
push
or
mov
loope
xchg
test
pop
sub
rol
ljmp
xchg
add
test
mov
loopne
scas
sbb
notl
insl
pop
mov
js
or
shlb
jne
rcrb
inc
pop
shrl
insb
xchg
sub
scas
cmp
xchg
and
or
jbe
ss
je
out
cld
pop
push
dec
shll
repz
int
hlt
or
sub
and
pop
cmpsb
mov
imul
in
cmp
sbb
jg
pop
das
mov
sub
adc
loopne
jns
jbe
xor
iret
add
stc
aad
sub
mov
out
pop
or
paddusw
out
negb
pop
int3
mov
mov
cmp
fildl
xchg
jo
mov
pop
sub
inc
stos
das
cltd
mov
ret
adc
xchg
lock
mov
sbb
sub
lret
ja
push
mov
mov
push
jb
pop
push
leave
out
sub
in
adc
lods
sub
inc
cwtl
pusha
mov
push
pop
jecxz
dec
cmp
stos
fiaddl
nop
aas
xchg
pop
cmp
test
leave
or
bound
inc
mov
xchg
insb
das
xor
aaa
mov
xchg
fs
adc
lds
inc
mov
call
shrl
cld
pop
gs
iret
cmpsl
xchg
cmc
mov
out
cwtl
xchg
xchg
mov
rcr
inc
in
mov
add
push
pusha
test
sub
jp
mov
inc
pusha
mov
sti
mov
testl
in
dec
jl
mov
inc
inc
cmpsl
mov
icebp
sub
adc
pop
mov
out
roll
popf
mov
mov
xor
mov
iret
pop
sahf
call
ljmp
jp
mov
dec
dec
push
mov
push
and
xchg
arpl
insl
lcall
ss
loopne
dec
or
outsl
repz
mov
test
pop
and
aad
hlt
or
fmul
mov
xchg
mov
orl
popf
jmp
mov
shrb
inc
in
xchg
add
pop
popf
nop
repz
fldenv
dec
sahf
push
xor
pusha
pop
pop
fs
dec
out
idiv
imul
xrelease
or
jbe
rolb
movl
push
mov
pop
push
lcall
sub
jnp
sbb
aas
data16
ss
mov
lods
divl
inc
dec
or
daa
fmul
sti
cmp
cmp
inc
out
jno
call
dec
fnstsw
add
dec
out
xor
mov
and
or
adc
jg
push
je
add
pop
fwait
lahf
loope
jo
stc
pop
cmpsb
dec
jle
dec
adc
fistpll
and
bound
ret
push
xchg
sbb
lcall
mov
jmp
into
mov
push
adc
dec
cmp
dec
mov
jns
or
fmuls
and
sti
fbstp
loopne
mov
test
mov
int3
xor
jle
test
and
pop
mov
cli
cmc
lret
jecxz
mov
outsb
push
leave
or
pop
scas
fwait
test
ja
jo
jns
daa
and
fs
xor
scas
bound
cvtps2pi
mov
scas
sbb
pushf
jne
add
out
inc
mov
pop
xchg
mov
notb
lods
mov
dec
inc
test
out
ja
or
sub
and
cmpsl
mov
out
xchg
xor
jl
push
push
dec
adc
xor
xchg
cmp
mov
cmp
xchg
push
mov
cmp
ds
mov
in
enter
mov
loope
mov
xor
leave
mov
in
dec
cltd
xor
jg
ja
rorl
lret
push
cli
cmc
xchg
dec
icebp
adcl
rcrb
mov
shl
sub
int3
cld
test
scas
aas
inc
dec
cmp
xchg
push
test
call
test
cmc
push
add
push
add
pop
mov
push
cmp
mov
dec
mov
aad
ret
dec
mov
movl
mov
and
rcrl
popa
pop
cmp
and
adcb
into
cmp
ds
cmp
adc
inc
cmp
push
xor
jae
addr16
xlat
mov
push
and
popf
xchg
dec
ret
fwait
std
add
cli
je
rcrl
mov
imul
aaa
stos
mov
sbb
jecxz
imul
insb
and
add
js
sub
and
jle
aaa
dec
decb
sub
push
icebp
stc
mov
and
add
lret
and
adc
outsb
jno
subb
mov
ds
push
clc
cmp
adc
mov
xchg
or
cmp
dec
adc
add
push
mov
mov
sti
adc
rcl
cwtl
repz
cs
lock
xchg
cmpsb
arpl
add
aas
pop
fisubrs
xchg
aad
cmp
xchg
inc
jge
jl
push
imul
enter
icebp
push
pop
test
stos
sub
or
cmpl
fcomps
mov
aad
pop
push
mov
jl
pop
leave
fidivs
in
icebp
aaa
mov
inc
dec
in
lcall
xor
in
inc
cmp
sbb
fcompl
fbld
ss
outsl
push
adc
cmc
jecxz
imul
xor
fldl
repnz
pop
mov
ja
icebp
lods
mov
int3
loopne
fldcw
xorb
in
lahf
adc
sub
xchg
xor
dec
punpckhbw
sahf
pop
or
lcall
negl
xchg
xchg
mov
jb
cmp
rorl
sahf
jl
inc
sub
mov
or
in
loop
mov
mov
fldenv
mov
lcall
lret
lock
subb
enter
jnp
mov
or
repz
mov
hlt
shll
xor
pop
dec
sbb
cwtl
movsb
clc
pop
sbb
jno
adc
jge
scas
mov
and
mov
push
jl
xchg
cwtl
cmp
vaddpd
movsb
dec
push
sbb
cmp
rcrb
insl
cmpsl
sti
cmp
and
lods
insl
scas
dec
iret
popa
jne
std
push
adc
adc
adc
pusha
negb
scas
mov
jae
and
pushf
dec
push
sti
fsubl
and
inc
in
or
xor
lds
es
insb
cmpsl
jmp
int
ja
mov
addr16
testb
cs
sbb
cwtl
jae
jb
lods
fisttpll
xlat
cwtl
adc
jge
idivb
or
repz
iret
xchg
cmp
mov
pop
inc
xlat
daa
sbb
outsb
shll
xor
stos
pmulhuw
popf
jno
lcall
rcll
rolb
pop
fidivl
sti
xor
cmp
repz
cmp
es
push
iret
inc
and
dec
push
mov
adcl
in
shlb
push
insb
add
cmp
subl
pop
add
mov
rep
rcrl
sub
inc
adc
movsb
jmp
gs
xchg
out
jo
mov
dec
pop
and
mov
js
stos
or
jns
inc
sti
dec
mov
dec
fcmovne
pop
dec
or
jmp
test
mov
scas
push
xor
xor
scas
mov
jo
gs
hlt
sub
jae
sub
adc
imul
push
fwait
stos
lea
popa
sahf
cmp
movsl
add
jne
mov
addr16
mov
sub
mov
cmpl
lock
jns
aad
out
ja
dec
adcb
pop
add
std
ficompl
test
enter
mov
add
xor
outsb
insl
adc
lret
test
sarl
mov
xchg
and
gs
iret
or
dec
sub
jb
adc
push
jbe
outsl
scas
pop
in
ret
pop
stc
push
daa
xor
repz
adc
ret
xor
push
imul
les
arpl
je
mov
in
stc
sbb
leave
sub
sbb
dec
mov
shll
imul
out
push
xor
sbbb
push
xchg
xchg
jge
shlb
push
push
push
jecxz
ret
icebp
pop
sbb
mov
daa
push
mov
jns
ss
mov
test
ss
cmp
mov
or
sub
push
push
mov
inc
movsl
pop
mov
cmp
jb
and
pop
xchg
gs
frstor
jmp
push
ljmp
and
jle
cld
sub
add
repnz
mov
imul
out
mov
lds
insb
out
sbb
xchg
loope
je
fwait
and
jg
mov
adc
pop
push
mov
mov
mov
pushf
addr16
xor
lods
lret
jo
rol
ja
jne
mov
adc
adc
jge
lods
sti
xor
mov
in
mov
scas
push
and
cmp
push
cmp
inc
xor
fs
je
arpl
add
jne
fldl
sbb
push
mov
xchg
jns
jle
mov
add
push
jae
sub
sub
push
imul
in
mov
push
or
fldt
movsb
mov
pop
mov
lcall
cmp
imul
mov
adc
pushf
adc
dec
dec
scas
psrad
inc
shlb
cwtl
outsb
fistpll
arpl
mov
lock
inc
daa
push
sahf
xchg
in
jnp
dec
and
pop
rclb
pusha
pop
test
jo
or
repz
push
imul
sarb
jnp
mov
cmp
imul
icebp
add
loop
fimuls
repz
dec
notl
int3
push
cmp
shl
mov
mov
lds
sbb
clc
ss
daa
ror
pop
fmuls
mov
mov
fnstcw
mov
mov
push
sti
jbe
jge,pn
pop
xchg
ret
fistpll
push
into
ja
fstl
imul
jecxz
push
fistpll
jl
in
outsl
push
xchg
sti
pusha
movsl
or
test
icebp
cmpl
movsb
push
stc
enter
in
adc
xor
lret
shlb
ret
xchg
mov
mov
rcrb
pop
or
xlat
xchg
gs
cmpsb
pushf
sub
jp
and
enter
inc
xchg
ds
cmp
xor
xchg
ds
fwait
jne
and
fnstsw
push
dec
addr16
xor
lret
pop
loop
out
jae
loope
adc
insl
sbb
dec
push
flds
xchg
xorb
mov
lcall
pop
xchg
jb
mov
je
fsubrs
inc
mov
idivb
aam
arpl
xor
sti
cmp
gs
xchg
pop
cld
xchg
or
sbb
or
ret
test
ret
in
or
daa
mov
jecxz
add
cli
add
enter
add
cmpsb
ss
fdivs
mov
push
shlb
xor
in
dec
mov
js
int
fiadds
out
adc
pmuludq
icebp
ss
push
ret
mov
rorl
dec
sbb
inc
popf
out
dec
jns
jge
pop
stos
int3
repz
ror
hlt
and
push
dec
idivl
call
pop
jmp
data16
jno
sbb
xor
mov
xor
push
or
xor
fcoml
mov
mov
in
call
pushf
mov
pop
dec
mov
lods
or
sub
lret
into
mov
lcall
or
out
scas
xor
pop
jns
xchg
pop
and
je
loop
jmp
cli
add
repnz
nop
add
loope
or
mov
xchg
mov
mov
sub
mov
cltd
dec
adc
sbb
xor
dec
xor
into
sahf
push
add
dec
cmp
aam
icebp
inc
movsl
gs
scas
mov
jb
pop
ljmp
lret
aad
test
faddl
dec
dec
mov
jg
mov
push
and
cmpb
mov
push
incl
mov
push
dec
pop
and
pop
int3
scas
test
jle
xor
jmp
call
push
sahf
adc
pop
shll
lret
and
mov
and
mov
cmp
mov
push
dec
lods
andl
xor
or
and
inc
inc
mov
xchg
sbb
mov
mov
sub
fwait
jmp
pop
fwait
cld
adc
cmp
add
test
clc
gs
cmp
add
xor
psubw
xchg
push
test
cmp
andl
xchg
push
out
sahf
jle
nop
aam
imul
in
fwait
pop
adc
incl
inc
fnstenv
dec
pop
out
js
mov
mov
or
jb
and
push
fidivs
lret
jle
mov
mov
daa
dec
xchg
inc
adc
and
cmp
sahf
dec
cmp
pop
dec
ja
ret
jmp
add
jb
push
stc
ficompl
fcomps
pop
jl
je
cld
pusha
mov
pushf
inc
xor
xor
sbb
dec
mov
fcoms
in
inc
dec
inc
inc
xor
pop
mov
pop
mov
add
cmp
call
xor
jmp
cld
or
int3
push
sbb
rcll
xor
pusha
pusha
das
dec
mov
aam
outsb
ja
iret
mov
xor
out
add
les
sub
xorl
push
inc
call
in
xlat
paddusb
pop
sahf
and
repz
xchg
loopne
or
test
fs
movsl
push
sti
mov
int3
pop
inc
mov
dec
push
pushf
cmp
imul
jecxz
mov
mov
repnz
lock
xchg
pop
mov
inc
sahf
push
fistl
adc
ret
sbb
clc
lock
push
xchg
cmpsb
sbb
clc
push
xchg
ja
mov
pop
shrl
sub
pop
xchg
faddl
sub
jge
icebp
mov
sarb
or
pop
mov
flds
subb
lods
lea
sbb
xchg
push
pcmpgtw
test
into
cmp
and
push
dec
and
xlat
or
out
pop
jl
test
and
add
xchg
insl
lods
pop
sbb
addr16
les
lret
mov
adc
movsl
stos
addr16
mov
sbb
push
ret
xchg
lret
lahf
jbe
scas
repnz
std
and
mov
add
ja
sub
xchg
in
xor
popa
mov
cwtl
cld
xor
sbbl
or
int3
sub
xor
xor
nop
cmp
or
testb
xor
sub
mov
cltd
fimull
sub
std
ss
cltd
push
adc
in
or
adc
mov
sub
jmp
lahf
fstpt
jns
lret
cmp
inc
nop
test
add
xor
pop
jnp
adc
push
mulb
xchg
inc
test
pop
leave
fndisi(8087
fdivl
sbb
xor
imul
dec
cmpsb
out
and
mov
test
ljmp
aad
sbbl
cmp
daa
pop
imul
cmp
fsubs
inc
fdivrl
mov
fcoms
pop
cli
insb
loope
mov
inc
ret
cmp
in
sub
add
in
mov
xchg
jno
fistl
sub
xchg
mov
retw
add
ljmp
jle
rcrb
iret
lcall
inc
add
mov
push
dec
jmp
faddl
scas
mov
movsb
mov
adc
lret
dec
ds
insb
and
mov
sar
or
outsb
jns
cmp
pminsw
sub
pop
cs
ja
mov
insb
cmp
dec
cmp
mov
faddl
pop
fwait
loop
sbb
xchg
aas
xchg
fldl
jne
aas
sbb
jle
pop
adc
cmp
xor
ret
or
adc
adc
addl
mov
insl
sbb
dec
les
sbb
fs
pop
mov
testl
out
les
mov
jnp
stc
xor
xchg
lea
xchg
sarl
inc
cmp
stc
push
and
je
mov
jp
mov
inc
icebp
mov
dec
icebp
push
xor
lea
shlb
lea
cmpsb
mov
jg
mov
fldln2
cwtl
mov
sahf
idivb
push
dec
test
insl
inc
ja
xor
xchg
add
scas
adc
jle
pop
and
into
inc
enter
and
mov
mov
sbb
xchg
push
in
dec
dec
mov
loopne
pusha
aas
test
scas
lcall
les
push
std
and
add
jecxz
mov
jmp
nop
jg
add
fistl
outsb
cmp
or
out
and
imul
aas
lahf
push
sbb
cwtl
repz
pop
js
jg
mov
cli
movsb
clc
leave
sahf
frstor
into
cmp
js
in
jae
out
mov
std
loopne
pop
pop
inc
push
cmp
push
push
jne
lea
imull
inc
sbb
mov
jl
push
cmp
movsb
push
pusha
int
add
fwait
pop
cli
inc
stos
pop
popf
mov
adc
std
mov
xlat
jbe
iret
es
xchg
ja
mov
inc
push
test
and
inc
jne
pop
popa
scas
push
call
popl
xchg
push
mov
aam
mov
scas
dec
jb
fldpi
iret
cmp
sub
xor
rorl
or
pushf
mov
outsl
dec
mov
xor
call
xor
inc
out
sub
mov
scas
dec
xchg
jns
mov
sbbb
mov
lea
je
notl
loop
inc
mov
sub
jns
or
push
sub
push
xor
xor
fldenv
ss
les
bound
sar
test
nop
jns
add
mov
imul
aad
lods
divl
adc
xchg
sub
push
loope
xchg
push
movsb
mov
add
mov
imul
int3
dec
ljmp
and
call
into
inc
adc
xchg
cmpsl
jo
popa
jge
push
das
clc
inc
xchg
inc
jle
sbb
jns
ret
push
enter
stc
mov
pop
ds
ret
int3
mov
daa
cmpsl
out
xchg
push
jg
xchg
or
popf
leave
xlat
and
mov
sbb
int
xchg
shrb
stos
int
cmp
cmpsl
rcl
pop
out
mov
cmp
inc
in
jle
and
add
inc
or
int
icebp
xor
hlt
sbb
jne
push
jns
inc
sub
pop
add
sbb
push
imul
cmpsb
inc
mov
add
dec
fnstcw
out
adc
das
test
lods
cltd
dec
inc
das
mov
pop
sbb
jl
xchg
out
pop
xor
sub
lods
or
inc
sbb
add
dec
mov
xlat
es
mov
stos
cmp
sub
mov
adc
mov
pushf
je
int
inc
xchg
mov
push
fs
sarb
incb
xchg
ret
subb
jmp
bound
mov
stos
out
in
xchg
je
imul
sub
fistps
and
in
adc
aad
mov
push
adc
push
imul
daa
pop
mov
andl
sbb
sbbl
jo
adc
bound
sti
arpl
out
jmp
adc
xchg
loop
popa
cmp
xor
inc
sbb
sbb
std
out
in
hlt
es
sbb
adc
shll
mov
out
inc
inc
cmpsl
or
mov
bound
nop
jne
cmpsl
outsb
jno
add
jmp
sub
int
decb
sub
leave
call
sub
test
stos
push
xchg
clc
mov
out
pop
ret
hlt
lods
rorl
insb
icebp
fmuls
sub
jg
cmc
and
lods
jl
xchg
imul
xchg
popa
mov
jbe
lods
mov
mov
xchg
cs
bound
mov
pop
shlb
pop
aad
push
xchg
add
adc
ljmp
notl
mov
cwtl
push
out
icebp
mov
setp
in
mov
adc
fwait
mov
jo
repz
cld
negb
rcll
bound
dec
adc
inc
fmull
dec
ret
adc
enter
cmp
int
push
dec
arpl
into
ss
and
mov
call
adc
loop
clc
mov
bound
xchg
jae,pt
dec
adc
inc
leave
jecxz
aaa
rcrb
in
movsl
cmp
jbe
fdivs
or
add
pop
jge
and
jo
call
xor
pop
inc
adc
out
mov
push
mov
enter
fmul
ret
mov
push
lret
pop
cmp
scas
scas
sti
sbb
cwtl
ret
int3
adc
mov
pop
sbb
ds
fwait
mov
lds
pushf
iret
pop
pop
push
test
lea
fbld
push
or
inc
in
pop
sbb
mov
mov
lods
in
sbb
cld
sub
out
repz
push
adc
pusha
ss
sub
test
bound
or
dec
sti
rclb
xchg
xchg
pop
xchg
jns
cmp
mov
sbb
mov
jno
and
out
out
mov
cltd
adc
push
mov
int3
pop
mov
ds
lds
aam
mov
dec
sahf
jle
jmp
in
pop
pop
sarb
jecxz
cs
sub
add
push
mov
aam
repz
std
fmul
cs
dec
push
inc
ljmp
or
int
mov
sbb
add
lock
sub
cli
jno
add
cmp
data16
shrl
jne
sub
cmp
add
cmc
sbbl
pusha
inc
insb
sub
stos
es
je
in
ds
fsts
test
and
or
iret
into
dec
mov
push
jno
or
inc
dec
xchg
stc
rcrb
data16
jae
sub
sbb
mov
pop
popfw
inc
jae
or
scas
inc
add
push
sahf
aam
pop
mov
cld
test
stos
push
daa
xchg
xor
xor
push
inc
dec
roll
repnz
pushf
popa
push
scas
mov
repnz
packsswb
pushf
addb
mov
mov
push
dec
cmp
xchg
mov
out
mov
push
stos
ret
daa
test
xchg
xchg
stos
xchg
movsl
orb
movsl
or
xlat
out
shl
scas
test
xchg
adc
sbb
fisttps
sbb
pop
push
xchg
mov
jge
sub
clc
in
mov
xor
jp
push
dec
stc
mov
popf
iret
ret
jg
cmpsb
jnp
add
xor
push
xlat
adc
in
adc
adc
mov
hlt
into
int3
fsubrl
push
or
mov
stos
ljmp
sub
pop
addl
aam
cwtl
lret
push
enter
xchg
xchg
inc
push
mov
push
sbb
dec
mov
fstl
mov
jb
sub
pop
push
dec
ss
pop
pop
mov
mov
test
xchg
bound
xchg
xchg
faddl
adc
sub
cmp
adc
cwtl
adc
jbe
cmp
das
das
aam
push
call
push
les
or
cwtl
fisubs
xchg
add
std
add
push
dec
iret
mov
dec
outsb
cld
dec
mov
push
cwtl
mov
jnp
fstpl
or
mov
pop
mov
jg
xchg
mov
inc
rolb
rclb
cmp
bound
mov
int3
pop
mov
push
idivb
repz
cmp
hlt
roll
icebp
dec
mov
adc
mov
sub
or
mov
fdivr
xor
jp
mov
popl
int
push
xchg
push
daa
or
cli
push
push
hlt
lahf
into
mov
stos
pusha
mov
mov
mov
or
les
or
mov
xchg
scas
bound
movsl
inc
inc
pop
adc
xor
data16
pop
inc
jmp
mov
rcl
jns
cmp
or
popa
pop
ljmp
inc
inc
pop
dec
shll
xchg
or
test
push
dec
lahf
mov
or
daa
jae
or
out
pop
jns
repz
pop
xchg
call
inc
add
mov
or
mov
nop
push
or
mov
inc
xor
or
jo
adc
sub
sub
lods
jl
push
lret
cmp
cwtl
mov
aas
pop
adc
cmp
lock
cmpsl
push
ret
inc
xchg
bound
subl
clc
pop
mov
lahf
and
push
lods
fnstcw
mov
mov
pop
push
xchg
inc
adc
jnp
es
lock
ret
xchg
mov
xor
orb
notl
mov
or
out
cmc
stc
and
pop
psrld
dec
adcb
roll
cmp
cli
mov
int
jnp
sbb
xor
jno
iret
es
in
inc
cld
lods
test
out
je
add
dec
sahf
aas
inc
sub
add
jge
inc
jo
inc
mov
cli
cmpsb
xor
push
cmp
mov
popf
lahf
sbb
pop
mov
dec
lea
push
incb
push
jno
jno
sbb
xchg
cmc
push
xlat
sarl
push
scas
mov
test
mov
adc
adc
inc
jns
in
cmpsl
mov
jle
movsb
add
mov
addb
inc
js
pop
add
xor
mov
into
jmp
push
jno
repz
xchg
sbb
popa
sbb
xchg
fnsave
sbb
in
mov
inc
in
in
dec
je
mov
xchg
xchg
mov
les
mov
mov
push
out
fwait
sub
jae
aad
lcall
bound
jmp
lea
dec
leave
sbb
loope
iret
mov
push
cs
mov
push
ret
ror
push
inc
inc
pushf
dec
outsb
aaa
or
push
leave
sbb
mov
shll
sbb
dec
gs
xor
mov
push
lods
push
inc
lahf
les
jns
inc
dec
jo
xchg
popa
xchg
adc
and
ljmp
aam
scas
or
inc
ret
jmp
cmp
sbb
mov
jl
in
xchg
cwtl
sbb
mov
bound
xor
sub
xchg
movq
stos
jmp
cmpsl
ja
push
lcall
icebp
addr16
lahf
andb
iret
pusha
or
jns
pop
fldenv
cmc
cmpsl
add
cvtps2pi
out
sub
aaa
loope
test
fldcw
push
dec
pop
sub
outsb
cmc
movsl
test
std
inc
out
jne
insl
or
idiv
push
cmp
test
sti
dec
shll
xchg
pop
movsb
xor
in
scas
scas
shl
sub
sbb
push
iret
mov
add
adc
sub
sbb
sub
call
jae
icebp
add
sub
sbb
push
xchg
pop
movsb
add
imul
emms
inc
popf
jmp
mov
mov
jmp
in
bound
cld
pop
pop
rorl
in
cmp
inc
mov
or
and
mov
and
sbb
fwait
sub
sbbl
mov
clc
inc
adc
lahf
inc
mov
cs
testb
in
push
popf
or
aam
movsl
cvtdq2ps
push
mov
pushf
sub
aad
add
int
enter
mov
ret
and
imul
in
push
mov
pop
pop
jno
jo
adc
shll
stos
cli
les
lods
sub
jae
in
aad
fs
clc
pusha
aad
lods
mov
jo
negb
inc
mov
ljmp
shl
adc
jbe
aas
pop
mov
mov
or
xor
adc
xchg
pop
mov
fistpll
sbb
mov
jecxz
xor
xchg
flds
xchg
fidivl
jg
lds
and
xchg
add
insl
outsl
arpl
insb
int
ret
je
or
jb
repnz
adc
inc
loop
sbb
lds
in
call
fisttpl
stc
mov
add
ffreep
aaa
cmp
inc
mov
das
pushf
mov
mov
ja
out
jge
insl
cmc
xchg
mov
jb
push
dec
sbb
push
sub
push
push
loop
and
divl
cmp
in
xor
loop
adc
xchg
addr16
aad
sub
add
roll
dec
stos
xor
aas
out
clc
clc
icebp
mov
push
insb
mov
dec
mov
mov
cmpxchg
pop
int
outsl
inc
icebp
dec
push
inc
add
cli
fstp
inc
out
pop
pusha
fs
mov
cltd
mov
fildll
out
and
jne
jg
and
in
jge
shll
add
mov
aam
mov
inc
in
test
push
daa
mov
mov
mov
push
notb
mov
push
xchg
mov
push
shll
adc
lods
stc
pop
mov
and
mov
fucom
mov
lea
ror
pop
jle
aas
icebp
jg
adc
aas
data16
adc
mov
sbbb
test
mov
pop
xchg
out
lret
frstor
roll
jge
test
ljmp
stos
cmp
loope
xchg
in
hlt
add
loope
push
jne
pop
mov
cmp
jp
or
sbb
push
fildll
xchg
cmp
add
push
sbb
je
and
mov
pop
or
stc
scas
dec
pop
stos
push
lea
push
mov
cltd
and
popf
cwtl
cli
fisubl
sub
adc
leave
in
or
das
out
daa
cltd
outsb
into
mov
dec
cmpsb
fdivs
mov
inc
sbb
das
mov
outsb
sbb
lods
cwtl
jb
mov
jmp
xorb
insl
mov
lret
test
inc
cmpb
je
jl
sbb
call
out
pop
dec
or
cwtl
mov
and
pop
sub
adc
mov
sub
jo
std
pop
out
test
jge
pop
jbe
mov
nop
test
fldt
lea
nop
loop
push
push
push
xchg
les
push
push
mov
mov
stos
sbb
xchg
pop
daa
xchg
jl
xor
std
sub
ja
inc
cmpsl
sbb
inc
mov
test
cli
mov
gs
rorl
lods
nop
push
fildll
movsl
mov
mov
ficompl
mov
mov
test
add
cmp
mov
enter
das
cmovns
push
push
popa
mov
orl
repz
dec
add
in
lods
test
pop
int3
fstl
pop
fcomps
jle
das
adc
inc
fnstcw
sti
in
outsl
xchg
orl
mov
dec
pop
je
pop
fdivrs
lea
add
xchg
push
sub
cmpsl
dec
in
pop
sar
mov
xlat
mov
adc
jge
pushf
xchg
push
push
sub
lods
mov
inc
dec
lcall
and
aas
aaa
popf
adc
mov
xchg
xlat
cmpsb
push
ret
das
inc
xchg
inc
dec
xchg
jae
sbb
inc
inc
cld
jle
fs
pusha
hlt
cmpsb
mov
scas
mov
pop
push
dec
adc
inc
inc
jecxz
rorb
push
push
jge
sbb
hlt
mov
out
jno
in
sbb
cmp
andb
popa
lret
jnp
pop
push
xchg
loopne
idivl
xor
push
jae
fwait
jg
adc
push
adc
cld
adc
insl
and
push
ja
mov
loopne
jecxz
out
test
icebp
and
jg
inc
test
movb
sarb
insl
stc
mov
adc
mov
xor
pop
mov
aam
xor
inc
loope
daa
bound
mov
outsl
pop
leave
shr
inc
push
cwtl
pop
dec
xadd
jge
shl
ret
push
mov
subb
xchg
inc
sub
addr16
pushf
icebp
out
cmp
lods
dec
push
fidivrs
repz
ja
sahf
lcall
adc
leave
std
lds
mov
fstl
cmp
in
jno
add
out
lret
shlb
lods
xchg
dec
and
lods
and
shlb
mov
mov
ja
in
xor
ret
mov
xchg
adc
mov
xchg
jl
testl
jne
jmp
es
adc
lock
leave
es
mov
mov
inc
fadds
movsb
in
cltd
test
xor
mov
push
inc
enter
sbb
inc
cld
mov
sbb
cmp
cltd
cwtl
jo
cmp
sub
mov
jl
lea
repnz
aaa
roll
insl
mov
je
repnz
cmp
xor
pop
aam
mov
mov
push
add
dec
call
push
je
imul
pop
mov
pushf
xchg
push
jno
loopne
mov
bound
jae
mov
push
shll
lods
out
push
jno
and
lods
mov
cmp
and
addr16
inc
push
dec
jne
outsb
xor
insl
test
cmp
dec
sti
in
xor
imul
mov
mov
mov
gs
std
bound
fidivrl
aaa
stc
stos
mov
stc
mov
inc
mov
xchg
sub
sbb
sahf
lock
cmp
out
lret
js
fs
bound
jnp
xchg
pop
scas
idiv
mov
cmp
push
jo
or
push
cmp
mov
push
and
xchg
rorl
in
sbb
std
sbb
push
mov
mov
ja
inc
xor
repnz
sar
insl
mov
push
ds
fmull
sbb
xchg
jb
out
sub
dec
push
jns
pop
rolb
cmpsb
cmp
shlb
lock
sub
fidivrs
sub
mov
out
xchg
xchg
leave
cmpsb
add
mov
sti
push
pop
pop
xor
mov
mov
and
movsl
shll
mov
sarl
aad
jbe
out
sub
cmc
jnp
cltd
lock
xchg
pop
add
jb
fs
sub
sarl
push
and
pop
mov
out
add
movsb
test
hlt
push
test
mov
push
push
test
and
sti
xor
sti
pop
adc
push
fists
pop
inc
mov
mov
dec
leave
xorl
in
xorb
adc
inc
ss
sti
adc
loop
leave
add
aas
or
mov
mov
mov
out
ficomps
jae
mov
push
cltd
aaa
mov
adc
and
mov
cmp
or
pop
mov
mov
adc
fidivrs
adc
jnp
or
loopne,pt
jo
adc
cmp
or
jge
xorl
sbb
popa
adc
loopne
sar
out
out
or
sbb
lcall
repz
je
push
and
sub
or
movsb
fcmovnbe
fistl
mov
popf
pop
loopne
cmpsl
mov
jo
cmpb
add
mov
add
mov
movsl
decb
clc
jmp
mov
cmp
ds
stos
aas
aad
inc
rcrl
or
mov
or
ljmp
das
mov
and
ja
add
or
cmpsl
fcoml
rorb
inc
jno
mov
xchg
and
push
inc
idivl
adc
outsl
or
bound
mov
repz
mov
mov
fs
sbb
xchg
sub
cmp
pusha
mov
addl
xor
pop
js
in
mov
inc
sub
popa
sub
mov
jg
in
adc
lahf
stos
mov
cli
push
pop
ljmp
push
pop
js
lods
and
xchg
xor
adc
push
xor
and
jnp
mov
enter
sbb
sbb
xchg
je
outsb
test
out
mov
push
xchg
ljmp
pop
sub
sbb
sbb
in
ret
pushl
xor
add
push
add
jns
ja
in
jno
mov
outsb
xor
jl
jno
cmpb
mov
fcoml
ret
lds
insl
sbb
sbb
sbb
jo
clc
mov
mov
xor
cmc
fisttps
xor
xchg
mov
adc
fs
dec
cmp
mov
xchg
pop
lds
push
push
pusha
aam
jb
fwait
rep
push
jno
negl
enter
mov
pop
jecxz
ret
push
or
mov
and
cmpsb
test
jns
adc
push
data16
adc
cmc
sahf
std
jle
mov
clc
mov
rcrb
lods
nop
sbb
dec
js
xlat
shll
mov
shr
addr16
push
loopne
enter
orb
aam
push
loopne
dec
add
mov
popa
push
lret
in
out
nop
pop
mov
fcoml
lcall
inc
addr16
mov
jo
xchg
shl
sub
push
loope
adc
jne
adc
push
pop
aam
loop
or
inc
pop
jl
cmp
sbb
pop
in
aas
cmp
js
and
and
mov
push
sar
xchg
sub
andb
rclb
xor
bound
test
gs
js
mov
xchg
std
lcall
or
movsb
pop
loope
and
sub
fisubl
sti
nop
jbe
or
loop
or
mov
jbe
mov
mov
sahf
loopne
lds
call
addl
sub
push
mov
or
mov
sarl
in
mov
push
icebp
repnz
arpl
push
sub
mov
movb
sarb
pop
clc
mov
cli
xor
addr16
sub
adc
leave
ja
subl
daa
adc
add
pusha
cli
push
dec
cltd
inc
xlat
pop
les
push
add
shrl
aas
ds
sbb
aaa
sti
pop
addr16
loopne
sbb
add
lret
pusha
sar
xor
repz
inc
lcall
mov
out
mov
mov
ret
inc
push
mov
out
sbb
lods
ret
mov
lea
dec
stos
mov
fdivp
sbb
and
mov
adc
push
push
sbb
xchg
jg
aam
xor
lods
lret
cltd
jge
xchg
imul
negl
xor
fsubrl
cwtl
in
in
dec
aad
jnp
pop
pop
clc
fmul
lods
dec
scas
mov
aam
imul
sbb
and
cmp
sub
pop
in
mov
add
jnp
jne
and
outsl
pop
ret
lock
punpckhbw
lea
repnz
aas
cmp
or
cli
movsb
adc
addr16
adc
sbb
cmp
test
cmp
xchg
xchg
mov
lods
xor
inc
or
movsb
mov
es
call
pusha
pop
sahf
mov
cli
addl
mov
daa
xchg
popa
push
loopne
sbb
fdiv
outsl
cmpsb
push
mov
jbe
aaa
mov
pop
rcll
sub
or
dec
test
jle
cwtl
dec
mov
aad
int
sbb
mov
cmc
lcall
cs
jg
call
jle
pop
mov
shrb
pop
mov
xor
ljmp
movsb
fwait
or
mov
fmuls
adc
addr16
addr16
inc
scas
jp
arpl
testl
fildl
je
pushf
cmp
inc
mov
mov
jnp
cmpsb
jge
test
rorl
xchg
fs
dec
xchg
loopne
lahf
xor
jge
adc
sbbb
repz
repnz
lret
mov
jnp
add
stc
in
aam
ss
int3
ret
jp
stos
rcl
insl
xor
outsl
add
ficoms
push
rol
repz
mov
inc
mov
dec
divl
push
push
adc
or
push
ret
sub
roll
outsb
mov
mov
pushf
mov
inc
or
cmp
sbb
or
cmpsb
mov
loop
sbb
lcall
insl
lret
dec
mov
mulb
xchg
cmp
mov
fwait
es
jbe
lcall
negl
rcrl
call
out
inc
ljmp
push
andb
adc
jmp
dec
push
rclb
test
je
jl
adc
push
xchg
outsb
es
fnstsw
repz
fdivl
hlt
cmc
jg
addr16
xchg
inc
add
jge
mov
fdivrl
fldenv
aam
testb
int3
stc
fdivl
cmp
push
cld
pop
adc
sbb
int3
push
push
mov
repnz
je
rcll
sub
rcrb
push
scas
pusha
call
mov
cs
jle
add
mov
mov
sub
lods
js
loop
cmp
xchg
mov
mov
and
test
rcr
mov
sahf
sbb
xor
je
add
addr16
push
addr16
in
rol
push
pop
adc
sbb
push
cmc
mov
in
push
bound
icebp
cld
push
bound
ficompl
inc
leave
sbb
aaa
lods
xchg
sbb
jbe
xor
es
xor
out
cwtl
xor
dec
bound
pop
mov
jp
lret
sbb
pop
xchg
jecxz
dec
cmpb
xor
mov
mov
bnd
loopne
push
push
xlat
dec
outsb
jp
je
pop
pop
out
idivl
mov
lea
or
add
fmull
gs
outsb
pop
mov
negl
jne
int3
popf
into
rolb
mov
imul
dec
cmc
mov
xchg
xor
outsb
test
scas
arpl
test
sbb
pop
mov
andb
lcall
add
enter
cltd
leave
into
jl
lods
fstps
xorb
inc
jns
sub
dec
dec
jae
outsb
jb
cmp
push
aaa
aam
lahf
in
xchg
sbb
pop
xor
ret
rorb
or
movsb
jg
push
pop
iret
or
inc
dec
adc
lods
arpl
out
mov
sub
or
push
push
addl
ja
loop
cmc
jle
cmp
pop
inc
push
mov
out
dec
dec
sahf
jns
loopne
ds
xchg
into
lods
loop
xchg
cmp
pop
in
xorb
arpl
mov
inc
or
sbb
mov
xchg
add
daa
mov
fwait
mov
fwait
aam
pushl
sbb
pop
mov
and
mov
xorl
cmpsl
popf
fisubrs
insl
out
sti
mov
ljmp
push
xchg
xor
add
addl
push
or
dec
push
icebp
andl
add
rorl
adc
add
into
iret
aas
je
movb
mov
bound
adc
incb
jne
pop
inc
jecxz
ja
push
fs
add
ss
inc
inc
mov
mov
test
mov
fiaddl
mov
mulb
and
adc
sub
mov
and
lahf
in
gs
popa
gs
adc
jb
adc
add
loop
mov
aad
dec
push
inc
hlt
fldcw
call
and
add
push
dec
leave
push
fidivl
cld
inc
or
insl
bound
mov
xor
std
inc
aam
test
int
add
sti
lret
fs
jl
mov
in
fwait
adc
adc
or
movsl
jg
or
mov
push
adc
and
enter
mov
mov
mov
mov
xchg
mov
xchg
daa
outsb
mov
and
test
inc
sub
ljmp
inc
mov
shlb
in
insl
dec
add
mov
adc
mov
and
push
cli
mov
scas
sub
sub
pop
mov
std
push
out
in
mov
addr16
lods
je
iret
and
les
pop
or
jno
add
fsts
aam
scas
inc
cmp
pop
dec
mov
insl
aam
sbb
rcll
int
jns
mov
fbld
movsb
xor
ja
and
pushf
in
pop
popa
adc
lcall
push
sbb
adc
inc
aad
bound
es
jp
sarb
xchg
cmpsl
xchg
push
cwtl
fisttpll
clc
xorl
pop
and
dec
movsb
sbb
pop
inc
mov
or
clc
jmp
push
dec
cmpb
iret
fdivp
or
rcl
pusha
mov
fsub
movsl
mov
push
inc
mov
inc
xor
call
jno
xor
sbb
cmp
mov
adc
arpl
lret
or
cmp
jecxz
pop
fbld
int3
sbbb
pushw
icebp
pop
aad
sbb
cs
xchg
xchg
adc
and
pop
push
mov
xlat
shlb
jno
stc
mov
jge
out
sub
xchg
stos
lds
xor
leave
not
or
push
lret
stos
loop
in
and
out
inc
es
jo
or
adc
or
sbb
out
cs
es
movsb
cmc
dec
and
push
sub
lds
fdivs
mov
imul
mov
cmpl
stos
mov
sub
sub
sti
mov
jecxz
xor
scas
lret
dec
and
xchg
fcomp
mov
mov
cmp
xchg
cmpsb
aam
daa
in
lcall
jbe
repnz
daa
mov
push
mov
inc
xor
js
mov
mov
or
movsl
fcomps
lds
xchg
xor
das
cmpsb
dec
outsb
xchg
pop
sbb
imul
test
rcr
xchg
push
in
icebp
mov
sar
adcl
out
adc
sub
les
mov
xorb
push
add
cwtl
jae
gs
cmpsl
lahf
push
xchg
adc
and
adc
jo
push
xor
int3
and
jb
and
add
xchg
mov
es
add
stos
loop
dec
sarb
daa
mov
mov
mov
pop
push
adc
dec
js
push
sbb
and
addb
lods
push
jbe
jae
into
in
inc
or
lea
loop
leave
jecxz
or
cld
or
mulb
and
repnz
jns
xchg
loope
mov
lods
out
rcll
pop
es
movsb
xchg
jecxz
cmp
addr16
les
mov
push
xchg
sub
into
push
flds
sbb
xor
cwtl
xor
inc
clc
aad
jmp
push
mov
sbb
fstl
lds
inc
mov
js
std
adc
pop
outsb
stc
xor
sub
mov
sub
std
pusha
mov
dec
push
inc
imul
sbb
pop
bound
mov
push
sbb
enter
dec
ja
addl
inc
push
testl
lods
idivl
jns
mov
fcoms
jp
sbb
std
into
push
and
jno
lock
jae
xor
xchg
out
jnp
cld
negb
loopne
lods
lahf
loopne
inc
sbb
mov
mov
stos
sbb
es
sbb
xor
loopne
dec
popa
inc
in
fcomi
gs
imul
iret
lret
es
push
add
lcall
jl
ficomps
clc
lret
cmpsl
popf
iret
push
xchg
cs
mov
out
jno
sbb
jb
lcall
mov
aad
outsl
jp
daa
fs
add
pushf
enter
add
add
add
and
mov
call
inc
inc
pusha
jge
sahf
jg
xchg
cli
data16
sahf
and
cltd
shl
and
xchg
movsl
cmp
popf
dec
pop
out
jns
js
pop
inc
lahf
movsl
and
jnp
sub
test
xchg
mov
out
jb
xchg
dec
popa
dec
out
lret
xor
adc
ret
enter
sub
xor
add
mov
inc
mov
movsl
sarb
sbb
shrl
sub
popa
pop
out
leave
fldl
in
pop
xlat
mov
pop
les
dec
sbb
jge
pushf
push
nop
in
sbb
lcall
mov
cli
mov
sbb
testl
add
je
add
jnp
mov
dec
sbb
lock
jmp
pop
roll
testl
mov
mov
mov
lret
pop
addl
ss
xor
push
mov
rcl
inc
inc
rorl
adc
mov
dec
inc
andl
pop
inc
cmp
push
fs
cs
add
dec
adc
mov
cmpsl
sti
push
sbb
mov
aas
mov
cmp
sub
and
ljmp
adc
out
test
pop
jp
lret
add
and
xor
push
push
orl
cmp
hlt
or
jmp
js
adc
enter
mov
jne
mov
outsl
bound
cmc
inc
push
jl
dec
scas
xchg
decb
test
daa
mov
mov
in
leave
jle
and
lahf
sbb
sub
inc
movsl
sub
in
inc
into
out
jnp
outsl
jne
add
call
pusha
arpl
dec
mov
daa
sub
insl
dec
sbb
inc
mov
xor
xor
push
xor
sub
mov
jb
fs
icebp
lcall
mov
pushf
or
sub
call
or
mov
and
inc
adcl
aaa
icebp
pop
cmp
adc
push
dec
cmc
dec
mov
dec
jg
dec
adc
jmp
jb
out
push
mov
icebp
push
push
and
mov
lods
and
cltd
fadd
lcall
dec
jb
orb
add
or
icebp
mov
add
lock
cmc
xor
ret
test
mov
push
mov
xor
dec
mov
or
add
dec
mov
jl
stos
loopne
loope
xor
and
outsb
scas
rolb
insl
mov
cmp
popa
ja
test
jno
aas
sbb
cmp
add
dec
cmp
sbb
lret
sbb
fimull
fisubrs
and
lret
stos
sahf
je
push
add
jg
push
push
in
pushf
and
jecxz
lods
clc
push
daa
mov
xchg
mov
mov
pop
mov
cld
ret
xchg
cmp
mov
icebp
dec
mov
lds
xchg
adc
inc
add
test
and
das
lahf
or
out
sbb
pop
xchg
add
sbb
outsl
into
cld
in
fildl
pusha
push
mov
addb
out
int3
stos
in
mov
inc
cmp
aaa
orb
pop
or
or
cmc
adc
or
or
mov
sbb
fwait
pop
mov
dec
jns
addr16
dec
clc
cltd
inc
roll
fistpl
sahf
call
arpl
mov
dec
jge
paddsw
clc
cwtl
enter
mov
pushf
mov
mov
iret
sbb
jnp
jge
cmc
adc
xchg
mov
sahf
or
sub
scas
pop
or
scas
and
and
jp
imul
cmp
push
les
pcmpgtw
fidivrl
push
cmpsb
mov
gs
aaa
xlat
push
add
jnp
pop
notl
inc
inc
int3
push
pop
std
pusha
ret
lods
jno
les
nop
repnz
push
sub
andb
push
andl
push
outsl
mov
cmp
roll
mov
mov
addr16
cmp
jo
or
dec
inc
lea
loope
pusha
je
push
pop
xor
andl
add
fs
dec
loop
mov
sub
icebp
je
arpl
dec
xlat
cltd
sbb
fcomps
xor
add
daa
push
add
sbb
pop
inc
inc
sub
or
add
fsts
mov
out
mov
adc
outsl
push
data16
outsb
pop
xlat
arpl
inc
fcomps
arpl
or
fcoms
mov
ljmp
mov
push
hlt
lret
xchg
xchg
pop
xchg
cltd
pop
fidivs
dec
addr16
stos
and
sbb
or
pop
pop
jmp
pushf
push
mov
out
sub
pop
push
xchg
dec
mov
outsb
xor
mov
dec
push
fildll
pop
imul
ljmp
loope
sbbb
out
cltd
or
leave
jl
idivb
pop
sti
pop
fadd
ds
iret
in
lea
jmp
in
jnp
add
movsl
popa
inc
in
imul
mov
mov
out
fld
pop
and
push
sub
mov
leave
mov
mov
push
add
pop
fidivl
mov
imul
jl
arpl
int3
ret
shll
clc
hlt
imul
xor
inc
cmpsb
aam
test
dec
xchg
mov
ret
lret
xchg
and
jns
push
or
rclb
xor
xorb
or
inc
xor
sub
insl
push
mov
pop
lods
sahf
inc
or
addl
mov
pop
mov
lds
cmp
pop
add
mov
mov
cmp
lcall
out
out
rorl
adc
add
jne
popf
ret
mov
mov
pop
xor
call
stc
mov
es
pop
mov
sbb
insb
jge
inc
jmp
test
movsb
sub
popf
jno,pt
add
aaa
insl
mov
jns
lahf
test
xchg
xchg
clc
clc
inc
cmp
iret
dec
out
push
jb
repz
jmp
mov
mov
adc
jp
pop
int3
ret
retw
fdivs
sbb
xchg
lea
insl
dec
cld
leave
rorb
lods
push
mov
xchg
movsb
sub
mov
lock
jl
sbb
dec
mov
loopne
mov
jecxz
pop
push
xor
lods
call
subl
test
mov
mov
leave
xchg
xlat
jae
xor
ljmp
movsl
adc
inc
scas
push
fcompl
and
and
scas
in
xor
xchg
add
pushf
and
stos
cmp
dec
pop
gs
in
jge
mov
iret
stos
inc
push
test
stos
add
jns
and
xchg
out
cmpsl
cmp
pop
inc
push
xchg
mov
push
inc
sub
sbb
push
ja
xor
pop
xchg
ss
add
out
inc
push
lods
jle
fbstp
push
shl
out
lahf
dec
mov
xchg
xchg
movsl
add
sub
sbb
adc
and
aaa
aam
shlb
jge
add
jne
andb
int3
adc
idivb
jne
pop
cli
sti
aaa
cwtl
ret
leave
loopne
imul
sub
scas
push
push
test
ret
test
cmp
adcb
movsl
add
int3
push
iret
xchg
sub
pop
aas
ja
movsb
lret
inc
idiv
sub
iret
out
xchg
faddp
push
jp
adc
or
push
divb
push
inc
repz
fbld
negb
cmc
dec
xor
lcall
and
mov
xchg
dec
xchg
xor
pop
data16
and
jp
fstpt
add
andb
xchg
pop
push
popa
and
outsb
or
ja
sbb
fdivrp
sbb
cwtl
push
mov
mov
inc
sbb
jp
pop
out
loopne
or
mov
mov
adc
xchg
fdivl
dec
add
cmpb
jne
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
