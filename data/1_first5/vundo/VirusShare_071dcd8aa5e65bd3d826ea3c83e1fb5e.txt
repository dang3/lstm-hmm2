jl
add
fcoms
add
imul
add
lds
add
jl
add
add
add
aaa
lcall
js
add
bound
add
add
pop
lcall
jno
add
sbb
add
sub
add
add
add
add
add
outsb
add
xchg
add
das
add
jl
add
lret
cltd
add
jl
add
jl
add
jl
add
cs
gs
jne
je
add
add
add
js
add
bound
add
add
push
sub
add
add
sbb
pushf
add
jl
add
jl
add
jl
add
inc
outsl
add
jl
add
xchg
lahf
add
xchg
add
lahf
add
jl
add
adc
add
mov
sub
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
add
imul
add
jo
add
inc
add
jb
jae
outsl
add
inc
add
add
imul
add
je
add
add
add
add
and
dec
add
ja
and
push
add
insl
add
outsb
add
add
add
outsl
add
popa
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
inc
add
imul
add
add
nop
hlt
inc
adc
adc
fisubrs
pop
out
rclb
cwtl
mov
pusha
add
push
mov
call
pop
pop
ret
add
addb
into
add
pop
push
call
add
add
pop
add
inc
test
push
add
xchg
add
incb
add
add
add
sahf
add
add
dec
add
xchg
add
add
add
out
add
mov
add
add
ret
mov
add
test
jle
and
add
outsl
pop
jb
push
pop
add
pop
add
mov
ficompl
add
lock
or
movl
ret
mov
pop
ljmp
std
fdivrp
call
decl
push
push
out
push
push
mov
adc
lea
in
adc
push
addl
das
jge
pop
incl
xchg
add
add
cmc
add
decl
ljmp
ljmp
incl
loopne
add
test
pop
scas
add
call
mov
rolb
inc
push
jmp
std
js
pushl
mov
ret
lea
jne
jle
adc
add
aaa
adc
pop
int3
add
add
add
mov
add
add
add
pop
add
inc
add
push
add
outsl
je
imul
add
gs
es
push
popa
add
add
gs
gs
add
dec
xchg
push
add
push
or
popa
and
dec
outsb
imul
jne
gs
adcb
insb
gs
add
mov
add
add
add
pop
add
inc
add
push
add
xchg
add
incb
add
add
add
sahf
add
add
add
add
add
add
bound
add
and
cltd
dec
mov
mov
or
dec
ret
daa
mov
lret
or
sub
cmpsl
add
subb
sub
js
sub
push
addr16
stos
sarl
cmp
pushf
sbb
push
fsubrl
mov
jae
mov
jbe,pn
test
aaa
cmp
in
mulb
insl
test
inc
jnp
dec
sti
das
test
or
pop
popf
nop
and
out
jno
bound
mov
mov
pop
add
aam
cmpsb
sbb
and
dec
dec
mov
dec
loopne
enter
xchg
jne
fbstp
daa
lret
test
xor
jnp
out
or
sub
mov
lods
jg
push
rorb
xchg
data16
lahf
enter
out
es
aam
es
ror
ljmp
daa
popa
cmp
jecxz
out
fdivrl
pop
add
mov
pop
jnp
rcl
shll
pop
inc
sub
fildl
mov
or
push
jnp
out
icebp
cld
stc
fnstcw
hlt
pop
enter
cmc
push
out
mov
adc
mov
xchg
rcrb
inc
jae
adc
xor
jecxz
jge
popf
popf
jle
imul
mov
jmp
call
lahf
loope
addl
stc
inc
loope
push
jb
mov
cmp
xor
int
out
mov
lcall
pop
lret
xor
pop
roll
mov
adc
or
push
pop
leave
push
fst
dec
dec
aas
fcmovb
mov
insb
mov
cwtl
inc
xchg
push
std
outsl
ja
mov
mov
stos
adc
xchg
mov
mov
outsb
jecxz
adc
dec
adc
sbb
pop
mov
repz
faddl
dec
aas
out
sbb
inc
mov
cmpsl
jg
stc
or
mov
adc
pop
xchg
into
test
shll
dec
int
mov
out
orb
pushf
cmp
sbb
out
inc
or
pop
sahf
cwtl
fldcw
pop
movl
sub
push
sbb
sbb
push
xchg
or
mov
sbb
loope
sub
push
gs
mov
mov
sbb
jae
add
cmp
mov
cmp
pop
jecxz
arpl
out
sbb
aas
xlat
pop
pop
sub
sysenter
sub
je
pop
and
inc
jo
inc
and
add
stos
dec
nop
or
mov
out
dec
jp
fistps
and
aam
lds
cmp
jge
shr
in
orl
out
inc
cmp
inc
cmp
xchg
fcom
scas
mov
pop
je
lahf
aad
jp
fwait
xor
pop
arpl
jg
orb
in
cmpsl
popf
es
movb
cmp
push
fstl
lock
mov
push
cmp
sub
mov
xchg
arpl
jp
jb
shll
in
adc
fiaddl
stos
movsl
and
or
cwtl
ss
mov
xor
pop
sbb
mov
mov
out
cmp
lahf
sahf
movsb
push
inc
ret
and
jle
pop
and
mov
cltd
xchg
xchg
pop
nop
pop
xor
bound
cmp
insl
sbb
lock
add
mov
hlt
insb
jb
stos
push
pop
int3
scas
or
sub
stos
sub
adc
xchg
lret
cltd
iret
push
out
lcall
js
stos
push
xor
push
jae
ret
add
enter
and
jb
daa
arpl
xchg
adcl
out
sbb
outsl
push
cmp
enter
xchg
mov
push
daa
push
xchg
adc
or
mov
cltd
rcr
mov
adc
xchg
test
mov
popf
or
in
mov
adc
dec
xlat
scas
add
rorl
sub
inc
xchg
push
mov
ss
lahf
subb
icebp
xchg
or
sbb
inc
mov
jge
xchg
pop
push
ret
inc
cli
pop
adc
xchg
inc
cmp
bound
mov
cs
or
pop
push
sbb
add
lods
pop
mov
out
out
repnz
and
mov
aad
rolb
or
mov
ljmp
dec
pop
mov
sub
sar
adc
mov
incb
rol
xchg
ljmp
es
icebp
ja
cmpsl
mov
xor
std
movsb
mov
imul
or
mov
mov
mov
push
xchg
mov
xchg
imul
lret
rorl
and
xchg
fwait
cltd
bound
push
sbb
fst
push
nop
inc
mov
pop
in
jmp
lds
neg
cmpsl
ja
je
lea
rcl
pop
jno
mov
cmpsl
iret
dec
mov
pusha
jnp
sub
inc
xchg
cmc
pop
lock
hlt
ja
xchg
sub
cltd
out
sub
data16
sbb
lods
shll
inc
xchg
loop
dec
jl
jge
xor
cwtl
mov
jle
mov
sbb
mov
xor
insl
divb
insb
out
sbb
adc
push
addr16
jno
stc
shll
push
cmp
jnp
mov
fsubr
scas
cmpsl
fldl
shlb
enter
mov
xor
jbe
mov
and
xchg
lahf
loope
ljmp
xor
xchg
mov
lahf
sbb
lock
cmp
andl
xor
sub
adc
push
stc
mov
ss
and
movsb
sbbb
repz
lret
int
insb
test
add
add
test
hlt
jmp
dec
sbb
xchg
icebp
or
mov
lcall
aaa
das
push
push
dec
inc
mov
add
push
add
in
mov
iret
lret
push
xor
fcomp
testl
xor
movsb
in
movsl
dec
fsub
xlat
mov
push
repnz
dec
add
les
pushf
loope
xor
mov
cmp
js
test
out
xorl
sub
out
rorb
cmp
mov
stc
dec
adc
shr
mov
imul
pop
stc
fimull
imul
mov
push
outsl
xor
loop
mov
and
mov
insb
and
ds
int3
inc
jp
jb
xor
test
push
sbb
popw
lret
mov
xchg
insb
negl
sarb
cmc
cltd
xchg
pushf
addr16
divl
aam
fistl
and
jbe
shrl
lret
cmpsl
std
xchg
sub
repnz
sub
and
and
and
cmpsb
mulb
push
test
mov
jno
mov
test
pusha
push
outsl
pop
dec
jge
sub
pushf
push
push
out
pop
ljmp
mov
in
out
hlt
xchg
pop
dec
mov
dec
jo
popf
cmp
lahf
nop
inc
lods
lret
xor
js
jae
mov
xchg
jb
xor
push
nop
xor
sti
repz
adc
lret
dec
stos
das
cmpsb
mov
mov
and
push
cmp
mov
cmpl
call
xchg
jge
cmp
ja
xor
enter
sti
cs
into
and
dec
scas
cli
fsts
adc
xchg
or
add
pushf
cmp
adc
xor
jo
mov
in
ficoml
dec
call
fnsave
xor
cmp
jno
xchg
cmpsb
aas
lods
jbe
ja
cmp
ja
mov
lods
mov
cmp
xor
movsb
pop
fcoml
add
pusha
in
pop
inc
and
aad
mov
xlat
and
inc
push
push
pop
cmpsb
inc
cltd
jle
mov
and
lods
jge
inc
mov
jbe
pop
sahf
mov
jo
leave
sub
loopne
inc
mov
inc
mov
inc
mov
fcmovnu
ficompl
jp
sar
sub
sbb
xor
ljmp
and
addb
or
inc
or
clc
add
mov
test
das
adc
lcall
xor
leave
out
addr16
cwtl
movsl
dec
push
lods
popf
or
mov
enter
or
hlt
pop
decb
push
and
jmp
push
cmp
or
jae
push
fldenv
jnp
sti
push
loop
in
daa
mov
jo
pushf
fldenv
movl
cld
stos
ret
xlat
ljmp
fmull
mov
mov
mov
jecxz
adc
fwait
xchg
mov
jge
pop
loopne
daa
imul
out
sbb
aas
ret
pop
arpl
arpl
popf
dec
std
aaa
lret
imul
pushf
or
nop
dec
lods
mov
daa
push
or
arpl
je
and
fcompl
lcall
repz
cmp
neg
mov
cmp
lock
push
insl
pop
cmp
add
pop
mov
stos
sti
or
sbb
xchg
ret
xchg
sub
add
mov
pop
sub
aaa
mov
push
out
lahf
push
shll
mov
adc
inc
repnz
pop
fs
inc
sub
push
xor
js
popa
inc
nop
and
xchg
notb
mov
mov
push
add
popf
jmp
pushw
daa
fidivrs
dec
inc
int
stos
lea
std
cmp
mov
aam
daa
pop
fisubrl
in
push
xchg
xor
add
insl
add
pop
sub
push
insl
sub
xchg
cmpb
and
jnp
push
test
popf
mov
jle
push
cmp
stos
dec
xor
mov
dec
pusha
inc
nop
test
mov
jmp
call
push
adc
or
sarb
sbb
sub
or
int3
or
and
leave
mov
stos
stc
sub
loope
or
or
mov
lahf
mov
fucomp
stc
mov
imul
je
leave
mov
subl
test
fs
in
dec
loope
shll
sbb
jl
loopne
jmp
lahf
jl
pop
xchg
lret
push
das
cmp
inc
inc
mov
add
xlat
and
enter
sbb
fildl
sub
imul
pop
gs
dec
mov
sub
ret
jnp
ja
xchg
hlt
out
push
push
outsb
mov
add
in
push
or
les
jns
sbb
lock
ljmp
loop
mov
repz
xchg
pop
andb
jne
push
xor
pop
inc
repnz
xlat
jbe
or
outsl
jb
sub
sub
adc
xchg
mov
mov
jecxz
cmc
hlt
dec
mov
in
mov
lea
insl
mov
xor
sub
mov
push
les
cli
pop
adcb
mov
pop
and
mov
mov
push
in
jns
adc
dec
outsl
inc
push
push
sti
and
add
xchg
jo
add
in
xorl
pop
inc
fimull
dec
movsl
lock
jno
mov
lods
jge
rcl
jmp
cmp
cmp
xor
xchg
andl
bnd
mov
lret
jb
dec
and
nop
fnsave
add
pushf
stos
ror
mov
inc
push
notl
decb
push
and
jmp
call
fsubrp
fildll
movsl
lock
divl
sbb
sub
mov
sarl
ficomps
dec
fmuls
jne
adc
xchg
subb
inc
iret
jae
sbb
mov
in
mov
js
pop
xchg
lods
stos
cmc
mov
adc
mov
jbe
andb
cmp
iret
mov
fdivrs
mov
pushl
push
pop
or
and
mov
dec
jnp
jge
add
insb
inc
shll
lods
ja
nop
cmp
jge
repnz
push
fidivrs
jmp
ss
sub
clc
xchg
outsl
sub
xor
sub
orb
xchg
jp
lea
cmp
pop
sbb
add
popf
movsl
callw
imul
cs
data16
ja
xchg
xor
es
or
mov
xchg
mov
xor
xchg
sbb
jnp
imull
mov
mov
mov
push
icebp
ficoml
inc
mov
popf
fbstp
jo
je
fmul
test
cmp
leave
iret
mov
popa
and
sub
aaa
pop
movsb
pop
test
ret
aam
or
jle
rcrb
mov
push
add
cmp
es
lds
mov
adc
mov
cltd
jb
lret
pop
ffree
mov
xor
stc
push
aas
jbe
fwait
call
push
xor
fstpl
mov
mov
dec
add
hlt
movsl
rcrl
push
fsubr
dec
enter
mov
xor
and
mov
repz
insl
xlat
aaa
push
stc
xchg
dec
cmp
dec
pop
push
imul
jg
repz
bound
sbb
js
dec
jo
ret
or
inc
mov
xchg
xchg
mov
add
push
shr
ret
pop
push
shlw
or
jge
scas
fidivs
into
sub
mov
xchg
inc
mov
mov
mov
fidivl
loope
dec
inc
fisttpll
std
int
outsl
add
mov
xchg
jbe
out
js
repz
pop
fs
in
add
cmpsb
mov
push
ljmp
xlat
push
mov
xchg
dec
ljmp
push
xlat
nop
jp
and
xor
in
adc
push
and
push
add
imul
or
xor
jne
jmp
out
and
out
in
push
xor
jb
mov
dec
subb
ret
mov
xchg
xchg
and
insl
lock
lret
data16
lds
test
add
xchg
xor
xchg
mov
mov
fcoms
cli
insb
aam
test
pusha
ret
icebp
mov
add
dec
out
mov
pusha
lahf
out
mov
sub
lds
repz
jmp
adc
sbb
test
pop
adc
and
scas
icebp
lds
mov
lret
push
fcompl
inc
test
cmp
mov
mov
in
pop
push
fstps
jecxz
out
mov
pushf
popa
lcall
lret
inc
leave
nop
adc
jae
pop
loop
dec
push
sub
sub
je
sub
xor
xlat
jecxz
pushf
enter
out
cmp
mov
xchg
cmp
pop
mov
cli
adc
shrl
insl
jno
xlat
adc
cmpsl
add
or
lods
push
mov
jecxz
and
sbb
addr16
cmc
cwtl
negb
push
into
rolb
and
out
movb
out
movsb
ret
scas
ja
out
cmp
pop
push
mov
jmp
mov
pop
fwait
inc
nop
imul
data16
mov
call
es
add
xor
in
pop
cmpsl
pop
sub
in
jmp
push
push
cs
push
inc
cmpsb
ret
and
push
sbb
int3
sbb
rclb
push
sti
mov
or
or
push
insb
dec
ss
mov
mov
lcall
mov
mov
stos
je
push
repnz
pop
roll
or
loope
ja
cs
push
mov
lea
idivl
adc
cli
push
or
mov
xor
aad
dec
scas
dec
testb
pop
popf
cs
xor
mov
aam
test
push
or
scas
mov
cmc
sbb
aaa
add
dec
or
push
cmp
call
ss
movsl
cs
loope
mov
add
lea
mov
or
push
std
or
jmp
ja
push
lret
lcall
test
out
loop
dec
sbb
out
add
jp
add
call
je
sub
data16
jno
adc
inc
dec
fbstp
pop
or
pusha
daa
imul
lret
insl
jno
cmc
ret
pop
mov
sbb
inc
push
xchg
or
ljmp
pop
dec
dec
jae
xchg
je
jb
xlat
push
xchg
xor
addb
cmpsb
out
inc
sti
pop
movsl
mov
frstor
mov
add
lret
cli
pop
sub
les
fiadds
pop
jle
or
xchg
sbb
andb
lods
inc
sahf
mov
push
or
fs
arpl
fsub
xor
and
or
decl
leave
sub
imul
xor
sub
cmp
cmp
mov
pop
lods
icebp
push
pushf
out
lahf
cmp
mov
les
pop
stos
jecxz
mov
dec
jne
push
nop
xchg
sbb
push
jo
arpl
cmovge
repz
pop
push
pusha
pop
adc
inc
jb
js
mov
test
jl
loop
mov
push
negl
aad
stos
fisubl
ja
pop
sub
sbb
sub
test
in
jmp
mov
adc
movsb
xchg
outsb
out
popf
int
cltd
std
inc
jae
sti
ret
xchg
jmp
push
mov
fcmovb
cmp
notl
fstl
test
test
cmp
sti
stc
lods
insl
xchg
add
daa
popl
sti
daa
stos
mov
faddp
clc
in
dec
push
sbb
pop
fdivr
out
sbb
sub
add
pushf
loopne
fs
and
jl
push
pop
sub
test
cld
push
adcl
dec
mov
aas
aad
hlt
cmp
into
shlb
push
clc
in
sarb
mov
nop
test
fcmovnb
xor
xor
test
push
or
lock
negl
mov
mov
add
les
in
les
or
pop
add
clc
repnz
jno
lods
addr16
sub
hlt
push
sub
test
push
repnz
je
mov
sti
enter
pop
mov
loope
into
xor
cld
or
les
push
cmp
pop
push
xchg
fimuls
add
fsts
xor
and
fildll
std
dec
push
ret
lock
lcall
lret
pop
cmp
jge
sub
xor
xchg
aam
pop
push
ja
dec
test
enter
or
mov
jb
in
sub
xchg
push
iret
ret
cmpsb
loop
cmp
mov
gs
xchg
cmp
cmpsb
pushf
in
imul
lahf
mov
mov
ret
loop
mov
mov
mov
std
aad
xchg
lret
or
adc
aaa
or
jns
pop
rorb
mov
cmp
add
mov
jbe
cs
fdivrp
xor
fcomi
jmp
fmull
xor
ljmp
test
into
or
mov
jno
call
sub
fsubl
push
sbb
je
and
xchg
dec
jb
pop
mov
add
cmp
mov
xchg
lea
cmp
lock
in
sbb
add
call
hlt
pop
dec
jne
test
mov
mov
arpl
dec
daa
pop
cltd
xchg
loop
add
enter
mov
xorb
inc
aas
lods
xlat
movsl
push
call
je
xchg
xchg
mov
shl
cmp
jns
inc
sub
int3
jae
or
lcall
shlb
aas
inc
pop
pushf
add
pop
lret
dec
cmp
push
loop
mov
repnz
lods
xlat
enter
push
xchg
cmpsl
clc
jne
enter
mov
mov
lret
cmp
mov
push
xor
push
mov
dec
pop
mov
aam
mov
jg
mov
and
sub
lahf
inc
movsb
dec
push
inc
repz
inc
mov
jp
sbb
pop
roll
imul
bound
lods
dec
enter
add
and
fcmovb
and
mov
inc
jnp
sahf
ret
ficoml
sub
outsb
add
outsb
clc
or
stc
fisubl
out
xchg
dec
inc
in
sbb
mov
adc
data16
imul
pop
or
leave
mov
dec
insb
addr16
jb
sbb
test
cmp
jae
adc
cmp
and
cmp
lcall
jecxz
sbb
jmp
mov
adc
adc
add
or
jmp
fcomps
cmpsl
fsubs
icebp
push
out
std
lds
jb
stos
add
cwtl
push
cmpsl
icebp
ret
pop
adc
xor
mov
push
jge
mov
xlat
mov
stos
push
push
add
jo
lcall
ljmp
adc
pop
jg
call
aad
fstps
gs
adc
in
or
enter
xor
xchg
add
lcall
daa
iret
aas
sarl
insl
ret
popf
dec
xor
adc
mov
inc
sbb
push
push
xchg
pop
out
cvtps2pd
jno
rcrl
loope
dec
mov
rcrb
adc
sub
imul
cmp
push
int3
sbb
jo
jmp
mov
scas
mov
test
out
sub
xchg
jge
sbb
push
adc
addr16
xchg
xchg
lds
mov
lret
xchg
hlt
or
jecxz
std
lcall
cmp
gs
imul
rcll
std
mov
mov
mov
pop
stc
inc
je
pop
aaa
mov
test
lods
je
or
mov
xor
xchg
or
cmp
cmpsl
arpl
repnz
mov
pop
loope
inc
outsb
repz
cs
mov
cmp
scas
inc
push
inc
jmp
inc
or
push
movsl
xchg
push
cmp
sub
std
adc
aam
xchg
sbb
cmp
insl
loope
push
mov
call
mov
pop
mov
xor
imul
jp
mov
sub
xlat
cmc
lea
repnz
ss
mov
ret
and
insl
jnp
mov
jo
pusha
outsb
adc
clc
loop
ret
cmpsb
or
jecxz
xlat
lret
loope
xor
jmp
pop
or
or
xchg
sub
mov
sbb
xor
cli
adc
ss
or
sar
or
fstpl
and
dec
lds
sarl
dec
mov
add
stc
push
xchg
in
mov
inc
call
iret
dec
or
decl
into
inc
sub
xchg
adc
mov
test
xor
push
or
cmp
int3
scas
and
in
sub
xor
movsl
add
inc
add
jp
ss
inc
mov
popa
mov
ds
das
and
mov
cmp
mov
or
and
in
popa
hlt
pop
xchg
dec
jmp
bound
push
push
xchg
in
das
dec
popf
xchg
mov
add
dec
lahf
data16
pop
pop
cmp
xchg
aaa
rcrl
insl
or
les
ret
or
and
cld
xor
xor
aaa
test
mov
sar
in
ja
mov
movsb
inc
xchg
daa
cltd
std
addr16
inc
and
cld
mov
push
test
in
fldcw
adc
pop
xchg
in
les
sbb
cltd
shll
dec
fwait
scas
movsl
setp
fwait
and
or
mov
or
bound
push
cmp
sti
hlt
pushf
mov
mov
dec
push
inc
xor
push
cmp
dec
jg
std
sub
sbb
xor
shr
lods
int
int3
test
mov
sbb
jecxz
gs
dec
enter
scas
mov
in
lret
les
mov
lahf
das
sbb
jb
or
mov
dec
pusha
dec
cmc
stos
mov
and
sub
adc
and
dec
insl
add
or
pop
out
dec
xchg
in
jbe
inc
fs
and
sbb
jno
popf
pop
or
mov
pop
aas
fwait
adc
push
pop
xchg
cmp
imul
loop
popa
mov
pop
xchg
ja
shrl
dec
cmpsb
or
sarl
mov
jns
sub
hlt
xchg
ljmp
lods
call
cmp
sub
mov
fcoms
mov
pusha
xchg
pop
clc
jb
cmpsb
pushf
jne
shrl
iret
push
dec
xor
pop
dec
repnz
pop
adc
sti
jae
mov
pop
cmp
adc
mov
jae
int3
mov
cmc
notb
aaa
sbb
loop
pop
ja
or
push
xchg
inc
lahf
call
jg
sub
icebp
mov
cmpsl
xlat
mov
lds
inc
shrb
fadds
jg
jns
jae
jbe
cwtl
loope
or
jnp
cli
shl
mov
insl
out
dec
pop
sbb
pusha
fs
mov
lcall
sbb
mov
fdecstp
aam
jno
cmp
push
lcall
scas
add
repnz
sahf
add
add
add
add
add
add
bound
add
add
mov
add
add
ret
mov
add
add
jle
add
add
add
jb
add
add
add
push
add
add
bound
add
add
xor
add
add
add
add
xchg
add
incb
add
add
add
sahf
add
add
and
adc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
push
push
pushl
call
mov
cmp
je
mov
movb
call
movl
call
cmpl
jne
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
call
pushl
call
xor
leave
ret
push
mov
sub
push
push
push
orl
mov
inc
mov
pushl
pushl
pushl
push
push
call
add
mov
cmp
jbe
andl
cmpl
jne
push
call
mov
mov
movzbl
sub
push
call
mov
mov
inc
inc
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
call
jmp
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
mov
movzbl
mov
movzbl
sub
sub
test
je
movl
movl
movl
andl
jmp
jmp
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
push
pushl
call
mov
pushl
call
cmpl
jb
call
mov
pop
pop
pop
leave
ret
pop
or
inc
add
add
and
and
and
les
xchg
lcall
in
add
add
das
add
add
sub
add
add
pop
pop
add
or
loop
clc
add
add
enter
sbb
add
jno
sbb
pop
dec
mov
leave
cld
jb
push
dec
mov
jo
sub
push
outsb
pop
jo
cld
stc
xor
mov
sti
mov
addr16
inc
in
jmp
adc
or
btr
add
inc
adc
leave
dec
ja
cld
decl
pop
in
arpl
lea
inc
push
pop
ret
movsb
imul
mov
test
inc
and
aam
rorb
cmp
loopne
mov
pop
adc
xor
test
lea
pop
add
jmp
std
pop
aad
call
rcrb
adc
or
add
push
adc
loopne
add
push
jne
sarb
jo
jns
push
call
jle
push
push
add
test
and
je
cmp
sbb
add
xchg
sbb
sbb
addb
cmp
hlt
lock
add
sbb
dec
add
gs
insb
insb
movsl
insl
xor
je
test
jb
outsb
fistl
lods
imul
jae
insb
je
push
push
insb
imul
inc
cli
std
xor
jae
test
add
jnp
loopne
insb
add
add
add
add
add
cwtl
cwtl
add
add
enter
add
clc
cmp
add
add
or
add
add
add
add
mov
mov
add
enter
ret
dec
inc
jge
out
das
das
je
add
or
es
sbb
adc
ficoml
dec
adc
cmpsl
pop
out
xchg
cwtl
stos
out
adc
stos
lods
xor
out
push
mov
cmpsl
jae
add
push
test
mov
push
ret
int
pop
fildl
xorb
mov
mov
bound
fimuls
xor
sbbb
pop
ds
xlat
sbb
push
xchg
shll
jbe
fisubrs
scas
or
aas
sarb
dec
pop
incb
frstor
push
scas
test
xchg
xchg
stos
in
add
push
xchg
mov
mov
aaa
mov
jmp
cmpsb
mov
mov
stos
xchg
decl
pop
and
dec
inc
jbe
in
lret
push
pop
imul
sbb
jae
push
fdivrl
pop
mov
lret
mov
mov
aad
test
insl
adc
mov
jb
adc
pop
jns
test
lret
ljmp
cmp
movsb
jo
aas
popf
xor
scas
inc
cmp
call
imul
add
in
clc
push
pop
xchg
les
jne
stos
pushf
or
in
mov
sbb
movsl
enter
mov
es
dec
cmp
hlt
lret
xor
in
xchg
or
push
repnz
add
jl
pop
cs
xor
sub
mov
movl
aam
xor
cmp
in
mov
mov
call
test
inc
mov
repnz
push
inc
xor
dec
xchg
xlat
pop
push
dec
mov
mov
mov
cmp
les
mov
mov
popf
xlat
mov
js
push
xor
dec
jb
ss
divb
orl
sbb
in
aad
xchg
xor
mov
mov
fcmove
xor
fdivrp
jp
in
jb
mov
push
xchg
rep
pop
mov
and
cmp
test
xchg
inc
insl
je
push
inc
mov
push
fcomps
stc
sbb
jb
push
mov
mov
xchg
jnp
les
shr
cmp
js
xchg
ror
add
xchg
cltd
cmc
cltd
xchg
push
jae
xchg
negl
lock
adc
shll
mov
subl
adc
mov
sbb
jbe
loope
cmc
neg
xor
or
lret
adc
cmp
in
pop
mov
jne
or
or
mov
jne
add
inc
or
sbb
shll
xchg
sete
cmc
inc
fmul
cli
ja
sub
mov
mov
adc
out
xor
cmp
in
or
sbb
lcall
punpckhwd
or
je
ud2
pusha
dec
push
push
insl
add
lret
xchg
xchg
mov
call
mov
add
pushl
je
cltd
in
or
mov
mov
sbb
xchg
pop
jbe
into
test
inc
f2xm1
push
sbb
dec
xor
scas
sbb
jne
daa
out
movsb
inc
sbb
pop
sbb
jbe
lods
jnp
inc
pop
pushf
popa
dec
push
xchg
adc
sti
mov
cmpsl
push
pushf
in
test
je
fstps
cmpsl
aad
mov
push
dec
xchg
lods
jle
adc
or
adc
cmc
pop
xor
add
int3
mov
cmp
gs
and
repz
cltd
or
jae
rcl
arpl
jecxz
movsb
dec
sub
pop
push
push
pop
mov
push
jae
dec
adc
push
or
dec
mov
inc
jae
mov
push
inc
mov
test
outsb
shll
cld
out
sub
stos
lret
xchg
inc
xlat
aam
push
xchg
push
in
ja
mov
fstpt
mov
xor
lcall
dec
std
fiadds
cmpsb
mov
leave
jo
xor
stos
cltd
adc
xor
lahf
xchg
or
pushf
adc
fnstsw
and
imul
stos
xor
cmpsb
mov
adc
test
cltd
inc
outsl
fs
jnp
sub
push
out
sti
push
dec
frstor
xchg
inc
and
xor
or
xor
notl
inc
push
stc
std
sbb
lahf
mov
mov
ljmp
xchg
or
xchg
insb
mov
xor
mov
mov
cmp
pop
sbb
mov
push
and
push
mov
test
sub
sbb
aas
shrb
xor
xchg
aam
fdivrl
xor
std
sub
popf
fs
mov
push
lock
xchg
jg
jbe
jge
or
mov
xchg
incl
outsl
sub
mov
mov
xchg
iret
test
aaa
dec
loopne
mov
inc
lret
adc
icebp
ds
jo
aad
mov
int
lcall
or
pop
add
push
lea
inc
inc
movsb
iret
jp
pop
bound
mov
pushf
inc
aad
fbld
movq
iret
xchg
imul
mov
pop
out
xchg
cmp
fcmovnbe
rcrl
dec
inc
sub
mov
faddl
push
in
orb
loopne
dec
ret
pop
cmpsl
mov
mov
xchg
pusha
push
and
mov
aam
cmp
ljmp
decl
push
lahf
push
das
inc
add
fcomi
mov
les
xor
das
lret
gs
pop
loopne
call
mov
adc
popa
adc
adc
lahf
cltd
jne
cltd
dec
sbb
mov
mov
mov
dec
fnstsw
loope
xchg
adc
sub
add
lahf
or
scas
jge
pop
mov
aas
jo
jb
sbb
push
mov
clc
xchg
or
cmp
adc
xor
xchg
mov
sbb
lods
rcl
sub
xchg
jnp
subl
mov
rcll
adc
adc
insb
cmp
call
add
fdivs
push
or
push
flds
inc
stos
mov
inc
and
mov
std
or
push
int
adc
add
lods
test
shrb
or
test
jb
push
add
ficoms
btc
out
insl
lea
movsb
insb
pop
jecxz
sub
loopne
and
xchg
mov
dec
xchg
xchg
and
or
push
or
push
mov
outsl
and
and
push
mov
cwtl
jns
jo
outsl
mov
jo
jp
sbbl
loop
mov
push
lret
out
inc
pushf
xchg
mov
cmp
push
test
sub
pop
nop
ret
daa
pop
sbb
arpl
dec
ljmp
push
hlt
adc
push
sub
sbb
cmp
sarl
es
out
fninit
xchg
rolb
outsb
scas
rcll
sahf
jmp
into
adc
mov
or
imul
add
mov
fs
mov
pop
call
arpl
enter
rcrl
pop
lods
les
push
leave
das
or
push
loope
outsb
repnz
mov
data16
insb
cmp
jnp
js
in
cmpsb
jne
add
adc
xor
jno
mov
pop
mov
in
ret
xchg
test
add
fldpi
fwait
movsb
adc
fsub
cmp
and
jecxz
sub
mov
sbb
dec
jp
loope
ss
pop
jl
xor
repz
pop
push
outsb
mov
out
pop
lret
add
mov
jmp
pop
scas
mov
jmp
xchg
push
or
adc
add
xor
mov
aad
cltd
adc
loop
jg
add
cmpsb
inc
cmp
cmpsl
mov
fisttpl
adc
es
das
aad
ja
iret
shlb
inc
mov
dec
aam
stc
idivb
sub
push
adcl
outsl
lea
and
xchg
shrl
mov
mov
adc
mov
xchg
insb
jl
outsb
arpl
dec
repz
insl
cmpsl
imul
imul
cmp
and
dec
aas
jo
push
xchg
push
mov
ss
adc
in
adc
mov
mov
addr16
cltd
mov
into
ja
mov
frstor
lahf
xchg
out
jp
aaa
pop
mov
mov
sbb
jge
jae
mov
cmc
out
das
lahf
mov
and
jae
mov
inc
inc
mov
sbb
mov
sbb
rolb
ljmp
clc
cmp
mov
mov
test
adc
xor
or
xor
sub
jmp
out
mov
cmp
cmpsl
and
inc
inc
icebp
inc
inc
mov
and
add
test
mov
leave
xchg
lea
hlt
movsl
lahf
cltd
adc
shl
fcmovnu
jne
add
mov
movsl
lds
int
xchg
mov
addr16
mov
mov
add
adc
testl
cmp
test
call
push
das
movsb
and
mov
rclb
movsb
out
les
pop
test
and
repz
in
outsl
insl
popa
cmp
rcl
pop
xchg
mov
push
pop
icebp
fidivrl
xchg
hlt
jnp
cmp
mov
shll
dec
inc
inc
aas
push
xorl
fsubs
test
je
xor
fisttps
push
mov
pop
push
mov
mov
test
sbb
mov
movsb
pusha
xor
sub
mov
xlat
ds
rol
and
test
or
mov
fdivrl
mov
push
or
fs
pushf
fs
in
jnp
xlat
mov
fimull
lcall
push
mov
mov
cwtl
jle
adc
sbb
leave
je
outsl
rcrl
fchs
popf
jo
dec
push
push
ret
adc
mov
and
jne
loopne
call
ljmp
out
jecxz
int
adc
push
scas
sbb
jbe
mov
insl
rcll
xor
test
mov
call
push
roll
movsl
jnp
pushl
pop
decb
je
and
out
pop
repnz
push
push
out
jb
js
push
out
mov
lods
push
aad
push
dec
dec
push
jne
pop
xor
outsl
ja
cli
cmp
xchg
xor
lret
sbb
imul
sbb
jmp
mov
mov
mov
shll
data16
into
xchg
add
push
dec
clc
arpl
stos
nop
in
add
cmp
adc
jmp
pop
lret
mov
shll
hlt
or
or
cmp
ja
rorl
ja
sbb
push
dec
jle
xor
faddp
nop
xorb
addr16
jmp
adc
ja
movsb
cmp
repnz
xchg
lods
test
lods
mov
add
cmp
sub
clc
xor
fstl
dec
out
dec
out
mov
mov
cld
sbb
mov
insl
cwtl
fcompl
mov
pushf
stc
repz
dec
jg
push
xchg
cmpsb
out
xchg
loop
dec
jge
in
jmp
mov
adc
pop
mov
xchg
mov
inc
cltd
cs
out
mov
pop
out
jg
and
test
and
xor
xlat
cmp
mov
add
mov
fisubrs
mov
data16
or
ss
jg
xor
xor
test
inc
xchg
pop
push
sub
inc
sahf
adc
cmp
xchg
dec
repz
imul
lcall
sbb
mov
test
jae
lods
adc
cli
dec
pop
ficompl
popa
fildl
les
sub
popf
jmp
mov
mov
adc
popf
repz
and
arpl
mov
jg
jnp
push
in
mov
inc
pop
stos
and
inc
ss
sub
jno
jmp
sub
pop
cmp
and
pop
or
ficompl
mov
sub
dec
cmpsl
pop
push
sub
inc
xchg
in
test
push
inc
jle
out
and
fs
enter
jbe
xor
clc
xchg
push
pop
pop
pusha
rcll
push
outsl
cmp
jge
ja
lret
subb
sbb
fiadds
lods
movsl
push
repnz
cld
in
stos
lock
inc
xor
dec
scas
mov
aas
push
xchg
popa
int3
lea
test
imul
dec
fnsave
es
popa
xor
push
xor
outsl
and
mov
add
inc
test
inc
xor
nop
adc
mov
jae
or
addr16
repnz
aaa
sub
addr16
xchg
fidivrs
mov
pop
jp
xchg
add
fildll
aam
or
mov
dec
inc
mov
aas
and
or
sar
int
push
push
push
cmp
leave
leave
mov
inc
arpl
mulb
popa
sub
jne
push
push
dec
test
stc
dec
psrld
push
push
xor
mov
pop
in
out
mov
ror
xor
fcom
jae
jb
mov
icebp
hlt
test
loope
scas
sub
stos
clc
cmp
or
dec
dec
loop
ss
inc
shlb
ja
fsubl
sbb
jecxz
push
sbb
adc
push
or
mov
push
xor
pop
bound
fldenv
mov
mov
mov
or
mov
mov
aaa
int3
and
mov
and
xchg
jne
mov
fldl
push
adc
pop
aaa
std
negl
aaa
sbb
jae
sar
mov
pusha
mov
pop
shrb
or
mov
jge
pop
bound
push
divb
andb
fstpl
fnstenv
mov
sub
sub
cs
xor
xchg
xchg
or
ds
sbbb
xchg
adc
iret
lret
stos
or
das
mov
andb
jge
jb
dec
rcll
lret
idiv
jle
add
loopne
movsl
mov
mov
sbb
std
push
arpl
out
adc
and
imul
xor
sub
je
stc
xor
decl
jno
orl
iret
and
cmp
call
imul
sub
sahf
and
insl
loop
in
mov
mov
fistpl
cmp
mov
jne
gs
xor
repnz
mov
push
cmp
mov
xchg
pushf
sub
xor
stc
sub
sahf
loop
test
pop
xchg
outsl
rorl
int
jl
inc
test
dec
inc
cmp
cmc
call
dec
in
lds
add
in
sbb
imul
add
mov
mov
inc
das
lods
movl
daa
call
sub
decl
or
nop
push
mov
push
push
lods
scas
and
dec
cltd
add
enter
out
popf
mull
mov
leave
into
or
push
xchg
cli
filds
adc
jle
imul
mov
and
repz
xor
add
push
or
outsl
sbbb
cmp
and
add
orb
sbb
xor
mov
mov
xchg
int3
fldt
testb
out
shll
dec
cltd
cmp
frstor
orl
jecxz
jge
and
loopne
pop
xchg
pop
scas
cltd
arpl
inc
pop
mov
adc
lret
rsm
std
adc
xlat
dec
push
sub
and
out
jecxz
adc
fsts
pusha
xchg
add
nop
add
sbb
in
outsl
push
push
les
movsl
or
outsb
sti
lret
test
fidivs
dec
daa
mov
imul
or
test
xchg
pushf
stos
roll
ret
mov
or
inc
dec
dec
mov
lds
rorb
add
push
adc
pop
xchg
mov
pop
stos
ret
xchg
shll
jo
jb
mov
fisubl
stos
inc
in
mov
outsl
fwait
in
aas
pop
xor
xchg
out
mov
jne
mov
addr16
fldt
in
stc
or
sbb
and
and
popf
xchg
pop
mov
jnp
sub
imul
fs
mov
mov
cmp
inc
lcall
and
pop
jnp
xor
addr16
aaa
inc
ret
pop
adc
inc
aam
xchg
cmp
mov
cmpsl
add
sbb
stos
pop
or
cs
int3
out
in
mov
mov
pop
aaa
dec
xor
stc
xchg
pop
ror
fwait
push
pop
shll
fnstcw
movsb
outsl
mov
or
add
push
mov
and
arpl
callw
add
rcr
add
cmp
data16
dec
imul
xchg
jbe
pop
xchg
xchg
popa
into
aad
mov
xlat
scas
ret
jp
sahf
outsl
cwtl
nop
shr
push
xchg
sbb
repz
jmp
mov
jecxz
hlt
xchg
negb
pop
mov
add
in
arpl
mov
mov
mov
rcll
and
jae
repz
lret
lcall
jns
push
pop
into
sbb
push
push
cmpsl
or
push
adc
cmp
sti
orl
test
mov
sbb
lret
sub
cmp
pop
repnz
sahf
pop
mov
dec
sbb
pop
cs
pop
cld
inc
loope
mov
test
mov
lahf
sub
sub
rorb
gs
movsb
inc
mov
out
sub
rcll
mov
popf
iret
adc
int3
mov
sub
fld
xchg
push
inc
movb
xor
or
jle
mov
dec
sub
jp
sti
out
xor
ret
stos
lods
inc
std
xor
iret
pop
cmc
mov
int3
clc
jp
mov
or
adc
xchg
out
push
lods
pop
cmpsb
and
push
or
push
mov
mov
enter
mov
or
fsubs
xchg
pop
call
dec
cmc
mov
or
ds
inc
lret
das
mov
jl
sub
fisubrs
push
cli
mov
cmpsl
test
outsb
sbb
int3
and
daa
fbld
mov
sbb
pop
arpl
shrl
sbb
inc
test
xor
scas
cwtl
cmc
xchg
mov
pusha
inc
xchg
fs
inc
int3
sbbb
lret
icebp
sub
lcall
inc
pop
psubq
mov
pushf
cmp
cmp
lock
lahf
add
sub
shll
sub
arpl
or
icebp
or
mov
dec
add
push
fimuls
ja
dec
lret
add
or
dec
les
andb
fnstenv
add
mov
lods
cmp
xlat
xchg
out
pop
mov
add
fidivrl
insl
mov
orb
jo
add
ret
sub
pop
adc
shlb
int
push
data16
popa
push
add
add
push
jo
inc
mov
push
mov
fsubrs
movsb
fwait
jecxz
std
mov
jbe
fcoml
sub
mov
mov
sub
test
add
scas
lods
push
push
jae
orl
stos
mov
insl
dec
jne
mov
cltd
xor
or
adc
fimuls
mov
and
sbb
leave
stos
mov
stos
int3
jns
fwait
dec
loope
pushl
mov
lock
mov
jecxz
clc
inc
lods
test
pop
pop
dec
lock
mov
sub
mov
cmc
call
sahf
mov
mov
sub
out
adc
in
sahf
clc
pop
add
imul
rcr
repz
data16
inc
jnp
mov
xchg
pop
movsl
inc
push
cmp
mov
pop
xor
mov
mov
ss
and
fldt
inc
jnp
add
xor
mov
sbb
sub
das
jb
mov
outsb
insl
cmp
sarb
xor
jle
inc
or
icebp
add
xchg
test
ja
add
jp
mov
insb
mov
in
cmpsl
xor
pop
mov
or
xchg
imul
xchg
jne
add
ffreep
dec
test
repz
pop
pop
and
leave
push
mov
mov
mov
sarb
xor
sahf
imul
mov
push
pop
mov
loopne
leave
and
loope
cmp
jbe
push
sbb
inc
pop
pop
repz
loope
outsb
xor
icebp
pop
cmp
lods
out
movsb
or
mov
xchg
flds
push
ljmp
sbb
or
and
sub
mov
fiadds
sub
or
push
mov
pushf
rol
test
and
cmp
mov
add
push
inc
cmpsb
dec
roll
or
mov
mov
mov
faddl
test
and
mov
push
ficompl
jle
xor
aaa
rclb
pop
rcrb
dec
fwait
inc
das
insb
xchg
pop
push
bound
cmp
sbb
out
flds
ja,pt
repz
js
pop
lods
push
test
cmp
mov
dec
xchg
repz
jno
jo
mov
movsl
inc
dec
pop
adc
push
push
icebp
push
ret
xlat
mov
mov
mov
mov
and
inc
adc
aad
stos
ljmp
jns
inc
mov
mov
das
rol
aad
int
ss
add
cmp
jnp
push
mov
jg
mov
imul
mov
adc
fsubr
out
repnz
push
popa
scas
jb
jmp
add
notb
ss
push
push
pusha
aas
int
into
ror
pushf
jo
add
iret
lret
rcll
lea
dec
dec
js
mov
scas
jns
push
lahf
push
imul
and
pop
pop
add
aas
sti
xor
adc
pop
dec
or
lea
and
mov
out
and
adc
mov
pop
je
xor
shrl
mov
add
cmp
pop
gs
iret
dec
push
xlat
sbb
in
pop
xor
and
mov
daa
stc
int3
das
cld
pop
sbb
jl
mov
fimuls
loop
jl
mov
aad
leave
ror
lock
push
cmp
sub
push
jmp
fcmovnb
add
adc
push
enter
mov
bound
out
xchg
je
repz
cwtl
lcall
decb
inc
dec
xchg
xchg
scas
scas
fidivrl
data16
daa
mov
mov
roll
jmp
nop
sarl
mov
aam
xchg
cmp
add
cld
mov
testl
jne
mov
xor
jne
lds
and
lock
movsl
pop
pusha
shlb
aas
sbb
lds
push
mov
mov
mov
pusha
fs
and
pop
xchg
xchg
cs
arpl
mov
jmp
pop
sub
dec
mov
shll
scas
adcl
ss
pop
ds
idivl
mov
test
cmpsl
xchg
mov
out
insb
addl
xor
cmpl
mov
xchg
in
arpl
push
lods
pusha
or
jp
clc
lret
mov
shr
push
test
xor
xchg
cmp
outsb
repnz
mov
mov
data16
xchg
jns
cld
mov
aas
stc
arpl
lock
mov
std
in
xchg
dec
ds
fisttps
stc
lods
cmpsb
test
push
adc
fwait
mov
jmp
mov
and
pop
aas
pmaxub
sar
loope
dec
and
scas
shlb
aas
jecxz
sbb
jge
hlt
adc
mov
imul
out
inc
call
ret
das
sti
sti
lods
decl
push
push
leave
push
in
or
xchg
cwtl
ret
xchg
int
fnstenv
aad
jnp
mov
jl
cmpsb
mov
sbb
inc
les
leave
jb
daa
sub
cld
sub
lock
gs
mov
cwtl
add
test
fadd
repnz
mov
dec
push
in
mov
jnp
sub
cltd
mov
ja
dec
pop
lcall
cmpsb
lret
sub
es
enter
sbb
das
gs
fdivrp
fucomip
mov
and
sahf
cmp
adc
aad
mov
iret
pop
shlb
lcall
arpl
mov
sti
mov
fstpt
add
orb
inc
mov
fists
xchg
xchg
mov
lds
inc
out
popf
push
fnsave
add
or
movsb
push
sub
jbe
or
outsb
lret
push
mov
repnz
scas
aas
push
dec
in
sbb
jmp
adc
lahf
lahf
lds
jmp
add
pop
pop
add
add
mov
mov
add
enter
add
sbb
add
add
add
add
js
add
add
test
add
add
fcomp
add
add
or
push
add
add
add
imul
dec
add
add
pushf
pushf
add
or
int3
in
add
or
sbb
in
in
int3
or
add
pop
fadds
push
stos
stos
add
iret
js
js
nop
aaa
js
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
or
add
add
jb
and
dec
dec
mov
add
add
lret
adc
add
add
insb
add
or
add
add
add
add
add
add
int3
mov
sbb
add
add
insb
push
add
add
mov
iret
loop
inc
jb
scas
mov
inc
pop
add
gs
movb
fiaddl
inc
dec
inc
xorl
in
lea
mov
cltd
add
add
idivb
adc
adc
mov
adc
push
test
cld
adc
add
inc
rorb
leave
dec
or
int3
mov
stos
jae
incl
xor
int3
fmull
in
push
movsl
jge
add
or
add
add
ds
incb
add
add
cld
or
add
mov
add
decl
mov
lahf
scas
add
clc
push
popf
push
cmp
mov
mov
jne
jae
adc
cli
faddl
lcall
pop
sub
add
add
add
dec
movb
add
pushf
xor
dec
add
in
xor
add
cmp
jns
inc
push
dec
outsl
inc
outsb
je
cmp
je
jo
mov
push
gs
mov
imul
insb
dec
push
popa
arpl
das
sub
push
push
cs
fsts
add
fidivrs
outsl
xchg
xchg
mov
data16
gs
js
dec
add
add
push
add
add
mov
add
in
add
add
sbb
add
add
or
add
add
add
add
mov
cld
add
add
ljmp
jae
iret
cmc
xor
mov
push
es
pusha
idivl
iret
dec
inc
jae
pop
loop
sbb
xor
repz
into
xchg
inc
cld
mov
cmpsl
in
lods
pop
and
xchg
lcall
xor
pusha
mov
dec
scas
push
nop
test
xor
or
sub
daa
out
ds
cmp
adc
mov
aad
add
call
mov
xor
sbb
test
and
jb
mov
in
xchg
cmp
mov
pop
cmp
pop
jb
das
xlat
cld
xor
cmp
push
cltd
pop
into
sub
fs
ja
cltd
lret
or
in
ret
das
mov
repz
pop
lret
fdivs
push
in
xchg
xor
fstps
pushf
loopne
xor
out
pusha
ret
push
mov
mov
sbb
insl
xor
push
xorps
push
mov
popf
xchg
lret
mov
pushf
aam
xchg
int3
ficoms
std
xchg
xchg
test
pop
sub
adc
cmpb
hlt
adc
clc
jo
rclb
in
jb
iret
nop
xor
sub
pop
dec
cli
int
xchg
fisubl
jecxz
int
inc
dec
inc
ljmp
shlb
shrb
mull
andl
aaa
jmp
pop
shr
inc
js
test
inc
test
fnstenv
add
mov
mov
xor
jno
ljmp
out
jge
pop
arpl
aad
iret
in
add
pop
lahf
dec
cli
mov
lcall
mov
sbb
cwtl
ljmp
lret
mov
dec
out
lret
inc
stc
cmp
sub
xchg
jbe
fcompl
mov
adc
cli
insl
rcll
ja
cli
mov
mov
ret
test
mov
leave
mov
fsub
lds
dec
cld
ror
in
cltd
cmp
pop
xchg
mov
movsl
cld
mov
cmp
xchg
mov
mov
sbb
lcall
pop
fnstsw
jmp
jnp
dec
jecxz
daa
andb
into
mov
jo
xchg
add
lods
call
movsl
or
mov
xchg
scas
xor
daa
lcall
enter
mov
add
aas
mov
pop
push
lds
jnp
jbe
movsw
popf
fs
xchg
sahf
call
adc
cmpsl
adc
pushf
hlt
std
add
mov
adc
cmp
fwait
ljmp
and
adc
addl
xlat
lcall
jae
stos
sub
hlt
hlt
xchg
out
jg
lret
inc
dec
ret
sub
jne
aaa
and
push
inc
adc
fistl
bound
jae
add
mov
enter
push
mov
inc
sub
push
rcrl
test
pop
inc
push
sbb
inc
xchg
xchg
lret
inc
popl
into
movsb
cmp
push
loopne
cmp
inc
movsb
notl
lret
sahf
xchg
in
data16
test
mov
add
pop
adc
pop
push
pop
xor
loopne
outsb
je
rclb
jns
in
lret
out
lds
jne
cmp
andl
sti
loop
mov
test
fistpl
cmp
push
jne
fsub
movsl
aas
dec
insl
ja
jae
or
sub
cmc
cmp
or
jle
cld
sub
push
movsl
lds
testl
shll
insb
pusha
mov
cld
sahf
loopne
repnz
add
test
mov
push
shr
fwait
pop
push
xor
sub
outsb
call
push
add
lods
ror
jb
cmp
xor
in
pop
mov
cli
cmp
xchg
sbb
out
sub
and
filds
cmp
lret
sar
in
mov
inc
test
cmp
out
push
iret
xchg
xchg
add
loopne
sub
shr
cmpsl
or
lcall
inc
mov
cmp
cmp
jb
fcomp
mov
loop
test
je
xchg
into
jb
cmp
push
or
mov
pusha
jb
push
add
mov
sub
les
mov
xchg
mov
and
movsb
cmp
jecxz
dec
mov
and
xchg
out
enter
pop
jae
pop
lock
int
mov
test
pop
out
jae
mov
xor
jnp
mov
rcll
cmp
adcl
leave
jbe
cmpsl
inc
push
cmp
shlb
push
jnp
dec
push
add
call
mov
cmpsb
dec
push
pop
je
scas
inc
push
imul
or
mov
xor
std
std
imul
pushf
repz
in
and
mov
pop
mov
out
jnp
xor
aaa
out
sub
or
sbb
sub
push
mov
outsl
mov
aas
lds
jge
shlb
popf
add
push
inc
sbb
lds
mov
jp
pop
mov
mov
mov
pop
add
sub
cmp
pop
je
call
add
outsl
les
jno
jecxz
cld
lds
jb
push
outsl
dec
push
nop
out
ljmp
pushf
ss
sti
dec
sbb
jo
outsb
scas
int
cmp
jne
out
insb
push
dec
nop
in
ret
inc
cwtl
and
les
dec
addb
stos
jmp
or
into
xor
stos
movsl
imul
rolb
clc
or
sti
cmpsb
xchg
cwtl
and
int3
lods
notl
rorl
jne
in
mulps
xchg
leave
inc
mov
test
pop
cs
dec
scas
enter
packsswb
jb
into
pop
addr16
fstps
rol
mov
nop
rorb
or
js
cmp
mov
clc
cmp
aam
icebp
pop
mov
stos
xchg
scas
lds
or
jae
movsl
fadds
jg
adc
pop
int3
pop
jae
mull
ffree
test
sub
gs
mov
jno
das
cltd
stos
adc
or
lods
jns
bound
dec
jecxz
push
mov
push
leave
pop
hlt
aaa
inc
add
dec
mov
cld
sub
jp
mov
or
xor
pusha
xchg
outsl
enter
es
dec
xchg
ret
inc
mov
sbb
popf
push
cltd
add
into
clc
repz
repnz
inc
push
jg
jp
xchg
mov
mov
adc
lock
mov
lahf
hlt
xchg
into
sbb
mov
cmp
movsb
movsl
mov
cs
loope
inc
pop
mov
orb
mov
cmc
xor
push
add
cmp
or
stc
xor
les
mov
cli
adc
rorb
xor
mov
ret
lods
aad
jb
jecxz
lret
ss
inc
int3
repnz
mov
mov
jg
adc
ljmp
mov
sbb
jnp
dec
inc
xor
fdiv
je
xor
and
cwtl
xor
loope
es
add
jp
cld
pop
sub
sub
xchg
test
outsl
fwait
sub
push
lock
lret
mov
divl
inc
push
fs
jae
js
fcomps
dec
fcoms
lret
cmpsl
lock
mov
or
repnz
fnstsw
outsl
inc
jae
mov
fwait
cli
pop
sti
pop
inc
leave
iret
cld
push
inc
sarb
mov
lods
fbld
repnz
ds
iret
add
mov
add
lcall
jl
mov
cmp
jns
jle
cmp
lahf
shl
adcb
loop
cmpsl
xchg
inc
push
je
test
pop
or
adc
test
fldln2
fs
cmp
inc
gs
or
dec
push
inc
xchg
out
fnstsw
std
outsl
jmp
push
mov
jg
hlt
mov
and
and
not
push
add
repnz
cmp
fnsave
in
adcb
jge
mov
jg
fiadds
jle
pop
mov
mov
ja
pop
lock
lock
mov
and
out
push
pop
lcall
jecxz
add
inc
sbb
xorl
insb
mov
cmp
or
cltd
movsb
sub
push
xchg
in
fidivrl
and
jecxz
sbb
pop
or
inc
sub
aad
sbb
mov
pusha
pop
frstor
shll
loope
sub
and
or
shl
mov
iret
jecxz
push
dec
popf
xchg
add
push
jle
out
ficompl
push
ds
cltd
fwait
lret
into
inc
cwtl
in
xor
inc
pop
mov
adc
cmp
cs
adc
pop
imul
jne
mov
insb
sbb
ljmp
pop
popa
inc
fdivrs
mov
mull
arpl
pop
mov
push
das
fidivs
xorl
pop
lods
xchg
push
mov
pop
inc
mov
mov
jb
addl
mov
xchg
mov
arpl
push
sub
sbb
jle
sbbl
gs
arpl
and
pop
ja
leave
mov
dec
lock
and
jp
and
or
pop
mov
nop
cmp
add
xor
pop
decb
add
mov
imul
mov
mov
add
push
pop
fwait
dec
mov
inc
push
sub
sub
pusha
mov
cli
fidivrl
popa
push
sahf
lds
data16
sbb
push
shrl
xor
push
push
data16
or
xchg
adc
cmpsl
bnd
or
je
mov
cmc
xorl
notl
xor
inc
or
inc
outsb
adc
sbb
mov
sti
shll
push
or
mov
jmp
cmc
popf
mov
insb
aad
xchg
arpl
daa
cltd
loop
ja
call
sub
mov
xchg
aas
lock
int3
lock
xchg
xchg
into
and
ror
hlt
xchg
inc
popa
fs
jno
in
and
cmp
test
iret
lock
cltd
and
mov
push
xchg
cmc
dec
frstor
pop
jae
aas
or
sbb
add
dec
paddd
dec
and
jns
cs
add
dec
sbb
mov
bound
mov
xor
std
cli
add
imul
pop
rcl
xchg
dec
ret
dec
push
and
js
fbstp
dec
cld
jne
sbb
adc
cli
cmp
shlb
in
int
add
mov
into
xor
mov
push
cmp
je
mov
jp
xor
inc
sahf
pop
into
cmc
cmp
ret
sub
xor
mov
insl
adc
loop
stc
loopne
out
and
ja
ret
sbb
ret
dec
test
mov
push
jns
test
dec
bndstx
imul
mov
out
movsb
test
pop
in
mov
cwtl
mov
repnz
mov
shll
int3
push
jbe
cmp
es
pop
jecxz
push
push
and
or
roll
cmpl
movsl
mov
movsl
dec
cmp
js
fnstenv
call
negl
dec
mov
and
jmp
lret
cli
jnp
push
cs
mov
jle
dec
jg
push
aaa
add
dec
and
cmp
or
and
call
or
mov
push
aam
adc
sbb
subl
cltd
and
out
push
mov
and
xor
insl
stos
push
add
fildl
and
out
arpl
fs
push
clc
ja
das
sbb
insb
test
xchg
pop
jle
jl
mov
cmp
aaa
sti
es
xchg
inc
jae
insb
and
sub
out
lret
mov
push
dec
push
push
sbb
scas
nop
ds
movsl
fs
mov
cmp
xchg
into
jp
shrl
sahf
rol
loope
dec
and
in
mulb
popl
fidivrl
call
ret
dec
xor
enter
mov
xchg
push
sarl
enter
mov
mov
das
in
or
movsb
iret
scas
es
cmp
or
push
mov
mov
sarb
mov
xchg
cli
jecxz
cmpb
mov
jmp
insb
je
pop
in
xlat
fcomps
pop
aas
jg
mov
or
and
aad
lods
imul
sti
cmp
or
int3
mov
out
mov
das
or
pop
inc
test
lock
push
dec
dec
loop
xor
in
pop
sbb
pop
dec
js
mov
mov
arpl
jae
jecxz
enter
ret
push
lret
sub
xchg
scas
pop
xor
lea
push
jnp
rclb
mov
sti
pop
popa
sub
test
sbb
jbe
cltd
adc
jbe
mov
pop
in
daa
jb
xchg
shl
and
aad
test
mov
cmp
mov
aaa
rcll
mov
out
xchg
xchg
dec
and
lock
aas
icebp
fsubp
arpl
mov
add
sub
popf
ss
push
out
cmp
pusha
jnp
imul
jbe
cltd
add
dec
hlt
scas
fmul
push
cwtl
cli
mov
test
push
add
stc
jo
pushf
lock
inc
in
sub
cs
mov
mov
fsts
cmp
lock
sbb
mov
sub
push
xlat
jmp
xchg
mov
pusha
je
cs
pushf
and
sub
pop
cltd
sbb
push
lretw
orl
dec
lods
inc
movsb
into
insb
pusha
push
cwtl
cltd
sbb
mov
cmpsb
inc
lret
xchg
mov
fs
jne
mov
sbb
jae
jae
into
xchg
mov
scas
pop
sbb
into
jns
scas
aaa
xchg
outsb
add
out
lahf
push
pop
scas
mov
call
stos
mov
leave
xchg
inc
jb
pop
jmp
fisubs
mov
ds
inc
xchg
xchg
sbb
cs
orl
hlt
call
mov
jmp
adc
pushf
xor
push
mov
pop
aad
xchg
sub
lret
pop
bswap
dec
sub
and
cmp
pop
ja
fwait
cwtl
dec
add
xchg
sbb
mov
iret
pop
daa
pop
jbe
fisubrs
std
pop
lds
sbb
in
sub
push
push
lret
jecxz
lock
enter
dec
sbb
dec
mov
dec
and
add
xchg
xchg
sub
pop
dec
dec
pop
and
adc
mov
nop
and
out
js
lcall
popa
pusha
mov
cmc
fmul
shrl
test
lret
mov
cmp
sbb
std
or
jmp
je
jnp
mov
mov
fidivrs
jne
scas
cmc
push
mov
jle
iret
xchg
or
inc
lret
jno
mov
jecxz
iret
stos
test
xlat
adc
sbb
or
mov
push
iret
adc
pop
mov
xchg
cmp
jge
dec
lea
sbb
push
stos
add
mov
mov
ja
data16
sbb
loop
mov
xchg
int
pop
mov
sub
push
jbe
call
mov
sbb
add
mov
gs
push
inc
mov
xchg
repnz
mov
sbb
ljmp
xor
cmp
xor
pop
mov
xlat
sub
orl
ja
inc
adc
inc
cmp
lods
in
mov
jno
or
testl
xchg
jo
aaa
mov
sub
jle
mov
and
imul
inc
sti
call
js
pusha
cmpsl
arpl
and
addr16
inc
and
lea
loop
shlb
dec
push
aaa
jo
xor
push
mov
mov
push
inc
in
inc
lret
mov
cmp
dec
xchg
cmp
fidivs
adc
in
test
jge
adc
in
and
das
xor
addr16
dec
lods
push
jmp
cmp
adc
jo
dec
stos
xor
inc
jp
cmc
cmp
std
rcrl
sahf
and
xchg
sub
ret
mov
lea
nop
cld
fwait
push
sub
adc
xchg
shrl
push
jle
out
mov
lods
das
ss
fsubl
rcll
outsl
pusha
aas
mov
jmp
inc
and
das
in
xchg
fldt
or
cmpb
repnz
adc
icebp
sub
sub
dec
jo
mov
shll
mov
jae
mov
int3
stos
loop
jmp
jbe
jmp
mov
inc
popa
xor
adc
bound
repz
push
adc
shlb
push
ret
inc
xchg
lods
jg
out
mov
pop
jmp
and
xor
scas
call
or
mov
arpl
nop
test
pop
int3
popa
repz
stos
subb
ljmp
divb
lods
push
lods
dec
dec
loop
inc
leave
mov
lahf
jg
and
lock
in
shrl
dec
sar
lcall
add
push
shll
xchg
sub
sbb
mov
test
imul
add
mov
lret
test
clc
cmp
mov
add
push
out
xor
mov
inc
mov
fldl
ret
outsb
cmp
je
adc
or
xor
sub
xchg
repz
inc
or
call
pop
scas
js
xlat
sub
ja
xchg
sbb
scas
addr16
cmpb
rcr
pop
lea
jne
popa
mov
shrb
scas
or
sbb
sub
in
dec
sbb
mov
sti
mov
lahf
xor
shrb
or
or
dec
cld
xlat
jae
icebp
out
push
std
xchg
inc
sahf
pop
jp
pop
sub
add
sub
insb
mov
dec
loop
sahf
add
pop
pop
jge
pop
fcoml
jne
xchg
notl
dec
das
push
pop
xchg
jae
push
sub
or
xchg
mov
sub
xchg
inc
stos
mov
mov
cs
movsb
cmp
pop
or
hlt
ljmp
je
pop
inc
ja
add
push
ljmp
lret
adc
out
dec
pop
jmp
arpl
aad
mov
jbe
xor
leave
mov
sub
sub
inc
das
push
jnp
outsl
stos
dec
popa
ljmp
mov
pop
push
mov
inc
scas
fwait
inc
sub
mov
int
jmp
push
lods
into
test
jl
sbb
outsb
or
sub
dec
icebp
sub
dec
mov
pop
mov
ret
pop
mov
or
cmpsb
outsb
pop
shlb
jbe
xor
mov
fildl
dec
xchg
mov
rol
cli
rorb
sbb
ret
cmp
push
clc
stos
inc
sub
pushf
xchg
nop
adc
imul
xor
add
xchg
dec
aaa
call
lea
push
jle
dec
ja
dec
mov
jmp
shrb
bound
scas
int
test
rclb
shll
inc
clc
xor
pop
sub
push
cmc
lahf
insb
sbb
mov
xor
popa
out
mov
int
pop
add
les
dec
gs
and
out
xchg
ret
les
xorl
add
pop
ljmp
xchg
lret
push
rcrb
mov
inc
in
lret
cmp
pop
jle
and
mov
out
push
mov
jecxz
popf
push
sub
mov
adc
aaa
cwtl
pop
jno
jbe
rcll
or
repz
inc
adc
in
mov
mov
xchg
nopl
inc
jno
lret
in
stc
jecxz
mov
pop
mov
lretw
xorb
sub
mov
xor
test
out
sbbb
mov
xchg
mov
rolb
jo
insl
cwtl
imul
pop
adc
pop
xchg
repz
insb
adc
loope
stc
jae
in
fldcw
sahf
dec
out
inc
repnz
test
das
and
xchg
shll
popa
je
iret
test
inc
dec
lahf
adc
in
jno
lahf
mov
push
js
popa
pop
scas
mov
ret
inc
dec
stos
inc
jp
iret
clc
adc
lea
inc
mov
cmpsb
outsb
jo
mov
shlb
daa
cmc
cmp
cltd
cmp
cmpsb
xlat
subl
inc
xchg
lahf
dec
decb
pop
inc
in
negl
mov
in
inc
mov
or
fimull
xchg
jae
or
in
scas
loop
movsb
jbe
pop
lds
ljmp
lods
popa
ret
push
test
je
lret
aaa
jae
push
jp
test
cmpsb
cmp
mov
jne
dec
lahf
icebp
mov
mov
rol
fmuls
pop
bound
in
cltd
inc
mov
mov
jg
pop
inc
andb
jg
shrb
mov
push
and
jae
fstl
push
inc
aaa
stos
xchg
pop
outsb
xor
je
test
dec
loopne
add
push
sub
rol
in
inc
xchg
mov
test
mov
and
xlat
in
xchg
pushf
aas
push
sbb
xor
sbb
fucomip
insl
pop
fisubrl
dec
pop
pop
inc
mov
sti
shll
push
ds
cmp
movsb
fbld
daa
js
gs
xor
dec
add
xchg
xor
sub
in
xchg
push
fdiv
mov
nop
sbb
sub
and
xchg
add
xor
sub
fistl
cmp
daa
imul
or
pop
lret
nop
xchg
movsb
insb
out
sbb
jle
stc
cmpsl
lret
adc
push
inc
insb
sarl
pop
aad
dec
sbb
test
sarl
push
popa
xchg
push
enter
roll
sub
mov
repnz
out
pusha
or
jae
lock
mov
aad
rcrb
push
mov
dec
inc
mov
sbb
dec
sbb
cli
mov
divb
push
ja
sub
movsb
cld
push
mov
lds
mov
int3
mov
xchg
add
fstpl
sub
mov
inc
or
inc
andb
outsb
cmp
mov
mov
sbb
nop
pusha
pop
rcll
movsl
test
add
xchg
mov
xchg
pop
xchg
or
pop
adc
icebp
fldl
imul
and
stos
adc
jno
pop
lahf
mov
sarb
leave
xchg
lret
jl
and
mov
and
cmp
cld
sbb
cmc
push
rcr
mov
mov
add
stos
imul
mov
pop
xchg
xor
xor
call
scas
xchg
push
inc
aad
pop
lea
jbe
sbb
scas
sbb
push
jp
les
cwtl
jb
xchg
std
sub
and
out
movsb
add
clc
test
dec
mov
in
dec
pop
scas
mov
pop
xchg
fnstenv
jp
push
xor
fisttps
pop
ret
adcl
in
jo
xor
test
int3
ss
dec
add
xchg
jecxz
cmp
xchg
inc
inc
adc
stos
mov
loope
adc
xchg
les
es
decb
pop
or
or
adc
shrb
or
bound
dec
ss
cmp
movsl
cmc
mov
sbb
dec
adc
loope
cmp
fistps
inc
xchg
mov
sub
xchg
pop
xchg
sbb
cmp
cmp
decb
xchg
xlat
xlat
and
mov
cmp
push
test
dec
jae
mov
xchg
ret
and
stc
push
addr16
fwait
lods
in
dec
repz
aaa
lods
ror
lea
fisttpll
add
jnp
es
xor
inc
sub
test
in
int
pusha
jne
xchg
pusha
jle
jmp
in
lret
mov
iret
andb
scas
jne
jno
dec
rorl
mov
mov
push
xor
mov
aad
cmp
aaa
nop
cmpsb
imul
mov
push
iret
fiaddl
push
xchg
mov
push
aam
pop
scas
or
push
je
or
repnz
js
popf
aam
or
sti
push
xchg
sbb
out
pop
lahf
sarl
push
ficomps
and
and
mov
roll
sbb
jecxz
jb
repz
mov
mov
jae
cmp
xchg
mov
ret
and
aas
mov
sub
xchg
pusha
adc
pushf
es
js
jp
stc
jmp
pop
cltd
mov
icebp
sti
test
std
xorb
mov
add
sub
add
add
add
add
mov
cld
add
add
ljmp
sbb
add
add
add
add
lcall
mov
add
add
faddl
add
add
sub
add
add
jl
add
add
add
add
add
add
call
add
or
add
add
add
add
stos
add
ja
je
call
int3
int3
int3
int3
int3
int3
int3
fdivrl
add
add
in
or
or
stos
add
add
sbb
add
adc
sub
add
add
cld
sbb
add
add
dec
mov
bound
cmp
add
sbb
aad
sbb
sbb
test
add
add
and
js
add
pop
outsb
push
jae
dec
outsl
dec
add
or
add
xchg
mov
mov
pop
js
mov
sbb
mov
mov
test
xchg
or
into
sub
cld
adc
adc
cmp
call
add
daa
repz
push
pop
jb
orb
decl
add
add
leave
sub
pop
jmp
add
mov
dec
push
xor
cli
add
mov
sub
push
je
push
jno
loopne
decl
lock
dec
add
pushf
mov
push
add
ret
ficoml
call
adc
inc
arpl
enter
ud0
lea
bound
inc
add
add
add
add
in
or
add
add
push
stos
sbb
sbb
add
sbb
sbb
sub
insb
add
inc
cltd
sbb
gs
ret
insb
add
or
add
gs
mov
lods
dec
outsl
gs
lock
add
ljmp
inc
dec
gs
leave
inc
add
jmp
push
outsl
mov
jb
outsl
dec
add
mov
add
add
add
add
add
sub
add
add
cld
sbb
add
add
pop
mov
insb
mov
add
add
add
add
jecxz
mov
push
je
stc
xchg
daa
enter
ds
pop
out
add
mov
or
sbb
dec
and
inc
cwtl
push
cmp
mov
lret
fidivs
xlat
xchg
js
push
xor
add
js
jb
inc
and
ret
mov
pop
mov
popa
mov
adc
sbb
mov
ffree
in
andb
pusha
in
cs
cli
jle
in
inc
nop
addr16
ds
jecxz
imul
push
push
mov
loope
push
sti
in
out
xchg
nop
or
cltd
fisubrs
sahf
fdivrl
pop
jno
gs
xchg
les
jne
rol
jb
push
jo
jl
dec
sub
sub
test
dec
xchg
aaa
add
xor
repz
push
xor
mov
pop
arpl
jnp
fwait
inc
lea
lods
mov
aas
push
insl
inc
xchg
mov
inc
push
inc
loopne
insb
push
sti
stos
xor
or
aad
pop
mov
sub
xlat
pop
outsb
ja
jns
insb
imul
movsb
nop
stos
test
ja
mov
mov
mov
xchg
enter
lret
loopne
cmp
cltd
mov
repnz
inc
out
sub
hlt
sarb
adc
mov
outsb
scas
fsubs
add
outsl
push
sub
inc
aad
je
pop
jp
shrb
mov
push
lcall
jb
shll
testb
xchg
bound
mov
sar
mov
fildl
xchg
mov
push
dec
pop
sbb
push
sbb
out
pop
xor
sbbb
ret
rcl
rclb
jecxz
mov
in
inc
xchg
push
jecxz
jge
aaa
cmpsl
cmp
in
cmpsl
add
movsb
roll
and
push
jno
xor
xchg
jnp
cmp
mov
sbb
mov
mov
jb
ffree
loop
sti
enter
gs
addl
les
jae
loope
add
jge
mov
mov
test
aaa
xchg
fwait
cli
test
jmp
popf
fimull
lahf
jns
out
sbb
pop
push
repz
outsb
cmp
pop
dec
lcall
jmp
pusha
icebp
cli
lret
pop
push
iret
movsb
repnz
cmc
jne
xor
push
mov
pop
push
popf
sahf
mov
es
xchg
test
out
xchg
pop
cmp
ror
outsb
cwtl
jne
adc
sub
sub
rcrb
push
and
mov
mov
idivb
dec
jno
sbb
cltd
mov
inc
dec
aaa
and
adc
adc
pop
cmpsl
mov
mov
gs
jno
xchg
or
inc
stos
or
add
add
and
inc
pop
inc
xchg
jo
cmp
cld
jne
sti
adc
ret
jns
inc
and
lods
or
aam
xchg
and
dec
outsl
xor
mov
fwait
mov
aam
ja
xor
fisubrl
push
jbe
cwtl
jg
int3
stos
mov
lods
fsubl
jle
dec
and
movsl
fstl
outsb
pop
cld
pusha
mov
sbbb
loope
js
mov
testb
adc
fwait
inc
cmp
and
dec
xchg
push
ds
shll
inc
inc
inc
jp
addr16
iret
imul
xlat
mov
call
jo
aam
das
out
fs
mov
mov
pop
repz
push
das
jl
loope
lahf
cmp
ficompl
push
cmpsb
shl
add
sub
dec
jo
push
jne
rcll
cli
mov
out
push
and
test
add
xor
mov
test
stos
push
fistps
dec
push
faddl
loop
inc
mov
inc
push
aad
lea
shrl
test
and
lret
std
or
push
sbb
ret
xchg
add
outsl
popa
jmp
pushf
nop
and
into
enter
cs
outsb
push
adc
push
sarl
sub
rcrb
pushf
add
mov
cld
dec
push
push
push
dec
dec
pop
pop
mov
fimuls
cmp
in
mov
push
cmovb
int
cmp
push
pop
or
and
mov
push
mov
in
or
in
cmp
dec
mov
fadds
ret
fwait
adc
xchg
sub
in
push
cltd
xchg
int
jmp
cwtl
dec
xchg
add
xrelease
mov
and
fistps
xor
repz
sbb
shrb
jb
pop
mov
outsl
mov
push
movsb
imul
push
js
pop
lahf
mov
mov
jae
rclb
xor
cmpsb
shrl
jns
rcl
mov
jl
jnp
pop
lea
jno
shl
xor
or
fcmovnbe
es
mov
out
pop
rclb
je
cli
pop
out
mov
shlb
jle
mov
repz
add
loop
test
loope
jl
xor
out
push
scas
mov
sbbb
imul
addr16
xor
dec
cmp
jae
call
lea
in
arpl
fcmovnbe
lock
mov
push
sbb
mov
mov
jg
add
bound
fdivp
ss
and
or
jp
pop
cs
fcmovb
cmp
add
mov
fstpl
mov
push
mov
fucomp
push
inc
mov
test
dec
aaa
fisttpl
push
dec
pop
dec
scas
lods
lcall
in
cld
out
or
jne
lcall
insw
icebp
aaa
mov
arpl
cld
out
and
inc
mov
and
mov
test
dec
mov
shrb
in
lret
aad
sbb
in
mov
ja
rcpps
sub
movups
dec
lahf
dec
loop
call
sbb
aad
sbbb
stos
cmp
jg
dec
push
push
testl
mov
imul
fsubrl
shrl
mov
shrl
sbb
fisubl
repz
sbb
push
insb
jp
loop
ds
stc
cmp
adc
es
lcall
adc
mov
mov
xor
pushf
mov
push
aam
ss
pop
bound
int3
inc
movsb
bound
pop
hlt
lahf
cmpsl
inc
insl
ret
mov
add
sbb
push
test
mov
mov
lods
or
ja
jp
push
pushf
add
mov
xchg
negb
lret
sub
gs
xor
mov
cli
push
mov
xchg
jmp
sbbl
inc
sub
pop
inc
ljmp
jae
js
mov
das
pop
test
loope
int3
jae
sub
mulb
jmp
adc
addr16
stc
int
cmpsb
arpl
jl
jmp
sbbb
mov
dec
sahf
adc
pop
push
ret
lret
imul
out
adc
xchg
cmp
ret
xchg
pop
mov
add
jne
jge
nop
mov
test
sub
fcoms
pop
enter
lock
and
loopne
les
inc
sub
push
stos
loopne
shll
clc
pushl
ds
test
sub
xchg
std
mov
mov
mov
jl
sbb
inc
sbbb
subl
xchg
add
lods
aam
int
sub
pop
aam
xor
cmp
add
hlt
adc
sbb
mov
mov
cmp
je
mov
into
jo
fldl
jne
mov
pop
sbb
test
out
outsb
pop
jno
cmp
adc
addr16
jbe
rol
mov
mov
cmp
fisttpl
pop
adc
icebp
ds
xchg
rcrb
insb
jmp
inc
or
scas
shlb
mov
jle
push
insb
pop
orb
lds
fs
xor
aad
mov
ljmp
jae
and
aaa
bound
cltd
mov
out
scas
aaa
imul
mov
aas
in
mov
nop
scas
jne
sbb
fdivs
cmc
lock
rclb
cmp
push
push
pop
adcb
lcall
pop
fnstsw
pop
adc
dec
int
std
bnd
jg
dec
mov
repz
mov
loop,pn
or
aad
xor
loop
test
inc
pop
pop
outsl
test
fistl
jmp
push
out
mov
add
cli
fcomi
xchg
imul
xchg
movzwl
rorl
ss
out
mov
dec
push
popa
loopne
pop
cmp
cmpsl
xchg
dec
jmp
fwait
cmp
xor
mov
mov
cmp
stos
loopne
push
mov
sub
push
pushw
and
sbbb
data16
push
cld
adc
xor
sbbl
sbb
decb
or
or
vsqrtss
jg
jae
nop
mov
lods
pushf
daa
iret
push
popf
mov
xchg
pop
push
ljmp
andb
rep
xchg
ficomps
add
cmc
add
mov
push
mov
cwtl
addl
rcrb
mov
lock
je
cs
mov
jb
test
xchg
xor
push
mov
sub
or
inc
xor
xorl
and
xchg
push
orb
or
mov
cmp
gs
sbb
stos
xchg
fistpll
mov
fsubs
fcmovnu
adc
cs
xchg
pop
xchg
jg
lahf
daa
mov
andl
ret
mov
out
test
lock
fnsave
popf
xor
mov
xchg
js
test
mov
fsts
cmp
fwait
cld
mov
mov
cmpsl
push
mov
cmc
pop
xchg
mov
sub
adc
jae
fidivrl
arpl
push
mov
arpl
subl
std
imul
outsb
mov
fmuls
out
int
sahf
jmp
cmp
mov
cmpsl
sub
sti
dec
sbb
xchg
jle
xor
ret
imull
fistpll
adc
insb
into
sub
cmp
add
cmpsl
jecxz
sub
pop
pop
push
push
fcmovb
inc
pop
dec
push
leave
xor
cli
mov
mull
cs
out
cmp
flds
mov
outsb
out
cmp
addr16
ret
pusha
pop
out
movsl
shr
pop
push
mov
xchg
popa
das
and
cmc
and
mov
jg
sbb
add
aaa
push
xor
mull
mov
insb
sbb
xchg
dec
push
mov
ss
push
xchg
push
jp
jp
pop
stc
or
push
es
mov
stc
jl
xor
lret
daa
leave
jecxz
mov
cmp
es
adc
or
rorl
cmp
push
mov
shll
pop
dec
push
mov
sub
mov
out
cli
adc
mov
pop
ljmp
cmp
cmpsl
xchg
outsb
sbb
insb
jns
push
jns
jle
xchg
xchg
ret
mov
sbb
mov
popa
mov
cwtl
adc
inc
stos
xchg
sbb
cltd
or
or
ret
or
test
out
in
push
push
jne
ljmp
pop
push
mov
xorb
and
jg
ljmp
cli
cmp
cmp
ja
adc
mov
sbb
call
test
dec
into
mov
arpl
scas
cmpsb
int
pop
xchg
sbb
cmpsl
lahf
sub
jg
stc
inc
push
shll
and
xchg
mov
cltd
arpl
push
out
pop
pop
xor
mov
dec
mov
in
fidivrs
push
shr
dec
popa
stos
addl
jnp
test
fwait
xchg
iret
mov
add
sub
pusha
int3
pop
inc
and
in
shll
xchg
sub
in
ljmp
add
push
fcoms
ret
mov
mov
lods
lock
ficompl
xchg
pop
rol
clc
imul
testl
jge
cwtl
adc
in
mov
or
enter
adc
jb
mov
ret
dec
sub
push
lods
les
jge
imul
mov
loopne
data16
decb
mov
mov
add
jecxz
fidivl
xchg
mov
cltd
push
shl
jne
xor
dec
movsl
inc
adc
nop
and
pop
jne
cmp
aad
in
gs
or
xor
push
mov
xor
sub
mov
aam
xlat
push
sbb
pop
jae
leave
mov
mov
loopne
lock
mov
xor
jmp
sub
fld
into
sbb
sbb
negl
pop
dec
or
in
lcall
lcall
xor
jecxz
or
arpl
sahf
or
out
jo
and
jns
ficompl
inc
mov
ficompl
jne
sbb
mov
dec
scas
mov
cmc
push
outsb
jp
xor
outsl
stc
test
cld
loopne
testb
and
mov
sub
adc
call
xlat
data16
dec
movsb
aad
in
and
sub
or
dec
mov
jb
stc
mov
add
in
xor
xchg
pop
sub
das
xchg
xor
sbb
add
les
sbb
sbb
dec
mov
xorl
pushf
push
cld
push
or
cli
shll
xor
je
adc
cli
push
out
push
adc
filds
or
outsb
fstl
push
clc
popf
gs
loopne
cmp
or
ffree
xor
popf
dec
or
call
or
mov
pop
jbe
xor
mov
popa
sub
mov
inc
xor
inc
jnp
mov
arpl
fidivl
inc
les
sub
adc
sbb
push
sbb
jge
das
cmpsb
pop
mov
popf
mov
in
jne
jmp
and
dec
sub
fwait
dec
mov
lahf
loopne
addr16
adc
mov
stos
test
addr16
in
mov
push
out
and
and
xchg
cmp
sub
pushf
jmp
cmp
cmpsl
inc
push
and
add
inc
pop
jp
pop
cltd
out
push
add
sub
addr16
sbb
aaa
jnp
test
cmc
or
add
mov
or
push
inc
cli
sbb
xlat
cmpsl
or
int3
inc
add
xchg
scas
sti
popa
push
add
fisubrl
adc
mov
enter
add
sbb
in
sbb
xchg
in
out
mov
inc
and
push
fwait
cli
das
lods
push
lds
mov
sbb
pop
test
push
insl
test
jns
or
fs
jbe
stc
add
dec
int3
mov
push
xchg
and
cld
jnp
cld
xchg
xor
mov
popa
test
stc
ds
mov
adc
jb
les
sbb
sbb
call
inc
inc
int3
xor
jl
mov
scas
dec
inc
jo
fsubrl
and
jl
test
or
and
pushf
sub
or
pop
add
jl
add
pushf
cmp
dec
cmp
clc
push
div
bound
push
mov
inc
fsubrl
jge
and
lods
inc
sub
cmpsb
push
out
out
pop
addb
cmp
sbb
sub
outsb
frstor
mov
ret
xchg
cmpsb
add
iret
inc
iret
cmp
xchg
sbb
sti
dec
pop
roll
fstps
push
cmpsl
xor
push
and
andb
in
ja
sbb
stos
repz
data16
cmp
imul
into
mov
lods
pop
orb
pop
lret
xchg
stos
add
in
sub
sahf
jae
lret
jns
mov
jbe
pop
clc
mov
adc
pop
jbe
ljmp
js
jne
inc
aaa
or
xchg
enter
mov
mov
adc
cmp
call
xchg
pushf
jb
mov
pop
inc
pusha
jl
pop
xor
inc
sub
into
gs
stc
dec
es
sbb
add
mov
mov
xchg
sub
mov
fwait
aam
jmp
rcrb
es
das
mov
ret
stos
xor
mov
sbb
jmp
in
xchg
push
inc
inc
pop
sub
hlt
xor
sub
add
push
test
lahf
xlat
aaa
push
cmpsb
pop
and
xchg
mov
mov
lods
sub
pop
push
add
ljmp
test
or
icebp
xchg
aas
mov
add
or
cmp
aam
or
stos
and
mov
addr16
inc
fwait
sbb
xor
push
mov
push
mov
lock
cli
mov
push
test
outsl
adc
lret
pcmpeqw
xchg
lahf
dec
adc
mov
add
rol
popa
bound
insb
sbb
sub
push
adc
scas
rcll
jnp
cmp
incb
dec
outsb
inc
lods
pop
push
jnp
mov
cmpsl
inc
test
sbb
imul
out
add
push
das
add
push
test
daa
inc
addl
jge
pop
pop
fiadds
lahf
das
aam
stc
outsl
aam
out
push
dec
movsb
nop
loopne
mov
lea
sahf
dec
add
je
enter
hlt
dec
fsubs
mov
in
jge
dec
add
shrl
loopne
sub
sbb
imul
inc
xchg
cmp
push
in
cmp
cs
push
sbb
xchg
dec
jl
js
inc
pusha
ds
jne
fs
mov
popa
in
test
jge,pt
nop
or
mov
popa
push
mov
ss
push
rorl
inc
sbb
mov
inc
or
popa
xor
sbb
fcmovnb
push
xchg
repz
push
into
pop
jbe
cwtl
shrb
pop
jno
rolb
sti
sbbb
pmulhuw
pop
int
test
movsb
scas
imul
xor
jl
mov
mov
or
daa
les
fcoml
xor
and
cwtl
movsl
fnstsw
mov
insb
jmp
cmc
xor
mov
gs
mov
mov
xor
dec
jno
lcall
inc
loopne
dec
push
in
jbe
cmpsl
mov
cs
movsb
push
and
stc
dec
add
inc
push
pop
jnp
push
dec
test
mov
out
data16
or
or
outsl
and
daa
ljmp
cltd
lock
and
push
pop
or
mov
lret
stc
jle
loope
std
fistpl
add
cmpsb
pop
js
scas
xchg
dec
jmp
cmp
inc
mov
fisubs
je
and
pop
outsb
les
inc
dec
aad
orb
cmp
jl
arpl
inc
mov
xchg
pop
in
xchg
dec
mov
xchg
xor
pop
int
icebp
movsl
cs
cmpsl
cmp
lcall
das
xchg
and
and
enter
jecxz
jmp
pop
sbb
ja
cmc
lds
je
sbb
lods
scas
jge
jae
mov
pop
jae
cmc
push
inc
iret
pop
test
fcompl
xor
xorb
cmp
mov
hlt
xchg
add
test
jg
stos
dec
cmc
xchg
in
arpl
sub
popa
push
fidivs
lock
or
and
mov
dec
cwtl
or
icebp
lods
je
test
and
enter
lods
out
mov
mov
xchg
mov
xchg
jp
sahf
clc
arpl
cmp
and
pop
push
push
cwtl
jo
jecxz
sub
and
jmp
js
fwait
mov
mov
gs
dec
inc
gs
mov
sbb
sub
orb
lock
mov
mov
js
xlat
mov
xchg
out
mov
lea
mov
in
jge
in
adc
imul
out
imulb
stos
fs
popf
stos
insb
push
testl
jle
clc
push
loopne
cmp
mov
in
rcrl
sahf
jne
rorb
arpl
push
loop
das
push
adc
mov
repz
mov
popa
je
imul
outsb
inc
push
ror
mov
sub
xchg
add
jnp
push
iret
xchg
pushf
cmp
data16
or
and
ss
push
into
in
push
mov
mov
lock
gs
push
rclb
lods
int3
sahf
les
mov
add
mov
jg
out
gs
ja
repz
inc
test
popf
push
or
mov
cmp
and
mov
inc
pop
imul
pop
lret
insb
sub
xor
or
add
aaa
pusha
testl
bound
call
mov
mov
jge
sahf
cmp
test
pop
aas
sti
pop
push
addr16
enter
pop
je
jge
frstor
mov
sti
sbb
xor
mov
xor
js
inc
fisubl
lcall
lcall
add
push
aam
sub
mov
and
sbb
sbb
jno
xchg
or
scas
fidivl
sub
popa
jmp
popa
enter
xor
adc
and
pop
sub
add
inc
sub
pushf
scas
mov
jg
movsb
jno
pop
cmp
xchg
cmp
pop
iret
mov
jno
imul
sub
rclb
jl
mov
test
mov
add
jne
push
cmp
jb
pop
cmp
xchg
xor
or
mov
pop
popf
sbb
xlat
ja
mov
mov
adc
fnstenv
push
mov
andb
mov
lds
mov
xchg
loopne
xor
push
add
pop
jle
bound
add
inc
rol
ds
icebp
and
push
hlt
lret
movsl
ja
pop
int
sbb
add
repnz
mov
mov
loop
loope
js
mov
jo
adc
imul
dec
lods
xor
inc
adc
xor
adc
pop
cmp
rorb
dec
pushf
nop
jg
push
cmp
xchg
push
aad
pop
mov
inc
scas
xor
pop
out
out
sub
xchg
cli
xor
int
divb
int3
in
sub
movsb
jp
outsl
xlat
push
imull
ret
aaa
hlt
or
xchg
out
test
shrb
adc
adc
fsubr
dec
lcall
jbe
loope
fimuls
pop
push
es
xor
push
xchg
data16
pop
dec
enter
dec
sahf
aad
pop
xor
fldt
and
mov
adc
pusha
cmpsb
jae
dec
movsl
ret
jb
cmp
xor
cmp
leave
adc
fdivl
jl
pop
cmp
movl
xchg
inc
sbb
add
add
aas
pop
test
fdivrs
adc
xchg
in
sbb
xlat
pop
push
out
cmp
cmc
jne
mov
xchg
bound
mov
lods
sub
xchg
fidivl
mov
sub
cmp
mov
mov
pop
sarl
add
icebp
test
xchg
jo
xchg
xchg
outsb
in
inc
sub
or
jmp
sub
daa
pop
xchg
ja
jb
xchg
xchg
mov
mov
shlb
cwtl
mov
test
inc
mov
and
into
enter
movsb
jl
jns
mov
mov
inc
call
inc
ljmp
mov
cmc
inc
ljmp
or
mov
int
retw
push
fildl
in
jo
mov
das
mov
push
repnz
jo
es
and
fistps
inc
jno
mov
rcll
mov
movsb
lcall
pop
idivl
insb
jmp
pop
inc
and
shrb
loop
lock
pop
adc
daa
imul
mov
in
fnstenv
sub
push
mov
popa
lret
inc
pop
sbb
mov
xchg
jae
imul
mov
das
fwait
cmp
testb
lcall
arpl
es
aad
cmc
cmc
imulb
addl
cmp
push
mov
cmp
imul
inc
out
add
and
movsb
sbb
mov
lahf
pop
cmpsb
dec
push
mov
xchg
bound
scas
or
sti
mov
hlt
jne
lods
pop
xchg
out
mov
addr16
call
nop
sub
pop
repnz
add
sbb
add
add
pop
mov
insb
mov
add
add
add
add
int3
sub
add
add
lods
dec
add
add
jl
add
add
or
add
add
fdivrl
add
add
in
or
add
add
dec
stos
add
add
sbb
add
add
cs
add
std
sbb
add
add
mov
add
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
push
mov
call
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
or
mov
leave
ret
push
mov
mov
mov
mov
push
add
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
add
push
pushl
call
mov
xor
push
push
mov
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
mov
mov
movzbl
movzbl
sub
je
call
call
mov
add
inc
cmp
mov
jne
movzbl
movzbl
sub
jne
pushl
pushl
call
pushl
call
push
pop
pop
pop
ret
push
push
mov
mov
push
push
push
push
push
pushl
call
pushl
mov
call
push
push
push
push
push
push
push
push
call
mov
push
push
pushl
call
push
mov
pushl
call
pushl
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
call
pushl
call
mov
call
pushl
call
push
mov
call
push
push
push
mov
call
add
push
push
call
mov
push
call
mov
push
push
push
push
call
push
push
push
push
push
pushl
call
pushl
call
push
pop
pop
pop
jmp
add
add
add
push
js
jne
or
lret
incl
add
add
add
add
add
or
add
add
fiaddl
add
add
ljmp
add
dec
add
dec
add
jg
add
add
das
add
sub
ds
pop
jo
add
gs
add
je
imul
pop
sbb
lahf
or
clc
push
lea
inc
arpl
or
decl
clc
add
cld
or
or
jmp
rcrb
mov
push
push
ss
push
dec
rorb
mov
incl
mov
add
pop
jle
add
adc
add
xor
call
add
decb
cld
test
cmc
cld
pushl
cld
mov
push
enter
mov
clc
mov
add
add
lcall
add
push
jle
adc
add
outsl
add
push
add
add
cmp
add
add
lret
incl
add
add
gs
cmp
inc
cmp
inc
push
outsl
dec
outsl
gs
imul
jo
cmp
add
ds
gs
cs
inc
sub
mov
insb
js
gs
jne
outsb
or
je
je
push
inc
insb
pop
add
cmp
add
add
lret
incl
add
add
add
add
add
or
add
add
fiaddl
add
add
ljmp
add
dec
add
popf
repnz
rcr
cmp
scas
sbb
pop
ljmp
inc
dec
inc
popf
add
pop
call
enter
lret
repz
xchg
cmp
cmp
fldt
cmpsb
in
out
in
sti
stos
or
sub
and
das
out
in
insb
aad
icebp
xlat
in
adc
fs
fwait
call
xor
loopne
cmpsl
mov
popf
push
jbe
lods
jle
rol
je
or
mov
mov
lahf
and
sbb
out
sar
pusha
and
pop
push
test
sub
popf
xchg
inc
add
and
push
in
icebp
add
push
jecxz
imul
aaa
mov
sbb
jle
sti
mov
mov
sbb
std
std
mov
cli
cltd
mov
and
std
cld
ja
jnp
sbb
aam
cmp
cmc
sbb
jmp
lds
and
and
xchg
cmp
hlt
dec
out
mov
xor
or
cwtl
xchg
adc
je
inc
inc
mov
in
bswap
push
inc
insb
pusha
push
int3
negl
push
cmpsb
push
lcall
adc
add
mov
jmp
daa
mov
sbb
jl
mov
sbbb
aam
xchg
jmp
fwait
xchg
mov
sub
sbb
out
out
pop
insl
shrl
icebp
cmp
jmp
adc
iret
dec
xor
mov
cmpsb
sbb
cmpsl
pop
in
xchg
dec
pop
mov
or
nop
lea
js
repz
sub
fdiv
aad
or
lock
lock
adc
add
sub
fs
test
push
sub
lahf
jecxz
ss
cs
mov
mov
jmp
into
cmpsb
movsl
pop
cmpsl
and
scas
int
cmp
incb
cmp
loop
add
jmp
add
into
add
ss
push
fstl
cmp
inc
pop
push
mov
adc
push
fwait
push
pushf
cmp
add
mov
fdiv
pshufw
mull
mov
aaa
sbb
push
adcb
sub
fldl
pop
pop
xchg
and
mov
push
inc
push
xchg
push
stos
data16
inc
mov
out
or
cmp
jg
subl
xchg
arpl
and
movsl
mov
ror
aam
lods
sbb
popa
rorb
sub
sub
add
fisttpll
adcb
lea
sub
xchg
rorb
pop
and
push
shll
jno
outsl
shrl
imul
push
push
dec
xor
call
xchg
fldt
sbb
aas
fistpl
mov
rep
sub
jge
fistpll
jns
data16
std
shl
cmpsb
push
dec
dec
cltd
dec
push
sbb
out
pop
jecxz
in
clts
fs
out
ss
mov
xchg
or
and
xor
enter
cld
inc
les
jb
imul
cmp
jo
inc
cmp
ds
mov
enter
fucom
fs
daa
dec
lret
ror
jbe
inc
nop
js
or
sbb
lret
cmp
mov
jno
shll
imul
mov
add
mov
pop
push
fsubrp
stos
mov
loope
int3
repnz
pop
enter
sub
mov
aad
jb
push
push
pop
cmp
out
add
mov
adc
xchg
arpl
or
mov
movsb
xchg
ds
lods
stos
out
sub
cmpl
into
data16
stos
ja
clc
out
push
mov
hlt
stc
and
cmpsl
jge
cltd
and
sbb
cmp
aas
idivb
sbb
scas
lds
sbb
test
loope
movsl
pushf
outsb
data16
xor
xor
movsl
sahf
jb
sub
scas
mov
rorb
jne
mov
mov
test
push
lods
iret
mov
fs
sbb
mov
adc
xchg
mov
pushf
xchg
test
dec
pushf
iret
clc
mov
xor
dec
adc
dec
jl
scas
loopne
pushf
int3
lret
shlb
xchg
mov
cmc
je
sub
adcl
push
sbb
xor
sahf
or
push
mov
xchg
push
inc
mov
pusha
pop
jb
push
cmc
dec
out
sub
dec
xsaveopt
mov
xchg
aas
out
fcomi
movsl
mov
xchg
xchg
js
or
push
dec
cld
fdivrl
jne
adc
xchg
dec
out
je
outsb
pcmpeqd
cmp
cmp
cld
jecxz
mov
dec
sbb
dec
scas
xchg
scas
push
jge
and
pop
and
jb
and
xchg
imul
fs
jmp
sub
mov
jnp
push
addr16
fistpll
es
enter
push
out
or
push
pop
scas
xchg
das
pushf
int
loop
sub
push
xor
push
push
ret
add
and
int
push
add
and
mov
in
push
leave
sub
push
or
jno
push
jmp
sbb
mov
fnsave
add
movsl
insl
mov
lea
imul
xchg
cld
aam
jb
jnp
sub
dec
sti
rcll
jbe
inc
lcall
adc
cmp
xlat
cmp
movsb
ret
addr16
cmp
lds
xlat
gs
jg
dec
repnz
xchg
hlt
lcall
xchg
loop
in
outsb
dec
inc
ss
mov
loop
stc
or
mov
xchg
lcall
divl
call
inc
mov
sub
jge
rcr
sbb
out
subl
inc
aam
mov
mov
xchg
ret
dec
mov
xor
xchg
sbb
lds
lods
int3
sbb
mov
mov
testl
inc
xchg
cltd
add
ret
cld
mov
fstl
pop
mov
mov
test
and
sarl
repz
pushf
andl
cmp
jae
ret
xchg
and
mov
mov
cmp
aaa
and
out
add
cmp
and
sbb
jnp
ja
jo
fistl
lahf
ror
test
cli
outsl
test
es
pushf
xor
punpckldq
mov
xor
or
jmp
pushf
popf
repz
and
into
cmp
pop
cmp
mov
xor
or
imul
mov
js
lea
xlat
and
mov
cmpsl
fisubrs
xchg
loope
mov
nop
or
push
xchg
sarb
xchg
jb
sub
and
inc
dec
shlb
scas
lcall
into
mov
aaa
inc
ficompl
add
mov
in
ret
push
xchg
push
mov
imul
fucomp
cltd
or
mov
mov
xor
repnz
les
jb
inc
outsl
addr16
or
bound
repz
repz
jo
adc
icebp
insb
adc
inc
sbb
add
pop
flds
push
xchg
pushl
ret
or
lods
lret
mov
jne
clc
loope
sbb
lods
push
aam
mov
push
dec
push
insl
in
jns
cmpsb
add
in
jg
ret
mov
lods
bound
fldt
shll
aaa
adc
rcl
iret
repnz
push
pusha
pop
push
or
inc
call
mov
sti
bound
ljmp
mov
xchg
in
jne
xchg
out
push
repnz
jne
dec
sbb
push
ja
xorb
push
jne
lcall
ja
xchg
lahf
xor
jg
mov
pop
in
jbe
fisubrs
adc
adc
stos
push
sub
pop
push
loop
dec
adc
xor
adc
sbb
cwtl
add
lds
jo
cmc
push
mov
out
in
xor
adc
inc
adc
push
inc
mov
popa
sti
sti
push
or
aad
push
dec
scas
lods
sub
in
jmp
and
mov
or
out
es
mov
pushf
xchg
jbe
xor
mov
insl
adc
or
ss
jbe
cmpsl
ret
sti
stos
xorb
push
popf
jg
sti
mov
fisttpll
popa
mov
mov
subb
dec
out
outsb
cs
mov
das
insl
out
or
push
jnp
lds
dec
jae
cwtl
ljmp
int
or
sub
out
lds
int
push
jmp
sarb
dec
ret
pop
enter
inc
loopne
dec
lock
fnstcw
sbb
cld
mov
test
inc
sub
push
nop
inc
imul
pop
jg
pop
fbld
adc
mov
popf
imul
cmp
popa
int
sti
lods
push
clc
jne
daa
push
pop
pop
notrack
ret
fsubrs
aam
mov
add
sub
pop
mov
and
cmc
mov
ja
movsl
in
fmull
js
xchg
push
aaa
jne
fistl
xchg
xor
aaa
negl
fs
adc
insl
rclb
test
imul
or
inc
cmpsb
sbb
sub
fisttps
xchg
repnz
aad
mov
fmul
clc
jg
rcrl
daa
scas
test
pop
jle
jne
out
ret
in
fistpl
js
dec
add
push
push
pop
into
push
fcoml
pop
aaa
mov
les
add
push
cmp
sbb
push
or
dec
in
es
jmp
ret
mov
or
mov
aam
fs
int
push
push
fisttpl
push
loope
dec
jg
xchg
scas
mov
fadd
add
call
dec
mov
daa
jg
cmp
pop
cmp
aam
cli
ja
or
fst
inc
xor
out
jge
jb
cmpsb
bts
adc
inc
dec
adc
ffreep
mov
mov
xor
mov
ret
imul
jge
ficoml
dec
and
sub
std
fnstcw
repnz
into
imull
ss
adc
sti
mov
dec
rcrb
mov
pushf
add
stc
xchg
out
fnstenv
cmp
xchg
icebp
sbb
rcrl
mov
mov
test
push
jmp
or
repnz
inc
inc
loope
fsubrl
jle
pop
test
insl
cmpsl
xor
push
sbb
jnp
cmc
mov
sbb
sbb
or
push
cltd
xor
movsl
scas
mov
fnstcw
mov
stos
fnstsw
repz
mov
mov
sub
sbb
pop
shrl
shlb
mov
mov
test
stc
xor
add
push
and
pop
insl
mov
add
push
in
leave
jo
mov
xlat
xchg
mov
test
push
push
push
sbb
sbb
adc
xor
icebp
xchg
pop
shl
xchg
cld
mov
shr
adc
fs
ja
pop
jp
sti
mov
and
fsubl
sub
es
pop
jb
addl
jmp
stos
int
sbb
mov
add
aam
cmp
out
sbb
xor
jp
sub
fidivl
addl
push
add
cmp
in
clc
or
inc
adc
pushf
adc
or
mov
shll
das
push
xchg
pusha
mov
push
xor
stos
loope
cmp
jmp
mov
test
fstps
adc
ja
add
aad
sub
int3
push
into
push
jb
or
xchg
pushf
loope
mov
push
mov
push
sbb
int3
insb
adc
pop
push
mov
in
xor
add
shll
pop
inc
sbb
mov
in
xchg
test
lcall
stos
mov
mov
dec
and
fimull
and
out
jno
inc
pop
outsl
xchg
push
cmpsl
es
xor
mov
popa
mov
imul
loope
cmp
in
inc
out
movswl
lods
andl
jle
pushf
fdivrs
and
test
or
and
out
jge
out
scas
push
xor
in
rep
pop
bound
hlt
shlb
inc
pop
lods
sbb
lock
or
xor
shlb
xchg
cmpsl
mov
add
jb
push
sti
xchg
ljmp
out
aas
push
mov
cmp
outsl
rcr
cltd
mov
loopne
xor
mov
aad
out
jae
sahf
add
xor
sbb
cmc
lods
push
pop
jo
sbb
sub
xchg
ds
push
outsb
add
xchg
push
mov
les
push
enter
outsb
xchg
test
in
leave
mov
call
add
xlat
pop
push
adc
jno
pop
cmpsl
mov
ljmp
xchg
aas
push
add
adc
out
push
stc
sub
adc
mov
ret
mov
inc
push
xlat
inc
sbb
shlb
sub
cmpsb
cltd
ja
add
xchg
mov
mov
or
push
cwtl
sbb
test
incl
cli
cli
push
mov
or
sbb
xlat
loope
pop
je
lret
jge
adc
lcall
daa
sbb
outsl
pushf
cmp
inc
mov
mov
lret
hlt
shl
loope
dec
mov
inc
int
mov
xor
cmpsb
shlb
xchg
jo
rorb
mov
rclb
sbb
cmp
sub
mov
shl
push
cmc
xchg
inc
pusha
popa
addr16
sbb
je
inc
sbb
testb
fs
mov
test
loop
adc
test
adc
or
mov
push
push
cli
mov
pop
loopne
in
sub
add
cld
sahf
sti
cltd
fldt
cltd
adc
and
call
add
sahf
mov
pop
int
test
sbb
in
imul
lahf
mov
mov
jb
sub
rcll
addr16
mov
iret
mov
adc
inc
andl
inc
push
pop
aam
addb
xor
test
loopne
sbb
loopne
stos
pop
or
cmpsb
test
push
push
cmc
fyl2xp1
push
xor
add
fbld
inc
or
andb
nop
mov
push
mov
mov
pop
jl
arpl
insl
push
addr16
call
dec
xor
xchg
inc
lahf
mov
fistps
std
icebp
scas
dec
fidivl
in
sub
imul
inc
inc
xchg
add
ret
dec
imul
stos
imul
shlb
or
sbb
mov
sub
pop
nop
out
push
sar
fdivrl
xchg
mov
push
jno
mov
mov
sub
add
add
inc
mov
sbb
inc
push
leave
das
rclb
ds
mov
out
repz
daa
dec
insl
mov
addb
mov
push
jne
sub
aas
sbbb
jns
inc
loope
xchg
xor
and
xlat
inc
decb
mov
pushf
cwtl
mov
mov
pop
ss
xchg
xchg
add
adc
pop
sub
inc
push
mov
xchg
call
and
sbbl
stc
mov
xorb
or
flds
mov
loop
sti
cs
and
cmc
xchg
fdivrl
ss
push
inc
xchg
mov
jmp
lret
dec
inc
sahf
pop
shrb
pop
xlat
lret
cwtl
test
gs
imul
mov
mov
push
push
dec
lahf
xchg
inc
cmpsb
or
std
leave
xlat
loop
cmp
jle
cld
sub
mov
adc
imul
decl
push
xor
pop
iret
mov
lods
mov
xchg
sbb
cmpsl
ficomps
sahf
or
call
lds
sbb
inc
andb
data16
jmp
aam
lret
jno
shl
repnz
lock
call
add
xor
lds
cmp
and
ljmp
imul
das
int
shll
mov
je
shlb
mov
cmp
sahf
ljmp
jo
je
pop
addr16
loope
arpl
pop
adc
or
push
movsl
mov
add
jo
mov
sbb
sub
sti
repnz
push
push
into
into
jno
lds
icebp
aas
je
inc
fnstsw
or
push
add
js
pop
mov
mov
xor
rcll
lahf
int
pop
in
xorl
push
cmp
fcmovne
and
ret
add
lret
jle
xlat
ja
mov
push
int
xor
out
push
cmp
loopne
cli
aas
mov
mov
shl
xchg
xchg
lret
pop
lret
mov
fildll
xchg
lods
movsl
loop
mov
push
loopne
imul
jbe
sub
icebp
into
loope
stos
dec
jl
leave
popa
lcall
loope
adc
test
addl
stc
mov
jbe
xchg
test
fmul
out
sub
stos
lods
jl
dec
fistl
sub
in
into
dec
cmpsl
lahf
xchg
aad
mov
cmp
pop
loope
enter
mov
inc
js
stc
andl
dec
arpl
int3
outsl
inc
popf
xor
mov
lock
pop
xchg
pcmpeqd
mov
xchg
or
shll
inc
mov
or
cmp
inc
faddp
mov
mov
mov
and
and
adcb
and
dec
movsb
fcmovb
daa
mov
pop
mov
bound
mov
sbb
pop
and
adc
out
dec
inc
shrb
movsl
aam
js
aas
xchg
push
loopne
call
cli
movl
mov
in
add
ss
pop
cld
mov
push
js
jne
push
ja
hlt
inc
cmpsl
sub
or
or
pop
jp
je
adc
lock
mov
xchg
jbe
jle
out
push
mov
push
push
add
lock
clc
mov
xor
scas
sbb
xor
lcall
mov
mov
fidivl
stos
test
cs
cmp
aas
into
adc
ds
ret
imul
sbb
sbb
mov
mov
sub
mov
rcrl
dec
ret
inc
dec
ret
cld
xor
mov
inc
aad
iret
mov
jno
out
aam
rcrb
pop
pop
sub
or
dec
shrl
push
rcrl
xorl
loopne
or
fisttpll
test
fucom
lock
je
push
cwtl
pop
ss
jle
push
push
xlat
out
jle
fs
and
imul
inc
mov
ficomps
divb
add
pop
fiaddl
fcomps
jmp
mov
nop
mov
add
and
or
inc
mov
in
push
ret
into
xchg
es
aam
push
inc
add
sub
push
out
pop
das
push
xor
nop
andb
test
arpl
xor
xchg
imul
sbb
sbb
in
cld
movsl
mov
fdivrl
call
jae
push
lret
fmull
xchg
je
lds
inc
fisubrl
gs
mov
push
mov
into
stc
lods
adc
fdivrs
push
jns
enter
mov
lods
push
push
inc
dec
aas
jmp
daa
cs
icebp
icebp
in
jmp
and
mov
inc
push
inc
test
jb
or
cli
movsl
hlt
and
or
fldl
neg
popa
push
sub
out
jle
xor
imul
js
loope
inc
insb
adc
dec
xchg
jnp
les
pop
cmp
mov
ss
test
fdivrl
xchg
outsl
pop
pop
negb
arpl
aaa
mov
int
scas
mov
jne
icebp
or
mov
cld
aaa
out
push
mov
jns
inc
lods
mov
mov
cmp
dec
mov
xor
xor
stos
jp
in
in
jecxz
rep
or
fmuls
pop
xchg
pop
cmp
fisttpll
pop
mov
popa
cmp
mov
xchg
into
rcl
popa
push
sbb
jns
repz
mov
stos
iret
mov
jp
jbe
xchg
xor
sbb
pop
jecxz
mov
xchg
push
pop
test
es
icebp
std
inc
idivb
popa
or
adc
jp
xor
test
xchg
andl
mov
movsb
push
stos
icebp
mov
pop
xor
pop
and
jbe
in
pusha
scas
sub
mov
shlb
scas
scas
xor
jge
mov
int3
add
test
das
aaa
mov
push
push
xchg
std
jge
and
mov
lahf
cltd
or
push
adc
frndint
fimull
xor
lcall
pushf
fdivp
xchg
push
subl
lods
mov
aas
add
inc
mov
jge
lods
mov
add
pop
aad
popf
push
pop
inc
xchg
popf
lea
gs
dec
lcall
sub
pop
sbb
jnp
jns
lahf
inc
mov
es
jle
cmp
adc
scas
or
jge
div
sub
cmpsl
repnz
jg
mov
lods
clc
cwtl
mov
std
fwait
jle
xchg
cmp
fistpll
cmp
jmp
mov
popa
cmp
mov
push
into
sbb
sahf
or
mov
xchg
es
insb
xor
popf
pop
js
out
push
cltd
mov
mov
push
cmpsb
fld1
ret
mov
adc
xchg
jnp
fdivrl
mov
pop
loopne
fdiv
or
mov
push
fiaddl
jecxz
xor
mov
fwait
mov
cmp
mov
ret
adc
std
xor
repnz
outsb
sub
mov
jns
and
test
dec
movsb
fs
loop
mov
push
xor
mov
icebp
mov
or
mov
ljmp
jg
aad
xchg
push
popa
xor
and
xor
stos
pop
inc
testl
cmpsb
mov
ss
out
dec
jbe
and
mov
imul
pop
pop
inc
dec
add
mov
pop
ds
mov
add
addb
jmp
sahf
repnz
mov
pop
lahf
push
movb
xchg
or
mov
xchg
pop
rcll
pusha
push
adc
xor
inc
aad
negb
xor
jb
std
xchg
rol
iret
inc
xor
scas
loope
xor
iret
and
push
sbb
sbb
aaa
lahf
push
cmp
push
cmpsl
xchg
xchg
cmp
stos
and
or
outsl
xchg
mov
or
jne
add
xor
mov
jle
mov
mov
inc
adcb
stos
popa
dec
or
and
mov
aas
mov
jns
jo
push
or
dec
add
fisubrs
inc
in
call
fdivs
shll
fwait
dec
icebp
sub
inc
xor
out
mov
sbbb
mov
stos
mov
dec
ret
sbb
jecxz
iret
dec
inc
inc
sub
mov
daa
fildl
mov
cmc
hlt
cmc
out
mull
push
jne
inc
fstp
pop
xchg
bound
push
ret
pop
fildll
cmc
mov
fiaddl
xchg
mov
ficoms
aas
mov
push
pop
or
mov
mov
out
cmc
sub
ret
pop
adc
sub
push
pop
roll
stos
xchg
lret
mov
outsb
lret
jl
ret
repz
pop
mov
or
xchg
aad
iret
test
xchg
fldl2t
mov
call
je
push
rorb
or
and
sbb
ss
cwtl
jmp
pop
jmp
inc
push
std
rcl
mov
fwait
idivb
aad
jmp
mov
loope
cmpsl
jle
loopne
mov
call
ds
movsl
std
push
sub
loop
adc
cmpsb
xchg
xor
out
jmp
popf
pusha
xorb
test
bswap
cmpsb
or
cs
mov
sbb
enter
daa
aam
mov
stos
inc
das
push
movl
and
out
jmp
mov
sbb
pop
xor
mov
cmpsb
and
pop
cs
shr
or
icebp
loopne
out
mov
bound
movsl
lock
xchg
aaa
fucomp
aam
add
lods
add
or
mov
scas
out
or
fistps
repnz
jmp
les
outsl
dec
xlat
addr16
cmp
xchg
call
push
jmp
pop
push
inc
mov
xchg
roll
sub
lock
push
fbstp
test
ss
test
add
dec
fistl
loope
fsubrs
xchg
push
hlt
pop
lock
jns
and
mov
aas
jnp
add
add
or
add
add
fiaddl
add
add
ljmp
add
dec
add
dec
add
jg
add
add
das
add
sub
add
add
cli
add
popl
add
add
add
add
add
add
cmp
add
add
lret
add
incb
add
add
add
add
add
mov
and
add
clc
inc
clc
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
bound
orb
ss
inc
add
add
add
mov
push
push
add
add
push
add
mov
add
add
add
ret
add
outsl
xchg
add
add
rolb
add
test
jo
cmp
cmp
int3
add
add
xchg
mov
je
mov
add
outsb
inc
pop
jb
inc
aaa
inc
cltd
mov
fcoms
mov
mov
adc
mov
lea
inc
nop
jo
and
test
incl
rcll
add
out
inc
mov
pop
push
adc
or
push
decl
mov
shlb
inc
rolb
inc
jb
mov
sti
push
push
lea
push
push
call
cmp
add
xor
push
cld
adc
push
les
jmp
adc
dec
clc
inc
roll
add
mov
ljmp
ss
add
lock
or
add
add
add
add
cmpsb
mov
mulb
outsl
push
gs
gs
outsl
imul
inc
aad
insb
imul
push
popa
adc
popa
inc
push
inc
outsl
insb
xor
add
test
rclb
popa
out
imul
arpl
fs
adc
add
add
add
add
mov
push
push
add
add
push
add
add
add
add
add
mov
add
add
xchg
add
add
push
inc
movsl
xlat
mov
cltd
cwtl
aam
push
and
lea
lods
pop
mov
stos
pop
fisttps
lahf
outsb
vmovaps
loop
rep
or
fcoms
cmp
mov
mov
mov
in
fs
add
pop
sbb
out
ret
into
or
lcall
cmp
inc
aaa
fisttpll
xchg
ds
rcrb
jno
mov
add
pop
sub
test
cmp
mov
cld
jmp
or
push
mov
cmp
push
mov
lock
push
jno
repnz
dec
outsb
mov
orb
hlt
or
or
sub
cmp
arpl
jo
sbb
mov
pushf
stos
mov
aam
mov
out
loopne
jae
fs
mov
mov
fs
push
pop
or
add
dec
aam
xchg
xor
shl
sub
adc
pop
push
lret
xchg
enter
push
push
push
nop
dec
repnz
mov
pop
pop
xchg
in
xorl
popf
sti
popa
inc
bnd
les
js
pop
xor
test
push
iret
movsl
add
xchg
mov
push
sbb
pop
popa
test
and
cmc
arpl
mov
mov
scas
out
push
loope
imul
sbb
push
or
ret
cmpsl
aad
jp
sbb
ret
cltd
movsb
mov
imul
in
sbb
or
adc
add
cmp
stos
xor
out
shlb
sub
mov
sbb
jbe
inc
frstor
je
mov
data16
call
dec
cmc
dec
mov
fstpl
push
loopne
dec
xchg
push
jbe
xchg
ret
xchg
jno
xorb
push
pop
dec
mov
cmp
jno
push
shr
push
int3
jae
ret
jmp
add
fcomps
and
push
pop
jle
or
push
bnd
hlt
cmc
mov
sarb
xor
pushf
xorb
or
loop
push
clc
mov
jg
pop
push
mov
push
dec
dec
aaa
sub
lret
xchg
gs
stc
test
fisubl
insb
mov
lods
jne
inc
push
je
mov
sbb
ficompl
or
push
jecxz
aam
in
sub
inc
sbb
mov
push
push
xor
ss
pop
fsts
push
aam
fmuls
stc
test
cs
pop
and
sahf
in
out
mov
mov
dec
mov
sbb
push
jmp
sti
push
push
mov
test
gs
in
loope
add
pop
lss
pop
sub
cmp
in
push
sbb
sbb
orb
inc
aas
mov
sub
push
out
sti
mov
into
loopne
jmp
add
mov
addr16
sbb
gs
sub
lcall
sub
mov
mov
sbb
mov
sub
cwtl
adc
outsb
aaa
dec
inc
ja
divl
xor
cmpsb
shr
outsl
adc
sbb
and
cltd
andl
mov
fs
loope
push
fwait
or
cmp
mov
mov
ret
test
fstp
lods
cmpsb
enter
mov
mov
int3
lock
jmp
xor
sbb
lods
or
inc
mov
xchg
lods
add
mov
iret
jb
mov
push
xchg
dec
xchg
pop
jno
adc
push
jo
jbe
and
dec
shl
sub
pushf
mov
cmp
shlb
jnp
daa
stos
insb
xchg
clc
fistpl
mov
jo
sub
pop
pop
out
mov
mov
fistps
cmp
sbb
lret
adc
push
lock
popf
dec
loopne
xchg
fadds
sbbb
fsubr
adc
add
jmp
xchg
loope
and
xchg
adc
ret
jno
fdivrl
icebp
push
xchg
repnz
xchg
shlb
fcmovnu
iret
adc
xchg
sbb
pop
in
movsb
fs
js
jmp
mov
or
mov
test
test
push
mov
mov
adc
pop
pop
jbe
clc
mov
xchg
vpsubusw
adc
xchg
nop
add
jg
mov
add
leave
and
int3
pop
xchg
scas
out
ja
cmp
add
lret
nop
insl
jnp
sti
daa
jns
imul
ja
jecxz
out
xchg
fisubrl
notl
mov
nop
jo
xor
loopne
loopne
cwtl
sbb
in
stos
ja
scas
popf
xor
cs
sbb
in
cwtl
rol
pop
cld
and
mov
xchg
je
and
int3
repz
clc
cmpsl
mull
cmp
outsb
cltd
push
adc
jb
mov
fnstcw
rol
add
sub
cwtl
fistpll
outsl
stc
inc
mov
rcll
ja
out
cld
mov
push
out
mov
pop
ret
in
push
les
pop
sbb
daa
pop
push
loopne
lods
sti
and
mull
outsl
push
test
test
lea
int3
mull
leave
sub
xchg
adc
xor
lods
push
and
jb
and
in
into
bound
and
push
pop
mull
or
bound
pushf
das
out
cmp
pop
lret
repnz
testb
dec
xchg
ja
push
push
push
lods
fldcw
fisttpl
outsb
fsubs
push
lret
jne
aam
loope
push
mov
mov
fwait
mov
mov
jl
loop
stc
ljmp
or
cltd
mov
dec
loope
fnstenv
ret
jl
int3
mov
mov
sar
rclb
pusha
ss
jg
int
cmp
sub
dec
adc
bound
scas
push
sti
inc
inc
push
and
pop
jmp
add
lahf
push
sub
xchg
shll
cmp
xor
mov
mov
in
inc
mov
mov
mov
xorb
leave
jo
dec
pop
sbb
jo
sbb
in
push
and
inc
dec
out
adc
fbstp
in
xchg
repz
das
push
pop
sub
loop
inc
dec
sahf
push
test
mov
cwtl
push
in
jmp
enter
lea
pop
inc
jge
sbb
inc
fnstenv
sbbb
mov
add
mov
cs
mov
test
lahf
cld
xor
cmc
dec
repz
imull
bswap
and
dec
fnstenv
xor
inc
sbb
cmpl
sbb
pop
xchg
fistl
sahf
es
pop
inc
sub
or
iret
je
mov
add
bound
sub
pop
pusha
dec
xchg
js
les
adc
xchg
xchg
daa
xchg
das
mov
pop
mov
push
mov
or
xor
cmp
fdivr
cld
jg
push
pop
mov
adc
add
cmp
xchg
mov
mov
xchg
outsb
imul
mov
dec
repz
lret
jmp
pop
enter
cwtl
adc
scas
push
fdivr
or
les
enter
xor
aad
push
xchg
push
outsl
or
bound
sub
mov
mov
mov
pushf
mov
into
mov
sub
gs
mov
ja
movsl
es
adc
sti
push
cmpsb
aam
stc
bound
addl
cmp
sbb
xchg
inc
mov
fistpll
jle
jne
aad
push
mov
or
mov
push
nop
out
rcrl
lds
icebp
sub
mov
filds
inc
sbb
stos
mov
jg
movsl
repnz
jnp
push
inc
iret
push
test
fdivrp
mov
shlb
jmp
push
push
mov
mov
ljmp
mov
adc
push
mov
cmp
xor
cmp
in
nop
mov
push
jle
and
filds
push
add
or
mov
inc
pop
test
andl
lds
mov
jl
ret
gs
iret
xchg
cmc
aas
jbe
cmp
gs
rcpps
movsb
call
sarl
xchg
jecxz
nop
cmp
sbb
lahf
fwait
aas
jbe
inc
cmp
mov
popa
cmp
insl
stos
rorl
rclb
test
les
sahf
pop
mov
inc
les
je,pt
test
arpl
add
adc
pop
jne
add
stc
dec
or
int3
sbbb
mov
mov
lcall
or
mov
cli
cmp
cmc
cmc
pop
or
xchg
xlat
sbb
movsl
enter
adc
sarl
push
inc
add
repz
rolb
mov
push
aaa
test
rcll
dec
mov
jecxz
inc
mov
sti
das
jbe
aam
movsl
clc
ss
loope
adc
ficoml
jne
pop
fisubs
jp
adc
test
cli
xor
dec
lahf
mov
push
enter
stc
mov
jg
pop
mov
add
dec
push
out
jb
or
lahf
add
push
sub
sub
jg
jbe
pop
jge
push
jae
leave
or
stos
sub
xor
jg
das
sbb
sbb
cmpsb
mov
sub
mov
and
hlt
inc
and
sbb
pop
mov
xchg
aaa
ss
frstor
test
push
stos
lcall
xlat
mov
inc
jp
jae
pop
stos
cmp
test
push
push
in
into
jmp
jecxz
push
mov
sbb
mov
xlat
dec
cmp
cmp
mov
sbb
jnp
aad
outsl
jns
inc
sub
int3
cmpsl
inc
jg
int3
cmc
jmp
in
cmpsl
ljmp
jne
push
nop
or
in
lock
push
sbb
inc
hlt
push
clc
mov
push
stos
in
push
int
adc
call
mov
pop
rorb
adc
je
mulb
push
loope
inc
je
and
add
nop
shll
stos
mov
andb
xor
adc
inc
ljmp
les
movsl
mov
out
pop
jnp
clc
push
adc
adc
mov
aad
or
dec
imul
pop
dec
push
out
adc
inc
sbb
outsb
xchg
jl
stc
sbb
insb
push
stc
pop
cld
push
mov
adc
xchg
mov
rorl
insl
fistl
mov
dec
enter
cwtl
int3
lea
jg
out
adc
loopne
cmp
sarb
cmp
scas
ret
and
int3
daa
lds
stos
sti
mov
les
pusha
cmp
sub
push
insl
mov
adc
shrl
mov
into
lcall
mov
mov
repz
lds
repnz
js
scas
and
rolb
aaa
mov
fcompl
loopne
iret
js
fnsave
in
or
stc
shll
cmpsl
or
mov
sbb
imul
sbb
add
in
and
popf
xchg
sbb
pop
push
cwtl
ficoms
scas
ficoml
pop
mov
cmp
cltd
and
add
fs
pop
add
fstl
lcall
stos
pop
fnstsw
push
dec
push
in
xchg
pslld
cmp
je
inc
pop
dec
outsl
sub
int
inc
sti
sub
or
call
cli
push
mov
ja
pop
add
in
xor
mov
push
cmpsl
aas
push
push
pop
mov
push
fisttps
das
divb
imul
adc
fldenv
push
call
lret
data16
iret
leave
outsb
insl
xor
insb
gs
pop
mov
cmp
pop
pop
add
push
push
pop
test
mov
stos
jae
pop
push
pop
xchg
jne
sub
cmp
xchg
cs
add
xchg
ss
out
mov
sub
xchg
lea
jmp
nop
cmpsb
fsts
cmp
mov
xchg
mov
mov
xchg
sub
hlt
or
test
dec
jge
into
mov
cmp
jno
mov
addr16
rcr
push
mov
push
dec
out
sahf
dec
cmc
jns
sub
jo
add
add
mov
bound
fcmovbe
jnp
sbb
pop
data16
outsb
test
lcall
fcoms
jne
aaa
and
mov
hlt
fcmovu
inc
nop
ss
imul
int3
out
jbe
loopne
sbb
out
and
mov
cli
test
movsl
mov
lods
repz
adc
and
or
pusha
out
jmp
lea
js
pop
dec
mulps
rclb
fidivrs
mov
sub
sbb
repz
mov
sbb
sbb
pusha
clc
sub
jecxz
daa
in
jae
jns
loop
outsb
pop
sub
in
mov
mov
ret
mov
cmp
adc
daa
sub
adc
dec
push
xchg
cmp
sbb
out
pop
loope
jp
xlat
rcrl
jnp
xchg
push
xchg
pushl
mov
xchg
popf
xor
cs
mov
pop
addr16
mov
mov
pusha
pusha
repnz
xchg
fsubrl
cltd
or
fimull
iret
xor
push
mov
mov
push
sbb
insb
dec
mov
stos
pop
sbb
cs
and
fwait
cmp
pusha
sub
gs
sub
loop
sbb
fimuls
sub
or
mov
mov
movsl
das
xchg
ss
shll
cmp
xchg
pop
fstps
aaa
xchg
mov
or
pop
push
jle
das
aas
jg
cmp
dec
mov
lock
imul
dec
xchg
pop
xchg
dec
xchg
xchg
mov
adc
xlat
adcl
sub
testl
call
sbb
push
movsl
orb
popf
jp
mov
lret
fnstcw
xor
ljmp
js
cli
or
or
xchg
or
sub
lcall
movsl
es
xor
lods
ljmp
sub
in
das
fcmovnbe
adc
jecxz
jge
arpl
inc
les
xlat
mov
sbb
lret
mov
scas
loope
jnp
mov
fbstp
push
push
out
cs
enter
je
jecxz
or
ja
cmpsl
push
and
lods
mov
inc
mov
repz
jecxz
pop
jp
and
lcall
mov
cmp
subl
jns
clc
test
cmp
inc
xorb
in
jle
test
pop
pusha
dec
xor
rsm
test
jns
pusha
imul
pop
jmp
cmp
sbb
dec
xchg
imul
mov
loope
dec
sub
inc
iret
stos
xchg
bound
push
out
mov
imul
sbb
and
xchg
les
sbb
push
dec
loopne
and
mov
sub
sbb
mov
stc
aad
out
pop
adc
mov
and
fxam
mov
arpl
pop
movsb
cmp
mov
xchg
mov
mov
shll
push
sbb
in
sub
js
adcl
mov
xor
cmp
mov
xor
jmp
and
push
mov
mov
pop
inc
pop
enter
mov
mov
jecxz
out
subps
jmp
sub
pop
popa
arpl
add
jbe
imul
sahf
cld
mov
pop
mov
jl
stos
cmp
push
test
push
je
nop
sub
mov
icebp
lea
fisttpll
jae
mov
jae
lahf
stos
mov
icebp
ja
cmp
jae
pop
adc
dec
fwait
aam
lret
push
fucom
stos
ret
negl
out
mov
imul
sbb
push
pop
sub
stos
inc
sub
xor
jo
scas
or
pushf
fcompl
loop
lea
pop
inc
mov
lahf
sti
loopne
daa
out
jmp
int3
mov
rcll
ret
aas
rolb
scas
inc
sbb
dec
inc
into
mov
pop
sub
push
dec
jle
out
mov
sub
mov
inc
leave
imulb
fcom
push
sbbl
loop
xabort
xor
fwait
mov
cmpb
pusha
xor
jecxz
xor
adc
and
push
push
cmpsb
pop
add
xchg
lds
jae
sbb
sbb
daa
jg
xor
out
mov
add
xor
ror
pop
aaa
aam
dec
imul
add
dec
enter
mov
shll
sbb
inc
lret
fs
ret
pop
push
sub
imul
orb
imul
inc
xor
dec
shr
mov
lret
leave
fsubrs
sub
int
mov
lds
iret
loope
sbb
and
ja
add
or
push
loop
sbb
pop
imul
mov
push
push
out
sbb
leave
movsl
xchg
hlt
std
mov
lret
inc
dec
les
sbb
sub
mov
mov
adc
bound
inc
and
mov
push
jne
dec
aam
js
ljmp
loope
inc
mov
fstpl
outsl
jecxz
fwait
cltd
enter
jne
js
and
pop
lcall
push
push
cmp
add
push
shl
push
xor
shl
xchg
mov
xor
fs
jbe
xchg
jo
mov
xor
fsts
ss
push
out
rcrb
cmpsl
scas
push
pxor
rclb
jno
or
xchg
gs
aad
dec
lret
inc
cmp
push
mov
into
mov
repnz
dec
pop
icebp
jo
add
sub
inc
in
call
std
scas
jle
adc
mov
mov
popa
cmp
sub
pop
sbb
cld
or
popa
mov
sub
test
ds
sub
mov
jne
and
inc
cmp
shll
pop
outsb
ja
roll
xchg
add
sub
cs
push
cmp
jo
sub
pusha
dec
dec
and
jae
push
pop
push
rcll
fnstcw
jne
sub
jno
and
es
sbb
rcrb
and
push
jnp
pop
punpckldq
lock
enter
mov
popf
jae
xor
xor
adc
inc
xchg
into
sbb
mov
cmp
mov
fwait
ljmp
lahf
outsl
xchg
icebp
xlat
stos
nop
mov
das
out
rorl
mov
addr16
sbb
jnp
int
cmp
jp
repz
popf
or
mov
or
ret
mov
sbb
mov
dec
addb
gs
mov
cmp
cmp
mov
std
mov
mov
xchg
adc
in
mov
addr16
fnstenv
cmc
sbb
icebp
dec
mov
or
xchg
adc
in
xlat
sub
sahf
dec
sub
jo
cmpl
mov
ret
inc
xchg
fsubrs
jmp
adc
and
sub
cmp
push
sub
test
and
in
lret
shll
sub
mov
dec
addr16
xor
pop
sahf
mov
and
loop
dec
sbb
jb
sbb
push
mov
xchg
shrl
lahf
xchg
push
mov
scas
pop
or
mov
outsb
dec
mov
add
mov
je
adc
sar
mov
mov
inc
les
mov
subl
and
jmp
sbb
jl
mov
add
inc
out
fadd
xorb
sti
stos
mov
mov
int3
lret
inc
jle
fcompl
leave
ret
ljmp
xchg
add
mov
sbb
pop
sbb
jg
mov
int3
stos
adc
out
cmp
fimuls
das
adc
std
cmpsb
test
sbb
ja
sbb
shll
movsl
jg
cmp
cwtl
aam
ljmp
jnp
push
cmp
in
inc
lret
rol
inc
mov
mov
push
in
or
xchg
jp
js
inc
mov
int
test
stc
cli
sbb
sub
fidivl
xchg
adcl
jmp
jecxz
lret
sbb
xchg
cmp
sub
or
rorb
xchg
mov
jbe
jmp
and
outsb
dec
jg
imull
jne
imul
mov
push
dec
js
loop
movsl
sbbl
sub
mov
mov
and
je
daa
loopne
cwtl
jp
mov
sti
push
pop
js
subl
fdivrl
rcll
and
pop
push
std
popa
pop
sub
lea
inc
cmp
inc
jns
adcb
sbb
cs
call
imull
pop
dec
ss
mov
cltd
rorl
jae
sbb
pusha
mov
adc
mov
sarl
jp
pop
mov
mov
out
aas
lds
adc
int3
dec
pop
xlat
dec
xchg
test
cmp
pop
rclb
sub
ret
jb
xchg
sub
insl
je
popa
adc
mulb
sub
jnp
mov
inc
int
imul
nop
push
in
cwtl
fwait
inc
pop
fs
out
xor
loop
ret
sub
pop
xor
push
sub
inc
xchg
shl
cmp
icebp
mov
adc
push
in
cmp
cmp
push
lret
push
bound
addr16
int3
cld
mov
push
dec
scas
jp
fcomps
and
jmp
test
push
sti
pop
adc
jle
lea
xchg
outsb
jg
pop
aaa
test
arpl
dec
rcll
mov
sahf
repz
shll
inc
sub
inc
subl
in
sbb
je
ljmp
shll
imul
mov
xchg
inc
aaa
mov
mov
mov
adc
lea
imul
jl
mov
pop
mov
gs
mov
aaa
movl
aaa
call
pop
xchg
sub
mov
into
jl
pop
mov
or
addr16
shll
stos
sbb
stos
lea
test
insb
cmp
enter
mov
les
adc
pop
loop
mov
mov
mov
pop
cltd
jo
into
stos
loope
int
pusha
or
js
popf
call
mov
pop
sbb
pop
or
insb
mov
inc
adc
add
push
sub
add
sbb
xchg
lods
xchg
repz
int3
out
in
lock
jle
out
jae
inc
add
or
ret
sub
cmp
jbe
pop
jecxz
cmpsl
leave
daa
mov
movsb
mov
std
dec
xchg
adc
mov
cmp
cltd
push
cmpsb
jo
mov
insb
loope
fistpl
aas
xchg
ss
pushf
inc
jno
dec
fucomip
ficoml
mov
mov
fldcw
sti
sahf
sarb
je
dec
sub
data16
xchg
stos
fsubr
imul
push
std
add
xlat
push
inc
sub
push
in
gs
pop
adc
rorl
gs
jo
jne
push
sarb
mov
gs
xchg
adc
mov
subl
sub
int3
imul
sub
fucomip
cmp
pop
sub
mov
push
mov
lret
jae
and
sar
fcomps
dec
movsb
mov
pop
cwtl
insl
out
les
push
lcall
cmp
xor
jecxz
pop
insl
dec
data16
loope
inc
out
dec
jns
pop
call
test
push
jecxz
int3
mov
adc
push
or
mov
lret
xchg
xchg
out
ljmp
jns
xchg
pop
mov
outsb
dec
xchg
int3
xor
cli
outsb
mov
push
pop
xor
lea
sub
sbb
cwtl
cmc
xor
rolb
sub
pop
aad
add
jle
movb
lahf
fucomi
je
mov
sbb
xor
into
add
sbb
cltd
fstpt
test
clc
out
jp
popf
inc
outsl
dec
daa
mov
jno
sbb
cltd
cmp
inc
mov
fs
cmpsl
cmp
lods
mov
mov
mov
in
std
std
cltd
add
mov
sub
pop
fisubl
push
cmc
popa
mov
or
pop
mov
lds
xchg
aas
subb
rcl
or
ret
or
rolb
jno
mov
sub
int
scas
ss
and
test
test
loope
pusha
push
mov
fucomi
sub
ljmp
je
icebp
mov
jecxz
jmp
or
pop
mov
addr16
add
push
add
add
add
add
add
mov
add
add
xchg
add
add
push
inc
add
add
es
add
add
add
add
xchg
add
add
addb
add
out
add
add
sbb
add
add
add
add
xchg
sbb
add
add
add
addb
add
push
push
add
add
push
add
add
andb
incl
stos
sbb
add
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
add
and
insl
xor
add
or
hlt
ret
add
xchg
xchg
adc
add
inc
bound
add
add
add
add
add
add
cld
and
add
out
lock
add
jl
sbb
sbb
ds
sbb
daa
mov
data16
hlt
xchg
inc
pop
outsb
ja
icebp
add
and
mov
flds
sahf
add
rorl
push
fucomi
inc
test
cld
xor
sbb
mov
sub
std
cmp
adc
add
add
xchg
cmp
mov
adc
je
in
inc
inc
sbb
jno
adc
add
js
das
add
add
lret
out
push
call
add
decl
mov
push
jl
loope
inc
xchg
int
cmp
je
add
lea
sub
in
mov
dec
testl
out
lea
clc
cmc
xchg
cmp
clc
lds
adc
adc
add
pop
xchg
adc
add
inc
push
adc
add
add
sbb
sbb
std
fcompl
pusha
sbb
adcl
adc
inc
add
pop
push
jne
adc
insl
popa
imul
imul
inc
fnstenv
mov
inc
adc
add
jle
jae
cmp
insb
mov
jb
outsl
jne
ret
gs
xor
and
jne
push
add
add
add
in
add
add
xchg
xchg
add
add
inc
bound
add
add
add
add
add
add
aam
add
add
test
mov
add
xchg
cmp
popf
dec
stos
cmp
mov
daa
adc
fmull
andl
mov
dec
mov
sub
pop
push
xor
cmp
sub
fidivrs
add
jne
dec
test
dec
loope
xor
movsb
stc
add
into
xchg
in
out
or
stos
ljmp
addr16
cmpsl
imul
mov
in
cltd
xchg
das
adc
push
aad
xchg
add
scas
jp
movsl
enter
xchg
outsb
rorl
pop
jmp
cli
insb
mov
scas
sub
or
mov
mov
mov
insb
out
test
daa
inc
cmpb
adc
nop
repnz
repz
jecxz
ljmp
inc
push
cs
rolb
dec
inc
dec
adc
cld
or
test
lods
cmp
or
cmpsb
inc
ret
pop
or
jno
popf
imul
pop
popf
push
push
mov
xor
fldt
push
push
mov
insl
gs
sbb
sub
cmc
mov
adc
cmp
jae
imul
fstps
inc
sbb
outsl
push
mov
imul
mov
push
mov
adc
pop
and
xchg
shll
loope
push
pop
add
lea
or
lea
popa
cli
dec
cmp
js
xchg
and
orl
xor
mov
arpl
nop
fdivrl
or
outsb
xor
out
pop
data16
loopne
and
and
lock
jge
out
arpl
mov
and
push
ret
inc
outsl
mov
daa
subl
hlt
in
mov
loope
xlat
hlt
mov
pop
ret
jae
out
jae
sbb
xchg
fiadds
pop
scas
mov
aad
gs
and
pop
and
or
sub
mov
or
push
pop
jecxz
out
stos
jecxz
xchg
mov
test
or
icebp
cmpsl
loop
push
dec
aad
imul
aam
insb
daa
dec
push
or
cwtl
fsubl
das
rorl
ds
js
dec
scas
jg
lds
scas
rol
pop
sub
cmp
sub
adc
jo
xchg
test
loope
dec
and
mov
pop
call
repnz
pop
fisttpll
mov
cmp
lret
cmc
mov
inc
pop
incb
mov
push
lcall
fimull
pop
xlat
stc
in
jns
fsub
pop
dec
fidivs
xchg
aas
add
in
mov
jnp
popa
cmp
imulb
push
dec
add
fsubrl
push
sub
push
call
shll
movsl
jg
frndint
pop
aas
call
test
mul
iret
lcall
xor
js
sahf
pop
in
pop
sbb
push
pop
jb
or
xor
sbb
push
jb
adc
test
in
lahf
and
aam
mov
pop
das
sbb
add
outsb
add
inc
or
pop
dec
das
fstpt
and
fdivrs
scas
jmp
cmp
mov
push
add
out
or
and
cmp
in
mov
mov
jmp
cmp
xor
mov
mov
inc
inc
sti
test
pop
in
mov
shll
adc
jb
sarl
xchg
and
xchg
xchg
arpl
push
add
fdivrp
inc
idiv
dec
ja
mov
outsl
es
sbb
mov
pop
scas
sbb
je
add
jne
mov
inc
add
xor
int3
xchg
pop
dec
jg
cmpsl
jns
xchg
negb
push
subb
jno
sub
sarl
or
mov
out
addr16
outsb
jne
lds
cmpsl
dec
nop
dec
std
pop
imul
add
jnp
inc
jle
sub
mov
add
dec
int3
inc
push
dec
out
adc
stos
rorb
add
data16
lahf
in
icebp
es
jmp
and
cmp
stos
sub
mov
loope
lods
ss
push
outsl
popa
mov
cmove
enter
adc
and
fwait
cmp
xchg
enter
mov
dec
and
out
repz
add
and
out
test
jg
js
insb
insb
enter
loopne
hlt
stos
mov
nop
cmp
das
inc
ss
js
add
and
loope
fs
test
push
les
icebp
mov
adc
add
fdivrp
mov
imul
pop
inc
inc
pop
bound
mov
pop
std
sbb
aad
cmp
add
cmc
in
aam
cltd
fcomip
and
mov
xchg
pusha
movsb
out
test
cmp
gs
and
push
lods
cmp
dec
adc
je
scas
sub
rorb
sbb
inc
mov
ss
std
add
sub
sub
jne
sub
loopne
jns
push
jl
testl
jecxz
jmp
stos
outsl
cmpsl
sub
lcall
ss
add
cltd
fnstcw
adc
fwait
clc
shlb
xchg
pop
into
mov
int3
stos
xchg
in
dec
dec
lcall
cltd
into
lods
inc
outsw
mov
arpl
mov
andl
fsubl
arpl
insl
inc
mov
pop
gs
add
addr16
add
into
and
movsl
jo
mov
into
aaa
sub
outsl
dec
pop
vpperm
pop
mov
jecxz
dec
xchg
lea
adc
leave
inc
inc
push
mov
imul
and
sub
cmp
mov
sbb
popf
mov
add
mov
shll
ret
jo
mov
or
jne
pusha
mov
cmp
or
and
fsubrs
jb,pt
mov
lret
aam
aam
cltd
test
jp
mov
sbb
and
in
sahf
mov
jmp
dec
lcall
inc
push
mov
mov
aam
sti
lea
nop
xor
stc
cwtl
mov
pop
dec
dec
mov
add
fxch
addr16
adc
negb
mov
loop
xlat
pop
push
xchg
arpl
pusha
or
fisubl
gs
mov
dec
jecxz
xor
sbbl
cmp
fmuls
test
pop
add
pop
lret
mov
outsw
inc
fs
xor
jne
xchg
dec
into
test
lahf
enter
fwait
mov
lods
push
je
faddl
mov
mov
out
imul
lahf
xchg
insl
gs
inc
cmp
add
lds
in
or
loopne
cmpsl
adc
insl
jmp
jns
and
xchg
enter
or
or
inc
cmc
leave
or
pop
in
je
pop
mov
test
js
jmp
out
pop
jbe
mov
dec
inc
pop
fs
and
adc
inc
bound
and
out
xchg
sbb
in
divb
fldt
adc
add
mov
and
and
pop
bound
mov
movsl
add
cmp
out
inc
paddsb
push
jnp
arpl
jne
push
jle,pn
xchg
fcomps
popa
gs
cmpsb
or
shrl
or
and
cwtl
pop
cmpsl
popa
jp
and
push
mov
loopne
push
aaa
xor
cld
lcall
xchg
jno
sbb
xor
inc
mov
sbb
loopne
mov
or
lea
sub
or
cmp
xor
sbb
jns
rol
stos
xchg
push
inc
fwait
enter
cmpsl
daa
sub
sub
add
ss
or
dec
mov
push
adc
mov
jl
or
or
cmp
das
sbb
repz
lcall
inc
ljmp
xchg
fsubrs
insl
ret
mov
inc
ret
jl
mov
xor
jecxz
mov
fldl
out
into
lret
pop
add
dec
mov
adc
dec
mov
and
inc
add
pavgw
lea
fdivl
sub
or
test
sbb
popf
test
push
out
cmp
mov
shll
repz
ficoml
or
add
jns
mov
xor
lods
xor
mov
nop
pop
out
insl
jge
in
das
mov
jns
push
sub
mov
xchg
jp
sbb
lahf
xor
ja
sbb
int3
pop
and
dec
sub
rcll
sbb
cmp
in
xor
dec
adc
nop
loop
out
or
div
jmp
sti
jmp
mov
lahf
xchg
dec
fsubr
mov
mov
cltd
fiaddl
or
cmp
adc
inc
add
and
xchg
aam
ds
fisttps
dec
jbe
add
jp
dec
inc
pop
add
dec
xor
clc
mov
insb
inc
repnz
aas
mov
movsl
push
sub
sub
inc
cmp
jl
fcomp
jbe
push
xor
mov
leave
popf
cmp
cmp
out
std
imul
pushf
js
or
fcomps
ja
ds
mov
incl
lcall
aas
add
sbb
jo
push
sbbb
repnz
sub
mov
jecxz
aas
dec
sbb
xchg
pop
test
inc
dec
jo
movb
sbb
je
fimuls
or
mov
adc
call
movsb
mov
cli
in
das
cli
add
adc
popf
in
call
mov
dec
aaa
lcall
popa
xchg
mov
inc
popf
clc
jl
fdivrl
lods
cmp
fwait
adc
ror
scas
lcall
and
push
popf
outsl
or
lock
inc
repz
inc
test
or
lret
lods
mov
test
fisubrs
mov
iret
and
ficompl
ror
sub
mov
das
clc
sub
mov
pop
cmp
loope
xchg
dec
aam
push
jl
mov
add
pop
stos
pop
and
sub
mov
test
bnd
xor
inc
or
out
add
out
loop
lods
ja
jecxz
xchg
cmpl
pop
ljmp
cld
imul
pushf
jle
push
ljmp
add
incl
pop
scas
aas
ss
push
movsl
mov
bound
mov
mov
in
ja
ljmp
dec
xlat
push
cmp
popl
cmp
lahf
sbb
or
pop
and
sbb
lock
jle
js
fldl
cld
fildll
imul
fxch
clc
test
mov
lds
subl
mov
mov
sti
sub
int
test
mov
leave
push
sti
cmp
adc
adc
dec
test
adc
sub
fwait
jecxz
mov
mov
shlb
repnz
and
out
mov
mov
cmp
mov
fwait
icebp
push
jmp
push
hlt
push
test
cmp
or
sahf
xor
jmp
xor
push
dec
inc
sub
adc
xlat
push
pop
mov
push
lods
dec
lret
cs
push
rcrb
lret
movsb
inc
ret
add
ljmp
pop
mov
pushf
pop
aaa
push
jmp
sub
test
lods
loop
sub
punpckldq
in
fmulp
xchg
in
push
xchg
cld
jns
fists
mov
aas
xchg
out
testl
sub
mov
out
push
cmp
loop
insb
inc
adc
aaa
jne
inc
fwait
inc
push
leave
inc
push
cmc
mov
sbb
add
or
pop
out
mov
cmp
test
push
mov
and
or
fdivrs
arpl
jne
add
inc
sbb
and
daa
inc
inc
into
xorb
dec
das
push
repz
or
sub
aas
adc
jo
fsts
cmc
pop
aaa
cmpsb
and
mov
orb
ss
mov
add
jmp
cmpsb
fistpll
test
scas
pusha
push
push
push
inc
jmp
pop
pop
sub
fistl
jl
add
mov
or
sahf
xchg
sub
hlt
xor
inc
mov
xor
dec
jb
popa
lcall
test
pop
sub
mov
push
push
insb
adc
rcl
or
dec
ss
pminsw
not
push
mov
xor
mov
pop
push
xor
repz
clc
lret
cmp
inc
aas
cmp
xchg
sti
xchg
xchg
popa
xor
sub
adcb
es
and
jns
aaa
cs
aaa
jmp
jg
xchg
jp
pusha
push
cmpsb
es
scas
repz
xchg
arpl
lret
and
sbb
test
cmp
repnz
test
lea
test
pop
fisttps
call
outsb
loope
rorl
outsl
cmp
repz
daa
sbb
mov
or
fldenv
stos
lret
out
fistpll
mov
push
mov
repnz
ficoms
push
adc
add
stos
xchg
test
cmpsl
ret
mov
sub
hlt
sbb
lret
lods
xchg
pop
lcall
out
scas
cltd
cmpsb
in
cmp
xchg
test
push
cmp
fcmovnbe
in
sarl
shrl
sbb
or
daa
pop
std
mov
ret
lret
jp
adc
push
lock
arpl
sbb
push
cs
inc
jecxz
cmpsb
and
or
xor
cmpsl
add
adc
call
mov
jo
mov
scas
std
mov
mov
leave
cmp
call
xchg
xor
les
insl
ss
dec
push
xlat
adc
sbb
pushf
lock
lods
mov
xor
jp
test
mov
dec
scas
lods
mov
jmp
in
mov
and
rcrb
mov
in
fs
fsubs
enter
sub
mov
jbe
mov
into
sbb
insb
sub
jle
jecxz
sbb
mov
push
sbb
mov
sub
and
mov
cwtl
test
mov
and
sbb
inc
mov
lock
shlb
mov
std
cmpsl
add
stc
adc
mov
addl
mov
push
xor
mov
shlb
in
jbe
sub
out
cmovnp
dec
in
inc
and
inc
and
pop
out
sbb
ja
mov
cwtl
lds
fmull
mov
cmp
push
mov
sbb
jbe
shrl
cwtl
inc
aad
pop
xchg
dec
mov
mull
mov
in
cmp
dec
stc
flds
push
dec
sub
sbb
cs
jp
dec
jno
sub
call
jge
imul
rolb
ja
addr16
sarl
scas
adc
jmp
push
sbb
imul
mov
pop
inc
xor
xor
in
insb
loopne
jge
jae
mov
int3
sbb
fdivl
xchg
dec
push
bound
test
out
mov
push
jo
ficoml
frstor
fisubl
cmp
sub
cmp
out
cmc
std
xchg
pushl
sub
outsl
sahf
out
cmp
mov
adcb
daa
insb
mov
jne
movsb
or
lret
movsb
mov
test
divl
roll
int
inc
mov
jo
xor
into
xchg
cmp
inc
or
push
nop
pushf
loope
mov
ss
cld
pop
sub
les
mov
gs
gs
sbb
in
fisubrl
pop
idiv
imul
push
cmp
dec
xor
mov
fnstsw
lods
adc
adc
jp
in
out
clc
push
add
fisttpl
jnp
sbb
movntps
out
movsl
jo
push
mov
bound
jp
inc
xchg
push
or
push
mov
mov
outsb
mov
ss
sbb
mov
ret
dec
scas
dec
shll
dec
iret
jmp
inc
lret
clc
popf
mov
stos
movsb
addr16
cmp
int
sbb
stos
lds
dec
inc
mov
nop
mov
and
cmp
jmp
shlb
bound
test
stc
push
inc
xchg
insl
xor
add
xchg
scas
mov
inc
leave
aas
fisubl
loopne
fcomip
testb
jp
jmp
nop
and
stc
scas
xchg
cld
leave
clc
int3
test
xchg
mov
out
ss
fidivrs
xor
mov
cmpsl
cmp
test
sub
fmull
ljmp
in
in
in
jne
into
cmpsb
mov
mov
mov
jmp
insb
pusha
outsb
sub
lahf
fmul
pop
in
sti
cwtl
or
pop
push
mov
xor
jb
jo
and
ss
repnz
fs
dec
fidivs
test
pusha
mov
mov
loope
and
out
adc
mov
pop
sub
repz
cmp
xchg
mov
xchg
in
jbe
aaa
push
int3
es
test
xor
dec
add
mov
and
in
ljmp
fninit
xchg
xor
pop
fildl
xchg
sbb
pusha
fwait
or
gs
xor
loop
jmp
leave
lds
push
cld
mov
xchg
adc
or
adc
cltd
stc
xchg
xchg
pop
push
mov
or
cmp
xor
outsb
pusha
dec
and
repz
inc
int
loopne
adc
imul
or
test
adc
xor
fnsave
jg
sub
fcoml
mov
pop
es
xor
mov
gs
sbb
push
mov
adcb
add
adc
imul
into
cmp
fbld
xor
insl
adc
or
cli
mov
std
mov
adc
mov
rol
nop
and
and
lods
xor
pop
insl
inc
sbb
cmp
int3
add
dec
or
divl
xchg
xlat
sub
je
pop
jno
xchg
inc
or
jp
cmp
into
repz
mov
sbb
outsl
aam
dec
in
int
sbb
loope
aam
lcall
and
xor
xchg
xor
hlt
xor
sti
inc
jae
or
loopne
and
inc
xchg
mov
les
xlat
fwait
test
stc
das
jg
adc
ret
out
iret
ja
sahf
aam
loope
sbbb
mov
lods
stos
push
fcomp
or
pop
iret
aaa
dec
pop
pop
pop
pop
mov
mov
inc
sar
and
inc
inc
sub
dec
inc
or
xchg
or
rcll
pop
sub
icebp
sub
leave
outsb
mov
les
lods
jb
xchg
or
fisubrs
test
add
je
mov
adc
vsqrtsd
jp
ss
hlt
fdivrs
mov
adc
imul
enter
sbb
out
call
testl
std
xor
repnz
test
hlt
cmc
pop
pop
int3
fmull
xlat
out
ljmp
mov
mov
pushf
pushf
shl
fwait
cmp
out
sub
inc
push
movsb
sub
push
loopne
sahf
jo
or
pop
addr16
push
in
adc
rclb
push
sub
mov
push
dec
jle
push
mov
pop
jge
jmp
mov
inc
enter
subl
jb
stc
xorl
ret
clc
dec
fadds
stc
lret
inc
and
sti
cmp
inc
js
fiadds
testb
dec
or
mov
push
fsubrs
and
push
and
out
outsl
popf
sub
fisubrs
mov
negw
mov
ss
std
arpl
sub
notb
int3
mov
and
cmp
and
xchg
arpl
les
into
fptan
ret
lds
jl
mov
mov
xor
pop
adc
or
shlb
movsb
sbb
mov
rclb
movsbl
mov
cs
shrb
or
pop
sbb
dec
cli
mov
insl
ss
xor
add
dec
outsb
or
adc
idivl
push
sbb
mov
push
jecxz
jns
lret
das
sub
xchg
pop
sar
repnz
clc
lea
or
les
imul
fisttps
rolb
in
pop
xchg
jg
cmp
mov
insl
lret
or
fsubrs
mov
and
imul
jns
xchg
mov
in
push
jl
mov
rcrl
loope
add
aad
sbbl
ss
mov
fsubs
push
push
ret
mov
sbb
ret
mov
sbb
mov
pop
mov
pop
iret
rcl
dec
outsl
jg
jne
sbb
enter
test
je
adc
or
aad
dec
ret
pop
movsb
leave
fbstp
cmpsl
mov
flds
add
les
pop
nop
pushf
lods
popf
scas
pop
jnp
or
fcmove
add
sub
jecxz
ret
jns
stos
mov
push
xor
xchg
adc
push
dec
test
and
cmp
lods
and
pushl
cmp
call
pusha
inc
jne
adc
hlt
mov
mov
stc
inc
sub
dec
push
loop
ljmp
aam
sti
scas
call
mov
jg
loopne
aaa
pop
sub
in
pusha
mul
lods
inc
xchg
scas
pop
push
sub
push
mov
sbb
scas
in
mov
test
mov
sbb
xor
pop
ds
xchg
fsubl
inc
dec
scas
out
push
dec
push
sbbl
popa
mov
addr16
jbe
ret
and
sub
lods
into
cmp
rcrl
movsb
adc
cmpl
mov
mov
cmc
jecxz
lods
enter
popa
sbb
aas
adc
hlt
fsubs
lock
push
jp
cmp
dec
adc
lahf
pop
mov
jnp
adc
es
leave
push
mov
cmpsl
lods
cmpsl
bound
cmp
sub
scas
xor
mov
mov
insb
xchg
cmp
vorps
pop
repz
jl
pop
or
ljmp
inc
rcrb
lcall
mov
push
and
mov
sarl
es
ss
insl
xor
fadd
sbb
inc
mov
outsb
fs
aam
enter
sti
and
test
xchg
pop
lret
jbe
add
fldenv
jno
outsl
mov
dec
pop
outsb
jmp
cmp
clc
dec
jle
inc
or
push
bound
mov
mov
sub
push
mov
mov
add
out
mov
push
clc
jge
push
jb
ljmp
adc
mov
or
adc
xchg
insb
cmp
sub
xor
jge
jg
push
aam
cmp
fiaddl
push
mov
or
mov
cmp
ja
xchg
fdivrs
insb
imul
sub
adc
xor
and
pop
xor
cld
sub
int3
xor
jl
cmp
adc
adc
and
xchg
adc
movsb
cli
sahf
lcall
cmpsb
call
add
std
pusha
dec
mov
pop
in
mov
shlb
sbb
shll
pop
pop
pop
pop
daa
fdivl
fiaddl
pop
dec
notl
mov
stc
pop
xchg
outsb
and
fcompl
jg
mov
scas
cwtl
xor
push
gs
insb
inc
and
cmp
or
loope
es
push
push
sbb
add
testl
out
imull
sarb
sahf
cmp
xchg
scas
imul
xchg
push
test
pop
push
xor
sub
pop
xchg
outsl
pop
pop
hlt
les
flds
icebp
and
out
mov
into
adc
adc
jb
lea
das
jne,pn
stc
icebp
sbb
xchg
pushf
lcall
mov
sbb
fwait
shlb
xchg
xor
jb
adc
mov
and
xchg
nop
add
cmp
mov
and
adcl
mov
pop
mov
sbb
sbb
adc
jns
popf
cmp
loopne
push
and
xor
inc
sti
cmpsb
mov
add
sbb
adc
xor
mov
jno
push
mov
in
push
push
xor
sbb
pop
inc
addr16
lcall
mov
mov
daa
out
sbb
xor
add
add
add
add
aam
add
add
test
mov
add
add
fs
add
add
adc
add
add
add
hlt
mov
add
add
push
inc
add
add
add
add
add
xor
add
add
in
add
add
xchg
xchg
add
add
inc
dec
add
add
add
and
add
add
jle
add
ja
or
decl
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
andl
andl
push
push
movl
movl
movl
movl
mov
call
push
push
mov
call
mov
mov
push
movl
movl
mov
movl
call
ret
push
mov
sub
push
pushl
call
mov
pushl
xor
movl
pushl
mov
mov
mov
movl
movl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
nop
loop
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
jecxz
add
add
add
add
xor
add
sub
add
and
add
sbb
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
add
and
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sbb
add
cmp
add
pusha
in
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
mov
in
add
in
add
in
add
in
add
in
add
in
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
add
sbb
add
sub
add
cmp
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
add
pushf
out
add
out
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
aas
out
add
add
and
add
sbb
add
adc
add
or
add
add
add
cld
out
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
out
add
add
insb
out
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
clc
out
add
call
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xchg
call
add
movsb
call
add
mov
add
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
lock
add
or
add
sbb
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
jae
jb
jae
outsb
add
inc
add
pushl
call
push
push
push
call
add
int3
mov
xor
push
push
call
push
push
push
push
push
mov
call
pushl
mov
pushl
pushl
push
pushl
call
push
push
call
pushl
call
pop
push
pushl
push
push
pushl
call
push
push
pushl
call
pop
push
pushl
push
call
push
push
call
mov
sbbb
mov
imul
adc
add
add
adc
add
add
mov
add
add
loopne
adc
add
movsb
scas
or
add
sahf
add
jb
jb
add
add
mov
add
add
pop
sbb
add
adc
jns
jne
das
xchg
je
jb
aas
pop
dec
add
in
addr16
and
mov
xor
cmp
push
adc
clc
xchg
mov
push
jns
add
push
add
jne
pop
push
adc
std
pusha
ljmp
lock
clc
test
imul
popa
iret
push
mov
mov
sub
add
fsubrs
mov
add
jmp
jg
push
add
sub
scas
je
test
sarb
call
test
mov
decl
call
jne
or
mov
push
clc
sahf
mov
dec
push
incl
mov
test
mov
cwtl
push
ljmp
pop
sti
decl
loopne
add
push
jno
add
add
add
dec
add
sbb
and
or
sbb
sbb
pop
fiadds
je
inc
ret
dec
gs
loop
popa
inc
insb
gs
outsl
mov
outsl
add
gs
dec
jb
outsl
je
pop
leave
jge
je
dec
decl
add
mov
xor
insl
push
mulb
add
lea
push
addr16
and
add
add
ds
inc
xor
lock
add
add
and
adc
add
add
inc
fiadds
add
add
add
jle
add
add
scas
add
add
add
jo
add
add
mov
push
xchg
sbb
daa
mov
mov
outsb
adc
lcall
dec
lock
inc
fbstp
sbbl
xor
push
jmp
sub
scas
push
rcll
sbb
or
outsb
mov
ret
fmull
mov
and
jns
arpl
push
cltd
jns
int3
in
push
or
cmp
int3
std
ret
lcall
nop
push
mov
repnz
push
jb
stc
xchg
popf
dec
sti
mov
jmp
or
outsb
nop
lds
xor
icebp
icebp
mov
out
idivb
nop
dec
lods
repnz
jbe
insl
adc
std
repz
imul
and
sbb
dec
dec
pop
into
lods
out
pop
mov
cli
insb
fisubrl
jg
jge
out
and
pop
xchg
or
xchg
loope
mov
mov
fidivl
sbb
adc
in
aaa
std
cmp
lret
jmp
in
insb
ss
jne
pop
addr16
adc
xor
inc
mov
imul
mov
mov
dec
push
fwait
mov
lock
or
hlt
enter
mov
dec
xor
nop
mov
rol
leave
out
gs
push
dec
and
push
aas
mov
dec
mov
dec
xlat
leave
rorb
jle
cld
xchg
fisttps
dec
lret
out
cwtl
xor
push
daa
and
adc
mov
or
xor
test
dec
lods
subl
frndint
imul
mov
cmp
xchg
sbb
mov
push
jmp
pop
out
shll
rorl
inc
into
scas
rcrl
and
insl
pop
and
inc
sarb
add
loope
push
push
fiadds
lods
mov
call
mov
cmpsb
xor
repnz
cmp
and
inc
or
mov
in
push
ja
inc
enter
mov
ja
fwait
addl
mov
jnp
div
dec
fdivs
inc
test
insb
arpl
sarb
fisubl
pop
inc
aad
ret
test
aad
loope
repz
xchg
in
push
aaa
xchg
repnz
cmpsb
popl
test
mov
and
int3
imul
mov
jmp
mov
adcl
pop
and
sti
inc
jp
rol
and
loopne
adc
adc
ficoml
mov
pop
out
mov
push
push
aaa
movb
lret
add
int
dec
xorb
mov
mov
clc
data16
pop
xor
test
outsb
push
add
push
incl
sub
iret
orb
mov
cltd
aam
push
xor
pop
pop
fcomip
and
sub
je
inc
out
mov
jns
cli
adc
adc
call
cwtl
pop
fdivs
mov
jp
jbe
movsl
push
mov
sub
test
je
xchg
jecxz
mov
out
nop
push
push
stos
lret
adc
rcl
mov
jne
aam
js
push
and
mov
pop
mov
jle
mov
cmpsb
jg
outsl
mov
movsb
inc
sbb
fwait
dec
loop
cmc
into
outsl
pop
dec
je
shll
insl
out
mov
aaa
out
push
dec
outsl
test
jl
cmp
test
sbb
insl
and
iret
add
mov
xlat
lods
jne
push
inc
ret
inc
add
jno
and
pop
iret
andb
les
jmp
sbb
aaa
adc
out
js
mov
pop
pop
adc
jnp
orl
int3
mov
pop
dec
sub
cli
sub
out
outsl
jnp
fmuls
and
sbb
in
bound
stos
xor
aam
pop
dec
sahf
jp
ljmp
pop
lods
jo
pop
mov
dec
psubusb
in
xchg
addr16
mov
hlt
test
push
ja
adc
pop
js
xchg
out
or
jl
gs
cmp
inc
int
mov
sbb
in
popf
lcall
mov
in
sbb
or
xor
mov
sahf
pop
das
insl
adc
leave
dec
add
lds
fdivl
add
pcmpeqb
add
push
mov
xchg
and
sar
pop
testl
stos
pop
mov
mov
mov
cmc
xchg
lea
xchg
mov
pushf
dec
out
leave
pushf
clc
jle
sahf
loopne
jno
adc
inc
xor
xchg
mov
or
rcrb
mov
push
in
cwtl
add
xlat
lock
lock
imul
popa
cmpsb
xor
xchg
sahf
test
mov
push
and
sbb
mov
fimuls
idivl
cld
movsl
data16
mov
sbb
mov
test
insl
test
aam
mov
in
das
js
fdivr
pop
test
xor
mov
loop
push
sub
mov
pusha
cmp
aad
adcl
test
xor
mov
daa
frstor
mov
or
hlt
dec
les
sbb
repz
scas
push
call
pushf
mov
xchg
sti
aaa
xchg
xchg
test
lahf
push
sbb
nop
xchg
add
sub
hlt
pcmpgtd
push
cmp
cmp
cld
mov
ret
enter
pop
mov
scas
push
mov
sbb
mov
insl
push
push
fistl
jbe
xor
mov
jae
out
call
mov
adc
push
pop
mov
pop
popf
cs
pop
jb
test
cmp
fsubrs
jg
nop
adc
push
push
jne
in
or
jbe
xchg
nop
dec
aaa
popf
jecxz
imul
lcall
stos
push
test
mov
pusha
int3
sub
push
sbb
xor
jne
inc
clc
stos
and
fldl
rcr
shlb
pushl
or
rcl
outsb
das
cmpsl
and
pop
and
das
repz
ret
shrb
dec
aaa
inc
gs
cmc
xchg
fs
in
enter
leave
push
sete
push
xchg
rcrb
inc
adc
hlt
repz
lods
and
addl
imul
fnstcw
iret
movl
sbb
fistpll
sub
stc
sbb
jmp
mov
mov
xlat
jb
in
push
jns
movsl
xor
cltd
dec
adc
mov
mov
rorb
or
cwtl
test
adc
fwait
mov
stos
out
jns
in
out
repz
jle
insl
mov
addr16
mov
push
insl
sbb
push
add
scas
adc
imul
jle
ret
mov
cmp
scas
cltd
push
inc
aaa
aas
mov
and
pop
adc
sub
das
imul
fildll
lock
inc
roll
and
cli
fwait
scas
imul
fdivr
cltd
int
mov
fs
adc
nop
popf
inc
mov
push
cmpsb
out
pusha
xor
mov
xchg
xor
and
push
mov
mov
adc
dec
jmp
into
scas
or
shll
cmp
daa
cld
mov
jbe
das
dec
aad
xor
ds
xor
sbb
imul
nop
ss
mov
or
lock
push
std
je
cmpb
rolb
sbb
inc
ret
dec
jg
xchg
or
inc
mov
inc
and
pop
mov
aaa
fsubl
in
inc
mov
xchg
mov
dec
movsb
cmpsb
and
cwtl
mov
aam
aaa
dec
inc
pcmpgtw
adcb
jle
fisttpl
mov
icebp
loopne
dec
push
lcall
lret
xchg
rcl
pop
arpl
fwait
mov
std
insl
and
cs
incb
outsl
push
mov
cltd
sbb
jae
sbb
nop
ficompl
or
cmp
fmull
lock
sbb
xor
insb
leave
imul
lret
push
sub
xor
add
stos
jo
mov
jmp
cli
and
test
fistps
adc
lock
push
adc
xor
cmp
xchg
dec
aad
pop
dec
or
data16
dec
nop
or
hlt
inc
jo
test
jbe
push
xor
push
es
ret
push
add
std
in
adc
cmc
sbb
inc
pop
jnp
xchg
outsb
testb
les
add
mov
icebp
lods
call
sub
dec
inc
fistpll
dec
cmp
dec
jmp
imul
jns
mov
xor
nop
jl
pop
adc
dec
notb
cs
sbb
jo
mov
add
adc
dec
iret
scas
pusha
mov
dec
jge
scas
gs
imul
lock
adc
sahf
sub
xchg
inc
stos
or
mov
hlt
dec
loope
testb
sub
mov
xor
push
aam
push
jl
pop
mov
inc
pop
or
in
in
hlt
mov
clc
jg
adc
adc
jle
mov
imul
dec
sbb
cmpl
inc
test
fs
imul
or
dec
fs
sub
cmp
faddl
dec
xor
mov
lds
or
repnz
inc
outsb
sub
es
or
in
mov
ficoml
pop
pop
imul
fildl
add
dec
ja
add
pop
sbb
pop
dec
aad
sub
in
mov
cltd
xchg
adc
cs
dec
fwait
cli
pushf
inc
sti
cltd
cld
ret
mov
xchg
mov
cmp
xchg
and
insb
push
cmp
dec
xchg
sbb
xor
hlt
pop
arpl
or
enter
je
mov
xor
inc
or
lods
xchg
icebp
jb
xor
ds
outsl
ficoms
rcl
mov
push
lds
cli
lds
xchg
rcrb
shlb
loopne
leave
and
pop
xchg
fisubl
dec
shll
mov
jne
dec
mov
add
movsb
mov
push
in
adc
mov
loop
jb
mov
ret
ljmp
lret
inc
and
roll
sti
ffree
scas
pop
cmpb
bound
sub
mov
push
lods
jmp
test
stos
ja
aad
xchg
lds
cmp
jecxz
add
inc
int
popf
lock
int
lock
mov
fsubs
insl
popf
jl
vpacksswb
lock
sub
xor
dec
jb
insl
sbb
cmp
subl
jbe
mov
and
ficoms
sub
pop
mov
dec
inc
and
pop
xchg
pop
fstpl
or
fs
stos
mov
xchg
mov
mov
push
cltd
xlat
aam
aad
sbb
push
inc
adc
loope
fmul
pushf
iret
mov
cmc
push
rcrl
push
scas
in
sub
pop
icebp
sub
enter
ds
es
enter
xlat
ja
jmp
aad
push
mov
xchg
pushf
rcrl
aad
adc
jle
imull
and
push
mov
insl
movsb
xor
dec
popa
fs
mov
pop
std
imul
cld
pop
out
js
mov
les
ja
jecxz
fnstcw
inc
xor
mov
xor
sbb
mov
cmp
addr16
daa
and
mov
push
imul
test
inc
pop
lret
enter
lret
outsb
test
pop
out
xor
dec
fisttps
jge
cwtl
repnz
and
mov
and
xchg
sub
inc
xchg
xchg
ss
mov
push
cmpl
cmp
negl
or
popf
xchg
cmp
shrl
fimull
imulb
sti
push
sbb
xchg
jnp
xor
xor
jns
pushf
and
je
push
unpckhps
stos
test
iret
aas
movsl
std
xlat
clc
pop
mov
jge
sahf
mov
dec
mov
jb
cmp
cmp
cmp
shlb
pop
je
and
mov
inc
aam
mov
xor
fdivrl
data16
cmp
icebp
nop
aas
jle
and
test
xlat
dec
arpl
inc
aaa
std
jp
faddl
xlat
mov
push
xchg
shlb
notl
fstpl
nop
xabort
lret
push
repnz
push
js
push
loop
mov
cmp
sarb
xor
aaa
cmp
loopne
and
xchg
mov
ficoms
inc
inc
lock
jge
push
test
mov
mov
pop
adcb
out
xchg
enter
shrb
push
jne
aaa
jg
push
nop
mov
dec
add
popf
dec
push
negl
cltd
pop
test
lahf
add
xchg
int3
enter
iret
jne
sbb
jo
repnz
sub
mov
movsb
or
mov
sbbl
ss
adc
shlb
aad
hlt
add
mov
ss
xchg
adc
cmpsl
repz
subl
addb
sti
pop
icebp
mov
pushf
xchg
stc
sbb
push
cmp
push
mov
fsts
in
loop
and
dec
jb
and
stos
push
outsb
dec
pop
iret
push
sbb
ret
adc
mov
xchg
push
stc
push
cli
imul
insb
les
test
add
or
insb
xchg
sub
mov
jo
xor
andl
fs
insl
mov
push
jo
arpl
pop
fdiv
inc
repz
jnp
sahf
push
mulb
inc
jle
sub
adc
sub
mov
xor
pop
add
sub
adc
jb
add
sub
jp
es
and
lock
shr
outsl
loopne
lret
hlt
push
outsb
dec
out
icebp
or
push
daa
lods
mov
pop
inc
cli
push
cld
adc
inc
dec
repnz
shrb
inc
jle
push
cli
jp
lock
push
fdivrs
gs
add
cmp
cmp
cli
cld
jle
rcrl
cs
inc
cs
add
fsub
mov
ja
dec
and
add
ret
in
mov
mov
lret
jp
lods
sarb
in
push
rcrb
xchg
js
add
data16
shrb
insb
shl
lahf
push
dec
push
sti
iret
mov
xor
test
icebp
and
mov
xor
jne
pusha
dec
dec
or
popf
es
fsub
inc
add
rorl
outsb
mov
sbb
cmpsb
pop
jl
and
loop
aad
push
rorb
add
pop
mov
inc
inc
sbb
and
hlt
ss
enter
sti
jp
das
pop
add
xchg
lea
notb
jge
mov
inc
xorl
mov
out
inc
idivl
clc
cld
fsts
outsb
xlat
xchg
sbb
ljmp
and
into
xchg
repnz
mov
roll
test
adc
sub
jge
addb
sub
add
xchg
push
mov
pop
add
or
mov
dec
xorl
shll
pop
aas
pop
cmpb
mov
loope
sub
outsb
shlb
scas
cmpsl
xlat
icebp
in
push
lret
lcall
push
stos
xor
out
lods
jl
js
mov
ficompl
sub
in
and
insb
dec
cmpl
adc
icebp
lret
pop
xchg
test
aam
test
add
fstpt
fidivl
cmpsl
scas
ret
add
jbe
std
and
out
push
adc
cmp
iret
mov
pop
push
std
mov
lods
jecxz
jnp
or
dec
cmp
scas
mov
lret
loope
pop
push
aaa
push
lret
jg
inc
loope
add
ret
xor
jge
mov
jg
inc
or
jae
adc
pushf
mov
sub
imul
ret
push
into
pop
inc
repnz
pop
rcr
xchg
mov
or
pop
insl
dec
or
mov
scas
jne
push
xlat
xor
adc
inc
mov
mov
dec
insb
jle
pop
aam
cld
pop
xor
adc
sarl
inc
push
sub
dec
jg
pop
jp
mov
sub
mov
aam
dec
sbb
cld
push
sbb
xchg
rolb
dec
subl
ret
sbb
outsl
cmc
ret
inc
jmp
push
cs
lods
pop
mov
sahf
inc
mov
inc
mov
cmp
mov
shlb
jne
repnz
mov
xor
test
jp
mov
sbb
mov
repz
cs
pushf
sub
fcomps
xor
fwait
dec
adc
lcall
aaa
xchg
cld
call
pop
xor
lret
push
fpatan
hlt
in
add
cs
pusha
mov
push
jb
in
lock
xor
sbb
adc
pushf
xor
inc
not
ljmp
mov
fs
push
enter
int3
sbb
rcrl
fsubrl
outsb
in
repnz
mov
les
sub
mov
push
inc
jmp
std
imulb
aas
movl
andb
push
xchg
test
mov
mov
das
adc
insb
mov
test
cmp
mov
nop
lret
data16
cltd
pop
lcall
mov
push
jge
cmp
pop
stc
or
cmpsb
stos
sbb
clc
ljmp
outsl
xchg
sub
test
dec
jmp
imul
sbb
or
cltd
loope
inc
jae
lds
xchg
xor
iret
ja
cld
dec
ret
je
mull
sbb
pop
outsl
addb
icebp
inc
jb
fcomi
dec
aam
jl
inc
add
push
pop
sub
mov
cmc
mov
cld
jno
push
dec
ds
dec
popa
add
popf
ret
popa
popf
roll
cltd
nop
in
jle
fnstcw
and
add
adc
jl
insl
mov
pop
add
sahf
mov
jne
xchg
xchg
jge
mov
xchg
inc
push
in
add
push
jp
arpl
in
mov
out
cmp
jnp
and
jl
ds
mov
sahf
xorl
mov
or
sbb
mov
cs
sbb
pop
popf
int
adc
repz
mov
jp
xlat
out
icebp
scas
fwait
mov
fdivl
push
cs
jb
xchg
hlt
or
int
and
stos
dec
jno
loopne
popf
ss
pop
sbb
dec
out
fistpl
jae
inc
les
push
adc
or
add
inc
jl
repz
mov
orl
push
popa
movsl
jnp
cvttps2pi
adc
out
inc
cli
ret
pop
movsl
lcall
daa
jnp
cmp
cltd
lret
lock
repnz
fcompl
clc
dec
popf
lahf
mov
cld
push
push
orb
adc
loope
arpl
mov
imulb
fmuls
or
lcall
ds
rolb
xchg
jecxz
and
incl
or
sbb
add
rorl
sbb
mov
ja
lods
mov
movsl
cld
das
and
repz
aaa
mov
loope
sbb
mov
out
out
je
mov
dec
xchg
cli
adc
lret
mov
dec
sub
adc
lds
xor
lea
call
mov
stc
adc
icebp
fmuls
xchg
mov
fisubs
xchg
cmc
sbb
lods
cltd
add
in
inc
xchg
jno
sbb
aad
cli
cmpsl
es
sbb
loope
call
cmpsb
push
out
fisubs
cmp
add
out
inc
stc
pop
in
push
mov
cltd
sub
fdiv
push
in
and
out
inc
xchg
adc
popa
outsb
lret
imul
cmc
in
jmp
cmp
sub
push
in
xor
jno
sbb
imul
fwait
sbb
sbb
aam
clc
fidivrl
je
push
xor
out
insl
pop
ss
push
cwtl
jmp
sub
outsl
notl
aaa
in
cltd
repnz
dec
std
movaps
scas
addb
push
in
stos
cmp
cld
jne
push
adc
pusha
mov
stos
in
pop
shlb
pop
outsb
cli
and
ljmp
dec
dec
dec
iret
rolb
imul
mov
and
ja
cli
jge
sub
jno
mov
faddl
push
xchg
push
xchg
cltd
or
cmp
dec
fs
insl
loop
je
rol
pop
mov
mov
jne
push
or
popa
mov
mov
lods
stc
mov
in
in
jbe
pop
out
or
icebp
jecxz
or
dec
sub
pop
lcall
inc
cmp
cmovns
jmp
dec
jae
int
dec
stc
inc
fstpl
jl
and
lds
lods
push
mov
in
cmp
out
cs
add
pop
mov
mov
dec
pop
sub
or
daa
cmc
dec
xchg
mov
rorb
call
and
sub
or
andl
out
loopne
pop
pop
jge
scas
xchg
pop
mov
dec
popl
lds
jle
pop
ja
dec
ds
mov
sbb
int
fisubl
ds
mov
cmc
mov
inc
add
fnstenv
jno
mov
insl
add
sbb
loop
cmpsb
pop
ficomps
xor
pop
icebp
sbb
pop
dec
into
pop
imul
nop
into
iret
push
adc
arpl
fwait
rolb
into
or
or
das
xor
lds
cmp
push
push
push
lods
pop
das
movsl
xchg
add
popa
jge
push
loope
push
aad
rolb
mov
iret
iret
inc
mov
xor
cmpsb
sub
rorb
push
jmp
andl
movsb
lods
je
or
pop
mov
ret
insb
imul
xchg
adc
call
dec
push
jns
fsubp
push
pop
js
push
pop
cmp
jecxz
pushl
aas
fcomps
sbb
mov
pop
sti
pop
cmp
pop
dec
cli
push
sub
pop
cmp
ret
ljmp
out
xor
cs
mov
dec
push
mov
cmp
sbb
cwtl
mov
add
dec
rcrb
dec
push
mulps
xchg
adc
pop
jge
nop
sub
scas
arpl
in
shlb
lods
shll
shrb
push
add
add
bound
xor
sbb
rolb
mov
dec
jp
and
inc
xor
sbbb
in
rorb
sub
lcall
gs
icebp
lds
stos
jno
jae
popf
mov
in
push
mov
cmpsl
add
pusha
add
pop
outsl
lcall
repnz
cmp
mov
btc
xchg
cmp
lods
adc
pop
jo
cwtl
lock
xchg
sub
xor
xchg
dec
movsb
inc
mov
movsb
push
mov
insb
dec
xor
xor
inc
sub
adc
cmc
and
xor
xor
ror
cmp
nop
sub
sbb
das
movsb
push
sub
fninit
push
mov
push
out
mov
cwtl
rorb
inc
xchg
repnz
and
addl
scas
aad
lcall
mov
and
mov
adc
jno
aad
loop
push
int
lcall
popl
std
call
dec
sarb
std
adc
pminub
notb
xor
mov
outsl
push
fimuls
dec
sub
enter
insb
gs
stos
inc
mov
and
aaa
inc
sub
mov
pop
sbb
cmp
sbb
js
inc
xchg
xchg
inc
push
add
jnp
rclb
push
mov
xchg
lods
inc
or
or
jnp
rcll
mov
mov
mov
in
sbb
rclb
pop
iret
cltd
pop
jns
cmpsl
call
in
movsb
xor
mull
dec
mov
test
sub
sbb
xchg
dec
and
xor
pop
cmpsl
xor
movsb
in
adc
scas
fidivs
xor
sbb
and
push
cmp
inc
push
stos
and
shlb
pop
xor
inc
push
adc
push
addb
sub
jmp
cs
repnz
rorb
inc
lret
sbb
clc
stc
xlat
push
adc
shll
lcall
mov
mov
sub
inc
jne
mov
add
mov
lea
sarl
mov
inc
sub
xchg
xor
inc
popf
test
mov
dec
inc
cmp
ret
add
loopne
add
add
shrb
add
jo
add
add
mov
add
add
pop
add
add
xor
pusha
incb
add
add
add
add
sbbb
add
add
dec
add
add
and
adc
add
add
inc
filds
add
mov
add
add
loopne
add
add
adc
add
rdtsc
jg
jg
int3
int3
int3
int3
int3
int3
int3
int3
int3
