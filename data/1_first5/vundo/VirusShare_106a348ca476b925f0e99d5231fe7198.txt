add
pop
xor
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
movzwl
xor
mov
inc
cmp
jl
cmp
jg
xor
push
push
push
push
pushl
call
push
call
test
je
orl
jmp
andl
push
push
push
mov
call
xor
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
and
ret
int3
int3
int3
int3
int3
mov
push
mov
cmpl
je
orl
jmp
andl
pop
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
push
push
mov
call
movl
movzwl
movl
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
testb
push
push
push
push
push
mov
push
je
push
jmp
push
pushl
call
push
call
mov
push
push
mov
push
push
pushl
call
push
push
push
push
pushl
call
andl
push
pop
mov
cmp
jb
mov
dec
jns
pushl
mov
push
push
push
jb
jne
insb
push
jb
je
arpl
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
push
pushl
call
mov
call
mov
push
push
push
pushl
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
pushl
pushl
push
push
call
add
pushl
call
cmpl
jb
mov
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
push
push
push
pushl
call
push
pop
pop
ret
push
mov
sub
push
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
push
pushl
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
mov
push
push
push
call
mov
call
push
push
push
mov
call
lea
push
push
push
call
add
mov
mov
push
push
push
call
push
push
push
push
push
pushl
call
pushl
call
push
push
pushl
pushl
pushl
call
push
push
push
push
push
call
pop
pop
jmp
lea
push
pushl
call
mov
lea
push
call
pop
push
lea
push
push
push
push
call
lea
push
pushl
call
jmp
push
call
xor
pop
leave
ret
push
mov
sub
mov
andl
andl
mov
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
andl
push
mov
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
sub
cmpl
mov
push
je
cmp
je
lea
push
push
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
test
jne
mov
not
mov
or
mov
lea
push
call
mov
pop
leave
ret
add
add
xor
int
popa
gs
add
add
add
add
add
add
add
add
add
and
add
outsl
inc
add
add
add
add
cmp
popl
sbb
filds
arpl
jae,pn
push
arpl
je
icebp
dec
add
outsb
jae
jb
inc
aaa
add
push
sbb
enter
mov
adc
mov
lea
inc
testb
cs
cmp
test
incl
adc
clc
add
pop
pop
push
adc
jge
out
mov
lea
decl
mov
gs
inc
rolb
jbe
cmpl
add
adc
xor
push
push
call
cmp
add
fs
push
cld
adc
mov
lea
add
adc
mov
clc
inc
roll
add
stc
clc
incl
cmp
add
add
push
lock
add
add
fiaddl
addb
add
add
movsl
stc
add
clc
add
add
push
imul
cmp
inc
gs
inc
add
arpl
outsl
lods
movsl
inc
inc
push
popa
add
inc
push
popa
gs
jne
add
add
gs
addr16
push
dec
jb
in
imul
arpl
add
add
add
xchg
addl
add
add
add
add
sbb
push
mov
push
adc
mov
mov
pop
popf
in
scas
mov
mov
mov
popf
sbb
mov
or
jne
pop
push
nop
into
mov
sti
xchg
movsb
dec
mov
pop
pop
xchg
shlb
outsb
into
orl
ret
or
dec
push
aas
aaa
push
sbb
out
xchg
testb
mov
addl
mov
jmp
rolb
fsubl
and
mov
loopne
fsubl
jae
push
ficoms
lahf
les
gs
cltd
cmp
adc
std
daa
pop
lea
gs
inc
popa
and
mov
out
push
jbe
inc
jmp
mov
sbb
cwtl
cmpsl
pushf
cmpsl
rclb
xlat
fnstsw
xor
pop
inc
aas
sbb
call
adc
add
xchg
xchg
repnz
xlat
cmp
popa
xorb
fbld
and
loopne
and
dec
xchg
cmp
fs
sbb
mov
and
sahf
pop
int3
jo
sbb
mov
rcl
mov
aas
xor
xchg
shll
movsl
popa
mov
iret
lea
aas
fsubrs
filds
enter
mov
and
jg
adc
pop
cld
jge
inc
xchg
ljmp
in
jle
add
lahf
jmp
cwtl
lea
xor
add
lcall
dec
push
repnz
sub
mov
inc
and
inc
insl
sbb
push
lds
xor
push
sbb
and
inc
aam
movsb
push
mov
outsb
cmp
pop
adc
icebp
inc
loopne
fmul
les
in
mov
shrl
xchg
push
xchg
mov
insl
fwait
hlt
mov
push
cmp
add
xchg
sti
jbe
bound
nop
and
cwtl
mov
add
lds
cmpsl
iret
pop
rcl
js
cmpsb
leave
jnp
inc
xor
dec
gs
mov
scas
add
test
rcr
inc
xchg
dec
cld
mov
ja
push
jbe
xchg
lds
fnstenv
mov
push
ss
sub
push
rorl
xchg
mov
jnp
stc
nop
es
nop
push
lcall
sbb
cmp
sahf
cmp
or
mov
or
or
dec
out
push
adc
test
faddl
jecxz
or
out
jae
push
in
sahf
pop
in
fadd
add
aam
iret
hlt
add
bound
sub
push
push
mov
cmp
xchg
and
cmpsb
jnp
insl
sar
sbb
sbb
pop
fdivrl
std
push
mov
jo
mov
not
js
sub
xor
pop
sub
pop
outsb
das
xor
jne
push
jp
hlt
stos
lds
outsb
sub
xchg
cmp
xchg
sbb
mov
imull
mov
lret
flds
xchg
sbb
inc
lret
out
xchg
les
xorb
scas
fcomps
ljmp
fprem
xchg
push
int3
and
stc
xor
repz
or
aaa
es
es
aaa
mov
out
inc
nop
adc
sbb
clc
xchg
sbb
dec
push
subl
pop
in
inc
adc
xor
lods
add
stos
add
aad
pop
push
stc
aad
inc
enter
pushf
push
push
push
loope
dec
insl
bound
pop
packssdw
fisubl
shr
mov
inc
pop
add
and
push
call
mov
mov
jnp
clc
or
jecxz
xor
mov
repnz
pop
jg
mov
push
int
mov
add
pop
pop
outsb
fwait
jb
sub
cli
mov
subl
shll
adc
jbe
stc
push
movsb
mov
push
adc
mov
xor
sub
mov
insb
mov
inc
movntps
jp
cmc
cld
mov
xlat
ljmp
in
cmp
cmp
arpl
iret
jb
mov
inc
imul
nop
mov
pusha
jcxz
add
or
lock
js
bound
shlb
fcmovne
movsl
lock
stc
xchg
jae
and
lret
stos
leave
dec
sub
xchg
add
cltd
mov
daa
mov
mov
cmp
test
pop
stos
mov
aaa
int3
rcll
fstps
cmp
js
xor
ret
inc
rorb
dec
push
sbb
testl
xor
psrad
das
ss
shrl
and
fiadds
jl
add
sbb
and
subb
cmp
push
ljmp
scas
xor
das
pop
cs
mov
and
stos
push
sub
fsubrl
mov
dec
add
movl
mov
imul
shll
nop
mov
xchg
aad
adc
lock
and
or
pop
cmp
push
mov
and
imul
divl
lds
inc
mov
out
pop
or
cltd
or
mov
imul
sbbb
jle
cwtl
test
add
pop
pop
or
fstpl
mov
iret
call
dec
insl
jl
mov
jecxz
pop
insb
int3
test
mov
mov
icebp
ret
dec
mov
or
call
sti
xchg
aad
in
or
adc
lahf
lcall
das
dec
test
cs
pusha
stos
aad
lret
jmp
sub
rcrl
mov
cmp
inc
dec
es
pop
mov
insb
fwait
add
loop
xor
cmp
jmp
add
push
sub
mov
jno
sbbl
pop
popa
shrl
sar
push
cmovp
insb
jo
xchg
cmp
lds
jmp
gs
push
inc
mov
ffree
and
fldenv
in
xchg
cltd
lcall
scas
xlat
ret
mov
outsl
or
jbe
sub
lcall
lret
icebp
jmp
dec
jg
mov
pop
subb
xchg
out
in
lods
js
pop
inc
mov
or
popa
add
xchg
repnz
xor
or
lcall
sti
out
pop
scas
jnp
jbe
rorb
mov
lock
xchg
loopne
jo
jl
sub
xchg
dec
outsl
stos
pusha
iret
mov
leave
xor
dec
inc
mov
and
pop
xor
push
push
xchg
in
jb
xchg
xor
gs
popf
and
mov
push
xchg
sub
gs
mov
lahf
xlat
sbb
roll
push
arpl
push
leave
lret
repnz
repz
and
adc
lods
mov
stos
pop
popa
dec
jno
mov
aaa
in
ret
jp
mov
dec
in
mov
loop
fwait
mov
je
lods
insb
lcall
ret
and
jbe
and
cmp
pop
mov
dec
shlb
cmp
mov
xchg
adc
gs
aaa
sub
mov
adc
scas
rorb
sti
dec
cwtl
and
lcall
mov
rcll
lock
aas
mov
cmp
sbb
das
or
in
mov
jge
fs
add
lahf
shrl
inc
adc
add
sub
mov
out
add
mov
fwait
nop
sbbl
insb
into
mov
push
mov
mov
aas
mov
insl
pop
inc
nop
test
mov
sub
pushf
ja
or
bound
inc
and
pusha
jmp
pop
or
inc
adc
imul
jp
xor
dec
mov
les
rcrl
jnp
lahf
pusha
mov
sbb
inc
sbb
inc
shl
arpl
xchg
insl
sub
mov
scas
jno
sbb
insl
out
pop
pop
and
pop
jns
scas
add
pushf
lods
out
sti
jge
andb
les
push
aam
popa
mov
sub
pop
pop
mov
test
lret
jg
js
repnz
mul
xor
mov
std
gs
ljmp
adc
mov
into
pop
add
pop
sbb
inc
lock
mov
das
shll
leave
mov
xchg
mov
stc
jle
fsincos
dec
test
pop
inc
or
xchg
sti
push
and
pop
fildll
aas
mov
and
sbb
test
xor
insb
inc
repnz
push
push
xchg
mov
jno
mov
jb
nop
dec
jl
movsb
add
mov
dec
nop
lret
arpl
movsl
xchg
jae
mov
arpl
icebp
mov
cwtl
ds
out
out
inc
cli
icebp
mov
cmp
int3
leave
aas
cmp
lock
icebp
cmovae
arpl
sbb
jbe
cld
xchg
lret
push
adc
notb
and
fwait
repnz
xchg
add
or
xchg
cmp
in
push
orl
out
cli
inc
mov
mov
scas
pop
out
out
les
jp
push
cmpsb
dec
cli
popa
or
enter
sbb
jecxz
dec
mov
cld
icebp
std
movsb
pushf
out
stos
ret
push
push
mov
int
mov
fcoml
cmpsl
fiaddl
adc
fs
mov
push
mov
fstps
in
push
jo
sti
ds
pop
push
or
sub
xchg
pop
fwait
lods
cmp
sbb
in
inc
ret
ficoml
aaa
gs
jnp
aaa
xchg
jmp
lcall
lret
aas
mov
fcomps
sbb
enter
xor
je
leave
fucom
adc
pop
xlat
inc
sbb
mov
cmp
scas
flds
push
cmp
add
cmpb
stos
adc
inc
aad
scas
repz
add
or
cli
fldt
cmpsb
lds
inc
mov
fnstcw
xchg
fcmovu
jae
pop
fldenv
cld
int3
mov
fwait
and
jg
out
js
inc
add
cmp
mov
mov
fiadds
sub
in
xchg
cld
push
pop
sbb
lcall
sub
imul
pop
and
pop
sti
mov
pop
inc
cmp
mov
adc
lahf
rcll
or
sbb
ss
and
test
and
orb
pop
jl
mov
or
test
clc
inc
or
cmc
mov
rcl
push
inc
pop
cmpsb
mov
xlat
or
scas
xor
mov
pusha
jl
jo
sbb
mov
mov
jg
inc
xor
xor
push
xor
jns
jp
gs
xor
dec
mov
ret
in
ss
mov
and
jns
sub
aam
into
lahf
xchg
sbb
cltd
ljmp
mov
adc
mov
stc
ds
mov
gs
icebp
ffreep
add
xor
add
mov
pop
jo
or
xor
sub
lods
sarb
fdivrl
stc
loopne
sbb
mov
cltd
loop
cmp
ss
bound
inc
mov
mov
daa
cmp
pop
ljmp
insb
lods
imul
push
popf
fldt
xor
outsl
inc
cmp
adc
jl
faddp
cltd
stos
addl
jmp
sub
xchg
in
divl
imul
fsts
lods
mov
int
add
mov
sbb
xchg
mov
or
push
lcall
outsb
cwtl
mov
cld
mov
out
insb
pusha
addr16
jae
in
dec
mov
fimull
imull
ret
adc
cmpsb
add
jo
cmpsb
test
add
scas
nop
xor
flds
jmp
xchg
test
and
cmp
cld
or
jmp
in
pop
fdivrl
jae
jno
loope
cmp
pop
arpl
insb
or
lret
cmpsb
cmp
jmp
mov
adc
push
mov
cltd
out
mov
push
add
add
push
test
ljmp
test
xor
addr16
scas
mov
mov
fcmovb
lds
lock
inc
jmp
in
xchg
cmp
adc
repz
xor
pop
sub
adc
push
xchg
not
test
ret
cmp
add
rcrl
xor
jb
ljmp
add
mov
xor
pushf
out
inc
loope
ljmpw
pop
xchg
ss
in
notl
jnp
out
jbe
inc
in
test
xor
insl
dec
filds
dec
cli
test
mov
ret
or
dec
adc
sub
loopne
xor
rcrb
xchg
dec
addl
psrad
shrb
dec
dec
in
push
mov
mov
mov
sub
inc
sub
xor
push
mov
xor
std
enter
dec
mov
push
mov
cmp
xchg
lret
pop
xchg
shrb
sbb
xchg
lcall
and
mov
and
cltd
mov
or
add
pop
rcrb
jne
mov
mov
into
shl
mov
pop
xor
fdivs
dec
jmp
shll
sbb
call
rcll
cld
pop
push
das
ljmp
dec
mov
sti
push
xchg
cmp
jp
daa
push
sub
nop
dec
loopne
ret
mov
enter
sti
orl
xor
cmc
and
or
into
mov
push
inc
stos
ds
insl
inc
lods
pop
insl
push
hlt
pop
sbb
push
and
xor
mov
aaa
mov
mov
mov
xor
add
adc
or
add
xor
clc
push
push
ret
adc
sub
push
mov
ja
loope
jle
push
jns
testb
popf
mov
add
and
out
insl
aaa
roll
cmp
dec
jmp
mov
inc
or
sub
movsl
insl
lods
rcrb
add
inc
mov
out
xchg
dec
cli
mov
mov
les
inc
fwait
fistl
or
mov
jge
adcb
pop
pop
cmp
sbb
mov
cld
cmp
push
pop
popf
xchg
mov
outsb
jns
sub
lahf
loop
mov
mov
in
scas
imull
xor
out
pop
test
in
arpl
popa
mov
xor
pop
adc
aaa
pop
push
mov
cmp
sbb
jne
jno
testl
rcrb
call
subl
js
adc
dec
rcr
lahf
jp
stc
loope
sbb
xor
jo
lahf
sub
stos
dec
lahf
lock
test
loopne
std
bound
fwait
dec
stos
addb
inc
sbb
int3
rol
aad
loope
mov
int3
cmpb
push
dec
scas
cwtl
fldcw
xor
sbb
push
aam
scas
arpl
mov
loope
sub
and
xor
or
cltd
dec
cli
cmp
sub
xor
add
dec
sbb
divb
jge
lret
gs
test
push
fidivrs
dec
test
imul
mov
push
fwait
enter
mov
jmp
xchg
or
es
cmp
xor
loopne
or
into
insb
jmp
mov
mov
pop
or
mov
inc
sub
dec
cld
mov
dec
fcoml
mov
sbb
mov
sahf
jp
cmp
mov
and
mov
pushf
or
push
lcall
mov
out
call
cld
mov
cltd
ss
xchg
out
sbb
sub
stos
roll
lret
ret
xor
adc
jle
add
sarl
clc
jmp
psubsb
sbb
aad
bnd
lret
pop
fiaddl
enter
stos
cmp
mov
jle
lea
stos
cs
jge
push
mov
cmc
dec
adc
insb
ss
fwait
sbb
test
std
es
add
leave
outsl
mov
or
sub
xchg
xor
daa
loop
shll
xchg
dec
add
lahf
xlat
fnstcw
xor
repz
sub
dec
xchg
fsubrl
push
dec
mov
adc
pop
mov
ljmp
ds
and
ljmp
mov
pop
mov
fldl2t
sub
xor
jge
nop
ret
and
push
insb
imul
iret
cmc
sbb
cmp
jae,pn
mov
pop
std
pop
outsl
hlt
xor
inc
rorb
mov
loopne
fisubs
test
push
insb
loope
test
ja
and
into
add
rcr
stos
sub
iret
fdivl
out
iret
mov
daa
lret
insb
daa
inc
andl
cmp
test
sti
add
pop
rcl
ja
xor
lock
into
cmp
test
add
adc
popf
cld
cmp
xchg
add
mov
or
pop
pop
in
sahf
repnz
xchg
dec
and
popf
lcall
mov
cmpl
test
add
mov
jne
leave
cltd
jp
push
push
int3
fnstenv
inc
scas
cli
cli
and
inc
jb
dec
dec
sahf
lods
fxch
arpl
xchg
xchg
and
enter
mov
mov
jno
mov
mov
je
cmp
repnz
repnz
sub
inc
in
es
adc
dec
mov
pop
pop
adc
cs
inc
rcl
jecxz
stos
mov
add
dec
lock
test
idiv
out
popa
movsb
ret
in
mov
in
lahf
int
push
data16
adcb
push
lea
sub
dec
enter
movsb
repz
and
dec
mov
adcl
xchg
bound
rclb
xchg
mov
jae
inc
arpl
or
dec
lcall
insl
mov
aad
or
xor
adc
stos
rcl
ficoms
mov
sahf
fiadds
xor
push
popa
cltd
mov
rorb
jnp
lods
adc
dec
or
shll
mov
mov
sbb
mov
idivl
mov
std
lods
aad
pop
mov
xor
xchg
aaa
pop
mov
dec
jnp
mov
call
leave
mov
mov
mov
movsb
stos
push
imul
out
out
mov
jecxz
lahf
lea
subl
test
mov
fs
fwait
clc
mov
shll
jo
testl
pushf
das
repnz
sbb
jno
cmpsl
add
nop
push
inc
scas
xchg
and
inc
adc
ss
mov
lahf
sti
arpl
lret
sbb
mov
rclb
cmp
imul
mov
shll
pusha
dec
and
push
in
push
xchg
ret
andl
dec
sub
test
test
ret
cltd
ljmp
popf
cmp
rclb
mov
decb
aaa
in
cli
into
jne
fdivrl
icebp
bound
cmp
pop
pop
xor
mov
inc
in
dec
mov
imul
adc
ret
lock
jnp
xorb
mov
loope
jb
pmulhw
scas
jnp
pop
sub
insl
sbb
push
gs
stc
inc
cmpsl
daa
test
jbe
shll
dec
add
rol
mov
mov
cltd
xchg
pop
dec
pop
xor
sti
sub
mov
and
mov
ljmp
sbb
mov
xchg
lock
xchg
jns
push
nop
int3
pop
testb
jo
and
ror
shl
andb
pop
jo
lret
pop
pushf
pusha
ljmp
loopne
cmpsl
enter
sub
or
jl
fimuls
adc
xchg
jbe
adc
cmp
addl
pop
mov
xchg
outsl
in
inc
leave
mov
out
mov
adc
insb
pop
icebp
lret
push
sahf
mov
imul
mov
fsubrs
fimuls
xchg
mov
jno
mov
sbb
sbb
loope
inc
mov
mov
in
das
lcall
roll
subb
xor
js
sub
aaa
in
test
negl
fs
movl
hlt
mov
imul
mov
mov
es
and
or
dec
insb
std
or
pop
sbb
and
call
stc
aas
repnz
pusha
jb
dec
stos
and
dec
lock
mov
jg
push
into
out
mov
clc
dec
nop
in
testb
lret
test
cmpsb
mov
inc
cmp
push
in
fisubs
sti
jecxz
push
out
int3
out
inc
es
loope
sbb
sbb
leave
add
ffree
lret
aaa
cmpl
jns
adc
cmpsb
pop
inc
sbb
xchg
loop
or
jle
rcrl
lahf
daa
xor
adc
cs
repz
cmp
mov
mov
add
jo
dec
and
dec
cmp
aas
and
aaa
and
pop
mov
and
jl
sub
xor
orb
insb
test
xor
add
dec
add
add
add
add
and
add
add
add
add
add
add
ja
mov
lcall
push
dec
add
add
push
insl
add
add
add
add
add
add
add
add
pop
add
in
add
add
jmp
add
inc
add
inc
add
jns
add
sub
clc
add
test
add
popa
add
int3
pop
outsl
ja
jae
inc
add
pop
clc
outsl
ja
mov
inc
cli
add
add
sahf
add
andnps
mov
xor
or
push
cmpb
mov
mov
test
call
jmp
test
in
adcl
adc
testl
in
inc
std
jmp
inc
std
incl
shl
xor
jge
push
add
add
add
popl
decl
fistl
adc
ljmp
adc
loopne
incl
adcl
cld
push
push
ret
incl
shl
add
pushl
test
or
lea
lea
jne
add
adc
add
adc
adc
add
insb
add
add
add
leave
xchg
add
add
add
push
add
imul
outsb
imul
lea
gs
je
andl
je
inc
inc
pushf
add
or
popa
fs
ja
add
js
jne
popa
insb
outsl
jae
imul
push
jb
xor
push
add
add
sub
add
add
add
add
add
add
faddl
add
add
add
add
dec
add
add
add
dec
les
mov
inc
dec
int3
and
fwait
rclb
jl
or
mov
dec
negl
cmp
fsubrl
addb
rcl
loop
jb
std
and
shl
dec
daa
imul
jno
pop
push
iret
mov
inc
repnz
fwait
enter
or
addb
pusha
push
enter
jnp
or
sub
movsb
cltd
popf
push
push
mov
fldcw
daa
push
test
sbb
sub
in
daa
jge
dec
push
fsts
movsb
dec
and
mov
mov
sbb
jg
xor
repnz
mov
out
push
adc
xor
jno
xor
push
icebp
xor
int
shl
lret
inc
mov
lock
in
int
pop
mov
mov
dec
incl
jge
cmp
fildl
jl
out
clc
clc
call
jb
pop
xor
pop
sub
pop
or
ret
js
imul
mov
fimull
sub
cmpsb
dec
int3
mov
add
add
ret
xchg
es
in
push
movntq
out
xchg
cwtl
aad
inc
int
mov
xor
jge
pop
out
xchg
aam
mov
sbb
mov
jp
push
flds
dec
lret
pop
loope
inc
fisttps
push
mov
addr16
sub
xchg
test
sub
ret
or
repnz
repnz
decl
or
or
and
sbbb
out
pushf
push
cmpsb
mov
or
out
inc
mov
inc
mov
sbb
clc
and
and
add
clc
sbb
mov
sbb
addr16
ljmp
adc
iret
in
and
lret
insb
imulb
jle
add
adc
add
scas
scas
negb
push
sahf
jg
rcll
rcrb
cmpsl
xchg
imul
idivl
repnz
push
ljmp
sbb
outsb
in
mov
push
and
repz
jbe
cltd
add
clc
and
gs
sbb
cmpsb
repnz
int
lret
mov
jae
push
jo
dec
int3
rorb
shll
inc
xchg
push
popa
or
int
pushf
popa
in
insb
daa
adc
jb
xlat
pop
add
cli
or
pop
lahf
adc
mov
mov
mov
xlat
xor
out
loope
sub
es
orl
mov
push
xchg
pop
and
add
lret
add
test
roll
mov
sub
push
and
nop
dec
push
pop
mov
jae
inc
push
sbb
nop
adc
push
iret
femms
add
into
pop
loope
dec
popa
inc
xor
fwait
into
sbb
add
movaps
or
daa
fsubs
adc
sbb
cmp
jo
mov
xchg
inc
test
xor
mov
ja
es
mov
cmpsl
add
data16
fs
xor
adc
jnp
je
inc
pop
pop
xor
cmc
lahf
repnz
adcb
xlat
cmc
jmp
notb
js
add
xor
bsr
sbb
iret
gs
push
or
sub
mov
push
or
sbb
sarb
xorl
out
mov
mov
mov
push
sub
clc
das
sub
ror
cld
imul
push
push
loope
repz
adc
movsl
aam
inc
xor
adc
into
outsl
movsl
adc
iret
add
mov
cld
rol
cltd
inc
aaa
scas
sbb
sub
xor
mov
push
pop
inc
clc
add
imul
ja
pop
xlat
pop
xchg
cwtl
stos
scas
sub
mull
call
jge
push
andl
cmp
xchg
js
stos
popf
jecxz
or
cmp
arpl
out
testl
mov
mov
mov
mov
pop
subl
push
insl
mov
lods
es
sahf
mov
adc
imul
cmpsl
push
sbb
popf
jp
pop
pop
inc
add
outsl
out
jle
inc
test
xor
xchg
test
mov
inc
add
mov
gs
dec
mov
jl
xchg
cmc
fiadds
cmp
aam
pop
out
add
xchg
mov
or
sub
mov
pop
incb
stos
out
shll
pop
clc
xchg
add
inc
divb
xchg
xchg
inc
in
lret
in
mov
cltd
jno
les
out
xchg
cld
sbb
push
adc
out
adc
dec
in
loop
inc
sahf
leave
in
flds
rcll
aad
in
pop
jbe
jmp
std
mov
mov
ret
jns
or
jge
mov
jbe
fwait
mov
jle
mov
sarb
mov
std
movsl
and
xchg
jnp
lods
rcll
add
int
and
cmpb
xchg
int
shl
cld
xchg
push
push
mov
mov
sbb
jne
adc
xlat
fsubrl
movsl
testb
add
and
repz
repnz
dec
incb
push
sbb
xor
scas
jb
inc
out
jecxz
test
lahf
xor
in
ljmp
lret
sub
daa
pop
sbb
mov
lods
xchg
enter
pushf
popa
lods
inc
sbb
push
push
dec
adc
sarl
icebp
sbb
xor
lcall
xlat
or
dec
icebp
adc
jb
aas
xchg
xchg
adc
enter
insl
in
test
enter
ja
popl
sub
leave
jecxz
in
or
scas
dec
fildl
lea
inc
shll
fiaddl
inc
out
inc
and
lret
loope
call
add
lret
mov
push
es
stos
outsl
jbe
xor
mov
or
sbb
aad
add
cwtl
stc
jne
add
pop
outsl
and
lock
cli
inc
mov
pop
lock
popf
aad
mov
inc
cs
repnz
or
push
push
shl
xchg
sub
mov
inc
addr16
mov
das
jo
icebp
pop
ret
adc
loop
xor
outsb
xor
aad
ret
add
xor
jnp
push
sahf
xchg
stos
sti
clc
adc
xor
cmp
push
subb
push
cmc
dec
sub
pop
pop
inc
add
xchg
cwtl
jmp
fwait
pushl
addb
sbb
test
push
jge
movsl
sub
and
cmpsl
ret
out
int3
inc
inc
pusha
dec
dec
pmaddwd
add
scas
cli
jne
jo
jle
xor
pop
iret
enter
cli
sbb
aam
and
cmp
and
fdivl
jbe
jmp
pop
mov
pop
xchg
das
push
push
jmp
fstp
jmp
lods
sbb
jne
lcall
jo
ja
in
aaa
lcall
xchg
in
iret
subl
pop
sbb
mov
mov
int3
jp
pop
inc
push
sahf
mov
enter
mov
fstps
repz
loope
lcall
xchg
mov
sti
inc
stc
cs
test
out
pop
mov
sbb
test
stc
call
xchg
fs
jne
mov
idivl
cld
out
adc
or
and
jecxz
push
dec
jbe
sub
nop
je
lea
loop
lods
cmp
insl
push
or
cmp
lret
movsl
inc
in
cmp
movsb
xlat
push
std
scas
and
or
pushf
xchg
jno
pop
test
xor
push
cmp
cmpb
cmp
adcl
xchg
adcb
inc
push
pop
out
lret
xor
sub
fbstp
adc
std
cs
xchg
mov
popf
jae
js
lock
addb
dec
inc
xchg
and
in
cmp
mov
popw
pop
rorl
dec
sti
sbb
ret
sub
or
vsubps
jnp
call
test
ret
add
pop
ret
xchg
pusha
dec
xlat
xchg
push
dec
in
bound
mov
aas
or
fwait
repnz
push
outsb
sbb
mov
pop
mov
pop
sub
cmpsl
insb
mov
sub
lods
ficompl
js
cmpsb
dec
push
popf
lcall
cmp
pop
test
dec
jne
sti
leave
mov
lahf
call
cli
ret
dec
hlt
fucomp
aad
adc
push
add
sbb
mov
dec
dec
lods
sbb
in
cmpsl
lret
addb
push
inc
dec
adc
int3
pop
fidivrl
popf
inc
imul
out
mov
stos
cltd
testb
xchg
push
shr
xchg
div
clc
inc
add
xchg
inc
clc
test
or
ljmp
rcrl
mov
pop
shll
jmp
push
and
insl
cwtl
and
adc
push
gs
mov
lret
ds
inc
fidivs
sbb
push
sbb
fidivrs
into
adc
aad
jnp
ret
cmp
add
stc
mov
repz
jns
arpl
mov
sahf
mov
ja
arpl
scas
bound
fwait
adc
scas
aam
lods
out
cmc
inc
and
mov
xor
call
or
mov
push
sarl
push
xor
xchg
clc
lods
mov
cwtl
aas
out
jo
inc
in
xor
rcrl
xorl
jmp
test
int3
mov
jae
js
or
push
sbb
inc
mov
arpl
lods
pmulhw
std
mov
data16
push
scas
scas
nop
test
dec
adc
dec
mov
adc
xchg
inc
xor
imul
fwait
cltd
es
mov
sbb
or
mov
sub
sbb
and
icebp
addl
or
sub
cmp
pop
pop
pop
rcrl
ljmp
mov
test
shl
push
rorb
xchg
test
add
dec
sahf
jl
js
loopne
xor
inc
push
add
push
sub
in
and
gs
fbstp
xchg
push
les
ljmp
xchg
int3
pop
lret
jns
stc
push
mov
add
test
hlt
fidivs
jmp
mov
stos
mov
push
cmp
dec
pop
out
inc
cmc
mov
jbe
imul
out
push
jl
push
add
sbb
adc
inc
and
ret
dec
jp
mov
shl
fwait
xchg
mov
push
andl
scas
dec
je
insb
clc
fisubs
ss
sti
xchg
adc
pop
shrl
push
outsl
pop
and
lds
pop
es
sub
sahf
and
adc
es
or
sub
ret
into
sbb
loopne
iret
cmc
nop
loop
jno
push
faddl
and
stc
cmp
fwait
les
stos
mov
leave
or
dec
lcall
bnd
int3
adc
ret
leave
pop
cmp
xchg
loopne
andl
stos
push
sub
jg
or
fdivrs
adc
lret
adc
jmp
fsubs
xchg
mov
pushf
shrl
stc
out
xor
jecxz
insb
notl
mov
je
insl
pop
data16
fstl
movsl
add
cltd
jle
cmpsb
mov
pop
push
rcr
scas
or
pop
insb
pop
mov
mov
xor
data16
pop
lods
outsb
addb
movsb
jge
scas
sub
push
sbbl
fadd
rclb
mov
mov
sub
xchg
sbb
xchg
lock
in
loope
pop
jle
fwait
dec
mov
sbb
jns
in
scas
jge
cmp
fidivrl
push
pop
pop
ret
out
movsl
adc
in
cmp
fadd
movsl
cmp
inc
jmp
cmp
mov
test
lods
lock
fcomp
mov
adc
cmp
push
icebp
jne
adc
out
fdivrp
sub
or
fnsave
daa
pop
pop
rcl
mov
mov
cli
mov
rorb
fmuls
or
ja
and
repnz
adc
mov
inc
cs
testb
ljmp
push
mov
xor
cmovs
xchg
dec
mov
aas
cltd
push
push
stc
cwtl
out
fnsave
je
cld
arpl
pop
jecxz
jns
adc
sub
pusha
out
sub
dec
outsb
add
mov
fldl
sub
js
aaa
sub
testl
dec
cmp
ret
mov
frstor
mov
jne
mov
dec
xchg
jl
mov
in
fnsave
sahf
adc
inc
inc
xor
dec
sbb
fs
cmp
sbb
out
mov
add
push
cmp
push
cltd
xor
sbb
jp
out
adc
sahf
int3
xlat
cld
bound
bound
inc
mov
sbb
push
inc
jnp
dec
mov
jns
rcr
fistpl
dec
aad
ret
daa
mov
adc
into
pop
ss
loope
cltd
aas
aam
jb
jns
in
test
adc
and
dec
pop
test
inc
dec
or
test
add
sahf
add
pop
in
xor
xchg
cmp
clc
sub
ss
fmuls
xor
stos
mov
out
daa
push
mov
push
cld
lahf
mov
movsb
inc
or
mov
cwtl
loopne
sbb
xchg
pop
ljmp
inc
cmpsl
sbb
add
lock
or
testb
es
in
cli
jbe
push
dec
cmp
add
push
cmp
push
cld
mov
mov
or
adcb
xchg
je
sub
shlb
jle
or
mov
cld
inc
add
int
sub
sarb
fcmovnb
loopne
clc
adc
popa
push
or
sbb
icebp
add
call
pop
mov
pop
or
jo
mov
or
call
adc
push
dec
cmpsl
adc
outsl
mov
clc
inc
test
out
sbb
xor
bound
mov
jle
cltd
popf
invd
jmp
pop
push
fimull
push
in
or
out
push
inc
cmp
aam
outsl
ljmp
es
xchg
xor
xlat
lock
pop
rcr
ss
dec
push
enter
cmp
sahf
push
dec
enter
cwtl
out
cmp
fwait
xchg
jo
mov
jne
sbb
out
sbb
popa
sti
outsb
stos
cmc
mov
cmp
pop
shlb
add
push
xchg
mov
cmp
adc
mov
test
mov
fisubs
sbb
sbb
and
dec
jo
xor
arpl
movsb
in
xor
xchg
fidivl
shrb
add
js
fbld
sti
stos
inc
add
cwtl
lds
xchg
add
lock
fcmovne
sbb
pop
xchg
jo
das
out
data16
stos
add
mov
pusha
sub
pop
lret
cld
pop
dec
sbb
idivl
test
std
jge
fs
cmpps
ret
inc
aaa
test
cmp
xor
pop
add
dec
imul
pop
sbb
mov
roll
icebp
sbb
sarl
push
jae
leave
cmpsl
subl
int3
mov
fsub
push
pop
xor
xchg
mov
sub
xchg
aam
push
and
ja
and
rcll
push
xchg
adc
xor
mov
pop
inc
mov
adc
xor
mov
jmp
clc
stos
mov
aad
cwtl
test
mov
dec
jg
jb
sub
cwtl
es
lds
popf
mov
sbb
mov
jle
xchg
outsl
ret
loop
fildll
dec
lods
je
sub
push
loop
sbb
mov
sarb
je
push
cli
mov
mov
leave
addl
dec
outsb
fsubrl
test
insb
leave
enter
aas
arpl
sub
mov
sbb
pusha
loope
cld
mov
cmp
hlt
sbb
mov
push
arpl
add
dec
divb
ret
sub
out
leave
and
fisttpl
jmp
rcrb
imul
dec
clc
cmovno
sahf
mov
scas
mov
sbb
cmp
test
movsl
add
decl
lret
sub
mov
push
mov
daa
jmp
cltd
ret
scas
aaa
sti
in
cmp
dec
repnz
fisubrs
dec
cmp
in
sti
xchg
adc
pop
test
mov
into
in
mov
daa
into
movsl
or
fcoml
or
clc
add
and
dec
inc
enter
sub
push
pop
adc
cld
cld
or
xor
lds
push
jo
shll
or
mov
mov
or
mov
loope
iret
mov
xchg
add
sub
in
arpl
out
xor
cmc
lcall
es
in
sub
cmp
fucomip
xchg
jp
fldl
sub
and
sub
xor
push
pop
shr
push
cwtl
and
aas
push
fistpl
js
ret
repnz
popf
sbb
push
xchg
cmpsl
repnz
loopne
sbb
xchg
int
and
sub
cltd
mov
andb
mov
cmc
pop
ret
sub
inc
mov
mov
mov
es
inc
sbb
mov
or
test
pop
fs
call
dec
movsl
xchg
jne
push
in
sbb
sub
mov
inc
test
mov
or
mov
outsl
inc
es
movsl
inc
int
jmp
sub
imul
push
adc
stos
xorb
inc
std
in
jns
pop
pop
xchg
jle
cmp
std
mov
dec
jno
test
dec
in
or
out
add
call
sub
test
je
dec
out
nop
xchg
aad
jbe
jl
dec
mov
fcmovu
test
xchg
adc
pop
pop
jb
call
shll
vcvtdq2ps
mov
or
std
push
ret
insl
enter
xor
sub
neg
scas
add
lahf
adc
imul
pop
xchg
jne
and
aas
dec
cs
sub
out
ja
pop
mov
ficompl
jnp
xchg
add
push
jne
fstpt
or
or
fsubl
dec
xchg
jmp
adc
iret
les
cs
inc
sbb
cmpsb
nop
and
xor
cwtl
jecxz
nop
push
mov
add
idivb
add
adc
mov
xlat
xchg
mov
or
cmp
flds
inc
add
sub
xchg
out
push
jb
xchg
push
test
cmp
mov
xchg
dec
push
jecxz
add
punpcklwd
cmpb
ja
imul
movsl
xor
inc
fists
xor
movsb
pop
and
repz
sbb
mov
dec
or
std
fs
push
lds
aas
add
adcl
cltd
fistpl
sub
inc
adc
lret
inc
pop
or
pop
push
aas
arpl
je
out
mov
and
jno
outsb
in
adc
mov
or
jnp
xlat
add
sub
xchg
jne
xorb
iret
mov
cld
incl
imul
jmp
jbe
lods
nop
xor
pop
int
dec
movsl
dec
in
fisubs
gs
sub
fwait
mov
mov
rclb
push
ss
push
mov
shl
mov
xor
cmp
pushf
je
cmp
or
data16
mov
gs
cld
les
mov
mov
jb
add
fdivr
pop
das
or
mov
sub
outsl
aaa
imul
aam
jnp
xchg
loop
test
jbe
dec
xor
jmp
cmp
bound
arpl
arpl
loopne
push
sbb
nop
cmp
add
into
sub
inc
cli
add
pushf
outsb
push
daa
std
movsb
loope
lock
out
shr
xor
push
je
lods
jmp
dec
in
xchg
pop
in
lret
mov
imul
andl
mov
or
mov
dec
xchg
lds
cmp
mov
les
jp
sti
lock
jge
push
mov
mov
ja
mov
cmpsb
push
cli
imul
or
out
int3
mov
sbb
jecxz
lret
mov
in
loope
ss
in
mov
or
ds
test
js
dec
stos
js
mov
faddl
movsb
scas
pop
mov
mov
lds
in
or
adc
and
pop
gs
jge
faddl
dec
mov
arpl
push
mov
xchg
in
scas
std
leave
incl
fmull
in
lret
sbb
dec
or
xchg
jnp
lods
push
sarl
add
aas
je
jmp
and
cmp
sti
dec
jge
xchg
in
insb
hlt
outsb
or
cmp
and
movsb
sbb
outsb
push
aam
aad
stos
cld
add
inc
fsubrl
mov
dec
fldz
mov
scas
clc
pop
jno
jnp
xor
aas
jno
mov
cmc
fdivrl
mov
push
xchg
inc
std
pop
in
mov
xor
jo
add
divl
pop
cmp
cld
push
push
lahf
repnz
xchg
jns
loope
gs
inc
dec
inc
mov
add
add
sub
add
add
add
mov
add
add
add
int3
add
add
add
leave
add
jl
add
add
add
adc
add
add
in
add
add
or
add
add
sbb
add
xor
test
sub
mov
sub
add
add
add
stos
stos
add
ja
add
incl
incl
add
add
add
and
and
jmp
add
or
adc
add
add
add
adc
add
add
popa
and
add
add
add
add
mov
mov
pusha
sbb
sbb
sbb
cmp
sub
jb
push
push
pop
add
dec
imul
xor
sahf
sub
inc
mov
mov
lea
jmp
ja
cld
add
in
pop
cld
inc
orb
push
jno
mov
xorb
cld
add
test
add
es
incl
jne
push
fs
push
inc
add
je
in
sub
mov
inc
add
cmp
fcoml
mov
add
xor
and
sar
add
add
call
incl
mov
push
cmp
dec
cld
and
add
lea
add
add
decl
popf
loopne
add
lret
cmp
cmp
adc
adc
push
jne
test
adc
push
pop
add
add
in
js
add
sub
sbb
xor
dec
sbb
pop
xor
add
jb
je
js
outsl
push
outsb
outsb
je
add
imul
outsl
jb
outsb
push
imul
add
jae
xor
fs
insb
addr16
popa
add
jns
outsl
outsl
imul
popa
popa
push
jne
mov
add
add
dec
fwait
sti
or
add
adc
cmp
adc
popa
lret
xchg
xor
daa
cmp
jle
mov
lock
mov
jl
out
xor
mov
cmp
cmp
pop
addl
mov
loop
pushf
sbb
jns
xor
mov
inc
cmp
cli
in
mov
shr
and
pusha
arpl
adc
stos
arpl
or
lcall
es
sbb
hlt
push
jle,pt
imul
pop
sti
dec
icebp
mov
ja
dec
test
fs
jg
popa
scas
sub
fdivr
je
es
dec
test
or
push
out
cmp
mov
mov
icebp
pop
jmp
jle
mov
mov
leave
jne
lock
dec
jge
lods
xor
cs
repz
pop
into
sbb
aaa
bound
sahf
enter
push
push
xchg
sub
ret
lret
push
lea
adc
scas
jb
fnstsw
aas
jnp
mov
push
lds
mov
int3
xchg
push
push
imul
in
pop
add
bound
hlt
and
sub
test
xchg
adc
fsubs
cmpsb
aad
add
test
sub
idivb
jecxz
gs
sub
stos
adc
leave
aam
les
sahf
lods
dec
push
xchg
and
fistpll
push
inc
adc
add
out
mov
inc
push
lods
push
or
add
jb
cmpsl
xchg
lret
fisubrs
loopne
bound
mov
stc
testl
hlt
push
rcll
pop
mov
arpl
lcall
orl
dec
jmp
sub
inc
dec
push
inc
add
repnz
mov
popa
in
or
pop
push
mov
xor
js
pop
mov
loopne
sbb
ret
mov
jo
adc
std
add
push
iret
mov
jo
inc
pop
dec
test
lods
cmp
cld
push
stos
rcrw
in
out
cmp
pop
jl
outsb
push
pop
pushf
stc
mov
mov
and
outsl
test
es
fdivrs
aad
subb
mov
jno
mov
pop
cmp
add
inc
xor
testl
or
cs
sti
push
push
mov
pop
andl
in
mov
out
loope
fs
push
incb
push
pop
mov
lods
jmp
mov
push
ljmp
push
scas
add
pop
cmp
loop
fnsave
pop
adc
fisubl
fst
dec
and
pusha
jecxz
dec
rorb
scas
lcall
push
lods
xchg
aam
jmp
xor
pushf
cli
push
jo
add
leave
std
inc
or
add
xchg
inc
mov
cwtl
ret
mov
push
xchg
sbbl
push
loopne
mov
mov
mov
push
sbb
aaa
jp
lret
fwait
push
jbe
ljmp
add
dec
cmpsl
or
cmp
or
sbb
scas
jb
xchg
xchg
lahf
jp
arpl
mov
xchg
js
add
popa
fst
cmp
cmpsb
mov
lret
sbb
mov
sbb
pop
lea
pop
mov
adc
loopne
aam
jmp
mov
cld
mov
mov
pop
push
mov
nop
sahf
fisubrs
lea
mov
mov
mov
push
je
cmp
add
mov
xchg
mov
xchg
movsl
fistps
jo
subb
aaa
roll
movsl
loope
jecxz
push
fsubrl
pusha
adc
scas
pop
cmc
push
push
popf
insb
ds
jecxz
lods
push
mov
adc
test
inc
int
adc
xchg
adc
mov
mov
jns
sbb
dec
sarl
jecxz
out
in
cmp
and
jne
repnz
in
ds
fistl
xor
ljmp
dec
fwait
lds
cltd
lock
ljmp
sub
sbb
scas
popa
out
loop
lds
repnz
insl
or
or
jns
pop
jb,pt
outsl
testl
bound
out
pop
mov
push
lret
or
sub
adc
ret
cmp
pop
filds
scas
pusha
loope
cmp
sbb
adc
lret
pushf
popf
ja
fs
adc
inc
mov
sbb
nop
sub
iret
cwtl
dec
fsubrs
xchg
bound
js
aas
enter
mov
mov
stos
sbbb
insb
adc
movsb
js
jecxz
aaa
dec
xor
movsb
fnstsw
and
negl
pop
ds
sahf
xchg
inc
fadd
add
inc
loopne
sbb
arpl
iret
in
imull
mov
pop
mov
pop
cmpsl
jp
out
movb
shlb
add
jbe
or
dec
movsl
fs
push
add
add
insl
sub
push
and
or
push
mov
dec
mov
cmp
jno
jle
xchg
xchg
lods
movsl
mov
mov
out
inc
popa
cmpsl
subl
gs
mov
pusha
dec
pop
pop
icebp
push
add
ljmp
xor
fwait
add
and
mov
jl
inc
or
cs
in
test
cmpsb
repnz
or
out
xchg
push
lret
arpl
in
in
repnz
jge
inc
xor
add
pop
push
sbb
or
push
cli
ret
stos
sahf
or
cmp
scas
ljmp
adc
dec
xor
jb,pt
xchg
push
jno
add
xchg
dec
jl
outsb
xlat
jns
pop
push
std
rcrb
mov
jle
lods
shll
jns
jo
mov
dec
pop
and
loope
pusha
into
test
mov
fisubrs
mov
leave
into
and
aad
lret
and
pop
insb
pop
xchg
jl
jl
hlt
ss
jno
scas
pop
addr16
xchg
mov
ja
filds
jae
xchg
dec
sub
pop
adc
mov
andl
push
scas
scas
jge
jl
and
push
repnz
push
gs
aam
loope
dec
sbb
mov
std
fmuls
add
xor
in
fwait
and
inc
ds
mov
aaa
cmp
add
scas
in
jmp
jecxz
je
testb
mov
fbstp
adc
jo
sbb
mov
iret
fdivs
into
mov
adc
or
adc
pop
dec
xchg
sub
xor
repnz
jns
lea
enter
jge
pop
jg
je
fidivrl
std
sbb
or
pop
loop
call
and
cmp
and
sbb
dec
cmp
ror
loop
test
inc
adc
mov
das
add
test
pop
adc
xor
add
cmpsl
jo
pop
sub
dec
and
jb
xchg
ret
push
sub
push
xchg
dec
pop
mov
in
data16
jmp
subl
addr16
outsl
pop
mov
adc
add
add
out
jb
adc
les
jg
mov
xor
fs
fidivrs
adc
pop
pop
aad
loopne
mov
push
mov
mov
popf
mov
adcb
rclb
dec
int3
sub
ja
push
cmpsl
pushf
test
sub
mov
push
push
and
std
insb
xor
jecxz
jno
add
movsl
adc
adc
in
gs
in
add
sbb
mov
repz
pop
and
js
xchg
mov
xorb
aaa
popf
sub
mov
dec
mov
rolb
int3
inc
inc
or
rcll
or
ljmp
movsl
dec
pop
cmp
mov
mov
xchg
jb
in
stos
lcall
inc
mov
outsl
jle
jmp
cmp
jmp
pop
pop
imul
xor
xor
adc
enter
push
rcrb
jne
mov
xchg
scas
cmp
out
pushf
loopne
bound
test
cmp
in
into
in
mov
repnz
arpl
cld
add
loope
jne
add
cmp
and
loopne
add
out
ffreep
in
test
mov
xchg
and
out
loop
xchg
call
sub
jmp
sbb
insl
mov
fs
lds
jge
lcall
and
scas
add
ds
push
sarl
mov
cmp
mov
jecxz
gs
mov
adc
and
or
sub
leave
dec
adc
xchg
ss
insb
inc
je
lcall
outsb
aam
stc
adc
adc
cmp
or
xor
mov
adc
jae
mov
jb
mov
fwait
inc
pop
addr16
dec
icebp
das
jbe
jnp
xor
je
cmpb
mov
ljmp
xor
data16
push
dec
idiv
mov
push
mov
mov
repz
fwait
insb
vorps
mov
fsubl
mov
mov
xor
add
and
adc
mov
pop
in
xchg
cmp
stc
or
inc
mov
push
movsl
cmp
cltd
inc
sbb
lock
xor
movsl
xor
insb
rclb
loop
mov
daa
inc
or
cld
outsl
mov
icebp
push
xor
insl
sbb
test
data16
pop
paddsb
enter
push
xchg
inc
add
fnsave
xor
es
fabs
cmp
jnp
out
cmpsb
scas
fimuls
jno
sbb
test
gs
jge,pn
lds
mov
xchg
xor
fisubs
adc
add
mov
pop
mov
mov
pushf
sub
dec
out
test
sbb
in
pop
pusha
sahf
mov
jmp
sahf
cmpb
sbb
cwtl
adc
inc
dec
cmpsb
addl
jae
add
cs
lock
pop
das
sub
pushf
or
dec
jp
xchg
test
nop
or
adc
leave
dec
into
xor
sub
cmp
lods
mov
pop
push
dec
hlt
insb
and
mov
adc
cmp
xchg
lea
dec
push
push
push
cs
nop
push
add
shlb
mov
loop
ds
roll
cmp
sbb
fs
push
dec
push
mov
repnz
push
cld
stos
lea
push
dec
clc
call
daa
inc
pop
mov
mov
stos
push
or
rdrand
jb
mov
xchg
pop
add
xchg
pop
push
inc
pop
inc
mov
jae,pt
xor
movsb
mov
sub
jle
push
je
adcb
push
adc
psllq
in
je
inc
lret
or
mov
test
sbb
mov
mov
xchg
mov
pop
cli
mov
push
mov
leave
out
or
xchg
mov
insb
push
das
jne
xchg
fsubs
add
sub
sbb
jecxz
xacquire
cmc
pop
clc
mov
inc
mov
or
dec
mov
adc
es
inc
sbb
jg
or
es
push
test
adc
fildl
lret
cmc
loop
jo
into
adc
aas
xchg
call
mov
jnp
cli
jp
push
mov
mov
insb
lea
subb
dec
imul
mul
jne
cmp
loopne
dec
cmpb
dec
test
push
cli
outsl
dec
and
loope
pop
xchg
iret
fs
adc
sbb
jl
jge
das
insl
mov
jns
lock
shlb
mov
movsb
mov
mov
mov
pop
xchg
dec
xor
push
sbb
adc
repz
inc
cs
in
xor
push
mov
aam
and
add
push
mov
xlat
adc
xor
rep
pop
adc
into
xchg
cmc
les
xlat
mov
or
pop
movsb
mov
call
sub
fs
mov
xor
inc
stc
mov
xor
outsl
dec
push
data16
sti
les
aam
mov
mov
push
rcl
sbbb
sbb
iret
sbb
or
aad
jmp
outsb
adc
sub
push
rorl
lahf
mov
iret
loope
inc
test
fists
sub
lds
rcrb
cmpsl
outsb
fbld
push
or
loop
lock
lret
mov
add
movsl
jle
and
mov
popa
pop
out
subb
js
jns
testb
sahf
popa
int3
lea
inc
and
fs
push
imul
negl
loope
insl
xor
imul
rcl
mov
push
lods
ret
fwait
sub
jle
fimuls
xchg
in
test
xor
push
and
mov
loop
orl
lds
mov
lcall
sub
cmp
mov
dec
mov
fwait
out
mov
outsl
xchg
jae
outsl
mov
cli
js
sti
jb
movsl
addr16
cmp
inc
hlt
lret
mov
dec
add
pop
test
adc
add
aad
jge
lods
push
inc
addb
movl
push
cld
mov
xorl
bound
leave
cs
hlt
push
popf
das
sar
and
lret
pop
lods
gs
cmp
push
jmp
test
scas
das
mov
in
dec
dec
and
push
mov
xlat
test
imul
out
sbb
lods
xchg
inc
daa
adcl
outsb
fwait
dec
xchg
and
in
xchg
cmp
and
int3
mov
and
lods
sbb
mov
fidivl
in
mov
jnp
mov
movsl
xor
inc
and
jle
aad
fs
andb
or
fdivs
sbb
imul
xchg
push
sbb
push
shll
stos
psraw
lcall
inc
stos
adc
fsubrl
jb
sub
mov
icebp
sbb
mov
aaa
cmp
and
out
add
loope
fstps
inc
push
cld
movsl
loop
mov
pop
cwtl
mov
cmp
nop
jnp
jno
fcmovu
mov
aam
out
dec
fwait
out
popa
mov
sub
adc
jecxz
sbb
inc
subl
movsb
inc
xlat
cmc
sbb
outsb
movsl
pusha
cmc
inc
jmp
push
stos
push
mov
mov
popf
orl
repnz
xchg
rclb
and
or
test
pop
cmp
inc
aam
filds
test
inc
cmc
sti
ret
outsl
xor
push
fucomip
push
movsl
loope
push
fildl
push
jo
ss
jmp
aaa
sbb
rorb
ret
mov
cmpsl
rcll
xor
pop
ds
cmpsl
mov
imul
ja
pop
push
lcall
sub
out
push
mov
mov
je
mov
mov
bound
fst
orl
sub
jecxz
cmp
xor
mov
jno
fisttps
loope
rcll
bound
mov
xlat
xchg
incb
mov
dec
or
sbb
xchg
mov
sbb
stos
jg
test
insb
cmpxchg
push
test
imul
and
push
xor
clc
pop
xorb
addr16
jle
aad
adc
ljmp
adc
sbb
outsl
inc
cltd
xchg
outsb
jno
xchg
in
xchg
mov
aad
lods
mov
inc
and
sti
std
xchg
ficoms
imul
out
add
and
lret
ljmp
rorl
fwait
jl
or
imul
xor
mov
ljmp
insl
sahf
xchg
jmp
bnd
insb
int
dec
inc
mov
enter
and
hlt
popa
inc
out
jp
mov
fdivrs
inc
repz
mov
out
incl
mov
sub
dec
mov
fwait
and
shll
mov
aad
sti
mov
in
xchg
repnz
cltd
push
adc
ss
jge
cmp
inc
subb
xchg
mov
imul
jp
je
ficoms
dec
into
push
es
mov
cmp
sub
icebp
jno
aaa
test
xchg
ljmp
sub
popa
insb
aam
test
scas
mov
out
xchg
xchg
push
adc
inc
inc
xor
mov
mov
shrb
push
out
xchg
sub
adc
mov
mov
inc
mov
pop
mov
lock
js
hlt
sub
jg
movsb
xor
cmp
sar
fsubrl
popa
push
pop
or
loopne
fwait
mov
sti
ret
packsswb
jo
or
jecxz
ret
pop
or
jb
push
ror
sahf
xchg
out
imul
xchg
imul
ret
int3
sub
pop
sub
jns
xchg
xor
ret
xor
push
inc
push
dec
xchg
mov
jne
popf
push
and
cld
inc
xor
imul
sub
stos
mov
sub
xchg
mov
mov
cmp
xchg
jno
xchg
mov
test
cmp
inc
test
repnz
repz
dec
lds
icebp
mov
ljmp
mov
or
add
test
stc
adc
or
loope
loopne
xchg
addl
sub
add
dec
jl
jbe
lret
push
lea
inc
or
jg
pop
mov
in
pushf
jnp
lock
push
ljmp
adc
dec
mov
into
cltd
jae
cwtl
push
or
test
inc
or
xchg
xchg
push
sub
int3
mov
rcll
xchg
push
jl
inc
out
cmpb
jb
and
cmp
mov
jle
pop
xlat
rcl
sbb
add
loope
dec
aaa
fdivrl
push
rcr
xor
in
lret
mov
cmpl
and
mov
das
sub
test
xor
clc
das
xor
stos
lcall
add
repz
imulb
push
test
lret
cs
imul
jmp
bound
popf
bnd
loopne
bound
rcrl
add
adc
cld
fcomip
ret
test
aad
inc
inc
negl
repz
ja
out
fcomps
stc
push
mov
stc
movsl
dec
cmp
mov
or
xchg
adc
add
sbb
aaa
push
push
es
mov
pop
jmp
and
jbe
sbb
arpl
rorl
insl
dec
roll
scas
shl
nop
dec
ret
adc
xchg
and
rcrb
fcompl
enter
mov
leave
movsl
shrl
enter
mov
sete
inc
mov
mov
fists
dec
mov
mov
test
mov
outsb
rcr
imul
clc
or
inc
scas
jns
mov
mov
or
jp
jae
mov
jmp
in
cmp
and
data16
adc
std
addr16
out
out
bound
inc
add
popf
jle
add
pop
push
stos
sti
aaa
dec
aam
int3
mov
inc
and
cltd
add
inc
mov
in
outsl
jns
shrb
fs
jnp
cmp
push
ret
cld
test
pop
ds
jbe
sub
outsl
and
ja
push
lahf
cld
mov
adc
adc
mov
cs
inc
pop
js
sbb
loop
lret
loopne
les
jne
movsl
dec
int3
push
cltd
sar
mov
stos
sbb
push
xchg
test
inc
imul
aas
lea
mov
xchg
clc
or
cmp
pushf
repz
out
scas
push
sbb
or
ljmp
jmp
mov
push
insb
dec
fmull
daa
cmpsl
je
repnz
xchg
push
movl
mov
insl
cs
loop
sbbl
cwtl
loopne
mov
cwtl
add
stos
and
fmull
out
mov
fstp
iret
xor
das
outsb
sub
sbb
jecxz
pushf
and
out
dec
xchg
dec
lods
scas
out
cmp
mov
jbe
pop
mov
enter
inc
std
inc
push
add
push
inc
add
sub
outsb
fiaddl
je
jne
stc
or
inc
js
mov
inc
cltd
test
cmpb
dec
sbb
scas
out
stos
inc
sbb
fs
test
dec
cmpl
lock
stos
sub
push
out
loope
cmp
fcmovu
xchg
inc
shll
je
lcall
mov
stos
imul
xlat
stos
xchg
add
dec
insl
mov
in
add
movsb
adc
pushl
daa
xchg
cmp
repz
sub
in
test
cmpb
mov
movsl
xor
push
out
fwait
add
rcll
lods
insb
insb
lret
inc
cmp
inc
lds
rcrl
cmp
out
mov
scas
xchg
pop
test
inc
icebp
mov
repz
xchg
loop
and
mov
push
test
cmp
je
sub
fmull
xor
jge
out
clc
test
push
jns
sahf
fimuls
ljmp
cmp
push
and
lret
sahf
jecxz
lahf
jge
mov
pop
xor
insl
ret
or
xchg
pusha
mov
fists
lahf
sbbb
gs
add
add
add
stos
lret
sbb
add
add
add
fwait
xor
pusha
add
add
add
add
add
lock
add
add
add
add
add
pop
add
add
add
add
stos
stos
add
ja
mov
incl
add
add
add
add
or
add
adc
adc
add
adc
jp
add
add
or
add
add
add
jb
add
add
add
jle
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
pop
jns
jne
dec
outsl
je
jb
outsl
inc
dec
outsl
jo
and
push
enter
jecxz
out
xchg
inc
dec
mov
aam
clc
add
addl
mov
repz
xchg
incl
push
call
adc
add
clc
lcall
pop
test
xor
pop
push
add
add
push
incl
movsl
push
mov
add
dec
jmp
incl
add
mov
add
xor
cmp
test
test
je
rcrb
dec
or
push
add
lock
call
test
fidivl
mov
movsl
repz
push
ljmp
push
call
inc
push
loopne
add
push
leave
pop
sbb
add
sbb
pop
add
aaa
add
sbb
sbb
sbb
sbb
sbb
repnz
sbb
popf
add
insb
add
gs
jae
sbb
dec
insb
add
outsl
insb
add
fs
add
push
popa
imul
add
je
xor
gs
add
add
jo
add
fs
add
and
dec
xor
add
add
add
add
xlat
or
add
add
lcall
add
add
add
adc
mov
movsb
dec
adc
aad
adc
push
xchg
lds
std
xchg
adc
xchg
ret
or
lahf
pop
test
je
and
xchg
test
adc
mov
mov
jae
int
cld
inc
test
ret
mov
lcall
inc
arpl
je
xor
xchg
in
outsb
aas
mov
or
stos
mov
or
mov
dec
jg
pop
jbe
inc
inc
sbb
xchg
push
repnz
cmp
mov
xchg
hlt
nop
or
fcmovnbe
fisubl
mov
pop
add
mov
sbb
hlt
push
sub
loop
add
out
test
ss
adc
cmp
jg
decl
test
mov
int3
movsl
sbb
ss
xor
fstpl
jb
lods
dec
dec
pushf
cli
popf
into
mov
dec
add
or
repnz
les
scas
aam
scas
and
cmpsl
jo
insl
cmp
or
xlat
pushw
push
push
inc
mov
fldcw
iret
mov
inc
lods
popf
jp
lret
xor
mov
or
add
lock
ds
xchg
inc
stos
pop
adc
scas
fs
scas
stos
inc
cs
mov
ljmp
mov
sti
adc
popf
and
mov
or
mov
inc
in
out
test
push
int3
inc
sahf
mov
pusha
jg
lcall
jg
mov
aas
sub
test
xchg
daa
scas
aad
pushf
adc
movsb
cmp
and
xlat
fmull
loope
pop
divb
loop
inc
inc
sub
jle
and
mov
mov
or
in
rclb
and
lcall
lods
data16
imul
inc
mov
inc
cli
xor
adc
jp
inc
stc
mov
fwait
jo
xchg
in
mov
or
or
pop
shlb
repz
jecxz
movsb
sub
sub
outsb
enter
and
nop
jne
dec
jp
and
leave
or
xchg
ret
loop
sbb
or
and
adc
clc
mov
mov
ss
and
jo
mov
loope
pushf
inc
and
loopne
inc
mov
cwtl
sti
in
test
lods
cmpsl
pop
cli
rclb
arpl
stc
cli
stos
jp
lea
push
or
sub
movsl
xor
jne
dec
subb
xor
ss
popl
pop
jmp
ljmp
push
add
mov
cmp
dec
xor
mov
rorl
in
pop
and
not
push
adc
lods
cmp
adcl
pop
movsb
mov
jno
addr16
push
add
imul
inc
inc
aas
ja
mov
jne
dec
jb
sbb
loop
sub
stc
xchg
jo
and
sub
mov
ljmp
hlt
icebp
outsb
xlat
aad
inc
sahf
jecxz
sar
insb
xlat
pop
shl
mov
ljmp
push
add
enter
jle
push
xchg
enter
xchg
int3
cmp
addb
and
mov
scas
cld
testl
fimuls
popa
mov
cmp
push
jmp
sub
fistl
movsb
jb
push
mov
repnz
jmp
movsb
clc
add
inc
dec
cmp
xchg
xchg
push
xchg
jo
repz
sbb
pop
int
and
sbb
mov
mov
repz
imul
movsl
mov
jl
mov
nop
pop
jecxz
cmp
js
jecxz
push
je
sarb
shll
loope
adc
jecxz
jmp
mov
lcall
scas
aaa
shrl
andl
pop
xor
or
lods
jle
adc
fldt
shll
test
xchg
imul
cmp
clc
and
xchg
add
out
test
dec
cmpl
mov
sahf
cltd
inc
jnp
add
sbb
inc
inc
mov
sbb
out
push
pop
out
mov
sti
xor
stc
aaa
jae
aam
sbb
je
insl
mov
movsb
sub
jne
repz
aam
cld
sub
jnp
std
mov
pop
shrl
lea
push
lret
int
nop
push
std
sub
mov
sti
aam
push
jp
mov
scas
add
xchg
mov
hlt
in
or
pop
lret
dec
mov
mov
adc
sbb
pop
pop
add
add
call
push
call
sti
adc
mov
aad
xchg
call
cs
xor
pop
dec
jle
push
faddp
jecxz
les
cli
cmp
sbb
pop
fnstcw
icebp
mov
or
adc
xlat
push
lret
lock
push
in
mov
stos
insb
je
lods
testb
repz
mov
cmpsl
mov
mov
mov
xor
xchg
adc
cmp
pusha
std
pop
dec
sahf
sbb
adc
push
adc
popa
jae
push
xchg
mov
std
xchg
pop
mov
dec
adc
push
fst
test
dec
out
jecxz
sub
adc
sahf
mov
aam
es
mov
push
aaa
adc
in
jl
jbe
jge
pop
push
out
ret
pushf
loope
pop
cli
mov
pop
outsl
dec
mov
call
fnstsw
xchg
mov
jecxz
enter
pushf
pop
mov
jmp
sub
adc
stc
jp
lods
mov
mov
and
lds
jno
mov
xlat
stc
stos
jp
mov
iret
push
mov
into
mov
mov
rorl
jge
sbbl
icebp
fdivrl
ret
mov
inc
std
nop
xor
and
test
mov
pop
test
lods
sub
cmp
mov
cmp
mov
mov
dec
fmulp
bound
mov
decb
mov
mov
in
sbb
ds
daa
pop
jmp
outsl
xor
dec
outsl
inc
sub
push
sub
cmpsl
movsb
pop
data16
adc
cmp
cmpsl
pop
xchg
les
dec
xorl
adc
jg
mov
stc
or
out
outsb
in
mov
mov
jp
mov
scas
sub
aaa
mov
xchg
inc
rcrl
dec
aam
sahf
inc
mov
push
push
orl
pushf
sub
mov
sbb
fsubrs
cmpsb
outsl
cmp
in
mov
push
test
push
into
xchg
adc
mov
js
pop
push
sti
mov
inc
mov
sub
shl
or
jne
mov
das
push
or
xchg
aad
pop
inc
fcoml
jecxz
push
adc
test
cmp
sbb
xor
pop
test
mov
hlt
lret
negb
icebp
fstps
push
movsl
cli
mov
rorb
sahf
arpl
inc
add
add
lea
jl
fistpll
mov
jmp
jmp
or
inc
adcb
into
add
dec
stc
bnd
enter
push
sbb
or
inc
into
mov
dec
mov
xor
sbb
inc
or
adc
mov
ja
fnstcw
cltd
push
push
int
jle
inc
inc
fistl
enter
add
jmp
adc
daa
scas
out
aad
cmp
cmpl
movsb
sub
xchg
notl
rclb
jmp
mov
cmpsl
lods
lahf
jg
push
sub
ja
bnd
daa
icebp
or
mov
aam
mov
std
add
jno
xacquire
aas
dec
adc
repz
jo
xor
cwtl
jg
inc
and
insl
pop
inc
push
test
out
jae
out
adc
imul
push
mov
cmp
xchg
dec
cltd
les
cli
icebp
repnz
sub
idiv
hlt
inc
dec
repnz
movb
mov
call
jo
lret
adc
lret
cmp
inc
jmp
xor
cmp
or
push
int
fdivs
out
mov
pop
xchg
sub
mov
movsl
pop
rcr
dec
mov
and
stos
loop
dec
push
xchg
clc
das
ret
cwtl
mov
jno
test
jnp
pop
cmp
addr16
mov
mov
pop
pop
lock
pop
cmp
into
sti
fcompl
cmp
test
insl
outsl
cs
dec
mov
enter
xor
add
scas
stos
push
lds
mov
icebp
mov
jb
mov
push
mov
mov
jae
add
jns
add
in
pusha
jb
sbb
cmp
add
aaa
sbb
mov
repz
inc
xor
jmp
mov
sub
mov
xchg
popf
out
lods
outsb
rolb
mov
sbb
sti
cmc
mov
dec
hlt
decb
fildl
dec
outsb
mov
aad
mov
loop
dec
pusha
push
mov
lahf
and
clc
imul
fbstp
cmpsb
xchg
xchg
fbld
mov
or
jae
ret
lret
sbb
mov
add
loopne
mov
inc
jmp
add
dec
and
popa
aam
mov
ja
int
call
orb
out
or
nop
push
popf
cwtl
rcrb
sub
pop
imul
in
daa
add
arpl
pop
push
xchg
add
insb
cmp
pop
jae
stos
lret
jb
popa
cs
data16
add
insb
mov
xor
mov
mov
lret
sub
sub
sub
clc
mov
cltd
pop
cmpsb
sbb
xlat
cmp
jnp
xor
pop
cmpb
addr16
cwtl
and
roll
mov
decb
mov
xchg
frstor
jmp
aad
xlat
fcompl
jae
fst
dec
jle
or
fs
xor
lea
je
lea
aas
dec
movsl
dec
or
push
and
mov
nop
clc
lea
xchg
shll
pop
inc
movsb
sahf
or
das
stos
loop
outsb
sub
scas
push
jmp
pop
mov
int
sub
leave
push
fisubs
rcrl
aam
and
popa
decl
adc
nop
sti
inc
or
iret
mov
xor
push
dec
and
lcall
add
jb
test
add
jmp
jbe
cmp
mov
in
sub
xchg
and
sub
sub
incb
sarl
cmp
fcoml
push
movsl
sub
je
push
sbb
cmpsb
dec
subb
lcall
out
jp
or
xor
mov
xchg
pusha
or
sahf
xor
dec
scas
cmp
pop
pop
or
int
sbb
movsl
fisubl
stc
jmp
mov
xlat
insb
test
call
cmc
sbb
loop
and
stc
out
mov
addr16
shl
push
out
cmpsb
jg
xchg
xchg
pop
fists
cmpsl
sub
push
clc
fimuls
jge
cmp
and
pop
popa
in
jl
repz
jg
jmp
out
divb
cmpsl
inc
lock
cmp
lret
js
scas
ljmp
sub
into
xchg
das
xor
pop
shlb
je
cmpsb
out
ja
or
or
es
data16
insl
popa
pop
mov
push
mov
andl
loopne
pop
push
sub
xlat
sub
das
pop
add
popf
add
sbb
jmp
sarb
xor
push
in
pop
stos
sbb
popf
fiadds
sub
mov
movsl
mov
gs
icebp
popa
out
repnz
lds
outsb
es
push
orb
jmp
test
add
push
aad
mov
fimull
xchg
mov
xor
pushl
push
push
nop
mov
cli
dec
fildl
loop
loopne
add
adc
adc
enter
test
popa
dec
sbb
jb
scas
cmp
pop
dec
lods
xor
aas
shrl
sarb
pop
inc
push
adc
ficoml
xor
and
icebp
sbb
push
pop
or
out
pop
inc
idivb
pop
jg
fs
mul
int
repnz
mov
mov
xchg
out
loop
aam
mov
sub
sbb
mov
sub
pop
shll
imul
es
sbb
das
push
ret
int
adc
arpl
aaa
loop
jbe
add
push
jnp
addr16
pop
or
add
notl
cmp
xchg
adcl
xor
pop
int3
push
test
bound
lahf
mov
cwtl
cli
ja
or
arpl
loope
adc
jno
mov
xor
cli
push
sub
ret
lods
mov
addr16
aas
incl
das
nop
pop
cmp
dec
pusha
cmp
addr16
sbb
push
fdivrp
mov
and
sbb
mov
sbb
dec
pop
dec
jbe
popf
push
inc
inc
mov
int3
inc
jae
repnz
jno
or
jl
mov
sti
sahf
divl
lret
add
jg
sbb
test
movsl
out
xor
jp
mov
xor
pop
mov
push
pop
lods
jne
xchg
and
and
push
dec
mov
mov
clc
addl
int
mov
ret
ss
xor
sbbb
jl
xor
xor
push
jo
sbb
shr
std
sub
lds
out
push
mov
xchg
subb
shlb
test
jb
movsl
pushf
push
mov
movsb
addr16
mov
mov
lock
jae
je
cmpsl
fisttpll
sub
iret
xchg
nop
rclb
jns
shl
jle
dec
inc
mov
push
dec
outsb
stos
mov
daa
mov
leave
addb
add
inc
orl
xor
jp
shrl
bound
jp
mov
idiv
mov
xlat
xor
mov
jbe
popa
data16
inc
mov
pop
jb
mov
lods
cmpsl
shrl
jp
jnp
inc
jmp
fistpl
adc
mov
test
jmp
inc
rcrb
dec
das
cmpsb
cmc
repz
xor
lds
mov
in
sub
xchg
dec
pushf
rolb
mov
adc
mov
or
xchg
xchg
jno,pn
pop
lods
imul
fidivrl
aam
dec
inc
and
outsb
fbld
pop
hlt
xchg
lea
add
mov
mov
pusha
repnz
shlb
jp
adcb
movsl
cmc
rcrb
or
orb
rclb
sub
push
dec
mov
fsubs
pop
into
and
xor
nop
cmp
mov
add
stos
mov
push
dec
jge
and
cmp
scas
sbb
sti
jb
jae
or
dec
js
test
pop
in
or
into
imul
pop
jmp
enter
jno
rorb
mov
add
inc
nop
aaa
adcl
ljmp
lock
loop
rcll
xchg
mov
ljmp
fmull
and
insl
xchg
mov
lods
shrb
xchg
adc
or
mov
jmp
pop
call
shlb
sub
outsl
adc
xlat
jg
sbbb
xchg
aad
sbb
mov
inc
in
pop
xchg
jmp
pop
mov
or
scas
jae
xor
pop
push
int
sti
movsl
repnz
ja
push
xor
sahf
adcl
or
inc
addr16
fldcw
repz
roll
mov
ret
cmp
ds
sub
mov
dec
ja
mov
in
jne
data16
fsubrl
push
mov
push
sbb
cltd
pushf
int3
shl
mov
push
dec
cmp
xchg
ljmp
xchg
lret
add
xchg
lds
out
push
mov
cmpsl
scas
fildl
mov
lahf
jmp
aad
and
mov
adc
into
push
sti
push
jp
mov
and
out
gs
data16
xchg
xchg
fs
test
fidivl
push
mov
out
scas
adc
jmp
jmp
mov
sub
xor
cmc
lahf
cmp
stc
push
cmpsl
ja
mov
sub
lds
dec
adc
sub
dec
cmp
mov
and
gs
xchg
popf
sub
sbb
inc
scas
sbb
xchg
or
daa
div
dec
xchg
xchg
cmp
test
es
pop
rolb
fdivl
or
imul
add
adc
push
mov
jmp
int
in
jo
push
xchg
arpl
push
xchg
test
sti
cmc
outsl
sbb
sbb
and
xor
sbb
mov
push
test
add
addr16
fiaddl
mov
pcmpeqd
sub
jmp
push
inc
jge
hlt
jecxz
lea
mov
adc
mov
punpckldq
fidivl
scas
xor
push
pop
lcall
mov
lret
data16
test
push
lea
sbb
stc
pusha
dec
mul
popa
sbb
enter
addr16
xchg
xchg
push
mov
repnz
popl
jb
mov
lods
lahf
xor
lea
cmpsl
mov
repnz
adc
lcall
and
add
push
popa
rcrb
orl
ret
lret
mov
mov
outsb
sbb
pop
pop
popf
xor
out
test
imul
sbb
in
es
fiaddl
sbb
jne
inc
cmc
pop
fucomi
and
push
cmp
int3
subl
dec
push
add
xchg
test
loope
or
test
daa
fwait
test
insb
cmp
mov
cli
and
push
hlt
mov
iret
fld
shrb
std
push
mov
sarb
or
daa
push
pop
jp,pt
pop
xchg
ret
dec
jle
or
out
push
cld
pushf
mov
xlat
and
inc
insb
cld
xchg
movl
repnz
repz
js
or
ja
iret
push
scas
dec
call
or
mov
push
push
mov
scas
xor
in
mov
pop
mov
and
xchg
test
mov
loop
fsubrl
mov
mov
ljmp
or
sbb
call
aas
adc
or
inc
push
mov
push
mov
push
mov
aad
test
cwtl
and
mov
jmp
sbb
jecxz
mov
arpl
jbe
adc
rol
out
test
dec
and
and
movsl
insl
xor
dec
sbb
sub
andl
add
addr16
xchg
movsl
mov
mov
mov
adcb
ja
leave
or
inc
jg
jecxz
mov
add
arpl
into
outsl
in
cli
inc
cld
cmpsl
jmp
pop
or
lret
xor
sub
in
aad
mov
enter
or
cli
pop
movsb
push
sub
xor
mov
iret
dec
dec
and
es
addr16
icebp
out
inc
fists
adc
ret
push
adc
aaa
fisubl
ja
lods
xchg
xchg
mov
mov
pusha
lea
inc
into
loop
hlt
data16
cmp
or
cmp
lcall
xor
sti
push
xor
inc
ficomps
sbb
pop
arpl
leave
aaa
pop
jl
cltd
dec
lock
iret
punpcklwd
add
xor
xchg
call
xor
mov
push
xor
push
dec
test
fidivrl
test
imul
insl
sbb
cmp
cmp
rcrb
mov
cli
cmp
push
in
out
and
fstpl
cwtl
sub
and
js
or
mov
add
push
mov
push
adc
loopne
out
ficompl
nop
pop
jne
ljmp
inc
lock
mov
out
ljmp
push
je
mov
ljmp
aaa
or
outsb
cmpsb
cs
jnp
xchg
testl
cmp
repnz
jae
imul
mov
add
scas
mov
cmp
sub
push
inc
mov
lods
shlb
xchg
push
lret
inc
pop
fmull
outsb
out
push
inc
repnz
in
xchg
js
jg
fsubl
adc
jo
mov
ret
in
push
mov
scas
push
mov
mov
jmp
out
dec
test
mov
mov
or
cltd
rorb
hlt
and
scas
jmp
xchg
cltd
aam
adc
test
mov
mov
lret
lock
sub
cmp
leave
das
adc
xchg
cld
stos
or
dec
adc
cmpsb
ret
pop
mov
ret
jae
mov
xlat
sub
stc
adcb
jle
mov
xbegin
mov
sbb
sub
dec
mov
push
das
and
xchg
outsl
cld
jnp
cmc
fwait
mov
insl
or
lock
popa
pop
and
sub
mov
cmc
jl
jb
pop
sub
cmp
iret
jbe
mov
jmp
inc
jnp
jmp
jecxz
add
add
push
mov
add
add
sbb
add
add
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
arpl
add
add
add
add
add
add
pop
stos
add
ja
mov
jg
add
add
add
ds
jb
outsb
push
or
add
add
add
add
add
cmp
add
pop
mov
add
rolb
add
out
sbb
add
add
and
add
add
fs
outsb
add
pushf
je
fs
in
leave
mov
or
clc
jecxz
sbb
lret
roll
push
inc
pop
inc
fcoms
add
dec
or
clc
add
decb
pusha
incl
mov
push
add
pop
divl
mov
int
mov
pop
addl
add
jge
insl
incl
add
incl
add
add
add
push
lea
test
call
push
cmp
fists
popf
loopne
loopne
std
pop
add
incl
lret
add
enter
add
push
std
test
out
add
add
push
adc
stos
jo
push
decl
add
add
add
add
ds
add
add
cmp
add
add
insl
je
imul
pop
in
add
insb
imul
insl
add
insb
pop
gs
gs
add
gs
js,pn
push
jle
inc
push
insb
add
insb
add
outsl
insb
jne
outsb
gs
clc
je
je
je
insb
add
add
fadds
add
add
add
add
add
and
sar
mov
gs
data16
sub
fcmovb
push
lret
fld
pop
lahf
push
cmpsl
pop
loope
movsb
jb
call
dec
add
pop
ljmp
dec
inc
mov
pushw
int3
imul
std
daa
cmp
pop
shrb
push
cli
add
arpl
or
call
jne
jne
pop
sbb
add
roll
ja
dec
test
jg
jnp
xchg
jae
push
xchg
adc
lret
adc
mov
icebp
dec
leave
lret
stc
stos
sbb
adc
out
mov
lea
jge
dec
nop
sbb
sbb
lret
movsl
dec
sub
mov
out
jge
aam
sbb
fnstsw
cwtl
inc
lret
loope
xchg
pop
fstpl
jo
jecxz
mov
sbb
push
movb
ret
negl
adc
mov
es
mov
inc
add
xor
fiadds
fwait
mov
mov
mov
adc
inc
outsb
sbb
adc
cli
mov
cmc
inc
out
imulb
push
nop
adc
ja
cmc
cmpsb
inc
outsb
sbb
dec
and
aaa
lds
mov
test
popf
mov
pushf
sbb
int
add
popa
cmpsb
xchg
push
cmp
mov
sbb
xchg
fistpl
sbb
jg
fs
fwait
mov
add
inc
push
cwtl
pop
movsl
add
mov
in
cmp
pop
xchg
cmp
ljmp
push
sbb
popf
xor
je
jle
mov
and
ja
movsl
frstor
mov
lock
mov
xchg
test
es
sbb
rorl
jge
xchg
xchg
into
in
jno
or
jmp
mov
lock
into
pop
adc
std
xchg
pushf
in
push
out
xchg
shlb
jge
rol
jge
out
pop
fistpl
adc
push
mov
out
sub
mov
and
sbbb
push
aaa
rclb
ss
cmc
js
cmp
stc
shrl
cmp
adc
dec
dec
enter
mov
in
lods
imul
and
add
addr16
mov
jle
insl
test
daa
sub
icebp
in
jb
pop
mov
mov
mov
dec
int3
incl
fidivrl
mov
cltd
dec
lret
push
adc
aas
lahf
pop
or
push
sub
test
xchg
push
jne
xchg
mov
dec
insb
scas
bound
jb
jbe
cmp
jns
in
daa
outsb
loopne
mov
sub
ret
pusha
mov
test
packuswb
daa
insl
mov
xchg
push
mov
xor
arpl
xchg
xchg
sub
mov
test
das
repz
and
idiv
mov
lds
mov
popf
out
pop
sub
pop
mov
or
jns
pushl
pop
test
fdivr
ret
xchg
jmp
inc
mov
aad
mov
fnsave
jbe
into
mov
pop
dec
mov
clc
fcomps
xor
int
loopne
cmp
test
in
xchg
and
test
xchg
call
daa
stos
xchg
rcrl
ss
clc
add
adc
xor
cmp
lds
addr16
mov
mov
aam
ficomps
data16
loopne
insl
outsl
sbb
cmp
pop
sar
and
fwait
dec
adc
aam
es
inc
mov
andb
data16
ror
out
jmp
fsubl
cmp
adc
or
dec
jne
jns
add
or
mov
inc
mov
aad
cmp
fidivl
in
icebp
jge
inc
in
js
sub
add
gs
mov
sbb
cs
push
cmc
in
dec
sbb
push
xlat
xchg
sub
nop
mov
lods
mov
fisubs
mov
fists
enter
dec
xchg
adc
dec
push
adc
sbbl
pop
pop
push
mov
cwtl
cmp
inc
loopne
xor
mov
xchg
or
adc
aad
ja
pop
nop
rcl
mov
mov
imulb
dec
add
mov
push
mov
and
jo
loop
jecxz
mov
in
subb
dec
mov
fidivrl
fdivs
pop
mov
sub
test
or
adcl
pop
dec
lret
outsb
stos
pop
dec
outsb
push
stos
stos
push
add
dec
dec
sub
xchg
rorb
sub
cwtl
cmpxchg
loop
jnp
aad
xchg
ljmp
rsqrtps
push
lahf
push
call
dec
jo
mov
repnz
fs
mov
mov
shlb
jnp
push
loop
fbld
or
mov
shrl
and
xchg
lcall
aam
fistpl
rcl
jno
lret
pop
jp
lret
adc
mov
xchg
out
mov
es
or
mov
andb
xchg
cmp
xor
dec
in
jns
ja
adc
mov
cmpsb
push
aas
mov
ljmp
dec
add
push
and
orb
dec
mov
sbb
adc
or
aad
push
rorb
sti
imul
cmp
test
dec
lahf
dec
fmuls
push
pop
cmp
mov
inc
mov
adc
std
in
mov
fisttpl
sbb
icebp
lcall
js
jge
shrl
push
dec
mov
ret
sbb
cmp
sbb
cld
daa
push
sbb
pop
rolb
jp
jl
and
les
push
mov
repnz
movsl
inc
push
xchg
fsubs
pop
pop
into
adc
pop
sbb
push
addr16
jp
pop
test
jno
push
pop
sahf
lock
aaa
mov
fstpt
cmp
sub
xor
dec
jp
stc
iret
cmp
push
cmp
mov
in
xchg
cmpsb
gs
mov
inc
mov
ja
xchg
sbb
sub
loop
jmp
inc
ds
rorb
rorb
enter
dec
mov
fistpll
xlat
jae
pop
adc
aad
jecxz
jge
popf
mov
jle
out
pushl
sub
rdpmc
stos
outsb
rcr
inc
xor
sub
pop
rcl
clc
insb
cmp
imul
sbb
mov
cmp
cwtl
xor
sbb
add
arpl
scas
mov
popf
cmc
add
loopne
daa
sub
dec
dec
out
popa
jg
pop
roll
test
sbb
inc
fbld
xor
aaa
pushf
outsb
daa
pop
mov
aam
in
stos
add
and
lcall
cmpsb
or
ja
dec
mov
pop
popf
push
and
bound
shlb
mov
adc
mov
and
test
push
lock
fistl
or
out
cltd
cmp
je
pop
pushf
push
lcall
test
jle
out
mov
mov
cs
hlt
outsl
push
loopne
dec
mov
lret
pushl
dec
lock
or
sahf
dec
and
pop
clc
enter
aam
outsl
jae
pop
inc
aam
mov
push
or
aas
rorb
sub
and
mov
orl
ss
insb
rcl
pop
subb
sbb
adc
push
movsb
testl
popa
inc
imulb
repz
and
lea
lea
cld
mov
jb
lds
sub
push
mov
mov
pop
in
mov
pop
lds
es
mov
arpl
mov
das
and
pushf
push
or
cwtl
or
lods
cltd
ds
mov
in
mov
shll
jno
test
xor
xor
mov
fwait
add
fisttps
in
ljmp
adc
mov
out
in
or
sbb
les
xchg
sub
fstpt
xor
push
jecxz
inc
cs
sahf
or
fmull
enter
cmpsb
insl
jecxz
cmpb
push
jo
xor
cs
xchg
addr16
jle
inc
and
xbegin
pop
movsb
aaa
outsl
in
cmpsl
add
sbb
jae
aas
movl
out
xor
shll
ss
push
rcr
mov
sbb
mov
roll
pop
push
mov
mov
enter
rorl
adc
jb
sbbl
lock
cmpsb
bound
push
jns
mov
mov
cmp
xlat
sbb
cltd
lds
xor
xor
sarl
fistl
jle
pop
daa
inc
cmp
fldt
inc
in
repnz
call
ret
dec
xchg
outsb
adc
test
movsl
divps
imul
cld
jmp
add
add
ljmp
mov
fwait
mov
pop
and
test
adc
test
out
test
lea
jmp
sbb
arpl
cmp
mov
jp
test
xchg
rorl
enter
mov
aam
loopne
jp
outsb
adc
adc
cld
sub
rolb
pushf
sbb
out
inc
push
push
and
into
sub
mov
jae
shlb
jmp
fmulp
scas
or
inc
pushf
loop
jbe
sbb
daa
sub
push
arpl
inc
repnz
xchg
jle
das
out
sub
data16
cmpsl
and
ljmp
mov
lock
sub
sub
mov
xchg
out
add
in
lahf
rcr
stos
jbe
xchg
aaa
mov
imul
pop
js
push
sub
fs
xor
mov
mov
int
div
std
sbb
mov
mov
mov
roll
shrb
pop
popa
mov
mov
adc
sbb
lret
jecxz
push
xlat
popf
nop
sarl
push
sub
xor
push
ljmp
xlat
add
call
stos
fidivrl
aaa
fiaddl
int
jo
cltd
xor
adcl
notl
shl
xchg
int
xchg
fildll
mov
jg
fidivs
leave
xchg
cmp
js
push
stos
jl
fdivr
cmp
cmc
popf
scas
sti
aad
aas
lret
stos
xlat
sbb
mov
mov
scas
sbb
ljmp
dec
cmp
repz
lahf
pop
jl
mov
outsb
ds
testb
and
mov
adc
in
mov
xorl
aaa
je
nop
add
fs
outsb
push
jbe
notb
jne
dec
repz
ret
lea
cmp
test
lods
inc
arpl
insl
xchg
push
pop
push
mov
adc
push
push
fmull
push
adcl
cld
adc
dec
push
xchg
leave
and
icebp
mov
xchg
pusha
jo
dec
or
adc
mov
out
pushf
gs
push
xchg
jno
or
adc
popa
int
flds
je
arpl
pop
leave
sub
lret
inc
add
ja
dec
inc
movsl
roll
and
and
mov
repz
xlat
or
push
add
cmp
popf
or
les
mov
jb
pop
inc
sbbl
out
shll
jecxz
xor
and
and
jge
xchg
shll
mov
out
out
mov
cmp
repnz
pop
dec
dec
xchg
cmpsb
push
in
ficomps
dec
and
loop
fcomps
mov
add
cltd
les
int
mov
faddl
in
movsl
pop
jbe
sbb
out
movsl
cmp
test
out
jno
sti
pop
or
inc
and
dec
popf
and
pop
pushf
cmp
mov
out
mov
ds
cwtl
xchg
adc
sbb
jns
push
sti
sub
arpl
in
or
or
rorb
push
cmp
mov
xchg
nop
mov
mov
cld
daa
jne
ret
dec
push
ja
or
xchg
push
rolb
xchg
xor
iret
sub
lods
scas
mov
ds
ficompl
push
add
sti
es
jne
ror
and
repz
jmp
nop
adc
jno
push
inc
push
popf
fstl
in
int3
insb
aam
mov
xchg
aad
loope
dec
push
lahf
cmpsb
lcall
sti
mov
push
adc
xchg
cld
shlb
sbb
loop
sbbb
xlat
in
sahf
test
cmp
sub
jmp
roll
adc
xlat
stos
mull
push
outsl
mov
in
loopne
es
ds
jmp
mov
cltd
orb
inc
icebp
in
scas
xchg
pop
loopne
sub
bound
cmpsl
sub
push
je
call
dec
jae
and
fisttps
hlt
jmp
inc
sti
out
icebp
stos
mov
cmp
fisubrs
add
int
and
jbe
mov
stos
adc
sbb
inc
adc
jb
inc
out
test
mov
gs
fstp
out
pop
iret
orb
pop
popa
out
fcomps
push
nop
scas
xor
push
insl
inc
and
fsub
jle
push
in
jbe
xchg
cmp
xor
mov
mov
add
loope
icebp
decb
fsts
lea
sub
std
push
jp
cmpsl
cs
xor
or
clc
and
stos
mov
inc
jb
bound
stos
movsl
cmpsl
add
push
imul
xlat
sahf
faddp
adc
mov
and
mov
pop
jl
out
lods
mov
std
and
mov
inc
out
fildl
inc
dec
outsb
int3
add
in
std
int
dec
mov
xchg
pop
mov
and
data16
loop
xor
add
scas
cs
subb
mov
add
in
push
pop
xor
bnd
sbb
inc
mov
adc
inc
scas
lret
push
push
daa
aad
push
dec
xchg
adc
sub
jne,pt
xor
flds
sar
mov
les
scas
sarl
cmpl
dec
jmp
mov
mov
sti
aad
clc
xchg
imul
fcmovne
lea
pop
mov
sbb
imul
cmp
cmpsb
xchg
inc
lds
xor
popf
push
lcall
xlat
lock
bswap
ss
cld
lods
lds
push
lea
addr16
inc
lods
leave
cmpsl
mov
jne
xchg
aas
adc
dec
sbb
mov
enter
jge
inc
adc
dec
imul
aad
out
out
xchg
ja
test
sbb
lods
sbb
dec
js
fnsetpm(287
ror
adc
dec
xchg
jmp
std
jno
lret
xlat
int
mov
in
sub
test
aaa
adc
jne
mov
pop
movsl
arpl
lcall
and
mov
fdecstp
in
cmp
pusha
and
sbb
cli
test
inc
mov
adc
dec
test
mov
xor
pop
insl
mov
jge
stos
std
je
adc
jbe
mov
cwtl
and
mov
fildll
ds
or
cld
sahf
testb
mov
cmp
outsb
imul
ss
cli
mov
data16
lds
xor
cli
push
cmp
js
movb
pusha
pop
jmp
in
rorb
std
ficomps
and
inc
decb
pusha
movsl
mov
sbbl
pop
stos
push
pop
xchg
sbbl
fists
cmp
jbe
stos
icebp
aad
pop
pop
inc
sahf
pop
mov
sarb
adc
inc
or
push
bound
cmc
xor
js
xor
add
jnp
inc
pop
lea
inc
aam
sub
mov
mov
sbb
mov
and
xorl
push
xchg
inc
out
or
ror
push
into
cltd
inc
mov
jae
mov
repnz
jg
mov
xorl
adc
mov
adc
insl
dec
dec
cmp
nop
xchg
mov
sbb
xor
loopne
ficoml
in
out
add
mov
iret
xor
das
dec
adc
lds
push
adcb
lret
pop
adc
rcrl
mov
inc
xor
mov
sti
add
xor
push
jp
jns
roll
test
cmp
fdivp
je
les
mov
stc
mov
adc
popf
cltd
push
in
movsl
cli
xchg
cmc
pop
fldenv
xchg
adc
sbbl
std
cmc
addb
fnstenv
cmp
push
mov
daa
cld
int3
icebp
adc
arpl
mov
and
rorl
popf
xor
jnp
adc
mov
mov
push
mov
rol
in
mov
and
mov
movsl
rcll
inc
into
pop
jmp
test
add
or
decb
mov
dec
mov
dec
jb
mov
stos
xor
test
add
mov
pop
ror
aam
inc
jae
mov
js
adc
push
imulb
mov
mov
lret
dec
xchg
fidivl
xchg
sub
sbb
lcall
mov
xor
or
stc
add
stos
xchg
sub
imul
inc
dec
xchg
adc
imul
outsl
add
inc
cmpb
lods
ljmp
es
lods
insb
cmp
and
add
dec
and
sahf
mov
inc
fisubs
jge
pop
sbbl
shlb
lock
push
outsl
fnstenv
sub
out
lahf
ss
pusha
jle
fs
fwait
mov
pop
pop
cmp
sbb
jmp
jnp
popf
or
loopne
and
xchg
dec
icebp
add
inc
lret
inc
xor
outsl
in
into
divl
or
push
mov
mov
out
push
jbe
movsl
mov
ret
and
push
popl
cmpsl
xor
sub
mov
cltd
mov
pop
cld
enter
push
pop
rol
sub
pop
std
imul
sbb
cmp
pop
outsb
jl
xchg
stos
cmp
test
sbb
loopne
stos
sub
shrl
dec
and
aaa
jle
outsb
pop
adc
jnp
xchg
scas
dec
sub
hlt
dec
add
dec
divl
sbb
inc
xor
loopne
xchg
add
mov
sbb
into
cmp
je
loop
pop
es
inc
fiaddl
mov
jle
jp
xchg
cwtl
outsb
addr16
mov
xchg
int
scas
jo
push
nop
push
out
call
or
fistps
rcrb
jb
dec
add
xor
rcl
xchg
pop
and
das
push
sbb
mov
or
fsubp
pushf
sti
xchg
inc
sbb
push
jne
dec
sbb
fiadds
push
loop
xlat
arpl
jle
jbe
mov
test
insl
inc
aas
or
push
mov
loop
adc
gs
jno
jnp
shrl
jno
out
jg
or
xor
fimull
xchg
mov
mov
inc
or
dec
push
loop
clc
or
loopne
adc
stos
sahf
sbb
test
jbe
jns
movsb
dec
hlt
sub
and
and
lods
ljmp
stc
clc
cmovg
dec
ja
std
push
flds
dec
out
add
sahf
shrl
out
and
lss
cld
lea
loope
xchg
bnd
xchg
mov
jns
xor
clc
push
mov
xchg
out
xor
js
insl
sub
jb
pop
jmp
add
pop
addr16
sub
mov
mov
mov
pop
scas
xor
sub
ficoml
xor
data16
shll
mov
pushf
lods
inc
adc
xlat
cs
dec
outsl
cmp
inc
add
cwtl
cmp
imul
stos
lea
sub
pop
push
js
xor
ss
mov
cmp
cmp
sub
mov
dec
mov
cwtl
jns
add
pop
aad
jb
in
popa
sub
or
test
hlt
iret
les
call
xor
mov
push
push
xchg
jge
movsl
mov
push
pop
or
cwtl
outsb
sub
mov
rcr
loop
push
jmp
push
sub
cmpsl
mov
in
cmc
jecxz
fs
inc
insl
push
push
js
stc
push
push
into
sbb
cmp
sbb
dec
aam
mov
cmp
aam
repz
enter
fwait
and
and
in
push
mov
fdiv
orl
add
jp
fwait
sub
push
movsb
cmp
mov
jbe
sub
cmc
xor
xchg
cs
mov
cmp
sbb
inc
outsb
stos
imul
sarl
mov
mov
adc
popa
add
rclb
jbe
sahf
insb
dec
and
xchg
sbb
mov
ret
sahf
and
subl
mov
paddsw
inc
xlat
sbb
pop
fbstp
dec
gs
xchg
dec
xor
lahf
mov
sub
sub
es
pop
dec
mov
ds
adc
mov
xor
ds
xor
dec
xor
ffree
push
in
fisubrs
xor
push
leave
add
add
scas
pop
ds
add
add
cmp
add
add
add
add
add
pop
mov
addb
add
add
add
add
add
add
out
sbb
add
add
add
add
add
addb
add
stos
add
ja
mov
jo
jo
add
add
add
add
and
jne
or
sahf
add
add
add
add
add
add
and
add
add
add
add
add
sahf
or
mov
add
add
add
add
push
jbe
jne
dec
add
add
add
and
jo
gs
push
jae
inc
jb
fs
popa
inc
add
stc
jmp
mov
enter
or
jmp
fmuls
mov
pushl
add
cmpsb
mov
call
adc
push
dec
shrl
push
dec
lock
in
sar
lret
pop
mov
movsb
test
add
mov
adc
movl
add
xor
pop
rolb
lock
add
add
push
test
test
std
incl
rorl
loopne
lock
push
adc
cmp
clc
cmp
shrb
dec
mov
cli
jo
je
push
inc
push
lock
push
in
push
inc
in
int3
push
mov
and
je
xchg
mov
add
cmp
cmp
out
add
add
add
inc
dec
inc
insb
movsl
outsl
insl
outsl
jne
inc
jo
gs
movsl
inc
xchg
outsl
gs
imul
dec
insb
gs
dec
push
inc
imul
jge
add
or
aad
gs
addr16
loopne
insb
gs
inc
dec
outsb
add
add
fiadds
add
add
dec
add
test
add
add
popf
jge
out
shlb
sbb
cmp
int3
cmp
push
lods
scas
push
ss
std
in
add
pop
movsb
jae
scas
or
mov
cltd
push
add
fwait
adc
shl
add
inc
out
pop
or
mov
jae
mov
in
mov
mov
arpl
enter
cmp
push
push
mov
pop
cmpsb
imul
into
aas
xchg
fstpl
push
mov
out
mov
fidivs
in
shlb
repz
rol
add
aaa
adc
mov
xchg
outsb
mov
lds
dec
jo
sbb
pop
jbe
or
aam
loop
mov
pusha
ret
lea
pop
jb
pop
sti
mov
dec
cmp
jl
pop
sbb
push
cmp
mov
sub
stos
fldl
subl
jmp
aam
ret
stc
add
mov
and
push
iret
mov
mov
sbb
bound
call
add
movsl
or
cs
push
insl
lock
out
loopne
jbe
mov
std
out
mov
add
shrb
shr
cli
inc
icebp
xor
rcrl
iret
cmp
dec
cmpsl
or
addr16
inc
movsl
mov
mov
in
jp
mov
add
stos
stos
or
dec
jbe
stos
adc
add
sarb
stos
or
loopne
mov
ds
push
mov
psadbw
pop
fpatan
sbb
fcoml
orl
rorl
je
jae
jbe
push
clc
arpl
adc
fwait
dec
inc
fdivs
jb
push
fstl
add
imul
xchg
std
lahf
daa
fdivs
xchg
xor
repnz
in
adc
test
inc
sbb
sub
adc
mov
mov
stos
jecxz
ds
and
inc
dec
push
jb
push
pop
and
mov
pop
clc
add
xchg
leave
add
dec
add
fs
dec
adc
movsb
dec
lock
lret
rolb
and
dec
stos
xchg
lret
ret
ss
inc
and
pop
mov
mov
shl
jl
jge
movsb
call
adcb
mov
xlat
xor
aam
icebp
mov
pop
imul
jns
mov
mul
pop
ret
or
fs
or
add
in
push
mov
rclb
mov
mov
mov
mov
mov
pop
or
jne
adc
sarl
ret
mov
stc
out
scas
repnz
xor
xchg
in
cmpsl
xchg
in
push
ljmp
xchg
ss
adc
dec
aas
fwait
call
xor
mov
xchg
in
repz
dec
hlt
push
imul
movsl
jge
push
jne
or
mov
push
or
add
xadd
mov
test
enter
adc
jnp
xchg
xlat
icebp
mov
out
or
ja
mov
stos
lods
sub
mov
sbb
outsb
jbe
scas
ljmp
jp
xchg
xor
out
jge
push
pop
jl
les
leave
shll
fldenv
insb
cmp
and
cmp
sbb
mov
mov
hlt
mov
xor
test
dec
test
nop
inc
mov
dec
jns
mov
data16
pop
inc
mov
cli
stc
adc
in
fs
test
ret
pop
adc
push
out
mov
or
loop
ss
hlt
lcall
shr
push
and
aad
insl
icebp
pop
jo
test
xchg
popf
fsubp
fs
sbb
out
mov
mov
or
cmp
popa
shrb
cmpsl
movsw
mov
xchg
inc
imul
and
inc
aas
iret
int
sub
ja
pop
jp
jg
add
clc
sbb
jne
out
or
inc
dec
and
mov
sbb
shl
add
pop
into
push
in
sbb
into
ljmp
mov
lock
xchg
mov
out
mov
pop
imul
scas
and
aam
jmp
pop
out
jmp
loope
subl
jbe
pop
lahf
mov
inc
mov
and
out
pop
add
sahf
dec
sahf
inc
add
test
jnp
das
stc
outsl
cmpsb
mov
lock
int3
cmp
jl
insb
push
xchg
popl
std
jns
jnp
cmp
push
test
iret
pop
daa
incb
sbb
movsl
dec
jp,pn
je
jmp
jb
mov
mov
ret
xchg
enter
xchg
push
and
fsts
sub
push
jnp
mov
dec
in
xor
cmpsl
cwtl
repz
adc
out
xchg
mov
lods
xor
loope
cmpl
enter
and
sbb
and
inc
scas
aas
arpl
call
ds
pop
std
test
andb
out
je
leave
sar
dec
cmp
outsl
arpl
xchg
lcall
sub
ror
mov
mov
cltd
push
pop
dec
and
out
out
cmp
pusha
inc
fisttpl
xchg
stc
jbe
and
inc
add
dec
adc
mov
enter
and
ja
xor
nop
push
inc
sbb
les
pop
xchg
xchg
ds
mov
and
imul
inc
adc
test
jecxz
dec
mov
or
sbb
cmpsb
in
clc
mov
les
aaa
mov
gs
mov
sub
dec
mov
adc
cmp
imul
or
and
out
stc
aam
enter
inc
or
aam
pop
nop
jae
or
out
xchg
mov
fdivrs
adc
in
leave
ds
mov
ds
mov
ja
test
adc
mov
stc
cmovbe
mov
push
push
loop
add
out
lds
in
inc
push
add
mov
loope
sub
fstpt
add
cli
fcoms
and
pop
jns
mov
rorb
clc
mov
inc
inc
or
mov
adc
bound
stc
push
add
fsubrs
divl
lods
push
mov
inc
mov
jno
cli
lret
xchg
pop
push
out
mov
data16
push
jmp
jbe
cmpsl
lods
cli
lods
cmp
add
sbbl
enter
xchg
fisubrl
or
cmp
dec
xlat
in
in
pushf
sub
mov
push
call
rcl
stos
cld
int
adc
hlt
mov
xor
adc
xchg
xchg
ficoml
adc
xor
jecxz
jbe
int3
rcll
shlb
mov
je
in
ss
into
arpl
fdivr
cli
idivb
mov
cmp
enter
mov
out
jo
jge
dec
sub
cmp
xchg
xchg
xlat
xchg
or
adc
add
bound
loop
mov
pop
mov
or
jns
sbb
mov
jmp
lock
mov
xlat
dec
dec
insb
cmp
mov
pop
or
mov
pop
iret
xchg
sbb
daa
pop
lods
dec
push
cli
popa
or
sbb
rclb
mov
pop
dec
loop
mov
ss
xor
outsl
and
sub
test
popf
mov
hlt
popa
sbb
mov
in
fcompl
dec
xchg
fucomp
aam
and
pop
testb
enter
fldcw
loop
add
add
sub
jns
loop
adc
icebp
divl
add
dec
inc
lds
push
stos
inc
jp
packsswb
adc
call
insb
ret
rclb
sbb
and
and
add
xchg
push
pop
mov
and
adc
mov
dec
and
and
ds
xor
and
lock
dec
popa
xor
or
jl
cmp
cmpsl
dec
and
adc
cmovb
xchg
aam
xlat
xor
mov
loopne
imul
ret
stos
jo
adcb
adc
cmp
dec
pop
ret
int
jbe
mov
inc
shl
mov
stos
mov
pushf
mov
loopne
sub
jns
jle
jns
faddp
xchg
xor
fnstenv
rclb
mov
mov
fwait
fwait
stos
imul
sub
fsubrl
jno
pop
leavew
fcmove
stc
mov
sbb
or
repz
mov
mov
xchg
mov
xor
stos
cmpb
ret
fadds
ret
nop
inc
fcoml
nop
incl
out
and
popa
in
sub
xchg
aas
inc
xorb
sub
cmp
mov
rorb
jmp
fsubr
mov
mov
mov
gs
loope
loopne
mov
jnp
xor
mov
push
mov
and
lea
daa
pop
hlt
mov
pop
rsqrtps
dec
mov
bound
ret
cwtl
cmpsl
dec
test
or
stc
in
and
fs
jbe
lcall
lods
add
mov
das
stos
pop
mov
xor
pop
adc
movb
je
xor
dec
js
das
ret
repnz
arpl
and
fisttps
jle
mov
fidivrs
xor
and
mov
aad
push
mov
sub
addr16
sbb
aas
jbe
lds
fnstcw
je
jge
cli
gs
cltd
sub
lahf
loop
push
adc
adc
dec
cmp
das
je
data16
and
cmp
mov
mov
int
inc
lea
js
pop
jl
jb
or
loop
pop
je
cmp
adc
add
or
adc
lods
sbb
hlt
add
sub
dec
lds
jae
test
sub
adc
lods
test
lods
aas
adc
push
icebp
cmp
xor
ret
adc
xor
das
ss
ds
iret
cmp
xlat
jle
mov
sub
cmc
push
mull
out
xor
pusha
out
scas
push
jle
fmulp
fimuls
sbbl
mov
iret
xchg
push
jge
push
loopne
cmpsl
loop
xchg
mov
cmc
std
lret
gs
sbb
pop
sbb
inc
pop
sub
adc
mov
xor
lret
sub
or
hlt
lds
xor
xlat
or
lret
and
sub
subb
mov
push
mov
sub
gs
mov
cmp
or
dec
ljmp
fdivrl
cmp
mov
rcrb
lods
fs
mov
mov
xor
test
orl
aaa
movsb
mov
jle
adcb
fistps
subb
testl
push
xchg
dec
mov
jb
fidivrl
xchg
into
in
sbbb
in
in
enter
add
divb
inc
mov
imul
sub
sbb
mov
dec
fcomps
clc
xchg
cmpsl
sub
xchg
add
pop
sub
leave
xchg
mov
imul
dec
cmp
shll
push
test
hlt
jnp
out
into
jns
outsb
add
cwtl
fisttpll
pop
and
in
cmp
in
add
dec
pop
lods
mov
fists
push
xchg
cli
in
ret
mov
xor
xor
adcl
sbb
int3
xchg
enter
jae
or
stc
jecxz
jg
push
xchg
mov
in
sbb
iret
and
call
mov
mov
jno
jle
lret
pushf
pop
sbb
pop
mov
jno
imul
stos
push
test
pushf
lods
ret
pop
sbb
test
xor
mul
xchg
mov
dec
enter
dec
add
rcrb
repz
dec
stos
cmovge
scas
push
test
or
insb
popa
pop
sub
lahf
mov
test
stc
movsb
aad
call
movsb
pusha
jl
add
adc
push
mov
xchg
dec
sbb
sarl
adc
mov
xchg
pop
cmp
add
mov
dec
je
pop
lods
xor
clc
in
mov
mov
int3
pop
push
adc
pop
sub
cmp
mov
xor
pop
jno
lahf
mov
add
enter
pop
into
das
ljmp
mov
xchg
mov
xchg
jle
mov
pop
pusha
push
sti
xchg
jne
in
dec
loop
ljmp
cmp
mov
lea
je
or
pop
cmc
push
addr16
cmc
and
xchg
xchg
scas
add
sbb
push
fmull
cmpsb
xchg
and
and
pop
fmul
clc
inc
dec
or
ret
add
mov
adc
pop
les
les
jecxz
ss
stc
jo
add
int3
pop
adc
jns
outsl
mov
mov
mov
in
dec
cmpsl
jno
xor
fdivrs
cmp
inc
push
sbb
adc
jecxz
ss
rolb
sub
scas
sub
and
icebp
jge
mov
in
pushl
add
psrld
movl
fmuls
xchg
adc
in
mov
scas
jne
das
inc
add
shrl
jle
lret
cmpsb
fisttpl
or
dec
xchg
cmp
and
inc
sbb
lahf
inc
mov
xchg
mov
and
xchg
xchg
push
jp,pt
dec
cmovg
jle
nop
cltd
inc
sub
and
push
insl
pushf
lret
out
cmp
dec
mov
pop
push
movsl
push
push
push
pushf
cmp
xlat
jp
mov
adc
insb
lods
sti
out
mov
or
stos
add
push
inc
rclb
add
push
jp
sub
mov
xor
cmpl
pop
aam
jno
outsl
mov
nop
loop
dec
subb
push
jno
scas
xchg
gs
jns
ret
movsl
xchg
clc
cli
and
jle
out
lds
pusha
cs
pop
movsl
insb
inc
mov
inc
ja
into
push
popa
test
xor
mov
add
ret
cmc
push
or
ljmp
mov
jge
mov
cmpsl
cld
fnstcw
or
push
sahf
sub
cs
cltd
mov
es
sub
lahf
xchg
sub
sbb
xchg
pop
psraw
push
shlb
cltd
cltd
into
test
xchg
push
in
push
shll
cmp
jne
pop
pop
push
mov
cvttps2pi
outsb
mov
mov
js
jle
ret
jl
jmp
and
mov
fildll
cmp
call
fistpll
test
cmpsl
imul
mov
cli
aad
les
mov
inc
mov
or
das
or
stos
adc
mov
adcb
cs
push
xchg
test
jge
inc
mov
push
test
fidivl
test
dec
cmp
inc
adc
arpl
sub
jp
popa
iret
popa
fwait
xrelease
cmp
cli
cltd
push
xchg
add
les
sub
add
lcall
push
dec
cmp
add
mov
push
cmp
mov
mov
daa
out
pop
call
gs
add
loopne
mov
fildl
mov
inc
mov
bound
or
adc
mov
inc
nop
stos
and
test
ror
inc
fwait
mov
test
js
decb
or
pop
push
str
xor
cli
aas
lods
mov
out
daa
xor
sbb
adc
mov
std
mov
in
sub
in
mov
xlat
clc
movsl
cmp
aam
cmp
test
push
lcall
sbb
push
shlb
xchg
cmp
loopne
cmp
enter
pop
mov
mov
pusha
inc
xchg
enter
cmc
xchg
and
out
enter
pop
push
and
addb
daa
push
and
mov
les
rcll
shrl
in
lods
fnsave
push
xchg
xor
cmp
jge
jns
dec
push
jp
jmp
rol
mov
or
xchg
outsl
cltd
sub
add
sub
jle
adc
push
stc
mov
pop
in
lods
mov
or
push
jns
add
cmpsl
mov
cmp
xchg
test
pop
adc
xchg
imul
fcoms
sti
or
loop
shlb
push
xchg
xchg
inc
jg
loop
xor
test
push
out
push
imul
int
dec
cmp
inc
fisttpll
leave
inc
fbld
out
repz
jns
in
ficompl
int3
dec
pop
ret
push
sub
repnz
or
mov
or
and
inc
gs
adc
sub
mov
jle
lcall
xor
es
cmp
cmp
xor
insb
iret
sbb
fcmovnb
or
jle
sbb
mov
jmp
cmpsl
ds
subl
adc
icebp
rcrl
cmp
enter
movsb
lret
aam
or
jle
mov
jae
pop
jg
arpl
pushf
ret
pop
in
test
mov
das
mov
pop
dec
lcall
inc
jnp
nop
movsb
mov
pop
dec
jb
mov
mov
mov
call
sbb
fidivrl
sbb
pop
mov
push
dec
adc
jo
out
nop
inc
push
pop
les
sbb
les
xchg
aam
mov
and
jae
repz
add
pop
ret
inc
dec
pop
pop
cmpsl
push
pop
push
data16
test
push
imul
add
imul
das
int3
addr16
xchg
repz
sbb
mov
inc
xchg
or
es
insb
insl
push
or
rcr
dec
int3
cmp
and
in
lret
cmp
fistpl
fcomps
push
pop
sbb
cmp
ds
jl
jp
fimull
jns
xchg
xor
jne
or
sub
loop
ss
pushf
inc
sbb
stos
adc
fistps
jmp
icebp
cmpsl
xor
cwtl
jne
mov
jp
sbb
mov
sub
or
adc
aad
and
and
push
push
push
movb
movsl
mov
xor
dec
aam
push
or
dec
out
dec
into
push
mov
rorb
xchg
pop
jb
movsl
in
inc
mov
pop
push
lcall
add
icebp
lcall
xor
or
cwtl
fildl
shrl
xor
push
arpl
mov
or
mov
icebp
push
push
out
pop
inc
add
imul
pop
adc
dec
aad
test
out
loop
adc
and
xor
or
inc
fwait
bound
pop
fmuls
cmp
jnp
mov
mov
mov
or
cwtl
sbb
popa
push
aaa
sbb
sub
inc
loope
xchg
lds
lcall
or
or
adc
test
jmp
or
popf
leave
inc
fstpl
xchg
inc
cltd
jmp
sub
pop
mov
pop
xchg
dec
push
leave
repz
test
xchg
jnp
imul
mov
fucomp
inc
xor
or
sub
andb
loopne
jp
idiv
lret
in
jb
subb
pop
mov
mov
movlps
or
loopnew
jg
sahf
lds
test
jp
push
inc
push
jbe
pushf
in
or
dec
int3
in
test
push
xchg
cpuid
imul
push
jmp
cmp
xchg
mov
leave
jp
movsb
lods
or
mull
pop
xchg
scas
sub
ljmp
outsb
mov
cwtl
aas
jb
fsubrl
adc
xchg
lret
sbb
push
in
fistpl
test
adc
loopne
ds
push
ds
adc
sbb
addr16
mov
lods
xor
adc
and
xchg
add
jp
push
int3
rorl
xlat
insl
and
ret
cmp
xchg
pop
sbb
push
add
pop
push
aaa
mov
scas
outsl
jge
sti
movsb
mov
pop
add
mov
repnz
roll
lahf
add
sbb
pop
test
dec
and
sub
andl
insl
test
jmp
or
jecxz
adc
jnp
inc
cmp
jno
cmovl
push
mov
pop
pop
pop
dec
jl
mov
xor
lods
gs
sahf
pop
or
repnz
cli
xchg
popa
or
roll
sub
movl
inc
inc
test
dec
int3
pcmpeqd
filds
hlt
xor
loopne
aaa
jne
insb
dec
pop
sbb
in
lods
dec
lods
popf
mov
sbb
cld
icebp
dec
mul
je
ds
sub
scas
cltd
mov
xlat
push
pop
test
xchg
mov
sti
out
dec
and
or
jbe
shl
push
ljmp
xor
repz
cld
test
xchg
mov
pop
and
or
mov
mov
stos
xchg
lahf
incb
or
repnz
ljmp
pop
pop
mov
cwtl
aaa
pop
xor
mov
negl
add
add
add
add
add
add
add
add
mov
add
push
add
add
add
add
add
add
add
mov
add
add
add
add
add
push
inc
add
add
ljmp
mov
lods
clc
js
js
add
add
add
add
adc
add
add
add
add
add
adc
adc
add
add
aad
add
add
add
add
add
add
repz
add
add
and
imul
jae
dec
dec
push
and
and
push
js
rclb
push
push
lea
add
mov
or
lcall
lea
dec
or
add
add
mov
add
lea
call
adc
inc
mov
and
in
push
add
add
adc
mov
add
adc
or
std
je
push
nop
and
or
push
call
push
push
push
clc
test
lea
adc
enter
inc
call
push
jne
lea
add
add
xorl
add
add
int3
je
inc
inc
insb
add
inc
gs
mov
outsl
gs
inc
dec
gs
jns
dec
pop
gs
je
dec
add
fs
add
fs
dec
insl
jns
cmpsb
gs
outsb
jae
push
push
pop
outsl
jbe
cs
arpl
add
add
and
mov
add
add
ret
lahf
adc
cmp
ja
sbb
jno
dec
jbe
out
mov
movsb
jae
lods
jb
push
inc
fwait
pop
repz
ljmp
outsb
and
push
mov
sbb
sub
pop
stos
push
sub
jnp
cmp
inc
xor
or
xchg
jmp
xchg
pop
hlt
scas
cld
sbb
inc
dec
dec
cmpl
adc
adc
mov
push
mov
or
adc
sarl
add
lds
sub
pop
cmp
stc
test
inc
inc
or
fbld
xchg
das
test
xor
repz
jnp
push
stc
jge
addr16
in
xor
or
jbe
pusha
mov
mov
pop
jl
adc
mov
or
hlt
xlat
idivl
pop
mov
xchg
std
sub
xor
xor
test
repnz
mov
push
jp
cmp
jae
xlat
test
lock
lods
mov
out
inc
cld
pop
sbb
orl
mov
adc
popf
fadd
loope
sbb
scas
ss
jmp
out
adc
aam
cli
xor
lds
jmp
mov
jbe
push
or
jecxz
push
std
jb
and
out
cmp
icebp
ret
test
lcall
push
cmpsl
pop
push
notb
and
lret
popa
or
push
mov
repz
mov
je
mov
rorl
inc
xor
sbb
outsb
adc
add
fwait
popa
push
daa
jg
stos
push
scas
sbb
cltd
and
inc
pushf
fwait
jns
mulb
mov
dec
add
and
jmp
xchg
repz
fisubrl
addr16
daa
mov
mov
ja
sub
lret
push
popf
out
das
add
mov
pop
sub
iret
fcoms
sub
rclb
nop
sbb
jno
ret
cmp
cmc
cli
xchg
ficoml
jmp
mov
jmp
les
ret
lods
aad
mov
mov
aad
bound
push
xchg
push
cmp
inc
add
xor
inc
xchg
loop
lock
pop
jnp
cmc
pushf
mov
or
leave
sbb
call
cmp
pushl
sbb
pop
bswap
sub
add
imul
mov
sbb
pop
push
pop
lcall
push
loope
loopne
jecxz
in
idiv
xor
mov
inc
mov
cmp
jge
mov
add
push
add
test
jne
fiadds
xchg
dec
cwtl
jmp
pop
xchg
sub
rcrb
pop
cld
or
sarl
outsb
mov
xchg
xchg
mov
fsubr
stc
test
loop
mov
js
add
in
jmp
inc
jno
xchg
push
sub
or
jecxz
pusha
sbb
adc
addr16
dec
mov
rclb
pop
push
dec
ret
sub
add
ret
leave
aad
pusha
sbb
imul
mov
xchg
lods
mov
cmp
pop
push
aad
imul
sbb
or
cmpsl
mov
xor
mov
str
mov
out
push
and
shll
popa
inc
cld
inc
sbb
xchg
ja
out
push
sub
loopne
js
scas
adc
mov
data16
pop
inc
ljmp
mov
adc
sarb
rorl
aaa
cltd
sbb
mov
dec
push
inc
mov
ja
fcom
repz
fwait
test
xchg
adc
xchg
fnstsw
loope
pop
les
dec
push
adc
test
cmp
imull
add
lock
or
flds
xor
js
stc
imul
push
outsl
out
lds
mov
jmp
outsb
out
mov
cmpsb
subl
jmp
fbld
sbb
out
push
clc
iret
add
fidivl
pop
orl
and
enter
push
add
loopne
adc
lods
lds
jp
test
std
cli
lahf
fwait
push
push
fwait
enter
cltd
push
fmull
out
data16
std
xor
jecxz
mov
sbb
pop
push
xor
add
push
and
xchg
cs
fdivr
and
repz
dec
fistl
shll
dec
cmp
dec
daa
jmp
lock
aad
add
int3
xchg
out
adc
inc
add
mulb
mov
add
inc
scas
push
pop
mov
int3
and
cmc
lret
xchg
jle
cmp
je
push
cmc
and
mov
mov
lock
inc
xor
pusha
repnz
sbb
push
das
sarl
lret
adc
movl
sbbl
in
js
daa
xchg
orl
dec
scas
or
or
addr16
mov
push
fstpt
mov
hlt
adc
in
or
scas
in
add
pop
les
repz
inc
in
in
and
push
cli
scas
xor
out
in
push
sbb
mov
les
add
push
fisttpll
jmp
mov
mov
iret
stos
push
add
mov
and
xor
mov
in
or
inc
sub
stos
scas
mov
push
cmp
inc
cwtl
shll
or
jo
mov
add
cmpsl
add
scas
dec
cltd
xchg
lret
xchg
xchg
sub
je
dec
fucomp
dec
push
push
mov
or
lods
orl
call
int3
mov
push
lret
pop
mov
jp
and
dec
fimuls
xor
dec
jp
xchg
pop
sub
fidivrl
sbb
sbb
sahf
push
cmp
push
sbb
inc
sub
mov
mov
ret
sbb
les
out
adc
push
add
lds
js
cmp
mov
or
adc
sarl
enter
in
sarl
fwait
pop
xlat
leave
mov
repz
xor
call
pop
lcall
pop
in
lods
lods
lods
cmpsl
hlt
mov
sub
mov
out
mov
loopne
adc
cld
repnz
pop
dec
cmp
test
movsb
add
aas
fcmovbe
daa
loopne
pushf
lods
xchg
pusha
sahf
ja
mov
addr16
fbstp
aam
lods
sbb
adc
popf
mov
inc
rorb
jnp
sub
mov
mov
jno
fcmovne
int
int3
pusha
sbb
subl
ficomps
adc
pop
mov
adc
inc
outsl
aas
mov
sub
or
stos
sub
mov
test
inc
stos
dec
fistl
fs
lock
mov
imul
inc
pop
sarb
dec
sbb
gs
cmp
cmp
std
and
movsl
fidivrl
dec
mov
addr16
iret
xchg
outsl
push
push
test
movsb
xchg
mov
xor
lods
mov
out
sar
loop
xchg
test
mov
les
add
ds
js
pop
push
test
aaa
in
popa
xchg
mov
cmp
xchg
cld
loop
shll
push
jbe
jns
in
jecxz
shlb
jns
dec
fimull
cmp
mov
mov
insb
fildl
sub
push
repnz
cmp
fdivr
cmpsl
ret
imul
adc
cmp
roll
fiaddl
inc
stos
push
movsl
pop
sub
sub
clc
movb
outsl
xor
enter
jne
mov
xchg
aas
cmpsl
bound
and
pop
test
fdivp
insl
nop
sahf
out
sbb
into
sbb
aam
addl
adc
out
insl
push
push
fisubrl
jbe
stos
fildll
add
fimull
mov
adc
cmp
pushl
mov
pop
push
iret
mov
pusha
push
mov
cmpsl
push
enter
and
aaa
mov
mov
loope
out
jmp
inc
xchg
adcl
and
xchg
pushf
sbb
mov
xor
xchg
inc
fcmovb
rcll
mov
aad
xchg
aas
mov
outsl
xchg
mov
loopne
lock
lret
insl
sbb
insl
lea
imul
inc
ja
mov
pop
sbb
je
add
and
or
mov
jne
sub
das
add
cmpsl
jne
stos
jo
pop
out
aad
pop
int
mov
orb
mov
inc
dec
scas
dec
mov
jbe
xor
lret
jmp
jp
xchg
push
ja
imul
pop
test
rcl
dec
and
fwait
loopne
in
jnp
push
lods
in
movsl
sub
xor
arpl
aam
push
inc
push
fldcw
inc
dec
stc
cmp
repnz
fadds
loope
or
loopne
bound
lcall
adc
mov
mov
jmp
mov
jbe
xchg
es
lock
negb
sub
insl
pop
clc
shrl
outsb
push
idivb
xor
add
jno
shll
les
pop
call
divb
aas
mull
shll
push
pop
adc
fsubs
and
mov
adc
out
add
mov
jae
je
adc
and
inc
ds
arpl
cmp
popf
fld
add
mov
xor
popf
repnz
ret
fyl2x
mov
scas
outsb
jns
lahf
or
scas
gs
out
jg
cltd
fstl
fldenv
xchg
xor
jo
enter
jnp
sub
movsl
outsl
popa
push
adc
insl
fucomip
xchg
or
leave
lock
or
xchg
jo
adc
add
hlt
jg
imul
inc
push
in
and
imul
inc
punpcklwd
pop
lret
sbb
lahf
leave
aad
pop
mov
or
jle
push
mov
inc
jbe
jbe
cmpl
test
test
ret
fwait
call
mov
in
iret
xor
aad
pop
enter
repnz
sub
pop
inc
add
sbb
xor
repz
mov
mov
stos
jl
jg
mov
mov
lds
dec
out
mov
dec
stos
fwait
jns
add
jno
cmp
dec
shlb
adc
call
cmc
rcrb
push
pop
mov
stc
fwait
aam
or
in
iret
stos
out
ds
loope
jp
adc
xor
cld
xchg
or
js
dec
in
inc
pop
jecxz
or
mov
pusha
pop
bound
imul
fsts
repnz
inc
adc
ret
fs
push
stos
jmp
pop
pop
mov
pop
test
and
jnp
adc
int3
cmp
gs
lock
adc
sbb
flds
into
jge
push
stos
dec
bound
js
mov
call
mov
dec
adc
shlb
and
icebp
xor
orl
sub
lcall
push
jg
ret
push
adc
and
add
jp
mov
stc
addl
mov
pop
inc
push
push
mov
lock
pop
inc
lahf
add
adc
iret
or
mov
jge
xchg
and
repz
or
or
lret
mov
jo
test
roll
test
jb
movsl
mov
adc
sbb
data16
notl
cltd
or
inc
lcall
xor
std
mov
xchg
fidivs
mov
xchg
sub
pop
xor
mov
loopne
push
aad
add
or
xor
adc
out
enter
cs
sub
push
xor
je
inc
xchg
dec
rcl
mov
mov
shrb
inc
cmpsb
cwtl
sahf
and
dec
es
arpl
mov
rorl
inc
and
repz
jae
add
jle
cmpsb
cmp
sbb
cmp
mov
popf
pop
mov
ljmp
aaa
dec
dec
out
mov
addr16
push
mov
pop
jmp
jae
jb
dec
pop
mov
decl
jnp
pop
lods
jae
clc
mov
xchg
ss
stos
test
inc
popl
mov
into
xchg
stos
out
adc
mov
or
and
pop
push
int3
jbe
sub
pop
adc
pop
inc
outsb
incl
inc
ss
daa
xchg
dec
xor
adc
es
xor
mov
inc
fisttpll
mov
int3
in
jp
dec
mov
movsl
out
clc
lds
out
out
jg
mov
ror
outsb
popf
push
je
into
sbb
pushf
mov
test
call
test
sbbb
fsubrl
xchg
fsubr
inc
xchg
or
dec
jmp
dec
pop
jl
insl
pop
in
rcrl
ds
jecxz
sub
xchg
pop
arpl
out
and
jmp
xor
shll
rorl
subl
jge
push
jmp
bound
push
jl
mov
push
stc
dec
mov
ss
and
push
xor
in
leave
xchg
xchg
push
inc
push
js
sub
xchg
pop
ret
cwtl
inc
stc
dec
rcll
sub
sbb
scas
aaa
out
popf
cmp
pop
sub
enter
jbe
mov
cmpl
cmp
and
mov
sub
cld
in
lret
test
cmpsb
movl
dec
aam
rorb
aam
lds
daa
fs
dec
cwtl
cs
fisubrs
sbb
pop
aam
popa
nop
repnz
jl
xchg
cmpsl
push
sbb
sahf
sti
xchg
imul
dec
cmp
pop
nop
loop
sarl
mov
lret
sahf
in
inc
sahf
add
test
call
clc
loop
adc
xchg
mov
repnz
push
imul
push
pop
call
jle
nop
icebp
imul
push
xor
adc
fs
and
dec
dec
dec
add
mov
js
out
adc
cmp
cmpsl
into
cmp
add
add
test
mov
mov
cmp
and
pop
push
mov
and
scas
scas
or
push
inc
mov
test
sbb
mov
and
mov
bound
mov
int
out
adc
nop
fcomps
pop
adc
imul
inc
lea
stc
ret
mov
jno
push
addr16
adc
cltd
notb
dec
in
gs
dec
sbb
insl
or
out
nop
outsb
lds
outsl
outsl
inc
and
js
ret
fldcw
mov
add
xchg
sbb
xchg
add
cltd
add
sbb
pushf
xor
cmpsb
test
hlt
jnp
adc
fwait
loope
and
fadds
xor
in
je
sbb
xor
jmp
add
je
in
mov
lds
std
adc
das
shrb
cli
sbb
sti
dec
dec
fsubrs
loop
dec
pop
push
ss
push
jns
sbb
loopne
sbb
xchg
mov
inc
adc
pop
icebp
pop
imul
jmp
lods
fdivrs
mov
mov
popa
pop
jmp
xor
sti
adc
mov
test
daa
popa
lods
shrl
mov
jnp
pushf
gs
je
dec
popa
mov
jns
push
in
sbb
lock
inc
push
xlat
data16
into
push
cmp
sub
jns
jno
subl
dec
cmc
or
flds
mov
sub
bndstx
repz
mov
shl
xlat
insl
lahf
sti
sbb
loopne
and
push
sbb
add
cwtl
rcrb
outsl
add
push
dec
pop
xchg
xchg
hlt
dec
cmc
mov
xor
mov
jne
mov
add
out
addr16
push
ja
add
mov
ljmp
leave
mov
fs
pop
gs
mov
outsb
push
cmp
mov
lcall
mov
mov
les
adc
push
iret
lret
icebp
push
cs
fdivr
adc
movsb
outsb
mov
or
and
mov
cmc
jecxz
loope
insb
mov
push
int
xchg
in
sub
jl
mov
out
clc
mov
testl
cli
mov
ljmp
mov
and
ss
jmp
xor
js
int3
aam
jecxz
jecxz
rcrl
sar
call
fisubrs
fwait
push
and
push
add
iret
mov
jo
and
stc
hlt
hlt
jno
sub
subb
ja
dec
rsm
insl
jo
shrl
mov
fs
dec
sbb
lods
add
punpcklwd
or
inc
repnz
test
adc
mov
jo
jb
mov
jecxz
mov
and
xorl
imul
cmp
icebp
lcall
push
cmp
and
mov
or
jle
inc
out
jl
daa
cmpsb
scas
dec
fldcw
sbb
and
imul
xor
cmp
xchg
push
xor
call
xor
aam
gs
stc
adc
stc
xor
call
addl
and
js
stc
in
push
jg
outsl
lods
push
in
mov
cmpsb
jle
jae
push
add
movsl
out
scas
mov
leave
es
dec
cli
pop
xor
jns
jne
push
leave
mov
xchg
dec
xor
or
jg
imul
loop
push
les
cmpsl
cmpsb
sub
shrb
mov
insb
lea
xor
enter
pop
aam
add
ret
inc
cmp
xor
fldt
fsubrs
pop
sub
xchg
sub
repz
jge
lret
pop
data16
or
popa
pusha
addr16
pop
jp
jbe
subl
in
stc
mov
pop
out
mov
sbb
inc
pop
les
lahf
orl
outsl
cmp
add
mov
adc
ljmp
cmpsl
jns
mov
scas
int
pushf
push
lea
sub
cmp
mov
or
xor
icebp
dec
sbb
push
jle
lods
movsl
insb
or
fs
cli
mov
xlat
adc
push
es
pop
repnz
xchg
call
rorb
pop
test
aad
dec
mov
xchg
pop
cmp
sarl
xchg
dec
cs
movsb
push
test
xchg
pop
add
ss
cmp
mov
adc
test
data16
mov
ljmp
xor
cmp
mov
or
movsl
mov
jnp
lods
pop
and
ret
jmp
stos
fistpl
les
push
out
pop
loope
repz
xlat
subl
scas
outsb
loopne
and
imulb
aas
sbb
inc
mov
repz
mov
int3
push
outsb
xchg
adcl
cmp
inc
stc
clc
shld
xor
inc
test
jl
xor
repz
cmp
mov
imul
fdivrs
mov
outsl
int
sub
and
inc
push
ds
xchg
mov
out
lcall
loop
mov
std
add
jnp
mov
or
mov
inc
cmp
movsl
std
sbb
les
cld
mov
and
mov
mov
pop
push
loopne
mov
clc
pop
in
mov
sub
mov
xchg
mov
add
ret
push
sarb
inc
outsb
int3
fidivl
js
cli
rdtsc
mov
aaa
adc
or
shlb
leave
into
fmull
test
mov
mov
mov
and
xchg
pop
pop
push
adc
xlat
in
daa
push
enter
fisttpll
mov
sub
dec
test
dec
pop
cltd
mov
rcl
fldenv
adc
jge
add
push
add
aad
mov
sbb
int3
inc
scas
xchg
push
out
popf
ss
inc
push
cmpsl
sub
aam
loop
or
int3
mov
ffreep
mov
xor
iret
addb
cmp
fsubs
insl
mov
sbb
iret
adc
jne
mov
ret
jnp
mov
sub
jge
outsb
sub
push
hlt
cltd
rclb
movsb
shrl
xor
pop
sub
xor
ja
jg
enter
dec
or
je
into
pushf
sahf
or
pop
inc
mov
test
das
repz
dec
into
popa
scas
call
cmp
inc
add
mov
xor
pop
movsl
ds
incl
xor
adc
add
mov
inc
loopnew
adc
xor
sbb
cwtl
xor
mov
shrb
xlat
aad
mov
data16
repnz
or
dec
pop
jae
and
inc
cmp
in
cmp
mov
pushf
inc
jp
lret
lret
pop
fcomip
jecxz
aaa
fists
add
out
inc
push
sbb
push
mov
and
push
or
test
xor
sbb
int3
pop
rorl
xchg
fmull
xchg
rcrb
xchg
ja
fsub
mov
mov
push
nop
sub
lret
adc
stos
imul
test
pop
call
icebp
arpl
jge
test
test
add
sarl
stos
bound
popf
sbb
int3
loope
mov
out
lods
inc
add
add
mov
add
test
add
add
add
movsl
arpl
add
add
repnz
add
add
ja
mov
call
in
push
push
push
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
mov
pop
add
mov
mov
cmp
je
cmp
jg
mov
mov
mov
movb
movzbl
sub
inc
test
jne
jmp
mov
movb
call
mov
mov
movzbl
sub
je
incl
jmp
push
push
push
push
mov
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
pop
add
add
add
pop
add
and
add
add
aad
and
add
inc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
sbb
pop
add
add
and
outsb
das
inc
dec
pop
in
imul
push
outsb
or
jbe
cmp
leave
pop
in
dec
je
cld
jne
decl
les
lea
add
adc
lock
mov
adc
insb
decl
pop
in
mov
add
push
icebp
ret
dec
add
adc
sbb
add
incl
push
push
cmp
inc
cmp
int3
rorb
mov
inc
adc
loopne
cld
push
test
jne
add
sar
pop
pushl
mov
out
pop
xor
add
call
stos
push
add
lea
adc
pop
add
dec
mov
mov
or
add
rclb
push
loopne
add
rolb
adc
add
add
add
add
add
add
add
add
mov
sbb
add
sbb
add
gs
and
inc
insl
je
gs
je
jo
sbb
outsb
jo
mov
inc
gs
add
gs
add
inc
dec
push
insb
push
inc
add
jb
addr16
gs
out
add
xor
add
xor
add
add
jae
add
add
out
add
ret
sub
dec
push
insb
testl
in
cmp
int3
stos
out
mov
push
sub
xchg
and
lahf
lcall
inc
dec
push
in
icebp
rcr
xchg
jns
sub
mov
imul
cmpsb
imul
jecxz
ss
jns
out
fwait
lods
mov
jg
je
insl
sbb
dec
jp
mov
aas
push
or
mov
dec
mov
lods
enter
rorl
mov
jmp
leave
cmp
rorb
sbb
push
dec
rclb
aad
or
stos
cs
les
mov
pusha
lds
mov
inc
xor
ja
pushf
push
call
arpl
jns
xchg
mov
or
int3
insb
cmpsl
xchg
adc
repnz
add
adc
psllw
dec
xchg
cmpsl
scas
jae
repnz
xchg
inc
pushf
xchg
add
enter
lret
hlt
cmp
push
das
adc
jecxz
std
sbbb
jae
add
lcall
jo
push
jmp
lods
sbb
cmp
or
hlt
andb
sti
aas
imul
and
leave
xchg
cmc
sti
mov
inc
cmp
imul
out
push
add
repnz
mov
pusha
push
clc
mov
not
xchg
sbb
jl
push
xchg
into
push
push
in
js
jae
mov
scas
repnz
mov
incl
movsb
fmull
int
sbb
test
xchg
xor
or
or
into
adc
adc
xor
xchg
adc
ljmp
ret
xor
inc
mov
pop
mov
mov
ret
or
nop
push
mov
jo
jo
xchg
dec
cmpsb
jecxz
cli
push
pop
jb
insb
pushf
push
imul
cld
imul
sub
sub
subl
lods
push
das
inc
or
xor
stos
fistpl
leave
imul
shr
pushf
dec
pop
jae
daa
test
sub
cmpsb
dec
adc
pop
mov
push
cwtl
and
xchg
jne
lods
xor
daa
or
movsb
dec
movsl
ds
outsl
lahf
pop
inc
cmpsb
add
jns
leave
mov
out
lahf
out
rcl
cmp
push
test
lret
mov
add
mov
jo
shld
xor
negb
xchg
mov
sub
int3
test
pop
mov
push
or
xchg
push
outsl
xlat
xchg
in
pop
mov
int3
cmpsb
out
fldt
es
outsb
shlb
and
sbb
lret
mov
push
int3
and
dec
out
dec
mov
xor
pop
and
sbb
mov
xchg
adc
mov
inc
pop
sbb
rclb
es
int3
test
push
mov
or
ret
call
jo
shl
cwtl
ret
cld
in
in
push
push
xchg
jne
push
fists
mov
pinsrw
push
mov
xchg
jb
arpl
push
ss
andb
lcall
lret
sub
arpl
xorb
sti
clc
test
sbb
pop
out
cmp
adc
xorl
rorl
sub
and
call
repnz
xchg
out
popa
adc
and
repnz
xor
sahf
inc
xorb
adc
push
adc
inc
cmp
scas
ds
mov
add
inc
dec
dec
and
pushf
inc
push
mov
dec
lods
rorb
adc
stos
stos
jns
out
popl
pop
data16
lahf
mov
testb
sub
clc
pop
in
inc
or
int
enter
sub
aas
lahf
cmp
pop
sbb
or
dec
leave
pop
mov
iret
mov
xor
or
sub
mov
jb
mov
sbb
daa
jmp
cmpsb
push
out
scas
mul
sbb
mov
jge
gs
shll
je
jge
shll
loopne
mov
mov
and
insb
pop
xchg
dec
mov
cmp
call
dec
mov
and
fidivrl
push
pop
outsl
sub
jl
sbb
testl
mov
int3
lods
fld
negb
fmuls
fdivr
test
and
pop
jp
test
popl
push
stos
xchg
inc
sbb
out
shlb
ret
stc
aad
rcrb
stos
je
push
pop
mov
int3
pop
in
push
mov
pop
call
cmp
cmp
faddl
dec
outsl
addr16
sahf
loop
mov
mov
mov
test
pop
mov
mov
jnp
push
mov
dec
fsubrl
ljmp
jo
dec
cmp
jmp
jae
dec
cmc
mov
pop
test
cmp
and
cs
stos
mov
aas
int
pop
pop
cmp
repnz
bound
inc
pop
mov
in
pusha
daa
add
fmull
shl
adc
notb
add
iret
add
mov
or
dec
or
std
in
pop
jno
aad
cli
aaa
repnz
out
rcll
and
jo
cli
ret
push
add
std
divl
repz
out
inc
loopne
xor
add
fidivl
and
pop
cmpl
mov
arpl
shll
mov
mov
test
orb
insl
icebp
jnp
lds
mov
xchg
and
repz
adc
pop
lahf
pop
out
push
std
ss
mov
xchg
mov
sbb
test
mov
inc
lods
jns
jge
push
insb
mov
xchg
into
lds
mov
push
mov
mov
fisubrl
sub
lahf
loopne
adc
xchg
outsl
jge
pop
xor
adc
and
adc
daa
dec
sbb
jmp
mov
out
mov
in
fsts
lds
push
cmp
jp
mov
test
leave
dec
inc
nop
mov
cmpsb
jae
sbb
jecxz
aaa
add
sub
cmp
decl
ss
inc
xchg
lcall
sbb
testb
rorb
int
add
sub
mov
lods
jg
dec
add
jecxz
clc
mov
dec
xchg
and
imul
cmpsb
and
mov
adc
loop
mov
aas
cmp
pop
ljmp
or
shlb
rcll
lcall
cltd
fcmovu
or
jg
xchg
pop
inc
out
dec
xor
into
dec
push
shr
inc
std
adc
pushf
xor
aad
add
mov
fistps
addb
cmp
aad
fucomip
xor
pop
and
or
and
add
adc
dec
push
mov
rep
cmp
cli
pop
hlt
push
rorb
in
lea
lock
push
xor
lods
jb
cmp
mov
into
jge
sub
fsts
in
fisubs
mov
add
sbb
cmp
fldenv
mov
leave
jmp
filds
daa
std
je
inc
nop
sbb
outsl
cs
aad
loopne
mov
cmp
push
es
adc
mov
outsl
mov
dec
xchg
and
push
popa
fcmovnbe
mov
jno
add
cmp
mov
in
cmp
enter
jo
mov
xchg
leave
pop
xchg
dec
shll
cmp
add
fs
inc
es
sti
shl
mov
mov
sub
rcrb
cmc
popa
stos
push
jns
mov
mov
test
jns
jne
sub
cmp
enter
jne
out
out
xchg
adc
mov
dec
fstpl
sub
pop
shrb
mulb
in
xchg
xchg
lret
arpl
lods
pop
xchg
ret
out
js
xchg
int
jp
pop
lock
mov
jmp
add
add
jmp
add
xor
js
lret
mov
xchg
xor
dec
ret
fstpt
mov
adc
out
in
mov
inc
mov
lcall
mov
out
dec
popa
mov
cmpsl
popl
and
into
les
popa
cmp
addr16
sub
sti
sub
push
dec
mov
das
pop
mov
repnz
xchg
and
jge
pusha
enter
and
test
push
scas
adc
into
lds
sbb
dec
mov
in
add
jg
inc
jle
iret
leave
jb
ss
jno
mov
insl
xor
mov
adc
push
sbb
popl
or
sbb
test
jo
mov
adc
ljmp
cld
loopne
aad
pop
push
dec
sbb
shl
xor
cmpsb
dec
stos
nop
aad
pop
xchg
xor
movsb
xchg
pop
mov
cli
or
xlat
add
jmp
mov
dec
dec
add
jp
jl
jecxz
xchg
or
mov
inc
and
mov
pop
lahf
iret
pushf
or
les
push
loopne
in
xor
push
and
movsl
sbb
lret
or
jle
bound
mov
scas
pop
mov
inc
pushf
mov
je
out
aam
dec
cmp
xchg
xchg
ret
sbbl
mov
push
xor
cmp
mov
ss
stc
cmpl
dec
xor
fimull
in
xor
test
sti
div
mov
daa
aad
dec
push
add
xor
mov
cmpsl
jae
jbe
mov
dec
xchg
jbe
mov
sahf
or
fistpll
js
cmpsl
inc
mov
push
pop
inc
lea
mov
jne
out
icebp
mov
fldcw
in
addr16
dec
fs
mov
divb
fidivl
or
sub
jl
movsl
fcmovnu
jns
xor
adc
dec
popa
fstpl
and
push
sbb
mov
push
cs
test
or
lods
cmc
movsl
jge
cmp
sub
push
jg
mov
repz
dec
loope
pop
leave
test
mov
dec
shr
inc
sbb
imul
daa
push
and
mov
rcr
lea
and
sbb
outsl
sbb
mov
out
inc
lock
cmp
fnstsw
clc
lcall
js
imul
mov
in
bound
jg
scas
cld
cs
adc
flds
shrb
sahf
and
add
add
fsubrl
inc
cmc
cmp
dec
mov
loope
push
cmp
sub
cmpsb
daa
outsb
imul
jns
push
sbb
scas
out
pop
pusha
xor
xchg
int
adcl
cs
add
cmp
subb
lods
call
shl
sbb
push
jne
or
dec
rcrl
mov
repz
popf
jno
xor
into
shr
bnd
xor
call
jp
adc
pop
lret
sarb
out
push
gs
popa
adc
pop
pop
pop
int
andl
inc
aam
shll
jmp
lds
push
adc
aas
ja
dec
out
stos
sub
cld
xchg
mov
jp
decb
or
loopne
divb
xchg
push
repnz
xor
xor
std
mov
xchg
es
adc
inc
and
mov
imul
es
mov
add
ljmp
pop
mov
repnz
pop
sbb
pop
rcrl
push
mov
cltd
outsl
adc
cmpsl
push
clc
sub
xchg
dec
mov
cltd
leave
push
or
lret
jae
lret
loopne
mov
push
jne
aam
add
mov
ret
dec
jne
mov
fsubrl
int
cmp
das
testb
inc
fdivs
lock
test
or
adc
or
daa
outsb
int3
mov
lods
arpl
dec
or
cmp
mov
sub
jecxz
scas
mov
add
cmp
imul
faddl
add
push
or
pop
xchg
add
lcall
int3
dec
mov
inc
aam
test
movsb
insl
dec
cmpsl
pop
test
mov
adc
adc
lds
clc
fisubrl
divl
outsl
test
cs
mov
xlat
hlt
filds
mov
fisttps
sbb
cli
mov
sbb
lods
inc
jb
cmpsl
adc
jo
xchg
sahf
pop
std
or
fimuls
fmul
dec
test
ret
mov
and
xchg
add
insb
test
test
push
imul
sub
ss
mov
xor
into
pop
jle
shrl
in
adc
sub
ds
mov
sbb
fnsave
aad
into
ds
mov
pop
int
scas
movsb
iret
mov
fadds
sub
push
test
mov
add
fs
dec
bound
outsb
ljmp
in
leave
negb
insb
icebp
and
aam
rol
lods
pop
loop
ss
repz
pop
pop
pusha
lret
divl
sbb
jle
ljmp
lret
dec
aas
fcomip
outsl
scas
cmc
lods
outsl
sbb
lret
xor
cmp
int3
dec
and
xchg
inc
adc
js
fwait
jl
movsb
iret
nop
add
adc
add
sub
sbb
test
lcall
dec
loope
mov
outsb
dec
cmp
fimuls
push
dec
sbbl
and
sub
xor
xchg
mov
xor
dec
imul
cmp
in
adc
inc
scas
cmp
jnp
xchg
adc
stos
aaa
inc
imul
clc
pop
mov
xor
sahf
movsl
je
or
rcrb
pop
xchg
jno
aas
stc
fisubl
jp
lret
jg
ficompl
fiadds
jnp
jle
std
fsubl
mov
mov
sbb
lock
negb
imul
cmp
pop
and
xchg
shrl
xchg
lds
and
outsb
adc
mov
pop
popa
cli
outsb
adc
mov
gs
mov
pop
or
out
push
divb
or
cmp
das
jnp
or
jmp
and
outsb
mov
test
notl
cltd
mov
jle
into
in
fucom
fwait
out
pop
adc
inc
dec
dec
fildl
std
bnd
or
sarb
lods
idivb
lods
dec
fidivl
je
sbb
sbb
fmull
lods
scas
adc
outsb
icebp
fdiv
rclb
mov
pop
mov
push
and
daa
pop
fdivrl
lods
push
leave
mov
add
sub
repz
int3
xchg
adc
pop
inc
leave
mov
arpl
popf
push
inc
inc
xchg
mov
sub
sub
out
rorl
unpcklps
jo
mov
icebp
cmp
arpl
daa
imul
push
lret
leave
dec
jnp
dec
scas
scas
scas
arpl
test
jge
icebp
dec
push
fmull
repz
jns
sub
cwtl
imul
jno
mov
cmc
icebp
mov
jmp
pop
inc
into
add
cmp
out
stos
add
sti
dec
clc
mov
jle
outsl
nop
inc
mov
iret
inc
movsl
cltd
pop
imul
cli
in
jno
add
test
lcall
lcall
test
ss
pop
insb
push
or
lret
div
xor
adc
push
shl
inc
sub
inc
fdivs
and
scas
push
sahf
in
int
out
idiv
aaa
out
xchg
cs
dec
faddl
sub
icebp
int
insb
adc
and
jmp
jno
lahf
les
add
js
int3
or
mov
fsubrl
mov
scas
adc
fdivrl
imul
les
popf
scas
fucom
in
xchg
ret
xchg
push
cmc
cltd
sub
mov
outsb
pop
xchg
call
push
cmc
sarb
and
mov
daa
push
mov
rorb
dec
ljmp
jmp
movsl
repz
ss
xchg
pop
mov
orl
sub
mov
xor
add
fcompl
mov
sbb
sbb
push
sub
adc
stos
mov
arpl
push
jb
stos
fidivrl
das
std
mov
and
andb
addr16
sbb
fildll
mov
mov
pop
jo
call
sub
inc
xlat
and
loope
and
insb
sti
sbb
push
mov
jmp
sahf
popf
test
xlat
push
lods
out
cmc
push
pusha
loop
cmpsl
pop
mov
aas
xchg
sub
push
dec
push
mov
mov
xor
sub
xchg
add
sub
and
push
push
push
mov
and
stc
aam
mov
fcompl
push
xchg
ret
rcll
push
sub
insb
mov
in
jecxz
ds
jmp
xchg
test
outsl
adc
imul
sbb
pushf
sbb
pop
jle
mov
jle
mov
mov
xor
push
xchg
cli
push
push
das
in
ss
fstl
pop
insl
lcall
notl
and
push
out
in
out
leave
fistps
inc
jmp
fcom
test
imul
sub
lret
pop
inc
and
jle
and
xchg
test
insb
mov
push
add
cmp
mov
cltd
cmc
cmpsb
xor
clc
inc
movsl
jmp
dec
cmp
inc
cltd
sub
imul
mov
in
cmp
pop
adc
and
pusha
in
dec
aas
cmpsl
inc
std
inc
mov
xchg
mull
and
std
adc
es
popf
push
or
aaa
mov
lods
add
fidivrl
add
cli
pop
jg
pop
mov
pop
add
mov
movb
mov
sbb
fisubrs
cmp
jecxz
or
pop
mov
or
les
xchg
scas
cmp
jge
xchg
and
shlb
add
out
cmp
stos
adc
adc
lods
mov
repz
fmull
lods
pop
lock
jp
test
pop
aam
in
ret
lods
mov
mov
or
nop
fists
and
cmpsb
push
ret
mov
shll
push
fildll
shlb
dec
dec
push
push
cmp
gs
dec
dec
pop
and
adc
or
cmp
xchg
mov
jg
in
jo
aam
add
addr16
jnp
and
push
jns
xor
jo
mov
pop
and
dec
sbb
dec
hlt
mov
xchg
push
icebp
and
push
jne
xchg
sub
adc
popa
fs
or
mov
loope
xor
addb
cmp
and
fstp
daa
mov
cmpsl
ret
pop
jp
scas
push
adc
arpl
cmp
xchg
cmp
fs
mov
mov
int
and
push
xlat
aaa
aad
rcrl
mov
nop
inc
mov
and
lcall
xor
loopne
push
jge
and
outsb
unpckhps
xor
sbb
ja
inc
jb
xor
mov
jae
pop
xor
dec
xlat
cmpsb
in
into
push
cmc
sub
repnz
jne
out
add
pop
fs
stos
cwtl
test
adc
pop
adc
mov
insb
pop
psrlw
push
jmp
mov
sub
or
pop
xor
dec
cmc
ret
negl
fwait
inc
enter
cmc
xchg
imul
leave
ss
and
daa
mov
xor
jle
mov
jmp
in
mov
fstps
and
test
in
jecxz
mov
adc
pop
into
out
sbb
or
scas
test
fbld
cmpsb
popa
outsl
add
add
dec
popf
fs
pop
fcoml
mov
mov
xchg
inc
xor
push
jnp
lcall
cmp
dec
push
sub
cli
sub
cmp
jmp
ds
push
enter
out
or
shl
mov
push
dec
lret
aaa
xchg
dec
out
lods
cmpsb
cmp
enter
mov
jge
jle
mov
sti
inc
mov
testb
imul
push
cmc
mov
jnp
mov
jo
add
aaa
leave
push
mov
jno
out
cli
dec
fcoml
jo
pop
cmpl
in
cmc
out
and
mov
xchg
inc
cmp
sti
lock
ret
or
jno
arpl
pusha
cs
out
pop
repz
mov
inc
ret
cmc
and
jo
aam
mov
addr16
js
and
lock
clc
sti
inc
sbb
add
scas
mov
outsl
xor
cmp
aas
sub
mov
and
pop
leave
inc
or
and
jne
jne
ja
jl
cmpsb
mov
bnd
hlt
dec
mov
adc
xor
shll
jbe
jnp
push
pusha
xchg
mov
add
inc
adc
adc
mov
mov
pusha
mov
filds
out
test
imul
lea
add
hlt
sbb
or
into
pop
das
push
in
jno
dec
or
loopne
or
adc
mov
add
add
add
addl
add
adc
add
add
mov
inc
xor
add
add
add
mov
add
add
xor
xor
xor
add
add
add
push
addb
sar
ljmp
ja
mov
push
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
in
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
in
add
fsubr
add
aam
add
int3
in
add
in
add
mov
in
add
lods
in
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
out
add
dec
out
add
push
out
add
pop
out
add
fs
add
insb
out
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
out
add
mov
out
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
lock
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
lock
mov
lock
lods
lock
movsb
lock
pushf
lock
xchg
lock
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
lock
cld
lock
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
repnz
dec
repnz
push
repnz
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
repnz
lods
repnz
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
