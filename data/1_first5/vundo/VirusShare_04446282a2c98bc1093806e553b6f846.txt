int3
int3
int3
mov
push
mov
cmpl
jne
push
push
push
push
pushl
call
push
push
push
mov
mov
call
xor
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
xor
cmpl
setg
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
neg
sbb
and
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
inc
inc
decl
jne
cmpl
pop
jne
dec
dec
mov
andw
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
pop
xor
mov
rep
movl
movl
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
pop
xor
mov
rep
movl
movl
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
pop
xor
mov
rep
movl
movl
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
dec
jne
push
pushl
call
and
push
push
pushl
call
xor
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
xor
add
fsubrs
add
push
lea
push
mov
call
pop
pop
ret
sub
push
push
push
call
movzbl
push
mov
pop
mov
cmp
sbb
xor
and
add
cmp
mov
je
cmp
je
push
call
mov
mov
call
mov
mov
mov
push
mov
call
mov
lea
push
call
movzwl
movzwl
xor
push
movzwl
xor
call
mov
mov
xor
xor
test
jne
mov
mov
movzbl
movzbl
sub
je
mov
mov
push
push
call
push
push
push
push
push
call
mov
add
push
pushl
call
pushl
mov
call
push
call
push
push
push
push
push
mov
call
lea
push
call
push
push
push
push
call
push
push
push
push
call
pushl
call
push
push
mov
call
push
push
push
push
push
push
mov
call
push
push
call
push
mov
pushl
call
push
mov
pushl
call
push
mov
call
call
mov
movzbl
movzbl
sub
jne
call
pop
not
mov
pop
mov
pop
or
pop
mov
add
ret
jno
popa
int
std
inc
in
aas
rcll
je
lods
icebp
adc
dec
sarl
insl
mov
mov
sub
push
std
inc
in
xor
add
icebp
pop
loope
movsl
jge
insl
mov
mov
sub
push
std
inc
in
xor
add
mov
dec
ret
push
out
pop
cmp
xor
jno
and
xor
xchg
adc
sbb
shll
fldl
mov
movsl
or
mov
cmpsl
pop
sub
mov
push
mov
nop
cmp
ljmp
xchg
xor
icebp
or
cmp
hlt
mov
pusha
jmp
xor
xor
mov
out
dec
sbb
subl
adc
pusha
mov
add
roll
or
mov
inc
push
in
mov
inc
out
mov
call
sub
mov
cmp
frstor
push
std
inc
in
xor
add
sarl
insl
mov
mov
inc
aaa
mov
push
stc
mov
in
mov
lods
sbb
pop
enter
aad
jb
adc
ja
dec
rcll
add
xchg
push
jecxz
nop
test
aam
cmc
or
imul
cmp
and
icebp
pop
loope
sarl
insl
mov
mov
sub
push
std
inc
in
xor
add
sarl
insl
mov
mov
sub
ljmp
xchg
out
lds
dec
mov
push
pop
jecxz
jge
idiv
pushf
enter
in
and
push
or
lcall
add
adc
sbbb
jns
mov
sub
push
xor
xchg
in
or
sbb
int3
jp
es
ficoms
cmpsl
stos
rcr
into
ds
sbb
mov
aaa
adc
rclb
ret
outsl
push
add
insb
mov
aad
lods
filds
adc
mov
popa
inc
idiv
push
aam
icebp
in
push
popa
xor
add
add
push
push
rolb
sti
scas
sbb
xchg
hlt
and
scas
pop
inc
xor
lahf
xlat
add
clc
mov
mov
cmp
xchg
std
out
lret
stos
dec
popa
imul
or
pop
movsl
adc
ss
xor
or
idivb
xor
das
fs
jmp
cmp
dec
cmpsl
inc
sub
and
jns
sub
imul
and
aas
pop
inc
and
or
push
test
fsts
lret
and
mov
jmp
mov
cwtl
mov
pop
stos
lock
mov
jg
sub
dec
xchg
sub
lea
add
push
imul
out
xchg
ss
pop
pop
rclb
loope
xlat
insl
mov
mov
enter
or
out
cmp
repz
cltd
test
ret
sub
in
icebp
mov
push
adc
lock
in
test
test
inc
mov
mov
shlb
dec
xchg
loopne
cmp
sti
pop
fs
jae
ret
mov
cmpsb
mov
and
sub
add
cmpsl
dec
dec
push
mov
jmp
mov
mov
divb
outsb
mov
add
out
repz
out
cwtl
hlt
cwtl
and
jne
outsb
insb
and
mov
into
or
pop
xchg
outsb
push
push
std
lea
push
mov
mov
dec
addr16
stos
and
loope
mov
dec
dec
jne
xor
enter
jns
jmp
pop
xchg
pop
test
faddp
mov
dec
lahf
sahf
lds
popf
icebp
add
push
pop
sub
bound
aam
stos
mov
cmp
sbb
cwtl
je
bound
shll
out
cmp
rorl
jg
popf
inc
push
pop
sub
fiaddl
cmpsl
dec
sbb
mov
cmp
arpl
inc
xor
insb
cmp
mov
xor
neg
adc
sub
notb
mov
sbb
aam
sbb
faddl
je
int3
pop
dec
mov
rorl
gs
scas
pop
lea
outsb
mov
jbe
mov
mov
cmp
xchg
iret
in
adc
arpl
insb
adc
cmp
dec
pushf
pop
inc
lret
dec
int3
xchg
and
jne
test
xor
add
pushf
inc
pop
out
bound
push
sub
mov
xor
clc
testb
xchg
pop
jbe
rcr
jns
sub
insb
rcr
in
pop
aas
jle
test
or
lock
ret
lcall
popf
bound
xchg
mov
xchg
xor
insl
or
inc
test
sub
cmpsb
add
dec
push
lcall
xor
lods
out
shlb
out
pop
popf
lret
iret
or
or
aas
push
inc
lahf
fdivl
jp
jmp
shl
adc
pop
cmp
ja
sbb
ffreep
shll
fisubs
and
mov
push
addr16
add
daa
and
fisttpl
addr16
in
sti
lret
mov
xchg
fwait
aaa
mov
mov
xor
xor
push
clc
lock
mov
mov
sbb
cmp
mov
loope
add
ljmp
pop
jmp
dec
jge
xchg
xor
out
ficoml
and
pop
icebp
mov
xor
mov
loope
popa
pop
inc
push
ds
inc
scas
dec
repnz
icebp
xchg
mov
jp
loopne
in
jbe
mov
mov
xchg
jp
inc
leave
jle
int3
inc
ljmp
arpl
into
inc
lret
repz
fstpt
push
ja
insb
push
pop
xchg
test
add
push
sub
adc
mov
ljmp
stos
pop
pop
xchg
sbb
dec
xor
stos
lods
dec
fstl
add
xor
stc
lret
rcll
in
icebp
jnp
nop
cs
es
xor
sahf
ficomps
shll
inc
in
pushf
mov
pop
dec
adc
loop
fisttps
ljmp
mov
push
jne
lods
shrb
rep
in
push
mov
cmc
mov
pop
mov
or
mov
in
ja
dec
sbb
mov
push
aam
sub
mov
mov
add
sub
xchg
test
cmpsl
and
pop
jp
dec
push
cltd
mov
mov
jnp
loope
lock
in
out
sub
add
push
jno
mov
loop
bound
loope
cmpsb
jb
in
movsb
and
lods
xchg
jb
or
test
fcoms
xchg
ret
in
notb
pop
mov
inc
aaa
fistpll
xchg
adcb
pushf
sbb
clc
cmp
sbb
jl
cmc
push
adc
pop
stos
mov
insl
xchg
ss
repz
pop
aam
xchg
fnstcw
cmp
xchg
push
xchg
rcll
fildll
xchg
bound
inc
out
adc
xorb
in
adc
push
ds
stos
push
mov
lock
sub
roll
fisttpl
shr
mov
xor
jns
jbe
add
mov
xchg
int3
jne
add
stc
cwtl
cwtl
push
or
out
out
fwait
rol
xlat
push
cld
mov
cmp
sub
or
xor
mov
push
mov
hlt
adc
pop
sti
in
or
pop
mov
jp
sbb
jecxz
mov
std
cmp
enter
push
hlt
popf
pusha
mov
cmpsb
mov
or
test
jbe
mov
lock
jb
jno
faddl
mov
pop
mov
cmp
xchg
pop
fsts
push
or
push
cwtl
and
push
imul
jbe
push
or
cmp
mov
jmp
sbb
cmpsl
js
mov
jno
add
mov
add
jns
dec
jbe
gs
xor
push
adc
cmp
and
mov
lea
and
inc
inc
push
jne
shlb
mov
dec
mov
lods
jo
mov
cmpsb
cmp
sarl
das
push
push
mov
imul
jne
rdtsc
cli
adc
cmpsl
push
mov
xchg
bound
jmp
sub
mov
aas
jne
dec
lahf
mov
cmp
jle
mov
stos
sub
inc
cmp
adc
imul
mov
push
xchg
nop
js
add
out
jns
or
mov
notl
cmovg
loop
mov
je
dec
scas
test
pop
jnp
enter
sub
lret
or
dec
into
sub
aaa
jg
pop
sub
sahf
inc
mov
mov
aaa
jp
or
dec
insb
movsb
pusha
out
jp
sbb
lds
imul
mov
cmp
fwait
imul
outsl
lods
xor
mov
js
and
dec
or
mov
cwtl
mov
lcall
data16
push
movsb
adc
into
pushf
lds
lret
xchg
daa
cmp
mov
mov
fistpll
inc
aas
movsl
xchg
xchg
adc
jge
xchg
push
mov
xchg
xor
test
outsl
mov
jbe
adc
orb
cmp
fwait
aaa
dec
pop
mov
out
cs
dec
scas
das
shlb
jl
adc
mov
mov
lods
icebp
or
push
pop
je
out
pushw
test
lea
inc
sub
sahf
sub
add
negb
fwait
and
and
inc
out
sbb
mov
enter
outsb
jmp
xor
push
push
xchg
fs
inc
mov
cli
imul
andl
dec
std
mov
adc
and
divl
out
add
xor
lret
mov
pop
std
xchg
sti
out
inc
cmpsl
pop
das
xchg
xor
cltd
mov
pop
xchg
dec
push
mov
popa
mov
fstps
jne
test
inc
test
aas
rolb
sbb
cmc
pop
test
fcomps
lea
push
sahf
movsl
je
mov
in
xlat
mov
fisubl
xchg
stc
cli
push
roll
inc
test
inc
rcll
xchg
xchg
inc
push
push
sub
in
addl
or
pushf
or
ja
rcrl
and
adc
aad
mov
stos
jecxz
js
das
adc
pop
mov
and
aam
push
int
xor
sbb
or
fisubl
test
test
je
clc
sub
jae
iret
mov
pop
pop
test
pop
cltd
jg
mov
lahf
or
mov
mov
lods
aaa
push
xchg
sbb
add
push
adc
push
or
pop
pop
cld
sbb
or
jno
pop
call
pop
ficoms
mov
and
add
je
scas
add
lea
or
outsl
sbb
call
fildl
fimuls
insb
pop
mov
frstor
mov
mov
ds
jno
rol
notl
lahf
xor
icebp
aad
rorl
mov
and
mov
fdivs
pop
xlat
sarl
test
sbb
sbb
icebp
arpl
sbb
std
sahf
enter
xor
jle
fnsave
push
mov
push
imul
sub
jg
xchg
out
jbe
lock
push
cwtl
sbb
sbb
insb
out
or
mov
dec
arpl
jo
out
xchg
aad
ret
and
dec
int3
mov
ret
rep
mov
in
in
sbb
lahf
clc
mov
sbbb
icebp
push
xor
xor
das
xor
lret
push
jle
jno
inc
dec
mov
mov
adcb
mov
push
jg
stos
cmp
xchg
add
es
xchg
fbld
fldt
push
jmp
inc
jecxz
loopne
ds
loope
or
lea
fnsave
hlt
dec
pop
icebp
out
pop
sbb
into
or
or
jle
in
cmpsl
sub
dec
and
shrl
lea
dec
ds
inc
jb
fildl
cmp
repnz
sbb
jne
adc
sahf
sbb
jmp
and
lcall
pusha
mov
rcl
xchg
out
fdivrl
jmp
jge
test
loopne
lea
mov
inc
xchg
bound
mov
or
stc
mov
fxam
xchg
inc
pop
lods
fcompl
mov
cmpb
pop
clc
xchg
sbb
mul
cmp
popf
xchg
mov
or
fdivrl
jecxz
sbb
jb
lods
pop
and
pushaw
aam
cmp
and
jmp
aaa
push
lcall
cmp
xor
cmp
sub
mov
pushf
or
dec
ljmp
mov
jecxz
repz
pop
lock
add
in
inc
ror
inc
imul
addr16
enter
fimull
leave
mov
pusha
stos
mov
push
pop
pushf
cmpsl
xchg
fwait
cmpsl
stc
test
lds
in
test
push
in
rclb
inc
cmp
sub
fs
pop
movb
mov
cmpsb
sub
cwtl
xchg
iret
ljmp
push
push
loop
sbb
stc
in
arpl
aad
and
dec
push
andb
popf
jge
loopne
rorb
rorl
into
xor
jmp
popf
jo
arpl
imul
add
adc
xchg
inc
shr
incb
stos
add
sub
repz
fbld
les
add
sub
insl
xor
or
or
in
xor
inc
mov
mov
lds
outsb
popf
push
jecxz
out
les
scas
lret
int
daa
sub
testl
inc
cmp
mov
and
mov
stos
rcr
ds
inc
std
int3
repnz
jbe
shlb
mov
in
cmp
xor
sub
aam
mov
stc
ja
cmp
mov
test
xchg
mov
adc
repz
test
inc
scas
out
gs
rcrb
lods
leave
js
xor
lock
and
pop
out
inc
xchg
insl
stos
popf
pop
mov
sahf
mov
jne
shl
mov
push
dec
aad
loop
jp
or
scas
nop
rcl
inc
leave
jns
lock
jo
push
jecxz
mov
mov
ret
cmp
lret
dec
push
or
and
in
adc
idiv
jge
je
scas
xor
and
inc
cmp
mov
xor
outsl
outsl
mov
inc
cmp
mov
leave
insb
lock
cltd
out
mov
sub
xchg
sbbb
imul
insb
fistps
jnp
xor
and
dec
inc
imul
mov
push
jb
pop
add
adc
xlat
push
pop
fsubs
bswap
mov
pop
pop
repnz
or
mov
fldcw
cmp
les
lea
pop
add
inc
cmp
xlat
mov
cwtl
repnz
popa
xor
xchg
xchg
cld
js
mov
mov
xchg
icebp
lea
in
adc
cwtl
cmp
pop
xchg
rclb
rorl
jns
lret
push
jo
sub
hlt
push
adc
ror
fmuls
sbb
xor
mov
cld
rcll
push
push
out
jmp
mov
inc
adc
mov
pop
cmp
xchg
into
out
cltd
inc
sub
stc
cmp
cmp
fsubrs
push
lret
pusha
adc
fisttpll
addl
std
sub
mov
repz
mov
into
lods
fwait
jg
add
pop
dec
fstps
arpl
mov
dec
sbb
stc
add
xchg
movsb
das
lret
add
imul
ljmp
jp
jno
stos
or
adc
or
jmp
cmc
xor
mov
mov
cli
jbe
dec
repz
stos
addr16
shrl
inc
mov
mov
fcmovbe
or
adc
adc
or
lods
or
mulb
out
xor
in
adc
xor
outsb
sahf
dec
mov
pop
and
mov
nop
mov
aas
gs
jo,pt
inc
sbb
xchg
dec
bound
dec
into
adc
lock
or
hlt
adc
movsl
xlat
jp
add
xchg
jo
inc
jo
mov
in
add
sub
fnstenv
inc
sub
inc
std
jecxz
jmp
pushf
pop
mov
inc
and
xor
cltd
sbb
fwait
stos
mov
cltd
insb
push
js
dec
jno
mov
sub
decl
dec
and
mov
cmc
jecxz
add
repz
inc
fidivs
cmp
rcll
pop
fistpll
cmpsl
or
cmpsb
divl
negl
jmp
movd
push
cmp
inc
aad
push
mov
pop
insl
lcall
loopne
mov
pop
inc
push
int3
sbb
loopne
mov
xor
push
mov
movsb
dec
imul
xchg
sbb
mov
lret
lods
cmpb
bound
in
mov
pop
mov
into
pushl
and
addl
xor
fcmovnu
mov
jne
dec
xchg
inc
mov
jle
pop
dec
mov
movsl
sbb
sbb
out
pusha
inc
and
or
scas
inc
pop
fmuls
or
fs
pushl
dec
jecxz
cmc
addr16
xchg
add
xor
sub
out
fwait
test
add
xor
test
add
or
lods
mov
cmp
lods
add
mov
pop
push
lods
jge
aad
addr16
aam
lret
inc
add
movsl
fwait
xchg
sbb
push
mov
pusha
lock
sbb
call
sbb
in
or
pop
je
and
mov
cmpsb
clc
std
mov
sub
xchg
cmp
push
add
and
das
pop
insb
in
jle
sbb
std
inc
fmuls
pop
pop
es
dec
jns
cmp
in
mov
xchg
and
hlt
mov
test
loop
leave
xchg
adc
push
pushf
sti
leave
dec
mov
mov
sahf
cmp
test
bound
inc
nop
rcl
cmpsl
pop
mov
in
ss
add
data16
sub
les
mov
repz
idiv
dec
or
stos
into
push
mov
mov
and
hlt
adc
cwtl
mov
adc
dec
shlb
pushf
adc
or
xchg
cmpb
mov
insl
int3
pusha
test
mov
repz
fstpt
mov
pop
movsb
pop
popf
and
jp
mulb
movsl
dec
xchg
xchg
xlat
push
push
mov
pop
jnp
je
xchg
push
test
xchg
nop
mov
in
add
sub
push
jg
mov
into
jo
pop
mov
in
lcall
jmp
push
pop
lret
test
mov
daa
cmpsl
push
mov
je
sub
test
lret
adc
inc
jne,pn
insl
and
cmp
mov
fadd
fidivrl
inc
mov
sbb
mov
or
sub
sbb
cmc
mov
repz
xor
int
mov
jne
push
cld
mov
xchg
repnz
ss
push
fs
sub
pop
push
icebp
cli
cmp
sub
cmovns
aas
mov
rolb
push
sahf
ss
mov
xchg
xchg
jl
scas
jb
nop
and
aad
in
out
dec
sub
scas
insb
test
fwait
pmulhw
cmpsl
mov
lods
xor
or
sbb
cmp
mov
notl
loop
jnp
rolb
jle
sub
dec
cmp
cmp
and
aas
jno
ja
cmc
add
enter
hlt
lock
mov
and
in
aas
jbe
int3
bound
lock
jle
inc
roll
push
add
lock
jp
testb
rolb
out
test
push
jae
push
daa
xchg
iret
mov
out
xor
adc
pusha
mov
int3
xchg
cmp
pop
dec
sub
cmp
mov
or
xchg
in
pusha
scas
and
clc
jmp
sub
jmp
lcall
pop
inc
push
arpl
cltd
adc
aad
sub
inc
repnz
dec
addr16
addr16
addr16
adc
out
mov
loop
test
push
add
cmp
int3
pop
adcl
stc
add
cwtl
jae
push
repz
pop
add
pushf
popf
cmp
mov
pop
mov
mov
sub
sahf
test
cltd
jno
fcoms
ss
push
mov
pusha
ret
push
dec
push
jle
movsb
pop
mov
jecxz
in
ss
sti
ljmp
fsubrp
in
out
call
mov
js
mov
or
lods
dec
push
mov
scas
push
shll
mov
es
jno
pusha
sbb
pusha
xor
or
mov
mov
je
pop
das
loope
mov
lahf
inc
xorb
xchg
jge
inc
adc
adc
push
jp
cmpl
xor
das
lock
lret
shlb
xor
adc
cli
je
shr
mov
lret
jno
das
jbe
out
xchg
sub
icebp
icebp
or
mov
loop
inc
and
jg
or
test
stos
lock
push
jo
push
push
jmp
in
mov
lock
add
mov
cmc
add
es
pusha
roll
jl
mov
rcll
inc
xlat
jb
sub
pop
test
aad
loopne
and
shr
imul
pop
mov
test
aas
and
inc
dec
add
add
cwtl
test
pop
mov
cmp
psubusw
stos
popa
and
popa
add
insl
and
push
mov
mov
mov
negb
fldt
into
cld
xchg
in
je
mov
cwtl
movsb
mov
mov
int
std
inc
in
xor
add
sarl
insl
mov
mov
sub
push
std
inc
in
xor
add
sarl
insl
mov
mov
sub
push
std
inc
in
xor
add
sarl
insl
mov
mov
sub
push
std
inc
in
xor
add
jnp
rcrl
xchg
sub
outsb
ret
int3
dec
mov
jg
mov
mov
leave
into
cmp
sub
sbb
or
pop
mov
test
psubw
jmp
fistpll
fildll
out
sbb
or
pop
mov
test
push
stc
pop
jmp
pop
cld
jne
imul
dec
es
or
aas
pop
sub
sub
and
sbb
mov
rorb
jmp
and
aad
rorl
dec
adc
add
fistpll
inc
mov
lods
mov
in
scas
fwait
bound
and
xlat
sbb
leave
jns
pop
scas
cmpsb
mov
test
cwtl
pop
popf
lock
push
stc
shlb
ds
inc
or
cmp
out
divb
lahf
cmp
mov
push
loop
lahf
je
stc
pop
push
bound
iret
lahf
iret
jl
sub
in
cmp
lahf
sub
pop
scas
sbb
cwtl
cmp
xor
dec
xor
push
cmp
xchg
popf
scas
dec
mov
test
sbb
psubsw
fldenv
leave
cmp
sub
sbb
or
pop
mov
jp
fisttps
iret
jl
jns
bound
inc
pushf
ja
addr16
adc
adc
fcmovnbe
sub
clc
jecxz,pt
cltd
pmaxub
pop
das
mov
leave
mov
out
dec
mov
push
fldcw
daa
sub
xor
add
pop
std
inc
xchg
pop
jmp
iret
cmp
sub
sbb
or
pop
mov
test
psubw
jmp
iret
cmp
sub
sbb
or
pop
mov
mov
arpl
and
loope
sti
cld
movsl
dec
mov
pop
stos
push
adc
ror
mov
data16
out
leavew
pop
jge
mov
je
xchg
sub
int
push
and
lea
hlt
sbbb
int3
mov
hlt
ss
cli
cmp
scas
mov
sti
repz
xchg
popa
rcll
dec
and
or
push
test
jge,pt
mov
jno
dec
dec
pop
loope
or
cmp
sbb
aaa
jbe
je
roll
shlb
jno
outsl
jl
jae
jns
jno
frstor
dec
dec
cmc
jb
mov
pop
aad
into
shll
xor
xor
pop
pop
jp
cmp
sbb
push
das
inc
lods
jge
mov
cmpsb
lret
cltd
push
enter
add
inc
inc
sub
daa
cld
nop
scas
aaa
cmp
test
cmpsb
lds
adc
cmp
xchg
xor
add
std
jmp
add
cwtl
cmpsb
cmp
pop
ret
mov
mov
add
xor
xchg
jl
mov
jae
fcompl
xchg
test
xchg
test
insl
fcmovnu
add
and
test
mov
dec
push
arpl
ficomps
sub
jbe
and
xchg
iret
xor
test
pop
subb
int3
in
jo
xlat
inc
xor
daa
push
mov
pop
add
jg
adc
fnsave
aam
aad
push
fldl
push
fcoms
sti
adc
ret
addl
mov
add
and
fisttps
add
int3
cmp
sbb
ficoml
sub
mov
repz
inc
xor
and
ret
xchg
sti
add
insb
mov
insl
rcrb
enter
and
push
inc
mov
sbb
bound
push
aas
inc
movsl
into
out
fnsave
shl
mov
fiaddl
add
in
pop
inc
popl
ret
xchg
ja
mov
cmp
in
mov
scas
jne
sbb
dec
addb
pop
rolb
scas
sbb
fnstcw
mov
in
sbbl
imul
sarl
add
daa
or
mov
gs
aas
cmp
bound
cmpb
mov
cld
ror
movsb
push
xchg
int3
ret
sbb
mov
test
dec
popf
insb
jo
push
mov
or
gs
je
xor
jae
xchg
add
out
mov
fst
jno
add
insl
ljmp
push
loope
jb
sar
and
xor
xor
js
push
sbb
int
mov
ret
fs
xor
xchg
lcall
sbb
test
adc
add
inc
mov
pop
pop
push
push
adc
mov
stc
fcompl
sbb
xor
dec
and
adc
mov
pop
or
push
sub
stos
jbe
push
xor
repz
fcomps
shl
xchg
loope
pop
loop
fildll
mov
dec
cvtps2pd
pop
int
xchg
cmp
daa
mov
in
iret
dec
mov
cmc
insb
cmpsb
adc
push
add
sub
xor
leave
sub
aam
and
cld
push
ja
shlb
enter
sbb
stos
popl
jbe
movsl
imull
xchg
xchg
enter
inc
jmp
and
sub
dec
popa
mov
insl
mov
mov
pop
dec
or
out
aam
mov
pcmpeqb
mov
xchg
mull
fisubl
lret
test
adcb
ret
insl
cmp
bound
push
pop
pop
pop
mov
loop
xor
push
jno
es
xchg
out
mov
daa
and
imul
mov
sahf
je
fs
xor
sbb
out
enter
loop
cmp
insl
outsl
movsl
mov
cmp
cltd
test
test
and
imul
out
inc
jp
sti
inc
jg
jmp
ljmp
pop
stos
jae
push
pushw
and
inc
mov
mov
mov
out
insb
adc
mov
push
inc
fs
scas
in
and
lods
fsubrs
xchg
leave
test
loop
rorb
jae
pop
cwtl
cmp
addr16
and
push
dec
addb
xor
cmp
mov
sub
pop
fdivrs
loop
mov
clc
ret
aas
push
mov
add
insb
push
dec
cmp
cmp
jge
jle
mov
movsl
outsb
pop
dec
mov
nop
xor
mov
push
mov
iret
push
mov
jp
out
fwait
test
pushf
shlb
ret
add
mov
dec
jge
inc
shlb
xor
adc
out
data16
dec
rol
ljmp
adc
cltd
and
fcoms
and
jle
aam
sbb
mov
sub
add
ret
cmp
add
insb
loop
xchg
scas
movsb
je
jmp
mov
out
leave
push
sarl
movsb
adc
push
fsubrl
jbe
outsb
jnp
pop
int
or
insb
mov
pop
pop
and
jmp
hlt
or
andl
sbb
pop
insb
jne
sti
mov
nop
or
push
mov
adc
add
outsl
mov
cwtl
xchg
pop
mov
aad
cld
sbb
fcoml
lea
dec
mov
test
ret
mov
test
movsl
jge
loope
adc
gs
in
nop
push
test
bound
mov
jmp
inc
mov
mov
fs
test
aaa
mov
pop
enter
adc
push
dec
jne
lea
pop
inc
jl
ss
sub
dec
int
sar
fcomi
fsub
ljmp
inc
lcall
jb
and
mov
out
adc
jne
test
dec
cmp
pop
clc
into
test
cmpsl
int3
adcl
xor
xchg
xor
jnp
sbb
mov
mull
add
lcall
js
jecxz
ja
iret
add
dec
arpl
cmp
cs
cltd
lret
xor
mov
xor
dec
adc
cmpb
xor
xor
nop
lods
push
out
fiadds
cmpsb
inc
sahf
pop
push
imul
pcmpgtw
nop
adc
mov
loope
dec
in
mov
xchg
mov
mov
mov
out
sahf
dec
inc
fsubs
lcall
sbb
cmp
lret
lds
mov
and
test
imul
inc
dec
mov
adc
xor
add
rorl
sub
and
dec
pop
push
sbb
sarb
outsb
out
repz
dec
test
mov
sub
test
xlat
fsubr
inc
or
lock
sbbl
jmp
popa
inc
hlt
cmpsl
xchg
testb
add
mov
jmp
mov
dec
mov
adc
test
sbb
jg
push
sbbl
ljmp
mov
loop
push
decb
mov
fmul
or
and
in
filds
in
test
and
adc
stos
xor
test
jo
popa
jmp
gs
or
popl
fists
pop
mov
addr16
mov
and
pop
sbb
enter
imul
dec
lcall
gs
gs
aad
fcomip
mov
mov
xor
lret
and
push
aad
ret
ror
fisubrl
sub
sub
fsubr
out
sbbl
in
call
ret
in
shlb
ret
fistl
fistl
push
insb
mov
repz
jb
xchg
cmp
sahf
xor
dec
xchg
adc
fdivs
jg
in
in
shll
mov
xor
adc
in
pop
movsb
es
ss
or
fcoms
loopne
test
loope
dec
sub
fs
fcmovnbe
sub
inc
movsb
loope
pop
push
mov
mull
jo
sbb
or
test
push
test
fdivl
sbb
push
fnstsw
jg
ja
in
sub
jns
xor
movsb
iret
mov
mov
xlat
repz
xor
mov
xlat
mov
jecxz
mov
xchg
mov
dec
or
imul
lods
in
ror
jno
mov
dec
pop
adc
fistl
rolb
int3
dec
les
inc
adc
jb
les
lahf
push
xchg
xor
leave
lods
sbb
xchg
dec
in
insl
test
cmc
and
cli
int
push
aaa
ficompl
dec
mov
dec
stos
insl
pop
add
mov
repnz
mov
outsl
inc
add
sti
out
cmp
xchg
jmp
loop
add
mov
fisttpll
dec
inc
mov
mov
movsb
scas
addr16
cltd
gs
mov
mov
mov
aaa
or
lret
xlat
insl
fiadds
scas
clc
leave
bound
pushf
jb
imul
aaa
jns
pop
jecxz
jecxz
lcall
test
dec
fdivrs
inc
adc
mov
mov
pop
jbe
test
xchg
pop
pop
mov
and
loop
and
mov
sbb
test
dec
stos
cmp
rcl
sbbl
call
out
push
dec
mov
jae
push
fsub
cmpsb
and
in
lods
lahf
xor
jge
cld
stos
mov
and
mov
mov
jno
jmp
lcall
call
icebp
lods
test
dec
fpatan
or
imul
js
mov
mov
sbb
nop
dec
xor
stos
push
jno
xor
addb
jns
cmpsb
inc
int3
xlat
push
mov
out
out
add
and
inc
inc
xchg
test
jle
enter
pop
ret
insl
cli
ret
leave
dec
adc
int
clc
or
sub
cmc
xchg
insb
sbb
pop
sbb
cmpb
jmp
mov
and
fcoms
stc
push
pop
daa
fisubrs
mov
stos
insb
lret
pushf
mov
mov
dec
js
add
dec
imul
fwait
jg
mov
sub
fsubrs
out
pop
mov
repz
sarb
cltd
sub
mov
fs
ss
push
sub
pushf
mov
lea
jno
fidivs
imul
and
ds
in
mov
and
or
jb
int3
sub
pop
in
dec
sbb
int3
fstps
mov
popf
jmp
jecxz
mov
cwtl
loope
loop,pn
fmuls
xchg
or
mov
mull
jle
lods
adc
test
out
dec
pop
scas
fsub
mov
push
or
in
fsubrs
dec
imul
xchg
in
sub
mov
lret
push
xor
inc
cmp
rcll
inc
inc
pop
mov
jns
jne
cmp
in
add
and
mov
push
out
cmp
icebp
ljmp
imul
and
push
jecxz
xor
cmp
lret
or
mov
mov
pop
inc
pop
outsl
lds
pop
add
cmpsl
ret
or
hlt
ljmp
movb
xchg
or
cmpsl
cmp
loop
xchg
cli
and
rcrb
push
ret
mov
inc
les
push
testb
sbb
mov
mov
mov
add
gs
std
inc
dec
pop
inc
jl
or
es
mov
sahf
shll
push
pushl
out
sbb
push
insl
inc
sarb
or
push
scas
adc
test
pushf
or
fsubrs
dec
dec
jle
jl
in
aad
shr
pop
lret
ret
dec
mov
leave
roll
sub
shl
xor
push
in
imul
sub
pop
pop
ds
add
sub
cmp
test
mov
dec
sub
jecxz
daa
fistpl
add
nop
cmp
mov
jnp
rcl
cld
jge
sti
add
mov
call
aas
insl
nop
add
les
popa
inc
pop
jae
xchg
cld
pop
bound
sub
inc
dec
in
sbb
add
mov
rolb
iret
call
int
mov
dec
xor
scas
mov
xlat
add
pop
scas
sub
lock
hlt
cld
inc
daa
mov
jns
in
jecxz
in
aam
pop
in
jge
adc
xchg
sbbl
inc
mov
ja
xlat
push
jnp
push
pop
add
add
adcl
fcomp
push
xchg
adc
inc
scas
aaa
mov
fistpll
jbe
mov
adc
repnz
test
imul
loop
ljmp
stos
and
mov
mov
mov
pop
adc
ret
loope
push
push
xchg
icebp
xchg
pop
dec
stos
adc
int3
cs
sbb
push
out
cwtl
negb
cmc
jmp
fisttpl
out
dec
pop
shrb
push
test
movsb
or
test
cwtl
jl
shlb
mov
inc
and
inc
push
jge
sbb
out
loopne
xchg
or
cwtl
add
mov
or
js
add
add
dec
or
adc
pop
enter
add
and
fiaddl
mov
mov
xchg
aam
int3
mov
hlt
outsl
rcll
push
add
mov
cmc
pop
inc
cmc
imul
test
shlb
sub
pop
fisubrl
mov
shll
or
mov
inc
stc
cmp
shll
outsb
cmp
sbb
dec
pop
in
add
outsl
rcll
cmp
sti
dec
cmp
fistps
xchg
push
in
repnz
inc
lds
js
add
push
add
mov
test
mov
cmp
movsb
andb
scas
repnz
mov
or
jbe
decl
jmp
stos
push
daa
test
leave
fisubl
loop
scas
ret
lahf
sarl
movl
fdivrs
add
push
clc
push
mov
iret
push
pop
mov
pop
les
lret
mov
adc
lds
cld
in
mov
mov
sti
and
mov
adc
cmp
into
pop
loope
jnp
inc
loope
jg
sbb
jmp
jge
aad
leave
jge
and
or
in
es
cli
ret
push
pushf
push
dec
pop
sar
or
push
push
or
or
xor
adc
nop
mov
sbb
imul
mov
jge
in
dec
mov
mov
in
xchg
stos
pop
or
push
sub
xchg
out
fs
mov
sti
mov
add
xchg
loope
je
out
cli
insb
jl
movsl
xor
lcall
push
adc
mov
pop
in
cmp
adc
das
push
xor
test
or
push
ret
sub
mov
sbb
add
pop
sub
adc
mov
inc
ret
push
loope
cmp
in
push
pushf
inc
nop
push
test
roll
pushf
inc
lock
xchg
mov
je
sub
inc
leave
adc
add
pop
jg
mov
or
test
push
pop
lods
jl
ljmp
xor
jne
es
ficoms
stc
das
sbb
xor
dec
and
cmp
je
or
mov
dec
ja
movsl
dec
arpl
add
pop
pop
jle
jbe
mov
inc
push
add
sub
dec
add
in
jns
xchg
mov
leave
out
sub
jmp
cmp
dec
and
insb
xchg
lock
scas
int3
push
push
dec
mov
popf
incl
idiv
in
or
push
lret
test
and
rolb
movsl
pop
sub
pop
test
lods
das
cmpb
mov
add
add
rol
decb
rol
rcrb
or
inc
and
rol
js
mov
dec
jg
push
xor
out
insl
out
stc
jmp
push
stos
xor
sbb
out
je
sti
cmp
pop
add
and
cmpsl
pop
add
stos
adc
dec
call
and
lds
pop
jl
push
push
sub
sub
inc
inc
sahf
or
mov
push
dec
adc
xchg
xor
add
mov
lcall
loop
jmp
addr16
test
push
rcr
mov
jne
rcrb
jne
ss
mov
fnstenv
cmpsb
test
push
ss
xlat
orb
cmp
pop
stos
stos
out
mov
add
inc
mov
mov
lods
popa
dec
sub
rolb
jne
jbe
jne
push
outsl
mov
xor
stc
lea
xchg
into
insl
pop
pop
mov
sub
or
imul
xchg
sub
jl
inc
mov
ds
fldcw
shrb
xor
xor
push
movsb
cld
jno
or
lods
mov
cmc
jno
jecxz
pop
lahf
jle
rcr
mov
sbb
int3
in
or
cmp
out
sub
mov
lret
out
mov
lret
pop
aam
lods
xchg
ja
cmpsb
push
push
inc
fucom
dec
sub
andl
outsb
repnz
call
jg
xor
out
dec
js
push
cmp
test
and
jmp
push
jnp
xchg
js
negb
sbb
cmpsb
scas
jnp
xlat
movl
mov
and
xor
inc
adc
push
mov
dec
xchg
ds
repnz
sbb
test
pop
add
test
cmp
scas
mov
int
es
ret
repz
dec
push
scas
inc
xor
mov
ljmp
loopne
lds
push
lahf
xchg
pop
jp
xchg
lock
rcll
jg
das
mov
push
clc
xor
push
pop
dec
fnstcw
nop
dec
mov
int
fwait
mov
repz
or
sub
mov
sub
or
or
push
add
mov
stos
cmp
or
xlat
sub
out
cmc
pop
daa
popf
ja
xchg
cmpsl
mov
mov
sbb
jmp
fsubrl
fs
fcoml
xor
xchg
lods
mull
imul
sbb
stc
fidivrl
es
in
push
mov
int3
bound
jo
leave
int3
shlb
lahf
sub
in
dec
gs
inc
or
ret
das
xor
xor
insl
jbe
repz
push
in
adc
data16
adc
pop
push
test
outsb
or
movsb
mov
mov
enter
imul
push
pop
cmp
mov
cld
rcll
sbb
imul
push
mov
jnp
stc
dec
push
aad
popa
add
test
shlb
sbb
popf
xchg
insl
arpl
and
mov
dec
mov
sub
cmp
lcall
xlat
or
outsl
xchg
sub
mov
add
push
sub
jo
or
mov
push
das
repnz
popl
int3
dec
jb
mov
xchg
xchg
mov
call
lahf
jo
pop
in
stos
fildll
cltd
add
popf
dec
les
int3
clc
sub
mov
xor
or
jg
and
aad
pop
test
pop
ss
out
mov
jnp
out
pushl
es
lret
cwtl
cli
cmp
out
enter
loope
stos
dec
fs
ds
push
sarb
or
xchg
outsl
out
incb
sbb
inc
and
cmp
add
dec
repz
mov
sbb
mov
outsb
adc
sbb
pop
daa
clc
es
pop
ret
popf
or
sub
mov
or
mov
xor
mov
loop
mov
jbe
mov
fiaddl
out
or
mul
sbb
jle
inc
adc
cmp
push
xor
adc
sbb
shll
mov
mov
inc
frstor
push
stc
fbld
dec
push
lea
out
enter
rol
shrb
dec
mov
fwait
dec
popa
cwtl
in
xchg
inc
adc
xor
daa
sahf
les
xchg
test
psubw
jmp
iret
cmp
sub
sbb
or
pop
mov
test
psubw
jmp
iret
cmp
sub
sbb
or
pop
mov
test
psubw
jmp
iret
cmp
sub
sbb
or
pop
mov
test
or
pop
mov
addl
jle
icebp
pop
xchg
push
cmpsb
inc
mov
pop
pop
dec
dec
jns
imul
dec
pop
and
ficompl
cmp
jmp
es
sbb
jns
imul
cmp
inc
fstps
jmp
lret
mov
mov
imul
jno
pop
fstps
mov
cltd
mov
lods
cli
mov
sub
push
pop
mov
clc
mov
je
stc
out
inc
adc
add
push
add
mov
xchg
aam
dec
or
lds
ja
inc
push
sti
into
into
mov
jae
push
adc
fisttpl
mov
mov
addr16
cwtl
sub
aaa
cmp
test
or
dec
idivb
mov
inc
imul
push
stos
leave
into
mov
add
xchg
or
int3
idiv
xchg
aam
push
mov
fdivl
pop
leave
mov
fiadds
test
hlt
inc
dec
xchg
sti
xor
mov
sahf
enter
insl
add
mov
mov
stos
sbbl
pop
or
jnp
stc
fstps
jmp
and
cmp
sub
das
inc
jl
es
push
lods
sub
fsubrs
pop
pushf
enter
flds
sbb
inc
jl
inc
sbb
pop
stos
cli
scas
incb
in
lret
rcrb
dec
jmp
push
or
pop
pop
or
jnp
imul
leave
mov
mov
mov
mov
sbb
jns
imul
cmp
imul
leave
mov
mov
mov
mov
sbb
pop
in
push
or
daa
aaa
pushf
pop
repz
sub
sub
fwait
lods
or
pushf
iret
addr16
dec
xchg
pop
inc
pop
push
xchg
gs
cmpsl
loop
lahf
in
shlb
mov
and
xchg
mov
xchg
sub
pop
adc
inc
sbb
push
xor
mov
or
pop
ficoml
dec
xlat
in
ja
push
stos
add
test
cs
hlt
popa
add
adc
dec
xchg
xchg
bound
jge
adcb
notb
sbb
cmp
mov
dec
repz
ss
sbb
and
aam
sahf
mov
push
mov
lret
xor
and
jns
adc
dec
pop
scas
out
shrl
test
xor
jne
cmp
dec
sub
and
jne
mov
movsb
pop
rcrb
jmp
push
cmpl
nop
sahf
xor
dec
rorl
ss
jecxz
lahf
movsb
add
xchg
xor
jmp
mov
xor
inc
sub
mov
aam
in
push
mov
adc
nop
or
inc
sbb
mov
mov
mov
fsubrs
ljmp
into
gs
jp
shl
xchg
cli
jb
cmc
imul
or
andl
sbb
lea
dec
stos
and
mov
mov
mov
dec
jp
pop
jo
mov
ret
mov
test
pop
mov
ljmp
jp
push
dec
inc
fists
rcr
mov
mov
loopne
and
fimuls
insl
lea
dec
scas
fsubr
addl
cmp
lret
xlat
out
setge
mov
pop
jg
cmp
mov
sar
insb
lods
and
pushf
out
mov
fsts
adc
xor
jae
sub
mov
int3
addr16
movsl
fcmovnb
aam
adcl
das
js
pop
test
int
idivl
adc
imul
imul
negl
inc
pop
orl
jl
pop
hlt
adc
xor
xlat
mov
insb
xchg
lods
cmp
jmp
int3
add
arpl
mov
sarl
and
jb,pn
xchg
outsl
nop
cmp
test
nop
out
mov
sbb
add
scas
xchg
dec
mov
and
rcl
cmpsb
test
lret
out
cmp
cmc
or
in
dec
jle
jge
test
add
seto
add
xchg
push
add
xor
fdivs
outsb
prefetchwt1
or
sub
sarb
adc
add
fsubl
ficoms
dec
scas
mov
mov
lods
fnstcw
in
xor
add
push
cltd
add
mov
adc
jae
mov
mov
dec
dec
cmp
test
xchg
mov
push
rcll
push
pusha
jbe
lds
popf
pop
pop
push
mov
jmp
dec
inc
jnp
cmp
js
lahf
mov
lret
push
jle
rcrl
mov
xor
dec
movsb
sub
movsb
and
ficomps
xor
add
out
push
arpl
fs
xor
add
repz
lahf
cmp
sbbl
imulb
cmp
and
scas
shll
adc
pop
mov
cs
inc
push
out
es
imul
addr16
mov
mov
sti
scas
or
mov
mov
call
mov
dec
sub
cmp
adc
mov
shl
xchg
sub
ret
sub
loopne
dec
sub
sub
xchg
jg
loope
mov
add
icebp
outsb
mov
fsubl
test
out
les
push
imul
cmp
bswap
mov
push
inc
mov
jge
xchg
jge
mov
shll
adc
hlt
in
and
sub
fwait
push
lret
lcall
shr
hlt
sbb
xchg
sub
cmp
mov
push
jmp
les
pavgb
xchg
jge
sbb
dec
mull
inc
icebp
jns
pop
xchg
pop
stos
mov
std
jge
mov
pop
ja
negl
sub
pop
xchg
aam
cmp
fs
pop
push
std
mov
sub
or
pop
lock
jb
test
cmp
and
sbb
rcrb
mov
mov
or
notb
lock
sub
sbb
xchg
or
cmp
push
jmp
rcrl
cmpsb
test
aaa
fcmovb
xor
ficomps
add
mov
inc
out
push
xchg
outsl
mov
bound
jp
test
loop
rcl
repnz
or
lods
jae
fsub
sbb
loop
decb
cwtl
adc
fidivl
mov
cwtl
dec
lods
loope
pop
sbb
cmp
and
je
and
jae
fstl
popf
inc
stos
or
dec
dec
jb
xchg
daa
cmp
movsb
fsubl
dec
sahf
adc
scas
cmc
aaa
sub
cli
sub
subl
aam
jecxz
xchg
sub
push
jmp
into
xor
jg
inc
inc
xor
rep
push
clc
push
idivl
ja
lods
std
xlat
cld
daa
sbb
jae
push
sbb
cwtl
inc
fsubl
aas
jbe
sbbl
fsin
jae
shlb
adc
pop
push
sbb
enter
dec
ljmp
xor
cmc
test
xor
imul
adc
adc
cmp
adc
push
jle
push
add
mov
dec
imul
jbe
popf
adc
add
es
adc
xchg
aad
or
push
in
ja
or
rcl
pop
and
cmp
iret
sbb
mov
jae
movb
test
aam
xchg
adc
in
mov
fdiv
and
dec
xchg
or
je
cwtl
mov
jmp
fmull
adc
sbb
movsb
lahf
mov
mov
sub
mov
xchg
dec
xor
or
repz
nop
mov
int
pop
aas
enter
and
xchg
or
test
xchg
jne
and
and
sub
popf
lods
aaa
dec
stc
out
dec
fwait
sarl
xchg
rclb
push
jns
jno
bound
pop
mov
cmp
and
loope
lea
test
push
test
inc
inc
mov
ret
in
js
mov
add
inc
out
xchg
adc
inc
mov
imul
mov
ljmp
into
dec
cmp
push
ficomps
cmp
adc
adc
jne
or
adc
xchg
cmp
inc
jbe
pop
mov
hlt
dec
jp
push
mov
push
pop
sub
lret
pop
pop
es
pop
mov
outsl
sbb
daa
push
shll
add
pop
aad
push
dec
fnstenv
cld
test
int
push
and
loopne
ret
pop
xor
push
adc
xchg
pop
js,pn
pop
cwtl
mov
mov
inc
sbb
fdivl
or
mov
out
jbe
push
pop
mov
scas
fcmovnbe
int3
pop
sbb
push
bnd
jl
pop
ret
out
in
icebp
aaa
shr
cli
adc
sbb
or
dec
cmp
cmpsb
sbb
sub
mov
adc
sti
insb
int
lods
lret
andl
push
xchg
adcl
divb
mov
nop
in
enter
ja
jae
inc
aas
or
fmul
loop
push
sbb
sahf
mov
sahf
jmp
movsl
movl
in
filds
jge
ljmp
jle
inc
mov
inc
sbb
gs
movsl
jmp
add
into
push
push
sbb
imul
and
mov
or
and
les
ss
push
push
mov
insl
inc
sub
loope
jmp
out
ljmp
loop
cmpsb
push
cs
xchg
or
clc
mov
mov
shl
dec
push
mov
lods
mov
mov
in
sti
pop
lret
or
pop
pop
cmpsb
fnsave
mov
leave
aad
into
dec
adc
mov
pop
sbb
jg
in
push
xchg
in
or
in
sti
jns
fldenv
test
push
xchg
push
cmpsl
data16
mov
jp
xor
movsb
sar
push
cmp
sti
mov
fildll
scas
test
scas
enter
sahf
jne
clc
les
cmp
inc
mov
fistpl
adc
call
fstl
in
sub
mov
xlat
inc
inc
cwtl
fs
mov
and
jge
pop
sbb
leave
add
loopne
mov
inc
ret
inc
xor
adc
push
xor
sub
jae
pop
or
sub
add
cmp
nop
adc
mov
mov
outsl
add
std
pop
fsubrl
lock
pusha
in
sbb
and
fstpl
loop
mov
ficoms
out
jbe
or
iret
out
mov
push
and
sarl
nop
loop
cmp
jg
jb
dec
xchg
and
idiv
add
jbe
push
mov
pop
aaa
add
mov
and
imul
inc
negl
xchg
mov
mov
imul
mov
sbb
fdivrl
mov
or
mov
or
dec
mov
push
cmp
sbb
int3
out
or
mov
jge
pop
cmpsb
mov
clc
add
add
xor
stos
cs
xlat
in
push
xchg
or
pop
sub
inc
fldt
dec
movsl
cmc
imul
xor
add
add
sbb
mov
pop
in
je
jno
mov
mov
je
nop
cmp
dec
and
adc
cmpsl
xor
jo
xor
clc
fs
rcr
ja
outsb
ja
andb
lock
add
cmp
lods
inc
mov
xor
shr
nop
popa
out
hlt
scas
mov
mov
jp
adc
cmc
add
mov
aam
ret
push
in
mov
push
outsl
scas
stos
cwtl
inc
aad
insl
dec
add
inc
xchg
jle
push
sahf
sub
jbe
out
push
icebp
or
mov
lods
das
aaa
lods
out
ret
out
push
loopne
push
jns
pop
sub
or
js
lret
repnz
pop
mov
scas
and
sbb
iret
cmp
outsl
sub
mov
cmp
data16
jp
lods
lcall
cmp
into
jecxz
stos
aad
lea
les
adc
daa
push
stos
je
sub
outsb
mov
mov
adc
mov
cli
sub
sbb
inc
std
xor
mov
pusha
mov
loopne
or
call
or
mov
add
xchg
pusha
mov
jno
and
je
or
pop
pushl
fnclex
scas
and
lock
xchg
pop
mov
fdivs
out
or
fidivrs
or
push
lods
loopne
sub
out
xor
pop
fiadds
adc
add
inc
loopne
jg
xchg
inc
arpl
mov
mov
jo
xor
out
hlt
xchg
ljmp
scas
pop
out
aam
shll
and
es
pusha
std
push
cmp
jle
xor
mov
test
decb
pop
loope
dec
push
adc
loop
imul
sbb
cmpsl
jmp
dec
test
jns
jl
xlat
add
mov
rorb
sbb
nop
lret
pop
test
inc
movsl
clc
lret
sbb
cmp
xchg
icebp
mov
fwait
addr16
repz
mov
mov
das
popf
imul
lahf
cmp
jne
and
push
jle
subl
push
sahf
xor
lock
outsl
mov
sub
sub
mov
repz
jge
imul
cli
js
pop
shrl
mov
cmp
addl
pop
inc
cmp
push
push
out
sbb
inc
pusha
or
mov
push
inc
imul
sarl
js
aad
loopne
hlt
xorl
inc
cmp
cmp
pop
aad
test
mov
jns
or
pop
jo
shll
fmul
pop
lods
roll
xor
fisubs
adc
cmp
adc
shll
loop
into
insb
inc
sti
push
loopne
lret
pop
movsl
cmp
xchg
add
pop
rcll
push
sub
pop
in
ret
push
and
mov
jns
mov
rcrb
repz
aaa
shll
inc
aas
aas
aad
jle
inc
fiadds
xor
shlb
mov
mov
adc
and
shl
ljmp
cmp
mov
in
sub
jae
add
sub
mov
dec
ljmp
iret
fcos
lods
adc
shl
push
jns
jb
jmp
xor
popa
adc
pop
xor
xchg
push
jno
jno
pop
pop
sub
daa
mov
cmpsb
and
leave
push
ss
ja
insb
bnd
xchg
cmp
pop
mov
add
ja
xor
inc
out
jne
sbb
pop
aas
mov
ja
push
add
aad
mov
lods
jne
cwtl
adc
cmp
loopne
inc
in
cmp
popf
xchg
movsb
fs
mov
jne
sahf
sbb
xacquire
call
adc
pop
iret
mov
add
mov
hlt
jl
and
scas
std
mov
enter
sarl
jle
push
cltd
mov
pop
das
sub
dec
pop
adc
repnz
movsl
cmpsl
movsl
fdivrp
and
cmp
jmp
pop
mov
jp
outsl
sbb
xchg
movsb
mov
out
lret
xchg
mov
mov
adc
pop
add
jns
jns
jnp
aam
clc
jmp
dec
jno
xor
mov
mov
int3
pop
pop
dec
dec
into
jb
in
xlat
cmp
cmp
mov
cmp
bound
cmp
sar
jge
mov
movsl
sub
xchg
dec
pop
arpl
mov
lcall
scas
inc
dec
mov
dec
cmp
mov
shll
inc
mov
xchg
xor
pop
sbb
out
push
mov
arpl
xor
pop
mov
es
add
pop
pop
push
or
pop
pop
movsb
adcb
pop
mov
mov
aam
and
jo
sub
stos
pop
loopne
xchg
xchg
push
ljmp
cmp
inc
hlt
daa
sub
pop
fwait
shll
xchg
xchg
mov
addl
insl
xchg
and
jp
shrb
call
repz
jmp
jle
insb
out
ds
push
scas
daa
inc
repz
out
fnstenv
push
jnp
dec
lret
jns
push
in
mov
in
jp
insl
push
fldcw
adc
push
fidivs
int3
jae
and
out
movsl
cli
mov
dec
stos
xchg
xchg
sub
mull
dec
sti
in
ja
push
mov
cld
add
inc
pop
mov
dec
jae
int
pop
out
das
xlat
sbb
inc
insb
loope
ret
dec
pop
mov
xchg
sub
ret
jo
add
or
cmpsb
or
sti
or
out
es
mov
pop
fs
pop
in
inc
lahf
rcrl
sub
mov
add
fsubs
push
std
test
in
mov
loop
cmp
xor
adc
dec
add
lfs
sub
push
push
xlat
popa
int
push
mov
pop
xchg
test
fdivl
in
and
data16
push
sub
daa
jecxz
cmp
enter
imul
cmp
mov
dec
ffree
cmp
loope
push
into
cmp
sarb
aas
imul
sahf
adc
bound
or
pop
push
arpl
cmpsl
push
jo
fwait
loop
mov
adc
cmpsb
and
enter
xor
cmpsb
fdivl
std
or
out
subb
mov
sbb
aam
push
daa
int3
test
out
jg
inc
lcall
jb
mov
dec
int3
mov
sub
sub
sbb
cmp
mov
stc
mov
clc
xlat
idivl
dec
shll
push
lret
add
std
xor
fst
fistpll
mov
dec
adc
cmp
sbb
mov
sub
sub
or
stc
jno,pt
je
sarl
inc
add
fdivrl
mov
bound
push
fwait
mov
les
daa
cmp
sbb
fwait
push
mov
repz
pop
push
mov
call
and
adc
out
sarl
adc
mov
fs
sarl
movsl
adc
jb
mov
cmp
sbb
dec
mov
mov
test
insl
mov
ds
pop
icebp
inc
pusha
and
loop
add
push
xchg
sbb
out
loopne
arpl
mov
fldcw
push
std
lods
sbb
push
in
jb
sub
dec
fucomi
dec
cmp
movsb
in
je
add
adc
add
or
loop
mov
imul
in
xor
ret
cmp
xor
xor
int3
int
push
cli
mov
dec
push
pushfw
pop
mov
cmp
push
lods
outsl
clc
inc
cmpl
scas
jp
add
dec
cmc
jmp
mov
jnp
push
adc
mov
push
fstpl
inc
jle
icebp
mov
jno
adc
pop
loopne
clc
movsb
dec
inc
jae
ss
iret
repz
test
and
inc
addr16
shrb
popf
repz
or
and
jle
incb
mov
push
dec
xor
sub
dec
pushf
dec
out
arpl
fs
fisubs
orl
dec
jae
sbb
mov
repnz
rorb
enter
xorl
cmp
mov
das
xchg
fwait
lcall
rclb
mov
xchg
shlb
movsb
call
mov
cltd
add
push
pop
movl
and
sub
adcl
adc
aaa
xchg
cmp
les
add
dec
fs
in
and
jbe
lret
pop
jbe
and
xchg
hlt
xchg
mov
xchg
lea
js
mov
xchg
xor
std
addl
mov
add
sub
jp
mov
mov
jb
jnp
or
xchg
fisttpll
xchg
jns
rorb
xchg
pop
in
cmp
and
push
jecxz
push
pop
adc
dec
xchg
out
push
scas
jmp
ret
pop
pushl
jg
mov
mov
bound
test
rcll
inc
sub
cmp
out
xor
jp
into
mov
jnp
ss
and
popl
add
outsb
int3
xchg
fidivrl
js
jne
inc
sbb
icebp
lret
in
push
mov
pop
sbb
jge
and
jg
xchg
mov
xchg
mov
inc
fdivrl
adc
inc
adc
ret
call
loop
push
dec
mov
adc
push
stc
mov
pop
jns
repz
jb
lea
sbb
inc
jg
xchg
wbinvd
push
test
nop
xchg
scas
jbe
mov
dec
jp
mov
orb
int
imul
cmp
outsl
add
xor
jnp
add
ljmp
fidivl
mov
inc
or
pop
out
insl
jecxz
jge
jae
scas
sarb
fdivs
jbe
mov
or
out
pop
sbb
push
jl
in
mov
leave
clc
mov
aam
addr16
fisubs
add
shlb
insb
pop
movsb
pushf
loope
sub
mov
push
icebp
dec
xchg
insb
out
aad
or
dec
int
repz
aaa
pop
movsl
mov
rcrb
popf
hlt
pop
outsl
jmp
mov
ljmp
cmp
jl
mov
inc
dec
aas
mov
add
cs
subl
les
sbb
std
dec
or
add
das
nop
ret
jbe
and
sub
pop
or
jnp
imul
leave
mov
mov
mov
mov
sbb
jns
imul
cmp
imul
leave
mov
mov
mov
mov
pop
dec
add
sbb
and
jg
imul
leave
stc
mov
mov
mov
decl
jns
imul
sti
test
and
jmp
mov
adcl
dec
enter
pop
and
push
adc
mov
cmpsl
mov
addl
xlat
jecxz
add
add
add
and
push
ja
jmp
push
arpl
cltd
mov
xchg
xchg
sbb
repz
jecxz
or
cmp
imul
xlat
hlt
cld
mov
mov
arpl
add
bound
pop
inc
mov
lahf
push
push
dec
cmpsl
or
push
xchg
in
cltd
adc
mov
adcl
add
dec
ljmp
and
outsb
dec
sahf
add
jp
loope
sbb
icebp
jnp
xchg
cmp
sbb
xlat
xchg
pop
pop
and
ret
notl
aaa
roll
test
jbe
push
setnp
divl
notb
xchg
repz
iret
push
push
addb
andl
pop
jae
fwait
in
mov
push
mov
out
sbb
repz
cmp
xchg
pop
dec
mov
dec
push
rcrl
adc
jecxz
shll
add
xor
pop
addr16
jp
mov
fwait
popa
stos
xchg
pop
repz
cli
test
push
push
inc
sub
add
or
push
and
icebp
and
jecxz
out
mov
xchg
xchg
push
jbe
and
sbb
sub
repnz
loopne
cmpsl
mov
xorl
pusha
push
inc
and
inc
addr16
arpl
mov
cmpsl
mov
mov
out
xlat
jecxz
adc
add
xor
and
push
ja
addr16
arpl
mov
cmpsl
mov
mov
out
xlat
jecxz
adc
shl
mov
sub
je
mov
lods
inc
ja
int
push
mov
xor
mov
cmp
lock
shrb
gs
or
sub
je
sbb
mov
pop
ss
cld
jnp
push
dec
cli
mov
sahf
mov
mov
sub
icebp
sbb
ret
adc
rolb
or
es
mov
outsb
fidivs
outsb
imulb
or
inc
pop
shr
and
icebp
jbe
repnz
int3
xlat
les
pop
sbb
orb
cmp
add
mov
shl
jae
jne
mov
xchg
jge
mov
je
jle
add
test
daa
in
cs
and
pop
or
fs
pop
fisttpll
stos
mov
add
xchg
in
jp
push
sub
call
add
mov
aad
test
shr
rcrb
in
test
les
mov
dec
mov
fdivr
inc
stc
add
or
xor
mov
sarl
fdivs
cmp
mov
mov
mov
out
or
aam
xchg
dec
xchg
out
aas
test
inc
mov
scas
mov
call
cli
ret
repnz
mov
fisttpll
and
loopne
out
dec
adc
aam
jns
xor
adc
push
xchg
fdivs
and
jne
lods
adc
jbe
roll
sub
push
cli
test
pop
mov
mov
repz
cli
mov
imul
jnp
call
mov
addr16
jne
sbb
rcrl
sysret
push
mov
ljmp
cmc
iret
cmp
enter
dec
adc
mov
std
data16
test
fcomi
movsb
or
movsl
inc
pop
mov
mov
or
jge
dec
dec
dec
mov
js
jecxz
hlt
mov
leave
stc
push
movsl
jecxz
aas
pusha
xchg
in
out
lods
loope
push
dec
xor
outsb
insb
sub
lcall
gs
xchg
icebp
lcall
icebp
insl
mov
push
das
pop
mov
loopne
call
pusha
lods
movsl
into
ret
jp
out
jb
fldenv
push
test
mov
mov
aaa
pop
subb
sub
lea
seto
sbbb
mov
clc
je
in
adc
lahf
lods
ja
sbb
push
mov
mov
xchg
push
jmp
or
pop
jns,pn
pop
test
cs
sub
lret
adcl
mov
out
mov
adc
jecxz
sbb
ja
cmpsb
lcall
or
shlb
jmp
xchg
mov
bnd
cmp
add
inc
aad
fnsave
jbe
repz
xchg
mov
sbbb
mov
popa
mov
mov
push
aas
cmp
sbb
or
imul
movsb
xor
out
mov
pop
out
lcall
xor
sub
pusha
inc
loope
jae
daa
imul
fstpl
imul
pop
jmp
jge
stc
push
jmp
and
mov
aas
push
dec
roll
jnp
scas
ds
nop
cld
ret
jge
shr
lods
stc
xor
lea
dec
xchg
addr16
add
add
push
lret
hlt
inc
jo
inc
popf
and
and
iret
clc
shr
jl
xor
mov
lret
enter
fdivp
and
jne
mov
icebp
fmull
add
mov
fisubl
push
and
cmp
jo
pop
les
sub
sahf
xchg
sub
push
andb
mov
and
lods
mov
shlb
bound
iret
cmpsl
xchg
test
cmp
adc
mov
inc
mov
xchg
and
dec
inc
inc
std
pop
dec
dec
pop
lea
cmp
pop
push
aaa
jmp
pushf
into
cmp
add
ljmp
movsl
push
mov
insb
or
loope
fidivrs
flds
xchg
fistps
adc
cmp
lret
inc
sub
sub
xchg
pusha
popa
out
adc
or
pop
fadds
out
lea
adc
xchg
adc
inc
daa
mov
std
dec
mov
bound
or
cld
rcl
cmpb
inc
iret
push
mov
sub
fcmovnu
xchg
and
movsl
jo
subl
dec
addr16
sbb
mov
push
dec
das
cs
inc
mov
sub
push
jae
ds
push
sti
xor
pop
popf
sahf
addr16
enter
or
pinsrw
icebp
jae
or
mov
divl
pop
xchg
fdiv
cmp
lahf
insb
xchg
arpl
insb
push
jb
push
pushw
pushf
imul
fld
ja
sub
dec
test
push
sbb
fisubrs
aaa
jmp
sbb
cmpb
xchg
popa
pop
rolb
aas
je
push
sbb
or
and
xchg
jmp
pusha
add
pushf
out
stc
jne
pop
xor
xor
pop
dec
rep
inc
cmp
mov
mov
movsl
scas
mov
aaa
add
sbb
leave
in
sub
mov
jae
xor
cmp
in
or
lahf
les
test
aas
decl
arpl
adc
rcrl
dec
jmp
mov
mov
aas
jge
stos
cmpb
cmp
add
push
inc
arpl
test
imulb
sti
mov
lds
int
mov
jecxz
xchg
aam
je
xchg
jecxz
movsl
dec
push
int
add
std
add
aaa
sbb
mov
pop
scas
cwtl
in
jo
fistpll
sub
pop
add
and
faddl
fcoms
into
lea
mov
xor
ds
sub
fsts
mov
icebp
jb
adc
push
fidivrl
or
fisubs
and
add
jno
xchg
mov
repz
cmp
add
mov
lret
push
push
jl
outsb
push
test
es
repnz
jmp
lock
xchg
cmpsl
scas
and
pop
add
adc
mov
clc
jp
jbe
repz
sub
and
adc
lret
fstl
std
adc
jp
popa
adc
xchg
lock
jecxz
mov
clc
mov
xlat
dec
pushf
jbe
les
push
sub
fsubrp
inc
and
pop
cld
sub
push
out
fwait
and
sar
sub
inc
adc
cmpsl
jbe
mov
or
imul
push
sbb
push
pop
pop
mov
imul
fwait
rolb
push
imul
xchg
incl
and
sti
sbb
pop
cld
mov
mov
xchg
notl
and
scas
mov
or
test
lds
xor
and
and
inc
jge
push
gs
sbb
mov
test
inc
xor
icebp
divl
cwtl
mov
xchg
or
cmpb
or
sbb
jg
jg
mov
mov
outsb
and
aam
insb
sarl
pop
clc
iret
cmp
mov
or
je
mov
mov
icebp
jb
rclb
loop
mov
inc
ja
rcrl
fdivl
ret
mov
data16
jg
aas
bound
add
adc
pop
lods
test
ficomps
int3
or
cmovne
orl
dec
sbb
push
popf
fdivs
mov
shr
xor
fcompl
cmp
push
xor
sub
add
andb
jns
jecxz
stc
je
lods
mov
jecxz
inc
push
mov
sbb
or
mov
dec
pop
iret
add
cld
in
sbb
cmp
mov
int
ret
nop
out
rorl
out
mov
mov
gs
dec
pop
mov
or
roll
nop
jbe
pop
pop
sbb
loopne
cmp
sahf
mov
iret
sbb
loope
cmpb
push
adc
insb
mov
cld
inc
pop
je
cmp
lods
or
push
lea
adc
stos
xchg
gs
mov
scas
jp
pusha
sarb
and
sbb
das
push
lds
nop
lods
jmp
xchg
rol
cmp
into
ss
sbb
sbb
sub
dec
xchg
mov
sti
test
mov
cmp
stos
mov
divb
jl
push
cltd
in
xor
imul
mov
sbb
gs
in
mov
es
stc
movsl
cmp
ror
jp
das
and
sbb
popa
xor
mov
cmc
pop
dec
cmp
pusha
add
je
decl
arpl
or
cmp
loopne
std
xchg
incb
xchg
cs
pushf
out
cmp
pop
adc
imul
adc
dec
mov
fwait
sbb
and
push
mov
ret
cmp
mov
mov
arpl
mov
xchg
xor
or
cmp
jg
call
xor
add
cli
push
mov
sub
sbb
xor
sbb
int
push
dec
in
filds
add
incb
or
jnp
rcrb
scas
out
aas
int3
push
adc
aad
dec
jbe
mov
mov
push
dec
jo
cmp
sub
das
dec
loop
notb
jmp
std
imul
mov
shrb
xchg
jne
mov
es
mov
pop
cs
jmp
icebp
sarb
outsl
cmp
aas
sbb
call
xor
xchg
jecxz
jmp
out
adc
insl
pop
push
cmp
outsl
ljmp
notl
lcall
movsl
insl
sbb
test
cmc
adc
sbb
pop
popa
out
jne
add
adc
cmp
lock
out
popa
cltd
sub
jbe
pop
mov
arpl
or
in
into
xor
cltd
lds
out
sbb
movl
mov
aad
xor
xchg
hlt
jnp
mov
iret
xchg
pop
add
jp
mov
test
insl
pushf
cld
push
ljmp
sahf
pop
int
daa
inc
std
mov
ljmp
incb
xor
or
lods
addr16
jo
int
and
in
ret
jae
dec
xor
in
mov
add
sti
xchg
add
ret
jl
cmp
add
add
cmpsl
loope
add
cmp
push
repz
pop
dec
data16
into
les
nop
xor
fldcw
push
mov
das
push
stc
cld
jb
or
push
pop
adc
xchg
int
jp
pusha
shll
mov
xor
push
jbe
xchg
dec
lods
fwait
or
in
addb
into
add
dec
mov
mov
sub
lea
xor
stos
mov
aaa
push
rcl
xchg
sbb
xchg
inc
aas
xor
repnz
test
xchg
push
and
arpl
jp
sub
dec
inc
xchg
xchg
jae
sbb
loope
int
xchg
mov
movlps
sub
jbe
cmp
sub
andl
dec
fucomip
mov
push
pop
add
push
mov
mov
cmpsb
and
cs
pop
mov
ret
mov
addr16
sahf
repz
je
xor
fstps
pusha
cmp
mov
mov
adc
push
cmp
lds
jle
stos
repnz
addr16
xlat
mov
arpl
mov
xchg
fsubrl
fildl
outsb
popf
dec
add
popa
sub
lret
jns
and
gs
int
shll
sti
push
mov
cld
bound
test
rcrb
sub
xor
mov
popl
add
rcll
pop
and
pop
mov
inc
sti
js
adc
jo
and
sub
sub
add
push
in
jle
bnd
add
movsl
xor
fcmovbe
adc
out
lds
xchg
push
andl
movsb
jo
inc
popa
jae
insb
mov
mov
cmp
xchg
cltd
xchg
mov
into
or
adc
cli
push
sarl
inc
push
popf
cmp
addr16
jmp
repz
xchg
xor
mov
pop
ficoms
xorb
fistl
xchg
jno,pt
int3
int3
cmp
fcom
outsl
adc
stos
shl
xor
xor
mov
das
int
and
in
mov
ja
inc
or
stc
lods
xor
addr16
and
loop
pop
aas
push
ja
mov
loop
push
loop
loopne
mov
pop
iret
dec
xor
imul
fdivrp
icebp
repnz
dec
cmc
cmp
es
mov
insl
stc
mov
or
jg
insl
jae
dec
jb
out
mov
shrl
push
stos
cli
ss
fisubl
je
orl
inc
ret
jns
push
xchg
sub
out
stc
mov
jmp
inc
cwtl
vpaddsw
xor
sub
roll
or
stos
cmovb
nop
fadds
jo
ret
jb
int3
addr16
adc
icebp
into
push
adc
mov
aaa
dec
add
and
jae
mull
mov
js
in
jo
out
repnz
sbb
inc
call
ret
mov
and
call
cmp
dec
loopne
je
mov
cmp
ficomps
push
cmp
test
out
out
out
lods
je
fstps
rcrl
movsb
cmpsb
sbb
outsl
pop
dec
dec
cmp
push
jnp
inc
push
push
mov
xchg
jmp
xlat
xchg
cmpsb
daa
leave
out
aaa
cmp
daa
addr16
add
mov
mov
push
or
cmp
in
gs
rcrl
pop
and
mov
pop
dec
mov
add
xchg
jmp
xor
adc
aaa
mov
aas
mov
push
xor
iret
mov
divb
mov
out
sub
aaa
push
fsts
les
out
lock
test
imulb
inc
loope
test
pop
sti
cld
add
ljmp
nop
imul
inc
rcrb
fdivs
push
clc
daa
xor
xor
aam
jo
fnsave
cli
cmp
outsb
adc
inc
fildll
lods
pop
jle
inc
and
testl
mov
adc
and
fstpl
shlb
orl
shrl
dec
add
lock
cmpsb
dec
inc
pop
int
insl
jge
call
inc
fs
or
xchg
and
bound
icebp
jae
test
adc
std
jmp
ljmp
js
xchg
aam
rorl
jne
add
popf
add
xchg
push
das
lret
fdiv
cli
xor
rcr
xor
outsl
jg
dec
pop
scas
and
mov
cs
and
pop
mov
popa
lcall
pop
into
mov
cmp
int3
fs
cmp
and
test
aaa
xchg
std
adc
cmp
mov
fiadds
dec
inc
push
adc
and
nop
mov
pop
push
mov
test
lret
push
mov
rclb
push
lahf
sbbb
sahf
bound
mov
out
pop
in
jp
pop
adc
mov
sbb
mov
in
fdivl
int3
int3
mov
add
dec
sbb
pop
mov
lcall
arpl
and
push
in
ljmp
sbb
or
jns
push
cmp
and
dec
pop
adc
repnz
das
jns
sarl
or
icebp
cmp
data16
mov
leave
adc
or
dec
sbb
rorl
enter
sbb
dec
adc
in
repz
sbb
push
outsb
mov
iret
pop
fwait
mov
dec
ja
aaa
push
out
aad
inc
inc
or
jns
dec
and
stos
test
repz
fisubl
lods
lahf
popf
stos
pop
je
push
fisubrs
mov
mov
outsb
jne
push
dec
mov
push
mov
jge
cmpsl
sarb
ljmp
flds
sahf
mov
xchg
xchg
ljmp
push
gs
in
mov
push
into
inc
cli
or
jbe
loope
lcall
xlat
pop
mov
scas
pushf
shrb
imul
leave
push
jb
in
inc
pcmpeqw
enter
outsb
mov
mov
jecxz
jno
ljmp
add
xchg
xchg
fdivrl
inc
out
incl
sbb
cmc
out
push
cltd
xchg
pop
aaa
lods
out
inc
pop
dec
sarb
sbb
xchg
cltd
xchg
sub
scas
cli
std
out
fstps
cmp
adc
lret
shll
cmp
insb
adc
lea
push
mov
xchg
add
cmp
test
add
mov
into
pop
lock
hlt
mov
inc
mov
adc
mov
iret
inc
loopne
and
in
test
addr16
xor
jne
xchg
cwtl
push
adc
mov
into
push
adcb
sbb
int
jmp
push
mov
sub
ret
in
adc
fdivrs
js
or
shlb
negl
ficoml
inc
fs
test
stos
popw
movsl
paddusb
xlat
sub
cmp
fimull
pushf
scas
ret
jle
ja
out
insb
jae
xor
jge
xchg
test
fcomip
out
popf
xlat
jae
add
push
ljmp
sub
pop
ss
mov
jmp
or
lock
and
movsl
inc
inc
push
sahf
cmp
aam
insl
test
jo
sbb
lret
add
push
mov
add
sbb
pop
push
push
mov
add
jbe
in
adc
and
daa
fisttpll
pop
jge
sahf
scas
daa
mov
xchg
mov
aas
dec
pushl
mov
xor
inc
jl
mov
es
dec
in
lcall
je
inc
pop
sub
fdivs
push
iret
adc
sub
pop
mov
icebp
adc
out
mov
or
movsb
aaa
ficoml
mov
pop
sbb
stos
mov
mov
jmp
ret
mov
pusha
shrb
imull
and
push
pop
and
jmp
lods
sbb
fcmovu
push
cmp
faddl
xchg
lods
lods
into
rol
push
jo
jecxz
out
jo
and
aam
mov
iret
jg
fnstcw
insl
or
lahf
mov
mov
pop
push
daa
leave
cltd
inc
pop
ljmp
mov
xchg
jmp
pop
inc
fidivrl
adc
add
ja
int
inc
insb
xor
loope
push
sbb
loope
int
adc
pop
mov
ret
rclb
mov
add
enter
and
arpl
pop
xor
adc
mov
arpl
xchg
dec
fs
jno
sahf
add
mov
sub
aas
dec
inc
cmovae
or
xchg
lock
xchg
mov
push
notl
sahf
mov
imul
cmp
sub
addb
mov
cmp
ljmp
mov
subl
gs
lock
cmp
push
push
repnz
mov
adc
hlt
sbb
iret
mov
rcll
ret
cmp
int3
inc
lds
adc
inc
cmp
mov
lods
xor
mov
push
add
addr16
fldt
dec
sbb
push
cmp
inc
call
fdivrs
sbb
int3
rorb
cmp
fs
mov
fdivr
mov
push
adc
pop
dec
mov
sahf
in
pop
pop
aaa
xor
and
es
jb
push
mov
pop
jo
out
jge
add
scas
test
or
fstps
mov
inc
sub
mov
and
mov
into
hlt
dec
aaa
push
lds
imulb
imul
jns
popa
push
mov
test
daa
idivb
pop
push
ja
addr16
arpl
mov
cmpsl
mov
mov
out
xlat
jecxz
adc
add
xor
and
push
ja
addr16
arpl
mov
cmpsl
mov
mov
out
xlat
jecxz
adc
add
outsl
and
push
ja
iret
jae
arpl
outsl
andl
test
daa
aaa
aaa
daa
add
ja
repz
jecxz
insb
dec
jl
sbb
dec
sbb
sbb
int3
push
mov
push
mov
mov
mov
mov
push
add
push
mov
push
mov
pop
add
mov
mov
mov
movzbl
movzbl
sub
je
mov
call
push
pushl
call
pop
pop
call
push
push
call
push
push
push
push
push
call
mov
add
push
pushl
call
pushl
mov
call
push
call
push
push
push
push
push
mov
call
push
call
push
push
push
push
call
push
push
push
push
call
pushl
call
push
push
mov
call
push
push
push
push
push
push
mov
call
push
call
mov
movzbl
movzbl
sub
jne
push
push
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
mov
mov
movzbl
movzbl
sub
je
call
jmp
pushl
pushl
call
pushl
call
push
pop
pop
pop
pop
pop
ret
dec
in
pop
cld
imul
imul
cmp
dec
stc
pop
mov
test
cld
add
lods
sbb
insb
fnstcw
stc
pop
leave
dec
cltd
cmp
or
sbb
in
stos
cld
sti
int3
mov
mov
lods
insb
cli
pop
subl
jmp
std
imul
mov
adc
repz
adc
mov
je
int3
movsl
cltd
dec
lods
repz
in
jmp
mov
mov
aas
jl
subl
jbe
lds
mov
dec
mov
sbb
sbb
outsl
sbb
loope
jb
push
or
insb
fnstcw
dec
stc
mov
popa
addl
mov
lods
sbb
nop
flds
jbe
cltd
fsubrl
sub
add
in
cmc
daa
xchg
push
mov
xchg
pop
imul
jg
sub
fs
mov
ljmp
lock
push
or
cli
insb
fnstsw
cmp
insb
test
in
paddb
jns
in
lods
popa
mov
inc
jl
dec
leave
pop
shrl
fwait
or
pop
and
sub
data16
enter
call
mov
pushf
sub
pop
idivl
jle
jns
cmpb
test
mov
insb
mov
or
push
lock
imulb
and
test
sbb
insb
fnstcw
stc
pop
mov
cmp
or
sbb
in
pop
cld
imul
sbb
insb
fnstcw
stc
pop
mov
cmp
or
sbb
in
call
stos
mov
jne
mov
in
in
jmp
and
js
sub
jbe
sub
mov
shl
inc
mov
mov
push
xchg
ss
lea
repnz
mov
mov
out
negb
data16
lcall
inc
arpl
vmwrite
test
test
cltd
push
inc
mov
jnp
jo
sub
push
cs
ljmp
pop
icebp
cmp
jmp
imul
inc
sti
dec
mov
push
out
outsb
out
dec
push
scas
lret
push
notl
fsubrs
mov
mov
jge
push
sbb
jmp
or
pusha
add
int
adc
inc
push
xchg
xchg
data16
inc
add
dec
mov
add
in
xor
push
cmp
jno
ficoms
push
jle
cld
arpl
sub
mov
hlt
and
xchg
sub
sub
dec
es
out
add
pop
std
xchg
jecxz
lock
mov
insl
orb
jecxz
insl
cmp
mov
sub
mov
lcall
mov
jbe
xor
jle
dec
daa
jo
fwait
inc
fadds
popa
mov
mov
inc
cwtl
push
mov
ficompl
cld
jo
loope
and
pop
push
cmp
outsb
xor
dec
test
shrb
sbb
sbb
inc
int
icebp
pop
mov
in
psrad
in
loopne
xchg
xchg
sahf
push
pop
dec
arpl
pushf
loopne
pop
jecxz,pt
xchg
sbb
int3
inc
xchg
scas
jp
les
xor
into
jle
dec
pop
inc
cmp
or
dec
out
xchg
sub
or
addr16
xchg
inc
cld
mov
js
shlb
inc
aas
sub
cmp
mov
in
jns
dec
lds
js
pop
cmp
inc
jp
sarb
in
pop
fcomip
push
push
std
enter
jge
sub
sti
and
inc
loop
jle
adc
in
repnz
out
das
dec
push
fwait
dec
sub
xchg
test
icebp
sahf
ja
sub
icebp
stc
cwtl
shrb
jge
mov
stc
jmp
test
roll
pop
jnp
call
pop
popa
jge
rcrl
sbb
jp
das
or
cmc
ret
jmp
add
xor
pop
pop
lods
push
xchg
dec
fists
ror
out
or
inc
std
data16
xchg
movsb
or
cmp
jmp
and
loopne
ss
or
push
push
shl
call
mov
enter
comiss
je
xchg
fdiv
insb
lock
jg
mov
sbb
imul
mov
sbb
add
xchg
or
addr16
std
ljmp
divl
jl
sbb
mov
lcall
pop
jbe
sub
insl
xor
imul
lods
mov
fdiv
enter
test
arpl
test
aas
push
and
push
dec
dec
dec
dec
jmp
add
pushf
dec
cmpsl
jle
addr16
inc
or
sub
rep
or
aad
add
fstps
ret
insb
sbb
out
outsl
push
push
jnp
push
inc
insb
xchg
sbb
hlt
sub
mov
ret
mov
nop
mov
cmc
or
sub
lods
mov
cld
repz
insb
push
lcall
and
inc
jno
fs
mov
cmpxchg
test
hlt
pop
mov
cmp
push
push
xchg
imul
dec
cltd
sti
fisubrl
pusha
cmp
imul
imul
push
orb
repz
fsubrs
rorb
out
ja
add
call
lahf
xor
fidivl
mov
sub
shll
push
mov
ret
pop
jbe
test
loope
call
inc
lret
inc
add
jnp
xor
cmp
push
jb
jg
bound
sarb
mov
fcomps
into
lret
push
shr
test
aad
xlat
adc
pushl
sbbl
jnp
sub
loope
ret
lods
dec
sub
out
fsubrl
jge
mov
jl
push
int3
adc
adc
cld
aaa
or
out
mov
sahf
scas
jne
xor
lea
enter
call
lods
sarb
push
push
cmp
ret
insl
mov
in
xchg
push
movsl
arpl
and
add
cmc
jmp
les
out
dec
cmp
imull
push
jle
mov
pop
scas
xchg
pop
jl
hlt
repz
cmp
ja
je
outsl
push
pop
push
fstpl
cmpsl
aad
mov
adc
call
aaa
push
mov
test
jg
loope
jo
into
pop
out
push
or
push
std
das
inc
filds
dec
jno
popf
enter
mov
not
test
es
lret
ljmp
flds
xchg
divl
mov
mov
fndisi(8087
jl
hlt
mov
mov
lods
mov
inc
stos
lock
adcb
iret
fcompl
cmp
data16
out
sub
arpl
fs
push
pusha
bnd
inc
shrb
arpl
jmp
jo
ja
sahf
mov
jno
cmp
ds
or
ja
mov
fidivl
ficomps
stos
test
scas
insb
or
lret
jb
in
lret
out
adcb
dec
pop
repnz
adc
push
inc
cli
push
jl
mov
inc
testl
mov
fwait
add
movsb
dec
or
lahf
cwtl
xchg
inc
aad
mov
and
fistl
in
cmpsb
mov
xlat
movsl
mov
adc
aad
mov
xchg
mov
les
scas
adc
imul
xlat
inc
hlt
insb
hlt
mov
fcmovnb
ja
pop
xor
push
mov
arpl
cmpb
out
push
arpl
lds
loope
dec
inc
mov
scas
enter
sub
push
sahf
cmpsb
in
cli
aas
mov
and
jo
imul
pop
xchg
shl
and
inc
or
xchg
das
sub
sub
xor
cmp
in
and
cmp
lods
dec
or
mov
dec
mov
adc
aad
push
movsb
fs
xchg
adc
push
jnp
inc
xlat
lret
inc
data16
ret
je
add
mov
pushf
cwtl
mov
loop
neg
scas
dec
ret
pop
jecxz
fnstenv
and
mov
dec
test
jbe
mov
add
lret
js
scas
lcall
mov
sbb
loope
pop
in
ljmp
fisubrs
inc
loop
ficomps
xor
in
jnp
pop
or
xchg
push
and
push
out
xchg
sbb
jg
and
clc
ret
push
xchg
xor
insb
push
sub
xor
out
inc
popf
push
mov
inc
xchg
pop
dec
scas
insb
das
ja
out
push
arpl
xor
add
repz
mov
sti
das
mov
jmp
shrb
mov
das
push
push
cmpl
insl
xchg
cmp
mov
xchg
pusha
fidivl
std
mov
int3
rorl
loope
add
mov
dec
imul
roll
shll
outsl
outsl
cld
sub
test
les
arpl
ja
cwtl
jne
mov
adc
cli
push
xor
mov
arpl
cmpsb
cltd
pop
iret
lods
in
rol
mov
ss
ret
idivl
das
imul
ds
scas
cmp
icebp
jnp
cmc
ds
movb
cwtl
jne
pop
cmp
pop
mov
xchg
mov
aam
adc
mov
repz
es
adc
xchg
add
gs
fistpll
imul
push
cmp
loope
push
add
and
pop
scas
xchg
fs
ss
aad
jecxz
out
test
iret
iret
int3
push
test
adc
adc
fsubrl
pop
mov
loopne
adc
add
in
inc
add
insl
pop
mov
mov
mov
xchg
std
pop
xchg
sub
fwait
sub
pop
decl
inc
mov
push
mov
leave
mov
add
mov
sub
andb
out
ss
mov
stc
dec
movsl
and
push
sti
pop
stos
out
aam
adc
push
imull
fidivrs
popa
push
pop
mov
and
int3
arpl
sub
cmp
sti
bound
cwtl
call
xchg
xchg
and
cmc
iret
adc
imul
and
dec
insb
aam
mov
mov
cmp
pusha
iret
xchg
mov
xlat
mov
sub
inc
push
jae
pop
aaa
jns
add
rclb
pavgw
jmp
push
scas
push
mov
dec
rcll
cwtl
mov
mov
cmpsl
jmp
pop
xchg
dec
ja
aam
adc
jo
das
dec
jle
sub
test
aad
or
pop
mov
sti
pop
scas
xchg
xchg
pop
jns
repz
xchg
sbb
outsl
cmp
mov
lods
enter
and
mov
cmp
test
ds
fsubrl
or
pusha
adc
lcall
mov
sbb
jp
imul
hlt
jmp
sbb
imul
cld
roll
pop
js
jge
aam
lahf
outsl
mov
or
aaa
divl
fsubl
jecxz
int
fs
loop
and
mov
xchg
outsl
cli
and
pop
add
xor
push
cltd
push
sbbl
in
loope
addl
inc
mov
xor
dec
aad
movsl
add
mov
mov
push
loope
int
shll
shr
mov
and
or
sub
pop
push
je
xchg
mov
push
push
push
jbe
push
jge
mov
xor
xor
lret
out
icebp
insb
out
inc
das
lock
xor
mov
adc
mov
repnz
mov
or
fsubr
dec
mov
test
test
scas
jne
out
jmp
lea
stos
cs
jnp
fcmove
lea
cs
scas
xlat
inc
jnp
sbb
or
pop
jge
mov
insb
xor
outsl
fmulp
xchg
inc
add
jmp
mov
aad
test
push
add
sbb
or
pop
sbb
add
and
push
add
not
jl
cmp
push
mov
fsubp
loopne
mov
mov
and
sbb
loope
push
mov
inc
out
sti
mov
fnsave
pushf
xor
iret
lods
insl
gs
jl
fcoml
and
add
xor
out
gs
cs
cmpsb
fists
ss
mov
sub
inc
jp
imul
popf
mov
or
fs
iret
call
xchg
lahf
jne
rolb
inc
xchg
pushf
xchg
xor
cmp
bound
pop
sub
imul
adc
nop
inc
sbb
cli
mov
dec
sub
insb
loope
and
out
fidivl
jle
adc
movl
stos
loopne
sbb
xchg
push
mov
jecxz
mov
pop
lds
sub
fsubrs
into
inc
jmp
mov
lret
scas
dec
cmpl
fbstp
shr
fidivrl
pop
mov
int
cmpsl
mov
das
xor
add
nop
fwait
lret
arpl
cmpsb
pop
lock
jno
push
and
bnd
pop
push
fs
je
rorl
cli
psllw
test
js
insl
sar
sub
in
add
lds
mov
fmul
sub
aam
ret
adc
mov
nop
mov
mov
test
or
pop
clc
ret
ss
pop
jecxz
mov
movb
fwait
cmc
dec
push
push
movsb
pushf
dec
outsb
push
jb
ficompl
or
jns
clc
into
sahf
mov
mov
adc
pop
or
or
jg
push
std
outsb
mov
inc
sbb
and
or
mov
movsl
cmp
add
mov
outsl
or
aam
jno
scas
loopne
outsl
jbe
pop
push
push
and
cmp
and
aam
lahf
nop
xchg
push
mov
cmp
int3
ja
ret
add
scas
sbb
sahf
sbb
movsl
sbb
enter
mov
outsb
sbb
mov
sbb
shrl
popa
pop
mov
mov
negl
rcr
mov
pop
imul
rolb
sti
stos
data16
ja
dec
imul
jae
jl
cmpsl
jp
das
lcall
xchg
sub
push
push
cwtl
lret
push
stos
cmpsl
adc
in
push
lds
movsb
sahf
cmp
sarb
mov
jp
addr16
and
or
icebp
cmpsb
aam
inc
sti
frstor
das
jp
or
gs
add
into
pop
mov
cmp
lret
lret
push
xor
push
repz
mov
mov
mov
inc
xchg
or
adcl
add
and
xor
jl
jg
pushf
test
out
or
dec
stc
add
pop
sbb
loopne
sbb
or
lods
aas
mov
test
adc
mov
dec
mov
ds
jg
into
bound
movsl
gs
aam
adc
fnstenv
mov
mov
xor
mov
lock
outsl
jo
repnz
ret
cs
mull
add
push
fs
orb
loop
cmpsb
xlat
mov
jg
push
lret
mov
xchg
pop
pop
inc
nop
pop
push
insb
divb
cmp
jb
mov
mov
mov
cmpsl
mov
add
sub
and
rorb
outsl
lods
jl
roll
mov
xchg
in
push
nop
lret
fsubl
dec
or
aaa
fstps
cli
xchg
inc
xchg
inc
jo
and
adc
jnp
scas
adc
test
mov
pop
jecxz
stos
stos
out
aad
mov
push
gs
loope
cmpsl
push
mov
mov
leave
shr
push
adc
repz
mov
xor
mov
je
movsb
inc
pop
xchg
orb
into
outsb
imul
jb
lea
imul
pop
add
lcall
inc
int3
mov
notb
cmp
les
pop
in
arpl
mov
inc
fdivl
mov
sbb
push
faddl
ljmp
sub
nop
mov
inc
lahf
or
loopne
hlt
fimuls
or
call
stos
sub
rcll
adc
aam
inc
inc
inc
lock
push
fwait
rorb
sti
jmp
cmp
stc
cmp
aas
jb
and
pop
into
inc
push
dec
xor
sbb
add
movsl
mov
out
cmpsb
mov
cwtl
ds
ret
pop
mov
mov
addr16
ficompl
cmp
lock
inc
xor
fstl
orb
xchg
punpckldq
mov
cmp
imul
mov
je
sub
scas
sbb
pop
push
insb
push
movsl
outsl
out
iret
mov
xor
xor
xchg
fisubrl
cld
cmp
pop
fs
rolb
ficomps
cmc
cli
xchg
out
mov
sub
icebp
pusha
pop
xor
and
cmpb
xor
or
addr16
pop
cmp
xchg
adc
movsl
jne
inc
mov
jle
or
into
sub
push
adc
add
and
add
add
pop
push
fdivrp
test
jg
popa
les
mov
sbbb
add
jg
out
mov
clc
rcrb
push
adc
out
mov
add
xchg
test
jo
pop
mov
mov
ret
adc
lcall
cmp
cmp
pop
mov
dec
inc
pop
es
pop
lods
cmp
dec
ret
push
pop
jecxz
push
mov
cmp
mov
enter
lds
aam
outsl
add
movl
bound
daa
in
das
add
in
xchg
dec
outsb
xor
repnz
scas
pushf
lea
cmp
jne
or
or
mov
jp
adc
xchg
bound
lods
mov
mov
shl
rep
hlt
sahf
out
mov
xor
sub
xlat
or
movsl
xor
das
add
pop
shlb
jmp
jecxz
rcl
pop
xor
push
jns
popa
xor
das
xchg
fcomps
xchg
jg
clc
cmc
mov
arpl
fstps
lret
cmpsl
jl
aaa
imul
mov
ja
mov
ds
pop
pop
jp
adc
stos
inc
add
repnz
scas
fldl
popf
sbb
out
cltd
mov
cmp
add
jg
aas
ret
int3
ds
mov
cmp
xor
jne
add
fs
pop
sahf
mov
push
pushf
iret
enter
mov
scas
mov
xlat
or
loop
sbb
inc
cmpsl
in
add
loopne
inc
pop
into
adc
ss
mov
mov
cld
inc
add
sbb
cmc
inc
xlat
push
fidivl
mov
push
mov
jecxz
mov
lret
pop
cld
mov
adc
in
mov
lret
daa
rolb
jae
push
push
adc
rorl
xchg
mov
out
mov
ret
jnp
clc
cmp
popa
mov
jns
mov
insb
xchg
pop
into
ret
test
out
sub
xchg
push
lahf
dec
cmp
adc
dec
sti
repnz
xchg
mov
mov
lods
mov
daa
mov
sub
call
fstl
daa
pushf
xor
adc
stos
add
xchg
iret
adc
je
xor
arpl
out
test
add
cli
cmc
pop
pop
or
dec
push
jecxz
push
outsl
jo
mov
insl
test
mov
fcomps
pop
popa
insl
push
in
int
mov
xor
int
mov
push
icebp
cmc
test
add
loopne
push
push
add
in
xchg
mov
xor
dec
cmp
mov
fldcw
fdivrs
cli
pop
mov
jmp
cld
movsb
or
icebp
clc
xchg
sub
jnp
shlb
jo
testl
inc
jns
fwait
in
loop
pop
mov
lds
int
andb
inc
mov
in
aas
sbb
mov
push
lret
xchg
in
xor
cmp
sbb
ja
mov
sub
push
cmc
in
pop
and
xor
ja
mov
or
cwtl
sti
sbb
les
into
pop
nop
mov
stos
jo
pop
mov
mov
sbb
rcrb
arpl
arpl
inc
cs
and
aam
outsb
mov
xor
push
xlat
fldt
cmp
or
cltd
in
fisubl
dec
stos
lds
movsb
in
or
sbb
jg
es
adc
mov
mov
pop
out
rcrb
and
xchg
dec
cmpl
es
ja
cld
jno
andl
sbb
data16
in
lods
push
lret
mov
int3
jmp
aaa
inc
add
cmp
repnz
sbb
fimuls
push
mov
imul
sbb
xchg
inc
xchg
out
movl
hlt
push
dec
clc
sub
jo
in
movsl
mov
fstpt
mov
es
xchg
cli
pop
pop
dec
mov
xchg
mov
lahf
pop
ljmp
scas
xchg
in
std
xchg
xchg
inc
xor
add
pop
jle
js
stos
cltd
sbb
mov
fisubs
icebp
adcl
shll
fistpl
jmp
add
out
mov
lock
enter
out
push
mov
iret
push
lods
shlb
movsl
xor
adc
dec
xor
sbb
add
dec
xor
add
sahf
jae
in
repnz
push
mov
fnstenv
repz
lret
sub
es
dec
int3
fldenv
mov
adc
popf
adc
lret
xchg
xor
movsl
orb
fs
ror
sahf
sarb
ret
lods
jb
es
inc
cs
mov
or
push
cli
lret
mov
movsl
mov
cs
jns
or
pushf
leave
insb
fnstcw
stc
pop
mov
cmp
or
sbb
in
pop
cld
imul
sbb
insb
fnstcw
stc
pop
mov
cmp
or
sbb
in
imul
cltd
lods
sbb
insb
fnstcw
stc
pop
mov
cmp
or
sbb
in
add
fmull
lods
or
insb
es
inc
dec
stc
sub
movsb
adc
push
repz
jecxz
mov
test
xchg
mov
lods
ljmp
adc
xor
cli
pop
inc
pop
push
jmp
xchg
mov
cmpsl
in
lds
xor
aaa
pop
inc
ja
inc
pop
push
sub
popf
add
mov
and
es
pop
sub
pusha
aaa
je
mov
mov
cmp
loop
xchg
test
inc
jmp
add
push
in
popf
push
mov
mov
out
mov
out
pop
push
mov
ficompl
ljmp
mov
xlat
mov
lret
fsubp
idivb
xor
enter
in
pop
adc
jp
mov
pop
in
mov
push
lds
inc
cli
mov
lock
sbb
jp
loope
and
iret
mov
test
inc
lods
les
gs
push
jb
jb
out
sub
pop
cmp
push
adc
jle
dec
lahf
pop
push
cli
inc
ljmp
pop
push
les
stos
xchg
mov
jecxz
xchg
lds
int3
test
pop
or
jge
insl
pop
pop
arpl
xchg
xchg
loopne
lock
rclb
dec
es
pop
add
arpl
inc
cmp
int3
outsl
fcoml
in
mov
dec
push
es
xor
pop
inc
adc
inc
and
loope
shl
cmpsl
cmc
xchg
lds
xor
aaa
gs
jne
inc
pop
push
mull
xchg
mov
cmpsl
cmc
xchg
lds
xor
aaa
gs
jne
inc
pop
push
mull
cwtl
xchg
sti
outsb
sbb
sahf
adc
cmp
js
enter
out
les
sbb
xrelease
push
sub
xor
push
movsl
xor
popf
negl
popf
lahf
js
out
xor
sub
test
rcl
sbb
add
repz
subb
test
addl
ljmp
and
jp
dec
cmp
adc
dec
cmp
cmp
or
test
cmp
int
mov
push
pop
inc
cmpsb
push
sar
dec
push
xchg
popa
rorb
push
sbb
xchg
sub
jne
out
pop
les
popa
dec
pop
jg
sbb
mov
movsb
xorb
lods
rcll
add
pop
push
push
jb
add
cmpsl
xor
fwait
push
cmc
mov
ja
mov
js
or
rcrw
aas
add
das
shl
lods
xchg
popa
ja
mov
lods
and
stos
repz
fnsave
sub
push
dec
cmp
sub
push
ljmp
lods
dec
loop
jbe
out
inc
dec
adc
gs
pusha
mov
fidivrs
xchg
iret
cmpb
xchg
fadds
pop
scas
push
mov
jno
lcall
push
test
xchg
add
pop
insb
mov
adc
js
adc
aad
jp
cmpl
fisubs
push
jle
cli
pop
mov
lret
pop
imul
dec
dec
ret
mov
js
dec
imul
arpl
inc
mov
jmp
int3
push
bnd
cld
mov
inc
addr16
addr16
iret
mov
dec
sub
mov
fsubl
movsl
pop
pushf
jo
pop
or
andb
adc
rcrb
sti
mov
scas
inc
subl
repnz
sarl
imul
jns
add
pop
xchg
stc
sbb
mov
sub
aas
jp
js
sub
jne
in
popa
aad
mov
pushf
scas
xor
push
jae
in
test
dec
jb
or
inc
ss
mov
test
jnp
and
lea
pop
pop
push
mov
fdivrl
rclb
xchg
push
mov
jecxz
enter
outsb
sub
enter
add
push
lret
clc
out
push
test
mov
pop
mov
imul
add
loopne
push
pop
leave
mov
in
ljmp
mov
stos
enter
push
inc
cli
push
cmp
mov
push
mov
shrb
bound
enter
lcall
les
add
pop
leave
movsb
jnp
mov
push
xchg
mov
or
shr
xchg
xchg
mov
test
js
ljmp
push
xor
iret
fimuls
xchg
enter
mov
ss
lret
inc
stc
cli
inc
fwait
lods
and
mov
push
inc
lock
js
and
inc
push
push
gs
xor
jbe
ror
or
sub
mov
test
xchg
mov
out
xor
int3
cltd
xchg
adc
les
sti
mov
rorb
imul
outsl
loop
mov
add
pop
add
ja
pop
sub
int
daa
cld
lahf
cli
mov
fnstsw
jae
dec
pop
arpl
mov
mov
hlt
mov
push
lods
pusha
mov
das
add
xchg
jge
out
insb
sbb
mov
pop
push
stos
mov
xchg
addr16
repnz
call
mov
and
outsl
imul
test
pop
movaps
or
aaa
push
adc
add
ja
ret
in
fisubs
cmc
addb
cld
lods
lods
arpl
push
or
popa
lret
push
clc
in
lcall
mov
jg
lret
fists
bound
jp
addl
aam
or
mov
or
xor
jo
aam
ljmp
leave
jns
mov
jl
mov
xor
mov
movsb
mov
fcompl
insb
aad
cld
jns
mov
ja
sbb
cmp
les
nop
mov
insl
fpatan
imul
push
dec
lahf
mov
pop
les
shrl
pop
jg
pop
dec
jo
filds
add
je
xchg
mov
jmp
mov
and
lds
jns
jle
rorl
push
cmpsl
das
in
subb
cmp
or
dec
cli
sbb
mov
xor
mov
push
mov
xchg
rclb
stos
imul
testl
cs
push
add
mov
adc
in
mov
or
push
sub
mov
add
sub
push
mov
popa
adc
jg
mov
jmp
inc
mov
lock
mov
xchg
push
xchg
cs
mov
imul
shr
enter
cmp
pop
or
call
jl
xchg
loop
dec
add
add
sbb
push
mov
movsb
push
in
push
scas
repnz
rorb
push
iret
mov
cltd
aam
adc
aam
xor
loop
imul
dec
out
in
add
nop
pop
and
mov
popf
outsb
sbb
fdivl
icebp
ds
mov
sub
pop
stos
cmp
pushf
push
xchg
or
sbb
mov
shll
js
mov
jl
scas
mov
fwait
xchg
std
lds
lods
or
or
or
mov
movsl
fists
out
ret
mov
fstpl
aaa
inc
xor
outsl
shll
cli
cmp
mov
cli
orl
lahf
gs
fwait
mov
jne
cmp
push
imul
fimuls
add
or
mov
int
loop
cltd
bound
popf
push
jo
rcl
mov
add
and
pop
inc
cmp
cli
push
sbb
xchg
push
mov
aas
sbb
sub
xor
mov
xor
test
cmpsl
aam
outsb
les
jb
inc
cmpsl
jno
test
rorl
adc
fs
pop
pop
les
test
push
call
fisttps
pop
iret
inc
mov
adc
je
cmp
insl
aaa
add
jp
in
ds
inc
mov
test
sbb
jmp
push
bound
mov
arpl
mov
andl
dec
push
scas
sbb
sbb
cmp
stos
and
cmpl
scas
mov
out
shlb
ficoml
cli
adc
mov
mov
mov
pusha
dec
mov
jle
cmp
orb
ret
es
stos
out
mov
adc
and
das
jb
js
nop
add
push
dec
pop
inc
cs
and
xchg
mov
mov
xchg
loop
dec
add
shll
xor
in
cs
adc
cli
lds
jl
jb
test
int3
xor
xchg
xor
lret
out
pop
jno
adc
xchg
rorl
ficomps
xchg
dec
push
js
jae
pop
sub
cmc
jne
outsb
cmp
pop
out
filds
clc
leave
sbb
jge
add
jbe
das
jb
push
or
push
or
mov
int3
sahf
sub
pop
or
push
fdiv
popf
jp
xchg
push
xor
jle
sub
dec
lret
inc
loope
xor
lds
mov
fisttpll
cmp
add
clc
daa
sarl
or
into
loop
add
xchg
andl
cwtl
xor
cmp
enter
leave
add
in
dec
jmp
push
pushf
mov
fmuls
jecxz
into
lods
je
je
xor
daa
sbb
imul
mov
pop
cmp
outsl
dec
mov
xor
sbb
cmp
cmp
lock
xchg
add
jo
fnstenv
xchg
xor
in
insl
and
movsb
js
dec
stos
iret
test
or
aaa
push
cltd
xchg
nop
add
lds
repz
insl
imul
stos
sub
ficomps
add
mull
inc
mov
clc
fidivs
add
imul
inc
lret
scas
in
lods
rcll
add
sbb
dec
divb
stc
mov
cmpsl
cmpsl
jb
and
dec
and
cmpsl
sbb
insl
cmp
pushf
loope
dec
push
repz
cmpsb
jmp
pop
test
movsl
sub
xchg
dec
mov
ja
test
mov
or
ss
aas
push
pop
cwtl
hlt
sub
loop
shll
lds
pushf
or
dec
scas
jns
push
sbb
in
jns
imul
int
fs
or
jno
xor
into
mov
or
repnz
mov
movsb
pop
in
daa
idivb
and
stos
push
jl
idivl
arpl
scas
xlat
inc
jbe
int
gs
push
pop
cmp
mov
mov
bound
out
arpl
xor
xchg
pushf
negb
pop
push
enter
test
out
in
add
arpl
pop
push
jnp
in
mov
or
sti
shlb
outsl
sub
dec
es
dec
cmp
adc
mov
dec
lret
cmp
iret
cmp
js
orl
mov
aam
cmp
or
sub
xchg
or
movsl
mov
sahf
and
xor
inc
in
xor
enter
sbb
fprem1
outsl
sub
sbb
push
jecxz
mov
mov
in
and
stos
gs
cmp
ss
cmpsl
lcall
addr16
in
sarl
jl
cmc
mov
xor
jmp
testl
ljmp
mov
sbb
lret
or
jg
jnp
sbb
pop
mov
push
lret
repnz
fcomps
mov
mov
lret
and
in
test
cmp
push
xor
jl
push
cmp
arpl
out
dec
test
mov
movsb
mov
inc
mov
scas
mov
pop
pop
insb
add
fildll
dec
int
mov
into
dec
sbb
dec
pop
in
lret
mov
pop
add
or
mov
negb
nop
adc
sarl
inc
xor
rorl
jno
int
dec
clc
mov
or
out
jg
js
push
out
or
mov
dec
mov
sub
or
fldt
push
icebp
cli
pop
pusha
lcall
xor
cwtl
mov
test
add
jo
sbb
addb
andb
fsub
stos
in
adc
mov
pushf
lea
sbbb
xchg
mov
mov
and
inc
add
pop
int3
push
loope
outsl
pop
add
pop
jne
popa
movsb
aas
mov
faddl
enter
jae
jle
xchg
hlt
es
out
xor
pop
inc
movaps
in
mov
cmpsl
std
jge
cli
into
imul
cmp
jae
mov
mov
sub
jecxz
add
inc
stos
pusha
pop
inc
or
push
lods
std
adc
js
fucom
ret
push
call
sub
xor
mov
out
icebp
cmp
pop
int
sub
nop
in
outsl
aas
sub
leave
mov
xlat
js
iret
rcrl
mov
insl
lret
fcoml
mov
call
fsubrl
test
inc
subb
mov
hlt
lods
cmp
pusha
xor
cld
rcrb
sti
mov
cld
push
pop
sub
lcall
and
xor
xor
bound
mov
pop
in
jns
and
push
test
addl
inc
pop
and
cmp
das
ljmp
inc
jle
dec
mov
xlat
movsl
pusha
ss
xor
pop
sbb
je
inc
aam
jns
in
add
mov
dec
lahf
das
and
lea
jnp
add
pop
push
and
adc
movsl
mov
dec
fidivl
pop
and
bound
jg
inc
ds
sub
gs
xchg
or
push
xchg
push
adc
push
out
xor
data16
jecxz
inc
mov
cld
and
cmp
aas
dec
xchg
fstpl
sbb
cli
lcall
cmc
fisubrs
imul
addr16
hlt
mov
ret
inc
clc
xchg
scas
xor
iret
sub
dec
inc
dec
mov
pop
push
enter
dec
shrb
mov
inc
mov
dec
push
ljmp
or
stc
lret
inc
lret
cmc
jecxz
pop
je
add
insl
jl
sub
mov
imul
movb
enter
aad
push
pop
jno
dec
adc
xchg
push
cmpsb
decb
leave
or
sub
mov
arpl
dec
mov
test
xor
sub
inc
mov
loopne
push
stos
incb
push
dec
aas
cmpsl
imul
nop
lods
xor
cmp
imul
pop
push
popa
insb
or
xchg
movsb
fcompl
imul
xchg
nop
xor
add
lret
stc
inc
clc
mov
rcrl
clc
lods
inc
repz
pop
insb
xchg
mov
daa
add
xlat
adc
xchg
adc
nop
lret
movsl
sbb
mov
imul
add
mov
scas
xor
lods
loope
mov
or
xor
xchg
dec
jp
loope
cmpb
xor
inc
add
add
in
inc
dec
mov
test
aaa
inc
mov
fs
mov
call
mov
roll
int
sub
and
aam
int3
std
or
hlt
xchg
dec
out
jne
lea
xor
mov
aaa
sti
hlt
mov
out
sub
sbb
dec
dec
ss
or
ret
clc
adc
mov
les
push
fcom
xchg
push
sbb
mov
dec
test
sub
adc
mov
enter
mov
mov
jo
xchg
xchg
mov
xorb
testb
jecxz
and
cmp
iret
inc
push
pop
xor
inc
jmp
cld
add
das
daa
push
popf
test
add
pop
jnp
lcall
stos
cld
in
out
loope
push
mov
mov
and
std
rorl
xchg
jne
and
dec
subl
int3
test
fistpll
mov
andl
inc
jp
xchg
cmpsb
lret
dec
push
xor
xchg
shrb
fisttps
mov
cwtl
xchg
cmp
ds
mov
and
call
dec
hlt
or
or
nop
inc
fildl
enter
cmp
mov
fwait
add
std
imul
andl
pop
lcall
dec
lret
mov
pop
cli
mulb
cld
lods
jb
mov
loopne
mov
jae
fisttpll
jge
mov
mov
xor
addl
pop
ss
xor
inc
repz
mov
xchg
out
sbb
inc
adc
inc
jnp
std
push
aaa
out
push
in
leave
negl
test
clc
ret
inc
inc
in
xor
cmpsb
push
repnz
pop
adc
cmp
inc
xchg
mov
dec
xor
mov
push
mov
ror
mov
push
icebp
dec
jmp
push
in
loope
scas
scas
add
xchg
insl
xor
rorb
imul
and
or
fnstcw
ja
jmp
negb
cmp
dec
dec
pop
adc
xor
scas
xchg
push
xchg
mov
aas
sub
scas
xchg
popf
cmpsl
fld
insw
jae
xor
cmp
push
call
inc
iret
add
dec
or
push
mov
sub
cmp
mov
mov
cmp
rolb
push
mov
xchg
popf
dec
fisttps
sub
add
loope
jg
adc
aad
xchg
pop
add
lahf
mov
sbb
lods
mov
mov
dec
inc
mov
push
ret
clc
testl
sti
mov
clc
out
call
dec
fsubrp
cli
xor
pop
push
pop
jb
lahf
add
adc
mov
iret
shll
je
das
sahf
and
imul
ljmp
cli
out
lret
popa
and
mov
push
iret
test
insl
out
ret
std
or
leave
cmp
sub
aas
push
or
push
iret
lds
dec
scas
bound
inc
sub
xchg
dec
dec
stc
add
pop
mov
sbb
add
add
jno
fistps
mov
sub
fistl
fs
add
shld
out
clc
push
sub
lock
in
push
pop
mov
clc
cs
jmp
push
int3
int
into
xchg
or
rorb
xor
sahf
stc
add
fstl
std
and
ficoms
sbb
xor
and
shll
icebp
push
jmp
stos
popa
mov
cmp
mov
push
push
sbb
pop
or
outsl
in
add
pop
popa
repnz
js
lock
pop
out
cmp
xor
xchg
dec
adc
imul
movsb
pop
lahf
mov
mov
push
push
lret
or
ds
pop
aas
mov
test
sub
loop
dec
and
xchg
subb
sub
int3
das
lock
loop
aad
or
xchg
xchg
mov
mov
push
sub
sub
mov
lahf
and
adc
push
popf
xchg
mov
cmp
jecxz
addl
add
xor
push
test
push
stc
loope
sub
cmp
push
hlt
test
lods
ljmp
loope
push
and
push
add
cmp
push
fwait
popf
gs
jmp
insl
cmp
and
cmp
mov
mov
in
hlt
stos
pop
jle
cwtl
cwtl
sbb
repz
ja
inc
xchg
pop
add
jge
sbb
xchg
mov
push
cltd
out
or
xor
cs
movsl
add
or
ljmp
incl
push
outsb
lods
dec
ljmp
std
push
adc
cli
add
inc
or
lret
adc
in
cmpsb
mov
jecxz
or
xchg
outsl
dec
stc
in
cmp
shll
jmp
and
push
add
loope
inc
mov
push
cmp
psubw
add
call
dec
js
cmpsl
addb
dec
pop
pop
cmp
lcall
sub
sub
test
add
ds
js
pop
or
and
inc
push
sti
inc
testb
jecxz
or
shll
into
shlb
outsb
jp
mov
xor
mov
leave
dec
je
mov
out
add
pop
loopne
nop
xchg
test
xchg
ret
popf
pop
fwait
xor
daa
test
mov
sub
jg
jno
mov
jb
bound
xchg
inc
ret
push
xor
addb
hlt
mov
js
xchg
xchg
adc
hlt
lods
cmc
mov
mov
adc
fstpt
sub
push
ljmp
inc
and
sti
outsl
jmp
cs
addb
xchg
sbb
cli
sahf
hlt
and
mov
push
fdivl
push
loopne
dec
mov
sbb
imul
xchg
mov
test
jmp
and
mov
test
outsl
rcr
ret
mov
sbb
ret
repz
outsb
adc
add
push
in
out
fsts
cmpl
xchg
xchg
inc
rcrl
scas
push
sub
cmp
add
push
inc
jle
cmp
cltd
gs
setbe
lds
mov
dec
push
adc
and
enter
cmp
inc
les
mov
subb
sub
or
ret
stos
cmpsl
fstl
jb
out
ret
sub
mov
in
cwtl
add
xchg
out
push
push
or
add
mov
fcmovnb
adc
mov
test
xchg
mov
cmpsl
cmc
xchg
lds
xor
aaa
gs
jne
inc
pop
push
mull
xchg
mov
cmpsl
cmc
xchg
lds
xor
aaa
gs
jne
inc
pop
push
mull
xchg
mov
mov
aad
and
inc
adc
gs
inc
aaa
push
out
mov
out
xchg
mov
mov
xchg
lds
adc
std
add
scas
or
cmp
sub
push
mov
sub
push
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
mov
push
pushl
movl
movl
mov
call
mov
call
mov
sub
movzbl
cmp
mov
je
movl
movl
call
call
call
pushl
mov
pushl
call
push
mov
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
xor
push
push
push
push
push
call
pushl
call
push
push
push
push
push
push
push
push
call
jmp
mov
push
push
call
mov
mov
push
push
pushl
call
pushl
mov
call
jmp
lea
push
push
pushl
call
mov
lea
push
call
pop
xor
push
lea
push
push
push
push
call
lea
push
pushl
call
pop
xor
pop
leave
ret
pop
lret
aaa
adc
xor
inc
xchg
mov
test
xlat
cmc
in
pop
xor
daa
add
ja
addr16
xchg
mov
movsl
mov
cmpsl
test
xchg
and
aad
lds
sub
and
push
insb
inc
jge
dec
addr16
xchg
push
movsb
lahf
fneni(8087
cmpsl
test
mov
mov
xor
dec
mov
lret
lahf
test
ds
cs
rclw
sub
sahf
pop
push
fdivr
test
inc
fwait
mov
lcall
test
sub
mov
aad
mov
cpuid
xor
popa
fsubl
xor
and
test
mov
add
in
sub
lds
gs
and
jo
push
movsl
repnz
add
jne
jp
cmpsb
xchg
je
shrb
xlat
ljmp
hlt
add
shll
test
out
ljmp
into
xchg
dec
mov
cli
outsl
addr16
mov
orb
mov
addr16
xor
daa
pop
push
jne
gs
addr16
xchg
lods
xchg
xlat
in
repnz
out
push
push
jae
pop
adc
add
and
sub
rcr
cwtl
mov
aad
test
dec
bound
push
push
add
xor
les
xchg
mov
pop
je
jo
sbb
ja
addr16
xchg
mov
movsl
mov
cmpsl
test
cmc
in
aad
lds
xor
daa
add
ja
addr16
xchg
mov
movsl
mov
cmpsl
test
cmc
in
aad
lds
xor
or
test
pop
dec
cmp
sbb
lcall
mov
hlt
push
push
ljmp
mov
mov
lret
dec
mov
xor
ss
jecxz
mov
add
jne
outsl
pop
jl
xlat
inc
add
cmp
jbe
push
aad
adc
fiadds
xchg
addr16
add
cmpsl
outsb
loope
test
hlt
jp
inc
add
pop
outsb
ds
test
insb
xchg
adc
loope
daa
pop
aam
and
sbb
jno
test
and
call
jecxz
mov
shrb
inc
les
lods
cmc
fistpl
rorl
sbb
iret
loop
pop
cmc
ja
cmc
pop
insl
add
jmp
bound
lcall
insb
pop
xor
xor
int
aad
or
add
jb
xlat
jle
ret
out
lods
les
jecxz
pop
push
or
sub
js
mov
cmp
icebp
push
scas
js
mov
inc
fcompl
add
hlt
mov
call
test
je
mov
and
mov
xor
and
fsubs
decb
inc
push
push
lods
add
jg
jns
nop
mov
jnp
cld
xor
hlt
dec
popf
movsb
lods
sbb
leave
cmp
mov
lret
dec
adc
leave
mov
sub
cmp
ffree
push
pop
jnp
int
insl
or
cwtl
test
sbb
push
in
pop
jle
mov
in
push
cmp
dec
pop
mov
mov
mov
andl
dec
pop
dec
jle
mov
movsb
sbb
and
sbb
mov
pop
xchg
sub
or
pop
push
inc
or
sbb
pop
jae
mov
and
sti
ret
inc
pushf
add
fwait
and
ret
fcoml
adcb
dec
add
sarl
push
in
cmp
add
xor
js
shlb
popa
xchg
fdivs
test
cmp
add
lock
sbb
stos
aaa
imul
push
lds
test
push
int
mov
adc
loop
cs
mov
jbe
ja
in
and
pop
dec
push
loopne
subb
sbb
insb
movsl
nop
or
xor
jae
rclb
popa
aas
into
adc
fisttpll
sub
jbe
filds
or
mov
enter
aas
enter
sub
adc
sub
fcompl
cwtl
dec
fstp
fdivr
inc
cmp
loopne
add
cwtl
pusha
push
adc
adc
push
movsl
jmp
aas
jb
add
aam
inc
repz
xor
dec
adc
xchg
mov
test
mov
jmp
mov
aaa
inc
loopne
add
sub
and
lahf
fs
loop
stos
mov
pusha
lcall
and
mov
shll
test
in
mov
push
sub
or
loop
in
mov
sub
popa
jbe
push
popf
dec
fwait
sbb
leave
adc
jne
stos
movsl
pop
jae
adc
movsb
pop
jno
imul
rcrl
inc
inc
mov
aad
sbb
jnp
mov
loop
mov
pop
sub
iret
sub
sub
inc
lcall
nop
mov
add
ficoms
jecxz
sub
jb
rcrb
xchg
jge
xchg
out
mov
movsb
cs
push
popa
sub
sub
lret
mov
in
lret
arpl
dec
test
stc
jne
pop
xchg
lds
mov
daa
clc
lock
cld
lods
popa
call
jnp
lock
push
addr16
ds
dec
in
push
fdivrs
in
dec
ficompl
mov
cmp
call
add
pop
adc
add
notl
fwait
mov
sub
cmp
cltd
mov
in
adc
mov
add
adc
sbb
ja
cs
je
and
jecxz
push
jmp
imul
sub
dec
jp
fiadds
sbb
adc
pop
enter
xchg
daa
cmp
push
lret
int3
bound
fucomi
and
popa
xor
dec
jae
sub
mov
or
fimull
mov
stos
hlt
xchg
stos
je
insb
dec
cli
test
pop
mov
shll
lret
inc
mov
ja
hlt
adc
sub
cli
mov
xchg
cmp
cmp
insb
or
adc
sbb
sub
sbb
inc
mov
lret
push
jbe
cmp
push
mov
push
dec
or
pusha
daa
pop
push
std
or
mov
pop
dec
repz
fs
sub
mov
xlat
inc
push
int3
jp
xor
loope
shlb
add
sub
xor
daa
sbb
popf
xor
mov
add
pop
in
out
pop
dec
call
incl
pop
sbb
push
push
and
jl
jecxz
roll
popa
dec
sub
jmp
jmp
arpl
mov
divl
sub
jns
dec
xor
dec
outsl
popa
and
je
into
clts
cmpsb
jp
dec
test
push
jmp
cmp
xchg
mov
neg
adc
sahf
data16
mov
adc
mov
xor
jb
movsb
xchg
sub
rclb
dec
xchg
mov
push
aas
loop
stos
shrb
call
jne
mov
addl
stos
cltd
aaa
mov
rcrl
mov
add
fxtract
mov
adc
lods
int3
mulb
mov
test
sbb
jecxz
jno
movsb
std
aam
inc
sar
mov
out
out
fildl
ret
jb
popf
ficoms
ficompl
int3
lret
mov
pusha
and
out
ljmp
mov
add
push
lret
mov
imul
ret
subl
ret
add
mov
stos
pop
or
jns
inc
mov
pop
int3
test
sub
pop
hlt
repnz
mov
dec
inc
jp
imul
loop
push
mov
adc
vpmulhw
fs
dec
mov
cmpsl
idivl
mov
pop
inc
xchg
xor
or
pop
test
mov
mov
shrl
push
dec
scas
aam
out
add
dec
mov
lcall
xchg
mull
loope
pop
add
and
jnp
mov
and
insl
xchg
mov
shlb
sbb
or
enter
andl
in
push
mov
test
lds
mov
bound
in
cwtl
adc
ret
or
sub
clc
mov
pusha
cmc
mov
or
jg
jnp
and
imul
cmpb
out
pop
jmp
cmc
fs
arpl
adc
fildl
mov
xor
mov
test
add
mov
aam
mov
ljmp
sbb
adc
push
dec
jl
insb
outsb
mov
fcmovnu
in
icebp
xchg
fwait
xchg
aam
dec
leave
popa
loope
add
aam
fwait
clc
ss
movsb
out
gs
cmc
pop
sub
adcb
xor
or
push
lcall
jbe
icebp
daa
jecxz
dec
add
dec
data16
notb
and
scas
repz
nop
int3
xchg
loopne
mov
dec
test
xchg
ds
mov
xchg
mov
inc
inc
xor
sbb
cmp
push
push
outsl
mov
push
and
aam
cltd
inc
sbb
pusha
je
lods
sbb
fisttps
lods
push
orl
imul
push
jle
stc
sbb
mov
inc
push
cmpsb
lods
cli
pushf
adc
xchg
out
jl
ret
xor
lock
cmpsb
push
loope
sahf
push
test
or
out
xchg
lahf
jmp
xchg
addr16
aaa
scas
mov
mov
sti
mov
stos
ror
iret
movsb
pop
push
icebp
pop
pop
mov
ss
mov
aad
popa
xchg
loope
jmp
sub
icebp
sub
lret
and
mov
push
push
cmpsb
xlat
cmpsl
je
test
push
cmp
push
fdivl
ret
pop
or
fs
fstpl
push
test
xchg
sbb
cltd
popf
scas
shll
stos
in
sbb
sub
jge
sbb
and
gs
add
dec
fidivrl
mov
push
push
or
cmp
scas
lret
imul
leave
or
add
rcr
or
jnp
mov
inc
xchg
loopne
push
clc
and
lods
jbe
jb
in
dec
shr
dec
es
pushf
jmp
xor
js
call
orl
js
sub
jmp
fchs
insb
add
or
adc
nop
dec
das
sbb
out
jo
daa
mov
iret
inc
adc
mov
jl
xchg
xchg
movsb
aad
lods
adc
jle
fdivs
xchg
or
inc
sar
ret
ficoms
loope
popf
lcall
loope
lcall
dec
in
pop
test
stos
sbb
sub
movsl
nop
mov
fldcw
aaa
mov
push
mov
fwait
in
or
cmp
fnstcw
loope
popf
cmp
mov
mov
repz
add
sbb
test
sarb
ret
sarl
cmp
inc
pop
enter
or
jl
outsl
mov
call
test
lods
or
xchg
loop
out
ds
and
dec
jnp
movsb
push
sub
repnz
mov
cwtl
pop
xor
rol
mov
test
jle
aas
mov
mov
jg
repnz
jp
sub
repz
dec
or
mov
sbb
lods
repz
dec
adc
es
ror
popa
scas
inc
mov
dec
in
data16
repz
aam
imul
inc
jo
out
sbb
nop
ds
stos
fs
int3
lahf
sbb
fs
loop
mov
fadds
jb
ja
sbb
cwtl
out
gs
ds
movsb
bound
adc
mov
push
push
pop
inc
mov
ljmp
movsb
push
mov
mov
fsts
xchg
aad
sar
dec
es
push
xor
ret
ljmp
cmpsb
and
ss
imul
shrb
out
jns
push
push
or
popa
movsb
push
frstor
mov
aam
mov
cmpsb
movsl
sti
mov
lods
aam
stc
dec
pcmpgtw
in
jp
ljmp
and
xchg
stc
cmpsl
mov
push
pop
inc
dec
test
iret
add
hlt
push
pop
hlt
addb
out
and
dec
lods
push
lret
xor
ret
add
push
jge
mov
pop
pop
mov
subl
xchg
sub
jb
pop
mov
push
xor
test
sahf
test
loope
daa
inc
enter
or
adc
leave
push
pop
test
fildl
push
mov
iret
fldt
and
lret
js
pop
js
ficomps
mov
gs
insl
loope
dec
mov
cs
jno
jb
push
test
or
adc
rep
fs
inc
cmpsl
jo
jmp
into
mov
mov
mov
lea
sarl
jne
outsb
inc
push
mov
push
lahf
xor
fistpll
lret
mov
loope
mov
inc
jge
add
dec
hlt
addl
mov
xor
ljmp
mov
inc
aad
pop
sahf
fcoms
ret
sub
or
jmp
sahf
faddl
arpl
daa
adc
cmp
xchg
sbb
add
mov
ret
mov
push
pop
dec
cmc
mov
jns
aam
lret
lds
jns
jne
sti
sbb
call
xchg
stc
gs
pop
sarb
jo
or
jnp
into
outsl
hlt
mov
push
das
push
dec
xchg
pop
sub
fmulp
cld
fsubrl
ja
xchg
jno
movl
mov
push
xor
outsl
inc
sub
sbb
movsl
cld
outsl
imul
std
fs
stos
insb
and
arpl
int
push
popf
repnz
mov
mov
add
inc
and
arpl
add
adc
and
adc
mov
mov
frndint
sbb
sbb
fsubrs
sbb
push
cwtl
aad
imul
int3
xor
es
pusha
cmpb
ja
int
shl
pop
mov
pop
div
imul
stos
or
add
repz
ret
jnp
mov
inc
aam
fcomp
xchg
xchg
pop
or
shl
repz
nop
pop
aas
outsl
sti
mov
mov
push
cmpsb
xor
inc
add
cmp
xchg
loop
dec
out
inc
xor
insl
fbstp
adc
lods
in
ret
or
hlt
mov
iret
jl
nop
cmpsb
loope
iret
enter
sub
cmp
dec
dec
aad
mov
cmp
and
xlat
leave
scas
xor
pop
roll
mov
dec
test
enter
mov
aad
lock
test
js
dec
roll
sub
pop
imul
pop
loope
jbe
push
faddl
clc
xor
fbld
std
pushf
popa
mov
sbb
xchg
jb
js
xlat
sub
dec
sbb
das
xchg
fisubl
push
push
pop
aad
andb
xor
and
ss
add
cmp
pop
mov
out
pop
pushf
fwait
cltd
jmp
leave
jbe
pop
pusha
fmull
xorl
mov
add
push
loope
mov
scas
cmp
cltd
fisttpll
outsb
daa
add
push
pop
mov
test
push
dec
dec
leave
mov
insb
inc
pushf
rcrl
xorl
sarb
sub
mov
ja
fnstcw
movsl
jno
loopne
lods
xor
push
pop
sub
mov
xor
out
das
add
inc
xchg
mov
adc
pop
rcl
sub
loop
and
sbb
or
lods
je
fcomip
dec
popa
pop
aaa
jmp
inc
xor
pusha
xor
es
pusha
and
sbb
fimuls
push
lret
pop
ja
mov
pushf
jbe
scas
mov
jecxz
cmp
cld
jno
xchg
insb
or
and
xor
aaa
notl
sarb
pushf
mov
jl
imul
mov
jecxz
repz
lret
mov
lea
ds
out
into
inc
cmp
xchg
xor
cmp
xor
mov
push
mov
cmp
cld
xor
sbb
push
loope
xchg
rcll
lds
sub
adc
aad
inc
lahf
out
div
imul
pop
daa
pop
inc
push
fcmovb
idivl
data16
mov
xor
dec
stc
lds
cmp
out
pop
inc
lods
xor
test
mov
negb
shll
icebp
or
inc
movsl
jnp
stc
ja
xor
mov
sahf
mov
je
scas
fidivrl
dec
pop
sub
adc
push
mov
xlat
fimull
dec
dec
mov
pushf
mov
jmp
push
mov
sbb
fsubs
inc
movsl
pop
sub
ss
scas
jmp
ret
xchg
repnz
and
sbb
std
mov
adcb
outsl
repnz
sti
pushf
xchg
add
arpl
adc
sbb
insb
sbb
xchg
mov
jae
cmp
sarb
jp
test
or
pop
cmp
lahf
pusha
pusha
mov
test
popa
call
and
mov
push
pop
sub
fimull
sbb
std
jnp
rcrb
repnz
add
dec
xor
ljmp
pop
nop
out
sub
jp
xor
xchg
data16
negl
lock
add
test
push
and
mov
mov
subb
dec
mov
mov
ljmp
adc
mov
enter
stos
ljmp
mov
dec
jbe
frstor
jb
lea
jge
repnz
pop
xor
clc
adc
cwtl
js
cmpsb
out
mov
jecxz,pt
in
push
pusha
idivl
mov
femms
dec
inc
xor
arpl
inc
fwait
in
fimuls
and
jno
inc
pop
xchg
sub
inc
mov
std
push
push
fidivs
pop
lods
std
pushf
jg
test
xor
mov
and
xchg
sbb
dec
pop
gs
mov
cmpsb
pop
rolb
push
fnstcw
movsb
xchg
outsb
imul
sbb
or
pop
pmulhuw
push
lahf
fildll
lcall
bound
imul
push
clc
jmp
ficomps
cmp
jp
push
insb
fistl
test
xlat
mov
inc
cmp
and
dec
out
dec
je
jecxz
addb
mov
lret
clc
mov
pop
ds
scas
xchg
adc
dec
and
or
ret
les
hlt
xchg
sbb
imul
jg
cli
lret
js
rolb
push
jns
repnz
cld
mov
pop
testl
push
in
push
divb
lods
mov
add
cmp
enter
or
ret
out
mov
cmc
sbb
call
lods
in
xchg
sbb
gs
add
adc
fwait
mov
leave
lods
test
xor
iret
loopne
push
fldcw
fstp
cmpsl
cltd
imull
mov
xchg
outsb
jb
sub
lods
aam
outsb
and
sub
push
in
mov
adc
sti
nopl
or
sbb
and
jp
ds
repz
in
mov
sub
ret
mov
clc
and
lds
popa
or
sti
mov
push
xchg
xchg
and
repz
fwait
es
nop
mov
sarl
adc
subb
push
xchg
xorb
les
mov
mov
notb
ss
jp
push
xchg
call
inc
push
jmp
cmc
mov
xor
adcb
call
pop
scas
or
dec
xchg
xor
jmp
stos
push
jmp
xor
adc
arpl
int
jne
ror
jne
mov
test
sbb
jecxz
jp
lret
xor
mov
push
sarl
or
mov
movsl
jne
xor
jo
or
aad
test
shlb
or
data16
cmp
xor
inc
push
iret
mov
enter
push
repnz
arpl
and
out
je
pop
dec
xor
jns
int3
jne
jno
inc
jbe
add
loope
mov
mov
push
xcrypt-cfb
cmpsl
mov
xor
stc
int3
repz
es
sub
dec
or
and
dec
pop
addr16
add
mov
mov
into
addl
into
out
scas
out
in
fistpll
jns
scas
sub
mov
int
pop
mov
lcall
jg
rolb
test
ja
mov
mov
mov
shl
lock
sub
popa
pop
dec
mov
in
insl
pop
or
or
je
ret
cmp
mov
data16
cmp
push
inc
sub
and
adc
inc
jno
sti
xchg
mov
jae
jle
mov
jae
cs
xchg
push
and
fs
push
pop
jnp
pop
outsl
xor
ds
pop
xchg
jl
scas
rolb
lret
and
je
mov
jmp
or
adc
sbb
aad
adc
push
cwtl
mov
and
shll
fldl
jge
cli
pusha
gs
add
ret
rsm
ret
daa
repz
mov
inc
cmpb
ss
pop
popf
and
pusha
shrl
ja
pushf
das
fildl
ss
or
cmp
and
fwait
add
or
clc
repz
or
xchg
and
out
jne
dec
insl
bound
loop
push
xor
pushf
mov
and
jne
inc
aam
mov
ret
clc
mov
incl
test
or
fwait
dec
inc
mov
lods
mov
or
push
out
mov
push
jne
gs
addr16
xchg
mov
movsl
mov
cmpsl
test
cmc
in
aad
lds
xor
daa
add
ja
addr16
xchg
mov
movsl
mov
cmpsl
test
cmc
in
aad
lds
xor
daa
add
ja
out
xchg
mov
movsl
mov
cmpsl
test
cmc
in
aam
lds
xor
daa
add
ja
addr16
xchg
mov
nopl
mov
xchg
xchg
cmp
sub
lods
negb
int3
fnstcw
data16
sbb
es
mov
push
dec
push
mov
mov
cld
cmpsb
in
mov
xchg
xchg
cmp
sub
jge
or
jl
insb
ss
inc
dec
push
mov
mov
cld
cmpsb
in
mov
xchg
xchg
cmp
sub
jge
imul
je
push
int3
out
test
ja
int3
push
daa
pop
call
adc
pop
shll
clc
mov
jmp
mov
jecxz
push
cmpb
inc
inc
sbb
push
push
mov
cmp
in
mov
push
mov
mov
rep
ret
neg
stc
or
mov
cmpsl
shlb
mov
in
pushf
dec
aas
leave
dec
stc
inc
fwait
inc
push
push
or
inc
cltd
sub
in
fcoml
pop
and
xchg
das
ss
fyl2xp1
mov
inc
jo
or
mov
and
and
or
adc
jbe
push
adcl
adc
jecxz
lods
negb
in
mov
xchg
xchg
cmp
sub
sbb
or
jl
insb
ss
push
dec
jg
mov
div
scas
ret
lret
fwait
enter
add
adc
inc
and
add
push
jecxz
out
hlt
call
out
mov
fdiv
mov
outsb
push
inc
add
cmp
inc
pop
pop
or
push
inc
lret
movsl
ljmp
in
mov
xchg
xchg
cmp
sub
sbb
or
jl
insb
ss
push
dec
push
mov
mov
cld
cmpsb
in
mov
xchg
xchg
cmp
sub
sbb
or
jl
insb
ss
push
dec
push
mov
je
xchg
cmp
and
lods
inc
jo
mov
jp
sbb
and
rcrl
sbb
imul
pop
pop
stc
stc
push
and
inc
adc
ret
movsl
ds
sbb
popa
inc
mov
testl
aam
or
dec
lock
iret
outsl
fldcw
dec
rcr
int
mov
jp
sub
clc
enter
xor
sub
imul
fstps
pop
scas
es
sub
push
mov
es
xor
xor
test
push
ss
fsub
int3
xchg
xor
ret
sbb
mov
jmp
mov
or
sbb
inc
arpl
jo
dec
pop
sahf
xchg
aaa
cmp
outsb
adc
add
jecxz
lods
aad
or
pop
stos
adc
sub
inc
repnz
pop
cmpsl
aam
cmp
loope
add
fwait
sarb
push
mov
movsb
fisttpll
sub
cmp
and
fcomp
pop
cs
rcrb
sbb
inc
hlt
add
mov
adc
ds
imul
repz
push
xchg
sub
push
fs
push
mov
int
cmpsb
into
inc
shlb
cmpsl
fabs
jge
adc
pop
and
scas
call
or
xchg
push
ja
xchg
jbe
cmpl
mov
push
shlb
push
mov
inc
sti
pop
cmp
mov
iret
xchg
rcrl
jecxz
neg
stos
jl
sbb
push
and
mov
out
sub
and
sarl
cld
aam
test
mov
push
pop
subb
addl
ss
gs
xchg
bound
mov
aas
popa
or
nop
push
cmp
filds
xchg
jns
xor
adc
movsb
mov
mov
dec
inc
dec
in
scas
adc
adc
je
cmp
lret
pop
es
jle
cmc
clc
js
incb
sbb
add
mov
shlb
xor
popa
push
push
cmpsl
cli
test
push
cltd
add
jp
mov
xchg
imul
xor
add
and
dec
int
std
clc
mov
addr16
dec
mov
mov
jl
test
jno,pt
lahf
or
sbb
jl
stos
cmp
sub
fs
pop
inc
jae
stos
les
push
jmp
sub
lret
lds
lret
push
repnz
in
enter
and
rcrl
cltd
adc
clc
hlt
push
ja
ss
inc
test
mov
es
push
xchg
cmp
lret
dec
pop
divb
loop
idivl
inc
mov
or
pusha
mov
jbe
cld
adc
mov
dec
push
add
sub
add
xor
shlb
js
push
in
imul
pop
jle
pcmpgtd
pop
dec
inc
pushf
sti
xchg
dec
sub
out
lahf
sub
outsb
flds
mov
inc
into
mov
xchg
xchg
int
jno
xchg
jbe
sub
xchg
sti
loop
cmp
fcom
std
push
js
int
mov
jae
jle
cmpsl
ds
mov
or
addr16
xchg
sub
imul
add
or
lcall
decl
adc
fisubs
pop
nop
dec
aas
aaa
mov
add
or
je
scas
mov
mov
lock
inc
cli
mov
in
push
repnz
mov
mov
insl
inc
testl
cld
mov
xor
in
mov
popf
mov
mov
xor
push
push
shlb
mov
setbe
add
stos
cld
pushf
je
jmp
sbb
arpl
subl
jmp
adc
push
jo
jo
jae
mov
mov
and
ss
push
aam
adc
cld
popa
movsb
or
xchg
test
sub
out
mov
daa
mov
jae
mov
stos
shrl
xlat
jg
stc
scas
mov
call
jne
mov
mov
mov
sbb
mov
fisubrl
jns
movsl
insl
xchg
jg
pop
jo
jns
cmpsb
lcall
xchg
jp
negb
adc
pop
aaa
xor
cmpsl
cmp
movsl
imul
jg
sti
call
ret
imul
je
repnz
pop
out
popa
mov
scas
lock
cmp
mov
mov
dec
into
arpl
dec
sbb
aas
arpl
nop
pop
cld
mov
fnsave
rcrl
pop
cwtl
inc
xchg
or
pop
sahf
mov
jecxz
xchg
ja
dec
leave
sbb
arpl
cmp
in
adc
sub
stos
stos
mov
movsl
and
mov
ret
pop
pop
iret
mov
xor
and
call
lea
subb
or
cmp
xor
frndint
xor
daa
lock
les
sub
pusha
call
leave
mov
repnz
stc
popa
dec
adc
or
jle
mov
pop
cmp
incb
sub
sub
add
adc
sbb
test
bound
adc
xor
or
sub
das
pop
pop
scas
xor
push
pop
mov
push
pop
jo
jae
and
outsb
mov
mov
out
mov
dec
sti
shlb
repnz
mov
aaa
cmp
push
fnstenv
xor
jge
push
lret
fs
dec
and
xor
call
and
lods
jns
push
xor
inc
fldenv
shlb
test
andl
test
hlt
jbe
pusha
fisubs
push
jo
lds
leave
inc
xlat
sbb
lret
xchg
out
add
cmp
jmp
not
mov
rcr
cli
pop
stos
push
mov
nop
icebp
and
test
sbb
daa
sbb
insb
sbb
sbb
jnp
in
xchg
lahf
imul
mov
cli
popa
rolb
fwait
sbb
bound
jae
repz
in
cli
cmpsb
bound
sti
mulb
dec
jge
in
bound
xchg
das
mov
fdivs
in
push
cmp
cs
cmc
jb
dec
rcr
mov
cmpsl
pusha
lods
sbb
push
ss
xor
scas
sbb
cltd
sti
iret
sub
pusha
dec
mov
or
inc
dec
cmp
jns
sbbl
mov
xchg
in
cli
jge
in
lret
in
js
cmp
fwait
aaa
outsb
xchg
loope
das
sub
mov
fimull
and
jle
sub
push
lahf
jae
and
cltd
ljmp
push
mov
mov
movups
pop
xchg
cmp
out
cmp
push
push
ret
adcl
out
orb
lahf
repnz
cmp
mov
inc
bound
jae
leave
xor
pusha
fimull
add
adc
xchg
fimull
jne
sbb
cltd
sbb
mov
xor
jne
dec
mov
mov
pop
fnstsw
inc
mov
mov
xlat
insb
mov
and
sar
pop
or
js
aad
out
scas
pop
jb
mov
xlat
sbb
mov
inc
pop
std
fistpl
and
add
sarb
adcb
call
jae
dec
loope
lds
xchg
scas
orl
mov
push
cmp
add
dec
inc
repz
outsl
gs
fsubrp
flds
sbb
int
jae
sub
ret
repnz
out
call
pop
es
dec
int
stc
jl
pop
push
cli
sbb
aad
push
pushf
adc
cltd
cmp
and
or
jmp
pop
fcoml
pushf
mov
push
sub
dec
mov
subl
in
ja
stos
cmpsl
sub
dec
fsts
xchg
lcall
add
sbb
add
sbb
ja
movsb
pop
dec
movsb
and
mov
xchg
push
adc
aaa
xchg
mov
repnz
pop
add
pop
orb
jnp
jle
sub
sbb
int3
or
mov
xor
stos
mov
int3
jg
data16
mov
insl
xlat
pop
movups
and
mov
ret
pop
push
cmpsl
pop
out
je
in
mov
mov
and
ljmp
pushf
ss
xor
in
or
out
adc
jbe
loopne
repz
cltd
repz
jno
mov
je
ret
int
mov
sub
fwait
stos
fsubrl
or
pop
cmp
jecxz
mov
mov
out
push
negb
xchg
notb
cmpb
lock
cmpsb
jl
fbstp
hlt
mov
in
leave
push
lods
stos
jo
cmp
pop
lds
ret
xor
cmp
lahf
test
cmp
and
or
inc
pop
iret
stos
lock
sti
inc
xchg
cmp
fnstenv
into
adc
nop
cltd
or
imull
fnsave
imul
mulb
cld
imul
mov
cmp
mov
das
lods
arpl
aam
movzbl
pop
je
test
jl
ljmp
and
lods
adc
jle
notl
push
idivb
push
dec
rcl
xorb
les
cmpsb
scas
or
adc
pop
inc
fcoml
mov
and
dec
inc
push
jae
cwtl
in
xchg
jns
jae
adc
cs
shll
dec
mov
test
call
adc
push
rolb
out
cli
mov
lret
je
clc
shlb
adc
inc
mov
mov
jb
jl
xor
out
lods
mov
ljmp
jns
adc
pop
add
cmp
push
and
insb
sbb
loopne
imul
jbe
into
or
mov
push
int3
movsb
xchg
test
sbb
push
out
dec
inc
lcall
fiadds
repz
jbe
das
jl
fcoms
addr16
add
xor
outsb
mov
fbstp
mov
das
ljmp
leave
inc
in
std
fsubr
pop
repz
jno
roll
cmpsb
push
xor
out
sti
mov
addr16
ja
data16
jl,pt
pop
mov
mov
mov
and
and
mov
push
mov
fcmovnu
pop
cwtl
push
insl
push
fxch
add
shrb
sbb
iret
cmpsl
xor
scas
xchg
aaa
mov
mov
jmp
push
leave
sbb
call
es
dec
dec
mov
inc
push
out
xchg
rcrl
lods
lods
popa
adc
mov
ret
jge
push
mov
pmullw
pop
mul
popf
mov
daa
jge
fiaddl
scas
xchg
sub
or
pop
mov
fwait
mov
jno
push
mov
pop
and
dec
movsb
push
adc
dec
outsb
aaa
popf
pop
int3
addr16
mov
inc
mov
loop
mov
ja
xor
push
andl
fldl
sub
push
or
in
pop
fs
jecxz
sbb
movsl
add
inc
mov
test
divb
xor
daa
cwtl
jmp
in
xchg
cmp
xor
xchg
hlt
cmpsb
mov
xchg
leave
cld
sbb
xor
sub
dec
sub
ret
movsl
push
test
push
sbb
out
arpl
xor
arpl
mov
xchg
mov
pop
push
jo
or
shrl
ret
ljmp
jns
ss
and
in
les
les
mov
loope
nop
mov
pop
enter
or
and
pop
xor
xchg
xchg
push
aam
inc
xchg
test
mov
mov
xor
mov
daa
sub
ss
lahf
repnz
pop
repz
in
dec
imul
inc
xchg
adc
sub
in
dec
fdivrs
aas
jle
mov
inc
leave
mov
shl
push
sbbl
js
call
or
add
inc
aas
mov
or
mov
inc
or
fs
jnp
pop
mov
mov
and
std
mov
push
aad
or
and
int3
sbb
out
and
pusha
xchg
scas
and
or
pop
cmp
in
inc
inc
jle
lods
insb
pop
dec
or
mov
lods
mov
jecxz
xchg
lods
mov
outsl
cltd
xchg
mov
movsb
and
movsb
das
scas
clc
add
stc
nop
lods
xchg
mov
sub
insl
cli
out
mov
push
sbb
adc
sbbb
mov
pop
push
cmp
jge
add
scas
cwtl
lcall
xor
mov
sub
add
out
data16
jne
push
out
cmc
icebp
int
inc
bound
cmpsl
imull
or
fucomi
or
fnsave
pop
sbb
ss
mov
iret
jecxz
dec
aaa
add
inc
xchg
popa
jb
call
jl
push
int3
movntq
test
and
lahf
mov
inc
bnd
xchg
xor
sub
inc
jnp
sbb
push
cmpsb
call
or
mov
cmp
cmc
out
lahf
mov
jnp,pn
rclb
data16
push
aaa
add
stc
xchg
dec
ds
in
scas
and
out
out
scas
data16
sbb
pshufw
xor
popf
push
addr16
sub
jo
sbb
mov
dec
cs
imul
enter
fists
xor
ds
lret
or
xchg
pop
jne
inc
jne
jno
cmp
lods
je
ret
xchg
lahf
pop
jae
lahf
lds
stos
cmp
outsl
shll
loopne
push
push
jno
dec
add
push
xchg
mov
fidivs
test
js
add
cli
mov
push
pop
ja
dec
test
mov
sbb
xchg
rclb
rol
mov
dec
loop
adc
or
mov
ss
inc
and
sub
es
cmpsl
test
shl
rorl
adc
add
into
or
mov
inc
cmp
push
nop
mov
je
repz
xchg
jbe
cli
ja
mov
mov
cmp
cli
lret
hlt
inc
xchg
in
fwait
outsb
push
cld
dec
popa
dec
xchg
cmpsl
inc
loope
pop
arpl
push
push
push
add
sarb
push
bound
cwtl
push
and
sub
lds
test
mov
inc
gs
mov
pusha
inc
push
aas
icebp
stos
and
inc
pop
mov
pop
scas
pop
lret
mov
pop
inc
fpatan
and
pushf
roll
test
or
sbb
fidivs
mov
test
cmp
pop
mov
shll
dec
movsl
jb
aas
add
jbe
iret
lcall
test
iret
lcall
add
call
hlt
cmpsl
andb
inc
fistl
ficomps
repnz
pop
aam
inc
dec
call
in
dec
cmpsl
dec
fstpl
mov
sahf
lret
dec
movsb
dec
mov
test
and
jnp
fs
add
sbb
xchg
jmp
push
cmp
fcmovbe
jno
fwait
mov
js
fmuls
cld
movsl
shr
adc
in
pop
and
mov
push
mov
pop
fnstcw
jecxz
mov
mov
inc
xchg
fs
mov
dec
out
mov
shll
xchg
in
lods
mov
mov
idivl
cwtl
push
jno
pop
jmp
dec
jns
xor
or
dec
cmp
gs
xor
xor
jns
dec
mov
xchg
lcall
pop
rcl
ljmp
std
rolb
ds
or
cwtl
inc
push
and
loop
int
into
pop
push
iret
lret
mov
push
lods
push
sub
inc
jg
jg
adc
mov
iret
xor
jle
lea
inc
xor
and
ja
sbb
xlat
xchg
inc
nop
pop
ret
aaa
mov
inc
ficomps
enter
or
xor
aam
xchg
push
mov
sbb
gs
out
mov
add
fiaddl
je
mov
test
inc
adc
stc
pop
insl
lahf
jae
repz
fcmovbe
inc
aad
lcall
mov
push
notb
ret
mov
adc
scas
orl
clc
or
ror
ret
and
push
js
jnp
es
inc
mov
xor
pop
or
mov
js
add
inc
cmc
je
xchg
mov
cltd
sub
sti
test
shll
mov
dec
test
fwait
pop
cmpsl
push
pusha
popa
outsw
adc
mov
pop
add
mov
jmp
xchg
push
ss
inc
nop
push
pop
inc
xchg
cmpsl
and
sub
mov
push
ss
adc
test
int3
adc
out
mov
repz
sbb
fs
xor
inc
sbb
xor
jle
pop
xor
outsb
adc
leave
in
mov
cwtl
xchg
popf
sub
pushf
aam
and
xchg
aas
cwtl
inc
test
fimull
adc
mov
mov
sub
and
clc
inc
dec
fldcw
dec
push
aam
lret
add
push
mov
mov
imul
fs
jl
mov
sbb
lcall
mov
push
inc
cmp
popa
shr
xor
xchg
mov
cmp
mov
pop
xchg
insl
out
in
sub
cmp
clc
jl
imul
sub
stos
jecxz
gs
xor
mov
pop
xor
push
out
sub
sbb
xchg
jb
lret
mov
adc
notb
and
jmp
cmp
lods
idivl
dec
dec
scas
pop
cmpsb
loopne
out
stc
mov
mov
pop
scas
jg
add
xchg
pop
push
pop
push
mov
out
inc
lock
scas
mov
mov
leave
and
popf
cld
inc
int
imul
cmp
cmp
mov
sub
mov
iret
mov
xor
mov
enter
aam
fistpll
xorb
lcall
xchg
xchg
xchg
out
int
fimuls
cmp
sub
push
jmp
into
test
addr16
pop
sahf
data16
sub
xchg
mov
es
add
cltd
testb
pushf
rol
mov
icebp
xlat
inc
push
sahf
or
fidivrs
popl
xchg
test
xchg
out
iret
xchg
pop
inc
cltd
cmpb
xor
add
roll
pop
das
push
mov
arpl
mov
test
repz
das
sbb
mov
clc
rol
sbb
test
ficomps
scas
cmc
dec
shrl
add
nop
pop
inc
stc
jp
out
push
in
xchg
mov
inc
push
xchg
or
loope
enter
push
mov
sub
outsl
xor
jmp
out
jg
or
pusha
imul
jmp
or
daa
inc
in
pop
fisttpll
adcl
ret
js
sub
or
inc
jae
cmp
lods
mov
das
shl
arpl
pop
and
sbb
push
js
movsb
or
test
imul
cmp
enter
mov
cmpl
or
push
gs
jp
xor
fdivrs
fsts
and
jno
mov
fdivrl
jle
ss
push
xor
and
in
pop
test
das
outsb
inc
push
sti
int
leave
jns
xchg
icebp
jo
incl
xlat
scas
pushf
lea
sbb
pop
arpl
mov
and
jecxz
mov
mov
and
mov
jno
xchg
push
stc
or
jle
mov
out
mov
mov
cmpsb
xor
repz
xchg
jecxz
cmp
call
sbb
jns
in
mov
icebp
push
jp
jp,pt
cmpsb
fwait
jmp
cli
lods
xchg
subl
mov
aas
sub
int
cs
test
xor
mov
push
sbb
mov
add
inc
scas
ficoms
xlat
mov
fs
sbb
movsb
dec
sbb
mov
hlt
xor
inc
jge
mov
sub
mov
and
dec
xchg
adc
test
sahf
pop
pushl
popf
mov
jecxz
mov
cld
cmpsb
in
mov
xchg
xchg
cmp
sub
sbb
or
jl
insb
ss
push
dec
push
mov
mov
cld
cmpsb
in
mov
xchg
xchg
cmp
sub
sbb
or
jl
insb
ss
push
dec
push
mov
inc
mov
cld
cmpsb
in
faddl
sub
sbb
or
jl
insb
ss
push
dec
push
mov
mov
cld
cmpsb
in
mov
xchg
xchg
cmp
sub
mov
or
or
mov
int3
mov
andl
andl
mov
mov
push
movl
movl
movl
movl
movl
movl
mov
movl
call
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
sub
pushl
call
pushl
movl
movl
movl
pushl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
push
pushl
call
mov
push
push
push
pushl
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
pushl
call
mov
push
push
push
push
pushl
call
push
push
push
push
pushl
call
call
pushl
pushl
pushl
pushl
pushl
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
mov
movzbl
mov
sub
movzbl
sub
test
je
call
call
movl
movl
movl
call
andl
jmp
movl
movl
movl
movl
movl
movl
andl
jmp
mov
inc
mov
mov
sub
mov
add
mov
movzwl
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
mov
xchg
xor
xchg
mov
mov
and
mov
jmp
jmp
push
pushl
call
mov
pushl
call
cmpl
jb
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
in
add
add
mov
add
test
add
jl
add
je
add
insb
in
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shl
add
fsub
add
lock
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
in
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
out
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
out
add
add
js
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
out
add
out
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
outsl
call
add
push
call
add
inc
call
add
xor
add
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
nop
call
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sub
add
dec
jmp
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
jmp
add
aam
add
fsubr
add
in
add
in
jmp
add
pop
ljmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
add
sub
add
cmp
add
dec
ljmp
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
movzbl
nop
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
mov
jae
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
cmp
mov
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
push
andl
mov
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
lea
cmpb
jne
mov
jmp
mov
xor
mov
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
nop
nop
nop
nop
nop
nop
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
mov
and
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
mov
cmp
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
xor
mov
mov
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
