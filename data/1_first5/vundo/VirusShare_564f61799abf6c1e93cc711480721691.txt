mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
lldt
in
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
push
call
mov
mov
movzbl
sub
je
incl
call
call
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
add
outsl
and
dec
inc
xchg
inc
inc
jbe
bswap
lret
mov
mov
jecxz
addr16
outsl
dec
pop
xor
aas
push
aas
arpl
jae
xor
out
ret
iret
or
lods
jecxz
repz
mov
inc
jmp
pop
xor
jge
jae
out
mov
lret
cmpsb
mov
mov
scas
loopne
xor
and
pop
sub
push
out
mov
and
ds
xchg
and
pusha
div
out
jg
in
push
mov
insl
dec
rcr
out
loopne
lock
out
es
dec
xor
icebp
jecxz
or
std
jecxz
add
insb
and
add
sub
push
aad
xchg
out
mov
mov
rcrl
xchg
push
sub
jnp
mov
push
aas
pushf
imul
pop
xchg
adc
and
cmp
shrl
loop
repz
cld
cli
push
nop
add
fistpl
pop
clc
addr16
adc
mov
decl
cld
orb
mov
push
inc
pop
mov
xchg
test
and
dec
xchg
orb
lock
inc
jg
inc
xor
aas
sub
arpl
aad
inc
decl
not
movb
roll
popa
sbb
sub
cmp
push
nop
shr
fcmovnbe
stos
mov
mov
jecxz
push
jbe
push
sub
and
aas
ss
xchg
imul
in
rorl
iret
mov
sti
outsl
jg
outsl
inc
cmp
adc
das
arpl
jae
cmp
out
mov
mov
repz
jg
outsl
and
dec
inc
aas
push
das
arpl
jae
cmp
out
mov
mov
repz
jg
jl
fdiv
dec
mov
lret
shlb
push
lock
adc
out
pop
test
sbb
pop
nop
or
dec
push
lods
enter
mov
lods
cld
and
lods
movb
fldcw
sbb
movsb
stc
push
aaa
nop
pusha
pop
cltd
rcrl
lds
ss
lret
adc
sbb
sub
imul
xor
sub
dec
outsl
inc
inc
fsub
lock
addr16
jo
sub
lcall
dec
xlat
arpl
rcrb
dec
inc
dec
lds
fisttpll
add
js
mov
adc
out
sti
jle
pushf
jo
inc
xor
call
push
int3
bnd
test
mov
rclb
shrl
push
mov
std
cmc
in
es
pusha
movsl
xor
xchg
inc
jl
dec
jl
std
js
xchg
lahf
push
lods
dec
adc
out
es
or
nop
popa
aaa
pop
adc
xor
movsb
outsb
in
xorb
rcl
mov
bound
fmull
sbb
mov
rcrb
popa
add
fs
fldenv
push
adc
and
jns
int
movsl
loopne
gs
adc
aam
cli
addr16
xchg
out
pop
das
ss
xor
push
xchg
dec
pop
pushf
imul
ss
sysret
fs
mov
inc
and
or
inc
ret
mov
and
dec
mov
in
push
inc
insb
mov
mov
sbb
test
test
jmp
inc
inc
je
int
clc
push
ret
mov
clc
test
shll
hlt
push
sub
or
into
cmc
mov
stos
cmp
pusha
shrb
out
sub
fs
cmpsl
add
mov
cmpsb
out
arpl
jp
mov
xor
push
sub
xchg
aam
scas
nop
aas
dec
xor
lea
bound
in
mov
or
mov
cli
push
xchg
pop
out
and
subl
sbb
outsl
scas
shll
popf
js
ret
ret
mov
sub
ljmp
xchg
popl
aas
pop
fdivrp
std
and
mov
xchg
pop
test
mov
mov
outsb
push
leave
add
mov
faddl
push
mov
mov
arpl
in
std
ja
cmp
fdivl
mov
sbbb
sub
orb
sub
inc
and
addb
test
nop
and
adc
adc
xchg
inc
or
fstpl
mov
mov
adc
jnp
sbb
pop
pop
pop
stos
lock
jp
stc
imul
repz
jno
and
mov
lds
jle
mov
adc
xchg
jo
test
inc
loopne
pop
jbe
test
cmpsb
bound
aas
cs
sbb
aam
aaa
loopne
lret
mov
push
test
loope
push
pushf
hlt
out
adc
jne
out
cmpb
jmp
adcl
mov
lods
pop
nop
sbb
jge
fwait
jl
out
push
insl
rcrl
adc
add
lods
adc
pop
mov
pop
mov
inc
mov
out
sarl
jmp
cmc
adc
out
adc
roll
pop
shlb
mov
push
ret
mov
pop
xor
dec
sbb
imul
xor
shll
aas
and
push
pop
movsl
aaa
lea
and
add
xor
call
ss
mov
shlb
lods
add
repnz
in
jecxz
or
pop
pushf
inc
sub
ss
fstps
fiadds
mov
mov
xlat
xor
bnd
je
or
cltd
jmp
daa
dec
mov
cs
imull
push
std
leave
jns
js
lock
or
xor
pop
mov
push
xor
dec
pop
das
jbe
dec
lds
iret
mulb
sbb
icebp
xor
dec
insb
and
xlat
mov
test
pop
pop
mov
xor
movsl
es
icebp
insl
outsl
lret
mov
inc
lds
mov
jae
push
leave
repnz
clc
xor
or
bound
pop
in
cmp
and
cmpsl
add
or
push
movsb
hlt
mov
push
mov
int3
mov
lret
lock
jns
push
in
inc
mov
mov
ja
ucomiss
ret
iret
and
fstps
jp
daa
sarb
pop
mov
stos
imul
in
add
ret
js
adc
mov
rorb
lret
inc
imul
and
orb
fs
rcrb
jno
xchg
adc
cld
divb
movsb
dec
mov
xor
cmp
mov
lods
mov
and
test
xchg
mov
arpl
jb
push
pop
in
jne
outsb
loope
mov
and
dec
xchg
fs
xchg
cmc
inc
out
ret
inc
aad
mov
insl
lcall
aaa
cmpsb
mov
and
sub
adc
stc
mov
addl
lods
cmp
mov
pop
push
dec
pop
out
push
out
jle
pcmpgtw
hlt
ja
sahf
xor
pop
andb
mov
inc
cmp
adc
ret
ss
xchg
xchg
pop
dec
and
sub
cmc
mov
xor
sbb
inc
mov
dec
cmp
icebp
hlt
pop
arpl
and
mov
sahf
das
and
mov
jne
sahf
call
sub
imul
mov
hlt
xchg
in
xor
pushf
in
lds
iret
cmpl
adc
out
fnsave
push
cmp
cmp
xor
mov
outsb
dec
cmpsl
shl
test
sbb
fwait
xor
loopne
push
dec
push
sbb
nop
cwtl
int
or
pop
arpl
les
sarl
mov
or
mov
xchg
adc
cmp
push
adc
cmp
add
dec
mov
or
cltd
xorl
loop
loope
fiaddl
push
adc
iret
xor
adc
mov
or
mov
out
les
sbb
fldl
nop
mov
scas
pop
xchg
fwait
popa
mov
stos
inc
jecxz
or
lea
rorb
test
mov
imulb
roll
sbb
sbb
inc
adc
sub
inc
mov
fs
xor
jb
mov
push
cmp
push
in
popa
clc
leave
ljmp
pop
in
testb
std
mov
lods
out
sub
gs
adc
js
mov
movsb
mov
jo
rorb
addr16
popa
fisubrl
addr16
or
cwtl
inc
pushf
scas
pushf
jle
out
or
mov
jp
cmp
dec
add
or
mov
pop
and
and
sbb
jle
mov
xchg
enter
filds
pop
sub
adc
jmp
mov
jge
testl
add
ret
cmp
outsl
jae
fisubl
idivl
sub
cmpsb
stos
clc
jle
mov
repnz
rcrb
dec
cli
aas
and
push
push
and
insb
mov
fisubl
mov
aam
jmp
push
dec
or
and
aaa
push
shll
or
add
jmp
scas
insb
repnz
xchg
insl
inc
mov
nop
push
add
or
xchg
mov
ror
lods
push
int
mov
dec
outsl
outsl
out
loope
xor
pop
jne
xchg
dec
insw
pop
adc
cmp
dec
cmc
push
xchg
cltd
push
inc
sub
pop
pusha
shlb
stos
rcl
mov
sub
jb
jno
push
nop
inc
adc
imul
push
adc
aam
and
testl
pop
pop
dec
cltd
cmp
xor
mov
sbb
adc
call
jbe
push
cmp
xchg
xor
je
pusha
xlat
inc
ret
xchg
dec
fstl
push
mov
and
clc
or
xchg
ja
dec
inc
test
inc
int
adc
xchg
outsl
cmpsl
fbld
movsl
add
xor
mov
add
adc
or
and
ficomps
inc
rorl
and
loopne
fwait
or
adc
gs
jmp
loope
xor
push
pop
dec
sarl
mov
lds
mov
sahf
int3
push
jmp
push
mov
cmpl
mov
das
push
scas
and
je
mov
pmullw
gs
arpl
or
xor
push
in
mul
clc
cmc
mov
repz
jo
ret
leave
mov
jno
inc
ret
lods
xchg
xchg
push
push
pop
arpl
je
int
mov
xor
inc
or
xchg
aam
lcall
mov
into
int
xor
pop
mov
leave
je
adc
shlb
les
jp
outsb
ja
mov
xchg
movsb
je
stc
insl
add
push
pop
call
sub
sbb
and
lock
xor
dec
cmpsl
insb
sub
or
inc
scas
jg
adc
ret
xchg
xchg
popf
mov
xchg
push
popf
xlat
pop
mov
ljmp
bound
ja
cmp
bound
jae
mov
jne
or
enter
dec
out
adc
dec
xchg
jge
ja
es
cmpsl
cmp
mov
hlt
loop
dec
mov
jl
in
je
mov
jns
imul
inc
pop
xor
insl
jbe
xchg
mov
mov
pop
mov
inc
sti
mov
push
cmpsb
inc
fwait
sub
addr16
icebp
nop
inc
push
mov
pop
cmp
lods
lahf
out
shl
sub
imul
fbstp
call
dec
mov
bound
mov
mul
pop
cld
rcr
loopne
pop
faddl
cmp
iret
enter
inc
inc
js
add
mov
inc
sti
call
lret
cs
and
xlat
xchg
push
mov
movsb
sahf
push
mov
rorl
add
push
mov
xchg
mov
rcrl
movsl
xchg
leave
sub
xor
sbb
push
cld
or
es
cmp
xor
data16
rcrl
dec
sub
bound
inc
imull
push
punpckhwd
cmp
notb
icebp
jo
test
lahf
jb
cmp
sahf
jmp
pop
mov
xchg
repnz
out
aaa
mov
dec
in
xlat
mov
mov
dec
pop
xchg
leave
mov
cmp
fcoms
mov
mov
adc
xchg
mov
and
xchg
out
lret
test
fwait
cli
pop
es
cmc
push
arpl
loopne
push
fs
loopne
jnp
popf
mov
aam
insl
insb
mov
sbb
inc
push
sub
mov
pop
inc
mov
and
les
inc
ret
inc
push
std
sar
in
fistl
push
cmp
pop
into
xchg
sbb
jb
sbb
roll
loope
outsl
sub
in
add
push
fwait
dec
sbb
ljmp
xchg
addr16
inc
out
or
push
jno
adc
shlb
scas
cmp
pusha
mov
adc
push
or
and
out
sub
pop
xor
sub
pushf
pop
dec
ret
fdivrs
or
aam
cld
push
loopne
xor
jle
jle
mov
rorb
inc
jg
jno
popa
jo
xor
xchg
add
and
inc
popl
je
mov
in
popa
dec
sbbl
cmp
es
jb
or
push
jle
mov
pop
or
cmc
pop
pusha
mov
push
pop
xchg
out
faddl
arpl
sahf
mov
pop
sub
or
push
cltd
int3
arpl
jbe
hlt
mov
fcmovu
and
push
jnp
es
add
push
popa
into
aas
loope
js
or
adc
dec
sbb
dec
cmp
mov
sub
mov
pop
xchg
mov
sbb
shlb
inc
xchg
es
ljmp
push
imul
outsb
mov
fidivl
or
fisubl
bound
adc
push
xor
mov
inc
xchg
and
add
and
xchg
sub
inc
mov
cmp
ja
xor
into
sar
stos
mov
dec
dec
outsb
mov
loop
jno,pt
fwait
insb
xchg
shlb
pop
test
jne
cmp
push
adc
sub
sti
scas
das
out
inc
xchg
jne
jge
xchg
xchg
push
mov
inc
nop
xrelease
out
cmp
pop
jmp
push
pop
je
sub
push
cmp
sub
push
shrl
shrb
xlat
pop
xor
sarl
push
repz
in
add
push
ljmp
fmul
clc
into
mov
sbb
stos
fdivrs
adc
shlb
inc
stos
jg
aam
roll
icebp
lahf
fistpll
daa
mov
jl
mov
xchg
call
mov
cmpxchg
lret
xchg
insl
or
add
and
js
and
ror
pop
xor
addb
arpl
ficoms
inc
shlb
push
test
lret
bound
insb
lods
xchg
mov
mov
dec
stos
xchg
loope
jae
movsb
test
out
add
mov
mov
mov
cmp
sub
lock
std
shlb
ds
and
push
fidivl
loopne
enter
xchg
adc
pop
repz
jo
fists
pop
in
xlat
ret
add
sahf
frstor
cmp
pop
or
test
loope
push
and
pushl
mov
inc
mov
push
pop
push
into
or
fmul
jne
insb
test
xchg
pushf
sbb
adc
inc
inc
jg
cltd
adc
jns
inc
arpl
xchg
ret
jne
jg
leave
inc
cwtl
cli
cmp
popf
mov
pop
xchg
and
mov
lret
jae
insl
data16
lods
xor
orl
lock
inc
clc
push
push
dec
mov
sbb
xchg
daa
lock
push
mov
mov
sbbl
bound
bound
or
or
mov
and
stc
sbb
pop
inc
arpl
push
sbb
mov
jbe
pxor
in
push
mov
dec
push
sub
aad
jno
sbb
test
icebp
leave
dec
stos
fwait
pop
loop
xchg
or
lea
dec
cmp
jge
and
pop
inc
and
je
andl
out
sbb
mov
lock
in
adc
lret
push
fst
add
adc
inc
imul
lds
inc
fisubrs
enter
sub
int
ja
out
jl
movsl
adc
das
stos
popa
cs
outsl
jmp
clc
movsb
dec
mov
loope
mov
loop
fsubs
stc
sti
pop
lret
push
jge
pushf
ds
xor
int
fs
xor
pushf
mov
jnp
sub
inc
push
cmp
rcrb
fdivl
push
or
rolb
jecxz
bound
sbb
mov
repnz
cwtl
int
enter
aam
and
xchg
mov
pop
sub
jnp
xlat
lret
cli
pop
cli
lods
test
clc
pop
pop
mov
xor
rcr
in
jp
aam
ljmp
push
dec
jne
ret
movsl
fildl
jge
and
cmp
test
cld
or
mov
andl
push
ret
xor
movsl
or
cltd
loop
lock
add
fstpt
ljmp
inc
and
xor
stos
pop
jnp
mov
mov
and
subb
xchg
clc
jl
mov
into
jns
dec
push
dec
lods
cltd
sub
dec
testb
xchg
push
cmp
sub
push
lret
in
fildl
push
pop
xor
mov
or
sbb
adc
pop
sbb
gs
adc
inc
pop
push
or
mov
shll
pusha
sbb
adc
lahf
mov
pop
sbb
shlb
jg
push
sbb
in
bound
gs
push
fisubs
shlb
dec
mov
pop
test
pop
or
adcl
out
dec
and
pop
jmp
enter
stos
add
shrl
xchg
loop
jo
xor
rolb
xchg
jbe
test
fidivs
fstpl
mov
stos
divb
je
scas
loope
ret
data16
add
daa
lock
push
jns
lret
int3
xor
dec
faddp
or
aas
out
je
insl
notl
in
cmp
xor
aaa
popa
ss
sbbb
jo
aad
outsb
mov
jle
pop
mov
inc
out
orb
fidivs
out
sub
lret
data16
int
hlt
inc
sahf
cli
mov
in
adc
aad
pop
jnp
pop
ljmp
aaa
add
dec
dec
je
mov
and
jb
jge
ljmp
sub
dec
shlb
test
jl
mov
mov
add
out
dec
pushf
or
jle
pop
xor
sbb
mov
dec
int
xchg
add
jmp
daa
adcb
add
lahf
pusha
pop
test
inc
dec
adc
sarb
sbb
js
ja
xchg
lods
in
outsb
inc
adc
and
loope
add
or
out
shrl
push
or
mov
sub
jb
xor
inc
xchg
adc
xchg
xchg
sub
mov
mov
cmpsb
jo
call
and
push
popf
jge,pn
push
inc
imul
repz
sbb
sub
shll
jno
or
push
jecxz
push
inc
or
sub
out
jno
ficomps
mov
mov
in
lahf
test
mov
ret
lahf
inc
out
pop
sar
daa
test
loopne
pop
cld
call
das
pop
inc
adc
inc
sbb
enter
cltd
daa
inc
push
je
lret
gs
scas
fcomps
cld
jmp
cmc
out
push
adc
lcall
in
jbe
iret
lea
and
int3
fst
cmp
mov
push
jae
fldl
ret
lea
out
cwtl
mov
rorl
lahf
test
xchg
mov
lea
xor
mov
in
jge
mov
fistpl
and
jo
jne
lret
ja
jle
mov
out
inc
je
inc
pop
mov
push
mov
pop
sbb
push
in
xlat
dec
or
sub
adc
call
sub
adc
pop
arpl
push
add
or
push
push
adc
mov
subl
in
or
push
xorb
dec
sahf
pop
sub
push
xchg
es
push
dec
out
test
push
das
inc
jle
jge
loopne
es
dec
push
mov
push
fsubr
bound
ss
dec
pop
mov
adc
insb
inc
hlt
push
mov
mov
sbb
arpl
lcall
lock
ror
and
sbb
cmpsl
lods
lcall
jno
rcll
lcall
or
scas
push
add
clc
ds
in
inc
pop
and
pop
or
xchg
scas
cmp
xor
loope
cmc
mov
push
jns
insb
xor
call
loop
xor
mov
jmp
push
xlat
xor
add
repz
sahf
sub
dec
popa
daa
dec
xor
mov
mov
nop
fnstsw
xlat
ss
and
xor
icebp
mov
xchg
mov
adc
add
sbb
ds
mov
sbb
add
add
test
lea
fistps
push
or
xor
and
fmul
ja
mov
mov
subb
lret
icebp
pop
out
push
mov
in
adc
mov
sbb
ficoml
sub
jle
arpl
fistl
or
inc
shlb
out
jo
inc
add
out
xchg
scas
js
dec
std
test
jbe
xchg
aam
insl
push
add
int
sti
mov
jg
mov
inc
outsb
pop
shl
sti
xor
fiadds
imul
add
jbe
sbb
cmp
sbbb
enter
jae
pop
pusha
cmp
fcoms
fdivrs
rep
scas
mov
adc
cli
sub
pop
jmp
aad
pop
loope
hlt
add
cmp
cmp
adc
ret
jmp
inc
xchg
push
jp
inc
cltd
xor
push
into
mov
out
lahf
mov
cmp
jecxz
test
xchg
inc
test
mov
rcr
pop
cmpsl
push
and
stos
cs
xor
inc
push
lods
jne
or
jb
pop
aas
push
push
insl
out
mov
and
ja
ss
adc
bswap
test
mov
mov
lods
mov
jl
lock
out
xor
lods
scas
mov
into
hlt
jbe
ja
movsb
xor
xchg
in
sbb
add
inc
cltd
notb
aad
lods
lods
xchg
mov
xor
mov
mov
incl
pop
and
das
and
add
pop
push
je
ret
stc
outsb
dec
ja
sbb
into
movsl
jb
sub
rorl
add
or
sti
pop
repz
cld
lcall
mov
push
mov
adc
lcall
or
js
orl
je
sub
lock
lret
xchg
jne
lods
inc
mov
or
sti
jo
mov
cltd
push
out
cmp
dec
ficomps
pop
pusha
hlt
cmpsl
xchg
jno
fstl
xor
lods
movsb
jns
ds
bound
sub
sbb
xor
ds
cltd
mov
stos
inc
pop
jp
sbb
outsl
iretw
xor
sub
jae
movsl
xchg
cmp
out
sti
xor
mov
clc
ds
outsb
push
hlt
sub
sbb
shl
fsub
pushf
shrl
cmp
popl
push
jae
xchg
dec
shll
push
ljmp
mov
addr16
dec
lea
lea
aas
pushf
test
inc
cmp
xlat
jge
rclb
aam
popf
sbb
jae
jb
in
les
scas
adc
xorl
idivl
fldcw
sub
pop
test
jnp
or
add
adc
fdivrl
or
js
das
stc
imull
adc
pop
dec
movsl
lret
push
scas
rcl
xorb
cld
jmp
sbb
cmp
xsavec
pop
jns
fisubrl
inc
sub
sub
lea
mov
ljmp
test
jg
ffree
dec
jge
jecxz
jae
add
pop
aad
repnz
push
mov
fyl2x
jae
pop
cmp
push
hlt
push
inc
ja
or
pushf
mov
cld
jp
cmpsl
cld
xor
pop
icebp
cmp
lcall
stos
lods
cmp
pusha
loop
add
cmp
aaa
repnz
push
test
lea
jmp
sbbb
jg
mov
sarb
add
mov
outsl
fs
xor
aas
push
das
arpl
jae
cmp
out
mov
mov
repz
jg
outsl
and
dec
inc
aas
push
das
arpl
jae
cmp
out
mov
mov
repz
jg
outsl
inc
pop
xor
aas
push
das
arpl
mov
cmp
out
push
fbstp
scas
jecxz
sbb
jns
adc
aas
inc
das
arpl
repz
cmp
inc
or
mov
mov
pop
rcrb
or
int3
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
pop
xchg
xchg
aas
cmpsb
das
mov
mov
mov
or
lahf
dec
push
mov
inc
iret
push
jmp
jbe
xchg
xchg
aas
cmpsb
das
mov
dec
jg
outsl
mov
es
fildll
iret
push
jmp
jbe
xchg
xchg
aas
cmpsb
das
mov
dec
jg
outsl
negb
push
adcl
or
fisttps
mov
out
shl
insl
xchg
jge
in
arpl
cld
dec
push
add
inc
jb
scas
sub
mov
push
je
cltd
cld
imul
push
and
lahf
adc
out
test
add
pop
push
add
in
inc
jg
data16
inc
push
lcall
mov
mov
xlat
orl
and
test
insb
in
ja
bnd
push
notb
cmp
dec
inc
pop
jle
outsb
stc
jae
scas
fldenv
xor
int
pop
data16
mov
add
sbb
iret
mulb
out
in
iret
pop
in
inc
fsubrp
and
inc
into
add
inc
xchg
xchg
aas
cmpsb
das
mov
dec
jg
outsl
negb
es
filds
push
jmp
pop
pop
andb
cmpsb
dec
mov
mov
mov
faddl
inc
mov
pop
mov
rep
ret
dec
mov
stos
and
cli
dec
lea
jne
push
mov
xor
sbb
imul
aam
rcrl
dec
jg
outsl
negb
es
filds
push
jmp
jbe
xchg
xchg
aas
cmpsb
das
mov
dec
jg
outsl
negb
es
filds
push
jmp
jbe
xchg
je
mov
movsl
or
jnp
jns
adc
movsb
adc
mov
movsl
les
das
jae
sbb
aam
imul
cmp
sti
jb
xchg
test
imul
inc
bound
add
pop
inc
lret
in
sub
pop
mov
jmp
sbb
paddusb
test
dec
cmpsb
cmp
fidivl
sbb
addl
cwtl
mov
in
add
mov
into
jecxz
nop
add
push
cmp
adc
bound
fs
cmp
scas
dec
push
fcoml
outsb
dec
outsl
dec
push
clc
orl
aas
inc
mov
xor
cltd
lcall
repz
call
lods
bound
inc
lret
int3
adc
and
mov
add
outsb
pop
test
and
xchg
sbb
lret
push
subl
sub
fldt
cmpsl
fstpl
movsl
and
xlat
dec
adc
dec
jns
fisttps
test
xor
lahf
xor
mov
push
rol
in
pop
cmp
jnp
jle
push
in
ror
shll
push
mov
addr16
inc
xor
sbb
add
test
dec
push
jg
xor
push
leave
movsl
sbb
in
jp
roll
jb
dec
cmp
sub
push
mov
subl
inc
and
fistl
mov
sub
mov
push
aaa
aas
aad
pop
fnsave
push
fdivs
jb
dec
push
jno
ret
stc
enter
les
sbb
std
loop
adc
out
gs
std
lret
cmc
ffreep
or
push
pop
push
sbb
rol
test
out
dec
test
fwait
add
movsl
cmp
sub
es
xor
inc
shlb
je
in
pop
dec
xchg
jno
jno
xchg
orb
ljmp
ljmp
inc
notl
add
call
and
mov
push
and
andl
sbb
mov
shl
lcall
pop
jns
dec
mov
leave
mov
dec
sbb
fs
cltd
push
popf
add
add
xchg
movsb
fsubr
cld
mov
inc
jl
inc
and
xchg
jmp
sbb
and
jne
in
sbb
fwait
shrl
leave
cmp
inc
cld
jns
adc
push
rcr
stos
in
cld
dec
or
inc
jge
sub
lcall
push
int3
dec
push
push
insb
push
pop
frndint
and
shl
pop
sub
push
test
and
das
test
inc
push
into
mov
lret
loopne,pt
enter
enter
jmp
pop
mov
repz
xor
rol
and
insb
icebp
adc
xchg
pop
stos
add
dec
cmp
jmp
in
jb
sub
inc
je
add
push
pusha
add
xchg
bound
inc
sbb
jno
inc
mov
ret
aas
repnz
popa
inc
pushf
das
sub
and
fsubs
dec
popa
ja
mov
push
push
or
sub
push
int3
mov
or
leave
stos
test
mov
cs
int
popa
fildl
cwtl
mov
repz
add
popa
sbb
mov
shrb
dec
sahf
mov
imul
pop
xchg
fwait
test
inc
dec
jge
sub
mov
mov
mov
inc
xor
lret
sti
sub
outsl
dec
loope
les
and
push
fbld
inc
daa
and
insl
and
sti
aad
out
aaa
inc
bound
out
push
sub
outsb
cmp
test
jo
cmp
sbb
cld
daa
in
cmc
loop,pt
mov
in
pop
scas
mov
sub
ss
xchg
add
mov
js
imul
mov
dec
pop
dec
cmp
loop
mov
cmp
lea
pop
xor
mov
jns
movsl
les
stos
mov
pop
cmpsb
fwait
into
imul
mov
jno
sbb
dec
pop
cltd
jecxz
jb
push
ja
mov
fwait
adc
xor
mov
jle
jb
xor
movsb
imul
clc
or
lods
push
push
sahf
mov
decl
sbb
mov
or
or
test
add
cmp
addl
push
sbb
es
iret
js
xor
sub
aad
xchg
lods
scas
push
in
out
in
not
popa
mov
sub
pop
xchg
lea
and
adc
stos
dec
jecxz
movsb
mov
or
lods
out
cmp
cli
addl
xor
movsb
sbb
iret
jmp
push
dec
enter
or
and
push
add
add
mov
repz
lret
clc
push
xor
sub
push
scas
push
push
jae
mov
dec
mov
dec
mov
repnz
imul
sub
cmp
shlb
sub
push
push
scas
lahf
cmc
and
push
mov
repnz
loopne
sub
cld
adc
mov
push
movsl
or
movsb
test
xor
out
in
leave
sarb
and
pop
mull
pop
xor
cmp
push
ds
in
inc
imull
loop
xor
xchg
popf
mov
imul
adc
cmp
xor
cs
cmp
dec
push
popf
pop
insl
shlb
pop
test
das
icebp
xlat
mov
adc
sbb
push
pop
mov
fldt
lahf
shrb
inc
fwait
loop
lret
xchg
sub
aas
fstpt
lods
jecxz
cmpsl
add
ljmp
and
lods
pop
mov
xor
mov
sub
cmpsl
lods
or
std
fidivrl
sbb
adc
pop
ja
mov
dec
pushf
dec
cltd
mov
int
std
sub
cmpsb
cs
lahf
aam
pop
and
xorl
jp
repz
fldl
icebp
pop
lret
sbb
dec
popf
out
or
mov
push
jbe
cltd
loop
arpl
or
push
je
mov
test
push
xchg
mov
scas
add
movsb
push
add
mov
sbb
fistps
mov
dec
or
lock
es
popa
cmp
dec
out
rol
sub
fisubrs
and
cmpb
ret
dec
jns
movsl
sbb
inc
mov
sbb
jbe
dec
jo
hlt
aam
jnp
xchg
dec
divl
and
or
shr
cwtl
mov
insb
jbe
xchg
pop
adc
movsb
out
imul
xor
shlb
shlb
pop
int3
andl
ret
jle
or
push
sbb
sahf
pop
mov
mov
dec
mov
cwtl
push
nop
xchg
jb
or
fstpt
pop
fdivrl
mov
fcompl
fimuls
and
xor
sbb
xor
aad
pop
stc
fadds
stos
mov
stc
cmp
and
test
mov
int
lds
outsb
mov
and
mov
cmc
adc
add
push
mov
pop
es
insb
and
cmp
enter
mov
fs
jp
mov
and
add
pushf
movsl
xor
sub
insb
push
clc
mov
fiaddl
sbb
or
cs
adc
inc
adc
push
int3
dec
or
rcl
mov
test
sbb
sbb
in
data16
xor
rclb
mov
nop
ljmp
mov
lock
bound
dec
insl
icebp
inc
jo
jbe
pop
mov
mov
xor
or
mov
mov
push
push
xchg
sbb
lds
jae
pop
cmp
push
mov
xchg
sbb
out
std
icebp
cmp
rolb
xor
cmp
jecxz
add
dec
cmp
xchg
adc
shrb
push
movsb
dec
arpl
dec
cs
push
mov
pop
push
sub
dec
jecxz
mov
push
mov
movsl
rcll
arpl
mov
mov
jo
pop
inc
xchg
pop
inc
out
iret
inc
dec
jae
loope
mov
pop
cmova
jnp,pn
std
push
and
sarl
push
sbbb
jae
mov
xor
shr
out
jnp
arpl
mov
xchg
sub
lods
push
and
dec
insb
aas
mov
ljmp
jns
repnz
jmp
mov
and
out
sub
jl
in
inc
xchg
adc
cltd
pop
mov
enter
sbb
test
sbb
xchg
jb
xchg
mov
mov
jp
mov
loop
dec
xor
aam
mov
xchg
and
fisubl
faddp
cs
aas
jno
mov
sbb
mov
pop
sbb
pop
cmp
push
nop
test
fsubrl
sbb
imul
cmp
xor
sub
mov
cltd
mov
in
std
push
je
add
jg
sbb
lock
pop
jns
out
insb
outsb
loope
xchg
xchg
jns
push
dec
dec
out
call
pop
sbb
push
mov
enter
ret
push
push
cli
fwait
sub
mov
push
ljmp
push
push
sbb
or
adc
xchg
stc
push
or
ss
ret
sbb
shl
mov
fwait
out
pop
mov
add
sbb
mov
and
add
cmp
xchg
sarl
rorb
lods
shrb
cmp
adc
push
add
jnp
mov
shlb
dec
aad
popa
cwtl
icebp
mov
mov
adc
sti
int
jbe
sub
xchg
sbb
mov
mov
jae
aad
jns
stc
mov
jmp
inc
scas
jp
mov
icebp
add
rcrb
dec
mov
adc
div
mov
lret
stos
push
insb
adc
imul
es
fwait
lret
mov
and
imul
loop
jmp
ret
add
rcrb
add
xchg
pop
jl
adc
jg
inc
mov
pushf
jle
xchg
outsb
add
mov
ja
cmp
adcb
inc
fs
out
mov
or
sub
cmp
clc
pop
jbe
testl
fsubl
lahf
stos
sbb
insb
test
xor
data16
les
int
jbe
mov
je
neg
sahf
pmulhuw
stc
push
cmp
pop
add
into
test
loop
add
push
cmp
addr16
inc
push
fcmovnbe
xchg
sbb
or
mov
loop
mov
cmp
xchg
gs
addl
je
lret
cmp
jne
stos
mov
add
aad
test
pop
cmpl
cltd
adc
nop
adc
aas
xor
loopne
push
mov
xlat
fbld
mov
push
pop
xchg
mov
xlat
leave
xor
sbb
std
add
sbb
popf
sbbl
mov
mov
fildl
xchg
in
cmpsb
out
out
mov
lret
fcoms
dec
imul
inc
sbb
aaa
scas
pop
and
fdivs
add
push
imul
jge
daa
mov
movsl
leave
lock
add
sar
inc
cmp
cld
shrl
add
hlt
pop
xchg
mov
fcmove
dec
fmull
js
stos
mov
xor
push
test
jge
xor
in
xchg
rep
roll
add
insb
dec
cltd
sarb
xor
push
add
dec
in
push
pop
stos
push
xchg
pop
cmc
or
and
rcrb
mov
jge
jp
or
and
or
adc
cs
out
les
mov
mov
stos
and
push
sub
sbb
loopne
sarl
mov
cmc
add
in
daa
mov
add
xchg
jne
testb
push
jle
and
icebp
mov
add
mov
sbb
fwait
mov
es
xor
popf
push
imul
push
xor
imul
sbb
mov
in
sub
out
jl
jae
test
pop
mov
jle
jb
jle
xlat
stc
push
sbb
mov
pop
imul
jnp
insl
insl
les
fimull
add
rolb
inc
shll
jecxz
jge
jnp
insl
sahf
cwtl
icebp
es
adc
dec
movsb
stos
xor
repz
aaa
sub
popa
dec
adc
cltd
xchg
dec
pop
xchg
incb
call
xchg
dec
std
push
mov
cmp
xchg
fisubrl
js
fisubrl
xor
sbb
dec
sbb
cltd
rcrl
call
mov
adc
leave
scas
call
fldcw
icebp
aad
pushf
gs
mov
push
popf
into
jle
outsl
arpl
or
scas
push
sbb
adc
incb
push
je
mov
push
ja
and
sbb
adcb
cmp
mov
pop
push
iret
mov
jg
rcrl
lea
fidivl
loope
push
inc
cli
leave
adc
test
and
pop
mov
cld
fsub
stos
cmpsb
fildll
leave
mov
dec
inc
cmpsl
jne
mov
addr16
cld
jle
icebp
xchg
testb
cmpsb
dec
scas
pushf
or
inc
mov
lret
mov
leave
rclb
xchg
cmp
or
ret
mov
inc
xlat
popa
and
and
inc
adc
push
jl
in
pop
cmp
xchg
lahf
aad
ja
test
aas
jb
and
imull
sub
popa
inc
mov
jb
fidivrl
push
adc
xchg
repnz
inc
mov
pusha
or
jnp
add
jmp
jmp
add
clc
adc
lds
out
int3
xorb
xor
pop
and
lods
in
cmp
xchg
sub
jns
push
add
daa
and
mov
pop
aaa
hlt
rclb
mov
sbb
adc
push
hlt
std
test
pusha
inc
add
inc
or
mov
push
jle
pop
pop
lock
cmp
add
cltd
mov
iret
out
adc
das
pop
dec
or
popf
inc
sbb
add
inc
shl
hlt
add
adc
andl
xor
test
xchg
cmp
push
sbb
or
sub
fnstsw
cltd
pop
dec
in
ljmp
fwait
fs
inc
lods
pop
xlat
dec
aas
aaa
lret
sti
lret
xor
jge
repnz
sarl
pop
jo
cmp
inc
sub
in
xorl
mov
ljmp
and
fs
or
and
push
stos
daa
adc
jp
jne
or
dec
inc
loope
aad
popf
and
mov
or
sti
add
pop
jno
cmp
jno
movsl
pop
xchg
dec
cli
inc
cmp
or
add
or
and
sbb
hlt
lcall
popf
cmpsl
jmp
out
xchg
daa
pusha
dec
in
mov
mov
cmpsl
or
add
inc
add
mov
sbb
mov
cltd
xor
sub
sub
int
aas
mov
lock
fadds
nop
pop
scas
loop
jg
call
sub
inc
fimull
lret
loopne
or
ret
mov
ljmp
mov
jb
inc
iret
bound
in
fildl
fwait
dec
insb
push
xchg
scas
xchg
xor
mov
adc
hlt
push
adcb
sarl
jno
out
add
das
rol
incl
es
in
pop
sub
jbe
mov
insl
fcmovu
in
cmpsl
pop
pop
mov
adc
sti
rol
pusha
push
mov
fwait
int3
inc
mov
lea
xchg
int3
inc
jns
fs
sub
add
icebp
repnz
dec
pop
pop
mov
and
fdivl
jl
es
inc
xlat
js
enter
js
loope
mov
mov
sub
jecxz
sbb
daa
inc
data16
and
xor
push
mov
push
xor
stos
push
hlt
or
jno
repz
mov
and
or
jle
leave
in
mov
pop
push
fcmovne
cmp
mov
mov
ja
mov
roll
cmp
insl
inc
mov
fmull
scas
lods
push
clc
sbb
dec
pop
xor
adc
lret
mov
mov
out
push
push
dec
sbbb
sub
push
push
gs
or
test
adc
rolb
aaa
mov
pushl
add
outsb
imul
test
fnstsw
out
jne
inc
pushf
push
loope
scas
lds
dec
xchg
mov
sarb
aam
adc
dec
pop
js
test
jns
adc
aad
mov
jmp
pop
call
and
dec
into
mov
pop
out
jmp
aam
xchg
out
les
dec
cwtl
or
sub
sahf
pop
push
hlt
xchg
in
outsl
sar
dec
sbb
ljmp
or
shll
dec
shlb
and
mov
lret
aaa
sub
add
clc
inc
mov
rcrb
sahf
xchg
push
jnp
int
jo
aad
cmp
sub
leave
mov
fstps
jmp
outsb
shr
push
fsubrs
pop
or
pop
inc
mov
inc
xor
mov
insl
fildl
aam
adc
inc
jno
xor
idivb
in
push
mov
scas
sbb
jle
cmp
adc
mov
in
jb
popa
jne
xchg
ss
jmp
sub
pop
jb
inc
loopne
fdivrl
movsl
xchg
loope
rcr
aam
and
imulb
sbbl
mulb
xor
repnz
mulb
in
fs
sub
xchg
and
test
mov
imul
mov
cld
jge
inc
fildll
cli
adc
dec
mov
cmpsb
sub
imul
jbe
xor
xor
scas
dec
and
sahf
or
bswap
ret
pop
into
fcomip
lcall
lcall
mov
sub
gs
and
rorl
cmpsl
nop
in
stos
cs
inc
cld
pushf
xchg
or
sbb
cltd
enter
js
or
lret
sub
aam
mov
add
imul
mov
cmp
fsub
push
push
call
es
enter
addr16
cmpsl
push
lahf
out
orl
xchg
fwait
outsb
and
jnp
cld
xor
jb
push
mov
jnp
mov
sbb
xchg
jle
subps
and
rorb
outsb
rclb
dec
mov
jg
jl
mov
or
fs
cmp
dec
pop
loopne
insl
loopne,pt
adc
ficoms
adc
mov
and
gs
stos
or
adc
xchg
sub
sub
sbb
stos
jo
or
or
pop
lcall
mov
push
inc
pushf
xchg
movsl
xchg
lret
lods
call
adc
pop
fdiv
pop
dec
icebp
cli
jno
jmp
jo
adc
sbb
popa
mov
lods
mov
pop
aaa
pop
lahf
xchg
dec
cmpsb
clc
lods
push
dec
mov
mov
in
or
mov
pop
cmp
xchg
gs
imul
push
jp
int3
mov
lea
in
fwait
fs
movsb
mov
adc
mov
xorb
xchg
insl
xor
cmp
inc
fs
xorb
fsubrp
fadds
xchg
jp
cltd
lcall
xchg
sahf
xchg
hlt
and
or
push
jnp
pop
leave
jno
sbb
jmp
nop
ja
mov
ljmp
jb
lahf
fisttpll
loopne
adc
cwtl
jp
inc
insl
pop
inc
lods
jl
pushf
ljmp
pinsrw
scas
mov
mov
shrl
inc
mov
mov
call
xchg
outsb
jecxz
decb
jle
mov
push
xchg
add
xchg
mov
push
push
sub
pop
xor
insl
jg
mov
popf
rcr
jmp
add
pop
dec
inc
cmc
outsb
pop
pop
icebp
add
cmpsl
mov
sub
test
mov
add
inc
xchg
repz
jmp
add
lods
mov
or
cmpsb
sub
mov
movsl
xchg
out
adc
pop
ja
mov
or
iret
loope
int
out
dec
mov
and
jns
lcall
mov
mov
add
mov
fmuls
out
data16
push
rclb
cmp
mov
adc
pop
in
cmpsl
clc
fidivl
lea
cmpsl
mov
push
xor
mov
or
aas
pop
and
pop
sub
popa
inc
shrl
xchg
jmp
scas
negl
lret
mov
push
xchg
xchg
hlt
dec
pop
or
push
test
push
std
enter
loop
mul
sbb
dec
push
vmwrite
push
ret
clc
stos
add
loop
pop
repz
test
mov
or
xlat
cmc
mov
jp
xchg
push
mov
daa
mov
imul
mov
stc
ret
inc
jp
jl
dec
inc
stos
inc
rcll
mov
cmp
mov
das
int3
cltd
and
clc
mov
bound
mov
or
std
sahf
in
push
push
dec
rcll
fcmove
pop
fstps
test
jne
es
adc
pusha
aaa
jnp
push
pop
push
and
inc
sti
ret
clc
in
fcoml
xor
mov
arpl
mov
out
aad
xor
cmpsl
fmul
inc
sbb
inc
rorl
xchg
inc
and
clc
loope
lcall
cmp
jb
jge
or
mov
loope
fdivr
test
push
dec
adc
add
push
inc
test
test
pop
jne
in
mov
notl
sbb
les
loope
sbb
cwtl
int3
mov
test
in
jge
mov
sbb
dec
jae
cwtl
cmpsb
out
aaa
ds
pop
inc
jae
push
lds
sub
addr16
cmp
push
push
in
out
idivl
repnz
sub
xor
xor
or
xor
int
scas
in
adc
and
imul
pop
mov
jnp
test
shll
mov
aas
cs
sti
lock
push
iret
xchg
xor
dec
hlt
sbb
dec
aam
jns
pop
ds
cmpsb
or
cmpl
shll
mov
mov
push
mov
testl
dec
lahf
loop
in
mov
mov
test
pop
jge
fs
jge
ss
rcrb
dec
push
addr16
cmpsl
rcrl
das
adc
daa
push
bound
and
mov
jmp
lds
out
sub
xchg
fmulp
jb
out
lahf
dec
cmpsl
add
pop
pop
and
push
lds
jnp
in
cltd
pop
sti
mov
push
and
sbb
outsb
mov
dec
mov
insb
daa
fdivs
mov
scas
sub
xchg
js
scas
xchg
mov
das
mov
dec
jg
outsl
negb
es
filds
push
jmp
jbe
xchg
xchg
aas
cmpsb
das
mov
dec
jg
outsl
negb
es
filds
push
jmp
jbe
xchg
xchg
aas
cmpsb
das
mov
dec
jg
outsl
negb
es
filds
push
jmp
jbe
xchg
xchg
aas
cmpsb
das
mov
dec
jg
outsl
negb
es
inc
test
inc
test
int3
int3
int3
int3
int3
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
outsb
out
cmp
or
cltd
add
mov
cld
or
outsb
mov
aas
jmp
push
fsin
sub
cmp
or
sbb
dec
mov
aas
mov
xchg
stc
push
mov
fsin
mov
into
sbb
cmpsl
mov
jbe
fidivrl
sub
pop
mov
popa
jl
dec
xor
push
mov
add
pop
fnstenv
adc
test
stos
push
movsl
mov
or
sbb
mov
mov
call
notb
out
cmp
adc
inc
adc
and
cmp
add
adc
leave
out
stc
popf
or
cmp
out
sub
sbb
mov
jle
mov
pop
mov
jge
push
and
add
rorl
dec
cmpsb
cmp
inc
mov
cli
sbb
insl
mov
icebp
es
jmp
dec
and
data16
or
subl
cs
pop
leave
minps
into
adc
xchg
mov
jle
outsb
jg
cltd
dec
sarl
lds
add
leave
push
mov
jnp
cmp
sbb
jmp
push
out
fdivr
xor
sub
dec
xchg
jae
jp
mov
push
lret
daa
divb
es
sub
jne
pop
mov
test
mov
jg
jle
pop
out
jp
or
mov
test
dec
cltd
ds
push
fsin
sub
cmp
or
sbb
dec
mov
test
dec
cltd
ds
push
fsin
sub
out
push
stos
pushf
xor
jp
popa
and
lock
add
int3
call
or
dec
sbb
cs
cmp
or
imul
out
pop
cs
scas
pop
ljmp
sbb
outsl
cmp
adc
popf
xor
icebp
mov
push
mov
mov
int3
jnp
js
int
jae
cmpsb
fwait
lods
clc
fistpl
push
jge
xor
mov
movb
data16
cmpsl
pop
inc
je
dec
mov
mov
arpl
testb
das
lahf
ss
add
or
xor
in
mov
sar
test
mov
or
jg
push
lods
dec
lret
repz
push
and
push
cmp
sbb
mov
and
and
dec
scas
aad
pop
loop
fimull
inc
test
scas
insl
sub
mov
fisttpll
push
cmp
fnstenv
cmpsl
mov
and
xchg
andl
cmp
mov
and
inc
imul
popa
mov
lahf
xchg
popa
out
mov
fistpl
fistpll
cmp
rorl
cld
fmuls
xlat
sbb
ljmp
scas
xchg
lretw
enter
inc
jne
ss
mov
push
ljmp
or
repnz
or
lret
movsl
cmc
xchg
in
push
add
cltd
push
sub
sbb
push
repnz
mov
jecxz
imul
mov
lods
inc
aad
je
enter
stc
pop
or
push
sub
in
sub
sbb
lahf
mov
adc
mov
jg
inc
inc
stos
dec
shl
dec
jg
mov
lret
jmp
lahf
out
sub
sbb
ss
clc
idivl
jecxz
push
jns
adc
and
and
divl
pop
leave
les
push
dec
sti
jge
loopew
test
lds
sbb
pop
cmc
xchg
test
pop
fld
fwait
cmp
sbb
adc
leave
pusha
inc
mov
pusha
hlt
sti
sti
ret
xor
out
bound
jnp
or
loopne
bound
loope
push
hlt
xor
xchg
mov
scas
pop
lods
push
dec
lret
and
sbb
daa
adc
outsb
sub
lret
push
subb
mov
fadds
xchg
lea
scas
mov
popa
or
pop
sub
jg
cmp
cli
inc
movl
jp
shrl
fwait
pop
inc
add
mov
ret
mov
movsl
dec
sub
movsl
ds
insl
mov
pop
or
and
dec
mov
xor
stos
cltd
inc
imulb
inc
adc
mov
in
sbb
in
in
jnp
ret
fisubrl
jnp
test
in
pop
ret
pop
jle
sarb
inc
mov
cli
xlat
dec
inc
push
or
pop
dec
lea
pop
inc
lret
pop
pop
xchg
pop
jmp
and
push
andb
nop
out
cmp
fmul
call
add
cmpsb
xchg
add
mov
fidivl
fwait
add
mov
dec
inc
fnstsw
adc
imul
test
mov
imul
int
in
clc
fistpll
je
or
sbb
cli
int3
lds
sbb
shr
sub
mov
aas
lea
pop
xor
mov
ss
pop
mov
mov
cmpl
mov
xchg
movsb
jo
inc
lret
js
icebp
sbb
cmp
mov
cltd
pop
dec
adc
mov
cli
cwtl
pop
pop
add
mov
sarb
jnp
mov
and
xchg
jle,pt
sbb
out
jno
jns
mov
inc
push
push
or
cmp
push
xchg
leave
lret
gs
add
popa
ficoml
sahf
push
dec
jo
sbbb
sub
sbb
mov
pop
nop
sbb
cmp
sub
hlt
lds
lods
jge
push
jge
fs
mov
mov
jns
or
sbb
and
sub
inc
mov
fld
dec
mov
shr
fwait
or
add
negb
mov
sbb
pop
loopne
mov
arpl
and
mov
test
and
mov
sub
rclb
xor
call
fwait
dec
imul
dec
mov
mov
inc
push
lods
lcall
and
inc
nop/reserved
push
gs
mov
in
adc
into
sbb
mov
mov
and
push
sti
shll
stos
fadd
lahf
ret
std
mov
push
pop
or
ljmp
pop
icebp
les
push
xchg
mov
sub
mov
or
sbb
loope
dec
pop
jne
xchg
cli
dec
adc
push
scas
dec
and
dec
iret
fidivrs
inc
mov
add
rcll
out
xchg
stos
loop
inc
push
mov
mov
popa
jne
cli
push
outsb
aaa
sbb
imul
inc
sbb
pop
icebp
fxsave
xchg
xor
pushf
mov
repz
notb
sub
adc
jecxz
ja
inc
data16
or
fiaddl
iret
cwtl
or
jns
xor
mov
into
dec
mov
jle
in
scas
mov
loope
ja
mov
cs
pushf
enter
mov
int3
fistpl
jg
jb
xchg
testb
jge
arpl
stos
lods
je
mov
mov
sub
and
xor
jae
arpl
gs
lods
negl
stos
aad
aaa
sub
mov
xor
inc
dec
dec
xchg
adc
imul
iret
mov
dec
sbb
push
jmp
shlb
cwtl
cwtl
push
or
pop
clc
btc
fbld
xor
cwtl
inc
or
and
jae
loop
or
ds
popa
sbbl
mov
jns
daa
inc
rcrl
adc
jnp
jmp
add
insl
hlt
mov
push
xor
fistpll
push
sbb
jbe
faddl
mov
test
and
mov
adc
mov
mov
sahf
mov
fisubl
aam
adc
rcr
mov
jle
loopne
lahf
mov
mov
pop
adc
mov
mov
fldcw
insb
rcrl
stos
pop
dec
jl
data16
sbb
push
lret
lcall
xor
jmp
sbb
enter
jno
mov
mov
cs
push
cltd
test
xlat
xor
xor
add
pop
mov
push
imul
js
xchg
add
xchg
stos
pop
fwait
jmp
jno
and
or
in
or
fistpl
fstps
inc
lret
stos
pop
imul
dec
jnp
jge
add
xchg
dec
mov
inc
cmp
movsl
scas
ja
push
dec
dec
das
popl
les
xchg
bound
cs
incl
inc
xchg
idiv
and
fsubrl
pshufw
mov
push
test
mov
inc
jp
sub
jne
mov
push
xor
cltd
add
or
inc
inc
pcmpeqb
xor
or
test
mov
sub
movsb
aam
nop
or
imul
jo
andb
mov
jb
stos
imul
outsb
imul
add
dec
imul
fisubrl
cmpsl
movsb
movsb
xor
or
mov
ljmp
subl
in
xor
jecxz
jnp
sti
jmp
mov
cmp
and
jbe
fstl
jmp
sti
mov
scas
negl
jne
push
pop
push
mov
js
outsl
xchg
jne
xchg
pusha
fisubs
cli
inc
aas
push
and
outsl
jmp
cli
dec
mov
in
and
sar
loop
adc
push
add
cmp
add
rcll
aaa
setno
stos
testb
aam
dec
lods
mov
rorb
cmp
insb
mov
add
addl
push
aaa
into
sub
rcrb
gs
inc
sbb
and
imul
jns
in
ret
ljmp
test
scas
or
and
cld
test
arpl
sbb
adc
mov
cmpsl
xchg
dec
push
mov
in
push
adc
inc
or
pop
leave
roll
jmp
inc
mov
cmp
inc
xchg
xor
or
mov
jge
lds
inc
cmp
cwtl
enter
fiadds
and
mulb
cmp
dec
sbb
das
lods
xor
test
cmc
popa
mov
add
repnz
mov
lods
mov
xchg
lods
xchg
rclb
ret
and
out
mov
adc
fs
out
stos
xor
call
mov
loop
xchg
add
adc
pop
push
xchg
jl
jge
add
in
add
lcall
test
test
leave
xlat
xchg
sahf
test
mov
ret
mov
cmp
sti
bound
leave
out
lods
rcll
jle
xor
popf
sbb
push
cltd
dec
aas
push
or
mov
jb
loop
cmpb
nop
mov
pop
sub
jnp
das
inc
xor
outsb
dec
repnz
leave
sub
cmpsl
push
push
xchg
push
call
test
or
in
inc
cli
sbb
out
xlat
pop
lods
cmp
stc
inc
arpl
cs
cmp
adc
out
mov
jle
mov
and
stos
ficoml
sbb
loope
pop
adc
rcrb
cmp
xor
lds
push
add
jmp
push
jne
or
xchg
xor
scas
fsubrs
jmp
inc
iret
lods
pop
mov
fistl
scas
mov
loopne
mov
jo
xor
mov
jns
outsl
xlat
pop
data16
push
int3
out
dec
repnz
outsb
clc
out
mov
lock
sub
mulb
push
stc
lods
or
push
adc
cmp
pop
movsb
mov
sbb
cmpsl
outsb
rorb
aad
call
into
daa
mov
mov
divb
xchg
loop
out
pop
mov
popa
sti
add
fstpt
flds
mov
subb
repnz
mov
cld
mov
push
jl
push
lret
pop
pop
push
jmp
cmpsb
xlat
mov
dec
push
sbb
loop
push
mov
xor
je
fwait
call
mov
mov
and
jbe
fsubrl
fimuls
jle
sti
xor
das
mov
adc
add
lods
fistpl
xor
aam
inc
into
adc
call
data16
pushf
mov
add
scas
je
pop
in
std
notb
fnstenv
pop
rcr
scas
inc
mov
adc
stos
mov
adc
cwtl
mov
mov
std
mov
jl
lret
pop
xchg
clc
cs
lcall
das
leave
in
dec
push
push
sub
xor
popf
loope
mov
outsb
push
into
cmp
adcb
sub
call
xchg
xchg
pop
repnz
jno
mov
sub
inc
aad
xchg
ss
add
jne
mov
out
pop
ja
mov
or
loop
xor
xchg
dec
pop
shl
jns
fdivrs
mov
xchg
sbb
pop
inc
push
adc
lods
imul
push
mov
sub
pop
ss
sti
aas
dec
jno
jns
adc
and
or
test
std
dec
gs
push
gs
cmp
and
lock
pop
fdivs
addl
jo
jnp
cmp
ret
loopne
dec
hlt
sub
adc
js
mov
int
cmpsb
nop
mov
sarb
or
xchg
mov
out
ret
push
gs
and
scas
movsb
jns
pop
mov
add
sub
cmp
inc
fdivrl
arpl
shl
imul
mov
mov
rol
loope
xor
ja
sbb
outsl
loopne
mov
xor
mov
push
inc
pop
outsl
gs
lea
shrb
inc
imul
or
and
clc
out
std
bound
jge
ljmp
outsl
out
xor
push
dec
adc
cmpsb
pop
sahf
cmc
fbstp
cli
push
add
inc
lods
shr
je
xor
xchg
loop
pusha
pushf
jb
cmp
dec
mov
push
pushf
movl
mov
outsl
inc
mov
adc
inc
pop
cmpsl
fsubs
sub
adc
fs
or
and
adc
add
mov
push
sub
daa
jg
xor
mov
xor
xchg
inc
lcall
jmp
movsb
jne
and
mov
inc
in
push
jmp
out
pop
mov
movsw
adc
pusha
add
ja
insb
repnz
cld
pop
mov
enter
pop
rcl
push
fisttps
sarl
inc
js
lods
scas
call
fimuls
xor
daa
cmp
fidivs
loopne
filds
xchg
aam
loop
daa
jl
mov
dec
mov
push
les
fwait
push
fisttps
fcompl
cmp
adc
mov
cwtl
cmp
inc
mov
andb
clc
dec
jne
or
pop
sub
ficomps
sub
mov
sub
loop
xchg
sub
mov
xchg
addr16
lcall
stos
fdivrl
dec
mov
rcll
or
data16
jmp
push
dec
xor
cmpsb
sub
pop
xchg
mov
cli
mov
and
out
insb
outsb
les
and
je
lods
addr16
push
loopne
lret
xlat
dec
adc
bound
fwait
jno
push
jo
cmp
sbb
mov
or
push
pop
adc
hlt
sti
dec
mov
dec
sbb
in
inc
or
or
pop
xchg
cld
mov
cmp
into
add
and
mov
mov
cmp
mov
dec
fwait
push
jbe
cmp
pop
shll
push
pop
into
adc
call
inc
mov
sbb
dec
push
push
jo
test
lret
sbb
pop
adc
adc
lds
mov
or
sub
push
shlb
in
fcomps
xor
xchg
pop
xor
xor
dec
test
jp
lahf
mov
push
sbb
jmp
dec
ds
dec
jle
sbb
das
mov
mov
movsb
mov
shr
or
mov
adc
loopne
popf
scas
cmpsb
imull
sbb
loopne
aaa
inc
add
mov
pop
jle
int
add
mov
and
loop
sbb
xor
aas
movsl
xchg
notb
mov
and
or
push
cli
dec
cmp
jp
loopne
std
push
lahf
cmp
jbe
fsubrl
test
aam
mov
sbb
mov
les
sti
mov
sbb
lds
lsl
bnd
test
dec
out
jmp
pop
outsl
mov
scas
mov
cwtl
je
or
insb
lcall
repz
aam
icebp
or
cmp
test
loopne
sti
inc
inc
push
mov
bound
cmp
ss
mov
js
clc
mov
stos
lret
sbb
cmp
mov
fstps
push
pushf
add
sbb
ret
xchg
out
arpl
xchg
mull
and
lahf
call
ret
test
add
mov
mov
rcrl
imul
rcrb
leave
xchg
inc
mov
setbe
push
mov
pushf
xchg
shrb
cmp
cmp
add
and
lds
add
add
testb
xchg
push
int3
push
movsl
sub
aaa
and
fwait
leave
or
cmp
dec
mov
sbb
sub
and
sbb
cmp
fwait
call
xor
add
add
jb
dec
fwait
xor
mov
push
push
mov
aas
adc
hlt
jp
push
mov
imul
cwtl
lret
adc
out
cs
incl
cmp
aaa
xor
popf
fs
jo
int3
push
adc
xchg
dec
call
add
dec
sub
cmp
loop
inc
jns
mov
movsl
mov
xchg
jle
popa
sahf
in
sub
loopne
jns
jo
mov
mov
mov
sub
adc
and
inc
push
sbb
cmp
repnz
daa
mov
jp
aas
fldcw
lock
adc
cmp
mov
imul
cmp
int
pop
dec
scas
in
xor
aas
insl
pop
add
jne
cmp
das
jo
or
pushf
addr16
popf
jae
jo
inc
pushf
in
ja
sahf
pop
repnz
stos
in
inc
jg
inc
inc
sahf
cltd
leave
sub
push
aaa
mov
mov
push
dec
fistpll
push
in
add
jne
stc
pop
inc
sub
push
mov
ljmp
cmc
leave
ja
add
lret
xchg
xor
or
in
xor
pop
clc
andb
jge
jns
clc
xor
jg
and
clc
data16
xor
pop
aaa
stc
subb
push
push
lock
dec
xor
sbb
andb
jne
and
out
repz
call
shrb
rcrb
mov
insb
or
mov
repz
out
mov
out
mov
adc
mov
mov
add
pop
and
decl
aaa
cmp
cmp
popa
outsl
pop
ret
into
add
adc
cmp
mov
xchg
push
push
xchg
hlt
mov
into
imul
jbe
mov
nop
mov
movsl
sub
stos
and
cmpsl
mov
xor
pop
xchg
push
in
push
pop
cmpsb
xchg
xchg
or
jle
sbb
lcall
pop
sbb
ss
inc
xor
add
je
popa
mov
and
or
pop
mov
mov
inc
jl
jb
mov
sbb
mov
mov
jg
adc
cld
mov
fildll
adc
cld
inc
inc
dec
cwtl
daa
push
jmp
and
mov
inc
jle
pop
push
jno
sub
cmp
out
in
lret
xor
nop
or
daa
movsb
pop
inc
inc
loopne
cld
outsb
mov
mov
dec
mov
lods
loope
jne
jns
sub
jge
jo
loope
mull
scas
movsb
jmp
aas
or
ror
and
jbe
in
ljmp
lret
repz
pop
inc
xor
or
adc
das
push
lds
dec
test
in
and
les
leave
fs
in
in
jnp
xchg
out
sbb
jae
jmp
lcall
pop
cmp
cmp
je
repnz
test
and
jmp
sub
sahf
jle
push
arpl
stos
xor
dec
jb
popa
or
sahf
pop
sbb
mov
xchg
orb
push
ljmp
mov
adc
stos
adc
cltd
je
test
xchg
fstpl
sti
pop
aaa
jo
cmp
andl
test
mov
mov
or
fwait
sbb
lods
test
outsl
clc
mov
inc
push
xor
mov
dec
test
jp
mov
inc
stos
xor
lret
dec
pop
adc
shll
jno
in
jp
aam
and
pop
mov
fs
sub
mov
stos
repnz
and
and
pop
pcmpeqb
in
push
hlt
add
lret
sub
pop
xchg
sub
or
jbe
dec
and
scas
cld
lds
lret
lds
push
iret
outsl
rcr
lret
aas
dec
push
jbe
cmp
outsb
mov
movsb
jmp
lea
rolb
shlb
fisttps
ret
mov
pop
mov
adc
outsb
sbb
sbb
sbb
lret
aaa
mov
pushf
leave
add
fwait
mov
inc
shll
lds
sbb
or
xor
loope
test
arpl
inc
pushf
hlt
fs
pop
cmp
or
vcmppd
pop
das
add
xor
lods
mov
xor
fisubs
jnp
inc
divl
lds
enter
dec
out
xchg
enter
push
popf
es
push
test
dec
movsl
jl
cmp
and
fadd
sarb
and
inc
outsb
cld
or
jecxz
hlt
cwtl
outsl
push
push
dec
xchg
addb
hlt
in
inc
scas
idivb
dec
cs
mov
sub
call
mov
lea
ror
mov
es
and
mov
pop
mov
cmp
dec
xor
popa
test
sub
cli
popf
daa
out
cld
pop
fwait
xchg
push
sbb
cmp
outsb
mov
mov
add
mov
jmp
mov
aas
outsb
pop
jo
shll
out
mov
int3
lock
cmp
int3
in
jl
dec
inc
xor
push
mov
xchg
dec
pop
mov
jno
cmp
call
jo
sbb
test
pop
mov
push
mov
imul
orl
push
and
push
xchg
lcall
cmp
mov
sbb
out
pop
imul
mov
jbe
sbb
movsl
pop
cmp
add
mov
mov
pop
insb
jecxz
ret
push
dec
sub
jno
sub
inc
push
jle
mov
into
pop
push
jne
inc
sub
xor
push
push
js
idivl
mov
mov
mov
clc
and
fildll
mov
sub
pop
int
dec
sbb
sub
shlb
mov
mov
in
xchg
cmp
pop
stc
out
shll
xchg
xchg
fmuls
pusha
aaa
movsb
leave
inc
jbe
mov
loopne
dec
rolb
sahf
mov
ss
imul
jo
push
daa
or
ffreep
jne
pop
mov
adc
mov
sti
jle
mov
mov
and
aaa
mov
and
mov
out
push
neg
cli
jecxz
mov
jnp
movsb
scas
mov
jle
sbb
fldcw
mov
dec
and
rolb
test
push
in
and
mov
cmp
cmp
jmp
movsl
inc
and
not
lret
cmp
ss
push
out
in
ja
xlat
or
jge
dec
hlt
es
mov
pop
test
sub
and
fidivrs
or
pusha
inc
gs
movsl
int
dec
sub
fmuls
scas
lret
and
pop
mov
enter
xor
iret
in
rcl
jp
jmp
mov
sub
addr16
ljmp
sub
into
sbb
dec
mov
test
dec
cltd
ds
push
fsin
sub
cmp
or
sbb
dec
mov
test
dec
cltd
ds
push
fsin
sub
jno
jno
sbb
dec
mov
jno
mov
ds
psubusw
sub
cmp
or
sbb
leave
mov
push
outsb
adc
mov
dec
popa
cmpsb
push
loope
icebp
es
int3
int3
int3
int3
sbb
or
cmp
sub
push
cmp
pop
cwtl
test
stos
cltd
fucomi
lret
mov
sbb
or
cmp
sub
pop
imul
fwait
test
stos
cltd
fucomi
lret
leave
jmp
sbb
or
cmp
sub
pop
imul
fwait
xchg
test
lret
stc
into
cltd
fstpt
sbb
sub
cmp
cmc
push
scas
sbb
nop
dec
loopne
push
mov
in
mov
lods
into
push
out
inc
and
inc
lods
adc
and
jns
sbb
out
xchg
dec
xchg
adc
flds
push
cwtl
mov
lret
jb
leave
mov
out
push
bound
ds
repnz
xor
and
mov
pop
fucompp
inc
lret
jmp
sbb
sub
clc
or
and
push
lods
pop
ja
mov
pusha
clc
dec
mov
lds
imul
lcall
stos
mov
dec
mov
daa
lods
repz
aam
jo
sarb
jnp
fcoml
test
rcrl
fsubr
sub
cmp
or
sbb
dec
jns
dec
imul
mov
fucomi
lret
stc
sti
leave
jmp
jle
push
pop
ds
and
adc
out
sub
enter
pop
test
mov
pop
or
ds
push
ds
jmp
fildll
xchg
xchg
mov
or
jge
insl
push
add
imul
mov
fucomi
lret
stc
sti
leave
jmp
sbb
or
cmp
sub
pop
imul
fwait
test
stos
cltd
fucomi
lret
stc
sti
leave
jmp
sbb
push
cmpsb
sti
push
enter
mov
rcr
cwtl
mov
mov
lock
xor
scas
xor
or
pop
jne
pop
pushf
mov
jecxz
lcall
rcrb
andb
subb
push
xor
out
sti
movsl
je
cmp
outsl
lahf
fucomip
and
lods
mov
dec
sbb
sub
bnd
fs
lock
inc
mov
jno
arpl
adc
or
pusha
or
mov
mov
cli
mov
dec
cltd
push
lea
aas
ds
mov
cmpsl
out
jmp
jae
xlat
lahf
and
mov
xchg
xchg
lea
jl
adc
movsb
or
and
xchg
jnp
in
add
mov
pop
lret
jmp
fsubrl
xchg
pop
sbb
and
repz
enter
add
and
push
ffree
adc
faddl
in
ret
xchg
loop
cmpsb
jbe
lcall
jge
mov
pop
cmp
fcomi
aaa
fstps
jno
ljmp
imul
int3
scas
leave
mov
and
bound
xchg
iret
jo
mov
xor
sub
cmp
nop
scas
data16
xor
or
das
in
fsubl
add
hlt
mov
mov
cmp
jb
sbb
xchg
push
xor
testl
fwait
shll
adc
mov
push
jle
fdivrp
or
add
mov
mov
mov
adc
push
cmc
inc
sbb
inc
insb
out
sbb
push
es
adc
jbe
movsb
arpl
mov
movsl
jae
mov
inc
xor
jle
cmp
jg
sti
inc
cwtl
add
js
xchg
mov
adc
popf
nop
xor
inc
imul
outsl
mov
stos
das
lcall
lret
cmpsl
cmp
sbb
jecxz
dec
in
into
cmpsb
jne
insb
adc
imul
lock
adc
das
jg
dec
fs
repnz
sub
lock
in
inc
add
inc
mov
stc
sbb
cmp
mov
push
sbb
idiv
xor
sbb
pop
cmp
xor
dec
negl
ds
pop
and
dec
adc
add
cli
xchg
or
and
pop
int
adc
push
xor
push
mov
pusha
in
mov
nop
push
lcall
cld
xchg
inc
cmpb
mov
loopne
push
dec
clc
loopne
sahf
mov
imul
dec
xor
push
cmp
daa
scas
jg
and
aad
push
test
pop
test
test
dec
jp
sbb
mov
enter
and
push
leave
mov
ja
or
lods
jecxz
jecxz
ror
lods
leave
mov
inc
das
or
test
lods
mov
push
and
pop
shl
jno
sbb
dec
loop
stc
xor
movsb
sbb
cmp
pop
mov
cs
mov
mov
fstp
mov
push
mov
bnd
mov
jb
push
dec
jle
std
ret
das
jbe
leave
insb
jmp
jle
cltd
shlb
fwait
xor
xchg
rcrl
in
into
mov
add
xchg
push
xchg
movsl
jo
ss
daa
es
out
xor
lock
subb
fsubl
imul
xor
push
add
or
fimuls
or
add
push
or
and
dec
sti
pop
inc
pop
inc
inc
mov
jl
sarb
jg
mov
or
je
dec
lea
out
cmpsb
sbb
xchg
inc
jle
ss
stos
movsb
or
ja
aas
ret
in
sbb
das
and
inc
or
cmp
cltd
push
lcall
cli
les
mov
lea
sbb
scas
outsl
dec
movsb
and
fistpl
adc
xchg
pop
add
xchg
inc
xor
andb
mov
xchg
cmp
jg
and
loopne
cmpsb
mov
arpl
add
out
push
je
inc
clc
xchg
xchg
repnz
mov
jb
mov
mov
inc
xchg
fdivrl
mov
pop
insb
xchg
sub
ret
adc
add
pop
idivl
cmp
out
lods
mov
cmp
popa
mov
orb
inc
call
insb
popf
dec
jmp
dec
mov
adc
xchg
xor
mov
fnstenv
xor
mov
xchg
cmp
aam
fldt
mov
push
inc
in
lods
mov
sbb
xlat
sub
sub
push
sbb
pop
adc
pop
push
push
sub
mov
imul
or
aam
adc
std
in
aaa
pop
push
and
int3
rorb
int
icebp
cmp
aaa
cmp
lds
hlt
mov
jo
sub
js
sub
cmp
cs
push
loop
ret
scas
cmp
andl
iret
cmc
push
adc
push
shll
xor
aad
xchg
dec
shrb
push
shrl
jle
jge
mov
ljmp
dec
jne
add
int3
inc
lahf
and
jns
scas
outsl
mov
addl
xchg
int
xor
test
stos
andb
mov
sub
inc
mov
dec
scas
adc
sub
cmpsl
push
jns
mov
push
repnz
inc
add
out
and
push
sarb
movsl
jno
leave
jp
mov
arpl
jbe
inc
xchg
insb
pop
cmp
fnstsw
xchg
and
mov
or
bound
fstpt
fsubrs
mov
inc
cmp
test
stos
jmp
jp
sahf
clc
dec
lds
pop
pop
nop
push
add
fcoml
add
pop
dec
pop
cmpb
dec
insb
rclb
out
push
jne
sbb
mov
test
movsl
or
adc
xor
das
or
push
pop
daa
stc
xor
roll
push
push
out
mov
or
repnz
lods
imul
mov
mov
orl
les
inc
add
pop
pop
subb
dec
or
pop
mov
in
adc
mov
sahf
ret
xchg
dec
sub
leave
mov
aad
mov
adcb
call
jnp
cmpb
cwtl
pop
rcrl
jb
xchg
arpl
popa
fiaddl
pop
je
lds
push
cmpsb
jle
repz
lds
lods
cmc
jp
mov
push
adc
mov
gs
loope
mov
loopne
xor
in
mov
in
and
mov
bnd
cld
icebp
shlb
push
arpl
jmp
imul
sbb
into
or
xchg
add
add
sub
pop
mov
cwtl
loop
repnz
sbb
dec
pop
mov
xchg
push
call
mov
mov
jo
sbb
inc
xor
imull
dec
scas
push
dec
push
jmp
je
dec
and
cltd
fiadds
cld
scas
jg
jno
or
dec
arpl
jnp
push
dec
movsl
cmp
jnp
sub
and
aas
and
out
add
sbb
sbb
adcl
xchg
push
cmpsl
arpl
sub
fimull
push
pushf
push
sahf
push
jmp
cld
sub
imulb
dec
shlb
inc
mov
pop
int3
jg
mov
insl
pop
xchg
les
stos
loopne
or
add
cmpsb
movsb
sbb
add
out
mov
push
pushf
repz
daa
loop
jno
push
inc
jo
pusha
iret
inc
lods
hlt
pop
sarl
push
or
dec
push
or
xchg
jp
aaa
imul
dec
leave
cmp
dec
adc
insb
out
sarb
ss
insl
cmp
gs
push
das
adc
pop
push
pop
aas
movsb
js
mov
sbb
imul
mov
arpl
adc
xor
cmp
xchg
pop
ss
jo
clc
imul
scas
sahf
jae
push
shrb
in
mov
pop
adc
mov
cmp
call
popf
rol
mov
pusha
adc
into
xchg
adc
shll
ds
into
push
in
mov
sub
pop
aad
mov
icebp
cltd
ljmp
insb
sbb
mov
sbb
pop
movsl
outsb
icebp
jp
pop
idivl
sub
cli
dec
call
push
into
nop
loopne
xor
adc
daa
dec
sbb
push
push
outsb
or
loopne
ja
push
call
pop
mov
pop
mov
mov
mov
xchg
dec
inc
inc
sbb
mov
mov
stos
cmpsl
lods
andb
dec
ja
stos
movsb
cmpsl
test
jp
lret
fimull
xchg
dec
rolb
or
sub
cmp
xor
sbb
movsl
test
lock
and
icebp
push
mov
sub
mov
mull
xchg
sbb
mov
aam
ficomps
xor
pushw
gs
int3
adc
pop
jb
push
dec
out
in
dec
pop
cltd
pop
and
mov
or
repnz
sarl
and
outsl
les
cltd
popa
push
mov
jg
cmc
xchg
sub
hlt
sbb
xchg
cmp
subb
outsl
push
fsubrl
lds
xchg
aad
or
aam
sbb
fiaddl
addr16
push
cmpsl
jbe
rorl
insl
das
repnz
fimull
insl
or
mov
pop
push
movsb
out
dec
or
xor
dec
in
adc
inc
inc
sbb
je
loop
test
je
push
push
out
sbb
sarb
ds
fmuls
or
push
gs
mov
or
and
incb
cli
sbb
mov
sbb
pop
push
lock
imul
push
in
stos
sbb
outsl
pop
mov
insl
jl
jo
mov
fcompl
mov
cmp
and
jge
adc
dec
mov
cmp
add
inc
ret
add
dec
push
cwtl
das
int
adc
fisttps
dec
add
out
sbb
dec
sub
xor
aas
sub
inc
and
cmp
adc
dec
outsb
inc
outsb
out
mov
jge
mov
or
pop
mov
lods
inc
rcrl
out
cltd
aam
mov
fmulp
cmpsl
leave
into
pop
bound
sbb
lret
sub
call
hlt
lret
pop
mov
dec
mov
mov
mov
pop
xor
inc
push
jg
hlt
or
mov
xor
sbb
int3
rorb
sub
lcall
and
mov
pop
jne
cmp
test
xor
das
pop
add
and
scas
pop
pop
stc
mov
loopne
xchg
mov
mov
sub
lods
xchg
inc
frstor
test
or
dec
lea
je
leave
lds
cli
jp
test
mov
pop
jne
aas
xor
dec
jns
loop
push
fwait
out
pushf
jmp
or
testl
lock
out
xchg
mov
jmp
xor
xchg
inc
iret
rolb
add
xor
lret
mov
call
adc
es
jno
mov
fmuls
aaa
scas
inc
in
scas
pop
or
sub
push
data16
rcll
pop
mov
lret
sub
xchg
mov
pushf
cwtl
or
and
mov
clc
and
pushf
or
shrl
push
xchg
add
fmuls
cs
sub
test
les
xlat
mov
cmp
pop
push
imulb
mov
mov
roll
mov
xor
jg
mov
and
imul
sbb
mov
jecxz
xor
and
xchg
jae
ret
cltd
aam
iret
adc
jb
pop
mov
jb
and
lcall
or
xor
fldcw
dec
out
push
jbe
clc
jb
cmp
shr
pop
out
xchg
rcll
sub
leave
adc
out
outsl
out
fildll
sub
push
xor
test
dec
cld
sahf
add
sub
shl
loop
xchg
fimull
in
jle
mov
dec
hlt
mov
cmpsb
push
int3
cmpsb
fdivrp
enter
add
mov
add
mov
lahf
sbb
mov
mov
jl
cmpsl
push
mov
sub
loop
or
pushl
inc
add
idivb
or
xchg
cmp
pop
dec
dec
sbb
cmp
push
dec
fwait
addl
jl
dec
or
pop
incl
lcall
jmp
nop
add
adc
xchg
push
lret
push
mov
loope
and
push
cmc
mov
mov
cmp
push
inc
xchg
ds
das
imul
idiv
add
aaa
es
jae
xchg
ss
jbe
xor
jmp
mov
psraw
mov
shll
jp
xchg
dec
bound
ficoml
in
jns
dec
lds
mov
adc
xor
jb
outsb
aas
into
loop
pop
mov
jbe
sub
sti
jns
popf
out
imul
aas
add
in
mov
je
jmp
xor
xchg
mov
pop
pop
push
add
and
loope
aad
call
push
mov
mov
sbb
loope
std
mov
mull
stc
mov
mov
dec
in
pop
fdivs
jecxz
je
andl
xchg
sub
std
into
pop
loopne
dec
xchg
sbb
call
fidivrs
cmpsl
cld
mov
sti
pop
call
xchg
ret
and
roll
insl
gs
push
mov
jno
adc
push
test
int3
adc
cmc
mov
aam
mov
xchg
movsb
das
in
fisubs
xor
jecxz
test
sbbb
add
sbb
mov
rcrb
dec
mov
mov
testb
imul
pop
push
xchg
test
jae
mov
mov
inc
jb
inc
dec
popf
mov
data16
stc
ljmp
push
cmpsb
xchg
mov
pop
xor
push
push
sbb
outsl
or
enter
or
jb
jb
enter
jns
in
iret
mov
mov
xchg
sbb
xchg
andb
push
xchg
pop
loop
and
fdivrl
pop
push
lcall
and
daa
int
push
fs
push
scas
push
lods
add
pushf
mov
in
test
out
xor
loope
mov
xor
call
movb
or
movsb
cwtl
rcll
mov
insl
je
push
loop
inc
sub
push
fimuls
adc
push
mov
sbb
call
pusha
inc
gs
sbb
push
adc
jl
push
push
and
cmpl
xchg
cmp
xor
mov
aad
inc
mov
js
shll
insb
cmp
sbb
sbbb
mov
mov
jnp
jl
add
out
rorb
test
rolb
aas
popa
xchg
mov
test
cmp
inc
inc
gs
imul
and
cli
ja
jmp
xor
in
sbb
sbb
rolb
into
aaa
mov
mov
fldcw
fcmovb
fadds
fistpll
xor
adc
stc
out
push
pop
arpl
jp
xchg
jge
push
out
and
aad
and
jmp
test
adc
push
idivl
nop
push
lods
movsl
push
popf
and
movsl
movl
div
mov
sbb
shrl
adc
roll
fnstcw
push
or
pusha
xor
pop
xlat
pop
mov
push
mov
mov
negl
push
push
out
ror
out
or
sarb
jb
sbb
aas
shl
mov
lods
fmull
stos
jbe
das
lret
subb
in
lods
xor
mov
cs
test
outsb
pushf
xchg
add
cs
ljmp
xchg
aaa
jl
jg
xchg
mov
in
mov
icebp
dec
add
stc
das
pushf
mov
es
cmp
ss
daa
fucomi
sub
mov
xchg
jo
push
data16
jnp
sub
clc
mov
add
add
dec
or
push
loopne
clc
cli
dec
xchg
inc
dec
mov
in
iret
mov
fs
rcr
push
fimuls
imulb
mov
or
dec
sar
jg
add
jo
faddl
test
imul
jg
sbb
pop
movsb
movsl
pop
push
imul
add
push
adc
mov
add
mov
imul
jb
lret
cmp
xchg
popa
test
mov
add
inc
push
cld
inc
jae
out
rcrb
pop
adc
in
jl
orl
fbstp
xor
insl
out
jmp
das
cld
sub
and
jno
pushf
cmpsl
or
imul
rcr
add
stos
mov
fidivrl
xchg
clc
stc
inc
test
jno
hlt
outsl
lock
insl
hlt
mov
in
loop
std
and
fnsetpm(287
ja
add
js
cmp
addl
les
jl
andl
sub
xchg
xchg
sbb
push
mov
sbb
xor
sbb
xchg
or
je
shll
cmpsl
jle
jo
test
pop
adc
or
idivl
rorl
and
cmp
mov
rcll
sti
in
mov
mov
je
lods
in
push
enter
int3
movl
xchg
inc
pop
dec
jae
sub
inc
insb
pop
ror
sarl
and
out
enter
nop
scas
pop
popa
cmp
pop
add
jg
nop
filds
cmpsl
inc
rcrb
adc
outsl
mov
call
inc
movsb
sbb
mov
push
pop
xchg
cmp
jg
jae
jp
fisubrl
push
cmp
add
mov
or
fs
call
xchg
inc
mov
out
sub
add
mov
mov
aaa
sbb
pop
orb
and
es
test
shlb
mov
ficomps
xor
xor
xchg
push
sub
stos
xor
mov
xchg
fcmovbe
movlps
jae
cmp
add
shlb
jno
cmp
pop
sbb
mov
mov
jbe
push
or
das
jo
out
jl
and
xor
pop
outsl
shr
sub
xchg
arpl
dec
fsub
fistl
cld
stos
roll
rorl
push
testb
cmp
push
push
mov
cmp
dec
or
clc
inc
ljmp
aas
add
icebp
xor
and
scas
pop
pop
aad
idivl
and
xor
push
push
dec
jl
in
lock
adc
lods
mov
inc
daa
xor
xchg
mov
xchg
inc
lods
cmp
das
loopne
cmpsl
adc
fiaddl
icebp
xor
inc
lds
ret
data16
or
sbb
rcrl
add
pop
sti
fwait
jb
stos
or
mov
lods
arpl
stos
in
imul
repz
bnd
aad
mov
push
dec
cmc
fldl
ss
cs
or
gs
popa
movsl
pop
nop
stos
adcb
add
or
jge
scas
cmpsl
jb
cmp
das
mov
movsl
xchg
test
push
jno
xor
mov
movsl
push
lock
test
push
jecxz
jge
fcomps
xadd
iret
xadd
pop
pushf
daa
cmp
pop
jbe
pop
adc
shll
inc
xchg
pop
inc
subb
clc
xchg
bnd
dec
xchg
in
xor
loop
mov
sbb
adc
inc
mov
adc
mov
fmull
push
add
fwait
xchg
daa
fbstp
enter
in
addl
sub
pop
aaa
test
std
mov
mov
mov
movsb
rorb
movb
lret
lods
inc
pop
mov
cli
cmp
rorb
fs
jp
orb
pop
or
xchg
test
push
xchg
ret
in
inc
test
dec
adc
cmp
sbb
sub
cli
lret
xlat
stc
mov
in
movsl
out
mov
sar
ja
mov
ja
adc
mov
adc
xchg
xchg
mov
xor
dec
in
imul
push
pop
pop
sub
mov
stos
jecxz
and
test
push
sub
icebp
fistl
cli
ja
cmp
stos
sbb
mov
int
hlt
lcall
leave
push
dec
bound
adc
mov
cmp
jae
add
inc
mov
lret
add
popa
sub
repnz
test
and
les
xchg
jecxz
pop
inc
cmp
outsl
or
xchg
inc
inc
jne
lea
ss
dec
ljmp
lea
mov
add
xchg
or
jns
ljmp
inc
fcoms
outsb
xorl
mov
iret
mov
jae
shrl
es
lea
fs
pushf
mov
scas
cs
in
inc
aaa
or
jge
out
les
lcall
loope
lret
idivl
mov
popa
iret
dec
int
push
pop
loope
cli
push
stos
dec
cmp
mov
scas
mov
shlb
ret
arpl
ljmp
leave
movb
daa
sbb
roll
mov
test
mov
and
cmp
jo
inc
repz
repz
jae
mov
scas
scas
mov
cs
and
or
or
xchg
add
nop
lock
xor
cli
mov
cld
xchg
sub
sub
xchg
xchg
fs
xchg
xchg
jbe
fisubrl
out
into
cmp
lahf
fdiv
pop
xchg
add
mov
jp
dec
outsb
cmp
sub
lea
xchg
pop
rcrb
xor
call
xchg
iret
imul
mov
sbb
push
loop
repz
xchg
cmpsl
xor
fidivrl
xlat
xor
push
das
or
jle
pushf
and
cmc
pop
mov
cmpsl
sahf
testl
sarb
sbb
push
sub
pushf
xor
xchg
int
xchg
add
dec
cmp
sub
int
in
sub
data16
shl
orb
enter
mov
push
mov
addr16
nop
rep
ja
cmpl
dec
cmp
and
test
and
mov
fnstenv
mov
mov
repz
or
mov
sbb
shll
dec
push
push
jae
or
pusha
mov
pop
sub
adc
dec
sub
popa
push
xchg
adc
insl
pop
dec
adc
leave
movsb
loop
adc
outsl
int
pop
inc
jnp
push
nop
movsb
xor
rolb
dec
pop
cltd
pop
inc
xor
xor
loop
fsubrs
mov
gs
in
dec
bound
dec
xchg
cmp
sub
pop
imul
fwait
test
stos
cltd
fucomi
lret
stc
sti
leave
jmp
sbb
or
cmp
sub
pop
imul
fwait
test
stos
cltd
fucomi
lret
stc
sti
leave
jmp
sbb
sub
pop
imul
lcall
cltd
fucomi
lret
stc
cli
leave
jmp
sbb
or
cmp
sub
sti
leave
jmp
fs
je
adc
inc
push
add
adc
int3
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
sub
cmp
mov
in
xchg
push
subb
lcall
xor
and
aam
les
hlt
sbb
imul
stos
push
mov
sub
sti
add
xor
and
jb
add
outsb
sbb
dec
mov
cwtl
addr16
fwait
push
jmp
xchg
bound
nop
pop
test
cmpsl
ja
mov
aaa
mov
mov
scas
int3
mov
outsl
arpl
mov
push
and
xchg
cmpl
push
stos
ds
adc
cli
pop
pushf
mov
xor
loopne
push
jge
inc
add
push
mov
lcall
fninit
sub
cmp
popa
lock
dec
subb
je
sub
sarl
movsb
jne
icebp
gs
mov
pop
aam
fstpt
jmp
in
xor
push
pop
inc
ja
adc
xchg
out
mov
fisubrl
les
enter
test
les
cld
pop
dec
adc
mov
jbe
mov
pop
dec
out
cmp
or
jnp
dec
mov
ss
push
mov
pop
jmp
sti
ljmp
dec
stos
bound
or
das
rcrl
pop
fidivs
shl
pop
ljmp
dec
dec
xchg
pop
subb
mov
ds
xor
or
mov
fwait
push
ljmp
push
dec
cmpsl
cmp
cwtl
ja
daa
fdivrs
dec
mov
movsb
stos
push
mov
fs
sti
add
xor
and
aam
les
hlt
sbb
imul
stos
push
mov
fs
sti
add
xor
and
aam
xchg
xchg
mov
xchg
repz
adc
insb
jb
mull
mov
push
mov
push
dec
call
adc
pop
jl
push
dec
or
mov
sub
and
lcall
xor
call
xchg
adc
clc
cmp
or
arpl
mov
dec
ret
dec
lret
imul
push
push
xchg
inc
push
das
cmpsl
adc
pop
add
jg
mov
ja
mov
and
pop
jns
adc
dec
insb
and
dec
pop
push
add
outsb
or
xor
pop
hlt
inc
sub
es
cltd
pop
adc
ret
push
in
push
xchg
push
sar
jge
xchg
in
jl
sub
aam
out
insb
push
movsl
iret
adc
cmc
in
or
adc
mov
pushf
inc
sub
sub
addr16
lods
cmp
pop
icebp
aam
cmp
fsts
aad
je
sbb
mov
addb
inc
cmpsl
mov
add
inc
movsl
lcall
fwait
not
in
sub
jae
cltd
adc
rep
push
push
fidivs
mov
test
rcr
pop
adc
lea
sub
data16
jb
xor
add
cs
clc
ret
sbb
push
mov
add
mov
pop
stos
data16
sub
adc
stc
lods
ret
or
cmp
ss
scas
cmpsl
xchg
das
push
push
jmp
xchg
gs
lret
inc
xchg
daa
aad
push
push
pop
ljmp
push
push
mov
sbb
lret
jns
out
insb
out
shld
stos
loopne
jno
int
adcb
xor
mov
sub
insl
dec
roll
ja
pushf
jne
int
xchg
cmpsb
shrl
decl
dec
outsb
popfw
rcrl
loope
lea
mov
dec
and
cmpsb
fiaddl
inc
pop
pop
lods
sub
cmpsb
ljmp
mov
dec
stc
or
ret
jb
xor
dec
notl
out
sahf
mov
mov
mov
stos
ljmp
icebp
shr
jge
js
inc
and
movsb
out
inc
int
outsb
xchg
pop
call
outsb
mov
adcb
fidivrs
scas
repnz
ret
aad
repz
fiadds
stc
inc
loop
xor
sbb
mov
gs
fsubrs
rcrl
cmpl
mov
pop
sub
rcr
aas
or
bound
mov
xchg
shrl
clc
fdivl
adc
call
stos
inc
call
push
pop
add
jne
cmp
insb
xchg
lahf
imul
inc
dec
lret
incl
fisubs
or
sub
mov
lcall
xchg
cmp
les
cld
ficompl
xorl
fildll
je
xchg
jbe
hlt
cltd
mov
imul
in
pushf
inc
insl
or
push
roll
idiv
adc
xchg
mov
cwtl
pop
inc
and
adc
add
cmpsl
jae
add
ljmp
inc
std
loope
dec
cmpsb
dec
jle
ja
inc
in
scas
xchg
lea
stc
rorl
repz
pop
rolb
mov
lret
pop
mov
js
sbb
push
dec
sbb
cmp
fdiv
and
push
icebp
inc
adc
pop
rcr
stos
out
aaa
add
or
movsl
adc
pop
out
stos
push
sub
push
stc
add
fnsave
cmp
xchg
and
dec
sahf
ret
xor
mov
rolb
mov
push
inc
repnz
mov
sbb
js
cwtl
aas
dec
mov
pop
and
cld
mov
pop
dec
sub
ffreep
pop
ret
stos
dec
jne
jbe
sbb
mov
push
jg
iret
fcmovnu
icebp
daa
and
cmp
cld
cli
clc
sub
mov
test
mov
mov
subb
dec
loope
insl
push
notb
xchg
cmp
test
daa
leave
aam
cmp
ret
cmp
mov
test
shl
push
xor
pusha
cwtl
push
adc
fstp
jno
xchg
pushf
cmp
jecxz
cmp
jmp
add
add
sub
xor
mov
mov
cld
push
mov
mov
scas
rcrb
cmp
call
popf
test
sub
cli
pop
xchg
addr16
mov
in
cmp
dec
cmpsb
js
fstps
aas
or
insb
add
cltd
jb
cltd
adc
ret
and
push
adc
dec
pop
jle
icebp
inc
dec
sub
push
sar
xchg
adc
shl
movq
jne
inc
fcmovnu
test
aad
mov
aaa
fisubs
and
cmp
cmpsb
mov
lcall
mov
push
mov
and
lea
ret
mov
dec
mov
jmp
mov
bnd
icebp
sub
lea
cmp
adc
jns
es
sbb
fistl
aaa
iret
pop
push
push
sub
out
sub
sbb
outsl
adc
das
add
push
push
push
mov
popa
xchg
sbb
popf
xor
cmpsb
add
pop
or
adc
sub
icebp
add
jns
add
jmp
push
fwait
int3
cs
xchg
imul
xor
mov
push
into
push
push
mov
sahf
jne
cmp
jo
js
add
xchg
loopne
pop
insb
push
fs
in
pop
pop
fs
cmpsb
pop
clc
sub
stos
lret
xor
fmuls
dec
cli
cmp
gs
fcompl
in
jl
mov
cltd
test
aam
es
fcmovbe
test
inc
cmp
push
lods
jb
inc
lods
mov
add
enter
push
repnz
mov
xlat
push
or
loopne
outsl
lret
inc
jno
xchg
js
xchg
ja
cld
jns
sbb
out
movsl
push
add
aaa
adc
or
in
jmp
mov
daa
or
push
pop
sarb
lret
test
es
mov
fcmovu
push
add
cmc
subl
add
mov
push
push
cmc
cld
int3
cmp
enter
and
and
add
js
pop
mov
push
out
lods
xchg
in
or
mov
loopne
pushf
sub
xor
andl
into
jo
sbb
ror
inc
fucom
xchg
ss
lods
pop
mov
fwait
mov
cld
dec
movsl
xor
add
test
push
lret
lea
fs
lock
xchg
jbe
push
cs
adc
lret
or
xor
enter
jbe
mov
loopne
ret
jbe
jmp
pop
popa
ja
xor
xor
lret
imul
push
mov
or
nop
xchg
scas
and
iret
and
imul
adc
aaa
shrl
xchg
aam
xor
lock
in
pop
jns
inc
cltd
jp
jecxz
inc
loop
jl
mov
push
stos
fxch
inc
xchg
ja
aaa
test
and
add
cmpsl
in
fdivrs
mov
jle
or
pop
mov
jmp
fadd
out
aad
adc
xor
push
adc
adc
push
mov
dec
das
cmc
xchg
cltd
loopne
jle
outsb
or
fcomip
lret
pushf
repz
inc
and
sbbl
leave
dec
movsb
xchg
xorl
jp
ror
subl
imul
andb
sbb
add
push
or
popa
push
stos
jne
mov
sbb
cmpsl
fwait
aaa
ret
fwait
xor
dec
mov
fidivrs
dec
sub
aad
xchg
cmp
push
aad
aas
mov
flds
cmpsl
iret
int3
mov
dec
outsl
pop
lahf
inc
test
xchg
aad
orl
insb
adc
hlt
add
syscall
mov
mov
es
movsl
xchg
or
xor
js
test
inc
sub
xchg
int3
jns
mov
into
cmp
orl
popf
sub
mov
outsl
jno
dec
xchg
outsb
push
sbb
dec
xor
fsubs
sub
test
mov
cltd
fidivl
cmp
imul
sub
mov
xchg
and
cwtl
clc
inc
es
add
jle
aas
sbb
mov
add
in
orb
xlat
mov
adc
inc
xor
inc
xor
into
jge
mov
data16
jl
pop
cwtl
jbe
std
push
pop
sbb
adc
xchg
mov
enter
mov
fstpl
sbb
or
in
xor
xchg
mov
fstpl
rcll
mov
xor
data16
negl
dec
mov
pop
fmuls
bound
test
fadd
rcrl
fcomps
jmp
push
fsts
dec
lds
cwtl
dec
mov
adc
inc
dec
shlb
pop
les
rcll
mov
sbb
pcmpeqb
js
popf
ficompl
lret
cwtl
pop
add
es
xor
xor
and
js
adc
push
pop
mov
lods
vunpcklps
mov
fisubl
mov
fnsetpm(287
fs
loopne
add
lock
xchg
in
adc
pop
ret
cmp
into
sub
mov
test
inc
rorb
jle
mov
mov
or
cs
insb
ret
aad
movsl
mov
das
mov
iret
pop
sbb
popf
jle
mov
fisttpl
enter
xor
fmull
mov
cmp
push
aaa
or
imul
test
xor
xor
inc
rorb
xor
xor
adc
xchg
lahf
pop
xor
negl
ds
js
testb
mov
repz
aam
stos
xchg
cwtl
ret
sub
inc
negb
sbb
add
clc
fwait
xchg
imul
test
push
test
and
xorl
jge
xlat
xchg
pop
mov
rcrb
or
lods
imul
push
pop
sub
pop
pop
add
out
movsl
xchg
test
mov
cmp
inc
data16
jg
lods
aad
shr
xchg
fsts
pop
add
xor
insb
int
jp
mov
jl
xchg
cmc
sbb
cltd
inc
orl
psubsb
dec
sub
fucom
aad
or
push
sbb
adc
ret
adc
or
xchg
call
rol
mov
repz
sub
ret
repnz
cld
inc
adcb
mov
mov
dec
mov
add
sti
jb
mov
adc
pop
sub
shrb
in
xchg
js
mov
or
or
movsl
and
rclb
pop
add
addl
insl
insl
add
xor
xlat
aas
push
push
scas
push
push
mov
cmpsb
dec
mov
stos
movsb
add
mov
and
das
adc
add
scas
mov
pop
mov
into
cltd
dec
dec
rcrl
gs
adc
jge
leave
aad
jecxz
popa
movsl
mov
sar
ftst
push
or
imul
int
sti
loope
pusha
enter
pop
out
jge
push
push
orl
repz
shlb
sbb
aaa
mov
frstor
mov
push
repz
mov
gs
adc
aad
shl
mov
sbb
xor
mov
out
jecxz
and
mov
roll
sub
iret
enter
lcall
shr
div
xchg
xor
test
mov
jle
mov
je
arpl
adc
mov
imul
sub
cmc
cmpsb
mov
mov
dec
filds
or
es
mov
mov
mull
jecxz
es
sbb
pushf
xchg
push
jnp
jmp
outsl
jg
xchg
fsts
or
pushf
jbe
xor
mov
cmp
aam
push
mov
mov
fcomip
fldt
jle
dec
aad
fs
xchg
push
mov
jg
or
cmpl
aad
stos
or
inc
sti
out
push
loope
cmp
sahf
pop
out
lret
subl
rorb
mov
push
mov
rcrl
sbb
mov
leave
movsl
ja
aad
in
push
and
ss
movsb
jns
arpl
shrl
inc
into
test
mov
cmpl
ljmp
out
inc
scas
mov
pop
sbb
in
mov
xchg
lret
out
test
lods
jno
cmc
mov
sbb
aas
out
push
adc
adc
jmp
bound
or
sahf
xchg
std
cwtl
xor
fwait
loopne
faddl
push
jne
lods
cmc
icebp
mov
push
inc
push
test
mov
add
jl
mov
inc
push
mov
and
push
jp
sbb
mov
cs
adc
pop
xlat
fwait
stos
lea
mov
pop
jp
popa
ljmp
andb
nop
mov
lret
cmp
adc
loope
orl
enter
xor
xchg
pop
out
pop
movsl
mov
inc
jecxz
jo
test
out
adc
jnp
sub
scas
call
xchg
jmp
lock
imull
add
scas
inc
xchg
iret
fstps
sbb
sub
test
add
rcrb
adc
test
mov
add
cmp
repnz
xlat
and
movaps
mov
xchg
jl
int
btr
jmp
insl
inc
cmpb
jnp
ljmp
scas
aad
push
cld
or
push
or
push
cltd
addb
sbb
sub
pop
cmp
mov
test
jg
sbb
or
lds
cmp
jcxz
dec
std
mov
dec
mov
aaa
add
fsts
iret
int
movb
lcall
cmp
clc
insl
notb
mov
scas
mov
xor
adc
sub
hlt
das
fcmovne
jb
sbb
dec
out
fisttps
sub
out
cmp
jmp
push
andl
fcomp
adc
jecxz
push
call
push
movsb
setb
xchg
inc
push
shlb
mov
jae
pop
and
and
inc
mov
sbb
popa
pop
push
insl
lcall
enter
push
mov
inc
mov
sarl
mov
sub
cmc
dec
dec
das
es
in
int
jge
outsl
add
pop
add
fiaddl
ljmp
pop
lock
cs
and
pusha
in
or
xor
cmp
pop
bound
mov
int
mov
xlat
enter
jp
dec
jb
sub
rorb
icebp
out
test
outsl
lods
cmp
cwtl
mov
jp
and
test
and
jl
addr16
push
xor
xor
adc
stc
fidivl
imul
dec
push
push
cmc
inc
faddl
hlt
pop
enter
jge
xor
sub
dec
mov
negl
adc
xchg
mov
repz
mov
in
or
andb
test
mov
cmp
sahf
vpunpckldq
dec
xorl
fsts
test
test
popa
nop
and
fcom
je
jecxz
cld
nop
push
sub
pop
lock
fwait
gs
out
loopne
mov
xchg
mov
push
test
cmp
adc
data16
cmp
push
xchg
fs
xchg
out
cli
sub
push
and
adc
mov
mov
loope
dec
inc
subl
test
testb
add
into
imul
in
jnp
jge
sub
in
int
notb
sbb
dec
popl
pop
imul
push
sub
into
test
inc
mov
sbb
cmp
jmp
push
jge
out
cmp
add
stc
in
test
pop
cmp
popf
pop
or
dec
cmp
sbb
or
xchg
or
imulb
rol
fstpt
lods
bound
or
aas
fmull
flds
dec
je
pusha
jmp
sub
les
add
data16
in
xchg
decb
mov
mov
push
gs
sarl
sub
mov
and
sbb
jge
aaa
aad
fildll
lret
sub
in
lods
adc
xchg
and
and
mov
std
nop
in
xor
cltd
test
insw
ja
sub
lods
btc
movsl
sub
rcr
notb
movsl
add
aad
cs
jl
xor
jg
shl
xchg
fwait
mov
sbb
lahf
lcall
sbb
jmp
insb
mov
inc
daa
aas
adc
add
sub
imulb
mov
xchg
mov
xchg
mov
adc
pushf
enter
and
int3
ret
pop
jno
pop
sbb
sar
jg
cld
hlt
lods
jne
push
jmp
mov
fdivs
int3
test
ja
xchg
repz
int
sbb
xchg
xchg
xor
or
not
push
imul
dec
mov
and
cwtl
xlat
popf
std
push
mov
xor
fcompl
out
inc
iret
pop
dec
ret
mov
xchg
mov
lock
punpcklwd
std
repz
cmp
adc
xlat
mov
es
inc
aam
cs
sahf
orb
adc
gs
push
xchg
nop
pushf
shll
xor
outsb
cmp
push
sub
mov
les
pop
inc
hlt
popf
test
mov
scas
adc
push
mov
aas
lret
in
repnz
mov
sbb
push
dec
loope
sub
gs
pop
or
sub
mov
add
shrb
mov
sub
scas
daa
adc
fcmovnb
test
mov
fimull
cli
fistpl
lods
rorl
js
and
enter
mov
inc
jne
lahf
jmp
pop
mov
sbbl
cwtl
leave
sti
call
push
ret
dec
cmp
lret
iret
mov
pop
jp
fnstcw
push
push
jne
pop
push
sbb
dec
icebp
icebp
out
pop
adc
test
stos
outsb
mov
orb
inc
daa
sbb
dec
inc
cld
xchg
shr
mov
pop
pop
inc
leave
aad
xor
lcall
enter
pop
leave
xchg
fdivrs
mov
xor
xor
mov
push
xchg
pop
fimuls
inc
cmpsb
stos
xor
test
lcall
icebp
and
add
xchg
mov
mov
sub
rclb
pop
loopne
cmpsl
and
inc
and
out
cld
fisubl
push
push
mull
flds
orl
push
shlb
sub
in
aad
repz
fidivrs
stos
jnp
sarb
xchg
arpl
lds
add
adc
xchg
mov
lret
stos
cmp
push
push
push
lds
fistpl
stc
movsl
sahf
xchg
jg
fmul
jno
mov
inc
push
mov
arpl
mov
pop
fwait
and
pushf
xchg
scas
pop
sub
or
push
and
bound
sbb
xlat
sbb
test
mov
push
shll
adc
or
lea
pop
cs
inc
int3
xlat
sub
cmp
jno
enter
jo
mov
mov
ret
sub
in
xlat
pop
sub
mov
lea
sbb
fsubrp
loopne,pn
mov
sahf
out
xor
ljmp
jl
mov
xor
push
dec
imul
popa
js
pop
in
adc
xchg
insb
ret
sub
sub
rorl
stc
es
cmpl
dec
sub
cmp
lret
pop
out
fdivrs
hlt
sub
adc
das
inc
loopne
jmp
mov
adc
pop
nop
push
jecxz
movsl
iret
int
movb
push
pop
jbe
sbb
dec
loop
loopne
add
or
pop
sti
mov
jno
mov
dec
ret
icebp
lcall
arpl
xor
mov
sbb
xchg
divb
add
mov
hlt
adc
ds
repnz
gs
inc
pop
gs
lea
sbb
filds
enter
cmp
pop
dec
mulb
lcall
test
jbe
xchg
or
cmpsb
ds
pop
pop
adc
pop
stc
mov
push
rol
int3
popf
scas
or
test
sbb
cmp
mov
dec
pop
adc
test
pop
xchg
out
into
and
scas
add
add
mov
ds
cmpsb
popa
rcll
jmp
push
sti
test
sub
inc
ret
adc
dec
xor
pushf
loopne
push
sti
mov
std
stc
subl
mov
lea
loop
lret
push
jae
and
adc
mov
ret
sahf
cwtl
jmp
xlat
hlt
arpl
sub
shlb
iret
outsl
pop
mov
arpl
adc
xor
add
xchg
mov
cmp
pop
cmpsb
stos
pop
cmpb
or
inc
loope
jae
mov
lret
mov
pop
enter
pusha
mov
jp
or
cmp
pop
fucomp
xchg
cmpb
cmpsb
lods
add
add
jmp
jb
sbb
imul
test
jae
jmp
negl
out
pop
push
jecxz
sti
lea
cmp
mov
xor
pop
sbb
mov
jmp
dec
xchg
add
test
imul
rol
int3
nop
ss
les
call
fidivs
push
pop
pop
mov
sub
test
loopne
mov
and
dec
push
enter
cmp
jg
xchg
sbb
decb
pop
pushf
fs
add
sbb
add
add
gs
jnp
jns
push
mov
mov
dec
inc
test
js
pushf
add
addr16
arpl
xchg
add
xchg
mov
mov
imul
test
lds
xchg
push
and
lods
dec
pusha
and
inc
push
pop
mov
mov
push
shll
nop
lods
mov
test
pusha
sbb
adc
add
adc
or
dec
pop
xchg
sbbb
scas
es
pop
jl
fs
lods
and
pop
int3
loop
aaa
adc
xchg
adc
ljmp
imul
int
mov
ret
out
adc
cmp
sbb
mov
fdivrs
int
cs
fbld
mov
stc
movsb
xchg
les
icebp
sbb
imul
stos
push
mov
fs
sti
add
xor
and
aam
les
hlt
sbb
imul
stos
push
mov
fs
sti
add
xor
and
sarb
loopne
xchg
jnp
dec
mov
movsb
stos
push
mov
insl
jmp
sti
add
cmp
cmp
or
sbb
xor
fs
stos
mov
adc
dec
stos
pop
int3
int3
int3
int3
int3
lret
test
cmc
mov
sarb
add
xor
es
push
add
pusha
xchg
movsb
rcl
rol
hlt
loopne
sbb
add
adc
and
aaa
inc
movsb
jo
pusha
mov
mov
fsubr
in
idiv
adc
or
pop
inc
push
and
adc
or
sub
ror
fdivrs
cmp
ret
push
and
stc
xor
jb
mov
outsl
aas
nop
leave
or
pop
pop
pop
aas
cmp
jle
insb
fsts
and
rcll
adc
addb
jmp
rcrb
clc
or
xchg
inc
pusha
mov
mov
fimull
nop
test
sub
lods
loopne
and
push
fcmovnbe
pop
adc
jo
jg
jmp
hlt
add
loopne
lock
cltd
incl
cmp
leave
std
je
fwait
jo
andb
outsl
insl
out
dec
and
out
adc
and
pop
push
xor
xchg
adcb
aam
lock
stc
std
or
sbb
sub
pop
push
jo
jns
jecxz
in
aad
les
repnz
lea
inc
popa
dec
dec
cmp
and
adc
in
addb
scas
negb
add
inc
push
addr16
sbb
stc
aad
loope
aad
shrl
hlt
loopne
adc
add
xor
and
push
inc
inc
jo
pusha
fs
xchg
addb
rol
hlt
loopne
adc
add
xor
and
push
inc
inc
jo
pusha
fs
xchg
inc
add
xchg
enter
push
dec
aaa
std
in
fwait
mov
sub
xor
nop
in
popa
adc
sbb
sub
add
test
ds
in
out
pushf
xor
and
mov
push
pop
stos
inc
add
pop
push
adc
cli
jbe
cmpsb
cmp
sbb
sub
mov
mov
lock
repz
inc
pop
stc
pop
pop
in
in
mov
jbe
es
es
shlb
inc
ja
push
adc
xchg
ljmp
push
sahf
mov
dec
fnstsw
cmpsb
in
jns
mov
inc
jmp
cwtl
cmp
addr16
push
dec
or
pop
xor
jmp
in
filds
ja
call
jge
mov
dec
mov
add
mov
cwtl
jne
cmp
adc
dec
fidivs
xchg
cmc
push
inc
js
roll
and
outsl
ss
mov
sahf
inc
mov
mov
xchg
and
adc
scas
add
in
pop
xchg
xchg
rcll
xchg
popa
pop
mov
std
out
sbb
inc
repz
xchg
cwtl
cmp
jno
xchg
cmovle
stos
inc
push
repz
adc
sub
icebp
rol
imul
imul
mov
sub
xlat
rol
loop
in
inc
in
ret
mov
lods
test
cli
into
mov
or
pushf
outsb
push
mov
xor
pushf
ljmp
aas
jge
xchg
add
int
mov
in
and
adc
lea
or
lea
mov
add
test
outsl
mov
jg
aam
or
sub
mov
loope
stos
mov
and
and
outsl
lods
mov
and
ljmp
push
jle
out
mov
orl
mov
push
imul
xlat
aas
repz
push
inc
hlt
fstpl
dec
andb
pop
or
ds
sbb
fisubrl
add
mov
cmp
mul
paddsw
repnz
dec
insb
vminps
inc
dec
adc
fdivrl
mov
sbb
mov
repnz
jp
or
ret
fnsave
lcall
gs
inc
arpl
xlat
pushf
iret
push
scas
jnp
adc
hlt
test
xchg
sub
jl
push
enter
jle
gs
dec
imul
push
add
push
inc
xor
in
out
dec
xchg
leave
cmp
cmp
mov
and
aas
sbb
adc
and
andl
push
in
add
xorl
repz
mov
dec
pop
and
cwtl
loop
cmp
jnp
out
xchg
sbb
push
mov
sub
mov
or
ret
push
test
pop
push
std
aad
sub
mov
cs
lods
sbbl
cmp
mov
pop
rcrl
sbb
lret
cmpsl
out
cmp
jmp
pushl
xchg
int
mov
dec
dec
pop
imul
jle
jae
adc
adcb
or
push
pop
iret
add
jg
xor
xor
icebp
ljmp
cli
js
sahf
xor
fs
jb
je
inc
outsl
jne
mov
test
pop
cld
sbb
jne
repnz
out
into
scas
aaa
and
hlt
and
push
addr16
mov
hlt
mov
enter
xor
xchg
fstpt
lcall
in
jno
mov
mov
push
sub
stc
int3
mov
addl
insb
and
add
or
xchg
xchg
sub
mov
cltd
stos
and
in
adc
inc
cltd
cmc
call
jno
pop
adc
push
test
jbe
pop
dec
pop
xchg
jecxz
pop
dec
aad
jne
mov
and
cmp
out
dec
sbb
fsts
jmp
mov
adc
sub
mov
dec
jg
dec
sub
xchg
jecxz
jecxz
mov
insl
shrl
xor
add
inc
mov
jae
daa
pop
push
sbb
ja,pn
sbb
arpl
pop
and
arpl
sub
xor
push
mov
cmp
ds
lods
adc
jb
inc
jbe
dec
iret
sub
filds
adc
fisubrl
add
push
mov
jecxz
mov
push
inc
xor
xchg
and
xchg
enter
ljmp
ss
test
lret
jecxz
aad
jae
mov
daa
mov
or
movsl
dec
mov
movsb
mov
pop
xchg
inc
lcall
cmp
inc
lcall
or
jbe
ja
gs
dec
add
gs
and
sub
movsl
out
pop
flds
repnz
sbb
sbb
stc
bound
das
mov
xor
xor
aam
rolb
aaa
shlb
in
pop
ljmp
test
jbe
loope
jns
gs
mov
jnp
mov
xor
div
gs
test
jg
dec
mov
popa
dec
sub
cli
xchg
sbb
sbb
loop
dec
jle
push
xor
inc
mov
insl
and
rorl
lods
clc
enter
std
jle
cltd
mov
ja
loopne
dec
jno
scas
mov
sbb
sub
pop
lods
iretw
sbb
or
or
test
mov
out
pop
rorl
mov
mov
mov
ret
ret
jae
test
test
mov
jo
std
cmp
popl
aas
mov
or
ret
test
out
out
sbbb
pop
mov
xchg
imul
repz
movsb
jnp
fisubl
cltd
xor
jle
sbb
inc
cld
in
inc
cmp
or
pop
or
in
loop
adc
or
cltd
push
jecxz
mov
mov
testl
jl
data16
aas
aaa
sub
ljmp
xor
dec
test
and
jo
xchg
sahf
mov
shrl
push
in
adc
dec
xchg
mov
mov
cmp
data16
fs
test
mov
xchg
xor
ljmp
mov
lahf
xor
xor
mov
jg
dec
scas
dec
ja
cltd
or
xor
jne
repnz
stos
loop
sub
sub
sub
mov
xchg
push
mov
mov
dec
insl
jmp
lcall
lods
adcb
adc
inc
repnz
cmp
jne
or
aas
xchg
aas
inc
sub
insb
aam
nop
and
aam
scas
jecxz
push
in
stos
push
insb
insb
push
ljmp
mov
inc
adc
ds
repnz
jns
adc
imul
sub
pop
int
loop
leave
dec
addl
or
sub
stc
sbb
movl
jnp
repz
mov
ds
shrl
mov
subl
sub
adc
xchg
popf
lcall
std
iret
rorl
cwtl
or
inc
pusha
dec
mov
hlt
lret
and
inc
lds
test
jp
mov
jl
inc
idivl
jecxz
fldenv
fmul
xchg
sbb
test
push
xor
add
inc
mov
loop
stos
and
pop
adc
xor
lods
outsl
xchg
rcrl
orl
les
pop
out
sbb
jle
clc
fsubrs
jbe
pop
das
das
xchg
xor
cmp
and
rorl
push
icebp
mov
mov
lea
push
cwtl
cld
jmp
out
fidivl
cs
outsl
scas
ret
ja
mov
insb
pop
pop
sub
dec
pop
sbb
iret
les
ret
dec
mov
push
pop
jb
fildll
add
or
mov
add
and
push
andb
push
daa
mov
aaa
inc
inc
push
xor
xchg
cwtl
mov
popf
mov
repz
and
outsb
pusha
rcll
mov
mov
cmpsl
pop
pop
rclb
pushaw
popf
mov
fwait
mov
mov
sbb
lcall
cs
xchg
aas
push
inc
aas
pop
enter
jb
jmp
leave
mov
mov
ds
leave
push
arpl
cmp
aas
pop
or
dec
mov
out
add
pop
mov
fidivrs
test
add
test
dec
cmp
ror
cmp
inc
xor
stos
inc
test
inc
jae
arpl
cwtl
pop
dec
ja
cmp
in
inc
es
bound
stos
paddw
orb
xchg
pop
adcl
xchg
sub
add
int3
mov
mov
cld
in
mov
imul
push
je
jp
das
outsb
fmuls
xor
jns
mov
es
ss
int3
push
and
pmaxub
lock
push
or
scas
mov
and
sub
or
fbld
inc
popf
pop
sub
call
and
adc
cmp
test
arpl
sub
pusha
dec
mov
cmp
addb
dec
cmp
into
stos
orb
adc
xchg
cmp
mov
ret
push
fs
ss
mov
pop
adc
or
int
ret
js
ljmp
adc
push
jno
pop
adc
fcmovnb
mov
loop
sbb
dec
repnz
or
cmp
data16
and
jge
sub
aad
std
mov
xorl
mov
fisttps
cmp
cld
sbb
not
scas
clc
int3
insb
stos
insb
jecxz
jmp
ja
mov
test
popf
mov
and
push
xchg
inc
mov
mov
es
es
xor
aas
stc
sbb
push
fcoml
stos
jbe
icebp
pop
sahf
and
or
xchg
fstps
int3
in
scas
xor
adc
int
hlt
cli
xchg
enter
or
dec
pusha
aad
dec
pushf
stos
imul
std
jmp
scas
dec
cmpsl
mov
lar
push
call
popf
mov
add
loope
xchg
xor
sbb
inc
loope
pop
mov
call
inc
dec
into
xchg
or
xor
and
popa
xor
and
push
into
or
dec
dec
push
push
in
ljmp
jp
sahf
adc
pop
push
inc
mov
dec
jg
jle
testb
scas
mov
add
loopne
test
int3
pop
add
xchg
sbb
xchg
std
dec
das
xchg
out
lcall
scas
mov
popf
push
pusha
pop
mov
sbb
mov
add
jmp
popa
sbb
iret
add
push
jbe
or
jbe
sbb
pop
push
adc
sbb
rorb
int3
and
mov
and
jmp
cmp
jle
jmp
sub
and
inc
cmp
inc
mov
arpl
loope
std
inc
sub
bound
adc
into
mov
xor
mov
insl
out
rcrl
mov
dec
pusha
add
or
mov
adc
aam
push
mov
aam
sahf
jb
jg,pn
xchg
fsubr
mov
lds
cmpsl
and
pop
xlat
daa
jns
fdivrl
mov
fidivrl
mov
mov
mov
and
pushf
in
in
cld
flds
int3
jg
aad
and
fmulp
jno
pop
xchg
xchg
pop
sub
add
pop
insb
dec
cmpsl
cmp
pop
mov
enter
cwtl
arpl
imul
sbb
ret
add
jb
mov
cmc
andb
mov
inc
mov
mov
add
pop
pop
andb
nop
je
cmp
iret
dec
fcmovnbe
push
ja
rorl
jns
mov
push
clc
loop
orl
sbb
pop
fst
cld
ret
jecxz
sub
mov
add
mov
push
aam
xchg
and
jne
xchg
jl
div
gs
adc
mov
cmp
out
aaa
outsl
lret
cmp
out
jmp
xlat
imulb
adc
js
movsl
scas
push
xchg
jne
pop
push
push
orb
popa
jb
imul
mov
hlt
mov
xchg
jno
dec
cmp
mov
shl
cmp
xchg
outsl
inc
and
jnp
push
jno
enter
lods
loop
call
fs
mov
jb
or
js
je
xor
push
les
push
inc
scas
xchg
add
in
mov
lahf
xchg
sti
out
sbb
fbld
cmp
daa
xchg
inc
lcall
das
pop
loop
lret
sbb
pop
sbb
push
scas
cld
cmp
dec
enter
pop
clc
inc
mov
out
or
dec
in
or
pop
mov
js
int
in
mov
or
popf
xor
cli
movsl
je
xchg
lret
lcall
scas
cmc
popa
stos
roll
test
pushf
in
mov
xor
cltd
test
nop
in
inc
push
xlat
push
mov
xor
and
and
dec
nop
and
mov
xchg
stos
xor
ret
push
push
icebp
dec
in
cmpsl
rorb
lahf
fwait
scas
inc
adc
add
push
jg
fisttpl
rcll
ljmp
movsl
xor
or
jl
inc
mov
mov
mov
js
cmp
lods
mov
cltd
xor
je
call
add
push
xlat
out
mov
hlt
out
jecxz,pt
nop
mov
hlt
adc
lea
pop
pop
rolb
jl
mov
lcall
and
lods
loope
sbb
cmp
inc
mov
mov
xchg
mov
movsb
xchg
sub
xor
repnz
or
testb
sbb
movsb
adc
push
mov
xchg
aas
scas
repnz
and
stc
cli
adc
sub
insb
dec
dec
subl
jp
push
adc
push
mov
xor
stc
das
movsl
popa
pusha
aad
popf
push
cmp
cmp
test
lahf
test
rolb
fmuls
add
xchg
cmpb
sub
out
test
mov
subl
ja
sub
adc
xor
mov
fdivrp
pop
xchg
pop
ljmp
xchg
add
arpl
jmp
or
cld
aam
cmp
pop
test
mov
imul
ja
adc
mov
mov
imul
addr16
out
xor
shrl
mov
mov
mov
jl
pop
add
cmp
lea
decl
fadds
jg
sahf
push
push
xchg
rcrl
outsb
stos
and
stos
adc
cmp
pop
jb
push
pop
lret
xchg
in
sub
mov
add
jecxz
nop
push
dec
dec
add
sub
jp
push
pop
mov
in
sarb
aas
add
arpl
stos
loope
adc
fisttpl
lods
pop
repnz
fstl
mov
bound
inc
cs
movsl
imul
stc
lds
cld
pop
rcrl
cltd
inc
cmpsb
mov
ret
stc
ret
push
stos
mov
mov
cmpsb
rcll
jnp
mov
sbb
push
push
sub
xchg
pop
jp
push
fldt
pushf
aas
adc
add
int3
pop
mov
jo
scas
adc
jne
mov
inc
enter
dec
push
mov
jl
or
sub
psadbw
rcrb
jecxz
adc
daa
arpl
dec
pop
lret
repnz
cld
push
or
pop
push
rcrl
sbb
mov
xor
fcmove
fs
cmp
jbe
push
andb
aad
mov
daa
push
repnz
xchg
or
lret
adcl
sti
shlb
rep
sub
xlat
movb
pop
icebp
mov
dec
inc
adc
or
jg
push
xchg
es
jp
dec
pop
adc
jmp
rcrl
std
fnsave
fdivs
cwtl
nop
sbb
and
push
shll
mov
cmove
inc
push
imul
inc
or
mov
stos
or
fs
mov
loop
in
es
xchg
ss
jbe
out
test
xchg
or
movsb
xor
mov
test
lret
mulb
inc
je
lcall
mov
rclb
ret
cmpsb
push
dec
outsb
pop
xchg
jmp
add
push
outsb
xchg
xchg
jo
stos
loope
imul
shl
cwtl
rclb
and
inc
xor
sbb
and
je
decl
hlt
dec
jnp
pop
add
or
into
mov
jecxz
mov
cld
fucomp
xor
mov
sub
add
dec
divl
xchg
sub
xchg
push
pop
pop
xchg
pop
sub
push
orl
push
bound
dec
xor
mov
jp
mov
sub
inc
pop
mov
sub
cli
jb
out
cmp
imul
pop
outsl
pushl
pop
imul
mov
or
or
lods
test
fstp
stos
and
xor
sub
cmp
out
in
mov
je
mov
or
pop
insl
leave
add
int3
lods
xchg
mov
push
ret
fdivs
mov
or
fdivs
pop
xchg
das
ficoml
pushl
lock
xchg
rcrb
dec
pop
lods
or
outsl
stos
inc
push
call
insl
push
dec
xor
ljmp
dec
sbb
ljmp
out
movsl
adc
in
rcrl
xchg
jns
adc
or
jns
in
scas
sahf
mov
pop
jno
and
ss
mov
add
mov
sub
mov
xchg
jmp
and
cld
jmp
aad
ja
adc
pop
jg
ja
sbb
sub
loope
stos
cmp
in
out
xchg
mov
mov
cmp
cmp
lods
inc
pop
dec
iret
mov
into
and
adc
test
and
loop
jl
bound
jl
cmp
sarl
pop
outsl
or
xor
scas
dec
xchg
mov
sbb
xor
rol
ss
hlt
addb
mov
push
movsl
xor
lcall
mov
jge
add
fsubrl
jle
fldenv
xchg
dec
insl
dec
add
dec
dec
push
dec
adc
jne
jnp
xchg
mov
lods
jno
adc
push
bound
bound
leave
push
pushf
popa
test
cwtl
inc
jb
jb
mov
push
ret
movsb
aas
pop
mov
shl
inc
pop
insl
out
mov
xchg
lods
jecxz
negb
xchg
leave
mov
adc
pop
fwait
mov
hlt
pop
fidivrl
mov
pop
dec
test
pop
push
call
xor
push
out
icebp
out
jnp
lahf
popf
lods
jo
dec
scas
add
fistpll
mov
xorb
dec
ljmp
cmp
shrl
shrb
adc
or
into
mov
addr16
dec
divb
je
pop
push
jge
jl
cmp
testb
and
test
int
sbb
push
push
jmp
into
and
jb
cmp
sbb
in
xor
jl
fistps
test
adc
push
dec
pop
mov
pop
or
imul
xor
and
lds
out
pusha
fmull
jno
push
rclb
call
add
test
scas
testb
out
iret
dec
stos
xorl
sbb
push
pop
jge
insb
pop
push
xor
xchg
cli
jae
jb
in
sti
enter
int3
out
imul
push
lock
push
mov
xchg
out
mov
movsl
fxch
xchg
roll
and
mov
xchg
faddl
hlt
pop
jnp
shll
divb
pop
sbb
xchg
mov
int3
mov
pop
icebp
lock
xchg
dec
ud2
call
shll
inc
xchg
jle
sahf
fstpl
inc
pop
add
pop
pop
and
mov
push
jns
push
pop
sbb
stc
insb
xor
cmc
add
push
cmpsb
or
bound
adcl
push
es
xor
gs
sbb
aaa
les
jbe
and
jae
std
cmp
int3
int3
or
fs
jmp
js
push
xlat
mov
jae
cmpsb
jbe
sub
fmul
jle
cmp
cmp
jb
ljmp
pop
lret
sub
jg
pusha
xor
sti
dec
sub
icebp
sahf
sbb
jecxz
mov
pop
scas
push
mov
push
cmp
jmp
mov
mov
popa
ja
shrb
test
or
mov
mov
push
je
fs
mov
shr
leave
jb
push
inc
jmp
setae
rcll
dec
mov
popf
popf
mov
imul
pushf
out
xchg
pop
mov
movsl
test
mov
jmp
add
loop
test
adc
cwtl
les
das
scas
mov
es
es
mov
popa
scas
subl
xchg
push
mov
xchg
sub
and
shlb
adc
cmp
out
shrl
add
cwtl
loopne
cmp
pop
daa
sbb
inc
fcomps
into
xchg
jbe
inc
adc
or
and
dec
fcoml
inc
xchg
lods
insb
mov
cltd
pop
mov
cs
dec
xchg
adc
ret
sbb
ret
mov
mov
sub
mov
xchg
jno
aaa
fisttpl
mov
pop
in
nop
xchg
and
enter
jne
inc
mov
mov
sub
outsl
xlat
out
fadds
cltd
jmp
pop
push
out
in
nop
mov
orl
mov
cmp
cmp
pop
repnz
mov
push
push
xchg
fadds
inc
mov
fimull
xlat
cld
jmp
or
jecxz
jmp
inc
jp
pop
lea
movsb
add
xchg
sbb
shl
cmp
mov
cmpsb
aaa
in
jbe
es
ss
cld
cli
incb
out
add
mov
mov
fsts
out
cltd
imul
push
hlt
adc
inc
mov
loop
arpl
jl
xor
std
add
push
insl
xor
push
xlat
cltd
dec
adc
push
sub
clc
mov
sbb
mov
pop
aam
inc
test
xchg
pop
push
xor
in
push
sub
sub
xor
sub
lds
jb
xor
lret
mov
fldt
sti
and
pop
fcomp
les
cwtl
nop
xor
cld
sbb
cwtl
and
and
push
sub
inc
and
mov
lret
adc
cmpsl
mov
dec
push
dec
and
fimuls
cmp
div
lods
inc
call
rcrb
movsb
rcl
rol
hlt
loopne
adc
add
xor
and
push
inc
inc
jo
pusha
fs
xchg
addb
rol
hlt
loopne
adc
add
xor
and
push
inc
inc
jo
pusha
fs
xchg
addb
rol
hlt
loopne
adc
add
xor
and
jo
push
movsb
xchg
mov
xchg
les
pusha
in
adc
scas
lcall
mov
int3
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
les
hlt
xchg
xor
mov
aaa
fs
je
add
push
repnz
xor
les
hlt
xchg
test
xchg
mull
push
push
fs
jp
add
and
and
xor
frstor
in
xchg
popf
out
idivl
ja
cmp
pop
add
jnp
js
arpl
cmpsl
mov
xlat
and
ret
aas
in
push
sub
or
adc
xchg
inc
icebp
sub
pushf
loope
push
and
and
cwtl
push
mov
and
lret
push
cmp
sub
inc
push
es
xchg
fisubrl
ljmp
xor
lds
rclb
pop
dec
mov
iret
cld
push
pop
push
clc
mov
or
xor
xchg
inc
pop
dec
imul
mov
jmp
fistl
xlat
cld
ja
mov
mov
xor
mov
xchg
xchg
jp
mov
aaa
mov
pop
and
inc
jb
mov
push
xor
or
xchg
xchg
xchg
out
mull
dec
aaa
jl
insl
pop
sbb
or
ds
xor
test
mov
sub
repnz
mov
pop
outsl
adc
push
jno
push
inc
pop
push
stos
cmpsl
mov
mov
xchg
xchg
movsb
mov
xlat
pop
pop
xor
xor
add
sbb
and
mov
out
pushf
repnz
out
mull
push
aaa
fs
je
add
adc
and
xor
les
hlt
xchg
test
xchg
mull
push
aaa
fs
je
add
adc
and
xor
les
xchg
call
dec
push
jo
cs
add
out
pminub
pushf
adc
lret
push
mov
pop
pop
adc
imulb
fiadds
sub
fcomip
outsb
mov
outsl
mov
insl
adc
or
push
xchg
int
jg
xchg
outsl
jle
pushf
addr16
push
sbb
xchg
mov
movsb
mov
mov
push
sub
xor
ds
out
punpcklbw
sub
mov
fmul
jo
lahf
xchg
mov
in
stos
scas
in
cmp
test
xlat
lods
pop
mul
push
lahf
push
push
outsb
int3
cmp
sbb
push
fsave
inc
push
or
xchg
jne
adc
and
mov
daa
push
int
add
fwait
dec
mov
ss
push
orb
pusha
xchg
sti
add
ret
out
cmp
iret
xor
stos
pop
cmpsl
cwtl
or
xorb
shll
inc
std
scas
dec
add
xor
xchg
out
mov
jl
notb
jl
jmp
jnp
pop
je
dec
sbb
jg
cs
inc
hlt
lods
jp
out
leave
cmc
iret
adc
pusha
adc
mov
dec
int
jbe
adc
xor
lea
leave
jns
push
loope
inc
test
gs
sub
pop
xor
mov
adc
sti
lods
nop
inc
dec
mov
jns
jg
leave
or
ss
inc
rolb
aas
fbld
push
xor
jmp
add
inc
mov
mov
mov
mov
push
in
ljmp
fcomip
jnp
sahf
call
fdivrs
mov
xlat
dec
mov
pop
leave
ljmp
xor
sub
mov
add
test
lods
mov
ret
test
call
mov
icebp
enter
fwait
call
and
inc
mov
sub
incb
mov
jno
add
push
and
shll
sahf
clc
loop
out
sbb
mov
jle
pop
mov
push
add
dec
jae
popa
aas
cmp
xchg
jl
stos
add
iret
push
pop
inc
inc
scas
inc
movsb
fisttpl
faddp
test
lods
sub
cmc
jmp
xor
push
xor
xchg
in
jecxz
stos
lods
lods
mov
pop
les
xor
mov
push
mov
xor
cltd
fsubs
lods
jb
xchg
xor
mov
jmp
pop
dec
dec
cld
push
pop
dec
dec
mov
enter
mov
aad
adc
mov
xchg
jno
je
test
test
sub
pop
in
bound
lds
faddl
lret
imul
shll
cmp
sbb
repnz
pop
jecxz
xchg
loopne
jbe
cli
in
add
push
int3
inc
xchg
mov
push
sub
push
loope
and
shll
jle
sub
push
push
xor
inc
dec
scas
es
jo
dec
movsl
ret
jae
mov
fdivs
jae
mov
or
fcom
loopne
aad
jne
push
xchg
cmp
imul
push
jp
xchg
std
dec
enter
mov
pusha
jo
icebp
imull
xchg
or
aaa
sub
push
dec
leave
mov
sub
pop
dec
add
mov
add
xor
fisubl
jl
ja
sub
or
pop
fists
enter
or
mov
rcll
les
jecxz
out
push
mov
mov
in
cmp
shl
enter
xor
dec
sub
bound
push
adc
add
pop
fstpl
js
jp
fiadds
inc
mov
lret
sub
jnp
in
mov
cltd
push
psubsw
add
in
jge
loopne
or
sbb
push
xchg
mov
and
inc
mov
pop
adc
sub
rolb
loope
out
das
push
dec
sbb
ret
jl
test
sub
adc
dec
sahf
mov
movsl
insl
pop
dec
data16
sub
stc
movsb
xorb
and
mov
imul
sub
je
mov
lock
lock
sbb
gs
insb
add
mov
rcr
js
adc
idiv
lret
mov
jb
or
data16
mov
and
in
jnp
adcb
nop
cmp
aas
out
rcl
icebp
add
dec
xor
xchg
cmp
js
fdivl
or
mov
shll
andl
mov
loopne
in
inc
orl
bts
dec
xor
xchg
cmpsb
adc
sub
or
add
jnp
push
test
pop
scas
stc
lcall
sub
into
pop
in
clc
and
mov
cwtl
stc
inc
out
cld
mov
xchg
in
mov
cli
pop
jge
mov
scas
loop
and
mov
pop
push
daa
cs
mov
push
shrb
int3
out
bound
pop
rep
cs
jl
dec
addr16
dec
mov
inc
fcoms
cli
out
mov
icebp
and
push
xor
and
js
out
or
arpl
cmp
dec
gs
push
mov
xchg
rclb
aas
int3
int
stos
adc
jg
mov
cmpsb
push
popf
adc
pushf
repz
aas
repz
push
mov
mov
sub
pop
add
add
mov
cli
xchg
pop
std
pushf
inc
and
adc
push
cltd
cmpl
or
cmp
add
mov
outsb
mov
test
rcrb
pop
lods
out
lret
push
inc
rclb
push
push
outsl
pop
push
mov
out
cwtl
adc
gs
adc
jo
jo
or
outsb
mov
mov
lock
gs
sar
mov
push
stos
mov
out
mov
imul
jle
xchg
cld
inc
sbb
call
stc
shll
cmp
xor
cmp
and
idivb
jecxz
and
sbb
cld
jmp
add
scas
adc
jns
mov
test
rcl
jle
fidivs
sub
fildl
inc
cmpsb
xor
xorl
dec
cltd
xchg
stc
leave
push
push
sub
imul
inc
out
pop
sub
add
xor
inc
xchg
or
in
lret
xchg
scas
int3
inc
test
sbb
repz
idivb
adc
popf
xor
mov
in
push
mov
test
dec
test
pop
add
mov
daa
cmpl
inc
ds
subl
hlt
lahf
in
push
xor
mov
arpl
addr16
dec
mov
fnstenv
andb
adc
sbb
aas
aad
mov
rolb
ljmp
movl
test
push
addr16
sub
outsb
mov
cltd
movaps
fwait
pop
scas
jge
jecxz
cmp
add
bound
int3
push
jbe
rcrl
lret
xchg
dec
shll
jns
add
cmp
sub
icebp
push
out
sahf
cltd
movsl
inc
jecxz
ja
jl
and
ds
mov
cs
sbb
sbb
sbb
call
xchg
ret
mov
xlat
jmp
cmpsb
add
gs
mov
ja
fmuls
popa
or
push
cmp
rorb
cmp
in
lods
leave
stos
xchg
fcompl
cltd
mov
add
mov
mov
ss
and
iret
pusha
adc
scas
idivl
push
pop
int
je
aam
or
sub
jnp
bound
rcll
fbld
xchg
lret
xchg
sbb
cli
jmp
xchg
stos
ret
popf
arpl
icebp
mov
repz
clc
and
inc
ja
aam
xchg
jmp
leave
dec
and
insb
xchg
out
bound
subl
shrb
mov
jnp
hlt
lcall
sub
fucomip
jp
xor
shlb
sbb
add
xchg
push
fimuls
aad
enter
in
in
imul
cltd
cmpsb
jge
xchg
nop
add
stos
notb
push
rcl
pop
mov
cmp
rcrb
in
ret
dec
xchg
movb
mov
lea
scas
insb
sar
shl
inc
clc
sarl
clc
add
sub
lcall
imul
adc
mov
test
lea
es
out
std
and
inc
aad
xchg
inc
fs
pushw
xor
je
jbe
mov
mov
das
mov
cmp
and
xchg
cmp
lahf
push
fisubrl
shr
das
mov
sbb
sbb
push
add
ret
lock
dec
insb
pop
dec
sbb
test
pop
out
outsl
loopne
xor
pop
rorl
sahf
and
stc
ficomps
and
je
pop
idivl
mov
loop
jb
je
insb
xor
addr16
mov
jnp
outsb
sti
js
and
mov
mov
int3
negl
stos
push
mov
xor
and
mov
out
mov
push
dec
rorb
cmp
xlat
out
testb
jnp
fisttps
js
pop
jg
mov
negl
or
jo
lahf
pop
pop
mov
sbb
inc
nop
xor
and
cmp
pop
gs
push
cmp
test
sahf
xor
imul
xchg
mov
and
popa
ja
dec
les
shlb
jge
repz
add
xor
lock
negl
inc
out
mov
fwait
test
ret
adc
mov
imul
inc
subb
jno
mov
stos
jbe
xor
in
daa
mov
lret
cld
mov
dec
mul
bound
int3
mov
add
pop
aaa
loope
xchg
test
mov
jg
xchg
out
repz
lcall
imulb
ljmp
cmc
sbb
cmp
push
xchg
stos
sub
hlt
push
gs
andl
bnd
push
inc
mov
pop
dec
in
inc
loop
jge
dec
cmp
xor
sti
push
jmp
sbb
mov
repz
jb
mov
enter
lods
adc
popf
xor
sbb
bound
scas
sub
xchg
in
icebp
sub
lods
mov
push
repz
sbb
icebp
repnz
jmp
xchg
mov
cmc
pop
dec
dec
cmp
pop
out
cmp
add
stos
test
push
sbbb
movsb
mov
inc
xchg
mov
jbe
rclb
xchg
cltd
jno
pop
add
jbe
mov
mov
lods
int3
and
sti
ds
mov
jns
das
jg
mov
sub
stos
mov
push
jo
in
in
in
add
dec
add
pusha
push
out
jbe
out
jg
jle
js
jmp
cltd
xlat
ret
dec
fistpll
or
cltd
xchg
cwtl
lods
fs
jge
jge
test
jne
inc
pushf
loopne
fsubr
aad
xchg
xchg
dec
or
cwtl
jmp
cmc
es
stc
inc
push
pop
shll
or
jl
cmp
rcrb
cs
adc
sbb
jge
or
lret
xchg
xchg
jne
mov
sub
push
jecxz
inc
cmp
xchg
mov
dec
adc
aas
pop
jle
les
lock
xlat
jno
mov
xor
push
testl
and
ficoms
int3
xchg
adc
in
inc
mov
mov
push
out
lcall
pop
jmp
xchg
test
dec
mov
loopne
push
push
push
inc
xchg
lcall
roll
test
xchg
mov
adc
orl
push
mov
sbb
push
rclb
cmp
loope
jo
mov
mov
and
push
push
pop
addr16
cmpb
lods
cltd
xor
dec
lock
imull
fstp
pop
push
mov
outsb
jle
inc
xchg
lods
xchg
aam
and
iret
sub
jl
test
fsubrs
xchg
dec
data16
dec
xchg
xor
out
cmp
test
cmp
pop
imul
inc
xchg
add
cmpsb
sti
js
add
jecxz
fbstp
xchg
inc
out
mov
and
notb
mov
push
test
dec
add
and
push
sbb
mov
add
adc
jae
xchg
jbe
mov
jl
icebp
and
inc
les
mov
lods
push
dec
cmp
lds
push
ja
adc
dec
das
jno
xor
loop
adc
insl
sub
dec
adc
pushf
pop
dec
or
dec
or
xchg
lcall
int
leave
jbe
xchg
xor
pop
jae
addr16
jmp
leave
jp
xchg
xchg
and
dec
outsb
jecxz
das
add
aaa
cmp
jae
fcoml
and
push
movsl
idiv
or
ds
jno
nop
arpl
ja
aam
ret
sub
mov
mov
ljmp
xchg
jnp
xchg
mov
xor
ret
js
push
cmp
aaa
sbb
psrlq
push
cmp
jne
stc
mov
into
adc
fldl
movsl
std
push
mov
outsl
add
mov
in
cltd
xor
sbb
pop
cmp
popa
mov
fdivrs
lea
jne
mov
sub
mov
cmp
les
cmpsb
lcall
in
push
push
sbb
loopne
in
shlb
loopne
xchg
xor
jns
adc
in
inc
jle
cmp
mov
xor
inc
js
mov
sub
movsl
loop
fdiv
lcall
fs
and
jecxz
das
jne
fists
lret
fwait
imul
int3
int
fnstcw
sub
sahf
loopne
sarb
imul
repnz
andb
jle
add
in
rorl
mov
jo
clc
fwait
mov
jecxz
mov
das
mov
xchg
xchg
lret
lods
mov
fucom
push
sbb
sub
jnp
nop
call
ret
jo
xchg
and
test
jp
sub
fwait
xchg
loope
outsb
pop
pusha
fsubp
jle
js
call
mov
xor
cmpsl
loope
dec
loope
mov
pushf
jne
pop
and
loop
xor
aam
fcompl
cmp
xchg
sbb
cmp
mov
mov
or
pop
mov
cli
sbb
test
mov
xor
sbb
test
push
aam
sbb
call
mov
lcall
pop
ja
mov
sarb
int
cmp
mov
testb
or
popf
mov
xchg
cwtl
call
mov
mov
into
es
mov
mov
pop
test
xor
pop
in
mov
outsb
inc
sarb
dec
stos
pop
mov
fldt
pop
in
arpl
jnp
clc
adc
inc
fwait
leave
movsl
insl
or
lret
jmp
mov
inc
fucomp
jns
pop
lcall
flds
mov
xor
cli
subb
fildll
shll
sbb
out
shlb
pop
inc
mov
xchg
jge
mov
lea
add
or
add
ficompl
fidivrs
clc
pop
insb
imul
loopne
jbe
enter
mov
add
and
jo
xlat
cmp
test
rorb
aam
fistl
lret
xchg
cmp
ja
enter
mov
pop
sbb
mov
fbld
lahf
and
mov
lret
pop
imul
inc
and
mov
nop
mov
cmp
pop
icebp
push
addb
dec
fistl
lea
icebp
ds
push
inc
stos
negb
or
adc
shlb
pop
insb
lcall
subl
addl
lods
jno
lock
adc
xor
lret
pop
decl
gs
xchg
inc
mov
jge
xchg
inc
mov
adc
in
pop
cmp
roll
lods
xchg
pop
aaa
pusha
divl
mov
test
lods
cs
xchg
arpl
and
mov
std
push
imul
jecxz
pop
sti
mov
test
inc
test
lods
xchg
mov
out
mov
xor
les
xchg
xchg
lcall
test
cwtl
sbb
and
xor
ret
sbb
mov
xchg
cltd
into
negl
push
ror
mov
jo
push
mov
or
test
jns
fdivs
movsb
pusha
xchg
fs
adc
xor
sub
adc
add
stos
aas
sub
mov
dec
stos
out
cmp
add
sbb
out
jno
aaa
movb
sti
lods
arpl
push
xchg
sbb
cmpsl
idiv
jp
inc
sub
xor
inc
lret
les
imul
cmp
cmp
insb
test
jle
es
add
adc
scas
dec
jmp
imul
jae
mov
icebp
or
repnz
pop
ret
mov
in
loopne
aas
jle
add
in
sbb
ss
fs
data16
mov
outsb
and
and
add
xor
scas
or
cltd
cli
mov
and
adc
stos
fstpt
lods
mul
xor
fucomip
xchg
imul
mov
orl
stos
daa
das
pop
jnp
test
mov
push
mov
lea
mov
push
popa
xor
fcomps
mov
lret
jecxz
clc
aaa
mov
lea
data16
adcb
insb
jne
stos
lods
xchg
add
xor
nop
cmp
push
out
popf
pop
and
jl
cltd
lret
dec
or
lcall
xchg
cmc
ss
mov
pop
add
sbb
adc
dec
imul
inc
pop
inc
in
and
xlat
push
xchg
xchg
push
das
push
and
leave
and
imul
add
jno
mov
lret
or
adc
cmpl
push
cmp
inc
shrl
mov
inc
je
xchg
jle
lds
fcomip
mov
mov
sti
xchg
adc
pop
pop
movsl
mov
jecxz
loope
jns
push
lahf
and
push
mov
sub
push
andl
jle
aad
cmc
andb
push
cli
pop
xchg
mov
push
mov
push
xchg
or
sarb
fcmovnbe
or
mov
or
aas
dec
rcrb
inc
and
aaa
pop
jl
mov
movsb
sbb
outsb
jns
test
das
into
add
mov
inc
pop
xchg
neg
test
xchg
ds
mov
mov
fstpl
jp
xor
sbb
rcl
dec
or
sbb
or
pop
push
mov
gs
jo
mov
sahf
mov
pop
dec
popf
stc
mov
xchg
sbb
and
pop
stos
hlt
xor
in
pop
mov
les
icebp
sbb
repz
rcr
pop
daa
in
jl
jg
xor
mov
jb
inc
daa
mov
pop
or
xor
jo
xchg
push
push
daa
das
dec
mov
out
push
jmp
popa
inc
adc
mov
icebp
fwait
pop
rclb
inc
add
outsl
and
daa
inc
bound
mov
jnp
in
jmp
adc
pushl
out
xchg
lods
jp
int3
invd
xor
sahf
mov
adc
lcall
or
sbb
ljmp
xchg
imul
stc
mov
scas
push
mov
xor
xchg
addr16
in
es
loope,pt
dec
aaa
mov
leave
pushf
cmp
sub
cs
pop
aaa
imul
sahf
or
lock
xchg
push
inc
push
pop
cmp
out
arpl
pop
pop
xor
insb
dec
shrl
dec
mov
cmpsb
dec
notb
scas
fidivl
hlt
pop
adc
mov
loop
add
pop
mov
and
mov
jb
xchg
jb
es
jae
xchg
and
add
mov
mov
fnstsw
cmp
cli
and
push
popf
popf
pushf
ror
push
in
loopne
push
popa
dec
mov
std
or
push
and
into
mov
jmp
push
loopne
out
push
cmpsb
add
movsb
mov
cmp
icebp
jnp
cmpsb
jecxz
in
and
push
push
fnstenv
xchg
mov
adc
fldenv
test
and
and
xlat
adc
mov
ret
stos
fmul
movntps
cli
jo
inc
jo
push
sub
loop
pop
ret
mov
leave
and
out
pushl
cmp
cmp
push
pusha
push
dec
inc
mov
jge
sub
cmc
xor
inc
or
dec
jmp
cli
dec
xor
cwtl
push
roll
lds
add
ja
shlb
inc
adc
jmp
jo
sbb
xor
adc
movsb
jp
fwait
fs
push
pop
pop
mov
leave
das
xor
arpl
cmc
lret
jno
popf
inc
call
scas
out
pusha
jbe
xchg
jp
test
mov
mov
mov
les
cmc
jb
cmp
pop
ffreep
push
push
ss
lods
xchg
xor
sub
jge
je
mov
inc
sti
and
xchg
aas
pop
in
sub
vpextrq
jecxz
stos
out
add
cs
jle
aas
inc
test
cmp
ret
lds
xor
push
std
insb
imul
pop
call
aaa
adc
add
pop
jg
cmp
movsb
sbb
mov
out
mov
inc
inc
clc
push
pushl
aaa
rorb
add
cmpl
je
jge
in
or
lods
mov
add
jb
scas
dec
es
xchg
fnstenv
xchg
ja
out
mov
je
movl
call
pop
subb
popa
xor
cmpsl
mov
scas
cmp
xchg
aaa
loope
movsl
adc
lods
mov
push
ja
loop
dec
iret
dec
jp
xlat
movb
or
mov
sbb
push
sub
dec
mov
mov
pushf
pop
out
aad
dec
je
and
or
outsl
jecxz
cmp
clc
addl
sub
lods
jle
daa
push
iret
cltd
movsb
jg
in
cmpsb
xor
inc
test
dec
mov
add
jmp
test
jb
bound
movsb
push
into
dec
cmp
or
xor
aam
arpl
mov
jl
clc
mov
xorl
mov
mov
mov
pop
fdiv
and
cmp
cli
xor
mov
xor
or
lock
lods
iret
xchg
adc
adc
pusha
jecxz
movb
lcall
jg
mov
sub
jle
sub
lds
or
shll
cmp
lea
out
xchg
xchg
test
xchg
mull
push
aaa
fs
je
add
adc
and
xor
les
hlt
xchg
test
xchg
mull
push
aaa
fs
je
add
adc
and
xor
les
hlt
xchg
test
xchg
ja
mov
inc
cmpsl
push
aaa
fs
je
add
adc
push
les
hlt
xchg
xchg
xchg
mull
xor
mov
pop
je
jae
pushf
mov
mov
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
scas
testb
rol
lods
mov
xchg
clc
incl
inc
push
push
inc
daa
aaa
xor
add
adc
ljmp
mov
xchg
xchg
jecxz
jbe
data16
push
push
inc
and
add
adc
cmp
jb
inc
adc
mov
cli
cmpsb
scas
xchg
push
bound
inc
and
xor
add
jp
jae
jno
mov
movsl
mov
xchg
jno
dec
or
ja
inc
jmp
movsl
idiv
mov
dec
sub
data16
cltd
mov
mov
push
mov
loop
ret
add
sti
ret
push
and
addr16
leave
mov
lret
mov
mov
mov
cmpsb
sbbl
cltd
push
nop
lods
ret
scas
es
pop
arpl
push
nopl
sub
lret
pop
cmp
fiaddl
mov
xor
push
jle
out
scas
repnz
stc
dec
sub
lcall
mov
inc
push
add
shl
repnz
mov
cmpsb
adcb
lcallw
ss
add
jbe
nop
testb
icebp
rclb
push
xor
add
pop
popa
jbe
push
arpl
lcall
lret
cmc
shl
out
shl
pop
adc
adc
xor
adc
push
push
mov
jae
push
nop
mov
mov
mov
mov
adcb
inc
push
push
inc
and
xor
add
adc
loop
repnz
rol
mov
xchg
xchg
xchg
jb
inc
push
push
inc
and
xor
add
adc
loop
ss
push
lea
out
inc
rorl
dec
stos
mov
call
ret
cli
xor
lds
int
and
lods
outsl
xor
clc
icebp
popf
add
jb
pop
or
popf
sbb
int3
or
pop
movsl
cmpsb
sub
cwtl
pop
mov
adc
pop
push
jns
shrb
add
stos
and
and
aad
es
bnd
xchg
aad
push
pop
jb
es
cmp
movsl
cmp
fdivrl
js
jne
and
push
mov
repnz
leave
bound
sub
js
cmpsl
pop
cmpsb
inc
adc
sahf
bound
daa
xlat
and
and
xlat
add
or
nop
mov
ds
les
bound
cltd
and
cmp
jmp
jno
aas
jmp
mov
jp
imul
into
and
add
push
inc
in
test
dec
sbbb
jp
add
inc
mov
lods
pushf
test
jnp
pop
out
pop
lcall
imul
or
jmp
adc
stos
insb
jle
xor
leave
sub
icebp
adc
inc
pop
shlb
push
and
cmp
or
scas
ret
clc
pop
sti
int3
add
push
shll
das
dec
xchg
adc
mov
mov
mov
cmp
es
out
imul
adc
cmpsl
mov
mov
repnz
pusha
add
iret
movsl
jp
sbb
ljmp
sbb
je
dec
js
jae
mov
mov
mov
mov
push
scas
or
cmp
dec
sub
add
dec
shll
sbbl
xchg
ja
cltd
shll
mov
dec
rcrb
jle
popa
dec
outsl
loop
pop
and
push
or
push
fcmovnbe
das
sub
fnstsw
jo
out
xor
add
fisttpll
mov
iret
adc
xor
pop
sub
xor
mov
movsb
cmp
push
xchg
cmp
clc
xor
lahf
hlt
pop
cmp
inc
jb
pop
idivb
gs
dec
xchg
xor
outsl
aad
bound
sbb
sub
jge
adc
add
mov
lods
popa
int
push
cmp
jbe
xlat
scas
inc
jle
adc
lahf
clc
lock
pop
lea
lcall
jg
sbb
aad
movsb
shll
dec
je
fimuls
sbb
mov
in
clc
push
and
xchg
push
scas
push
pusha
stc
mov
lds
cmpsb
fidivrs
shlb
sbb
mov
and
jbe
rcll
dec
call
test
xor
sbb
xor
mov
cli
loopne
inc
inc
icebp
gs
cmpb
inc
push
pop
sar
imul
jo
movsl
add
aad
sbb
pop
call
adcl
subb
popf
in
cmpsb
or
ret
jle
aaa
pop
ds
call
inc
adc
mov
shlb
and
mov
in
mov
push
add
lahf
enter
testl
sbb
in
loop
out
scas
jecxz
jle
xor
or
mov
or
dec
pushf
nop
stos
arpl
int
jecxz
mov
push
sbb
rclb
or
test
cmpsl
and
cmc
cli
mov
and
or
mov
adc
adc
sub
gs
jae
loop
stc
xchg
mov
adc
inc
scas
adc
sub
bound
inc
test
call
add
loope
cli
mov
ret
jle
fnstcw
and
lret
and
mov
and
or
stc
jl
lret
test
aas
mov
negb
mov
aam
and
push
mov
cmpsb
mov
mulb
cmp
add
js
jno
mov
cmp
das
es
sbb
es
cwtl
mov
dec
mov
jne
or
les
pop
pop
and
lods
lret
and
sti
test
add
pusha
enter
fcmovu
stc
movsl
mov
push
push
outsb
xlat
imul
xor
or
lahf
and
gs
adc
push
popa
out
insb
xchg
cld
mov
push
and
dec
push
cmpsl
sti
scas
xchg
test
mov
sub
repnz
popf
cwtl
gs
push
adc
mov
shll
cmp
adc
in
push
mov
jmp
stc
dec
push
mov
aam
mov
movsl
test
int
push
sub
stos
stos
jnp
xor
pop
ficompl
shlb
vandps
cltd
fs
in
scas
and
or
cmp
mov
popl
add
mulb
adc
and
pop
aas
mov
push
adc
lret
aad
xchg
sbb
push
and
inc
pushf
mov
sti
xor
aam
push
cmp
mov
push
or
sbb
inc
lea
sbb
dec
add
cmp
jecxz
or
sti
aaa
push
mov
jb
mov
mov
lret
pop
enter
push
cmp
mov
gs
je
in
lods
sqrtps
push
in
and
jbe
das
addr16
out
push
mov
push
push
lret
push
shlb
ret
jg
icebp
and
adc
pop
fcom
ficomps
cmp
mov
subb
test
aad
shlb
dec
push
std
mov
jge
mov
pop
cltd
inc
arpl
lret
xor
xor
inc
mov
jl
xchg
inc
xor
fidivrs
push
in
outsb
mov
lds
and
pop
push
leave
arpl
lods
in
aas
sbb
loop
call
dec
or
dec
mov
mov
push
ss
mov
call
and
fldenv
mov
mov
in
call
pop
or
sahf
int3
inc
orb
daa
outsb
push
iret
rcrb
fwait
mov
mov
sbb
fwait
cmp
jle
push
push
rcrb
scas
stos
loopne
push
cltd
shl
fs
jmp
leave
xor
call
xor
jne
sub
sub
cmpsb
adc
icebp
push
loop
dec
test
int3
aam
unpckhps
rolb
sahf
or
loop
aad
data16
in
dec
test
push
and
notb
mov
aam
ljmp
test
adc
xchg
dec
insl
inc
pop
adc
adc
pop
nop
adc
sub
pushf
lcall
adc
repz
lea
adc
test
push
hlt
mov
filds
insb
mov
addr16
cmp
pop
rorl
aad
ret
cmp
popf
xchg
cmpsl
mov
xor
jne
insb
gs
and
es
fiadds
push
mov
jae
in
cmpsb
dec
test
pop
sbb
popw
inc
repnz
nop
test
shll
ja
iret
push
cmpsl
imul
mov
fwait
sub
pop
and
lds
jae
test
scas
or
mov
cmp
pop
ds
popa
push
jge
rcrl
adc
push
mov
jne
jo
cltd
pop
or
rclb
xchg
sbb
cmp
outsb
add
int
mull
xchg
rclb
je
call
adc
or
movsb
xchg
pop
push
sbb
int3
jb
sar
hlt
pop
push
sbb
jp
cmpsl
jl
pop
test
in
movsb
divb
daa
fildll
sub
sub
test
xlat
arpl
xchg
dec
adc
inc
jmp
repz
mov
or
rcrl
push
mov
cmp
out
out
or
iret
pop
cltd
fmull
cltd
cld
sub
fildll
scas
loop
inc
pop
cmp
insl
xlat
notb
pop
test
jle
fistps
inc
lock
loop
bound
xchg
dec
ror
stos
stos
and
daa
cmp
or
lahf
jg
out
sub
pusha
pop
adc
fisubrl
notl
pop
xchg
mov
out
xchg
lods
imul
icebp
popf
and
and
add
jnp
mov
shlb
lods
lcall
call
andb
add
movsb
sub
adc
enter
js
pop
jp
arpl
adc
jecxz
jmp
movups
fmuls
icebp
cltd
repz
push
mov
loop
push
pop
ljmp
aas
pushf
mov
std
lock
sbb
jns
es
ret
lds
cmp
cmpsl
jg
inc
out
or
outsb
add
test
jnp
aad
arpl
xlat
int3
imul
sbb
mov
pop
xchg
pop
push
lahf
sbb
dec
adc
call
jecxz
xchg
cmp
ja
js
inc
push
es
push
dec
les
jns
test
sbb
xchg
frstor
jae
add
jg
out
enter
fstpl
cmp
test
jo
loope
insb
ja
ljmp
notl
sbb
in
sub
inc
repz
pop
sti
mov
outsl
inc
mov
sarl
jns
test
daa
and
shlb
loope
in
pop
jmp
cmpsl
xchg
sbb
push
aaa
cwtl
push
mov
xchg
push
fsubs
hlt
out
or
mov
jns
or
test
out
es
pop
lret
xor
pop
xor
das
daa
add
roll
imul
push
sbb
rcrl
roll
adc
stos
test
sarl
sub
push
push
jne
rcll
scas
cmp
outsb
in
out
or
mov
lds
push
push
cmpsl
xor
xor
in
in
bound
push
xchg
gs
mov
nop
or
mov
fnstenv
push
cmp
push
pop
lahf
inc
bound
mov
mov
jae
loopne
jle
jnp
push
popf
roll
add
sub
ds
or
cmpsb
adc
mov
into
sub
mov
in
dec
movsl
cmp
lret
cmp
sti
cli
sarb
mov
out
cmpsl
push
xchg
mov
xor
adc
add
or
push
pop
jecxz
out
xor
in
bound
idivb
fs
push
pextrw
sbb
in
lcall
repnz
cmp
std
pop
bound
ficompl
dec
xchg
mov
das
sbb
cmp
ljmp
popa
mov
mov
pop
hlt
mov
lock
mov
xchg
jp
jp
inc
fmull
pushf
je
pop
sahf
push
xor
scas
pop
das
dec
test
je
pop
ljmp
adc
les
aad
pop
mov
mov
stc
jno
dec
jo
imull
push
sbb
or
jae
push
idivb
shlb
push
jb
gs
sbb
loope
jno
adc
addl
gs
mov
add
and
pop
sbbl
clc
jns
leave
sub
scas
icebp
outsb
mov
enter
rorb
addr16
jno
punpckldq
push
int3
out
test
mov
sbb
inc
cmp
and
std
call
in
inc
mov
mov
addr16
dec
pop
das
push
pop
xor
sbb
test
rclb
gs
xchg
cli
fdivs
jo
js
push
jecxz
int
arpl
int
pop
add
cmpsl
lods
jg
and
movsl
lds
out
pop
dec
out
jnp
fists
sarb
lods
inc
mov
lock
nop
insl
mov
imul
push
insl
imul
faddl
aas
jnp
clc
movb
xlat
nop
jecxz
and
and
add
rclb
lock
out
lret
aam
fdivs
pop
mov
jb
pop
mov
add
xor
pop
les
repz
jbe
pushf
inc
jmp
fwait
sbb
fmull
shrl
mov
or
sarb
push
lcall
sbb
mov
movsl
outsl
int
hlt
inc
cmp
scas
push
jbe
dec
pop
pop
cmp
outsl
ret
sti
push
and
cmp
and
ret
lock
lret
pop
lods
add
push
outsb
shlb
push
dec
mov
rcrb
cltd
cmp
xchg
and
push
aas
add
dec
out
pop
mul
mov
out
jg
cbtw
jg
lods
shrb
adc
push
fbld
adc
dec
jp
pusha
sub
or
test
sub
mov
pop
xchg
sub
imul
shll
jl
call
fildll
movsb
popa
mov
imul
in
das
fadd
adc
in
mov
dec
adc
jns
and
push
mov
outsl
fld
pop
stos
push
mov
mov
imul
hlt
jae
cmp
sub
adc
add
mov
jle
xchg
insl
inc
mov
std
call
fistps
fiadds
jnp
pop
push
sbb
pop
int3
push
ljmp
jb
sub
not
lods
fucomip
dec
roll
sub
sub
sti
cmp
in
and
les
mov
stos
subb
imul
inc
mov
mov
imul
mov
dec
pop
and
xchg
xchg
arpl
xchg
mov
sbb
xchg
mov
lock
xor
in
dec
or
add
ret
out
aas
inc
into
je
pushl
xor
sbb
adc
jo
pop
jne
les
pusha
mov
shrl
into
push
pop
scas
jne
pop
sbb
push
add
js
and
roll
and
aaa
fdivl
sub
add
jne
clc
mov
rcll
out
mov
lahf
adc
mov
out
add
mov
lcall
call
mov
cs
clc
outsl
sub
mov
shll
fmul
xor
or
lcall
cmp
fs
in
inc
leave
ja
mov
or
insl
sub
scas
lahf
dec
pop
inc
push
cmpsl
aaa
add
cmp
cmpb
ret
into
in
jns
rcl
inc
inc
cwtl
repz
xor
sbb
push
sbb
sub
add
je
int3
imul
nop
aam
aam
push
dec
jle
stos
movsl
sahf
mov
adc
dec
jns
int
out
loope
or
imulb
pushf
fwait
jmp
jl
dec
mov
je
jo
push
mov
pusha
arpl
addb
or
jle
fnstsw
xor
jns
cmp
sar
dec
pop
or
aam
fldenv
sbb
xor
adc
dec
clc
cmp
mov
sti
mov
mov
jno
insb
mov
pop
dec
or
aad
cmp
outsl
call
mov
out
pop
mov
sbb
inc
push
dec
mov
cltd
mov
scas
mov
xor
stos
sbb
mov
insl
loop
or
rcrl
dec
jmp
inc
mov
test
cmp
fimuls
mov
lcall
stc
push
or
cmpsl
push
stos
mov
mov
or
and
popf
cmp
dec
test
lret
das
ficompl
mov
in
ds
sbb
dec
push
and
mov
repz
outsb
sbb
xchg
sti
push
adc
daa
and
pop
fidivl
data16
dec
sbb
jmp
dec
cmpsb
sbb
sahf
subl
push
andl
or
sub
cmp
idiv
shrb
leave
into
aas
aad
xchg
movsl
shl
sbb
lret
adc
dec
mov
ficompl
inc
outsb
cmp
out
insb
mov
or
pop
add
cwtl
aaa
scas
mov
ror
inc
pop
cmp
adc
cltd
xor
daa
xchg
movsl
adc
xchg
insl
xor
sub
fcmovnb
push
push
out
jnp
pmulhuw
and
clc
imulb
stos
jle
insb
jno
clc
add
adc
js
xor
inc
xchg
rcrb
add
in
jmp
adc
int
adc
mov
or
nop
movsl
pop
pop
lock
pop
icebp
fmuls
into
jp
scas
adc
mov
cltd
cli
sahf
addr16
fbld
in
neg
push
imulb
outsb
push
movsl
xor
mov
les
mov
mov
pop
addr16
or
test
push
mov
and
sbb
mov
rorl
pushf
ja
adc
add
fldl
cli
orl
iret
js
test
dec
mov
sbb
dec
push
sarl
xchg
addr16
jnp
mov
es
outsb
pop
jno
popf
roll
pop
add
push
xlat
loopne
std
loopne
js
jecxz
out
dec
in
push
cli
into
adc
xor
loope
push
int3
push
pop
fcomps
sbb
cwtl
inc
sbb
filds
and
ljmp
mov
jne
test
xor
les
sbb
mov
jns
adc
psubq
cwtl
jo
jg
cmp
dec
push
in
xchg
jecxz
inc
jmp
and
shlb
repnz
xchg
les
push
rcll
flds
jg
and
je
mov
sbb
lods
jge
cmp
jp
add
xchg
dec
or
pop
push
push
es
xchg
pop
js
push
rorl
xchg
pop
je
sbb
add
repnz
mov
push
mov
shll
xchg
jbe
sti
xchg
inc
movsl
push
xlat
pusha
sub
aam
rcl
ja
fs
mov
fidivl
mov
or
push
and
push
inc
push
lock
push
mov
int
push
mov
ror
addr16
imul
clc
add
divl
movb
fstpt
push
ds
mov
xlat
ret
es
stc
aad
sub
cwtl
jecxz
pop
jge
in
and
push
inc
mov
inc
pop
or
orl
outsl
hlt
int3
and
andl
into
call
xchg
xor
add
push
cmp
sbb
andb
sbb
scas
mov
add
les
testb
lock
scas
xor
call
adc
or
xchg
out
push
dec
inc
or
sub
popf
xor
pop
or
clc
rep
xchg
mov
mov
adc
fs
lea
leave
jne
imul
in
mov
shrl
insl
push
lds
inc
fisubrl
pop
dec
dec
pop
dec
mov
cmp
xchg
testl
das
clc
mov
cmp
stos
inc
mov
sbb
and
pop
aaa
xor
mov
push
add
xchg
mov
orl
gs
popf
or
ja
aad
out
mov
cmc
xchg
pop
scas
shrl
inc
movsl
leave
ret
out
in
loop
cli
push
std
pop
mov
and
andl
jge
push
popa
and
sbb
mov
inc
mov
stos
cmpsb
cs
mov
xchg
in
jle
xor
loopne
push
cmc
stos
or
pop
dec
mov
aas
sbb
jbe
popf
incb
xchg
orb
cmp
int3
fisttpl
lret
fsubrp
popf
shlb
push
sar
lea
push
and
movsb
cmp
fstps
imul
jo
jge
fdiv
push
sar
daa
and
xor
pop
ret
adc
inc
aas
inc
mov
daa
cmp
testl
ljmp
and
jmp
inc
cmp
xor
popf
mov
dec
mov
jecxz
push
sbb
pop
sub
ss
sbb
pop
cli
arpl
jns
jl
mov
cmp
es
fdivrl
aam
add
xchg
imul
jp
add
imul
std
cmp
sbb
inc
mov
sti
cmpsb
arpl
movsl
loopne
enter
test
shll
mov
and
test
rorl
adc
and
adc
pop
gs
cli
aaa
cmpsb
push
movsl
gs
jnp
add
shlb
cmc
or
stc
xchg
fsubp
push
movsb
adc
jge
incb
lcall
ds
jne
jnp
sahf
mov
faddl
sbb
nop
mov
andl
sub
js
jns
xor
ret
shl
das
or
mov
in
pop
negl
enter
int
bound
cmp
jmp
enter
jg
cmp
add
clc
loope
sbb
mov
loope
push
cmp
cmp
push
dec
pushf
lods
rorb
lods
pop
pop
cli
xor
inc
jmp
push
fcmovbe
mov
cmc
sbb
xchg
xor
inc
std
xor
cmp
lcall
inc
and
sub
imul
pop
jp
fistpl
cmp
rolb
ficompl
dec
test
cwtl
cmp
adc
lcall
dec
lds
sbb
cmp
pop
xchg
sbb
mov
add
add
inc
or
mov
int3
or
int3
outsb
lods
pop
xlat
xlat
clc
dec
add
or
jb
mov
pop
add
adc
lret
loop
sub
arpl
cltd
fmull
or
fiaddl
sub
sub
mov
add
je
out
js
mov
sub
sti
sbb
cmc
shl
sbb
loope
xchg
sti
cmp
dec
dec
pop
iret
pop
mov
cmp
leave
jae
pop
push
std
and
shrl
ret
xchg
inc
xor
insb
cmp
pop
flds
cmp
and
pop
test
sub
pusha
jae
jecxz
ja
lahf
enter
sub
fisubrs
mov
outsb
adc
xchg
add
in
mov
xchg
fisttps
mov
je
add
add
xchg
std
jle
or
fdivrl
bswap
jge
cmp
sub
push
mov
pop
inc
xchg
test
leave
jo
cld
sbb
sbb
dec
mov
or
push
shll
push
jp
in
icebp
pop
lea
ret
int3
movsb
push
jg
xchg
xchg
xor
fsts
aas
pop
rolb
mov
xor
push
dec
pop
adc
cmpsl
test
xchg
lret
mov
adc
mov
les
dec
int
rcll
rol
loop
ret
push
jns
jo
push
fdivrs
cli
add
cli
in
xlat
inc
inc
popf
scas
aam
idivb
inc
mov
test
test
jno
dec
sub
jno
sbb
or
fsts
xor
fcomip
xchg
xchg
sti
pop
mulb
out
into
mov
xchg
xchg
xchg
jb
inc
push
push
inc
and
xor
add
adc
loop
repnz
rol
mov
xchg
xchg
xchg
jb
inc
push
push
inc
and
xor
add
adc
loop
icebp
out
rol
mov
xchg
xchg
xchg
jb
dec
push
push
inc
and
sub
push
push
and
cli
neg
out
cli
mov
xchg
adc
jbe
int3
call
mov
in
stc
int3
int3
int3
int3
int3
loop
cld
sbb
rcrl
and
push
add
add
add
add
push
add
lret
add
leave
add
add
add
add
add
and
icebp
add
add
add
add
add
cli
add
add
add
add
add
flds
push
add
jl
add
in
sbb
outsl
add
add
add
pop
add
add
pop
add
add
add
bound
arpl
jns
popa
add
add
lcall
add
cmpsl
add
add
add
add
dec
add
add
add
add
add
sub
out
add
lea
pop
add
add
mov
popf
add
inc
add
add
sbb
add
add
add
lret
add
add
add
add
add
push
add
add
add
add
add
sbb
mov
out
add
add
add
inc
add
xchg
push
pop
add
add
cmp
out
add
add
add
mov
add
add
add
add
int
push
add
fildl
xor
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
sub
add
pop
add
add
popa
add
pop
add
add
add
and
push
add
dec
add
add
inc
add
pop
add
add
dec
add
pop
add
add
inc
add
add
add
add
mov
cmp
popf
add
xchg
add
add
fildl
sbb
adc
xchg
add
add
add
jl
push
add
add
pop
add
add
add
add
add
and
push
add
add
add
add
jns
pop
add
push
add
push
add
mov
push
add
add
add
add
add
add
add
add
add
add
add
sbb
outsl
add
add
jae
push
add
xor
push
add
add
add
add
stos
add
outsl
add
add
add
add
add
add
add
out
add
add
add
rolb
add
out
add
add
add
add
add
add
add
mov
sbb
enter
and
dec
add
add
add
add
pop
add
add
loopne
ljmp
add
add
xchg
add
add
test
loope
add
add
mov
sub
add
add
roll
test
insb
add
or
les
bound
xchg
add
dec
add
add
add
xor
add
add
add
dec
add
dec
add
add
add
add
mov
outsl
add
add
flds
and
mov
insb
add
inc
add
add
add
add
or
add
jns
adc
je
test
add
jb
sub
inc
add
add
add
popl
sub
inc
add
les
insb
add
add
adc
xchg
add
add
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
add
aas
add
add
incl
inc
add
pop
mov
loopne
jb
push
add
add
add
pushf
out
mov
mov
cmpsl
loop
push
cmp
loope
push
jne
out
outsb
or
cmp
in
pop
jge
cmp
fadd
xchg
shlb
aam
mov
nop
rorb
push
jnp
mov
es
add
adc
shrl
sub
andl
or
dec
pop
mov
clc
in
outsl
inc
mov
or
vmwrite
or
daa
adc
clc
push
inc
pop
das
jbe
paddb
mov
xor
in
inc
add
jp
mov
mov
cmp
mov
pop
jmp
and
add
icebp
arpl
in
cmp
add
inc
inc
jb
sbb
inc
out
inc
testl
jb
adc
or
imul
lods
mov
ss
bound
adc
out
aad
lret
test
ret
enter
xchg
dec
stos
in
jge
test
and
dec
jnp
imul
jns
mov
jns
aam
lcall
test
dec
repnz
ret
xchg
sbb
xchg
mov
andps
pop
dec
subb
jmp
punpckldq
into
lcall
jne
movsb
jnp
jecxz
sbb
dec
xchg
push
jnp
cmc
push
push
loop
xor
aad
js
dec
lahf
sub
sub
push
adc
inc
mov
cld
lret
adc
inc
aad
call
pusha
fnstsw
gs
addr16
in
dec
adc
pushf
je
jg
adc
adc
jmp
inc
pop
sbbb
jbe
cmpsl
daa
push
stc
int
jg
jg
ss
push
enter
pusha
jae
cmp
int3
inc
pushf
or
xlat
and
pop
fisubs
imul
sub
adc
jl
std
aaa
test
nop
xchg
add
inc
test
imul
mov
cmp
hlt
pop
sub
adcl
mov
ret
fcmovb
pop
test
push
mov
insb
adc
ret
jns
jno
icebp
pop
push
leave
mov
shll
xchg
jne
jns
inc
test
lret
rclb
sbb
imul
lcall
push
aam
push
aad
out
or
push
jl
add
push
movsl
and
xlat
dec
scas
scas
jle
push
xchg
pop
jp
pop
cmp
cli
scas
fwait
imul
and
cli
push
into
xchg
jbe
ffree
add
divl
in
pop
je
dec
stos
mov
mov
js
pop
and
inc
xor
scas
sahf
add
dec
aaa
popf
or
xchg
iret
or
add
xchg
mov
fbstp
add
add
add
add
loop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
add
add
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
add
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fadds
add
clc
add
add
add
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
add
pushf
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
rolb
add
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
daa
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
daa
add
fsubl
add
aam
add
int3
daa
add
les
add
mov
daa
add
lods
daa
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
sub
add
add
add
add
add
add
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
sub
add
sub
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
