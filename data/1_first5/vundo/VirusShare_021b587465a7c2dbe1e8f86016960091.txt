dec
pushl
ror
and
add
pop
pop
add
inc
adc
adc
les
ljmp
or
adc
or
pop
ret
adc
and
scas
sti
iret
je
ret
call
aaa
add
or
aaa
or
fcmovnu
outsb
pop
pop
pop
pop
xor
or
pop
or
mov
mov
leave
pop
pop
jge
or
incl
add
call
mov
jmp
in
mov
push
cwtl
or
add
push
ljmp
repnz
sbb
idiv
cmp
adc
pop
ds
fisubrs
push
les
adc
and
fwait
jne
enter
ret
adc
sti
ss
test
aas
ficompl
mov
jecxz
or
cmp
and
lods
idiv
pop
jbe
shll
mov
rorl
jp
push
lods
sbb
mov
and
stc
mov
mov
adc
cmp
test
adc
sbb
gs
adc
xadd
in
ja
imul
mov
sbb
das
out
push
mov
push
arpl
das
fcomi
lcall
mov
mov
je
or
and
inc
adc
das
rorb
sbb
addb
call
adc
adc
sub
adc
add
je
inc
jg
sub
or
js
and
add
or
adc
pop
divl
lea
je
outsb
cmp
sti
outsl
out
je
or
push
sbb
loopne
adc
sub
add
jg
aas
push
je
call
adc
call
add
sub
imul
cmpsb
hlt
adc
jbe
add
mov
cmp
add
mov
out
or
push
in
mov
test
leave
adc
stos
cmpsb
pushw
inc
out
sbb
cwtl
mov
add
or
sbb
aas
clc
out
fsubr
adc
push
bound
or
test
dec
lock
xor
je
or
hlt
out
out
lock
pushl
fcoml
loopne
jmp
inc
call
push
and
cmpsb
or
jmp
shlb
call
in
add
pop
call
xchg
call
sbb
sbb
xor
adc
std
lret
push
or
inc
add
xor
jg
push
dec
fsubl
cs
mov
insb
jp
push
sbb
ja
out
je
adc
leave
add
fadds
jg
sbb
ss
mov
dec
je
add
popa
imull
fstpt
mov
jno
decl
js
or
cld
adc
fldt
clc
push
lret
pop
repnz
mov
lcall
jnp
pusha
lcall
adc
int3
adc
je
rolb
js
call
jmp
call
adc
rdmsr
clc
xor
adc
scas
add
push
xchg
int3
push
dec
xchg
jmp
push
add
push
sbb
divl
decl
ret
push
or
daa
or
jb
push
lea
std
lret
and
aam
adc
pop
sti
add
or
pop
cld
in
push
adc
movsl
lcall
or
cmpsb
dec
mov
cwtl
jg
push
and
adc
dec
adc
sbb
and
cmp
dec
es
adc
outsl
add
cld
ja
repz
sbb
or
test
add
jno
test
out
test
or
pushf
pusha
sub
adc
xor
or
sbb
clc
call
sub
adc
pop
jo
pop
adc
adc
insb
mov
cltd
or
jno
adc
lds
sbbb
adc
adc
push
lock
mov
add
jae
aaa
sti
mov
push
pop
icebp
mov
or
add
jge
or
and
add
adc
sbb
or
lods
test
or
adc
adc
cmp
ja
push
cmp
call
mov
and
repnz
loop
mov
mov
dec
clc
clc
test
daa
pop
pusha
adc
jo
fs
mov
adc
fs
jbe
push
out
sbb
mov
sub
cs
xor
inc
mov
rorl
je
ljmp
je
mov
jp
call
aam
or
inc
arpl
stos
add
dec
incb
cmpsb
mov
or
dec
jo
xchg
repnz
add
adc
mov
jg
jle
repz
jmp
sti
call
adc
adc
or
mov
loope
add
hlt
out
repnz
je
std
sbb
stos
je
decb
rorb
jbe
jle
xor
and
aaa
ds
cmp
sbb
test
adc
movsl
outsb
insl
js
rcrb
xchg
out
adc
cmp
mov
mov
jg
ljmp
fs
hlt
add
adc
push
fcmovnu
js
orb
je
adc
repz
dec
fdiv
fildll
jl
out
and
dec
inc
inc
adc
adc
sahf
or
xor
pushf
orb
insl
rorl
mov
mov
mov
add
lcall
or
inc
adc
mov
dec
and
dec
call
adc
xchg
mov
jp
je
movsb
adc
std
outsl
adcl
cld
testb
pop
sbb
call
js
adc
and
fistl
repz
sub
fmulp
test
mov
add
or
insb
sti
insb
je
add
push
xchg
aas
dec
lcall
aad
jmp
jg
adc
mov
and
mov
jg
and
dec
and
pop
adc
call
push
push
lds
inc
xchg
sub
adc
jb
idiv
adc
adc
in
out
cmpsb
je
mov
mov
add
xchg
or
and
pusha
outsl
clc
jp
fidivl
call
pushf
pop
dec
lock
pop
mov
or
xchg
add
or
lods
and
in
or
add
call
ficoml
add
aaa
and
adc
pop
test
hlt
adc
pop
hlt
sahf
jb
mov
jbe
sub
cmpb
jg
clc
in
inc
hlt
push
or
enter
and
inc
mov
push
mov
push
adc
or
add
jle
outsl
dec
mov
call
push
call
jmp
sbb
sub
pop
fcom
je
rorb
mov
mov
mov
insb
add
cwtl
ss
nop
push
pop
in
jmp
icebp
adc
adc
dec
adc
sbb
andb
jo
add
push
push
adc
call
enter
dec
call
loope
pop
outsb
sbb
test
adc
ja
add
insl
add
inc
dec
jp
adc
std
add
jno
adc
loopne
sub
hlt
stos
adc
cli
sahf
call
add
cld
sbb
adc
cmp
das
dec
pop
push
jle
or
xlat
std
push
mov
add
mov
adc
dec
dec
cmp
and
cmp
xlat
incl
inc
shlb
or
adc
fidivrl
notb
sub
movsl
clc
mov
push
cmc
mov
sub
je
sbb
mov
cmc
sub
adc
push
dec
inc
cmp
mov
pop
mov
mov
mov
lods
or
lret
add
das
outsb
das
inc
rorl
cs
cmp
sub
fwait
push
fstpt
lock
xor
in
cmpsl
add
call
jb
jp
js
mov
mov
add
hlt
pop
jmp
add
mov
jmp
jge
lods
stos
loopne
push
das
xor
pusha
dec
xchg
repnz
mov
or
cmp
sub
enter
pop
mov
adc
adc
xor
adc
push
or
inc
xor
fs
inc
or
jne
add
dec
pushf
mov
cmc
out
sbb
adc
je
pinsrw
ret
lcall
loope
or
push
push
or
icebp
and
stos
addr16
inc
add
adc
movsb
and
or
add
adc
cltd
js
or
xor
or
testl
scas
into
add
data16
ss
adc
add
aam
es
or
or
jg
add
cs
adc
call
pusha
rorb
je
testb
js
je
and
das
lods
mov
inc
filds
mov
ret
data16
adc
and
push
ds
lock
adc
pusha
mov
and
sub
pop
shlb
or
test
sub
pop
aam
insb
imul
jb
cmp
jo
xor
call
shl
shll
or
pushf
add
dec
push
aam
adc
in
push
or
adc
and
lock
fstpt
and
sub
pop
xor
cmp
adc
mov
sub
sbb
and
mov
jecxz
fcoms
test
or
call
jl
push
sbb
adc
imulb
loop
das
sub
addr16
stos
stos
push
sbbl
rorl
jge
mov
dec
test
call
in
fwait
or
ret
negb
out
or
decb
cmc
cmpl
or
dec
es
pop
outsl
jg
sbb
pop
xor
imulb
shrl
scas
or
adc
push
or
and
mov
add
js
mov
push
inc
sub
sbb
mov
test
cld
add
cmp
inc
popf
adc
incl
test
icebp
cmpsb
les
stc
add
inc
call
dec
cli
sub
cmp
adc
pop
je
es
mov
nop
cltd
mov
rcr
aad
je
movsl
decl
push
add
adc
mov
pop
jnp
dec
and
sahf
inc
out
xor
push
cld
ds
adc
dec
jbe
push
je
movsb
push
subb
adc
push
sub
int3
cltd
adc
push
adc
or
add
pop
add
call
add
sbb
add
out
inc
push
lods
push
int3
jbe
and
loopne
lcall
mov
and
ljmp
stc
add
int
lret
jbe
test
pop
aas
stos
mov
call
xor
xchg
outsb
inc
sti
xor
jl
add
push
and
adc
cld
and
outsb
pop
hlt
div
lea
sbb
movb
add
jae
pushf
sbb
sub
inc
test
push
or
or
adc
push
adc
adc
daa
inc
rorl
aaa
test
mov
mov
push
add
mov
adc
sub
pop
fstpl
in
cwtl
je
insb
cli
adc
sub
adc
mov
aas
mov
sub
je
jle
test
loop
cs
jp
popa
je
push
call
sub
add
es
add
push
pop
dec
sub
lods
jbe
scas
test
add
adc
data16
ud0
aad
ljmp
call
jp
xor
jnp
je
or
fwait
shll
mov
movsl
and
enter
je
loop
fildl
les
orb
inc
mov
in
cli
mov
mov
out
add
adcl
in
sbb
sbb
scas
scas
mov
add
xchg
adc
inc
inc
push
cmp
or
mov
adc
xor
mov
push
je
aas
adc
push
enter
cmp
adc
loope
pop
add
pop
leave
jp
push
bnd
adc
sub
jb
cli
lret
adc
pop
sub
iret
je
or
into
lahf
pop
push
ret
adc
scas
ret
in
stos
mov
out
sbb
mov
add
xchg
jge
xchg
scas
add
loopne
andb
pop
push
lds
add
push
je
or
or
sbb
xor
xor
les
ljmp
stos
mov
dec
mov
repnz
sbb
add
mov
mov
add
pop
hlt
mov
xchg
sub
int3
sahf
repz
inc
sbb
xchg
call
pusha
mov
xor
or
subb
push
xchg
pop
call
popw
jl
dec
xchg
sbb
add
scas
adc
ss
bound
jo
das
xorb
call
add
sbb
out
out
jo
pusha
je
jns
xchg
push
mov
sub
dec
pusha
cli
xlat
daa
mov
and
and
dec
adc
inc
xorb
push
adc
sbb
push
sub
je
push
pop
arpl
lods
fnstsw
pop
sbb
cmp
mov
popa
adc
jp
push
les
push
inc
xchg
pop
ljmp
push
push
xchg
es
notb
xor
incl
add
pop
adc
or
call
adc
push
call
idiv
add
adc
jne
ljmp
mov
sbb
adc
or
xor
or
mov
add
jbe
mov
pop
pop
clc
pop
pushf
testl
test
into
push
or
call
loope
pop
mov
cmp
leave
push
sbb
pop
mov
mov
es
xor
int
in
jmp
call
jne
sbb
lock
filds
xchg
jl
and
jp
push
ret
push
cs
xor
adc
sbb
aad
pop
outsb
or
cmp
mov
mov
cmp
or
test
jns
inc
or
call
add
call
dec
fildll
ds
adc
sub
push
das
add
pop
icebp
add
rcr
push
adc
std
or
jb
xorb
shll
mov
jb
push
pminub
or
rorb
or
cmp
outsl
js
cmp
sbb
icebp
dec
cld
aas
sbb
push
call
ja
add
stos
push
fistps
ficomps
add
adc
pop
or
cmpsb
adc
or
rorb
notb
or
or
add
ja
iret
push
je
lahf
xchg
inc
mov
negb
xor
call
dec
notl
call
cmpb
pop
gs
rol
inc
es
insb
cmp
dec
xchg
fdivr
push
jg
cmpsb
cmp
or
add
roll
xchg
ret
jg
adc
lea
cs
add
insl
cmp
lcall
inc
arpl
nop
je
stos
mov
mov
pop
cmp
mov
pop
dec
aam
push
and
rorb
repz
or
outsl
jp
stc
jb
add
lds
fs
out
push
call
pop
lods
ret
or
inc
fdivrl
add
cli
push
mov
pop
sub
push
push
leave
add
testl
push
and
pop
daa
jp
jne
pop
adc
enter
or
stos
je
nop
adc
subb
push
outsb
cli
xchg
lret
mov
xchg
sub
or
dec
cmp
rclb
fadds
lock
pop
inc
mov
inc
jmp
notb
add
push
loopne
fstpt
hlt
rorb
mov
mov
shrb
jle
adc
ds
inc
scas
jp
xor
add
jmp
add
add
jle
inc
cld
inc
lea
insl
je
outsl
pop
add
call
mov
adc
mov
call
pop
jle
pop
sbb
das
shlb
adc
cld
pop
mov
je
ds
pop
arpl
popa
push
pushf
push
push
bound
sub
inc
cmp
add
loopne
sbb
pusha
add
adc
lods
jne
mov
int3
pop
repnz
dec
cwtl
fstp
mov
int3
rcll
or
inc
sbb
cwtl
out
xorb
push
aam
hlt
add
in
add
mov
mov
shrb
rclb
jo
cmpsb
cmp
sub
push
inc
lret
enter
jo
or
jle
mov
filds
xor
mov
hlt
add
sub
filds
sbb
cmp
xchg
out
adc
push
or
sub
or
push
in
push
inc
cmp
jbe
cmp
call
push
je
adc
loopne
sub
add
movsb
and
ds
fbstp
loop
lock
or
cs
mov
call
mov
mov
dec
je
fcomps
lcall
lcall
xchg
inc
or
scas
or
push
cs
add
je
or
adc
mov
ljmp
clc
push
ja
cltd
dec
push
inc
add
xor
mov
push
mov
and
mov
out
add
push
adc
or
call
test
xchg
push
fmull
mov
clc
or
out
test
loopne
and
fistpl
and
loope
rcrb
int3
sbb
mov
test
push
std
call
test
or
call
xor
push
xor
push
cli
mov
jle
inc
xor
mov
jl
mov
push
adc
sub
call
adc
or
adc
ja
call
jge
sub
sbb
adcl
sbb
rolb
js
push
xor
lcall
dec
add
push
adc
insb
adc
imul
jl
subb
mov
andps
stc
aam
enter
out
inc
je
jae
adc
adc
dec
adc
push
shl
inc
pop
push
jno
mov
aam
mov
mov
ds
jne
loopne
pop
pop
repnz
dec
jne
mov
out
mov
add
call
pop
adc
js
jge
outsb
mov
lcall
call
decl
int3
push
es
add
add
call
ljmp
repnz
lcall
dec
mov
rolb
je
push
push
ret
movsl
icebp
ret
popa
addl
add
cmp
ret
mov
popa
lcall
fisubrl
and
and
cli
mov
loop
or
inc
je
cwtl
add
call
push
dec
fwait
cs
add
lds
lock
orb
push
sub
mov
mov
cmp
les
addl
mov
call
out
push
fidivl
repz
pop
fucomi
mov
test
adc
cmc
jbe
je
and
mov
rorb
xchg
leave
test
xchg
or
scas
mov
cmp
in
orl
xor
fwait
icebp
pop
cli
shr
insb
mov
out
mov
lret
loopne
in
sbb
shlb
je
movsb
call
push
mov
cld
in
adc
add
mov
aaa
cwtl
shlb
inc
dec
hlt
jp
add
sub
aad
add
adc
push
js
sbb
je
push
sbb
jl
add
in
addb
lcall
call
jl
push
push
pop
and
les
fiadds
or
not
mov
add
push
mov
or
push
sub
push
je
call
xchg
and
insl
xchg
fs
xchg
pusha
shll
push
aad
cmp
sub
pop
add
push
or
outsl
push
cld
add
push
jb
nop
xchg
fildll
loope
and
jge
ss
and
add
sbb
push
pop
lock
mov
mov
mov
sub
enter
adc
add
aaa
adc
cmp
inc
cwtl
jno
or
mov
shl
push
clc
ja
adc
add
test
ds
popa
call
adc
add
je
and
ret
add
loopne
out
outsb
punpckhdq
test
call
pop
lret
pop
fstl
or
addr16
push
cmp
loopne
loopne
int3
adc
rcrb
idivb
call
or
cmp
pop
in
movsb
aaa
jecxz
xor
sbb
cmp
adc
nop
adc
pop
clc
jb
rolb
xor
scas
pop
test
shlb
call
cs
and
or
sub
cmp
ret
js
adc
hlt
test
fcoms
ss
lcall
or
fbstp
hlt
jo
xor
dec
insl
cli
testb
adc
sub
or
xchg
lcall
out
shlb
js
call
shll
and
or
daa
mov
xor
test
jl
out
ss
pop
ss
adc
into
sub
popa
test
shlb
inc
cmp
je
dec
mov
or
outsb
pop
lds
xchg
loop
addr16
push
cli
repz
xchg
add
adc
loope
inc
and
jg
nop
adc
mov
adc
stc
adc
int3
je
xchg
pop
std
loopne
call
mov
xlat
icebp
enter
loop
xor
push
adc
pushf
jg
or
or
aaa
jb
mov
enter
cmp
inc
sarb
push
sahf
or
push
push
insb
cli
pushf
cmc
sub
push
add
outsb
es
popa
mov
pop
cmp
mov
inc
out
xor
sub
adc
dec
mov
add
sub
and
lock
orb
pop
mov
imul
fdivp
mov
inc
push
mov
shrl
adc
decb
pop
push
movsl
adc
adc
cltd
stos
je
add
fstp
int3
test
bound
xor
js
jecxz
mov
xor
fistpll
hlt
into
cs
xchg
push
sub
imul
xor
add
push
push
jae
jno
mov
dec
das
mov
adc
mov
and
enter
ss
sub
stos
mov
xor
fwait
insb
and
fdivp
mov
adc
adc
pop
std
pop
and
std
mov
xchg
das
adc
push
adc
pop
adc
mov
and
adc
cld
add
mov
lock
sbb
pop
adc
orb
leave
push
imul
push
adc
pop
fcompl
lock
adc
jecxz
icebp
adc
mov
sarb
adc
or
sub
rclb
lods
ret
or
notb
pop
mov
adc
insb
mov
jmp
fcoms
lock
xor
das
sti
bound
sahf
jo
jmp
les
int
call
cmp
sti
int
addr16
or
adc
ss
pop
je
test
imulb
sbb
xchg
pop
das
into
adc
iret
xchg
cmp
ret
mov
jmp
add
cli
and
xor
or
or
les
push
ds
je
xor
pop
mov
jecxz
ret
xchg
popf
scas
adc
jg
ffree
je
sahf
adc
lret
xchg
les
pushf
xchg
cs
or
and
je
pusha
jbe
xchg
push
js
shrl
or
inc
or
notb
popa
cmp
es
xchg
xchg
clc
push
lock
mov
mov
ret
push
push
into
test
pop
roll
or
clc
lds
popa
pop
add
mov
lcall
pushl
andb
call
in
push
inc
or
mov
xor
xchg
add
orb
or
add
mov
aas
pop
dec
add
xor
or
or
addb
fadds
sub
xor
shlb
pushf
jl
pusha
xlat
pop
or
pop
je
je
mov
clc
jno
add
add
or
dec
sub
outsb
mov
or
jnp
xchg
adc
mov
pop
mov
iret
mov
xchg
and
mov
push
and
jbe
adc
lds
add
imul
adc
cmp
adc
inc
xchg
jb
pop
mov
push
ds
cwtl
je
push
or
data16
enter
cwtl
repnz
shll
cld
loope
dec
pop
sub
fldl
cmp
sub
jg
mov
movsb
sub
push
in
add
movsb
sbb
movsl
xor
mov
aaa
jo
or
adc
loop
xor
push
js
add
xchg
out
add
or
clc
popl
mov
in
jne
add
adc
imul
inc
or
dec
mov
ret
mov
cltd
scas
mov
mov
xchg
pop
aam
cli
pop
mov
or
out
jo
xor
sub
ret
push
jo
jb
add
lock
paddq
mov
pop
jne
es
pop
ficoml
addr16
jmp
push
lahf
into
fs
sbb
insb
nop
jb
or
adc
push
pop
shlb
push
stos
dec
ja
pop
or
xchg
cltd
mov
imul
rcrl
mov
sti
cmp
adc
push
aaa
pushl
sbb
lods
inc
adc
mov
mov
rcr
jg
mov
lahf
pop
cmpsb
inc
xchg
es
divb
cmp
dec
push
fisubs
sbb
sub
or
dec
call
rclb
cmp
data16
xor
int3
adc
call
lock
loope
cld
jbe
ret
cmpsl
movsb
adc
sbb
in
adc
sbb
add
xchg
dec
adc
cmp
lock
cmp
aam
sub
or
je
inc
je
icebp
add
or
push
cmpsl
test
adc
adc
mov
out
jne
or
and
pop
add
and
add
js
add
xchg
xchg
push
lcall
or
xor
adc
incb
fdivrl
add
sub
add
cmc
fs
mov
lea
cwtl
dec
loopne
std
je
ja
mov
or
aaa
out
cwtl
ljmp
js
xchg
xor
adc
popa
je
add
mov
or
fisubrl
pop
mov
test
mov
adc
lock
loopne
fdiv
and
adc
sub
mov
inc
lcall
lea
js
shrl
aam
clc
cwtl
shll
icebp
add
je
test
scas
mov
sub
and
sub
adc
push
fs
mov
and
insl
adc
and
push
xor
jl
push
or
ss
mov
lahf
mov
mov
std
shrb
sub
rclb
xchg
or
jmp
jle
cmc
es
inc
adc
mov
ret
addb
inc
enter
add
rcll
adc
add
sub
or
pushf
pop
xor
pusha
lea
les
fnsave
shrb
xor
push
cmpsb
js
scas
pop
push
repnz
test
rclb
mov
mov
add
clc
sub
xor
test
add
aas
jle
sub
dec
xor
cmp
jb
sti
mov
loop
cmp
fs
mov
fsubs
lock
into
add
adc
dec
adc
rcrb
dec
xchg
adc
adc
and
idivb
call
call
add
je
pop
pop
fidivrs
movsb
push
mov
fcoml
push
and
loopne,pt
das
pushf
lcall
addb
out
push
scas
test
faddl
clc
sbb
aas
pusha
lds
mov
scas
or
cmp
xlat
aaa
ds
sbb
push
jo
dec
pop
mov
loop
mov
gs
inc
cltd
adc
inc
pop
es
add
and
add
aaa
xchg
or
and
xor
jle
ret
cmp
cmp
les
xchg
pushf
dec
movl
ret
in
ss
push
fs
mov
loope
in
sbb
rcr
neg
popa
mov
add
or
mov
xchg
in
xchg
or
lea
jg
call
and
xor
jg
enter
fwait
add
les
push
mov
loopne
push
repnz
cmp
ljmp
or
lcall
bound
adc
adc
adc
sbb
cld
pop
decb
cmp
adc
or
test
out
loopne
mov
clc
cmc
add
in
lock
cli
mov
cmp
add
loope
inc
xchg
nop
dec
pop
adc
adc
sbb
pop
jle
or
cmp
or
jle
cmp
fsubs
das
sub
pop
jge
sbb
xchg
push
dec
stos
cmp
ret
mov
jg
lea
sbb
test
aaa
pop
mov
fmuls
fadd
dec
call
cmp
stos
ja
pop
cmpsb
pusha
mov
in
call
add
stos
sbb
cmpsb
jbe
popa
add
incl
jae
dec
lahf
scas
and
push
call
inc
mov
mov
je
xor
add
mov
add
push
adc
loop
jnp
mov
and
dec
loope
cmp
xor
add
pop
sub
sub
adc
dec
sub
ret
pmaddwd
popa
cmp
push
das
pop
shl
ret
test
sub
jecxz
inc
mov
test
in
call
movsb
rolb
inc
ror
repnz
insb
add
aaa
je
cmpsb
call
mov
and
mov
stos
pop
jl
pop
adcb
mov
outsl
or
and
mov
cmp
xor
hlt
repnz
adc
cmp
jl
aaa
xchg
xorl
cmp
jbe
dec
cmp
mov
cmpsb
imulb
shrb
jl
cmp
inc
adc
outsb
clc
aas
sti
cmp
push
sarb
adc
lods
lret
std
jl
in
das
aam
fstpt
pop
xor
xorb
aas
je
inc
mov
lahf
adc
push
popf
aaa
xchg
shl
and
xchg
mov
out
mov
outsl
orb
push
sub
ss
mov
test
daa
test
test
add
sahf
or
sub
xchg
jnp
outsb
shlb
adc
je
dec
fistps
xor
adc
or
sub
and
add
dec
clc
xchg
fcomps
xchg
cmp
inc
lds
out
pop
clc
subl
or
stos
adc
sahf
lea
xor
nop
inc
hlt
scas
cmpsb
jbe
shlb
outsb
lock
hlt
push
mov
mov
repnz
pop
das
sti
add
out
cmp
icebp
aaa
adc
mov
mov
ljmp
fadd
es
mov
xor
out
jae
jb
shll
adc
imulb
gs
push
mov
mov
inc
mov
mov
cmp
mov
mov
cli
adc
and
jno
jb
shlb
push
movsb
adc
add
leave
sub
mov
lods
sbb
sbb
and
pop
nop
push
orl
int3
mov
lock
jge
fdivrp
adc
xchg
fsubr
pop
arpl
imul
pop
mov
jg
mov
insl
or
dec
add
or
adc
pcmpgtd
or
pop
add
sbb
es
add
dec
xor
nop
lods
and
ret
mov
call
xorl
xchg
lcall
shl
movl
in
xchg
fldl
push
cmp
adc
adc
push
jle
xchg
jge
ljmp
push
std
pop
push
dec
out
clc
lahf
jecxz
add
divb
lahf
pop
push
fisubs
sbb
int3
cmp
mov
cli
das
sbb
or
or
adc
cmp
jl
mov
callw
push
fwait
mov
imul
enter
or
jp
push
jb
pop
call
jp
testb
push
je
xchg
mov
ss
fnsave
mov
xor
mov
inc
cli
sub
aaa
jb
inc
outsb
rorb
cmp
call
sub
stos
lcall
dec
cli
ret
repz
and
fdivl
shr
aas
adc
mov
xor
and
movsb
das
lret
or
cmp
call
adc
cmpb
xor
xor
inc
divb
aam
in
sbb
aas
imul
call
push
js
sub
xchg
rolb
mov
xor
sub
je
je
outsl
adc
push
lods
je
lods
pusha
adc
push
loop
push
add
js
jns
sub
add
or
out
aam
jecxz
push
int
xchg
and
jbe
pop
add
cwtl
shl
cmp
jg
fisttpl
push
or
pop
stos
add
push
push
add
je
or
outsb
mov
mov
add
mov
mov
shl
mov
test
cwtl
mov
jbe
mov
sbb
in
pop
outsl
aaa
and
ds
xor
jbe
rolb
movsl
push
cld
sbb
loopne
sub
cmp
or
enter
mov
aaa
xchg
mov
test
fwait
mov
cmp
into
test
andl
sbb
inc
fcomps
je
rcr
cld
mov
test
mov
aas
or
push
or
xchg
or
inc
mov
ljmp
repnz
adc
or
aam
xchg
call
repnz
test
inc
xor
std
inc
scas
mov
pusha
inc
mov
mov
fstps
xchg
xor
mov
call
sbb
shr
cmp
add
xor
add
or
aaa
js
push
or
add
data16
mov
inc
push
xchg
sbb
loop
mov
mov
push
test
push
call
hlt
stos
fs
lret
jo
aam
xchg
shlb
cld
lock
jne
iret
xchg
jmp
adc
adc
adc
add
jle
je
dec
je
adc
pop
or
add
popa
mov
mulb
jl
adc
inc
xchg
jmp
push
jg
in
jp
mov
sbb
mov
add
add
adc
mov
pop
call
lods
sbb
mov
add
popa
pop
insb
test
pop
sbb
add
ss
dec
inc
or
je
or
movsl
ss
out
mov
pop
jmp
pop
mov
cs
mov
jg
sbb
pop
sbb
mov
jmp
sbb
test
or
pushf
cmp
sbb
adc
mov
xor
decl
enter
mov
enter
stos
jg
xchg
clc
jmp
lock
orb
sub
scas
test
je
cmp
jo
pop
sbb
mov
add
test
loopne
jbe
adc
adc
cmpsb
sbb
mov
cld
inc
pushf
pop
dec
call
aaa
jg
jno
ja
push
jg
in
or
call
nopl
inc
mov
fidivrs
add
cmp
call
pusha
mov
adc
dec
rorb
xchg
adc
sbbb
lcall
test
dec
adc
lea
add
inc
decb
ss
ds
mov
dec
cmpsl
je
out
cmp
push
or
out
and
fs
sub
lret
inc
call
pusha
rorb
cmp
jb
or
pop
inc
cld
fcmovnbe
xchg
fidivrl
sub
adc
add
mov
loope
inc
fadds
out
lcall
adc
clc
aad
jge
cmp
stos
pop
ds
cmp
push
rolb
or
cmp
push
add
adc
pop
lock
cmp
xor
or
xor
mulb
int3
dec
aaa
insl
inc
and
cmp
or
stc
daa
out
lea
inc
fcmovu
adc
imul
or
or
jo
scas
adc
or
shl
cmc
mov
xchg
sbb
xlat
insl
scas
push
inc
pop
das
sarb
fdivl
and
pop
hlt
lods
xor
aas
or
je
aaa
icebp
js
ret
add
out
adc
aas
push
add
xor
jae
fimuls
jb
movsl
and
or
add
mov
xor
jo
mov
add
mov
and
xchg
or
mov
fidivl
gs
mov
cmp
ret
sbb
sbb
cli
jmp
daa
or
jne
ljmp
out
inc
out
in
sub
adc
mov
cli
addb
ss
std
mulb
pop
std
xchg
out
mov
push
cmp
sahf
mov
aaa
mov
mov
add
push
cld
into
je
test
adc
sbb
sbb
mov
adc
push
jp
dec
aad
in
adc
pop
stos
ret
imul
ret
or
mov
or
xchg
les
jl
pop
pushl
and
xor
es
xor
xchg
pop
push
insb
sub
push
dec
fucom
test
push
adc
jge
sbb
push
loopne
sbb
adc
mov
mov
ficoms
push
ret
jnp
add
mov
aaa
adc
int3
in
add
adc
xchg
cmpsb
adc
icebp
xor
xor
sub
jmp
cmpsb
cltd
lahf
or
inc
jno
adc
call
xchg
or
mov
mov
sti
rcr
cmp
inc
dec
adc
dec
repnz
mov
adc
and
clc
popa
push
jne
shll
dec
sbb
pop
push
pop
sub
lock
enter
pop
jle
and
inc
js
out
and
adc
sbb
inc
add
jmp
loope
mov
push
fs
aas
fsubrl
cld
popl
cmpsl
adc
inc
cmp
adc
js
dec
lret
inc
testb
icebp
incl
sbb
mov
outsb
call
cmp
dec
dec
inc
xchg
mov
mov
rep
adc
inc
jnp
sub
sbb
sub
mov
aas
outsl
cmp
jg
es
iret
cmc
les
cmp
or
call
adc
inc
outsl
add
cld
bound
dec
mov
std
je
nop
adc
or
mov
xor
lahf
rorb
inc
dec
push
cld
call
andb
dec
jmp
push
icebp
mov
sbb
mov
mov
and
je
mov
mov
cmpsb
push
jge
unpcklps
sbb
jne
jp
add
mov
or
je
sub
xor
and
adc
mov
cwtl
cld
add
loop
rcrl
clc
adc
test
mov
cmpsl
inc
hlt
insl
adc
test
dec
pop
std
out
or
gs
sub
inc
inc
aaa
out
jl
adc
call
adc
or
sub
lret
and
out
lods
adc
stos
cmp
jbe
cli
and
cwtl
pop
mov
call
je
sbb
jmp
adc
xchg
adc
aam
adc
adc
xchg
scas
jno
inc
jl
subb
inc
or
sub
mov
lea
ss
pop
mov
fmull
adc
js
divb
push
insb
jae
std
or
mov
adc
test
lds
or
jno
stos
cmp
mov
jle
sbb
fsubrs
cmpb
fiadds
enter
xor
xor
pop
or
push
insb
cmpsb
js
jg
scas
call
sbb
xchg
push
pop
lock
ss
fadds
jbe
les
inc
cmp
lods
mov
cmp
call
mov
std
mov
add
mov
imul
pop
jle
idiv
loopne
rolb
sbb
or
pop
pop
bound
cmp
lcall
movsl
adc
adc
adc
xchg
xchg
je
push
call
cs
jmp
jno
pop
sarl
pop
test
addr16
mov
pop
fs
push
push
test
rcll
push
mov
or
out
sbb
sub
xchg
ja
adc
mov
mov
pop
je
ret
add
jp
push
cld
movsb
call
cli
jmp
pop
pop
push
sbbl
sahf
push
inc
cs
lcall
jmp
adc
inc
cs
push
and
push
pop
push
mov
sub
popa
aas
lods
rclb
stos
imul
std
push
sbb
add
cmp
repnz
loopne
push
cmp
dec
adc
fimuls
mov
jmp
and
jecxz
test
mov
jl
into
add
xchg
popa
mov
mov
into
or
les
test
lret
insb
inc
loope
pop
push
jl
inc
or
xchg
lock
xchg
sub
jo
imul
mov
ljmp
xchg
mov
adc
cmp
push
push
icebp
stos
mov
ror
mov
xchg
or
and
push
cli
outsb
push
adc
pop
inc
mov
cmc
loope
sbb
test
sarb
jmp
stos
sbb
mov
pop
adc
push
loopne
fcoms
xchg
int3
sub
adc
call
shll
push
pop
pop
push
add
ljmp
mov
loope
mov
out
cmpsb
xor
loopne
mov
nop
push
aas
aaa
cmp
add
add
and
push
add
icebp
clc
scas
clc
xlat
jo
dec
push
leave
mov
add
push
adc
lods
inc
add
adc
subb
and
das
cmp
pop
push
mov
scas
add
mov
inc
adc
inc
ret
dec
test
dec
mov
xchg
lods
int
fldl
repnz
mov
add
xchg
mov
call
adc
sub
mov
sbb
or
inc
and
or
adc
enter
mov
add
das
popa
mov
scas
stos
ljmp
bnd
ret
sub
fimuls
jle
and
jmp
push
sub
dec
add
push
mov
and
outsl
fucomip
lods
icebp
dec
xor
loop
or
pop
sub
inc
fbstp
repnz
in
add
xlat
int3
add
pop
adc
pop
rcll
adc
or
into
enter
mov
mov
and
sbb
mov
sbb
sub
stos
sub
push
push
pushf
and
lods
lods
mov
inc
lahf
out
pop
cld
mov
adc
sbb
add
cmp
fdivs
cli
sbb
push
movsb
mov
bound
cmp
fisubrs
add
pop
pop
push
inc
iret
add
ret
cmp
loopne
addb
fstps
sbb
lods
cld
test
add
lret
mov
cld
jle
pop
js
aaa
in
ljmp
inc
scas
in
fwait
pop
and
cld
sbb
or
inc
stos
orb
adc
sbb
add
mov
ja
sub
js
sahf
and
into
dec
sub
xchg
sar
lock
or
dec
roll
mov
xchg
adc
call
pop
adc
jo
je
ds
call
mov
jle
inc
or
je
fldt
popw
adc
les
outsb
data16
movsb
lcall
es
mov
inc
add
loop
cwtl
je
imul
andb
movsb
and
adcl
cli
aam
push
loopne
bound
push
imul
adc
ljmp
je
xor
addr16
ds
ljmp
jg
mov
rcl
ljmp
add
mov
add
dec
xor
subb
leave
out
pop
jmp
adc
sub
leave
pop
scas
cmp
pop
in
mov
or
cs
jo
lcall
push
int3
out
scas
call
clc
je
int3
js
or
xorb
cmp
pushf
adc
sub
into
mov
inc
pop
out
jnp
dec
pop
push
lods
mov
mov
ss
push
cli
sar
push
pop
and
adc
data16
fstps
movsl
adc
adc
xor
sahf
sub
mov
mov
mov
cmp
cmpsb
aad
jge
add
enter
fmull
lcall
out
adc
jno
or
push
addb
insb
add
mov
sub
xor
or
adc
pop
faddl
pop
inc
mov
sbb
add
mov
fsubrl
mov
test
push
inc
add
adc
test
fs
inc
gs
sahf
sub
dec
jmp
pop
or
je
sbb
gs
adc
loopne
push
mov
push
dec
push
call
outsl
aam
aam
and
rorb
dec
test
adc
test
js
dec
mov
xor
dec
push
call
pop
lcall
adc
rcrb
xchg
mov
je
adc
rcr
out
sbb
push
mov
inc
in
jl
pop
pusha
add
scas
lds
and
add
les
cmp
mov
push
setb
outsl
add
cltd
inc
adc
push
ret
lock
stos
or
or
dec
push
je
sub
mov
jl
add
adc
dec
ljmp
jle
int
roll
fisttps
sub
fistpll
sub
loopne
cmpsl
fwait
mov
andb
jmp
or
adc
inc
dec
test
cmp
pop
movb
cmpb
call
test
inc
adc
loop
loope
dec
clc
xor
lods
adc
enter
or
mulb
or
and
xor
and
into
je
hlt
and
sbb
les
sub
dec
dec
dec
jp
das
call
xchg
adc
out
rclb
push
int
sub
push
dec
je
pop
clc
ljmp
aas
adc
cmp
cli
push
mov
je
mov
ljmp
stos
cmpsl
and
push
dec
add
ret
lea
sbb
out
dec
scas
add
xor
inc
loope
or
cwtl
add
movsb
cmpsb
push
lods
pop
lock
js
and
je
je
jl
xchg
mov
cmp
les
rorb
push
sbb
inc
repnz
and
clc
fs
dec
cmp
dec
or
push
clc
test
test
push
jo
inc
fimull
jo
ss
icebp
cwtl
fs
pop
pushl
add
outsb
cmp
inc
or
push
and
dec
loopne
out
dec
sti
mov
push
cmp
stos
sub
aam
sbb
pop
pushl
xchg
shlb
cld
xorl
lahf
jl
sub
jg
popf
cmp
xor
leave
popa
fstp
test
inc
in
rcr
ret
add
cmp
push
mov
mov
int
orb
dec
adc
xchg
jge
xchg
cmp
xchg
aaa
fadds
dec
and
sbbb
js
outsb
test
scas
addl
adc
scas
jle
adc
sub
ss
call
jae
or
lret
xchg
decb
das
call
adc
int3
xor
pop
and
add
sbb
daa
lcall
inc
cmp
push
add
inc
pop
pop
imul
jmp
lds
push
call
dec
clc
std
ljmp
mov
lret
clc
adc
je
adc
add
mov
dec
jb
call
inc
lock
hlt
call
pop
push
sahf
xchg
inc
pop
adc
stos
call
mov
sbb
das
xorb
dec
xchg
lock
add
pop
rorb
push
xor
pop
cld
scas
jmp
inc
mov
adc
je
int
sbb
xchg
outsl
push
dec
jne
testl
fcoms
into
dec
shlb
daa
imul
cmpsb
rorb
push
je
pusha
fwait
or
call
push
dec
shlb
sti
or
ret
call
js
cwtl
rcll
cmpsb
adc
shrl
sub
and
clc
mov
add
push
lock
xchg
lcall
loope
jg
stos
ljmp
add
sub
pop
add
imul
int
int3
icebp
xchg
sub
mov
adc
jecxz
test
push
mov
imul
decl
mov
ss
aam
or
call
adc
ret
fisttpl
aam
cmp
inc
xchg
push
add
xor
mov
xor
jb
mov
push
ja
mov
loop
dec
repnz
dec
adc
mov
jp
adcb
and
pop
push
mov
das
cmp
adc
jne
adc
leave
cld
sbb
ja
jno
addb
push
clc
rolb
xorb
mov
ffreep
inc
imull
clc
add
pop
leave
push
mov
adc
inc
lock
test
fcoms
push
mov
ds
mov
mov
test
cmp
or
rcrb
adc
das
cwtl
cs
push
rclb
je
enter
adc
push
ljmp
clc
adc
sub
movsb
add
inc
shll
gs
mov
rclb
push
mov
outsl
js
call
add
mov
jecxz
or
adc
das
jmp
adc
xor
jbe
jecxz
mov
mov
or
gs
cmp
test
sub
jmp
dec
cmp
inc
call
cmp
mov
fildl
mov
push
lock
or
negb
pop
pop
test
add
jnp
and
dec
in
ljmp
push
inc
cmpsb
sbb
out
sbb
ds
sub
mov
loop
scas
xor
dec
inc
cld
mov
mov
insl
push
push
gs
and
ss
adc
mov
das
pop
push
cs
imul
testb
fcmovb
aam
fildll
dec
xchg
pop
fldt
adc
inc
jmp
ret
xchg
pop
rcrb
inc
call
or
shll
loop
mov
roll
sahf
mov
sub
jno
dec
in
dec
ficompl
mov
jecxz
mov
jl
call
scas
in
insl
pusha
cli
orl
es
adc
pop
popa
clc
mov
xchg
pusha
jmp
mov
ret
movsb
add
fldt
add
xchg
aam
subb
add
jne
ljmp
push
aad
push
mov
or
dec
mov
or
hlt
scas
adc
add
sbb
or
mov
inc
in
sbb
mov
adc
dec
cltd
dec
pop
mov
idivb
je
add
push
into
mov
test
add
loope
ljmp
dec
jbe
in
je
bound
push
pop
cld
jle
or
push
out
cmpsl
xor
cwtl
sub
dec
sbb
cli
dec
scas
mov
inc
ds
ret
xor
jbe
roll
sbb
out
mov
hlt
push
les
icebp
sti
or
sub
sub
inc
jl
fs
push
pop
mov
sahf
inc
jnp
call
mov
aas
scas
lds
loope
in
and
movsl
mov
xchg
out
adc
ss
data16
add
arpl
cwtl
mov
jmp
inc
sbb
push
nop
sbb
divb
movsb
lods
aad
mov
add
leave
imul
out
fmuls
sbbl
push
mov
pop
pop
ljmp
out
inc
mov
cld
fidivl
xor
add
jb
test
mov
lock
in
pop
lea
nop
les
stc
and
mov
and
jge
fstp
jp
arpl
cmpsl
dec
test
push
sahf
popf
loopne
xchg
adc
mov
pushf
mov
dec
mov
aam
dec
call
loopne
push
mov
mov
pop
in
loopne
je
cltd
outsb
stos
test
adc
test
sbb
das
aad
push
notb
loop
adc
mov
rorb
sub
push
cmp
mov
sub
loop
and
pop
push
insb
push
lea
mov
push
fsubrl
dec
fwait
jge
lock
je
int3
push
pushf
movl
jge
mov
nop
adc
clc
push
aam
or
or
push
nop
adc
icebp
insl
add
lcall
je
pusha
lods
jge
aam
rolb
orb
dec
pop
insb
adc
mov
cmpsl
mov
cwtl
and
pop
cltd
rcr
push
imul
xor
pop
je
adc
inc
dec
ljmp
shlb
xor
or
or
mov
or
push
clc
mov
lret
mov
popa
in
xchg
sbb
push
lock
ret
in
xor
add
sub
xchg
add
lcall
jmp
add
push
dec
adc
ret
mov
xor
mov
dec
sub
jecxz
xlat
or
mov
dec
add
push
adc
stos
pushf
push
cs
push
mov
pop
negb
sbb
in
ss
addb
out
jp
lahf
push
mov
push
idivb
push
adc
inc
pop
stos
pop
add
out
fdivrs
out
les
addl
and
adc
add
pop
push
cli
inc
insl
mov
hlt
rcrl
sbb
add
fists
xchg
xchg
popa
jb
jp
xchg
call
cmpsb
dec
or
sbb
xchg
into
clc
testl
out
or
cs
shl
aaa
add
add
je
fsubs
std
jg
faddl
add
jp
fldcw
xor
filds
push
mov
jo
dec
push
sbb
lock
adc
fiadds
pop
pop
and
xor
movsl
add
or
out
xor
pusha
sti
xchg
ret
or
or
loope
insb
push
and
dec
loop
adc
std
mov
xchg
dec
insb
int3
ficoms
test
repz
add
pop
out
xchg
cltd
xchg
mov
call
sahf
xchg
push
xor
pushl
push
or
lock
xor
adc
loop
testb
or
ds
dec
inc
dec
pop
cmp
or
lea
data16
decl
clc
mov
leave
test
test
jmp
inc
mov
or
adc
mov
push
or
sub
push
jecxz
or
je
inc
es
in
xchg
jmp
dec
xchg
or
in
add
fnstenv
jle
aas
call
or
call
les
call
fdivrp
jmp
dec
adc
push
pop
add
sahf
jno
lea
add
mov
rorl
test
addl
cmp
cltd
cli
pop
and
clc
loop
push
out
je
pushw
bound
pushf
jp
sbb
mov
ret
call
pushf
sub
pop
pop
adc
xchg
icebp
rol
dec
adc
loop
jo
adc
adcl
sbb
ret
dec
or
jp
push
xorb
and
enter
fildl
cmp
int
or
cmp
je
mov
pop
in
inc
int3
sub
jb
je
leave
call
push
out
js
add
sub
mov
mov
dec
xchg
xchg
je
cli
pop
mov
cmpsl
out
or
testb
jp
sub
sbb
mov
jmp
sub
dec
inc
xor
add
push
sub
stos
push
mov
sbbb
jbe
ss
sahf
int
adc
sub
dec
lock
dec
add
adc
ss
loopne
push
popf
nop
xchg
sbb
dec
push
xorb
cmp
inc
push
cmp
je
test
es
add
or
adc
call
xor
jp
jo
dec
scas
dec
outsl
data16
and
jo
pop
stos
or
jg
movsl
roll
pop
test
call
pop
adc
fsubrs
fcoms
jle
ss
pop
pop
clc
adc
push
test
lods
mov
and
enter
rorb
jmp
push
roll
pop
cld
call
roll
hlt
and
adc
adc
adc
jmp
push
andb
mov
shlb
add
movsb
mov
push
xchg
data16
mov
jp
lea
fisubrs
clc
sbbl
fs
or
adc
xor
adc
cmpb
inc
jl
pop
push
dec
call
loope
jl
aaa
ret
es
mov
int
pop
jo
enter
movsb
and
mov
jl
dec
test
lret
mov
cmp
int3
in
jg
xor
push
adc
adc
adc
mov
jbe
adc
sub
jo
xchg
adc
insl
hlt
das
js
sub
add
je
push
or
gs
sbb
call
je
push
adc
mov
push
pop
int3
les
mov
aam
jbe
pop
hlt
push
loop
call
jle
outsb
push
or
mov
jbe
fcoms
or
out
inc
adc
aam
pop
mov
adc
mov
je
sbb
adc
add
les
add
pop
ja
int
jge
add
in
or
mov
in
add
pop
jb
add
lea
sbb
jo
mov
je
jle
inc
shr
imul
imul
in
cld
out
pusha
rolb
stos
mov
imul
adc
cld
test
or
hlt
das
imul
adcb
in
call
cld
push
rcl
cld
jne
mov
bound
mov
ret
xchg
mov
or
enter
sbb
sub
or
call
je
jp
mov
push
lock
jl
mov
nop
cmpsl
cmp
dec
in
lock
aad
pop
mov
lock
stc
cmp
push
popa
sbb
sbb
or
fsubs
adc
and
jo
roll
cmpsl
xor
push
je
push
jmp
test
xchg
pop
mov
pop
sub
sub
testb
pop
movsb
dec
ret
sbb
rclb
mov
or
mov
and
std
loop
mulb
aaa
fisubrs
push
test
xor
int
pop
dec
fwait
cmc
pop
and
mov
shl
jmp
je
or
call
loop
cli
adc
or
loopne
scas
lret
or
popa
lahf
or
ljmp
lret
and
and
add
icebp
fidivs
ret
xchg
movsb
ja
mov
cmp
adc
cli
jmp
insb
push
pusha
pop
rcrl
call
mov
es
call
inc
or
sub
adc
inc
out
push
sbb
adc
fisttpll
rcr
pop
cmp
xchg
mov
xor
xlat
xchg
loopne
outsb
fwait
add
inc
pop
push
or
sub
test
ret
mov
add
je
add
add
or
and
pop
rclb
mov
lahf
adc
pop
push
cmp
fsubrs
out
addr16
lock
xor
lcall
daa
cmp
sbb
add
cwtl
pop
mov
dec
in
mov
or
das
sti
add
rol
icebp
push
icebp
push
call
aad
andl
mov
fildll
jl
orl
add
aad
dec
xchg
cmp
shlb
mov
inc
outsb
aam
fcomi
mov
mov
nop
aaa
adc
popa
sub
jle
adc
dec
adc
jo
xchg
push
data16
call
jb
movsb
aas
jle
icebp
xor
icebp
sbb
call
sbb
jne
inc
lret
sub
jg
cmp
xbegin
je
je
enter
push
pusha
ret
cli
test
and
addl
je
insb
data16
bound
pop
or
data16
rcrb
in
sub
mov
xor
or
or
mov
add
push
jg
mov
sbb
mov
dec
loopne
call
pop
jge
push
mov
js
jle
cld
inc
pop
or
mov
dec
inc
leave
adc
jg
and
in
inc
call
mov
pop
icebp
aam
add
cmp
out
cltd
repnz
cwtl
inc
sbb
push
cli
push
fwait
and
or
add
test
jmp
or
pop
add
push
mov
add
lds
cmp
push
and
dec
inc
inc
sarb
ret
pop
call
scas
ret
sub
rclb
fs
inc
pop
call
push
repz
pop
mov
push
js
add
push
ja
or
test
or
add
sbb
call
sub
subb
pop
jae
push
sti
push
xchg
sbb
push
jne
cmp
hlt
aas
jle
xor
ss
cmp
out
jbe
js
cmp
leave
int3
call
mov
pop
mov
call
pop
fsts
in
arpl
fs
inc
pusha
or
push
jo
out
pop
adc
lea
or
adc
es
and
outsb
mov
in
sti
icebp
mfence
add
data16
mov
andb
push
ret
and
mov
mov
rolb
push
push
add
aam
adc
xchg
fs
mov
test
pusha
fistl
xchg
pcmpgtd
pusha
xor
add
enter
cmp
pop
sub
ret
push
addl
cltd
or
dec
data16
cmp
clc
add
in
call
inc
bound
mov
sub
ja
pop
out
xchg
mov
add
pop
mov
pop
fnstenv
js
into
pop
in
mov
sar
aam
lret
add
adc
mov
lret
sbb
imul
ja
add
loop
adc
ret
ficoml
push
ret
push
mov
dec
mov
xchg
std
and
inc
cmp
out
add
in
and
jns
cmp
push
inc
mov
cld
push
cmpsb
sahf
mov
ret
add
mov
mov
lock
sbb
sahf
cmp
incl
add
imul
stc
push
pusha
push
call
add
mov
pop
jmp
and
cwtl
adc
adc
aam
aam
adc
mov
lock
dec
or
fiaddl
adc
mov
pop
and
je
ficoms
rclb
shll
or
call
loope
jl
shrl
add
cmp
mov
je
hlt
mov
sub
clc
dec
xchg
adc
and
push
adc
or
fs
xchg
add
jns
jp,pt
mov
jnp
cmp
test
inc
lods
or
sbb
aaa
aam
outsb
mov
sub
cmp
subb
rorb
pop
cmp
mov
jo
xchg
pop
dec
push
mov
sub
pop
inc
in
leave
movsb
dec
stos
mov
popa
mov
jbe
xor
out
push
jg
dec
xor
xchg
shrb
xchg
fisttpl
lea
mov
sbb
test
das
pop
or
sbb
divb
cld
mov
mov
call
adc
adc
mov
mov
inc
outsb
mov
pop
clc
xor
inc
fsubs
push
rcrl
inc
pop
mov
js
fwait
dec
sarl
loopne
jmp
cmp
lock
or
mov
je
ret
je
dec
mov
fisttpl
add
cli
and
adc
xor
outsb
jg
or
ds
sub
sbb
stc
incb
clc
int3
push
cmp
push
lea
jl
js
insb
pop
cld
rcrl
out
add
mov
pop
mov
rol
data16
mov
scas
and
cwtl
adc
inc
and
mov
push
aaa
sbb
sub
add
cwtl
inc
scas
add
shr
xor
lcall
ret
jecxz
jbe
dec
fimuls
adc
cmp
push
adc
sub
ljmp
push
adc
adc
mov
adc
call
divl
stos
sbbb
outsb
cmc
in
shufps
jecxz
call
jmp
or
mov
sahf
push
or
scas
push
loopne
adc
sub
sub
imul
sub
jb
je
add
jge
push
fcompl
insl
inc
test
and
lds
or
call
add
adc
and
pop
push
adc
mov
mov
pop
mov
sbb
insl
inc
and
mov
ret
test
je
aad
loopne
dec
add
test
loopne
push
setl
jno
or
push
adc
cmp
scas
add
pushw
inc
clc
movsl
cmp
int3
mov
cmp
push
ja
bound
test
push
sub
ds
mov
into
mov
xor
std
jbe
or
or
je
outsb
inc
xchg
hlt
lods
mov
mov
or
movlps
iret
clc
not
sub
ret
gs
pop
sub
sbb
and
and
sbb
pavgb
inc
iret
inc
lods
insl
dec
gs
push
cli
cmp
rorb
jbe
mov
jl
lds
imul
or
clc
sbb
loopne
mov
fdivl
es
and
jg
xorb
push
ss
adc
sub
jne
movl
cmp
out
clc
call
cs
sbb
cmp
cmp
push
popa
xchg
shl
xlat
int
int3
jae
dec
push
movsb
adc
push
mov
sub
sbb
ret
xor
sub
cmp
shll
mov
inc
into
inc
fsubr
or
ds
mov
pop
dec
jl
and
sbb
ja
add
mov
jmp
inc
aam
and
test
into
push
ljmp
hlt
lods
or
ds
and
adc
pop
mov
jo
movsb
xchg
adc
outsb
fistpll
cmp
into
mov
dec
data16
outsb
mov
jp
scas
pop
jno
std
aam
aam
fmulp
mov
and
int3
nop
leave
adc
loopne
and
push
bound
adc
xor
push
test
mov
or
cld
and
jb
sbb
bound
rorl
ret
lea
sbb
lret
ljmp
movsb
je
pop
mov
xchg
mov
pop
je
mov
sub
mov
in
mov
pop
add
sub
call
fcomps
or
or
lods
or
mov
ss
sub
in
lret
mov
push
sti
movsb
fwait
jle
je
or
rcrb
cmp
sahf
dec
xor
adc
or
sub
pop
call
push
and
xchg
mov
dec
dec
inc
or
mov
add
xchg
rclb
inc
fcomps
sub
lret
xchg
lcall
lcall
daa
lret
cwtl
imulb
addb
and
xor
push
test
scas
bound
or
mov
das
lcall
pop
mov
or
and
dec
dec
rorb
clc
jg
pop
jl
sti
ljmp
add
adc
int3
aad
in
ja
insb
fcoms
sbb
scas
pusha
decl
inc
lock
call
cmp
stos
mov
jp
inc
adc
roll
sub
adc
adc
call
int
inc
incb
clc
mov
pusha
cmp
cs
push
pop
inc
sub
je
pop
jg
mov
jns
add
jae
mov
dec
adc
call
cwtl
int
or
ljmp
clc
inc
or
adc
adc
mov
movl
fcomp
xchg
addr16
mov
xor
pop
lods
std
notb
lods
pop
lods
notb
dec
and
test
pop
push
mov
subb
pop
fsubr
sar
lcall
add
mov
push
mov
mov
aaa
or
aam
enter
stos
xchg
ja
lods
xchg
insb
mov
rorb
addb
data16
fimuls
adc
pop
cs
mov
pop
lahf
adc
adc
ret
mov
cmp
pop
push
int
and
pop
inc
pop
push
xlat
cltd
lret
dec
jle
cli
push
aam
insl
jl
loope
je
add
call
dec
pop
je
xchg
call
call
bound
lea
mov
push
sbb
jo
je
mov
push
adc
rclb
cmp
and
flds
mov
lock
mov
jl
nop
inc
notl
mov
adc
sbb
or
inc
lock
jge
je
test
aad
push
mov
xchg
or
or
adc
add
mov
rcr
inc
adc
push
dec
cmp
popa
aas
aam
cmp
push
add
lods
mov
outsb
jp
jb
add
xchg
jle
icebp
xchg
mov
into
cmp
stos
dec
shrb
fs
sbb
dec
outsl
stos
adc
add
nop
jp
add
xchg
std
outsb
push
jmp
xor
add
mov
fadds
jne
jbe
arpl
cs
adc
pop
cwtl
jb
push
icebp
pop
push
push
jmp
and
bound
sti
sub
dec
jno
std
add
mov
jge
inc
pop
lahf
or
sub
les
pop
cwtl
test
mov
or
orl
iret
shrl
add
pop
dec
mov
mov
cmp
les
js,pn
arpl
sahf
pop
dec
cmp
push
out
fsubl
cwtl
jo
dec
cmpb
test
push
mov
mov
mov
loop
iret
lock
push
inc
xlat
pop
mov
adc
movsl
sarb
outsl
xchg
adc
or
cmp
xchg
jmp
loopne
push
cltd
outsl
hlt
add
pop
lods
sub
inc
je
pop
loope
push
clc
sub
jb
sub
lock
or
test
call
clc
cpuid
pop
rolb
pop
cmp
jne
iret
hlt
dec
adc
or
sbb
sbb
sbbb
dec
pusha
jae
push
add
sbb
loopne
insb
and
jg
clc
cs
das
mov
push
arpl
call
sub
call
stc
arpl
fcompp
sbb
cli
mov
jb
inc
mov
pop
shrl
lea
xor
pop
xor
push
or
in
add
adc
xlat
shr
jo
outsl
add
or
or
test
pop
scas
adcb
add
push
add
or
mov
pop
add
popa
mov
in
jno
cmpsb
adc
adc
mov
daa
push
popf
jg
xchg
jle
clc
inc
test
test
insb
pop
sub
call
sarl
xor
test
in
xor
fists
inc
imul
mov
mov
popa
insb
sti
rcr
clc
adcb
popa
or
inc
inc
mov
adc
stos
in
into
cli
dec
or
icebp
ljmp
adc
fnsave
mov
andb
push
je
rcrb
pop
push
call
xchg
cmpsb
adc
add
lcall
ss
or
inc
add
scas
jbe
rcrb
jno
add
cmp
ret
adc
adc
add
xor
cmpsl
js
xchg
pop
jg
add
push
sarl
imul
or
and
and
adc
push
adc
mov
loope
cmc
inc
adc
ret
jp
jno
add
push
loopne
inc
shlb
popa
ret
fsubrs
aaa
pusha
dec
sub
mov
pop
mov
insl
imul
lcall
sbb
ret
call
jb
mov
movsb
stos
out
mov
lret
inc
push
incb
iret
add
es
fbld
adc
pop
fidivl
ret
adc
call
mov
pop
sbb
stos
rcl
jl
jne
sub
mov
mov
cmp
xchg
out
or
stos
jbe
call
mov
mov
jmp
incl
dec
rorl
fs
call
lcall
fcmovnb
les
mov
jo
roll
das
pop
adc
ljmp
pop
stos
xor
insb
xor
nop
inc
in
jb
pop
rcll
clc
subl
pop
add
mov
call
rclb
cmp
jmp
adc
cld
mov
sbb
stos
adc
fisubrl
fidivl
je
mov
mov
subb
mov
ret
ret
pop
fldenv
arpl
gs
je
sahf
jl
cmp
mov
jp
sbb
or
loope
nop
aas
insb
imul
insl
add
cmpsb
xchg
mov
push
or
imulb
or
xor
mov
xlat
xchg
cmp
adc
mov
je
fld
sbb
lahf
in
test
rorl
xor
sbb
filds
mov
or
inc
cmp
jle
jb
mov
xor
xorl
ret
in
call
cmp
pop
mov
in
or
add
stos
outsl
ret
and
fmuls
jl
adc
jne
dec
pop
push
pop
lahf
sbb
ja
lock
popa
gs
rol
mov
ret
xchg
shr
into
push
or
divb
sbb
sbb
pop
cs
stos
stos
sahf
cmp
mov
mov
test
lea
mov
dec
arpl
shll
cmp
lock
mov
mov
mov
jo
push
arpl
sarb
shlw
shl
jle
push
xlat
adc
outsb
hlt
fs
inc
jne
jb
xor
test
xor
fdivs
or
xor
outsl
add
adc
adc
dec
or
pop
sbb
test
mov
sbb
sbb
cmp
jo
lods
call
test
ljmp
rolb
addl
outsb
mov
cmpsb
aam
aas
aas
mov
push
jle
adc
imul
fwait
push
and
cli
adc
mov
mov
sbb
aaa
bnd
rolb
out
add
aad
lods
aam
popf
mov
call
sub
push
push
int3
or
pop
out
and
or
shlb
lcall
mov
dec
add
sbb
pop
mov
jne
out
rolb
sub
add
outsl
sbb
or
sub
pusha
jg
jne
das
popa
outsl
daa
jecxz
int
jo
cld
aam
lods
jno
outsl
xor
std
loopne
ficomps
push
jno
xor
div
mov
pop
jb
or
jmp
pshufw
dec
rolb
mov
mov
jbe
cli
jnp
adc
push
xchg
mov
ret
lret
mov
adc
pop
sub
jl
mov
pusha
xchg
mov
sbbb
jl
push
insb
sbb
loopne
jo
or
dec
mov
pop
movsb
adc
clc
pop
jle
jmp
adc
mov
add
ljmp
lret
mov
cli
jae
pop
ja
xchg
sub
xchg
mov
outsl
lcall
jmp
dec
out
cmpsl
hlt
pop
dec
clc
cmpl
adc
or
daa
call
fdivrs
mov
push
sbb
push
ljmp
jmp
lods
lea
mov
push
inc
mov
adc
addr16
sahf
xlat
inc
je
mov
mov
jb
fsts
mov
inc
adc
xchg
pop
inc
adcb
mov
push
in
inc
mov
adc
or
sub
rolb
mov
decl
call
lahf
dec
cwtl
push
and
inc
push
test
adc
aas
cld
cmp
fistl
sub
adc
xlat
insl
sub
sbb
dec
mov
add
ud0
lcall
push
decl
je
addr16
stos
jae
lea
xchg
or
sub
cli
sti
daa
imul
adc
ss
sub
dec
je
insl
mov
pushf
call
daa
leave
adc
loopne
orb
pop
pop
jmp
pop
ret
push
fs
inc
cli
clc
call
jno
cmp
push
jb
mov
mov
data16
jle
ja
inc
jb
add
sbb
call
nop
xor
clc
jo
imul
shll
insb
inc
outsb
mov
mov
lahf
dec
or
xor
aaa
inc
inc
es
scas
es
mov
xchg
lds
test
call
xchg
rcll
std
sbb
aam
or
jae
dec
sbb
les
jmp
push
sub
jle
sub
pop
fdivrl
cwtl
dec
ficompl
cltd
or
fcomps
push
shr
mov
sbb
cmp
mov
sbb
add
mov
jbe
call
mov
ljmp
xchg
lds
ja
cmp
jp
je
mov
in
ljmp
pop
mov
add
jge
lock
adc
fcoms
sub
cmp
movsb
mov
icebp
sbb
in
xchg
je
or
call
fbld
in
cld
mov
jl
in
or
sbb
mov
or
aaa
test
mov
lods
clc
xor
subl
jp
scas
les
ds
and
lds
cmp
and
mov
adcl
mov
jns
cmpb
mov
icebp
mov
mov
mov
rclb
add
popa
out
xchg
out
nop
dec
leave
inc
push
sbb
add
push
or
enter
mov
cli
adc
and
mov
adc
insb
ljmp
pop
call
adc
add
fadds
imul
je
pop
xor
pop
fiaddl
idivb
pusha
fidivs
push
push
outsl
callw
rorb
jp
lea
xor
dec
std
add
mov
and
fsts
incl
lds
fnstcw
mov
jl
xchg
sub
adc
cmp
sbb
mov
add
cmpsl
sub
stos
xor
imul
xchg
add
adc
and
pusha
test
loope
add
cmp
into
outsb
add
inc
bound
in
adc
movb
test
add
sbb
scas
adc
repnz
sbb
jmp
pop
pusha
cmpsb
push
or
cmp
int3
adc
into
bound
int3
xchg
mov
push
add
jne
mov
dec
leave
cmovo
or
mov
shlb
into
sbb
mov
insl
shr
je
cmp
jbe,pn
stos
enter
adc
inc
adc
mov
call
or
and
outsb
movsb
les
add
add
xor
mov
ljmp
cltd
adc
add
sub
push
sub
lahf
mov
add
add
add
xchg
fs
push
cmpsl
mov
nop
add
push
push
push
enter
xlat
dec
jl
bound
sbb
in
mov
lret
mov
or
test
call
xor
adc
popa
or
rorl
push
lock
push
cld
dec
sbb
push
dec
cltd
inc
call
mov
adc
nop
les
sbb
outsb
js
dec
cmpsb
or
push
mov
or
jo
imul
test
or
ss
xor
fisubrs
cmp
loopne
cmp
pop
cmp
add
mov
add
inc
mov
call
or
stos
jecxz
mov
inc
sub
push
inc
cmp
mov
push
adc
adc
jp
adc
movsl
adc
call
sbb
adc
add
dec
sub
push
jmp
adc
outsl
fnsave
aam
jle
ljmp
mov
push
movsb
adc
push
xchg
leave
mov
adc
push
mov
jl
out
mov
nop
outsb
fs
pop
add
js
je
or
ret
ljmp
js
adc
inc
mov
push
or
dec
mov
push
add
loopne
les
push
push
nop
loop,pt
ss
add
sbb
jl
je
mov
xor
mov
push
jl
rcrb
pop
or
insl
rolb
sub
and
repnz
mov
adc
fdivl
fadds
add
mov
add
sbb
inc
ja
push
not
cmp
loope
shlb
aad
loopne
sub
adc
shlb
push
call
fmuls
in
in
push
divb
fcmovu
jmp
sahf
mov
push
divl
adc
filds
rorb
adc
lods
inc
jl
mov
jno
test
je
mov
outsb
test
xlat
mov
or
sub
xor
and
xorb
xor
pusha
jne
jle
adc
lahf
inc
push
rclb
mov
adc
jl
fs
add
mov
lock
adc
add
imul
jge
fstl
mov
or
insl
insl
sbb
icebp
dec
popa
mov
ds
xchg
mov
dec
shll
js
mov
fiaddl
mov
adc
adc
jbe
sbb
fwait
or
dec
test
cmpb
inc
daa
hlt
shll
push
add
adc
xchg
pop
rclb
mov
sub
fisttps
push
xchg
lahf
cltd
fiaddl
jmp
dec
mov
lock
sub
push
add
test
das
ret
outsl
or
adc
sub
call
pop
fldt
add
ds
cmp
cs
jle
call
jne
adc
mov
ficompl
lea
jp
fsubs
push
stos
cs
add
add
mov
sub
in
adc
cld
mov
push
sbb
adc
push
pusha
or
adc
stos
pop
orl
call
lcall
push
pop
orl
jns
inc
std
xor
cmpb
xchg
sub
filds
sub
mov
lds
pop
fmuls
sarb
lods
or
xchg
push
jmp
je
push
std
mov
cld
inc
or
outsl
pop
stos
mov
arpl
jnp
mov
loop
insb
dec
jno
push
mov
lods
dec
sbb
dec
out
cvtpi2ps
aas
add
or
jg
call
loope
fisttps
xchg
jae
or
movsl
mov
or
fnstsw
add
jae
mov
dec
stc
shrb
mov
pushf
and
mov
pop
mov
in
in
test
fs
mov
test
add
out
stc
sbb
je
pop
ja
mov
test
push
pop
cmpb
jl
and
sbb
mov
shlb
push
xchg
jle
subb
call
xchg
rolb
nop
jp
mov
adc
sti
cmpsb
aas
or
add
in
jle
xchg
andb
jmp
bnd
or
cli
and
popl
sbb
sbb
jbe
mov
data16
out
insb
int3
shr
ret
inc
xchg
test
movsl
xchg
cmp
call
xchg
or
comiss
mov
rcrb
shll
and
dec
and
jbe
adc
add
and
das
fcoms
int
loopne
inc
jge
add
cli
inc
cmp
loope
dec
xchg
xchg
std
or
ds
loope
loope
call
insb
add
lods
inc
add
mov
bound
in
cs
xchg
sbb
push
jp
ss
adc
or
insb
sbb
add
xchg
cwtl
mov
aaa
jl
xchg
je
sub
xor
push
sbb
ljmp
jl
add
dec
enter
adc
jge
fdivrs
xor
mov
xchg
sub
or
out
je,pn
push
or
clc
adc
push
popa
xor
rolb
xor
push
inc
inc
inc
lods
adc
lods
mov
inc
pop
adc
sub
outsl
shlb
jb
ja
movsl
or
or
pop
ret
dec
negb
js
push
sub
or
int
dec
ss
adc
push
pusha
push
add
or
fwait
stos
push
sbb
je
dec
test
out
fcoms
adc
or
mov
rorl
adc
pop
loop
clc
insl
or
push
dec
add
push
shll
cltd
and
jbe
pushl
adc
fdivl
jle
aas
jb
insb
dec
sub
mov
loop
adc
inc
insb
sbb
bound
enter
nop
enter
adc
cli
pop
cwtl
loopne
fbld
adc
mov
fdivs
out
push
dec
lock
cmp
or
inc
adc
jle
adc
je
push
adc
pusha
sub
imul
lods
outsl
jecxz
push
out
clc
pop
je
pop
adc
in
mov
pop
mov
xchg
imul
sub
repz
ljmp
dec
jle
sbb
jo
and
or
xchg
dec
jmp
inc
xor
arpl
lock
stos
inc
loop
or
in
fwait
arpl
shr
add
test
dec
adc
sub
ficoml
cli
fidivrs
setle
jecxz
pop
fists
fs
xor
test
je
or
imul
sbb
mov
add
inc
xor
aaa
and
xchg
repnz
ljmp
cld
jns
pop
add
je
adc
dec
jle
jbe
out
push
adc
pop
add
add
mov
addb
dec
dec
mov
cs
pop
and
pushf
addr16
in
cld
aas
adc
mov
xor
and
clc
repz
je
je
jmp
ja
mov
adc
sbb
adc
pop
inc
mov
jo
xor
xchg
sub
inc
shlb
push
adc
orb
into
sbb
or
mov
or
mov
dec
rolb
xor
cli
popf
loopne
test
fdivl
out
jecxz
lret
pop
xchg
adc
xor
pop
pop
add
mov
xchg
into
or
outsb
lcall
or
or
insb
add
call
shlb
insb
pushf
cmp
inc
in
std
add
sbb
xor
sub
pop
stos
pop
orl
or
adc
add
adc
sub
aaa
adc
mov
repz
push
jns
cmp
ret
jae
pusha
dec
and
pop
inc
jl
addb
insl
loop
lcall
pop
dec
call
fldenv
pop
add
sub
dec
lret
les
fsubrl
dec
sub
cmc
ror
cmp
pop
cmpb
loope
decl
sbbb
and
call
cmp
add
adc
or
mov
or
sbb
test
es
adc
scas
cmpsb
add
rorl
jmp
xchg
mov
hlt
pop
rolb
cs
scas
lock
adc
daa
ficoms
stos
add
fs
mov
lods
mov
std
add
call
add
jo
mov
adc
insb
and
rorl
lds
jp
call
push
xchg
add
push
xor
ret
test
nop
xchg
iret
mov
xor
xchg
es
fstpl
push
fcoms
insl
dec
inc
or
loop
bound
xchg
je
xchg
push
je
aam
pop
push
loope
mov
add
jne
xchg
lahf
ret
sbb
stos
cmpb
adc
cmp
mov
movb
push
dec
mov
adc
and
adc
jge
aaa
pusha
mov
or
or
decb
jb
sub
into
jne
or
int3
in
fsubl
jmp
int
scas
push
nop
shlb
invd
dec
or
aam
aam
in
and
inc
mov
jg
call
cltd
jo
or
adc
cmp
loope
fistpl
popf
adc
shll
push
and
push
lods
loopne
outsl
xchg
into
add
mov
cs
dec
or
or
push
dec
adc
mov
dec
les
jmp
movsl
lods
aas
mov
xchg
movb
push
xor
pushf
mov
sbb
mull
ret
xchg
xor
adc
mov
cmpsb
imul
fwait
sbb
movsl
push
mov
and
mov
lcall
jge
ret
ffreep
pusha
push
sub
jne
stos
and
movb
add
bound
lods
pusha
cld
mov
fiadds
iret
adc
adc
bound
add
movsl
jle
dec
fdivrs
fcomps
xlat
mov
cmc
dec
push
jbe
subl
add
je
adc
out
cmp
cld
adc
jge
mov
xor
negb
jnp
repz
fisttps
ja
dec
cmp
or
sub
mov
je
decb
js
mov
push
push
outsb
ljmp
pop
loopne
pop
sub
in
into
jb
ja
add
incl
pop
cmp
in
add
adc
sbbl
test
inc
sbb
fisubrl
add
adc
roll
sub
bound
sub
int3
fsubs
sub
sbb
or
movsl
xchg
rorl
rorl
fnstsw
mov
or
ds
and
jno
mov
test
mov
mov
cmp
or
push
mov
adc
loop
idivb
push
lods
mov
lock
adc
mov
push
adc
pop
shl
xchg
arpl
cwtl
in
pop
das
cmpb
mov
mov
in
insb
std
outsl
inc
insb
mov
mov
adc
xchg
jne
scas
adc
les
fsubs
adc
jo
rcr
mov
inc
adc
push
loopne
roll
sbb
ds
push
sahf
cs
js
outsb
inc
ret
mov
shlb
fs
pop
jg
mov
outsb
test
sbb
test
test
sub
mov
pop
je
pusha
mov
pop
es
leave
mov
push
xchg
xchg
je
sahf
fmull
push
or
pop
add
cs
nop
inc
ds
jl
inc
gs
arpl
or
mov
cmp
xchg
mov
sar
xor
repnz
mov
lods
insl
add
sarl
testb
pop
jge
xchg
adc
dec
pop
add
mov
jns
lcall
incb
ljmp
fsub
data16
pop
lret
sub
jge
cwtl
or
fnstsw
or
pop
ljmp
fs
in
push
mov
add
sub
cs
movsl
cmpsb
les
or
mov
and
rolb
jg
cmp
sub
lcall
call
cmp
inc
dec
mov
andb
test
inc
aaa
incb
jp
adc
aad
lea
sbb
popa
int3
adc
jg
loopne
cld
clc
jle
xchg
cs
loope
lret
jo
sar
add
je
lahf
adc
mov
loopne
pop
into
pop
je
jp
loopne
mov
mov
test
mov
add
adc
or
cld
mov
sub
paddsw
popf
lock
adc
div
in
pop
jle
dec
je
ds
pop
pop
sarl
fsubp
ljmp
loopne
ficompl
outsb
push
pop
int3
dec
push
push
inc
add
outsb
loop
lock
pop
test
mov
aam
or
mov
mov
dec
jmp
cltd
icebp
jo
adc
adc
or
jmp
mov
add
stc
jmp
cmc
pop
dec
and
push
por
rolb
arpl
inc
push
sub
jno
and
cmpb
test
push
or
add
mov
adc
jmp
lock
add
test
adc
scas
out
into
scas
mov
adc
xor
pop
test
jmp
sarl
adc
iret
add
in
add
daa
mov
push
call
mov
and
ljmp
clc
add
pop
mov
pop
notl
popf
call
sub
std
gs
scas
add
es
fildl
in
push
mov
aad
push
outsb
jl
std
adcb
dec
in
stos
insb
movsl
call
add
out
cmpb
dec
add
lock
and
inc
verw
xchg
add
cmp
in
das
ds
inc
add
and
and
mov
addb
push
sbb
or
sub
mov
loope
jl
ret
fmulp
mov
dec
loop
outsl
dec
mov
and
jmp
adc
or
leave
and
call
dec
push
mov
sub
mov
or
notb
pop
fistpll
jl
or
leave
out
pop
orl
test
ljmp
add
pop
popa
inc
push
fildl
mov
fcmovne
adc
js
outsb
pusha
addr16
testb
mov
test
push
das
cmp
cmp
jbe
das
sub
aam
and
je
fcompl
nop
aam
cli
lods
inc
add
xchg
sar
jg
push
test
pop
je
push
and
jne
sub
repnz
clc
add
adc
or
lods
inc
jmp
mov
pop
jge
pop
push
fwait
mov
in
out
sub
je
movsb
push
insl
incl
in
pop
rolb
jmp
sub
fidivrl
mov
decb
jmp
std
dec
popa
mov
ljmp
loopne
mov
xchg
push
outsb
push
jbe
stos
add
jbe
divb
xchg
scas
add
cli
mov
aam
sbb
jae
xchg
xchg
gs
sbbb
adc
into
in
or
cld
mov
js
xchg
test
add
pop
mov
movsb
int3
jge
mov
jge
jle
ficoms
dec
dec
mov
lea
pop
and
cmpb
cli
outsb
std
mov
scas
sub
inc
inc
bound
adc
mov
es
cld
push
push
movsb
rcr
outsb
inc
or
xor
sbb
mov
mov
inc
popa
fisttpl
mov
les
test
mov
repnz
stos
scas
or
mov
inc
add
pushf
lcall
in
inc
insl
inc
adc
cmp
dec
stos
icebp
adc
adc
pop
pusha
push
or
cmp
int
sti
add
xchg
xchg
adc
push
cli
add
or
ret
pusha
add
xacquire
repz
stos
mov
cs
or
push
dec
insb
jmp
or
xor
add
dec
js
adc
dec
xor
add
loope
inc
jle
je
subb
jbe
mov
pop
add
cld
out
xlat
je
addr16
pop
addr16
jp
sub
jmp
sbb
test
jecxz
xchg
mov
adc
inc
jl
in
ljmp
psubusb
jl
mov
mov
adc
hlt
stos
insl
lahf
pop
cltd
pop
xor
mov
fcomps
add
out
sbb
in
mov
dec
mov
add
cmp
bound
sub
or
clc
mov
je
jne
or
dec
mov
jle
adc
pusha
addb
xchg
call
dec
hlt
je
mov
adc
aaa
push
sub
jp
jne
cmp
jecxz
js
clc
adc
sub
or
push
fsubrs
movsb
adc
add
cmp
mov
push
je
andb
testb
ret
cmpl
xchg
mov
push
ljmp
add
push
incl
lahf
shll
inc
push
inc
and
shlb
out
push
inc
add
or
call
call
mov
in
loopne
icebp
mov
test
sub
adc
movsb
inc
inc
add
les
xor
loopne
push
adc
or
xor
adc
adc
xor
add
je
xchg
sbb
sbb
inc
in
cmp
rol
sub
test
add
incb
inc
out
adc
mov
inc
or
stos
mov
subb
or
add
bound
xchg
push
add
push
repz
call
call
adc
inc
fcoml
cli
popl
xor
dec
cmc
pop
mov
sbb
lock
jb
mov
or
push
sub
cmp
adc
xchg
dec
loop
push
adc
data16
fcompl
mov
in
jl
xchg
adc
adc
adc
mov
adc
dec
fcoml
cmp
inc
add
bound
arpl
ficoms
add
enter
and
adc
je
or
jbe
push
scas
call
mov
shlb
sar
rcll
out
push
or
adc
or
inc
dec
xor
fwait
or
or
or
inc
sub
les
test
js
adc
push
je
adc
mov
sti
xor
push
lcall
xchg
mov
cmpb
pop
pop
mov
adcl
cmp
shr
mov
mov
sarl
inc
inc
sbb
inc
out
ficoml
xchg
fdiv
mov
scas
pop
xchg
mov
mov
test
loope
scas
mov
add
lods
icebp
enter
dec
out
adc
rcrl
mov
call
pop
repnz
inc
sti
std
jmp
jle
call
scas
nop
cmpsb
mov
js
jle
je
or
or
lahf
ud0
jle
xchg
ret
adc
or
cmp
mov
rorl
inc
stos
fnsave
dec
int
or
dec
push
fs
pop
xchg
add
data16
addr16
push
adc
inc
push
call
adc
xchg
sbb
jecxz
xchg
cmp
xor
sbb
repnz
icebp
dec
mov
ljmp
std
cmp
mov
push
mov
fcom
outsb
xchg
push
lret
jmp
mov
xchg
cmp
mov
scas
push
pop
add
cwtl
add
scas
cmp
xor
and
int3
xor
mov
dec
mov
test
adc
and
dec
fcomps
xor
jl
fmuls
mov
inc
jle
add
push
inc
xchg
push
fsubl
xchg
cld
mov
xor
mov
lock
push
adc
fstps
mov
pop
out
mov
mov
enter
test
loope
pop
out
and
loop
andb
movsb
loopne
jbe
aas
std
mov
cmc
call
jae
loope
mov
push
insb
or
and
sub
loope
call
push
mov
hlt
popf
mov
pop
jne
icebp
add
mov
lret
or
inc
xorb
nop
cmp
rolb
mov
out
xchg
and
pop
jne
ret
jne
bound
xchg
popa
or
mov
adc
popl
je
sub
dec
int3
mov
or
hlt
add
mov
inc
pop
adcl
pop
mov
xor
adc
add
adc
xchg
push
and
pop
mov
push
sbb
push
int3
sbb
insb
mov
adc
push
mov
orb
dec
xchg
mov
shlb
in
outsb
lock
incl
add
je
leave
push
push
call
lds
inc
add
add
sub
cmp
pusha
test
xor
loopne
pop
sub
pop
push
lock
test
jo
xchg
pop
and
dec
add
insl
cltd
loope
push
pop
cmpsb
dec
push
lret
icebp
addl
jbe
stos
dec
daa
and
xor
cmpsb
push
pusha
mov
and
mov
je
jo
sub
inc
adc
fdivs
daa
cmp
cmp
incl
push
push
inc
adc
adc
add
addr16
or
ljmp
jns
xchg
adc
or
add
frstor
iret
aam
adc
imul
mov
adc
ljmp
jl
pop
movsl
mov
test
adc
call
cmc
mov
ljmp
mov
jbe
std
in
jl
mov
outsb
xchg
sbb
fadd
fcoml
js
sbb
add
dec
add
pop
push
int3
je
push
lds
push
fistps
xchg
push
mov
cmp
mov
stos
pop
cmp
add
add
jno
add
add
sbb
lods
adc
add
stos
mov
rclb
data16
ficoml
stos
les
and
mov
push
and
mov
out
pop
push
jg
push
push
dec
sti
clc
jbe
sbb
out
add
or
jne
push
jmp
pop
outsl
clc
call
std
es
movsl
lea
cmp
dec
call
push
jl
out
sbb
jecxz
jmp
rclb
mov
clc
mov
adc
cmp
bound
add
loope
mov
test
cmp
lcall
js
call
jmp
mov
xor
mov
or
xchg
xchg
xor
mov
jnp
jno
dec
xchg
push
sub
bnd
mov
pusha
sti
inc
loop
je
cmp
pop
dec
shlb
mov
in
das
adc
xchg
outsb
jbe
test
mov
pop
xchg
jbe
imul
sbb
mov
movb
fcoml
adcl
cld
xchg
je
add
ret
dec
pushf
cmp
push
push
mov
je
push
shrb
adc
push
in
push
mov
or
lahf
aam
aaa
call
xchg
push
adc
dec
inc
les
adc
jb
push
xchg
adc
pop
sbb
repz
cmp
mov
std
or
sbb
cmp
call
adc
incl
sub
mov
adc
je
or
jo
xchg
cmc
das
mov
je
cli
jmp
adc
add
cld
xor
mov
sbb
push
mov
or
aad
sbb
xchg
repnz
xor
je
push
jle
inc
inc
pop
jl
fsub
sub
pop
mov
mov
pushf
sbb
push
loope
mov
or
leave
adc
jne
stos
jae
mov
in
bound
lret
je
mov
imul
adc
ds
cmp
adc
sub
xor
sub
loop
pop
pop
adc
mov
or
add
inc
or
scas
psllw
popa
fdivs
or
inc
bound
jbe
push
sub
push
push
out
sbb
std
pop
es
adcb
push
inc
clc
in
or
inc
mov
clc
hlt
and
call
fyl2x
clc
push
mov
pop
in
stos
sbb
arpl
jg
mov
jl
cltd
push
adcl
fistps
pop
inc
add
or
push
xor
jmp
pop
push
dec
jge
call
insl
movsb
fs
call
adc
sbb
cmpsb
jecxz
ds
int
je
call
mov
or
aad
xchg
outsl
adc
sub
jmp
stc
daa
scas
push
push
cmp
into
pop
testl
int
sti
aaa
dec
stos
or
xchg
lret
push
pop
sarb
lock
fisubl
cmovb
mov
lock
stc
insb
in
add
mov
stc
sub
movsb
and
or
jle
lahf
shrb
mov
dec
cs
je
push
xchg
jno
dec
xchg
jbe,pt
mov
incb
in
add
cmp
std
icebp
fidivrs
push
or
filds
pop
lods
jecxz
repnz
mov
rorl
stos
stos
ficoms
push
sbbb
sub
add
ljmp
add
inc
in
sub
dec
add
and
stos
push
loopne
dec
mov
jg
push
out
dec
test
fiaddl
in
push
adc
test
push
add
mov
das
adc
dec
xor
dec
dec
push
cs
push
adcl
or
or
pop
adc
cltd
xchg
daa
ds
cmpsb
out
xor
insb
and
sub
or
jg
mov
push
test
pextrw
and
jecxz
aaa
pop
xchg
call
push
test
shr
or
push
jne
or
cmp
inc
sub
clc
inc
gs
cmp
cli
aam
mov
or
or
js
les
pop
cs
mov
cwtl
or
adc
decl
jnp
test
jb
pop
cmp
lcall
sbb
push
sbb
sbbl
call
mov
mov
jns
jne
popa
jmp
mov
jecxz
fsubl
jle
data16
push
xlat
mov
adc
jp
scas
outsl
daa
je
adc
in
adcb
fsubl
iret
cwtl
or
cli
aaa
xchg
lock
pop
lcall
enter
scas
scas
std
pop
enter
add
aaa
and
ds
jmp
cltd
aas
add
pop
pop
xchg
call
mov
pop
mov
inc
incl
add
std
cmp
dec
insl
jno
and
xchg
scas
mov
sub
xchg
adc
sbbb
outsl
adc
add
push
ret
mov
push
add
sub
push
jne
adc
jle,pt
cmc
inc
sbb
mov
adc
outsl
jge
js
call
adc
or
lock
mov
xchg
or
leave
cmc
test
inc
mov
movsb
or
xor
rorl
cli
jb
mov
or
push
call
cmp
jo
es
pop
frstor
mov
push
mov
add
pop
and
enter
das
subl
ret
pop
cmp
nop
add
in
scas
and
sub
outsb
xchg
jle
push
call
addr16
add
pusha
hlt
imul
adc
inc
jo
lods
or
inc
lock
push
cs
jmp
je
mulb
mov
cld
push
js
sub
cld
dec
xchg
or
nop
sbb
js
xchg
fwait
jo
lea
jle
call
xor
pushl
les
adc
jo
xor
adc
ljmp
scas
xor
cmpsl
fcoml
dec
dec
adc
in
and
xor
shl
xchg
xor
scas
lea
pop
lret
sahf
jo
sbb
push
xchg
add
mov
mov
pop
pop
xchg
mov
shl
jg
cld
xlat
std
repz
jg
call
dec
dec
mov
roll
adc
subl
in
inc
jecxz
orb
mov
stos
out
cmpsb
or
stos
xchg
popf
daa
adc
mov
dec
push
jno
or
sbb
and
sbb
xchg
aas
arpl
mov
add
jl
adc
inc
or
mov
movb
adc
xor
fwait
mov
cmpb
pop
fisubl
into
jl
decb
mov
jl
add
into
js
jg
xchg
adc
mov
jno
dec
add
xchg
sub
sub
xor
dec
add
decb
pusha
lds
ss
std
mov
mov
or
andb
xchg
dec
roll
push
xchg
jp
push
ljmp
pop
cmp
jb
mov
out
sbb
test
pop
push
mov
imul
mov
ljmp
stos
sbb
test
mov
sbb
inc
lcall
lods
rcr
repnz
sbb
cmpl
or
xchg
and
in
mov
pusha
or
cmpsl
mov
mov
in
scas
dec
cmp
and
jae
jmp
je
call
mov
lods
lds
adc
jle
pop
adc
sbb
bound
test
adc
je
mov
out
adc
adc
jb
fiadds
addb
or
xchg
adc
enter
jg
xchg
add
jge
mov
mov
loopne
mov
inc
fidivs
adcb
pusha
adc
mov
std
cmpsb
scas
movsb
inc
lret
push
jecxz
pop
lock
cs
int3
sbb
loop
lcall
loope
add
aas
orb
aaa
add
mov
aad
xor
push
pushl
fs
pop
fs
scas
into
enter
int3
lods
aaa
inc
fwait
xor
stos
or
jl
movups
iret
sbb
je
dec
and
pushf
aam
adc
es
and
jecxz
xchg
pusha
test
pop
or
add
sahf
xchg
or
ljmp
pushl
pop
adc
xor
push
dec
leave
clc
mov
add
add
or
jnp
adc
jmp
hlt
call
scas
inc
rcr
rolb
adc
imul
mov
push
inc
mov
aaa
add
rolb
test
ret
inc
jl
fcompl
lods
or
cwtl
cmpsb
adc
cmp
lock
out
cmp
push
xchg
clc
adc
jl
jne
sub
pop
pop
push
mov
sbb
call
push
sti
adcb
and
sbb
xor
es
jle
test
inc
lods
jl
pushf
mov
mov
sub
bound
push
dec
add
jns
pop
sbb
imul
gs
rcl
push
mov
fsubs
mov
js
pop
orl
pusha
add
lock
ds
imul
adc
daa
aam
dec
mov
xchg
mov
cmc
mov
or
jmp
add
push
es
add
rclb
adc
pop
ret
or
aam
push
xor
ss
enter
jl
iret
push
or
sbb
xor
in
adc
dec
lods
movsb
xchg
in
xor
ror
mov
cli
inc
sbb
addb
nop
ret
dec
aaa
subl
out
pop
pop
xorl
adc
mov
shrl
xchg
orb
loopne
clc
jnp
xchg
xor
sub
fists
push
fisubrl
test
xchg
fdivrp
mov
push
push
out
pop
or
fsubrs
sub
jg
pushf
loope
push
push
call
adc
xchg
xchg
dec
cmp
aad
add
adc
adc
mov
imul
mov
cli
pop
mov
add
adc
jl
jle
mov
enter
push
or
xchg
dec
idivb
hlt
add
adc
mov
and
add
test
push
and
dec
sarl
aas
call
loop
inc
std
in
lods
adc
pop
or
ret
pop
mov
jle
ret
test
adc
testl
jge
or
stos
cmp
or
add
or
out
push
rorl
cmp
js
js
je
adc
jbe
push
shl
mov
mov
adc
lock
andl
jmp
push
xchg
mov
push
adc
pop
xchg
fs
add
dec
cmc
es
aas
adc
adc
imulb
pop
ja
push
add
or
mov
mov
movb
jo
outsw
incl
mov
imul
out
outsl
add
rcl
mov
mov
sbb
xchg
push
lea
rorb
and
cmpsl
imul
inc
pusha
and
sub
fcomps
add
aam
push
mov
or
mov
and
add
mov
jo
mov
xchg
in
inc
xchg
leave
lcall
dec
jo
pop
mov
add
enter
jecxz
pop
nop
mov
sbb
cmp
clc
mov
or
mov
or
xor
mov
mov
je
cs
sbb
addl
push
adc
push
or
enter
sar
dec
bound
inc
push
stos
adc
rol
mov
js
inc
movsb
push
sub
scas
rolb
push
cmp
bound
adc
hlt
in
adc
cmp
ja
call
add
mov
jp
and
cli
in
mov
pushf
xchg
add
inc
push
ret
mov
mov
mov
add
scas
xor
jbe
jne
pop
cwtl
jb
push
mov
dec
and
lahf
jmp
jp
jle
loope
dec
jmp
adc
inc
push
cmp
cs
mov
shrl
ret
cmpsl
sbb
loop
add
sbb
jmp
mov
lock
adc
arpl
jo
pusha
ret
and
mov
cmpsb
popa
les
ds
adc
dec
js
sub
pusha
sub
rcr
imul
add
lock
jbe
xor
pusha
ret
stos
sbb
sub
shll
outsb
push
cwtl
xchg
adc
ficoml
cmc
add
scas
pop
mov
lea
call
lods
or
ffreep
xchg
cltd
adcb
cwtl
inc
jmp
add
adc
add
push
enter
icebp
or
push
push
adc
jo
dec
cmpb
jg
sub
adc
push
popf
je
not
lahf
shlb
or
daa
sbb
xchg
stc
push
lds
je
aam
subb
adcb
xchg
or
ljmp
or
jmp
nop
push
std
pop
add
adc
jmp
push
adc
dec
in
icebp
cmp
cltd
fstpt
adc
call
je
inc
clc
add
jp
cld
push
stc
adc
xchg
hlt
or
pop
and
imul
adc
adcb
push
sub
fildll
clc
pop
test
mov
mov
inc
sbb
mov
mov
xchg
cmpsb
mov
inc
sbbl
ret
out
mov
add
movb
jbe
pop
and
or
decl
mov
test
and
movsl
callw
in
call
lret
fs
mov
inc
cmp
fiadds
push
cmp
xor
jg
es
in
out
je
and
cld
loopne
dec
mov
mov
lock
sub
mov
inc
or
cmp
out
lea
icebp
subl
je
sub
js
movsb
jg
adc
aas
or
pop
fimuls
aam
adc
arpl
aaa
dec
cli
test
shr
testb
and
shr
js
pop
jbe
dec
ret
pop
or
inc
ja
mov
repnz
in
repnz
loop
sub
push
xchg
push
call
or
inc
movsl
call
movsb
xchg
shlb
xchg
or
sahf
mov
loopne
ret
xorb
shlb
lahf
enter
rclb
call
xor
dec
les
hlt
mov
adc
mov
sarl
push
and
outsb
mov
or
mov
xchg
pop
rorb
adc
sbb
je
and
popa
cmp
inc
mov
fcomps
cmp
and
push
stos
aas
cs
shr
mov
into
cmp
movsb
lods
enter
mov
je
mov
pushf
inc
inc
or
outsb
call
pushf
mov
bnd
xor
scas
outsb
adc
out
push
add
bound
mov
mov
xchg
push
fwait
xchg
test
sbb
dec
movsb
push
push
nop
add
mov
int3
add
jp
stos
adc
sbb
enter
cmp
decb
and
testb
ss
cli
jg
jmp
lock
decl
fisubs
xor
je
ds
call
adc
pop
adc
pop
cmp
neg
mov
mov
or
add
add
aam
jmp
pop
cmpsb
adc
pop
lods
insb
mov
pushf
enter
jle
mov
add
fisubrl
aas
push
cmp
dec
das
mov
cmp
adc
cld
leave
lcall
inc
test
lret
and
add
data16
and
pushf
add
mov
pop
outsl
shr
sar
shrb
and
add
sbb
jbe
dec
les
cltd
adc
inc
pop
adc
and
push
mov
push
adc
mov
int3
mov
adc
cwtl
add
and
es
mov
sbb
adc
fidivrs
in
stc
rorb
call
imulb
clc
sub
fsubs
jp
jmp
add
or
enter
test
dec
jl
mov
aas
or
fdivrl
mov
jmp
std
aaa
sub
adc
and
je
sub
rcll
mov
loop
and
push
jno
xchg
sub
cmp
data16
fmul
mov
sub
push
cmp
lret
inc
sti
scas
popa
fdiv
cmp
adc
notb
imul
call
rorb
ret
adc
lock
adc
pop
mov
call
cli
push
movsl
popf
inc
cmp
call
or
pop
mov
adc
aas
in
sub
mov
add
adc
xor
mov
loop
insl
fwait
lods
das
xchg
adc
divb
call
clc
or
daa
xorl
std
add
dec
jle
or
mov
out
shrb
jle
clc
ret
adc
adc
ret
test
and
or
mov
aam
lods
xor
add
mov
sar
aam
or
test
lods
adc
pop
ret
cmp
xor
and
sarb
stc
ret
jmp
jne
and
mov
inc
jp
sahf
jl
xchg
or
adc
outsl
xor
push
cmpsl
cmp
stc
jne
and
shr
nop
add
insl
aas
jle
addb
xchg
sub
movsl
pop
or
dec
or
and
fadds
mov
xor
cmp
or
lret
lret
ss
lcall
je
mov
pushf
shr
adc
icebp
fs
jnp
andb
rorb
jbe
daa
cld
loopne
fidivrs
or
maskmovq
testl
test
mov
inc
rcrb
outsb
xchg
sbb
pop
sub
test
xchg
sbb
or
fsubl
sub
mov
sbb
sub
int3
lea
shrb
data16
je
or
fmuls
insb
fistps
xor
jg
dec
aad
mov
dec
adc
movsl
mov
mov
gs
xchg
add
call
inc
jo
aas
fdivrs
nop
cmp
stos
pushf
inc
data16
out
adc
les
nop
fsubrs
or
jb
and
mov
movsl
pusha
test
cmp
inc
daa
mov
std
out
stc
adc
push
adc
push
rclb
roll
push
jmp
mov
loope
jns
aaa
jp
push
imul
ret
push
and
movsb
push
cltd
add
lea
jb
sbb
imulb
aad
imul
bound
fdivrs
add
mov
add
mov
pusha
adc
xor
std
mulb
pop
push
mov
inc
data16
addb
adc
fdivr
mov
mov
les
cmc
stos
pop
aas
xor
adc
push
popa
fdivrl
adc
push
test
adc
inc
jnp
mov
dec
xor
mov
mov
cs
adc
push
xchg
adcl
push
shll
sub
sbb
fwait
orl
adc
dec
adc
dec
notb
idiv
fbld
fs
std
mov
dec
fs
push
and
adc
mov
lea
mov
pop
test
insl
out
ret
imul
adc
stos
mov
cmpl
xlat
jo
adc
xchg
out
ss
sbb
push
add
ds
dec
in
push
mov
lock
xchg
adc
pop
sti
cmp
inc
inc
es
push
sub
dec
or
shrb
and
inc
xchg
mov
fs
jle
sub
add
jecxz
mov
or
scas
pop
pop
xchg
or
xor
push
call
push
dec
inc
cld
xchg
add
push
or
and
push
scas
sub
adc
test
push
or
mov
shrb
icebp
and
mov
fadd
jnp
ljmp
sub
mov
je
dec
call
jl
adc
dec
and
inc
js
dec
in
sub
add
or
ret
jb
xor
outsb
xor
jl
cs
imul
call
pop
sub
mov
daa
shr
xchg
or
adc
jb
adc
mov
lods
xchg
nop
jns
call
in
jmp
push
scas
es
push
adc
add
push
pop
jmp
pop
stos
notb
fimuls
test
enter
leave
subb
daa
dec
insl
mov
sbb
pop
cmc
jnp
cld
xor
push
je
data16
and
lea
push
test
and
add
stc
adc
out
fwait
and
sarb
pop
and
jne
fadds
and
adc
pop
in
sarl
inc
or
pop
inc
in
add
mov
dec
push
adc
dec
fldl
lods
sub
lods
xor
rcrb
mov
test
fsubrl
push
inc
cld
mov
adc
call
lea
xchg
rcrb
test
movntps
push
ds
clc
sbb
adc
das
jl
jbe
pop
je
adc
decl
mov
dec
je
add
or
and
mov
fistl
mov
les
ret
adc
lock
stos
cli
mov
mov
and
dec
and
nop
jne
add
sbb
ffree
pop
test
jo
fisttpll
jo
or
and
inc
adc
jge
mov
mov
or
cmp
sbb
repnz
lock
cmp
jle
aam
out
in
in
mov
mov
adcb
push
push
inc
push
xchg
push
add
sbb
and
or
test
mov
mov
inc
dec
rcrb
bound
iret
mov
roll
scas
outsl
pop
xchg
xchg
jge,pn
call
in
and
jo
loopne
sbb
outsl
rolb
out
mov
mov
test
inc
sub
jl
push
jg
lods
outsl
call
adc
fcoms
mov
test
fs
mov
or
cld
repnz
fwait
into
add
inc
shl
fimull
or
arpl
lock
int3
call
dec
movsb
leave
mov
jl
dec
sbb
jno
test
or
jo
add
add
lods
fs
pop
cmpb
push
pop
add
pop
repnz
sbb
in
add
pop
push
mov
push
pop
inc
cmp
fdivrl
js
cwtl
movsl
xchg
adc
xchg
and
aas
inc
adc
nop
clc
lods
and
pop
es
in
cmp
scas
add
mov
js
xchg
add
fcoms
lods
cli
pop
inc
daa
add
adc
dec
std
call
xchg
fadds
add
mov
es
mov
mov
adc
mov
je
jmp
or
jp
lods
lcall
lret
add
jg
aas
cmp
pushf
mov
dec
scas
dec
enter
outsl
clc
and
mov
clc
call
ss
cli
in
bound
ficoml
sbb
sub
ret
rcl
shlb
mov
lock
push
cltd
out
xchg
enter
push
lods
loopne
fmuls
mov
dec
jp
rclb
shlb
mov
pusha
cmpb
add
jmp
sbb
push
cmp
pop
fisttpl
push
add
add
cmp
nop
sub
add
cs
or
divb
sub
cwtl
add
mov
and
fsubl
mov
cmpsb
adc
adc
xchg
mov
sub
mov
jbe
icebp
dec
cld
outsl
or
jnp
sbb
lock
and
scas
and
adc
sahf
insb
repnz
cmp
jle
mov
pop
inc
adc
leave
jne
mov
ds
adc
stos
mov
call
enter
ljmp
pushf
aad
mov
sarl
add
sbb
sbb
loopne
cwtl
clc
cmp
rorl
jne
dec
push
stc
pop
clc
push
scas
ret
sub
int
mov
push
out
das
repnz
cld
rcr
cmp
adc
call
push
das
xorb
adc
jg
xchg
or
pop
pop
xchg
scas
and
lcall
jo
sbb
lret
jne
pop
jmp
mov
pop
faddp
js
add
or
adc
xchg
dec
sub
jo
loop
stos
loope
pop
enter
sbb
call
mov
ljmp
mov
inc
nop
cmpsb
xor
cmc
call
test
mov
add
add
push
push
mov
je
sub
push
mov
xorb
sbb
add
jmp
inc
mov
es
sub
lahf
dec
movsb
inc
sbb
add
add
test
jle
cmpsl
jmp
dec
mov
lock
mov
sub
dec
push
mov
push
test
jne
mov
or
loope
and
fidivs
sub
and
fsubrl
add
mov
lcall
cli
adc
ret
test
jo
dec
outsb
mov
lock
fdivrs
adc
movsb
call
in
adc
xor
notb
mov
mov
repnz
xchg
pop
mov
loopne
add
les
pop
xor
mov
sahf
mov
pop
aam
inc
mov
jo
lcall
mov
pop
mov
fisttps
sbb
je
xchg
xchg
iret
test
jle
je
cld
or
andl
mov
pop
ds
or
out
and
loopne
adc
and
rorl
adc
lret
inc
xchg
shlb
out
sti
push
mov
and
outsb
dec
enter
aaa
or
inc
add
sarb
adc
cwtl
xchg
push
out
into
pop
in
mov
push
mov
popf
push
cmp
rcr
pusha
aam
addl
mov
bound
int3
adc
sbb
aam
pop
loope
icebp
add
push
xor
pop
ret
loope
popa
and
push
mov
mov
cmp
out
mov
and
adc
icebp
mov
clc
out
bound
movsl
test
in
adc
jmp
out
xlat
iret
sub
lcall
push
sub
pop
xchg
dec
pop
insb
xchg
fs
xchg
cld
dec
mov
mov
pop
mov
adc
ret
lea
call
sti
fisttpll
jae
mov
mov
mov
call
enter
cld
adc
push
scas
je
add
xor
xor
fcomi
stos
cmp
xchg
or
pop
imul
mov
cmp
cmpsl
or
adc
sbb
lcall
or
call
outsl
cmp
lods
pop
sub
push
into
mov
xchg
scas
lcall
in
sub
mov
call
enter
add
mov
fbld
rcrl
jmp
push
mov
lock
adc
and
and
cmpl
push
ljmp
icebp
sub
sbb
dec
mov
inc
dec
sbb
add
add
push
adc
sahf
add
addr16
lds
addr16
cmc
cmp
sahf
mov
adc
inc
aam
loope
jb
and
jl
arpl
out
adc
fimull
jmp
aam
pop
and
inc
in
in
push
icebp
and
fcmove
fwait
dec
or
insl
adc
and
int
mov
js
pop
inc
fs
xor
add
pop
add
ret
mov
fmuls
sub
xchg
sub
mov
add
or
pop
dec
inc
sbb
add
sub
cmp
loopne
lods
xor
adc
and
push
mov
jge
fisubrs
dec
cmpsl
mov
call
mov
sub
loopne
or
loope
xchg
cmp
call
inc
mov
enter
ja
push
add
loopne
and
lret
and
push
repz
adc
clc
sub
jecxz
cmp
sub
sub
lock
dec
jl
dec
and
or
lock
and
data16
add
adc
out
adc
jg
sbb
xchg
adc
mov
add
push
mov
rolb
xchg
data16
test
push
xor
lods
int3
mov
mov
jl
push
imul
push
adc
xchg
and
pop
or
sub
int
aam
inc
cmc
imul
xchg
sub
fbld
jge
add
addb
adc
comiss
int
or
mov
push
mov
rorl
pop
je
test
or
add
loopne
adc
adc
out
test
jecxz
pop
repnz
or
nop
mov
mov
arpl
inc
inc
movsl
dec
hlt
ljmp
xchg
andb
add
mov
mov
xor
and
notl
shll
mov
lods
movsb
adc
mov
jae
fisubrl
je
outsl
xchg
or
mov
sbb
in
and
bound
jo
or
push
int3
push
mov
loope
add
imul
cmp
icebp
lds
sub
lods
mov
repnz
mov
ds
sbb
out
call
lods
jo
jmp
shll
or
push
mov
test
call
and
adc
jns
mov
sbb
clc
mull
cmp
add
adcb
jb
scas
je
stos
inc
test
mov
je
push
push
push
add
aaa
call
or
or
mov
pushf
movsl
xchg
mov
mov
adc
cltd
and
insl
sbb
stos
test
adc
js
add
adcl
mov
mov
loope
or
or
mov
and
adc
dec
mov
mov
test
fidivs
add
pushf
lods
scas
es
cld
shr
rclb
lock
popa
stc
push
mov
out
xchg
subb
or
es
pushf
int3
mov
pop
or
push
je
xor
or
push
cwtl
jg
cmp
scas
add
scas
bound
shlb
jmp
pop
je
dec
je
inc
jg
mov
push
sbb
mov
sub
xlat
mov
jle
mov
adc
in
xchg
pop
js
and
cli
pop
out
push
adc
in
stos
add
add
fucomip
mov
rolb
cmpsb
lds
stos
lea
push
cld
cmpl
insl
shlb
mov
mov
call
push
push
cmp
outsl
andb
clc
aaa
lods
mov
mov
hlt
sbb
loopne
sbb
stos
outsb
and
arpl
enter
std
push
cmp
cmp
test
mov
sub
mov
fists
mov
out
adc
push
mov
int3
lock
inc
je
pushf
adc
ret
mov
sub
clc
mov
push
stos
cmp
adc
push
out
pop
out
push
aam
mov
add
inc
or
das
adc
dec
ss
dec
adc
in
pop
frstor
outsl
les
and
sub
xor
sbb
mov
mov
bound
add
stos
sub
dec
stos
mov
and
shrb
mov
xchg
int
adc
pop
je
inc
and
adc
mov
cmpsl
scas
decl
push
fcomps
mov
mov
jmp
mov
mov
loope
es
out
in
gs
sub
paddq
fdivrl
pop
fs
rorb
jne
mov
orb
dec
mov
outsb
aas
std
out
jne
mov
sbb
adc
movsb
mov
sbb
and
daa
adc
aas
lods
cmp
mov
ficoms
nop
fildl
mov
push
ja
pop
and
je
insb
loope
fiaddl
flds
xchg
loopne
clc
mov
adc
adc
arpl
mov
sbb
push
aad
ss
adc
in
aam
inc
mov
mov
stc
jge
or
lods
xchg
adc
sub
inc
or
lods
mov
sbb
mov
js
or
dec
adc
lea
test
pop
sbb
add
sbb
xchg
ffree
in
ljmp
sub
mov
inc
push
sbb
insl
add
xchg
lret
js
in
daa
dec
jo
jg
call
jne
cmp
hlt
enter
adc
and
lods
mov
pop
incl
scas
call
or
add
lcall
ljmp
fsubp
jle
adc
cmc
in
sbb
cmc
fsubp
push
dec
sbb
mov
sahf
call
shrb
push
incb
sbb
fidivrl
decl
insb
jl
jecxz
out
cmp
xchg
push
lock
push
lret
fadd
or
incl
jbe
jg
add
adc
outsb
jp
or
xor
imul
dec
into
or
jmp
xchg
sub
inc
jle
mov
inc
push
mov
mov
or
jns
aas
inc
rcr
call
adc
add
je
sbb
insb
inc
adc
fnsave
adc
xchg
dec
out
nop
or
push
mov
sarl
jnp
dec
push
cmp
lock
gs
jbe
es
cmp
cld
xchg
std
pop
sbb
loop
pop
faddp
adc
pop
adc
adc
pop
aam
mov
ret
fistl
push
rol
pop
dec
call
jle
lea
lea
jns
lods
ds
bound
decl
rorb
pop
jae
adc
jo
cmp
pushl
mov
test
je
mov
adc
das
frstor
dec
adc
lret
mov
mov
xchg
inc
ret
fisubrs
mov
ret
js
xor
call
mov
rcll
sub
mov
jae
call
jbe
je
arpl
jo
and
and
inc
sbb
fsts
jecxz
pop
push
clc
adc
jb
das
adc
call
std
mov
mov
movhps
loopne
xchg
jl
xor
fadds
in
clc
into
or
stos
xor
adc
out
pop
loopne
mov
mov
xlat
sti
adc
hlt
add
jnp
aad
roll
test
pop
sbb
adc
adc
adc
ja
pop
dec
clc
inc
push
gs
push
sub
push
or
ror
mov
test
push
or
dec
xor
dec
sbbb
cmpsb
xchg
add
add
or
aaa
add
xor
rcrl
add
lock
jmp
je
adc
es
and
dec
ret
fisttps
xorb
ret
or
popf
adc
and
test
fs
fbld
clc
xor
cmpsl
aam
inc
push
add
push
adc
inc
pushf
mov
or
test
sub
xor
fadds
call
adc
ret
add
adc
cwtl
inc
adc
cmpl
call
insb
xchg
decl
dec
imul
sbb
ss
xchg
shrb
into
add
dec
or
nop
hlt
nop
pop
out
cmp
pop
jns
cwtl
mov
ljmp
rolb
mov
out
movups
cld
add
cmp
and
sbb
inc
scas
inc
add
or
pop
pop
lock
lods
fsubr
add
ss
out
cmpsb
lock
jne
call
fidivl
insb
imul
inc
xchg
mov
cwtl
jge
std
das
clc
push
movl
cltd
lds
add
fists
inc
in
inc
sbb
and
loopne
sbb
inc
mov
ss
sbb
sahf
adc
pop
fdivs
or
adc
repz
icebp
dec
stc
add
imul
popf
in
je
fbld
hlt
lock
mov
ljmp
mov
pop
adc
sub
popa
das
repz
pop
mov
xchg
filds
loop
dec
aad
dec
cmp
mov
push
mov
imul
lea
aas
je
mov
sbb
call
mov
mov
lret
into
jbe
sub
push
sub
cli
dec
fildl
fmuls
dec
adc
mov
lods
adc
sub
incl
add
and
and
xor
sub
std
call
aam
int3
or
loope
cld
lds
add
call
lret
mov
dec
ret
or
and
cwtl
aad
icebp
xor
out
push
add
mov
repnz
jmp
add
add
fadd
lret
fs
and
cmp
scas
jp
add
pop
adc
test
ret
inc
lods
push
cld
mov
shrb
push
dec
inc
adc
je
adc
add
cld
jp
push
in
lcall
jl
in
andl
sub
push
adc
mov
or
xchg
aad
call
pop
jg
push
adc
push
cmpsl
sbb
adc
add
in
or
incl
ds
push
add
jns
dec
inc
std
or
cwtl
call
pop
mov
aaa
inc
add
push
sbb
subl
pushf
mov
fisttps
mov
adc
les
nopl
dec
mov
fs
incl
sub
adc
cmp
es
dec
mov
pop
cmc
fisubs
mov
jo
or
call
xchg
icebp
incl
inc
mov
shlb
dec
or
xchg
js
sbb
cld
aaa
mov
adc
ss
adc
fwait
and
call
sbb
je
xor
add
mov
rorl
sub
adc
push
or
inc
subb
or
icebp
fdivrl
jne
pusha
inc
push
mov
int3
insb
dec
inc
clc
adc
adc
clc
inc
dec
rorl
jecxz
mov
dec
inc
mov
jns
push
dec
cmpsb
loope
inc
pusha
xor
pop
adc
add
add
shrb
imul
pushf
out
sbb
inc
cmpsb
xchg
mov
nop
loope
es
flds
cmp
cli
idiv
call
mov
sub
or
dec
xchg
push
adc
not
or
in
movsb
sbb
adc
adc
js
outsb
loopne
and
lods
jnp
cmp
test
push
sar
adc
call
ret
inc
in
out
pop
inc
jmpw
lcall
es
js
push
xor
cmp
inc
cld
in
loopne
pop
lock
mov
mov
and
xor
and
jmp
fs
jg
adc
rolb
outsb
adc
lock
sub
mov
cli
mov
add
and
mov
add
incb
cmp
mov
adc
sub
dec
xor
insl
std
jg
mov
xchg
insl
mov
test
xor
aad
je
or
ljmp
cmp
lea
andb
dec
add
mov
sub
sahf
mov
mov
mov
dec
cmp
mov
adcb
and
jmp
ja
imul
pop
and
hlt
es
aam
into
mov
arpl
mov
mov
dec
cwtl
in
ss
aaa
adc
mov
cmc
jno
pushf
add
pop
sub
add
mov
ja
add
jbe
push
jge
icebp
sub
xor
in
push
or
pop
adc
das
sti
call
nop
sbb
enter
cmp
clc
decl
mov
adc
pop
or
ss
pusha
call
pop
cmpsl
sub
add
adc
les
popf
insl
sbb
jo
push
pop
gs
leave
or
fisttpl
sub
fldl
outsl
nop
sarb
add
scas
fsubs
adc
out
loop
push
test
or
nop
call
pop
fcomp
adc
mov
push
xchg
inc
cmp
adc
popf
and
adc
scas
push
adc
test
addr16
pop
add
cmp
dec
mov
in
leave
cmp
jo
sbb
mov
mov
add
cwtl
push
sub
sbb
inc
imulb
or
jecxz
lods
sub
cmp
adc
out
fsqrt
mov
jne
popf
clc
lcall
xor
ret
xor
mov
sub
divb
add
ljmp
pusha
test
call
pcmpgtw
add
adc
cwtl
je
inc
and
movsb
popf
mov
inc
xor
faddl
call
adcb
repnz
cld
mov
fbstp
sub
cmp
scas
push
dec
loop
mov
stos
in
or
lods
pop
pushf
jg
aad
pop
outsb
pop
add
movsb
push
jg
aam
dec
adc
adc
jne
xor
je
adc
mov
leave
jo
cmp
mov
lret
mov
stc
lahf
xchg
imul
jmp
and
pushf
stos
subl
lret
popa
out
adc
xlat
push
stos
inc
mov
and
je
adcb
mov
movsl
add
dec
inc
dec
push
shll
ds
add
add
jmp
aad
ret
push
push
jl
pop
loop
and
jnp
jle
loopne
ljmp
adc
push
shrl
outsl
mov
dec
ret
jp
jmp
daa
dec
mov
incl
and
dec
loopne
inc
lcall
push
mov
cs
push
push
mov
call
hlt
jno
arpl
adc
jne
mov
lds
jns
add
mov
ret
in
push
in
mov
int3
adc
mov
aam
add
jne
and
inc
je
loope
decl
jg
cmp
and
dec
and
dec
inc
notb
jecxz
jb
push
and
jle
mov
fildll
mov
enter
jg
aad
ss
mov
add
subl
fwait
incb
aad
xor
insb
lds
xchg
mov
pop
call
je
pop
and
int
adc
mov
push
jne
repnz
push
aam
adc
jecxz
clc
ljmp
rorb
lret
lods
jne
push
adc
sbb
ret
dec
push
add
fisubl
mov
call
shrl
and
lret
lea
arpl
clc
mov
xor
jo
jge
cmp
into
add
jle
xchg
fucomip
add
ljmp
push
in
adc
adc
loopne
push
je
add
test
sub
out
scas
fimuls
das
inc
sbb
add
adc
xor
in
std
jmp
lcall
call
pop
sub
mov
andb
sahf
pushl
or
add
or
adc
aam
daa
jg
test
call
xor
jl
adc
adcl
add
incl
hlt
or
icebp
adc
push
wrmsr
dec
inc
mov
pop
iret
incl
push
inc
loop
shrb
es
add
cmp
mov
mov
loopne
dec
cmp
cmp
test
shlb
roll
dec
rorb
mov
sbb
mov
and
adc
adc
sar
pusha
inc
sahf
sbb
dec
sbb
sub
and
push
cld
cli
movb
mov
lcall
or
call
xchg
dec
hlt
call
data16
xor
pop
mov
adc
cmpsb
pop
lods
mov
cmp
sbbb
mov
push
lock
imul
pop
loopne
xchg
cltd
sbb
push
fs
inc
outsl
lea
roll
mov
call
sbb
cmp
push
adc
add
cmp
cmp
mov
leave
mov
out
mov
push
rolb
shll
push
adc
inc
xor
loopne
mov
pushf
mov
add
add
incl
adc
jne
mov
mov
jg
push
fdivr
sub
test
xor
scas
add
add
mov
dec
fistps
lcall
fisubl
push
ljmp
push
mov
rcrl
mov
and
cmp
fwait
mov
pop
js
fidivrs
into
jg
jg
inc
fldt
cmp
scas
or
sbb
cmp
sbb
sbb
ret
ja
in
dec
add
inc
pop
rclb
fdivrs
or
hlt
mov
mov
std
ja
mov
push
sarb
ss
xchg
pusha
mov
leave
pop
mov
pop
jl
cli
adc
sahf
lret
decl
outsb
inc
ds
or
dec
dec
add
jno
inc
call
ret
rorl
inc
into
mov
popa
adc
inc
lcall
scas
sbb
je
unpckhps
mov
ljmp
into
and
push
push
mov
call
pop
push
add
add
sbb
dec
loope
enter
push
add
mov
or
jno
and
inc
pusha
je
jp
addr16
or
popf
mov
push
std
cmp
xchg
or
push
jle
outsl
and
div
call
fdivrl
into
adc
lea
cmpsl
or
or
test
push
lcall
outsl
sbb
loope
xchg
inc
push
inc
sbb
or
lea
out
adc
jbe
sub
mov
add
je
imul
in
aaa
cld
pushl
xchg
or
sbb
or
cmc
pop
or
mov
pop
mov
std
lock
jmp
cmpl
nop
mov
push
adc
aam
mov
aad
enter
or
and
pushf
sar
or
inc
or
dec
or
data16
cmp
pop
mov
and
enter
fsubs
dec
aaa
inc
das
add
scas
mov
jno
loopne
push
mov
ss
cmp
inc
loop
push
cmp
mov
sub
js
cmc
mov
inc
mov
wrmsr
xor
adc
sub
push
mov
les
mov
cmp
add
and
pop
movsl
aaa
mov
stos
out
dec
xchg
fisubs
cld
decl
sub
mov
jecxz
pop
mov
adc
pop
and
jnp
addl
hlt
addb
pop
push
adc
out
push
sub
iret
sub
ss
ja
add
ljmp
loopne
lret
adc
sbb
ljmp
das
es
mov
out
cmp
pusha
test
adc
jge
dec
jp
cmpb
add
mov
scas
ss
loop
mov
pop
add
das
inc
xchg
mov
decl
inc
mov
push
adc
aas
cmp
out
mov
je
lock
decl
adc
adc
mov
lock
or
add
in
add
add
mov
ds
add
lock
test
sub
dec
mov
inc
pushl
and
test
add
mov
fnstcw
jbe
ret
sarb
cmp
ds
aaa
mov
and
lock
cmp
xchg
pop
pop
push
push
pop
and
addr16
int3
insl
mov
adc
ljmp
ja
test
in
lock
cmp
insb
fistl
movsl
cld
stc
and
hlt
ja
jl
pop
or
hlt
or
std
push
xchg
xchg
call
xchg
sub
push
mov
inc
or
mov
push
scas
das
rcrb
inc
sbb
inc
std
adc
push
mov
xor
cmpsb
jp
cmpsb
adc
pop
test
push
lock
arpl
sbb
into
andb
in
xchg
outsl
adc
or
adc
adc
and
je
cmp
adc
scas
or
inc
lock
ss
in
push
lcall
in
mov
inc
cld
loope
adc
xor
outsl
mov
mov
les
push
stc
test
call
inc
jmp
je
dec
out
xor
push
stos
adc
out
ja
call
or
push
mov
add
fs
shrb
add
push
sbb
mov
scas
mov
fs
mov
ljmp
add
sbb
or
inc
push
cli
jle
inc
arpl
cld
das
add
insb
je
mov
and
cs
inc
call
lcall
dec
fadd
filds
mov
mov
mov
xchg
loope
xor
lods
xchg
loop
or
xor
and
dec
jp
sbb
mov
mov
jns
inc
mov
lds
ds
jb
inc
stos
lds
ljmp
push
lret
lea
test
test
aaa
lret
clc
fwait
add
lret
aas
mov
pop
xor
jle
lods
sub
push
add
in
mov
sti
add
or
pop
call
and
push
movsl
mov
cli
loope
repnz
ret
aam
incl
cmpb
jmp
and
das
pop
gs
jl
addl
and
cld
fimuls
aas
jg
dec
inc
imul
mov
sbb
stos
mov
fwait
sbb
shll
sub
cmp
mov
sub
lahf
adc
or
or
xchg
mov
jne
sub
push
orl
decl
lret
fs
mov
sbb
adcb
push
adc
ja
mov
dec
jecxz
incl
mov
out
insb
cltd
adc
les
js
inc
push
into
push
xchg
push
outsb
sub
pop
sbb
imul
int3
sub
or
add
call
mov
cmp
adc
lea
test
fisttpl
cmpsb
out
xor
negb
push
jge
mov
adc
ss
out
push
mov
ss
lock
push
add
popa
je
loopne
sarl
adc
jl
jno
iret
cmp
fcom
fimuls
add
push
xchg
fbld
fmuls
add
xlat
or
notb
push
and
push
inc
xorb
pop
pop
fcomip
mov
fsts
cli
adc
sbb
outsl
or
cmpsl
adc
loop
mov
les
dec
inc
hlt
mov
loope
scas
add
scas
or
lds
lock
mov
jle
and
cmp
addr16
out
push
mov
cmp
mov
ss
fimull
lods
and
adc
cmp
mov
in
and
das
xor
cmpl
clc
pop
xchg
ficomps
in
je
adc
xchg
rorb
push
jae
or
cmp
popf
jp
ljmp
repnz
mov
cwtl
das
or
and
inc
adc
inc
enter
pusha
clc
mov
jno
ljmp
pushf
mov
push
je
sub
cmp
pop
loopne
shlb
rclb
dec
push
pop
lock
pop
push
mov
mov
mov
push
cmp
fistps
ss
mov
mov
adc
adc
dec
je
pop
adc
lret
xorl
dec
jl
aam
test
enter
add
cld
sbb
sar
bnd
call
pop
inc
ja
jg
cwtl
push
mov
ret
inc
out
jl
pop
jge
inc
adc
jmp
inc
test
scas
mov
aas
cld
or
rorb
test
sbb
add
add
mov
int3
and
inc
ret
popa
nop
push
fimuls
or
movsl
pushf
dec
into
xor
out
stos
jbe
mov
mov
fidivs
cmpsb
test
jmp
cli
cwtl
rcr
pop
sub
jne
add
or
or
ret
fisttps
lock
cwtl
or
jle
movsb
jg
add
pop
pop
out
aam
dec
add
add
mov
hlt
cld
push
dec
or
jle
xchg
xchg
outsb
rcrb
call
hlt
push
dec
adc
movsb
movsb
aaa
inc
and
outsl
or
or
pop
add
cmc
adc
cltd
adc
xor
pushf
loop
jg
test
mov
bound
adc
adc
call
mov
clc
mov
inc
rol
mov
pop
mov
jg
pop
cltd
bnd
pop
jmp
imul
adc
xchg
in
push
adc
ret
xchg
adc
ja
pop
push
cmp
shrb
rolb
add
test
or
sbb
inc
loopne
sbb
mov
dec
jl
push
insb
movd
push
dec
push
sub
inc
pop
sbb
jmp
adc
and
je
mov
hlt
pusha
call
cmc
xor
pop
arpl
in
xor
cmc
repz
rorb
push
dec
into
push
clc
imul
loop
dec
pop
or
addb
ret
xor
cmp
ja
nop
inc
mov
fcom
or
inc
add
fcomp
push
inc
xchg
mov
push
daa
rorl
loope
dec
mov
shlb
or
decl
mov
adc
repz
jg
jge
push
mov
mov
xchg
cltd
xchg
mov
adc
jg
xlat
ret
sbb
lea
stc
or
gs
sub
mov
xor
enter
sahf
repnz
decl
fs
cld
aaa
adc
ret
add
daa
add
hlt
mov
pushf
adc
je
xchg
adc
dec
stos
call
std
pop
push
mov
aaa
inc
je
shlb
insb
and
repnz
fs
adc
das
pop
add
pop
sub
mov
cmp
sub
loop
data16
add
xchg
cs
sub
out
lahf
std
outsl
cli
int
shrb
adc
testb
mov
jbe
leave
or
jmp
push
jl
pop
inc
jl
jbe
pop
xor
jge
pop
mov
cmpsb
je
mov
lds
hlt
test
xor
enter
insl
mov
pop
hlt
nop
mov
add
xor
push
sub
adc
aaa
push
xor
icebp
lret
push
push
mov
dec
addr16
fisttps
lods
shrb
bound
call
roll
add
sqrtps
das
push
incb
add
inc
sbb
out
iret
xchg
mov
lcall
push
sti
mov
or
popf
in
push
adc
dec
cld
imul
mov
jbe
hlt
mov
adc
outsb
call
je
mov
mov
add
es
shrb
sbb
bound
push
mov
jmp
push
cmp
into
mov
inc
sub
rcrb
in
ror
dec
bound
mov
mov
pop
pop
xchg
jge
lods
add
add
pushl
test
je
add
or
lcall
call
ret
movsl
adc
std
xor
fists
adc
push
nop
lahf
mov
xchg
cld
pop
cs
movsl
insb
aad
adc
sub
inc
cwtl
rorb
or
aam
loop
jge
call
mov
call
cmp
mov
mov
sahf
rorb
add
in
mov
and
cmp
sar
scas
out
lock
add
inc
lods
lret
movsl
pop
inc
scas
clc
or
addb
popf
sub
or
repz
in
xchg
xchg
clc
lcall
xor
loope
cmp
or
and
mov
pop
push
shrb
jge
incl
dec
adc
lahf
cltd
mov
mov
data16
xlat
call
mov
incl
lcall
mov
imul
sbb
mov
xor
push
xor
aaa
add
mov
hlt
pop
clc
pop
or
aam
cs
sub
je
decl
adc
pop
mov
dec
cs
sub
inc
pop
mov
rol
xor
adc
js
dec
fs
add
out
ss
pop
popf
pop
data16
push
pushf
push
push
and
adc
lret
mov
popf
adc
fbstp
ja
cld
or
or
add
movsb
mov
push
out
mov
and
push
or
sbb
add
xchg
icebp
dec
xchg
xchg
push
or
loopne
lods
sub
aam
mov
add
jg
sub
sbb
jns
xchg
outsb
movsl
into
clc
sub
fidivrl
lret
push
pop
popa
loope
mov
rclb
inc
out
pop
sub
jmp
lods
adc
jl
out
sub
adc
mov
dec
loopne
test
cli
std
sub
testb
stos
in
call
sbb
call
push
mov
je
jmp
je
jp
or
add
int3
ja
lcall
sub
jmp
sbb
lret
jmp
sub
sti
adc
pop
icebp
incb
xchg
scas
cmpsb
xchg
mov
add
jmp
cmp
insl
jg
dec
clc
out
test
dec
mov
jp
fdivrs
adc
nop
sbbl
adc
sbb
stos
adc
ljmp
cmpb
das
call
outsb
nop
add
popf
adc
push
pop
dec
loop
jecxz
xchg
std
pop
push
inc
dec
push
inc
jb
mov
or
cmp
fcmovnu
xor
addr16
jg
cmc
incl
adc
orl
in
xchg
inc
sti
pop
xor
lods
mov
lock
sub
mov
mov
imul
adc
cld
mov
nop
je
pop
mov
stc
pop
push
sub
pop
mov
and
lcall
outsl
push
xor
dec
fldcw
insl
int3
mov
mov
xchg
gs
cmp
adc
push
scas
add
or
mov
test
push
push
incl
mov
ss
push
pop
je
stos
xchg
or
jo
je
jle
decl
call
outsb
sbb
out
mov
jg
jne
mov
or
je
adc
adc
mov
rolb
jg
leave
and
pop
out
jg
mov
push
inc
pop
call
cmp
dec
hlt
jg
imul
call
sbb
ljmp
fisttps
push
pop
bound
jne
mov
les
push
vmovupd
adc
push
adc
and
add
adc
xor
push
orl
push
fimuls
pop
jbe
add
mov
imul
rolb
adc
out
roll
outsl
cli
out
push
xchg
sbbl
daa
and
dec
insl
xor
push
adc
xchg
push
add
xor
pop
or
mov
adc
mov
xchg
inc
and
scas
fildll
and
xchg
add
sub
adc
je
mov
push
stos
and
ljmp
test
sbb
stos
push
lret
out
adcl
dec
mov
sub
imull
pop
or
xor
xchg
lods
arpl
out
cmp
jecxz
hlt
call
or
call
dec
adc
das
push
adc
je
dec
xchg
mov
lret
jmp
or
insb
icebp
mov
test
sar
jg
mov
sbb
jg
xor
jne
pop
mov
mov
jg
cwtl
adc
jmp
cltd
pop
mov
inc
push
into
xchg
adc
add
ss
dec
push
cmp
fld
shrl
shlb
push
inc
pop
sbbb
jmp
clc
call
loopne
je
aas
adc
inc
adc
xor
cmp
mov
fiaddl
pop
sub
jle
hlt
inc
sahf
das
push
loope
nop
hlt
mov
pop
test
fbstp
sahf
push
pusha
mov
scas
xor
mov
pop
add
cmc
decl
outsb
or
mov
test
push
js
imul
je
jo
dec
adc
lahf
call
xor
nop
push
jnp
int3
inc
mov
cmp
mov
fs
shrl
push
mov
call
call
mov
mov
adc
or
pop
sbb
decl
and
add
call
pop
dec
iret
inc
inc
add
les
popf
pop
mov
sbb
or
or
cwtl
mov
jns
xchg
into
push
add
stos
popa
mov
neg
test
pop
add
in
cmp
mov
add
lock
fisttpll
shr
or
outsb
or
sub
sahf
aad
pop
and
sbb
xorb
xchg
add
mulb
inc
inc
push
sbb
jle
mov
adc
adc
mov
add
cmp
inc
jl
mov
movsb
inc
bound
sbb
jbe
mov
mov
lcall
or
call
pop
hlt
jno
ja
btc
mov
out
leave
jnp
add
fucomip
mov
or
arpl
sarb
adc
or
jg
incl
mov
push
add
outsb
adc
push
movsb
add
cli
sub
mov
call
cli
jbe
sahf
test
lcall
and
shlb
mov
mov
out
mov
and
ret
call
fimuls
add
mov
sti
push
add
push
sarb
sbb
out
imul
cmc
xlat
inc
mov
arpl
pusha
add
sbb
or
lea
fcomip
push
push
push
xor
xor
xchg
imul
ds
jg
jp
adc
sbb
push
shrb
add
xor
xor
mov
cmp
loope
pop
mov
dec
divb
subb
das
mov
je
dec
cmpsl
sub
es
sbb
fcomip
jnp
outsb
mov
and
mov
inc
nop
add
add
pusha
inc
call
sub
dec
adc
es
add
cld
push
adc
push
data16
lea
and
mov
or
push
push
test
dec
test
fisttpl
or
test
mov
scas
push
leave
inc
or
inc
pop
mov
call
movl
mov
sbb
or
xchg
sub
mov
jmp
mov
mov
in
rcrb
mov
inc
inc
push
icebp
sbb
imul
das
orb
data16
outsb
sub
mov
or
push
push
test
loop
stos
sub
incl
or
or
add
icebp
or
push
cli
mov
jno
pop
mov
mov
loope
mov
push
adc
jle
test
dec
jmp
pushl
add
xchg
rcrl
js
cmp
sub
ljmp
ja
rcrb
jb
cmp
mov
call
ret
enter
fistps
notb
sub
and
mov
adc
mov
rcll
out
sbb
or
shlb
dec
nop
inc
sub
mov
int
jne
xor
jns
sub
rcll
xchg
popf
pop
xor
ret
ficoml
shrb
cmc
stos
add
push
add
outsb
xor
shll
insb
or
xor
add
adc
adc
inc
pushl
testb
sub
pop
jno
adc
sbbb
xor
aam
pusha
add
push
lods
xchg
add
shrb
xor
enter
sbb
dec
addl
mov
mov
pushl
es
call
shlb
call
add
add
dec
cmp
pop
je
rorb
jae
lock
sub
mov
adc
hlt
adc
sbb
pop
adc
cmpsb
sbb
addr16
push
and
mov
adc
adc
fcompl
fsubrs
mov
je
sbb
pop
fdiv
pop
cmc
add
mov
cmp
mov
push
add
sub
adc
shrl
into
bound
icebp
es
push
push
aas
pop
loopne
inc
dec
xor
lret
adc
adc
lcall
mov
xchg
pcmpeqb
inc
incl
cmp
not
stos
xor
xchg
je
decl
add
mov
lods
call
das
jge
or
xchg
push
inc
dec
cwtl
push
cmp
addl
jg
call
and
call
cmpb
scas
sub
adc
cli
lcall
add
adc
cmc
scas
inc
mov
inc
cmp
imul
mov
and
loopne
leave
xor
jle
bound
rcr
cli
add
loopne
pop
ret
adc
call
and
mov
mov
fmull
mov
je
rcr
icebp
sub
add
sbb
and
dec
xor
call
loopne
xchg
jne
or
push
int3
icebp
je
mov
jne
stos
cmpsb
mov
inc
lcall
push
lahf
rclb
clc
stc
inc
or
movb
in
pop
movsb
push
loop
es
xor
push
adc
loope
xor
xchg
bnd
in
div
fldt
hlt
xlat
push
add
add
or
xor
clc
mov
test
mov
xor
cs
push
gs
sbbl
and
dec
cmp
es
inc
mov
push
enter
adc
sub
decl
jge
xor
lret
adc
sub
adc
in
sub
add
mov
jnp
inc
call
jmp
or
cmp
sbb
sub
mov
inc
inc
jg
stos
mov
inc
fnstenv
loopne
mov
out
and
and
fisubl
sbb
and
add
sub
call
daa
or
loopne
rcr
jg
fdivrs
mov
out
push
jg
jle
cmp
pusha
adcl
loope
xchg
mov
add
mov
inc
test
insl
lods
push
push
mov
inc
jg
cmp
fistl
and
dec
dec
aaa
dec
pop
clc
call
call
scas
jbe
adcl
dec
mov
movsb
sbb
mov
cs
sti
aam
ss
call
inc
inc
stc
adc
cs
or
aad
arpl
adc
sarl
mov
or
xchg
out
sub
lds
outsl
or
decl
popa
xchg
xor
mov
dec
idivl
sub
push
jae
or
int3
jg
into
adc
scas
es
add
rorb
test
lock
sub
cld
xchg
cmpsb
mov
es
mov
fadds
cs
cli
fwait
mov
sbb
sahf
into
push
add
scas
mov
fists
or
outsb
jb
inc
and
mov
mov
jmp
inc
dec
aam
js
and
sbb
mov
mov
cwtl
dec
cwtl
ds
cld
fcomip
or
icebp
mov
inc
daa
push
out
mov
push
mov
jmp
or
mov
aam
add
loopne
sbb
pop
test
lock
sbb
inc
enter
das
les
stos
inc
jg
push
jmp
andb
push
ds
cmp
add
mov
addb
or
roll
cmp
sub
mov
add
xchg
mov
mov
jle
mov
pop
or
in
je
adc
outsl
push
mov
pusha
mov
lcall
pop
push
mov
mov
adc
xor
shll
loopne
cmp
sbb
filds
mov
enter
nop
mov
mov
or
sub
xchg
inc
jo
and
or
lcall
pop
xchg
jnp
xchg
sub
mov
jne
jecxz
xor
xor
xchg
data16
repnz
dec
hlt
pop
and
sub
fistl
sar
mov
mov
push
test
xorb
mov
lcall
push
inc
mov
or
mov
and
loop
dec
sub
xor
jb
push
enter
mov
cwtl
aam
stos
test
cmpb
cltd
and
mov
fdivrs
cmp
cmpsb
insl
xchg
clc
add
ds
cmp
cmp
xor
xor
or
add
stc
leave
icebp
xor
cmp
xchg
jns
or
adc
xor
clc
es
and
int3
pop
cli
inc
pop
pop
inc
pop
incl
jl
inc
mov
insb
call
dec
and
inc
dec
das
es
mov
aam
aaa
push
imul
je
cmc
pop
sub
les
push
or
hlt
call
andb
lahf
sahf
xchg
fstps
pop
movsb
inc
fidivs
or
adc
mov
add
or
pop
rorb
adc
dec
push
or
add
in
inc
adc
mov
loop
rcll
push
pop
pop
add
xchg
push
jle
icebp
jg
es
jge
xor
add
jmp
int3
testb
fdivr
fbld
cld
inc
push
sub
insl
call
in
sbb
ljmp
mov
aad
inc
xor
add
push
push
mov
pop
bound
pop
and
jl
jno
enter
inc
add
orl
sub
sbb
aaa
pop
sub
inc
or
cmp
dec
push
dec
leave
mov
adc
lea
push
mov
inc
pop
adc
add
ljmp
hlt
or
or
xchg
mov
adc
pop
jo
fimull
bound
rclb
cmp
jmp
mov
mov
push
xchg
mov
cld
call
das
cmpl
aas
push
pop
mov
and
in
mov
bound
ror
pushl
inc
sub
adc
ljmp
filds
adc
in
in
incl
test
addl
icebp
cld
pop
sub
test
outsl
xor
ficoms
add
inc
je
test
into
sarb
in
adc
hlt
in
push
call
std
das
movsb
cmp
shll
addr16
sbb
push
add
add
fstpl
mov
mov
insb
nop
or
xchg
xchg
adc
jae
decb
push
push
xchg
das
cli
fists
add
fwait
hlt
adc
in
sbb
sub
fwait
adc
fistl
pop
lret
shlb
sbb
jmp
mov
mov
imul
clc
jecxz
arpl
decl
push
and
ffreep
dec
adc
jmp
int
add
or
adc
dec
adc
jle
fstl
dec
mov
cmp
les
or
mov
outsb
call
rorb
clc
cmp
xor
mov
mov
clc
pushw
adc
lea
push
int3
cmp
stos
adc
xchg
mov
pop
outsl
scas
ret
xorb
movsl
dec
enter
add
add
jg
int
jp
jb
gs
sub
push
movsl
mov
js
add
jl
icebp
outsl
adc
orl
ljmp
add
dec
imul
mov
daa
sbbb
stos
adc
and
cmp
or
fsubl
and
es
icebp
pushl
pop
mov
pop
rolb
ret
call
repnz
fnsave
and
adc
mov
xor
cmp
out
insb
push
pop
hlt
add
mov
mov
cld
incl
prefetcht1
dec
arpl
adc
xlat
call
jbe
daa
test
out
jecxz
cmp
enter
int
and
pop
add
hlt
jp
xchg
call
fwait
lret
insb
and
aas
je
lods
sub
xor
xchg
or
push
adc
pushf
clc
mov
iret
pop
xor
xor
mov
and
scas
in
jecxz
jmp
ret
dec
je
orb
mov
mov
sbb
xor
clc
dec
inc
jmp
inc
mov
nop
adc
inc
xor
shr
rol
push
push
andb
cmp
push
adc
xchg
je
je
mov
mov
decl
das
or
mov
ljmp
call
shr
pop
shl
fs
mov
cmpl
adc
push
cld
push
push
sarb
and
cmpsb
leave
call
adc
rclb
inc
aam
clc
stos
lock
mov
add
jbe
fwait
call
push
lret
jno
adc
add
lcall
add
mov
add
sub
cld
add
out
inc
sub
cmp
xor
jle
inc
pop
and
in
mov
xor
outsl
xchg
pop
inc
adc
or
add
xchg
jg
add
mov
in
jbe
jne
lcall
fisubs
cmc
mov
xchg
rcr
ror
adc
pushf
dec
adc
mov
dec
shlb
add
jb
or
decl
fs
out
nop
sub
dec
lahf
jno
std
loop
add
sub
adc
in
add
xchg
dec
scas
adc
movsb
fdiv
sarb
inc
or
dec
add
dec
lock
sbb
inc
call
incl
inc
outsl
lods
jg
or
jmp
cmp
cld
push
sbb
int3
dec
out
ret
loope
decl
sbb
je
cltd
pop
call
xor
jbe
pop
add
adc
mov
scas
fisttps
sbb
jo
mov
xor
std
stos
movsl
decl
pop
dec
jo
fmull
xor
es
push
andb
ljmp
hlt
cmpsb
or
pop
xchg
xor
je
sbb
aaa
add
fnsave
cwtl
mov
or
pop
imul
push
inc
clc
xor
lahf
cmp
in
jae
adc
fisubs
in
mov
push
mov
adc
fdivrl
adc
loopne
out
test
xchg
orl
lcall
mov
pop
adc
sahf
pop
mov
call
push
mov
dec
sub
pop
shrb
js
mov
cmp
ja
out
fisttps
nop
mov
jmp
inc
enter
scas
and
adc
cmp
pop
xor
or
data16
loop
sar
je
lcall
aaa
sahf
or
xor
mov
cmpsb
inc
mov
mov
mov
jb
inc
mov
jl
adc
inc
push
sbb
or
cli
les
push
out
pop
xor
pushf
adc
call
setle
outsl
sbb
ljmp
add
sahf
xor
or
jecxz
inc
sbb
push
je
jecxz
incb
sbb
outsb
cli
rcr
add
and
je
jle
out
pop
loopne
fisttpl
subl
ret
sub
jle
lcall
mov
xchg
adc
in
inc
push
popa
add
jg
add
adc
loopne
xchg
adc
and
sub
xchg
ja
sub
cs
inc
xchg
int3
sbb
pop
xchg
pushf
pop
jbe
decl
cmp
adc
out
test
scas
xor
lock
push
nop
in
push
push
pop
fmuls
adc
adc
add
and
aam
mov
std
decl
call
ret
repz
or
or
push
xchg
call
fwait
subb
lock
hlt
movsl
dec
push
sub
mov
nop
sub
push
std
jmp
das
shr
test
adc
or
je
test
lods
daa
adc
pop
es
pop
mov
mov
mov
int3
sbb
mov
ficoml
je
add
pusha
call
mov
pop
lock
push
sub
and
fisubs
sar
hlt
dec
cld
or
scas
sarl
or
mov
xchg
or
cmpsb
sbb
sub
test
adc
les
enter
jg
push
sub
mov
adc
cltd
rcll
sbb
adc
dec
in
cmp
ret
imul
or
add
rorl
fists
int
dec
in
mov
sub
cmp
mov
dec
add
rorl
inc
clc
call
sbb
leave
pop
dec
jg
out
xorb
lret
sti
push
add
leave
clc
popf
adc
add
ljmp
adc
or
push
fadd
mov
sub
call
cld
pop
cld
mov
cmp
mov
les
scas
clc
or
fnstcw
and
adc
incl
imul
loop
sbb
cmp
inc
int3
cltd
mov
mov
inc
add
add
cltd
lock
insb
imulb
mov
push
xor
call
nop
in
jg
push
push
cmp
dec
adc
adc
cs
mov
pop
xor
and
scas
xor
daa
pushf
adc
adc
add
lahf
and
ja
mov
ret
and
push
sub
xchg
or
ljmp
cmp
js
inc
add
shlb
inc
pop
jo
fildll
sbbb
sub
push
push
je
pop
add
shlb
xchg
xor
mov
cmc
lcall
loope
clc
jp
in
push
imull
inc
xchg
rorb
dec
jecxz
add
les
xchg
in
cs
jge
or
or
and
mov
mov
fs
mov
mov
or
in
out
scas
xor
out
ret
push
call
ljmp
adc
nop
inc
fsubs
xchg
cmp
pop
inc
decl
inc
xor
dec
imul
ljmp
lods
decl
adc
mov
lods
je
imul
movsb
add
pop
adc
add
mov
add
inc
lcall
leave
inc
mov
mov
adc
sbb
xorb
clc
scas
fcomip
adc
add
mov
adc
jmp
cli
aaa
mov
sub
and
pop
sbb
and
inc
cmpb
xchg
fsubrs
ljmp
and
outsb
adc
push
popa
cmc
add
dec
das
ret
je
adc
in
incl
cmovg
bound
call
push
xchg
sbb
mov
aam
mov
push
loopne
bound
mov
and
add
push
inc
jno
push
push
or
and
mov
push
xor
pop
test
fldcw
outsl
clc
in
mov
enter
inc
and
push
movzbl
aad
jecxz
mov
cli
sbb
dec
push
cld
adc
push
clc
lcall
dec
xor
rclb
adc
in
ss
inc
dec
add
popa
adc
or
dec
js
add
fpatan
fdivs
dec
push
int3
dec
stos
je
sarl
outsl
pop
fwait
adc
sbb
fildll
out
mov
fbld
fdivs
adc
cli
push
inc
clc
insb
lahf
adc
dec
push
and
jg
repnz
xor
out
ljmp
mov
scas
sbb
loop
adc
sbb
cmp
cmpsb
mov
push
push
xchg
jo
jne
sbb
pushf
rolb
std
push
je
push
mov
rcrl
fistps
popf
mov
hlt
in
hlt
add
iret
mov
rolb
pop
add
call
stc
ret
lock
mov
je
xor
push
daa
add
aam
push
in
rclb
imulb
xchg
lea
jmp
call
xor
adc
push
and
inc
or
fildll
jge
test
jg
pop
adc
or
das
lret
je
movsl
popa
cmp
fs
je
sbb
into
xchg
or
ss
lock
add
add
add
test
adc
cmp
lods
jne
into
xlat
mov
pop
jmp
lods
jp
outsb
push
xor
adc
add
mov
dec
sbb
inc
xchg
xchg
sub
lock
add
pushl
xor
add
insb
xor
push
outsl
test
pushf
lret
push
adc
cmp
loopne
jg
test
pop
sbb
mov
dec
call
insb
inc
mov
lea
adc
pushf
mov
enter
jmp
idiv
cmp
loope
mov
xchg
jo
subl
pop
loopne
inc
dec
sahf
adc
cmpsb
nop
je
jecxz
dec
cmp
jmp
mov
inc
or
clc
add
sub
xchg
outsl
push
adc
lahf
adc
mov
insb
push
outsl
outsb
jmp
jno
stos
push
bound
or
push
mov
pop
sub
or
in
fst
test
sbb
ret
xchg
mov
cmp
adc
ja
ja
mov
shlb
out
dec
jecxz
jl
popf
and
out
pop
dec
push
dec
sub
cli
mov
nop
or
fidivrs
inc
or
js
call
ljmp
jne
and
stos
mov
cmovb
xchg
shrb
loopw
jns
cld
mov
add
rorl
adc
mov
rcl
jecxz
test
mov
push
and
inc
sub
mov
call
push
fldt
adc
pop
cmpsb
mov
mov
mov
mov
test
pusha
jg
outsb
adc
adc
adc
jbe
adc
ja
inc
in
sbb
incl
shll
repz
lret
stos
adcb
adc
mov
dec
push
mov
fistps
cmpb
pop
or
enter
add
jmp
mov
jecxz
xchg
adc
dec
push
test
sub
jg
cmc
sub
dec
add
call
pop
mov
mov
pop
enter
jmp
pop
mov
mov
adc
mov
add
sbb
lock
sub
cs
xchg
aaa
pop
dec
cld
scas
mov
jbe
clc
icebp
test
stos
push
outsl
and
lcall
push
call
dec
aad
jns
hlt
shlb
call
test
lods
lret
insb
adc
call
adc
adc
cmp
push
sub
push
mov
les
push
lret
or
mov
ljmp
adc
add
testl
pop
or
pusha
mov
hlt
pop
push
int
mov
popf
es
jb
je
outsb
je
add
or
mov
jmp
push
call
push
cmp
movsb
mov
out
xchg
inc
in
dec
cmp
test
pushl
inc
dec
aaa
cmp
adc
clc
call
mov
xor
jmp
jmp
mov
leave
push
adc
dec
pop
pop
pop
push
fs
pushf
xor
popf
dec
jo
sub
ljmp
jno
adc
arpl
xchg
jbe
or
pusha
mov
call
cmp
jg
adc
icebp
and
or
jae
fdivs
clc
push
inc
adc
xchg
insl
shll
out
adc
inc
sbb
loopne
jbe
dec
loop
jg
mov
call
nop
mov
sar
in
mov
mov
dec
mov
push
jbe
xchg
or
fiaddl
adc
xchg
out
pop
adc
adc
dec
push
enter
jle
fcompl
sbb
pushl
rorb
aam
aad
jne
push
jb
lret
lret
jmp
rorb
mov
xchg
inc
fcompl
inc
fisttps
mov
jg
sbb
imul
xlat
roll
out
add
push
push
dec
or
decl
adc
add
in
loopne
push
or
dec
lds
call
inc
imul
push
je
xchg
sti
jo
push
outsb
mov
call
fnstcw
or
pushl
xor
int3
or
les
add
gs
adc
adc
add
xor
and
ljmp
std
sub
inc
jne
add
cmp
je
shll
loopne
push
jecxz
mov
mov
fiadds
std
dec
jmp
sbb
jb
cmp
jg
dec
xlat
cmp
mov
adc
call
adc
push
inc
xorl
cmp
call
call
out
cmp
into
fdivl
cmp
pop
rclb
or
sbb
and
into
ret
sub
cmp
pushl
je
cmp
xor
push
pusha
movsl
sbb
dec
jmp
call
or
dec
sbbb
adc
mov
push
mov
movsb
lcall
daa
jg
or
push
mov
xchg
adc
loop
or
call
xchg
pop
bound
xchg
mov
pushl
mov
in
sti
add
out
pop
xchg
xor
or
adc
mov
shlb
call
adc
jecxz
das
daa
inc
add
into
decl
sbb
adc
loop
xchg
xor
xor
adc
jne
hlt
stc
adc
dec
mov
adc
cli
adc
outsb
jecxz
adc
test
push
push
add
mov
add
add
inc
pop
pop
jo
adc
hlt
sub
movl
adc
or
je
call
lock
pop
sar
sub
mov
fisttpll
sti
adc
and
lods
push
aad
pop
lock
mov
in
adc
sbb
xchg
out
jg
xor
aaa
ds
dec
add
enter
mov
nop
pop
and
js
jno
fwait
js
pop
in
mov
ja
inc
sub
pusha
cmp
push
adc
inc
or
mov
xor
push
pop
je
hlt
push
iret
push
and
das
jle
push
call
pop
add
jmp
pop
int3
fs
xchg
mov
sub
mov
adc
and
lret
dec
clc
ret
or
add
lock
add
aad
mov
call
dec
sbb
repz
jmp
js
inc
add
fisttpl
test
mov
out
pop
outsl
add
jnp
roll
das
add
add
adc
xchg
rolb
pop
test
stos
cli
int
inc
leave
pusha
or
pushf
sarb
add
sbb
decl
jmp
push
push
lret
cli
mov
call
nop
mov
push
xchg
pop
dec
movb
sub
jg
mov
lcall
mov
mov
leave
adc
or
ss
cmp
mov
or
dec
aaa
mov
or
add
sub
dec
inc
lods
test
lahf
aam
clc
out
or
cmp
bound
lret
daa
push
add
cmc
ljmp
and
pushl
fdivs
aam
je
adc
flds
data16
faddl
mov
ret
pop
dec
loopne
cld
arpl
push
mov
pop
jmp
nop
push
and
fisttpl
cmpb
or
lods
and
repz
loopne
cwtl
clc
pop
in
jp
cmp
adc
or
push
sbb
jp
jp
adc
rcrl
sub
jg
adc
clc
sbb
adc
adc
mov
mov
mov
and
pop
jnp
icebp
adc
pusha
push
adc
dec
nop
xchg
je
int3
and
dec
or
push
cmpsl
inc
or
inc
push
adc
pop
pop
inc
je
cmp
mov
ljmp
inc
sub
add
xchg
shlb
ja
bound
pop
repz
add
hlt
call
js
call
jg
dec
je
jno
jmp
sub
push
and
icebp
call
jge
adc
and
pop
fxch
in
mov
mov
int3
mov
or
xor
dec
stos
imul
cltd
ljmp
std
mov
out
insl
add
jbe
sar
sub
add
popa
xchg
mov
sbb
sub
or
sar
adc
cmp
pop
mov
dec
aaa
adc
out
ja
adc
sub
push
mov
mov
imul
mov
or
pop
call
mov
fiadds
pusha
mov
or
cwtl
in
push
aaa
fdivr
adc
repz
mov
jmp
inc
add
loopne
jmp
cmpl
mov
and
xchg
pop
xchg
push
jbe
pop
dec
fdiv
leave
sbb
jo
adc
call
clc
jge
sub
cmc
stc
xlat
xor
aaa
jge
stos
or
cli
loopne
ljmp
enter
push
subb
es
out
daa
hlt
ljmp
nop
mov
mov
add
mov
icebp
cmp
jg
jge
push
sub
testb
mov
or
stos
aad
pop
inc
insb
repnz
rcrb
push
std
stos
ja
mov
cmp
or
adc
adc
add
mov
enter
dec
test
sbb
ss
imul
adc
sub
sti
xchg
xor
push
enter
and
push
or
push
loope
push
iret
adc
dec
test
push
or
aad
mov
jne
xor
test
sub
mov
movsb
and
fadd
mov
lcall
ljmp
int3
call
xchg
mov
loop
push
fs
pop
sbb
ljmp
sbbb
lods
xor
pop
adc
pushl
xchg
pop
push
add
or
push
inc
push
ficoml
out
add
int
notl
lret
aaa
call
stos
aad
imul
lds
sub
or
add
cs
add
mov
dec
jmp
or
in
fcoml
adc
dec
add
scas
inc
xchg
add
pop
adc
dec
fsubl
loopne
scas
sbb
cwtl
sbb
xor
lahf
mov
movsb
or
mov
lcall
nop
out
inc
sti
je
inc
call
pop
cs
adc
adc
mov
fs
push
ret
push
mov
mov
jb
iret
mov
jo
je
push
mov
stos
nop
and
adc
cmpb
cmp
cltd
orb
ss
subl
test
movsb
je
jns
into
or
fdivr
call
in
cld
or
adc
push
cltd
addb
leave
pop
xchg
dec
ja
sbb
stos
pop
push
lret
mov
addl
adc
call
lock
inc
adc
pop
ljmp
xchg
mov
jbe
add
mov
jmp
inc
call
pop
lods
out
hlt
mov
dec
add
outsl
scas
pop
gs
lea
mov
sub
cli
pop
loopne
and
pop
push
mov
es
add
dec
out
push
movsb
push
stc
mov
mov
push
pusha
mov
loop
fadds
add
sub
sbb
in
nop
enter
mov
push
push
xor
mov
mov
cli
and
add
call
cltd
repz
fsts
movsb
or
and
adc
cld
mov
sti
rclb
mov
mov
stc
sub
pop
pop
mov
lea
fidivrl
jae
test
sub
scas
decl
sub
pusha
test
push
adc
pop
cmc
xchg
jns
mov
lahf
ljmp
inc
jg
fs
or
adc
ss
movsb
pop
loop
inc
push
sar
inc
std
cwtl
iret
cmp
js
pop
inc
je
incb
mov
add
pop
sbb
ja
dec
in
cmp
call
je
ljmp
stos
add
push
and
cmp
cmp
mov
test
push
pop
pop
add
push
xchg
adc
pop
pop
test
adc
shlb
cmp
pop
push
call
mov
loop
pop
push
and
sbb
rolb
inc
test
adc
fwait
cmp
sbb
rclb
pop
mov
incb
decl
sti
or
mov
scas
ljmp
popa
rorl
xchg
inc
adc
sahf
inc
test
cmp
xchg
push
or
add
adc
jle
push
mov
pop
pop
adc
aam
pop
push
aad
push
ljmp
daa
jle
call
xchg
je
call
xor
sbb
sbb
mov
jl
cwtl
xor
pop
es
call
add
xor
inc
out
negl
pusha
xor
leave
enter
call
scas
sub
call
ret
pop
je
sbb
xchg
add
vpaddusw
pop
xor
hlt
mov
pop
inc
jge
ret
xchg
pop
push
jg
mov
lock
ss
push
push
aam
je
add
push
hlt
nop
cmpsb
adc
cmp
mov
fdivr
dec
stc
fmull
les
xchg
mov
call
dec
jo
sbb
or
sti
mov
insb
je
repz
hlt
dec
add
lea
aas
data16
into
ljmp
sub
je
mov
pop
pusha
nop
mov
icebp
mov
js
pop
jo
xchg
sbb
rorl
mov
out
sbb
sub
test
push
pusha
lahf
sub
mov
xor
mov
pop
daa
cmp
mov
sub
xchg
xchg
pop
jo
mov
jle
cmc
inc
sbb
push
sub
xchg
push
addl
push
icebp
ljmp
dec
inc
repnz
shll
jg
in
mov
cwtl
call
pop
dec
or
fcoml
push
xor
xchg
dec
test
lods
call
les
lcall
add
je
nop
cmp
cltd
nop
lock
call
cli
not
ss
dec
xor
push
gs
inc
lds
call
or
shlb
push
fdivrs
sub
and
adc
data16
lock
jg
inc
mov
adc
or
psubusb
filds
nop
jmp
add
sbb
mov
add
and
js
add
je
xchg
rcrb
prefetch
xchg
mov
sub
outsl
mov
and
and
xchg
add
clc
inc
and
pop
push
sub
lods
jae
mov
lret
push
test
je
push
lods
push
cmc
notb
xchg
mov
push
das
adc
cld
pop
shl
shr
jg
fcomps
hlt
insb
and
sub
add
adc
stos
test
push
push
push
add
fisttpl
push
outsb
hlt
sbb
out
add
popa
ret
fwait
jp
or
sub
popa
xchg
incb
adc
fs
push
jg
data16
xor
jo
mov
clc
ljmp
xor
sbb
frstor
or
mov
pop
mov
aaa
jl
and
arpl
push
inc
xchg
adc
or
shlb
cld
popf
xor
or
imul
clc
outsl
adc
jo
or
fmuls
lock
or
fmuls
icebp
adc
aas
fwait
hlt
decl
out
js
mov
mov
cmc
fwait
and
test
idivb
arpl
es
push
roll
pop
mov
stos
sbb
inc
fildl
clc
mov
test
or
pusha
jmp
call
add
jle
lock
cmpsb
imul
icebp
icebp
mov
ljmp
ss
test
mov
adc
xor
call
or
inc
jmp
or
nop
clc
or
cmpsl
sbb
ret
fistpll
xchg
lds
pop
fs
outsl
add
mov
add
jmp
xor
std
pop
les
push
sbb
jg
call
test
ljmp
jl
pop
mov
aam
jb
bound
and
loopne
mov
push
adc
xor
pusha
jl
inc
xchg
adc
jne
xor
cmp
int3
enter
cmp
adc
cltd
clc
aaa
pop
in
add
je
push
inc
hlt
pushl
fdiv
xchg
pop
je
in
push
sahf
dec
je
enter
nop
je
or
out
pushl
mov
je
and
repnz
adc
fadd
lods
jl
mov
clc
fisttps
in
pop
mov
aad
adc
xor
sar
das
ljmp
inc
and
and
mov
inc
inc
adc
xor
mov
adc
ret
adc
cs
ljmp
stos
test
popa
clc
adc
and
adc
and
mov
decl
push
inc
cs
push
sub
jae
pop
in
mov
fists
mov
divb
add
jne
xchg
imul
ret
pushl
mov
pop
ficoml
call
cltd
jmp
adc
add
add
stos
inc
and
mov
jmp
or
jo
add
dec
xchg
pop
lret
stc
mov
or
or
enter
cmpsl
call
call
mov
or
shlb
xorl
mov
adc
jg
lock
rcl
xlat
sbb
cmp
je
mov
pop
sub
push
subb
mov
in
xlat
sub
fists
cmp
fsubs
shrl
cmp
icebp
fstl
dec
inc
push
pusha
fidivs
scas
loope
aad
push
jl
or
mov
hlt
inc
pushf
push
loopne
pop
shl
in
fs
jmp
adc
fmuls
loop
dec
xor
orb
mov
std
add
outsb
arpl
movl
dec
mov
push
add
call
pop
xchg
leave
mov
incl
mov
add
or
and
mov
push
cld
cmpsb
repnz
aad
inc
mov
decl
out
popw
cmp
idivl
aaa
pop
jg
inc
pushf
or
push
clc
fcoml
and
std
daa
pop
add
mov
sbb
clc
mov
sub
xor
xchg
in
flds
jmp
pop
inc
loopne
dec
jne
mov
and
std
fwait
mov
jl
sub
jle
mov
jnp
cmpb
movsl
cs
jl
sub
pop
mov
mov
je
loope
push
mov
aam
xchg
sub
loopne
pop
xchg
mov
clc
add
les
mov
adc
call
mov
mov
dec
outsl
stos
je
cmp
adc
adc
in
test
xchg
adc
or
mov
push
push
mov
mov
push
jl
push
xchg
dec
adc
add
pop
pop
nop
sub
sub
lret
leave
loopne
pop
mov
fs
adc
adc
and
push
notb
cli
leave
lahf
adc
push
xlat
cmpsb
int
dec
hlt
or
je
stos
push
jg
fstp
cmp
sub
cmp
cmp
push
scas
mov
cmpb
jmp
cmp
or
jns
jo
test
jmp
lret
je
pop
and
dec
mov
adc
subl
daa
mov
inc
loope
aam
out
fisubs
loopne
mov
jp
inc
cmp
fmuls
movsl
out
enter
ret
das
xor
shll
nop
xor
cli
sar
push
mov
mov
hlt
add
addb
pop
push
dec
cmp
sbb
push
cwtl
ret
call
mov
cmp
orl
clc
jg
fistpll
add
les
iret
int3
or
mov
pop
sub
pop
sbb
jbe
in
mov
push
xchg
outsl
add
dec
inc
adc
mov
pop
or
sub
ret
mov
sbb
jb
call
loope
loop
sar
rclb
je
xor
push
outsb
negb
mov
jns
pop
inc
add
xor
xchg
inc
and
add
je
xchg
call
jp
insl
mov
push
out
adc
inc
insl
rcl
in
call
xchg
add
hlt
dec
movsl
dec
push
or
or
sbb
test
movsb
push
adc
adc
lea
dec
icebp
mov
pop
pusha
call
daa
cmp
data16
clc
add
adc
and
sbbl
xlat
sbb
loopne
xor
fisubrl
mov
out
or
push
push
mov
add
xor
push
xchg
sbb
incb
loopne
sbb
pusha
dec
fsts
push
cmpsl
shll
insb
adc
fists
push
js
adc
dec
mov
pop
dec
ret
mov
adc
mov
mov
call
add
bswap
das
mov
xchg
cltd
mov
or
lock
mov
and
dec
push
jmp
mov
and
xchg
pop
sbbb
scas
cmpsb
mov
in
inc
lock
rcll
or
mov
or
mov
jbe
inc
add
ret
sub
xor
xor
mov
push
push
test
cmpsl
adc
ss
stos
push
adc
pushl
add
rorl
dec
imul
insb
fildl
addr16
add
shrl
mov
jns
roll
adc
in
add
jg
jg
lret
mov
dec
push
adc
cmp
pop
daa
mov
add
dec
sbb
dec
sub
adc
dec
jg
incl
nop
daa
sbb
scas
pop
add
mov
and
jecxz
pop
mov
stc
fdivl
loopne
mov
cltd
adc
cld
sbb
add
jg
mov
adc
in
xorb
frstor
mov
std
call
rorl
jo
push
or
cli
adc
mov
adc
mov
or
nop
push
adc
add
xor
xchg
pop
stos
dec
std
mov
add
inc
inc
rcll
in
incl
adc
push
mov
movsl
xlat
pop
and
xsave
in
ret
imul
mov
call
push
pop
adc
lea
adc
fists
jg
jbe
icebp
push
pop
loop
movb
movups
shrl
cmp
idivb
incl
sbb
lcall
xorb
ja
call
shlb
adc
loope
roll
adc
mov
dec
jbe
xor
sub
out
mov
inc
roll
int3
add
adc
mov
fisubrs
add
sbb
push
adc
cld
cld
ljmp
outsl
test
adc
dec
jne
or
jae
aaa
incl
add
xchg
bound
adc
das
dec
dec
push
sub
pop
movb
sbb
out
mov
sub
test
pop
mov
dec
inc
lods
cld
outsl
pushl
push
and
scas
loopne
es
call
pusha
sbb
add
or
pop
inc
lods
and
shlb
xlat
push
into
je
fdivrl
pop
je
inc
sub
inc
mov
cs
sbb
sbb
dec
call
adc
sbb
aaa
fmull
cmp
rorb
lcall
incl
mov
inc
pop
inc
sarb
add
jo
loopne
es
stos
sbb
push
add
lock
adc
jp
js
or
sbb
addr16
pushl
push
ds
push
xchg
mov
clc
and
mov
cmp
dec
adc
adc
sbbb
push
jg
hlt
in
add
mul
call
add
adc
fbld
inc
das
call
stos
mov
mov
or
call
pop
lcall
cld
lret
mov
xchg
and
push
adc
movsb
or
jmp
add
push
lret
mov
ret
inc
fimull
dec
out
je
call
xchg
xor
mov
scas
or
aam
cmp
push
push
xchg
call
inc
inc
push
push
xchg
sub
aad
push
or
cli
call
sub
mov
call
mov
cmp
loope
mov
push
test
rol
das
rcr
pop
lds
test
sbb
in
rcll
pop
aam
test
jbe
pop
add
mov
in
dec
xor
or
cmp
xor
jo
out
inc
call
aaa
outsl
ss
clc
cli
call
pop
lods
sbb
xchg
adc
mov
test
or
fwait
adc
pop
adc
jns
and
push
clc
cld
cli
rcrl
std
fildl
nop
adc
add
push
dec
ljmp
stos
sahf
mov
and
lds
in
inc
sub
rcr
out
add
ja
inc
adc
rcrl
inc
cmp
xchg
ss
jg
push
rclb
insl
adc
xor
and
and
sbb
adc
aad
outsl
out
jge
cs
mov
and
or
xor
jns
xchg
sahf
je
cmp
inc
jl
add
call
adc
mov
andb
das
add
xchg
es
stos
add
or
push
adc
ficoms
adc
inc
push
mov
call
test
add
in
jle
movsb
push
out
lret
repnz
cmpsl
mov
inc
ljmp
and
add
xchg
mov
loope
jmp
sbb
call
dec
push
popf
pop
xor
test
decl
mov
cmp
je
mov
lret
xchg
adc
and
in
or
push
int3
adc
mov
xchg
adc
and
dec
mov
call
dec
shrb
and
jnp
adc
inc
mov
inc
jbe
add
inc
imul
lret
call
sti
outsl
mov
sbb
dec
push
adc
inc
or
dec
imulb
clc
pop
push
xchg
and
jge
add
mov
outsl
jle
cld
in
int
cld
testb
sbb
add
mov
push
inc
sbb
pop
xchg
mov
adc
jle
icebp
js
and
mov
mov
out
xorl
pop
ret
or
adc
push
pushl
push
xor
mov
fldl
fwait
pop
pop
out
adc
icebp
lea
incb
jo
mov
sub
scas
mov
push
mov
jg
adc
inc
inc
adc
mov
scas
fidivs
sub
xchg
in
push
je
filds
test
cli
dec
or
js
or
adc
adc
adc
jp
sbb
in
jmp
in
addl
outsl
xor
adc
xchg
mov
outsl
add
mov
adc
ja
call
dec
imul
adc
lea
add
push
inc
call
jge
adc
jecxz
adc
mov
ret
call
scas
xor
mov
mov
std
push
dec
repnz
cmp
scas
adc
mov
decl
sti
inc
push
pusha
adc
fisubrs
push
sarl
and
jmp
jl
or
test
iret
adc
jno
adc
lods
push
add
icebp
cmp
loop
mov
not
add
pop
icebp
mov
out
lret
in
cld
adc
or
jg
cmc
xchg
sub
insl
mov
add
gs
pop
loopne
loopne
or
or
xchg
adc
ss
loop
orb
pop
jne
xchg
or
mov
dec
add
pop
insl
fcmovu
ret
ljmp
rcr
data16
ret
arpl
or
jp
inc
or
inc
je
or
mov
fs
adc
imul
ud0
jmp
ret
daa
popa
mov
xorl
or
les
mov
sbb
cld
pop
add
pusha
repnz
sub
add
push
fbld
shrb
push
insb
mov
add
jmp
xor
adc
adc
adc
push
pop
lcall
je
addl
sbb
inc
jb
pop
hlt
dec
mov
out
add
out
xchg
sub
xchg
leave
jl
adc
sbb
mov
adc
loopne
js
adc
hlt
je
mov
fisubs
jmp
js
mov
cli
insb
adc
pushf
into
push
int3
push
rclb
mov
adc
push
jp
adc
sbb
test
lds
je
fadds
loope
push
cmpb
loop
adc
ficoms
mov
testb
adc
out
jp
mov
xor
push
cmpsl
fs
jo
mov
stos
mov
pop
adc
sub
call
movsb
mov
inc
mov
push
mov
clc
in
lods
test
inc
outsb
push
push
fwait
js
add
jl
pop
or
mov
cmpsb
loopne
call
repz
add
mov
hlt
add
push
je
and
mov
inc
pushf
mov
jae
push
pusha
cld
jo
mov
pop
into
and
pusha
adc
and
inc
orb
mov
outsl
push
adc
cli
push
inc
add
outsl
test
pop
add
icebp
lcall
enter
call
fwait
push
aad
fcmovb
das
xor
mov
dec
scas
fs
xchg
pushl
push
xchg
or
add
mov
fistpll
pop
xlat
adc
sub
sbb
push
test
push
or
setbe
push
dec
lea
or
jne
mov
lock
adc
aas
sbb
es
add
xlat
aam
lock
push
lea
cmpb
sbb
xorb
lcall
adc
daa
xchg
push
xchg
jbe
loop
scas
negl
dec
xlat
sub
pop
and
je
call
addb
pop
cld
jg
or
adc
or
push
jo
je
cld
fidivs
stc
inc
push
in
outsl
hlt
push
jno
or
and
adc
adc
fnstsw
sti
dec
xor
mov
rcll
out
out
add
adc
fcmovu
cmp
out
icebp
adc
add
push
lock
call
call
push
jg
jo
je
nop
call
fists
outsl
ret
out
ret
lahf
dec
cld
pop
mov
les
cmp
out
sbb
repz
sbb
jb
repz
dec
or
jbe
jmp
or
cmp
sub
jmp
sbb
add
lock
adc
sbb
inc
xchg
sub
scas
sarb
mov
adc
leave
jb
add
jg
mov
daa
sbb
div
out
jp
push
cwtl
jne
fcoml
aad
add
test
mov
sbb
pusha
mov
mov
wrmsr
fsubrs
je
pop
pop
das
lea
sub
push
xchg
or
sahf
or
inc
lret
test
ret
mov
bound
aas
add
jb
sbb
xchg
bound
inc
test
and
movsl
or
xchg
adc
or
xor
sub
ja
mov
and
mov
push
ja
xchg
mov
mov
xchg
jmp
adc
movsb
das
ljmp
mov
jno
ds
bound
ret
sub
lcall
shlb
test
sbb
jb
pop
movsl
inc
and
inc
rcll
pop
or
call
add
push
sub
inc
adc
dec
or
adc
stos
xor
pop
xchg
inc
adc
xor
clc
call
jae
cli
sub
mov
mov
xchg
push
adc
imul
lret
pop
ret
clc
push
mov
lcall
sbb
push
add
fimull
lcall
fidivl
mov
mov
jno
mov
fwait
pop
adc
push
jecxz
and
mov
lcall
lods
push
add
mov
mov
and
adc
insl
call
loop
mov
jo
push
adc
add
add
dec
or
dec
iret
mov
into
or
lcall
test
sub
xor
jmp
jg
xor
push
fists
cmp
pop
call
inc
ja
mov
jne
lds
cmp
jge
dec
or
sub
adc
adc
and
adc
push
dec
or
add
xor
add
adc
add
mov
dec
dec
fcoml
sbbb
sbb
scas
dec
push
add
lock
je
mov
xor
test
pop
mov
or
lret
xchg
or
decl
lds
push
or
xchg
sub
cmpl
cwtl
cld
scas
lods
lcall
inc
jae
roll
pop
je
gs
mov
adc
and
into
jge
and
frstor
push
jbe
scas
stc
jp
lock
xchg
mov
add
mov
rolb
sub
xchg
cmp
adc
inc
dec
mov
mov
lea
xchg
add
je
or
pop
and
aad
jb
push
lcall
hlt
test
xchg
add
or
adc
inc
adc
leave
lret
push
cli
inc
adc
jne
ret
je
mov
cmc
inc
cmpsb
mov
mov
lods
mov
js
mov
or
cmp
out
adc
or
xor
out
je
leave
push
imul
mov
outsl
gs
jl
popa
sub
dec
mov
mov
cmpsb
push
pop
sub
sub
vpperm
loopne
jnp
jl
jne
cmpsb
int3
inc
xchg
inc
xchg
inc
adc
cmp
mov
pushl
dec
out
cmp
shrb
js
xor
call
adc
dec
dec
fcoml
ljmp
or
adc
pop
pushf
push
call
in
inc
sbb
sbb
inc
ljmp
daa
mov
or
sbb
sahf
push
sbb
mov
push
jmp
push
clc
out
imul
adc
mov
dec
and
and
test
add
push
mov
or
cs
jg
mov
cmc
or
and
movsb
inc
adc
push
pop
or
inc
adc
mov
icebp
jecxz
loopne
icebp
fwait
pusha
mov
adc
or
xor
xchg
adc
into
inc
rorb
inc
adc
jl
das
loopne
callw
mov
call
mov
les
adc
icebp
je
test
data16
push
sub
jg
mov
cmp
testl
xor
lock
out
cld
testb
inc
mov
inc
and
nop
call
cwtl
lock
adc
in
stos
nop
cmp
clc
mov
adc
call
xor
and
xor
roll
push
ret
lods
adc
xchg
stos
inc
pop
hlt
mov
in
mov
lret
cmp
repnz
dec
push
jne
cli
push
pop
jl
ret
je
aam
mov
fidivrs
fdivrp
stos
sub
push
loope
dec
push
or
cli
jne
outsl
js
push
test
mov
dec
adc
adc
adc
jb
pop
fwait
call
xchg
sbb
xchg
push
xor
cld
clc
push
add
add
lret
jbe
adc
pop
push
pop
incl
xor
push
sub
and
pushf
xchg
fildll
push
xchg
pop
and
mov
push
pop
es
repz
mov
lock
push
adc
adc
sub
shll
sbbb
mov
and
inc
in
adc
bnd
js
xchg
push
repnz
cmp
cmp
ljmp
add
push
rcrl
test
sbb
cld
pop
mov
leave
adc
jae
bound
mov
push
faddl
sbb
adc
call
lea
aam
push
into
or
js
call
fsubrp
test
push
rcrb
mov
shlb
sub
add
push
lock
mov
lret
pushf
inc
jl
loopne
pop
inc
xor
out
pop
icebp
mov
ja
or
fs
push
pop
add
in
xchg
mov
adc
cmp
push
jp
mov
mov
inc
cmc
fwait
inc
cld
andl
jecxz
mov
cld
inc
or
and
pop
jl
out
ja
jp
pop
mull
xchg
and
js
jg
je
cmp
pop
pop
inc
mov
test
pushl
pop
adc
bound
call
nop
xchg
lods
adc
add
cld
and
lea
inc
je
rolb
mov
subb
mov
mov
call
inc
pop
lock
cwtl
lret
adc
not
or
sar
adc
mov
decl
pop
pop
mov
jb
xchg
icebp
and
sbb
dec
cmp
es
or
pop
sub
sarb
or
insl
hlt
or
mov
adc
loopne
lock
mov
int
das
xor
scas
iret
fmull
add
je
clc
js
iret
fmuls
sbb
or
add
lea
jl
push
ror
out
jl
fdivs
push
jp
xchg
push
jne
cld
das
sarb
les
push
enter
mov
out
push
movsl
cli
pushl
adc
and
add
jge
dec
aaa
cmp
aaa
pop
mov
sbb
add
cld
jecxz
scas
or
call
adc
imul
mov
xchg
xchg
or
fwait
and
adc
jns
je
dec
decl
jecxz
in
add
push
idivb
mov
les
xchg
sahf
sbb
call
adc
je
jne
stos
ss
jg
mov
repz
dec
pop
data16
je
xchg
dec
decl
jb
cltd
std
clc
jle
sub
or
movb
mov
aam
pop
xor
pusha
lea
mov
pop
push
or
adc
pushl
push
dec
inc
adc
mov
adc
ljmp
je
xchg
adc
mov
inc
pushl
sbb
cmc
call
adc
je
call
add
dec
xor
push
jg
aam
pop
sub
std
mov
adc
jg
into
jne
bound
fs
pop
lock
or
mov
xor
cmpsb
je
mov
push
mov
xchg
push
xor
mov
push
repnz
mov
les
cmp
adc
adc
add
out
sar
lcall
test
add
cmpsl
call
push
xchg
and
or
ret
xor
xchg
lock
or
mov
xchg
xor
cmp
mov
inc
mov
or
push
adc
adc
cmc
cmp
std
pop
mov
add
cld
jl
inc
movsb
fsubl
jnp
in
clc
aaa
std
bt
mov
fnstenv
push
ss
cmp
add
jmp
das
rclb
pop
dec
add
mov
sbb
icebp
pop
push
add
sbb
lret
cmp
xchg
mov
add
fcmovb
rorb
mov
push
scas
push
jo
inc
inc
lock
push
stc
nop
mov
sbb
inc
adc
and
jae
es
add
push
pop
hlt
je
adc
cmp
pusha
and
xchg
call
enter
or
push
loope
or
mov
sbb
jno
aas
sbb
arpl
mov
pop
and
dec
rorb
mov
inc
inc
jne
cmp
ficoml
sbb
call
subb
faddp
js
adc
push
mov
dec
xor
stos
cmp
mov
push
test
add
shl
pop
pop
add
sub
pop
aaa
je
xchg
xchg
orb
pusha
jo
jg
test
lods
call
nop
cwtl
and
xlat
out
mov
xchg
mov
lea
fwait
push
push
sbb
loopne
add
adc
and
sbb
incl
mov
inc
pop
call
dec
inc
idivl
mov
sub
test
fdivrl
scas
ret
pushl
inc
clc
rolb
jl
mov
add
call
xchg
jg
je
jmp
fidivrs
es
shlb
sbb
add
or
jo
out
push
lcall
pop
out
test
push
and
mov
insl
aam
aam
fs
lret
push
xor
call
push
ss
cld
sub
xor
lea
test
add
push
call
sbb
std
mov
jmp
daa
push
shrb
mov
daa
movb
push
or
mov
je
outsl
cmp
shr
inc
push
sbb
inc
push
dec
pusha
adc
outsl
or
dec
nop
test
stos
inc
je
rcr
xor
ja
mov
jb
call
push
clc
lock
add
xor
rclb
lcall
movsl
sub
mov
cmp
cmp
adc
push
push
call
sub
mov
or
lcall
add
test
addr16
sub
cmp
sbbb
sbb
add
je
call
fsubl
xor
and
loopne
test
ja
jo
inc
add
sbb
jg
sub
xor
es
cld
ret
add
les
add
sti
push
pop
jnp
dec
ds
sbb
inc
push
jb
icebp
push
fwait
call
sbb
xor
xchg
ss
cmpsl
push
or
leave
xchg
sub
outsl
add
filds
aad
pop
jnp
add
invd
pop
mov
pusha
push
push
clc
mov
inc
loop
jg
ljmp
or
add
insb
adc
mov
popa
and
mov
jns
sbb
cmp
cmpsl
andb
je
xchg
mov
dec
or
aaa
cwtl
cs
and
aam
jle
and
fwait
cmpb
cmc
ret
inc
lcall
call
push
adc
adc
decb
mov
pushf
adc
push
lock
mov
iret
adc
and
pop
sbb
sbb
mov
push
in
cmpsb
adc
xchg
in
jle
jb
and
and
mov
sub
cmp
in
xchg
jo
push
adc
add
and
mov
mov
mov
movsl
add
jge
xor
dec
lcall
clc
pop
enter
pop
je
cmp
sbb
push
and
fs
or
aas
sbb
sub
jecxz
push
arpl
mov
int3
mov
inc
mov
push
adc
in
adc
or
call
and
add
adc
pusha
jle
and
mov
dec
push
aas
mov
icebp
shrb
cmp
sbb
je
sarb
gs
lea
divb
lret
lods
syscall
mov
or
push
push
sbb
inc
jb
lcall
jnp
mov
adc
loopne,pn
incl
or
pop
mov
je
out
call
orb
push
sub
adc
jne
push
xor
lods
aaa
je
retw
cwtl
inc
add
out
add
or
mov
adc
pop
add
push
ja
lock
pop
fs
adc
mov
adc
out
adc
inc
mov
or
out
inc
inc
je
xor
add
or
insl
add
add
xor
cltd
add
es
mov
jnp
and
add
push
adc
xor
jo
call
mov
add
jg
push
icebp
adc
push
add
sbb
add
mov
outsb
inc
sub
sbb
loope
inc
hlt
inc
jg
adc
scas
push
mov
sbb
ret
xchg
imul
dec
mov
push
add
mov
lcall
mov
int
add
or
push
mov
cmp
fimuls
pop
cmc
xchg
push
and
mov
push
lret
stc
mov
rcrb
mov
lea
push
sbb
xor
push
ret
mov
fsubrs
cli
mov
ja
mov
cmp
adc
add
push
icebp
push
loopne
pop
or
lock
daa
je
aaa
push
adc
lds
xchg
pushf
push
int
clc
or
jmp
xor
dec
mov
orb
pop
adc
push
icebp
test
sub
dec
pushf
sbb
movsb
test
clc
pushl
jge
jecxz
or
mov
in
lock
out
mov
push
cmp
ja
stos
adc
loopne
jle
jmp
fwait
loopne
and
mov
inc
jo
lock
jle
and
sbb
pop
mov
cld
pop
pushw
rcl
outsb
pop
je
jg
std
or
jno
add
es
lds
lea
inc
mov
and
stos
in
in
mov
push
and
cld
pop
test
rclb
sar
dec
push
dec
cmc
mov
loopne
das
pop
add
cmp
dec
xor
add
in
and
dec
jnp
mov
or
add
insb
sub
hlt
iret
cld
test
mov
pop
aad
pop
jo
cmp
jo
or
js
pop
adc
lds
cs
js
add
mov
fadds
mov
popa
add
test
jp
fsubs
cld
pop
pop
fs
jmp
adcb
xchg
mov
push
loope
mov
aad
sbb
out
ret
rorl
scas
in
movsl
xor
adc
xchg
mov
lock
hlt
cltd
call
mov
sarl
and
mov
push
out
jle
mov
lcall
stos
pop
lock
cmp
outsl
inc
test
arpl
in
jle
xchg
incb
pop
push
sahf
inc
dec
xchg
jno
out
xchg
test
cld
lcall
and
aaa
into
or
rcll
test
pop
stc
inc
mov
add
sub
jno
loopne
ret
loopne
std
cmp
push
nop
and
adc
ss
ret
nop
mov
or
mov
ja
leave
imul
addr16
adcb
mov
inc
add
sub
outsl
xor
sti
jb
addr16
mov
mov
jl
scas
or
mov
mov
je
jp
cmp
xor
adc
addb
adc
or
jle
outsl
sahf
xchg
dec
xchg
inc
add
out
cmp
xchg
push
adc
out
dec
cmpb
std
xchg
popf
jmp
mov
or
add
jbe
std
dec
mov
test
je
xor
jo
add
adc
dec
add
cld
push
sbb
clc
or
pop
adc
mov
pop
scas
pop
cwtl
push
or
mov
mov
fmuls
das
jnp
push
stos
inc
sub
xor
push
insl
inc
mov
xlat
or
push
dec
scas
sub
mov
dec
mov
mov
test
enter
mov
mov
xchg
jl
cwtl
xchg
push
inc
lea
sub
aam
or
xor
fs
jmp
ljmp
add
jle
inc
lods
mov
mov
out
fcom
mov
ss
je,pt
and
adc
sbb
pop
adc
adc
pop
push
xchg
mov
ja
mov
push
cmpl
sbb
stos
add
mov
es
push
and
jg
or
or
push
adc
hlt
push
add
push
mov
loope
xchg
xlat
clc
pop
adc
jle
dec
mov
das
incl
hlt
mov
call
xchg
add
push
add
adc
adc
fildll
adc
lods
call
adc
xchg
or
data16
test
iret
cmp
push
jg
call
loopne
jmp
jecxz
mov
je
add
bound
jg
mov
cmp
push
arpl
inc
jp
or
fs
adc
dec
cmp
enter
push
hlt
push
adc
adc
bound
or
inc
icebp
add
cmp
aam
and
mov
mov
jg
or
aaa
cld
pushl
lahf
imul
sti
pusha
aad
pop
adc
adc
hlt
cmpsb
push
cmp
rcrl
or
cmp
add
hlt
jg
je
jbe
and
adc
call
adc
es
add
pop
mov
pop
fsts
sti
incl
mov
incl
jl
mov
adc
sahf
inc
adc
das
das
pop
out
lock
dec
mov
inc
pop
std
or
fs
or
xor
ret
cli
pop
movsl
pop
push
adc
fcomps
xor
mov
jle
fiadds
pop
push
or
xchg
hlt
mov
jecxz
fsub
mov
push
dec
inc
divb
add
jnp
je
std
cmp
das
data16
lds
imul
push
and
cmp
adc
sahf
push
fldl
addb
dec
or
pop
hlt
add
inc
adc
adc
mov
push
icebp
into
test
sarb
dec
arpl
call
adc
sbb
cmp
or
jo
push
fisttps
sarb
adc
mov
or
call
out
jmp
and
bnd
add
stos
scas
sub
je
push
je
mov
clc
dec
jne
or
sbb
sbb
data16
call
push
popf
imul
xor
pop
mov
sbb
push
inc
jne
int
sbb
in
mov
clc
das
rolb
add
nop
add
jge
push
das
sub
push
and
push
or
xchg
sub
cmp
mov
je
call
pop
daa
scas
adc
out
or
negl
dec
add
leave
imul
call
scas
jns
add
xchg
inc
lock
and
or
fsts
adc
je
and
les
ljmp
bnd
xor
pop
push
call
adc
imul
sbb
or
jecxz
mov
enter
sahf
push
add
call
int
mov
mov
mov
push
inc
lds
or
push
scas
dec
pushf
cmp
inc
mov
adc
pusha
jbe
lea
rclb
cli
add
or
pop
xor
dec
movsb
mov
test
dec
add
xchg
imul
inc
mov
and
mov
lret
and
fisubs
add
mov
fwait
cs
mov
dec
inc
add
xchg
cltd
ljmp
sar
fsubp
cli
adc
adcl
inc
cmp
dec
adc
ss
call
adc
jle
testl
add
push
je
dec
or
aad
cmc
inc
push
and
std
fucomi
clc
outsb
jg
add
push
jecxz
xor
or
dec
adc
cmp
add
push
bound
loopne
cmp
fidivrl
test
fwait
js
push
rcrb
or
negb
pop
adc
push
movsl
push
inc
je
cmp
arpl
push
or
xor
add
inc
sub
pop
xchg
push
add
js
lcall
and
call
jns
je
pop
or
inc
jae
mov
cmpsb
bound
femms
mov
or
sbb
call
imul
or
rcrl
xchg
add
icebp
js
mov
and
sbb
xor
sub
aaa
arpl
inc
sub
sbb
cmpsb
daa
dec
call
lock
call
add
orl
dec
call
mov
sub
dec
xor
mov
movsl
sub
ret
pop
adcb
adc
call
jmp
jg
icebp
jg
jne
outsb
dec
call
push
push
push
xchg
ds
enter
push
sar
icebp
lret
call
adc
in
cmp
das
je
or
add
pop
sub
pop
push
pop
mov
call
jo
inc
lahf
sbb
aad
push
movb
adc
sbb
fdivrs
sarb
cmp
jae
add
outsl
sbb
and
push
jno
cli
fisttpl
sbb
add
add
sub
ret
ds
and
add
scas
lcall
jmp
out
adc
pop
xchg
stos
ficoml
lds
mov
or
out
std
incl
push
add
cmp
and
shl
cmc
adc
repz
mov
clc
idivb
sti
jmp
shll
sbb
cmp
arpl
or
das
sub
fidivrs
jl
jae
cmp
push
cmp
mov
dec
subb
mov
adc
sarb
sbb
or
mul
popf
negb
loopne
test
cli
mov
jb
call
loop
add
add
mov
mov
dec
add
and
rcll
loopne
pushl
adc
idivb
repnz
xor
call
mov
inc
xchg
inc
roll
pop
es
imul
add
jmp
sarb
mov
pusha
pop
or
pop
icebp
jg
pop
bound
call
mov
and
add
add
or
pop
xchg
jbe
add
lret
aas
adc
roll
mov
or
scas
call
stc
sbb
lret
les
dec
es
cmp
mov
int3
adc
test
outsl
mov
in
cmp
movsl
xchg
pop
xchg
cli
cltd
xor
sub
std
mov
adc
aam
push
or
cmc
aam
je
dec
dec
pop
je
mov
xchg
shl
xchg
cmpb
daa
popf
loop
mov
cwtl
or
lds
ljmp
or
mov
mov
inc
add
add
cmp
daa
aam
sub
sub
dec
inc
das
dec
mov
rcr
fs
pop
or
cld
jg
loopne
test
mov
jmp
pop
jle
repz
lods
das
add
dec
out
pop
adc
sti
xor
das
shrb
add
inc
add
add
or
adc
aam
sub
jle
outsl
xchg
rol
aam
leave
add
ljmp
rcr
jl
fwait
sbb
inc
push
shlb
add
fildll
dec
movsb
push
xor
jb
dec
dec
loopne
sbb
add
mov
mov
std
adc
aam
mov
addr16
ljmp
sub
ficoms
cmp
and
stos
enter
enter
call
mov
fildll
add
cmp
cmp
jb
test
dec
ljmp
cmpsb
cwtl
add
inc
mov
add
mov
push
push
out
fnstcw
mov
decl
push
test
jg
xchg
fisttps
repnz
add
loop
les
jecxz
dec
in
xor
mov
mov
and
sbb
push
add
or
ljmp
sub
push
xor
loopne
sbb
repz
adc
dec
fnstsw
or
outsl
jle
dec
sbb
pop
lock
push
or
fiadds
mov
cs
add
pop
xor
dec
add
lock
jg
loop
adc
pop
xchg
push
jb
pop
sub
add
call
loope
inc
or
scas
les
push
mov
hlt
xchg
dec
test
cld
jge
pusha
add
inc
lcall
inc
outsb
xchg
or
fmuls
daa
cmp
out
or
pushl
push
inc
jno
sahf
or
repz
sub
rcrb
sub
push
or
xlat
mov
je
cmpb
loop
adc
adc
in
or
jb
enter
ljmp
pop
or
jp
jbe
cltd
dec
fwait
je
shll
mov
test
mov
in
pusha
ffreep
in
test
cmp
pop
mov
and
pop
cmp
cmpl
loope
testb
fcomps
xchg
mov
mov
or
add
push
mov
push
adc
sub
lock
dec
mov
ret
adc
mov
cmp
cmp
nop
xchg
inc
lea
stc
insb
call
lret
sub
testb
cwtl
jmp
es
push
push
stos
xchg
lods
or
enter
mov
pop
push
ret
xchg
fcoml
fcmovb
outsl
clc
push
cmp
and
xchg
call
sbb
ss
sbb
ja
adc
ds
xor
or
adc
add
adc
or
outsb
jb
xchg
dec
lret
or
fbld
push
dec
std
or
aaa
mov
inc
dec
xor
inc
in
faddl
lock
adc
mov
ljmp
mov
cmp
stos
dec
aaa
add
and
scas
add
pop
hlt
jmp
call
nop
adc
or
mov
je
jl
jmp
jp
and
and
jge
loope
ja
sub
jg
leave
sbb
jbe
xor
fwait
test
divb
call
dec
arpl
sbb
call
je
cs
or
out
pushf
cli
ljmp
and
or
shrl
adcl
fcompl
or
jl
psrld
in
int3
es
call
add
xchg
sub
inc
loope
rolb
stc
and
mov
pusha
pop
nop
ret
cmp
adc
add
shlb
fidivrl
adc
cmp
pop
or
imul
into
shlb
adc
pop
call
and
and
adc
mov
inc
pop
or
add
mov
and
sub
pop
mov
call
add
or
adc
roll
loope
pop
add
mov
jle
push
cmp
jb
cmp
pop
loopne
add
decb
ds
and
add
adc
add
xor
push
stc
dec
fmuls
push
sbb
sub
adc
mov
cmp
mov
and
repnz
scas
inc
out
mov
dec
xchg
enter
add
inc
push
fnstenv
jb
imul
mov
cmp
fldl
add
xchg
sub
mov
add
insb
mov
arpl
sub
clc
ljmp
mov
pop
pop
push
or
add
push
rcl
jae
imul
bound
add
movb
sub
inc
jg
je
lock
or
and
sahf
adc
or
add
fbld
and
adc
nop
push
pusha
sbb
mov
ljmp
push
add
cmp
call
rorb
out
or
or
add
xchg
fcoms
ret
hlt
or
sbb
mov
push
stos
dec
push
clc
or
xchg
xorl
add
scas
aas
inc
cld
out
cmp
or
repnz
int
rcll
mov
adc
and
jae
mov
sub
dec
inc
add
mov
xchg
inc
ljmp
mov
sub
mov
adc
jbe
push
insb
sub
adc
push
rolb
mov
and
jns
inc
sbb
push
xchg
and
ds
jmp
sahf
or
rcll
mov
adc
add
or
sbb
xor
js
bound
rol
cmp
cmp
pop
lods
je
xor
adc
arpl
imul
add
test
xchg
or
mov
js
xor
xchg
icebp
dec
or
add
adc
adc
and
mov
aad
mov
and
cmpsb
add
call
cmp
cmpsb
lcallw
adc
jmp
adc
jmp
sbb
and
ljmp
adc
jmp
jmp
add
shlb
or
push
adc
pushf
adc
xchg
adc
or
sbb
std
ja
cs
push
fs
cs
inc
xchg
dec
rorb
cmpsb
lods
sbb
xchg
push
outsb
adc
ret
sti
adc
adc
std
filds
xchg
movsb
add
xchg
sub
adc
mov
cld
or
ret
mov
fisubrl
fbstp
testl
addl
add
je
mov
jle
loope
xchg
add
je
sbb
dec
or
test
in
call
push
in
test
adc
fimuls
push
push
dec
inc
push
std
lds
int3
inc
in
fdivl
into
aad
pop
cmpb
hlt
pop
mov
mov
xor
xchg
popa
add
or
jo
fldcw
shll
mov
lods
rorb
enter
and
dec
inc
test
popa
xor
pushfw
xor
in
sbb
ja
insl
loopne
int3
in
fisubs
adc
mov
xchg
mov
adc
adc
mov
loope
cmp
add
in
cmp
aad
add
lret
add
add
pop
mov
or
jl
sub
mov
push
pop
inc
ret
cmp
pop
inc
mov
inc
jmp
mov
dec
sub
lret
adc
sub
push
or
pushl
xor
push
add
adc
out
or
imulb
add
es
pop
mov
xor
je
and
mov
clc
rolb
call
sbb
sbb
mov
adc
repnz
add
and
pop
jp
incl
adc
aad
add
sub
js
data16
hlt
jge
shll
bound
mov
rolb
jmp
stc
mov
cmc
cmp
adc
lea
mov
stos
adc
push
sub
pop
push
or
movsl
dec
fwait
and
mov
jmp
out
cmp
or
scas
rorl
cld
push
fdivrp
insb
stc
adc
je
negb
ja
mov
test
in
jno
or
sbb
test
and
mov
mov
push
sub
mov
test
push
lea
je
fidivrl
adc
inc
dec
cltd
or
mov
int
jge
and
fsubr
xor
lock
loop
jmp
je
mov
pop
push
in
xchg
js
sub
repz
sbb
fcomp
inc
jbe
adcb
mov
loope
mov
outsl
or
jne
pop
and
shlb
jne
fisttpl
and
dec
inc
rolb
mov
test
push
lods
adc
enter
pop
xchg
jno
aaa
or
dec
sbb
mov
adc
das
aam
hlt
negb
or
adc
mov
xorb
ret
pop
dec
or
xchg
push
stos
pop
andl
test
sub
jne
fdivs
jmp
xchg
xchg
push
pop
outsl
mov
ja
ljmp
push
add
shrb
push
or
ret
mov
loopne
in
adc
fmuls
mov
mov
out
jne
add
cmp
inc
fadds
push
inc
mov
scas
sbb
inc
mov
sahf
inc
mov
stc
int
adc
in
mov
imul
cmp
std
stos
test
ret
dec
or
les
sahf
vcomiss
je
or
jge
cli
call
testb
lret
inc
mov
cmp
mov
imul
lea
or
or
mov
hlt
mov
mov
xor
call
sbb
int3
nop
je
xor
add
inc
push
mov
add
add
imul
ret
adc
inc
clc
jne
or
jbe
std
outsb
mov
cmp
push
sti
push
test
adc
ljmp
push
xor
dec
xor
imul
add
inc
pop
push
mov
test
pop
push
mov
adc
sbb
mov
int
mov
jecxz
rcrb
scas
test
xor
cld
cwtl
icebp
fbld
hlt
jge
xor
loopne
cmp
xchg
sub
push
in
adcl
or
jbe
xor
mov
xchg
movsb
adc
sub
aam
pop
add
sub
mov
test
xchg
dec
jl
and
xor
and
or
or
inc
cld
pop
test
xchg
pop
adc
mov
mov
add
xor
dec
rorl
cmp
pop
fdivs
cmpsl
ja
push
and
fimull
mov
fldl
sbb
sub
cld
ljmp
stos
jmp
sub
je
pop
pop
push
sub
adc
and
mov
stos
inc
mov
fisttps
int
mov
push
nop
mov
test
xchg
xor
or
push
mov
test
ss
call
mov
rolb
icebp
ja
popa
inc
adc
das
jno
add
insl
pop
adc
dec
incl
push
or
pop
call
add
mov
sub
mov
mov
xor
hlt
xchg
jbe
dec
jne
std
sub
or
adc
mov
add
inc
cld
and
mov
push
cmc
andb
in
popf
mov
or
lret
mov
or
sbb
cmp
add
call
nop
mov
insl
xor
xchg
in
adc
push
inc
cwtl
movsl
lock
inc
ret
add
add
in
hlt
fcmovnbe
or
xchg
pushf
and
xchg
call
adc
ret
mov
xor
jl
call
dec
mov
add
jp
aaa
testb
push
jmp
pushf
xorl
cmp
sahf
das
clc
test
ror
dec
mov
add
and
ss
stos
test
jmp
je
addr16
mov
or
ja
xchg
adc
and
outsl
sub
bound
je
add
lcall
les
pop
fimuls
adc
add
jo
cli
jg
jne
or
mov
call
adc
mov
mov
ss
cmp
ror
cmp
lds
jmp
cli
call
je
pop
loopne
mov
add
mov
mov
enter
fs
add
arpl
sub
cmc
mov
xor
add
jmp
or
and
adc
pop
nop
lret
sub
andb
sub
cs
push
sbb
mov
sahf
enter
adc
push
sub
pop
cld
and
adc
addr16
add
fildll
adc
mov
sar
addl
or
mov
ficompl
sub
sbb
repz
and
outsl
es
inc
xor
adc
outsb
or
outsb
cmp
dec
adc
adc
cmp
decl
adc
dec
stc
je
sub
call
add
repz
js
push
sbb
clc
jl
dec
fwait
loopne
jo,pn
icebp
pop
pop
lret
lods
addr16
cli
or
add
and
and
in
inc
inc
add
fbld
sub
roll
outsb
xchg
mov
xchg
loope
add
enter
nop
adc
jecxz
add
testl
or
mov
call
ja
adc
cmp
sbb
jne
mov
add
das
in
and
jecxz
mov
stos
outsl
repnz
je
sub
add
jmp
lods
jle
sub
mov
nop
in
das
inc
mov
test
push
subb
subb
test
xor
int
inc
lock
mov
pop
lret
dec
clc
or
fisubrl
jle
outsl
or
cld
inc
and
mov
pushf
xor
mov
loopne
pop
pushf
jle
add
in
cwtl
dec
aam
and
and
push
or
adc
xchg
outsb
pop
test
fdivrp
les
inc
add
dec
ljmp
jg
jp
dec
cmpsl
sti
int3
je
adc
out
sub
cmpsb
sub
adc
mov
mov
pop
sub
imul
adc
je
jo
fsubrs
sub
je
sub
adc
and
adc
aaa
sbb
pop
fs
dec
pop
ret
mov
pop
data16
dec
adc
push
shrl
xchg
and
sahf
push
int
fdivs
data16
adc
shrl
xor
dec
call
pop
jp
inc
fbld
ret
rorb
jbe
push
sbb
ljmp
insb
jl
push
or
jnp
inc
dec
add
cld
ss
jp
outsl
push
mov
hlt
pop
clc
orl
lods
jb
cmp
pop
or
pop
lret
mov
xchg
mov
iret
leave
jae
add
cs
mov
push
lret
outsb
gs
loop
aam
cld
adc
lret
adc
mov
mov
cmp
add
inc
mov
gs
xchg
scas
mov
and
or
push
xor
test
jmp
ss
icebp
xor
push
test
jne
decb
mov
call
cmc
push
je
xorl
mov
sub
fbstp
xchg
ljmp
jl
sar
push
push
cmp
xchg
sti
adc
mov
cld
inc
cltd
cmpsb
scas
movsb
mov
lret
cmp
scas
xchg
mov
push
dec
imul
adc
lock
jle
cli
daa
jmp
out
jp
jne
les
inc
inc
imul
push
mov
sub
adc
aaa
or
adc
imul
and
xchg
lcall
adc
out
dec
and
pop
rcl
or
xor
cmp
int
jg
cmc
or
or
push
add
cmp
lcall
loope
dec
cmp
fiadds
insl
sub
mov
fldenv
lods
fcmovb
push
add
adc
cmpl
push
outsb
insl
loope
fadd
mov
jle
inc
dec
call
and
mov
pop
test
and
outsl
in
push
mov
sbb
xchg
push
xor
xor
push
mov
enter
mov
roll
je
adc
pusha
call
add
sar
mov
mov
add
je
sub
aam
and
rorb
cs
std
adc
fildll
add
or
mov
mov
sahf
imul
cs
loope
mov
sti
push
cli
xor
inc
sub
data16
test
daa
jbe
sbb
cmpsb
call
add
test
js
das
dec
divl
hlt
cmp
jno
cmp
jg
mov
pop
inc
js
adc
mov
push
push
pop
js
adc
mov
fwait
inc
cmpsb
insl
je
enter
mov
lret
das
cld
sub
leave
push
jmp
inc
or
sub
or
ret
jmp
sub
xor
hlt
ret
push
jb
push
js
in
mov
xchg
stos
sbb
fmuls
mov
cli
jno
and
or
pop
xchg
imul
cmp
fs
stc
or
cmp
in
cmp
fidivrl
and
movsl
movsb
mov
iret
mov
sub
cmp
into
pop
push
call
scas
jp
cmpsl
adc
fiadds
lods
outsb
lock
mov
mov
clc
pop
mov
pop
xor
inc
pslld
jb
jle
mov
inc
adc
inc
sub
inc
scas
das
cli
pop
imul
je
cmp
stos
das
mov
subb
jmp
cs
icebp
notb
shll
je
pushf
push
sub
pop
test
ds
or
adc
inc
pusha
mov
loope
cld
xor
nop
mov
pop
sub
pop
or
jmp
push
xchg
js
outsl
push
jle
add
notb
add
loop
pop
lcall
and
adc
adc
inc
int3
xchg
sbb
hlt
inc
ljmp
das
sbb
call
inc
int3
dec
adc
jl
add
inc
fwait
xchg
clc
testb
push
cmp
cmp
call
xchg
fidivrs
inc
je
adc
pop
cs
loop
cli
or
data16
ja
adc
test
es
ficoms
adc
pop
pop
outsb
sbb
add
lahf
enter
xchg
dec
popf
inc
rcrb
cmp
xor
lahf
push
jg
jb
push
ds
les
cli
or
loop
push
int
dec
sbb
jle
add
nop
icebp
in
add
test
sub
dec
adc
adc
pop
std
add
or
adc
mov
jle
test
mov
jg
pop
adc
loop
inc
jnp
lret
call
add
jge
mov
repnz
lcall
stos
xchg
xor
out
test
adc
adc
in
ds
or
ret
outsl
cmp
jg
ds
and
call
loopne
cmp
xor
aaa
jne
pop
or
adc
and
inc
xchg
jmp
mov
jle
ljmp
mov
or
mov
fs
pop
rorl
mov
and
sub
dec
lret
jbe
or
jmp
inc
jg
mov
repz
push
sub
shl
das
xchg
cwtl
push
pop
ljmp
xchg
xor
outsl
push
push
cmp
fsubl
push
es
stos
xchg
inc
push
stos
movsl
cs
out
xchg
mov
mov
pop
cltd
test
push
sarl
sub
imul
loopne
mov
adc
jmp
mov
or
xor
adc
mov
cld
lea
add
and
mov
sbb
adc
clc
decl
pusha
ljmp
adc
fs
adc
out
jle
repnz
pop
gs
sub
das
dec
add
adc
add
addl
add
cs
inc
jmp
cld
mov
and
divl
test
inc
mov
cmp
and
shl
push
enter
data16
stc
cmp
cmp
pop
sbb
dec
cmp
andb
jle
push
lret
ret
lock
dec
enter
mov
mov
sar
mov
std
mov
dec
mov
test
mov
cmp
jl
push
cld
je
nop
adc
cmp
scas
xchg
sub
and
clc
dec
movsb
mov
call
les
scas
out
push
icebp
les
adc
mov
xor
pop
sub
es
test
mov
in
jmp
xor
imul
xchg
dec
cmpsb
in
je
data16
sbb
mov
imul
lcall
add
pop
push
mov
lea
inc
pop
pop
clc
adc
jmp
push
test
in
sbb
mov
aaa
jg
inc
lcall
fsubr
hlt
sub
push
loopne
mov
xor
or
xchg
or
ret
out
or
ja
jg
or
sbb
pop
loop
or
mov
incb
mov
add
lcall
inc
lea
dec
in
mov
add
mov
aam
js
aam
call
adc
pop
mov
hlt
loopne
mov
lea
jbe
adc
or
push
dec
lret
mov
out
fistpll
sbb
xor
stos
aas
pop
cli
in
pushl
push
jmp
enter
lret
mov
mov
mov
fmuls
push
pusha
sar
mov
pop
xor
or
test
rcll
mov
inc
dec
jmp
ret
call
adc
ret
cld
jns
outsl
cli
cs
stc
pop
or
sbb
enter
shlb
cld
lock
orb
jg
sbb
jne
arpl
mov
clc
daa
enter
inc
lds
mov
je
mov
repnz
repnz
shrb
jbe
stos
xchg
jmp
jmp
inc
xor
fiadds
jmp
or
sbb
push
inc
adcl
lods
adc
cmpl
or
jecxz
adc
je
in
lods
jl
testb
inc
add
je
push
mov
loope
mov
mov
clc
add
cmp
and
mov
les
inc
mov
addr16
cld
add
addb
enter
push
add
adc
mov
pop
out
test
je
call
insl
mov
cmp
fidivs
movsb
test
data16
je
pushf
mov
cmp
or
repnz
cmp
je
test
or
add
or
cli
loop
dec
jl
mov
or
insl
orl
scas
xor
push
and
mov
mov
adc
mov
mov
xchg
sbb
sub
dec
arpl
inc
adc
je
mov
sub
sahf
frndint
xor
mov
and
lcall
hlt
xor
jle
into
hlt
faddp
push
add
or
cli
mov
jne
ret
sub
mov
shlb
adc
in
inc
dec
pop
mov
je
add
sub
in
outsl
lock
in
cmpsb
add
lods
outsb
mov
or
or
loopne
pop
repz
test
orb
inc
pop
or
dec
push
std
mov
lret
or
adc
mov
stos
cld
mov
fistl
neg
adc
push
or
pusha
adc
jb
sub
adc
testb
repnz
and
mov
sub
int
decl
lahf
cmc
adcl
sbb
in
jb
call
adc
lock
pop
jo
push
dec
call
or
cmpb
adc
and
mov
adc
cmp
dec
pop
jle
pop
mov
lret
lock
test
pop
jne
mov
ja
or
je
out
ret
fwait
mov
xchg
iret
push
outsb
mov
inc
aaa
xchg
push
pusha
js
ret
ljmp
fcompl
int3
jns
inc
dec
or
roll
cmp
mov
mov
ret
insb
aaa
xor
adc
mov
or
fdivs
pushl
mov
and
int3
jmp
nop
call
sub
lcall
dec
cmc
dec
push
aas
call
mov
rol
mov
sti
lock
cmp
std
test
int3
add
jo
insb
cwtl
shl
sbb
sub
fcomi
wrmsr
adc
add
or
jbe
add
push
and
sbb
adcl
cld
push
jb
mov
xchg
jecxz
or
dec
andl
and
aaa
jge
jno
mov
pop
cmp
adc
scas
out
adc
insb
movsb
divb
lea
ljmp
sub
or
mov
mov
lds
je
push
and
movsl
in
movsl
and
cwtl
cmpb
jbe
inc
xlat
mov
jl
ss
orl
jne
mov
push
push
cs
push
je
stc
mov
adc
outsl
adc
add
ljmp
in
mov
bound
jle
lahf
sbb
clc
push
data16
leavew
cs
push
xlat
popa
adc
arpl
bound
sbbl
in
push
aam
cld
and
lcall
add
inc
in
ss
inc
rclb
mov
mov
mov
jg
addl
daa
mov
sub
std
mov
xchg
adc
push
pop
fucomi
test
lcall
jp
add
icebp
jg
mov
sub
mov
loop
sbb
cltd
sahf
add
push
insl
adc
aad
mov
push
mov
cmp
add
lahf
pusha
sbb
icebp
int
pop
push
adc
jp
inc
add
fs
xor
leave
addb
sub
in
push
or
adc
and
sbb
jl,pt
adc
xor
push
insb
inc
fs
xor
rorb
std
test
or
push
enter
ja,pt
or
push
sbb
or
or
dec
insb
sbb
or
mov
sub
add
push
xchg
lret
and
sbb
int3
xlat
shrb
sbb
push
dec
jecxz
or
ret
push
call
mov
or
fmuls
push
add
pop
mov
dec
add
pushl
inc
and
dec
outsl
test
je
xchg
enter
mov
xor
adc
stc
test
shl
dec
stos
xor
test
les
outsl
testb
call
lea
out
int
cld
enter
dec
add
mov
mov
add
add
adc
sbb
jne
iret
sub
or
push
dec
aas
mov
xchg
ret
mov
sahf
dec
cli
lods
lcall
dec
jle
sahf
lods
cld
mov
call
push
scas
push
push
mov
add
jo
std
ljmp
and
shlb
lds
mov
lock
lea
je
stos
pop
dec
lahf
mov
mov
sub
cmp
adc
pushf
je
xchg
xor
dec
or
mov
sub
into
xchg
stos
add
jns
lods
xor
and
into
test
and
mov
jbe
mov
fs
xchg
call
lock
cmp
inc
inc
cli
out
rcrb
inc
hlt
fwait
cld
movsl
clc
dec
jl
xchg
inc
dec
push
dec
rolb
push
fdivs
push
cwtl
cmp
outsl
lds
sbb
lods
push
mov
inc
rorl
mov
fnstsw
push
ds
das
fiadds
mov
in
push
dec
inc
cmp
sbb
lock
jbe
inc
outsl
pop
dec
inc
add
mov
mov
push
mov
ret
jb
test
cwtl
add
jo
push
sub
mov
mov
lea
mov
mov
out
or
jo
fsubl
mov
das
push
mov
dec
push
sbbb
stos
push
jl
sub
sbb
shl
out
sub
jb
das
sahf
inc
outsl
jo
loopne
pop
cmpsb
pop
dec
loopne,pt
fs
test
adc
clc
xchg
mov
add
imul
mov
mov
jle
push
jbe
js
pop
push
pop
xor
add
testb
mov
clc
mov
shl
or
scas
push
je
jp
ljmp
add
and
adc
and
and
daa
inc
aam
fcmovne
xchg
out
pusha
or
cmp
out
aaa
bound
and
adc
jne
or
jl
xchg
pop
mov
shll
adc
pop
mov
push
push
inc
or
shll
add
mov
jp
mov
push
sbb
and
negb
and
inc
popf
je
dec
inc
inc
or
loopne
test
xlat
jmp
lea
or
lock
leave
lcall
adc
add
dec
add
stos
cmc
push
add
out
outsl
push
outsl
sub
pop
in
or
mov
and
push
mov
lcall
out
fildl
sbb
pop
and
iret
or
rcr
mov
cli
sub
xor
fsubrl
sub
or
fildl
sub
je
bnd
insb
call
mov
push
push
sti
adc
pop
and
addr16
mov
out
mov
adc
add
or
stos
cmpsb
data16
inc
ljmp
mov
or
add
adc
jbe
imul
push
dec
pop
adc
or
movsl
lea
jmp
push
movsl
dec
push
dec
sbb
jbe
pushf
mov
jmp
je
cmp
xor
push
pop
mov
loop
cs
incl
call
adcb
adc
adc
psubsb
adc
or
jbe
or
js
shrl
vmovhps
mov
nop
nop
push
nop
xchg
inc
sti
jae
int
fstpl
mov
clc
xor
inc
or
mov
dec
sbb
adc
addr16
or
shr
je
inc
in
push
mov
mov
dec
adc
mov
push
mov
sbb
rolb
sbb
jge
ljmp
fldt
lods
lcall
dec
mov
sbb
sub
mov
mov
rcrb
xchg
adc
dec
sahf
push
mov
pop
call
jae
push
adc
call
je
es
add
xchg
mov
adc
outsl
push
pop
inc
cli
fistl
mov
bnd
jb
xor
je
stos
imul
insb
adc
divb
jp
add
fwait
dec
data16
mov
and
jb
call
adc
mov
fisubs
mov
nop
jmp
out
adc
xor
add
and
les
and
xchg
mov
adc
fisttpl
mov
pop
cmovge
and
dec
add
mov
fsubrs
ds
scas
std
fs
pop
inc
xchg
cmpl
lcall
cmp
push
adc
into
aas
and
mov
mov
push
je
push
xchg
sub
scas
pushf
jg
out
and
jb
dec
jle
addr16
adc
cmpb
or
adc
xchg
jbe
xor
push
sbb
mov
mov
js
mov
rclb
xchg
push
in
mov
add
neg
adc
aad
pop
cmc
or
jle
mov
push
dec
jbe
jp
jle
stc
jle
or
or
inc
dec
repnz
testb
xchg
repnz
jmp
mov
push
sti
aaa
jo
jbe
and
into
and
popa
jp
sbb
loop
inc
adc
insl
ret
pusha
add
pop
repnz
je
dec
add
test
movsb
adcb
push
jl
fiadds
pop
push
add
mov
cli
add
mov
adc
sbb
adc
incl
sub
jns
mov
sub
pop
push
xor
sahf
inc
add
cmpsb
add
fistpl
jmp
sbb
inc
sub
outsb
and
pop
icebp
and
adc
and
cli
sbb
adcb
jo
scas
fidivs
imul
cmpsb
adc
sbb
leave
adc
and
xchg
out
or
adc
add
add
pop
mov
xchg
pop
jmp
mov
push
cmp
cltd
dec
add
bnd
lds
cli
test
and
mov
dec
sbb
add
mov
outsb
push
sbb
jp
inc
sbb
sbb
int3
xor
loopne
sbb
imul
js
dec
lock
xchg
dec
mov
lcall
or
dec
sbb
sub
scas
lret
mov
xchg
jbe
push
pop
into
xchg
loop
inc
cld
icebp
pop
stos
cmp
and
pop
loopne
pop
sbb
or
dec
or
pushl
lods
sbb
xchg
or
add
andb
clc
jg
mov
dec
fldcw
xor
pop
add
cmp
loopne
aad
cli
jp
adc
ds
mov
and
andl
push
shl
add
sbbl
cld
fdivrs
rorb
xchg
mov
hlt
out
mov
xchg
sub
rcl
xor
les
pop
xor
mov
mov
push
in
sahf
movsl
sub
sub
fs
insb
in
test
js
xchg
adc
aaa
call
add
cmpsl
mov
mov
sub
inc
and
stos
les
in
je
xchg
icebp
xchg
mov
movsb
sub
aam
mov
ja
inc
enter
aad
inc
xor
sbb
xchg
call
cmpsb
push
leave
in
pop
xchg
sub
scas
jle
inc
fcoms
mov
pop
adc
mov
cs
mov
xchg
cmp
mov
and
mov
mov
idiv
inc
cld
inc
dec
adc
cmp
cli
inc
dec
push
adc
dec
aaa
fldt
add
or
daa
pushaw
cmpb
and
dec
or
mov
call
adc
dec
push
or
adc
shlb
lret
inc
or
inc
in
roll
mov
adc
pop
pusha
adc
push
cmp
push
cmpsb
fadd
push
pusha
mov
aam
movsl
mov
mov
pop
cld
inc
jbe
inc
sbb
mov
int
and
insl
xchg
nop
mov
in
add
and
aaa
adc
adc
in
lock
jbe
test
mov
sbb
xor
or
cmc
callw
xchg
jl
shlb
sarl
xchg
lea
pop
loopne
mov
sub
jle
sbb
loopne
cmp
incb
aam
ja
or
add
inc
add
in
pop
dec
xor
sub
outsb
dec
jmp
or
aas
daa
in
and
mov
push
cmp
insb
push
push
xor
clc
sbb
mov
ja
jae
movd
cmpsl
mov
or
or
lret
sub
and
outsb
mov
add
cmc
es
adc
iret
fiadds
mulb
sahf
lods
adc
ret
ds
inc
jp
sbb
push
pop
cs
jne
dec
test
and
dec
movb
ds
mov
push
leave
sbb
add
mov
or
dec
cld
cmp
int3
mov
test
in
or
sbb
test
adc
mov
bound
lret
pop
js
push
call
cltd
or
push
lcall
sbb
adc
xchg
pop
cmpsl
into
jbe
jl
or
or
sti
adc
push
sub
or
jle
jp
add
push
push
adcl
adc
ret
jmp
sbb
jne
inc
arpl
gs
fistps
mov
cmp
adc
call
lret
leave
ljmp
pop
or
mov
test
rolb
and
adc
lods
mov
pusha
or
insl
pop
into
mov
bound
push
pop
jne
jne
imul
decl
sub
cld
push
jp
mov
push
nop
cmp
and
add
lock
rcrb
in
adc
out
pop
sahf
sti
xchg
xor
hlt
dec
mov
mov
sub
xchg
inc
adc
es
cmp
and
add
xor
filds
fs
into
inc
inc
outsb
mov
jns
test
adc
fmull
push
ljmp
push
mov
icebp
incl
mov
or
jns
call
add
bound
je
adc
xor
adc
dec
rolb
adc
add
inc
in
clc
adc
adc
test
pop
sbb
push
out
inc
dec
pop
lcall
push
xchg
les
and
rcrb
pop
or
int3
adc
cmp
lock
imul
stos
or
insl
cli
mov
movsl
inc
aaa
adc
mov
out
pop
mov
jmp
xorb
decb
mov
dec
sub
mov
mov
jp
jmp
mov
ja
pop
or
cli
sbb
fcoml
mov
or
imul
pop
sbb
jbe
xchg
test
xlat
sub
add
out
push
daa
cmp
adc
ljmp
adc
testb
je
adc
call
ja
cmp
icebp
add
cli
filds
filds
and
fsubs
je
fs
je
add
clc
mov
xchg
hlt
je
shll
rcl
mov
stos
lods
test
mov
and
cmp
rclb
and
dec
testb
push
shl
rcrb
mov
adc
scas
xor
mov
std
push
js
and
mov
xchg
jne
jb
push
sbb
adc
pop
dec
sbb
jbe
xor
push
in
insl
and
gs
cmp
or
dec
nop
push
mov
ds
je
push
push
rolb
loopne
or
xchg
or
inc
fs
adc
or
cs
inc
jp
pop
aam
je
push
xchg
das
je
or
sbb
or
repz
sbb
nop
std
mov
xchg
or
mov
cmp
je
loope
into
gs
sub
or
fcomi
out
inc
adc
cwtl
mov
pop
add
fildl
dec
or
push
push
inc
mov
add
xor
aaa
inc
xchg
jmp
push
and
lods
jbe
and
ret
jns
mov
push
mov
orb
adc
fs
adc
js
roll
mov
sbb
mov
shrb
insb
call
aas
test
adc
sub
mov
or
in
sbb
inc
and
cmp
lock
je
sub
in
sbb
unpcklps
pop
sub
mov
and
push
push
sub
stos
xchg
xor
call
or
dec
and
jbe
cwtl
pop
sbb
out
and
dec
cmp
test
and
xchg
in
adc
cld
or
jmp
mov
sbb
cwtl
jl
fsts
sar
lcall
in
out
sub
adcl
outsb
mov
call
inc
test
add
and
mov
push
inc
add
clc
pop
pop
stos
in
push
or
je
sbb
sbb
jle
jle
sbb
in
ret
xchg
adc
sub
popa
and
popf
cmp
sbb
pop
clc
lret
adc
jl
hlt
mov
pop
mov
xchg
dec
xor
or
cmp
dec
adc
imul
push
push
pop
sbb
mov
jmp
add
cmp
icebp
ljmp
xlat
repnz
pusha
call
push
cmp
fwait
mov
push
repz
and
pop
inc
pop
add
popf
ja
loop
sahf
jg
je
push
push
sahf
inc
sti
adc
mov
push
jmp
adc
pusha
add
jge
loopne
inc
xchg
pop
cld
test
mov
andb
pushl
data16
adc
loopne
or
shlb
sub
push
es
in
movsb
sub
jo
or
adc
dec
jge
imul
push
xor
mov
fcmovbe
leave
movsb
mov
mov
adc
mov
cmp
cld
mov
je
inc
lea
movsl
sbb
add
mov
or
xor
cmp
mov
ljmp
data16
hlt
cmp
dec
push
call
sub
loope
mov
dec
jae
push
jbe
call
push
pushf
movl
hlt
orl
test
xchg
test
dec
dec
mov
sbbl
call
xor
and
mov
xchg
cwtl
lods
xchg
out
outsl
js
jmp
jle
test
add
pushf
or
inc
dec
dec
cld
shr
clc
pop
in
push
enter
cmpsl
add
sbb
dec
mov
fwait
bound
push
inc
sbb
add
lcall
jne
xchg
stos
pop
test
aam
mov
and
sbb
cmp
clc
shrb
pusha
or
inc
mov
xor
jbe
orl
cmp
push
mov
stos
enter
test
push
daa
mov
mov
pop
loop
mov
or
inc
jmp
push
mov
fisttpl
fsubr
sub
arpl
pop
ds
jo
and
loopne
ja
gs
add
pop
ror
fs
hlt
xchg
jae
jge
jecxz
xchg
sbb
cld
lds
dec
test
pop
jbe
lods
das
and
aas
jle
mov
dec
lock
adc
mov
mov
cmp
mov
les
icebp
push
dec
xchg
jb
add
icebp
adc
fcmovu
ret
fs
or
sub
rol
dec
cmpsb
bound
iret
mov
pop
sbb
inc
pop
loop
xchg
les
movsb
rclb
stc
mov
repz
cmp
adc
mov
icebp
inc
je
lods
cmp
pop
aas
scas
repnz
dec
sbb
pushf
and
out
add
and
mov
xchg
lds
stos
stos
scas
popa
sbb
stos
xor
mov
mov
pop
dec
je
or
cli
mov
lock
cmp
or
je
fisubs
inc
cli
push
mov
push
mov
mov
mov
or
push
ljmp
push
mov
or
adc
mov
movsb
or
jle
pop
mov
les
or
fisubrl
add
orb
movswl
call
cmpsb
clc
mov
lcall
out
or
or
adc
mov
sbb
sbb
sbb
je
inc
inc
dec
pop
cld
add
test
ds
push
sbb
lahf
adc
test
call
sub
push
sub
adc
cmp
lds
sbb
call
mov
xor
or
loopne
push
loop
lds
pop
jb
pop
push
bound
sub
add
or
bound
push
mov
lock
dec
scas
pop
leave
sbb
pop
fldl
cmp
gs
imul
adc
test
jg
jecxz
or
and
stos
adc
pop
rorl
mov
imull
adc
int3
xchg
test
add
or
addb
cmp
pushw
or
jne
sbb
test
inc
and
lcall
dec
call
add
adc
dec
rorl
jle
adc
mov
outsl
or
mov
dec
adc
sbb
inc
lds
adc
lahf
inc
call
mov
call
mov
cmp
add
mov
add
loopne
cmp
inc
jg
sub
sbb
cwtl
je
dec
out
jg
pushl
mov
adc
enter
call
dec
adc
outsl
ja
mov
pop
xchg
add
adc
mov
adc
jp
lcall
pop
cmc
ja
notl
enter
add
mov
pusha
or
ret
adc
inc
mov
stos
packssdw
inc
mov
aas
nop
outsb
xor
push
cmp
push
add
cmp
push
fcomps
pop
push
call
sub
icebp
pop
mov
or
inc
and
push
sbb
enter
in
adcl
cmp
adcb
add
mov
and
lret
iret
cli
ljmp
cwtl
inc
movsb
clc
or
pop
mov
lods
mov
pop
cmp
aaa
add
inc
xchg
out
push
xchg
push
lock
jno
sbb
mov
sahf
adc
jl
adc
and
and
xchg
xor
andb
inc
adc
push
xor
call
cs
mov
jmp
sub
xchg
fidivrl
outsl
jg
push
fadds
idivl
jl
cmp
popa
cld
call
adc
idivb
call
inc
jl
xor
push
aad
jl
es
mov
push
jg
stos
clc
mov
je
xchg
xchg
add
mov
int
push
ljmp
sub
xchg
push
shlb
pop
stc
xchg
jecxz
add
sub
fsubs
inc
rclb
and
cmpsl
sbb
push
xor
lret
pop
push
mov
icebp
mov
nop
pusha
arpl
std
inc
clc
shlb
fisttps
in
mov
fidivl
xor
call
je
and
xor
sub
mov
sbb
inc
xor
fwait
bound
les
cmp
add
pop
add
jp
jbe
arpl
pop
xor
inc
jne
jnp
xor
pop
jp
mov
mov
rclb
inc
add
add
and
enter
lock
inc
or
dec
scas
xor
or
scas
and
cmp
sbb
lods
inc
in
mov
and
fimull
adc
sbb
pop
adc
das
or
call
or
mov
data16
push
aam
adc
or
dec
jmp
fs
inc
hlt
mov
and
cmp
jbe
pusha
in
adc
jo
test
jno
sbb
and
shll
push
sub
fisubrs
mov
lahf
mov
cmpsb
push
test
add
add
mov
hlt
hlt
or
stc
fwait
adc
lret
xchg
jecxz
add
mov
or
or
push
fucomi
or
push
or
insb
sbb
pop
cs
adc
or
pusha
xchg
inc
add
push
test
add
repz
sbb
mov
fistpll
ja
jmp
push
jne
sahf
xchg
imulb
mov
xchg
out
imul
push
fiadds
cltd
lea
lret
adcl
or
shr
lock
fimull
add
mov
and
xor
pusha
push
clc
or
int
sarb
push
push
iret
push
sahf
xchg
imulb
imul
sbb
imul
mov
arpl
mov
arpl
xor
dec
addr16
cltd
lea
jns
sahf
xchg
out
jg
in
jge
lahf
subb
mov
hlt
inc
repnz
andl
cmp
pop
jb
mov
jg
cmp
or
mov
sub
fstpt
push
in
dec
mov
stos
cmp
jno
in
hlt
sbb
add
cmp
loope
into
inc
clc
pshufw
dec
or
jnp
jbe
hlt
and
cwtl
mov
xorps
ja
push
cmpsl
movsl
ret
sbb
cmp
cmpsl
test
or
sub
std
ja
loope
fistpl
daa
repnz
xchg
clc
pushf
sub
push
lock
adc
mov
and
imul
mov
insl
movsl
mov
test
cs
test
test
or
fmull
xchg
add
push
push
pop
mov
adc
addr16
sbb
mov
adc
mov
push
loop
and
mov
mov
adc
lcall
fistps
sbb
fwait
jae
lcall
push
fildll
cwtl
or
add
loopne
mov
stos
das
or
outsl
fmull
mov
repnz
or
loope
sbb
pop
mov
sub
or
pusha
sbb
jb
push
fstpt
loopne
outsb
xchg
fucomi
dec
add
pop
js
insl
fwait
addb
sbb
or
jnp
ljmp
hlt
loope
rcr
cmp
or
andb
fisttps
lods
jge
sbb
pop
sbb
jl
sbb
mov
mov
and
xchg
push
pop
sbb
enter
mov
mov
add
add
xchg
mov
push
push
and
mov
sbbl
in
outsb
aam
fmull
inc
out
outsb
xor
cmp
push
jne
add
xor
adc
sbb
push
dec
cmp
stos
mov
sub
pop
in
fisubl
mov
mov
or
jns
fs
xor
mov
cmp
stos
sbb
pop
mov
jo
imul
sbb
loopne
fld
adc
daa
fisttps
sti
jno
imul
shll
mov
loope
sbb
lods
bound
call
repnz
or
out
inc
movsl
ds
rorl
dec
sahf
sub
sbb
mov
inc
cwtl
cltd
data16
pop
sub
lock
xor
add
or
popf
pop
loopne
rcll
fdivl
test
and
jo
pop
xor
adc
aad
mov
popf
pop
imul
or
mov
mov
nop
sbb
insl
mov
sub
and
shll
add
cmp
inc
sub
mov
mov
shlb
sbb
jg
dec
mov
mov
add
sbb
cmp
clc
into
fisttpll
sbb
add
adc
rcll
mov
add
cld
mov
das
cld
fimull
jmp
pop
mov
pop
dec
lock
jb
adc
or
or
mov
fdiv
and
aaa
cmpsl
fcmovb
mov
fbld
mov
sub
add
nop
sub
jmp
add
nop
vmulpd
nop
add
aad
aad
cmp
ss
fisttps
jnp
fistpl
add
pmuludq
sti
stos
or
hlt
mov
arpl
pop
fs
push
fs
lahf
xchg
jbe
inc
push
xchg
test
fildll
inc
out
jp
ud1
enter
and
fisttps
decl
loop
fnsave
lret
xchg
or
test
mov
stos
dec
bound
inc
push
xlat
imul
aaa
sbb
subb
in
je
mov
repnz
mov
push
insl
pushf
mov
loop
xchg
je
push
pushl
rorb
repnz
cmpsl
movsl
add
adc
jecxz
jg
and
jecxz
lock
testb
or
xchg
fidivl
fst
das
ja
out
movsl
adc
adc
mov
mov
mov
mov
add
loope
in
scas
pop
xor
int3
repnz
xor
add
adc
pop
loopne
in
in
insl
sbb
mov
std
sub
jo
mov
test
xorb
mov
adc
popw
or
push
adc
jg
sbb
fidivl
lock
push
enter
add
fmull
into
and
invd
bound
clc
sbb
pop
mov
cmp
push
fildl
shll
mov
dec
in
xchg
dec
or
add
or
xor
mov
adc
dec
repnz
or
aad
or
mov
xorb
fistpl
fstps
adc
adc
aaa
cld
xchg
jge
loope
push
sbb
adc
cmp
or
stc
mov
push
addr16
loope
mov
jbe
fistpll
adc
mov
and
testb
adc
sbb
push
insl
hlt
jge
loope
decl
fidivs
pop
pop
sbb
add
test
jle
pop
leave
out
sbb
jmp
or
adc
xor
cli
out
enter
sbb
es
cmp
jb
add
insl
roll
xchg
popf
ja
incl
out
fmull
cmp
fcoml
push
mov
movsl
or
aam
cmpsb
adc
cmp
mov
in
addb
push
adc
call
sbb
pop
jo
sbb
mov
or
pop
dec
je
outsl
cmp
sbb
and
out
adc
inc
add
iret
arpl
adc
idivb
pop
push
jbe
jle
xchg
mov
mov
imul
pop
mov
cmp
popf
or
mov
push
sbb
push
call
out
sbbl
xchg
fwait
aas
jb
lods
aaa
out
pop
mulb
xchg
sbb
sub
in
inc
cld
insl
sub
out
sub
dec
loope
jmp
int3
negb
shrb
nop
mov
std
lcall
dec
jle
arpl
adc
push
mov
stos
test
jg
call
sub
add
sbb
mov
jecxz
add
repnz
or
inc
insb
pminub
mov
fcmovb
jge
push
je
xor
fidivrl
push
ficoml
push
das
mov
in
jne
fsubl
pushf
loope
and
out
jg
push
test
jecxz
sub
fwait
mov
sbb
push
sub
icebp
jp
or
jle
ljmp
in
mov
sbb
insb
or
lock
or
add
daa
xchg
scas
mov
mov
insl
xchg
pop
test
les
out
mov
inc
pop
sbb
xor
in
adc
fmul
ljmp
dec
jmp
jmp
add
inc
add
mov
dec
and
add
cs
outsl
inc
xor
add
cmp
add
inc
sub
jbe
and
pushl
in
outsb
push
js
jo
sbb
hlt
cld
xor
fistpll
ret
dec
xor
dec
push
aam
add
inc
movsb
pop
bound
dec
sub
idiv
cltd
in
add
dec
jp
ja
arpl
add
rorl
add
xor
inc
add
pop
xor
push
inc
out
aaa
mov
push
dec
pop
data16
shlb
sbb
lcall
pop
jg
call
add
xor
push
push
pop
cld
mov
add
xlat
push
roll
jno
lock
out
mov
xor
lods
roll
jne
add
sub
inc
push
idivb
inc
add
inc
push
push
jno
push
sub
notb
cs
fadd
dec
cmp
push
hlt
dec
ret
loopne
lret
leave
push
ret
pop
add
fildl
add
test
push
sbb
adc
dec
add
ljmp
push
jl
dec
std
push
sete
dec
ret
jae
inc
push
dec
add
inc
push
inc
push
mov
fistl
pop
xor
add
mov
inc
pop
ret
or
add
mov
outsb
jp
sbbl
pop
sub
inc
push
pop
dec
xor
fs
jo
popf
adcb
sub
mov
jmp
sub
mov
and
dec
jp
sbb
dec
das
push
inc
gs
lock
add
xor
pop
lods
incl
dec
inc
dec
add
cmpl
sbb
dec
shrb
roll
jb
jo
fisttpl
les
push
push
inc
or
push
lods
addl
add
mov
sub
cltd
shrl
repnz
inc
add
insb
push
add
dec
inc
int
fmuls
push
loopne
dec
ja
inc
aaa
push
add
out
outsl
jne
mov
xor
andb
pop
mov
pop
fdivr
and
add
je
inc
lds
push
inc
xor
jge
add
inc
clc
inc
sbb
mov
add
cmp
inc
jle
out
das
data16
dec
or
jne
and
jne
inc
orl
xchg
mov
jle
mov
les
insb
add
loopne
inc
dec
ljmp
decb
jae
sbbl
rcrl
shl
pushl
out
std
sbb
idiv
sub
mov
daa
data16
jb
inc
addl
dec
mov
mov
jo
xor
mov
sbb
add
out
fwait
loopne
push
push
jae
mov
inc
pushw
adc
jl
ss
push
mov
cli
mov
aas
push
push
imul
fildll
xchg
clc
adc
lret
ljmp
push
jg
cmpsb
gs
sbb
lahf
inc
mov
cmp
push
insl
scas
jns
add
lahf
das
jp
insb
fcmovb
inc
mov
test
test
xchg
adc
lock
jae
mov
inc
call
jmp
dec
inc
dec
inc
inc
dec
xchg
gs
loopne
mov
adc
ljmp
xchg
xor
inc
dec
mov
incl
repz
dec
push
dec
add
push
mov
push
imul
popa
mov
bound
add
jb
roll
ss
arpl
add
inc
dec
dec
lds
adc
adc
push
jo
add
cmp
xor
add
lods
push
xor
sub
incl
popa
call
adc
and
add
ja
push
push
mov
sbb
sbb
cld
add
or
mov
data16
xor
dec
jne
ret
push
scas
aaa
sub
sub
dec
xor
sti
loope
xor
dec
cmpsb
dec
lock
push
jno
push
dec
pop
pusha
adc
scas
push
and
jmp
jne
sbb
cltd
popf
jne
jno
pop
loopne
push
aas
inc
push
pop
iret
popa
rcr
mov
sub
pop
mov
mov
add
imull
jnp
pop
nop
push
jbe
bound
pusha
inc
xchg
mov
fnsave
push
push
cwtl
or
add
jle
jmp
ret
arpl
jae
fdivr
push
movsb
mov
pop
xor
pusha
bound
ljmp
data16
lods
push
xchg
add
inc
fsubr
aad
xchg
mov
push
loopne
pop
pop
dec
push
push
hlt
pushw
cld
jmp
out
ja
push
add
rorl
outsl
aad
movsb
jmp
lret
jo
insb
insb
repz
pcmpeqb
push
sub
outsl
push
push
inc
dec
xor
cmpsb
xchg
rcll
and
push
notl
stos
loope
pop
fmull
push
hlt
cli
sub
sbb
or
stos
push
mov
fcompl
stos
sbb
dec
outsl
or
icebp
movsl
pop
mov
jns
in
testl
imul
inc
push
outsl
pop
ror
add
lods
shll
jne
mov
sbb
inc
loop
lock
ja
popa
dec
inc
adc
scas
push
inc
xor
jns
xor
jb
xor
dec
outsl
js
call
dec
popl
fmuls
lcall
inc
inc
dec
sub
push
pop
inc
adc
inc
repz
push
and
addb
ds
cmp
inc
mov
mulb
pop
mov
add
sbb
imul
adcl
jns
xor
mov
or
mov
fucom
sub
push
push
dec
push
pop
imul
pop
movsb
or
call
sub
call
outsb
inc
and
mov
push
cmp
add
loope
xor
dec
push
mov
loop
dec
jbe
dec
pop
mov
sbb
aam
cld
out
inc
xchg
pop
push
xor
jo
inc
push
xchg
cli
scas
scas
mov
outsl
jb
push
outsl
addb
cs
aaa
xor
rolb
enter
push
dec
je
dec
ret
orl
push
and
popa
sub
mov
ret
dec
test
inc
cmp
xor
mov
jbe
inc
push
jne
inc
fs
inc
gs
xor
aam
dec
push
bnd
divl
mov
shr
fs
loop
or
std
and
xchg
inc
push
push
ret
shr
lods
loope
inc
icebp
and
jl
jno
imul
pusha
imul
xlat
push
into
xchg
sub
inc
jo
ss
ret
jl
or
outsb
xor
push
inc
clc
pop
aas
sub
inc
mov
jmp
mov
mov
jmp
js
pushf
scas
lock
mov
pop
sub
dec
jae
push
lret
popa
push
xor
mov
in
inc
repz
scas
test
sbb
mov
xor
inc
ja
inc
out
add
dec
je
and
test
jne
sub
roll
sub
gs
dec
cmp
arpl
jo
jecxz
push
or
addb
addr16
lahf
dec
in
stc
push
xor
mov
mov
insl
pop
cmp
jmp
cmp
cmpl
inc
push
xor
mov
mov
dec
aaa
xor
pop
push
pop
sti
icebp
mov
push
out
fs
je
add
bound
push
add
push
xor
jle
je
fcmovb
pop
cmp
push
loope
hlt
std
sub
imul
dec
xor
bound
push
pop
scas
lock
outsl
imul
pop
test
jb
scas
imul
and
or
push
and
xchg
fsts
mov
adc
call
adc
sbb
or
pop
out
fcompp
add
inc
push
xor
es
mov
pop
adc
sbb
xor
aas
pop
jnp
neg
cmp
int
gs
mov
mov
repz
aaa
mov
jbe
pop
adc
adc
out
outsb
jnp
aad
xor
das
pop
nop
insl
fwait
adc
cmc
sbb
sarl
cmp
cmpl
pop
jae
mov
sbb
cmp
fiadds
pop
nop
popa
ret
pop
xchg
lea
sbb
sbb
sbb
test
push
sbbl
pusha
rcrl
out
xor
outsl
roll
dec
ds
js
or
adc
insl
jo
ret
add
loopne
sbb
mov
push
pop
pop
xor
movsl
sarl
xchg
out
mov
sub
push
in
aas
mov
popf
arpl
fstpt
dec
mov
mov
pop
adc
adc
imul
jo
pop
shrd
xorb
jecxz
jne
jae
jecxz
dec
add
ja
sub
sub
popa
mov
outsl
lea
xchg
sub
or
orb
or
cmp
add
dec
mov
popa
add
push
push
js
and
inc
add
outsl
add
gs
fidivrs
dec
add
bound
insb
data16
and
add
jnp
cmp
imul
inc
jae
push
testl
inc
add
mov
sbb
scas
cmpsb
add
or
xlat
inc
sbb
repz
pop
jnp
out
xchg
cmp
push
jb
jle
loopne
mov
push
xchg
jae
jl
sti
mov
push
je
outsl
pop
inc
add
fdivrp
sub
stos
jae
pop
inc
push
sub
jae
in
jnp
scas
arpl
imul
mov
rorl
push
mov
es
jne
inc
or
insl
adc
jnp
shll
add
sbb
mov
sbb
push
jno
jae
test
sbb
insb
and
xchg
inc
sbb
ja
outsb
bound
cmp
xorps
fs
lock
cmp
or
push
loopne
xchg
pandn
jo
jae
outsl
dec
fs
xchg
fidivrs
inc
jae
out
and
repz
pushf
popa
stos
imul
jl
ja
je
imul
push
cmp
int
xlat
push
pop
ja
fwait
lock
jle
arpl
sub
cmp
jno
fcompl
sub
inc
cmp
nop
xor
jns
fcompl
push
out
inc
pop
xchg
jne
inc
mov
mov
adc
inc
adc
fcompl
xchg
addl
daa
sub
jno
into
loope
jnp
cmp
out
rcll
jl
out
repnz
jo
pop
ljmp
pop
jb
jo
inc
jmp
pop
andb
or
loope
jns
outsb
scas
out
fdivrl
push
gs
cld
cmp
mov
jbe
das
add
inc
mov
outsl
pop
gs
add
xchg
inc
inc
ja
iret
pop
lcall
jo
cld
shrl
add
or
mul
sbb
insb
mov
es
shr
mull
insb
sbb
inc
add
inc
ret
movsl
jecxz
outsl
jp
popa
jle
cmpsb
mul
dec
dec
pop
popl
fisubs
pop
das
or
or
sub
sbb
out
jb
pop
sbb
sbb
mov
add
push
imul
in
adc
adc
dec
dec
jp
lock
add
aas
in
dec
push
push
jno
jl
hlt
jnp
fs
dec
mov
out
jno
pop
push
sub
inc
jo
out
inc
cmp
mov
mov
ss
pop
mov
xchg
insb
dec
inc
mov
es
push
bound
into
ss
push
mov
pause
ret
test
roll
jecxz
pop
outsl
arpl
hlt
pop
dec
daa
dec
lret
loopne
shrb
imul
add
add
pop
xchg
jae
jp
pop
pop
pop
fiaddl
jo,pn
out
lock
or
pop
lods
ds
imulb
cmp
add
jl
ja
imul
and
jae
je
dec
jnp
pop
xor
add
sbb
mov
jnp
jecxz
loopne
aaa
js
push
insl
nop
lret
push
cvtps2pd
xlat
inc
lahf
jb
lds
out
dec
es
aaa
dec
pop
mov
or
mov
lds
sbb
arpl
loopne
fwait
push
daa
outsb
inc
rcl
scas
bound
add
push
orl
push
ja
mov
add
push
xchg
fsubrs
dec
xchg
jne
lret
fstpt
das
add
mov
jl
loop
mov
jecxz
aas
mov
fisttpl
inc
sub
and
daa
pop
inc
iret
iret
mov
dec
inc
sti
xor
push
mov
dec
fwait
data16
imul
sar
pop
and
cwtl
jge
addr16
gs
and
addb
outsl
lahf
into
stos
jnp
sqrtps
je
jmp
inc
inc
jns
scas
insl
imul
lods
fimuls
jae
cmp
daa
pop
xchg
lret
in
pop
out
outsl
daa
outsl
popa
ja
add
sub
and
xchg
pop
dec
pop
inc
inc
fisttps
out
mov
push
jne
lock
mov
adc
movq
inc
pop
stos
test
popa
xlat
popf
data16
aaa
cmp
loopne
mov
jae
push
repz
daa
jae
stc
sarl
xor
es
mov
aad
outsb
mov
dec
push
jge
pop
push
pop
imul
and
push
inc
outsl
cmp
loopne
xor
nop
sti
xchg
mov
das
sahf
shr
jns
aaa
jne
sti
mov
mov
pop
dec
mov
pop
arpl
add
cmp
negl
pop
mov
mov
cmpsl
lret
add
jae
or
and
jecxz
or
lcall
push
dec
xchg
dec
sbb
pop
hlt
out
fs
xchg
es
shrl
das
stos
das
or
mul
outsb
stos
insb
outsl
xor
mov
fwait
push
sub
sbb
popa
adc
adc
iret
lret
mov
jnp
cs
popa
pop
rcll
push
aaa
fimull
out
and
aaa
js
arpl
push
gs
jbe
lcall
add
pop
lds
sbb
push
mov
loope
loopne
outsb
jg
mov
push
cmp
iret
in
jge
pxor
pop
push
lret
push
sub
mov
sub
inc
insl
jnp
scas
lret
mov
test
cmp
nop
mov
jmp
mov
cmp
inc
pop
lret
xchg
dec
andl
xchg
mov
push
cmpsl
icebp
addb
out
pop
dec
pop
loop
or
and
jns
pusha
icebp
mov
sub
mov
xor
jmp
add
adc
adc
dec
jl
inc
test
push
das
push
mov
jns
scas
data16
mov
push
je
dec
dec
inc
push
adc
fiadds
add
shll
lldt
lods
add
or
sbb
mov
inc
add
xorl
add
xor
inc
addr16
enter
and
dec
cmp
jo
xchg
cmp
test
or
cmpsl
inc
add
mov
or
jg
add
das
add
dec
xorb
cs
add
sub
cmp
mov
inc
add
add
pop
push
shrb
sub
add
movsl
jmp
add
shll
mov
mov
cwtl
sub
dec
or
mov
xor
push
fistpl
pusha
insb
jmp
dec
push
repnz
jle
mov
outsb
push
or
add
inc
jmp
adcb
xor
xor
xchg
sahf
mov
std
push
mov
xor
jmp
mov
enter
xor
jo
xor
pusha
imul
or
ret
xor
pushl
outsb
fs
imul
sub
mov
sub
cmp
lcall
loop
and
dec
ret
popf
mov
outsb
das
pop
mov
mov
push
decl
mov
inc
fnstsw
jecxz
cmp
cmp
push
mov
and
mov
std
bound
ljmp
dec
fs
sub
lods
xchg
pop
jne
push
push
cwtl
pop
jp
mov
mov
sbb
ljmp
insl
pop
pop
mov
sub
iret
adc
lahf
and
mov
fmuls
push
and
incl
movsl
cmp
in
jo
jl
mov
or
or
lret
lock
or
icebp
test
jmp
sub
inc
pop
stos
inc
adc
and
push
and
into
pop
xchg
push
out
lcall
enter
mov
cltd
rcr
adc
hlt
fdivrs
xchg
in
ret
jge
repz
call
xchg
daa
aas
adc
nop
in
jecxz
jg
repnz
lcall
les
cli
aaa
pop
mov
push
xor
cs
dec
dec
add
add
sbb
movsl
xchg
and
lcall
test
xor
pushf
mov
mov
push
stos
cmp
mov
xchg
add
repz
cmp
dec
sub
dec
push
xchg
inc
xor
jp
loop
inc
adc
dec
scas
clc
ljmp
les
xchg
push
and
ja
pop
hlt
mov
sub
stos
push
rcl
in
loop
jmp
mov
out
add
loop
ljmp
jns
mov
je
xlat
mov
rolb
lock
add
das
dec
sti
lret
mov
push
inc
jo
xor
mov
pop
lahf
jle
mov
arpl
idiv
das
and
jge
xchg
dec
pop
inc
daa
out
jmp
lea
push
out
inc
clc
push
mov
mov
cmpsl
enter
addr16
adc
jns
cld
test
or
pop
bound
ror
pinsrw
inc
cmp
push
mov
int3
loope
and
sub
mov
daa
inc
movsl
ljmp
jp
push
insl
call
arpl
inc
loop
mov
add
jmp
ret
decl
popf
cld
cld
jne
mov
sub
in
jmp
mov
sub
das
jnp
lcall
mov
sub
mov
ds
inc
xchg
push
addl
scas
xor
or
push
push
cli
sub
loopne
scas
dec
inc
sarb
inc
sbb
decl
cmp
adc
test
mov
test
decl
flds
leave
push
jl
mov
adc
jl
les
pop
add
pop
fbstp
hlt
std
xchg
lea
push
jmp
pop
mov
mov
dec
lods
jno
mov
xor
mov
das
xchg
mov
adc
mov
sub
add
add
add
adc
fsubs
orb
cld
or
movsb
jno
inc
gs
mov
imul
imul
jne
je
xor
inc
jmp
outsb
sti
sub
imul
pusha
insb
outsl
bound
dec
gs
in
fucomi
outsl
jb
push
inc
jne
mov
dec
outsb
outsw
inc
js
sbb
ja
data16
fwait
gs
imul
jo
push
sti
sti
inc
bound
les
addr16
outsl
dec
popa
test
push
imul
neg
mov
push
outsl
insb
jne
push
push
push
inc
and
popa
jo
jl
xchg
pop
push
inc
dec
outsl
jne
mov
in
fwait
andl
outsb
xor
mov
pusha
imul
fistpl
fsubrl
dec
bound
iret
jp
jne
mulb
and
iret
dec
gs
gs
fistl
xor
jb
dec
dec
and
push
push
imul
imull
neg
popf
or
adcb
push
outsb
ja
clc
xlat
mov
adc
jne
fs
insl
inc
inc
inc
push
aaa
ffreep
outsb
adc
inc
je
bound
popa
add
jbe
ja
jnp
arpl
pop
inc
fs
sti
stc
push
lods
cmp
jae
push
out
out
notb
jae
insl
inc
arpl
or
out
pop
add
jno
mov
inc
push
imul
add
inc
inc
or
add
push
jne
data16
lcall
sub
push
jo
mov
jge
cltd
dec
or
inc
rol
mov
dec
sti
xor
cmp
inc
js
outsl
jbe
insl
mov
inc
push
lahf
imul
jbe
push
dec
dec
outsb
mov
aaa
jg
sub
sbb
je
sbb
dec
outsl
cmp
or
jns
in
push
xchg
loopne
add
sbb
push
dec
adc
inc
lock
jne
insb
int3
int3
push
push
outsb
in
jp
xor
ds
inc
insb
jle
xchg
push
sub
or
adc
in
outsb
insb
xor
fsubrs
inc
fcoms
imul
mov
scas
cmp
push
push
inc
dec
inc
inc
dec
push
dec
pop
push
mov
and
push
push
insl
mov
pop
dec
mov
sbb
addr16
jo
lds
test
ja
inc
xchg
and
inc
dec
outsl
inc
call
mov
pop
inc
arpl
cmp
inc
xor
lcall
dec
arpl
mov
pop
popa
addr16
inc
inc
inc
inc
jmp
and
jg
xchg
inc
inc
jbe
xor
add
ret
xor
push
test
scas
and
insb
jo
outsl
push
gs
sbb
push
dec
imul
and
lods
pop
outsb
daa
out
test
mov
insl
add
imul
mov
in
mov
mov
mov
ja
pop
fs
inc
js
testl
je
and
push
push
outsl
imul
add
stos
clc
sub
lcall
cmp
insl
sub
cmp
mov
mov
mov
outsb
cld
pop
cltd
vmulss
mov
or
push
jne
lods
scas
lods
xorb
or
and
int
add
cs
mov
js
insb
inc
push
mov
cmpsl
xor
insb
orl
add
mov
sbb
scas
sahf
jp
sub
arpl
sbb
xchg
dec
test
cmp
push
jo
mov
mov
dec
or
push
into
gs
mov
pusha
adc
insb
lock
lods
arpl
addr16
cmp
dec
and
pusha
cwtl
stos
es
outsl
bound
cmp
xor
mov
mov
and
mov
add
test
xor
jno
outsl
sti
ret
imul
gs
ret
mov
pop
and
jb
je
sub
test
inc
mov
jp
cmp
inc
mov
pop
inc
pop
shll
lds
lret
in
imul
faddl
int3
rcrl
ret
xor
dec
fs
pop
addr16
sbbb
push
inc
and
lcall
cmp
repz
inc
jo
imull
jo
dec
inc
dec
cmpsb
and
and
or
push
js
inc
jb
jb
out
and
push
and
ljmp
je
jns
loopne
in
or
pusha
fbstp
xor
in
add
mov
inc
aas
pop
fstl
testb
xor
movl
push
cmp
add
insl
aam
xchg
push
or
and
sbb
or
dec
test
inc
xor
leave
jae
xor
addr16
pop
dec
inc
pop
dec
das
fildl
jae
mov
cmpsb
or
enter
inc
dec
add
push
sbb
incb
inc
outsl
js
lds
dec
add
enter
lcall
sidtl
add
popf
lock
or
add
subl
adc
mov
pop
xor
pop
int3
mov
fadds
add
xor
push
push
add
aaa
cmp
rcr
adc
xor
pop
movsl
jbe
mov
mov
dec
or
dec
push
lea
sahf
or
jg,pn
iret
leave
subb
gs
pusha
adc
imul
push
sahf
xchg
adc
inc
jnp
cmp
jo,pn
in
mov
adc
push
mov
sbb
dec
mov
push
repnz
test
iret
xchg
push
rcrb
or
sbb
in
mov
sub
incl
add
add
add
add
inc
add
call
or
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
mov
mov
xchg
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
