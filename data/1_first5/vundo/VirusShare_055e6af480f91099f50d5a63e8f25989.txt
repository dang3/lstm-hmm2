inc
mov
mov
xor
mov
mov
jmp
push
push
jmp
and
sub
mov
mov
xor
mov
push
push
or
mov
mov
xor
jmp
mov
movl
mov
jmp
add
add
push
ror
dec
rol
dec
mov
jmp
and
dec
inc
xor
mov
sub
test
jne
push
jmp
push
call
push
call
subl
jmp
lea
je
push
push
xor
add
mov
jmp
add
inc
mov
sub
mov
mov
mov
jmp
add
cmpl
je
push
push
jmp
mov
movb
movb
jmp
push
jmp
push
jmp
subl
call
mov
add
sub
mov
movzwl
movzwl
add
rol
shr
sub
xor
dec
mov
lea
jmp
mov
dec
ror
or
or
mov
push
mov
mov
movl
movl
jmp
mov
lea
push
jmp
je
jmp
lea
add
inc
mov
and
mov
sub
cmpw
jne
jmp
sub
and
and
ror
sub
mov
add
add
xor
cmp
mov
mov
jle
jmp
mov
add
xor
mov
mov
sub
xor
or
sub
mov
mov
add
mov
add
ror
and
shr
sub
mov
or
shl
sub
add
mov
jmp
jmp
lea
nop
movzwl
sub
sub
dec
or
add
mov
and
cmp
jmp
lea
sub
add
and
mov
add
push
call
jmp
lea
lea
cltd
and
add
sar
test
jle
jmp
add
add
add
cwtl
std
call
mov
mov
mov
add
add
mov
jmp
mov
movb
mov
movb
mov
jmp
call
add
pusha
mov
call
popa
jmp
mov
ret
add
add
add
fiadds
add
adc
add
rorb
add
add
add
xchg
add
add
jl
adc
pop
mov
rep
movzwl
jmp
add
add
add
push
shl
or
mov
sub
mov
push
push
jmp
push
jmp
int3
push
addl
push
jmp
leave
inc
leave
call
subl
call
test
je
add
jmp
push
mov
mov
jmp
call
sub
xor
and
mov
jmp
push
nop
jmp
pushl
jmp
test
jmp
dec
clc
outsl
xor
and
add
mov
mov
xor
and
cmp
sete
mov
ret
add
add
add
leave
sub
jmp
mov
or
mov
add
mov
lea
mov
or
xor
add
add
mov
shr
jmp
test
jne
add
mov
movzbl
add
mov
lea
mov
xor
and
inc
mov
shr
jmp
add
mov
test
je
push
push
mov
add
mov
sub
cmpl
jmp
mov
jmp
ret
mov
and
jmp
jne
cmpb
jne
nop
nop
dec
mov
mov
nop
jmp
and
lea
or
or
or
ror
mov
jmp
add
xor
jmp
add
push
ror
or
mov
test
je
jmp
mov
add
add
push
jmp
sub
shr
test
jmp
push
jmp
push
nop
push
jmp
pop
xorl
pushl
call
pushl
ret
and
or
and
mov
and
ror
inc
shr
mov
mov
shr
jmp
movb
jmp
add
add
add
int
lds
push
push
add
sub
mov
test
push
mov
jmp
movb
call
cmp
push
jae
call
jmp
add
and
mov
ror
or
xor
shl
rol
mov
test
jle
sub
sub
mov
sub
jmp
and
add
test
je
sub
mov
sub
jmp
xor
mov
dec
xor
mov
add
jmp
call
test
jmp
add
push
and
inc
sub
ror
mov
sub
mov
push
jmp
push
lea
and
sub
mov
mov
jmp
lea
jle
shr
or
xor
shl
mov
jmp
movb
mov
mov
jmp
jne
and
add
add
add
jmp
push
jmp
inc
push
int3
ret
push
int3
addl
push
jmp
push
pop
leave
push
call
leave
call
int3
pop
xorl
call
push
jmp
call
int3
int3
call
inc
ret
subl
call
lea
push
lea
push
jmp
sub
sub
mov
jne
sub
sub
jmp
add
add
add
add
push
cld
incl
jmp
push
jmp
sub
test
jne
xor
and
add
mov
movzbl
jmp
mov
mov
mov
mov
xor
mov
sub
jmp
sub
test
mov
mov
mov
movl
jle
add
jmp
jmp
sub
and
rol
shr
mov
mov
add
jne
add
ret
jmp
test
jmp
add
lods
clc
call
cmpl
jmp
call
ret
add
add
add
lea
and
dec
mov
or
xor
mov
shr
jmp
push
jmp
or
and
shr
mov
cmp
jmp
add
add
add
jmp
call
nop
int3
jmp
inc
push
dec
addl
jmp
push
push
jmp
call
call
call
jmp
inc
push
subl
push
jmp
call
jmp
push
call
call
addl
push
jmp
add
add
add
les
pop
add
add
mov
call
jmp
mov
jmp
movl
mov
jne
xor
ret
jmp
cmpw
jmp
add
and
inc
or
mov
jmp
lods
jl
add
add
add
add
add
add
test
stc
incl
dec
add
cmp
jne
pop
pop
jmp
je
rol
mov
inc
shr
and
mov
jmp
and
and
rol
mov
jmp
testl
mov
movb
movb
movb
call
test
je
cmp
jmp
lahf
add
test
cld
incl
mov
jle
rol
inc
sub
shr
mov
mov
or
or
mov
jmp
test
jne
add
ret
and
or
mov
dec
add
xor
or
add
mov
test
jne
add
jmp
jne
addl
pop
add
ret
subl
pop
add
ret
add
add
add
test
add
add
cmp
je
xor
ret
and
mov
pop
ret
add
add
add
test
jne
mov
mov
pop
ret
add
add
add
and
test
add
jmp
adc
xor
test
je
movsbl
rol
jmp
add
sub
add
cmp
mov
jmp
test
ficompl
add
add
pop
ret
pop
mov
pop
ret
mov
jmp
movzbl
add
dec
mov
or
and
mov
mov
jmp
mov
jl
dec
sub
shr
and
mov
mov
jmp
jne
and
or
ror
add
add
mov
mov
jmp
add
add
sub
jne
test
mov
jle
dec
mov
lea
jmp
ret
sub
inc
add
mov
push
jmp
call
call
xorl
call
mov
add
rol
mov
add
inc
mov
jmp
in
sahf
lea
push
push
jmp
call
inc
xorl
push
push
call
push
jmp
call
leave
call
ret
dec
pop
nop
call
int3
push
addl
jmp
mov
xor
mov
shr
and
add
test
mov
je
jmp
mov
test
jne
cmp
je
add
jmp
mov
push
mov
push
add
or
add
or
mov
call
add
jmp
sub
inc
and
mov
mov
mov
lea
xor
sub
mov
add
test
je
jns
movzwl
push
jmp
add
and
ror
mov
ror
mov
jmp
in
cmp
xor
add
mov
lea
push
jmp
pop
or
mov
xor
jmp
mov
call
push
jmp
pop
subl
mov
call
push
jmp
dec
inc
xorl
mov
call
push
jmp
pop
push
addl
jmp
xor
dec
mov
sub
jmp
and
jl
pop
xor
pop
rol
mov
and
mov
pop
ret
jmp
stc
enter
loopne
call
push
jmp
push
nop
ret
nop
call
call
dec
addl
push
jmp
inc
push
leave
pop
push
call
ret
subl
push
call
rol
inc
inc
mov
jmp
sub
imul
add
movzbl
add
jmp
std
jne
shr
dec
or
xor
shl
mov
movzwl
ror
sub
mov
mov
jmp
shll
idiv
jmp
ret
mov
call
jmp
sti
sub
push
call
add
mov
and
shr
mov
add
test
jmp
inc
pop
fwait
add
sub
jne
pop
pop
pop
shr
mov
pop
ret
add
add
add
jmp
lret
je
je
sbb
dec
shll
jg
add
pop
shl
mov
pop
ret
add
add
add
inc
cld
add
add
lea
call
jmp
lods
adc
incl
adc
jne
pop
pop
pop
jmp
sbb
incl
into
jno
lea
add
mov
jmp
mov
jmp
and
add
pop
ret
add
add
add
call
push
jmp
call
int3
leave
call
push
push
call
nop
xorl
push
jmp
jmp
push
inc
call
push
xorl
push
jmp
jmp
call
pop
push
xorl
jmp
sbb
and
jmp
and
and
or
xor
mov
mov
sub
or
mov
mov
mov
mov
mov
cmp
jmp
aas
ja
call
test
jmp
dec
cwtl
or
rolb
add
add
inc
inc
and
add
add
inc
add
xor
mov
mov
sub
jmp
into
ficoml
test
pop
sub
fldpi
inc
or
add
test
add
add
ret
pop
pop
mov
pop
jmp
push
xchg
cwtl
test
jne
movzbl
add
lea
dec
inc
add
mov
ror
mov
jmp
mov
xchg
popa
add
mov
pop
mov
pop
or
and
or
mov
pop
ret
add
add
add
in
add
mov
pop
ret
add
add
add
call
add
subl
lea
jne
test
mov
je
jmp
mov
xchg
rorl
rol
add
mov
jmp
ja
mov
mov
add
jmp
movb
add
jmp
movzbl
jmp
jp
jo
mov
clc
and
add
jmp
insl
mov
add
shr
mov
mov
je
test
jmp
incl
je
add
mov
sub
add
sub
mov
jmp
dec
mov
jne
shl
xor
xor
mov
mov
mov
movl
jmp
movl
mov
jmp
jo
jne
inc
and
add
add
jmp
lea
call
jmp
jle
sub
add
test
add
cmp
jne
call
test
mov
je
and
dec
or
sub
mov
jmp
int
cltd
sub
add
sub
mov
mov
jne
mov
jmp
sub
jmp
dec
xchg
dec
jmp
sub
or
xor
or
mov
movzbl
shl
jmp
xor
roll
jl
sbb
pop
and
ror
dec
mov
mov
jmp
push
mov
incl
add
orb
add
jmp
in
movl
jb
add
cmp
jae
jmp
push
jne
add
test
mov
je
lea
and
mov
sub
mov
mov
jmp
outsl
call
jmp
das
es
decl
je
adc
pop
and
xor
shr
mov
or
xor
xor
and
add
mov
shr
mov
add
add
mov
jmp
adc
mov
inc
and
add
add
jmp
mov
mov
add
add
mov
jmp
xchg
lahf
movl
mov
cmpl
je
pop
or
inc
xor
mov
sub
jmp
mov
lcall
ret
push
popa
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
push
popa
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
add
add
add
inc
insb
outsl
jae
inc
jb
jbe
jb
or
dec
jo
outsb
inc
jb
jbe
jb
add
add
push
popa
je
push
outsb
popa
insl
gs
js
outsb
jae
outsl
outsb
inc
add
imul
push
gs
outsl
jbe
inc
jb
jae
add
add
je
inc
imul
inc
outsl
insl
jo
outsb
outsb
je
add
push
add
gs
je
inc
imul
js
je
jb
arpl
jae
mov
je
push
add
filds
inc
gs
imul
je
adc
add
add
add
add
xor
add
add
add
jno
rorl
add
add
add
mov
add
add
jp
xorb
xor
cmp
fstpt
add
push
aaa
dec
cmp
xor
xor
test
xor
xor
cmp
push
aas
xor
inc
cmp
nop
cmp
cmp
cmp
cmp
cmp
sub
jp
cmp
jge
inc
ss
jle
xorl
add
add
shlb
xor
xor
xor
lock
add
add
add
sub
mov
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
cwtl
inc
mov
sub
das
jae
push
jle
sbb
add
inc
and
sub
mov
push
fdivrl
xchg
xor
movsb
nop
aad
push
cld
xorb
pop
imul
and
jge
ljmp
mov
cli
mov
jne
fcoml
pop
inc
pop
andl
add
lods
sbb
imull
mov
push
mov
pop
or
pop
fsubr
ja
jmp
imul
or
filds
mov
aad
movsb
mov
sub
adc
aam
adc
sbb
pusha
lret
pop
das
inc
push
sub
test
int3
or
dec
addb
aad
mov
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
mov
sub
push
add
nop
or
push
sbb
aaa
ds
push
jb
repnz
int3
or
jp
in
push
xchg
adc
push
add
mov
cmp
fistpll
pop
inc
fnstsw
cmpsb
popa
sbb
js
dec
ja
sbb
push
push
inc
les
pavgw
add
pushl
mov
mov
and
add
std
lea
imul
mov
aas
clc
repnz
lods
rol
add
testb
mov
dec
xor
into
std
lret
out
gs
les
fisubrs
ss
mov
test
ss
insb
fidivrl
add
pushl
xchg
loopne
jae
dec
scas
pop
mov
and
out
sub
inc
hlt
das
imul
arpl
pop
sar
lea
enter
int
int3
mov
push
cltd
add
div
mov
fucompp
fsubrs
xorl
mov
ljmp
shrl
cmp
jne
into
out
pop
push
mov
sub
mov
sahf
push
stos
pop
push
pop
and
push
mov
xor
ljmp
fnstcw
push
dec
adc
aaa
out
push
shl
in
call
lock
icebp
pop
sub
adc
int
mov
jo
add
mov
adc
loope
out
fdivl
test
loopne
addr16
sbb
inc
fidivl
or
popa
xor
ja
lcall
loope
stc
add
mov
xchg
ret
jns
jo
cmpb
