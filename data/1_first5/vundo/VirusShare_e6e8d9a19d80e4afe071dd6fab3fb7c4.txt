divl
cltd
cmp
loope
push
jnp
leave
in
mov
xchg
sarb
adc
xor
lds
clc
pop
cmp
scas
xchg
adc
pop
mov
mov
cwtl
xor
jecxz
cmpsl
dec
test
gs
inc
movsb
sub
rclb
inc
ds
lods
dec
push
iret
mov
movb
jnp
popa
mov
enter
pop
repnz
out
add
fcoms
std
popa
jmp
in
adc
mov
outsl
int
fcompl
and
js
xorl
sub
pop
stos
movsb
loop
popa
and
sahf
ja
pop
xchg
call
je
mov
push
cmc
sub
int3
ret
leave
mov
mov
push
popl
aaa
or
fcomp
adc
jne
add
pop
inc
int
mov
cmp
xor
pop
and
cmpsl
jg
jg
mov
insl
sbb
jae
ja
xchg
decl
call
aad
repnz
les
das
mov
sbb
pop
mov
pop
pop
negl
hlt
cmp
pop
adc
mov
push
add
xor
aad
adc
sbb
inc
clc
add
aad
mov
sub
fs
jae
push
add
ror
loop
repz
or
mov
int
rorb
jae
xlat
xor
sbb
jmp
sub
or
pop
xor
cmc
mov
aaa
fs
dec
sbb
push
out
imull
sub
mov
push
xor
int3
inc
js
pop
out
ret
mov
pusha
in
cmp
xchg
pop
stos
outsb
jmp
dec
insb
lret
xchg
xor
mov
push
ficoml
aaa
scas
shr
stc
xchg
out
out
repnz
push
sbb
and
mov
cli
push
cwtl
or
in
mov
out
mov
push
cli
or
in
pop
sub
cwtl
add
gs
xlat
mov
clc
pop
jns
or
dec
daa
pop
mov
fdiv
xor
out
sbb
aam
jnp
outsb
or
or
dec
les
in
int3
roll
shlb
cmc
out
dec
lahf
fdivrl
cs
fsub
adc
adc
mov
fildll
dec
imull
das
xor
jns
ret
dec
loopne
ret
lahf
shlb
orl
pop
mov
pop
es
cmp
xor
shll
popa
mov
bound
fistl
outsl
push
push
push
aad
test
mov
lea
pop
inc
mov
jnp
pop
lock
cld
sbb
mov
out
inc
jecxz
or
mov
stos
or
lret
mov
ja
insl
adc
sub
xor
ret
pop
inc
sub
sbb
cmp
cmpsb
or
sti
push
inc
jmp
sbb
outsb
push
ret
cmp
pop
testb
outsb
jmp
dec
insb
lret
add
push
jae
mov
out
lcall
cmp
push
adc
insl
xchg
out
push
out
push
sbb
loopne
sub
xor
xor
popa
push
mov
fcoms
pop
jg
xor
lock
shlb
in
xlat
inc
adc
data16
fdivr
cltd
pusha
sub
or
das
enter
mov
mov
mov
sbb
icebp
xor
test
xchg
shlb
fs
clc
xor
fidivs
test
cmpsl
lds
scas
sub
mov
ficoms
ja
outsb
and
lock
sbb
xor
dec
out
outsl
addr16
xchg
and
fldcw
std
aas
mov
rorl
push
add
push
stos
movsb
test
pop
scas
mov
mov
stos
or
mov
mov
mov
xchg
mov
push
mov
adc
xchg
inc
sub
dec
les
fwait
xchg
popa
sbb
popa
mov
add
add
or
addr16
nop
nop
movsb
inc
ds
jp
mov
mov
mov
test
sbb
add
jno
and
out
sub
or
or
insb
add
ret
cmp
pop
xchg
adc
xor
push
mov
xor
inc
ja
repnz
into
fwait
incb
xor
outsb
mov
push
or
shll
test
pop
das
cmp
cmp
and
divl
adcb
jle
and
jg
xor
add
xchg
xor
mov
test
pop
cmp
fmul
fildl
mov
es
cmpsb
mov
mov
addr16
cmp
mov
pop
mov
sbb
jae
mov
repnz
inc
xchg
das
or
das
pop
push
jg
sub
lods
scas
fs
out
sarl
filds
enter
ret
icebp
jmp
push
cmc
ret
sub
adc
xchg
insb
mov
sub
scas
insl
push
lods
pop
mov
pop
pop
das
pop
sub
or
jmp
outsl
jmp
or
je
in
ds
js
call
out
lahf
jae
sbb
cmpsb
loope
stos
mov
xchg
cmp
shr
pop
or
dec
in
inc
idivl
pop
sub
int
ja
lods
inc
xchg
js
les
or
pop
nop
addr16
adc
popa
lret
daa
test
pop
scas
xchg
pop
xchg
or
lret
xor
xor
mov
nop
fwait
pushf
pop
ret
icebp
jne
stc
mov
jmp
dec
fwait
lea
cld
mov
or
mov
jmp
inc
adc
pop
lods
test
notl
jbe
inc
lock
mov
and
js
mov
imul
xchg
sbb
push
sub
xor
and
movsb
or
pop
int
mov
dec
cltd
jge
and
cli
mov
enter
adc
cmpb
insb
xor
sub
cmpsb
das
or
sahf
enter
shll
cwtl
xor
add
sbb
popa
mov
push
lret
fwait
fwait
loopne
rclb
push
js
pop
mov
lods
sub
repnz
dec
inc
and
mov
les
or
dec
inc
dec
loop
insl
pop
jmp
leave
push
data16
sahf
jnp
js
cmp
sub
jecxz
pop
shlb
int
popa
cmp
push
inc
push
fs
xor
lret
out
les
sub
push
subb
addr16
pop
mov
add
mov
pop
sarl
pop
icebp
push
lods
fnstcw
mov
cwtl
cmp
daa
inc
push
test
dec
jns
lods
stc
push
dec
movsb
ss
mov
jo
jne
outsb
into
mov
outsl
mov
mov
test
xor
test
cmp
mov
scas
cmpsb
cmpsl
ljmp
into
pop
jbe
mov
movsb
dec
inc
xchg
mov
or
lea
pusha
push
jbe
jle
insl
cld
mov
pop
cmp
mov
push
push
data16
dec
movsb
xchg
push
push
dec
sti
dec
push
jb
cmpsl
sub
push
push
out
mov
push
cld
add
sahf
lret
orl
or
inc
mov
and
add
fists
out
je
sahf
mov
fldcw
pop
inc
rcl
arpl
ret
or
es
and
notl
mov
leave
out
fimull
out
or
inc
lcall
sub
mov
xor
test
popf
aam
int
es
jns
adc
cwtl
xor
push
mov
imul
int
sub
jnp
scas
mov
mov
and
ljmp
or
in
pop
outsl
shrb
call
xlat
cmc
xor
int3
mov
popf
cmpsb
lcall
fisttpl
stc
cld
adc
jl
iret
jl
cmp
stos
xlat
fimull
mov
addr16
pop
mov
add
mov
mov
mov
cmpsl
jge
mov
jae
std
lock
mov
iret
inc
ja
sub
pushf
inc
mov
stc
xlat
test
xor
popf
pop
iret
icebp
mov
xchg
pop
insl
in
push
xchg
jb
movsl
pop
repz
inc
leave
push
add
leave
fists
icebp
pop
imull
push
cmp
rclb
push
repnz
outsl
cmp
nop
add
cmp
adc
jns
mov
xor
int3
in
mov
cmp
sub
scas
scas
jnp
sub
sub
push
in
insb
rcrb
mov
das
outsb
add
addb
dec
sub
push
mov
xchg
movsb
test
adc
loop
or
sbb
popa
or
jmp
test
movsl
loop
jl
int3
cwtl
movsl
pop
testl
outsl
jae
jecxz
adc
xchg
sti
sbb
mov
add
gs
mov
cmpsl
inc
jg
aaa
push
js
outsb
dec
test
mov
mov
xor
jns
mov
clc
pusha
and
and
jl
mov
jmp
ret
sub
rcrl
cwtl
shlb
push
xor
test
out
pop
pop
cld
ret
jge
mov
mov
dec
idivl
cltd
inc
popa
push
into
aas
adcl
xchg
xchg
rorl
out
loop
jl
jo
dec
clc
mov
cmp
lods
insb
or
lods
sti
sbb
push
repz
jg
or
test
mov
xchg
lock
mov
into
cmp
adc
inc
aad
test
insb
push
jge
jecxz
leave
push
pop
xor
sub
inc
push
dec
cmp
sti
pop
bound
movsb
mov
shll
cmp
insb
mov
rcll
pop
mov
jno
dec
dec
fwait
roll
jp
sahf
popf
aad
jge
repz
or
call
movsl
cmp
inc
or
cmpsb
mov
fstpt
mov
mov
mov
test
sub
stos
test
xchg
dec
adc
add
jo
ret
mov
repnz
xor
jmp
inc
pusha
addl
pop
cwtl
out
push
test
sbb
inc
sub
push
inc
mov
or
add
adc
outsb
adc
sarb
cwtl
enter
add
mov
mov
in
das
outsl
shrb
call
xchg
push
xchg
mov
pop
mov
cli
lret
mov
lods
push
add
add
stos
inc
lods
divl
inc
jecxz
or
inc
aas
and
xchg
negl
cmp
mov
test
test
xchg
and
push
sub
scas
xorb
mov
and
sbb
cmc
dec
insl
mov
add
adc
pop
adc
aad
imul
ljmp
cld
shlb
mov
mov
fwait
mov
xlat
jmp
dec
and
insb
fs
int
pop
inc
push
clc
jns
adc
sbb
jno
aas
mov
mov
cs
lods
mov
dec
cwtl
dec
inc
xchg
cmpsb
xor
loopne
cmp
pop
inc
xchg
loopne,pn
xorl
lret
push
jnp
rorb
insl
mov
and
mov
inc
or
push
loope
mov
push
mov
decb
cmp
jmp
test
cmp
add
sbb
push
cwtl
cmp
lcall
ljmp
pusha
inc
sub
dec
js
pop
mov
jmp
or
lock
push
jb
jmp
push
cli
das
mov
cmp
aad
decb
cmpsb
andl
outsl
pop
mov
add
dec
mov
ds
int3
cwtl
or
push
xor
xchg
push
dec
das
sub
mov
fdiv
aaa
dec
or
xor
popf
cmp
aad
fnclex
sbb
pop
mov
testb
ret
and
mov
mov
dec
mov
es
fwait
lock
lcall
adc
fwait
mov
leave
arpl
stc
dec
cmp
movsb
xchg
scas
mov
cwtl
lret
lret
leave
int
rol
arpl
negl
cmp
mov
test
test
xchg
and
push
sub
scas
xor
addr16
add
push
cmp
roll
les
or
test
push
dec
cmpsl
jns
add
out
lahf
arpl
ret
cmp
fmul
mov
popa
xchg
sti
inc
test
test
ljmp
jg
inc
mov
leave
js
sbb
xchg
pop
jge
xchg
sahf
cmp
xchg
int3
aas
cwtl
xchg
cld
add
inc
test
or
out
sub
stos
test
cmpsl
dec
pop
add
adc
stos
dec
xor
jg
ljmp
icebp
adc
dec
push
adc
pusha
outsb
std
lock
pusha
mov
out
adc
sub
xchg
pop
rolb
and
insb
add
outsb
inc
test
mov
in
jl
lods
pop
inc
dec
fstpt
cmp
lret
xchg
in
mov
mov
xor
mov
cmp
mov
rorl
loopne
dec
int
addl
sub
dec
mov
shlb
fcmove
mov
sub
lods
xor
fldcw
or
insl
dec
adc
insb
fldt
xchg
fwait
lock
sti
stos
xchg
or
xor
loope
rorb
push
clc
imul
mov
lcall
test
pusha
sub
ljmp
repz
fisubrl
cmp
test
pop
sbb
jns
dec
stc
xor
cmp
mov
js
jecxz
mov
daa
xchg
orl
lret
mov
fs
arpl
loope
rcrb
ljmp
test
jne
test
fldt
stos
aaa
shlb
les
rep
cli
leave
mov
and
ret
xchg
dec
int
dec
daa
rcr
addr16
sub
out
sub
mov
pop
in
cwtl
bound
mov
bound
jmp
pushf
je
dec
sbb
mov
push
add
push
xchg
xor
mov
push
pop
inc
push
pop
inc
push
cs
mov
aaa
fnstcw
loop
test
pop
les
push
cs
xor
and
mov
pop
pushf
xorb
scas
sbb
adc
popa
ret
cld
addr16
les
xor
int3
or
fcoml
test
adc
ret
mov
sti
sub
or
aad
test
mov
int
lret
sub
push
sbb
fdivl
ret
pop
das
pop
mov
sub
cmpl
in
clc
out
cmc
xor
pushf
insb
add
das
pop
fs
out
inc
jecxz
or
and
jp
fistpll
xchg
cmpsl
inc
fistpl
ja
or
daa
sub
cmp
in
cltd
orb
pop
mov
inc
xchg
invd
fldcw
test
inc
data16
add
mov
adc
jno
mov
shll
push
mov
outsl
int
jp
pop
inc
lds
xchg
add
cmp
cmp
call
or
jmp
scas
loopne
les
mov
gs
sub
call
dec
int3
dec
jmp
xchg
push
or
jmp
call
aam
sbb
arpl
ret
cmpsl
ffreep
cmp
mov
xchg
sti
jle
jo
jl
addr16
gs
addr16
ret
gs
push
push
mov
das
outsb
ret
mov
pop
add
sub
mov
xchg
movsb
test
adc
inc
fcmovb
lods
and
repz
test
sti
icebp
fidivrl
adc
sub
xchg
pop
rolb
and
insb
add
outsb
inc
imulb
cltd
dec
sbb
jecxz
and
sbb
lret
outsl
arpl
fists
loopne
xchg
inc
ljmp
jecxz
outsl
inc
mov
xor
sbb
lock
imul
fadds
pushf
roll
jbe
int3
cwtl
in
push
repnz
test
ret
repz
xchg
adc
mov
sbb
outsl
dec
jp
daa
sbb
js
call
or
xor
adc
push
int
pop
pop
mov
outsb
rcr
idivb
fbld
xchg
ret
xor
cmc
mov
aaa
fs
dec
mov
adc
ret
cmc
pop
mov
out
aam
rclb
pop
test
mov
cmp
or
notb
jb
leave
sbb
ficoms
mov
mov
sbb
jae
pusha
in
cmp
pop
jnp
nop
aaa
je
mov
adc
out
out
cmpsl
push
lock
ficoml
mov
jae
jbe
repz
fldl
nop
cld
sub
testl
push
dec
mov
cmpsb
repz
and
mov
inc
je
mov
popa
clc
js
jmp
add
xchg
mov
cmp
outsb
jle
mov
xchg
or
cli
mov
xor
rorb
xchg
aas
dec
stc
roll
int
and
in
retw
aas
outsb
mov
les
mov
cs
lock
das
jo
aaa
push
orb
or
ret
mov
sbbb
orl
fists
out
je
sahf
mov
fldcw
pop
inc
rcl
nop
or
sbb
cld
sub
inc
xlat
mov
mov
mov
sub
xchg
pop
fcoms
lods
cltd
out
cs
sbb
inc
clc
add
aad
js
cmp
mov
dec
cmp
inc
mov
xchg
in
ds
outsb
xor
jae
add
xor
add
fsubrp
ficoml
popa
mov
sub
cmp
mov
adc
sbb
dec
lcall
adc
jmp
cld
shl
inc
sbb
clc
imul
in
enter
notb
jb
leave
ret
or
mov
or
test
mov
mov
in
and
hlt
mov
test
mov
cld
shlb
cld
push
loop
std
mov
aad
call
repz
sbbl
insb
fs
int
pop
inc
push
clc
jns
outsl
daa
push
mov
add
push
pop
xor
pop
pop
dec
inc
mul
jbe
std
insb
add
das
pop
push
jns
orl
pop
arpl
xchg
add
inc
movsb
mov
push
pop
aad
pop
imul
xchg
push
dec
mov
pusha
bound
xchg
hlt
jecxz
mov
or
inc
dec
or
aas
stos
mov
xor
rcr
roll
int
add
int3
cwtl
xor
mov
data16
sahf
cmpsl
shll
add
mov
xor
leave
xchg
loope
aas
out
mov
pop
arpl
dec
or
xor
and
dec
inc
jmp
outsb
ds
xor
call
adc
mov
js
jecxz
sub
leave
sbb
inc
test
outsb
xorb
or
xor
mov
pop
das
sub
sarl
pop
icebp
push
lods
sub
jae,pt
push
rcl
inc
roll
rol
add
leave
jb
jnp
pop
dec
jge
test
sub
int3
mov
xchg
cmp
add
jmp
in
icebp
xchg
add
into
out
xchg
in
rolb
enter
pop
scas
insb
mov
andl
push
sub
cmp
repz
mov
add
dec
dec
xchg
fldl
cmc
loop
and
sbb
fidivl
addr16
pop
sub
add
cld
and
dec
xchg
cs
sbb
xor
adc
push
mov
imul
cmp
sub
cmp
push
xchg
jbe
cmp
sub
cld
enter
es
in
mov
push
cs
xor
and
cmpsb
push
mov
imul
int3
jecxz
int3
fistps
call
shrl
mov
incl
fucom
adc
test
sar
idivb
push
mov
jl
stc
mov
push
je
sub
and
and
call
sarl
test
mov
fidivrl
adc
movsb
dec
inc
lret
stos
pop
shrl
mov
push
cmp
test
pop
push
rcl
rcrl
xchg
xchg
mov
sub
add
psubusb
repz
pop
enter
push
adc
mov
insb
add
das
pop
xchg
sbb
push
out
and
xchg
mov
fsubl
lahf
arpl
sub
stc
in
les
es
sbb
iret
outsl
call
cmpsl
in
inc
or
pop
pop
add
pop
mov
push
push
sbb
and
fildll
popf
cld
add
stos
mov
pop
xor
fwait
and
mov
xor
xorl
pop
mov
mov
jae
ja
xchg
lods
mov
mov
notl
push
add
gs
add
gs
mov
sahf
rorl
adc
adc
aam
sbb
pop
mov
std
aas
mov
rorl
push
add
mov
dec
dec
xchg
sub
hlt
es
into
inc
dec
movsl
int
jge
int3
cwtl
jae
push
add
dec
movsb
fsts
fwait
aad
mov
lock
mov
mov
bound
dec
add
dec
inc
call
push
xchg
ret
stos
out
jnp
or
test
into
fimuls
adc
repnz
pop
sub
mov
insl
movsb
sbb
add
loop
ret
aas
out
into
outsb
lock
push
mov
call
iret
xlat
in
xchg
fmull
out
sbb
sti
rorb
and
and
xor
mov
fcoml
push
arpl
mov
cs
sbb
outsl
daa
add
or
icebp
enter
dec
inc
std
and
jl
pop
outsb
pop
and
cmpsl
jg
jg
jb
mov
cwtl
out
clc
rorl
xlat
pushf
clc
test
sbb
mov
in
fisttps
push
jne
xchg
or
jmp
mov
into
ficompl
xchg
xor
and
pop
test
bnd
mov
lcall
sar
sub
jge
hlt
gs
inc
add
mov
js
mov
dec
cld
or
mov
movsb
push
or
sahf
push
jns
dec
jl
aam
ret
loop
xlat
divl
add
gs
mov
gs
shlb
cmp
test
sub
inc
cmpb
inc
sahf
popf
xchg
enter
das
in
cmp
sti
leave
add
lods
inc
shrb
mov
aad
lods
ja
add
jns
arpl
push
daa
jg
pop
mov
sbb
aas
sbb
enter
mov
cld
jge
rcl
inc
pop
inc
and
test
sub
mov
stos
cmp
std
into
addr16
push
mov
inc
dec
pop
mov
test
sbb
mov
rcrb
in
fistpl
lret
rclb
pop
jnp
jnp
sti
fwait
mov
jge
icebp
enter
xor
fdivp
sbb
jne
fistpl
mov
cmp
mov
sub
ljmp
mov
adc
jae
mov
cs
lock
das
jo
pop
xchg
insl
or
loopne
xor
int
rcrb
inc
orl
fists
xor
mov
test
pop
rclb
push
js
pop
mov
mov
push
mov
fldenv
test
clc
rcr
data16
out
mov
jle
and
xchg
test
es
push
cwtl
cmp
popa
ret
loop
movsl
movsb
or
cmp
inc
cmp
mov
imul
adc
push
mov
in
jl
lods
pop
inc
dec
fstpt
push
mov
xchg
out
dec
dec
push
mov
pop
xchg
xchg
iret
mov
add
sub
push
rcrb
das
mov
stc
adc
mov
mov
insb
fisubrl
and
and
call
and
jno
mov
icebp
jecxz
je
xor
and
in
xor
stos
int
push
pushw
jle
sbb
popa
xchg
xlat
pop
dec
outsb
mov
lret
fisttps
jne
ljmp
aaa
pushf
dec
cli
xor
pop
jo
xchg
imul
loop
mov
jae
jbe
inc
lock
mov
dec
dec
xchg
mov
xor
jnp
push
mov
add
jae
and
fstl
xor
scas
mov
add
push
test
xchg
repz
divb
int3
cwtl
xor
and
push
gs
subl
sub
aam
mov
mov
pinsrw
cmp
insb
mov
pop
lahf
inc
aas
outsb
mov
add
xchg
pushf
xor
popa
adc
js
mov
cmpsl
mov
in
cltd
scas
mov
daa
mov
ljmp
loopne
push
push
iret
lods
xlat
scas
and
les
shlb
ljmp
loope
sub
std
and
inc
imul
test
repz
xchg
int3
cwtl
fsubrs
adc
push
cwtl
cmp
lcall
push
jl
jecxz
and
dec
inc
or
inc
mov
repz
cmp
imulb
cltd
in
xor
mov
in
bound
adc
ljmp
cmp
cltd
fmull
mov
jae
jae
in
push
repnz
sahf
out
test
test
push
dec
les
les
lcall
sub
sbb
rolb
repz
jno
pop
add
bound
dec
mov
jno
stos
inc
lods
imull
out
jne
repnz
or
inc
aas
and
xchg
negl
cmp
mov
test
test
xchg
and
push
sub
scas
daa
dec
jg
mov
and
sbb
pop
inc
out
mov
repz
adc
fwait
xor
icebp
pop
dec
scas
stos
rcrl
xchg
imul
sub
cmp
dec
filds
xlat
imul
shll
enter
test
xchg
add
jnp
aam
movsl
jne
push
dec
and
rclb
mov
addr16
inc
cld
shr
popa
test
cmp
ret
sbb
incl
jle
jo
jl
addr16
gs
addr16
ret
gs
aam
push
mov
das
outsb
add
addb
fcoml
insl
sbb
in
xchg
movsb
test
adc
inc
fcmovb
mov
adc
pusha
bound
inc
cmp
jnp
ret
lcall
pop
dec
stc
fldt
sbb
popa
imul
sbb
sbb
xchg
pop
sti
mov
rcrl
xchg
fimuls
loope
push
iret
aad
test
dec
push
add
xchg
add
push
lcall
icebp
pop
gs
xlat
cmp
mov
sub
adc
jns
cmc
data16
adc
push
jmp
pop
cmp
daa
push
push
jl
dec
test
pushf
cmp
scas
fwait
roll
mov
dec
mov
cmp
shrb
clc
icebp
fs
bswap
mov
data16
outsl
loope
stc
push
call
test
xor
fsubrp
mov
jae
jecxz
dec
fwait
lea
cld
mov
dec
inc
adc
or
pop
das
pop
push
jns
jecxz
clc
inc
shlb
sub
xor
ret
pop
inc
sub
sbb
push
orl
sti
push
inc
jmp
sbb
mov
cmp
push
push
icebp
mov
aas
ljmp
stos
xchg
mov
pop
lds
mov
mov
xchg
cmp
add
sbb
pop
sbb
sub
js
jle
insl
aaa
ret
cwtl
imulb
outsl
pop
leave
fistpll
test
jne
test
repnz
add
ds
fwait
and
xor
jo
mov
inc
xchg
test
and
xor
clc
jns
outsl
daa
add
or
inc
sub
lds
push
and
adcl
jmp
and
sbb
insl
enter
mov
mov
data16
scas
insl
adc
call
test
mov
jl
int3
cwtl
cld
loopne
pop
fucom
mov
lock
and
arpl
dec
sbb
sbb
dec
rclb
adc
sub
fcom
sub
jg
push
daa
stos
mov
adc
push
add
hlt
mov
dec
or
xor
xor
xor
popa
int
jmp
jb
fwait
repz
scas
daa
cmp
inc
mov
xchg
jle
loop
mov
shlb
dec
sub
xor
stos
int
das
in
sub
and
pop
mov
loopne
bound
sbb
mov
jae
jbe
inc
lock
mov
and
js
mov
imul
xchg
sbb
push
out
and
xchg
pop
cmpsl
push
push
mov
jmp
mov
subl
inc
add
arpl
ret
cmpsl
ffreep
cmp
mov
xchg
sti
jle
jo
jl
addr16
gs
sbb
cltd
sbb
push
push
mov
das
outsb
add
sbb
popa
lahf
push
test
jbe
inc
mov
movsl
mov
jns
js
out
mov
xor
in
xor
in
xor
push
ret
mov
xchg
out
dec
inc
addl
popa
testl
dec
xchg
or
sbb
inc
int
es
push
lahf
std
ja
les
mov
mov
and
cltd
pop
mov
xchg
mov
test
xor
movsl
xchg
lret
je
pop
je
xchg
out
dec
pushf
rcrl
daa
sbb
xchg
push
xchg
mov
pop
mov
arpl
and
call
xchg
push
xchg
js
push
out
cmpsl
and
push
lea
and
push
and
and
call
or
das
mov
xchg
jle
popf
or
imulb
xchg
fisttpll
xlat
jo
int3
lock
imul
lock
out
ret
lock
jno
lds
adc
outsb
add
test
xor
dec
pop
mov
dec
add
sbbl
lret
orb
xchg
adc
iret
out
adc
xor
sub
mov
sahf
test
js
mov
imul
xchg
sbb
push
out
and
xchg
pop
cmpsl
push
push
in
decb
xchg
inc
sub
insl
dec
movb
test
cmp
shll
sbb
dec
adc
lds
xor
mov
or
in
adc
sbb
pop
aaa
push
lahf
insl
mov
shlb
in
xchg
movsb
test
or
inc
sbb
loope
dec
mov
pusha
bound
inc
cmp
jnp
ret
lcall
test
xlat
insb
add
outsb
loopne
addr16
push
in
jl
lods
pop
inc
dec
fstpt
je
add
pushf
xchg
mov
faddl
adc
push
je
sub
and
and
call
cs
test
mov
aas
sbb
mov
inc
dec
outsb
lock
jge
rcl
inc
pop
inc
mov
add
mov
adc
jno
xor
jl
dec
test
into
addr16
push
lock
push
xor
sbb
jne
push
add
lds
sub
vcompresspd
loopne
cmp
sub
cmp
lods
rolb
cmp
add
bound
fidivrs
pop
mov
push
push
push
sub
popa
jl
addr16
gs
ja
mov
js
int3
cwtl
xor
mov
or
shrl
outsl
pop
and
cmpsl
jg
jg
mov
lock
adc
dec
mov
popf
mov
xchg
sub
insb
mov
or
or
xor
pop
testl
cmp
lcall
pop
or
dec
jmp
mov
mov
push
mov
js
les
sbb
inc
sbb
in
cltd
cmp
jae
std
sub
mov
mov
fadd
push
adc
mov
or
fstpl
int
jno
lds
cmpl
outsl
loopne
or
pushf
inc
hlt
jle
xlat
cld
cli
fwait
jae
xor
stos
lcall
mov
cmp
cltd
mov
pop
shl
jl
bound
mov
arpl
mov
push
jbe
cmp
test
jge
js
mov
mov
jo
fimuls
ljmp
mov
mov
xor
add
xchg
or
sbbl
out
and
lock
sti
mov
insb
ljmp
pusha
sub
dec
ljmp
or
mov
and
lock
mov
push
lret
fwait
fwait
hlt
fstpt
je
shlb
ljmp
mov
aam
jnp
outsb
or
adc
and
enter
jmp
push
xor
dec
mov
test
inc
push
pop
sub
ljmp
sbb
mov
loopne
sub
movsb
cltd
push
xor
or
pop
sarb
adc
jns
mov
cmp
idivb
pop
les
sbb
aas
sbb
enter
jmp
mov
mov
cltd
fistpll
pushf
cmp
sub
push
or
rcl
or
enter
popa
sub
push
repnz
jecxz
pop
jmp
mov
xchg
fucom
lock
sti
faddl
call
sub
ss
add
inc
in
sbb
mov
je
sub
fdivl
mov
sti
cwtl
pop
jg
outsb
aaa
lret
scas
imul
ljmp
mov
sbb
hlt
iret
push
push
scas
fmul
mov
cli
scas
ficoml
inc
test
test
ljmp
mov
jo
mov
ficoml
lock
jbe
std
jmp
lahf
push
sbb
cs
daa
mov
fidivs
test
cmpsl
lds
scas
sub
mov
lahf
lock
and
and
lock
out
dec
xor
out
xor
notl
fcom
pop
scas
mov
xor
data16
mov
call
jp
push
cltd
dec
or
push
mov
outsl
sbb
xchg
pop
sti
push
jnp
xor
test
out
pop
sub
js
pop
adcb
sbb
in
pop
cmp
test
dec
div
mov
pop
pop
imul
mov
or
dec
cmc
xchg
push
xor
and
shrl
mov
mov
out
scas
push
and
add
xchg
out
sub
or
or
insb
add
sbb
or
dec
es
dec
mov
mov
mov
dec
mov
sbb
cmp
sub
outsb
nop
loopne
rolb
jno
arpl
sbb
bound
mov
in
push
xchg
psubusb
mov
sbb
ret
and
gs
jo
jns
dec
sbb
hlt
rorb
stos
add
cmp
insb
lods
mov
pop
mov
repz
push
sub
lds
sti
pop
cli
out
ljmpw
das
pop
fdivs
mov
jno
lds
push
xchg
fistps
cs
pop
in
int3
roll
inc
lock
into
cmp
mov
xor
jns
js
push
xchg
xlat
addr16
jp
push
insb
movsb
push
mov
add
movsl
cmpsb
dec
outsl
adc
shrl
inc
dec
enter
fstl
out
lahf
fstl
cmp
sub
adc
mov
vpaddq
outsb
ds
xor
sbb
das
xchg
data16
mov
sahf
lret
mov
stc
ja
ljmp
fisttpl
or
cld
push
jnp
sar
inc
add
test
and
in
inc
scas
sbb
push
push
xor
int3
inc
js
pop
out
cltd
addr16
jle
mov
cmp
mov
ja
dec
iret
mov
aad
dec
mov
jecxz
jle
add
loop
int3
xchg
call
test
fisttpl
pop
out
cld
sbb
xlat
mov
gs
sub
outsb
nop
loopne
rolb
jno
mov
ljmp
gs
xchg
psubusb
and
imul
add
in
push
shlb
inc
mov
loope
rorl
xlat
mov
add
fisubrl
or
or
xor
test
es
push
cwtl
cmp
lcall
inc
xchg
sarb
xor
lods
cltd
out
cs
sbb
inc
clc
add
push
test
cmpsb
ficompl
mov
cwtl
in
adc
cmp
adc
push
dec
cwtl
pop
scas
xchg
push
orl
aad
call
jae
inc
push
sahf
fiadds
in
test
popa
xor
movsl
xchg
das
bound
test
rcrb
push
je
pop
jo
scas
lock
mov
add
add
or
cmp
imul
push
dec
cs
and
push
jnp
jge
rcl
inc
pop
inc
and
test
mov
testb
aas
push
mov
outsl
int
jo
les
cltd
push
lcall
cli
ret
popa
sbb
jmp
add
dec
out
aaa
notl
mov
or
xchg
sub
add
popf
cltd
fldl
dec
movb
iret
sub
jecxz
hlt
js
mov
ds
iret
pop
dec
jmp
or
mov
and
lock
fidivrl
rorb
insl
mov
push
test
jbe
inc
mov
leave
fdivl
iret
test
or
sti
aam
dec
cmpsl
pop
out
cmp
adc
enter
not
xchg
inc
xor
dec
mov
test
inc
push
pop
sub
ljmp
or
jno
push
mov
mov
outsb
enter
mov
pop
outsb
mov
int
sbb
adc
adc
mov
jns
andw
adc
sahf
mov
sub
jp
push
loope
jbe
push
mov
adc
mov
dec
dec
loop
das
pop
mov
cwtl
mov
xor
sub
addl
fisubs
jp
inc
ds
or
lahf
pop
repnz
cmp
dec
jbe
test
sti
leave
push
fiadds
lret
fs
aas
popa
pop
cwtl
xlat
aad
and
mov
testb
push
xor
xchg
inc
pop
pop
push
mov
adc
sub
xor
adcb
icebp
or
arpl
dec
in
mov
xor
rorl
and
cmp
xchg
dec
inc
xchg
dec
stc
xor
inc
movsb
lcall
xor
push
in
jle
jge
adc
push
dec
dec
xchg
in
test
ret
jbe
sbb
in
mov
ljmp
jb
in
push
mov
pop
push
jns
lock
dec
mov
pop
or
jge
lock
sub
in
lret
bnd
sbb
jmp
popf
cld
add
stos
mov
xchg
enter
stos
out
jo
lods
popa
xor
pop
and
cmpsl
jg
xchg
jmp
mov
inc
mov
cmp
movaps
lds
dec
xchg
cs
dec
shlb
int3
cwtl
mov
test
dec
icebp
ds
ret
mov
lret
jb
lock
adc
cmp
call
push
scas
sahf
loopne
int
ud0
sbb
std
gs
fdivs
cmp
aas
lock
push
pop
das
or
dec
or
rorb
int
lcall
xlat
mov
fwait
sahf
mov
cs
jae
jo
stos
test
pop
pusha
and
and
jl
mov
jmp
ret
scas
mov
pop
sbb
xor
std
and
mov
pop
dec
cltd
cs
test
jnp
out
mov
jp
int3
cwtl
mul
jno
inc
or
fstp
out
dec
sub
ds
pushf
mov
mov
ljmp
dec
jo
repnz
fisttps
sub
into
cmp
lret
xor
push
pop
jae
mov
sub
adc
push
fldl
xchg
inc
movsl
xchg
mov
js
add
jb
cmp
xor
mov
shll
outsl
push
sbb
popa
xor
push
add
enter
fdiv
xor
out
and
movsb
or
pop
int
mov
fmuls
lret
cld
and
sub
sub
xlat
jmp
mov
mov
pop
add
pop
mov
push
inc
mov
shrb
xor
pop
clc
mov
and
adc
inc
adc
xchg
or
cltd
mov
mov
ja
addr16
mov
sub
adc
adcb
dec
jne
loopne
std
in
inc
lcall
add
cs
jo
aaa
push
and
adcl
jmp
mov
movsl
sarb
xchg
scas
shlb
mov
out
std
jecxz
outsb
adc
out
push
test
sbb
or
inc
mov
or
add
adc
fists
pop
arpl
jbe
arpl
mov
cltd
popa
sub
addr16
les
imul
loope
lods
sbb
mov
imul
test
lret
inc
push
out
xchg
js
push
out
cmpsl
and
push
lea
xchg
jae
mov
xor
sti
test
mov
pop
xlat
sub
test
xor
dec
pop
mov
dec
add
sbbl
enter
push
mov
xchg
mov
sub
add
and
or
xchg
into
cmp
adc
inc
aad
test
sub
push
add
and
repnz
dec
cli
stos
call
sub
xchg
fstl
adc
sub
xor
jo
loop
imul
je
stos
stc
fnstsw
pop
inc
xchg
loopne,pn
movsl
pushf
out
adc
mov
loopne
daa
mov
push
cmp
push
xchg
or
rcrb
sahf
inc
push
pop
rclb
adc
sub
cmp
aam
pusha
enter
cltd
stc
mov
xor
xorb
mov
imul
int3
jecxz
int3
fistps
call
shrl
inc
dec
enter
das
in
cmp
shlb
sub
sbb
adc
je,pt
sub
and
and
call
cs
test
mov
aas
sbb
xor
push
les
aad
cmp
pop
mov
roll
in
sbb
mov
pop
push
rcl
inc
roll
xor
jnp
push
mov
add
adcb
jle
and
xchg
cmp
add
fisttpl
xchg
call
es
out
xchg
in
shll
push
lcall
inc
xor
in
jbe
in
push
repnz
pop
jo
pushf
ficompl
test
pop
mov
bound
jmp
jb
pop
fsubrs
adc
pop
outsb
movb
or
push
jecxz
mov
leave
insl
or
jb
lock
pop
and
inc
call
push
scas
sahf
in
cmpl
push
fdivs
cmp
aas
idivb
int
mov
or
sub
pop
cltd
mov
lds
push
mov
or
xchg
js
push
out
cmpsl
and
push
lea
iret
subb
mov
inc
sbb
enter
in
push
cs
push
stc
xor
ss
jnp
int3
cwtl
add
jne
les
jb
push
pushf
jmp
mov
lods
cmp
jo
and
adc
lds
fdivrs
popl
js
sbb
mov
pusha
cmp
mov
shll
jl
loopne
push
fxam
sbb
or
sbb
mov
fists
adc
push
add
mov
push
rcrb
mov
mov
sahf
jae
in
decb
dec
sbb
orb
or
and
xor
mov
lret
enter
pop
scas
sbb
lret
stos
jo
or
mov
and
pop
mov
push
push
out
mov
xor
test
sub
aad
jnp
mov
jae
pop
xor
sarl
fbld
jbe
mov
and
fwait
in
clc
sbbb
xor
cmp
cmp
add
shrb
ret
loopne
xchg
ds
sub
popa
loopne
dec
out
cwtl
mov
inc
push
adc
push
icebp
adc
inc
xorl
and
decb
cmp
pop
dec
inc
and
mov
sub
js
cmp
jnp
ret
les
cmp
or
xchg
jle
lahf
imul
adc
in
dec
divl
push
add
push
stos
movsb
test
pop
int3
iret
enter
add
das
pop
or
aad
test
mov
lock
fsubrp
fidivrl
es
lea
mov
push
dec
sub
pushf
inc
hlt
jle
xlat
cld
cli
jmp
dec
xchg
pushf
repz
cmpsb
aad
dec
mov
mov
inc
loopne
mov
push
cmp
cmp
js
stos
notb
jb
leave
ret
or
rol
add
leave
jb
jnp
pop
dec
jge
test
sub
lods
lret
sbb
ret
ljmp
das
sbbb
sub
hlt
das
pop
and
inc
or
mov
repz
fadds
es
xchg
inc
xor
mov
mov
repnz
js
mov
cmpsl
mov
lods
jg
hlt
aaa
mov
leave
in
fidivs
push
cwtl
pop
mov
or
fisttps
cmp
jno
bound
push
inc
repz
jo
les
push
sub
shll
lds
xchg
outsb
or
clc
lcall
das
inc
add
and
and
out
les
inc
stc
cmpsb
jmp
inc
sbb
in
cltd
cmp
popf
loop
sbb
sbb
xor
sub
push
mov
and
pop
push
lds
mov
ret
jl
mov
jmp
ret
scas
or
push
sub
pop
xor
addl
daa
jp
inc
ds
lods
cmp
in
cltd
orb
pop
mov
inc
xchg
pop
push
jle
mov
fistps
pop
scas
cmp
pop
xor
cmp
enter
dec
xor
loopne
adcl
pxor
jnp
sti
fwait
mov
jge
cli
mov
insb
add
add
notl
add
mov
mov
cs
lock
das
jo
aaa
push
and
adcl
scas
loop
and
sbb
fisubrl
enter
xor
jbe
ret
jmp
inc
mov
popf
out
fisttpl
loope
xchg
mov
pop
inc
push
test
mov
push
sub
shll
popf
jp
clc
lcall
shll
or
and
rcr
dec
xor
out
in
pop
outsl
mov
das
pop
inc
xchg
enter
rorb
pop
adc
jecxz
pusha
and
and
jl
mov
jmp
ret
sub
rcrl
cwtl
push
rcl
cmp
fucomip
fldenv
or
add
mul
jbe
pop
xor
xchg
pop
sbb
mov
mov
dec
idivl
cltd
inc
popa
push
into
aas
adcl
loopne
loop
stos
popf
pop
cmp
bsf
int3
push
jle
lods
add
sbb
sub
xchg
rorl
xor
subl
ja
aaa
jb
ret
sbb
jae
adc
or
sbb
or
sub
imul
or
into
out
xchg
in
push
xor
jb
push
addr16
cmp
mov
in
imull
cmpsl
mov
jmp
adc
mov
gs
sbb
outsb
push
mov
loop
repz
mov
test
pop
cmp
push
stos
jne
fnstenv
test
incb
and
mov
dec
scas
pop
ds
mov
or
mov
and
pop
das
pop
push
push
cmp
push
pop
aad
pushf
sbb
cmp
pusha
xor
or
sbb
inc
int
es
push
outsl
or
enter
andl
in
sub
leave
nop
shrb
sub
sub
dec
pop
ret
sbb
cmpsb
lcall
icebp
pop
gs
in
sahf
inc
inc
sbb
bound
mov
fdivrs
dec
int3
lcall
arpl
mov
jnp
sbb
mov
and
in
inc
scas
sbb
push
outsb
inc
test
add
ja
jecxz
mov
imul
cmp
xchg
push
aaa
mov
in
xor
cmp
shll
sbb
or
dec
sbb
jge
mov
and
insb
dec
push
das
pop
ljmp
shlb
cwtl
stc
add
pusha
mov
and
mov
test
pop
int3
mov
xchg
in
shll
loope
inc
jl
pusha
mov
sbb
mov
sahf
fidivrs
inc
outsl
and
or
or
ljmp
outsb
xchg
inc
rorb
fsubr
pop
divl
sub
xor
jbe
arpl
nop
push
fldenv
test
mov
cmp
xor
mov
mov
dec
imull
xchg
xor
mov
insl
inc
les
sub
mov
mov
mov
lods
and
in
mov
xlat
ss
les
dec
jb
inc
dec
sbb
pop
insb
aaa
sbb
mov
ret
in
std
inc
xor
cmpsl
mov
jnp
in
jno
out
add
jb
sbb
into
les
mov
stos
push
ja
xor
mov
pop
enter
mov
nop
fwait
pushf
pop
ret
icebp
jne
stc
mov
jmp
dec
fwait
lea
inc
push
out
or
push
cltd
jecxz
lods
stos
push
and
pushf
aam
push
sbbb
iret
pop
mov
lods
dec
dec
stc
inc
lea
adc
mov
js
jecxz
push
cmp
test
pop
push
rcl
in
push
dec
dec
or
cmp
daa
scas
mov
imul
es
add
rcrl
xchg
jp
shr
sub
in
cmc
jecxz
mov
xor
jbe
pop
cwtl
test
nop/reserved
popa
std
mov
jmp
aaa
nop
cmpsb
mov
shrl
shl
popf
movb
idivb
sbb
pop
inc
mov
jl
xchg
xchg
das
mov
cltd
jo
enter
xchg
repz
sbbl
insb
fs
int
pop
inc
push
cmp
jne
xchg
add
xchg
push
or
je
pusha
or
ljmp
or
shll
push
mov
addl
push
std
cmp
inc
cmpl
fcoml
arpl
xor
int3
jno
lds
rclb
repz
or
notl
insl
or
out
jo
les
push
sub
push
icebp
test
shll
jg
jle
addr16
cmp
adc
push
jmp
pusha
or
push
jge
mov
les
xchg
mov
call
daa
mov
jns
cmpsb
mov
dec
arpl
jns
inc
test
sti
cmp
jo
leave
mov
add
mov
inc
jno
jae
and
into
jle
xchg
faddl
inc
xchg
jae
jp
pop
repnz
fst
xor
sbb
jmp
sub
or
loopne
xor
sar
inc
sub
fidivrl
ficoml
xor
sbb
es
pop
repnz
out
add
fsubs
or
dec
dec
repz
arpl
cmp
jecxz
rol
sbbb
adc
sbb
inc
cwtl
rol
lret
icebp
aas
popa
ret
arpl
mov
sub
sbb
adc
adcl
mov
ljmp
sbb
jae
sbb
inc
mov
gs
dec
in
xor
mov
out
repz
mov
out
cwtl
fdivs
mov
bound
lods
les
pop
mov
sbb
mov
mov
popf
or
rolb
fldenv
test
test
loope
cmp
sub
aad
pushf
sbb
cmp
insl
xchg
rolb
test
cs
adcl
bound
sbb
jmp
or
add
ret
push
jmp
pop
or
dec
jmp
or
imul
pop
leave
test
mov
push
idivl
mov
js
jecxz
xchg
ret
xor
inc
dec
xor
xor
or
fwait
sahf
mov
aas
cmp
mov
leave
inc
mov
aam
jo
xchg
int3
cmp
bound
mov
daa
sbb
jae
and
adc
cmp
inc
call
push
imul
cmp
popa
js
arpl
push
mov
mov
movlps
repnz
pop
sub
mov
push
aas
xchg
ja
sbb
dec
jbe
jns
lods
mov
fisubl
add
adc
pop
adc
adc
sbb
inc
cwtl
rol
js
and
and
push
mov
in
inc
shrl
repz
cmp
pop
mov
push
push
sbb
and
fildll
mov
mov
jo
mov
jne
addr16
and
outsl
bound
lods
les
pop
mov
add
mov
repz
shrl
ret
jle
mov
in
mov
cs
pop
in
int3
roll
inc
lods
lret
lret
fadd
in
std
inc
xor
cmpsl
mov
jnp
es
ficompl
rcrb
aad
mov
adc
ret
movsb
fsts
xor
adc
stc
loop
dec
push
call
pop
enter
mov
inc
hlt
sbb
popa
nop
mov
mov
xor
mov
or
push
divb
jp
sti
and
fisttpl
push
push
clc
icebp
push
and
cs
pop
add
inc
loop
xchg
push
leave
repnz
clc
je
cmc
pushf
sarl
mov
and
sbb
mov
pop
xchg
int
test
movsl
mov
mov
xchg
jne
inc
out
lahf
arpl
ret
cmp
fmul
mov
cli
scas
xchg
outsl
pop
pop
adc
test
fsubrs
pop
dec
out
mov
andl
outsl
cmp
sbb
popf
inc
outsl
inc
xchg
pusha
cmp
cwtl
mov
fistpll
inc
xchg
jno
in
jbe
in
push
xchg
out
or
mov
mov
scas
add
and
mov
sub
sti
mov
adc
push
dec
inc
fcmovnu
mov
popa
push
js
dec
cmpsb
ret
xor
fwait
repz
outsb
mov
gs
in
ds
or
das
mov
jmp
js
icebp
jne
push
decl
mov
hlt
movsb
pop
lock
or
push
adcl
dec
cs
lret
jmp
dec
dec
push
or
sbb
xor
inc
subl
cld
pusha
fst
sbb
fildl
push
loopne
fsts
inc
insl
xchg
mov
popa
out
cmp
pop
pushf
cmp
les
xor
cmp
xor
test
std
scas
test
sub
movl
pop
sbb
ficoms
add
pop
dec
sbb
mov
sub
roll
lcall
pop
push
jnp
sub
sub
aam
inc
xchg
and
jmp
dec
jns
sub
std
and
inc
pop
cmp
daa
cmp
jbe
aam
pop
mov
aam
aas
outsl
ret
xor
ret
xchg
add
rcrl
xchg
lahf
test
and
in
pop
js
xchg
inc
sarb
fucomp
inc
xchg
out
sub
or
rolb
hlt
cld
and
adc
mov
data16
outsb
into
xchg
loop
sub
dec
je
mov
pop
push
jns
jecxz
ds
std
ja
int3
cwtl
fsubs
mov
or
sbbl
insl
decb
out
inc
test
mov
dec
xchg
add
sub
cmpsb
testb
pop
pop
sbb
fdivl
out
data16
jno
mov
sbb
lods
aad
call
repz
sbbl
insb
fs
int
pop
inc
push
clc
jns
outsl
daa
add
or
push
pop
xor
sarl
fbld
jbe
popa
fsub
outsb
push
dec
push
mov
ror
lcall
lds
enter
imul
pop
adc
xlat
je
cwtl
mov
cmp
into
and
and
pop
and
cs
xor
and
int
pushf
xor
arpl
sub
adc
adc
sub
fdivs
xchg
std
aas
mov
or
add
lock
inc
inc
mov
movsb
xchg
dec
test
shrb
push
daa
aad
mov
push
or
xor
cmp
add
mull
fsts
test
je
xchg
out
dec
inc
mov
cmpsb
pop
inc
mov
adc
mov
leave
aam
outsb
ds
xor
call
jp
insl
dec
adc
insb
fldt
les
mul
cmpsb
mov
pop
xchg
addr16
push
mov
imul
testl
jbe
push
cmp
testb
adc
pop
adc
adc
loope
inc
lods
cwtl
sub
cmp
mov
mov
test
jge
fcomps
daa
loopne
outsl
ret
sbb
out
and
lock
sti
mov
movsl
movsb
inc
and
mov
pop
mov
test
ret
mov
jae
int3
hlt
add
shlb
pop
out
push
mov
insb
movhps
pop
sahf
lret
orl
mov
push
fwait
and
mov
jnp
aam
or
popa
ret
dec
xor
jg
ljmp
cld
lahf
dec
rcll
xchg
mov
fld
mov
aam
outsb
sbb
and
cmp
mov
icebp
cmp
test
xchg
das
addr16
push
dec
jne
add
cmc
iret
daa
stc
and
mov
jge
mov
inc
sbb
xchg
xor
inc
dec
xor
xor
xorb
dec
stc
call
jl
stc
mov
push
je
sub
leave
sbb
popa
inc
call
push
imul
cmp
insl
cmp
movsb
inc
ds
jp
sbbl
pop
das
adc
shrb
clc
imul
mov
inc
loop
sub
inc
pop
in
xor
fists
jae
inc
xchg
enter
rorb
jle
mov
cmp
mov
ja
dec
je
mov
adc
dec
mov
out
lcall
sti
fwait
popa
ret
hlt
sub
hlt
leave
push
push
data16
les
push
mov
push
xor
sbb
popa
adc
sbb
mov
add
or
inc
je
pop
int
fidivl
shlb
movsb
mov
sbb
jp
imul
push
outsl
jecxz
or
js
mov
int3
cmp
in
pop
mov
inc
dec
sbb
xor
pop
mov
xlat
mov
shll
int
adc
adc
fincstp
ss
lods
sub
repnz
dec
inc
and
xchg
int3
cmc
adc
pop
mov
mov
pop
popf
cmp
out
xor
notl
push
sub
fs
notl
mov
jae,pt
int3
mov
mov
dec
dec
xchg
shll
jno
test
mov
inc
shrb
popf
fimull
scas
cltd
push
xor
or
sub
inc
mov
or
loope
test
jle
and
and
call
cs
lds
cmp
adc
cld
mov
cltd
push
lock
fisttpl
data16
add
mov
adc
jno
xor
jl
dec
test
sbb
outsb
inc
bound
pop
das
mov
scas
cmpsb
cmpsl
sub
xor
push
in
jle
and
jg
xor
add
xchg
or
sbbl
out
and
lock
sti
mov
mov
mov
xor
mov
pusha
sub
dec
adc
lds
xor
les
cmpsb
pop
cmp
insl
clc
cwtl
jmp
rolb
jecxz
stos
call
dec
hlt
lret
ret
fisubrl
enter
xor
cmp
inc
mov
ret
jg
mov
out
std
jecxz
push
ret
mov
sub
lods
dec
aam
cwtl
or
cmpsb
loope
stos
mov
popf
xorl
flds
xor
std
aas
mov
shll
lock
ljmp
clc
repnz
std
pop
mov
mov
test
lret
mov
lods
push
add
es
lea
mov
push
dec
sub
pushf
insb
xchg
dec
push
sar
negb
push
enter
cmp
lcall
mov
out
fnstenv
out
mov
or
repz
dec
in
cmp
push
adc
icebp
outsb
lret
mov
int
pushf
or
sub
push
mov
pop
sub
test
cmp
inc
mov
outsb
int3
cwtl
xor
jle
cmp
or
aam
rolb
add
je
cld
jecxz
mov
imul
cmp
xchg
push
aaa
es
mov
enter
stc
mov
das
mov
movsl
jge
adc
test
jg
fmull
dec
push
js
and
and
and
xor
mov
fdivl
imul
incl
insb
fs
int
pop
inc
push
clc
jns
les
stos
mov
pop
xor
sarl
fbld
jbe
mov
dec
std
std
sbb
jno
mov
and
cmp
loop
add
addr16
das
nop
push
or
int3
ds
loopne
rclb
push
js
pop
mov
xor
lcall
cwtl
and
jne
add
call
idivl
stc
sbb
lds
sbb
lret
std
cli
insb
add
or
dec
jmp
or
dec
mov
jp
xchg
lea
add
pop
mov
xor
inc
das
call
imul
dec
je
push
sub
xor
hlt
es
into
inc
scas
out
fidivrl
sahf
fiadds
jge
mov
stc
push
out
cmpsl
and
push
in
xor
daa
lcall
push
mov
pop
arpl
mov
mov
icebp
fucomip
fldcw
jb
fs
insl
ret
pop
mov
in
lds
fimull
fwait
bound
in
inc
insl
aas
or
mov
ja
jne
aam
xlat
test
xor
popf
pop
iret
icebp
mov
xchg
pop
stos
outsb
jmp
dec
sub
repz
inc
leave
push
enter
into
mov
mov
jb
mov
sbb
push
mov
pop
sub
xlat
jmp
dec
and
or
fs
jno
or
test
lret
sbb
cmp
fmuls
push
mov
jnp
rorb
insl
mov
and
test
ss
iret
test
push
pop
fucom
mov
in
cmp
enter
jb
lock
adc
inc
xor
dec
mov
test
inc
push
mov
loopne
into
pop
jnp
in
jno
out
add
mov
out
xchg
test
mov
stos
stos
push
insl
mov
mov
stc
adc
mov
pop
adc
daa
cmc
inc
out
sbb
cmp
add
inc
ds
lods
cmp
cwtl
adc
jge
ljmp
icebp
call
int3
inc
js
pop
out
cltd
jmp
dec
jae
fstpt
aad
pop
pop
fcmovu
ja
dec
je
mov
and
jmp
pusha
mov
ficoml
cwtl
test
pop
jb
cltd
adc
outsl
push
fldenv
cmp
lea
mov
clc
xlat
push
adc
stc
fnstsw
pop
inc
sbb
gs
out
inc
mov
mov
das
fs
xchg
and
push
nop
and
iret
dec
xchg
cs
sbb
xor
mov
les
pop
mov
movsl
movsb
or
dec
inc
dec
loop
insl
pop
inc
dec
adc
jne
jp
repz
decl
mov
cs
adc
call
daa
mov
jns
push
or
ss
mov
cmp
mov
bound
fwait
lock
cmp
dec
dec
ret
pop
in
dec
movsb
fsts
xchg
js
enter
cmp
sbb
adc
and
cwtl
xor
out
sbb
cmp
aaa
shll
mov
xchg
inc
fisubrl
fdivs
or
mov
pop
rcr
jecxz
xchg
mov
or
push
cmp
dec
js
lock
imul
movsb
ss
push
jo
mov
data16
outsb
into
mov
inc
sub
mov
and
addr16
push
lock
adc
lods
inc
jge
xor
push
jae
jo
push
jbe
lea
jb
cltd
adc
outsl
push
not
mov
xchg
imul
je
stos
stc
fnstsw
test
into
enter
pop
outsb
in
fidivs
push
cwtl
popa
and
repz
cwtl
repz
dec
fnstcw
jno
bound
push
inc
repz
jo
les
push
sub
mov
fisttpl
test
int
add
adc
fildl
gs
mov
cmpsl
test
mov
fistpl
fwait
cli
mov
add
jnp
xrstors
popf
cmpsb
lcall
icebp
mov
jecxz
inc
shrb
dec
cmc
xor
fst
xor
sbb
jmp
dec
fldcw
test
and
aaa
push
imul
cmp
lock
jae
push
dec
xchg
pushf
repz
cmpsb
aad
dec
sub
sub
js
xchg
mov
push
cmp
pop
push
idivl
sub
adc
push
mov
iret
inc
ja
fs
push
arpl
inc
enter
cmp
pop
xor
popf
pop
iret
icebp
dec
sub
jb
mov
test
pop
imul
inc
lret
test
xor
and
hlt
mov
les
cmp
movsl
dec
pop
mov
cli
subl
xor
cs
enter
mov
aaa
notl
sub
and
xor
paddsw
adc
xchg
js
pusha
mov
test
mov
js
mov
push
dec
pusha
and
sbb
mov
jno
in
cmp
pop
inc
inc
jae
mov
inc
dec
adc
xchg
xor
mov
xor
mov
pusha
sub
dec
adc
lds
cmp
adc
das
xchg
inc
shlb
push
mov
mov
aaa
lcall
incb
and
mov
dec
push
pop
adc
inc
outsl
mov
mov
push
cmpsb
ja
fidivrs
movl
jo
in
fwait
call
outsl
push
scas
inc
sbb
loope
dec
les
ret
xchg
scas
cltd
push
push
sub
sahf
mov
sbb
pop
mov
pop
pop
negl
cmp
stos
les
fs
xor
call
out
cwtl
shlb
or
mov
sbb
das
mov
mov
jae
fwait
lret
add
shll
insl
sub
sarb
mov
jl
stc
mov
push
je
sub
and
and
call
ljmp
or
dec
fwait
lea
inc
sbb
imul
mov
popl
roll
mov
adc
jno
xor
dec
dec
incl
enter
cmp
dec
mov
adc
dec
mov
out
lcall
sti
fwait
mov
jge
cli
mov
insb
add
les
push
mov
sbb
sti
dec
push
jb
cmpsl
sub
data16
fdivr
cltd
pusha
sub
popf
add
mov
lret
orl
pop
inc
mov
mov
ret
movsb
cld
xchg
and
push
nop
and
iret
dec
xchg
cs
sbb
xor
mov
les
dec
aaa
pinsrw
es
push
outsl
or
enter
pop
cs
xchg
push
pop
adc
js
mov
hlt
es
xchg
sub
stos
xchg
jnp
jbe
push
sahf
fiadds
leave
sbb
add
mov
xchg
cmp
pop
or
ficompl
push
and
and
call
cs
test
mov
aas
sbb
enter
pop
daa
inc
test
inc
sbb
mov
aad
pop
inc
and
test
rolb
loop
je
test
into
addr16
push
lock
adc
lods
inc
jge
xor
and
cmc
popf
cmp
aad
and
dec
outsl
add
xor
jp
out
and
lock
sti
sbb
lret
adc
mov
pop
mov
test
xchg
clc
lcall
xchg
sub
call
mov
cmc
adc
mov
sbb
ret
adc
lahf
add
jno
and
push
add
loopne
xor
sub
or
push
lcallw
iret
pop
fucom
mov
lock
insb
push
pop
das
pop
sbb
sbb
or
cmp
lahf
push
xchg
data16
aad
rol
pop
mov
std
pop
xorl
lds
sbb
xlat
insb
add
inc
movhps
pop
hlt
xchg
clc
fldcw
std
aas
mov
rorl
mov
mov
fdivl
je
xchg
out
aad
add
mov
push
sahf
fiadds
mov
movsb
and
fstpl
call
out
test
mov
mov
dec
mov
in
test
mov
aas
sbb
lds
inc
stc
inc
lea
pusha
lret
adc
ficoms
sbb
or
jp
cmpsb
sub
sub
fdivl
push
testl
orl
xchg
sbb
fs
rorb
push
idiv
daa
pop
mov
rol
leave
iret
scas
fsubrs
mov
xor
add
xchg
or
loop
and
inc
std
mov
daa
mov
lret
add
adc
dec
incb
pop
pop
pop
pop
pop
and
inc
int
mov
cmp
xor
pop
and
stc
jne
pop
sbb
orl
or
sti
pop
cli
repz
call
sbb
add
add
lds
mov
adc
mov
cmp
add
add
mov
mov
in
sbb
pop
mov
mov
test
jl
xor
add
fsubrp
ficoml
popa
mov
lea
mov
push
dec
sub
pushf
inc
hlt
jle
xlat
cld
test
inc
ds
jp
dec
imul
ds
pushf
mov
ja
bt
fimull
rcrb
xchg
mov
xor
jnp
push
mov
mov
pop
dec
jge
test
sub
int3
mov
xchg
cmp
add
or
das
pop
in
adc
push
scas
lods
inc
sarb
int3
cwtl
test
cli
xchg
or
mov
rcr
jno
test
and
ljmp
in
xlat
cmp
mov
mov
mov
lods
int3
in
aad
sbb
mov
sub
mov
mov
popf
adc
jb
xor
pop
lods
les
gs
ja
or
mov
pop
clc
xor
fidivs
test
cmpsl
lds
scas
sub
mov
ficoms
ja
mov
adc
add
notl
icebp
addr16
xchg
and
fldcw
std
aas
mov
rorl
push
add
push
stos
movsb
test
pop
scas
xchg
pop
xchg
xchg
adc
adc
ss
ficoml
popa
mov
sub
cmp
mov
adc
sbb
nop
nop
movsb
inc
ds
test
or
sbb
sub
xchg
mov
in
cmp
xchg
push
aaa
mov
xor
cwtl
mov
push
dec
scas
cmpsb
or
aas
sub
int3
mov
xchg
cmp
dec
insl
sahf
ja
pop
xchg
call
je
mov
rcrl
int3
test
adc
mov
fisttpl
cmp
sbb
mov
or
fmuls
push
mov
jnp
rorb
insl
mov
and
test
notl
loop
cmp
cld
loopne
pop
fucom
mov
repz
enter
jb
lock
adc
inc
xor
dec
mov
mov
ss
cmp
into
pop
jnp
in
jno
out
add
cltd
ds
mov
mov
xchg
jb
push
outsb
cmp
imul
dec
jp
daa
sbb
fcomi
fwait
sti
adc
fwait
mov
mov
pusha
mov
jle
rcll
in
cmp
iret
or
test
jo
inc
lea
pusha
lret
adc
loope
cmp
insl
movsb
sbb
add
rol
loop
or
xor
les
cmp
xorl
sub
pop
stos
movsb
or
pop
int
mov
insl
xchg
out
push
out
push
sub
iret
sub
jecxz
sbb
add
fs
jno
ret
lds
xor
mov
or
fmuls
push
incl
cmc
fldt
sub
jno
lds
shlb
cld
cld
loopne
pop
fucom
mov
lock
and
push
push
jl
pusha
mov
push
pop
and
xor
les
inc
rcrl
xchg
add
adc
stos
mov
mov
add
gs
mov
cmpsl
test
mov
stos
test
mov
icebp
jecxz
add
shrl
sahf
out
std
sub
mov
jb
push
and
sub
dec
and
adc
sub
adc
push
or
xchg
addl
jns
mov
xlat
mov
sub
fcompl
jns
arpl
push
imul
sbb
inc
mov
adc
into
fimuls
adc
xchg
or
mov
xor
mov
addr16
sub
sbb
adc
xchg
out
or
push
xchg
adc
mov
scas
add
stc
add
dec
and
push
gs
subl
xlat
fsubrs
out
cwtl
fimull
sarl
xchg
mov
inc
imul
push
push
cltd
sbb
push
push
mov
das
outsb
add
addb
adc
mov
pop
mov
xchg
movsb
test
or
inc
sbb
add
lock
ljmp
arpl
push
xor
stc
sbb
xchg
pop
rolb
and
insb
add
outsb
inc
imulb
fnstsw
mov
and
mov
cmpsl
fdivl
mov
js
mov
hlt
es
into
jbe
jecxz
xor
outsl
inc
aaa
lea
pop
inc
mov
and
ret
jl
mov
jmp
ret
sub
rcrl
cwtl
push
rcl
cmp
fucomip
fldcw
test
out
test
and
in
pop
js
lahf
sbb
pop
cli
out
enter
push
sub
loope
cmp
mov
mov
and
pushf
rcrl
iret
dec
gs
ljmp
icebp
jecxz
aam
push
repnz
inc
xchg
sbb
shl
sbb
mov
pop
and
idivb
pop
sbb
jne
cmpsl
jns
ja
lret
inc
xchg
sbb
push
add
and
loopne
repnz
xorl
jnp
lods
dec
icebp
or
add
xchg
hlt
add
shlb
insl
cmp
mov
jne
add
imul
sbb
push
add
shlb
jl
test
pop
cwtl
out
push
test
sbb
jb
adc
mov
mov
pushf
stos
stc
xchg
popa
mov
push
iret
mov
fildll
jmp
sarb
pop
mov
adcb
inc
inc
inc
clc
add
aad
fidivs
js
leave
shrl
inc
dec
enter
das
sbb
lret
push
insb
add
das
pop
es
and
movsl
cmc
movsb
adc
xlat
scas
leave
jge
mov
xor
imull
out
jne
fists
cwtl
xor
jecxz
cmpsl
dec
test
bound
or
das
mov
incl
xchg
lods
cmp
in
cltd
orb
jno
scas
inc
xchg
aam
rclb
jge
push
jae
int3
lret
lds
inc
push
mov
outsl
int
jo
fsubp
addb
cmp
fcompl
cmp
insl
add
dec
push
push
mov
mov
jp
mov
xchg
fldenv
call
dec
in
cmp
aas
and
js
out
xchg
in
shll
push
lcall
in
xor
into
and
push
cld
add
stos
mov
dec
sub
cmp
orl
inc
imul
inc
dec
adc
add
das
pop
push
push
jg
hlt
aaa
mov
mov
lods
pop
lcall
mov
push
cmp
lds
test
nop
mov
pop
jg
xchg
mov
repz
cmp
sub
cmc
sub
popa
loopne
lcall
sub
mov
xor
test
fadd
pop
mov
add
adc
inc
call
pusha
mov
test
pop
adc
out
pop
pushf
cmp
daa
inc
dec
int
lahf
or
and
enter
sahf
loopne
cld
addr16
push
pmaxsw
xor
mov
dec
es
mov
adc
cmc
repz
test
dec
cwtl
mov
xchg
ja
dec
outsb
pop
scas
fistpl
mov
xor
adc
xchg
mov
imul
nop
xchg
push
iret
dec
test
rolb
push
add
sbb
aad
sbb
dec
xchg
cmp
fsubr
insl
pop
mov
sbb
aaa
or
repz
es
pop
push
dec
mov
mov
addr16
xchg
scas
out
repz
arpl
cmp
or
pop
lods
sbb
fmul
lea
mov
jmp
pusha
mov
inc
mov
pop
into
shlb
xlat
out
add
leave
lock
sub
in
lret
bnd
popa
mov
mov
sahf
and
jecxz
cltd
cmpsb
mov
jle
jae
data16
dec
sbb
ret
and
les
dec
lods
xor
daa
mov
fnstenv
dec
test
adc
xor
push
in
inc
pop
pop
hlt
inc
and
jecxz
add
xchg
inc
call
fdivrs
adc
inc
jle
jp
popa
arpl
mov
test
frstor
clc
sbb
popa
xchg
aad
cltd
mov
adc
faddl
and
mov
jbe
jae
inc
test
or
mov
pop
push
and
add
cmp
insl
outsl
movsb
and
inc
push
insb
movsb
test
cmp
shll
jno
test
mov
cmp
test
popf
xchg
enter
das
in
cmp
sti
leave
add
lods
inc
shrb
bound
imul
aam
jle
mov
mov
fldcw
test
xchg
inc
cld
dec
fcoms
mov
cmp
test
sar
test
in
xor
movsl
rorb
out
iret
cmc
cmc
aaa
jae
int3
add
jae
std
lock
mov
iret
inc
ja
xor
cmpsl
cmp
xchg
jne
and
add
push
cmp
cmp
cld
sub
add
icebp
cwtl
into
cwtl
ljmp
movsb
add
out
lahf
arpl
loopne
arpl
test
lods
inc
push
cmp
jns
cmp
int3
in
lods
loope
mov
cmp
cli
mov
mov
mov
les
push
mov
int
sub
push
jb
cmpsl
daa
mov
inc
adc
data16
fdivr
cltd
pusha
sub
popf
add
mov
lret
orl
or
inc
jae
inc
andl
fs
xchg
and
push
outsb
stc
add
adc
inc
sahf
stos
mov
out
cmp
mov
mov
mov
movl
pop
pushf
xorb
adc
sbb
popa
and
fistps
call
shrl
mov
add
hlt
mov
jmp
rclb
les
aam
xor
mov
adc
mov
loope
xor
sub
dec
push
sbb
mov
cmp
stos
inc
pop
lcall
popf
sti
popf
cltd
fisttpl
out
pop
mov
sahf
sub
cmp
xchg
lods
fs
xor
pop
call
popa
ret
inc
or
gs
scas
jge
sub
lods
movnti
adc
xor
inc
sbb
xor
mov
js
jecxz
mov
sbb
jmp
xchg
scas
sbb
fs
add
sbb
pop
mov
fstps
adc
sbb
rcrl
xchg
ret
cmp
rcrl
out
add
leave
fistpll
test
jne
push
xchg
je
outsb
daa
sub
inc
notl
add
mov
mov
cs
lock
das
jo
aaa
push
and
adcl
jmp
cmp
fisubrl
enter
or
in
sub
scas
insl
push
lods
pop
mov
xchg
mov
pop
inc
push
pop
rcrl
idiv
popa
cmp
shll
fistl
or
pop
add
test
mov
fmull
and
adc
outsl
shrb
call
call
mov
mov
pop
mov
int3
loope
xor
imull
out
jne
gs
sarb
shrb
pop
cmp
mov
pop
xchg
push
leave
repnz
push
xchg
stos
into
mov
mov
push
pop
sub
fdivl
mov
sti
cwtl
pop
jg
outsb
aaa
lret
scas
rcr
dec
and
jg
imul
insb
lods
jae
gs
dec
adc
adc
popf
jle
pop
mov
insb
ljmp
pusha
sub
dec
mov
enter
mov
inc
daa
popa
ret
push
data16
dec
sbb
ret
or
jb
pop
fsubrs
adc
pop
outsb
movb
or
pop
mov
fisttps
and
mov
adc
lock
out
dec
xor
out
xor
imull
mov
sub
fs
jo
cmp
add
xchg
fcomps
ja
dec
jg
xlat
xchg
fldt
push
loope
push
iret
aad
test
mov
xor
mov
insl
or
lods
inc
scas
lcall
xor
xor
mov
bnd
aas
ret
or
mov
mov
mov
shll
mov
xchg
mov
loop
sub
cmp
mov
inc
ds
lods
cmp
in
cltd
orb
pop
mov
inc
xchg
pop
push
jle
mov
fistps
pop
scas
cmp
pop
xor
cmp
enter
dec
xor
loopne
lahf
ja
aaa
sub
pop
cmc
mov
and
hlt
sub
hlt
leave
push
mov
mov
sbb
lea
push
jb
jecxz
mov
insl
xchg
dec
dec
ja
cmp
or
jae
sbb
ret
or
enter
pop
outsb
in
fidivs
push
cwtl
pop
mov
or
sub
mov
popa
push
pop
aad
pushf
or
cmc
push
pop
rclb
adc
sub
cmp
aam
pusha
xorb
add
or
jno
mov
in
sub
leave
nop
sahf
je
mov
mov
std
out
jbe
jae
dec
jg
loopne
sbb
pop
xchg
pop
adcb
mov
imul
nop
xchg
push
iret
dec
test
rolb
push
add
sbb
aad
jle
sbb
xor
nop
movsb
inc
ds
jp
dec
mov
aad
dec
sub
ds
pushf
mov
ja
lcall
jae
in
adc
push
popf
mov
lods
cmpsl
bound
adc
fstps
adc
sbb
inc
cwtl
rol
js
and
and
and
xor
les
xlat
jmp
dec
and
movsl
sub
dec
ljmp
push
mov
les
cld
testl
faddl
cli
std
inc
pop
cmp
adc
lds
in
push
das
shlb
jae
push
or
xchg
cltd
dec
push
jecxz
mov
leave
outsb
std
ljmp
clc
pop
in
int3
roll
inc
lods
lret
lret
fadd
in
std
inc
xor
cmpsl
mov
and
sbb
es
int
je
clc
sub
dec
dec
pop
je
xchg
out
dec
inc
mov
in
mov
std
dec
jo
stos
popa
jle
adc
push
dec
inc
xchg
sti
leave
add
lods
inc
je
mov
add
lahf
push
xchg
mov
rorl
adc
push
dec
movsb
sbb
push
jl
mov
add
ret
sarb
shrb
push
sub
pop
inc
movsb
xchg
aaa
mov
pushf
cmp
mov
or
outsb
sbb
add
mov
shrb
clc
imul
in
jno
lds
ret
or
rol
add
lock
push
xchg
push
int
jae
push
pop
in
stos
add
sbb
dec
dec
add
adc
imul
notb
out
push
or
shld
rolb
inc
mov
jg
fmull
out
sbb
sti
sar
pushf
in
inc
in
xor
xchg
loope
mov
xor
loopne
repnz
xorl
insl
ret
cmp
fwait
cmpsb
xor
mov
add
lret
in
ret
pop
imul
mov
gs
cmpsl
mov
or
enter
pop
outsb
in
fidivs
cmp
add
cwtl
or
push
test
ret
ljmp
xchg
mov
pop
sarl
rcl
ljmp
loope
adc
add
icebp
jmp
dec
fisttps
movsl
push
xor
push
cmp
push
add
adc
pop
mov
xor
cmp
and
out
fldcw
jecxz
mov
leave
insl
or
gs
or
loopne
mov
call
gs
xchg
bound
loopne
flds
stos
mov
aas
xchg
fsubs
mov
movsb
mov
mov
test
mov
mov
test
addr16
xor
sti
sbb
out
mov
outsb
xor
xchg
xor
jns
sub
add
cld
jno
out
fisubs
jp
inc
ds
gs
in
inc
scas
sbb
push
push
fisttpl
add
repnz
out
add
fsubs
ljmp
arpl
cmp
or
pop
lods
sbb
push
mov
lcall
mov
int3
cmp
push
jmp
and
inc
inc
rcrl
int3
test
adc
mov
pop
mov
test
adc
sub
lods
scas
fs
mov
std
inc
pop
cmp
adc
lds
in
push
das
rorb
pusha
call
pop
add
push
jmp
mull
xchg
ror
into
push
mov
jmp
out
cld
test
or
add
add
jmp
out
cmp
jle
sub
pop
jmp
mov
sbb
xlat
les
cs
add
jmp
jmp
loope
hlt
sbb
decl
pop
pop
push
push
push
jmp
mov
js
mov
pusha
jne
fwait
pop
jmp
mov
lea
pop
and
pop
push
push
not
not
push
pop
cmc
cld
pop
pop
pop
jmp
lcall
cmpsl
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
fcomp
push
and
fldpi
sub
stos
fwait
cmp
jbe
jmp
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
xor
jmp
mov
scas
jmp
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
aam
jb
inc
jns
pop
insb
xor
xchg
pop
cmp
je
push
push
xor
inc
cld
pop
pop
mov
push
push
test
inc
cld
pop
pop
mov
jmp
jo
outsb
setl
inc
pop
xor
shlb
push
dec
adc
imulb
mov
ror
into
out
cld
test
or
add
cld
jmp
cmp
jle
sub
mov
sbb
xlat
les
popl
add
jmp
lods
loop
xor
or
add
test
cmp
dec
loope
movl
mov
js
mov
and
inc
push
mov
jmp
nop
mov
iret
jmp
lcall
add
push
push
pop
jmp
push
std
repnz
sar
lahf
in
mov
mov
test
pop
xchg
jmp
push
xchg
test
xor
imul
stos
or
mov
push
jmp
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jne
jnp
icebp
push
inc
sub
scas
dec
pop
push
push
jmp
enter
je
adc
loopne
faddl
sbb
or
add
cltd
pop
aas
or
push
clc
shll
aaa
movsb
xor
pop
jmp
or
push
das
cmp
sbb
jmp
aam
jb
inc
jns
pop
insb
xor
push
pop
jmp
xchg
pop
add
jmp
in
and
pushf
movsl
jp
mov
inc
pop
xor
push
jmp
pop
push
dec
adc
div
fs
mov
jmp
int
xchg
ror
into
out
cld
add
jmp
test
or
or
add
addl
les
jmp
sub
mov
aaa
sti
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
fdivs
nop
mov
lret
test
cmpsw
xor
jmp
sar
lahf
in
mov
jmp
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
and
add
andl
add
call
pop
lods
jne
jnp
icebp
push
push
jmp
mov
scas
dec
fsub
push
pop
jmp
mov
inc
je
adc
iret
jmp
jecxz
rol
push
push
xchg
stc
cld
pop
pop
inc
jmp
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
jmp
pop
add
and
pushf
jmp
movsl
jp
mov
inc
pop
jmp
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
jmp
cld
test
or
add
addl
jle
sub
jne
jmp
sbb
jmp
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
inc
lcall
std
repnz
sar
lahf
mov
push
push
test
clc
cld
pop
pop
add
jmp
insl
mov
jmp
sbb
cli
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
jmp
addr16
mov
cmpb
jnp
out
cwtl
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
jmp
movsb
or
adc
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
aam
jmp
mov
inc
pop
xor
shlb
int3
adc
mov
mull
xchg
ror
into
out
cld
test
or
add
cmp
jle
sub
mov
sbb
xlat
les
cs
pop
gs
jmp
cmp
dec
loope
hlt
push
jmp
fidivrs
js
mov
and
inc
push
nop
mov
jmp
mov
sub
jmp
lret
test
pop
add
jmp
inc
sar
lahf
in
mov
mov
test
ret
