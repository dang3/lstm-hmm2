sub
add
add
add
add
add
outsb
add
xchg
add
add
jl
add
add
add
jl
add
jl
add
jl
add
mov
add
ret
add
xor
add
add
js
add
bound
add
add
push
sub
add
add
sti
xor
add
xor
add
add
add
add
add
add
outsb
add
xchg
add
das
add
jl
add
mov
add
jl
add
jl
add
jl
add
add
add
mov
add
js
add
bound
add
add
push
sub
add
add
sbb
add
add
jl
add
jl
add
inc
outsl
add
jl
add
fisubrs
add
aas
add
jl
add
add
add
jl
add
jl
add
jl
add
or
add
js
add
mov
add
js
add
bound
add
add
push
sub
add
add
sbb
add
add
jl
add
jl
add
inc
outsl
add
jl
add
fisubrs
add
aas
add
jl
add
add
add
jl
add
jl
add
jl
add
push
xor
add
mov
add
js
add
bound
add
add
push
sub
add
add
sbb
add
add
jl
add
jl
add
inc
outsl
add
jl
add
fisubrs
add
aas
add
jl
add
add
add
jl
add
jl
add
jl
add
lds
add
js
add
mov
add
js
add
bound
add
add
push
sub
add
add
js
add
sbb
sub
add
lea
push
addl
pushf
jmp
pop
add
add
or
add
bound
xchg
mov
pop
add
inc
add
add
add
loop
int3
add
add
add
add
add
jmp
add
inc
add
inc
add
add
add
add
mov
add
add
jnp
jns
dec
add
add
add
add
jns
pop
add
mov
add
inc
add
add
add
add
add
add
add
or
cmp
inc
add
imul
mov
mov
add
add
add
add
inc
add
aam
inc
add
mov
add
add
add
add
add
inc
add
add
inc
add
nop
add
mov
loop
imul
dec
add
add
add
inc
add
add
inc
add
lret
add
add
dec
add
pusha
add
add
inc
add
outsb
add
add
pop
add
add
add
out
add
add
add
add
add
add
inc
add
add
add
add
aam
push
add
sub
pop
add
add
add
fwait
add
add
add
add
add
add
sbb
dec
add
add
inc
add
lds
push
add
add
push
add
xchg
pusha
add
push
add
add
add
or
add
call
add
push
add
lret
add
add
add
add
mov
aaa
add
inc
add
xchg
add
add
add
push
add
adc
or
roll
add
fiaddl
jae
xchg
add
push
add
add
add
add
jno
in
add
add
add
add
add
add
popf
add
and
add
cmp
add
insb
add
cmp
inc
add
push
add
inc
add
add
lldt
add
add
add
gs
add
add
add
gs
add
add
add
push
lds
jo
jnp
cld
add
gs
add
add
add
add
add
add
pop
add
mov
add
push
add
add
inc
add
push
add
xor
filds
out
add
jl
gs
add
imul
and
inc
add
add
add
add
add
add
add
inc
add
add
push
add
add
add
int3
add
filds
flds
bound
jl
gs
add
add
add
popl
add
inc
add
imul
sbb
int3
add
add
sub
push
jo
inc
add
imul
in
loop
add
add
inc
add
add
mov
add
inc
add
imul
inc
add
inc
add
add
inc
add
add
inc
add
add
cmp
add
add
sub
add
bound
push
add
xchg
lldt
add
movsb
add
add
add
push
add
add
add
push
add
add
add
pop
add
add
add
add
add
daa
add
push
add
add
add
add
add
add
add
add
arpl
xchg
mov
lahf
xchg
cmpsl
pop
sub
and
lods
mov
loope
or
pop
notl
mov
in
sub
outsb
sbb
mov
rorl
adc
ret
rorl
fcomps
pop
cs
adc
in
adc
aaa
iret
xor
xor
lret
dec
jae
imul
mov
pusha
jg
or
xor
rcl
xor
xchg
inc
enter
push
mov
les
push
and
out
push
cmp
hlt
gs
mov
mov
mov
push
repnz
add
sbbl
xor
jno
pop
sub
mov
ud1
lods
sahf
cmp
or
stc
push
adc
jnp
pop
push
lret
fstpl
pop
mov
fsub
mov
xor
or
xchg
dec
cmp
mov
pop
popf
gs
mov
pop
xchg
adc
mov
dec
pusha
adc
adc
mov
push
decl
mov
adc
aam
jl
movsb
flds
js
dec
pop
pop
fildll
daa
inc
cmp
fmul
test
repz
lret
out
mov
mov
xchg
fdivrs
xor
jmp
mov
push
mov
or
int3
aas
dec
pop
sbb
mov
or
insl
sahf
and
sub
ror
inc
ja
cwtl
adcl
faddl
xor
fsubrs
je
mov
mov
adc
dec
mov
xor
push
xchg
add
testl
repnz
xchg
aaa
movsb
loop
mov
test
xchg
sbb
jp
jb
inc
mov
push
push
fsts
in
ja
sarl
imul
std
mov
inc
pop
adc
ret
in
lret
adc
inc
dec
scas
loope
lcall
and
inc
lahf
push
fists
decl
adc
out
inc
mov
mov
fwait
sub
aaa
jo
adc
xchg
jb
decb
inc
aam
popa
xchg
mov
mov
push
das
cltd
pop
cltd
cmp
testb
mov
call
stos
movsb
jle
icebp
xchg
push
pushf
mov
iret
ret
fsubrl
movsl
lahf
cs
sbb
test
mov
fcoms
xchg
cli
loopne
rol
aaa
cli
aaa
adc
mov
int
movsb
shlb
testl
pop
adcl
lods
pop
ds
mov
mov
shl
dec
inc
push
dec
out
mov
mov
mov
cmc
pushf
pop
pop
push
push
or
sbb
jae
sub
arpl
stos
repnz
js
psubusw
arpl
add
fildll
add
add
add
add
rolb
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
cmp
push
xlat
cmp
inc
fldenv
aam
xchg
mov
inc
notl
daa
divl
pop
xchg
pop
jo
ja
ja
push
xlat
daa
cmpsl
aaa
mov
xchg
xchg
in
divl
inc
adc
aaa
xchg
xchg
pop
jle
outsb
negl
dec
xlat
cmpsl
cs
xchg
xchg
out
cld
sub
jne
push
hlt
pop
pop
out
orl
cmp
das
popa
lret
jbe
test
je
jnp
and
inc
cmp
shll
dec
out
mov
mov
inc
sub
pop
enter
ficomps
cmp
push
sbb
loopne
imul
jmp
bnd
push
xor
cmp
orb
in
or
pop
daa
repnz
clc
push
push
mov
mulb
ret
add
pop
rcll
mov
in
stc
jle
xchg
or
adc
sub
testl
and
jbe
mov
mov
or
outsl
inc
xchg
invd
fisubl
out
cmp
sbb
push
fsubs
adc
testl
sub
xchg
addr16
ja
inc
into
push
mov
pop
mov
mov
and
xorl
testb
negl
mov
mov
dec
loop
bnd
cmpsb
ja
and
push
adcb
cltd
imul
xchg
in
negl
adcb
cmp
dec
les
jb
jns
mov
andl
push
mov
pop
xchg
xchg
out
divl
inc
xlat
push
cmpsl
daa
mov
xchg
xchg
pop
addr16
testl
aaa
mov
xchg
xchg
out
divl
inc
xlat
push
cmpsl
daa
mov
xchg
xchg
pop
addr16
loop
xor
sub
jmp
mov
inc
ret
and
lods
push
mov
xor
add
ljmp
jbe
and
out
ss
sti
hlt
gs
test
or
cmpsl
or
int
mull
mov
int
std
adcl
in
loope
lods
xor
in
mov
lahf
mov
in
out
mov
flds
fs
pop
push
push
push
xchg
filds
push
cmpsl
addl
ljmp
leave
cwtl
xchg
mov
dec
enter
add
mov
ss
call
fiaddl
xchg
adc
fdivs
inc
std
pop
mov
subl
sti
sbb
test
pop
out
js
fistps
nop
pop
imull
cmc
sbb
mov
and
push
das
mov
dec
push
popa
mov
inc
xor
jae
dec
call
imul
loop
sbbb
bound
aas
mov
push
mov
mov
outsb
dec
mov
pushl
bound
adc
add
leave
push
xor
bound
subb
out
mov
adc
aas
pushf
fdivl
xchg
test
ret
dec
cltd
mov
call
xchg
icebp
mov
xchg
mov
xchg
jns
xor
or
outsb
xor
cwtl
jg
loopne
imul
push
and
mov
cld
sub
fstps
add
or
push
lret
cs
cmp
cli
inc
mov
xchg
cli
add
jecxz
rol
pop
inc
inc
jo
shl
pop
lock
mov
pop
mov
loopne
clc
popf
jo
outsb
shrb
ret
fwait
mov
pop
sbb
fstpt
cld
popa
mov
cmpl
dec
push
jno
ret
imul
mulb
xchg
add
sbbb
mov
push
and
fcoml
int3
inc
pop
pop
repz
jle
jl
jbe
mov
or
pop
xor
and
popf
dec
ficoml
dec
imul
or
xchg
fistpll
rolb
sub
es
and
gs
inc
out
cmp
push
mov
inc
mov
sub
mov
xor
mov
and
xor
push
add
mov
fucom
xchg
out
pushf
addr16
jle
push
dec
push
push
cs
push
cmovg
cmpsb
adc
lock
jns
mov
fcom
jmp
and
cmpsb
mov
adcb
loope
outsl
int3
int
inc
jne
pushf
jno
xor
sbb
movsl
pop
jmp
fsubr
lahf
aad
call
cmp
fldpi
addl
mov
and
xchg
pop
pop
pop
iret
neg
insl
and
dec
dec
aad
shlb
subb
push
cld
inc
mov
mov
sbb
jecxz
and
rcrl
mov
adc
arpl
fsubr
test
fdiv
inc
ss
insb
mov
jno
add
push
adc
in
stos
sub
mov
dec
sti
pop
je
lret
nop
mov
insl
jp
in
js
sub
das
xchg
hlt
mov
xlat
sub
stc
mov
icebp
testl
pop
out
popa
cwtl
xor
sub
push
sti
test
loop
sbb
push
scas
mov
pushf
aad
leave
push
mov
push
jns
pop
outsb
fstl
repnz
fwait
repz
rcl
mov
jnp
clc
adc
cs
cmpb
jmp
mov
aas
push
push
shrb
and
ret
loopne
push
call
dec
mov
pop
dec
push
movsb
loope
sbb
sub
ja
jne
mov
xchg
shlb
movsl
jns
lods
call
insb
out
inc
bound
sbbl
pushf
cltd
das
sbb
or
cmc
pop
repnz
cwtl
lods
imul
rorl
xchg
push
xor
xorb
aam
popa
shl
cmpsl
fcmovne
mov
jno
imul
mov
imulb
nop
jb
xor
imul
push
fimull
outsb
fbld
out
fiadds
push
lret
sub
or
je
das
bound
xchg
shr
ret
out
push
push
shll
lcall
dec
fstpl
jecxz
mov
aaa
jl
mov
fisttpl
pop
cmp
icebp
shll
mov
mov
into
sub
nop
sub
mov
pop
int
pop
push
and
dec
pop
inc
push
imul
les
push
pop
and
adc
mov
mov
add
jecxz
call
orb
cmp
adc
sbb
dec
arpl
add
mov
mov
outsb
add
mov
adc
fldl
add
or
icebp
aam
clc
dec
sbb
xchg
bound
dec
mov
inc
pushf
testl
xchg
and
std
out
xchg
dec
inc
sub
jle
fs
sub
push
test
xchg
inc
decl
mov
outsl
push
roll
leave
pop
cmc
daa
lret
adc
xchg
daa
popa
rcrb
add
pop
arpl
daa
lea
int
les
in
mov
fcom
xlat
and
push
add
icebp
imul
dec
push
decb
imul
mov
or
and
lret
or
je
sbb
xchg
cli
sbb
xor
ja
sub
sti
notb
push
add
inc
dec
andb
sahf
aas
fsubrs
notb
push
pop
xchg
inc
pop
or
mov
lods
sub
mov
sbb
call
jne
into
stos
mov
xchg
sarb
pop
mov
test
mov
add
mov
pop
jne
cmp
jne
mov
insb
fwait
mov
push
stos
mov
fbstp
inc
das
test
loopne
test
xlat
bound
lods
into
data16
push
cli
xor
movsb
hlt
xchg
mov
jae
pop
movsb
push
int3
push
dec
cltd
mov
es
in
push
push
test
fildl
adc
push
jns
push
mov
inc
xchg
insl
adc
in
and
pop
pop
pop
daa
dec
test
add
inc
insb
mov
lret
add
inc
je
pop
and
cmp
and
pop
shrl
imul
js
sub
mov
imull
add
ret
insb
push
iret
add
jnp
out
cmp
xor
cmp
mov
in
adc
cmp
int
jo
pop
cli
push
add
mov
aad
scas
xor
addr16
lods
push
xor
outsl
jns
cmp
jge
fwait
inc
jne
pop
jle
mov
nop
xor
sub
fisttpl
ja
mov
sbb
clc
rcll
popf
pop
pop
out
or
fiaddl
cmc
mov
and
push
daa
subb
pop
js
push
scas
subl
cltd
test
mov
mov
mov
push
jns
cs
dec
filds
jecxz
dec
lods
or
or
push
add
cmp
mov
gs
cs
sub
fistpll
push
add
cmc
sub
mov
fists
mov
sub
mov
sbb
mov
inc
imul
pop
mov
jo
adc
jmp
lret
ret
outsb
repnz
cmp
lcall
push
rolb
jne
test
stos
mov
enter
push
lods
jae
add
test
sub
lods
shl
fs
ret
repz
mov
loopne
xor
add
fsubrp
movsl
jb
scas
aas
cld
push
das
daa
push
loop
repz
js
hlt
push
in
inc
add
jmp
cwtl
mov
out
rol
es
inc
inc
mov
sti
pop
jecxz
pop
test
mov
mov
iret
setbe
sbb
inc
cmp
or
inc
ds
data16
ds
rorl
push
int
pop
fmull
mov
imull
lods
and
je
ljmp
lods
add
fbstp
loopne
mov
lret
sti
insb
adc
adc
lea
push
cmp
push
jecxz
cmp
repnz
leave
jne
pcmpgtd
adc
cltd
pop
push
pop
rorb
sbb
sahf
andl
insb
adc
mov
insb
inc
mov
stos
inc
jb
push
mov
push
das
inc
xchg
jp
dec
inc
icebp
insl
int
sbb
loop
and
ret
iret
adc
push
lea
adc
lods
aaa
dec
mov
jl
sbb
loopne
mov
nop
sti
hlt
mov
adc
and
pop
outsl
add
xchg
imul
leave
adc
fstps
cli
and
pop
fldl
rclb
icebp
ret
sub
andb
pop
mov
ljmp
mov
sbb
xchg
leave
ss
and
popf
sub
mov
xor
popa
test
fs
int3
cld
faddp
add
sbbl
pop
shrl
in
push
push
adc
leave
pushf
andb
out
jmp
stc
add
mov
les
jl
sub
push
hlt
xchg
mov
out
std
test
test
adc
sub
pop
jle
mov
call
and
jnp
insb
jns
sbb
cmpsl
test
xor
mov
or
jb
pop
adc
in
imul
outsl
out
jnp
add
xchg
cmc
lea
mov
mov
mov
rcrl
lret
jg
jle
jno
or
sbb
lret
inc
test
rclb
sub
jg
es
pop
repz
mov
xchg
int3
es
ss
adc
jmp
aam
pop
sub
aaa
imull
fnstsw
push
dec
hlt
lock
in
jno
add
mov
pushf
outsb
cmc
clc
sub
pop
lret
mov
into
fidivs
sar
outsb
in
adc
mov
insl
xor
test
movsl
xlat
sarl
movsl
xchg
jmp
or
sbb
add
dec
jno
pop
aaa
mov
cwtl
pop
out
popf
fdivrs
xchg
es
cmp
lods
out
orl
adc
add
xchg
mov
dec
add
aas
call
pop
mov
outsl
flds
ljmp
mov
inc
jnp
stc
jmp
js
sbb
ret
mov
aam
lods
hlt
inc
mov
push
adc
inc
and
sub
mov
lcall
adcb
mov
loop
fldcw
insb
jmp
add
or
inc
push
push
cltd
jo
dec
lret
outsb
push
xchg
mov
ret
xchg
mov
idiv
inc
pop
push
gs
jnp
dec
and
lds
fsin
push
mov
lahf
hlt
sub
sub
push
orb
outsb
mov
push
xlat
sbb
leave
mov
mov
push
pop
push
mov
mov
inc
pusha
loop
ljmp
addr16
es
xchg
into
sbb
adc
enter
sahf
adc
xchg
jne
das
inc
cmc
xor
cmpsl
loopne
mov
out
jb
and
sub
repnz
or
inc
sub
push
push
push
pop
test
sub
sbb
mov
insb
add
clc
push
cmp
pop
popa
dec
popa
xchg
mov
incb
jae
mov
push
fldt
movsb
testb
imul
jb
sub
xor
fmuls
mov
or
inc
cltd
int
iret
loop
test
jg
out
lods
imul
inc
aaa
pop
jno
mov
push
mov
push
jno
in
pop
xchg
aas
pop
lea
loopne
aam
shrl
sbb
ljmp
fcmovbe
mov
mov
mov
iret
mov
push
out
pushf
std
or
xchg
and
push
rol
shlb
loope
or
mov
dec
negb
dec
js
fmull
sub
mov
push
call
jp
adc
icebp
jle
into
pusha
movsb
pop
adc
test
fidivs
imul
jnp
loope
gs
cmc
sar
lret
inc
sahf
mov
push
xor
testb
jle
jnp
push
or
fisttpll
sbb
movl
xchg
pop
push
pop
pop
push
popa
jnp
push
sbb
dec
imul
pusha
sbb
add
shrb
jbe
je
cmpsb
lret
std
sub
imul
pop
xor
dec
add
or
rclb
lret
xchg
movsb
popf
sbb
jl
jae
push
jmp
je
cmpl
pushf
push
repz
fadds
mov
or
popa
mov
jno
sub
mov
pop
movsb
xchg
rcl
scas
dec
rcr
dec
mov
push
xor
sub
pop
movsl
cmp
lahf
pop
and
ljmp
outsl
std
out
cli
mov
adc
mov
push
pop
or
lods
test
leave
cmpsb
mov
outsl
add
pop
mov
int3
fwait
jge
xor
or
xchg
imul
jne
ss
and
ds
pop
les
adc
dec
sub
xchg
mov
lahf
sbb
in
shl
call
and
insb
sub
subb
lret
cmp
pop
push
testb
ja
fistpll
sahf
push
or
loopne
jae
xchg
ror
push
and
mov
sbb
iret
pop
mov
xor
adc
adc
lcall
insb
push
in
inc
mov
lcall
addr16
cmpb
adc
sbb
jl
mov
jbe
push
aaa
push
xchg
test
inc
cld
pop
imul
shr
xchg
in
scas
fstp
push
pop
scas
mov
int3
mov
adc
lret
popf
or
popf
fidivrs
aaa
and
outsb
jmp
ds
add
lods
imul
sbb
push
add
mov
xlat
and
add
xorl
sub
pop
insl
frstor
test
cli
rcr
adc
jne
pop
test
in
fadd
loop
mov
sbb
lret
cmp
mov
push
push
mov
stos
push
aaa
mull
sbb
ljmp
lret
and
outsl
subb
sub
lret
mov
mov
cwtl
xlat
cmc
or
add
and
aas
push
insb
adc
es
imul
out
mov
sbbl
pop
std
push
jle
mov
ljmp
imul
imull
cmp
xor
jl
sahf
and
dec
and
mov
pusha
inc
mov
pop
xchg
mov
aaa
or
mov
repz
add
arpl
add
je
cwtl
stc
adc
fst
out
add
dec
std
fs
pop
dec
mov
xchg
mov
and
push
shll
scas
inc
jle
aam
andb
and
fs
cmpsl
jmp
jne
gs
ret
jg
jecxz
jge
jecxz
or
cmp
fwait
mov
and
add
test
inc
mov
mov
push
jle
mov
loopne
mov
gs
lret
scas
mov
add
mov
jge
pop
push
mov
insb
lods
pop
les
rcrl
lret
insb
and
pop
into
in
std
movsb
cli
pop
int3
xchg
and
mov
inc
xor
jecxz
push
in
scas
scas
jl
outsb
shrl
mov
xchg
push
clc
stos
ret
pop
loope
jb
pop
ss
dec
rcl
sbb
or
out
je
mov
aam
and
mov
xchg
nop
xor
aaa
sub
mov
inc
mov
shl
mov
dec
cli
test
xor
sbb
push
movsb
cld
cmc
ja
pop
add
dec
orb
inc
and
and
inc
outsb
mov
cmp
ss
dec
xor
sbb
fwait
inc
loope
inc
jae
jmp
push
push
out
dec
fadds
outsb
push
lahf
or
jecxz
es
jl
xlat
push
scas
popf
mov
jae
inc
mov
and
cmpsb
xchg
cld
sti
xchg
cmpsl
popf
jle
iret
cmp
rclb
in
pop
sub
imull
xchg
and
cld
or
ss
mov
test
ret
fsubrs
or
xor
cld
mov
push
or
fsubrl
xchg
add
sub
and
in
sub
repnz
sub
fnsave
leave
mov
push
cmpb
inc
neg
sub
inc
movsb
shlb
pop
or
lret
add
pop
add
adc
jg
in
pop
loopne
out
dec
insl
imul
fcos
outsl
mov
popf
dec
xorb
out
stc
adcb
pop
loopne
and
sahf
mov
cmp
sti
nop
cmp
adc
add
and
dec
cli
gs
in
in
push
rclb
jb
mov
movsl
mov
add
cli
jg
jae
jl
mov
jno
jmp
movsl
sbb
into
je
test
mov
mov
fmuls
out
xchg
lahf
jno
test
sub
je
in
adc
mov
mov
adc
adc
cmp
jb
and
test
daa
test
movsl
ss
sbb
push
mov
and
imull
xchg
rcrb
mov
fs
jbe
cmp
stos
enter
popf
inc
sbb
cmp
pop
ret
test
add
outsb
push
mov
sahf
aas
or
jle
movsl
xor
xor
icebp
pop
jecxz
sbb
jbe
xchg
push
out
scas
sbb
inc
dec
cmp
mov
jl,pn
call
and
sbb
cmp
add
stos
cmc
push
cmp
xchg
loop
lods
lock
mov
out
mov
sahf
cmpsb
jne
xor
rcrl
mov
insb
test
rorl
call
jns
icebp
adc
repz
adc
cmp
test
push
push
das
pop
mov
push
jecxz
cmp
std
push
clc
sub
and
testl
in
fwait
out
add
pop
adc
mov
sbb
aad
fidivl
inc
sub
cwtl
ret
clc
mov
sub
or
push
fimuls
wrmsr
or
ljmp
push
sbb
adc
or
inc
add
dec
mov
inc
and
jo
lds
outsl
negl
inc
jge
pop
int
das
jg
cli
push
jbe
loopne
push
fsubrs
sti
mov
addl
push
cs
enter
cmp
adc
outsl
jp
sbb
cwtl
mov
mov
lret
out
jae
push
pop
fs
inc
mov
ss
popa
lock
out
inc
icebp
test
frstor
ss
mov
in
into
sub
sub
mov
jmp
popa
or
jb
nop
scas
enter
cld
push
cmp
or
popf
leave
or
sub
add
adc
xchg
cmp
sub
sbb
sbb
add
add
jle
inc
jb
and
mov
jbe
scas
jb
mov
push
mov
dec
mov
lret
fistpll
shlb
in
nop
lds
pop
and
movsl
push
aaa
adc
mov
mov
mov
movsl
clc
push
movsl
daa
add
sub
ret
incl
test
cmpsl
sbb
xlat
stc
mov
or
adc
sub
sub
mov
xlat
rol
mov
pop
sbb
bound
pop
jg
and
js
pop
xor
imul
xchg
dec
pushf
lods
ret
dec
js
mov
bound
popa
ret
mov
fcoms
inc
hlt
and
out
and
div
adc
aam
out
jo
scas
xor
loopne
jne
sub
movsb
out
dec
cmp
fcoms
mov
out
and
movsl
pop
mov
jmp
and
cmp
or
mov
jl
ror
int3
outsl
jl
rcll
pop
mov
push
cmpsb
mov
aad
sbb
cli
and
dec
les
mov
ds
inc
inc
ljmp
mov
xor
lock
mov
push
mov
js
add
dec
xchg
dec
adc
stc
rcrb
mov
cmp
fsubl
fistl
iret
xor
push
mov
push
mov
sub
scas
test
mov
push
pushf
ret
lcall
sbb
or
aad
fiaddl
mov
fwait
movsl
adc
and
inc
stos
out
add
mov
sub
mov
mov
mov
loopne
jb
pop
and
fstps
scas
in
clc
outsl
imul
mov
out
xlat
fidivrl
xor
nop
outsb
sub
rcrl
sbb
gs
mov
cmp
or
pop
push
dec
jecxz
pop
lea
clc
fists
xchg
adc
out
mov
scas
sbb
xor
xor
adc
cmpsb
insb
adc
xor
push
dec
and
jp
enter
xor
cli
lods
inc
in
sub
adcb
xlat
daa
cmpsl
aaa
mov
xchg
xchg
out
divl
inc
xlat
push
cmpsl
daa
mov
xchg
xchg
pop
addr16
testl
aaa
mov
xchg
xchg
out
divl
inc
xlat
push
cmpsl
daa
mov
xchg
xchg
pop
jcxz
testl
aaa
mov
xchg
xchg
out
divl
inc
xlat
push
cmpsl
es
xchg
cmpsb
pop
push
out
divl
push
shll
cmpsl
aaa
aaa
xchg
xchg
push
insl
inc
xlat
and
scas
aas
enter
call
test
mov
scas
enter
inc
adc
or
dec
push
pop
inc
push
xchg
cwtl
add
rcr
shr
clc
loope
adc
add
cmp
or
pop
xchg
push
mov
cmp
mov
sti
insb
repnz
inc
inc
pop
and
adc
das
cmp
and
out
aam
test
shrl
int3
fcomps
xor
and
sub
or
lea
int3
shrb
cmp
aas
gs
imul
and
and
jno
sub
outsb
fldl
fucomp
scas
lds
xchg
or
cmp
inc
sbb
popa
push
shl
dec
mov
xchg
aaa
icebp
fadds
pop
test
sbb
lods
rol
fidivs
sti
js
ja
xchg
pusha
mov
inc
xor
push
cmp
sub
and
jno
sahf
ja
add
push
jmp
and
lret
int
cmp
sbb
mov
add
xor
mov
rcll
mov
shr
pop
clc
into
or
cmp
dec
push
push
pop
jno
add
fdivl
mov
pushf
popf
clc
mov
js
jns
fs
dec
cmp
adc
jno
or
jmp
fldenv
xchg
lods
lea
dec
pusha
sub
bound
and
add
hlt
in
shr
aam
mov
clc
loope
adc
add
xor
and
pop
inc
push
xchg
cwtl
subl
icebp
clc
loope
adc
add
xor
and
pop
inc
push
xchg
ds
push
js
pop
in
cmpsl
notl
adc
and
jp
push
pop
push
pop
ret
jo
shrb
pop
dec
loop
movsb
inc
addl
xchg
mov
xchg
out
jb
call
adc
push
fstl
popf
fstpl
sub
pop
or
push
pop
aas
fsubs
fdivrp
xor
shrb
adc
subl
or
arpl
jg
mov
push
loope
inc
jmp
pop
pusha
pop
xchg
xchg
mov
jo
nop
mov
mov
aas
jg
sti
jnp
lods
cmp
ljmp
test
shlb
sub
adc
mov
and
lea
dec
or
jl
lahf
pop
fistpll
insl
movsl
daa
ljmp
xchg
addb
adc
xchg
std
arpl
imul
dec
pop
inc
and
pop
adc
gs
lea
add
jl
mov
mov
fcmovne
fwait
popa
cmpsl
jno
add
cli
pop
lret
je
or
dec
test
xor
mov
and
ljmp
add
push
mov
lahf
pop
cmpsb
sbb
js
daa
outsb
inc
sub
insl
ljmp
jb
push
jecxz
loop
dec
jl
or
shlb
push
test
loope
fnsave
cmpb
jnp
push
addr16
jecxz
jecxz
xchg
pop
push
add
mov
test
scas
inc
stos
jle
cld
pop
inc
nop
ret
adcb
adc
out
mov
sbb
dec
lea
out
lock
push
dec
sbb
mov
sub
xor
in
xchg
mov
pop
adc
sub
pop
dec
cmp
cwtl
movsl
lods
les
mov
sub
xchg
xlat
test
pop
jno
xchg
xchg
inc
sub
pop
outsb
paddsw
pop
leave
outsl
or
das
data16
jno
mov
or
es
cmp
lds
sbb
in
push
jo
xor
sarl
mov
mov
aam
mov
rolb
rorb
das
into
cld
mov
addb
repz
in
adc
dec
cmp
fwait
vmwrite
or
push
loopne
shlb
inc
pop
xchg
shll
sbb
clc
fadds
test
jne
adc
sahf
std
das
adc
ljmp
push
xor
jp
push
adc
mov
pushf
push
push
and
or
adc
fiaddl
cmpsl
cmp
lea
out
in
cmp
push
xchg
push
test
push
outsl
imul
push
xorb
jl
orb
push
lcall
in
mov
loope
mov
mov
sub
mov
push
cmp
imul
mov
or
repnz
xor
add
dec
xchg
jbe
stc
mov
rcl
test
or
out
call
fdivr
js
aas
bound
dec
jecxz
loop
sub
mov
or
jl
dec
ss
sub
popf
fwait
jl
mov
adc
push
lods
lcall
pusha
clc
jno
lret
jno
cwtl
pop
xchg
dec
xor
test
inc
xchg
and
int
call
cmp
dec
sbb
push
xchg
mov
sub
cmpsl
lea
or
ds
insl
mov
loope
data16
pop
cmc
dec
ja
xor
sbb
jnp
and
mov
dec
pop
cwtl
dec
xor
fnstsw
repz
int
and
mov
das
call
xor
incb
in
xlat
popa
cmpsl
jnp
mov
cmc
pop
push
mov
or
adc
mov
outsb
cmc
lret
push
xor
cmp
nop
movsb
push
mov
mov
jl
cmp
mov
adc
inc
pushf
xor
push
cltd
inc
pop
int3
sbb
pop
insb
in
in
das
push
jg
mov
add
pslld
mov
ja
enter
sub
dec
jbe
add
mov
mov
sub
mov
cmove
adc
daa
and
lods
mov
rorl
out
ja
pop
shll
dec
in
adc
sub
sbb
adc
xor
insb
sbb
push
repz
stos
ror
dec
in
mov
cmp
mov
outsb
pop
add
adc
insl
leave
loop
out
cmpb
push
lahf
fcmovne
xchg
jge
mov
mov
stos
negl
dec
jno
cmpsl
cs
test
xor
push
push
push
cmc
push
pop
mov
jle
cmpsl
jg
jb
and
into
push
mov
or
sbb
sub
sbb
movsb
sbb
divb
inc
pushl
cmpsb
ds
push
xor
fisubrl
cmp
jl
push
subl
negl
pusha
xchg
cltd
mov
data16
clc
aaa
xchg
into
sbb
or
xchg
dec
scas
mov
les
push
and
aam
lods
out
lods
int3
call
mov
pop
xor
sahf
add
mov
cwtl
pop
and
cmp
xlat
adc
adc
or
xchg
lea
inc
pop
in
xchg
ja
andl
and
cmp
loopne
xchg
repnz
stc
jnp
and
jo
sbb
scas
inc
loop
in
aam
mov
xor
cmp
pusha
mov
xor
test
adc
sub
lret
add
fwait
mov
mov
xor
dec
cmp
cs
in
cmc
mov
daa
push
call
xor
ret
mov
movsl
movd
pop
aaa
fistpll
iret
nop
scas
push
push
jg
iret
adc
out
loopne
jg
leave
shrl
mov
mov
mov
dec
pop
test
stos
fdiv
in
push
lahf
add
adc
and
mulb
inc
adc
cwtl
outsl
mov
mov
ds
pop
test
cmpsb
inc
push
insb
lea
sbb
imul
inc
mov
pop
vmwrite
push
sahf
pop
mov
inc
fisubl
mov
lock
and
in
dec
and
cmc
jae
mov
sub
repnz
das
mov
mov
inc
ljmp
std
xchg
pop
testb
mov
mov
aaa
insb
cmp
popa
loop
sbb
or
insb
mov
or
enter
and
and
mov
std
adc
xchg
mov
daa
pop
ret
fs
adc
mov
push
movsb
cmpsb
jno
dec
xor
add
lock
data16
push
sub
push
cmpsl
sub
fwait
arpl
inc
mov
xchg
je
stos
mov
fistpl
fisubrs
sub
lcall
inc
in
lods
mov
or
js
in
mov
xchg
cmpsl
fildl
lret
cmp
jmp
mov
lods
in
xorl
dec
js
push
cmp
jbe
clc
dec
jge
add
push
jle
sti
clc
cmp
pop
sub
lcall
cmc
or
pop
mov
push
icebp
jg
jo
lods
data16
inc
dec
hlt
sub
jl
lahf
adc
cld
int3
cltd
shrb
loope
cmpsb
jae
pop
je
xchg
xor
jle
and
lods
imul
mov
xor
scas
cmp
push
cmpsb
in
fnsetpm(287
jg
mov
pusha
mov
andl
sbbb
mov
aam
xor
mov
bound
lret
ja
hlt
lods
push
sbb
xor
mov
shlb
jmp
inc
push
jl
test
pop
mov
roll
rcrb
mov
das
add
inc
cs
or
and
dec
cmp
and
notb
aam
jmp
adc
dec
int3
mov
jns
aam
stc
add
push
loopne
daa
or
jb
push
xlat
and
mov
lret
mov
imul
fprem
push
cmp
dec
sahf
fsubrs
mov
pop
imul
add
jle
pop
sbb
test
add
enter
xchg
push
adc
iret
subl
enter
add
roll
jge
ret
rcl
jl
fcmovnbe
stc
xor
cmpb
cmpsl
adc
mov
inc
cmpsb
sahf
into
jg
stc
sahf
pop
test
cmp
pusha
insl
add
pop
add
sub
mov
sub
lret
dec
jae
push
push
jo
fdivrp
xor
jl
pop
add
lret
xor
cmpsl
adc
das
push
mov
jecxz
arpl
int
inc
cmp
pushf
sub
fisttps
sbb
aad
test
fs
in
iret
gs
mov
xchg
sbb
jle
jle
cmp
jecxz
out
aas
mov
xchg
xchg
or
xchg
dec
cmp
loop
xor
mov
push
cmp
dec
jle
or
and
sbb
xlat
sarl
aas
data16
push
mov
fiadds
psrlw
xchg
loope
cli
outsl
xor
and
inc
and
das
mov
adcb
leave
pop
fst
sbb
cmpsb
push
jle
lahf
sarl
insb
xchg
xchg
push
popf
push
dec
xchg
sub
jle
sbb
shr
test
pusha
imul
dec
mov
add
dec
cmpsb
stc
xor
negl
aaa
or
sub
inc
shlb
and
shr
fildl
mov
xor
rcr
fisubrs
cmp
inc
push
test
or
push
xor
xchg
test
pop
repnz
xor
aas
xor
ret
pushf
pusha
aas
mov
test
push
and
mov
in
scas
sbb
mov
ret
rcr
cmp
add
fsubr
cmp
std
adcl
sub
ficomps
out
dec
std
pop
xchg
std
cmp
loop
rorb
mov
int
push
rcrl
mov
lret
rep
aaa
pop
sar
ljmp
xor
push
lods
insb
adc
lret
lods
jge
sbb
cmp
test
mov
pop
rcrl
test
shld
cmp
movsl
xor
mov
add
shlb
insb
push
loop
rcrl
mov
adc
xchg
push
ss
imul
mov
sbb
pop
aad
stc
out
cmpsb
into
inc
xor
mov
mov
jbe
out
lret
clc
jo
or
xor
scas
jecxz
stos
inc
sbb
and
pusha
mov
push
int
xchg
xor
mov
jo
in
adc
repz
in
in
scas
push
fsubs
mov
stc
mov
daa
sub
jb
lcall
stos
sbb
pop
les
xchg
lock
fidivrs
push
rcrb
mov
std
dec
pop
add
out
fstpl
sub
scas
xor
fs
repnz
ja
lods
cltd
push
mov
cmp
ja
cmc
inc
jbe
pusha
inc
call
inc
rcr
cli
ret
xchg
and
inc
movsl
and
enter
insb
mov
jno
inc
sti
faddl
jae
pusha
aad
cmpsl
mov
pop
fs
xor
aam
dec
in
xchg
pop
adc
push
lods
outsb
jo
loope
sbb
incb
xor
dec
leave
fstp
xor
fldt
push
std
jne,pt
adc
mov
icebp
jnp
addr16
add
ja
inc
dec
dec
js
or
enter
push
das
xor
aam
dec
or
add
testb
loop
jns
push
mov
frstor
mov
les
aad
frstpm(287
pushf
and
push
adc
pop
outsb
xchg
gs
xchg
dec
push
xchg
decb
or
or
push
cli
and
fstps
xchg
inc
dec
rcr
movsb
je
and
jecxz,pt
test
xor
mov
add
inc
mov
fisttpll
lea
outsl
xor
xchg
cmp
scas
pop
xchg
sub
mov
add
or
out
aam
jnp
cmp
lock
cmpsl
cwtl
adc
sbb
std
adc
adc
mov
xor
daa
or
pop
sub
mov
push
popa
and
pop
mov
enter
cmp
lock
div
mov
shll
out
lret
mov
imul
stos
pop
ljmp
fbstp
adc
mov
fistl
mov
jae
jno
push
in
iret
rorl
dec
mov
test
inc
cwtl
mov
arpl
out
xchg
mov
dec
ds
xor
add
xor
jecxz
and
movsl
sbbb
icebp
shrb
push
mulb
mov
sbb
addr16
or
imul
sub
cmp
pop
jne
add
or
loop
or
pop
pop
shl
scas
stos
imul
std
aam
jl
insb
or
jmp
or
and
mov
xor
xchg
mov
test
int
sbb
shll
push
jne
add
sub
xor
jne
adc
mov
push
mov
xchg
dec
repnz
inc
dec
xor
adc
popa
aam
push
mov
jle
imul
shlb
push
fnstsw
fndisi(8087
adc
xchg
dec
sbb
pop
pop
stos
xchg
push
mov
decl
cmp
mov
lods
pusha
testl
push
xchg
outsb
iret
push
dec
or
inc
push
enter
and
cwtl
xchg
jnp
pop
negl
pop
mov
push
pop
xchg
pop
jnp
aam
in
xor
imul
mov
arpl
sub
xchg
and
xchg
pop
lds
adc
pop
stos
mov
repnz
add
cs
push
sub
jl
fwait
mov
xchg
jle
lods
pop
lahf
into
mov
sbb
ss
push
repz
push
mov
rcll
xor
loop
icebp
daa
mov
scas
dec
bound
rcrb
and
stos
sbb
jmp
or
pop
adc
cs
aaa
xor
lds
movsl
in
lcall
xchg
mov
dec
pop
loop
xor
cmp
cmp
dec
insl
out
stos
cmc
sub
mov
test
roll
dec
inc
adc
cmpsl
shrl
fists
jl
shll
stos
lods
ds
xor
add
cmp
mov
mov
jecxz
shrb
pop
or
shlb
mov
aaa
in
dec
mov
pop
pop
out
xor
xor
movsl
xchg
loopne
pop
and
xor
call
fwait
jns
push
test
jle
imul
rclb
cli
clc
xchg
xchg
sbb
xchg
or
iret
xchg
outsl
adc
lods
rcrl
xor
sub
and
cmp
dec
push
out
loope
ljmp
mov
loope
push
push
pop
push
push
inc
xor
cmp
movsl
sbbb
dec
data16
out
lcall
xchg
ret
lods
lock
cmp
mov
outsl
jb
mov
mov
sub
imul
rcr
pusha
push
shll
out
add
movsl
add
js
mov
pop
int3
jno
mov
jl
aas
gs
rcll
xor
fldt
adc
xchg
sub
aaa
dec
dec
pop
loope
dec
dec
lea
push
dec
ja
jmp
pop
adc
cmp
jbe
out
mov
cmc
jb
es
xor
leave
dec
inc
push
ret
adc
lods
cmp
popa
pop
lret
jae
mov
iret
jge
fbld
inc
and
fdivr
dec
adc
mov
push
inc
mov
inc
imul
and
sub
push
stc
cmpb
cli
loop,pt
fisttps
push
adc
cmc
stos
push
in
movsb
into
cwtl
fdivp
xchg
cmp
pop
mov
je
loope
inc
daa
insl
setne
pop
mov
cmpl
rcll
jbe
ds
insb
xchg
popf
inc
stos
and
lea
mov
dec
mov
cltd
sub
mov
push
lahf
jle
imul
mov
adc
movsb
fwait
shl
and
pop
andl
jmp
xchg
mov
cmpb
xor
push
lds
xchg
scas
adc
das
clc
mov
dec
push
bound
sbb
stc
cmp
jno
aaa
loope
push
inc
out
sub
jg
rolb
xor
shll
test
sub
mov
stos
sbb
out
int3
jnp
inc
mov
sub
andb
in
stc
movsl
test
push
jle
fnstenv
mov
push
scas
addr16
cld
pop
or
add
sub
jbe
int
imull
pop
xorb
mov
inc
sbb
and
adc
mov
ja
xor
fisttpl
idivl
xor
aaa
ficomps
mov
add
push
int3
lds
lret
js
cmp
jl
repz
mov
lea
mov
sbb
aam
jb
test
cld
jo
ficoml
mov
fldt
push
push
sub
dec
or
mov
scas
cmp
cld
decb
sbb
pop
mov
jle
movsl
sbb
mov
mov
mov
dec
and
das
adc
adc
xor
insb
lds
add
daa
and
fs
ficoms
mov
into
jmp
adc
jl
aad
mov
decb
loope
ja
div
movsl
aas
popf
inc
pop
mov
push
stc
popa
or
dec
dec
mov
in
into
jecxz
jnp
call
test
xchg
pop
ss
dec
mov
adc
add
push
xchg
lcall
loope
add
in
cmpl
out
loopne
jno
popl
xchg
lret
dec
imul
sub
mov
jp
cltd
xchg
inc
mov
dec
test
test
jp
mov
add
mov
cmp
and
fdiv
xchg
pop
mov
jge
fwait
jno
movsb
mov
repz
sti
mov
mov
mov
insl
adc
mov
dec
in
xchg
add
inc
jg
and
add
sbb
dec
jle
stos
mov
lea
dec
xor
in
in
js
movsb
adc
mov
insb
or
sti
stc
sbb
out
mov
cli
sub
mulb
adcb
aam
mov
das
push
xor
xor
les
pop
daa
outsl
mov
pusha
lods
mov
xchg
inc
mov
dec
in
and
mov
repz
dec
pop
out
aam
cmpsb
jo
inc
je
or
hlt
xchg
ret
cwtl
xor
fs
aaa
js
inc
shrl
scas
divl
sarb
roll
add
sub
sahf
mov
icebp
ja
jl
pop
orb
loope
repz
mov
test
les
cmc
xchg
sbb
popa
dec
push
jne
pushf
xchg
mov
xchg
popa
bound
pop
push
xor
mov
out
mov
test
in
shlb
cltd
push
mov
jmp
repnz
repz
xchg
jno
mov
adc
adc
lods
or
cltd
push
xorb
xchg
scas
nop
dec
outsb
iret
push
gs
mov
jnp
jo
push
ret
imul
sarl
std
popf
pusha
in
fcoml
fldcw
mov
loopne
jmp
sti
pusha
jg
fwait
sub
mov
bound
ja
adc
cltd
fstp
add
iret
pop
enter
je
inc
mov
or
add
sbb
or
mov
ret
cmp
dec
push
popf
sub
pushf
inc
stos
ja
fdivrl
jmp
jno
lea
jbe
push
arpl
jns
add
xor
xor
cmp
scas
add
arpl
mov
or
aaa
pop
xor
push
sahf
mov
mov
sbb
cmp
cld
addl
cmp
mov
sbb
movsb
scas
jl
xchg
inc
xchg
xchg
not
ret
push
push
jne
adc
aas
pop
xchg
sti
repz
xchg
sbb
pop
stos
and
mov
sub
imul
shll
jnp
je
push
dec
ss
cmp
add
repnz
push
cmp
jne
mov
jbe
xchg
add
aaa
xchg
lahf
scas
aas
pop
xor
test
adc
hlt
dec
xchg
mov
sahf
pop
sbb
cmp
add
inc
call
iret
cmpl
or
jae
rcrb
inc
push
adc
pop
imul
outsl
push
xorb
pop
sbb
push
pop
xor
jmp
movsl
outsb
andl
mov
addr16
mov
ret
and
and
mov
leave
negl
aas
jne
adc
out
xlat
rorl
add
nop
mov
push
outsb
fimull
adc
sub
xchg
and
lods
mov
mov
fcoml
and
cwtl
ja
insl
pop
arpl
or
popa
ss
and
sub
lods
hlt
xor
jne
mov
aad
aaa
xor
jp
out
pop
mov
shr
clc
loope
adc
add
xor
and
pop
inc
push
xchg
cwtl
subl
icebp
clc
loope
adc
add
xor
and
pop
inc
push
xchg
test
enter
pop
rcr
shr
cmp
or
sbb
fdivs
cmp
dec
push
dec
inc
push
xchg
les
enter
call
adc
stos
xorb
push
aas
fnop
mov
push
mov
sub
andl
push
mov
push
pushl
movl
movl
movb
movl
movb
call
andl
mov
mov
push
push
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
pop
leave
ret
lds
cmc
cmp
cmp
xor
push
mov
gs
add
fdivs
or
sbb
push
movsl
pop
sar
mov
jne
ja
pop
enter
repnz
in
js
xor
test
aam
out
sbb
add
dec
movsb
popa
mov
mov
movsl
dec
subb
dec
cmp
pop
fwait
lahf
mov
jbe
std
mov
dec
and
outsl
pop
xor
xchg
movsl
cmp
xchg
pop
fmull
mov
jae
insl
imul
pop
sub
loopne
or
call
pcmpgtd
cmp
inc
sub
dec
cmpsb
imul
jmp
cwtl
lcall
fstp
daa
and
negl
fadds
or
adc
push
popf
fwait
int3
sbb
clc
add
lods
cmp
mov
in
xorb
movsb
mov
aas
mov
clc
cmc
lea
enter
cmp
or
je
push
movsl
loopne
pop
inc
sub
jl
insb
mov
mov
cmpsl
dec
xorb
xchg
ror
sub
push
fsubs
adc
dec
lahf
pop
sub
lcall
sub
in
add
ja
jne
adc
pop
lds
aad
sbbl
dec
movsl
pop
mov
inc
mov
jne
add
fdivs
or
sbb
push
movsl
pop
mov
inc
mov
jne
add
fdivs
mov
push
pop
push
insb
inc
lds
add
stos
jle
sbb
xlat
sub
push
xchg
aad
dec
or
xor
movsl
fcmovnbe
push
rcl
fsubl
fisubrl
icebp
jg
int
aas
inc
ljmp
dec
xor
xchg
in
lds
push
repnz
adc
test
inc
int
not
lods
push
mov
mov
mov
scas
fmull
xchg
iret
cmp
or
mov
add
pop
push
cmp
sahf
out
mov
outsl
inc
testl
mov
jecxz
xchg
fcompl
lahf
lret
pop
or
lds
dec
movsb
je
adc
mov
inc
rcrl
loope
lods
test
lcall
dec
adc
lods
lods
cmp
add
pusha
mov
sbb
ficoms
adc
sub
sub
add
sub
dec
test
add
dec
push
push
mov
push
or
inc
ret
in
rcll
adc
loope
push
aas
push
shlb
cmp
divb
jno
and
cmp
push
push
outsb
adcl
into
jmp
pusha
in
mov
shrb
mov
push
icebp
xor
or
xlat
jle
inc
jle
ja
data16
mov
out
nop
xor
or
adc
ljmp
into
iret
repz
js
in
pop
test
push
cmp
fldcw
cmp
dec
lods
loopne
cld
mov
scas
mov
and
mov
repz
xchg
add
das
xchg
xor
jmp
sub
add
clc
or
iret
pop
mov
imul
jmp
loop
mov
mov
cld
lods
in
cmp
push
rolb
stos
outsb
adc
in
jne
or
add
adc
jne
cmp
mov
xchg
push
popf
sub
jbe
push
adc
pop
shlb
mov
fld
adc
dec
in
cwtl
movsl
pop
fbld
shr
ret
add
xor
mov
sub
xor
idivl
adc
jp
jp
dec
jne
inc
jmp
and
int
call
in
mov
mov
xchg
loope
jns
scas
mov
stc
sbb
mov
cmpsl
aad
sbb
test
je
les
sub
lcall
bound
cwtl
sub
ffreep
push
sbb
xchg
movsb
in
addr16
ror
dec
call
incb
push
lret
xlat
repz
xor
ret
out
and
das
cmp
out
fnstsw
push
sbb
mov
mov
notl
mov
push
aam
xchg
hlt
int
mov
rcrl
icebp
jne
mov
push
xlat
inc
mov
push
outsl
jnp
andl
lret
negb
jmp
cmpl
mov
push
pop
insb
jmp
jle
mov
movsl
pushf
or
ljmp
stos
fs
scas
xchg
aad
xchg
push
pop
cld
jae
or
bound
xor
les
and
mov
xchg
imul
fsubrs
lcall
and
mov
fimuls
sbb
mov
mov
clc
jnp
shll
cmp
pop
cwtl
mov
mov
inc
xor
pop
push
jle
xor
loop
pop
loopne
iret
fists
lods
inc
inc
lahf
mov
jle
or
mov
sub
loop
loop
aad
shl
mov
inc
pop
std
mull
test
lcall
jecxz
jecxz
add
jne
inc
jge
jnp
pusha
sub
ljmp
popa
cs
shl
ss
pop
imul
sar
jl
mov
mov
mov
push
fs
stc
jmp
adc
jbe
dec
test
into
jmp
and
sbbl
aad
jae
push
sbb
mov
jmp
fnsave
pushf
jae
lea
mov
jb
mov
and
int
outsl
mov
aas
clc
testb
movsb
sbb
mov
xchg
mov
add
mov
add
push
pop
in
repnz
mov
mov
aam
jmp
addb
inc
adcb
adc
jae
cmp
adc
lahf
roll
inc
jno
mov
into
sbb
add
or
or
xor
xor
mov
pop
mov
mov
mov
or
rclb
pop
loopne
sub
mov
popa
stos
push
xor
jecxz
jno
cmpsl
jl
pop
dec
or
cli
aad
cmp
mov
jmp
mov
jg
jecxz
cmp
sub
xchg
sub
outsl
pop
ss
inc
adc
push
aas
loope
jo
mov
loopne
push
repnz
rorb
movsb
push
popf
cmp
ljmp
ja
or
xchg
inc
imul
lret
mov
mov
cmpsl
cmp
jne
or
je
fdivrs
adc
out
jne
enter
mov
xchg
pop
cmp
mov
mov
jns
inc
or
ljmp
mov
test
add
mov
popf
or
sbb
sarb
inc
scas
lcall
jno
jmp
iret
ja
out
mov
sub
mov
adc
in
pop
mull
push
in
cmpsl
jb
xor
sub
es
sbb
mov
or
stos
in
sub
lret
pop
sbb
mov
insl
out
pop
loop
sti
ret
pop
pop
inc
sub
push
lret
push
xchg
movsl
pop
aam
insl
jns
xchg
pop
int3
sarl
iret
fildl
lret
lea
cmc
cmp
iret
stc
adc
je
xchg
sub
movsl
sbbl
addl
test
pop
pop
fucomp
int3
push
int3
mov
ds
push
mov
xchg
mov
outsl
test
sahf
pop
adc
pushf
pusha
das
movsl
xor
aam
pop
dec
mov
ljmp
sarl
xchg
pop
pop
repz
adc
dec
mov
pop
mov
mov
cmp
aad
lock
mov
cmp
shll
sub
jle
mov
and
adc
dec
push
sbb
xor
aad
adc
sub
addr16
in
and
mov
fisttpll
imul
lds
nop
inc
das
mov
mov
shll
testb
sbb
inc
and
cmp
push
adc
stos
insb
daa
aad
sbb
cmpsl
jo
pop
stos
and
inc
rol
jge
decb
dec
xchg
popf
jle
es
ljmp
xchg
pop
nop
iret
cmp
inc
sarb
int3
mov
adc
push
mov
jnp
cld
sahf
mov
lea
xor
popa
add
loopne
mov
or
addr16
icebp
arpl
sub
adcl
std
dec
cmp
aas
sbb
jo
stos
dec
test
mov
adc
mov
ret
das
mov
aas
mov
mov
insb
mov
lock
and
inc
mov
sbb
jmp
jae
in
sbb
call
jge
sbb
test
fidivl
xorb
pop
mov
push
imul
loopne
paddd
push
push
sar
fldenv
jle
aam
mov
sti
push
ss
daa
sub
aam
xor
inc
cmpsb
movsl
lds
insl
in
xchg
add
data16
call
cvtdq2ps
mov
add
or
jnp
xchg
xor
mov
dec
lahf
adc
add
push
sub
aaa
cwtl
repz
out
fadds
fs
sub
cltd
aad
js
mov
test
sub
push
jns
out
mov
daa
cld
orb
std
push
pop
popa
in
push
sarl
lret
scas
ja
sbb
sbb
inc
jno
inc
mov
pusha
xchg
jnp
inc
push
mov
mov
xchg
xchg
andl
scas
push
lock
mov
rorl
test
mov
adc
sahf
xlat
cwtl
mov
cwtl
arpl
mov
clc
sarb
mov
rcll
loop
mov
lret
jne
xchg
xchg
addr16
jae
mov
fs
and
in
out
sbb
and
xchg
inc
ret
in
jle
sar
mov
mov
jbe
cmp
jno
rol
int3
repz
fsubr
testb
jge
cltd
mov
dec
icebp
mov
mov
sti
test
sbb
push
in
icebp
repz
xchg
addr16
sti
jne
dec
lret
xor
shll
aam
icebp
pop
cmp
mov
ja
jnp
cli
lret
fdivs
push
fstl
cmp
adc
jne
movsb
aaa
push
jmp
shll
sar
stc
hlt
gs
imul
adc
inc
fstl
addr16
push
fwait
test
push
mov
jb
mov
aas
lret
inc
cld
inc
rolb
decl
les
loop
rep
add
add
pop
xor
scas
inc
push
in
add
xchg
sbb
mov
stc
and
ds
imul
std
sbb
subl
dec
or
stc
out
pop
dec
push
lock
xchg
cld
in
bound
fstpt
insb
pop
loopne
rol
mov
or
mov
push
out
pushf
mov
push
mov
or
lahf
and
sub
and
notl
fnstcw
dec
dec
mov
inc
ja
pop
aam
add
lods
jno
fwait
repz
int
dec
mov
jle
lea
add
cwtl
and
xor
push
sub
jl
sub
cmpsb
add
mov
mov
jge
jp
lods
fs
jae
mov
xchg
sbb
sbb
jp
movb
sbb
push
cwtl
in
loope
inc
je
fdivrs
jp
push
xchg
cmp
fsubrl
push
push
mov
mov
jbe
dec
cmp
jbe
xor
cmp
push
cmp
mov
push
adcl
cmpsb
ds
fistl
add
xchg
hlt
in
and
jle
imul
push
mov
adc
cld
pop
lcall
or
ja
or
sbb
add
iret
dec
aaa
pop
lods
outsb
xchg
ret
adc
cld
or
fisttps
lahf
dec
add
iret
fwait
outsl
sti
int
ret
cld
mov
fdivrl
jp
sub
dec
popf
daa
dec
popf
inc
jg
or
mov
ds
in
or
cmp
loopne
xchg
mov
mov
jbe
push
lea
ret
and
xchg
dec
test
jo
lock
inc
std
push
rcrb
push
gs
into
pop
pop
rcll
jp
arpl
mov
adc
jo
dec
and
outsl
xlat
ficomps
mov
sub
int
cmp
xchg
loop
pop
pavgb
mov
adc
mov
mov
fldl
mov
push
push
fidivl
mov
jb
fcmove
jne
dec
mov
pop
cs
aaa
cld
shlb
push
scas
push
jae
add
jmp
mov
and
rcll
inc
push
mov
ljmp
subb
pop
mov
clc
push
pushf
fisttpl
adc
or
adc
stos
out
or
mov
push
ljmp
ficomps
mov
xor
sbb
mov
xor
es
jns
std
mov
outsb
push
shlb
ja
push
popf
dec
dec
je
fistpll
and
pop
sbb
push
jo
test
inc
jl
data16
pop
xchg
fidivrs
cld
mov
orl
sub
mov
xlat
mov
sti
jae
xor
das
movntq
out
xchg
sbb
push
in
push
pop
pop
push
push
and
sub
cld
and
pop
int3
mov
fsts
xor
jb
pusha
xor
mov
xchg
inc
ljmp
mov
add
sti
adc
cmpsb
inc
sar
inc
mov
adc
test
mov
mov
lret
and
lods
gs
push
repnz
push
lret
jge
data16
sbb
repnz
push
add
call
aam
push
insl
add
sbb
push
insb
lods
fcmovnu
inc
repz
mov
dec
or
pushf
aaa
mov
add
pop
ficoms
int
mov
sti
jbe
xchg
xchg
sub
nop
testb
push
shrb
call
and
cmp
jge
pushf
mov
gs
mov
lcall
inc
jmp
push
or
add
jo
pop
or
inc
mov
mov
out
push
mov
aam
xor
pop
mov
and
cs
mov
xchg
jbe
lret
out
fwait
adc
inc
fsubrs
repz
sub
dec
out
xchg
jne
xchg
adc
popa
nop
sarb
jb
movsb
pop
jns
pushf
dec
in
outsl
xchg
jno
addr16
inc
je
pop
insl
add
push
xor
mov
mov
xchg
or
cmp
fidivl
mov
cwtl
ss
lcall
push
jg
daa
jle
sti
xor
adc
push
push
lods
into
lods
pop
or
xchg
xor
fs
ret
in
sar
das
cmpsl
add
rcl
xor
jg
pop
imul
pop
ja
bound
imul
int3
jp
test
outsl
inc
sub
lock
lds
sub
outsl
push
add
xchg
sar
pop
push
jge
int3
insb
clc
jnp
xor
mov
and
xchg
push
sub
adc
jp
aaa
push
and
cmp
in
xlat
push
mov
rorl
mov
jge
inc
or
cmp
fstp
xor
jae
push
sbb
aas
adc
repz
sti
std
lcall
jb
lret
es
nop
and
adc
cmpsl
dec
pop
scas
mov
xchg
cld
jb
xlat
and
dec
push
mov
sbb
fisubrs
es
jno
sbbl
or
rcr
sub
mov
push
cmp
dec
jmp
lret
daa
jmp
cli
lods
jg
cld
addr16
and
ficoml
sub
and
ljmp
cmp
aad
jne
mull
sub
add
and
jae
xorb
daa
sub
jge
pusha
movsl
daa
fdivrs
ret
inc
fsub
inc
xlat
lds
stc
ljmp
lcall
jmp
clc
rclb
mov
add
ficompl
or
repnz
inc
and
or
test
pusha
icebp
adc
mov
daa
mov
pop
push
or
pcmpeqd
mov
stc
sub
mov
cld
shrb
sub
xchg
cmc
rol
rcrb
and
mov
push
sbb
pop
inc
jmp
or
pop
ljmp
jbe
pop
inc
negb
xchg
dec
lods
fdivp
xchg
fistpl
lea
jns
and
mov
dec
inc
inc
add
lods
add
int3
jl
lods
mov
dec
inc
jl
sub
xchg
test
daa
sbb
push
in
push
sbb
add
nop
cmp
inc
enter
jno
mov
xlat
sub
and
movsl
xchg
and
sub
add
cmpsb
mov
ljmp
lea
mov
ret
mov
imul
outsb
jle
lock
ret
xchg
iret
in
dec
inc
mov
sub
and
cld
cltd
mul
mov
mov
push
xchg
push
incb
dec
jl,pt
or
mov
scas
ret
fisttps
jns
hlt
stos
cld
imul
sbb
jo
cmpl
add
push
lret
int
jecxz
fsub
xchg
add
or
add
mov
int3
add
mov
into
lea
jb
lods
data16
mov
mov
sbb
push
inc
jl
leave
pop
ficoms
cs
les
or
and
jecxz
jmp
jge
add
sub
stos
and
inc
jb
lret
daa
jno
xor
sub
xchg
mov
and
xchg
ja
push
in
je
push
int
xor
push
sahf
outsb
stos
hlt
and
cmp
dec
and
sbb
imul
jle
dec
aas
lds
push
push
aam
xor
mov
ret
es
dec
pop
push
into
push
jmp
jb
mov
mov
or
jne
jb
dec
and
xor
cli
jae
push
ret
pop
mov
xchg
push
das
and
dec
xchg
and
movsl
sbb
arpl
fisubl
int3
dec
cmp
dec
in
mov
stos
ficoms
cs
adc
jl
cltd
xor
lret
and
movsb
bound
lods
jecxz
lock
jecxz
scas
stos
incb
lock
imul
filds
pop
xor
mov
icebp
icebp
cmpb
and
dec
rcrl
mov
cltd
mov
inc
push
call
imul
push
test
mull
jnp
adc
pop
jb
sbb
js
bound
cmp
xchg
and
int3
rclb
movl
mov
mov
aad
jle
inc
jg
invd
xchg
nop
mov
je
nop
mov
popf
inc
push
in
fldl
movl
cs
loopne
in
or
jmp
ja
loope
sbb
mov
mov
sbb
cld
cltd
mov
clc
push
sbb
push
in
call
mov
adc
in
lret
mov
or
sub
insb
arpl
or
or
mov
dec
xchg
fcomp
push
rolb
xchg
imull
pop
mov
inc
mov
dec
out
sub
jbe
inc
lret
sbb
addb
push
mov
lret
jge
lcall
fdivs
divb
or
int
push
fcompl
ret
xchg
dec
xchg
and
sbb
add
mov
ds
fstl
popf
ret
ja
jl
inc
dec
pop
add
lods
movsb
adc
jo
test
cmp
inc
xchg
int3
jne
inc
pop
or
cli
test
mov
lret
push
cwtl
pusha
jl
cmp
movsb
cmp
sbb
test
mov
adcb
pop
jno
rcrb
xlat
mov
jb
in
in
insb
push
je
sub
aaa
rorb
divb
out
cmp
pop
lcall
test
es
popa
andl
push
mov
jo
aas
and
pop
push
rcll
imull
aas
xlat
mov
push
pop
jmp
and
mov
sbbb
sub
inc
test
mov
movsb
loope
jle
ja
iret
scas
adc
push
jbe
cli
cmp
push
arpl
push
pop
mov
jbe
xchg
inc
sbb
das
insl
scas
insb
loop
hlt
push
sub
adc
pop
lds
nop
imul
sbb
or
in
push
ljmp
scas
into
mov
sbbb
ret
mov
int3
push
jge
sbb
xchg
pop
pop
filds
mov
add
scas
add
sub
cmp
fmuls
cmp
lods
lds
mov
cmp
cmp
and
dec
and
adc
ljmp
jbe
xchg
mov
cld
loope
mov
out
movsl
inc
sbb
sbb
bound
adc
dec
addr16
popf
mov
hlt
pop
xchg
push
out
lcall
add
out
mov
out
mov
push
sbb
out
jg
cmp
mov
add
sub
pusha
inc
das
movsl
enter
xlat
and
push
das
sub
dec
xchg
lahf
fcomi
mov
pusha
mov
sbb
xor
lds
movsb
add
mov
adc
cwtl
lahf
dec
mov
ss
ret
sub
fsubrs
cmpsl
adc
mov
fldl
outsl
dec
iret
test
jb
les
repnz
mov
mov
cli
std
enter
xlat
mov
and
int3
add
add
mov
add
repnz
nop
adc
mov
std
mov
xor
cmp
cli
push
push
gs
imul
mov
je
repz
push
mov
call
or
push
cld
push
inc
ja
pop
pop
add
daa
es
js
lods
shl
adc
cmp
jecxz
movsl
cmpl
insb
lret
xor
into
xchg
ds
ret
repnz
jmp
ds
xor
les
iret
cmp
ss
sbb
enter
ret
push
add
mov
and
jecxz
shl
cmc
test
adc
incb
clc
cmp
sub
jl
imul
sbb
lret
lret
mov
jo
push
mov
mov
and
jg
xchg
cltd
push
gs
outsl
adc
roll
mov
jnp
fsts
xor
std
repz
daa
cld
pop
jno
mov
test
dec
movsl
pop
mov
inc
mov
jne
add
fdivs
or
sbb
push
movsl
pop
mov
inc
mov
jne
add
fdivs
sbb
sbb
imul
mov
jno
add
call
roll
test
dec
movsl
fdivs
inc
inc
jmp
gs
add
pop
daa
dec
inc
loope
icebp
pusha
shll
mov
cmp
loopne
icebp
push
andb
xor
loope
icebp
pusha
shll
mov
xor
shlb
loopne
lock
inc
inc
nop
xor
loope
icebp
pusha
shll
mov
xor
mov
aas
andb
aad
fisubs
lods
xor
pusha
xchg
sbb
leave
sbb
xchg
mov
sbb
sbb
test
inc
icebp
mov
or
fndisi(8087
cmp
pop
pushl
int
cmp
mov
xchg
push
mov
pop
xor
add
jg
pop
outsb
push
shlb
loopne
xor
lds
in
aam
xchg
mov
xor
popf
push
mov
xchg
shll
je
adc
ds
fcompl
adc
shlb
sub
lea
jb
and
imul
fld
out
loop
lods
or
sbb
xor
scas
shlb
sbb
out
mov
push
icebp
pusha
shll
mov
xor
loopne
lock
andb
xor
loope
mov
sbbb
add
lds
in
adc
and
jae
je
lea
mov
loop
hlt
pop
bound
loop
lock
lds
mov
sbb
dec
xchg
adc
shlb
loopne
lock
andb
xor
loope
icebp
pusha
shll
mov
xor
loopne
lock
andb
xor
loope
fscale
scas
pop
push
push
bound
jb
sub
les
into
push
jae
push
mov
mov
add
inc
dec
sub
pop
inc
sbb
add
fcmove
enter
sub
mov
mov
sbb
xor
dec
and
and
mov
jnp
inc
ret
push
dec
ds
jecxz
loope
gs
mov
insb
dec
sub
and
inc
dec
jae
movsb
mov
cmpsl
scas
outsl
xchg
in
and
mov
jne
jmp
dec
mov
adc
setp
mov
imul
iret
data16
je
cs
jle
xchg
xor
xchg
scas
mov
add
jp
fcompl
loope
ds
add
gs
dec
psrad
or
or
or
pop
or
mov
cmp
ljmp
jbe
dec
shrb
in
xor
stos
shlb
mov
ficompl
dec
or
dec
rolb
inc
xor
std
fidivrs
insb
jo
aad
inc
mov
mov
mov
ss
in
mov
mov
cli
add
push
test
dec
loopne
in
xchg
arpl
lock
dec
xchg
pop
cmpsb
or
push
push
xchg
dec
xor
ds
mov
or
xchg
ja
outsl
dec
fcmovbe
test
stc
fbld
mov
in
cli
mov
inc
je
xor
push
shll
imull
push
pop
outsl
das
stc
cmp
repnz
jbe
or
out
dec
cmp
call
sub
fs
inc
mov
sbb
aam
mov
push
sub
outsl
fstpl
mov
push
lret
repnz
jle
repz
cmp
imul
ret
mov
pop
xor
shll
enter
shrl
or
lahf
mov
sub
push
mov
outsl
scas
into
sahf
out
rcl
jecxz
push
add
mov
fdivl
mov
mov
or
testb
jne
inc
imul
push
xor
out
icebp
aaa
pop
addb
lea
xchg
add
and
inc
cmp
lods
in
andl
test
cs
push
cmp
int3
inc
cwtl
lods
cmp
sbb
out
cmpsl
add
cs
outsb
cltd
or
mov
pop
cmpsl
movsl
jg
xor
mov
mov
fstl
popf
inc
daa
movsl
ficompl
jg
data16
push
fld
xchg
and
or
adc
mov
outsb
loop
adc
lods
out
insb
sbb
jae
loop
lods
movsb
sub
nop
mov
add
sbb
cmp
pop
test
lds
lea
add
jp
les
mov
ror
mov
cmpsl
adc
inc
sub
rcll
mov
jne
fprem
mov
jp
mov
mov
addl
push
out
iret
and
ja
mov
push
mov
sbb
jae
div
std
out
scas
jl
push
mov
cld
lret
outsl
and
dec
sbb
imul
jae
jns
stos
int
mov
jp
mov
fdiv
add
sub
pop
in
imul
inc
aas
jp
into
adc
out
dec
inc
subl
dec
in
cs
arpl
cld
push
pop
test
clc
add
pop
lret
rorb
ja
mov
sub
mov
sbb
or
incb
cmp
shrl
mov
pop
fimull
sbb
mov
fisttpll
fwait
addr16
push
adcb
inc
xchg
and
jle
divb
icebp
xor
and
aas
mov
ds
dec
pop
out
notb
ret
inc
sti
push
fdivrl
inc
cmp
negb
dec
lods
mov
or
adc
mov
bound
lock
and
fnstenv
inc
lock
jne
into
test
imul
and
adc
mov
adc
fdivl
jg
loop
icebp
imulb
mov
es
aas
pop
dec
dec
adc
pop
xor
sbb
mov
sub
jl
xor
mov
in
dec
adc
ficoms
imul
or
enter
sub
xor
int3
and
in
das
pop
gs
push
push
mov
sub
sbb
sub
popa
negl
sahf
cmp
xlat
scas
adc
shll
call
insb
adc
xchg
adc
in
adc
add
test
pusha
adc
inc
in
adc
hlt
xorl
das
lods
test
dec
cmp
cmp
outsb
inc
pop
fsubrs
and
insb
and
aaa
lcall
cmp
ja
pop
loop
loopne
and
xchg
jl
adc
in
cmpl
mov
xor
cld
pop
adc
fs
xchg
lock
popa
adc
mov
mov
popa
rorl
dec
or
out
insl
lods
pushf
test
jns
ret
mov
loopne
xchg
xchg
adc
jl
jecxz
and
mov
cli
pop
sbb
cmp
adc
inc
dec
jmp
mov
ret
and
out
in
dec
jecxz
jg
bound
and
mov
shlb
dec
outsl
mov
add
xchg
rcll
and
test
sbb
pop
lea
fdivr
inc
fwait
lds
cld
and
pop
not
adc
jge
fs
pop
outsb
ret
nop
adc
xor
dec
jae
ret
xor
sbb
icebp
das
mov
out
sub
inc
bound
sbb
data16
outsl
es
or
inc
pop
cli
stc
pop
icebp
add
leave
cltd
jg
jmp
mov
xor
mov
or
dec
es
stc
negb
inc
xchg
ss
jnp
jb
and
ret
xor
outsb
xor
mov
jmp
push
pop
outsl
mov
push
cs
mov
push
daa
sbbl
loop
insb
xchg
xchg
jno
ret
insb
sub
sahf
add
repnz
arpl
test
sbb
and
jbe
and
in
and
mov
xchg
and
jmp
sub
movsb
fsub
ret
or
sub
es
out
stos
clc
jo
leave
movsb
fcoml
mov
mov
jl
pop
sub
jae
mov
in
xor
sub
cmp
push
add
pop
loop
loope
push
lock
xor
int
outsb
ficoml
fidivrs
sub
rcll
movsl
lock
inc
mov
xchg
ss
test
loopne
ljmp
daa
loopne
in
mov
sbb
xor
negl
push
jecxz
xchg
mov
cmp
lods
xor
popf
adc
cld
jle
lods
mov
ret
ja
sbb
daa
jnp
dec
outsb
or
and
call
pop
mov
sbb
fnstenv
cmp
movsb
cmp
fdivrl
sub
rcl
mov
push
rorb
cwtl
jge
push
outsb
inc
pop
test
jl
dec
scas
ss
mov
jl
xchg
mov
jb
mov
call
in
out
push
xchg
bound
dec
mov
xor
test
call
cmc
pushf
fldl
mov
dec
into
pop
pop
pop
inc
xchg
popa
jl
and
mov
add
fldt
push
pop
enter
out
push
adc
imul
sub
lcall
add
xor
jmp
mov
jp
or
sub
out
cli
jno
xor
mov
pop
je
bswap
add
testb
mov
fwait
push
jge
sbb
xchg
fldenv
movsb
pusha
pop
inc
add
mov
out
sub
repnz
xchg
pop
mov
xchg
adc
cmp
cs
ret
cltd
cmp
call
cs
loopne
pop
aam
lods
pop
inc
lock
das
imul
cmpsl
adcl
fimull
ret
mov
scas
mov
bound
fbld
lods
jmp
out
lds
xchg
push
sbb
cli
or
jb
rcll
jno
inc
lea
test
mov
xor
addl
insl
sub
popa
cmp
pop
mov
jns
stos
add
dec
movsb
cmp
push
test
pop
int
jmp
cmp
mov
icebp
sub
movsl
popf
pop
jae
pop
repz
pop
add
frstor
pop
dec
in
sub
fdivp
hlt
aas
dec
cli
les
out
icebp
jbe
pop
dec
rcl
je
cmpsb
mov
fidivrl
or
cmp
lods
adc
cld
in
pop
pusha
xor
lret
mov
insl
lds
mov
lahf
outsl
push
lea
ret
or
pop
ljmp
cmp
mov
dec
push
in
orb
jbe
cwtl
xchg
pop
rcrb
test
sub
add
dec
inc
sahf
stos
cmp
out
fbstp
inc
jg
cmpsb
xlat
les
or
mov
jo
push
js
repz
aam
pop
mov
push
pop
sub
rcrb
sbb
sbb
loopne
or
mov
add
jbe
inc
sarb
scas
pop
push
push
mov
adc
dec
xchg
sbb
cmp
xor
decl
xchg
xchg
and
leave
cli
xor
mov
notb
sbb
cmc
jecxz
mov
out
leave
rolw
jge
adc
test
ss
mov
push
pop
scas
mov
test
int3
sub
arpl
dec
push
xchg
out
pop
lods
cmovbe
cmc
push
jae
and
sub
xchg
cmpsb
cmpsb
out
ja
add
into
rolb
push
and
test
adc
push
scas
call
or
iret
mov
mov
add
mov
testb
iret
xor
insb
stc
sub
adc
lret
movsb
aam
jl
mov
sub
fwait
mov
nop
lds
pop
cli
ds
ljmp
nop
pop
pusha
inc
pushf
enter
cmp
pop
out
out
cmp
vprotw
inc
out
pop
rol
sub
lahf
push
aad
rclb
data16
loopne
leave
push
xchg
push
pop
js
mov
mov
jns
sahf
nop
and
and
mov
dec
mov
repnz
jnp
xor
mov
xor
insl
std
flds
in
xchg
mov
sub
daa
stc
push
jnp
and
aam
pop
push
es
mov
and
adc
xor
gs
cld
sbb
mov
add
clc
dec
and
jge
scas
xchg
lea
cmp
mov
inc
popf
dec
mov
ret
lods
cli
cs
insb
dec
lods
push
hlt
xor
iret
fnstenv
out
sub
out
mov
stos
mov
test
or
mov
test
sbb
popl
push
mov
adc
shlb
push
pop
sub
xor
pop
imul
stc
jns
arpl
mov
shlb
adc
jp
iret
push
negl
sub
ret
mov
mov
and
jns
push
push
testb
adc
xchg
jecxz
jecxz
aaa
test
icebp
repnz
je
cwtl
loope
xchg
mov
sub
int
int
rorl
pop
mov
stos
dec
aaa
movsl
iret
mov
mov
lock
lock
dec
mov
and
outsl
push
adc
jg
jmp
jo
lahf
pusha
jmp
mov
aas
push
xor
sub
lahf
fchs
sub
xchg
push
mov
sbb
add
pop
dec
sub
shl
and
xchg
pop
mov
sbb
push
mov
cltd
clc
fsubrl
inc
in
push
inc
out
dec
or
cmp
pusha
sub
popl
lea
dec
daa
mov
lret
ficomps
add
call
cmpsl
test
adc
push
loop
test
orl
aam
popf
fcoms
mov
pop
cmpsb
ret
mov
out
fs
fldl
add
scas
or
in
dec
adc
bound
bound
outsl
dec
adc
mul
mov
push
lret
ja
lcall
cltd
pop
add
mov
inc
outsb
rolb
popa
in
repz
push
icebp
dec
outsl
cmp
pop
negl
subb
sbb
mov
mov
add
jnp
testl
stos
jne
and
jns
pop
push
stos
sub
stos
scas
pop
dec
cmp
fs
mov
incb
dec
cltd
mov
xor
adc
push
and
and
cmpsl
pop
inc
pop
enter
cmpsb
inc
or
push
push
popf
out
insb
cmpsl
cmpsb
xchg
iret
jns
testl
idivl
mov
adc
stos
and
out
push
push
mov
pop
mov
push
cmp
sahf
or
mov
xlat
or
pop
sub
test
or
pushf
and
aas
std
fs
into
xor
fcmovnb
hlt
or
pop
cmp
push
test
mov
std
cmpsl
mov
lods
mov
mov
imul
je
test
movsl
jne
jecxz
inc
add
mov
inc
lods
mov
and
xor
cmp
add
cmp
add
jp
or
inc
dec
dec
in
sub
cmp
or
mov
iret
stc
xorl
and
add
xchg
mov
dec
shrb
pop
or
mov
sub
inc
rorl
movsl
daa
jle
inc
pop
adc
mov
popa
test
mov
sbb
aad
scas
sti
mov
mov
jnp
push
addb
jmp
ror
ss
or
xor
inc
xchg
sub
mov
arpl
pop
xor
fiadds
and
xchg
int3
insb
test
mov
mov
fistpl
mov
xor
add
scas
mov
cmpsl
mov
outsb
jbe
xor
jmp
andl
inc
dec
mov
call
sub
test
sbb
mov
dec
inc
in
js
jne
jo
add
mov
test
and
cwtl
scas
push
push
repnz
jae
fsts
rcrl
cld
inc
enter
stc
sbb
cmp
xchg
mov
cmp
dec
gs
or
add
shrl
cwtl
xor
mov
and
sub
pop
mov
je
mov
loope
cmpsl
not
dec
fwait
out
das
nop
cmp
mov
jne
in
mov
inc
mov
pop
enter
or
aad
add
pop
loopne
xor
pushf
pop
adc
popa
cmp
mov
push
imul
inc
inc
mov
push
scas
mov
xor
cli
jbe
xchg
inc
cltd
enter
addr16
sbb
cmpsb
cmp
movsb
test
and
push
fwait
adc
xor
or
bound
xor
pop
mov
and
repz
test
faddl
sub
push
lds
aaa
add
cli
testb
enter
jb
fldt
add
or
insb
cmp
add
pop
adc
lods
lds
fistps
xor
sbb
out
jp
in
xor
mov
insb
cld
mov
cmc
inc
mov
call
sub
or
push
mov
js
repz
cs
inc
jo
mov
test
push
repnz
rcrb
mov
push
leave
xchg
out
fsubrs
jl
sarb
mov
sarb
imul
outsl
andl
sub
sbb
pop
push
sbb
push
push
push
sub
mov
adc
lods
fistpll
fcomps
dec
out
orl
mov
jno
pop
test
push
gs
cltd
dec
scas
test
test
sub
cltd
adc
ja
inc
leave
sbb
and
xchg
stos
lea
push
jbe
dec
push
dec
fcomip
jnp
in
repz
sub
imul
push
mov
xlat
dec
test
ret
add
mov
mov
das
lret
movsb
cmp
push
aam
pop
jnp
or
jl
mov
mov
mov
cmp
cs
clc
xchg
sbb
adc
pusha
sub
jl
adc
aas
loop
test
xlat
xchg
fninit
movsb
imul
dec
shr
testl
sub
lcall
xor
into
jb
nop
inc
mov
pop
xchg
cmp
hlt
sbb
xor
and
mov
sti
jp
pop
mov
lahf
cld
mov
popf
sahf
in
mov
aad
pop
rorb
jle
jle
mov
inc
cmp
in
and
in
mov
push
xchg
pop
movsl
daa
adcl
icebp
ds
push
cmp
add
jle
sub
sahf
or
sub
out
xchg
fwait
je
into
push
lds
pop
push
rcrb
fcoms
mov
inc
push
xchg
fldl
mov
lock
rep
sahf
mov
jno
cwtl
imul
fcompl
mov
ja
push
bound
sub
mov
dec
or
xor
mov
sub
sbb
jnp
xchg
push
mov
and
ret
hlt
push
lret
loopne
xor
movb
je
popf
add
stc
and
test
or
adc
xor
cmc
xchg
xlat
push
xchg
and
cmp
inc
scas
imul
lret
jge
pusha
sbb
scas
mov
jge
jp
or
lods
fisubrs
xor
insb
jb
aaa
or
adc
stos
in
daa
add
fdiv
fstp
sub
sub
push
mov
sbb
test
sbb
xchg
or
add
sbbl
mov
in
pop
jecxz
sbb
leave
cltd
jge
arpl
clc
cmp
in
lret
pop
push
out
fsts
test
dec
lock
xchg
call
int3
fidivrs
out
adc
dec
test
mov
pushf
mov
sbb
push
repnz
inc
pop
and
xor
add
shll
fisttpl
dec
adc
mov
mov
sbb
sti
popf
jle
test
dec
clc
sub
sbb
mov
and
xlat
fisubs
insb
clc
mov
cmpsb
in
in
sbb
addr16
outsb
test
mov
cmpb
inc
push
inc
aad
lea
mov
or
cld
lock
into
call
mov
xor
and
aam
scas
mov
or
mov
rcrl
popf
xlat
ja
out
or
push
xchg
pop
fadd
dec
insb
sbb
loop
inc
inc
in
mov
sub
aam
test
nop
out
das
pop
pop
sahf
out
mov
mov
loop
dec
in
leave
add
xor
call
inc
xor
dec
in
repz
popf
inc
into
jg
fwait
push
xorb
rclb
cmpsl
push
mov
jno
or
mov
sub
bound
xlat
dec
sbb
push
pop
mov
pop
mov
es
popa
jg
outsb
rorb
int3
scas
xchg
mov
push
scas
hlt
mov
sbb
pusha
pushf
test
pop
pop
popa
jbe
jl
xchg
lret
dec
mov
mov
sbb
test
push
xor
xor
xchg
pop
pop
dec
cmp
pop
mov
inc
cmpsb
dec
push
jne
cli
dec
fistpl
pop
lods
fcomi
scas
enter
stos
cld
jecxz
push
test
dec
push
cmp
cld
rorl
aad
pop
ror
xor
leave
je
hlt
rcl
adc
bndldx
jmp
rcrb
cmp
out
or
mov
cs
out
repz
mov
in
outsl
pop
sti
mov
lods
adc
jl
push
and
aas
outsl
sub
cli
sbb
faddp
jmp
and
stc
cltd
sub
lcall
dec
in
add
je
aam
ja
adc
rol
xchg
jb
insb
ret
fwait
jo
aaa
xchg
push
mov
sbb
inc
adc
imul
mov
or
and
fiaddl
add
inc
pop
inc
out
sub
push
pop
pop
addr16
mov
or
ror
jno
xchg
jecxz
movb
cmpb
jns
push
add
mov
inc
sub
sub
out
xor
mov
ret
fs
push
jle
ljmp
cld
cs
push
dec
out
push
nop
mov
xchg
dec
mov
jno
fldenv
je
shr
pushf
and
sti
push
xor
je
mov
jns
aas
addb
sarl
sar
in
movsl
pop
pop
ss
add
imulb
mov
or
mov
imul
repnz
cmp
dec
mov
outsb
inc
adc
sbb
icebp
add
popa
shll
mov
xor
loopne
lock
andb
xor
loope
icebp
pusha
shll
mov
xor
loopne
lock
andb
xor
loope
icebp
loopne
jo
andb
xchg
shlb
loopne
lock
andb
xor
loope
icebp
pusha
shll
mov
xor
popa
rcr
dec
inc
lock
shr
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
adc
add
xor
and
out
sub
add
xorl
mov
xor
add
adc
loope
icebp
xor
and
push
mov
arpl
andl
mov
lods
push
rorl
xor
add
adc
loope
icebp
sub
cmp
dec
mov
arpl
in
xor
xor
jne
scas
outsl
mov
jp
insb
mov
add
movsb
sbb
mov
sub
fs
mov
dec
xchg
mov
jns
popf
lahf
push
jns
inc
xor
mov
fwait
push
adc
pop
xor
repz
in
loope
cld
shrb
xor
jb
les
jl
mov
cs
xor
xor
test
test
cli
jmp
inc
mov
jmp
outsl
sbb
pop
mov
and
iret
js
jecxz
inc
xchg
mov
lods
sub
ds
mov
sahf
inc
cmp
sub
xor
repz
sti
fs
je
fcoml
orb
and
mov
nop
add
add
loope
icebp
xor
and
inc
mov
jp
mov
jno
inc
mov
xor
add
js
in
mov
rcll
les
lds
and
and
cmpl
xchg
pop
movsb
push
sarl
int
std
jae
xor
shrb
out
mov
loop
rorl
xor
movsl
outsl
mov
sbb
arpl
mov
mov
xor
add
adc
loope
icebp
xor
and
push
mov
arpl
mov
mov
xor
add
adc
loope
cltd
mov
adc
aad
sub
js
cld
pop
andb
xlat
and
push
mov
fs
imul
repnz
lock
lcall
jle
out
pop
xor
inc
and
jns
fcomi
add
inc
stos
shlb
mov
es
pop
jb
nop
icebp
iret
mov
and
data16
movsl
push
push
popa
lahf
dec
dec
test
sti
inc
cmp
pop
dec
pop
jge
pop
nop
out
je
subl
xorl
jbe
fisubrs
dec
mov
xor
enter
mov
push
adc
push
push
push
sar
dec
ja
mov
sub
aam
hlt
or
and
add
add
mov
mov
lret
in
add
int
incl
or
pop
out
cltd
mov
pop
jp
sarl
jge
xchg
mov
mov
inc
cmpsb
jns
xor
mov
mov
movsl
nop
fidivl
and
andb
cmp
aad
pop
call
cli
push
nop
addb
shll
lock
loopne
loope
cmp
inc
fisubrl
stos
push
xchg
mov
in
imul
jmp
mov
push
stos
in
and
cmp
dec
and
icebp
xor
xorl
je
stos
and
jno
aaa
mov
shrl
pop
cmpsb
repz
cmp
sub
sub
fs
or
cmpsl
and
mov
in
cs
dec
jns
clc
adc
std
or
in
aam
dec
jo
push
cmp
imul
add
aam
imul
mov
cwtl
movsl
cli
movsb
xchg
shlb
das
mov
or
mov
rep
outsb
and
mov
rcll
xchg
aam
mov
sub
fcmovnbe
scas
pop
adc
jl
in
sbb
dec
xchg
fwait
xor
jne
loope
testl
adc
xchg
pop
das
inc
mov
lds
in
roll
outsl
sbbl
pop
insb
jno
and
pusha
ljmp
movsb
mov
aaa
cmp
xor
or
cmp
cmpsb
nop
push
scas
js
ljmp
int
xor
jo
jecxz
mov
aad
shrl
adc
jns
lahf
and
mov
inc
ds
jbe
out
fisttpll
movsl
data16
out
inc
cmp
cli
fcompl
roll
ret
inc
pop
xor
cmp
into
pop
mov
fisubrl
aas
jg
popa
adcb
cmp
and
inc
or
cli
ret
ljmp
retw
jl
jp
adcl
adc
loop
sub
lock
mov
add
cmp
movsb
popa
mov
xlat
adc
daa
xor
cmp
sti
out
fisttpl
sbb
lock
sub
lock
xchg
dec
fcomi
jl
push
in
imul
adc
dec
push
mov
mov
inc
clc
ret
pop
jmp
jnp
mov
add
or
inc
xor
dec
pop
mov
fcomp
cs
imul
mov
jae
cmp
mov
out
jo
loopne
dec
int3
cmp
add
fcompl
pop
int3
xor
push
insb
mov
push
pop
jecxz
jl
neg
dec
cmp
push
loope
jbe
imul
pop
inc
mov
jl
inc
inc
jbe
jl
and
cmpsl
test
out
fnstsw
ss
pop
in
lock
insb
or
test
int3
xchg
incb
lahf
fsts
std
adc
or
adcb
pop
mov
mov
loope
add
addl
xchg
dec
cld
popa
and
jae
fsubr
mov
aaa
mov
sub
aam
in
jb
jns
fdivp
sub
jns
add
hlt
sbb
jo
in
jmp
mov
dec
adc
test
cmp
ljmp
loope
stos
fstps
mov
push
adc
or
mov
xlat
or
dec
sub
dec
push
es
or
mov
push
add
bound
mov
push
pop
fldz
dec
movsb
or
mov
jmp
cmp
sub
and
movl
mov
pop
add
lods
sbb
hlt
cmp
nop
in
mov
hlt
icebp
adc
jecxz
pusha
xchg
dec
sbb
add
shr
das
sbb
sbb
aas
ret
into
loopne
sub
test
sahf
repz
hlt
dec
or
mov
sub
dec
xchg
xchg
dec
aas
popf
stc
lock
jp
arpl
pop
fmul
lds
jmp
xchg
sbb
dec
push
ret
and
imul
repnz
pop
xchg
sub
dec
jl
stos
cmp
enter
xor
jl
ja
pop
adc
pop
sbb
not
sar
notb
mov
insb
push
and
lods
adc
or
fsubrs
jns
xchg
xchg
test
mov
xchg
iret
ds
pop
xchg
push
cmp
bound
push
and
adc
mov
and
mov
or
xchg
cmp
mov
push
jb
or
mov
into
ss
leave
in
ffreep
ljmp
scas
jmp
movsl
add
movsb
popa
dec
add
inc
jne
addr16
lahf
push
sahf
xor
or
push
jns
jecxz
shl
das
mov
ror
jo
lcall
sub
and
sub
and
pop
cmp
cld
add
adc
xchg
scas
lea
test
push
loope
sub
das
adc
push
adc
mov
mov
jmp
dec
pcmpeqb
fbstp
test
mov
and
js
cmp
nop
mov
push
xchg
test
jmp
cmp
mov
inc
push
sub
cli
mov
sbb
inc
cmp
xchg
sahf
push
outsl
sub
and
inc
jb
mov
push
in
or
or
ljmp
mov
and
or
dec
sub
jb
mov
sbb
cli
rclb
add
cwtl
jno
jmp
pushl
sti
nop
out
or
popf
popf
xor
loopne,pn
cltd
xorl
fiadds
mov
cmp
ss
in
fstp
icebp
test
cli
pusha
inc
xchg
jo
jo
mov
push
popa
out
add
lea
sbb
out
ret
in
push
mov
xlat
sub
fsubr
out
inc
inc
cmpsb
and
and
add
in
xor
lea
outsb
xchg
call
dec
in
shll
xor
bt
or
or
xor
sub
push
xchg
jns
mov
sub
pop
or
push
push
mov
int
pop
shlb
sub
mov
mov
gs
repnz
leave
jle
jne
lock
inc
pop
insb
pop
xchg
daa
mov
les
mov
aaa
es
rolb
loopne
fisttpl
daa
lahf
scas
test
sbb
cmp
fsubl
mov
out
xchg
sub
inc
js
fnstcw
lods
cli
shll
push
sbb
and
sti
aam
fbld
pop
inc
push
dec
adc
stos
mov
sub
nop
cmp
ljmp
fists
jg
dec
test
cwtl
inc
jmp
ds
test
mov
and
sub
leave
faddl
xchg
cmp
mov
sbb
adc
mov
loopne
xchg
imul
incb
js
icebp
jns
insb
cmp
push
cmpsb
and
jg
push
mov
imul
mov
dec
sbb
pop
add
dec
mov
idivl
adc
aad
sbb
mov
and
push
xor
aam
outsb
push
pop
sub
sbb
lahf
call
sub
hlt
dec
cmc
bound
jns
fildl
rclb
cmpsl
lret
push
int3
mov
inc
loope
pop
test
jb
mov
xor
outsb
test
daa
xchg
cld
stc
adc
add
mov
xor
mov
cmp
push
cmp
repz
mov
sbb
push
lods
lahf
stos
add
push
in
fstl
daa
aad
lock
push
push
adc
sub
mov
pop
shr
adc
cltd
mov
imul
aaa
cltd
xrelease
out
js
lahf
sbb
mov
push
jnp
lret
cmp
test
in
add
and
mov
adc
mov
xchg
mov
lea
lret
inc
hlt
cmp
and
ja
call
pusha
mov
shll
imul
stc
aaa
add
rcll
ss
fildl
jns
imul
into
mov
stos
dec
adc
test
stos
jp
adc
adc
mov
dec
std
lahf
cwtl
leave
or
aad
dec
out
scas
cli
mov
add
movsl
lods
loopne
fistl
mov
fisttpll
outsb
mov
ja
out
testb
repz
test
mov
mov
test
or
push
in
xchg
mov
and
aad
pop
roll
icebp
xor
lahf
sbb
push
mov
test
or
ret
jp
or
enter
push
xor
cmp
xor
test
out
aad
out
and
popf
jecxz
outsl
cmp
xor
mov
mov
cmp
fnstsw
fsubr
lods
shll
jno
and
nop
jnp
in
cwtl
and
aad
imul
mov
inc
sub
inc
imull
and
push
jnp
pop
in
mov
xor
jno
inc
in
daa
or
movsl
stos
lret
xor
jg
mov
sbb
test
pushl
xchg
scas
ljmp
mov
imul
mov
jecxz
clc
inc
mov
data16
pop
and
or
pushf
jne
int
xchg
cld
push
loopne
popf
das
data16
cli
imul
push
lds
aam
cmp
mov
addr16
cmp
loope
sub
cmp
sub
fisubrl
enter
xor
pop
in
fwait
pop
gs
lds
aad
adc
cmovbe
in
out
sahf
out
push
push
adc
mov
cld
lock
in
fwait
dec
pop
pusha
stos
testl
clc
out
cmpsl
in
adc
inc
rorl
shrl
std
xor
inc
push
push
aas
loope
aam
int
sbb
sahf
inc
sbb
push
and
or
scas
jge
cmp
xchg
mov
add
incb
das
sbb
xlat
push
mov
pop
cmpsb
add
dec
mov
sub
xor
mov
ret
add
push
mov
hlt
lock
out
jge
mov
lods
shrb
orl
or
mov
adc
pop
push
enter
mov
xlat
aad
imul
mov
test
ja
pop
aad
jne
mov
stos
mov
or
cmp
fsin
inc
fs
enter
mov
sti
mov
ret
loope
sub
mov
jns
pop
movsb
ljmp
xorb
push
js
leave
popa
addr16
lock
int
shlb
test
lea
sti
jo
xchg
and
imull
loope
sbb
and
xchg
or
mov
adc
and
imul
pop
je
cs
xor
insb
int
jb
outsb
das
sti
stc
xchg
pop
incb
cs
add
lds
pop
lahf
or
das
ss
cld
and
sub
cmp
test
push
and
mov
dec
push
mov
mov
jae
xchg
mov
push
gs
call
or
out
icebp
jmp
jecxz
fnstcw
enter
adc
jge
rcll
xchg
push
cmpsl
inc
lahf
rcrb
or
cmp
and
test
gs
or
push
xor
sbb
adc
dec
xchg
gs
pop
orb
leave
push
mov
mov
mov
jg
pop
jno
arpl
lahf
pop
jmp
test
ss
jbe
testl
mov
mov
mov
sbb
jg
mov
fistl
or
cwtl
call
imul
out
pushf
shrd
cmp
jecxz
ja
pop
lret
out
fimull
lahf
insb
inc
xor
or
mov
push
push
orb
lret
or
je
inc
and
xadd
insl
jl
and
outsb
xor
dec
jmp
idiv
loopne
jmp
and
lods
and
and
lret
int3
pop
dec
sub
loope
xor
adc
cmpsl
lods
pop
xchg
ret
sbb
cmc
sbb
int
sbb
xchg
gs
and
ss
sbb
xchg
sbb
or
push
loope
dec
cmp
cmpb
out
xor
and
sbb
inc
sbb
push
rcll
cld
lds
std
popf
sbb
mov
add
mov
mov
fstl
arpl
add
movsl
sti
fwait
mov
test
jmp
mov
aad
xchg
xchg
fstpl
repz
leave
mov
cmp
mov
ja
mov
das
mov
mov
jmp
xchg
out
rclb
cs
sbb
jmp
xchg
lock
roll
xor
ret
icebp
cwtl
jge
fstps
adc
mov
cmp
jae
cmp
mov
aaa
aas
leave
flds
push
cmp
mov
inc
push
or
pushf
push
rolb
sub
jnp
jmp
push
imul
adc
out
sub
ja
faddp
xchg
xchg
jae
adc
out
adc
dec
data16
dec
lds
sbb
jae
imul
enter
loopne
das
loop
out
inc
push
lahf
pop
iret
add
dec
mov
test
stos
in
clc
mov
xchg
cld
pop
jo
mov
scas
pop
pop
aam
add
inc
pop
push
lds
les
imul
fistpll
push
das
xor
ljmp
inc
ror
adc
data16
inc
mov
call
je
add
sub
dec
bnd
fdivrs
jns
mov
cltd
outsl
dec
adc
fwait
dec
mov
test
pushaw
fnstcw
mov
or
xchg
mov
adc
popa
or
xor
sbbb
js
add
pop
and
out
loopne
or
jb
jo
mov
les
loopne
dec
fs
mov
jle
pop
cli
movsl
mov
lods
icebp
and
lcall
pushf
push
jo
xor
dec
ja
mov
mov
pop
pop
push
fwait
xor
sub
mov
ror
push
out
stc
ret
or
push
sti
popf
push
mov
lcall
scas
insl
int
lea
repz
jl
adc
cmp
lcall
mov
jns
sbbb
push
jno
fldt
sarl
icebp
out
test
jl
in
mov
inc
mov
cltd
lret
cltd
mov
push
sub
jle
xchg
adc
xor
cwtl
adc
mov
es
rolb
nop
mov
hlt
test
push
cmp
enter
push
mov
test
fadd
pop
outsb
mov
scas
dec
imul
rcrl
ds
sbb
fmuls
xor
mov
push
push
push
inc
push
push
sub
jge
push
xor
mov
jl
repnz
xor
mov
ja
ret
inc
sub
mov
out
jl
xor
sub
arpl
lcall
lock
movsb
fstpt
js
leave
movsl
add
inc
lock
add
movsl
jno
repz
xor
add
popa
in
mov
dec
ret
adc
jo
cs
neg
push
xchg
adc
add
sbb
mov
jne
cmp
sub
rorb
aam
shrb
pop
comiss
push
aam
push
pop
jb
test
roll
aam
mov
jle
xchg
add
enter
lods
xor
lahf
das
add
mov
js
sahf
out
sub
out
adc
sub
out
sbb
stc
inc
rolb
mov
sub
sub
ljmp
pop
mov
pop
lods
ret
repz
xor
arpl
popa
idivb
sbb
cmp
arpl
xor
xlat
pushw
and
je
repnz
mov
and
test
aam
xor
dec
into
jne
dec
mov
shll
sahf
ja
call
or
aam
mov
add
in
adc
imul
jecxz
shrb
xor
lret
dec
pop
inc
sbb
dec
aas
adc
dec
mov
xchg
arpl
orb
xchg
push
push
stos
adc
cmp
loop
cmp
out
sub
or
rcrb
xchg
jne
lret
inc
push
pop
daa
jnp
xorl
repnz
xchg
call
fidivrl
and
jae
outsl
sub
lods
mov
mov
fisubs
mov
mov
or
mov
mov
mov
mov
xchg
rcrl
stos
cmp
jecxz
insl
sub
ljmp
ret
push
fwait
cmpsb
sub
inc
pop
mov
xchg
ja
jb
orl
lcall
dec
mov
test
mov
sub
dec
aas
xchg
jecxz
in
xorb
hlt
and
test
enter
cmpb
outsl
inc
rorb
cmp
add
pop
rcrl
fisubrs
push
mov
cltd
cmp
in
je
mov
repz
and
pushf
in
fucomp
inc
jnp
cltd
xor
inc
out
xor
push
dec
cmp
adc
dec
int
jle
mov
sub
fstpl
pop
inc
sahf
mov
dec
lret
pusha
cmc
xor
sbb
dec
ds
xor
cmp
mov
es
mov
nop
loope
std
pop
cli
cmp
xchg
shl
pop
cwtl
hlt
fldl2t
lret
xor
mov
push
lret
adc
add
mov
insl
xchg
pop
lea
mov
clc
push
sbb
xchg
fs
cld
dec
jno
or
pop
pop
jg
pop
and
test
mov
mov
cmc
sub
sbb
int
mov
daa
jg
ljmp
cld
xor
orb
movsb
or
rcr
sti
mov
jmp
dec
mov
pop
cs
xchg
cmp
pop
in
mov
inc
push
mov
jle
sub
out
and
push
outsb
out
vaddsd
stc
insl
jg
push
jmp
pushf
add
movsl
stos
jmp
aam
daa
fisubrl
mov
jge
dec
jo
les
imul
push
loop
xchg
pop
adc
sti
cwtl
leave
lods
cmp
adc
jb
xor
and
or
mov
clc
jno
and
adc
inc
cmpsl
mov
into
lcall
cld
cmp
sub
push
mov
dec
imul
imul
fwait
xchg
add
push
test
xchg
jge
lahf
in
ja
test
mov
mov
cwtl
mov
insl
pop
xchg
test
and
jecxz
mov
mov
scas
jmp
lods
and
repz
addl
push
mov
adc
aad
pop
fldenv
jo
lods
xchg
dec
in
xor
sbb
lock
mov
pop
pop
mov
push
es
jge
and
inc
add
mov
scas
scas
cmp
int
insb
cmp
push
scas
outsb
scas
cmp
mov
inc
out
out
ljmp
jle
mov
mov
repz
fucomip
loop
push
repz
sti
clc
adc
adc
cmpsb
addr16
mov
insl
lea
faddl
mov
jecxz
adc
nop
xorb
sub
aaa
imul
ja
sub
ljmp
sarl
aas
jo
pop
pop
les
out
mov
pop
dec
dec
mov
add
push
inc
add
test
mov
mov
adc
divb
repnz
fbld
inc
hlt
jbe
inc
call
cmc
pop
out
iret
cltd
sub
ficompl
stos
imul
push
xchg
xchg
cmpsb
fildll
jo
int
fnsave
push
xlat
pop
inc
pop
cmp
dec
das
add
mov
cmp
mov
mov
das
outsl
mov
and
mov
cmpsb
leave
sub
mov
scas
shrb
je
adc
test
mov
es
rcrl
sbb
add
hlt
and
xchg
xchg
es
mov
sbbb
push
ljmp
xchg
mov
inc
out
fistps
sub
jnp
add
push
ss
cmp
xor
jae
xchg
pop
mov
ljmp
add
adc
out
and
aad
cmp
and
push
mov
arpl
mov
mov
xor
add
adc
loope
icebp
xor
and
push
mov
arpl
mov
mov
xor
add
adc
loope
icebp
xor
and
push
mov
arpl
mov
mov
xor
add
adc
loope
icebp
xor
and
push
mov
jecxz
insb
popa
jl
sbb
movsb
test
sbb
xchg
cmpsl
jl
insb
into
je
arpl
fcoml
in
inc
pushf
push
or
ja
xchg
cmpsl
jl
insb
sbb
or
cmp
sub
fcoml
lods
daa
cld
aaa
in
inc
pushf
push
mov
ja
xchg
cmpsl
jl
insb
sbb
or
cmp
sub
je
int3
push
cwtl
push
in
inc
fldenv
and
push
lods
repz
notb
cmpsl
adc
cmp
or
jl
iret
inc
cmp
sub
pop
faddl
mov
outsb
imul
int3
pop
sbb
lahf
xlat
repz
pop
insb
mov
std
enter
push
pusha
xor
es
js
std
pop
int
incb
xchg
xchg
add
sarb
mov
inc
popf
fmull
ja
xchg
iret
fs
insb
scas
sbb
not
testl
enter
push
jae
inc
cld
and
mov
dec
xchg
cmp
jl
push
and
fwait
stos
add
cwtl
inc
ja
mov
sbb
in
imul
test
pop
in
mov
test
lods
inc
pop
xchg
dec
cmpsl
jl
insb
sbb
or
cmp
sub
fcoml
int3
daa
cld
aaa
in
inc
pushf
push
mov
ja
loop
hlt
dec
loope
icebp
add
mov
jl
mov
jb
sar
incl
mov
jecxz
les
mov
dec
mov
jne
jo
pop
popf
aaa
xorl
sbb
pop
loope
rorb
sbbb
out
imull
fcoml
int3
daa
cld
aaa
in
inc
pushf
push
mov
ja
xchg
cmpsl
jl
insb
sbb
or
cmp
sub
fcoml
int3
daa
cld
aaa
in
inc
pushf
push
mov
ja
xchg
cmp
enter
ljmp
pop
ffreep
sub
test
out
out
mov
mov
or
test
loop
daa
cmpsl
and
or
lahf
push
push
hlt
push
cmc
jp
jge
jmp
and
jle
fs
cmc
mov
mov
cs
cmp
addr16
rolb
mov
pusha
sub
rcll
aaa
filds
push
xchg
andl
sbbl
aaa
xchg
int3
push
fmuls
fs
je
mov
inc
imul
mov
mov
test
aaa
aaa
rep
add
movsl
bound
xlat
mov
or
jmp
jb
mov
pop
out
mov
cmp
lea
dec
jp
inc
cmp
add
mov
cmp
outsl
loopne
mov
fdivrl
loope
fdivrs
aaa
test
pop
mov
nop
in
std
movsb
rclb
lea
in
addb
outsl
aam
push
push
orb
adc
clc
mov
mov
lcall
call
lret
mov
cmpl
lret
cli
inc
clc
imul
test
and
jno
call
jle
insl
arpl
push
insb
pop
inc
lahf
cltd
or
and
into
lret
jp
out
pushf
xor
push
jmp
inc
out
jo
leave
lds
sbb
arpl
insb
jns
or
sbb
sarl
sbb
cli
push
lret
sti
jge
lock
dec
mov
xchg
sarl
jle
pop
mov
in
pop
or
xor
push
daa
pushf
push
push
jl
ljmp
push
pop
insl
out
out
popf
xor
addr16
ficomps
mov
pusha
cmc
push
cs
pop
cmp
or
xor
or
sub
mov
inc
mov
test
sbb
adc
fldcw
mov
pop
xor
xchg
sbb
loope
cmp
lea
mov
and
sub
call
leave
into
push
sub
fstpl
sub
pop
mov
or
push
mov
pop
cmp
fisubl
gs
or
lcall
mov
jnp
cltd
and
mov
das
repnz
mov
or
pop
js
test
pop
inc
fwait
gs
insb
mov
mov
rorl
jo,pt
popa
cmp
jbe
sub
xor
sub
cmpb
outsl
adcb
clc
aad
test
arpl
jae
xchg
mov
popf
test
cmc
and
xor
sahf
sbb
pushf
dec
enter
jb
dec
jb
gs
lds
adc
je
repnz
jp
dec
xlat
addb
scas
push
lock
out
andl
int3
pushf
sub
adc
sbb
inc
mov
inc
shlb
adc
mov
fnstsw
pop
and
loope
inc
sarb
loopne
out
and
ficoms
mov
cmc
lcall
icebp
fucom
xchg
loopne
cmp
lcall
adc
xor
out
xchg
into
pop
push
push
xchg
jg
jnp
xchg
rcrb
das
shrl
push
shlb
popa
subb
pop
inc
sub
dec
scas
aaa
in
dec
mov
mov
xor
mov
aad
inc
xchg
imul
sti
ss
fcoml
idiv
jae
fcmovbe
pop
inc
mov
lret
sbb
sbb
or
pop
mov
jno
cmc
stos
mov
in
sbb
leave
or
stos
dec
jb
jp
repz
pop
pop
insb
mov
jns
lods
clc
pop
dec
nop
push
mov
adc
push
sbb
jno
dec
imul
inc
bound
nop
mov
add
imul
cltd
cmp
scas
mov
mov
mov
ss
test
fcmovb
lcall
add
mov
mov
mov
outsl
popf
fsubrs
mov
test
jns
int
mov
and
in
mov
fiadds
ficoms
mov
ss
mov
jg
mov
leave
mov
cmp
adc
dec
notb
jo
icebp
and
jno
repnz
lods
prefetch
or
and
mov
push
in
loop
iret
daa
test
xor
testb
idivl
aad
jecxz
adc
adcb
cmp
fnstsw
jmp
push
push
jbe
pop
pop
movsl
pusha
out
mov
push
rcrb
mov
call
xor
in
fcmovb
xlat
andl
sub
pusha
sub
xchg
mov
popf
out
fstpt
mov
ds
lods
mov
push
movb
sarl
lret
sub
pop
mov
insl
adc
addl
pop
mov
insb
xor
aad
jae
mov
mov
data16
adc
stos
mov
je
cmp
dec
cltd
pushf
pushf
adc
das
fs
add
loop
sarb
sbb
repnz
int3
lock
inc
sahf
iret
jnp
dec
jo
sbb
repnz
cli
and
sbb
loop
aam
mov
xchg
mov
sahf
push
fcoml
sub
adc
int
mov
push
aad
sub
cmp
inc
and
sub
outsb
mov
gs
mov
fldcw
shlb
sti
xchg
xchg
ljmp
lret
sub
dec
push
fists
push
push
lods
push
mov
push
mov
test
mov
adc
test
sbb
rol
xor
sbb
mov
aas
pop
inc
xchg
fdivp
sbb
subps
sub
insl
xchg
xor
call
inc
bound
dec
mov
push
data16
jae
repz
shr
cmp
mov
roll
jecxz
out
std
adcl
cs
fcmovnb
es
insl
pop
cmp
rcr
call
mov
inc
scas
mov
sub
mov
cmp
push
xchg
xlat
out
leave
aam
imul
repnz
add
daa
mov
cli
dec
sub
cmp
cmp
push
insl
mov
ds
mov
outsl
nop
repnz
rcl
push
xchg
adc
cltd
fs
pop
cmp
and
inc
xchg
sbb
push
dec
pop
test
and
mov
dec
fsubrl
add
scas
xor
fisubl
mov
frndint
test
ds
mov
lret
test
mov
jnp
out
enter
push
sbb
ss
pushf
gs
aam
ss
fsts
mov
insl
and
pop
cltd
xor
mov
dec
test
push
jae
stc
lds
push
xchg
inc
inc
xor
xor
inc
in
sbb
dec
dec
aad
sbb
out
jo
lret
pop
jb
pusha
push
lock
adc
xchg
in
cmp
sbb
sbb
shrl
mov
sar
std
icebp
jecxz
adc
roll
push
xor
xor
jmp
mov
xchg
jecxz
lods
mov
int3
xor
test
fwait
pop
fwait
aas
test
into
jmp
adc
pop
jo,pn
mov
dec
mov
dec
adc
inc
in
mov
das
cmpsb
fistps
es
cmp
jb
mov
or
pop
in
mov
cmp
add
xchg
sub
stc
sub
push
imul
fdivrl
xchg
cltd
jne
inc
in
sub
sbb
jmp
dec
fcompl
mov
push
mov
call
and
sbb
imul
or
rcr
pop
mov
cli
fbld
add
inc
mov
xchg
sub
rolb
dec
pop
subb
mov
outsl
dec
xchg
ret
jb
and
pop
push
push
rclb
jge
jmp
data16
nop
loop
push
test
mov
outsb
mov
iret
mulb
add
movsl
test
popf
insl
inc
or
out
add
pop
mov
pop
xlat
shlb
push
xchg
xor
imul
js
subb
popf
je
xor
addl
orl
fildl
xchg
jle
jl
popa
inc
xor
push
loop
rorb
aad
shlb
in
sbb
das
popf
adc
xor
pusha
and
jge
call
jg
pop
hlt
pop
mov
aad
sbb
add
add
pop
jg
pop
aad
dec
mov
cltd
stos
mov
loop
out
sbb
push
fs
xchg
mov
daa
rolb
nop
pusha
pop
in
mov
adc
aad
jg
cmpsl
push
fdivr
cmp
push
out
and
int3
loope
jbe
das
insb
sub
jno
xor
sub
push
jns
ljmp
les
push
xor
mov
ja
sub
out
cwtl
inc
xor
sub
clc
inc
fidivrl
pop
cmc
mov
fnop
sbb
imul
xchg
xchg
popf
stc
mov
mov
fs
sub
pop
push
xchg
push
jb
data16
rorb
mov
addr16
sub
int3
outsb
cmpsl
xor
dec
add
dec
pusha
adc
sub
repnz
in
pop
insb
sti
add
xchg
push
lcallw
jbe
cmc
lods
jno
and
mov
and
pop
jg
pop
cmp
cmpsl
ja
repz
cmc
mov
mov
gs
or
mov
imul
cld
arpl
mov
rcrb
lods
push
sub
and
cltd
inc
pop
pop
mov
aaa
jmp
pop
out
mov
fs
es
inc
mov
xchg
inc
ds
insl
cmp
inc
mov
mov
ds
lret
mov
sub
or
jnp
test
addr16
and
daa
mov
sbb
or
repz
jns
sbb
inc
adc
ljmp
dec
incb
pop
jp
shrl
inc
cli
push
cmp
pop
jb
icebp
outsl
fstl
xchg
stos
add
stc
into
mov
sbb
pop
shll
out
notl
iret
and
int
out
adc
inc
sub
add
mov
xor
cltd
jecxz
mov
or
dec
xchg
sbb
and
xlat
xchg
xor
cmp
dec
flds
hlt
fmuls
pop
lcall
lahf
das
mov
inc
or
add
xor
testl
outsb
mov
das
out
cmp
divb
push
mov
mov
or
push
sbb
daa
in
fucomi
fiadds
jae
mov
add
jle
inc
or
add
shlb
and
rcr
push
xor
fs
fbstp
xor
xchg
in
test
sahf
dec
stos
dec
test
es
sbb
sbb
mov
std
xor
jle
lahf
push
ja
cltd
imul
inc
pop
rcl
jmp
leave
and
cltd
repnz
inc
dec
nop
pop
add
clc
xor
aam
cmp
je
mov
jge
repnz
lods
cltd
pop
inc
daa
jg
add
gs
add
inc
fimull
push
ror
js
pop
jp
cwtl
mov
dec
sbb
pop
mov
popf
pop
pusha
inc
mov
push
adc
xchg
aas
fnstcw
adc
jns
call
xor
jo
inc
scas
pushl
je
lds
nop
push
sbb
jge
cltd
pop
cmpsl
sub
shr
lret
lods
testl
mov
dec
mov
arpl
dec
adc
mov
std
xchg
in
mov
adc
adc
mov
mov
push
pop
stc
in
stc
add
inc
push
into
test
adc
add
aad
cli
insl
mov
shrl
adc
lret
cmp
pop
mov
jno
pop
cmp
dec
scas
push
cmp
and
dec
cltd
dec
pop
sbb
push
pop
scas
inc
in
push
xchg
inc
lods
pop
mov
repz
or
iret
add
bound
mov
iret
imul
add
add
es
mov
jecxz
das
mov
dec
mov
scas
push
stos
cmp
mov
mov
adc
push
jae
das
cmp
adc
lret
xchg
inc
leave
fiaddl
pop
mov
clc
sarl
push
sbb
hlt
cmp
xchg
xorl
cmc
faddl
es
cmp
or
dec
mov
aad
xchg
outsb
mov
cmc
movsb
xor
cmc
jo
mov
mov
and
int
bound
pop
ja
add
fnstsw
xchg
arpl
clc
mov
xchg
mov
cmp
pop
ficomps
jp
xchg
pop
jl
cli
xchg
rcrl
test
daa
push
sub
xchg
bound
lods
sub
inc
dec
enter
fildl
xchg
cmp
pop
mov
dec
aaa
lods
mov
push
movsl
mov
cwtl
loopne
sbb
ss
into
lcall
out
xor
shrb
mov
int3
xchg
adc
pop
inc
pop
fs
jge
xchg
sarl
push
mov
push
lods
test
sbb
mov
fucomp
push
fsts
jo
fsubs
inc
das
movsl
mov
and
rcrl
adc
cs
xchg
xchg
dec
inc
dec
sahf
cmpsl
loopne
mov
xchg
popf
negb
pop
jbe
push
pushf
popa
fbstp
call
push
jg
mov
fmul
ret
adc
mov
lcall
jmp
addl
lds
movsl
ds
movsl
clc
int3
mov
lods
push
pop
loopne
inc
stos
bound
xchg
mov
add
mov
inc
lods
mov
scas
ss
cmp
push
jp
push
mov
inc
or
sahf
popa
subb
cwtl
pop
jecxz
dec
dec
cmpsb
inc
daa
sub
cmc
lea
cld
sbb
lods
pop
xor
insb
sbb
mov
insl
dec
mov
fbld
pop
das
ljmp
add
imul
stc
shl
push
sbb
das
movsl
fisttps
and
movhlps
imul
xchg
sti
ja
jns
and
xchg
jge
add
dec
jne
mov
jno
jb
mov
lock
leave
mov
jl
sub
xchg
dec
roll
or
out
aas
mov
mov
jbe
sbb
std
std
sahf
clc
ljmp
addr16
mov
pop
out
cmp
dec
in
pop
and
bound
and
xor
and
mov
mov
cmp
cs
and
lcall
mov
inc
inc
stos
push
fst
in
js
dec
je
adc
and
sub
outsl
pop
in
cmp
xchg
dec
inc
imul
sti
jae
pop
enter
rcrb
loopne
cmpsl
dec
mov
cmpsl
loopne
jne
inc
lods
js
cmp
fistl
cltd
add
icebp
out
add
sub
fbld
push
pop
leave
sbb
push
cmpsb
xor
adc
or
enter
cs
dec
fidivl
subl
hlt
sbb
sbb
push
bound
hlt
adc
jmp
and
movsl
push
inc
les
test
icebp
xchg
lds
mov
movsl
std
pop
mov
jle
in
js
mov
and
jnp
push
ret
dec
jnp
sbb
addb
outsl
test
adc
int3
inc
cmp
movsl
pop
pop
enter
xchg
jmp
jge
or
lods
repz
and
or
pop
das
sbb
jmp
mov
sbb
mov
sbbl
cmpl
push
rol
movsl
jp
fwait
dec
jg
lahf
in
lea
iret
jmp
les
xchg
ficoms
cmp
and
js
sti
stos
dec
adc
repnz
add
dec
hlt
push
sbb
xchg
mov
popl
insl
pop
mov
pop
xor
out
or
aaa
scas
cmp
adc
mov
xor
push
lcall
or
add
pop
scas
scas
jmp
xchg
and
loop
sub
adc
adc
into
jmp
push
rolb
iret
pop
inc
push
xchg
sbb
mov
imul
mov
insb
sbb
in
flds
aad
fbld
repnz
rorl
dec
test
inc
fldcw
push
xchg
push
xchg
push
adc
fildll
ret
mov
lea
stos
stc
cmpsl
repz
xlat
cmp
xchg
jecxz
sahf
mov
xchg
movsl
inc
adc
mov
add
adc
fistpl
mov
pop
sbb
sub
ljmp
das
fwait
and
and
or
incl
xorb
rol
xchg
dec
sahf
fcmovu
cmp
jle
ret
cmp
jmp
xchg
mov
daa
outsl
jbe
push
adc
push
notb
xchg
jb
xchg
xchg
and
push
push
imul
pop
jl
cmp
jg
incb
mov
imul
add
data16
mov
jecxz
sub
mov
loopne,pn
cmc
fisubs
add
test
adc
pop
idivl
mov
lods
ss
adc
sbb
scas
push
cld
stc
insb
cs
fdivrl
xor
and
aad
int3
sbb
das
sub
mov
inc
inc
jmp
pusha
enter
sub
bound
add
ror
stc
out
cwtl
sar
out
repz
cmp
sub
or
dec
mov
cli
fistl
inc
les
mov
insb
pushf
push
mov
lret
push
cld
pop
and
xor
scas
add
inc
xchg
mov
jecxz
mov
mov
pop
aam
jnp
inc
xchg
adc
push
pop
mov
bound
pop
scas
sti
mov
outsb
cli
daa
nop
scas
xchg
test
xlat
cmc
loopne
inc
movsl
jmp
inc
cmp
adc
and
mov
adc
adc
xchg
jecxz
sub
mov
xor
mov
jns
shrb
mov
mov
push
std
sahf
push
dec
int3
pop
xor
imul
test
sub
mov
inc
outsb
mov
pop
sub
or
jle
into
jo
mov
adc
inc
cltd
fldt
nop
shlb
push
icebp
jne
add
roll
adc
lret
outsb
pop
sub
xchg
cmpsb
outsb
sub
shrb
push
bound
sarl
jecxz
mov
test
dec
out
pop
mov
nop
jae
cli
shlb
cmp
mov
cmc
insb
rol
dec
in
mov
add
es
test
push
negl
lret
mov
iret
dec
adc
and
xchg
dec
sbb
int
int3
dec
xor
xlat
pop
add
add
pop
inc
add
and
and
inc
repnz
ss
fstpt
in
xor
je
ret
std
and
in
lock
mov
mov
cmpl
sub
inc
mov
out
scas
dec
mov
jecxz
int3
xchg
fwait
adc
out
nop
shl
or
sub
add
iret
adc
pminsw
out
dec
jb
jne
std
or
xor
adc
dec
pop
inc
xor
cmp
xchg
dec
jge
sbb
lea
fcmovbe
test
ret
cmp
xchg
pop
inc
sbb
into
cmp
pop
loopne
daa
nop
xor
ljmp
negb
ret
mov
mov
mov
pop
frstor
pop
mov
push
and
add
inc
jge
ret
test
out
pop
movsl
xchg
adc
outsl
xor
call
sahf
sarb
dec
test
pop
mov
int
in
add
push
sub
push
imul
sbb
xchg
lds
fimuls
gs
cli
pop
test
push
and
sub
push
push
mov
or
aas
cmp
daa
add
dec
fcmovnbe
push
nop
es
inc
xchg
inc
jle
shl
xchg
loope
out
sti
adc
pop
xchg
xchg
into
jmp
lods
lea
add
xchg
and
aam
mov
pop
add
push
cld
cmp
mov
sbb
push
cs
inc
and
int3
add
pop
push
mov
pop
call
movsl
sbb
push
cmp
mov
orb
adc
adc
pop
out
mov
mov
dec
insl
sbb
sti
add
ljmp
mov
arpl
lods
sub
scas
test
pop
xchg
in
jp
insl
fdivrp
hlt
cli
pop
pop
mov
andb
mov
push
movsl
push
cmp
ret
sahf
and
lods
mov
rolb
mov
sbb
pop
add
jmp
xor
arpl
popf
scas
adc
test
ja
inc
pop
iret
cwtl
adc
jbe
and
mov
loop
enter
or
stc
lret
sarb
lea
leave
and
je
cs
push
pop
lock
repz
adc
ljmp
mov
push
ret
cld
jnp
inc
lock
jns
sbb
jne
je
stc
push
xor
imulb
dec
scas
loopne
aaa
bound
mov
and
sub
rcrl
subl
fs
sbb
fisttpll
adc
xchg
cmp
dec
jns
in
iret
inc
mov
dec
cwtl
jl
insb
sbb
or
cmp
sub
fcoml
int3
daa
cld
aaa
in
inc
pushf
push
mov
ja
xchg
cmpsl
jl
insb
sbb
or
cmp
sub
fcoml
int3
daa
cld
aaa
in
inc
pushf
push
mov
ja
xchg
cmpsl
cld
mov
sbb
mov
cmp
sub
pop
pop
int3
daa
cld
ss
inc
pushf
push
mov
ja
xchg
cmpsl
jl
insb
sbb
or
cmp
sub
fsubr
data16
cld
aaa
fwait
xor
jae
inc
push
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
call
pushl
call
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
aaa
dec
daa
sbb
insb
pop
jl
sub
and
mov
cmpsl
xlat
xchg
faddl
jno
lods
mov
pop
insb
pop
jl
or
sbb
sub
adc
in
cld
mull
mov
pop
testb
ja
addr16
push
es
push
mov
cmpsl
jmp
lea
cli
cltd
fisubrs
sbb
aaa
add
fsubrl
jge
pop
scas
aam
jl
notl
mov
sbb
xchg
pop
shll
and
adc
lods
or
cmp
iret
and
add
sub
jbe
sub
test
int3
push
jg
pusha
mov
pop
jnp
dec
es
popa
push
ja
test
dec
mov
sbb
mov
adc
push
lcall
int3
aas
insb
sbb
cmpsl
out
pop
mov
out
mov
call
xor
mov
mov
popl
out
test
int3
cmp
outsl
cmp
xchg
lret
in
inc
scas
imul
pop
jl
or
sbb
sub
scas
mov
cmpsl
je
out
xchg
divl
mov
dec
xor
bound
sbb
push
jnp
mov
lahf
xchg
lret
mov
xchg
fcoms
sbb
bound
xor
dec
push
inc
inc
psrld
ret
ret
mov
movsl
leave
iret
pop
aas
inc
mov
ja
addr16
sub
cmp
int3
cmpsl
fcoml
mov
pushf
xlat
lods
mov
pop
insb
pop
jl
or
sbb
sub
cmp
int3
cmpsl
fcoml
mov
pushf
xlat
lods
mov
lods
adc
xchg
lods
imul
push
js
inc
mov
out
fisttpll
roll
andb
cmpsl
cld
mov
aas
out
xor
push
sub
xchg
lock
loopne
fidivrl
lahf
es
scas
mov
or
out
fsubr
push
cmpsl
xlat
mov
push
dec
push
mov
aaa
jbe
nop
bound
xchg
and
das
cmp
sbb
das
jno
xor
imul
repz
mov
adc
mov
dec
stos
je
icebp
out
mov
ja
iret
sub
leave
mov
push
pop
xor
jb
lock
cmp
mov
pop
pop
imul
ljmp
jb
scas
fmuls
movsl
xor
sbb
mov
popa
push
xchg
lods
les
xor
jns
pop
xor
shrl
lods
shrb
or
push
and
sbb
daa
int3
cmp
cmp
push
repz
orl
test
cmpsb
int3
cwtl
xor
mov
mov
sub
subb
push
rcr
push
rep
lret
shlb
rep
xorl
jbe
xchg
arpl
xor
cld
xchg
call
mov
and
out
push
jnp
pop
sarl
or
pop
push
xlat
sbb
aam
rol
xor
cwtl
dec
ljmp
pop
fnsave
adc
inc
adc
into
add
lcall
cmp
outsb
shl
int3
mov
dec
bnd
jp
jecxz
fldl
sub
mov
cmp
cltd
ja
lret
in
jecxz
stc
xchg
lea
adc
aas
es
jne
in
adc
je
mov
mov
xor
filds
and
and
sbb
pop
lods
cmp
xor
sub
mov
cmc
dec
ds
sub
aas
push
mov
sub
push
xchg
aas
aad
mov
cmp
fidivrs
out
xchg
mov
lea
lret
mov
inc
int3
mov
aam
sub
pop
rclb
test
out
popf
or
cmp
push
and
les
sbb
movsl
push
popa
cmpsb
lock
fistpl
aad
sbb
cmc
imul
xlat
mov
dec
repz
hlt
or
in
lcall
pop
dec
out
add
cmpsl
xor
mov
push
adc
lea
jecxz
bound
mov
leave
clc
mov
mov
pop
or
roll
stos
popl
cmpb
out
cmpb
lcall
popf
pop
rcrl
mov
imul
jp
leave
xchg
xchg
mov
add
cltd
cltd
or
popa
fmul
or
pop
sti
repnz
mov
mov
add
xchg
pop
mov
sbb
adc
insb
sbbb
cmpsb
dec
shlb
test
in
or
mov
inc
mov
adc
nop
sub
das
ja
insb
arpl
mov
dec
push
nop
iret
bound
push
cmp
mov
mov
push
sarb
addl
fcmovu
imul
cmp
scas
imul
call
mov
loop
add
bnd
out
push
cmp
in
xchg
sti
xchg
pop
loopne
sub
pushf
inc
in
adcb
pop
add
push
ret
ss
and
mov
xchg
pop
scas
and
pop
es
sbb
fbstp
mov
mov
inc
lret
jge
lret
push
inc
outsb
pop
add
sarl
popf
sti
pop
dec
sub
jl
dec
cmpsb
inc
jns
jmp
clc
int3
and
lods
decb
adc
movsb
int
or
jmp
sbb
int3
shrl
bnd
add
cltd
add
mov
jne
add
sbb
fdivr
cmp
cwtl
push
add
js
in
pushl
xchg
lods
pop
push
sbb
push
mov
pusha
std
jecxz
mov
fs
lahf
push
ja
iret
ljmp
stc
sahf
or
push
leave
adc
std
test
xchg
cmc
mov
xor
inc
loopne
add
dec
clc
dec
inc
jne
and
aad
jp
mov
jo
xor
mov
sbb
les
mov
sub
inc
cmp
out
inc
jp
daa
xchg
cmp
jl
gs
sahf
mov
sti
out
mov
cmp
loop
or
pop
inc
mov
jne
push
sub
add
imulb
push
fdivrs
ds
es
cmp
std
mov
push
adc
push
rsqrtps
and
and
out
mov
hlt
push
icebp
addr16
or
mov
movsl
push
add
xchg
pop
mov
or
mov
test
pop
cmpsb
nop
mov
and
stos
push
xor
test
pop
add
movsb
push
mov
or
jbe
scas
pop
pop
xchg
and
scas
xor
lahf
sub
repnz
mov
pop
sub
or
jne
add
fisubl
and
inc
sbb
inc
clc
sub
popf
sub
fstps
icebp
cs
jle
pop
sub
inc
test
fcmove
jb
lods
lret
inc
rolb
push
jns
mov
sbb
xchg
mov
inc
dec
cmp
mov
fsubr
sbb
das
inc
arpl
xorl
ljmp
dec
push
sub
ds
push
push
jmp
add
mov
adcl
inc
pushf
xor
stos
jmp
adcl
push
pop
ljmp
nop
dec
mov
in
xlat
or
mov
addr16
bnd
inc
push
cltd
jo
es
cld
ror
fidivrl
pop
out
xchg
inc
cmp
mov
mov
and
lods
inc
push
or
mov
loopne
dec
into
cs
and
add
loopne
cs
inc
xor
out
xchg
insb
mov
pushf
out
xor
and
and
fucomip
xchg
pop
int
inc
ficompl
test
mov
repz
sbb
aaa
and
adc
psubb
or
dec
outsl
sub
sub
jo
or
out
jecxz
out
adc
hlt
das
cltd
inc
cmpsb
jb
clc
inc
sbb
fistpl
add
cwtl
repz
mov
cs
ja
xchg
mov
outsl
loopne
inc
push
lret
mov
adcb
inc
sub
dec
icebp
inc
cli
push
orl
push
pushf
inc
and
push
aam
lret
fstpl
leave
jp
shll
cwtl
aam
out
jae
aam
add
mov
sub
mov
dec
stos
fwait
scas
mov
push
sbb
push
inc
nop
xchg
insl
push
and
fs
daa
sub
pop
inc
mov
pop
roll
loopne
hlt
scas
fmull
ret
call
xchg
lahf
cmc
dec
rcrl
daa
sub
test
aad
cwtl
cld
daa
mov
outsb
sbb
repnz
divl
xlat
xor
stos
sub
adc
add
mov
jnp
fs
sahf
inc
adc
pop
cmp
repnz
sbb
shlb
insb
mov
jo
adc
adc
in
fstps
in
div
stos
dec
xchg
mov
mov
push
ret
sub
adc
pop
add
push
sub
sbb
aas
addb
cltd
xlat
imul
loope
mov
or
sbb
sub
jecxz
adc
add
or
sub
jecxz
lcall
testl
test
mov
and
xor
mov
mov
sarb
add
jle
out
outsb
cltd
push
std
and
add
add
jb
xor
arpl
push
push
mov
or
push
iret
roll
xorl
loop
mov
dec
popf
sti
sbb
and
mov
shl
mov
sbb
das
jo
jmp
loopne
out
inc
mov
mov
sbb
adc
rorb
loopne
cmp
mov
xchg
sub
mov
inc
jns
jge
jne
int3
dec
jmp
outsb
mov
les
mov
scas
gs
fsubrs
rcl
insb
leave
xchg
out
lods
aas
lods
adc
in
mov
pop
jnp
call
and
ja
in
outsl
push
inc
cmp
push
jl
outsl
xchg
popa
sub
xchg
scas
lret
add
loope
es
sub
jo
leave
add
dec
xor
fnstcw
fadds
pushf
mov
addl
mov
test
push
jne
frstor
mov
adc
je
pop
adc
push
sqrtps
sub
inc
lahf
xlat
pusha
xchg
cs
jae
jno
fidivrs
in
xor
mov
mov
jmp
push
xchg
mov
insl
adc
or
bound
xor
pop
push
xchg
arpl
popa
insl
mov
jns
add
ret
push
daa
fimull
in
mov
stos
sysret
inc
xor
jne
out
loopne
sub
in
hlt
jae
into
adc
add
pop
cmpsl
dec
mov
rcll
int
inc
arpl
into
stc
pushf
pop
fmull
ss
cld
les
das
std
sub
lds
and
mov
cmp
ljmp
cmpsl
andb
jno
das
pop
std
shll
gs
ficomps
pop
xor
sbb
pop
add
aad
add
push
sbb
or
fwait
jg
sbb
enter
sub
ja
add
add
mov
pop
sbb
and
mov
into
dec
mov
cmp
jb
in
sbb
sbb
dec
mov
or
mov
pop
sarl
cmc
shlb
insb
mov
pushf
jne
add
sub
sub
inc
xor
jnp
lret
add
in
jp
popa
mov
insl
jmp
xor
inc
dec
mov
mov
add
xor
stos
das
sub
mov
mov
adc
pop
and
bound
xchg
pop
adc
cltd
aas
jbe
jae
dec
mov
fisubl
out
test
icebp
movsl
pushf
repnz
jbe
lods
jg
cmp
mov
sub
or
adc
imul
shll
movsl
jne
ret
pop
pop
std
jle
scas
js
into
mov
stc
mov
outsl
or
in
js
jae
ds
inc
rcrb
pop
cmpb
lret
fildl
cli
icebp
mov
xor
and
and
aad
push
mov
shll
cmpsl
sbb
lods
push
xor
sub
mov
add
sahf
push
arpl
insl
mov
push
inc
aam
push
mov
repnz
mov
pop
pop
je
inc
cmp
push
jmp
xchg
lods
or
shl
aaa
lcall
mov
xchg
outsb
mov
cmpsb
das
push
push
mov
sbb
or
push
cmc
jmp
stc
leave
sbb
inc
stos
out
nop
leave
je
adc
inc
mov
or
mov
scas
push
add
fmull
xchg
ret
pop
inc
sbb
xor
dec
inc
test
push
je
cwtl
aas
lret
mov
and
sub
jle
stc
leave
mov
fwait
sbb
in
cwtl
fwait
adc
dec
add
stc
in
sti
cli
js
mov
mov
leave
xor
loopne
loopne
sbb
inc
pop
scas
push
jg
push
daa
xor
sbb
dec
adc
popa
ss
mov
add
repz
push
inc
xchg
fs
adc
push
jge
push
push
int
fbstp
mov
orb
add
jb
lds
xor
add
or
dec
or
cmc
flds
push
xchg
jge
es
and
xchg
mov
inc
nop
iret
sub
mov
xchg
mov
xor
test
xchg
pop
in
xor
add
popa
xor
xor
mov
clc
and
lahf
sahf
fcomp
cltd
cmp
and
push
cmp
jno
dec
push
and
inc
pop
fwait
mov
push
inc
inc
xchg
and
bound
and
mov
in
lret
adc
bound
fiadds
repz
pop
nop
sbb
mov
cmp
out
or
movsl
adc
lahf
iret
popf
ret
mov
fildll
sub
jne
xor
or
pop
daa
push
es
inc
sub
fmuls
and
ds
mov
mov
in
xchg
lds
xchg
enter
pop
sbb
jle
cmc
sbb
scas
sti
pop
inc
incl
sbb
loopne
inc
mov
popa
rcr
push
pop
adc
mov
inc
cmp
cmpb
cmp
mov
sti
mov
mov
inc
popa
lds
push
jmp
mov
or
or
dec
je
mov
mov
es
imul
push
insl
pop
es
pop
pusha
sbb
xchg
cmp
xchg
popa
data16
xor
xchg
sub
pop
cli
fwait
mov
outsl
push
add
in
shll
inc
negl
mov
int
jo
shrb
loop
popa
xchg
pop
cmp
out
or
lds
stc
int
mov
cmpsb
fwait
ljmp
push
sub
sub
cmp
xchg
mov
mov
adc
xor
clc
adc
mov
pop
jecxz
in
fisubs
daa
inc
std
dec
or
mov
cmp
scas
imul
xchg
hlt
mov
adc
pop
jno
test
xchg
xchg
ja
clc
or
fisttpll
sub
adc
mov
xlat
sbb
xor
sub
jge
les
les
inc
sti
and
adc
lods
push
mov
outsb
xor
mov
inc
cld
fsts
mov
jp
into
and
push
in
xor
dec
jno
adc
push
stc
xor
iret
xchg
mov
and
push
mov
and
dec
add
int3
and
sahf
ds
mov
rcll
das
add
push
rorl
adcb
sbb
or
scas
cld
jge
test
mov
sbb
sub
cmp
cmp
mov
mov
jnp
pop
and
mov
or
mov
stos
dec
cmp
int3
push
call
fldt
pop
mov
mov
add
mov
aam
or
pop
sahf
pop
pop
mov
insl
xchg
es
insb
sti
scas
int3
lret
mulb
cltd
dec
pop
and
shrl
lods
pusha
clc
cmp
ret
shl
dec
loop
jne,pt
or
jns
fwait
sti
es
mov
adc
xor
sub
leave
cs
pop
lock
in
roll
sub
dec
enter
xor
ret
test
sbb
pushf
scas
aad
xchg
les
push
jg
dec
push
aad
icebp
test
mov
push
dec
lea
mov
sahf
dec
pop
mov
pop
adc
movsl
mov
push
clc
lret
mov
sbb
out
int
scas
andl
mov
jne
push
lahf
adcl
sub
pop
lods
or
and
push
arpl
loopne
ds
jno
icebp
push
cvtps2pd
lret
dec
rorl
xor
push
sarl
aaa
jae
icebp
inc
into
mov
xchg
pop
inc
push
inc
fwait
icebp
mov
insb
lds
xchg
add
sarb
inc
imul
mov
and
jb
cmp
push
push
fildll
sub
and
mov
push
jne
inc
or
add
scas
inc
movsb
xchg
stos
cmpb
in
push
mov
mov
sub
cld
andl
inc
or
adc
mov
sbb
jno
notb
mov
xor
xor
stos
xchg
push
fidivl
sub
mov
es
in
inc
idivl
dec
decb
fcmovnu
add
ret
cmp
sub
loopne
push
and
mov
mov
into
fadd
fidivrl
dec
andb
fwait
test
xor
lods
add
mov
addr16
mov
pop
sbb
pusha
into
divb
dec
push
and
insb
jmp
push
xor
lods
out
xchg
adc
outsb
sbb
fadds
or
ljmp
pop
sub
int3
ds
inc
add
ja
in
fwait
es
in
push
mov
test
add
cmp
push
push
pop
xchg
clc
call
cmp
lock
fsubrl
lcall
arpl
add
xchg
xor
out
push
sub
mov
imul
mov
jae
cmpsb
in
cltd
call
rolb
es
pop
cmc
pop
loope
pushl
mov
xchg
inc
dec
dec
sbb
and
add
add
stos
negl
jmp
mov
int3
mov
cwtl
test
fidivrl
sahf
out
test
insb
iret
push
inc
inc
in
fldcw
sub
xchg
nop
push
mov
cmpsb
inc
push
je
mov
xor
jg
cmpb
and
mov
dec
les
mov
lcall
sub
jno
xchg
mov
pop
mov
sahf
sti
in
lahf
sub
fisttpll
loope
daa
or
sub
fwait
lds
cli
test
rcrl
xlat
jns
pop
jmp
or
jg
and
pop
jp
int3
mov
or
jno
pop
push
das
push
lods
lahf
rcrb
aas
sahf
push
je
cmp
xchg
dec
mov
adc
push
cltd
movsl
adc
and
xlat
pop
inc
stc
cmp
sbb
stos
xchg
push
mov
ljmp
js
inc
push
stos
int3
fld
shrb
ds
xor
leave
sub
and
dec
jp
mov
or
popa
inc
inc
mov
add
jge
pop
fidivs
push
cltd
lods
inc
stc
xlat
cmp
dec
sub
sbb
mov
faddl
jno
mov
fucom
lods
mov
jae
stc
add
xchg
out
jo
xor
popf
cli
fstpt
loop
incb
mov
jle
pop
pop
xchg
jle
push
ret
fsubrp
dec
xor
arpl
jne
jae
push
fwait
add
sahf
pop
and
and
sti
enter
arpl
mov
xor
out
fsts
add
jmp
mov
mov
rcrl
inc
cmp
mov
or
adc
cmp
lcall
inc
loopne
pop
test
jno
mov
out
adc
pop
push
in
repz
in
sub
sti
cmpsb
cli
int3
dec
xor
sti
mov
and
cmp
cmp
push
adc
push
sahf
fldcw
jmp
fdivrl
popf
shl
pop
shlb
cld
mov
in
mov
mov
xor
rcrb
es
into
push
mov
mov
cmpb
push
sahf
xor
xchg
lock
sub
push
filds
xchg
xchg
push
repz
sub
sahf
or
xchg
xchg
mov
stos
and
sub
aad
nop
jle
in
in
cmpsl
sbb
cmp
mov
add
lcall
mov
stc
sub
or
pop
xchg
inc
imull
mov
or
lods
jg
cmp
lock
cwtl
and
ret
pop
and
and
pop
mov
sub
cmpsl
cmc
stos
mov
or
xor
dec
sub
test
lods
dec
xor
push
aam
bound
cld
sub
xor
pop
sbb
loope
aad
ss
divl
inc
pop
lcall
mov
mov
mov
inc
jecxz
pop
in
insb
stc
adc
mov
jnp
cmpsb
cmp
xchg
pusha
sub
adc
sbb
add
femms
out
imul
pop
lret
xor
bound
xchg
enter
pop
bound
fiaddl
dec
sbb
dec
inc
jle
xlat
aas
cmp
bswap
popa
pop
iret
ja
pop
dec
inc
xchg
lcall
or
jge
xchg
sbb
clc
repz
mov
mov
sbb
insl
add
add
sbbl
insb
fcomps
jmp
jnp
repnz
outsl
imul
and
iret
sti
ja
imull
mov
mov
loope
fidivrs
inc
arpl
mov
or
adc
sub
fdivrl
loopne
mov
fmul
jne
xchg
cmp
push
aaa
pushaw
xchg
and
and
pop
push
jae
pop
fnsave
notb
lahf
pop
iret
dec
xchg
mov
out
dec
sub
in
rcl
bound
or
jmp
and
dec
adcl
mov
mov
jge
int
mov
jo
inc
mov
insb
inc
mov
pusha
inc
push
jne
cli
add
scas
insb
fisubl
push
inc
je
in
mov
mov
loope
jae
jnp
lcall
into
out
mov
push
pop
out
pop
jl
or
sbb
sub
cmp
int3
cmpsl
fcoml
mov
pushf
xlat
lods
mov
pop
insb
pop
jl
or
sbb
sub
cmp
int3
cmpsl
fcoml
mov
pushf
xlat
lods
mov
pop
je
js
or
ja
sub
mov
cmpsl
fcoms
mov
pushf
xlat
movsl
pop
aaa
test
mov
ja
addr16
lods
inc
cld
mov
cmpsl
jbe
in
xchg
sub
cmp
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
pop
push
lahf
mov
jne
lcall
cvtpi2ps
cmp
or
sbb
pop
js
dec
jg
scas
mov
jbe
lret
cvtpi2ps
sbb
aas
sbb
pop
jp
or
cmp
cwtl
iret
ffreep
out
and
ret
pop
pop
dec
push
pop
imul
lahf
aam
out
iret
inc
jno
int3
add
enter
xchg
lret
idivl
pmuludq
and
stos
fcmovbe
es
jmp
push
mov
push
bound
mov
or
fidivs
insb
mov
cmpsl
dec
mov
icebp
dec
lahf
jp
mov
dec
dec
push
stos
lcall
rdtsc
jmp
cs
xlat
out
imul
mov
stos
pop
daa
into
xlat
mov
addr16
sub
aas
sbb
aaa
jnp
pop
andb
fwait
cmp
pop
mov
es
push
pop
cmc
mov
cmp
test
jle
shrb
mov
cli
out
adc
pop
shrd
das
sbb
push
dec
inc
pop
subb
xor
clc
fstpt
mov
lcall
jle
jae
add
or
shr
fdivr
fucomi
idivl
out
movsb
xchg
push
outsl
pop
jge
cmp
aas
sub
stc
cld
mov
int3
ficompl
cli
out
lret
cvtpi2ps
cmp
or
sbb
pop
jp
dec
jg
scas
mov
cli
out
lret
cvtpi2ps
cmp
or
sbb
pop
jp
dec
jg
and
in
mov
jae
cs
mov
dec
jns
push
and
ret
lods
xor
adc
lahf
out
cmpsl
roll
adc
inc
dec
add
int3
popf
xor
sbb
adc
push
or
jb
add
jge
in
jecxz
jae
dec
lcall
adc
fidivs
push
test
add
test
add
test
mov
xchg
adc
aas
inc
ljmp
out
into
adc
push
inc
repnz
fdivs
xchg
pop
cmp
adcl
in
popa
shrb
imul
or
popf
jae
or
mov
sub
xchg
clc
std
push
insl
outsl
inc
and
in
sbb
sbb
or
jl
push
mov
mov
outsb
std
lds
jl,pn
scas
dec
sti
loop
loop
fistps
faddp
xor
js
cmp
faddp
popl
das
jbe
mov
lgs
pop
dec
adc
and
dec
pop
jp
lods
mov
lods
adc
cmpsb
pop
and
insb
insl
fcoml
sub
inc
inc
shll
mov
pop
mov
mov
mov
movsb
push
xorb
pop
add
lcall
cmp
cmp
mov
arpl
or
das
mov
ss
and
cli
lcall
fsubl
lock
adc
jp
push
adc
pusha
sub
scas
inc
jo
sti
repz
cmpsl
cmp
dec
inc
test
std
aaa
pop
test
scas
mov
int3
sbbl
test
sub
lock
scas
xlat
fistps
sti
ja
cmp
xchg
test
out
or
out
jne
shrb
adc
cmp
and
lods
mov
xor
push
mov
jb
fs
inc
sub
aas
add
sbb
sbb
mov
mov
popa
jmp
push
mov
adc
lret
or
ret
or
cmp
movsl
jge
jns
cld
xor
and
mov
cmpsb
test
push
fucomi
and
dec
adc
icebp
in
orl
xor
jbe
jne
popa
xchg
ds
loop
loope
iret
mov
lea
lods
mov
orb
adc
cmp
jp
roll
adc
test
xor
and
xchg
lret
xchg
ficompl
fdivl
push
icebp
mov
cltd
lods
and
adc
push
push
aaa
push
xchg
mov
and
lods
jg
sbb
sti
push
lret
paddsw
ret
cmp
adc
js
cmpsb
test
jne
pusha
leave
inc
and
int3
scas
xchg
js
push
mov
cs
out
jae
lea
jl
cmp
in
jecxz
xchg
lcall
scas
cli
pusha
cli
bound
insl
stc
sbb
xor
subl
mov
or
mov
or
jo
ss
leave
dec
testb
add
mov
pusha
cmp
sbb
or
push
mov
sahf
pusha
jmp
lods
clc
popf
pop
adc
pop
xor
ja
push
div
outsb
inc
arpl
incb
fstpl
insb
fidivl
or
in
push
out
popa
mov
aas
sbb
xchg
test
push
sub
das
cmp
and
andl
pop
adcb
sub
stos
pop
data16
int
rcll
sub
lods
adc
add
lret
fwait
imul
lret
fisttpl
lods
sbb
cmp
mov
in
popa
test
daa
out
lock
shrl
push
adc
adc
sar
sub
and
pop
je
adc
push
data16
jp
xor
nop
ljmp
dec
xchg
ds
pop
fstl
jg
sysret
and
and
add
leave
iret
loop
dec
add
ret
xchg
cltd
cs
jecxz
adcl
inc
sbb
sbb
xor
dec
mov
movsl
sbb
fildl
add
mov
jnp
out
add
adc
fwait
les
and
jb
mov
flds
lds
pop
int
and
sub
xchg
cmp
js
int3
insl
push
imul
xchg
aad
cmpsb
daa
dec
cmp
ficomps
push
pop
arpl
into
addr16
push
sbb
data16
popa
loopne
sub
int3
shlb
xor
loop
jl
inc
jne
out
xor
mov
aas
xchg
fwait
scas
gs
mov
int3
je
cmpsb
outsb
aad
xchg
and
call
sub
in
fbld
popa
add
mov
add
push
aad
jp
adc
outsl
ja
push
adc
push
stc
test
inc
adc
std
inc
dec
decb
cltd
inc
pop
sbbb
out
push
push
in
push
adc
scas
shlb
lds
adc
push
ret
jns
cli
sub
mov
loope
cmp
mov
movsl
in
add
sbb
femms
ja
mov
sbb
push
push
and
mov
add
test
sar
xchg
vpmadcsswd
xor
call
fwait
lods
test
cltd
pop
jne
and
sub
adc
sarb
sbb
movsb
lods
and
sti
in
inc
mov
mov
jl
jle,pn
es
jnp
insl
jbe
xchg
mov
cmp
mov
sub
cmpsb
cmp
outsl
push
sar
pop
jmp
sub
xchg
xchg
andl
test
jmp
xor
shll
cld
in
arpl
in
mov
mov
scas
shr
fsubrs
fldcw
lahf
mov
je
stc
mov
mov
sub
imul
ja
xor
aas
leave
scas
sbb
push
sbb
ret
hlt
mov
add
fsub
stc
insl
data16
cld
scas
lds
enter
sub
push
pop
test
dec
lea
add
out
inc
and
dec
loop
sbb
fwait
and
lret
dec
orl
in
fisubrl
test
sbb
dec
iret
sub
mov
push
test
stos
adc
aaa
int
sbb
mov
shrb
cmc
adc
shrl
rolb
jmp
cmp
cmp
daa
in
ljmp
pop
or
test
xor
rol
inc
fwait
or
push
arpl
push
pop
adc
sahf
or
and
mov
sahf
mov
cmp
call
rcr
push
lock
loope
pop
das
pop
xor
outsl
ficomps
ficoml
aad
lea
lcall
jb
sbb
fmuls
dec
and
les
lahf
mov
lret
mov
test
jmp
shl
test
test
sbb
int3
push
dec
mov
and
jp
xchg
add
orl
in
dec
xchg
sub
sarb
cmp
push
gs
jp
push
adc
rorl
ret
js
lcall
sti
mov
mov
inc
and
dec
iret
inc
cltd
dec
jp
sub
and
ljmp
mov
loope
cwtl
dec
hlt
xchg
jl
pop
inc
pop
or
scas
cld
movsb
inc
rcl
imul
jo
scas
subl
adc
lret
jns
xchg
daa
lods
incl
loop
and
cmpsb
adc
test
mov
stos
or
fwait
adc
fs
movsb
test
push
loopne
ljmp
adc
imul
push
jne
jno
xchg
add
add
aaa
daa
fmuls
xchg
mov
leave
fucomp
sbb
xchg
cmpsl
mov
mov
cmp
xor
rcrl
lock
and
xor
ret
push
insl
pop
cld
int3
into
subb
push
jae
inc
arpl
cltd
dec
xor
or
sub
lods
mov
cltd
dec
loope
mov
sbb
xchg
jns
arpl
jo
fistl
or
mov
jno
push
aaa
sub
in
cmp
repz
pop
loop
mov
idiv
and
loopne
pop
push
jge
xchg
add
cmp
push
sbb
pop
sub
out
add
add
pop
pusha
imul
mov
push
pop
add
dec
or
stc
scas
das
lahf
inc
sub
ljmp
jbe
add
and
lods
push
stos
add
jmp
stos
es
daa
mulb
xchg
jecxz
push
jmp
test
jmp
mov
cli
pop
repz
pop
in
aad
popf
pop
push
leave
jns
adc
fcmovnbe
cmc
data16
movsl
bound
mov
adc
mov
cmc
lea
cmp
je
lods
lret
shl
fiaddl
pop
cs
pop
add
cltd
mov
and
inc
push
out
test
mov
mov
imul
aad
and
bound
bound
adc
xlat
rcr
pop
bound
fcomp
cmp
xchg
popa
fsubrl
mov
mov
pusha
ljmp
pop
xorl
imul
fwait
outsl
pop
sub
out
test
cs
mov
sarl
daa
mov
mov
shll
mov
jo
stos
xor
mov
add
je
jnp
fisttps
and
add
mov
jbe
movsb
xor
punpcklwd
lret
fnstenv
fs
sbb
cld
push
insb
mov
push
xor
dec
aam
pop
loopne
push
sti
frstor
stos
icebp
jmp
repnz
adc
sub
jnp
cmp
mov
xchg
mov
xor
mov
fldl
popa
cmpsl
loop
xchg
data16
mov
repnz
mov
hlt
out
mov
cmp
cld
repz
es
or
loope
in
dec
xor
int3
push
sahf
push
fdivl
js
inc
cmc
in
inc
xchg
jbe
into
xorb
cs
mov
dec
outsl
test
in
lea
mov
fdivrp
lds
xchg
inc
mov
popa
repz
ret
sub
and
mov
jbe
inc
mov
imul
dec
jmp
scas
aad
stos
mov
pop
and
sti
stos
pop
stc
out
repz
bound
lock
pop
sbb
lock
out
ficomps
cli
sahf
pop
mov
push
iret
fbld
mov
sub
jbe
jl
lahf
mov
push
pop
mov
sti
mov
cmp
or
fsubrl
cwtl
stos
jne
mov
jb
jecxz
jecxz
mov
xchg
fmuls
inc
stos
sarl
je
add
in
pop
xor
xor
push
fidivrs
cs
loope
inc
mull
cmp
sub
pushf
in
out
iret
nop
mov
icebp
inc
jne
ret
mov
inc
adc
fs
rcll
mov
and
and
outsb
inc
sbb
xor
es
and
sub
lcall
aas
arpl
xchg
in
adc
lahf
sub
mov
nop
add
cmp
push
in
and
adc
inc
xlat
sbb
mov
pop
xchg
adc
jb
inc
ljmp
mulb
scas
inc
fbld
loop
pop
rcr
and
sub
lods
pop
je
add
mov
xor
insb
mov
push
add
loopne
dec
int3
mov
dec
sub
mov
iret
xorl
push
les
roll
lret
mov
jle
test
movsb
enter
jno
rcrb
lret
xor
imul
cli
mov
lds
aas
test
jno
data16
sub
iret
jle
push
inc
jb
xchg
in
mov
and
add
insl
leave
add
add
out
inc
xor
xor
imulb
lds
lock
push
lret
jo
mov
mov
add
pushf
ret
and
mov
insb
rclb
or
js
xchg
pop
jge
jno
icebp
jae
out
pop
sbb
insl
sub
dec
push
insl
out
or
shr
add
pop
pusha
rcrl
push
dec
imul
inc
dec
cmp
in
mov
dec
jns
push
xor
jmp
lods
mov
outsb
movsb
icebp
in
loopne
add
xchg
std
loopne
loope
push
lods
jl
adc
mov
jno
jmp
movsl
test
lds
adc
jmp
stos
in
push
mov
cltd
call
xchg
cmpsb
lcall
adc
in
cmp
inc
lods
pop
arpl
jne
jmp
out
loop
lods
nop
popf
adc
adc
xchg
push
rcll
fs
dec
jecxz
sub
mov
cmp
lret
lds
or
adc
sahf
lods
sbb
adc
lds
mov
jbe
fldz
xlat
dec
popa
sti
adc
outsb
mov
iret
pop
nop
xor
idiv
adc
jl
and
mov
scas
rcll
movsl
xor
ja
sub
pop
inc
outsb
and
aaa
or
js
stc
scas
lret
push
jo
lcall
movsb
jae
jo
addb
mov
mov
push
pop
push
lea
sbb
and
mov
add
xchg
pop
xchg
cmp
ja
stos
cmp
insl
push
jle
sub
or
xor
add
ljmp
xchg
cltd
pop
repz
lock
loopne
ja
sarl
clc
xorl
xchg
dec
xchg
sbb
idivb
rol
xchg
loope
jge
adc
pop
inc
xor
dec
push
out
mov
cmpsb
sub
pop
or
mov
jecxz
nop
xchg
ret
mov
xor
dec
xor
cmc
cmp
rorl
push
ret
mov
in
outsb
scas
je
and
je
dec
add
bound
sbb
push
icebp
xchg
jno
mov
push
mov
dec
stos
orl
popl
addb
add
aam
test
out
mov
sub
mov
mov
fisttpll
add
pop
sub
aam
inc
xchg
sahf
cmp
mov
sbb
jae
filds
outsb
dec
sub
adc
fwait
pop
icebp
or
lods
mov
mov
push
push
xchg
rcrl
dec
int
jae
sub
test
mov
in
dec
xor
fs
cmpsb
mov
cmp
push
or
imul
sub
bound
mov
imul
mov
dec
cmpsl
lds
icebp
mov
fwait
stc
fistpll
cmpsl
xchg
jecxz
adc
aas
sahf
dec
mov
adc
insl
dec
andb
jle
mov
out
std
movsb
cmp
push
mov
stos
cmp
jmp
mov
add
insl
mov
fsubrl
movsb
push
mov
pop
pop
out
lds
pop
rcr
leave
in
call
dec
rorl
mov
outsb
jo
sbbb
or
sub
adc
jb
adcl
sbb
lahf
adc
inc
add
cli
sub
fildl
mov
loopne
out
jno
adcb
xchg
and
call
inc
add
mov
mov
xchg
sbbb
sarb
xor
adc
test
js,pn
in
ds
adc
sbb
mov
sub
aaa
pop
in
cmpsl
in
pop
cmp
push
test
in
xchg
pusha
scas
stc
dec
dec
notl
fs
insb
and
mov
lcall
mov
xchg
mov
xchg
js
out
mov
daa
dec
stos
xchg
inc
pop
sub
ja
cmp
push
mov
pop
cmpsb
mov
int3
insb
pop
cltd
bound
scas
shll
insl
or
or
fistps
lret
xlat
push
push
dec
dec
xlat
xchg
jne
add
jecxz
out
shl
adc
push
jg
mov
xchg
rcrl
adc
movsb
mov
mov
call
mov
mov
jnp
sub
nop
das
outsl
mov
std
and
mov
push
adc
shll
je
cmp
dec
xchg
pop
add
imul
mov
daa
repnz
test
lods
pop
sub
push
adc
push
repnz
mov
sahf
addl
inc
andb
lock
sub
clc
push
pushf
push
fldt
mov
push
add
mov
and
rorb
pop
adc
test
pop
lds
call
or
push
nop
gs
shlb
cmc
pop
lods
mov
scas
arpl
imul
sub
cwtl
or
lock
daa
dec
loopne
xor
pop
mov
movsl
xor
adc
es
lea
xlat
mov
cmp
ss
shlb
jl
jmp
fsubp
lret
mov
loope
push
loop
pop
dec
aad
xor
cmp
pusha
fdiv
pushf
fxch
shl
pop
cmp
je
ds
sub
mov
cmp
mov
shrd
dec
cwtl
sbb
jge
xchg
nop
inc
or
loop
mov
cmp
ljmp
jmp
mov
loopne
stc
out
dec
and
inc
mov
mov
divl
fcmovnb
test
imul
in
jns
imul
rolb
cwtl
inc
cmpsb
jb
cli
bound
sbb
mov
cltd
push
outsb
push
and
push
cltd
movsb
pavgw
shl
enter
mov
mov
pop
inc
sbb
in
outsb
add
jecxz
fwait
sub
out
out
aas
jmp
aam
stos
scas
mov
dec
mov
sub
cmp
xlat
or
jmp
sub
adc
jb
lret
js
js
push
cmp
frstor
cmpl
movsb
fidivrs
and
mov
sub
popf
test
lock
rolb
andl
movsl
jp
loopne
xchg
jns
xor
push
inc
test
sub
sub
sub
xor
shrl
cmp
push
push
jae
or
jno
inc
scas
lds
sbb
inc
sub
clc
jne
es
or
jg
or
inc
scas
lods
and
jo
int
inc
xor
push
addr16
pop
cmp
out
lret
jo
xchg
inc
push
popa
test
mov
inc
repnz
dec
sbb
in
pop
jmp
enter
test
out
cli
xchg
lds
gs
dec
mov
push
adc
or
sahf
pop
xor
rcll
dec
mov
into
pushf
mov
xchg
xlat
xor
out
ror
cmpsb
xorb
and
mov
xchg
movsl
mov
cmpsb
dec
adcl
ja
inc
gs
jns
cwtl
lret
insb
fimull
pop
fbstp
mov
iret
or
push
movsb
jns
cmpsb
sbb
dec
popf
enter
lret
dec
cmp
test
lds
and
sub
pop
ja
repz
mov
mov
dec
push
in
test
into
mov
pop
andb
cld
lds
arpl
les
pop
out
fnstcw
or
testb
jecxz
cmp
mov
mov
loopne
jmp
and
mov
add
daa
call
insb
fiaddl
sahf
fldt
std
sbb
movsl
xchg
dec
pop
push
pop
iret
and
mov
sub
mov
out
out
xor
cmpsb
out
iret
cltd
adc
xchg
pop
pop
inc
cmp
push
cltd
lcall
outsl
adcb
cmp
arpl
lahf
mov
stos
and
mov
out
fists
rclb
mov
push
insl
je
inc
push
popa
in
add
jno
jns
pushf
bound
sbb
loope
and
and
fdivl
lods
sbb
xchg
xor
test
add
pop
mov
jmp
cmp
sub
mov
fadds
pop
mov
int3
pop
mov
jns
js
cmpl
clc
and
dec
int
xchg
dec
push
and
arpl
xor
add
adc
popa
dec
push
sbb
dec
xor
int
jle
sub
xor
sub
dec
or
lret
cwtl
push
xor
lock
pop
dec
cmpsb
hlt
lret
imul
sahf
data16
xor
jb
push
push
push
mov
in
add
movsb
mov
mov
outsl
add
cmc
lock
nop
and
rolb
gs
sbb
mov
mov
inc
mov
insb
outsl
test
xlat
pop
scas
insl
movsl
imul
or
adcb
test
mov
mov
pop
out
in
lock
int
push
fst
sbbl
jle
test
icebp
adc
cmp
mov
push
sub
mov
push
leave
push
imulb
mov
in
jecxz
leave
ljmp
inc
cmp
dec
rorb
jnp
dec
sbb
int
cmc
jo
fidivrs
iret
ljmp
cvtpi2ps
cmp
or
sbb
pop
jp
dec
jg
scas
mov
cli
out
lret
cvtpi2ps
cmp
or
sbb
pop
jp
dec
jg
scas
repnz
push
out
lret
pslld
cmp
or
sbb
pop
jp
push
pop
mov
mov
cli
out
dec
fimull
aad
nop
test
aas
insl
cmp
xlat
test
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
push
call
mov
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
sbb
add
inc
hlt
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
mov
hlt
add
movsb
hlt
add
pushf
hlt
add
xchg
hlt
add
mov
add
test
add
jl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fdiv
add
loopne
add
in
hlt
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
js
add
cwtl
cmc
add
shl
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
testb
push
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jo
add
js
add
mov
add
pushf
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
push
add
in
testl
add
testl
add
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
clc
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
stc
add
pop
stc
add
fs
add
insb
stc
add
je
add
jl
add
test
add
xchg
stc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
stc
add
fdivr
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
