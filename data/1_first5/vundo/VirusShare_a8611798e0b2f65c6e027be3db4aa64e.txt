jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
pop
jge
test
add
rclb
add
push
pop
add
add
push
pop
add
add
fiaddl
push
add
add
cmp
pop
add
xor
adc
cmp
in
mov
and
inc
add
add
add
sub
mov
add
add
add
incl
adc
jmp
add
inc
add
add
add
add
add
add
das
add
filds
adc
inc
add
add
add
or
jns
dec
add
add
pop
add
sub
push
add
add
adc
xor
aad
inc
add
adc
add
dec
add
adc
xor
inc
add
filds
cli
add
add
add
push
imul
adc
sbb
add
or
jns
dec
add
add
add
add
xchg
add
add
dec
add
add
add
add
push
add
outsl
add
add
dec
add
add
add
add
adc
or
sub
or
pop
add
or
dec
add
add
test
add
add
add
add
dec
add
adc
xor
sbb
inc
add
add
add
add
add
add
add
add
jmp
add
add
pop
add
inc
add
add
pop
add
jno
sub
dec
add
add
push
add
add
push
add
add
add
add
add
or
add
repz
mov
lcall
add
add
add
add
add
add
add
add
add
add
inc
add
incl
inc
add
mov
and
push
add
add
add
add
add
add
xor
add
add
test
or
repz
outsl
add
add
add
or
adc
xor
arpl
sub
add
test
or
addb
add
inc
add
add
add
dec
add
inc
add
dec
add
add
add
adc
mov
test
test
cmp
add
or
inc
add
add
xor
mov
mov
data16
add
adc
jb
verw
add
add
add
add
call
add
add
or
int
pop
add
filds
adc
inc
add
mov
xchg
add
add
das
add
filds
adc
inc
add
ret
add
add
add
add
testb
add
or
push
add
add
add
test
or
push
add
add
add
outsl
add
add
add
push
add
add
add
add
and
or
push
add
add
add
mov
or
adc
push
add
push
add
add
push
add
add
add
add
add
add
inc
add
ret
add
inc
add
add
clc
add
add
add
test
inc
add
add
filds
push
add
add
and
cmp
testb
add
adc
filds
inc
add
jnp
dec
add
add
adc
or
push
add
mov
add
add
filds
pop
add
pop
add
add
add
add
add
js
das
add
add
xor
inc
add
and
adc
or
add
push
add
and
add
mov
mov
jmp
pop
add
add
add
or
add
add
add
add
add
or
pop
add
add
add
add
adc
add
adc
inc
add
or
xchg
add
or
inc
scas
imul
pop
cmp
aaa
movsl
or
lret
fdiv
and
lahf
aad
cmp
and
fdivs
and
mov
ret
mov
pop
adc
push
imul
xorl
addr16
jle
xorb
subl
ljmp
or
imul
test
insb
push
js
out
sbb
testb
ja
push
out
shlb
mov
sbb
iret
loope
adc
idiv
jb
in
push
fcmovu
add
and
out
inc
test
push
add
icebp
inc
hlt
repnz
and
cmp
push
xchg
xor
aas
shl
push
add
push
fisttpl
rcll
mov
fldt
pop
popfw
mov
shl
cmp
jbe
fisttpll
icebp
mov
mov
jmp
shll
add
pop
lock
sbb
cmp
outsb
ss
mov
sahf
or
and
ja
xchg
or
loopne
test
sbb
cmp
inc
mov
jecxz
mov
addr16
mov
cmp
mov
ds
mov
inc
sub
or
mov
fists
lock
int3
xchg
jmp
testb
fsubrs
push
xlat
loop
xchg
clc
js
inc
loope
outsl
mov
test
or
push
pop
shlb
mov
enter
jbe
in
test
iret
fnstcw
jp
icebp
inc
sub
fildl
cmp
pushf
mov
mov
mov
dec
cmpsb
pop
pop
int
aas
mov
adc
rcrb
dec
xor
pop
xor
pop
outsl
popa
and
ljmp
repz
mov
sahf
add
cmc
or
bound
xor
xchg
cmp
inc
fstpt
mov
cmp
ja
aam
cs
xor
outsl
and
fsubrs
dec
cmp
jmp
movzbl
mov
repz
repz
lcall
mov
mov
cmp
lret
cmpsl
and
clc
and
mov
push
clc
push
jmp
push
add
or
daa
xchg
add
push
rorb
adc
mov
fimull
shlb
in
inc
xchg
inc
dec
cwtl
scas
in
and
dec
lret
jg
sbb
mov
stos
stc
test
divb
sub
pop
xchg
in
fmull
dec
mov
popf
xor
push
and
push
cld
fstps
cli
aam
mov
xor
std
mov
lret
xchg
inc
sbb
in
add
pop
inc
add
subb
add
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
xchg
xchg
push
cmpsb
and
xor
cmpsb
xor
push
inc
push
lahf
es
ss
rcll
in
hlt
xchg
adc
and
xor
inc
push
out
negb
test
xchg
push
lods
ss
ljmp
xchg
mov
je
sbb
outsb
testb
push
mov
lds
cs
xor
nop
iret
inc
xchg
push
aad
les
dec
lods
insl
out
mov
bswap
imul
gs
int
inc
fsubr
sbb
mov
push
push
cmp
in
push
push
fucomip
fwait
add
stos
pop
mov
mov
outsl
mov
outsb
jge
les
xchg
sbb
push
test
movsl
pop
dec
out
fildll
add
mov
ret
add
adc
and
xor
push
sbb
je
pop
adc
sbb
shl
jmp
jge
fstl
movsl
testl
lret
scas
push
roll
scas
jmp
push
push
in
or
cmpsl
sbb
fidivs
fidivrs
push
xchg
data16
sahf
fmuls
mov
movb
fs
push
test
cmp
cmpsb
mov
push
cmp
jbe
rolb
ret
dec
rcrl
loope
cmp
adc
inc
add
and
and
notb
pop
adcb
push
out
testb
adc
divb
and
jbe
out
ja
hlt
iret
dec
mov
or
push
out
divb
push
xchg
movsb
ss
les
data16
hlt
xchg
adc
and
xor
inc
push
out
divb
push
xchg
movsb
ss
les
data16
hlt
xchg
inc
sbb
and
xlat
xchg
sub
sbb
mov
call
xchg
inc
lds
sarb
loop
fistps
les
and
or
mov
mov
lahf
int
pop
xor
inc
or
xchg
jmp
jne
xchg
out
jnp
push
pop
mov
pushf
mov
in
mov
jmp
push
aaa
call
movsl
mov
pop
imul
mov
mov
sub
and
aad
idiv
and
and
stos
cltd
push
std
scas
xchg
fildl
inc
jb
push
outsb
mov
es
dec
add
mov
push
ret
xor
cmp
mov
and
bound
movsb
scas
cmp
loope
out
into
fwait
xchg
add
mov
loop
out
xor
push
das
movsl
add
add
iret
lret
ret
lret
xchg
cmp
jl
dec
push
push
cmp
pop
dec
ss
loopne
loop
nop
test
mov
push
loopne
shlb
stos
sbb
adc
cmpb
clc
pop
lcall
mov
test
fdivrl
mov
mov
hlt
cmc
sub
sar
mov
das
arpl
jge
xchg
imul
and
adc
dec
scas
pop
pop
nop
cmpsb
add
repz
mov
iret
stos
cmp
cmp
std
xchg
adc
add
dec
divb
hlt
popf
sbb
mov
push
dec
sub
cmp
imul
xchg
scas
int3
ret
outsl
sti
std
mov
jno
cmp
out
insl
enter
adc
mov
adcl
pop
cmp
dec
js
mov
pop
adc
outsl
xor
shrb
xchg
sbb
xor
into
sbb
insb
pop
in
jl
add
sbb
add
aas
adc
ret
lret
es
mov
stos
stc
pop
lods
and
negb
outsb
dec
cmp
ss
idiv
mov
add
mull
imul
xlat
xchg
cli
or
popf
loopne
xor
fwait
push
ss
jns
push
loop
insb
test
clc
lret
inc
jl
push
out
int
sbb
jg
dec
ret
clc
jne
cmp
pop
sbb
push
lret
andb
or
sub
xchg
cli
dec
aam
adc
ret
jo
hlt
dec
in
push
dec
sbb
and
popf
nop
cwtl
add
pop
sahf
jnp
inc
add
cmp
subb
inc
fisubs
jno
dec
xor
pop
fdivs
stos
out
lds
out
imul
sahf
addb
jno
fucomp
mov
pop
adc
adc
sahf
stos
jo
or
pushf
jnp
push
test
ret
out
fwait
ja
pop
pushf
pop
ret
and
jns
dec
js
mov
inc
inc
or
jle
mov
xchg
adc
lcall
sub
and
enter
in
fisubs
stos
xchg
sub
mov
sub
leave
xor
ljmp
decl
mull
aad
aaa
in
pop
orb
and
pop
imul
imul
cltd
es
inc
and
adc
rol
lret
sahf
test
out
movsb
push
sub
pop
fwait
cmc
leave
sbb
js
ja
push
mov
movsl
pop
test
ljmp
loope
ret
jo
repz
aam
add
fbstp
cmc
fisttpl
add
sbb
pop
in
mov
cmc
cmp
pop
fwait
pop
sarb
mov
les
idivb
inc
sbb
imul
fnstenv
mov
lods
jge
sbb
sub
dec
jae
jmp
sub
imul
repz
and
dec
outsb
jno
jbe
add
sbb
fldcw
mov
into
loope
imul
mov
mov
mov
movsb
add
and
inc
nop
xlat
jne
gs
outsl
fdivl
or
xor
icebp
scas
or
adc
and
dec
xlat
mov
jge
adc
rolb
xchg
insl
mov
cmp
dec
in
or
enter
cmp
test
jge
and
jge
js
imul
dec
push
and
aas
cwtl
pop
fdivrl
sahf
mov
dec
push
dec
adcl
lahf
cltd
xchg
filds
jge
push
and
sub
cli
insb
push
push
sti
rcr
sub
aas
inc
gs
fldcw
jne
add
cmp
aas
icebp
jbe
pop
jmp
ds
imul
mov
mov
mov
sub
loop
add
js
adc
shrl
mov
gs
mov
add
aad
scas
mov
jns
repz
mov
fwait
cwtl
popf
enter
cmpb
and
jns
sbb
sbb
rcl
xchg
inc
mov
jg
sbb
incb
insl
lods
testl
leave
and
dec
cmp
xchg
ret
shrl
hlt
les
jg
cmovg
mov
lcall
shll
fmull
inc
mov
pop
xchg
jl
push
push
inc
jae
sbb
xchg
pop
ret
or
lcall
sbbb
nop
das
mov
jg
cmp
xchg
dec
dec
adc
lods
dec
scas
stos
push
incb
stos
scas
or
jo
in
sbb
sub
mov
insl
shrb
enter
mov
push
sub
push
jl
lahf
cmp
dec
shl
pop
rcrb
das
andb
and
dec
push
or
mov
push
fsubs
and
clc
int3
lods
pop
dec
jns
loop
aam
inc
mov
xchg
jbe
rorb
out
lcall
test
ficoml
adc
push
inc
scas
dec
cmp
mov
push
or
adc
orb
aas
mov
movsl
dec
push
iret
mov
imul
stos
xor
es
lods
push
mov
movsb
insb
pushf
pop
add
sti
adcb
and
mov
in
sti
loopne
dec
test
outsb
sarb
repz
fisubs
inc
in
mov
loope
hlt
dec
sti
addr16
fldt
fsubs
xchg
xchg
je
xor
and
xchg
int3
ja
xor
subb
incb
inc
cs
jns
call
or
movsl
adc
jmp
cmpsb
inc
lret
enter
mov
cltd
popf
xchg
jp
pusha
std
pusha
adc
iret
push
stc
cltd
xlat
jmp
jno
rorl
addr16
jno
cmp
push
pop
pop
pushf
loopne
pop
notb
mov
cmp
pushf
les
mov
mov
inc
jb
mov
outsb
xchg
inc
gs
insl
scas
into
mov
and
outsb
hlt
inc
fcom
daa
aas
inc
jmp
or
scas
leave
stc
sub
ds
movsl
aam
adc
jno
sub
lock
mov
rcr
mov
add
sbb
or
adc
push
lahf
pop
jp
xor
mov
outsl
aad
push
jmp
cmp
jg
rcl
cmp
lcall
xor
rcr
xchg
lret
movaps
mov
mov
sbb
fsubl
push
inc
enterw
repz
and
cmp
scas
pop
shr
insl
or
cwtl
sub
shll
dec
icebp
xchg
adc
into
cmp
lds
cli
inc
aam
out
jo
cs
mulps
cmc
adc
or
aas
nop
sub
lea
addr16
mov
sbb
xorl
jne
les
fxch
sub
sub
out
mov
mov
inc
test
mov
sbb
inc
jg
jo
les
and
std
inc
imul
and
mov
test
std
push
mov
dec
push
mov
jp
mov
adc
loope
imul
into
mov
dec
mov
ljmp
pushf
jb
adc
mov
xchg
sahf
imulb
test
call
push
fldcw
cli
cmpsb
jae
loop
cmp
lods
fdivrl
mov
cld
inc
sbb
mov
ljmp
adc
lds
js
inc
jl
pop
xchg
sbb
adc
xchg
and
mov
mov
dec
dec
xchg
adc
inc
loop
repnz
insl
int
jns
lds
sbb
aas
dec
pop
add
xor
rorb
xchg
jle
mov
mov
jg
pop
pop
mov
adc
es
loope
jb
fsubl
ret
test
inc
jae
mov
sahf
iret
adc
enter
pop
test
je
es
push
lods
sbb
in
cmp
cmpsb
stos
and
adc
bnd
roll
push
sub
cmp
inc
xor
aad
pop
fcomps
cmp
cs
mov
xchg
or
mulb
fs
add
or
clc
or
cmpsb
test
nop
and
jne
popf
mov
lock
dec
xor
mov
pop
xchg
call
jbe
sbb
movsb
mov
push
sti
loopne
pop
into
pop
lea
test
lods
fists
lcall
push
notb
cwtl
fiaddl
mulb
push
mov
cmp
adc
fs
out
imul
imul
cld
push
shrb
push
push
sub
dec
icebp
scas
aaa
cli
div
call
es
add
adc
dec
in
mov
fbld
mov
es
cmpsl
adc
data16
enter
xor
sub
jbe
fcoms
lods
out
xchg
inc
sub
sbbl
push
sti
xchg
mov
push
sub
aas
cmp
mov
ret
sahf
mov
cwtl
inc
push
movsl
ds
aas
xor
mov
push
scas
push
orl
cmpsb
in
out
xchg
rorl
rorb
lret
in
jae
push
mov
and
or
sbb
enter
hlt
dec
and
fs
push
xchg
test
pop
pusha
jb
inc
adc
in
push
pushf
dec
outsl
scas
lret
sub
sbbb
movsb
movsl
sbb
xor
cmp
jl
xor
or
mov
loop
rolb
cmp
lea
out
adc
xorl
xor
pop
loop
repz
mov
test
mov
xchg
fsubs
fdivl
xor
arpl
sti
movsl
pop
cli
shlb
sub
inc
or
dec
je
jno
addr16
push
mov
cmpb
jns
mov
cmp
dec
push
into
mov
push
jg
pop
cld
fimuls
and
mov
nop
xchg
mov
scas
and
pop
insb
mov
iret
ret
xor
pop
jecxz
and
cs
pop
xor
scas
sub
and
pushf
dec
xchg
sub
jmp
fistl
ja
outsl
call
jns
clc
notl
mov
aad
js
sbb
cmp
ljmp
mov
fsubl
int
cmp
cmc
dec
push
jbe
loope
cwtl
pop
and
and
sahf
dec
xchg
shll
pop
icebp
ret
push
hlt
ss
sub
dec
testb
mov
test
mov
jns
push
and
ljmp
cmp
cmp
sub
ja
cmp
mov
push
ljmp
mov
adc
adc
dec
out
outsl
jne
add
cmp
jmp
js
out
stos
test
push
insl
cmp
adc
sbb
cwtl
out
adcl
xlat
mov
and
mov
mov
and
int
cmp
shrb
testb
ret
inc
es
mov
call
cmp
fsub
push
icebp
and
repnz
push
mov
jg
ret
dec
insb
sbb
arpl
scas
xchg
ja
cmc
test
psrlq
imul
push
cltd
ljmp
dec
sbb
push
or
sbb
mov
cmp
les
xor
inc
pushf
fidivrl
adc
inc
loop
sbb
and
cwtl
loop
or
lock
andb
mov
add
pop
incl
push
dec
cmp
fists
repnz
sahf
pop
sub
lret
movsl
lcall
mov
cmp
sahf
pop
in
lahf
xlat
popa
jbe
push
iret
jecxz
cli
pop
in
lods
stos
nop
jns
ss
sub
and
addr16
mov
pop
add
cltd
sub
cmp
js
loop
sub
les
into
andl
loope
push
rep
pop
inc
popa
cmp
test
xchg
clc
push
fimuls
or
test
cld
jmp
int3
scas
push
sbb
mov
dec
push
mov
cwtl
rcll
adcl
pop
test
push
dec
or
lods
into
call
xchg
xchg
xor
cmp
fisubrl
pop
sbb
add
xchg
mov
pop
xchg
cmpsb
jb
dec
inc
cmpsl
jecxz
dec
push
pop
inc
int3
shl
mov
aad
cmpsb
mov
pop
inc
das
mov
dec
xchg
jle
idivl
testb
xchg
xchg
or
sbb
push
ss
dec
jmp
test
jbe
mov
sbb
out
cwtl
mov
sbbb
std
mov
lods
cmc
lock
cmp
jnp
test
sub
mov
jl
scas
call
or
pop
dec
mov
rcrb
pop
mov
mov
xchg
inc
xchg
cld
fists
pushf
lcall
pop
or
negl
xchg
mov
sbb
test
mov
adc
mov
imul
fiadds
xor
jno
or
and
out
mov
roll
call
xor
test
ret
mov
cmp
divl
dec
and
add
mov
adc
mov
nop
or
inc
xchg
push
movsl
cli
mov
test
xchg
aas
jo
pop
mov
inc
rcrb
jbe
in
pop
xor
inc
in
push
in
pop
movsl
sub
scas
shrl
mov
aas
mov
outsl
jle
out
inc
movsl
sbb
mov
pusha
xor
mov
fistpl
dec
mov
test
ljmp
mov
jae
add
cltd
stos
into
lahf
push
inc
inc
repz
pop
shl
mov
mov
cmp
xor
adc
jns
pop
daa
lahf
dec
mov
outsl
enter
cmp
daa
fcomps
jno
aas
add
loop
divb
and
lret
loope
cmp
das
test
ss
or
mov
lds
pop
mov
insb
testl
mov
push
mov
aaa
repnz
mov
lretw
xor
jge
inc
fwait
sti
cmp
pop
int3
sub
ja
sbbl
call
jns
and
test
jl
xchg
dec
push
jae
cltd
orb
xchg
xor
decb
nop
cmp
inc
call
test
fcoml
mov
xchg
bound
adc
mov
lcall
mov
mov
clc
loopne
fdivs
ret
pop
and
xchg
jns
test
cmp
push
rorl
mov
xchg
dec
test
andb
cld
popa
in
hlt
rolb
es
test
inc
fnstenv
sub
inc
stos
loopne
mov
mov
mov
dec
sbb
cwtl
insl
out
sbb
and
inc
xchg
rclb
or
adc
sub
add
lcall
ljmp
mov
cld
cmc
in
lret
push
test
pop
inc
imul
pop
lock
leave
imul
shlb
lcall
int
mov
push
or
xor
add
ffreep
sub
sbb
or
pusha
les
ret
das
movsl
mov
sub
shl
shr
mov
fidivrs
idiv
imul
pop
cmp
aad
sarb
outsl
stos
mov
mov
push
rcrl
out
repnz
rorb
movb
es
stc
mov
nop
arpl
inc
ljmp
or
xchg
test
out
mov
sarb
shr
imul
sbbl
pop
sbb
test
pop
push
sahf
xor
scas
push
rorb
pop
jg
jbe
xchg
shlb
std
sbb
jl
mov
roll
push
and
sbb
lods
icebp
imull
mov
and
add
sub
cs
cmp
dec
inc
sbb
dec
bound
mov
mov
mov
cltd
std
jmp
push
test
enter
jl
fldt
fbld
push
jge
ja
pop
popf
pushf
scas
lds
xchg
clc
cmc
pop
inc
hlt
ret
mov
push
stos
lahf
rcrl
cltd
icebp
dec
jnp
jbe
bound
iret
in
enter
lret
in
xchg
fwait
mov
arpl
fld
mov
pop
xchg
dec
sbb
and
push
jb
mov
hlt
aad
jnp
jb
inc
in
das
ljmp
cwtl
pop
lret
inc
mov
push
pop
dec
jg
aad
xchg
aad
scas
mov
dec
xor
shll
jne
hlt
jecxz
pop
jb
sbb
pop
ja
fisttpl
mov
fwait
lahf
std
out
add
mov
xchg
sbb
imulb
in
fwait
jne
push
push
xlat
pusha
test
outsl
lcall
outsb
mov
das
push
jbe
mov
adc
dec
mov
cmp
cmp
cld
jge
push
outsb
hlt
pop
mov
hlt
add
ss
pop
dec
ret
or
xlat
or
in
mov
cmp
out
or
lods
push
xchg
inc
cmp
xor
mov
push
push
ret
sub
xor
sub
xchg
idivl
dec
fnstcw
push
rcl
sbb
shll
inc
lret
dec
cmp
mov
in
push
mov
lcall
mov
mov
fbld
sub
cmp
iret
adc
aam
dec
cwtl
mov
push
jle
lods
mov
mov
inc
shrl
enter
jge
jns
jb
lds
fcmovne
sbb
push
mov
stos
ret
sub
loope
into
arpl
sbb
loopne
daa
lret
mov
mov
icebp
jg
jae
jne
push
sub
and
push
push
xchg
stos
ss
pop
addl
lret
cmp
scas
shlb
push
mov
scas
outsl
loope
jge
scas
ficomps
aam
add
leave
mov
lods
mov
cltd
iret
clc
sub
rol
sti
add
mov
xlat
es
jge
jno
xor
inc
xchg
not
jle
movsl
out
dec
inc
add
ds
mov
xor
pop
and
loopne
pop
call
sbb
test
add
mov
adc
xor
ljmp
push
cmpsb
sti
push
popf
sahf
ret
nop
mov
loope
aad
cli
aaa
vphaddbd
scas
xchg
or
sar
cmp
in
add
je
inc
inc
test
pop
imul
out
xchg
mov
mov
pop
fwait
imul
mov
lods
rclb
cmpsl
pop
sbb
fucom
es
lock
js
pusha
imul
dec
fdivs
xchg
push
fdivr
inc
imul
gs
sub
cmpsl
xchg
sbbl
and
sbb
sahf
imul
push
popf
push
fwait
and
push
cmc
fdivrl
sbb
ja
test
les
add
out
test
decl
jo
hlt
mov
pusha
test
mov
mov
imul
call
dec
mov
clc
ret
cwtl
sbb
fcomp
push
jno
inc
mov
icebp
xchg
xor
fwait
pop
dec
jg
pop
dec
loopne
fs
inc
jle
mov
sub
out
mov
mov
sub
pop
pop
and
or
mov
dec
aaa
test
push
out
fldl
dec
push
dec
cmp
mov
ret
mov
xor
push
shlb
fcomip
lods
aas
cwtl
push
adc
cmp
push
mov
push
popa
popa
xchg
fiaddl
sbb
cmc
jns
enter
fwait
xchg
pop
sub
mov
dec
fmull
daa
push
mov
lock
cmp
cld
fistpll
push
mov
inc
test
push
out
stos
jg
mov
and
lret
mov
pusha
push
add
in
mov
mov
mov
push
fldenv
cltd
pop
cwtl
cmpsb
movsb
out
xchg
push
outsl
push
nop
mov
pop
inc
sarb
push
xchg
xchg
ljmp
or
stos
add
pop
mov
dec
mov
xor
adc
jne
insl
fwait
out
sub
fsubrs
inc
mov
gs
cmp
adc
push
xchg
xorl
data16
mov
jmp
ret
push
pop
xor
enter
xchg
and
pop
mov
push
add
xor
cld
out
xchg
ljmp
push
incl
out
imul
pop
cmovo
and
jbe
adc
cmp
sti
pop
mov
addr16
lret
push
add
clc
sarl
jmp
mov
inc
fists
mov
cmpsl
orb
mov
cmpsl
pop
mov
in
xchg
stc
loop
push
xchg
mov
pop
or
and
clc
dec
add
stc
popf
push
mov
pop
jmp
stc
sbb
and
push
out
divb
push
xchg
movsb
ss
les
data16
hlt
xchg
adc
and
xor
inc
push
out
divb
push
xchg
movsb
ss
les
data16
hlt
xchg
xchg
sbb
inc
aas
out
divb
push
nop
movsb
ss
in
jbe
xchg
xchg
lock
shlb
out
divb
movsb
ss
xor
mov
fs
mov
sub
push
pop
stos
cmp
arpl
mov
cmp
sub
mov
fwait
insb
mov
stos
cmp
sub
sbb
or
negb
in
sub
xor
dec
pushf
cmp
inc
adc
out
testl
mov
and
pmulhw
fwait
insb
in
into
and
xor
rolb
out
xor
sbb
adc
cmpsl
push
xchg
xorl
loope
pop
sti
fcmovbe
aaa
in
mov
adc
push
sarl
pop
sti
mov
add
icebp
lcall
jb
sub
pusha
xchg
adc
inc
jnp
dec
ss
jl
mov
fstpt
mov
enter
fmull
nop
xlat
cmp
mov
xchg
cmp
cmp
insb
in
mov
sbb
hlt
dec
adc
leave
cld
int3
sub
or
xchg
pushf
pop
insb
adc
cmpsl
dec
cld
mov
adc
int
jl
mov
out
mov
aas
pop
mov
sbb
adc
int
sub
arpl
xchg
add
cmp
sub
push
xchg
popa
mov
dec
mov
aas
stc
cmp
or
lret
dec
mov
inc
clc
jo
dec
xchg
jle
pop
cltd
pop
mov
pop
in
sbb
cmp
dec
enter
lret
sbb
or
cld
sbb
or
cmp
sub
mov
fwait
insb
mov
stos
cmp
sub
sbb
or
cld
sbb
or
cmp
sub
mov
fwait
scas
pop
add
inc
mov
xchg
adc
pusha
out
jne
test
pop
cld
movsl
adc
xor
rclb
jno
ja
outsb
pusha
nop
mov
mov
mov
daa
xchg
notb
jle
pop
cmpsl
loopne
in
scas
push
mov
sbb
cmp
mov
inc
lret
jnp
push
into
jle
test
sbb
mov
repnz
imul
xor
inc
jmp
push
or
rclb
push
cli
enter
aaa
mov
inc
aam
pop
cwtl
pop
xchg
orb
jmp
sub
pop
and
in
mov
xchg
shrd
dec
xchg
push
jne
out
mov
mov
and
mov
sahf
xchg
mov
in
adc
jmp
bound
inc
in
jbe
push
mov
in
mov
pop
push
adc
int
pusha
es
push
iret
fsubs
cwtl
cld
pop
xor
add
jp
jae
adc
mov
pop
ljmp
loopne
jb
inc
pop
outsl
jp
into
cs
adc
std
and
cwtl
lret
mov
inc
insl
rcr
scas
pop
jecxz
jle
fldl
ret
in
repz
push
and
add
and
cld
sub
dec
aam
xor
jecxz
hlt
and
clc
push
int
inc
repz
insl
mov
or
pop
lds
aam
lds
jae
imul
iret
aam
loopne
pop
loop
aam
data16
loop
lcall
cmp
sbb
inc
sub
push
outsb
pop
dec
sahf
out
mov
jmp
or
imul
push
das
pop
add
divb
sbb
xchg
shr
sti
clc
scas
es
icebp
jns
or
sbb
stos
pushf
iret
decb
xchg
push
in
ds
nop
or
flds
jnp
mov
add
jge
add
sbb
inc
xchg
push
cwtl
mov
hlt
shrb
cmp
push
push
in
ffreep
popf
mov
pop
sbb
jmp
outsl
je
mov
push
test
or
enter
add
inc
jmp
inc
idivb
mov
ret
outsl
lods
jno
cmpsb
loopne
lret
adc
sbb
stc
cmpb
sbb
loop
in
sbb
cmc
xchg
out
outsb
add
cwtl
scas
sub
xchg
add
es
jmp
xchg
xchg
rorl
jnp
dec
and
dec
add
adc
xchg
dec
xchg
mov
jge
jp
fbld
cmp
cmp
popf
pop
les
pop
jno
fiaddl
test
jp
xchg
and
int
jmp
stos
add
pop
sbb
or
lea
lret
stos
and
cmpsb
add
xchg
fs
mov
daa
mov
pop
or
xchg
test
les
and
cmpsb
negb
push
mov
push
mov
stc
jbe
out
je
fwait
daa
or
popf
inc
cmp
les
push
pop
je
mov
add
inc
push
lahf
cmp
or
push
mov
mov
insl
movsb
enter
js
inc
sbb
and
add
outsb
ret
inc
aaa
jp
cli
sub
dec
out
cmp
add
inc
cmp
sbb
pop
iret
mov
and
iret
jbe
xor
hlt
xchg
sub
aad
cmp
shlb
cmpsl
jae
into
add
and
adc
mov
clc
cmp
or
sbb
mov
and
xchg
cltd
repnz
mov
mov
xchg
mov
pop
xlat
dec
jl
arpl
add
mov
inc
mov
mov
and
loop
pop
jns
jnp
in
sti
push
lods
repnz
pop
mov
pop
cmp
jne
cmpsl
loop
popa
js
ja
ficompl
mov
xor
jge
xor
lods
sti
jle
push
outsb
cmp
xor
adc
ret
dec
pop
lcall
rol
repz
jno
rcrl
or
and
je,pn
push
mov
das
push
pop
bound
sbb
jo
push
outsl
dec
insl
sbb
adc
mov
xor
mov
rolb
iret
add
mov
xor
pop
push
sub
pop
adc
pop
out
adc
mov
sarl
sahf
scas
inc
scas
pop
cmp
sahf
mov
es
pop
xchg
sbb
xchg
dec
cltd
cmp
adc
in
xchg
dec
lcall
xor
jmp
jne
jmp
inc
scas
fadd
cmp
sahf
fbld
mov
int3
movsb
out
cmpsb
cli
cmp
mov
hlt
ja
insl
adc
jge
add
stos
stos
or
and
nop
pop
mov
sub
test
jno,pt
pop
dec
pop
lcall
ffreep
push
xchg
mov
ja
aam
arpl
push
xchg
popa
mov
adc
sbb
push
pushf
pushf
or
clc
aaa
outsl
daa
loop
xchg
mov
int3
sub
fstps
fdivs
add
push
je
std
fnstenv
jo
popf
test
mov
or
ljmp
dec
ret
and
mov
sub
mov
jmp
movsl
and
movsb
adc
xchg
or
sbb
sbb
adc
or
mov
ficoml
pushf
out
int
dec
or
test
loope
jb
mov
or
push
mov
xor
xor
ficompl
dec
and
das
out
mov
push
mov
test
mov
cmpsb
dec
pcmpeqb
jo
pop
roll
out
jecxz
loop
xor
adc
je
cmpsl
push
in
cmp
jb
xor
in
arpl
movsl
mov
imul
shlb
mov
mov
fadds
cmp
lcall
pop
jmp
add
sarb
test
rorl
imul
arpl
outsl
adc
xor
pop
scas
insb
pop
aaa
ja
cs
sbb
fnstcw
pop
dec
adc
lahf
cli
cwtl
push
lret
cmpsl
mov
inc
and
mov
int
rol
fs
sti
pushl
mov
sub
test
adc
dec
xchg
push
stos
ljmp
inc
jecxz
dec
lret
imul
inc
pusha
mov
push
cltd
mov
lods
jp
daa
xor
dec
and
lods
scas
cmp
xor
insb
xor
push
mov
and
clc
cmpsl
sub
es
sub
pop
notb
xlat
and
push
and
imul
lock
pop
std
jne
repnz
js
and
mov
mov
aam
cld
jge
movsl
das
pop
dec
inc
mov
xchg
mov
inc
xchg
addr16
push
jle
inc
jge
pop
mov
sub
sbb
pop
jle
lds
sbb
mov
jg
or
push
and
out
in
loopne
out
xchg
fs
test
int
add
fadd
mov
xchg
pop
aaa
sub
jnp
adc
test
cmp
jmp
mov
xorb
in
xorb
mov
xorb
push
popa
int3
lods
xor
fcmovu
mov
sub
and
cmp
adc
icebp
cmp
add
dec
fdivs
sub
cwtl
cld
jmp
sub
dec
sub
push
arpl
push
ficompl
test
stc
rcrb
mov
mov
subl
xor
subl
sub
hlt
fiadds
imul
imul
popa
imul
lret
sub
pop
icebp
ja
jne
xchg
ss
jno
add
ds
mov
shl
dec
mov
popf
movb
fcmovnu
dec
sbb
push
and
push
shlb
das
inc
sbb
insl
lock
lahf
sbb
mov
hlt
cltd
sbb
mov
movl
jo
lahf
lock
aam
xor
cli
loop
mov
mov
popf
pop
pop
shll
inc
out
into
test
pushf
mov
rorb
lds
adc
mov
aaa
dec
pushf
xchg
cwtl
push
cmp
push
cmpsl
adc
adc
out
testl
cli
mov
sbb
fwait
and
push
mov
test
add
mov
lea
xchg
ret
cwtl
cmp
imul
dec
out
and
or
jae
in
aad
mov
or
hlt
push
jl
sub
add
bsr
mov
xor
cmp
push
lods
adc
mov
in
rcrb
mov
adc
stos
out
daa
into
lock
out
sub
hlt
dec
or
mov
sub
bound
xor
cmp
mov
xchg
mov
sub
hlt
mov
frstor
dec
dec
mov
add
aaa
neg
xlat
jmp
xchg
iret
fdivrp
add
inc
mov
sbb
arpl
dec
jp
adc
fists
cmp
es
xchg
lret
sbb
sub
clc
outsl
mov
xor
push
daa
addl
mov
inc
fiadds
jno
mov
xchg
mov
fiadds
into
aam
int3
sbb
ret
repnz
dec
fld
push
imul
xchg
pushf
and
into
lcall
dec
test
mov
loopne
movsl
sti
add
lods
test
shlb
adc
lret
push
pop
and
cmp
adcl
ficoms
out
push
lds
lds
mov
nop
xchg
inc
stos
addr16
popl
into
sub
push
int3
testb
pop
sub
pop
pop
and
dec
test
mov
cmp
out
test
sbb
jge
cmp
push
mov
mov
jb
lods
cmc
ljmp
jnp
lahf
lea
mov
unpcklps
sub
adc
mov
xchg
pop
or
and
pop
pop
add
in
xchg
je
lcall
push
lcall
test
jne
dec
jns
div
movsb
fbstp
test
and
mov
xchg
add
stc
mov
rcll
clc
int3
xchg
test
xchg
and
adc
adc
mov
or
xchg
mov
scas
and
pop
daa
jmp
push
rcll
inc
je
icebp
push
cltd
fsubr
rcrb
cmp
push
mov
or
jecxz
jnp
xchg
std
enter
inc
sub
adc
jbe
lret
outsl
mov
sub
orl
pop
cli
push
xor
loope
pop
dec
mov
xlat
iret
push
dec
jb
push
lods
dec
lcall
pushf
movsb
mov
and
jb
inc
ss
push
fldt
in
cwtl
test
dec
pop
test
jle
jmp
xchg
jae
mov
test
adc
mov
xor
pop
cmp
inc
pop
mov
addr16
int3
add
sbb
loopne
icebp
loopne
test
pusha
xor
inc
push
jp
out
lods
rolb
aam
jmp
rclb
js
adc
inc
mov
cmp
pop
cmp
inc
xlat
mov
les
xchg
mov
pop
sbb
xlat
cmp
mov
cwtl
dec
rcll
leave
lods
imul
pmaxsw
out
xlat
pop
sbb
or
xor
data16
adc
fldenv
das
cmpsb
mov
pop
test
hlt
nop
es
jmp
or
cld
cmp
cmp
add
ljmp
xchg
cmp
bound
sarb
sahf
sub
into
sub
sahf
call
insl
or
xlat
push
mov
icebp
in
xlat
adc
cmp
mov
mov
je
pop
add
and
addr16
ljmp
ret
pop
fdivl
fsubr
mov
lea
lcall
mov
fucom
fistps
push
dec
psubd
push
xchg
pop
fisttpl
ja
and
cmp
pop
push
clc
push
jnp
push
cwtl
and
jge
sub
push
inc
jo
mov
fs
out
push
pcmpeqb
and
notl
cs
outsl
jl
fs
sbb
mov
xchg
popa
xor
cmp
loop
mov
nop
inc
cmc
nop
ret
test
dec
push
outsl
pop
andb
xchg
pop
mov
lea
in
sbb
dec
aas
in
mov
pop
pop
mov
movl
adc
insl
mov
pop
mov
mov
std
test
add
mov
ret
inc
xor
faddp
out
lds
sub
push
clc
add
test
int3
push
mov
mov
inc
mov
ret
icebp
inc
pop
mov
lods
pcmpeqb
jp
mov
sub
push
mov
xchg
or
jns
push
sub
fxch
sub
sub
outsl
cmpsl
xchg
mov
pushf
mov
imul
add
cs
mov
clc
inc
fnstsw
ja
outsl
cs
outsl
mov
mov
sbb
loopne
xor
sbb
xchg
lock
mov
dec
jbe
sbb
push
dec
push
jle
ret
mov
or
jnp
into
fbld
sub
mov
stos
or
add
push
cmp
aad
lcall
mov
loop
push
jns
mov
sbb
sub
jnp
mov
pop
movsb
xor
jbe
test
fstps
loopne
repnz
dec
fs
dec
daa
sub
call
jno
sahf
and
add
mov
cmp
mov
imul
inc
cld
pushw
jo
mov
adc
int3
inc
cmpsb
ss
int
cmc
push
ljmp
insl
lods
cld
sub
bound
push
daa
push
not
inc
xor
or
insb
outsl
mov
pop
and
jge
jmp
mov
gs
inc
not
cmp
std
mov
outsl
push
lret
hlt
shr
aad
mov
jge
fldenv
and
stos
xchg
xorl
stc
arpl
xchg
hlt
stos
xchg
mov
adc
movsb
xor
dec
loope
mov
cmpsl
mov
sbb
lcall
out
push
mov
sbb
out
pusha
orl
push
out
lret
cwtl
dec
dec
ret
test
pop
fprem
jae
pushf
mov
hlt
iret
and
cmpsb
lock
mov
icebp
pusha
xchg
test
lcall
adc
inc
jp
cli
cmpsl
jne
adc
mov
popa
xor
cwtl
stc
adc
movsl
pop
adc
and
xchg
repnz
and
push
lock
into
in
xchg
sbb
loope
sbb
push
dec
das
rorl
sti
cmp
and
pop
sbb
in
pushf
arpl
sarb
frstpm(287
jns
pop
ss
test
sub
aad
lcall
stos
push
or
or
inc
imul
mov
adc
cld
inc
lea
fisubl
test
mov
es
cmp
aad
push
cmpsb
or
sahf
mov
in
pop
xor
xor
aad
sahf
ret
hlt
adcl
jg
mov
lods
shlb
fisubrs
cmp
sbb
int3
push
pop
prefetch
sbb
cmpsl
jo
jns
mov
mov
jnp
cmpsl
shlb
jecxz
jno
test
call
adc
in
dec
xchg
bound
inc
fcmovnbe
jno
adc
ljmp
xor
test
sahf
arpl
xchg
xchg
mov
sub
outsb
cmc
xor
mov
adc
jae
lods
fstpt
cli
test
push
cwtl
loopne
jle
js
jne
cmp
ror
xor
sub
inc
dec
mov
fs
or
pop
xchg
inc
push
xchg
and
mov
inc
andl
or
iret
push
test
mov
jns
scas
pop
sbb
inc
jg
cltd
fs
mov
loopne
test
shll
hlt
xchg
cmc
pop
xchg
xor
shrl
or
dec
imul
ja
adc
pop
rcrl
int
and
mov
in
sbb
rcrl
mov
adc
scas
mov
sti
into
mov
imul
test
or
sbb
cmpsb
ret
jnp
cmp
pop
lret
imul
sub
adc
aam
test
xchg
mov
ljmp
inc
test
mov
add
pushf
cld
lods
fcompl
mov
pop
in
mov
outsb
lret
imul
or
push
and
or
mov
add
shrb
mov
ja
dec
stc
mov
mov
push
aas
mov
lock
sbb
sti
mov
ficomps
and
in
fsubl
adc
inc
ja
popa
fidivrs
daa
xor
dec
push
mov
sbb
scas
mov
js
std
popf
clc
lahf
nop
and
in
mov
xchg
or
cmp
mov
mov
fnstenv
jae
test
push
dec
pop
pop
stos
xor
sub
jne
lea
sbb
pop
mov
clc
insb
jmp
jmp
mov
rolb
les
test
sbb
jmp
add
mov
shl
inc
mov
js
into
inc
insl
daa
roll
shl
iret
mov
sub
ret
xor
add
out
jbe
mov
jo
pop
fldt
call
ror
cmpsb
adc
movsb
dec
mov
xchg
lahf
gs
in
mov
pop
mov
sarl
rcrl
lock
push
sarl
or
jne
xchg
mov
dec
fucomp
test
int3
icebp
push
pop
aam
addr16
mov
jecxz
push
cmp
call
adc
mov
in
dec
jge
outsl
inc
fldenv
xor
pop
push
loope
lahf
mov
mov
sbb
icebp
es
iret
out
pop
add
xlat
jge
addr16
enter
xlat
sub
push
icebp
mov
popf
sub
jle
je
push
adc
add
xor
jmp
and
lret
add
push
cmp
adc
lcall
fistl
jmp
lcall
mov
lret
or
mov
and
xor
add
fs
pop
out
insl
fadd
repnz
fisttpl
sbb
xor
dec
mov
pop
loopne
push
push
cmp
or
jl
lcall
xchg
jecxz
stos
xchg
rolb
mov
jbe
add
mov
test
mov
cwtl
push
pop
ljmp
jb
and
incl
repnz
inc
cmc
jle
mov
aas
fimuls
or
mov
scas
sbb
mov
setns
movsb
add
jne
cmpsb
loop
ja
rorb
jne
out
test
stos
cmpsb
mov
mov
add
sti
aad
rolb
jg
jg
rcll
add
push
inc
out
gs
mov
test
xchg
sti
iret
or
in
xor
scas
cmp
ja
loop
div
call
outsb
fildl
jl
xchg
mov
decl
inc
and
repz
push
pop
popa
in
push
js
dec
aas
fwait
ljmp
xchg
das
sbb
sub
xor
ljmp
enter
sbb
mov
shll
movaps
daa
add
adc
or
add
sub
xchg
push
lret
push
repnz
mov
dec
shrl
jae
jg
pop
mov
inc
rcrl
movsb
dec
call
fs
jae
dec
push
sub
popf
faddl
xor
repz
dec
out
sub
or
push
jle
sbb
mov
rclb
fcmovbe
and
jmp
cmp
mov
das
mov
aaa
dec
mov
in
enter
out
aaa
sbb
inc
or
xor
lds
insl
in
pushf
ja
outsb
int
leave
jg
jno
dec
jge
mov
stos
xchg
dec
lret
mov
pusha
out
jle
mov
push
xor
negl
xor
inc
test
sarb
add
mov
dec
mov
bound
jnp
add
and
movsb
cmp
cmc
lret
mov
push
jbe
outsl
fsubp
scas
mov
mov
mov
or
js
fcmovnb
bound
or
xchg
das
jmp
mov
inc
gs
or
pop
ds
movsb
pop
clc
push
mov
xchg
jge
pop
imul
or
dec
stos
mov
cltd
fnstcw
cmp
pop
push
js
xor
cmpsb
ja
das
dec
loopne
xchg
mov
mov
mov
push
jb
testl
mov
or
repz
cmpsb
sub
or
loope
jnp
xchg
lahf
movsb
cld
inc
in
sub
xchg
lock
movsb
adc
lcall
sub
mov
sbb
mov
sbb
js
cmp
xchg
sbb
aad
cli
fcmovnbe
and
shrb
mov
data16
pop
cld
jmp
inc
test
dec
aam
lods
lds
cmpsb
xchg
push
insb
mov
inc
pop
xor
test
in
mov
pusha
cld
jb
imulb
ret
aam
jg
pop
add
je
loopne
lods
lcall
cmp
sub
sbb
or
cld
sbb
or
cmp
sub
mov
fwait
insb
mov
stos
cmp
sub
sbb
or
cld
sbb
or
cmp
sub
mov
fwait
insb
ret
pop
ret
dec
stos
cmp
sub
sbb
or
cld
ret
in
or
cmp
sub
mov
mov
dec
stos
cmp
sub
pushf
jnp
jmp
in
mov
lret
shll
arpl
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
mov
dec
pop
pop
aad
pop
push
sub
jmp
testl
fistps
push
dec
pop
pop
outsl
sub
dec
or
scas
jmp
lahf
fucomi
enter
mov
fwait
das
jb
jnp
push
pop
inc
outsl
xor
dec
adc
scas
or
fisttpl
mov
pop
imul
inc
aas
dec
shl
les
mov
insb
fisubrl
pusha
mov
jecxz
imul
ss
jp
pop
cmpsl
outsb
mov
sub
fistl
fistl
cs
mov
stos
xchg
ds
add
aas
imul
les
imull
ja
pop
push
mov
lcall
dec
repz
sti
scas
push
pop
in
mov
ja
psubb
rclb
lcall
ja
dec
pop
pop
sbb
lretw
mov
ss
mov
xlat
fs
fwait
test
nop
adc
xchg
push
ljmp
fwait
clc
dec
into
je
mov
aas
insb
cvtdq2ps
inc
outsl
sub
dec
adc
scas
repz
ret
ljmp
push
jnp
arpl
pop
sub
sbb
cmp
orb
fwait
mov
mov
adc
cmp
or
or
daa
ja
xchg
rcrb
movsb
pop
sub
push
insb
sub
cs
jg
dec
or
scas
jmp
sti
lret
lahf
fucomi
stos
mov
das
imul
cmovnp
pop
outsl
sub
dec
or
scas
jmp
sti
lret
lahf
fucomi
stos
mov
das
imul
subb
sbb
pop
mov
add
jg
and
mov
push
loopne,pt
dec
das
add
inc
mov
and
popf
or
das
fisttpll
lea
fiaddl
fcomp
push
iret
mov
adc
addr16
cltd
pop
push
or
inc
push
dec
sbb
dec
mov
lahf
cltd
lea
outsl
jmp
pop
add
sbb
out
gs
xor
insb
notb
stos
dec
mov
cltd
jg
sbb
jo
sub
cmp
stos
scas
stos
aam
push
divl
movsl
aad
pop
sbb
push
pop
adc
test
test
pop
loopne
lock
and
xor
jnp
mov
xchg
notb
push
pop
adc
out
push
push
loop
mov
or
adc
pushf
daa
test
dec
xor
and
jmp
hlt
inc
mov
andl
adc
sub
push
sub
sbb
add
dec
sbbb
pop
jbe
das
repz
sbb
stc
jo
push
add
inc
and
int
std
stc
les
jne
adc
jo
xor
mov
sub
or
sbb
adc
push
sbb
lods
scas
mov
jle
ds
cmp
pushf
pop
pop
leave
scas
imul
in
int3
aam
jb
imul
imul
call
and
push
sub
lretw
or
push
scas
jbe
les
sbb
cmp
clc
mov
stos
or
rcrb
add
adc
daa
pop
stos
inc
mov
shr
jo
enter
push
outsb
xchg
mov
or
ljmp
mov
and
pop
push
xor
mov
int3
ljmp
scas
hlt
dec
add
adc
pop
add
lock
mov
push
in
jno
push
out
dec
loope
rclb
jle
aad
or
ret
cmp
mov
aas
jns
sbbl
repnz
call
gs
cltd
jg
loope
xchg
inc
sbb
pop
stos
sbb
mov
in
adcb
int3
mov
add
cmp
sti
in
push
mov
fnstenv
aad
insb
inc
cmp
mov
imul
shrb
data16
jo
out
cli
es
jns
dec
repz
push
push
loope
adc
cmp
mov
in
push
lods
inc
daa
sbb
in
mov
movsl
and
adc
xchg
aaa
iret
into
fimull
test
test
dec
mov
addr16
fsubrl
sub
cld
mov
mov
int3
push
sub
cs
adc
mov
ret
scas
mov
pop
fmuls
loope
idivl
add
and
fmul
pop
into
xor
xor
sbb
mov
cwtl
loope
shll
xor
dec
clc
xchg
lds
test
cmp
andl
in
push
cmc
or
pop
cmp
mov
xchg
inc
je
mov
fcmovnu
xchg
lahf
jno
xchg
out
std
or
out
stc
call
fcompl
and
pop
mov
and
stc
jmp
push
test
fdivr
pop
xlat
sub
in
pop
out
gs
jns
inc
fs
bound
mov
outsl
stc
in
xchg
inc
popf
repnz
jp
movsb
js
sub
repz
cmpsb
js
std
popf
xchg
jg
cmp
add
mov
inc
sbb
xchg
push
or
sub
mov
xor
pop
dec
mov
dec
sbb
mov
push
xchg
cwtl
jbe
dec
out
arpl
mov
adc
data16
xor
jecxz
cmpsb
repz
sbb
pushf
orl
cmp
fwait
cld
inc
stos
int
push
int3
and
cli
cmp
jb
mov
hlt
pop
push
fmull
sub
mov
cmpsb
add
fstps
inc
xchg
rcr
xchg
outsl
stc
inc
mov
or
sti
mov
mov
dec
mov
mov
mov
xchg
xchg
sbb
jbe
dec
xchg
lret
dec
mov
xlat
cltd
lret
cltd
stos
popf
lret
push
xor
sub
test
aam
imul
repz
enter
data16
mov
cwtl
pop
test
lods
imulb
movsl
xlat
sbb
in
cmp
daa
push
lds
xor
mov
adc
mov
pop
sti
out
or
push
cwtl
mov
addr16
mov
cmpsl
lds
movsl
dec
test
jb
dec
mov
pop
stos
add
sub
pop
enter
inc
sub
lcall
xchg
inc
sub
and
stc
adc
movsl
das
sbb
cmp
loop
add
xchg
mov
test
loope
in
inc
xor
adc
ret
fisttpll
imul
cmp
pop
push
pop
xlat
cmp
rep
pushf
lret
lock
sub
or
arpl
xchg
into
mov
pop
inc
sti
mov
test
cli
cwtl
xchg
out
hlt
shll
mov
pop
call
icebp
mov
iret
sbb
fmull
subl
arpl
nop
and
jno
pop
mov
lahf
xchg
ja
lods
mov
movb
lcall
xchg
mov
popa
in
cs
pop
out
pushf
repnz
lock
movsl
aaa
cmc
pop
stos
dec
xchg
fidivrl
shll
shr
ret
xchg
sub
pop
adc
adc
add
push
xchg
or
adc
fldt
dec
dec
push
mov
inc
cli
xchg
xchg
cld
ret
hlt
sub
in
jge
mov
jmp
mov
subl
outsb
rcll
lret
mov
imul
mov
mov
sarl
imul
mov
dec
movsl
int3
dec
or
andw
sbb
lahf
fsubrl
leave
sub
jl
xor
out
cmp
loopne
mov
jno
leave
jmp
add
push
adc
clc
mov
or
call
adc
push
xchg
push
mov
xor
pop
sub
mov
aad
adc
inc
insb
sti
adc
xor
out
push
fsts
lea
cmp
shrb
jp
or
ja
xchg
push
clc
addl
repnz
mov
cmpsl
out
xor
cmp
hlt
xor
mov
push
jge
popf
add
mov
inc
xor
lods
aas
scas
xchg
lock
push
rorb
ja
pop
push
push
cmp
cwtl
andl
xchg
dec
xchg
inc
shlb
mov
add
adc
dec
imul
imul
jb
pop
adc
dec
lds
out
filds
sahf
adc
jne
or
out
xchg
arpl
fs
cmp
lahf
cmp
and
xor
sbb
push
popf
notb
cltd
cmc
imul
or
jnp
jmp
add
dec
xchg
add
mov
inc
xchg
test
pop
push
jne
sbb
js
mov
hlt
jae
push
xlat
mov
jno
rolb
rcrl
mov
xlat
pop
sbb
pop
and
fwait
or
cmp
xor
loopne
sub
push
mov
adc
ja
call
std
jg
in
mov
orb
jne
enter
and
mov
xor
and
std
sbb
sub
pop
and
xchg
sub
xor
ficomps
stos
fsubl
loop
mov
xor
push
sub
pusha
ds
mov
repnz
and
pop
cmp
cltd
imul
mov
std
sahf
fildl
fs
xor
cmp
and
lds
insl
add
jle
ja
cs
cmp
push
xchg
and
push
mov
adc
jecxz
mov
add
pop
int
adc
lret
jnp
shrl
sub
call
cld
stos
jg
mov
dec
jle
xchg
xchg
add
pop
push
jb
mov
popa
cmc
sub
mov
xchg
mov
cmpsb
out
cld
sub
jno
xor
and
mov
sbb
pop
push
out
gs
and
cmp
notb
pop
stc
jb
fs
sbb
jp
fadds
xchg
loopne
in
and
inc
adc
jnp
xchg
in
loopne
xor
and
jnp
mov
loope
dec
dec
xlat
aas
fsubrs
insb
fimull
push
add
adc
clc
loopne
fisubrs
outsl
and
rcll
mov
dec
cltd
jge
repnz
mov
cld
addb
xor
test
mov
push
jae
loope
fidivrs
inc
loop
insb
xlat
cmp
mov
jl
mov
add
cmp
loopne
sbb
rolb
lea
adcb
cmpsb
jnp
jmp
inc
jae
mov
dec
ds
inc
das
sarb
jle
stc
mov
xchg
and
insb
outsl
int
mov
mov
cmp
lahf
shlb
iret
fnstcw
mov
jmp
add
or
push
jb
dec
iret
outsl
aaa
jno
das
inc
scas
mov
leave
or
xor
fstpl
inc
or
pop
sbb
fiaddl
popf
aas
and
test
cltd
outsl
inc
sbb
mov
aam
data16
rolb
lret
pop
mov
sbb
fidivs
jo
xchg
lds
inc
and
pop
inc
push
insb
lock
push
jb
jecxz
pushf
fstl
imul
fwait
sub
das
imulb
xchg
mov
xor
jp
mov
and
or
push
mov
out
mov
fisubrs
dec
lea
repnz
insl
cmp
cmp
scas
ret
stos
mov
into
inc
xor
hlt
or
ds
lds
scas
cmpsb
in
sbb
lret
es
mov
xchg
mov
lahf
mov
sbb
int
xor
dec
in
xor
out
jl
and
loopne
mov
inc
cli
mov
iret
inc
xorb
cmp
xor
mov
fbstp
mov
push
dec
movsb
push
imul
jle,pt
xchg
jae
bound
sub
add
fdivrs
lcall
dec
shlb
in
leave
loop
cltd
sbb
shlb
adc
movsl
in
jg
mov
pop
icebp
jecxz
mov
ret
sub
mov
je
outsb
icebp
out
mov
nop
mov
call
sbb
rorl
and
inc
fadd
and
fmul
mov
lcall
xor
movsl
lahf
ficoms
je
jp
xchg
and
push
outsb
imul
lods
call
cmpsb
add
sub
repnz
daa
out
sbb
mov
mov
jbe
fwait
bswap
adc
pop
push
int
jge
or
inc
movsb
cmp
stos
mov
insb
stc
cs
pop
push
push
daa
scas
pop
push
popf
popa
out
pop
add
pusha
push
cmp
pop
fcomps
dec
cmp
mov
aaa
mov
xor
mov
scas
cli
add
dec
add
and
dec
call
cmc
bound
js
imul
push
jnp
dec
inc
movsl
ja
mov
popf
sbbb
imul
out
scas
int3
jecxz
pusha
jl
xor
xchg
or
mov
pop
cmc
cwtl
inc
iret
jbe
inc
jb
subb
mov
add
mov
ljmp
mov
sbb
mov
jo
xchg
aam
xchg
xchg
xor
lahf
aaa
jmp
movsb
add
ds
jge
add
xchg
shl
xchg
lods
mov
pop
aaa
push
dec
shlb
pushf
and
mov
jg
xchg
mov
or
xchg
xor
dec
xor
xchg
jl
cmp
js
fiaddl
sub
cmc
and
call
mov
les
stos
dec
sub
je
xor
pop
mov
jl
ret
adcl
aad
das
xchg
fmul
imul
pop
loop
cmp
or
xor
xor
push
pop
bswap
loope
mov
pop
sbb
jg
notl
shll
inc
out
outsl
out
or
outsl
xchg
jne
jo
or
sbb
dec
popa
jle
sub
and
inc
stos
addl
sub
mov
add
push
dec
pop
mov
pop
push
dec
loopne
das
xchg
jg
js
popa
mov
or
xor
je
outsb
cmp
mov
push
mov
jo
cmp
sbb
scas
add
push
mov
iret
xorb
jae
daa
ffreep
stc
xchg
das
pop
pushf
add
fstpt
and
push
and
aad
push
fsubrl
test
xchg
jle
cltd
mov
mov
sahf
into
sub
cli
dec
mov
mov
xchg
roll
mov
arpl
shlb
dec
sbb
jge
mov
fildl
jno
mov
test
xchg
inc
das
imul
mov
or
sub
jle
or
testb
mov
xchg
xchg
notl
mov
mov
dec
add
jge
jecxz
push
mov
inc
sarb
popf
and
pop
push
call
sbb
out
aaa
out
cmp
adc
jmp
test
add
push
pop
imul
into
ds
xchg
sub
pop
inc
je
insb
xor
jnp
and
bound
xor
scas
mov
mov
or
xchg
jae
popa
lods
mov
scas
jecxz
jle
xchg
je
mov
adc
in
mov
cmp
fcmovbe
scas
int3
add
imul
jb
hlt
repnz
mov
xlat
movsl
arpl
in
inc
mov
inc
xor
outsb
sub
pop
movsb
loopne
lds
lods
or
movsl
ret
jno
fs
jbe
inc
lret
ret
sub
inc
adc
addr16
inc
mov
add
lea
daa
or
fimuls
stos
and
lret
in
movsl
sbb
jne
outsl
push
pop
or
dec
cmp
fwait
lods
mov
ja
lods
and
dec
fmull
out
push
scas
lds
inc
aad
outsl
test
rcl
cmp
fistps
cs
sub
out
xor
adc
push
repnz
ds
cld
mov
aad
xchg
in
stc
data16
mov
sbb
mov
das
ss
inc
das
lods
sub
mov
std
sbb
lcall
sub
cmpsb
loopne
sub
enter
lahf
lret
xchg
fildll
or
jnp
out
push
xchg
shr
gs
jecxz
jle
loope
cli
pushl
popa
das
sahf
pop
lret
in
sti
pop
lcall
sbbb
or
xchg
jne
jnp
int
pushf
dec
adc
fmulp
aaa
movsl
cmpsb
xchg
and
mov
lret
sbb
jle
adc
mov
repnz
jno
mov
jns
rcrl
and
adc
ss
or
pop
pop
andb
jo
fidivl
imul
xor
push
mull
lock
and
adc
and
aaa
mov
pop
xor
fldl2t
mov
or
dec
mov
sbb
popf
inc
test
push
mov
fwait
lahf
mov
jo
scas
cs
mov
and
sahf
push
cmp
daa
xchg
and
mov
stos
insl
sbb
and
dec
shr
and
mov
or
inc
enter
mov
cwtl
or
jo
sbbl
push
in
jo
clc
fisubs
clc
push
cmp
pusha
fdivl
adc
nop
out
andb
bound
clts
mov
jmp
lea
nop
lods
xor
rorl
addl
pop
jne
int
xchg
addr16
cmp
mov
ficomps
cmc
les
idivl
insb
gs
test
adc
or
sub
mov
inc
movsl
lahf
fwait
in
fwait
or
loop
add
inc
sub
dec
fwait
dec
and
dec
in
xor
xor
loope
dec
xchg
ljmp
push
ret
mov
xlat
xor
ficoml
push
ja
movsl
scas
pop
xor
dec
and
repz
inc
vfrczsd
icebp
and
push
mov
loop
push
and
inc
fld
push
jp
xchg
ret
xchg
jp
mov
jmp
adc
fimuls
and
mov
aam
jo
jae
mov
loope
aad
and
into
jnp
repz
rclb
dec
mov
movb
sbb
aad
sbb
push
les
pushf
sbbl
mov
outsb
or
mov
push
cmpsb
insb
lret
sub
sbb
rcl
stc
sbbl
into
ss
rcrb
daa
aad
sub
test
pop
loope
pop
cmp
push
jl
fmull
lahf
mov
sarl
imul
fs
out
sbb
cwtl
inc
push
pop
in
jnp
aaa
xchg
jecxz
scas
sbb
xor
jmp
clc
xor
jg
je
xchg
cld
fcom
insb
dec
mov
outsb
mov
cwtl
orb
inc
fdivrs
sub
pop
lds
stos
mov
mov
or
sahf
adc
cmpsl
in
push
push
adc
loopne
add
cmp
rorl
lods
inc
clc
and
mov
mov
push
call
ljmp
insb
fildl
out
cli
sub
ret
sbb
ljmp
in
daa
mov
inc
adc
aas
mov
int3
rorl
pop
and
mov
sub
icebp
insl
mov
fdiv
sbb
push
bound
jnp
xor
mov
and
jg
decl
lock
cs
mov
add
inc
popa
sub
cli
xchg
imul
jecxz
and
int
or
test
pop
xchg
and
lea
mov
pop
rcr
xchg
fwait
ds
gs
sbb
dec
pop
xchg
les
and
cmp
dec
movsl
jbe
pop
inc
inc
shll
ret
pop
xlat
jo
subl
cmpsl
mov
vhsubpd
enter
ret
jne
sbb
push
insl
std
mov
arpl
jle
sbb
dec
push
jg
aad
sbb
push
inc
cld
lods
loopne
daa
push
repnz
and
dec
mov
inc
add
imul
inc
loopne
mov
jecxz
mov
jle
fs
ljmp
in
push
aad
cli
outsb
mov
inc
jmp
test
push
repnz
jb
mov
xor
push
xchg
loope
push
push
imul
sbb
mov
outsb
or
pushf
ret
lock
sarl
jbe
inc
rorb
xor
add
ret
sub
sbb
cmpsb
cmp
fstpt
mov
int3
roll
scas
xor
cmpsb
mov
pop
pusha
sbb
hlt
adc
pusha
xchg
into
jecxz
out
jns
mov
cld
push
sahf
adc
push
or
xlat
xor
xchg
imul
rorb
int3
jecxz
enter
insb
stc
xchg
imul
and
jb
movsl
fs
adc
aam
das
fcomps
mov
repz
jp
scas
jns
inc
sbb
pop
mov
lods
xchg
push
xchg
sbb
xorb
xor
dec
xchg
shlb
mov
mov
xchg
in
sbb
xchg
icebp
mov
cmp
lods
jbe
aam
jnp
ljmp
or
rclb
jae
out
jecxz
push
push
enter
pop
dec
mov
shl
sbb
aas
call
cmp
fcompl
add
scas
jg
sbb
push
das
pop
lods
adc
sbb
mov
cmpsb
xchg
sti
into
bswap
das
and
inc
adc
dec
sub
mov
xlat
xchg
pop
xor
mov
in
xlat
adc
and
ss
jecxz
push
pop
icebp
dec
es
adc
xor
dec
lcall
out
pop
xchg
jle
mov
adc
fadds
shrl
push
inc
testl
lds
cmp
divl
hlt
mov
aas
cld
mov
nop
lods
pop
inc
jg
or
enter
dec
xor
shlb
loop
add
xchg
dec
dec
rcrl
out
mov
mov
sbb
inc
bound
gs
lret
pop
push
iret
ss
lea
xchg
inc
dec
xchg
popf
aaa
push
cs
sti
test
pop
loopne
xor
push
adc
cmp
icebp
fs
sbb
inc
mov
and
mov
int3
bound
mov
fidivrs
nop
cmp
sbb
rol
or
cwtl
jb
subl
push
inc
mov
cmp
xor
loopne
movsb
xor
pop
int3
es
inc
mov
jnp
test
loop
jbe
dec
das
lea
imul
ret
pusha
and
data16
sbb
jnp
movsb
pop
pop
outsl
sub
dec
or
scas
jmp
sti
lret
lahf
fucomi
stos
mov
das
imul
cmovnp
pop
outsl
sub
dec
or
scas
jmp
sti
lret
lahf
fucomi
stos
mov
das
imul
cmovnp
pop
outsl
sub
dec
or
scas
jmp
sti
lret
lahf
stos
mov
imul
push
dec
pop
pop
outsl
sub
dec
or
scas
jmp
push
and
and
xor
mov
jns
dec
mov
push
pushf
pop
hlt
sbb
jmp
cmp
dec
test
jns
mov
jns
dec
mov
cmp
or
sbb
jmp
cmp
dec
test
jns
mov
jns
dec
mov
cmp
or
sbb
xlat
cmp
dec
sti
sub
sub
adc
test
out
mov
add
jb
shl
lods
and
ds
scas
shlb
add
push
gs
cmp
inc
cmpsb
leave
rcr
adc
push
xchg
cltd
xlat
leave
fcomps
imul
jbe
repz
ret
mov
or
mov
or
cmp
mov
mov
jbe
cwtl
mov
mov
sub
ficoml
sbb
pop
jmp
sbb
sub
inc
movsb
ss
adc
lods
adc
movsb
xor
frndint
xchg
mov
mov
popa
adcl
ret
dec
push
pop
call
lods
push
or
pushf
jnp
dec
imul
cmp
or
sbb
jmp
cmp
dec
test
jns
in
add
stos
out
ud0
lods
inc
mov
xchg
jns
jl
pop
cmpsl
jl
iret
les
rorb
cld
ljmp
in
xor
dec
clc
push
lods
dec
xchg
pop
lods
mov
lods
jle
push
lahf
cmp
add
adc
out
cmp
sub
jmp
jmp
cmp
dec
test
jns
mov
jns
dec
mov
cmp
or
sbb
jmp
cmp
dec
test
jns
mov
insb
xor
mov
in
fdiv
notl
sub
rol
xchg
and
adc
sub
sbb
lahf
inc
sbb
xchg
scas
shr
mov
cld
jle
mov
int
sub
lahf
stc
outsl
mov
lea
arpl
inc
fdivs
fdivl
mov
mov
mov
sub
add
popf
push
loopne
sub
lcall
repnz
aas
cmp
mov
sbb
mov
or
nop
mov
jg
fucomip
mov
aam
xchg
jle
test
or
hlt
push
mov
fisubrl
aam
jle
or
frstor
mov
mov
or
and
stos
push
imul
aas
sbb
repnz
pop
lret
mov
cld
fldcw
xlat
or
mov
and
adc
popa
lahf
loop
stc
sub
jl
repz
stc
and
popa
adc
pop
adc
push
xchg
aam
inc
mov
fs
es
cwtl
sub
push
mov
pushf
loope
test
les
mov
add
outsl
leave
int
mov
xchg
inc
mov
xor
adc
nop
cli
mov
daa
loop
mov
mov
xchg
sub
adc
loopne
ret
sbb
mov
push
pop
xchg
ljmp
push
pushf
stos
mov
mov
imul
push
sub
into
cli
push
fdivrs
xchg
dec
jae
xor
jg
ret
subl
movsb
pop
fs
aas
mov
in
sub
sbb
jno
int
les
mov
or
dec
filds
mov
or
test
or
jo
cmp
in
aam
ljmp
sub
fwait
fwait
aas
pop
andl
jno
push
sarl
dec
jmp
mov
jns
loop,pt
pushf
jecxz
lods
mov
mov
out
nop
int3
adc
sub
pop
add
cmp
and
in
push
xchg
mov
push
pushl
or
andb
xchg
and
imul
mov
inc
test
push
sti
mov
std
xchg
cld
dec
push
jns
sbb
stc
cmp
cmp
xlat
imul
and
push
lret
xchg
push
adc
adc
jne
data16
imul
imull
addr16
movsb
pushf
in
mov
repz
xlat
nop
mov
out
xchg
add
mov
add
jne
dec
sbb
pop
mov
in
sbb
mov
cmp
insl
jg
cmp
mov
add
xor
pop
add
sub
add
pop
mov
mov
loop
adcb
push
in
mov
out
mov
and
les
sbb
jmp
sbb
mov
js
push
sub
setp
sarl
out
mov
push
lcall
shl
mov
inc
pop
sarl
lods
xchg
pushl
idivl
push
ss
adc
mov
out
rcr
cs
sahf
mov
sbb
mov
push
jmp
add
sar
mov
popf
fidivs
xor
xchg
inc
shl
dec
les
adc
enter
pushf
xor
jl
into
loope
loopne,pn
lea
mov
jp
sbb
xchg
inc
push
ficomps
lret
mov
inc
ljmp
aaa
ret
loopne
mulb
fistpl
in
les
es
pop
xchg
cmp
mov
int3
sub
jg
cmp
dec
lret
pop
or
jnp
pop
xchg
sbb
movsb
call
mov
add
jmp
pusha
das
icebp
lea
push
cwtl
loope
mov
xchg
insl
mov
xchg
out
inc
inc
aad
sti
push
addr16
push
cmp
movsl
jo
mov
mov
inc
ret
dec
pop
mov
loop
rcll
mov
sub
jge
pop
andb
in
xchg
in
inc
fcomps
jg
xchg
shr
and
push
mov
push
jb
cmp
xchg
jns
icebp
and
push
insl
int3
xchg
fs
push
lds
stos
or
shlb
pushl
mov
mov
cmc
out
bound
push
dec
sub
cwtl
and
aam
inc
adc
sbb
sub
das
fmull
enter
faddl
test
adc
xor
mov
iret
pop
lcall
int
xchg
push
mov
ds
dec
mov
inc
jns
rep
pusha
jcxz
fcmovnb
add
std
aaa
outsl
jnp
daa
and
jg
aas
std
and
push
dec
dec
in
fisttps
fists
cmp
xchg
sub
lods
pop
test
scas
inc
aaa
roll
mov
andl
xor
inc
scas
lcall
aas
jns
stos
sub
out
test
and
and
and
dec
jecxz
mov
cmp
mov
int3
mov
jnp
mov
push
sahf
inc
and
push
inc
mov
and
and
xchg
mov
dec
mov
xlat
inc
dec
mov
mov
pop
xlat
jmp
mov
std
lret
mov
cmp
fsubl
and
cld
cmp
jbe
les
scas
dec
insb
xchg
adcl
adc
xor
adcl
mov
sub
dec
add
push
mov
and
test
dec
xchg
lret
cmp
rep
jl
mov
xor
idiv
int3
dec
test
xlat
xchg
in
out
adc
mov
add
sub
xorl
repnz
cmp
mov
lock
imul
popa
cmc
in
lods
pop
cmp
stc
jmp
pop
pop
int
bound
hlt
cmpsb
cmp
xchg
mov
xchg
pusha
jno
mov
bound
sahf
out
repz
clc
pop
rcl
mov
push
iret
push
jb
repnz
lock
sub
push
shlb
rorb
out
fidivl
test
rclb
push
jo
scas
xchg
stos
ljmp
mov
mov
into
fwait
dec
fcoms
shlb
fstl
push
jnp
hlt
and
xor
push
test
sub
fcoms
outsb
xor
adc
repnz
les
add
jle
push
or
mov
rcrb
push
stos
popf
sbb
sbb
sbb
leave
imull
or
sub
push
ret
adc
pop
fdivs
xor
and
or
faddl
bound
xchg
sub
adcb
outsl
mov
xor
pop
jp
imul
cwtl
push
inc
or
pop
push
cmpsb
ljmp
xlat
sub
lahf
mov
in
fdivrl
int3
xchg
and
ret
xchg
mov
es
mov
xor
jae
or
adc
lcall
mov
subb
clc
in
movsb
sti
adc
das
loope
lods
or
push
inc
inc
dec
sub
jle
in
lret
jecxz
pcmpeqb
adc
adc
rolb
sbb
lods
adc
les
rolb
icebp
fldt
jge
lods
test
mov
arpl
fstpt
xchg
jb
and
add
push
cmpsl
sub
orb
jnp
mov
pop
mov
inc
xchg
pop
fildll
and
cmp
push
leave
dec
sub
xlat
sub
test
out
pop
fwait
mov
loopne
pusha
sbbl
clc
cmpsb
out
mov
mov
mov
mov
leave
or
xor
lcall
pop
fildl
jp
movsl
mov
push
pop
lods
cwtl
int
mov
add
and
inc
incb
mov
xorb
mov
cmc
mov
cwtl
push
inc
scas
out
bound
pop
push
std
mov
xor
lea
and
xchg
rcll
int
aas
fucomip
rolb
mov
jnp
fdivrp
mov
aam
jge
shl
inc
adc
das
pop
mov
call
icebp
jg
or
sti
pop
mov
lcall
pop
je
andl
push
adc
xor
stos
dec
sub
jno
inc
stc
dec
dec
lret
add
mov
xchg
rcll
call
xlat
gs
fimuls
scas
push
dec
iret
andl
aas
imul
sub
sub
shr
mov
sub
popa
mov
mov
push
orb
xchg
js
cmp
incl
jb
fs
cmp
mov
pop
sar
pushf
repz
aad
jl
inc
cmp
jbe
pop
push
pop
test
mov
loop
dec
cmp
sbb
testl
pop
push
xchg
pushf
lret
fidivl
das
xchg
pop
add
push
cwtl
jl
mov
adc
mov
adc
lahf
clc
int3
sbb
outsb
lea
or
push
lds
int
jb
push
xchg
sub
popf
adc
xchg
adc
stos
lods
out
xchg
idivb
adc
xchg
add
mov
loopne
push
hlt
dec
add
xchg
lods
and
popl
or
cwtl
fsubs
clts
mov
scas
push
xlat
pop
lods
dec
rep
or
mov
xchg
fstps
fnstsw
test
mov
pop
mov
push
push
mov
xchg
addr16
ds
mulb
mov
pushf
js
stc
sbb
enter
les
scas
dec
std
popa
cmp
xchg
push
cltd
pushf
fwait
pop
mov
stc
cmpsl
loopne
jb
mov
push
mov
js
sar
test
std
add
mov
ja
push
dec
nop
fnsetpm(287
notb
out
out
mov
mov
inc
nop
sbb
in
mov
mov
sbb
movsl
loop
fldt
jb
scas
mov
ficomps
push
adc
clc
cmpsb
aam
sub
jg
mov
push
mov
or
arpl
loop
jns
cmp
and
jo
subps
add
mov
dec
icebp
out
test
mov
mov
push
lock
jge
sbb
fdivp
cwtl
mov
mov
jne
pop
stos
fadds
push
or
loope
add
dec
or
out
punpckhdq
lods
test
sub
mov
cmp
mov
outsb
or
cwtl
add
std
jno
test
arpl
mov
cmp
push
shl
mov
add
xchg
add
dec
fnstenv
lret
movsl
dec
nop
iret
adc
mov
push
fstpl
aad
xchg
cli
sbb
xor
lcall
daa
in
mov
and
into
shlb
add
lret
push
dec
and
dec
mov
xor
xchg
xchg
mov
loop
es
pop
xchg
lods
insb
push
syscall
mov
loopne
push
and
mov
std
cmp
jle
jmp
repnz
aaa
daa
pop
in
scas
sub
cmp
xchg
cmpsb
sub
lcall
movsl
clc
sti
dec
mov
mov
jmp
and
loopne
mov
jns
sbb
adc
popa
mov
rcr
mov
inc
sub
mov
and
hlt
js
mov
jnp
mov
dec
pop
xchg
sub
mov
rorb
movsl
div
mov
in
cli
das
adc
adc
add
sahf
sbb
orb
test
ljmp
sub
hlt
lcall
mov
adc
fs
cmc
adc
mov
insb
or
rolb
shl
les
add
mov
cmp
adc
imul
adc
movsl
fnsave
shl
scas
lods
and
out
jecxz
jns
rolb
xchg
jmp
gs
js
xorl
xor
pop
mov
cmp
and
lods
lock
mul
inc
inc
mov
xchg
mov
int
inc
sbb
push
aad
push
fstps
xchg
pop
xor
push
loopne
push
xchg
mov
or
out
jae
out
scas
inc
sub
ja
xor
repnz
dec
push
out
out
popf
or
pop
clc
jge
jns
dec
xchg
bound
jmp
or
cmpsb
jmp
inc
mov
xor
xchg
sti
fists
and
jmp
and
dec
mov
into
aaa
mov
add
inc
mov
dec
jae
push
mov
ja
or
push
sub
repnz
mull
sub
jne
popf
xchg
fistpl
cmc
mov
add
pop
fsubrp
test
test
dec
mov
mov
ljmp
xor
add
out
shll
rorl
xlat
mov
dec
xor
jb
inc
mov
and
or
mov
rorb
xor
sbb
add
xchg
cmpsl
lods
push
lahf
int3
addr16
dec
scas
cld
je
dec
mov
test
imul
add
fs
xchg
sub
rcrl
icebp
cli
add
lods
push
repnz
mov
out
or
jb
cmpsb
repz
push
and
test
inc
sbb
loopew
mov
or
mov
push
movsl
in
mov
add
cmp
out
xchg
pusha
hlt
mov
dec
adc
adc
movsb
adcb
sub
jo
dec
cmc
dec
dec
add
movsl
stos
aam
sbb
mov
cmp
pop
mov
test
enter
push
cmp
lods
js
out
jge
roll
stos
sub
fs
fwait
cld
dec
imul
cmc
sub
aaa
lret
fxch
ret
sti
roll
push
fstps
mov
pushf
inc
dec
mov
pop
insb
xchg
pop
dec
loope
dec
cmp
std
mov
insl
adcl
mov
xchg
inc
fmuls
add
add
test
test
mov
jl
mov
sbb
std
sbb
push
daa
dec
push
sarb
sub
sub
cld
mov
into
add
call
cmpsl
out
add
jbe
mov
and
push
stos
or
pop
sub
push
cmp
sbb
add
mov
cmc
xchg
dec
js
insl
fistps
adc
repz
cmp
popf
pop
jo
lcall
cld
push
jo
es
xchg
jnp
xchg
lret
jg
and
pop
push
shrl
xchg
sbb
mov
sbb
cld
fs
loope
dec
pop
mov
fnstcw
sbb
test
mov
push
ret
sbb
or
pop
mov
adc
xlat
jmp
mov
ret
stos
mov
shll
jge
jge
push
test
add
dec
repz
xchg
bound
imul
mov
std
and
xlat
out
inc
push
jo
pop
popa
clc
subl
test
cs
pop
subb
add
inc
cmp
add
subb
add
or
outsl
nop
sar
jl
test
not
or
fs
add
cld
pop
xchg
cli
call
mov
enter
sbb
push
sahf
aam
sub
mov
rcrl
or
lret
scas
sbb
sarl
and
jecxz
cmp
jmp
bnd
movl
cmpsb
icebp
mov
fs
iret
mov
inc
jge
leave
cwtl
scas
dec
enter
pop
negl
cmc
pop
cmp
xchg
adc
in
sbb
nop
mov
loope
fnstcw
jbe
call
jb
add
cli
lret
jnp
and
stc
pop
inc
cmpsb
nop
inc
test
mov
div
pop
lret
cmpsb
insl
das
imul
jae
les
xor
cmp
ret
xor
inc
clc
xor
stos
push
pop
fldenv
ret
cmp
jecxz
loope
pop
and
pop
mov
push
fdiv
mov
mov
sub
xchg
addr16
lret
mov
inc
sti
pop
ds
xchg
push
cs
imul
bound
test
jnp
and
in
mov
push
test
and
lock
inc
sbb
xchg
insb
fdivr
inc
or
sub
out
fcmove
dec
insl
shlb
rcrl
jns
mov
fisubrs
inc
aaa
test
arpl
adc
in
push
cli
mov
push
dec
mov
adc
fadds
cmp
aas
sub
mov
jnp
mov
mov
mov
loop
sarl
cmpsl
sbb
in
mov
aad
lods
cmc
xlat
pop
dec
inc
jmp
push
jmp
repz
stos
jo
xchg
xchg
mov
xor
mov
js
push
mov
push
inc
cmp
imul
jo
out
out
jo
dec
imul
jnp
or
lahf
and
mov
cmp
int
mov
out
sahf
lret
push
xchg
imulb
loop
mov
and
push
pop
ja
sarb
rclb
mov
stos
sbb
hlt
cmp
popa
adc
lret
fcmovnb
outsl
frstor
cmpsb
mov
mov
int3
push
out
mov
ss
push
movsb
push
cs
mov
shlb
imull
aad
fadds
sti
jmp
mov
clc
adc
sbb
mov
dec
fstps
inc
mov
or
and
and
out
or
mov
or
pop
lret
out
jmp
sbb
or
repnz
mov
mov
std
pop
mov
movsb
inc
xchg
push
adc
mov
addr16
scas
call
shll
inc
jns
clc
les
mov
jns
mov
sbb
inc
mov
xor
push
sub
cmpsl
ljmp
loop
xchg
outsb
cld
xor
dec
jbe
shl
dec
testl
cmp
addr16
dec
mov
cmp
mov
sub
fildll
cltd
and
pop
and
sbb
stos
popa
movsl
jle
add
inc
fists
cmp
mov
xor
mov
mov
mov
push
movsl
sbb
push
fs
push
test
adc
adc
mov
js
mov
les
sti
divl
fidivl
shrb
sub
and
mov
lock
inc
mov
das
mov
push
mov
push
mov
adc
repz
rcrl
add
mov
push
push
ja
jmp
rcl
jns
jecxz
gs
mov
push
movsl
out
test
mov
adc
jg
addr16
push
shlb
sub
call
loop
je
cld
sbb
test
jno
jo
sahf
xchg
xchg
ds
jbe
xor
inc
out
es
out
mov
adc
cmp
jle
lahf
cs
imul
out
and
push
mov
inc
rcll
call
js
inc
cmc
jge
test
or
dec
enter
add
ja
in
addr16
xor
aad
cs
popa
sub
xchg
pop
push
sub
inc
jl
packuswb
out
sbb
sti
aam
adc
mov
add
jb
popf
enter
shl
push
inc
and
jb
xchg
jecxz
in
adc
xor
cmp
pop
int3
add
out
adc
sub
sub
pop
and
inc
std
pusha
fiaddl
add
arpl
push
jns
inc
mov
ficompl
jb
clc
in
loop
popf
lcall
mov
jno
mov
adc
dec
daa
jg
fs
add
xchg
xor
in
loop
lcall
cmp
movsb
jl
int3
lret
leave
sbb
inc
sti
inc
xor
es
mov
out
xchg
cld
mov
dec
mov
push
movsl
aad
int
shll
mov
imul
xchg
mov
inc
xor
pop
mov
loopne
je
mov
jg
orb
inc
fmul
dec
and
inc
loop
movsl
mov
xchg
push
add
lret
in
loope
fsubrs
stos
dec
jmp
cld
or
xchg
adc
in
xchg
lods
out
mov
mov
out
sbb
popf
lahf
xor
mov
ljmp
stos
push
pop
or
insb
dec
fldl
daa
inc
fistps
pop
leave
mov
in
jg
xor
cmp
mov
push
mov
inc
xorl
add
sti
mov
mov
aam
cmpsl
iret
pop
repz
mov
xchg
sub
push
jecxz
push
sti
aad
imul
sbb
iret
aam
loope
adc
sti
jnp
rorl
lds
xchg
cmp
fistpll
jmp
fcom
mov
into
xor
lods
mov
adc
adc
mov
sub
adc
cmpsl
out
xchg
add
dec
add
data16
adc
movsb
popa
adc
stos
mov
dec
mov
inc
leave
arpl
testb
hlt
add
add
inc
cmpsl
push
fs
call
push
imul
jnp
mov
or
pop
insl
mov
roll
xor
add
xor
jb
mov
push
jbe
xchg
in
mov
mov
push
js
fwait
loopne
or
cmpsb
add
xlat
mov
xchg
dec
mov
cmp
or
sbb
jmp
cmp
dec
test
jns
mov
jns
dec
mov
cmp
or
sbb
jmp
cmp
dec
test
jns
mov
jns
dec
mov
cmp
or
sbb
jmp
cmp
dec
test
mov
mov
jns
dec
mov
mov
notb
out
or
scas
ds
inc
xchg
jbe
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
dec
sbbl
ret
mov
iret
add
adc
and
xor
popa
mov
xchg
outsl
mov
pop
shrl
loope
icebp
iret
add
jno
and
xor
lahf
push
scas
and
xchg
outsl
mov
pop
shrl
loope
icebp
iret
test
pushl
popl
ficoml
shll
cmpl
loopne
push
xchg
xor
cmc
scas
lahf
adc
data16
mov
xchg
imul
dec
lock
pop
cs
ret
jmp
add
xor
and
fsts
push
dec
push
movsb
mov
mov
out
loope
int3
filds
xchg
lret
clc
dec
xchg
pop
adc
rorb
stos
outsb
aas
push
inc
ficompl
adc
xchg
popa
jo
fildll
mov
mov
dec
push
rcrb
lods
hlt
jp
daa
std
mov
fiadds
lods
lcall
mov
dec
int
in
pop
mov
je
adc
xor
xor
push
adc
addl
mov
rcrl
das
loope
icebp
iret
add
adc
and
xor
popa
mov
xchg
push
enter
lods
insl
rorl
cmp
gs
dec
xchg
and
xor
cmpl
ret
jns
insl
icebp
stos
jns
fs
inc
lcall
and
cmp
add
and
enter
leave
adc
inc
rcrl
das
loope
icebp
iret
add
adc
and
xor
popa
mov
xchg
outsl
mov
pop
shrl
loope
icebp
iret
add
adc
and
xor
popa
mov
fdiv
adc
icebp
or
adc
mov
and
iret
imul
inc
in
test
lahf
mov
push
pushw
mov
dec
cmp
inc
and
insl
xchg
adc
xchg
mov
hlt
adc
rol
xorl
out
into
add
pop
out
mov
pop
aam
xor
sub
xchg
data16
bound
mov
es
mov
ljmp
cld
inc
js
cld
mov
mov
inc
jns
mulb
jge
les
lds
aas
icebp
stos
rcrb
xchg
cltd
dec
or
aas
stc
jne
adc
mov
fnsave
add
sbb
out
lahf
inc
jb
xchg
mov
shrl
xor
and
ja
jge
mov
inc
xchg
sub
je
iret
sub
add
xchg
xchg
sbb
lcall
mov
dec
rorl
add
mov
rcrl
mov
mov
scas
test
imul
cmp
mov
inc
xor
ret
fmuls
pop
cld
ljmp
mov
dec
imul
sbb
aaa
xchg
cld
inc
sbb
push
jg
sbb
cmp
ret
enter
cmp
add
push
sbb
cs
enter
ss
jb
or
data16
rorl
xor
add
daa
push
out
popa
test
scas
mov
xchg
sbb
sub
je
shrl
rolb
inc
aas
insl
sti
xlat
mov
dec
fcoml
decl
jae
bound
sbb
and
pusha
scas
jecxz
sub
and
or
adc
cmpsb
sub
cmp
mov
sahf
mov
xor
cmovbe
rorl
out
and
cmpsl
enter
addl
mov
popa
enter
add
xchg
cmpsl
jne
pushf
pop
mov
bound
movsb
add
cmpl
jecxz
enter
push
or
cmp
inc
mov
inc
or
or
xchg
or
into
and
out
js
pop
and
inc
inc
test
rorl
push
push
adc
xchg
jbe
push
ljmp
mov
jae
inc
loope
mov
pushf
mov
xor
sub
and
bound
mov
pop
sub
pop
into
ficompl
mov
cs
add
ss
ret
inc
or
fstl
js
pop
mov
out
pop
lret
loopne
mov
pop
adc
out
mov
jmp
sub
test
push
mov
jnp
ss
pusha
inc
aas
jo
dec
dec
call
or
ret
and
jb
push
xor
or
mov
mov
and
scas
jae
mov
test
add
and
mov
pop
stos
push
xor
jno
mov
pushf
aad
ror
push
aam
les
mov
pop
lock
jl
inc
xchg
dec
mov
cwtl
jae
test
add
fnsave
sahf
and
popf
imul
dec
fstps
cltd
sub
cmp
insb
pop
jne
lahf
xor
xor
test
dec
push
ret
das
js
xchg
inc
fadd
add
cmp
mov
je
lods
fisubrl
mov
dec
cmp
sub
or
mov
mov
jg
or
lahf
fistl
icebp
sbbl
add
stos
lahf
negl
repnz
cmp
mov
mov
fisttpl
daa
mov
pop
in
filds
sahf
lods
ss
adc
adc
mov
cmp
out
xchg
jg
sbb
je
push
dec
test
xchg
push
scas
int
push
stos
sahf
or
sbb
push
or
inc
xchg
gs
rorb
adc
add
or
push
dec
sub
pop
sub
fcmovnu
mov
arpl
push
scas
sti
dec
mov
stos
dec
mov
sbb
andb
movsb
cmp
xchg
cmc
jg
push
mov
lods
mov
push
jle
xor
and
rclb
shll
pop
xor
push
or
dec
pop
imul
aad
cmc
push
push
sbb
push
xor
out
adc
push
xchg
mov
jno
xor
inc
out
jae
push
pusha
lret
mov
rcll
pop
pop
cwtl
insl
mov
push
or
lea
inc
or
sub
mov
arpl
add
int3
pop
dec
sub
pop
jg
xchg
adc
lahf
out
mov
std
mov
cmp
ja
stos
mov
ror
pop
xchg
cmc
clc
mov
mov
push
xchg
lahf
pop
cld
and
dec
add
callw
sbb
and
sbb
xchg
in
out
fbld
fs
into
jae
mov
in
adc
rorb
insl
mov
nop
mov
icebp
rcrb
pop
or
cld
add
out
mov
in
sbb
and
shlb
xor
in
popa
lret
pop
xor
test
add
xor
popa
fs
dec
lods
xor
cld
es
test
inc
push
aaa
aas
jo
enter
dec
out
inc
movntq
shll
mov
aad
pushf
dec
movsb
dec
in
dec
xlat
dec
iret
add
je
adc
sub
sahf
ds
outsl
dec
sbb
and
push
loop
mov
loope
aaa
mov
int
sbb
lret
ja
repnz
pop
out
xchg
repz
bswap
shrb
add
adc
cmp
movsb
shl
movsb
xor
cmc
adc
sub
jmp
stc
pop
nop
insb
add
mov
cmp
add
or
inc
stc
lea
pop
sbb
outsb
push
incb
xchg
fwait
xchg
mov
mov
add
hlt
inc
sbb
dec
cmp
mov
push
sub
sbb
pop
and
mov
outsl
call
pop
push
mov
push
pop
xor
inc
lcall
or
or
enter
jl
sbb
mov
repz
jge
icebp
dec
stos
leave
shll
pop
test
cwtl
add
outsl
mov
out
dec
movsb
sbb
cwtl
xchg
jne
xor
lods
push
fdivrp
outsb
repz
dec
fwait
inc
out
sub
mov
and
dec
jno
insl
call
pop
sbb
sub
add
add
ficoml
lret
clc
cmpsl
push
pop
lock
loopne
and
push
or
inc
arpl
gs
xchg
sbb
je
adc
cwtl
fcomps
je
mov
mov
outsb
jp
js
jb
mov
mov
lahf
xlat
push
lds
mov
fadds
mov
loope
or
daa
dec
mov
mov
rorl
xchg
cmpsl
repnz
inc
xor
mov
mov
jl
test
inc
adc
ljmp
cwtl
xchg
jge
xchg
add
frstor
inc
sub
cwtl
hlt
xchg
dec
adc
pop
add
enter
mov
shlb
arpl
sub
outsb
cmovb
mov
out
push
sub
pop
int3
push
clc
sbb
pop
ds
sub
push
pop
enter
dec
jnp
fs
inc
out
testl
aam
jmp
pusha
mov
push
stos
lret
sub
test
jmp
test
pop
mull
orb
mov
inc
pusha
pop
cmpsl
rcrb
in
leave
cmpsl
les
lea
dec
dec
out
dec
and
and
inc
std
xor
pop
inc
lret
jne
sub
pop
sub
outsl
ficomps
sti
add
ss
xlat
adc
jecxz
cltd
ficompl
cmpsb
scas
pusha
dec
jne
inc
jno
sub
cmc
dec
insl
or
idivb
cmpsl
or
dec
in
pop
into
xor
std
dec
xor
xchg
pusha
add
test
std
fstps
cmp
adcl
or
or
stos
pop
adc
jge
sub
xlat
aam
mov
cmp
or
js
and
and
out
pop
mov
xchg
push
cmc
ss
mov
std
addr16
jmp
mulb
xor
outsl
lret
mov
insl
adc
or
add
or
lea
clc
cmc
fs
iret
ds
jno
insb
push
pop
rol
or
psraw
cmp
stc
sub
fisubs
test
nop
and
jp
push
gs
mov
jbe
call
dec
aas
add
subb
ss
sub
push
push
scas
enter
xorl
push
shll
pop
mov
xchg
pop
testl
rcrb
cmpsl
fwait
add
mov
xchg
les
jecxz
mov
sub
xchg
sbb
pop
in
ficompl
lea
push
push
outsb
and
ja
xchg
lret
insb
push
lret
loope
sbb
inc
sub
cmp
xchg
pop
shll
movsb
cmpl
push
dec
and
or
dec
ljmp
call
mov
xor
or
sub
jae
mov
cltd
pusha
pusha
sub
scas
add
cmpsb
push
mov
out
xchg
or
mov
stos
adc
lock
fcmovbe
jns
xor
xor
dec
pop
lret
inc
popa
dec
sbb
dec
xor
xor
mov
out
xchg
mov
cmpsl
arpl
cwtl
cmp
stos
jmp
mov
shll
pop
add
jp
jp
fidivrl
add
outsl
ljmp
dec
cmpsb
push
inc
mov
xchg
adc
lods
aas
lea
inc
jns
outsl
xor
jbe
xlat
cmpb
rcll
stc
es
mov
int
hlt
xor
jge
xchg
jb
leave
stc
and
fcomps
inc
and
jp
jae
jo
lock
cwtl
je
xor
sti
mov
into
sub
popa
jnp
imul
sub
loop
dec
and
fstps
iret
shrb
int
pop
cltd
loope
mov
xchg
mov
cmp
sbb
scas
idivl
mov
aam
in
scas
loop
cmp
mov
sti
push
nop
inc
out
sbb
jns
repz
jbe
xor
and
mov
and
inc
add
jb
push
sub
bnd
dec
add
cmpsb
scas
mov
flds
nop
push
movsl
ss
cs
jo
test
mov
or
cmp
cs
or
sti
cmp
inc
mov
or
das
mov
mov
clc
xor
sti
pop
cs
and
lahf
nop
ror
outsl
ljmp
sahf
jo
mov
loop
movsb
sub
loop
inc
pop
pop
sub
int
mov
lea
hlt
repnz
scas
dec
jle
pop
imull
mov
test
imul
popa
fcmovu
outsl
add
push
into
jmp
jg
lret
cli
cmp
sub
iret
aam
dec
clc
out
xchg
scas
and
cmc
pop
mov
adcl
enter
mov
cmc
xchg
js
call
cmp
pushl
inc
dec
adc
and
rorb
ss
xchg
hlt
das
mov
jne
cmpsb
loope
cld
and
xor
dec
cmpsl
jle
push
or
ljmp
add
loop
aam
add
std
adc
jns
jle
loope
cld
jecxz
cmp
adc
inc
sti
leave
mov
cs
mov
dec
cwtl
mov
loope
dec
addr16
popa
adc
fcomps
push
push
fimull
stc
test
in
out
lret
cmp
mov
imul
pop
cmpsl
push
pop
add
mov
xor
mov
lds
fdivrs
in
pusha
jecxz
das
xchg
je
add
mov
insl
cs
push
ret
add
push
cli
jle
cmpsb
dec
adc
and
add
adc
sub
out
cmp
in
inc
push
or
mov
mov
or
dec
jmp
mov
rcl
das
and
stos
xor
in
or
mov
mov
xchg
sub
fists
outsb
sub
das
sbb
dec
int3
cs
into
jmp
push
sbb
aad
int
dec
xchg
clc
mov
cltd
push
lods
adc
icebp
mov
mov
fst
jns
mov
lret
movsl
pop
xor
pop
scas
das
loopne
fisttps
lea
jge
dec
mov
jb
mov
dec
adc
stc
xchg
push
shll
lahf
rol
lret
repz
leave
mov
lahf
dec
fsubp
dec
sub
sbb
xchg
shl
or
inc
or
cmp
mov
and
mov
call
test
fstp
inc
cwtl
insb
jne
call
pop
mov
mov
pop
jne
dec
pop
xchg
mov
mov
mov
adc
sub
sbb
sub
int
popa
insb
adcl
pop
mov
xor
sarb
mov
adc
rcl
xor
outsl
pop
test
push
pop
cmp
rorb
xor
sahf
xor
into
aas
pushf
cmp
loopne
and
mov
movsl
xchg
jge
inc
mov
jmp
xor
mov
add
aas
into
mov
leave
movsl
mov
in
aam
sub
mov
push
pusha
jo
push
inc
and
pop
and
sti
or
cmp
sub
ljmp
dec
jbe
or
mov
loop
mov
mov
in
pop
fstl
xchg
cld
stos
and
outsb
push
jbe
js
and
sub
mov
xchg
bswap
inc
pop
dec
xor
rorb
push
push
pushf
mov
push
push
adc
dec
cmp
pop
lea
mov
jb
call
pop
cmp
add
lahf
int
add
sub
pop
xchg
cmpsl
mov
addl
and
xor
das
or
push
faddl
mov
mov
aas
clc
jne
jbe
cmp
daa
adc
sub
jne
popf
mov
add
inc
movsb
mov
adcb
add
loopne
loop
insb
cmp
lret
mov
icebp
pushf
roll
fldl
sbb
mov
mov
xchg
xchg
pushf
cltd
pop
scas
push
push
pop
scas
jae
sbb
xchg
aam
mov
mov
lock
xchg
das
add
sub
dec
add
outsl
push
sahf
dec
out
sub
jae
mov
pop
scas
imulb
push
push
dec
and
or
repz
shll
or
mov
cld
cld
mov
lret
cmc
leave
popf
pop
int
inc
pop
imul
ds
and
es
loopne
sub
call
hlt
aam
mov
rcll
xchg
jle
daa
pop
xchg
aas
hlt
push
cli
push
nop
jg
scas
jle
scas
mov
das
add
loop
cmpsb
add
cmp
insb
push
add
mov
inc
shll
insl
pop
ljmp
push
mov
pop
scas
ds
jge
or
and
bound
push
sub
iret
xchg
mov
mov
ret
mov
pop
iret
ficoms
xor
lret
mov
adc
loop
imul
cmp
push
mov
jl
sbb
and
insl
test
push
notb
dec
ljmp
sbb
xchg
mov
ror
mov
shr
out
or
int3
jmp
dec
jne
adc
repnz
int
cld
mov
mov
in
add
stos
cmp
aad
addb
inc
xor
inc
or
inc
mov
jmp
shlb
adc
mov
nop
add
popa
cmp
dec
fwait
cmp
or
pop
sahf
ljmp
fadds
aad
xor
fiadds
cmp
push
cmp
gs
dec
add
dec
xor
xchg
mov
mov
add
mov
je
pop
cltd
into
push
lcall
lds
inc
add
sbb
or
jmp
sbb
cmp
das
xchg
inc
xchg
mov
add
mov
adc
sbb
hlt
jle
les
ffreep
imull
adc
cld
sub
cltd
sbb
in
in
mov
out
mov
daa
add
outsb
daa
xchg
mov
or
mov
jmp
cmp
stos
lods
outsb
push
call
ss
inc
mov
shlb
lahf
gs
inc
xchg
add
insl
sarl
push
dec
insb
fistpll
sbb
ljmp
nop
mov
dec
sub
insl
test
dec
or
imul
popf
dec
cmp
fists
add
outsl
add
inc
rolb
icebp
jmp
pop
out
jge
cmp
push
negl
in
jecxz
cmp
std
clc
mov
sub
sbb
xlat
mov
push
call
pushf
scas
test
out
loop
add
dec
js
push
fisubs
rcrl
sub
arpl
mov
shrl
loop
xor
rolb
jno
adc
cmc
jb
lods
jg
popf
cli
xor
dec
sub
or
lds
push
xchg
roll
pop
jge
int
fcomps
mov
push
ret
dec
loopne
jge
decl
sub
sub
lods
lea
enter
xchg
sti
dec
push
add
adc
xor
mov
mov
mov
dec
insl
push
adc
aas
test
mov
jo
cli
mov
dec
sub
subl
leave
aas
pop
cmp
lock
and
mov
test
mov
ss
ret
dec
cmp
test
repz
add
mov
addr16
inc
subl
sbb
jmp
sub
cli
push
and
es
andb
push
icebp
mov
xchg
rorb
adcb
jl
mov
xchg
icebp
mov
xchg
xchg
mov
mov
pop
pop
cmp
cmp
push
xor
test
addr16
and
cld
fsubrl
in
mov
cmp
pop
sti
ja
ds
mov
repnz
xor
pop
loopne
mov
fdiv
imul
cli
cwtl
pop
xor
sub
mov
and
fmul
add
push
xchg
cmpsl
inc
sub
fstps
pop
ret
call
int3
popa
pop
dec
daa
pop
lea
jo
adc
push
out
adc
popf
dec
gs
sub
into
or
mov
fimull
jl
or
popa
pop
mov
cltd
push
pop
comiss
xor
jns
lds
int
lahf
data16
and
sbb
fidivrl
test
scas
add
aam
ffree
bound
xor
mov
cs
call
pop
aas
loop
pop
dec
nop
je
xchg
leave
xchg
rcrl
adc
adc
pushf
or
or
sub
mov
mov
inc
ja
inc
cmpsb
cld
dec
adc
ror
pushf
dec
into
outsl
push
pusha
iret
jge
fmuls
mov
leave
mov
push
cmp
jns
adc
pop
and
sbb
mov
jns
add
fildl
jns
fcmovnb
push
and
cmp
test
adc
mov
add
ss
mov
int
push
loope
jmp
in
jo
test
and
cmc
mov
popa
jp
inc
mov
add
jmp
mov
stos
jns
aas
mov
sbb
cld
and
pop
cmp
movsl
jg
mov
iret
insb
adc
xor
xchg
fmuls
ret
out
xor
add
repnz
cmc
sbb
fdivrl
inc
jmp
inc
push
xor
sbb
aaa
ljmp
xchg
nop
or
fdivrs
jae
lods
call
mov
pop
out
sbb
or
mov
inc
add
jg
mov
dec
cmpsl
inc
mov
mov
and
inc
push
cmp
iret
mov
stc
repz
out
repnz
sbb
loop
mov
aam
cmp
push
pop
mov
cwtl
and
shll
jo
push
xchg
jmp
push
adc
daa
mov
je
fisubrl
jae
fldl
jmp
mov
stc
out
dec
mov
pop
mov
aad
mov
and
inc
lock
mov
outsl
mov
and
lods
loope
mov
jb
mov
lret
fcmove
push
cmp
mov
stos
and
bound
aam
sti
loopne
xchg
mov
cmp
imul
push
mov
inc
jno
cltd
imull
inc
lods
aam
rcll
std
insb
addr16
xor
mov
and
push
cmpb
or
lcall
enter
out
adcl
dec
mov
mov
add
dec
testl
sub
sub
sbb
int3
pop
daa
add
iret
mov
mov
sub
xor
mov
jns
popa
test
pop
lock
xchg
push
sub
int3
cmp
pop
sahf
cmp
movl
sahf
and
mov
add
fistpll
mov
lret
dec
xchg
scas
jbe
xlat
test
mov
inc
xchg
outsb
mov
pop
shrl
loope
icebp
iret
add
adc
and
xor
popa
mov
xchg
outsl
mov
pop
shrl
loope
icebp
iret
add
adc
and
xor
popa
mov
adc
and
pop
pop
push
das
loope
icebp
iret
sbb
xor
popa
mov
xchg
outsl
mov
pop
shrl
loope
icebp
iret
add
mov
dec
out
scas
fistps
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
scas
add
xor
inc
jae
or
fstpl
insl
ret
dec
repz
repz
add
xor
inc
std
push
int
fstl
sub
mov
jge
dec
jecxz
repz
and
repz
popf
push
shll
jae
sbbl
gs
js
push
test
sbb
icebp
arpl
stc
std
mov
push
push
outsl
push
clc
nop
clc
sub
cmpsb
dec
sbb
aaa
inc
add
or
push
jge
inc
jmp
stc
fistl
loope
xchg
shll
mov
mov
sar
icebp
mov
and
mov
mov
cmpl
jge
cmp
test
aas
jno
aad
push
inc
std
push
xor
xchg
sub
cmp
ss
sarl
dec
xchg
pop
repz
ret
mov
lods
faddl
ds
jne
inc
xor
or
pop
pop
mov
nop
jge
mov
push
adc
and
adc
fdivs
jmp
cmp
loopne
orl
or
add
adc
inc
test
arpl
jmp
cmpsl
xchg
jnp
sub
sarl
pop
mov
add
push
in
addb
mov
rep
mov
js
pop
mov
xchg
and
cmp
ljmp
push
test
cwtl
push
cmp
pop
dec
out
loope
les
adc
adc
xchg
roll
in
inc
into
dec
mov
arpl
jae
cmpl
insl
ret
jge
dec
jecxz
rep
add
xor
inc
std
push
int
fnsave
cmpl
insl
ret
jge
dec
jecxz
rep
add
cmp
pop
hlt
and
dec
xchg
andb
dec
orb
xor
popa
addl
cmp
sbb
fbld
lret
jl
mov
test
push
adc
xor
loopne
std
or
and
mov
and
repnz
nop
stos
rclb
xchg
js
add
mov
pop
mov
mov
mov
mov
mov
xchg
ja
movsb
mov
jne
ljmp
or
cld
jo
xor
pop
push
cs
aaa
sub
xlat
push
push
popa
fs
xor
aas
jnp
in
cs
xchg
arpl
fnstsw
into
adc
or
fcomps
sub
mov
jb
enter
aad
icebp
dec
es
adcb
push
xor
out
push
sbb
lds
sbb
in
mov
fcomps
fcomps
subl
mov
roll
cld
add
add
mov
in
sub
lods
pop
cli
fsub
mov
add
popf
push
mov
aam
lret
mov
inc
adc
je
les
js
or
imul
xchg
or
repz
fwait
cmp
mov
cmc
xor
push
bound
orl
aas
movsb
cs
xor
icebp
fwait
idiv
or
fiadds
inc
stos
lahf
inc
add
mov
jle
jmp
and
add
dec
loop
into
popa
cltd
pmuludq
mov
adc
jns
or
add
aas
jns
sub
test
sahf
fcoml
dec
lahf
push
and
add
push
movsl
mov
in
cmpsb
in
aam
cli
dec
mov
cmp
or
gs
and
pop
xchg
mov
push
stos
mov
scas
lds
iret
mov
mov
frstor
jmp
sbb
mov
repz
mov
int3
dec
xchg
sub
push
ficoms
popf
xchg
xchg
dec
inc
jg
in
cmc
mov
cmp
adc
push
jl
repnz
or
jmp
mov
out
xchg
shrl
push
jb
out
daa
repnz
inc
xor
xchg
ds
loop
mov
popa
loopne
push
mov
mov
xchg
inc
xchg
pop
popf
add
mov
or
add
loop
push
leave
addb
mov
shlb
icebp
sub
xor
jbe
xor
data16
mov
out
or
mov
scas
ja
or
xchg
bnd
xor
int
sbb
cmpsb
pop
cmpsl
adc
pcmpeqb
and
sbbb
inc
adc
fistl
ret
pop
jecxz
lea
fs
inc
leave
sahf
imul
daa
aad
mov
daa
fcmovnu
imul
bound
shl
adc
and
outsb
sub
repz
ds
xchg
xor
sahf
cmp
cwtl
sbb
lods
push
rol
mov
xor
dec
imull
push
pmulhw
ret
cmp
or
mov
adc
and
outsb
movsl
xor
sub
mov
inc
loopne
aaa
and
jmp
mov
pop
mov
inc
movsb
int
mov
movsl
cli
dec
adc
mov
daa
mov
pusha
mov
repnz
bound
xlat
jmp
je
decl
cmpsl
ljmp
pusha
negl
add
fstpl
lcall
arpl
mov
in
cmp
inc
mov
enter
mov
adc
testl
movsl
lret
cs
aad
clc
lcall
ljmp
pop
pop
imul
mov
pop
dec
pop
pop
mov
hlt
xchg
ficoms
xchg
andl
adc
xor
xor
arpl
scas
aam
push
out
push
xor
sbb
jge
mov
dec
push
xor
or
aaa
mov
adc
dec
xor
jg
popf
adc
cmp
or
jae
nop
rcll
imul
or
das
or
dec
mov
mov
push
pop
lret
int
xor
mov
push
clc
call
push
pop
jle
das
fcoms
xchg
insl
mov
push
loopne
push
bound
inc
into
aas
push
xchg
lret
xor
and
call
add
lock
and
repz
mov
lret
pusha
pop
outsb
arpl
pop
inc
push
pop
xlat
int
lcall
inc
xchg
shll
daa
pop
stc
jl
jl
imul
repnz
push
ja
xchg
test
mov
roll
pop
pop
jae
ljmp
sbb
rorb
adc
xor
cmpsb
fwait
je
push
cli
or
add
bound
pop
adc
out
sbb
incb
xlat
inc
mov
repz
mov
stc
mov
es
push
xchg
jp
lret
mov
movsb
pop
cmpsl
dec
ficompl
cli
ret
inc
mulps
fisttpl
loopne
out
mov
pop
push
idivb
pop
xchg
cmp
jne
sub
dec
add
lcall
xchg
and
jae
adc
or
iret
jns
dec
dec
fmul
fildll
test
mov
test
lcall
pop
ret
inc
jo
stc
sub
jmp
pusha
cmp
sbb
cmpsb
outsl
jno
add
mov
jmp
xor
loop
ret
xchg
imul
outsb
xchg
loopne
in
xor
imulb
fisubrs
repz
cld
sbb
int
push
pop
stos
mov
scas
sub
push
mov
rorb
jb
adc
push
clc
dec
push
push
movsl
js
dec
nop
insl
loope
xchg
scas
dec
cwtl
sub
decb
test
and
xchg
xchg
inc
mov
lea
mov
push
je
add
inc
fwait
jmp
xchg
and
push
xchg
adc
into
lcall
lods
dec
cs
and
js
dec
xor
jp
add
out
pop
fwait
or
pushf
arpl
inc
adc
pop
mov
jg
ljmp
and
in
push
pop
add
jae
les
sub
add
dec
lahf
es
ret
insb
pop
dec
and
inc
bound
sub
pop
cmp
mov
pop
xchg
mov
add
inc
movsb
sbb
jne
ds
stc
and
popa
dec
daa
add
push
popa
fwait
ljmp
jnp
mov
xchg
int
push
pushf
mov
out
push
cmp
add
mov
test
in
inc
pop
lahf
fdivl
imul
out
hlt
inc
xchg
das
aas
rorl
fwait
mov
jmp
push
inc
dec
repnz
sbb
jns
pusha
or
mov
cmp
xor
dec
sar
shr
gs
xlat
jl
jp
popf
imul
test
pop
movsb
adc
dec
outsl
lods
out
sahf
mov
jecxz
dec
mov
jns
sub
cwtl
mov
imul
cli
and
mov
addr16
xchg
sahf
lock
ljmp
or
push
push
shlb
mov
push
or
jno
hlt
dec
and
cmp
out
add
fisttpll
push
leave
gs
xchg
cmp
pop
loop
pop
arpl
jg
add
ds
adc
xor
int
jnp
dec
dec
sti
hlt
jg
push
leave
pusha
subb
xchg
idivl
push
or
mov
and
imulb
fstpl
inc
sahf
jle
mov
xchg
je
imul
sahf
in
ret
cmpsb
jmp
ss
and
mov
adc
mov
mov
sarb
cmpb
xor
xchg
mov
int3
iret
insb
pushf
ljmp
aam
test
roll
push
cltd
lcall
mov
inc
or
mov
lret
xchg
dec
push
subl
lcall
mov
and
subb
pop
in
cli
test
and
cmp
lock
sahf
idivl
mov
hlt
adcl
sub
pop
inc
inc
sub
lods
or
mov
adc
cmp
adc
idivb
in
and
push
inc
cmp
imul
jle
fiadds
xchg
lods
hlt
ja
int
stc
xor
sbb
push
je
mov
cmp
lret
jg
in
mov
jecxz
test
popa
jmp
jmp
xchg
adc
xchg
sub
cmpsl
test
pop
and
or
mov
aam
mov
ret
aam
inc
inc
lods
and
roll
sbb
adc
pop
test
lahf
addr16
or
cmpsb
out
repnz
stos
mov
lods
ret
addr16
or
lret
ret
icebp
sbb
push
pushf
lcall
dec
or
out
jl
ret
adc
mov
aas
ss
pop
je
addr16
cmp
imulb
idiv
scas
clc
push
cmc
dec
adc
dec
daa
rclb
ja
hlt
nop
dec
lret
push
and
or
sbb
cmc
scas
jb
dec
in
lds
rol
out
mov
vxorps
imul
data16
jnp
shll
lea
sub
popa
lret
shrb
lret
leave
int3
lcall
fwait
inc
movsb
push
mov
nop
clc
push
movsl
dec
adc
lock
in
sbb
jns
insb
sbb
in
push
xor
pushf
jle
push
outsb
push
or
ret
pop
std
sub
aaa
cli
xor
daa
mov
int3
out
xchg
ds
jg
mov
js
repnz
sub
cli
lods
jl
add
test
lcall
push
inc
adc
stos
mov
sbb
fsubl
jae
lret
xlat
dec
jbe
inc
hlt
xlat
sbb
imul
push
arpl
in
add
mov
sub
aad
pop
data16
and
lahf
push
push
pusha
cmp
stos
jae
jp
dec
shrb
outsb
in
mov
inc
push
sbb
nop
lea
in
jne
inc
lret
xorb
push
mov
or
mov
or
mov
in
and
adc
mov
xor
repz
popf
inc
mov
inc
ficompl
aaa
daa
inc
movb
mov
int3
inc
cmp
repnz
xor
pop
icebp
stc
mov
mov
sbb
push
decb
shlb
pop
add
lcall
pop
push
pop
aaa
dec
insb
aad
icebp
pop
movb
add
in
nop
fcmovb
add
or
jo
mov
mulb
cwtl
dec
in
sarl
push
ja
inc
aad
mov
pop
or
stos
int3
mov
push
pop
insb
cmc
outsl
or
in
int
inc
fcom
rcl
roll
clc
call
arpl
mov
jle
cli
fsub
xchg
flds
fldcw
popf
in
cmp
mov
and
mov
aad
cmpsb
mov
mov
fdivrl
fnstcw
adc
inc
or
sarb
lds
mov
addr16
dec
xlat
ret
mov
xchg
rcrl
arpl
dec
pop
scas
push
jle
and
jae
repnz
or
push
outsb
addr16
inc
ret
push
mov
das
push
shll
sbbl
pop
loope
sbb
iret
pop
lock
cmp
out
out
and
add
mov
sbb
cmp
xchg
call
dec
cmp
mov
inc
mov
push
lea
sub
mov
mov
jb
adc
adc
xchg
push
js
ja
lock
pop
pop
sub
pop
mov
push
bound
push
pop
xor
inc
mov
pop
fs
push
or
lret
and
xchg
xchg
aad
xchg
or
ljmp
sub
daa
hlt
pop
or
cmp
dec
adcl
push
jg
jp
sti
pusha
inc
xchg
push
pop
adc
outsb
jnp
mov
xchg
popa
mov
push
inc
fisubrs
mov
call
insb
cli
adc
clc
mov
movl
fcoml
mov
dec
jbe
aad
jb
sub
jno
mov
ljmp
clc
mov
gs
gs
in
cmp
inc
pop
mov
jno
aaa
push
add
ret
popf
mov
dec
sub
or
sub
bnd
idivb
push
out
pop
lods
push
idivb
push
fcomi
push
push
add
nop
jnp,pn
sbb
cmp
sub
and
ljmp
es
push
cmpsl
jno
jb
in
test
repnz
jno
cs
add
jge
orb
sti
mov
sub
cltd
ja
ret
xchg
lods
call
mov
or
cmp
inc
mov
sahf
mov
mov
lea
cmpsb
rorb
fiaddl
fistl
cmp
lret
push
sub
pop
movsb
into
or
jl
add
std
out
or
sbb
xchg
add
mov
jns
ret
xchg
pop
add
scas
or
pop
xchg
fsubs
mov
inc
sarl
cmp
pusha
das
rorb
xchg
adc
leave
cmpsb
jg
ss
aam
aam
out
shl
add
in
bound
adc
leave
jne
cmp
rolb
xor
test
sub
shlb
leave
xlat
dec
inc
jmp
pushf
adc
jle
js
in
test
mov
add
pop
test
arpl
fmul
adc
cmp
inc
xchg
push
in
dec
dec
jnp
jb
dec
xor
stc
dec
pop
jno
jecxz
movsl
jp
xor
or
aam
adc
push
mov
jle
inc
std
or
fdivl
repz
adc
pop
pop
xor
push
dec
xchg
movsb
mov
cwtl
inc
push
lea
data16
xlat
loop
dec
int3
jbe
pusha
orb
pop
lods
push
aad
jb
pop
mov
adc
adc
shrb
adc
fldt
insb
or
sahf
jns
mov
xchg
mov
cmp
mov
dec
enter
inc
cmpsb
sbb
jns
xor
ljmp
dec
cmpsl
jg
push
js
xchg
movsl
mov
mov
xor
fs
mov
add
lods
add
negb
movsb
loope
hlt
mov
xor
in
and
mov
cld
add
push
shrl
lods
xchg
int
in
xor
push
mov
jge
mov
test
xor
push
int3
xor
sub
and
pop
and
iret
nop
imul
jmp
pop
test
fs
inc
sub
addl
adc
out
sub
push
lea
arpl
dec
jp
in
mov
xchg
lea
adc
sub
jg
rorl
dec
jp
adc
sbb
cmp
out
and
add
push
xor
push
jae
popf
insb
dec
in
and
push
xor
fmull
pop
mov
jae
add
je
push
pusha
mov
lods
fwait
jo
test
icebp
fcmovbe
pop
mov
xor
mov
push
out
loope
in
sub
in
or
jae
mov
pop
mov
mov
nop
add
daa
imul
dec
add
in
inc
lea
fbld
add
lods
xchg
decl
mov
xchg
popf
and
mov
mov
add
test
sub
mov
inc
xchg
and
imul
jle
adc
sub
dec
mov
mov
xbegin
pop
test
pop
pop
mov
mov
pop
aas
xchg
rep
xchg
pop
cmp
xor
push
mov
jnp
das
dec
pop
or
mov
jno
sahf
out
sahf
lcall
mov
lcall
testb
rcr
xchg
out
jecxz
mov
ret
sbb
loopne
pop
mov
std
jae
adc
pop
sub
pusha
mov
inc
dec
stos
jl
adc
mov
into
sti
mov
rcr
out
mov
push
lods
sahf
adc
jmp
popf
adc
pop
cld
xchg
pop
idivl
and
aam
les
and
inc
scas
push
xor
cmp
cmp
push
pop
stc
andb
enter
je
jmp
lods
mov
inc
add
stos
aam
idivl
jno
push
aaa
aas
push
icebp
pop
jo
jnp
push
clc
imul
stos
pause
lret
packsswb
mov
cltd
xor
test
cmp
jp
aad
mov
fbstp
mov
ljmp
push
shll
xor
cwtl
add
cmp
shll
mov
in
push
sti
mov
add
push
dec
mov
out
sti
inc
xor
test
popf
add
ja
add
add
loope
push
mov
fsubrp
xor
add
cmp
sbbb
jae
push
inc
sbb
enter
push
jle
and
sub
pop
push
aad
inc
es
cmp
test
lret
xor
add
mov
loop
aam
arpl
pop
inc
popa
sti
pushf
arpl
test
ret
js
divb
popa
cmp
or
mov
mov
push
mov
and
jp
sbb
clc
imull
sub
ss
mov
mov
idivb
push
sbbb
lret
sbb
push
popf
inc
pop
stc
lods
add
pop
mov
cltd
scas
mov
cwtl
out
ret
adcl
hlt
mov
pushf
inc
add
jle
shlb
fwait
leave
fidivrl
xor
out
nop
scas
leave
jbe
imul
or
lcall
cwtl
filds
movsl
jo
enter
fs
jmp
leave
xchg
or
sahf
fdiv
xor
insl
add
rcrl
int
cmpsl
jl
ret
pop
cli
mov
jle
mov
outsl
je
or
out
out
mov
inc
jns
insl
pop
dec
xchg
xor
pop
xorb
push
sub
jno
imul
pop
jmp
stc
rcll
add
mov
arpl
mov
ja
fidivs
cld
jl
fisubrl
fsubrl
mov
and
sub
dec
xor
test
or
dec
call
out
pushw
inc
and
jmp
or
icebp
lods
sbb
cmpsb
pop
push
mov
fldcw
rclb
imul
cs
mov
cmp
sbb
mov
hlt
mov
nop
push
mov
and
mov
popf
aas
pop
stos
xlat
fimull
push
sahf
sbb
xchg
clc
mov
add
sub
xchg
or
xchg
hlt
push
fldt
fdivl
and
mov
xor
pushf
imul
into
jl
dec
dec
in
jmp
mov
mov
aaa
cmpsb
and
in
nop
in
ret
push
and
cmpsl
push
push
lock
dec
jbe
jecxz
dec
cmc
cmpsb
mov
popa
mov
sub
mov
sti
add
jge
in
and
es
ret
je
sub
inc
into
cltd
aam
lcall
sahf
cmpsb
mov
shrl
or
decb
mov
mov
arpl
mov
loope
pusha
shrl
mov
cmpsl
call
call
push
mov
pusha
in
adc
cmpsl
cmp
movsb
xchg
outsl
fwait
outsb
mov
stc
fnstenv
jns
fs
in
push
mov
out
aaa
mov
push
ret
xor
add
mov
imul
filds
mov
push
int3
mov
sar
loopne
out
sahf
xchg
fdivrs
stc
adc
add
stos
mov
sbb
push
int
mov
pop
jne
pop
mov
sti
leave
pusha
ret
mov
sbb
shlb
and
rcl
mov
rorl
or
lock
pop
enter
xchg
mov
push
in
call
pop
inc
cmc
int3
mov
ljmp
pop
sub
imul
loop
aam
pop
dec
dec
clc
icebp
popa
mov
mov
out
inc
data16
sbb
insl
sub
add
cld
lods
dec
test
mov
add
cmpsl
xchg
ffreep
push
jno
fwait
bound
bound
fisttpl
inc
cmp
add
mov
inc
notb
pusha
mov
jnp
daa
fwait
mov
jp
pusha
stos
dec
test
hlt
xchg
stc
jle
sbb
sbbl
out
sub
ja
lret
and
jecxz
sarl
cld
ja
faddl
dec
push
fiaddl
iret
sbb
jo
scas
xor
cs
test
push
inc
inc
int3
jnp
and
pop
rcll
or
lods
data16
shrl
nop
repnz
mov
popf
iret
sbb
mov
rcll
mov
inc
enter
sub
cmpsb
popf
enter
push
xorl
int3
dec
repz
inc
cmp
ffreep
sti
push
popf
mov
arpl
sub
out
and
or
pop
jl
sub
mov
aaa
xlat
add
imul
or
and
push
int
fnsave
cmpl
insl
ret
jge
dec
jecxz
rep
add
xor
inc
std
push
int
fnsave
cmpl
insl
ret
jge
dec
jecxz
rep
add
xor
std
push
int
sbb
xchg
std
mov
insl
rorl
mov
mov
and
push
int
pop
mov
add
cmpsl
mov
cmc
sub
sbb
or
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
cmc
lret
in
aad
lret
mov
pop
push
imul
or
sbb
lret
in
aad
mov
ret
gs
gs
push
imul
addr16
cmp
lret
cld
fcmovne
jmp
sti
lods
mov
mov
or
cmp
dec
dec
inc
push
dec
pushf
mov
mov
out
movsl
sahf
push
and
repz
fsubl
and
int
xor
je
sbb
mov
jle
mov
mov
aas
dec
movsb
test
or
push
lret
sbb
addl
out
and
enter
fstps
adc
mov
lcall
loope
dec
sub
mov
movsb
pusha
out
mov
in
and
mov
and
adc
shll
mov
pop
push
xchg
mov
int
and
lds
sti
cmp
mov
call
outsb
jo
jbe
adc
lret
cld
fcmovnbe
jmp
sti
mov
stos
pushf
mov
dec
imul
cmp
push
cltd
iret
sbbb
out
ret
repnz
test
jne
or
push
and
xor
push
push
mov
movsl
xlat
xchg
ret
add
and
add
xor
jge
push
nop
cltd
lods
sahf
std
movsl
movsl
fwait
xchg
stos
test
push
imul
or
cmp
lret
in
aad
mov
mov
push
imul
or
cmp
lret
lret
push
mov
fcos
mov
xchg
pop
lahf
cmc
aad
mov
pop
mov
and
loope
je
or
jge
cmc
mov
add
nop
fadds
xor
or
int
jp
adc
jp
add
xor
and
mov
sbb
cli
adcl
subb
pop
fdivs
dec
push
ja
mov
scas
sbb
cmp
or
inc
dec
push
iret
fsubl
cltd
les
adc
pop
adc
movsb
push
push
mov
sub
mov
push
xchg
xor
icebp
pop
outsl
ret
js
sub
and
stos
ret
xchg
mov
and
sti
xor
mov
clc
push
imul
inc
cmpl
ds
mov
cmpsl
dec
ja
and
call
cmp
xchg
push
add
inc
call
lds
dec
imul
cmp
cmpsb
sub
lret
ljmp
dec
jmp
pop
rorb
xchg
fwait
lahf
mov
cmp
jne
out
imul
inc
cmpsl
or
xor
pop
or
mov
sti
in
jb
mov
xor
ret
cmp
fldenv
clc
stos
outsl
cmc
loope
ds
rorb
dec
arpl
pop
pop
enter
or
loope
cmp
dec
or
and
cwtl
fistpl
mov
stos
add
cmp
push
scas
out
jge
ficoml
jl
shrl
hlt
mov
andb
mov
in
test
cmp
imul
stos
pop
adc
arpl
cmpb
ss
ret
xor
shll
sti
test
cmp
dec
adc
mov
mov
imul
inc
mov
xchg
cmc
fdivr
data16
imul
ljmp
mov
pop
aas
fsubrp
hlt
lahf
ret
jge
notb
fdivrs
add
mov
mov
sub
jg
adc
cmc
jp
repz
fisubrl
pop
in
push
out
out
popa
test
nop
cmp
pop
jp
or
mov
outsb
jae
dec
cli
xlat
rcll
fs
in
pop
in
adc
xchg
mov
or
and
mov
pop
in
test
push
dec
cmp
adc
mov
cmp
cmp
jbe
in
inc
cmp
arpl
or
jne
sub
jmp
int
mov
sbb
movsl
push
negb
clc
out
cli
rcrl
xchg
fildll
pop
idivl
sbbb
rorl
bound
imul
sbb
stos
push
xlat
or
aad
adc
aaa
and
iret
std
push
iret
cwtl
les
cmp
ja
in
out
fcmove
pop
jno
pop
add
int3
in
inc
pop
aas
iret
or
lcall
jns
push
mov
mov
xor
cmp
dec
push
sbb
xchg
inc
add
mov
push
mov
mov
inc
pop
dec
sti
xchg
sbb
mov
mov
mov
int3
cmpsl
fistps
jb
xchg
inc
jl
fsubrl
pop
pop
pop
stc
pop
xor
jge
shrl
mov
xor
xchg
cmp
mov
daa
js
pop
sbb
add
ds
test
cmc
aaa
jae
add
loopne
mov
dec
shll
inc
pop
stos
lret
dec
aaa
jge
lcall
daa
push
sub
jge
nop
mov
push
lods
and
jl
cmp
lea
testb
and
lds
push
mov
jp
lret
das
cmp
stos
sub
out
sbb
xchg
sbb
mov
aas
imul
lcall
rorb
mov
out
std
shll
lahf
pop
mov
sub
shrl
adc
aas
repz
insl
aaa
sbb
loopne
sar
call
adc
mov
dec
fdivrl
mov
inc
cwtl
adc
and
les
mov
lcall
sub
int3
lods
mov
lret
xchg
jl
xchg
sub
cmp
xor
pop
dec
cmpsb
xor
mov
es
std
xor
test
mov
add
sbb
fiadds
cmp
xor
cli
or
clc
ss
push
and
js
les
cltd
pop
lea
inc
dec
inc
outsl
jns
test
mov
mov
xchg
repnz
lods
std
insb
xchg
push
mov
jl
decb
aaa
jecxz
inc
lock
popf
inc
aam
xchg
mov
inc
pop
xchg
pop
data16
cld
and
inc
xor
mov
inc
xor
pop
jae
mov
mov
pop
lea
sub
mov
orb
ret
or
inc
jns
pop
mov
pop
add
testl
jno
shlb
fbstp
push
lret
and
mov
inc
cmp
mov
leave
xor
cmp
push
pshufw
jg
adcl
mov
pop
roll
out
filds
mov
scas
dec
push
movsl
or
cltd
lds
inc
sbb
dec
mov
dec
jmp
sub
xor
into
loope
or
jns
jecxz
testl
push
int3
jae
lret
mov
psrld
push
jle
stos
sub
mov
cmp
and
mov
ret
sub
shl
and
pop
movsb
jno
pop
aas
ret
popa
dec
or
scas
push
xchg
pop
divl
jp
out
mov
push
mov
dec
cmp
fisubs
cwtl
mov
pop
dec
pusha
fcmovnu
stos
jmp
fwait
adc
sahf
pop
iret
fs
mov
sbb
shl
orb
fwait
mov
das
mov
sub
cltd
fwait
or
neg
filds
loope
cmpsl
mov
test
dec
pop
adc
pop
imull
xor
push
pop
lods
es
cmp
dec
sub
out
xor
mov
fcomps
out
orl
loop
dec
push
pop
inc
out
ds
mov
imul
jp
cmp
aad
or
iret
adcl
adc
xor
cld
jbe
scas
rolb
push
jle
inc
jns
jne
sarb
dec
mov
push
xlat
test
aad
add
dec
das
mov
push
pop
bound
shlb
mov
dec
or
cmp
mov
hlt
nop
dec
push
adc
xor
dec
xchg
shlb
dec
mov
add
shl
adc
bound
into
mov
jne
cmp
jge
lds
inc
lea
lahf
loope
sub
xor
adc
mov
in
mov
ret
scas
mov
jae
dec
lock
lret
mov
and
add
dec
or
push
outsl
or
test
push
test
mov
add
lret
cmp
rcll
cmp
sahf
xchg
push
scas
inc
out
in
in
sti
lcall
daa
jns
shll
xchg
iret
outsl
push
jl
fwait
rolb
or
sti
das
jmp
or
imull
xor
clc
jno
mov
dec
or
sub
inc
cmp
fcmovbe
movsb
pop
jl
in
fsubl
daa
lds
push
ja
push
fwait
inc
or
cmp
clc
sbb
xchg
mov
mov
jnp
mov
das
scas
mov
xchg
movsl
inc
iret
lret
dec
popl
inc
fldenv
push
push
sbb
stc
rcll
jle
ret
popa
push
sub
xlat
xchg
and
stos
outsb
push
popa
sub
or
inc
push
inc
or
shrl
mov
js
stc
loope
andb
lock
orb
or
or
fisttpl
andps
cmpb
dec
nop
pop
add
sub
ret
adc
push
push
call
dec
xchg
aad
mov
inc
or
push
nop
stc
push
lea
ret
dec
mov
mov
pop
inc
jg
inc
outsl
xor
sub
jb
xchg
pop
in
aas
test
hlt
mov
sub
inc
or
mov
pop
rcl
mov
push
or
jb
mov
pushf
test
mov
xchg
loopne
mov
daa
jbe
and
sub
jae
and
xchg
xchg
out
mov
dec
and
hlt
mov
stc
imul
jnp
movsl
jae
push
jl
sub
pusha
cmpsb
sub
nop
iret
push
loopne
jnp
cs
add
sbb
cmpsl
lea
push
inc
xlat
ja
lahf
sub
out
xchg
or
xchg
mov
dec
std
cmp
xchg
xor
mov
stc
sub
lea
in
out
add
add
out
dec
repz
mov
mov
in
sub
scas
add
xchg
and
test
pop
pushf
mov
push
daa
and
mov
mov
xor
ror
js
sub
and
dec
jge
xor
dec
aad
pop
xor
or
enter
add
sbb
xor
in
mov
hlt
push
jl
pop
outsl
repnz
jp
mov
dec
mov
xor
inc
sahf
lret
pop
cmpsb
dec
shlb
pop
rclb
push
add
inc
sub
shrb
or
div
test
xchg
shr
or
dec
shll
adc
xchg
jne
lods
pop
cmp
and
cltd
mov
imul
sub
cltd
mov
or
mov
push
into
adc
gs
je
xor
insl
cmp
mov
xor
xchg
push
dec
jmp
test
out
scas
mov
jle
aaa
leave
push
aam
lret
xlat
shlb
fwait
push
jp
push
cmpsl
test
jae
sahf
push
cs
call
mov
aad
mov
jle
xchg
push
and
mov
dec
jmp
mov
cmp
add
mov
sbb
pusha
inc
sti
cli
push
scas
push
in
pop
lods
dec
xor
ficoms
jnp
sbb
or
inc
mov
js
push
test
push
jnp
lret
mov
jge
and
xchg
mov
les
sbb
inc
jne
dec
aaa
xor
ss
lock
aaa
push
add
jno
sub
pop
mov
decb
pop
mov
pop
push
cmp
call
loopne
data16
inc
or
ds
sub
int
push
sahf
xchg
jecxz
sub
mov
iret
sub
fs
rcll
xchg
mov
or
push
mov
mov
push
push
js
and
shl
lahf
mov
push
xchg
or
cmp
jnp
inc
je,pn
ret
ljmp
push
mov
enter
or
test
push
jge
sub
scas
leave
sbb
cwtl
and
call
and
pop
mov
hlt
cld
loopne
add
icebp
mov
lods
add
cmp
in
stc
jnp
call
std
push
outsl
mov
xlat
ffree
mov
inc
stc
fs
fucomip
xor
sahf
mov
pop
mov
dec
in
mov
hlt
jmp
lea
push
mov
dec
mov
push
mov
dec
cmp
dec
adc
incl
out
sahf
jge
pop
pop
sub
xchg
pushf
xchg
or
adc
fadds
inc
cmpsl
movsl
inc
jge
sub
aam
test
clc
lahf
or
mov
pop
loopne
lret
insl
xchg
ret
mov
sbb
pop
sar
add
jmp
mov
pop
inc
movsl
or
rcr
pop
lret
shlb
roll
sub
cmp
xchg
dec
xor
xlat
cmpsb
mov
add
icebp
mov
scas
ret
aad
mov
fstl
cmp
shlb
jb
std
enter
mov
pop
aas
out
mov
out
and
sub
adc
adcl
ss
push
xchg
cs
dec
ja
cli
jnp
xor
mov
cmc
cwtl
int
movl
pop
mov
mov
mov
mov
push
icebp
stos
inc
sub
or
int3
inc
lret
fdivs
int3
fbstp
cltd
push
adc
test
or
icebp
scas
or
mov
cmp
push
adc
pushfw
repnz
xchg
xor
dec
dec
fstpl
outsl
jae
lea
lahf
or
jns
jecxz
enter
and
or
jge
fiaddl
inc
icebp
add
scas
jg
or
dec
jb
imul
push
or
xchg
aad
pop
shr
repnz
out
sub
shlb
pop
mov
popf
push
sbb
dec
out
imul
std
and
test
cmp
mov
jbe
repz
xor
pop
mov
mov
xor
les
xchg
stos
dec
fimull
mov
add
sbb
cld
mov
jne
arpl
cmpsl
dec
test
insb
repz
ds
add
in
add
negb
into
xlat
dec
mov
bound
rcl
mov
repnz
push
xchg
adc
push
sub
clc
xchg
mov
push
stos
xchg
mov
scas
lret
bound
cwtl
jno
mov
das
push
in
or
xchg
adc
bound
cmp
and
cmpsl
fdivr
cmp
cli
fcompl
mov
jmp
jo
adc
int
mov
gs
mov
sbb
xchg
mov
and
test
jns
das
jge
and
cld
rol
adc
jg
jns
and
iret
and
stos
and
pusha
out
jg
adc
pop
dec
stos
mov
push
mov
sbb
orb
push
inc
inc
stos
xchg
xchg
add
icebp
cld
xchg
fsubp
outsl
xor
sahf
pushw
adc
mov
push
rcr
hlt
cmp
dec
xchg
std
rolb
mov
movsl
ss
iret
jo
pop
xlat
mov
xor
mov
adc
mov
push
stc
lret
insl
jge
sub
pop
lahf
sbb
pop
movsb
pop
test
jg
sub
subl
jbe
jmp
adc
lock
pop
mov
sbb
icebp
movsb
js
xor
nop
add
dec
fwait
mov
adc
ret
sbb
fdivl
je
mov
mov
xor
cmpsb
sbb
pop
jbe
xchg
les
repnz
push
inc
imul
dec
sub
test
hlt
cmpsb
dec
push
pop
mov
and
mov
cmp
mov
test
inc
and
call
cs
stc
and
mov
inc
sti
xchg
out
mov
iret
jnp
imul
xlat
ficoml
cmp
mov
xchg
xchg
sbb
faddl
xchg
pop
data16
push
movsl
or
addr16
inc
mov
jg
aaa
jbe
adc
mov
outsb
outsb
sub
jle
aaa
mov
ljmp
dec
mov
sub
not
or
lcall
scas
mov
shrb
xor
jp
enter
sub
push
stos
dec
rorb
jnp
mov
cwtl
roll
xchg
les
jno
xchg
dec
mov
js
adc
and
enter
xchg
ds
mov
ja
int3
push
sub
mov
jp
push
ja
push
pop
add
or
or
sbb
mov
push
ficompl
popa
push
lret
ret
cmp
shlb
dec
xor
outsb
in
adc
daa
test
lds
mov
jle
inc
add
movsb
cltd
and
dec
jo
mov
out
push
mov
std
insl
shll
xchg
jp
outsb
ds
jge
loopne
fdivrl
scas
outsb
adc
inc
xchg
cmp
mov
insb
xchg
into
sbb
add
xor
push
or
xchg
xor
aaa
mul
and
scas
dec
lods
xchg
ja
push
ret
icebp
fiadds
testb
int3
popa
and
imul
push
divl
mov
xchg
inc
mov
sbb
in
sbb
sbb
test
stc
in
rorl
repnz
push
push
inc
jl
stc
jnp
mov
inc
xor
pop
ret
and
enter
idivl
lock
adc
int
ja
cmp
and
pop
and
iret
mov
cmp
fsts
sti
sarb
fs
loope
hlt
repz
inc
mov
test
mov
adcl
nop
push
lods
xchg
mov
xlat
out
ds
inc
lret
sbb
lret
les
lret
mov
jecxz
pop
cs
jb
out
cmp
mov
ja
fs
scas
inc
in
ljmp
jge
stc
ss
arpl
push
sbb
cltd
xor
pop
and
and
mov
stos
out
in
insb
push
xchg
sub
push
lcall
sbb
xchg
rorb
int
scas
mov
jmp
data16
jmp
xchg
pop
xchg
sub
push
sub
pusha
mov
in
test
fmul
pop
mov
push
insb
push
sbb
lds
mov
cmp
add
and
cwtl
add
inc
inc
cwtl
jecxz
es
mov
mov
iret
pop
jbe
jbe
cmpsl
pop
xor
inc
vpmacsdqh
jg
dec
dec
jp
pushl
shll
mov
fwait
xorl
adcl
jbe
push
inc
aas
inc
gs
push
pop
push
out
ret
mov
cmp
outsb
jb
ds
push
and
push
cmpsl
cwtl
out
lea
jp
in
int3
xor
sahf
dec
fwait
hlt
inc
sub
xchg
xchg
mov
pop
jg
ss
xlat
push
sbb
jne
cmpl
lahf
dec
mov
jle
out
pop
inc
sti
cmp
jecxz
outsl
sbb
mov
lcall
out
dec
jecxz
sbb
mov
lcall
scas
addb
adc
pop
jno
mov
push
dec
aad
mov
aaa
imul
nop
pop
jmp
test
or
mov
mov
xor
repnz
and
andl
push
xor
loop
mov
cs
jmp
sub
shll
bound
dec
nop
or
addr16
fidivs
pop
repnz
push
mov
inc
je
out
pop
push
test
rdmsr
shr
mov
leave
sbb
lahf
out
pop
mov
divl
int3
inc
add
jb
jle
cld
cmc
dec
jg
test
pop
popf
insb
add
paddsw
mov
std
inc
outsl
pop
scas
push
xor
adc
xchg
outsb
dec
jecxz
rorl
mov
hlt
jae
adc
mov
add
sbb
idivl
cmp
cmp
mov
push
or
pop
aam
sbb
and
jns
lock
out
fs
push
cwtl
cwtl
hlt
adc
xor
push
add
sub
mov
aas
adc
stc
adc
mov
lahf
in
pop
pop
dec
and
subb
add
cmpsb
dec
jbe
dec
inc
sub
lret
cmp
mov
fisttps
scas
lea
push
xchg
cld
and
in
jecxz
and
lahf
adc
popf
ljmp
sbb
mov
cli
fsubr
mov
sbb
mov
mov
rcrb
jb
ljmp
data16
in
mov
js
dec
movb
lret
bound
out
inc
mov
xchg
jge
fldcw
or
adc
gs
data16
frstor
lcall
mov
and
mov
aas
popf
pop
imul
ret
sbb
inc
and
add
int
jo
pop
or
icebp
cmp
sub
scas
cmp
nop
inc
addr16
cli
mov
sub
push
sbb
loop
insb
lods
dec
mov
xor
xor
sbb
push
add
lods
adc
cmp
jecxz
leave
push
int
xor
mov
xor
add
mov
gs
into
and
push
mov
sbb
adc
mov
inc
test
cltd
into
dec
sub
add
inc
jnp
add
inc
int3
addr16
lock
pop
mov
rep
sti
insl
mov
test
cmp
push
mov
mov
fistpll
fstl
add
lret
mov
xchg
movl
stos
xchg
sbb
call
cld
sub
dec
scas
bound
divl
push
push
out
push
aam
inc
mull
ljmp
lcall
add
mov
pushf
addr16
cmpsl
adc
and
fimuls
call
sub
push
sbb
mov
push
or
dec
shrb
cmp
repnz
nop
cmp
idiv
xchg
push
push
outsb
mov
sbb
out
xor
data16
pop
cltd
lret
adc
bound
loop
inc
jns
and
dec
mov
cmpsb
xor
push
test
insl
xor
jg
fs
add
push
arpl
lods
insl
dec
inc
mov
dec
mov
loope
dec
cmp
lock
jb
push
cmc
js
or
outsb
sarb
sbb
jb
mov
mov
pusha
fistpl
fucomip
mov
mov
push
imul
or
cmp
lret
in
aad
mov
mov
push
imul
or
cmp
lret
in
aad
mov
mov
push
imul
or
adc
lret
out
aam
mov
mov
ljmp
or
subl
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
adc
sub
push
lock
xor
mov
call
push
mov
or
js
push
dec
cmp
or
test
cwtl
test
mov
mov
adc
add
xor
inc
adc
shlb
mov
mov
lcall
cmp
pop
pop
xchg
orb
mov
xchg
jmp
lret
aad
lods
arpl
std
pop
cltd
adcl
push
adc
xor
inc
sbb
sbb
jae
sbb
addr16
ret
jns
dec
pop
adc
pop
ret
insl
add
mov
add
dec
testl
push
pop
xor
lods
pop
push
call
xchg
test
out
mov
sbb
pop
push
jmp
imul
enter
jge
testl
xchg
ret
mov
loopne
repnz
push
call
cmp
ljmp
js
add
sbb
pop
cmp
popa
sub
mulb
mov
or
push
dec
push
pop
jbe
jge
sub
sbb
test
mov
icebp
lods
out
int3
xchg
xchg
pop
popa
shlb
mov
push
push
sbb
dec
loopne
mov
popf
int
mov
int
jmp
sbb
dec
sub
jnp
pop
cmp
js
mov
cwtl
clc
test
mov
mov
or
js
push
pop
cmp
js
mov
cwtl
clc
test
mov
mov
or
push
ret
imul
push
push
jle
xorl
sarb
iret
scas
shll
push
ss
int
mov
stos
aam
push
insl
aam
sub
adc
sub
ficomps
pop
cmp
test
mul
stos
in
leave
lcall
out
mull
push
in
or
rcrb
lea
insb
xor
xor
das
and
push
test
data16
stc
or
cmp
xchg
add
call
jnp
inc
jg
jmp
mov
std
or
push
fstl
push
jns
pop
cmp
jmp
or
fdivrs
dec
out
lock
adc
cli
inc
push
dec
sti
out
cmp
add
mov
add
stc
xchg
sbb
push
xor
jp
iret
fnstenv
stc
lcall
or
inc
mov
repz
jno
fbstp
test
xor
cmp
sub
jge
scas
mov
lret
push
push
and
rcrl
out
inc
mov
lea
stc
push
ljmp
iret
sti
lahf
jb,pn
add
lcall
out
xorb
jecxz
aaa
addr16
stos
cld
sti
enter
jb
jno
add
cwtl
pop
push
subl
ss
pushf
pop
or
adc
fsubp
mov
lock
cmp
adc
xor
mov
imul
pusha
sub
pop
sbb
scas
pop
mov
mov
shrl
bound
stc
inc
cmp
cmp
xor
imul
push
ss
pop
testl
dec
rcrb
mov
mov
out
mov
add
test
push
xchg
stos
lock
xor
int3
xorl
cmp
aam
mov
repnz
xchg
imul
das
mov
out
or
sbb
add
lds
cld
daa
filds
rolb
and
push
adc
adc
ficoms
inc
cmpsb
mov
scas
sub
push
fdivrl
xor
jnp
ljmp
mov
lcall
lds
mov
fstl
daa
mov
push
rcl
push
clc
mov
dec
nop
and
sarl
push
push
pop
pusha
fmulp
xor
cmp
popf
outsb
push
dec
dec
sbb
outsb
mov
cli
rorb
sub
mov
movsl
sbb
xchg
push
sbb
mov
pop
add
mov
jp
adc
or
push
mov
outsb
add
pop
fnstcw
fimull
cwtl
xchg
mov
push
inc
out
push
lret
and
fdivl
add
jp
aas
fldenv
jg
sahf
mov
push
xchg
lahf
mov
mov
fcomps
cmp
iret
out
pusha
outsl
cmp
xor
jns
sbb
loopne
xor
imul
ficoms
aad
jmp
mov
adc
push
push
cmp
cli
cld
cmpps
sbb
fisubl
xchg
pop
dec
or
mov
rcr
xchg
icebp
test
or
adc
push
ret
pop
cmp
xchg
cmp
fs
pop
subl
data16
or
lahf
mov
stos
in
jns
out
jecxz
ja
mov
fiadds
shl
add
or
test
sub
es
fisttps
push
aad
mov
cmp
shll
or
stc
push
ljmp
int
cs
push
out
adc
stc
mov
dec
in
mov
jbe
mov
sahf
cmp
pop
gs
popf
sub
xchg
loope
jnp
clc
cltd
inc
mov
daa
lock
jg
pop
or
call
jl
dec
movsb
scas
pop
and
or
insb
xchg
add
inc
fucomip
mov
adc
sub
and
in
xor
sub
pusha
imul
mov
sbb
mov
shlb
icebp
sti
add
lahf
push
cmp
jge
stos
pushf
pop
mov
movsl
lahf
mov
dec
mov
testl
js
cmc
insl
cltd
ss
push
push
push
xlat
mov
hlt
pop
fadds
outsl
scas
inc
lret
sti
pushf
mov
cli
pop
movsl
push
bound
cmc
fisttpl
dec
jb
mov
insb
cltd
adc
jge
or
xor
jecxz
orl
les
add
jnp
mov
mov
dec
cmpsl
or
inc
jle
test
pop
cmp
popf
fsubrl
or
pusha
je
pop
adc
repz
xchg
sbb
adc
lock
lret
aam
jnp
sbb
sbb
stos
sub
xchg
dec
pop
sti
xchg
cmp
inc
inc
pushf
adc
sbb
sbb
push
jbe
es
jge
int
xor
mov
loop
pop
stos
or
ja
cli
daa
pop
dec
js
add
lds
push
lock
and
push
dec
lret
lods
into
push
xchg
sbb
andb
mov
dec
mov
stos
gs
aaa
dec
jge
stos
jg
mov
cmpsb
cli
sub
dec
pop
push
pushf
mov
icebp
aad
aad
aas
add
xor
es
out
mov
cmp
pop
inc
xor
aas
jmp
pop
mov
scas
dec
dec
pop
pop
in
xor
inc
aas
and
cmp
xchg
add
jmp
into
add
inc
or
pop
int3
loop
dec
lock
fbstp
xchg
pushf
faddl
repz
cmp
or
out
pop
push
call
mov
pop
pop
adc
mov
add
xchg
pop
push
insl
fisubrl
sbb
in
es
push
cmp
stc
cltd
fucomp
mov
fsubl
das
fcmovb
or
aaa
ja
sub
jae
in
and
push
push
add
imull
sbb
int
dec
inc
dec
xor
sub
adc
push
add
add
jbe
pop
out
ret
jbe
movsl
xchg
fwait
xchg
int3
xchg
ret
sbb
jne
sub
shlb
pop
adc
mov
adc
sbb
rcll
leave
dec
mov
stos
dec
in
je
add
push
inc
jo
shll
jge
fs
push
cmp
mov
stc
pop
push
bound
dec
inc
and
mov
idiv
pop
add
icebp
or
sub
adc
cmp
fstl
sbb
mov
xor
push
movsb
pmaxsw
push
mov
mov
and
jb
in
mov
repz
xchg
push
jne
test
outsb
mov
mov
push
or
sub
fcoml
mov
fisubl
icebp
jl
pop
adc
fbstp
and
faddl
push
lret
and
and
test
or
outsl
mov
orb
mov
push
xor
fistpl
shrl
in
push
stos
ds
ds
adc
push
mov
cs
push
jl
pop
jae
add
sbb
sar
add
push
call
xor
mov
cmp
mov
loop
mov
pop
jae
hlt
addl
sbb
pushl
or
ficoms
xchg
mov
sbbl
jns
test
outsl
adc
push
xchg
mov
add
ret
sbb
lahf
lea
pop
dec
arpl
add
xchg
sub
mov
add
shrb
pop
fs
stos
push
cmp
in
push
imul
add
bound
cmp
data16
mov
jle
dec
test
push
jo
lret
pop
adc
pop
lock
cmpsb
movsb
push
mov
sbb
lds
ss
cmp
sub
je
mov
lock
push
test
fs
sub
in
push
mov
mov
lods
mov
adc
mov
sarl
sti
rolb
arpl
mov
pop
dec
aad
scas
sub
cmp
pop
mov
fisttps
mov
ret
insb
and
leave
in
dec
cld
inc
push
jbe
add
leave
ret
adc
or
scas
inc
add
or
sbb
subb
push
sbb
es
and
sbb
fcompl
clc
pusha
in
jl
insl
imul
shrl
dec
lahf
mov
test
fwait
dec
sub
pop
loopne
jmp
out
inc
movsl
dec
and
jecxz
cmp
sub
fcoms
pop
inc
lds
mov
in
dec
xchg
fwait
in
std
mov
push
roll
pop
lds
add
dec
data16
test
dec
and
imul
pop
pop
add
push
pop
in
fwait
movsb
push
jbe
stc
sub
ret
jns
fisttpl
sbb
dec
test
pop
jg
pop
stc
push
iret
popf
inc
mov
dec
mov
lret
mov
xchg
add
into
dec
jecxz
adc
adc
sbb
xchg
fsubrs
adc
sbb
leave
insb
mov
scas
bound
sahf
push
or
scas
ret
and
add
loop
and
jbe
sub
xchg
insb
stos
jp
pop
repnz
pop
leave
aas
xchg
mov
ret
xchg
fsubrs
scas
movsb
lret
leave
iret
add
fdivs
jae
fldcw
mov
js
dec
imull
pop
mov
sarl
movsb
inc
pop
cmp
xor
jecxz
subl
and
inc
test
data16
xlat
mov
cmp
cmp
jo
adc
jno
popa
push
push
lcall
mov
jmp
into
dec
movntq
out
dec
cmp
push
adc
cmpsl
repz
dec
mov
adc
fcmovnbe
push
addr16
popf
and
inc
mov
mov
stos
mov
ljmp
jecxz
adc
int3
add
xor
fists
mov
add
push
pop
in
xor
sub
dec
xchg
movsb
push
scas
loopne
xor
adcl
push
adc
dec
mov
and
dec
faddl
in
jge
addr16
adc
jle
in
jae
nop
mov
mov
cmp
pusha
cmpsl
lahf
in
mov
push
out
stos
adc
ds
and
cltd
ss
ficomps
loope
or
xor
dec
jno
or
sub
dec
mov
jp
push
push
movb
pushf
cmp
lock
jns
jmp
dec
rorl
jb
adc
or
xchg
xchg
add
xchg
popa
std
mov
add
pushf
popf
test
jmp
fbstp
dec
or
or
add
ljmp
jg
fwait
ljmp
jnp
sbb
xchg
jmp
test
adc
mov
loopne
and
loop
mov
mov
das
pop
data16
stc
xchg
sbbl
out
lcall
roll
sub
or
xchg
mov
stc
jp
test
cltd
popa
fs
jge
xchg
xlat
push
dec
pop
mov
sub
andb
loopne
fcmovnbe
lea
scas
sbb
fldcw
cmpsl
lods
mov
inc
mov
lret
jecxz
das
mov
mov
stos
lcall
push
test
loope
je
ljmp
sbb
mov
add
cmp
mov
cmp
icebp
ret
mov
ret
pop
and
sbb
adc
push
pusha
xchg
lret
in
sbb
lea
int
jl
ret
xchg
dec
fisubl
adc
push
pop
out
test
cmp
sub
shll
jbe
mov
xor
out
push
lcall
ss
jg
in
lock
adc
mov
rcll
in
dec
loope
mov
push
jmp
pop
ret
adc
cmp
mov
inc
mov
mov
push
mov
dec
mov
push
insl
arpl
jecxz
movsb
cltd
ss
ret
mov
je
addl
int3
fsubl
shlb
sarb
jb
push
fwait
out
into
push
ret
popf
xor
pop
inc
popa
mov
rolb
xchg
mov
imul
jle
cmc
jno
imul
xor
in
popl
out
ficompl
push
out
insl
sub
jb
stos
jmp
inc
sbb
dec
jo
dec
xchg
jp
xchg
outsl
pop
sub
cmc
fdivl
adc
dec
mov
ss
dec
pop
sub
fld
mov
sub
stc
cmp
iret
pop
addr16
dec
mov
mov
xchg
cmp
mov
cmp
test
shlb
iret
test
in
add
dec
or
dec
cmpsl
out
push
fwait
stc
and
xor
sub
jp
dec
mov
mov
loopne
cmpsb
mov
sarb
jle
sahf
mov
inc
dec
mov
movsl
inc
movd
push
je
mov
pop
outsb
xor
inc
cmpsb
cmc
adc
lahf
push
mov
sbb
inc
mov
or
rcrb
dec
mov
outsl
xchg
call
push
inc
shrb
dec
out
push
and
inc
xor
fidivl
mov
addb
sub
pop
cmc
cmp
jmp
mov
ja
stc
mov
loop
mov
aam
fsubl
add
adc
dec
or
mov
lods
gs
mov
mull
mov
xchg
test
in
mov
ja
lock
fistl
mov
loopne
adc
mov
fdivl
sub
std
push
lret
dec
dec
mull
ficomps
outsl
push
mov
popa
fs
mov
ja
sub
int
mov
add
cltd
mov
cmp
dec
inc
inc
arpl
jno
pop
dec
mov
outsl
xor
inc
cmp
cmp
push
xor
push
push
call
dec
and
inc
jecxz
sbb
cltd
xchg
int3
sub
sti
or
stos
out
pop
inc
aad
and
dec
es
cmpsb
bound
inc
jnp
stos
xchg
add
push
inc
pop
popa
inc
xchg
shrl
in
or
lds
inc
scas
mov
les
dec
inc
jno
fstpt
cli
mov
lret
repz
orb
pop
fcoml
mov
jecxz
test
jle
push
push
int
lds
and
xchg
jge
mov
xor
sbb
cmp
mov
xchg
cmpsl
inc
xor
lock
ficoml
out
mov
add
fstp
aam
frstor
inc
js
dec
push
loop
jmp
jo
lea
pop
aad
push
into
iret
imul
test
ljmp
into
fistl
and
stos
psllw
inc
and
out
dec
sti
sub
and
aas
cmpsb
loopne
adc
sub
movsb
add
pusha
int
xchg
xchg
adc
sub
scas
lods
ds
mov
lea
flds
add
movsl
mov
and
lods
jg
cmpsl
mov
fimuls
roll
add
jl
jae
movsb
inc
push
push
orb
pusha
jae
adc
in
mov
iret
mov
sub
ds
cmpsl
jge
xchg
into
push
scas
scas
cs
shrb
cmp
ja
fiaddl
std
or
mov
jae
mov
lods
sub
mov
sub
outsl
or
xor
jae
scas
inc
lcall
bound
xlat
fldenv
cmc
lcall
push
jle
lret
pop
outsl
clc
xchg
inc
sbb
mov
push
test
mov
inc
jns
movsb
push
negb
and
cmp
jb
popa
dec
mov
imul
and
addr16
or
sbb
mov
test
adc
ret
push
setl
add
add
idivl
mov
outsb
xchg
inc
cwtl
dec
test
cmc
jbe
mov
or
rol
enter
lods
xchg
and
fidivs
sbb
xor
arpl
or
add
imul
or
ret
or
dec
pop
stos
dec
insl
xchg
cmp
lahf
fistpll
add
bound
mov
aas
ds
fisttpll
xchg
adc
and
push
pop
sbb
xor
jns
fmul
inc
fisttpl
andl
pop
and
pop
in
in
cmc
pop
and
or
aas
jg
orb
mov
xor
push
clc
clc
mov
xor
lds
js
mov
movb
jge
repnz
sub
inc
rcrl
inc
clc
pop
pusha
push
lods
aaa
adc
jge
test
and
mov
mov
jns
pmulhw
push
push
sbb
xchg
xor
gs
or
and
or
and
dec
push
scas
jp
roll
push
jg
xor
js
and
fdivrl
in
sub
daa
sub
xorl
and
cmp
xor
adc
cld
stc
sbb
and
and
in
sbb
adc
addr16
bound
inc
sub
imul
xchg
xchg
subb
push
enter
dec
xor
dec
dec
dec
add
in
mov
mov
pop
dec
sub
xor
add
inc
mov
outsl
rcrb
scas
sarb
jns
xchg
ss
scas
pop
pop
cmp
fidivs
mov
hlt
into
push
sbb
adc
out
les
cmp
int
outsb
jmp
sub
cltd
mov
adc
mov
filds
sti
loope
or
aad
sbb
inc
outsl
jge
incl
sub
pop
popa
scas
movsl
add
lods
dec
enter
lcall
sbb
lret
jno
jno
addr16
rcl
call
fimuls
pop
cmp
pop
inc
shl
dec
adc
cmp
push
insl
sub
mov
mov
push
mov
and
int3
push
mov
jecxz
inc
and
push
cmpsl
and
repnz
xchg
inc
adc
imul
aaa
push
lahf
dec
or
and
imul
cmpsb
or
and
jns
pop
addl
cmc
mov
add
cmp
jecxz
push
jbe
insb
stos
mov
mov
cmpsb
mov
pushf
in
dec
sub
fcoml
pop
leave
cltd
lret
rcrl
jg
cmpsb
loopne
or
leave
andl
loopne
sbb
mov
sbb
jno
mov
push
mov
imulb
das
xlat
popf
inc
in
dec
fstps
ret
popa
das
pushf
aad
aam
add
mov
mov
mov
test
jno
sbb
and
or
sahf
repnz
loop
pop
xchg
cmp
sub
push
cmp
rcll
incl
cmp
std
and
mov
arpl
cmpsb
add
int3
cmp
jge
popf
push
cltd
xlat
jmp
add
sti
cmp
pusha
inc
xchg
sahf
jb
mov
dec
fdiv
mov
push
xchg
dec
aaa
xchg
outsb
cmp
movsb
push
pop
into
inc
into
xchg
jmp
in
xchg
mov
ljmp
sbb
rol
and
test
jno
push
cmp
sbb
jp
push
mov
push
inc
bound
sar
jle
and
test
cmp
mov
add
lea
jecxz
mov
ss
sbb
out
cmpsb
fldt
hlt
xchg
xchg
ja,pt
cli
mov
or
xor
xchg
mov
lret
dec
mov
les
movb
sti
dec
sbb
fistl
sbb
sahf
ja
cmp
out
int3
adc
mov
xchg
and
cmp
jnp
or
push
incl
and
or
hlt
adc
xchg
icebp
nop
xlat
aas
or
xchg
pop
movsl
jns
dec
dec
mov
sub
inc
ljmp
xor
leave
add
ja
enter
dec
ds
and
repz
lods
leave
jl
sub
jmp
addb
in
sbb
lock
mov
sbb
push
nop
cli
jb
push
enter
lret
in
mov
mov
pop
out
pusha
and
cmpsl
call
in
iret
fucomip
out
das
inc
jg
movsb
cmp
fsubl
shl
inc
mov
xor
sub
fsubrl
hlt
ret
daa
out
repz
cld
add
enter
test
gs
dec
ljmp
or
jl
xchg
outsl
inc
imul
xchg
jno
out
jb
adcb
xchg
out
in
mov
push
imull
mov
mov
pop
cld
pop
lret
sub
push
push
in
push
or
in
lea
mov
inc
mov
lock
or
and
insl
sbb
jb
pop
in
in
xor
test
mov
icebp
cmc
pop
add
mov
stos
stc
ficompl
pop
sub
aas
cmp
sbb
in
ret
xchg
and
scas
push
pop
orl
jbe
xlat
out
jbe
pop
sbb
dec
adc
push
lcall
addr16
std
add
add
jp
in
push
clc
adc
jnp
into
xchg
dec
sti
xor
mov
into
lds
scas
sub
call
sub
dec
or
push
enter
call
fdivrs
or
js
push
pop
cmp
js
mov
cwtl
clc
test
mov
mov
or
push
dec
or
cmp
js
mov
cwtl
icebp
test
mov
mov
or
sbb
sub
cmp
dec
sbb
push
aaa
xor
call
cmpsl
inc
xchg
push
xchg
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
