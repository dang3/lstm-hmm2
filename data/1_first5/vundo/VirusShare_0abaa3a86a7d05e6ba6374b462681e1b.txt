add
or
push
push
sub
push
pop
lea
mov
xor
lea
lea
xor
xor
lea
lea
imul
mov
mov
pop
inc
pop
mov
and
sub
mov
movl
inc
movl
mov
sub
and
mov
inc
mov
sub
and
lea
movl
lea
lea
mov
and
push
mov
mov
add
push
xor
sub
inc
inc
push
add
xor
mov
mov
shll
movswl
sub
xor
push
call
lea
inc
and
mov
mov
and
sub
sub
ss
inc
inc
mov
mov
dec
add
mov
dec
and
and
and
mov
sub
sub
lea
sub
mov
add
lea
mov
and
bswap
mov
xor
mov
or
add
or
mov
and
lea
inc
lea
lea
lea
lea
and
push
movswl
push
push
mov
inc
and
or
not
mov
lea
and
and
and
or
or
lea
mov
and
sub
push
xor
sub
addl
lea
add
not
mov
lea
inc
inc
movzbl
add
and
mov
lea
and
neg
sub
push
lea
movzwl
push
lea
mov
and
push
and
not
push
push
lea
push
sub
mov
lea
push
sub
mov
lea
mov
and
xor
inc
movl
mov
add
push
sub
sub
xor
push
mov
neg
push
add
mov
push
and
lea
push
lea
mov
push
lea
mov
push
lea
and
add
or
add
and
or
add
inc
inc
mov
neg
not
lea
sub
lea
mov
add
push
inc
add
inc
not
add
or
neg
neg
movzwl
mov
sub
add
push
mov
lea
inc
sub
inc
mov
bswap
lea
and
inc
or
or
mov
inc
mov
xor
and
and
push
add
not
mov
sub
sub
and
movzbl
inc
and
xor
and
and
lea
lea
mov
xor
inc
lea
not
mov
inc
mov
or
or
or
and
sub
movzwl
or
and
and
and
and
inc
addb
mov
sub
lea
mov
or
imul
inc
sub
mov
xor
sub
push
add
inc
and
and
mov
add
inc
lea
inc
and
mov
and
lea
mov
and
lea
mov
imul
sub
mov
sub
lea
mov
movswl
mov
lea
bswap
call
imul
or
add
and
add
lea
lea
and
mov
cmpb
je
and
mov
not
inc
xorl
lea
lea
sub
lea
lea
and
add
mov
mov
and
mov
add
inc
shl
and
sub
mov
lea
mov
push
sub
bswap
lea
mov
lea
popl
mov
and
neg
mov
mov
and
or
sub
and
sub
add
or
mov
pop
inc
jmp
lea
push
and
and
push
movsbl
lea
push
movzbl
movswl
push
neg
lea
pushl
mov
add
pushl
sub
and
mov
sub
neg
neg
mov
and
mov
call
and
lea
and
mov
add
mov
inc
pop
lea
lea
pop
not
add
pop
sub
movzbl
sub
lea
mov
mov
sub
and
mov
movzbl
lea
mov
and
sub
mov
add
lea
xor
xor
bswap
dec
lea
mov
xor
mov
add
mov
and
lea
mov
mov
inc
add
xor
mov
add
lea
mov
mov
and
and
incb
inc
lea
inc
lea
lea
lea
mov
cmp
jb
lea
push
sub
neg
push
and
lea
push
and
sub
lea
lea
inc
mov
and
or
mov
and
sub
movsbl
imul
and
mov
xor
add
mov
sub
or
mov
lea
xor
lea
mov
sub
mov
inc
inc
and
mov
mov
mov
or
imul
and
inc
imul
add
lea
mov
neg
mov
movzbl
lea
sub
sub
and
bswap
or
and
lea
sub
lea
lea
mov
mov
sub
inc
xor
mov
mov
xor
and
mov
xor
and
mov
push
lea
and
mov
lea
inc
mov
lea
and
movzbl
not
lea
push
mov
neg
movzbl
mov
movzbl
add
mov
neg
add
or
or
pop
xor
movswl
movzbl
mov
mov
inc
inc
and
mov
mov
bswap
cmp
jb
inc
xor
lea
inc
mov
sub
inc
inc
inc
sub
push
lea
and
lea
add
and
mov
mov
or
lea
or
lea
mov
and
or
mov
and
lea
pop
add
inc
mov
lea
not
test
jne
inc
xor
imul
and
xor
mov
mov
pop
inc
sub
mov
mov
lea
mov
lea
lea
test
jbe
xor
inc
neg
mov
movzbl
bswap
xor
pushl
bswap
neg
pop
and
and
movzbl
xor
lea
add
mov
sub
movzbl
or
and
mov
lea
add
mov
and
lea
add
add
and
add
inc
inc
movb
mov
sub
dec
add
mov
sub
not
mov
mov
inc
add
add
add
add
lea
inc
and
lea
inc
inc
movb
lea
lea
mov
add
mov
and
and
inc
sub
add
lea
lea
sub
mov
inc
not
inc
or
add
mov
mov
movzbl
or
mov
lea
imul
sub
movzbl
and
add
push
neg
or
xor
xor
and
dec
mov
xor
mov
mov
bswap
inc
and
lea
and
xor
lea
sub
sub
and
pop
add
movswl
inc
mov
mov
dec
jne
and
pop
mov
xor
pop
mov
movswl
pop
sub
lea
add
movswl
lea
pop
lea
and
add
lea
mov
push
and
ret
mov
sub
bswap
sub
inc
inc
or
inc
sub
mov
not
imul
pushl
or
inc
push
mov
add
xor
imul
inc
mov
inc
mov
add
lea
lea
cmp
je
inc
add
and
jmp
sub
xor
imul
not
mov
lea
and
lea
sub
mov
sub
movsbl
sub
neg
mov
sub
and
mov
and
add
lea
mov
imul
push
movzbl
bswap
mov
sub
mov
pop
mov
mov
push
inc
and
pop
sub
mov
lea
lea
sub
cmpb
je
sub
push
mov
and
push
sub
sub
push
sub
inc
push
mov
imul
call
lea
mov
push
lea
xor
call
lea
imul
add
je
add
call
xor
xor
dec
and
add
call
bswap
lea
test
jne
xor
pop
lea
neg
mov
mov
and
mov
movsbl
inc
add
mov
or
call
lea
and
mov
mov
mov
ret
xor
not
lea
sub
movsbl
lea
and
inc
ret
adcl
add
jne
lret
clc
xorl
cwtl
and
pop
lods
gs
js
or
scas
inc
push
out
add
or
shrl
bound
fnstenv
adc
or
and
mov
cli
std
test
push
cmc
jg
insl
sbb
repnz
jno
enter
pop
mov
flds
ret
lock
push
gs
jns
and
cltd
leave
or
arpl
jle
cmpsb
mov
stos
pusha
xor
hlt
rcrb
pop
dec
cmp
shl
add
fdivrp
jns
int3
test
add
sbb
lods
sbb
sbb
push
cmp
pop
jge
lock
push
or
fnstenv
jl
outsl
dec
mov
xchg
mulb
loope
cmp
cmp
ret
xlat
inc
adc
scas
pop
dec
fbld
ljmp
dec
push
cmp
mov
mov
inc
lea
es
push
cltd
pop
imul
pop
out
and
mov
nop
cmp
sub
aaa
mov
jb
cwtl
push
aam
mov
mov
jns
jmp
aad
fsub
cli
mov
inc
adc
sarb
sti
rcrb
xor
loopne
arpl
sbb
pop
test
lret
dec
jg
push
push
sbb
notl
out
ficoms
jmp
outsb
mov
cmpsb
js
sub
rcrb
mov
push
dec
shlb
loope
or
add
xor
mov
sahf
add
out
dec
sbb
adcb
cmpl
sbb
mov
cmp
in
das
ss
inc
mov
in
stc
add
outsl
jb
push
ja
pop
das
fwait
sub
cmp
or
insl
icebp
aam
pop
adc
push
loope
addb
mov
mov
lcall
inc
fmull
adc
and
mov
and
mov
add
test
es
mov
sub
add
adc
outsb
adc
jmp
xchg
adc
jg
inc
add
push
xchg
loop
or
cli
jnp,pn
shrl
ss
stos
outsb
add
aam
mov
cmp
xchg
lds
in
push
cmp
mov
xor
mov
push
dec
rorb
pop
xor
fisubrs
imul
inc
sbb
pop
clc
push
cmp
pop
fsubl
pop
loope
inc
data16
dec
fisttpl
leave
push
mov
adc
iret
leave
dec
mov
popf
or
subl
jge
push
sahf
sbb
xor
lahf
add
into
sbb
imul
push
arpl
mov
mov
test
in
fldenv
iret
sbb
stos
fsubrs
jbe
cmpsl
mov
into
sbb
subl
fidivl
mov
iret
cwtl
test
or
jecxz
mov
mov
aam
fs
adc
mov
pop
dec
add
mov
xchg
sbb
xor
pop
dec
xorb
add
call
test
or
std
lret
lods
fidivs
cmp
cs
in
outsl
jne
mov
div
jns
loope
pop
faddl
jg
sti
ret
dec
outsb
mov
xor
cmc
jmp
inc
xor
or
push
popa
sbb
out
adc
les
mov
push
sbb
jb
or
loopne
inc
std
sub
pop
and
and
sarl
int
jo
test
mov
lcall
data16
mov
xchg
lahf
fdivs
das
das
jp
lahf
fsubs
adc
xchg
mov
orl
cmp
mov
mov
jnp
cmp
dec
cmpsl
add
out
cmp
sarb
cmp
stc
or
xor
test
xor
popa
imul
enter
orw
mov
adc
fisubrl
xchg
push
movsl
dec
and
jecxz
xor
xchg
dec
sub
mov
mov
mov
push
mov
or
jne
add
leave
imulb
mov
sbb
aaa
call
and
sbb
repnz
lock
pop
add
test
mov
mov
aad
daa
push
xchg
sbb
jno
out
stos
lds
xchg
sub
mov
adc
cli
push
movsb
pop
mov
inc
insl
mov
jecxz
frstor
mov
jp
and
sbb
fwait
inc
pop
andl
decb
mov
dec
jecxz
or
enter
faddl
mov
or
cmpsl
pop
rorb
out
aam
mov
jo
pop
sbb
je
jns
shrl
shlb
sub
clc
int3
popa
sub
ljmp
xor
leave
cmp
and
lock
cmpsl
adc
in
notb
pop
xor
xchg
and
in
fcomps
lods
add
lahf
stc
addr16
scas
daa
cltd
mov
ret
or
mov
xchg
mov
push
sub
ftst
mov
cmpsl
cmp
dec
sbb
jge
push
adcl
leave
in
ret
aas
inc
jb
pop
popa
xchg
addr16
jecxz
pusha
sti
push
cmpl
pop
gs
pop
push
pmaddwd
stos
mov
cmp
lea
out
and
sub
xor
add
sub
mov
imul
js
std
inc
xchg
xchg
sub
push
shr
sub
or
inc
or
mov
dec
pop
icebp
and
push
pop
je
add
adc
push
mov
adc
xchg
negl
imul
ljmp
jecxz
insl
ja
scas
pop
popa
stos
test
imul
push
lea
mov
aaa
or
pop
sub
ret
push
call
push
push
out
mov
loopne
xchg
and
sub
add
decb
test
test
aam
arpl
or
out
xchg
daa
lcall
push
scas
pop
repz
inc
clc
lods
cmp
push
fcomps
lret
xchg
cld
pushaw
fwait
ss
out
lahf
sbb
fs
inc
sub
pop
lea
add
jbe
cltd
xchg
rclb
or
imull
mov
pop
fldcw
into
push
pop
jp
xchg
sub
int
dec
ljmp
xchg
inc
ja
add
sbb
pop
mov
push
mov
add
push
cmp
xchg
ds
pop
lret
filds
iret
mov
nop
fs
push
inc
sub
and
hlt
dec
dec
and
popa
imul
and
pop
push
loope
sbb
mulb
lcall
rcll
out
mov
lret
pop
sbb
dec
pop
movsb
cmp
cmc
cmp
fsubl
mov
outsb
adc
cmp
mov
cmp
inc
leave
aad
mov
jg
or
push
push
in
aad
bound
push
icebp
and
mov
paddusw
fptan
arpl
xor
pop
add
pop
notb
adc
int3
xor
nop
or
mov
icebp
dec
int3
loop
push
mov
or
std
mov
cld
das
cmp
cmp
lods
pop
push
sahf
inc
test
lods
jne
jae
jg
mov
mov
xor
gs
mov
add
inc
mov
lret
and
xor
jo
into
int
cmp
mov
repz
out
pop
fdivs
rol
dec
xchg
mov
push
enter
in
pop
or
add
call
sub
pop
inc
push
pop
in
add
aam
add
insb
pushf
add
ret
loope
shrl
adc
lcall
mov
lea
popf
sbb
xor
fwait
cmp
add
pop
jb
push
gs
ja
cli
xor
mov
sbb
pop
mov
xlat
sahf
mov
into
jbe
pusha
mov
shrl
push
outsl
lock
cmp
sbb
lea
test
mov
push
pop
cmp
cmp
dec
cwtl
insl
cmp
add
sub
mov
not
jne
stc
sbb
rol
cmpsl
mov
adcb
cmpsl
push
mov
xor
scas
inc
ret
insl
mov
jecxz
mov
mov
arpl
xchg
add
subb
push
mov
push
fisttps
jno
mov
adc
das
xor
insl
mov
xchg
das
ds
ret
popf
sub
sbb
add
mov
sahf
pop
jns
ljmp
and
addr16
loop
pop
and
sub
adc
jbe
int
lret
cld
ss
jae
xor
movsl
push
push
mov
jae
pop
xchg
lods
cwtl
ds
ljmp
mov
popa
fucomip
xchg
mov
push
push
dec
fldt
xchg
inc
lret
inc
inc
out
ljmp
add
dec
inc
mull
cli
xchg
clc
addr16
daa
daa
and
xor
jbe
and
cmp
insb
andb
fstpl
in
cmp
xchg
mov
rol
add
iret
jg
js
fs
stos
pushf
pop
lods
and
cmp
test
and
pop
daa
add
jne
xchg
loopne
xrelease
inc
ds
sahf
mov
fwait
mov
mov
add
lods
idivb
outsb
cltd
mov
rcrl
fldl
mov
mov
inc
push
mulb
stos
bound
or
mov
orb
aam
jne
mov
int3
pop
mov
les
lret
xor
or
pop
loop
push
sbb
int3
sahf
roll
test
rorb
shlb
jge
ret
cmp
mov
nop
icebp
xor
das
inc
into
out
dec
push
jbe
xor
daa
pop
int3
or
mov
sahf
push
test
adc
mov
xor
pushf
mov
ror
dec
xchg
mov
xchg
test
or
popf
add
enter
test
rsqrtps
xchg
and
daa
jg
sub
iret
paddw
xor
push
arpl
cmp
movsb
and
xchg
cmp
cli
cltd
sub
lds
psubb
fistpll
stc
je
outsb
rcrl
andb
jp
in
mov
cmp
fsubp
xchg
or
xor
xchg
pop
neg
jle
inc
cmp
jecxz
jecxz
push
aam
adc
dec
cltd
movsl
ljmp
sbb
out
mov
push
pop
sahf
cmp
add
mov
jg
mov
frstor
adc
push
add
scas
ret
loop
jmp
jmp
fwait
mov
ja
test
repnz
add
mov
lea
mov
addr16
test
test
test
push
push
inc
ficoms
sub
js
sahf
dec
mov
pop
mov
nop
es
fs
adc
and
push
sbb
test
pop
es
insl
adc
rcrl
add
cmp
leave
pusha
stos
incb
jo
jno
sbb
into
js
push
aam
rclb
mov
das
dec
cmpsl
or
lock
and
arpl
jmp
mov
sbb
xchg
mov
leave
cs
xor
pop
shlb
inc
fcompl
ljmp
pop
divl
cmp
cwtl
sub
aaa
in
xor
pop
aas
call
les
shrl
test
pop
push
mov
orb
cmp
out
ret
in
sbb
dec
ja
jbe
jae
arpl
xchg
cmp
xor
sbb
jae
test
xor
dec
pop
sti
sbb
xlat
sbb
insb
movsb
dec
lahf
gs
outsl
jbe
out
outsb
adc
mull
insb
in
add
mov
idivb
repnz
pop
in
mov
daa
jp
je
sbb
lcall
sahf
insb
mov
and
sbb
push
stos
ss
lret
add
aam
rcrl
aaa
stos
cmpsb
sbb
xor
addr16
push
sti
dec
mov
loop
lret
xor
enter
cmp
xchg
adc
mov
adc
xorl
in
jge
daa
or
pop
pop
or
test
push
mov
xchg
rolb
pop
pop
ja
sarl
cmpsl
push
jmp
mov
mov
xchg
jbe
and
aas
popa
jnp
je
adc
inc
sbb
pop
daa
scas
mov
jecxz
xchg
ljmp
aad
outsb
xchg
js
and
or
insb
adc
xor
sarl
std
add
ja
movsl
aaa
jge
in
repz
cmpsl
and
inc
movl
movsl
adc
xchg
mov
jae
mov
xchg
jb
mov
and
pop
mov
cli
sti
scas
dec
sub
jae
sbb
pop
fnstsw
pop
popf
xchg
movsl
jmp
push
shlb
or
mov
out
jg
sub
adc
aad
out
movsl
inc
std
pop
pop
adc
pop
push
loop
fisttpll
cmp
sbb
fisubrs
mov
inc
inc
lock
mov
inc
pop
pop
repz
and
jae
dec
or
arpl
int3
or
adc
sbb
aam
sub
outsl
clc
loope
inc
xor
int3
dec
scas
jae
sbb
ds
mov
xchg
xchg
inc
in
pop
insb
add
xchg
mov
xor
insb
out
leave
addb
out
mov
sbb
rorl
sbb
loop
cmpb
inc
dec
in
pushf
push
push
and
cmp
fstp
pop
jbe
movsl
inc
in
pop
and
xchg
into
jne
xor
