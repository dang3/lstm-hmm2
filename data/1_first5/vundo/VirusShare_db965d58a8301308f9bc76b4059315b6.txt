sub
add
shl
xor
mov
test
jmp
das
xchg
push
jmp
dec
mov
xchg
mov
add
add
push
xchg
xor
push
pop
inc
xchg
call
xchg
jmp
nop
nop
push
push
pop
or
mov
and
addr16
sub
xchg
mov
addr16
andl
xchg
jmp
push
nop
push
xchg
push
addr16
push
xchg
push
nop
pushl
nop
jmp
push
inc
and
sub
or
pop
push
push
pop
push
dec
or
or
shr
sub
and
add
shl
mov
mov
or
add
mov
or
dec
test
jne
pop
pushl
add
rol
pop
call
push
mov
or
pop
or
mov
add
mov
pop
pushl
or
or
mov
pop
xor
nop
jmp
add
cld
jmp
push
cli
in
movzwl
jmp
mov
fildl
je
and
je
adc
negb
cmp
xchg
mov
jmp
aaa
lock
mov
push
cmp
lea
jmp
nop
nop
nop
nop
nop
mov
jmp
xchg
jmp
mov
movb
xchg
movl
mov
call
nop
popa
jmp
sahf
jns
pop
shl
call
mov
test
jmp
incb
sti
jmp
je
push
xchg
xor
mov
jmp
nop
nop
nop
subb
xchg
jmp
push
push
pop
xor
addr16
and
mov
mov
xchg
jmp
add
xchg
jmp
nop
push
mov
and
mov
ror
ror
shl
mov
push
cld
jmp
nop
nop
nop
nop
push
xchg
sub
dec
mov
jmp
mov
jmp
pop
cmp
add
add
dec
sub
add
mov
jmp
lea
jmp
call
mov
test
jmp
mov
mov
std
call
call
es
inc
insl
shl
or
mov
xor
add
dec
mov
pop
ret
jmp
arpl
pop
nop
nop
nop
nop
nop
mov
jmp
stos
xchg
dec
dec
js
jbe
add
xchg
jmp
cmpl
xchg
jmp
nop
nop
nop
nop
nop
nop
push
push
pop
sub
rol
sub
inc
inc
mov
sub
cld
pushl
sub
shl
pop
andl
xchg
push
addr16
jmp
lea
jmp
push
push
pop
push
mov
pushl
addr16
pushl
mov
push
mov
mov
add
xor
mov
shr
and
and
mov
dec
or
add
dec
test
jne
pop
push
or
add
pop
mov
call
leave
jmp
mov
ret
jmp
insl
jge
nop
nop
nop
nop
cmpb
jmp
cmp
jge
je
push
ror
sub
pop
call
push
pop
cmpb
mov
je
cmpb
mov
jne
jmp
lea
jmp
inc
lock
nop
mov
push
pop
mov
cld
lea
jmp
pop
sub
dec
cld
cld
test
jmp
mov
test
sub
add
xor
push
pop
ret
jmp
cmc
mov
xchg
cmp
xchg
jne
add
xchg
jmp
addb
cld
jmp
push
cld
call
or
mov
and
and
dec
or
mov
shr
add
mov
ror
mov
add
push
pop
jmp
rorl
jmp
jnp
fsin
sarl
add
xchg
dec
jmp
push
js
test
rol
sub
sub
pop
ret
jmp
daa
and
nop
shr
mov
jmp
pushl
rol
mov
and
or
or
pop
pusha
jmp
add
shl
mov
push
xchg
call
xchg
jmp
mov
mov
mov
mov
movl
mov
or
mov
mov
mov
or
sub
and
mov
shr
jmp
add
mov
and
mov
mov
xchg
jmp
je
call
mov
test
jmp
add
add
call
xchg
test
jmp
xchg
out
jmp
xor
mov
inc
mov
ret
jmp
iret
jecxz
nop
nop
nop
nop
nop
push
xchg
cmpl
mov
jne
push
push
pop
lea
jmp
hlt
scas
push
push
pop
push
mov
push
xchg
jmp
push
addr16
jmp
je
arpl
xor
adc
xor
pop
cmpb
xchg
je
jmp
push
nop
push
push
pop
push
cld
push
xchg
add
mov
push
xchg
jmp
movzbl
jmp
sub
outsl
imul
leave
jmp
call
push
popl
jmp
ret
das
mov
adc
nop
nop
nop
nop
nop
add
add
add
leave
insb
push
sub
xor
and
add
sub
xor
mov
mov
pushl
or
pop
rep
jmp
and
pushf
jmp
sub
xor
shl
and
add
pushl
add
pop
and
or
mov
add
shr
mov
sub
xchg
jmp
mov
xor
pop
lea
jmp
mov
stc
jmp
dec
xchg
lea
jmp
sti
mov
jne
test
jmp
dec
jmp
and
je
jmp
xchg
pusha
jmp
and
dec
into
imul
adc
jmp
popa
jmp
or
pop
pop
adc
add
push
pop
jmp
ret
jmp
xlat
nop
nop
nop
nop
nop
jmp
pushl
ror
pop
shr
xor
add
and
inc
mov
mov
mov
shr
mov
add
push
pop
mov
xchg
jmp
icebp
in
inc
mov
jmp
push
adc
xchg
sub
add
add
mov
sub
mov
sub
mov
mov
mov
mov
push
pop
jmp
jge
push
add
push
xchg
inc
mov
mov
jmp
gs
inc
sub
mov
or
shr
mov
mov
rol
mov
rep
jmp
add
sbb
movzwl
jmp
incl
xchg
add
xchg
cmp
cld
jmp
jge
jno
push
add
add
add
xchg
incl
xchg
jmp
dec
mov
movzbl
jmp
ds
lock
xchg
push
incl
push
pop
xor
nop
jmp
mov
iret
sub
xchg
jmp
xchg
xor
add
mov
jmp
jecxz
push
add
or
mov
nop
nop
nop
nop
nop
shr
mov
and
mov
jmp
sbb
call
and
mov
and
addr16
inc
mov
inc
xchg
shr
jmp
mov
outsb
sub
dec
je
test
jmp
je
jmp
push
mov
shr
jmp
cmp
test
jmp
add
xor
add
or
pop
dec
mov
add
add
add
xchg
mov
mov
jmp
and
add
mov
mov
ror
mov
sub
addr16
mov
xchg
incl
xchg
jmp
mov
mov
add
mov
cld
push
pop
movzwl
jmp
cmpsl
jmp
and
xor
mov
and
xchg
cmp
cld
jne
and
mov
jmp
push
xchg
and
nop
mov
jmp
inc
jne
jmp
mov
xchg
mov
xchg
jmp
call
nop
jmp
add
mov
add
xchg
add
xchg
rol
shl
xor
and
and
add
inc
nop
inc
xchg
decl
jmp
jne
jmp
or
or
xor
mov
add
nop
cltd
jmp
mov
push
jne
sub
inc
add
xchg
jmp
and
nop
add
push
pop
xor
push
pop
shr
jmp
cwtl
daa
inc
scas
cltd
and
add
cmpb
call
mov
popa
lea
jmp
movsl
mov
out
jle
jmp
fs
mov
test
add
add
test
dec
and
jmp
out
out
call
mov
jmp
jmp
in
xchg
test
jmp
jle
jmp
test
jmp
cld
dec
mov
je
add
mov
sub
xchg
mov
mov
mov
xchg
jmp
cmpl
nop
jne
mov
rol
sub
pop
sub
inc
sub
shr
mov
mov
mov
xchg
add
nop
mov
or
add
shr
sub
pop
mov
nop
nop
nop
nop
nop
or
rol
pop
leave
jmp
dec
orb
ret
jmp
xchg
and
xchg
jp
nop
nop
nop
nop
inc
and
or
or
mov
mov
xchg
sub
xchg
sub
xchg
decl
jmp
shr
ss
and
mov
dec
xchg
mov
jmp
std
outsb
jne
nop
nop
nop
nop
nop
jmp
sub
nop
jmp
dec
cld
dec
mov
jmp
mov
mov
incl
jl
jge
jmp
jae
adc
add
mov
movzbl
jmp
je
mov
jmp
sub
dec
pop
jb
add
nop
incl
mov
lea
jmp
pop
sub
mov
call
cld
jmp
mov
xchg
sub
mov
decl
jmp
nop
jne
test
jmp
rorb
mov
mov
add
mov
inc
dec
and
mov
mov
jmp
xor
jge
add
add
inc
addr16
jmp
pop
in
add
mov
nop
nop
nop
nop
nop
add
xchg
dec
jmp
add
jne
test
jmp
scas
dec
mov
jmp
cld
cmp
jle
ror
jmp
sub
scas
push
scas
cmp
mov
jb
inc
cld
cmp
mov
jmp
fdivl
pop
add
xchg
dec
jmp
jne
push
push
pop
push
push
pop
pushl
addr16
push
xchg
call
jmp
pause
jae,pn
inc
xchg
inc
mov
test
jmp
lcall
test
add
add
dec
and
sub
shl
mov
nop
nop
nop
nop
nop
sub
xchg
mov
mov
incl
xchg
dec
push
pop
mov
jmp
jns
testb
leave
decl
shr
sub
xor
inc
sbb
repz
pop
inc
das
mov
mov
inc
shl
shr
mov
dec
mov
jmp
loop
int3
xor
xchg
jmp
sub
leave
mov
cld
call
nop
mov
push
pop
add
sub
sub
xor
mov
inc
or
xor
add
mov
add
or
and
ror
shr
mov
jmp
mov
push
inc
push
pop
jmp
jmp
clc
cmpsb
sbb
movsb
jmp
jmp
or
add
rol
sub
and
and
mov
jmp
mov
sub
add
add
sub
pop
rol
mov
push
xchg
push
xchg
pushl
xchg
call
mov
push
push
pop
push
mov
nop
nop
nop
nop
nop
push
nop
call
xchg
rol
mov
and
add
sub
shr
mov
jmp
dec
or
xor
mov
mov
push
pop
incl
xchg
incl
xchg
mov
addr16
xor
addr16
cmpl
mov
je
nop
nop
nop
nop
nop
and
sub
dec
ror
mov
and
add
and
add
pop
sub
push
pop
and
ror
xor
pop
mov
sub
or
or
sub
mov
xor
dec
pop
ret
jmp
aam
xor
mov
dec
nop
nop
nop
nop
nop
test
jmp
inc
sbb
nop
nop
nop
nop
nop
mov
jmp
pop
je
mov
mov
add
mov
sub
xchg
jmp
mov
or
ror
and
sub
mov
nop
nop
nop
nop
nop
sub
mov
shr
jmp
daa
push
test
jmp
jl
dec
dec
pop
xor
add
daa
inc
mov
add
add
mov
nop
rol
xor
mov
movzwl
jmp
testl
nop
nop
nop
nop
shr
or
mov
and
push
pop
cmp
xchg
jne
and
addr16
add
xchg
add
xchg
add
xchg
pushl
mov
add
pop
nop
nop
nop
nop
nop
addl
xchg
decl
jmp
aam
cmp
call
add
xchg
cmpl
mov
jne
mov
nop
test
jmp
mov
adc
test
add
add
fimuls
add
je
nop
nop
nop
nop
nop
jmp
and
add
mov
sub
mov
nop
nop
nop
nop
nop
add
push
pop
push
nop
nop
nop
nop
nop
nop
pushl
xor
xor
xor
mov
sub
push
sub
or
sub
add
xor
or
shl
add
rol
mov
add
shl
rol
mov
dec
test
jne
pop
pop
call
cmp
mov
mov
jmp
je
rol
mov
test
jmp
xchg
sar
nop
nop
nop
nop
nop
jne
nop
nop
nop
nop
nop
and
shl
add
dec
mov
mov
xor
mov
add
add
mov
add
xchg
shr
sub
mov
add
push
pop
test
jmp
or
je
jmp
pushl
and
xor
pop
nop
nop
nop
nop
nop
test
jmp
lahf
adc
nop
nop
nop
nop
nop
jns
movzwl
jmp
jle
pop
aad
leave
jmp
add
addr16
add
xchg
push
mov
pushl
mov
push
rol
sub
mov
sub
push
shr
sub
mov
and
push
inc
pop
mov
or
rol
dec
test
jne
pop
pop
mov
call
add
mov
nop
nop
nop
nop
nop
mov
xchg
xor
shr
mov
add
addr16
test
jmp
pushf
lea
ja
nop
nop
nop
nop
jne
add
xchg
nop
nop
nop
nop
nop
cmpl
xchg
jne
mov
jmp
push
push
mov
xchg
rol
and
and
ror
add
mov
mov
addr16
mov
xor
sub
add
mov
mov
shl
xor
and
add
ror
add
shl
shl
pop
nop
nop
nop
nop
nop
shr
inc
pop
add
pop
mov
mov
cmp
xchg
jne
sub
sub
sub
and
add
add
xchg
mov
mov
sub
mov
nop
nop
nop
nop
nop
add
xchg
leave
jmp
pop
out
adc
add
jns
inc
nop
nop
nop
nop
nop
pop
xor
add
xor
add
add
mov
add
add
add
test
add
loopne
add
inc
xor
add
xor
add
xor
add
xor
add
sub
add
arpl
add
inc
xor
add
add
add
xorb
add
xor
add
add
leave
xor
add
xor
add
xor
add
add
add
xor
add
add
aaa
xor
add
add
push
xor
add
add
jo
add
xchg
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
push
add
jg
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
cs
add
dec
xor
add
jb
add
xorl
add
inc
xor
add
add
add
xorb
add
xor
add
add
leave
xor
add
xor
add
xor
add
add
add
xor
add
add
aaa
xor
add
add
push
xor
add
add
jo
add
xchg
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
push
add
jg
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
cs
add
dec
xor
add
jb
add
xorl
add
imul
gs
xor
cs
insb
add
add
add
je
outsl
fs
gs
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
fs
imul
add
add
jb
jo
outsb
add
add
jb
outsb
add
add
insb
je
inc
jns
gs
outsl
push
imul
add
push
imul
insb
insb
outsl
arpl
add
push
imul
jb
add
add
jb
jne
insb
push
jb
je
arpl
add
fs
push
dec
jne
je
inc
jns
add
add
gs
xor
fs
insb
add
gs
jne
jae
jb
outsl
jae
add
inc
gs
inc
add
add
je
jns
je
insl
dec
gs
imul
gs
imul
add
je
imul
add
add
je
imul
add
add
je
imul
js
inc
add
add
je
imul
js
dec
outsb
addr16
inc
add
add
jbe
insb
imul
je
add
dec
jae
imul
add
insb
insb
push
imul
dec
outsl
popa
fs
jne
jae
jb
add
add
fs
arpl
inc
add
add
fs
je
imul
dec
gs
popa
addr16
outsl
js
add
add
imul
jae
addr16
add
add
jae
dec
gs
popa
addr16
add
add
jae
push
jne
je
gs
popa
add
add
imul
popa
jae
inc
add
add
insb
gs
jae
inc
popa
jo
jne
add
add
insb
gs
jae
inc
inc
add
add
imul
insb
add
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
inc
add
add
gs
je
inc
dec
inc
push
arpl
outsb
add
add
gs
je
push
arpl
outsb
add
add
gs
je
push
outsl
insb
imul
add
inc
gs
gs
inc
inc
add
add
gs
dec
bound
arpl
add
je
gs
arpl
popa
jo
add
add
je
imul
inc
gs
je
arpl
bound
arpl
add
jbe
push
outsl
inc
js
add
push
arpl
insb
add
add
jae
outsl
jb
inc
inc
add
add
gs
insb
xor
cs
insb
add
add
add
addr16
arpl
jo
inc
imul
jb
addr16
imul
add
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
add
arpl
fs
xor
cs
insb
add
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
add
outsl
outsl
jae
inc
outsl
outsb
je
add
add
je
popa
jbe
inc
imul
add
add
add
add
popl
fildll
stos
orb
sub
insl
bound
into
fwait
push
clc
cmpsl
and
mov
aam
sub
push
scas
add
inc
mov
sub
or
add
sub
aaa
cmp
dec
ss
xor
sbb
and
push
cmp
cmp
cmp
xor
xor
dec
cmp
pop
cmp
je
xchg
aaa
jmp
xor
xor
aam
fidivl
jecxz
hlt
cmp
add
add
add
jp
sbb
xchg
xor
xor
xor
xor
xor
add
lret
outsl
fsubrp
out
add
mov
jge
mov
xchg
sub
into
jno
je
sbb
test
pop
out
pushf
adc
icebp
xor
mov
xchg
sub
in
mov
and
outsb
mov
or
ret
in
mov
ljmp
dec
popf
xchg
lret
fisttps
xor
ds
xchg
test
jmp
jnp
mov
loope
stc
pop
int
lret
adc
loope
push
jl
into
mov
inc
int3
pop
dec
xchg
jbe
and
rclb
and
aad
mov
cmp
fcmovne
inc
add
cmpsb
in
mov
pop
dec
lret
inc
ss
lahf
test
xchg
xchg
add
aas
push
xchg
dec
push
mov
iret
add
or
xorb
scas
fidivs
mov
mov
ds
adcl
insl
mov
or
test
jmp
shrl
push
lahf
insb
rcr
xchg
sbb
imul
add
add
or
das
push
xchg
sub
les
xchg
sbb
stos
cmpsb
shll
or
nop
aad
int
subb
jl
arpl
jb
or
push
mov
mov
xor
mov
jp
stc
insl
in
push
sarb
adc
cmp
sbb
pop
pop
out
add
adc
xchg
in
std
push
ret
loop
sti
push
rcll
push
idiv
adc
and
cmpsb
or
cmpsb
in
xchg
xchg
or
or
pop
test
inc
dec
xor
push
outsl
call
cli
jmp
test
int3
adc
dec
add
adcl
pop
xor
lods
mov
mov
in
adc
mov
popf
gs
dec
ret
mov
mov
test
out
xchg
mull
outsl
jnp
xchg
jp
sbb
in
clc
or
fidivs
scas
mov
push
dec
inc
ljmp
mov
xor
adc
sbb
add
loope
push
sbb
dec
push
pop
add
dec
jmp
ss
in
mov
imul
pushw
imul
ret
push
aad
jno
or
cwtl
lock
ret
sti
xor
jecxz
adc
push
roll
int3
mov
mov
sub
cmp
nop
cmp
add
lcall
jg
mov
ds
add
and
inc
pop
scas
fldlg2
mov
mov
and
cmpsb
bnd
dec
cmp
cmp
sarb
js
movsl
and
add
fwait
pop
lods
pop
dec
je
jmp
imull
cmpl
lods
lret
repnz
push
fxtract
mov
vpshufhw
jbe
mov
psraw
mov
repnz
shl
fadds
sub
insl
sbb
shrb
outsb
popf
out
jo
push
dec
xor
jno
mov
cmc
js
sbb
out
leave
movsl
adc
push
dec
fmull
orb
xor
icebp
scas
mov
inc
inc
ljmp
dec
pop
movsb
test
shrb
mov
sarb
repnz
xor
lds
jl
xchg
bound
push
ret
mov
mov
sub
fidivrl
bound
pop
pop
stos
out
dec
imul
xchg
xor
mov
stos
or
mov
mov
add
or
test
or
hlt
push
fistps
cmp
imul
mov
call
ffree
pop
xor
jae
mov
or
loopne
adc
dec
outsb
es
mov
push
mov
adc
aad
cmpsl
or
pop
xchg
mov
dec
push
pop
imul
in
ljmp
ret
sti
dec
mov
stos
pushf
nop
xchg
cltd
dec
or
cmp
loope
jns
inc
lcall
and
add
fsts
popf
mov
lret
push
mov
pop
pop
sub
loop
nop
fs
fs
cmp
jle
pop
mov
xor
stos
insb
mov
lret
pusha
jge
jo
cmp
cmc
int3
mov
in
mov
pop
push
ljmp
lret
movsb
es
mov
xor
push
stc
cltd
jmp
rcrl
adc
dec
stos
stc
sub
mov
aad
std
clc
lods
or
andb
xor
or
sbb
jp
lock
mov
and
mov
sbb
jns
lahf
cmpsb
pushf
test
andb
popa
mov
sbb
sub
stos
or
inc
dec
imul
push
inc
cli
inc
insb
cwtl
out
imul
and
pushf
pop
dec
gs
sti
cmp
dec
or
cmp
mov
insb
dec
cmp
sub
or
sub
jno
mov
push
and
or
adc
movsl
pop
sbb
shl
cld
test
push
mov
push
sbbb
adc
dec
push
cmp
mov
jg
jbe
add
mov
iret
xchg
test
pop
add
jp
dec
cmp
lods
subl
add
stos
xor
push
fs
stos
ret
pop
push
fstpt
loopne
popa
stc
cmpsb
aas
adc
in
data16
sbb
test
xchg
imul
xor
outsl
test
push
xor
js
lcall
pop
add
add
insl
xor
mov
add
mov
dec
sbb
fidivs
xor
mov
andl
adc
adc
in
xor
and
push
fsubr
nop
adc
ret
cmp
push
mov
aad
jge
and
dec
sbb
push
xor
rol
arpl
inc
das
in
add
test
andb
mov
dec
insl
fdivrp
jne
hlt
mov
sbb
aam
ret
popa
push
jg
dec
pushf
or
add
and
dec
sbb
in
xchg
in
mov
jbe
data16
lea
add
lods
ret
dec
xor
arpl
pusha
jae
ljmp
repz
pop
ret
push
lcall
mov
subl
sbb
and
mov
push
loope
and
ds
jge
daa
pop
ljmp
stos
fidivs
jnp
push
fs
stos
rcll
dec
pop
fdiv
inc
sbb
loopne
insb
xchg
outsl
mov
test
sub
jmp
stos
call
cmp
std
cmp
adcb
xchg
and
sub
adc
ja
xlat
iret
or
xor
clc
adc
lock
mov
push
mov
jmp
lret
xor
dec
call
ficoml
adc
into
cmp
mov
repnz
dec
dec
insl
push
cmp
lret
jae
mov
and
mov
xchg
test
inc
test
jmp
dec
inc
fistl
outsb
movsl
aas
inc
addl
mov
das
orl
cmpsl
mov
jp
sub
sbb
mov
inc
pop
sub
mov
das
icebp
neg
dec
push
cmp
imul
and
shlb
in
adc
pop
test
sbb
xor
add
push
pop
jae
adc
imul
and
lret
out
lods
or
adc
jns
aas
cltd
cs
dec
sbb
push
movsl
cmp
or
fisttpll
arpl
mov
movsl
ljmp
push
push
mov
mov
pop
or
jecxz
fdivrl
mov
mov
scas
sbb
mov
int
jo
adc
pushf
jp
arpl
lea
ret
lods
pushf
cmp
insl
jns
dec
sbb
jne
fwait
nop
aad
int
sbbl
cmp
in
mov
popl
lcall
cmp
call
movsb
mov
mov
push
jl
ds
or
jmp
and
movl
add
lock
adc
mul
jge
push
cwtl
fdivrp
jbe
outsb
fsubl
fcoms
lahf
arpl
icebp
mov
test
cmpsl
imul
lods
aaa
push
cmp
out
jns
idivb
enter
imul
sub
sub
pop
jmp
dec
dec
lahf
insl
nop
rcrb
xchg
lock
mov
mov
pop
cmp
cmp
push
sub
adc
cli
movsb
aaa
outsb
les
into
ret
mov
movsb
data16
jnp
ss
test
sub
scas
lahf
ret
movsb
fmuls
xchg
call
jmp
jne
mov
ret
clc
insb
fcmovnb
jnp
mov
out
mov
hlt
loope
inc
pop
inc
mov
lret
sbb
or
faddl
or
into
fiadds
shll
xchg
into
jmp
arpl
out
popf
lea
push
pop
stc
mov
push
mov
rolb
cwtl
mov
inc
les
out
or
mov
jl
shll
mov
add
int3
roll
subl
lock
iret
int
dec
inc
pop
aaa
mov
mov
jae
dec
inc
ljmp
fdivrl
jp
int
adc
sar
ds
imul
insl
or
pop
inc
jae
xor
scas
out
in
shr
push
sub
fidivl
mov
sub
js
imul
adc
and
mov
mov
ds
fs
mov
test
mov
pop
fs
pop
push
js
cld
mov
in
push
mov
test
daa
push
sbb
mov
mov
dec
mov
mov
push
out
rcll
fsubrl
scas
arpl
sahf
addr16
loope
jne
xchg
push
jne
jmp
inc
aas
sub
mov
jge
mov
imul
cmp
mov
enter
cs
pop
mov
inc
jo
pop
mov
pop
adc
dec
int3
test
loopne
into
andl
jmp
dec
icebp
push
xchg
jno
cwtl
inc
lods
dec
jl
adc
scas
pop
aam
push
popf
or
xchg
adc
and
sub
sti
iret
test
xchg
pop
test
or
int3
jnp
fld
mov
ret
aam
fs
out
xchg
inc
test
scas
or
roll
daa
lret
adc
add
dec
and
and
leave
xchg
jnp
and
cmp
iret
mov
movsl
into
xchg
orb
scas
mov
out
dec
mov
dec
fsubrl
stc
dec
fistpll
xor
push
nop
lods
push
lods
aam
xlat
adc
lret
nop
jg
notl
mov
push
add
mov
mov
cmp
adc
push
into
xchg
jecxz
cmp
xor
push
ds
cmpsl
movsb
pop
cmpsl
jmp
and
arpl
fidivrs
add
js
and
pop
dec
push
inc
xchg
xchg
in
sbb
daa
fildll
pop
dec
pop
loop
mov
repz
call
add
xor
es
push
imul
xchg
jmp
fstpt
clc
or
enter
movb
ja
or
sbb
jle
mov
ret
or
sbb
inc
mov
mov
in
pop
or
jnp
and
out
push
test
into
sbb
std
mov
inc
bound
call
mov
cmp
jns
sbb
sub
notl
inc
jp
aad
rcr
adc
push
lret
inc
out
aas
sub
imul
sub
ss
sbb
icebp
sub
push
xchg
insl
sbb
add
mov
push
daa
add
movsb
hlt
mov
pop
ret
sti
push
and
dec
aaa
mov
out
fisttps
jecxz
dec
lods
insl
xor
test
loope
lods
rol
test
mov
leave
ljmp
cwtl
sbb
pop
and
shlb
test
mov
jmp
std
cmp
xchg
add
dec
pop
fdivrl
ror
pop
imul
shl
xchg
push
roll
shrl
adc
or
push
mov
adc
out
sbbl
sbb
movsb
pcmpeqb
mov
loop
ffreep
pop
shrl
adcb
mov
sbb
push
aas
popf
cmpsl
or
lea
pop
arpl
sar
mov
and
and
cmp
cmpsl
push
aaa
push
inc
pop
sub
inc
xchg
jp
xchg
adc
push
jns
cmp
ljmp
leave
lret
inc
xchg
gs
lcall
add
fiadds
ds
or
leave
mov
sbb
imulb
xchg
test
sub
test
stos
flds
dec
pop
push
jno
jecxz
jb
sbb
mov
and
dec
leave
lret
lods
fcmovb
jecxz
gs
clc
stos
jns
xor
popf
fisubrs
mov
cmpsb
xchg
jge
jns
enter
push
es
inc
adc
xchg
or
aas
push
push
aaa
jo
imul
shrb
pop
idivl
push
pop
sbb
jl
mov
xchg
mov
dec
stos
fwait
mov
mov
fdiv
cmp
rorl
xchg
cld
shlb
imul
out
push
push
sahf
testb
shrl
outsl
fldt
cmp
xchg
test
sbb
jg
cmp
push
adc
ficoms
or
into
stos
and
inc
ret
push
in
mov
ret
push
movsb
mov
shlb
aad
xadd
mov
aad
adcb
insl
dec
sub
fs
add
faddl
arpl
scas
mov
aaa
into
lds
popa
fwait
fcmovbe
push
sbb
ret
inc
js
and
repz
cld
mov
mov
andb
dec
push
das
cltd
add
mov
out
sub
shll
mov
pop
loope
aam
js
mov
add
jmp
jns
push
inc
stos
jle
dec
sub
inc
ret
inc
fadds
xor
movsb
dec
push
cmp
dec
js
inc
mov
dec
mov
add
cmpsl
mov
push
mov
push
jb
cmp
dec
scas
xor
mov
pop
fs
gs
enter
xor
mov
cmp
outsb
jnp
jb
mov
int
dec
insb
push
jge
cld
xchg
inc
inc
xor
lret
or
mov
and
xor
jbe
sub
je
arpl
jne
sub
in
hlt
in
dec
dec
xchg
in
pop
jge
jbe
imul
call
mov
ja
fcomp
mov
dec
and
js
bound
movsb
xor
cld
cmp
roll
fistpl
popf
ja
mov
jg
fcomi
mov
cmp
add
fisubs
shrl
push
mov
nop
scas
arpl
bound
jp
sub
push
pop
mov
inc
inc
or
nop
pop
mov
sub
out
dec
cli
icebp
push
inc
xchg
dec
bnd
and
popf
arpl
lret
push
jmp
mov
cmc
cmp
sub
je
mov
shlb
jno
pop
cmpsb
cmp
les
sbb
ret
push
shl
inc
pop
mov
mov
cli
inc
push
and
movsb
mov
mov
outsl
cmp
cmp
sub
scas
roll
in
fadd
xor
sub
push
lods
mov
cmc
pop
cmc
dec
mov
jno
aam
cmp
sub
lods
add
sub
sub
popf
stos
cmp
incb
sbb
xchg
mov
xor
sub
push
push
pop
jge
jmp
inc
inc
mov
dec
jmp
and
lea
mov
xchg
fs
cmp
xor
popa
fists
cmp
dec
or
jno
les
ja
into
sbb
sbb
mov
xlat
push
push
adc
adc
mov
mov
push
or
sbb
xor
out
fs
fsubrs
xor
inc
fdivrs
insl
clc
scas
cmp
imul
imul
inc
arpl
push
jl
mov
mov
mov
adc
mov
and
xchg
lock
sbb
fs
xchg
int3
enter
adc
call
je
ret
or
stos
outsl
mov
in
sbb
outsb
cmpsb
out
jl
lret
mov
int3
mov
cmp
add
xchg
mov
sbb
push
ss
mov
enter
lret
and
jae
or
xchg
scas
repz
in
lock
sarb
outsl
fcomps
fcmovne
xchg
movsl
imul
adc
and
out
mov
mov
jecxz
mov
out
out
fs
mov
movsl
xchg
mov
mov
int
add
icebp
jbe
mov
imul
inc
xchg
rcr
xchg
ds
mov
es
out
sub
fs
sub
addb
aaa
sub
mov
ret
pusha
xchg
mov
orb
mov
pop
rolb
in
cmpsl
xchg
lock
fwait
pop
cmc
das
pop
lret
sub
imul
xchg
iret
sub
mov
dec
nop
ds
test
lahf
lods
sub
or
shll
inc
fwait
mov
lcall
in
mov
pop
stos
fwait
pop
dec
mov
mov
scas
lods
sub
push
mov
sarb
dec
inc
mov
inc
push
fsubs
pop
mov
dec
lahf
sbb
xor
stos
mov
bound
clc
insb
pusha
xor
push
adc
jne
mov
aas
jge
cltd
jne
arpl
lods
fistpll
inc
ret
cld
andb
pusha
dec
xchg
movsl
jb
jl
lret
sti
in
fimull
pop
in
mov
test
insl
idivl
insl
sbb
push
cmp
lock
mov
push
insb
dec
je
or
xor
adc
adc
fs
lods
inc
std
push
adc
repz
xchg
jae
sbb
lret
dec
push
in
inc
inc
mov
push
rcrl
ja
jge
xchg
cmp
jo
xor
lock
adc
pop
jnp
outsl
ja
rorb
push
xchg
dec
inc
dec
jmp
nop
mov
sarb
in
and
push
xor
jnp
pop
dec
cmp
dec
push
dec
pop
xor
loop
les
pop
sub
jp
add
pop
push
imul
pop
in
pop
jne
pop
jne
jl
jmp
neg
loope
sub
and
mov
lods
ljmp
daa
push
in
xchg
xchg
mov
scas
insl
jne
dec
leave
push
push
xor
push
and
aad
add
cmp
pop
xchg
mov
push
notl
nop
mov
pop
loop
mov
sarb
outsl
jg
cmp
lds
inc
adc
sub
loope
and
sub
in
xchg
push
sbb
jnp
das
lcall
mov
shll
out
xchg
sub
or
repnz
xchg
shlb
sbb
jl
ds
clc
aad
gs
fsubl
cmp
out
add
inc
aaa
sub
mov
jns
adc
xor
or
gs
sbb
movsb
std
pop
jecxz
push
loopne
mov
pop
inc
push
mov
imul
cmpl
les
mov
dec
dec
pop
in
pop
outsb
inc
loopne
pop
xchg
add
mov
xchg
ljmp
into
dec
sub
xchg
mov
mov
mov
or
aam
daa
dec
or
sar
mov
lea
jl
and
xor
test
push
push
mov
dec
shlb
cmpsb
cmp
imul
cmc
sbb
adc
jg
insb
movsb
sub
lods
lock
pop
pop
cmp
mov
jmpw
cwtl
std
test
adc
shrl
cmp
fwait
rcrl
loop
fnsave
sub
out
adc
cli
nop
enter
jmp
mov
test
ds
or
scas
push
in
inc
repz
lock
rclb
xchg
mov
sahf
and
sub
movsl
pop
push
das
sbb
mov
mov
addl
xor
xchg
jmp
or
xchg
shrl
pushf
dec
mov
xchg
pop
cmc
pop
cmp
pop
and
aam
loope
repz
faddp
jecxz
int3
push
hlt
addb
dec
pop
loope
jg
push
push
fisubrs
adc
cwtl
xor
push
dec
xchg
add
inc
test
add
push
ja
movsl
mov
sub
cmp
inc
cmpsl
iret
out
dec
mov
add
inc
loop
xchg
stc
inc
stos
mov
das
bound
lock
movsl
cwtl
orb
xor
cmp
leave
aas
std
xor
fstpt
pop
test
cli
fcoml
cli
or
inc
xor
or
sub
inc
or
and
add
loop
jne
arpl
mov
insl
and
or
js
fcomp
pop
sbb
push
mov
add
loope
sbb
rclb
sarl
les
rorl
shr
jmp
in
lahf
and
adc
sar
dec
or
push
sahf
add
xor
or
xor
dec
push
daa
pusha
iret
loope
loop
pop
mov
xadd
hlt
mov
inc
jns
adc
int3
movsl
cmpsb
lret
inc
data16
adc
or
pop
add
mov
movsl
mov
scas
jl
dec
or
mov
jl
mov
push
jp
idivl
stc
and
jecxz
xor
jg
inc
mov
fadd
repz
jg
pop
test
imul
test
hlt
jnp
fisubl
out
xor
in
imul
mov
loope
pop
add
shll
xchg
push
pop
jae
dec
or
fwait
or
hlt
mov
in
pushf
test
icebp
jne
repz
andl
mov
test
sub
xchg
inc
je
dec
cmp
fstpt
mov
xchg
jmp
pop
or
filds
jmp
sbb
popf
rcr
and
cmc
int3
add
lods
imul
adc
loope
adc
cmp
imul
ja
jl
inc
movsl
cld
cs
cmpsl
ret
movsl
sbb
inc
les
mov
xor
pop
popf
mov
arpl
mov
cld
pop
lea
or
pop
push
js
cmovle
ljmp
push
jne
mov
nop
aaa
or
pop
cmp
jp
stos
push
mov
dec
sub
xor
cmpsb
jns
out
fistps
adc
aaa
mov
pop
movsb
push
xor
aam
pop
arpl
push
jae
mov
popa
les
in
cmp
push
adc
loop
sbb
jmp
rcrb
insb
xorl
aam
lods
in
scas
mov
jecxz
dec
xchg
xchg
push
jo
decb
clc
das
clc
sbb
sbb
pop
mov
jge
and
mov
mov
scas
push
rorb
lods
ror
ja
cmp
jns
stos
pushf
imul
mov
mov
lds
cmpsb
arpl
pop
js
ror
sub
or
mov
imul
ss
ljmp
pop
iret
insb
add
fs
ficomps
out
mov
dec
mov
jp
lods
push
fwait
or
scas
test
in
sub
out
pop
ss
jo
pop
xchg
das
gs
je
cs
pop
cmp
sbb
jae
sub
movsb
mov
test
lock
das
or
adc
jl
inc
inc
push
xchg
xchg
cltd
pop
or
sub
and
push
cld
jl
mov
mov
inc
call
and
mov
push
scas
bound
je
pop
arpl
dec
lret
outsl
adc
pushf
mov
loope
into
dec
inc
jb
pop
push
outsb
cmp
pop
out
add
fisubs
jl
clc
jle
mov
push
lcall
lret
aaa
inc
outsl
adc
ret
mov
ljmp
bound
mov
loopne
add
mov
call
scas
pop
fs
aam
xchg
and
jb
leave
test
jmp
jl
or
xchg
xchg
es
jne
shl
lea
cli
dec
jle
fcoml
add
xor
and
pop
xor
cmp
xor
ja
cs
mov
insl
xchg
jb
divl
inc
sti
lock
arpl
test
sbb
add
data16
call
inc
nop
ljmp
lret
xchg
aaa
pop
jmp
xchg
push
or
rcrb
mov
ljmp
sti
enter
xchg
daa
out
data16
mov
adc
out
sbb
aaa
sub
cmc
es
or
das
fadd
cs
and
outsl
jmp
rolb
mov
icebp
mov
in
rol
mov
scas
sub
sti
pop
mov
cmp
inc
cltd
mov
dec
lds
int
adc
fstl
inc
pop
sahf
cltd
inc
int3
add
dec
and
in
lods
outsl
test
cmp
es
cmpsl
repnz
add
imul
mov
repz
sbb
js
pop
push
jg
jae
je
mov
pop
mov
jmp
cmpsb
mov
jecxz
in
into
scas
mov
and
loope
mov
cmpb
data16
sub
lcall
sub
filds
shrb
verw
test
cmpsl
sbb
push
xor
pop
xchg
cmp
mov
dec
cmp
das
arpl
stos
push
negl
loop
adc
pusha
jne
xor
or
pop
sbb
subb
dec
cli
fsubrl
and
pop
cli
shlb
movsb
sahf
add
stos
cs
in
imul
inc
jmp
jns
bound
es
sub
adc
mov
sub
mov
out
mov
or
dec
mov
stos
cmp
pop
dec
pop
dec
pop
insl
mov
or
xor
or
ljmp
aad
iretw
imul
push
push
adc
test
mov
lock
mov
mov
aad
jae
es
ljmp
jbe,pt
mov
mov
pushf
dec
sub
enter
das
cmp
pop
pop
gs
ljmp
imul
cli
ror
ljmp
mov
fldl
inc
and
push
push
xchg
mov
mov
and
hlt
out
mov
popfw
aam
mov
adc
sub
mov
cmp
xchg
sub
and
fldt
pop
cwtl
into
sti
rclb
loop
inc
mov
adc
dec
jnp
fcomp
mov
movsl
xor
jb
stos
vmovd
mov
adc
das
out
jp
in
pop
je
test
lods
jno
inc
ds
add
push
mov
sub
clc
ja
xchg
push
pop
adc
sub
pop
fadds
sbb
int3
sti
mov
hlt
and
pop
pusha
pop
mov
inc
ja
add
cmp
imul
mov
das
cmp
idivl
cwtl
mov
adc
aam
or
add
cmp
xchg
aas
jmp
sahf
push
aas
sbb
loop
inc
gs
xor
xchg
add
cmp
and
int
divl
lds
fdivp
sti
into
popf
ljmp
out
cmp
pop
stc
rcr
stos
outsl
and
stc
ret
or
out
push
ret
insl
inc
mov
mov
mov
adc
int
outsl
dec
mov
mov
gs
fdivs
rcr
mov
pop
imul
or
test
mov
mov
ret
pop
incb
inc
outsb
lret
test
mov
cs
or
rol
push
pop
aad
test
xchg
mov
add
inc
and
into
nop
int
sub
in
inc
clc
in
mov
sti
inc
outsb
dec
jns
idivb
insb
stc
pop
push
adc
and
cmp
pop
mov
decl
cli
inc
outsl
std
sub
adc
js
jecxz
mov
in
aaa
xor
subl
ds
test
stos
xchg
fucomi
add
cmp
inc
xor
pushf
adcb
aam
mov
add
xchg
mov
insl
xchg
sbb
xor
cld
ja
lock
xchg
daa
decl
and
and
daa
lock
add
test
pop
loop
call
jno
mov
in
jecxz
cli
cmp
sarb
xchg
mov
faddp
movsb
daa
or
jg
sub
into
call
mov
and
ss
cltd
jbe
pop
clc
mov
inc
mov
push
ret
and
outsb
out
mov
subl
dec
mov
pop
repnz
and
ljmp
jp
or
lahf
popf
es
les
sahf
adc
in
lret
aaa
sti
cmp
ret
fidivl
cli
adc
and
push
sub
adcb
pop
mov
enter
pop
repnz
test
fs
cmpsl
pushf
cs
div
movsl
mov
mov
pop
es
int3
or
pop
arpl
or
jmp
es
jmp
adc
sub
pop
out
xchg
mov
pusha
out
je
daa
in
push
and
aas
cmp
mov
fisttps
btsl
divl
loop
mov
dec
xchg
pop
insl
mul
sbb
mov
sbb
mov
push
dec
xorl
jno
mov
jno
and
xchg
cmpsl
scas
mov
enter
adc
out
push
cmp
xchg
mov
xor
mov
loope
fmull
push
shll
dec
mov
pop
andb
push
inc
fsubs
sbb
xor
inc
sub
jo
fisttpl
adcl
cs
ljmp
scas
mov
inc
cmp
test
push
rclb
dec
loop
adc
bnd
hlt
popf
in
jmp
movsb
adc
dec
frndint
lahf
inc
mov
xlat
xchg
ror
pushf
cs
add
outsl
dec
insl
pop
xchg
dec
and
mov
mov
popa
in
rolb
pop
push
dec
jbe
mov
aam
in
pop
push
xor
das
xchg
lds
addr16
pop
ljmp
or
push
insl
icebp
mov
sbb
test
and
mov
pushf
and
lea
stc
ret
jg
xor
lahf
das
cld
and
dec
jmp
sub
mov
mov
cld
mov
mov
xor
xor
mov
push
cwtl
jbe
jb
out
mov
jle
sbb
mov
ljmp
mov
xchg
pop
adc
les
mov
and
adcb
xor
mov
aam
adc
ret
mov
add
or
scas
data16
outsb
idivl
das
data16
rcl
fdivs
ss
subl
pop
pop
mov
sub
push
push
aaa
inc
mov
xor
mov
mulb
ja
mov
mov
ret
pusha
cli
mov
sub
imul
bound
inc
mov
xchg
adc
fimull
aas
jge
mov
lcall
sbb
push
sub
sahf
xor
push
insb
jge
mov
loopne
xchg
pop
sbb
xchg
dec
adc
pop
dec
mov
mov
jno,pn
xchg
adc
push
loope
cwtl
jmp
notl
push
inc
jo
sahf
pop
dec
push
adc
loop
orb
mov
imul
mov
pop
cltd
adc
cmp
out
cmp
cmpsl
shlb
call
ret
lcall
fisttpl
je
and
and
xor
iret
shll
lcall
jnp
mov
leave
adc
imul
sbb
daa
int
mov
xor
jmp
inc
test
mov
adc
aas
xor
test
xor
movsl
jo
add
in
insl
inc
outsb
stos
mov
xor
dec
call
shll
push
adc
mov
ljmp
out
scas
sbb
aam
push
jl
add
mov
adc
inc
jmp
adc
mov
in
adc
jge
sub
arpl
mov
inc
dec
lret
lahf
inc
or
jecxz
push
cmp
inc
and
aam
jno
mov
cwtl
dec
rcll
mov
test
push
jge
mov
xor
roll
repz
pop
add
loopne
or
pop
orb
ret
test
insl
inc
pop
sbb
xchg
and
sub
notb
push
aaa
and
mov
sub
pop
test
dec
std
add
xchg
aam
sar
xor
fldenv
out
push
test
insl
xchg
jmp
leave
clc
out
in
insb
out
adc
lock
inc
push
int
imul
dec
and
adc
jp
xor
mov
sbb
push
dec
lret
aas
jno
xor
push
push
daa
int3
inc
pop
addr16
roll
xchg
or
dec
inc
inc
mov
je
adc
sti
sbb
movsb
mov
dec
jno
adc
mov
fcmovb
clc
push
inc
jno
repnz
lret
popf
fistpl
sbb
adc
imul
pusha
push
xlat
jge
lock
mov
hlt
cmp
sti
sti
stc
roll
add
mov
shlb
adcl
in
push
dec
clc
adc
cmp
call
sbb
push
std
lret
dec
jmp
inc
xchg
rolb
mov
iret
mov
cmp
mov
xchg
sbb
rolb
cmp
or
inc
int3
xor
adc
xchg
popa
push
add
push
shlb
ficoml
sub
adc
jne
mov
and
or
cmpsb
mov
out
jmp
mov
adc
les
xchg
adc
add
aam
dec
fsub
jmp
in
lea
xchg
pop
pop
repnz
imul
hlt
mov
xchg
out
pusha
clc
jne
mov
test
icebp
out
pop
push
les
push
mov
jp
cmp
add
jbe
add
xor
pop
jp
jo
imul
repnz
insl
clc
icebp
jnp
dec
cmpsl
jno
movsl
insl
testb
fwait
or
sbbl
sbb
outsl
xor
adc
sbb
xchg
lcall
iret
dec
xchg
test
mov
shlb
pushl
xor
inc
or
adc
add
enter
lahf
jg
and
sbb
cmp
mov
out
lret
and
adc
in
daa
fdivrl
stos
mov
inc
adc
hlt
mov
stos
jecxz
repnz
dec
sbb
jl
and
sub
inc
shll
jns
lar
xchg
daa
addl
pop
sbb
push
addr16
and
mov
int
sbbb
subb
or
ds
popf
mov
je
jmp
push
push
sub
mov
add
jecxz
in
in
jp
rorb
iret
cmc
cmp
out
xor
or
xchg
cmpsl
jno
popf
sub
pshufw
push
mov
push
inc
add
ljmp
int3
icebp
jb
imul
sub
sbb
xchg
bound
lds
push
out
sahf
xchg
cmp
mov
xchg
mov
outsb
lods
fs
mov
or
cmp
push
mov
mov
inc
js
xchg
inc
lds
sarl
lret
out
lahf
sub
pop
std
fcoml
jb
lds
pop
xor
mov
mov
jae
mov
rorl
or
push
adc
leave
sbb
call
or
cmpsb
inc
dec
dec
add
sbb
movsl
aam
je
xchg
cmpsl
imul
pop
pushf
and
test
jge
mov
add
shl
dec
movb
mov
pop
pushf
adc
and
pop
cltd
sub
mov
call
jg
add
fcomp
mov
dec
sub
add
add
mov
pop
rorb
jle
popa
cmp
fnsave
cmp
and
jae
cmp
dec
gs
je
xchg
pop
fwait
mov
rcll
mov
xchg
setae
into
dec
mov
push
cs
cmp
imul
adc
xor
dec
in
lods
push
jbe
testl
cltd
negb
jnp
mov
into
xchg
push
adc
jno
xchg
aad
out
je
stc
mov
in
int
arpl
inc
cmp
sbb
js
repnz
jl
cmp
out
xchg
arpl
adc
and
jecxz
sbb
fildll
jmp
mov
push
mov
das
sbb
iret
test
lcall
mov
cmp
push
jo
pop
fwait
shrb
mov
pusha
hlt
adc
jne
cmp
sbb
jp
icebp
pop
int
push
mov
or
dec
cvtps2pd
cmp
add
addr16
test
fidivrs
out
push
mov
pop
fcoml
out
int
mov
or
xor
push
arpl
nop
mov
xlat
jns
lock
les
out
js
inc
or
mov
sub
enter
sbb
mov
arpl
shll
mov
aas
dec
pusha
sub
test
pop
into
cwtl
rol
movsl
push
dec
insl
and
cs
push
sti
add
lods
shll
aam
mov
cmp
push
imul
inc
in
cmp
stos
pop
cmpsb
ljmp
pop
pop
nop
jecxz
shlb
push
dec
shr
adc
or
jge
push
sarl
push
int
or
aaa
and
lods
fwait
bound
lea
sub
aad
xlat
loop
mov
sub
xlat
xchg
sbbl
sbb
pop
out
sub
push
cmp
nop
jmp
mov
cmp
aam
cltd
mov
mov
fmuls
mov
popa
adc
subl
test
xlat
je
xchg
dec
cmp
jle
fmuls
push
call
adc
mov
addb
int
shlb
jae
inc
cmp
inc
loopne
iret
rcl
aad
in
xchg
mov
in
cmp
stos
inc
xor
xchg
sub
push
ss
popa
pop
data16
dec
sti
inc
ja
xchg
call
enter
xchg
fs
mov
mov
dec
pop
loopne
gs
lods
mov
outsb
push
in
outsl
and
or
call
sub
inc
inc
ss
sbb
pop
lret
add
mov
jae
insl
pop
test
cmp
xchg
mov
pop
jle
out
ljmp
mov
subl
sbb
mov
mov
lret
jb
leave
outsb
aaa
loope
outsb
enter
mov
mov
pop
cmp
arpl
mov
dec
bound
mov
dec
mov
call
or
movlps
hlt
jp
rcr
sbb
pop
clc
jo
push
lcall
mov
adc
arpl
xor
push
push
cmc
pop
adc
lds
cli
ficomps
int
outsb
mov
sti
cli
mov
les
fimull
xor
mov
add
loopne
and
movsl
and
aaa
in
sub
push
adc
cmpsb
mov
xchg
mov
out
rorl
sub
jg
mov
sub
push
sbb
sub
pop
in
lock
xlat
xchg
fldt
sbb
xor
movsb
pop
pop
sub
in
call
pop
cmp
mov
loopne
icebp
mov
mov
shrl
jp
aaa
pop
jno
loope
in
imul
adc
shl
mov
pusha
rcrl
xor
or
in
sub
dec
out
ja
mov
repnz
push
aas
loopne
adc
inc
adc
and
and
mov
nop
les
scas
cs
sub
fdivl
mov
pop
cwtl
in
lea
adc
inc
push
inc
pop
cmp
or
push
and
inc
aaa
inc
cmp
insl
dec
ja
xchg
insl
jne
ret
test
sbb
push
and
mov
mulb
out
mov
jmp
push
ror
mov
lods
cmpsl
xchg
sub
pop
adc
cmp
decl
imul
adcl
subl
inc
push
stos
mov
mov
mov
popf
cmpsb
faddp
stos
cli
push
jo
sbb
imul
repz
js
stos
in
mov
insl
pop
stos
push
xorb
mov
mov
aaa
in
jbe
fmull
mov
cmpsl
adc
flds
neg
or
fwait
pop
movsl
ficoml
cmp
cwtl
xchg
xchg
cmp
pushl
inc
ret
pop
xor
mov
lret
xor
sbb
movsl
fwait
dec
lods
push
fcoml
ret
imul
push
fstl
lods
jg
jno
fmul
les
fldt
cmpb
out
sub
lods
pop
jmp
fistpl
pop
jns
adc
fidivl
ss
mov
cwtl
dec
aaa
jnp
aaa
adc
arpl
bound
jo
mov
dec
scas
adc
ret
and
lods
xor
es
cli
mov
jne
std
test
and
stc
cmp
cmp
sub
arpl
pushf
mov
jl
es
rorb
xor
fcomip
dec
inc
out
repnz
pop
mov
popa
andb
dec
imul
out
test
mov
cli
xchg
repnz
mov
repz
add
sub
push
iret
leave
and
icebp
xchg
rorb
mov
push
push
adc
jl
jp
dec
out
in
ja
scas
sbb
je
neg
xchg
or
dec
xchg
stos
mov
out
shll
sub
cld
sbb
icebp
adc
mov
mov
cld
push
push
pop
mov
dec
mov
sub
jb
xchg
data16
ds
dec
rolb
jns
es
adc
dec
fnstenv
add
fsts
xchg
sub
int
inc
aaa
push
or
in
jns
stos
enter
das
mov
xorb
jnp
je
ja
arpl
inc
jne
sub
add
xor
dec
inc
mov
jmp
add
in
inc
or
test
mov
fnstsw
push
or
scas
and
test
add
or
test
js
xchg
int3
loopne
mov
adc
in
mov
mov
sbb
nop
fwait
dec
cmp
push
mov
out
mov
lods
or
mov
bnd
cmpsl
mov
cmpl
or
rorb
lret
push
lahf
aas
lret
fwait
jmp
mov
andl
xchg
imul
fs
mov
inc
push
ret
pop
pop
repnz
outsl
orl
mov
pop
mov
sti
leave
enter
pop
in
out
lcall
or
out
in
in
mov
mov
sbb
xor
in
pop
mov
mov
and
sbb
call
mov
sub
mov
mov
adc
mov
test
es
inc
xchg
xor
mov
leave
and
int3
int3
pop
xchg
enter
or
aas
dec
sbb
sub
cltd
out
imul
outsb
mov
push
mov
add
jnp
xchg
pop
cmp
call
icebp
jecxz
mov
je
sub
push
dec
mov
cmp
pop
inc
clc
dec
pop
jle
pop
mov
sbb
jns
adc
lods
testl
ret
add
es
rcrl
and
adc
xchg
lret
es
stos
out
pop
dec
jae
add
ja
mov
or
repz
orb
inc
pop
and
rcl
icebp
xchg
cmp
xchg
ds
mov
cmp
and
xor
sbb
sub
int
or
add
outsl
mov
jle
fdivrs
daa
in
fiadds
hlt
inc
movsb
dec
imul
jmp
jns
xchg
gs
stos
hlt
and
iret
adc
pop
ljmp
into
cld
xchg
jecxz
lret
cs
dec
fcoms
mov
pop
cli
arpl
jo
or
sbb
jo
sbb
mov
mov
fldenv
mov
jnp
orl
out
mov
push
stos
inc
pop
ja
xlat
mov
daa
jbe
jle
fildl
aas
imul
or
add
cmp
lahf
inc
add
mov
sub
inc
xor
adc
or
ret
push
mov
popf
dec
fwait
lahf
and
rcr
push
mov
or
xchg
mov
add
and
arpl
incl
data16
cld
std
pop
insb
lea
adc
insl
jo
mov
jae
gs
lret
jbe
sbb
stos
push
push
out
test
and
dec
test
imul
test
mov
popf
insb
ret
add
lahf
js
mov
jl
xchg
imul
dec
fsubp
fdivs
rol
mov
sti
sub
pop
inc
and
xor
mull
ds
popf
faddp
sub
pop
dec
mov
arpl
mov
pop
push
into
pop
call
inc
lods
cmp
pop
movsb
and
out
xchg
xchg
push
push
lret
aam
mov
xchg
test
mov
sbb
xor
xor
and
dec
dec
or
aad
pop
aam
cs
mov
loope
sub
mov
adc
push
lcall
pop
ret
test
jmp
xlat
jp
push
scas
scas
mov
ss
sbb
xor
or
and
or
xchg
jp
andb
call
into
sbb
and
fwait
loope
jo
call
add
mov
mov
jo
cs
and
dec
ja
pop
in
xchg
mov
loope
pushf
int3
pop
cmpsb
mov
ret
inc
in
add
clc
push
lods
sbb
or
sahf
adc
dec
mov
sub
and
mov
iret
ja
cwtl
dec
in
or
lea
jge
jle
in
xchg
sbb
imul
sub
aaa
ja,pn
std
xchg
das
jle
fnstsw
stc
imulb
rclb
pop
shlb
enter
fsub
or
jns
push
adc
testb
mov
xchg
addb
add
lcall
popa
push
push
int
movsl
leave
sbb
adc
cltd
xchg
xchg
mov
rcrb
mov
add
pop
cmc
dec
rorb
adc
xor
jl
cld
mov
aam
jg
ficoms
push
or
xchg
or
sbb
inc
mov
bound
je
inc
insb
sti
pusha
in
push
or
aaa
fmull
sti
dec
adc
les
fnsave
xor
out
inc
jbe
xchg
and
mov
icebp
add
mov
mov
adc
lds
js
xchg
push
push
jl
stos
dec
dec
cs
xchg
jb
cwtl
sub
cmp
outsb
pop
icebp
or
or
xor
add
in
inc
jb
adc
xlat
lods
dec
xorl
push
ljmp
inc
pushf
push
call
adcb
loope
cmp
mov
stc
lret
jg
dec
and
sbb
daa
sbbl
dec
push
leave
mov
popf
inc
into
aam
popw
cmp
les
pop
mov
lret
mov
jnp
inc
movsb
xor
repz
lret
lds
mov
mov
push
loope
mov
out
add
and
lahf
sbbb
popf
fst
leave
pop
sub
rclb
mov
mov
push
aas
daa
pop
or
scas
aas
mov
dec
or
clc
ss
or
pop
cmp
out
js
mov
sub
lahf
dec
adc
and
add
lea
sub
mov
and
scas
and
mov
mov
xor
lods
push
xor
mov
frstor
dec
jecxz
test
sbb
lahf
clc
fildll
xchg
mov
push
arpl
jns
cwtl
inc
xchg
sub
mov
pop
in
jno
xor
sub
aas
ljmp
pop
sbb
std
test
je
bound
test
jl
mov
aam
popa
pop
sub
cmp
push
add
sbb
fildll
cmc
or
jmp
inc
pop
cld
mov
mov
je
mov
cld
in
repz
xchg
sbb
sarb
lret
aam
xor
adc
movsl
jns
and
movsl
insl
xchg
cwtl
sbb
hlt
jns
mov
jmp
dec
push
pop
push
jl
adcl
lds
xchg
sbb
lods
cmpsl
hlt
movsb
mov
xor
mov
dec
aam
fisubs
sti
jb
xor
inc
jb
mov
add
shrl
xchg
mov
in
push
mov
movsl
adc
mov
negl
xchg
pop
cld
insl
insl
fldt
mov
adc
loop
jmp
and
add
rorl
cwtl
mov
xchg
out
es
jecxz
lret
dec
rcrl
dec
lea
and
and
fwait
cmp
mov
dec
loopne
dec
lock
ljmp
inc
sub
mov
call
cmp
jmp
dec
sub
repz
add
inc
sahf
and
mov
rcrb
push
scas
dec
dec
xor
pop
pop
and
or
cmp
xor
faddl
dec
dec
fdivrl
cmpsl
inc
sub
cmp
fdivrp
sti
mov
pop
gs
add
lahf
ror
push
sarl
sub
jno
ficoms
loope
sub
mov
enter
jb
add
mov
sub
mov
sysret
imull
mov
mov
inc
xchg
shlb
das
cli
dec
xor
pop
in
push
cwtl
gs
call
cmpsl
cmp
aas
inc
pop
or
lods
rcl
clc
lods
cmp
nopl
sbb
push
cltd
fs
cmp
or
jmp
call
icebp
pop
xlat
out
mov
or
add
push
shlb
imul
sti
sub
insb
repnz
and
inc
and
pop
dec
cmp
lcall
fiaddl
add
lods
mov
push
outsb
int3
and
jl
sbb
lea
and
mov
rcr
in
cmp
rolb
or
mov
sbb
cltd
push
jae
cmc
cmp
popa
mov
popf
jo
jnp
popa
mov
arpl
ret
fiaddl
push
push
cmp
or
mov
js
mov
je
jmp
mov
and
andb
xchg
adcb
lcall
xor
dec
arpl
jg
push
adc
pop
sub
push
jmp
leave
mov
dec
lret
ficompl
leave
arpl
ljmp
pop
pop
pop
leave
rcrb
dec
xor
pop
lock
dec
inc
mov
mov
xchg
fwait
es
push
shll
scas
mov
cmc
mov
or
sbb
movsb
xor
lds
std
inc
add
cwtl
xor
xor
shlb
cmp
data16
push
or
push
xor
or
into
pop
icebp
imul
sbb
ss
ja
push
fwait
pushf
or
je
addr16
adc
jg
cmpsb
cmpsl
repz
jnp
add
jecxz
cmp
add
push
hlt
lock
cmp
mov
sub
push
push
in
inc
mov
xchg
daa
xchg
mov
mov
stos
frstor
clc
mov
xor
mov
inc
mov
arpl
mov
sbb
xchg
cmpb
cmp
xor
leave
mov
inc
pusha
cmp
paddsw
mov
mov
inc
mov
cltd
das
dec
fmuls
fwait
mov
popf
mov
divb
test
out
or
adc
imul
adc
mov
shlb
jge,pn
icebp
in
mov
xchg
sahf
icebp
push
ret
cltd
xor
sbb
mov
aas
mov
fs
pushf
cltd
add
xchg
cmp
adc
adc
dec
loop
mov
push
or
mov
add
mov
inc
fwait
test
mov
lds
adc
push
loop
jno
jge
adc
mov
cmp
xchg
cmp
mov
hlt
dec
enter
cmp
push
mov
mov
xor
sbb
xchg
lret
push
outsb
sahf
repz
out
cmpsb
cmp
mov
pusha
test
ja
mov
popa
test
outsl
pop
mov
sbb
push
add
jns
adc
pop
insb
push
sbb
cltd
xchg
and
inc
mov
xchg
test
sbb
jo
in
push
pusha
xchg
jmp
push
jmp
and
daa
fwait
imul
dec
pusha
out
xchg
jo
lock
xchg
aad
mov
add
jg
xor
adc
mov
mov
int
and
adc
pusha
scas
jmp
nop
or
xchg
mov
inc
mov
cwtl
hlt
aaa
sbb
cmp
insl
fcmovnbe
jae
push
sub
jp
xor
ret
mov
sbb
outsb
cs
idiv
mov
loop
fdivrs
add
cmpl
mov
push
xchg
jmp
push
adc
hlt
jne
jp
shl
mov
mov
fimuls
faddl
adc
sbb
mov
adc
fistps
inc
pop
or
aaa
mov
jmp
mov
out
inc
repz
mov
push
push
mov
sti
cltd
dec
les
popa
jle
add
shl
inc
or
xchg
pop
push
lea
xlat
pop
into
mov
jmp
or
sub
adc
cld
cwtl
xor
inc
push
push
pop
push
dec
stos
add
sar
fwait
fwait
adc
rcl
jmp
or
pop
cmp
popa
mov
das
or
repnz
sbb
test
scas
out
lea
adc
fistl
insl
push
idivb
and
icebp
sbb
rcrb
mov
sahf
shll
lret
sbb
inc
into
mov
mov
pusha
and
inc
out
xor
xor
jae
movsl
shll
and
adc
ja
add
or
xor
test
xchg
pop
pop
pop
mov
ret
ljmp
ja
orb
addl
sub
das
es
scas
mov
cmp
xchg
pop
fadd
pop
sbb
xor
insb
jg
insl
adc
movsl
aam
mov
ds
out
enter
into
jmp
nop
lods
xchg
pop
or
add
repnz
scas
scas
sub
sti
cltd
idivl
push
gs
ret
scas
push
shrb
mov
and
inc
lods
and
jnp
and
mov
sbb
dec
inc
bound
sub
les
mov
jge
sahf
mov
loop
sbb
icebp
insl
aaa
stos
mov
popf
repnz
dec
xchg
adc
cmp
fstpt
pop
nop
or
or
cmp
rcl
fdivl
jns
and
xchg
jno
jp
add
fxch
roll
fistps
push
fs
inc
push
je
xor
jnp
lds
sti
xchg
dec
pop
jnp
scas
xchg
and
test
cmp
rcrl
or
es
push
and
add
pop
mov
loopne
jle
inc
mov
inc
add
fwait
sub
out
jl
loop
fucomp
loopnew
adc
add
mov
jne
inc
jle
mov
mov
xchg
out
popf
sbb
jnp
add
and
cmp
cmp
aad
and
jge
pop
sbb
or
mov
cmpsb
pop
out
in
iret
mov
fs
out
outsb
pop
iret
fisubrl
in
aam
xchg
lret
cli
stc
test
sarb
sbb
sub
or
xchg
sub
fwait
enter
xor
xor
sub
jbe
cwtl
test
stos
cltd
jg
pusha
jge
enter
cli
in
nop
dec
int
lret
test
das
push
adc
fsubs
insl
out
jo
je
popa
jb
jbe
xchg
lea
popf
jb
dec
xor
mov
out
popf
push
push
in
dec
add
leave
jle
les
mov
imul
push
repnz
scas
mov
or
pop
jge
pop
mov
out
stos
stos
sbb
jmp
rclb
push
push
mov
pop
cmp
loopne
sbb
in
out
fsts
or
test
jne
or
xor
jg
repnz
push
or
cli
push
lods
jl
divb
insb
dec
xor
mov
pop
mov
push
ljmp
xor
ret
shll
ficompl
add
popa
lods
lods
mov
pop
mov
cs
or
mov
pop
scas
inc
push
mov
jbe
hlt
xor
inc
inc
sbb
ljmp
cld
lret
mov
push
stos
jp
lock
cmc
sub
sbb
pop
sub
orb
sub
shlb
ss
jg
xor
std
jbe
mov
gs
or
adc
loop
aad
xchg
xchg
adc
cmp
xchg
jno
enter
das
inc
stc
mov
repnz
xlat
mov
sar
jp
adc
cmpl
pop
addl
jo
xchg
pop
xchg
mov
lock
cmp
and
mov
loop
xchg
jo
jge
ljmp
and
inc
popa
repz
mov
pop
jecxz
lret
and
out
and
repz
cs
test
popf
jl
jbe
dec
je
fs
fisttpl
adc
or
mov
xchg
inc
pop
xchg
cmp
mov
iret
fisubrs
push
mov
push
dec
imul
lock
jbe
cmp
xchg
data16
stc
testl
push
xor
cmp
or
fistpll
in
push
pop
js
xor
ss
lods
dec
cmp
ret
and
push
cmp
loop
daa
jge
test
pop
andl
push
popa
insb
mov
fcoms
aas
lds
sub
stc
in
aad
data16
push
mov
pop
push
fstp
cmp
loop
lcall
mov
pop
fisubrl
pop
add
adc
cli
push
repnz
and
sbb
xchg
test
aad
ud1
not
jns
add
loopne
fbstp
dec
test
inc
add
xchg
test
xor
xchg
or
lret
cmp
adc
jnp
jbe
out
mov
shlb
inc
cld
mov
jl,pt
jo
jb
xor
pop
jae
dec
ror
dec
xchg
push
mov
and
std
add
pushf
rcll
cmp
mov
pop
mov
icebp
pop
mov
and
cmpsb
lret
rolb
jns
loop
sub
adc
addr16
sub
sbb
sub
xchg
push
out
or
in
inc
mov
pop
aaa
lcall
pop
xchg
cmp
gs
push
arpl
idivl
jge
inc
int
mov
insl
push
push
mov
jb
out
call
cs
dec
rolb
ret
mov
mov
std
xor
mov
and
aas
ss
outsb
loop
in
enter
bound
rol
ss
flds
sbb
mov
in
fwait
jge
inc
or
push
inc
lods
cwtl
mov
push
lahf
out
mov
sub
dec
push
pop
xor
xchg
sub
outsl
ds
cmp
cmp
xchg
fcomps
in
add
dec
cltd
add
loope
lret
loope
xchg
outsb
mov
cs
aam
xor
push
cmpsb
sar
lea
mov
xchg
lea
out
cmp
mov
mov
repnz
ror
sbb
ljmp
ljmp
xchg
mov
xor
arpl
das
ljmp
call
jbe
std
lahf
frndint
in
push
mov
pop
xchg
shr
adc
fwait
dec
pop
sbb
stc
imul
xchg
lret
out
jp
jne
stos
mov
insl
push
std
mov
add
mov
loopne
in
cmp
pop
dec
push
inc
imul
mov
clc
out
std
fwait
dec
push
mov
into
rclb
inc
addb
pop
test
jae
insb
add
insl
add
je
dec
jecxz
mov
pop
add
int3
es
mov
sbb
jl
mov
add
les
push
hlt
int
hlt
jl
push
imul
sahf
in
outsb
rcrl
imul
stc
cmp
roll
lds
sub
ds
add
imul
faddl
push
or
mov
sbb
mov
mov
std
ret
out
or
push
ds
std
fmulp
aad
test
inc
in
cld
test
aam
cmp
das
mov
push
add
sti
movsl
xor
adc
sti
int
xchg
xor
in
fadds
xchg
xchg
aaa
mov
mov
adc
imul
hlt
pop
add
or
jl
mov
mov
ret
mulb
add
in
dec
cmpb
mov
ds
lret
add
sbb
sbb
test
push
dec
rcr
loop
or
paddb
ret
fwait
loopne
mov
xchg
cld
loop
add
icebp
xor
sub
test
xor
test
lea
out
and
sbb
mov
cmp
sub
call
fcompl
adcb
mov
jns
int
mov
fsub
mov
xchg
loopne
roll
jl
add
loopne
jae
loopne
jle
and
cmpsb
fdivl
jp
adc
jns
imul
aas
add
mov
jle
aam
aas
in
sub
sbb
shlb
lock
mov
dec
pushf
int3
mov
mov
test
shll
dec
lds
out
icebp
add
sub
xchg
xchg
xor
inc
lods
aam
add
sub
loope
repz
test
jl
mov
xchg
jle
imul
inc
addr16
clc
stos
lahf
mov
cs
aam
aas
repnz
loope
mov
push
push
xor
inc
int3
loope
aas
movsl
dec
mov
daa
ficoml
pop
jp
mov
dec
es
fimull
xchg
xor
jns
adc
repz
dec
pop
aad
cmp
sti
aam
add
sub
inc
ss
xchg
jecxz
pop
gs
mov
sub
shl
bswap
jns
inc
mov
dec
xchg
xor
fs
pop
sbb
lret
shl
pop
adc
mov
pshufw
dec
push
adc
sbb
addr16
or
pop
add
sbb
dec
bound
shll
mov
stos
add
jecxz
sub
rol
xchg
and
inc
loope
cwtl
push
test
roll
jnp
dec
leave
or
pop
cmp
sub
lock
or
add
bound
cmc
gs
mov
xchg
popf
mov
pop
or
mov
inc
pop
add
addr16
repz
fisttpl
ret
adc
push
movsb
mov
jnp
adc
mov
aad
cmpb
pop
movsb
repnz
xchg
xor
cwtl
sti
das
push
pop
jge
lret
lods
jle
push
movsl
sub
push
push
cmp
leave
bnd
mov
mov
cmp
mov
cmp
rep
inc
pushf
ljmp
push
push
in
in
out
mov
pop
jmp
lcall
add
push
roll
sahf
rcrl
pop
jb
adc
faddp
stos
push
fscale
push
xchg
xor
cwtl
les
sub
adc
jecxz
fs
pop
rorb
cs
jnp
sbb
sbb
std
inc
hlt
mov
nop
hlt
cmp
xor
xchg
adc
insb
dec
gs
jb
outsb
dec
mov
pop
test
movsb
lods
out
mov
add
adcb
mov
push
les
jle
jbe
mov
lock
sub
xor
das
mov
push
pop
adc
popf
pusha
add
scas
inc
xchg
bnd
xchg
adc
or
cs
mov
int3
add
jp
ss
cmp
fisubrl
jae
jmp
pop
mov
fsts
bound
cs
in
roll
addr16
int3
and
sub
fsqrt
sbb
or
jp
cmp
jb
mov
shrb
mov
dec
scas
pop
test
mov
loope
xchg
sarb
jbe
push
cltd
ljmp
aad
jg
mov
jbe
stc
mov
jae
mov
loopne
mov
sub
mov
enter
pop
pushf
xor
inc
sahf
xchg
fwait
xchg
repnz
gs
fmul
fcoms
inc
insl
push
mov
push
imulb
movsl
mov
xchg
jge
and
inc
lods
cmpsb
jp
fucomp
in
fucomip
adc
push
xor
bnd
cmp
das
push
jo
and
sbb
clc
cmp
pop
and
movsl
in
inc
js
ret
adc
es
loope
mov
mov
mov
push
sti
int3
pavgb
dec
inc
cmpsl
outsb
rolb
sbb
fwait
mov
cmpsl
insl
lret
jcxz
scas
cmp
or
lods
notl
daa
cmp
xchg
popf
imul
adc
loopne
sub
ljmp
pop
popa
jae
leave
jbe
int
push
inc
xorl
jg
adc
adc
clc
sub
test
add
pop
lcall
jmp
das
imul
in
mov
xor
push
outsl
add
or
xchg
adc
jmp
loope
andb
fidivrl
mov
adc
sbb
dec
lret
pop
or
stos
rclb
inc
jle
push
pop
pop
into
fisubrs
push
fidivrl
adc
movl
int3
pop
add
enter
mov
mov
rol
pop
cmp
nop
pop
loope
push
adc
test
sti
aad
and
xchg
adc
insb
sub
cmpsl
jno
jns
iret
mov
mov
lock
push
xor
in
cmp
fwait
mov
jb
pop
cmc
call
setl
jb
cmp
sbb
sub
xor
push
cld
ror
pop
stos
sub
push
lods
push
cwtl
xchg
fs
push
xor
pop
mov
roll
mov
cld
je
jae
xchg
ret
sbb
xor
dec
iret
xchg
orb
push
xchg
imul
mov
mov
jns
jmp
adc
xchg
and
into
outsl
hlt
pop
subb
ds
xor
js
sub
addr16
aaa
fisubl
out
fmull
popf
fwait
mov
push
popl
add
mov
add
in
insb
push
ret
xor
mov
jnp
and
jae
imul
loop
pop
ss
cmp
mov
sbb
mov
lods
popf
mov
sub
adc
lcall
mov
mov
fs
adc
adc
sub
mov
xor
test
xchg
rclb
mov
xor
clc
rcrb
out
je
or
push
call
into
or
inc
inc
int3
adc
cmp
addl
iret
cmpsb
fs
adc
inc
push
xchg
lds
std
jbe
imul
cmp
mov
imul
js
mov
cmp
or
lahf
xchg
push
movsl
xchg
lock
sub
mov
enter
push
xor
in
jnp
pop
pop
xor
ffree
jmp
jmp
das
and
adc
push
push
cmp
out
enter
incb
pop
lret
and
pop
cmpsb
fsub
ds
scas
dec
pop
cs
iret
xor
dec
lcall
shlb
jp
loopne
pop
mov
movsb
inc
jg
stos
cmp
jbe
lahf
fnstenv
int3
mov
push
cld
cmp
out
sub
stos
mov
mov
pusha
lds
call
lret
scas
call
mov
add
das
scas
insl
mov
lret
mov
xchg
aas
mov
mov
cwtl
dec
imul
cli
sub
cmpsb
fdivl
insl
pop
and
sbb
and
fwait
jno
mov
out
into
add
xor
push
adc
xor
xchg
jns
fisubs
xor
sbb
movsl
xchg
rcll
jno
xchg
xchg
imul
aas
pop
mov
jecxz
stos
push
or
lds
aaa
stc
movsb
pop
mov
or
cld
rorl
gs
and
das
sbb
sub
test
rcrb
mov
sub
xchg
faddp
dec
lahf
adc
mov
adc
movsb
pop
dec
mov
inc
lcall
cmc
mov
cmc
pushl
fwait
mov
mov
fwait
stos
jb
into
add
aad
test
gs
fiaddl
pushw
lds
xor
push
adc
into
leave
iret
addr16
mov
cmc
aam
int3
push
mov
ss
sbb
fistpll
pushf
fildll
mov
inc
scas
inc
popa
ret
xchg
lahf
xchg
in
sbb
and
xchg
pop
repz
fsubrs
mov
imul
shlb
arpl
test
cwtl
sub
aam
xchg
mov
cmp
outsl
mov
inc
mov
daa
adc
mov
sub
mov
lret
fs
out
lods
mov
loop
fdivs
mov
stc
add
bound
pop
pop
dec
out
add
mov
mov
sbb
scas
push
shl
movsb
loope
pand
cmpsl
and
mov
imul
jmp
and
out
fnsetpm(287
jbe
cli
out
daa
adc
or
mov
rorb
lods
shrl
call
dec
rcll
flds
xchg
outsb
lods
in
xor
int3
fwait
popa
insb
lret
inc
inc
fbstp
push
dec
adc
push
push
xchg
test
dec
popa
or
cmc
pop
stos
lods
gs
cmpsl
shl
pop
and
pushf
jg
sti
fcmove
dec
sbb
push
bnd
xchg
test
mov
jbe
dec
jg,pt
xchg
jnp
imul
mov
dec
aad
xor
pop
pop
fistpll
or
mov
dec
add
in
xor
xchg
aad
ret
dec
jge
fists
xchg
jmp
push
mov
inc
push
fisttpl
testl
cmp
or
cmpsb
int3
int
mov
lods
mov
dec
nop
in
and
andb
cmpl
jo
lret
cmp
sub
or
lahf
inc
ss
iret
movl
xor
xchg
lods
pop
pusha
cmp
lret
rclb
bound
sbb
call
jae
stos
jmp
lahf
dec
jp
push
mov
sbbb
pusha
mov
cld
inc
push
cmpsl
in
repnz
jmp
add
add
test
jl
sbb
mov
mov
and
or
mov
push
push
daa
lods
insl
adc
andnps
call
test
xchg
popa
pop
je
push
xor
dec
cmp
mov
and
mov
subl
mov
imul
jge
das
sbb
lods
dec
lret
dec
popa
inc
cltd
adc
xchg
push
roll
mov
sbb
jg
mov
adc
cld
pusha
fdivrs
andl
jmp
xchg
push
jns
dec
mov
jns
sahf
hlt
sub
cmp
sub
xor
imul
and
pusha
dec
add
jno
outsl
movsb
xchg
adc
cmpsb
stos
xchg
pop
mov
icebp
adc
gs
cmp
inc
icebp
mov
arpl
inc
and
ret
sub
cmp
mov
into
popf
xor
adc
daa
mov
mov
pop
cmp
in
sahf
dec
insl
dec
scas
xor
jmp
test
inc
jle
fwait
jecxz
ffree
xor
cmp
rol
ja
mov
inc
in
xorb
rcll
clc
testl
hlt
cmp
jp
aam
push
or
aam
fwait
push
lahf
lods
or
incl
cmp
sbb
xor
das
xchg
push
add
mov
sub
loopne,pn
and
add
mov
xchg
idivb
inc
aas
test
and
adc
das
mov
repz
jns
pop
and
test
xchg
rcll
jecxz
cmp
lret
push
roll
push
je
push
sti
xor
jne
sbb
les
sti
mov
or
push
in
xchg
stos
out
xor
mov
ss
jnp
sub
sbb
fldl
scas
sub
popf
mov
and
push
pop
jmp
mov
cmp
ds
lret
out
jecxz
ss
fidivs
sub
push
rolb
mov
and
push
iret
ljmp
stc
lods
cs
cltd
mov
out
pop
dec
fsubrs
repnz
mov
scas
add
lcall
and
xchg
add
movsl
and
sarb
pop
xor
push
sbb
fimull
addr16
loope
in
inc
cltd
push
sub
call
and
out
and
push
mov
decb
insl
add
lods
cmpsb
loopne
stc
jne
push
mov
sub
push
lea
lds
xor
sub
push
jns
cmpsl
sbb
or
cld
arpl
push
add
cwtl
pop
cmp
xchg
mov
jecxz
mov
lock
mov
inc
pop
jecxz
in
out
pop
int
jecxz
enter
mov
adc
inc
pop
in
mov
cmp
cld
lods
mov
cltd
dec
push
das
jb
insb
adc
push
enter
mov
push
jne
lcall
setle
xchg
jecxz
ret
dec
loopne
int3
jg
adc
and
adc
lahf
xchg
filds
jnp
int3
je
dec
aad
lsl
mov
pushf
sti
aaa
fstpt
cmp
add
or
and
out
es
xlat
sbb
mov
add
cmp
sub
mov
int3
dec
pop
lods
shrb
rolb
faddl
in
mov
int3
sbb
fnsave
lods
sar
mov
pop
push
dec
mov
and
sub
scas
addr16
xor
test
cltd
rcl
or
daa
int
inc
mov
mov
mov
dec
jle
fiaddl
ret
stos
mov
fiaddl
stc
pushf
cmpsb
xchg
adc
dec
shlb
add
cmpsl
mov
cmp
jg
lcall
and
mov
movsl
in
ret
xor
lock
mov
jecxz
testb
inc
dec
fiadds
scas
enter
mov
pop
xor
lock
pop
sbbl
roll
mov
pop
pop
loope
int3
adc
in
push
adc
pushf
test
imul
lods
inc
jnp
int
sbb
sub
int
ss
cld
pop
icebp
xor
ror
adc
idiv
rorl
clc
jne
ret
aaa
sbb
adc
iret
add
add
scas
pop
pop
into
cmp
gs
jmp
movsl
sbbl
cli
inc
mov
mov
cmp
nop
jg
in
icebp
and
into
fistl
push
rolb
push
sub
dec
lds
or
ja
mov
fidivl
lcall
cwtl
fldl
adc
jecxz
fistl
pop
paddusw
in
sub
hlt
scas
sbb
test
xchg
cli
insl
dec
mov
repnz
or
mov
mov
leave
mov
cld
js
imul
test
bswap
xchg
pusha
jnp
xchg
out
sbbb
mov
inc
enter
hlt
push
sub
out
in
test
jns
mov
hlt
out
pop
and
xor
push
int
loope
mov
mov
cwtl
jg
mov
jl
add
inc
das
xchg
or
mov
or
ja
out
mov
sbb
int3
inc
add
sbb
and
movsb
lret
insl
push
xchg
scas
sub
push
dec
jle
ret
jecxz
hlt
clc
sbb
pop
sub
out
addl
js
test
call
test
shll
cltd
xlat
sbb
dec
xor
cmp
and
xor
mov
sub
sub
sbb
insl
cmp
lret
stos
or
cwtl
jbe
int3
lods
std
movl
ret
pop
shlb
lods
and
rclb
jg
mov
pop
or
push
daa
out
adc
arpl
or
xchg
test
push
adc
push
flds
mov
mov
test
into
dec
scas
cmp
xchg
xchg
orl
lods
fsubp
cmp
or
shll
jbe
fs
adc
shll
sbb
imul
push
test
pusha
mov
jb
xchg
adc
repz
pop
lret
test
adc
loop
and
and
lcall
cmp
loopne
leave
mov
jns
adc
or
inc
and
or
sbb
stc
dec
movsl
push
cli
cmp
pop
fildll
scas
outsb
mov
add
jbe
sub
pushf
shr
sarb
adc
cmp
push
cmpsl
dec
stc
jne
icebp
ljmp
or
movsb
in
mov
xchg
adc
mov
loope
lods
leave
mov
cmp
inc
das
push
mov
inc
jle
push
fwait
imul
out
insb
cmp
sub
jne
aaa
or
and
mov
orb
hlt
mov
xor
in
mov
gs
mov
stos
jb
loope
push
pop
imul
and
jle
adcb
inc
jno
test
out
lahf
jne
mov
sub
lret
shlb
cmp
mov
dec
stc
mov
int
fcompl
icebp
les
dec
mov
mov
mov
pushf
dec
ljmp
arpl
fsubr
inc
pop
xchg
push
mov
xlat
into
adc
imul
in
mov
xchg
ficoms
xor
jb
mov
iret
pushf
inc
xchg
inc
ljmp
sbb
js
xchg
mov
aaa
push
push
les
xor
movsl
sub
aad
xchg
jl
test
pop
mov
adc
orl
test
inc
pop
pushl
mov
lcall
cmpsl
inc
dec
adc
decl
cmp
inc
pop
movsl
fcmovu
and
mov
addr16
pop
jmp
push
sbb
adcl
cs
fistpll
sub
sti
mov
dec
cmp
rcll
or
aad
das
push
sahf
fmull
inc
loope
stos
imul
adc
jecxz
push
ret
or
jne
and
ror
push
push
sub
cmpl
out
call
popa
out
ds
adc
scas
test
push
jle
lea
les
in
imul
mov
and
sub
cmpb
fwait
loope
mov
scas
out
adc
mov
sbb
leave
jle
mov
sbb
pop
out
xchg
mov
jne
rcrb
fs
and
adc
dec
daa
enter
xor
fldt
jnp
push
shlb
and
ret
mov
test
inc
sub
aam
rclb
mov
mov
cmp
inc
into
lea
dec
and
xor
xchg
bnd
or
add
cmpsb
sar
adc
int
xor
xor
shlb
int
outsb
insb
fwait
mov
shll
cs
pushf
pop
rorb
movsb
out
sub
pop
add
sti
push
xchg
sarl
scas
sbb
cli
sbb
and
push
sub
mov
inc
jmp
push
stc
mov
mov
xchg
inc
push
call
xor
cmpsb
mull
cmovnp
sub
cmp
mov
xor
mov
out
sbb
lahf
ljmp
sub
test
movsl
imul
lcall
cmp
inc
or
xchg
bound
pop
insl
sub
bound
lcall
and
mov
js
lock
cli
cmp
mov
js
in
or
fldl2e
push
adc
pop
daa
dec
cmp
sbb
xchg
push
or
mov
adc
dec
icebp
mov
test
sbb
xchg
in
sub
les
sbb
ja
inc
ds
lea
out
data16
jnp
shll
pusha
adcl
inc
cltd
int3
push
roll
mov
push
sub
xor
sbb
add
cs
das
outsl
cmp
frstor
lahf
xor
fsubrp
fcmovu
dec
and
or
adc
lea
outsl
in
arpl
notb
ret
adcb
add
mov
rol
xlat
loopne
outsb
push
sub
sahf
cmp
inc
adc
pop
mov
pop
fsubp
sbb
imul
fnsave
mull
and
xor
loop
ds
pop
mov
cli
je
adc
and
sbb
lret
icebp
xchg
pop
push
out
cmp
jne
inc
daa
repz
stos
test
bound
push
inc
xor
jge
loopne
pop
xchg
pop
enter
pop
or
in
adc
sbbl
daa
or
sub
mov
gs
out
iret
mov
mov
fs
xchg
xchg
sahf
inc
xor
push
mov
decb
add
repnz
inc
je
int3
repnz
mov
hlt
imul
push
leave
hlt
mov
pushf
data16
xorl
mov
mov
movsb
sbb
clc
lea
pop
push
push
jp
scas
inc
xchg
jno
out
inc
push
popl
add
pop
mov
popf
stos
xchg
pop
fisubl
and
mov
mov
pause
out
hlt
js
call
mov
pop
sub
out
or
popf
push
leave
imul
push
push
repz
fildl
int3
jg
and
outsl
cmpsl
icebp
mov
fwait
stc
pop
pop
xchg
adc
mov
jmp
loop
mov
push
enter
xchg
sbb
xor
lods
and
leave
lret
addr16
cmp
popl
stos
pop
sahf
and
mov
insl
insb
iret
repz
push
pop
pop
jne
jge
mov
iret
in
loopne
push
add
jmp
jbe
xchg
xlat
mov
lcall
out
mov
pop
xchg
lea
jno
shrb
sti
ljmp
loopne
int
jb
imul
mov
sbb
in
pop
push
loopne
mov
js
pop
out
or
sahf
fadd
scas
loope
pop
adc
pop
push
jle
loopne
sub
cli
das
ss
mov
xchg
adc
scas
sbb
xor
ja
into
rclb
das
sbb
and
int
ret
call
inc
inc
data16
mov
divl
int3
insb
and
mov
sbb
test
mov
cmc
pop
dec
xor
sub
and
push
jb
jae
pop
lods
cmpb
cmp
pushf
push
fs
cmpsb
scas
jae
dec
push
call
out
imul
mov
das
in
pushf
xor
push
push
xor
mov
loope
clc
out
or
mov
mov
and
mov
jle
stos
xchg
test
lds
or
out
mov
jne
sub
adc
aad
lahf
orl
pop
int3
mov
push
cwtl
gs
pop
and
inc
cmpb
ret
pop
loopne
cmp
mov
dec
inc
xlat
int3
rclb
popf
cmp
sub
pop
cmp
movsb
loope
cs
mov
cmpsl
sub
arpl
mov
push
push
test
push
push
lahf
mov
push
mov
cmpsb
hlt
out
inc
fucom
sub
xchg
pop
lock
lods
flds
fadds
cmp
cmp
test
fnstcw
pop
hlt
mulb
test
pop
cmpsb
pusha
hlt
pop
jg
test
into
cltd
cs
inc
pop
aam
ljmp
sub
adc
gs
sti
mov
test
out
dec
inc
sub
dec
jb
icebp
add
cmp
jns
movsb
mov
add
cmc
adc
mov
adc
testl
mov
test
pushf
and
int
xchg
jne
jb
mov
sti
xorl
out
mov
xchg
jp
fdiv
stos
jle
jnp
mov
dec
arpl
mov
jnp
fs
xorb
cmp
imul
lret
in
jge
push
sarl
shll
icebp
jecxz
mov
inc
nop
inc
adc
stos
adc
jmp
jg
pop
xchg
iret
movsl
push
jp
push
daa
gs
addr16
xor
adc
es
jle
inc
or
rol
mov
inc
fwait
int3
out
popa
stos
shlb
adc
sub
adc
lahf
test
ss
outsb
enter
and
enter
jge
xchg
pop
enter
je
test
stos
inc
cmp
pop
and
sarl
in
je
pusha
push
leave
adc
les
std
mov
cwtl
push
pop
mov
inc
lods
ljmp
clc
mov
addb
mov
stos
mov
or
fists
imul
push
daa
push
sub
scas
sbb
mov
push
mov
into
icebp
push
mov
add
rcrb
push
cmp
sbb
or
mov
loope
cmpsb
jns
mov
je
pop
mov
jns
adc
rorb
in
mov
cli
clc
rorl
pop
xchg
cmp
shrl
sbb
pushf
rol
icebp
sbb
mov
popa
in
push
jne
mov
dec
imul
cmpsb
ds
fistps
ss
test
arpl
sbb
and
cmpsb
xor
aas
ret
fwait
hlt
adc
pop
lret
push
es
outsl
mov
insb
mov
pusha
sbb
shrb
leave
dec
cs
jmp
push
hlt
xchg
arpl
add
mov
ds
or
insl
sbb
mov
in
leave
dec
scas
mov
push
xchg
push
sbb
aam
jg
ds
xchg
aas
jecxz
mov
aam
xor
sub
es
sahf
stos
cmpsb
rcrb
or
gs
enter
sbb
cmp
insb
fldt
add
mov
mov
les
std
adc
cwtl
divl
arpl
inc
jne
jo
xchg
lods
jne
xor
ret
aaa
mov
dec
mov
inc
out
mov
inc
movsb
push
iret
jge
jmp
lcall
jnp
and
sbb
movsl
pushf
inc
cltd
ds
std
popf
or
xor
xchg
pop
test
jl
adc
hlt
add
sub
aaa
sbb
push
shl
jnp
adc
in
pop
adc
sub
data16
stc
arpl
jmp
sbb
jo
sbbl
push
mov
in
shl
fidivs
xor
mov
sub
insb
push
mov
imul
xor
jae
dec
mov
or
les
sub
ret
fsts
pop
imul
inc
rcrl
les
pop
sub
mov
shlb
mov
shlb
sub
pop
adc
add
and
push
mov
inc
lret
addr16
ficoms
xor
lds
push
pop
xorl
and
out
test
jecxz
data16
call
pusha
cmc
movsb
add
mov
les
jecxz
imul
repz
sub
icebp
xchg
sub
int
les
in
adc
sub
mov
repnz
and
inc
xor
and
mov
pop
sub
lds
rcll
pop
push
in
insb
lods
adc
mov
cmpb
fadd
sbb
ss
test
aaa
mov
test
subb
aaa
pop
jmp
outsb
pop
sub
pop
push
mov
xlat
rol
adc
sub
data16
jne
es
jp
pusha
push
or
fidivrs
popf
pop
lea
xchg
pop
cmpsl
push
add
adc
inc
push
sub
mov
jns
in
mov
xor
fimuls
cmp
sbb
jae
mov
sbb
popf
int3
push
enter
ds
sbb
cmp
sub
mov
adc
inc
sarl
fnstsw
stc
mov
gs
out
jns
mov
shrb
push
idivl
pusha
sub
imul
adc
mov
imul
inc
sub
repz
sbb
dec
imul
out
movsl
rorb
loope
ficompl
mov
and
cmp
enter
iret
iret
sbb
clc
lods
or
dec
jne
sti
aaa
rol
pop
andl
sub
mov
cmp
out
lea
psrlq
push
cmpb
push
fwait
jge
scas
data16
rcl
jmp
fwait
push
mov
dec
mov
pop
test
or
and
mov
lret
repnz
scas
ror
les
insl
cmc
cli
cmp
pop
hlt
stos
xchg
cmpsb
fistpl
std
fistpll
add
les
xchg
jae
out
fidivrl
aam
dec
xchg
shl
mov
aas
mov
je
pop
push
xor
sbb
ficoms
repz
xor
dec
sbb
sarb
jmp
loope
xor
mov
or
pop
or
jmp
or
add
add
dec
dec
push
call
int
fldl2t
fcoml
xor
inc
sub
call
ds
stos
jno
sub
xor
mov
xchg
pop
pop
fmul
faddl
pop
imul
mov
push
push
sbb
mov
jne
jmp
mov
scas
push
sti
dec
leave
enter
pop
mov
and
repnz
lea
movsl
test
mov
pop
mov
mov
loop
icebp
adc
aam
fiaddl
and
in
lea
mov
adc
sbb
rcrl
sti
imul
out
push
gs
mov
fwait
jecxz
xchg
xchg
jnp
and
push
or
mov
jbe
scas
cld
popf
insb
and
mov
inc
imul
xlat
jno
sbb
ret
jmp
mov
xchg
in
dec
pop
ficompl
call
cmpsb
rol
push
les
lea
xchg
jno
mov
cmc
inc
mov
out
std
sbb
test
sbb
add
dec
inc
jo
mov
sub
push
sbb
mov
xor
dec
clc
and
in
shld
dec
shrb
rolb
xchg
aad
je
and
or
rcll
mov
sub
lcall
in
lods
or
pop
cld
daa
inc
arpl
lret
pop
sub
lods
mov
jnp
fwait
outsb
mov
cmp
xlat
jns
jns
push
fadds
inc
popf
add
out
out
pslld
or
test
or
mov
jns
jp
fsubrs
mov
pop
jo
loopne
mov
mov
scas
mov
adc
xchg
cmp
inc
fstps
lahf
mov
test
cli
subl
push
dec
fistpl
cmp
push
mov
test
jg
movsl
inc
dec
mov
xchg
je
jb
aas
mov
rclb
push
xchg
roll
pop
push
test
push
mov
push
fnstsw
pop
and
fnstsw
je
mov
test
into
ljmp
aas
pop
pop
sbb
mov
dec
mov
push
bsf
add
sub
outsl
bound
insb
dec
pop
xor
dec
dec
push
mov
dec
scas
mov
cmp
repz
mov
cmp
das
lods
enter
add
lcall
outsb
ficomps
xor
xchg
mov
gs
pop
test
dec
sub
fsubrl
or
into
dec
pop
in
mov
xlat
xor
mov
gs
push
and
daa
ret
rorb
dec
nop
jae
adc
aas
push
sub
es
int3
adc
jb
rcrl
jg
hlt
cwtl
sbb
lret
scas
js
xchg
in
lret
jl
bound
lret
lret
test
movsb
pop
hlt
test
inc
int3
imul
in
jns
nop
arpl
pop
sub
neg
add
movaps
popa
sarb
pushf
pop
and
cli
push
jne
fcoml
lret
in
sahf
loopne
add
jg
push
stc
push
jmp
scas
add
aaa
mov
fdivrl
pop
dec
mov
rcll
scas
pop
test
xchg
pop
pop
adc
es
dec
pop
mov
push
push
sub
xor
popa
dec
lock
fcoms
mov
imul
in
mov
cmpsl
out
push
lea
lods
push
fidivrs
mov
mov
leave
lods
fistl
pop
xor
stos
or
mov
pop
or
lods
test
outsl
xor
cmpsb
out
mov
add
dec
mov
addr16
pop
xchg
jns
xchg
pop
xor
addr16
lcall
fwait
pop
jmp
fdivp
ljmp
sub
push
movsb
and
push
in
lret
jle
test
push
inc
mulb
sbb
adc
jns
adc
insb
ret
lods
ss
push
add
xchg
iret
fwait
icebp
dec
daa
or
inc
dec
mov
mov
or
notl
adc
or
stos
shlb
mov
cs
or
dec
leave
test
addr16
aad
add
daa
pop
jbe
test
addr16
dec
and
data16
aam
lock
mov
jae
adc
inc
insl
cld
jg
ficompl
sub
adc
inc
stos
add
outsl
dec
jae
fbld
ret
aad
fmull
stos
orl
mov
and
and
push
loope
adc
add
out
push
or
loopne
aaa
repz
jnp
dec
lea
dec
iret
cmpsl
jno
fldlg2
mov
sbb
int3
and
jns
mulb
js
jmp
xor
mov
les
adc
pop
test
dec
or
ds
test
mov
aaa
and
xchg
fnstsw
jns
insl
push
lcall
mov
add
imul
es
fidivrl
pop
movsb
fdiv
dec
and
in
push
fisttpl
and
sbb
fwait
xchg
mov
and
lret
lahf
add
jmp
in
lock
les
ljmp
cmp
lret
mov
mov
pop
jno
and
in
daa
push
sbb
daa
cwtl
mov
ficomps
es
fiaddl
aas
xchg
xor
fstl
jecxz
sbb
rorb
pop
fs
and
and
pop
jecxz
adc
in
xchg
hlt
aas
adcl
fmul
mov
nop
scas
jmp
mov
cld
xor
add
cmpsb
sbb
aam
sub
and
sti
mov
imul
cmp
push
add
iret
shll
inc
out
lea
cmc
dec
sub
add
xor
jge
or
pop
movsl
icebp
add
ftst
aaa
pop
jae
mov
mov
jnp
cmpsl
fimull
in
movb
ficoml
stos
ss
mov
xchg
push
fcmovnbe
dec
inc
xchg
enter
adc
mov
movsl
jno
mov
in
xor
repnz
insb
xchg
orl
jg
sbb
sbb
xchg
push
cmc
xchg
mov
adc
pop
inc
sub
cld
movsl
or
push
xchg
cmp
testb
inc
aaa
xchg
fbstp
hlt
scas
ret
inc
jo
idivl
jecxz
rcr
push
aaa
insb
fcomip
cli
std
xor
mov
push
inc
loopne
and
inc
sub
mov
push
scas
loopne
cld
ds
or
or
test
dec
cmp
or
xchg
imul
xor
cld
dec
pop
cmp
mov
jno
insl
mov
stc
adc
fnstcw
add
mov
loopne
push
fnstsw
mov
loop
or
mov
hlt
inc
mov
cli
and
xchg
cmp
pop
test
enter
dec
lock
mov
hlt
ret
adc
jl
aas
stc
fldenv
add
loope
fs
js
outsb
loop
orl
push
or
xchg
mov
in
repnz
int
jne
aaa
lock
add
mov
pop
jbe
mov
pop
fiadds
sti
sbb
daa
inc
push
loop
xor
push
dec
int
imul
fucomi
push
xchg
xor
push
dec
test
sarb
jno
adc
sub
out
sub
or
mov
mov
xor
call
xchg
xor
lods
pop
dec
push
outsl
fbld
and
aad
xchg
dec
arpl
movl
or
add
fistl
in
shl
lret
add
mov
loop
or
cmp
jae
out
push
xchg
fnstsw
pop
push
jb
sbb
sbb
mul
int
lock
jecxz
mul
jle
inc
in
mov
xchg
in
sub
cmp
pop
data16
in
add
sbb
cmc
ja
dec
hlt
loopne
inc
push
sub
cmp
stos
pop
ret
ss
scas
and
hlt
cltd
mov
les
out
pop
sub
xchg
insb
test
mov
scas
sbb
test
sbb
stos
std
mov
popa
jns
rcrl
out
jo
rcrl
jg
dec
fcmovnb
or
ss
mov
stos
or
in
jp
int
int
outsl
push
mov
repz
mov
sahf
out
mov
movsb
xor
outsb
test
lcall
mov
ss
cli
iret
sub
test
gs
push
or
and
in
rcrl
jne
divb
mov
xchg
sbb
push
xchg
popf
ret
cmp
push
inc
jns
pop
pusha
inc
mov
in
sub
mov
add
push
and
adc
inc
push
jns
cwtl
out
jnp
xor
cmp
comiss
adc
push
cmp
call
rcll
dec
push
mov
jno
sbb
dec
hlt
cwtl
sbb
inc
xor
adc
mov
popf
jl
push
and
xchg
adc
test
test
push
dec
inc
lret
mov
mov
fldt
inc
loope
sub
fidivl
mov
lds
jbe
and
jge
scas
int3
roll
sub
mov
repz
xor
push
loope
cwtl
sbb
int
xchg
add
lods
adc
jne
mov
pop
inc
stos
add
stos
leave
scas
pop
adc
xorb
ret
pop
sub
ret
add
pop
in
out
cli
xchg
push
jp
or
mov
push
mov
adc
mov
xchg
adc
out
repnz
xor
dec
jne
out
and
dec
push
js
clc
fsubl
popf
lret
test
call
jo
ja
imul
cmp
mov
inc
insl
sbb
inc
dec
push
es
jecxz
or
pop
insl
jp
hlt
mov
enter
pusha
cmc
into
and
fsubrs
adc
and
lods
cmp
int
xlat
adc
cmp
or
xor
xor
jmp
cmp
outsl
jp
adc
xchg
mov
loop
das
in
in
sub
ds
dec
inc
xor
and
or
and
cmc
ret
popf
popf
inc
outsb
pop
add
gs
insb
or
inc
aaa
xchg
shrl
orl
test
inc
cmc
pop
cmpsl
sbb
in
pusha
sbbb
sbb
pop
pop
mov
fwait
jmp
or
cs
repnz
lahf
adc
adc
or
out
mov
mov
push
cmp
out
dec
neg
cmpl
inc
jb
mov
sbb
sub
ds
jp
inc
jno
pop
stos
gs
sub
imul
push
mov
rcll
push
add
orl
cmp
int3
mov
out
sub
add
out
add
sbb
pop
push
mov
in
leave
clc
mov
pop
adc
js
enter
xor
into
ret
out
push
je
sbb
mov
dec
jne
pop
pop
or
inc
or
mov
mov
mov
out
loope
gs
shll
cmp
nop
or
jge
fsubs
push
sbb
mov
adc
fmull
or
cmp
mov
shl
sub
and
repz
mov
jmp
jnp
incl
sub
aas
cli
popa
pop
xchg
jmp
inc
jae
push
or
aam
mov
or
outsl
mov
shrl
push
push
cmpsb
sbb
sub
repnz
js
pop
in
cltd
mov
push
xchg
sub
push
mov
push
out
int
lcall
repz
mov
push
cmp
add
popa
xchg
rclb
mov
and
les
outsl
fcompl
ja
fstpt
imulb
mov
xlat
shll
xchg
mov
inc
inc
pop
sti
or
scas
pusha
mov
ja
sub
push
pop
dec
push
push
push
test
xchg
cmp
push
into
lock
stos
cwtl
and
rolb
idiv
mov
and
inc
adc
imul
loope
aad
push
fmull
lea
or
push
dec
cmp
sahf
mov
insb
adc
popa
lret
pop
or
push
adc
inc
popf
add
sahf
orl
pusha
lods
jnp
aad
in
mov
sbb
jge
sub
das
dec
or
pop
adc
and
std
out
cmpsl
or
mov
outsl
inc
jmp
or
aam
jb
ljmp
inc
notl
pop
stos
pop
dec
and
jmp
shlb
in
mov
push
push
xchg
mov
seta
out
aaa
int
lods
hlt
sbb
jns
xchg
faddl
and
clc
icebp
pop
int3
push
lock
mov
push
push
jo
push
insb
sub
out
mov
clc
stos
test
sbb
inc
cmp
iret
fcmovb
dec
test
fcoms
add
dec
sbb
ror
dec
push
pushf
xlat
adc
adc
ja
jbe
xor
sub
movl
stos
out
push
xchg
dec
inc
test
adc
aas
mov
imul
push
cmpb
int
or
in
xor
lods
insb
cmp
bound
aaa
dec
out
jle
and
mov
mov
ljmp
rolb
jb
xchg
popa
pop
movsl
mov
test
mov
inc
pop
inc
mov
fsub
ret
inc
inc
cltd
pop
dec
jo
jg
lret
mov
xchg
xorl
inc
sbbb
mov
stc
cmp
jl
xor
cmp
push
je
call
jae
movsb
das
fs
movlps
dec
inc
push
loope
test
leave
int3
mov
sub
out
fs
stc
cmp
dec
insl
call
dec
and
mov
add
lcall
add
dec
xchg
cmp
cmp
jg
xchg
jmp
add
mov
inc
or
loop
int3
xlat
imul
add
pop
cs
mov
pop
aaa
jnp
dec
dec
mov
icebp
mov
push
pop
jp
add
mov
cmp
or
xor
xchg
or
jle
pop
das
xor
shrb
pop
jne
mov
lods
sahf
cmp
cmp
xchg
jb
enter
popf
add
test
push
ss
sarl
xchg
mov
popa
sbb
cmp
cmp
imul
and
int3
shl
cmpsb
jp
jmp
xchg
jbe
or
les
pop
inc
add
gs
cmp
mov
adc
lcall
movsb
mov
sub
aas
and
sub
dec
and
dec
mov
enter
dec
pop
inc
arpl
imul
aam
outsl
inc
xchg
xchg
movsl
fsubs
shrb
xchg
rcr
cmp
xlat
xor
ficompl
movl
and
pop
jne
stos
mov
push
mov
push
mov
pop
mov
cmp
cmp
pop
mov
in
js
mov
je
test
fcomps
bound
mov
mov
inc
shlb
jg
mov
and
and
call
push
mov
sub
cld
and
rcrl
test
dec
sti
sbb
inc
loopne
stos
or
js
cmp
repz
lcall
adc
mov
ret
push
ret
mov
mov
repz
xchg
push
aam
les
bound
sbb
lods
xchg
lods
and
fldlg2
shr
xorl
xchg
dec
sub
xor
lock
xor
adc
cmp
outsb
mov
fcmovb
and
sub
jb
shll
xchg
or
imul
pusha
jo
mov
js
mov
iret
in
divb
dec
incl
cld
pop
mov
call
pop
dec
frstor
enter
in
add
shrb
nop
enter
adc
popa
pop
xor
xchg
loop
cli
imul
xchg
add
inc
lea
popf
stos
push
popf
push
aaa
mov
aam
inc
push
push
mov
test
es
inc
xor
push
push
push
pop
cmpsl
ret
cmpsb
push
jle
daa
outsl
xchg
sub
sar
outsb
push
pop
popf
jl
mov
lods
mov
das
cmp
lcall
and
int3
repnz
and
bound
sbb
pop
add
fisttpl
mov
movsb
xor
fisttpl
inc
inc
mov
fiadds
das
mov
cmp
xor
loope
mov
cmp
int3
jp
pop
cmp
cmpsb
aaa
jno
mull
in
mov
ja
pop
sub
xor
nop
mov
es
ret
pushf
cmp
jnp
jo
pop
lret
dec
aaa
cmp
xlat
xor
sbb
in
movsb
decl
sbbb
inc
mov
daa
xor
dec
mov
in
pandn
fs
jb
xchg
sti
sub
push
cmc
into
pop
stc
in
cmc
jl
sub
sub
cmp
ds
push
jmp
mov
cmp
xor
shlb
cmp
fwait
or
mov
mov
push
add
sbb
adc
fisubrl
int
fcoms
and
or
scas
xchg
enter
rcll
fdivrs
loopne
pusha
push
out
fsts
add
inc
iret
pop
js
scas
mov
add
add
jnp
add
sbb
pop
aad
stos
cmp
in
add
mov
jb
or
in
test
adc
xor
repz
fwait
xchg
mov
sbb
jno
int
addl
int3
es
test
shl
and
test
mov
les
xlat
dec
jo
in
int3
out
sub
sti
add
testl
mov
fldcw
push
mov
mov
out
aaa
aaa
mov
shrl
gs
movl
sbb
loope
lds
sti
push
shlb
push
cmp
fldt
test
and
lea
fwait
clc
out
movsb
mov
cmp
loop
or
dec
xor
mov
ret
aad
push
icebp
outsb
inc
cmp
sbb
dec
enter
mov
xchg
insl
aam
addr16
or
mov
lahf
mov
xor
ret
dec
jns
push
pushf
jbe
cli
loopne
int
sbbb
stc
inc
dec
jg
or
and
dec
es
add
cmp
adc
icebp
mov
lds
or
insb
jae
pop
sub
xor
jns
ljmp
dec
sbb
and
clc
xchg
jae
mov
mov
xor
fstpt
mov
popa
subl
pop
movsl
outsb
bound
subb
xchg
adc
mov
ret
push
aaa
lock
sub
test
aaa
adc
jp
and
push
and
shlb
icebp
push
xchg
mov
cmp
sub
test
dec
and
jnp
inc
add
js
push
jg
pop
or
and
int
dec
cmp
and
scas
dec
jo
xor
cmp
xchg
push
mov
pop
aam
jl
cli
inc
iret
adc
clc
adc
add
iret
sbb
inc
lcall
mov
add
sub
and
out
xor
movsl
leave
call
out
pop
sbb
inc
rclb
inc
pop
adc
mov
push
xor
ljmp
aaa
popf
jl
lds
push
add
lret
jle
dec
cmpl
cwtl
out
push
lods
mov
jmp
insl
scas
movsl
xchg
lahf
arpl
aad
add
cltd
scas
sub
sar
inc
cmpsl
test
jae
mov
mov
cmpsl
sub
test
arpl
std
push
cltd
lahf
adc
repnz
out
mov
aas
rcrb
icebp
jl
jb
out
mov
mov
mov
mov
decl
and
inc
and
push
mov
popa
dec
cmpsb
mov
xchg
inc
cmp
scas
and
jmp
mov
inc
lcall
dec
push
aaa
xor
inc
lea
and
mov
push
es
pop
out
movd
sbb
imul
and
lods
mov
pop
xlat
je
jge
js
scas
adc
mov
orl
cmp
cmpsb
mov
xchg
fstl
scas
pop
hlt
dec
sahf
pop
or
jbe
pushf
or
call
mov
ja
xchg
sub
cmp
mov
pop
jg
and
movsb
push
add
push
enter
cmp
mov
ror
insl
jns
outsb
mov
andb
lds
test
cmp
cmp
xor
ja
pop
loope
dec
inc
lcall
cs
add
ljmp
jbe
sub
jmp
xor
push
dec
jg
pop
mov
out
clc
jnp
jo,pt
inc
mov
pop
cld
sub
mov
dec
adc
jecxz
add
sarb
test
or
out
aas
pop
dec
mov
je
pop
insl
testb
jnp
pop
aas
subl
fwait
mov
ret
mov
pop
add
test
lea
stos
jnp
frstor
lock
jmp
cmpsb
xchg
mov
test
inc
sbb
ja
push
test
ja
and
lods
iret
shlb
xor
sub
sbb
mov
inc
dec
mov
jno
mov
rcll
adc
ss
dec
icebp
pop
cmp
fs
adc
jg
and
loope
jae
add
add
push
cmp
fmuls
mov
outsl
call
pop
cmp
xor
fwait
aad
test
lahf
es
mov
cmpsb
psllw
jl
sbb
lahf
daa
xchg
adc
adc
mov
mov
cmp
outsw
and
movsl
imul
mov
bts
dec
adc
pop
outsb
stos
movsl
push
stos
pop
push
es
push
into
shll
add
decl
add
xor
fwait
call
jmp
or
mov
fldt
outsl
xchg
xchg
repz
mov
jecxz
add
jecxz
pop
cltd
or
and
jge
gs
stos
and
adc
sbbb
xchg
gs
popf
fwait
out
movsb
xchg
push
ret
sub
fsubrl
or
mov
cmp
dec
mov
repnz
jle
fucom
std
sub
mov
jge
or
aas
push
push
add
mov
xor
push
sub
mov
in
bound
fwait
vpcmpgtb
and
sbb
lods
dec
push
sub
dec
cli
jmp
push
ja
jmp
lods
push
std
mov
ret
scas
ror
xor
dec
mov
notb
pop
arpl
and
and
std
adc
push
or
mov
lods
xor
test
into
js
dec
mov
or
inc
mov
or
ret
adc
ss
insb
pop
jae
mov
mov
or
stc
lcall
bound
imul
adc
xchg
icebp
sbb
pop
outsb
pop
cs
pop
adcb
mov
cmp
bound
push
orb
and
sbb
fnstsw
push
out
push
mov
jbe
add
mov
mov
jmp
cmp
or
stos
sub
fiaddl
cmp
dec
repz
pop
je
enter
nop
mov
inc
mov
cli
cltd
rcl
stos
mov
cmp
sbb
sbb
xchg
mov
jle
loopne
popa
pop
subl
xchg
or
jae
add
mov
cmpsl
imul
sbb
shl
add
dec
aas
repz
jo
cmp
lsl
and
fwait
pusha
cmp
cvtdq2ps
xchg
mov
pop
enter
inc
adc
mov
inc
jl
movsl
jnp
cmp
pop
sbb
ror
mov
call
pop
mov
xor
sub
aas
cltd
sbb
addb
lock
int3
mov
in
jecxz
adc
lods
jo
sub
loope,pt
fsubr
push
fimull
push
movsl
sbb
aad
or
push
jnp
add
bound
push
stc
aas
in
sub
ret
or
icebp
daa
test
and
in
mov
xchg
add
inc
sub
lock
xor
rolb
and
andl
adc
inc
jp
test
data16
in
out
jne
xchg
or
pop
out
inc
jl
cmp
xchg
lock
sbb
ds
xor
mov
pusha
adc
cmc
mov
loope
sub
push
in
xchg
fmuls
out
popf
jl
out
cmovbe
test
rclb
cmp
dec
nop
cs
and
leave
stc
inc
xor
mov
pop
les
sub
addr16
fimull
out
lahf
jmp
sub
mov
repnz
mov
aaa
xchg
aam
movsb
push
test
dec
mov
popa
xchg
push
mov
fnstcw
pop
pslld
orb
arpl
cmpsb
or
xchg
ja
in
adc
xor
lea
dec
xlat
les
push
lret
dec
aaa
sbb
imul
push
nop
mov
mov
stos
mov
pusha
lods
daa
lea
xor
pop
mov
xor
mov
sbb
mov
mov
out
xchg
inc
xchg
aaa
fadd
sbb
inc
test
mov
data16
iretw
je
jno
mov
xchg
pop
sbb
lcall
mov
jb
in
or
cmp
ds
add
inc
mov
xlat
sbb
push
dec
shrl
mov
repz
call
out
dec
iret
clc
outsl
and
mov
dec
insb
pop
mov
jmp
xchg
scas
in
jo
lret
in
xlat
data16
sub
jnp
out
dec
dec
stos
rcrl
sbb
scas
sti
cltd
daa
push
aas
enterw
das
aad
es
ss
mulb
outsb
push
and
xchg
dec
xchg
scas
js
pop
insl
js
nop
sti
testb
mov
sbb
fcmovnb
mov
shlb
pop
test
xor
pop
outsl
mov
xchg
loope
nop
sub
inc
sbb
add
stos
cmp
imull
push
jo
adc
ljmp
jmp
test
shlb
fdiv
pop
das
mov
movsb
fistpll
push
fs
or
cmp
sbb
add
adc
jp
dec
add
or
loope
out
cmpsl
xchg
mov
jns
mov
xorb
out
pop
push
sbb
test
mov
push
pusha
movsb
mov
mov
in
in
ja
out
adc
push
adc
pop
pop
daa
aad
mov
dec
xor
fwait
arpl
ds
sbb
lret
in
jmp
add
xchg
fwait
repz
outsl
mov
popf
les
lcall
das
cmp
sbb
cwtl
daa
jmp
loopne
push
push
inc
leave
sub
xorl
cmp
jnp
and
outsb
inc
mov
test
orb
addb
cli
std
add
xchg
pop
and
mov
dec
test
repz
sbbb
xor
mov
fldenv
or
push
popl
mov
xor
outsb
daa
das
seta
push
ds
aad
ret
pop
xchg
cmpsl
pop
scas
add
mov
cs
call
ret
in
add
cmp
repz
or
test
adc
cmp
test
addl
pop
sti
pushf
enter
data16
jns
clc
ret
fisubs
push
adc
lds
test
cmp
adc
arpl
jbe
sub
cmc
sub
imul
test
mov
mul
hlt
imul
jae
xlat
test
inc
xchg
aaa
out
sbb
push
mov
cmpsl
sbb
and
push
mov
mov
adc
dec
mov
mov
mov
dec
jecxz
mov
lret
cwtl
popf
pop
xlat
movsl
dec
nop
push
mov
icebp
mov
xor
xor
xor
jnp
mov
scas
fstps
ljmp
lahf
sub
inc
lock
out
repz
mov
inc
cmpl
rcrb
ja
pusha
decb
jo
test
cmp
jnp
sar
push
sub
gs
mov
into
sbb
pop
arpl
add
pop
sub
adc
arpl
fsubrl
je
sarb
ds
mov
mov
dec
pop
pop
int
pop
pop
lods
out
fcomi
add
add
jo
adc
out
aaa
jge
sub
jle
or
repnz
inc
pop
cld
mov
jnp
or
push
daa
fiaddl
inc
inc
leave
mov
out
or
divb
adc
add
push
fdivrs
cmc
in
mov
cmp
and
and
filds
xchg
mov
loop
jmp
jmp
cli
data16
loop
mov
js
popf
mov
xchg
lahf
je
stos
negl
hlt
mull
jb
jge
lcall
pop
jge
and
inc
cmp
pop
stos
jg
icebp
sbb
rolb
cltd
cwtl
test
mov
popl
push
repz
mov
nop
fistl
sbb
xor
in
sbb
or
dec
inc
jp
cmp
push
xchg
add
inc
mov
out
xchg
clc
adc
mov
mov
xchg
xor
out
xchg
and
addr16
xchg
aaa
xchg
cmpsl
jg
aam
mov
xor
insl
jb
imul
je
daa
das
push
pop
repnz
loopne
and
jno
orl
mov
loopne
jp
insl
sahf
test
hlt
sub
mov
gs
pop
dec
ret
dec
sub
ficompl
lret
js
popa
fwait
sub
pop
add
popa
mov
push
loopne
adc
sub
dec
push
in
pusha
push
mov
mov
in
mov
idivb
into
in
mov
dec
mov
xor
cmpsb
test
mov
aam
repnz
negl
jns
test
nop
inc
mov
lret
dec
inc
pusha
arpl
stc
mov
adc
dec
xor
jmp
mov
cmpsb
add
mov
dec
mov
lret
or
adc
mov
cmp
popa
std
inc
rolb
sub
xor
fwait
sahf
push
sbb
hlt
fldt
inc
jge
inc
pop
cltd
lret
arpl
sub
neg
imul
and
push
dec
pop
subb
daa
cmpsl
repz
fadd
push
lret
xchg
dec
mov
insb
gs
loopne
fcomp
in
shlb
pop
xlat
mov
lods
fsts
jecxz
mov
add
aam
jnp
sbb
inc
cmp
ret
es
jp
insb
sbb
add
xchg
jne
orb
ret
add
jae
scas
out
add
fs
push
leave
sub
pop
ja
pop
jmp
sub
popa
jge
gs
pop
sub
push
mov
and
mov
or
dec
imul
jmp
adc
cmp
mov
out
jle
mov
and
jmp
pusha
mov
inc
xchg
fistpl
stc
mov
dec
add
push
cmc
mov
imul
pop
xchg
adc
sti
ficoml
mov
and
in
fadd
pop
dec
iret
dec
dec
hlt
in
mov
hlt
sarb
clc
sbb
inc
stos
xor
xchg
std
and
pusha
es
xchg
sub
jl
dec
shr
fsubr
xchg
or
adc
push
mov
das
dec
sub
imul
cld
outsl
iret
aad
push
mov
sub
cltd
outsb
or
push
push
inc
fldl
xchg
les
addr16
scas
imul
orb
scas
lods
cmpsl
or
out
dec
pop
jne
cld
and
xchg
pop
pop
xor
pop
mov
mov
outsl
mov
jns
sbb
pushf
mov
aas
mov
cmc
inc
in
mov
jb
bound
int
rcrl
movsb
subb
dec
sbb
cmc
gs
push
xchg
mov
jae
mov
inc
aad
push
lahf
lcall
gs
fsts
sar
lahf
pop
bound
mov
fldenv
sahf
shll
test
jnp
dec
notl
sahf
inc
data16
xchg
pop
das
or
xchg
int3
sub
inc
bound
inc
out
arpl
icebp
mov
pop
adc
mov
push
vmwrite
add
dec
in
imul
stc
mov
xor
and
fwait
pop
enter
fwait
lods
lahf
inc
and
xchg
sub
and
cltd
dec
es
and
fadd
jecxz
outsb
hlt
sbb
ds
or
scas
push
pop
sbb
sti
out
fsubrp
jae
mov
push
xchg
jmp
cmp
xchg
push
hlt
andl
jmp
xchg
daa
iret
pop
test
pop
dec
bound
movsb
mov
push
test
addr16
loopne
push
fs
inc
or
nop
int3
dec
dec
push
icebp
adc
popa
js
pop
inc
out
jb
mov
shrb
fstps
lcall
aas
xchg
push
repnz
cmp
stos
std
mov
and
mov
or
pop
push
xchg
mov
pop
pop
xchg
mov
dec
arpl
outsl
pop
fldt
fildll
sub
ret
add
out
ret
dec
jne
bound
sub
sub
cmpb
xchg
pop
adcb
shlb
mov
push
into
ja
cltd
jmpw
mov
cltd
push
mov
lret
popa
or
sahf
push
sahf
push
or
fmul
cmp
xor
in
hlt
lahf
cmp
rorb
pushf
mov
mov
out
je
fwait
inc
and
xor
sub
in
push
loop
data16
ss
and
cmpsl
out
or
mov
cmp
mov
pusha
hlt
adc
add
mov
fdivs
dec
hlt
jae
orb
push
shr
jb
mov
push
fs
je
sbb
or
cmpsb
les
or
and
inc
mov
inc
mov
add
inc
sar
jo
ss
sti
dec
test
add
and
andb
xor
pop
push
mov
jbe
loope
hlt
pop
add
mov
jmp
jecxz
dec
jge
mov
scas
int
lcall
jg
cltd
cmp
mov
dec
mov
lds
nop
filds
sbb
push
jg
sbb
or
ds
push
std
arpl
ljmp
movsb
jge
les
dec
fsubrs
into
paddd
cmp
push
cwtl
pop
and
enter
pop
daa
popa
mov
mov
cmp
loopne
es
mov
mov
and
movsl
push
cmp
rorl
arpl
and
xorb
pop
jecxz
mov
sarb
out
insb
dec
dec
stc
rclb
aad
xchg
mov
scas
shrb
push
cmpsl
test
insl
sub
fisttpl
xchg
fs
imul
aam
pop
mov
lret
cmpsl
rep
shr
jno
fbld
test
xlat
rcll
addr16
adc
mov
mov
jle
mov
xchg
dec
jae
mov
inc
test
lock
xchg
aas
add
cltd
cmpsl
jno
lea
pop
lcall
push
add
testl
jp
or
xor
dec
pop
enter
pop
and
fisubs
jle
pusha
lcall
or
mov
add
test
stos
dec
inc
sahf
lret
sbb
mov
in
jns
stos
pop
jb
cmpsb
mov
fldl2t
adc
jne
inc
mov
bound
adc
out
subl
loop
aam
lret
fmull
fldl
jns
push
push
repnz
sbb
popf
mov
adc
and
inc
loop
js
jnp
pop
or
add
subb
test
cmp
inc
adcl
mov
sar
aad
testl
push
and
call
loop
mov
sub
jecxz
xchg
mov
je
xchg
test
cmpsl
jno
mov
popa
sbb
lcall
sbb
out
mov
mov
aad
mov
push
jge
fsubs
adc
inc
loopne
in
cli
xchg
add
icebp
or
paddusw
idiv
cmpsb
xor
out
cwtl
cmp
inc
pop
xchg
hlt
adc
dec
pop
dec
cli
xchg
in
notl
out
call
pop
scas
jae
pop
adc
or
sub
test
into
mov
push
inc
int3
hlt
fildl
xchg
inc
or
mov
cmp
inc
movsb
cmp
dec
jbe
xchg
dec
adc
nop
jp
insb
lods
out
lcall
insb
lock
rcrl
jnp
dec
push
loopne
out
pop
add
xorb
out
jne
adcl
push
and
clc
lods
loope
stos
fwait
push
mov
sbb
lods
ljmp
dec
adc
lret
push
mov
jb
sahf
cmp
push
mov
dec
insb
jnp
lods
xor
loop
out
fstps
sub
std
or
ljmp
inc
std
inc
fnstcw
push
loope
push
mov
push
adc
push
cwtl
adc
add
imul
inc
adc
lret
std
subl
push
adc
xchg
mov
xchg
jnp
ss
push
inc
xor
push
in
jo
aad
pusha
call
inc
add
das
dec
fisttpll
idivb
inc
push
push
mov
nop
cli
je
iret
xchg
adc
mov
xchg
movsb
adc
bound
sbb
outsl
ret
or
call
int3
mov
mov
jecxz
and
mov
pop
lods
cli
pop
mov
or
or
xor
add
mov
cmp
shrb
fldl
push
push
sbb
outsb
sub
add
mov
movsb
sbb
jl
or
add
adc
push
sub
add
hlt
push
mov
js
jb
test
ret
je
dec
push
adc
jnp
loopne
mov
push
mov
mov
jbe
mov
lods
ja
mov
mov
pop
xor
dec
pop
push
outsb
push
xchg
and
shr
or
test
jecxz
pop
dec
subb
icebp
and
adc
and
imul
inc
fcomps
ds
xchg
xchg
mov
cmpb
out
and
cmp
mov
adc
gs
push
xchg
shll
mov
fcomi
push
push
scas
pop
out
jmp
lea
out
sub
pop
lods
jnp
add
shl
gs
aam
lods
outsl
add
cmp
inc
aas
sub
xchg
scas
lds
inc
arpl
loope
repz
xchg
insb
jp
mov
pop
sub
lods
iret
aaa
pop
or
push
in
jno
arpl
movsl
test
mov
lods
push
pop
xchg
dec
sub
push
pop
out
xchg
xor
repz
jno
mov
enter
mov
fcoml
mov
icebp
in
test
out
pop
inc
jg
push
les
test
xor
stos
rcr
mov
mov
in
mov
ret
push
sub
mov
adc
icebp
notb
loope
sahf
cmp
push
scas
sub
scas
add
push
movsb
stos
xor
in
sbb
add
cmc
movsb
test
sarb
pop
add
mov
pop
es
cmp
mov
sbb
push
cltd
or
es
mov
out
mov
iret
push
sub
mov
in
sub
repz
dec
or
cli
jns
pushl
cmp
cmp
std
or
xchg
loope
jnp
sar
xchg
jecxz
jge
mov
popf
add
in
add
clc
ljmp
mov
mov
js
pop
push
fimull
mov
dec
inc
sub
push
mov
sti
js
lret
cltd
xchg
pop
push
jecxz
lods
or
iret
mov
pop
addr16
add
add
cld
dec
cwtl
pop
jmp
xchg
cmpsb
xchg
jmp
adc
das
test
or
in
mov
sub
jmp
mov
cld
add
sbb
pop
test
cmc
test
push
dec
clc
pop
inc
lods
lds
outsb
mov
lahf
data16
popf
cmp
ds
jl
mov
push
neg
scas
mov
dec
xchg
inc
push
pop
mov
fistpll
les
jmp
ficomps
arpl
or
mov
pop
cld
not
jmp
lock
push
outsl
pusha
outsb
out
ficomps
sub
insb
js
in
cmp
cmp
mov
insl
lock
je
sarl
and
decb
xchg
or
mov
jb
bound
testl
push
mov
ja
adc
les
xchg
jle
iret
dec
xchg
test
mov
inc
arpl
inc
mov
sbb
sub
xchg
jmp
sbb
mov
mov
xor
or
pop
pusha
adc
idivb
sub
out
inc
add
pushf
xchg
inc
movzwl
jno
loopne
aad
repz
repz
mov
ror
sub
in
cld
sbb
sub
into
mov
into
push
cli
inc
jnp
jp
leave
sti
or
cli
dec
jle
adc
idiv
push
adcl
add
jg
movsl
mov
cmp
jl
pop
cmp
fidivl
popf
into
xchg
jne
insb
call
out
mov
inc
mov
pop
jb
lcall
aad
loop
call
stos
xchg
dec
pop
stos
std
inc
cltd
loopne
mov
push
jnp
test
jbe
dec
test
push
repz
dec
lcall
rcll
lock
fwait
pop
in
and
jp
cmpsl
sbb
or
push
mov
xchg
shr
sbb
add
repz
dec
subl
out
test
cmp
pop
stc
cld
or
cltd
dec
test
or
xchg
lcall
mov
flds
psrlw
dec
xorl
pop
pop
jmp
dec
xchg
cmp
xor
std
or
inc
adc
call
xchg
add
jge
test
xchg
into
shr
dec
adc
or
lods
sahf
xorl
lods
mov
pop
shrl
outsl
push
push
cmp
xchg
ret
sbb
dec
stos
pop
mov
test
push
sbb
in
das
adc
dec
cwtl
rcll
cli
xor
jmp
call
push
movsl
mov
cmp
fucomi
enter
and
push
jge
pop
lods
mov
sub
cmp
jae
aad
adcb
pop
insl
out
xchg
pop
jae,pn
cwtl
leave
cld
and
push
bound
imull
imul
mov
test
dec
sub
test
xorb
arpl
pop
adc
in
cmp
push
cmpsl
cmpsl
out
mov
fwait
ljmp
adc
pusha
dec
adc
movsb
lds
mov
call
scas
in
cmc
pusha
jno
movsb
xchg
ss
mov
mov
sub
xchg
xor
sub
fistl
dec
cmp
mov
xlat
popf
and
aad
repz
mov
imul
scas
fsts
jne
adc
xor
xor
jl
ja
or
les
fs
jo
stos
test
cmp
xor
inc
enter
jns
sbb
out
test
ret
pop
insb
leave
mov
jnp
movsb
xchg
hlt
dec
adc
push
push
push
adc
xor
popa
mov
test
pop
add
dec
mov
dec
and
sti
mov
adc
repz
jne
xchg
dec
jg
mov
daa
xchg
pminub
xchg
fcomps
xchg
or
cmp
int3
cmpsl
hlt
mov
sarl
js
mov
push
xor
arpl
mov
test
and
xchg
push
lcall
scas
or
lret
xchg
push
out
pusha
fwait
add
xchg
arpl
pop
jbe
into
sub
xchg
insl
cmp
xor
das
mov
insl
mov
ror
push
sub
lods
ja
and
cmp
mov
cwtl
sub
imul
call
xchg
scas
xorl
inc
mov
push
adc
xchg
sbb
mov
shr
xchg
imul
cmp
mov
sti
pop
adc
push
nop
movsb
mov
add
jns
aas
ss
or
sub
push
or
xor
xlat
je
mov
das
mov
push
jge
or
lret
jo
mov
fs
imul
ret
fcomps
popl
test
pop
sbb
inc
jge
gs
ja
add
sub
js
repnz
jae
hlt
jmp
xor
dec
fsubrp
mov
int3
aam
pop
xchg
testb
pop
cli
clc
dec
lcall
push
clc
xchg
cmpsl
orb
mov
sbb
and
loopne
mov
mov
push
pop
leave
mov
xchg
ds
pop
pop
and
jl
and
mov
and
and
lock
les
fistpll
pop
fidivrl
push
loop
xchg
and
sbb
dec
aaa
fisttpl
mov
jne
add
inc
mov
js
sbb
movl
mov
repz
push
mov
rol
adc
fsubrs
mov
aaa
lret
add
ficomps
es
gs
rcrl
jp
aas
sub
sbb
jg
xchg
loopne
aam
xlat
add
xchg
sti
mov
out
addr16
iret
jl
das
inc
jl
std
loopne
pop
dec
stc
ret
xchg
icebp
jmp
pandn
add
sbb
cli
lret
dec
adcb
daa
add
inc
mov
sarl
loope
jae
rclb
shrb
cli
loop
jmp
push
push
add
pusha
stc
mov
xchg
push
xor
sti
mov
fs
jmp
idivb
fiadds
leave
dec
push
inc
in
mov
push
jns
pushf
ficomps
add
adc
add
add
cmp
cmp
xchg
mov
shll
jge
mov
jg
xchg
mov
jno
pop
mov
inc
dec
clc
add
push
popf
mov
sbb
push
jmp
adc
dec
xchg
add
add
mov
scas
xchg
and
cmp
test
outsb
lahf
lds
inc
mov
clc
rcll
subb
test
int3
btr
mov
cmp
movsb
bound
cwtl
jo
fistpl
movsl
push
idivl
sub
fldl
ror
lea
sbb
fstps
push
scas
aaa
frstor
out
inc
sbb
clc
jo
inc
lods
ss
in
ror
mov
fldt
cmp
dec
xor
or
shll
lds
dec
pop
pop
xor
outsl
test
int3
incb
adc
push
jno
add
push
or
jecxz
push
cmp
repnz
sahf
jb
push
divb
call
lods
pop
daa
adc
mov
fldl
add
add
ljmp
sub
pop
xlat
pop
cmp
pop
std
pushf
pop
rcll
cmpsb
cmp
mov
scas
test
jmp
cmpsl
push
fimuls
inc
dec
cld
add
xchg
in
push
je
sub
pop
ret
loope
cmp
or
arpl
xor
int3
test
shll
sbb
cmp
or
pop
cmpsl
mov
in
ffreep
xchg
sahf
cmp
stos
aad
ret
cmp
adc
adc
mov
test
fnstsw
or
mov
les
mov
mov
cld
shll
jmp
sub
push
and
mov
mov
lea
cmpsl
push
subl
lock
mov
push
aaa
adc
mov
fistpll
and
jp
rsqrtps
mov
mov
addr16
xor
clc
stos
cwtl
add
cmp
push
pop
cld
add
cmp
inc
mov
mov
and
lea
in
jno
cmp
rcr
shrl
pop
outsl
jecxz
dec
mov
out
imul
inc
mov
push
mov
xchg
shl
fimull
int
dec
repz
hlt
inc
xchg
cs
iret
cltd
or
cli
mov
add
mov
or
cli
cmp
inc
xor
repz
popa
xor
cmpsb
xchg
or
pop
aas
inc
insl
mov
pop
lcall
xor
add
or
cli
aaa
and
sub
mov
ljmp
cmp
mov
mov
adc
flds
dec
add
lods
mov
dec
icebp
mov
sub
pop
dec
lock
jge
cld
push
push
add
insb
pop
jns
jne
dec
or
ror
push
inc
adc
das
xchg
adc
test
mov
jle
lods
iret
add
mov
iret
shll
loopne
sub
call
into
adc
outsl
int
out
dec
cmp
idivl
cmp
int
push
roll
sarl
out
cmp
inc
lea
xchg
es
sahf
enter
mov
movb
fs
jg
lcall
cmp
mov
cs
negl
add
mov
insl
add
dec
das
push
mov
xchg
test
fcomp
cli
jns
enter
fildl
out
cld
push
or
lds
pusha
inc
lahf
push
out
movsb
ljmp
inc
data16
not
inc
push
jno
outsl
mov
ja
mov
in
repnz
mov
mov
sbb
dec
cmp
aam
icebp
pop
mov
push
int
lret
cmp
jae
jp
repnz
or
add
shrl
cmp
jl
outsb
cmpsb
sbb
sub
roll
pushf
sbb
xchg
rclb
xchg
mov
dec
out
jl
mov
jns
fwait
shl
inc
inc
inc
enter
xchg
stos
int3
fisubrl
sbb
and
jge
and
xchg
filds
push
add
test
cmovnp
cs
clc
cli
inc
fsubr
gs
test
fidivl
inc
ja
mov
sub
loop
cmp
cmc
cmpsb
dec
test
pusha
xchg
mov
lret
out
test
int3
or
scas
add
cmp
pop
or
dec
mov
imul
lea
cmpsb
adc
outsb
addr16
cmp
clc
andl
xchg
cmc
and
and
mov
sub
into
xor
test
jno
pop
cld
mov
mov
jne
inc
in
and
fsubs
mov
mov
jo
add
jp
movsl
leave
xchg
xchg
out
dec
jmp
mov
stc
test
sbb
inc
dec
add
cs
lahf
fisubrl
test
cs
arpl
fwait
adc
sub
out
xchg
adc
and
fs
mov
inc
mov
clc
fptan
mov
out
mov
divl
sarl
je
or
sub
cmp
arpl
cmpsl
mov
pusha
jae
test
fdivl
mov
rorb
addb
xchg
lret
lods
mov
xor
pop
mov
mov
out
ret
rcrb
cmpb
sbb
sub
mov
push
jg
xchg
jmp
mov
fdivs
jge
inc
leave
jle
jg
jbe
js
jg
sbb
xchg
hlt
out
or
adcl
ficoml
push
mov
push
cwtl
aam
jmp
mov
mov
hlt
adc
inc
xlat
dec
xchg
xchg
dec
mov
push
bound
and
mov
sub
cli
jge
pop
das
out
xor
and
xor
mov
shl
mull
outsl
pop
in
insb
pop
cmp
inc
push
mov
fwait
xor
popf
js
xor
cmp
sbb
sbb
jle
aas
cmpsb
in
pop
pop
dec
xchg
outsb
pop
mov
dec
cmp
sub
std
mov
xchg
mov
jge
iret
xchg
cmpsb
jmp
popf
in
prefetch
int3
xchg
bnd
sarb
pop
sbb
dec
push
out
aaa
shlb
sub
lock
xchg
scas
sti
push
xor
lds
sbb
cld
jle
pop
xlat
jmp
pop
pop
cld
mov
repnz
jl
add
sub
test
dec
mov
dec
fcoml
adc
ret
xor
jae
popa
adc
jmp
bound
adc
in
loop
cmp
stos
sbb
mov
leave
or
insb
adc
jb
call
cmc
stos
cmpb
test
jle
xlat
fildll
stos
mov
mov
pop
jg
mov
cmp
out
jo
xor
xchg
adc
or
push
je
sub
ret
push
dec
js
popa
pop
loopne
dec
push
add
adc
mov
fldl
out
push
lock
jns
scas
inc
ja
out
testl
test
or
jae
mov
cmp
int
sub
cld
xchg
push
and
push
fistpl
mov
xchg
les
cmc
fisubrs
in
inc
cmpsl
cwtl
push
adc
fsubs
scas
lock
out
sub
rorb
popf
mov
mov
repz
or
adc
cmp
jo
test
imul
mov
lcall
pop
stos
jl
mov
fimuls
add
add
xor
mov
mov
inc
push
xchg
xchg
add
loopne
test
and
mov
imul
in
and
mov
dec
clc
adc
cmp
cmp
and
sbb
jp
mov
jp
cmc
cs
or
in
xor
repz
lahf
aam
inc
sbb
inc
inc
sarb
cmp
xor
sbb
sbb
daa
inc
leave
out
mov
push
ss
lods
push
jbe
idivl
jae
sti
nop
mov
aad
pop
lods
test
loop
lcall
sbb
jno
cmovns
add
or
xor
mov
push
call
or
jl
cmp
dec
jno
xchg
ja
dec
daa
in
cmpsb
adc
sti
push
outsl
sbb
shl
jecxz
dec
ljmp
add
pop
dec
mov
pop
add
cmp
outsb
xchg
movb
mov
dec
and
stos
iret
pop
in
rorb
add
add
push
sti
mov
lods
js
rorl
sub
jbe
ret
sbb
push
inc
push
test
cld
dec
sbb
push
fstpl
in
cmp
enter
shll
loop
aam
sahf
xchg
movsb
popa
iret
adc
das
and
addr16
cltd
add
pop
inc
push
rorb
lea
xor
scas
imul
outsl
dec
jne
adc
cmp
maxps
cs
ret
or
stc
cld
lret
andl
xchg
enter
inc
vpxor
popl
mov
and
and
sbb
add
sub
cmpsl
jb
fs
push
jo
sub
out
inc
rorb
shlb
pop
fldenv
in
shr
fsincos
adc
ret
sbb
pop
lret
jb
pshufw
cmc
cmc
push
mov
ret
in
adc
sbb
pop
mov
jbe
push
jns
cltd
xchg
sub
mov
rorl
fcomps
shlb
add
mov
int3
xchg
aad
insb
and
dec
inc
or
inc
iret
push
mov
mov
ret
xchg
and
sbb
insl
jle
inc
aad
xor
aam
test
sub
cmp
aas
pop
push
mov
shlb
pop
mov
dec
add
jns
imul
test
enter
scas
mov
fimuls
inc
dec
mov
in
negb
inc
dec
std
add
lods
xor
loope
jl
pop
leave
jecxz
mov
inc
mov
mov
xor
out
testb
loop
je
pop
inc
sahf
jl
lret
dec
jns
icebp
push
push
cmp
ret
aas
gs
mov
sbb
pop
dec
insl
fwait
sub
insb
dec
cmp
push
cmp
in
mov
popf
mov
insl
mov
or
mov
xchg
mov
adc
stos
popf
ficoms
sub
adc
inc
jno
inc
negl
push
pop
mov
inc
loope
mov
jno
js
push
xor
fnstenv
js
test
test
jp
jbe
lcall
or
xchg
int
mov
inc
cmp
andb
mov
adc
fisubl
popf
jmp
mov
adc
jp
in
iret
mov
pop
adc
mov
cmp
pop
push
nop
or
out
mov
iret
shlb
enter
inc
sub
and
loop
movsb
sub
add
dec
adc
cs
xlat
inc
dec
dec
sub
loop
mov
loope
lods
testl
xchg
in
stos
lcall
cmp
sahf
sbb
push
fwait
mov
mov
ljmp
fnstenv
mov
xor
mov
ret
fdivrp
fsubs
in
ds
lock
int
xchg
xchg
jne
fimuls
movsl
sbb
xor
lds
cmpsl
xchg
in
fs
insl
cmp
jg
sbb
fdivl
sub
frstor
fwait
pop
pushf
or
dec
fwait
aad
stc
das
adc
jge
mov
jne
mov
cmp
rolb
testl
iret
test
fisubrl
dec
insb
addb
imul
mov
adc
loopne
jg
mov
ret
mov
ljmp
sarb
mov
pop
int
push
xor
ds
out
jp
cld
mov
and
or
jne
popf
dec
dec
pop
fwait
xchg
or
lahf
push
scas
daa
dec
je
enter
inc
inc
pop
lock
sub
push
fidivrs
push
addl
cltd
iret
jg
insl
inc
dec
scas
popa
iret
lcall
gs
sbb
cmc
xor
call
cmp
jnp
out
ret
sub
scas
jo
std
cmc
add
ss
scas
mov
cs
mov
mov
dec
jae
repnz
xor
and
pusha
mov
xchg
cmpsb
bound
movsb
or
ret
daa
aad
popa
mov
mov
push
rorl
inc
testl
ja
bound
test
mov
and
rorb
orl
jmp
jge
cmp
int3
stos
into
loop
movb
jbe
std
or
sbb
lahf
push
cmp
sarb
mov
cmp
sbb
rclb
push
adc
xchg
sub
fwait
gs
mov
push
jo
jmp
and
dec
add
fldcw
mov
add
dec
sub
lret
popa
pop
mov
fsubrs
ret
nop
or
scas
push
adc
fnsave
stc
inc
sub
ret
jle
mov
mov
jle
stos
jge
add
pop
jle
sarl
adc
mov
fstl
adc
ja
jg
push
add
arpl
mov
or
mov
int3
aas
jo
leave
mov
lds
or
push
push
and
and
xchg
adc
test
test
hlt
adc
dec
xlat
test
jl
pop
iret
inc
dec
mov
mov
xor
inc
cmp
xor
dec
stos
push
push
mov
push
nop
adc
enter
fwait
pop
pop
rorl
mov
enter
out
ja
dec
aam
xchg
push
js
xchg
mov
mov
add
into
jbe
adc
and
dec
xchg
sti
dec
call
leave
insb
mov
xchg
mov
fwait
mov
inc
add
sbb
testb
sbb
sub
mov
ret
jne
mov
add
in
addr16
xchg
rol
xor
movsb
movsl
jmp
jo
jmp
dec
imul
jns
sub
mov
cmp
or
dec
bound
stos
lds
mov
imul
mov
cmc
mov
pusha
ljmp
mov
jl
pushf
push
xchg
inc
sub
jne
cmp
scas
mov
pop
push
inc
repz
or
je
push
dec
repz
movsl
mov
call
xor
int3
add
push
lret
and
and
or
mov
loope
and
stos
faddl
mov
add
iret
mov
out
push
popf
loope
jne
mov
sub
dec
sub
xor
push
adc
sub
mov
out
sbb
repnz
jmp
cmp
rcrb
pushf
push
cli
cmpsb
into
jge
sub
pop
lds
sbb
cmp
push
cmp
add
sbb
mov
sti
cmp
xchg
ja
arpl
mov
rol
push
mov
mov
loope
cmpsb
mov
mov
push
push
popa
jnp
add
es
adc
mov
fistps
push
ljmp
jbe
xchg
nop
pop
fsubs
cwtl
pop
sbb
incl
adc
les
xlat
sub
jecxz
lcall
in
jmp
lds
out
mov
mov
dec
cmp
sub
testl
inc
outsb
adc
pop
ret
and
repnz
test
jle
xlat
stos
shl
test
js
xchg
pop
lahf
xlat
lahf
cmp
mov
scas
jg
fldl
out
out
popa
push
das
les
and
xor
ret
mov
mov
pop
movsl
adc
movsb
ret
pop
mov
lret
jecxz
and
xchg
dec
pop
and
and
pop
push
push
pop
sti
push
xchg
adc
dec
aaa
jecxz
in
adc
icebp
push
sub
in
fsub
fisubrs
vminps
lcall
movsb
jb
jns
pop
ds
push
and
jbe
roll
rcrb
and
int3
adc
subb
cmc
adc
inc
mov
mov
repnz
jg
aam
jp
pushf
xor
enter
mov
clc
add
sti
xor
pop
cmp
repnz
fisttpll
xorl
cltd
ds
sbb
cmp
iret
pop
pop
sub
adc
jg
and
jne
mov
adc
jno
pop
xor
mov
pop
sbb
mov
push
scas
sbb
cmp
dec
dec
inc
mov
jl
xchg
mov
inc
imul
add
and
xor
mov
add
outsb
push
pop
push
xchg
mov
sub
mov
outsl
inc
mov
cltd
push
jae
push
xchg
je
outsl
aad
add
mov
mov
cmp
mov
dec
mov
or
mov
pushf
je
js
outsl
sahf
test
adc
xor
xor
sahf
dec
xchg
pop
mov
cmc
aas
pop
mov
jl
test
cmp
andl
mov
mov
stc
push
push
orl
ds
inc
rorl
js
arpl
imul
inc
imul
push
cwtl
mulb
jle
nop
adc
xor
std
mov
sti
faddp
js
cs
jp
lcall
xchg
cmpsb
xchg
imul
lods
xor
jmp
orb
lret
jbe
lods
orb
and
push
jp
dec
movsb
dec
repnz
dec
repnz
push
jmp
adc
or
mov
enter
pop
mov
push
mov
xlat
xchg
lea
xchg
sub
repz
test
lahf
sbb
movsl
popa
and
es
fdivrl
lea
insl
xor
sar
fildll
sahf
int
add
cs
roll
subl
xchg
pop
test
jnp
xchg
loopne
or
mov
les
sbb
repz
sbb
pop
push
mov
and
lret
adc
add
rol
jg
lret
inc
jae
adc
adcl
repz
inc
ds
mov
lock
rorl
push
sub
addl
inc
lds
test
xchg
cmpsb
mov
mov
or
mov
negb
bound
add
fldl
and
js
bound
dec
orb
addl
and
or
mov
je
frndint
sub
mov
and
cld
test
fxch
ror
stc
fs
je
add
add
popa
insl
rcll
mov
and
ss
ljmp
out
cmpsb
out
jnp
sbb
pop
lret
ja
add
std
popf
pop
xchg
or
dec
insb
push
push
out
imul
insl
cs
jp
rorl
add
lds
jl
mov
in
out
fs
scas
mov
gs
jl
scas
movsb
sub
dec
gs
lods
add
lcall
cmp
add
int
lea
push
inc
fcomip
or
imul
adc
xchg
and
push
and
pushf
push
inc
jle
mov
fsubrs
fisttpll
stos
and
dec
jle
or
insl
pop
sbb
cmp
adc
shl
xchg
sub
mov
fcoml
rcrl
push
mov
iret
sbb
ror
mov
addr16
inc
and
sbb
out
jl
inc
push
and
popa
push
hlt
jns
repz
mov
pusha
das
ficomps
aas
adc
aas
push
mov
test
dec
sahf
scas
push
cmp
fsin
nop
xchg
and
sti
pop
fmul
mov
dec
sbb
aaa
mov
aam
jo
pop
or
je
lcall
hlt
out
fdivs
sub
aam
sub
mov
xchg
dec
daa
xorl
mov
lods
mov
mov
add
insb
mov
inc
and
loope
pop
enter
sbb
imul
and
lret
repz
into
arpl
push
xor
mov
pop
les
shl
pop
pusha
sub
test
loopne
idiv
loopne
aas
add
pop
and
pusha
xchg
out
sahf
dec
jmp
lea
inc
outsl
cmc
sahf
push
mov
xchg
push
and
adc
lcall
dec
test
pusha
pushf
xlat
mov
lds
divb
xor
adc
addl
arpl
ffree
hlt
jl
sbb
pop
fcoml
fsubrs
nop
cmpsl
lods
mov
mov
movsb
add
lds
jg
add
inc
out
push
in
jl
cli
or
dec
rcrl
push
pop
ljmp
mov
out
pop
jmp
and
mov
and
adc
loop
push
repnz
fnstsw
aam
xchg
fdivrs
pop
jp
jno
pop
xor
fadd
dec
cmc
movsl
mov
cmpsb
lcall
jle
xchg
cltd
mov
dec
hlt
out
das
int
push
or
or
mov
dec
lds
and
daa
and
and
lahf
daa
fsts
shl
push
add
imul
mov
notb
and
adc
pop
sub
push
dec
fstpl
call
mov
popf
cmp
idivb
in
daa
lahf
or
pop
rcrl
sub
movsl
popa
aas
out
pop
dec
ja
iret
pop
xor
movsl
rcrl
sbb
mov
lods
int3
cmpsl
rcrb
clc
mov
pop
sti
cmp
aam
xchg
stos
data16
push
mov
and
mov
push
jl
xor
cmp
in
pop
lock
dec
jmp
lea
sbb
inc
in
mov
sbb
mov
push
andb
push
xchg
cmc
rclb
leave
bound
nop
jne
std
push
fisttpll
adc
and
ret
stc
je
mov
aam
in
jge
std
add
pop
jb
adc
cmpsb
rcl
insb
dec
jg
fadd
dec
hlt
push
shrb
lds
fs
icebp
js
insb
mov
rolb
sti
adc
movsl
ds
call
insl
add
ja
mov
and
popa
test
and
icebp
cmp
rcrl
jo
and
push
out
loope
jge
dec
adc
pop
push
adcl
cmp
lock
xor
shrl
les
inc
stc
dec
test
sbb
ret
arpl
movsb
push
ds
and
mov
mov
adc
cld
mov
xor
gs
sub
sub
out
pushf
add
mov
stc
dec
or
dec
cmpsb
dec
mov
xor
movsl
mov
xor
cmp
in
or
bound
fldt
jae
pop
mov
std
lea
cs
int
mov
insl
jecxz
sub
cmp
in
shll
push
pop
mov
lock
jo
js
fstp
dec
addr16
lea
push
ficompl
dec
push
mov
inc
into
jle
xlat
push
popf
jnp
out
push
push
sub
xchg
push
mov
gs
xor
imul
lcall
ret
sub
push
scas
mov
aam
or
inc
and
insb
sub
cwtl
mov
xchg
dec
add
test
cmpsb
fwait
mov
sbb
mov
add
bound
loopne
dec
shlb
add
repz
sbb
sahf
cmc
sub
and
sub
rol
pop
in
outsl
stos
dec
pop
jnp
jl
push
cmp
rorb
fwait
cmp
mov
push
fcoml
adc
aad
lahf
mov
fsubs
pop
pop
mov
neg
jne
mov
and
mov
inc
aaa
xor
shl
mov
jns
inc
push
push
bound
add
lods
sub
fistpl
jp
dec
aaa
push
and
out
mov
inc
imul
out
sub
or
sbb
sti
push
jl
mov
insl
dec
das
divw
outsb
pop
idivl
repz
pusha
cmp
push
and
outsl
in
xor
and
mov
lret
mov
sub
pushl
sbb
mov
and
xchg
jmp
repnz
in
sub
jne
test
jge
mov
xor
enter
sbb
push
mov
cmp
js
inc
int
pop
adc
out
fwait
jmp
dec
call
lods
das
add
xlat
dec
sbb
lea
lds
push
outsb
lret
jbe
ret
mov
mov
fisttpl
mov
test
filds
fmulp
jbe
popa
sub
fcmovu
dec
xchg
sti
push
dec
pop
rol
ja
sbb
add
push
rolb
lods
xchg
shll
jnp
or
push
mov
out
daa
cmpsb
loope
xchg
cmp
nop
js
test
adc
mov
nop
or
or
out
sub
adc
cwtl
xor
lahf
push
mov
loopne
stos
mov
xchg
rcll
inc
ror
sbb
mov
fcmovne
adc
or
add
lods
clc
ja
mov
scas
xchg
imul
xlat
int
and
sub
daa
mov
dec
je
popa
or
arpl
or
pushf
push
lret
stos
xchg
add
cld
mov
pop
shl
int
mov
divb
mov
hlt
fisubrs
mov
stos
icebp
mov
hlt
sub
add
mov
pusha
mov
push
movb
outsl
shlb
adc
daa
cmc
mov
es
mov
cmc
fwait
stos
imul
mov
xchg
and
outsl
or
add
cld
push
orl
pop
pop
andb
jge
jae
rcll
or
inc
pop
push
sbb
jne
loope
enter
and
jl
mov
outsb
xchg
jl
fistl
mov
sahf
xor
ret
loope
jmp
mov
iret
sti
sbb
pop
push
dec
stc
bound
inc
xchg
outsb
lahf
mov
out
xchg
mov
movsl
je
cmp
sub
insl
mov
inc
push
cwtl
out
and
sub
out
sub
dec
pop
dec
dec
sbb
daa
cs
mov
mov
stc
int
scas
cmp
jb
js
jmp
mul
xchg
test
enter
stc
jecxz
cs
jecxz
add
mov
incb
sbb
in
xlat
pop
shrb
dec
das
add
xlat
push
sub
ja
pop
js
dec
sub
lahf
cmp
and
cld
gs
idiv
push
fisubrl
mov
push
cmpb
popa
rcll
testl
int
scas
das
in
jbe
test
adc
inc
jne
insb
rorb
outsl
test
jno
push
inc
sahf
ret
pop
adc
pop
add
fdivrl
push
scas
es
out
mov
in
sub
and
add
test
shlb
jmp
divl
inc
xchg
push
dec
inc
ljmp
sahf
loope
cmpsb
xor
std
jl
out
xor
rorb
or
imul
mov
and
sbb
lcall
jne
lret
jne
lret
insl
sub
cmp
inc
xchg
push
pop
xchg
cmp
xchg
aam
mov
push
mov
leave
loope
int
jno
fisttpll
imul
add
fsubrs
and
jns
sti
xlat
push
push
popa
mov
ljmp
pop
xlat
fnstcw
imul
ja
xor
repnz
pop
cmp
sub
arpl
or
and
mov
push
sbb
test
jg
fistps
decl
dec
idivl
dec
insl
ret
shl
mov
cmpsb
das
cmc
jp
insl
cmp
xor
fidivl
mov
icebp
loop
test
push
out
xchg
lds
adc
mov
jne
dec
dec
scas
stc
mov
cmp
pop
mov
xchg
dec
pusha
cmp
sbb
adc
adc
out
mov
sarb
loope
xorb
repnz
pushf
sahf
mov
cmpsb
into
shr
popa
dec
out
pop
xchg
and
push
enter
lcall
mov
notl
jmp
cltd
shlb
fdiv
sbb
mov
aaa
mov
je
jmp
test
push
mov
dec
cmc
dec
insb
insl
dec
out
jge
push
sub
pushf
cltd
fsts
mov
sub
jnp
mov
mov
xchg
cltd
repz
sbb
mov
jbe
notl
and
scas
push
mov
icebp
inc
lret
lods
dec
aam
mov
cld
cmp
mov
inc
cld
shr
sar
hlt
ds
push
stos
in
loop
gs
cmpsl
imul
jo
sub
popf
insl
cmc
pop
pop
or
mov
std
stos
mov
pop
pop
lret
or
sarb
stc
lds
cwtl
push
cmp
sub
dec
adc
scas
pop
ds
and
iret
pusha
add
addps
push
imul
loop
cltd
cs
clc
push
jo
inc
sarl
in
out
jo
mov
jle
fsin
sahf
sbbl
pusha
xchg
insb
xchg
jp
sbb
and
int
loop
push
add
lea
repnz
cmp
jle
lods
divl
mov
sbb
or
dec
push
add
int3
mov
push
mov
imul
sbbb
add
ds
popa
imul
clc
push
nop
lahf
cmp
repnz
sbb
push
push
mov
adc
ljmp
sub
fbstp
xor
push
dec
adc
stos
and
xchg
or
jae
sub
aad
jmp
adc
sub
inc
mov
xchg
xor
mov
enter
inc
pusha
cltd
shl
mov
mov
imul
jge
cmpsl
inc
fnstcw
add
and
jmp
loopne
inc
add
or
test
cmp
add
push
and
and
pop
xchg
loop
and
jns
xchg
jne
out
xlat
xchg
pop
sbb
or
inc
pushf
fs
ds
loope
push
pop
lods
incb
mov
and
lcall
imul
cmp
inc
loop
jge
adc
push
scas
jbe
aas
push
mov
mov
in
cmp
sbb
sbb
fildl
daa
loop
pop
hlt
or
push
push
dec
loopne
js
add
insl
mov
movsl
xchg
or
xor
cmpsl
sbb
ror
jne
out
mov
lret
aam
inc
lods
dec
imul
jae
and
inc
dec
mov
mov
and
or
sbb
and
pop
mov
mov
pop
mov
mov
pop
adc
push
sub
pop
dec
jo
fldcw
jp
aas
fstps
lahf
notl
mov
add
and
shr
and
das
into
mov
xchg
cs
comiss
jp
fstps
xchg
cld
insb
xlat
mov
pushf
or
sahf
jecxz
test
inc
in
je
jmp
into
mov
cmpb
add
arpl
xchg
out
movsl
sub
test
dec
mov
or
mov
mov
push
shr
adc
or
repz
lds
bound
insl
pop
mov
fstpt
and
in
leave
movsl
cmc
inc
xor
pop
adc
aas
xor
ja
adc
mov
cli
popa
adc
sbb
hlt
test
in
sti
jns
test
nop
xchg
or
and
mov
jle
mov
addr16
adc
push
pushf
cmp
adc
inc
iret
aad
sbb
push
mov
sarb
in
xor
or
jnp
mov
icebp
jge
xlat
mov
test
leave
or
in
xchg
daa
in
sbb
rcll
cs
imull
add
lods
or
shll
sbb
das
addr16
sahf
cmp
int
pushf
dec
jmp
xor
mov
shll
jae
scas
mov
cltd
stos
mov
mov
inc
xchg
inc
sbb
xor
cmp
imulb
mov
xor
in
repz
mov
stos
loope
xchg
or
dec
rcrb
mov
lret
add
jp
jo
push
sub
inc
les
sti
insl
pop
enter
dec
pushf
cli
pop
mov
aad
cmp
insb
dec
xchg
or
rcl
mov
les
cmp
in
imul
fwait
push
xor
movsl
popa
jp
xor
xchg
mov
inc
aad
mov
popa
xor
pop
shrd
adc
mov
push
lods
push
sti
daa
inc
mov
gs
es
mov
std
fdivl
and
sti
or
iret
or
out
or
mov
outsl
filds
lds
cld
jl
dec
sbb
jno
jg
lahf
repz
sub
out
sbb
mov
mov
lahf
push
cs
jno
mov
xor
test
loope
inc
push
pop
loopne
aaa
sbb
test
adcb
aam
xor
push
sbb
cmp
pop
sub
rol
test
xchg
adc
or
sub
jno
test
testl
xor
jl
xchg
inc
push
xor
lret
jl
mov
lret
xchg
mov
sub
scas
rclb
jg
adc
pop
stc
insl
pop
test
xor
icebp
push
mov
mov
xlat
loope
pop
add
and
aad
pusha
or
test
aas
mov
push
bound
lock
dec
xor
aad
scas
mov
pop
insb
mov
aad
mov
cltd
dec
fildl
and
mov
inc
sub
vpaddd
fldt
push
push
imul
repnz
outsb
mov
dec
daa
add
mov
sub
stc
fs
frstor
filds
sahf
imul
icebp
test
sub
repz
dec
inc
mov
ljmp
sti
fsts
or
dec
xchg
stos
imul
or
stos
mov
imul
ret
aam
add
jge
xor
sub
xor
movsb
scas
mov
stc
lret
and
repnz
pop
pop
aam
shlb
pop
cli
cmpb
and
cmc
sbb
add
in
out
imul
cmc
in
popf
inc
arpl
fmull
lods
push
fiaddl
nop
fld
xchg
fdiv
sub
shlb
mov
mov
or
adc
rclb
pop
fwait
orl
hlt
aas
and
les
addb
sub
add
test
leave
ss
mul
in
fisttps
xchg
xor
or
pop
cmp
outsl
add
pop
dec
subb
testl
dec
jl
xlat
mov
in
pop
adc
arpl
sti
ret
jns
cltd
and
and
pop
sbb
rcll
jg
pop
mov
out
mov
sub
xor
mov
sbb
aam
dec
dec
xor
ret
mov
fadd
cmp
inc
sub
mov
adc
mov
add
test
int3
add
scas
scas
mov
sti
in
outsl
insb
jno
jne
mov
mov
sub
lret
pop
sub
and
push
rcr
cmp
stc
imul
push
sub
in
mov
jns
nop
popa
add
mov
sbb
lock
sub
xchg
ret
pushf
sub
xlat
jl
push
into
mov
mov
xor
lock
jg
inc
fcom
inc
mull
or
adc
xchg
sbb
lahf
fs
mov
mov
mov
mov
inc
jns
and
aas
xchg
and
xchg
jmp
sbb
xchg
jge
sbb
fisttpl
fs
test
push
sahf
xor
push
imul
ds
jnp
push
lods
xchg
jle
cltd
or
shrl
and
and
mov
js
mov
stos
lcall
xchg
mov
aaa
xor
out
les
cld
cli
fwait
sbb
jecxz
icebp
in
sbb
dec
lcall
push
sub
add
xchg
js
mov
xor
inc
jnp
negb
stc
loop
sbb
int
lea
jecxz
cmc
fsubs
push
xor
adc
les
in
outsb
xor
pop
mov
xor
push
mov
outsl
sarb
sub
fdivr
mov
bswap
outsl
fildl
xchg
inc
cld
testl
fcompl
cmc
xor
mov
out
sbb
pop
push
jo
xor
aam
fadd
jle
inc
pop
je
inc
movsl
fldl
sti
inc
xchg
mov
mov
mov
and
pop
adc
cmp
pop
insb
movsw
subb
inc
shrb
adc
mov
pop
je
or
mov
stos
adc
rclb
xchg
mov
cmp
or
enter
aad
test
push
and
xchg
rorb
sbb
movups
es
jns
lret
cwtl
xorb
imul
dec
movsl
in
sbb
sub
lahf
fimuls
hlt
imul
and
cmpsb
inc
inc
ret
mov
and
push
insl
ja
ret
fs
push
stos
pop
test
pop
adc
mov
mov
pop
adc
sti
outsl
fcomps
add
loope
sbb
stos
pushf
hlt
ret
push
mov
pop
mov
and
inc
stos
sub
pop
dec
sub
ret
mov
inc
aad
out
mov
xchg
add
outsl
mov
dec
fldt
mov
js
mov
js
pop
add
sub
pusha
in
jnp
inc
ds
xor
test
sub
lods
mov
pop
cmpsl
cld
lds
adc
fstl
sbbb
mov
inc
sub
and
movsl
nop
js
dec
add
push
stos
add
inc
pop
adc
xchg
inc
popf
add
nop
mov
pusha
cmp
xchg
scas
out
push
in
outsl
mov
hlt
clc
mov
or
scas
sbb
leave
cmpsb
shll
lea
xchg
popf
pop
roll
cmpsl
adc
dec
adc
cmp
sbb
and
in
movsb
fwait
add
and
add
xchg
sbb
push
cs
mov
inc
inc
repnz
std
fs
in
mov
jle
cld
xchg
sbb
inc
push
sarb
lea
push
out
push
mov
inc
popf
ret
inc
adc
sbb
inc
mov
int3
int
pushf
shrl
xchg
jbe
popl
cmp
cli
scas
cmpsb
inc
add
or
sti
inc
jb
sub
adc
and
cmp
je
dec
push
sub
test
or
sahf
ds
cmpsb
fiadds
jnp
cs
imul
ljmpw
mov
mov
pushf
sahf
push
jbe
repnz
sbb
rolb
xchg
dec
dec
repnz
adc
popf
mov
shr
shrl
cli
cli
ja
pop
sbb
pop
and
pop
insl
mov
mov
cmp
inc
imul
mov
hlt
cmpsl
in
and
aad
sbb
push
mov
mov
popf
es
add
cmp
fwait
push
jle
ljmp
stos
xchg
std
push
inc
fistps
adc
mov
mov
stc
inc
bnd
dec
mov
icebp
and
push
adc
repz
lahf
mov
aaa
push
cli
jecxz
cmpsl
xor
aaa
or
pop
divb
dec
repnz
cwtl
fcoms
dec
lods
neg
xchg
sbb
scas
sahf
xor
push
pop
jns
and
dec
cld
mov
dec
add
and
dec
cld
add
and
movb
stos
aaa
ret
out
icebp
addr16
fimuls
mov
cmp
es
and
cmp
pop
test
in
and
je
fiaddl
pop
mov
xchg
lret
xor
stos
addl
leave
cmpsl
mov
sub
sbb
xchg
int
lea
mov
and
add
fcomp
pop
inc
xchg
adc
fcompl
mov
or
mov
mov
shlb
push
jg
inc
adc
push
cwtl
mov
mov
push
add
cmpsb
or
mov
stos
mov
or
xor
aad
mov
mov
jnp
sbb
mov
arpl
je
aam
cli
rcr
movsb
dec
stc
int
aam
ljmp
pop
pop
cmpsl
loop
mov
sbb
mov
xchg
inc
add
out
insl
pop
mov
add
jge
movsl
ficompl
cmp
add
in
popa
ds
mov
sub
push
cwtl
insl
aas
inc
mov
orl
in
and
jbe
into
and
mov
inc
xor
sbb
sbb
popa
mov
sub
push
bnd
mov
add
dec
fs
pop
and
sbb
or
pop
aaa
cmc
sbb
mov
outsb
frstor
out
lcall
cmp
pusha
fcompl
addr16
test
xchg
adc
inc
mov
mov
jmp
notl
jb
mov
std
jmp
mov
sub
lods
add
inc
loop
xchg
adc
mov
repz
inc
mov
insl
xor
fdivl
ljmp
fmul
je
mov
sbb
test
outsb
xor
dec
mov
xchg
jecxz
aam
repnz
test
lods
inc
xor
cli
cli
inc
sbb
sbb
push
mov
inc
popa
lret
adc
imul
in
xor
jl
aad
sub
xor
add
stos
jmp
leave
adc
sub
and
mov
mov
mov
pop
and
or
scas
and
xor
sahf
ret
rcll
xchg
test
sub
mov
je
js
andb
fildl
xchg
jno
imul
scas
xchg
sub
mov
nop
and
add
and
push
leave
add
aas
stos
out
pushf
enter
push
pop
lahf
xlat
cmpsl
insb
sub
int
stos
pop
cmp
pop
dec
inc
inc
and
mov
ds
xor
jge
jl
and
mov
cmpsl
insb
xor
mov
mov
pop
push
xchg
cmp
cmp
fisttpl
insl
sub
movsl
js
lahf
hlt
sbb
add
xchg
test
pop
ss
int3
mov
push
pop
xlat
das
pop
dec
loope
add
cli
lock
fmull
xchg
loope
xchg
dec
into
aad
aad
cld
loopne
out
mov
std
or
mov
mov
imul
cmp
add
add
mov
push
xchg
pushw
popa
scas
sub
testb
and
or
loope
and
add
lock
pushf
daa
adc
xor
aad
dec
xchg
roll
pop
scas
push
pop
lods
or
jne
push
in
addr16
mov
mov
ds
jg
incl
xlat
stos
jbe
cmp
repz
sub
cli
data16
adc
sbb
jb
int
call
mov
clc
mov
out
jo
or
cld
testl
pop
xchg
int3
les
dec
stc
and
sub
xor
fbstp
and
lods
mov
in
dec
inc
loop
inc
icebp
fdivs
jae
xor
push
repz
int3
push
inc
pop
xchg
jbe
fst
cli
dec
popa
mov
sub
repz
fwait
cmpsb
add
mov
ss
pop
cmp
adc
call
mov
outsb
test
loope
jecxz
or
sbb
mov
jge
adcb
inc
sub
fcmovnu
out
pop
stos
popf
aas
lock
addr16
cmp
icebp
adc
xchg
mov
test
mov
scas
mov
cmp
dec
dec
mov
pop
sub
sbb
cs
add
inc
jne
jne
imul
jno
out
clc
dec
aam
xor
jns
mov
sar
outsb
mov
sub
lods
xor
cmp
push
cmp
xlat
incl
ljmp
push
jbe
jp
sahf
cwtl
adc
movsb
incb
ljmp
push
pop
cmpsl
pop
dec
scas
adc
xchg
pmaxub
leave
dec
lahf
adc
repnz
hlt
scas
xor
jp
out
in
adc
xlat
cld
jp
pushf
mov
addr16
sub
dec
push
jb
mov
or
rcrl
das
mov
lods
fistpll
jecxz
shl
fwait
pop
out
cmp
mov
int3
pop
mov
cmc
mov
sbb
ret
xchg
push
gs
call
ss
push
sub
jmp
jbe
mov
das
push
loopne
and
js
add
or
divb
gs
cmpsb
das
jns
mov
pusha
jg
shrl
mov
or
pop
jno
ljmp
jne
test
jg
add
mov
sti
rcll
fucomp
lahf
loope
xchg
movsb
pop
fimull
mov
or
jo
and
sbb
xchg
outsb
and
and
ret
cltd
popa
in
mov
icebp
mov
addr16
mov
cmp
inc
repz
lods
insl
cmp
cmpb
daa
push
add
faddl
out
inc
xor
outsb
jmp
pop
aam
add
adc
aas
xchg
pop
arpl
or
cmp
outsl
sahf
and
xlat
mov
int3
pop
hlt
or
fsubrl
cmpsb
xorps
shrl
orl
pushf
and
xchg
in
out
fmuls
add
pop
clc
xchg
pop
pop
mov
outsb
out
add
xor
sbb
xchg
and
rcrl
fprem
mov
sub
jnp
shlb
pop
mov
mov
fnstsw
sub
jnp
cmp
jae
imul
rdtsc
sub
mov
stc
lahf
rcrb
mov
pop
std
xchg
mov
in
aas
movsb
and
ret
les
mov
and
js
jecxz
pop
loop
xchg
jno
outsb
dec
sub
inc
dec
inc
pop
imul
orb
or
mov
pop
mov
gs
jecxz
scas
int
and
xor
pop
mov
ficompl
sahf
cmc
add
xlat
addb
popa
jo
jp
repz
test
in
sub
imul
push
ss
mov
push
fisubrs
xor
or
cmpsb
jne
stc
xchg
out
not
adc
inc
rorb
xchg
adc
mov
loop
cmp
ret
jge
cs
leave
in
mov
adc
jae
in
sbb
xchg
xor
ja
lcall
pop
out
pushf
pop
mov
pop
jb
add
and
popf
add
aaa
pop
es
mov
js
push
xchg
lods
jb
mov
sub
add
xchg
arpl
adc
mov
mov
push
mov
mov
mov
xchg
push
sub
cld
cli
outsb
sbb
mov
mov
lds
iret
ficoms
cwtl
jecxz
gs
push
lods
pop
rclb
mov
nop
jg
jo
popa
rol
bound
mov
xchg
mov
adc
pop
mov
dec
das
icebp
cwtl
pop
out
jge
aad
push
hlt
cmp
outsb
das
inc
mov
push
insb
fiadds
mov
sbb
nop
mov
insl
and
les
rorb
mov
mov
shrb
cwtl
jl
lahf
xchg
test
mov
stc
test
call
cmpl
pop
pushf
out
xchg
cli
mov
cmp
or
stos
sbb
pop
and
lret
shrb
and
negb
cmp
lock
push
shrl
xlat
dec
push
jg
das
jl
mov
push
outsl
rcll
clc
popf
fistpl
add
jo
pop
mov
jnp
mov
test
jle
lret
sbb
adc
dec
mov
test
inc
xchg
in
icebp
loope
imul
aad
cmp
es
inc
push
push
popf
daa
cmpsb
xor
repz
cmp
xor
fs
inc
jo
aaa
pop
bswap
xor
nop
mov
shll
dec
pop
sub
out
inc
test
dec
adc
popf
movsb
dec
xor
xlat
mov
test
pop
cmovb
lods
test
add
shr
rol
push
xor
ja
int
or
mov
loope
sub
xchg
leave
rcrb
cmp
add
in
cmpl
lods
inc
add
push
push
rcrl
jecxz
or
aas
and
loope
dec
mov
mov
xlat
loop
andb
sbb
stos
test
push
ljmp
test
inc
jge
add
adc
cmp
xorb
xchg
jp
sub
cmp
push
add
or
dec
pop
push
mov
leave
mov
mov
add
rclb
mov
and
inc
out
cmp
mull
lret
inc
inc
outsl
dec
loop
rclb
adc
fnstsw
adc
adc
scas
aad
and
aad
sbb
es
push
xlat
rcr
js
xchg
addr16
repnz
sti
int3
and
jl
xlat
adc
stos
lds
fdivrs
mov
mov
dec
cmp
inc
add
adc
shrl
cmpsl
scas
je
int
sub
mov
lds
test
aam
ret
mov
out
int3
test
dec
test
les
jle
mov
jge
ja
aaa
mov
mov
mov
push
inc
inc
mov
movsb
rcrl
lret
cmp
xor
ret
and
movsb
lods
xchg
stc
cli
fidivrl
js
push
imul
shl
add
clc
movsl
push
stos
xchg
jno
insb
jge
mov
mov
mov
inc
mov
pop
pop
ficompl
xchg
sbb
xchg
add
scas
sub
ljmp
je
aaa
sarb
jge
mov
sbb
add
sub
and
data16
fnstcw
mov
cwtl
xchg
aaa
popf
sub
lret
daa
xchg
jle
insl
bound
inc
jb
out
testb
out
adc
push
test
xorb
and
in
lods
bound
jns
aam
pop
xchg
mov
into
mov
int3
push
adc
lcall
inc
inc
jne
call
or
adc
jp
mov
mov
inc
icebp
and
mov
xchg
xor
or
inc
sbb
mov
adc
or
in
inc
sub
sub
jecxz
repnz
sub
lahf
push
fidivrl
in
xor
sahf
ret
je
fmull
mov
xchg
jge
add
clc
fbstp
dec
sub
jnp
xchg
sti
xchg
fisttpl
xchg
mov
and
aas
pandn
out
push
aas
sbb
add
iret
cmp
out
clc
lods
jl
adc
mov
data16
jecxz
rcrb
push
cmpsb
clc
iret
movb
add
dec
xchg
push
xor
adc
lea
xchg
shrb
xor
call
fs
push
xlat
loop
aad
pop
bound
mov
mov
inc
outsl
mov
jge
inc
xlat
imul
jg
xchg
pop
cmp
xchg
pop
xor
mov
or
dec
and
adc
mov
push
pop
xor
rcrb
dec
and
ror
into
and
mov
cli
orb
mov
mov
jl
sahf
xchg
xchg
popf
repz
adc
es
repz
pop
jb
push
sbb
loope
repz
xchg
sub
dec
cltd
mov
in
adcb
add
movsb
cs
test
xlat
push
jle
sub
or
push
ljmp
mov
jg
dec
pop
push
dec
daa
cli
push
lds
adc
mov
push
ja
mov
lods
cmp
xchg
add
add
jle
mov
cmp
dec
fsts
dec
xchg
adc
pop
dec
mov
rcr
das
push
lretw
out
jge
push
sarb
xchg
jecxz
lock
out
jg
rcll
jbe
fbld
lods
xchg
iret
sbb
mov
jmp
imul
gs
jp
hlt
inc
xchg
in
popl
test
das
pop
push
or
outsb
xor
les
or
shrb
xchg
inc
xchg
ficoms
cli
fsubrs
ds
cwtl
inc
and
mov
sbb
jg
sub
cli
scas
jmp
xor
and
fimuls
jo
xor
jmp
data16
push
and
push
scas
jne
jnp
jg
insl
js
aaa
jb
das
shlb
mov
adc
adc
pop
hlt
loop
dec
jl
mov
lods
sbb
fidivrs
icebp
xor
push
aam
loopne
mov
out
or
inc
or
dec
pop
repnz
mov
xchg
inc
jae
loope
aam
cmp
inc
cmp
pop
jge
lahf
jmp
pushf
int3
cmpsl
int3
lods
std
pop
jecxz
call
mov
sarb
inc
sub
repnz
pushf
sbb
xadd
inc
ret
aad
add
inc
push
and
cli
pop
std
mov
mov
cmp
xchg
cmpsb
mulb
shll
push
std
push
sti
fcmovnu
shl
xchg
xchg
xchg
inc
lock
pop
cmp
es
jnp
orb
stos
xchg
sub
mov
jp
inc
pusha
add
out
cli
xlat
inc
out
sub
scas
sub
mov
lea
jle
mov
enter
pop
and
add
mov
fnstsw
xor
xchg
push
xchg
std
and
imul
xor
sub
jmp
mov
sarb
jmp
cmp
inc
bound
mov
mov
sarb
jb
lods
sub
sub
or
mov
pop
dec
adc
mov
leave
insl
sahf
xchg
sete
mov
inc
xchg
xchg
push
jp
fdiv
arpl
push
push
ljmp
pop
mov
cmp
in
mov
stos
inc
push
xchg
sarb
adc
and
and
adc
fidivl
mov
dec
fwait
imul
add
add
mov
neg
hlt
in
or
mov
xchg
sub
jne
mov
lahf
push
scas
sub
cli
cmpsb
push
ret
dec
xchg
sub
cmpsl
lret
xchg
aad
xchg
cmc
lret
jnp
out
inc
hlt
into
out
out
push
push
pop
cmp
sbb
test
dec
adc
loop
inc
addl
lcall
in
jae
cmpsb
mov
cmpl
push
jne
mov
or
iret
loopne
pop
bound
jmpw
sub
cmpsl
lods
cmpsl
push
cmp
dec
imul
sahf
shr
jl
mov
xor
cwtl
sub
sub
loopne
nop
pop
aad
inc
cmp
xchg
mov
mov
gs
test
aad
pop
push
jnp
shl
push
mov
and
xchg
dec
adc
lcall
stc
jae
shl
nop
xlat
repz
pop
out
pop
rolb
das
push
jbe
inc
xor
xor
fdivrl
xor
push
jge
inc
out
jp
outsb
popl
push
add
test
hlt
movsb
adc
data16
ror
or
inc
addr16
xorl
sbb
cwtl
pop
mov
mov
test
dec
pushf
daa
mov
push
data16
out
fwait
xchg
loop
ljmp
movsl
fcomip
xchg
daa
mov
ljmp
inc
sahf
cmp
jle
mov
ja
imul
and
push
insl
sbb
es
mov
cmp
test
adc
out
aam
sbb
sub
mov
in
dec
xchg
mov
fsub
fcmovb
pop
mov
xor
jge
push
or
sub
inc
in
std
xlat
fwait
mov
and
rorb
push
add
outsl
cmp
mov
mov
outsl
test
sbb
das
pushf
jmp
sbb
xchg
pop
loope
aad
iret
adc
movsl
adc
cmpsl
scas
sbb
add
inc
push
sub
jle
rcll
pop
pop
lea
xchg
and
jbe
mov
fld
mov
mov
cmova
jno
mov
adc
xor
xor
loope
jae
push
in
ja
out
call
push
into
xchg
or
out
notb
adc
cli
cmp
xchg
popf
ficompl
jb
outsl
icebp
jae
cmp
aaa
inc
negb
add
sbb
loope
and
jecxz
fiaddl
or
pop
push
fldcw
out
xor
popf
push
xor
jno
jne
stos
btl
sub
stc
pop
fdiv
sbb
mov
test
lods
les
mov
mov
sub
test
dec
adc
cmp
mov
xor
leave
rorl
add
inc
mov
xor
dec
pop
mov
addr16
jbe
fmul
aaa
push
fstpt
ret
sub
lods
out
outsl
out
std
ljmp
xor
push
inc
push
push
sub
lock
mov
arpl
jae
bound
xchg
bound
rcll
les
dec
andl
movsl
addr16
pop
inc
je
nop
nop
fsts
push
push
xor
lods
mov
dec
imul
jecxz
jp
in
and
jle
mov
aas
loop
and
orl
ret
cmp
sub
inc
lds
jne
mov
cmp
lods
cmpsl
test
std
xchg
mov
cmc
xchg
mov
ret
notb
pop
jb
pop
aam
fidivrs
mov
rorl
imul
es
xchg
cmc
fsubs
push
int3
jecxz
jecxz
jbe
movsl
pop
cmc
mulb
in
sub
xchg
pop
imul
cs
push
stos
push
mov
push
fstps
pop
repnz
adc
mov
inc
out
ret
dec
push
in
mov
adc
sbb
insb
fs
lcall
jg
xchg
xor
push
mov
jo
cmp
mov
mov
sti
adc
pop
dec
xchg
cltd
sub
mov
lret
dec
and
push
sub
dec
call
jae
and
cmp
mov
inc
lock
sbb
aad
pop
and
jb
fldl
cmp
dec
mov
jns
enter
adc
inc
daa
std
xchg
adc
nop
mov
pop
stos
pop
insb
inc
lcall
cmp
push
faddl
mov
psrad
mov
repnz
or
cmpsb
addr16
xchg
aas
int
jecxz
int3
fimuls
lods
dec
and
fcmovbe
out
add
lret
jnp
std
xlat
cwtl
data16
and
cs
cmp
cmc
sbb
jmp
push
jecxz
fdivrl
or
mov
cmp
or
in
mov
mov
sbb
jns
in
mov
sbb
or
or
sub
test
jle
sbb
jl
cld
stos
xor
inc
pop
push
xor
mov
add
xor
shlb
sub
jl
ss
inc
and
xorl
lods
and
mov
push
fwait
xor
outsb
in
insl
into
inc
mov
xor
mov
sub
adc
xor
mulps
xor
xchg
sub
xchg
icebp
clc
leave
bound
xchg
xor
hlt
test
push
mov
lret
xchg
sub
jle
test
movsl
sahf
pop
mov
pop
int
adc
out
push
out
aad
jl
and
inc
mov
clc
inc
enter
arpl
jl
mov
loope
adc
mov
icebp
mov
push
xchg
fcoml
adc
pop
fwait
xor
cld
fbstp
jbe
repnz
cmp
fdivl
inc
add
mov
pusha
inc
adc
push
and
push
lods
ss
xchg
cmp
adc
jmp
sub
cmpsl
mov
popf
aaa
mov
addr16
jl
push
xchg
idivb
movsb
jb
mov
jb
leave
iret
xchg
pop
cmc
fisubrs
mov
xchg
lea
stos
fistpll
push
sahf
adc
in
repz
orl
std
outsb
rclb
xchg
or
test
outsb
pop
or
sahf
push
in
mov
lods
mov
icebp
xor
dec
dec
or
fs
add
dec
popf
in
loop
add
movsl
in
loop
addb
mov
movsl
aad
push
loop
js
lock
sbb
in
out
mov
mov
mov
pop
mov
insl
push
mov
and
mov
mov
data16
adc
out
addr16
lds
adc
add
iret
lds
into
jge
mov
fsubl
test
fildll
adcb
jle
jb
mov
sub
insb
out
and
cmp
ret
in
shrb
stc
jg
arpl
xchg
aas
xchg
adc
xor
mov
orl
jle
jo
mov
mov
cltd
mov
shll
add
add
push
imul
mov
or
push
loop
dec
movsl
fidivl
std
addr16
mov
movsl
inc
orl
test
xor
sarl
add
lods
mov
inc
pop
mov
inc
enter
sub
xor
mov
pop
sbb
mov
inc
roll
shll
xor
sub
sbb
jo
stc
and
mov
xchg
xor
xor
in
loopnew
push
pop
lea
int
jl
push
imul
scas
inc
call
jnp
repnz
xchg
or
ds
push
lods
popf
push
jp
sbb
mov
out
mov
pop
sub
sub
fisubs
test
xor
xor
ja
jp
int
jmp
adc
push
insl
andl
pop
adc
mov
testl
out
push
mov
xchg
push
xchg
and
and
fwait
xchg
iret
jmp
fmuls
xor
add
lds
sbb
adc
cmc
rorb
insl
cmp
call
jecxz
pop
xor
push
hlt
lret
adc
jno
dec
and
rol
xor
outsb
xor
xchg
test
push
cli
jno
push
dec
jb
pop
mov
frstor
jl
ret
xor
jecxz
mov
xchg
push
mov
mov
movsb
lds
fwait
mov
addr16
fists
inc
fists
shll
push
push
inc
inc
call
add
push
fisubs
test
cmp
ds
and
in
and
insb
cmpsb
mov
imul
outsl
jmp
mov
sbb
lea
fdivs
inc
sahf
cmpsl
arpl
imul
nop
cmp
testl
cmc
mov
nop
push
popa
outsl
inc
fisubl
dec
outsl
adc
daa
pop
jle
mov
lea
call
cmpsl
clc
ljmp
xchg
inc
movsl
jl
or
jge
repz
pusha
ljmp
divw
inc
dec
mov
shll
xchg
and
push
jae
lret
cmp
or
dec
mov
sbb
jecxz
inc
sbb
test
inc
movsb
mov
popl
ficoml
pop
adc
in
jp
jg
ret
imul
lret
adc
jne
ds
outsb
mov
or
push
inc
shrl
stc
push
scas
or
shll
orl
xlat
arpl
leave
jae
pop
repnz
lods
lds
mov
sub
loop
mov
cld
dec
xor
add
test
mov
clc
int
xchg
repz
xchg
push
inc
daa
out
call
inc
mov
xchg
mov
mov
insl
shl
popf
jae
insl
mov
daa
out
and
lods
aam
jno
call
mov
mov
push
sbb
xor
fptan
fs
ss
sti
jle
popf
lcall
mov
es
enter
das
cmpsl
inc
sbb
jg
lcall
adc
movsl
call
scas
and
or
leave
in
mov
push
je
nop
ljmp
lcall
lret
ds
ficoms
lock
cmpsl
das
jns
jl
outsb
dec
arpl
cmp
adcb
or
xchg
insb
dec
push
xlat
adc
dec
jb
cmp
pop
mov
lock
dec
add
mov
std
mov
mov
add
test
mov
dec
or
add
loope
push
and
in
arpl
out
decb
jne
xor
in
push
inc
mov
mov
loopne
pop
xchg
lods
inc
jno
ret
sub
xor
xchg
or
jne
sahf
mov
inc
cmpsb
pop
idivb
dec
xchg
insb
jae
mov
sub
aas
stc
xchg
out
neg
mov
mov
and
movsb
js
mov
mov
inc
aad
jns
push
mov
repnz
leave
push
fcmovne
jp
mov
push
icebp
xchg
mov
cmp
pop
loop
fdivs
imul
push
movsb
mov
pushf
lds
js
stos
jecxz
xchg
fcom
ret
jns
sub
jecxz
push
push
fisubs
sahf
addl
add
jo
fsubr
sti
mov
imul
sbb
dec
cltd
xchg
lcall
popf
cmp
enter
mov
mov
jb
xor
mov
or
shrl
sbb
fisttpll
adc
push
jno
jne
mov
sbb
fnstsw
stos
jb
fcomp
call
stc
pop
clc
cmc
pop
bound
dec
lock
push
shlb
ret
movsb
pop
movsl
sub
into
aas
adc
jl
mov
cmp
jae
xlat
popf
shl
mov
mov
movsb
aad
inc
outsb
sub
xor
sbb
mov
cmp
cwtl
enter
outsl
and
lea
mov
repz
arpl
push
pop
mov
pop
pop
mov
inc
jo
dec
filds
sub
js
icebp
repnz
mov
inc
roll
lods
or
cmpsb
xchg
loopne
push
mov
cmpb
daa
sub
hlt
rcrl
jge
in
rcll
jbe
shll
mov
lock
inc
cwtl
daa
and
and
jge
dec
scas
imul
push
leave
push
mov
das
aad
popf
sete
fidivrl
sub
inc
ljmp
mov
or
mov
dec
aas
push
out
mov
fldt
jg
fists
push
xor
pop
mov
cmp
mov
mov
mov
mov
orb
dec
iret
js
push
mov
jecxz
cmp
lods
mov
and
lds
aam
lret
stc
in
lcall
adc
xchg
xor
imul
adc
cmpsb
jecxz
hlt
mov
mov
mov
sub
mov
push
jb
mov
push
pop
sub
xor
push
sti
jb
lea
cwtl
hlt
xchg
inc
xchg
jns
mov
xchg
shll
jno
arpl
cmc
or
inc
push
jnp
mov
push
lcall
hlt
ffree
dec
push
sbb
lcall
das
test
orb
aaa
add
jecxz
hlt
mov
cmp
push
jle
frstor
xchg
sub
mov
movsb
movsb
sub
jg
cs
cld
lods
or
inc
mov
add
leave
sub
cmpb
push
ljmp
xor
xorb
cmp
fidivs
jge
sahf
in
xor
sub
inc
rorb
pop
cwtl
sahf
jmp
xchg
sbb
in
hlt
mov
push
mov
push
xchg
outsb
mov
aam
movsl
aaa
or
icebp
mov
shlb
mov
sub
mov
lea
ds
push
imul
ds
mov
iret
cli
pop
adc
mov
sbb
dec
aam
jle
nop
outsl
pop
ds
add
adc
pop
mov
mov
xor
lret
cltd
mov
cmp
emms
dec
mov
ficoml
inc
fldenv
cld
pop
std
subl
repz
adc
pop
call
jne
scas
inc
lahf
sbb
mov
adc
mov
decb
and
mov
mov
pop
mov
xchg
rorb
gs
mov
testb
sbb
or
lret
xchg
dec
mov
in
fwait
mov
dec
cmc
lea
jecxz
outsb
adc
or
sbb
stos
leave
pop
sub
and
je
dec
jp
mov
push
stos
das
inc
mov
pop
adcl
in
mov
or
pcmpgtd
loopne
xlat
lock
enter
sbb
jnp,pn
call
in
pop
xchg
sahf
mov
sbb
or
cmp
dec
sbb
fdivp
add
fidivs
push
push
ss
ror
int
add
cli
in
xor
movsb
repz
rcrl
test
xchg
insb
sbb
aam
andl
js
test
push
mov
cmp
mov
push
inc
and
popf
leave
fsub
ret
pushf
push
push
push
xor
mov
mov
hlt
pop
les
cmp
iret
pop
je
or
pop
sar
in
test
xchg
pop
mov
cmpsb
inc
pop
mov
andb
sbb
sub
fildll
xor
xor
ret
mov
loop
in
mov
xchg
scas
mov
xchg
mov
mov
outsl
or
test
xchg
cmp
jmp
adc
arpl
outsb
add
mov
inc
pop
jb
push
mov
or
lcall
imul
ja
repnz
pop
test
push
adc
sahf
shl
inc
pop
and
addl
js
xor
sub
or
insl
xor
imul
pop
je
out
jno
or
cmp
arpl
imul
mov
mov
addr16
inc
stos
adc
inc
test
mov
lahf
fcoms
fmull
int3
cmp
clc
jne
push
mov
inc
and
and
popa
mov
push
nop
bound
push
push
sbb
out
push
dec
jno
ss
push
fwait
popl
mov
sbb
ds
nop
inc
adc
das
xchg
pop
add
inc
pop
sbb
pop
mov
xor
mov
adc
pop
and
iret
js
ja
cmp
push
dec
or
and
movsl
test
bound
insb
nop
mov
lods
hlt
inc
in
sbb
sbb
f2xm1
arpl
into
cmp
mov
mov
loopne
lds
enter
xor
push
aam
pop
mov
and
dec
lock
test
bound
ds
mov
popf
test
dec
or
sysexit
stos
fldenv
jno
inc
jmp
imull
ja
in
sub
cmp
xor
xor
mov
dec
insl
push
sbb
outsl
mov
sbb
ljmp
fdiv
cmpsl
mov
jge
bound
shrl
xchg
inc
iret
inc
cs
sti
pop
push
mov
ja
sbb
push
or
lods
push
xor
push
leave
pop
icebp
insb
xchg
in
fistps
data16
dec
pop
cmp
shrb
repz
ja
and
rolb
xchg
sub
sub
mov
scas
or
pop
icebp
das
pop
add
mov
jns
insl
dec
adc
xchg
mov
lds
in
insl
lock
imul
loop
or
push
or
test
in
or
sahf
push
or
push
or
cmp
lcall
mov
adc
outsb
scas
jo
or
cs
push
loopne
mov
lret
pop
sbb
push
stc
xchg
dec
push
add
movsb
mov
addr16
outsl
bound
add
or
ror
enter
inc
out
stc
jno
mov
sbb
in
in
cltd
outsb
movsl
lods
pushf
push
clc
pop
mov
inc
cmp
insb
and
adc
push
inc
rolb
mov
std
iret
inc
mov
xor
jg
mov
inc
inc
mov
cmp
rcrb
fcoms
xor
and
popf
dec
in
cmpsb
pop
lods
nop
and
adc
cmpsl
pop
arpl
mov
roll
add
in
jge
mov
mov
pop
and
lods
fisttpll
jnp
inc
cltd
popf
sti
dec
inc
or
movsb
jns
jg
push
pop
pop
mov
pop
xchg
inc
testb
mov
dec
mov
stos
xor
mov
stc
fisttpll
mov
icebp
and
adc
pushf
in
leave
add
jmp
pop
loopne
ss
in
jp
pop
cmpsl
push
clc
rorb
std
jb
pop
lcall
mov
xor
adc
fimull
mov
cld
dec
pop
pop
mov
fcmovnbe
mov
push
leave
mov
adc
adc
xchg
mov
lret
rcr
add
stos
arpl
pop
repnz
xor
fisubs
imul
int3
scas
in
jmp
std
sub
sub
add
mov
aad
test
mov
xchg
nop
out
or
dec
pop
mov
lret
push
mov
out
sbb
mov
movsl
je
sar
int3
out
clc
aaa
mov
ret
loopne
fsubs
pop
sbb
push
xchg
shll
lcall
add
pop
add
cmp
and
gs
xorb
mov
mov
mov
movsl
mov
mov
in
sbb
mov
test
jne
outsb
jp
das
das
or
nop
mov
fadd
int
mov
leave
or
mov
inc
jp
xchg
js
mov
mov
repnz
arpl
inc
push
cwtl
cmp
imul
mov
cld
sbb
mov
mov
dec
repz
inc
cltd
mov
and
rcrl
xchg
push
bound
idivl
clc
inc
fisubs
in
repz
xchg
ret
sti
rorb
popa
mov
sbb
cmpsb
sbbb
sbb
ret
add
inc
std
sub
sbb
dec
insl
popf
jne
decl
js
push
sbb
enter
xchg
mov
iret
mov
into
addr16
je
bound
adc
inc
dec
pushf
in
jae
xchg
sarb
dec
popa
pop
loope
add
lcall
cmp
cmp
rep
pushf
add
aaa
xchg
nop
popa
std
ljmp
enter
ficomps
jg
fwait
pop
inc
mov
xlat
popf
orl
xchg
std
add
add
ds
daa
leave
xchg
sub
cmp
or
inc
xchg
and
lahf
lahf
jmp
cmp
mov
outsl
sti
mov
lahf
repz
insb
add
outsl
push
xchg
pusha
xchg
out
pop
lods
cld
xchg
int
mov
jg
push
mov
ljmp
movsb
int
lock
das
push
ljmp
in
xor
mov
scas
sahf
ja
gs
pop
or
push
sbb
jge
movsl
aam
fnstenv
leave
inc
or
or
stos
scas
ds
mov
mov
inc
popa
aas
fisubrl
cltd
jae
sbb
into
cmp
xor
lcall
xchg
icebp
push
mov
xchg
or
or
lods
call
jg
xor
inc
popa
cld
push
adc
jae
and
divb
subl
jmp
pop
mov
ljmp
mov
push
sbb
repnz
jl
xchg
negl
je
insb
aas
arpl
arpl
inc
les
popa
jno
jge
push
and
lahf
hlt
nop
ret
and
jmp
movsl
jge
inc
mov
pop
pop
xchg
jmp
out
xor
js
xor
inc
loop
mov
fidivl
push
inc
subb
xor
repnz
lret
add
int
mov
movsl
push
stos
bound
fsubrs
jmp
adc
scas
inc
and
cmp
xor
fildll
pushf
out
mov
ret
icebp
ss
out
and
xchg
inc
leave
mov
inc
lcall
test
test
sbb
jle
jo
pop
sbb
addb
int3
out
mov
or
pop
sbb
xchg
xchg
mov
je
sti
das
pop
jnp
ljmp
int3
push
movsl
mov
dec
sbb
test
dec
or
leave
pop
mov
gs
jnp
cs
ds
shlb
out
jecxz
push
lret
lods
fisubs
xchg
sbb
int
outsl
push
stc
mov
mov
mov
dec
aas
lock
ret
std
xchg
movsl
cmp
loopne
sub
sarl
mov
push
std
cli
ret
adc
jae
sbb
fistpll
aam
out
and
push
xor
dec
mov
pop
je
js
in
xor
xchg
lret
das
fnstcw
mov
mov
fwait
sub
data16
in
inc
jg
fnsave
adc
lcall
loope
pop
icebp
inc
add
mov
xchg
jae
sqrtps
sti
es
lock
mov
push
sub
inc
mov
std
lcall
cmp
sbb
addr16
stos
fucomi
inc
sahf
movsl
fmulp
out
mov
lods
inc
mov
sbbl
into
int
mov
dec
cmpsl
cmp
leave
popf
push
bnd
shll
or
das
inc
xor
xorl
scas
imul
rcll
call
cld
mov
rclb
cmc
cmc
lret
js
and
loope
inc
inc
leave
push
cmpsb
mov
jnp
jb
cmp
xor
mov
and
dec
notl
adc
sub
push
xchg
push
xor
outsb
add
sub
cmp
inc
add
ds
fwait
xchg
aad
mov
repnz
mov
adc
and
mov
movsl
nopl
inc
pop
push
mov
mov
cmp
xchg
aad
dec
adc
notb
jae
lods
mov
out
cmp
pop
insb
or
cmc
sub
hlt
test
lcall
mov
adc
out
add
jmp
sub
jnp
imul
push
aad
push
add
les
jg
dec
leave
mov
std
sbb
xchg
iret
aam
ffreep
pusha
fs
and
mov
addr16
es
or
push
sbb
test
popa
testl
sub
cmpb
sub
scas
stc
cmp
rcrb
mov
mov
pushf
and
mov
fimull
fdivr
ss
jo
mov
dec
stc
sbb
mov
cmpsb
add
sub
or
rolb
push
jbe
push
outsb
and
out
add
xchg
jmp
imul
stos
ds
jo
jp
fisubrl
movsl
and
and
ljmp
push
cmp
mov
mov
inc
aas
mov
add
lock
pop
fcmovnbe
sub
cs
and
cmp
ss
cmpsl
jecxz
add
out
scas
orb
sbb
adc
mov
mov
push
jo
ja
add
inc
or
sub
dec
imul
addr16
inc
mov
std
test
repnz
ds
enter
lret
scas
ret
push
cmpsl
pop
movsl
pop
mov
jmp
inc
jns
shlb
call
or
frstor
les
xor
fildll
adc
sti
sbb
cmp
in
xchg
imul
xchg
sub
js
insb
xor
movsb
pop
outsb
pop
sub
xchg
adc
fs
xor
or
sub
inc
fsub
ljmp
pop
mov
pushf
lret
jne
mov
idiv
lret
pushf
adc
cmc
mov
mov
divl
mov
cld
adc
ret
mov
outsb
sbb
cmp
cld
add
jae
fnstenv
mov
mov
jle
cmp
xrelease
sbb
movb
jne
in
addr16
pcmpgtb
mov
shrl
jl
mov
adc
std
pop
cwtl
mov
sub
adc
cs
jb
inc
adcl
mov
push
out
push
xor
mov
mov
jmp
jmp
push
lds
fstpt
roll
pop
add
xor
js
jge
dec
clc
fmuls
adc
aad
inc
sti
jo
adc
loopne
jmp
fistl
lds
pop
sub
outsl
mov
add
adc
in
ds
xchg
inc
cmp
or
stos
loopne
cwtl
jne
cmp
fwait
jnp
adc
add
inc
mov
xor
lock
adc
xor
cmc
int
aad
stos
cmpsb
popa
pusha
dec
xchg
ja
add
rcrb
fs
add
dec
inc
jno
mov
cs
sbb
in
add
sbb
adc
je
pop
jle
popf
or
test
mov
in
xor
adc
mov
inc
mov
xchg
pop
pop
scas
inc
sbb
pop
adc
outsl
insb
ss
add
cmp
sub
inc
ss
inc
loop
mov
pop
cld
and
hlt
mov
and
addr16
enter
and
and
mov
xchg
push
sbb
jle
xor
cwtl
mov
sub
in
pop
jbe
aas
inc
sub
pop
cmp
mov
dec
sub
je
cs
jmp
dec
xchg
test
and
xchg
sbb
or
push
jae
aas
mov
inc
sbb
pushf
out
rorb
push
pusha
decl
xchg
dec
imul
mov
or
dec
fdivl
add
adc
loope
xchg
movsb
mov
or
inc
iret
dec
xchg
inc
scas
cmp
push
mov
mulb
ljmp
clc
sbb
outsl
mov
in
repnz
out
mov
outsl
pusha
fldl
sbb
fdivp
jmp
int3
clc
pop
jns
push
pop
lcall
loope
jle
sub
add
sbb
sub
frndint
jnp
clc
push
repnz
pop
pop
jmp
inc
xchg
mov
mov
jg
lahf
fstps
jnp
push
push
fs
lods
jge
lds
out
xchg
jl
push
pop
mov
push
sbb
rcll
pop
outsl
stc
mov
into
lret
push
pop
inc
add
iret
adc
cli
mov
push
xchg
loopne
sub
lea
mov
jne
jle
scas
cs
sti
mov
into
cmpsb
sbb
inc
cld
sub
imul
in
clc
rcll
sbb
sub
push
dec
mov
mov
notl
sbb
scas
pop
test
cmc
gs
pusha
ja
sub
lret
stos
cmc
fnstsw
outsb
adc
in
cld
lcall
js
fnstcw
test
or
cmp
outsl
das
mov
rcrb
fists
adc
mov
and
mov
adc
mov
or
adc
pop
aad
add
lds
pusha
cmp
mov
mov
cs
cmpl
cmp
sbb
xchg
int3
and
xchg
insb
fstps
jae
into
test
cltd
rcr
mov
loop
movsl
mov
jae
dec
pop
or
push
mov
lock
cld
sahf
dec
aaa
cmc
imul
xor
jns
fiadds
shll
mov
aaa
sahf
addr16
sbb
dec
jne
fldl2t
ret
nop
dec
xchg
lods
mov
fisubrl
dec
lds
dec
loopne
les
enter
pop
loope
sub
or
dec
test
stc
sbb
fwait
xchg
scas
inc
dec
out
or
jl
inc
adcb
dec
in
cmp
stos
shl
mov
movsl
xor
mov
call
pop
mov
adc
dec
lods
imul
fsubr
inc
mov
or
arpl
fwait
mov
inc
enter
movsb
xor
std
or
or
or
xor
cli
aad
and
sub
mov
inc
sti
push
daa
add
xchg
dec
xchg
es
pop
mov
sub
jne
js
inc
mov
sbb
pusha
pop
cmpl
and
test
mov
popf
xchg
in
inc
jecxz
pop
add
push
cmp
ja
and
lock
jle
cli
lret
or
pop
daa
fmulp
shlb
xchg
mov
jne
rcll
fiaddl
insb
mov
insb
test
je
cmp
scas
mov
mov
xchg
sub
jne
call
ret
jno
push
mov
ljmp
popa
push
pop
cwtl
mov
xchg
loop
inc
lahf
mov
aam
mov
cmp
dec
jle
or
ds
or
ficompl
mov
dec
sbbl
ja
push
addr16
sti
test
pushf
insb
cmpb
leave
mov
xor
mov
lea
jb
sbb
outsl
push
lods
fdivrs
rclb
dec
outsb
stc
mov
sbb
std
jbe
icebp
cmc
or
dec
dec
outsl
xchg
int3
sbb
icebp
jl
out
adc
mov
fisttpl
cmp
mov
jle
movsl
fsubrs
adc
fadds
add
dec
addr16
sbb
imul
xchg
scas
mov
or
push
jg
mov
jo
sbb
push
and
mov
inc
push
repz
add
inc
fcom
fstl
aad
hlt
bound
mov
pop
jne
pop
dec
push
into
andl
std
call
add
sar
cmp
mov
adc
aaa
inc
push
fsub
outsb
add
sub
xlat
jne
aas
outsl
imul
call
lea
sbb
xchg
imul
outsl
push
mov
jns
mov
into
xor
fwait
insl
pop
rorl
mov
pop
mov
inc
ret
scas
pop
push
andb
fiaddl
xlat
test
bound
cmc
or
push
xor
sub
cs
xlat
cmc
mov
add
add
addl
lret
sbb
sub
fs
mulb
adc
mov
sbb
pop
lret
test
dec
xchg
dec
mov
dec
and
or
sub
rcrb
mov
pop
xor
add
mov
wbinvd
gs
fisttpl
jmp
xchg
xor
dec
inc
or
rcll
lock
pusha
xor
ljmp
stc
leave
ror
and
push
into
jne
jecxz
les
push
sub
leave
sahf
hlt
xchg
popf
lret
test
or
or
lahf
faddl
int
push
rcrb
jmp
jmp
or
cmp
sbb
nop
scas
and
jnp
mov
dec
inc
sti
cmpsb
xchg
ljmp
sub
mov
shr
mov
jg
cmp
mov
int
pop
lahf
jp
into
sbb
jmp
xchg
outsb
daa
pop
and
inc
mov
test
insb
cmp
or
or
jbe
xchg
and
jns
mov
cmpb
push
xchg
repnz
lea
faddl
cmpsb
int3
xor
test
loop
pop
push
push
jmp
fdivl
loop
lods
test
jns
push
sub
std
inc
sbb
cmc
xchg
jne
xchg
xor
ret
ljmp
pop
loopne
cmp
xchg
dec
popf
nop
scas
inc
cmpsb
mov
and
aad
js
js
mov
adc
jnp
test
sub
and
jge
adc
pop
sar
loop
outsb
xor
lods
sbb
xor
xchg
repz
in
jge
xchg
fadd
int3
xchg
rolb
jp
lahf
and
fisttpll
jle
push
test
lahf
test
push
add
xlat
jae
push
and
lock
aam
inc
icebp
sti
rcr
leave
into
jmp
in
data16
cld
test
add
fildll
jae
test
call
lods
orb
in
xorl
ret
in
inc
cld
dec
xchg
ficomps
shrl
push
mov
insl
push
fbld
mov
pop
or
std
lea
push
lcall
int3
insl
dec
and
pop
leave
lds
fdivrs
stos
sub
psubsw
inc
lahf
ljmp
cs
adc
divl
decl
push
dec
nop
or
adc
pushl
mov
jo
out
xchg
or
dec
insb
sbb
mov
pop
mov
mov
sub
sbb
ret
mov
mov
push
jne
mov
inc
ret
sbb
mov
stos
test
mov
cld
icebp
mov
xchg
and
out
cwtl
jnp
jl
add
inc
mov
enter
cli
popf
mov
and
jp
mov
mov
jnp
inc
or
dec
push
sub
iret
pop
nop
movsb
jg
nop
cmp
and
jns
icebp
scas
sub
rorb
xchg
mov
fistpl
test
mov
mov
adc
mov
into
cmpsl
lods
imul
test
lock
lret
addr16
pushf
jp
jae
adc
enter
push
push
lds
xor
fisubs
and
jnp
jb
mov
shrl
and
and
sbb
sti
fucomi
ljmp
jg
fmuls
mov
xchg
fcompl
sbb
ret
adc
fstpt
inc
adc
rcrl
jle
or
and
mov
or
test
dec
inc
adc
mov
fsubrs
push
mov
mov
mov
mov
nop
pop
pushf
jne
nop
pop
add
push
stos
push
dec
rol
out
mov
add
or
inc
fsts
cmpps
aas
pushf
push
mov
nop
std
scas
jl
adc
xchg
icebp
adc
cmp
pop
mov
sub
sub
sub
in
push
test
lahf
pop
popl
ret
fstpt
rol
dec
mov
mov
inc
lcall
fildl
dec
mov
push
pop
jmp
hlt
cmpsb
push
add
mov
fdiv
stos
push
in
int3
pusha
mov
adc
adc
sub
ljmp
sbb
or
dec
pushf
ret
cmpsl
stos
sbb
pop
scas
outsb
jno
and
clc
jno
adc
cmp
lds
or
imul
jle
aam
fxch
das
mov
sbb
cltd
jge
rolb
jb
mov
mov
daa
sub
lret
insl
stc
push
pop
mov
dec
lds
add
push
scas
sbb
dec
sbbl
dec
movsb
adc
pop
xlat
cs
jp
sbb
inc
mov
fincstp
dec
sub
or
xchg
addb
popf
in
test
mov
cmp
int3
adc
scas
jmp
pusha
xor
int
out
cmp
mov
xchg
and
pop
xor
jmp
mov
outsl
dec
and
xchg
mov
into
jmp
sub
and
aas
cmp
test
jae
loop
aaa
idivl
cmc
sub
fidivl
mov
testb
mov
in
testb
pop
aas
push
lods
lock
mov
add
cmpl
scas
add
and
insb
cltd
jle
call
or
int
in
mov
addb
test
push
cmp
jecxz
enter
rolb
imul
mov
aad
fstpt
jp
and
insl
pusha
push
fsubl
jmp
cwtl
mov
inc
mov
scas
sbb
test
inc
roll
cld
outsl
and
pop
lock
sub
cmp
sbb
cs
mov
jecxz
and
sub
sahf
mov
add
nop
add
into
fwait
sub
add
incb
jg
push
dec
mov
mov
outsl
movsl
ja
and
popf
inc
jl
xor
scas
in
popf
xchg
movsl
into
pop
cmp
daa
inc
or
or
aam
or
test
mov
inc
clc
mov
in
aas
repnz
loopne
mov
jecxz
ss
stos
icebp
fwait
call
andb
cs
je
push
or
aaa
cmp
pop
inc
popa
xor
lret
das
subb
mov
push
rol
sub
push
imul
dec
cmp
xchg
pop
or
jl
in
rcrb
out
sub
mov
insb
inc
aaa
jo
js
fcomi
pop
mov
xchg
repz
xlat
sub
adc
insl
mov
push
jmp
das
mov
push
leave
roll
mov
cld
xor
fnstcw
add
sbb
and
dec
dec
mov
pop
mov
and
notb
inc
cmp
test
xchg
xor
hlt
loopne
push
push
push
js
dec
cmp
mov
cmp
jmp
jmp
push
test
pop
add
xor
mov
movl
add
cmp
jnp
adc
les
aam
xor
repz
or
leave
xor
or
fnsave
mov
outsb
mul
inc
xor
sti
pop
pop
mov
cmc
mov
xor
inc
imul
pop
shll
push
cld
dec
lahf
inc
insl
jae
mov
icebp
inc
or
popf
mov
gs
and
mov
or
pop
dec
sbb
add
lcall
cli
push
inc
cli
push
xlat
dec
bound
jge
ds
push
or
in
lods
ret
sbb
fisubrl
pusha
adc
test
imul
mov
cltd
mov
cmpsb
in
xchg
aaa
lret
aaa
sub
sbb
and
cltd
xlat
inc
mov
aam
fists
sbb
and
loope
lods
mov
fcmovu
js
or
jb
sub
xchg
test
data16
push
pop
fldcw
xchg
fistps
es
sar
shrl
popa
js
sbb
mov
add
mov
das
xchg
and
mov
fcomps
stos
sti
mov
into
insb
test
outsb
jmp
xchg
mov
std
mov
popa
mov
lret
loopne
das
sbbb
adc
and
into
fnstenv
test
adc
std
jo
xchg
stos
inc
mov
dec
push
loope
sti
into
lret
gs
jp
test
popw
loop
aaa
lahf
jmp
and
lds
sub
mov
into
push
ljmp
pop
fisubrs
hlt
scas
jae
inc
and
pop
jns
mov
out
arpl
sti
xchg
loop
stc
frstor
fcoml
mov
jne
push
adc
mov
in
lahf
shrb
push
jb
movsl
jb
es
clc
or
pushf
das
xchg
jo
fcomi
push
dec
jns
dec
into
mov
push
mov
icebp
sub
and
mov
aas
lret
pop
leave
jge
ret
pop
sub
xchg
xchg
iret
adc
out
push
push
leave
jp
fisttps
jae
movntq
mov
and
std
ret
cmpsb
bound
loopne,pn
es
lds
lds
fldt
inc
pop
shll
popf
aaa
push
inc
fstpt
test
out
mov
mov
jnp
inc
mov
ljmp
ret
shll
xchg
orb
pusha
shll
jp
std
push
shrb
add
outsb
inc
push
mov
push
ss
xchg
cmp
xor
xor
sbb
jns
jne
push
ss
pop
bound
dec
mov
xor
mov
push
cmovle
outsl
imul
push
mov
call
inc
cs
mov
ljmp
sbb
lret
inc
xchg
lret
imul
lret
fstp
cmp
mov
pop
sbb
xor
inc
cmpsb
es
push
adc
push
outsb
out
js
fcmovnbe
lds
fistpll
xor
mov
movaps
sub
add
push
lock
stos
mov
iret
std
mov
dec
mov
mov
aaa
dec
inc
int
ds
call
addr16
jns
je
and
jle
ja
jne
dec
pop
jmp
inc
jmp
xor
js
mov
in
scas
add
push
ret
push
mov
outsl
flds
lods
jne
shlb
loope
add
push
push
inc
or
xor
movsl
pop
shlb
push
iret
jns
pushf
ss
int3
lock
xrelease
sbb
and
lret
out
insl
dec
outsb
sarb
inc
adc
add
sub
push
xlat
dec
mov
pop
pop
divb
cli
cs
or
sbb
sbb
lock
es
fildll
dec
movsb
mov
dec
je
lcall
in
lods
xor
ja
out
push
jae
leave
pop
mov
sti
cmp
bound
cwtl
stc
and
mov
rcr
mov
push
xchg
mov
pop
out
loop
aam
and
les
jmp
add
dec
push
push
aam
cmc
adcl
mov
xor
push
mov
cwtl
popa
push
leave
call
mov
je
sbb
dec
je
icebp
or
fwait
push
and
sti
or
jmp
lods
int3
xchg
hlt
enter
jnp
out
pop
fnop
xor
test
int3
std
es
cmc
stos
jnp
cmp
repnz
stc
test
sti
jle
pop
xchg
int
pop
adc
out
mov
dec
lahf
mov
or
movsb
sbb
dec
cmp
leave
aam
cli
push
xor
inc
push
fdivrs
sub
iret
fdivl
dec
in
xchg
dec
int3
inc
mov
scas
das
xor
out
sub
in
bound
bound
aam
cmpl
push
push
dec
push
ret
out
lock
lods
cmpb
xor
xchg
lods
popa
shlb
jle
fdivr
xor
outsl
sti
push
sub
inc
jne
test
jae
xchg
sub
aas
mov
lock
mov
lcall
call
and
jmp
and
mov
xchg
jae
lods
dec
lock
mov
jae
sbb
and
int3
inc
mov
ret
or
hlt
movsb
adc
outsb
in
fmuls
add
or
out
movsb
in
xor
jecxz
xchg
fsubrl
inc
mov
inc
cmp
jmp
dec
add
mov
xchg
xchg
jbe
sarb
jns
mov
sar
ror
dec
lds
mov
inc
push
lock
sub
out
out
push
pop
loope
in
ja
pop
cmp
xor
xchg
jle
fists
loop
test
outsl
sub
xor
xor
dec
adc
xor
insl
xchg
lcall
sub
mov
inc
mov
sbb
fisttpl
stos
adc
iret
xlat
jge
xor
lcall
gs
inc
mov
scas
jo
cmp
xchg
jecxz
sbb
fidivs
cmpsb
shr
dec
adc
js
jmp
push
xchg
xchg
stos
dec
and
fdivl
test
cmc
dec
sbb
jp
les
mov
push
push
lds
in
aam
sbb
lods
test
sbb
in
jp
mov
repnz
sub
cli
dec
jle
mov
adc
outsl
and
lock
nop
mov
ds
push
enter
sti
cmpsb
movsl
adc
insb
outsl
sub
mov
int3
dec
mov
lods
ljmp
add
lret
sub
ds
mov
fsubrl
and
scas
nop
push
daa
into
and
mov
fiaddl
mov
fldl
repnz
sti
rcrb
sahf
mov
pusha
xor
sub
push
ds
jnp
imul
lods
outsb
jg
pop
push
test
in
incl
mov
outsb
out
mov
xchg
stos
jbe
xor
rcrl
pop
xor
jle
push
inc
in
adc
cmpb
jl
in
int
xchg
jbe
lea
loope
sahf
aas
adc
icebp
inc
pop
inc
lcall
jecxz
sub
hlt
push
fcompl
pop
lock
mov
mov
out
stos
inc
inc
mov
and
enter
pop
roll
mov
pop
test
daa
iret
dec
scas
cmp
loop
push
sub
mov
pop
or
dec
aaa
dec
les
jo
pop
mov
popa
test
fstps
or
aam
loopne
inc
push
iret
ss
vtestpd
xchg
das
bound
je
stos
mov
sub
movsl
inc
out
arpl
xor
jg
and
pushf
inc
in
rorb
push
loop
push
add
int
in
out
mov
ljmp
mov
stc
cmp
cmp
cld
fcmovu
int
test
lret
add
enter
add
das
push
subl
pop
rclb
je
rolb
rcll
sub
pop
movsl
push
add
js
clc
sti
cmp
out
mov
cltd
cwtl
and
jl
xor
jnp
sub
jecxz
jbe
adc
mov
xchg
sbb
aad
in
shll
fisubl
fiadds
sub
hlt
and
clc
aas
addr16
js
xor
mov
or
push
sbb
jo
or
jmp
outsl
inc
cmpsb
cmpsb
stos
mov
push
sti
repnz
dec
fmul
or
movsb
xor
mov
cmp
push
add
lret
sbb
clc
enter
ret
xlat
mov
fnstcw
sbb
scas
add
and
out
inc
cmp
cmp
lds
or
arpl
gs
push
lock
out
movsb
mov
or
insl
mov
xchg
or
scas
push
lahf
rcll
shl
inc
mov
jp
dec
push
mov
fnsave
jae
enter
and
add
jp
and
adc
out
popa
pop
test
sahf
jl
fsub
scas
push
popf
xor
rol
jnp
pop
js
xlat
push
inc
daa
sbb
xor
jecxz
mov
or
mov
jp
add
movsl
cmp
push
or
jecxz
mov
adc
pop
pop
jp
sbb
xchg
gs
mov
or
je
jmp
mov
jo
in
mov
jge
sub
fwait
out
dec
jge
push
divl
cmp
cmpsb
mov
push
cmp
inc
lea
int
xor
xor
dec
xchg
mov
push
or
js
mov
outsb
add
add
push
pop
mov
sub
jmp
icebp
mov
push
das
cmp
orl
in
dec
xor
jmp
ss
jl
loope
xchg
mov
arpl
loopne
jo
jge
cmc
int
enter
mov
cmp
mov
fisubs
cmovae
les
xor
movsb
aas
cmpsb
adc
das
test
clc
movsl
std
jo
dec
ljmp
cmp
jb
pop
hlt
js
sub
fnstsw
inc
mov
lods
nop
idivl
mov
int
mov
xor
out
xchg
cmp
popa
popf
aad
sub
lahf
leave
aas
and
fidivl
mov
adc
repz
mov
es
dec
pop
mov
lods
cmp
add
cmc
adc
lods
xor
in
in
rol
mov
loope
lds
stos
loope
adc
pop
std
and
push
ds
push
les
cmp
jecxz
clc
jg
gs
es
mov
push
jle
mov
mov
in
add
fiadds
sahf
mov
call
xchg
arpl
mov
loope
jle
xlat
insb
das
scas
push
mov
in
imul
lock
xchg
in
inc
out
sbb
inc
inc
and
cld
out
add
out
sbb
mov
outsl
fidivs
push
repnz
mov
mov
jb
sbb
pop
cmpsl
movsl
jo
jp
cld
mov
mov
push
das
pop
das
and
nop
dec
jbe,pt
je
jae
test
mov
in
gs
imul
mov
iret
jge
int3
roll
sub
xchg
sbb
mov
leave
test
mov
sbb
shrl
addr16
es
pop
mov
lea
sbb
mov
icebp
sub
pop
xchg
and
sub
push
stos
cmovbe
aad
or
aad
jl
sub
out
or
adc
bound
popf
jne
sbb
pop
cmc
push
dec
pop
data16
or
add
sub
scas
nop
ret
dec
int3
fs
xchg
add
test
lea
clc
mov
gs
jo
jle,pt
je
enter
mov
aad
lock
dec
add
and
inc
cmpsb
and
lods
fimuls
mov
outsb
ficompl
andpd
movsl
je
adc
stos
sti
test
add
fwait
stos
stos
jge
push
mov
into
jecxz
push
jbe
lods
cmp
pusha
lds
jg
jns
add
mov
or
test
push
mov
jno
sub
fisubl
maskmovq
jp
mov
rolb
loope
scas
js
push
cmp
jb
hlt
sarl
in
aaa
fldl
sub
sar
pop
test
mov
lret
iret
cmp
jne
xor
push
pushl
xchg
js
lret
inc
xchg
or
icebp
cli
outsl
aaa
fnstenv
adc
or
icebp
movsl
insl
xor
das
adc
sub
dec
aad
out
xchg
les
mov
pop
daa
das
add
lods
and
mov
cmpsl
outsl
xor
inc
inc
hlt
xchg
aas
mov
mov
sbb
xchg
adc
add
daa
mov
inc
mov
mov
mov
inc
in
jne
ret
aas
popf
push
or
cld
and
or
lahf
mov
jo
cmp
push
xchg
imul
scas
pop
push
jb
addl
test
ret
sti
xchg
pop
add
adc
or
call
and
shr
icebp
and
or
fwait
rorb
lret
repz
shr
pop
dec
ss
add
lods
cmp
test
push
das
ljmp
xchg
jo
and
rcll
inc
int
add
push
repz
scas
loop
ja
lock
or
cmp
cmp
xor
repz
or
cmp
addl
push
nop
shll
ret
lahf
and
lods
icebp
pop
jmp
sbb
js
xor
es
in
fdivl
jle
sbb
pop
xorl
lds
call
scas
mov
jecxz
inc
push
cli
inc
or
add
dec
ds
add
pop
pop
mov
loope
lock
testb
ds
icebp
aam
enter
jl
mov
fwait
ja
repnz
sbb
loop
add
js
aad
pop
inc
or
xchg
and
push
mov
pop
lcall
mov
mov
shl
cmp
xor
push
xor
mov
lahf
xor
jge
add
stc
cwtl
ss
subl
jbe
stos
lcall
jp
cmp
mov
sahf
lock
add
in
shl
xchg
sub
insb
loope
adc
mov
and
rcrb
xor
jmp
and
cwtl
cwtl
out
inc
mov
and
and
fiadds
outsl
inc
repz
adc
jge
add
cmp
shlb
call
clc
xchg
sbb
call
xchg
call
cmp
outsb
fnstcw
test
pop
jb
mov
cs
jo
jnp
mov
test
out
xchg
aam
adc
mov
mov
cmp
ss
outsl
adc
and
imul
cmpsb
subb
adc
nop
test
xor
into
fsubs
ljmp
inc
sahf
or
mov
bound
jae
scas
shl
mov
cmp
lea
and
xchg
mov
xor
cmp
je
call
jo
add
inc
sarb
cmpsl
jecxz
ja
mov
xchg
sbb
mov
js
dec
mov
add
add
in
sbb
jle
pop
scas
repz
cmpsb
das
out
aas
inc
pop
shlb
ror
dec
mov
cmp
inc
fsubrp
add
movsl
add
sub
dec
lds
xchg
xor
cmpl
pop
sub
lret
push
dec
xor
ljmp
push
inc
pop
push
stc
test
sbb
cmp
adc
and
jns
jmpw
cmp
sahf
xchg
stc
in
arpl
fisubrl
mov
sub
cmpsl
fsubrl
mov
subl
mulb
mov
pushf
loopne
xor
movsb
icebp
and
or
popf
mov
push
mov
iret
mov
adc
mov
mov
movsl
mov
test
nop
mov
mov
lods
fiadds
lods
jo
ljmp
sarl
xor
loopne
bound
fcmovne
or
jmp
es
or
mov
enter
ror
mov
add
xor
or
in
cmp
push
push
ljmp
add
data16
inc
dec
and
jecxz
jge
ficompl
sbb
xchg
mov
int3
scas
inc
neg
aas
and
leave
mov
mov
mov
cs
pop
aas
fdiv
addr16
sub
xchg
xor
inc
std
push
xor
or
cmp
popf
stos
lret
sub
pop
cmpsb
icebp
jp
push
insb
push
sti
mov
pop
test
rorl
or
outsb
push
imul
cmp
sub
lahf
ja
mov
dec
lock
pop
xchg
inc
stc
mov
arpl
jp
jmp
pop
xchg
adc
cmp
push
pop
xchg
xor
fcomi
xor
lods
outsb
jnp
xchg
jno
cs
in
sbb
negb
mov
loopne
in
mov
xchg
cmp
xchg
pop
inc
xchg
sbb
push
mov
cmp
sub
push
loopne
xacquire
inc
inc
incb
iret
push
mov
jle
jae
mov
dec
stc
jge
adc
aam
rcr
into
test
fidivrs
mov
idivl
dec
lock
inc
push
inc
cmpsl
bound
and
pop
movsl
icebp
adc
repz
mov
adc
push
ja
sub
cmpsl
outsb
xchg
cmp
inc
mov
cli
inc
dec
inc
push
and
lret
ror
inc
test
cwtl
jo
cmc
and
popf
xchg
sub
dec
mov
into
jg
insb
cmc
xchg
push
test
dec
cli
push
fwait
dec
jl
movsb
enter
xchg
movsb
pop
test
mov
sbb
in
pop
scas
fwait
jns
aaa
lea
mov
xchg
ljmp
cli
leave
sbb
sub
and
pop
xor
lds
pusha
mov
fstl
mov
push
nop
mov
loopne
or
add
pop
xchg
jg
out
cltd
in
in
dec
lock
mov
repz
aas
pop
ds
out
mov
out
sbb
xchg
or
adc
orb
jl
je
iret
jnp
mov
ret
out
inc
scas
and
jl
add
cli
subb
insl
sti
cmp
js
movsb
dec
nop
daa
nop
pop
pop
stos
adc
and
xchg
popa
dec
push
cmpsb
and
fidivrs
jae
adc
imul
ret
roll
or
iret
mov
idivl
cmp
mov
xlat
loop
popa
addr16
xor
dec
hlt
std
bound
dec
mov
pusha
clc
jl
sbb
xor
call
push
cmp
xor
xchg
mov
push
out
stc
pop
loopne
inc
pop
mov
subl
sub
add
jl
in
rcll
sbb
or
sub
stos
dec
fs
jnp
and
loop
stc
mov
push
ljmp
daa
enter
clc
push
ret
inc
rol
mov
mov
pop
aad
mov
xchg
arpl
int3
jecxz
std
mov
or
cmpsb
enter
dec
scas
pushf
and
in
std
mov
sbb
and
mov
bsr
pop
call
mov
fcmovu
xor
cs
cmp
pop
popl
daa
lea
push
xlat
mov
sub
rcrl
jg
push
jg
nop
xchg
outsl
pop
cmp
pushf
or
int
jbe
pop
lods
imul
mov
cli
les
and
xchg
pushf
int
scas
sub
pop
je
mov
adc
sar
rcrb
inc
loop
push
dec
cmp
xor
mov
push
mov
leave
fwait
movsl
and
out
add
fisttpl
and
lret
mov
in
sahf
xor
rcrl
xchg
sbb
cli
add
imul
mull
and
jbe
pop
or
in
ja
add
imul
xchg
push
inc
pop
cli
ret
cmc
orl
pop
lcall
icebp
xor
in
lds
push
mov
icebp
xor
enter
xchg
jg
or
mov
mov
sub
cmp
test
sti
mov
xor
dec
pop
cmc
dec
or
frstor
das
mov
test
push
push
aad
addb
xor
jge
stos
pop
mov
ljmp
cmp
insl
push
cmp
pop
loop
jbe
js
mov
mov
jnp
incl
aam
ja
pop
aad
adc
imul
mov
pop
push
add
sub
add
divb
pop
cwtl
xor
or
cmp
jg
addr16
sub
cs
repz
dec
dec
mov
xchg
mov
int
pop
and
leave
es
ds
mov
les
pop
mov
lret
es
sub
popf
leave
nop
jg
cmpsl
pushf
mov
in
add
jle
ss
cltd
jecxz
push
daa
clc
gs
cs
inc
fidivrl
mov
or
mov
pop
sbb
out
cli
dec
sub
inc
dec
out
mov
cld
jp
mov
into
jo
in
aam
and
add
negb
jne
push
jo
subl
cmpsb
flds
xor
lret
jp
jae
fnstcw
jne
fld
dec
sbb
fidivs
mov
enter
out
and
cli
fistpl
pusha
adc
cmc
daa
sarl
in
pop
add
xchg
mov
cmp
add
mov
sub
jle
pop
sbb
outsb
scas
cmpsl
or
lock
bound
lock
lds
pop
push
es
pop
enter
xor
ja
leave
rcrb
mov
push
mov
xor
jne
jg
ja
sbbb
fld
mov
jg,pt
adc
jge
shll
ret
jno
cmc
jns
shl
scas
loope
and
insl
push
dec
minps
xor
mov
dec
mov
mov
cmc
pop
sbb
jl
adc
sahf
xor
loope
aam
inc
leave
adc
loop
xlat
mov
dec
add
fmuls
leave
ja
dec
int
pop
sbb
push
mov
sbb
mov
aas
cmpsb
push
or
xor
sahf
xchg
adc
cmp
and
and
or
push
cld
roll
sbb
jae
sbb
cs
lea
xchg
mov
mov
sti
pop
xor
into
popa
and
pop
jmp
add
loopne
jo
mov
enter
mov
cld
push
popa
pop
push
sti
pop
sub
push
fstpl
jmp
loope
mov
outsl
test
sbb
cli
jne
add
add
inc
adc
negl
test
cld
sahf
dec
push
pop
mov
pushf
out
mov
sub
jae
dec
adc
arpl
ret
out
cmp
dec
hlt
push
stc
cli
mov
add
and
stos
mov
xchg
add
inc
leave
nop
nop
aad
jne
call
jbe
xchg
inc
sbb
leave
out
scas
push
adc
aad
lds
push
data16
dec
stc
outsl
push
mov
movsb
and
mov
clc
sbb
sub
xlat
lds
add
fldcw
jl
dec
push
repnz
ja
jle
adc
pop
incb
pop
scas
pop
out
fnstenv
clc
aam
push
shrb
jg
adcb
add
insb
clc
mov
mov
xchg
jbe
data16
mov
push
insl
jnp
dec
jno
enter
add
cmp
pop
movsl
mov
adc
das
leave
lock
or
adc
ds
aad
dec
test
xchg
jns
pop
test
clc
push
jle
addl
push
add
pushf
mov
int3
pop
push
mov
in
dec
ss
and
popa
sub
rep
lods
addr16
dec
mov
mov
or
fstl
adc
cmp
testb
in
mov
icebp
into
inc
in
xor
cwtl
inc
lods
mov
icebp
add
sub
loope
jae
popf
rorb
pop
jns
dec
mov
clc
push
stos
cmc
into
stc
lahf
adc
popa
xchg
mov
jo
inc
sti
lret
or
repnz
ret
rclb
pop
and
imul
dec
ds
cmp
ficompl
stos
jp
lret
gs
jbe
lock
xor
push
mov
xchg
loop
xchg
push
add
pushf
sub
ret
cmp
fmull
pop
mov
xchg
jbe,pn
mov
push
xor
jmp
jbe
imul
iret
add
mov
push
dec
sbb
sbb
rclb
ss
jecxz
into
test
stos
in
out
ja
fisubl
mov
add
add
pop
dec
adc
mov
lret
loopne
adc
cmp
loopne
cmp
sub
in
cmp
cld
cmpsl
add
aaa
adc
push
ficoms
cmc
pop
push
sub
aad
mov
push
adc
aaa
mov
inc
in
dec
inc
mov
cmpsb
pop
mov
or
add
stc
add
dec
pop
fildll
lahf
mov
adc
push
jae
or
add
inc
dec
fs
add
out
in
mov
fadds
mov
cltd
repnz
sbb
outsb
inc
xchg
in
popa
adc
lret
push
inc
jno
xlat
daa
ljmp
xor
or
dec
sub
aaa
fildl
xlat
xchg
stc
push
push
decb
or
js
scas
and
insb
test
or
and
pop
test
arpl
adc
loop
test
pop
cwtl
adc
xlat
lods
out
inc
mov
xor
mov
ss
mov
ljmp
mov
jne
jle
cld
push
out
mov
cmp
jbe
mov
rcll
sti
inc
dec
push
sub
cmp
jo
xchg
mov
xchg
stc
lea
dec
popf
push
stos
incb
and
push
inc
adc
sbb
into
out
lds
inc
out
jl
jbe
scas
push
inc
pop
ret
ljmp
in
in
lcall
fstpt
xchg
inc
test
jo
sbb
adc
insl
cmpsl
xchg
in
loop
stos
into
cmp
in
inc
mov
pusha
sbb
cmpsb
rcl
sbb
push
inc
ljmp
fld
add
dec
xchg
cmp
movsl
sbb
pop
lock
add
or
js
inc
scas
ret
mov
lcall
or
cmp
xchg
subl
jb
xchg
rcrl
xchg
dec
test
pop
mov
cmpl
push
out
dec
fimull
in
mov
aas
lret
les
insl
cmp
and
jmp
mov
sub
rcll
out
cltd
cmpl
sub
xor
xor
or
adcl
cwtl
aam
inc
and
iret
shr
mov
lcall
es
sub
inc
xor
sarb
js
ret
mov
es
push
dec
in
adc
cmp
movsb
incl
jle
shl
push
in
push
lods
adc
mov
adc
lea
movsb
push
push
gs
mov
ret
daa
mov
adc
in
or
and
aam
ljmp
repz
scas
out
into
push
call
das
ficomps
inc
mov
loop
push
in
cmp
jnp
loop,pn
pop
insl
sub
sar
jl
fwait
aas
mov
and
adc
sbb
sbb
push
in
or
push
loop
enter
add
dec
dec
ret
mov
rol
imul
dec
aaa
leave
push
mov
shlb
test
imul
lds
cmp
and
dec
mov
out
push
mov
js
popa
enter
aaa
mov
push
loope
push
out
inc
sub
je
ljmp
orb
sahf
movsb
and
adc
cmp
lahf
jbe
sbb
in
es
loop
lahf
or
cmp
das
mov
mov
lret
fs
cs
xor
xchg
jno
or
mov
mov
jbe
xchg
push
cltd
repnz
enter
and
loope
mov
push
ret
popa
cmp
popa
push
and
fistl
inc
inc
js
adc
adc
out
jg
and
xchg
ret
cs
mov
arpl
sub
sbb
js
jno
xchg
xchg
insb
pop
add
and
cmpsb
mov
mov
cwtl
pop
loope
jl
ljmp
or
sbb
sbb
pop
push
fucomip
jbe
sbb
xchg
add
movsl
out
popf
inc
inc
xchg
lods
mulb
and
in
lret
ss
sub
xchg
frstor
fisubrs
dec
out
mov
or
sub
shlb
xor
mov
ja
mov
push
aaa
push
in
loope
dec
lcall
movsl
lret
dec
mov
shr
lcall
or
scas
sbb
fcmovnb
push
push
jge
dec
test
sahf
mov
test
idivl
ljmp
mov
xchg
ret
push
clc
adc
fmull
jl
jp
push
stc
cmp
mov
lock
cmpsl
jne
xor
xchg
je
xor
push
pop
sub
xor
ss
cmp
or
push
jecxz
mov
cwtl
ljmp
lods
jne
pop
inc
dec
mov
pop
outsb
mov
decl
xchg
and
push
inc
or
push
shl
mov
or
xor
fidivs
pop
jnp
push
jmp
cmovp
xchg
movsb
xlat
and
jmp
bound
mov
push
sahf
in
aam
ret
inc
cmp
jnp
out
dec
fisubl
xchg
ror
mov
imul
or
lods
mov
pop
loop
or
inc
cld
xchg
jb
in
clc
mov
mov
mov
adc
or
dec
ss
adc
mov
popf
scas
sub
stos
jl
sbb
into
pusha
push
mov
xor
mov
mov
int
sbb
stos
std
adc
into
lods
push
or
fidivrs
inc
and
push
lock
sub
cs
push
daa
fwait
xor
inc
jp
mov
mov
adc
adc
enter
mov
nop
push
inc
pop
xor
inc
aad
.byte
