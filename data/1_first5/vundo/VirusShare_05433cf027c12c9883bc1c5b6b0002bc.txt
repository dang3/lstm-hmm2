sbb
add
mov
aaa
es
jb
jp
push
mov
rorl
jbe
les
ljmp
sarb
mov
sbb
and
jo
mov
pop
inc
mov
add
mov
mov
negb
sub
outsl
mov
ja
mov
pop
jge
inc
pop
or
sbb
xchg
add
mov
je
inc
daa
lods
push
and
in
mov
inc
insb
jns
jnp
jo
sub
fs
loop
xor
test
push
mov
sbb
push
enter
xchg
test
mov
lret
int
das
andl
xchg
xlat
cmpsl
pop
push
std
lret
add
aam
mov
aad
nop
pop
movsb
inc
outsb
inc
lea
and
sahf
xor
daa
cld
aam
popa
adc
adc
mov
inc
mov
mov
or
decl
push
in
pop
imul
lods
loopne
test
cmp
mov
mov
fwait
jne
lcall
call
push
sbb
jae
adc
jmp
lret
mov
mov
mov
or
lds
mov
jmp
das
sbb
push
jecxz
push
cwtl
cs
jo
jmp
pop
pop
lods
or
fwait
bound
lods
mov
mov
sbb
outsl
push
je
jb
fldl
lock
mov
push
iret
fnsave
mov
popf
mov
ljmp
outsb
jp
mov
cmp
js
mov
out
mov
outsb
sbb
lods
mov
or
aaa
outsb
int3
mov
mov
shll
xchg
scas
fstps
adc
mov
jno
js
hlt
mov
outsl
pop
shll
and
test
test
setl
mov
xlat
shl
aad
leave
in
mov
mull
add
mov
lods
mov
xchg
cmp
lds
std
inc
and
push
dec
push
lahf
inc
bnd
add
xor
push
les
push
xchg
mov
bound
popa
loopne
inc
jns
adcl
jg
fcomps
lcall
mov
lcall
nop
xchg
and
xor
mov
out
mov
push
pop
and
adc
jg
cmpb
loope
push
sbb
sahf
jl
mov
int3
mov
inc
loop
or
cwtl
hlt
pushf
push
xchg
int
ljmp
cmp
setbe
imul
aad
cmp
sbb
insb
mov
out
mov
inc
ds
inc
test
pushf
dec
xchg
psubb
xchg
test
rcll
movsl
or
push
ljmp
xor
mov
xchg
in
push
fsub
fdivs
sarb
or
scas
add
and
cmpsb
mov
jge
lret
push
enter
ror
das
mov
pusha
inc
js
jns
enter
test
jmp
pop
jbe
jecxz
cmpsb
mov
lcall
inc
xor
cmp
scas
jecxz
icebp
rorb
jne
inc
or
xchg
subl
dec
jl
das
and
push
adc
mov
je
enter
mov
pop
and
dec
notl
jb
xor
cld
fwait
pop
outsl
aam
jl
dec
loop
dec
push
xchg
stc
movsb
divl
cld
dec
data16
mov
xchg
lods
ret
mov
icebp
sbb
outsl
loope
add
loopne
test
adc
mov
or
sbb
call
test
out
xchg
icebp
mov
aas
aad
fcoms
xlat
inc
add
rcrl
cwtl
push
lds
add
mov
xor
repz
jp
jmp
ret
or
int
scas
dec
imul
dec
pop
push
sbb
adc
subb
stos
xor
or
sub
aad
add
das
or
cmp
imul
cmp
mov
fstl
jp
xor
push
out
es
push
mov
mov
dec
mov
stos
icebp
push
lahf
sub
dec
mov
add
addb
out
mov
fimuls
xchg
sbb
jp
imul
mov
in
repnz
scas
pop
push
loope
add
fdivl
sti
jecxz
loope
dec
fidivrl
je
stos
push
out
es
sub
add
jmp
ret
add
xchg
sub
lds
inc
cld
and
movsl
sahf
or
bound
movsl
mov
jno
add
push
in
mov
push
push
mov
bound
xor
xor
or
psubsb
cs
mov
sarb
int3
pop
push
dec
inc
shl
cmp
xor
ret
and
sub
add
imul
mov
or
fsubp
icebp
dec
xor
std
cltd
mov
mov
lock
adc
pop
xchg
mov
mov
cmp
scas
mov
hlt
mov
lahf
mov
lock
mov
iret
adc
push
jo
adc
xorb
lea
lds
push
xchg
in
jl
adc
and
ret
pop
mov
add
dec
xlat
cmp
add
mov
and
mov
xchg
inc
test
jns
push
test
inc
push
lock
adc
push
cmp
push
out
push
call
imul
mov
pop
jae
cli
adc
add
movsl
and
daa
xchg
xor
or
insb
mov
pop
cwtl
xchg
mov
mov
mov
je
bound
lcall
and
or
outsl
inc
ret
jbe
mov
cmp
adc
rorl
int3
push
dec
pop
push
popa
lret
cmp
mov
ffree
lods
movsl
xor
or
imul
mov
xlat
and
mov
cmpsb
adc
jnp
sub
nop
loopne
sbb
clc
cmp
lock
call
enter
adc
in
sbb
iret
iret
mov
insl
aam
pop
push
cli
sbb
lock
jno
or
xchg
mov
divb
add
dec
push
add
inc
test
aaa
jo
aad
int3
std
inc
xchg
inc
leave
dec
fcompl
scas
aam
pop
mov
sub
lds
sub
test
ss
int3
in
xchg
sbb
mov
mov
vphaddbw
es
scas
mov
fbstp
mov
pop
cmp
cmp
insl
pop
cltd
xor
vmovhpd
daa
sarb
test
dec
mov
repz
cmp
xchg
xor
movsb
xchg
jle
pop
fdivs
mov
xor
cmp
test
imul
mov
ja
sub
orb
hlt
outsl
dec
fwait
dec
sub
adc
fsubrs
test
mov
jae
push
add
dec
ss
add
jmp
sub
inc
stos
jle
and
and
jle
mov
fsubl
mov
xor
and
xchg
jp
enter
xchg
jecxz
lods
das
jmp
or
or
mov
xchg
adc
cmp
and
rclb
dec
pop
adc
push
lods
cmpsl
dec
cmc
and
jns,pt
movsl
jae
ret
mov
add
dec
aaa
inc
cld
push
mov
or
cld
out
pop
sbb
pop
shlb
rolb
or
out
cld
sub
fwait
scas
adc
flds
sub
push
xor
jae
cmp
popf
dec
daa
xchg
push
xrelease
adc
pop
cmp
hlt
adcl
into
rcrl
cmc
add
jb
mov
cli
mov
add
loope
xlat
mul
or
cmc
inc
jbe
push
xchg
cmovno
decb
dec
xchg
mov
stos
add
fdivl
in
dec
loopne
insb
mov
jo
mov
adc
cwtl
inc
bound
and
fld
fidivl
inc
pushf
inc
outsl
icebp
stos
insb
hlt
and
mov
sub
inc
lods
pushl
nop
dec
pop
xlat
pop
jp
lcall
sbb
test
loopne
push
xchg
add
dec
xor
les
icebp
sar
in
mov
fwait
mov
arpl
jl
jne
mov
mov
push
movsl
jne
rcr
jp
xlat
xchg
cmpsb
mov
xchg
dec
mov
add
cmp
jmp
daa
xchg
mov
movsb
sub
lcall
cltd
jl
fwait
pusha
sarb
fnsave
popf
enter
into
setne
les
lods
mov
mov
add
enter
ja
gs
sub
mov
xchg
mov
pushf
sbb
int3
mov
adc
loopne
and
fdivl
pop
cmp
jne
pusha
pusha
filds
in
rcrb
xchg
fistpl
mov
dec
pop
xor
pop
pop
sahf
das
lahf
or
je
int3
push
lret
adc
mov
jecxz
xor
mov
es
xor
sub
or
lds
test
sahf
sbb
cmpsl
and
pop
das
mov
pop
ds
push
add
cmp
sarb
adc
jecxz
fwait
cmp
mov
inc
clc
mov
mov
sub
leave
out
and
fxch
adc
sbb
ficompl
sahf
jp
mov
adc
inc
js
cltd
fcmovnu
jg
es
jbe
inc
rcrb
jnp
in
dec
mov
mov
and
arpl
test
lock
inc
mov
xor
lds
out
shr
loope
jbe
pusha
arpl
mov
cmpsl
out
bound
outsb
scas
cltd
fistpll
xchg
xchg
test
mov
js
xlat
mov
mov
push
repnz
push
ret
cmp
jno
scas
lock
xchg
hlt
daa
push
pushf
inc
fisttps
cli
outsb
push
jmp
add
loopne
jg
sbb
jae
test
jo,pn
inc
lock
xchg
ja
cmp
mov
lock
imul
mov
nop
xor
cs
gs
orb
and
addl
mov
test
xor
mov
sbb
lcall
fnstsw
gs
pop
mov
xor
in
xchg
mov
cmp
loop
dec
es
mov
jae
les
sbb
inc
jbe
aas
das
push
test
jg
mov
xor
inc
outsl
inc
std
cmp
lea
rclb
movb
rorb
or
cmp
sbb
nop
gs
shl
add
cwtl
notl
xchg
popf
enter
rorl
outsb
ds
mov
or
and
mov
dec
int
mov
mov
pushf
aaa
jne
das
cmp
mov
pop
adc
mov
xchg
cmp
scas
xchg
imul
xchg
mov
mov
inc
movsl
out
xlat
mov
pop
pop
dec
push
js
add
pop
jmp
repz
sub
pop
mov
push
fidivs
sub
jo
daa
pop
ret
imul
subl
sbb
into
subl
or
pop
stc
jno
stc
test
mov
negb
mov
aaa
aas
in
add
mov
aaa
mov
insb
shll
mov
je
lds
in
ss
mov
cmpxchg
jg
mov
je
sti
cs
pop
inc
pop
or
in
jecxz
imul
sbbb
jg
in
dec
mov
cmp
enter
push
xor
cmp
lahf
or
loope
test
flds
cmc
and
pop
pop
int
scas
mov
test
fstpl
add
fs
arpl
add
mov
gs
push
rcrl
xor
leave
xor
icebp
mov
lock
jle
mov
add
jecxz
decb
and
cs
fists
loop
jbe
and
sub
pop
jl
jb
jo
sub
lret
inc
pop
pusha
cli
shr
sub
cld
addr16
adc
fistl
ret
cmc
mov
or
mov
jbe
stos
sub
out
adc
popf
jo
jp
cmp
jb
pop
xchg
sbb
dec
sub
js
iret
movsl
xor
pop
rorl
jnp
call
jge
movsl
cld
adc
adc
pop
jp
scas
jno
push
js
std
int3
std
pop
fidivrl
rcrb
adc
push
jl
push
pop
mov
lods
test
xchg
fs
mov
pop
aad
int3
jmp
fwait
in
cmc
push
adc
test
xor
lods
mov
enter
sti
add
shlb
mov
loopne
push
inc
pop
pop
adc
shrb
inc
or
mov
loopne
les
sub
filds
add
push
add
inc
in
outsl
cmc
and
lea
xchg
stos
lods
mov
dec
inc
mov
cli
ret
adc
mov
jecxz
fwait
add
std
imul
cmp
pop
xor
sub
sbb
es
in
or
and
loop
dec
mov
jno
jle
push
aas
lds
adc
inc
in
enter
jns
mov
and
addr16
jecxz
push
sbb
mov
pop
pop
test
scas
test
adc
push
push
pop
mov
jecxz
cmp
add
mov
xchg
xor
push
cmp
pop
jmp
jle
add
lods
ret
aam
pushf
xchg
push
lea
shlb
push
dec
je
xor
push
and
mov
xor
enter
push
aam
cmp
adc
mov
mov
inc
subl
jb
bound
adc
rorb
xor
push
fstps
xchg
add
add
mov
stos
test
lret
jmp
lahf
icebp
in
cmp
inc
inc
dec
jnp
jecxz
adc
stos
cltd
jo,pt
gs
xchg
arpl
scas
xchg
cmp
mov
dec
jp
pop
xchg
push
cwtl
sbb
push
mov
push
cmp
mov
adc
lods
out
aam
out
jo
dec
es
xor
insb
mov
roll
adc
shll
imul
sbb
shl
mov
inc
pop
jnp
xorl
push
adc
fildll
push
ds
ss
cltd
cmp
call
xchg
inc
pusha
xchg
pop
in
jb
stos
jg
mov
pop
xchg
enter
xchg
andb
sub
fs
pusha
xchg
mov
je
adc
and
sbb
pop
test
pop
lods
cmc
fcoms
xor
xchg
mov
push
adc
mov
cmp
in
fs
adc
sbb
mov
jge
lret
popf
cmc
adc
test
cli
cli
jle
ficoms
js
sti
je
xchg
mov
inc
adc
xor
lret
or
repnz
and
inc
dec
cwtl
scas
adc
in
icebp
xor
stos
movsb
shl
call
mov
mov
xlat
lret
mov
js
imul
mov
mov
and
push
push
imul
sarl
push
in
call
cltd
fidivs
loop
stos
call
sub
pushf
rcrl
repz
scas
lods
mov
dec
andb
test
js
mov
in
xchg
dec
aaa
aas
sub
add
test
mov
xchg
mov
inc
push
jb
ss
insl
outsl
loop
mov
push
popf
shlb
fstl
lea
mov
mov
out
cmc
push
push
xchg
fdivrs
addl
mov
push
adc
adc
into
sti
stos
imul
sub
movsb
lahf
dec
clc
insb
in
push
orb
xchg
pusha
ds
ja
pop
jp
mov
jmp
aaa
stos
or
or
dec
cs
inc
fistps
je
mov
shll
rcrl
fdivr
data16
sbb
popa
mov
jb
xchg
inc
and
fwait
les
popf
pusha
subb
idivl
rorb
xchg
xchg
adc
or
mov
cmpl
nop
int
push
ljmp
pop
inc
out
sbb
add
sub
ret
jns
push
fs
mov
hlt
or
int
sarb
lret
loopne,pn
std
pop
mov
mov
mov
pop
push
jne
shrl
insl
loopne
out
in
fistps
push
xchg
jne
cmp
fiaddl
dec
fimull
inc
notb
call
pop
and
mov
mov
add
lock
out
movsl
add
adc
xchg
repz
jmp
leave
rcr
stos
ss
mov
ret
ret
mov
dec
jge
mov
fdivrs
mov
xchg
mov
je
int3
mov
in
jne
adc
adc
mov
adc
xchg
cmp
jg
push
push
insl
in
jne
mov
add
xchg
add
xchg
js
bound
add
pop
pop
loopne
pop
shr
sbb
test
rol
dec
jle
sbbl
fistpl
mov
icebp
xchg
sub
lock
push
pop
inc
or
call
out
jno
ja
mov
gs
mov
enter
scas
repnz
jae
fucomip
les
fwait
pop
or
cmp
fcmovb
popf
pop
mov
adc
sub
jecxz
hlt
fldt
lock
js
les
xor
push
mov
imull
add
stos
add
cld
in
xor
jle
addl
add
xor
adc
push
push
mov
jle
lcall
lea
inc
cmpsl
shll
push
fidivs
ret
loope
gs
pop
mov
xor
jnp
movsl
mov
fdivr
int
xor
mov
daa
movsl
xor
cmpsb
cmpsl
insl
push
pop
popf
movsb
xlat
add
test
andb
test
jno
mov
out
lods
xchg
xor
fnstenv
cmpsl
sbb
mov
out
je
or
pop
cmp
inc
lods
dec
fisubrs
js
push
sbb
int3
push
stos
xchg
aaa
mov
xchg
mov
iret
std
mov
add
sub
stos
cmp
xchg
mov
sbb
addl
popf
or
lret
jle
push
xchg
sub
mov
orb
jb
popa
inc
mov
andb
lcall
xchg
jnp
cs
mov
xor
bnd
pop
fcom
sub
fbstp
cmc
jecxz
xchg
loop,pn
sbb
leave
nop
mov
ret
mov
repnz
mov
dec
or
xorb
xor
ljmp
mov
lds
jne
fcompl
mov
stos
fsubl
ss
xor
push
ljmp
cmp
jp
lods
xor
mov
fstpl
icebp
sti
ror
fiaddl
adc
pop
and
pop
or
mov
adc
lcall
cltd
scas
cld
sub
push
int3
dec
addr16
mov
fsubl
pop
add
fdivrs
scas
and
insl
mov
mov
inc
fstps
ret
repz
in
popa
sti
sbb
push
test
out
push
test
pop
mov
xchg
dec
jge
pop
mov
popf
jecxz
scas
sub
jecxz
dec
push
mov
dec
cmp
scas
push
fidivrl
call
mov
insl
pop
hlt
fisubl
xchg
jge
shl
jbe
idivb
sub
cmp
jl
add
pushl
repnz
xor
lahf
fxch
into
mov
fiaddl
jmp
je
pop
mov
aas
inc
std
cld
push
sahf
mov
das
addl
xor
add
and
fwait
insb
sub
imul
icebp
cmpsb
mov
insb
daa
cs
lret
std
and
test
and
imul
xlat
jnp
xor
add
mov
mov
xchg
shrb
mov
mov
repz
mov
sub
imul
jg
push
or
cmp
out
or
xor
aam
pop
stc
add
adc
mov
repnz
ds
aaa
jo
out
lcall
sbb
aad
jg
div
push
test
dec
aas
jl
xchg
into
sbb
arpl
repnz
mov
push
ds
add
js
mov
test
xchg
outsl
xor
mov
popf
inc
mov
rcrl
pop
sbb
inc
into
test
test
inc
test
mov
mov
jmp
fisttpl
lea
sub
fstl
imul
jl
sub
pop
mov
cmp
mov
push
jle
jg
jle
pand
push
dec
push
pop
xchg
mov
pop
test
sahf
xchg
and
inc
out
sub
push
xor
mov
and
sub
fsubrs
sbb
mov
fdivrl
imul
jns
stc
inc
jnp
push
mov
add
xchg
hlt
jge
push
adc
lods
jmp
dec
push
inc
mov
cmp
mov
in
dec
repz
jmp
inc
cmp
adc
orb
xchg
mov
cs
pop
inc
addr16
iret
adc
sbb
in
popf
dec
add
and
int3
imul
icebp
mov
test
mov
stos
mov
aaa
pop
mov
xor
xchg
or
push
int3
movsb
dec
in
and
lock
fldt
inc
pop
xchg
push
xchg
xlat
push
test
sbb
push
and
cmpsb
iret
dec
addb
cmp
mov
inc
fs
stos
mov
push
mov
inc
leave
in
push
dec
inc
shrl
xor
movsl
in
add
mov
cli
dec
cltd
aas
and
jmp
cmp
fstpt
sub
mov
repz
fcompl
push
jnp
or
xchg
ret
in
test
call
mov
mov
mov
and
or
pusha
aad
sub
mov
cmc
stos
dec
cwtl
push
jg
dec
pushf
add
clc
xchg
cwtl
lock
adc
add
addr16
inc
out
push
ret
or
mov
repnz
mov
mov
movsb
aaa
cmpb
xlat
sub
sub
mov
or
adc
out
or
in
push
fidivrl
sti
loope
ffree
icebp
fcomps
jb
add
adc
leave
scas
dec
and
add
aas
fcompl
adcb
movsb
xor
ficomps
rcrl
scas
mov
lds
mov
mov
cmc
popw
idivb
arpl
mov
lahf
push
xchg
jmp
pop
shlb
xchg
inc
addr16
xlat
mov
hlt
jl
mov
fsubp
fidivs
sbb
test
pop
int
mov
dec
enter
jo
jnp
sub
pop
lock
jmp
bound
fsubr
xchg
jmp
push
aam
nop
scas
pop
mov
loope
scas
outsb
addr16
adc
clc
or
jmp
jp
out
js
decl
lds
push
jg
fidivrl
sar
ficoms
xor
mov
mov
mov
push
add
imul
out
jns
xchg
xor
dec
repz
mov
dec
es
mov
mov
mov
dec
mov
cmpsb
pop
mov
dec
pop
int3
inc
and
lods
mov
sti
pop
mov
ret
sbb
ret
out
mov
inc
cmpb
divl
sbb
jno
std
lods
mov
mov
mov
fs
push
sub
popa
mov
test
lea
rcrb
mov
shll
pop
cmp
bound
pmaxub
mov
dec
jp
cmpsb
lahf
pavgb
xlat
orb
movsb
adc
xor
push
and
pushf
xor
push
enter
cltd
icebp
out
cmc
jno
mov
enter
jb
popf
adc
mov
mov
xlat
bound
xor
or
mov
mov
jno
cmp
adc
sbb
sbb
xchg
fucomi
gs
or
xchg
andb
test
mov
pop
call
or
cmpsb
sti
ljmp
adc
inc
test
pop
dec
inc
cld
jno
xchg
xchg
test
sub
ss
stos
nop
pop
rcr
adc
mov
fidivrl
cmp
xchg
ss
inc
out
adc
add
push
or
sub
icebp
lret
and
popa
sub
push
jmp
addb
jno
push
xor
jmp
in
adc
mov
jb
mov
mov
aam
add
subl
add
mov
lods
jge
outsl
gs
dec
insb
daa
pusha
adc
cwtl
cld
sbb
and
aas
cmc
or
outsb
or
fcmovbe
adc
mov
jmp
test
xchg
jbe
addb
outsl
mov
shlb
ja
xchg
xor
sarb
mov
aam
xchg
inc
dec
movsb
xchg
mov
addl
mov
dec
dec
xor
push
sub
adc
add
jns
add
jb
xchg
mov
in
outsb
aaa
and
adc
int3
mov
das
push
inc
mov
ljmp
xchg
and
fwait
stc
cli
mov
je
push
test
jo
and
xor
into
push
adc
icebp
adc
add
orl
aas
fisttpll
dec
aaa
jle
psrad
mov
pop
pop
pop
mov
sbb
xchg
arpl
jp
add
jno
les
mov
sbb
xchg
ficomps
cmc
test
subl
push
aas
daa
movsl
stc
cmp
js
inc
je
bsf
stc
dec
cmpsb
mov
aam
int3
mov
push
ja
enter
std
test
inc
sub
cli
pop
sub
mov
sub
clc
iret
rorb
or
adc
scas
dec
and
cwtl
pushf
dec
cs
jnp
stos
ja
cmp
xchg
xor
stos
lods
mov
push
ror
xchg
add
fdivrs
mov
jbe
ficoml
decl
outsl
pop
arpl
ja
enter
mov
mov
popf
out
rolb
jb
mov
cmc
xchg
add
lahf
out
imul
inc
rclb
or
jb
cmp
iret
and
movl
lahf
ss
ret
es
mov
or
push
sti
push
xchg
out
pop
stos
inc
add
cmpl
add
dec
jmp
or
into
aad
loop
mov
add
movsb
clc
bound
xchg
or
mov
jnp
and
dec
out
fimull
popa
and
push
xor
sub
and
or
jle
adc
ds
sub
cmpsb
add
ja
sbb
in
into
les
xor
cmp
movsb
in
in
iret
push
addb
inc
pop
inc
and
sbb
sbb
inc
sub
cwtl
cmp
cs
or
cmp
repnz
outsb
sahf
sbb
pop
pop
call
and
mov
mov
inc
push
fisubrs
data16
iret
arpl
shrl
add
aam
imul
sub
clc
dec
push
rcrl
dec
mov
pop
pop
sub
loope
add
inc
lahf
or
subl
call
cltd
pusha
cmp
aad
push
xchg
push
xor
xchg
push
outsl
cmovge
dec
jg
clc
in
xchg
int
dec
push
imul
xchg
in
inc
jmp
adc
or
int
in
andl
cmp
mov
push
xchg
jae
jnp
shll
mov
jo
insl
shlb
xor
inc
in
aam
push
inc
popa
xchg
or
push
adc
jnp
inc
arpl
pop
pop
mov
mov
out
insl
jg
jb
cmp
jle
shlb
ret
rcl
pop
pop
mov
aad
pop
movsl
mov
adc
movb
sti
mov
pop
fsubrs
loope
sbb
push
call
fildl
test
pop
add
sub
jbe
push
and
cmp
sbb
sub
mov
sub
mov
insl
xor
mov
or
js
fisttpll
push
into
mov
xchg
stos
sub
jg
cmpsl
xchg
cwtd
lds
add
out
mov
mov
sahf
and
lahf
std
lsl
sbb
adc
dec
into
lcall
lods
xor
ret
adc
mov
aad
aas
mov
repnz
xor
mov
fs
pop
mov
xchg
jmp
clc
xor
cs
jbe
xchg
sub
jge
push
cmp
mov
pop
bound
lea
dec
mov
std
cmp
pushf
rorl
jmp
cmp
bound
lret
sbb
dec
insb
shr
add
rcr
push
sar
inc
ds
adc
mov
lcall
call
inc
insb
in
mov
adc
cmpsl
and
in
adc
push
insb
out
mov
xchg
push
jb
push
into
dec
push
pop
popf
dec
pop
mov
inc
cmp
mov
outsl
scas
or
adc
push
xlat
jle
add
aam
jmp
mov
mov
sub
stos
in
cmpsb
clc
pop
out
jle
xor
arpl
addr16
push
fcompl
ss
test
fcomi
test
xor
inc
ds
ljmp
gs
rclb
cmp
add
xor
popa
inc
sbb
lds
pusha
jl
stos
inc
movq
pop
sub
outsl
xchg
stos
jns
divb
xor
scas
and
dec
mov
inc
insb
jnp
loop
rcrl
fisubl
fstpt
sub
push
filds
push
push
test
arpl
out
movsb
loope
scas
cmpsl
mov
stc
repz
notb
sbb
filds
clc
push
stc
pusha
xchg
mov
out
int
sahf
mov
cmp
add
fwait
xlat
movsl
pusha
out
adc
adc
add
xchg
je
cmp
dec
dec
dec
and
sub
dec
or
push
and
xor
or
xor
pop
xchg
mov
sarb
push
mov
addr16
jg
inc
cmp
cmp
out
push
cmp
and
outsl
sbb
es
pop
leave
sbb
cld
mov
pop
loop
in
pop
cmp
dec
shl
and
nop
in
minps
neg
push
sub
sub
loop
std
xchg
ficomps
sub
jnp
inc
xchg
je
mov
hlt
xchg
mov
jb
cmp
and
cmp
xchg
rcrl
mov
cmc
inc
cld
or
bound
loope
stc
out
mov
add
push
sbb
xor
leave
nop
into
popf
hlt
cmp
sbb
jmp
pushf
mov
dec
shr
es
mov
sbb
sbb
clc
sti
dec
jbe
ljmp
xchg
mov
aam
pop
sub
pop
out
nop
sub
dec
cmp
inc
xor
inc
push
mov
addb
xlat
and
cmp
js
cmp
mov
and
inc
fisttpll
rcll
or
rol
and
mov
mov
add
pinsrw
or
jno
outsb
fwait
out
movsl
lret
dec
loopne
inc
lods
push
mov
push
pop
cli
mov
andl
hlt
and
mov
repz
dec
sbb
cmpsl
stos
popf
xchg
pop
jnp
jnp
aas
stc
stos
pushf
adc
jmp
pusha
cmp
pop
lret
and
mov
jns
fiadds
pop
orb
add
adc
sub
imull
lods
sahf
out
push
mov
pop
das
cmc
add
sub
pop
out
cmp
and
shlb
push
push
mov
setb
pop
aad
cmc
js
add
bound
pop
sub
mov
nop
out
cwtl
sub
sub
test
xlat
imul
cmc
scas
dec
xchg
stos
arpl
add
dec
or
mov
sbb
clc
mov
test
jne
pop
pop
and
out
imul
int3
orb
in
dec
pop
xchg
mov
rcll
mov
shrl
lcall
pop
dec
dec
sub
dec
adc
push
pop
and
push
and
mov
mov
mov
test
push
rcll
cmpsl
sbb
fstpl
cmpsb
mov
cmp
lock
mov
cmp
pop
mov
fsubr
mov
fwait
orb
xchg
rol
ret
sub
sbb
jns
imul
pushf
mov
ljmp
dec
in
mov
mov
cwtl
lret
mov
push
sbb
mov
ret
aas
jbe
popa
nop
push
movsl
add
btl
outsb
pop
xchg
fiadds
mov
dec
inc
add
insl
or
test
inc
jge
xor
aaa
adc
ja
add
jp
cmc
adc
fadd
pushf
ret
and
sub
jo
xchg
add
mov
add
add
ret
dec
push
pop
jmp
push
push
shl
ds
pop
xor
mov
mov
dec
xchg
dec
inc
xchg
test
jns
sti
and
mov
push
mov
test
pop
test
fstpl
roll
inc
xor
jno
stc
fmull
mov
mov
test
mov
out
stc
pop
imul
inc
lods
push
jbe
fldenv
cltd
loopne
cmp
popa
inc
mov
sub
je
xor
adc
fldl
aas
stos
or
ficomps
orb
ljmp
mov
xchg
xchg
and
pop
cmp
or
mov
mull
das
popf
cmp
cmp
xchg
inc
adc
cmp
mov
cmp
pop
pop
lret
xchg
mov
outsl
rorl
pop
out
ljmp
jns
dec
out
test
scas
lret
jle
mov
nop
mov
push
aam
xor
fwait
xchg
pusha
ljmp
inc
dec
mov
add
hlt
inc
mov
jge
test
addr16
push
cmpxchg
jne
sahf
icebp
mov
lcall
jae
scas
and
lods
cli
scas
cmpsl
mov
lret
or
sub
ret
mov
cmp
cwtl
sbb
fldl
andb
not
mov
jge
je
xchg
arpl
and
jle
xchg
push
pop
push
xor
test
dec
iret
push
repnz
add
inc
lods
dec
pop
pop
pop
cmp
push
sbb
pop
xor
xor
arpl
mov
mov
xchg
iret
add
lods
add
mov
out
lods
inc
fcoms
idivl
lret
add
sbb
mov
call
scas
cmc
cmpsl
movsl
stos
or
div
aad
imul
inc
sub
cmp
mov
mov
enter
shlb
ret
out
and
les
push
aad
adc
mov
cs
jl
lcall
fucom
pop
push
cmp
xchg
mov
xor
je
and
cmp
push
adc
mov
fsubp
sbb
mov
std
add
mov
loopne
lahf
mov
int
daa
xor
inc
pop
int3
aaa
cltd
inc
cs
pop
pusha
cmc
fisubs
cmp
inc
outsl
imul
push
cmpsl
fildll
ret
fiaddl
mov
mov
imul
shlb
cltd
jle
fsubrs
add
push
popa
sub
mov
jp
int3
lds
pop
ljmp
or
or
pushf
and
jmp
add
insl
inc
mov
lods
test
cli
loope
adc
mov
jmp
sub
mulb
jmp
xchg
les
into
mov
and
ret
std
lods
stc
jnp
sub
xor
adc
pop
dec
test
setg
sub
mov
jmp
jecxz
loop
mov
dec
int
xchg
iret
mov
cmp
pop
insl
sti
pop
clc
insb
add
dec
cs
imul
or
lock
inc
out
xchg
sbb
mov
and
mov
push
or
jmp
dec
mov
dec
lds
add
sub
insb
dec
xor
fmuls
js
jl
sub
les
dec
mov
lock
mov
das
xor
ljmp
rcrl
push
mov
gs
lahf
bound
add
add
and
addr16
mov
movsl
cwtl
movsl
pushf
out
cwtl
pop
rolb
movb
push
mov
andl
test
inc
cld
flds
mov
mov
add
or
sub
mov
lods
add
cs
jbe
mov
sbb
cltd
inc
js
mov
sahf
inc
outsl
pop
lds
jecxz
and
adc
adcl
ss
cmp
fistl
mov
das
pop
ret
inc
mov
mov
xchg
adc
out
sub
fwait
lret
lcall
loope
gs
insb
jmp
and
mov
xor
mull
inc
mov
lods
rcrl
xor
out
inc
aaa
xchg
and
pop
xchg
inc
jno
orl
fldl
fstpl
mov
mov
les
arpl
aad
cmp
rcll
fcompl
mov
stc
mov
or
test
xchg
sub
and
cmp
xchg
xor
ffree
xor
xchg
std
test
xchg
xchg
aas
iret
adcl
push
int
test
inc
mov
xchg
js
jb
adc
jnp
cltd
push
in
loope
adc
sbb
cwtl
loop
xor
movsl
sarl
cmp
fnop
and
sbb
add
and
sti
test
filds
test
xchg
inc
stos
push
lahf
icebp
mov
das
push
add
out
loop
xor
cli
shl
add
fwait
xlat
test
inc
xlat
fmull
push
mov
jno
roll
jmp
in
test
outsb
lods
jns
daa
aam
ja
arpl
out
dec
rcll
shll
cli
mov
pop
mov
ss
mov
movsb
mov
xor
xor
sub
xchg
paddsb
jle
mulb
scas
cwtl
popf
imul
mov
or
xchg
adc
mov
mov
loopne
mov
xor
push
xorl
das
xor
mov
pop
repnz
lcall
xchg
xor
mov
xor
inc
aaa
jg
mov
mulb
xor
in
ret
dec
sti
int
adc
mov
fdivrs
adc
std
loopne
xorb
mov
mov
movsb
scas
imul
sub
sarl
nop
dec
and
mov
mov
outsl
rclb
lods
cmpsl
outsb
cli
and
pusha
orb
dec
std
lahf
cmpsb
xchg
jg
imul
aas
lcall
sub
aam
test
and
data16
and
pop
ret
outsb
int
out
fists
roll
push
push
sub
shlb
iret
jmp
dec
out
clc
repnz
icebp
jne
jbe,pt
in
ds
xor
es
imul
xor
loop
push
mov
xchg
lds
mov
pop
inc
jmp
ficompl
outsb
mov
pop
test
or
cld
sbb
adc
xor
clc
or
fwait
into
sbb
loopne
adc
bound
ficoms
mov
dec
outsl
cmpsb
jbe
fsubr
stc
in
cmp
mov
ret
cld
jecxz
adc
xchg
loopne
xlat
insl
jnp
jo
out
push
stos
xchg
iret
or
std
sti
sbb
repz
mov
in
sarb
cmpsl
push
and
or
mov
xchg
inc
pop
lds
testl
enter
adc
lds
sahf
std
adc
insb
in
nop
rorl
jno
mov
sub
sbb
inc
scas
loope
sbb
jp
ds
cld
lret
push
pushl
xchg
aas
mov
outsb
fs
icebp
insl
jnp
mov
add
rorb
sahf
fwait
shrl
test
jno
enter
cs
ljmp
push
jmp
adc
lcall
jo
jge
sbb
inc
mov
incl
das
test
sub
cmp
xor
jnp
les
test
neg
jne
or
push
dec
xor
dec
xor
dec
push
enter
pop
cltd
add
mov
lcall
stos
je
jecxz
cld
lret
sub
stc
push
pop
cld
out
dec
pop
idiv
mov
daa
hlt
sub
into
cmp
jnp
insb
aad
jp
cmp
mov
jno
mulb
mov
or
mov
fnsave
icebp
sub
shlb
or
adc
out
xor
xor
repnz
inc
inc
imul
add
outsb
ficompl
das
in
icebp
test
dec
cmc
sbb
mov
fdivrs
add
mov
sub
sub
es
cmpsb
jns
fmuls
jb
lea
inc
mov
leave
icebp
and
cs
sbb
sbb
in
pop
lock
and
mov
adc
in
mov
dec
mov
add
les
jp
in
jb
pop
out
adc
cld
mov
push
cmp
sbb
leave
jg
out
ja
xchg
xor
sarl
push
ffreep
jbe
mov
insl
inc
dec
mov
add
jnp
lods
fdivr
stc
clc
jb
push
xchg
cmpsb
popa
outsb
daa
ret
cmp
adc
dec
xor
movsb
pop
sbb
xchg
and
addr16
mov
jno
in
push
popa
out
mov
inc
arpl
push
mov
mov
out
mov
sbb
jne
push
jge
mov
cmp
adc
pop
out
jo
xor
inc
mov
fldl
adc
xchg
jb
sbb
dec
push
sub
fdivs
push
scas
mov
mov
int3
xor
scas
cltd
lods
aad
push
cmp
je
xchg
xor
jle
xchg
xorl
std
sub
mov
sub
loopne
dec
ss
icebp
nop
lahf
fsubs
pop
lds
cmpsb
jl
js
mov
sbb
jo
or
xchg
pop
sbb
and
sahf
adc
cltd
fwait
sub
or
sbb
popa
jmp
cmpsb
sbbb
adc
shl
sarb
jl
imul
jg
and
ljmp
xchg
aam
out
mov
add
or
push
and
mov
sti
push
pop
mov
into
jo
jne
cmc
orl
add
lcall
loop
xchg
or
or
and
adc
and
sub
stos
into
jle
or
aaa
inc
add
insl
sub
pop
xorl
frstor
sti
int
call
movsl
cli
add
add
in
sbb
dec
vshufpd
mov
fiadds
cmpsl
dec
push
or
dec
or
and
xchg
dec
sti
adcl
mov
cmp
jecxz
add
cwtl
and
aad
adc
insb
mov
loope
or
stc
jb
jne
dec
mov
cmpsl
sub
cmc
mov
mov
xchg
jae
xchg
js
lds
cmc
add
iret
xor
mov
inc
sahf
cli
xlat
xchg
xor
lea
inc
scas
and
dec
dec
orb
jmp
jnp
imul
jl
xchg
adc
inc
push
nop
jge
add
xchg
imulb
shlb
or
fistps
lahf
in
or
inc
jmp
pop
inc
xchg
pop
insb
pushf
inc
nop
testl
loop
pop
idivl
inc
imul
jbe
dec
add
bound
push
cwtl
push
push
jb
jp
stc
sbb
stos
adc
mov
mov
fiadds
fistl
adc
imul
cld
xchg
cld
popa
and
lods
mov
ficoml
cli
jne
cwtl
dec
fnstenv
into
fisttpl
dec
pop
and
push
outsl
std
cmp
je
mov
push
scas
add
nop
push
adc
or
or
in
fnsave
and
cmp
test
sbb
inc
mov
cmp
push
movsb
aaa
push
ret
scas
sarl
mov
lea
inc
pop
xchg
test
outsb
pop
mov
js
sbb
pop
repnz
cmpsb
in
adc
cwtl
iret
xchg
jns
fcoms
adc
and
cmpsl
xchg
roll
int3
loop
leave
pop
pop
push
cld
stos
or
pop
inc
inc
sbb
push
not
push
andl
push
push
dec
daa
xchg
xchg
ja
push
cmp
outsb
mov
and
aas
dec
mov
xor
das
dec
aam
enter
mov
insl
fcomps
and
inc
in
outsl
lcall
xchg
xor
icebp
jg
out
sbb
gs
xchg
lret
xchg
push
mov
roll
fucomp
in
outsb
xchg
shrb
arpl
mov
cmpsl
popa
ja
pextrw
mov
xchg
cmp
xor
mov
dec
sub
adc
sarl
mov
mov
jne
cmp
mov
rcrl
mov
nop
sbb
loope
add
dec
inc
dec
dec
push
dec
xor
lret
mov
push
stos
xchg
mov
dec
scas
xchg
push
hlt
xlat
pop
sarl
and
dec
ja
jno
mov
xor
xor
ret
mov
fnstcw
gs
insb
sub
rcrl
js
jno
push
inc
xchg
lods
mov
movb
mov
jecxz
inc
js
pop
push
pop
das
das
pop
mov
and
lods
xlat
negb
mov
mov
orb
push
popf
insl
lcall
shlb
fcmovne
dec
and
sub
cmp
inc
push
bound
out
call
stos
icebp
pop
push
pop
popa
rcrl
mov
cltd
push
test
shlb
cmc
sbb
cmp
mov
addr16
or
mov
xor
or
mov
in
jne
or
das
inc
add
lea
and
imulb
mov
mov
mov
jecxz
std
inc
jbe
daa
aaa
outsl
rcll
dec
xlat
mov
mov
push
pop
shrb
mov
cmp
adc
gs
data16
inc
mov
scas
push
das
inc
testl
mov
and
insl
jmp
pop
add
lret
scas
out
cltd
lret
push
mov
je
outsb
sub
xchg
sahf
test
add
mov
xchg
xchg
jmp
inc
imul
inc
dec
movsb
notl
mov
test
mov
lahf
cltd
jae
cmc
data16
push
pop
xchg
loope
mov
jle
insl
xor
movsl
lods
aam
ret
push
sub
loop
jl
xchg
push
lock
mov
pop
aam
mov
mov
stc
pop
in
bound
movl
pop
or
dec
push
adcl
cmp
rorb
xchg
jne
push
jnp
xor
xor
mov
dec
sti
xor
stos
enter
sahf
push
xor
in
lcall
pop
xlat
fists
sbb
mov
inc
lahf
lods
mov
fildll
mov
push
cmp
test
and
cs
inc
imul
mov
adc
inc
es
imul
fldt
sbb
jmp
xchg
insb
js
rcl
lahf
scas
imul
xchg
sbb
mov
test
jo
cmp
adc
pop
sbbl
mov
jae
clc
hlt
sbb
add
inc
je
sub
jno
int
fldl
repz
jae
push
inc
int
jl
jle
and
sbb
cmpsl
sbb
ret
jle
cmp
xor
sbb
test
insb
je
mov
inc
out
jb
idivb
jno
xchg
loop
test
add
iret
push
test
inc
xchg
mov
dec
jl
in
lret
push
jno
adc
mov
fwait
or
sub
cmp
xchg
sbb
jecxz
sti
mov
sarb
push
test
sub
addl
xchg
dec
add
into
jle
adc
jo
ja
adc
cmp
movsb
loopne
mov
pushf
js
imul
pop
rol
cmc
jle
cld
fsubs
dec
pop
out
pop
inc
sub
push
movsb
popa
aad
mov
add
fnstsw
xor
std
push
cmp
sub
adc
je
fsubrl
arpl
js
dec
xor
call
push
or
int3
sbb
dec
cltd
imul
mov
aad
enter
ljmp
sbb
test
cmpsb
sbb
and
outsl
mov
sub
xor
push
daa
inc
dec
sub
xchg
ret
orl
in
insb
and
psubb
mov
sub
lock
lds
sbb
aas
push
test
fwait
int3
int3
push
clc
sbb
fisttpll
add
jns
sbb
mov
enter
scas
mov
int3
and
cltd
sbb
out
pop
add
sbb
push
jl
mov
mov
sbb
mov
jmp
mov
sbb
shrl
jnp
push
pop
rorl
jmp
fsts
mov
cmp
iret
mov
hlt
clc
aas
push
push
xchg
mov
mov
push
and
pop
push
popf
pop
lods
jecxz
filds
push
jecxz
jns
fisttpl
iret
mov
mov
mov
jno
cs
cmp
push
mov
jne
pop
fs
cs
add
popa
stos
je
dec
jbe
sbb
add
or
push
outsb
ja
rcrl
daa
mov
dec
mov
push
jns
cltd
mov
pop
add
xor
out
data16
xor
push
in
sub
xchg
sbb
add
cmp
lret
cltd
fcoms
mov
ficoml
test
add
ret
jp
andb
push
clc
jmp
cmp
xchg
jge
push
adc
rcll
fcomip
cmc
cmp
pop
fs
std
jae
push
xor
cli
adc
add
clc
vmaxss
xor
push
mov
imul
lret
add
in
fisubs
mov
imul
ficomps
dec
aad
call
adc
xor
push
int3
rcrb
mov
cmpsb
dec
mov
jbe
cs
insl
sbb
dec
mov
lret
sub
mov
inc
sahf
jo
xor
mov
ljmp
cmp
jnp
sysenter
or
jge
clc
cltd
or
lcall
mov
fyl2xp1
ret
pop
add
sbb
stos
loope
xchg
ds
mov
jp
in
mov
and
xor
sbb
fisttps
push
fldcw
fidivs
inc
testb
push
dec
clc
mulb
movsl
adc
dec
test
sbb
sub
adc
sub
pop
or
xorl
sbb
inc
mov
aad
xchg
or
stc
pop
gs
xor
popf
cld
mov
mov
mov
xchg
iret
inc
or
push
dec
add
or
jo
cli
clc
cmp
aaa
inc
sbb
repnz
out
dec
mov
and
sbb
pop
popf
js
fmul
pop
xchg
xchg
arpl
ret
jno
fisttpll
repnz
cmc
sti
xor
mov
js
jo
cmp
mov
loope
sbb
outsb
js
mov
enter
cld
bswap
sub
cli
push
insl
movsl
out
scas
leave
ret
rcrl
adcl
xchg
test
xchg
insl
push
js
pop
popf
jae
push
push
icebp
or
stos
ja
mov
popa
sub
jno
push
ret
mov
or
idivl
lock
xor
xor
jp
aas
cmp
mov
out
loope
pushf
xor
sub
mov
mov
adc
pop
fstpl
inc
into
pop
addr16
push
sub
jge
movsl
sti
mov
addb
mulb
jl
lret
jno
cltd
stos
test
mov
insl
jmp
cwtl
aaa
pop
jmp
or
cmp
mov
and
pusha
insb
mov
and
je
push
sarl
pop
sbb
fidivrs
cmp
push
sti
in
shll
xchg
push
mov
sub
test
out
movsl
stc
arpl
xor
adc
std
ss
and
shlb
sub
pop
mov
cld
idivb
fsub
movsl
cli
add
add
dec
lds
in
nop
clc
mov
adc
aam
mov
test
fs
and
out
mov
dec
negb
fwait
sbbl
daa
das
lahf
xchg
lret
mov
cmc
loop
push
sarl
js
setne
mov
xchg
fcoml
sub
xchg
jge
mov
pop
cmp
add
mov
sahf
push
xchg
push
xchg
xor
dec
sbb
enter
in
push
adc
xor
and
push
jo
mulb
popf
lods
add
stos
mov
xor
pop
les
xor
ja
ret
mov
add
jmp
inc
cltd
shll
or
inc
jne
imul
rorb
sub
cmp
add
popa
jg
inc
std
test
shll
into
xchg
adc
pop
incb
in
xchg
sub
loope
cmp
mov
ffree
sub
xlat
clc
cltd
adc
cmpsl
xchg
push
out
nop
cmc
or
cltd
mov
mov
pushf
mov
dec
jno
das
xor
pop
xchg
adc
pushf
and
shlb
and
sti
adc
xor
in
xchg
lret
xchg
mov
xchg
jb
scas
movsl
loopne
and
xor
out
mov
ret
jae
loop
pushf
scas
adc
movsl
in
add
pushf
outsb
mov
jns
sub
mov
xchg
push
jecxz
xor
xorb
dec
in
addr16
pop
cmc
mov
inc
sub
leave
dec
cmp
push
xor
jae
je
inc
outsb
sbb
mov
ja
inc
pusha
xchg
sub
or
dec
push
jbe
clc
jne
loop
inc
mov
dec
xchg
pop
sarb
inc
and
imul
dec
mov
sub
mov
mov
cli
sub
in
mov
xor
cltd
and
cmp
mov
xor
add
fidivrl
rorl
sbb
mov
dec
mov
add
pop
or
inc
sub
mov
or
es
outsb
xchg
sub
das
mov
sub
push
repnz
popa
sub
cmp
ss
sbb
ds
add
or
ljmp
dec
sbb
adc
addr16
fstps
jbe
sub
cmp
inc
inc
mov
adc
mov
sahf
bound
dec
xchg
sbb
ja
in
andl
arpl
into
xor
xchg
xchg
mov
sarb
cli
jl
mov
and
scas
lret
stc
pop
cmp
cli
push
and
jo
mov
jmp
xchg
fs
and
or
pop
cltd
add
mov
mov
add
out
add
cmp
mov
cmp
jbe
pop
leave
hlt
adc
cmpsb
jmp
ss
sub
or
jge
xor
loop
mov
mov
mov
xor
dec
jns
pop
mov
cmp
xor
fs
sbb
pop
loop
and
movsb
jp
jmp
lahf
adc
addl
cmp
adc
mov
mov
lahf
stos
and
mov
test
sub
mov
mov
ljmp
add
in
mov
mov
push
jecxz
fdivs
mov
push
ds
fwait
mov
popl
in
daa
rol
push
sub
inc
scas
loope
mov
push
jmp
inc
rorl
sbb
lret
aaa
push
aaa
sub
scas
inc
test
sbbb
lret
mov
rclb
adc
push
jno
shlb
pusha
subb
daa
movsb
lods
call
dec
dec
mov
inc
mov
outsb
seto
push
lds
iret
int3
add
ss
sbb
int
fs
mov
iret
fwait
ljmp
out
fwait
push
mov
rol
or
jge,pn
loop
cmpsb
loopne
fimull
lret
out
shld
mov
and
xlat
pop
mov
add
jae
mov
sub
jp
test
jecxz
xor
sbb
or
dec
jge
mov
inc
mov
mov
xor
je
jno
pop
jnp
and
lahf
mov
cmpsb
adc
sahf
rcr
int3
scas
test
iret
adc
fs
imul
xor
push
push
push
test
leave
add
in
jle
adc
arpl
sbb
cltd
in
xchg
mov
je
rorl
js
sarl
out
xchg
vpmulhuw
iret
sbb
stc
add
and
loop
fldt
shlb
dec
ljmp
mov
or
xor
rcrl
or
inc
mov
repz
xor
mull
je
repz
test
cwtl
xchg
push
cmc
repnz
and
adc
sub
xor
cmpsb
sbb
mov
dec
and
lods
movb
xor
cmp
sub
inc
jb
bound
in
daa
inc
xor
and
xchg
mov
push
jle
mov
or
clc
fstps
stos
mov
fadds
adc
lock
cli
das
cmp
xor
out
add
lods
jnp
sbb
out
lock
xor
mov
inc
jno
and
fwait
xor
pop
lds
push
cmp
negl
pop
popf
inc
ret
inc
inc
xor
mov
inc
jae
repz
adc
popa
popa
xor
xor
pop
xchg
cmpsb
add
ljmp
xchg
adc
aas
xchg
pop
lods
repnz
testl
cmp
movswl
or
or
rcrl
xchg
repz
push
push
inc
fisubrs
fnstenv
xchg
push
jp
adc
lea
addr16
repz
sbb
dec
add
scas
add
aaa
stos
stos
leave
gs
adc
test
std
inc
repz
cli
fcmovbe
arpl
jbe
xor
jno
push
jns
jnp
mov
jg
adc
movsb
add
sarb
add
ljmp
dec
dec
aam
push
mulb
adc
sbbl
sbb
les
or
lods
out
sbb
fdivp
in
lods
push
add
inc
xor
pusha
lcall
pushf
mov
sub
sub
xchg
cmp
push
push
or
adc
repz
inc
xor
or
mov
and
dec
cltd
mov
jb
insl
xor
cmp
dec
loop
cmp
pop
dec
mov
popf
pop
pop
call
and
aam
jo
or
xchg
push
in
mov
push
jns
in
out
cmp
add
je
push
or
mov
pop
fstp
push
inc
or
mov
out
mov
cwtl
push
test
int3
movsb
and
rolb
and
adc
loop
in
pusha
cmc
or
sbb
add
xchg
fistpll
stc
jns
sarl
mov
sub
cwtl
jecxz
movsb
xchg
push
pop
xor
js
sub
je
js
mov
or
mov
mov
lods
mov
xor
mov
pop
or
lret
cmp
xor
outsl
add
in
bound
cwtl
subb
sbb
adc
inc
fisubl
jp
jns
in
iret
or
mov
clc
mov
xchg
inc
insl
pop
inc
add
dec
repnz
xchg
or
out
jne
and
shr
mov
pop
mov
ret
sub
jnp
or
xchg
subb
lcall
push
out
leave
pop
and
xor
loop
fs
jmp
inc
popa
dec
or
stc
sbb
add
jp
mov
and
inc
inc
insl
ss
mov
sbb
cmp
xlat
xchg
jo
repnz
jl
lea
dec
xorb
scas
jne
xchg
xchg
clc
aas
repz
shrl
xor
inc
xchg
decb
pop
dec
cld
imul
mov
push
jo
push
popa
mov
mov
add
mov
dec
add
mov
lret
sub
into
stc
insl
cld
cwtl
iret
mov
pop
sbb
adc
imul
cmp
xor
gs
cld
jbe
jo
cmp
scas
pop
shlb
in
xchg
inc
icebp
out
xor
std
jmp
cmp
mov
leave
lds
adc
loope
xchg
mov
outsb
pop
mov
adc
push
test
sub
stc
shlb
mov
or
jmp
cmp
into
pop
jb
push
lahf
sub
enter
lret
add
test
fsubl
lods
int3
dec
jecxz
imul
shrb
cmpsb
mov
into
outsl
roll
mov
push
out
insl
or
pop
mov
mov
or
cltd
lods
fsts
pop
jp
or
pop
jl
lcall
sub
mov
lods
or
inc
mov
ret
jmp
sahf
aam
and
rcll
sti
xchg
pop
mov
fisubs
adc
add
mov
mov
testl
xchg
test
lds
iret
push
cltd
xchg
stos
push
xor
dec
jne
int3
pop
mov
mov
mov
mov
mov
sbb
mov
xchg
loopne
outsb
fisttpl
mov
ja
dec
push
adc
rorb
stos
xchg
idiv
pusha
sti
sbb
xor
xchg
mov
rcrb
ss
mov
push
mov
xlat
pop
dec
xchg
mov
fbstp
and
jmp
loopne
hlt
pop
ds
sahf
xchg
pusha
xor
arpl
pop
ss
test
insl
repz
adc
xor
lock
inc
insb
inc
lcall
xlat
test
hlt
adc
adc
fwait
pop
mov
xchg
addr16
ds
call
mov
cli
xchg
sub
jno
out
sbb
sub
or
and
out
mov
outsb
cli
push
inc
lods
sbb
ss
aad
ret
jnp
cli
or
xor
push
outsb
inc
add
xor
sbb
mov
ljmp
andl
lahf
push
lods
test
mov
mov
iret
mov
aas
inc
fs
xchg
repz
xor
pop
fsubs
outsl
pop
xchg
mov
cmpsb
es
ljmp
pop
popf
pop
jbe
ss
cwtl
jl
nop
xor
pusha
sbb
add
pop
dec
inc
xchg
dec
add
imul
pop
cmc
pop
jb,pn
out
jg
je
fyl2x
iret
fs
sub
adc
jae
mov
sbb
shrb
add
push
mov
push
push
xchg
dec
flds
dec
ljmp
mov
xor
cli
imul
xchg
jg
cs
nop
add
push
scas
mov
push
pop
push
lret
ret
mov
nop
sbb
sub
adc
cmc
and
sahf
fiadds
icebp
pop
push
scas
test
pop
sub
push
jbe
repz
push
push
inc
mov
and
inc
stos
sub
sbb
clc
pop
in
adc
out
pop
mov
cltd
insb
add
push
insb
stc
loope
out
ljmp
pop
pop
int
imul
rcr
lods
xlat
cwtl
lret
fisubrs
loop
sbb
and
arpl
adc
fbld
mov
in
sbb
cmp
nop
dec
popa
cmp
test
sahf
xor
je
lds
arpl
sub
push
adc
icebp
pop
in
insl
xor
pusha
loope
dec
or
adc
sbb
xor
sbb
popl
fwait
jae
jnp
stos
in
xchg
add
out
in
add
sarb
cmpb
cmp
fildl
sbb
lret
xor
adc
mov
pop
mov
push
cwtl
jb
lcall
pusha
test
call
insl
xchg
adc
xchg
stc
mov
rcrb
jo
sbb
sahf
add
xlat
lods
sbbb
aaa
mov
jmp
adc
jns
cltd
inc
lods
nop
pop
xor
std
test
pop
pop
xor
inc
daa
push
loopne
sub
decb
sub
fcompl
test
jbe
je
inc
pop
adc
rcr
push
out
jmp
aad
xchg
addr16
xor
scas
sub
in
test
sbb
imul
mov
sarl
dec
daa
fildll
sbb
and
jo
cmpsb
sahf
adcb
push
aad
divl
mov
js
push
bound
dec
shl
negl
jecxz
outsl
xchg
out
dec
das
out
pop
iret
icebp
stos
ds
int3
push
sub
mov
mov
mov
fimull
sub
loope
jmp
das
pop
jb
rorb
mov
dec
fidivrl
xor
scas
push
cmp
hlt
mov
movsl
sub
add
mov
and
push
mov
adc
lods
movsb
mov
mov
fnstenv
and
clc
mov
sbb
pop
add
adc
mov
aaa
add
dec
push
idivb
inc
js
ds
out
sub
shll
sub
push
cld
ret
movsb
les
test
pop
loopne
dec
stos
repnz
xchg
xlat
inc
sti
and
push
repz
or
cmp
adc
push
jne
scas
daa
rorb
dec
sbb
push
sbb
insl
mov
fwait
dec
pushf
xchg
gs
bound
xor
leave
stos
push
sub
mov
push
lods
popf
lods
mov
xchg
fistpll
jmp
test
cmp
add
push
scas
cmpsb
lods
inc
in
out
mov
pop
dec
pop
es
add
sub
sbb
adc
mov
insb
lcall
xchg
movsb
neg
dec
dec
fistl
stos
dec
test
les
test
sbb
pop
stos
mov
int3
jb
les
sti
xchg
and
bound
pop
jo
mov
fdivr
fwait
jno
push
fidivs
sub
mov
sub
xchg
shlb
es
lock
push
jp
add
loopne
pusha
out
jg
into
add
in
jmp
outsb
rcll
cltd
jmp
fbstp
mov
outsl
sti
lods
pop
mov
xchg
cmp
fbld
mov
and
push
or
lret
adc
insb
push
or
pop
out
inc
cwtl
xor
or
in
add
push
sbb
movsb
loop
testb
sbb
dec
movsb
pminsw
and
sahf
adc
pop
mov
sub
sub
xor
or
mov
or
mov
mov
ret
xlat
sbb
push
stc
mov
fnstcw
imul
pop
xchg
fiadds
pop
xor
sub
cmp
add
sub
cmpsl
xchg
stc
ficomps
inc
dec
fwait
stos
outsl
or
jmp
stos
movsb
out
mov
xor
les
sahf
out
add
adc
xchg
mov
ljmp
incb
in
mov
loop
lahf
repz
lahf
sub
sub
bound
mov
and
and
xor
rcll
icebp
rclb
mov
xor
jae
mov
jge
nop
scas
push
push
mov
out
jno
aam
call
leave
out
lahf
adc
push
sbb
push
add
filds
jo
popf
mov
fcomi
fs
das
outsl
cmp
lds
push
xor
cmp
lret
push
aam
mov
cmpsl
lods
addr16
xchg
repz
push
jno
out
jne
dec
add
xor
cwtl
fs
outsb
push
jmp
pusha
fstl
adc
push
dec
lods
ljmp
or
mov
out
pop
leave
xchg
jl
mov
adc
pushf
dec
imul
shlb
inc
cld
or
mov
mov
out
mov
pop
jecxz
out
pop
popf
lahf
add
mov
fs
gs
xchg
stc
or
pop
ret
outsb
pop
pop
mov
lcall
add
cmpsl
lret
outsl
fldenv
notb
rorl
rolb
mov
sbb
inc
cmp
inc
mov
in
or
cs
fs
enter
add
js
out
mov
arpl
sub
cmp
ret
daa
push
dec
xchg
sub
addb
fldl
pop
int3
or
pop
xchg
pop
xor
push
mov
imul
xchg
pop
mov
rcll
push
pusha
sbb
add
mov
add
adc
cmpl
out
pop
mov
mov
ja
insb
aam
push
cmpb
jbe
popf
in
and
mov
sub
jge
call
aaa
jecxz
enter
mov
in
outsl
ficompl
pop
jbe
outsb
mov
test
jb
push
push
mov
xor
jle
sbb
cmp
lods
out
cld
movsb
ret
imul
pusha
sbb
imul
pop
sbb
xchg
jbe
and
inc
push
jo
dec
cmc
dec
fcompl
mov
jecxz
inc
fucompp
cs
rcl
xlat
gs
std
enter
into
mov
cli
mov
inc
add
cmp
ret
aad
xchg
imul
xor
or
inc
inc
lahf
sub
jb
dec
push
adc
shll
aas
mov
and
cmpb
jle,pt
in
dec
lock
and
dec
int
and
xchg
les
jns
aad
xchg
insl
cmp
xor
aad
add
fimuls
loop
or
arpl
jno
inc
jecxz
lcall
push
jg
insl
sti
fs
movb
dec
jbe
adc
sbb
into
adc
mov
test
inc
xchg
mov
cld
push
lea
adc
inc
mov
sub
adc
xchg
jge
cmpsb
hlt
xorl
add
in
pop
or
pop
and
cmp
mov
into
lods
or
lcall
jb
xor
mov
cmpsl
pop
mov
mov
negb
pop
idivb
mov
push
lahf
dec
lea
pop
es
pop
pop
dec
dec
xlat
ss
jmp
adc
and
push
xor
mov
or
jnp
es
call
mov
clc
mov
fnstcw
dec
cmpsb
jbe
nop
push
mov
lret
cmp
jge
mov
mov
fidivl
inc
dec
cli
inc
sub
inc
inc
aam
cmp
fstp
or
mov
add
fs
mov
data16
daa
insl
add
in
xor
sub
ret
sub
mov
xchg
lahf
mov
es
sbb
mov
sahf
lea
xor
dec
cmc
push
mov
and
lret
outsl
add
mov
shlb
add
fidivrl
jecxz
mov
gs
mov
fnstenv
fs
sub
jb
and
stos
and
xor
or
or
mov
lea
pop
mov
mov
mov
sbbl
mov
fs
jbe
outsl
mov
into
push
cltd
sbb
daa
rcll
icebp
ljmp
lea
mov
aas
xchg
adc
cmpsl
pop
cmp
movsb
sysenter
adc
lods
jmp
mov
mov
jns
stos
loop
mov
arpl
inc
xchg
sar
pop
lret
jl
and
mov
jge
push
mov
outsb
xchg
add
xchg
mov
lock
mov
sub
mov
xor
mov
jnp
je
lods
call
cli
push
movsl
fdivr
popf
xchg
add
cmp
aaa
push
fildll
hlt
cmp
out
lret
adc
pop
sub
pop
inc
mov
jp
cmp
sbb
bound
jecxz
outsb
pop
pop
jge
sub
xorl
lahf
cmp
xorl
push
fiadds
and
lcall
enter
push
mov
sbb
cmp
xor
lds
push
dec
testb
dec
mov
addr16
sbb
or
negl
lods
jno
lds
and
dec
xchg
push
xchg
xchg
xorb
jae
imul
mov
sarl
xchg
pop
mulb
mov
push
stc
sub
popa
js
jp
mov
aad
cwtl
adc
clc
cmp
fcoms
aad
add
sbb
data16
ss
mov
jno
xchg
sub
cmpsb
cmp
xor
aaa
mov
std
jb
jg
mov
mov
out
sbb
inc
out
loopne
lcall
in
test
lea
mov
mov
jo
mov
or
or
cld
aas
inc
mov
mov
dec
lock
add
jne
pop
or
test
mov
fistpll
nopl
hlt
jnp
iret
jno
cmc
ret
aam
ss
cs
int3
jp
ret
sub
addr16
mov
leave
es
hlt
push
ja
push
inc
fadds
mov
ret
gs
mov
imul
jnp
cmc
mov
scas
or
out
out
cmpsb
testb
into
loope
push
in
ja
adc
leave
mov
cmp
in
mov
sbb
test
pop
cwtl
or
std
cwtl
insb
xchg
push
imul
or
xchg
pop
jle
cwtl
arpl
fldenv
mov
cmp
pop
xchg
scas
pop
outsl
stos
in
cmpsl
popf
cltd
ret
loope
pop
enter
fiadds
in
cmc
mov
xchg
aad
int
push
xchg
scas
or
cmp
sbb
stos
andb
mov
divb
adc
lahf
jno
je
cmpsb
notl
repnz
dec
idivb
das
xor
inc
arpl
mov
pusha
stos
adc
pop
fiadds
or
add
add
and
jb
pop
mov
in
rolb
push
data16
movsl
in
shrb
test
cs
leave
fnstenv
mov
mov
mov
lock
andb
ljmp
mov
stos
add
push
loopne
or
sbb
jae
testb
cmp
or
jno
inc
test
scas
cld
daa
out
fisttpl
inc
sbb
sti
dec
cmp
dec
clc
imul
dec
cltd
in
lds
repz
enter
clc
std
sarb
arpl
jb
mov
pop
pop
add
jmp
xchg
mov
fnstenv
xchg
mov
sahf
adc
adc
sub
add
aaa
or
imul
leave
sar
stos
xor
or
jge
aas
add
insl
sub
xor
shll
fwait
dec
push
pop
cltd
or
ljmp
imul
push
stos
enter
ss
add
mov
out
pop
add
std
hlt
dec
pusha
mov
pop
mov
push
adc
pushf
dec
pop
jp
js
test
fwait
imul
out
arpl
mov
je
inc
xor
xchg
dec
ret
xchg
es
gs
sub
mov
ss
sbb
ss
into
sti
or
xchg
pop
sti
repz
fsubr
or
cmp
gs
push
std
or
mov
push
pop
popf
daa
dec
shlb
xchg
dec
add
push
fisttpll
loop
cs
mov
pop
out
inc
imul
mov
push
xor
lret
loop
xlat
jmp
add
call
stc
jo
lock
mov
push
lcall
je
and
push
shl
pop
sarb
push
fiadds
push
adcl
dec
xchg
push
je
jns
jno
sub
cld
sub
inc
into
pop
push
mov
xchg
add
icebp
ss
jns
sbb
pop
pusha
ljmp
dec
xor
clc
xchg
gs
into
frstor
popf
mov
sub
fimuls
es
cmp
push
bound
push
pop
jge
scas
xor
cmp
inc
mov
call
repnz
mov
push
mov
pop
push
push
pop
bound
test
xchg
xchg
add
push
fs
and
or
jns
lock
sub
dec
stc
aam
je
mov
lds
stos
jo
test
adc
shr
jns
fwait
ds
js
push
andl
popf
sub
repz
adc
lea
das
pop
das
inc
cltd
add
pop
imul
or
or
or
jmp
adc
xor
xlat
ja
mov
cmp
and
mov
lahf
fmull
mov
xor
sbb
popl
test
pop
andl
push
inc
sbb
fisttpll
pop
add
int
bound
clc
dec
arpl
fildl
inc
mov
xchg
addl
movsb
out
and
inc
xor
stos
pop
lea
testb
sbb
fwait
and
mov
sub
cwtl
inc
int
push
lock
cmc
data16
mov
jbe
and
inc
xlat
sbb
test
dec
xchg
mov
sbb
fstpt
lea
gs
stc
jo
xchg
jne
or
dec
mov
icebp
cmp
xchg
lods
icebp
cmpsl
ret
lods
mov
sahf
fsubs
jl
andb
repnz
xchg
fs
cs
sub
arpl
xchg
dec
cmp
mov
bound
test
lods
dec
gs
out
pop
cmp
subb
or
cltd
push
shlb
adc
inc
mov
add
cld
shll
and
outsb
mov
inc
into
push
daa
pop
cmova
dec
xchg
push
loopne
out
xor
jmp
cld
xchg
push
bound
pop
add
fstps
fld
push
addr16
push
loop
mov
push
enter
imul
fdivl
aam
es
push
mov
and
push
jno
sub
pop
jae
stc
popa
push
lcall
ss
inc
jle
adc
test
mov
loope
shll
jnp
lods
lock
in
hlt
mov
mov
loop
xchg
pop
push
jmp
fbld
test
mov
jb
pop
cmp
cld
mov
ja
mov
and
stos
push
xor
mov
popa
sbb
pop
lds
lcall
push
sbb
loope
repnz
das
and
xchg
add
and
sbb
mov
inc
jmp
outsb
mov
sbb
inc
xor
loopne
push
aas
xchg
push
mov
add
in
sbb
movsl
mov
push
cmp
dec
in
push
in
xchg
ret
or
shr
sbb
out
xchg
pop
testl
shll
pop
cmp
shrl
sub
sub
mov
sub
xlat
push
inc
inc
cmpsl
sti
insb
aam
cmp
nop
nop
loopne
sarl
frstpm(287
push
aam
lahf
lea
push
push
and
push
push
xchg
xor
ja
jl
insl
pop
mov
stos
inc
or
mov
jno
mov
cs
push
add
sbb
adc
or
xor
stos
adc
xor
push
rol
xlat
adcb
mov
fisubrl
xchg
cmp
gs
cltd
ljmp
sub
inc
xlat
xchg
test
sub
sbbl
jae
daa
push
mov
pop
int
lea
xor
lahf
popf
jns
imul
imul
push
out
cmpsb
in
aam
cltd
inc
sub
fistpl
loopne
cmp
adc
daa
out
sbb
lea
loope
sbb
pop
cmc
jge
aas
decl
fnstsw
push
and
lret
adc
dec
pop
sbb
adc
fsubs
dec
popa
mov
ljmp
test
insb
sub
push
xchg
jae
fcomps
jno
insb
test
push
cmp
cmp
inc
xchg
adcl
jp
js
inc
lahf
negb
std
insb
xchg
adc
mov
loopne
sub
mov
lds
out
test
out
cltd
lahf
aad
sub
out
cltd
cmp
and
push
movsb
jecxz
or
cli
xchg
cld
xchg
mov
pusha
mov
popf
pushf
call
les
mov
push
popa
test
ja
pop
and
xor
mov
repnz
sbb
and
dec
add
jp
andl
mov
lods
xchg
test
inc
jae
cmpsb
fdivp
push
lock
adc
dec
into
ja
jbe
dec
pop
xor
push
xor
pusha
lcall
lahf
pop
hlt
mov
ljmp
mov
inc
movsb
insb
xchg
lods
mov
icebp
aas
mov
adc
loopne
in
mov
inc
mov
ficoml
sarl
dec
int
int3
negb
scas
loopne
mov
cmp
bound
inc
sbb
or
or
dec
push
cmpsb
test
iret
add
cmpsl
jnp
add
push
lea
ret
lods
add
jmp
jl
sahf
push
jmp
adc
scas
jne
mov
mov
push
mov
insl
pop
les
inc
add
push
sub
pop
mov
jle
sahf
jmp
pop
cltd
mov
dec
fwait
shll
ret
dec
arpl
xchg
jb
arpl
mov
repnz
mov
mov
sbb
add
xchg
dec
pop
jecxz
or
into
cmp
jno
mov
mov
into
jecxz
scas
mov
cmp
xor
add
ficomps
jnp
mov
int3
sarb
sbb
frstor
or
hlt
xor
ds
fsubrs
jg
jle
icebp
jg
add
call
mov
movsb
shll
adc
mov
fldenv
jmp
lahf
nop
loope
and
dec
jp
push
pop
jo
out
cmp
dec
lret
call
push
pop
nop
xchg
add
es
sbb
fdivrs
roll
add
sub
cmp
jne
fistpl
adc
inc
mov
iret
pop
les
shl
or
fs
dec
add
movl
outsl
cs
add
sarb
jo
aad
in
pop
je
ret
and
ja
adc
pop
popa
ret
movsl
out
push
ljmp
es
jmp
cmc
jecxz
lock
mov
pusha
ret
xchg
fwait
dec
adc
sbb
je
sub
inc
subb
pop
pop
or
pop
lret
repnz
mov
lahf
pop
mov
cs
shlb
sub
jno
mov
lds
add
and
add
mov
clc
jecxz
imulb
push
xchg
pop
leave
test
in
insl
dec
ret
inc
out
lret
add
push
int
fcompl
negl
repz
and
jge
into
mov
stc
inc
pop
or
xchg
pop
add
clc
in
mov
push
mov
sbb
loope
and
lahf
js
add
add
dec
cltd
push
orb
bound
push
mov
out
bound
sbb
test
call
jnp
push
mov
xor
or
xchg
icebp
or
ret
push
cmp
inc
data16
fsubrl
sub
inc
int
push
cmp
out
jle
mov
icebp
mov
sub
stc
mov
push
sub
hlt
pop
hlt
popa
mov
sbb
jle
nopl
push
xchg
pop
cmp
jns
shll
and
fnsave
xor
dec
sub
cmp
inc
jae
in
es
jbe
adc
test
fidivs
je
repnz
ds
jb
loop
sbb
ret
je
in
cmpsl
sub
mov
arpl
iret
jp
xchg
jge
test
ja
stc
lods
push
mov
scas
mov
in
cmp
xchg
repnz
ja
adc
pop
aaa
addr16
call
sahf
sub
or
ret
jno
call
or
jb
jb
mov
out
cmp
push
lret
jo
push
mov
mov
mov
icebp
add
gs
jg
jmp
xchg
xor
add
jl
decl
push
sbb
push
mov
div
push
sahf
test
fwait
dec
add
adc
dec
xor
pop
push
pusha
jle
mov
mov
int
and
lock
dec
jbe
push
test
push
pop
fnstsw
mov
push
jbe
pop
cmp
jl
inc
les
lahf
test
or
push
push
rcl
movsl
fistpl
and
jg
stos
adc
inc
roll
shll
ljmp
dec
popa
sti
jecxz
mov
push
or
push
jecxz
fisubs
shlb
inc
pop
mov
testl
adc
into
fwait
cltd
mov
sti
in
loope
pop
or
pop
push
push
fidivl
out
add
jl
jb
sub
cmp
dec
pushf
mov
aam
xor
sub
shll
sarb
mov
or
xchg
sbbb
pop
dec
push
stos
mov
pop
movd
push
loop
lea
jbe
and
out
sbb
sbb
nop
dec
push
add
and
mov
scas
shr
mov
mov
data16
push
pop
leave
xlat
sbb
inc
mov
lock
xchg
inc
dec
xchg
cmp
sbb
imul
or
std
lods
sbb
imul
test
andl
dec
dec
mov
inc
inc
test
adc
arpl
cmp
imul
pop
sbb
mov
ficomps
xchg
stc
pop
insl
xchg
jo
add
add
cmpb
jne
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
