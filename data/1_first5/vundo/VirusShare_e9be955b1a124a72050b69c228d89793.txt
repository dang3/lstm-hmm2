push
jmp
mov
xor
ror
xor
ror
add
xor
popw
inc
jmp
subl
arpl
leave
xor
xchg
lret
fisubrs
jmp
fwait
lret
repz
fidivl
pop
push
idiv
std
cld
dec
jg
fdivl
lahf
add
sbb
call
lock
jle
jnp
fucomip
idivl
pop
inc
mov
js
jg
fildll
sti
lea
sti
std
cmp
divl
mov
sbb
lods
adcb
xor
or
stos
cwtl
incb
decb
cmpsl
mov
fsubrp
idiv
mov
idivl
cltd
pop
jg
fucomip
je
add
add
cli
pop
fucomip
or
idivb
filds
dec
add
add
inc
ficomps
jg
fsubrp
mov
xor
mov
ja
adc
lods
jbe
pop
mov
incb
dec
dec
push
sti
inc
jo
std
scas
mov
cs
cld
iret
cld
cmp
push
mov
int3
mov
mov
sub
dec
imul
lods
jmp
cmp
jnp
fsubrl
test
cmpsb
aaa
mov
pop
jle
xchg
mov
mov
sbb
mov
sti
std
std
mov
cltd
lcall
test
add
mov
lods
pop
cltd
pop
inc
aas
add
out
xchg
aam
adc
add
ja
inc
sbb
jg
mov
jl
js
or
std
cmp
idivl
std
test
jp
mov
std
jg
stos
jmp
and
adc
add
lods
or
xchg
adc
pop
out
add
add
mov
ja
in
xchg
xchg
dec
jp
mov
push
addl
popf
sti
add
pop
and
or
out
into
mov
push
cmp
cmp
cld
hlt
loop
fs
jbe
pusha
fdivl
gs
in
xchg
xchg
dec
jp
mov
push
ret
inc
and
popf
sti
add
idivb
adc
addb
icebp
jb
repnz
iret
insb
xor
jbe
jae
and
or
mov
imull
fucomip
divl
repnz
sarl
cmpsl
mov
fptan
or
mov
and
test
ds
cmp
adc
aas
add
sub
mov
hlt
fdivl
ds
jg
or
mov
or
faddp
rcll
mov
filds
pop
sub
mov
and
subb
scas
clc
add
out
scas
dec
and
js
pop
test
mov
xor
std
push
cmp
adc
loopne
in
setae
sarb
xchg
lret
cli
cs
xchg
lcall
stos
movsb
xchg
pop
int
jg
push
scas
sti
jo
repnz
cmp
xorps
sti
cld
rcrb
cwtl
repz
loope
js
loopne
lret
fisttps
mov
jo
lret
mov
dec
lock
movsb
jl
pop
sub
js
xchg
aas
jb
lahf
xchg
dec
and
or
sub
sldt
add
mov
mov
xchg
dec
sub
jno
aas
sbb
arpl
mov
adc
ret
pop
nop
cmp
cwtl
fmul
fwait
push
dec
fisttpl
js
cmp
jecxz
test
push
add
rol
sub
add
not
xor
not
add
push
jmp
movzwl
xor
neg
xchg
inc
neg
xor
cwtl
add
push
jmp
pop
pop
shr
push
pushf
jmp
pop
sub
mov
push
jmp
pop
pop
mov
jmp
pop
popw
jmp
pop
jmp
notl
pop
and
pushf
jmp
mov
push
jmp
pop
add
pushf
jmp
pop
jmp
push
jmp
movzbl
xor
ror
add
xor
ror
add
xor
pushw
jmp
push
push
push
push
push
push
pushf
push
push
push
mov
mov
mov
add
mov
sub
lea
inc
not
neg
add
not
add
sub
movzbl
pushl
ret
movzbl
sub
neg
add
ror
add
lea
not
sub
pop
mov
jmp
pop
mov
push
jmp
pop
pop
shl
push
pushf
jmp
pop
pushl
jmp
pop
pop
shr
push
pushf
jmp
mov
add
xor
neg
xchg
inc
neg
xor
push
jmp
pop
pop
shr
push
pushf
jmp
pop
pop
not
not
and
push
pushf
jmp
pop
pop
shl
push
pushf
jmp
pop
popl
jmp
pop
pop
pop
shld
push
pushf
jmp
mov
xor
xor
sub
xor
add
sub
xor
cbtw
cwtl
push
jmp
mov
or
mov
or
je
or
aas
out
adc
loopne
adc
loopne
adc
out
adc
loopne
adc
out
adc
adc
adc
or
mov
or
or
or
mov
or
mov
out
adc
adc
adc
loope
adc
or
mov
or
add
loopne
adc
out
adc
loopne
adc
or
enter
mov
or
add
loope
adc
loope
adc
loopne
adc
or
xchg
loopne
adc
loopne
adc
adc
loope
adc
adc
adc
out
adc
adc
adc
out
adc
or
cmp
or
mov
or
aad
or
mov
or
jge
or
mov
or
jae
or
mov
or
shl
adc
loope
adc
loope
adc
out
adc
out
adc
adc
or
push
out
adc
or
jle
or
push
out
adc
loopne
adc
or
shl
adc
loope
adc
or
jle
or
dec
out
adc
out
adc
out
adc
out
adc
adc
or
enter
jmp
or
xchg
out
adc
or
lret
out
adc
adc
adc
or
je
or
cmp
or
jge
or
push
out
adc
loope
adc
loopne
adc
or
cmp
or
aas
out
adc
loopne
adc
or
mov
or
or
add
or
or
push
loope
adc
loopne
adc
out
adc
loopne
adc
or
push
loope
adc
or
je
or
push
loopne
adc
loopne
adc
or
mov
or
inc
loopne
adc
or
inc
loopne
adc
loope
adc
loope
adc
loopne
adc
out
adc
loopne
adc
or
pop
out
adc
or
xor
or
xchg
loopne
adc
out
adc
loope
adc
or
xor
or
mov
or
shl
adc
loope
adc
out
adc
out
adc
or
cmp
or
aas
out
adc
out
adc
or
cmp
or
cmp
or
aas
out
adc
out
adc
adc
adc
out
adc
or
fucom
or
pusha
loopne
adc
out
adc
or
shl
or
cmp
or
cmp
or
leave
loope
adc
or
pusha
loopne
adc
loope
adc
out
adc
or
jmp
or
jae
or
lret
out
adc
or
aad
or
push
out
adc
loopne
adc
or
gs
adc
or
jmp
or
shl
adc
out
adc
loopne
adc
out
adc
out
adc
loopne
adc
loopne
adc
adc
loopne
adc
loopne
adc
out
adc
out
adc
out
adc
out
adc
loopne
adc
or
shl
or
je
or
jmp
or
add
loope
adc
out
adc
loopne
adc
or
gs
adc
out
adc
out
adc
or
mov
or
cmp
or
jge
or
je
or
shl
adc
out
adc
loopne
adc
out
adc
loopne
adc
out
adc
out
adc
or
xchg
loopne
adc
adc
adc
or
test
loope
adc
out
adc
or
enter
xchg
loopne
adc
or
mov
loopne
adc
loope
adc
loopne
adc
sti
lcall
popl
jmp
movzbl
sub
neg
add
ror
add
not
sub
inc
mov
push
jmp
pop
pop
pop
shrd
push
pushf
jmp
pop
popl
jmp
pop
pushw
jmp
pop
pushl
jmp
pop
pop
shl
push
pushf
jmp
and
pushl
jmp
pop
pushw
jmp
pop
pop
pop
popf
pop
pop
pop
pop
pop
pop
ret
pop
pop
mov
jmp
pop
add
pushf
jmp
movzbl
xor
xor
inc
sub
xor
sub
xor
push
jmp
and
popl
jmp
pop
add
pushf
jmp
pop
not
notl
and
pushf
jmp
sbb
jmp
dec
inc
and
icebp
jo
je
mov
push
fistpl
lock
mov
and
inc
pop
mov
sbb
cmp
bound
inc
mov
jp
cmpsb
mov
and
push
mov
push
lods
cmpsl
mov
ss
cmp
inc
pop
push
in
scas
imul
rcrb
rcrb
mov
into
mov
shrb
inc
and
xchg
xor
sarb
sbb
xchg
push
push
sub
xchg
lea
fldcw
lds
int
std
shrl
aad
mov
add
decl
mov
mov
mov
insb
pop
test
adc
sahf
stc
aam
movsl
xchg
xchg
push
xchg
and
je
xchg
inc
xor
jle
stc
out
ljmp
je
pop
jecxz
out
fs
push
into
fbstp
and
push
push
or
lds
ret
push
mov
cmc
leave
and
cmpsb
sub
mov
dec
addb
lret
ds
add
adc
dec
add
divl
cli
xchg
or
jae
repnz
dec
popa
js
mov
aas
cwtl
ljmp
test
out
fildl
xchg
add
jb
pop
mov
cwtl
push
push
sar
inc
orl
das
jl
loope
xchg
add
mov
jb
and
cmpb
std
jl
and
dec
imul
xor
in
jmp
insb
adc
cmp
daa
repz
lret
fcmove
leave
je
insb
inc
add
pop
sbb
leave
cltd
sbb
and
xor
jmp
cmp
int
and
and
mov
leave
dec
clc
pop
mov
xchg
fs
cmpsl
dec
lahf
inc
fwait
add
std
ss
jmp
pop
fdivl
pusha
mov
cli
in
cmpsl
imul
push
andl
adcl
mov
movsl
and
cld
sbb
dec
xor
clc
pushf
fisttpll
add
test
hlt
leave
popa
xor
mov
push
push
orl
arpl
fs
inc
lret
push
xchg
adc
jle
pushf
arpl
mov
ds
sub
rolb
ljmp
dec
in
andb
push
pop
adc
jne
jno
xchg
dec
fcomps
sahf
es
lcall
loop
movsl
sub
out
add
mov
jp
bnd
add
push
push
lret
push
shll
insl
imul
std
fstl
mov
icebp
mov
insl
clc
or
stos
ja
dec
dec
das
or
jmp
jne
cmp
das
loope
sub
les
filds
jle
adc
xor
aam
fs
inc
and
or
sti
cmpsl
mov
ud0
cmp
or
ljmp
cmp
and
add
jno
adc
jns
push
sub
pusha
dec
outsb
sub
addr16
lock
push
mov
sbb
push
and
into
cmpsb
xor
mov
push
and
nop
xchg
inc
add
das
adc
push
addr16
sub
mov
aam
push
xor
test
fstps
sub
pop
cs
stos
test
cmp
add
into
sarb
pushf
lcall
gs
hlt
lock
dec
aas
jmp
fisttps
mov
ret
mov
xor
scas
cld
mov
mov
in
stc
mov
int
movsb
and
cmp
insl
test
push
mov
fs
lods
cmpb
adc
push
test
cmp
mov
pop
xor
lods
dec
lock
in
cwtl
cmp
daa
psrlq
pandn
adc
imul
cmp
cld
iret
or
fsubrs
fbstp
icebp
and
test
jnp
daa
mov
popa
icebp
popf
and
xor
xchg
scas
xchg
push
fmulp
lcall
pop
mov
mov
cli
movsb
int3
mov
cmp
outsb
pop
pop
adc
lret
cmpsb
push
push
call
incl
scas
nop
mov
in
push
xor
jecxz
pop
mov
jecxz
or
push
jmp
sub
cmp
ljmp
jmp
pop
push
jmp
jl
mov
repz
jmp
add
