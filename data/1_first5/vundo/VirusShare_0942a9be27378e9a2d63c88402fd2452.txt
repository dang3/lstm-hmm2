in
call
push
call
int3
stmxcsr
cmpl
je
jmp
ret
push
mov
push
push
push
mov
pop
pop
push
mov
lret
xor
icebp
shl
sar
sti
jmp
xor
dec
jns
push
rcrb
ret
push
mov
push
movl
scas
inc
add
xchg
push
test
je
sbbl
mov
call
jmp
leave
lret
ljmp
out
ret
int3
add
fstpt
push
cmp
testb
push
les
inc
or
mov
mov
pop
ret
mov
sub
push
fidivrs
jge
jne
sbb
pop
sub
mov
xor
or
in
lock
mov
pushf
or
push
xor
or
cmpsb
imul
call
cmp
pop
insb
dec
sarl
and
adc
add
cmp
dec
mov
addr16
lea
pop
sub
xor
inc
aam
aam
dec
and
cmpl
add
in
or
test
and
xchg
jo
or
add
push
mov
cmpsl
mov
rcl
inc
inc
pop
fildl
xor
pop
and
inc
or
ficompl
imul
add
push
lods
insb
push
pusha
outsb
int3
jno
xchg
sub
lods
jns
jge
popf
stc
insl
xor
cmp
add
enter
cmp
push
xor
clc
jbe
outsl
rorl
and
dec
xor
test
out
lcall
sub
shlb
push
dec
cld
test
je
jg
lock
xor
sbb
jb
imul
fnstcw
cld
sub
loopne
ja
push
jne
jno
nop
jge
jle
or
and
cmp
cmp
jecxz
adcb
inc
inc
cmp
call
ss
enter
sub
call
dec
lea
clc
push
enter
dec
call
sub
in
repnz
or
lea
dec
jb
clc
pop
and
push
in
xor
mov
cmp
xor
cld
scas
or
in
xor
clc
jg
xlat
sahf
bound
mov
jo
mov
hlt
lea
xor
rol
inc
ljmp
ret
in
jae
loopne
cmp
sar
out
mov
push
arpl
testb
call
hlt
mov
mov
xlat
ds
add
jo
jmp
cli
inc
ds
idivl
pusha
ds
sub
pushf
lret
and
ljmp
push
cwtl
add
add
mov
test
adc
or
lock
ret
cmp
or
loope
dec
mov
mov
loopne
rolb
loopne
or
loopne
ret
jle
pop
cltd
loopne
xorb
adc
shl
lds
lret
mov
jmp
push
mov
adc
adc
int
inc
mov
dec
jae
fmul
and
int
adc
or
add
or
sbb
outsl
sbb
jae
int
mov
adc
in
in
dec
fcomp
fcomp
cmp
scas
es
pop
fsubs
mov
sbb
xchg
push
pop
movb
lock
mov
sbb
pop
fs
xchg
ja
adc
movl
mov
inc
push
fwait
into
out
inc
sub
sub
shrb
inc
sub
inc
jb
test
inc
inc
jb
test
inc
add
enter
add
jb
test
or
ret
or
adc
push
inc
mov
sub
jmp
mov
insl
adc
add
inc
and
inc
pop
sub
mov
or
test
rclb
in
push
sub
cmpsl
or
jne
and
pusha
xlat
jmp
sub
xor
pop
mov
jmp
push
nop
inc
clc
and
mov
stos
lods
addr16
call
out
pusha
sbb
nop
adc
test
ret
dec
push
lock
push
ret
hlt
add
push
js
in
lock
adc
pushl
in
jg
inc
mov
xor
mov
lock
inc
je
push
xchg
mov
or
and
jmp
sub
cmp
push
test
lret
pop
pop
sbb
mov
ds
mov
aad
xor
dec
jo
outsl
or
push
push
xor
scas
jmp
and
sbb
sbb
dec
pop
sbb
push
jo
dec
test
sbb
into
rorb
sbb
push
inc
jp
jb
xchg
mov
pushl
or
clc
mov
js
adc
sub
cld
call
xchg
hlt
mov
inc
test
cltd
imul
adc
sbb
dec
or
xor
push
ret
push
push
or
out
and
sar
inc
nop
ja
aas
mov
xchg
es
cmp
rorl
push
xor
sbb
sbb
insb
lret
and
sub
sbb
inc
xor
xor
inc
lea
adc
cmpl
or
or
pop
mov
fimull
jmp
xor
inc
push
rclb
rclb
cmp
mov
and
jl
or
sbb
fldenv
and
cmpsb
mov
mov
push
jne
out
stc
inc
mov
inc
aam
sub
mov
jp
xor
pop
adc
or
mov
into
or
sub
into
rcrb
or
jle
fcompl
sub
insb
jo
add
sub
push
inc
jl
xchg
xor
push
sub
addb
sbb
loop
lods
sub
add
xchg
dec
or
dec
inc
fsubr
outsb
ljmp
fcoms
imul
cltd
imull
mov
rorb
into
mov
and
xchg
pop
xor
out
adc
dec
in
inc
rcrl
int3
ret
fstpl
push
mov
adc
je
ret
imul
hlt
dec
decb
pop
mov
cmpsb
sbb
fistpl
adc
jmp
lcall
cmp
or
sarl
or
add
loopne
movsl
xor
lret
sti
sub
sbb
adc
xor
aad
popf
mov
push
rorl
push
xor
hlt
inc
pop
dec
insl
nop
aaa
dec
inc
push
add
push
adc
adc
in
add
push
mov
cmp
mov
jge
imul
and
xchg
mov
pop
jmp
add
adc
or
mov
sarb
loope
test
hlt
dec
mov
int3
ss
xlat
inc
add
push
daa
or
je
mov
adc
neg
sbb
jb
jecxz
or
add
and
stos
clc
hlt
mov
rorb
and
sbb
mov
pop
mov
dec
fiadds
push
clc
push
insb
xchg
out
jae
push
inc
je
movsl
mov
mov
sbb
rcll
jae
cld
jl
pop
jl
addr16
adc
sub
fsts
push
fnstcw
insb
call
xchg
outsl
jl
outsb
movsbl
or
jnp
pop
push
icebp
lock
adc
add
nop
and
mov
xorb
cmp
arpl
pop
push
into
loopne
mov
jmp
adc
xor
add
in
cmp
hlt
leave
mov
cld
shl
sbb
call
orb
dec
das
in
jp
lock
xor
push
insb
fdivr
add
inc
in
dec
pcmpeqd
clc
add
push
dec
fcoml
xor
push
sub
addr16
outsb
inc
fcompl
jbe
iret
shl
pushf
cli
in
sarb
cs
aam
xor
cmpsl
mov
lock
mov
add
pushf
out
push
adc
pop
in
jge
dec
mov
ljmp
push
orb
add
addl
adc
leave
movsl
jns
inc
sub
inc
adc
out
ret
out
jne
daa
mov
cmp
xor
sbb
pop
or
add
push
shll
rcll
sub
xchg
insb
cmp
and
cmp
push
sub
sbb
pop
mov
dec
mov
adc
xor
jnp
xchg
lock
push
inc
inc
push
inc
out
and
or
jb
jns
sbb
push
es
or
rcr
xchg
lcall
add
leave
push
shll
mov
xlat
into
out
cld
sub
ja
add
mov
and
add
daa
xor
daa
ja
leave
xchg
pop
enter
and
repnz
sbb
and
rcrl
add
add
int
outsl
daa
xor
dec
sbb
push
add
mov
mov
sbbb
hlt
add
push
inc
xchg
xchg
add
pop
leave
test
lds
push
lds
mov
xchg
mov
inc
jb
ja
mov
pop
xchg
xor
and
mov
leave
test
push
loopne
mov
das
mov
xchg
out
push
cld
loop
adcl
ret
xchg
or
shll
mov
xor
adc
mov
daa
sbb
ljmp
lea
daa
shr
lahf
loop,pt
mov
dec
jne
mov
decl
hlt
scas
fiadds
subb
jmp
xchg
loopne
das
adc
imul
ds
jge
jmp
adc
test
in
pop
inc
dec
sub
sbb
or
js
cld
jne
rclb
fnstsw
hlt
aam
cmpsb
jecxz
fcoml
jo
or
push
xchg
cmp
je
mov
jp
mov
pop
adc
insl
mov
lods
incb
sub
stos
add
idivl
cmpl
adc
xchg
sbb
xlat
push
jl
and
mov
push
add
push
or
mov
add
bound
outsb
hlt
or
nop
mov
push
inc
andl
cmp
mov
xchg
pop
xchg
and
xorb
sbb
mov
mov
fwait
push
fdivrs
jb
je
fs
aad
jbe
mov
mov
jmp
push
adc
adcb
addl
jo
je
icebp
decb
jb
clc
movl
pop
cmp
mov
push
clc
push
cmp
pop
and
sub
cmp
and
clc
scas
outsl
mov
mov
leave
pop
jno
xchg
cmp
movsb
and
clc
jno
nop
jl
sbb
cs
and
das
rcrl
mov
aas
andl
add
in
cmp
clc
sub
cld
mov
lock
xchg
sbb
pop
lods
lret
adc
adc
es
and
mov
movb
jmp
into
movsb
int3
push
test
or
ds
add
cs
push
pop
hlt
enter
or
or
xor
repz
sar
cmp
fs
sbb
test
dec
push
out
sbb
lea
dec
ja
add
shll
or
fsubrp
gs
pop
inc
push
pusha
lcall
pop
push
xor
sbb
pop
pop
lret
mov
arpl
das
sbbb
cmp
jmp
cmp
and
jae
mov
aad
jl
add
clc
std
imul
adc
and
lock
aad
mov
addr16
xchg
dec
mov
fwait
sub
xchg
sub
aas
adc
and
cwtl
jge
jmp
sbb
or
orl
fsubl
sbb
aad
lock
and
cmc
push
mov
lea
arpl
mov
test
sbb
daa
sub
xchg
call
or
sbb
push
add
loop
gs
mov
adc
cmp
in
dec
stos
sub
dec
iret
enter
jae
mov
mov
jp
sbb
iret
xchg
jmp
dec
sti
dec
inc
adc
pop
cmp
das
daa
addb
dec
repnz
iret
out
push
mov
xchg
aas
call
fadd
subb
adc
repnz
cwtl
adcb
in
jmp
mov
jb
sbb
add
add
xchg
cmp
jl
mov
stos
adc
into
aaa
add
stos
hlt
jmp
movsl
xlat
xchg
mov
popa
int3
cmp
xor
faddp
pop
jo
mov
and
adc
nop
sub
add
mov
sub
mov
jb
in
inc
sbb
push
cltd
xchg
add
hlt
sbb
or
sub
fnstsw
adc
and
lcall
cs
out
int3
dec
push
mov
xor
cwtl
push
cmp
shlb
mov
adc
in
cmp
aam
lock
xor
pop
mov
xchg
pop
rcll
inc
or
lock
rcl
movsl
loopne
cs
add
test
sub
dec
sbb
add
inc
jb
xor
repnz
loopne
rcll
adc
add
test
mov
adc
sbb
dec
call
cmpsl
mov
xchg
hlt
push
clc
clc
test
cli
jmp
out
and
or
mov
xchg
mov
arpl
ss
les
into
sub
mov
hlt
mov
cmp
cmp
pop
ljmp
mov
adcb
lcall
dec
clc
hlt
sbb
ss
xchg
add
hlt
and
add
and
push
ja
bound
add
outsl
out
xor
ja
daa
ja
mov
cmp
in
xchg
inc
inc
add
mov
push
dec
dec
dec
cmp
or
outsl
dec
in
xor
dec
add
hlt
mov
dec
clc
clc
das
pop
add
or
daa
sbb
mov
jo
inc
ds
hlt
add
add
loop
scas
fs
xor
bound
stos
pop
ja
fadd
dec
scas
inc
ja
mov
dec
or
dec
outsl
pusha
dec
mov
out
popa
add
cld
hlt
mov
cmp
std
mov
mov
or
jnp
aas
add
pop
shrb
repz
cmp
add
add
fildl
pop
loopne
or
jne
out
imul
movl
ja
push
xorb
pop
push
loope
lock
rcrl
cmp
pushaw
dec
dec
push
and
and
popf
add
jnp
or
push
lock
inc
cmp
mov
inc
sbbb
out
jmp
jmp
mov
pop
rcl
or
loope
into
daa
subl
hlt
out
ljmp
popa
rorb
jo
shll
jmp
pop
dec
mov
or
adc
dec
lock
or
mov
pop
push
dec
into
in
fcompl
mov
add
sub
adc
pop
in
rclb
xor
jmp
loope
mov
push
pop
adc
inc
ret
cmp
sbb
adc
xor
push
pusha
jbe
test
dec
fwait
adc
bound
xor
pop
adc
das
hlt
jo
mov
js
adcl
sahf
call
addr16
xor
sbb
test
pop
mov
sub
and
pop
jge
xor
mov
inc
sub
dec
or
sbb
cmp
jne
push
mov
inc
rorb
add
sbb
push
jmp
sbb
addr16
mov
add
dec
pop
fs
mov
xlat
cmp
popa
js
subb
imul
push
cmp
hlt
popf
and
jp
and
notl
xchg
movsl
jle
adc
add
add
loopne
insl
add
je
loope
pop
les
xchg
pop
cmp
addl
test
xchg
addr16
add
pop
loopne
mov
mov
subb
icebp
das
jnp
addr16
cmpsb
mov
xchg
xor
dec
lods
test
enter
or
add
jbe
orl
push
scas
inc
cmp
xchg
lds
push
pop
xlat
fisubrl
in
or
jge
mov
gs
rol
jmp
cmp
int
and
xchg
lock
js
in
in
movl
sbb
mov
fwait
or
mov
orl
or
mov
and
dec
or
push
and
popa
sbb
shll
lds
sti
xor
dec
mov
leave
sub
mov
loopne
es
adc
jge
lds
sbb
mov
gs
jo
in
mov
mov
imul
fmuls
and
jbe
xchg
xchg
push
pop
add
inc
push
sub
adc
pop
mov
adc
lods
add
ficoml
int
lock
xchg
push
xchg
adc
test
add
rolb
lea
xchg
lods
jno
lahf
push
sbb
adc
add
daa
jmp
add
push
add
cmp
add
dec
cld
and
add
add
sbb
sbb
ret
fs
outsl
sub
cmpl
jbe
ret
mov
js
scas
sub
or
and
sbb
scas
push
cmp
repz
clc
jne
stos
xor
mov
mov
cld
fistpl
out
push
pusha
mov
sbb
imul
jmp
ljmp
fstpl
push
adc
add
in
mov
call
popa
repz
hlt
add
lret
add
mov
loopne
mov
jmp
inc
sbb
fcoml
pop
pop
fiaddl
adc
adc
xchg
push
in
enter
psubusb
adc
xchg
push
pop
adc
shr
scas
call
xor
dec
jo
or
mov
je
dec
cwtl
inc
scas
sbb
or
in
jle
adc
imul
bound
daa
outsl
pop
add
sub
shll
faddl
int3
loopne
sub
dec
loopne
fiadds
inc
dec
add
xchg
call
push
dec
dec
cli
lock
movsb
loopne
sbb
insl
lcall
out
pop
or
and
xor
or
adc
adc
mov
mov
sbb
je
jp
hlt
adc
fisttpll
sbb
mov
popa
xor
adc
aad
xor
adc
sbb
loopne
aam
mov
dec
add
mov
pop
out
in
add
call
sbb
iret
inc
jnp
adc
mov
mov
xor
jns
cld
pop
test
inc
adc
sbb
and
fsubrl
push
nop
insl
add
inc
mov
les
or
and
gs
test
mov
jg
and
inc
daa
es
cltd
cmp
push
mov
mov
inc
shlb
push
mov
or
outsl
mov
jle
mov
pop
mov
or
por
fstpl
xor
pushf
adc
dec
dec
dec
lea
xor
dec
test
dec
out
push
xchg
dec
inc
rorl
mov
pushf
pushf
xor
adc
inc
dec
dec
loopne
daa
cwtl
addl
lcall
nop
lret
and
pushf
inc
or
add
lods
lods
js
mov
in
imul
xchg
xchg
addb
jae
nop
pushf
cmp
jecxz
dec
and
mov
cmp
scas
arpl
lock
inc
push
loopne
cltd
mov
push
dec
aas
cmp
repz
in
popf
jne
mov
movsl
push
push
mov
cmpsl
stos
les
mov
ret
lea
cmp
jl
mov
jb
ret
pop
cmp
push
lods
mov
xchg
fstl
test
fdivl
leave
je
xorl
xchg
insb
insb
dec
dec
outsb
jo
lahf
xor
xor
lea
push
and
fs
sbb
mov
push
fsubrs
mov
pop
sbbl
or
mov
sbb
jbe
pusha
pusha
fs
leave
and
sub
gs
xlat
test
inc
test
leave
gs
pop
pop
pop
or
mov
lods
icebp
pusha
and
dec
sbb
je
lea
jecxz
aaa
inc
and
subl
lods
sahf
lea
mov
daa
sbbl
pop
push
or
enter
pusha
mov
rorb
punpcklbw
data16
cld
cld
and
cs
add
pop
dec
in
fwait
sbb
js
inc
push
inc
sub
inc
xchg
cld
cld
adc
dec
push
stc
lahf
push
push
pop
and
xchg
test
dec
add
push
or
insb
lret
and
sahf
jp
sbb
inc
xlat
push
mov
push
cmp
push
mov
scas
fisubrl
loopne
adc
add
lret
xor
inc
incl
mov
repz
adc
imul
sub
loopne
rdpmc
shl
testl
adc
scas
iret
hlt
mov
mov
push
pop
shlb
xor
mov
je
add
jp
add
fildl
ret
pop
andl
mov
out
je
inc
popf
cmpb
adc
mov
or
or
dec
push
imul
and
dec
jle
dec
into
push
push
jo
jmp
jg
push
lock
push
mov
movl
addl
incb
add
and
mov
xor
lahf
jl
sarb
rorb
aas
sbbb
xchg
ljmp
je
pop
shll
add
add
rcll
push
insb
gs
ret
jle
add
dec
das
mov
loopne
or
call
mov
jl
adc
jecxz
mov
ja
push
arpl
xchg
aaa
outsb
or
cmp
pushf
mov
cltd
dec
xor
les
pop
adc
pusha
int
lahf
test
push
lahf
les
sub
sub
loopne
fmuls
xchg
and
add
push
cmp
ljmp
sub
xchg
sub
mov
inc
mov
cmp
xor
jmp
pop
xor
mov
lock
jo
inc
cld
dec
and
jo
sahf
icebp
mov
rcll
cmp
and
aam
pushf
ret
cmp
ret
sbb
push
jmp
wbinvd
outsb
sub
jmp
xor
addl
clc
movsl
adc
in
add
xor
lods
or
ret
fisubs
inc
lret
adc
popa
inc
pop
lds
lea
sbb
in
orl
pop
mov
mov
pop
les
pop
push
xchg
test
out
add
out
pushf
pcmpeqd
shl
or
push
daa
mov
sub
lea
xchg
pop
sti
sub
imul
sbb
lahf
mov
or
sub
imul
sub
pop
and
adc
and
adc
xchg
adc
lea
gs
dec
mov
sbb
addb
fbstp
xor
jae
mov
insb
xor
aaa
les
pop
push
adc
or
inc
in
out
lods
inc
sbb
jnp
adc
addr16
cmp
mov
adc
inc
push
in
mov
pusha
push
add
cmc
iret
lock
fwait
aas
push
jg
aas
xor
xchg
jl
sub
mov
cmpl
mov
and
sub
cld
xchg
pop
repz
xchg
mov
cmp
loopne
xor
add
sbb
or
adc
cmp
cmp
xchg
add
or
jle
add
clc
xchg
jmp
ret
add
sbbb
mov
sbb
or
sbb
sbb
push
or
das
dec
hlt
or
mov
cmp
xchg
mov
and
dec
pop
inc
in
daa
call
out
ficomps
inc
xor
or
pusha
adc
pop
jg
loop
and
or
mov
popf
hlt
arpl
in
mov
shll
add
mov
sbb
jge
xchg
in
mov
insb
subb
rol
xor
mov
mov
addr16
orl
cmp
lea
push
push
push
xor
sub
xchg
sbb
mov
test
mov
mov
ds
lea
testb
in
cmp
idivl
inc
push
sub
mov
ds
rclb
mov
sbb
fmuls
pushw
adc
inc
loopne
mov
rol
mov
cmpsl
mov
int3
inc
or
daa
test
push
imul
rcl
adc
push
shl
add
in
lods
adc
pop
sahf
out
jl
cmp
repnz
js
jo
divb
mov
pop
daa
lock
or
std
xor
pop
and
mov
movsb
cmp
or
push
lea
dec
push
scas
dec
cmpsl
push
les
movsl
std
mov
jle
aam
imul
add
shrl
les
or
ds
mov
xor
fcomps
shrl
or
push
repz
xchg
mov
imul
pusha
movsb
add
lock
xchg
testb
icebp
xlat
or
test
lcall
xlat
je
out
shl
cli
dec
cmp
lock
cmp
shrb
sbb
inc
push
sbb
xchg
mov
sub
std
lods
xor
adc
les
cmpsl
inc
cwtl
xor
test
jb
adc
cmp
lock
dec
stos
pop
push
mov
bound
lea
js
inc
notl
out
or
pop
movsb
xlat
fstl
push
jb
lods
call
push
mov
bound
jnp
cmp
roll
and
rcl
negb
push
add
js
subb
cmp
lock
sub
mov
imul
mov
ja
mov
push
stos
mov
or
insl
push
adc
xor
add
fwait
push
and
lea
xchg
adc
pop
or
push
in
test
add
add
cmp
add
aas
xchg
inc
sbb
cmp
adc
lea
mov
mov
pop
nop
dec
in
fsub
sti
fistpl
cld
cmovb
or
mov
mov
pushf
cmp
or
aas
add
sub
add
mov
int
rclb
mov
jnp
jae
lret
mov
push
popf
bound
cmp
test
mov
push
imul
pop
xor
jae
lcall
sub
sbb
inc
pop
out
leave
mov
dec
insb
xor
mov
xorl
add
lea
test
jg
rcll
inc
pushf
dec
addb
mov
adc
test
test
in
sbb
adc
addb
sbb
pop
mov
repnz
lods
cmc
pop
inc
dec
mov
xchg
dec
xorb
add
hlt
mov
sar
jl
outsb
dec
jae
mov
lcall
xor
sbb
ret
arpl
push
mov
hlt
lods
mov
and
dec
les
imul
dec
push
loopne
dec
in
or
mov
push
imul
dec
mov
jmp
push
stos
add
sti
addl
or
test
outsb
mov
pop
fisttpl
pop
and
jle
jae
mov
insl
and
std
pop
sbb
rcrb
fmuls
dec
in
femms
lcall
cs
int
inc
outsl
add
call
orb
adc
add
inc
cmpsb
or
mov
fs
or
je
pop
stc
adc
jne
mov
lock
add
jb
data16
hlt
sub
push
push
test
sub
pushf
leave
inc
dec
je
push
dec
ret
fimuls
jno
icebp
cwtl
jno
pop
jbe
inc
push
dec
pop
imul
adc
adc
ljmp
in
or
sbb
mov
subb
inc
and
or
addr16
adc
adc
mov
aaa
jae
aas
mov
push
mov
cmpl
pop
push
es
push
fistpll
ret
jnp
ja
test
xchg
push
pop
xchg
sbb
inc
adcb
mov
sub
xchg
test
cltd
adc
inc
or
xlat
mov
mov
push
xor
hlt
push
jl
mov
in
mov
hlt
lods
xchg
lock
push
lods
scas
nop
push
pop
dec
sahf
fdiv
xchg
dec
xchg
imul
pop
sbb
jmp
jne
lock
lret
rolb
push
js
rorb
mov
in
push
shlb
fimuls
xorl
in
add
movsl
mov
mov
cmc
add
cmp
mov
in
out
mov
adc
js
loopne
mov
and
or
cmp
aad
loop
call
pushf
in
xorl
enter
push
add
movsl
jne
shl
lock
std
or
shll
lea
cmp
jne
addr16
mov
push
jmp
cmp
imull
int3
pop
push
xchg
push
daa
jne
lea
ret
and
and
repnz
add
add
add
mov
bound
leave
daa
je
fldl
rorb
mov
or
add
faddp
cs
jmp
sbb
or
sub
scas
fnstcw
pop
lret
or
dec
test
jl
or
fildl
xorb
push
xchg
aam
fcoms
scas
or
pop
mov
std
cmp
sbb
sub
cmpsb
dec
ja
cmp
inc
push
pusha
jnp
pusha
cmp
cmpsl
dec
pop
mov
sar
sbb
bound
xchg
sti
mov
mov
in
pop
movsl
pop
hlt
lret
xlat
aas
adc
in
in
call
in
js,pt
push
dec
mov
sub
push
hlt
hlt
jmp
ss
jne
and
or
fwait
lock
lock
xchg
paddsb
and
add
or
sub
fs
adc
jo
stc
jle
lock
dec
dec
lock
push
jo
pop
xchg
or
sub
inc
adc
push
adc
cld
outsb
push
push
or
shlb
lahf
shll
call
sbb
mov
cmp
cmp
sbb
inc
inc
out
adc
adc
lods
cmp
mov
mov
inc
sbb
inc
xchg
cmpsb
cltd
cmpsl
cmp
add
enter
movsb
repz
fstl
movl
lea
lahf
jnp
ja
mov
mov
lock
pop
rorb
inc
imul
lret
mov
daa
mov
into
push
fwait
jg
add
adc
jge
rolb
adcb
test
dec
out
fisttps
add
mov
sbb
dec
cwtl
nop
add
in
pushf
mov
movsb
add
data16
inc
fimull
add
inc
adc
ja
add
pop
repnz
xchg
push
add
pop
add
jns
dec
pusha
add
add
sbb
and
inc
pop
shll
add
enter
add
mov
repnz
out
add
repnz
mov
enter
nop
orl
sbb
add
add
add
add
add
add
jo
mov
nop
out
xchg
or
orb
mov
movsb
test
xchg
sbb
lods
mov
pop
jo
enter
ja
add
in
add
lock
inc
lcall
or
and
add
or
orb
and
push
and
mov
mov
in
add
add
add
add
add
sbb
fsubl
cmp
mov
sbb
sbb
call
sbb
ja
fs
push
jns
sub
fs
push
xor
jl
fs
cmp
incb
and
sbbl
call
and
hlt
cmp
add
clc
cld
add
in
and
add
or
mov
ja
add
cmpl
add
add
add
push
outsl
or
add
mov
push
jnp
xor
xor
push
ret
xor
xchg
cs
out
inc
jno
adc
mov
sbb
orb
pop
mov
jbe
mov
cmc
add
inc
sbb
jns
lret
mov
mov
nop
adc
pop
inc
cmp
add
fnstcw
adcl
add
outsl
adc
stc
add
call
lds
add
sarb
push
out
fistps
or
dec
jmp
mov
sbb
cmp
sub
arpl
ds
cld
xchg
jbe
dec
pusha
cwtl
add
movsb
pop
and
add
or
jns
sahf
mov
push
scas
inc
test
push
mov
imul
jne
mov
dec
add
cmpl
imul
adc
adc
lock
scas
adc
pop
or
loopne
jl
xor
ljmp
insb
pop
sbb
scas
xchg
shrb
cmp
push
scas
mov
or
in
lock
insb
xchg
sarb
mov
sub
and
sbb
add
aam
or
sbb
shlb
push
pop
je
loop
ret
dec
aas
cld
cmpsl
rol
lock
jb
jmp
and
dec
fcomps
mov
adc
or
fstps
int
inc
clc
mov
jae
mov
adc
push
adc
xlat
xor
dec
call
dec
in
into
jp
mov
loopne
loopne
outsl
pandn
or
add
movb
jmp
adc
ret
ret
mov
add
sarl
push
faddl
popf
mov
dec
sub
jb
sarl
jne
xor
js
ljmp
insb
lcall
dec
add
dec
xor
loope
sbb
mov
xchg
jle
test
cmp
xchg
and
mov
or
jge
jbe
sbb
insb
mov
jmp
movsbl
and
int
divb
ss
inc
add
jmp
add
fcomp
outsl
insb
or
insb
adc
jl
dec
repz
push
add
adc
jle
fucomp
cmp
call
jnp
pop
pop
into
push
lahf
mov
lret
pusha
add
xorl
jne
add
jne
js
push
xor
mov
mov
addr16
stos
ja
es
ljmp
pop
add
inc
repnz
enter
sub
aam
push
faddl
test
add
leave
mov
add
mov
lock
add
adc
dec
sub
or
or
jo
pop
movsl
adc
adc
add
cld
sahf
mov
add
lea
stos
stos
lea
push
push
lods
or
or
loope
mov
mov
mov
cmp
inc
dec
and
lret
lea
add
sub
fstpt
pop
add
or
clc
xchg
adc
sub
test
push
adc
call
sarb
xchg
test
or
xchg
or
cmpl
fstpt
xor
sub
rcrb
push
mov
hlt
xchg
or
push
pusha
pop
negb
cmp
or
add
xor
idivl
leave
lods
loope
jne
pop
push
lea
ret
or
pop
lcall
or
add
lods
add
jnp
shrl
xor
mov
cmp
inc
ja
lea
mov
push
lock
and
xchg
mov
fwait
pop
ds
dec
mov
scas
pop
rolb
adc
cmp
and
xchg
and
sub
inc
push
imul
in
inc
dec
in
pop
or
pop
adc
jmp
add
mov
nop
sarl
aaa
cmpl
inc
lret
pusha
add
clc
clc
and
push
pusha
test
ljmp
mov
pop
sub
add
jmp
test
xor
test
loop
sbb
jge
cmovno
sub
xor
les
clc
les
outsb
outsl
jmp
rcl
jae
pop
xchg
imul
inc
clc
dec
enter
mov
inc
enter
xchg
xchg
xor
je
cmp
mov
lcall
js
in
fcompl
test
jmp
sub
sbb
cmpb
mov
fistpl
ja
loopne
jmp
and
shrl
xchg
jae
jns
jmp
mov
clc
push
sbb
out
mov
nop
jmp
add
adc
xchg
lock
mov
les
push
fnstcw
push
adc
adcb
pop
hlt
pusha
lods
jle
lods
xchg
clc
pop
xchg
pop
and
sti
inc
or
nop
cmp
nop
jnp
movsb
loope
push
xchg
rclb
jge
aas
pop
loopne
bound
sub
mov
repnz
mov
shrl
test
bound
loopne
in
jne
lcall
das
jo
int
hlt
jae
xor
sub
loop
jns
rorb
faddl
lret
jle
dec
inc
inc
cmc
rolb
mov
xchg
mov
test
insl
and
jp
fadds
popa
imul
sti
nop
mov
leave
cmp
xor
decl
jnp
jmp
jmp
jmp
jmp
jmp
fildll
movsb
mov
or
and
push
adc
sub
dec
lea
sub
inc
xor
scas
popf
shlb
jno
and
mov
shlb
shlb
push
mov
clc
jae
add
dec
and
xor
add
imul
mov
cmp
call
cmpsl
jae
call
add
mov
loope
rorl
push
loopne
inc
das
mov
or
or
sbb
out
push
push
dec
add
in
jnp
xchg
les
adc
stos
addr16
and
push
cmp
std
out
decl
js
mov
mov
push
sub
mov
jmp
addl
sbb
rorb
lahf
mov
testl
cmp
inc
mov
lea
cmp
jb
push
jbe
call
cmp
sub
jmp
dec
inc
jmp
aad
sbb
roll
popa
xchg
iret
or
push
push
sbb
push
push
push
mov
or
andl
inc
das
inc
pop
flds
jecxz
rorb
sti
cmp
jmp
jae
mov
out
fsts
shrb
push
adc
xchg
adc
xor
ds
add
sete
mov
sbb
mov
lea
or
movsl
push
and
subl
jae
or
push
outsl
xor
pop
ss
jl
in
adc
neg
sbb
push
dec
data16
xor
mov
lret
fwait
xchg
mov
xchg
insb
das
frndint
ficompl
shl
fimull
mov
push
mov
nop
call
in
je
lahf
sub
mov
xchg
mov
loop
lcall
cmp
fdivr
out
outsb
jb
std
adc
mov
lea
cmp
push
or
push
sbb
test
lahf
popf
jmp
rcrb
mov
aad
cltd
lds
testb
push
enter
mov
adc
pop
test
cs
cmp
add
lret
loopne
mov
mov
movl
test
mov
adc
ret
sub
mov
fucom
xchg
xor
pusha
xchg
cmp
movsb
lcall
insl
or
cmp
inc
mov
cmpb
dec
dec
or
add
xor
xor
cmp
jbe
iret
imul
add
adc
enter
inc
mov
inc
cmp
mov
jb
andl
lret
push
mov
push
roll
ret
adc
pop
add
pop
movsl
xchg
data16
sbb
dec
dec
cs
mov
sbb
icebp
ret
adc
in
mov
jne
sbb
data16
cmp
outsb
nop
push
movsb
sbb
fsubl
and
xchg
pop
out
sub
mov
jge
movsb
pusha
adc
or
imul
push
push
dec
nop
pop
xchg
push
inc
movq
mov
adc
je
or
push
push
xlat
hlt
jmp
or
sbb
leave
xchg
sbb
sbb
hlt
dec
leave
xchg
dec
hlt
hlt
hlt
xchg
dec
leave
xchg
hlt
hlt
leave
xchg
dec
leave
hlt
hlt
hlt
dec
leave
xchg
dec
hlt
hlt
hlt
test
hlt
hlt
test
hlt
mov
xchg
lahf
lret
and
hlt
hlt
hlt
xchg
dec
leave
xchg
hlt
hlt
leave
xchg
dec
leave
hlt
hlt
hlt
dec
leave
xchg
dec
hlt
hlt
hlt
xchg
dec
leave
xchg
hlt
hlt
leave
test
hlt
hlt
sahf
xchg
rolb
jo
inc
xchg
movl
sbb
in
or
dec
add
in
es
or
divb
adc
lods
in
sbb
repnz
add
scas
popa
movsl
es
sarb
mov
sub
add
roll
xchg
adc
cmpsb
xlat
push
pop
push
adc
mov
js
mov
js
mov
sub
jecxz
sub
dec
hlt
add
mov
or
mov
push
mov
cmp
pop
inc
or
dec
adc
pop
pop
and
sbb
pop
clc
or
adc
test
sub
test
shrb
inc
adc
pop
jmp
sbb
push
dec
call
and
push
and
mov
cmp
jne
mov
mov
mov
loopne
sahf
push
sbb
dec
add
adc
push
mov
mov
aaa
or
int3
das
or
push
insb
mov
add
jne
or
cmp
jne
or
pop
sub
dec
xchg
les
jmp
mov
and
mov
repz
test
mov
or
mov
popa
or
ss
add
adcb
xchg
sbb
dec
loopne
int
repnz
int
mov
shr
test
loopne
sub
mov
or
mov
or
aas
inc
xchg
inc
pop
xor
lss
loope
push
cld
mov
inc
cmp
sbb
dec
push
dec
roll
mov
sub
clc
adc
sar
js
or
xchg
mov
sbb
shlb
mov
adc
stc
dec
loopne
pop
adc
mov
pop
pusha
int
test
arpl
test
ret
sub
and
mov
cli
jmp
cltd
pop
add
in
adc
pop
ret
push
adc
pop
in
loop
add
shl
loope
or
dec
or
add
sbb
add
lock
push
es
fs
lret
jb
push
sub
stc
add
pop
xchg
vunpckhps
and
jb
je
mov
add
push
and
xchg
push
pusha
outsb
mov
pusha
test
shl
es
sub
adc
cmpsl
mov
mov
mov
imul
lret
stos
movsb
jb
shrb
lret
leave
enter
je
mov
mov
inc
xor
push
inc
clts
jg
mov
cwtl
or
gs
adc
dec
mov
xor
aad
push
insl
adc
test
andb
mov
add
stos
pop
cmpl
pop
cmp
mov
lea
shlb
push
mov
nop
out
sub
inc
adc
or
jo
mov
jle
cmp
mov
and
loopne
fstpt
jge
movsb
sarl
inc
insb
lock
adc
call
imul
add
in
pop
lret
cwtl
ss
add
mov
adc
ret
ja
lahf
filds
jo
or
or
jne
add
adc
add
test
jne
xchg
jecxz
cmp
and
jg
adc
fs
cmp
out
loope
mov
leave
sbb
lock
fwait
stos
dec
and
add
mov
cmpsl
movsb
sbb
dec
in
sub
dec
repz
loop
lret
popa
and
push
loopne
sbb
xlat
lcall
call
cld
cld
and
mov
sbbl
pop
sub
sub
sar
jle
or
ja
mov
adc
mov
add
pop
adc
push
mov
sub
cmpsb
lea
or
xor
and
mov
adc
lret
shlb
scas
add
ret
fistl
jmp
rorb
pusha
adc
movsl
push
lods
pop
add
push
cltd
jo
lock
pop
sbb
rol
clc
pop
lds
add
sub
mov
xchg
hlt
push
jns
hlt
hlt
sub
in
icebp
out
cld
adc
xchg
add
jmp
mov
mov
andb
pushl
lods
jne
fsubr
sbb
ret
dec
mov
xchg
sbb
pop
cmp
xchg
xor
cmpsl
xchg
imulb
sub
inc
cmp
inc
ja
mov
test
pop
shlb
pop
in
add
adc
xchg
and
xor
fnstenv
sbbb
fcoml
jae
imul
rclb
movsb
shrb
lea
test
enter
xchg
fcoml
ret
rolb
mov
cmp
sbb
fsubs
add
add
jb
and
movsl
xchg
test
imull
dec
hlt
xor
sarb
fs
sub
push
mov
cmp
add
sbb
je
lds
push
mov
es
cld
mov
sub
mov
push
jo
pop
pushl
ja
cli
jo
daa
test
clc
std
push
inc
lret
lds
mulb
cmp
movsb
popf
popa
divl
repz
ror
sub
jne
clc
gs
insl
lds
aad
add
test
fldenv
dec
out
push
pop
pop
outsl
adc
pop
scas
imul
sub
jb
filds
adc
dec
hlt
jmp
jb
dec
or
push
push
clc
mov
push
clc
pop
es
clc
or
and
ja
mov
and
or
pusha
push
repnz
push
leave
fs
push
in
inc
jo
je
push
and
jl
sub
or
addb
push
pop
leave
inc
jle
addl
mov
jl
in
sbb
push
add
jns
pop
pushf
or
in
pop
mov
pusha
mov
scas
in
push
test
jo
je
cmp
cmp
push
addb
pop
jb
addl
mov
cmp
sbb
daa
push
add
or
pop
mov
dec
es
pop
movsb
or
sub
in
cs
jo
xchg
mov
scas
popa
repnz
add
je
dec
xor
out
call
clc
jo
in
scas
add
in
dec
scas
test
mov
inc
scas
nop
jo
dec
ds
push
push
aaa
loop
mov
mov
or
push
lea
mov
cmp
jbe
and
ret
das
dec
out
pop
dec
push
shl
push
lea
push
xchg
jb
or
adcb
add
lcall
test
bound
sub
adc
or
lret
add
ss
pop
adcl
mov
ror
repnz
or
mov
mov
int
clc
adc
mov
adc
sbb
out
add
sub
rclb
pop
pop
inc
jo
or
xchg
or
rcrl
push
push
loopne
insl
shrb
movsb
cld
xchg
push
push
push
xchg
mov
adcl
pop
push
and
es
pusha
jb
or
add
add
nop
cmp
imull
rorb
loopne
mov
cmp
mov
pushl
scas
push
push
push
push
mov
push
mov
pop
mov
fs
jo
jg
jmp
iret
sub
jne
add
dec
jne
push
sbb
mov
sbb
rep
enter
add
rorl
or
arpl
fs
jae
mov
adc
cmp
mov
or
pop
xchg
and
xchg
js
cld
lock
xor
cld
lock
les
mov
ja
add
in
mov
aaa
ja
pop
scas
in
jo,pn
js
xchg
or
jl
adc
or
jne
outsl
push
jb
bound
lock
or
inc
lock
aaa
push
loope
or
outsl
ret
mov
bound
daa
pusha
fs
dec
push
in
ja
je
mov
jl
insl
loopne
aaa
test
addb
push
insb
lds
push
push
jnp
rcll
push
or
pop
enter
adc
repnz
pop
nop
outsl
jb
adc
daa
pusha
fs
adc
ja
jb
pop
jo
or
lds
ja
jbe
insl
test
jne
outsl
sbb
add
or
pop
xchg
mov
jbe
push
lods
xor
jl
add
xchg
insl
arpl
jne
push
adc
fs
jno
adc
insl
add
hlt
sub
rolb
cmp
jmp
mov
and
rcll
dec
add
test
movsl
cmpsl
push
or
push
sbb
pop
rolb
mov
mull
cmp
test
sub
outsl
shrl
push
iret
add
xchg
or
imul
inc
shlb
sub
mov
add
imul
add
add
jne
xor
in
lret
sub
pop
test
or
ret
push
mov
pop
insb
jae
lods
mov
xlat
or
pushf
loopne
adc
sub
fiadds
test
add
cmpsl
ja
insb
push
push
adc
fsubrs
bound
mov
mov
mov
cmp
mov
or
ret
sbb
aad
andl
jl
and
jae
xor
movsb
imul
aam
les
xorl
mov
ret
mov
or
and
stos
into
xchg
push
rorl
sahf
js
fsub
inc
add
loope
mov
add
mov
call
xchg
add
pop
les
push
les
orl
and
mov
adcl
daa
lret
xchg
icebp
fmuls
push
pop
or
mov
ja
pop
test
shlb
shr
xor
or
nop
sub
pop
sbb
jge
add
popa
loope
clc
sub
cmp
push
loopne
pop
inc
inc
fs
push
lea
lcall
and
test
and
dec
movsb
movsb
and
addb
shr
push
leave
xchg
sub
pop
jnp
mov
scas
enter
in
push
out
pop
add
or
cmp
cs
je
xchg
mov
stc
movsl
push
sub
xchg
push
dec
or
xor
cmp
xchg
bound
cmpsl
mov
mov
and
cwtl
cwtl
xchg
push
arpl
pop
cmpsl
or
add
roll
adc
rcll
adc
ret
rolb
adc
mov
xor
mov
pop
or
jbe
and
out
push
sbb
es
arpl
xor
movsl
push
bound
negl
call
aam
pusha
push
add
test
sbb
movaps
cmc
xchg
mov
add
or
cmp
in
lea
inc
in
pop
or
jae
sub
mov
fdivs
mov
push
lods
imul
dec
jmp
test
inc
sbb
adc
rol
xchg
sbb
call
dec
call
dec
jne
xchg
jb
pop
xor
loopne
lahf
call
fiaddl
dec
into
call
or
and
mov
mov
inc
movsb
cmpl
lret
adc
inc
or
daa
inc
pop
push
mov
lock
pop
mov
xchg
dec
adcl
mov
test
cmp
fs
mov
in
jmp
stos
add
cld
jmp
jmp
jmp
inc
mov
loopne
mov
inc
inc
test
ljmp
aam
pop
push
mov
shr
shl
or
movzbl
xor
cmp
icebp
mov
mov
jne
cmp
icebp
fldt
pop
adc
jo
jmp
push
push
hlt
dec
lar
mov
mov
sahf
rol
je
push
popf
inc
and
je
repz
fmul
jecxz
je
dec
mov
je,pn
add
lock
jle
pop
test
and
je
fwait
sahf
int3
sti
je
loopne
sbb
inc
ret
push
fdivrl
adc
jne
cltd
pop
ljmp
cmp
xor
loopne
icebp
aas
cwtl
ret
push
push
movsb
mov
xlat
iret
push
mov
hlt
mov
push
push
inc
outsb
mov
adc
mov
fldl
adc
out
jg
dec
lock
mov
xchg
into
add
shl
mov
sub
lcall
cmp
jne
dec
cmp
cmpl
and
movzwl
cmp
call
or
add
daa
cmpl
push
jbe
mov
push
push
je
add
add
xchg
in
adcl
xchg
adcb
sbb
adc
aam
or
mov
cld
push
lahf
add
jle
jle
xchg
repz
inc
mov
jl
outsl
mul
mov
dec
or
fwait
push
aam
adc
and
mov
int
cmp
je
push
sub
mov
or
imul
jo
or
xor
inc
shr
push
pop
cmp
push
loopne
popa
xlat
mov
mov
cmp
jne
push
addr16
or
test
stos
adcb
push
sbb
inc
push
cmp
push
lock
mov
out
lea
pop
pop
add
sbb
ret
push
sarb
push
push
js
mov
rorb
aas
repnz
jg
mov
pop
push
push
mov
mov
and
iret
mov
jae
jnp
imul
roll
jb
div
pop
jg
sub
clc
mov
mov
mov
mov
in
cmp
pop
jae
mov
movsb
pop
shl
nop
aas
mov
push
inc
cmp
adc
xor
or
pop
lock
test
inc
out
push
xor
cmc
mov
or
out
and
test
sbb
xlat
sbb
mov
mov
sbb
sbb
jae
mov
adc
mov
adc
mov
test
or
movl
ret
or
or
faddl
add
inc
add
leave
rcrb
mov
sub
notb
aas
hlt
sar
mov
mov
or
inc
jg
sub
pop
inc
cmp
and
lock
cmp
and
mov
add
ret
ds
dec
cmp
into
cmp
mov
out
inc
test
mov
pop
adc
adc
push
fidivl
mov
out
lea
mov
cmpsl
sub
cmp
jbe
sbb
dec
push
lret
add
clc
push
cmp
push
aas
pushl
dec
dec
fcomps
lea
pop
add
push
loopne
jnp
jns
cmpsl
mov
push
or
and
jns
adc
pop
push
mov
sub
and
lds
div
pushl
pop
push
adc
dec
push
add
lea
andl
call
ret
dec
adc
ret
pop
je
lock
pop
sbb
push
and
mov
icebp
or
bound
mov
jge
push
mov
adc
xor
rorl
jp
in
out
and
into
jb
lea
add
sbb
jae
inc
add
mov
mov
test
rorl
push
lret
cmp
xchg
popa
or
jmp
testl
dec
cmp
inc
or
adc
in
fmul
aaa
outsb
lds
push
or
rcl
jge
cld
jmp
shl
mul
sub
stos
or
jne
enter
push
ljmp
int3
cmp
add
jbe
nop
daa
mov
bound
push
dec
xchg
test
and
andb
mov
xchg
xchg
or
rcll
push
rcrl
adc
mov
notl
dec
pop
int
adc
aam
enter
dec
mov
push
js
clc
xor
or
mov
xchg
stos
ljmp
push
sbb
lret
fidivl
or
cs
cmp
jne
sar
stc
fbstp
rcrb
popl
inc
inc
jmp
push
pop
inc
in
loopne
bound
cmc
pop
incb
fstpt
sbb
sbb
stos
mov
cmp
loopne
xor
inc
lds
clc
add
jne
mov
and
in
hlt
mov
sti
pushf
jnp
ror
push
jge
test
sub
push
sub
mov
pop
ds
cmp
scas
xor
push
leave
enter
push
jne
pushl
inc
xor
pop
faddl
and
xchg
ret
dec
cmp
inc
out
adc
fsubrs
sete
push
mov
hlt
movl
imul
mov
cmpb
push
rolb
mov
mov
jmp
incl
bound
inc
or
mov
testb
or
sbb
adc
dec
mov
xor
cmp
sub
cmpsb
divb
jne
cmp
movb
gs
mov
sbb
inc
dec
jmp
lods
shl
icebp
dec
jmp
xor
mov
out
inc
pop
jmp
inc
inc
inc
pop
je
sbb
push
aaa
cmp
test
pop
jg
data16
nop
dec
add
roll
scas
adc
dec
cld
iret
cld
shr
cs
fiaddl
pop
incb
int3
repz
je
aam
cmp
or
clc
pop
sbb
into
fdivrl
mov
fs
wrmsr
leave
testb
sub
lcall
inc
outsb
ljmp
sbb
leave
sarl
pusha
adc
fsubrs
stos
mov
clc
xchg
movb
ret
push
fs
loopne
ss
and
mov
jne
mov
lea
push
lea
icebp
pop
xor
jne
push
mov
shl
add
mov
incl
and
gs
cmp
cmpsl
test
xor
push
or
movsb
inc
cmp
jo
mov
pusha
mov
js
add
out
mov
mov
push
xchg
inc
add
inc
xchg
scas
in
jbe
pop
mov
das
jmp
mov
and
adc
adc
imul
mov
push
push
add
adc
jne
or
mov
add
push
sar
inc
push
push
adc
call
mov
jo
sub
je
cmp
cmp
push
dec
and
inc
dec
sbb
lahf
inc
pop
mov
popa
call
pop
ret
jmp
cmp
je
je
jmp
mov
pop
adc
pop
je
inc
cmp
sti
or
lock
push
sbb
mov
or
and
push
mov
or
inc
dec
pop
pop
shr
cmp
fisubl
lods
mov
push
loope
lea
add
out
fimuls
mov
add
add
aaa
cmp
jb
aas
and
mov
jl
cmp
adc
sbb
mov
push
lea
add
push
mov
or
cmp
test
test
nop
or
push
sidtl
imul
xchg
jl
rorb
test
jle
mov
shlb
sub
add
roll
or
cld
adc
icebp
cwtl
mov
test
pop
loopne
mov
pop
mov
mov
mov
pop
mov
clc
add
inc
add
jl
pop
andb
hlt
xor
cmpl
dec
mov
cs
rorl
pop
adc
dec
sub
fdivs
pop
cmc
mov
insb
jmp
pop
push
int
jp
ljmp
orb
insl
aad
prefetchnta
pop
adc
jmp
or
cld
cmp
jl
pushl
fs
rorb
jb
push
push
or
pop
jge
aaa
and
jae
sti
or
sbb
jp
call
jmp
inc
and
mov
cld
subl
jmp
incl
pop
js
inc
inc
xor
mov
add
out
add
pop
ret
icebp
or
push
insl
lock
pusha
pushf
je
pop
idivb
jg
loopne
fs
push
push
or
cmp
call
call
or
sbb
dec
sti
hlt
adc
lea
push
test
loopne
inc
es
clc
fadds
loopne
les
pop
jb
adc
lcall
mov
ret
push
inc
xor
pop
inc
xor
adc
test
idivl
pop
pop
add
push
jge
mov
dec
stos
xor
mov
pop
push
sub
mov
cmp
jge
ficoml
pop
pop
push
cwtl
imul
push
xlat
or
xor
mov
repz
js
ja
pop
dec
push
divl
mov
push
orb
add
lock
or
push
or
xor
jmp
mov
pusha
shll
or
decl
lock
sbb
mov
inc
sbb
dec
in
add
push
clc
test
xchg
mov
ljmp
fs
test
dec
pusha
rcl
je
sub
sbb
mov
xor
pop
in
stos
fidivs
mov
mov
stos
outsl
inc
ljmp
mov
fdivrs
push
mov
add
andl
pop
ret
xchg
sub
mov
cld
mov
cmp
out
pop
add
aas
mov
and
pop
dec
ret
je
jp
jle
jl
sar
xchg
pop
ret
std
or
cltd
fnstenv
loop
stc
insl
push
jne
jo
inc
xchg
je
test
jle
push
sbbb
fucomp
in
jl
xor
push
sub
and
push
jge
jl
stos
add
test
lret
in
fisubl
sarb
fldcw
sbb
shlb
push
testb
addr16
dec
adc
jmp
and
ljmp
mov
arpl
fdivrs
add
jne
jp
pop
daa
pushf
out
mov
mov
jl
jmp
lea
lcall
push
test
mov
mov
les
icebp
mov
jle
mov
imulb
add
add
push
and
out
or
jb
push
jle
adc
lea
jmp
or
jmp
std
jmp
icebp
lret
cld
enter
mov
shlb
mov
jle
push
movl
mov
xlat
in
mov
adc
loope
xor
divb
ret
mov
fsub
paddusw
jo
pop
ret
adc
and
mov
sbb
mov
cld
sub
push
adc
push
mov
mov
clts
ja
adc
or
adc
shr
jo
lods
loope
lret
daa
mov
bound
mov
cmp
add
sub
das
push
mov
aas
cmp
outsb
dec
jne
and
push
fildl
adc
jmp
in
arpl
ljmp
jmp
in
gs
sub
mulb
wbinvd
pop
pop
out
and
iret
jae
and
add
sub
xor
les
sbb
adc
add
sub
xchg
scas
lock
push
adc
out
ljmp
mov
enter
and
sbb
xchg
or
adc
and
inc
enter
or
rol
std
nop
or
cld
push
push
cmp
fs
inc
add
push
xchg
lock
movsl
or
mov
mov
mov
sbb
mov
test
dec
or
cwtl
shlb
inc
cmp
inc
movsb
sahf
data16
lahf
inc
test
mov
imulb
jge
and
mov
cmpsl
lea
sahf
or
add
or
push
push
push
mov
stos
adc
inc
sti
and
cli
or
test
ds
pop
add
pop
stc
sbb
cmp
xchg
fsubrl
sar
xor
or
pop
jnp
call
sbb
test
test
jb
mov
fldl
pop
and
lea
push
in
or
pop
jg
push
cmp
ja
sub
inc
jecxz
mov
das
mov
lret
and
rep
inc
mov
inc
and
data16
rcrl
in
cmp
xchg
in
push
out
jle
add
mov
inc
das
fnstenv
cmp
xchg
jl
rol
push
jp
test
das
pop
ret
dec
cmp
xorb
mov
test
sbb
add
pop
out
dec
sub
jecxz
cmpb
btc
call
clc
inc
jb
or
adc
enter
and
adc
jp
push
cmp
mov
loopne
mov
add
dec
cwtl
add
mov
push
push
mov
cs
add
or
mov
adc
add
test
sub
std
sub
jne
mov
in
sub
mov
fidivl
mov
push
push
mov
adc
mov
stos
mov
out
je
add
inc
cmp
cmpsb
jb
sub
rclb
jg
cmp
inc
cmp
mov
and
inc
rorl
xchg
scas
cmp
out
cmpb
mov
jle
jb
popa
sbb
cmp
push
and
fsubs
lea
incb
or
stos
lea
repz
mov
mov
add
cli
cmp
fdivs
outsb
add
mov
scas
inc
dec
ret
es
inc
mov
dec
mov
inc
es
jb
sbb
xchg
loopne
lock
jnp
cmp
mov
adc
jo
insl
mov
xchg
ret
inc
inc
cmpb
iret
sub
or
inc
out
jne
stos
add
mov
jmp
jmp
in
sub
je
pop
por
push
imul
mov
adc
ficomps
subl
push
and
inc
push
lds
ret
divb
icebp
arpl
dec
cmp
adc
addb
lods
adc
bound
sbbb
sub
loop
pop
jp
pop
jge
adc
sbb
sahf
ja
push
cli
mov
add
add
icebp
add
mov
push
add
ja
test
lods
insl
jae
out
imul
push
ficoms
or
sub
test
push
or
rcl
pushf
push
mov
jge
ljmp
sbb
roll
cmp
jbe
cmp
jb
xlat
adc
adc
and
stc
or
rep
faddl
mov
in
outsl
mov
jb
and
add
test
negl
pop
nop
push
loopne
jo
pushf
push
xlat
sbb
push
mov
mov
mov
or
lods
psubw
mov
sarl
dec
add
add
inc
add
add
mov
or
push
sub
and
iret
repz
adc
add
out
in
inc
in
call
sahf
out
lock
hlt
clc
cld
or
clc
cld
cld
lea
clc
cmp
shll
jmp
data16
call
nop
inc
pop
ret
pusha
pop
mov
and
mov
sbb
je
into
jl
cld
sub
leave
adc
cld
out
lds
neg
adc
cwtl
xchg
daa
mov
mov
sub
mov
popa
nop
cld
movups
fiaddl
jl
xchg
frstor
mov
add
sahf
inc
push
out
push
add
cs
jne
cmpsb
lea
add
lcall
mov
or
push
lods
mov
iret
repz
int3
fistpll
iret
sbb
sbb
adc
cmp
repz
adc
or
and
repz
icebp
imul
shrb
add
inc
pusha
mov
pop
ja
push
cmpsl
pop
push
ret
lds
cli
leave
dec
andl
sbb
or
mov
adcl
lods
out
and
dec
inc
and
out
inc
ret
mov
mov
mov
call
push
dec
add
inc
jb
jp
adcb
cmpsb
ljmp
adc
mov
sub
cld
shr
mov
imul
add
lea
dec
cld
sub
dec
notb
test
xor
sbb
mov
adcb
push
stos
mov
mov
jne
sar
dec
adc
lock
cli
aas
jbe
push
pop
mov
cmp
inc
push
and
xorb
lret
lea
not
and
decb
loope
jmp
jmp
lea
xor
data16
pop
add
push
ss
add
pop
and
loop
push
or
push
inc
or
aas
pop
shr
pop
clc
and
hlt
in
cmpsb
add
movsb
and
sti
add
mov
pop
cmp
jbe
mov
imul
out
cmp
andb
cmp
je
cmp
das
fists
jno
cmp
mov
out
not
and
loopne
pop
dec
add
sbb
lock
stc
push
pop
xor
and
push
cmp
jmp
pop
mov
fimuls
test
sub
mov
dec
pop
or
or
pushl
pusha
mov
mov
inc
add
mov
jae
cmpb
lock
ret
lret
call
jl
clc
mov
jmp
dec
adc
push
mov
or
inc
adc
push
fdivs
jno
orl
in
mov
or
leave
sub
xor
aam
loope
add
outsl
das
sti
subl
or
ret
or
andl
sub
dec
inc
adc
inc
movsb
push
inc
inc
dec
aam
and
in
shrl
push
adc
or
and
test
cmc
leave
mov
lds
xchg
mov
in
push
lea
cmp
jl
mov
xchg
cmp
lock
je
or
xchg
cltd
ljmp
pop
adc
and
add
or
insl
test
xor
mov
push
outsl
ret
cli
or
push
adc
pop
movsl
cli
movsb
pop
ret
addl
adcl
scas
or
xor
mov
and
push
push
sbb
inc
push
cmp
loopne
popa
or
jbe
push
icebp
add
imul
rolb
mov
incl
adc
outsb
pop
jae
inc
lods
stos
fwait
push
in
xor
cmc
dec
ret
shl
inc
xchg
mov
imul
popf
test
adc
pop
mov
add
add
dec
jne
jns
push
push
mov
mov
out
add
add
add
xlat
les
xchg
sbb
cli
lcall
fsubrs
iret
shr
lea
inc
orl
orl
sbb
lea
out
add
pop
inc
cld
lock
out
push
call
dec
jne
and
sbb
dec
dec
and
mov
inc
cmp
incb
insb
or
fs
lret
mov
cmp
xchg
inc
mov
add
mov
jne
or
xlat
ss
and
and
push
or
dec
repz
xlat
sub
pop
shr
fmull
cld
sub
cmp
push
mov
pop
and
jb
mov
ss
cmp
ret
or
fnstenv
add
cmp
sar
dec
cmp
jl
or
xchg
pop
js
cmpsl
xchg
fwait
add
pop
inc
cmp
frstor
into
add
lea
out
or
aam
dec
or
and
lock
add
sub
pop
adc
fdivr
das
stos
sar
dec
cmp
mov
cld
jmp
lcall
sti
loop
jg
imul
pop
out
lcall
add
lcall
adc
and
xchg
ja
and
adc
xor
mov
repnz
and
mov
sub
js
pop
aam
pop
jge
cmp
lds
xor
push
sar
dec
cmp
test
sbb
xor
lock
addb
xor
and
clc
cmp
dec
scas
dec
je
sbb
xchg
fisttps
scas
dec
cmp
andb
roll
add
ja
dec
in
adc
sbb
fiaddl
fimull
xchg
or
mov
mov
jns
test
push
lods
pop
sahf
out
incb
bswap
mov
out
cmp
pmulhuw
scas
or
dec
imul
sbb
push
pushf
sub
mov
fists
lock
inc
xor
rcl
push
push
cmp
lea
mov
or
into
call
out
sbb
hlt
lock
nop
xor
shr
cld
mov
pusha
pop
into
hlt
cmp
pusha
dec
cmp
dec
mov
decb
iret
jne
ret
adc
push
adc
jb
push
mov
and
adc
fadds
lock
and
or
mov
adc
data16
out
je
sbb
test
mov
inc
std
sbb
push
clc
int3
lea
pusha
adc
mov
jne
inc
int3
add
aaa
ljmp
shrl
xlat
je
dec
imul
out
mov
test
and
jne
lret
ret
pop
jmp
and
loopne
jnp
add
data16
roll
lock
js
jne
mov
fisubs
je
mov
mov
pop
aam
mov
pusha
into
xchg
cmpl
btr
sbb
aas
jae
push
shl
inc
test
cwtl
cli
push
sub
mov
sub
icebp
imul
cli
fcmovb
push
push
cmp
push
mov
sbb
cmp
add
filds
jo
or
adc
in
and
pop
lods
mov
jne
data16
or
cltd
adc
sub
dec
mov
fimuls
into
inc
mov
lods
dec
push
and
clc
into
pop
jp
xchg
cmpsb
imul
sub
fs
inc
mov
mov
js
or
pop
popa
or
and
jo
cwtl
or
cmp
or
imul
add
outsl
mov
cmpsl
jmp
mov
mov
push
adc
pop
pop
jno
shl
rcr
and
fistps
adc
fdivrl
jne
cmp
add
xchg
cmp
pop
inc
ja
sahf
lea
negl
inc
and
vmread
add
test
rorb
inc
outsl
sub
cmp
push
mov
add
inc
sub
jl
add
push
add
dec
and
pop
jo
sti
outsl
adc
cmp
jbe
or
mov
ljmp
fidivrs
mov
call
ret
fs
or
fcomps
xchg
mov
jl
popa
jne
dec
push
or
lods
or
ss
jne
aaa
adc
mov
jmp
adc
lock
mov
shl
mov
test
sbb
cld
imul
jo
daa
ret
cmc
jb
cmp
push
mov
mov
xor
outsb
push
dec
test
xor
xor
mov
lret
pushf
mov
add
mov
sarb
loopne
aad
sbbb
dec
dec
mov
and
add
shll
sub
stc
sti
and
test
jle
cmp
pushl
cwtl
sub
incb
lock
push
inc
pop
rorb
xor
add
jp
insl
xor
cmpl
mov
hlt
int3
mov
cmpw
es
test
add
cmpl
and
ss
or
ret
loopne
fldenv
push
jbe
adc
sub
outsl
push
sbb
xchg
lods
les
pusha
mov
fidivl
testb
jne
inc
fisubl
cli
adc
pushl
jl
loop
jno
mov
jle
ret
push
mov
cmp
add
inc
loope
mov
fisubrs
lret
jg
or
fsts
jl
dec
xchg
lods
mov
sbb
cmp
mov
jle
data16
inc
mov
out
mov
add
sti
xchg
jb
test
jle
adc
imul
insb
xchg
sbbl
adc
in
aad
add
hlt
push
jge
clc
lret
mov
loopne
add
leave
dec
push
lea
add
stc
adc
into
cli
pop
sar
js
dec
adcl
jne
pop
jbe
mov
xlat
test
or
stos
repz
and
sbb
and
and
aam
cmp
xchg
dec
push
push
mov
push
jne
inc
jmp
mov
sbb
lcall
inc
cld
dec
and
add
xor
pop
notb
xchg
insb
xchg
imul
sarb
mov
outsb
jne
xchg
je
xchg
push
cmp
repz
insl
push
mov
inc
aad
cmc
je
push
popa
je
mov
outsb
idiv
and
jmp
mov
jmp
test
jnp
test
negb
pop
rcrb
pop
inc
sub
shrb
loope
push
insl
rolb
scas
add
or
push
jmp
xor
out
mov
call
out
mov
jno
sbb
inc
add
cmpsl
cmp
xor
push
test
in
lret
dec
lock
xor
and
pop
push
pushf
popf
push
addb
jecxz
add
and
push
js
ret
cs
cmp
adc
ljmp
lock
mov
cmpb
sbbb
adc
push
mov
fstpt
rclb
lahf
fdivr
push
ss
bound
aad
iret
sub
fistpl
jno
ret
pusha
or
jbe
and
rclb
push
jmp
push
inc
dec
cmp
inc
inc
xor
fisttps
movb
push
push
mov
adc
xchg
int
inc
adc
mov
mov
push
xchg
lcall
cmp
sub
clc
or
ret
and
push
push
enter
xchg
push
push
pop
adc
ret
or
pop
mov
inc
jmp
shll
and
cmp
jle
jle
stos
pop
or
out
std
stos
int
leave
jl
roll
adc
push
lock
ret
xlat
or
adc
incl
jle
fiaddl
mov
add
xchg
and
or
inc
jb
lods
and
mov
sub
and
add
cmp
scas
cmp
push
add
jne
jmp
pop
add
mov
mov
lcall
mov
adc
sbb
ljmp
fsubrl
ret
sbb
or
jbe
mov
dec
arpl
je
mov
push
add
add
add
out
push
and
inc
enter
add
movl
xor
sbb
mov
test
jp
fistps
sbb
pop
push
push
pusha
ret
stc
lcall
loopne
loopne
xor
fwait
loopne
inc
test
loopne
cmp
mov
add
jmp
jbe
mov
xlat
shlb
out
enter
xlat
sbb
add
clc
insb
lds
sub
xchg
rol
or
or
push
iret
lret
sbb
cmp
js
xor
repnz
jno
dec
aam
push
arpl
push
pusha
lret
aam
push
je
cmp
cmpsb
je
insl
xor
mov
jbe
lret
adc
loope
dec
pop
insl
push
jne
mov
fcompl
sbb
xor
dec
imul
rcll
fadds
xor
add
xor
jmp
lea
push
dec
and
fdivrs
and
neg
sbb
and
test
jns
inc
mov
jmp
outsl
mov
sbb
fcomp
inc
rorb
or
mov
movb
and
lret
or
push
xor
test
pop
test
lock
xor
add
ljmp
loop
js
sub
loop
loopne
fs
mov
repnz
ja
jne
sbb
daa
dec
and
fcoms
mov
ret
fld
push
test
lods
aam
push
icebp
dec
je
aad
test
mov
pop
push
push
sub
and
lock
loopne
arpl
insl
push
push
sti
nop
xchg
jns
jae
insl
lock
mov
outsb
mov
mov
jbe
jno
xchg
test
pop
mov
cmp
mov
cmp
je
push
mov
push
aam
aad
mov
or
xor
ret
push
push
hlt
ss
jecxz
mov
cli
pop
int
or
out
jb
dec
loopne
int3
dec
fcomp
gs
loopne
pusha
add
jnp
sbb
inc
fdivr
sub
push
jb
fmul
fdivrs
imull
ret
or
push
test
cwtl
imul
mov
pop
push
sbb
jmp
mov
clc
add
ljmp
lret
and
fisubrl
shl
pop
nop
jl
mov
enter
push
jnp
inc
mov
or
push
sub
or
dec
pop
fidivl
ret
add
incl
or
push
nop
movsb
dec
dec
cmp
rorl
xchg
mov
aam
cli
cli
xor
xchg
subb
je
sub
lahf
jmp
mov
in
or
loop
lcall
or
imull
add
pushf
sbb
xor
jb
out
sbb
sbb
movb
clc
inc
xor
cs
add
daa
or
lds
sbb
mov
nop
imul
pusha
loop
cwtl
shlb
or
cwtl
stos
cmp
ljmp
mov
mov
sbb
push
enter
adc
movsb
xlat
jno
push
push
or
push
rclb
test
xchg
jbe
or
outsl
fcomi
enter
add
cmp
mov
or
ja
subb
les
lcall
mov
cli
mov
je
adc
fcoms
add
stos
push
inc
push
or
mov
jg
movsl
mov
jne
push
movsl
fcomps
jg
push
cmp
sub
inc
mov
out
mov
cld
mov
adc
add
xchg
shlb
lock
mov
jmp
mov
push
add
xchg
jbe
xchg
nop
add
dec
push
dec
add
pop
clc
cli
int3
jns
jmp
ret
lahf
dec
sbb
inc
pop
lods
push
icebp
cmp
mov
pop
push
popf
int3
lea
stos
in
jle
pusha
roll
dec
jg
add
pop
xchg
hlt
mov
push
push
push
test
nop
fsubl
mov
inc
sbb
xchg
in
mov
fildll
xlat
and
sub
pop
dec
mov
add
icebp
add
cmp
xor
push
fimuls
sub
pop
mov
cs
lods
and
pop
jne
pop
push
test
je
testb
push
and
loop
add
test
or
icebp
cmp
jae
push
pop
inc
loopne
cmp
sarb
sub
push
and
xchg
adc
inc
push
dec
call
mov
mov
loopne
rcrb
icebp
cmp
add
adc
test
push
xor
icebp
mov
dec
xchg
leave
or
add
cmp
movsl
movsb
aam
cmc
cmp
xor
sub
or
cmp
sbb
and
test
jp
std
adc
mov
jmp
lods
repnz
push
push
iret
or
sbb
inc
add
pop
shrb
sub
pop
dec
nop
pusha
fldt
xor
cmp
jmp
cmp
add
sub
out
fiaddl
fstpl
jne
adc
aad
push
pop
data16
rorb
mov
mov
call
inc
or
pop
insb
mov
adc
mov
or
or
push
mov
test
pop
shlb
or
xchg
and
mov
adc
and
push
mov
adc
mov
dec
out
dec
cld
jo
mov
enter
js
jne
sub
loope
push
and
into
or
add
xchg
loopne
pop
xor
jo
or
int3
bound
pop
js
cmpsl
jmp
cli
stc
or
xor
add
push
mov
movsb
adc
test
jl
adc
aaa
push
std
add
jbe
adc
jo
or
clc
or
js
mov
out
push
adc
and
inc
push
add
mov
inc
add
sub
dec
incl
pop
daa
incl
fimuls
jb
push
das
xchg
lcall
or
sbb
inc
sub
mov
jmp
lret
inc
ret
sub
and
jg
ljmp
mov
mov
push
inc
ficompl
adc
lcall
jecxz
fsubr
incb
mov
decl
aam
xchg
dec
inc
mov
jmp
scas
and
call
adc
cmc
leave
std
or
adc
mov
in
scas
call
mov
adc
outsb
out
das
mov
inc
sar
sahf
xchg
test
jg
push
inc
inc
jns
test
lea
fbstp
jns
jo
mov
scas
in
or
mov
xchg
or
es
in
add
mov
adc
push
inc
push
push
sbb
pop
xchg
mov
jmp
fiadds
or
or
add
jl
aam
push
inc
jne
cld
sbb
mov
insb
cmp
xor
lods
bound
and
add
aaa
add
pop
in
pushl
mov
imul
or
inc
jecxz
pushf
test
sbb
scas
or
pop
pushl
rolb
fwait
mov
sub
inc
ret
das
adc
in
std
inc
loop
lock
push
movb
and
xor
fldt
test
stos
loope
inc
mov
in
sbb
cmp
into
je
stos
in
pop
ja
fucompp
mov
cli
sub
adc
data16
push
mov
int
lea
mov
loope
push
sub
dec
jg
xor
jmp
addr16
pop
cmp
stc
call
push
cmp
jb
shll
and
mov
call
mov
add
call
cs
inc
sbb
dec
pop
cmpb
ret
inc
add
pushl
lret
leave
inc
sbb
test
shrb
dec
fstpt
call
jne
dec
cmpsl
sub
cmp
mov
loopne
xorl
sub
sub
add
lcall
outsb
lea
cmp
adc
push
repz
dec
ret
push
movsb
xor
test
dec
sub
das
jbe
jnp
gs
xor
pop
loop
pushl
push
cwtl
mov
sub
lock
loope
xor
adc
std
stos
add
icebp
in
jmp
inc
add
push
sub
pop
negl
dec
enter
lds
int3
lcall
xchg
sbb
arpl
leave
and
cld
xchg
sub
mov
js
fcmovnu
icebp
incl
push
out
or
enter
push
jl
enter
cmp
sar
fsubl
lods
call
inc
aaa
fildl
pop
jle
cmp
hlt
jg
shl
outsl
fisubl
clc
mov
sbb
test
pop
shll
pop
push
add
pop
sbb
incl
push
and
in
xor
add
lock
inc
mov
and
decl
inc
inc
mov
and
insb
inc
inc
call
xor
push
sbb
adc
pop
or
sub
adc
inc
out
loope
dec
dec
xchg
xchg
pop
js
and
xor
xchg
call
call
xchg
add
pushf
push
stos
lods
repnz
jns
sarl
in
decl
xor
dec
add
ret
adc
jmp
jnp
icebp
jl
and
and
adc
sbb
pushl
fidivrl
decl
cld
push
cmp
cmp
jle
enter
loop
jecxz
insl
adc
call
outsb
jns
aaa
outsb
shll
cs
je
movsl
mov
data16
jmp
test
orl
icebp
repz
pop
ljmp
movsb
mov
aad
pop
inc
int
or
out
clc
sbb
inc
std
mov
add
jmp
aas
roll
ds
fwait
push
jae
cmp
int3
or
lcall
call
pop
pushf
orl
lahf
cld
scas
ror
cmp
inc
jmp
movsl
mov
ret
cmp
push
jecxz
es
insb
pop
in
jb
pop
adc
inc
inc
nop
incl
cmp
xchg
or
adc
rorl
call
ja
pop
aam
dec
std
dec
add
xor
lea
fsubrl
in
cmc
mov
ja
lcall
mov
pop
mov
add
cmp
jge
ljmp
dec
push
sbb
ds
inc
cmp
cmp
enter
dec
rol
lock
push
mov
dec
test
xor
mov
jmp
fs
jg
dec
add
daa
ss
in
mov
pushl
mov
cs
inc
jo
or
test
pushl
inc
cmpsl
adc
pop
cmove
call
and
fmull
cmp
or
mov
inc
sub
call
lock
ljmp
repz
pop
push
jo
mov
lock
or
pop
cs
inc
mov
pop
incb
insb
xor
mov
je
or
or
jp
cwtl
jg
sub
ja
push
push
cmpsb
xorb
cmc
aad
cwtl
mov
jmp
or
loop
and
iret
pop
iret
cwtl
cld
clc
es
add
push
mov
jg
icebp
pop
stc
add
mov
movswl
jmp
sub
add
xor
into
mov
jbe
sub
add
inc
movsb
push
sar
shlb
mov
rclb
adc
scas
and
lcall
sbb
xchg
adc
loope
mov
mov
xchg
shrl
xchg
rcll
xchg
adcb
aam
jo
inc
or
aad
jg
fcompl
cmp
push
rorl
mov
mov
xor
ss
rclb
inc
outsb
push
dec
or
loope
lcall
mov
push
xor
xor
in
push
pop
scas
notb
js
idiv
sub
fldl
jge
mov
pop
mov
or
dec
inc
push
aaa
push
rolb
sbb
fwait
jmp
lock
push
xor
jecxz
enter
xchg
mov
mov
pop
jmp
xor
lcall
shl
ret
or
push
or
cltd
inc
add
xchg
ja
inc
sbb
xchg
and
jl
xchg
ljmp
inc
add
test
lea
mov
dec
mov
out
pusha
mov
or
sub
push
adc
or
mov
inc
jbe
pop
icebp
pushl
dec
imul
insl
jnp
aas
mov
jo
inc
cmp
je
call
lock
scas
sub
jmp
add
lcall
push
push
mov
xchg
dec
sti
decl
add
clc
loope
sub
mov
mov
pop
and
lcall
sbb
sbbb
mov
push
xor
test
fisubrl
mov
ss
pop
incl
adc
bound
incl
incl
add
clc
decl
inc
cld
mov
xchg
push
sbb
daa
sahf
sub
mov
clc
add
dec
pop
sub
cmp
movsb
and
or
decl
mov
adc
stos
lcall
mov
shlb
sbbl
decl
jbe
sti
lret
and
dec
arpl
mov
fcompp
sarb
incl
loopne
pop
jae
xchg
xchg
lret
es
or
push
lds
mov
aam
push
adc
jnp
jmp
mov
cmpsb
mov
loope
lods
int
xor
clc
or
int3
pop
jl
inc
cli
and
mov
test
push
fisubrs
cmp
cmp
or
fs
gs
ret
push
loopne
nop
xchg
dec
xchg
cmp
mov
jo
test
adc
pop
mov
fcmovnbe
frstor
adc
mov
cmp
sbb
call
xchg
popa
sub
push
mov
adcb
stos
or
pushl
sar
xchg
cmp
sub
inc
xor
insb
mov
aaa
cld
mov
pop
push
jl
mov
sahf
mov
movsb
je
cmp
dec
cmp
add
jmp
cmp
jecxz
jb
pushl
push
sbb
idiv
jge
daa
insb
or
jl
movsb
xor
jbe
jmp
cld
fnsave
jge
add
cli
rcrl
fstpt
dec
push
ja
outsl
lock
sbb
jg
enter
inc
decl
fldt
cmp
out
shl
addb
push
inc
mov
loopne
sti
jp
notb
adc
idivl
jmp
adc
sti
mov
and
loopne
mov
clc
lcall
inc
xor
or
call
adc
mov
cmp
cmp
push
mov
jl
pop
jno
mov
adc
pop
sub
mov
and
fsubrs
lret
sbb
sub
add
xor
sbb
push
adc
mov
arpl
xor
xor
mov
je
das
psubusb
xchg
sarb
or
mov
pop
mov
decl
mov
in
xchg
cmp
jo
push
scas
adcl
rolb
outsb
pushl
icebp
movsl
popf
push
mov
in
outsb
push
ss
idivl
cmp
js
incl
push
or
mov
aaa
mov
add
sub
cmc
shrb
xchg
push
cmp
dec
lock
decb
out
ja
and
call
mov
jmp
jmp
adc
or
sbb
insl
add
mov
lds
and
aas
jns
movsl
inc
pushl
std
pop
or
xor
sub
fstl
mov
inc
outsb
push
ljmp
cmp
pop
pop
dec
and
lahf
or
sbb
loop
std
das
decl
decl
pop
jbe
movsb
idivb
push
icebp
bound
sbb
notl
sbb
mov
inc
jg
add
int3
sub
shll
in
test
outsb
push
mov
pop
hlt
push
mov
das
fildll
pop
lods
shll
and
adcb
and
mov
pop
pop
insb
in
incl
aam
inc
jne
loope,pt
push
mov
or
sub
xchg
fdivl
jmp
inc
in
xorl
sub
leave
push
mov
clc
notl
outsl
aaa
mov
xchg
cmp
adc
cld
push
xchg
je
or
stos
lcall
sbb
mov
repnz
mov
je
nop
shrb
lods
ret
mov
aas
sub
mov
add
mov
aaa
inc
idiv
or
aas
inc
sbb
or
call
mov
lods
push
ret
scas
cmp
cs
push
std
lcall
mov
stos
pusha
push
lcall
rcl
fxch
insb
cli
jl
add
insl
sarl
push
cmpb
cmpsl
test
mov
loopne
cmp
ljmp
or
mov
nop
outsl
jb
adc
inc
test
pusha
ss
xchg
lock
andl
jg
pop
loopne
stos
jle
roll
sbbl
push
fdivr
call
lea
aaa
add
sub
ret
mov
enter
inc
call
cltd
xor
mov
mov
scas
mov
bswap
xchg
hlt
mov
or
inc
je
pop
mov
adc
lcall
ss
outsl
clc
pop
add
cmp
cwtl
cwtl
insl
push
data16
in
cmp
mov
sbb
jne
add
popa
clc
push
push
mov
dec
pop
or
outsb
adc
push
mov
aaa
push
adc
decl
cld
in
push
pop
or
jno
add
and
jg
sahf
out
lret
dec
cld
mov
add
or
je
shl
repnz
aas
and
xor
fcomip
fildll
pcmpeqb
es
cmp
fs
sbb
push
pop
incl
std
lahf
xor
clc
aaa
inc
test
lcall
pop
pop
mov
out
dec
addb
lock
inc
mov
subb
call
push
sbb
ss
jg
loop
in
cld
cmp
push
pop
mov
xor
lret
int
loop
adc
clc
jmp
stos
sub
lahf
xchg
fildl
sbb
adc
ljmp
je
aad
mov
lea
or
or
jbe
ret
adcl
mov
clc
jnp
ss
pushl
inc
and
incl
xchg
jns
or
inc
dec
inc
insb
xchg
cmpsl
push
iret
or
loop
lcall
or
mov
cltd
sahf
inc
loope
mov
push
adc
xchg
and
addr16
mov
mov
hlt
pop
hlt
lcall
lock
mov
xor
incl
push
jmp
mov
or
or
and
mov
bound
idiv
dec
jmp
jg
xor
loop
jo
fwait
mov
add
cmpsb
ljmp
out
pusha
and
mov
nop
lret
mov
stos
mov
pop
and
stos
add
call
jo
push
push
xor
in
mov
sbb
insl
popf
lea
jg
inc
std
inc
push
incl
mov
mov
xchg
loopne
arpl
xchg
pop
sub
clc
sbb
dec
jg
aad
cltd
sbbl
stos
call
add
pop
mov
loop
in
xchg
add
test
sarb
xchg
and
ljmp
movsb
jo
lahf
imul
jbe
or
je
subl
lock
jg
cmpsb
loop
xchg
push
push
inc
cmpsl
inc
add
in
xor
add
mov
add
call
test
pop
push
mov
por
mov
inc
adc
pop
xchg
xor
dec
outsb
jg
inc
add
inc
or
mov
lods
xor
adc
repnz
repnz
test
push
jne
inc
push
adc
dec
loopne
jnp
mov
out
adc
mov
jg
mov
xor
jp
mov
stos
hlt
sahf
cmp
jo
jg
icebp
xor
mov
loopne
repz
or
fnstenv
shl
push
cmp
aad
out
pushl
clc
jl
insb
jne
xor
insl
push
data16
add
cli
sbb
mov
ret
inc
mov
ljmp
dec
adc
enter
and
push
imul
or
fcomip
or
dec
jno
sar
mov
add
xor
out
fnstcw
mov
adc
xlat
call
mov
cli
add
ds
push
fs
test
push
cld
or
ja
imul
xchg
not
icebp
bound
mov
ljmp
mov
and
dec
jl
ret
testb
sbb
inc
mov
addr16
call
lods
test
pop
pop
mov
idivb
les
into
cmc
mov
ja
jne
outsl
sar
and
clc
lcall
into
adc
mov
dec
add
adc
in
xor
mov
f2xm1
add
push
add
and
int
cmc
outsb
cltd
shrb
addl
fsub
aam
je
push
mov
fdivs
inc
add
nop
psubsb
ret
push
cmp
scas
jno
dec
lea
inc
call
out
jb
or
faddl
add
aam
lcall
push
inc
fdivl
les
add
shlb
stos
jle
inc
jmp
call
adc
repnz
ljmp
xor
cmp
adc
dec
cltd
jae
and
xlat
sarb
loopne
jmp
ret
popa
rolb
je
movsb
add
rcll
mov
sbb
cmpsb
cmp
fcomip
jg
adcb
pop
push
int3
test
jl
ret
ljmp
ljmp
xor
data16
or
gs
jmp
ret
lret
jno
jns
insl
dec
outsl
add
dec
shll
sub
ss
jbe
stos
cmc
in
xchg
xchg
jne
ret
sub
loopne
add
cmp
sbb
pop
cmp
cmpsl
insl
mov
fiadds
pop
pop
xlat
add
and
push
ss
mov
ja
adc
push
out
inc
jp
stos
sbb
mov
inc
cld
outsb
aad
mov
inc
jp
inc
jle
imul
lret
sbb
rorl
add
adc
orb
rorb
pop
in
ret
and
cmpsb
jmp
call
add
in
adc
out
clc
sahf
sbb
or
xor
decb
andb
push
shlb
ljmp
in
orb
inc
cmp
test
mov
js
sub
and
jmp
loop
in
jge
out
test
adc
push
call
or
cmp
pop
decl
repnz
pop
mov
or
xor
push
xor
ret
jmp
sar
jecxz
scas
cld
je
imul
les
push
pop
ret
lods
call
cld
sub
incl
jb
push
imul
mov
pop
adc
sarb
incl
in
mov
jae
push
in
inc
add
adc
adc
sbb
mov
lock
cmp
pop
push
test
outsb
sbb
clc
jmp
mov
insb
bound
add
int3
sahf
push
adc
in
xchg
dec
jge
cld
ds
sub
jl
add
mov
sub
int
ljmp
in
add
pop
fdivrs
dec
xchg
aas
pop
xchg
cmpsl
jno
mov
mov
push
addps
mov
jmp
pushf
add
imul
hlt
fwait
pop
mov
sarb
add
mov
push
std
call
outsb
testl
push
daa
push
rolb
and
mov
call
std
call
jl
loopne
xchg
sti
js
mov
ret
pushl
pop
dec
pushl
pmulhuw
into
repz
lds
in
ficoms
pop
icebp
pushl
das
mov
dec
or
xlat
jge
jg
dec
aaa
jmp
or
pop
mov
test
jne
incl
cld
push
es
and
mov
push
in
lcall
call
cmp
xlat
inc
push
divl
xchg
cmc
xchg
inc
insb
mov
push
adc
xchg
lret
mov
adc
repnz
xchg
jb
stos
add
ret
cmp
mul
push
lods
into
mov
sbb
sar
ficoml
jg
adc
fdiv
ss
call
ret
push
fbld
dec
std
add
add
in
pop
decl
test
or
jmp
rcrb
mov
jb
sub
notb
js
sbb
jae
add
dec
xor
jg
and
data16
shlb
push
add
call
fcoms
test
aas
incb
dec
adcl
lret
push
and
movsl
mov
or
or
decl
or
pop
imull
out
add
jb
pop
rcr
jne
test
aam
pop
cmc
incl
cmp
push
jmp
inc
xlat
icebp
xlat
loopne
adc
push
adc
pop
and
fistps
sub
cmp
xor
fisttpll
or
call
add
test
in
cmp
xlat
mov
xor
sbb
insb
cmp
push
mov
xchg
je
add
mov
mov
rcrl
mov
lcall
insl
in
push
test
ljmp
jne
sub
pop
inc
sub
incl
in
dec
mov
pop
jl
fsubrs
pushl
adc
push
imul
fwait
cmpsb
add
pop
in
std
mov
pop
sub
decl
aam
jmp
call
or
mov
scas
dec
inc
enter
add
dec
loopne
shl
add
adc
pop
push
cmc
push
inc
xchg
enter
fcomip
lcall
cmp
cmpsb
dec
mov
lods
sar
xchg
xor
sbb
call
test
fisttpl
mov
ss
adc
sub
pop
or
imul
shrb
push
sbb
add
lcall
jmp
pop
cmc
jo
sbb
mov
imul
incb
scas
loopne
mov
ror
xor
lcall
ret
mov
inc
add
sbb
or
push
inc
ret
add
inc
push
movsb
cmp
pop
jg
outsl
enter
cld
call
fwait
push
out
sti
aam
lds
outsb
xor
push
scas
lahf
jecxz
decl
icebp
shll
push
and
repnz
pusha
push
or
movsb
shl
sbb
dec
gs
subb
arpl
std
ljmp
jge
xchg
mov
addr16
jle
out
js
inc
loop
xchg
add
adc
push
inc
cmp
bndldx
adc
ljmp
test
or
add
loopne
or
xor
cmc
test
fcomip
in
adc
es
and
outsb
or
ret
fiaddl
call
mov
lcall
mov
jo
dec
cmp
dec
and
inc
or
adc
test
pushl
dec
stos
add
mov
mov
dec
call
push
pop
xlat
outsb
jae
gs
ljmp
pop
ficomps
mov
outsb
dec
aaa
xor
into
mov
inc
seto
jmp
xchg
jle
or
add
mov
cmp
lcall
out
clc
mov
fsubs
out
mov
push
sahf
incl
fwait
push
pop
cmp
dec
ss
add
push
mov
or
out
mov
mov
lock
xorb
out
clc
adc
popa
mov
mov
jbe
aam
jo
loop
or
in
es
call
cld
xor
outsl
sarb
iret
cmp
xor
clc
cmpsb
ds
sub
pop
xorb
inc
or
fdivs
add
xchg
adc
mov
call
mov
cmp
cld
adc
in
xchg
rorb
push
add
jnp
mov
decl
outsb
aaa
or
dec
add
lock
dec
clc
jmp
pop
mov
mov
call
push
adc
dec
fldenv
mov
pop
nop
les
popa
test
sbb
imul
adc
adc
jne
jne
mov
mov
mov
cmp
cmp
cmp
fisttps
mov
pop
incl
push
push
mov
adc
jge
mov
pop
ds
ret
pop
insb
mov
and
imul
add
jbe
and
push
mov
adc
out
mov
push
lcall
lods
inc
dec
je
loopne
pop
in
mov
outsb
lea
cmpsb
mov
call
lcall
fnstenv
jns
loopne
sarb
xor
outsl
jmp
dec
adc
inc
pop
loopne
decl
popf
out
lods
or
mov
mov
cld
or
dec
cs
and
or
mov
and
and
lcall
cli
mov
gs
mov
and
enter
cld
ljmp
or
cmp
std
jg
adc
hlt
incl
fdivrs
cmp
pop
cltd
incb
lods
push
adc
jne
xchg
xchg
loop
into
out
or
arpl
incl
pop
jp
clc
mov
test
pop
test
test
or
call
lock
dec
insb
sti
mov
adc
cli
sahf
push
xlat
jb
add
fadd
in
cmp
xor
ljmp
test
sub
and
scas
je
xorb
jp
shlb
std
incl
call
icebp
int
xchg
arpl
fldenv
inc
sub
decl
jle
cmp
sbb
xchg
pop
test
inc
movq
fcmovbe
pop
cmp
orb
mov
pop
jo
dec
xor
jp
int3
sub
lods
bswap
lahf
add
incl
jle
scas
pop
lahf
insl
dec
xor
in
xor
jb
push
jae
out
fwait
inc
push
das
incl
add
stc
cmp
pop
lds
dec
or
xlat
push
push
lds
add
jmp
or
xchg
arpl
cmp
pushl
outsl
adc
push
lods
cwtl
lcall
mov
push
outsb
add
jp
adc
push
push
std
das
call
pop
xchg
adc
dec
loope
mov
incl
insl
xor
cwtl
testl
ret
mov
mov
ss
stc
das
fwait
lock
or
sbb
jo
pusha
mov
imul
push
sbb
rcll
jmp
and
test
dec
sub
push
rcrb
push
mov
jl
xchg
cmc
xor
sub
scas
mov
xchg
sub
sbb
adcb
shlb
add
test
jecxz
pushf
fs
insl
xor
sub
in
sar
incl
push
int
push
rolb
sbb
pop
inc
jbe
mov
mov
gs
ja
outsb
call
fs
js
or
or
mov
stos
incl
inc
mov
aad
xor
test
mov
xchg
out
pushf
mov
or
ljmp
adc
js
jmp
mov
push
shll
mov
lcall
pop
or
stos
and
movsl
dec
ud0
dec
pusha
mov
xor
pushl
shlb
sub
push
pop
addl
or
mov
mov
add
or
shll
sbb
lea
aam
sbb
sub
rol
ljmp
dec
pop
div
out
into
xchg
decl
test
mov
jge
add
adc
push
imul
add
call
movsb
arpl
out
mov
subl
aam
mov
and
cli
inc
decl
fmull
pop
mov
mov
cld
mov
xchg
sbb
popf
xchg
loopne
push
ss
dec
push
inc
mov
jmp
outsl
add
xor
fmull
pushl
loop
ret
or
pop
dec
mov
mov
jns
mov
adcb
push
cmp
pop
xchg
adcl
xor
jb
sbb
rcll
and
adc
ljmp
test
or
push
xor
xchg
shlb
lcall
mov
xor
push
sbb
and
xchg
jbe
adc
jmp
sub
add
das
clc
decl
push
jae
cmp
sub
xchg
test
xor
pop
jle
pop
xor
jge
nop
or
and
test
enter
push
mov
add
push
pop
xchg
xchg
fwait
adc
faddl
mov
push
mov
or
jmp
mov
pop
insl
sbb
or
cmp
loop
pop
aam
and
decl
scas
cmp
shll
adc
icebp
ljmp
cld
addb
outsb
mov
lcall
xor
outsb
pop
fs
sar
bound
in
fsubrs
fs
cmp
jmp
incl
cld
dec
mov
outsb
rcrb
pusha
mull
add
aad
push
lds
sbb
out
sbb
enter
adc
xor
push
lock
jmp
xchg
in
cli
pushl
mov
fmul
add
icebp
pop
mov
ds
xlat
lods
dec
repnz
pop
adcb
stos
outsl
pop
pop
fs
orb
cmp
lret
jmp
sti
or
movhlps
sbb
push
inc
push
mov
dec
pop
shlb
test
or
mull
mov
or
mov
test
mov
gs
mov
test
add
add
add
xchg
pushl
mov
inc
sbb
or
xorb
push
fndisi(8087
jp
in
je
incl
pop
xor
cmpsb
sti
and
mov
jge
hlt
pop
xchg
cmp
insl
jp
add
xchg
inc
ljmp
push
std
lcall
mov
test
mov
out
inc
jbe
and
jp
stc
xchg
rcrl
aad
mov
xchg
cmp
decl
lds
lcall
add
gs
frstor
jmp
mov
ss
push
push
addr16
mov
push
cmp
imul
call
or
cmp
aaa
or
outsl
push
fsubrs
std
lcall
es
call
or
push
cs
cld
jbe
in
and
xchg
mov
mov
pusha
lock
incl
mov
push
mov
jle
add
out
scas
pop
cmp
incl
jmp
pop
cmp
mov
mov
mul
loopne
mov
mov
incl
push
jne
bt
jns
lods
lret
mov
push
imul
xor
add
mov
addb
ljmp
nop
loop
pop
pop
push
xchg
or
dec
repnz
hlt
out
ret
mov
xchg
ljmp
sar
pop
fsubl
sub
into
adc
cli
daa
add
dec
cld
call
mov
ljmp
xor
adc
mov
addb
and
mov
cli
push
hlt
js
add
call
repnz
dec
jae
cmp
pop
jecxz
push
les
cmpsb
in
xlat
cmp
cmp
mov
adc
mov
jg
test
test
or
or
cmp
mov
xor
js
stos
data16
cld
add
xor
out
mov
add
mov
add
ljmp
sar
out
in
xchg
push
push
xor
lcall
inc
lret
or
rcrl
mov
adc
sahf
add
mov
leave
pop
xor
test
jo
cld
loope
jle
fcomi
adc
add
lcall
add
out
out
das
dec
mov
jmp
leave
pop
add
dec
cwtl
ljmp
mov
inc
cwtl
dec
jns
std
xor
jnp
mov
cmpsb
xchg
cmp
imul
cs
fstl
cmp
dec
mov
dec
xchg
push
mov
jg
pop
into
add
adcl
mov
jl
imul
add
fsubrp
adc
sar
fcomip
or
xchg
cmpsb
push
jmp
pop
jb,pn
call
inc
rcll
or
lcall
add
add
mov
out
sbb
add
call
jo
lcall
lret
push
clc
sub
jecxz
mov
push
sbb
pop
cmp
or
dec
les
add
cmp
cmp
sub
push
test
inc
add
aas
jg
jg
push
loop
in
push
or
icebp
jl
jecxz
repz
mov
adc
sub
adc
cli
hlt
cmp
ljmp
lcall
orb
es
hlt
pop
sarb
bound
jmp
call
cmpsl
fwait
inc
xor
std
push
adc
xor
shlb
and
repnz
inc
mov
jecxz
lcall
cli
fbstp
cmpsb
sahf
xlat
hlt
arpl
int3
popf
fwait
sahf
test
in
mov
ror
jg
or
push
cmp
xor
rcrb
add
inc
jmp
cmpb
jp
push
dec
call
pop
pop
icebp
outsl
scas
mov
cli
and
add
jmp
fs
push
cmp
mov
add
add
mov
ljmp
ret
cld
call
lock
adc
jmp
xor
push
jno
sarl
inc
xchg
movsb
call
adc
test
sti
aaa
pop
rcrb
fsubrp
push
test
lcall
or
icebp
and
dec
xchg
sbb
mov
dec
decb
cmp
decl
inc
icebp
xchg
lret
dec
mov
lods
jmp
repnz
test
jecxz
add
jb
pushl
inc
push
inc
push
xor
dec
lock
mov
fwait
dec
loopne
adc
scas
daa
pop
lcall
jmp
in
call
out
shr
out
sub
incl
adc
clc
jecxz
or
and
popf
mov
decl
hlt
dec
mov
xor
push
nop
repz
mov
rolb
dec
cmpb
out
jp
mov
ffree
inc
mov
inc
xor
and
xchg
inc
adc
push
das
iret
xchg
clc
incl
lock
add
xchg
int3
insb
jecxz
jb
push
mov
dec
jg
mov
push
jmp
add
or
call
adc
fimull
icebp
ljmp
pop
scas
adcb
inc
mov
repz
lahf
gs
inc
leave
sarl
lcall
incb
ljmp
add
je
add
mov
add
adc
ljmp
or
or
clc
pusha
xchg
outsb
stc
cmc
push
sbb
data16
rorl
sti
icebp
mov
cmp
scas
push
or
sbb
lcall
adc
inc
div
cmp
popf
les
mov
push
pop
pop
sbb
mov
push
std
push
mov
sub
stos
int
je
and
add
push
lret
arpl
ljmp
adc
jo
fsubr
pop
mov
sahf
lea
decl
and
call
pushl
fbstp
push
movsb
lcall
in
sbb
adc
push
enter
cmp
mov
mov
or
mov
enter
dec
bound
jbe
mov
mov
or
call
popa
into
pop
pop
inc
or
add
adc
out
hlt
or
mov
push
faddl
ja
ficoms
mov
jg
push
inc
gs
mov
sub
shrb
jle
cmp
mov
add
inc
jle
aaa
std
fbstp
arpl
ljmpw
cmp
jae
mov
and
push
das
fs
add
adc
xorl
mov
call
ljmp
fstpt
shr
rclb
sbb
incl
sbb
lcall
cmp
adcb
push
call
pop
negb
push
outsl
and
or
dec
add
or
adc
push
sub
push
push
jne
filds
insb
out
pop
ljmp
xchg
les
jne
bswap
insb
ss
inc
pushf
incl
notb
addb
pop
cmp
pop
jl
push
jl
call
jmp
inc
push
incl
scas
test
ljmp
mov
loope
imul
lcall
test
jne
jg
jge
xchg
frstor
das
cmp
lahf
or
call
pushl
xchg
pop
sbb
push
mov
sti
sarb
fcomps
mov
clc
ljmp
push
rolb
fcompl
jl
pusha
jmp
push
sahf
add
mov
pop
mov
push
jne
dec
lahf
outsb
mov
mov
jg
and
rorb
cltd
jle
test
mov
aaa
cld
jmp
cli
in
and
dec
or
or
in
sbb
lret
inc
lcall
outsb
mov
fisttpl
lcall
shl
sub
fsubrl
dec
loope
mov
aam
add
cmp
icebp
or
aam
pop
xor
loopne
je
loopne
mov
test
ljmp
lcall
js
loopne
jbe
cmc
dec
adc
mov
rclb
clc
inc
call
or
loop
js
xchg
push
mov
jmp
mov
ljmp
cli
fsubs
std
cwtl
adc
jg
pop
sub
cwtl
jo
popa
pop
cmp
and
jg
sub
jle
loop
cmp
rorl
or
sub
pop
and
sbb
dec
inc
xchg
add
ret
inc
pushl
shll
jb
add
mov
push
push
cs
dec
je
add
js
adc
call
bound
je
pop
fs
mov
cld
add
xchg
or
jae
ljmp
and
push
imul
popa
xchg
push
xor
out
call
in
mov
xchg
mov
shll
adc
ljmp
jo
lods
adc
or
or
xor
mov
fldt
xor
fldl
sub
xchg
jb
jno
and
jne
shlb
xlat
sub
jg
pushl
outsb
fs
into
adcb
pop
push
outsb
add
testl
mov
faddp
test
fwait
push
xchg
sbb
mov
decl
add
push
cmp
push
stc
pop
adc
pop
rolb
jg
ja
sub
or
jg
adc
xor
pop
cld
jmp
xchg
ret
rclb
xor
orb
jnp
adc
adc
lret
and
or
or
push
bound
jmp
adc
div
adc
popa
incl
ja
inc
inc
add
mov
mov
xchg
clc
add
push
inc
stos
jmp
xchg
fcomip
incl
add
jg
fld1
shlb
aas
adc
or
inc
jecxz
mov
stos
out
xchg
nop
fcmovnbe
dec
push
push
xchg
pop
jb
lret
mov
and
or
push
cli
pusha
lcall
inc
pop
ret
xor
mov
ds
out
outsb
xor
decl
call
pop
add
and
dec
cmpb
xor
push
ficoml
jb
jl
lods
lahf
dec
ljmp
shlb
push
js
dec
adc
outsl
cmp
fcomps
jg
inc
jp
add
push
inc
mov
jbe
sub
out
cmc
adc
cld
out
sbb
les
xchg
push
mov
das
pop
pushf
mov
jo
push
dec
xchg
in
jnp
xchg
leave
pusha
xorb
mov
dec
mov
add
add
sbb
pop
rorl
pushl
lods
jae
jge
call
int
bndstx
jge
push
mov
push
lods
inc
and
loopne
sbbb
adc
push
jmp
xor
ljmp
sub
addb
adc
add
leave
push
pop
adc
mov
jo
sub
jmp
mov
mov
add
movsl
nop
clc
push
jl
idiv
fistl
popf
testb
xorl
test
sbb
pop
test
testb
push
mov
dec
or
repnz
pop
xor
xor
flds
jo
roll
ret
call
ss
lcall
test
lock
mov
xchg
pop
cmpb
push
popa
add
sarl
jae
push
test
xor
pop
sub
and
inc
insb
pushl
dec
xor
cmp
pop
out
push
push
fwait
xlat
push
js
dec
sub
adc
incl
stos
dec
sahf
insl
je
andl
pop
ss
add
inc
idivl
push
mov
add
jbe
loop
movsl
xor
mov
pushl
pop
mov
aad
ss
xor
or
or
data16
sbb
scas
andl
loope
push
popf
pop
xor
jae
pop
add
dec
xchg
sbb
pusha
cmpsl
fcoml
pushl
jg
push
std
call
ret
cmp
js
stos
repnz
popa
push
push
push
push
sarl
or
call
lcall
fistps
nop
pushl
cmp
inc
aaa
cld
decl
and
inc
sahf
sub
mov
stos
push
mov
cmpsl
push
data16
ljmp
jbe
mov
jmp
pushl
ljmp
daa
jbe
adc
xor
jmp
clc
incl
aad
mov
adc
lds
mov
lcall
push
xchg
and
add
xchg
mov
mov
cwtl
nop
pop
pop
rcrb
pusha
adc
adc
jo
pushf
movsb
jp
push
push
mov
xor
sbb
inc
pop
hlt
pop
shrl
inc
xor
sub
pop
dec
scas
cli
fbld
add
fstpl
fwait
pop
dec
push
or
add
cmp
adc
clc
hlt
in
push
cmp
pushl
lcall
call
stc
insl
jmp
shl
lcall
mov
jnp
xor
call
mov
pop
and
jbe
mov
out
mov
adc
mov
xchg
add
pushl
push
cmp
dec
roll
scas
je
sub
xor
jno
pop
mov
push
les
mov
jg
sub
call
orl
pushl
pop
in
add
xchg
push
or
or
adc
lret
js
push
loope
or
out
movsl
vaddsubps
jo
test
mov
dec
pop
dec
adc
mov
lock
xchg
idiv
loopne
incl
cld
ljmp
dec
jns
sub
push
push
fistpl
popa
test
inc
dec
fwait
icebp
cld
loopne
lcall
outsb
jnp
sub
push
adc
dec
sbb
sti
push
jmp
movsb
mov
rorb
fidivrs
mov
rcrb
ret
xlat
pop
dec
xchg
adc
cmpsb
pop
les
mov
fiaddl
icebp
loop
inc
mov
fdivl
or
push
insl
cwtl
push
ljmp
push
outsb
sahf
jae
rcll
adc
inc
add
rcr
or
arpl
pop
dec
adc
add
sbb
pushl
adc
je
pop
mov
push
add
in
push
stos
call
rorl
aaa
cs
std
out
mov
add
popf
andb
xchg
jmp
subb
call
push
jmp
xchg
sub
jbe
out
mov
mov
mov
ljmp
inc
outsl
clc
lcall
test
std
out
aaa
push
mov
pop
sub
mov
or
out
add
jmp
scas
in
adc
outsl
inc
mov
inc
cli
insl
cmp
or
inc
loopne
fisubrs
inc
incl
add
dec
mov
mov
mov
jo
jg
lds
mov
push
lods
xchg
jg
mov
sbb
or
lock
shlb
in
es
mov
lret
movb
jle
loopne
push
add
mov
pusha
xor
and
lds
cwtl
inc
jb
aaa
in
inc
add
mulps
dec
pop
and
int
inc
or
cmp
imul
lcall
pop
or
das
push
xor
mov
je,pn
sahf
sar
push
mov
pop
call
mov
or
mov
ret
test
pushl
push
push
sub
decl
push
push
gs
xor
cmp
aam
mov
cmp
incl
sub
pusha
mov
cmpsb
incl
pop
and
pop
loopne
mov
cmc
mov
inc
adc
adc
lcall
add
ljmp
test
icebp
sub
rorl
dec
inc
pop
ss
dec
ljmp
xchg
imul
push
shlb
add
pushl
xchg
mov
pop
sbb
call
jo
jmp
xchg
aaa
mov
nop
dec
push
ja
adcb
sbb
ljmp
and
cmp
inc
mov
inc
add
call
lcall
out
aam
add
movsb
mov
jno
jecxz
fsub
call
cmp
push
cwtl
mov
inc
pushl
lret
sbb
call
call
cmp
push
sub
push
in
sbb
aad
cs
or
call
xchg
je
cmpb
pop
fdivrs
dec
outsl
mov
cmp
decl
stos
lods
add
insb
je
push
adc
in
cmp
stos
dec
and
jae
cmp
mov
rcrb
std
sbb
sub
dec
mov
clc
add
scas
jg
inc
out
push
movsl
adc
add
cli
inc
ret
sbb
mov
aas
sub
pushl
in
xlat
sbb
add
inc
insl
jmp
and
xchg
mov
mov
pop
js
outsb
fcomps
mov
test
pop
pop
xor
dec
or
add
jnp
push
sub
jb
lods
push
push
inc
xor
pop
aaa
xor
imul
shlb
pushl
add
into
les
pop
clc
test
jp
push
fimuls
stos
clc
incl
push
insb
sbbl
adc
mulb
jb
dec
inc
xorb
jl
adc
pop
add
xlat
or
push
jg
mov
xchg
xor
jle
push
mov
cmp
xchg
add
adc
cli
hlt
movsb
test
mov
call
enter
push
lea
cmp
mov
xchg
and
dec
ffreep
call
test
lods
cmp
nop
loope
cmp
add
mov
rolb
lcall
and
das
inc
test
mov
lss
and
pop
cmpsb
sbb
imul
incl
and
inc
and
add
je
cli
test
call
sarl
cwtl
push
stos
xorb
mov
dec
and
imul
pushl
mov
std
bound
fucomi
pop
jg
cmp
pop
std
or
loopne
in
pop
sub
je
lcall
mov
xchg
mov
add
aaa
dec
sbb
in
inc
mov
cmp
xlat
cld
and
add
call
pandn
orb
push
cmp
xchg
push
and
nopl
sub
pop
hlt
dec
mov
clc
inc
add
mov
jg
xor
mov
rolb
fcomip
dec
cmp
xor
mov
inc
jle
int
mov
mov
ljmp
jp
sbb
sbb
pop
pop
mov
push
out
test
mov
incl
hlt
loope
cmc
mov
xchg
leave
inc
pop
lods
inc
dec
or
push
addb
decl
sub
fiaddl
sbb
test
push
inc
pop
xchg
xchg
mov
scas
cli
pusha
push
pop
aaa
notl
clc
bound
icebp
adc
cltd
jbe
rcl
scas
and
mov
arpl
call
leave
idiv
pop
sbb
fildll
inc
call
shll
push
ljmp
stc
adc
loop
aam
sbb
shrb
push
mov
push
roll
ljmp
fcompl
sub
jno
cli
insb
inc
add
push
test
mov
lcall
lock
insb
push
cmp
test
je
leave
imul
jns
in
push
in
addr16
int3
sub
cmp
xor
cwtl
pop
test
or
imul
jmp
out
or
dec
shrl
test
push
jne
sti
cmpsl
sbb
ret
clc
aam
add
enter
hlt
jmp
mov
add
pushl
in
nop
movsl
pop
fsts
pop
mov
and
test
add
cld
call
loopne
inc
inc
lods
push
icebp
out
adc
pop
inc
or
incl
mov
and
cld
xor
sbb
jne,pn
adc
jg
or
outsl
inc
add
or
lock
pushf
and
lahf
sbbl
cwtl
mov
lea
pop
mov
roll
cmp
jno
xor
adc
dec
xor
incl
adc
inc
inc
pop
adc
push
adc
push
nop
mov
inc
push
lock
out
mov
hlt
jmp
cmp
andb
arpl
lret
mov
add
aas
movsb
cs
shr
or
sub
or
andl
sar
lcall
mov
xchg
sub
and
mov
mov
jecxz
loop
push
out
push
push
and
add
ss
cmp
and
call
pop
add
dec
push
xor
ljmp
je
cmp
xchg
lret
mov
inc
jae
je
jae
in
addl
cwtl
incl
test
sti
push
jl
xor
push
cmp
rcrb
cmovle
adc
ljmp
test
mov
and
sub
add
clc
sbb
inc
and
arpl
rorl
xchg
roll
and
ja
cmp
add
or
into
ficoms
dec
les
testl
outsl
stos
push
xor
mov
popa
rorl
shlb
iret
jmp
lock
das
adc
hlt
fsub
adc
cmpsb
mov
xchg
rcl
mov
cmp
bound
cmp
popa
rorb
js
jg
call
test
sub
mov
inc
sbb
sub
js
and
sar
and
mov
xor
pop
insl
sub
fwait
in
jmp
mov
sub
pop
imul
cs
ds
push
pop
in
test
fcomip
jmp
ret
out
adc
aam
fwait
add
call
into
mov
std
incl
sub
sub
outsl
add
scas
xchg
mov
add
rclb
push
adc
data16
xchg
mov
aam
in
jg
xor
movsb
or
push
in
test
pop
and
sub
aaa
mov
add
mov
mov
sar
add
xor
scas
cld
test
movsb
jne
outsb
arpl
jmp
xchg
cmp
sbb
or
loopne
xchg
xor
pushl
inc
sbb
call
cld
call
cmpsl
cmp
dec
sahf
test
or
mov
std
dec
inc
and
int
or
clc
aaa
push
aam
jp
out
push
add
ss
xchg
xchg
add
cmpsb
and
std
aam
add
cmp
pushl
push
es
es
test
pop
aad
cld
call
das
pop
std
pushl
adc
fs
xchg
sub
call
adc
adc
mov
je
pushl
cs
and
mov
dec
inc
aam
jg
cmp
shlb
or
loope
les
call
daa
inc
fidivrs
or
in
or
mov
jg
lock
jo
inc
jne
call
ds
and
pop
xlat
std
das
jns
lds
inc
jmp
cmc
aas
icebp
bound
or
cmp
add
cwtl
mov
call
xchg
ret
lret
adc
gs
push
addb
inc
lcall
pop
orl
es
rcrl
loopne
xor
in
push
xchg
dec
adc
push
inc
test
decl
xchg
mov
dec
mov
fcmove
arpl
lock
adc
jne
xor
fcomip
jae
shll
and
out
xchg
jg
out
dec
aad
aam
jg
test
push
mov
push
add
pop
outsl
scas
adc
clc
sub
aas
ret
jg
adc
sub
mov
push
mov
fdivr
sbbb
pushl
cmpsl
fwait
dec
fiaddl
faddp
sub
mov
clc
add
adc
rcrl
inc
jb
loop
int
mov
repnz
push
sarb
hlt
decl
je
rolb
mov
dec
cld
test
jp
lahf
jge
mov
out
pop
pop
loopne
fistps
outsb
lret
adc
mov
pusha
movq
test
pop
mov
jo
mov
cmpsb
fs
add
in
and
add
ja
jmp
icebp
mov
mov
sub
dec
mov
mov
and
jp
mov
clc
stos
call
fisubrl
inc
push
pop
lods
sub
std
fsubl
std
push
dec
aad
xlat
movhps
jb
mov
stos
outsb
fiaddl
add
jae
decl
adc
mov
xchg
or
xor
mov
fists
jg
test
test
les
pop
sub
lcall
sub
cmc
inc
or
lcall
sbb
mov
lock
sub
mov
movsl
jno
repnz
in
pusha
push
cmp
in
dec
aas
cli
mov
add
popa
add
mov
dec
jmp
outsl
sti
or
ljmp
push
mov
push
mov
adc
jo
xorb
or
jae
gs
adcl
lahf
mov
nop
cmp
jg
xchg
sbb
ss
ljmp
cmp
leave
sub
jns
call
shrl
incl
in
sbb
je
mov
lret
lock
fcoms
add
ds
std
pop
mov
pop
cmp
ja
inc
cs
xchg
addb
cmpb
jo
mov
and
mov
ja
fs
test
ss
lcall
sub
sar
scas
jle
add
dec
xchg
xchg
fwait
xor
or
sbb
sar
dec
or
les
and
fcomi
dec
mov
jb
fmull
mov
jne
in
repnz
mov
xchg
add
ret
icebp
adc
movsb
sub
iret
insb
std
imull
ljmp
ror
jl
add
add
mov
imul
gs
mov
decl
roll
sub
cmp
or
sarb
sbbb
push
cmp
mov
mov
xchg
pop
imul
and
rorb
fwait
mov
sbb
dec
dec
inc
add
mov
inc
add
nop
fisttpl
sahf
inc
popf
and
pusha
insb
movswl
inc
adc
push
fistpll
es
add
sysexit
push
mov
mov
insb
xorl
inc
dec
jg
mov
push
icebp
mov
push
dec
jmp
js
mov
mov
pop
in
scas
cli
incl
pop
xorb
incl
add
mov
jg
.byte
in
call
push
call
int3
stmxcsr
cmpl
je
jmp
ret
push
mov
push
push
push
mov
pop
pop
push
mov
lret
xor
icebp
shl
sar
sti
jmp
xor
dec
jns
push
rcrb
ret
push
mov
push
movl
scas
inc
add
xchg
push
test
je
sbbl
mov
call
jmp
leave
lret
ljmp
out
ret
int3
add
fstpt
push
cmp
testb
push
les
inc
or
mov
mov
pop
ret
mov
sub
push
fidivrs
jge
jne
sbb
pop
sub
mov
xor
or
in
lock
mov
pushf
or
push
xor
or
cmpsb
imul
call
cmp
pop
insb
dec
sarl
and
adc
add
cmp
dec
mov
addr16
lea
pop
sub
xor
inc
aam
aam
dec
and
cmpl
add
in
or
test
and
xchg
jo
or
add
push
mov
cmpsl
mov
rcl
inc
inc
pop
fildl
xor
pop
and
inc
or
ficompl
imul
add
push
lods
insb
push
pusha
outsb
int3
jno
xchg
sub
lods
jns
jge
popf
stc
insl
xor
cmp
add
enter
cmp
push
xor
clc
jbe
outsl
rorl
and
dec
xor
test
out
lcall
sub
shlb
push
dec
cld
test
je
jg
lock
xor
sbb
jb
imul
fnstcw
cld
sub
loopne
ja
push
jne
jno
nop
jge
jle
or
and
cmp
cmp
jecxz
adcb
inc
inc
cmp
call
ss
enter
sub
call
dec
lea
clc
push
enter
dec
call
sub
in
repnz
or
lea
dec
jb
clc
pop
and
push
in
xor
mov
cmp
xor
cld
scas
or
in
xor
clc
jg
xlat
sahf
bound
mov
jo
mov
hlt
lea
xor
rol
inc
ljmp
ret
in
jae
loopne
cmp
sar
out
mov
push
arpl
testb
call
hlt
mov
mov
xlat
ds
add
jo
jmp
cli
inc
ds
idivl
pusha
ds
sub
pushf
lret
and
ljmp
push
cwtl
add
add
mov
test
adc
or
lock
ret
cmp
or
loope
dec
mov
mov
loopne
rolb
loopne
or
loopne
ret
jle
pop
cltd
loopne
xorb
adc
shl
lds
lret
mov
jmp
push
mov
adc
adc
int
inc
mov
dec
jae
fmul
and
int
adc
or
add
or
sbb
outsl
sbb
jae
int
mov
adc
in
in
dec
fcomp
fcomp
cmp
scas
es
pop
fsubs
mov
sbb
xchg
push
pop
movb
lock
mov
sbb
pop
fs
xchg
ja
adc
movl
mov
inc
push
fwait
into
out
inc
sub
sub
shrb
inc
sub
inc
jb
test
inc
inc
jb
test
inc
add
enter
add
jb
test
or
ret
or
adc
push
inc
mov
sub
jmp
mov
insl
adc
add
inc
and
inc
pop
sub
mov
or
test
rclb
in
push
sub
cmpsl
or
jne
and
pusha
xlat
jmp
sub
xor
pop
mov
jmp
push
nop
inc
clc
and
mov
stos
lods
addr16
call
out
pusha
sbb
nop
adc
test
ret
dec
push
lock
push
ret
hlt
add
push
js
in
lock
adc
pushl
in
jg
inc
mov
xor
mov
lock
inc
je
push
xchg
mov
or
and
jmp
sub
cmp
push
test
lret
pop
pop
sbb
mov
ds
mov
aad
xor
dec
jo
outsl
or
push
push
xor
scas
jmp
and
sbb
sbb
dec
pop
sbb
push
jo
dec
test
sbb
into
rorb
sbb
push
inc
jp
jb
xchg
mov
pushl
or
clc
mov
js
adc
sub
cld
call
xchg
hlt
mov
inc
test
cltd
imul
adc
sbb
dec
or
xor
push
ret
push
push
or
out
and
sar
inc
nop
ja
aas
mov
xchg
es
cmp
rorl
push
xor
sbb
sbb
insb
lret
and
sub
sbb
inc
xor
xor
inc
lea
adc
cmpl
or
or
pop
mov
fimull
jmp
xor
inc
push
rclb
rclb
cmp
mov
and
jl
or
sbb
fldenv
and
cmpsb
mov
mov
push
jne
out
stc
inc
mov
inc
aam
sub
mov
jp
xor
pop
adc
or
mov
into
or
sub
into
rcrb
or
jle
fcompl
sub
insb
jo
add
sub
push
inc
jl
xchg
xor
push
sub
addb
sbb
loop
lods
sub
add
xchg
dec
or
dec
inc
fsubr
outsb
ljmp
fcoms
imul
cltd
imull
mov
rorb
into
mov
and
xchg
pop
xor
out
adc
dec
in
inc
rcrl
int3
ret
fstpl
push
mov
adc
je
ret
imul
hlt
dec
decb
pop
mov
cmpsb
sbb
fistpl
adc
jmp
lcall
cmp
or
sarl
or
add
loopne
movsl
xor
lret
sti
sub
sbb
adc
xor
aad
popf
mov
push
rorl
push
xor
hlt
inc
pop
dec
insl
nop
aaa
dec
inc
push
add
push
adc
adc
in
add
push
mov
cmp
mov
jge
imul
and
xchg
mov
pop
jmp
add
adc
or
mov
sarb
loope
test
hlt
dec
mov
int3
ss
xlat
inc
add
push
daa
or
je
mov
adc
neg
sbb
jb
jecxz
or
add
and
stos
clc
hlt
mov
rorb
and
sbb
mov
pop
mov
dec
fiadds
push
clc
push
insb
xchg
out
jae
push
inc
je
movsl
mov
mov
sbb
rcll
jae
cld
jl
pop
jl
addr16
adc
sub
fsts
push
fnstcw
insb
call
xchg
outsl
jl
outsb
movsbl
or
jnp
pop
push
icebp
lock
adc
add
nop
and
mov
xorb
cmp
arpl
pop
push
into
loopne
mov
jmp
adc
xor
add
in
cmp
hlt
leave
mov
cld
shl
sbb
call
orb
dec
das
in
jp
lock
xor
push
insb
fdivr
add
inc
in
dec
pcmpeqd
clc
add
push
dec
fcoml
xor
push
sub
addr16
outsb
inc
fcompl
jbe
iret
shl
pushf
cli
in
sarb
cs
aam
xor
cmpsl
mov
lock
mov
add
pushf
out
push
adc
pop
in
jge
dec
mov
ljmp
push
orb
add
addl
adc
leave
movsl
jns
inc
sub
inc
adc
out
ret
out
jne
daa
mov
cmp
xor
sbb
pop
or
add
push
shll
rcll
sub
xchg
insb
cmp
and
cmp
push
sub
sbb
pop
mov
dec
mov
adc
xor
jnp
xchg
lock
push
inc
inc
push
inc
out
and
or
jb
jns
sbb
push
es
or
rcr
xchg
lcall
add
leave
push
shll
mov
xlat
into
out
cld
sub
ja
add
mov
and
add
daa
xor
daa
ja
leave
xchg
pop
enter
and
repnz
sbb
and
rcrl
add
add
int
outsl
daa
xor
dec
sbb
push
add
mov
mov
sbbb
hlt
add
push
inc
xchg
xchg
add
pop
leave
test
lds
push
lds
mov
xchg
mov
inc
jb
ja
mov
pop
xchg
xor
and
mov
leave
test
push
loopne
mov
das
mov
xchg
out
push
cld
loop
adcl
ret
xchg
or
shll
mov
xor
adc
mov
daa
sbb
ljmp
lea
daa
shr
lahf
loop,pt
mov
dec
jne
mov
decl
hlt
scas
fiadds
subb
jmp
xchg
loopne
das
adc
imul
ds
jge
jmp
adc
test
in
pop
inc
dec
sub
sbb
or
js
cld
jne
rclb
fnstsw
hlt
aam
cmpsb
jecxz
fcoml
jo
or
push
xchg
cmp
je
mov
jp
mov
pop
adc
insl
mov
lods
incb
sub
stos
add
idivl
cmpl
adc
xchg
sbb
xlat
push
jl
and
mov
push
add
push
or
mov
add
bound
outsb
hlt
or
nop
mov
push
inc
andl
cmp
mov
xchg
pop
xchg
and
xorb
sbb
mov
mov
fwait
push
fdivrs
jb
je
fs
aad
jbe
mov
mov
jmp
push
adc
adcb
addl
jo
je
icebp
decb
jb
clc
movl
pop
cmp
mov
push
clc
push
cmp
pop
and
sub
cmp
and
clc
scas
outsl
mov
mov
leave
pop
jno
xchg
cmp
movsb
and
clc
jno
nop
jl
sbb
cs
and
das
rcrl
mov
aas
andl
add
in
cmp
clc
sub
cld
mov
lock
xchg
sbb
pop
lods
lret
adc
adc
es
and
mov
movb
jmp
into
movsb
int3
push
test
or
ds
add
cs
push
pop
hlt
enter
or
or
xor
repz
sar
cmp
fs
sbb
test
dec
push
out
sbb
lea
dec
ja
add
shll
or
fsubrp
gs
pop
inc
push
pusha
lcall
pop
push
xor
sbb
pop
pop
lret
mov
arpl
das
sbbb
cmp
jmp
cmp
and
jae
mov
aad
jl
add
clc
std
imul
adc
and
lock
aad
mov
addr16
xchg
dec
mov
fwait
sub
xchg
sub
aas
adc
and
cwtl
jge
jmp
sbb
or
orl
fsubl
sbb
aad
lock
and
cmc
push
mov
lea
arpl
mov
test
sbb
daa
sub
xchg
call
or
sbb
push
add
loop
gs
mov
adc
cmp
in
dec
stos
sub
dec
iret
enter
jae
mov
mov
jp
sbb
iret
xchg
jmp
dec
sti
dec
inc
adc
pop
cmp
das
daa
addb
dec
repnz
iret
out
push
mov
xchg
aas
call
fadd
subb
adc
repnz
cwtl
adcb
in
jmp
mov
jb
sbb
add
add
xchg
cmp
jl
mov
stos
adc
into
aaa
add
stos
hlt
jmp
movsl
xlat
xchg
mov
popa
int3
cmp
xor
faddp
pop
jo
mov
and
adc
nop
sub
add
mov
sub
mov
jb
in
inc
sbb
push
cltd
xchg
add
hlt
sbb
or
sub
fnstsw
adc
and
lcall
cs
out
int3
dec
push
mov
xor
cwtl
push
cmp
shlb
mov
adc
in
cmp
aam
lock
xor
pop
mov
xchg
pop
rcll
inc
or
lock
rcl
movsl
loopne
cs
add
test
sub
dec
sbb
add
inc
jb
xor
repnz
loopne
rcll
adc
add
test
mov
adc
sbb
dec
call
cmpsl
mov
xchg
hlt
push
clc
clc
test
cli
jmp
out
and
or
mov
xchg
mov
arpl
ss
les
into
sub
mov
hlt
mov
cmp
cmp
pop
ljmp
mov
adcb
lcall
dec
clc
hlt
sbb
ss
xchg
add
hlt
and
add
and
push
ja
bound
add
outsl
out
xor
ja
daa
ja
mov
cmp
in
xchg
inc
inc
add
mov
push
dec
dec
dec
cmp
or
outsl
dec
in
xor
dec
add
hlt
mov
dec
clc
clc
das
pop
add
or
daa
sbb
mov
jo
inc
ds
hlt
add
add
loop
scas
fs
xor
bound
stos
pop
ja
fadd
dec
scas
inc
ja
mov
dec
or
dec
outsl
pusha
dec
mov
out
popa
add
cld
hlt
mov
cmp
std
mov
mov
or
jnp
aas
add
pop
shrb
repz
cmp
add
add
fildl
pop
loopne
or
jne
out
imul
movl
ja
push
xorb
pop
push
loope
lock
rcrl
cmp
pushaw
dec
dec
push
and
and
popf
add
jnp
or
push
lock
inc
cmp
mov
inc
sbbb
out
jmp
jmp
mov
pop
rcl
or
loope
into
daa
subl
hlt
out
ljmp
popa
rorb
jo
shll
jmp
pop
dec
mov
or
adc
dec
lock
or
mov
pop
push
dec
into
in
fcompl
mov
add
sub
adc
pop
in
rclb
xor
jmp
loope
mov
push
pop
adc
inc
ret
cmp
sbb
adc
xor
push
pusha
jbe
test
dec
fwait
adc
bound
xor
pop
adc
das
hlt
jo
mov
js
adcl
sahf
call
addr16
xor
sbb
test
pop
mov
sub
and
pop
jge
xor
mov
inc
sub
dec
or
sbb
cmp
jne
push
mov
inc
rorb
add
sbb
push
jmp
sbb
addr16
mov
add
dec
pop
fs
mov
xlat
cmp
popa
js
subb
imul
push
cmp
hlt
popf
and
jp
and
notl
xchg
movsl
jle
adc
add
add
loopne
insl
add
je
loope
pop
les
xchg
pop
cmp
addl
test
xchg
addr16
add
pop
loopne
mov
mov
subb
icebp
das
jnp
addr16
cmpsb
mov
xchg
xor
dec
lods
test
enter
or
add
jbe
orl
push
scas
inc
cmp
xchg
lds
push
pop
xlat
fisubrl
in
or
jge
mov
gs
rol
jmp
cmp
int
and
xchg
lock
js
in
in
movl
sbb
mov
fwait
or
mov
orl
or
mov
and
dec
or
push
and
popa
sbb
shll
lds
sti
xor
dec
mov
leave
sub
mov
loopne
es
adc
jge
lds
sbb
mov
gs
jo
in
mov
mov
imul
fmuls
and
jbe
xchg
xchg
push
pop
add
inc
push
sub
adc
pop
mov
adc
lods
add
ficoml
int
lock
xchg
push
xchg
adc
test
add
rolb
lea
xchg
lods
jno
lahf
push
sbb
adc
add
daa
jmp
add
push
add
cmp
add
dec
cld
and
add
add
sbb
sbb
ret
fs
outsl
sub
cmpl
jbe
ret
mov
js
scas
sub
or
and
sbb
scas
push
cmp
repz
clc
jne
stos
xor
mov
mov
cld
fistpl
out
push
pusha
mov
sbb
imul
jmp
ljmp
fstpl
push
adc
add
in
mov
call
popa
repz
hlt
add
lret
add
mov
loopne
mov
jmp
inc
sbb
fcoml
pop
pop
fiaddl
adc
adc
xchg
push
in
enter
psubusb
adc
xchg
push
pop
adc
shr
scas
call
xor
dec
jo
or
mov
je
dec
cwtl
inc
scas
sbb
or
in
jle
adc
imul
bound
daa
outsl
pop
add
sub
shll
faddl
int3
loopne
sub
dec
loopne
fiadds
inc
dec
add
xchg
call
push
dec
dec
cli
lock
movsb
loopne
sbb
insl
lcall
out
pop
or
and
xor
or
adc
adc
mov
mov
sbb
je
jp
hlt
adc
fisttpll
sbb
mov
popa
xor
adc
aad
xor
adc
sbb
loopne
aam
mov
dec
add
mov
pop
out
in
add
call
sbb
iret
inc
jnp
adc
mov
mov
xor
jns
cld
pop
test
inc
adc
sbb
and
fsubrl
push
nop
insl
add
inc
mov
les
or
and
gs
test
mov
jg
and
inc
daa
es
cltd
cmp
push
mov
mov
inc
shlb
push
mov
or
outsl
mov
jle
mov
pop
mov
or
por
fstpl
xor
pushf
adc
dec
dec
dec
lea
xor
dec
test
dec
out
push
xchg
dec
inc
rorl
mov
pushf
pushf
xor
adc
inc
dec
dec
loopne
daa
cwtl
addl
lcall
nop
lret
and
pushf
inc
or
add
lods
lods
js
mov
in
imul
xchg
xchg
addb
jae
nop
pushf
cmp
jecxz
dec
and
mov
cmp
scas
arpl
lock
inc
push
loopne
cltd
mov
push
dec
aas
cmp
repz
in
popf
jne
mov
movsl
push
push
mov
cmpsl
stos
les
mov
ret
lea
cmp
jl
mov
jb
ret
pop
cmp
push
lods
mov
xchg
fstl
test
fdivl
leave
je
xorl
xchg
insb
insb
dec
dec
outsb
jo
lahf
xor
xor
lea
push
and
fs
sbb
mov
push
fsubrs
mov
pop
sbbl
or
mov
sbb
jbe
pusha
pusha
fs
leave
and
sub
gs
xlat
test
inc
test
leave
gs
pop
pop
pop
or
mov
lods
icebp
pusha
and
dec
sbb
je
lea
jecxz
aaa
inc
and
subl
lods
sahf
lea
mov
daa
sbbl
pop
push
or
enter
pusha
mov
rorb
punpcklbw
data16
cld
cld
and
cs
add
pop
dec
in
fwait
sbb
js
inc
push
inc
sub
inc
xchg
cld
cld
adc
dec
push
stc
lahf
push
push
pop
and
xchg
test
dec
add
push
or
insb
lret
and
sahf
jp
sbb
inc
xlat
push
mov
push
cmp
push
mov
scas
fisubrl
loopne
adc
add
lret
xor
inc
incl
mov
repz
adc
imul
sub
loopne
rdpmc
shl
testl
adc
scas
iret
hlt
mov
mov
push
pop
shlb
xor
mov
je
add
jp
add
fildl
ret
pop
andl
mov
out
je
inc
popf
cmpb
adc
mov
or
or
dec
push
imul
and
dec
jle
dec
into
push
push
jo
jmp
jg
push
lock
push
mov
movl
addl
incb
add
and
mov
xor
lahf
jl
sarb
rorb
aas
sbbb
xchg
ljmp
je
pop
shll
add
add
rcll
push
insb
gs
ret
jle
add
dec
das
mov
loopne
or
call
mov
jl
adc
jecxz
mov
ja
push
arpl
xchg
aaa
outsb
or
cmp
pushf
mov
cltd
dec
xor
les
pop
adc
pusha
int
lahf
test
push
lahf
les
sub
sub
loopne
fmuls
xchg
and
add
push
cmp
ljmp
sub
xchg
sub
mov
inc
mov
cmp
xor
jmp
pop
xor
mov
lock
jo
inc
cld
dec
and
jo
sahf
icebp
mov
rcll
cmp
and
aam
pushf
ret
cmp
ret
sbb
push
jmp
wbinvd
outsb
sub
jmp
xor
addl
clc
movsl
adc
in
add
xor
lods
or
ret
fisubs
inc
lret
adc
popa
inc
pop
lds
lea
sbb
in
orl
pop
mov
mov
pop
les
pop
push
xchg
test
out
add
out
pushf
pcmpeqd
shl
or
push
daa
mov
sub
lea
xchg
pop
sti
sub
imul
sbb
lahf
mov
or
sub
imul
sub
pop
and
adc
and
adc
xchg
adc
lea
gs
dec
mov
sbb
addb
fbstp
xor
jae
mov
insb
xor
aaa
les
pop
push
adc
or
inc
in
out
lods
inc
sbb
jnp
adc
addr16
cmp
mov
adc
inc
push
in
mov
pusha
push
add
cmc
iret
lock
fwait
aas
push
jg
aas
xor
xchg
jl
sub
mov
cmpl
mov
and
sub
cld
xchg
pop
repz
xchg
mov
cmp
loopne
xor
add
sbb
or
adc
cmp
cmp
xchg
add
or
jle
add
clc
xchg
jmp
ret
add
sbbb
mov
sbb
or
sbb
sbb
push
or
das
dec
hlt
or
mov
cmp
xchg
mov
and
dec
pop
inc
in
daa
call
out
ficomps
inc
xor
or
pusha
adc
pop
jg
loop
and
or
mov
popf
hlt
arpl
in
mov
shll
add
mov
sbb
jge
xchg
in
mov
insb
subb
rol
xor
mov
mov
addr16
orl
cmp
lea
push
push
push
xor
sub
xchg
sbb
mov
test
mov
mov
ds
lea
testb
in
cmp
idivl
inc
push
sub
mov
ds
rclb
mov
sbb
fmuls
pushw
adc
inc
loopne
mov
rol
mov
cmpsl
mov
int3
inc
or
daa
test
push
imul
rcl
adc
push
shl
add
in
lods
adc
pop
sahf
out
jl
cmp
repnz
js
jo
divb
mov
pop
daa
lock
or
std
xor
pop
and
mov
movsb
cmp
or
push
lea
dec
push
scas
dec
cmpsl
push
les
movsl
std
mov
jle
aam
imul
add
shrl
les
or
ds
mov
xor
fcomps
shrl
or
push
repz
xchg
mov
imul
pusha
movsb
add
lock
xchg
testb
icebp
xlat
or
test
lcall
xlat
je
out
shl
cli
dec
cmp
lock
cmp
shrb
sbb
inc
push
sbb
xchg
mov
sub
std
lods
xor
adc
les
cmpsl
inc
cwtl
xor
test
jb
adc
cmp
lock
dec
stos
pop
push
mov
bound
lea
js
inc
notl
out
or
pop
movsb
xlat
fstl
push
jb
lods
call
push
mov
bound
jnp
cmp
roll
and
rcl
negb
push
add
js
subb
cmp
lock
sub
mov
imul
mov
ja
mov
push
stos
mov
or
insl
push
adc
xor
add
fwait
push
and
lea
xchg
adc
pop
or
push
in
test
add
add
cmp
add
aas
xchg
inc
sbb
cmp
adc
lea
mov
mov
pop
nop
dec
in
fsub
sti
fistpl
cld
cmovb
or
mov
mov
pushf
cmp
or
aas
add
sub
add
mov
int
rclb
mov
jnp
jae
lret
mov
push
popf
bound
cmp
test
mov
push
imul
pop
xor
jae
lcall
sub
sbb
inc
pop
out
leave
mov
dec
insb
xor
mov
xorl
add
lea
test
jg
rcll
inc
pushf
dec
addb
mov
adc
test
test
in
sbb
adc
addb
sbb
pop
mov
repnz
lods
cmc
pop
inc
dec
mov
xchg
dec
xorb
add
hlt
mov
sar
jl
outsb
dec
jae
mov
lcall
xor
sbb
ret
arpl
push
mov
hlt
lods
mov
and
dec
les
imul
dec
push
loopne
dec
in
or
mov
push
imul
dec
mov
jmp
push
stos
add
sti
addl
or
test
outsb
mov
pop
fisttpl
pop
and
jle
jae
mov
insl
and
std
pop
sbb
rcrb
fmuls
dec
in
femms
lcall
cs
int
inc
outsl
add
call
orb
adc
add
inc
cmpsb
or
mov
fs
or
je
pop
stc
adc
jne
mov
lock
add
jb
data16
hlt
sub
push
push
test
sub
pushf
leave
inc
dec
je
push
dec
ret
fimuls
jno
icebp
cwtl
jno
pop
jbe
inc
push
dec
pop
imul
adc
adc
ljmp
in
or
sbb
mov
subb
inc
and
or
addr16
adc
adc
mov
aaa
jae
aas
mov
push
mov
cmpl
pop
push
es
push
fistpll
ret
jnp
ja
test
xchg
push
pop
xchg
sbb
inc
adcb
mov
sub
xchg
test
cltd
adc
inc
or
xlat
mov
mov
push
xor
hlt
push
jl
mov
in
mov
hlt
lods
xchg
lock
push
lods
scas
nop
push
pop
dec
sahf
fdiv
xchg
dec
xchg
imul
pop
sbb
jmp
jne
lock
lret
rolb
push
js
rorb
mov
in
push
shlb
fimuls
xorl
in
add
movsl
mov
mov
cmc
add
cmp
mov
in
out
mov
adc
js
loopne
mov
and
or
cmp
aad
loop
call
pushf
in
xorl
enter
push
add
movsl
jne
shl
lock
std
or
shll
lea
cmp
jne
addr16
mov
push
jmp
cmp
imull
int3
pop
push
xchg
push
daa
jne
lea
ret
and
and
repnz
add
add
add
mov
bound
leave
daa
je
fldl
rorb
mov
or
add
faddp
cs
jmp
sbb
or
sub
scas
fnstcw
pop
lret
or
dec
test
jl
or
fildl
xorb
push
xchg
aam
fcoms
scas
or
pop
mov
std
cmp
sbb
sub
cmpsb
dec
ja
cmp
inc
push
pusha
jnp
pusha
cmp
cmpsl
dec
pop
mov
sar
sbb
bound
xchg
sti
mov
mov
in
pop
movsl
pop
hlt
lret
xlat
aas
adc
in
in
call
in
js,pt
push
dec
mov
sub
push
hlt
hlt
jmp
ss
jne
and
or
fwait
lock
lock
xchg
paddsb
and
add
or
sub
fs
adc
jo
stc
jle
lock
dec
dec
lock
push
jo
pop
xchg
or
sub
inc
adc
push
adc
cld
outsb
push
push
or
shlb
lahf
shll
call
sbb
mov
cmp
cmp
sbb
inc
inc
out
adc
adc
lods
cmp
mov
mov
inc
sbb
inc
xchg
cmpsb
cltd
cmpsl
cmp
add
enter
movsb
repz
fstl
movl
lea
lahf
jnp
ja
mov
mov
lock
pop
rorb
inc
imul
lret
mov
daa
mov
into
push
fwait
jg
add
adc
jge
rolb
adcb
test
dec
out
fisttps
add
mov
sbb
dec
cwtl
nop
add
in
pushf
mov
movsb
add
data16
inc
fimull
add
inc
adc
ja
add
pop
repnz
xchg
push
add
pop
add
jns
dec
pusha
add
add
sbb
and
inc
pop
shll
add
enter
add
mov
repnz
out
add
repnz
mov
enter
nop
orl
sbb
add
add
add
add
add
add
jo
mov
nop
out
xchg
or
orb
mov
movsb
test
xchg
sbb
lods
mov
pop
jo
enter
ja
add
in
add
lock
inc
lcall
or
and
add
or
orb
and
push
and
mov
mov
in
add
add
add
add
add
sbb
fsubl
cmp
mov
sbb
sbb
call
sbb
ja
fs
push
jns
sub
fs
push
xor
jl
fs
cmp
incb
and
sbbl
call
and
hlt
cmp
add
clc
cld
add
in
and
add
or
mov
ja
add
cmpl
add
add
add
push
outsl
or
add
mov
push
jnp
xor
xor
push
ret
xor
xchg
cs
out
inc
jno
adc
mov
sbb
orb
pop
mov
jbe
mov
cmc
add
inc
sbb
jns
lret
mov
mov
nop
adc
pop
inc
cmp
add
fnstcw
adcl
add
outsl
adc
stc
add
call
lds
add
sarb
push
out
fistps
or
dec
jmp
mov
sbb
cmp
sub
arpl
ds
cld
xchg
jbe
dec
pusha
cwtl
add
movsb
pop
and
add
or
jns
sahf
mov
push
scas
inc
test
push
mov
imul
jne
mov
dec
add
cmpl
imul
adc
adc
lock
scas
adc
pop
or
loopne
jl
xor
ljmp
insb
pop
sbb
scas
xchg
shrb
cmp
push
scas
mov
or
in
lock
insb
xchg
sarb
mov
sub
and
sbb
add
aam
or
sbb
shlb
push
pop
je
loop
ret
dec
aas
cld
cmpsl
rol
lock
jb
jmp
and
dec
fcomps
mov
adc
or
fstps
int
inc
clc
mov
jae
mov
adc
push
adc
xlat
xor
dec
call
dec
in
into
jp
mov
loopne
loopne
outsl
pandn
or
add
movb
jmp
adc
ret
ret
mov
add
sarl
push
faddl
popf
mov
dec
sub
jb
sarl
jne
xor
js
ljmp
insb
lcall
dec
add
dec
xor
loope
sbb
mov
xchg
jle
test
cmp
xchg
and
mov
or
jge
jbe
sbb
insb
mov
jmp
movsbl
and
int
divb
ss
inc
add
jmp
add
fcomp
outsl
insb
or
insb
adc
jl
dec
repz
push
add
adc
jle
fucomp
cmp
call
jnp
pop
pop
into
push
lahf
mov
lret
pusha
add
xorl
jne
add
jne
js
push
xor
mov
mov
addr16
stos
ja
es
ljmp
pop
add
inc
repnz
enter
sub
aam
push
faddl
test
add
leave
mov
add
mov
lock
add
adc
dec
sub
or
or
jo
pop
movsl
adc
adc
add
cld
sahf
mov
add
lea
stos
stos
lea
push
push
lods
or
or
loope
mov
mov
mov
cmp
inc
dec
and
lret
lea
add
sub
fstpt
pop
add
or
clc
xchg
adc
sub
test
push
adc
call
sarb
xchg
test
or
xchg
or
cmpl
fstpt
xor
sub
rcrb
push
mov
hlt
xchg
or
push
pusha
pop
negb
cmp
or
add
xor
idivl
leave
lods
loope
jne
pop
push
lea
ret
or
pop
lcall
or
add
lods
add
jnp
shrl
xor
mov
cmp
inc
ja
lea
mov
push
lock
and
xchg
mov
fwait
pop
ds
dec
mov
scas
pop
rolb
adc
cmp
and
xchg
and
sub
inc
push
imul
in
inc
dec
in
pop
or
pop
adc
jmp
add
mov
nop
sarl
aaa
cmpl
inc
lret
pusha
add
clc
clc
and
push
pusha
test
ljmp
mov
pop
sub
add
jmp
test
xor
test
loop
sbb
jge
cmovno
sub
xor
les
clc
les
outsb
outsl
jmp
rcl
jae
pop
xchg
imul
inc
clc
dec
enter
mov
inc
enter
xchg
xchg
xor
je
cmp
mov
lcall
js
in
fcompl
test
jmp
sub
sbb
cmpb
mov
fistpl
ja
loopne
jmp
and
shrl
xchg
jae
jns
jmp
mov
clc
push
sbb
out
mov
nop
jmp
add
adc
xchg
lock
mov
les
push
fnstcw
push
adc
adcb
pop
hlt
pusha
lods
jle
lods
xchg
clc
pop
xchg
pop
and
sti
inc
or
nop
cmp
nop
jnp
movsb
loope
push
xchg
rclb
jge
aas
pop
loopne
bound
sub
mov
repnz
mov
shrl
test
bound
loopne
in
jne
lcall
das
jo
int
hlt
jae
xor
sub
loop
jns
rorb
faddl
lret
jle
dec
inc
inc
cmc
rolb
mov
xchg
mov
test
insl
and
jp
fadds
popa
imul
sti
nop
mov
leave
cmp
xor
decl
jnp
jmp
jmp
jmp
jmp
jmp
fildll
movsb
mov
or
and
push
adc
sub
dec
lea
sub
inc
xor
scas
popf
shlb
jno
and
mov
shlb
shlb
push
mov
clc
jae
add
dec
and
xor
add
imul
mov
cmp
call
cmpsl
jae
call
add
mov
loope
rorl
push
loopne
inc
das
mov
or
or
sbb
out
push
push
dec
add
in
jnp
xchg
les
adc
stos
addr16
and
push
cmp
std
out
decl
js
mov
mov
push
sub
mov
jmp
addl
sbb
rorb
lahf
mov
testl
cmp
inc
mov
lea
cmp
jb
push
jbe
call
cmp
sub
jmp
dec
inc
jmp
aad
sbb
roll
popa
xchg
iret
or
push
push
sbb
push
push
push
mov
or
andl
inc
das
inc
pop
flds
jecxz
rorb
sti
cmp
jmp
jae
mov
out
fsts
shrb
push
adc
xchg
adc
xor
ds
add
sete
mov
sbb
mov
lea
or
movsl
push
and
subl
jae
or
push
outsl
xor
pop
ss
jl
in
adc
neg
sbb
push
dec
data16
xor
mov
lret
fwait
xchg
mov
xchg
insb
das
frndint
ficompl
shl
fimull
mov
push
mov
nop
call
in
je
lahf
sub
mov
xchg
mov
loop
lcall
cmp
fdivr
out
outsb
jb
std
adc
mov
lea
cmp
push
or
push
sbb
test
lahf
popf
jmp
rcrb
mov
aad
cltd
lds
testb
push
enter
mov
adc
pop
test
cs
cmp
add
lret
loopne
mov
mov
movl
test
mov
adc
ret
sub
mov
fucom
xchg
xor
pusha
xchg
cmp
movsb
lcall
insl
or
cmp
inc
mov
cmpb
dec
dec
or
add
xor
xor
cmp
jbe
iret
imul
add
adc
enter
inc
mov
inc
cmp
mov
jb
andl
lret
push
mov
push
roll
ret
adc
pop
add
pop
movsl
xchg
data16
sbb
dec
dec
cs
mov
sbb
icebp
ret
adc
in
mov
jne
sbb
data16
cmp
outsb
nop
push
movsb
sbb
fsubl
and
xchg
pop
out
sub
mov
jge
movsb
pusha
adc
or
imul
push
push
dec
nop
pop
xchg
push
inc
movq
mov
adc
je
or
push
push
xlat
hlt
jmp
or
sbb
leave
xchg
sbb
sbb
hlt
dec
leave
xchg
dec
hlt
hlt
hlt
xchg
dec
leave
xchg
hlt
hlt
leave
xchg
dec
leave
hlt
hlt
hlt
dec
leave
xchg
dec
hlt
hlt
hlt
test
hlt
hlt
test
hlt
mov
xchg
lahf
lret
and
hlt
hlt
hlt
xchg
dec
leave
xchg
hlt
hlt
leave
xchg
dec
leave
hlt
hlt
hlt
dec
leave
xchg
dec
hlt
hlt
hlt
xchg
dec
leave
xchg
hlt
hlt
leave
test
hlt
hlt
sahf
xchg
rolb
jo
inc
xchg
movl
sbb
in
or
dec
add
in
es
or
divb
adc
lods
in
sbb
repnz
add
scas
popa
movsl
es
sarb
mov
sub
add
roll
xchg
adc
cmpsb
xlat
push
pop
push
adc
mov
js
mov
js
mov
sub
jecxz
sub
dec
hlt
add
mov
or
mov
push
mov
cmp
pop
inc
or
dec
adc
pop
pop
and
sbb
pop
clc
or
adc
test
sub
test
shrb
inc
adc
pop
jmp
sbb
push
dec
call
and
push
and
mov
cmp
jne
mov
mov
mov
loopne
sahf
push
sbb
dec
add
adc
push
mov
mov
aaa
or
int3
das
or
push
insb
mov
add
jne
or
cmp
jne
or
pop
sub
dec
xchg
les
jmp
mov
and
mov
repz
test
mov
or
mov
popa
or
ss
add
adcb
xchg
sbb
dec
loopne
int
repnz
int
mov
shr
test
loopne
sub
mov
or
mov
or
aas
inc
xchg
inc
pop
xor
lss
loope
push
cld
mov
inc
cmp
sbb
dec
push
dec
roll
mov
sub
clc
adc
sar
js
or
xchg
mov
sbb
shlb
mov
adc
stc
dec
loopne
pop
adc
mov
pop
pusha
int
test
arpl
test
ret
sub
and
mov
cli
jmp
cltd
pop
add
in
adc
pop
ret
push
adc
pop
in
loop
add
shl
loope
or
dec
or
add
sbb
add
lock
push
es
fs
lret
jb
push
sub
stc
add
pop
xchg
vunpckhps
and
jb
je
mov
add
push
and
xchg
push
pusha
outsb
mov
pusha
test
shl
es
sub
adc
cmpsl
mov
mov
mov
imul
lret
stos
movsb
jb
shrb
lret
leave
enter
je
mov
mov
inc
xor
push
inc
clts
jg
mov
cwtl
or
gs
adc
dec
mov
xor
aad
push
insl
adc
test
andb
mov
add
stos
pop
cmpl
pop
cmp
mov
lea
shlb
push
mov
nop
out
sub
inc
adc
or
jo
mov
jle
cmp
mov
and
loopne
fstpt
jge
movsb
sarl
inc
insb
lock
adc
call
imul
add
in
pop
lret
cwtl
ss
add
mov
adc
ret
ja
lahf
filds
jo
or
or
jne
add
adc
add
test
jne
xchg
jecxz
cmp
and
jg
adc
fs
cmp
out
loope
mov
leave
sbb
lock
fwait
stos
dec
and
add
mov
cmpsl
movsb
sbb
dec
in
sub
dec
repz
loop
lret
popa
and
push
loopne
sbb
xlat
lcall
call
cld
cld
and
mov
sbbl
pop
sub
sub
sar
jle
or
ja
mov
adc
mov
add
pop
adc
push
mov
sub
cmpsb
lea
or
xor
and
mov
adc
lret
shlb
scas
add
ret
fistl
jmp
rorb
pusha
adc
movsl
push
lods
pop
add
push
cltd
jo
lock
pop
sbb
rol
clc
pop
lds
add
sub
mov
xchg
hlt
push
jns
hlt
hlt
sub
in
icebp
out
cld
adc
xchg
add
jmp
mov
mov
andb
pushl
lods
jne
fsubr
sbb
ret
dec
mov
xchg
sbb
pop
cmp
xchg
xor
cmpsl
xchg
imulb
sub
inc
cmp
inc
ja
mov
test
pop
shlb
pop
in
add
adc
xchg
and
xor
fnstenv
sbbb
fcoml
jae
imul
rclb
movsb
shrb
lea
test
enter
xchg
fcoml
ret
rolb
mov
cmp
sbb
fsubs
add
add
jb
and
movsl
xchg
test
imull
dec
hlt
xor
sarb
fs
sub
push
mov
cmp
add
sbb
je
lds
push
mov
es
cld
mov
sub
mov
push
jo
pop
pushl
ja
cli
jo
daa
test
clc
std
push
inc
lret
lds
mulb
cmp
movsb
popf
popa
divl
repz
ror
sub
jne
clc
gs
insl
lds
aad
add
test
fldenv
dec
out
push
pop
pop
outsl
adc
pop
scas
imul
sub
jb
filds
adc
dec
hlt
jmp
jb
dec
or
push
push
clc
mov
push
clc
pop
es
clc
or
and
ja
mov
and
or
pusha
push
repnz
push
leave
fs
push
in
inc
jo
je
push
and
jl
sub
or
addb
push
pop
leave
inc
jle
addl
mov
jl
in
sbb
push
add
jns
pop
pushf
or
in
pop
mov
pusha
mov
scas
in
push
test
jo
je
cmp
cmp
push
addb
pop
jb
addl
mov
cmp
sbb
daa
push
add
or
pop
mov
dec
es
pop
movsb
or
sub
in
cs
jo
xchg
mov
scas
popa
repnz
add
je
dec
xor
out
call
clc
jo
in
scas
add
in
dec
scas
test
mov
inc
scas
nop
jo
dec
ds
push
push
aaa
loop
mov
mov
or
push
lea
mov
cmp
jbe
and
ret
das
dec
out
pop
dec
push
shl
push
lea
push
xchg
jb
or
adcb
add
lcall
test
bound
sub
adc
or
lret
add
ss
pop
adcl
mov
ror
repnz
or
mov
mov
int
clc
adc
mov
adc
sbb
out
add
sub
rclb
pop
pop
inc
jo
or
xchg
or
rcrl
push
push
loopne
insl
shrb
movsb
cld
xchg
push
push
push
xchg
mov
adcl
pop
push
and
es
pusha
jb
or
add
add
nop
cmp
imull
rorb
loopne
mov
cmp
mov
pushl
scas
push
push
push
push
mov
push
mov
pop
mov
fs
jo
jg
jmp
iret
sub
jne
add
dec
jne
push
sbb
mov
sbb
rep
enter
add
rorl
or
arpl
fs
jae
mov
adc
cmp
mov
or
pop
xchg
and
xchg
js
cld
lock
xor
cld
lock
les
mov
ja
add
in
mov
aaa
ja
pop
scas
in
jo,pn
js
xchg
or
jl
adc
or
jne
outsl
push
jb
bound
lock
or
inc
lock
aaa
push
loope
or
outsl
ret
mov
bound
daa
pusha
fs
dec
push
in
ja
je
mov
jl
insl
loopne
aaa
test
addb
push
insb
lds
push
push
jnp
rcll
push
or
pop
enter
adc
repnz
pop
nop
outsl
jb
adc
daa
pusha
fs
adc
ja
jb
pop
jo
or
lds
ja
jbe
insl
test
jne
outsl
sbb
add
or
pop
xchg
mov
jbe
push
lods
xor
jl
add
xchg
insl
arpl
jne
push
adc
fs
jno
adc
insl
add
hlt
sub
rolb
cmp
jmp
mov
and
rcll
dec
add
test
movsl
cmpsl
push
or
push
sbb
pop
rolb
mov
mull
cmp
test
sub
outsl
shrl
push
iret
add
xchg
or
imul
inc
shlb
sub
mov
add
imul
add
add
jne
xor
in
lret
sub
pop
test
or
ret
push
mov
pop
insb
jae
lods
mov
xlat
or
pushf
loopne
adc
sub
fiadds
test
add
cmpsl
ja
insb
push
push
adc
fsubrs
bound
mov
mov
mov
cmp
mov
or
ret
sbb
aad
andl
jl
and
jae
xor
movsb
imul
aam
les
xorl
mov
ret
mov
or
and
stos
into
xchg
push
rorl
sahf
js
fsub
inc
add
loope
mov
add
mov
call
xchg
add
pop
les
push
les
orl
and
mov
adcl
daa
lret
xchg
icebp
fmuls
push
pop
or
mov
ja
pop
test
shlb
shr
xor
or
nop
sub
pop
sbb
jge
add
popa
loope
clc
sub
cmp
push
loopne
pop
inc
inc
fs
push
lea
lcall
and
test
and
dec
movsb
movsb
and
addb
shr
push
leave
xchg
sub
pop
jnp
mov
scas
enter
in
push
out
pop
add
or
cmp
cs
je
xchg
mov
stc
movsl
push
sub
xchg
push
dec
or
xor
cmp
xchg
bound
cmpsl
mov
mov
and
cwtl
cwtl
xchg
push
arpl
pop
cmpsl
or
add
roll
adc
rcll
adc
ret
rolb
adc
mov
xor
mov
pop
or
jbe
and
out
push
sbb
es
arpl
xor
movsl
push
bound
negl
call
aam
pusha
push
add
test
sbb
movaps
cmc
xchg
mov
add
or
cmp
in
lea
inc
in
pop
or
jae
sub
mov
fdivs
mov
push
lods
imul
dec
jmp
test
inc
sbb
adc
rol
xchg
sbb
call
dec
call
dec
jne
xchg
jb
pop
xor
loopne
lahf
call
fiaddl
dec
into
call
or
and
mov
mov
inc
movsb
cmpl
lret
adc
inc
or
daa
inc
pop
push
mov
lock
pop
mov
xchg
dec
adcl
mov
test
cmp
fs
mov
in
jmp
stos
add
cld
jmp
jmp
jmp
inc
mov
loopne
mov
inc
inc
test
ljmp
aam
pop
push
mov
shr
shl
or
movzbl
xor
cmp
icebp
mov
mov
jne
cmp
icebp
fldt
pop
adc
jo
jmp
push
push
hlt
dec
lar
mov
mov
sahf
rol
je
push
popf
inc
and
je
repz
fmul
jecxz
je
dec
mov
je,pn
add
lock
jle
pop
test
and
je
fwait
sahf
int3
sti
je
loopne
sbb
inc
ret
push
fdivrl
adc
jne
cltd
pop
ljmp
cmp
xor
loopne
icebp
aas
cwtl
ret
push
push
movsb
mov
xlat
iret
push
mov
hlt
mov
push
push
inc
outsb
mov
adc
mov
fldl
adc
out
jg
dec
lock
mov
xchg
into
add
shl
mov
sub
lcall
cmp
jne
dec
cmp
cmpl
and
movzwl
cmp
call
or
add
daa
cmpl
push
jbe
mov
push
push
je
add
add
xchg
in
adcl
xchg
adcb
sbb
adc
aam
or
mov
cld
push
lahf
add
jle
jle
xchg
repz
inc
mov
jl
outsl
mul
mov
dec
or
fwait
push
aam
adc
and
mov
int
cmp
je
push
sub
mov
or
imul
jo
or
xor
inc
shr
push
pop
cmp
push
loopne
popa
xlat
mov
mov
cmp
jne
push
addr16
or
test
stos
adcb
push
sbb
inc
push
cmp
push
lock
mov
out
lea
pop
pop
add
sbb
ret
push
sarb
push
push
js
mov
rorb
aas
repnz
jg
mov
pop
push
push
mov
mov
and
iret
mov
jae
jnp
imul
roll
jb
div
pop
jg
sub
clc
mov
mov
mov
mov
in
cmp
pop
jae
mov
movsb
pop
shl
nop
aas
mov
push
inc
cmp
adc
xor
or
pop
lock
test
inc
out
push
xor
cmc
mov
or
out
and
test
sbb
xlat
sbb
mov
mov
sbb
sbb
jae
mov
adc
mov
adc
mov
test
or
movl
ret
or
or
faddl
add
inc
add
leave
rcrb
mov
sub
notb
aas
hlt
sar
mov
mov
or
inc
jg
sub
pop
inc
cmp
and
lock
cmp
and
mov
add
ret
ds
dec
cmp
into
cmp
mov
out
inc
test
mov
pop
adc
adc
push
fidivl
mov
out
lea
mov
cmpsl
sub
cmp
jbe
sbb
dec
push
lret
add
clc
push
cmp
push
aas
pushl
dec
dec
fcomps
lea
pop
add
push
loopne
jnp
jns
cmpsl
mov
push
or
and
jns
adc
pop
push
mov
sub
and
lds
div
pushl
pop
push
adc
dec
push
add
lea
andl
call
ret
dec
adc
ret
pop
je
lock
pop
sbb
push
and
mov
icebp
or
bound
mov
jge
push
mov
adc
xor
rorl
jp
in
out
and
into
jb
lea
add
sbb
jae
inc
add
mov
mov
test
rorl
push
lret
cmp
xchg
popa
or
jmp
testl
dec
cmp
inc
or
adc
in
fmul
aaa
outsb
lds
push
or
rcl
jge
cld
jmp
shl
mul
sub
stos
or
jne
enter
push
ljmp
int3
cmp
add
jbe
nop
daa
mov
bound
push
dec
xchg
test
and
andb
mov
xchg
xchg
or
rcll
push
rcrl
adc
mov
notl
dec
pop
int
adc
aam
enter
dec
mov
push
js
clc
xor
or
mov
xchg
stos
ljmp
push
sbb
lret
fidivl
or
cs
cmp
jne
sar
stc
fbstp
rcrb
popl
inc
inc
jmp
push
pop
inc
in
loopne
bound
cmc
pop
incb
fstpt
sbb
sbb
stos
mov
cmp
loopne
xor
inc
lds
clc
add
jne
mov
and
in
hlt
mov
sti
pushf
jnp
ror
push
jge
test
sub
push
sub
mov
pop
ds
cmp
scas
xor
push
leave
enter
push
jne
pushl
inc
xor
pop
faddl
and
xchg
ret
dec
cmp
inc
out
adc
fsubrs
sete
push
mov
hlt
movl
imul
mov
cmpb
push
rolb
mov
mov
jmp
incl
bound
inc
or
mov
testb
or
sbb
adc
dec
mov
xor
cmp
sub
cmpsb
divb
jne
cmp
movb
gs
mov
sbb
inc
dec
jmp
lods
shl
icebp
dec
jmp
xor
mov
out
inc
pop
jmp
inc
inc
inc
pop
je
sbb
push
aaa
cmp
test
pop
jg
data16
nop
dec
add
roll
scas
adc
dec
cld
iret
cld
shr
cs
fiaddl
pop
incb
int3
repz
je
aam
cmp
or
clc
pop
sbb
into
fdivrl
mov
fs
wrmsr
leave
testb
sub
lcall
inc
outsb
ljmp
sbb
leave
sarl
pusha
adc
fsubrs
stos
mov
clc
xchg
movb
ret
push
fs
loopne
ss
and
mov
jne
mov
lea
push
lea
icebp
pop
xor
jne
push
mov
shl
add
mov
incl
and
gs
cmp
cmpsl
test
xor
push
or
movsb
inc
cmp
jo
mov
pusha
mov
js
add
out
mov
mov
push
xchg
inc
add
inc
xchg
scas
in
jbe
pop
mov
das
jmp
mov
and
adc
adc
imul
mov
push
push
add
adc
jne
or
mov
add
push
sar
inc
push
push
adc
call
mov
jo
sub
je
cmp
cmp
push
dec
and
inc
dec
sbb
lahf
inc
pop
mov
popa
call
pop
ret
jmp
cmp
je
je
jmp
mov
pop
adc
pop
je
inc
cmp
sti
or
lock
push
sbb
mov
or
and
push
mov
or
inc
dec
pop
pop
shr
cmp
fisubl
lods
mov
push
loope
lea
add
out
fimuls
mov
add
add
aaa
cmp
jb
aas
and
mov
jl
cmp
adc
sbb
mov
push
lea
add
push
mov
or
cmp
test
test
nop
or
push
sidtl
imul
xchg
jl
rorb
test
jle
mov
shlb
sub
add
roll
or
cld
adc
icebp
cwtl
mov
test
pop
loopne
mov
pop
mov
mov
mov
pop
mov
clc
add
inc
add
jl
pop
andb
hlt
xor
cmpl
dec
mov
cs
rorl
pop
adc
dec
sub
fdivs
pop
cmc
mov
insb
jmp
pop
push
int
jp
ljmp
orb
insl
aad
prefetchnta
pop
adc
jmp
or
cld
cmp
jl
pushl
fs
rorb
jb
push
push
or
pop
jge
aaa
and
jae
sti
or
sbb
jp
call
jmp
inc
and
mov
cld
subl
jmp
incl
pop
js
inc
inc
xor
mov
add
out
add
pop
ret
icebp
or
push
insl
lock
pusha
pushf
je
pop
idivb
jg
loopne
fs
push
push
or
cmp
call
call
or
sbb
dec
sti
hlt
adc
lea
push
test
loopne
inc
es
clc
fadds
loopne
les
pop
jb
adc
lcall
mov
ret
push
inc
xor
pop
inc
xor
adc
test
idivl
pop
pop
add
push
jge
mov
dec
stos
xor
mov
pop
push
sub
mov
cmp
jge
ficoml
pop
pop
push
cwtl
imul
push
xlat
or
xor
mov
repz
js
ja
pop
dec
push
divl
mov
push
orb
add
lock
or
push
or
xor
jmp
mov
pusha
shll
or
decl
lock
sbb
mov
inc
sbb
dec
in
add
push
clc
test
xchg
mov
ljmp
fs
test
dec
pusha
rcl
je
sub
sbb
mov
xor
pop
in
stos
fidivs
mov
mov
stos
outsl
inc
ljmp
mov
fdivrs
push
mov
add
andl
pop
ret
xchg
sub
mov
cld
mov
cmp
out
pop
add
aas
mov
and
pop
dec
ret
je
jp
jle
jl
sar
xchg
pop
ret
std
or
cltd
fnstenv
loop
stc
insl
push
jne
jo
inc
xchg
je
test
jle
push
sbbb
fucomp
in
jl
xor
push
sub
and
push
jge
jl
stos
add
test
lret
in
fisubl
sarb
fldcw
sbb
shlb
push
testb
addr16
dec
adc
jmp
and
ljmp
mov
arpl
fdivrs
add
jne
jp
pop
daa
pushf
out
mov
mov
jl
jmp
lea
lcall
push
test
mov
mov
les
icebp
mov
jle
mov
imulb
add
add
push
and
out
or
jb
push
jle
adc
lea
jmp
or
jmp
std
jmp
icebp
lret
cld
enter
mov
shlb
mov
jle
push
movl
mov
xlat
in
mov
adc
loope
xor
divb
ret
mov
fsub
paddusw
jo
pop
ret
adc
and
mov
sbb
mov
cld
sub
push
adc
push
mov
mov
clts
ja
adc
or
adc
shr
jo
lods
loope
lret
daa
mov
bound
mov
cmp
add
sub
das
push
mov
aas
cmp
outsb
dec
jne
and
push
fildl
adc
jmp
in
arpl
ljmp
jmp
in
gs
sub
mulb
wbinvd
pop
pop
out
and
iret
jae
and
add
sub
xor
les
sbb
adc
add
sub
xchg
scas
lock
push
adc
out
ljmp
mov
enter
and
sbb
xchg
or
adc
and
inc
enter
or
rol
std
nop
or
cld
push
push
cmp
fs
inc
add
push
xchg
lock
movsl
or
mov
mov
mov
sbb
mov
test
dec
or
cwtl
shlb
inc
cmp
inc
movsb
sahf
data16
lahf
inc
test
mov
imulb
jge
and
mov
cmpsl
lea
sahf
or
add
or
push
push
push
mov
stos
adc
inc
sti
and
cli
or
test
ds
pop
add
pop
stc
sbb
cmp
xchg
fsubrl
sar
xor
or
pop
jnp
call
sbb
test
test
jb
mov
fldl
pop
and
lea
push
in
or
pop
jg
push
cmp
ja
sub
inc
jecxz
mov
das
mov
lret
and
rep
inc
mov
inc
and
data16
rcrl
in
cmp
xchg
in
push
out
jle
add
mov
inc
das
fnstenv
cmp
xchg
jl
rol
push
jp
test
das
pop
ret
dec
cmp
xorb
mov
test
sbb
add
pop
out
dec
sub
jecxz
cmpb
btc
call
clc
inc
jb
or
adc
enter
and
adc
jp
push
cmp
mov
loopne
mov
add
dec
cwtl
add
mov
push
push
mov
cs
add
or
mov
adc
add
test
sub
std
sub
jne
mov
in
sub
mov
fidivl
mov
push
push
mov
adc
mov
stos
mov
out
je
add
inc
cmp
cmpsb
jb
sub
rclb
jg
cmp
inc
cmp
mov
and
inc
rorl
xchg
scas
cmp
out
cmpb
mov
jle
jb
popa
sbb
cmp
push
and
fsubs
lea
incb
or
stos
lea
repz
mov
mov
add
cli
cmp
fdivs
outsb
add
mov
scas
inc
dec
ret
es
inc
mov
dec
mov
inc
es
jb
sbb
xchg
loopne
lock
jnp
cmp
mov
adc
jo
insl
mov
xchg
ret
inc
inc
cmpb
iret
sub
or
inc
out
jne
stos
add
mov
jmp
jmp
in
sub
je
pop
por
push
imul
mov
adc
ficomps
subl
push
and
inc
push
lds
ret
divb
icebp
arpl
dec
cmp
adc
addb
lods
adc
bound
sbbb
sub
loop
pop
jp
pop
jge
adc
sbb
sahf
ja
push
cli
mov
add
add
icebp
add
mov
push
add
ja
test
lods
insl
jae
out
imul
push
ficoms
or
sub
test
push
or
rcl
pushf
push
mov
jge
ljmp
sbb
roll
cmp
jbe
cmp
jb
xlat
adc
adc
and
stc
or
rep
faddl
mov
in
outsl
mov
jb
and
add
test
negl
pop
nop
push
loopne
jo
pushf
push
xlat
sbb
push
mov
mov
mov
or
lods
psubw
mov
sarl
dec
add
add
inc
add
add
mov
or
push
sub
and
iret
repz
adc
add
out
in
inc
in
call
sahf
out
lock
hlt
clc
cld
or
clc
cld
cld
lea
clc
cmp
shll
jmp
data16
call
nop
inc
pop
ret
pusha
pop
mov
and
mov
sbb
je
into
jl
cld
sub
leave
adc
cld
out
lds
neg
adc
cwtl
xchg
daa
mov
mov
sub
mov
popa
nop
cld
movups
fiaddl
jl
xchg
frstor
mov
add
sahf
inc
push
out
push
add
cs
jne
cmpsb
lea
add
lcall
mov
or
push
lods
mov
iret
repz
int3
fistpll
iret
sbb
sbb
adc
cmp
repz
adc
or
and
repz
icebp
imul
shrb
add
inc
pusha
mov
pop
ja
push
cmpsl
pop
push
ret
lds
cli
leave
dec
andl
sbb
or
mov
adcl
lods
out
and
dec
inc
and
out
inc
ret
mov
mov
mov
call
push
dec
add
inc
jb
jp
adcb
cmpsb
ljmp
adc
mov
sub
cld
shr
mov
imul
add
lea
dec
cld
sub
dec
notb
test
xor
sbb
mov
adcb
push
stos
mov
mov
jne
sar
dec
adc
lock
cli
aas
jbe
push
pop
mov
cmp
inc
push
and
xorb
lret
lea
not
and
decb
loope
jmp
jmp
lea
xor
data16
pop
add
push
ss
add
pop
and
loop
push
or
push
inc
or
aas
pop
shr
pop
clc
and
hlt
in
cmpsb
add
movsb
and
sti
add
mov
pop
cmp
jbe
mov
imul
out
cmp
andb
cmp
je
cmp
das
fists
jno
cmp
mov
out
not
and
loopne
pop
dec
add
sbb
lock
stc
push
pop
xor
and
push
cmp
jmp
pop
mov
fimuls
test
sub
mov
dec
pop
or
or
pushl
pusha
mov
mov
inc
add
mov
jae
cmpb
lock
ret
lret
call
jl
clc
mov
jmp
dec
adc
push
mov
or
inc
adc
push
fdivs
jno
orl
in
mov
or
leave
sub
xor
aam
loope
add
outsl
das
sti
subl
or
ret
or
andl
sub
dec
inc
adc
inc
movsb
push
inc
inc
dec
aam
and
in
shrl
push
adc
or
and
test
cmc
leave
mov
lds
xchg
mov
in
push
lea
cmp
jl
mov
xchg
cmp
lock
je
or
xchg
cltd
ljmp
pop
adc
and
add
or
insl
test
xor
mov
push
outsl
ret
cli
or
push
adc
pop
movsl
cli
movsb
pop
ret
addl
adcl
scas
or
xor
mov
and
push
push
sbb
inc
push
cmp
loopne
popa
or
jbe
push
icebp
add
imul
rolb
mov
incl
adc
outsb
pop
jae
inc
lods
stos
fwait
push
in
xor
cmc
dec
ret
shl
inc
xchg
mov
imul
popf
test
adc
pop
mov
add
add
dec
jne
jns
push
push
mov
mov
out
add
add
add
xlat
les
xchg
sbb
cli
lcall
fsubrs
iret
shr
lea
inc
orl
orl
sbb
lea
out
add
pop
inc
cld
lock
out
push
call
dec
jne
and
sbb
dec
dec
and
mov
inc
cmp
incb
insb
or
fs
lret
mov
cmp
xchg
inc
mov
add
mov
jne
or
xlat
ss
and
and
push
or
dec
repz
xlat
sub
pop
shr
fmull
cld
sub
cmp
push
mov
pop
and
jb
mov
ss
cmp
ret
or
fnstenv
add
cmp
sar
dec
cmp
jl
or
xchg
pop
js
cmpsl
xchg
fwait
add
pop
inc
cmp
frstor
into
add
lea
out
or
aam
dec
or
and
lock
add
sub
pop
adc
fdivr
das
stos
sar
dec
cmp
mov
cld
jmp
lcall
sti
loop
jg
imul
pop
out
lcall
add
lcall
adc
and
xchg
ja
and
adc
xor
mov
repnz
and
mov
sub
js
pop
aam
pop
jge
cmp
lds
xor
push
sar
dec
cmp
test
sbb
xor
lock
addb
xor
and
clc
cmp
dec
scas
dec
je
sbb
xchg
fisttps
scas
dec
cmp
andb
roll
add
ja
dec
in
adc
sbb
fiaddl
fimull
xchg
or
mov
mov
jns
test
push
lods
pop
sahf
out
incb
bswap
mov
out
cmp
pmulhuw
scas
or
dec
imul
sbb
push
pushf
sub
mov
fists
lock
inc
xor
rcl
push
push
cmp
lea
mov
or
into
call
out
sbb
hlt
lock
nop
xor
shr
cld
mov
pusha
pop
into
hlt
cmp
pusha
dec
cmp
dec
mov
decb
iret
jne
ret
adc
push
adc
jb
push
mov
and
adc
fadds
lock
and
or
mov
adc
data16
out
je
sbb
test
mov
inc
std
sbb
push
clc
int3
lea
pusha
adc
mov
jne
inc
int3
add
aaa
ljmp
shrl
xlat
je
dec
imul
out
mov
test
and
jne
lret
ret
pop
jmp
and
loopne
jnp
add
data16
roll
lock
js
jne
mov
fisubs
je
mov
mov
pop
aam
mov
pusha
into
xchg
cmpl
btr
sbb
aas
jae
push
shl
inc
test
cwtl
cli
push
sub
mov
sub
icebp
imul
cli
fcmovb
push
push
cmp
push
mov
sbb
cmp
add
filds
jo
or
adc
in
and
pop
lods
mov
jne
data16
or
cltd
adc
sub
dec
mov
fimuls
into
inc
mov
lods
dec
push
and
clc
into
pop
jp
xchg
cmpsb
imul
sub
fs
inc
mov
mov
js
or
pop
popa
or
and
jo
cwtl
or
cmp
or
imul
add
outsl
mov
cmpsl
jmp
mov
mov
push
adc
pop
pop
jno
shl
rcr
and
fistps
adc
fdivrl
jne
cmp
add
xchg
cmp
pop
inc
ja
sahf
lea
negl
inc
and
vmread
add
test
rorb
inc
outsl
sub
cmp
push
mov
add
inc
sub
jl
add
push
add
dec
and
pop
jo
sti
outsl
adc
cmp
jbe
or
mov
ljmp
fidivrs
mov
call
ret
fs
or
fcomps
xchg
mov
jl
popa
jne
dec
push
or
lods
or
ss
jne
aaa
adc
mov
jmp
adc
lock
mov
shl
mov
test
sbb
cld
imul
jo
daa
ret
cmc
jb
cmp
push
mov
mov
xor
outsb
push
dec
test
xor
xor
mov
lret
pushf
mov
add
mov
sarb
loopne
aad
sbbb
dec
dec
mov
and
add
shll
sub
stc
sti
and
test
jle
cmp
pushl
cwtl
sub
incb
lock
push
inc
pop
rorb
xor
add
jp
insl
xor
cmpl
mov
hlt
int3
mov
cmpw
es
test
add
cmpl
and
ss
or
ret
loopne
fldenv
push
jbe
adc
sub
outsl
push
sbb
xchg
lods
les
pusha
mov
fidivl
testb
jne
inc
fisubl
cli
adc
pushl
jl
loop
jno
mov
jle
ret
push
mov
cmp
add
inc
loope
mov
fisubrs
lret
jg
or
fsts
jl
dec
xchg
lods
mov
sbb
cmp
mov
jle
data16
inc
mov
out
mov
add
sti
xchg
jb
test
jle
adc
imul
insb
xchg
sbbl
adc
in
aad
add
hlt
push
jge
clc
lret
mov
loopne
add
leave
dec
push
lea
add
stc
adc
into
cli
pop
sar
js
dec
adcl
jne
pop
jbe
mov
xlat
test
or
stos
repz
and
sbb
and
and
aam
cmp
xchg
dec
push
push
mov
push
jne
inc
jmp
mov
sbb
lcall
inc
cld
dec
and
add
xor
pop
notb
xchg
insb
xchg
imul
sarb
mov
outsb
jne
xchg
je
xchg
push
cmp
repz
insl
push
mov
inc
aad
cmc
je
push
popa
je
mov
outsb
idiv
and
jmp
mov
jmp
test
jnp
test
negb
pop
rcrb
pop
inc
sub
shrb
loope
push
insl
rolb
scas
add
or
push
jmp
xor
out
mov
call
out
mov
jno
sbb
inc
add
cmpsl
cmp
xor
push
test
in
lret
dec
lock
xor
and
pop
push
pushf
popf
push
addb
jecxz
add
and
push
js
ret
cs
cmp
adc
ljmp
lock
mov
cmpb
sbbb
adc
push
mov
fstpt
rclb
lahf
fdivr
push
ss
bound
aad
iret
sub
fistpl
jno
ret
pusha
or
jbe
and
rclb
push
jmp
push
inc
dec
cmp
inc
inc
xor
fisttps
movb
push
push
mov
adc
xchg
int
inc
adc
mov
mov
push
xchg
lcall
cmp
sub
clc
or
ret
and
push
push
enter
xchg
push
push
pop
adc
ret
or
pop
mov
inc
jmp
shll
and
cmp
jle
jle
stos
pop
or
out
std
stos
int
leave
jl
roll
adc
push
lock
ret
xlat
or
adc
incl
jle
fiaddl
mov
add
xchg
and
or
inc
jb
lods
and
mov
sub
and
add
cmp
scas
cmp
push
add
jne
jmp
pop
add
mov
mov
lcall
mov
adc
sbb
ljmp
fsubrl
ret
sbb
or
jbe
mov
dec
arpl
je
mov
push
add
add
add
out
push
and
inc
enter
add
movl
xor
sbb
mov
test
jp
fistps
sbb
pop
push
push
pusha
ret
stc
lcall
loopne
loopne
xor
fwait
loopne
inc
test
loopne
cmp
mov
add
jmp
jbe
mov
xlat
shlb
out
enter
xlat
sbb
add
clc
insb
lds
sub
xchg
rol
or
or
push
iret
lret
sbb
cmp
js
xor
repnz
jno
dec
aam
push
arpl
push
pusha
lret
aam
push
je
cmp
cmpsb
je
insl
xor
mov
jbe
lret
adc
loope
dec
pop
insl
push
jne
mov
fcompl
sbb
xor
dec
imul
rcll
fadds
xor
add
xor
jmp
lea
push
dec
and
fdivrs
and
neg
sbb
and
test
jns
inc
mov
jmp
outsl
mov
sbb
fcomp
inc
rorb
or
mov
movb
and
lret
or
push
xor
test
pop
test
lock
xor
add
ljmp
loop
js
sub
loop
loopne
fs
mov
repnz
ja
jne
sbb
daa
dec
and
fcoms
mov
ret
fld
push
test
lods
aam
push
icebp
dec
je
aad
test
mov
pop
push
push
sub
and
lock
loopne
arpl
insl
push
push
sti
nop
xchg
jns
jae
insl
lock
mov
outsb
mov
mov
jbe
jno
xchg
test
pop
mov
cmp
mov
cmp
je
push
mov
push
aam
aad
mov
or
xor
ret
push
push
hlt
ss
jecxz
mov
cli
pop
int
or
out
jb
dec
loopne
int3
dec
fcomp
gs
loopne
pusha
add
jnp
sbb
inc
fdivr
sub
push
jb
fmul
fdivrs
imull
ret
or
push
test
cwtl
imul
mov
pop
push
sbb
jmp
mov
clc
add
ljmp
lret
and
fisubrl
shl
pop
nop
jl
mov
enter
push
jnp
inc
mov
or
push
sub
or
dec
pop
fidivl
ret
add
incl
or
push
nop
movsb
dec
dec
cmp
rorl
xchg
mov
aam
cli
cli
xor
xchg
subb
je
sub
lahf
jmp
mov
in
or
loop
lcall
or
imull
add
pushf
sbb
xor
jb
out
sbb
sbb
movb
clc
inc
xor
cs
add
daa
or
lds
sbb
mov
nop
imul
pusha
loop
cwtl
shlb
or
cwtl
stos
cmp
ljmp
mov
mov
sbb
push
enter
adc
movsb
xlat
jno
push
push
or
push
rclb
test
xchg
jbe
or
outsl
fcomi
enter
add
cmp
mov
or
ja
subb
les
lcall
mov
cli
mov
je
adc
fcoms
add
stos
push
inc
push
or
mov
jg
movsl
mov
jne
push
movsl
fcomps
jg
push
cmp
sub
inc
mov
out
mov
cld
mov
adc
add
xchg
shlb
lock
mov
jmp
mov
push
add
xchg
jbe
xchg
nop
add
dec
push
dec
add
pop
clc
cli
int3
jns
jmp
ret
lahf
dec
sbb
inc
pop
lods
push
icebp
cmp
mov
pop
push
popf
int3
lea
stos
in
jle
pusha
roll
dec
jg
add
pop
xchg
hlt
mov
push
push
push
test
nop
fsubl
mov
inc
sbb
xchg
in
mov
fildll
xlat
and
sub
pop
dec
mov
add
icebp
add
cmp
xor
push
fimuls
sub
pop
mov
cs
lods
and
pop
jne
pop
push
test
je
testb
push
and
loop
add
test
or
icebp
cmp
jae
push
pop
inc
loopne
cmp
sarb
sub
push
and
xchg
adc
inc
push
dec
call
mov
mov
loopne
rcrb
icebp
cmp
add
adc
test
push
xor
icebp
mov
dec
xchg
leave
or
add
cmp
movsl
movsb
aam
cmc
cmp
xor
sub
or
cmp
sbb
and
test
jp
std
adc
mov
jmp
lods
repnz
push
push
iret
or
sbb
inc
add
pop
shrb
sub
pop
dec
nop
pusha
fldt
xor
cmp
jmp
cmp
add
sub
out
fiaddl
fstpl
jne
adc
aad
push
pop
data16
rorb
mov
mov
call
inc
or
pop
insb
mov
adc
mov
or
or
push
mov
test
pop
shlb
or
xchg
and
mov
adc
and
push
mov
adc
mov
dec
out
dec
cld
jo
mov
enter
js
jne
sub
loope
push
and
into
or
add
xchg
loopne
pop
xor
jo
or
int3
bound
pop
js
cmpsl
jmp
cli
stc
or
xor
add
push
mov
movsb
adc
test
jl
adc
aaa
push
std
add
jbe
adc
jo
or
clc
or
js
mov
out
push
adc
and
inc
push
add
mov
inc
add
sub
dec
incl
pop
daa
incl
fimuls
jb
push
das
xchg
lcall
or
sbb
inc
sub
mov
jmp
lret
inc
ret
sub
and
jg
ljmp
mov
mov
push
inc
ficompl
adc
lcall
jecxz
fsubr
incb
mov
decl
aam
xchg
dec
inc
mov
jmp
scas
and
call
adc
cmc
leave
std
or
adc
mov
in
scas
call
mov
adc
outsb
out
das
mov
inc
sar
sahf
xchg
test
jg
push
inc
inc
jns
test
lea
fbstp
jns
jo
mov
scas
in
or
mov
xchg
or
es
in
add
mov
adc
push
inc
push
push
sbb
pop
xchg
mov
jmp
fiadds
or
or
add
jl
aam
push
inc
jne
cld
sbb
mov
insb
cmp
xor
lods
bound
and
add
aaa
add
pop
in
pushl
mov
imul
or
inc
jecxz
pushf
test
sbb
scas
or
pop
pushl
rolb
fwait
mov
sub
inc
ret
das
adc
in
std
inc
loop
lock
push
movb
and
xor
fldt
test
stos
loope
inc
mov
in
sbb
cmp
into
je
stos
in
pop
ja
fucompp
mov
cli
sub
adc
data16
push
mov
int
lea
mov
loope
push
sub
dec
jg
xor
jmp
addr16
pop
cmp
stc
call
push
cmp
jb
shll
and
mov
call
mov
add
call
cs
inc
sbb
dec
pop
cmpb
ret
inc
add
pushl
lret
leave
inc
sbb
test
shrb
dec
fstpt
call
jne
dec
cmpsl
sub
cmp
mov
loopne
xorl
sub
sub
add
lcall
outsb
lea
cmp
adc
push
repz
dec
ret
push
movsb
xor
test
dec
sub
das
jbe
jnp
gs
xor
pop
loop
pushl
push
cwtl
mov
sub
lock
loope
xor
adc
std
stos
add
icebp
in
jmp
inc
add
push
sub
pop
negl
dec
enter
lds
int3
lcall
xchg
sbb
arpl
leave
and
cld
xchg
sub
mov
js
fcmovnu
icebp
incl
push
out
or
enter
push
jl
enter
cmp
sar
fsubl
lods
call
inc
aaa
fildl
pop
jle
cmp
hlt
jg
shl
outsl
fisubl
clc
mov
sbb
test
pop
shll
pop
push
add
pop
sbb
incl
push
and
in
xor
add
lock
inc
mov
and
decl
inc
inc
mov
and
insb
inc
inc
call
xor
push
sbb
adc
pop
or
sub
adc
inc
out
loope
dec
dec
xchg
xchg
pop
js
and
xor
xchg
call
call
xchg
add
pushf
push
stos
lods
repnz
jns
sarl
in
decl
xor
dec
add
ret
adc
jmp
jnp
icebp
jl
and
and
adc
sbb
pushl
fidivrl
decl
cld
push
cmp
cmp
jle
enter
loop
jecxz
insl
adc
call
outsb
jns
aaa
outsb
shll
cs
je
movsl
mov
data16
jmp
test
orl
icebp
repz
pop
ljmp
movsb
mov
aad
pop
inc
int
or
out
clc
sbb
inc
std
mov
add
jmp
aas
roll
ds
fwait
push
jae
cmp
int3
or
lcall
call
pop
pushf
orl
lahf
cld
scas
ror
cmp
inc
jmp
movsl
mov
ret
cmp
push
jecxz
es
insb
pop
in
jb
pop
adc
inc
inc
nop
incl
cmp
xchg
or
adc
rorl
call
ja
pop
aam
dec
std
dec
add
xor
lea
fsubrl
in
cmc
mov
ja
lcall
mov
pop
mov
add
cmp
jge
ljmp
dec
push
sbb
ds
inc
cmp
cmp
enter
dec
rol
lock
push
mov
dec
test
xor
mov
jmp
fs
jg
dec
add
daa
ss
in
mov
pushl
mov
cs
inc
jo
or
test
pushl
inc
cmpsl
adc
pop
cmove
call
and
fmull
cmp
or
mov
inc
sub
call
lock
ljmp
repz
pop
push
jo
mov
lock
or
pop
cs
inc
mov
pop
incb
insb
xor
mov
je
or
or
jp
cwtl
jg
sub
ja
push
push
cmpsb
xorb
cmc
aad
cwtl
mov
jmp
or
loop
and
iret
pop
iret
cwtl
cld
clc
es
add
push
mov
jg
icebp
pop
stc
add
mov
movswl
jmp
sub
add
xor
into
mov
jbe
sub
add
inc
movsb
push
sar
shlb
mov
rclb
adc
scas
and
lcall
sbb
xchg
adc
loope
mov
mov
xchg
shrl
xchg
rcll
xchg
adcb
aam
jo
inc
or
aad
jg
fcompl
cmp
push
rorl
mov
mov
xor
ss
rclb
inc
outsb
push
dec
or
loope
lcall
mov
push
xor
xor
in
push
pop
scas
notb
js
idiv
sub
fldl
jge
mov
pop
mov
or
dec
inc
push
aaa
push
rolb
sbb
fwait
jmp
lock
push
xor
jecxz
enter
xchg
mov
mov
pop
jmp
xor
lcall
shl
ret
or
push
or
cltd
inc
add
xchg
ja
inc
sbb
xchg
and
jl
xchg
ljmp
inc
add
test
lea
mov
dec
mov
out
pusha
mov
or
sub
push
adc
or
mov
inc
jbe
pop
icebp
pushl
dec
imul
insl
jnp
aas
mov
jo
inc
cmp
je
call
lock
scas
sub
jmp
add
lcall
push
push
mov
xchg
dec
sti
decl
add
clc
loope
sub
mov
mov
pop
and
lcall
sbb
sbbb
mov
push
xor
test
fisubrl
mov
ss
pop
incl
adc
bound
incl
incl
add
clc
decl
inc
cld
mov
xchg
push
sbb
daa
sahf
sub
mov
clc
add
dec
pop
sub
cmp
movsb
and
or
decl
mov
adc
stos
lcall
mov
shlb
sbbl
decl
jbe
sti
lret
and
dec
arpl
mov
fcompp
sarb
incl
loopne
pop
jae
xchg
xchg
lret
es
or
push
lds
mov
aam
push
adc
jnp
jmp
mov
cmpsb
mov
loope
lods
int
xor
clc
or
int3
pop
jl
inc
cli
and
mov
test
push
fisubrs
cmp
cmp
or
fs
gs
ret
push
loopne
nop
xchg
dec
xchg
cmp
mov
jo
test
adc
pop
mov
fcmovnbe
frstor
adc
mov
cmp
sbb
call
xchg
popa
sub
push
mov
adcb
stos
or
pushl
sar
xchg
cmp
sub
inc
xor
insb
mov
aaa
cld
mov
pop
push
jl
mov
sahf
mov
movsb
je
cmp
dec
cmp
add
jmp
cmp
jecxz
jb
pushl
push
sbb
idiv
jge
daa
insb
or
jl
movsb
xor
jbe
jmp
cld
fnsave
jge
add
cli
rcrl
fstpt
dec
push
ja
outsl
lock
sbb
jg
enter
inc
decl
fldt
cmp
out
shl
addb
push
inc
mov
loopne
sti
jp
notb
adc
idivl
jmp
adc
sti
mov
and
loopne
mov
clc
lcall
inc
xor
or
call
adc
mov
cmp
cmp
push
mov
jl
pop
jno
mov
adc
pop
sub
mov
and
fsubrs
lret
sbb
sub
add
xor
sbb
push
adc
mov
arpl
xor
xor
mov
je
das
psubusb
xchg
sarb
or
mov
pop
mov
decl
mov
in
xchg
cmp
jo
push
scas
adcl
rolb
outsb
pushl
icebp
movsl
popf
push
mov
in
outsb
push
ss
idivl
cmp
js
incl
push
or
mov
aaa
mov
add
sub
cmc
shrb
xchg
push
cmp
dec
lock
decb
out
ja
and
call
mov
jmp
jmp
adc
or
sbb
insl
add
mov
lds
and
aas
jns
movsl
inc
pushl
std
pop
or
xor
sub
fstl
mov
inc
outsb
push
ljmp
cmp
pop
pop
dec
and
lahf
or
sbb
loop
std
das
decl
decl
pop
jbe
movsb
idivb
push
icebp
bound
sbb
notl
sbb
mov
inc
jg
add
int3
sub
shll
in
test
outsb
push
mov
pop
hlt
push
mov
das
fildll
pop
lods
shll
and
adcb
and
mov
pop
pop
insb
in
incl
aam
inc
jne
loope,pt
push
mov
or
sub
xchg
fdivl
jmp
inc
in
xorl
sub
leave
push
mov
clc
notl
outsl
aaa
mov
xchg
cmp
adc
cld
push
xchg
je
or
stos
lcall
sbb
mov
repnz
mov
je
nop
shrb
lods
ret
mov
aas
sub
mov
add
mov
aaa
inc
idiv
or
aas
inc
sbb
or
call
mov
lods
push
ret
scas
cmp
cs
push
std
lcall
mov
stos
pusha
push
lcall
rcl
fxch
insb
cli
jl
add
insl
sarl
push
cmpb
cmpsl
test
mov
loopne
cmp
ljmp
or
mov
nop
outsl
jb
adc
inc
test
pusha
ss
xchg
lock
andl
jg
pop
loopne
stos
jle
roll
sbbl
push
fdivr
call
lea
aaa
add
sub
ret
mov
enter
inc
call
cltd
xor
mov
mov
scas
mov
bswap
xchg
hlt
mov
or
inc
je
pop
mov
adc
lcall
ss
outsl
clc
pop
add
cmp
cwtl
cwtl
insl
push
data16
in
cmp
mov
sbb
jne
add
popa
clc
push
push
mov
dec
pop
or
outsb
adc
push
mov
aaa
push
adc
decl
cld
in
push
pop
or
jno
add
and
jg
sahf
out
lret
dec
cld
mov
add
or
je
shl
repnz
aas
and
xor
fcomip
fildll
pcmpeqb
es
cmp
fs
sbb
push
pop
incl
std
lahf
xor
clc
aaa
inc
test
lcall
pop
pop
mov
out
dec
addb
lock
inc
mov
subb
call
push
sbb
ss
jg
loop
in
cld
cmp
push
pop
mov
xor
lret
int
loop
adc
clc
jmp
stos
sub
lahf
xchg
fildl
sbb
adc
ljmp
je
aad
mov
lea
or
or
jbe
ret
adcl
mov
clc
jnp
ss
pushl
inc
and
incl
xchg
jns
or
inc
dec
inc
insb
xchg
cmpsl
push
iret
or
loop
lcall
or
mov
cltd
sahf
inc
loope
mov
push
adc
xchg
and
addr16
mov
mov
hlt
pop
hlt
lcall
lock
mov
xor
incl
push
jmp
mov
or
or
and
mov
bound
idiv
dec
jmp
jg
xor
loop
jo
fwait
mov
add
cmpsb
ljmp
out
pusha
and
mov
nop
lret
mov
stos
mov
pop
and
stos
add
call
jo
push
push
xor
in
mov
sbb
insl
popf
lea
jg
inc
std
inc
push
incl
mov
mov
xchg
loopne
arpl
xchg
pop
sub
clc
sbb
dec
jg
aad
cltd
sbbl
stos
call
add
pop
mov
loop
in
xchg
add
test
sarb
xchg
and
ljmp
movsb
jo
lahf
imul
jbe
or
je
subl
lock
jg
cmpsb
loop
xchg
push
push
inc
cmpsl
inc
add
in
xor
add
mov
add
call
test
pop
push
mov
por
mov
inc
adc
pop
xchg
xor
dec
outsb
jg
inc
add
inc
or
mov
lods
xor
adc
repnz
repnz
test
push
jne
inc
push
adc
dec
loopne
jnp
mov
out
adc
mov
jg
mov
xor
jp
mov
stos
hlt
sahf
cmp
jo
jg
icebp
xor
mov
loopne
repz
or
fnstenv
shl
push
cmp
aad
out
pushl
clc
jl
insb
jne
xor
insl
push
data16
add
cli
sbb
mov
ret
inc
mov
ljmp
dec
adc
enter
and
push
imul
or
fcomip
or
dec
jno
sar
mov
add
xor
out
fnstcw
mov
adc
xlat
call
mov
cli
add
ds
push
fs
test
push
cld
or
ja
imul
xchg
not
icebp
bound
mov
ljmp
mov
and
dec
jl
ret
testb
sbb
inc
mov
addr16
call
lods
test
pop
pop
mov
idivb
les
into
cmc
mov
ja
jne
outsl
sar
and
clc
lcall
into
adc
mov
dec
add
adc
in
xor
mov
f2xm1
add
push
add
and
int
cmc
outsb
cltd
shrb
addl
fsub
aam
je
push
mov
fdivs
inc
add
nop
psubsb
ret
push
cmp
scas
jno
dec
lea
inc
call
out
jb
or
faddl
add
aam
lcall
push
inc
fdivl
les
add
shlb
stos
jle
inc
jmp
call
adc
repnz
ljmp
xor
cmp
adc
dec
cltd
jae
and
xlat
sarb
loopne
jmp
ret
popa
rolb
je
movsb
add
rcll
mov
sbb
cmpsb
cmp
fcomip
jg
adcb
pop
push
int3
test
jl
ret
ljmp
ljmp
xor
data16
or
gs
jmp
ret
lret
jno
jns
insl
dec
outsl
add
dec
shll
sub
ss
jbe
stos
cmc
in
xchg
xchg
jne
ret
sub
loopne
add
cmp
sbb
pop
cmp
cmpsl
insl
mov
fiadds
pop
pop
xlat
add
and
push
ss
mov
ja
adc
push
out
inc
jp
stos
sbb
mov
inc
cld
outsb
aad
mov
inc
jp
inc
jle
imul
lret
sbb
rorl
add
adc
orb
rorb
pop
in
ret
and
cmpsb
jmp
call
add
in
adc
out
clc
sahf
sbb
or
xor
decb
andb
push
shlb
ljmp
in
orb
inc
cmp
test
mov
js
sub
and
jmp
loop
in
jge
out
test
adc
push
call
or
cmp
pop
decl
repnz
pop
mov
or
xor
push
xor
ret
jmp
sar
jecxz
scas
cld
je
imul
les
push
pop
ret
lods
call
cld
sub
incl
jb
push
imul
mov
pop
adc
sarb
incl
in
mov
jae
push
in
inc
add
adc
adc
sbb
mov
lock
cmp
pop
push
test
outsb
sbb
clc
jmp
mov
insb
bound
add
int3
sahf
push
adc
in
xchg
dec
jge
cld
ds
sub
jl
add
mov
sub
int
ljmp
in
add
pop
fdivrs
dec
xchg
aas
pop
xchg
cmpsl
jno
mov
mov
push
addps
mov
jmp
pushf
add
imul
hlt
fwait
pop
mov
sarb
add
mov
push
std
call
outsb
testl
push
daa
push
rolb
and
mov
call
std
call
jl
loopne
xchg
sti
js
mov
ret
pushl
pop
dec
pushl
pmulhuw
into
repz
lds
in
ficoms
pop
icebp
pushl
das
mov
dec
or
xlat
jge
jg
dec
aaa
jmp
or
pop
mov
test
jne
incl
cld
push
es
and
mov
push
in
lcall
call
cmp
xlat
inc
push
divl
xchg
cmc
xchg
inc
insb
mov
push
adc
xchg
lret
mov
adc
repnz
xchg
jb
stos
add
ret
cmp
mul
push
lods
into
mov
sbb
sar
ficoml
jg
adc
fdiv
ss
call
ret
push
fbld
dec
std
add
add
in
pop
decl
test
or
jmp
rcrb
mov
jb
sub
notb
js
sbb
jae
add
dec
xor
jg
and
data16
shlb
push
add
call
fcoms
test
aas
incb
dec
adcl
lret
push
and
movsl
mov
or
or
decl
or
pop
imull
out
add
jb
pop
rcr
jne
test
aam
pop
cmc
incl
cmp
push
jmp
inc
xlat
icebp
xlat
loopne
adc
push
adc
pop
and
fistps
sub
cmp
xor
fisttpll
or
call
add
test
in
cmp
xlat
mov
xor
sbb
insb
cmp
push
mov
xchg
je
add
mov
mov
rcrl
mov
lcall
insl
in
push
test
ljmp
jne
sub
pop
inc
sub
incl
in
dec
mov
pop
jl
fsubrs
pushl
adc
push
imul
fwait
cmpsb
add
pop
in
std
mov
pop
sub
decl
aam
jmp
call
or
mov
scas
dec
inc
enter
add
dec
loopne
shl
add
adc
pop
push
cmc
push
inc
xchg
enter
fcomip
lcall
cmp
cmpsb
dec
mov
lods
sar
xchg
xor
sbb
call
test
fisttpl
mov
ss
adc
sub
pop
or
imul
shrb
push
sbb
add
lcall
jmp
pop
cmc
jo
sbb
mov
imul
incb
scas
loopne
mov
ror
xor
lcall
ret
mov
inc
add
sbb
or
push
inc
ret
add
inc
push
movsb
cmp
pop
jg
outsl
enter
cld
call
fwait
push
out
sti
aam
lds
outsb
xor
push
scas
lahf
jecxz
decl
icebp
shll
push
and
repnz
pusha
push
or
movsb
shl
sbb
dec
gs
subb
arpl
std
ljmp
jge
xchg
mov
addr16
jle
out
js
inc
loop
xchg
add
adc
push
inc
cmp
bndldx
adc
ljmp
test
or
add
loopne
or
xor
cmc
test
fcomip
in
adc
es
and
outsb
or
ret
fiaddl
call
mov
lcall
mov
jo
dec
cmp
dec
and
inc
or
adc
test
pushl
dec
stos
add
mov
mov
dec
call
push
pop
xlat
outsb
jae
gs
ljmp
pop
ficomps
mov
outsb
dec
aaa
xor
into
mov
inc
seto
jmp
xchg
jle
or
add
mov
cmp
lcall
out
clc
mov
fsubs
out
mov
push
sahf
incl
fwait
push
pop
cmp
dec
ss
add
push
mov
or
out
mov
mov
lock
xorb
out
clc
adc
popa
mov
mov
jbe
aam
jo
loop
or
in
es
call
cld
xor
outsl
sarb
iret
cmp
xor
clc
cmpsb
ds
sub
pop
xorb
inc
or
fdivs
add
xchg
adc
mov
call
mov
cmp
cld
adc
in
xchg
rorb
push
add
jnp
mov
decl
outsb
aaa
or
dec
add
lock
dec
clc
jmp
pop
mov
mov
call
push
adc
dec
fldenv
mov
pop
nop
les
popa
test
sbb
imul
adc
adc
jne
jne
mov
mov
mov
cmp
cmp
cmp
fisttps
mov
pop
incl
push
push
mov
adc
jge
mov
pop
ds
ret
pop
insb
mov
and
imul
add
jbe
and
push
mov
adc
out
mov
push
lcall
lods
inc
dec
je
loopne
pop
in
mov
outsb
lea
cmpsb
mov
call
lcall
fnstenv
jns
loopne
sarb
xor
outsl
jmp
dec
adc
inc
pop
loopne
decl
popf
out
lods
or
mov
mov
cld
or
dec
cs
and
or
mov
and
and
lcall
cli
mov
gs
mov
and
enter
cld
ljmp
or
cmp
std
jg
adc
hlt
incl
fdivrs
cmp
pop
cltd
incb
lods
push
adc
jne
xchg
xchg
loop
into
out
or
arpl
incl
pop
jp
clc
mov
test
pop
test
test
or
call
lock
dec
insb
sti
mov
adc
cli
sahf
push
xlat
jb
add
fadd
in
cmp
xor
ljmp
test
sub
and
scas
je
xorb
jp
shlb
std
incl
call
icebp
int
xchg
arpl
fldenv
inc
sub
decl
jle
cmp
sbb
xchg
pop
test
inc
movq
fcmovbe
pop
cmp
orb
mov
pop
jo
dec
xor
jp
int3
sub
lods
bswap
lahf
add
incl
jle
scas
pop
lahf
insl
dec
xor
in
xor
jb
push
jae
out
fwait
inc
push
das
incl
add
stc
cmp
pop
lds
dec
or
xlat
push
push
lds
add
jmp
or
xchg
arpl
cmp
pushl
outsl
adc
push
lods
cwtl
lcall
mov
push
outsb
add
jp
adc
push
push
std
das
call
pop
xchg
adc
dec
loope
mov
incl
insl
xor
cwtl
testl
ret
mov
mov
ss
stc
das
fwait
lock
or
sbb
jo
pusha
mov
imul
push
sbb
rcll
jmp
and
test
dec
sub
push
rcrb
push
mov
jl
xchg
cmc
xor
sub
scas
mov
xchg
sub
sbb
adcb
shlb
add
test
jecxz
pushf
fs
insl
xor
sub
in
sar
incl
push
int
push
rolb
sbb
pop
inc
jbe
mov
mov
gs
ja
outsb
call
fs
js
or
or
mov
stos
incl
inc
mov
aad
xor
test
mov
xchg
out
pushf
mov
or
ljmp
adc
js
jmp
mov
push
shll
mov
lcall
pop
or
stos
and
movsl
dec
ud0
dec
pusha
mov
xor
pushl
shlb
sub
push
pop
addl
or
mov
mov
add
or
shll
sbb
lea
aam
sbb
sub
rol
ljmp
dec
pop
div
out
into
xchg
decl
test
mov
jge
add
adc
push
imul
add
call
movsb
arpl
out
mov
subl
aam
mov
and
cli
inc
decl
fmull
pop
mov
mov
cld
mov
xchg
sbb
popf
xchg
loopne
push
ss
dec
push
inc
mov
jmp
outsl
add
xor
fmull
pushl
loop
ret
or
pop
dec
mov
mov
jns
mov
adcb
push
cmp
pop
xchg
adcl
xor
jb
sbb
rcll
and
adc
ljmp
test
or
push
xor
xchg
shlb
lcall
mov
xor
push
sbb
and
xchg
jbe
adc
jmp
sub
add
das
clc
decl
push
jae
cmp
sub
xchg
test
xor
pop
jle
pop
xor
jge
nop
or
and
test
enter
push
mov
add
push
pop
xchg
xchg
fwait
adc
faddl
mov
push
mov
or
jmp
mov
pop
insl
sbb
or
cmp
loop
pop
aam
and
decl
scas
cmp
shll
adc
icebp
ljmp
cld
addb
outsb
mov
lcall
xor
outsb
pop
fs
sar
bound
in
fsubrs
fs
cmp
jmp
incl
cld
dec
mov
outsb
rcrb
pusha
mull
add
aad
push
lds
sbb
out
sbb
enter
adc
xor
push
lock
jmp
xchg
in
cli
pushl
mov
fmul
add
icebp
pop
mov
ds
xlat
lods
dec
repnz
pop
adcb
stos
outsl
pop
pop
fs
orb
cmp
lret
jmp
sti
or
movhlps
sbb
push
inc
push
mov
dec
pop
shlb
test
or
mull
mov
or
mov
test
mov
gs
mov
test
add
add
add
xchg
pushl
mov
inc
sbb
or
xorb
push
fndisi(8087
jp
in
je
incl
pop
xor
cmpsb
sti
and
mov
jge
hlt
pop
xchg
cmp
insl
jp
add
xchg
inc
ljmp
push
std
lcall
mov
test
mov
out
inc
jbe
and
jp
stc
xchg
rcrl
aad
mov
xchg
cmp
decl
lds
lcall
add
gs
frstor
jmp
mov
ss
push
push
addr16
mov
push
cmp
imul
call
or
cmp
aaa
or
outsl
push
fsubrs
std
lcall
es
call
or
push
cs
cld
jbe
in
and
xchg
mov
mov
pusha
lock
incl
mov
push
mov
jle
add
out
scas
pop
cmp
incl
jmp
pop
cmp
mov
mov
mul
loopne
mov
mov
incl
push
jne
bt
jns
lods
lret
mov
push
imul
xor
add
mov
addb
ljmp
nop
loop
pop
pop
push
xchg
or
dec
repnz
hlt
out
ret
mov
xchg
ljmp
sar
pop
fsubl
sub
into
adc
cli
daa
add
dec
cld
call
mov
ljmp
xor
adc
mov
addb
and
mov
cli
push
hlt
js
add
call
repnz
dec
jae
cmp
pop
jecxz
push
les
cmpsb
in
xlat
cmp
cmp
mov
adc
mov
jg
test
test
or
or
cmp
mov
xor
js
stos
data16
cld
add
xor
out
mov
add
mov
add
ljmp
sar
out
in
xchg
push
push
xor
lcall
inc
lret
or
rcrl
mov
adc
sahf
add
mov
leave
pop
xor
test
jo
cld
loope
jle
fcomi
adc
add
lcall
add
out
out
das
dec
mov
jmp
leave
pop
add
dec
cwtl
ljmp
mov
inc
cwtl
dec
jns
std
xor
jnp
mov
cmpsb
xchg
cmp
imul
cs
fstl
cmp
dec
mov
dec
xchg
push
mov
jg
pop
into
add
adcl
mov
jl
imul
add
fsubrp
adc
sar
fcomip
or
xchg
cmpsb
push
jmp
pop
jb,pn
call
inc
rcll
or
lcall
add
add
mov
out
sbb
add
call
jo
lcall
lret
push
clc
sub
jecxz
mov
push
sbb
pop
cmp
or
dec
les
add
cmp
cmp
sub
push
test
inc
add
aas
jg
jg
push
loop
in
push
or
icebp
jl
jecxz
repz
mov
adc
sub
adc
cli
hlt
cmp
ljmp
lcall
orb
es
hlt
pop
sarb
bound
jmp
call
cmpsl
fwait
inc
xor
std
push
adc
xor
shlb
and
repnz
inc
mov
jecxz
lcall
cli
fbstp
cmpsb
sahf
xlat
hlt
arpl
int3
popf
fwait
sahf
test
in
mov
ror
jg
or
push
cmp
xor
rcrb
add
inc
jmp
cmpb
jp
push
dec
call
pop
pop
icebp
outsl
scas
mov
cli
and
add
jmp
fs
push
cmp
mov
add
add
mov
ljmp
ret
cld
call
lock
adc
jmp
xor
push
jno
sarl
inc
xchg
movsb
call
adc
test
sti
aaa
pop
rcrb
fsubrp
push
test
lcall
or
icebp
and
dec
xchg
sbb
mov
dec
decb
cmp
decl
inc
icebp
xchg
lret
dec
mov
lods
jmp
repnz
test
jecxz
add
jb
pushl
inc
push
inc
push
xor
dec
lock
mov
fwait
dec
loopne
adc
scas
daa
pop
lcall
jmp
in
call
out
shr
out
sub
incl
adc
clc
jecxz
or
and
popf
mov
decl
hlt
dec
mov
xor
push
nop
repz
mov
rolb
dec
cmpb
out
jp
mov
ffree
inc
mov
inc
xor
and
xchg
inc
adc
push
das
iret
xchg
clc
incl
lock
add
xchg
int3
insb
jecxz
jb
push
mov
dec
jg
mov
push
jmp
add
or
call
adc
fimull
icebp
ljmp
pop
scas
adcb
inc
mov
repz
lahf
gs
inc
leave
sarl
lcall
incb
ljmp
add
je
add
mov
add
adc
ljmp
or
or
clc
pusha
xchg
outsb
stc
cmc
push
sbb
data16
rorl
sti
icebp
mov
cmp
scas
push
or
sbb
lcall
adc
inc
div
cmp
popf
les
mov
push
pop
pop
sbb
mov
push
std
push
mov
sub
stos
int
je
and
add
push
lret
arpl
ljmp
adc
jo
fsubr
pop
mov
sahf
lea
decl
and
call
pushl
fbstp
push
movsb
lcall
in
sbb
adc
push
enter
cmp
mov
mov
or
mov
enter
dec
bound
jbe
mov
mov
or
call
popa
into
pop
pop
inc
or
add
adc
out
hlt
or
mov
push
faddl
ja
ficoms
mov
jg
push
inc
gs
mov
sub
shrb
jle
cmp
mov
add
inc
jle
aaa
std
fbstp
arpl
ljmpw
cmp
jae
mov
and
push
das
fs
add
adc
xorl
mov
call
ljmp
fstpt
shr
rclb
sbb
incl
sbb
lcall
cmp
adcb
push
call
pop
negb
push
outsl
and
or
dec
add
or
adc
push
sub
push
push
jne
filds
insb
out
pop
ljmp
xchg
les
jne
bswap
insb
ss
inc
pushf
incl
notb
addb
pop
cmp
pop
jl
push
jl
call
jmp
inc
push
incl
scas
test
ljmp
mov
loope
imul
lcall
test
jne
jg
jge
xchg
frstor
das
cmp
lahf
or
call
pushl
xchg
pop
sbb
push
mov
sti
sarb
fcomps
mov
clc
ljmp
push
rolb
fcompl
jl
pusha
jmp
push
sahf
add
mov
pop
mov
push
jne
dec
lahf
outsb
mov
mov
jg
and
rorb
cltd
jle
test
mov
aaa
cld
jmp
cli
in
and
dec
or
or
in
sbb
lret
inc
lcall
outsb
mov
fisttpl
lcall
shl
sub
fsubrl
dec
loope
mov
aam
add
cmp
icebp
or
aam
pop
xor
loopne
je
loopne
mov
test
ljmp
lcall
js
loopne
jbe
cmc
dec
adc
mov
rclb
clc
inc
call
or
loop
js
xchg
push
mov
jmp
mov
ljmp
cli
fsubs
std
cwtl
adc
jg
pop
sub
cwtl
jo
popa
pop
cmp
and
jg
sub
jle
loop
cmp
rorl
or
sub
pop
and
sbb
dec
inc
xchg
add
ret
inc
pushl
shll
jb
add
mov
push
push
cs
dec
je
add
js
adc
call
bound
je
pop
fs
mov
cld
add
xchg
or
jae
ljmp
and
push
imul
popa
xchg
push
xor
out
call
in
mov
xchg
mov
shll
adc
ljmp
jo
lods
adc
or
or
xor
mov
fldt
xor
fldl
sub
xchg
jb
jno
and
jne
shlb
xlat
sub
jg
pushl
outsb
fs
into
adcb
pop
push
outsb
add
testl
mov
faddp
test
fwait
push
xchg
sbb
mov
decl
add
push
cmp
push
stc
pop
adc
pop
rolb
jg
ja
sub
or
jg
adc
xor
pop
cld
jmp
xchg
ret
rclb
xor
orb
jnp
adc
adc
lret
and
or
or
push
bound
jmp
adc
div
adc
popa
incl
ja
inc
inc
add
mov
mov
xchg
clc
add
push
inc
stos
jmp
xchg
fcomip
incl
add
jg
fld1
shlb
aas
adc
or
inc
jecxz
mov
stos
out
xchg
nop
fcmovnbe
dec
push
push
xchg
pop
jb
lret
mov
and
or
push
cli
pusha
lcall
inc
pop
ret
xor
mov
ds
out
outsb
xor
decl
call
pop
add
and
dec
cmpb
xor
push
ficoml
jb
jl
lods
lahf
dec
ljmp
shlb
push
js
dec
adc
outsl
cmp
fcomps
jg
inc
jp
add
push
inc
mov
jbe
sub
out
cmc
adc
cld
out
sbb
les
xchg
push
mov
das
pop
pushf
mov
jo
push
dec
xchg
in
jnp
xchg
leave
pusha
xorb
mov
dec
mov
add
add
sbb
pop
rorl
pushl
lods
jae
jge
call
int
bndstx
jge
push
mov
push
lods
inc
and
loopne
sbbb
adc
push
jmp
xor
ljmp
sub
addb
adc
add
leave
push
pop
adc
mov
jo
sub
jmp
mov
mov
add
movsl
nop
clc
push
jl
idiv
fistl
popf
testb
xorl
test
sbb
pop
test
testb
push
mov
dec
or
repnz
pop
xor
xor
flds
jo
roll
ret
call
ss
lcall
test
lock
mov
xchg
pop
cmpb
push
popa
add
sarl
jae
push
test
xor
pop
sub
and
inc
insb
pushl
dec
xor
cmp
pop
out
push
push
fwait
xlat
push
js
dec
sub
adc
incl
stos
dec
sahf
insl
je
andl
pop
ss
add
inc
idivl
push
mov
add
jbe
loop
movsl
xor
mov
pushl
pop
mov
aad
ss
xor
or
or
data16
sbb
scas
andl
loope
push
popf
pop
xor
jae
pop
add
dec
xchg
sbb
pusha
cmpsl
fcoml
pushl
jg
push
std
call
ret
cmp
js
stos
repnz
popa
push
push
push
push
sarl
or
call
lcall
fistps
nop
pushl
cmp
inc
aaa
cld
decl
and
inc
sahf
sub
mov
stos
push
mov
cmpsl
push
data16
ljmp
jbe
mov
jmp
pushl
ljmp
daa
jbe
adc
xor
jmp
clc
incl
aad
mov
adc
lds
mov
lcall
push
xchg
and
add
xchg
mov
mov
cwtl
nop
pop
pop
rcrb
pusha
adc
adc
jo
pushf
movsb
jp
push
push
mov
xor
sbb
inc
pop
hlt
pop
shrl
inc
xor
sub
pop
dec
scas
cli
fbld
add
fstpl
fwait
pop
dec
push
or
add
cmp
adc
clc
hlt
in
push
cmp
pushl
lcall
call
stc
insl
jmp
shl
lcall
mov
jnp
xor
call
mov
pop
and
jbe
mov
out
mov
adc
mov
xchg
add
pushl
push
cmp
dec
roll
scas
je
sub
xor
jno
pop
mov
push
les
mov
jg
sub
call
orl
pushl
pop
in
add
xchg
push
or
or
adc
lret
js
push
loope
or
out
movsl
vaddsubps
jo
test
mov
dec
pop
dec
adc
mov
lock
xchg
idiv
loopne
incl
cld
ljmp
dec
jns
sub
push
push
fistpl
popa
test
inc
dec
fwait
icebp
cld
loopne
lcall
outsb
jnp
sub
push
adc
dec
sbb
sti
push
jmp
movsb
mov
rorb
fidivrs
mov
rcrb
ret
xlat
pop
dec
xchg
adc
cmpsb
pop
les
mov
fiaddl
icebp
loop
inc
mov
fdivl
or
push
insl
cwtl
push
ljmp
push
outsb
sahf
jae
rcll
adc
inc
add
rcr
or
arpl
pop
dec
adc
add
sbb
pushl
adc
je
pop
mov
push
add
in
push
stos
call
rorl
aaa
cs
std
out
mov
add
popf
andb
xchg
jmp
subb
call
push
jmp
xchg
sub
jbe
out
mov
mov
mov
ljmp
inc
outsl
clc
lcall
test
std
out
aaa
push
mov
pop
sub
mov
or
out
add
jmp
scas
in
adc
outsl
inc
mov
inc
cli
insl
cmp
or
inc
loopne
fisubrs
inc
incl
add
dec
mov
mov
mov
jo
jg
lds
mov
push
lods
xchg
jg
mov
sbb
or
lock
shlb
in
es
mov
lret
movb
jle
loopne
push
add
mov
pusha
xor
and
lds
cwtl
inc
jb
aaa
in
inc
add
mulps
dec
pop
and
int
inc
or
cmp
imul
lcall
pop
or
das
push
xor
mov
je,pn
sahf
sar
push
mov
pop
call
mov
or
mov
ret
test
pushl
push
push
sub
decl
push
push
gs
xor
cmp
aam
mov
cmp
incl
sub
pusha
mov
cmpsb
incl
pop
and
pop
loopne
mov
cmc
mov
inc
adc
adc
lcall
add
ljmp
test
icebp
sub
rorl
dec
inc
pop
ss
dec
ljmp
xchg
imul
push
shlb
add
pushl
xchg
mov
pop
sbb
call
jo
jmp
xchg
aaa
mov
nop
dec
push
ja
adcb
sbb
ljmp
and
cmp
inc
mov
inc
add
call
lcall
out
aam
add
movsb
mov
jno
jecxz
fsub
call
cmp
push
cwtl
mov
inc
pushl
lret
sbb
call
call
cmp
push
sub
push
in
sbb
aad
cs
or
call
xchg
je
cmpb
pop
fdivrs
dec
outsl
mov
cmp
decl
stos
lods
add
insb
je
push
adc
in
cmp
stos
dec
and
jae
cmp
mov
rcrb
std
sbb
sub
dec
mov
clc
add
scas
jg
inc
out
push
movsl
adc
add
cli
inc
ret
sbb
mov
aas
sub
pushl
in
xlat
sbb
add
inc
insl
jmp
and
xchg
mov
mov
pop
js
outsb
fcomps
mov
test
pop
pop
xor
dec
or
add
jnp
push
sub
jb
lods
push
push
inc
xor
pop
aaa
xor
imul
shlb
pushl
add
into
les
pop
clc
test
jp
push
fimuls
stos
clc
incl
push
insb
sbbl
adc
mulb
jb
dec
inc
xorb
jl
adc
pop
add
xlat
or
push
jg
mov
xchg
xor
jle
push
mov
cmp
xchg
add
adc
cli
hlt
movsb
test
mov
call
enter
push
lea
cmp
mov
xchg
and
dec
ffreep
call
test
lods
cmp
nop
loope
cmp
add
mov
rolb
lcall
and
das
inc
test
mov
lss
and
pop
cmpsb
sbb
imul
incl
and
inc
and
add
je
cli
test
call
sarl
cwtl
push
stos
xorb
mov
dec
and
imul
pushl
mov
std
bound
fucomi
pop
jg
cmp
pop
std
or
loopne
in
pop
sub
je
lcall
mov
xchg
mov
add
aaa
dec
sbb
in
inc
mov
cmp
xlat
cld
and
add
call
pandn
orb
push
cmp
xchg
push
and
nopl
sub
pop
hlt
dec
mov
clc
inc
add
mov
jg
xor
mov
rolb
fcomip
dec
cmp
xor
mov
inc
jle
int
mov
mov
ljmp
jp
sbb
sbb
pop
pop
mov
push
out
test
mov
incl
hlt
loope
cmc
mov
xchg
leave
inc
pop
lods
inc
dec
or
push
addb
decl
sub
fiaddl
sbb
test
push
inc
pop
xchg
xchg
mov
scas
cli
pusha
push
pop
aaa
notl
clc
bound
icebp
adc
cltd
jbe
rcl
scas
and
mov
arpl
call
leave
idiv
pop
sbb
fildll
inc
call
shll
push
ljmp
stc
adc
loop
aam
sbb
shrb
push
mov
push
roll
ljmp
fcompl
sub
jno
cli
insb
inc
add
push
test
mov
lcall
lock
insb
push
cmp
test
je
leave
imul
jns
in
push
in
addr16
int3
sub
cmp
xor
cwtl
pop
test
or
imul
jmp
out
or
dec
shrl
test
push
jne
sti
cmpsl
sbb
ret
clc
aam
add
enter
hlt
jmp
mov
add
pushl
in
nop
movsl
pop
fsts
pop
mov
and
test
add
cld
call
loopne
inc
inc
lods
push
icebp
out
adc
pop
inc
or
incl
mov
and
cld
xor
sbb
jne,pn
adc
jg
or
outsl
inc
add
or
lock
pushf
and
lahf
sbbl
cwtl
mov
lea
pop
mov
roll
cmp
jno
xor
adc
dec
xor
incl
adc
inc
inc
pop
adc
push
adc
push
nop
mov
inc
push
lock
out
mov
hlt
jmp
cmp
andb
arpl
lret
mov
add
aas
movsb
cs
shr
or
sub
or
andl
sar
lcall
mov
xchg
sub
and
mov
mov
jecxz
loop
push
out
push
push
and
add
ss
cmp
and
call
pop
add
dec
push
xor
ljmp
je
cmp
xchg
lret
mov
inc
jae
je
jae
in
addl
cwtl
incl
test
sti
push
jl
xor
push
cmp
rcrb
cmovle
adc
ljmp
test
mov
and
sub
add
clc
sbb
inc
and
arpl
rorl
xchg
roll
and
ja
cmp
add
or
into
ficoms
dec
les
testl
outsl
stos
push
xor
mov
popa
rorl
shlb
iret
jmp
lock
das
adc
hlt
fsub
adc
cmpsb
mov
xchg
rcl
mov
cmp
bound
cmp
popa
rorb
js
jg
call
test
sub
mov
inc
sbb
sub
js
and
sar
and
mov
xor
pop
insl
sub
fwait
in
jmp
mov
sub
pop
imul
cs
ds
push
pop
in
test
fcomip
jmp
ret
out
adc
aam
fwait
add
call
into
mov
std
incl
sub
sub
outsl
add
scas
xchg
mov
add
rclb
push
adc
data16
xchg
mov
aam
in
jg
xor
movsb
or
push
in
test
pop
and
sub
aaa
mov
add
mov
mov
sar
add
xor
scas
cld
test
movsb
jne
outsb
arpl
jmp
xchg
cmp
sbb
or
loopne
xchg
xor
pushl
inc
sbb
call
cld
call
cmpsl
cmp
dec
sahf
test
or
mov
std
dec
inc
and
int
or
clc
aaa
push
aam
jp
out
push
add
ss
xchg
xchg
add
cmpsb
and
std
aam
add
cmp
pushl
push
es
es
test
pop
aad
cld
call
das
pop
std
pushl
adc
fs
xchg
sub
call
adc
adc
mov
je
pushl
cs
and
mov
dec
inc
aam
jg
cmp
shlb
or
loope
les
call
daa
inc
fidivrs
or
in
or
mov
jg
lock
jo
inc
jne
call
ds
and
pop
xlat
std
das
jns
lds
inc
jmp
cmc
aas
icebp
bound
or
cmp
add
cwtl
mov
call
xchg
ret
lret
adc
gs
push
addb
inc
lcall
pop
orl
es
rcrl
loopne
xor
in
push
xchg
dec
adc
push
inc
test
decl
xchg
mov
dec
mov
fcmove
arpl
lock
adc
jne
xor
fcomip
jae
shll
and
out
xchg
jg
out
dec
aad
aam
jg
test
push
mov
push
add
pop
outsl
scas
adc
clc
sub
aas
ret
jg
adc
sub
mov
push
mov
fdivr
sbbb
pushl
cmpsl
fwait
dec
fiaddl
faddp
sub
mov
clc
add
adc
rcrl
inc
jb
loop
int
mov
repnz
push
sarb
hlt
decl
je
rolb
mov
dec
cld
test
jp
lahf
jge
mov
out
pop
pop
loopne
fistps
outsb
lret
adc
mov
pusha
movq
test
pop
mov
jo
mov
cmpsb
fs
add
in
and
add
ja
jmp
icebp
mov
mov
sub
dec
mov
mov
and
jp
mov
clc
stos
call
fisubrl
inc
push
pop
lods
sub
std
fsubl
std
push
dec
aad
xlat
movhps
jb
mov
stos
outsb
fiaddl
add
jae
decl
adc
mov
xchg
or
xor
mov
fists
jg
test
test
les
pop
sub
lcall
sub
cmc
inc
or
lcall
sbb
mov
lock
sub
mov
movsl
jno
repnz
in
pusha
push
cmp
in
dec
aas
cli
mov
add
popa
add
mov
dec
jmp
outsl
sti
or
ljmp
push
mov
push
mov
adc
jo
xorb
or
jae
gs
adcl
lahf
mov
nop
cmp
jg
xchg
sbb
ss
ljmp
cmp
leave
sub
jns
call
shrl
incl
in
sbb
je
mov
lret
lock
fcoms
add
ds
std
pop
mov
pop
cmp
ja
inc
cs
xchg
addb
cmpb
jo
mov
and
mov
ja
fs
test
ss
lcall
sub
sar
scas
jle
add
dec
xchg
xchg
fwait
xor
or
sbb
sar
dec
or
les
and
fcomi
dec
mov
jb
fmull
mov
jne
in
repnz
mov
xchg
add
ret
icebp
adc
movsb
sub
iret
insb
std
imull
ljmp
ror
jl
add
add
mov
imul
gs
mov
decl
roll
sub
cmp
or
sarb
sbbb
push
cmp
mov
mov
xchg
pop
imul
and
rorb
fwait
mov
sbb
dec
dec
inc
add
mov
inc
add
nop
fisttpl
sahf
inc
popf
and
pusha
insb
movswl
inc
adc
push
fistpll
es
add
sysexit
push
mov
mov
insb
xorl
inc
dec
jg
mov
push
icebp
mov
push
dec
jmp
js
mov
mov
pop
in
scas
cli
incl
pop
xorb
incl
add
mov
jg
mov
call
pop
loopne
sbbl
mov
mov
ljmp
dec
jne
push
int3
mov
push
add
push
cmpsb
jg
aaa
std
add
aad
sahf
push
add
in
test
jbe
jns
dec
mov
test
inc
aaa
mov
cmp
xchg
inc
les
sbb
add
imul
ds
pop
mov
mov
add
push
cli
push
mov
insb
inc
jne
incl
mov
fcmovnbe
jl
add
movsb
inc
adc
mov
call
cld
pushl
repnz
mov
test
incl
add
fidivrs
add
incb
adc
mov
mov
mov
xor
les
and
aas
cld
cmc
add
mov
and
jle
lcall
lock
jl
dec
cli
aas
cmp
add
loopne
into
shrl
fwait
ret
das
jo
jmp
sbb
ljmp
incl
rolb
lods
adc
cmp
jb
sbb
cwtl
sbb
mov
sub
fcomip
xlat
call
sbb
test
xchg
into
jmp
loop
mov
push
pop
sub
pop
loop
movsb
sbb
xor
shlb
fcompl
decl
inc
dec
outsb
lcall
add
mov
pop
out
cld
cmpsb
outsl
xchg
mov
call
cs
lret
clc
jmp
sarb
arpl
test
xor
fcomip
or
xor
sub
or
and
fwait
mov
or
dec
jmp
cmp
or
ljmp
outsl
mov
repnz
jmp
in
sti
je
mov
jmp
inc
repnz
inc
or
dec
jge
test
decl
orb
out
cmp
jmp
pushl
pop
xchg
pop
pop
dec
mov
push
jmp
fists
test
jo
lret
das
les
jmp
sub
orb
nop
sbb
mov
add
incl
push
mov
bound
or
or
cmp
mov
lock
in
incl
fcompl
adc
lods
and
xor
std
jg
decl
jmp
or
imul
cwtl
cmc
inc
pushl
dec
das
aaa
and
mov
push
add
adc
xor
int
adc
dec
sbbb
arpl
cwtl
xor
mov
rcr
scas
ljmp
mov
aaa
mov
push
cmp
mov
lcall
aaa
lea
sub
adc
decl
xchg
adc
sub
stc
add
lahf
jecxz
out
clc
orl
loop
or
cmp
adc
addr16
lahf
loop
mov
mov
jg
sti
xchg
adc
inc
jg
rcll
imul
cmpsl
clc
movb
jmp
jmp
xorl
and
jl
incl
xor
fucomp
sbb
add
shll
lock
lahf
decl
adc
sar
fstpt
add
test
dec
mov
iret
jb
push
repnz
jecxz
add
jg
or
cmp
mov
in
lcall
in
mov
test
and
icebp
pop
adc
pop
or
sti
add
mov
jmp
test
pop
add
fwait
dec
cwtl
inc
in
dec
outsl
sub
leave
add
ljmp
clc
push
dec
push
popa
xchg
mov
shlb
movsl
incl
jb
and
or
icebp
decl
js
ds
insb
out
call
rep
outsl
mov
fnsave
filds
je
pusha
dec
aaa
mov
pop
ret
rcll
ret
out
xchg
ljmp
and
lock
pushl
jmp
fdivrs
dec
xor
mov
mov
cld
imul
frstor
test
loopne
xor
pop
xchg
add
loopne
incl
loopne
popa
leave
add
jg
lods
filds
dec
dec
loopne
clc
and
popa
test
out
jmp
jle
rorb
jae
insb
and
adcl
adc
jle
mov
push
in
and
lret
dec
fwait
and
mov
call
jnp
cmc
mov
adc
dec
or
cld
loope
add
and
sub
jg
lcall
fcomps
lods
pop
push
sub
or
lahf
mov
xor
pop
enter
pushl
push
pop
jne
imul
push
les
call
ljmp
cli
ret
jne
ret
inc
fistpl
aad
dec
push
ficoms
or
add
fiaddl
mov
ljmp
stos
xchg
ret
loopne
and
push
cltd
stos
das
std
incb
mulb
stos
push
xor
add
stos
rolb
push
mov
pusha
ja
ljmp
dec
or
pop
test
push
test
sbb
pusha
cmp
ljmp
mov
pusha
push
insb
sbb
rclb
ret
jbe
rcr
xor
test
lcall
jmp
add
or
mov
shlb
inc
stc
add
pop
mov
icebp
or
or
add
ret
clc
out
sub
idiv
mov
and
mov
xchg
adc
add
jns
pop
dec
sbb
cmp
jmp
repz
aaa
je
incb
ja
cmpb
xchg
jle
add
jecxz
push
cld
decl
mov
enter
xchg
jno
jo
loopne
fsubl
add
pop
mov
incl
pop
add
sbb
fs
mov
sbb
and
sub
sub
inc
add
ljmp
pop
cli
adc
dec
data16
outsb
cvttps2pi
stos
xor
decl
cli
pop
add
movsb
xchg
dec
add
xlat
in
mov
daa
sti
cmp
dec
iret
add
call
sub
jg
or
inc
jmp
aas
dec
popf
movsl
ret
clc
lcall
sub
push
mov
mov
jbe
sbb
push
pop
jecxz
arpl
fmuls
call
pop
add
add
push
pop
sbb
mov
incl
and
stos
fucomip
call
test
pushf
loop
test
adc
incl
or
out
and
idivl
cmp
or
inc
inc
pop
pop
dec
mov
pop
int
add
cmp
sub
inc
lcall
add
or
mov
sub
pop
cmc
mov
in
clc
push
push
push
pop
adc
pop
rcrb
das
xchg
push
lock
adc
in
call
cli
mov
inc
mov
inc
fs
cmp
ja
lret
jp
and
std
das
popf
in
aad
fmuls
cld
pushl
mov
pop
out
sbb
cmp
ret
pop
filds
sub
orb
push
add
push
outsl
and
add
lcall
repz
pop
clc
inc
mov
adc
mov
push
adc
push
out
add
mov
inc
sbb
jl
cmpl
aaa
mov
call
inc
or
jo
arpl
jp
jo
cld
sti
add
jg
dec
cwtl
fwait
xor
cmpsb
jnp
rclb
cmpsb
lret
jle
mov
call
inc
add
mov
cwtl
enter
ret
fcomi
xor
push
subl
lcall
cltd
mov
xor
ljmp
jle
jbe
or
adc
sti
insl
fwait
mov
out
push
arpl
push
pushl
pop
pop
mov
pop
sub
mov
xor
lcall
fdiv
push
inc
pushf
xchg
inc
and
xchg
add
push
shlb
or
or
and
call
mov
jnp
dec
out
das
call
ds
movsb
lcall
adc
ljmp
nop
jo
xchg
insb
dec
js
or
shl
jo
cmpsb
adc
mov
mov
inc
adcl
popa
pavgb
and
add
in
lcall
lret
cli
pushl
sbb
stos
mov
mov
pushl
je
lods
jp
adc
add
test
sub
push
dec
movsb
dec
push
mov
push
inc
mov
addb
add
popa
or
scas
cmp
sahf
clc
add
dec
mov
jmp
les
push
push
mov
cmpsb
jae
and
and
xchg
gs
ljmp
push
loope
jo
or
add
test
inc
pusha
mov
xor
adc
decl
inc
imulb
add
lods
add
mov
negb
fcomip
jle
and
pusha
dec
cmp
pop
filds
push
lock
int3
call
mov
call
and
or
ret
mov
loopne
aaa
std
jecxz
adc
cs
lcall
filds
imul
cmc
and
call
or
jne
cmp
pushl
mov
je
test
mov
insl
test
or
dec
mov
arpl
sub
add
jmp
jmp
jle
or
or
decl
xor
int
mov
sub
or
push
mov
mov
std
xorb
cmp
or
push
add
xchg
subl
je,pt
arpl
fildl
add
cwtl
jbe
xorl
or
or
push
es
enter
jmp
ret
sbb
jg
cmc
fwait
dec
imul
shr
adc
push
mov
cmpsl
xor
lahf
clc
clc
add
inc
and
xor
add
push
adc
inc
adc
mov
push
subb
or
add
push
ret
add
cld
pop
push
sub
cmp
cmp
jno
pop
comiss
sbbl
mov
push
scas
cli
decl
cs
adc
les
popa
fdivl
imul
mov
push
xadd
cld
mov
mov
pop
outsb
mov
xchg
cmp
mov
dec
mov
push
movsb
inc
xchg
push
mov
xor
mov
lock
xor
xor
pop
mov
add
call
stos
pop
cmp
test
iret
sbb
outsb
dec
lret
sub
repnz
add
les
inc
dec
xchg
add
push
ljmp
data16
mov
mov
add
loopne
mov
push
push
std
ja
dec
or
mov
sub
test
es
ljmp
pusha
or
fists
jne
jge
mov
shl
out
push
jge,pt
jg
pop
inc
je
sbb
cmp
xor
fisttpl
mov
add
push
sbb
orb
ret
mov
test
jl
fadds
sub
arpl
inc
mov
cld
sbbl
ja
add
sbb
ficomps
das
orb
cmp
xchg
add
ljmp
scas
pop
popf
xchg
mov
xor
add
sbb
push
mov
jg
jg
add
jge
fnsave
and
sbb
jmp
call
stos
add
xor
xor
mov
add
inc
add
sti
pop
mov
cmpb
lods
icebp
or
js
inc
je
arpl
jg
es
mov
push
pop
fisttpll
clc
xchg
dec
mov
sarb
push
cmp
clc
andb
lods
push
inc
imul
xor
es
xor
inc
lcall
push
idivl
ljmp
cmp
bound
add
fidivrl
jne
cmp
add
rol
call
pop
lock
xchg
hlt
push
ds
push
leave
mov
dec
incb
push
lret
sbb
movsb
dec
outsb
out
movsl
adc
jge
aas
dec
sub
inc
enter
jmp
sub
loope
jmp
adc
shll
das
add
out
adc
lcall
iret
jne
and
insb
xor
jmp
ds
fmuls
lods
sbb
data16
ljmp
cs
cltd
ja
sbb
adc
dec
imul
mov
dec
int
cmp
int3
daa
cmp
pushl
fmulp
repz
call
pop
fmuls
mov
mov
lea
jl
and
mov
pop
loope
inc
pop
out
testl
add
cmp
pushl
push
mov
aad
xchg
aad
xor
cmp
push
scas
or
or
push
jmp
imul
pop
cmpsl
xchg
in
leave
insb
cmp
or
mov
movsb
and
xor
sbb
sub
lcall
adc
leave
sar
mov
inc
test
xor
iret
mov
lcall
mov
lret
enter
or
push
lcall
add
ret
mov
push
lock
jne
sbb
push
icebp
add
sbb
dec
pushl
std
xor
addr16
mov
movsb
je
lcall
push
decl
out
daa
add
and
jg
push
xor
ljmp
cmp
jns
je
ljmp
leave
loope
and
mov
cmp
cmp
sub
negb
lret
imul
enter
or
lcall
cmp
iret
lea
leave
je
push
jmp
daa
insl
and
add
and
decl
push
mov
push
loopne
adc
xchg
and
std
mov
ret
lcall
sub
rolb
int
dec
push
and
jo
roll
ljmp
ja
jg
icebp
sbb
or
xor
push
call
dec
add
fistpll
das
add
push
push
xor
lea
test
lock
fildl
xor
popf
outsb
mov
add
lahf
gs
jge
clc
cmp
pushf
movl
pop
jp
gs
or
sub
mov
ljmp
test
imul
in
aaa
and
cmp
in
mov
js
push
mov
push
jmp
hlt
call
decl
aaa
mov
lock
lcall
jae
adc
or
sbb
fisubrl
inc
sub
repnz
test
mov
sub
jb
xor
daa
je
sub
lea
dec
xchg
push
pusha
ljmp
push
push
popf
stos
push
fwait
addb
add
lock
js
mov
xor
decl
ljmp
ljmp
xor
add
jo
movsb
adc
loopne
idiv
call
pop
hlt
outsb
or
call
testb
push
loope
sbb
popa
es
dec
shld
add
adc
mov
or
lcall
cli
into
and
test
jb
pop
in
dec
sarb
inc
adc
push
in
push
stc
push
ret
jmp
jmp
aaa
aas
add
std
dec
or
ror
inc
jp
je
pop
add
adc
stc
lock
mov
pushl
mov
ret
jo
dec
xor
adc
les
jmp
mov
out
jmp
call
test
clc
stos
add
fdivl
sbbb
mov
add
out
stc
dec
sub
cmpl
push
enter
mov
lock
fidivrl
mov
fidivs
push
adc
mov
ljmp
insb
inc
xor
and
ss
pusha
shrb
jecxz
sbb
dec
push
or
xchg
loopne
jg
cli
cwtl
test
add
sti
lods
adc
rcrb
jg
and
das
mov
pop
sbb
cmp
add
add
cs
incl
add
jno
dec
and
xor
lods
sbb
out
xchg
or
out
inc
cmc
lcall
mov
aam
push
aaa
push
fs
icebp
decb
mov
xlat
pushl
pop
loop
xor
decl
outsb
mov
or
dec
vpcmpgtd
fbld
ljmp
iretw
mov
pop
jb
push
xor
jl
in
incl
push
repnz
cmp
fstl
std
sar
decl
ret
push
test
push
mov
add
mov
leave
mov
call
inc
mov
mov
cmp
and
imul
mov
pop
hlt
push
jle
inc
sbb
cmp
dec
inc
add
xorb
insb
imul
dec
push
sbb
jmp
cmp
xor
icebp
adc
and
inc
movsb
fcomps
cwtl
or
out
scas
cmpsb
push
mov
jg
mov
jge
stos
adc
mov
push
xor
xor
orb
mov
push
sbb
loop
xor
jne
jecxz
push
in
jo
sbb
rcr
add
jmp
pop
inc
in
push
sti
mov
add
add
sbb
dec
or
dec
ret
dec
ret
rcrl
popa
movsb
push
and
test
mov
sbb
stos
lcall
icebp
inc
aas
inc
divb
ds
xlat
mov
out
daa
sbb
mov
dec
and
cmc
push
outsb
aam
gs
stc
arpl
xor
ret
pop
jne
decl
leave
jp
fidivrs
rcrb
push
xchg
ljmp
fstps
xor
lret
dec
mov
xchg
js
out
outsl
and
nop
add
jmp
jo
ja
adc
mov
mov
cmp
incl
mov
adc
fucomip
adc
hlt
push
stc
outsb
and
push
cmc
inc
call
mov
mov
adc
js
das
mov
push
xchg
push
popf
cmp
in
movlps
subb
push
std
aaa
decl
leave
test
decl
and
incl
in
test
xor
js
popa
iret
sti
mov
jl
loopne
adc
daa
add
jp
fs
loope
ds
and
aas
xorl
adc
imul
or
inc
inc
mov
sub
or
pop
insb
adc
mov
test
mov
lret
cli
jl
in
rclb
std
cli
outsb
mov
adc
add
cmp
dec
add
lcall
notb
movsb
adc
stc
or
inc
lds
jne
or
test
xor
inc
push
inc
xchg
or
lcall
push
lcall
cs
and
add
filds
xor
add
bound
pushl
sub
out
aas
and
int3
lods
jb
push
ds
inc
popa
aad
jg
syscall
and
cli
add
loope
cmp
fwait
and
mov
pusha
inc
out
lret
aam
in
pop
fcomip
dec
add
int3
mov
sbb
sub
lock
add
pushl
mov
mov
mov
push
popa
int3
jmp
aad
decl
or
iret
lea
std
pop
xchg
pop
and
int3
jle
cli
aam
inc
jg
dec
push
mov
jl
adc
lahf
int
xor
push
and
push
loopne
lcall
incl
in
inc
ss
adc
ret
dec
cmpsl
jge
sti
add
incl
movsb
daa
or
sbb
imul
or
imul
cld
test
cmp
movsl
mov
inc
adc
call
adc
cmp
xchg
popf
or
jbe
push
jl
mov
outsb
mov
lcall
repz
pop
es
rol
adc
call
pop
rcl
andl
push
aaa
decl
cld
or
cmpl
shrl
fs
inc
call
imul
ljmp
mov
out
mov
test
adc
icebp
xchg
and
loop
call
scas
add
int
je
insl
andb
cwtl
or
mov
call
repz
jmp
lret
pmulhuw
pop
xor
add
ror
xor
mov
mov
icebp
pop
cmp
xchg
leave
andl
in
jmp
fistl
jecxz
pop
jle
test
inc
mov
in
add
movsl
pop
pop
imul
add
pushl
lcall
ds
outsl
mov
insb
push
lret
and
fwait
orl
push
pop
add
call
jno
andl
daa
and
bound
jp
lcall
clc
adc
dec
inc
pushf
dec
inc
jmp
scas
mov
call
pushl
decb
repnz
adc
lea
lock
mov
test
jg
lock
jmp
xor
or
push
int3
aaa
pop
loop
into
je
mov
scas
out
cli
decl
or
and
cmp
or
loopne
fdivrs
jo
add
decl
mov
pusha
sar
push
ret
lods
mov
xchg
dec
dec
xchg
sub
add
rsqrtps
aaa
adc
mov
scas
int3
out
dec
adc
adc
sbb
cli
incl
f2xm1
dec
ret
or
bswap
pushf
inc
loope
lcall
adc
mov
outsb
mov
lds
sbb
fdivr
fisttps
ror
jno
add
push
or
xor
cmpsl
pop
in
imul
imul
push
or
scas
xchg
xchg
clc
and
xchg
pushl
xchg
adc
out
dec
jbe
decb
adc
pop
xchg
sbb
pop
cmc
or
cld
scas
shr
nop
cmpsl
push
add
mov
inc
hlt
cli
cwtl
and
je
xor
jae
or
insl
jo
cmp
incl
pushf
or
push
sub
or
xor
or
pop
sarb
ljmp
outsb
cmp
or
or
loopne
cld
inc
adc
ja
incl
roll
das
push
add
loope
mov
js
cld
std
inc
call
or
pop
and
push
loopne
mov
xchg
and
test
pushf
fbld
mov
decl
out
sbb
data16
lods
add
and
roll
pusha
adcb
in
mov
js
stc
lods
shll
in
ret
cmpl
ret
push
add
sbb
ljmp
or
sahf
insl
mov
cmpsl
jmp
and
add
pushl
and
push
aam
push
add
fisttps
mov
dec
push
outsb
pop
mov
decl
dec
out
adc
lds
push
pop
push
pop
or
mov
adc
dec
push
push
sbb
clc
jg
decl
das
testl
sahf
lcall
xor
sub
lcall
inc
push
ret
adc
lcall
xor
xchg
xchg
jns
add
xor
or
and
stos
repnz
xchg
sti
inc
les
fbstp
inc
out
jecxz
stos
xchg
pop
ret
mov
lods
das
mov
les
push
cwtl
mov
push
mov
push
fs
popf
push
inc
or
push
popa
xchg
xor
add
mov
pushf
mov
rcl
jae
test
call
andb
pop
dec
std
push
stos
or
or
data16
inc
je
clc
stos
decl
xor
je
xchg
int3
loop
inc
push
outsl
cli
decl
lds
movsl
mov
aas
mov
mov
mov
sbb
xchg
scas
adcb
jp
sub
jbe
mov
add
lcall
ficoms
push
push
shr
add
iret
decl
jg
outsl
xor
cs
jmp
sbb
shll
push
push
ljmp
or
adc
and
ds
dec
mov
add
je
jne
and
ret
in
pushl
sub
je
outsb
mov
gs
aaa
sbb
jge
mov
les
mov
dec
movl
and
push
push
insb
push
out
out
ljmp
dec
outsb
setae
fidivl
xor
add
push
stos
daa
popa
fisttpll
fcomip
jmp
push
mov
mov
sbb
scas
data16
cmp
or
scas
cli
ljmp
fbld
sub
imulb
test
fcoms
lahf
sbb
sub
decl
stos
jle
aam
gs
or
shll
mov
out
cli
and
xchg
inc
push
out
rorl
pushf
xor
fiaddl
sbb
jmp
out
push
inc
fnsave
adc
add
roll
sarl
or
scas
clc
sbb
push
negb
push
adc
xchg
fwait
inc
jge
jae
decl
aad
daa
popf
or
lea
loop
lods
aaa
repnz
or
jle
adc
clc
addr16
jg
cmp
das
pushf
es
cmp
lods
fcmovbe
frstor
inc
aad
push
cmp
push
js
call
add
lock
add
pop
adc
inc
cmpsb
out
call
mov
mov
xchg
mov
in
jnp
or
or
add
lock
imul
faddp
aas
mov
outsl
fbld
jl
rolb
movsb
push
incl
imul
ret
dec
pushl
test
movsb
popa
adc
pop
mov
dec
or
incl
ljmp
in
ljmp
cmp
inc
es
test
add
incl
cmp
lock
mov
add
lods
and
es
jmp
dec
daa
or
jmp
orl
cld
add
cmpl
inc
mov
mov
jp
fmull
xor
std
jmp
cli
dec
std
dec
push
js
fsubs
repz
cmp
and
test
pusha
mov
sub
jmp
dec
icebp
ja
clc
repnz
add
jmp
xchg
cmp
adc
call
outsl
test
pop
adc
lods
scas
ja
and
mov
clc
test
jo
incl
xor
add
fcoms
decb
or
into
jne
mov
push
fsts
add
inc
fwait
sub
cmp
in
cmp
cld
ret
ret
mov
and
ljmp
jl
test
arpl
out
inc
iret
mov
jge
mov
sbb
jne
add
sar
cmc
jg
cmpsl
ret
stc
fists
stos
mov
xchg
cwtl
sub
fcomip
decl
push
fcompl
push
xchg
fadds
ja
cmp
jecxz
pop
push
fnstenv
cmp
mov
clc
xchg
test
mov
push
out
in
ret
mov
push
movsb
mov
mov
add
mov
pop
or
int3
push
enter
push
in
lods
pop
cmp
ljmp
pop
idiv
jp
mov
ret
aam
sub
inc
xor
enter
mov
cmp
pusha
lcall
sbb
lret
mov
ljmp
shll
loop
sti
mov
cmpl
jne
and
pop
adc
mov
test
fadds
sub
je
in
pop
jmp
add
stos
xchg
add
mov
aad
fdivrl
scas
cmp
push
nop
test
lcall
adc
pop
mov
loopne
ret
pop
adc
cmp
cmp
sub
pushf
notb
jmp
jb
stc
flds
test
insl
fcoml
push
and
add
mov
mov
fdivrp
aaa
cld
decl
mov
shlb
add
mov
sti
dec
mov
test
mov
jo
push
xchg
xchg
lcall
mov
sti
adc
inc
movsb
xchg
dec
cmp
jne
push
lock
push
fcomip
mov
jp
jge
xchg
imul
push
jp
test
jbe
imul
xlat
xlat
addr16
incl
mov
fdivr
adc
mov
addr16
ror
inc
jecxz
mov
inc
es
dec
test
or
adc
inc
pop
out
shrb
jno
jno
cmp
ret
hlt
testl
in
fildl
mov
jg
shll
inc
mov
jecxz
test
lea
adc
pop
pushl
cmp
loopne
ljmp
out
mov
pop
cmp
ljmp
enter
push
rclb
mov
lcall
mov
call
and
push
adc
inc
daa
cmp
ss
mov
push
outsl
xchg
mov
call
loop
mov
scas
sbb
fldl
shll
in
ret
loop
push
ja
shrl
mov
dec
add
sbb
sbb
adc
xchg
xchg
pop
subl
lcall
adc
pop
pop
psadbw
jo
sarl
mov
push
add
in
sahf
and
add
orl
cld
scas
orl
cli
decl
xor
bound
push
adc
mov
jmp
mov
call
pop
cli
leave
pop
test
push
adc
int3
call
scas
rclb
cld
jg
aas
mov
mov
push
cmpsl
add
add
ljmp
cli
lcall
inc
cmp
sub
ret
pop
repnz
popa
insl
incl
jae
outsl
xor
lea
cmp
push
pop
xor
icebp
call
or
mov
test
cmp
dec
lock
add
push
call
push
jne
sahf
push
mov
pushl
push
jno
mov
fs
sub
bound
lea
push
popa
je
call
sbb
dec
incl
int
lret
push
addb
and
mov
add
cmpsb
or
mov
shll
stos
popf
jne
jo
xorb
movsb
mov
outsb
dec
lock
inc
jle
adc
ret
psrlq
fcoml
decl
imul
mov
add
mov
sub
dec
add
ss
pop
inc
loope
jmp
dec
adc
orb
imul
jg
fbstp
jo
test
mov
cmp
push
imul
icebp
cmp
daa
cmp
aam
cmp
adc
inc
incl
movsb
or
xchg
inc
mov
jg
data16
ljmp
clc
in
push
mov
aad
pop
ret
pop
push
adc
ljmp
inc
add
ljmp
decl
pop
incb
xorb
cld
insl
lock
orb
hlt
lods
add
lcall
add
add
lea
inc
lahf
and
cli
mov
aam
cltd
or
and
outsb
dec
subl
rdmsr
jno
sbb
lcall
mov
or
jmp
lds
jo
imul
sub
pop
and
outsb
sub
jmp
add
mov
fmuls
cld
test
xchg
push
int3
loope
xchg
dec
add
inc
out
rolb
adc
jb
sar
mov
ret
or
or
push
aad
pop
cwtl
push
pop
add
lcall
cwtl
fwait
pop
nop
sarb
mov
adc
mov
mov
or
fcomip
pushl
inc
icebp
push
push
or
xchg
movsb
and
mov
add
add
orl
push
lock
jle
adc
bound
sar
fcomip
push
test
and
fistl
fsubs
decl
mov
jecxz
dec
nop
jecxz
pop
mov
dec
push
test
mov
and
rcrl
decl
in
pop
sahf
add
sub
fmull
push
decl
push
cmp
cwtl
lcall
jl
push
mov
call
test
xchg
mov
addr16
sbb
mov
or
inc
adc
ficoms
cmp
add
push
clc
fbld
dec
add
dec
mov
ja
dec
push
lret
mov
icebp
xor
pop
icebp
pop
jae
lahf
sbb
ljmp
insb
pop
jb
test
neg
in
popf
int3
in
outsb
xchg
push
ret
or
add
incl
dec
stos
cli
adcb
mov
insb
rorl
dec
push
fidivl
jg
cli
mov
inc
cld
jmp
ljmp
test
ljmp
adc
mov
cmp
in
inc
ja
outsl
or
and
sbb
in
pop
cltd
pop
mov
test
ja
fcomip
lret
mov
inc
jb
lods
add
and
add
adc
or
pusha
push
cld
pushl
jbe
jb
push
mov
movsb
js
add
test
sbb
jg
loopne
jmp
jecxz
push
fildll
push
push
push
out
xor
addl
fiaddl
ljmp
imul
je
bound
test
loop
or
dec
cmc
jmp
movsl
lret
sub
loopne
add
mulb
jb
mov
sarl
jmp
xor
cli
jle
loopne
and
cmp
inc
add
divl
popa
data16
call
or
mov
call
aaa
add
sbb
dec
push
jbe
xchg
or
or
ficoms
incl
add
adc
rol
xor
enter
call
and
or
or
sub
xchg
pusha
ds
lea
das
xor
ljmp
pop
add
cs
jge
xor
loope
mov
sbb
imul
lcall
scas
ljmp
dec
sub
clc
stos
and
sub
adc
mov
mov
mov
aam
pop
testb
js
and
sahf
cli
mov
jmp
shll
rcl
or
inc
mov
xchg
cltd
pop
call
mov
repz
adcb
jle
cmp
mov
es
pop
push
dec
mov
test
mov
clc
pusha
jl
incl
fistps
mov
mov
loop
jmp
xchg
mov
push
aaa
fistl
decl
push
xor
add
mov
xorl
lret
mov
lea
sti
andb
ja
cmp
test
shld
inc
add
addr16
or
dec
mov
xchg
jb
add
or
sbb
dec
pusha
aam
incl
test
rcrl
sets
fst
dec
sbb
outsb
mov
jae
mov
int3
lock
cld
jmp
leave
mov
test
xor
int3
jo
pop
push
and
adc
or
jb
hlt
add
jmp
or
addl
inc
test
outsb
incl
loop
cmc
push
add
push
add
in
loop
or
fidivrl
mov
fcomip
adc
lock
shrb
push
hlt
dec
xor
xor
inc
call
sti
inc
push
push
pop
call
pop
xchg
inc
lret
push
lcall
mov
gs
dec
add
adc
adc
incl
xor
std
mov
or
cmp
frstor
dec
jp
int3
jae
mov
gs
pop
js
incl
xor
add
sbb
pushf
or
xchg
ja
jne
pushl
mov
dec
or
mov
stos
ret
pop
jmp
mov
pop
inc
cmp
outsb
or
lock
add
or
xor
ja
pushl
sti
outsb
jp
cmp
in
out
sahf
adc
hlt
push
pop
std
xor
fsubs
dec
dec
dec
mov
ljmp
call
push
mov
and
push
aas
shrl
in
sbb
xor
lcall
movl
fisubrs
decb
mov
mov
ja
rorl
cmpsb
adc
call
lahf
pop
hlt
lds
ljmp
call
xchg
aad
inc
cmp
aam
inc
ja
enter
aad
adc
call
cmp
adc
into
jns
or
mov
sub
ja
cmp
call
push
mov
cli
in
jg
mov
and
push
incl
xchg
sbb
aam
les
inc
shlb
sub
or
pop
ljmp
jnp
mov
mov
push
mov
enter
cmp
pushf
jbe
mov
dec
jge
test
decl
in
jbe
adc
decb
lock
cmpsl
je
cmc
ret
dec
pop
jb
insb
jb
data16
call
mov
adc
mov
mov
mov
mov
clc
fadds
jbe
in
cmp
gs
lcall
pop
hlt
mov
mov
xchg
push
test
dec
fdiv
adc
cmp
adc
decl
or
lahf
aaa
cwtl
push
je
add
adc
stos
out
push
mov
incl
fcom
cli
mov
clc
stos
push
pop
add
std
scas
add
fwait
mov
jg
dec
add
inc
dec
dec
sbb
jl
decl
imulb
push
ljmp
shlb
in
imul
add
outsb
mov
call
push
mov
mov
inc
lea
cwtl
mov
xchg
aaa
and
js
fs
add
jmp
insl
dec
out
mov
mov
or
pop
push
cld
or
call
mov
cmp
xor
mov
incl
push
mov
imull
adc
shlb
inc
jge
out
outsb
shll
fisubrs
or
scas
cmp
call
ds
rcrb
into
clc
sbb
add
in
ficomps
decl
add
rolb
shlb
jne
jne
fistpll
mov
in
fists
jge
clc
inc
pushf
inc
call
sbbb
mov
lret
add
sarl
ljmp
gs
mov
lock
es
sub
ss
pop
jbe
sbb
aam
pushl
mov
imul
mov
jmp
decl
xor
decl
push
cmp
lcall
dec
movsb
xor
mov
je
jmp
scas
or
data16
mov
inc
jmp
dec
cmp
jg
pop
in
shrl
ret
jmp
jg
jp
inc
or
dec
stos
inc
cwtl
call
pop
test
sbb
push
dec
pop
sarb
ret
adc
xor
mov
mov
lods
pop
mov
call
pusha
adc
sbb
push
lock
ret
sti
rcrb
dec
jp
call
call
cs
inc
or
iret
push
fimuls
pop
stos
clc
loopne
mov
fdivr
decl
jo
sbb
test
adc
xchg
in
jne
cwtl
add
rcll
pop
cmpsl
or
ljmp
xchg
push
add
jg
ja
int3
shlb
mov
leave
sub
test
push
push
incl
xchg
sbb
call
icebp
or
pusha
bound
pop
mov
int
int
inc
cmp
or
lcall
push
subw
sahf
ja
nop
test
shr
getsec
fprem
jmp
or
dec
into
add
test
mov
inc
dec
outsl
clc
add
mov
xchg
mov
xor
in
pushl
ljmp
push
imul
lock
in
push
adc
cwtl
xchg
jle
dec
and
ljmp
pusha
pop
sbb
in
out
adc
cltd
ss
pushf
pop
pop
add
outsl
addb
incl
dec
pusha
jecxz
inc
pop
jge
adc
add
jg
outsl
cli
aam
outsb
in
jl
stos
jp
mov
add
outsb
mov
inc
orl
sarb
mov
pop
push
xor
ret
push
add
incl
cld
or
cmp
pop
and
jo
shr
fidivs
std
ljmp
cwtl
mov
stos
pop
cmp
and
push
data16
ljmp
inc
xor
dec
jmp
jno
sub
pop
xchg
sub
cs
out
call
pushl
cltd
decb
call
out
sbb
cmpb
xchg
cmp
mov
ds
or
jg
jmp
adc
movsb
xor
outsb
ljmp
dec
and
test
ds
test
data16
pop
add
test
lods
mov
mov
jmp
pop
call
push
dec
mov
roll
outsb
in
lods
loop
test
or
sub
decl
xor
pop
test
and
mov
xor
pop
nop
adc
push
and
pop
mov
sbb
push
imul
sti
imul
xor
or
fbld
and
outsl
cli
push
lea
add
cld
neg
cld
test
dec
push
mov
mov
mov
cmp
sub
mov
pop
std
jle
mov
shrb
xchg
adc
dec
pop
xchg
sub
jge
out
call
and
faddl
je
shll
adc
cs
add
adc
or
icebp
jne
pop
lock
decl
roll
mov
insl
mov
lret
add
ds
sub
push
or
js
clc
jl
mov
stos
push
mov
add
add
ljmp
xor
mov
push
or
xlat
sub
ss
rorl
xor
test
xor
jmp
scas
data16
sbb
push
jg
add
lcall
push
fldl2t
clc
call
and
push
add
nop
pushl
jo
jg
inc
add
lds
rolb
iret
iret
inc
push
pushf
fisttpll
scas
test
and
in
pop
lret
fcomps
mov
ret
jg
cmp
mov
fs
test
rolb
add
das
shrb
xchg
cmp
test
outsb
or
test
pop
fwait
loopne
lcall
cmp
dec
cmp
adc
cld
ffreep
pop
adc
jo
lock
icebp
call
inc
sbb
fldt
int3
cld
and
xchg
or
rcll
mov
push
xor
adc
push
js
sbb
out
decl
cmp
sub
inc
push
push
sahf
sub
hlt
jno
inc
sar
cmp
mov
sbb
test
pushf
fidivrs
shlb
mov
pop
mulb
lret
aas
stos
test
out
mov
sub
ljmp
sub
call
lods
sub
arpl
je
jo
sbb
std
mov
idivb
inc
mov
decl
mov
dec
push
nop
std
mov
decl
sbb
sbb
jmp
call
push
add
imul
cmpsl
inc
add
dec
incl
pop
add
decl
push
aad
lock
incl
mov
mov
data16
js
or
pop
rcl
dec
aaa
rorb
push
mov
icebp
aam
int
fiaddl
sbb
mov
push
jbe
add
add
pusha
aam
addr16
popl
push
test
loopne
ret
cld
fstl
dec
and
mov
mov
sub
fs
lods
mov
pop
mov
call
sbb
jne
adc
pop
add
sbb
mov
pusha
fdivp
inc
adc
cmp
or
push
cmp
add
sbb
dec
xor
incl
popa
mov
fstl
add
into
mov
dec
lret
mov
dec
decb
pop
xor
jg
push
cli
daa
bnd
dec
sarb
inc
push
aaa
lahf
test
mov
lahf
fbstp
clc
call
arpl
pusha
loopne
pop
daa
inc
push
fstl
and
cmp
cld
cmp
sub
lds
dec
fsubp
pop
sub
cmp
mov
mov
incl
jae
test
sbb
sbb
ret
int3
out
push
outsb
add
dec
pop
add
sar
incl
push
add
mov
cmpsb
enter
popa
cli
test
mov
fidivrs
dec
les
ljmp
aaa
insb
outsl
pop
clc
in
xor
inc
inc
aam
rol
imul
lret
and
adc
sarl
dec
int3
lcall
cmp
push
mov
inc
or
nop
cvtps2pd
movsb
sub
add
jmp
pushf
or
push
cltd
lods
xor
xchg
cmpsl
pop
mov
clc
push
fbstp
aam
les
sub
lret
sbb
rolb
inc
push
call
insb
jo
faddl
shrb
inc
je
divb
inc
pushf
rcrl
icebp
jb
std
ud0
sar
and
insb
pushl
cld
mov
add
decl
incl
in
aaa
ljmp
incl
into
sub
and
jg
or
push
dec
add
adc
and
arpl
fmull
mov
aas
jl
pop
jg
call
outsl
andb
sub
int3
pop
mov
dec
adc
or
js
les
ljmp
addb
mov
lret
sbb
xchg
mov
pop
cld
ljmp
mov
gs
stc
pop
lahf
add
inc
sub
fdiv
decl
xor
inc
cmp
adc
fwait
popa
neg
das
pop
cmpsb
sub
mov
fwait
loopne
push
jnp
aas
xchg
mov
sbb
xchg
hlt
push
add
mov
add
testl
ljmp
inc
push
xor
xor
add
lcall
jecxz
adc
stos
inc
jb
je
leave
incb
adc
sti
mov
fstl
incl
add
test
and
pop
pop
and
sbbb
pop
decl
call
jmp
or
rol
mov
add
push
fwait
test
frstor
movsb
push
jle
xor
outsb
int3
inc
std
xchg
cmp
mov
out
adc
jbe
scas
out
push
fdivr
sbb
ljmp
push
sbb
add
xchg
movb
imul
add
aad
rorb
sub
lea
lcall
out
lahf
mov
icebp
pushf
stos
gs
sar
data16
add
ljmp
out
shl
fnstenv
ficomps
pushl
sbb
into
xchg
jge
aam
jmp
test
rorl
rorb
fistl
lods
pop
sub
mov
and
sub
sub
mov
mov
add
mov
ljmp
mov
fsubrl
dec
add
test
push
loope
or
inc
cld
mov
pushl
xchg
push
lea
or
movq
or
imul
lds
decl
in
fisttps
cmp
call
dec
or
dec
subl
xchg
add
adc
pop
lock
test
cmpb
and
jns
pop
dec
dec
pop
pop
gs
and
call
or
stos
or
fistpl
sub
push
jl
push
aaa
mov
hlt
cmp
repnz
jge
loopne
cs
push
arpl
dec
xor
lock
xchg
test
scas
xchg
add
sbb
and
add
ljmp
decb
hlt
insb
inc
loopne
in
mov
fbld
enter
inc
or
mov
or
push
rcll
adc
popl
fsubs
jmp
mov
rcll
fs
push
mov
repnz
lods
mov
lock
decl
xor
jb
popa
sti
shrb
mov
in
ss
or
jmp
pop
adc
imul
xchg
adc
cmp
mov
jl
scas
clc
addr16
cmp
ljmp
mov
les
cmp
add
jae
and
mov
addr16
cmp
aas
mov
mov
stos
push
or
pop
xchg
shlb
mov
xchg
inc
sbb
jp
xchg
jmp
cwtl
idiv
ret
inc
mov
cmp
adc
in
mov
or
mov
cli
negl
ljmp
xchg
popf
cwtl
test
pop
ret
push
add
or
inc
decl
iret
adc
pop
cmp
orb
add
push
sbb
decl
add
push
inc
dec
pfmul
sahf
push
cld
add
aas
jae
sti
or
add
sub
cmp
into
pop
aaa
cld
incl
jle
nop
inc
inc
je
jo
jb
pop
sarb
xchg
cmpsl
dec
pop
mov
push
incb
pushl
fildl
ficoml
mov
mov
incl
dec
cmpl
mov
add
adc
roll
std
je
adc
jmp
lock
sarb
je
jbe,pt
inc
and
call
mov
jnp
aas
dec
lea
jp
add
xchg
gs
adc
cli
decl
lock
pushl
test
inc
mov
cld
stos
fstpl
out
mov
in
enter
push
rol
pop
mov
ja
aad
cld
sahf
or
inc
cmp
mov
std
stos
add
dec
rorb
push
and
dec
inc
add
cli
mov
jp
adc
or
es
in
aaa
sub
jg
cmp
mov
call
cwtl
andl
xchg
sahf
adc
lds
mov
mov
cmp
mov
and
ljmp
cli
imul
scas
or
rolb
push
ss
jmp
add
arpl
jp
adc
push
sbb
jbe
dec
ffree
lcall
mov
out
loopne
lock
cmp
pushf
test
push
inc
dec
in
dec
adc
pop
or
pushl
psllq
xor
in
xor
pop
inc
or
pop
mov
lcall
and
cmc
clc
scas
pop
mov
dec
sub
jbe
das
call
test
jmp
jmp
jb
mov
gs
cmp
adc
push
adc
and
les
roll
xor
pop
push
clc
mov
and
pop
push
cld
dec
sti
mov
inc
outsb
aad
sar
incl
add
xor
int3
insl
mov
fnsave
sar
das
fsubs
mov
ret
ja
mov
push
xorl
push
xor
shlb
call
push
aam
out
sub
js
mov
and
adc
hlt
push
cs
incl
cmp
push
pop
mov
int3
jg
outsl
sub
mov
cld
cs
dec
sub
arpl
jne
call
std
subl
sub
movsb
aaa
adc
enter
mov
or
les
push
or
aam
repz
fs
or
mov
add
and
mov
ljmp
adc
pop
mov
aam
and
xor
loope
call
dec
sbb
mov
adc
filds
add
aam
add
mov
jmp
pandn
or
sbb
pop
mov
fldt
xchg
rolb
pop
add
push
lock
push
or
inc
sbb
cmp
call
ret
cli
es
inc
or
negb
and
in
adc
add
ljmp
jecxz
aad
repnz
call
mov
lahf
int
mov
jg
and
adc
cmp
ret
xor
mov
cld
call
mov
jne
gs
pop
out
push
mov
push
adc
in
push
lcall
dec
ret
fcomip
mov
jg
add
push
pop
pop
std
or
outsl
inc
lock
add
out
ficoms
lahf
xchg
or
dec
repz
or
inc
pop
add
or
pop
jmp
sbb
pop
jne
push
mov
add
scas
adc
cli
mov
inc
add
cmp
cmp
pop
cli
jmp
mov
or
mov
pushf
inc
dec
mov
push
add
rcrb
repnz
lods
jg
sub
in
fdivrs
cs
mov
aam
mov
and
addr16
loop
sbb
fucomip
add
ja
scas
dec
in
iret
push
subl
cld
ror
clc
test
mov
in
pop
rdpmc
dec
jo
fists
pusha
push
lock
add
cld
sub
xlat
stos
ljmp
sbb
pop
jecxz
adc
in
xchg
mov
mov
ljmp
push
std
jge
nop
jne
and
pop
out
sbb
gs
cli
aam
push
stos
add
add
pop
test
jmp
pushl
nop
ret
roll
xchg
cwtl
sbb
inc
adc
and
dec
add
inc
dec
xor
call
rcrl
scas
stos
adc
stos
mov
aam
ds
mov
sbb
cmp
push
out
clc
pop
sub
scas
stos
clc
mov
sbb
rorl
aaa
femms
subb
dec
outsl
add
fdivrp
push
pop
inc
outsl
popf
in
xchg
lea
dec
mov
call
mov
add
ljmp
fdivr
loopne
outsb
ret
or
pop
and
inc
mov
add
loopne
jbe
sti
jb
jg
jmp
add
shll
adc
ja
rolb
insb
in
sbb
add
lods
fcomip
lcall
nop
xor
lret
dec
or
testb
bound
out
call
inc
cmpsb
sub
mov
fs
aas
pop
sub
das
pop
enter
aad
test
ret
testb
stos
cmp
ss
insl
fidivrl
sbb
add
cld
incl
push
sub
leave
pop
loope
or
inc
cmp
sbb
xchg
jo
jg
lcall
mov
or
pop
jnp
adc
mov
ljmp
js
call
pop
xor
xlat
adcb
or
sbb
mov
dec
push
decl
inc
repnz
jg
and
push
add
out
lock
pop
cmovns
aam
arpl
adc
cmp
or
jg
jmp
test
repz
cwtl
adc
ret
push
push
mov
dec
out
sbb
dec
and
movsl
inc
cmp
mov
icebp
sub
loopne
ljmp
fsubl
cld
test
decl
movsb
incl
test
xor
adc
mov
xor
and
push
arpl
dec
adc
jne
aad
xor
clc
pop
out
mov
sbb
stc
outsb
mov
movsb
cmp
cmc
mov
ljmp
add
or
sub
add
cmp
lcall
call
lea
bswap
mov
push
outsb
jge
rcll
and
aaa
roll
outsl
pushl
add
pusha
movsl
call
and
jg
inc
cmp
or
int3
mov
mov
mov
scas
lock
sub
cld
lock
mov
rorb
ret
sti
add
mov
jmp
add
ss
stc
scas
daa
mov
mov
testb
cmp
aaa
cs
pop
cmc
jmp
test
aam
inc
lahf
adc
dec
insb
and
incl
mov
popf
repz
loopne
pop
std
decl
sub
push
mov
cmp
adc
les
mov
xchg
hlt
das
mov
dec
call
mov
push
xor
cmpb
adc
imul
les
adc
fistps
jb
cld
psrld
pop
leave
cmp
push
cmp
cmpsl
xor
decl
call
jae
subb
jmp
bound
add
xchg
decl
gs
loopne
jg
out
adc
cmp
leave
jo
or
mov
in
test
ss
fdivr
jge
mov
jbe
cmp
outsl
jne
outsl
pop
add
jmp
or
popa
icebp
cmp
mov
call
nop
jecxz
mov
add
push
fistpl
pop
ds
push
outsl
inc
xor
jp
cmp
je
cmp
jmp
mov
add
imul
out
push
lock
popa
scas
dec
into
sti
adc
ja
xor
in
leave
adc
dec
aad
push
cmp
add
iret
jne
lods
xor
incb
dec
or
ds
jne
sbb
fwait
clc
jmp
xor
out
and
std
je
movsl
push
mov
std
mov
pop
mov
cwtl
clc
ljmp
adc
push
enter
std
push
inc
arpl
idiv
mov
aam
adc
and
lcall
cli
dec
dec
and
cmc
xor
pop
call
mov
push
inc
sub
pop
js
jmp
incl
adc
test
clc
pop
add
popa
xor
xchg
outsl
clc
pop
dec
adc
gs
stos
xor
addr16
pop
dec
out
loopne
sar
loope
jb
mov
pop
jne
imul
add
pop
and
cmc
je
sbb
inc
mov
fisubl
scas
incl
insb
out
test
cmp
dec
xchg
fimull
push
jge
inc
add
sbbb
push
mov
lea
inc
mov
lds
xchg
sub
jle
ret
out
sti
punpckhbw
fildl
mov
ja
inc
push
mov
aam
incl
add
sbbl
ja
pop
cmp
cld
jg
in
rcrl
fs
inc
nop
mov
xor
push
mov
call
mov
ret
in
push
inc
in
shr
pop
mov
test
mov
ja
nop
xchg
ljmp
pushl
jp
test
addb
and
movsb
fdivr
xchg
call
mov
cmpsl
push
sbb
inc
loope
shl
outsb
or
fistpl
sbb
loope
lcall
incl
je
sbb
xchg
call
pop
orb
or
fdivr
iret
sbb
and
dec
cmp
push
scas
std
inc
test
ret
push
and
jle
inc
mov
fdivrp
lock
std
jg
dec
fistpll
push
dec
push
je
int3
ljmp
or
push
adc
stos
iret
and
ficoms
into
jo
adc
lea
xor
jo
mov
push
sbb
lods
mov
in
sbb
outsl
loop
sar
sarb
insl
mov
xchg
decl
dec
callw
jnp
jmp
jmp
es
mov
decl
mov
push
pop
adc
inc
jb
xor
sub
add
mov
clc
push
jbe
loope
add
ret
aam
add
std
jns
fildll
mov
faddl
outsb
loopne
mov
jmp
push
inc
ds
mov
jo
scas
cli
call
sahf
inc
lds
add
test
cld
decl
out
outsl
pop
lcall
and
fdivr
pushl
ljmp
push
out
xor
pop
mov
inc
imul
sub
decl
inc
fdivs
or
mov
mov
pop
call
sub
cli
jle
mov
mov
push
jl
pop
xlat
pop
loopne
push
pushl
pop
mov
push
test
sti
mov
push
dec
js
dec
mov
or
xchg
daa
or
add
dec
aam
xor
lret
test
jb
jb
inc
push
ljmp
jbe
sub
sub
movsb
ltr
mov
insl
pusha
jl
mov
and
lods
add
jg
jbe
sbb
mov
adc
pusha
psubusb
jg
inc
jmp
mov
mov
mov
orb
add
bound
kmovd
inc
aaa
std
call
cmp
lcall
movsl
fsub
shlb
subb
mov
push
xor
cmp
scas
jmp
in
testb
or
or
incl
test
push
push
pop
cmp
cmp
in
testl
clc
jmp
xor
push
call
jle
stos
scas
inc
pop
mov
xchg
sti
les
sbb
pushl
std
hlt
fimull
adc
inc
clc
insb
pop
pop
sbb
jnp
sbb
fidivl
movsb
add
lahf
push
mov
push
mov
jns
jle
cmpsb
shr
icebp
or
mov
mov
cmp
lock
inc
mov
test
insb
aad
jmp
out
mov
add
sub
push
lods
enter
sub
push
cmp
sbb
sbb
call
jg
lahf
shrb
rolb
jnp
push
hlt
xor
xchg
mov
mov
sar
call
pop
push
adc
call
push
pop
fstl
cld
fsubl
push
std
and
sbb
cmp
incl
dec
insb
jge
dec
add
test
xchg
test
and
adc
ds
pop
pusha
sbb
xchg
jg
xor
incl
and
inc
mov
or
pusha
insb
inc
clc
aaa
call
jno
and
cmp
mov
push
shrb
jae
cmpb
out
js
addb
inc
and
adc
sbb
fbstp
out
pop
nop
lods
cmp
mov
xchg
imul
ljmp
pusha
shrl
mov
jle
inc
and
shlb
jl
fcomip
inc
mov
jle
mov
mov
ljmp
incl
push
inc
in
sti
fsin
aam
shrl
das
xchg
in
pop
mov
shrl
fs
and
xor
cmpsb
outsl
clc
lcall
cmp
movsb
mov
sarb
std
inc
mov
mov
outsb
int3
jne
or
test
xchg
add
cld
inc
xor
repnz
rolb
leave
mov
mov
call
jmp
xor
xchg
xchg
mov
pop
pop
sti
sbb
in
jb
mov
call
adc
addr16
push
and
out
inc
shlb
lods
pop
mov
mov
pop
das
push
inc
mov
xchg
jmp
mov
daa
add
mov
xor
fcomip
hlt
lcall
sub
or
fmuls
inc
nop
call
clc
mov
mov
adc
incl
fsubrl
je
cmpsl
fcmovnb
ljmp
das
lds
std
decl
mov
inc
push
mov
mov
inc
mov
sarb
ja
adc
into
pop
mov
lock
push
jmp
add
add
dec
sub
pop
push
push
mov
xor
pushf
nop
jmp
pop
icebp
decl
jb
int3
inc
jge
inc
dec
scas
jl
in
inc
ljmp
ret
add
cld
lcall
jl
push
mov
dec
pop
cltd
mov
jae
arpl
add
pushl
jp
push
sub
push
adc
mov
or
xchg
sub
test
jmp
insb
inc
xorl
notl
shlb
bound
adc
pusha
rolb
ljmp
adc
loop
fcmovnu
add
cmp
add
or
push
jmp
les
inc
sub
jmp
js
lret
add
dec
ficoml
lahf
cs
rdmsr
aad
add
lock
loope
dec
xchg
loopne
std
dec
rorl
and
jne
cld
je
dec
xchg
push
test
ljmp
dec
sbb
dec
pushf
aaa
test
adc
adc
jmp
sbbl
imul
ret
push
pop
mov
out
outsb
jo
scas
push
xor
out
push
mov
mov
addr16
push
hlt
xor
divb
bound
testb
jle
dec
fwait
inc
movd
scas
or
lods
xor
decl
mov
call
unpckhps
out
cltd
fbstp
push
pushl
je
pop
cld
lcall
aas
inc
popa
outsb
jbe
push
clc
sub
movsl
lock
pop
and
cld
cld
hlt
pop
ljmp
jo
and
sbb
lods
push
or
ljmp
mov
cmp
jo
call
aas
orb
lock
stos
incl
xlat
pushl
dec
pushf
rol
xchg
adc
jmp
mov
les
rolb
std
push
pop
roll
cld
lcall
jecxz
xor
idivl
inc
lea
xorl
pop
outsl
push
pushf
adc
mov
xor
cmp
sbb
mov
aad
decl
outsl
je
adcb
jecxz
inc
dec
iret
loopne
dec
mov
pop
xor
add
jnp
into
adc
push
mov
or
dec
adcb
mov
mov
mov
cmp
test
xchg
cld
es
clc
push
inc
and
mov
je
nop
ljmp
mov
pop
cmp
test
cmp
fisttpl
push
mov
and
ljmp
ss
mov
xor
outsl
scas
dec
arpl
dec
decl
inc
decl
test
gs
add
mov
test
call
pusha
jno
jmp
test
out
xor
fs
mov
xchg
adc
mov
inc
xor
data16
shll
pop
sbb
loopne
movsb
xorb
fdivrs
push
rclb
es
aas
jecxz
xorb
jae
push
pop
fdivl
roll
call
adc
hlt
sub
movsb
inc
adc
add
pushf
ljmp
shlb
outsb
pop
in
fdivs
mov
sub
add
pop
cmp
sti
rolb
mov
adc
shll
mov
dec
mov
dec
sub
and
xor
and
lcall
int
in
add
pop
jb
jle
add
sub
cmp
std
pop
je
rcl
call
call
add
ss
int3
notb
sub
sub
push
pushf
add
je
imul
mov
jbe
inc
lret
push
out
repz
aas
outsl
add
mov
clc
adc
lcall
pop
jmp
ljmp
pop
call
lea
and
incl
sub
in
mov
addr16
popa
mov
push
add
jo
aaa
lea
fld
lods
cmp
fcomip
pushl
or
dec
jnp
and
pop
jmp
jb
pushf
lcall
outsl
and
mov
add
or
mov
cmpsl
jmp
pushf
inc
decl
insb
cmovp
mov
inc
ret
lcall
adc
sar
sbb
lret
or
push
call
repnz
sub
js
repz
fcomip
into
and
cmp
push
aad
mov
dec
jno
ds
cs
add
shlb
aam
call
cwtl
mov
mov
inc
sub
jmp
sub
push
jp
sub
pushl
mov
add
imulb
pop
out
adc
add
decl
xor
out
inc
dec
pop
fwait
push
lcall
test
addl
ljmp
lcall
lea
jb
out
or
data16
imul
add
and
mov
aaa
sar
lcall
xor
popa
jp
rcl
sbb
adc
scas
jo
sbb
cwtl
add
cs
cmp
jle
int
pop
pop
lods
xor
mov
outsb
add
mov
cld
lcall
subl
roll
insl
and
mov
inc
sbb
cld
pop
mov
pop
xor
jl
imul
iret
mov
aas
or
sbb
roll
and
dec
mov
mov
enter
add
scas
pop
or
add
xor
and
jg
mov
or
mov
jo
fists
mov
and
and
cld
mov
and
xchg
xor
mov
out
cmpsb
push
mov
pop
loopne
and
inc
movsb
pop
jb
lcall
dec
adc
jb
pop
ljmp
push
mov
test
mov
je
mov
xor
inc
or
push
sbb
pop
ds
je
adc
mov
aaa
pop
call
xor
sub
dec
dec
jge
sbb
fwait
pop
out
and
and
sbb
incl
lahf
mov
and
xlat
sbb
adc
mov
andl
lods
mov
call
jo
in
and
ss
dec
push
bound
jnp
mov
loope,pt
jmp
incl
lcall
jge
push
sahf
jg
jl,pn
mov
adc
pushf
push
test
ljmp
mov
outsl
mov
mov
add
mov
lock
mov
loope
sub
jmp
cmp
insb
fidivs
push
mov
decb
mov
add
jae
jae
out
add
clc
sbb
incl
mov
mov
int3
push
and
arpl
shrb
jbe
cld
pop
jmp
or
add
sbb
push
pop
sub
lcall
ja
and
pop
and
ljmp
dec
and
mov
gs
jmp
cwtl
jbe
mov
jecxz
adc
pop
test
xor
dec
testl
push
add
lcall
repz
mov
es
loope
loopne
ss
jmp
xorb
mov
out
and
out
repnz
sbb
pop
pop
in
lahf
add
sar
rcr
jmp
clc
xchg
adcb
fnsave
push
adcb
nop
pop
mov
or
mov
xor
dec
pop
mull
fimull
loope
sub
rcr
hlt
lcall
test
cmp
and
leave
jl
mov
add
ljmp
push
xchg
decl
lock
fistl
xor
jbe
jno
incl
jg
pushl
call
mov
sahf
and
xor
adc
mov
and
fcompl
pushl
in
mov
enter
xchg
push
cld
fisttpl
dec
ljmp
call
bnd
xchg
sbb
inc
fwait
nop
mov
sbb
push
jns
fisubl
rol
pop
ljmp
inc
filds
push
ss
outsl
cld
sbb
or
or
pushl
fsubs
negl
jo
add
jecxz
movsb
pop
inc
xor
adc
ljmp
lcall
mov
pop
or
int3
out
sti
fidivl
mov
cmp
adc
lcall
stos
push
in
mov
rorb
flds
pusha
inc
cmp
or
incl
xor
decl
cmc
add
call
inc
cmp
mov
out
pop
add
cmp
add
mov
lock
inc
pop
sub
and
fwait
ljmp
sub
sub
inc
pop
adc
push
repz
add
jbe
jbe
sub
rcr
or
jecxz
inc
imul
xchg
cmp
jmp
cltd
cmc
adc
mov
sub
movsb
adc
xchg
addr16
dec
fsubr
leave
mov
decl
add
inc
arpl
mov
add
mov
push
out
jne
add
pop
lcall
add
int
and
jns
lds
std
and
add
insl
sub
mov
dec
notb
add
mov
sub
call
int3
ss
mov
lahf
loopne
pop
sub
add
lods
in
push
psubd
popf
in
inc
cli
or
adc
add
xor
scas
adc
pop
ss
lea
add
pop
out
clc
call
adcb
in
int3
sbb
push
mov
fstpt
jmp
add
add
pop
mov
xor
ljmp
ljmp
fiadds
andl
cmpsl
add
dec
dec
dec
movsb
loopne
fcmovnu
xchg
clc
stos
cli
shll
mov
lcall
aas
dec
ja
shl
push
push
jg
cs
sbb
mov
dec
addb
pop
clc
incl
data16
lock
cmc
mov
lds
cmp
shlb
xchg
push
es
popa
jge
dec
sti
mov
jg
mov
out
mov
inc
lret
push
jbe
les
mov
dec
std
lods
ljmp
je
fsubrl
xchg
adc
jmp
mov
ds
push
jp
xor
call
loopne
inc
fucom
mov
inc
clc
inc
clc
std
cli
dec
sub
sbb
lock
push
add
js
scas
hlt
add
ret
add
or
add
jbe
mov
arpl
pop
push
mov
lcall
add
xorl
sbb
clc
push
add
int3
stos
lock
pop
cmp
out
lock
loope
push
ret
lea
dec
mov
es
push
jno
or
adc
fisubrs
fistpll
rolb
or
push
imul
fwait
insb
pop
loop
sub
call
mov
xor
outsl
inc
enter
gs
clc
xchg
mov
jg
ret
stos
cmp
flds
dec
mov
push
imul
scas
push
sbb
ja
push
add
mov
lcall
mov
xchg
sub
daa
push
in
pop
push
xor
sti
xor
mov
mov
push
push
imul
mov
test
insb
fwait
ss
pushl
repnz
cld
inc
and
sarl
call
jae,pn
push
movsl
sub
push
lcall
sub
fwait
inc
xchg
jb
rclb
test
cmc
xor
lea
test
xor
roll
pop
xchg
or
mov
pop
sub
jb
sbb
test
sub
push
pop
adc
ficompl
cmp
add
shl
clc
mov
flds
add
cwtl
xchg
mov
out
jg
std
mov
mov
lret
inc
ficompl
and
add
inc
or
aad
ljmp
jl
cmp
add
mov
ds
add
add
clc
ljmp
mov
xchg
pop
sbb
push
mov
lock
adc
sbb
incl
movsb
jb
sub
fbstp
or
mov
cmp
mov
ljmp
push
add
mov
mov
scas
pop
push
mov
shlb
mov
mov
ljmp
push
cmp
add
loop
or
sarb
loop
sub
out
addr16
mov
sub
inc
mov
add
in
and
ss
jg
lcall
sub
xchg
lods
mov
pop
inc
pop
mov
je
jne
divb
push
fcomip
call
jle
mov
lock
in
pop
call
sub
test
aas
js
push
sbb
sbb
and
and
repz
jl
outsl
sbb
loop
sub
outsb
and
jg
icebp
call
pop
mov
push
outsl
mov
loop
cmpb
jg
mov
or
cmp
mov
shrl
cmp
push
sbb
adc
sarl
xchg
dec
rcl
jbe
rolb
inc
mov
mov
adc
dec
xor
es
xchg
add
call
mov
mov
insb
repz
jb
mov
push
xor
incl
and
pop
xchg
add
je
out
mov
daa
mov
pushl
push
outsl
dec
push
lock
pop
jecxz
jno
push
hlt
pushl
mov
mov
insb
mov
push
in
cmp
and
je
xor
jg
in
call
jnp
fmul
or
or
addl
sub
lds
rcl
cmp
jo
push
jp
call
add
add
std
pushl
and
cmp
adc
fwait
jbe
push
outsb
fsubs
incb
jmp
pop
hlt
lock
imul
ror
mov
add
adc
fcomip
pop
add
ljmp
movsb
rorl
and
sub
add
out
adc
or
jmp
and
fs
call
jne
sub
add
jmp
lock
push
xor
push
pop
jno
aam
xchg
sub
leave
mov
fstpl
nop
add
call
pop
psubsb
sub
cmp
loope
pop
rol
jg
jle
cmpsb
in
repnz
jb
dec
cmp
mulps
xor
jg
mov
repnz
test
js
pop
push
push
xchg
fsubl
sar
jg
pop
mov
xlat
rorb
cmp
leave
sub
lea
sub
push
nop
mov
jmp
test
call
incl
out
jns
add
xor
cmpsl
outsb
lods
push
cld
call
push
mov
xchg
mov
push
xor
or
xchg
or
cld
and
adc
sub
ljmp
sub
mov
mov
lret
outsb
add
or
rorb
and
jae
dec
mov
test
xlat
leave
push
std
pop
rcr
mov
stos
push
cmp
lea
jmp
mov
mov
sub
adc
clc
mov
mov
sbb
add
inc
cmp
xor
sub
pop
std
jmp
decb
sti
mov
mov
icebp
inc
addr16
shl
sahf
pushl
adc
popa
movhps
jecxz
lds
mov
sbb
std
lods
jns
ficoms
pushf
cld
jmp
clc
sbb
fmull
jne
shrb
outsl
repnz
aas
adc
pusha
das
fists
loope
repz
loopne
decl
adcl
pop
mov
jle
add
jns
fistpll
xor
orl
je
push
or
or
pop
inc
pusha
popa
cmp
in
pop
cmp
jns
mov
mov
adc
jmp
cwtl
mov
mov
xor
inc
int3
fdivl
sub
xchg
fadds
paddd
popa
test
cltd
cli
incl
and
ret
int3
enter
xor
ljmp
pop
xor
rcll
push
mov
cmp
cmp
and
call
add
xchg
jne
or
ret
fistl
push
test
cmp
fadd
fidivrl
in
ficoms
add
mov
repz
pop
mov
and
ljmp
push
xor
repz
ss
adc
scas
pop
mov
sbb
mov
decl
mov
decb
or
lea
cmp
cmpsb
sarb
out
mov
push
push
jg
dec
fdivrl
vpshuflw
xor
adc
add
je
adc
mov
inc
jge
add
adc
dec
mov
pop
sbb
pop
pusha
faddl
out
adc
add
ljmp
adcl
in
lahf
mov
rorl
xor
adc
mov
or
lcall
or
mov
daa
pusha
in
enter
das
int3
push
push
push
ljmp
cmp
addr16
sub
clc
or
lahf
xchg
cltd
fildl
ljmp
and
decl
mov
dec
sbb
jmp
clc
jmp
jmp
dec
pshufw
loopne
rcrb
imul
pusha
adc
dec
loopne
rclb
ljmp
movsb
or
mov
decl
mov
ss
test
shl
pop
push
add
lock
cmpsb
xor
xor
sbb
lcall
adc
sub
popa
nop
arpl
pop
add
pop
add
xchg
ljmp
ljmp
jnp
add
push
push
ja
cmpsb
push
add
push
test
jmp
ljmp
sub
sub
insl
jne
adc
inc
rcrb
sahf
rcrb
jo
out
lcall
fwait
mov
inc
dec
jp
out
lret
ds
add
loopne
mov
js
xchg
inc
adc
sbb
or
jmp
dec
mov
adc
xor
xor
dec
fs
outsb
mov
hlt
sbb
mov
jp
mov
xor
mov
aas
inc
cld
in
jne
jo
mov
subl
or
push
je
sub
or
mov
xchg
sub
incl
arpl
ljmp
arpl
and
test
mov
pop
and
out
clc
jmp
mov
pop
mov
sub
dec
gs
jg
or
push
sbb
jl
push
icebp
lds
lods
jmp
push
roll
in
mov
inc
sti
ret
push
lahf
add
sbb
sbb
sub
insb
lock
mov
inc
movsb
int3
mov
lcall
add
int
inc
adc
sub
pop
mov
mov
ljmp
jge
insl
clc
ljmp
je
call
sahf
std
out
push
repnz
in
xor
dec
rolb
jl
dec
push
mov
add
lea
setns
cli
or
loopne
lret
outsl
fldz
mov
mov
mov
jb
push
dec
ljmp
sbb
lcall
jno
xor
stos
mov
lds
out
push
pushl
mov
push
xor
pushl
fwait
jne
es
mov
jbe
sub
ljmp
repnz
fiadds
lahf
movzwl
cmp
nop
stos
incb
pop
ljmp
ljmp
fistpll
xchg
loopne
scas
ud0
mov
or
xchg
jb
int3
push
push
dec
xor
mov
ja
aam
sub
add
aaa
inc
xchg
xor
dec
sbb
jmp
js
xorb
push
mov
inc
or
insl
mov
call
sbb
jmp
or
or
leave
test
int3
xchg
mov
inc
or
icebp
jmp
decl
in
jmp
out
push
loopne
andl
cli
xchg
inc
or
popa
imul
pop
push
sbbl
dec
outsl
invd
push
xlat
pop
inc
push
mov
mov
loopne
adc
adcl
fstl
loopne
rol
adc
sbb
push
scas
sbb
mov
mov
add
and
incl
jp
push
lods
mov
nop
jbe
dec
jl
and
mov
es
pushl
cmpsb
mov
mov
or
js
enter
add
cld
call
push
add
push
insb
insb
je
inc
outsb
cmpsl
sbb
lcall
adc
jb
outsl
mov
mov
mov
cmpb
inc
std
jl
xor
pushl
outsl
jns
movsl
jp
das
mov
ljmp
jbe
add
call
leave
into
cmp
pop
out
bound
les
jp
sub
cmp
aas
dec
mov
dec
and
jno
testl
mov
sbb
xchg
insb
fcmovnu
incb
cmp
mov
cmp
test
push
cmp
shlb
mov
adc
cmp
leave
mov
andb
pop
in
mov
mov
inc
mov
popa
mov
inc
int3
in
out
and
push
sbb
sbb
mov
adc
push
in
fwait
addr16
mov
loop
pop
pushl
dec
sbb
add
mov
xchg
cmp
imul
test
es
icebp
adc
aad
mov
or
loopne
fidivrs
mov
and
arpl
jnp
decl
idivl
adc
mov
jge
mov
stos
filds
popa
insb
les
imul
pop
mov
pop
repnz
mov
test
jp
sbb
stos
mov
pushl
jecxz
loopne
add
or
push
mov
dec
push
ljmp
cld
mov
push
mov
mov
adc
push
cli
push
call
push
jb
pop
mov
inc
call
icebp
cwtl
or
add
call
movb
cltd
xchg
mov
lds
jb
sub
inc
mov
mov
mov
imul
outsl
decl
jns
mov
sub
and
mov
adc
les
bound
sbb
pushl
cli
negb
jne
fsubs
jae
push
dec
loope
sub
jbe
shrl
jo
iret
mov
call
add
sti
addr16
dec
pusha
jg
ret
adc
fdiv
icebp
gs
out
rorb
mov
add
test
loop
jne
cs
jmp
pop
stos
mov
jecxz
outsb
imul
movsb
push
add
add
xchg
pop
mov
loope
jmp
dec
outsl
incl
sbb
fdivl
fsin
dec
mov
ss
jne
jmp
adc
cmp
add
sub
and
test
sub
mov
or
add
jbe
mov
and
leave
xor
sub
cmp
dec
into
je
lcall
enter
xor
pushl
inc
loop
push
pop
mov
arpl
sub
jmp
inc
add
sarb
cmc
or
jl
push
sbb
repz
jne
adcb
and
xchg
test
test
pushl
or
mov
addb
call
jle
pushl
aaa
insl
or
jo
push
mov
add
xchg
mov
test
lock
lahf
in
jmp
ljmp
scas
fwait
in
aad
add
repz
mov
or
mov
pushl
std
roll
jb
cmp
push
pop
and
mov
jbe
add
jg
je
scas
xchg
inc
push
enter
repnz
xchg
cmp
aad
psraw
ljmp
bound
dec
sarb
push
sub
push
adc
mov
ds
jg
aaa
test
push
cmp
mov
dec
push
xchg
je
jmp
je
mov
jg
incl
adc
add
pop
rcl
lret
fcomps
adc
jno
cmpsl
mov
push
cs
sbb
push
push
add
xor
rolb
pop
xchg
ljmp
fs
sub
dec
mov
xor
push
loopne
pusha
push
hlt
add
pushl
loop
pusha
aaa
mov
adc
int3
jmp
int3
push
out
repnz
scas
fbld
adc
mov
test
scas
add
adc
call
push
sub
jbe
nop
xlat
bound
mov
stos
sahf
arpl
inc
gs
inc
mov
xchg
lods
mov
sbb
add
cmc
cmp
mov
mov
enter
mov
aaa
rcll
adc
decl
std
add
inc
mov
leave
sub
aaa
stos
mov
ja
or
call
push
adc
xor
mov
fisubrl
jo
js
inc
pop
add
cmp
call
loopne
sti
je
push
jmp
add
decl
orl
inc
inc
or
movsl
mov
adc
fstps
push
dec
fbstp
into
loopne
outsl
test
movb
rcrl
adc
pusha
pop
or
add
pop
inc
mov
out
pop
mov
jno
enter
mov
popa
enter
movb
popf
push
inc
fcompl
mov
cld
rcll
push
hlt
pusha
mov
sbb
je
adc
lcall
mov
cmp
mov
mov
ret
sbb
inc
or
sbb
aaa
cld
call
dec
sbb
mov
mov
and
mov
pop
mov
fcomip
decl
cli
jbe
andb
testb
push
adc
or
xchg
push
pop
cmp
and
add
fnstcw
push
lods
rorb
add
jmp
fucomip
ja
addr16
daa
sub
xchg
add
pop
dec
adc
pop
popa
mov
xor
or
mov
inc
iret
push
aad
mov
clc
cmp
decl
loopne
dec
add
and
add
stos
xchg
and
mov
aad
add
decl
es
mov
and
test
push
and
call
cmc
push
jmp
sti
xor
cmp
scas
and
jg
push
push
cmp
mov
add
sbb
pop
test
ret
cld
xchg
mov
decl
lock
add
pusha
adc
pop
out
pop
push
or
lock
clc
fwait
outsb
sub
push
clc
cmp
cli
mov
sti
ljmp
xchg
jecxz
mov
int3
cmp
cld
pop
dec
inc
jns
je
adc
jnp
jmp
ret
pusha
ljmp
inc
ret
pop
mov
mov
push
cli
jg
adc
add
or
jb
outsb
mov
push
scas
pop
cmp
ljmp
std
ljmp
ljmp
or
mov
push
rolb
sub
fisubrs
pushl
aam
mov
mov
and
cld
hlt
inc
decl
loope
or
insb
adc
dec
jo
sti
or
pop
push
mov
add
inc
inc
mov
mov
add
ret
adc
xor
add
lcall
and
mov
iret
add
sbb
sub
adc
lahf
sbb
push
xor
adc
or
pushl
iret
addb
jno
add
mov
add
jo
dec
dec
jbe
add
int
jae
decl
scas
ret
mov
pop
xchg
xor
cmp
call
rcrb
lock
clc
mov
in
stos
ljmp
sar
pop
ficompl
push
pop
ljmp
xchg
sti
js
xor
cmp
pop
add
incl
addl
orl
mov
lret
ljmp
or
enter
and
enter
adc
notb
outsb
pushf
jmp
cmp
mov
or
inc
fwait
clc
dec
dec
adc
shlb
xorb
cmp
push
xor
lock
lret
incl
into
sub
mov
dec
push
adc
xchg
add
xchg
fnstsw
lds
scas
add
decl
cmpsb
add
jb
jb
sbb
dec
push
sub
loopne
sti
xor
jg
clc
out
cli
sbb
add
mov
pushl
mov
xor
jmp
lcall
out
cmp
icebp
dec
aam
adc
mov
or
xor
inc
test
pop
xchg
jnp
mov
jg
and
mov
outsl
in
imul
call
sbb
mov
mov
adc
adc
xchg
add
mov
pop
dec
mov
or
push
inc
mov
add
iret
mov
or
or
and
in
ljmp
pop
xor
leave
out
cli
cmp
mov
mov
inc
xchg
js
add
add
rcrl
adc
cmpsl
call
mov
xchg
jge
std
dec
or
mov
inc
out
popf
outsl
fldl
das
clc
pop
mov
out
xchg
enter
adc
decl
xchg
add
cwtl
subb
cwtl
es
mov
insb
inc
jno
fisttpl
pushl
inc
inc
rorb
fimull
lods
or
jmp
xchg
cmp
ja
dec
sbb
out
js
mov
xor
add
ret
and
jge
push
sarl
les
pop
loopne
inc
testb
adcb
je
xor
pop
sbb
adc
jg
inc
add
dec
outsl
mov
xlat
test
push
cmp
clc
add
sti
push
push
mov
je
mov
fwait
sbb
sti
call
fstps
add
push
jnp
add
sar
incl
push
sbb
mov
shrb
loopne
test
jg
imul
rorb
pop
xor
push
scas
loope
divb
cli
jg
insb
add
rcrl
aam
push
fidivrs
je
pop
inc
test
or
add
outsl
ljmp
mov
enter
aaa
xchg
fsubl
lret
jb
inc
push
ljmp
sub
js
incb
pop
add
addr16
lret
fadds
mov
decl
decl
sbb
inc
shlb
push
and
mov
xchg
sti
mov
les
sub
mov
aaa
ret
dec
or
cld
in
push
xor
orb
insl
fs
or
push
je
call
andb
or
mov
push
call
test
adc
aam
jo
test
cmp
rolb
popf
ds
mov
or
or
sahf
sub
jne
mov
loope
sub
jg
sub
adc
shlb
xorl
fs
lcall
pop
mov
pusha
xor
mov
clc
imul
pushl
mov
mov
pop
xchg
out
mov
or
or
lcall
test
jb
cmp
incb
xchg
pushf
andb
pop
out
popf
fimuls
add
aaa
cwtl
dec
scas
sub
pop
dec
rorb
cmc
and
in
outsl
sbb
push
ret
fiadds
mov
adc
mov
ss
sub
xorb
dec
inc
mov
icebp
bnd
test
pop
aam
sub
imul
jg
jg
and
fs
mov
jmp
sbb
pushf
sub
cmp
addb
dec
add
das
cli
decl
xorb
inc
rcl
sbb
shl
sbb
inc
ljmp
add
xchg
jb
aas
jno
call
dec
sbb
outsl
pop
push
aam
sti
nop
adc
stos
pop
fildl
das
filds
call
push
adc
lret
je
cmp
mov
lock
jmp
loopne
xchg
nop
std
mov
jp,pn
pop
fs
lcall
in
jecxz
mov
or
adc
iret
movsb
mov
ljmp
dec
mov
cld
in
adc
cmp
decl
mov
xchg
inc
mov
lcall
and
mov
push
add
jno
decl
and
or
incb
or
ljmp
scas
call
decl
adcl
fisttpll
loope
push
lea
cmp
push
push
sbb
call
jg
add
mov
mov
decl
inc
shl
aaa
or
jg
sbb
sbb
pop
addb
adc
cltd
adc
das
sar
cltd
std
mov
pop
push
pop
test
data16
clc
roll
sub
dec
fs
mov
jbe
cwtl
sub
sub
adc
cli
pop
jo
loopne
push
ret
or
push
push
stos
out
popa
in
iret
jle
push
fildll
cmp
mov
js
ds
jp
inc
pop
sub
mov
dec
fsubrl
xchg
ror
cmpl
pop
inc
push
addb
mov
ret
adc
pop
dec
jge
mov
jmp
mov
and
add
inc
enter
data16
frstor
push
dec
pusha
cld
incl
sbb
and
jbe
cs
pop
adc
sarl
movsb
push
dec
adc
cli
xor
and
add
push
xchg
inc
push
mov
enter
add
idivb
incl
std
xchg
pusha
rorb
xor
jle
cmp
jmp
das
int3
mov
sbb
popa
cld
cmp
push
jbe
inc
ret
xor
decl
lret
subl
xor
sbb
inc
pop
push
sarl
decl
shl
inc
test
push
out
test
lcall
mov
cmp
mov
xchg
xor
xor
movsb
mul
push
pop
cmc
push
pop
add
fcoms
ljmp
inc
enter
inc
dec
test
add
mov
inc
mov
push
gs
std
push
add
imul
subb
xchg
hlt
inc
call
inc
sahf
cwtl
push
or
pop
push
jg
push
and
fcmovbe
ljmp
push
push
movsb
aam
cmp
xor
jg
cmp
and
mov
jns
inc
inc
push
jmp
jle
adc
ss
jmp
ljmp
pop
cld
test
add
push
sub
cltd
push
pop
flds
push
cmp
add
jmp
aaa
inc
dec
stos
fucomip
andl
push
decb
push
pop
jle
mov
pushf
sbb
jg
jmp
mov
push
mov
mov
and
mov
push
dec
sar
pushl
xchg
fdivr
adc
je
les
adc
nop
xor
cmp
outsb
das
ljmp
clc
lcall
out
lahf
ds
add
xor
clc
mov
aad
incl
std
jne
loop
mov
cld
add
in
push
push
inc
and
loopne
in
mov
loopne
jmp
std
or
jmp
data16
xabort
movsb
jae
jae
mov
xchg
shl
xor
jne
into
jmp
mov
cld
out
mov
decl
push
pop
xor
xor
sbb
mov
sub
das
or
cld
popa
add
dec
adc
lahf
pop
push
mov
and
repnz
clc
fcos
incl
clc
loop
inc
jge
cmp
adc
leave
mov
lcall
xor
jg
mov
pop
jp
jnp
push
mov
add
dec
scas
xor
leave
cmp
inc
push
sbb
enter
int3
jmp
outsl
nop
jl
sbb
shlb
xchg
mov
push
or
out
aad
mov
push
pop
dec
cmpsb
fdiv
or
sahf
enter
mov
fbstp
lahf
gs
mov
inc
mov
jbe
into
or
push
call
cmp
jo
cmpsl
lcall
add
mov
jmp
pop
sub
push
or
lods
mov
cmp
sbb
jmp
xchg
jne
shll
shlb
pusha
sub
adc
or
lcall
rolb
push
lea
out
je
sub
cmc
mov
push
jo,pn
mov
jmp
mov
aaa
ja
pushl
inc
sbb
lahf
sbb
data16
mov
cmc
push
comiss
les
jl
cld
inc
jmp
push
push
scas
lret
test
add
ficompl
sbb
mov
std
mov
lcall
ds
outsb
sahf
out
xor
sahf
add
cmpsl
or
jo
faddl
dec
pushl
push
lds
pop
mov
pop
rcll
xchg
dec
xchg
jno
lock
incl
add
xchg
aas
add
lock
sub
addb
ljmp
shrb
das
pop
in
test
sbb
mov
push
jo
cmpb
mov
mov
dec
xchg
out
jmp
outsl
jl
ljmp
adcl
pop
inc
push
insl
sub
mov
test
lock
addr16
push
ja
movsb
lcall
cmp
jae
je
loope
and
or
jno
dec
mov
pushf
add
sar
sahf
xor
xor
inc
neg
pop
or
jg
decl
test
dec
scas
adc
add
std
out
testl
or
enter
incl
scas
sbb
xchg
dec
cld
fwait
mov
cmp
jns
outsb
inc
adc
push
clc
cld
call
std
decl
or
push
sub
idiv
pop
shrb
outsb
push
test
and
sbb
incl
roll
xor
aam
gs
add
gs
push
out
xor
xchg
iret
popl
adc
mov
xor
push
clc
imul
push
sahf
cmp
cli
repz
rorb
dec
ret
inc
xor
and
xchg
outsl
add
sub
lcall
test
push
sbb
jmp
adc
je
add
cld
push
gs
push
int
ja
idivb
arpl
sahf
pusha
testb
decl
pusha
popa
mov
sub
test
jae
add
add
jecxz
cs
sbb
shr
stos
push
data16
ljmp
add
imul
pop
fwait
pop
inc
mov
ljmp
jg
std
or
jmp
sahf
fabs
in
sub
xchg
sar
incl
test
std
outsl
cmp
test
dec
and
stc
in
jne
adcl
jnp
mov
add
loopne
add
ret
jle
push
cmpb
ljmp
call
in
and
pop
sahf
push
les
arpl
jp
aad
push
repz
mov
loopne
fdivr
call
test
clc
ljmp
aad
jp
push
incl
stos
push
mov
pushl
mov
mov
imul
inc
add
jmp
push
rcll
inc
icebp
push
sahf
test
movsl
insb
or
shrb
jecxz
add
clc
sub
add
leave
xchg
test
dec
mov
repz
outsl
pop
jl
ret
xchg
fucomp
pop
xchg
scas
mov
mov
decl
xlat
ss
ret
or
das
mov
or
out
jns
aas
dec
incl
xchg
mov
in
push
loop
cli
sbb
fwait
xor
loop
jge
fldl
hlt
add
push
pop
les
inc
jp
cmp
pusha
cmp
mov
push
dec
and
jg
adc
add
sub
frstor
lods
psubsb
je
jl
push
ja
decl
gs
jmp
xor
rcrl
out
dec
std
enter
fdiv
mov
pushl
cld
lret
inc
repz
jecxz
push
stc
mov
stos
cmp
std
dec
or
mov
pop
inc
imul
sbb
or
sarl
mov
sbb
cltd
xor
sub
stos
incl
rorb
test
add
pop
sar
ljmp
mov
ficoms
inc
shlb
jp
mov
add
add
ret
xor
mov
subb
test
push
pop
fsubl
add
test
lcall
pop
movsb
mov
test
shrl
and
mov
outsb
mov
sbb
lcall
and
add
push
movsl
push
inc
cmpsb
cmp
movsl
cmpsb
decl
dec
jmp
aas
mov
aam
mov
inc
and
dec
add
popl
cmp
fcos
ljmp
repz
insl
mov
lea
push
cmp
pushf
inc
ret
je
or
incl
sub
into
popf
mov
daa
lahf
and
popa
out
pusha
and
bound
mov
out
xor
mov
adc
sbbb
jmp
iret
cmp
mov
adc
push
jg
decl
sbb
pop
test
inc
mov
mov
lea
ret
mov
or
ret
lcall
jo
add
arpl
sahf
int
cmp
pushf
stos
fmul
xchg
mov
jns
decl
cwtl
fsubrs
stc
lcall
push
mov
xchg
test
pop
arpl
ja
incl
cld
lock
adc
iret
call
mov
push
mov
cmp
adc
das
jge
inc
enter
push
iret
and
clc
add
jl
xor
shr
mov
ljmp
lea
push
mov
imul
scas
mov
in
push
pop
lods
lahf
pop
sbbb
sub
decl
pop
lea
imulb
dec
sbb
decl
scas
add
dec
mov
insb
and
push
test
inc
roll
mov
dec
jecxz
jg
into
fisttps
push
or
push
out
jecxz
fnstsw
xor
mov
add
jg
cmp
fmull
sbbl
lcall
cmpsb
mov
loope
call
mov
shll
push
push
mov
addr16
scas
and
xchg
jno
sbb
lret
fiadds
scas
daa
clc
outsl
scas
cli
cmp
or
enter
jb
dec
mov
cmc
sbb
adc
out
pop
add
pop
mov
jns
push
out
jp
inc
jmp
cltd
dec
adc
mov
inc
add
sub
adc
out
or
cmp
xor
lods
ljmp
es
and
call
adc
and
fcomip
add
ja
cmp
xor
pop
loope
jg
lock
fstl
rcr
fnstsw
mul
cs
cmp
mov
jl
pop
add
sbb
rcrb
icebp
adc
mov
push
ret
xor
add
decl
push
and
dec
jne
mov
bound
test
fdivr
incl
add
andb
push
inc
in
sub
bound
stc
rolb
or
decl
movb
jae
push
adc
jne
push
push
pop
cmp
xlat
dec
out
outsl
xchg
pusha
ss
js
mov
cmp
rclb
mov
inc
loopne
inc
jecxz
pop
xchg
clc
sub
sbb
add
hlt
inc
push
jecxz
mov
jae
repnz
dec
bound
test
std
xor
psadbw
push
or
mov
int
pushf
out
lcall
mov
add
push
xchg
sahf
and
or
pop
push
xor
jmp
or
gs
mov
mov
and
fisttpll
jbe
lcall
fmull
xor
and
je
push
add
pop
repz
add
test
jg
roll
in
add
decl
sbb
loopne
add
xor
adc
add
cmpl
push
xor
test
inc
cmpsb
mov
and
stos
cld
in
clc
js
sub
call
loopne
jae
xor
rorb
rolw
sub
es
ja
out
cli
jg
mov
out
call
cmpb
fildll
pop
lahf
inc
push
std
jmp
gs
push
cmp
rcrl
jge
sbb
arpl
ja
push
push
loop
ljmp
and
inc
cmp
inc
pop
shll
jmp
stc
jne
scas
inc
std
incl
push
je
dec
mov
push
mov
add
xor
push
insb
popf
dec
sbb
and
xor
pop
fdivr
lret
ret
add
lret
sbb
cmpb
call
pop
mov
shrl
in
xchg
or
out
aaa
inc
xor
mov
jl
jne
ja
dec
pushl
cmp
push
rorl
icebp
outsb
sbb
decl
mov
cld
es
jo
xor
ret
adc
ss
pop
ja
add
mov
xchg
add
push
sahf
jp
xor
aaa
cld
mov
fcomip
idiv
mov
mov
cmp
adc
aam
call
mov
and
jae
inc
add
adc
fdivr
xor
call
call
adc
aam
push
es
jb
sarb
popf
pop
call
dec
lds
add
mov
incl
addl
or
lea
imulb
cmp
pop
jne
mov
push
jne
faddl
cli
mov
adc
hlt
jmp
fcomi
loope
cmpsb
call
cld
add
xor
subb
cmpl
jmp
add
sub
pop
jge
xor
out
mov
icebp
mov
sbb
movsb
pusha
aad
stos
out
sti
add
hlt
shlb
or
stc
fs
cmp
sub
call
movntps
pushl
inc
xchg
sahf
push
inc
or
cmp
jle
xchg
popf
rol
cmpsb
or
mov
fmuls
pushf
mov
adc
int3
insb
insb
ret
gs
jne
adc
repz
outsl
cli
jmp
xchg
lock
lret
push
jp
je
aam
mov
sub
icebp
ljmp
mov
mov
aad
sub
mov
push
sar
fdivr
decl
test
fnstcw
lea
rclb
scas
ss
push
idivb
add
cld
lahf
incl
negb
xorb
js
les
mov
mov
mov
stc
mov
lods
add
add
ljmp
faddl
adc
adc
stos
push
sub
push
cmp
dec
or
mov
cmp
jne
test
fwait
call
ror
mov
pop
xchg
je
xchg
add
daa
incl
cmp
stos
mov
sbb
mov
mov
pop
xor
or
lcall
sub
jmp
out
imul
jbe
lret
addl
or
test
test
das
clc
scas
clc
dec
jge
cmp
imul
icebp
xchg
mov
out
mov
cli
xchg
dec
ljmp
jg
adc
int3
les
add
jmp
lahf
pushl
mov
lcall
stos
mov
call
inc
xchg
mov
mov
adc
jmp
sbb
lods
cmpsb
pusha
decb
or
dec
pop
mov
dec
xor
fistps
or
decl
cmpsl
je
xchg
int
mov
leave
ja
sbb
lret
inc
cld
inc
das
cmp
fldenv
in
das
cli
es
adc
test
adcb
jns
push
pop
lret
mov
ret
jo
cld
and
insb
push
jo
lahf
xchg
and
inc
push
dec
dec
mov
frstor
enter
and
and
and
jmp
jno
decl
cmova
mov
clc
jg
mov
xchg
mov
jae
inc
mov
xchg
mov
ljmp
push
jp
add
mov
mov
out
ljmp
addr16
adc
xchg
test
test
rorl
inc
dec
addb
or
jg
pusha
cs
nop
shrl
add
add
dec
adc
lock
xchg
mov
decl
or
push
jnp
mov
popa
add
lea
add
fcomps
cli
pushl
lods
push
and
imul
jmp
sub
pushf
xchg
out
mov
inc
adc
jb
push
divb
cmc
adc
je
dec
dec
or
imul
push
incl
cmp
push
push
call
ret
mov
mov
mov
test
enter
sar
call
fimull
xchg
je
mov
clc
cmp
std
add
pusha
mov
inc
ja
jae
int3
fldt
movsb
inc
jg
aas
iret
sbb
add
lcall
inc
jl
xor
xchg
add
fistps
mov
jo
xor
cmp
stc
inc
push
push
aas
push
mov
pushl
xchg
cmp
es
xchg
inc
aaa
call
in
rolb
adc
imulb
push
adc
cmp
mov
cwtl
sub
sahf
pop
icebp
ljmp
lcall
daa
mov
loop
inc
out
and
call
add
adc
pop
cmp
add
ss
bound
add
call
cld
div
insl
or
add
decl
sub
cmp
je
cmp
test
mov
or
cmpsb
pushf
cmp
mull
sbb
mov
cmp
pop
sti
je
xchg
pop
scas
rorl
ret
jle
in
mov
or
ficoms
ss
and
lock
xorl
push
xor
pop
mov
mov
jo
adc
sti
lret
in
sub
jg
daa
inc
cld
shlb
inc
sub
gs
loopne
lahf
mov
jl
adc
push
les
jge
jae
jmp
lar
outsb
aas
cld
mov
sbb
push
ljmp
test
ja
clc
lcall
mov
sbb
ljmp
outsl
push
faddl
lcall
scas
cmp
inc
in
add
je
mov
int3
into
or
clc
adc
push
dec
in
shll
cld
push
push
push
jg
add
pop
xchg
push
dec
clc
jg
or
mov
dec
ret
push
loope
roll
xor
push
push
stos
pop
cmpsl
shlb
movsb
aaa
pop
push
jg
xchg
jg
hlt
add
decl
xor
pop
sbb
xchg
pop
inc
or
or
or
int3
test
insb
dec
jp
sbb
mov
lcall
cmpsb
lds
adc
cld
cmpsb
sbb
loop
cmp
sub
mov
je
jmp
add
shlb
dec
loope
ljmp
popa
clc
orb
and
ja
adcl
fisubl
mov
and
adc
add
xor
loop
cld
fwait
mov
clc
dec
push
cmp
push
sbbb
loope
push
mov
rclb
lcall
inc
lcall
shlb
sar
lcall
sub
fs
mov
xchg
ljmp
mov
ret
jg
bound
push
loop
rclb
pop
aaa
adc
aaa
testb
clc
xchg
add
jmp
lods
test
jb
das
test
or
lret
insl
inc
push
hlt
jp
call
cmp
push
xor
and
data16
fsubr
or
add
pop
hlt
ljmp
mov
cmp
xchg
sub
pop
fstpt
js
loopne
out
jg
aas
icebp
mov
sar
ret
cs
fldcw
add
loop
push
lcall
cld
addr16
jg
in
loope
pop
ljmp
mov
jne
fsubrs
cmp
ja
scas
pusha
mov
insl
dec
cmpsl
add
aas
cwtl
mov
call
es
pop
inc
mov
push
jg
icebp
pop
inc
jge
lods
sub
adc
scas
loope
es
jmp
in
fwait
push
mov
xor
push
jmp
cmpsb
fbld
test
jg
add
data16
mov
push
inc
jg
lcall
ss
mov
push
je
push
decl
bndstx
cli
or
xchg
mov
out
mov
lock
pushl
cmpl
sub
push
push
popa
push
and
mov
pop
mov
and
or
incl
add
push
sbb
decl
lret
or
ljmp
in
or
jg
adc
pop
andl
mov
or
ss
mov
jo
jmp
xor
aas
sar
mov
inc
mov
push
adc
fidivrl
lret
cld
in
push
aaa
or
adc
data16
pop
lock
mov
aam
add
imul
aad
test
fidivrl
fwait
mov
aas
out
fidivs
test
sub
dec
xchg
aaa
mov
sbb
pushl
mov
adc
mov
pop
pop
loope
out
push
xchg
fdivrp
mov
loop
lret
xchg
call
jmp
mov
xor
pushl
push
add
jge
rol
dec
adc
mov
dec
sub
jo
cld
divl
sar
imul
adc
mov
fdivl
je
sub
cmp
sub
add
pop
jo
adc
adc
dec
ret
ljmp
repz
repnz
cmp
loopne
push
js
hlt
lea
das
push
push
mov
decl
push
mov
or
pusha
cmp
adc
int
jmp
jle
pushl
cmp
mov
mov
js
ret
pushf
pop
adc
fs
test
mov
call
pop
outsl
clc
jl
out
mov
gs
xor
mov
add
std
test
and
mov
outsl
or
jmp
fcmovnb
adc
cmp
insb
or
cmp
pop
inc
mov
jae
add
cmp
push
add
and
imulb
outsl
pop
sti
xor
adc
jg
rolb
pop
in
popa
xlat
test
inc
xchg
fcmovne
mov
mov
jno
inc
jno
mov
inc
xchg
cmp
arpl
sbb
or
inc
ret
cld
cld
xor
loop
xchg
lock
lcall
outsb
sbb
cmpsb
fs
ljmp
loope
fdivr
ljmp
call
xchg
stc
mov
or
lock
add
iret
inc
pop
xchg
clc
xor
sarb
int3
jmp
xor
and
insb
mov
mov
push
jb
lcall
stos
pushf
filds
lods
shll
pop
or
cmpl
mov
scas
loopne
call
sub
add
je
and
lods
out
clc
das
add
mov
insb
cmp
rorl
clc
fldt
push
test
lds
xchg
xsave
cwtl
repz
rcr
or
inc
lea
and
repnz
mov
adc
cmc
jo
fnsave
adc
bnd
das
clc
call
adcb
outsl
adc
cs
cs
add
dec
ret
lcall
aaa
clc
jo
mov
add
mov
in
mov
fildll
jg
lods
add
lar
test
xchg
imul
out
mov
out
loop
loop
incl
push
or
pop
lock
dec
push
aad
push
jmp
cwtl
pop
ret
fidivrs
or
sarb
mov
movl
fadd
aaa
push
sbb
clc
xor
decl
icebp
imul
sbb
insb
add
jg
mov
mov
mov
lahf
dec
push
cmp
decb
add
pop
inc
loop
sbb
lcall
pop
pushf
insb
cmc
shlb
pop
cmp
pop
pop
aam
ret
stos
lods
and
push
test
sbb
or
xchg
mov
sbbl
movsb
movsl
hlt
push
lock
push
lods
repz
lret
cmpsb
lods
add
test
dec
jecxz
xor
insb
mov
mov
xor
icebp
ja
decl
add
jl
cltd
or
mov
jge
scas
xchg
jg
das
sbb
aaa
shlb
rolb
idiv
mov
int
adc
test
cld
rorb
inc
mov
sub
ret
bound
scas
jbe
mov
das
sub
adc
inc
add
inc
mov
std
lret
xchg
incl
pop
loopne
or
popa
add
in
insb
xor
in
jmp
loope
scas
cli
incl
xchg
and
dec
sahf
pop
das
mov
xor
imul
outsb
je
test
inc
out
ret
pop
jp
mov
xchg
sbb
flds
sbb
mov
jo
dec
xchg
mov
push
shrb
insb
cmp
pushf
xchg
cltd
fbld
push
sahf
lea
je
pushl
xchg
pop
cmpb
push
jns
mov
inc
cmp
cmpsb
div
dec
cmp
incl
mov
lret
push
sbb
xchg
insl
outsb
loop
es
jbe
xchg
add
mov
mov
and
push
push
add
xor
fwait
lods
dec
push
lret
gs
inc
incl
ljmp
fcompl
pop
dec
cmp
nop
pop
xor
ds
in
adc
insb
mov
je
mov
add
clc
decl
mov
mov
fsubl
cmc
aam
mov
lea
fdivp
fdivrl
cmpsl
xorl
call
add
and
mov
push
mov
mov
lcall
aam
testl
mov
add
orl
adc
cmp
addl
mov
clc
jl
testb
mov
xchg
sub
xchg
movsl
lcall
xor
mov
mov
pop
jle
xchg
pop
test
mov
xchg
pop
ret
test
cli
scas
xchg
ret
repnz
sub
xor
aad
andl
inc
dec
call
xor
jnp
add
xor
daa
and
out
mov
dec
jno
gs
decl
jle
ljmp
addb
sbb
xor
test
loopne
lcall
std
loope
in
pop
adc
and
push
jg
dec
ss
das
push
out
dec
pop
inc
fisttps
pushl
cmp
repnz
mov
adc
out
mov
arpl
aad
fldcw
fisttps
xchg
jne
jmp
push
stos
xchg
ds
mov
orb
add
xchg
adc
test
orl
int3
push
or
cmp
rcrb
aaa
fistpl
jmp
jo
and
dec
sub
xor
sbb
mov
cmp
add
adc
call
ss
push
or
enter
cmp
test
push
and
inc
sub
add
add
das
filds
jg
xor
mov
incl
fs
roll
int3
mov
inc
int
imul
jmp
sub
lret
or
gs
in
shll
test
dec
aam
push
add
imul
lods
je
mov
pop
push
enter
outsl
cs
inc
incb
push
fs
sbb
jp
lcall
and
mov
push
je
jg
sar
cli
mov
std
push
dec
outsl
sahf
xor
mov
outsb
jl
in
jmp
jg
or
or
insb
push
adc
setp
add
call
aaa
in
lcall
adc
lret
repnz
add
sub
mov
pop
fcomps
cmp
test
or
jecxz
adc
adc
les
pop
dec
cmp
mov
push
clc
call
mov
jo
lahf
mov
sub
add
iret
xorl
call
adc
jecxz
pop
cs
call
das
ss
fistpll
popa
mov
cmp
mov
mov
add
rcrl
dec
mov
dec
add
call
inc
adc
cmp
jae
or
stos
cmp
push
lcall
mov
cmp
add
push
jmp
shlb
ror
mov
out
iret
cli
push
pushl
jle
call
add
mov
andl
and
or
loop
ret
or
cmpsb
mov
in
fiadds
incl
inc
jne
xchg
movsb
dec
mov
decl
lcall
lock
mov
dec
in
aas
std
push
xor
adc
push
fcomps
imul
int
test
add
push
in
mov
push
je
inc
cli
xchg
mov
pop
pop
mov
cmp
xorl
std
dec
je
jg
divb
hlt
notb
in
cmc
aas
inc
int3
adc
push
pop
dec
push
xchg
mov
call
enter
mov
xchg
cld
int3
int
dec
xlat
mov
adc
in
out
jle
push
add
adc
jae
mov
je
jae
int3
mov
adc
push
ss
adc
pop
add
jb
pop
hlt
decl
xor
adc
jge
jp
adcb
sub
jne
incl
xor
add
or
je
dec
add
sbb
fcoml
cli
pop
hlt
inc
cmpsl
cld
popa
inc
add
insl
js
push
ss
test
out
fdivr
ljmp
ret
cmp
mov
cwtl
jl
test
inc
addb
inc
call
inc
das
ret
pushl
movsb
or
inc
ret
or
cld
jo
repnz
dec
sbb
mov
add
jmp
les
or
push
lret
xlat
mov
lock
outsb
mov
jmp
call
cwtl
add
outsl
ljmp
mov
lcall
leave
jg
dec
jne
push
add
pop
cmc
les
insl
sbb
push
out
loopne
mov
add
je
aaa
pop
loope
add
orl
lcall
es
movsb
xlat
xchg
dec
test
inc
adc
jle
iret
insl
rcrb
testl
jg
jns
pop
push
pop
jo
out
mov
jmp
jo
nop
pop
aaa
inc
ret
mov
fxch
push
dec
mov
cwtl
int
cmpsl
fcomps
ss
dec
in
mov
stos
dec
loop
adc
cmc
ud2
out
add
stc
or
pushl
and
loopne
push
inc
cmp
adc
pop
fwait
pop
cltd
stos
mov
icebp
xor
mov
push
out
pop
incb
mulb
mov
stos
jg
cmp
je
xchg
add
clc
mov
jle
jg
mov
cmp
jnp
inc
shrb
mov
sub
xchg
xchg
popf
xor
scas
clc
mov
pop
ljmp
inc
cmp
rorb
hlt
aas
aaa
ljmp
xchg
jecxz
and
and
imul
ljmp
xchg
int
mov
call
mov
jns
sbb
daa
mov
jo
das
ds
add
xor
clc
push
pusha
push
in
mov
lret
outsb
lret
sub
mov
adcb
add
sbb
cmp
ljmp
fildll
cmovno
cmp
mov
push
sbb
inc
ljmp
repnz
xor
std
xor
mov
fmull
lcall
cli
push
mov
or
cmp
sbb
imull
push
pop
xor
dec
scas
lret
in
push
aad
pusha
mov
add
or
push
sbb
mov
mov
arpl
add
lahf
ljmp
sbb
sbb
push
add
mov
incl
pushl
mov
mov
outsl
and
sub
adc
jg
repz
push
js
bound
fwait
or
insl
xor
push
pop
lds
inc
adc
mov
incl
scas
or
aaa
rclb
jg
loop
insb
jne
adcb
xchg
fwait
repz
sahf
lea
sub
js
and
ljmp
lea
sub
lcall
or
push
mov
subb
push
ret
xchg
decl
xchg
scas
mov
arpl
cmp
pop
inc
js
pop
std
outsl
movsb
hlt
or
ds
mov
and
jno
cmp
push
faddl
mov
cwtl
jae
ret
hlt
cmpsl
jg
rcrb
adc
sar
sbb
in
adc
scas
pop
cmpsl
stos
das
mov
pop
aad
inc
inc
xor
das
push
cmp
hlt
stc
jo
sbb
gs
inc
or
loopne
decl
adc
call
fiaddl
fsubrl
inc
fs
mov
call
test
cmp
loop
push
rol
xchg
xchg
xchg
xor
sahf
roll
dec
jmp
ljmp
jg
push
notl
or
add
fistpll
mov
adc
xor
jb
pop
incl
sub
pop
push
or
repnz
mov
sbb
lock
push
pop
lcall
cltd
adc
hlt
jb
mov
mov
movsb
mov
outsb
dec
call
dec
inc
jle
lock
fwait
push
rolb
dec
test
sub
jae
pusha
test
pusha
rol
mov
incl
ja
adc
push
mov
data16
xor
pop
push
test
jl
insb
pop
out
xchg
jg
dec
shll
testl
inc
xor
icebp
fdivl
insb
icebp
xlat
call
decl
cmp
xor
sarb
mov
lock
dec
test
add
inc
and
mov
pop
stos
pop
add
add
mov
jns
jnp
mov
stos
dec
test
add
dec
adc
lcall
jnp
mov
xchg
jg
cmpsl
jmp
jbe
xchg
sbb
push
sbb
loopne
dec
pop
fsubrl
xor
icebp
clc
movsl
rorb
je
push
and
pop
push
movsl
enter
xor
push
ljmp
shrb
jne
jne
push
mov
sbb
fcom
cmpsb
dec
insb
nop
call
pushl
sbb
clc
outsl
aas
dec
push
sub
add
mov
xchg
dec
xchg
mov
outsb
sub
dec
sub
sbb
jmp
out
test
decl
rclb
cld
fistps
call
inc
call
inc
inc
push
add
mov
mov
sub
adc
mov
in
cli
ret
fstpl
adc
subb
pop
out
push
subl
mov
jg
mov
jo
call
clc
incl
movsb
or
push
out
and
popf
push
jns
xchg
aam
in
outsl
xchg
sbb
sbb
xchg
aaa
push
std
bound
mov
ss
jg
cmc
out
outsb
aam
pop
pusha
xorl
fisttpll
xchg
dec
sar
in
jo
lcall
mov
or
mov
or
add
pop
mov
or
vmovaps
sbb
dec
scas
mov
pusha
incl
cmp
jecxz
jae
call
push
jns
sti
orl
iret
adc
pop
into
popa
movsb
pushl
jmp
lea
mov
jo
insb
push
push
cld
mov
fnstsw
jnp
and
mov
call
cmp
shrl
sbb
jg
incl
outsl
xor
xchg
push
arpl
test
mov
mov
rclb
jns
into
hlt
jne
icebp
inc
push
ret
jle
arpl
sahf
push
and
adc
pop
add
jne
dec
incl
mov
jns
mov
or
pusha
fucom
test
insl
sbb
insl
cmp
fldt
push
fs
push
mov
fcomps
call
pop
in
cld
add
mov
std
pop
or
add
and
test
fldcw
lcall
enter
aaa
dec
sub
inc
push
push
sti
fbld
ret
mov
xchg
xchg
jmp
sub
mov
out
xor
mov
in
cmc
inc
mov
lret
pavgw
lds
push
push
xchg
and
mov
jnp
shlb
cmp
xchg
aaa
cmpsb
jnp
mov
xchg
mov
dec
jmp
cmpsl
push
adc
bound
pop
mov
incl
lea
and
add
mov
mov
or
stc
movsl
out
stc
out
jl
push
mov
fwait
cmp
scas
mov
rcr
stos
push
xchg
fdiv
das
cli
cld
mov
stc
mov
aam
inc
or
lret
ljmp
cs
test
jmp
movsb
test
shrl
incl
push
and
movsb
xlat
jl
imul
xchg
sbb
lock
pusha
lea
cmpsb
fisubrl
mov
xor
and
sar
stos
mov
sub
jns
sar
sarb
es
hlt
call
jmp
hlt
mov
and
and
test
inc
scas
inc
pushl
lods
and
and
inc
and
decl
cmp
jle
ret
les
sbb
mov
add
xchg
clc
add
inc
dec
cld
pop
lock
push
mov
outsb
decl
mov
cld
cmp
xor
test
enter
out
clc
push
insb
test
inc
or
fs
fs
mov
clc
push
mov
pushf
push
sub
jg
decl
fsubs
jecxz
dec
and
push
rcll
xor
ret
xchg
ljmp
je
mov
adc
add
mov
pop
jle
jo
jle
ret
pop
push
add
sub
xor
cmp
push
aad
dec
adc
lock
mov
lods
pop
mov
ljmp
outsb
or
and
gs
orl
push
sub
push
sbb
pop
rcrb
sti
mov
pop
call
fimull
add
push
mov
sti
dec
pop
jle
pop
fdivrl
sahf
mov
lcall
decl
out
push
mov
out
aam
dec
in
mov
cmp
push
in
add
mov
mov
lods
test
mov
mov
push
xor
lcall
das
ljmp
je
push
and
fdivl
xor
lahf
sub
aad
loop
insl
inc
adc
roll
push
or
decl
hlt
pop
dec
cld
outsb
pop
xchg
or
add
into
adc
mov
xor
xor
mov
insl
in
incl
loope
sar
lock
cmp
fiaddl
pop
mov
out
in
add
sub
push
hlt
fcomip
sbb
mov
pop
les
mov
cmpsb
add
mov
fildll
mov
and
and
cmp
sub
sar
mov
outsb
pusha
mov
incl
int
inc
dec
xchg
iret
jmp
dec
and
sub
push
push
sar
ljmp
rorb
pop
mov
adc
push
rorl
and
jl
andl
add
add
ljmp
push
movsb
add
lret
mov
push
or
mov
loopne
shrl
add
outsb
jg
cmc
cwtl
dec
pop
ret
mov
pushl
pop
fwait
mov
inc
fimuls
add
nop
fcompl
push
clc
jmp
add
push
adc
xor
mov
pop
lcall
or
jl
icebp
nop
sub
subb
pop
and
pop
call
stos
lret
sar
jmp
mov
mov
xor
mov
pop
mov
mov
jg
push
or
jle
add
stos
jmp
push
sub
inc
xor
cmp
push
push
arpl
incl
pop
mov
dec
xchg
data16
test
jmp
lcall
jp
jl
incl
fwait
je
lds
xor
adc
jb
dec
daa
or
lock
fldl
jmp
add
push
rorb
clc
mov
mov
dec
adc
push
xchg
call
and
std
sbb
cmp
aam
shrb
loope
push
jecxz
lcall
out
sahf
shlb
cs
mov
aaa
dec
add
jnp
mov
inc
popf
inc
or
push
popa
idiv
push
pusha
inc
je
jge
ret
jg
aad
aas
pop
cmp
push
mov
mov
rolb
mov
lock
ds
jb
arpl
cmp
sbb
ljmp
cli
pushl
ret
jno
clc
sbb
fwait
sub
jmp
inc
and
inc
aam
or
mov
dec
mov
mov
inc
add
fwait
cmp
pop
cli
jmp
add
repnz
lcall
jb
jg
call
jb
jg
mov
addr16
push
add
push
scas
mov
cld
fwait
movl
decl
push
stos
xor
or
xor
mov
mov
fmull
incl
inc
mov
les
bound
add
iret
inc
mov
popf
push
aaa
addr16
popa
lcall
lahf
mov
add
test
inc
shll
lcall
nop
push
leave
sbb
test
jmp
setg
dec
xchg
add
ss
jg
jmp
adcl
les
into
test
jnp
cmp
dec
idiv
sbb
add
inc
ljmp
push
gs
lcall
sarb
sbb
add
mov
rcrl
sbb
inc
xchg
fistl
sahf
cli
sub
mov
mov
sbb
cmpl
mov
imul
add
mov
add
int3
push
xor
hlt
sti
xchg
nop
mov
dec
add
bound
sbb
and
subb
pop
addl
roll
pop
push
out
rolb
in
mov
add
ljmp
movsl
test
xchg
mov
adc
sbb
xor
pop
sbb
call
jae
imul
movl
ss
rcll
jb
rclb
dec
test
imul
xor
cmp
add
lcall
pushl
jg
cmc
sub
lods
add
mov
ljmp
push
xchg
jg
cmp
jg
mov
and
arpl
xor
mov
cli
and
dec
add
incb
mov
shrb
add
adc
add
movsb
cmp
or
out
sbb
push
add
test
push
inc
xchg
cmpsb
xor
inc
inc
adc
mov
scas
add
push
mov
inc
into
mov
divb
jne
mov
lcall
push
decl
mov
add
adc
andl
pop
jmp
movq
mov
and
iret
add
mov
negb
outsl
sahf
pushf
cmpsb
mov
sahf
adc
dec
inc
orb
push
cmpsl
inc
xorl
lcall
pushl
divl
rol
mov
je
adc
ljmp
outsl
call
lcall
pop
and
sbb
outsl
cli
call
or
sub
in
mov
mov
cmp
lcall
das
push
push
inc
arpl
or
inc
dec
test
dec
fnstsw
lcall
mov
mov
leave
mov
jbe
mov
dec
je
add
sub
mov
lock
push
mov
pushl
add
pop
xchg
jmp
imul
jbe
or
insb
cmp
jg
cs
sub
mov
fistpl
inc
xchg
pop
add
sbb
lcall
jnp
bound
pop
cmp
push
cmp
mov
dec
test
mov
mov
stos
addr16
add
add
pop
xchg
outsl
or
push
repnz
inc
leave
loopne
enter
imul
lcall
push
jp
or
jge
call
cs
mov
cmpl
shlb
ds
sub
and
ret
sub
add
call
enter
jle
or
mov
loopne
mov
add
lcall
adc
lcall
sahf
decl
pop
mov
and
incl
push
adc
inc
adc
incb
aam
sub
mov
xor
and
jecxz
jmp
fisttps
inc
push
adcb
in
push
clc
pop
adc
pusha
scas
push
loopne
incl
cli
and
and
push
add
or
pop
push
push
pop
pop
jmp
rcl
test
rcrb
dec
and
mov
sbb
cmp
push
orl
hlt
rsm
push
jg
mov
outsb
mov
inc
cmp
outsb
pop
push
adc
mov
iret
out
lock
insl
arpl
push
inc
aam
mov
cmp
pop
cld
or
rcrb
mov
mov
inc
mov
lcall
mov
ja
dec
lods
push
jo
jle
subl
iret
lret
jp
loopne
pop
cld
jl
push
jmp
inc
pop
mov
std
sbbb
clc
arpl
vmaxsd
out
out
mov
int3
or
pop
jl
js
dec
sbb
insb
imul
mov
add
or
mov
js
movsb
call
pusha
lock
decl
mov
dec
or
xor
sub
pop
ss
or
pop
jae
jmp
loopne
popf
mov
and
push
call
push
push
pop
sub
rcl
mov
rcll
cld
call
xor
adc
pop
test
repnz
pop
addr16
add
inc
ret
mov
pop
xor
imul
dec
dec
repz
xchg
cmpsb
xor
jmp
test
add
lcall
call
or
out
fmul
or
lea
push
sbb
mov
sub
call
jp
sbb
push
xor
es
sbb
mov
adc
cmp
ret
cmpsl
adcl
push
ret
mov
es
xor
lock
mov
jbe,pt
shlb
lcall
sti
and
pop
imul
jne
jp
lea
push
mov
hlt
or
add
jl
xchg
ja
loope
push
add
test
outsl
sbb
xor
incl
repnz
inc
xor
mov
mov
arpl
sub
xchg
rcll
xchg
sub
mov
das
sbb
cld
pop
call
inc
test
mov
sbb
sete
or
outsb
mov
fists
inc
inc
sbb
test
shl
mov
jg
icebp
or
out
cmp
aaa
push
cmp
adc
pusha
movd
inc
lcall
pop
push
pop
jns
pop
lock
test
push
xor
sti
fcomps
mov
pop
push
incl
xor
xor
and
xchg
or
pop
cmovge
cli
cmp
xchg
push
jb
enter
mov
cld
jmp
pushf
mov
push
add
pop
je
push
jg
ret
xor
sarb
bound
imul
outsb
leave
mov
add
jmp
pop
test
sub
cli
sbbb
imul
jmp
xchg
jp
sub
stos
jbe
push
mov
pop
aaa
or
or
call
inc
movsb
fucom
testb
xor
cmp
incl
clc
jb
pop
add
test
imul
lds
lds
mov
jnp
decl
mov
mov
ret
idiv
push
pushf
dec
loope
popa
test
xchg
repnz
std
call
add
add
dec
add
cmp
xchg
push
mov
hlt
fwait
add
sub
repnz
pop
add
jg
incl
jmp
andl
js
hlt
andb
jmp
loope
push
cmpb
dec
add
ljmp
fiaddl
std
push
fistpll
dec
test
hlt
sbb
adc
and
ja
push
std
jmp
repnz
test
out
decb
je
movsb
fmull
add
push
cmpsb
mov
sbb
sub
push
mov
xor
mov
mov
dec
hlt
aam
xchg
mov
minps
inc
jo
add
incl
cs
mov
mov
and
rcll
and
jmp
lret
lock
addr16
sub
mov
mov
and
mov
inc
ficoms
cs
aaa
pop
call
and
jg
dec
jb
mov
jecxz
decl
or
lods
push
adc
je
pop
pop
pop
inc
scas
inc
lds
inc
push
cli
pushf
dec
std
jg
xchg
les
hlt
jne
loopne
sub
ja
add
sbb
lahf
mov
push
insb
and
loopne
popa
call
addb
aas
fdiv
ss
push
xchg
iret
rcr
jmp
lock
dec
dec
pop
subl
arpl
test
push
outsl
cmp
jl
and
sbb
bound
stc
test
adcl
inc
repz
and
xlat
ljmp
xchg
lcall
pop
cmp
cwtl
add
or
icebp
scas
ss
lea
sbb
ljmp
rolb
dec
data16
add
adc
mov
jmp
add
sbb
pop
lcall
ss
in
fs
incl
test
pop
adc
xchg
bswap
mov
enter
test
pusha
in
jg
xor
test
aad
add
cli
push
or
imul
inc
loop
ret
lock
decl
icebp
cmpsb
mov
hlt
repnz
adc
int3
push
movsb
jmp
or
lcall
and
mov
imul
xor
lret
imul
pushl
dec
xchg
cltd
add
mov
jb
mov
xor
popa
jg
ljmp
not
pop
out
std
push
cmpsb
push
repz
jg
inc
xor
je
push
mov
inc
hlt
dec
adcb
bnd
dec
pop
push
imul
fdivl
call
stos
and
loopne
adc
or
loopne
inc
xor
ss
cmpsb
cld
add
addb
in
xor
pop
mov
xor
je
ljmp
push
sbb
fisubl
ret
sarb
and
jne
insb
pusha
pushl
jg
mov
call
ss
xchg
sub
push
inc
insl
dec
out
cli
fbstp
push
shrl
je
inc
or
insb
ss
cmp
or
adc
xchg
jge
int3
sub
add
or
mov
cmpsb
add
add
incl
push
and
icebp
xor
mov
mov
and
jno
out
cmc
ss
stos
mov
adc
jbe
mov
insb
xor
cmp
cmpsl
push
insl
loopne,pt
decl
pop
sub
out
cltd
loop
test
or
sarl
pop
cld
lcall
jo
iret
xchg
stos
scas
mov
fimull
mov
inc
pop
lock
das
sub
call
test
mov
movsb
mov
sbb
pop
cmc
jbe
or
test
xlat
mov
cli
add
xor
ljmp
push
fmuls
or
push
fdivs
fisubs
mulb
pop
and
aaa
std
sub
adc
subb
mov
pop
sbb
pop
popf
cli
decl
in
push
jp
hlt
or
jbe
test
outsl
clc
ret
add
lcall
fbld
adc
push
dec
cltd
add
subl
dec
push
cld
pop
cwtl
ret
mov
in
rolb
aas
out
sub
test
inc
add
je
sub
sub
out
xor
idiv
faddp
inc
mov
add
mov
push
repnz
ljmp
sub
push
ficomps
xchg
cmp
dec
dec
xor
pop
mov
pop
hlt
sti
dec
dec
roll
bound
call
inc
mov
xorb
pop
lret
pop
push
push
sti
jb
out
cmp
incl
xchg
xchg
push
ret
xor
hlt
cmp
adc
aad
clc
enter
jle
je
lds
push
xchg
aam
test
adc
bound
jns
lcall
mov
in
adc
xor
or
adc
add
add
call
cld
pushl
xor
les
leave
in
push
into
inc
rorb
dec
or
outsl
pushl
sbb
mov
fisubs
or
adc
rcrb
sti
data16
mov
fisttps
inc
mov
xor
jl
test
mov
add
loope
inc
ss
xor
add
push
and
inc
adc
and
sub
js
pop
ret
pop
scas
xchg
je
std
add
jg
ljmp
pop
sub
call
mov
inc
js
int
adc
test
cmp
jl
loopne
xor
xchg
adc
andl
jg
add
xor
push
cld
je
xchg
add
fwait
mov
shl
push
push
cld
in
outsb
call
pop
fdivrp
pop
divb
lret
test
adc
daa
jmp
data16
jmp
cmp
cmpsb
roll
outsl
pushl
push
insb
sar
mov
mov
adc
dec
clc
loopne,pt
or
dec
xchg
ret
push
das
fistpl
or
xchg
jmp
lods
pop
push
mov
ljmp
push
insl
repnz
xor
mov
loope
push
out
push
or
mov
aad
push
push
and
repnz
mov
add
xchg
adc
mov
fcoms
jl
jmp
outsb
mov
test
scas
add
incl
push
pushf
mov
mov
inc
mov
call
push
pop
and
xlat
xor
arpl
xchg
andb
cmp
mov
scas
aas
inc
adc
cld
push
inc
pop
pushf
clc
shrd
popf
repz
adc
pusha
decl
repnz
push
mov
cli
test
inc
lret
sub
pop
cmpl
nop
or
decl
mov
push
inc
cmpsb
cmpsl
pop
push
jle
mov
lcall
data16
dec
icebp
cli
pop
fistl
and
testb
aam
ljmp
push
sbbl
xchg
mov
or
push
mov
inc
jnp
sti
jle
push
aad
fcomip
add
cmp
mov
xor
jne
and
mov
xor
ljmp
loopne
jne
push
test
in
adcb
push
and
mov
decl
jae
mov
or
es
inc
pop
in
jecxz
out
inc
inc
or
lcall
push
lock
std
or
sbb
xchg
pop
sub
aas
jbe
mov
xor
jg
out
ja
push
jp
xchg
rolb
fiadds
mov
clc
adc
cmpsb
and
pushl
std
aas
or
call
adc
jo
cmp
jmp
loop
add
idiv
decl
jb
ja
pop
fs
in
cli
inc
pop
xchg
mov
lock
ljmp
adc
cld
adc
xor
decl
adc
mov
outsb
rorb
lret
mov
xor
mov
mov
add
or
loop
dec
jo
ljmp
push
cmp
lea
scas
loope
cmp
pop
adc
mov
jmp
dec
shll
inc
push
outsb
ret
sbb
dec
cmp
dec
pop
add
les
mov
xchg
clc
lahf
mov
adc
jg
pop
push
sbb
mov
incl
jns
jp
incl
mov
push
outsl
rol
push
jp
pusha
loopne
jne
push
shrl
ret
ja
mov
cli
call
and
add
push
incb
out
adc
push
mov
bound
in
mov
outsb
lcall
fisubrs
ljmp
or
or
incl
xchg
dec
add
push
add
add
pop
pmulhuw
add
add
shll
repnz
clc
jb
decl
test
and
jge
mov
mov
adc
into
add
mov
inc
add
mov
std
idiv
mov
cmpsb
jle
push
enter
jo
outsb
inc
mov
mov
cltd
mov
xor
xchg
jl
ret
lret
mov
lods
xor
push
jge
mov
xchg
insl
std
aam
repnz
mov
mov
jl
pop
lahf
popa
jno
cmc
lcall
xor
gs
xchg
mov
sub
movl
aas
dec
dec
in
mov
call
lock
aas
arpl
sbb
aad
decl
sub
jg
push
mov
mov
mov
jg
or
cmp
jo
adc
mov
sar
fisttps
mov
pop
lods
lock
cmp
inc
ja
push
in
lcall
enter
ljmp
mov
popa
pop
loop
mov
shrl
je
sub
aaa
lcall
pop
inc
and
outsb
mov
subb
add
insb
out
fs
pop
idivb
pushl
ss
test
mov
sbb
and
lea
fcoms
push
sbb
jo
sub
adc
push
test
xor
hlt
fxch
dec
or
outsb
xor
decl
je
cmpsb
jge
sti
fbstp
mov
pop
stos
lock
mov
mov
mov
xchg
popf
adcl
iret
push
fdivrs
fldenv
pusha
or
loope
popf
dec
push
push
pop
hlt
hlt
mov
add
or
test
cmpl
add
ljmp
cmp
rclb
inc
rol
inc
push
movsb
imul
jmp
fisubs
ret
ljmp
pop
std
jnp
dec
mov
movb
pop
dec
xor
outsl
jmp
mov
jg
and
ljmp
jae
mov
mov
xor
pop
add
sar
jmp
jnp
add
aam
inc
mov
aam
push
test
es
insb
decl
add
clc
filds
andl
push
or
xor
push
jbe
cs
mov
mov
push
call
inc
loop
add
xor
mov
js
sub
jl
mov
mov
enter
pop
cmpsb
fisttpl
pop
ss
mov
out
loope
cmp
les
xchg
test
idiv
push
xchg
adc
cmp
pop
in
cmp
stos
pop
adc
push
cltd
aas
sub
dec
pop
imulb
fdivr
test
incl
jns
push
mov
sbb
and
fcomp
outsb
ror
xor
pop
fwait
push
insb
or
loopne
repz
hlt
je
pushl
loop
mov
cli
mov
push
or
cmpsb
xlat
out
mov
bound
jg
jg
lahf
mov
loop
decl
icebp
pop
wrmsr
sbb
add
inc
std
ret
dec
adc
dec
maxps
fwait
scas
sarl
jge
sub
xchg
popa
lcall
aam
xor
in
jo
push
mov
aaa
aaa
and
inc
sbb
call
pop
inc
push
mov
or
jl
cvtpi2ps
jl
es
aam
iret
cwtl
jne
cmpsb
lcall
sahf
lcall
lock
add
pop
test
lcall
mov
js
adc
dec
inc
jb
pop
pop
es
pop
push
sbb
push
inc
mov
call
adc
popa
loop
jmp
ret
fistps
movsb
incl
jecxz
mov
incl
rorb
mov
aas
leave
xor
jmp
or
or
out
pop
add
pop
aam
movb
and
ret
and
and
dec
add
insb
mov
loop
rcrb
add
or
add
xchg
aaa
jne
ljmp
cmp
jne
or
aad
jl
sbb
cmpl
sbb
push
xor
lock
decl
adc
pushf
int
cmp
jae
roll
pop
out
std
pushl
adc
lock
lock
xchg
dec
je
adc
xchg
pop
jnp
insb
cmp
mov
out
sub
ljmp
inc
je
adc
pusha
jb
add
xor
addl
mov
jns
jbe
test
jne
pop
and
jno
imul
je
mov
cltd
adc
or
not
cmpb
decl
push
push
out
dec
adc
test
imul
sarl
loopne
mov
jmp
push
pop
jo
fucomp
ds
push
and
xchg
jne
cli
xor
or
cmpsb
stos
in
cmp
cmp
test
and
adc
data16
decl
push
add
sahf
xorl
clc
fcomip
adc
call
mov
or
dec
dec
pop
les
lea
jnp
das
fs
dec
and
jns
cmp
xor
pop
lock
add
divb
pop
mov
bound
aam
mov
outsl
int3
mov
mov
clc
pop
out
pop
jecxz
mov
pop
lea
subl
inc
cmp
pop
icebp
mov
push
in
and
dec
aas
pop
shl
fstp
or
testb
rsqrtss
outsb
dec
inc
cmp
xchg
mov
push
lret
mov
stos
mov
loope
js
mov
aam
mov
xor
mov
in
lods
mov
jge
mov
add
sub
xor
lcall
fwait
je
ja
ret
dec
repz
mov
xor
aam
inc
inc
inc
cmp
sub
sbb
std
push
add
pushl
sbb
popa
test
adc
popa
das
std
or
dec
fdivrp
incl
push
pop
sbb
inc
out
or
fdivrs
les
divb
fimuls
fisubl
fcomip
mov
adc
mov
and
jle
xor
or
pusha
cs
mov
ret
mov
adc
sbb
in
ss
xchg
outsl
add
ss
outsl
jmp
int3
inc
lock
stos
sbb
scas
jg
inc
push
dec
xor
cmpsb
ret
imul
lea
lcall
lea
fisubs
pop
adc
dec
lcall
lcall
ficompl
dec
push
adc
xor
mulb
cmp
jmp
mov
pop
xor
pop
leave
or
inc
and
pop
shll
loopne
inc
dec
xorb
out
cli
ljmp
imul
js
or
in
lcall
movsb
mov
xchg
fiaddl
and
xor
scas
int3
add
dec
data16
jne
scas
inc
mov
cmp
insb
inc
addr16
jecxz
cltd
mov
lcall
cmc
add
inc
dec
push
add
pushl
mov
dec
pop
mov
jb
out
adc
sub
cli
filds
push
sub
jle
lret
sahf
mov
and
adc
or
cmpsb
test
inc
sub
cmp
ud0
add
ret
xchg
xchg
dec
cmp
mov
outsl
mov
pop
mov
jnp
or
cwtl
cmc
mov
push
jo
lock
xadd
pop
out
repnz
imul
sub
xor
pop
cmp
orb
js
sbb
jmp
xchg
jne
shrb
insb
rolb
jmp
push
lcall
ret
lret
aaa
rorb
pushl
movd
test
push
xor
push
pop
push
mov
add
icebp
push
pop
addl
xchg
push
push
mov
jmp
int3
push
mov
add
jle
inc
test
cmpsb
cmpsl
mov
test
mov
cld
call
push
sar
pop
aam
xchg
jne
cmp
lods
les
ret
outsl
jne
jbe
inc
sbb
mov
call
fsubs
xchg
sub
and
cmc
and
movsl
lret
int3
sbb
test
test
fisubs
jne
mov
nop
lret
xor
call
gs
cmp
add
sahf
jo
mov
and
lahf
mov
sarl
movhlps
das
sbbb
dec
fisubrl
add
sub
ja
cmove
cli
inc
inc
cmp
pusha
sbb
and
rcrl
mov
jnp
aas
fidivrl
mov
js
scas
stos
inc
and
in
dec
testl
pop
lods
mov
mov
bound
sbb
mov
xchg
pushl
dec
push
push
fldt
push
sbb
repz
jb
iret
testb
dec
xor
push
sbb
lock
incl
stos
dec
hlt
or
jp
lcall
loopne
mov
in
dec
or
fadds
imulb
jl
pop
mov
add
add
cld
popa
mov
nop
xlat
add
ds
mov
aas
push
shlb
and
movsb
mov
mov
mov
cwtl
adc
es
xchg
aaa
mov
or
out
sub
inc
sahf
les
loop
imul
ljmp
mov
push
shlb
add
mov
js
mov
jp
pop
jb
and
fbld
jmp
push
dec
sub
stos
sti
mov
xchg
test
icebp
xor
sub
stos
pop
ds
mov
sub
mov
push
sbb
pushl
and
fiaddl
loopne
sbb
push
xchg
fistpll
movsl
inc
out
enter
mov
adc
inc
lock
and
push
mov
fistl
jg
lret
insb
add
popa
sub
cld
push
fs
pop
dec
adc
mov
add
sbb
mulb
lcall
mov
jno
lret
dec
inc
js
inc
ljmp
mov
in
cmp
adc
sbb
dec
fisttpll
push
or
inc
rclb
xor
imul
or
insb
xor
jmp
push
add
adc
jg
add
or
jb
inc
aaa
insl
fisubl
gs
ljmp
sbb
in
movsb
add
ret
add
mov
add
mov
data16
call
data16
inc
arpl
lahf
pop
jbe
jns
cmpsl
mov
ficompl
inc
jb
test
mov
sbb
dec
pushl
mov
bound
xor
inc
jae
roll
inc
jl
add
ja
es
incl
jmp
in
loopne,pt
add
ljmp
pushf
cli
movsb
jl
sub
call
shll
inc
pop
nop
mov
std
aaa
repnz
ret
cld
arpl
push
mov
mov
scas
arpl
shlb
leave
test
jno
mov
pusha
inc
loopne
jp
add
call
push
cmp
clc
gs
jl
test
adc
dec
or
pushl
in
hlt
xchg
cld
or
cmp
movsl
xor
gs
movsl
and
mov
sar
js
outsb
arpl
cmp
pushl
cli
push
mov
outsb
cmp
cmpsb
push
shr
sahf
xor
pushf
pusha
mov
mov
mov
push
loope
cmp
fcoms
ljmp
or
inc
jg
cmp
call
adc
call
jmp
test
ja
in
movsb
aaa
punpckhdq
hlt
jmp
lea
addl
xor
test
pop
mov
adc
sbbl
xchg
sar
push
xchg
xorl
lret
aaa
mov
or
push
mov
ljmp
cwtl
nop
and
inc
mov
insb
jne
insl
fwait
mov
lods
mov
jns
aad
out
push
decl
scas
ss
fcomps
ja
adc
cmovo
test
and
call
call
adc
adc
and
loop
or
lret
outsl
push
jmp
push
mov
call
mov
push
add
and
or
pop
loopne
adc
je
cmpsb
pushl
cmp
mov
adc
pop
push
pop
lds
lcall
sub
sahf
push
fistl
aad
sbb
std
push
xor
call
add
or
mov
xor
jl
push
add
and
cmpsl
jno
cmp
pop
stc
dec
mov
mov
outsb
mov
xor
mov
push
call
mov
or
mov
cmp
push
sub
movsl
decl
fimuls
test
enter
jl
cwtl
and
fcomip
or
inc
dec
shl
jno
les
in
xchg
push
lcall
cli
ljmp
add
xor
pop
imul
or
call
shlb
loop
pop
fistpll
adc
pop
lcall
sub
xor
mov
outsl
push
lock
call
push
mov
and
adc
and
add
stos
movsb
outsb
xlat
lcall
loopne
ss
mov
dec
pop
sahf
sahf
pop
sub
xchg
inc
and
mov
in
loopne
mov
sahf
ret
jo
mov
fdiv
in
sahf
mov
aas
shl
in
sbb
pop
jo
pop
ja
adc
lock
xchg
aas
repz
lret
adc
lds
decl
cmp
test
movsb
into
test
fdivs
jne
xor
mov
incl
jmp
out
pop
and
xor
jae
jo
xor
enter
push
mov
data16
mov
lock
lock
rol
ljmp
inc
ja
mov
cmp
int3
sar
push
push
sahf
cld
mov
jmp
jg
cmpsl
pop
nop
push
jmp
popa
cmpb
out
in
stos
lret
push
imul
add
or
fs
lock
call
jge
pop
ret
mov
call
in
je
in
rcl
sbb
pop
mov
ret
inc
jle
test
pop
dec
push
push
mov
pop
bound
adc
jg
pop
nop
filds
lds
adc
repz
cli
or
inc
pop
jg
jg
jg
push
call
mov
xchg
dec
and
popa
pop
lods
or
and
in
push
outsl
jo
pop
dec
shll
movsb
xchg
jne
inc
std
push
aaa
xor
sub
aad
outsl
cmpsb
decl
lcall
xchg
andl
jo
add
hlt
mov
jbe
rolb
push
ret
xor
popa
outsl
dec
or
je
pushl
inc
mov
cld
sub
or
test
adc
scas
xchg
push
mov
leave
ret
sbb
hlt
lret
ljmp
push
jmp
shll
mov
add
es
jmp
inc
sub
call
insl
cs
pushf
sub
aas
outsl
in
push
ficompl
incl
cmp
call
fiaddl
in
decl
repnz
xor
add
sub
mov
pop
push
mov
orb
mov
ss
or
in
outsl
enter
faddl
jg
and
lock
popf
lret
sbb
xorl
arpl
push
xor
cli
mov
add
xchg
jmp
inc
xlat
sbb
dec
pop
fs
or
ljmp
icebp
mov
aad
inc
movsl
call
jne
xchg
or
xor
lcall
clc
sar
cmp
test
add
or
decl
sti
clc
lahf
clc
pop
cld
cmp
pop
sub
cld
ret
leave
in
push
bound
and
mov
popl
push
movsl
in
std
pop
repnz
mov
stos
add
jmp
xchg
decl
mov
jge
filds
mov
push
cli
loopne
push
cwtl
push
js
pop
mov
or
cld
pushl
scas
cmp
flds
in
cmp
je
fs
pop
sbb
fldpi
sbb
mov
sti
out
enter
jge
and
or
outsl
faddl
insb
and
mov
test
and
sahf
jmp
shrl
sbb
imul
cmc
bound
nop
jmp
add
rol
xor
mov
add
mov
jnp
filds
mov
jne
ret
rol
add
cmp
inc
sbb
ljmp
int
pop
lcall
pushw
enter
mov
push
pop
fs
cmp
call
add
cmp
incl
pop
or
push
lret
into
add
shl
inc
inc
inc
add
push
in
lcall
ljmp
decl
cmp
mov
shlb
mov
push
call
test
int
mov
push
pop
mov
mov
icebp
xor
cli
mulb
lcall
fnsave
pop
ljmp
mov
bound
lea
out
test
xchg
mov
out
xor
push
mov
int
push
daa
or
push
incl
xlat
push
repnz
pusha
or
iret
aad
and
adc
pop
inc
push
jmp
ss
ljmp
push
xor
inc
mov
cs
das
mov
outsb
xor
fwait
add
mov
pop
push
or
sbb
push
jecxz
push
push
movsb
push
mov
jle
cmp
cmp
incl
sub
jmp
mov
cs
scas
outsl
dec
xor
sbb
call
jle
push
cmp
mov
shlb
pushl
dec
mov
mov
shrb
lcall
or
xchg
adc
cmp
ss
sar
dec
sub
jno
loope
mov
mov
pop
loop
or
sbb
std
inc
sbb
subl
lret
xchg
sub
decl
insb
jns
mov
or
mov
jmp
cmpsb
jb
insl
hlt
jbe
int
les
and
sub
outsl
pusha
jbe
jl
xor
clc
in
push
sbb
fstpt
movsb
pop
aas
lods
or
cld
xchg
aam
sbb
enter
loopne
pop
test
loop
call
arpl
sub
jg
cmp
jp
inc
bnd
lods
jmp
cmpb
pushf
fs
inc
stc
and
dec
test
pushf
cmp
leave
ss
ljmp
sar
add
adc
or
js
orl
xor
add
add
mov
jecxz
sub
fwait
ss
push
push
xor
mov
pusha
test
dec
popf
xchg
cmp
std
push
pop
lods
adc
jne
lods
jo
jmp
dec
jmp
fcoml
push
lea
push
or
ret
inc
ljmp
jne
mov
dec
push
addr16
ja
cmpsb
sub
pop
sub
pushw
jns
dec
cmp
lcall
mov
xor
xchg
int
cs
and
pop
jne
sub
movsb
add
fisttps
ja
push
daa
push
cmc
stc
incl
add
fcoml
sbb
call
jecxz
inc
mov
mov
and
sarb
lcall
inc
std
mov
pop
mov
sbb
enter
decl
daa
loopne
add
pushf
mov
movsb
jae
sti
cmp
and
ss
lcall
in
jmp
int
push
lcall
clc
cmp
lcall
push
xor
pop
add
pop
fiaddl
or
add
sti
push
push
cmp
cmp
ljmp
mov
icebp
adc
push
int3
test
std
adc
cmpsl
mov
sub
lock
jmp
sub
incl
lret
sub
push
popf
imul
data16
cld
in
ret
pushl
sbbl
sbb
cmp
add
rolb
inc
ds
sbbb
ja
dec
adc
outsl
clc
mov
mov
mov
cmp
addl
loop
pop
sbb
in
or
pusha
ret
jg
pushl
add
mov
cli
jb
dec
nop
pop
scas
sarb
icebp
mov
incl
call
fwait
sub
dec
leave
mov
push
outsb
sbbl
repnz
pop
dec
jl
or
xchg
sub
sbb
insl
xor
pushl
inc
lahf
add
xchg
push
sub
mov
mov
or
popa
enter
gs
cmp
sbb
mov
push
arpl
inc
add
sbb
das
sub
adc
incl
cmp
jmp
mov
divb
fcoml
nop
push
pop
pushf
or
push
xor
xchg
mov
cwtl
sar
mov
test
and
ret
mov
and
out
adcb
cmp
mov
subl
decl
flds
popa
xor
rcrb
lods
shll
fidivs
add
mov
call
adc
sar
repnz
mov
incb
push
or
dec
scas
and
incl
sbb
ss
ret
inc
inc
dec
jns
xchg
jl
incl
jmp
jmp
jmp
mov
adc
lret
dec
jae
ja
orb
mov
lcall
or
mov
daa
popa
daa
gs
cs
cld
xor
sar
decl
insl
mov
add
or
inc
outsl
mov
jo
cmp
cmp
jg
jge
push
fcomps
std
mov
xchg
mov
movsb
adc
xchg
pop
ljmp
lods
mov
mov
pop
shll
mov
insb
sub
adc
push
or
or
ljmp
shrb
push
mov
les
psubsw
mov
jnp
clc
pop
push
outsb
in
lock
mov
pop
and
pop
icebp
lcall
loop
in
mov
pop
sbb
shrl
xchg
and
je
push
mov
je
addr16
adc
je
and
cmp
popf
add
mov
mov
adcb
cmpl
hlt
sbb
or
jge
hlt
push
aas
sti
cmc
out
and
decl
ret
adc
fsub
cmpsb
pop
fwait
std
or
ljmp
cmp
push
add
icebp
jo
cmp
pop
lcall
add
and
sub
pop
call
xchg
xchg
xorl
imul
and
sbb
and
scas
mov
jo
test
cmp
add
stc
dec
sub
scas
int
and
dec
fldcw
fadds
adc
jmp
push
pop
xor
jo
nop
pop
or
mov
decl
enter
jb
adc
mov
outsl
insb
mov
adc
pop
into
dec
fimull
lcall
outsl
xor
sahf
push
and
popf
loop
adc
mov
add
lock
frstor
xor
call
jne
aaa
fiadds
cmp
push
cld
lcall
adc
pop
mov
mov
es
xor
into
sbb
test
clc
daa
add
test
lock
sub
in
add
sbb
test
scas
xor
popa
xor
popf
mov
jg
dec
cltd
push
stos
nop
repz
es
adc
adcl
scas
clc
lcall
fnsave
loop
adc
das
ss
insb
add
jb
add
lods
xor
fdivr
fisttps
sti
push
bound
sbb
inc
test
mov
mov
adc
decl
jle
push
lret
jmp
push
inc
ja
add
adc
and
pop
test
hlt
jg
inc
pusha
add
rorl
lahf
push
jge
or
incl
mov
cli
lcall
jp
and
inc
out
adc
adc
mov
int
and
cld
mov
ja
fmul
aam
jg
jmp
cwtl
mov
pop
imul
js
dec
repnz
in
clc
int3
xor
out
mov
add
je
repnz
lock
dec
mov
adc
cmp
dec
lret
leave
or
jg
inc
mov
pop
outsl
or
call
in
mov
jmp
dec
pop
fimull
or
repnz
dec
mov
sub
inc
pusha
pushaw
inc
add
or
call
pushl
mov
pop
push
or
adcw
lea
jl
or
aaa
sub
pop
dec
xchg
mov
out
call
adc
jo
popl
jg
aaa
addr16
cmpsb
push
and
jmp
call
jb
inc
xchg
pop
and
cwtl
pop
incl
inc
adc
xor
outsl
and
push
sub
fiaddl
push
punpckhbw
cwtl
lcall
inc
pop
loopne
loop
and
add
fdivrs
enter
jecxz
push
push
in
inc
xor
orl
call
cmp
lcall
insb
notl
xlat
hlt
loopne
in
decl
repz
sbbb
sbb
call
rorb
popf
lock
enter
dec
add
sub
cli
bound
ret
ret
add
jg
int3
push
call
mov
test
cmp
pop
sub
loop
fbstp
cld
lds
imul
rol
xor
js
shlb
push
aas
sub
mov
cmp
enter
dec
or
fwait
adc
std
jmp
ds
lcall
icebp
jp
jo
pop
pop
pop
and
jp
cmc
out
sti
mov
shl
enter
adc
pop
idiv
dec
je
cmp
cmp
fistpll
cmp
imul
pusha
rorl
pushl
mov
cmpb
lock
pop
add
in
scas
xor
adc
loop
jb
xchg
imul
js
add
lcall
or
adc
push
jg
repnz
dec
les
aaa
sub
negb
inc
jne
sbb
fbld
pop
add
mov
inc
add
and
imul
call
sbb
scas
add
inc
pop
adc
es
lea
pusha
jg
fists
jg
push
call
scas
das
int3
push
cmp
inc
cmp
mov
add
fwait
jl
call
int3
lock
comiss
pop
mov
xchg
test
jge
fsubl
pop
add
mov
mov
movsb
dec
lret
roll
decl
and
les
hlt
cld
add
out
and
loop
es
adc
hlt
icebp
push
add
push
sub
push
jl
inc
xchg
sub
stc
aad
decl
rcrl
push
and
jmp
mov
in
jl
popf
dec
mov
push
jne
rcll
push
orb
mov
cli
lcall
psubd
incl
inc
popa
mov
inc
mov
pop
pushl
mov
hlt
cmp
jle
add
mov
jge
icebp
xchg
cs
das
movsb
repz
das
or
push
loopne
adc
lcall
add
xor
or
xchg
jnp
push
pop
push
push
inc
xor
inc
loop
xchg
mov
clc
sbb
jmp
stos
jnp
pushf
jg
in
lahf
inc
push
jo
ljmp
inc
fadds
test
pop
fisubs
adc
or
aam
push
mov
das
cli
cmpsb
mov
sarb
call
push
mov
jmp
aad
add
sbb
call
pushl
mov
sub
cmp
fsubs
orb
jae
data16
lcall
sbb
pop
loope
popa
xchg
sub
jg
shrb
call
or
out
add
jmp
imul
inc
cmpb
push
adc
imul
adc
mov
sub
jl
sub
mov
xchg
or
ljmp
test
inc
mov
cmpsl
push
add
jns
mov
jmp
mov
xor
push
mov
ficompl
inc
cmp
aam
int3
outsb
and
fwait
inc
loopne
add
inc
and
or
cmpsl
jg
out
call
hlt
call
jg
aad
sbb
addr16
in
add
aad
sbb
inc
cs
sub
sar
call
pop
add
outsb
pop
jp
aad
and
hlt
movsl
data16
jmp
outsb
shlb
add
lcall
es
fcompl
cmp
js
add
jo
push
xchg
adc
xor
add
incl
lahf
add
sar
add
sahf
fs
lock
add
sar
ficoml
mov
sub
adc
sub
fsubl
adc
das
shrb
push
test
sub
xlat
sbb
pushl
cld
rcl
call
or
jge
cli
add
add
sbb
test
xchg
ljmp
or
out
mov
mov
mov
call
lods
cmpsb
scas
add
popa
pop
jmp
cld
or
xor
push
cld
sti
cltd
sub
add
orb
jle
cwtl
in
mov
lcall
xchg
push
pop
jl
pop
dec
xor
mov
sub
stos
sub
xlat
mov
aad
stos
iret
inc
decl
test
mov
cld
daa
jb
add
inc
push
ljmp
ficoms
das
jmp
ljmp
jbe
pop
jne
jg
pushf
xor
outsb
mov
fistps
addl
pop
inc
test
mov
pop
lods
jne
xchg
add
xchg
and
dec
xor
jb
cli
jg
ret
test
xor
mov
jne
gs
ficoml
pop
xchg
je
les
pop
subb
sar
push
dec
adc
jae
fidivl
adc
lcall
mov
loope
sub
sbb
cmp
xchg
dec
mov
decl
imul
dec
push
jge
ss
hlt
push
call
fiadds
std
call
imul
sub
stc
xchg
aaa
subl
pushl
dec
add
inc
icebp
pushl
mov
lds
ja
mov
ret
loopne
or
cmp
push
jg
jmp
fdivl
call
xchg
mov
fdivrl
loopne
pop
jle
inc
in
incl
outsb
pop
call
aas
aam
cli
and
fisubrs
lcall
mov
xor
fistl
mov
mov
sti
inc
rcrl
xchg
ljmp
cli
loopne
jmp
adc
jo
or
fisubs
xchg
pop
fisttps
mov
loopne
pop
mov
adc
andb
fdivrs
fbld
xchg
out
or
mov
fildll
jge
cmp
outsb
das
cs
test
xchg
or
inc
mov
add
mov
call
push
lcall
inc
gs
jmp
pop
pushf
fstp
xchg
idiv
lds
cmc
or
pop
pop
imul
cmp
pop
push
pusha
jg
lock
adc
call
or
add
jmp
add
loopne
les
pop
inc
add
jecxz
clc
fistpll
aaa
ret
and
pusha
popf
xor
cmpl
movsl
cmp
cs
incl
jb
or
and
push
jecxz
call
pop
clc
or
mov
or
adc
inc
or
inc
xor
mov
ja
push
xchg
jmp
and
and
iret
aam
shll
aad
or
fstl
mov
lea
mov
add
inc
xor
stos
cmp
es
filds
pushl
jne
mov
add
pushl
incl
xor
adc
xor
jne
push
lods
cli
sti
mov
mov
call
xor
push
push
stos
mov
add
cli
mov
sub
mov
fnstenv
sub
sub
pop
adc
cmp
xchg
add
andb
shl
pop
fisttps
scas
cli
mov
andb
sti
add
or
cltd
push
ljmp
cwtl
inc
ja
test
sbb
dec
add
clc
ljmp
fmull
rcll
das
push
stos
mov
bnd
pop
std
decl
cmp
adc
sbb
cmp
push
xchg
jno
arpl
pop
stos
xchg
lock
ljmp
jo
pop
pusha
xchg
ljmp
inc
pushl
outsb
repnz
pop
pop
rcr
incl
push
cld
clc
mov
inc
jne
mov
dec
mov
mov
or
outsb
nop
mov
pop
incb
jg
incl
inc
dec
mov
jge
push
inc
js
add
add
sub
add
mov
decl
cmp
sub
fs
push
inc
xor
aaa
pop
addr16
scas
scas
mov
push
pop
das
clc
decl
loop
push
add
dec
repnz
xchg
dec
and
add
std
lcall
dec
call
insl
adc
movsb
xchg
lock
pop
stos
mov
mov
jge
shr
movups
jle
bound
jg
hlt
imul
fdivrs
jnp
jne
call
xor
add
jecxz
inc
push
notb
mov
jo
es
sbb
mov
incl
sarb
sub
leave
rclb
xor
sar
dec
mov
pop
call
jb
cld
mov
cld
inc
loope
push
mov
mov
repnz
sarb
dec
pop
in
fucomip
mov
jne
mov
lock
clc
outsb
cmp
lock
decl
fimuls
cwtl
push
mov
add
gs
movsb
lods
mov
mov
adc
sar
call
xchg
add
and
hlt
movsb
push
inc
push
bound
aaa
rcrb
add
in
xor
adc
mov
and
dec
les
and
or
std
call
xchg
push
fbstp
cmpsl
xor
orb
sar
inc
je
shr
enter
and
pop
pop
andl
fisttpl
fcomps
arpl
call
pop
inc
lcall
pop
mov
lret
shlb
incl
shlb
shlb
xchg
fstpl
add
cmp
push
cmpsb
cmp
test
push
pusha
xor
or
pop
inc
xlat
lcall
adc
sub
push
sub
adc
jg
repnz
xchg
je
jmp
push
bound
decl
xor
leave
mov
push
push
fcomip
mov
sbb
sbb
and
push
mov
pop
and
inc
lods
dec
shll
xchg
push
orb
ja
push
cmp
mov
add
incl
mov
orb
xchg
xor
push
jae
pusha
jae
loopne
push
jmp
fs
dec
test
aaa
decl
daa
test
dec
in
or
mov
bound
out
insb
jb
shrb
fimuls
or
mov
idivb
fsubl
loope
icebp
xchg
add
or
cld
frstor
stc
rclb
push
js
mov
cmp
shll
stos
imul
mov
insb
fimull
mov
dec
rolb
add
push
add
cmc
push
sub
mov
xor
or
add
add
outsl
mov
cmc
mov
add
loopne
lock
jp
xor
movsb
daa
inc
aam
push
pusha
lods
out
push
adc
inc
mov
cmp
jl
sub
lods
das
insl
scas
test
sub
ret
inc
test
call
loopne
sti
lods
jp
and
mov
push
insl
fnsave
pushf
pushl
incl
out
dec
icebp
mov
push
jg
add
mov
loope
xchg
sti
lcall
rolb
pushl
add
or
adc
sbb
outsb
decl
jne
imul
into
mov
outsl
testb
cltd
xor
or
stc
clc
das
add
ljmp
and
or
sbb
push
aaa
sub
lock
cmp
or
jne
sarb
and
aaa
xor
push
cmp
mov
addr16
subb
stos
movsb
jo
jl
sbb
cmp
jg
mov
pusha
sti
pop
cmp
popa
pop
pop
inc
clc
loop
ljmp
outsl
repz
pop
aad
add
inc
mov
xor
lcall
jbe
add
aaa
mov
aam
movsb
insb
fcoms
adc
jne
in
inc
mov
jp
das
dec
test
mov
bound
nop
push
decl
push
adc
cld
pop
adc
push
pop
inc
adc
incl
lahf
in
push
loope
pop
dec
mov
sub
pushl
aaa
stos
test
sbb
add
xchg
subb
add
arpl
mov
je
bound
arpl
int
incl
mov
sbb
rclb
outsb
mov
pop
out
push
sub
decl
cs
fbstp
sbb
in
sbbb
mov
gs
push
dec
sub
incl
mov
adc
mov
jne
out
cwtl
xor
jmp
add
jo
and
aas
pop
lock
push
sub
push
inc
push
and
mov
pushl
je
ret
cmp
cli
rol
imul
lahf
cld
mov
sahf
ret
adc
push
mov
je
inc
inc
jl
sarl
xorl
in
dec
iret
out
gs
jg
push
or
dec
pushf
sub
bound
leave
jnp
mov
push
inc
sbb
jno
lea
xchg
pop
lret
scas
fdivrl
push
dec
dec
push
pushl
xcrypt-cfb
cmpsl
in
and
mov
subl
mov
in
mov
xchg
sbb
sub
inc
fincstp
cmpsl
add
cmp
add
dec
sub
inc
add
add
decl
arpl
insb
jne
not
ljmp
scas
arpl
loopne
sarl
cmp
pop
or
pop
xor
call
cs
and
cs
sub
test
or
xor
dec
rclb
xchg
push
scas
mov
xchg
pop
sbb
or
stos
outsl
lcallw
incl
sysret
ljmp
add
mov
ljmp
icebp
jmp
dec
je
aam
push
fdivrp
loop
test
imul
das
add
dec
jle
jne
mov
pop
mov
clc
ljmp
cltd
jp
nop
mov
inc
movsb
xchg
icebp
mov
cmpsb
cmc
add
movsb
hlt
add
lcall
inc
rorb
push
sbb
js
or
dec
xchg
xor
frstor
add
clc
lahf
or
jo
push
sub
ss
sbb
xor
mov
loope
mov
sub
xchg
and
mov
xorl
rcrl
bound
ljmp
adc
lock
pusha
sub
xchg
sub
push
or
pop
mov
js
pushl
dec
dec
xor
imul
test
push
push
and
outsb
xchg
mov
jmp
jl
call
jp
cwtl
rcrb
jp
sbb
xchg
xchg
icebp
shrb
fldl
sar
inc
mov
call
loop
dec
ss
je
adc
ljmp
popf
mov
or
push
mov
and
insb
clc
faddl
filds
add
cmpsb
pushf
sub
jne
fnsave
mov
xor
adc
add
iret
adc
lretw
decl
xchg
push
cmp
add
mov
in
popf
cmp
mov
dec
rclb
decl
mov
cld
or
and
scas
or
jl
pusha
jp
push
and
lcall
adc
inc
jmp
jo
mov
incl
rol
loop
jno
adc
fdiv
insb
pop
mov
push
int3
fcmovb
pop
call
jg
test
cmp
ret
outsb
pushf
pushl
int3
rolb
bound
rclb
in
cmp
fs
jg
nop
outsb
decl
pop
lahf
je
rorb
xorl
lods
and
fwait
adc
jmp
in
mov
push
add
adc
sbb
fldl
push
decl
pop
adc
stos
sbb
ds
cwtl
int3
or
jbe
push
pop
decl
incl
xor
inc
adc
js
and
sbb
push
ljmp
clc
movl
call
mov
add
mov
mov
pushl
sbb
dec
std
mov
xchg
jb
test
pop
mov
add
js
test
add
push
adc
sub
push
sbb
fbstp
and
jae
in
es
push
and
addb
ljmp
lds
xchg
sub
jge
cmpsb
js
push
jno
sbb
enter
lcall
push
and
mov
in
inc
mov
adc
mov
jg
add
push
cwtl
sbb
mov
insb
stos
sti
jmp
sbb
scas
jecxz
pop
sarb
sub
out
rorb
and
call
cmp
and
push
lods
call
call
dec
jo
add
lcall
jge
out
repnz
or
call
fs
mov
sbb
jmp
mov
xchg
adc
jnp
sbb
repnz
adc
push
sub
mov
push
movsb
adc
popa
movsb
sbb
sub
mov
test
inc
pop
cmc
sub
inc
push
inc
aas
incl
adc
and
inc
jno
sahf
push
mov
incl
repnz
rcrb
inc
pop
xor
mov
mov
in
and
ret
lahf
sbb
popa
adc
jecxz
icebp
sbb
getsec
out
pop
jo
enter
dec
call
call
loopne
testb
outsb
jge
leave
push
addb
jbe
decl
or
rorb
and
cmp
jge
jb
aam
add
imul
mov
addb
push
mov
sbb
repnz
pusha
add
in
add
mov
cmp
hlt
les
jo
dec
or
jb
sbb
mov
movb
call
sbb
cmp
mov
xor
mov
inc
xchg
cli
dec
std
pop
mov
insl
fmull
mov
push
cs
fildll
decl
push
pushf
or
stos
clc
sbb
or
mov
xor
push
mov
pushl
add
enter
es
idiv
mov
mov
sbb
mov
sbb
out
or
incl
shl
inc
loop
repnz
inc
mov
into
xchg
jo
notb
jmp
xchg
int3
loope
clc
mov
xor
mov
les
ljmp
imul
jg
sarl
sub
mov
shll
mov
test
das
movsb
or
push
mov
jmp
mov
lcall
loop
add
jl
in
mov
loopne
jo
pushl
mov
dec
ret
push
cmp
adc
jmp
cld
pop
std
jge
pop
lock
sub
push
add
xor
out
jg
aaa
in
xor
call
adc
or
dec
shrb
cld
xor
jecxz
out
lcall
cli
cli
pop
push
ljmp
cmp
fs
cmp
or
negb
mov
inc
inc
fcmovbe
cmp
push
fisttpl
in
das
test
aas
cmp
and
push
loopne
mov
cmp
outsb
fisubl
mov
lcall
scas
dec
and
cld
adc
mov
push
pop
clc
pushl
fimull
jmp
and
xor
incl
rclb
inc
or
rorl
dec
loope
pusha
add
incl
call
enter
in
push
aaa
push
sub
jo
adc
jge
or
inc
fldt
xor
sub
sub
loopne
pop
pop
push
inc
mov
in
adc
pop
pop
or
push
inc
leave
or
out
pop
push
adc
lret
andb
add
pop
icebp
push
pushf
mov
lcall
les
sub
inc
push
aad
jle
loopne
jle
mov
sbb
outsl
mov
ljmp
xor
mov
orl
fsubl
adc
out
hlt
push
jp
lcall
adc
sub
sbb
lret
ja
sbb
jmp
rcll
sub
leave
sub
insl
call
lods
dec
xchg
decl
mov
fisttpl
pop
addl
shl
mov
es
sub
loopne
sbb
mov
push
decl
or
les
iret
sub
add
jns
cld
ljmp
and
ds
cltd
cmp
push
fmuls
xchg
es
pop
imul
jno
mov
or
mov
adc
nop
test
add
ljmp
lods
out
and
cmpsl
mov
rcrb
int3
ljmp
jl
andl
icebp
mov
flds
jmp
mov
mov
add
push
nop
jl
or
fidivs
lcall
dec
pop
mov
push
add
shrl
pusha
xor
sub
stos
pop
pop
cmp
sub
add
fimuls
decl
pop
jbe
enter
scas
rolb
out
xor
jmp
cmpsl
fimull
outsl
lods
pop
push
lcall
push
push
pop
and
push
test
inc
jbe
jae
cmp
popf
ficoms
pushl
std
push
sbbb
rorl
sub
test
in
push
in
and
imul
xchg
call
mov
bnd
lcall
mov
cwtl
fs
cmp
ljmp
cld
rcl
pop
jmp
test
cmc
xchg
enter
pushl
rorl
add
pushf
inc
cmp
jl
gs
aad
sbb
int3
push
outsl
adc
decl
push
rorl
xor
pmullw
add
test
sbb
sub
ds
aas
and
add
stos
decl
fistps
mov
push
cld
pop
cmp
mov
jmp
movsl
add
shlb
mov
add
push
rep
pop
pop
sbb
push
push
rorb
cli
add
sti
push
pop
mov
dec
cwtl
add
add
pusha
push
push
clc
mov
shl
stos
int3
xchg
incl
ljmp
andb
jge
lods
push
ljmp
mov
decl
daa
cld
and
adc
add
mov
xchg
cmp
mov
cli
into
adc
pslld
or
scas
cli
ljmp
movsb
pushf
je
lock
out
je
bound
adc
xor
ljmp
mov
mov
outsb
mov
shll
add
das
test
or
push
lahf
mull
cld
incl
fs
dec
xor
push
and
fiadds
out
jo
or
dec
mov
call
pushl
add
jno
mov
push
in
dec
aam
fstl
cs
add
cs
fcoml
ja
decb
jg
or
pop
add
ss
mov
or
cld
mov
imul
and
adc
push
inc
in
jg
dec
pushl
xorb
pop
nop
adc
out
dec
push
std
mov
mov
jo
cli
pushl
push
and
mov
fs
int3
sub
push
stc
jp
dec
loope
mov
adc
mov
and
test
sbb
jl
and
mov
ljmp
mov
enter
mov
pop
bnd
jge
xor
or
mov
aam
insb
add
dec
or
pop
lock
fidivl
call
sub
lret
adc
call
pop
jmp
mov
fidivrs
ficoms
lock
fidivs
loopne
or
dec
add
and
push
and
ljmp
dec
clc
add
fildll
mov
mov
cmp
stos
icebp
mov
je
mov
or
sar
rorl
mov
xor
xor
das
and
rorl
hlt
mov
add
test
out
aam
icebp
and
idivl
and
mov
rcr
cmpsb
shlb
add
xor
push
aam
cli
rclb
cmpl
lcall
mov
xor
pop
dec
hlt
les
push
or
aam
ja
lcall
pop
jae
out
sahf
adc
adc
cmp
mov
adc
bound
je
mov
cmp
jg
inc
pop
out
pop
insb
loop
shlb
mov
loopne
sti
or
clc
ljmp
jo
ret
leave
jae
jl
push
pop
sub
add
pushl
add
xor
inc
imul
pop
loop
pop
dec
jg
ljmp
into
cmp
sbb
mov
in
pop
pop
dec
std
jae
jle
and
iret
inc
je
mov
dec
repnz
jl
loop
cmp
jnp
clc
adc
popa
pop
push
lcall
test
sbb
sbb
inc
rcll
xchg
add
jecxz
aam
push
xchg
pop
push
cld
rolb
or
dec
add
insl
ljmp
xor
sub
inc
and
push
rcl
pop
jl
shlb
xor
fsts
cmp
mov
mov
sbb
hlt
xchg
or
loopne
je
or
jg
addb
fistps
mov
mov
cmp
mov
addb
ljmp
decl
inc
inc
push
add
inc
xchg
push
jbe
mov
arpl
dec
pop
push
sar
push
sbb
mov
mov
add
jg
cmpb
popaw
sub
pushf
mov
adc
lret
mov
push
jae
gs
ljmp
lea
je
loope
xor
pop
fs
dec
adc
jge
push
or
ret
and
cli
outsl
mov
loopne
in
mov
xchg
jmp
in
shrl
jno
jg
jmp
cmp
test
add
outsl
mov
or
pushl
std
ljmp
pop
enter
ds
movaps
jbe
scas
dec
ljmp
dec
mov
jg
test
mov
imul
ljmp
stos
jecxz
mov
push
cwtl
push
jo
out
dec
pushf
add
sbb
mov
mov
test
pop
xlat
sti
and
and
mov
or
ds
mov
and
jle
push
and
std
pushl
dec
add
loopne
inc
dec
and
or
inc
das
xchg
and
sub
add
mov
dec
push
pop
je
into
cmp
add
loopne
scas
pop
or
jg
mov
pop
mov
pop
push
inc
or
and
mov
call
testb
inc
dec
sub
and
and
sti
icebp
xor
sub
or
ljmp
lock
decl
dec
fadds
jmp
or
push
mov
call
ljmp
adc
jne
mov
adc
inc
cmp
mov
add
sbb
jno
cmp
mov
adc
dec
pop
bound
push
call
ljmp
dec
jg
movsb
std
das
fldl2e
test
lock
mov
cmp
lods
ljmp
std
mov
push
or
dec
adc
outsl
ss
or
lea
jo
cmpsl
pop
lock
call
push
and
out
ret
pop
nop
fs
dec
test
jbe
sub
mov
sbb
decl
xlat
push
cmpsl
fiaddl
shrl
inc
pop
xchg
leave
in
jne
cmp
xchg
or
mov
add
lret
outsl
das
inc
stos
adc
aas
test
jmp
ljmp
jae
pop
roll
les
and
movsb
sub
call
xor
mov
mov
mov
or
ss
push
push
fs
mov
jb
mov
incl
xchg
push
js
dec
out
pop
adc
clc
dec
ss
dec
jmp
jle
call
jne
xchg
cld
movntps
cmpsl
mov
sbb
mov
push
jno
cmpsl
incl
out
xchg
cmp
testb
int3
outsb
rcrl
rorl
xchg
dec
jp
jle
loop
sahf
aad
in
cli
xor
and
sub
pop
jl
mov
rorl
pop
push
es
add
fisubs
mov
inc
jge
cmp
sbb
and
fdivr
outsb
scas
add
sbb
in
jmp
or
aad
lea
insl
leave
push
xchg
xchg
loop
add
neg
inc
loopne
std
sub
repnz
mov
leave
ljmp
cli
inc
clc
push
loopne
pop
je
divl
arpl
lock
dec
sub
lcall
ret
and
shrb
shll
mov
sub
mov
xor
pushl
pop
lea
pop
push
sub
shll
psubsb
pop
jmp
sti
fdiv
pop
int3
sbb
hlt
clc
test
movsb
or
xchg
mov
sarb
add
pop
jmp
fstp
mov
and
cld
mov
test
adc
mov
mov
or
loopne
test
dec
scas
xor
std
imul
add
repnz
ja
js
andb
xchg
js
fstpl
jnp
jbe
jno
outsb
mov
push
or
pop
shrb
or
test
inc
je
mov
mov
pusha
xor
ficomps
mov
jo
popf
cmp
pop
cmp
add
and
mov
out
or
aas
mov
pop
mov
mov
fdiv
aas
cld
push
rol
into
dec
sbb
xchg
outsl
out
xor
bound
fdivr
sub
lsl
pushl
std
call
adc
xchg
push
cwtl
aas
or
sbb
mov
mov
cmc
xchg
cli
decl
repnz
sbb
cmp
and
pop
insb
pop
add
shrl
jns
jecxz
out
rolb
std
xor
sbb
xor
push
out
imul
cmp
call
sbb
inc
pop
push
mov
js
notb
sub
gs
call
adc
mov
jmp
fs
stos
enter
adc
cmc
call
fiadds
and
cmpsb
mov
mov
shrl
push
pop
pop
std
lcall
push
andl
add
ret
test
popf
mov
xchg
push
lock
jg
xor
xorl
gs
in
jmp
xor
sub
dec
pop
pusha
push
sub
sbb
in
roll
adc
fdivs
mov
aaa
cli
flds
push
test
adc
pop
pusha
pop
ret
xchg
sub
and
lods
stos
and
shlb
or
mov
addl
addl
incl
leave
cwtl
shr
cmp
xor
pushf
mov
lcall
add
cld
or
lcall
pop
das
mov
aam
imul
sar
das
adc
es
add
mov
in
sbb
subl
mov
fdivr
fildll
les
inc
inc
scas
cmp
dec
sub
aas
and
adc
test
bound
cwtl
adc
addl
popa
mov
mov
push
inc
fsubr
jge
hlt
decl
or
add
out
cmp
fcoml
jl
sbb
fbstp
ds
or
push
xor
add
aam
je
xchg
pop
fstpt
decl
incl
lea
imul
fisubrl
je
cmp
pop
add
add
leave
pop
and
cmp
mov
xchg
cmp
xor
lea
pop
mov
lcall
mov
pop
out
adc
int
stos
sbb
fbld
pop
push
dec
test
fistpll
test
inc
leave
add
fcoms
pusha
push
sub
mov
stos
out
lcall
xor
addr16
adc
inc
adc
adc
mov
adc
adc
decl
jp
adc
cmp
and
xchg
jo
mov
cli
jg
outsl
add
std
bound
push
mov
adc
lcall
pusha
push
fwait
das
int
idivb
push
jmp
fdivs
or
jmp
inc
jle
xor
sbb
insl
mov
lret
mov
mov
pop
pop
pop
pusha
pop
leave
inc
inc
daa
stos
sbb
inc
cmp
sahf
test
push
pop
movsl
sub
pop
lock
add
cmp
test
cs
add
cs
popa
or
or
mov
incl
dec
je
push
jno
into
cld
xchg
call
and
incl
pushl
jnp
call
ret
mov
outsb
pop
enter
push
scas
into
pop
stos
lods
push
push
in
decl
mov
mov
mov
xlat
insl
xchg
jb
adc
mov
imul
add
fsubs
adc
jb
rclb
push
cmpsl
dec
jmp
repnz
std
cld
pop
loopne
stos
pop
adc
cmpsb
sahf
daa
push
ss
call
or
and
mov
cwtl
adc
inc
ficomps
lret
insb
es
pushl
xor
insl
xchg
jecxz
lods
stc
jg
sbb
out
bound
movsb
push
cld
scas
sahf
aam
mov
or
es
inc
xor
push
shl
adc
dec
or
push
xor
and
or
in
je
aam
jle
lock
dec
dec
das
repnz
add
and
fs
fbstp
xchg
fcoml
outsb
pusha
cmp
add
insb
or
push
cmc
stos
pushl
add
adcb
jb
dec
cwtl
jg
xor
decb
decl
les
jl
shl
cld
decl
dec
adc
cli
cmp
lret
test
movsb
inc
dec
or
js
push
add
cmp
test
jg
dec
mov
add
xlat
pop
outsl
mov
mov
inc
jbe
fildl
jmp
shlb
mov
scas
jmp
shrb
outsb
shr
mov
ret
test
test
pop
addl
add
xor
push
mov
cld
lcall
push
ss
xchg
lcall
inc
or
sbb
nop
cmp
dec
add
insb
fadds
mov
int
in
clc
addr16
inc
push
cmp
mov
decl
pop
or
pop
push
inc
mov
dec
outsl
out
call
mov
call
fcompl
ds
xchg
pusha
popa
mov
test
shll
dec
clc
mov
jle
jne
xchg
fisttps
fs
cmp
dec
add
pushf
leave
aas
sbb
decl
sub
rorl
sbb
xchg
lock
inc
lds
popa
cmp
add
add
clc
incl
popa
scas
inc
xchg
mov
jb
add
push
jmp
jmp
xchg
shl
cmpsb
dec
mov
cmp
cmp
icebp
nop
pop
hlt
mov
nop
call
std
rcrl
or
push
mov
sub
jbe
push
call
cmp
push
mov
add
cmp
mov
lock
outsb
pop
notl
iret
sbb
cld
fstpt
inc
adc
pop
int
or
flds
cmp
ja
cmpsb
or
jp
jmp
pusha
nop
mov
pushf
push
mov
test
mov
test
das
test
jl
or
pop
jl
cli
ret
xchg
sti
fs
pop
mov
xor
inc
mov
jo
inc
mov
dec
push
fstpl
in
add
or
ljmp
fsubrs
lea
dec
pop
add
pop
xchg
fiaddl
pushl
inc
shlb
cmpsb
sub
nop
cmpsb
push
rcll
push
fidivrs
addr16
clc
scas
ljmp
rcrb
mov
aam
sbb
jmp
adc
cmc
inc
fcomip
add
jne
adc
scas
loope
push
mov
or
or
nop
xor
cmp
dec
cmp
ja
pushl
or
stos
ljmp
es
lds
inc
pop
mov
cmpb
cmp
je
sar
mov
rcrl
loopne
and
mov
in
inc
sub
dec
out
cmp
mov
stos
pop
mov
sbb
mov
cmp
shl
push
pop
jnp
rorl
fs
verr
div
jns
and
int3
das
jns
adc
fcmovu
hlt
push
cmpb
bound
sbb
push
jmp
mov
ljmp
jmp
mov
or
cmp
xor
jmp
push
jge
inc
adc
insl
jg
out
cli
call
mov
push
cmpsl
outsl
ret
shll
xor
adc
inc
cmp
repnz
call
movq
inc
xchg
lcall
mov
push
mov
jg
xor
incl
mov
jg
jl
inc
repnz
mov
les
imul
mov
dec
jmp
movsl
xor
shrb
sbb
jo
stos
ret
jle
int3
dec
mov
fwait
es
sub
incl
lcall
je
mov
pop
jge
dec
inc
mov
mov
filds
gs
cmp
cld
push
push
lahf
out
pop
add
stos
loopne
push
mov
inc
lret
adc
call
js
push
or
lcall
cmp
jg
and
inc
jmp
sub
push
sar
xchg
cmp
in
faddl
xor
test
sbb
cmpsl
sub
aas
and
sbb
mov
and
test
cmc
jmp
mov
xchg
andl
popa
fs
and
loope
test
push
fcomip
xor
cmp
adc
add
mov
jg
mov
bound
test
out
jb
ret
inc
cmp
cmp
ljmp
movsb
push
add
loope
pop
dec
push
testb
lcall
in
fiadds
inc
pusha
xor
add
call
inc
pop
dec
out
dec
repz
push
pop
and
leave
stos
sbb
je
iret
loope
fwait
aaa
ficoml
out
je
pusha
cli
jb
jecxz
incl
push
pop
sbb
xor
mov
fildl
aam
in
jge
mov
lcall
test
hlt
sahf
push
sbb
jne
dec
or
jb
ja
lcall
add
stos
js
push
push
loop
pusha
loope
cld
push
push
sarb
lcall
jmp
cs
cmp
fs
addb
fbstp
cmp
xlat
js
cli
insb
sbb
cld
sbb
jg
cmp
pushl
mov
js
ss
lret
sub
cwtl
and
bound
add
es
incl
loopne
test
jo
xor
sbb
icebp
jmp
sub
mov
sti
adc
sub
dec
jne
aaa
aas
jae
inc
xor
cli
xor
push
lods
xor
fistl
ds
jmp
lock
inc
fsubr
jle
and
daa
pop
lods
and
jp
inc
xchg
jg
sbb
cmp
jo
outsb
clc
js
imul
mov
clc
jmp
fnstenv
jecxz
jge
sbb
test
sub
addl
ret
lods
xor
mov
out
fsubrs
out
mov
lret
sbb
rolb
sub
pop
cmp
adc
sbb
stos
add
xchg
or
xlat
cmp
sub
jns
push
insb
mov
popf
add
mov
xor
push
inc
fisttps
insl
sti
push
lcall
xor
push
or
pop
xchg
mov
mov
sbb
jg
test
pushf
jae
push
call
or
or
fxch
mov
insb
add
decl
mov
dec
push
or
inc
sub
cmp
loope
incl
loopne
ljmp
fs
mov
jge
shl
ds
cmpsb
test
add
arpl
mov
sti
ret
push
cs
add
add
or
out
pop
sbb
scas
pop
cmc
incl
push
lea
inc
jle
dec
or
jmp
mov
sbb
add
mov
lret
jmp
mov
imul
jne
cmp
jge
xchg
shlb
incl
mov
push
ljmp
mov
test
sbb
xchg
mov
jae
je
fcomip
jmp
mov
add
insb
push
cvtpi2ps
insl
pop
shrb
call
jns
jmp
cmp
test
fcoms
jecxz
push
pusha
sbb
outsl
mov
xor
cmp
dec
dec
xor
sbb
int
cmpsl
and
inc
lret
and
pop
popa
jnp
int3
push
inc
mov
push
sbb
add
lock
ret
mov
sbb
cwtl
xchg
push
js
xor
out
cli
stos
mov
insb
mov
xor
inc
and
or
jmp
andb
sahf
mov
pusha
adc
stos
cmc
pushl
adc
add
mov
sbb
pop
cld
imul
mov
mov
dec
fidivs
lret
sbb
jnp
fcomip
jnp
mov
lock
mov
jle
mov
add
xor
cld
in
adc
sti
addr16
pop
pop
jmp
out
pop
jmp
sti
incl
pop
push
mov
sbb
in
out
xadd
clc
pop
and
jmp
scas
hlt
xlat
dec
dec
push
pop
bound
or
xor
scas
mov
push
xchg
mov
mov
mov
lock
movsb
mov
incl
je
fists
dec
in
mov
xlat
mov
mov
sti
pushl
or
das
cli
jg
push
rdpmc
xchg
add
stc
pop
pop
pop
jle
push
mov
lea
loope
fucomip
rcr
std
push
inc
out
fldl
loope
adc
movsb
ret
jo
cmpsb
inc
and
mov
outsb
add
mov
inc
adc
ljmp
test
stc
mov
lahf
pop
sub
xor
inc
mov
cli
dec
or
pop
adc
out
clc
pushl
lret
push
rorb
rclb
cmp
inc
jbe
inc
test
ja
push
dec
mov
push
cli
add
fstl
iret
sbb
jmp
push
mov
sub
shrl
sahf
ljmp
scas
imul
ljmp
mov
mov
inc
add
test
xor
pop
je
mov
stc
fcmovnu
fnstsw
incl
lock
idiv
loop
push
pop
jl
test
jg
or
jp
push
jg
jp
negl
adc
sahf
or
cmp
pop
in
cld
and
call
ret
push
and
xchg
ljmp
adc
xchg
lea
mov
clc
ret
in
sbb
xchg
add
mov
movsl
in
das
adc
or
dec
dec
inc
inc
or
hlt
decl
das
cmpsb
cmc
add
xchg
lock
ret
fidivl
push
fisubrs
ficoms
fdivl
sub
sbb
mov
filds
lea
xor
fldl
lcall
ja
lcall
fcmovnu
iret
sbb
cld
add
mov
cmpsb
cmp
mov
cld
fimuls
inc
add
add
jl
das
ljmp
jo
adc
mov
les
ret
int
call
subl
nop
stos
out
and
cmp
bound
jb
ljmp
clc
ret
repz
fs
adc
adc
mov
imul
jle
jo
pop
ds
inc
ret
fsubp
mov
ret
sub
in
std
mov
dec
sub
mov
rcrb
pop
push
mov
scas
out
call
cmp
and
test
mov
inc
int3
xchg
push
inc
pop
dec
jmp
dec
cwtl
and
hlt
sbb
and
cmpsb
jg
loop
mov
mov
loopne
mov
mov
pop
nop
in
out
cli
add
sbb
cmp
mov
cmp
or
outsb
cmp
pushl
imul
mov
or
scas
adc
and
iret
inc
cld
sbb
xor
in
sbb
mov
push
pushf
inc
adc
decl
outsb
add
das
xor
and
faddl
test
cmp
sbb
rclb
push
into
mov
jmp
loopne
mov
sub
and
add
decb
repnz
rcll
aaa
sub
loopne
test
dec
fs
sbb
mov
out
out
sbb
push
xchg
and
lock
mov
adc
cmp
dec
or
dec
xor
and
out
sbb
sub
inc
jns
xlat
pusha
ret
pop
jns
push
pop
ja
out
sbb
add
std
mov
outsb
inc
mov
stos
pop
cmp
mov
push
jg
inc
cltd
push
push
das
cmp
add
ds
fstpl
int3
mov
dec
xor
fisttpl
ljmp
xchg
lcall
or
es
fsub
adc
mov
pop
pop
sbb
jg
mov
ljmp
rcr
ljmp
xchg
je
jo
or
cs
adc
inc
scas
xlat
es
hlt
add
mov
add
lcall
int3
jns
lock
pushf
mov
pusha
out
push
sahf
add
aas
add
lock
clc
add
push
mov
add
inc
and
call
pop
mov
cmpsb
push
and
mov
dec
sahf
add
push
stos
sbb
out
push
gs
insl
sbb
jne
pushl
xor
js
mov
jb
pop
cmpsl
lcall
mov
push
mov
pop
mov
lcall
push
fisttps
hlt
mov
adc
inc
jg
call
add
out
out
mov
decb
rorb
xchg
add
xlat
lods
xchg
adc
add
decl
das
inc
inc
call
ljmp
divb
ja
xor
cmpsb
jo
scas
inc
xor
add
andb
jo
cld
ds
jno
popf
sbb
ret
add
lcall
xchg
mov
sbb
sbb
enter
jmp
xor
outsl
xor
mov
out
pop
mov
sahf
loopne
cmpsb
js
loope
sahf
imul
cmp
mov
adc
xchg
pop
aaa
and
add
and
mov
fcmove
inc
adc
in
mov
push
mov
decl
sbb
incb
aaa
lea
pop
cli
and
ja
add
push
jg
xor
sub
lds
or
sbb
push
inc
cmp
lret
lcall
or
dec
adc
dec
ljmp
ds
jo
jl
cmp
push
ret
sbb
es
xor
add
dec
mov
xchg
sbb
clc
jne
cmp
jg
testl
clc
push
call
jo
jbe
jbe
mov
call
out
and
incl
sbb
bnd
cvtps2pi
call
movsl
stos
lcall
or
dec
mov
jb
sysenter
js
inc
out
xor
inc
pop
les
add
or
jg
into
loopne
fdivr
shll
fcoms
cmpsl
out
dec
mov
adc
jmp
xchg
pushfw
cwtl
pop
xor
out
cs
in
push
push
lahf
push
aad
dec
ljmp
rclb
repnz
jl
rorb
enter
nop
xor
mov
inc
push
ss
lcall
jne
cmp
adc
test
incl
out
cmp
iret
xchg
add
in
adcl
mov
mov
ret
adc
loop
push
iret
xchg
test
insb
push
xchg
imul
pop
fists
mov
pop
add
jg
xchg
inc
jmp
in
lret
popa
add
decl
loop
or
clc
jno
ljmp
iret
cmpsb
les
les
orb
inc
cld
imul
pop
inc
jmp
inc
inc
and
pop
jle
mov
hlt
push
inc
add
shll
or
jbe
pop
rcl
add
mov
ljmp
fistl
addr16
add
fidivrl
cmp
loopne
add
push
or
sub
adc
mov
ljmp
outsb
test
inc
pop
lcall
cld
pusha
in
sahf
jns
or
ror
mov
jp
mov
das
and
push
loop
push
fsubr
lcall
data16
decb
rcrb
imul
and
insb
mov
mov
fcomps
ja
fisubrs
out
imul
aaa
fadds
and
rolb
add
pop
mov
jecxz
leave
dec
lcall
pusha
xor
ret
mov
adc
push
push
decl
xchg
push
sbb
jmp
cmp
data16
xor
jb
in
jo
inc
out
xor
verr
pop
adc
pop
sbb
jmp
fdivrs
inc
pop
idivl
lcall
sub
sbb
add
jmp
pop
aaa
jg
testb
daa
mov
xchg
out
cli
incl
adc
test
cs
pop
leave
push
lcall
cmp
push
das
mov
decb
clc
icebp
repnz
push
or
xor
pushl
outsb
mov
push
mov
fsubrl
push
mov
add
jg
loope
xor
aaa
gs
sub
pop
add
clc
xor
adc
pushl
lock
add
pop
repz
outsb
movsl
or
fs
call
hlt
jne
jg
shlb
mov
fcoms
ficomps
out
cmpsb
sub
pop
lcall
sub
mov
sbb
test
cmp
or
xor
ljmp
lret
cld
pop
inc
shrl
adc
fbstp
icebp
pushl
and
mov
jle
mov
lcall
jmp
or
fimuls
or
mov
fcmovnb
enter
mov
xchg
mov
mulb
dec
inc
cmp
lds
cmp
pushl
add
enter
cmp
dec
es
test
xchg
push
insb
test
decl
out
add
jo
dec
xor
cmp
mov
incl
pop
mov
fs
sbb
or
dec
push
and
fucomip
jg
decl
sub
aam
or
mov
pop
incl
dec
push
jle
pushl
inc
add
add
or
and
loopne
scas
inc
inc
stc
pop
stc
fwait
xor
mov
lock
bound
ja
jle
decl
les
or
cli
jg
cmp
pushl
fs
bound
addb
adc
rcrl
cmp
outsl
je
and
fisttps
mov
nop
or
mov
inc
ljmp
sti
ljmp
or
jg
lret
jl
gs
add
adc
or
cld
adc
xchg
mov
pop
sbbb
mov
andl
pusha
rcl
xor
mov
push
shll
mov
adc
out
incb
jb
stos
sbb
push
or
mov
xor
repz
cmpsb
push
es
clc
imul
js
popf
out
and
nop
jecxz
ret
rolb
mov
decl
shlb
les
call
xchg
into
sub
xor
add
push
idivb
add
incl
lcall
call
sbb
ficomps
mov
getsec
add
jb
call
lret
dec
imul
adc
push
jns
add
add
or
fildl
and
orb
hlt
cmp
call
cmp
out
adc
clc
sbb
cmpl
dec
scas
clc
jmp
jnp
rcl
lea
adc
pop
fdiv
mov
cld
lods
dec
loope
xor
add
sbb
add
add
fbld
adc
incl
push
xchg
jp
outsb
mov
cmp
dec
adcl
mov
push
mov
push
push
sub
std
in
dec
fisttpll
mov
cs
mov
lcall
ljmp
scas
cli
push
call
xchg
mov
cld
sbb
je
shll
and
xchg
or
push
xlat
inc
and
lahf
das
loop
xlat
test
and
daa
add
lock
lock
jne
mov
incl
fcomip
add
mov
aas
mov
outsb
xchg
inc
ss
jne
jmp
dec
mov
sub
pop
jp
cmp
lock
filds
cmp
sbb
gs
sbb
incw
ljmp
pop
mov
sbb
shll
bound
loop
call
mov
lcall
aad
cld
push
dec
add
dec
movl
inc
lock
mov
incl
mov
jbe
jl
out
test
xchg
in
ljmp
outsl
clc
call
push
call
add
rclb
into
shl
jle
mov
out
clc
push
adc
xor
inc
pusha
or
pop
cli
jae
push
add
or
jmp
lcall
add
cli
pop
mov
imul
push
cmc
mov
and
add
ds
jl
fcomip
ljmp
fdivrp
or
dec
loop
cmp
adc
repz
sbb
pushl
inc
lcall
jae
sub
in
aaa
xchg
fistpl
ds
jecxz
decl
cmpsl
mov
addr16
mov
mov
and
ljmp
or
sub
ds
outsb
push
jg
out
adc
imul
add
out
repnz
adc
outsl
clc
lahf
cvttps2pi
sbb
call
mov
ficoms
mov
aad
jmp
jo
rorb
lock
ret
inc
pushl
add
cli
mov
cmp
pop
jp
dec
pusha
roll
push
xor
rolb
push
ljmp
bound
nop
je
std
cmp
push
jmp
dec
cld
add
and
cmpsl
adc
test
cmp
call
inc
xchg
xchg
add
inc
push
outsl
in
push
adc
inc
add
lcall
in
mov
dec
sar
lret
add
dec
sti
push
or
xor
dec
scas
test
pop
icebp
pop
cld
shl
and
enter
movhps
test
fcmovbe
out
dec
cld
xchg
mov
or
pop
push
es
test
jg
lahf
push
fisttpl
xor
ljmp
push
lds
mov
shr
adc
mov
scas
pushl
ljmp
lret
xor
je
loope
adc
fmull
leave
sbb
incl
rolb
xor
lahf
call
pop
hlt
add
jmp
ret
jl
push
or
arpl
loopne
bound
imul
jo
pop
loopne
call
push
out
movsl
mov
je
sarl
jmp
or
pop
insb
sub
dec
mov
cmp
lcall
mov
xchg
jb
pusha
ss
arpl
sbb
incl
push
and
filds
mov
mov
scas
aaa
clc
fcoms
dec
push
shlb
inc
out
into
pop
std
jmp
or
sahf
inc
push
push
xchg
mov
clc
dec
and
js
dec
ljmp
push
roll
sti
inc
mov
cmp
push
rcll
lock
stos
imul
dec
cli
ja
decl
andl
orl
or
adc
inc
mov
mov
lds
or
adc
sbb
jg
inc
icebp
dec
cmp
decl
adc
jmp
inc
in
cltd
outsb
jmp
shlb
adc
outsb
and
mov
lds
pcmpeqb
enter
adc
idiv
decl
mov
jo
lret
fisubs
dec
stos
add
cmp
sub
add
xchg
fistpl
stos
sbb
into
add
sub
ret
les
mov
cmp
out
jne
pop
push
mov
push
lods
les
push
fcomps
inc
or
mov
pop
cmpsb
add
faddp
inc
or
inc
sub
push
fcmovnu
push
push
sub
mov
test
mov
dec
pushf
or
ret
push
stos
call
or
and
add
pop
scas
jg
fistps
in
fmull
jns
sbb
loop
sub
jbe
jo
incl
dec
push
fwait
imul
sub
fisubrl
jmp
xchg
rcll
aas
and
jmp
aaa
std
mov
sbb
enter
mov
cmp
repz
adc
decl
adc
imul
push
mov
fcmovnbe
int3
and
gs
jno
push
jecxz
lcall
mov
inc
mov
inc
out
adc
xchg
ljmp
mov
sbb
xchg
pop
test
aas
nop
xchg
test
stos
test
add
sete
leave
mov
jg
inc
aam
fs
xor
stos
jo
cmpsl
loopne
inc
shlb
add
arpl
ret
mov
and
mov
and
mov
lcall
push
pop
dec
int
test
or
data16
out
push
je,pt
js
ja
cmp
xor
push
or
dec
pop
sbb
sub
mov
and
incl
fsubs
call
xor
fld1
js
jg
cmp
and
shlb
xchg
dec
mov
aaa
outsb
gs
push
push
cmp
add
orl
lcall
cwtl
dec
or
xchg
scas
mov
mov
incb
jmp
push
jne
push
mov
dec
les
add
decl
xchg
push
fwait
push
and
jle
or
pop
in
xor
mov
out
sti
cmp
dec
xchg
cmp
cmpsl
mov
cmp
push
jno
xor
or
outsb
mov
incl
sub
jl
jg
out
push
mov
push
pop
ja
and
xor
aaa
fdivrs
pop
cmp
cmp
adc
mulb
jmp
and
call
mov
ds
mov
ret
aam
daa
dec
ret
std
cmpsb
scas
pop
leave
jg
sub
mov
mov
sub
out
out
rcr
adc
insb
sub
bound
mov
sar
call
popa
cmpsb
gs
inc
adcl
es
xor
jg
fsub
ficompl
and
add
mov
fs
mov
pop
adc
add
cld
push
fdivrl
push
add
mov
add
push
inc
mov
inc
sbb
jo
aas
lock
daa
pop
jmp
xchg
test
div
dec
loopne
pushl
inc
or
aam
add
add
decl
retw
mov
call
sub
mov
pop
shrb
jo
clc
rolb
jo
xchg
sbb
mov
pop
nop
or
inc
and
sub
popa
sahf
cli
aas
adc
pop
push
mov
dec
lock
mov
pushl
and
lcall
clc
adc
ljmp
int
and
data16
clc
lahf
adc
push
and
jo
jo
or
cmp
pushl
scas
inc
das
add
jl
cmp
pop
and
push
mov
inc
mov
call
xchg
andb
aad
lcall
inc
addr16
mov
std
leave
push
enter
jmp
push
pop
in
rclb
push
push
imul
out
mov
mov
dec
shl
or
stos
xchg
dec
test
in
rcl
add
addr16
sub
mov
in
in
mov
incl
dec
dec
or
jg
out
lret
and
cld
clc
out
xor
pop
push
bound
push
cltd
pop
adc
decl
xchg
mov
cmpsb
mov
subl
ljmp
pop
pushf
inc
adc
push
mov
out
clc
mov
lret
add
jbe
negb
adc
or
xor
ljmp
xor
push
pop
push
mov
add
scas
movsb
arpl
add
outsb
push
inc
inc
les
scas
xchg
xorb
ret
daa
fisttps
jmp
scas
lods
xor
inc
jbe
imul
test
jnp
sbb
jg
lea
sub
dec
mov
ja
pushf
mov
ret
cwtl
cmp
arpl
pushf
add
push
cld
ljmp
jmp
clc
cltd
cmovae
or
pop
es
push
mov
push
ljmp
mov
mov
aaa
iret
dec
inc
ss
call
out
or
dec
scas
mov
lcall
jae
testl
and
cmp
adc
jne
pop
ljmp
mov
cmp
push
add
and
sahf
sub
add
add
decl
mov
frndint
adc
xor
mov
icebp
or
mov
faddp
add
pop
inc
jae
call
mov
ret
push
adc
jmp
rcr
jmp
pusha
inc
aaa
mov
cld
sbb
inc
push
fistpll
push
adc
add
rcrb
std
out
xchg
add
sysenter
dec
push
add
fbld
loop
jae
push
jmp
cmp
imul
incl
xor
sub
jns
in
add
rclb
nop
pop
push
fdivp
call
lds
cwtl
js
imul
push
pop
call
pushf
add
jg
mov
loop
out
lock
or
dec
imul
je
or
lcall
or
ds
roll
insl
je
sub
jle
dec
inc
push
dec
pop
or
ret
incl
pcmpgtd
loope
jnp
mov
fimuls
divl
xor
mov
pop
push
pop
cmp
mov
cs
call
jg
mov
xchg
mov
dec
xlat
lock
add
xchg
inc
repnz
shr
jl
pop
mov
and
adc
push
push
push
imul
iret
or
lcall
dec
mov
fiadds
xor
adcb
decl
incl
push
icebp
xor
jo
mov
dec
rcrb
jmp
cmp
xlat
arpl
ja
mov
jmp
pop
test
push
xchg
or
lock
sbb
repz
xchg
dec
adc
jb
jl
inc
add
incl
mov
mov
sysret
js
jnp
adc
mov
pop
mov
mov
lock
inc
shll
mov
mov
lds
lock
jbe
scas
hlt
push
test
lock
sub
jg
clc
jns
popa
dec
lcall
js
insl
inc
call
push
jl
cmp
ljmp
or
cmpb
test
clc
jl
pop
filds
xlat
cmp
ficomps
cmp
sbbl
add
cmp
imul
lret
fcmovu
lds
and
outsl
jle
rclb
in
hlt
mov
jmp
data16
mov
or
lret
jnp
mov
fbld
cmpl
movsb
lea
leave
add
lahf
fildll
loopne
push
push
or
xchg
pop
inc
call
push
mov
lock
lcall
xor
cmp
cmp
decl
cld
or
pop
pop
push
adc
addr16
push
mov
dec
xor
and
ljmp
cli
pop
mov
in
inc
aam
int3
dec
nop
pop
aad
or
into
fistpl
inc
les
jp
mov
mov
xchg
rol
adc
flds
rolb
pop
jns
ljmp
dec
add
mov
dec
roll
add
and
push
adc
incl
sbb
and
inc
int3
aas
jo
mov
cmpsl
add
fimull
outsl
shl
or
decl
sub
and
mov
pushf
rcl
popa
adc
mov
xorb
idiv
xchg
cmp
lock
mov
mov
lea
decl
movsl
sbb
insb
add
add
arpl
aam
lcall
mov
and
dec
testb
sahf
hlt
inc
sub
outsl
pop
les
mov
ljmp
ja
out
shr
push
call
lods
shrb
cmp
inc
hlt
cli
adc
gs
or
lcall
or
push
xchg
ret
cmpb
cmpsb
mov
add
les
push
or
mov
sbb
push
incl
jg
add
add
fistl
les
pushf
cs
cld
pop
mov
hlt
xor
jmp
shlb
lods
mov
push
lock
fistpll
xchg
jns
test
mov
push
sub
mov
push
cltd
sar
push
cmp
str
mov
rcrb
add
aaa
jns
xchg
loopne
jmp
outsb
xchg
sub
pusha
ffreep
and
call
int3
mov
and
or
repz
mov
call
xchg
shlb
cld
call
mov
cmp
add
cmpsb
lock
lock
sub
nop
push
jmp
cmp
pop
or
negl
fcomip
mov
push
cwtl
cmp
mov
push
inc
push
loopne
adc
xlat
inc
ret
call
nop
push
mov
fisubrs
mov
inc
xchg
lret
xchg
mov
incl
addr16
fcoml
xor
inc
call
cs
pushl
enter
insl
or
jmp
jecxz
ss
mov
pop
enter
mov
xchg
nop
push
dec
mov
mov
inc
xor
xchg
stos
test
cs
xchg
push
push
rolb
pushl
ret
push
addr16
inc
mov
sbb
mov
stc
mov
out
inc
andl
cmpsl
imul
mov
push
dec
testb
pushl
cmp
jno
aaa
jge
push
sub
shrl
divl
add
adc
adc
call
and
das
pop
cld
das
push
adc
dec
mov
push
mov
incl
add
add
mov
cwtl
adc
cld
and
outsl
pushl
leave
add
in
js
and
inc
ret
mov
fidivl
movsb
push
bound
hlt
jmp
adc
enter
pop
push
xor
rorb
add
loop
aad
cltd
ljmp
call
push
push
push
add
pusha
rcrb
xor
sbb
push
mov
ljmp
mov
cmc
cmpsl
pop
dec
cmp
or
mov
sbb
jb
pusha
sar
lcall
inc
ret
mov
or
push
call
je
idivb
insb
push
addl
aaa
adc
jg
incl
imul
outsl
cli
call
sbb
and
cmpsb
aas
xchg
and
jo
clc
xchg
inc
in
pop
popa
insb
or
loope
je
ficoms
fildll
jne
dec
pusha
repnz
insb
call
inc
addr16
push
pushl
pop
nop
cli
incl
push
add
in
fsubr
dec
cmp
push
push
lods
rorl
xchg
push
inc
push
inc
cld
adc
mov
cwtl
push
inc
mov
arpl
call
adc
inc
movsl
into
outsb
add
push
or
in
and
add
call
loopne
gs
mov
mov
mov
fwait
xor
mov
adc
test
std
call
cli
and
add
pop
jne
dec
adc
mov
sbb
xor
jecxz
stos
mov
sub
lea
and
xor
outsl
clc
dec
xor
fdivrs
negb
xchg
mov
jle
push
ljmp
loopne
sbb
sub
ja
and
test
cmp
mov
add
xchg
cwtl
and
pcmpeqd
mov
mov
incl
mov
mov
arpl
subb
mov
xchg
pmullw
or
out
push
and
popa
test
sti
int
adcb
or
les
loop
decl
lds
cwtl
outsl
fsubrs
loop
push
lods
out
sbb
adc
push
ljmp
push
aas
sub
xchg
clc
in
inc
and
push
jne
outsl
sub
lcall
outsb
popa
jmp
outsl
xor
insb
sub
mov
sub
xchg
cvtdq2ps
add
jmp
ror
fldenv
lock
cld
push
jne
pop
ljmp
mov
in
adc
adc
add
imul
adc
lock
lcall
sbb
aas
dec
or
push
and
dec
sbb
enter
push
jmp
and
rcll
das
dec
mov
cld
mov
cmc
push
add
test
sbb
out
adc
mov
clc
mov
push
or
jmp
push
push
loopne
sbb
or
sbb
lds
nop
inc
subb
jmp
sbb
andl
push
clc
push
push
test
int
mov
mov
push
mov
clc
ret
les
cmpsb
enter
fists
fsubrs
sbb
mov
ljmp
push
hlt
test
jmp
fildl
lock
lcall
mov
lcall
add
adc
orb
movsb
call
lcall
cltd
mov
das
mov
push
pop
xor
mov
test
sahf
mov
loope
ret
aam
dec
jl
loope
push
or
adc
push
xor
call
inc
dec
cmp
hlt
jbe
jle
mov
push
cmp
lahf
lret
jne
add
clc
lods
call
mov
pop
icebp
or
dec
mov
push
adcl
outsl
push
lahf
sub
ljmp
hlt
push
push
sub
lret
mov
shl
incl
stos
push
jmp
push
add
fnstcw
je
dec
or
mov
std
jne
jo
push
decl
pop
xor
out
or
shr
shl
call
mov
scas
pusha
std
adcb
ret
cmpl
hlt
mov
inc
outsl
ds
jmp
pop
into
pop
nop
mov
mov
ljmp
pop
sbbb
call
jl
push
or
push
cwtl
inc
pop
adc
cmp
repz
push
das
pusha
xchg
push
sar
pushl
stos
mov
dec
gs
adc
ljmp
mov
scas
cli
ja
test
mov
or
jmp
inc
cmp
xor
mov
add
adc
inc
push
jae
mov
adc
dec
ljmp
popw
out
add
lahf
adc
imul
xor
fidivl
cmc
out
xor
sub
setl
rol
ljmp
mov
push
hlt
je
lret
adc
xchg
pushf
or
and
jmp
lcall
ljmp
and
xor
call
adc
or
iret
gs
out
popa
je
push
mov
sub
cmp
repz
and
sub
ret
pusha
push
push
mov
dec
jo
jne
int3
jne
xor
je
xor
decl
xor
das
insl
sbb
mov
inc
mov
add
pushl
adc
and
xor
jmp
bound
mov
or
in
jecxz
fcmovne
leave
push
cmp
push
repnz
xor
call
imul
daa
or
lods
jae
cmp
insb
sbb
or
scas
jg
push
test
pop
push
dec
dec
add
mov
and
add
pop
pusha
sti
jns
cmp
icebp
fidivs
xor
sbb
andb
mov
call
sbb
fmul
jl
add
cmpsl
cli
popa
add
scas
adc
ret
addl
inc
aas
rclb
dec
push
je
push
sbb
push
pushl
mov
sub
outsb
dec
sbb
push
ljmp
mov
mov
adc
jle
and
lcall
mov
and
and
inc
aam
adc
rorl
add
decl
daa
lcall
pop
inc
test
movsl
pop
adc
mov
jg
jle
insl
push
bound
dec
mov
push
add
push
xor
lret
in
and
cli
jmp
cld
outsb
ja
loopne
inc
jo
pop
loopne
mov
add
adc
push
les
test
or
mov
arpl
sub
js
pop
push
rorb
sub
jle
pop
not
and
mov
iret
cmc
and
outsb
adcb
dec
add
outsl
mov
or
adc
sarb
xor
mov
ljmp
das
push
sbb
add
add
movl
cli
add
stos
mov
ficompl
iret
mov
pop
aad
aaa
or
mov
mov
rcrl
lcall
inc
mov
repz
mov
call
aad
bound
fs
scas
call
ljmp
andb
test
or
push
les
outsb
mov
loopne
jp
enter
incl
cli
ds
ja
inc
loopne
xor
loopne
mov
sub
lods
rcll
add
sar
fisttps
ret
pop
in
rol
or
or
incl
jmp
pcmpeqw
rclb
push
icebp
cs
ja
pop
adc
fdivrp
mov
les
dec
xchg
test
sbb
push
cmpsl
adc
loopne
aad
decl
dec
test
jb
sarb
push
sbb
push
jle
add
pop
das
sar
dec
mov
add
xchg
ss
push
dec
and
or
cmp
ret
or
or
sbbb
fstpl
sbb
inc
xchg
sbb
ret
jne
aam
call
push
mov
cmp
cmp
jno
mov
inc
adc
aam
xor
pushl
push
insb
ret
jle
jge
adc
mov
addr16
test
fcomip
incl
cmp
lock
sub
test
mov
cmp
and
fstpt
xchg
inc
loope
sub
mov
pop
loopne
scas
jno
push
fsubrs
push
cmp
cld
push
push
outsb
add
imulb
shll
lods
push
iret
in
mov
push
pop
jbe
shlb
addr16
xor
pop
lods
dec
lret
jmp
push
or
out
and
inc
pop
arpl
pop
push
cld
movsl
and
mov
mov
jg
jb
addr16
adc
pop
jae
xchg
outsb
cmp
and
rolb
cmp
or
cld
pushl
inc
dec
decl
cli
fldlg2
and
jno
loopne
sub
movsl
add
lock
adc
decl
inc
js
imul
ss
mov
pop
mov
adc
out
push
mov
pop
je
and
mov
adc
cmp
fistps
sub
into
call
shrl
je
pusha
adc
mov
pushl
pushl
push
mov
into
rol
movsb
popa
pop
xor
dec
mov
sbb
add
fildll
out
stos
js
cld
cmp
xor
sbb
lods
mov
je
adc
inc
pop
cmp
mov
ds
cltd
cmp
push
jns
xor
and
ja
cmp
add
sbbl
mov
jge
inc
decl
fsubr
lahf
call
push
clc
fidivrl
jmp
adcl
arpl
push
inc
mov
add
add
mov
pop
cmc
jmp
jbe
add
push
inc
inc
pushf
push
add
loopne
loopne
lahf
push
push
fbld
loopne
xor
jbe
mov
xchg
cs
pop
sub
mov
xor
dec
jl
mov
and
std
jmp
mov
sub
push
stc
pop
inc
sub
jbe
pop
push
adc
enter
loope
das
pop
bswap
and
dec
pop
aad
clc
lea
push
add
ja
xchg
das
clc
fcomp
addr16
inc
incl
inc
std
pop
hlt
add
adc
jp
flds
xorb
repnz
outsb
mov
scas
stos
push
add
orl
jecxz
cmp
mov
lods
shlb
mov
add
in
xor
and
clc
xchg
shl
pop
popf
add
dec
adc
incb
das
clc
es
push
push
adc
jp
frstor
jle
push
adc
jg
subb
int
loope
test
repnz
loopne
mov
int3
mov
data16
aad
dec
sarl
adc
call
sti
ret
xor
sbb
cmpb
movsl
or
add
fdivr
and
or
incl
cwtl
mov
out
lods
push
arpl
je
add
aad
dec
mov
out
std
jae
call
mov
daa
pushf
jno
jne
push
pop
xor
inc
in
mov
lcall
adc
or
je
jmp
out
jb
stos
mov
cmpsl
jmp
pushl
mov
xchg
lea
orb
cmc
pop
xlat
sbb
outsb
iret
nop
sbb
test
std
mov
lahf
dec
movsl
cmp
push
int3
add
jb
cld
pop
call
outsl
and
mov
sub
pusha
mov
sub
test
imul
or
cmpsl
mov
pop
test
pop
aas
pop
pop
add
jno
lock
or
and
ja
pushl
inc
add
mov
or
inc
fwait
enter
push
jg
fcomip
sar
addr16
shlb
or
jo
mov
sldt
scas
fisttpll
push
dec
adc
lock
mov
mov
mov
or
dec
jmp
aas
mov
fs
push
adc
dec
enter
add
jg
mov
out
and
inc
aaa
fisubl
fdivs
shl
filds
push
rol
lcall
dec
adc
jmp
cmp
aam
jne
or
jo
and
test
add
incl
jge
ljmp
sbb
and
aam
fildl
lcall
push
ja
sub
jno
lock
jbe
fndisi(8087
xor
js
adc
fmuls
jo
call
je
pop
lods
xchg
test
adc
insb
mov
notl
lcall
xor
mov
push
lret
fistpll
cmpsb
lock
ljmp
sub
push
push
jge
mov
bound
lods
sbb
xchg
jg
es
in
ret
fwait
les
addb
xchg
pop
or
ljmp
mulb
popa
and
push
jge
pop
push
cmp
dec
andb
or
mov
roll
fwait
movzwl
leave
arpl
pushl
lods
cli
mov
dec
shlb
cmp
pop
xor
or
sub
pop
inc
sub
ljmp
push
add
enter
cmp
add
rcrb
push
jg
clc
pop
and
pushl
pop
adc
or
or
dec
paddsw
clc
into
orb
dec
cmp
jbe
aad
or
push
data16
inc
mov
mov
cmpsb
push
in
js
dec
out
arpl
xchg
fbstp
xor
in
lret
orl
std
jg
mov
sti
scas
gs
jo
ds
test
push
pop
inc
cld
pushl
dec
or
adcb
push
leave
sub
aaa
xor
insb
sub
push
xor
sbb
cli
add
jb
cmp
add
cmp
jmp
dec
dec
ret
jecxz
mov
add
dec
mov
mov
inc
push
pop
fsubrl
orb
cld
leave
push
sub
and
sbb
pop
sbb
inc
mov
jo
js
sar
es
fsubrp
jbe
mov
shll
call
mov
hlt
xor
mov
test
sbb
dec
mov
lcall
xor
adc
lock
mov
inc
cmp
es
add
xchg
push
jns
mov
xor
mov
call
arpl
and
xor
repnz
call
cld
arpl
mov
mov
popa
xchg
aaa
sub
push
lret
push
cli
mov
lcall
in
iret
pop
lret
xor
add
ss
sub
or
dec
add
cmp
fnstcw
dec
leave
sbb
jle
sbb
lcall
loopne
or
and
rcll
adc
in
sub
adc
imul
call
sar
ljmp
sbb
jae
pop
subb
jmp
in
inc
lods
jne
jle
push
lea
rolb
icebp
cmp
incl
inc
pop
cmp
fcomps
lock
add
les
sub
ljmp
sub
sbb
pop
sub
mulb
outsl
inc
inc
mov
call
push
loope
xor
adc
je
push
jb
loopne
pushl
punpckhdq
mov
cli
mov
aas
cmc
jp
imul
call
mov
push
mov
jbe
ljmp
inc
call
inc
xchg
lea
cmc
cmpsb
pop
data16
cli
lcall
cli
mov
outsb
lea
cs
pop
shll
lea
jmp
jae
subb
pop
test
loop
gs
fwait
sub
arpl
icebp
push
lar
dec
mov
pushl
test
lods
inc
jbe
mov
mov
pop
sti
jne
push
ja
mov
inc
adcl
push
jo
mov
sar
mov
push
adc
std
hlt
sbbl
inc
add
jbe
mov
pushl
push
fcmovne
jne
loopne
ss
je
cmp
sub
pop
add
cmp
adc
jne
mov
dec
push
sub
sub
pushl
lret
dec
inc
or
push
mov
dec
pop
push
jno
xor
insl
xchg
mov
mov
add
sti
fistl
pop
sbb
stos
sahf
clc
mov
cld
and
outsb
adc
dec
dec
shrb
out
data16
xor
add
ret
decl
mov
daa
mov
push
or
jmp
clc
in
push
out
xchg
add
jmp
cmpsb
dec
addb
ret
jae,pn
mov
sub
dec
pop
mov
ds
cld
decl
mov
mov
fimull
xlat
dec
sar
cmc
add
jp
test
incl
cli
dec
sub
lock
ds
or
aaa
icebp
push
arpl
out
incl
sbbl
je
push
push
mov
adc
pop
jmp
out
repnz
mov
orl
or
or
pop
mov
movsb
call
std
je,pt
push
sbb
push
outsb
fstl
pop
push
push
outsl
mov
fistps
mov
lock
inc
and
call
inc
test
mov
push
or
js
jnp
sub
cwtl
imul
clc
or
mov
push
lds
sbbb
imul
adc
pushl
lods
and
test
or
lea
dec
dec
not
popa
inc
fbld
mov
cs
pop
push
add
pop
add
or
decl
enter
add
push
sbb
push
roll
push
mov
ljmp
mov
mov
adc
sbb
pop
sub
push
and
lock
jg
add
adc
inc
mov
jg
repz
jbe
push
clc
sti
notb
sub
lcall
fcomip
adc
xor
dec
shr
or
adc
xor
push
jmp
mov
or
add
mov
lods
movsl
fsubrs
or
adc
mov
sbb
addl
insb
inc
fmuls
xor
subb
pop
inc
cmp
roll
lcall
pop
inc
xchg
call
sbb
xor
push
stos
cmpl
sub
decl
cmpsb
in
rcrb
or
mov
pop
push
leave
cmpl
clc
add
mov
decl
mov
call
mov
sti
pop
stos
mov
pop
fistl
lods
inc
adc
pop
mov
mov
jg
push
push
add
and
lock
aam
ret
xor
adc
push
jbe
aas
cld
lcall
jbe
lcall
push
sub
adc
or
jle
sub
mov
add
gs
inc
cmp
mov
sub
push
and
and
movsl
ds
imull
call
cld
std
rorb
bound
add
or
jmp
mov
push
add
call
pop
lret
inc
and
das
jb
add
mov
ljmp
pushl
push
call
push
rorb
cmp
call
jns
and
ljmp
mov
pop
stos
bound
inc
push
sbb
push
add
mov
mov
dec
jbe
das
outsl
sbb
call
fs
xorb
outsb
or
ljmp
mov
fcmovnbe
stos
inc
sub
sub
les
int3
dec
xor
call
inc
fisubs
in
call
xor
nop
inc
mov
into
cmp
call
or
add
repz
sti
cmp
test
xor
add
pop
pusha
leave
mov
xor
adc
lcall
xor
xor
add
pop
adc
sbb
adc
ja
xchg
rolb
jns
pushl
and
add
jbe
jl
decb
pop
and
inc
pop
sarl
fnsave
jmp
sub
push
and
or
das
andb
jmp
push
lock
or
dec
imul
rolb
call
cmc
pushl
lahf
inc
lods
add
pop
push
adc
mov
cmp
push
push
leave
mov
jmp
pushw
ljmp
mov
pop
inc
pop
add
hlt
dec
sahf
rolb
mov
jg
sar
inc
sbb
mov
cmp
sub
dec
jae
aas
and
lcall
xor
pop
movsb
pop
inc
mov
loop
sti
adc
mov
and
loopne
imul
cmpl
jmp
add
test
es
sar
popf
mov
mov
dec
pusha
jg
imul
movsb
je
js
sbb
adc
test
rclb
or
lock
pop
cmpsl
imul
sub
xor
mov
cmpsl
inc
loopne
dec
mov
cmp
ret
call
mov
ljmp
enter
add
rorb
inc
jo
xor
adc
scas
sarl
cmp
call
push
adc
nop
adc
js
sub
lcall
push
jo
iret
lcall
arpl
repz
mov
inc
movsl
add
ret
or
cwtl
adc
or
in
add
jg
decl
inc
sub
add
xchg
fisttps
pushw
movb
push
sbb
fucomip
sbb
jae
pushf
jne
lret
mov
push
mov
sub
push
dec
roll
scas
decl
in
les
repnz
sbb
mov
mov
push
push
stos
jmp
fs
xor
mov
loope
fidivrs
pop
rcr
adc
decl
fldt
dec
mov
jo
loope
cmp
cvtpi2ps
idiv
mov
push
mov
ret
pop
add
add
push
push
xchg
ljmp
incl
and
add
xchg
outsb
adc
xchg
dec
mov
sub
lret
les
cmp
xor
mov
xor
cwtl
inc
out
add
or
jg
mov
aad
test
jg
js
sbb
jg
lar
push
popf
push
fmuls
jbe
leave
or
add
mov
xchg
jno
push
mov
clc
inc
or
inc
inc
call
and
je
jae
mov
fdivrl
shlb
outsl
enter
lock
lret
pop
push
ret
mov
dec
movb
pop
adc
inc
out
pop
mov
add
insb
in
xor
jne
mov
sbb
ljmp
push
push
xor
push
cmc
and
mov
call
add
or
scas
jge
mov
aas
cwtl
mov
inc
hlt
clc
xchg
mov
xchg
aaa
lahf
xchg
inc
or
cmp
mov
pop
sarb
cld
jo
cmp
fcmovb
dec
cld
mov
popf
add
cmp
addr16
mov
xchg
xor
push
cs
lock
clc
jmp
and
add
pop
push
or
cmp
ret
or
cmp
or
aaa
insb
mov
pop
and
jg
ds
mov
sahf
fidivl
or
pusha
je
adc
dec
push
xchg
clc
pushl
enter
loopne
pop
or
js
orl
xchg
flds
xchg
mov
outsb
add
jmp
inc
fimull
sub
sub
fisttpl
les
negl
subl
mov
cmp
outsl
jo
xchg
ds
dec
sbb
pushl
add
adc
insb
stos
jne
cmc
cmp
filds
dec
and
or
sub
inc
fiadds
mov
and
cmp
out
cmp
xor
or
push
xorb
jle
mov
ja
fildll
sub
push
add
sbb
fbstp
cmp
imulb
pushl
outsl
std
lcall
cmp
cli
lea
imul
push
sub
jmp
decl
outsb
cld
mov
xor
mov
mov
sbb
add
mov
ljmp
pop
sub
adc
mov
iret
push
out
out
and
inc
adc
adc
lods
dec
call
incl
cmova
data16
loopne
mov
inc
sub
add
jo
inc
mov
or
cmp
and
scas
decl
movsb
ja
hlt
cs
xchg
movsb
lds
mov
mov
add
int3
push
pop
popa
jo
je
inc
jnp
jmp
fidivrs
adc
das
clc
inc
in
stc
std
insl
mov
xchg
jno
pop
enter
jo
and
call
inc
ret
fsts
rolb
push
rclb
repnz
idiv
aam
cwtl
test
mov
and
push
bound
dec
jae
pop
pop
dec
add
aad
xor
incl
push
and
sbb
pop
negb
pop
xchg
addr16
jl
add
ljmp
mov
cli
dec
push
adc
cmp
sub
dec
xlat
xor
data16
mov
pop
add
dec
dec
aas
fmull
insb
movb
push
fcoml
fs
add
and
bound
ret
xor
shl
pop
dec
cmp
or
xor
inc
out
sbb
sub
insb
in
mov
cmpsl
mov
sbb
ljmp
ds
bound
jo
mov
cmp
int
sub
jne
andb
mov
push
lcall
add
into
xchg
sbb
jle
and
leave
aam
pop
in
jo
jne
add
ds
push
mov
inc
and
outsl
ds
adc
incl
lret
add
loopne
jne
add
inc
dec
add
push
add
jle
mov
jb
sbb
jl
cli
jmp
sbb
add
fmul
jne
inc
gs
std
mov
push
sar
push
hlt
loopne
and
xchg
cmp
decl
cli
popa
sbb
loopne
incl
add
imul
mov
ficomps
repz
push
add
js
pushl
xchg
adc
fisubs
cmp
push
clc
clc
loope
pop
test
mov
incl
roll
loope
js
push
in
loopne
popf
or
inc
and
aam
dec
add
mov
in
je
mov
add
mov
mov
add
add
or
pop
pop
cmc
std
pop
rorb
pop
clc
push
push
inc
sbb
and
mov
dec
mov
pop
insb
xor
call
pop
or
add
je
addb
pop
sbb
mov
mov
sarb
jge
sub
mov
lcall
in
pop
and
mov
dec
add
jp
test
xor
sbb
inc
adc
imul
adc
mov
decb
ss
das
incl
aam
inc
lcall
pop
int3
add
add
lret
mov
pop
pop
imul
jg
pop
clc
inc
icebp
and
lds
movsb
pop
cmp
cwtl
lret
call
cld
adc
pop
add
ret
repnz
ljmp
in
sbb
pop
ret
fstps
test
inc
inc
inc
xor
fiadds
decl
ds
andb
addb
pusha
clc
and
sbb
add
sub
or
add
pop
push
xor
cld
pusha
lock
push
xor
call
test
cmp
les
or
sarb
mov
push
aam
outsb
sbb
jg
mov
mov
xchg
incl
jg
mov
pop
mov
int3
ficoml
dec
rclb
lock
mov
outsl
addr16
jg
in
popa
xchg
je
adc
cs
or
sar
sbb
roll
xlat
adc
cmp
jg
aas
inc
test
cmp
loope
pop
cmp
cmpsl
adc
imul
call
sub
call
lret
nop
sahf
xchg
mov
sbb
daa
ljmp
out
pushl
and
les
es
ud0
inc
outsl
ret
dec
adc
test
xchg
adcb
push
inc
mov
mov
push
inc
push
xchg
incl
decl
add
sti
xchg
shl
inc
jg
mov
xor
mov
dec
mov
gs
dec
jmp
sahf
adc
je
cld
pushf
stc
jns
sar
aam
push
jle
in
sub
mov
jo
or
dec
mov
ret
inc
cmp
out
sub
sbb
cmp
mov
in
aaa
xor
call
jmp
sub
jmp
sbb
das
push
in
bound
adc
ret
cmp
jmp
inc
mov
test
hlt
or
push
outsl
mov
inc
lcall
cmp
clc
jg
fxch
xchg
test
std
mov
xor
fs
dec
in
cwtl
loopw
pop
pushf
cmpb
mov
stos
fists
iret
test
cmpsb
inc
or
dec
mov
lock
pop
xlat
mov
jge
push
mov
push
push
add
loopne
dec
in
ljmp
les
ret
pushf
nop
scas
pusha
andb
jmp
mov
sub
mov
mov
dec
addb
lcall
movb
inc
dec
xchg
leave
cmp
aas
jbe
or
add
je
sar
icebp
std
adc
incl
dec
mov
hlt
ljmp
adcl
inc
ljmp
xchg
jg
jecxz
and
adc
pushl
xor
xchg
jb
incl
and
sahf
inc
neg
push
xchg
mov
pop
in
fdivrp
cmp
fwait
push
push
jg
cmp
stos
dec
mov
test
orb
jns
pop
cli
les
incl
cld
sub
push
enter
out
add
mov
dec
inc
cmpb
lcall
sbb
add
inc
fbstp
add
clc
movsl
repz
dec
push
sub
ljmp
inc
call
sbb
push
pop
add
adc
mov
jl
add
clc
lcall
xchg
pop
ror
jp
into
xchg
inc
xchg
ljmp
incl
mov
pop
push
mov
dec
dec
sar
cmpsb
incl
pop
lea
jl
or
dec
ljmp
hlt
add
test
stos
add
jmp
mov
push
push
rolb
sub
shlb
dec
add
and
lods
add
pop
jmp
test
loopne
in
lock
decl
je
pop
sub
jmp
xor
fwait
int
sbb
outsl
and
adc
mov
dec
mov
shll
arpl
adc
lea
xor
pop
or
mov
mov
xor
push
inc
mov
rolb
sar
add
inc
push
mov
mov
pop
adc
add
lcall
mov
push
je
repnz
je
aad
jg
mov
lock
rclb
lods
test
orb
dec
in
movsl
sti
stos
lcall
pushl
mov
pop
std
loop
jecxz
add
xor
cld
ficoms
pushl
adc
and
and
aad
sbb
popa
int3
ja
roll
xor
cld
mov
lcall
in
dec
jle
dec
outsb
mov
aad
insb
movsb
lds
and
fbld
xchg
pop
clc
je
es
fisubl
incb
mov
mov
mov
cmpsl
pusha
xchg
movsl
dec
lods
inc
pop
das
bound
out
pop
mov
cld
add
ds
mov
sbb
or
jg
jmp
adc
cmp
mov
aaa
aaa
scas
lds
pop
push
ret
adc
push
pushl
lea
xchg
test
cmpb
add
fadds
loope
fdivl
xor
das
movsb
cmp
clc
xor
jbe
test
and
incl
fwait
and
subb
add
mov
inc
ljmp
add
cld
or
pushl
push
test
cmpsb
push
push
jg
xacquire
fbld
jl
jle
sub
lods
loope
mov
mov
insl
popf
push
inc
sbb
sub
fsubrs
sbb
das
jb
decl
add
std
sti
aas
mov
movsl
xchg
imul
sbb
clc
or
lock
ljmp
xchg
rclb
pop
jnp
jb
movsb
xor
std
dec
mov
repz
jmp
int3
inc
mov
insb
sahf
push
xor
mov
push
shlb
xor
inc
sub
inc
push
mov
lret
or
enter
sub
cld
addb
incl
or
divb
inc
es
or
jbe
out
call
inc
add
sarb
sbb
add
inc
pop
movsb
jge
cli
sbb
adc
add
pusha
sbb
aam
mov
fcmovne
mov
push
pop
mov
inc
pop
xchg
add
call
pop
loop
dec
jge
lcall
negb
mov
xchg
ja
push
cld
cmpsl
std
inc
js
incl
mov
xor
push
jo
pushf
in
jg
cli
fwait
decl
pop
testl
push
rcl
inc
decl
mov
jmp
dec
clc
sbb
inc
inc
push
call
cmp
push
dec
incl
or
pushl
inc
pop
or
lret
es
fcomp
inc
nop
mov
or
ljmp
imul
add
cli
out
dec
pop
or
mov
sti
or
pop
cmp
gs
call
push
lock
inc
add
xor
out
xor
mov
mov
shlb
jbe
idivl
jbe
and
pop
inc
add
mov
push
sub
sbb
mov
push
add
mov
lret
dec
sarb
adc
decl
pop
cli
or
sbb
jg
sub
rcrl
inc
add
xchg
ret
decl
jle
jge
pushf
fimull
inc
lock
leave
aad
ja
popf
and
inc
mov
mov
rorl
push
cmp
outsb
sub
mov
call
movsb
sbb
fistpll
loopne
aam
mov
jmp
cli
push
mov
lahf
pusha
cld
sub
fs
jns
add
incl
lea
pop
mov
cmpsb
fs
out
popa
adc
adc
aaa
push
add
lcall
and
ret
mov
scas
nop
xchg
call
mov
pop
xchg
jbe
or
aaa
mov
cltd
outsb
xor
pushl
jns
jecxz
insl
push
push
mov
in
or
or
stc
add
lock
pop
mov
call
pushf
mov
call
clc
dec
jg
ljmp
jb
mov
imul
loopne
cmp
or
cli
jle
mov
cli
clc
jl
cmpsb
movsl
icebp
scas
repnz
ror
mov
incl
mov
jae
sbb
jg
fisttpl
fisttpll
pop
sub
add
outsb
call
divps
inc
bound
lret
or
push
out
mov
fstpl
test
add
jne
incl
mov
sub
mov
lcallw
cmpsb
inc
jge
insb
xchg
mov
ja
rolb
sub
ds
arpl
call
push
xchg
dec
lods
insb
adc
notb
jg
cmc
stos
xor
jns
inc
scas
xlat
cmp
js
incl
sbb
scas
icebp
pop
jne
arpl
sbb
mov
pop
mov
dec
call
orl
ljmp
add
inc
insb
nop
and
fists
jmp
mov
jne
mov
mov
repnz
in
jge
mov
inc
enter
sub
loop
mov
sub
xor
and
adc
lcall
add
adc
add
add
js
sarb
mov
pop
out
push
insb
decl
add
fstl
dec
add
lcall
adc
jmp
call
and
mov
inc
add
push
imul
orl
adc
incl
adc
in
sub
mov
aam
ret
push
dec
pop
mov
das
cli
cmp
incl
test
shlb
pop
movsl
mov
fisttps
jmp
add
or
decl
xchg
decl
mov
ret
pop
add
and
sbb
add
idivb
push
add
int
or
sub
mov
aaa
std
add
lahf
add
push
sbb
xor
mov
scas
and
sbb
and
cmp
decl
xor
outsb
out
mov
int3
int3
push
test
inc
scas
add
mov
push
and
aam
push
sbb
cmp
jns
out
xchg
int3
js
push
push
lcall
idiv
push
loope
mov
sub
push
inc
or
incl
je
and
addl
cmpsl
test
ljmp
imul
in
inc
adc
cmpsb
push
push
pop
gs
stc
loop
mov
mov
push
mov
pop
fisttpl
jo
rcll
sub
sbb
ja
addr16
sbb
popa
fwait
sub
pop
mov
push
orb
mov
insb
addb
in
jl
xor
cmc
inc
add
jmp
js
push
faddl
jg
into
sti
dec
cmpsb
shll
mov
mov
jle
add
cmp
idiv
mov
stos
push
orb
fmul
sub
sub
adc
jg
les
call
pushf
imul
es
cmp
or
add
cmp
test
fildll
push
lock
loope
out
imul
dec
je
in
call
lock
add
or
outsl
out
orl
jmp
xor
cmp
mov
fdivs
xor
mov
fcomps
mov
jmp
xor
loopne
or
pmulhuw
leave
cmp
mov
test
inc
out
xor
mov
add
mov
out
add
inc
addr16
out
fwait
aaa
notb
cmp
pop
ss
ljmp
sub
aam
jp
add
adc
pop
push
incb
popa
cmp
xor
jbe
mov
jg
out
fadds
cmp
daa
pop
call
rcl
dec
fisubl
mov
dec
push
xchg
sbb
fidivrs
decb
int3
data16
cmp
inc
xor
jmp
lret
sub
jbe
loopne
xchg
adc
lret
jg
or
icebp
outsb
push
ret
add
dec
ljmp
rol
cmp
or
outsl
shrl
outsl
jne
into
jg
ret
and
jne
pop
xor
call
shrl
mov
pop
stos
js
xchg
cmp
mov
push
fbld
jae
mov
insb
xor
jb
mov
sbb
add
movl
outsb
lea
mov
incl
pop
insb
sub
adc
test
out
add
out
cmovp
incb
lcall
jbe
add
incb
dec
or
sbb
push
clc
or
jmp
lods
jmp
hlt
cs
loope
test
clc
sub
push
xchg
mov
lcall
sti
in
mov
push
mov
or
jg
dec
xchg
clc
pop
or
cmpsl
add
and
fsubrs
icebp
fisubrl
pusha
cld
pusha
push
pop
mov
jecxz
sbb
push
and
ja
jbe
dec
imul
push
push
jo
ljmp
out
jmp
fbstp
ja
jg
mov
les
dec
push
xchg
test
cmpsb
fcomip
lcall
clc
inc
dec
push
inc
fs
cwtl
fs
add
xchg
adc
ja
pop
adc
mov
insl
fs
fidivrs
sbb
jne
mov
lock
outsb
jge
in
and
mov
ffree
fs
xchg
sbb
fdivs
loope
fistpll
sbb
pusha
cmp
dec
jecxz
push
mov
loopne
jmp
push
scas
test
dec
cli
mov
mov
int3
shrl
sbb
cwtl
pop
and
dec
inc
sub
inc
xor
add
test
or
out
push
adc
bnd
push
jnp
test
dec
ret
lds
in
cld
mov
cmp
addl
or
ljmp
dec
jmp
jb
test
adc
mov
xor
jmp
fcomps
add
pushf
add
aas
decl
pop
mov
sbb
jo
pusha
stos
push
loopne
lods
jb
add
and
pushl
fs
push
lea
sar
jg
xor
subb
lods
clc
test
jns
mov
mov
inc
xlat
adc
pop
mov
stos
add
or
scas
sbb
fidivrs
imul
fiaddl
pop
aas
dec
or
not
out
add
jecxz
shlb
insb
shrb
mov
icebp
xorl
out
inc
ret
hlt
rolb
test
pushf
call
roll
addb
adc
fistpl
jge
add
and
mov
movsl
jb
jmp
insl
jl
pavgb
gs
je
mov
and
cwtl
mov
push
or
cs
imul
adcl
and
dec
sub
cli
test
inc
rclb
xchg
stos
xchg
test
mov
je
and
sbb
scas
or
arpl
sbb
add
insl
jg
inc
test
xchg
test
mov
or
push
mov
data16
xchg
sarb
jg
dec
jg
mov
scas
dec
loopne
fmuls
mov
mov
cmp
decl
loope
in
movsl
push
push
jg
in
push
call
mov
call
and
and
cmc
mov
fwait
movsl
fbstp
push
jp
adc
or
adc
sub
sub
sahf
insl
std
mov
jl
mov
scas
add
cmp
enter
out
adc
add
or
or
repnz
or
das
cmp
sub
fdivs
sbb
jl
ficomps
decl
in
cmp
mov
push
jmp
sbb
jo
mov
out
mov
xchg
mov
sub
call
sbb
rol
outsl
push
jmp
jne
leave
or
inc
jne
fidivrs
ljmp
fwait
add
fwait
adcl
pop
xorb
or
xor
call
jg
pop
cld
add
mov
push
xchg
jl
cwtl
cld
mov
lods
jg
push
jmp
and
outsb
dec
mov
pushf
push
ljmp
pop
add
bound
mov
adc
cld
ljmp
add
pop
ja
test
mov
add
int3
movzbl
jmp
pushl
push
xor
push
dec
lds
mov
sub
and
pop
fs
loopne
xorb
rsm
inc
add
dec
lea
mov
inc
add
inc
data16
pop
mov
add
xchg
outsb
adc
addr16
jae
inc
loope
inc
xchg
sub
outsb
cmp
loop
sub
push
sbbb
mov
js
sbb
adc
mov
repnz
xor
jno
mov
out
rol
sub
adc
ljmp
add
mov
cld
push
pop
decl
ljmp
or
jmp
sbb
push
dec
cmp
or
jmp
sub
xchg
jbe
add
fiadds
push
and
xor
fmul
div
cmc
xor
data16
loopne
push
dec
lods
outsb
ss
clc
jg
mov
adc
add
lds
ds
ja
or
and
push
pop
lcall
pop
push
add
stc
mov
mov
js
xlat
cmp
push
invd
mov
mov
cmpsb
push
jmp
push
mov
push
pop
cwtl
mov
adc
jg
aad
call
jle
lahf
and
add
jmp
mov
push
ret
les
test
xor
cmp
stos
jg
lock
xor
cmp
test
stos
pop
pop
cmp
inc
sub
push
dec
call
fldl
cwtl
jl
outsl
push
and
add
lcall
add
pop
cli
ss
mov
leave
bound
shll
xor
adc
mov
mov
aam
or
jne,pt
unpcklps
xchg
lock
jmp
inc
xchg
popf
and
pop
and
cld
xchg
pop
std
icebp
add
fildl
cmp
jg
add
nop
pop
mov
ljmp
cld
addr16
mov
loop
mov
aas
mov
incl
inc
clc
je
sahf
adc
subb
js
mov
or
pop
rcrl
lcall
jmp
add
mov
inc
sahf
and
test
imul
mov
xor
or
mov
call
and
jnp
jnp
int3
inc
pushf
arpl
out
lods
mov
in
mov
ljmp
jmp
sar
xchg
cs
jb
mov
test
xchg
je
xor
in
mov
aas
mov
ljmp
andb
fbld
test
movaps
cld
fistl
mov
pushl
cld
arpl
push
aas
mov
jmp
stos
adc
mov
pop
or
add
ret
pop
pop
dec
cli
decl
xlat
ja
sub
pop
mov
lret
sar
fcomip
or
aam
inc
hlt
in
or
fimull
mov
mov
jg
lret
and
sbb
cli
push
ret
nop
adc
jp
adc
xchg
jne
jbe
inc
decl
pop
push
adc
dec
sbb
scas
mov
mov
movsb
add
cld
adc
cmp
lcall
and
inc
cs
into
data16
add
dec
pop
push
add
out
push
nop
std
pushf
ljmp
lock
push
jne
add
or
inc
lock
mov
clc
ljmp
push
loope
sub
out
mov
jmp
ret
dec
mov
pop
jnp
xchg
push
clc
ja
je
pop
out
jge
incb
outsl
clc
inc
ja
mov
filds
or
pushf
pop
sbb
sub
mov
cli
decl
stos
sbb
jl
loop
std
inc
ljmp
and
icebp
popa
mov
call
pusha
xor
xor
out
icebp
mov
daa
inc
inc
cmp
pop
lods
es
pop
jb
das
pusha
in
sbb
or
adc
push
sbb
add
pop
jne
pushl
add
mov
push
mov
cld
cmpl
push
adc
push
push
pop
jmp
push
fsts
lea
mov
inc
sub
int
mov
incl
mov
inc
dec
mov
les
dec
or
mov
ret
clc
ljmp
and
ret
out
pop
insl
cmp
std
push
scas
push
add
daa
pop
inc
inc
daa
push
xchg
ret
call
ss
lock
aas
je
and
add
jno
mov
push
gs
clc
pop
push
dec
lahf
dec
call
push
push
xchg
jmp
into
add
add
cld
lock
mov
das
push
stos
adc
sbb
lcall
je
out
rorb
sbb
js
xorb
add
in
add
push
push
jo
cvtps2pd
mov
sbb
fcoml
jge
push
test
jb
js
shll
das
aam
adc
mov
out
mov
and
or
cld
cmp
jne
ret
push
cmpsl
addr16
call
cs
fisttpll
xchg
fisttpl
xchg
xor
adc
jge
frstor
movsb
push
fdivr
mov
dec
cmp
dec
pop
call
mov
call
ficoml
jecxz
push
cmp
bound
lods
decl
jae
mov
clc
mov
cld
jo
push
decl
and
jmp
fcompl
inc
les
je
inc
dec
rorb
push
lcall
mov
int3
loopne
xchg
rclb
outsb
pop
inc
enter
pusha
aam
mov
test
jg
jo
cmp
sbb
fiadds
enter
lcall
fdivl
mov
push
js
adc
ljmp
sbb
cmpsb
pop
xor
sbb
cmp
insb
mov
orb
call
ja
mov
xor
mov
dec
cld
cmp
cs
adc
clc
jmp
in
push
ja
clc
lds
cltd
mov
mov
push
movl
decl
pop
ljmp
adc
or
or
cmpb
mov
sbb
insl
jge
xor
add
pop
inc
mov
lds
cmp
push
repz
sbb
adcb
ds
add
xchg
sbb
cmp
je
fnstsw
push
cld
pushl
mov
pop
ret
inc
das
sub
jne
cs
dec
jne
loopne
daa
incl
cld
ljmp
leave
jl
aas
mov
test
ds
add
mov
ljmp
andl
jge
dec
adcl
xchg
call
sub
jmp
push
inc
das
dec
push
pop
stos
ficomps
mov
or
mov
inc
cmp
jg
pop
add
mov
jb
add
adc
test
sti
cld
and
out
push
pop
popl
xbegin
ret
inc
loopne
int3
inc
push
incl
add
inc
incl
inc
shlb
cmp
in
xchg
adc
jp
mov
addr16
fldt
mov
push
movsb
jmp
inc
mov
call
ljmp
fstpl
push
aas
pop
mov
aam
cmp
mov
sub
scas
add
aas
inc
orl
shr
cli
fsubrs
pop
scas
test
mov
outsl
xchg
fildl
adc
ret
insl
jo
lcall
call
sbb
shll
sub
outsb
push
cli
or
push
inc
jg
jne
jg
sbbb
adc
jle
and
and
ljmp
jo
stos
inc
add
pop
lret
rorb
std
add
or
mov
std
mov
dec
mov
test
pushl
std
lock
add
mov
push
and
inc
rclb
adc
pop
mov
std
fmul
or
inc
sub
loopne
mov
sbb
test
out
push
mov
jo
cmp
mov
rolb
es
mov
shr
les
pop
js
rol
pushl
hlt
jno
ret
sti
shlb
xorb
push
inc
imul
and
jg
int3
jecxz
lods
imul
iret
dec
mov
pop
cmpsb
movl
in
incb
ljmp
cli
cmp
lahf
test
or
cmc
cld
add
in
mov
jno
lahf
call
mov
addr16
mov
xor
sub
mov
aas
jmp
int
jecxz
or
add
ret
xor
inc
testl
arpl
mov
jle
and
ss
das
cmp
movsb
jbe
cmp
out
insl
xchg
pop
xor
fiaddl
popa
push
clc
sti
xor
idivb
ret
add
outsb
jp
jle
sbb
movsb
repz
mov
or
pushl
and
dec
insl
cmp
cmp
idivb
inc
xor
push
push
mov
lcall
dec
inc
cld
push
cs
cld
or
or
mov
jl
pop
pushl
je
cld
and
call
scas
lcall
mov
cld
pop
push
fists
mov
sub
daa
xorl
or
sbb
loopne
push
xor
cmp
call
push
jb
adc
mov
gs
pop
dec
and
dec
mov
pop
and
mov
push
sahf
fs
call
movsl
add
xchg
ljmp
push
in
clc
cs
sbb
cld
stos
add
add
loopne
les
mov
ljmp
fs
or
cltd
in
adcb
mov
sub
enter
scas
jg
or
inc
dec
leave
out
add
adc
fcomps
movl
lea
imul
cmp
sbbb
jo
incl
xchg
push
or
sti
add
inc
ss
aad
jae
xchg
insl
fisubrl
outsl
jmp
je
pop
add
jle
push
and
cmp
mov
xor
sahf
inc
std
sbb
sub
mov
push
push
and
lds
hlt
movsl
dec
jo
shll
mov
loope
repnz
pushl
adc
ds
inc
jle
je
test
dec
loope
adc
mov
popa
clc
ljmp
lea
or
cmp
push
sarb
add
icebp
addl
incl
cwtl
les
sbb
cmpl
dec
mov
inc
mov
js
xor
std
or
mov
aam
test
pop
or
mov
call
jo
pushl
fsubl
data16
fildl
xchg
aas
add
lahf
mov
in
add
incl
insl
out
test
scas
or
or
mov
sub
mov
push
pop
sub
daa
imul
scas
fdiv
mov
xchg
pushl
mov
xlat
inc
lea
ljmp
incl
cs
cmp
xchg
nop
mov
sub
dec
mov
das
pop
push
and
inc
sub
push
sub
pmulhuw
inc
mov
jg
pop
add
inc
inc
xchg
pop
push
fiadds
and
sub
sbb
mov
jmp
cmpsb
paddb
and
inc
call
cmpsb
ds
jg
in
les
stc
je
xor
clc
xchg
ljmp
decl
xchg
inc
sbb
and
and
ljmp
call
pop
andb
das
aaa
mov
pushf
test
pushf
std
dec
cmc
pushf
sar
mov
add
lcall
aam
cmp
test
ret
scas
cmp
pop
pop
ss
dec
jo
xor
cltd
lods
pop
mov
outsb
ret
ss
jg
mov
pop
int3
and
mov
mov
out
test
filds
sub
cmp
cld
inc
std
mov
mov
or
xchg
idivl
jb
std
ljmp
xor
or
xchg
add
jne
shlb
mov
push
dec
les
push
into
mov
decl
mov
stos
cmpsb
cld
push
dec
pop
dec
jecxz
mov
test
decb
popa
addr16
push
decl
adc
ds
sbb
mov
sbb
movsb
cli
jmp
add
pop
pushf
out
data16
insb
mov
ret
je
loopne
call
cld
or
sub
ret
add
mov
push
mov
mov
push
pop
mov
jb
mov
adc
jg
aad
or
xchg
push
out
or
std
jne
hlt
into
or
push
mov
xor
lea
test
popa
jno
pop
bound
dec
sub
adc
inc
add
or
mov
jmp
xchg
mov
mov
cmp
dec
rorb
dec
push
addl
call
std
cwtl
pop
sub
pop
enter
inc
adc
add
arpl
arpl
call
jmp
adc
pop
iret
out
inc
push
fidivl
outsl
insl
in
lret
out
aam
jge
in
push
mov
roll
dec
and
hlt
fdiv
mov
les
pop
push
pop
cmpsb
clc
sbb
pop
cmp
xchg
leave
call
mov
dec
mov
push
inc
sbb
loop
loop
sub
push
mov
subb
mov
jmp
rcl
xchg
cmp
movb
dec
add
and
or
dec
push
clc
cmp
outsl
jmp
hlt
clc
int3
add
xor
jo
fdiv
jns
push
mov
cltd
stos
sbb
clc
add
cmp
jmp
adc
push
sbb
add
add
nop
jl
inc
mov
cmp
clc
mov
xor
dec
out
or
incl
jle
inc
add
xor
lds
les
dec
sbb
cld
idivb
fidivrl
lcall
mov
sbb
adc
push
push
mov
push
pop
fcoms
add
push
aas
ret
inc
xchg
lock
aad
xchg
ficoml
ja
lock
cld
dec
incl
cmp
dec
jmp
decl
add
iret
iret
mov
and
xchg
add
in
fcmovne
push
in
insb
cmpsl
dec
les
imul
icebp
lock
imul
aaa
imul
pop
mov
cmp
orl
lcall
xor
jle
and
int3
testb
aas
mov
adc
push
sub
rcl
test
rolb
sub
cmp
lcall
in
mov
cld
pushl
fnstcw
fwait
cld
fcoms
std
push
subl
incl
mov
pop
rolb
pusha
in
or
pop
nop
clc
and
mov
jg
add
in
pop
movsl
test
add
sub
push
sti
stos
sahf
xor
filds
cmp
add
jb
sub
fbld
mov
mov
outsl
je
mov
mov
pushl
filds
frstor
sarb
adc
mov
enter
call
outsl
push
xchg
mov
sbb
rcll
jmp
xchg
ds
pop
sbbl
test
xchg
mov
and
pop
push
or
popf
nop
adcb
sarb
sbb
dec
add
scas
ljmp
pop
gs
push
add
ret
or
mov
mov
pop
cmp
test
fcomps
je
clc
ret
add
rol
mov
pushl
repnz
xchg
push
mov
mov
pop
jmp
and
jg
ss
jl
ljmp
mov
jl
jne
sub
jnp
pop
sub
cli
scas
daa
mov
add
and
enter
cld
xchg
xchg
jae
ljmp
dec
div
mov
mov
cmp
or
outsl
clc
pop
mov
sti
or
popf
jmp
sbb
into
jecxz
fdivrs
push
xor
inc
ljmp
aaa
adc
or
push
cwtl
push
cmp
xchg
loope
ljmp
dec
or
popa
clc
adc
pop
mov
push
loop
add
mov
call
inc
adc
jmp
jae
push
pop
insb
dec
push
cwtl
or
jb
mov
pushl
clc
cmpb
or
es
xor
jge
mov
inc
sti
ret
jg
jne
add
rcrb
stc
jne
jg
add
or
shrb
call
decl
movsl
or
mov
andl
add
jmp
mov
ret
ret
decl
add
xor
sbb
ljmp
push
jmp
cmp
sbb
jg
adc
es
ret
pop
nop
mov
cmpb
jne
decl
jmp
nop
fisttps
ret
cmpsb
dec
popa
add
cld
adc
mov
add
lods
cmp
data16
decl
cld
sbb
sbb
lcall
pop
push
in
jge
dec
push
std
xchg
adc
sbb
cld
fwait
lock
jbe
inc
mov
jnp
cld
mov
outsl
push
or
mov
clc
sub
mov
movsb
stos
data16
xor
leave
mov
inc
pop
in
enter
mov
cmp
jecxz
mov
sbb
mov
mov
add
xor
push
outsb
and
cmp
xchg
jbe
fbld
or
call
pop
sar
mov
dec
das
cmp
jmp
movsl
pop
sbb
movb
push
vrcpss
add
pop
imul
mov
xor
sarb
or
ljmp
adc
mov
or
out
les
add
and
push
push
mov
push
mov
addb
mov
iret
sbbb
jg
js
pop
in
cmp
jg
sub
xor
les
or
add
movl
jmp
decl
cwtl
stos
out
int
lds
jg
push
iret
and
mov
push
ljmp
add
lock
jae
pop
repnz
dec
and
and
int
test
stos
das
jecxz
push
cmc
cmp
clc
add
jmp
ja
loope
cld
insl
ja
cmpsb
das
jnp
push
dec
ret
outsl
movsb
jns
outsl
cli
or
scas
cmpsb
cltd
cs
fidivl
mov
loope
fcoms
test
clc
push
mov
dec
mov
mov
rclb
xchg
or
cmp
repnz
cmp
aaa
call
std
push
repnz
inc
lods
enter
cs
mov
add
push
push
in
call
out
xchg
aam
dec
jecxz
test
pop
inc
and
push
fbld
daa
sub
call
sub
mov
or
ds
mov
leave
sub
sub
ret
jg
loopne
cld
jns
decl
popa
or
push
aas
dec
in
inc
add
sbb
hlt
loopne
in
adc
call
cs
push
or
in
mov
flds
call
fdivr
movsl
jne
sti
or
imul
push
out
mov
cmp
mov
push
pop
inc
jmp
jns
push
lcall
mov
cli
dec
hlt
jae
jg
mov
cwtl
add
add
add
popa
stc
push
or
les
sbbl
or
add
jne
sarl
fwait
add
ljmp
dec
pushf
jle
test
lods
lock
sbb
jp
add
ljmp
lret
pop
lcall
mov
jl
ja
mov
enter
jg
push
push
ret
or
push
add
ss
adc
inc
mov
jg
xor
out
jg
cltd
xor
mov
jmp
leave
push
mov
les
sub
dec
mov
cli
ljmp
mov
jne
add
xorl
in
jg
pop
jg
gs
ret
sbb
les
add
stos
pop
sbb
add
adc
xor
ljmp
and
xchg
hlt
jp
rcll
hlt
test
js
jno
xchg
decl
cmpl
call
stc
js
mov
or
shr
popf
or
cli
rolb
dec
lods
pushl
insb
pop
pushaw
add
lret
mov
loop
addl
mov
aam
sar
incl
nop
pop
cmp
or
leave
add
adc
arpl
neg
pop
test
xchg
lock
pop
std
xor
jle
mov
mov
rcrb
cld
xor
mov
lods
stc
dec
fdivrp
cld
pop
or
xor
addb
iret
stos
or
test
add
inc
cmp
fistpl
pop
sub
ljmp
outsl
jns
inc
cli
jbe
mov
jns
lock
mov
push
cmp
and
out
push
repnz
ja
sub
or
nop
gs
lret
pushl
or
outsb
aad
add
stos
add
xchg
je
sub
xor
pop
sbb
pop
in
loope
jmp
mov
cmp
aad
sbb
pop
clc
lahf
adc
sbbl
ja
clc
decl
popa
xor
in
dec
shr
or
xor
loope
jecxz
push
dec
mov
repnz
stos
es
push
int3
shlb
pop
cld
fbld
mov
loope
xchg
push
add
mov
test
popf
cli
push
xor
call
scas
add
push
das
push
gs
test
add
incl
cld
jb
test
jmp
mov
xchg
pop
dec
add
xor
call
cwtl
clc
jle
cmpsb
rcll
mov
push
ss
test
cli
xchg
and
lock
adc
leave
adc
add
roll
mov
dec
and
jb
or
dec
mov
decl
ret
xchg
xorl
pop
out
push
push
cmpsb
push
out
insb
pop
xchg
add
in
jl
push
push
aas
lds
cld
mov
inc
lds
decb
xor
jo
add
xor
sbb
xor
or
ds
sub
lods
pop
inc
pop
jl
loop
rol
fnstcw
lds
jno
cmp
xor
push
sub
dec
subl
or
pop
pushf
add
push
and
lcall
lock
push
adc
and
decl
pop
push
cwtl
shl
xor
out
ret
add
mov
xor
sbb
decl
mov
inc
movsb
dec
data16
inc
stc
adc
in
dec
sbb
repz
jp
out
or
loope
ret
rorl
add
sub
addl
mov
push
in
rorb
fwait
push
outsb
mov
out
lahf
rcr
and
pop
push
je
das
test
adc
mov
add
xchg
aam
incl
cmpxchg
inc
mov
lahf
push
add
pop
sub
fistps
jne
cltd
ror
mov
dec
cmp
and
inc
dec
pop
in
add
mov
push
jmp
insb
push
push
add
mov
add
inc
es
lods
insb
call
std
rcr
sti
mov
pop
and
shl
inc
shl
push
iret
das
mov
add
pushl
inc
mov
adc
push
adc
pop
scas
es
decl
mov
jns
bnd
in
das
fldcw
sar
mov
or
lcall
outsb
mov
pop
push
mov
mov
sub
aam
mov
xor
call
mov
aam
test
add
lock
rcrb
es
xor
imul
adc
push
repnz
call
and
xor
xorl
add
add
dec
ja
pushf
mov
cld
or
jae
inc
stos
lret
xlat
push
fisttps
pusha
push
movsb
jmp
jnp
outsb
outsl
decl
orl
pop
cmp
clc
cmpsb
inc
mov
dec
stc
sahf
sbb
cmp
adc
push
sahf
movsl
jbe
mov
push
or
cld
pop
push
js
mov
mov
out
es
xchg
imul
jmp
mov
jae
int3
cli
incl
dec
inc
in
loope
or
in
idivl
frstor
xor
mov
fs
sbb
mov
rolb
mov
faddl
mov
inc
add
call
xchg
es
push
pop
outsl
ljmp
jbe
cmpsb
out
sbb
jb
pop
es
incl
add
ja
or
cmp
test
lock
movsl
lock
faddp
aam
inc
or
ret
cmp
jl
jbe
push
or
jo,pt
incl
loopne
divl
inc
sbb
dec
frstor
push
fistpll
push
pop
cwtl
cli
add
arpl
addr16
out
cmp
std
pushl
sarb
xchg
loope
mov
mov
clc
add
jb
pushl
call
dec
jb
push
or
cmp
and
push
mov
ja
inc
push
xor
pushl
fmull
adc
pop
pop
into
adc
out
mov
add
and
mov
cli
pop
xchg
pop
popa
clc
ljmp
jg
cmp
cs
push
and
push
sub
cmp
ret
jmp
ljmp
clc
or
jno
nop
xchg
lea
fwait
mov
inc
add
aaa
std
mov
mov
fcmovb
inc
cli
lcall
insb
inc
mov
fwait
ljmp
scas
pop
jmp
sbb
adc
xchg
mov
adcl
push
add
dec
fs
aaa
jl
xorl
outsl
clc
push
and
jmp
rol
push
ret
mov
scas
or
jg
adc
push
shlb
mov
sbb
outsl
and
std
mov
jg
sbb
out
ret
cmpl
int3
repz
fnstsw
inc
pop
push
adc
push
clc
testb
push
lret
nop
lods
cmpsb
lock
roll
dec
outsb
ljmp
inc
mov
js
xor
add
push
ret
or
mov
jne
mov
incl
cmp
mov
mov
bound
in
push
xor
cmp
call
inc
jne
rorb
add
rorb
mov
mov
add
out
out
test
xor
and
add
cltd
cld
xor
outsl
add
gs
ljmp
cli
push
add
das
shl
push
xchg
add
cld
incl
add
je
in
jg
aam
js
sub
mov
mov
into
dec
push
mov
fadds
and
movsl
data16
cld
and
or
decl
jg
incl
jbe
mov
gs
popa
inc
xchg
lods
pop
sbb
adc
outsb
incl
stos
add
aaa
xchg
dec
add
ret
mulb
xchg
inc
nop
push
xchg
test
movsl
mov
adc
xchg
rolb
lods
xchg
xchg
ljmp
mov
lock
jg
inc
mov
cmpsb
call
enter
test
lcall
and
inc
fbld
xor
stos
add
ja
decl
lock
cmpsl
ss
inc
stos
dec
inc
cmpsl
mov
in
test
gs
sbb
call
and
dec
sbb
sbb
rcll
imul
add
add
sbb
cs
ljmp
add
pushl
jmp
and
outsb
js
xor
sub
ds
xor
fbld
add
cld
cli
dec
mov
outsb
lret
pop
or
and
decl
xchg
or
jp
or
hlt
mov
outsb
jae
fcompl
mov
inc
or
mov
mov
fimull
and
cmovs
ja
decl
and
inc
lcall
jmp
pop
movsbl
psubb
lcall
pop
aad
mov
ds
dec
repz
jge
push
mov
nop
dec
cli
xchg
mov
dec
ret
jg
push
cmpsb
popf
or
je
hlt
loopne
repz
and
sbb
leave
rorl
fucomp
cmc
lods
scas
clc
add
ljmp
mov
je
push
incl
xor
xchg
pop
shr
xchg
and
xor
ja
pop
xor
and
or
sbb
ljmp
gs
jle
jp
dec
outsl
rclb
and
lods
fnsave
dec
sbb
ljmp
call
repz
insl
dec
jae,pt
xchg
add
xlat
jmp
push
pop
lea
pop
jg
or
ja
hlt
shl
adc
ljmp
adc
cmp
lock
popf
pop
adc
call
mov
aaa
hlt
in
adc
clc
sbb
mov
inc
lods
popa
pop
push
add
pop
femms
sar
fbld
xchg
jp
inc
mov
inc
add
xor
jp
xchg
add
or
ljmp
pop
lock
or
jne
push
adc
sub
pop
xor
rolb
mov
adc
popl
mov
loope
or
jbe
dec
ljmp
dec
or
jb
call
lods
nop
pop
and
mov
add
and
call
mov
sub
dec
cld
add
pop
dec
nop
iret
in
sbb
sahf
or
into
pop
xor
decl
add
in
or
les
sbb
aaa
jbe
gs
jne
push
call
add
xlat
jae
push
scas
jle
pop
ss
repnz
fcmovne
ljmp
dec
test
and
incl
push
jo
dec
in
jmp
lock
cwtl
shl
test
hlt
mov
or
rcll
bound
jecxz
or
push
cmp
dec
jne
adc
rolb
add
cmpsb
xor
iret
loope
sbb
movl
pushf
jmp
loope
or
sub
sahf
aad
imul
lcall
or
dec
pushl
lods
clc
pusha
decl
sbbl
sti
mov
rolb
push
push
pushl
jne
les
lahf
sub
in
dec
out
pop
add
sahf
lret
add
or
or
ljmp
clc
pop
sbb
mov
ror
jg
mov
test
jmp
pop
call
and
adc
popa
add
push
add
decl
push
incb
and
fcomps
mov
pop
dec
ja
lock
ljmp
mov
adc
cmp
adc
jns
stc
in
pop
add
sbb
faddl
xchg
adc
shlb
lcall
xchg
bound
sbb
mov
cmp
cmp
and
imull
repz
incl
pop
subb
test
std
mov
adc
int
add
decb
das
xchg
push
fdivr
pushl
mov
add
daa
cmp
push
incl
push
sub
insl
push
mov
sub
mov
mov
incl
push
and
pop
add
popf
test
dec
leave
ret
adc
dec
pop
out
call
xor
or
orb
cmp
cmp
push
incb
xorl
jg
jg
decl
and
xor
and
outsl
js
je
sarl
pop
loopne
iret
add
ljmp
add
aam
cmp
clc
jl
sub
cs
in
mov
ljmp
mov
push
shll
add
cld
test
insl
push
sub
add
mov
mov
push
xchg
push
mov
sbb
inc
sub
lret
or
jbe
adc
outsl
mov
inc
push
jne
sbbl
and
inc
add
je
sub
cs
mov
xor
outsb
ds
jbe
sbb
sub
call
scas
je
gs
push
pop
imulb
les
movb
lcall
dec
adc
mov
test
loope
jg
push
cmc
pop
pop
mov
cmc
push
or
xorl
loopne
fldl
push
adc
icebp
xor
mov
jge
les
cs
decl
dec
jge
mov
jmp
insl
add
lcall
dec
jecxz
add
imul
pop
fld
and
mov
inc
push
jg
mov
cmpsb
pop
sti
adc
sahf
scas
adc
pushl
incb
sub
cmpsb
pushl
pop
mov
roll
sar
lock
nop
push
mov
xor
decl
lcall
cli
ds
fisubrl
pop
mov
or
adc
fsubrl
cmc
pop
dec
incl
jb
incl
xchg
mov
popa
or
pop
jo
fs
add
decl
pop
inc
fwait
out
jns
cmp
lcall
out
insl
cmpsb
xchg
cs
mov
mov
add
jae
mov
xchg
int3
add
std
pop
std
lret
push
nop
inc
ret
inc
sub
je
mov
outsl
sub
or
jmp
inc
pop
fdiv
dec
testl
lock
ljmp
pop
pop
rcll
jb
xchg
cmc
xchg
inc
push
or
mov
cmpsl
fstpt
inc
xor
jle
outsl
or
jns
rclb
incl
push
adc
add
adc
xlat
bound
mov
cmp
cmpsb
pop
pop
jg
or
imul
jns
jle
or
inc
add
decl
shlb
lods
dec
das
cmp
cmpb
lret
push
push
dec
pop
into
jg
fdivs
lea
data16
aam
push
add
ret
in
jae
cli
jle
andl
incl
icebp
xor
sub
cmp
add
pop
push
stos
cld
or
push
dec
std
mov
mov
jo
dec
add
xchg
push
sar
pop
dec
ljmp
inc
je
pop
add
sub
mov
rorl
and
sub
mov
mov
jle
std
ljmp
cmp
lret
clc
rolb
push
push
adc
fldlg2
scas
mov
lret
push
mov
dec
mov
bnd
xorb
cli
addl
jmp
pop
pop
and
cmp
mov
ret
or
ucomiss
jg
cmp
dec
jns
pop
std
jg
les
aas
xor
pop
cmp
pusha
idiv
shlb
jae
sbb
ljmp
or
adc
int
mov
sub
das
sub
mov
js
add
js
out
test
xor
jl
ja
ljmp
cmp
add
fidivrl
je
sarb
push
mov
jbe
dec
out
jmp
aaa
sub
ficoml
sub
sub
jno
push
jnp
sbb
push
jle
jns
and
repnz
pop
mov
nop
fldt
adc
cmpsb
mov
push
insl
dec
xor
dec
mov
mov
xchg
push
xor
scas
aam
test
fcomip
mov
mov
in
push
xor
pushl
fdivl
xor
adcl
or
negb
and
xor
sbb
cmpsl
in
mov
push
aaa
lods
enter
cmp
andl
jg
mul
mov
or
movsb
xchg
dec
out
out
xor
dec
push
pop
and
repz
mov
mov
outsl
inc
adc
push
jmp
test
addr16
out
loopne
shlb
pop
sahf
cmp
push
es
ficoms
cmpsb
jb
dec
cli
add
test
mov
lahf
inc
jl
add
pop
xor
cli
hlt
add
jle
and
test
xor
xor
ret
imul
clc
rcr
fbstp
push
lock
jge
and
push
push
popa
sahf
push
inc
addr16
lcall
push
adc
and
adc
xlat
pcmpgtb
mov
testb
jmp
xchg
xchg
push
sbb
jp
cmp
jb
pusha
cli
cmp
js
xchg
decl
pop
lock
pushf
mov
lcall
add
jg
lcall
popa
mov
sbb
or
hlt
mov
cmp
cmp
incl
inc
pop
dec
mov
pushl
pop
xor
mov
pushl
push
orb
movsb
mov
fs
mov
shrb
adc
mov
pop
xchg
xor
sbb
mov
lcall
or
xor
add
pop
push
mov
jmp
outsl
cli
mov
lret
lock
stos
sbb
pop
mov
in
pop
cli
decl
daa
pop
sbb
lahf
mov
lahf
filds
call
pusha
xor
in
dec
mov
adc
push
sub
sahf
add
std
jbe
adc
ljmp
pop
hlt
pop
cwtl
fidivs
outsb
dec
xor
fcoml
fists
jmp
sbb
rorl
jb
andl
add
sub
insl
jl
jl
xchg
shlb
xorl
test
inc
or
add
aas
xlat
outsl
cli
clc
decl
out
popa
dec
pop
mov
insb
outsl
sbb
jns
inc
dec
clc
jg
cwtl
daa
test
mov
mov
pushl
add
lret
pusha
sbb
or
and
inc
inc
adc
xchg
in
ljmp
pushl
ret
lea
cmc
fsub
data16
out
sub
or
adc
in
sbb
jle
loope
int3
filds
repz
dec
mov
ds
dec
cmovbe
outsb
fwait
out
stc
orb
in
pop
mov
shr
lcall
stc
add
arpl
jmp
call
pusha
push
shll
adc
pop
orl
push
sbb
call
sub
fs
inc
or
lea
lahf
pop
data16
outsl
jmp
jmp
mov
ljmp
xorl
scas
es
aad
mov
mov
push
jmp
jo
mov
adc
pop
xor
sub
or
shlb
adc
mov
cmp
jg
aaa
std
pushl
cmp
pop
xor
inc
add
rclb
dec
push
inc
mov
cmp
decl
je
les
filds
add
sar
mov
and
bound
test
gs
or
add
sub
mov
cmp
aam
or
cli
pushl
inc
insb
std
pop
cmp
mov
call
jmp
cld
les
arpl
call
lods
or
add
mov
mov
in
jmp
in
xchg
sahf
jnp
fiaddl
lock
mov
dec
xchg
add
call
ss
jg
add
add
push
xor
push
cmp
cs
mov
inc
adc
add
data16
adc
ret
scas
fs
pop
repnz
push
sub
mov
dec
sub
pop
mov
icebp
sbb
and
mov
cmp
decl
addr16
cmp
add
iret
cmp
mov
xchg
mov
es
mov
push
add
xor
aas
jmp
jb
jge
mov
fildll
mov
inc
outsl
push
xor
loopne
movsb
in
addl
hlt
jg
pop
mov
divl
int
add
int3
in
adc
shlb
mov
loop
sbb
cmpb
mov
je
imul
notb
insl
rcrb
sahf
fdivl
clc
or
lahf
imul
inc
mov
push
out
adc
testl
jecxz
push
mov
outsb
add
lcall
add
lea
jb
sub
fildl
pusha
mov
lock
xchg
lcall
or
xchg
lret
add
or
jl
loope
add
sub
xor
lods
ret
push
pushf
sub
jg
sub
add
fisttpl
ljmp
mov
xor
add
xchg
pop
fcomip
call
inc
add
loopne
push
movsl
scas
addr16
sub
sub
loop
incl
jbe
test
fnstcw
mov
cmpb
adc
pop
lcall
mov
nop
push
add
cwtl
sub
test
lcall
call
xchg
leave
rep
adc
adc
cmp
stos
xor
inc
pop
fwait
cmp
call
xor
dec
jbe
adcb
mov
loopne
cld
xor
mov
sbb
xor
mov
xor
lods
stos
jl
mov
hlt
mov
shl
add
xor
xchg
mov
incb
xor
jmp
rol
cmpsl
lock
or
or
pop
fstpt
loopne
jmp
in
loope
call
ljmp
add
sbb
insl
lods
ljmp
lret
sbb
jmp
fnstcw
les
dec
jo
mov
add
jp
outsl
mov
mov
ret
lret
enter
and
xor
add
mov
and
cmp
lods
jnp
mov
pop
dec
incl
dec
push
ljmp
xchg
inc
pushf
cs
or
ljmp
out
in
imul
scas
popa
mov
mov
and
lcall
ljmp
fidivrl
jno
mov
ljmp
cld
push
push
aad
jmp
pop
andb
dec
fists
dec
lret
jle
pop
ret
cld
jmp
gs
call
call
mov
cmpsb
loop
idiv
add
jne
push
add
mov
cld
imul
ret
outsl
test
mov
lea
outsl
push
andb
xor
mov
mov
push
add
push
inc
loopne
fsubrl
lock
mov
adcb
cmp
jle
cmp
push
push
arpl
mov
nop
push
jmp
fdivs
sbb
fmulp
arpl
xor
outsl
pop
icebp
jmp
std
call
cmc
ret
pop
stos
out
lahf
rorb
mov
sub
lret
adc
or
fcomip
push
and
xchg
cs
pop
add
jle
sub
push
call
std
ljmp
mov
dec
inc
data16
adc
mov
outsb
jb
dec
mov
pushl
or
sub
cmp
or
jmp
imul
add
pushl
std
fidivrs
mov
push
subl
pop
repnz
loopne
mov
adc
sbb
ret
inc
stos
shlb
and
mov
mov
mov
sbbl
or
push
xchg
add
lret
lcall
push
mov
push
das
hlt
outsl
or
mov
jae
sbb
push
decl
mov
or
daa
xchg
pop
push
mov
adc
push
loop
jg
mov
hlt
jbe
sar
adc
mov
daa
mov
push
or
icebp
in
movl
sbb
or
loop
imul
int
inc
mov
sub
jmp
or
xchg
jl
add
add
lcall
ds
aad
or
sbb
jecxz
pop
shlb
jo
leave
jb
jg
das
cli
jmp
pusha
pop
int
sbb
xchg
sub
push
pushl
push
lret
rclb
adc
adc
jge
pop
cmc
clc
or
ds
mov
or
or
cmc
int3
and
xor
push
fdivrl
incb
incl
mov
clc
mov
addb
in
or
push
inc
das
xchg
mov
jmp
aas
pop
stos
fwait
and
into
dec
pop
cmp
imul
out
adc
call
cmp
jl
mov
xor
pop
roll
xor
lret
fnstcw
lods
add
lret
test
push
mov
inc
xchg
movsb
mov
push
cltd
adc
inc
mov
xchg
or
and
lods
fmul
cs
int3
inc
ja
clc
jmp
xchg
fadds
es
pushl
or
incl
dec
inc
pop
jge
inc
push
hlt
in
stos
push
cmp
sarb
addb
fildl
jno
scas
out
push
dec
mov
jmp
or
repz
popa
in
push
xchg
cmc
dec
xor
test
add
out
push
call
mov
lcall
fists
mov
call
cmp
jp
pop
shl
mov
pusha
loopne
push
fs
sar
incl
sub
dec
pusha
push
sbb
add
and
pop
fisttpl
mov
pop
cmpsl
and
fwait
jg
sub
fnstenv
inc
arpl
adc
push
lods
dec
or
jmp
hlt
jmp
add
lcall
fbstp
dec
sbb
mov
dec
mov
js
jg
sbb
test
jmp
or
adc
pop
add
adc
decl
lock
cld
jb
push
xchg
mov
imul
mov
lcall
fcomip
ljmp
or
jns
and
fstpt
or
fidivs
mov
idiv
test
mov
dec
cli
jg
mov
outsl
ljmp
jae
inc
cld
mov
xor
dec
mov
js
adc
jg
lock
pop
dec
and
cmp
aaa
mov
ljmp
insb
jl
mov
adc
loop
imul
in
inc
lretw
jno
mov
fcomip
mov
push
cld
and
dec
aaa
push
xor
mov
mov
inc
xor
push
add
stos
fucomi
mov
out
ret
mov
lret
adc
pop
push
and
add
inc
decl
fwait
imul
adc
adc
out
cmpl
stos
add
adc
lods
dec
fdivs
bound
add
call
jg
or
enter
and
jmp
je
lcall
jecxz
cmp
push
mov
pop
jg
mov
inc
add
add
inc
sub
rcrb
pop
and
test
les
dec
sub
pop
cmp
pushl
add
jg
inc
cltd
sbb
test
add
and
aam
adc
out
cli
mov
mov
push
idivb
jg
add
push
mov
lcall
mov
aaa
xchg
cmp
fnstenv
cld
jno
jmpw
pop
push
popf
push
cmp
dec
in
rclb
out
sbb
loop
shr
ret
call
scas
in
dec
jb
push
adc
sub
push
pop
sbb
jg
mov
loop
ljmp
jg
mov
mov
mov
mov
xchg
pushf
mov
inc
sbb
or
mov
xchg
lods
outsl
bound
adc
add
sub
and
pop
inc
sub
rorl
jne
sub
or
jg
add
add
rorl
pusha
loopne
sar
call
jne
stos
hlt
adc
fwait
std
add
pop
mov
inc
or
lods
pop
push
ljmp
decl
lock
push
add
jg
mov
sbb
sbb
cmp
ljmp
negl
int3
inc
push
enter
inc
pop
pop
lock
xor
or
mov
ja
je
xor
mov
pop
sub
xchg
or
mov
jecxz
mov
cld
aam
push
mov
mov
daa
fwait
jp
pop
inc
pushf
dec
sbb
add
call
dec
adc
int3
psrlq
inc
mov
loope
lret
sub
jb
rclb
or
push
mov
pop
ljmp
jbe
adc
lret
clc
call
sbb
pop
cmp
xor
pop
imull
ljmp
jl
jmp
jle
dec
out
jg
or
push
shrl
mov
mov
mov
pop
push
or
and
inc
or
call
addl
push
fiaddl
jg
hlt
dec
pop
stc
and
lds
jg
inc
les
add
jg
orps
and
shlb
adc
pop
loopne
mov
pop
stos
xor
push
insb
lock
ljmp
xor
cmp
int3
push
popa
js
or
adc
add
add
mul
inc
outsb
fdivr
orl
jmp
sub
inc
mov
pushf
adc
jg
add
push
int
inc
cmp
xor
mov
jo
outsb
add
cs
pop
adc
fstpl
outsb
into
inc
mov
lods
and
pushl
clc
push
jbe
add
sub
push
fnstcw
adc
inc
int3
cmp
ds
subl
orb
imulb
pop
sar
mov
cmp
stos
sbb
jl
sbb
or
ss
and
sub
or
mov
push
inc
push
push
lock
push
orb
dec
sbb
xor
popa
ja
fdivrl
incl
push
push
pop
decl
mov
fcoms
sub
incl
dec
pop
jg
insl
roll
pop
add
pushf
ljmp
jg
dec
mov
dec
fsubs
push
je
add
outsb
cmp
mov
lcall
and
adc
dec
mov
ror
and
mov
cmp
lret
xor
imul
call
and
mov
pop
insb
ljmp
inc
lret
decl
nop
xchg
arpl
add
call
cmp
and
sti
xchg
cmp
dec
xchg
aam
filds
xor
push
repnz
cs
ljmp
mov
fidivrl
cmp
addb
mov
shll
jg
dec
das
or
in
pushf
enter
sub
or
xchg
test
jg
mov
inc
addb
cmp
fdivrl
ljmp
jmp
add
loopne
sbb
repnz
push
lret
shlb
jmp
push
or
ljmp
clc
jg
add
jbe
xlat
ja
xchg
ja
ljmp
inc
jge
sub
mov
outsl
mov
and
push
sub
popf
fdivr
ljmp
pop
sarb
test
dec
mov
cmp
xor
lcall
or
and
idivb
data16
push
mov
pop
pop
mov
hlt
aad
jno
mov
mov
dec
push
jp
rclb
rol
inc
clc
cmpsb
cmp
push
adc
push
cmc
decl
or
push
cld
orb
scas
ljmp
xor
xor
mov
in
dec
call
adcb
sub
call
pop
inc
out
xchg
ret
adc
fcomip
cmp
and
add
pop
clc
mov
fisttpl
or
add
ljmp
imul
test
test
aas
sub
clc
or
movsb
xchg
sar
decl
add
inc
xchg
jl
add
jp
sub
inc
loopne
push
jmp
jne
sahf
add
pop
dec
outsb
pop
call
lea
imul
ficoml
popf
cld
imul
push
inc
jg
or
fistl
mov
xor
clc
mov
lock
dec
push
push
insl
inc
push
pop
add
je
adcl
push
jge
jmp
insl
icebp
push
loope
sbb
aas
setno
jmp
daa
out
adc
outsl
imul
stos
in
add
inc
in
jmp
js
addl
or
mov
mov
xor
ret
fdivr
les
nop
ud0
push
nop
sbb
and
jae
gs
rcrl
aaa
dec
lcall
pop
mov
mov
or
fisubrs
das
jbe
add
xor
sub
mov
and
mov
outsl
pop
data16
cli
mov
xchg
adc
push
andb
pop
cli
or
xor
test
out
in
call
stos
stos
test
inc
add
lret
adc
ja
lret
and
out
cli
jmp
sbb
dec
neg
call
pop
adc
fcoms
fcomip
mov
lcall
fnstenv
add
mov
sar
pop
or
into
push
subl
inc
pop
scas
fisttpll
aam
jg
inc
adc
add
loop
roll
hlt
dec
lret
jg
and
lcall
jg
sub
in
out
ret
je
pusha
jb
decl
lcall
movb
lret
cwtl
popf
loop
mov
xchg
decl
push
mov
add
pop
hlt
inc
inc
inc
stos
bound
mov
shll
je
mov
adc
push
pusha
mov
call
adc
push
sbb
lods
pop
test
inc
cmp
dec
fisubs
mov
fdivr
jl
or
outsb
or
out
cmp
sub
adc
mov
data16
sub
bound
cmp
mov
cmp
xlat
jle
cld
xchg
push
into
add
dec
mov
sub
push
lods
in
jmp
cmp
hlt
jle
mov
and
mov
call
adc
jmp
mov
push
jno
push
lock
pop
cmpsb
mov
cmp
adc
std
decl
dec
mov
push
pop
mov
lret
mov
fisttpl
frstor
cwtl
inc
ds
repnz
ret
push
js
jmp
sti
mov
push
test
adc
lret
pusha
divb
stos
es
add
lock
push
pop
add
push
cld
insl
sbb
andl
pushl
test
idivb
cli
scas
jg
je
xor
repnz
jbe
int3
cld
sbb
lock
or
lea
xchg
bnd
mov
sub
repz
add
scas
gs
or
outsl
cli
incl
and
out
cmp
pushf
call
loope
rcrb
decl
mov
repz
dec
cltd
call
shlb
ficoms
fiadds
push
xor
fwait
fisttpll
shl
mov
sub
clc
test
push
or
lock
je
mov
dec
mov
push
movsb
test
sahf
pop
push
adc
pusha
je
sbb
adcl
sbb
pop
pop
nop
xorl
and
in
mov
decl
and
js
mov
lock
inc
repnz
push
jae
faddp
pop
mov
sbb
fstpt
push
mov
lock
jg
lcall
push
call
mov
aam
push
loop
push
in
sub
lahf
cmpsl
dec
push
or
mov
out
jne
push
cmp
jb
ljmp
aas
or
sbb
rol
incl
adc
lcall
mov
leave
jbe
dec
add
hlt
pop
jne,pn
movsb
push
mov
in
aaa
movsb
adc
adc
mov
cld
inc
mov
cmp
mov
scas
add
test
or
inc
add
mov
stc
inc
rcr
sti
jns
mov
adc
mov
data16
push
xchg
mov
inc
int
add
ljmp
call
and
jo
outsl
dec
xor
popa
lret
dec
daa
mov
popa
jg
mov
rorb
mov
or
insb
ficoms
pop
add
sbb
or
call
aam
sub
mov
test
ds
jg
fdivp
lcall
insl
bound
and
mov
lcall
aas
mov
imul
icebp
push
jmp
dec
xchg
js
fcomip
lcall
decl
pop
mov
sti
je
cli
xchg
decl
xor
push
aad
mov
jne
fsubl
xchg
mov
xchg
jmp
dec
or
push
ret
lock
dec
jmp
inc
fbld
movb
mov
fisubl
push
outsl
adc
add
mov
mov
call
aam
sbb
sbb
and
loop
push
mov
push
neg
push
daa
jecxz
add
incl
pop
lcall
or
loopne
pop
repz
iret
scas
fs
aam
mov
cld
decl
xchg
lcall
cmpsl
add
mov
or
shll
sarl
adc
dec
mov
mov
lea
mull
xor
mov
data16
adc
call
jl
dec
dec
nop
cwtl
push
xor
call
push
notb
call
or
cmc
jmp
sbb
jnp
das
push
in
insb
clc
push
fwait
loope
cltd
in
test
mov
add
xor
adc
test
push
xlat
lds
or
call
add
in
sbb
inc
test
inc
dec
jle
les
int3
fildll
sbb
ss
pushl
push
mov
push
sub
insb
xchg
lock
xor
dec
outsl
xor
jmp
out
sub
loop
insl
movsb
int
aaa
inc
sub
mov
mov
sti
inc
sarb
cmp
je
push
mov
jb
or
push
cld
mov
scas
rcll
stos
fsubrl
in
in
stos
cmp
inc
clc
loopne
ja
inc
jo
dec
jg
xchg
inc
in
incl
add
push
add
jb
stos
or
clc
add
mov
add
add
pop
jg
call
test
in
cltd
out
loopne
push
aad
ret
push
arpl
sbb
incl
cld
divb
pop
mov
enter
aam
loop
cmp
and
call
or
rcrl
or
clc
dec
mov
decl
inc
jl
test
adc
lcall
push
jns
decl
loop
push
out
adc
jg
aaa
loopne
data16
push
cwtl
scas
outsb
push
ja
ds
cld
fisubl
inc
jmp
cld
mov
outsb
push
gs
js
xor
dec
jbe
mov
and
xchg
jns
sbb
jg
incl
push
out
pushf
rcr
pop
mov
sbb
testl
hlt
pop
push
jbe
popa
outsl
aaa
sub
jae
pop
xor
cld
cmpsb
pushw
in
or
pop
sbb
pushl
pushf
loopne
fwait
add
lea
incl
outsb
add
mov
and
mov
call
jnp
sbb
cmpsb
adc
nop
and
fucomi
sti
out
dec
adc
leave
clc
pop
hlt
mov
mov
insb
dec
jge
push
cld
icebp
jle
xchg
ffreep
arpl
jg
inc
jecxz
ljmp
pusha
mov
push
pusha
xor
sub
scas
or
icebp
incl
push
fsubrl
jle
fwait
leave
lea
mov
mov
test
mov
sbb
fwait
cs
pusha
dec
cmp
pop
cli
pop
sub
idiv
idiv
push
in
mov
jmp
pop
fcomps
cwtl
push
dec
add
scas
fidivl
xchg
cs
jbe
pop
stos
int3
lods
ljmp
or
adc
pushf
dec
outsl
sub
iret
rolb
push
push
jge
add
cmp
orb
or
mov
scas
jns
pop
push
xchg
pop
xlat
xchg
and
adc
and
je
jae
and
decl
mov
sbb
sub
shr
test
jg
cmc
sub
push
and
imul
lock
jl
pushf
or
or
add
fstl
movl
pop
std
adc
mov
data16
sbb
pop
fs
aas
fsubr
mov
dec
pop
inc
pop
inc
dec
pop
cmpsb
incl
adc
loop
lret
jns
adc
je
cmc
decl
push
and
jno
push
pushl
and
ja
rcll
pushl
imul
sub
jmp
addl
mov
push
std
pushl
test
add
pop
ljmp
pop
in
adc
incl
and
sbb
fs
ret
cmpsb
fisttpl
jmp
mov
dec
mov
dec
hlt
iret
dec
pop
arpl
and
decl
js
lock
sub
or
test
pop
pusha
je
rcrl
xchg
cmpsb
jg
cmc
ret
in
or
sar
mov
push
or
cmp
add
mov
fildl
jg
dec
ljmp
jge
fstpt
or
jb
out
lock
mov
dec
cli
repnz
pop
into
add
or
mov
cmc
scas
xchg
pusha
jmp
fs
and
jmp
scas
stc
in
mov
mov
aad
std
push
mov
movsb
jne
inc
shrl
mov
mov
pcmpeqw
andb
lahf
out
jge
lock
cld
sbb
inc
xorl
jmp
sbb
or
gs
sar
incl
lret
rcr
adc
mov
sbb
in
incb
add
xchg
incl
mov
mov
lahf
or
jmp
loop,pn
inc
sbb
pop
into
xchg
into
fisubrl
loopne
call
lcall
xor
fdivp
pushl
jg
xchg
ljmp
sbb
mov
mov
fcomip
jg
ljmp
add
pop
add
fidivrl
jns
cli
dec
fucomi
cwtl
adc
test
ret
cmpsb
outsl
insb
pop
and
and
xor
fcomp
cmp
rorb
call
push
push
jb
mov
add
mov
ret
push
add
push
add
in
insl
stc
ret
cmp
inc
xchg
and
xchg
lds
xchg
idivl
cmp
hlt
pop
rcrb
sub
in
outsl
pop
fisttps
dec
add
pop
loopne
jbe
mov
and
test
xchg
outsb
and
pushf
or
ljmp
lcall
push
fildl
shl
loopne
pop
xor
mov
sub
inc
or
hlt
jno
dec
mov
adc
rcl
inc
mov
andl
leave
fmull
and
push
addb
xor
cld
ljmp
addb
cmpsl
xor
mov
jb
incb
lock
mov
mov
and
push
or
insb
pop
jmp
jmp
fstpl
fiaddl
xor
test
arpl
nop
push
repnz
push
add
pop
bound
dec
add
xchg
push
shlb
push
cmpsl
add
ret
faddl
lahf
add
xor
outsl
dec
divl
mov
xchg
sub
sahf
or
int
lock
sub
xor
add
sbb
ljmp
add
add
push
test
add
inc
scas
fists
test
or
call
mov
jnp
inc
jo
shr
lea
fdiv
cmp
add
es
adc
pop
add
mov
jge
in
inc
scas
test
fwait
aam
scas
jae
out
xchg
cli
dec
roll
clc
fcomip
push
dec
dec
dec
sub
pop
jne
test
push
lods
ljmp
fs
dec
shlb
pop
popf
mov
xor
jg
je
out
cli
xor
test
fnstenv
dec
or
and
sahf
and
ljmp
ljmp
jp
scas
dec
push
and
xor
push
rcll
dec
pusha
fucomp
incl
dec
aam
push
cld
xor
xor
out
ret
mov
pushf
xchg
pop
xor
shrb
mov
adc
xor
cs
std
jmp
ret
ret
mov
jg
push
add
mov
out
cmp
add
xchg
scas
je
lock
mov
pop
or
sbb
adc
stos
push
rcrb
xor
sar
pop
and
add
fmull
insb
cs
jno
fldt
push
jg
incl
inc
dec
adc
mov
cmc
incl
data16
mov
cmpsb
xchg
daa
jae
js
ret
fiaddl
faddp
jb
sbb
or
mov
movsb
mov
minps
daa
ja
lahf
enter
inc
test
jg
jp
jecxz
jp
aad
lods
out
ret
add
pop
sbb
mov
jg
mov
pusha
or
mov
mov
adc
adcl
pop
or
add
sub
add
ljmp
and
call
pusha
push
inc
into
or
das
rcl
inc
push
out
add
xchg
add
mov
stos
inc
enter
sbb
fwait
jg
pushf
lcall
out
adc
adc
cmp
loopne
xor
pop
arpl
into
fcomip
mov
mov
pop
pop
or
sbb
cmp
push
enter
scas
cli
decl
xchg
cltd
xchg
add
xor
xor
loope
fcmovb
fcomip
jle
iret
orb
cltd
push
cld
mov
arpl
pop
aam
mov
cmp
test
jae
hlt
lea
jg
lea
dec
icebp
repnz
adc
shlb
ljmp
cmp
sbb
roll
cmp
js
inc
inc
jb
sub
inc
incl
aaa
mov
inc
outsb
jg
mov
sbb
adc
mov
xchg
movsb
and
xor
adc
pop
leave
decl
inc
clc
push
out
pop
mov
or
push
sarb
inc
imulb
insb
xchg
mov
inc
or
cmp
mov
and
pop
test
cli
das
cli
incl
jmp
sbb
xor
xchg
xor
push
jo
ljmp
inc
addl
inc
inc
add
out
adc
sbb
pop
in
cmpsb
push
call
lods
incb
cli
incl
sbbb
push
dec
and
mov
sbb
xor
pop
pop
inc
dec
pop
lea
cmp
ret
out
xchg
sub
lahf
sbb
dec
add
aaa
fcomp
fwait
and
sbbl
and
mov
addl
cld
ljmp
call
xor
adc
jle
incl
add
jg
test
fists
dec
ds
das
cli
pop
adc
cmp
fisubl
pop
cmp
ljmp
sbb
pusha
jecxz
clc
cs
decl
jno
test
in
mov
push
inc
fidivl
ljmp
push
push
les
add
jbe
scas
inc
fdivr
fs
mov
sub
ja
and
outsb
stc
pop
add
xchg
pop
mov
xlat
xchg
or
clc
lea
jmp
add
or
clc
lea
jg
negl
scas
xchg
sbb
mov
lods
fwait
mov
ret
dec
sub
sbb
outsl
data16
clc
push
cld
call
stos
dec
mov
aaa
filds
mov
add
sub
add
sbb
pushl
ret
or
inc
addb
lcall
decl
jg
aas
add
adc
call
add
jne
sbb
mov
iret
and
mov
sti
mov
clc
and
ljmp
xor
std
jge
mov
jo
jl
xlat
sub
sbb
inc
jb
adc
jecxz
inc
inc
pop
lock
sub
fildll
jl
loope
call
fdivr
incl
push
mov
inc
divb
jb
shlb
xchg
ljmp
aas
push
cmpsl
sbb
fcom
daa
jle
std
push
rcr
je
xchg
daa
lcall
and
pusha
sub
mov
mov
add
push
adc
or
add
xor
jg
clc
add
cmp
pop
jmp
daa
inc
sub
ds
mov
lds
push
scas
clc
call
lea
push
fsubs
add
adc
or
adc
inc
add
push
pop
hlt
icebp
sub
cmp
xorl
pushl
add
fldl
cmp
jns
notl
lcall
inc
sub
cli
and
push
cmp
test
push
mov
xor
rcrb
push
cmp
ljmp
add
daa
push
dec
push
sbb
in
scas
ljmp
bnd
outsl
gs
repz
pop
shrl
adc
shl
cld
lcall
aas
mov
psubusb
mov
xchg
adc
mov
adc
mov
sahf
scas
sbb
repz
ljmp
mov
sub
in
mov
incl
xor
or
lock
or
leave
outsb
mov
add
push
pushl
out
jg
mov
push
or
xor
mov
xor
cmp
push
pushl
inc
inc
test
call
dec
pop
pop
in
jecxz
fs
js
pop
or
inc
adc
jge
lods
push
int
cwtl
xchg
push
pusha
cmpl
arpl
mov
insb
pop
add
mov
cltd
mov
mov
or
hlt
push
pushl
call
call
jg
pop
mov
add
xchg
imul
test
jecxz
jno
lea
aad
test
outsl
cmpsb
testb
gs
cmp
repz
and
jg
jle
mov
mov
outsl
sub
mov
lock
clts
pop
cld
jmp
cmp
or
xchg
test
pop
add
rcr
mov
sbb
stc
outsb
sbb
sub
lds
test
and
ljmp
cli
push
sbbl
inc
sub
outsl
int
in
inc
js
das
icebp
int3
lcall
loop
dec
cli
or
std
mov
pop
lcall
ficoml
cmp
nop
movsl
rol
mov
test
lcall
ljmp
and
dec
xorl
and
mov
add
lcall
addr16
dec
mov
inc
daa
xor
pop
fdivrs
xor
push
mov
insb
jle
fildl
pop
clc
ret
arpl
mov
outsl
push
or
or
cs
inc
pop
or
push
or
adc
call
jmp
pop
sub
pop
cmpsb
push
leave
pop
decl
lcall
lea
outsb
loopne
adc
arpl
shll
adc
and
ja
push
lods
xor
test
roll
mov
cltd
lea
fdivrl
add
popa
mov
sbb
jns
bound
call
push
pop
je
push
enter
imul
aad
inc
ds
arpl
inc
pop
jo
push
lods
cmovnp
scas
movsb
sbb
pushl
leave
incl
jo
mov
movsb
xchg
and
divb
mov
decl
jg
and
lods
data16
int3
bswap
mov
xor
push
sbb
loopne
xor
inc
push
insb
add
iret
movsb
cmp
lcall
jb
lret
icebp
clc
fdivl
ret
mov
adc
pop
ret
rcr
jg
jo
push
lcall
lcall
cmp
pop
xchg
orb
sub
insb
in
add
add
cli
fcomip
xor
cmp
push
imul
enter
and
sbbl
inc
sbb
test
push
jo
add
jae
pushl
add
mov
sar
jbe
jo
jo
add
add
dec
inc
jp
clc
ljmp
jbe
lea
cmovl
add
dec
push
psllq
inc
data16
ljmp
push
push
xchg
addr16
fadds
movsl
mov
or
sub
sub
pop
inc
cli
filds
in
mov
decl
pushf
add
xchg
and
repz
push
jmp
xor
imul
imul
outsl
fs
fnsave
aaa
push
add
or
std
jmp
or
leave
lcall
mov
aaa
pop
push
call
test
jp
das
nop
aad
inc
cmc
clc
cmp
cli
xor
mov
or
andl
dec
fsubrs
xor
adc
sti
cmp
dec
jg
cmp
movsl
xchg
or
cwtl
jbe
call
decl
addr16
mov
lahf
gs
shlb
lahf
subl
std
add
jmp
call
xor
test
jns
add
mov
sbb
dec
add
ljmp
loopne
cli
pop
inc
ret
and
mov
fs
sahf
aad
push
pushf
pushl
mulb
and
gs
inc
pop
xorl
mov
add
push
dec
iret
call
ja
push
adc
fiadds
test
add
decl
addr16
jmp
pop
sub
push
aaa
aam
push
fbld
das
clc
std
mov
jbe
inc
cmp
and
cmc
mov
ljmp
push
outsb
leave
pusha
jo
inc
orl
dec
shlb
jno
fcoml
incl
orb
push
xor
lcall
sti
lea
roll
push
or
add
jg
rol
sbb
mov
js
sub
fisubrs
or
fimull
dec
lahf
inc
mov
sbb
push
cld
fwait
sub
icebp
mov
insb
mov
test
adc
ljmp
adc
sub
mov
and
test
mov
decl
pop
stos
or
push
and
add
out
lahf
rclb
decl
std
enter
sbbb
and
test
incl
cld
adcb
lods
push
sbb
add
scas
mov
add
push
scas
and
out
popa
mov
cs
mov
pop
xor
scas
xor
out
test
lock
cli
andb
jg
loop
pop
dec
push
call
addr16
iret
xchg
std
in
cld
cmpsb
pop
ljmp
mov
mov
cmp
inc
sub
pop
dec
subb
movsb
push
sub
add
pop
jge
call
cld
iret
sub
test
jg
addr16
in
imul
mulb
std
fwait
shl
add
dec
lock
dec
and
lcall
ljmp
dec
add
inc
pushf
adc
inc
nop
fs
push
pusha
xchg
clc
ljmp
outsl
nop
add
in
sbbl
add
add
push
ja
xchg
test
mov
incl
push
add
mov
dec
pop
mov
add
movsb
fcmovu
mov
std
ss
ljmp
in
or
les
insl
jno
xchg
enter
pushf
or
xchg
mov
int3
sbb
mov
inc
mov
mov
ljmp
imul
xorl
sbb
mov
dec
cmp
sub
sbb
adc
ljmp
subl
std
mov
movsb
xchg
pushf
push
es
cmp
push
push
movsl
imul
push
inc
mov
arpl
sar
mov
outsl
or
and
repz
add
cmp
jmp
mov
mov
gs
jmp
jne
adc
mov
hlt
fs
cmp
or
xor
fdivr
sahf
inc
or
sbb
mov
inc
cld
jl
dec
mov
pop
add
add
pusha
cmp
pushf
push
sub
test
ficompl
ds
add
in
push
sub
notb
pop
mov
mov
lods
inc
pop
jecxz
inc
imul
pusha
lea
insb
push
jl
sbb
mov
jo
mov
je
mov
fisttps
iret
rcl
scas
clc
push
pop
lahf
xorb
add
mov
adc
lcall
mov
incb
lret
xor
jo
pushl
pusha
add
std
push
sub
test
test
mov
push
cmp
push
or
call
dec
shrb
or
jno
dec
test
notl
cmp
lcall
loope
aaa
loopne
sub
lea
adc
imulb
inc
add
bound
fcoml
push
sub
outsb
sahf
scas
ja
mov
or
aas
mov
stos
inc
outsb
add
decl
repnz
dec
xchg
scas
hlt
enter
inc
add
add
push
xchg
mov
popa
sbb
jg
test
jg
xor
mov
jecxz
fiadds
addr16
ret
enter
mov
pop
mov
xchg
mov
bound
cli
and
cmpsb
movsb
test
int3
das
and
jecxz
out
outsb
mov
jmp
cmp
jmp
outsb
lret
xor
lods
lods
jg
mov
and
push
jnp
or
cmp
call
mov
mov
xor
mov
ffreep
adc
je
in
fdivr
ljmp
out
mov
mov
in
mov
clc
mov
ja
es
decl
jp
push
xchg
data16
push
add
enter
or
idivb
shl
decl
pop
dec
mov
pop
je
jg
imul
aas
push
push
pop
push
adc
or
pop
xchg
roll
dec
aad
mov
ljmp
arpl
les
pop
add
fimuls
pop
lret
aas
loop
or
ffreep
int
xor
or
and
jmp
pop
or
insb
cld
out
adc
push
shrb
mov
pushl
shlb
mov
jg
adc
mov
jmp
ljmp
jp
ljmp
movsb
testl
cwtl
daa
fcompl
dec
mov
aaa
mov
mov
mov
xor
push
scas
je
js
aam
pop
pop
fdiv
decl
mov
cmp
inc
rcll
lods
dec
dec
loopne
pushl
and
or
inc
add
shll
adc
adc
adc
insb
push
pcmpeqb
insb
jbe
and
fwait
add
mov
pop
dec
jnp
int
fisubl
dec
jmp
cli
incb
into
je
or
jge
jns
aaa
js
sub
push
loop
loopne
gs
mov
pop
clc
ljmp
jnp
jae
sbb
gs
mov
sbb
mov
out
jo
js
iret
lea
mov
daa
mov
mov
add
addl
hlt
xchg
bound
cmp
addl
jg
lcall
rorb
jmp
push
adc
std
or
dec
jo
imul
mov
cli
lcall
into
pushl
mov
dec
mov
mov
cld
cmp
add
or
mov
jne
jne
inc
mov
add
call
add
sbb
inc
mov
xor
popa
stos
out
jo
mov
adc
das
cmpsb
pop
mov
jo
aam
mov
and
mov
xchg
mov
incl
sbb
mov
push
ret
xor
cli
incl
pop
mov
mov
sbb
xchg
out
inc
cli
incl
jle
loop
xor
pusha
ljmp
out
jle
mov
pop
loope
fcoml
adc
mov
inc
adc
inc
cmp
lock
out
das
gs
aam
xlat
add
ss
fists
ret
jo
adc
mov
cs
outsl
cli
decl
jns
xchg
das
sbb
adc
das
adc
and
pusha
and
les
inc
cli
call
mov
mov
shlb
add
mov
jb
ja
fistps
ljmp
jg
shl
jmp
daa
ljmp
mov
dec
mov
sub
xor
push
xchg
xorb
pop
ss
fdivrl
mov
das
sar
push
sub
test
push
fidivrl
fdiv
call
insb
icebp
jbe
out
push
mov
or
push
dec
xchg
pop
popa
adc
dec
inc
inc
or
mov
jmp
shl
pushl
je
stos
into
lods
adcb
sbb
cmp
add
jbe
call
in
jle
push
fs
and
sbb
lret
add
std
orb
adc
rolb
lock
in
push
das
cwtl
es
sub
mov
mov
push
add
push
pushf
cld
shl
decl
popa
sarb
cltd
push
sahf
sbb
popa
push
aaa
add
pop
cmp
icebp
addl
pop
rcrb
aam
add
cld
outsl
int
xor
push
push
icebp
ljmp
adc
aaa
mov
sub
mov
rcll
ljmp
es
push
test
pop
fcoms
mov
xor
push
repnz
jo
jne
adc
clc
out
jne
push
mov
mov
scas
xor
divb
std
call
ljmp
jge
shl
and
adc
aad
pusha
mov
decl
inc
jbe
sbb
or
rolb
cld
scas
nop
mov
fstpl
cmp
movsb
addb
sbb
ljmp
imul
cmpb
inc
out
test
or
mov
xchg
hlt
pop
and
add
lcall
jg
jb
popa
add
and
fwait
pop
push
lds
adc
loop
in
bound
incl
rcrl
mov
adc
mov
pop
mov
in
jmp
mov
jno
xor
push
pop
mov
repz
cmpsb
pop
gs
decl
pop
dec
mov
sbb
sub
ret
fs
fcoms
in
inc
lock
jmp
inc
cmp
sbb
add
push
rorb
push
je
cmpsb
cmp
cmp
inc
mov
orb
fcmovnb
jg
jg
or
mov
cmp
xchg
subb
sbb
gs
inc
imul
das
cs
adc
test
pop
adc
mov
hlt
loope
xchg
dec
inc
xchg
lock
sbb
or
push
add
push
or
imul
incl
dec
dec
or
lcall
aaa
jmp
ljmp
dec
and
mov
push
outsl
cs
mov
decl
adc
mov
testl
incl
xchg
mov
add
sti
sbb
push
jmp
fsubrs
mov
pop
cli
cvtdq2ps
addl
sub
mov
into
loope
dec
mov
pop
and
inc
sub
faddp
cli
jo
push
pop
or
cmp
mov
dec
pop
push
xchg
dec
pop
popa
add
sub
enter
pop
cmp
add
dec
js,pn
nop
call
dec
ljmp
test
shll
or
ljmp
mov
test
sub
add
pop
ljmp
jg
test
sub
outsl
adc
mov
sbb
push
or
decl
scas
idiv
test
pop
nop
lea
fbstp
dec
push
iret
decl
test
mov
sbb
and
mov
pop
mov
lds
pop
iret
mov
inc
imul
lcall
inc
add
roll
mov
cwtl
push
cld
mov
fdivs
and
aas
add
pusha
mov
imul
lods
jo
push
lcall
andl
jg
fsubrl
cs
mov
sbb
cmp
add
es
test
sbb
jne
push
negb
mov
jle
aad
pusha
mov
cwtl
pop
arpl
mov
aaa
std
inc
mov
push
mov
push
push
test
inc
xor
sub
cmp
test
jmp
ljmp
push
push
in
aam
sbb
ss
movsl
mov
jg
pop
aas
lret
stos
cwtl
pop
insl
push
add
pop
dec
jnp
repnz
int3
cmp
or
pop
nop
jmp
dec
aam
sbb
pop
call
inc
sbb
pop
and
mov
test
adc
aaa
rorb
add
aam
inc
stos
stos
pop
push
jmp
rol
ja
icebp
das
push
loope
loop
push
mov
das
cmp
mov
je
call
pop
push
cs
dec
sub
xchg
push
add
jmp
ljmp
inc
xor
das
and
push
cmp
int3
pop
idivl
out
add
xchg
mov
add
xor
test
lcall
out
pop
sbb
jo
addl
fnsave
ficomps
add
js
push
imul
hlt
xchg
adc
fmul
and
pop
inc
lods
mov
inc
push
test
cmp
decl
sbb
add
int3
cmp
pop
clc
aam
mov
lahf
add
or
push
call
icebp
dec
jmp
ja
lahf
shl
scas
xchg
lea
ljmp
xor
ss
push
mov
mov
icebp
clc
jge
xor
fcomip
call
sbb
adc
sbb
dec
ss
jb
cwtl
add
ret
mov
mov
sar
jp
je
movsl
lods
or
sub
in
push
push
sbb
aaa
std
mov
jg
jg,pn
push
push
rcll
xor
idiv
inc
mov
xlat
push
jae
xor
in
xor
in
pop
addl
jmp
incb
or
ljmp
xorb
sbb
je
push
std
or
mov
add
or
ljmp
nop
stos
lock
lea
xlat
aaa
inc
cmc
adc
mov
cli
xchg
or
adc
add
jg
ljmp
std
pop
xor
cmpb
enter
cmp
lods
add
in
cld
stos
adc
dec
push
cmpb
jp
decl
incl
push
arpl
out
mov
mov
push
imul
cmp
mov
cmp
mov
push
add
scas
call
adc
bound
xor
int3
call
stc
rclb
incl
test
dec
cs
adc
add
std
add
sbb
push
int3
and
pusha
push
sbb
fs
push
adc
pushl
push
sub
call
fcompl
xor
adc
jle
mov
pop
leave
lahf
loope
jae
dec
mov
aaa
test
mov
mov
lcall
mov
sarl
les
mov
call
mov
mov
add
nop
add
bound
fisttpl
jae
add
clc
incl
add
push
push
push
xor
xchg
sub
outsl
add
add
scas
int3
inc
sbb
ljmp
pop
sbb
dec
sbb
mov
sub
mov
movb
lcall
jmp
call
enter
mov
daa
xchg
mov
add
lock
in
add
or
ret
adc
int
sbb
inc
sub
adc
inc
jecxz
jb
cmpsl
icebp
sub
add
pushf
xor
mov
dec
or
outsl
idivb
bound
clc
incl
dec
sbb
mov
push
cmpsl
adc
push
subb
scas
push
mov
pushl
mov
nop
xlat
orl
lahf
dec
fwait
mov
push
mov
loop
decl
mov
fistl
loopne
faddl
cltd
mov
dec
lods
xchg
xorb
jmp
push
ret
fdivr
mov
mov
cli
fdivl
out
jbe
cmpsl
dec
hlt
decb
mov
lahf
popa
int3
fisubl
call
sbb
inc
cmpsb
das
stos
sbb
fidivs
dec
mov
cmp
roll
xor
lock
cmp
subl
ss
jg
loope
js
or
fcomip
lcall
hlt
mov
nop
pop
in
mov
cmp
mov
rclb
mov
sbb
dec
je
cmc
lahf
pop
push
mov
adc
pop
or
adc
inc
jb
out
cli
mov
decl
ljmp
mov
and
cmp
sub
mov
das
loopne
add
sbb
ja
lock
sarl
jb
dec
mov
pop
and
jno
fcomi
idiv
mov
pushf
addb
cltd
sub
or
cmc
jge
push
cmp
orl
inc
mov
test
repz
aaa
adc
stc
add
cli
test
jns
inc
in
nop
movsb
jge
jbe
lock
push
push
sbb
inc
lds
cli
imul
aas
push
incl
or
dec
out
or
std
lret
dec
add
lcall
lea
or
test
xor
inc
and
push
sbb
call
xchg
dec
jmp
mov
mov
push
or
mov
cmpsb
mov
add
sbb
call
add
addl
add
pop
fs
fldenv
sub
pop
mov
sbb
incl
jmp
mov
add
shr
add
sub
test
jg
mov
cld
pop
inc
xor
push
js
cltd
idivb
jbe
mov
adc
adc
pop
shll
fcmovnu
les
dec
mov
cmp
push
jb
xchg
sub
dec
test
jne
sub
mov
jge
or
popa
orb
insb
mov
call
mov
ss
add
stos
movl
shlb
je
lret
call
test
daa
ffreep
inc
test
cmpsb
mov
fbstp
ret
rclb
das
jg
decb
test
xor
testb
add
sbb
pop
aam
clc
and
xlat
call
xor
lock
mov
push
sbb
push
cmp
add
ljmp
push
sbb
inc
cmp
ljmp
data16
es
data16
out
inc
jbe
inc
xchg
dec
add
incl
daa
mov
adc
jmp
or
ljmp
adc
cmp
and
test
adc
cld
fnstenvs
loop
mov
sub
sbb
push
inc
sarl
insb
pop
xor
mov
out
call
pop
dec
fisubl
or
adc
sbb
cwtl
jle
mov
push
add
icebp
adc
sub
jae
add
jg
adc
sbb
jge
das
add
mov
lcall
rolb
mov
or
call
popf
adc
test
fiadds
int
jnp
test
mov
jne
add
int3
shrb
imul
das
sub
mov
repnz
push
icebp
adc
or
jle
push
fisttpl
dec
fbstp
lret
push
add
push
andb
jmp
cmp
xor
xchg
mov
or
dec
sahf
cmpsb
cli
je
mulb
or
add
xor
lcall
rclb
add
add
xor
dec
jle
push
ret
mov
insb
out
mov
sbb
mov
loop
add
sbb
push
call
incl
and
jo
out
mov
or
pop
push
movl
pop
rcrb
rorb
scas
decl
sbb
andb
dec
add
xor
or
jb
lods
pop
mov
out
pop
cwtl
sbb
xchg
subb
mov
les
es
mov
lret
or
inc
ret
xor
ljmp
cwtl
rcl
mov
adc
js
lcall
fnstenv
stc
gs
jo
pushl
push
popa
mov
pop
leave
and
ret
in
loopne
sub
orl
inc
mov
xlat
inc
int3
push
push
paddd
fimull
cmp
jmp
sub
popa
popf
pop
arpl
and
xor
and
xor
or
adc
loope
pop
adc
inc
pop
popa
enter
jg
out
mov
push
jbe
jmp
jg
repnz
adc
decl
jle
lret
xchg
divb
mov
cmpsb
das
shrb
pop
imul
jg
mov
add
insb
int3
adc
mov
cmpsl
sbb
ljmp
ret
je
xor
sub
and
sbb
cmp
add
fcmovb
scas
jmp
push
adc
mov
jmp
add
shr
icebp
fnstcw
outsl
je
notl
xchg
sub
fistps
adc
incl
adc
jg
mov
mov
sbb
mov
or
push
add
mov
incb
lcall
mov
and
xchg
dec
cld
jb
fs
cmpb
or
incl
add
inc
or
je
ljmp
mov
jmp
pop
xchg
pop
stos
mov
mov
lock
xor
dec
inc
inc
mov
decl
pop
addr16
sbb
jnp
dec
je
jb
out
std
fdivrl
inc
decl
jp
call
dec
ljmp
pop
out
js
mov
mov
sub
sarb
sbb
dec
mov
repnz
lret
addr16
jo
lahf
xor
add
pushl
jo
jne
push
lods
xorb
inc
xor
mov
loop
ret
inc
jge
ja
test
negb
jne
pavgb
pop
sar
jg
push
sub
xor
packuswb
sahf
jmp
jbe
rcrb
pop
outsl
mov
push
sar
xchg
outsl
xor
xchg
hlt
and
jne
xlat
push
cli
rorb
jmp
jb
fadds
int3
mov
lcall
mov
test
xchg
add
data16
mov
and
sub
and
dec
sub
xchg
push
xchg
test
inc
out
lock
loopne
je
push
fists
sub
dec
pop
and
lea
dec
and
shlb
mov
push
subb
popf
xchg
mov
es
xchg
pop
add
mov
and
or
jecxz
jg
clc
incl
mov
out
push
push
in
add
test
add
xchg
movsb
lock
hlt
fists
sahf
clc
add
std
out
mov
ljmp
pop
pop
jg
add
lret
aam
mov
mov
and
sahf
mov
mov
insl
push
sbb
pop
lcall
push
adc
ja
jge
and
aaa
cmp
incl
sbb
orl
add
pushl
pop
lods
test
sbb
negl
add
adc
push
pop
jg
dec
mov
mov
add
adc
pushl
or
add
rcrb
cmp
mov
fnstcw
mov
sub
dec
ljmp
movsb
xor
ds
into
mov
sub
mov
mov
add
incl
push
add
outsb
mov
pop
inc
jp
inc
jl
mov
cmp
testl
push
jb
add
inc
lods
andl
push
mov
push
test
xor
adc
call
je
jmp
shlb
mov
jo
push
mov
pop
sbb
test
repz
jnp
icebp
mov
lea
fbstp
xor
xchg
stos
cmp
decl
jo
jmp
inc
lahf
ljmp
mov
out
outsb
test
addb
jg
icebp
sbb
push
ds
fs
add
ja
pop
dec
adc
push
fwait
aam
out
jnp
je
std
inc
cmp
test
repnz
int
lcall
les
loopne
shl
ja
inc
leave
jb
mov
push
clc
and
std
sti
sbbb
add
push
jnp
mov
test
jmp
push
sbb
int3
sarl
gs
inc
add
lods
xor
add
cmp
popf
jmp
jmp
add
cmpb
call
push
push
sub
adc
xchg
cwtl
clc
sub
fimuls
lock
ljmp
std
xchg
xchg
fsubrl
mov
and
fidivrl
insb
std
push
lcall
hlt
idiv
std
add
paddw
pop
mov
pop
inc
cmp
lods
add
mov
xor
hlt
lcall
aaa
or
je
and
aaa
mov
in
jg
test
adc
ret
out
adc
mov
add
decl
out
jl
jnp,pn
push
push
cld
sar
clc
shlb
jb
add
ljmp
jmp
inc
sub
stc
pop
push
xchg
or
sub
inc
xchg
add
jmp
cmpsb
cwtl
fistpl
push
insb
mov
pop
sub
mov
sar
loopne
decl
mov
jp
ror
jbe
mov
test
movsb
mov
ds
aas
mov
std
gs
fs
int3
fcomps
sub
outsb
popa
inc
ret
lcall
jmp
outsb
pop
pop
and
fs
push
mov
test
ret
add
in
dec
jecxz
or
testb
adc
outsb
mov
jp
jae
push
inc
clc
or
enter
clc
push
repz
add
test
pop
ljmp
add
or
and
sar
ljmp
mov
call
sbb
repz
push
mulb
dec
hlt
add
adc
or
fs
cmp
mov
push
out
push
push
insb
sar
incl
data16
loope
adc
and
xor
leave
ret
sbb
sarb
jecxz
fdivr
mov
mov
jmp
adc
test
stos
rcrl
sub
mov
or
lock
out
mov
inc
cld
add
sbb
xor
sub
xchg
mov
loop
decl
sub
test
dec
scas
xchg
push
jmp
pop
shlb
sub
icebp
push
pusha
pop
leave
pusha
xchg
adc
test
adc
xlat
clc
sbb
lods
cmp
jg
xor
xchg
mov
clc
xchg
xor
mov
inc
pop
cmc
dec
jo
rclb
aam
pop
rclb
fsubs
testb
mov
fs
cld
mov
xchg
push
sbb
mov
repnz
outsl
inc
loop
es
hlt
hlt
jbe
ljmp
dec
inc
inc
mov
inc
sbb
add
sti
rclb
popf
add
lcall
rorb
inc
dec
rcrl
call
inc
es
xor
inc
incb
gs
inc
aam
xchg
and
stos
jg
shlb
ja
mov
lods
and
frstor
pushf
fiaddl
and
cmp
lods
je
std
inc
out
ficoml
add
popa
jle
push
or
jb
cmp
cld
and
fidivrl
sub
push
lock
aad
adc
xor
rcrb
leave
sar
inc
add
adc
pop
jmp
imul
add
push
sub
aaa
loopne
mov
sub
sub
gs
inc
push
and
inc
jmp
mov
inc
sub
push
pop
add
rcrl
inc
add
nop
jnp
lods
loope
ljmp
test
and
adc
or
movl
add
sbbb
push
iret
jo
ss
lcall
insl
fs
sbb
repz
push
icebp
jp
mov
add
fcomip
dec
repz
psubsb
dec
decl
add
call
xchg
pop
rolb
push
scas
scas
pop
jg
test
fnsave
inc
mov
mov
push
add
mov
loopne
call
incl
fwait
sub
fildll
fsubrs
mov
jne
jecxz
lcall
popa
push
lods
decb
sbbl
pushl
sub
xchg
push
push
pop
jb
cs
out
jge
mov
adc
push
insb
mov
pusha
ss
cmp
mov
call
in
incl
test
dec
inc
loop
shll
cmp
sub
cld
mov
jg
sub
dec
ret
sbb
and
fmul
int
dec
ljmp
movsl
or
fcom
mov
jg
mov
mov
outsl
adc
xchg
xchg
mov
sbb
adc
ja
pop
outsb
repnz
cmp
sub
or
jb
push
push
xor
inc
adc
add
mov
fdivr
frstors
mov
push
addr16
lahf
sub
jbe
loop
mov
sbb
cld
decl
sub
es
popf
addr16
fcos
xchg
pop
cmp
ret
scas
clc
aaa
xor
dec
push
mov
les
push
adc
mov
cmp
bound
or
fmull
jecxz
cmp
out
sti
push
call
mov
add
mov
push
dec
das
cli
ffreep
and
jge
inc
mov
lcall
xchg
shl
pop
inc
sar
mov
mov
xchg
jmp
std
ja
lcall
in
or
sub
pushl
or
push
movsl
xchg
add
call
scas
int
jg
enter
ret
ficoms
push
adc
mov
mov
pop
std
ss
xchg
enter
aas
test
in
jno,pn
inc
fbstp
int3
loopne
call
std
std
mov
adc
push
jg
sub
or
jl
and
adc
xchg
addr16
lock
subl
mov
clc
ljmp
sub
pushf
jae
sbb
mov
imull
std
fnstenv
dec
leave
loope
jae
cmp
call
jo
xor
and
or
fistpll
mov
cmp
push
pushl
fs
push
mov
aam
fistpl
aam
sbb
clc
ljmp
aam
sti
sub
mov
jecxz
hlt
popa
pushl
mov
out
aad
outsb
jne
push
shrl
cs
push
jb
scas
imul
pop
jmp
clc
aas
imulb
adcb
cmp
test
push
fiaddl
pop
jmp
icebp
pushl
inc
mov
pop
out
add
and
sahf
ficoms
sbb
add
xlat
fcompl
aas
ljmp
jp
sahf
and
add
popa
or
jbe
inc
mov
cmp
cmovne
incl
ds
std
stos
and
mov
js
ror
gs
decl
jmp
adc
pushf
push
cmp
dec
enter
cmpsb
jmp
loop
xchg
insb
hlt
arpl
push
and
xchg
aaa
inc
cli
sub
xor
int3
sub
mov
add
add
jmp
fdivl
mov
gs
adc
fldl
mull
push
jnp
add
iret
mov
loope
cmp
push
outsl
xor
mov
mov
add
lods
lock
mov
jmp
mov
clc
mov
ja
out
orb
add
in
outsb
sbb
test
xchg
in
or
or
inc
or
loope
or
mov
and
test
jge
add
sbb
xor
in
jb
ljmp
mov
xor
movsb
sbb
lods
inc
cld
inc
mov
sti
jg
arpl
jmp
mov
pushf
aas
popa
rol
insb
insb
fsubrs
pushl
std
mov
stc
sti
pop
stos
fstpt
or
call
push
pop
jg
xchg
push
gs
push
pushf
sti
and
jmp
jg
cs
xchg
cmp
add
push
jge
out
dec
wbinvd
push
jne
and
mov
cmp
es
into
cltd
lock
loop
add
jge
or
fisttps
lret
add
push
sub
push
pop
cmp
rclb
out
mov
outsb
cli
add
jae
popa
inc
test
pushl
roll
push
xchg
mov
mov
dec
movsb
lods
or
xor
insl
sub
cmpsb
andb
decl
jle
pop
add
call
fildl
imul
jle
jbe
and
xchg
xchg
add
pop
lock
jg
cmp
test
les
jbe
cmpb
popa
inc
mov
inc
or
and
call
and
jl
push
sbb
das
add
rolw
push
adc
jmp
or
mov
repz
dec
and
xchg
stos
fdivr
sbb
push
or
lea
call
pop
jge
loop
sbb
add
add
xchg
cmp
sub
jl
shll
out
jne
pop
fwait
lods
incl
mov
aaa
xchg
cmp
and
mov
ljmp
mov
xchg
insl
mov
xor
pushf
push
loopne
inc
and
sub
call
xchg
mov
push
mov
popa
negl
inc
pusha
add
inc
cmpsb
jbe
stc
push
jge
std
xchg
inc
je
fildll
or
repz
cmpsl
loopne
jg
lock
and
popa
fsubl
movnti
clc
jg
add
inc
sub
xor
cmpsb
add
nop
nop
mov
add
dec
inc
dec
add
jg
or
sbb
inc
or
jge
mov
add
cmp
hlt
testb
test
inc
xor
mov
dec
outsb
mov
jecxz
loope
fistps
push
call
dec
add
lods
pop
hlt
push
andl
xor
jle
jmp
jmp
sub
mov
test
sets
les
fsubrl
and
mov
pop
lock
fistps
loope
cld
jne
pop
push
or
fs
adc
xor
mov
dec
pushf
stos
out
xor
dec
lret
sarl
sbb
mov
adc
rcr
mov
cld
lcall
xor
adc
jl
jae
mov
fistps
mov
fcmovb
sbb
fidivl
call
dec
mov
std
cld
push
inc
rorb
dec
jecxz
add
adc
sbb
pop
imul
mov
or
pop
jo
ret
dec
outsl
decl
add
stc
sbb
orl
mov
fstpl
cmp
inc
sub
xor
or
ret
push
jle
xchg
fs
jg
lea
leave
test
mov
decl
fs
call
jo
mov
test
push
lcall
xor
add
subl
fistps
rorb
fbstp
inc
or
add
fidivrl
out
jmp
xor
fildll
jecxz
dec
popa
mov
cmp
decl
add
scas
xor
push
lcall
add
xchg
sbb
dec
jae
mov
jg
pop
xchg
or
and
push
lret
sub
lods
mov
pop
or
lret
dec
loopne
push
xor
dec
push
mov
ret
popf
and
mov
lea
lcall
cmp
clc
jg
mov
or
outsl
jno
dec
cmpsb
inc
jb
ja
and
push
sbb
mov
lcall
sbb
aaa
mov
adc
addr16
fwait
insb
cmp
xlat
out
clc
ja
or
xor
mov
adc
pop
out
decl
inc
mov
aaa
lcall
jl
jge
pushl
mov
das
pop
sbb
xor
imul
add
divl
pushl
scas
sbb
data16
mov
out
in
push
add
jg
mov
mov
add
jb
jg
jae
nop
aam
inc
or
sbb
or
xor
psrld
sbb
lock
lock
addl
cltd
push
sub
loope
aaa
mov
fiadds
xor
lcall
je
push
imul
fldl
sub
shll
pop
mov
mov
cmp
aad
sub
pop
ja
enter
push
dec
leave
mov
add
insl
push
or
lcall
pop
and
push
dec
out
imul
add
fs
cld
outsl
ljmp
fsubl
add
dec
pop
mov
or
lea
sbb
adc
jnp
and
inc
jp
cmc
add
mov
add
lods
pushl
mov
xor
pop
adc
scas
call
mov
outsl
lock
add
clc
mov
imul
pusha
xor
sub
cmp
cmpsl
lock
aad
test
pop
push
in
lcall
add
xor
push
push
push
pop
xor
nop
jle
insb
mov
push
cmc
loopne
pop
aaa
or
dec
icebp
inc
scas
lahf
adc
nop
test
outsl
or
xor
loop
pushl
ss
aad
sub
incb
mov
dec
rcrb
outsl
jb
sti
call
pop
add
adc
push
mov
call
insb
lahf
mov
inc
shll
pop
andl
pop
dec
cmpl
shlb
cli
or
jae
aad
aas
cltd
push
xchg
and
out
and
stos
hlt
lcall
xor
xor
mov
mov
jg
rcrb
inc
xor
shl
fs
jbe
push
outsl
stos
stmxcsr
push
mov
fs
icebp
push
lret
cmp
adc
add
jnp
gs
incl
mov
xchg
ss
xchg
cld
stos
mov
outsl
xor
sbb
faddl
mov
lcall
jmp
rolb
das
arpl
inc
rolb
ss
ljmp
fdivs
or
xchg
cmp
ljmp
mov
fnstenv
cmp
cwtl
test
mov
jg
loop
adc
jg
push
adc
ret
js
mov
jne
sub
loopne
fsubrl
jg
mov
dec
xor
push
test
push
cmp
mov
decl
orl
inc
mov
mov
push
stos
std
stos
xor
mov
addr16
jge
push
or
rorb
scas
sub
add
pop
aad
sbb
add
cmpsb
loop
cmp
or
mov
pop
cmp
loopne
decl
in
pushf
sar
ret
sar
or
and
adc
adc
call
cwtl
jmp
mov
mov
xor
test
jae
outsl
pushf
inc
add
mov
mov
mov
and
je
sahf
inc
ss
movsb
loopne
filds
adc
jmp
icebp
xor
dec
mov
mov
decl
mov
dec
push
mov
mov
mov
ja
loop
std
xor
ljmp
or
add
pop
mov
pop
sub
jle
decb
std
int
lea
ljmp
shlb
cmp
fucomip
jo
fucomi
clc
stos
push
xor
test
cli
mov
push
test
lea
loop
in
ljmp
addb
inc
pushl
pop
fisttpl
mov
mov
lock
mov
sub
sub
imul
call
std
pop
cmp
std
movsl
shlb
inc
pop
jg
xchg
popa
outsl
in
jmp
add
mov
push
call
push
xor
cmp
xor
lahf
cld
incl
lock
outsb
data16
imul
dec
call
incl
jmp
loop
or
mov
add
movsl
adc
add
incl
mov
fsubs
jbe
ds
sub
and
idivl
mov
popa
or
sbb
sub
push
and
jb
je
scas
sub
adc
mov
fadds
mov
test
dec
imul
out
sub
lods
and
cmp
push
push
out
je
fdiv
call
fildl
push
xchg
adc
int3
add
aad
test
shl
jp
insl
mov
call
cld
mov
lahf
mov
push
pop
enter
dec
rol
or
sub
pushl
xchg
cmp
lret
incb
pop
xlat
clc
jge
xchg
stos
inc
add
decl
ljmp
mov
cmp
fcompl
cltd
jno
jns
cmp
pop
mov
enter
insl
cmp
pop
sbb
and
add
dec
decl
xchg
add
fs
mov
nop
add
call
xor
subb
js
dec
and
pushl
out
popa
adc
jg
fistpll
cwtl
insl
data16
es
testl
and
push
into
insl
add
call
push
lea
decl
mov
lcall
push
int
ror
int
pushf
enter
dec
jmp
inc
in
lret
inc
test
jg
decl
je
inc
lock
pop
das
ret
push
jg
sbb
mov
mov
call
incl
dec
add
rclb
lret
dec
decl
lock
mov
push
movsb
push
pop
mov
jo
clc
cmp
in
lock
in
inc
test
mov
push
xchg
push
push
icebp
imul
xor
sarb
popa
movsb
add
out
lods
xlat
cmp
jg
mov
inc
mulps
int3
testb
data16
stos
int3
leave
jo
or
xlat
clc
fcomip
push
loop
cpuid
stos
sahf
sahf
pop
add
adc
rolb
add
add
lcall
ja
push
pusha
ljmp
decl
mov
adc
jo
push
jnp
movsb
cmp
add
lods
orb
fisubrl
sahf
or
add
dec
jbe
mov
aaa
fiaddl
sub
or
pushl
xlat
dec
les
lock
push
mov
mov
and
pusha
sbb
pop
pop
shlb
jg
inc
push
shlb
dec
xchg
das
pop
addr16
loop
cmc
jmp
xchg
mov
sbb
fs
adc
add
shrl
call
fisttps
getsec
enter
add
push
sbb
filds
add
jl
ret
inc
lret
fistl
push
sub
shrb
cmp
out
call
adc
es
lcall
add
add
pop
push
icebp
fidivs
or
xchg
adc
je
lock
inc
push
inc
inc
rcrl
loop
cltd
or
sbb
in
add
int3
jo
adc
mov
add
divl
ljmp
loop
inc
push
dec
sbb
outsb
fcomp
adc
inc
add
add
xchg
mov
inc
pop
lods
pop
imul
push
mov
decl
test
mov
or
cmpsb
dec
popa
inc
int
push
in
and
test
add
lcall
bound
scas
cmpsl
add
ret
decl
cmp
pushl
int3
addl
xchg
test
fcompl
push
xor
mov
popw
cmp
call
lahf
pand
jmp
push
int3
or
mov
xchg
les
mov
jnp
adc
decl
test
xor
popa
jp
mov
sbb
fimull
fdivrp
aaa
fucom
cs
dec
addb
lret
lea
and
mov
inc
or
jmp
jmp
pop
ljmp
inc
and
mov
inc
repz
negb
or
mov
mov
add
ljmp
sbb
popf
test
pop
or
lret
lcall
repz
xor
xor
clc
dec
insb
lcall
mov
sbb
mov
pusha
xor
aas
sub
sub
clc
incl
sahf
insl
in
add
rorl
or
or
pusha
clc
inc
pop
leave
inc
popf
push
int3
pop
add
outsl
jb
ja
jge
cld
sub
push
adc
push
adc
mov
clc
mov
inc
mov
into
loope
es
add
adc
cmp
sub
pushl
leave
pushf
sbb
dec
add
incl
inc
adc
jmp
pushl
pop
es
test
ja
inc
sub
sub
mov
jne
sbb
add
cmp
fs
sub
test
std
mov
jbe
inc
push
push
adc
sbb
mov
or
cmpsb
aas
sbb
call
outsl
add
xchg
ljmp
call
sub
mov
fs
push
dec
ss
clc
imul
clc
cmp
div
jle
xor
add
mov
clc
leave
push
call
adc
xor
xor
mov
or
mov
xchg
sbbl
fstpt
adc
js
das
add
ret
add
jp
in
or
decl
fsubr
jmp
imul
jle
lcall
pop
mov
xor
orb
jg
incl
and
inc
lcall
pop
cmp
xchg
sub
pop
mov
mov
sub
lcall
and
les
inc
push
out
pop
jmp
jg
out
repnz
movsl
inc
or
imul
js
les
cmp
nop
pop
mov
data16
arpl
xor
sar
incl
in
shlb
mov
jmp
lcall
ljmp
jg
sbb
or
and
int
dec
mov
clc
loopne
lcall
pop
ret
stos
push
gs
jg
enter
lcall
dec
jmp
xchg
rorl
dec
xchg
es
in
ljmp
push
adc
mov
mov
loopne
or
pop
daa
pop
sub
fidivrs
mov
cmp
shll
imul
ds
dec
cmpsl
popf
decl
mov
sar
repnz
or
mov
call
arpl
cld
ja
movsl
or
out
sbb
jg
sub
inc
dec
jb
mov
xchg
incl
mov
adc
jge
jb
dec
mov
mov
clc
and
push
push
push
lcall
add
cld
mov
dec
jno
stc
pop
inc
icebp
outsb
inc
shrb
leave
sbb
pop
cli
rcrb
les
jecxz
sbb
ja
or
adc
ret
push
fwait
sar
call
or
movb
xchg
scas
clc
dec
popa
cmp
and
or
and
fs
out
daa
cli
fistps
add
std
dec
lea
push
faddp
mov
orb
repz
sub
mov
mov
test
enter
and
call
add
lcall
push
cmovb
mov
pop
add
or
jg
xor
jne
jmp
fs
fistpl
jecxz
push
inc
test
cld
dec
pop
sbb
mov
jle
outsl
sub
fistps
mov
lcall
mov
and
adc
jg
neg
mov
imul
sbb
push
lock
call
sbb
or
jno
cwtl
aad
inc
decl
fildll
add
sub
mov
aaa
sub
add
js
jae
xchg
loop
fisttpll
in
aaa
xlat
inc
fs
shll
daa
and
inc
inc
adc
fidivs
shl
clc
sahf
adcl
test
mov
dec
loopne
pop
mov
mov
scas
add
stos
mov
mov
inc
adcb
das
gs
sub
inc
sub
insl
fcmove
cmp
adc
fists
subl
mov
add
adc
in
pop
hlt
mov
sbb
mov
sub
scas
adc
pop
outsb
mov
ljmp
mov
cmpsb
movsb
cli
push
cli
push
das
push
adc
inc
sti
rcr
or
pop
mov
lcall
pop
sarb
je
adc
jne
ja
outsl
push
add
mov
push
add
adc
jg
arpl
sub
fcmovnu
and
in
out
xor
mov
sahf
jp
pushl
or
adcb
add
nop
faddl
lret
not
push
inc
xor
mov
cmp
cmp
fsts
push
xchg
loopne
mov
not
jmp
add
inc
call
xchg
decl
mov
lret
dec
jecxz
stos
test
js
call
inc
ljmp
and
clc
add
roll
ljmp
pop
rcl
iret
gs
xorl
add
lret
push
mov
dec
add
cld
jg
or
push
and
pusha
mov
aaa
scas
adc
and
and
out
decl
pusha
inc
add
sahf
imul
outsl
shrb
mov
incl
or
push
pop
stc
ljmp
xor
cmp
out
cmpsb
ljmp
fdivrl
clc
inc
ss
les
insb
outsb
popa
ret
call
inc
jmp
sbb
cltd
push
mov
pusha
pop
push
aas
imulb
cmp
popa
rcll
lock
gs
pop
adc
mov
inc
pushl
sbb
aaa
jmp
addr16
pop
fisubrl
jle
mov
push
pushl
fs
dec
jns
add
jbe
dec
iret
iret
shr
dec
jbe
adc
fdivs
push
mov
mov
and
aad
jne
xchg
push
or
insb
ja
mov
int
pushl
mov
sub
push
mov
dec
cld
orl
decl
mov
adc
xchg
sub
xlat
jae
decl
and
add
call
dec
sbb
outsb
jbe
xor
hlt
push
and
or
or
int3
jecxz
pushl
rolb
add
cmp
jb
adc
xor
bound
mov
sbb
mov
pop
xor
mov
lea
enter
dec
push
enter
out
gs
call
bound
mov
inc
jg
inc
mov
or
jo
pop
xchg
add
xchg
cmp
fwait
call
dec
pop
add
mov
imul
js
mov
inc
das
cli
incl
and
insl
cmp
or
test
and
mov
stos
cmovnp
sbb
incl
stos
std
or
push
and
pop
or
mov
mov
dec
and
cmc
push
shrb
sub
sar
dec
dec
pop
stos
xor
lods
and
xchg
and
dec
jmp
sar
inc
inc
push
lods
xor
and
jnp
clc
cmp
jmp
and
mov
movsl
call
or
fdivs
nop
repz
push
gs
out
cmp
call
fdivr
pushl
mov
fstpl
push
cmp
jnp
push
ljmp
and
inc
push
fstp
add
lahf
dec
xchg
outsl
outsl
cld
shll
sbb
add
dec
jge
fidivrl
sub
enter
xor
repnz
ljmp
ljmp
jo
lds
and
jbe
xorl
aam
mov
add
jg
add
stos
sbb
test
decb
repz
rorl
push
and
add
xor
push
mov
or
mov
call
sarb
dec
cli
pop
clc
pop
mov
mov
rorl
jl
sub
xchg
mov
or
adc
add
jl
mov
les
adc
dec
outsb
inc
mov
call
cmp
xlat
mov
shlb
decl
hlt
ficoml
pop
inc
lock
das
jnp
ret
fsts
dec
mov
xorl
gs
inc
xor
xor
mov
ret
xchg
sbb
inc
or
jnp
jne
ljmp
subb
xor
dec
ds
jp
mov
xor
lds
jo
and
ficoml
rorb
inc
rol
insl
jle
add
pushl
inc
pop
pop
mov
sbb
pop
mov
out
rcr
jmp
fdivrs
loop
xor
lods
lcall
push
dec
or
sbb
push
add
xor
in
inc
repz
aaa
addl
fst
inc
pusha
sbb
xchg
or
mov
jl
cmp
jle
jb
mov
imul
push
xor
sbb
test
jg
push
pop
and
outsb
dec
fs
dec
decb
cmp
enter
inc
into
mov
pop
adc
mov
mov
add
and
push
xorb
rolb
xchg
decl
or
hlt
cmpsb
jp
and
pop
pop
push
mov
fsts
cmp
ljmp
cmp
cmp
fisubrs
arpl
insb
mov
scas
or
test
dec
ret
jo
call
loopne
and
lock
mov
movsl
outsl
add
lahf
cmpsb
das
cmc
adc
or
cmp
push
dec
in
leave
pop
sbb
test
hlt
cmp
psrlw
stc
xchg
outsb
xchg
mov
dec
ret
mov
popaw
cmc
mov
adc
decl
jbe
arpl
test
pop
pop
sahf
push
push
imul
push
cld
jmp
std
rorb
ret
call
insb
shlb
lret
pop
ljmp
fiaddl
adc
push
add
mov
add
sbb
int3
call
pushl
jmp
dec
jbe
add
cmp
insb
rorb
push
jmp
mov
xor
sarb
inc
xor
ss
mov
mov
inc
sub
js
sub
loopne
push
sub
or
mov
push
sbb
cmpsb
or
jbe
lcall
out
push
lret
sti
lock
sbb
ss
cld
jg
sbb
call
jge
cwtl
outsl
jbe
test
push
idiv
call
cld
pop
in
cmp
mov
sbb
and
push
incl
cmp
jge
cmpb
cmp
popf
orb
hlt
xchg
cwtl
por
xor
decl
jmp
out
pop
hlt
push
jne
rolb
ret
inc
bound
add
push
add
inc
pusha
jo
add
sbb
add
add
mov
rclb
aam
rcll
mov
dec
xchg
jmp
jg
psadbw
jg
add
lcall
testl
push
jecxz
fimuls
lds
pop
or
std
repz
inc
mov
incl
mov
clc
stos
pminsw
adc
push
cwtl
jno
sub
pushl
nop
sar
lcall
inc
mov
hlt
xchg
ret
and
mov
popl
inc
pop
je
or
inc
push
adc
cmp
bound
das
add
inc
shr
ljmp
stos
int
gs
bound
jg
repnz
inc
cld
aaa
pop
mov
test
cwtl
jne
xchg
out
movsb
cmc
jle
scas
pop
add
idivl
mov
jne
mov
cli
ss
sub
push
pop
and
fs
mov
fsub
dec
xchg
clc
int3
stos
pop
push
in
add
fnclex
fisttps
mov
mov
cmp
xchg
add
ja
shrl
sbb
movups
sarl
mov
pushl
scas
adc
mov
mov
loope
dec
add
clc
dec
dec
mov
xor
nop
loop
mov
jmp
xchg
movsb
mov
sbb
add
adc
cmp
shlb
fisttpll
mov
bswap
push
mov
jg
sub
push
mov
popa
mov
js
jmp
jge
decl
push
lcall
idiv
push
test
push
test
insb
scas
push
ret
push
inc
xor
lea
nop
fbstp
sbb
pushl
pop
dec
les
adc
hlt
imul
push
cmp
aas
fcomip
pop
mov
loopne
lahf
leave
inc
and
stos
sbb
mov
pop
mov
mov
push
push
cld
in
xchg
clc
jg
incl
lcall
mov
mov
pop
and
inc
xchg
lahf
incl
shrb
orb
cli
mov
mov
arpl
insl
mov
mov
lds
pop
inc
cmp
or
and
ret
popa
dec
xor
in
sbbb
push
stos
icebp
xchg
jnp
sbb
xchg
pop
adc
jb
inc
mov
jae
xor
pushl
fimuls
xorl
mov
inc
pop
popa
push
cld
inc
loop
ret
add
call
aaa
mov
incl
add
lret
sar
cmp
or
shrb
cs
add
adcl
inc
push
testl
cld
je
add
movsb
inc
or
clc
repnz
push
push
incl
mov
sub
push
lds
and
jae,pt
add
mov
or
add
lea
cmc
mov
fdivs
mov
call
out
xchg
xor
mov
and
xchg
push
xchg
xor
out
aas
push
pusha
out
cmp
or
dec
xor
mov
pusha
lahf
jmp
cmc
lea
shrl
sbb
cmp
outsl
push
cmc
enter
push
add
push
sti
pushl
inc
add
pop
fisubl
dec
leave
xor
lods
dec
addb
aad
jg
push
cmpsb
rcrl
dec
mov
jl
cmp
adc
clc
jns
cmp
lea
les
mov
dec
add
lea
push
or
aam
call
dec
xchg
test
add
pop
or
xchg
bound
xchg
fistps
sar
pushl
ss
outsb
push
pop
add
jb
adc
mov
xchg
lcall
stc
xor
test
dec
js
mov
out
arpl
std
add
mov
jg
jg
jbe
cmp
in
push
or
sbbb
and
pop
push
ret
decl
inc
incl
ficoms
xor
sti
xlat
pop
mov
pusha
popa
xlat
adc
pop
and
inc
pop
and
xor
pop
js
lods
ljmp
ljmp
pop
lea
push
clc
decl
nop
imul
lcall
adc
and
adc
pop
decl
pop
push
mov
or
sub
jg
inc
push
fldl
test
fdivrs
aam
pusha
pushf
mov
add
sub
incl
pop
cmp
mov
mov
shlb
mov
adc
jne
into
pushl
push
sub
cmpsb
iret
mov
jae
push
lahf
push
pop
js
out
cmp
popf
insl
or
je
add
lcall
incl
or
jge
sbb
and
push
add
incl
or
aaa
push
sub
pop
jae
inc
or
dec
sbb
xchg
and
or
es
add
sbb
fucomip
xor
xor
pop
sbb
call
movsb
ss
inc
dec
mov
push
push
out
push
inc
or
xor
and
xchg
nop
test
pop
hlt
inc
mov
add
clc
pop
mov
jmp
lret
lcall
jg
dec
push
jg
jg
fldenv
jne
push
add
fcomip
enter
es
inc
xor
fsubl
mov
lods
testl
lcall
dec
aaa
and
sbb
adcl
add
adc
jg
push
gs
or
xor
divb
cli
loopne
mov
rclb
xorl
es
lods
jmp
out
cmp
inc
aas
dec
hlt
sbb
incl
push
je
pop
push
call
add
ret
xchg
push
xor
movd
out
incl
mov
mov
mov
adc
mov
insb
out
adc
clc
sarl
or
adc
xchg
xor
mov
into
aam
add
lock
fs
into
shl
pushl
or
mov
mov
dec
into
and
adc
xor
mov
pushw
inc
sar
pushl
or
jmp
js
je
andb
imul
lea
shrb
outsl
jg
inc
ljmp
fdivr
call
add
add
inc
jp
bnd
pop
push
xchg
or
or
pop
shr
movsb
call
pop
lock
sub
call
adc
pop
push
data16
mov
stos
pop
sub
aas
push
in
push
shll
loopne
or
jmp
cli
shlb
cli
and
andb
xor
iret
adc
hlt
lods
dec
mov
rorb
dec
loope
decl
repz
fs
imul
push
lods
insb
mov
xlat
mov
hlt
lcall
out
inc
push
ss
ja
jne
test
sti
lea
das
mov
jbe
pop
idiv
in
sbb
aas
mov
int
mov
ljmp
push
mov
and
clc
inc
mov
add
jg
rolb
gs
incl
sub
push
cmpb
jg
add
test
cmp
mov
jo
pop
inc
xor
lcall
rcrl
adc
adc
inc
mov
lahf
mov
lcall
mov
cli
jmp
mov
test
lds
xor
pop
fadd
insb
cmovg
and
jg
fimuls
inc
xor
mov
clc
jb
rol
mov
jg
sub
add
add
les
sbb
or
lock
sarb
lret
rorb
sub
lcall
hlt
xor
mov
mov
adc
mov
daa
shlb
shlb
mov
xor
push
gs
arpl
clc
ja
fists
ljmp
push
rol
cmp
jp
das
movzwl
pop
xor
aad
in
aam
jns
decl
jg
add
andl
ret
gs
pop
lret
jb
cmc
and
loopne
inc
imul
test
mov
add
or
mov
cli
mov
jmp
shll
test
inc
pop
shl
add
adc
outsl
and
insl
adc
push
jmp
sarl
fiaddl
mov
xchg
or
mov
call
ficoml
mov
inc
add
inc
mov
jmp
xor
rcrl
lods
dec
popa
pop
mov
cltd
or
jmp
mov
jmp
pushl
and
xlat
ja
andl
shl
rcrl
or
sarl
xchg
jl
fdivr
in
jmp
pop
mov
call
mov
add
int3
push
or
in
inc
test
stc
adc
sar
nop
cmp
add
loopne
lcall
mov
lods
lods
dec
or
push
sub
cmp
or
adc
push
add
fstp
push
pop
jno
or
popl
sub
cld
call
imul
inc
incl
das
jmp
and
jb
ret
jmp
sahf
mov
movsl
add
mov
incl
inc
pop
inc
mov
ljmp
sub
rclb
dec
and
push
orb
adc
addl
cmp
imulb
incl
test
xor
outsb
dec
out
add
xchg
outsl
addb
pushl
xor
repz
lcall
cmp
ret
cmp
sbb
jg
lcall
stos
mov
xor
rcll
incb
adc
and
dec
dec
sub
dec
outsl
orl
lret
mov
mov
inc
dec
or
stc
fadd
cs
loopne
dec
in
mov
and
es
repz
mov
ja
xchg
lcall
xor
dec
ss
cmp
lret
pop
add
decl
cmp
incl
outsb
int3
nop
pop
pushl
lock
cs
xchg
inc
dec
ljmp
mov
nop
nop
inc
jg
pop
mov
hlt
add
xor
sti
jg
call
leave
pop
add
call
sub
cmp
mov
imul
ret
xor
cmp
es
jne
gs
in
add
dec
ret
lret
pop
fcoms
xchg
movl
loope
ljmp
adc
incl
push
mov
pop
cmp
pusha
cmpsb
jae
dec
mov
ret
or
stos
jg
push
rclb
mov
mov
sti
push
add
js
xor
lret
inc
lods
std
incl
clc
xchg
and
jne
jmp
mov
and
mov
daa
out
xor
xorl
leave
jg
fcmovnb
push
int3
jmp
adc
xchg
dec
je
jmp
cmp
xor
call
movsb
imul
adc
aad
mov
push
fmuls
call
mov
js
testl
push
mov
xlat
cld
ljmp
lcall
mov
pusha
mov
cli
inc
add
inc
xor
js
in
cmc
movsb
adc
pushl
push
pusha
add
or
push
add
add
dec
dec
and
jg
mov
push
add
xor
not
adc
inc
cld
ljmp
xor
cmp
add
pop
js
jl
pop
cmp
add
mov
sub
cld
add
lock
and
or
mov
inc
out
cli
call
insb
cmp
mov
or
mov
add
pop
fimuls
fdiv
mov
cmp
call
inc
adc
mov
shlb
notb
and
aad
incb
ljmp
push
out
cli
decl
fwait
jne
lcall
pushl
add
iret
push
cld
inc
lods
push
push
xchg
insb
enter
dec
pop
dec
data16
mov
or
mov
sub
pushl
outsb
adc
je
sbb
adc
cmpb
add
push
testb
xor
adc
ljmp
dec
add
into
cmc
jne
inc
insl
call
pushl
push
call
gs
out
or
jno
rcrb
sub
nop
lock
push
jle
incl
lock
std
mov
and
xabort
push
out
inc
xor
in
bound
mov
aas
insl
in
in
fs
xor
js
clc
dec
cmp
lods
inc
push
nop
test
mov
inc
mov
and
outsb
add
lcall
pop
dec
movsb
push
dec
sbb
mov
int3
jae
and
test
popf
dec
test
out
clc
cli
add
mov
bound
test
sub
call
mov
mov
inc
adc
pushl
and
dec
js
test
leave
adc
inc
cld
add
imul
sub
push
std
push
add
dec
xchg
xchg
stc
pusha
dec
add
iret
add
mov
xchg
aam
jle
sub
mov
pop
or
js
roll
incl
dec
cli
lret
shll
ret
xchg
aaa
add
aam
std
sti
daa
inc
dec
nop
pop
shrb
fildl
mov
lods
incl
pop
push
call
sbb
addb
out
nop
lock
call
in
mov
ss
out
mov
insb
incl
adc
jle
mov
push
mov
shll
lret
xor
lea
mov
sbb
mov
push
push
subl
lods
jne
loope
pushl
ror
inc
aam
ret
sbb
pop
cs
dec
mov
in
insl
adc
test
call
jg
mov
cmp
rcrb
int3
or
ret
or
add
in
mov
or
xchg
inc
cmp
sar
ud0
fimull
insb
adc
adc
add
das
ljmp
mov
subb
jecxz
dec
lock
push
mov
inc
and
stos
fbstp
clc
and
xor
inc
jnp
insl
push
push
adc
cmp
decl
dec
fiadds
testb
add
lods
vmovups
and
lock
add
lcall
fcmovne
fiaddl
shlb
add
pushl
mov
add
cli
pop
mov
xchg
gs
and
mov
push
jo
mov
or
lcall
jbe
push
out
ret
aam
adc
ss
mov
mov
jmp
dec
insb
or
pushl
test
popa
das
mov
cwtl
rorl
adc
lds
inc
push
mov
stos
ja
insb
push
shlb
dec
xchg
inc
jge
dec
xchg
ja
das
dec
mov
dec
out
mov
xabort
mov
cmp
in
jp
ljmp
aaa
movsl
dec
cwtl
or
out
mov
fidivrs
nop
mov
adc
cmc
mov
ljmp
arpl
aaa
les
jno
lret
adc
rcll
xor
jb
int3
arpl
fcomip
mov
add
mov
cmpsb
insl
cmp
fdivrl
les
add
jmp
enter
ljmp
loopne
hlt
cmp
test
pushl
sbb
xlat
loopne
sbb
lret
inc
and
add
and
cld
call
fmuls
mov
mov
xorb
jg
es
pusha
mov
adc
jns
pop
sbb
add
nop
or
fadds
pop
jg
add
es
pop
push
insb
repz
mov
pop
fisttps
jge
pmaxsw
rclb
mov
out
sub
clc
jo
jmp
pop
jl
xchg
mov
add
ret
jb
mov
gs
mov
push
idivb
dec
repz
rolb
js
ror
movsb
or
pop
sbb
add
ret
cld
push
mov
jg
bound
lock
dec
fdivl
clc
incl
sar
test
lcall
popa
loopne
adc
fiadds
add
cmp
call
xchg
push
xchg
pop
add
mov
mov
jb
das
ljmp
cmp
xchg
bound
or
add
xchg
ret
sub
jl
mov
pushf
push
push
loop
xchg
movl
lret
shlb
fwait
sub
test
dec
lcall
or
and
or
shll
arpl
clc
push
sub
dec
enter
repz
mov
call
pop
push
sbb
jl
idiv
push
jbe
and
push
xchg
das
cli
das
clc
js
in
test
sub
and
xor
sbb
aaa
sub
aad
lret
pusha
jp
pop
mov
mov
sub
add
in
xor
adc
cli
xchg
nop
incb
sar
call
sti
jnp
rcr
add
or
adc
jb
cli
ss
test
pop
add
mov
cwtl
pop
cli
cmp
std
incl
fsubrs
jp
jg
dec
sbb
xchg
or
scas
rolb
add
add
mov
ljmp
inc
outsl
push
add
inc
fldl
push
test
and
add
or
add
ljmp
clc
call
mov
fcmove
mov
test
incl
inc
addr16
sub
decl
mov
loopne
movsb
lcall
pop
lcall
cmp
cmp
jle
and
aad
pop
cmc
inc
mov
xchg
test
fwait
pop
clc
xchg
cli
add
call
add
shlb
pop
daa
test
push
fildl
call
xor
cmp
popa
xchg
add
int
or
jo
jl
aaa
cld
idiv
imul
dec
adc
pop
inc
xchg
movsb
in
insb
push
xchg
pushl
pusha
fldenv
mov
adc
cmpsl
cmp
cwtl
jnp
std
pop
icebp
push
std
xchg
xchg
ret
inc
popf
inc
decl
adc
add
jmp
icebp
movsb
add
push
stos
mov
xchg
loopne
adc
lock
stos
or
mov
push
mov
and
adc
adc
es
lcall
inc
and
fs
pop
or
rolb
mov
stc
pop
pop
rcrl
pop
or
incl
xorb
ja
scas
loopne
cmpsb
lods
add
add
xchg
dec
andl
pop
movsl
inc
decl
cmp
or
shrb
incl
inc
cmpl
jle
rclb
nop
rolb
ljmp
dec
sbb
or
fisubrs
rorl
std
xor
pop
cmc
loopne
ljmp
pop
clc
enter
jmp
jns
inc
adc
jg
inc
jbe
push
fildll
rol
cld
pushf
sbb
mov
add
aad
inc
sub
and
jg
add
jb
dec
jle
aaa
adc
out
sti
add
sub
aaa
adc
ret
xor
jmp
add
mov
push
mov
lret
outsb
push
cld
mov
and
jo
dec
mov
sbb
les
mov
pop
inc
mov
add
sar
xchg
add
pop
and
mov
movl
inc
and
add
je
mov
mov
sarl
das
clc
mov
and
lret
jle
scas
add
sbb
or
decl
mov
test
outsb
clc
mov
lcall
add
mov
dec
popw
adcl
xlat
orb
lret
repnz
inc
fwait
insb
add
repz
addr16
imul
add
cmp
xor
pop
loopne
fptan
push
adc
pop
cmp
adc
nop
fsts
add
mov
loopne
mov
pop
pusha
pop
mov
ja
add
sub
push
dec
mov
out
lods
or
fwait
add
ja
js
mov
pop
call
decl
outsb
or
push
mov
decb
cmp
aaa
pop
fcomi
cmpsb
mov
dec
dec
adc
pusha
fadd
add
push
lock
and
loopne
pop
mov
stos
push
and
fstpl
int
int3
inc
adc
lret
loop
das
cli
pop
dec
add
icebp
mov
dec
je
mov
xchg
push
xchg
call
call
xchg
popf
and
mov
cmp
in
mov
mov
mov
incb
mov
sub
in
xorl
ds
add
test
in
decl
jle
in
ja
outsb
cmpsb
dec
lcall
rcrb
incl
and
add
mov
push
pop
and
fldt
mov
hlt
sub
fcom
cld
or
dec
push
lods
and
jg
test
push
add
xchg
cmp
lret
in
jg
call
mov
adc
repz
idiv
fdivl
inc
xor
jne
jmp
jmp
mov
icebp
fsubrl
mov
sbb
sub
movsl
test
inc
mov
test
arpl
ljmp
sub
jno
idivl
iret
loopne
sub
dec
call
enter
jne
in
dec
sub
loopne
pushf
arpl
add
in
rcl
jg
ljmp
mov
xor
mov
cld
mov
notb
fsubs
cld
dec
movsb
outsl
ja
or
lret
nop
test
jmp
movsl
jmp
or
in
inc
mov
js
xor
scas
je
push
lcall
ja
cmp
add
cmp
incl
push
dec
jmp
pop
mov
inc
ret
adcl
push
loope
sbb
sbb
cwtl
push
or
rorb
call
inc
cmc
mov
mov
nop
xchg
sub
sbb
mov
in
lods
fstl
cmp
push
lret
inc
xchg
mov
add
xor
rcr
divb
dec
xchg
je
lock
cld
call
add
stos
push
pop
cmp
cmp
add
lcall
les
xlat
jg
sub
mov
std
or
scas
or
mov
cli
test
or
and
lods
push
mov
mov
call
xchg
ss
std
lods
cmpsb
inc
mov
mov
dec
cld
inc
pop
incl
fcomip
mov
inc
imul
or
cld
clc
js
mov
incl
mov
incl
ficoms
fstps
pop
notb
insb
scas
jmp
jmp
mov
mov
lds
aam
add
lret
pushf
inc
mov
ret
shl
jp
adc
push
dec
push
js
pusha
jmp
add
jg
inc
jae
add
inc
je
es
adc
je
push
sub
pop
imul
scas
cli
mov
jo
lods
push
cmp
lcall
push
imul
jg
incl
loopne
dec
ljmp
jmp
cmp
andl
filds
pop
pop
call
mov
and
sub
jmp
push
xchg
add
mov
add
fiadds
xlat
cmp
clc
data16
test
lds
cld
mov
sbb
dec
and
idiv
fcomip
fisubl
adc
clc
add
add
push
lcall
bnd
dec
lret
dec
push
pop
dec
push
jle
xchg
ret
cmp
mov
pushl
push
sti
mov
ret
lret
cld
jbe
ljmp
add
cmp
cld
add
push
out
nop
xor
jge
cmp
sbb
cmp
stos
dec
push
lcall
popf
das
push
das
mov
lcall
arpl
push
mov
lea
push
insl
pop
cs
add
mov
jmp
clc
jg
mov
je
ja
lock
call
shll
jge
repnz
incl
adc
push
out
push
cld
negb
aam
jae
fidivl
aaa
pop
pop
loopne
in
mov
add
popa
fsubrl
aaa
outsl
sub
add
mov
push
xor
mov
xchg
in
dec
sbb
loop
addr16
or
out
xchg
sbb
xchg
rclb
scas
cwtl
dec
fdivrl
ret
add
pushl
aad
outsb
je
outsb
inc
mov
pusha
push
in
or
pop
sub
or
mov
mov
les
add
pushl
call
ss
or
cmp
push
es
incl
iret
mov
popa
mov
cs
or
mov
and
add
push
clc
ljmp
test
mov
je
pop
sub
out
lret
or
inc
loop
sbb
xchg
and
fnsave
nop
push
imul
mov
fcmovb
mov
push
add
jecxz
outsl
mov
adc
pop
cld
and
fisubs
sub
mov
or
jg
call
into
sti
mov
xor
jo
stc
cmp
adc
pop
dec
loop
inc
push
popa
xchg
test
pushl
ljmp
jb
push
dec
decb
pop
jmp
mov
fs
nop
push
decl
xor
add
jg
sub
scas
or
mov
cld
push
inc
or
in
stc
inc
sahf
loopne
sbb
mov
daa
sahf
in
jg
outsl
and
or
dec
mov
mov
btsl
mov
pop
sub
pop
cld
cwtl
imul
cmp
jnp
sar
incl
jmp
call
dec
dec
jmp
ljmp
ds
cmp
ret
cmpb
clc
jne
or
or
sti
imul
cmpsb
jmp
inc
lock
rclb
cmp
rorl
cld
mov
mov
lock
jmp
pop
lock
mov
mov
inc
adc
add
test
mov
lcall
bound
cmp
pushl
rcrb
mov
loop
pop
mov
lea
adc
xor
lods
or
loop
incl
dec
lods
jg
cmp
scas
fwait
sub
inc
lcall
fbstp
stc
inc
cmp
add
and
dec
add
int
aaa
mov
scas
clc
incl
xchg
lcall
inc
pop
mov
pushl
sbb
test
hlt
incl
xor
jle
out
decl
or
sbb
inc
ljmp
inc
inc
mov
mov
rcrb
cmp
mov
mov
or
pop
cmpl
or
std
push
adc
decl
cltd
pushf
rolb
ret
lret
push
cld
xchg
mov
and
and
fsubs
mov
nop
jmp
inc
mov
in
sub
dec
jnp
lds
out
cmp
push
lds
jge
mov
not
scas
jmp
roll
dec
call
cld
and
jnp
pop
sub
mov
rolb
push
in
push
pop
loopne
jb
cmp
mov
jl
jne
push
popa
dec
cld
mov
pop
mov
dec
in
enter
jae
inc
loopne
std
jg
jg
dec
xor
scas
fstpt
inc
and
pop
or
cmp
jle
pushl
cld
jmp
fcoms
lock
mov
stos
arpl
daa
sub
mov
cld
clc
inc
int3
popa
pop
incl
dec
je
mov
mov
sub
andb
or
jecxz
adc
mov
lock
scas
add
ret
push
xchg
mov
inc
mov
adc
mov
mov
or
outsl
push
pop
or
jbe
je
mov
fdivrl
sbb
loop
fcomp
sub
es
or
xchg
sub
inc
imul
decl
mov
jne
mov
adc
outsl
stos
mov
fiadds
sahf
push
in
inc
fistl
push
pop
sbbl
sub
push
rclb
fimull
add
push
and
repnz
sub
cmp
decl
or
add
adc
test
call
std
aam
imul
loope
mov
or
jg
out
adc
xchg
pop
adc
ds
cli
jl
cmp
lret
es
dec
xchg
ss
xor
and
add
outsb
shlb
push
xchg
mov
mov
ljmp
push
mov
incb
or
cmp
inc
pop
mov
pop
adc
adc
lods
gs
ljmp
mov
popf
call
addr16
sbb
hlt
push
inc
out
and
ljmp
and
push
xor
ja
or
mov
into
mov
decl
lock
lock
sbb
sar
and
cmp
aas
or
inc
rclb
stos
and
fbld
mov
push
jae
sbb
mov
adc
pushl
lcall
sub
lret
push
mov
mov
fwait
imul
jb
sbbb
lcall
loopne
sub
inc
sbb
in
test
or
psubb
decl
sar
hlt
push
pop
cmc
pop
outsl
inc
inc
shl
js
xor
mov
sti
push
push
adc
add
vcvtpd2dqy
clc
dec
mov
divb
push
popl
je
inc
add
and
pushf
cmp
dec
scas
decl
call
repnz
scas
clc
add
sub
push
jmp
sar
movsb
hlt
das
cs
fistpll
push
push
scas
cs
incl
dec
sbb
cmp
xor
jno
movb
cmp
cwtl
jp
adc
lds
mov
adc
pop
shrl
push
xchg
cmp
in
push
push
inc
push
pop
sub
hlt
std
psubusb
scas
ret
ja
ret
and
fisubrl
aas
pushf
cmpsb
or
push
xor
mov
stc
add
cmc
mov
sbb
jl
xchg
pop
add
push
xor
shl
mov
sbb
push
sub
jg
jne
mov
sbb
dec
mov
jne
push
cli
jg
ljmp
xor
adc
out
inc
mul
push
add
das
test
pushl
rolb
inc
subl
hlt
push
inc
addl
cmp
call
jl
mov
out
adc
outsb
push
and
loopne
xor
adc
push
sbb
adc
jae
adc
sbb
push
fiaddl
cmpsb
or
or
sti
adc
cli
callw
push
cmp
and
mov
xlat
int3
fs
lock
sub
adc
dec
dec
xor
add
cs
out
cli
jg
popa
sbb
push
rcr
idivl
xchg
dec
mov
gs
dec
cwtl
add
jb
addl
cmp
pop
inc
pop
cmp
cmpsb
and
or
hlt
mov
mov
cmp
stos
xor
pop
idiv
push
cmp
sub
push
sub
je
or
adc
pop
std
sbb
dec
jns
jl
imul
or
ljmp
fs
mov
add
mov
sub
es
jge
or
imul
pop
push
lahf
mov
sbb
repz
call
jle
test
int
inc
jmp
fisttpll
xchg
filds
inc
dec
movb
sbb
daa
aam
add
ret
std
jg
push
inc
loopne
in
jg
pop
or
adc
sarb
call
nop
adc
lea
movsl
imul
mov
inc
jg
mov
or
sbb
jmp
fdivr
sbb
lock
cmc
xchg
pop
push
iret
mov
lods
jp
outsb
into
movlps
sbb
jg
and
xor
fs
outsl
add
je
in
test
lods
sub
jmp
mov
fcmovne
add
push
mov
or
decl
orl
add
add
add
sbbb
ljmp
scas
mov
insb
xor
add
adc
xor
mov
ja
loopne
decl
dec
mov
push
fs
sub
stos
add
out
adc
pop
mov
jge
imul
add
lods
inc
incb
mov
xchg
clc
cmp
sub
dec
cld
bound
scas
push
and
add
fldt
adc
clc
sub
inc
or
and
jg
pop
jg
jle
call
pop
imul
adc
mov
jnp
test
jo
mov
mov
lods
jecxz
mov
test
sub
or
rolb
rorb
xchg
inc
cwtl
mov
add
dec
mov
adc
jo
les
pop
arpl
jecxz
mov
aaa
stos
lret
pop
testb
cmp
xlat
add
xor
mov
out
cli
jno
sbb
dec
cmc
je
xor
jnp
rcll
jmp
adc
inc
xchg
pop
outsb
inc
in
push
clc
adc
int
and
shrb
test
xchg
repnz
clc
ljmp
inc
ja
mov
stc
jge
shrb
test
int3
mov
icebp
adc
adc
mov
outsl
add
cwtl
decb
call
inc
dec
stos
adc
pop
cld
lahf
xchg
cli
jle
call
cmp
int
decl
add
push
shrl
or
xor
lcall
push
out
lahf
pop
insb
push
imul
push
dec
adc
adc
cld
divb
loop
add
xor
hlt
add
gs
jns
mov
sbb
pop
add
xor
repnz
ljmp
fmuls
mov
cld
or
mov
inc
lods
clc
and
cmc
outsb
rcrb
push
movsl
out
fdivrp
in
ds
sarl
sarb
xor
and
incl
ljmp
into
push
xor
xor
xor
pop
int3
xor
pop
clc
out
sahf
sub
mov
jmp
add
sbb
sub
mov
je
outsb
mov
mov
fadds
addl
push
rcrb
or
std
incl
push
test
fists
mov
enter
jae
pop
aam
pushl
add
push
mov
lret
push
imul
pop
xchg
lcall
mov
cmc
pop
aaa
push
adc
movsb
into
push
shrl
or
lea
jg
push
je
and
mov
add
arpl
cmp
fwait
xor
out
rcrb
inc
ljmp
sub
jmp
inc
ret
clc
dec
mov
jne
pop
int3
in
outsl
nop
cmc
lcall
aaa
or
and
mov
push
push
lahf
jae
nop
dec
push
or
or
loope
movsl
divb
and
sub
cmp
pop
icebp
incl
cmc
push
push
mov
scas
sbb
mov
fistl
push
mov
aam
incl
shrl
add
and
sbb
jg
add
loopne
fcmovnb
inc
sbb
cmp
incl
add
push
cwtl
jmp
push
adc
lock
mov
stos
jne
ret
xchg
or
cmpsb
push
push
incl
sbb
lds
fbld
dec
sub
outsb
flds
lret
mov
jmp
ja
or
push
test
xchg
mov
or
inc
lock
sahf
mov
jp
pushl
std
pushl
decb
add
or
inc
cmp
imul
das
push
outsb
sbb
pop
cmc
rolb
fs
icebp
rorb
mov
lcall
adc
mov
js
test
out
mov
fmuls
or
int3
call
test
push
jle
dec
dec
movsb
mov
pop
call
jo
inc
mulb
fs
test
add
pushl
lea
xor
jge
mov
aaa
ret
mov
mov
stc
push
inc
or
lods
in
sub
xlat
decl
pusha
insb
mov
xchg
in
inc
les
push
movsb
loopne
pop
cmpsl
or
pop
pop
mov
lahf
shrb
sahf
inc
dec
js
cmp
lcall
xchg
push
push
inc
sub
push
jmp
je
in
loope
inc
jecxz
mov
mov
fmuls
jne
inc
call
mov
hlt
xlat
loop
ljmp
xchg
xchg
hlt
push
fdivrp
mov
decl
aas
ja
add
mov
sbb
jge
sub
push
push
test
dec
test
pushw
ljmp
add
aaa
push
push
cli
pop
repz
cs
xchg
pop
jo
stos
add
fistpl
inc
add
mov
pop
pop
jp
call
adc
jmp
jb
in
ret
mull
pushf
in
push
mov
stc
lcall
pop
mov
bound
and
mov
mov
outsl
xor
shlb
dec
bound
xor
idiv
sbb
add
test
fdivs
push
rorb
add
or
xorb
pop
fdiv
popa
lock
push
sub
push
fldl
jg
push
mov
pop
hlt
movsb
nop
add
mov
xor
ja
fcomip
call
or
ljmp
movsb
incl
jbe
fdivp
fisubrl
add
adc
push
mov
lea
fwait
mov
mov
jp
inc
xchg
jmp
xchg
push
fdivs
stos
adc
lock
in
decl
push
and
fisubrl
mov
clc
je
jne
jge
sar
adc
das
fstpl
xchg
push
add
lds
outsl
mov
mov
rcrl
add
jmp
cld
pushl
xchg
shrb
xor
ja
icebp
adc
dec
mov
push
data16
cld
bound
rclb
out
cli
aaa
fidivl
mov
push
daa
xor
mov
mov
sbb
fmull
clc
testl
popw
xchg
outsl
xchg
add
popl
mov
aad
ja
ljmp
fdivl
lret
jns
cli
add
rorl
in
out
or
pushl
fs
add
sub
call
enter
test
sarb
les
push
test
push
push
cld
incl
xor
push
jo
inc
fadds
mov
test
stos
jg
aam
inc
test
add
clc
ja
ljmp
test
push
jbe
loopne
cmp
or
das
mov
ror
outsb
jbe
jmp
in
pusha
das
cli
lds
inc
gs
mov
jg
incl
add
icebp
jns
jno
add
xor
add
mov
gs
hlt
call
add
insb
push
cmc
pushl
push
in
dec
insl
sbb
push
and
shl
mov
scas
xor
xchg
hlt
rcr
or
in
add
clc
jmp
add
fsubr
pop
loope
pop
cmp
jg
lret
cs
jne
gs
add
ljmp
test
or
aad
sahf
jmp
rorb
lret
adc
lea
jg
decl
mov
orb
bound
sub
call
decl
fcompl
pop
pop
inc
ss
fistps
and
fbstp
lcall
dec
jne
movsl
ja
rcrb
ud0
insb
add
stos
sub
lret
adc
decl
movsb
cmp
lock
test
orl
fisttpl
sbb
jns
jl
sti
or
loop
call
push
shrl
mov
push
fdivr
stos
add
cli
xchg
xor
das
rorb
mov
insb
add
decl
insl
fcomip
call
add
inc
jae
add
out
jo
xchg
xchg
push
push
lds
mov
rolb
pop
out
mov
test
andb
xchg
cmp
pminub
xor
mov
sub
sbb
mov
jg
xchg
xchg
or
filds
popf
mov
adc
mov
sbbl
push
andl
jge
or
jmp
rcll
aas
lcall
or
inc
xchg
test
push
out
das
jbe
aam
adc
push
push
push
fwait
inc
loop
add
lock
cmp
sbb
shlb
jecxz
fnsave
inc
add
fcomip
test
or
incb
mov
dec
cmpb
subb
dec
add
mov
scas
mov
cli
imul
cld
add
pop
push
jg
fdivrl
push
jg
je
mov
mov
shlb
mov
daa
bound
and
cmpsb
inc
dec
adcl
dec
adc
push
and
maskmovq
testl
ljmp
add
fildll
js
sbbl
push
scas
aam
cmpsb
std
sbb
inc
out
inc
sub
insb
and
ljmp
lock
push
mov
pushl
adc
cmp
enter
or
jo
inc
mov
add
lock
inc
ja
je
outsb
andb
jo
and
inc
adc
icebp
in
jmp
lods
lock
fisubs
jle
mov
in
cmp
outsl
cmp
add
xor
jecxz
inc
or
jg
add
cmp
sahf
incb
fcmovnbe
sub
ss
sub
repz
leave
aaa
fwait
loope
call
pop
add
bound
dec
add
call
out
nop
or
jo
push
fistps
add
adc
and
dec
dec
and
and
jmp
aaa
cmc
outsb
pop
fsubs
loop
jg
jbe
mov
insl
ljmp
mov
mov
les
out
lock
jmp
js
dec
push
filds
or
mov
add
jb
in
cs
push
jae
mov
cmpsb
call
or
and
mov
shll
test
add
ljmp
or
icebp
icebp
mov
lret
push
xor
sub
inc
lods
ljmp
jns
cmp
scas
scas
inc
pop
sub
inc
out
mov
xor
push
ret
sub
cmp
fisubrl
push
adc
out
clc
rcll
ds
add
lea
mov
addr16
jg
mov
js
popf
out
ret
mov
dec
ljmp
loope
shrl
enter
mov
rcrb
mov
icebp
stos
test
lea
mov
mov
dec
xchg
clc
call
mov
add
add
sbb
sub
fnsave
mov
pop
pop
rorl
sbb
jb
jmp
jmp
mov
push
movsb
add
enter
pushl
or
lret
jo
xor
add
pusha
xchg
push
cld
fidivrs
imul
cmp
xor
and
clc
inc
jmp
aaa
mov
lcall
repnz
push
dec
mov
outsb
adc
adc
scas
cmp
das
push
insb
pop
in
sub
loop
inc
subb
cmc
jmp
test
mov
and
lret
add
sahf
stc
jmp
call
dec
mov
push
fcomps
fs
movsl
cmp
decl
ja
mov
jnp
dec
ds
push
sub
add
mov
mov
pop
inc
dec
adc
nop
test
pop
push
add
in
cmpsb
pop
push
or
and
decl
and
xchg
lret
pop
test
sub
bound
adc
call
icebp
push
movsb
aaa
add
data16
push
cmp
pop
adcb
or
hlt
xchg
ret
leave
dec
or
push
xchg
std
ljmp
jl
jge
call
xchg
mov
mov
jb
cmp
inc
cmp
lcall
push
xchg
add
add
shr
repnz
push
mov
int
hlt
fcomip
sub
rclb
rorl
xor
test
inc
dec
ljmp
paddusw
test
mov
iret
jo
sbb
adc
ljmp
pop
sahf
push
push
jg
jno
fnstsw
insb
cmp
movsl
cmc
fmull
or
xchg
ljmp
test
or
hlt
inc
rorl
xchg
loopne
mov
in
mov
arpl
jge
int3
mov
xor
xor
ljmp
inc
jmp
subb
inc
cmp
fmul
and
dec
pop
pushl
cbtw
jnp
subb
sub
popa
pop
inc
xchg
hlt
dec
adc
dec
call
out
decl
mov
lcall
xchg
pop
int3
add
inc
pusha
cld
push
sar
pop
push
call
cld
loop
pusha
rolb
push
push
loope
movsl
jb
ss
add
pop
pushl
rcll
outsl
or
fldcw
xchg
inc
adc
call
pop
lods
jl
rcr
dec
or
out
pop
xor
mov
into
aas
cmc
mov
jge
adc
add
push
mov
push
cmp
pop
mov
jg
lcall
inc
in
or
or
and
test
mov
xor
mov
add
filds
and
cmp
and
pcmpeqb
decl
testb
inc
and
scas
mov
outsl
movsb
cmp
and
in
clc
out
ss
mov
push
icebp
pmuludq
je
add
cli
nop
and
ljmp
or
call
data16
out
and
and
mov
adc
divb
rcll
int
add
dec
fldl2e
push
ljmp
adc
and
lds
sbb
fbstp
aaa
gs
cltd
mov
dec
inc
xor
pushl
jg
sub
or
lock
enter
add
decl
imul
insb
inc
insl
adc
dec
imulb
pop
mov
push
pop
jmp
popa
dec
into
es
cld
jecxz
lcall
adc
xor
mov
jno
data16
push
cmc
or
pushl
lcall
outsb
jg
push
repnz
icebp
fld1
mov
je
dec
aaa
xchg
shrb
call
mov
and
mov
push
mov
scas
dec
and
push
cmp
ret
jmp
lea
adc
pop
je
pop
jbe
xchg
or
sbb
jb
push
outsl
push
sub
mov
pop
icebp
fnstcw
shll
push
mov
mov
insb
sahf
add
jecxz
fcoms
lcall
xor
push
sbb
stos
adc
movsb
ret
dec
and
pop
addb
sbb
ja
mov
and
popf
test
cmpsb
sub
xor
cmp
pushl
pusha
or
ja
and
push
popf
inc
and
or
inc
test
aas
sbb
cmp
inc
in
dec
outsl
nop
push
loope
repnz
mov
dec
data16
dec
call
cli
lret
adc
push
jg
leave
orl
inc
mov
and
and
call
pop
gs
mov
jb
std
gs
sub
jg
jb
mov
cltd
xorl
test
sar
dec
clc
cltd
push
add
inc
cld
sti
push
fistpll
imul
pop
js
inc
rol
sbb
push
mov
lds
cmp
cmp
loope
push
xchg
out
andb
aam
cli
mov
pop
mov
ljmp
push
leave
adcb
xchg
dec
faddp
cmc
mov
cmp
call
mov
loop
call
inc
ljmp
xor
cmp
push
mov
fildll
les
xchg
les
clc
xchg
xchg
call
pop
push
push
cld
push
inc
xchg
sbb
or
or
push
mov
ret
lret
mov
fildll
lods
nop
inc
clc
xchg
mov
aaa
mov
fcom
movsb
inc
rol
je
fidivrs
mov
std
or
mov
mov
mov
jno
inc
clc
faddp
out
adc
insb
ds
pop
or
jg
push
les
stc
lcall
gs
or
fcomip
or
call
xorl
test
xor
ret
divb
xor
sbb
aad
mov
cld
inc
int3
incl
fidivrl
push
add
cli
lcall
pop
xchg
addr16
lock
jg
jecxz
inc
mov
loope
or
pushl
fdivrp
ja
ret
add
mov
sub
out
inc
in
lcall
jne
sub
add
pop
jae
mov
in
insb
push
mov
adc
and
fcomip
xor
inc
test
sbb
idivb
jge
add
call
mov
pushl
jbe
pop
ror
and
push
mov
xor
inc
lcall
in
push
mov
bound
sub
dec
xchg
jb
aaa
daa
mov
outsb
gs
std
mov
dec
mov
add
es
clc
lahf
dec
sahf
adc
adc
adc
mov
hlt
bound
sbb
pop
nop
rcr
popa
push
mov
mov
jo
decl
outsl
jle
or
jmp
nop
ret
mov
mov
add
out
cli
fistpll
ficomps
push
mov
push
stos
push
pop
mov
movsl
nop
cmpsl
or
sbb
adc
or
add
lcall
xchg
gs
sbb
add
lods
ljmp
pop
js
orb
loope
mov
mov
decb
lock
mov
xor
adc
cmp
out
hlt
push
cld
sbb
pop
int
add
inc
add
dec
adc
xchg
pop
aaa
jg
sub
sar
clc
fdivrs
lods
repnz
push
xchg
aam
jmp
ja
shrb
fildl
sarb
pop
inc
out
adc
mov
add
addb
push
nop
mov
jns
push
aaa
cld
lcall
fadds
das
jae
sbb
push
insl
and
lcall
insl
je
test
in
cmp
stos
sbb
dec
movsb
and
or
pusha
xchg
sub
rolb
call
clc
int3
ror
les
fdivs
rcll
push
mov
rolb
pusha
lahf
in
jb
popa
aam
mov
aaa
cld
faddl
mov
lods
sbb
pop
xor
inc
sbb
and
xor
ljmp
arpl
add
insb
and
popa
clc
sarb
sub
adc
das
sahf
cmc
loope
push
loop
sarb
nop
xor
dec
movsb
sbb
shlb
xor
add
jb
loope
jmp
and
jne
adc
adc
clc
dec
xchg
dec
std
push
inc
push
es
fnsave
lock
fldt
jmp
or
fs
mov
xchg
jg
clc
add
incl
in
push
push
stc
adc
int3
pushf
add
add
cmp
cs
mov
or
and
cli
jl
add
rolb
mov
sub
jle
or
ljmp
iret
mov
mov
imul
mov
clc
das
push
pop
lcall
cmp
jg
jge
std
addr16
and
test
mov
test
decl
inc
sub
jg
add
inc
pop
cmp
cmp
lahf
data16
add
and
jle
fs
ss
mov
fsubrp
jne
sbb
push
push
clc
cmp
cli
xor
add
push
decl
inc
sahf
mov
ljmp
stos
ficoml
call
es
pusha
and
inc
add
mov
cmp
sbb
push
cmp
rolb
or
mov
cmp
push
cltd
out
imul
pushl
jae
fdivs
jmp
gs
push
jmp
ja
add
and
lods
je
pushl
leave
jae
xlat
hlt
insb
dec
iret
mov
aas
sti
add
mov
fsubl
xor
incb
push
lock
inc
lret
cmp
push
or
cmp
cmc
rolb
mov
insb
pop
lret
and
xchg
cmp
or
mov
daa
inc
cld
push
mov
xchg
push
sbb
scas
ljmp
mov
and
fs
jg
jmp
call
sbb
jl
ja
pop
jns
inc
pop
push
scas
nop
or
and
add
pushl
cmp
jae
ljmp
shlb
ja
cld
pop
jle
adc
add
mov
adc
bound
fidivrs
pop
and
clc
mov
std
sbb
std
arpl
imul
nop
aas
sahf
adc
sar
je
inc
inc
shlb
jne
pop
ret
push
sub
mov
jg
pushl
adc
cmp
pusha
dec
call
int3
inc
loopne
andb
add
add
clc
pop
dec
pop
mov
or
jmp
ljmp
pop
mov
aaa
cld
inc
pop
iret
inc
dec
dec
xchg
xor
cmp
sti
stc
inc
test
incb
adc
lcall
add
xchg
push
lock
call
std
cmc
push
lcall
jle
add
or
cmp
fs
adc
mov
sub
push
mov
stos
ret
jmp
dec
roll
or
pop
mov
lcall
sub
xor
rorl
in
movsl
mov
aaa
add
fbld
sbb
into
xchg
std
adc
decl
or
push
in
pop
pop
jl
and
fwait
inc
and
jmp
adc
inc
sub
sub
fdivrs
lea
add
cmp
jno
lcall
push
cmp
out
mov
loopne
mov
mov
shlb
jae
mov
mov
xor
incl
out
adc
pusha
sub
mov
jmp
cltd
clc
mov
cli
add
mov
mov
loop
loope
add
cmpsb
fdivs
sub
adc
fcomip
lcall
inc
nop
push
sub
loop
imul
rolb
inc
mov
mov
jns
mov
push
loopne
jno
pop
mulb
gs
mov
jbe
shlb
cmp
mov
stc
in
sub
or
mov
jo
movsb
imul
shrl
std
decl
leave
xchg
test
sub
cmp
ljmp
xchg
push
xor
rcrl
es
push
or
add
or
jmp
add
add
mov
cli
popl
jmp
sub
jg
jbe
test
imul
out
sub
decl
test
or
rcll
in
fsubrs
cmp
sbb
lcall
fchs
add
lock
outsl
jge
or
shrl
push
leave
cld
icebp
pop
fs
insb
enter
xchg
or
decl
sbb
mov
sub
pop
sub
mov
cmpsl
call
and
dec
cmp
hlt
cmpsl
out
decl
add
andl
shl
data16
jo
clc
jmp
or
insl
jo
movsb
ss
mov
sbb
shll
dec
aam
stc
inc
loop
mov
jmp
xchg
lcall
add
aad
cs
inc
adc
je
push
or
push
loop
data16
cld
add
push
cltd
ljmp
clc
jp
pop
pop
mov
loope
stc
rcrb
ja
cmp
in
or
lahf
dec
adc
incl
and
sti
push
pop
lock
sbb
ljmp
and
loopne
in
push
mov
pop
mov
sar
ljmp
sub
xor
hlt
sub
adcl
sub
insb
pop
lret
sbb
jg
test
xor
cmp
jmp
lcall
inc
mov
test
adc
mov
mov
jo
std
rcl
out
ficoml
incb
sbbl
push
scas
leave
cmp
lcall
jmp
ret
repz
push
push
mov
stos
push
ds
cmp
add
mov
push
pop
add
push
push
push
and
jbe
sub
decl
fcmovbe
das
dec
push
mov
je
push
xchg
cmpsl
ja
out
cmp
stos
mov
and
es
nop
xor
jg
lds
nop
push
xor
cmp
xor
jns
fs
int
loop
push
lcall
xchg
stc
je
out
push
movl
mov
fcoms
xor
cmc
fists
xor
cmc
xchg
incl
imul
pop
loopne
mov
add
inc
xlat
sahf
mov
mov
push
idivl
adc
mov
or
inc
and
xlat
pushl
inc
dec
inc
ljmp
mov
push
and
cmc
lock
sti
mov
out
mov
shlb
mov
push
rclb
xlat
lock
jb
test
add
clc
in
cli
aaa
cld
xchg
leave
lock
add
ret
fdivrp
or
jne
pop
jle
jp
fisttps
subb
mov
push
adc
fs
bound
pop
mov
xor
cmp
push
test
daa
inc
call
mov
mov
clc
lcall
int3
fwait
push
mul
pop
adc
mov
cwtl
fsubrl
xchg
icebp
stos
in
out
add
sar
dec
xchg
stos
add
loopne
jo
and
mov
ljmp
push
into
jl
subl
xorb
popa
js
and
mov
roll
icebp
outsb
xchg
sbb
lock
cs
jge
pop
pop
push
inc
xchg
movsb
pop
xor
aad
or
pushl
cld
scas
shlb
les
lret
add
jge
sub
jg
neg
aaa
sbb
clc
outsl
cld
test
xchg
adc
xchg
jp
xchg
test
jmp
aas
add
std
mov
inc
in
cli
and
push
push
sub
mov
xor
fcomip
pushf
jne
cmpsb
or
cld
lock
cwtl
push
dec
adc
addl
fwait
pop
call
or
jmp
lea
in
loop
jecxz
out
rorb
jl
sar
pop
icebp
xorb
add
adc
dec
adc
pushl
test
and
icebp
out
pushf
imulb
roll
jp
cmp
cli
pushl
call
add
and
lea
and
cmp
iret
dec
add
incl
adc
arpl
test
jo
divb
aam
xor
jg
loopne
push
mov
mov
inc
arpl
lret
xchg
ss
inc
insb
push
sub
enter
fcomip
jg
sub
xor
xor
add
or
mov
je
push
push
dec
push
nop
clc
push
sbb
in
pop
lock
sti
jmp
clc
mov
jmp
int3
pop
dec
jg
push
push
jg
stos
test
and
xor
lock
jmp
xchg
es
es
add
stc
cmp
decl
jl
in
add
sbb
inc
xchg
mov
add
and
incl
int
pop
aaa
jno
out
mov
jbe
pop
aam
push
jg
and
jne
mov
test
cmpb
inc
arpl
clc
aaa
add
push
mov
mov
sub
xchg
ljmp
sub
pshufw
pop
ljmp
bound
popa
ds
ljmp
dec
daa
xor
sbb
push
nop
fsubrs
jl
mov
or
in
pop
xchg
or
fisttps
fbstp
das
ja
pusha
or
orb
inc
sar
je
clc
jb
push
jle
fistps
in
add
insb
icebp
or
hlt
es
lods
in
sub
cmp
adc
aad
std
lcall
adc
sbb
add
push
test
add
loope
jmp
std
push
mov
mov
scas
ret
outsb
lcall
cmp
pop
fildl
int3
test
mov
mov
mov
mov
jmp
adc
pop
fisubs
scas
sub
aaa
inc
push
lcall
test
in
fstpl
lock
jg
mov
sub
addr16
pop
enter
icebp
outsb
cmp
mov
and
decl
jno
jmp
push
adc
daa
pop
jnp
or
ljmp
push
ret
call
shlb
loope
xchg
xchg
outsb
sti
xorb
sbb
mov
mov
fstpt
jg
rclb
lcall
adc
mov
jp
aad
dec
or
hlt
sbb
xor
scas
clc
jg
or
les
insb
xchg
push
call
int3
jne
add
inc
out
add
je
jle
call
or
je
ret
imul
and
push
rcrb
and
sbb
mov
mov
pop
dec
sbbb
addb
outsl
xchg
lret
into
cmp
push
push
adc
das
or
ret
sbb
das
clc
mov
add
xor
sub
ret
sbb
pushl
jmp
cmp
fdivrl
adc
ljmp
movsb
shlb
pop
fiaddl
xchg
data16
xor
mov
das
push
jmp
jmp
cs
call
jns
mov
mov
and
inc
add
xor
fwait
test
and
xchg
test
mov
imul
lret
incl
sbb
push
push
jp
adc
pop
das
or
fisttpl
mov
loope
add
sub
mov
das
icebp
jmp
mov
adc
or
fwait
inc
sbb
repz
mov
mov
lcall
mov
mov
aam
ss
addb
outsl
js
or
inc
fidivrs
aad
pushl
or
movl
jne
or
fcomip
fcomip
adc
lret
pop
ret
add
aam
xorl
cwtl
sbb
pop
cmc
dec
sbb
es
jns
out
in
in
lock
dec
inc
mov
inc
sub
sbb
push
into
testb
or
mov
add
out
incl
lock
aaa
lods
add
mov
ror
in
jle
ja
xchg
cli
mov
or
test
sbb
test
popf
jg
popf
add
pop
sbb
call
std
pop
adc
jl
jle
lock
jmp
and
shr
adc
and
call
sbb
sbb
xchg
dec
pop
inc
mov
add
adc
adc
sbb
call
cld
popf
insb
cmp
gs
mov
jg
jmp
aam
pop
andb
jb
or
or
adc
call
mov
clc
and
scas
sub
jo
xor
pop
out
mov
pop
lcall
sbb
leave
and
cmp
cmp
data16
push
xor
pushl
cli
adc
sti
aaa
mov
push
filds
movzbl
ret
push
push
lock
out
aaa
rolb
icebp
xchg
fdivrl
mov
xor
ljmp
or
xor
xor
test
cmp
adc
push
ret
mov
cli
push
adc
call
pushl
push
out
sub
jmp
cli
pop
je
sbb
mov
hlt
mov
aam
jmp
pop
cmc
outsl
clc
mov
ret
add
stos
inc
out
sbb
or
pop
mov
decl
push
xchg
imulb
or
pop
cmp
stos
xchg
add
pushl
std
push
push
rorb
sbb
push
mov
adc
add
mov
call
sbb
mov
push
xor
mov
mov
lea
mov
sbb
mov
jns
rcr
daa
loopne
pushl
lock
xor
cld
push
ja
xchg
and
ret
jbe
adc
fcoml
pop
dec
pop
add
insb
jg
xchg
out
inc
add
pop
sbb
lcall
push
push
jg
imul
jno
dec
xorb
sbb
sub
or
out
cli
ljmp
gs
les
jl
outsb
xorl
or
in
lods
rorb
cwtl
arpl
add
mov
push
sbbl
stos
and
out
notb
out
repz
cmp
scas
inc
push
xor
fstps
fmul
or
sub
aam
scas
addb
push
push
testl
dec
jmp
cmpsb
mov
dec
and
lcall
das
xchg
jle
ss
or
xchg
shll
cmpsb
cwtl
jg
fsubrl
outsl
jp
mov
sbb
cmp
insl
sbb
and
pop
pop
sub
jns
inc
je
inc
ret
and
mov
movsb
incl
jo
ljmp
push
add
push
sahf
and
add
cmp
or
jbe
call
adc
pop
sbb
cmc
lcall
rorl
cld
inc
sub
notb
fwait
leave
dec
ret
pop
mov
loop
mov
cs
jecxz
inc
aaa
jge
and
mov
pop
lock
out
mov
xchg
mov
mov
inc
insl
jo
sahf
add
xchg
imul
lcall
dec
sub
mov
push
clc
ret
mov
lcall
das
jb
sbb
cmp
xchg
rclb
or
and
cmp
call
aas
lock
xor
lahf
adc
adc
gs
call
decl
push
push
in
repnz
jnp
incl
cmp
sti
sbb
cmpsb
xor
int3
adc
xchg
sti
aad
adc
clc
lods
pushl
loop
mov
sub
js
pop
add
loopne
push
jae
sbb
fnstenv
add
push
in
mov
xchg
les
mov
lret
idiv
ljmp
xchg
sbb
jne
into
jae
scas
leave
stc
inc
addl
dec
cmp
jae
push
ret
add
sub
pusha
shrl
sub
rorb
in
adc
shrl
push
adc
jno
jp
sub
ljmp
mov
xor
stos
cs
add
dec
test
cmp
dec
popa
sub
dec
add
cmp
pop
xchg
fcoms
mov
nop
xchg
mov
fstpl
jg
ss
adc
push
pushl
xchg
test
outsb
shrb
mov
incb
pushl
mov
mov
loop
adc
incb
inc
adc
push
mov
push
lea
adc
sbb
in
mov
jg
sbbl
or
add
aas
inc
fnsave
dec
lret
mov
data16
xor
iret
lea
adc
jne
sub
decl
rorl
pusha
test
outsl
cli
jg
inc
shlb
call
shrb
decb
cwtl
add
jl
mov
out
adc
adc
int3
jne
out
clc
jle
fsubrl
and
testl
mov
jmp
add
cmpsl
mov
xlat
ljmp
push
cli
rolb
pop
scas
push
adc
aam
cmpxchg
fcompl
pop
mov
jle
xchg
gs
sbb
ficompl
mov
mov
fdivs
gs
int3
adc
mov
add
mov
loop
lahf
xchg
lcall
sahf
push
lds
sub
ljmp
mov
dec
jbe
aad
and
mov
mov
fiaddl
mov
fldt
cwtl
pop
or
push
fwait
inc
lahf
nop
ret
fildll
repz
ret
daa
add
clc
out
jg
add
int3
gs
or
xchg
ds
cmp
mov
in
ret
call
mov
mov
inc
jbe
mulb
jmp
or
pusha
jns
dec
cli
faddl
lahf
jo
add
rcr
inc
dec
add
push
and
pop
jno
decl
inc
daa
inc
adc
xchg
mov
lods
hlt
adc
fldenv
lea
add
mov
push
leave
pushl
call
mov
pshufw
movl
lea
and
push
and
or
mov
inc
fildl
mov
pop
jg
ljmp
test
push
pop
xor
jno
cld
je
sbb
jne
mov
mov
pop
xor
incb
cmp
mov
or
inc
mov
inc
xorb
dec
add
push
pusha
jmp
dec
ss
mov
dec
shl
add
mov
pop
jb
ljmp
adc
push
dec
add
adc
fimull
xchg
push
outsl
cmp
scas
cltd
cmp
inc
mov
jns
enter
call
mov
jno
frstor
add
dec
sbb
incl
push
cli
dec
mov
mov
sub
or
loope
scas
push
inc
add
mov
pop
fcmovnb
lcall
push
incl
pcmpgtd
rcrb
xchg
idiv
lahf
out
sbb
add
stos
call
mov
jbe
fnstsw
jle
mov
cmc
mov
in
incl
fdivr
ljmp
pop
mov
push
int
adc
in
aas
mov
mov
push
adc
les
dec
cwtl
rcrb
sub
jecxz,pn
aad
das
inc
out
clc
jg
push
sub
js
or
divb
mov
pop
call
sar
sub
mov
pop
repnz
jg
cmpl
mov
mov
shr
lahf
xlat
das
incl
add
sbb
pop
ljmp
lock
fcomps
jecxz
mov
sbb
fidivrl
divb
inc
cmp
rolb
pop
adc
fbld
int3
dec
call
into
mov
or
add
dec
sub
enter
loope
mov
add
cmp
pop
jne
cmp
test
xor
mov
adc
add
adc
cmp
int
xor
lea
cli
incl
enter
sub
insb
or
jg
adc
mov
imull
sub
jl
popa
iret
cs
or
sub
js
sarl
sahf
cs
jns
sub
decl
mov
xchg
or
insb
xchg
outsb
mov
push
call
aam
mov
insb
mov
ss
test
add
call
push
mov
movsb
out
adc
xchg
ljmp
shll
pop
mov
setp
adcb
aaa
jb
decl
push
adc
pop
into
add
cmpsl
call
decl
les
adc
sub
adc
push
xor
dec
popf
adc
call
inc
push
insl
xor
sub
adc
decl
and
fs
rcrl
mov
xchg
add
cmp
mov
add
call
lret
push
sahf
and
in
sahf
movq
mov
cli
call
sbb
test
ficomps
push
mov
test
call
inc
sub
push
mov
adc
adc
in
popa
adc
pushl
std
loope
adc
xchg
dec
int3
sub
sub
push
aad
push
inc
insb
push
push
xlat
jmp
or
pop
mov
popa
jp
cmpsl
add
add
jne
cmp
sbb
sahf
decb
clc
aaa
aaa
sbb
push
mov
adc
push
cmp
or
adc
icebp
movb
cmp
xchg
ss
pushl
test
data16
arpl
pushf
push
retw
clc
pop
mov
xorl
repz
push
in
or
stos
into
loop
mov
aas
addb
out
movsl
test
and
pop
ror
ljmp
in
mov
lcall
movsb
dec
iret
fistps
out
jae
pushf
sar
dec
call
and
xor
dec
mov
loopne
mov
or
aam
sbb
cmpsl
loop
fistpl
lcall
sub
jle
ljmp
daa
jge
mov
faddl
jmp
cmp
xchg
popa
jl
imul
in
and
inc
lret
ds
incl
mov
fs
add
sahf
fdivrs
sbb
mov
out
cmp
jo
sub
pop
cmc
cld
mov
icebp
mov
jmp
call
pop
cmc
stos
in
push
push
push
stos
jno
ret
dec
push
sub
jl
adc
dec
pop
or
add
orb
aam
jns
mov
mov
xor
adc
mov
cmpsl
sub
cmp
cmp
in
pop
fdivs
loopne
pop
shlb
mov
in
sti
xor
pop
fbld
aam
mov
push
cli
inc
orb
add
scas
ds
sahf
imul
mov
jns
loopne
cmp
dec
std
repnz
lret
cld
sbbb
sbb
inc
mov
or
xabort
adc
sub
call
adc
jno
mov
adc
out
jecxz
fistpl
inc
xor
insl
je
inc
and
sub
sub
inc
inc
push
in
cli
push
loopne
add
andb
jne
ljmp
in
and
ja
ljmp
push
adc
icebp
add
push
loopne
sar
adc
adc
adc
push
outsl
sub
xor
mov
clc
imul
ljmp
clc
jl
cmp
lds
jle
mov
mov
je
pop
data16
fsubs
jmp
in
sub
or
push
add
ljmp
adc
ss
clc
cmp
jne
dec
inc
dec
insb
pop
ret
cld
mov
ljmp
in
and
sarl
pop
xor
mov
pushl
add
push
sub
adc
pusha
aad
xchg
push
sub
pop
mov
popf
push
or
pop
lcall
sbb
aad
sbb
inc
outsb
cwtl
cmp
je
repnz
push
sar
je
stc
or
push
xchg
rcr
outsl
js
incl
mov
jl
mov
sbb
push
add
jmp
pushf
mov
idivl
pop
sub
mov
lret
add
out
mov
and
xchg
lcall
jecxz
cli
mov
add
mov
add
dec
lods
jmp
mov
mov
pop
jl
outsl
daa
fiadds
cli
call
jg
jl
mov
insl
push
and
cs
psllw
hlt
sbb
dec
jns
psrlq
xchg
das
adc
call
data16
inc
and
mov
cs
push
ret
into
hlt
sar
mov
mov
lcall
pushl
add
nop
pop
sub
mov
mov
and
add
add
jb
ljmp
inc
pop
roll
xor
dec
sub
jbe
jns
sahf
inc
sarl
testb
icebp
adc
out
push
push
jo
sbb
pop
sti
pop
aam
ret
xor
pop
mov
out
and
inc
jne
push
cmpsb
push
add
push
add
sub
jae
ljmp
pop
fisttps
sub
je
adc
jle
pop
cmpsb
cmpsb
cmp
pushl
add
add
sti
or
je
pop
aad
adcb
lcall
sub
orb
push
or
rcrb
mov
add
add
xchg
sbb
movsb
outsl
aam
mov
sbb
mov
iret
std
adc
inc
inc
ret
dec
mov
cmp
pop
shl
ljmp
mov
dec
sha256rnds2
sbb
cmp
call
insb
imul
mov
pop
add
test
and
pop
dec
mov
push
or
lcall
orl
lods
xchg
mov
push
mull
inc
mov
pushf
shll
movsb
xor
hlt
and
xor
ljmp
ja
rcll
je
scas
add
push
rolb
dec
dec
sub
imul
hlt
ljmp
dec
insb
dec
add
adc
pushf
stos
mov
inc
sbb
incl
incl
mov
in
add
push
xor
pop
sub
ret
shr
icebp
dec
int3
aaa
lret
clc
jg
adc
nop
adc
fsubrl
shrl
in
and
cld
lcall
incl
sahf
jge
sahf
loopne
inc
push
rolb
das
jp
and
push
cmp
xor
orb
rol
mov
add
lret
in
push
call
dec
es
cli
push
daa
dec
imul
stc
jg
loop
cmp
xchg
mov
adc
jge
adc
or
pop
sbb
scas
mov
ljmp
inc
add
add
xor
fimull
add
push
xchg
sbb
decl
xor
out
shrl
negb
adc
push
mov
lret
loop
ljmp
shlb
pushf
adc
popa
xor
call
xor
in
adc
dec
decl
popa
pop
mov
jmp
loop
inc
cmp
cmp
add
test
add
ss
cmc
dec
xchg
decl
cld
dec
push
adc
gs
iret
and
mov
jnp
xchg
inc
cmpsb
inc
ret
pushl
or
xlat
mov
test
jno
and
cli
ja
out
ljmp
pop
push
mov
cmpsl
ds
mov
divl
mov
clc
sbb
clc
sub
add
mov
cmc
jb
mov
push
add
hlt
pop
loopne
pushf
out
sbb
rcrb
pop
mov
push
popa
cmp
dec
mov
ljmp
mov
mov
dec
adc
adcb
sbbb
adc
sub
sbb
decb
add
mov
pcmpgtb
fldt
movsl
xor
ja
xchg
stos
mov
fadds
enter
add
decl
pop
xchg
test
cmp
mov
pop
mov
sub
or
sbb
hlt
jl
mov
ret
out
cli
push
out
loop
push
clc
imul
jl
adc
call
test
in
in
mov
nop
xlat
sub
js
outsl
or
call
test
mov
addr16
fcomip
fucomip
call
adc
movsb
push
cmpsb
push
or
insb
lock
jmp
inc
add
and
adc
xchg
cmp
add
jmp
adc
jge
fwait
cli
xchg
push
outsb
sub
pop
hlt
call
scas
rolb
cs
cltd
aas
and
push
call
push
decl
and
xchg
jo
adc
inc
push
dec
inc
jne
jne
addr16
pushf
pop
repnz
mov
js
in
test
fdivl
push
int3
adc
call
sub
ror
push
adc
and
mov
test
add
test
inc
mov
pop
inc
and
xor
mov
add
stos
gs
xadd
inc
xchg
sbb
xor
ljmp
dec
clc
inc
xor
xchg
aaa
adc
dec
in
incl
bound
mov
mov
sarb
les
sub
and
loop
call
cmc
call
das
std
ret
cmpsb
pop
icebp
add
js
mov
scas
mov
fcompl
insb
sbb
ja
jg
ljmp
or
adc
mov
push
pop
outsl
jle
fcmove
jb
or
decl
push
int3
ja
push
jne
notb
cmp
add
push
adc
inc
xchg
sub
lcall
adc
incl
add
rolb
pop
pop
pop
dec
jno
jl
cli
lods
insb
push
out
adc
jl
adc
decl
mov
cmp
pushf
sar
adc
ret
and
xchg
inc
jbe
cltd
repnz
add
mov
rcrb
push
outsl
dec
push
dec
add
cmp
cmp
subb
add
xchg
std
mov
xor
push
sub
je
push
hlt
sbb
test
jle
adc
ljmp
adc
les
inc
cmp
mov
xor
pshufw
mov
jmp
fbstp
shl
inc
ss
pop
xor
xor
or
lock
call
mov
mov
cli
or
enter
pop
or
jo
incl
aas
in
sti
or
sbb
and
jmp
cmp
cmpsl
lret
ja
adc
inc
xchg
lret
sub
and
cwtl
push
pop
dec
aam
cli
scas
fnsave
das
fwait
xchg
push
jb
lods
xor
pop
mov
jl
cmc
rorb
and
incl
clc
sub
cmpsb
pop
sahf
mov
pop
shl
mov
mov
incl
cwtl
push
pushl
shl
add
adc
enter
mov
aam
jl
add
fs
decl
add
or
hlt
dec
pusha
fucomip
sti
add
mov
call
xchg
lock
pop
js
lds
scas
mov
or
nop
lret
mov
xchg
and
lcall
mov
lcall
fwait
or
arpl
jg
movsl
pushf
dec
or
mov
push
lret
je
iret
movb
pushf
sti
inc
clc
inc
outsb
pop
push
insb
add
sbb
cli
incl
mov
cmp
shll
cmp
sbb
inc
lock
aaa
loope
fidivrl
pop
mov
sbb
arpl
or
daa
dec
adc
pusha
or
cld
and
sbb
push
push
dec
lds
push
ljmp
sbb
in
int3
and
fwait
pop
add
ja
call
adc
mov
sbb
adc
out
arpl
pushl
imul
fwait
push
fstpt
inc
and
outsl
arpl
scas
clc
jmp
lahf
rcll
bound
mov
jae
lahf
adc
pop
pop
mov
gs
jecxz
inc
out
dec
xor
add
push
or
mov
mov
and
movl
sbb
or
add
jg
decl
call
out
sbb
fisubs
sar
xor
push
mov
movsb
mov
rorb
jne
dec
push
push
push
mov
inc
jmp
jne
push
pop
sarl
adc
mov
xor
test
cmp
mov
mov
mov
lret
hlt
ljmp
sti
adc
adc
test
cmp
ljmp
cli
out
xchg
lock
mov
fistl
mov
in
add
push
jl
push
ljmp
sbb
repz
push
add
fmuls
mov
shlb
cmpsb
adc
push
cmp
inc
push
lds
mov
push
std
pushl
jmp
popa
pop
test
ljmp
mov
ret
in
jl
sub
es
test
pusha
daa
shlb
mov
dec
out
roll
jle
outsl
mov
test
cld
rcll
std
out
ljmp
fcmovu
add
stc
pop
and
std
outsb
jo
or
sbb
movsl
stc
push
mov
add
je
into
nop
or
sbb
int
imul
call
ljmp
call
outsl
add
int
dec
out
inc
roll
and
and
xchg
or
ljmp
mov
xchg
fcmovbe
adc
and
inc
add
or
outsb
loopne
fnstsw
ljmp
imul
movsb
fwait
int
add
mov
rcr
dec
cmpb
and
inc
mov
cmp
sti
loopne
outsl
fcomip
or
es
sub
ds
mov
imulb
enter
sub
iret
decl
inc
sbb
sub
push
call
cli
add
jo
repnz
push
mov
and
jmp
shl
mov
cs
jne
and
mov
sbb
dec
xchg
cli
in
orb
incl
cmpl
and
aas
mov
inc
sub
mov
cmpsb
movsb
inc
or
lock
mov
movsb
inc
inc
pop
lods
out
bound
sar
decl
movsb
scas
push
movsb
cmp
cmpsl
sahf
adc
mov
shl
pushl
mov
pop
es
jp
xor
add
rorb
push
inc
ret
fs
jl
inc
or
jp
cld
ret
inc
test
loope
push
enter
mov
and
imul
rcrb
sar
pop
and
test
dec
inc
push
mov
xchg
xchg
ds
ds
cli
pushl
cmp
xlat
mov
nop
lods
sbb
lcall
and
out
mov
mov
or
outsl
inc
cmpsb
negl
and
cltd
pop
arpl
add
add
dec
or
mov
test
dec
jg
jmp
sub
adcl
and
repnz
pushl
test
das
cli
ljmp
ja
lods
mov
inc
jp
push
and
imul
js
andl
negl
add
adc
stc
lds
lcall
faddp
dec
sub
adc
add
test
push
mov
divl
mov
inc
sbbb
dec
xor
decl
push
mov
outsl
add
push
mov
push
out
outsb
xor
pushf
popf
aam
mov
and
pushl
push
fs
or
add
mov
insb
ret
add
data16
mov
mov
pop
cmp
mov
jg
push
xchg
fsubrl
mov
sar
js
xor
decl
inc
imul
jmp
je
add
pop
mov
add
push
sbb
jb
and
stos
sub
sbb
mov
dec
je
ds
mov
add
mov
cmp
xchg
ret
fdivp
mov
or
fidivs
push
pop
and
lock
sub
sahf
add
outsl
insb
decl
mov
or
add
jp
xchg
cmp
xor
lcall
pop
add
cmp
mov
das
clc
repnz
xor
daa
push
fisttps
add
pushl
das
fs
gs
aad
xrelease
into
jo
aaa
pushl
push
inc
leave
inc
test
push
cmpsl
cmp
cmp
mov
mov
cmc
pop
xor
pop
ja
into
mov
mov
lcall
sbb
enter
inc
out
int
or
data16
mov
adc
add
cld
cmove
jg
add
mov
test
inc
or
rolb
adc
lcall
mov
fildl
sbb
jg
pusha
ljmp
xor
xor
push
cmp
push
pop
push
cs
call
pushl
xchg
loope
scas
adc
or
dec
lods
push
dec
pop
push
mov
loope
mov
decl
jg
out
mov
push
or
xor
adc
xchg
lcall
popa
mov
test
jle
jl
fdivr
fbstp
rol
faddp
enter
inc
add
movsl
sbb
push
push
or
cld
ljmp
outsb
push
cld
bound
inc
or
shll
lcall
xor
aas
add
sbb
orb
xor
incl
dec
dec
jno
or
xchg
pop
pushf
cmp
mov
add
inc
decl
mov
fadd
cmp
pushl
pop
imul
push
cmp
jmp
xor
push
cmp
xchg
popf
and
aas
das
es
ljmp
es
and
cli
ljmp
loopne
pop
test
cmp
popa
mov
push
push
xchg
decl
push
mov
call
shl
inc
ss
test
mov
jmp
adc
incl
jle
es
or
add
xchg
jp
loop
push
cltd
addl
add
ret
jg
xchg
mov
and
cmp
add
push
dec
pop
rclb
loope
xor
pop
pop
cmp
inc
in
cmp
xchg
sub
dec
into
fisttps
decl
aas
out
fcmovu
outsl
stos
cwtl
les
mov
jmp
lea
in
and
mov
cwtl
mov
and
test
sub
sub
mov
insl
mov
decl
mov
repz
mov
jmp
ds
loopne
outsb
inc
xchg
int3
inc
mov
mov
loopne
inc
les
punpckldq
data16
aaa
adc
shll
jmp
sar
sbb
dec
into
push
sbb
fwait
test
loopne
jne
jl
add
outsl
cwtl
ja
inc
jg
push
inc
dec
sbb
pop
add
cmp
in
add
movsb
inc
jo
mov
incl
push
cmpl
lock
mov
sub
push
jge
jne
pushl
cld
cmp
sbb
jo
pop
pop
and
int
or
dec
xor
in
ljmp
dec
das
and
out
lret
push
call
lahf
lock
xchg
or
adc
pushl
inc
add
jns
addb
out
mov
push
movb
push
in
inc
in
add
add
rolb
fldt
out
cmpsb
push
mov
mov
mov
add
roll
push
cmp
lea
clc
or
xor
jg
lock
mov
mov
or
call
inc
fldt
dec
scas
bound
movb
or
dec
push
cs
inc
decl
jg
xchg
add
icebp
shl
sub
imul
adc
dec
incl
xchg
int
insl
xchg
mov
adc
pop
mov
push
rcrl
pop
sbb
imul
call
std
call
mov
dec
add
in
fisubrl
cmp
and
std
lcall
xor
sbb
addb
nop
jmp
adc
test
decl
dec
cs
hlt
dec
push
mov
adc
movsb
jmp
decb
cmp
dec
data16
push
outsb
loope
sbb
xor
lcall
xor
pop
cmp
pushl
into
mov
cmpl
fimull
jmp
fdivrp
sub
or
movb
pop
jle
cmpsb
rcrb
add
add
js
xor
fcomps
add
daa
adc
xchg
insb
stos
inc
jbe
fdivs
lock
test
fildll
ret
fcomps
mov
leave
adc
ljmp
push
icebp
popl
les
bound
pop
aaa
inc
xor
data16
adc
pop
icebp
jg
popa
mov
adc
and
inc
push
and
scas
xchg
mov
mov
filds
mov
jne
cld
inc
iret
call
jo
inc
pushf
jg
sbb
or
mov
sti
ss
or
pusha
xor
test
pushl
sub
dec
fxch
sub
scas
mov
imul
pop
lret
jg
mov
cltd
cmp
push
out
pop
pop
mov
xchg
sub
inc
scas
loopne
sahf
ljmp
sti
sbb
jbe
add
insb
cld
add
sub
push
adcb
and
mov
xchg
dec
sbb
mov
dec
xor
test
adc
pushl
mov
jg
movsb
sbb
in
push
pop
fdivrp
mov
stos
cmp
and
pop
jg
and
mov
out
clc
ljmp
pop
call
scas
jne
ret
inc
push
lret
adc
cld
lcall
sub
mov
adc
lcall
stos
fwait
push
push
add
lret
jns
outsl
ret
cs
add
jge
push
fsub
or
fisttpl
pop
ret
mulb
decl
mov
jns
push
mov
sarl
data16
pushl
std
decl
test
cmc
push
mov
inc
jnp
or
or
imul
push
inc
sarb
fadds
test
xchg
das
push
jmp
inc
add
push
xchg
and
jge
rcrb
or
incl
mov
dec
push
ret
lret
mov
and
pop
and
and
inc
xor
xor
lock
xor
inc
in
xchg
out
mov
faddl
fwait
mov
and
add
dec
sbb
cmpsl
sub
jge
add
pop
ljmp
jbe
sbb
cs
or
mov
pop
cmp
incl
pop
sbb
stc
sbb
stos
sub
xchg
ljmp
out
push
sbb
loopne
mov
add
test
jg
jg
sbb
out
mov
mov
add
mov
xorl
mov
nop
push
sub
sub
ja
rol
ret
call
cmpsb
push
pop
ret
push
lods
pushl
fdivr
and
mov
mov
jb
inc
into
cmp
les
popa
inc
mov
lock
call
inc
aam
sbb
ljmp
and
cwtl
cs
mov
decl
lock
rcrb
jne
ds
xor
dec
push
std
mov
pop
loopne
push
sub
add
shl
push
leave
push
andl
into
pop
cmp
mov
arpl
push
or
mov
cmp
add
inc
push
shll
xchg
xor
add
add
inc
mov
mov
pop
hlt
fsubs
lahf
pop
or
mov
ret
imul
call
or
movsb
mov
xor
or
pop
hlt
dec
decb
xor
call
mov
aas
and
rcl
inc
stc
mov
mov
insl
icebp
dec
dec
push
enter
push
sub
xchg
and
outsl
cli
mov
xor
arpl
mov
loope
mov
add
xchg
or
pushl
and
inc
cmp
gs
mov
inc
in
push
addb
cmp
ds
jp
add
and
sbb
sub
gs
pop
pushl
pop
movsb
std
mov
lcall
fadds
push
dec
pop
inc
insb
xchg
or
and
dec
sbb
inc
or
cmp
push
dec
ret
mov
mov
inc
mov
inc
clc
decl
aaa
sarb
adc
data16
cs
incl
nopl
hlt
jbe
aaa
gs
pop
lea
xor
cmpl
sahf
dec
push
jg
and
add
movsb
out
loop
xchg
dec
push
loope
mov
jo
mov
fcomip
std
mov
xor
xor
out
push
inc
xchg
int3
pop
xchg
inc
push
fistpll
push
fiaddl
sbb
mov
jmp
or
out
adcb
ds
adcl
fs
adc
xor
arpl
nop
add
decl
cs
push
enter
mov
xchg
mov
in
lcallw
incl
cmp
and
push
xchg
add
inc
sar
jmp
dec
jmp
negl
test
incl
push
decl
mov
mov
or
imul
incl
sub
dec
call
stos
add
dec
mov
jbe
pop
adc
mov
jmp
outsb
or
jo
lods
loope
rorb
or
dec
lret
mov
push
and
repnz
loope
or
or
add
incb
cmp
adc
or
ljmp
int3
mov
cmp
rclb
mov
jbe,pt
and
test
jmp
cmp
outsb
stc
sub
add
dec
mov
js
daa
add
add
cmp
ja
adcl
pusha
je
xlat
push
fimuls
add
push
jle
lcall
lods
dec
clc
adc
cld
out
ss
ds
std
arpl
mov
lcall
push
inc
or
add
mov
jmp
inc
and
lahf
sbb
decl
lock
ret
sub
je
bound
cwtl
push
mov
push
adc
mov
mov
pop
jb
push
inc
and
sbb
lock
jg
or
sbb
imul
adc
out
sbb
loopne
clc
call
add
jne,pn
dec
ljmp
mov
mov
lret
call
jg
inc
fs
and
bound
and
jae
push
orl
mov
outsl
rolb
decl
decl
pop
adc
push
inc
adc
je
ret
dec
or
jmp
pop
lcall
jg
or
xor
push
fcomps
push
pop
mov
or
jg
push
push
mov
xor
add
or
fs
ss
dec
jne
data16
incl
test
sti
mov
xor
insl
lcall
icebp
cmpl
jno
or
pushl
popa
dec
pop
movsb
sbb
imul
hlt
pop
popl
fbld
push
test
outsl
pop
pop
and
push
ja
ljmp
add
mov
test
add
aam
push
call
insb
xor
adc
mov
add
jbe
or
add
outsl
jle
or
lock
xlat
mov
lret
idivl
xlat
add
inc
jbe
in
decl
add
movsl
push
cmpsl
int3
jp
in
lcall
push
add
add
insb
jp
rcrl
mov
movsl
insb
shr
repnz
xor
pop
icebp
imul
daa
mov
ja
ja
in
pshuflw
filds
pop
cli
cmc
cmp
decl
mov
add
push
ljmp
or
outsb
and
lcall
cmp
pop
jg
aaa
and
or
sbb
adc
pop
xor
mov
mov
or
sub
pushl
jge
lea
inc
pop
cmc
pop
mov
std
mov
pop
jne
jmp
notl
jge
and
cli
jg
push
or
test
sti
push
and
incl
pushf
push
jb
cs
adc
push
push
mov
or
xchg
pushl
lahf
negb
adc
push
leave
outsb
sub
dec
jecxz
add
es
aam
decl
imul
icebp
stos
adc
fsubs
jg
arpl
call
pop
fildll
xor
nop
mov
pushf
imul
add
xchg
add
adc
mov
cwtl
add
out
dec
shl
jge
jecxz
sub
les
push
sbb
push
or
cld
dec
inc
mov
push
mov
out
fcomip
xor
sbb
adc
imul
push
and
push
or
arpl
mov
sub
sbb
jmp
std
loop
inc
or
mov
push
cwtl
dec
jle
inc
js
dec
sub
sbb
inc
rolb
ljmp
insb
stos
inc
cld
insl
in
pop
pop
dec
inc
jno
xchg
add
jmp
pop
adc
cmp
out
pop
sub
jb
dec
out
les
adc
jecxz
pop
inc
push
and
das
aas
sar
fsubl
idiv
stos
lahf
or
cld
cmp
mov
ret
pop
push
in
mov
pushf
cmp
push
lret
or
adc
es
lcall
adc
in
push
fcoml
adc
sbb
jbe
call
pop
pop
or
xor
fmuls
add
mov
ret
imul
int3
lock
out
clc
mov
out
mov
int
push
aam
pop
fs
push
and
sub
insb
xor
jo
cmp
dec
jg
mov
inc
jo
xchg
cli
xchg
or
imul
testb
xor
cmp
ds
jne
ret
and
push
ljmp
cmp
or
sub
inc
adc
add
mov
mov
fidivl
push
sbb
clc
pop
dec
adc
fldl
stos
bound
gs
inc
loop
mov
movsb
adc
cs
jg
cld
push
std
push
inc
pop
or
mov
dec
or
jmp
adc
hlt
mov
ret
loop
jae
cs
std
jo
dec
mov
or
jg
mov
or
add
lcall
jg
ljmp
clc
repz
xchg
inc
cwtl
sbb
adc
jge
movsb
ljmp
enter
in
int
pop
push
imul
ljmp
cmp
ret
std
int
or
push
sbb
mov
lcall
rorb
scas
jge
ret
xor
mov
cmpsb
or
dec
xchg
ljmp
push
roll
pop
xor
mov
aad
xchg
adc
inc
cli
arpl
decl
push
inc
std
enter
sar
pushl
sti
dec
mov
mov
scas
int
sub
gs
shl
pop
int
ljmp
xchg
jbe
sar
jl
dec
std
mov
mov
push
fistps
jae
loop
out
movsb
ljmp
mov
pop
outsl
cmpsb
mov
sub
icebp
mov
adc
rcll
pop
add
dec
mov
adc
imul
xchg
stos
cmp
in
or
jne
and
test
sets
jmp
jmp
xchg
insl
das
mov
sub
int3
outsl
lcall
fnstsw
scas
push
movsb
pop
leave
mov
incl
mov
push
jo
je
call
loope
lock
mov
jmp
xchg
and
jo
fidivrs
in
mov
sar
fildll
push
in
hlt
mov
cs
insb
aas
jle
mov
ret
push
jne
xor
add
call
dec
outsb
jmp
mov
adc
stos
dec
push
pop
fbld
jecxz
mov
fcmovnbe
inc
jns
dec
add
shlb
fmuls
push
xchg
out
push
pop
cld
adc
add
jg
fsubr
push
cmp
divb
inc
pop
jne
jmp
outsb
ja
filds
and
adc
mov
push
cmpsb
and
out
clc
mov
div
call
adc
cmp
cmc
xor
push
add
lcall
movsl
push
enter
ret
push
test
jb
or
push
les
decl
jnp
add
and
subl
inc
and
adc
pop
jno
xor
add
loope
lods
add
mulb
dec
ljmp
insb
adcb
mov
stos
push
decl
mov
fiadds
inc
decl
insl
xor
cmc
out
mov
jmp
out
clc
aaa
xchg
cmp
lock
or
cmp
ljmp
xchg
xchg
shrl
mov
push
icebp
arpl
sbb
xor
lock
adc
fmuls
aas
sub
mov
push
insb
pop
sbb
sbb
add
push
or
mov
xlat
pushl
repnz
int
lcall
push
cmp
jg
imul
pop
cmp
or
mov
adc
jmp
shl
filds
jne
add
push
rcl
add
in
xchg
mov
mov
shr
sub
cld
xor
inc
mov
negb
fwait
mov
mov
fdivr
and
sub
decl
inc
pop
push
jb
adc
fwait
sub
std
lcall
int3
sar
repnz
stos
mov
cmc
mov
fs
leave
ss
es
add
clc
decl
sub
stc
scas
mov
lahf
jo
add
insl
decl
ljmp
adc
pop
push
xor
or
mov
or
adc
cltd
roll
out
or
lcall
or
inc
mov
mov
add
into
stc
cmp
adcb
pushl
or
loope
pop
fistl
pop
push
add
sbb
cmp
or
fcos
addl
add
add
lcall
fmull
orl
sbb
jp
adc
pusha
cmp
outsb
ljmp
in
xorb
enter
cmpl
ljmp
repnz
inc
sub
fcompl
cmp
xorl
jmp
sbb
aam
jo
xchg
dec
xor
sbb
mov
cmpsb
popf
out
or
les
fidivrl
dec
aad
test
pushl
jmp
or
test
xor
inc
add
dec
test
cli
idiv
aam
dec
push
push
ljmp
orb
mov
inc
iret
mov
xchg
mov
orl
mov
jg
cmp
cmp
xchg
pop
inc
and
adc
adc
incl
cmp
push
ret
push
aad
gs
sub
stos
filds
daa
mov
loope
hlt
sbb
call
ret
xchg
outsb
call
sub
cld
pushl
add
mov
outsl
outsl
ret
mov
cmpsb
pop
mov
ret
mov
cmpsl
rolb
xchg
or
or
mov
pop
sbb
aaa
add
xor
xor
sti
mov
sbb
dec
int
loope
push
adc
pop
stos
mov
stos
cmc
aas
fisubs
mov
js
lahf
mov
pop
pop
cmpsb
jp
mov
gs
jmp
cmp
out
jo
je
or
xchg
jmp
add
gs
sbb
cmp
push
push
iret
jl
push
inc
sub
sbb
pop
fdivs
loopne
fisttps
push
mov
addr16
jo
sbb
mov
jl
mov
mov
xchg
test
sbb
xor
loopne
mov
add
mov
inc
jle
push
shr
clc
cmp
cmp
mov
cmp
lods
pusha
adc
and
push
ret
add
sahf
clc
or
imul
cli
dec
mov
shrb
sbb
mov
call
movsb
movsl
lret
pop
push
add
repnz
ss
push
mov
cs
incl
outsl
rclb
mov
test
dec
leave
loope
xor
mov
subl
cli
repnz
lcall
sbb
ljmp
test
push
push
push
adcb
mov
dec
cltd
inc
insb
jg
decl
daa
std
int3
push
out
imul
movb
push
ds
mov
cmpsl
inc
hlt
fs
cmp
and
jl
inc
push
ja
add
jno
or
call
mov
out
cmpsl
clc
push
add
popa
inc
jne
mov
add
call
insl
clc
outsb
jns
xchg
bnd
fadds
push
fadds
inc
sub
inc
icebp
fbld
push
sbb
xor
sub
pop
and
outsl
mov
cli
pop
jl
hlt
dec
push
inc
mov
loop
inc
ret
subl
and
incl
in
shrl
fbstp
push
pop
rorb
sbb
mov
jmp
shlb
shl
pop
or
enter
mov
int3
cld
add
push
push
pop
cwtl
cs
std
jmp
inc
pop
mov
aaa
add
cli
xorb
dec
add
add
mov
pop
sbb
mov
lock
aad
pop
incl
nop
sub
mov
lcall
or
enter
mov
jmp
es
pushl
jb
pop
enter
sub
ret
and
je
pop
add
jns
cmp
stos
xchg
insb
imul
out
xchg
movsb
aaa
inc
es
call
jbe
push
fmuls
push
inc
repz
mov
insb
jne
outsb
icebp
cwtl
std
jle
fwait
jmp
incl
nop
xor
mov
andl
xchg
mov
pop
scas
lock
jns
push
inc
notb
in
verw
loopne
call
ret
fdivr
push
cmp
inc
insb
push
push
fcomip
jne
cli
mov
push
call
xor
je
pop
pop
das
lock
sbb
mov
xor
imul
pop
inc
rorb
sub
roll
incl
movsl
decl
imull
adc
or
loopne
pop
ret
sbb
push
loope
ljmp
into
cld
add
popa
push
sub
or
xor
push
hlt
lcall
ljmp
sub
and
adc
shlb
and
pop
push
scas
inc
and
cmp
or
push
movsb
jae
jmp
into
aaa
xchg
bound
or
mov
les
push
adcl
mov
pushl
add
mov
sarb
mov
sbbl
fcmove
ljmp
xchg
sbb
inc
mov
dec
or
mov
js
pop
aaa
or
mov
repz
cwtl
add
je
pop
add
lock
or
arpl
inc
jb
out
sbb
push
add
lock
cmpsb
lock
jecxz
outsl
dec
and
dec
call
jmp
mov
enter
mov
dec
stos
or
jg
fsubrs
test
out
dec
cmp
add
aas
pop
clc
push
popa
add
fisttps
xchg
adc
push
cmp
and
ljmp
cmp
daa
lcall
mov
xchg
xor
ss
cmpsb
pushl
cmp
adc
mov
cmp
roll
mov
pushl
clc
das
xorl
or
add
push
outsb
dec
inc
fs
ret
push
std
lcall
adc
out
cli
and
mov
cli
inc
jnp
stc
das
xor
fbstp
decl
push
clc
add
sbb
les
mov
movsb
call
std
xchg
xchg
mov
pop
sub
lods
les
mov
mov
notl
test
cs
insb
mov
add
cmpsb
ret
sub
push
jo
cld
movsb
cmp
je
test
push
push
clc
jg
push
repz
sub
pop
mov
fmuls
cmpps
jb
sbb
test
data16
xor
mov
adc
decl
shrb
mov
lods
inc
test
lea
out
cld
cmp
rcrb
mov
popa
adc
inc
movsl
inc
add
cwtl
xchg
sub
mov
or
jl
inc
incl
ljmp
add
add
call
cld
dec
jb
pop
push
out
repnz
scas
add
cmp
adc
fnclex
push
imulb
lret
add
aas
adcb
jmp
jg
fimuls
test
and
pop
scas
lcall
aaa
jl
loope
cmp
outsl
lock
cmp
into
cmp
mov
clc
loop
cmp
int
rol
out
cmc
minps
mov
ret
outsl
std
cmp
rcrl
add
call
rorl
lahf
push
ret
mov
filds
xchg
adc
in
enter
pop
in
inc
out
fstpt
js
rcr
adc
mov
adc
loop
jg
pop
mov
or
aas
divb
push
and
fs
inc
test
mov
std
leave
hlt
aam
cli
in
ficoms
and
mov
test
shr
test
jmp
xor
dec
push
arpl
jle
cmp
add
adc
xlat
sub
inc
mov
call
xchg
bound
jl
test
or
call
ljmp
ljmp
ret
xor
daa
mov
in
sub
dec
mov
sti
cld
mov
sub
scas
out
jns
push
xchg
addr16
inc
mov
sar
jg
sub
add
decb
sbb
cmp
dec
ljmp
mov
call
push
push
cmp
inc
lods
cld
ret
and
sbb
in
loopne
sahf
jl
or
scas
mov
push
push
xchg
cld
add
jo
decl
lock
pop
fwait
fs
popa
jp
nop
sub
sahf
in
push
clc
cmp
call
fistl
andb
pop
push
push
cld
push
add
pop
fildll
mov
js
and
jo
adc
outsb
mov
js
jle
lret
rcr
add
add
sub
cld
out
xchg
mov
call
pop
pop
cltd
sub
mov
push
xor
mov
mov
adc
fdivr
mov
ficoms
cmp
std
pushl
jbe
fsubrs
lock
adc
ret
mov
test
jmp
mov
dec
adc
xor
push
lds
lcall
or
xchg
pushl
pop
jge
mov
popl
inc
xchg
shlb
insb
fsubs
ss
xor
pushl
jg
push
sbb
test
jo
call
daa
scas
shll
adc
inc
dec
mov
add
push
add
test
insb
push
add
mov
adc
xchg
test
imul
adc
dec
loop
or
adc
movsl
orl
stos
mov
or
jg
mov
push
pop
sbb
inc
in
sub
xor
adc
into
arpl
xor
and
xor
inc
sbb
decl
popa
leave
je
mov
add
call
fsubr
pop
mov
das
pusha
stos
sahf
decl
insb
adcl
decl
adc
lahf
call
add
sar
mov
push
jg
cmp
and
mov
add
pop
aaa
mov
out
add
ljmp
push
jbe
mov
mov
push
std
into
cmp
nopl
ljmp
stos
sub
orb
enter
jmp
mov
add
add
movl
adc
xor
xchg
cmp
pop
jp
mov
add
loopne
xor
mov
cmpsl
dec
push
mov
pop
xor
ret
jg
arpl
add
je
adc
pop
hlt
add
xor
pushaw
jl
shrb
lea
push
and
jae
lcall
sbb
mov
push
fdivrl
dec
or
outsb
push
cmp
pop
or
stos
jbe
ss
scas
mov
ljmp
hlt
scas
mov
loope
shlb
xor
xor
arpl
adc
decl
icebp
mov
shl
jnp
inc
add
in
les
out
in
push
pop
inc
out
or
add
lcall
lcall
leave
or
dec
add
jns
addr16
fcos
call
xchg
jmp
mov
add
clc
rclb
jno
enter
pushl
fisttps
sub
inc
xor
mov
push
mov
push
xchg
shl
jne
fnstsw
pop
inc
inc
xchg
fsubl
jne
dec
jb
frstor
and
mov
adc
call
sbb
gs
out
lahf
cmp
mov
and
and
mov
fisttpll
xor
xchg
scas
cli
fisubrl
adc
ja
lcall
out
outsb
pop
jbe
andb
dec
or
in
xchg
popf
ja
inc
add
bound
adc
ja
popf
dec
add
dec
int3
mov
dec
or
push
scas
mov
cmpsb
push
ja
mov
push
nop
ljmp
incl
rolb
inc
add
sbb
xchg
or
xor
jno
out
pop
cld
decl
sub
xchg
les
rcll
addr16
push
sbb
mov
jmp
mov
or
push
fisubrs
push
ret
push
sbbb
rcrl
inc
mov
push
ljmp
jge
insl
test
sbb
dec
mov
adc
out
lretw
add
sar
test
adc
lret
mov
aas
mov
es
decl
add
loope
mov
and
loop
sti
sub
add
std
mov
ljmp
xchg
imul
jmp
out
push
add
adc
cmc
lcall
pusha
leave
sbb
inc
hlt
loope
pop
outsb
mov
lcall
mov
add
cmovo
inc
lock
xchg
jmp
mov
adc
lcall
and
sbb
push
out
cmp
inc
jmp
loopne
je
push
jl
sbb
add
decl
ret
and
add
inc
pop
adc
mov
and
mov
xor
mov
icebp
jmp
pop
jae
push
sub
scas
mov
push
ljmp
mov
pop
decl
lret
or
cmp
lea
xorl
lods
mov
mov
shl
jne
test
leave
jae
sbb
mov
sti
decl
cwtl
roll
jp
andl
ljmp
mov
and
mov
add
popa
or
movsl
or
pusha
pusha
jb
lock
xchg
mov
sahf
sbb
test
jg,pt
jg
dec
jl,pt
lahf
push
flds
or
fistpl
xor
adc
int3
sar
jmp
out
gs
add
sbb
inc
or
sub
and
sbb
lcall
push
adc
sbb
sub
pop
loopne
js
lcall
lret
xchg
xor
jecxz
and
stos
lahf
sbb
jb
ljmp
cmp
mov
jg
mov
mov
test
mov
stos
test
test
std
in
pusha
mov
fnsave
bound
cmp
clc
jmp
test
in
xchg
out
cmp
lahf
arpl
jg
pop
and
or
pop
lds
clc
pushl
lock
mov
push
push
std
dec
pop
add
test
mov
jl
scas
out
imul
adc
imul
lcall
test
bound
add
push
orb
add
mov
mov
xor
call
push
std
ljmp
push
sub
es
or
clc
decl
cwtl
mov
cmpsb
fldcw
jo
lret
idiv
pop
cmpxchg
or
outsl
mov
jae
lcall
push
cs
mov
dec
lods
lret
and
incl
inc
fs
out
in
fwait
pushf
outsb
bound
addr16
and
imul
push
xchg
sti
pop
jo
std
dec
repnz
stos
mov
orb
aaa
out
add
repz
les
nop
cmp
jbe
bound
push
push
dec
adc
cld
ljmp
dec
cld
and
jbe
popf
adc
out
adc
jge
push
decl
xchg
push
test
adc
push
xchg
and
outsb
add
outsb
mov
call
dec
in
cli
bound
sbb
sub
adc
pop
pop
xor
jne
fs
insl
insb
cmpsl
mov
cmp
std
mov
pop
sbb
sbb
repz
popf
adc
nop
pop
loope
stc
pop
loopne
in
sbb
xor
push
rorl
push
adc
xchg
leave
push
pop
push
pop
rcrl
std
ljmp
pop
insb
sbb
popa
and
es
pop
push
push
add
and
mov
arpl
sub
cmp
pop
jmp
test
add
sbb
dec
sbb
or
jge
inc
jb
js
mov
pusha
pop
hlt
mov
pusha
xor
enter
out
cmp
loopne
mov
loope
or
les
lods
cmp
loop
mov
add
cli
inc
jg
xor
outsb
notl
cmp
ss
sub
loop
call
mov
jge
jb
addr16
ds
mov
jmp
xchg
cmp
repz
std
lock
jnp
dec
adcb
xor
ret
adc
lcall
jg
jmp
or
mov
rcl
xor
in
jno
adc
jmp
xlat
dec
mov
add
push
mov
push
cmp
les
call
cmp
in
pop
adc
call
cld
jp
call
shlb
sub
or
outsl
push
cmp
rol
clc
sub
test
pop
mov
mov
lea
outsb
js
mov
pushl
sbb
or
js
inc
inc
or
xor
add
mov
ja
testl
divb
push
lock
daa
pop
jmp
enter
clc
push
loope
jp
clc
sahf
mul
leave
cs
incl
addb
orb
push
adc
in
mov
push
push
mov
sub
call
data16
jbe
ficoml
adc
mov
bnd
sbbb
call
lcall
call
fbld
arpl
add
or
pusha
jg
testb
mov
inc
mov
xchg
xor
or
push
add
leave
dec
add
in
aam
push
fcomps
jg
sub
test
jecxz
push
sbb
xor
jnp
or
fld
ljmp
cmp
pop
jae
nop
scas
mov
sbb
aam
mov
fs
nop
dec
jae
insb
mov
fs
fists
subl
sbb
lock
adc
xchg
pop
push
ss
jb
jmp
or
mov
push
or
mov
mov
jmp
cmp
xchg
shrb
test
adc
push
je
adc
mov
or
incl
inc
jmp
mov
adc
xor
mov
incl
inc
inc
sub
repnz
xchg
shr
pop
cmp
sti
imulb
pushf
popa
pushf
arpl
add
push
jo
rclb
mov
out
and
add
int
cmp
fisttps
mov
push
push
sbb
lods
push
repz
add
jecxz
dec
sti
repnz
add
xorb
xchg
pop
pop
mov
leave
and
adc
and
fsubrs
dec
insb
mov
fisttps
sub
lcall
call
fistps
incl
push
fistpll
aas
rcrb
jge
rorl
in
outsl
cli
jne
dec
jmp
in
mov
call
xchg
insl
das
mov
sti
fsubs
das
jns
add
ljmp
shrl
add
jle
mov
repnz
dec
out
rorb
xchg
jb
cmp
jle
jp
cmp
lea
xchg
ret
jmp
pop
or
lret
leave
inc
lock
call
sbb
xor
jbe
lcall
mov
jbe
jbe
sar
jl
cmp
mov
rorb
push
and
dec
test
incl
shrl
incb
mov
jne
js
std
sbb
xlat
mov
push
cmp
add
jg
test
adc
push
mov
push
adc
pop
es
jecxz
push
rolb
add
inc
push
xor
mov
sbb
mov
mov
fcoml
push
dec
jnp
aaa
popa
cld
decl
pop
cmpsb
inc
jb
mov
add
jg
add
movsb
divb
inc
clc
sbb
out
cmp
inc
jns
test
xchg
and
jo
adc
pop
loopne
add
add
repz
fmulp
rol
pop
cld
pushl
int3
adc
push
inc
push
out
adc
mov
in
outsl
fisubs
incl
pop
dec
add
adc
aaa
sahf
adc
push
add
cmp
jmp
outsb
inc
mov
xor
push
flds
fwait
hlt
int3
cmp
je
adc
decl
add
dec
stc
inc
js
stc
cmpsl
out
xchg
stos
push
add
movl
call
sbb
mov
fwait
adc
decl
in
push
add
cli
daa
enter
enter
rcrl
mov
xchg
test
xchg
lret
aaa
imul
in
inc
push
loop
jnp
jno
call
insl
mov
and
incl
out
add
je
cltd
jae
fsubs
in
pop
mov
pushl
call
fwait
mov
rcrb
mov
fwait
sub
push
test
out
fdivl
insl
xor
pop
push
std
incl
es
aaa
into
add
cmp
jl
adc
mov
call
add
sbb
sarb
sbb
adc
adc
nop
cmp
push
mov
mov
mov
push
push
dec
xor
or
clc
mov
sub
in
or
das
clc
sarb
sbb
xor
and
jae
mov
mov
lds
xlat
jmp
mov
int
xchg
pop
jne
cmc
ret
js
inc
push
inc
nop
add
mov
add
dec
xchg
adc
mov
pop
mov
lcall
loope
or
movb
andl
adc
push
sub
cli
mov
push
sub
cs
mov
ljmp
push
sub
and
psllw
mov
mov
cmpsb
jo
mov
xchg
cmp
das
stos
add
pop
jb
cmp
andl
push
insl
sbbl
xor
and
inc
decl
jmp
mov
in
arpl
lcall
mov
xchg
mov
xchg
sub
cmc
imul
dec
loope
sub
dec
push
ss
insb
xchg
inc
jne
and
mov
loope
or
xor
and
stos
mov
mov
decl
shlb
mov
sub
dec
dec
adc
push
jle
in
inc
add
mov
mov
rorb
enter
inc
movsl
cltd
decb
sub
ss
mov
jbe
cmp
movsb
or
inc
push
xchg
lret
arpl
cmp
dec
adc
sar
pop
sti
shlb
shll
inc
mov
and
or
jg
pushl
adc
divb
add
or
inc
shlb
dec
lret
out
mov
stos
dec
adc
incb
add
sub
hlt
adc
ficoml
movsb
clc
jo
js
inc
jo
call
bnd
mov
sub
cmp
ljmp
mov
mov
scas
clc
or
dec
ret
or
repz
push
fildll
jge
jg
cld
js
sub
adc
mov
cmp
mov
xchg
inc
aam
mov
stos
add
add
xchg
fcmovnbe
adc
cmp
test
and
xchg
rcrb
cld
jg
inc
bound
sub
jo
or
mov
clc
cmp
fldt
add
ss
andw
lock
test
mov
or
jge
or
call
shll
sbb
or
jns
cmp
or
dec
movsb
insb
lock
dec
loope
mov
mov
dec
das
mov
test
jmp
mov
push
sbb
mov
inc
jmp
movsb
jg
jle
xor
lret
outsb
ret
bound
add
xor
out
push
jb
xchg
call
add
test
cmp
icebp
jo
push
outsb
rorb
lcall
dec
pop
pusha
mov
add
loope
push
jg
and
inc
in
or
or
pop
mov
clc
ljmp
xchg
xchg
mov
lcall
mov
ret
insb
xor
push
test
xchg
hlt
jl
push
or
adc
add
dec
imul
mov
cmc
add
shrb
das
mov
insl
or
jle
call
cld
enter
mov
loopne
cs
mov
fistpll
incl
mov
jl
fdivl
icebp
ljmp
sub
sti
decl
das
cmpsb
add
mov
in
xchg
adc
pop
jecxz
pusha
add
sbb
stos
inc
pop
xor
sbb
loopne
jns
adc
xlat
sbb
xchg
outsl
ss
lcall
jbe
mov
cmp
sub
cmp
dec
lret
inc
aam
jl
mov
push
test
and
adc
dec
add
push
jg
stos
jmp
fadds
and
mov
adc
push
sbb
jb
repz
jmp
mov
data16
js
sub
push
inc
je
adc
dec
idivb
add
fcomip
push
fs
pop
stos
sub
adc
cli
enter
mov
jmp
loop
mov
and
sbb
negb
lock
mov
mov
rclb
scas
adc
loop,pn
jg
push
cld
mov
push
xor
dec
outsl
dec
call
jl
sub
imul
aad
lret
push
xor
call
mov
or
aaa
pop
mov
test
push
mov
enter
jge
jns
mov
lods
jbe
call
xor
incl
fisubrs
cld
popf
movb
mov
push
je
test
and
jmp
in
cmpsb
test
icebp
pushl
std
adcb
add
inc
add
pop
shr
add
cmpsl
mov
les
push
add
pop
cwtl
push
loop
into
lods
stc
inc
inc
popa
xchg
pop
cld
cli
push
jge
test
or
icebp
mov
punpckhwd
sub
xor
inc
mov
pop
sub
or
fadds
jg
enter
mov
fucomip
jg
test
movsb
out
dec
jecxz
cmp
repz
and
into
pop
nop
lret
or
lcall
add
cmp
jns
push
jnp
push
and
add
imul
das
mov
xor
mov
aad
js
add
in
jbe
sbbl
fs
movb
xchg
mov
loopne
mov
push
add
rolb
push
xchg
lret
mov
orl
fdivrp
and
add
mov
fisttpll
add
rol
stos
jns
in
movsl
mov
inc
jmp
push
clc
hlt
sahf
mov
dec
mov
shll
dec
fiadds
fwait
stos
sub
dec
sbb
stos
dec
loopne
mov
shl
std
mov
jmp
push
adc
fstpl
data16
into
adc
outsl
mov
inc
mov
in
xchg
mov
xchg
add
ret
mov
cmp
add
add
out
adc
stc
fiadds
data16
sete
incb
lods
sbb
jb
fcompl
cli
push
pushl
nop
cmp
pushf
jmp
and
loope
popa
inc
jne
mov
aaa
test
pop
lock
call
rcr
fmul
std
ret
pop
mov
or
xchg
inc
add
cmp
call
mov
pop
or
mov
aaa
je
mov
push
and
aaa
ja
scas
cmp
movhps
pop
mov
push
fisubl
push
adc
clc
sarb
cmp
inc
mov
aad
mov
jle
cli
ds
add
call
or
or
dec
mov
jno
jb
je
hlt
cld
or
or
out
insl
mov
push
or
push
sub
mov
adc
inc
xchg
or
pop
jl
or
outsb
shll
push
mov
cmp
outsl
mov
repnz
push
pop
loopne
xchg
js
ljmp
xchg
pusha
or
adc
jno
mov
add
lcall
jo
shl
das
cld
pop
test
fld
and
ljmp
enter
mov
inc
add
push
into
hlt
and
pop
fbstp
shlb
ret
rclb
incl
pop
sbb
or
stc
rolb
add
call
lcall
repz
sarl
lods
mov
sbb
adc
std
cs
pop
fistl
jg
xor
ret
add
pop
cmp
mov
imul
stos
xor
shrb
fs
pop
icebp
call
pop
cli
pop
push
push
mov
adc
int
or
mov
and
das
pop
shl
push
adc
fdivs
test
cmpsb
call
or
vmovlps
test
int3
adc
lea
adc
mov
inc
scas
scas
add
clc
jle
pushf
es
xor
lcall
jl
test
dec
in
loopne
push
mov
mov
insl
rol
daa
ja
sub
js
fsubs
push
sub
lret
jo
sub
orb
bt
jg
ja
lcall
mov
cmp
xor
xlat
push
fstpt
cli
mov
fwait
cmc
dec
mov
or
xlat
cld
dec
loope
dec
mov
xor
push
inc
push
repnz
mov
aad
pop
sbbb
sbb
inc
inc
std
mov
lds
rolb
adc
fdivr
pop
cmp
jb
ds
and
les
push
rorb
fildll
clc
out
jne
mov
les
imul
add
add
mov
lock
stos
cmp
lods
inc
lock
test
add
incl
pop
jbe
pusha
dec
cmpsb
mov
or
pop
cwtl
cs
ds
decl
fldl
cmp
je
mov
mov
xor
cmp
and
dec
enter
call
mov
sub
jle
inc
adc
repz
mov
nop
dec
xor
decl
icebp
push
mov
mov
test
adc
fcomip
pop
xchg
ret
cmp
mov
dec
push
ljmp
and
ja
shlb
je
or
mov
ljmp
and
cmpsb
dec
fisubs
cmp
mov
adc
adc
out
xor
pop
adc
adc
or
clc
fcomip
jg
and
movsb
sti
shrl
xor
mov
in
pop
lock
adc
call
ds
pushf
sbb
or
inc
pop
inc
mov
add
cmp
jmp
pop
sbb
dec
bswap
je
std
inc
pop
loop
call
mov
pop
scas
mov
in
movsb
dec
mov
cld
ljmp
outsl
xchg
stc
dec
call
or
mov
add
cmp
push
outsl
cmp
inc
ljmp
fwait
outsl
insb
push
sahf
jo
inc
es
cmp
inc
mov
push
or
add
fucom
adc
rorb
stos
jne
xor
ja
notb
rcl
std
hlt
arpl
adc
add
sub
sbb
mov
mulb
pop
jmp
sub
push
push
jg
push
mov
scas
mov
adc
ja
incl
mov
fcomip
imul
mov
adc
jg
mov
mov
mov
jecxz
mov
adc
mov
mov
xchg
jne
dec
sub
xchg
add
jmp
mov
call
dec
test
xorb
in
jle
add
fucomip
fisttps
add
inc
adc
sahf
lods
test
jg
scas
call
and
loopne
sub
xorb
add
push
xchg
loop
push
mov
mov
mov
inc
mov
push
sub
adc
mov
aad
test
pop
jmp
call
add
and
add
mov
rorl
push
inc
rcll
dec
incl
ret
sti
push
pop
fwait
add
movsl
lret
jg
jge
movsl
add
mov
sbb
sub
stos
xchg
add
dec
xor
pop
movsl
xor
mov
mov
lcall
lock
mov
div
mov
shll
lock
xchg
inc
pop
dec
xor
jg
or
mov
lret
push
xchg
adc
call
add
pushf
cs
pushl
inc
int3
out
imul
cmpl
lds
push
in
pop
mov
push
xchg
js
dec
jo
lods
and
mov
cmp
mov
sbb
std
lcall
cltd
ret
sbb
push
lcall
ljmp
add
fdiv
std
nop
imul
push
std
xlat
mov
lcall
loopne
jecxz
sub
mov
sbb
push
mov
jmp
pop
jl
add
jg
add
dec
dec
pop
shlb
dec
insb
popa
cmpsb
jo
mov
mov
sub
loope
adc
push
clc
add
pop
sub
jge
inc
add
or
fs
push
std
call
mov
push
pop
call
add
and
sbb
insl
sarb
fmuls
mov
or
inc
je
or
inc
test
xor
sub
dec
imul
decl
test
mov
mov
or
out
orb
stos
push
loop
lahf
and
lock
xchg
inc
jo
jbe
push
test
dec
adc
cld
adc
sbb
mov
mov
sub
add
jmp
xchg
add
out
dec
dec
inc
dec
mov
pushl
sub
scas
and
jo
push
in
add
cmc
call
xchg
push
sbb
das
sbb
ljmp
ret
sti
mov
mov
mov
jmp
push
pop
sub
sbb
in
ret
imul
mov
add
jecxz
aad
rorl
cld
xchg
sub
inc
fiaddl
dec
adc
ljmp
pushl
test
cmp
decl
jecxz
lock
xor
mov
mov
call
pop
shlb
dec
nop
push
sar
mov
jge
incb
insb
clc
sbb
insb
negb
lret
call
or
mov
jp
cmp
push
ret
cmp
and
push
lcall
mov
gs
movsb
push
icebp
sti
cmpsb
cmp
mov
shr
rcrb
mov
or
lcall
push
out
leave
sub
seto
add
and
and
jle
leave
add
add
dec
aas
std
pop
cmp
xchg
outsl
xchg
sbb
cli
xchg
add
sub
out
mov
mov
inc
aad
pop
sahf
cmp
das
add
pop
decl
pop
fmuls
add
dec
in
dec
mov
push
push
xchg
sbb
arpl
lcall
pop
sub
loop
icebp
fisubrl
inc
or
sbb
inc
ret
shlb
shll
in
and
or
mov
mov
pop
xor
decl
clc
sub
push
jns
in
or
cmpsl
push
dec
subl
adc
and
int3
mov
push
int3
dec
clc
inc
jae
xchg
pop
or
ljmp
mov
mov
mov
and
push
into
xchg
pop
mov
add
ljmp
test
imul
add
sahf
jns
cmp
xchg
pushf
fcmovbe
call
mov
fwait
rcrb
or
sbb
jg
sub
shlb
test
push
add
or
mov
inc
js
adc
add
outsl
xor
xor
fwait
mov
pop
mov
idivl
push
add
mov
jg
mov
jl
nop
xorb
subl
ss
and
add
sub
and
sarl
cmp
bound
sbb
mov
xchg
outsb
adc
sbb
incl
loopne
push
dec
mov
sti
stos
push
push
add
ret
add
hlt
das
mov
fwait
add
mov
inc
and
pushl
bsf
lods
xchg
cmpl
fimuls
or
js
lods
sti
xchg
dec
sahf
dec
jbe
mov
decl
sbb
pop
lea
insb
or
lds
push
pop
loopne
pop
or
pop
mov
dec
incb
pop
or
sbb
mov
inc
shlb
sti
test
ret
push
mov
lock
cmp
fdivrp
fmuls
inc
ja
cld
sub
push
push
iret
mov
push
xor
xchg
pushl
je
adc
clc
stc
jae
dec
decl
cmp
pop
inc
mov
clc
xor
xor
cmpb
jne
mov
scas
decl
dec
cmp
mov
sub
fcoms
jmp
mov
jbe
mulb
testb
fidivl
fcmovnb
pop
cli
push
enter
jg
lcall
cmp
lock
add
rol
mov
sarb
shlb
sbb
loope
dec
call
ret
incl
mov
cmp
mov
xchg
mov
jmp
add
push
adc
pushf
pop
fiaddl
xlat
pop
mov
dec
shr
ljmp
call
test
adc
cld
add
push
cmp
pop
stos
add
fcomip
andl
mov
mov
add
jge
push
je
adcb
pop
bnd
and
aam
gs
stc
jbe
not
sar
incl
out
mov
sub
movsl
jmp
cld
es
les
ror
inc
popa
shl
and
lahf
mov
clc
out
dec
add
inc
mov
mov
in
mov
incl
in
mov
data16
cs
or
ljmp
imul
iret
mov
dec
jle
out
mov
add
pop
cmpsl
icebp
xchg
push
mov
add
jne
add
pop
cld
push
adc
pop
xchg
sbb
inc
push
test
aad
in
xchg
iret
adc
mov
mov
inc
jmp
scas
mov
nop
mov
add
subb
jnp
xchg
sub
pushl
cmp
das
cli
dec
cmp
push
xchg
rorb
inc
adcb
bnd
pop
int3
addr16
popa
mov
pop
add
outsl
sbb
jmp
pop
movl
add
jl
jmp
fidivrl
mov
fistl
jmp
popa
add
enter
jle
mov
adc
xor
sub
push
or
ja
outsl
jmp
lret
or
or
inc
add
sub
pop
push
inc
dec
mov
ds
jmp
push
adc
pop
push
fcoml
mov
push
or
imul
lcall
sub
cld
push
rclb
jo
push
daa
movsl
mov
add
nop
cmp
insb
repz
sbb
lods
mov
push
jg
pop
xchg
mov
rorb
xor
shlb
adc
call
sbb
mov
pop
clc
fcomip
mov
mov
or
jle
aam
mov
cltd
mov
clc
decl
push
nop
enter
push
sbb
lcallw
ljmp
pop
icebp
inc
pop
xor
ficoml
push
pop
andb
add
cmp
decl
incl
call
xchg
cmp
push
aaa
shl
cld
ds
mov
jecxz
mov
jp
inc
jp
shll
add
loopne
js
mov
jle
in
pop
sbb
aas
or
jne
popf
dec
lods
cmp
lcall
enter
sbb
sahf
cmp
mov
xorb
jg
and
or
push
lcall
dec
je
pop
hlt
pushl
les
xor
push
sbbl
je
mov
out
sub
scas
push
hlt
push
or
cmp
scas
sbb
decl
cmp
addl
stos
es
add
add
push
and
mov
ss
or
inc
push
sub
push
push
jg
push
add
mov
push
es
push
loope
decb
push
jmp
cld
push
das
sbb
int
push
sub
pop
inc
adc
xchg
mov
jge
into
test
pushl
push
push
imul
add
popa
in
cld
incl
and
fcmovnb
jb
xchg
aad
cwtl
jmp
jge
in
loope
lods
iret
shlb
ja
adc
adc
ss
orl
dec
pop
add
pusha
sub
xchg
adc
pusha
in
cli
int
dec
and
pop
decl
dec
decl
pusha
pusha
ret
shrb
mov
mov
push
adc
outsl
clc
pop
pusha
sbb
mov
ljmp
pop
lock
dec
adc
gs
xor
ss
bound
mov
icebp
pushl
and
xor
xchg
lods
dec
push
xor
add
sbb
jg
dec
pop
scas
gs
jge
jmp
push
icebp
fsubp
fmuls
mov
mov
inc
pop
addr16
push
popf
or
xchg
aas
imul
inc
add
dec
push
and
dec
xlat
jno
or
dec
rclb
add
add
mov
adc
insb
cmp
adc
fdivrs
imul
mov
add
mov
adc
cli
xchg
incl
fprem
mov
sub
mov
or
test
or
cmp
jg
popa
movsl
xchg
xchg
push
ret
or
push
push
push
push
cwtl
push
mov
sbb
pop
cmc
cmc
push
ljmp
imul
pusha
jnp
lock
insl
rcrb
cmc
xor
adc
mov
pushl
xchg
sub
std
jge
ret
repnz
int
outsb
mov
jo
or
pop
decl
push
fcmovnbe
fs
repnz
mov
rclb
out
jg
stc
imul
clc
mov
mov
cld
jns
outsl
js
sub
jno
mov
mov
push
test
shlb
cmp
dec
insl
cli
mov
add
add
add
cmpsb
pop
xor
xor
mov
mov
jge
aas
idivb
jmp
adc
dec
cld
ljmp
dec
push
les
adc
jg
fcmovbe
call
push
daa
dec
pusha
sub
mov
cld
pop
jg
andb
cli
ljmp
or
daa
jbe
subb
mov
fidivrs
mov
mov
imul
popf
push
cmpsb
pop
pop
je
add
push
mov
jmp
cmp
push
adc
push
sub
jnp
jne
add
jmp
ret
incl
or
push
out
test
fsubr
shrb
push
sub
mov
mov
or
fimuls
mov
addb
les
xchg
fcompl
sub
mov
jno
sub
jmp
mov
dec
mov
rolb
inc
inc
jns
add
jg
inc
cli
jae
rorb
aam
rsm
mov
adc
incl
push
mov
add
xchg
add
jns
or
sub
mov
std
xor
jg
call
insl
mov
das
hlt
into
or
add
in
movsl
push
lahf
aam
push
dec
add
ljmp
mov
icebp
dec
dec
js
addr16
mov
mov
adc
mov
ljmp
decl
xor
jg
mov
outsl
add
ret
std
pop
and
and
insl
js
sub
and
clc
call
adc
lods
decl
xor
shll
dec
mov
pop
ljmp
jmp
push
add
pop
leave
cld
ljmp
jbe
jle
mov
incl
inc
jmp
call
or
xor
pop
aas
outsl
aad
dec
cmp
pushl
cld
ljmp
xor
sahf
pop
pop
mov
pop
es
call
push
add
cld
outsb
arpl
mov
daa
dec
or
jbe
pop
movsb
add
and
inc
cmpsb
jns
pop
cmp
add
jo
push
push
iret
pop
jmp
ja
pop
xchg
or
rol
inc
push
add
nop
and
les
pushl
lcall
shrb
aam
mov
xor
add
add
adc
das
fsts
pop
dec
pusha
jmp
out
shl
aaa
jo
adc
adc
mov
ror
fisubs
sub
and
icebp
mov
mov
mov
cmp
decb
mov
outsl
mov
cld
or
push
popa
mov
mov
outsl
incl
out
pop
shr
rcrl
add
and
pop
cmp
out
cmp
mov
inc
jg
dec
cld
cmpsl
data16
cmove
sbb
out
mov
or
inc
cli
or
aas
test
js
inc
pop
out
lds
pop
subl
call
ret
fimull
lahf
mov
jle
dec
add
inc
stos
test
insl
ret
mov
test
pop
insl
sub
and
sub
xor
sbb
jo
cmp
mov
sbb
mulb
push
dec
test
mov
pop
mov
popf
add
jo
sar
xor
add
stos
jno
idivb
icebp
mov
push
lret
add
das
outsb
inc
lret
cmp
adc
xlat
ljmp
and
inc
adc
stc
mov
ficoms
xchg
fisubrl
cmp
cmc
in
scas
lahf
jle
cmp
in
jns
mov
mov
ljmp
fisttpll
fdiv
inc
dec
shrl
roll
xchg
push
add
inc
cld
lea
imulb
lret
inc
ljmp
shrb
data16
cld
or
pusha
fisubrs
bound
cmp
fildll
pop
leave
into
gs
cmp
pop
loop
rol
jmp
iret
sub
loope
pop
mov
mov
inc
adc
or
outsb
popa
in
lret
inc
je
leave
call
lock
in
jbe
jl
leave
fisttps
lcall
xor
je
and
add
je
stos
sbb
pop
test
sbb
cli
or
daa
stos
push
ja
mov
out
push
xor
ljmp
imul
dec
jnp
sti
icebp
mov
mov
sbb
clc
jmp
sub
push
cwtl
pushf
in
sub
loopne
pop
gs
pop
and
decl
xchg
loopne
aas
push
ljmp
test
push
sarb
push
pop
hlt
mov
jge
or
scas
popa
push
xor
sub
cmp
sbb
mov
movsb
push
imul
and
les
and
jo
mov
push
push
add
push
fcomp
mov
out
dec
out
data16
add
mov
xor
xor
dec
push
mov
sbb
dec
popa
roll
pop
mov
and
in
scas
insl
je
jecxz
enter
add
add
test
call
in
popf
sbb
sub
mov
mov
aad
decl
push
inc
call
xchg
lea
test
in
jo
sahf
ret
les
and
or
push
adc
ror
adc
mov
inc
push
negb
jb
xchg
push
fisubrl
add
jecxz
lds
dec
mov
mov
aaa
cld
stos
mov
pusha
ljmp
or
enter
xor
js
fwait
inc
sub
cld
pushl
mov
je
cld
rclb
push
cmpsb
repz
pop
lahf
ret
mov
in
adc
jg
and
ds
lock
push
fsub
int3
jb
stos
cmpsb
jmp
fstpl
icebp
loopne
pop
int
into
and
addr16
inc
xlat
mov
push
daa
test
cwtl
add
mov
cld
push
test
add
and
jg
adc
test
mov
scas
add
in
stos
jb
mov
lcall
pusha
sar
sub
pop
mov
js
mov
fiaddl
loope
sbb
jnp
data16
xchg
mov
lods
push
inc
mov
push
add
mov
fcomip
lods
push
cld
lcall
add
push
ss
addr16
call
adc
fldl
mov
push
xor
mov
xor
adc
sahf
arpl
and
idiv
popf
hlt
mov
shr
int
clc
xor
pop
push
mov
gs
lock
sbb
dec
cwtl
lds
adc
or
jle
push
lock
mov
sahf
dec
lods
mov
fistpll
add
pop
daa
add
mov
jbe
add
dec
mov
and
into
std
pop
jmp
fmulp
sahf
testb
imulb
in
jmp
mov
dec
fadds
dec
push
dec
or
push
mov
stos
add
adc
enter
mov
jg
sar
push
divl
add
or
test
lea
fisttps
jle
push
inc
adc
mov
jg
and
or
cld
sub
out
dec
add
test
lcall
pop
jno
adc
push
add
dec
ja
cmp
jbe
jbe
pop
rolb
mov
add
push
popa
and
fbstp
insl
or
pop
imul
jle
xchg
cmpsl
cmpb
loope
decl
adc
in
imul
and
mov
add
mov
ret
add
loopne
mov
sbb
addr16
dec
push
jl
clc
ss
push
dec
imul
fs
xor
jo
mov
mov
lods
mov
pusha
clc
paddb
stos
jg
ljmp
sbb
inc
pusha
jb
orl
inc
enter
out
xor
push
dec
ds
jns
pop
call
call
xchg
call
jge
sub
inc
enter
fimull
jmp
push
push
inc
shl
xor
dec
or
ret
mov
inc
push
ds
xchg
incb
push
cmpsb
xor
ror
pop
jno
repnz
xor
or
add
lcall
test
lret
cmc
jg
fbstp
or
decl
mov
imulb
enter
mov
fwait
jmp
push
sub
int3
push
fildll
insb
pop
mov
test
lcall
int3
shlb
jns
xor
test
add
push
lock
add
rol
insb
cwtl
mov
fcoml
sbb
fmul
rolb
dec
cmp
push
std
mov
push
pop
or
outsb
pop
mov
cli
aam
sub
adc
sbb
inc
cmpb
mov
loope
dec
iret
cli
and
push
cmp
cmp
mov
push
in
outsb
lock
cmp
mov
ss
xchg
xorl
jmp
out
pushf
pop
dec
push
and
or
pusha
rol
or
add
test
sarb
pop
jge
sbb
ret
mov
les
mov
call
push
or
or
push
cmc
pushl
or
dec
mov
mov
or
jmp
push
lds
dec
push
xorb
sarb
lcall
clc
test
mov
add
aaa
roll
jle
inc
lahf
stos
cli
mov
mov
cli
nop
push
jnp
adc
adc
negb
scas
inc
adc
pop
mov
mov
xor
cmpsl
and
hlt
dec
imul
sbb
mov
pop
leave
dec
jg
mov
cmp
inc
ds
add
or
xor
mov
and
decl
inc
dec
pop
orl
inc
jmp
add
sbb
das
xor
add
ss
mov
lock
lcall
lcall
test
bound
pusha
negl
ret
incl
push
xchg
arpl
aam
push
fidivrl
nop
dec
mov
push
jl
ret
mov
je
out
jb
mov
push
out
cmp
call
inc
fiadds
test
sbb
addl
adc
call
xchg
jecxz
add
loopne
imul
mov
cmp
push
pop
inc
cld
mov
add
xchg
push
xor
rorb
add
jmp
js
fdivs
mov
ret
aas
sub
jmp
and
mov
mov
push
push
mov
mul
loopne
rorb
pusha
jg
jnp
cmp
add
lea
cli
jmp
shl
or
or
hlt
mov
movb
enter
or
shlb
les
inc
faddl
shrl
outsl
js
decl
ret
ret
inc
pop
test
add
mov
push
dec
test
mov
jb
or
shll
shlb
mov
mov
mov
xor
movsl
and
rol
dec
add
cmp
and
push
call
xor
dec
inc
mov
adc
ds
hlt
mov
jae
xchg
mov
lahf
or
ljmp
xorb
incl
js
incl
and
dec
mov
dec
shll
movsb
insb
or
push
pop
pop
scas
dec
imul
mov
mov
outsb
add
scas
pusha
mov
fs
xlat
inc
lret
add
pop
movl
fildl
ret
inc
inc
int
lahf
pop
mov
jl
jp
push
ret
insb
inc
ljmp
insl
jge
mov
cld
decl
jo
rcrb
adc
jbe
cmp
es
dec
std
aad
add
and
jge
dec
xor
sbb
jecxz
cld
push
lret
incb
adc
add
lcall
mov
pop
hlt
xchg
push
sub
inc
add
add
gs
cmp
dec
mov
in
fisubrs
mov
inc
lock
add
or
xor
decl
cmp
add
idiv
sti
fcmovnb
hlt
jo
outsb
mov
cwtl
push
call
call
dec
mov
mov
rclb
rcrl
adc
and
jp
jge
fbld
add
cs
pop
sbb
xor
int
ljmp
push
jno
dec
outsb
ret
outsl
mov
add
sub
lcall
push
pop
pushf
mov
mov
js
add
xchg
clc
jo
insb
repz
inc
cmp
decl
shlb
lods
adc
xchg
sub
inc
loopne
push
rcr
enter
pusha
jmp
mov
call
mov
sbb
push
pop
mov
jbe
xchg
and
std
mov
sbb
gs
xor
lcall
mov
or
cli
aaa
sub
rorl
inc
dec
les
xor
lock
outsl
decl
xchg
repz
xchg
dec
push
scas
xor
insb
cmp
push
and
push
clc
into
inc
jb
cmp
sub
dec
in
pop
add
mov
mov
add
pop
dec
push
pop
int3
rcl
incl
inc
cmp
xor
ljmp
add
mov
ljmp
inc
es
or
xchg
ret
or
stos
mov
push
pop
je
outsl
cli
das
clc
and
dec
test
pop
popa
adc
xchg
int
inc
clc
outsl
sub
sbb
add
push
testl
xor
cmp
mov
jno
inc
cmp
cmp
aas
dec
mov
jmp
jp
cli
adc
push
cmpsl
cmp
inc
incl
add
jg
inc
cld
aas
jne
inc
xlat
int3
dec
pop
sbbl
mov
mov
jge
mov
cmp
xorl
insl
lcall
cld
call
push
or
pop
icebp
sbbl
pop
push
or
subb
dec
jg
push
add
cmp
enter
ror
xlat
mov
pushl
dec
addl
push
loopne
icebp
loopne
imul
inc
daa
js
add
rclb
pop
push
lahf
ljmp
shrl
outsl
mov
pushl
jno
imul
or
pop
rcl
inc
cli
scas
leave
add
mov
mov
movsb
loop
push
mov
add
loopne
sbb
push
and
call
clc
ljmp
adc
outsl
xor
lcall
add
std
push
shlb
add
or
in
xchg
push
mov
cld
ljmp
jmp
adc
ret
lock
in
les
pop
mov
adc
push
sub
and
mov
fnsave
call
insb
loop
repnz
inc
jmp
xor
scas
add
test
ficoms
fmuls
mov
faddl
sarb
jne
xor
mov
fistpll
or
lcall
je
mov
jl
out
je
mov
clc
imul
das
sub
pushl
or
add
and
fildl
je
es
sbb
mov
or
dec
add
setl
inc
jne
cld
std
in
hlt
and
mov
cmp
and
add
xor
pop
push
icebp
jg
sub
xchg
repnz
or
and
pop
dec
call
jbe
movsb
shl
pushf
decb
shlb
mov
ljmp
pop
fistl
inc
xor
dec
cld
es
adc
lcall
pop
in
dec
adc
into
jne
aad
sub
lahf
repnz
add
push
push
dec
insb
push
pusha
cmc
xor
push
inc
push
mov
sbb
ljmp
jne
nop
call
adc
adc
sbbl
addb
ret
or
push
push
frstor
call
push
adc
pusha
mov
or
adc
rcll
mov
dec
push
adcb
mov
mov
push
jle
jne
lret
div
mov
mov
pop
and
sub
test
cs
ljmp
stc
add
lock
fimuls
pushl
mov
aaa
movsl
fdivrs
add
pop
or
add
sbb
aaa
mov
dec
mov
xchg
or
test
lcall
cli
dec
popa
cmp
inc
lock
add
push
mov
push
std
sbb
or
add
add
dec
movsb
adc
decl
sbb
inc
sbb
pop
inc
outsl
int
les
testb
aam
push
jg
scas
push
js
cld
xor
outsl
cs
push
loop
push
int3
popa
sub
call
xor
sub
int3
xchg
mov
orl
std
cli
and
rorl
jns
xchg
shlb
sahf
adc
mov
push
lea
mov
testb
or
add
adc
jg
mov
lock
roll
push
mov
mov
mov
incl
or
lahf
adc
aas
xchg
das
lret
call
mov
test
or
movsl
pop
lock
iret
sti
mov
push
jg
cwtl
cmp
add
sbb
cs
or
insb
push
cwtl
pop
loopne
lret
cmp
cmp
call
and
gs
mov
stos
fldcw
jmp
mov
popa
scas
cmp
bnd
jp
or
fcmove
adc
addr16
or
add
and
mov
inc
xchg
jb
stc
clc
nop
aas
imul
add
icebp
ljmp
mov
sbb
mov
test
cmp
jg
and
xorl
stos
aaa
pop
xchg
lock
scas
out
jmp
and
lret
cmp
push
pop
adc
and
xchg
inc
lods
aam
outsb
hlt
mov
inc
mov
call
push
insl
invd
jg
ret
mov
gs
xor
mov
outsb
pop
mov
jg
das
sub
inc
and
insb
cmp
sbb
mov
incl
or
in
and
mov
cmpsb
les
mov
arpl
outsl
mov
fbstp
lret
or
add
lods
ljmp
fildl
or
adc
mov
pop
adc
inc
adc
cli
decl
dec
les
pop
daa
adc
stos
push
out
pop
mov
scas
dec
sbb
inc
pusha
jmp
xor
fimull
inc
insb
push
aaa
cli
in
and
or
incl
call
xor
sbb
sbb
aaa
push
sbb
dec
mov
push
loop
in
mov
scas
bound
inc
stos
dec
jge
and
inc
outsb
push
xor
clc
pop
outsb
push
incl
lahf
push
js
movsb
hlt
jg
jle
xor
icebp
sarb
lcall
fcmovb
jb
insl
mov
ret
imul
ljmp
pop
or
jle
xorb
bnd
adc
push
scas
add
mov
fdivl
cmpsb
decl
mov
cmp
adc
mov
and
or
and
sub
rorb
sub
cs
outsl
add
add
mov
cmp
sub
jb
push
dec
cmpsb
sarb
add
jmp
mov
and
pop
je
jae
ret
push
add
sub
sub
jo
mov
aaa
add
xchg
ss
xlat
or
sbb
dec
adc
inc
fdivrs
dec
sub
adc
aam
mov
lcall
jmp
repz
inc
test
or
rcrb
int3
sbb
mov
xor
or
mov
cmp
sub
aad
bound
rcr
push
repnz
cmp
mov
jg
mov
mov
daa
pusha
jmp
jg
adc
out
adc
jg
add
xor
xchg
es
in
jle
xor
into
ja
popf
outsl
scas
cmp
subl
push
inc
sbb
fs
repz
adc
lcall
inc
stos
push
jbe
ret
jae
pop
mov
ret
insb
mov
insb
mov
xor
loope
or
ljmp
add
out
ss
mov
std
inc
iret
rcll
mov
pop
aam
adc
test
xor
adc
leave
mov
sbb
fisubrl
fcomip
lods
cwtl
add
sahf
jg
add
cmp
jg
inc
out
mov
dec
xchg
sub
decl
shll
push
outsl
jo
sbb
outsb
sbb
pop
jg
pop
movsb
into
jne
inc
push
daa
in
jbe
add
push
add
add
or
sbb
scas
js
xchg
sbb
inc
out
cmp
jnp
xchg
push
pushl
cmpsb
addr16
push
lods
nop
mov
sbb
adc
pop
aaa
mov
or
test
mov
aam
or
xchg
inc
lcall
mov
mov
ljmp
push
call
add
inc
push
les
aas
push
incl
insl
jnp
mov
mov
insb
sbb
xor
imul
cli
lcall
gs
fcoms
pop
or
call
arpl
jecxz
psllw
dec
ds
pushl
push
push
sbb
cmp
sub
mov
fistps
push
add
clc
inc
fisttpl
insb
lea
cmp
sahf
jmp
dec
mov
shrb
pop
mov
call
jnp
and
and
sbb
js
mov
mov
aaa
or
sub
repz
out
les
cs
xlat
and
mov
cmp
inc
nop
pop
addr16
nop
mov
jo
inc
inc
aad
inc
jb
loopne
cmp
add
xchg
mov
movsl
add
xor
rcrl
pop
rorb
mov
inc
out
adc
out
add
lret
gs
push
cld
pop
paddw
loope
cld
pushl
inc
daa
mov
add
outsl
negl
popf
and
mov
add
rcrb
in
call
push
mov
sbbb
dec
add
js
push
loop
shl
addr16
pop
inc
clc
sbb
jl
adc
ficomps
jnp
dec
mull
push
sbb
and
std
dec
stc
cmpsb
add
inc
push
jl
je
ret
mov
jg
or
fadds
mov
jo
out
sar
push
cmp
xchg
sub
sbbl
bound
pop
decl
lcall
jmp
jle
loopne
enter
std
jl
cld
mov
add
jmp
jae
ja
xor
sahf
and
push
lcall
shll
in
xor
xlat
ss
lods
add
lcall
test
call
pop
clc
cmp
loopne
xchg
sub
or
ffree
or
cmpsl
jmp
cmpsb
or
jg
repnz
sbb
ljmp
arpl
sub
jno
cmc
pop
rcrl
in
pushl
dec
inc
adc
insl
das
loopne
xor
inc
push
jb
or
add
dec
dec
mov
xor
je
jmp
ljmp
movsb
or
or
xorb
push
adc
and
ud0
scas
lcall
int3
inc
out
clc
and
mov
insb
add
adc
mov
jne
sub
inc
decl
mov
add
mov
sub
xor
ret
adc
aad
add
pop
cmp
xchg
push
or
jmp
sub
jbe
sbb
mov
sete
lea
subl
add
push
sarb
mov
pop
insl
fisubrs
rcr
leave
adc
rcll
clc
stos
jmp
inc
and
pop
lock
loop
lcall
add
and
mov
dec
add
or
xchg
fs
fisttps
repnz
push
mov
sbb
add
lea
fisubs
js
mov
mov
out
test
add
js
idivb
outsl
or
incb
xchg
push
add
in
call
rcrl
mov
fsubrs
aad
mov
rol
sub
mov
int3
push
or
mov
add
ds
fsubs
add
add
pusha
pop
lock
call
shrb
pop
loope
pop
ror
in
test
lods
lahf
ret
std
push
cmp
cmp
test
hlt
fdivs
hlt
pushl
cld
jmp
shrl
sub
dec
sub
shlb
jo
mov
push
mov
push
xor
sub
xor
in
jmp
jo
call
shll
sbb
movq
cli
hlt
and
adc
pushl
mov
fsubrs
dec
shlb
mov
ljmp
test
shlb
mov
adc
pop
mov
loopne
cs
inc
xor
mov
cs
mov
mov
pop
inc
pop
lods
inc
mov
ret
dec
call
pop
lcall
call
or
pop
hlt
jp
and
cld
jne
out
outsl
dec
clc
mov
int3
mov
test
or
jmp
mov
inc
adc
or
pop
xchg
sbbl
nop
and
add
jmp
mov
inc
in
lock
mov
jl
sbb
push
inc
mov
ret
inc
cltd
rcr
sbb
jp
inc
data16
pushf
nop
jo
xor
pop
pop
ret
mov
scas
loopne
jecxz
mov
test
js
jle
push
pop
inc
sti
mov
cmp
sbb
pop
or
ja
test
jmp
lea
incl
enter
sbb
fistps
pusha
jbe
fldcw
mov
lcall
insl
out
popa
push
push
push
imul
dec
hlt
dec
scas
fucomip
call
ret
call
push
ret
scas
das
mov
sub
lahf
mov
call
repz
jmp
adc
inc
push
cmp
outsb
cmpsb
sbb
mov
incl
mov
xor
pop
outsb
push
fcmove
or
lock
mov
sbb
xor
sbbb
jne
fwait
push
mov
jl
add
and
sarb
andb
ljmp
adc
pop
shlb
mov
lock
pop
pusha
push
call
js
sbb
popa
idiv
sub
incb
jae
into
xorb
mov
jnp
or
mov
pop
or
adc
adc
cmp
adc
notl
push
add
adc
popa
dec
test
cmp
call
mov
mov
fwait
inc
nop
iretw
inc
push
inc
cmp
cmp
jl
and
ja
mov
in
ret
lods
pop
xor
jge
adc
rorb
mov
jg
sub
or
jp
or
add
jmp
pmaxsw
fidivrl
mov
into
mov
jl
push
sbb
push
fs
std
cmpsb
loopne
pop
shll
out
xor
pop
cmc
incl
lcall
lock
popa
scas
jge
mov
pop
dec
push
mov
inc
mov
xor
clc
cld
incl
dec
mov
lret
adcl
sbb
sub
push
jg
add
lods
inc
and
add
cmp
mov
ja
outsl
clc
jmp
xchg
sarb
dec
lea
add
mov
std
jbe
std
pushf
es
jg
mov
adc
inc
add
and
aam
cld
xorl
mov
and
gs
call
add
popa
push
xor
xchg
je
push
decl
or
ret
add
test
scas
aas
mov
sbb
push
mov
xor
or
psubd
adc
call
fidivs
sbb
decb
push
lret
ja
inc
pop
or
enter
ss
call
mov
push
pop
push
and
mov
pop
out
jo
mov
jmp
ljmp
ret
dec
fistpl
mov
outsb
mov
xlat
lret
sti
in
outsb
mov
call
nop
add
mov
sbb
adc
jne
fdivs
mov
push
mov
rcrb
adc
add
pusha
ja
mov
pushf
div
popa
add
bound
pop
cld
xchg
sub
add
les
sbb
inc
jne
push
pusha
dec
push
push
das
fdivrs
outsl
clc
jmp
in
test
mov
jmp
imul
ss
or
fbstp
mov
pop
push
mov
adc
and
adc
sbb
cmp
inc
or
lock
mov
jb
ret
push
jo
in
or
inc
add
std
push
incl
jg
cmp
jno
or
and
sbb
pushl
push
inc
inc
cmp
xchg
subl
cmpsb
jge
andl
push
push
xchg
push
out
mov
in
mov
adc
inc
insb
pushf
add
leavew
lock
xor
mov
pop
movsb
icebp
and
xor
fs
lea
out
lods
stos
rol
add
push
in
stos
mov
inc
cld
incl
inc
push
mov
jae
sbb
dec
aas
sub
mov
aaa
push
push
nop
pop
cmpsl
push
add
hlt
cmpsl
jge
test
jg
lock
jns
repnz
pop
cld
out
pusha
scas
imul
addr16
call
sti
cmp
mov
mov
xor
jge
jbe
jmp
idiv
roll
mov
adc
incb
pop
sub
pop
inc
mov
add
mov
inc
outsl
cli
jg
scas
data16
data16
or
ja,pt
fadds
sub
pushl
adc
neg
out
and
xor
pop
add
call
add
push
push
sbbl
lcall
neg
xlat
push
cmp
mov
pop
mov
decl
cmp
les
push
std
push
cmp
mov
mov
divb
sub
or
sub
pmaxub
pop
mov
imul
cs
int3
es
pusha
daa
popa
mov
push
inc
cmpsl
ljmp
mov
xchg
inc
gs
and
in
xchg
xor
push
jg
movsb
decl
pop
jne
mov
push
std
push
mov
and
decl
test
sahf
pushl
and
pop
add
pop
nop
cmp
insb
lret
adc
push
jmp
loopne
lcall
mov
outsb
fs
clc
add
rolb
pop
xor
rolb
push
clc
decl
fisttps
cmpsb
mov
popa
pusha
add
fwait
pop
or
pop
sti
jge
daa
imul
sbb
sub
repnz
repnz
or
sti
dec
mov
add
mov
add
add
insb
icebp
lcall
ret
cmp
sub
inc
or
push
sbb
sub
hlt
rorl
push
push
outsb
add
jmp
mov
xor
pop
jmp
out
mov
pushf
loopne
or
jo
call
xchg
adc
loopne
insb
push
and
add
sub
scas
scas
or
dec
pusha
cmc
ljmp
adc
lods
lcall
cmp
outsl
adc
shll
loope
aad
push
das
push
inc
inc
adc
xchg
sbb
add
popf
push
call
loop
mov
js
mov
inc
iret
push
inc
testb
cmp
incl
test
jecxz
and
dec
popa
push
mov
pop
dec
jb
sub
jecxz
stos
decb
es
xor
mov
fmull
int
imul
xor
in
and
push
dec
mov
mov
clc
nop
clc
dec
lret
pop
insb
test
lock
and
lcall
dec
test
outsb
enter
and
dec
sub
lret
adc
or
ret
fistpll
dec
lock
clc
clc
std
lods
cmp
repnz
das
test
xchg
mov
pop
call
clc
decl
dec
nop
mov
imul
jmp
jp
add
mov
push
nop
icebp
push
or
mov
sub
fwait
jb
dec
loope
mov
das
movl
jns
xor
pushl
cld
decl
sub
fisttpl
sarl
mov
push
xor
inc
mov
sbbl
xor
cmp
xor
popf
cmp
inc
xchg
jg
push
or
cmp
add
add
test
or
dec
call
scas
mov
test
cs
mov
mov
xor
out
pop
xor
loopne
inc
inc
jae
xchg
std
mov
clc
pop
sub
enter
andl
add
adc
mov
cmp
notl
out
sahf
lods
mov
adc
ss
ffreep
xor
mov
daa
cli
test
outsl
jo
adc
pusha
pop
sbb
subb
iret
js
incl
enter
or
xchg
push
testb
add
push
xchg
loope
ljmp
xor
test
sub
test
push
push
jno
imul
mov
fimuls
adc
lcall
xlat
sbb
incl
cld
subl
sub
cmp
incl
andb
add
push
push
and
or
sbb
shrl
in
pop
int3
mov
cmpsb
test
incl
enter
add
sti
mov
push
pop
push
jbe
adcl
xorb
mov
mov
cmp
test
mov
andl
outsl
mov
cmp
sub
mov
sub
jno
je
call
aas
jge
xor
sahf
cmp
mov
dec
shr
mov
add
jno
incl
mov
rcll
cmp
test
and
or
sub
clc
lcall
push
sub
das
add
pop
loop
je
outsl
lar
cmp
aam
inc
mov
ret
sbb
lock
adcl
sahf
xor
mov
lds
or
lds
sbb
das
adc
fldt
dec
adc
ret
lret
int3
idivb
mov
shr
mov
mov
inc
outsl
mov
clc
popa
pop
repnz
out
cmpsb
testb
mov
in
jne
repnz
repnz
pop
cmc
add
ljmp
loopne
cs
push
daa
or
orl
arpl
cmp
pop
or
aas
push
roll
dec
sbb
adc
mov
pusha
lock
ss
loop
fiaddl
push
fwait
sub
push
lret
jg
sbb
push
dec
mov
inc
test
icebp
add
divb
std
decl
idivl
jo
dec
insl
dec
movsb
sbb
pop
add
or
cld
cld
inc
adc
loopne
js
lods
add
jg
loop
neg
mov
sub
rcrb
icebp
imulb
pusha
push
mov
ljmp
and
mov
cmp
add
dec
jl
xchg
sbb
xchg
mov
stc
mov
int3
inc
sti
mov
adc
ljmp
test
xor
sub
mulb
in
jecxz
jg
pushf
loope
adc
mov
xor
add
loop
push
stos
icebp
xor
insl
jg
inc
mov
test
inc
mov
test
decl
mov
mov
sbb
mov
movsb
adc
mov
mov
jmp
loop
sub
adc
testl
cwtl
mov
clc
add
aaa
and
call
jge
stos
push
pop
jb
std
sbb
fistpll
sbb
jg
add
inc
adc
jo
add
movsl
not
sarl
lcall
jb
mov
pop
mov
dec
ljmp
inc
add
repz
out
clc
cmp
imul
test
push
mov
incl
lea
add
ljmp
out
scas
ss
pusha
cld
mov
xor
and
andb
pop
xorl
ja
dec
and
mov
mov
je
or
hlt
jae
test
sar
call
jne
cmp
test
stos
call
aas
inc
dec
jmp
loop
push
dec
mov
mov
jg
into
push
movsl
mov
rolb
and
and
pop
push
ja
mov
jecxz
call
mov
push
dec
adc
dec
lcall
cld
lcall
mov
xchg
fstpt
push
pop
or
push
cwtl
fidivl
jge
inc
cmp
pusha
fnstenv
cs
nop
mov
mov
pop
ror
sar
jnp
add
cli
jg
es
xchg
aam
daa
testl
enter
loopne
mov
aam
push
lcall
ljmp
inc
push
gs
cmpsl
lret
clc
mov
testb
imul
es
mov
lock
add
cmp
push
add
push
dec
dec
call
jae
adc
pop
pop
ret
mov
and
adc
out
xchg
pop
cmp
fmuls
or
or
das
into
mov
sbb
push
mov
ret
adcl
pop
xchg
ja
mov
and
xchg
mov
adc
ja
mov
repz
call
or
cltd
arpl
shlb
or
sar
mov
aad
rorb
leave
lcall
mov
adc
adc
lret
lds
adc
out
push
mov
incl
and
mov
mov
push
dec
fnsave
loope
iret
or
lock
pushl
call
out
push
pop
mov
imul
aam
mov
jbe
insl
sar
cmp
add
sbb
mov
xor
jecxz
out
aaa
or
test
pop
addr16
dec
mov
jge
and
cmp
rolb
roll
ret
outsb
xor
dec
dec
ja
add
fisttps
std
cwtl
stos
call
ljmp
mov
mov
je
dec
xchg
mov
fcomp
cmp
inc
out
xlat
shll
ror
jge
frstor
mov
clc
mov
roll
cli
sbb
repnz
cltd
call
or
push
cmp
pop
add
ljmp
mov
or
mov
out
clc
jmp
rcr
xchg
arpl
test
xchg
add
sbb
add
ljmp
inc
fidivl
cmp
js
mov
push
xor
mov
adc
call
hlt
pop
stc
push
push
dec
add
in
out
cmp
insl
into
scas
rcll
std
cmp
or
cmpsb
sub
pop
js
ficomps
sbb
je
out
pop
jmp
or
lret
cmp
pusha
xor
ljmp
clc
inc
aam
test
js
push
cld
insb
lcall
test
xor
or
pop
mov
pushl
mov
sbb
pop
fcomip
call
adc
add
push
cli
lcall
adc
jne
or
push
mov
and
mov
loopne
lock
lock
dec
push
inc
int
pop
test
pop
lock
vpsrlq
decb
js
pop
insb
and
or
jmp
fcoml
insb
jo
mov
incb
incl
xor
push
aam
add
aaa
sub
push
add
jb
mov
pop
ret
lret
inc
dec
pop
push
mov
xchg
ss
shlb
loope
jae
inc
mov
cmp
mov
mov
stos
fcom
cmp
out
dec
jb
jbe
clc
orl
push
mov
push
or
outsb
pop
pushf
dec
test
or
sub
scas
incl
pusha
imul
popf
add
fs
push
decl
negb
mov
pop
in
outsb
mov
jmp
std
cmp
jmp
add
mov
cwtl
sbb
jp
inc
add
inc
inc
ret
xchg
push
inc
aas
sarb
add
cmp
jg
orb
cmp
sub
enter
clc
mov
bound
and
or
sub
incl
fwait
push
mov
mov
pop
add
mov
and
push
sbb
call
jmp
repnz
bound
push
adc
hlt
push
lahf
sbb
dec
inc
loop
cwtl
inc
push
loope
ljmp
outsl
add
in
sbb
mov
rcrb
sbb
add
add
inc
mov
mov
out
fcompl
mov
xchg
ljmp
call
adc
adc
outsb
xchg
mov
add
jmp
rorl
jbe
div
cmp
into
add
fdivrp
push
push
mov
insb
arpl
pushf
movsb
nop
xor
ret
jl
sar
fiadds
push
subl
cs
xchg
pusha
data16
jge
xor
call
int
movl
sbb
jno
je
incl
push
pop
or
mov
add
push
push
pusha
adc
rcll
cli
or
call
jbe
mov
adc
cmc
sbb
popf
popf
cmp
mov
push
pop
or
sub
stos
pop
or
sar
decl
aad
in
mov
push
mov
pop
mov
push
cmp
lcall
adc
movsl
add
ds
fcomi
mov
dec
fdivr
ja
data16
cmp
sbb
dec
push
push
xchg
fiadds
scas
incl
aas
pop
inc
dec
test
mov
ljmp
ljmp
cmp
mov
ds
push
mov
nop
insb
jmp
or
adc
nop
inc
adc
or
mov
sub
lcall
pop
jl
xorps
or
add
jne
std
dec
movsl
jns
inc
je
aad
jmp
xor
fmuls
aas
mov
push
add
jbe
mov
je
jne
push
lock
mov
xchg
inc
cli
pop
mov
sbb
shlb
mov
inc
inc
pop
mov
lcall
orl
dec
cli
mov
adc
sbb
jb
sbb
fildll
lods
rcr
shrb
xor
into
add
push
mov
sar
pop
ret
rolb
add
int
xchg
enter
mov
xchg
or
ljmp
xor
nop
push
push
cmp
cld
ds
loopne
pop
pushf
orb
clc
std
sbb
fbld
incl
aas
dec
xchg
cmp
adc
fimuls
fdivr
pushl
pop
sahf
pop
loop
sub
faddl
pushf
add
loope
test
test
pushl
bound
sub
cli
mov
ret
ljmp
push
pop
sbb
les
mov
jmp
add
pop
ljmp
pushl
adc
pop
clc
mov
je
imul
call
cld
out
pop
jmp
or
mov
dec
adc
fimull
adc
mov
mov
mov
daa
pop
pop
sarb
cmc
lcall
scas
cld
aaa
jg
sub
pop
gs
or
scas
loope
outsl
xor
incl
fildll
es
daa
in
push
push
cmp
jmp
test
call
adc
pop
dec
loopne
std
mov
mov
sahf
enter
jg
pop
cld
xchg
dec
jge
rcr
lods
test
sahf
adc
inc
xchg
ljmp
cmpb
adc
stos
adc
mov
test
and
mov
and
std
adc
fcoms
cmp
or
movsb
push
and
sbb
cwtl
xchg
mov
jmp
add
pop
inc
psubd
adc
cmpsl
mov
cmpb
outsb
lods
mov
call
fmuls
sbb
mov
or
or
sub
pop
filds
push
popa
call
mov
faddp
sti
hlt
outsb
incb
lock
jmp
or
add
aaa
bswap
lds
sub
inc
xchg
xchg
or
call
es
notl
cmp
lds
dec
mov
mov
lock
and
push
ret
or
decl
xchg
mov
dec
inc
repz
pop
adc
lea
adc
jg
movsl
or
aaa
xchg
int
rolb
inc
inc
out
sbb
decl
mov
pop
je
repz
bound
adc
push
test
decl
add
sub
mov
data16
adc
xor
fsubrs
xchg
jmp
fdiv
stos
push
lea
adc
fs
movsb
dec
sahf
add
or
call
test
adc
cmp
push
xor
lock
adc
inc
fstps
jg
sub
imul
jp
aad
divb
and
lea
mov
or
xor
rcrl
push
or
jmp
push
sbb
sub
sbb
push
mov
push
cld
mov
outsb
xor
outsb
add
and
and
outsb
add
sbb
cmp
cltd
mov
lcall
sar
lods
mov
adc
insb
xor
clc
cltd
sbb
add
fists
std
lcall
movsb
lock
push
mov
lock
jbe
or
cmpsl
mov
ds
ljmp
sbbl
decl
adc
movsb
add
mov
idiv
clc
jb
incl
xchg
jne
fstpt
mov
insb
into
test
in
lock
clc
jg
add
inc
sbb
dec
adc
sub
js
inc
push
addr16
movsb
or
sub
pop
divb
dec
nop
add
loopne
mov
andl
or
fsubrp
fs
test
call
cmpl
push
mov
push
ljmp
outsl
movsb
ret
dec
and
jmp
lcall
movsb
push
fisttps
cs
cmp
ljmp
dec
xchg
mov
push
cmpsb
shlb
cmc
lcall
adc
cmpsb
or
inc
push
mov
pushl
mov
cwtl
dec
cmp
sub
call
xor
mov
loop
clc
dec
addr16
sbb
sbb
rcll
inc
xchg
pop
jb
pop
aaa
call
fwait
incb
or
xlat
fsts
nop
cmp
mov
decl
jno
mov
scas
add
pop
mov
insb
lcall
jb
inc
int
fildll
das
xchg
cltd
sar
incl
aam
xchg
out
idiv
cli
mov
jecxz
inc
mov
add
add
inc
adc
jg
push
ja
or
loope
jno
je
pushl
data16
sbb
out
xor
shrb
ret
pushf
dec
sub
lods
add
filds
lcall
cltd
loope
cmp
addb
mov
add
fisttpll
inc
cmp
decl
aad
xchg
clc
ja
repnz
imul
dec
loopne
aaa
cmp
loope
ljmp
clc
push
push
stc
test
mov
cmpb
or
xor
andl
push
push
xchg
adcl
lahf
pop
nop
or
inc
fidivrl
push
sarb
adc
loopne
sbb
pop
or
adc
add
ljmp
jo
cmp
mov
pop
push
dec
pusha
push
outsb
outsl
ret
and
ja
stos
lcall
call
adc
sub
repnz
add
pop
adc
sarb
xchg
outsb
mov
mov
insl
outsl
adc
shl
mov
insb
dec
cwtl
xor
cmc
mov
stos
jmp
into
in
and
push
ret
fidivl
push
jecxz
mov
pushl
ja
andb
outsl
push
cli
adc
mov
cmp
mov
cmp
test
inc
cltd
add
xchg
dec
int
scas
enter
loopne
and
pop
add
add
ret
jmp
push
stc
adc
out
cld
inc
je
mov
pop
jl
mov
icebp
shlb
in
jg
sbb
lods
cmp
sub
cmp
mov
in
fldt
call
xor
incl
inc
rorb
adc
inc
push
jae
push
xchg
jp
ljmp
mov
loopne
sbb
cmpsb
mov
pop
je
xor
inc
incl
out
cmp
popa
outsb
icebp
fnstsw
pop
mov
mov
call
inc
or
add
mov
xchg
notb
test
dec
lcall
sti
das
clc
in
lcall
ds
fcmovnb
mov
add
decl
rorb
mov
fadds
mov
addl
push
je
invd
mov
mov
push
add
pop
pushl
mov
movl
ret
dec
lds
lds
das
xor
hlt
call
loopne
mov
faddl
adc
movsl
clc
push
adc
leave
test
push
sbb
pop
andb
adc
mov
movl
cmp
fcomip
add
lcall
jmp
leave
and
ja
jno
cld
add
mov
incl
jle
mov
ljmp
das
je
xor
add
clc
fildll
mov
inc
repnz
shll
incl
xor
push
cmp
rcrb
xor
imul
cmp
imul
clc
sahf
repz
mov
ss
lcall
rorb
ret
xchg
lock
ret
dec
cld
push
les
cli
jg
cmpsb
or
rcr
mov
add
lahf
cwtl
pop
setp
push
popa
idiv
pop
cmp
jnp
dec
and
std
cmpsb
leave
enter
call
aaa
xchg
inc
bound
pushl
add
test
xor
mov
adc
push
push
push
outsl
mov
or
sbb
adc
cmp
sbb
sbb
outsl
jg
lcall
mov
out
xchg
and
aas
and
popf
movb
push
inc
inc
decl
ja
sub
or
cmp
cli
jmp
add
ret
enter
xor
jmp
in
mov
jmp
imulb
outsb
fwait
int3
jnp
or
enter
fwait
js
ss
fdivs
nop
mov
shl
je
mov
rcl
mov
push
mov
ljmp
loope
mov
scas
stos
mov
movsb
jmp
lock
inc
add
mov
pop
adcb
and
inc
xlat
ljmp
into
add
rclb
mov
mov
out
cld
jg
bound
call
addr16
add
roll
sbb
push
loope
decl
fbstp
sub
test
push
mov
les
icebp
andb
insb
or
das
orl
mov
or
ficoms
inc
hlt
lret
cld
jo
dec
push
mov
dec
ljmp
push
and
dec
ja
cwtl
sub
push
notb
adc
jne
decl
rcrb
je
movsl
std
xor
inc
mov
push
push
inc
dec
das
jg
add
inc
subl
sbb
lods
push
hlt
decl
pop
xchg
mov
dec
mov
push
mov
lcall
daa
jmp
insl
xchg
fdivr
jecxz
xchg
jge
adc
fdivrp
test
or
lods
xor
pop
mov
ljmp
sahf
push
loope
cmp
popf
push
or
sub
lock
aad
jl
mov
push
outsl
insb
sarl
fisubrs
pop
test
sub
xlat
and
or
jmp
sub
lods
mov
cwtl
xchg
mov
stos
imull
mov
add
sub
jmp
cs
rcr
dec
jne
jle
notb
in
push
add
push
sbb
dec
out
xchg
cmp
mov
es
add
call
jb
cmp
hlt
rol
test
lds
ud0
ljmp
cwtl
ret
pop
xor
rolb
sbb
lock
mov
xchg
loop
pushl
push
add
outsb
bound
or
sub
lret
xchg
ret
sub
cmp
sbb
add
scas
pop
push
push
ret
test
enter
ljmp
ficoms
cld
adc
dec
gs
daa
data16
jle
popf
adc
mov
mov
jecxz
dec
dec
nop
andb
inc
adc
fdivr
incl
or
cli
test
push
popf
push
es
sbb
pop
add
gs
add
jecxz
std
jg
adc
fnstcw
xor
cmp
decl
cmp
jmp
rcrb
stc
inc
dec
orl
out
bound
lock
pushf
orb
adc
out
pause
call
dec
addr16
jmp
mov
out
xor
xorl
sbb
in
cwtl
jp
dec
inc
jne
scas
cli
jg
insl
and
lcall
and
mov
mov
psubusb
adcb
adcb
in
jbe
ljmp
leave
loopne
push
std
imul
dec
adc
jnp
xchg
jo
jbe
dec
sub
dec
faddl
dec
sbb
jg
add
or
inc
jge
cmpsb
jb
push
push
orl
addl
decl
aam
lahf
lds
test
ss
jmp
mov
mov
mov
cli
jmp
mov
xchg
sub
fiaddl
add
lcall
or
fistps
pop
in
xchg
popf
sbb
pushf
pop
ljmp
push
das
fcoms
dec
lods
adc
cli
dec
addr16
mov
mulb
outsb
fs
inc
add
and
mov
insb
xor
dec
add
decl
sub
pop
jl
fiadds
add
jns
and
push
adc
outsl
cmp
and
scas
add
incl
adc
insb
mov
inc
dec
adc
inc
dec
insb
fdivrl
orb
inc
mov
add
lcall
pop
add
loopne
and
jg
jg
push
outsl
mov
push
pop
lock
subb
repz
jmp
sub
or
or
dec
xor
lock
sbb
test
test
sbb
and
lcall
or
dec
daa
movsl
pop
nop
sub
popa
jmp
movsb
dec
fisttps
pop
xor
and
js
imul
mov
adc
push
jecxz
or
ja
jb
jg
inc
cld
and
dec
jmp
and
fwait
xorb
and
rsm
in
cmp
outsb
sarl
subl
add
jmp
pop
pusha
add
addl
pop
adc
cs
decl
test
aaa
cmp
jne
or
int3
jp
xlat
lcall
std
and
insl
mov
ljmp
xchg
jb
cli
or
das
or
adc
push
repnz
add
mov
femms
lock
mov
hlt
mov
ret
inc
icebp
mov
cmp
push
sbb
out
add
inc
movsl
std
ljmp
rcrl
dec
or
sbb
les
adcl
inc
add
les
sub
pop
repz
lahf
jge
or
repnz
cmp
les
jp
ljmp
mov
mov
in
inc
sahf
rcrb
push
adc
ja
stos
mov
lock
xchg
in
pushl
sbb
xor
stos
jne
and
sbb
mov
or
sub
or
cmp
jbe
mov
ud2
fbld
loopne
push
and
add
pop
outsl
cli
decl
push
pop
sbb
stos
pop
das
loopne
mov
ret
cmp
ret
xchg
dec
mov
mov
sbb
addr16
mov
orb
decl
jae
push
addl
inc
pusha
or
clc
shlb
js
jg
xchg
sbb
xor
call
stos
aaa
cwtl
aam
mov
pushl
dec
shlb
or
xor
sub
lcall
mov
stos
mov
arpl
pop
xlat
add
or
sub
jmp
cmc
cmpl
xchg
or
loop
pusha
lcall
scas
mov
ret
int3
pop
cs
imul
jg
mov
or
inc
mov
mul
pop
ljmp
adc
ljmp
lret
loop
pusha
xor
xor
mov
push
popa
std
dec
xor
scas
out
dec
sbbl
and
xchg
lret
jge
sub
lcall
dec
int
scas
in
push
and
jmp
popf
xor
push
std
add
add
lret
lods
mov
add
pop
jge
jne
and
sub
jg
lret
add
pop
outsb
add
std
ljmp
or
dec
sbb
and
mov
push
ss
sub
mov
or
cmp
push
lock
roll
or
pop
js
xchg
jns
incl
adc
sub
ret
and
push
push
add
enter
jg
adc
mov
gs
and
xlat
in
es
cs
xchg
mov
mov
mov
add
pushl
jp
call
xor
jl
inc
imul
adc
call
int
sub
inc
or
push
sbb
or
in
cmp
scas
xor
mov
test
mov
xor
jae
int3
inc
mov
xchg
jg
aaa
or
and
adc
lds
mov
add
popa
call
push
test
ljmp
sbb
sti
sbb
leave
dec
mov
add
dec
dec
add
vcvtsi2sdl
pop
scas
insl
pop
incl
xor
call
cmpsb
or
hlt
jae
add
dec
fildl
cmp
adc
cltd
aad
pop
aam
cmpsb
push
adc
or
xchg
faddp
in
gs
mov
push
sbb
cli
xchg
sub
int3
gs
mov
xchg
add
mov
cmp
clc
add
push
push
jmp
sahf
add
adc
and
pop
mov
jmp
clc
adc
in
aaa
je
bound
ljmp
jmp
cld
xchg
jbe
jmp
sub
lods
in
dec
adc
pop
mov
or
pop
push
fdivrl
jne
std
cli
add
xor
enter
dec
mov
xor
ljmp
jg
cmp
cld
clc
je
xchg
xor
jo
cmp
test
test
mov
lock
aam
jbe
cmp
cmp
add
mov
lcall
aas
std
loope
xor
fdivp
jl
sub
jg
outsb
std
faddl
test
push
int
cmpsb
cmc
mov
call
lcall
push
sar
and
loop
test
cmpsl
insb
pop
ss
push
cmp
std
movsb
jbe
std
mov
and
xor
out
out
push
jmp
es
call
xor
pop
nop
dec
mov
sbb
xor
and
and
push
lock
xchg
mov
dec
adc
or
or
andl
mov
test
shlb
push
mov
call
icebp
leave
icebp
incl
pop
sub
sub
add
in
jg
jnp
dec
or
lea
es
cld
and
mov
cld
adc
decl
and
push
int
mov
adc
or
les
push
popa
loope
decl
and
cmp
rol
gs
jg
ljmp
xchg
inc
dec
je
cmp
push
js
cmp
fs
mov
add
enter
xor
pushl
imul
add
cmp
aaa
adc
data16
cmp
mov
jno
jmp
cmp
jg
mov
push
adc
or
fwait
cmc
or
outsl
adc
inc
pusha
sbb
scas
and
sbb
aaa
ljmp
inc
divl
adc
push
add
add
cmp
gs
sub
cli
pusha
or
addr16
or
fidivs
cmp
in
data16
inc
sub
enter
inc
jle
ds
imul
fs
add
pushf
jecxz
les
popf
jb
xlat
pop
les
incl
jmp
fistl
ret
test
inc
jp
idivl
dec
pop
pusha
and
icebp
hlt
je
adc
rorb
shlb
xor
add
or
mov
jo
arpl
add
je
cltd
push
push
insb
lock
cmp
sub
xchg
out
sub
push
push
outsb
leave
fmuls
test
pop
mov
cmp
or
inc
sub
mov
cmp
push
pop
aas
jmp
cli
mov
loop
mov
imul
cmp
lea
negb
mov
push
rorb
icebp
movsb
dec
inc
mov
push
cmpsb
decl
mov
push
sqrtps
add
add
or
call
insb
mov
push
mov
je
mov
or
aad
into
aam
add
loopne
icebp
ja
lods
fnstsw
pop
xor
loope
aas
xchg
mov
xchg
stc
ja
lock
cld
add
ja
mov
test
push
loopne
clc
jg
fisubs
jmp
jge
mov
data16
ljmp
mov
mov
push
ljmp
or
dec
dec
inc
loopne
cli
jmp
dec
pop
pop
scas
jmp
inc
iret
jne
scas
xor
jg
call
repnz
jne
lret
xchg
push
cld
mov
scas
jl
pop
scas
mov
pop
rolb
incl
pop
sub
dec
sbb
xchg
sub
mov
jg
ret
xorl
pushl
mov
push
sbbb
rorl
ret
arpl
in
lcall
call
pushf
loope
fisttpll
dec
xor
clc
push
ljmp
or
decl
bound
jg
mov
stos
jecxz
mov
ret
outsb
cli
pushl
inc
push
stos
add
or
mov
into
fnsave
mov
jb
or
mov
ljmp
push
inc
rcl
adc
push
mov
mov
mov
enter
pop
cmpsb
or
in
scas
into
ret
xchg
fld
push
add
data16
data16
mov
cmpsb
cli
stos
mov
insb
ret
and
je
cmpb
shrb
nop
pushl
jg
push
clc
dec
sub
mov
mov
mov
mov
ja
filds
addb
int3
sub
fwait
mov
mov
mov
cld
test
insl
inc
testb
ret
xchg
clc
jmp
adc
mov
mov
outsl
nop
in
inc
or
push
jl
push
andb
add
jg
subb
inc
das
sub
je
push
mov
data16
push
xor
push
mov
sub
test
xchg
sbb
xchg
icebp
or
add
xchg
mov
dec
sub
pop
jl
pop
dec
xlat
sub
fadd
pop
push
mov
lods
or
cmpl
fisttps
add
cmp
xchg
enter
dec
lahf
clc
clc
dec
jg
xor
pop
inc
mov
push
mov
lods
push
mov
lods
inc
pop
cmc
mov
cmp
sbb
adc
mov
aaa
std
pushl
rorb
stos
iret
dec
add
cld
lcall
pop
add
std
add
pop
cmp
mov
and
fwait
das
into
sarl
outsl
cli
dec
fadds
xor
mov
aas
mov
mov
dec
push
xchg
sbb
jno
add
push
jl
lods
pop
mov
mov
mul
outsb
mov
orl
fisubrl
sub
add
shl
dec
mov
shl
jg
xlat
mov
mov
cld
icebp
fs
cld
repnz
or
shl
add
add
out
pop
scas
or
sahf
sub
ljmp
jb
arpl
and
test
and
mov
int3
subb
loop
clc
ljmp
lock
jns
inc
jg
sahf
and
pop
das
add
jmp
incl
push
mov
loopne
pop
cmp
xor
aaa
sbb
lock
mov
sbb
in
pop
sbb
adc
dec
adc
mov
push
dec
inc
cmp
movb
pop
mov
fidivs
sub
sbb
adc
lret
js
push
stos
je
mov
adc
pop
jg
dec
stos
cmp
pop
or
stos
dec
sarb
xor
loope
sbb
test
mov
das
sbb
add
addr16
pushl
decl
dec
gs
sub
add
and
or
or
ljmp
loop
iret
sub
fisttps
or
xchg
std
sub
xchg
test
xchg
clc
incl
stos
cmp
in
repnz
jae
mov
pop
inc
in
adc
incl
or
mov
pop
mov
scas
leave
dec
in
mov
outsl
mov
or
add
icebp
or
int3
rcr
sub
inc
push
or
lods
pop
fcmove
jmp
or
xor
or
ljmp
loopne
jmp
add
decl
jmp
ljmp
shld
jb
aaa
mov
lods
fdiv
pop
xor
imul
aaa
leave
mov
lret
dec
clc
mov
cld
push
repz
jo
ljmp
push
xchg
fs
mov
inc
add
add
or
mov
jmp
insl
call
stos
bound
out
xor
adcl
fucomip
test
mov
add
jge
ss
pop
sub
sub
fcomi
adc
std
mov
out
addb
fistl
add
pop
maskmovq
arpl
or
add
cmp
or
ficoml
add
push
mov
jg
adcb
dec
pop
add
cmp
dec
ljmp
pop
push
push
pop
arpl
or
ret
clc
push
pop
std
call
jmp
mov
or
xchg
lea
or
jmp
je
sbb
push
icebp
gs
add
out
ja
xor
jne
loope
add
dec
mov
push
jne
or
jmp
lock
inc
add
sub
adc
movsb
add
dec
nop
add
jb
in
mov
popa
mov
push
js
ljmp
xor
pop
popa
mov
repnz
clc
cmp
sbb
incl
insb
inc
xor
add
add
or
lock
clc
push
adc
add
dec
push
hlt
push
js
scas
xor
cmp
push
test
add
mov
adc
and
mov
and
push
sub
jg
cs
lcall
mov
push
mov
dec
int3
repnz
ljmp
jne
lcall
dec
sbb
scas
je
into
jo
dec
ud2
jmp
mov
stos
inc
aaa
push
jb
ja,pt
lea
pushl
xor
in
push
push
sub
xchg
daa
push
call
lea
mov
jp
mul
push
leave
test
cmp
push
xchg
call
fwait
or
lcall
outsl
addl
int3
sbb
add
testb
inc
dec
mov
call
push
dec
mov
fwait
pop
stos
adcb
inc
outsl
push
sub
and
pushl
popf
ret
pop
xchg
aaa
leave
jns
loope
cmp
fisubl
outsl
mov
push
add
aaa
mov
test
xchg
repz
clc
sbb
lea
das
call
lcall
hlt
sub
and
adc
pushl
mov
sub
mov
dec
mov
mov
and
outsb
mov
jmp
cld
fwait
add
and
cli
jo
inc
xchg
sti
pusha
pop
incl
mov
cli
adc
mov
incl
jne
ljmp
push
testb
fdivrl
add
or
pop
or
jle
fcomip
out
movsb
orl
insb
cmp
in
clc
leave
jg
or
push
xor
or
mov
mov
xor
mov
fisttps
xchg
je
sub
add
lock
int
cmpsl
inc
lods
push
jae
mov
ljmp
mov
nop
dec
push
inc
sub
mov
pop
cmp
nop
enter
loope
mov
sahf
or
sub
cli
nop
cmpsb
jne
dec
nop
cmp
movsl
push
cli
cmp
mov
pop
ja
testb
add
call
imul
fistps
pop
ret
cmp
frstor
add
jae
xor
clc
cmp
push
add
loopne
or
insb
out
inc
adc
out
push
stos
es
ljmp
outsb
mov
lahf
push
jl
lds
fs
jg
and
xor
ret
daa
fdivrl
add
xchg
jmp
push
or
ja
dec
rcrb
ja
push
inc
mov
inc
mov
mov
mov
sbb
mov
sbb
jmp
dec
cmpsb
push
pop
lods
inc
shll
icebp
dec
pop
sti
insl
call
mov
jmp
mov
sub
bound
hlt
mov
mov
cli
jmp
pushl
or
mov
addr16
ret
jae
je
push
or
jg
andb
sbb
fildll
pop
fwait
xchg
mov
dec
mov
jo
xchg
jmp
les
add
cmp
enter
lahf
push
jb
call
cld
mov
jmp
pop
mov
fsubrs
cwtl
add
push
test
outsl
call
sar
adc
aad
ret
adc
push
sub
mov
mov
fcmovne
out
jo
popw
push
push
rclb
scas
movsb
mov
andb
fcomip
lcall
xchg
or
push
jecxz
push
mov
int3
imul
jmp
mov
and
clc
cmp
cmp
sti
arpl
aaa
cmp
ss
mov
cmp
lcall
add
mov
ffreep
adc
fistl
add
mov
stc
insb
adc
jg
xchg
incl
jmp
xchg
dec
inc
and
xor
fiadds
push
movswl
mov
hlt
jne
xor
dec
mov
insb
push
jl
fbstp
sub
and
stos
incl
and
sti
dec
ret
lea
cmp
fildl
filds
mov
xor
add
decl
insb
mov
jo
popa
mov
or
cwtl
ror
xchg
cmp
mov
outsl
sarl
or
mov
inc
cmpsb
pushl
and
pop
test
add
loopne
loop
jb
jg
in
cwtl
popa
mov
pop
pop
leave
jp
sbb
je
mov
cmp
push
sub
mov
outsl
lcall
adc
cmp
cltd
lods
roll
outsl
je
xchg
insl
jl
loop
test
call
fisubrs
fidivrs
sbb
cmp
call
push
cmp
xor
push
push
cmp
je
jb
enter
das
test
ja
pop
sub
add
clc
jmp
lahf
jne
lods
aas
stos
mov
or
int3
sbbb
les
mov
andl
es
stos
pop
push
push
add
jne
lcall
sbb
pushl
add
mov
sbb
xlat
pushf
inc
add
ja
lcall
rorb
scas
cmp
negb
dec
dec
mov
cs
cmp
rorl
aad
lcall
mov
iret
sbb
add
xchg
or
add
mov
dec
mov
lahf
imul
or
in
decl
test
add
shrl
mov
ds
pop
or
mov
pop
add
and
ljmp
clc
pushl
test
pop
and
add
add
sbb
add
mov
sub
out
xchg
ljmp
adcb
mov
js
sub
ljmp
daa
fists
xor
mov
in
clc
xor
or
xor
lock
call
inc
int3
pop
mov
mov
pop
hlt
inc
lea
or
mov
jne
js
incl
clc
test
loope
jbe
or
cmp
pop
mov
incl
fimuls
dec
loopne
orl
pop
push
xchg
out
les
flds
add
inc
sahf
aaa
mov
sub
or
ds
xchg
and
mov
and
cwtl
jne
add
xor
dec
cmpsl
mov
out
mov
outsl
and
das
orb
adc
sbb
mov
add
push
push
pop
pusha
inc
mov
sbb
sbbl
scas
push
mov
std
ljmp
lea
xor
jne
add
lods
xor
cwtl
shrb
pushl
nop
inc
mov
incb
add
fisttpll
in
mov
push
and
pop
aaa
mov
dec
jmp
sbb
push
loopne
popa
jle
pop
dec
jg
pop
push
dec
aas
faddl
ret
lcall
add
mov
ljmp
cmp
push
push
add
mov
or
int3
add
jo
xor
lods
out
xchg
repz
les
rcrl
xchg
cli
jg
mov
ret
cmp
push
mov
shlb
add
push
pop
aaa
mov
push
push
aas
shll
sarl
pop
inc
mov
loopne
test
xchg
push
or
jmp
decl
fnsave
sbb
sub
xor
inc
sbb
movsl
xchg
add
bound
push
push
ja
ljmp
pop
mov
add
nop
les
ltr
mov
shlb
add
jno
std
lock
pop
in
sbb
or
out
pop
loope
mov
sub
repnz
leave
loopne
pop
cs
pop
pop
xlat
ds
xor
push
clc
test
repnz
jae
jae
jb
and
mov
and
bound
out
decl
std
or
pop
sbb
dec
data16
add
call
cmp
or
jg
test
add
sar
cmp
xor
lcall
ds
incl
inc
push
mov
jns
jae
cmp
jg
std
push
xor
inc
mov
dec
sar
inc
sarb
insb
clc
sub
push
adc
inc
mov
test
sub
jg
inc
sbb
int3
xor
push
xchg
xchg
roll
clc
push
cwtl
add
ljmp
and
ret
ds
xlat
loope
adc
xchg
cmp
dec
scas
cmpsb
sub
negl
sub
rorb
mov
ss
ljmp
pop
aas
fstpl
repz
ljmp
jno
jmp
push
sbb
stos
mov
pop
xchg
sbb
call
mov
push
insb
addb
sbb
out
in
in
push
out
or
outsb
sahf
or
loopne
pushl
ret
mov
or
out
sub
push
and
call
test
jbe
mov
add
lds
out
pop
mov
sahf
dec
mov
add
pop
int3
mov
pusha
lods
test
icebp
cld
sbb
xchg
jbe
data16
in
std
inc
repnz
xor
push
sbb
movsb
decl
popa
jl
enter
adc
sub
loope
cmpsb
cwtl
sub
jg
dec
xor
or
lods
ds
incl
xchg
adc
push
dec
sub
lcall
cmc
incl
out
ret
insb
inc
ret
ret
repnz
cmp
test
sub
xchg
lahf
lea
cmp
ficoml
inc
mov
clc
push
das
decl
push
mov
mov
inc
in
test
leave
cmp
add
dec
push
outsb
xor
mov
mov
xchg
jb
dec
and
jmp
pop
pop
jbe
and
jbe
stos
inc
inc
aas
jb
mov
add
mov
push
mov
jo
adc
incl
test
push
adc
aas
dec
xor
cmc
int
inc
aaa
out
pop
mov
icebp
mov
cmp
fdiv
add
sahf
push
cld
incl
adc
xor
movsl
xor
add
sbb
mov
cld
loopne
adc
js
je
and
push
add
aad
adc
cmp
jmp
jbe
repnz
xor
jo
clc
fstpt
cltd
cli
es
ljmp
dec
mov
repz
pop
fsubs
pop
sbb
jge
call
push
mov
add
stos
pop
gs
inc
jbe
mov
adc
lea
dec
loopne
pushl
and
sbb
test
lahf
dec
adc
shl
adc
test
outsl
lcall
shr
jle
arpl
xor
cmp
cmpsl
add
call
pusha
sar
jmp
push
push
dec
in
sub
decl
push
fcmovnbe
pop
jle
shrb
faddl
push
push
jl
adc
mov
pushl
aaa
adc
jmp
cwtl
add
add
insl
mov
fistps
cmp
movb
pop
mov
decl
lods
daa
pop
push
je
mov
data16
sar
jmp
mov
and
decb
inc
jecxz
decb
andl
gs
aaa
jge
jl
cli
mov
cmpb
fisubrs
mov
sub
mov
sbb
sub
push
xor
xchg
lods
test
inc
mov
decl
adc
dec
andb
push
lret
cmc
sbbl
pop
push
lods
das
test
aas
push
or
std
jg
inc
fcomps
xor
dec
lcall
and
cmp
pusha
add
cmc
lods
loopne
sbb
dec
ljmp
loopne
fildl
xchg
mov
push
idiv
mov
sar
sahf
les
jo
jg
movsl
scas
dec
jg
cmp
jg
imul
stos
loop
add
add
xor
rcll
movsl
les
cld
adc
idiv
cmpsl
pop
mov
imul
xchg
pop
and
call
cmp
push
inc
pusha
nop
mov
xchg
push
mov
aad
clc
decl
xchg
adc
xchg
adc
call
pop
or
pmullw
mov
enter
hlt
xchg
neg
out
push
test
dec
call
push
mov
loopne
lock
push
adc
insl
jo
inc
pop
inc
lcall
cld
ljmp
xlat
in
and
sbb
and
add
cli
lods
fdivs
hlt
stc
call
mov
out
scas
cwtl
add
push
nop
xchg
fisttpll
div
add
out
clc
jg
pop
ret
nop
popa
cmp
popa
mov
dec
xorb
jg
test
sti
add
mov
push
xor
movsb
movd
jmp
dec
or
jg
addl
push
sub
scas
cmp
or
dec
andb
ljmp
cli
and
sub
inc
jmp
inc
mov
xchg
push
or
ljmp
orl
mov
adc
sub
add
add
push
loopne
inc
sub
out
je
sar
cmp
out
mov
cmp
xchg
mov
icebp
cld
xchg
cli
scas
ljmp
cmp
shll
inc
scas
mov
add
push
dec
loopne
ljmp
int
fdivl
idiv
fs
imul
std
subl
mov
sub
stos
cmp
fstp
movsl
adcb
sar
call
scas
shll
add
or
xchg
ret
and
push
pop
pop
push
dec
cmp
jg
add
incb
out
shll
sub
adc
jmp
imul
cmc
jno
pop
jne
in
int
movsb
sarb
iret
cmp
outsl
jo
push
rol
add
jmp
pop
jnp
push
pop
insl
dec
add
push
ja
incb
cmp
js
add
push
add
daa
mov
lret
insl
or
fidivl
test
and
xchg
or
ljmp
test
pusha
or
pop
rcll
or
adc
out
shufps
mov
in
cld
nop
dec
mov
xchg
insb
jl
lock
and
inc
daa
jle
push
add
jb
mov
imulb
iret
and
xor
cmc
aas
xor
jg
shll
jg
pop
mov
dec
insb
push
int3
out
mov
leave
test
adc
add
mov
scas
les
xchg
decl
loopne
or
fwait
or
cmpsl
cmp
lcall
dec
int
les
les
pop
cmp
mov
add
lahf
inc
test
pop
dec
ret
jo
adcl
fsub
or
test
inc
ljmp
hlt
arpl
or
jae
es
fcomip
push
fdivp
cs
rorb
push
stos
je
jg
mov
icebp
jmp
xchg
cs
mov
ja
push
xchg
cld
fdivrs
and
xor
lea
sub
mov
fmull
sti
roll
incl
ret
jmp
jmp
adc
xor
pop
push
xor
ds
lea
aaa
js
pop
inc
xchg
sbb
iret
inc
in
inc
testb
insb
push
push
decl
imul
dec
mov
sub
call
jmp
cmp
ret
cmpsb
push
pop
mov
imul
and
adc
push
cmpb
pushl
imul
pop
fdecstp
push
out
aas
xor
daa
aaa
pushl
xor
testb
pop
js
pop
jne
add
pop
adc
cmp
mov
inc
push
cmpb
les
dec
ljmp
sub
mov
pop
xor
dec
std
adc
lea
cmp
mov
cli
inc
ja
stos
scas
mov
and
test
ljmp
mov
insb
dec
add
incl
and
or
adc
adc
std
cli
sub
adc
movsb
mov
ljmp
push
dec
cli
push
and
mov
or
pop
push
sub
jg
icebp
jae
or
pop
movsb
add
int
push
orb
clc
mov
cmp
adc
pop
das
jmp
lea
lret
and
push
mov
fwait
inc
dec
xor
loopne
push
mov
out
dec
gs
xor
inc
cmp
cwtl
test
add
incb
aam
je
add
jmp
orl
push
mov
cmp
bound
clc
add
das
sbb
mov
mov
push
inc
and
test
mov
xchg
push
mov
or
mov
cld
jg
add
je
mov
mov
jno
dec
fildll
xor
pop
idivl
pop
fxch
incl
js,pn
aam
pop
pop
ret
add
jecxz
lcall
sahf
int3
inc
lcall
cli
rorl
dec
add
jg
mov
lds
jecxz
jecxz
push
adc
or
mov
adc
std
inc
xchg
rorb
sbb
test
and
decl
nop
shll
loope
mov
mov
mov
call
adc
adc
std
mov
or
or
sbb
ss
dec
cs
ljmp
cwtl
cmp
pop
jp
dec
and
bound
push
test
add
push
push
dec
cmp
dec
add
movsb
gs
push
daa
or
fwait
les
std
or
idiv
cmpsl
sub
add
push
fldl
mov
outsl
pop
andl
or
das
inc
scas
out
loopne
mov
jne
lcall
sar
jmp
push
add
mov
pop
push
je
add
loopne
mov
les
dec
mov
cmp
inc
fnstenv
test
mov
jge
adc
or
imul
xchg
lea
adc
shr
decl
jmp
pushf
faddl
push
je
add
ret
adc
push
hlt
in
std
mov
inc
call
js
and
mov
leave
sbb
cli
data16
mov
lcall
sbb
push
arpl
stos
pushl
mov
adc
mov
imul
lods
mov
insl
test
adc
stos
rclb
cmp
seto
inc
shrl
mov
and
dec
call
xor
jbe
pop
lcall
mov
test
cmpsl
scas
sbb
sbb
mov
cmp
pop
xchg
fisubrl
movsb
cmp
adc
inc
jmp
mov
push
dec
jmp
pop
adc
bound
pop
pusha
test
pop
enter
cmp
pop
decl
sub
andb
fidivl
add
push
sbb
call
jg
sar
shl
xchg
sbb
or
add
ss
outsl
lcall
ds
mov
sbb
bound
arpl
rcr
pop
incl
loop
addr16
fildl
sub
dec
adcb
inc
cmpl
scas
cli
out
cld
xor
cmp
mov
insb
fimuls
in
sbb
xchg
fbstp
sbb
sub
outsl
test
int3
xchg
push
mov
gs
sub
pop
aaa
sub
push
enter
mov
jmp
lcall
xor
cmpsb
mov
xchg
mov
ja
incb
out
mov
ret
mov
lcall
jecxz
inc
les
cmp
mov
adc
imul
sbbb
ljmp
cmp
pop
add
xchg
add
ret
in
inc
test
mov
ja
mov
incl
jmp
or
add
ja
scas
pop
std
xchg
add
xor
add
fisubrl
mul
or
push
jle
test
pop
int3
shlb
mov
loopne
insb
pop
dec
dec
test
adc
fildll
mov
cld
lock
xchg
adc
std
xor
cmp
test
int
xor
enter
ret
add
adc
repnz
dec
adc
add
and
add
fs
inc
sub
jg
xor
sbb
jl
xchg
sub
xor
mov
sub
xor
pop
add
test
test
cld
test
adc
ljmp
pusha
enter
movsl
cmp
inc
fdivp
out
adc
int
or
clc
in
call
nop
stos
sub
inc
or
add
lock
rolb
sti
add
clc
incl
push
inc
pop
in
pushf
arpl
cmpl
cmpsl
xor
pop
cs
mov
adc
scas
mov
push
sub
sbb
jb
lods
cmp
outsb
sahf
lods
rorb
xor
rolb
cld
incl
inc
test
sbb
and
cmp
nop
push
cmpl
loope
jp
cmp
add
fcomip
add
lret
pop
or
mov
enter
ljmp
icebp
jns
mov
pop
or
repnz
sahf
push
js
mov
dec
jmp
subl
sahf
into
pop
mov
negb
jmp
sbb
mov
inc
jl
and
lcall
daa
in
add
jmp
push
sub
mov
xchg
rcrb
sti
inc
nop
sub
jecxz
ss
rcrl
rcl
fs
xchg
xlat
icebp
mov
out
push
mov
adc
xor
push
rclb
in
pop
test
hlt
jg
or
imul
outsl
xor
xlat
dec
pop
addr16
add
sbb
mov
lock
out
xchg
cmp
inc
inc
add
call
loopne
push
aam
xchg
cs
mov
in
add
add
cmc
lcall
xchg
lods
dec
mov
lea
clc
enter
shr
filds
mov
add
pushf
xchg
jbe
mov
les
cmp
mov
ret
lret
jne
dec
xor
or
hlt
or
xor
and
fs
decl
loop
adcb
fcompl
mov
shlb
xchg
adc
add
faddl
fcompl
push
xchg
testl
xor
pushl
sbb
lods
xchg
outsl
push
pop
lea
mov
aaa
and
mov
cmp
jl
mov
lahf
or
fisttpl
push
daa
add
call
repnz
add
add
mov
mov
sahf
add
clc
add
pop
in
les
das
adc
arpl
imul
push
push
adc
mov
insb
dec
testb
pop
pop
inc
add
fbstp
jne
jbe
xchg
sbb
pushf
dec
push
movzbl
int3
xor
lcall
pop
xor
dec
lock
adc
insb
sub
je
or
xchg
clc
cwtl
lret
outsb
movsb
ljmp
stos
scas
inc
dec
inc
cmc
adcb
push
dec
imull
mov
push
pop
orb
incl
cmp
push
addl
mov
mov
int
cmp
imul
push
add
lcall
outsl
push
mov
in
xor
fildll
pop
cwtl
push
test
aam
mov
push
adc
push
jnp
inc
pop
and
repz
push
and
in
idiv
pushl
xor
sub
mov
hlt
inc
fstl
push
in
cmp
call
mov
add
subb
cmp
xchg
cmp
dec
adc
fidivrl
cli
int
push
push
ds
fildll
arpl
push
jle
dec
movsl
or
inc
stc
or
jne
push
mov
fildll
jg
call
mov
sbb
adc
out
repnz
rclb
cmp
mov
jp
mov
mov
ljmp
jnp
cwtl
add
xchg
jne
push
sbb
cmpsb
ljmp
jmp
lret
pop
mov
mov
add
out
xorb
pop
jmp
neg
or
mov
insb
add
add
imulb
ja
cmp
movl
negb
cmp
ja
xlat
movsl
mov
mov
and
jmp
dec
sarl
sysenter
mov
lahf
jl
and
mov
push
nop
movsl
les
push
bound
push
mov
mov
or
pop
out
lds
insb
int
xor
mov
rorb
push
and
fdivrs
hlt
fs
cld
or
rcrb
mov
add
sub
int3
jb
sbb
lock
call
dec
xchg
jp
cmpl
ja
jnp
les
cli
cld
dec
ret
and
fsub
mov
lahf
cwtl
fisubrs
jg
pop
mov
dec
sti
cmovbe
dec
pop
jne
mov
adc
arpl
push
mov
sbb
mov
adcl
clc
in
mov
pop
adc
stc
or
push
out
push
pop
test
call
adc
ja
xchg
lahf
ljmp
sarb
mov
adc
push
movsb
pop
or
cld
inc
jmp
fwait
cmpsb
imul
adc
pop
fisubrl
push
inc
stc
jmp
pop
cmp
incl
adc
cmpsb
outsb
nop
sahf
mov
mov
fdivrl
popa
jnp
or
jl
push
shr
insb
out
jno
lahf
sub
dec
mov
pop
cld
and
xor
psubsb
dec
push
push
xor
jo
or
mov
push
sbb
jg
cld
mov
repnz
stos
dec
push
jbe
mov
xchg
or
push
mov
call
mov
sbb
hlt
xchg
cmp
add
push
enter
jle
inc
mov
addl
and
push
xor
sbb
scas
mov
fisttps
mov
lds
sti
fistl
daa
mov
aas
sbb
stos
push
inc
aas
inc
pop
add
imul
jmp
frstor
add
jne
sbb
mov
jmp
or
lcall
js
incl
leave
mov
rdmsr
hlt
dec
shlb
ret
hlt
pop
dec
js
mov
incl
adc
xchg
ss
push
jecxz
pop
mov
sub
mov
add
sbb
push
mov
mov
pushf
lods
push
inc
xchg
clc
jg
jle
aad
jae
dec
inc
mov
cmp
rorb
fstp
out
loopne
ljmp
pop
sbb
out
jg
lea
add
cmpsl
ret
and
push
je
fiadds
and
xorl
arpl
fcomip
xchg
adc
shrl
cmpsl
cmp
or
mov
push
cmp
call
or
lock
mov
pop
not
cmp
int3
mov
ja
inc
das
movsb
mov
hlt
dec
ror
jo
leave
mov
lcall
sbb
mov
push
test
aad
lock
pop
mov
adc
rorb
addl
push
rolb
pop
jg
cmp
mov
loop
into
rcr
pushl
int3
call
ss
pushl
outsb
or
std
pop
lods
sub
cs
mov
sahf
clc
loop
cld
mov
aaa
or
decl
adc
xor
imul
or
cmp
add
repnz
push
xor
sar
call
or
loope
sti
push
inc
sub
enter
pop
mov
jg
push
call
rcr
sahf
mov
jmp
push
jg
adc
push
decl
int
pop
pushl
xchg
pop
mov
out
test
andb
call
in
fadd
push
jecxz
mov
sub
sahf
ds
ss
mov
pop
or
inc
jbe
movb
and
incl
xor
test
pop
bound
dec
or
pop
xchg
popa
pop
movsl
dec
or
pop
in
lock
push
cmpxchg
mov
scas
into
out
hlt
fcomip
dec
stc
push
roll
add
movsb
pop
pop
jge
lcall
xor
in
ja
mov
outsb
int3
std
mov
jl
xor
and
aaa
xchg
xorb
ret
pop
into
fbld
mul
mov
jmp
mov
push
ljmp
inc
clc
push
dec
test
adc
adc
ljmp
out
sti
add
mov
bound
cmp
push
stc
fs
mov
and
xor
pusha
into
dec
loope
std
xlat
pop
jl
add
pop
cmp
sbb
cmpsb
mov
ljmp
or
xchg
sub
imul
fmulp
add
mov
cmpsb
pop
push
lea
mov
call
incb
add
int
cmpsb
mov
pop
cmp
pop
jb
mov
xchg
lcall
in
clc
push
fprem
inc
cmp
mov
mov
ljmp
mov
or
insb
sub
sbb
cld
fbld
mov
es
add
orb
clc
dec
mov
andl
cmc
hlt
out
aaa
cld
pushl
decb
cli
dec
fisubs
mov
push
push
cmp
jp
cld
sti
repnz
jne
lock
je
push
out
jne
mov
jg
lods
mov
pop
icebp
pop
cmp
cmp
jle
std
push
push
or
jg
cmp
ja
mov
or
xor
pop
shlb
mov
and
adc
testb
adc
and
add
ja
ljmp
mov
jo
jne
cmp
inc
subb
add
cmp
mov
clc
lcall
scas
push
sub
jnp
push
rorb
jmp
mov
andb
leave
test
shlb
ja
scas
test
inc
mov
cmp
mov
inc
mov
cmp
push
rolb
clc
xchg
add
mov
push
sbbl
sub
add
outsl
inc
ljmp
sbb
and
jmp
sbbl
leave
add
mov
je
pop
add
clc
or
adc
and
add
push
das
clc
cs
sbbb
shlb
inc
mov
pop
es
divb
icebp
fmul
hlt
jmp
gs
es
test
add
sysenter
rorb
sbb
imul
ljmp
xor
lea
pop
dec
add
xchg
push
adc
mov
cld
incl
push
sub
loopne
inc
pop
sub
lcall
mov
jle
mov
dec
mov
dec
dec
mov
inc
popa
jbe
pop
out
test
jae
inc
pusha
mov
decb
xor
inc
fdivl
cli
pushl
sti
add
mov
sbb
add
incl
xlat
mov
mov
loope
fs
dec
jb
cmp
dec
sbb
fs
mov
ljmp
sar
jmp
shl
lods
adc
std
insb
ljmp
shl
fdiv
inc
loop
push
mov
jg
fimuls
stos
pop
adc
scas
inc
cmp
adc
bound
dec
cld
jg
cmp
cmc
or
js
pop
les
inc
loop
cmp
in
add
inc
push
fcmovne
lcall
add
sbb
add
dec
and
shlb
mov
incl
push
sbb
ret
je
pop
int
test
inc
je
out
decl
cmp
and
adc
jo
sbb
sub
insb
xchg
dec
sub
lock
clc
repnz
pop
add
or
adc
inc
adc
test
inc
xor
fisubs
rcl
aam
mov
inc
mov
add
sub
lcall
aam
nop
mov
bound
jmp
pop
les
cmp
pop
push
mov
cmpsb
xchg
scas
pop
cli
xor
lahf
jmp
sbb
dec
pop
mov
mov
sar
mov
fildl
call
jmp
and
fadds
testl
adc
pop
inc
push
pop
test
add
lock
xchg
pusha
jo
aad
fisubrs
sbb
mov
incl
fistl
cmp
into
mov
dec
push
into
add
jb
inc
loop
out
xchg
gs
fadds
mov
in
dec
clc
filds
icebp
xor
cmpsl
sub
ja
xor
data16
dec
rcl
out
sub
psubd
add
push
add
cltd
cld
addr16
jmp
inc
stos
or
mov
leave
leave
push
add
loope
in
enter
insl
repnz
fimull
mov
insb
leave
les
push
test
aas
decl
add
cmp
inc
fidivl
adc
cli
sahf
fwait
or
icebp
pop
fsub
push
push
adc
hlt
scas
jge
rolb
rorl
dec
aad
shll
imul
test
mov
xchg
mov
or
scas
adc
and
es
sub
cli
mov
fcoml
outsb
and
push
jbe
scas
insl
push
inc
ljmp
jecxz
stc
or
sub
fisttpll
aas
test
insb
decl
stos
push
cwtl
stos
push
adc
sbb
addr16
dec
mov
arpl
jmp
xchg
out
pop
outsb
out
mov
mov
jb
lds
rcrb
adc
out
sub
jp
aas
jnp
mov
fldl
mov
push
je
xor
pop
push
dec
bound
jmp
push
jne
mov
sahf
cmp
add
mov
adc
mov
sbb
mov
lahf
aad
leave
push
pop
bound
mov
mov
and
push
aad
divb
adc
das
cli
cmp
push
fimull
lock
pop
push
lods
xor
cmpl
outsl
ja
pop
jg
addr16
mov
fdivs
lret
dec
cmp
adc
std
mov
fldenv
jmp
repz
push
pop
dec
mov
xor
enter
shll
bound
pushl
mov
les
fcom
jns
mov
lahf
xchg
add
cmp
adc
or
mov
icebp
jmp
call
es
pop
mov
adcl
or
scas
xor
outsb
mov
xchg
cmp
mov
push
loope
les
xchg
enter
mov
ljmp
out
adc
sub
aas
outsl
pop
mov
or
cwtl
jmp
bound
cmp
decl
les
mov
adc
ljmp
and
lods
or
cli
icebp
sarb
inc
mov
pop
adc
lret
call
inc
xchg
push
pusha
test
and
hlt
jmp
rorb
adc
incl
jg
dec
xchg
jnp
dec
loop
scas
and
push
out
push
push
sub
rorb
out
cli
pop
xor
cltd
or
arpl
fnsave
xorb
push
aad
adc
std
call
mov
cld
insb
cld
push
jle
xor
jle
repz
add
ret
inc
repnz
push
aad
cmp
add
xchg
mov
cwtl
xor
dec
add
push
jmp
sbb
push
lods
jg,pn
sar
lcall
push
stc
sti
lea
add
mov
sub
adc
popa
loopne
je
pop
shll
incl
dec
and
lock
lods
inc
xchg
and
les
add
fisubrs
lds
rcrb
decl
pop
lret
fstpt
add
adc
push
cld
ljmp
lret
movsb
cmp
push
dec
cs
jg
cmp
cld
cmp
in
mov
incb
test
daa
movsl
dec
ljmp
mov
xchg
or
cmp
decl
sti
sbb
or
enter
pop
movsb
mov
test
pop
mov
int3
xor
fcomip
lcall
xor
popa
popa
ja
sbb
sub
jle
scas
xchg
add
je
push
aaa
cld
mov
inc
mov
incb
mov
outsb
lea
push
pop
sahf
fcomps
movsb
loop
cmpsb
pop
add
add
call
aam
loopne
or
ret
jmp
clc
mov
pop
or
add
jg
pop
add
in
loopne
das
cmp
sahf
pop
adc
pop
inc
sarl
sub
incl
sbb
je
ss
xor
nop
cli
adc
mov
lods
mov
rol
sub
and
in
xor
insl
and
sbb
cld
sub
mov
ret
call
push
outsb
pop
inc
cld
test
scas
pop
push
adc
lahf
imul
das
shrb
jle
jl
call
call
and
mov
jecxz
call
insb
add
inc
ret
scas
push
ljmp
pop
mov
mov
addl
adcb
or
ret
insb
jo
dec
or
mov
add
cli
add
or
pop
loopne
jge
xor
cmp
es
fwait
mov
stos
mov
out
ret
insb
inc
add
sbb
cs
jge
or
pop
push
adc
lret
cmp
push
add
cmp
pop
shlb
push
call
ljmp
mov
dec
add
add
dec
push
pop
cmp
push
xchg
js
shlb
adc
cmp
mov
adc
sbb
out
rol
call
enter
rorl
jae
int
ret
adc
clc
out
dec
sbb
sbb
push
lcall
nop
adc
mov
jbe
lret
es
jb
movb
xchg
movsl
push
lock
cmp
ret
xor
leave
pop
mov
xor
lcall
add
dec
movsb
cmp
fsubrp
mov
cmp
adc
pop
add
jbe
push
leave
sub
dec
inc
ss
adc
add
or
insb
xor
test
out
adc
or
loopne
shrb
fdivl
lods
fiaddl
ds
call
mov
sar
decl
pushf
adc
fildll
clc
adc
cmp
cmp
mov
jp
loope
jp
outsb
decl
xlat
add
orl
add
or
add
push
sar
insb
fbstp
mov
jge
hlt
ljmp
and
inc
jg
xor
outsl
adc
out
push
orb
das
pop
sar
jge
mov
mov
std
das
mov
jae
push
inc
orl
sbb
shlb
das
xchg
std
lcall
fs
adc
jmp
into
add
adc
pop
and
lsl
scas
pushl
dec
fcmove
lahf
jnp
lods
out
dec
fcom
add
ja
add
js
cmp
add
jbe
mov
outsb
and
jmp
or
cld
stos
mov
add
aaa
xorb
inc
add
call
xor
dec
adcb
ljmp
push
push
je
std
push
or
xchg
data16
mov
test
pop
cmpsb
stos
inc
cmpps
mov
push
pop
clc
call
call
adc
add
inc
lock
pushl
subb
enter
push
or
mov
out
clc
push
adc
sbb
pushl
push
dec
xor
push
jl
mov
sbb
decb
and
stos
cmp
fnstsw
and
aad
icebp
mov
xor
loop
jl
push
add
mov
icebp
sub
add
jmp
fcoml
mov
push
xcrypt-cbc
cmpsl
push
jne
sub
sahf
loop
ljmp
sarl
cmp
and
xchg
jo
sub
icebp
cmp
and
mov
sbb
xchg
inc
xchg
enter
fbld
les
sub
sysret
or
and
popf
mov
sub
loopne
adc
jmp
ljmp
mov
insl
clc
loope
push
mov
incl
pop
shll
movsl
or
movsb
add
pop
jb
std
js
xor
ja
adc
or
lcall
mov
xchg
jecxz
add
pushl
sbb
dec
call
std
add
xor
mov
ja
sar
outsb
pop
enter
das
sbb
and
lods
cmp
es
push
sbb
popa
push
pop
sbbl
push
jmp
pushl
xchg
shrl
aas
sbbb
lock
add
mov
mov
add
mov
mov
je
call
stc
ret
jae
xchg
xor
adc
aam
je
add
xor
cmp
mov
mov
movsb
add
or
imul
mov
das
ds
les
dec
xchg
adcb
ljmp
xor
shll
fs
ds
pop
mov
inc
adc
and
push
std
decl
push
inc
jo
out
nop
je
add
fcomp
sbb
pushl
dec
mov
filds
call
or
mov
adc
add
outsb
movsb
addr16
ljmp
adc
jge
add
jl
or
or
loop
pop
jmp
fcomip
cmpb
clc
push
sbb
sbb
mov
ljmp
or
in
xlat
push
cmpsb
mov
push
stos
add
add
and
repnz
push
jle
and
jle
icebp
fisubs
adc
cld
lea
outsb
push
adc
jb
jbe
add
sbb
adc
push
leave
clc
cmp
mov
idivl
jg
jg
sub
sub
cld
jnp
dec
push
push
sbbb
mov
ljmp
movl
sub
je
cs
xor
xor
cmc
jg
sbb
fcomps
mov
push
data16
pushl
pop
in
cmp
jl
pop
pop
loope
fdivrs
lock
das
sub
ret
shrl
jle
adcl
in
ret
in
adc
push
fmulp
les
daa
pop
mov
lcall
jmp
dec
out
xchg
pop
sbb
aaa
cli
outsl
xor
out
add
mov
in
fcomps
inc
mov
pushl
mov
push
or
mov
out
sbb
adc
jg
sbb
pop
sub
or
mov
cltd
or
inc
pop
mov
pushl
inc
scas
and
mov
push
xchg
adcb
das
in
adc
adc
pop
and
xchg
or
jg
pop
ljmp
movsb
pop
rorl
push
sub
divl
push
mov
and
mov
sbb
sub
outsw
test
pushl
hlt
out
pmulhuw
ljmp
incl
ss
decb
cmp
test
and
add
inc
push
repz
clc
js
xchg
ret
or
xorb
mov
xchg
pop
lock
ret
mov
into
jle
and
adc
push
sti
lcall
dec
push
int
pop
jle
cld
lds
mov
mov
outsb
mov
cmpsb
pop
mov
xor
mov
mov
pushl
push
jne
add
inc
pop
ja
mov
cld
and
jmp
sbb
pop
pushl
cmpsb
incl
shl
js
fcoms
sub
pop
push
dec
test
int
push
sub
call
shr
jbe
push
add
xor
pop
mov
pushf
inc
or
hlt
call
cmp
icebp
mov
dec
pushf
call
sub
adc
adc
jmp
ret
inc
subb
mov
add
aaa
add
ss
mov
xor
int
ljmp
cmpsb
outsl
aam
test
pop
inc
pop
or
dec
push
mov
je
test
dec
call
lret
stc
js,pn
int3
pop
cltd
add
xchg
cmp
orl
cli
sub
lock
lcall
loopne
mov
mov
jmp
xor
ret
mov
push
jno
dec
dec
movq
loopne
cmpsb
call
movups
sbbb
jmp
test
dec
jge
jmp
ljmp
rol
pushl
and
add
shrb
mov
incl
jb
cwtl
rorb
jmp
cmp
ret
aam
cmp
push
pop
cmpl
loope
and
clc
xchg
shll
fistpl
decl
xchg
cmp
and
jne
and
call
mov
xor
ret
inc
aaa
inc
pop
mov
push
cmp
inc
ljmp
or
hlt
or
call
adc
cmc
and
dec
or
fildll
mov
pop
push
push
or
jl
or
outsl
mov
mov
add
mov
orb
cmpsb
add
clc
pop
or
adc
and
clc
jmp
lods
out
jne
sbb
fcoml
mov
xor
mov
inc
push
incl
add
lock
clc
mov
inc
outsl
test
inc
ds
decl
test
xor
sub
pop
mov
cmp
je
icebp
cld
loope
jg
mov
pop
add
jl
pushf
mov
ss
pushl
ja
clc
add
in
mov
cmpl
sbb
sarb
lods
aaa
shl
pop
std
mov
pop
out
push
lods
cmpsb
lcall
int
lahf
add
push
inc
cmp
mov
ret
stc
dec
loope
inc
gs
mov
test
call
js
mov
jg
cld
dec
mov
or
in
pop
xorl
dec
cmp
imul
movsb
mov
sbbb
push
sbb
es
or
mov
sbbb
outsb
push
iret
sbb
lock
mov
jmp
mov
mov
cltd
pop
pop
jl
test
fimull
jmp
decl
cld
int
sbb
inc
int
mov
pop
adc
imul
mov
sahf
or
outsb
push
and
or
mov
mov
loope
dec
push
scas
sbb
movsl
nop
outsl
loopne
pop
imul
loop
mov
pop
ud0
scas
cli
add
hlt
loopne
xor
imul
rorl
addl
mov
lods
andl
pushf
iret
mov
sarb
cld
aas
shrb
jne
int3
push
dec
mov
call
cs
mov
pop
data16
fdivs
cmp
and
or
insl
gs
out
jp
hlt
rorb
jno
ljmp
push
push
call
cld
pop
push
cmp
inc
xchg
inc
inc
dec
mov
push
adc
in
push
outsl
pop
das
sar
pop
inc
and
dec
or
daa
scas
outsl
es
jg
outsb
fcompl
ret
not
cld
sub
push
pusha
test
jns
jo
fcomip
push
xchg
or
incl
pop
rcrb
fldt
aad
popf
sar
daa
and
cmovle
nop
std
ret
aas
mov
mov
jmp
out
xor
sti
add
xchg
pop
jb
incl
adc
inc
push
xor
sub
add
adc
pop
lock
in
hlt
dec
push
pop
fidivrl
pop
inc
xlat
mov
pop
dec
xchg
push
ret
xor
das
xchg
push
and
sarl
scas
xchg
xchg
and
fiaddl
nop
addl
das
push
add
les
int
and
clc
call
testb
mov
rol
movb
pop
sub
incl
jmp
fnstsw
xor
addb
xchg
sets
loope
mov
call
es
cmp
mov
xchg
push
ljmp
stos
inc
out
cmp
ret
add
xlat
shrb
lcall
je
or
xor
arpl
inc
xor
add
out
inc
les
sbb
ljmp
mov
inc
test
mov
pop
dec
sbb
ljmp
decl
cmpsl
add
push
mov
loopne
das
pop
xor
sar
in
dec
icebp
mov
sub
mov
push
jns
jbe
sbb
inc
cs
jno
push
lock
fidivs
jl,pt
imul
inc
dec
in
pop
jns
sbb
add
stos
inc
add
rorb
decl
inc
lock
loopne
or
mov
aam
ret
inc
fisubrs
fwait
mov
movsb
jb
stos
pop
icebp
sbb
shrb
dec
jle
add
ret
out
xor
jne
push
push
jg
jg
inc
shll
mov
xchg
stos
add
or
imul
lock
sub
pushl
jne
stos
aam
es
ljmp
lock
ljmp
mov
pop
div
xor
mov
lret
cmp
pop
in
shll
imul
cld
jg
pop
xor
lahf
adc
fistps
inc
cld
lcall
lea
push
xor
cmc
or
cmp
lea
jne
pop
jmp
call
add
add
popf
call
adc
xchg
and
jg
jmp
lcall
mov
shrb
data16
pop
mov
mov
dec
je
fadds
ljmp
decl
inc
dec
adc
mov
xchg
push
xchg
es
clc
incl
call
mulps
jnp
lcall
cmp
mov
adc
push
push
stos
js
movsb
push
add
mov
mov
xor
loopne,pn
bound
insb
shrl
call
das
lods
inc
int
adc
inc
mov
xchg
lret
mov
push
std
rolb
call
xor
stos
mov
adc
or
push
mov
inc
sub
call
arpl
or
pop
mov
je
pop
inc
mov
test
and
push
jg
dec
ds
imul
push
sbb
or
decl
add
or
les
repnz
xlat
inc
shl
xchg
inc
push
pop
mov
jg
mov
lock
pushl
push
shl
or
das
int
or
in
push
sbb
or
incl
imul
push
mov
pop
jne
mov
fbstp
incl
sti
sbb
cwtl
test
cmp
dec
insl
add
mov
mov
pop
or
aaa
repz
and
faddl
in
fs
loop
clc
enter
jmp
addl
inc
mov
andl
call
test
inc
sub
mov
outsb
xor
dec
pushl
push
stos
push
push
adc
pop
push
sub
adcb
pop
pop
adc
repz
or
ljmp
test
xor
shrl
lea
mov
or
outsb
mov
jg
ss
mov
add
sub
aaa
add
push
jmp
or
das
pop
in
dec
mov
inc
add
push
fildll
dec
cmp
insb
push
add
jne
push
ljmp
dec
jp
or
stc
decl
add
aas
fbstp
leave
xchg
outsl
xchg
push
mov
jecxz
clc
leave
pop
clc
jge
adc
and
incl
aas
xchg
aad
daa
sbb
cmp
add
cld
call
shlb
add
lcall
daa
add
or
add
push
int3
cmpl
fdivl
lock
incl
xor
mov
xchg
shl
inc
adc
mov
xchg
ja
xchg
adc
push
or
fsubrl
cmp
xlat
clc
sbb
rcrb
loope
mov
mov
cmp
push
hlt
pop
andl
inc
enter
add
in
mov
shlb
andb
cmp
inc
inc
mov
imul
mov
fs
add
scas
xchg
sbb
lcall
fsincos
lea
sbb
and
xlat
dec
je
push
ret
or
pop
push
into
push
daa
jle
mov
test
push
fsts
mov
insl
sub
inc
scas
pushl
mov
jge
lock
loopne
lock
push
push
decl
add
or
sub
loopne
test
ret
mov
xchg
clc
xor
decl
dec
mov
xlat
adc
insb
popa
loopne
aam
fnsave
mov
fdivrl
adc
mov
lock
add
or
mov
test
mov
mov
aaa
je
push
mov
sti
add
test
rol
cmpsl
xor
fwait
dec
call
fprem
pop
rclb
pusha
or
mov
pushl
movsb
xlat
pop
xor
and
push
inc
lea
adc
sbb
sub
es
push
sub
sbb
mov
loopne
xlat
cli
push
add
ret
push
clc
fsubl
sub
dec
cli
add
or
inc
rcrb
pop
inc
mov
or
popf
xlat
data16
push
and
mov
inc
ss
and
clc
inc
inc
in
insb
push
dec
add
jg
cld
mov
mov
cmpl
dec
testb
mov
adc
nop
subb
subb
add
incl
push
sub
jmp
push
into
cmp
jmp
popl
scas
pop
pusha
loop
mov
add
dec
jnp
pushl
push
adc
add
mov
jmp
push
loop
icebp
dec
jne
pop
scas
adc
or
test
hlt
repnz
out
push
mov
mov
pop
lea
mov
jg
or
adcl
fdivrl
xor
sub
or
mov
inc
insl
mov
mov
ffree
gs
cld
ljmp
xor
sbb
pop
xor
shl
cmp
push
das
sarb
and
inc
das
xor
sti
loopne
inc
xor
les
and
imul
adc
stos
nop
cmc
negl
push
ljmp
pop
pop
rcrb
dec
inc
dec
iret
jbe
adc
adc
das
cli
lcall
cmp
movzwl
icebp
mov
movsb
inc
les
mov
mov
aam
cs
and
je
fstpl
add
or
sbb
stos
test
decl
and
roll
add
add
adc
pushl
std
incl
push
push
jbe
lea
fldt
cmp
jge
mov
cmp
inc
mov
cld
ljmp
sti
or
aam
add
outsl
insb
mov
add
cmp
incl
push
movb
add
imul
push
adcb
cli
cmp
jne
repz
fprem
jg
mov
add
jb
xor
clc
sbb
dec
adc
xchg
lea
adc
pushl
es
test
cld
lcall
sahf
fldenv
or
adc
pop
sbb
sub
push
cmp
cmp
jg
inc
jle
ret
inc
mov
jo
sbb
nop
add
jmp
cmp
cmpsb
icebp
loopne
mov
repz
mov
push
xchg
lret
ret
lock
adc
mov
mov
mov
sbb
insb
push
mov
call
out
sub
fistps
or
xchg
test
mov
lds
hlt
pop
incl
movsb
pop
sub
adc
xor
cmpsb
mov
aam
cltd
js
add
add
dec
lea
lock
add
fnsave
sub
inc
hlt
xor
and
mov
ret
stc
mov
stc
push
repz
or
filds
jmp
cmp
sub
mov
scas
xor
inc
and
jl
add
pushl
cld
fistl
pop
repnz
cld
push
and
adc
inc
in
std
lahf
in
ja
rcl
mov
rorb
pop
cli
jg
pop
pop
add
lods
and
loope
or
mov
call
lcall
push
sarb
mov
jo
xor
add
add
pop
ljmp
test
mov
mov
ds
incl
in
ljmp
sti
xor
sti
sbb
lds
jecxz
sbb
idivl
adcl
push
push
loopne
push
mov
pushl
or
testb
push
movq
xor
push
mov
jmp
jp
fidivs
rclb
bound
and
loop
iret
or
loopne
mov
ljmp
inc
adc
inc
and
jmp
push
aam
xchg
fcompl
sbb
inc
xor
add
push
push
call
jbe
add
mov
out
sbb
pusha
dec
xor
rolb
arpl
test
int3
add
mov
jbe,pt
xchg
adc
mov
adcl
mov
in
filds
mov
dec
or
pop
mov
cmp
fidivrs
rol
stos
xor
mov
xchg
je
imul
lret
scas
clc
rol
dec
ljmp
cmc
rorb
dec
mov
fcoml
sub
lcall
adc
jl
pop
mov
jg
div
inc
cld
lcall
add
pusha
add
sbb
daa
call
mov
pop
adc
sub
xchg
in
xor
or
mov
int
sub
pop
xchg
cld
push
push
push
xor
scas
cli
cmp
fidivs
ljmp
call
mov
hlt
lock
sbb
shl
xchg
mov
jl
ss
fisttps
add
sub
incl
dec
jg
pushl
or
and
mov
and
jge
rcll
pop
mov
or
cli
push
mov
shll
pushl
fdiv
inc
pop
clc
push
adc
mov
adc
jbe
outsl
push
sbb
clc
jg
aad
pop
je
lret
jbe
jl
aad
add
jne
rcrl
pushl
xor
into
data16
push
push
das
dec
inc
imul
xor
repz
mov
ljmp
inc
xor
push
stos
pop
cmpsb
push
cmc
sub
add
inc
pop
dec
int3
in
movsb
pop
pop
push
popf
or
dec
fsubs
sbb
mov
paddq
insb
dec
sub
dec
mov
std
sbb
cmc
es
rolb
cmp
nop
movsl
aam
fs
imul
push
js
jg
or
insl
mov
inc
hlt
push
mov
pop
inc
and
jne
dec
incb
add
mov
push
and
lcall
clc
xchg
adc
cmp
push
int3
add
and
jb
rcl
pop
mov
jo
insb
xchg
incl
mov
leave
mov
stc
add
add
fnstenv
xlat
cmp
in
rorl
and
xor
pop
popa
cmp
rclb
push
mov
jle
push
xchg
cli
call
cmp
push
mov
jge
or
jmp
divb
xchg
jns
in
add
pop
adc
mov
pushf
data16
adc
daa
adcl
mov
mov
int3
xor
cmp
mov
lcall
stc
popa
sbbl
mov
mov
inc
bound
jno
stos
mov
mov
push
imul
dec
aas
ja
jo
xchg
test
ret
in
leave
mov
xlat
mov
mov
add
je
pop
pusha
cmp
in
les
dec
push
cmp
add
imul
mov
sahf
sti
test
jmp
jg
mov
fcoml
mov
mov
loopne
push
sub
fwait
inc
fwait
push
push
inc
lea
jb
pushf
lea
mov
sbb
icebp
std
decl
push
pop
xchg
in
bswap
adc
mov
fists
lret
xchg
popl
inc
jo
mov
xor
loopne
xor
lock
add
xchg
mov
push
nop
adc
push
adcl
movsb
add
cld
lret
repnz
stc
push
pop
addr16
loope
add
adc
mov
mov
stos
dec
cmc
gs
les
addl
call
shrl
call
int
jbe
pushl
pop
sbb
sbb
add
outsl
clc
sbb
loopne
in
jmp
xor
dec
add
xchg
push
daa
mov
add
std
sub
mov
pop
out
pop
or
in
and
push
in
data16
add
jp
xor
andb
ljmp
pop
clc
rolb
inc
push
pop
loope
ljmp
call
es
jecxz
test
aas
incl
push
xchg
jmp
mov
cmp
lcall
addr16
lods
jmp
cmp
jb
outsl
cmp
and
push
idiv
fbld
or
xchg
fs
lea
add
xchg
pop
lock
jns
test
in
fisubrs
mov
outsb
jo
mov
jge
xchg
jb
cmp
lcall
adc
push
pop
jl,pt
shrb
xlat
test
out
popa
or
mov
push
inc
push
mov
enter
movsb
dec
pop
mov
fcoms
inc
xorb
clc
out
cmpsb
and
in
aad
push
cmp
outsb
andl
push
xor
or
cld
js
cs
lods
cmp
decl
lret
push
cld
push
cs
mov
inc
sarb
out
popa
fbld
imul
jne
sub
das
in
or
push
push
insb
lcall
sub
sbb
leave
fidivs
les
cld
or
adc
clc
xor
pop
lods
and
push
enter
inc
inc
insb
jno
cli
cmp
push
jne
repz
pusha
sub
clc
adc
push
and
aam
mov
adc
adc
sarb
inc
dec
push
push
aaa
pop
jl
hlt
call
xchg
jmp
inc
int3
sub
lret
xchg
xchg
lea
jne
inc
dec
pop
fistpll
add
insb
xchg
pop
js
mov
scas
and
test
jnp
fdivp
mov
push
scas
or
in
sub
jge
scas
decb
push
popa
sbb
stc
decl
adc
xor
inc
lea
mov
push
inc
shll
ljmp
mov
add
test
add
inc
or
jle
jb
rcll
hlt
call
and
movb
out
or
lock
repnz
sbb
lahf
xor
dec
add
xor
aas
jl
mov
mov
test
mov
call
pop
shl
xchg
outsb
fstps
cmp
jbe
div
pop
test
xor
xchg
jle
xor
jl
decl
leave
pop
or
repnz
popf
inc
sbb
decl
std
cmp
in
test
xchg
add
aam
sub
or
and
and
je
xchg
jb
loopne
decl
lock
add
call
es
sbb
lret
scas
clc
sub
xchg
mov
push
mov
mov
sbb
push
or
jge
inc
aas
add
cli
jb
push
cld
push
loopne
adc
outsb
mov
fistpl
add
enter
leave
hlt
cmp
lock
cwtl
or
aaa
cld
and
cmp
das
ljmp
mov
in
ret
stc
mul
pop
ja
adc
sahf
nop
fdivr
jle
arpl
aaa
fcomip
fstpt
shrl
fidivs
dec
fsubr
push
rolb
add
hlt
push
xor
je
std
inc
cli
dec
push
cltd
pop
cmp
add
icebp
dec
mov
jg
sar
mov
jg
inc
pushl
test
loope
icebp
cmp
and
inc
call
je
jp
dec
mov
jne
pop
insb
cld
movsl
mov
dec
cmp
or
movl
or
mov
adc
loopne
lcall
pop
dec
push
dec
dec
clc
add
and
add
js
xlat
xchg
add
and
movb
sbb
js
call
roll
xor
mov
mov
xchg
xchg
das
xchg
mov
fnstenv
pop
sbb
lcall
adc
cmpl
pop
int3
shrb
inc
adc
sbb
cmp
pop
jg
mov
mov
stos
icebp
mov
cmp
lret
imul
test
or
in
lock
js
mov
ljmp
int3
add
adc
pop
cmpsb
ljmp
adc
out
pushf
in
or
jnp
and
mov
inc
clc
call
or
mov
push
jmp
iret
jae
mov
out
call
in
push
sahf
popf
push
mov
mov
inc
or
gs
hlt
jmp
mov
push
incl
pop
inc
pop
mov
jns
cltd
xchg
pop
and
inc
fstl
ffreep
out
adc
adc
or
pop
pushf
outsl
sub
xor
mov
ljmp
push
insb
addl
out
and
xlat
adc
mov
xchg
mov
fldt
decl
repnz
cs
shl
mov
add
inc
xchg
shl
lock
add
decl
push
adc
loop
aaa
mulb
mov
das
push
add
xchg
adc
in
aaa
cld
filds
pop
iret
lgs
outsb
jnp
insl
mov
out
and
pop
out
stos
add
nop
ljmp
mov
mov
mov
aaa
add
cmpsb
inc
mov
mov
repnz
jmp
lock
push
push
out
clc
pushl
stos
xchg
test
mov
aaa
fcmovbe
add
jo
add
mov
jp
or
or
sbb
sar
cmp
mov
add
js
or
mov
aaa
sbb
adc
or
pop
into
or
pushf
cmpsb
add
orb
sub
jecxz
int3
dec
std
aaa
adc
jbe
adc
xor
push
lcall
gs
lds
and
flds
mov
verr
push
dec
vshufps
les
clc
push
and
loopne
call
xchg
fisttpl
ret
push
xor
out
mov
incb
cmpl
call
in
popa
test
test
sub
adcl
adc
in
fcoms
sar
incl
int3
das
add
xchg
and
call
pop
shlb
daa
sub
sbb
cli
je
hlt
fcomip
lea
add
std
or
inc
add
mov
cld
inc
mov
xchg
jmp
and
add
sarl
je
or
and
sbb
out
xor
inc
fdivrs
mov
and
std
adc
or
mov
mov
sbb
jmp
sbb
sub
int3
push
sbb
ret
xchg
push
sub
je
or
and
stos
sbb
jo
mov
xor
lahf
cmp
test
imul
aaa
std
xchg
xchg
dec
lret
int3
xchg
sbb
js
mov
fbstp
pop
mov
lock
pushl
or
cld
std
call
ror
cli
cld
dec
pop
jo
rcrl
andl
add
scas
dec
dec
dec
push
and
xlat
pop
and
ljmp
add
add
lea
lcall
lods
jg
mov
pushf
mov
fstpt
decl
pop
dec
push
fnstsw
or
push
fdivl
ds
into
jl
packssdw
jg
into
lds
call
outsl
mov
mov
ja
out
mov
rorl
sub
je
incl
movl
and
sub
cld
pushf
lea
mov
stc
popa
xor
ret
lcall
adc
cmp
or
push
icebp
out
adc
adc
shll
rcrb
lock
push
mov
sub
dec
jmp
clc
clc
jmp
add
outsb
or
ljmp
call
stos
leave
mov
orb
aad
lock
jae
pop
faddl
inc
mov
jb
xchg
call
std
ljmp
adc
aam
mov
dec
shlb
ds
ret
mov
pop
call
push
sbb
cmp
push
pop
loopne
mov
or
add
pop
shrb
jge
icebp
or
add
sarl
pop
push
sub
imul
outsl
push
add
or
das
ret
push
and
js
adc
mov
pop
or
sar
or
or
dec
sub
mov
je
in
call
dec
cli
jle
jmp
stos
mov
stos
sub
sbb
mov
or
cli
inc
lret
add
push
lcall
test
and
rcll
and
push
fistpl
fildl
mov
insl
loopne
in
sbb
or
or
add
mov
push
lock
call
movsl
mov
neg
jae
mov
incl
xor
hlt
loop
test
adc
fwait
cs
mov
in
or
cmp
xchg
add
mov
js
xor
cmp
or
jp
adc
mov
and
mov
mov
cmp
or
mov
call
xchg
std
nop
imul
pop
aaa
dec
shlb
adc
insb
pop
lods
mov
or
das
cmpl
add
test
lods
push
mov
ds
loop
pop
adc
dec
rcrb
sar
clc
pushl
or
outsb
clc
sbb
and
aad
xchg
jg
sti
or
mov
int3
testl
cltd
jmp
test
rclb
or
jp
decl
dec
popa
sub
fsubrp
xchg
push
les
pop
movsb
xor
clc
or
mov
aas
call
icebp
in
push
aam
cmp
cli
pcmpeqb
xlat
push
cld
jmp
call
test
jne
dec
mov
inc
popa
push
test
cmp
mov
mov
mov
push
arpl
emms
pop
add
pop
xchg
xchg
mov
add
xchg
loope
sar
jns
add
pusha
rol
pushl
adcb
or
cmpsb
xor
ja
sar
mov
add
cld
pop
xchg
ljmp
jb
ret
outsb
lods
lds
insb
and
inc
jae
js
mov
fisubrl
cmp
jg
cmc
push
adc
add
inc
sub
pop
or
mov
mov
jmp
shr
add
jmp
cli
sarb
int3
mov
cmpb
ret
cld
mov
sbbl
sbb
insb
xchg
sub
push
push
mov
sub
clc
push
mov
and
mov
pushl
pop
cmc
push
cmp
pop
cmp
add
fwait
dec
mov
mov
jbe
aas
movl
mov
add
clc
lret
or
in
sub
mov
ljmp
inc
stos
dec
xchg
push
std
jo
pushl
aam
shll
inc
ds
in
test
jg
cmpsb
cmp
adc
and
add
and
bound
sub
cmpb
call
or
jne
mov
or
outsl
xor
cld
sahf
mov
pop
mov
mov
jo
add
sub
add
decl
rolb
movsl
jl
jne
mov
int3
and
fsub
test
cli
pop
mov
pusha
lcall
test
and
dec
pop
inc
xor
add
xor
rol
xor
push
jle
je
inc
cld
pop
mov
leave
fdivr
scas
jg
ret
inc
hlt
add
mov
mov
std
xchg
jno
inc
pop
add
insl
lods
pop
push
outsb
pusha
cmp
sub
sub
decl
xor
jb
subl
add
adc
sar
mov
ljmp
or
push
lea
dec
jb
jb
cmpsb
loopne
or
cli
ljmp
push
inc
rcr
dec
es
sbb
sub
das
shl
mov
outsl
ds
shrb
sub
lods
cmp
clc
jg
sub
push
push
xchg
movsb
push
jl
sti
add
lods
add
jp
inc
cmp
pop
inc
daa
repnz
aaa
cld
push
inc
sahf
call
test
in
xchg
push
rcr
rcrb
pusha
mov
ljmp
adc
adc
mov
adc
inc
rdseed
aad
push
sub
lods
mov
push
add
outsl
inc
outsl
jmp
xchg
jmp
inc
scas
inc
push
pop
rclb
cmp
or
out
jecxz
clc
inc
cmp
push
sti
dec
loop
das
lret
pop
fimuls
loope
dec
jmp
add
sbb
add
sub
push
call
adc
or
ss
add
lds
push
sar
xchg
push
add
add
hlt
rol
lcall
mov
jecxz
dec
sti
mov
mov
sbb
int3
call
out
hlt
ret
xchg
insl
cmc
call
ret
and
jp
loop
cmc
xchg
stos
cmp
in
dec
cmp
outsb
push
int
andl
jmp
cmp
dec
aaa
adc
shl
lret
dec
outsb
jmp
lods
sahf
xchg
mov
sar
mov
jge
or
cmp
push
xor
jecxz
das
lret
cmp
jecxz
out
lea
sbb
mov
fisttps
push
les
es
push
dec
push
and
loop
jmp
push
pushl
or
add
push
ss
mov
sbb
xor
test
or
add
pop
int
push
call
pop
mov
je
adcb
jo
sbb
lods
nop
add
inc
jno
jg
mov
pop
icebp
enter
addr16
in
mov
paddb
out
ja
mov
popf
dec
imul
std
out
rol
adc
mov
dec
mov
cmp
cld
add
mov
mov
lods
cmpsl
pop
xadd
movsl
mov
add
sbb
scas
stc
incl
jge
xchg
jle
das
and
sbb
mov
je
add
stos
es
xchg
pushl
mov
sub
incl
out
dec
push
sarl
push
fsubrl
pusha
sub
shlb
in
lret
ljmp
or
add
je
sub
pop
and
lcall
repz
push
dec
in
je
adc
and
rolb
out
loopne
imul
jbe
jae
ret
dec
jle
test
cmp
sub
cmpsl
mov
add
call
jg
mov
push
mov
or
inc
popa
lret
loop
sbb
mov
or
lcall
rorl
mov
pop
arpl
movsl
jbe
dec
add
test
jmp
shrb
jmp
mov
popa
je
in
outsb
or
adc
add
sbb
pop
sub
adc
xlat
outsl
cli
mov
cmp
out
clc
mov
or
mov
fimuls
inc
mov
mov
out
mov
inc
mov
sub
ja
das
addb
je
inc
shrb
decl
jge
insl
outsb
mov
mov
adc
call
insb
shll
and
xchg
and
loopne
call
push
lea
loop
jg
mov
dec
pop
inc
dec
inc
xor
add
pop
push
dec
add
push
imul
jo
call
push
orl
std
lock
sub
decl
push
push
mov
cmp
hlt
and
jg
mov
jle
je
out
push
mov
lcall
mov
sub
rorb
adc
push
in
sub
stos
inc
xabort
loope
ja
inc
sub
insl
in
pushf
lea
jg
daa
cmp
pop
movsb
fdivrl
mov
push
xchg
add
jne
js
inc
add
mov
inc
jmp
sbb
cmovnp
add
das
add
push
jge
out
mov
adc
ljmp
dec
lcall
imul
mov
adc
dec
sub
push
push
xchg
or
jmp
prefetch
or
jg
inc
cmpsl
pop
imul
or
ljmp
test
adc
jg
aas
jbe
jmp
dec
cmp
ss
out
jmp
add
cmp
push
scas
inc
push
mov
ljmp
add
jbe
push
aas
mov
nop
cmp
cmp
sbb
clc
gs
enter
decl
dec
pop
std
int
test
mov
add
lcall
jecxz
push
sub
mov
adc
fsubrs
stos
or
mov
pushl
mov
fidivrs
rclb
outsb
sbb
stos
popa
jecxz
pop
fadds
repnz
jne
mov
or
cmpsb
sbb
xlat
dec
aam
add
out
push
pop
stos
mov
cmpsb
push
loop
dec
xchg
dec
nop
or
mov
jg
adc
icebp
iret
testb
add
pop
adc
sub
add
push
imul
ja
add
mov
clc
jl
ja
clc
test
data16
pop
popa
mov
jg
mov
movsb
dec
insb
mov
mov
add
mov
or
xchg
lcall
and
jle
push
dec
rcr
jg
inc
cmp
mov
add
push
or
imul
insb
in
mov
inc
ret
decl
fmuls
lret
icebp
lret
das
jp
mov
cmp
mov
jbe
scas
cmpsb
mov
ret
enter
ljmp
jo
jbe
adc
repnz
xor
sbb
mov
adc
jbe
loop
mov
mov
call
pop
test
cmpb
lcall
cli
jg
jmp
std
hlt
test
sbb
mov
push
or
sub
or
or
pop
pushf
add
lcall
mov
jge
cmp
cld
pushl
or
je
xor
cli
test
shr
fmuls
je
lret
ss
jg
add
sub
packuswb
or
clts
lods
out
cli
call
mov
dec
jae
ss
push
xchg
mov
jmp
stc
xor
push
push
sahf
dec
lea
push
cmpsb
pusha
popf
frstor
add
inc
out
sbb
fwait
inc
cmp
js
jmp
call
inc
sub
pandn
mov
xor
call
jo
or
js
lcall
fdivrs
mov
dec
and
imull
or
call
pop
cmp
lds
out
sti
dec
push
nop
sub
mov
hlt
and
std
fiaddl
xor
or
jae
in
lods
pusha
fidivl
inc
pop
mov
dec
xchg
insb
pop
push
ja
sbb
xchg
movb
fwait
pop
enter
mov
hlt
mov
scas
add
mov
jg
jns
adc
push
sbbl
mov
xchg
pop
insb
loop
pop
ret
cli
test
mov
or
adc
jg
add
pop
pop
or
pop
add
push
xor
das
cli
push
or
add
pop
sub
push
add
dec
inc
inc
iret
lods
inc
add
in
fcomip
out
enter
fildll
test
and
test
fdivrs
pop
out
imul
add
decl
adc
jb
mov
filds
jbe
mov
sti
sar
fcomip
or
shll
mov
sub
inc
incl
test
sbb
mov
incb
jns
bnd
push
es
ss
rcrb
xchg
shll
pop
mov
je
mov
ljmp
ret
and
inc
lcall
lods
add
pushl
adc
push
imul
mov
je
icebp
lcall
jmp
push
cli
adc
xchg
mov
inc
aam
cs
mov
mov
fs
sub
incl
rorb
loop
js
pop
call
pop
ljmp
dec
add
mov
or
bound
andl
push
rorb
test
xor
jp
cmp
test
add
add
push
adc
in
xchg
decl
mov
cmp
xchg
xor
idiv
or
adc
xchg
sbb
ret
xchg
mov
gs
fisubrl
imulb
pushl
mov
int
xor
xchg
int
in
or
test
je
adc
push
inc
jno
jns
or
inc
pushl
push
adc
rcrl
out
cmc
push
sbb
mov
mov
jg
sub
call
xchg
mov
adc
cmp
mulps
imul
cmp
mov
add
dec
call
or
lea
lock
js
add
test
mov
aam
add
jmp
shll
sbb
lock
cmpsb
sub
movsb
dec
loop
mov
add
fbld
call
in
pop
ffreep
cld
cmpsb
pop
or
xor
add
push
add
or
std
jmp
loopne
jns
bound
and
sbb
test
ljmp
jl
cmp
decl
xchg
and
dec
in
aas
cmpsl
popf
loopne
in
add
das
xor
add
adc
aam
sarb
test
gs
incl
out
fadd
out
dec
dec
fucomp
dec
pop
pop
loopne
test
add
push
push
mov
movsb
xor
add
ficoml
add
aaa
gs
hlt
cld
pushf
aad
mov
sub
aas
sub
dec
stos
ret
mov
jle
test
das
pop
mov
push
pushl
loope
or
add
pop
mov
jbe
fadd
push
lahf
pushf
pop
cmp
or
call
push
lock
fbld
call
xor
outsl
out
fisubrl
adcb
test
filds
sbb
mov
xchg
out
mov
adc
mov
inc
push
movb
addl
dec
loope
and
mov
iret
mov
push
ss
test
inc
xchg
xchg
pushl
inc
rcr
mov
decl
stc
outsb
ds
jmp
mov
inc
xor
sbb
imul
stc
mov
test
add
sar
call
scas
and
jp
or
shrb
jecxz
mov
daa
sti
int
sub
mov
rclb
and
outsb
inc
out
xor
mov
lock
scas
mov
mov
mov
out
popa
cli
inc
dec
push
pop
cmc
mov
dec
cmp
into
aaa
mov
or
hlt
adc
push
add
insb
cmp
xorl
dec
jecxz
jo
inc
daa
fistpll
sti
ds
mov
push
hlt
out
add
loope
std
call
jg
shr
je
out
rcll
scas
testb
sbb
push
mov
rorb
push
lcall
pushl
jmp
scas
int3
adc
xchg
mov
mov
or
adc
clc
pop
insb
mov
mov
stos
cs
lcall
ds
pushf
es
lret
mov
pop
adc
fwait
ja
mov
xor
sahf
cs
outsl
jp
insl
pop
stos
movsb
int3
inc
aam
jb
repnz
sti
cmpsb
add
cmp
mov
push
scas
shl
inc
adc
jg
xchg
in
mov
xchg
inc
adc
pushf
nop
mov
mov
mov
add
or
mov
jmp
adc
mov
or
or
sbb
popf
ja
roll
in
sub
clc
mov
les
xchg
xor
std
mov
psrlq
stc
or
addb
out
gs
decl
xor
cmp
ds
inc
adc
fisttps
xchg
lock
popf
pop
pop
adc
sub
popa
fbld
daa
xor
fdivp
ret
push
push
mov
dec
fadds
mov
in
insb
mov
loop
add
mov
sub
mov
adc
pushl
add
and
mov
push
lcall
stos
mov
inc
sub
mov
add
add
mov
pop
jl
inc
inc
shrl
sarb
sar
mov
sub
adc
outsl
insb
into
mov
out
out
pop
rcl
mov
into
hlt
cwtl
push
testl
add
push
pusha
andl
add
and
hlt
mov
xchg
mov
cwtl
jb
mov
jmp
divl
add
cmp
repnz
dec
inc
pusha
sub
pop
in
rolb
pop
mov
and
insb
pop
nop
std
les
lock
imulb
xchg
imul
lcall
jl
push
cmp
rolb
cmp
jg,pn
ja
shlb
sbb
pop
sub
jmp
call
iret
aaa
mov
shrb
sub
fildl
roll
or
pop
xchg
int3
cld
stos
icebp
lret
lcall
mov
pop
adc
or
imul
lret
incl
push
subb
les
loopne
push
loope
jb
and
cltd
clc
inc
incl
je
mov
dec
daa
fistpl
and
push
stos
movsb
inc
or
aam
ljmp
fwait
pop
hlt
add
lods
dec
les
inc
inc
imul
fs
jl
and
push
add
push
push
ljmp
je
pop
pop
insb
jp
add
fucomip
pop
xor
loop
and
push
mov
movsl
sub
and
push
jmp
jmp
push
push
push
fistl
dec
cmc
mov
dec
xor
out
dec
mov
pop
push
movsl
and
fidivs
adc
in
or
arpl
ljmp
ret
int3
ficoms
shlb
icebp
add
fstpt
xor
mov
scas
or
inc
out
clc
decl
outsb
dec
add
sbb
xor
lea
testw
xchg
add
call
jb
imul
icebp
sbb
lret
icebp
mov
sbb
out
inc
jno
add
cmpsb
sarb
dec
out
cli
and
addr16
fmuls
xchg
push
incl
repnz
xor
call
dec
xchg
mov
cltd
idiv
and
popa
cld
std
fwait
adc
xchg
push
and
outsb
paddsb
les
pop
sar
lods
adc
jle
push
sub
test
mov
push
ds
add
jne
stc
out
repnz
loope
push
xchg
pushl
aam
movsb
mov
cmp
out
jg
mov
clc
push
gs
ret
ljmp
test
or
dec
loope
push
mov
adc
xor
add
mov
cmp
int3
icebp
push
loopne
add
rorb
cli
mov
ret
push
mov
mov
ret
jo
pop
call
roll
adc
call
loopne
xor
jg
xchg
dec
mov
pop
int3
into
das
push
jnp
inc
outsl
push
cmp
mov
jne
push
inc
push
sub
fstpt
out
jo
inc
mov
mov
push
xor
pop
push
xor
inc
cwtl
inc
dec
sbb
dec
cld
jg
inc
dec
or
add
inc
outsl
inc
das
cmp
jg
push
pop
pop
movsb
repnz
stc
ret
ss
pop
mov
test
xor
add
or
push
inc
xor
and
filds
xor
mov
jb
cmpsl
cltd
jmp
or
fs
mov
cmp
adc
add
cmp
decl
pop
ss
ss
lret
shll
dec
fstpl
adc
fsub
int3
add
cmp
pushl
insb
sub
mov
sub
add
mov
sub
cmp
cld
inc
sub
dec
insb
in
and
sub
cltd
inc
mov
mov
je
cmp
push
push
sbb
call
cld
icebp
out
push
mov
mov
decl
fcmovnu
bound
mov
pop
loopne
ds
loop
jb
addr16
out
push
rol
fildl
in
jmp
rcl
mov
jg
jl
add
or
lcall
pop
mov
test
pop
mov
dec
leave
insb
repnz
pop
incb
mov
inc
push
call
add
mov
and
imul
pop
rorb
aaa
push
inc
add
add
call
les
pop
jne
incb
cmp
pushf
cmpsl
dec
clc
dec
rol
jmp
pushl
and
in
mov
in
into
mov
jne
jmp
ljmp
inc
or
push
push
lds
mov
inc
cmp
cli
test
adc
add
fwait
notl
dec
adc
cmc
jb
ret
mov
gs
mov
mov
ljmp
int3
inc
jge
mov
mov
dec
ret
andnps
or
lcall
xor
test
dec
sar
js
divb
mov
incl
jge
outsb
or
mov
sub
inc
push
add
icebp
pop
jl
hlt
cld
push
sub
addb
outsb
je
dec
pop
orb
xchg
xor
sbb
inc
xor
pop
pause
sar
popf
stos
mov
mov
cli
fildll
mov
testb
and
sbb
test
ljmp
mov
fs
fadds
inc
xor
pop
or
rep
jl
mulb
std
decl
test
addl
int3
test
outsb
push
pop
je
scas
xchg
ja
cmc
mov
and
or
aad
fdivrp
decl
rclb
cmp
mov
or
inc
xor
inc
into
inc
test
clc
push
popa
push
loopne
mov
mov
mov
xlat
adc
leave
out
push
fucomp
add
mov
ret
imul
clc
and
and
repnz
out
or
add
in
xchg
or
mov
jg
adc
sbb
inc
inc
fcoms
push
clc
pop
push
or
subb
adc
hlt
rorb
jle
fcomip
and
nop
push
testb
outsl
test
sbb
fs
rclb
jo
mov
add
or
cld
fs
dec
ficoml
adc
pop
shr
es
or
ljmp
xchg
fisttpl
ja
cli
push
mov
fstpl
sbb
cmpsb
ss
das
xor
insl
sbb
dec
pop
push
sub
ljmp
inc
mov
decb
mov
outsl
cwtl
mov
out
std
mov
pop
std
ljmp
xor
fs
xor
std
or
mov
ds
xor
fs
push
add
and
fildl
xchg
aam
incb
lds
mov
dec
lcall
cli
push
jecxz
pusha
mov
addl
adc
sub
daa
out
pop
popa
add
rorb
xchg
enter
jg
lret
adc
dec
jl
adc
and
inc
pop
out
cmp
jne
arpl
orb
lcall
add
cmp
pop
faddp
cmp
insb
push
ljmp
les
xchg
cmpl
sub
scas
pop
mov
sub
or
xor
mov
ja
push
sub
mov
cld
dec
mov
xchg
xlat
in
push
adc
sbb
addl
sbb
mov
ss
decl
jp
push
fnstsw
or
mov
loope
inc
add
sub
clc
mov
js
cmpsb
and
fadds
pop
loopne
imulb
nop
jmp
add
dec
push
pushl
add
dec
nop
decl
dec
jle
rolb
adcl
notl
cld
inc
push
cs
xchg
inc
add
test
decl
lsl
iret
cmc
in
sar
jbe
mov
inc
and
push
std
mov
icebp
incl
in
and
push
mov
mov
pop
pusha
lds
jno
les
hlt
outsl
push
movsb
les
and
sub
cmp
dec
sti
xor
jecxz
test
xchg
fwait
outsl
pop
fs
ljmp
std
les
push
je
loopne
cmp
adc
push
cmp
push
add
xlat
test
test
decl
mov
mov
or
xor
cmp
sarl
insl
inc
call
cmp
insb
push
out
imul
add
in
ljmp
incl
ljmp
jmp
cwtl
aaa
mov
dec
sub
dec
stos
loopne
push
rorb
jmp
sbb
cltd
std
xlat
adc
cmc
sub
sub
lcall
cmp
fs
rorb
inc
cwtd
add
push
cld
loope
lahf
jge
lret
inc
pop
adc
cmp
fbstp
sti
pusha
int
cmp
ja
ret
push
test
mov
cmc
mov
iret
inc
lock
jmp
scas
add
test
jge
aaa
xor
in
adc
decl
sbb
inc
jle
adc
pushl
push
jg
jb
das
lods
mov
adc
add
pop
xor
sub
insl
mov
aad
cmp
dec
xchg
mov
and
push
incl
test
pop
jecxz
mov
mov
sub
and
xchg
pop
and
push
mov
add
out
mov
imul
hlt
fs
pushl
mov
or
outsb
push
inc
es
pop
push
add
mov
cmc
cli
lcall
push
or
mov
mov
dec
inc
outsb
test
hlt
xor
mov
popf
xchg
and
ret
sbb
fistps
call
daa
in
cli
loope
mov
repnz
push
adc
pop
leave
mov
dec
or
mov
repnz
sub
mov
jbe
lcall
aad
push
incb
icebp
cld
mov
and
mov
mov
push
lock
inc
adc
jmp
jl
mov
das
inc
movb
sub
and
adc
in
sub
push
incl
pop
fcmovnb
add
fbstp
aaa
cld
inc
test
mov
pop
clc
inc
les
push
and
mov
mov
pop
mov
sub
adc
mov
push
sarb
add
neg
adc
ljmp
inc
shll
jmp
mov
in
add
loope
bound
adc
pushl
in
mov
jmp
mov
addb
add
lds
lods
aad
fimull
cwtl
mov
mov
cmc
inc
jb
push
pop
decl
sub
sub
in
dec
addl
jb
shl
lods
imul
jo
imul
lcall
jp
pusha
orb
xchg
nop
inc
mov
pop
shr
cmpsb
call
rorl
add
js
inc
cmp
xchg
or
scas
sub
add
shlb
or
adc
ret
mov
rcr
mov
jl
mov
test
mov
call
loopne
outsl
call
in
popa
test
ret
adc
sbb
sahf
loope
scas
adc
mov
mov
add
icebp
mov
sti
imul
shrl
mov
push
adc
jp
add
int3
add
push
setle
jmp
push
push
mov
incl
loope
sub
xor
pop
inc
sub
ljmp
popa
jo
lcall
mov
push
pop
cld
push
lcall
add
pop
inc
decl
push
sub
loop
lods
ret
mov
inc
int3
adc
jmp
or
and
fwait
mov
mov
or
xchg
loop
decl
push
je
dec
inc
loopne
pop
stos
xor
test
add
mov
push
push
cmp
inc
decl
inc
add
sub
decl
pop
mov
repz
mov
push
stos
test
insl
call
add
daa
pop
lea
mov
andb
icebp
fdivr
outsl
hlt
ljmp
call
test
hlt
cmpsl
inc
xchg
xchg
add
mov
xchg
rsqrtps
push
sar
add
imul
dec
adc
push
adc
pop
test
aaa
pop
out
and
mov
sbbl
sbb
stos
popa
rorb
jle
addl
inc
adc
popa
incb
rcr
test
mov
push
or
and
je
icebp
test
ficoms
inc
mov
xor
pop
mov
jns
pop
and
lcall
scas
test
cmp
es
dec
inc
mov
test
mov
sub
mov
and
lds
push
in
inc
nop
jb
lea
push
inc
adc
xchg
add
dec
insb
test
cmp
dec
out
xor
xchg
outsl
shl
decl
mov
jecxz
decl
jmp
sub
pop
add
repnz
outsl
popa
adc
cmc
orb
int
pusha
fdivs
fwait
or
mov
jne
filds
push
nop
mov
clc
in
stos
xor
pop
push
xor
in
das
pop
stc
test
pop
lcall
add
push
mov
clc
fnstenv
test
pop
data16
adc
outsl
or
mov
pop
lahf
in
rcrl
adc
cmp
cmp
enter
ljmp
and
pusha
mov
test
adc
push
test
std
scas
clc
decl
aas
ret
or
pop
pushf
jb,pn
outsl
or
sbb
icebp
adc
inc
inc
sub
or
je
loope
or
mov
or
sub
ja
xor
pushl
or
mov
mov
cmpsl
lods
mov
data16
xchg
cmp
loop
es
inc
dec
pop
aam
pop
in
fsubs
adc
loope
aad
jmp
hlt
mov
out
adc
cmp
push
cli
sbb
or
or
or
popa
pushf
inc
sbb
xor
imul
shlb
adc
adc
xor
ss
mov
jg
dec
addr16
adc
popa
gs
push
inc
ja
andb
or
into
clc
cmpb
ret
sbb
xor
loopne
adc
js
mov
call
pushf
mov
subb
divps
mov
or
lcall
mov
mov
pop
imul
andl
mov
jo
and
ffreep
dec
and
add
sbb
int3
or
pop
adc
fmulp
rcll
adc
mov
rolb
add
rclb
loop
jne
add
in
imulb
pop
xchg
test
mov
adc
jo
rdpmc
push
inc
icebp
pop
xchg
mov
push
mov
add
adc
jle
test
xchg
fdivr
decl
jbe
jecxz
pop
repnz
jnp
pop
push
cmovl
push
jp
cs
loope
call
emms
mov
cld
cld
xchg
divb
pushl
cmp
stos
imulb
lea
cvtps2pi
mov
sar
data16
inc
jne
xor
sbb
cmpl
cmc
pop
and
or
inc
cli
push
and
cld
incl
js
ja
mov
sbb
cmc
std
decl
sbb
push
and
sbb
xcrypt-cbc
cmpsl
push
xorl
mov
je
adc
std
sub
pushf
inc
cli
std
scas
push
arpl
or
clc
pushl
ljmp
push
ja
test
mov
add
data16
subb
hlt
mov
call
adc
add
mov
add
dec
mov
mov
das
mov
add
mov
fs
psrlw
jecxz
shr
nop
add
xchg
and
push
push
push
xchg
mov
jmp
ja
jno
jns
shlb
out
xor
mov
pop
cmp
xor
in
jbe
aam
sub
mov
pushl
pop
mov
ss
xchg
sbb
mov
xchg
incl
test
xchg
filds
adc
int
clc
lret
jmp
jg
dec
ss
mov
pop
mov
lock
lcall
and
outsl
inc
fsubl
dec
call
pop
xor
daa
or
int3
push
sti
jg
cld
enter
adc
insb
xchg
and
cli
push
test
inc
pop
pop
push
std
call
push
mov
xor
insb
push
mov
lahf
xchg
aam
mov
incl
loopne
xchg
jo
dec
mov
data16
ljmp
sbb
and
sub
push
push
hlt
or
add
cmp
pop
jl
mov
dec
mov
add
jge
ds
adc
mov
and
inc
and
xchg
rcr
or
add
fwait
stos
mov
call
lret
iret
lret
ljmp
mov
or
mov
push
ljmp
dec
xor
inc
jb
cld
adc
mov
insl
mov
and
mov
sbb
jmp
int
push
inc
std
ljmp
xor
add
pushl
inc
and
ret
push
adc
ds
adcb
inc
decl
cmp
ficompl
mov
std
out
dec
cmpsb
push
ss
incl
cld
inc
roll
pop
xchg
lea
or
or
or
lcall
lea
shlb
xchg
mov
pop
dec
je
push
out
outsl
or
push
loop
into
scas
inc
incl
movl
call
fsubrl
mov
inc
cmpsl
imul
lock
fists
rorl
inc
jg
call
shl
cwtl
sahf
sub
setle
add
std
xchg
clc
jmp
call
xor
jg
loop
jmp
or
xchg
push
cmpb
jnp
jns
or
dec
jb
add
popa
dec
pushf
test
lock
or
inc
add
lods
je
dec
ljmp
push
js
xor
mov
sub
ja
faddl
enter
inc
mov
push
push
adc
sub
inc
push
ljmp
push
push
and
dec
gs
mov
ss
mov
xchg
inc
cmp
jle
les
jbe
push
mov
ret
jl
mov
push
ljmp
xor
ficoml
cmp
les
ljmp
jl
lcall
xor
mov
mov
push
mov
sahf
push
decl
pop
jle
sbb
arpl
psllw
dec
pop
pushl
mov
xchg
aaa
ljmp
cmpsl
rcrl
call
xchg
ss
std
ljmp
lea
push
add
pop
cld
int
test
mov
decl
and
cmp
push
add
aaa
inc
mov
add
cmp
add
gs
fsubrl
pushl
xchg
mov
mov
jge
xchg
and
pushl
sbb
enter
outsb
imul
push
int3
fisubl
mov
mov
outsb
push
das
sub
aas
pop
push
dec
ljmp
sahf
stc
dec
int
rcll
loope
cmc
push
xorb
inc
fucomip
nop
je
es
cld
add
mov
dec
leave
lock
mov
add
adc
int3
mov
outsl
cli
and
cs
push
decl
dec
mov
push
mov
xor
fcoml
add
lcall
popa
mov
addr16
into
jnp
pop
fbld
add
decl
and
js
mov
clc
sbb
je
ret
test
insb
jae
mov
cld
pop
or
mov
mov
divb
jg
inc
cld
push
push
repnz
ret
add
push
loopne
xchg
jns
pop
hlt
in
decl
sub
insl
xor
nop
sbb
jmp
rcll
inc
pushf
add
iret
add
les
cmp
add
lcall
nop
mov
xchg
add
pop
gs
sar
ret
adc
subb
push
ljmp
cmp
mov
inc
ss
mov
lcall
repz
mov
in
dec
decb
notl
push
jg
pop
xor
add
fiadds
incb
and
sub
push
rorb
xchg
test
xchg
fbstp
sub
or
mov
jno
cmp
fimuls
jp
ljmp
mov
out
clc
or
adc
scas
xlat
cs
adc
or
jo
call
jb
mov
push
adc
std
mov
nop
lcall
push
loopne
and
add
icebp
jb
jle
xchg
fisubrl
sbbl
decl
scas
mov
arpl
dec
testb
mov
decl
push
mov
xor
icebp
add
xchg
orb
dec
dec
mov
pop
push
in
cs
lock
jle
das
push
mov
sbb
outsb
jmp
and
push
cmp
xchg
sub
pusha
jmp
je
es
fs
push
inc
or
mov
dec
pop
jl
xor
add
cmp
xor
cmpsb
insb
decl
loopne
loope
cmp
push
inc
mov
xor
cmc
mov
pushf
ret
idivb
mov
jg
and
cmp
incl
dec
enter
fs
xchg
ja
inc
cmp
and
mov
dec
rclb
test
pushl
bound
mov
push
idivb
xchg
mov
jle
push
stos
loop
xor
fsubs
push
add
dec
jmp
mull
xlat
in
add
mov
dec
daa
ljmp
and
cmp
stos
push
call
inc
clc
add
movsl
loop
insb
pushf
mov
aam
dec
pop
inc
leave
inc
rcll
test
jmp
jl
call
sbb
add
cwtl
push
hlt
mov
sbb
mov
fidivrs
icebp
fbstp
filds
jg
pop
push
mov
sub
data16
inc
add
adc
clc
ljmp
hlt
out
stc
daa
gs
sbb
mov
insb
cld
ljmp
ds
sub
mov
push
push
les
stos
and
adc
fisubs
int3
mov
push
xchg
movsb
lcall
or
jo
ret
sub
sbb
adc
loopne
add
inc
das
jo
push
enter
jecxz
jbe
ret
and
mov
pop
mov
and
out
push
mov
mov
adc
or
shrb
popf
mov
sbb
fs
mov
lcall
adc
sub
aas
in
xchg
ret
add
mov
sub
lcall
stos
outsl
cli
cs
es
sbb
icebp
into
or
clc
nop
in
aas
cwtl
adc
adc
sub
xchg
dec
scas
sbb
and
pop
and
nop
jecxz
decl
dec
movb
cmp
jl
bswap
js
or
adc
or
enter
mov
mov
lods
cmpb
mov
push
xor
cmp
into
in
mov
outsb
outsb
xor
cmpsb
sub
push
inc
mov
fs
jl,pn
push
pushf
loopne
lcall
mov
push
sbb
js
mov
push
jo
ss
cmpsl
lock
adc
ret
lods
mov
pop
dec
loop
sub
ljmp
push
or
test
stos
clc
sbb
enter
or
call
mov
xor
push
inc
inc
mov
incl
adc
call
mov
mov
xlat
dec
in
pop
sbb
outsl
clc
mov
nop
pop
xchg
mov
out
insl
or
dec
ljmp
xor
lret
and
ret
or
add
cld
aaa
pop
inc
adc
out
jl
stc
xchg
xor
decl
cmp
xchg
mov
inc
testb
jp
out
xchg
push
pushf
add
cmp
mov
jne
or
push
xor
inc
sub
cld
fsts
xlat
push
sarl
and
pop
sbb
push
jmp
sarb
push
pop
adc
rclb
lea
cmp
jg
push
cmpsb
sar
ljmp
ss
sbb
or
mov
daa
add
pushf
mov
jb
clc
lcall
jae
or
fcomps
push
dec
imul
sub
jo
outsl
leave
dec
enter
clc
aam
xor
jo,pn
mov
test
add
sbb
out
fs
pushl
dec
mulb
cltd
fisttpl
rcpps
xchg
add
jg
sub
mov
insb
mov
xor
fbld
add
sahf
or
aaa
testl
lods
add
inc
in
add
adc
divb
movsl
xchg
into
lcall
loopne
sub
popf
inc
sti
int
mov
mov
push
inc
sbb
loopne
xchg
fldl
jg
push
incl
aaa
mov
cmp
xor
cmp
push
add
sar
call
rorb
jle
mov
and
lcall
shrl
fcomp
or
das
test
mov
dec
andb
andl
pushl
push
stos
pop
inc
std
mov
loope
jnp
sbbb
mov
jg
and
dec
outsl
mov
push
mov
lret
and
fmuls
dec
enter
lock
and
jbe
pusha
inc
loopne
out
add
adc
add
addb
mov
push
imul
jbe
pop
rcl
es
test
call
or
lcall
add
test
add
jecxz
adc
mov
call
mov
sbb
jno
xor
jmp
stos
sbb
decl
mov
popa
xchg
shl
mov
int3
ret
aad
pop
mov
ja
add
jl
icebp
call
jl
push
imul
stos
mov
jl
and
sahf
ss
push
outsb
jle
test
je
inc
into
sahf
ljmp
movsb
dec
daa
sbb
scas
inc
sbb
call
call
in
mov
gs
fcoms
lcall
decl
add
decl
jle
fdivs
xor
aaa
test
cs
jl
cmpsb
add
mov
xor
data16
push
push
xor
push
xor
lcall
icebp
pop
pop
ret
call
dec
jmp
inc
test
mov
cmpl
push
or
jno
add
push
in
js
je
rcrb
sti
jmp
push
andl
pop
fucom
lods
inc
mov
mov
clc
fimuls
xor
xor
pop
outsb
jne
push
or
lcall
dec
je
call
adc
mov
push
mov
sbb
and
cli
decl
loop
cmp
stos
test
movsb
int3
xchg
ljmp
gs
jp
orb
xor
iret
xchg
das
adc
push
scas
andl
add
fstpt
pop
mov
scas
test
mov
rolb
cli
dec
pop
xor
hlt
incl
int
mov
cli
repz
sbb
jne
or
lcall
test
pop
pop
clc
mov
arpl
rorb
incl
xor
clc
out
or
inc
push
call
test
pop
hlt
push
and
mov
and
incl
add
outsb
iret
push
sub
stc
dec
xchg
xor
mov
add
add
dec
or
mov
adc
pusha
inc
movsl
out
nop
dec
or
es
movsb
pop
xor
shll
xor
push
dec
add
or
jg
push
popa
mov
call
or
repnz
inc
mov
lods
cli
and
scas
xor
dec
add
push
sub
aaa
cld
decl
cmp
out
sub
push
outsl
ljmp
ss
pop
inc
idiv
pushl
imul
cli
loop
cmp
imul
sub
add
pop
orb
sbb
les
pop
repnz
inc
jg
mov
jg
paddb
add
movsb
pop
cmc
jmp
mov
jecxz
jl
pop
xor
ljmp
and
and
cmp
mov
inc
xor
das
push
push
je
ds
ljmp
icebp
inc
icebp
bound
bound
in
gs
pop
add
mov
std
inc
add
dec
inc
sub
fdivr
lcall
pop
push
addr16
orb
loopne
pop
xchg
aam
decl
test
sti
mov
and
sti
inc
push
mov
ljmp
mov
shrb
sbb
out
js
cmpsb
add
mov
xchg
mov
fistpll
mov
decb
ljmp
add
dec
jne
inc
icebp
ja
xchg
jl
popf
jno
aas
mov
popa
rolb
mov
sbb
push
cmp
jmp
sar
out
xchg
out
push
and
in
push
cmpsb
hlt
in
ljmp
sbb
push
push
lcall
lock
mov
das
mov
addr16
mov
sbb
incl
in
aaa
jo
xchg
or
or
out
xor
inc
jecxz
repnz
mov
mov
jbe
aaa
fdivrs
pop
pop
mov
add
imul
lcall
pop
mov
sti
sbb
clc
and
adc
ljmp
lcall
fcomip
pushl
jle
in
je
scas
test
adc
dec
imul
jbe
lcall
cmp
ss
ds
push
daa
aam
sub
test
push
xor
jmp
call
pop
xchg
mov
mov
je
lret
aam
add
xchg
mov
icebp
pop
jge
mov
cmp
sbb
in
adc
inc
cld
scas
push
cwtl
adc
pop
xchg
fldcw
fisttps
adc
call
enter
inc
sbb
cmovae
sub
push
add
mov
cmpsl
mov
int
pop
inc
cs
xor
and
mov
scas
mov
aas
add
add
aaa
js
add
data16
and
mov
lods
add
xchg
in
mov
lahf
mov
in
jg
test
adc
dec
prefetch
inc
pop
call
lret
push
jne
mov
or
inc
inc
push
mov
xor
std
mov
xlat
and
mov
aaa
out
pop
jne
push
popa
movsl
in
sbb
clc
decl
dec
jge
lock
push
mov
push
out
jl
push
or
add
add
inc
repnz
imul
pusha
add
sbb
enter
ljmp
and
dec
mov
mov
or
sub
xor
cld
sub
push
adc
in
dec
test
xchg
enter
mov
xor
cld
clc
sub
sub
enter
mov
xchg
and
add
jle
aas
test
push
mov
pusha
andb
push
add
addl
outsl
testb
adc
mov
pushl
neg
cmp
add
sti
out
or
push
test
jmp
lea
test
push
inc
pushf
or
or
decl
mov
pop
xchg
or
lcall
add
gs
insb
sbb
jmp
outsb
or
pusha
cmp
clc
jb
shll
mov
jmp
pop
aam
lods
sbb
std
sub
mov
xchg
pop
in
incl
push
add
test
mov
je
or
push
xlat
add
lcall
lock
insl
add
call
pop
int3
aaa
lcall
xchg
js
es
or
out
adcb
dec
loopne
xor
inc
test
insl
pop
push
and
mov
loop
mov
sti
out
les
xchg
gs
incl
mov
sbb
lcall
dec
rclb
mov
adc
scas
into
or
jne
popf
mov
push
pop
pushl
std
xchg
mov
fcos
cmpb
subl
lock
xor
out
jb
xor
xchg
inc
ss
pop
sbb
icebp
mov
hlt
fcompl
mov
xor
flds
fmull
insb
std
popa
movl
stc
push
ret
fcmovnbe
cmp
jmp
xchg
jg
popa
and
jmp
out
xchg
add
add
sbb
pop
inc
jl
out
jp
addl
and
jle
inc
lcall
sub
inc
xchg
inc
or
jmp
pop
jmp
rolb
dec
dec
jae
insb
mov
sbb
pop
gs
addb
add
sub
in
pushf
out
xchg
xchg
jg
fs
sub
mov
jle
ret
and
decl
mov
lea
sub
jns
loop
out
cld
jno
mov
mov
push
jae
gs
push
divb
mov
jg
mov
cmpsb
sub
sbbb
lea
jmp
test
pop
pusha
inc
sahf
jge
jg
out
push
roll
syscall
dec
push
cmpsb
sarb
call
jo
jge
push
fisttpll
rcrl
mov
mov
psubsw
xor
push
dec
or
lock
shrb
fcomip
adc
add
xor
mov
inc
lock
repz
divl
loop
jg
ljmp
fprem
sbb
push
scas
pop
push
pop
call
pop
fsubs
mov
jg
scas
rcll
add
ds
mov
inc
call
mov
push
enter
or
lods
adc
add
cs
mov
cmp
add
jnp
push
mov
pop
mov
mov
fisttpll
dec
arpl
inc
push
and
je
mov
push
sbb
mov
addl
xor
inc
test
leave
clc
adc
mov
test
inc
or
adc
call
or
shlb
and
test
or
out
je
inc
sbb
pop
cltd
jle
push
idivl
mov
test
out
adc
ljmp
cmp
bound
rcrl
aaa
or
outsl
decl
mov
rcll
xor
loopne
xchg
or
push
paddsw
scas
fucomi
xor
xchg
xorb
and
inc
dec
jg
ja
push
mov
shlb
cmp
cmpsb
push
mulb
xchg
xchg
push
ret
incl
xchg
adc
mov
in
lcall
faddl
or
jg
in
xor
ljmp
loop
push
mov
fiaddl
cmpsb
cmp
clc
sub
add
out
movsb
push
jge
add
lock
cmp
dec
sbb
pushl
mov
cmpsl
testb
jns
shlb
fbstp
nop
mov
and
loope
add
inc
test
dec
mov
sbbb
pop
add
dec
icebp
jno
out
int3
lock
jg
sti
sbb
gs
addps
pop
jo
mov
out
push
es
enter
add
xor
pop
sbb
cmp
test
jbe
cmp
push
inc
orl
jg
dec
jo
shr
xlat
das
adc
loopne
testb
or
mov
or
fstpt
pop
jb
push
and
xchg
push
imul
jbe
sti
lds
sbb
pop
pushl
js
xor
cmp
add
mov
inc
adc
lcall
xchg
inc
mov
mov
mov
loop
add
call
jle
or
jbe
jecxz
pop
add
loopne
ljmp
push
pop
mov
fiadds
incl
add
push
xchg
jg
ljmp
lock
push
adc
sub
xor
leave
adc
outsl
cmp
imul
lcall
jbe
adcl
sahf
int
jae
aas
data16
cmp
lea
movsl
xchg
sar
and
mov
add
insb
or
call
mov
ss
std
test
adc
jae
sbb
jl
dec
ljmp
adc
insl
stos
int3
out
scas
inc
rclb
out
adc
jb
andb
cli
cld
add
push
lea
lcall
rorb
incl
mov
push
jnp
or
pop
leave
cmpsb
push
shll
decl
cmp
mov
jno
imul
jmp
test
fs
xor
lahf
mov
std
ljmp
and
pop
pop
add
cmpsb
int
pop
iret
imul
inc
push
neg
or
cmp
xchg
pop
rolb
lret
inc
call
lods
mov
pop
clc
adc
insl
push
push
call
lds
popf
sub
sbb
pop
or
cmp
and
inc
shll
call
xor
lcall
ds
int3
pop
jno
adc
and
nop
inc
mov
mov
push
push
push
icebp
or
insl
and
fisttps
test
and
fistpll
jb
icebp
test
enter
xor
pusha
sti
sub
push
mov
push
mov
sub
push
jle
lea
adc
hlt
cmp
mov
and
xor
icebp
and
ja
notb
cli
jle
movsb
lcall
shrl
loop
jmp
jg
dec
es
push
pop
or
enter
pop
outsl
mov
mov
adc
or
mov
mov
nop
call
loopne
jo
adc
call
add
in
mov
or
mov
arpl
in
and
fdivrp
ds
cltd
jbe
mov
mov
and
ret
push
inc
or
xor
aas
ret
cmp
jmp
sbb
add
or
inc
in
call
orl
decl
in
push
adc
jne
push
push
sub
cmp
notb
mov
jl
pop
cs
xor
add
jge
or
mov
inc
jnp
and
push
or
ja
call
dec
pushf
data16
sbb
jb
mov
add
or
xrelease
fldenv
jg
or
cmp
les
jmp
push
dec
dec
push
fs
mov
arpl
mov
adc
add
outsl
add
add
in
jg
dec
or
push
mov
xor
xor
push
fdivrs
push
cmp
pop
mov
incl
movsb
fldl2e
fistl
mov
jns
and
cmp
sti
push
inc
je
sbb
in
es
pop
or
aad
sub
adc
aaa
add
pop
lret
lcall
icebp
ja
mov
adc
dec
in
mov
sub
add
aaa
fnsave
pop
out
xchg
mov
add
pushl
inc
jo
jg
cmp
inc
sarl
add
or
mov
inc
cmp
aad
push
cld
loop
mov
sbbb
pop
inc
cli
push
stos
int
lcall
icebp
dec
or
jo
xor
test
lods
mov
insl
sub
adc
and
stos
xor
jg
cmp
cs
sub
sub
aaa
jl
sahf
gs
ds
ljmp
mov
nop
aad
xor
repnz
sub
or
mov
movb
cli
stos
call
or
push
mov
push
scas
std
and
dec
insb
and
addl
call
jmp
jae
dec
and
or
sbb
jae
nop
add
loope
and
dec
scas
push
les
test
lock
xor
jg
jge
pop
add
xchg
ja
lea
dec
jg
shl
lcall
clc
lcall
lea
dec
adc
dec
or
mov
xor
pop
cmp
add
add
sub
bound
incl
inc
push
inc
xchg
loop
xchg
inc
jnp
or
rcr
mov
pop
dec
imul
shll
test
inc
lcall
test
cmp
push
shrl
pop
xchg
or
ljmp
sbb
inc
aad
mov
into
shlb
push
push
dec
inc
push
jg
add
push
xchg
push
loopne
sbb
aaa
std
and
dec
popa
or
cmp
jnp
push
inc
mov
idivl
aas
cmp
and
mov
dec
sbb
loopne
mov
incl
adc
xchg
pop
fs
sbb
in
es
sbb
ret
ds
inc
push
lcall
outsl
pushl
loopne
pop
xor
cmpsl
test
cltd
test
incl
out
movb
out
cld
adc
pop
adc
cmp
inc
xchg
std
shll
add
js
pop
dec
out
add
or
inc
pusha
jge
enter
incl
insb
pop
mov
cmpsb
xchg
adc
outsl
cmp
mov
adc
je
jns
inc
adc
callw
mov
jns
xchg
popw
dec
add
out
xor
add
pop
shrl
push
lods
push
jmp
jg,pn
lds
push
aaa
das
cmp
mov
fwait
sbb
jmp
inc
in
js
inc
out
sbb
fmull
rolb
inc
cmp
lea
sti
pop
shr
push
add
ja
adc
sarb
cmp
mov
or
inc
pop
loope
fmull
add
dec
cmp
xor
call
cmp
sub
sub
inc
cld
cld
lds
jmp
das
pop
shlb
int3
dec
clc
xor
call
fmull
push
fnstenv
pop
pusha
add
and
ljmp
ja
std
pushl
xor
mov
cltd
dec
loopne
sbb
mov
decl
or
adc
mov
aad
aad
pop
lock
cmc
inc
loop
cld
push
xor
lret
enter
sti
ljmp
adc
test
mov
inc
push
push
cld
das
push
and
push
push
call
jg
fwait
ljmp
dec
cmp
mov
int
cmp
call
shrb
mov
sbb
pop
inc
loope
pop
nop
pop
daa
push
ljmp
mov
push
jmp
incl
push
addb
jmp
sbb
adc
popf
aam
mov
adc
lea
aam
imulb
fidivrs
aam
dec
pop
add
adc
jg
mov
shlb
shlb
je
mov
into
xlat
insl
pop
test
push
pop
or
decl
cli
jno
scas
arpl
ljmp
lea
xchg
movhps
fistps
imul
ljmp
adc
fsubrs
sub
jg
mov
inc
cs
loop
xor
mov
js
sub
out
xchg
ljmp
add
push
sahf
inc
pop
es
adc
mov
jnp
pushl
xchg
mov
adc
pop
sbb
sti
data16
sbb
mov
fbstp
sub
push
adc
mov
fistps
lcall
xor
sub
ljmp
xchg
insb
mov
enter
lods
mov
decl
stos
mov
inc
sbb
pop
arpl
add
sbb
movb
hlt
inc
outsl
jb
push
outsl
push
adc
push
dec
lods
outsl
out
lcall
dec
leave
shll
xchg
jl
lock
inc
out
add
jb
pop
std
imul
jne
icebp
lds
push
sub
in
mov
call
es
or
pushf
cmp
incl
mov
cld
ret
cld
movsb
or
popa
std
xor
orl
pushl
mov
fildl
mov
xorb
test
test
cld
cmpsb
pop
std
decl
or
xchg
andl
je
ja
xor
sbb
xlat
mov
fwait
or
imul
sbb
in
mov
adc
cmpsl
mov
push
mov
push
mov
cwtl
shlb
decl
cli
inc
into
or
hlt
scas
push
ds
ret
push
call
popa
dec
ret
adcb
push
out
push
shlb
std
lock
sbb
push
mov
xor
es
pushl
fstpl
inc
mov
insl
push
add
outsl
mov
fwait
sub
call
popf
adc
and
mov
or
xor
push
outsl
cli
call
fiadds
inc
pusha
test
aas
pop
push
dec
lcall
mov
pop
out
adc
lcall
add
fwait
sbb
pop
in
add
iret
fldt
add
ror
cmp
sbb
mov
scas
mov
dec
xor
jno
xor
inc
test
pop
xlat
jnp
out
jb
or
adcl
cmp
decl
add
scas
fistl
mov
xchg
insl
stc
adc
fildl
inc
fwait
xor
adc
sbb
xchg
mov
adc
add
pop
add
xor
shll
insb
lcall
loope
or
adc
cld
je
inc
adc
add
sbb
mov
xor
clc
dec
call
popa
addr16
inc
inc
icebp
sbb
inc
loope
cmc
fs
xor
inc
jg
push
mull
lods
add
xor
dec
js
push
push
pop
repnz
sub
pop
movsb
icebp
push
aas
int
sub
pop
in
cmp
push
stos
call
and
push
subl
push
xchg
js
push
jg
insb
outsb
popf
jmp
sub
xchg
ljmp
pop
cld
xchg
mov
rolb
rclb
jmp
test
push
mov
pushl
inc
mov
pop
call
js
jbe
mov
mov
shlb
rclb
decl
ljmp
mov
lock
adc
sub
lcall
orb
and
loop
insb
pushl
or
add
inc
ljmp
pop
mov
sub
sub
dec
and
add
shlb
add
clc
mov
jo
shlb
xchg
pusha
xor
ja
lods
out
adc
push
or
xorb
decl
xor
scas
pop
xchg
jmp
test
cli
popf
in
fmul
push
ljmp
mov
mov
scas
fmulp
test
or
xchg
push
in
adc
fisubrl
aam
pushf
mov
clc
and
fs
inc
pusha
add
add
xchg
ljmp
sub
jbe
clc
call
dec
stos
in
lahf
or
wrmsr
push
adc
dec
out
insb
std
adc
mov
jmp
sbb
decb
ret
jge
add
or
add
sub
mov
test
leave
add
and
mul
adc
shrb
xor
loopne
movsl
mov
ss
aas
mov
decl
dec
shl
js
xchg
sub
popa
pop
xchg
cmpsl
divb
pop
push
push
sti
pop
mov
call
cmp
cmpl
cmpsb
adc
adc
outsl
mov
add
add
dec
call
mov
xchg
mov
push
call
bound
mov
jb
js
jle
push
ja
sarb
mov
pop
inc
add
push
and
push
push
scas
mov
das
cli
daa
or
jbe
and
js
push
pop
jge
ljmp
push
pop
test
adc
mov
jae
add
popa
imull
lock
cmp
loope
test
inc
lods
pop
mov
jecxz
xchg
pop
adc
sub
nop
sub
adc
test
add
adc
fidivs
xchg
movsb
jg
xchg
cmp
add
lea
repz
cwtl
jg
or
testb
xchg
add
adcl
lret
sbb
es
cmc
clc
decl
push
outsb
sbb
imul
aam
sarb
mov
push
leave
or
pop
cwtl
sbb
inc
mov
test
pop
and
loopne
sbb
fisubrs
lahf
xor
fld
and
adcb
lcall
addl
stc
std
push
xchg
test
jb
cmc
jg
lcall
in
push
add
or
sti
inc
jle
cld
flds
mov
lcall
sbb
jbe
jno
add
icebp
pop
call
mov
pop
adc
leave
sub
fcomip
ljmp
mov
sbb
cmp
decb
mov
dec
add
push
bswap
xor
decl
mov
xchg
pop
push
mov
lea
pop
jbe
leave
push
jbe
lock
mov
push
adc
ljmp
xchg
xchg
xor
adc
jmp
pop
jge
lds
xchg
sub
std
fiaddl
cmp
jl
scas
mov
test
stos
dec
push
ds
ret
mov
inc
call
jge
push
jg
and
pop
fs
push
cmovl
jns
add
jo
xchg
int3
pop
xor
inc
and
ljmp
imul
or
inc
lcall
hlt
xor
mov
pushl
rcl
into
or
lock
imul
pushl
inc
stos
mov
adc
faddl
inc
mov
or
ljmp
cmp
shlb
loopne
pop
aam
stc
add
or
and
insb
mov
add
cld
jmp
ja
and
in
lds
decb
and
call
cs
shll
pop
jns
ljmp
inc
imul
push
inc
inc
mov
mov
fbld
mov
pop
hlt
ljmp
xlat
sbb
inc
in
enter
xchg
pop
shl
lcall
push
mov
jbe
lock
jb
jg
stos
test
fildl
rolb
pop
das
cld
dec
mov
jmp
hlt
sbb
dec
pop
in
ret
idiv
cmpsb
xchg
xchg
pop
aam
aaa
clc
add
repz
rcrb
add
mov
gs
inc
aam
add
add
push
aam
hlt
clc
mov
mov
call
add
jg
mov
ja
call
push
imul
sub
or
fucomip
ljmp
sti
outsl
cli
mov
ret
popa
cmp
shlb
pop
sub
jg
mov
out
mov
jge
mov
add
lcall
movq
or
jl
mov
clc
cmp
pushl
bound
dec
out
cld
inc
in
addps
fistpll
or
add
dec
adc
std
decl
push
jns
es
cld
dec
or
push
lods
cmp
outsl
call
out
rcrb
sub
xchg
addl
or
jne
rcrl
cld
add
decl
cmp
sub
mov
sarl
das
into
stc
cmpb
sub
leave
cmp
in
into
cmp
shlb
call
sub
or
shlb
sub
jno
iret
or
jmp
test
push
mov
adc
mov
xor
incb
sbb
stos
sbb
xor
inc
mov
mov
add
xchg
ljmp
inc
int3
xchg
adc
cmp
cld
decl
jg
incb
cmp
cmp
add
jge
dec
sbb
inc
cmp
jae
xchg
incl
add
and
xor
push
jl
mov
out
add
mov
pop
mov
cmp
add
sahf
inc
rcl
add
mov
xchg
rcrb
call
insb
addb
or
add
adc
sub
jmp
mov
and
lods
in
aam
gs
mov
push
mov
and
loope
shll
jg
decl
xchg
repnz
les
and
test
mov
add
adc
incl
cmpsb
sbb
out
pushl
pop
or
sarl
mov
je
cmp
filds
or
repz
ljmp
add
lahf
setg
or
jne
ret
and
add
xchg
push
adc
jo
mov
jnp
jg
gs
in
cmpb
add
sub
sbb
pop
sbb
push
insl
mov
stos
inc
clc
divb
insb
cld
loopne
je
cmp
mov
mov
movsb
xlat
sti
jecxz
scas
lcall
stos
in
rol
test
movlps
gs
mov
rcr
rclb
jg
incb
mov
aaa
lods
sbb
cld
mov
movsl
je
ret
ss
jg
push
pusha
aas
in
lock
mov
jp
cmp
xor
adc
pushf
dec
mov
inc
sub
xorl
clc
xorb
inc
mov
xor
add
xor
jg
fcoml
jge
frstor
imulb
in
mov
mov
adc
and
clc
stc
test
mov
nop
mov
mov
xlat
ja
inc
dec
movsb
add
jle
mov
cmp
push
pop
xor
mov
adc
mov
mov
or
shrb
stos
add
mov
pop
mov
es
cmp
pop
inc
pop
and
addr16
lret
dec
pop
jp
pop
cmp
or
ljmp
push
adc
pop
sbbb
subb
aaa
loop
pop
push
lahf
incb
filds
fildl
popa
add
insl
cmp
cmp
ljmp
pop
push
js
sub
repnz
push
rcrb
mov
ret
jp
andb
lret
pusha
jg
adc
lods
mov
lea
add
mov
pushl
cwtl
pop
imul
pop
mov
sub
std
ss
ljmp
stc
mov
shlb
adc
mov
fists
push
shlb
es
push
inc
gs
ljmp
data16
fs
cmpsb
lcall
sbbb
shr
push
stc
in
test
mov
pop
cli
mov
insl
data16
imul
rcrl
test
jbe
push
dec
movsb
add
push
testb
xchg
push
add
call
push
mov
or
mov
xchg
push
mov
dec
movsl
shll
fidivrl
clc
push
sbb
mov
pop
sbb
push
decl
inc
daa
add
push
dec
insb
mov
mov
cmp
adc
pop
std
decl
dec
inc
mov
insb
enter
test
cmp
pop
jecxz
push
rol
jg
xor
inc
or
adc
jg
add
add
adc
push
sub
popw
and
cltd
adc
jg
mov
add
fsin
push
nop
or
push
sbb
jb
push
add
sub
xorb
jo
cld
js
xor
add
outsb
inc
and
cmp
mov
scas
stos
loope
add
dec
in
mov
mov
jmp
adc
mov
dec
popl
or
jbe
imull
test
call
clc
and
call
add
out
pop
cmc
lcall
dec
cld
dec
jmp
dec
popa
mov
push
xchg
repnz
cwtl
push
fildll
lcall
fidivrl
pop
sub
aas
add
lock
xchg
ds
icebp
in
inc
sub
push
cli
pop
imul
jle
or
rclb
pushl
subl
js
cli
pop
jnp
cmp
stc
push
dec
clc
mov
mov
inc
mov
mov
mov
pop
cs
push
in
cld
adc
test
sbb
xchg
popa
pop
add
or
add
mov
jno
jg
imul
std
jae
rcrb
cmp
cmp
mov
ds
inc
inc
insb
ret
add
xor
aad
sbb
lcall
add
xor
scas
and
in
jmp
adc
andb
movsb
cmc
js,pt
mov
sti
lret
add
cld
test
imull
clc
adc
subl
adc
ljmp
xor
pop
push
cmc
pop
jbe
rolb
cmp
sbb
dec
mov
test
adc
xchg
jb
or
jmp
cmpsb
add
xchg
push
gs
jns
push
cmc
mov
out
pushf
sub
or
dec
mov
js
std
inc
pushl
in
pop
push
mov
or
add
cli
mov
out
pop
test
es
dec
and
decl
jle
sbb
bswap
iret
adc
jg
and
daa
push
out
mov
cmp
mov
add
ret
les
add
mov
sbb
imul
hlt
add
mov
sbb
adc
sub
dec
call
adc
mov
push
push
pop
xor
sub
orl
aas
and
cmp
xor
add
outsl
xor
pop
cmpsl
scas
mov
rolb
add
add
aam
ljmp
mov
fstpt
repnz
in
push
dec
scas
mov
inc
mov
aam
pop
lds
movsb
inc
int3
add
ret
fsubl
dec
adc
clc
clc
adc
or
lcall
mov
stos
push
addr16
fstl
aam
fists
push
dec
loop
inc
je
add
decl
out
ljmp
test
push
push
and
fwait
sarl
sbb
stos
test
and
shl
outsl
clc
sbb
or
aam
push
cld
fisttps
mov
dec
cmpb
push
prefetch
adc
cld
test
xor
into
lock
inc
aam
notb
add
push
jmp
mov
jmp
fldz
nop
ds
xor
inc
cwtl
and
iret
fadds
pushl
cmpsl
in
adc
stc
dec
xor
idiv
subb
ljmp
ds
dec
push
inc
ret
inc
sbb
mov
or
mov
jg
or
lods
cmpsl
xchg
rolb
jmp
mov
in
decl
fmull
mov
ds
pusha
or
clc
add
add
ret
nop
rorl
lods
inc
or
inc
xor
cmp
adc
bound
mov
cmp
sti
pop
inc
pop
push
sub
cmpsl
rorb
add
xor
mov
mov
mov
sbb
jb
or
adc
mov
lcall
inc
cmp
sub
jne
and
xor
mov
pusha
icebp
cld
je
montmul
movsb
sar
jg
sub
inc
jne
push
push
mov
aaa
xchg
subb
and
push
test
decb
mov
xchg
xor
push
jno
or
mov
call
mov
into
push
imulb
scas
movsb
ds
mov
inc
jp
mov
leave
imul
xor
ss
pop
add
call
adc
lea
pop
add
testb
push
jb
mov
sub
adc
push
add
xchg
fdivs
icebp
jle
out
mov
adcb
call
les
mov
inc
jns
add
fbld
inc
xchg
push
cli
mov
ljmp
test
mov
aaa
xor
cmp
add
lcall
movsb
and
lods
outsb
jl
nop
outsl
aaa
dec
incl
jmp
inc
movb
cli
mov
iret
xchg
cli
add
or
mov
mulb
push
lret
incl
clc
inc
push
mov
sbb
clc
cmp
adc
and
mov
jg
daa
subb
mull
jae
fsubs
or
sbb
subb
cmp
jge,pt
add
into
sub
mov
decl
xor
cwtl
ja
inc
shrb
push
jg
sar
mov
lock
ljmp
xchg
lods
adc
and
add
and
add
test
adc
add
sar
ffreep
sub
cmp
incb
clc
fildl
rol
icebp
pushf
mov
inc
xchg
aaa
test
lcall
jmp
add
pop
xchg
stos
ret
cmp
sahf
pop
cmc
jg
jmp
sub
jns
jno
je
repnz
push
repz
shlb
incl
or
out
pushf
push
jne
jae
add
jb
dec
inc
pop
fbld
incb
lret
push
in
insl
stos
push
scas
flds
and
sahf
dec
incl
lahf
pop
loop
andb
push
sub
stos
or
test
cmpb
mov
pop
cltd
xchg
sbb
pop
lcall
notb
xor
and
pop
fbstp
es
icebp
pop
inc
inc
adc
decl
enter
rolb
cmp
add
out
cli
dec
ficomps
test
test
js
pop
mov
jg
inc
std
fisttps
cs
ret
adc
mov
mov
sbb
out
addb
stos
fdivs
ss
cmp
push
decl
insb
dec
int3
pusha
mov
lcall
in
dec
mov
call
jle
jl
sub
sbb
add
mov
enter
loopne
xchg
out
bound
fwait
inc
leave
leave
hlt
mov
je
pop
jle
lods
add
mov
push
lock
xchg
les
jnp
sbbb
push
ret
and
inc
push
in
adc
idivb
js
pushf
xchg
je
xchg
push
inc
testl
xchg
mov
pop
adc
std
jmp
enter
pop
mov
pusha
shll
add
lret
fidivrs
sahf
test
or
stos
and
cmp
xor
test
stos
call
mov
or
jae
pop
call
add
mov
outsl
stc
jmp
adc
orl
cwtl
jg
ficoms
or
cld
idiv
add
add
mov
add
jb
mov
shld
pop
ret
insb
inc
mov
cmp
sub
in
lcall
cmp
loopne
or
fdivr
ljmp
ljmp
incl
in
ss
or
add
lret
jo
or
pushl
ss
or
sbb
cld
inc
rcll
mov
jle
push
sub
inc
cmp
sbb
bound
lock
or
jmp
cld
and
outsb
ljmp
nop
ljmp
push
mov
mov
adc
mov
sbb
data16
inc
dec
add
mov
shll
fwait
adc
lock
add
dec
sbb
sub
sub
insl
mov
xchg
lock
pushf
pop
mov
aas
mov
scas
clc
lcall
decl
dec
out
mov
adc
and
jg
lock
push
out
clc
incl
ret
dec
sub
jne
mov
pusha
cwtl
cmp
mov
decl
movsb
hlt
add
cmp
mov
incl
xorl
lods
fcomp
and
aam
mov
das
adc
jmp
dec
jns
call
push
int3
ljmp
shrb
and
adc
mov
mov
mov
sar
adc
stc
rorb
pusha
shll
outsl
xor
jg
xchg
xor
push
jb
cmp
repnz
es
decl
inc
mov
test
clc
mov
pushf
mov
pusha
inc
xor
int
fists
push
cmpsb
mov
jp
repz
into
pop
sbb
mov
inc
jo
add
push
adc
fbstp
cmp
xchg
cmp
out
out
xchg
jne
jge
decl
or
xchg
lock
mov
aas
xor
cmp
jmp
sub
jne
in
and
and
push
adc
test
cmp
xor
insb
add
fwait
sahf
xchg
aad
or
lret
test
inc
rolb
pushf
fcomip
das
je
jo
mov
lock
jle
aam
add
push
or
push
mov
mov
mov
add
call
xchg
push
cmp
mov
jne
fs
cld
xchg
or
lcall
out
sbb
sub
in
xor
inc
adc
in
dec
add
popl
sub
mov
mov
cs
incl
xor
push
or
jg
aas
inc
xchg
and
dec
divl
ljmp
adc
clc
adc
insb
and
cmp
ljmp
cwtl
dec
mov
pushl
dec
mov
sub
orb
mov
rolb
stos
out
nop
lcall
pop
mov
sbb
cltd
fdivr
push
lea
popa
test
outsl
test
inc
dec
ljmp
call
push
stos
push
das
xchg
pop
lahf
imul
clc
xorl
incl
cli
ret
sub
sbb
jb
pop
jg
idiv
ljmp
xchg
mov
pop
dec
push
decl
ficomps
pop
pop
mov
call
cld
push
outsl
iret
push
or
cmp
xchg
sbb
arpl
arpl
adc
mov
mov
out
xchg
mov
xchg
fs
add
aaa
xchg
pushf
mov
xchg
fwait
dec
loope
pusha
cli
and
sbb
ljmp
or
das
clc
fistps
and
xor
subl
call
cs
int3
cld
mov
sar
aam
shrl
es
imul
cld
call
adc
push
add
pop
mov
shr
inc
dec
xorl
icebp
mov
add
xor
je
mov
fnstcw
mov
mulw
mov
loope
mov
pop
pop
mov
pushl
jle
into
in
test
mov
ljmp
add
pop
insb
jmp
and
lds
decl
decl
or
test
fs
jl
push
bnd
or
xor
sti
in
dec
cld
call
adcl
jg
jecxz
push
jg
mov
je
fdivrs
jg
sub
and
pushl
mov
cs
lcall
cmpb
jo
std
xchg
test
lcall
and
sub
cli
lar
outsl
ss
or
mov
decl
sbb
push
fiaddl
jg
jg
and
sbb
xor
dec
mov
xchg
lock
jae
icebp
scas
mov
and
pusha
mov
pusha
jl
adc
ljmp
filds
xor
jo
ret
and
push
inc
rolb
or
mov
sub
or
call
mov
ljmp
lcall
int3
jmp
std
scas
enter
and
stos
jmp
push
clc
push
aam
add
js
cmp
in
inc
cltd
nop
fisubrs
mov
lcall
inc
inc
fwait
pop
imul
outsl
push
and
mov
add
mov
imul
nop
pop
loop
xchg
adc
sbb
add
pop
pop
and
test
in
hlt
jmp
add
xor
cld
sub
xchg
pop
and
outsl
cmp
std
call
mov
add
adc
add
movsb
cmp
xor
pop
inc
in
inc
mov
and
andb
xor
add
call
les
scas
pop
inc
stc
ljmp
call
call
and
push
fldt
enter
incl
outsb
xor
pop
inc
dec
mov
orl
push
stos
xor
lcall
mov
loopne
call
ljmp
xchg
mov
mov
mov
test
push
ss
filds
push
loopne
add
jmp
or
outsb
push
add
jg
inc
cmpb
mov
cmp
jmp
or
jmp
adc
fadd
aad
push
mov
pusha
lcall
ja
idiv
call
popa
jp,pn
ljmp
mov
push
dec
or
inc
int3
xor
mov
fs
incl
sub
mov
jmp
and
pop
inc
jmp
jo
dec
add
sarl
inc
pop
adc
add
jg
and
into
ja
adc
ret
mov
lods
xorb
fistpl
xchg
and
dec
jl
loop
jl
mov
orb
add
jae
push
pop
xor
cmp
fisttps
adc
and
cs
sarl
mov
lret
mov
imul
dec
xor
sbb
add
cmp
fdivp
and
push
arpl
call
nop
cmp
imul
out
test
test
les
xchg
fwait
das
jg
adc
ret
daa
mov
jb
mov
in
test
fistl
push
xchg
mov
je
push
mov
repnz
test
inc
scas
push
jg
in
xchg
lock
sbb
xor
out
add
call
pop
call
rorl
xor
sahf
pop
sbb
mov
mov
and
add
mov
out
movsb
je
push
or
cmpsb
cld
loop
push
mov
clc
notb
in
mov
daa
dec
sbbl
sbb
clc
fcomip
inc
cwtl
test
push
hlt
cld
adc
gs
mov
loop
lcall
sbb
add
loop
popa
push
dec
cs
cmp
sbb
push
cmp
inc
mov
dec
mov
movsb
cwtl
adc
xchg
loop
clc
call
enter
sbb
data16
mov
aaa
rclb
jb
decl
mov
arpl
mov
xchg
and
pop
jae
aas
fistl
notb
xchg
call
push
cld
mov
adc
mov
xor
enter
sbb
pusha
dec
sub
and
aaa
jae
add
cs
push
lods
nop
insb
sti
call
add
xor
stos
les
mov
xor
push
sub
push
push
pop
in
ljmp
or
cmp
andl
mov
test
rol
incl
pop
pop
cmp
insl
or
outsl
mov
adcb
sahf
scas
loopne
xor
pop
push
pop
mov
inc
lock
jg
mov
lret
adc
mov
inc
and
les
js
mov
jle
or
clc
pushl
inc
negb
pop
aas
push
dec
cmc
les
pop
add
push
sbb
sbb
cmp
or
movsl
jne
loopne
clc
nop
loope
push
rolb
lcall
incl
dec
notl
clc
rol
iret
aad
enter
pop
call
adc
add
fsubrp
or
xchg
rorb
adc
test
call
xorl
loop
mov
push
pop
iret
fwait
imul
int
daa
jge
lock
incl
popf
push
cmp
cmp
call
mov
jl
orb
out
mov
out
dec
xorb
pusha
xchg
lods
sub
push
cs
lock
es
jmp
and
sbb
bnd
add
mov
mov
addr16
mov
fbstp
incb
jae
mov
push
pop
cmp
ljmp
ret
mov
cmpsb
pop
cmp
aad
cld
call
cmp
incl
movsb
lcall
push
notb
push
pop
lock
imul
pop
push
jg
loopne
sar
pop
cld
or
incl
dec
repnz
test
insb
movsb
jl
leave
loope
cli
ss
pop
int
add
jnp
cmp
insb
adc
push
add
sub
or
filds
subb
sub
into
add
mov
movsl
or
jo
ljmp
addr16
cltd
and
mov
mov
push
mov
decb
add
movsb
pushf
and
mov
or
inc
test
andl
push
jbe
inc
push
or
dec
inc
dec
in
jmp
mov
jge
push
sbb
sbb
xor
scas
pop
outsl
test
adc
mov
adc
adc
int
pop
mov
dec
add
mov
outsl
clc
jl
adc
sub
inc
fsubrl
xor
testl
fcomip
sub
clc
rcl
repz
fidivrl
cld
jecxz
jne
pop
aaa
movsb
jmp
jbe
fimull
popf
adc
mov
jo
incl
cmp
add
lcall
ss
ret
and
mov
inc
std
jg
mov
stc
dec
lock
insl
insb
xlat
mov
add
mov
sbb
jo
call
call
cmc
ljmp
ds
mov
test
in
inc
inc
adc
cmp
push
shl
dec
fistpll
ret
add
mov
divl
clc
lea
inc
jns
pop
cmc
mov
jg
decl
data16
push
cmp
aam
dec
mov
jns
call
clc
mov
mov
call
push
ja
out
imul
lahf
inc
lret
cmp
mov
test
leave
and
cwtl
shlb
call
fmul
pop
mov
push
sub
mov
fldl
cli
cld
add
stc
cmp
decl
push
pop
sbb
and
push
cmp
adc
orb
test
jg
sbb
in
push
jg
adc
and
ljmp
cmp
int
cmp
inc
add
js
lods
repnz
dec
adc
xchg
sbb
lock
cmp
jne
jb
or
ss
cli
notl
popa
xchg
cmp
pop
cld
add
or
inc
mov
mov
lds
xor
lock
dec
ftst
dec
shr
imull
decl
sbb
pop
xchg
cli
xor
jno,pt
fisubrs
lcall
fs
aam
xchg
fisttps
and
sysenter
xchg
cld
shlb
data16
inc
sahf
jo
add
adcb
jg
dec
loop
cli
ljmp
fcomp
imul
fidivrs
and
xchg
mov
es
inc
in
je
or
jb
xor
call
add
call
test
pop
into
sub
insb
data16
call
mov
je
inc
adc
data16
mov
icebp
roll
sbb
pop
nop
fidivrl
daa
add
jge
pop
out
inc
scas
mov
pusha
mov
cmpsb
loopne
fs
sbb
mov
decb
fisubrl
fcomps
mov
lea
pop
clc
outsl
outsb
outsl
mov
mov
les
enter
lcall
jmp
mov
or
or
fdivr
jne
loopne
lcall
fdivr
arpl
push
call
fildll
cmp
dec
incl
pop
jo
mov
scas
aad
xlat
or
call
and
xchg
sbb
jne
mov
incl
jge
jne
ret
sub
jmp
shlb
add
push
cld
xor
mov
jg
lcall
mov
push
push
mov
or
loop
jle
sub
add
pushl
mov
lahf
push
fwait
xor
subl
sub
jo
ljmp
sahf
or
pushf
or
dec
push
sub
shld
outsl
incb
push
jmp
int3
mov
xor
mov
push
insb
mov
and
mov
fiadds
ss
aam
pop
push
or
xchg
push
or
fstpl
add
repz
mov
fdivrs
leave
jg
shl
adc
dec
cmp
fcomip
pushl
in
and
js
leave
push
fwait
sar
ret
rcll
aas
or
cmp
fisttps
jmp
mov
int3
mov
pop
pop
pushl
add
mov
call
insb
imul
decl
inc
xchg
icebp
loopne
lock
pop
cmovle
lea
jmp
mov
jg
sbb
sbbb
mov
add
aaa
je
inc
cwtl
adcb
or
je
loopne
es
clc
push
mov
push
add
inc
fisttps
loopne
sbb
imul
cld
mov
mov
imul
sbb
insb
or
fildl
pop
sub
in
dec
shrl
cmp
jecxz
mov
xor
mov
loopne
jg
jmp
int3
outsl
push
rcll
add
mov
dec
call
ficoms
fadd
sub
ret
cmpsb
push
mov
idivl
push
xlat
xor
cmp
mov
pop
cmpsb
adc
cli
decl
mov
shrl
ja
fimull
loop
mov
jp,pn
fwait
mov
pop
xchg
jno
test
ret
inc
aad
or
ficoml
dec
sbb
in
mov
cwtl
adc
adc
jg
add
cs
pcmpeqd
cmp
cli
es
sbb
int3
sbb
add
inc
fchs
xor
fisttps
cli
je
fnstenv
mov
fisttps
pop
lock
pop
inc
add
test
mov
mov
incl
shrl
jp
pop
inc
push
rcl
or
sub
sub
ljmp
inc
sti
sub
dec
fwait
pop
fcompl
mov
icebp
call
adc
call
adc
mov
xor
cli
xorb
ljmp
pusha
insl
shr
les
and
and
mov
repnz
pushl
and
inc
sbb
in
push
pop
aaa
sub
jge
mov
ffreep
iret
inc
push
cmp
aad
add
adc
pop
arpl
cmp
call
enter
push
xorl
push
xchg
and
jne
jbe
ljmp
and
mov
sbb
jo
fwait
shrl
and
sub
fiadds
xchg
fdivs
jg
add
pusha
mov
notl
or
ja
cmc
in
jmp
iret
out
addr16
or
mov
jp
add
sbb
scas
or
inc
inc
push
cld
ljmp
adc
shlb
mov
xor
test
xor
and
fstpt
dec
mov
pop
jbe
ljmp
out
mov
add
push
mov
loop
orl
inc
dec
jmp
or
lock
inc
cmc
sub
adc
in
mov
or
sbbb
in
stc
arpl
cmp
mul
and
mov
shrb
jne
push
lret
mov
scas
add
inc
xor
in
mov
mov
orl
add
adc
xchg
and
xor
bound
or
ret
call
jb
inc
aad
nop
add
out
jo
cmpsl
cmp
add
decl
stos
pop
cmp
call
pop
imul
nop
pop
cmovbe
popa
mov
test
popa
inc
xor
push
notl
in
and
outsl
xchg
jne
dec
sbb
inc
jnp
movsb
adc
add
push
mov
pop
aas
cmp
mov
add
jg
popa
cld
push
lahf
jle
push
lret
cmp
out
xor
mov
fcoms
adc
call
ud0
cli
mov
pop
xor
outsb
pushl
cmpsb
jl
pop
mov
cld
jno
sbbb
incb
jmp
push
adc
fidivl
sub
and
into
mov
lcall
incl
ret
add
clc
shll
pop
pop
push
jg
cmc
pop
shr
mov
push
insb
shrb
outsl
and
sub
pop
cmp
and
jg
mov
adc
sub
adc
inc
es
les
mov
push
xchg
jp
add
sbb
imul
clc
rolb
adc
in
add
pop
push
test
lods
rolb
mov
jg
movsb
pop
fidivrl
jb
mov
or
ss
mov
pushl
inc
test
mov
jmp
sbb
sar
clc
ljmp
or
mov
stos
push
sub
dec
push
stos
sbb
sbb
add
sbb
ljmp
shl
out
push
out
mov
cmp
jno
pop
adc
adc
std
xor
mov
incb
outsb
sbb
pop
cmc
pushl
cmpsb
out
lea
mov
mov
cmp
and
xchg
cld
ljmp
mov
mov
sbb
imul
and
loop
push
lcall
bound
out
sbb
and
ret
mov
cmpsb
fisttps
scas
je
pop
test
pop
xchg
rclb
das
xor
pushf
fwait
and
dec
cmpb
nop
mov
push
mov
and
jb
push
push
call
and
movd
push
mov
scas
jnp
fildl
mov
pop
mov
cmp
fistl
sub
inc
push
add
xor
xchg
jo
std
fcomip
das
push
cld
insb
sbb
and
cld
lret
rcrb
ja
cmp
pushl
popa
push
addl
cmovb
ss
or
fidivl
push
arpl
cmp
aad
inc
inc
adc
mov
add
dec
mov
mov
mov
or
mov
push
inc
and
fstl
jg
mov
xchg
lods
mov
incl
jnp
mov
hlt
scas
jg
sub
and
jb
mov
fdivrp
das
adc
xor
pop
loopne
jle
mov
lcall
pop
add
fcmovne
rclb
cmc
push
or
out
add
cmp
les
cli
jbe
insl
lret
pop
jg
mov
pusha
cld
cltd
test
ljmp
adc
push
sub
sbb
push
jmp
popa
ret
mov
pop
push
ret
and
std
push
and
xor
inc
sbb
pop
mov
faddl
lods
pop
ret
inc
mov
xor
fstpl
mov
add
cltd
pop
and
incl
add
jg
adc
rclb
std
jg
shrb
sbb
bound
pushf
imul
es
dec
call
testb
mov
dec
test
mov
adc
xor
jp
rcrb
lods
push
cmp
sbb
dec
sbb
push
mulb
pop
enter
orl
cmp
pop
rol
decl
dec
movsl
jne
ja
add
pop
sub
idivb
lahf
add
inc
leave
and
out
inc
inc
insl
mov
sar
inc
sbb
in
data16
adc
call
jo
push
jp
lock
pop
dec
ljmp
rol
fisubrs
and
sub
std
movsl
mov
mov
incl
mov
mov
daa
popa
hlt
add
ret
or
mov
daa
stc
adc
out
xchg
subb
xor
mov
jo
dec
cmp
test
cmpsb
mov
xchg
or
inc
lcall
jne
and
xor
lcall
add
or
pop
stos
mov
mov
cmp
call
out
dec
dec
mov
lock
cwtl
rorl
mov
xor
cltd
sbb
call
ds
jne
xor
mov
sub
and
add
push
aaa
pop
fnstcw
xchg
call
incl
xchg
xor
or
cmp
incl
incl
xchg
call
cmp
les
imul
scas
xchg
decl
dec
jo
cmp
fld
test
testb
imul
cmp
mov
or
mov
xchg
lock
push
dec
jnp
push
in
and
adc
mov
sbb
mov
int3
pop
adc
push
outsb
jb
sti
lahf
inc
std
pop
cmc
pushl
xchg
inc
mov
jne
movsb
leave
push
out
xor
ja
pop
push
jmp
daa
pop
inc
clc
insl
ds
dec
jecxz
jne
ds
push
add
out
sub
ljmp
in
ret
adc
adcl
insb
add
movb
addl
mov
sub
and
fidivrl
js
jmp
iret
loop
movsl
lcall
cwtl
cli
mov
mov
les
dec
adc
loopne
pushf
and
int3
lods
js
stc
idivb
dec
inc
pop
cs
add
adc
scas
aam
nop
loopne
outsb
mov
jmp
das
push
mov
std
cmp
or
push
bound
movsl
adc
pop
pop
das
ljmp
icebp
jmp
decl
incb
ja
cld
dec
ds
and
pusha
arpl
pop
jge
mov
or
push
inc
shlb
lret
lods
xor
pushf
mov
jle
scas
stos
aam
and
les
dec
cmp
lcall
adc
sub
lcall
inc
rclb
lret
in
fs
mov
out
pushf
and
sti
xor
jge
jne
push
sbb
aas
or
mov
mov
add
dec
pop
mov
decl
imul
jmp
stc
pop
push
jmp
roll
movsl
cs
jmp
add
push
jmp
popa
daa
add
aaa
inc
push
push
pusha
mov
add
pop
cmc
daa
pop
mov
data16
lock
xlat
dec
in
int
inc
loop
xor
sub
test
xor
inc
xor
outsl
and
imul
je
sbb
mov
ljmp
dec
aam
add
in
cwtl
mov
loopne
les
in
cmp
iret
push
test
mov
add
inc
in
cltd
push
cmpsl
fimull
nop
mov
outsl
mov
into
cmp
fcoms
sub
cmp
ret
adc
pushl
std
adc
sub
js
xorl
mov
sub
incl
sbb
adc
or
pop
jne
int3
add
out
push
adc
and
inc
outsl
cmpsb
mov
add
jg
sbb
lods
adc
inc
lock
inc
or
adc
js
fldt
outsb
adc
mov
cmp
mov
lock
xor
sarb
xchg
push
mov
out
clc
leave
jle
dec
cld
xor
mov
jne
jmp
test
fistps
pop
push
and
pop
in
xchg
clc
add
sbb
or
addr16
adc
call
cwtl
or
push
clc
inc
aad
dec
in
jns
lea
xor
fisubrl
mov
lock
sarl
push
adcl
flds
inc
sbb
jg
mov
cld
test
cmpb
jns
out
test
push
ljmp
push
sbbb
test
sub
mov
in
fs
cs
mov
movsb
cmpsl
adc
jecxz
incl
shlb
and
in
test
test
mov
xchg
push
inc
insl
and
addl
jg
xor
xor
jge
cmp
and
xor
aaa
leave
nop
and
push
adc
mov
ljmp
mov
int
shr
cmp
dec
insl
inc
testl
jmp
and
push
sbb
scas
adc
cmp
lcall
cld
mov
and
or
es
outsl
orb
xor
mov
lds
incl
sub
mov
and
fsubrs
add
add
in
or
scas
rorl
xchg
gs
call
js
rorb
or
sub
mov
pop
add
aad
ljmp
inc
ficompl
hlt
shr
out
sub
cmp
adc
incl
insb
pop
rcrb
xchg
int3
push
sbb
inc
xorl
mov
lahf
call
and
mov
rorb
les
lock
out
cli
sbb
hlt
cld
mov
add
test
jg
decl
xchg
mov
cmp
xor
mov
mov
pop
inc
loopne
xchg
xor
add
popa
sbb
int
push
jmp
add
hlt
jg
ret
cld
or
dec
mov
mov
lret
sti
dec
pop
js
sbbb
test
stc
jae
push
cmp
mov
mov
fimuls
push
js
lock
xor
bound
add
aaa
lcall
in
dec
imul
pop
mov
outsb
xchg
xor
sub
mov
mov
in
inc
ss
xor
ret
lcall
push
lcall
mov
mov
ja
call
xchg
add
rclb
clc
std
addb
outsb
cli
imul
int3
mov
incl
scas
std
adc
into
das
sbb
mov
test
rorl
push
push
jmp
jbe
nop
or
inc
jl
adc
push
xchg
lea
bound
adc
std
cmp
sbb
arpl
adc
ljmp
push
jl
mov
in
jns
sub
jmp
rorl
jg
lods
and
dec
pop
test
sub
add
sub
jmp
ret
movsl
in
pop
xchg
mov
movsb
fmull
or
dec
jg
adc
out
in
jbe
stos
repnz
ret
jmp
popf
mov
es
popaw
ljmp
jae
mov
outsb
cmp
or
jp
lds
add
mov
decl
cmp
cmp
jns
sbb
jbe
dec
popa
mov
fcomps
or
and
mov
inc
add
xor
sbb
add
call
fstpl
sub
out
cmpsl
sub
mov
jmp
sub
pop
push
iret
lahf
inc
scas
in
mov
add
jg
sar
ljmp
jp
fmull
inc
jne
or
into
mov
adc
subl
or
sub
push
hlt
add
dec
mov
mov
movsb
adc
fdivrs
ret
mov
cmpsb
jg
fmuls
std
or
push
roll
incb
ljmp
outsb
pop
or
fldl
mov
in
mov
add
dec
or
shrb
jp
push
sbb
push
dec
hlt
fldt
sbb
mov
and
sbb
xor
insl
insb
incl
xor
mov
pop
pop
fldl
call
ror
leave
sbb
mov
int3
andb
mov
orl
lcall
cmp
dec
ret
cwtl
sbbb
cmp
ret
sar
lds
ja
clc
pop
inc
imul
push
incl
dec
imul
or
push
xchg
cmp
mov
les
dec
push
fwait
sub
sub
pop
add
dec
jle
inc
mov
xchg
push
mov
sub
ja
enter
jecxz
loope
sti
xchg
xor
jb
dec
jb
inc
sub
cmp
das
test
cmp
lods
dec
pop
push
push
aad
or
xor
adc
and
daa
mov
pushl
nop
mov
add
orb
cwtl
mov
lret
add
xchg
add
jmp
fdivrp
mov
lock
mov
jg
xchg
sub
cltd
sub
push
sub
jb
ret
jbe
and
adc
rcll
mov
or
iret
jg
je
pop
pop
push
fwait
loopne
push
sub
shlb
xchg
aad
cmpsb
jg
cmp
push
adc
aas
inc
fsubr
xchg
mov
icebp
mov
jne
testb
inc
adc
stos
or
or
jg
or
cmp
adc
lock
aas
pop
call
shrb
mov
push
jp
subb
inc
aaa
mov
repz
cld
call
add
push
sbb
fmull
mov
cmp
sub
mov
mov
out
jmp
incl
test
pop
adc
jle
or
ljmp
mov
dec
loopne
call
add
sbb
mov
stos
je
ret
inc
dec
lcall
sbb
dec
xchg
add
aaa
jmp
ljmp
mov
sbbl
sbb
das
addr16
inc
insl
pop
sbb
and
int3
xor
shr
or
test
in
push
mov
stos
lcall
mulb
xor
adc
or
std
loop
jo
das
xchg
mov
shll
dec
xor
dec
mov
pushl
fdivr
jmp
xor
xor
xor
or
mov
adc
jecxz
btcl
inc
dec
ljmp
jns
and
pop
and
add
lcall
int3
je
in
test
rclb
cwtl
xor
cld
pusha
js
or
xor
sub
incl
and
jl
mov
adc
jne
adc
fstpt
push
int3
inc
add
xor
sub
repnz
mov
add
ficoms
lods
test
cmp
pop
jmp
add
insl
and
pop
pop
jmp
loop
xor
inc
sub
outsl
ljmp
clc
shlb
jo
xor
loopne
fildl
aad
je
push
mov
jmp
testb
decl
negl
push
bound
incl
aad
lock
rcrb
mov
decl
push
ret
mov
mov
adc
ss
pop
lock
loopne
push
push
sub
lret
adc
sbb
clc
sbb
test
mov
lcall
jno
add
scas
add
sub
scas
loop
xor
jmp
or
adc
or
movsb
dec
cmp
mov
jne
mov
mov
ja
cli
add
decl
incl
subl
sti
loope
jge
lret
or
incl
inc
push
push
fsubp
adc
xchg
dec
pop
jbe
lds
rorb
sub
jne
arpl
jecxz
adc
inc
movsb
lahf
inc
cmp
and
pop
and
or
aad
xor
sarl
pop
ret
lock
inc
add
lock
add
je
ret
shl
testb
or
push
lcall
scas
add
sub
inc
rcrl
cmp
test
inc
ss
jmp
int
dec
jle
ret
and
or
mov
rcr
or
shrb
push
arpl
inc
call
inc
hlt
incl
adc
push
enter
add
lock
test
test
ljmp
decb
faddl
inc
xor
jne
sbb
imul
jb
jo
lret
decl
fwait
pusha
or
lds
jmp
push
cwtl
outsb
sbb
rcll
ljmp
lods
push
push
jg
mov
jg
jl
ss
cld
ret
xor
sti
mov
xor
lock
mov
pop
rcrb
xor
jne
loop
in
inc
mov
inc
adc
sbb
into
jp
push
pop
shlb
movsl
sbb
and
mov
pop
pop
pop
mov
cwtl
xchg
sti
gs
repnz
jmp
outsb
daa
or
inc
add
xchg
lock
pushl
stos
repz
call
test
dec
pop
jbe
mov
ljmp
or
or
lea
sbb
sub
xor
decl
add
test
lods
loope
fwait
stos
inc
jecxz
jnp
js
test
add
mov
sbb
cmpsl
lods
or
mov
pushf
scas
cmc
pop
cmp
push
nop
add
jo
or
push
push
xchg
cli
sbb
fimuls
into
sbb
jmp
int
mov
je
pop
and
sbb
and
aas
or
jne
stos
mov
lds
push
jmp
cmp
popf
test
fs
or
cmp
adc
loope
mov
mov
mov
mov
das
sbbb
mov
cmp
pusha
stos
or
lcall
imul
ficoml
aas
testb
push
push
leave
outsl
imul
mov
jmp
pushf
loop
add
out
out
inc
sbb
daa
add
sbb
stos
jne
cmc
lcall
dec
add
mov
jne
or
lahf
ljmp
mov
inc
ud0
inc
sub
mov
loop
inc
xchg
mov
pop
jmp
lds
jle
push
mov
jecxz
clc
xchg
pushl
xchg
sbb
xchg
ds
adc
call
pusha
test
or
scas
decl
add
test
xor
test
lcall
inc
movl
lock
adc
test
cld
pop
loop
inc
dec
mov
ror
add
fisttpll
mov
shlb
adc
mov
decl
push
inc
fcoml
out
mov
mov
fucomi
es
cmp
sti
adc
movmskps
fiaddl
mov
mov
jmp
add
jl
xchg
push
pop
ja
movzbl
incb
sar
xor
repnz
pop
aad
outsb
add
add
roll
loopne
lea
cwtl
scas
andb
fdivs
mov
sbb
aam
adc
mov
mov
fcomps
xchg
sbb
jo
imul
lcall
aaa
mov
movsb
add
lret
shrb
add
push
pop
pop
push
ficomps
mov
std
ljmp
xor
lods
call
ljmp
andb
mov
imul
arpl
sbb
sub
mov
pushf
fildl
sbb
outsb
add
fadds
ljmp
js
lock
push
push
dec
and
in
pop
and
mov
dec
test
hlt
ljmp
es
add
scas
in
add
outsb
jge
pushl
and
das
pop
cld
or
fistpll
jg
and
mov
std
xchg
jecxz
int3
mov
mov
std
inc
repnz
cmpsb
mov
add
sub
std
mov
xor
out
xor
std
push
call
cmp
fs
nop
adc
adc
insb
fildll
js
jmp
test
add
jbe
pop
pop
inc
lds
ja
xbegin
push
ljmp
and
aas
adc
es
mov
nop
fdivp
mov
test
ljmp
add
xchg
test
dec
push
mov
movsb
lret
pusha
add
adc
pushl
cld
push
cmp
sub
scas
push
add
popa
outsb
push
xor
decl
push
adc
mov
pop
data16
inc
xchg
jbe
xor
pop
lods
jmp
pop
xchg
aaa
adc
je
lea
addr16
jae
outsb
adc
push
cmpb
cmpsb
adc
add
add
jbe
decl
mov
inc
in
sub
popa
or
and
mov
push
pop
mov
sub
ljmp
mov
andb
sbb
loop
ljmp
ds
or
push
mov
iret
add
mov
fs
push
and
test
ret
sbb
add
add
inc
push
mov
cld
mov
hlt
insb
inc
int3
test
cld
xchg
cwtl
cmp
rclb
movl
jge
xor
decl
mov
and
xchg
cmp
movsl
ja
dec
clc
test
mov
incl
sti
inc
sub
fcompl
inc
imul
fdivrl
loop
rclb
dec
push
ljmp
add
call
dec
into
mov
jo
in
jb
rcl
decl
mov
ret
ret
cld
dec
aas
mov
inc
mov
ss
jecxz
mov
add
fiadds
hlt
pusha
std
call
adc
sbb
jno
and
outsl
push
xlat
add
jno
dec
xchg
push
mov
test
lea
add
addb
aas
repnz
xchg
lock
lea
lock
mov
dec
jp
cmp
pushl
repnz
nop
ret
lock
or
jb
pusha
bound
jbe
int3
icebp
call
scas
shlb
movsl
mov
jmp
mov
dec
mov
mov
inc
sub
movsb
mov
jg
lods
inc
push
mov
xor
mov
gs
mov
cmp
iret
xchg
xor
icebp
ljmp
inc
mov
adc
push
iret
ret
inc
scas
cmp
sbbl
xor
scas
scas
loopne
shlb
je,pn
js
xorb
pusha
ret
sub
dec
jp
shrb
lock
mov
sbb
testb
push
jb
cmp
js
cmp
lcall
push
jp
xor
dec
pop
data16
cs
lock
push
jbe,pn
int3
test
ljmp
cli
xor
mov
dec
in
sub
lock
sbb
adc
adc
idiv
aaa
jo
xchg
inc
dec
push
jg
xor
fwait
cmp
cmp
scas
clc
nop
jle
loope
insb
lcall
loope
pop
pop
push
xchg
mov
das
cmp
ret
fcomip
push
incl
xorb
neg
daa
push
pop
dec
mov
stc
mov
shll
cmp
sub
shr
sbb
push
push
inc
test
adc
mov
rcrb
push
out
cmp
jg
jl,pt
fsubrs
cmp
add
or
cmpsb
or
leave
add
call
sbb
add
lret
call
or
jg
add
dec
decl
movsl
and
popf
shl
insb
sub
lcall
mov
sbb
cld
decl
movsl
inc
test
ss
add
enter
jb
rolb
add
jg
inc
jle
inc
cmpsb
popa
jno
fadds
into
push
cwtl
pop
aas
pushl
mov
js
decl
xchg
bound
fwait
sbb
roll
or
jo
rcrb
add
add
out
add
jb
sahf
test
fdivr
xchg
filds
clc
ljmp
inc
shrb
in
inc
jl
xor
jb
cmp
je
es
jae
inc
lock
jne
jle
push
and
inc
int3
mov
mov
add
mov
pop
or
bound
inc
in
jge
mov
add
outsb
leave
jnp
jge
or
cmp
popa
and
jmp
enter
rcl
insl
mov
pop
jg
pusha
das
iret
xor
cltd
decl
fidivrl
ds
ljmp
or
dec
push
push
ljmp
pop
pop
dec
cmpsl
pop
add
sub
sbb
sbbb
loopne
push
push
je
ljmp
ret
call
mov
imul
gs
and
mov
adc
and
sbb
sub
add
ret
dec
xchg
mov
push
pop
or
jb
stc
adc
mov
jmp
inc
rcll
sahf
push
btr
add
or
jnp
sbbb
push
add
int3
hlt
inc
sarb
mov
cwtl
enter
or
pop
pop
xor
imul
xor
or
punpckhbw
and
inc
adc
mov
adc
push
ja
or
pop
aam
mov
jo
dec
test
push
fsubrs
push
dec
adc
jmp
add
imul
sbb
popa
lods
inc
divl
or
call
push
insl
mov
push
lods
seto
mov
imul
pop
sub
add
cmpps
cli
mov
enter
adc
fdivl
ljmp
add
stc
pop
andl
shrl
ret
add
decl
scas
call
pop
ret
outsl
cmp
ret
ret
pusha
pop
adcl
cld
bound
mov
cli
call
dec
icebp
sub
call
mov
cmp
insl
sahf
and
in
clc
fildl
test
pusha
xchg
add
call
sub
filds
push
inc
mov
js
mov
insb
sbb
inc
pop
lods
or
add
lods
dec
jmp
adcl
adc
insb
imul
ljmp
cmpsl
aaa
pushl
add
and
jl
jle
add
sbb
xchg
lea
cmp
jns
subl
jbe
incl
or
aam
push
lds
clc
sbb
dec
or
push
jg
lea
sub
ja
jp
in
pop
jbe
sbb
lods
cs
mov
decl
bound
ljmp
sti
shl
arpl
sub
adc
pop
je
sbb
jg
stos
fcmove
adc
or
adc
sub
sub
and
mov
je
mov
jo
sahf
aaa
jae
iret
hlt
sbb
incl
jmp
jg
inc
cld
or
outsb
cli
pushl
mov
ret
sub
call
push
and
dec
jge
mov
std
mov
or
pop
and
add
mov
adc
mov
jg
ljmp
xchg
dec
sbb
sbb
or
xor
sbb
lahf
sbb
fildll
lods
adc
dec
inc
mov
add
mov
daa
outsb
add
xor
push
or
mov
sub
fs
mov
ja
add
incl
xor
xchg
mov
filds
adc
gs
mov
cmp
push
loopne
mov
pop
push
pusha
jne
sbb
xor
or
lahf
inc
cmp
and
outsb
mov
adc
inc
int
subb
inc
push
add
outsl
push
pop
sbb
mov
inc
scas
and
sbb
pop
cmc
mov
add
push
jae
pop
lret
rcrl
add
outsb
jns
into
mov
mov
add
shlb
mov
push
fcmovnb
repnz
add
sti
pop
push
mov
jb
rorl
sbb
cmp
mov
mov
pop
jae
stos
fdivr
xor
add
pop
data16
or
insb
ja
mov
cmp
in
or
rdpmc
add
into
ja
xor
sbb
xchg
scas
pop
pop
jnp
call
or
mull
imul
cmp
sub
jge
ja
sti
ljmp
fs
push
hlt
xor
sbb
push
pop
xchg
xor
rol
jne,pn
je
std
push
std
out
sbb
cmp
xor
std
sbb
cld
ljmp
rolb
mov
mov
incl
push
repnz
decl
push
imul
rolb
pop
cs
pop
cli
fs
int
xchg
push
pop
xchg
dec
cmp
shrb
lcall
loope
lock
pinsrw
leave
into
loopne
lahf
adc
push
das
cs
jg
faddp
xor
fdiv
call
ret
or
pushl
shr
push
sahf
cmp
decb
incl
sbbl
inc
fnsave
adc
xor
add
incb
cli
xorl
lds
fs
mov
mov
dec
or
call
pop
add
cmp
divb
call
ja
jg
pop
mov
fsubrl
adc
out
push
jmp
shlb
mov
or
push
cmc
das
xchg
cmc
scas
lods
je
inc
movsb
dec
stc
gs
pop
test
sbb
add
cmp
adc
cmp
lahf
or
jmp
pop
rorb
lahf
andb
jne
cltd
add
popa
adc
xchg
cltd
dec
jae
cmpsb
div
repnz
mov
clc
adc
push
mov
call
push
cmp
lds
push
and
xorb
push
fimuls
xor
pop
push
dec
mov
mov
ljmp
je
mov
out
adc
mov
stos
jge
scas
and
inc
gs
movsb
or
inc
outsb
xor
lock
inc
and
jo
dec
pop
lods
xor
ret
loop
sub
bt
stos
orb
shll
or
int
popl
ja
push
div
adc
push
jne
mov
mov
push
or
test
scas
js
mov
cmp
lcall
cmp
mov
sbb
test
call
add
mov
pop
jg
pop
popf
dec
loop
pop
add
aaa
lcall
jne
add
push
xlat
out
sub
cltd
push
in
jnp
imul
test
ja
xorb
call
cmp
out
out
lods
inc
mov
lret
or
xchg
cmp
repnz
lcall
dec
call
add
fsub
movsb
sbb
pushl
int3
int3
inc
cs
out
mov
es
test
fimull
stos
test
mov
call
lock
jmp
xchg
cmp
cmp
fiaddl
push
cmp
std
incl
outsb
xor
push
and
sub
jns
sbb
jg
adc
jl
xchg
ljmp
inc
js
pop
fabs
push
push
movsl
jo
lock
lcall
mov
push
daa
int
psllw
jl
enter
fs
filds
xchg
xor
lock
lahf
nop
lock
pop
jp
stos
scas
pop
or
inc
dec
push
ljmp
loope
cmp
movsb
in
fildl
dec
ljmp
push
fildl
cmpsb
filds
inc
pusha
add
or
incl
push
xchg
push
push
jle
ds
cmc
dec
lea
decl
ljmp
lcall
lcall
inc
movsb
push
arpl
fiaddl
das
push
add
inc
mov
js
popa
cld
fsubrs
cs
adc
in
ja
into
jno
mov
pushf
mov
fdivr
incl
cld
bound
xor
adc
push
sbb
and
sub
mov
xchg
xorb
mov
es
dec
adc
stos
imull
loopne
xchg
xorb
nop
add
aaa
cld
lcall
shlb
imul
ja
fiadds
push
xor
push
insb
incl
loopne
ret
aad
lcall
mov
call
cli
adc
clc
std
mov
movl
inc
rol
dec
add
lcall
fbstp
pop
push
fwait
cs
fs
dec
fbld
lock
out
ljmp
jnp
xchg
dec
cld
pushl
adc
punpckhwd
push
rcrb
in
loope
jg
pop
lret
sub
or
std
dec
and
xlat
jo
sub
fs
pop
inc
cld
adc
push
enter
add
ret
jp
xchg
jg
lock
pop
adc
out
jbe
fcoms
xchg
in
sbb
pushf
cmp
jb
notb
inc
loop
out
and
xchg
icebp
push
aam
cmp
jmp
sbb
aaa
cmp
sarb
adc
out
jo
cmc
fadd
add
ja
enter
jmp
data16
lcall
ss
adc
add
testb
add
jo
jmp
out
xor
lock
call
and
adc
xchg
outsb
lea
pop
out
or
xlat
add
outsl
or
fists
adc
or
into
jmp
pop
scas
xor
in
inc
mov
movsl
or
incl
and
adc
xor
pop
mov
jl
decl
push
jge
lahf
add
fwait
ret
sbb
incl
xchg
jb
add
jb
repz
cmp
mov
jo
dec
mov
inc
jno
ja
stos
or
sbb
cmp
in
fisttps
aad
pop
cld
adc
add
repz
lods
push
out
jns
cmp
call
lret
xor
mov
or
ljmp
sbb
nop
jae
subl
push
inc
jl
push
push
add
cmp
mov
cwtl
pop
lock
xor
leave
mov
fiadds
sub
push
mov
pusha
pop
sti
cs
jb
xor
ss
loop
inc
mov
lea
xlat
cwtl
cmp
and
fwait
movsb
sub
add
push
movsb
push
sub
lcall
cmp
das
jmp
pop
adc
fisubl
cmpb
push
dec
into
xor
stc
pop
cs
pushl
push
outsl
sub
sbb
xlat
push
pusha
sbb
mov
scas
mov
mov
jno
cmp
push
cs
decl
xor
mov
cmp
clc
pusha
xchg
pusha
xor
sub
or
hlt
jae
lods
jbe
xchg
fdivrp
ljmp
and
int3
adc
loopne
sub
fs
je
aas
sti
or
push
xor
or
cmp
pushl
pusha
insb
scas
pop
xor
int3
mov
insb
faddl
or
sbb
incl
pop
xchg
jle
push
push
mov
cmpsb
lcall
pop
inc
mov
add
pop
insb
js
cld
scas
lcall
and
inc
and
adc
mov
xor
inc
leave
mov
jnp
nop
cmp
mov
cwtl
or
jg
lods
cmp
outsb
mov
mov
jae
call
sub
ljmp
mov
adc
ljmp
mov
dec
add
push
pop
mov
gs
adc
xor
fdivp
clc
cmp
xchg
ret
inc
push
add
sbb
into
sbb
and
add
and
push
pop
lods
or
clc
loopne
mov
mov
mov
push
in
xchg
aam
push
jnp
les
mov
int
insb
loop
loope
std
imul
push
aam
lcall
adc
std
rcll
nop
and
shrl
mov
mov
and
rorl
test
loope
mov
mov
cld
pop
idivb
xor
mov
jg
roll
shr
cmpsb
mov
loopne
mov
fstps
mov
cmp
ret
jb
in
xor
incl
pop
rorb
orl
outsb
jns
in
dec
inc
lods
sbb
testb
pop
ss
cmp
jns
mov
fs
shrl
xchg
jle
in
cld
std
dec
call
decl
xor
es
mov
jne
into
mov
push
outsb
imul
cld
fildll
cwtl
js,pn
call
scas
adc
fidivl
cli
add
and
adc
cli
xor
popf
sub
xchg
sbbl
jg
jg
cltd
pop
or
xchg
sbb
inc
dec
adc
mov
arpl
subl
add
xor
pop
adcl
mov
stos
and
xor
in
sbb
adc
pop
fstpt
push
cmp
outsb
sbb
call
int3
add
in
jmp
mov
cmp
mov
ljmp
aam
jg
dec
dec
cmpsb
cld
jge
or
jb
stos
jne
mov
call
mov
pop
add
clc
call
cwtl
ret
rolb
mov
cmp
rcrb
ret
jg
mov
xchg
mov
shrb
sar
push
inc
pusha
jmp
dec
iret
push
mov
push
push
pop
icebp
insl
and
ret
or
mov
xlat
clc
ret
loope
adc
fwait
sbb
mov
jb
push
clc
inc
or
mov
sarb
xchg
lea
mov
or
rclb
ss
ljmp
sub
rcrb
and
decl
int3
fs
and
xor
cmp
mov
enter
nop
add
adcb
xlat
mov
fs
or
icebp
jg
incl
frstor
mov
sbb
fadds
mov
repnz
or
mov
sub
mov
pusha
incl
cld
inc
jg
enter
and
cs
jno
pop
mov
in
xor
or
sar
or
push
dec
cmp
jge
push
lock
js
push
iret
xor
sbb
icebp
adc
fwait
or
bound
push
insb
adc
cmp
jg
call
sahf
dec
sti
pusha
xor
mov
add
enter
pop
pop
jl
cli
enter
cmpb
pop
jl
pop
je
call
imul
loopne
ljmp
ja
and
mov
decl
jl
mov
and
and
mov
mov
jg
mov
push
lock
out
test
js
jl
sub
les
call
orb
loope
lea
decl
call
lock
je
xchg
pushf
mov
pushl
outsb
sbb
mov
sub
mov
mov
jg
scas
cmp
hlt
and
scas
sub
test
popf
pop
adc
lcall
inc
sub
jo
leave
mov
xchg
mov
inc
mov
mov
popa
push
aaa
push
lock
add
xorl
cmpsb
adc
xchg
call
arpl
pop
scas
es
addb
sbb
mov
andl
incl
adc
sbb
aam
push
call
add
add
add
inc
ljmp
sub
fisubs
dec
in
inc
pop
sbb
fs
cltd
xor
jg
incl
scas
xchg
jnp
mov
aaa
ds
mov
outsl
into
fs
add
incl
or
dec
leave
addb
dec
pusha
push
pop
pop
adc
mov
insl
add
enter
add
pop
push
push
clc
mov
adc
outsb
jne
or
mov
ffreep
push
push
cmp
lds
lcall
xor
adc
cltd
cmp
or
inc
pop
jae
cmp
mov
jb
inc
bound
lock
add
loop
es
int3
pop
cs
clc
enter
pop
loopne
sbb
inc
sahf
mov
test
push
clc
call
call
xchg
xchg
and
aaa
sahf
push
mov
mov
movsb
mov
push
das
xor
loope
lret
adc
mov
sbb
cs
idiv
data16
mov
mov
adc
xor
insl
bound
push
enter
push
int3
adc
aaa
push
repz
loopne
cs
call
xorb
and
xchg
cmp
mov
mov
repz
add
shrl
jmp
test
or
push
xor
pop
dec
sar
rcll
call
sbb
daa
mov
sbb
pop
sbbb
cmc
test
scas
fimull
push
xor
jae
xchg
mov
sarl
enter
jmp
enter
push
cs
call
jge
inc
cld
repz
ja
repnz
lds
inc
jg
or
call
push
or
out
pop
inc
loopne
mov
and
xor
mov
lahf
jae
push
mov
cld
xor
mov
mov
pop
pop
push
push
lret
sbb
mov
scas
add
outsl
push
add
mov
sub
push
inc
mov
add
sub
clc
incl
push
cmp
or
movsb
lock
ljmp
shlb
repnz
sbb
rorb
in
loopne
inc
or
jbe
mov
pop
imul
xor
pop
scas
inc
mov
adc
or
inc
gs
dec
fists
arpl
add
or
test
sub
fs
add
mov
frstor
inc
jg
sub
cmp
push
push
push
es
push
das
xchg
adc
cmpl
and
dec
loope
filds
call
rclb
pop
into
add
add
add
call
movb
mov
mov
das
dec
inc
insb
jecxz
cmp
jne
out
fucomip
fcomps
or
sub
clc
iret
pop
mov
mov
gs
push
inc
push
cmpb
inc
aad
or
push
jp
add
pushl
out
pop
or
jo
or
js
xchg
xor
pop
dec
fisubl
hlt
sbb
stos
mov
sbb
cld
call
sbb
aas
outsl
dec
sbb
jg
or
pushf
call
subb
mov
lock
jmp
and
and
xchg
pmulhuw
jmp
add
popa
sub
shll
lods
or
mov
push
add
test
fisttpl
das
adc
pop
pop
lds
sub
jne
ret
icebp
insb
pusha
inc
arpl
push
pushl
sbb
test
push
sbb
dec
mov
inc
dec
sbb
fs
jns
push
pop
lret
or
rolb
pushf
or
mov
das
mov
fdivs
pop
mov
loope
jnp
rcrb
inc
cmpsl
dec
add
inc
add
dec
fistps
cs
call
cli
add
lcall
or
bound
outsb
add
and
enter
lock
sub
aam
mov
fiaddl
xor
or
or
cmp
lret
add
jmp
js
call
mov
mov
in
inc
push
xor
sbb
mov
dec
loop
dec
inc
and
cmp
adc
push
cmp
pushl
push
adc
and
int3
add
mov
mov
aad
or
pushl
cld
test
xchg
gs
loopne
fimuls
mov
add
mov
clc
ljmp
scas
mov
push
and
add
das
rorb
int3
ss
mov
arpl
lods
push
jne
bnd
imul
pop
cmpsl
add
sti
pop
mov
adc
gs
incl
inc
mov
fsubl
pushl
stos
adc
cmp
orl
push
push
push
cmpsl
insl
and
es
ret
ljmp
insb
incb
std
sahf
xchg
xchg
rcll
mov
repnz
fcomi
pop
sti
arpl
cmp
xchg
ja
jne
jno
adc
sahf
sub
push
sahf
adc
gs
outsb
fbld
std
call
mov
cmpsb
sbb
repz
sbb
or
xor
decl
test
jb
jns
or
jge
fnsave
and
lret
inc
inc
jge
add
ret
mov
out
sub
in
xchg
cmpsb
mov
lea
pop
fs
inc
pop
adc
icebp
dec
sti
or
fimull
inc
leave
aaa
push
xor
mov
inc
add
test
adc
and
pushl
cmpsb
decl
fisttps
dec
xor
out
cli
lods
pusha
mov
scas
push
outsl
lea
movsl
cli
scas
mov
shl
lods
inc
xor
call
ljmp
inc
call
add
sub
in
push
pusha
pand
aaa
sub
pushl
fsubr
add
mov
and
fisubs
ud0
aas
rcr
sub
adc
sub
cs
push
ljmp
inc
dec
jg
dec
fstpt
pop
jge
mov
outsl
mov
push
pop
add
xchg
int
pushl
xor
enter
mov
adc
lahf
in
inc
loopne
jb
insb
test
decl
pop
pop
adc
add
sub
lcall
imul
leave
fidivl
xorl
scas
ffreep
add
pop
das
mov
or
xor
int
mov
push
jg
mov
jmp
jne
aad
fwait
mov
and
or
je
hlt
in
jmp
in
ljmp
cmp
notb
xchg
insl
pusha
nop
push
mov
lods
mov
push
cmp
fucomi
jno
push
push
adc
push
lcall
mov
pop
jg
sbb
add
test
fsubs
dec
movsb
setge
outsl
pop
js
mov
sub
lcall
orb
add
in
adc
pop
cmpsb
mov
fcomps
jae
and
sbb
push
adc
adc
cmc
pushl
mov
pushf
lret
enter
adc
adc
out
sub
lock
int
push
push
and
aaa
cld
jg
decl
popa
nop
pop
add
not
sar
or
or
inc
sarb
je
add
pop
mov
mov
inc
stos
and
test
aas
pop
xor
ja
scas
cmpb
shrl
call
jg
add
lret
std
cmp
xlat
inc
loop
jle
jmp
adc
decl
cmp
adc
jae
mov
in
add
incb
mov
pop
add
incl
and
cmp
fwait
jns
sub
pop
enter
push
pop
neg
les
sub
inc
inc
push
seto
orb
add
lock
gs
addl
les
ret
cmp
jmp
test
ljmp
xor
jo
mov
lock
adc
pop
rclb
adc
scas
lret
add
xchg
adc
fidivrs
pushl
cmp
push
inc
lods
and
mov
addl
add
imulb
push
pop
mov
xor
or
inc
or
fucom
mov
xchg
add
imul
pushl
cmp
stos
jle
sahf
dec
mov
and
pop
dec
sbb
lret
daa
jae
lods
adc
jg
clc
sbb
sahf
es
clc
nop
or
add
dec
call
jne
push
xchg
inc
cmp
test
mov
sbb
push
testb
or
clc
pop
ljmp
sahf
int3
jl
shll
fxch
add
push
decl
popa
adc
adc
and
ljmp
iret
pusha
mov
mov
pop
rcr
aaa
xchg
xchg
popa
aad
cmpsb
icebp
test
dec
xor
call
loopne
mov
sub
add
ficomps
add
popf
pushl
fsts
pop
inc
icebp
sti
fstpl
fsub
les
dec
sar
push
test
add
dec
mov
call
pushl
repnz
jb
jg
adc
cmpsl
adcb
push
sahf
jmp
mov
add
cld
fstpl
nop
incb
out
add
inc
insb
adc
inc
into
inc
add
mov
outsb
and
sbb
cs
jl
push
cmpsb
lahf
jb
xor
adc
sahf
inc
mov
mov
hlt
data16
dec
rcll
ljmp
scas
pop
sbb
shrl
aas
decb
adc
push
mov
xor
adc
mov
arpl
or
cli
push
aas
pop
cmpsb
inc
cmpsl
push
adc
mov
pop
loope
into
push
cmp
sbb
xor
loope
jg
les
pop
pop
inc
hlt
les
pop
in
test
hlt
sub
shrl
mov
push
xchg
rsm
stos
jne
subb
cmp
out
cmpsb
mov
add
aam
push
aad
incl
pop
ret
mov
add
pop
add
dec
jecxz
and
call
lcall
sbbl
add
pop
add
mov
mov
pop
imul
dec
je
mov
lods
fcos
mov
pop
add
xchg
lods
mov
mov
mov
fdivr
dec
sbb
cmp
sarb
xor
or
bound
cli
pushl
sbb
adc
sar
mov
mov
nop
add
xor
add
mov
or
orb
loope
dec
clc
mov
rcl
xor
cmp
sbb
lods
cmp
pop
mov
jge
faddl
mov
pop
ret
mov
mov
loope
les
nop
filds
push
cmp
push
xlat
xor
mov
mov
incl
popa
mov
xchg
lcall
jl
loopne
mov
cli
call
cmpsb
test
sbbb
cmp
clc
pop
or
mov
pop
and
inc
dec
push
add
rol
mov
pushl
push
ret
push
cmp
das
sar
adc
mov
mov
jecxz
sbb
pop
cld
pop
test
and
xchg
add
cwtl
aaa
imul
sub
ljmp
inc
push
in
mov
add
dec
pop
or
decl
mov
cmp
xchg
dec
adc
adc
jae
in
dec
aam
mov
std
jle
ljmp
lds
shl
add
les
incl
xor
dec
mov
and
scas
aad
fisubrs
out
cmp
jg
movsb
jp
cmpb
enter
push
add
adc
xchg
pop
stc
dec
sbb
lods
int3
xchg
jb
mov
mov
add
es
cld
lcall
mov
adc
pop
cmp
decl
and
inc
cmp
negb
mov
test
lcall
jg
stc
fistpl
or
incl
add
add
push
in
adc
adc
popa
out
rol
ss
mov
cmp
mov
add
addb
jne
dec
aam
les
or
aaa
sar
or
stc
cmpsb
jne
divl
add
dec
mov
incl
cmp
jne
or
push
inc
es
and
ja
mov
mov
loop
mov
add
fisubl
sbb
je
or
dec
decb
push
ret
hlt
pushl
ret
inc
fbstp
inc
js
dec
in
inc
mov
fldl
dec
rcl
push
incl
sub
xchg
add
mov
adc
stos
mov
fsubrl
aas
orl
jno
mov
mov
mov
int3
lea
rclb
jp
and
decl
adc
inc
call
js
or
jo
push
and
push
ljmp
mov
cli
mov
hlt
inc
lea
xchg
pop
mov
add
mov
add
lcall
movsb
lock
subl
jge
mov
pusha
or
add
inc
in
jmp
call
sbb
push
loope
movsl
enter
inc
mov
mov
mov
dec
xor
add
divb
loop
push
test
pop
inc
or
dec
ret
adc
cmp
mov
ljmp
push
mov
lcall
stos
add
add
popl
decl
mov
dec
fbstp
push
pop
dec
jmp
daa
fwait
das
lahf
jge
nop
push
iret
shrl
call
aam
xor
inc
cmp
xchg
in
imul
inc
mov
mov
or
mov
call
mov
ss
cmc
push
sub
les
ja
test
cmpb
aam
lods
jecxz
fimuls
mov
push
or
cmp
pop
and
pop
int3
fldenv
scas
icebp
mov
or
std
push
pop
inc
icebp
mov
and
cli
lock
js
jo
and
cli
jg
incl
and
int
lods
sub
fs
sub
cmc
inc
sub
test
rorb
mov
add
pop
add
mov
shlb
lock
bound
or
sub
mov
sahf
test
xchg
sub
xchg
push
dec
mov
jg
push
sbb
xchg
push
incb
das
adc
lea
push
je
ret
mov
scas
jg
or
ljmp
and
dec
and
mov
sub
jbe
mov
or
lds
pop
bnd
mov
adc
push
cmp
incl
arpl
int
aam
outsb
push
filds
sub
stos
outsb
jl
xor
ljmp
and
call
jne
push
sub
leave
out
sub
sbb
dec
jnp
ja
fwait
pop
mov
out
mov
mov
adc
add
pop
lock
repnz
mov
xor
jle
pushl
insl
cld
std
adc
sub
xor
call
sub
and
pop
cmp
mov
stos
mov
decl
fildll
gs
push
repnz
daa
push
mov
mov
mov
decl
add
aam
mov
xor
fists
mov
out
or
adc
jnp
sbb
xor
ljmp
adc
clc
jno
cmp
and
and
push
mov
clc
and
je,pt
or
or
or
jmp
xor
add
ds
outsb
pop
push
mov
jmp
ja
lods
jmp
les
and
out
iret
push
mov
cwtl
or
push
sub
scas
addr16
rorb
jo,pt
jmp
add
incl
fndisi(8087
jb
sbb
jne
cmp
push
clc
decl
sub
lds
outsl
mov
cmc
rorl
lcall
aam
xor
cld
cmp
jmp
sti
push
cmpb
pushf
int3
fisttps
and
sub
and
add
out
dec
rcll
jns
xor
mov
mov
push
sub
pop
ljmp
add
je
push
xchg
mov
xchg
add
dec
xor
pop
outsb
adc
add
and
push
push
aaa
inc
sbb
add
jnp
push
cmpsb
pushl
in
and
or
rolb
xor
jecxz
call
jmp
mov
pop
push
or
das
mov
jae
psubsb
push
fists
idiv
shlb
cltd
inc
in
cld
jmp
loopne
sar
push
jmp
sbb
or
fcomp
jmp
sub
ss
sbb
cs
lcall
rcrb
in
inc
mov
in
hlt
cmp
adc
xchg
pop
loop
outsl
jge
xor
adc
cmp
jmp
push
or
ljmp
movb
or
adc
push
mov
mov
sbb
push
push
daa
cwtl
xorl
mov
enter
push
jmp
xorl
or
dec
mov
jo
add
ret
shl
inc
mov
roll
incl
xchg
or
lods
or
dec
cmp
loope
sbb
add
jmp
jge
loopne
in
adc
cld
ja
dec
cld
pop
es
dec
enter
arpl
call
fstpt
sarb
cli
outsl
mov
decl
cmpsb
sbb
lea
cmpsb
insb
ljmp
call
loop
dec
sub
inc
add
pop
movsl
out
xchg
cmp
stos
xor
outsb
mov
repnz
pushf
mov
dec
jmp
std
out
or
sbb
cmpl
aad
cwtl
adc
pop
outsb
rcr
mov
andb
or
enter
adc
jbe
mov
jns
xor
push
fimull
mov
mov
ret
push
cmpb
lcall
xchg
test
fiaddl
and
sbb
pop
cli
cmpsl
push
test
pushl
popa
jmp
cmp
imul
je
add
jg
sbb
pop
inc
fwait
loopne
jmp
jg
les
call
inc
push
test
push
mov
push
or
idivl
add
jg
xor
add
xchg
sar
lcall
test
call
dec
std
cli
rolb
js
js
pop
jp
lock
pushl
pop
shrb
lcall
inc
mov
adc
decl
out
leave
or
adc
push
fcoms
sti
mov
les
jmp
dec
addr16
icebp
push
or
decl
shll
inc
add
in
lret
push
add
inc
icebp
shr
incl
divb
add
je
bound
inc
mov
xchg
js
jg
xchg
jl
mov
je
lods
jo
mov
xchg
push
dec
jp
sub
inc
outsl
stos
fstl
data16
sti
cmp
and
aaa
jb
js
pusha
jge
pop
mov
xchg
ret
cld
scas
pop
and
data16
pop
xor
push
lods
call
insb
push
into
cltd
mov
mov
fwait
push
out
add
or
je
and
jg
addb
add
adc
mov
mov
cmp
inc
aad
cmp
lock
pop
imul
adc
inc
sbb
jbe
inc
aad
hlt
decl
ret
xchg
mov
in
add
xlat
mov
inc
loopne
xor
cmp
push
add
in
pop
pop
hlt
scas
mov
add
and
ret
aaa
loop
test
dec
adc
sbb
mov
fadds
sbb
cld
adc
mov
xlat
add
shrl
cmp
stos
insb
cmp
mov
jge
xor
fcoms
scas
and
mov
hlt
or
add
pop
add
xchg
es
ds
dec
sub
je
cmp
rolb
pushl
idivb
xchg
jns
sbb
pusha
dec
cmp
lahf
aas
jge
incl
pop
ja
call
mov
push
ret
out
gs
bound
push
push
and
xor
dec
pop
mov
fldl
fsubr
adc
sahf
mov
inc
push
mov
jg
mov
pop
or
inc
xchg
inc
fstps
scas
lds
mov
dec
jae
push
std
lcall
dec
ret
mov
jg
push
incl
cmpsb
mov
call
jle
and
mov
sub
lcall
jg
push
aaa
jne
in
pop
mov
add
pushl
and
push
inc
mov
mov
sub
pushf
enter
ljmp
push
lcall
aaa
inc
and
jg
dec
sbb
test
jge
lcall
mov
in
push
push
inc
incb
xor
add
jg
mov
dec
jb
scas
pop
inc
dec
mov
push
negb
jmp
cmp
cli
mov
push
jo
mov
mov
fistl
jmp
imul
lcall
sbbb
call
adcl
jmp
mov
ds
add
xor
mov
sbb
sbb
xchg
in
popf
push
jp
aaa
jge
testb
ljmp
adc
jl
mov
imul
pop
vmovaps
incl
add
pop
sbb
je
push
push
leave
inc
mov
ds
push
and
mov
mov
push
cmpsl
cmp
or
lock
sahf
rclb
insb
cli
mov
incl
sbb
icebp
fnstcw
in
iret
jp
call
jg
fs
jl
xor
mov
mov
ja
cli
incl
push
dec
sbb
push
cmp
or
pop
sbb
jnp
mov
enter
cmp
xor
add
push
stc
jmp
mov
les
jg
call
ja
adc
sub
xor
push
test
dec
xchg
cld
decl
adc
push
xchg
cmpsl
hlt
movsl
sbb
decl
mov
addr16
adc
rorl
call
mov
mov
out
pop
mov
adc
lock
sbb
lret
pusha
cld
call
xchg
jb
fcmovne
mov
push
add
cmpb
in
lret
pop
stos
pop
pusha
lret
outsl
test
in
jmp
fisttps
jmp
fcoml
icebp
stc
sbb
pop
jmp
push
pop
xor
sti
push
nop
add
sub
nop
lock
mov
sbb
jg
jg
test
js
fcoml
add
ljmp
add
inc
stos
add
fistps
mov
rol
subb
jb
push
icebp
das
test
test
sbb
jmp
inc
push
lret
mov
ret
je
std
incl
cld
outsl
fcomps
adc
or
sbb
popa
outsl
add
cltd
in
lret
shrb
or
gs
jmp
roll
call
mov
repz
inc
jb
mov
lea
adc
fiaddl
sbb
add
inc
and
jecxz
nop
movsl
mov
insl
adc
mov
push
sbb
pop
pop
xchg
xchg
fcmovnu
push
loope
push
movsl
or
fistpll
pop
jne
jnp
add
add
dec
jg
inc
jp
dec
xchg
ja
mov
inc
pop
add
mov
or
jo
std
and
sbb
pop
pop
and
sar
xchg
and
insl
pop
mov
add
xchg
cwtl
out
popa
cmp
repz
jo
fistpll
or
inc
dec
dec
ja
call
clc
scas
insb
add
incl
cli
push
or
and
incl
lret
adc
sub
push
adc
fwait
mov
push
es
jbe
pusha
adc
jnp
insb
push
in
ret
mov
adc
lcall
xor
in
pop
or
ret
jb
fbstp
adc
pusha
cmp
jg
dec
insb
cmp
ss
and
push
cld
xor
jno
shlb
lcall
das
mov
cltd
enter
in
addb
pop
or
lret
incl
push
mov
idivb
pop
shlb
clc
push
dec
adcb
lret
ret
add
jp
ljmp
jae
std
mul
xchg
sbb
mov
push
call
std
add
xchg
hlt
int3
call
std
call
mov
inc
dec
push
and
pop
fcoml
orb
dec
mov
inc
lcall
fs
xlat
mov
xor
rclb
mov
sub
sub
ljmp
loop
or
add
lea
sub
cmpsb
jbe
xchg
mov
mov
pushl
stc
cld
loop
lds
ljmp
mov
dec
xor
sub
call
pop
mov
fnstsw
inc
sarb
adc
popf
jmp
outsl
clc
out
add
pop
pusha
add
jns
loopne
aam
mov
lds
test
das
push
inc
lods
jns
in
fcmove
lcall
sub
lock
arpl
adc
or
xor
incl
out
xor
cmp
cmp
mov
dec
ljmp
pop
rcl
push
add
jo
fldl
mov
leave
je
push
in
fdivrl
pushl
fildl
cmp
cmp
add
lea
add
add
or
ja
outsl
cmpl
lock
jmp
sub
or
pop
outsb
dec
mov
sbb
xchg
decl
or
or
cmp
lret
cmpsl
lods
aaa
nop
mov
jg
stc
stos
faddp
jg
cs
pusha
lock
mov
scas
adc
mov
icebp
push
or
dec
ja
inc
jp
add
popf
cmp
std
push
rcl
jns
fldt
xlat
ljmp
inc
cmpsb
xlat
shll
std
call
mov
lock
mov
push
xchg
sbb
sti
sub
xor
push
add
xlat
cmp
xchg
push
add
lock
adc
mov
mov
xor
xor
cmp
push
jge
inc
pop
jge
aas
or
lock
push
clc
mov
lea
int3
or
or
lds
hlt
or
incl
rol
decl
punpckhdq
jb
scas
xor
mov
jg
inc
incl
sbb
xor
add
rcrl
lret
les
mov
push
add
sbb
push
xchg
sar
roll
rolb
jbe
xor
mov
pop
enter
mov
pop
or
inc
mov
into
repz
sar
ljmp
xchg
mov
inc
aam
dec
add
mov
fdivs
test
adc
pop
ficompl
pusha
ja
loopne
inc
mov
roll
push
xabort
ja
int3
inc
fisttpll
cvtps2pi
mov
cld
testb
test
xchg
jmp
cmp
push
pop
xchg
jnp
decb
inc
mov
mov
mov
cld
mov
xorb
inc
fisttpll
call
push
pinsrw
lret
les
roll
sub
sbb
dec
xchg
push
lods
mov
xchg
lock
mov
pop
dec
stos
insb
loopne
push
or
test
dec
jge
call
cmp
fcmovb
ret
ljmp
adc
or
stos
decl
dec
push
sbb
sub
adc
xchg
push
jne
pop
cmp
pop
cld
pushl
push
mov
iret
mov
cmpsb
sub
or
in
daa
jne
js
jmp
pop
insb
cmp
scas
xor
inc
ret
adc
mov
jle
sub
ret
test
xchg
scas
incl
mov
adc
neg
incl
ljmp
clc
add
in
arpl
es
mov
pop
xchg
adc
cmp
loopne
popf
cld
jmp
lcall
inc
out
adc
or
cmp
mov
dec
add
ficompl
mov
jne
push
rol
add
jmp
push
lds
les
or
lock
jg
das
in
dec
adc
xchg
inc
lock
xor
mov
out
loopne
jb
add
push
dec
sar
xlat
int
jmp
sub
popf
sub
cli
ljmp
mov
fbstp
cli
fstl
mov
add
loop
icebp
decl
jae
pushl
in
aad
pop
ficoms
rolb
cld
mov
xor
fucomp
mov
sbb
xlat
das
rorb
les
insb
ljmp
jg
mov
loop
mov
mov
test
pop
test
jmp
adc
or
sar
clc
into
adc
adc
js
jb
arpl
push
rcrl
daa
ret
lock
ljmp
hlt
fxam
hlt
sbb
dec
mov
pop
cmpb
add
stos
and
adc
cmp
jb
add
fisubs
inc
scas
sub
jne
stos
outsl
insb
xor
or
xlat
add
sbb
sbb
dec
push
decl
jecxz
scas
push
pop
adc
lcall
sub
roll
test
call
outsb
imul
rorl
or
popf
fidivrl
xor
adc
sbb
shlb
or
ljmp
push
inc
jbe
movsb
pop
icebp
jne
add
in
jne
test
call
shl
pop
or
mov
mov
mov
rorb
push
insl
daa
mov
int
ljmp
cmpl
mov
fbstp
hlt
adc
out
ret
add
sbb
or
ret
xor
mov
push
std
sbb
xchg
add
lock
mov
sti
jns
jp
add
imul
mov
xor
mov
xor
ja
and
outsb
test
pushl
mov
jg
xchg
jo
add
cmp
sub
ja
test
movsb
push
or
sti
push
ljmp
sar
pop
push
repnz
mov
ret
imul
push
dec
inc
pop
pop
xchg
inc
sub
pop
jge
adc
insl
hlt
adc
add
bound
filds
mov
xor
andb
xchg
jns
add
adc
addl
sub
push
mov
mov
es
hlt
cmp
aas
push
mov
mov
sbb
fst
xchg
lods
mov
pushl
xchg
imulb
push
xchg
dec
cmp
sarl
lods
cs
faddl
das
adc
or
sub
ljmp
inc
push
repz
sub
ljmp
xchg
imul
sarb
call
shr
ret
inc
cmp
subb
adc
clc
ljmp
adc
sahf
pop
mov
xorb
mov
ljmp
push
add
or
icebp
cmp
push
ds
hlt
mov
mov
adc
jg
lods
lcall
bound
sub
aas
add
aaa
imul
pushl
inc
les
pushf
inc
in
and
inc
push
es
inc
filds
outsb
add
push
pushf
sub
pushaw
push
jg
and
push
or
cmp
outsl
or
push
ds
les
sub
or
mov
add
pop
adc
orl
push
das
mov
scas
xchg
pop
idiv
decl
mov
dec
cld
idivb
xor
xor
push
mov
decl
dec
shlb
addl
sub
sahf
out
and
sbb
lea
jns
aam
sub
and
sbb
popa
or
stos
lcall
cmp
cmp
push
insw
ret
fiadds
fsubl
incl
ja
sub
leave
cld
mov
call
inc
divl
shrb
repnz
decl
adc
or
cld
add
add
mov
dec
adc
test
mov
lcall
imul
repnz
outsb
mov
mov
jle
cli
call
mov
inc
popa
cld
pop
fsubrl
or
inc
cld
mov
cmpsb
jo
dec
fisttps
incl
inc
loopne
xchg
inc
dec
cmp
push
call
fiadds
adc
dec
outsl
ror
pop
call
add
add
mov
add
aaa
jmp
imul
mov
push
aaa
outsl
jge
nop
cmp
nop
pop
adc
mov
addr16
inc
repz
insb
std
xchg
icebp
shll
mov
int3
jne
aam
in
pop
mov
mov
or
gs
push
outsb
jl
add
add
jmp
test
cmpb
insl
push
pushl
cmp
loope
pop
add
jecxz
ret
push
call
fwait
out
les
or
call
push
cmp
jl
xchg
cli
add
cmpsb
fbld
loopne
dec
mov
in
xor
imul
roll
inc
push
fiadds
lahf
outsb
ret
push
add
mov
jge
push
mov
test
popf
ljmp
pop
inc
adc
cli
incl
push
and
jo,pt
cli
insb
mov
pushf
fs
out
lock
add
mov
orl
pushl
add
add
jo
add
call
call
jo
in
sbb
jmp
call
loop
pusha
sbb
inc
cmp
cwtl
cmc
jmp
push
mov
jb
add
sub
pop
jmp
inc
jp
add
mov
lods
xchg
decl
add
lods
sub
mov
mov
cmp
aam
inc
push
pop
adc
call
aam
or
lods
or
adc
add
push
js
decl
int3
cld
sub
sbb
in
jne
and
adc
cltd
mov
push
jo
dec
filds
adc
sub
adc
adc
pop
sub
clc
pop
lcall
sahf
sbb
xor
mov
mov
es
je
inc
shlb
jb
ljmp
mov
aas
jg
ds
jle
pop
pushl
test
test
jne
stos
add
dec
je
and
cmp
push
outsl
xchg
lock
insb
rolb
insb
push
jmp
and
add
jp
or
sbb
pop
ljmp
push
loopne
jns
aaa
test
pop
push
lds
imul
daa
or
mov
xor
sahf
test
sahf
pusha
xchg
jbe
mov
fildl
lcall
ret
xchg
cs
push
popf
mov
push
scas
ljmp
jl
jg
imul
or
inc
xor
cli
push
push
aas
les
push
fldl
dec
pop
mov
clc
push
cmp
mov
enter
scas
xchg
mov
call
mov
and
fbstp
inc
fcomip
call
and
add
loop
jmp
hlt
push
add
xorb
or
xrelease
mov
mov
push
or
out
pusha
in
incl
mov
add
push
jp
call
aaa
nop
lods
and
call
jnp
faddl
cmpsb
stos
pop
push
adc
adc
outsl
pop
ret
cs
push
xchg
mov
std
fcomip
ljmp
mov
xor
es
call
sbbl
dec
dec
pop
and
ja
jns
test
aaa
clc
pop
in
std
pop
sbbb
jg
ljmp
adc
or
rolb
mov
mov
scas
and
shll
cld
outsb
mov
cmp
inc
std
nop
ds
cli
das
or
push
ud0
incl
adc
cmp
js
ss
sub
fs
jecxz
std
inc
add
imul
jmp
sbb
testb
mov
or
addl
lock
xchg
dec
mov
xor
xor
out
pushl
cli
jbe
aas
mov
push
mov
xchg
scas
call
push
dec
ficompl
out
int3
mov
mov
or
add
and
std
outsl
xchg
sbb
aas
cmp
lcall
mov
icebp
sbb
add
icebp
movsb
lcall
daa
cwtl
mov
pop
dec
adc
insb
jno
loope
scas
mov
add
cld
adc
pop
das
clc
jno
mov
or
jge
push
outsl
insl
mov
jae
and
xchg
xchg
mov
popa
cmpsb
or
data16
or
jmp
insb
jmp
cvtdq2ps
shll
adc
mov
add
ds
ret
cli
fisttpll
inc
add
xchg
xor
into
inc
incl
test
and
or
sub
dec
pop
push
mov
call
and
xor
into
or
add
push
pop
sbb
loope
addb
scas
inc
pop
outsb
call
jae
push
xor
or
pushl
add
ds
mov
adc
mov
push
out
jl
sub
or
push
sarl
or
divb
outsb
int3
pop
js
add
repnz
xchg
es
stos
sub
or
pop
shlb
pop
inc
push
adc
push
mov
pop
inc
inc
add
enter
xchg
add
filds
and
call
cld
lcall
or
call
insb
and
mov
mov
scas
je
adc
scas
adc
insl
out
sbb
stos
and
push
cmpsb
fwait
mov
call
push
jbe
pop
mov
add
sbb
push
insb
pop
or
dec
lret
push
add
cmp
cli
dec
xor
fadds
punpckldq
rorb
test
cs
push
movl
inc
pop
fbstp
or
add
mov
and
mov
and
fildl
loopne
incl
enter
mov
incl
pop
adc
sub
call
ja
ret
jmp
incl
xor
mov
inc
out
nop
mov
pusha
mov
bound
xchg
es
inc
dec
or
mov
sbb
insb
adc
sahf
call
sbb
and
filds
xchg
push
test
decl
cmp
push
push
filds
dec
aad
popa
insb
xor
push
int3
mov
push
adc
cmpsl
or
repnz
adc
idiv
jmp
xchg
or
or
mov
scas
mov
push
incl
sub
das
movb
data16
cmpsl
dec
adc
jae
ljmp
mov
dec
sbb
push
xlat
test
sub
pop
mov
jb
fs
pop
adc
pushf
jmp
ret
scas
mov
sti
aas
jno
fcompl
push
pop
fmuls
imul
aas
decl
inc
mov
ret
xor
clc
pop
pushl
insb
mov
or
insl
popa
dec
cmp
mov
cmp
nop
ljmp
mov
lahf
mov
fisttps
aam
adc
mov
iret
popf
shl
subb
jbe
pop
and
test
lret
std
jg
movb
aam
jg
sbb
xchg
cld
pop
les
loop
adc
adc
add
adc
dec
icebp
faddl
ss
ljmp
fistps
mov
mov
int
mov
ljmp
into
mov
test
mov
inc
fsubs
mov
adc
gs
push
push
decl
and
aas
sti
es
jmp
add
js
dec
dec
mov
jo
adc
pop
jno
push
sbb
scas
or
jae
fistl
int
mov
or
sub
mov
push
pushf
xchg
ljmp
icebp
sbb
sbb
dec
jge
pmaxub
add
loope
push
js
ds
int
aas
cs
std
jmp
mov
ret
sahf
loop
fimuls
loopne
jg
inc
push
std
xchg
out
jmp
shrb
adc
icebp
pop
push
les
lret
mov
xchg
movsb
push
mov
jl
sub
mov
jmp
jp
clc
push
ret
pop
lods
lcall
fcomps
js
xor
fisttpl
push
adc
cmpl
inc
idiv
mov
faddl
nop
call
mov
imul
push
iret
jmp
pushl
je
out
stos
and
push
and
lock
and
call
mov
cmc
add
xor
lcall
shll
adc
jl
fsubs
jg
xchg
mov
or
inc
xor
lock
cmpsb
add
call
push
cli
std
jne
test
mov
jo
dec
inc
xchg
les
test
xorl
push
outsb
dec
dec
in
insb
pop
call
stos
rorb
jbe
add
pop
stc
adc
xor
sbb
adc
aaa
gs
jg
cld
fs
cmpsl
or
jmp
outsl
pop
mov
mov
in
fdivs
outsl
fmull
decl
cmp
sub
mov
lods
pop
out
sub
shl
xchg
ret
jecxz
addl
incb
cs
ljmp
pop
popa
push
mov
call
mov
pop
imulb
insb
push
clc
lcall
into
andl
cmp
decl
cmp
aas
or
cwtl
jo
jle
ss
adc
xchg
or
xchg
or
decl
mov
inc
add
ljmp
daa
xlat
outsl
cmp
out
subl
push
ljmp
xor
rcrl
jg
push
inc
es
jb
push
dec
filds
sbb
data16
add
add
adc
call
jae
push
inc
mov
jg
mov
mov
js
mov
outsb
mov
xchg
adc
jmp
data16
incl
jl
push
icebp
cmp
repz
dec
pop
je
aas
sar
push
hlt
pushl
push
fs
sbb
inc
and
mov
nop
das
push
cmc
popf
jp
cld
out
or
mov
sbb
mov
faddp
push
mov
popa
imul
test
mov
sbb
add
sub
xchg
adc
xchg
incl
mov
push
rcl
inc
lret
pop
jmp
cvtps2pd
cli
decl
sub
and
sbb
adc
inc
push
sbb
movsb
and
push
push
cmp
add
mov
or
je
inc
mov
jo
mov
mulw
cwtl
mov
cmpsb
scas
sahf
mov
lcall
cmp
ret
mov
daa
mov
cwtl
bound
adc
in
call
pop
push
cmp
jne
es
sub
cmpsb
call
add
pop
sar
sbb
mov
nop
es
fidivs
push
decl
and
loop
test
test
scas
adc
into
ss
fsubp
pop
jo
scas
add
addb
sbb
lret
mov
inc
pop
cmp
ljmp
outsb
sahf
repnz
sahf
push
push
mov
inc
enter
mov
int
in
add
mov
std
ljmp
and
jmp
or
shlb
cmp
lcall
outsl
inc
in
jmp
push
push
pop
cs
ds
push
xor
inc
cmpsb
or
incl
or
subl
fdivl
mov
or
push
decl
je
je
imul
js
pop
add
decl
loope
sub
push
dec
jnp
inc
decl
stos
xor
add
adc
pop
loopne
xchg
mov
push
ficomps
hlt
sub
mov
jmp
mov
ja
add
in
or
mov
or
xor
push
lret
loope
call
mov
sbb
push
adc
test
imulb
ja
adc
sbb
lret
ret
lcall
push
mulb
loopne
aaa
lcall
es
js
push
pop
lock
add
or
pop
mov
outsl
push
jmp
lcall
in
lcall
mov
cmp
and
jecxz
xlat
pop
inc
outsl
aaa
cmpsb
in
pop
negb
sbb
pop
dec
push
or
lds
xchg
ja
pusha
or
xchg
fildl
xchg
mov
imul
lock
das
sub
push
mov
sub
pushl
and
or
sub
xchg
mov
outsb
mov
and
dec
inc
xchg
popl
outsb
inc
es
cmc
cmp
lahf
jle
or
stos
push
sub
sub
aaa
inc
mov
and
xchg
sub
dec
push
sbb
or
mov
iret
ljmp
rorb
add
movups
push
iret
mov
xchg
call
loopne
mov
clc
call
sar
fcomip
fbld
and
out
stos
inc
xchg
push
xchg
jg
and
lea
mov
les
jns
mov
or
cmp
nop
int
or
add
sbb
mov
shrb
notb
jae
dec
bound
stos
pop
mov
ret
adc
std
pushl
jl
hlt
test
clc
test
arpl
movb
pushl
jp
sahf
mov
mov
sub
push
cmp
mov
xchg
jo
pop
js
fcomip
jmp
pop
sahf
push
push
jne
addr16
daa
mov
dec
add
jo
decl
and
clc
lods
adc
adc
xor
mov
mov
call
push
test
push
or
adc
addr16
mov
mov
subl
xchg
jmp
loope
hlt
scas
cmp
add
filds
data16
outsl
movsb
sub
incl
decl
scas
cmp
add
pop
es
xor
je
sar
cmp
push
cwtl
aam
lcall
push
movsb
lret
xchg
cmc
pop
mov
add
cmp
in
lods
nop
inc
or
les
mov
dec
add
xchg
ficoms
mov
inc
test
loop
mov
sub
cmp
aam
adc
pushl
and
dec
pushf
inc
movsl
hlt
outsl
dec
gs
and
or
add
fbstp
mov
jg
sub
or
ret
push
aas
xchg
jb
pop
sub
mov
jne
pminsw
mov
iret
mov
or
add
stc
das
push
movsb
in
pushl
incl
xor
cmpsb
cs
addr16
dec
test
and
mov
cmp
adc
ljmp
push
lods
mov
sbb
mov
int3
aaa
push
fidivs
adc
push
in
push
and
out
push
jge
sub
decl
mov
call
ret
jns
cmp
dec
leave
jg
subl
mov
inc
outsl
scas
jne
hlt
jl
jnp
pop
insl
mov
test
cmp
pop
xchg
rorb
pushf
pop
xor
jne
push
add
fwait
or
clc
call
test
or
pop
test
jo
in
repz
jg
mov
neg
into
add
call
adc
addb
and
or
call
sahf
push
adcl
insl
hlt
sahf
std
or
push
lock
decl
clc
cld
daa
mov
add
or
scas
ss
xchg
mov
daa
sub
mov
jmp
add
jl
adc
lcall
inc
or
fcmovnb
sbb
push
push
jg
mov
push
mov
aaa
adc
mov
xor
mov
inc
dec
add
fsub
shrb
popa
push
lret
mov
fsub
fcos
filds
cmc
mov
das
aaa
dec
jmp
adc
jmp
ljmp
mov
leave
movsb
fisttpl
orl
mov
pushl
ficoml
inc
jmp
and
push
jmp
sub
and
push
xchg
lahf
sub
cld
in
mov
cmp
shrb
pusha
add
pop
adc
mov
loop
movsb
jbe
push
xor
lock
fisubrs
loop
insl
push
cmc
ret
pushl
push
xor
adcl
cld
push
roll
cli
mov
int3
jbe
scas
scas
jecxz
push
pop
fsub
in
lock
faddl
inc
jecxz
and
call
rolb
or
hlt
xor
inc
ret
sar
call
imul
adc
and
jmp
call
loopne
pop
or
fs
lea
clc
cmp
jo
call
pop
mov
rolb
xor
add
sbb
icebp
mov
pusha
mov
jecxz
or
clc
dec
adc
mov
pop
das
or
mov
pop
jmp
push
das
lds
call
push
inc
add
push
mov
filds
xor
jne
lock
mov
ja
clc
add
xchg
loope
dec
int3
dec
mov
mov
add
ja
xchg
fists
add
or
out
xor
mov
lods
test
jmp
in
outsl
inc
je
push
jne
in
dec
rcll
or
repnz
idiv
subb
mov
jmp
and
movsl
mov
decl
repz
sti
std
xchg
sti
pop
cmpsb
jne
or
inc
aas
jge
dec
cmp
or
mov
decl
lret
lds
add
lret
xchg
mov
lds
sub
dec
add
pop
enter
jmp
bound
xchg
mov
mov
jns
loopne
inc
jne
ror
adc
rolb
push
add
cli
xor
add
add
or
mov
add
adc
ljmp
fisttps
test
xor
xor
xor
xor
clc
add
loop
mov
mov
mov
into
mov
mov
dec
or
loopne
loope
pop
cmpsb
mov
cmp
scas
pop
mov
lcall
mov
add
adc
flds
lcall
test
cmp
ret
or
lcall
iret
in
shlb
ja
add
ljmp
push
shl
mov
pop
lock
cmp
lds
clc
roll
adc
mov
incl
andl
fildl
shr
sbb
sub
and
or
and
aad
sbbb
push
mov
mov
fmull
repz
decl
mov
loop
in
out
ljmp
aaa
std
ljmp
adc
subl
cmpsl
sub
fcmovbe
add
jp
dec
cmpsb
sarl
mov
mov
fcomip
sbb
dec
or
mov
outsb
jge
test
or
imul
mov
inc
aam
call
push
sub
lock
dec
icebp
inc
scas
mov
movsl
xchg
shll
xbegin
and
lea
sar
adc
mov
sub
ficoms
push
call
pop
add
fiadds
sbb
cli
in
lcall
pop
jno
cmp
dec
leave
lret
sbb
push
scas
daa
ds
add
call
xor
sub
lcall
cmp
jmp
dec
or
mov
xchg
mov
cld
mov
lcall
jg
or
xor
and
pop
loop
dec
mov
xor
cwtl
enter
ljmp
addb
nop
sbb
jnp
add
aaa
and
adc
push
sub
ljmp
cli
negb
push
in
in
lock
pusha
xchg
iret
xorl
dec
sahf
cmpsb
out
add
ljmp
cmpsb
scas
mov
or
jmp
sarb
mov
cmpsl
jl
adc
cmp
lcall
aas
jle
jnp
test
jle
jge
cs
mov
sbb
call
daa
inc
or
fistl
cmp
cs
pushl
or
fisttpll
js
jns
cli
aaa
cwtl
and
or
loop
pop
nop
mov
hlt
ret
cmp
jne
jg
roll
mov
or
repnz
and
aaa
jge
push
sub
addr16
fwait
incl
push
xor
sahf
iret
out
pop
andb
xor
mov
sti
mov
test
or
out
cmp
xor
lret
mov
inc
call
sub
scas
shrl
lcall
sub
xor
shll
inc
push
jl
movsb
loop
push
mov
push
inc
mov
cmp
pop
add
clc
lcall
jl
cmp
hlt
orb
popf
jg
ljmp
or
sti
fsubrs
dec
dec
inc
mov
mov
faddl
jnp
movsb
loop
xor
dec
aad
mov
jmp
cwtl
leave
add
add
in
fwait
pop
xchg
sub
maxps
sbb
xor
ret
or
jecxz
cmp
mov
jne
mov
jmp
lret
lea
and
aad
inc
push
shlb
adc
lcall
negb
xor
fdivrl
sub
xor
andb
pop
jl
add
scas
iret
call
shrb
sarl
mov
sbb
jle
cmc
fcomps
jmp
add
jl
ficoml
dec
adc
pop
clc
mov
outsl
and
xor
inc
push
push
in
pop
cmp
inc
gs
out
adc
push
lret
enter
sti
adc
cmp
mov
pusha
testb
cli
cmp
ss
jmp
aaa
std
lcall
pop
cmpsb
sti
pop
add
ljmp
add
clc
mov
test
pop
add
sbb
inc
mov
test
pop
lods
add
std
jg
push
and
xor
inc
add
arpl
movl
xor
je
fildll
je
mov
out
aas
xchg
sub
push
call
out
cli
ljmp
call
pop
sbbb
leave
call
adc
mov
cmpsb
and
pop
std
ja
push
xchg
push
mov
mov
fmul
scas
jne
jg
cld
adc
inc
push
incl
dec
xor
pop
jmp
enter
aam
and
add
lods
in
inc
pop
add
int3
movsb
fcoml
stos
xor
loopne
push
mov
outsb
pop
dec
mov
sbb
fildll
mov
fbld
and
jecxz
or
loop
ljmp
sub
leave
movsb
xchg
push
ljmp
jb
cltd
ret
add
push
add
bound
out
stos
jg
ffree
rorl
mov
out
xlat
push
pop
push
in
cmp
cmpl
xchg
mov
xor
fisttps
imul
in
addb
dec
push
in
push
js
mov
lret
inc
xchg
pusha
fisttps
dec
jl
mov
test
sub
xor
out
cli
gs
adc
clc
jmp
stos
mov
and
mov
hlt
call
mov
test
pusha
jl
xchg
push
or
pop
cmpsb
or
push
or
push
test
imul
test
xchg
cmp
test
lret
sar
aaa
push
dec
cld
pop
push
test
test
push
cmp
push
pop
clc
mov
cli
push
cld
js
adc
adc
push
xchg
inc
rcll
lods
add
xchg
es
pop
jo
movsb
pop
xor
mov
mov
or
incl
lea
fimuls
sbb
inc
bound
dec
jge
call
test
cwtl
ljmp
ret
add
inc
loopne
adc
std
inc
add
ja
clc
fidivrs
jg
lcall
ret
ret
inc
dec
clc
mov
and
mov
lods
iret
pusha
gs
ja
sar
xor
in
or
test
in
std
call
and
xor
cmpsb
ss
mov
dec
rcrb
sub
or
into
shl
mov
mov
decl
movsb
push
and
nop
mov
xor
add
lcall
mov
inc
pop
xor
in
fsubrl
mov
xor
push
mov
js
jo
ljmp
ss
adc
or
inc
adc
lret
adc
cmp
shl
ret
in
jecxz
xchg
pop
mov
das
inc
inc
cmp
clc
sub
popa
push
sbb
hlt
push
in
out
cmpl
xorl
cltd
sbb
loopne
int3
cmp
dec
sub
out
sbb
out
jb
ja
dec
cmp
ljmp
data16
fwait
ljmp
pop
dec
push
incl
pop
ss
fdivl
or
mov
mov
cs
or
fbld
xchg
out
cld
dec
sarb
jmp
jmp
push
sbb
nop
imul
mov
or
hlt
jg
loopne
test
pop
outsb
sbb
push
pop
in
rolb
inc
push
pop
sbb
dec
push
pushl
into
sub
call
std
xabort
incl
out
leave
sbb
sbb
cld
sub
jmp
aaa
insb
dec
outsl
clc
ljmp
jno
mov
push
idiv
or
xchg
pop
ret
fs
out
ss
lcall
js
inc
arpl
stos
jne
lods
pop
add
jl
insb
mov
inc
mov
ljmp
jge
jecxz
sub
cmp
movsb
icebp
xor
or
rorb
and
push
sar
sub
push
adc
or
push
je
sbb
leave
cmp
inc
sbb
pop
cmp
das
or
xchg
inc
xor
push
mov
cmpsl
xor
popa
das
scas
fcomip
cmpsb
mov
sbb
enter
stos
add
mov
enter
mov
sbb
or
js
mov
or
jl
jbe
mov
ljmp
stc
push
xor
lea
aam
outsb
mov
cwtl
shrb
jbe
sbb
hlt
incl
sahf
pusha
cld
outsb
and
mov
push
push
push
jmp
sub
and
mov
lcall
rcrl
push
push
push
lods
out
lock
adc
subl
ljmp
push
enter
jle
xorb
xor
adc
xchg
xor
test
decl
push
jo,pn
adc
cmp
orb
inc
push
mov
or
adcb
fcmovnb
js
movl
adc
lahf
and
push
repnz
or
pop
or
rclb
pop
adc
inc
int3
jmp
sbb
mov
cwtl
and
clc
mov
decl
fwait
push
jge
and
test
lock
jmp
add
mov
cwtl
mov
into
and
inc
and
or
adc
push
nop
mov
cli
push
js
in
cmp
add
sarb
pop
call
fidivrl
in
mov
jne
fistps
sbb
add
loope
or
aad
movsb
add
cli
pusha
mov
orl
mov
ja
jb
test
daa
jo
or
xor
call
or
repz
adc
inc
mov
sbb
ret
add
lea
or
mov
jb
dec
dec
mov
ret
add
ss
ret
ljmp
repnz
jl
mov
scas
clc
imul
jle
in
popf
cmpsl
lods
arpl
decl
fimull
ret
popa
cmp
mov
fwait
inc
xor
add
sar
out
lods
fwait
fs
shlb
inc
jbe
mov
mov
xchg
sar
adc
jmp
inc
jb
xor
orb
aad
loopne
mov
sbb
inc
dec
lods
mov
mov
into
sub
lcall
or
stc
and
sub
rclb
rol
inc
cmpb
outsl
xchg
pop
clc
shll
mov
lcall
in
xchg
add
movsb
adc
jl
push
pop
das
push
pop
je
dec
and
shlb
push
sbb
jmp
lahf
jmp
lcall
mov
sti
add
jae
lret
clc
test
sar
push
jne
out
int3
movsb
dec
mov
sub
lret
sar
push
add
mov
inc
cmp
test
sbb
dec
test
rolw
movsb
mov
aaa
push
xor
push
js
lds
sub
insl
adc
cmp
fwait
stos
call
jae
andb
decb
push
je
adc
add
sbb
shlb
push
hlt
loopne
js
cwtl
outsl
sub
jbe
in
sahf
mov
dec
push
cltd
clc
sub
sub
pop
cmp
call
xor
incl
imul
add
imul
imul
ror
test
in
cmpsb
test
lret
jl
push
scas
subl
cmp
and
inc
mov
icebp
fwait
cld
jo
pop
add
dec
pop
shl
int3
aad
out
int
ja
push
lcall
xor
out
xor
mov
xor
push
xor
shlb
push
lods
je
ljmp
mov
xchg
fadd
dec
lea
fidivl
or
sub
call
or
push
loopne
jo
divl
push
xchg
xchg
inc
cmpsb
leave
or
ja
push
hlt
in
pop
push
inc
sbb
xor
cmc
push
or
add
call
repz
or
rorb
inc
inc
and
sub
andl
ret
dec
mov
sub
lret
and
dec
cld
dec
inc
sub
call
dec
int3
push
addl
push
fistpl
inc
add
jp
lock
lcall
hlt
mov
mov
iret
jb
inc
out
push
sti
call
pushl
xlat
icebp
daa
cli
ljmp
cli
cmp
adc
add
call
pop
xor
mov
or
and
sahf
lods
mov
fcoms
das
rorb
dec
shrb
add
xor
call
and
fwait
mov
int3
mov
push
ljmp
imul
xchg
es
mov
icebp
jo
pop
mov
das
xor
loope
mov
lahf
frstor
ret
jmp
or
dec
mov
lcall
les
rorb
inc
sbb
inc
inc
xorl
mov
call
rcr
cmp
xchg
xor
sti
daa
xchg
pop
and
add
inc
les
dec
mov
mov
push
aaa
call
mov
je
xor
andps
xorb
xor
or
lds
adc
test
jle
adc
lcall
add
iret
out
xchg
adc
xor
add
jmp
ljmp
lret
pop
xor
iret
in
jbe
call
rcrl
test
ret
cld
sbb
adc
add
pop
jmp
imulb
add
add
xor
mov
cmp
dec
in
in
sti
push
lret
cmp
jo
mov
mov
mov
fnstsw
cmp
xor
incl
les
mov
aaa
mov
or
jmp
dec
data16
lcall
les
shlb
inc
inc
scas
aaa
rol
jg
xor
mov
pop
outsb
mov
mov
add
or
mov
add
ss
mov
fucomip
aam
push
adc
inc
add
cmp
mov
call
mov
cmp
push
mov
hlt
push
push
xor
mov
lods
sarb
xor
adc
loopne
js
in
addb
sub
aaa
adc
ljmp
add
lea
in
cmp
sub
lods
jmp
repnz
xor
decl
push
test
adcl
aam
mov
add
add
or
mov
push
pop
adc
pop
jne
cmp
mov
fcomip
incl
push
fsqrt
push
pop
push
ret
fiadds
mov
decl
sub
inc
mov
ja
cwtl
outsb
mov
aam
jne
lock
cmp
ljmp
xor
mov
into
rcl
fcos
sbb
lock
icebp
out
repnz
daa
decl
imul
loop
call
jl
xor
and
sub
mov
add
test
imull
push
jg
xchg
mov
in
jno
fs
popa
addr16
out
xchg
cmp
cltd
je
mov
fsubs
repnz
add
xchg
aas
pop
dec
shl
std
or
loope
sub
push
loop
adc
add
push
jmp
notb
movsl
mov
repnz
inc
das
les
sub
call
outsb
mov
adc
jecxz
adc
imul
dec
inc
decl
lock
add
xchg
xchg
adc
push
rorb
addb
cmp
cli
outsl
and
mov
ret
dec
loop
loope
ja
js
jmp
inc
add
and
mov
pop
mov
loopne
aaa
push
in
jb
pusha
jp
fbstp
adc
jg
test
inc
pop
jge
mov
mov
jmp
push
insb
fst
or
inc
popf
push
lods
aad
sbb
sarb
jmp
or
mov
aad
negb
fs
std
stos
incl
gs
xchg
movsb
push
and
fdivrp
ja
rcrb
mov
int
leave
sbb
add
inc
dec
je
clc
add
test
pop
ja
pop
jp
mov
adc
sbb
dec
lods
push
cli
sbb
mov
lock
cmp
push
jecxz
jne
jmp
imul
and
call
fsubrl
lock
sar
outsl
mov
jl
lret
sub
loop
xchg
loop
mov
lods
lcall
pop
inc
pop
jle
stos
pop
add
pushl
cli
mov
inc
adc
lcall
std
sbb
jp
lret
mov
push
inc
call
push
push
cli
add
hlt
ljmp
jg
pusha
xor
call
fs
aas
add
cmp
fisubs
mov
or
adc
hlt
cmp
xchg
pop
mov
decl
stos
call
rorb
and
dec
push
je
sbb
fiadds
sbb
fsubrs
dec
mov
push
pop
ret
inc
call
test
decl
push
notl
mov
jbe
pop
add
mov
cmpsl
dec
loop
movsl
jp
xchg
pop
mov
test
add
decl
stos
incl
jmp
insb
pop
mov
add
dec
test
sub
adc
stos
add
push
inc
sub
add
cmp
mov
pop
push
test
mov
mov
cmpsb
rorb
insl
mov
cmpsb
scas
decl
jbe
mov
incl
cmp
packuswb
insb
or
imul
rorb
std
decl
sub
sub
rcr
ret
mov
mov
push
in
add
incl
outsl
pop
pop
pop
clc
dec
cmpsl
movsb
mov
incl
dec
push
bnd
imulb
mov
jae
scas
rorb
dec
imul
sbb
jmp
fadd
into
jbe
mov
js
push
sbb
ljmp
inc
xor
ja
inc
and
sbb
sub
lea
dec
mov
outsl
and
inc
arpl
inc
cwtl
fldl
mov
call
pop
loopne
aaa
and
push
jle
ds
add
fucomip
mov
arpl
mov
add
test
sbb
jmp
pop
cli
call
mov
adc
or
sbb
add
cmp
je
shrl
add
jg
mov
sub
aad
adc
pop
popa
aaa
dec
push
adc
inc
mov
ret
lock
pushl
in
nop
dec
cs
fwait
cwtl
adc
inc
mov
add
inc
mov
repz
inc
xchg
or
mov
cli
mov
xchg
or
inc
jo
jbe
call
fcoms
mov
pop
mov
mov
enter
mov
out
xchg
fldenv
cmp
ds
hlt
decl
int3
mov
push
mov
rorl
sbb
inc
aaa
push
imulb
mov
imul
pop
sti
js
add
pop
push
je
pop
cli
dec
mov
mov
xor
add
mov
ljmp
dec
jmp
movsb
ja
shlb
pop
call
mov
or
add
xchg
incl
lods
sub
adc
test
ljmp
fst
or
lock
jecxz
pop
mov
add
int
sar
mov
decl
mov
clc
inc
xor
and
jecxz
rcrb
or
push
add
push
loopne
push
test
xchg
add
pop
scas
and
je
inc
add
stc
inc
xor
or
mov
rclb
jp
pop
cmp
mov
das
movsb
mov
jmp
jne
jg
pop
shlb
xor
cld
aaa
dec
ret
test
fisttpll
jbe
ljmp
dec
nop
call
fisttps
pusha
gs
sbb
mov
aaa
sti
xlat
scas
jmp
sbb
jb
add
adc
jnp
push
insb
pop
adc
push
daa
cmpsb
and
mov
pushf
inc
adc
push
xor
fs
adc
push
push
dec
inc
jb
popa
je
out
ja
inc
imul
js
xor
inc
gs
xor
xchg
xchg
les
push
cmp
out
mov
aas
mov
inc
and
add
fisubl
loop
mov
inc
test
jbe
outsl
subb
jb
arpl
jae
insl
jae
and
cs
insb
add
mov
jne
je
insl
and
or
push
dec
dec
push
push
std
and
add
dec
inc
add
inc
es
fistps
xor
cmp
incb
xchg
sbb
jo
imul
mov
outsb
and
outsb
cs
ss
and
imul
arpl
jbe
in
fldt
jb
inc
outsl
sub
movsb
jae
cmp
add
cs
inc
jb
aaa
or
mov
jae
push
add
scas
shll
jae
sbb
xor
in
loopne
insl
and
insl
mov
inc
movsl
rol
dec
inc
cmp
jnp
cmpsb
pop
outsl
inc
imul
stos
imul
aaa
outsl
gs
mov
inc
jne
les
gs
outsl
ja
or
outsl
ss
in
stc
jae
fs
mov
insb
jbe
je
inc
dec
arpl
mov
xor
ret
flds
pop
push
gs
or
mov
xor
out
mov
cmp
outsl
jo
mov
mov
imul
push
cmp
pop
lds
xor
inc
aaa
mov
das
insl
jne
pop
xor
adc
push
pop
das
sbb
outsb
popa
pop
add
jo
int
push
jne
rorl
cmp
mov
xor
push
or
out
adc
faddp
icebp
lret
xorl
inc
jo
xor
xchg
mov
push
and
pop
push
cmp
jb
jne
jae
xor
xor
fdivrl
gs
xlat
or
xor
xchg
cld
loopne
xor
sub
nop/reserved
sti
dec
imul
pop
sub
mov
and
lock
cmp
cs
mov
cmp
and
popa
dec
pop
imul
outsb
popa
xlat
pushf
scas
outsl
loope
in
pop
mov
mov
push
cli
xchg
out
popa
sub
push
je
das
push
movb
lock
jb
bound
dec
jae
mov
sahf
ss
add
push
in
add
testb
pop
lea
mov
jne
xor
xor
and
add
push
popl
bound
push
xchg
inc
jg
pop
xchg
fs
jbe
fs
push
dec
cli
inc
jo
sti
lods
sbb
push
testb
js
insb
xorb
js
divb
lret
sbbl
js
jne
sub
or
or
rorl
sub
dec
inc
mov
jb
pop
jno
cmpsb
jns
add
repnz
add
test
and
push
mov
push
aas
add
popaw
imul
pop
mov
pop
add
and
push
leave
and
sub
dec
jb
pop
leave
add
test
add
add
addb
jne
pop
ja
add
cmp
mov
add
add
dec
cmp
add
ja
shrl
popf
add
aaa
adc
mov
add
or
shr
add
aam
mov
popf
outsb
push
pop
mov
shrl
push
mov
push
jnp
addb
xchg
dec
fmull
mov
fiaddl
pop
enter
pop
rolb
sub
push
orb
enter
mov
push
mov
decl
sub
xor
jne
icebp
xchg
mov
in
inc
rcl
mov
fdivl
jmp
repnz
aas
fsts
mov
jae
xor
movntps
jo
pop
xchg
inc
inc
lret
rol
lock
scas
cld
ror
push
lea
dec
shl
inc
mov
in
inc
xor
add
jl
stos
shrb
arpl
xchg
mov
pop
jle
and
push
pop
cmp
mov
pop
mov
pop
mov
shlb
sub
insl
push
jle
xor
sarb
push
ljmp
sahf
jns
lret
lods
mov
push
call
mov
sub
cmp
jb
fcmove
sub
jle
or
fldcw
inc
push
and
adc
sub
lods
test
aam
int
cmp
mov
ror
dec
jge
fists
les
jecxz
mov
inc
call
scas
test
inc
es
cmp
xchg
sub
sahf
stos
test
lock
sahf
cwtl
mov
add
cmp
in
push
mov
inc
repz
data16
xchg
push
sbb
xor
mov
sbb
xchg
push
pop
sahf
lea
or
jb
lea
adc
or
push
jle
ljmp
cmc
xorl
pop
adc
inc
cwtl
push
pop
jns
stc
stos
aaa
into
dec
shrb
inc
int3
out
mov
das
cld
jns
jns
pop
cmp
repz
sbb
mov
sub
or
outsb
ds
js
and
push
mov
mov
mov
or
ss
dec
push
push
sbb
addl
lods
push
inc
inc
add
dec
push
pop
loopne
rclb
inc
xchg
or
pop
and
pop
mov
rclb
pushf
and
mov
insb
ja
sar
shlb
fisubl
push
push
sub
repz
into
adc
gs
jns
or
test
popa
outsb
sbb
cmp
jo
or
scas
push
inc
inc
mov
dec
roll
lahf
adc
shll
mov
data16
push
mov
mov
ret
push
loopne
cmp
xor
push
cmp
imull
mov
imul
cmp
ljmp
dec
ja
mov
sbb
cmp
inc
xor
sbb
ss
int
adc
inc
fs
into
mov
sbb
jo
xor
int
mov
xor
push
cmp
aaa
fwait
in
enter
dec
push
adc
inc
xor
mov
lods
in
scas
gs
adc
mov
int
incl
mov
test
in
daa
add
xchg
xchg
cmpsl
add
cmovo
inc
add
adc
cmp
sarl
or
and
sahf
out
adc
fcoms
rclb
out
sahf
out
sbb
dec
repz
sbb
aam
sbb
imul
js
push
jns
out
mov
push
cld
scas
push
jns
mov
or
push
add
jns
cmp
xchg
dec
cs
nop
xchg
mov
xchg
add
pop
mulb
incl
pop
nop
shl
out
add
movsb
pusha
pusha
cmpb
cmpsb
xchg
pushf
pop
movsl
sbbl
mov
fisubl
rorb
inc
mov
inc
adc
pushf
mov
mov
out
loop
call
mov
pop
sub
neg
pop
fidivrl
sti
enter
fcomp
loopne
jb
jle
add
pop
test
and
push
add
sub
fistpl
ucomiss
lea
and
xor
inc
inc
lods
push
subb
push
jecxz
or
nop
push
add
push
scas
jne
rorb
push
ret
ja
xorb
outsb
add
dec
cs
insb
ret
push
or
imul
or
add
stos
add
rolb
pop
jnp
out
cmp
and
cmp
sbb
mov
test
push
add
push
mov
adcb
dec
push
negb
add
push
push
push
out
addr16
adc
jns,pn
add
inc
jb
in
mov
add
add
mov
cmp
je
jnp
add
bound
cs
cmp
mov
xor
dec
loopne
mov
add
mov
loop
outsb
xor
dec
mov
fnsave
cmovs
out
cmp
cwtl
inc
inc
outsb
insb
imul
dec
push
repz
mov
mov
out
cmpsb
leave
scas
push
add
scas
add
mov
add
dec
je
pop
jmp
mov
addb
rcl
aam
stos
mov
jle
add
xchg
adcl
and
and
jg
push
jg
pop
aaa
mov
pop
cmp
push
addb
je
shl
mov
popa
add
jnp
or
bound
add
pop
rorb
out
sbb
sbb
and
ret
arpl
divb
sbb
imul
dec
imul
push
and
xchg
push
and
mov
jns
and
add
imul
pop
icebp
mov
dec
ljmp
loopne
je
push
or
xlat
cmp
and
add
xor
jo
inc
pushw
ja
loop
and
outsl
idivb
sub
loopne
add
lcall
out
sub
push
xor
add
dec
adc
in
fidivs
es
outsb
cmpsb
jno
xchg
je
loopne
shrl
arpl
scas
push
xor
jp
cmp
xor
xorb
jns
andl
adc
js
add
scas
popa
jo
and
cmpsl
lods
loopne
data16
push
mov
popf
out
adc
push
cmpsb
push
cmp
push
cmp
pop
mov
sbb
iret
lods
add
mov
mov
dec
or
mov
cmp
pop
jns
push
sbb
aaa
jbe
pop
jl
add
scas
stos
inc
sbbb
inc
in
mov
arpl
inc
jae
pop
xlat
mov
dec
jb
outsb
mov
pop
stos
push
outsb
fldt
mov
jo
imul
xor
ficoml
shll
movd
jp
fidivrl
mov
fildll
inc
stc
push
add
add
xchg
dec
add
cmp
mov
daa
out
jecxz
outsl
pop
fidivrl
out
jmp
pop
cmp
sub
cmp
mov
cmp
jbe
fs
jne
push
jae
gs
or
jbe
jno
cmpsl
inc
daa
aaa
loopne
sti
xor
scas
data16
sub
dec
add
in
imul
dec
aam
aam
push
xchg
adc
pop
add
push
outsl
jne
cmp
shrb
outsb
inc
sbb
inc
jae
dec
fldenv
ss
inc
sahf
mov
lods
push
push
sbb
sahf
dec
inc
jb
mov
mov
jp
pop
mov
push
push
gs
mov
je,pt
inc
lods
mov
add
inc
push
cmovae
sub
outsb
aas
and
aam
sub
cmp
mov
je
bound
jae
daa
push
mov
sahf
xchg
push
lahf
pop
aad
dec
outsl
fs
inc
dec
dec
je
cmpl
push
mov
cmp
in
jle
and
fs
adc
jp
cmpsb
jecxz
dec
push
jo
test
sub
cmp
lock
push
pop
adc
ss
jns
pop
sub
outsl
into
fs
inc
sub
lods
xor
outsb
hlt
push
out
roll
gs
shrb
jle
adc
cmp
imul
popa
push
inc
xor
fstpt
sub
ja
aaa
data16
sub
mov
sahf
jp
dec
adc
outsb
addr16
pop
lahf
push
inc
outsl
insl
insl
adc
xchg
fwait
and
jns
insl
insl
test
je
cmp
leave
stos
jg
push
jns
jge
fisubs
insl
pop
and
popa
jo
push
loopne
mov
sbb
push
imul
dec
adc
adc
xor
xchg
sub
push
jns
push
jnp
outsb
cld
sub
cwtl
cmp
push
mov
lds
and
pop
cld
fadds
je
push
outsb
ja
outsl
cmp
xchg
dec
sbb
sti
cmp
inc
dec
sbb
mov
leave
sbb
enter
popa
pop
jo
mov
push
sub
inc
rcll
push
mov
inc
je
push
sbb
cmc
pop
jno
or
adc
push
xchg
pop
enter
adc
mov
sbb
ret
mov
jns
cltd
repnz
stc
add
notb
aaa
xchg
dec
arpl
scas
aam
add
cmc
push
xchg
movsb
je
jbe
js
and
pop
in
lds
xchg
fimull
test
push
insb
mov
mov
arpl
outsl
imul
mov
loopne
arpl
push
adc
jbe
fstps
sbb
pushf
push
sbb
lods
imul
inc
shrl
ja
xor
push
push
add
cmp
jo
and
xor
cwtl
mov
pop
pushf
xor
jns
pop
sbb
mov
insb
inc
push
push
dec
sbb
arpl
dec
orb
lahf
push
addr16
dec
data16
adc
mov
push
popa
daa
mov
shr
adc
pusha
icebp
sbb
inc
xor
dec
mov
push
fcompl
mov
gs
ds
inc
dec
push
pop
imul
lahf
cmpsl
mov
add
out
daa
loop
scas
cmp
dec
pop
push
jo
dec
jae
cmpsb
icebp
sbb
jecxz
jl
jns
dec
inc
push
inc
push
mov
inc
es
mov
aam
cmpsb
add
bound
andb
out
push
aaa
pop
add
enter
jb
cmp
dec
xor
shlb
loopne
leave
cmp
rcl
jb
xor
dec
sahf
pop
iret
sbb
or
js
fsubs
andl
adc
push
rorb
lret
ret
addr16
push
pop
fsubl
push
fs
pop
outsb
mov
push
add
das
lea
add
adc
aas
sbb
inc
test
inc
mov
cmp
push
dec
insl
xchg
gs
movsl
aaa
cmp
fisubrl
adc
jl
jb
outsb
fistl
imul
int3
add
pop
dec
and
andl
shlb
rorb
xchg
sbb
jb
fmulp
add
decb
dec
js
neg
inc
add
dec
negb
or
dec
rcrb
sahf
in
add
dec
add
das
jb
xchg
and
ret
add
orb
add
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
