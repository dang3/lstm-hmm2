bndstx
jmp
out
aam
jb
inc
jns
pop
insb
rorb
roll
roll
rorb
rolb
sub
xor
roll
rorb
rorb
xor
rorb
xor
mov
mov
sub
push
roll
movb
movb
sub
xor
rorb
xor
rorl
movl
movb
xor
mov
xor
add
sub
xchg
mov
call
movl
rorb
rolb
and
rolb
roll
or
popl
push
mov
add
add
push
and
rolb
or
rorl
add
xor
add
rorl
movb
rorl
rorb
sub
xor
roll
roll
xor
rorl
xor
pop
sub
push
add
xchg
mov
add
mov
and
add
sub
roll
rolb
rorb
nop
rorl
jmp
mov
int3
adc
leave
bndldx
movb
rorl
roll
rorb
sub
add
add
sub
xor
pushfw
rorl
movl
mov
sub
xor
roll
xor
movb
movb
rolb
xor
mov
add
add
sub
call
roll
rorb
roll
and
mov
rorl
movb
or
call
add
xlat
add
je
je
mov
add
nopl
xorl
or
add
out
lcall
rorl
xor
roll
rorb
rolb
xor
mov
xor
mov
add
xorb
inc
dec
jne
sub
push
add
xchg
mov
rolb
inc
dec
jne
sub
xchg
push
roll
roll
xor
mov
mov
xor
rorb
xor
mov
add
subb
inc
dec
jne
sub
push
rorl
movl
sub
xor
rorb
movb
xor
rorl
rorl
xor
mov
negb
inc
dec
jne
sub
movb
movl
add
mov
and
roll
rorb
mov
or
mov
add
popfw
jmp
xchg
in
and
jmp
hlt
sbb
fidivrs
js
mov
pop
mov
lea
nop
mov
and
push
jmp
lcall
std
bnd
inc
sar
lahf
in
mov
mov
test
or
out
sbb
cli
stos
or
mov
push
and
fstps
xchg
stos
fwait
cmp
jbe
in
add
push
mov
pop
push
mov
mov
mov
pop
pusha
pushfw
push
or
push
call
jae
sbb
sti
mov
push
outsb
outsb
test
insl
outsb
outsb
pop
xorw
xchg
xchg
mov
add
negb
inc
dec
jne
sub
notw
xchg
jmp
pushf
movsb
cld
incl
add
inc
dec
jne
sub
addl
pop
add
jl
add
lods
insb
or
or
mov
add
or
mov
lock
jnp
sbb
push
mov
and
add
addb
inc
dec
jne
sub
notb
jg
enter
icebp
push
xchg
into
add
add
imul
push
and
mov
movb
rorl
or
rolb
roll
add
subb
inc
dec
jne
sub
rolb
add
inc
xlat
fs
test
pop
add
sub
add
bound
scas
xor
je
aas
add
add
mov
pushf
movsb
add
add
add
rolb
inc
dec
jne
sub
movb
movl
add
xchg
mov
xchg
mov
add
popfw
jmp
test
mov
mulb
call
rorl
mov
mov
rorb
sub
xor
rorl
rolb
xor
rorb
rorb
mov
xor
mov
call
cli
mov
add
sub
dec
pop
inc
int3
dec
dec
mov
add
push
rorb
movb
mov
xchg
mov
sub
negb
inc
dec
jne
sub
xorw
idivb
add
add
xor
mov
mov
mov
or
rorl
mov
add
subb
inc
dec
jne
sub
push
roll
roll
and
mov
rorl
or
rorb
mov
add
rolb
inc
dec
jne
sub
movb
movl
sub
mov
add
mov
popfw
jmp
push
jmp
jmp
cmp
push
mov
add
add
mov
rorl
movl
xchg
mov
sub
push
or
mov
sub
push
mov
and
add
and
add
rolb
rorl
roll
rorb
rorb
sub
movl
rorl
rorl
sub
xor
rolb
xor
mov
xor
mov
push
xchg
mov
add
add
add
mov
roll
sub
xchg
mov
push
rorl
roll
movl
xor
roll
xor
rolb
movl
xor
mov
add
sub
add
xchg
mov
add
mov
push
add
rorl
mov
rorl
sub
xor
movb
movb
rorb
xor
rorl
rorb
xor
mov
cmovb
cld
sub
mov
rolb
rorl
rorb
sub
xor
rorb
mov
xor
roll
roll
xor
mov
mov
pushfw
push
or
call
push
popl
or
call
loopne
jg
jg,pt
pop
and
add
add
add
add
inc
and
int3
and
roll
or
roll
roll
add
subl
fsubrl
mov
addl
inc
dec
jne
sub
movb
movl
xchg
mov
add
rorl
mov
rorl
xchg
mov
sub
popfw
jmp
adc
bndstx
add
dec
nop
add
push
add
push
add
test
xchg
movzwl
verw
rol
push
pop
cld
rolb
roll
xor
rorl
roll
movl
xor
rorl
mov
xor
mov
add
mov
xor
add
jmp
sub
add
xchg
bndstx
xor
jmp
sti
sbb
xlat
les
xor
add
add
rorl
roll
and
movb
or
roll
sub
xor
mov
xor
rorl
xor
pop
sub
jo
js
lea
xor
not
xchg
dec
xor
lea
adc
xchg
mov
movzbl
inc
inc
jmp
dec
test
arpl
dec
cld
xchg
mov
add
push
mov
add
xor
add
mov
mov
sub
push
mov
add
add
sub
add
mov
call
push
popl
xor
push
add
xchg
mov
add
add
xchg
mov
call
push
popl
xor
push
mov
xor
add
sub
rorl
rorl
roll
xchg
mov
sub
add
roll
rorb
roll
movl
nop
cli
add
mov
push
add
mov
add
movb
sub
xor
movb
rorl
rorl
xor
movl
roll
movb
xor
mov
add
mov
push
mov
sub
xor
movl
xor
rorb
xor
mov
sub
mov
add
rolb
movl
movl
movb
mov
rorb
movl
jmp
shll
std
repnz
sar
mov
decl
incl
xorb
add
add
movsb
add
add
add
or
add
sub
ret
lea
lea
nop
pushfw
rolb
sub
xor
mov
rorl
xor
rorb
xor
add
mov
sub
call
rorb
rorl
mov
and
rorb
or
call
pop
or
rorb
movl
movb
xchg
mov
sub
subl
out
mov
add
cli
jo
mov
sbb
add
add
bound
pop
rorb
inc
dec
jne
sub
movb
movl
xchg
mov
add
rolb
mov
sub
xor
movl
roll
xor
roll
roll
rorb
xor
mov
popfw
jmp
adc
fdivr
enter
push
call
movb
roll
rorl
mov
call
xor
push
inc
dec
push
push
push
ret
outsb
push
rolb
xchg
mov
sub
push
pop
notb
inc
dec
jne
sub
xchg
notl
or
incl
add
mov
inc
and
ja
cmp
mov
sub
rolb
inc
dec
jne
sub
push
movb
rolb
xchg
mov
sub
notb
inc
dec
jne
sub
nopl
addw
push
mov
rorb
rolb
or
rorl
rorb
mov
add
subb
inc
dec
jne
sub
movb
movl
push
mov
add
and
add
rolb
movl
movb
xor
rorl
mov
mov
xor
rorl
mov
xor
mov
add
popfw
jmp
clc
lods
fiaddl
ljmp
lea
push
mov
mov
mov
mov
mov
pop
add
add
lea
cpuid
roll
mov
movl
jmp
push
inc
sub
scas
dec
fadd
inc
and
in
dec
and
rorb
movl
rorl
jmp
enter
je
adc
xor
sbb
mov
push
rorl
rorb
rorb
roll
movl
mov
xchg
mov
sub
sub
sub
mov
cmp
jne
pushfw
call
push
popl
and
call
push
popl
add
call
ror
lahf
aaa
pop
mov
dec
notl
push
cmpsb
ds
pusha
jne
inc
inc
and
lds
and
decl
incl
and
decl
dec
and
sbb
mov
cld
decl
mov
call
mov
pushl
mov
cld
decl
inc
mov
add
dec
push
sbb
add
movl
or
movl
movb
add
notb
inc
dec
jne
sub
notw
aas
jns
add
add
push
push
aam
mov
add
add
jo
and
add
aam
hlt
inc
mov
add
add
insl
inc
sub
mov
rolb
inc
dec
jne
sub
addb
sub
roll
movl
movb
sub
xor
rorl
roll
movl
xor
rorl
rorb
movb
xor
mov
decb
inc
dec
jne
sub
push
add
mov
rorb
inc
dec
jne
sub
movb
movl
mov
or
add
mov
xor
add
popfw
jmp
sbb
cld
mov
call
rorb
and
rorl
or
mov
inc
arpl
mov
jmp
movzbl
push
pop
not
test
cmp
arpl
mov
xor
bt
test
js
inc
rol
xor
test
cld
pop
add
xchg
mov
ret
pushfw
sub
mov
push
call
sub
mov
movsb
sahf
leave
dec
dec
movsb
push
mov
test
decl
pushl
adc
movl
mov
rolb
xor
mov
xor
mov
add
push
rorb
roll
xor
rorl
mov
xor
roll
movl
roll
xor
mov
add
incb
inc
dec
jne
sub
xorl
mov
or
add
add
cmpl
notw
jg
fildl
add
pop
mov
add
cltd
arpl
add
movsb
add
add
call
push
popl
and
call
mov
aas
popa
call
add
sub
mov
xor
add
notb
jle
xor
add
fs
cld
inc
and
add
pop
and
lock
cmpb
hlt
leave
into
out
xorl
cmp
push
pop
add
test
scas
popa
add
add
out
push
sub
jbe
sub
add
dec
push
bnd
pop
push
add
call
cmp
sbb
or
dec
jne
sti
ja
lea
or
or
or
mov
je
or
or
rclb
xchg
shlb
inc
xor
or
fwait
iret
or
or
push
pop
sbb
insb
pop
and
or
in
orb
or
or
xchg
dec
or
out
cmp
in
cmp
or
int3
sbb
or
cltd
xor
add
stc
xor
loope
or
jmp
sub
mov
add
incl
rorl
rorl
roll
xchg
mov
add
notb
inc
dec
jne
sub
push
roll
sub
xor
rorl
mov
xor
roll
rorb
rorb
xor
mov
xorb
inc
dec
jne
sub
notl
lock
ds
add
sbbl
rolb
or
cltd
pushf
push
rorl
movb
mov
sub
xor
rorl
mov
xor
mov
xor
mov
call
and
cld
popa
xlat
pop
insl
jbe
mov
cmp
and
movb
roll
or
mov
roll
mov
add
notb
jle
dec
add
add
mov
xor
add
decb
xor
jnp
and
jmp
lods
or
decl
stos
or
pushf
movsb
add
add
sub
rorb
inc
dec
jne
cmp
add
add
out
or
adc
lea
orb
add
scas
mov
inc
fsubs
add
shr
cmpsw
push
std
repnz
sar
lahf
in
jmp
mov
mov
test
or
out
sbb
cli
stos
or
mov
push
and
fstps
sub
jmp
add
push
dec
dec
outsl
jl
pop
jmp
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
popa
xchg
sub
jecxz
cltd
pop
aas
jmp
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
rolb
int3
roll
mov
in
inc
inc
and
xor
sbb
roll
rorl
mov
xor
roll
roll
xor
mov
add
rolb
inc
dec
jne
loopne
psubd
jnp
cli
push
in
sbb
fwait
ret
daa
imul
call
xor
cs
in
jb
cli
ss
aas
popa
mov
cmp
stc
and
cmp
sub
addb
add
cmc
push
inc
add
mov
subb
inc
dec
jne
std
fs
add
jl
jp
lds
jns
gs
jnp
add
push
jnp
jbe
push
jge
jnp
dec
jge
jnp
in
add
aam
jnp
adc
add
push
ret
cmpsb
fmuls
movsl
add
add
test
std
negl
dec
adc
jle
sarb
jle
add
add
cmp
add
add
incl
add
jg
add
add
jne
pop
add
add
cmc
in
jg
cld
add
add
decl
add
add
popfw
rorl
lods
push
adc
add
add
decl
push
xchg
add
add
inc
dec
jne
sub
movb
movl
pop
rolb
rorb
xchg
mov
sub
popfw
jmp
mov
in
add
add
xchg
mov
xchg
mov
sub
lea
jmp
rcl
neg
cmovne
test
lea
test
mov
xor
inc
cmovbe
std
cmp
mov
test
arpl
mov
cmp
cmp
cmp
verw
neg
cld
mov
or
add
sub
mov
push
nopl
bndldx
sub
push
or
push
movl
movb
sub
xor
rorl
rorb
mov
xor
rorl
rorl
xor
mov
add
movl
rorl
mov
xor
roll
rorl
xor
roll
rorb
xor
mov
add
cmpw
jne
pushfw
call
push
popl
and
push
add
popl
mov
rorb
sub
xor
roll
rorb
xor
rorb
rorb
mov
xor
mov
add
add
sub
call
cwtl
call
loopne
push
adc
add
mov
notb
or
cltd
notl
jle
xor
add
lea
push
add
add
mov
inc
add
add
jno
incl
add
xchg
dec
add
add
jno
incl
add
add
mov
push
pop
inc
add
add
or
add
incb
inc
dec
jne
sub
rorb
pusha
xchg
mov
jnp
pop
xchg
add
add
add
negb
inc
dec
jne
sub
xorw
fidivrl
add
movb
xchg
gs
sub
and
lret
test
icebp
movb
roll
sub
xor
mov
mov
xor
mov
mov
rorb
xor
mov
subb
inc
dec
jne
sub
xorl
add
push
pop
add
lcallw
in
test
jmp
pushl
pushf
and
inc
inc
and
push
pushf
movsl
pusha
rorl
roll
xor
mov
roll
xor
mov
xorb
inc
dec
jne
sub
nop
addl
daa
lods
fwait
lods
and
incl
movsb
add
add
sub
decb
inc
dec
jne
sub
movb
movl
add
xchg
mov
rorl
xchg
mov
sub
popfw
jmp
jbe
lods
and
xchg
nop
push
sub
sub
add
add
cmpw
jne
push
mov
mov
mov
mov
mov
mov
mov
pop
jmp
or
add
xchg
xor
add
add
lea
pop
sub
call
roll
mov
push
mov
add
add
add
movl
movl
xchg
mov
sub
roll
movl
rorl
jmp
add
es
mov
cmpb
sarb
roll
rorl
rolb
movb
rorb
rorl
roll
jmp
jne
jnp
icebp
push
inc
sub
add
add
mov
pushl
push
stos
sub
add
sub
rorl
roll
sub
call
push
popl
and
push
mov
or
add
add
rorl
roll
rolb
sub
xor
roll
rorl
xor
mov
xor
mov
ret
rolb
nop
rorl
jmp
ss
movsb
roll
movl
roll
sub
add
pop
mov
sub
push
and
lea
xor
bts
neg
mov
add
test
xor
cld
pop
mov
add
mov
xchg
ret
call
push
popl
and
sub
xchg
push
and
mov
or
movl
add
xor
add
sub
dec
mov
mov
arpl
shr
arpl
jmp
lea
shl
cmp
cmovnp
cmovo
xchg
push
pop
arpl
xchg
mov
push
pop
mov
fsub
ror
xchg
neg
mov
inc
std
cld
rorl
mov
roll
and
roll
rorl
or
movb
movl
add
and
rorb
or
rorl
rolb
add
mov
pushfw
push
xor
push
or
call
mulps
das
notb
je
dec
rolb
cmp
fnstsw
pop
rorl
rorl
rorl
sub
xor
rorb
rorl
xor
movl
rorb
xor
mov
notb
inc
dec
jne
sub
push
mov
rorl
sub
xor
rolb
xor
mov
rorl
xor
mov
addb
inc
dec
jne
sub
subb
imul
loopne
add
pavgw
add
xchg
mov
incb
inc
dec
jne
sub
notl
xchg
call
movsl
mov
mov
xchg
mov
sub
incb
inc
dec
jne
sub
xorb
mov
add
bound
mov
fwait
add
add
inc
dec
jne
sub
movb
movl
push
mov
xor
add
add
add
mov
xor
add
popfw
jmp
pop
push
fidivl
and
rclb
mov
sub
xor
movl
xor
roll
xor
add
xchg
mov
sub
call
push
popl
xor
xchg
fadd
lea
mov
or
fmul
mov
bts
cmc
cmovo
neg
push
pop
lea
push
pop
xor
xor
push
pop
xor
cld
mov
roll
rorl
pop
add
xchg
mov
mov
push
and
push
and
mov
mov
mov
neg
dec
not
xor
xchg
xchg
fadd
mov
arpl
cld
xchg
mov
add
push
push
mov
add
and
add
and
add
jmp
add
add
push
jmp
xchg
div
fs
xchg
ror
into
out
jmp
cld
test
or
add
addl
jle
add
sti
pop
xchg
push
mov
mov
mov
pop
add
add
add
dec
lea
sub
sub
mov
lea
xchg
add
and
pushfw
push
call
push
popl
xor
call
adc
fcmovnb
repnz
mov
add
rorl
mov
add
aad
and
lock
notl
xchg
hlt
mov
add
and
jne
sub
push
pop
addb
inc
dec
jne
sub
movb
movl
push
roll
roll
rorb
xchg
mov
sub
and
add
rorl
xor
rorl
xor
roll
xor
mov
add
popfw
jmp
cmp
aad
sub
andb
jmp
add
call
push
popl
or
call
gs
push
mov
sbb
or
add
sub
mov
notb
cltd
notl
xchg
lock
push
sub
mov
add
add
and
add
negb
inc
dec
jne
sub
rorb
pusha
xorb
add
xchg
xchg
lock
mov
add
incb
inc
dec
jne
sub
movb
movl
rorl
rorl
sub
xor
mov
xor
rorl
rorl
xor
mov
mov
add
popfw
jmp
push
mov
sub
mov
call
mov
mov
jb
verw
dec
movswl
jne
push
pop
test
dec
mov
xchg
cmp
or
jmp
cmovo
lea
mov
not
cmp
mov
cld
sub
mov
roll
rorl
movl
xor
movl
xor
rorb
rorl
roll
xor
mov
add
cmp
jne
pushfw
push
push
call
lds
add
mov
push
jbe
ljmp
add
add
or
add
or
add
pushfw
call
push
popl
add
push
call
arpl
mov
add
add
adc
add
xchg
xchg
push
add
mov
rorb
inc
dec
jne
sbb
fwait
xor
adc
add
add
xchg
repnz
add
add
jb
add
inc
imul
add
ret
nop
xchg
push
sub
adcb
push
xor
push
push
mov
adc
sub
jmp
mov
add
add
int3
or
add
add
add
jmp
add
push
sbb
jmp
add
fstpt
subb
rorl
mov
das
push
ljmp
add
std
pop
stos
je
ljmp
aad
inc
sub
repnz
sub
notb
cltd
jle
in
add
add
xor
jmp
xor
add
rorb
inc
dec
jne
loopne
xchg
mov
cmp
jp
mov
rolb
add
cmp
loop
sub
jmp
add
add
add
pusha
xor
add
add
adc
mov
and
jno
ljmp
and
mov
and
cmp
pushl
jns
sub
adc
mov
add
rorb
inc
dec
jne
sub
push
add
xchg
mov
incb
inc
dec
jne
sub
rorb
int3
rorl
mov
xchg
add
add
int
or
add
je
in
adc
add
popf
rclb
adc
push
js
adc
add
add
negb
inc
dec
jne
sub
movb
movl
mov
add
mov
sub
xor
roll
rolb
roll
xor
rolb
rorl
xor
mov
popfw
jmp
or
call
movb
mov
and
mov
or
sub
xchg
mov
call
pop
sbb
add
incl
pop
or
add
sub
mov
notl
xchg
repnz
incl
add
xor
add
rorb
inc
dec
jne
sub
push
add
xchg
mov
notb
inc
dec
jne
sub
rolb
int3
notl
lock
notw
cltd
or
xchg
repnz
incb
inc
dec
jne
sub
movb
movl
roll
rorl
roll
xor
movl
xor
rorl
rolb
xor
mov
add
mov
and
add
popfw
jmp
in
pop
call
push
popl
or
call
roll
roll
and
roll
or
bt
mov
cmp
jo
cmove
arpl
rol
rol
mov
dec
verw
not
xor
rol
mov
verw
or
ror
verw
dec
cld
and
rorb
rorl
or
rorb
mov
add
pop
dec
jne
pushfw
sub
xchg
mov
mov
sub
call
add
int
and
inc
and
jns
mov
pushl
cmp
roll
movb
roll
xor
mov
xor
mov
add
push
push
add
mov
xor
add
subb
inc
dec
jne
sub
xorw
cmp
add
add
enter
test
lcall
stc
adc
add
add
add
add
dec
jne
sub
push
sub
mov
subb
inc
dec
jne
sub
rolb
shrb
imul
add
add
add
add
rolb
inc
dec
jne
sub
movb
movl
pop
push
mov
xor
rorl
roll
xor
rorl
xor
mov
add
add
add
popfw
jmp
testb
add
movsb
add
add
push
add
mov
test
mov
cmovae
test
shr
call
mov
fnstcw
arpl
jmp
cmovne
nop
push
mov
cmp
pop
pop
arpl
lea
arpl
push
pop
cmovo
xor
cld
xchg
mov
add
mov
add
push
pushfw
mov
sub
xchg
mov
sub
call
ljmp
pop
push
push
mov
add
xorb
jne
sub
mov
add
add
les
add
xchg
mov
decb
inc
dec
jne
sub
rorl
add
mov
dec
nop
jp
mov
add
mov
negb
inc
dec
jne
sub
push
movl
xor
movl
xor
rolb
movb
roll
xor
mov
add
negb
inc
dec
jne
sub
notb
cltd
xorl
out
add
jle
ud0
add
xorl
add
cltd
or
or
add
add
jo
incb
add
jmp
xor
add
addb
inc
dec
jne
sub
movb
movl
push
pop
or
add
push
sub
mov
add
add
popfw
jmp
xor
sbb
lea
add
add
push
pushfw
add
mov
push
call
mov
add
add
xchg
mov
notl
cltd
jle
aad
add
into
inc
cmp
and
test
les
add
rorb
inc
dec
jne
sub
movb
movl
rorb
rorb
movb
add
mov
mov
add
add
popfw
jmp
cmp
pop
cmp
mov
rolb
add
add
test
jle
sbb
mov
movl
roll
or
push
push
and
rorb
or
rorb
mov
rorl
add
or
add
sub
mov
add
add
sub
rorb
push
add
push
add
xchg
mov
sub
rolb
roll
mov
xchg
mov
sub
add
push
jmp
iret
pop
gs
dec
loope
hlt
sbb
rorb
roll
roll
rorl
roll
nop
jmp
fstpt
mov
and
inc
push
nop
mov
xchg
jmp
shll
push
inc
sti
leave
add
xchg
xchg
mov
pushfw
rolb
mov
sub
xor
rorl
roll
xor
roll
movl
rorl
xor
push
and
movb
or
roll
add
and
add
sub
call
push
popl
and
call
leave
mov
outsl
out
mov
xchg
js
xor
ljmp
mov
or
add
and
add
subw
mov
xchg
cmp
add
lock
xorl
rorl
and
decl
push
jbe
rolb
sub
xor
rolb
xor
mov
rorl
xor
mov
rorb
inc
dec
jne
sub
push
push
mov
add
add
xor
add
notb
inc
dec
jne
sub
notb
xchg
adc
addl
inc
dec
jne
sub
notl
xchg
in
inc
add
jmp
xor
add
rorb
inc
dec
jne
sub
movb
movl
mov
add
add
mov
roll
movl
sub
xor
rorl
xor
rorl
xor
mov
popfw
jmp
bound
and
movl
rorl
roll
movl
rorl
rorb
jmp
dec
xchg
stos
fwait
cmp
movsb
cld
incl
add
loopne
add
add
movsb
cld
decl
sbb
add
add
mov
add
add
sub
roll
rorl
rorl
movl
mov
mov
movb
mov
sub
mov
add
push
mov
xor
add
and
add
roll
rorl
mov
sub
xor
roll
rorb
xor
rorb
xor
mov
mov
sub
push
push
mov
and
add
add
add
add
add
jmp
cmpb
and
mov
mov
mov
pop
mov
push
mov
pop
sub
add
add
bndldx
jmp
fsub
mov
jmp
popf
adc
loopne
pop
aas
or
push
xor
push
jmp
aaa
movsb
or
push
das
cmp
sbb
inc
jmp
out
aam
jb
inc
jns
pop
insb
xor
add
in
pop
lea
add
add
sub
sub
sub
add
lea
lea
add
xchg
jmp
int3
adc
div
fs
xchg
ror
into
nopl
sub
sub
xor
lea
add
mov
mov
rolb
movb
roll
add
call
rorl
and
roll
roll
movl
or
push
add
mov
sub
and
rorb
rolb
rorb
or
rorb
rolb
roll
add
add
roll
sub
xor
mov
xor
rolb
rorl
xor
xchg
mov
add
sub
push
sub
mov
sub
rorl
rorb
rorb
xor
roll
xor
movl
roll
xor
mov
add
nopl
add
rorl
rolb
movl
sub
xor
mov
mov
movl
xor
roll
roll
rorb
xor
mov
mov
add
mov
and
add
push
or
push
roll
mov
movl
xor
mov
xor
rolb
xor
mov
add
sub
mov
or
add
xor
jmp
mov
js
lea
push
mov
pop
rol
pushfw
push
call
movb
mov
and
rorb
rorb
rorl
or
call
mov
push
dec
call
mov
mov
xchg
mov
sub
xorb
mov
add
add
add
notb
inc
dec
jne
sub
movb
movl
mov
xor
add
rorl
mov
rorb
sub
xor
movl
rolb
xor
rorl
xor
mov
popfw
jmp
fsubrp
add
ds
rorl
mov
movb
push
or
xchg
mov
sub
jmp
arpl
rcr
jmp
or
call
sbb
in
xor
pop
pop
push
pop
rcr
test
mov
cmp
test
inc
xor
adc
fmul
cld
push
and
rorb
or
rorl
rorb
add
xor
add
push
sub
mov
and
add
cmpb
jne
pushfw
push
and
push
add
call
mov
mov
jle
xchg
jle
les
test
adc
inc
and
mov
xor
movsb
add
add
sub
notb
inc
dec
jne
sub
push
mov
rorb
rorl
add
xchg
mov
rolb
inc
dec
jne
sub
notb
or
jg
insl
incl
add
push
notl
xchg
in
push
mov
add
add
and
add
subb
inc
dec
jne
sub
movb
movl
pop
push
pop
or
add
popfw
jmp
sbb
jmp
adc
call
movl
mov
xchg
test
verw
xor
test
cmp
push
pop
cld
xchg
mov
add
and
rorl
or
roll
add
inc
add
sub
add
cmp
jb
pushfw
call
mov
roll
mov
push
and
call
xor
sub
jl
rorl
roll
rolb
mov
and
add
notw
cltd
mov
add
add
pop
mov
movl
sub
xor
movb
rorl
xor
rorl
movl
xor
mov
incb
inc
dec
jne
sub
push
push
mov
add
or
add
notb
inc
dec
jne
sub
rorb
add
adc
filds
add
push
add
loop
add
add
and
mov
rorb
mov
or
rorl
add
xor
add
xorb
inc
dec
jne
sub
push
add
xchg
mov
rorb
inc
dec
jne
sub
movb
movl
push
mov
rorl
movb
push
movb
rorl
mov
sub
xor
rolb
xor
rorl
xor
mov
or
add
xor
add
xchg
mov
add
popfw
jmp
mov
jnp
pop
ss
dec
adc
pushfw
rorl
sub
xor
rorb
xor
rolb
xor
mov
push
push
and
popl
popl
xchg
mov
sub
push
or
popl
call
cwtl
dec
pop
jg
and
sbb
and
push
inc
xchg
rol
and
rorb
xor
mov
xor
roll
xor
mov
add
notw
cltd
jle
dec
add
add
push
add
mov
push
xor
call
call
dec
and
dec
and
rorb
xchg
mov
sub
push
mov
add
add
rorb
inc
dec
jne
sub
notl
xchg
mov
sti
and
test
les
add
rorb
inc
dec
jne
sub
rolw
xchg
lcall
add
add
add
inc
dec
jne
dec
mov
mov
xor
jg
mov
dec
mov
mov
mov
dec
mov
stos
xor
xchg
inc
nop
mov
mov
pop
mov
test
mov
mov
mov
loope
iret
adc
div
xor
out
cmc
cmc
mov
or
scas
shll
scas
shlb
xor
xor
mov
xor
adc
loop
adc
mov
sbb
fxch
inc
sbb
mov
sub
xor
movl
rorb
xor
movl
rorl
xor
mov
popfw
roll
fcomps
add
add
subl
mov
add
add
cmp
add
clc
iret
mov
shll
add
sbb
add
ss
xorl
mov
add
rolb
inc
dec
jne
sub
nopl
addl
movsb
xlat
mov
rol
jecxz
subl
sbb
movsl
notl
xchg
repz
rorl
xor
rorl
mov
movl
xor
movl
rorb
rorl
xor
mov
add
incb
inc
dec
jne
sub
push
xchg
mov
add
incb
inc
dec
jne
sub
movb
movl
add
xchg
mov
push
sub
mov
and
add
popfw
jmp
mov
dec
les
test
decl
incl
add
add
add
push
popl
or
verw
rol
push
pop
and
arpl
push
pop
test
stc
arpl
cld
push
roll
roll
rorl
push
add
mov
xor
add
and
add
sub
mov
movzwl
push
add
rorb
rorb
sub
xor
rorb
rolb
xor
rorl
movl
movl
xor
and
movb
or
rorl
movl
rorb
add
sub
call
xchg
xor
inc
verw
inc
push
mov
xor
pop
pop
inc
not
cld
xchg
mov
add
add
mov
mov
push
and
sub
xchg
sub
mov
sub
push
xor
popl
or
xor
jmp
jo
mov
mov
not
xor
dec
cld
sub
mov
push
add
mov
add
add
add
rolb
movl
sub
xor
rorb
xor
movb
xor
mov
xor
add
sub
push
or
cmp
rcl
mov
xor
xchg
verw
xchg
mov
lea
test
xor
cld
mov
add
add
push
add
xchg
mov
xor
add
mov
sub
add
lea
add
add
inc
dec
add
sub
sub
push
jmp
mull
xchg
ror
into
out
cld
test
sbb
add
sub
add
add
sub
add
sub
sub
sub
add
sub
add
pop
add
lea
jmp
cmp
dec
loope
hlt
sbb
fidivrs
aad
sbb
mov
mov
roll
sub
xor
movl
movb
mov
xor
rolb
xor
mov
add
add
sub
push
mov
roll
rorb
sub
xor
rolb
rorl
xor
rorb
rorb
xor
mov
add
xchg
mov
add
sub
pop
sub
call
push
popl
and
push
mov
xchg
mov
sub
add
mov
xor
add
sub
mov
mov
add
sub
mov
sub
roll
rorl
sub
xor
mov
xor
rolb
rorl
movl
xor
movb
rorl
roll
xchg
mov
sub
sub
mov
sub
xchg
mov
add
push
mov
add
push
rorl
mov
movb
xchg
mov
sub
add
add
leave
lea
sub
sub
xchg
dec
sub
push
mov
pop
dec
add
ret
rolb
rorb
mov
bndldx
push
pushfw
call
push
popl
or
call
push
popl
or
call
sbb
loop
std
test
xchg
sub
roll
movl
movl
sub
xor
mov
rorb
xor
movl
mov
movl
xor
mov
subw
loopne
mov
add
add
negb
inc
dec
jne
sub
subb
insl
nop
stos
add
add
push
in
or
sbb
mov
add
rolb
inc
dec
jne
sub
push
push
mov
add
add
add
decb
inc
dec
jne
sub
push
pop
addb
inc
dec
jne
sub
push
push
sub
mov
add
add
incb
inc
dec
jne
sub
movb
movl
mov
roll
sub
xor
rorb
xor
rorl
rorl
rolb
xor
mov
mov
and
add
popfw
jmp
loopne
sub
call
movb
mov
mov
mov
rolb
sub
xor
mov
rorl
xor
rorl
rolb
rorl
xor
push
push
rorb
rolb
add
mov
or
add
add
add
sub
push
pop
test
cmovns
xor
lea
ja
lea
mov
mov
rcr
push
pop
cld
arpl
xchg
cmp
cmovne
cld
add
xchg
mov
push
rolb
and
mov
rorl
or
roll
mov
movl
add
or
add
add
pushfw
mov
sub
call
roll
movb
and
roll
or
call
popa
jbe
inc
test
xchg
rcl
mov
add
addw
mov
add
jne
sub
das
add
add
bound
jnp
push
std
xor
add
cwtl
fdivrp
pop
stos
dec
add
add
inc
jb
push
add
add
shlb
and
add
add
or
add
xorb
inc
dec
jne
sub
rolb
aam
add
mov
xorb
inc
dec
jne
sub
rorb
lock
add
roll
mov
add
roll
add
cltd
or
mov
decl
call
dec
and
add
mov
rorb
inc
dec
jne
sub
roll
incb
notl
je
movsb
add
add
add
xorb
inc
dec
jne
sub
movb
movl
sub
mov
rorl
xor
roll
xor
roll
mov
movl
xor
mov
add
popfw
jmp
ja
xchg
jbe
push
nopl
push
pushfw
mov
rorb
mov
sub
xor
mov
xor
roll
roll
rolb
xor
mov
add
sub
push
or
push
and
popl
call
xor
cmp
xchg
in
in
sub
mov
xorl
fiadds
rcll
add
movsl
pushf
push
add
call
push
popl
and
call
popa
pop
ret
popa
mov
push
xchg
mov
add
or
add
jmp
out
aam
jb
sub
inc
jns
pop
insb
xor
pop
mov
das
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
mov
int
jmp
xchg
ror
into
out
cld
jmp
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
rolw
sarl
dec
loope
jmp
hlt
sbb
fiadds
decl
add
mov
add
add
xorb
inc
dec
jne
mov
pop
repz
lret
fdiv
mov
lret
push
xor
xor
mov
or
lret
mov
repz
imul
sub
out
adc
xor
mov
lret
test
mov
push
xor
xor
pop
xor
xor
xor
popf
dec
xor
xor
mov
xor
add
add
add
inc
dec
jne
sub
nopl
pushfw
call
push
popl
add
sub
xchg
mov
call
xor
aaa
mov
out
or
rorl
rorl
add
xchg
mov
jmp
test
xor
imul
and
movb
fstps
fwait
cmp
jbe
in
add
push
jmp
dec
dec
outsl
jl
and
es
hlt
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
jmp
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
push
push
roll
rorl
xor
rorb
roll
xor
mov
rorl
rorl
xor
mov
add
or
add
addb
inc
dec
jne
cmp
and
cmp
inc
dec
pop
mov
mov
mov
add
ds
mov
and
mov
sarl
fisubrl
dec
dec
mov
mov
lret
inc
repnz
ss
mov
mov
pop
fcmovbe
jo
mov
or
xchg
jmp
in
mov
stos
arpl
add
add
sti
loope
add
add
mov
add
int
or
repz
push
rorl
adc
arpl
jmp
dec
pop
decl
or
aam
or
and
inc
aam
and
shl
add
add
add
fwait
aad
add
inc
push
adc
jle
loope
jg
add
add
cmp
add
add
in
fdivrl
mov
xchg
fcompl
or
movb
roll
add
push
xchg
mov
add
add
add
popfw
nopl
xorb
movsl
xorl
rolb
rorl
movb
xor
rorl
movb
movb
xor
roll
xor
mov
add
notb
inc
dec
jne
sub
addb
inc
sbb
subl
dec
jle
insb
add
cltd
rorl
push
cmp
notl
xchg
neg
jecxz
roll
rorl
rolb
or
roll
mov
add
notb
inc
dec
jne
sub
addw
jns
nop
rolb
add
outsl
fadds
add
add
and
add
add
add
add
nop
testl
incb
add
in
subb
das
mov
add
rolb
in
roll
mov
ret
add
add
scas
inc
dec
jne
sub
addl
aas
jns
ret
and
inc
and
mov
inc
and
and
lock
sbb
rorl
rorl
add
negb
inc
dec
jne
sub
movb
movl
and
movb
movl
roll
or
rorl
mov
rorl
add
push
movl
mov
rorl
sub
xor
rorl
mov
xor
movb
rorl
rorb
xor
mov
and
add
popfw
jmp
push
pushfw
push
sub
xchg
push
xchg
mov
add
add
add
sub
call
enter
insb
mov
cmp
incl
movsb
cld
jmp
scas
and
add
andb
mov
add
incb
inc
dec
jne
sub
movb
movl
push
sub
mov
add
add
push
xchg
mov
add
and
add
popfw
jmp
jno
sbb
decb
pushfw
xchg
mov
sub
movl
movl
rorl
movb
sub
xor
mov
movb
movl
xor
rorl
movb
xor
mov
call
cwtl
popa
int
dec
sub
inc
inc
push
sub
mov
or
add
subw
mov
das
add
add
add
add
mov
subb
inc
dec
jne
sub
rorb
push
or
add
push
lcall
jne
sub
addb
push
or
cmp
rorl
movb
roll
or
mov
movb
add
negb
inc
dec
jne
sub
movb
movl
xchg
mov
add
rorb
roll
xor
movb
xor
rorl
movb
roll
xor
mov
add
popfw
jmp
sub
je
sub
mov
call
push
popl
and
push
pop
lea
neg
inc
cmovne
neg
bsr
push
pop
cld
mov
or
add
mov
xor
add
add
rolb
mov
mov
jmp
push
hlt
sbb
fidivrs
add
push
popl
xor
push
pop
add
rorl
rorl
roll
xchg
mov
sub
sub
roll
mov
rorl
movb
roll
sub
add
mov
pushfw
sub
mov
push
call
cld
mov
sub
insb
outsb
mov
in
lock
xor
movl
roll
xor
rorl
roll
xor
mov
add
addw
int3
jecxz
add
add
add
pop
outsb
dec
add
mov
add
fsub
sbb
subl
or
xchg
or
xchg
pop
subb
adcl
add
inc
ljmp
add
sbb
sub
xchg
mov
call
js
fdivl
push
sahf
jmp
add
add
movsb
add
add
add
xor
add
push
rorl
xor
roll
roll
xor
rorb
xor
mov
add
rorb
inc
dec
jne
push
scas
push
add
add
add
stc
push
jmp
stc
pop
push
and
cmpsb
jecxz
fisttps
add
add
pop
incl
add
push
mov
ljmp
xor
or
nop
push
adc
add
add
movb
add
or
pushl
jge
add
add
mov
add
orb
jecxz
pop
rcl
inc
or
cmp
int
cli
gs
push
fcmovnb
mov
and
lahf
test
dec
fsub
mov
fadds
popf
adc
loopne
pop
aas
or
push
clc
shr
in
ss
movsb
or
adc
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
pop
mov
pop
add
and
pushf
movsl
roll
mov
add
add
add
decb
inc
dec
jne
test
movl
add
les
add
add
add
add
add
add
aam
and
imul
lds
popf
and
mov
add
addr16
subl
and
xor
add
add
xchg
add
and
sub
out
adc
sahf
rolb
in
xchg
xchg
add
add
mov
js
push
mov
add
negb
inc
dec
jne
sub
addw
or
xchg
roll
add
lock
addl
cwtl
cmpb
xchg
movsb
add
add
add
incb
inc
dec
jne
sub
xchg
notw
cltd
or
cltd
jle
sbb
add
mov
and
add
pop
inc
mov
add
push
pop
mov
add
pusha
cltd
mov
add
mov
xchg
mov
addb
inc
dec
jne
sub
rorw
rcrb
add
add
add
push
popl
add
push
call
adcl
and
inc
and
or
movl
roll
rolb
add
push
push
mov
or
add
or
add
decb
inc
dec
jne
test
and
xchg
add
add
enter
add
mov
in
std
add
add
add
test
call
xchg
mov
sub
popfw
push
mov
add
subb
inc
dec
jne
sub
movb
movl
push
pop
or
add
movl
roll
mov
xchg
mov
sub
popfw
jmp
sbb
imul
sub
rorl
call
inc
and
movl
call
push
popl
xor
mov
sub
mov
add
add
movl
sub
xor
rorb
movb
xor
rolb
xor
push
sub
mov
xor
add
sub
push
xchg
mov
add
add
and
mov
roll
or
rorb
mov
mov
add
add
xchg
sub
sub
mov
add
add
sub
sub
add
sub
sub
sub
lea
xor
push
add
mov
call
push
popl
add
not
movsbl
sub
btc
arpl
bsr
cmp
lea
arpl
xchg
cld
and
rorl
or
rorl
add
roll
rolb
rolb
xchg
mov
add
push
nop
pushl
push
or
rorl
roll
rolb
sub
xor
rorb
roll
mov
xor
mov
rorl
movb
xor
mov
xor
xchg
cmp
xchg
xor
cmp
ja
inc
jb
xchg
xchg
rcl
rcr
repz
lea
dec
mov
cmp
cmc
sub
mov
arpl
xor
xchg
dec
cld
roll
roll
rorl
pop
and
rorb
roll
mov
or
roll
movl
rolb
add
call
call
movl
mov
mov
sub
xor
movb
rolb
movb
xor
rorl
roll
roll
xor
mov
add
add
sub
verw
xchg
push
pop
cmova
xchg
xor
jmp
neg
push
pop
movswl
mov
cld
mov
and
add
sub
mov
call
call
rolb
mov
call
roll
rorl
rorl
and
roll
mov
or
inc
not
verw
bsr
cmp
push
pop
push
pop
xchg
jmp
cmp
cmp
mov
cmovs
arpl
arpl
movswl
mov
test
verw
lea
jb
inc
inc
mov
cmc
cld
rorl
rolb
sub
xor
rorl
movl
xor
mov
rorl
roll
xor
mov
mov
add
add
test
jne
pushfw
push
xor
call
push
popl
add
call
or
pop
in
shll
outsl
jne
aad
and
pop
notw
jle
and
add
out
and
jle
jae
addl
aas
add
add
add
add
add
fldl
jne
sub
rorw
push
add
add
add
inc
add
test
xor
mov
sub
incb
inc
dec
jne
sub
movb
movl
add
mov
add
mov
popfw
jmp
loope
xor
add
add
add
subb
jbe
in
or
adc
dec
outsl
jl
jmp
pop
jmp
mov
es
mov
cmpb
jne
jnp
icebp
push
inc
sub
nopl
bndldx
pushl
pushfw
rorb
push
and
call
rorl
movb
and
roll
rorl
roll
or
call
xchg
rclb
jae
push
in
xor
jae
push
push
movb
mov
xchg
mov
sub
push
push
push
mov
add
xor
add
or
add
rolb
inc
dec
jne
sub
nopl
xorl
int
adc
add
mov
add
add
xchg
xchg
add
cltd
arpl
and
call
push
popl
add
call
push
repz
fisubl
add
add
add
notl
xchg
les
add
add
xchg
mov
subb
inc
dec
jne
mov
lret
cmpl
dec
sbb
lea
cmp
mov
aam
idivl
cmp
cli
cmp
cmp
outsl
jo
mov
pusha
mov
cmp
repz
cmp
add
incl
xchg
mov
imul
inc
jno
mov
add
jae
dec
loop
cmp
cmp
loop
inc
sub
divl
cmp
cmp
pop
dec
loop
cmp
cmp
adc
loop
cmp
cmp
loop
cmp
pushl
mov
cld
decl
inc
dec
and
dec
roll
xor
mov
subb
inc
dec
jne
ljmp
pusha
add
imul
push
imul
imul
add
add
push
xor
xchg
pop
jmp
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
imul
fs
jmp
xchg
ror
into
out
cld
test
jmp
or
add
xor
addl
jle
sub
mov
sbb
xlat
les
xor
cmp
dec
loope
hlt
sbb
fidivrs
subb
clc
xchg
cmpsb
xchg
movsb
add
add
add
add
add
xorb
inc
dec
jne
stos
les
sub
jmp
out
sub
pushf
or
lcall
imulb
sub
push
ret
sub
sub
in
imul
adc
sub
mov
and
lods
jnp
loopne
loopne
loop
test
aad
lods
xor
sub
cmp
mov
add
or
add
add
xor
add
rol
sbb
add
loope
lock
add
add
add
add
add
add
add
addb
inc
dec
jne
mov
cmp
ret
sbb
add
push
cmp
cmp
ds
mov
cmp
lock
cmp
cmp
cmp
clc
loopne
cmp
cmp
fsubs
cmp
cmp
loopne
cmp
cmp
fstpt
cmp
addl
sub
xorw
xor
xchg
add
std
shrb
mov
or
add
subb
inc
dec
jne
sub
notl
or
cld
add
or
xchg
out
add
sub
adc
add
roll
or
roll
movl
rorb
add
xorb
inc
dec
jne
sub
rolb
add
in
in
fisubrl
fiadds
add
add
dec
test
add
or
add
rorb
inc
dec
jne
sub
movb
movl
add
xchg
mov
mov
or
add
popfw
jmp
fstpt
add
add
decl
and
xchg
and
decl
incl
add
dec
inc
mov
mov
mov
push
pop
not
xor
inc
mov
jns
xchg
mov
bsr
test
push
pop
shr
arpl
push
pop
cld
mov
or
add
xchg
mov
add
call
pushfw
push
and
mov
sub
call
cwtl
pop
dec
inc
je
add
push
xchg
xchg
xchg
mov
or
add
xorb
sub
or
les
add
xchg
mov
addb
inc
dec
jne
sub
movb
movl
rorb
mov
xor
rorb
rorl
roll
xor
roll
movl
xor
mov
add
rorl
rorl
xchg
mov
sub
popfw
jmp
fcomp
sti
enter
inc
add
inc
push
mov
pop
push
mov
mov
mov
pop
nopl
dec
inc
sub
add
sub
sub
movl
add
mov
call
push
popl
xor
push
popl
fmul
dec
cld
rolb
movb
rorl
sub
xor
mov
movl
xor
rorl
movb
rorl
xor
mov
pop
mov
xchg
xor
mov
roll
rorb
nop
test
jne
pushfw
rolb
push
and
sub
mov
call
in
push
or
mov
mov
mov
cmp
sub
test
jmp
roll
sub
xor
roll
xor
movb
roll
roll
xor
mov
xorw
or
adc
mov
add
decb
inc
dec
jne
sub
push
add
xchg
mov
rolb
inc
dec
jne
sub
notl
js
xchg
out
pop
addb
inc
dec
jne
sub
push
add
xchg
mov
decb
inc
dec
jne
sub
push
mov
and
add
decb
inc
dec
jne
sub
movb
movl
rorl
xchg
mov
sub
mov
add
popfw
jmp
int3
sbb
shl
add
add
nopl
xchg
add
sub
xchg
add
add
lea
sub
add
add
add
add
sub
sub
xchg
sub
add
sub
sub
add
add
call
movb
roll
movl
and
rorl
movb
rorl
or
push
and
rorb
or
rorb
rorb
add
sub
mov
and
add
add
xor
jmp
pop
push
dec
adc
div
mov
lea
mov
jmp
xchg
ror
add
call
push
popl
add
push
mov
add
add
sub
roll
xor
mov
movl
roll
xor
rorb
xor
mov
add
push
xor
push
push
mov
add
and
add
add
mov
or
add
add
push
jmp
out
cmp
jle
sub
mov
jmp
sbb
xlat
les
cs
pop
jmp
gs
dec
loope
lea
xchg
lea
xor
test
je
bndstx
roll
mov
rorl
rorb
mov
mov
jmp
ljmp
lea
nop
roll
movb
movb
mov
rorl
rorl
rorb
nopl
test
jne
pushfw
mov
movb
mov
sub
xor
mov
xor
rolb
roll
xor
mov
or
add
sub
call
push
popl
xor
call
xchg
loopne
sbb
push
and
rorl
or
rolb
movb
mov
add
add
add
pushfw
push
push
call
jecxz
mov
mov
rorl
push
pop
xor
add
notl
jg
incl
add
pop
cmp
add
add
xor
add
xor
add
incb
inc
dec
jne
sub
imul
mov
rorb
sbb
sbb
rorl
out
sbb
rorl
divb
sbb
mov
incl
std
test
dec
jne
sub
inc
test
call
jmp
decl
decb
imul
xchg
and
add
sub
and
roll
rolb
or
roll
add
popfw
xorl
nop
xor
loopne
add
add
mov
dec
jne
sub
rorw
or
bndldx
addw
lds
imul
lods
cmp
add
add
rorb
inc
dec
jne
sub
rorw
popl
mov
jne
outsb
fisubs
xchg
mov
or
cltd
jle
mov
add
push
stos
cmp
add
add
add
negb
inc
dec
jne
sub
push
mov
or
add
subb
inc
dec
jne
sub
roll
cmp
and
orl
push
add
mov
xorb
inc
dec
jne
sub
movb
movl
pop
xchg
mov
add
popfw
jmp
stos
mov
sub
push
and
call
loope
inc
les
or
test
mov
push
pop
verw
cmp
push
mov
neg
mov
verw
test
mov
xchg
dec
pop
pop
verw
mov
movswl
cld
cld
and
rorb
rorl
rorl
or
roll
mov
add
mov
xor
add
inc
push
xchg
mov
sub
arpl
verw
mov
mov
cmp
mov
dec
verw
mov
cld
mov
add
mov
and
add
inc
pushfw
push
add
sub
xchg
mov
call
addr16
stos
pusha
cs
lods
pop
ljmp
ljmp
add
add
add
add
or
add
and
add
notl
cltd
or
add
add
add
add
add
add
jo
push
add
mov
roll
mull
add
add
add
mov
and
roll
roll
or
call
push
popl
xor
push
xor
popl
call
fstps
pop
pop
in
sub
iret
loop
add
add
push
rolb
movb
rorl
sub
xor
roll
movb
xor
movl
movl
xor
mov
xor
add
add
add
addl
push
loop
push
xchg
lea
add
xchg
and
inc
inc
and
dec
rorl
xor
mov
xor
roll
xor
mov
add
subb
inc
dec
jne
lret
dec
dec
dec
aas
fbld
dec
dec
fisubrs
dec
dec
dec
dec
or
dec
dec
dec
test
or
lret
add
add
xchg
add
add
inc
dec
jne
jle
decl
imul
daa
push
jle
sti
js
fildl
add
add
pop
add
jmp
cmp
add
subb
inc
dec
jne
fadds
push
push
push
rol
push
push
push
push
sub
jnp
push
push
push
mov
aaa
xor
fwait
jnp
cmp
xchg
jnp
fwait
jnp
mov
roll
xor
mov
add
xor
add
rolb
inc
dec
jne
sub
push
push
sub
mov
and
add
decb
inc
dec
jne
sub
add
add
xchg
add
add
enter
add
cmp
add
sub
add
add
add
test
insb
mov
add
add
sub
popfw
push
xchg
mov
add
decb
inc
dec
jne
sub
rorl
add
popa
jne
call
sbb
xchg
mov
add
fld
mov
add
add
incb
add
popf
mov
add
or
xchg
out
aas
mov
mov
mov
call
mov
pushl
sbb
movl
movb
xor
roll
rorl
movl
xor
mov
add
negb
inc
dec
jne
sub
notw
cltd
jle
jle
add
or
mov
subw
mov
add
push
test
les
add
mov
decb
inc
dec
jne
sub
notw
jg
ret
add
xchg
enter
jg
xor
add
clc
mov
add
xor
add
xor
add
rolb
inc
dec
jne
sub
movb
movl
mov
add
mov
xor
add
popfw
jmp
aaa
rorb
add
sub
rorl
rorb
mov
call
mov
mov
push
roll
xchg
mov
sub
sub
xchg
mov
add
sub
xchg
mov
and
add
sub
push
add
mov
add
movl
movb
pop
jmp
aam
jb
inc
and
lea
jmp
lret
inc
and
cmp
or
lcall
test
pushl
xchg
outsl
xchg
mov
sub
push
push
mov
add
xor
add
sub
movl
rolb
xor
roll
rorb
movl
xor
mov
xor
mov
add
pushl
rorl
mov
rorl
jmp
jp
mov
inc
pop
xor
shlb
int3
push
pushfw
add
mov
call
push
popl
xor
popl
sub
mov
push
or
popl
call
or
xchg
lock
rcrl
sub
cli
test
adc
add
add
add
add
push
xchg
mov
add
subb
inc
dec
jne
sub
notb
cltd
notl
xchg
out
roll
rorl
rorb
xchg
mov
add
incb
inc
dec
jne
sub
push
pop
notb
inc
dec
jne
sub
rolw
ficomps
add
add
add
out
dec
pop
pop
mov
xor
add
negb
inc
dec
jne
sub
push
pop
negb
inc
dec
jne
sub
movb
movl
push
movb
roll
roll
xor
rorb
movb
xor
roll
roll
mov
xor
mov
add
xor
add
push
mov
add
add
and
add
popfw
jmp
mov
mov
mov
jle
inc
and
fisttps
add
jmp
adc
mov
movl
rorb
sub
xor
roll
rorl
xor
mov
rorl
rorl
xor
add
mov
sub
xchg
xor
lea
jo
fsub
xchg
mov
mov
arpl
xchg
arpl
fmul
xchg
xchg
cmp
inc
cmove
adc
not
push
pop
cld
add
mov
add
xchg
mov
call
sub
sub
add
add
push
jmp
iret
pop
gs
dec
loope
add
hlt
jmp
sbb
fidivrs
ljmp
mov
lea
pop
add
dec
xor
call
lea
sub
sub
pop
sub
sub
xchg
add
sub
test
jne
push
or
add
mov
mov
fsub
fsub
neg
cmovle
xchg
fadd
arpl
arpl
xchg
cld
rorl
roll
sub
xor
rorl
xor
movb
mov
xor
mov
sub
mov
test
jne
xchg
sub
sub
push
pushfw
call
push
popl
and
push
and
call
and
cwtl
adc
rorb
mov
cmpsl
test
or
add
mov
and
add
and
add
xchg
xorb
mov
add
sahf
push
daa
inc
add
add
inc
daa
addb
dec
dec
add
jle,pt
incl
add
add
add
insb
add
add
and
movb
or
rorb
rorb
movl
add
addb
inc
dec
jne
sub
xorw
adc
mov
add
add
sbb
in
jmp
xchg
mov
sub
rolb
inc
dec
jne
sub
notb
xchg
adc
add
decl
incl
add
inc
dec
jne
sub
subw
mov
mov
add
add
cmpsl
cmc
xor
xchg
in
cmp
jecxz
call
xchg
mov
sub
decb
inc
dec
jne
sub
movb
movl
sub
mov
xchg
mov
add
popfw
jmp
lret
repnz
movb
rorb
bndldx
rorl
mov
nopl
mov
sub
push
mov
add
add
sub
mov
sub
xchg
mov
rorl
xchg
mov
sub
sub
push
mov
add
sub
pop
call
add
lea
push
jmp
or
icebp
push
inc
sub
nopl
sub
add
xchg
lea
call
nopl
and
jmp
inc
je
adc
loopne
pop
aas
or
mov
pushfw
mov
sub
xchg
mov
sub
call
gs
pop
aas
mov
mov
in
pop
dec
fsub
loope
test
insb
and
mov
xchg
mov
sub
push
rorb
rolb
movl
sub
xor
rolb
xor
movb
rorb
rorb
xor
mov
addb
inc
dec
jne
sub
nopl
push
add
mov
notb
inc
dec
jne
sub
movb
movl
and
rorb
rorl
movb
or
movb
rorl
movl
add
movl
rolb
movb
sub
xor
movb
xor
movb
xor
mov
popfw
jmp
stc
mov
push
or
sub
xchg
lea
xchg
lea
xchg
push
push
or
push
movl
rolb
rorl
xchg
mov
sub
add
push
add
mov
or
add
push
or
add
mov
popl
push
mov
add
sub
mov
or
add
mov
push
xor
push
push
rorb
rorl
rorl
xor
roll
xor
rolb
movb
rorb
xor
mov
add
add
add
sub
sub
mov
add
dec
roll
mov
mov
sub
xor
roll
xor
roll
xor
mov
or
add
sub
push
xor
xor
btr
xor
cld
mov
rolb
xchg
mov
sub
pop
shl
push
and
call
movb
movl
roll
and
rorl
or
jmp
cmp
cmp
not
test
verw
arpl
push
pop
cmp
xchg
test
test
jns
xor
fsub
mov
mov
arpl
neg
dec
cmp
push
pop
cmp
std
cld
push
add
xchg
mov
or
add
push
pop
add
add
mov
rorl
rolb
nop
mov
call
movl
movb
rorl
and
rolb
or
sub
xchg
mov
mov
arpl
push
pop
mov
xchg
shr
cmovbe
test
bsf
cmp
cld
add
xchg
mov
rorb
rorl
and
roll
movl
rorl
or
roll
mov
rolb
add
mov
rorb
mov
rolb
mov
rolb
rolb
rorl
rorl
bndstx
jmp
fildll
push
xlat
les
xor
pop
pop
sbb
dec
and
rorl
rorb
movb
push
add
mov
sub
add
xchg
mov
rorb
sub
xor
mov
rolb
roll
xor
mov
movb
roll
xor
mov
mov
add
movl
rorl
roll
xchg
mov
sub
mov
rolb
rolb
roll
roll
roll
roll
nopl
roll
movb
nop
roll
rorb
push
mov
add
mov
add
movb
mov
sub
mov
push
mov
xchg
mov
sub
sub
mov
add
add
nopl
pop
lea
xchg
jmp
push
mov
mov
mov
mov
mov
mov
mov
pop
lea
lea
push
call
rorb
rorb
mov
push
rorb
mov
add
add
pop
push
add
push
mov
xor
add
sub
mov
rolb
add
mov
pushl
xchg
mov
sub
sub
xchg
mov
mov
arpl
xor
ja
not
bt
fsub
arpl
push
pop
je
mov
not
push
pop
test
dec
arpl
fsub
mov
arpl
test
cmc
cld
mov
sub
xor
rolb
roll
movb
xor
rorb
xor
mov
mov
add
add
call
nopl
xor
push
movb
movl
rorb
sub
xor
rorl
rorb
rolb
xor
rolb
roll
xor
mov
call
push
popl
and
fsub
shl
jmp
cmp
jbe
arpl
shr
inc
push
pop
dec
mov
test
fsub
mov
rcl
inc
shl
movsbl
sub
neg
dec
cld
and
rorb
or
mov
add
mov
add
call
pushfw
push
add
mov
sub
call
aaa
jmp
or
movsl
fucom
pop
pop
repz
pop
pushfw
call
rolb
and
rorb
roll
or
add
mov
call
dec
mov
lcall
mov
movl
xchg
mov
sub
push
mov
add
add
rolb
inc
dec
jne
or
mov
add
xor
add
decl
out
lcall
out
push
add
add
add
dec
js
xchg
call
pop
sub
xor
lcall
dec
sub
push
sti
pushf
jmp
push
mov
dec
dec
dec
outsb
jnp
pop
mov
and
add
std
pop
stos
je
jp
lock
inc
sub
repnz
ljmp
mov
inc
jae
adc
fistps
lcall
bound
ds
subl
or
push
das
cmp
sbb
cmovnp
inc
out
aam
jb
inc
jns
pop
insb
xor
pop
mov
pop
add
and
pushf
movsl
jmp
jp
mov
inc
pop
xor
or
mov
int3
adc
adc
add
ljmp
rorb
lea
push
jmp
out
cld
test
or
add
addl
jmp
jle
sub
mov
sbb
xlat
jmp
lods
loop
xor
jmp
cmp
dec
loope
hlt
jmp
sbb
jmp
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
push
jmp
xchg
test
xor
imul
icebp
cli
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
push
mov
rorl
rorl
xor
roll
rorl
movl
xor
rorl
xor
mov
add
negb
inc
dec
jne
jge
cltd
cmp
pop
cmp
sbb
add
cmp
xchg
add
add
iret
je
add
add
aas
je
cmp
add
jg
je
add
add
cmp
add
add
les
iret
je
add
add
ja
pop
add
add
js
fmull
jge
add
jl
add
add
cmp
add
add
test
decl
inc
dec
and
adc
test
decl
jmp
xorl
cmp
add
add
add
addl
xchg
mov
add
rorb
inc
dec
jne
sub
nopl
addb
push
add
pop
add
add
bound
add
lods
aad
insb
add
add
cmp
pop
xrelease
add
add
sbb
add
notb
inc
dec
jne
sub
xorl
lea
adc
jnp
notb
or
jg
lods
add
add
and
movb
rorl
xchg
mov
sub
incb
inc
dec
jne
sub
movb
movl
roll
roll
roll
push
mov
or
add
and
add
add
mov
popfw
jmp
les
mov
lods
dec
popf
cwtl
ss
loop
ss
mov
mov
mov
pop
bndldx
nop
addl
push
and
call
push
popl
or
dec
jmp
cmovns
xchg
test
ror
push
pop
fmul
rcr
xchg
verw
cmp
sub
neg
arpl
test
fadd
jns
cmp
verw
arpl
cmovns
xchg
lea
mov
inc
cld
movl
rorl
sub
xor
movb
rolb
roll
xor
roll
roll
mov
xor
mov
rolb
movl
xchg
mov
sub
jmp
sub
sub
nop
push
jmp
push
das
cmp
sbb
inc
out
aam
jb
or
pop
insb
xor
xchg
pop
jmp
add
and
sub
add
add
add
xchg
nopl
xchg
push
mov
mov
mov
mov
mov
pop
inc
add
xchg
mov
nopl
push
push
mov
add
add
add
mov
add
add
call
movb
rorl
and
rorl
roll
or
push
roll
sub
xor
mov
xor
mov
roll
xor
mov
sub
roll
rorb
xor
movl
xor
mov
rorl
rolb
xor
mov
add
add
sub
mov
nopl
mov
call
rolb
movl
mov
roll
rorb
sub
xor
roll
rorl
xor
rorb
xor
mov
add
add
sub
push
or
popl
mov
shrd
cmp
test
lea
arpl
shr
mov
rcl
ror
xor
rcl
jmp
rcr
and
cld
lea
lea
arpl
xor
cld
roll
rorl
xor
rorb
rorl
xor
mov
xor
mov
add
push
add
mov
or
add
add
movl
mov
push
xor
call
rolb
mov
xchg
lea
xchg
shr
not
xchg
fadd
verw
neg
mov
cmc
cld
rorl
rorl
sub
xor
rorb
rorb
xor
movb
mov
xor
mov
mov
mov
sub
xor
rorb
xor
rolb
xor
mov
mov
call
push
popl
or
mov
add
movl
movb
rorb
xor
rolb
movl
rorb
xor
rolb
xor
mov
add
call
push
popl
or
call
push
popl
or
popl
push
pop
sub
pop
sub
xchg
rolb
xor
mov
xor
rorb
roll
movb
xor
mov
add
sub
push
rorb
movb
rolb
xor
rorb
rorb
mov
xor
rolb
rorb
xor
mov
add
sub
rorl
rorb
xchg
mov
sub
sub
xchg
mov
push
sub
mov
add
xchg
mov
add
rorl
rolb
roll
roll
roll
rorb
rolb
rorb
nopl
jmp
pushfw
movl
rorl
sub
xor
rorb
rorb
rorb
xor
movl
movb
mov
xor
mov
sub
mov
call
mov
inc
mov
mov
fcmovnu
fcmovbe
inc
and
sub
xor
rolb
rorl
xor
rorl
xor
mov
subb
lods
adc
inc
and
shlb
and
inc
and
rolb
xor
mov
movb
xor
mov
add
negb
inc
dec
jne
sub
rolw
aam
add
mov
notb
inc
dec
jne
sub
xorw
insb
dec
int3
add
add
add
or
add
aas
je
incl
add
xchg
in
add
lock
in
outsb
dec
or
xchg
cmc
add
add
loop
or
aas
mov
cltd
subl
xorw
jae
pop
add
add
incb
add
and
mov
xor
jecxz
incl
and
decl
dec
and
rorb
xor
rorl
roll
roll
xor
mov
addb
inc
dec
jne
sub
movb
movl
push
push
mov
add
add
add
and
add
add
mov
popfw
jmp
test
clc
xchg
psubsb
cld
decl
incl
and
decl
incl
add
addl
xchg
verw
push
pop
mov
jbe
rcl
verw
cmp
mov
lea
inc
xor
cmp
cld
rorb
xor
roll
rorb
movb
xor
rorl
rorb
xor
mov
add
push
add
xchg
mov
add
add
pop
bndstx
jmp
and
sahf
jg
xchg
stos
fwait
cmp
jbe
in
add
or
push
dec
dec
outsl
jl
pop
mov
add
add
add
mov
sub
verw
rcl
mov
neg
test
verw
dec
cld
pop
push
mov
or
add
or
add
leave
call
push
popl
add
mov
sub
push
roll
rorl
sub
xor
rorb
xor
roll
rolb
xor
mov
xor
add
push
and
push
rorl
xchg
mov
sub
add
mov
or
add
ret
pushfw
call
push
popl
or
rorb
sub
xor
rorl
movl
rolb
xor
rorl
rorb
mov
xor
sub
mov
sub
popl
call
push
popl
add
call
add
dec
pop
gs
xor
add
rolw
inc
in
sub
mov
subb
inc
dec
jne
sub
roll
add
xchg
icebp
inc
bound
add
decl
incl
add
dec
jne
sub
push
add
xchg
mov
notb
inc
dec
jne
sub
notl
xchg
clc
sub
call
inc
and
rorl
push
push
rorl
rorb
roll
push
and
roll
or
rorl
rorb
roll
add
add
add
or
add
and
add
subb
inc
dec
jne
sub
notb
jle
cmp
in
lea
and
pop
mov
add
add
notb
inc
dec
jne
sub
movb
movl
add
xchg
mov
and
rolb
or
mov
add
popfw
jmp
fstp
jbe
and
sub
xor
sub
add
nopl
push
sub
xchg
mov
push
roll
sub
mov
sub
and
mov
rolb
or
rorl
rolb
add
push
mov
add
sub
mov
mov
jmp
cmp
sbb
inc
out
aam
jb
inc
jns
push
jmp
xor
xchg
pop
pop
lea
bndstx
mov
mov
sub
mov
rorl
sub
xor
mov
movl
xor
movl
roll
xor
mov
verw
not
push
pop
fmul
fsub
cmp
cld
mov
xor
add
mov
or
add
mov
pushfw
call
push
popl
xor
mov
sub
xchg
mov
sub
popl
call
loopne
xchg
insb
mov
sti
or
adc
add
xchg
mov
notw
xchg
xacquire
mov
add
negb
inc
dec
jne
sub
rolb
addw
sub
push
cwtl
fbld
add
or
incl
add
push
jg
test
add
call
roll
pushl
mov
cld
inc
dec
and
int3
roll
mov
xor
rorl
rorb
xor
mov
rorb
inc
dec
jne
sub
rolw
xor
add
je
cmpsb
repz
add
push
xorl
xorb
inc
dec
jne
sub
movb
movl
rorl
movb
rorl
sub
xor
rorl
xor
movl
movb
xor
mov
movb
rolb
rorb
sub
xor
roll
rorb
xor
mov
roll
rorl
xor
mov
popfw
jmp
int3
aas
shll
dec
roll
mov
sub
xor
roll
rorl
xor
mov
rorl
xor
roll
rorl
pop
sub
push
inc
cld
rorb
roll
mov
roll
rorl
xchg
mov
sub
rorl
add
mov
mov
pushfw
mov
sub
push
call
sbb
xor
inc
mov
ljmp
and
call
movb
xchg
mov
sub
rorl
pop
add
add
loop
psrld
roll
rorl
xor
mov
mov
rorl
xor
roll
mov
xor
mov
add
decb
inc
dec
jne
sub
movb
movl
mov
add
add
mov
add
popfw
jmp
mov
lret
mov
incl
add
add
add
push
popl
or
test
dec
cld
movl
roll
mov
and
add
rorl
xchg
mov
sub
add
lea
dec
inc
add
sub
sub
add
cmp
jbe
sub
add
push
mov
mov
mov
mov
mov
pop
cmp
jae
pushfw
call
push
popl
and
mov
rorl
sub
xor
rorl
rorl
mov
xor
rorl
xor
mov
add
sub
call
das
ds
test
mov
add
add
roll
roll
sub
xor
mov
rorl
movb
xor
rorl
mov
xor
mov
add
add
rorw
sub
xchg
add
repnz
pop
mov
or
add
decb
inc
dec
jne
sub
movb
movl
sub
mov
xchg
mov
add
popfw
jmp
mov
scas
pushfw
call
push
popl
and
sub
xchg
mov
call
cmp
and
movsb
cltd
add
add
add
mov
nop
push
mov
add
add
negb
inc
dec
jne
sub
push
add
xchg
mov
rolb
inc
dec
jne
sub
nopl
push
add
mov
subb
inc
dec
jne
sub
push
add
mov
subb
inc
dec
jne
sub
addb
jl
mov
add
rolb
inc
dec
jne
sub
movb
movl
add
mov
roll
roll
sub
xor
rolb
roll
movb
xor
rolb
roll
xor
mov
popfw
jmp
out
aas
stos
pop
cmpsb
xchg
push
mov
mov
mov
mov
mov
pop
bndldx
push
mov
mov
mov
mov
mov
mov
mov
pop
xchg
pop
pushfw
call
mov
roll
rolb
and
movb
or
push
and
call
and
fnstenv
enter
repz
pusha
daa
sbb
popf
out
out
mov
sub
xor
mov
mov
roll
xor
rolb
xor
mov
rorl
cmp
add
xchg
in
sub
test
call
mov
pushl
or
mov
mov
movb
xor
movl
movb
roll
xor
mov
add
rolb
inc
dec
jne
sub
rorl
roll
add
fldcw
add
ds
add
add
notl
xchg
in
rorb
xor
movb
roll
xor
rorb
rorl
xor
mov
add
notb
inc
dec
jne
sub
xorl
pusha
cmp
add
or
add
decb
inc
dec
jne
sub
push
push
and
movb
or
mov
mov
add
or
add
negb
inc
dec
jne
sub
movb
movl
mov
sub
xor
movb
xor
rolb
xor
mov
pop
popfw
jmp
xor
mov
add
add
add
call
push
popl
add
push
pop
neg
rcl
shr
inc
mov
rcr
jmp
cmp
nop
push
pop
xchg
cmp
cld
neg
cld
mov
xor
add
mov
xor
add
mov
sub
xchg
mov
push
or
cmp
mov
jbe
dec
test
mov
not
mov
xchg
cmp
mov
mov
test
verw
mov
verw
test
cld
roll
sub
xor
movl
xor
rorl
roll
xor
mov
roll
rolb
movl
xchg
mov
sub
cmp
jne
sub
sub
push
jmp
push
push
jmp
clc
shll
aaa
movsb
or
push
jmp
das
cmp
sbb
inc
out
aam
pop
nopl
lea
pop
call
push
popl
and
push
push
roll
xor
movl
xor
roll
xor
mov
add
and
add
sub
pop
push
and
push
rorl
rorl
roll
sub
xor
mov
xor
rorl
rorb
mov
xor
mov
add
xchg
mov
add
rorl
roll
rorb
jmp
mov
jmp
add
call
push
popl
xor
push
push
mov
xor
movb
rorl
mov
xor
rorb
mov
xor
mov
add
or
add
sub
push
and
mov
rorl
rorl
or
roll
rolb
add
add
add
pop
movb
call
push
popl
add
push
push
movb
rorb
movb
xor
rorb
mov
xor
roll
xor
mov
add
add
add
sub
and
rorb
or
movb
mov
add
movb
mov
rorl
rorl
mov
sub
push
add
xchg
mov
add
push
mov
add
add
add
rorb
rorb
movl
sub
xor
rorb
movl
rorl
xor
rorl
rorb
rorl
xor
mov
push
push
add
xchg
mov
add
add
sub
add
mov
push
and
mov
add
pop
rolb
roll
nopl
ret
rorl
rorl
nopl
call
push
add
mov
sub
add
xchg
mov
mov
sub
push
add
mov
add
and
rorl
movl
rorb
or
mov
rorb
movl
add
call
jmp
les
cs
pop
gs
dec
push
mov
mov
mov
mov
mov
pop
mov
sub
sub
lea
mov
nopl
add
inc
mov
sub
xchg
mov
push
xor
mov
arpl
jmp
rcr
lea
rcr
jb
cmovnp
xor
xor
mov
mov
cmova
xchg
bt
adc
arpl
clc
mov
xchg
cld
add
xchg
mov
add
xchg
mov
add
roll
mov
sub
add
mov
add
sub
roll
push
and
mov
add
push
xchg
mov
add
and
add
xchg
mov
sub
push
xchg
mov
add
sub
rorl
mov
roll
xchg
mov
add
add
push
mov
mov
mov
mov
mov
pop
lea
jmp
in
mov
mov
test
add
sub
xor
pushfw
call
mov
rorb
mov
push
xor
call
lret
or
ret
std
add
mov
sbb
sub
mov
subb
mov
add
and
mov
subb
inc
dec
jne
sub
movb
movl
roll
rolb
xor
mov
rorl
xor
movl
movb
xor
mov
add
sub
mov
popfw
jmp
jnp
and
arpl
call
push
popl
or
sub
xchg
mov
xor
add
sub
call
arpl
fcomip
cs
or
pop
pop
pop
mov
xor
add
notw
cltd
or
js
notw
xchg
in
pop
addb
inc
dec
jne
sub
rorb
mov
add
jmp
or
add
rolb
inc
dec
jne
sub
movb
movl
mov
add
add
mov
and
add
popfw
jmp
aam
sub
push
or
push
xor
call
pop
lea
ret
dec
push
xchg
test
pop
jmp
inc
inc
and
rorl
mov
or
rorl
add
pushfw
push
add
push
call
je
shr
movl
xchg
mov
sub
xorb
and
sub
add
mov
add
imul
lret
jge
add
add
inc
and
enter
rorl
movb
xor
mov
movb
xor
mov
add
xor
add
negb
inc
dec
jne
jge
scas
xchg
lods
cmp
add
add
add
add
fmull
jns
fdivl
pop
add
add
jge
add
jp
add
add
add
add
add
jp
fldl
jge
add
jae
add
add
inc
inc
push
test
pop
in
jecxz
decl
addr16
incl
out
fmuls
and
add
inc
insl
cmp
les
sbb
add
outsl
imul
test
pop
das
jmp
adc
call
add
cmp
add
add
cmp
js
fildl
add
add
pop
add
add
mov
xchg
add
add
push
xchg
mov
add
subb
inc
dec
jne
sub
bndldx
xorw
cmp
xchg
into
add
add
aad
add
aas
dec
stc
pushfw
call
rolb
mov
call
push
popl
add
call
pop
ret
popa
mov
shll
mov
add
mov
sub
push
add
xchg
mov
rolb
inc
dec
jne
push
mov
add
add
lcall
mov
push
adc
jb,pn
repz
decl
nop
push
adc
add
add
nop
push
adc
add
push
add
add
js
xor
jns
fcmovb
out
jo
paddw
call
mov
scas
cwtl
sbbl
js
jb
mov
cwtl
loope
stos
mov
inc
xchg
dec
or
sbb
push
mul
sub
loope
push
or
or
fwait
fwait
clc
jns
jp
fwait
fwait
xor
sbb
dec
xor
aaa
aas
fwait
fwait
fwait
fwait
push
pop
lahf
sbb
pop
inc
dec
jne
mov
pop
int
filds
push
push
lock
xchg
push
push
push
je
pop
pop
sub
sub
dec
sub
nop
mov
push
mov
or
mov
mov
mov
sub
pop
pop
mov
add
push
push
insl
movsb
mov
pusha
dec
mov
lret
ret
movsb
add
add
add
incb
inc
dec
jne
sub
addl
icebp
inc
addr16
add
mov
xchg
add
add
int3
xor
sbbl
add
mov
add
add
inc
and
xchg
movb
roll
xor
roll
mov
mov
xor
rorl
mov
movl
xor
mov
add
add
add
incb
inc
dec
jne
sub
push
pop
negb
inc
dec
jne
sub
movb
movl
add
mov
mov
add
add
popfw
jmp
adcb
jle
add
push
mov
call
inc
and
add
dec
and
rorl
rolb
rorl
rorl
add
sub
call
push
popl
xor
push
push
mov
add
add
xor
add
add
sub
mov
sub
xchg
add
xchg
mov
sub
mov
sub
add
mov
mov
roll
mov
mov
rorl
rorl
rorl
movl
jmp
mov
sbb
push
sub
add
pushl
call
movb
movl
roll
and
movb
or
xchg
mov
sub
push
pop
xchg
fadd
fadd
xchg
mov
lea
mov
stc
cmp
stc
mov
imul
cld
pop
pop
pushl
lea
sub
sub
add
rorb
mov
movb
sub
xor
movb
movb
xor
rorl
rorl
xor
mov
push
xor
mov
cmovs
verw
sbb
cmp
lea
cmp
cmovae
lea
cld
pop
rorl
sub
xor
rolb
xor
rorb
xor
mov
push
call
push
popl
or
call
push
popl
and
mov
jbe
rcr
inc
mov
push
pop
verw
neg
mov
cmp
imul
fsub
adc
mov
cmovl
cmovb
test
mov
verw
cld
cld
rorb
roll
rorl
movb
rorl
xchg
mov
sub
mov
or
add
push
call
mov
mov
mov
push
movl
mov
xchg
mov
sub
add
rorl
rorb
mov
xor
rorl
xor
rorb
mov
xor
mov
add
sub
call
roll
mov
push
or
mov
add
rorb
rorb
sub
xor
movb
xor
rolb
rolb
xor
mov
push
xor
push
add
xchg
mov
sub
mov
add
call
lea
nop
add
rorb
sub
mov
push
or
xchg
arpl
fsub
add
mov
arpl
verw
std
arpl
dec
cld
pop
pop
inc
add
mov
call
push
popl
xor
add
shl
fmul
cmovle
jae
mov
cmp
bts
not
xchg
push
pop
test
fadd
cmp
bsr
mov
push
pop
std
push
pop
dec
inc
cmovns
adc
rcl
xor
cld
mov
add
push
and
movb
rorl
rorl
or
mov
add
and
add
add
pushfw
call
mov
mov
rorb
and
rorb
movb
or
add
mov
call
ret
mov
jo
icebp
in
fistpll
xor
dec
jae
repz
and
add
push
push
mov
and
add
or
add
addb
inc
dec
jne
sub
xorb
int
sbbl
add
xchg
bound
jmp
test
inc
xor
inc
rolb
xor
rorb
rorb
movb
xor
mov
add
addb
inc
dec
jne
sub
push
roll
roll
roll
xchg
mov
sub
negb
inc
dec
jne
sub
push
mov
add
addb
inc
dec
jne
sub
nopl
push
pop
xorb
inc
dec
jne
sub
movb
movl
rorl
movl
xor
movl
rolb
movl
xor
rorl
mov
rorl
xor
mov
add
xchg
mov
add
popfw
jmp
cmc
imul
cmp
addb
and
call
inc
and
xchg
mov
sub
mov
add
movl
rorb
rorl
sub
mov
call
rorb
and
movb
movb
movl
or
mov
sub
mov
add
add
push
jmp
outsl
jl
pop
mov
es
jmp
mov
add
and
mov
cmp
rorb
rolb
movl
jmp
lods
jne
pop
sub
xchg
mov
mov
add
mov
add
sub
mov
push
xchg
mov
sub
lea
fsub
push
pop
mov
verw
xor
jmp
rcr
dec
mov
not
verw
mov
lea
neg
dec
mov
push
pop
xor
cmp
cld
pop
rorl
roll
xor
mov
xor
movb
xor
mov
add
add
lea
push
rorb
rorb
mov
mov
jmp
dec
fsub
mov
inc
je
pop
nopl
mov
jmp
jecxz
cltd
pop
aas
or
xor
lea
ror
add
add
push
jmp
rcll
or
das
cmp
sbb
inc
out
aam
jmp
jb
add
pop
jmp
insb
jmp
xor
call
push
popl
add
sub
xchg
mov
cmp
verw
push
pop
cmovns
dec
cld
mov
xor
add
movb
xchg
mov
sub
dec
jne
pushfw
call
push
popl
xor
push
and
call
and
lret
rcr
cmpsl
inc
sub
mov
rorb
movb
xor
mov
rolb
xor
mov
mov
xor
mov
add
rorl
mov
shll
jmp
movb
mov
add
rolb
inc
dec
jne
sub
pushfw
xchg
mov
sub
call
push
popl
xor
call
fdivrs
lods
mov
pop
mov
fwait
lea
xchg
mov
add
xchg
rorw
mov
xchg
cmp
jle
sub
xor
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
ljmp
mov
lea
nop
jmp
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
mov
add
add
pushf
subl
xorw
leave
scas
add
add
add
add
rolb
add
xorb
add
xchg
xor
add
add
add
movsb
add
add
add
add
add
or
add
negb
inc
dec
jne
jge
lret
push
incl
add
or
addl
enter
out
jg
add
add
lret
add
add
jge
add
call
in
inc
mov
cmpb
jnp
add
jmp
mov
scas
dec
fsub
mov
add
sub
xchg
nopl
sub
add
xchg
inc
sub
push
and
roll
mov
roll
or
rorb
rorl
movl
add
subb
inc
dec
jne
fadds
push
push
push
shrl
push
push
popf
mov
push
push
flds
pop
pop
pop
fcomp
xor
pop
sbb
fidivrs
pop
pop
pop
sub
lahf
xor
and
xchg
jl
movsb
jl
push
popa
arpl
pushf
jl
sub
jl
push
push
push
sub
add
add
sbb
add
inc
dec
adc
xor
add
add
mov
add
add
enter
add
rolb
add
std
add
add
add
movl
and
cmp
in
std
xor
add
dec
and
rolb
add
dec
pop
faddp
lea
sbb
add
inc
and
and
push
mov
xor
mov
popfw
xorl
mov
lds
cld
add
out
mov
flds
add
xor
add
and
add
add
decl
push
xchg
add
add
inc
dec
jne
sub
notl
or
cld
add
xchg
adc
inc
and
sub
xor
roll
roll
xor
rorb
rorl
mov
xor
mov
addb
inc
dec
jne
sub
nopl
subl
filds
mov
rorl
pusha
std
mov
sbb
add
add
and
roll
rorl
roll
or
rorb
add
add
add
negb
inc
dec
jne
sub
movb
movl
push
mov
add
or
add
sub
mov
popfw
jmp
mov
cmp
in
and
pushf
movsl
jp
mov
inc
roll
rorl
roll
jmp
pop
shlb
int3
adc
mov
int
xchg
ror
into
out
cld
push
pushfw
sub
mov
call
push
popl
or
call
fdivrp
push
mov
xor
incl
add
movsb
cld
inc
mov
add
add
xchg
add
add
orl
jge
add
add
test
pop
mov
rorl
movl
mov
and
add
negb
inc
dec
jne
sub
movb
movl
rorl
movl
rorb
push
add
xchg
mov
or
add
roll
movb
movl
mov
sub
xor
rorl
xor
movl
rorl
xor
mov
popfw
jmp
jbe
mov
pushf
push
xor
sub
xchg
mov
call
add
sbb
les
or
jmp
rorl
sub
xor
roll
xor
roll
roll
xor
mov
push
pop
decb
inc
dec
jne
sub
addb
pop
adc
mov
inc
inc
and
pusha
or
roll
add
notb
inc
dec
jne
sub
push
mov
add
negb
inc
dec
jne
sub
movb
movl
xchg
mov
add
mov
and
add
popfw
jmp
int
aas
pushfw
sub
xchg
and
movb
rorb
or
rorl
rorl
movb
add
sub
mov
rorl
sub
xchg
rorb
mov
sub
xor
rorb
roll
movb
xor
rolb
mov
movl
xor
mov
sub
call
xchg
cli
movsl
and
test
xchg
jns
sub
fwait
movsb
aam
sub
add
add
or
add
subb
sub
roll
add
add
adcl
add
mov
negb
inc
dec
jne
sub
rorb
xor
movb
or
roll
rolb
add
xorb
inc
dec
jne
sub
subb
jns
push
mov
add
negb
inc
dec
jne
sub
notl
jle
xor
add
inc
push
jbe
test
add
shrb
pushf
movsb
add
add
add
rolb
inc
dec
jne
sub
movb
movl
sub
mov
add
mov
popfw
jmp
add
scas
lea
call
sub
xchg
mov
mov
add
mov
sub
call
push
popl
or
push
pop
push
pop
xor
jo
call
aam
mov
push
mov
mov
imul
not
cmp
push
pop
fadd
mov
dec
pop
pop
fsub
nop
mov
xchg
xchg
dec
cld
mov
xor
add
mov
add
add
xor
call
rorl
roll
and
movb
movb
movl
or
mov
sub
add
mov
sub
xchg
mov
add
add
sub
push
and
rorb
rorl
rolb
or
mov
add
add
push
push
rorb
roll
movl
rolb
rorl
rorb
roll
xor
rorb
roll
xor
mov
mov
rolb
xor
mov
add
xor
add
xor
add
rolb
movl
nopl
rorb
rorl
rolb
roll
mov
add
sub
cmp
je
pushfw
sub
xchg
add
mov
sub
movb
movl
sub
xor
movb
xor
mov
xor
mov
movl
xchg
mov
sub
sub
call
ds
push
ret
sub
fisubl
xor
add
ljmp
and
adc
incl
movsb
add
add
sub
rorb
std
nop
aas
add
add
add
addr16
jl
add
add
push
push
push
mov
add
xor
add
add
add
decb
inc
dec
jne
sub
movb
movl
mov
add
mov
xor
add
popfw
jmp
push
es
cmp
xor
push
mov
mov
mov
mov
mov
pop
mov
add
mov
sub
xchg
mov
popl
rorb
mov
movl
sub
xor
movb
xor
movl
rorl
mov
xor
mov
xor
cmp
mov
je
push
pop
xchg
test
xor
shr
xchg
shr
mov
cmp
inc
verw
neg
add
arpl
mov
fadd
test
cmovns
inc
cld
push
push
mov
rorl
rorl
xor
rorl
mov
rorl
xor
rorb
rorl
xor
mov
add
and
add
and
add
and
rorb
or
rolb
roll
add
mov
xor
lea
lea
lea
xchg
push
nopl
lea
push
jmp
clc
shll
aaa
movsb
jmp
or
adc
push
das
cmp
sbb
jmp
inc
out
aam
jmp
jb
inc
jns
pop
insb
xor
xchg
pop
add
or
and
pushf
movsl
jp
jmp
mov
inc
pop
xor
shlb
int3
adc
sbb
test
out
xchg
fstps
push
and
push
pop
add
mov
add
add
movl
movb
jmp
subb
or
pushfw
push
or
rorl
mov
sub
call
rcrl
int3
cwtl
xor
pushf
or
and
sbb
add
and
decl
inc
subl
lea
add
add
add
jle
mov
push
jp
push
stc
inc
cld
mov
rolb
inc
dec
jne
sub
pushfw
call
push
popl
and
add
mov
call
mov
fdivrp
popa
xlat
pop
insl
jbe
mov
cmp
cmp
add
or
add
push
add
xchg
mov
decb
inc
dec
jne
test
jo
clc
xchg
dec
add
add
add
xchg
mov
add
add
add
add
xchg
add
add
mov
outsl
push
int3
sahf
mov
sub
mov
mov
push
inc
mov
fwait
pop
lods
add
mov
ret
bound
shr
push
jge
pop
into
push
or
cwtl
adc
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
dec
mov
and
add
addb
inc
dec
jne
and
arpl
cmpsl
add
lods
cltd
mov
and
mov
in
mov
xchg
mov
outsl
jecxz
stc
sbb
sbb
in
cli
sbb
sbb
push
sbb
mov
mov
sbb
mov
jp
loope
loope
cld
dec
jl
jnp
fucomp
push
jl
jnp
push
clc
dec
mov
jnp
sub
jns
jnp
stc
stc
mov
sub
add
fldl
cwtl
add
add
outsb
push
add
add
add
or
add
add
add
or
add
add
aad
add
addr16
ret
mov
or
aas
mov
pushfw
call
push
popl
and
push
and
call
or
sti
fildll
add
add
movsb
add
add
add
xor
add
push
mov
rorb
xor
mov
mov
xor
mov
xor
mov
add
incb
inc
dec
jne
sub
mov
pushl
js
pushl
incl
push
sub
rcrb
aad
inc
sub
repnz
outsl
fwait
xor
inc
xor
ljmp
push
into
mov
add
cmpl
roll
add
or
ficoms
xchg
and
add
decl
push
xchg
repnz
add
jne
jle
fdivr
cmp
add
add
cmp
add
add
incl
cld
ret
fstpt
cmpsb
popfw
bndldx
push
rorl
xor
roll
movl
xor
movb
xor
mov
add
rorb
inc
dec
jne
sub
movb
movl
add
xchg
mov
add
xchg
mov
popfw
jmp
into
cmpsb
addr16
sub
xchg
mov
neg
shr
mov
ror
cld
cld
mov
xor
add
mov
add
mov
xchg
mov
sub
call
push
popl
add
popl
roll
rolb
sub
xor
roll
rolb
mov
xor
movb
roll
xor
mov
mov
rorb
mov
and
add
sub
verw
cmp
push
pop
rcl
repz
and
mov
rorl
or
roll
add
rolb
xor
mov
rorb
xor
mov
rorl
xor
mov
add
popl
sub
xchg
rorl
mov
roll
xor
roll
xor
rorl
rorb
rolb
xor
mov
add
sub
rolb
sub
xor
rolb
xor
roll
mov
rolb
xor
mov
push
pop
cmovnp
mov
inc
arpl
mov
xchg
jmp
mov
rol
movswl
dec
push
pop
cmovs
mov
mov
mov
xor
cmp
neg
arpl
cld
add
mov
and
roll
roll
or
roll
roll
add
jmp
add
mov
sub
xchg
mov
shrd
xchg
arpl
shr
fmul
verw
cld
xchg
mov
add
mov
and
add
mov
pushfw
movb
mov
sub
call
rorb
mov
call
dec
popf
mov
adc
xchg
xchg
xchg
xchg
xchg
mov
add
addl
lcall
sbb
arpl
add
add
std
mov
jb
xorl
mov
add
add
adcb
add
jns
adc
or
add
addb
inc
dec
jne
sub
addw
add
add
add
add
sub
add
insb
adc
pushf
add
add
and
sub
mov
notb
inc
dec
jne
sub
movb
movl
mov
rorl
sub
xor
mov
rorb
xor
roll
xor
mov
pop
popfw
jmp
push
cmp
push
sub
mov
push
movl
roll
rorb
xor
roll
xor
mov
roll
xor
mov
add
add
rolb
mov
sub
xor
rorl
xor
mov
xor
mov
push
and
push
push
rorl
sub
xor
movb
movb
xor
movl
xor
mov
add
add
sub
roll
rorb
sub
xor
roll
rorb
mov
xor
mov
roll
rolb
xor
mov
mov
lea
add
call
push
popl
add
mov
sub
mov
or
add
call
mov
mov
push
sub
mov
add
roll
xchg
mov
sub
rorl
rolb
nop
jmp
adc
div
mov
pushfw
push
xor
push
add
call
or
add
add
add
roll
add
push
add
or
incl
add
jo
incl
add
rorl
jg
add
add
add
ret
sub
inc
add
add
dec
add
add
mov
xor
mov
or
add
and
add
rolb
inc
dec
jne
sub
rolw
or
mov
add
test
addl
sahf
add
add
mov
call
xchg
fists
add
inc
dec
jne
sub
movb
movl
and
roll
roll
or
roll
add
xchg
mov
add
popfw
jmp
mov
hlt
gs
xchg
sub
xchg
mov
movl
xor
rorl
mov
mov
xor
rorl
rorl
xor
mov
add
sub
rorl
movl
roll
sub
xor
rolb
roll
xor
rorb
xor
mov
call
loop
roll
dec
scas
enter
movsb
mov
cwtl
jb
lock
pop
add
add
addw
stos
outsl
cmp
add
pop
mulb
imul
and
add
push
pop
rolb
inc
dec
jne
sub
pushfw
rolb
mov
roll
sub
xor
mov
xor
rolb
rorl
xor
mov
call
push
popl
and
call
nop
jmp
and
sub
xor
mov
rorl
xor
mov
rorl
rorl
xor
mov
xorw
imul
push
shl
cld
xchg
push
add
add
add
add
add
decl
pushl
cmp
add
add
add
subb
inc
dec
jne
ret
sub
lret
inc
inc
mov
out
inc
inc
ret
cs
inc
inc
jae
ds
inc
inc
add
ds
inc
inc
adc
data16
adc
data16
mulb
inc
inc
inc
jae
ds
inc
inc
lret
out
inc
inc
inc
inc
ret
inc
add
jne
and
mov
pushl
add
std
xchg
dec
push
test
incb
sub
add
mov
sti
ret
dec
sub
lcall
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
jmp
stos
or
push
and
fstps
pop
push
movb
xor
roll
movb
xor
movl
movb
xor
mov
add
and
add
negb
inc
dec
jne
jg
cmpsb
add
add
adcb
add
cmp
mov
add
ffree
fsubrl
add
je,pn
pop
add
add
fmull
faddl
fcompl
inc
mov
cmp
add
add
mov
pop
and
fmull
iret
cld
fsubrl
cld
fdivl
fmull
pushl
add
mov
add
popfw
notb
xchg
push
movl
rorb
rorl
mov
add
subb
inc
dec
jne
sub
movb
movl
pop
rorl
rorl
rorl
and
rorb
rorb
roll
or
mov
mov
add
popfw
jmp
aam
push
and
push
and
arpl
verw
xor
cld
mov
and
add
xchg
mov
add
pop
rorb
rolb
nopl
movb
mov
add
push
mov
sub
mov
add
push
push
push
rorb
rolb
xor
roll
movb
xor
mov
xor
mov
add
and
add
add
sub
mov
rorb
sub
xor
mov
xor
movl
xor
mov
mov
sub
mov
mov
roll
xchg
mov
sub
add
pushfw
rorl
movl
sub
xor
movl
rolb
rorb
xor
roll
rorl
mov
xor
sub
mov
sub
movb
movb
sub
xor
rorb
mov
rolb
xor
movl
rorb
xor
mov
roll
sub
xor
mov
movb
mov
xor
movb
xor
mov
sub
call
mov
lahf
mov
mov
add
mov
rorw
sbbl
add
xchg
movsb
cld
inc
mov
add
add
inc
dec
jne
sub
notw
or
add
aas
mov
add
or
add
adc
add
subb
inc
dec
jne
sub
rorb
xorw
push
mov
add
jle
imul
dec
movsl
jl
or
and
jmp
mov
xchg
mov
sub
negb
inc
dec
jne
sub
rorb
rorw
sbb
push
pop
and
add
addb
inc
dec
jne
sub
pushfw
push
and
movl
roll
roll
sub
xor
rorb
xor
movb
xor
mov
call
add
lods
divl
push
iret
testl
add
add
add
subb
daa
add
inc
xorb
xorl
add
daa
aam
and
movb
or
movl
roll
rorb
add
decb
inc
dec
jne
test
inc
addr16
add
add
arpl
add
les
add
add
add
add
mov
inc
dec
adc
sub
add
add
xchg
test
loopne
repz
dec
and
inc
or
movl
rorb
add
addb
inc
dec
jne
popf
add
sbb
sbb
sbb
sbb
sbb
or
sbb
xchg
sbb
scas
movsb
add
add
add
rolb
inc
dec
jne
sub
movb
movl
push
push
mov
add
and
add
xor
add
rorl
rolb
push
roll
rorl
rorl
mov
add
or
add
popfw
notl
jg
sub
add
pop
xor
add
xchg
mov
xorb
inc
dec
jne
sub
movb
movl
mov
or
add
movb
movb
sub
xor
mov
movb
movb
xor
rorl
xor
mov
popfw
jmp
imul
fdecstp
mov
das
roll
mov
rorl
jmp
and
xor
rorl
roll
mov
sub
xor
rorl
rorl
mov
xor
movb
xor
and
rorl
movl
mov
or
rorl
rolb
add
sub
push
mov
xor
add
sub
mov
add
add
call
rorb
movb
rolb
mov
push
mov
add
add
add
pop
add
mov
push
mov
add
sub
mov
rorl
mov
or
add
push
pushfw
push
and
movb
roll
sub
xor
movb
rorb
xor
rolb
roll
xor
add
mov
sub
call
xor
jns
bound
push
pop
and
add
push
push
sub
mov
or
add
negb
inc
dec
jne
sub
push
push
push
xchg
mov
add
add
add
add
add
addb
inc
dec
jne
sub
notw
cltd
jle
mov
add
xchg
fs
mov
dec
and
or
roll
rorb
add
decb
inc
dec
jne
sub
movb
movl
sub
mov
and
rorl
or
rorb
add
popfw
jmp
sbb
ss
mov
mov
add
or
sub
xchg
sub
mov
sub
js
dec
push
pop
fmul
shl
bsr
or
mov
dec
cld
mov
or
add
add
mov
sub
push
mov
pop
nopl
dec
inc
push
mov
mov
mov
mov
mov
pop
lea
push
mov
mov
mov
mov
mov
pop
sub
add
push
mov
mov
mov
mov
mov
mov
mov
pop
mov
rorl
movl
jmp
sbb
mov
js
mov
movl
call
push
popl
xor
mov
sub
push
and
roll
rolb
mov
or
roll
add
xor
add
mov
sub
xor
movl
rolb
xor
roll
roll
xor
pop
sub
push
mov
add
add
add
movl
roll
rorl
xchg
mov
sub
rolb
mov
roll
rolb
rorl
mov
add
sub
popa
push
xor
push
add
verw
xchg
arpl
mov
cmp
mov
neg
push
pop
test
xor
xchg
cld
cld
push
mov
or
add
or
add
mov
add
call
pushfw
call
push
popl
or
sub
xchg
mov
sub
mov
popl
call
clc
les
pop
bound
push
bound
les
add
mov
push
add
xchg
mov
incb
inc
dec
jne
sub
addb
ja
dec
add
add
and
decl
incl
pushl
mov
inc
test
fadd
dec
and
xor
inc
and
push
xor
rorl
rorb
xor
mov
rorb
inc
dec
jne
sub
xchg
rorb
xor
mov
sbb
incl
add
repz
notw
or
add
add
repnz
inc
inc
and
imul
add
add
add
ss
dec
jne
sub
notl
or
incb
add
and
add
out
fmuls
dec
fs
add
xchg
or
in
cld
decl
inc
addl
inc
dec
jne
sub
nopl
push
push
movl
xor
movl
xor
roll
xor
mov
add
xor
add
negb
inc
dec
jne
sub
movb
movl
pop
push
mov
add
add
and
add
popfw
jmp
xchg
aaa
dec
pop
push
xor
mov
call
mov
and
rorl
roll
rolb
or
lea
ja
xor
rcl
cmp
mov
inc
cld
mov
and
add
push
push
push
pop
and
add
add
add
or
add
jmp
sub
xchg
mov
sub
xchg
mov
inc
cmp
shl
cmp
xchg
mov
sbb
lea
mov
push
pop
cmovb
fmul
rcr
not
cmc
cld
mov
add
sub
mov
sbb
mov
rorl
rorl
jmp
flds
add
add
or
jbe
in
add
push
dec
dec
outsl
push
pushfw
call
push
popl
xor
add
mov
call
int
push
sub
and
rorb
roll
rorb
or
movb
add
nopl
notl
lock
dec
xorl
aam
push
repnz
mov
add
add
add
add
imul
and
test
mov
add
add
push
rorl
roll
mov
xor
rorl
rorl
xor
rorl
roll
movb
xor
mov
add
and
add
or
add
incb
inc
dec
jne
sub
subw
push
js
add
add
add
add
decb
inc
dec
jne
sub
addb
icebp
xorl
mov
add
add
adc
add
add
jne
sub
push
movb
xchg
mov
sub
rorb
inc
dec
jne
sub
push
movb
roll
sub
xor
rolb
movb
movb
xor
rolb
rorl
rolb
xor
mov
notb
inc
dec
jne
sub
movb
movl
movl
roll
roll
sub
xor
rorb
xor
rolb
rorb
xor
mov
movl
roll
rorl
xchg
mov
sub
popfw
jmp
jo
cs
lock
roll
ret
adc
adc
or
push
jne
andl
jmp
ss
movsb
or
push
xchg
lea
push
push
xor
push
or
repz
cmp
not
lea
arpl
fmul
mov
xadd
lea
dec
cld
add
xchg
mov
pop
push
lea
pop
sub
xchg
pop
sub
push
mov
rolb
movl
sub
xor
movb
xor
mov
rorl
movl
xor
mov
sub
and
rolb
or
rorb
movl
rorl
add
sub
xchg
mov
mov
add
xchg
mov
add
call
rolb
roll
rorl
and
roll
roll
or
push
mov
or
add
sub
push
mov
xor
add
add
add
call
push
popl
or
push
xchg
mov
add
add
rorl
rorl
rorb
xchg
mov
sub
mov
nopl
sub
pushfw
call
push
popl
add
rorb
rorl
sub
xor
rorl
rorl
mov
xor
rorl
rorl
xor
rolb
movl
sub
xor
rolb
xor
roll
xor
mov
sub
popl
sub
xchg
xchg
mov
add
sub
call
bound
mov
jmp
push
roll
xor
movb
roll
rorl
xor
roll
movb
mov
xor
mov
add
or
add
subw
mov
add
xchg
mov
rorb
inc
dec
jne
sub
subw
or
xchg
add
add
incl
add
jp
cs
adcl
xor
add
rorb
inc
dec
jne
sub
movb
movl
mov
add
and
movb
movl
mov
or
roll
rorl
roll
add
popfw
jmp
xorb
inc
inc
and
int
dec
and
push
xor
push
and
rorb
roll
movb
or
rorl
rorl
roll
add
add
sub
mov
sub
xchg
sub
mov
sub
push
roll
sub
xor
rorb
rorb
rorl
xor
roll
rorl
roll
xor
mov
sub
xchg
mov
add
roll
rorb
movb
movb
rorl
rolb
rorb
call
push
popl
add
push
push
push
pop
xor
add
xor
add
add
rorl
mov
sub
xor
mov
xor
rorl
roll
movl
xor
mov
xchg
mov
sub
push
mov
add
sub
pop
jmp
jno
xlat
les
cs
pop
gs
push
xchg
pop
push
call
push
popl
or
mov
not
mov
nop
lea
bt
neg
xor
cmp
arpl
inc
shl
test
xor
mov
mov
fadd
cld
mov
roll
mov
or
add
movl
roll
movl
xor
rorl
movb
mov
xor
roll
xor
mov
add
add
push
mov
mov
mov
pop
jmp
fistl
or
inc
push
nop
mov
jmp
lret
test
cmpsw
jmp
push
jmp
std
repnz
sar
or
lahf
in
mov
mov
jmp
insl
mov
dec
push
mov
pop
xchg
xchg
lea
push
mov
mov
mov
mov
mov
pop
push
roll
rolb
call
push
popl
and
mov
add
add
xchg
mov
call
push
popl
and
mov
sub
xchg
mov
add
pop
xchg
add
inc
xchg
push
jmp
add
push
dec
dec
outsl
jl
pop
mov
es
add
mov
lods
jne
jnp
icebp
push
inc
pop
xor
pushfw
movb
rolb
call
push
popl
and
call
push
popl
or
call
pop
cmp
fildl
iret
ficompl
add
or
clc
clc
add
xchg
mov
pushfw
mov
sub
call
rorl
rorl
mov
call
sbb
or
mov
add
rorw
mov
mov
xchg
xor
add
inc
dec
jne
jle
sar
call
pop
repnz
div
rol
cmp
mov
mov
lea
xchg
xchg
lret
cmpsl
dec
imul
jo
outsb
setl
shlb
inc
pop
xor
jmp
shlb
int3
adc
jmp
div
fs
xchg
shr
daa
leave
into
out
cld
test
or
add
cmp
jle
sub
mov
sbb
xlat
les
cs
pop
xorl
push
pop
inc
xor
les
adc
add
xchg
jne
std
gs
std
push
jp
jp
repnz
jp
jp
mov
fstp
xchg
pop
cmp
dec
fs
repnz
xor
sahf
pop
mov
sub
mov
loopne
into
ja
movsl
mov
jb
data16
les
out
lods
push
push
and
cs
int3
popf
lcall
adc
lock
pop
cli
and
dec
int
dec
add
add
rorl
mov
add
fwait
incb
add
mov
arpl
push
roll
xchg
mov
sub
or
add
rorb
inc
dec
jne
pusha
cli
sbb
add
lcall
and
mov
add
add
rolb
loopne
add
add
push
ret
popa
mov
add
xor
jmp
das
lods
cmp
addl
add
push
add
jmp
icebp
mov
loopne
dec
call
or
add
xor
push
adc
or
nop
push
adc
add
add
inc
inc
cmp
inc
inc
insb
sbb
iret
pushl
pushf
and
inc
test
decl
pushf
and
call
mov
pushl
pushf
and
decl
jmp
xorw
and
sub
mov
subb
inc
dec
jne
sub
rorw
xor
add
add
inc
dec
jne
sub
movb
movl
pop
push
xchg
mov
add
or
add
popfw
jmp
xor
cli
xor
shll
out
sub
xor
sub
add
ror
add
sub
jmp
cwtl
icebp
push
inc
sub
insl
add
add
sub
ror
rolb
sub
xchg
movb
sub
xor
rorl
movl
mov
xor
roll
movl
xor
mov
sub
push
rorl
roll
xchg
mov
sub
sub
add
xchg
mov
add
mov
push
push
sub
mov
xor
add
add
mov
or
add
ror
rorb
movl
movb
sub
xor
movl
mov
movl
xor
roll
roll
xor
mov
sub
xchg
rorl
rorb
roll
xor
mov
mov
xor
roll
xor
mov
add
sub
mov
lea
cmovbe
movsbl
mov
shl
cmovno
neg
inc
cld
rorb
xchg
mov
sub
sub
mov
sub
rorb
mov
mov
rorl
nop
movl
roll
rorb
rorl
movl
xchg
mov
sub
push
add
xchg
mov
sub
add
xchg
mov
add
rolb
nop
ror
pushfw
add
mov
call
push
popl
xor
call
test
mov
add
pushl
xor
rorb
roll
rorl
xor
movb
xor
mov
add
xchg
rolb
xor
add
xor
add
rorb
inc
dec
jne
sub
movb
movl
pop
push
mov
add
add
xor
add
popfw
jmp
inc
adc
test
ljmp
and
xor
call
push
popl
xor
push
mov
add
add
sub
mov
and
rorb
movb
or
rorl
roll
movb
add
push
xor
push
mov
add
add
add
add
mov
rorl
jmp
jmp
jp
mov
inc
pop
xor
shlb
push
les
pushf
push
push
add
call
hlt
add
mov
daa
es
push
xchg
decl
add
add
push
mov
or
add
notb
inc
dec
jne
sub
movb
movl
push
sub
mov
xor
add
sub
mov
popfw
jmp
jnp
sub
sub
dec
inc
push
jmp
or
add
pop
xor
sub
add
jno
xchg
xchg
lea
ror
sub
add
add
jmp
push
push
mov
mov
mov
mov
mov
pop
jmp
arpl
fidivrs
js
mov
sub
sub
jmp
mov
or
call
push
popl
or
movl
rorl
rorb
sub
xor
rorl
xor
rorl
movb
xor
movb
rolb
mov
mov
rorl
xchg
mov
sub
sub
lea
je
inc
jb
shl
cmc
cld
roll
roll
sub
xor
movl
mov
xor
roll
mov
xor
mov
and
mov
or
rolb
add
ror
pushfw
call
push
popl
add
sub
xchg
pop
sub
call
ja
stc
and
aam
in
sbb
shll
scas
int
leave
add
mov
pushfw
sub
xchg
roll
sub
xor
mov
xor
movb
xor
mov
sub
call
push
popl
and
call
xor
decl
incl
add
sbb
xor
add
xor
xor
lea
lea
push
rorl
roll
and
roll
rorl
or
rorl
movb
mov
add
subb
inc
dec
jne
sub
or
cmpsl
cmpsl
hlt
not
cmp
outsb
dec
outsl
bound
mov
cmpsl
pop
jp
sub
cmpsl
cmpsl
mull
pop
jo,pn
cmpsl
cmpsl
cmpsl
and
xlat
push
mov
out
pusha
movsl
push
push
sbb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
jmp
shll
jmp
aaa
movsb
or
push
das
cmp
sbb
inc
out
jmp
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
add
add
add
cli
sbb
dec
and
jmp
xchg
movsb
cld
incl
add
inc
dec
jne
inc
stos
loopne
inc
push
xchg
mov
rol
inc
test
inc
push
in
mov
movsb
cld
jmp
pushfw
call
push
popl
add
xchg
mov
sub
popl
sub
xchg
mov
call
lahf
outsl
shll
xchg
or
push
jae
jmp
roll
xchg
mov
add
addb
in
sub
fs
xchg
ror
into
out
cld
test
or
add
sub
add
jle
sub
mov
sbb
xlat
les
cs
iret
pop
gs
dec
loope
jmp
hlt
sbb
fidivrs
ljmp
lea
nop
mov
xor
lret
test
cmpsw
push
std
repnz
sar
lahf
in
jmp
mov
mov
test
xor
imul
stos
or
push
and
and
xor
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
sub
mov
or
icebp
push
inc
sub
addl
mov
mov
decl
sbbb
and
faddl
movsb
add
add
sub
rorb
inc
dec
jne
cmp
and
sbb
adc
add
leave
or
add
stos
sbbb
xchg
outsb
outsb
dec
add
add
cmp
imul
jmp
adc
lcall
jmp
jbe
pop
jle
sti
decl
imul
jl
lret
cmp
add
add
cmp
add
add
jmp
or
cld
ljmp
jnp,pt
pop
add
add
js
pop
add
add
sub
xorb
inc
dec
jne
sub
movb
movl
and
rolb
mov
mov
or
movl
add
mov
mov
sub
xor
movb
xor
rorb
roll
movb
xor
mov
popfw
jmp
fdiv
add
movsl
push
or
pushf
sub
mov
xchg
mov
sub
call
in
aam
xchg
hlt
aam
clc
stc
sbb
ljmp
add
add
add
notl
cltd
ja,pt
add
add
shlb
add
movsb
jbe
pop
arpl
add
cltd
jle
add
add
add
add
add
mov
mov
add
nop
push
add
add
add
add
xor
call
js
rclb
movsb
inc
jp
add
xchg
mov
xorb
push
test
jge
notl
xchg
mov
mov
cld
push
cltd
dec
add
add
jne
jge
mov
add
pop
cmp
add
add
add
add
aas
mov
or
inc
mov
mov
int3
fdivrl
je
add
add
inc
and
in
mov
dec
loope
int3
and
test
ljmp
and
mov
add
add
add
xor
add
mov
or
add
popfw
subb
sub
das
add
add
cltd
jle
cmp
add
lret
jl
decb
inc
dec
jne
sub
subl
xor
jle
push
cmp
fsubr
mov
xor
xchg
adc
push
add
xchg
mov
decb
inc
dec
jne
sub
addb
fists
mov
add
sbb
add
push
btc
jmp
sbb
add
negb
inc
dec
jne
sub
push
mov
rorl
movl
pop
negb
inc
dec
jne
sub
rolw
sbb
sbb
add
jo
add
add
add
decl
and
in
add
xor
mov
call
mov
cltd
mov
inc
sarl
lock
mov
add
addb
sahf
pop
sub
mov
decb
inc
dec
jne
xor
add
add
push
idiv
gs
adcl
sbb
fisttpl
add
cmp
jmp
jle
sub
mov
sbb
xlat
jmp
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
add
add
add
jl
add
ljmp
pop
add
add
repnz
test
add
cltd
or
add
add
push
cltd
jo,pt
add
add
push
mov
test
call
dec
and
mov
and
add
incb
inc
dec
jne
sub
addb
repnz
ret
add
incl
decb
std
xchg
add
incl
push
test
jg
fs
jg
es
pushl
jle
xor
pushl
jmp
inc
push
mov
xor
and
push
add
incl
inc
dec
push
test
decb
pop
loop
test
xchg
ret
insl
scas
pop
hlt
stc
dec
lock
mov
cmp
cmp
popa
out
xchg
jecxz
into
mov
sub
xchg
ja
popf
mov
jg
inc
or
pop
inc
inc
addr16
pop
mov
es
mov
scas
mov
test
sbbb
lds
cwtl
les
add
mov
or
mov
rorl
rorb
add
negb
inc
dec
jne
jg
mov
add
cmp
add
add
cmp
add
add
add
add
cs
cmp
mov
dec
inc
cmp
fdivrs
fdivl
pop
add
add
jg
add
add
fdivrl
cld
ffree
fsubrl
mov
cmp
test
lcall
inc
and
lods
add
popfw
rorl
repnz
rcrb
add
decl
push
nop
add
add
inc
dec
jne
sub
movb
movl
movl
roll
xor
movb
rorl
xor
rolb
mov
xor
mov
add
mov
and
add
popfw
jmp
lcall
repz
scas
rorb
rorb
nop
rolb
rorb
rolb
nopl
xor
xchg
xchg
sub
sub
xor
lea
ror
pushfw
call
push
popl
or
call
rolb
mov
rorl
mov
call
lods
add
pop
les
lcall
add
rorb
sub
xor
rorl
movb
roll
xor
rorb
rorb
xor
mov
rorw
mov
add
inc
and
xor
rorl
rolb
rorl
xor
rorb
rorb
roll
xor
mov
add
add
add
negb
inc
dec
jne
sub
movb
movl
sub
mov
add
xchg
mov
popfw
jmp
in
call
rorb
rorb
roll
mov
call
roll
movl
rorl
mov
inc
mov
cld
roll
rorb
xchg
mov
sub
mov
or
add
xor
roll
call
rorb
mov
push
add
xchg
mov
sub
rorl
sub
xor
mov
movb
xor
rorl
xor
mov
add
xor
add
sub
push
jmp
jo
outsb
setl
add
mov
inc
pop
xor
shlb
pop
dec
adc
jmp
div
fs
lea
add
sub
dec
jne
pushfw
sub
mov
call
rolb
movb
mov
call
or
mov
pop
call
add
mov
addb
mov
jle
dec
add
cld
decl
incb
inc
dec
jne
sub
movb
movl
pop
rorl
movb
rorb
xor
rorb
xor
movl
xor
mov
add
popfw
jmp
or
adc
ret
in
xchg
lea
pop
mov
roll
rolb
call
push
popl
add
push
roll
xor
movl
rorl
xor
roll
xor
mov
add
sub
mov
xor
add
add
pop
call
push
popl
and
rorl
roll
sub
xor
mov
rorb
xor
rorl
xor
mov
movswl
rol
xchg
mov
and
push
pop
mov
fadd
xor
lea
mov
cmp
cmovbe
cld
cld
push
roll
rorb
roll
xor
movl
movl
rolb
xor
roll
mov
xor
mov
add
add
add
and
rorl
rorl
or
movb
roll
rorl
add
ret
