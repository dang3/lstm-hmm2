lcall
push
mov
mov
xor
test
je
cmp
mov
test
idiv
jl
mov
mov
push
call
pop
ret
lea
push
std
incl
push
mov
cmpl
je
push
jmp
cmpl
je
or
jne
push
pop
sti
mov
pop
jmp
adc
testb
jo
add
xchg
or
jle
gs
addb
cltd
mov
idiv
mov
mov
sub
mov
dec
jbe
fstps
add
or
test
mov
or
in
adc
jnp
lods
fstpl
test
push
hlt
cwtl
adc
gs
cmpsb
imul
fdiv
pop
scas
insl
lcall
pop
jle
imul
jmp
call
rcll
mov
pop
jae
rcrl
jmp
and
in
in
jmp
sbb
xor
in
in
out
out
dec
jae
shr
out
out
out
lock
icebp
rcrl
xor
repnz
in
mov
repz
hlt
sub
push
inc
xor
lcall
cmc
hlt
dec
rcrl
div
cmc
divl
insb
sbb
pop
sbb
or
cltd
fcomps
mov
or
mov
sub
ljmp
fistpll
les
mov
mov
add
and
xor
pushl
lds
cmp
jl
jne
xchg
push
pop
iret
scas
mov
sub
data16
out
xchg
lret
mov
xor
xor
push
xchg
xor
fwait
cmp
inc
cmp
push
or
hlt
jnp
cld
cmpsb
push
in
add
add
mov
mov
push
mov
pushl
enter
adc
lea
pop
clc
shl
jmp
movsb
pop
pop
pop
leave
pop
out
sarl
and
pop
pop
jne
movl
pop
cwtl
add
out
add
and
shr
movsl
stc
inc
jbe
test
add
push
outsl
mov
xor
cmp
sbb
lahf
and
addb
or
in
inc
sbb
adc
jne
jnp
jo
push
pushl
add
pushf
sbb
push
shll
enter
outsb
js
jb
loopne
pop
jle
lods
nop
sbb
cmp
and
and
push
ret
dec
idivl
fs
jne
push
push
xchg
add
xchg
insb
cs
mov
fsubr
sub
fs
movsl
cs
inc
aaa
mov
dec
fidivs
shrb
xchg
or
out
and
nop
out
je
xor
pop
push
insb
lock
push
rcl
popa
cmp
stos
loopne
xor
push
add
dec
testb
adc
jo
inc
mov
aam
or
jne
lea
int3
add
push
movsl
rclb
clc
loopne
push
sub
mov
push
push
push
push
call
cmp
xor
jmp
outsl
sub
adc
pop
in
shr
mov
jne
dec
adc
subps
incl
fs
sahf
jnp
mov
fmuls
test
out
mov
mov
nop
xor
pop
sbb
fstpl
mov
push
mov
clc
mov
pop
push
ret
pop
cmp
and
lock
add
push
sbb
ljmp
mov
fistpl
cli
lea
rep
repnz
add
add
leave
push
xor
pop
mov
dec
xor
sbb
cld
cmp
ja
cmp
sti
mov
cmp
cmp
sbb
or
testl
cmp
pop
add
sbb
inc
jl
cmp
or
fisubs
frndint
add
and
orl
inc
add
fsubrl
add
push
or
in
ret
mov
mov
push
movzbl
inc
les
orl
or
pop
rcrb
mov
in
outsb
fildll
sbb
add
xor
cmp
outsb
je
push
add
notl
cld
lahf
push
lea
mov
xor
pop
dec
jne
jmp
push
frstor
mov
pop
and
pop
cmp
jnp
xor
push
rcrl
sbb
rorb
cmp
rcl
push
pop
ud2
rolb
push
ljmp
test
jge
hlt
lret
popa
test
jp
jge
lcall
xor
mov
int3
jo
mov
or
into
push
mov
mov
daa
insb
testb
add
adc
push
mov
test
notb
pop
add
adc
inc
mov
or
insl
xchg
test
je
pop
mov
sub
mov
or
addl
sbb
out
push
and
and
add
or
push
call
mov
je
adc
arpl
push
push
and
push
sbb
mov
or
in
andl
popa
add
jnp
das
cld
or
ret
outsl
aas
adc
xlat
enter
data16
dec
or
push
dec
aad
rcll
cltd
adc
inc
pop
mov
loope
pop
pop
add
mov
mov
pusha
cmp
mov
pop
adc
mov
dec
mov
les
sbb
mov
mov
or
sbb
jnp
testb
push
das
xor
cmp
in
rorb
pop
add
ja
stos
lock
pusha
sbb
xor
decl
fwait
decl
rorl
inc
jbe
mov
xor
sti
fildll
or
rcrl
sub
pusha
mov
lock
xor
mov
push
add
mov
int
add
ds
outsl
cmpsb
jge
negb
pop
mov
mov
int
xlat
jl
push
or
rcrb
aas
mov
shr
out
add
clc
mov
jle
pop
xchg
testb
cmpb
shl
or
lahf
pop
cmp
lods
xor
in
add
push
std
ds
mov
ret
nop
add
enter
ret
inc
adc
gs
dec
stos
or
es
or
stc
movsl
jns
add
ss
inc
in
stc
movsl
stc
inc
lret
sub
fldl2t
movsl
mov
int
ret
cmpsl
stc
adc
movsbl
aam
xor
push
push
mov
test
data16
or
sbb
stos
roll
jns
push
mov
rolb
adc
lret
pushl
enter
adc
sar
pop
or
rorl
mov
sub
cmp
jl
lea
inc
in
imul
push
push
fidivrs
pop
je
add
push
xchg
jl
add
inc
ds
and
xor
sbb
shrb
hlt
test
xor
fcmovbe
outsl
cmc
call
pop
pop
insl
ret
nop
xor
pop
ret
outsl
inc
or
ss
shrb
data16
cmc
insl
inc
push
cmpsb
or
and
orl
rorb
inc
sbb
xor
pop
pop
ds
jno
cli
addr16
dec
lea
mov
scas
add
sti
sbb
insl
xchg
sbb
mov
pop
xlat
pusha
sti
mov
pop
ret
cmpb
pop
mov
jne
mov
pop
push
mov
cmp
dec
inc
mov
cmp
mov
je
dec
popf
ljmp
push
divb
and
lcall
es
psubusb
jmp
xchg
push
push
aad
pusha
bnd
push
out
std
addb
and
push
pop
push
scas
pop
mov
push
push
push
mov
jmp
mov
and
cld
cld
inc
pushl
lods
pushl
mov
mov
pusha
sbb
push
hlt
sbb
ss
mov
cmpb
mov
adc
repz
cmp
xchg
loopne
jne
and
jo
xor
push
lods
or
add
xor
jnp
and
sub
bound
fdivs
jmp
arpl
sbb
icebp
add
aas
push
push
jmp
test
jbe
push
cld
mov
outsb
add
cmp
rorb
enter
loope
int3
inc
push
sub
mov
sbb
jecxz
stos
fiaddl
sti
add
arpl
inc
les
cs
push
push
jl
gs
rclb
mov
fiaddl
jb
push
ds
mov
mov
xlat
pop
ss
push
push
add
adc
inc
push
xchg
ret
pop
adc
pop
inc
lahf
xchg
sbb
or
push
mov
adc
lea
sub
jp
mov
or
sti
arpl
adc
mov
adc
cmp
ja
sub
hlt
out
ss
pop
push
jnp
ffreep
pop
ds
addb
nop
fucompp
or
dec
out
imul
repnz
jne
pushl
hlt
loopne
bt
mov
pop
add
cwtl
dec
scas
and
xor
in
lds
scas
mov
les
mov
push
jp
pop
jge
push
lea
sub
xor
push
mov
call
out
sub
je
fildll
dec
and
push
daa
sub
xor
push
movsb
push
push
mov
xor
push
sbb
push
dec
push
cmp
dec
add
ret
mov
loopne
push
sbb
sub
scas
push
push
push
push
mov
sub
mov
add
fstl
stos
add
mov
mov
push
data16
add
jmp
cmp
outsb
xchg
jb
pop
pushf
and
or
mov
push
js
mov
jmp
mov
sub
inc
and
xor
cs
or
push
and
fcoml
stos
loop
pushl
lock
jns
or
jmp
mov
cmpsb
inc
stc
jb
fs
in
or
sub
das
push
aas
sbb
push
sub
adc
mov
or
mov
cmpl
mov
dec
or
shll
shll
shll
inc
sbb
shl
adc
mov
outsb
sub
and
rolb
out
cltd
mov
lods
or
mov
in
jp
cmp
mov
sbb
out
int3
sbb
les
imul
jmp
sbb
sub
gs
sub
xor
adc
or
dec
mov
aam
and
icebp
mov
jmp
push
movl
movsb
cmp
fisubrs
push
or
push
or
sti
and
ret
cld
pop
jmp
mov
addb
mov
rolb
add
ljmp
jl
loopne
or
sbb
jb
pop
outsb
mov
sti
aaa
jnp
les
pop
sbb
push
shll
outsl
mov
mov
sbb
dec
xchg
add
adc
inc
and
test
je
xor
cmpsb
lahf
dec
out
adc
mov
call
std
dec
fldt
cmpsl
cmp
je
mov
faddp
sub
and
and
data16
sbb
dec
and
std
ss
inc
adc
cmp
xor
mov
mov
add
or
jns
and
push
or
test
add
push
negl
mov
je
inc
push
test
pop
bound
push
cmp
push
cmp
lods
nop
das
rorb
push
push
pop
mov
cmp
das
cmp
jne
push
push
pop
mov
rep
pop
mov
add
out
xor
orb
push
push
pushf
mov
hlt
push
in
fdiv
or
push
mov
and
clc
cmp
add
popa
adc
adc
dec
imul
clc
inc
inc
inc
shl
cmpsl
sub
dec
cmp
pop
repnz
insb
push
or
add
jb
test
scas
and
test
push
pop
rep
xchg
xor
or
push
dec
pop
mov
fs
jp
in
mov
lea
sub
mov
mov
jecxz
or
ja
call
mov
pop
into
hlt
mov
add
out
mov
sbb
mov
rol
dec
and
lea
inc
push
adc
sub
imul
loop
mov
ret
ret
add
jl
lcall
xchg
test
enter
repnz
push
lds
mov
jb
jp
jle
loop
jg
inc
sbb
mov
sbb
jp,pn
inc
ss
sbb
cmp
jl
pop
mov
and
inc
or
cwtl
lods
xchg
aas
sbb
ret
jmp
push
mulb
or
mov
pop
push
push
mov
fwait
push
fadds
push
adc
adc
cmpw
notb
movsl
sub
push
idivb
adc
adc
adc
push
xchg
or
jl
cld
add
pmullw
inc
jo
in
jl
adc
subb
lea
mov
xchg
pushf
mov
and
mov
jo
mov
add
loopne
jo
cmp
and
lock
je
test
je
mov
es
std
jle
test
jl
push
push
lea
push
push
inc
push
and
add
jne
fldcw
sti
ss
or
out
jne
mov
lods
or
dec
and
and
mov
outsl
mov
fsubrs
push
cmp
loop
sbb
or
add
sub
xor
insl
rorl
mov
das
call
xor
or
mov
in
mov
xchg
add
xchg
mov
mov
and
xor
jnp
or
test
xchg
pop
into
push
addl
mov
mov
mov
dec
mov
push
inc
lcall
xchg
push
lahf
mov
lea
mov
fiaddl
mov
daa
cmpl
rorl
or
push
je
hlt
dec
mov
cli
test
das
icebp
and
js
jno
pusha
mov
adc
jg
jecxz
push
decl
pop
test
ds
gs
or
cld
aaa
in
mov
push
mov
cmp
cmpsb
je
sbb
sbb
shlb
dec
adc
add
adc
idivw
sbb
sbb
jne
add
add
sub
jbe
adc
insb
jmp
xor
insb
pop
setl
pop
mov
pop
hlt
stos
or
add
push
mov
inc
cmc
into
jb
fadds
push
inc
cmp
sbb
and
scas
adc
js
lea
std
orb
jne
sub
sarl
sarl
add
pop
jmp
push
pop
push
or
cmp
popf
sbb
jo
mov
push
push
sti
mov
push
jecxz
adc
add
fsubl
jmp
xchg
movl
loopne
dec
or
push
adc
xor
cmp
mov
lcall
in
lock
inc
push
lods
addb
popa
add
dec
sub
cmp
je
mov
outsl
sti
mov
adc
inc
inc
dec
decl
inc
cmp
push
or
dec
dec
mov
test
sbb
or
add
mov
movl
and
add
std
pop
cmp
lea
and
xchg
test
mov
xchg
lret
in
pop
lods
sbb
mov
sub
clc
and
cmp
movsb
push
dec
mov
dec
sub
add
or
mov
dec
mov
pop
cmc
lods
repnz
testb
movl
adc
push
std
test
ljmp
mov
mov
shr
pop
cmp
mov
cmpsl
pop
imul
push
jo
in
jg
cmp
xor
pushl
lea
or
xchg
pushf
popf
in
addr16
push
test
and
add
test
push
xor
sahf
shlb
fstpt
lea
negl
sub
pop
subb
movsb
sub
aaa
pop
cmp
stos
test
push
es
jg
je
jl
push
pushf
lea
lea
pop
sbb
push
movsl
mov
mov
inc
mov
repz
call
lea
jbe
int3
es
rorb
sbb
out
loopne
push
push
push
lea
sbb
adc
sbb
xor
dec
jmp
in
out
adc
cmp
sub
in
lret
adc
push
mov
flds
inc
cs
push
adc
pop
fcos
jo
cmp
mov
inc
push
testb
les
pop
mov
push
jo
cld
adc
fisubl
xor
add
and
or
push
stc
xor
cs
cmp
mov
inc
and
adc
push
push
out
pop
jl
fdivl
pop
jge
int3
jo
in
pop
cmpsl
xlat
popf
int3
test
mov
adc
sbb
mov
fs
cmp
jg
pop
or
jns
push
push
mov
push
call
scas
xor
or
nop
add
popa
push
movsb
les
nop
sub
inc
add
or
lahf
push
and
fcoml
fwait
in
lods
call
jle
outsl
aam
fadds
jmp
push
fs
daa
sbb
pop
sbb
lock
movsb
pusha
movl
in
loopne
iret
sbb
fdivrl
sub
addb
lds
sbb
push
pop
lds
jb
and
inc
aam
pop
fdivrs
shlb
fimuls
cmp
dec
push
push
rcll
int3
add
and
sub
lock
clc
insb
push
push
or
outsl
or
je
jmp
add
dec
mov
ret
mov
inc
pushf
lock
add
pop
pop
xor
cmp
pop
push
cwtl
iret
add
inc
xor
mov
add
int
mov
mov
cmpsb
or
cmp
mov
adc
stos
js
adc
insl
or
pusha
cmc
hlt
inc
repz
mov
ja
repnz
and
test
cmp
idiv
cld
sti
jmp
inc
pop
cli
cmp
add
xchg
mov
aaa
add
adc
dec
lock
push
xor
in
cld
or
mov
mov
push
push
mov
add
add
loopne
lock
mov
dec
sub
std
xor
add
mov
jle
xor
add
xor
push
or
and
dec
ret
imul
mov
in
xchg
sub
xlat
push
pop
cmp
dec
mov
pop
lea
andb
test
incl
mov
movb
scas
subb
fmuls
and
adc
push
add
xor
mov
pop
stc
lea
and
cmp
mov
mov
mov
cmp
jl
dec
mov
imul
insb
push
sub
push
jo
mov
xor
jle
mov
add
sbb
xlat
les
or
jle
lock
adc
je
cmp
ja
sar
das
sub
test
mov
and
sub
xchg
loopne
fsub
lcall
clc
cmp
fcomps
mov
in
test
rol
push
pop
dec
repnz
mov
popa
push
sub
in
bound
xor
or
pop
push
or
bound
roll
cwtl
shrb
test
push
mov
test
stos
out
ror
clc
stos
add
sbbb
or
aas
inc
arpl
daa
inc
cs
cwtl
aas
cmp
ret
mov
cs
inc
sbb
mov
iret
push
xor
add
cli
dec
adc
add
sub
lea
push
adc
sbb
lcall
fcomps
rorb
pop
sahf
clc
mov
mov
scas
add
aad
push
adc
push
jmp
daa
clc
mov
ud0
push
repnz
loopne
sbb
jo
inc
jbe
mov
xor
push
cmp
mov
incl
push
adc
xchg
mov
cmp
je
jmp
cmp
call
cltd
pop
idiv
mov
inc
mov
mov
and
jg
repz
lea
jle
testb
or
add
xor
mov
in
sub
push
or
inc
into
sbbb
push
lret
hlt
lret
mov
pop
cmp
pop
aam
loop
roll
out
and
dec
or
flds
insl
test
pop
or
push
call
push
xchg
pop
or
js
jne
sbb
xor
mov
inc
addr16
and
adc
mov
xchg
mov
xor
mov
inc
xor
ret
jmp
inc
jle
cmp
push
insl
jle
in
icebp
jmp
ficomps
pop
ret
push
lods
dec
aad
mov
je
or
push
sub
jg
testb
movsb
inc
stos
test
jns
sub
jg
fsts
jb
mov
fs
enter
lea
fadd
dec
mov
adc
sbb
xor
adc
pop
or
sub
fcom
notb
jae
add
mov
push
or
movsb
test
mov
dec
in
mov
add
xor
cld
add
add
add
or
add
cmp
inc
jae
push
sar
sbb
lea
mov
sub
inc
adc
or
xchg
add
aad
inc
lcall
lahf
hlt
adc
dec
dec
testl
mov
mov
lret
or
inc
add
inc
sti
sbb
inc
sub
mov
sbb
cmp
je
push
mov
lret
push
fisttps
mov
sbb
jno
test
popf
pop
xor
lods
cld
fidivrs
jecxz
insl
cld
sbb
inc
lea
and
cmp
sub
test
xlat
lea
push
or
and
in
and
xor
test
xor
inc
sbb
cld
dec
pushw
cmpsl
mov
adc
ret
call
adc
xor
scas
insl
pop
push
cmp
fiaddl
rolb
jg
and
dec
jb
xchg
xchg
mov
mov
and
dec
push
inc
adc
fadds
push
xchg
xchg
popa
xchg
inc
or
cmp
lret
test
push
jp
jmp
mov
xor
lods
cld
test
mov
sub
outsb
xor
sbb
xorb
icebp
sub
subl
fnsave
dec
pusha
in
or
adc
pop
cmp
lret
sarl
cmp
mov
cmp
sbb
adc
adc
addb
cwtl
add
sub
in
je
cwtl
testb
add
or
dec
mov
push
mov
ljmp
cmp
jne
outsb
insb
push
jp
add
cmp
fadds
ja
jl
cmp
imul
das
jge
loope
mov
push
adc
push
mov
mov
gs
sarb
mov
sahf
lret
lock
imul
lods
xchg
push
divb
mov
sbb
mov
jno
inc
test
mov
lea
adc
lret
cmpsb
add
imul
xor
jb
sub
jno
cmpsb
out
mov
test
jne
lock
out
ja
jno
jmp
or
sub
jl
push
mov
ja
pop
test
adc
insl
mov
mov
stos
jne
or
sbb
and
loope
push
pop
xor
vorpd
testb
add
data16
lahf
pop
mov
or
push
je
xor
out
adc
je
and
idivl
or
sbb
leave
cmp
jmp
pavgb
sub
push
jnp
xchg
rorl
and
je
shrb
ror
test
push
push
push
push
pop
mov
mov
lock
cmp
xchg
cmp
ret
lods
mov
mov
movsb
daa
mov
sbb
or
mov
movsb
popf
or
add
xchg
xor
cwtl
pop
enter
pop
movsb
test
popa
rorl
cwtl
push
mov
add
push
aaa
add
mov
jo
sbb
dec
push
das
js
cmp
cmp
add
lea
addr16
and
sbb
inc
je
sub
push
cmp
xchg
in
pop
lea
mov
and
js
and
push
je
or
js
sbb
clc
sub
adc
mov
push
add
negl
cmp
idiv
cld
int
xor
cltd
adc
jne
inc
or
cli
loopne
sub
jecxz
js
dec
pushf
jle
push
imul
dec
push
loopne
xor
inc
cmp
repnz
hlt
addr16
clc
cld
jbe
jns
xchg
add
popa
sbb
push
js
ficomps
mov
ss
mov
or
sbb
push
jle
cmp
jg
test
iret
lcall
sbb
rcrb
sub
cmp
jne
inc
jmp
sarl
ljmp
pop
jmp
lea
cmp
add
mov
shr
or
enter
jge
or
lahf
and
pop
push
out
shl
sub
xor
imull
aaa
decb
adc
decl
xchg
sbb
pop
inc
xor
loopne
pop
icebp
or
and
out
and
add
pop
xchg
div
mov
and
add
orl
iret
xor
faddl
and
pop
push
lea
or
cld
pop
dec
jo
movsb
fisubl
ficomps
add
mov
cmp
sub
jle
fcmove
inc
dec
mov
pop
pop
pop
ret
lahf
push
push
ret
adc
or
mov
jno
inc
pusha
test
dec
jp
jns
stc
and
repnz
inc
jl
mov
mov
outsl
out
push
test
push
push
or
sub
mov
jo
or
lret
sbbb
cmp
testl
add
stc
and
pushf
popl
clc
xor
mov
or
loopne
movl
mov
les
mov
cmp
repz
push
mov
adc
aaa
lea
inc
adc
outsl
icebp
sbb
xor
sub
leave
push
jecxz
popa
dec
cmpsb
xor
pop
xlat
lea
push
lea
cmpl
clc
add
xor
push
cmp
int
push
push
push
sbb
loop
fcmovu
jl
lret
sub
xor
jle
out
jge
mov
sbb
sbb
ja
pop
add
sbb
add
pusha
sub
inc
sbb
mov
add
pop
mulb
sbb
push
fs
add
pop
sbb
and
inc
push
dec
or
cmp
repnz
add
cmp
adc
cwtl
mov
or
push
imul
clc
dec
test
jge
gs
cmp
add
jb
ss
subb
imul
pop
pop
push
test
imul
xor
inc
push
jmp
fadd
jbe
adc
test
or
push
ja
jne
lods
je
fmull
pop
les
inc
push
adc
nop
jge
jbe
push
ss
aaa
jl
sub
clc
and
shrl
sbb
push
inc
loopne
xchg
sub
jmp
xchg
cmp
aaa
sbb
daa
and
call
mov
push
sbb
mov
aaa
test
sub
orl
jo
sbb
push
pop
loopne
jecxz
dec
jne
push
hlt
mov
scas
jp
test
fmul
mov
mov
lea
mov
mov
dec
add
test
mov
mov
mov
cmpsl
xchg
xor
icebp
cmp
data16
or
adc
mov
rcrb
push
push
push
mov
pop
jg
pop
inc
cwtl
fcomps
push
push
xorb
dec
adc
or
add
loopne
push
in
cmp
daa
rcrl
add
insb
loopne
xor
add
addr16
sbb
mov
pop
jecxz
shrb
inc
stos
lea
loopne
jge
jbe
sbb
and
idivb
out
pop
or
orl
pushl
jecxz
inc
cmp
jmp
push
cmp
pop
call
mov
add
dec
pop
mov
xchg
test
mov
pop
daa
xor
adc
add
outsb
cmp
push
aam
and
fsubs
cs
sbb
pop
js
stc
lea
push
xchg
add
shl
mov
lods
mov
push
pop
sub
jle
adc
xor
sub
push
xor
in
subb
movzbl
je
add
inc
cli
aam
addr16
ret
jo
add
negb
and
add
sbb
xchg
push
das
jg
je
xchg
decl
mov
out
sub
cmc
adc
insb
push
or
pop
negl
insb
adc
pop
push
xor
lea
sbb
mov
fwait
cmc
jle
repnz
int3
js
pop
inc
js
push
push
xor
sub
mov
imul
std
adc
sbb
testl
popf
pop
std
adc
pop
sahf
cs
decb
and
pusha
or
cmp
jge
out
enter
cmc
adc
push
sub
jge
mov
cld
jbe
push
adc
hlt
jne
push
xor
mov
or
into
pop
mov
push
push
xor
xor
push
clc
cmp
sub
xchg
add
mov
pop
inc
lcall
sbb
add
add
add
xchg
mov
pop
cmpl
sbb
pop
cmpl
clc
or
or
or
or
or
or
testb
pminub
add
test
push
add
sub
pop
popa
aam
sub
dec
or
cmpsl
xor
inc
cmpl
lcall
fwait
test
jae
mov
pop
or
and
ret
dec
mov
xlat
jg
inc
jl
in
add
or
xchg
rcll
std
adc
xor
in
sub
je
xor
in
es
negl
mov
daa
loopne
test
push
jge
mov
cmp
das
mov
pop
fwait
sub
and
lcall
ds
xchg
push
push
retw
sub
cmpsb
push
mov
mov
ret
fidivl
pop
pop
mov
push
push
in
cltd
adc
shlb
subb
xor
popa
and
dec
xchg
cmp
xchg
enter
rclb
cwtl
rclb
mov
dec
push
inc
pop
test
repnz
dec
adc
popa
or
cmp
pop
popa
add
mov
pop
mov
xchg
fmull
push
popf
cld
lea
push
rclb
xchg
call
sti
adc
cmpl
jns
daa
lods
xor
push
pop
mov
pop
pushl
mov
or
test
inc
pushf
jns
dec
xchg
daa
adc
push
inc
in
rclb
pop
jp
jecxz
mov
int3
or
aad
lcall
adc
jns
mov
in
in
adc
cmp
mov
ljmp
push
test
jne
insb
dec
outsb
mov
push
push
ja
lds
sbb
jmp
std
add
cmp
call
add
mov
cmp
push
pop
mov
add
sub
lahf
xor
push
inc
pop
cmpsb
add
rclb
dec
dec
mov
xor
sub
jge
pop
gs
push
je
push
xchg
lea
cmp
movhps
push
movsl
mov
ret
int
in
pusha
shlb
decb
inc
inc
push
es
std
cmp
jbe
add
sub
mov
or
push
call
inc
xor
dec
push
insb
add
data16
or
test
cld
shlb
fadds
push
loopne
add
xchg
jb
ss
inc
lcall
xchg
popf
rcrl
inc
call
mov
lods
adc
pusha
iret
adc
movsb
cs
mov
sbb
pop
cmpl
mov
cld
sbb
scas
jle
je
cmp
pop
or
sbb
pop
jb
mov
in
insl
les
stos
test
jmp
leave
imul
sbb
and
push
jl
shll
inc
sbb
pushf
cmp
mov
ret
add
adc
subl
imul
ret
pop
test
addr16
sarb
dec
test
inc
adc
test
add
add
lret
cmp
adc
jb
mov
pop
enter
and
or
jp
ret
pop
add
lret
push
and
pop
das
jmp
mov
sub
xchg
jns
rorb
out
mov
push
jb
dec
mov
sbb
dec
or
outsb
pop
mov
pop
sbb
push
clc
shrd
mov
adc
and
movsb
jns
bound
pop
push
out
and
xchg
cld
cmp
sub
into
sar
jne
mov
add
push
mov
dec
bound
lea
pop
sub
loop
mov
ret
mov
rorb
enter
aaa
or
mov
push
lret
aas
inc
jne
popf
cmp
xor
rorb
xor
sbb
outsl
fstl
cmp
test
mov
cmp
add
dec
mov
inc
push
ss
popf
pusha
or
inc
mov
pop
enter
adc
inc
sbb
inc
bound
aas
inc
jp
and
adc
pop
sub
or
mov
cmp
cmp
iret
popa
or
push
dec
add
xor
in
lret
daa
or
inc
add
inc
pop
sub
mov
nop
add
imul
push
sbb
dec
and
cmp
pop
jns
mov
xor
mov
dec
mov
inc
lock
std
cmp
jne
adc
mov
sbb
ss
insb
leave
inc
nop
stos
inc
test
int
sub
ljmp
jne
loope
push
insb
adc
jo
jns
pop
adc
xchg
pinsrw
jne
pop
cld
call
ret
fs
inc
imul
sub
inc
dec
inc
stos
in
shrl
or
or
enter
pop
inc
push
xchg
sbbl
or
xor
pop
data16
dec
rcr
cmp
lds
stos
mov
cmpsl
sbb
movsl
enter
push
push
xchg
mov
dec
stc
xchg
mov
add
add
xchg
call
rorl
sub
test
sub
fimuls
cltd
jbe
cs
cmp
xchg
cmp
and
add
arpl
jp
cltd
lods
cmp
cmp
and
movsl
jb
dec
xor
dec
dec
js
test
jo
dec
or
xchg
and
adc
dec
jg
negl
mov
jae
and
xor
int
dec
mov
inc
je
dec
je
data16
outsb
push
in
sbb
pop
ficomps
pop
add
call
push
pop
test
or
jge
out
lahf
je
jnp
xor
jbe
fstpt
push
jp
jg
add
cltd
bound
frstor
or
bound
out
lahf
sbb
rclb
test
lea
mov
and
fldenv
sub
pop
call
fisttps
loope
adc
and
jg
testb
call
and
add
insl
mov
push
lods
loopne
mov
jae
nop
push
or
or
add
jns
or
shl
xchg
add
mov
mov
scas
enter
push
imul
mov
or
cmpb
dec
or
adc
rol
mov
aam
xchg
and
inc
into
fcompl
push
popf
sbb
fidivrl
push
mov
fcmovb
push
mov
mov
pop
push
rolb
mov
inc
cmp
or
jge
dec
add
add
stc
dec
and
mov
adc
adc
cmp
lcall
push
loopne
mov
dec
xchg
insb
mov
adc
add
fimuls
add
into
fwait
pop
pusha
xchg
adc
lods
xor
xchg
sbb
inc
repz
test
adc
push
mov
or
sub
lock
imul
cmovg
sub
sahf
jo
add
lret
roll
pop
pop
cmpsb
pusha
mov
ss
dec
jmp
mov
je
cmpl
push
je
test
ja
and
movsb
std
fstps
jmp
push
xor
or
adc
sub
dec
ja
insl
add
ljmp
sub
pop
or
adc
or
cmp
inc
jge
push
push
cmp
cmp
cmp
jb
or
push
sub
mov
sbb
push
xchg
xchg
pop
pop
push
and
or
mov
push
and
xor
push
sbb
sub
sbb
cld
aam
add
xchg
lea
out
movsl
push
xchg
movsl
rolb
movsl
aad
mov
dec
mov
lea
ret
push
cli
arpl
movsl
jge
push
or
dec
in
cs
sbb
xchg
fdivrs
inc
inc
cmp
pop
gs
cmp
sub
xor
notl
xchg
push
sbb
xor
mov
insb
fildll
dec
je
add
dec
dec
jne
inc
adc
xchg
popa
sbb
or
inc
in
cmpl
jge
add
inc
push
add
jo
adc
add
sub
jne
push
push
xor
insb
and
add
mov
dec
mov
aam
int
inc
lcall
push
push
push
mov
add
cld
add
fldt
test
pop
mov
fs
cwtl
adc
xor
cmp
in
jne
pusha
sbb
push
inc
push
mov
cmpsb
push
jnp
xchg
dec
mov
cmc
enter
push
leave
hlt
mov
inc
adc
xchg
add
aad
jne
subl
sahf
hlt
sbb
cmp
xchg
clc
or
jbe
jb
mov
pushl
nop
adcb
adc
xor
jmp
leave
xchg
mov
mov
shlb
inc
cmp
inc
or
or
adc
sahf
or
add
pusha
movsl
cmp
inc
cs
stos
and
or
dec
xchg
adc
enter
add
dec
in
xchg
pop
test
in
lcall
hlt
adc
xchg
mov
and
or
je
push
sarb
xchg
cmp
jbe
add
inc
adc
and
js
adc
cmp
cmpsb
in
enter
mov
and
xor
pop
ja
shlb
adc
inc
addb
in
scas
mov
js
pop
shll
aaa
loopne
mov
mov
jmp
and
xor
test
iret
push
dec
xor
sbb
mov
ja
pusha
mov
mov
mull
gs
aam
sarb
clc
or
in
popf
enter
rorb
shl
mov
notb
jo
dec
lea
movl
aaa
inc
cld
push
cld
incl
insl
shl
pop
arpl
push
jns
je
sub
jle
stos
adc
js
lea
push
push
mov
cmpsb
mov
and
jl
inc
xorb
dec
and
adc
mov
xor
dec
mov
sub
dec
jmp
lcall
lea
cli
mov
in
mov
cmp
mov
test
cs
and
cmp
push
or
cwtl
pusha
jmp
jmp
cs
in
xchg
cmpsl
mull
jge
pop
nop
cmpsl
cltd
jbe
pop
testb
out
xchg
xchg
push
xchg
rclb
pop
mov
jno
dec
cmp
fdiv
xchg
sub
jbe
jno
xchg
hlt
repnz
and
decl
mov
test
repz
stc
pop
hlt
pop
cmp
and
fwait
negl
jns
dec
es
testb
sub
loope
mov
dec
imul
mov
adc
push
add
push
pop
and
daa
xor
push
repz
jbe
clc
scas
in
filds
mov
jne
mov
sbb
sbb
add
add
add
dec
lcall
dec
lcall
dec
lcall
dec
lcall
adc
out
xchg
mov
sbb
loope
loope
sti
sysenter
inc
inc
push
adc
ret
sbb
push
adc
dec
jae
cmc
sbb
or
pop
pop
setbe
in
aaa
cmp
push
mov
fcompl
test
ret
cmp
pop
call
pop
xor
mov
push
inc
or
loopne
test
or
sub
push
cld
add
xor
jae
cmp
add
add
aaa
or
lea
lock
push
push
cli
rcrb
out
xchg
jne
out
add
and
inc
sbb
xorl
movsb
jle
in
jl
mov
or
adc
ret
mov
leave
mov
add
imul
cmpsb
lock
lods
dec
sub
xor
and
cs
mov
sub
dec
push
and
or
mov
pop
mov
pusha
cmp
in
mov
inc
lods
les
in
adc
xchg
cmp
addb
pop
add
or
push
adc
jne
push
int3
xchg
mov
add
jge
xor
or
add
and
push
or
xor
mov
imul
femms
or
cmp
push
daa
or
in
push
jb
mov
mov
jmp
movsl
ds
ret
pop
push
orb
fstpt
xchg
addr16
inc
sbb
adc
push
sub
xchg
inc
mov
cmp
nop
sbb
dec
ret
xor
dec
jae
loopne
or
mov
inc
or
loopne
push
iret
jns
jb
jae
notb
push
imul
and
xchg
shrb
notl
cmc
test
cmp
into
add
test
cmp
or
and
inc
xor
pop
push
mov
mov
andl
int3
aam
jmp
gs
inc
sbb
add
mov
scas
pushw
sbb
in
lahf
add
stos
push
pop
sbb
adc
lock
cwtl
push
mov
call
push
sbb
cmpl
cltd
ret
push
mov
dec
fs
and
add
pushf
or
sbb
dec
or
and
loopne
sub
sbb
test
dec
or
xor
js
mov
and
cmp
movsb
int3
or
icebp
add
adc
test
jle
icebp
dec
stc
orl
add
bswap
inc
push
imul
sbb
lea
movsb
adc
push
fdivs
out
hlt
cmp
fdiv
cmp
daa
inc
sbb
jne
sbb
adc
and
sbb
es
loopne
aad
jbe
xchg
test
add
movlps
subps
aaa
jb
pop
or
stos
stos
daa
aaa
movsb
pop
sbb
test
or
mov
or
orl
mov
rcrl
sbb
xor
sub
jne
mov
orl
sbb
adc
popa
jae
or
adc
ret
ret
and
in
sbb
das
cmp
sub
cmp
bound
je
stc
adc
hlt
lods
dec
out
add
sar
cld
out
cs
inc
xchg
add
inc
adc
mov
clc
cmp
cbtw
pop
xchg
jae
mov
dec
push
inc
xlat
inc
orl
sbb
or
ret
jmp
fs
mov
mov
cmp
adc
setg
add
cld
mov
pop
lods
xchg
cmp
arpl
sub
push
jb
adc
dec
push
xchg
notl
inc
mov
fsubrs
test
inc
mov
stc
bound
mov
sbb
push
push
sub
xchg
push
imul
stos
imul
cmp
mov
inc
push
xor
mov
pusha
icebp
sub
sarb
jne
xor
jmp
add
fldenv
in
leave
mov
inc
lea
dec
mov
es
add
iret
fs
call
je
and
cmp
clc
pop
fs
push
sub
pop
sbb
cmp
jb
nop
ja
xchg
dec
test
ret
pop
ret
jmp
sbb
jg
push
leave
sub
add
mov
push
inc
mov
xchg
and
adc
mov
push
push
add
fildll
mov
jbe
movl
mov
mov
stos
mov
cltd
push
mov
cmpb
or
cld
add
sub
add
add
es
mov
call
jne
mov
shrb
cli
xchg
cmp
push
mov
fisubl
icebp
orl
dec
nop
xchg
xchg
imul
pop
cwtl
mov
mov
add
fldt
mov
call
pushf
or
lret
mov
in
outsl
or
or
adc
adc
push
lcall
notb
add
pop
add
or
repnz
jne
fsubs
out
push
and
mov
leave
test
pop
cmpl
mov
pop
movsb
mov
sub
jge
cmp
cwtl
and
cmp
nop
sub
fidivrl
pusha
and
loope
or
sbb
add
xor
nop
orl
daa
sbb
sbb
cmp
aaa
adc
jne
rolb
movb
dec
push
sub
mov
out
loop
mov
cwtl
loop
lods
mov
xchg
loop
xchg
xchg
xor
aad
push
sbb
std
add
sub
les
push
ret
push
xchg
scas
adc
push
ja
testl
sbbb
sbb
push
jge
jno
push
pop
dec
mov
mov
cmp
add
into
pushl
loopne
rorb
pop
cmp
pop
sub
in
cvttps2pi
aas
or
orb
sarb
push
cmp
clc
sbb
add
xor
xchg
pop
dec
inc
sbb
pop
daa
imul
pop
add
xchg
jmp
dec
push
push
xchg
test
mov
add
cmp
cs
fwait
and
mov
pop
dec
movsl
popa
sub
les
nop
das
lcall
ja
ss
mov
outsb
sbb
in
pop
or
or
out
add
leave
je
popf
push
js
lock
hlt
sbb
stos
mulb
xchg
adc
incb
sahf
xchg
lock
mov
add
mov
push
add
cmpsb
arpl
lock
xchg
into
cltd
sub
dec
addb
push
mov
movsb
inc
add
inc
lcall
subb
and
pop
push
fst
xchg
lahf
mov
inc
jge
add
adc
or
or
and
xchg
leave
inc
and
dec
xlat
xor
arpl
clc
inc
jg
nop
lea
stos
sbbb
xor
jb
push
movsbl
mov
mov
jmp
jne
out
add
mov
mov
insl
jl
fbld
lret
mov
push
pushf
push
jg
je
ret
inc
mov
push
cwtl
add
push
ficompl
shl
rorb
push
rorb
sbb
jge
fists
xor
outsl
ss
mov
pop
cmc
mov
xor
cwtl
cwtl
inc
testb
sub
adc
sbb
sub
add
jge
fwait
jge
jne
mov
in
mov
push
adc
outsb
add
test
jmp
jne
popf
ret
lret
adc
dec
push
adc
outsl
lea
mov
je
cmpsl
je
stos
adc
cs
insl
pop
xchg
add
sbbl
es
sbb
inc
and
lcall
iret
add
fs
pop
mov
adc
sub
and
adc
or
mov
loopne
xchg
incl
ds
bound
pop
nop
mov
out
insb
xor
jge
push
jo
jge
sarl
xchg
mov
lret
ds
sti
adc
jbe
mov
xor
xor
test
es
rorl
adc
enterw
push
sbb
shlb
dec
sbb
inc
pop
sbb
sarl
cli
jo
cmp
in
or
push
inc
mov
je
cmpsb
jge
push
in
or
lock
rolb
andl
je
mov
adc
std
test
and
or
adc
push
sbb
cld
mov
and
cmp
in
shr
xor
es
shl
or
or
mov
movsb
imul
in
out
out
cmpsb
cmp
out
lock
movsb
imul
dec
jae
cmpsb
repnz
mov
and
repz
push
imul
movsb
imul
lcall
imul
cli
cli
stc
push
push
fisubl
aad
call
add
roll
mov
inc
stos
imul
test
jl
outsb
pop
push
roll
xor
loopne
or
or
test
push
cld
xchg
loope
cmp
in
pusha
add
jns
push
rclb
inc
hlt
inc
clc
inc
cld
ja
mov
jbe
adc
pusha
into
sbb
stc
popa
daa
cld
inc
std
xchg
push
scas
add
leave
xchg
aam
inc
test
dec
xlat
and
lret
mov
mov
aaa
scas
or
dec
or
push
aas
or
inc
mov
lahf
or
cld
add
xchg
pop
loop
sub
movb
scas
loopne
adc
dec
dec
jl
add
mov
iret
xchg
push
les
je
and
jge
int
aad
mov
das
push
push
inc
xor
or
insl
push
push
cmp
sarb
mov
jl
movl
aas
jge
adc
and
mov
or
sbb
daa
loopne
xchg
mov
rol
insl
pusha
sbbb
leave
movsl
push
and
es
call
cmpl
and
rolb
inc
fcompl
push
adc
push
and
daa
adc
cs
jne
mov
xlat
xchg
cli
sti
adc
cmpb
push
aaa
loopne
sti
jbe
jne
sub
push
mov
sbb
shrb
lea
jae
scas
mov
jne
mov
cmpb
cmp
clc
add
icebp
mov
push
and
out
inc
adc
or
inc
adc
insl
out
cmpsl
in
sbb
jmp
mov
insl
jne
movb
inc
mov
pop
rclb
dec
inc
add
dec
jnp
sub
xor
xchg
sub
lcall
dec
add
sbb
bound
xchg
xchg
ljmp
orl
enter
ficoms
and
int3
push
push
jle
or
loopne
loope
pop
jbe
mov
dec
sub
ret
pushf
sbbb
nop
cmp
fadds
pushf
adc
push
je
jo
inc
pop
loopw
jl
arpl
movl
cs
js
jl
int3
add
loopne
sbb
sub
cmpl
push
mov
nop
jo
sub
idiv
or
cmp
je
rcrb
lret
movsl
sbb
add
les
dec
jbe
cmp
mov
xor
orb
and
jo
mov
insl
mov
ds
nop
push
dec
ja
insl
mov
add
and
fnsave
jbe
cmpb
xchg
scas
std
out
jne
inc
adc
add
sbb
and
clc
and
test
pushf
movsb
pusha
testb
mov
adc
lods
push
and
lcall
xor
popf
dec
test
inc
push
jo
dec
cmp
data16
or
pusha
sarl
xor
pop
pop
orl
jecxz
sbb
push
jne
mov
add
inc
and
mov
ret
ss
add
xchg
cmpsb
mov
push
sub
mov
mov
add
dec
add
push
add
add
pop
add
loope
fildll
cltd
cmp
add
xlat
mov
adc
les
fs
ljmp
scas
add
pop
mov
jp
fcmovb
decb
or
jmp
repnz
add
int3
or
add
shl
test
inc
add
push
add
add
fs
dec
jmp
clc
or
add
jmp
mov
outsl
lcall
push
add
add
loopne
pop
mov
mov
mov
lods
mov
jb
lea
adc
sbb
ss
ffreep
mov
add
add
fs
hlt
mov
jg
leave
lea
jo
in
inc
roll
mov
into
add
int3
add
lea
fdivrp
fcomi
mov
ret
mov
call
shufps
sar
push
cld
or
jmp
sbb
mov
sbb
idiv
std
push
push
shlb
shlb
add
fsubr
push
add
decl
jmp
imul
out
incl
ss
add
xchg
pop
pop
add
clc
das
clc
std
adc
inc
mov
stc
fadds
stos
int3
and
pop
cld
sbb
add
jmp
or
pop
push
sub
gs
adc
jo
lods
ss
imul
in
lea
push
aam
cmc
subb
inc
inc
movsb
inc
int3
add
adc
push
jo
xchg
adc
adc
xchg
add
and
das
xchg
push
mov
je
mov
mov
clc
bound
dec
push
add
cmpl
mov
and
dec
bound
push
jg
data16
inc
rolb
and
clc
std
sub
adc
or
clc
mov
dec
and
or
mov
clc
hlt
testb
dec
or
add
andnps
movsb
lret
fistpl
sub
lea
jae
inc
xor
push
sub
cli
sub
aaa
jne
push
adc
adcb
mov
clc
push
cld
add
cwtl
ret
push
sbb
pushf
adc
loopne
add
bound
cmp
add
popf
clc
mov
scas
fmuls
inc
push
sub
mov
mov
shlb
shrb
sar
or
xor
popf
out
ljmp
test
addl
cmp
test
add
mov
mov
ret
inc
mov
sti
xor
in
pop
or
testb
int3
jge
push
cs
int
aas
clc
hlt
arpl
add
pop
adcb
fdivr
mov
mov
aaa
test
std
push
sbb
inc
mov
andl
jne
aad
mov
jge
mul
jmp
or
call
or
adc
rcll
ret
pop
call
cld
xor
mov
lock
jg
add
cmp
fildl
int
add
pop
scas
js
inc
xor
inc
mov
cmp
mov
lret
je
or
idiv
inc
adc
xchg
adc
cmp
mov
push
push
cmp
pop
call
jnp
mov
mov
pop
aam
push
push
inc
cmc
decl
inc
xchg
and
lahf
xchg
mov
enter
lcall
mov
inc
add
jbe
aaa
push
shlb
xchg
hlt
addl
cld
add
push
mov
dec
dec
or
dec
inc
inc
mov
mov
js
rclb
fscale
lock
jg
incl
lock
aas
adc
pop
call
add
lea
push
push
std
or
sub
call
adc
dec
xchg
pop
cmp
dec
push
popf
mov
outsl
mov
inc
push
xchg
pop
add
mov
std
add
pop
or
div
pusha
lock
xor
fcompl
jae
adc
mov
and
push
mov
popf
fs
addl
add
mov
add
jne
je
inc
dec
pop
test
add
call
shrl
not
jne,pt
andl
push
dec
mov
std
in
in
push
mov
in
lds
push
push
xor
pop
and
push
movsb
std
out
cmp
or
xor
inc
ret
orl
add
iret
mov
mov
das
xchg
mov
mov
mov
addr16
push
inc
adc
aas
dec
push
xor
push
imul
sbb
xor
shl
inc
gs
arpl
jne
sub
and
rolb
mov
insl
sbb
xor
xorb
test
fidivs
lods
adc
cmp
fistl
add
stos
jmp
gs
mov
mov
add
add
xor
fcomip
call
dec
gs
cld
call
mov
je
test
lods
loope
imul
sbb
mov
shrl
add
fsubl
jne
mov
sub
insb
dec
adc
cmp
cmp
roll
sbbb
xor
cli
loop
mov
icebp
clc
jmp
or
jo
decl
push
sub
sti
sbb
mov
clc
fsubl
dec
imul
or
in
pop
mov
pop
adc
repnz
jb
push
dec
jecxz
cmpsl
cmp
or
add
inc
adc
rolb
fcoms
mov
ljmp
incl
and
or
stc
loope
aad
jbe
cld
jmp
add
xchg
ja
enter
inc
enter
pop
fsubrl
push
xor
cmp
outsb
loop
lea
jnp
pop
xchg
mov
jle
jmp
jo
xchg
rolb
add
push
sti
mov
cmp
popf
pusha
xchg
push
push
or
add
and
sbb
dec
or
out
cld
enter
add
les
pop
mov
add
sti
mov
pop
rol
faddl
clc
mov
and
cmp
and
aam
add
sarl
inc
je
test
insl
mov
or
rclb
xchg
or
mov
jo
cld
pshufw
mov
outsl
jp
std
dec
aam
xor
pop
xor
fsubp
in
dec
pop
in
push
mov
gs
ja
jmp
ljmp
sub
loopne
lock
lea
jmp
cmp
bound
cmp
decl
jg
decl
xor
mov
dec
mov
call
xor
xor
insl
add
xor
mov
insb
js
lds
pushl
mov
jmp
push
icebp
lds
mov
pop
ljmp
push
fistpll
rcl
test
ss
jmp
lock
clc
adc
les
fldl
pop
or
mov
mov
test
pusha
insb
stos
push
jne
mov
insl
cli
ljmp
movsb
mov
xor
les
clc
push
sub
fsubs
or
add
and
add
mov
dec
in
inc
clc
cs
mov
call
test
push
shlb
testl
idiv
xchg
push
add
xchg
mov
pop
cs
call
sub
je
jb
test
cmp
and
fstpt
ljmp
loopne
sub
cmpsb
mov
test
inc
xlat
adc
popf
add
clc
out
jbe
jge
cmp
cmp
das
adc
add
mov
out
ljmp
pop
rorl
hlt
mov
cmp
movsl
out
inc
aas
mov
aas
rcll
in
inc
test
fdivl
aas
xor
fs
sub
leave
jmp
pop
jge
clc
add
xor
mov
test
pop
adc
mov
into
pop
pop
aas
cmc
mov
and
mov
in
mov
jg
mov
leave
add
push
xor
cmpsb
in
push
push
fdivr
inc
lret
jle
cld
push
cmp
aaa
adc
mov
ret
lods
jo
pusha
push
fdivr
adc
and
jae
scas
xlat
lret
lds
push
call
or
cld
sub
inc
jl
scas
aaa
push
inc
lods
loope
mov
outsl
outsl
dec
sub
ret
mov
push
orl
fs
xchg
clc
cli
jecxz
insb
cld
imul
inc
imul
mov
mov
clc
adc
add
loope
scas
test
adc
or
pop
xabort
js
iret
jle
jb,pn
mov
push
call
flds
adc
pop
enter
push
cld
cmp
sbb
shl
test
mov
shll
in
cmp
pop
mov
add
jp
push
and
ss
jg
ss
shrb
adc
mov
cmp
lea
mov
pop
into
sub
or
and
or
sub
pop
sub
dec
xchg
add
les
or
add
ret
adc
jge
int3
or
lock
mov
inc
cmpsl
jno
lea
pop
mov
and
push
cld
mov
cmp
push
add
mov
xchg
ficoms
pop
bound
inc
je
pop
inc
add
in
bnd
lcall
cmp
aam
add
or
clc
jne
cmp
ret
sahf
dec
hlt
sbb
cmp
add
loop
test
inc
mov
mov
les
cmp
sbb
jmp
call
sub
mov
add
or
cld
cmp
jmp
lea
or
sbbl
add
rcrl
dec
popf
cld
xchg
push
cld
lea
cld
std
in
mov
pop
mov
ljmp
pop
push
or
pop
pusha
xor
inc
fs
leave
push
fsub
dec
and
movb
lcall
call
sub
add
sub
xchg
pop
add
sti
mov
xchg
inc
add
mov
in
fisttpl
repz
inc
test
das
cli
incl
or
jmp
add
mov
push
mov
lods
sbb
mov
cmp
and
mov
or
dec
inc
and
mov
mov
fadds
mov
fsubrl
mov
xchg
out
and
cmpsb
jmp
mov
and
clc
dec
lret
call
lds
aaa
sbb
hlt
loopne
jg
js
decl
call
rolb
ret
jg
aas
scas
mov
cmp
mov
mov
int3
mov
cmp
mov
add
and
add
mov
lock
cmp
aam
add
arpl
scas
rclb
cmp
and
cmpb
cmp
xor
and
outsb
and
cmp
sbbl
stos
push
test
inc
and
adc
outsb
jne
test
je
int3
pop
test
aad
roll
push
add
call
inc
sbb
test
add
fwait
test
push
push
pushf
int3
in
incl
sbb
loopne
add
cmpl
mov
int3
jo
dec
pop
xor
je
in
mov
imul
xlat
cmpsb
popf
xor
adc
inc
add
loop
add
les
pop
andl
mul
shrb
jo
push
adc
cld
push
push
notb
call
mov
and
mov
sub
mov
insl
add
shlb
int3
ficompl
sub
cmp
call
push
jb
test
shrl
jbe
shlb
testb
stos
inc
add
push
and
shlb
sub
fstps
ret
pop
sarl
xchg
sbb
cld
cmp
pop
mov
mov
inc
pop
pop
add
xor
lock
inc
mov
inc
sub
sub
jmp
adc
add
sub
push
or
xor
inc
push
lcall
loope
push
add
mov
push
out
push
in
dec
in
mov
jle
orl
test
mov
push
add
adc
popa
loopne
pusha
mov
add
stos
subb
jb
mov
sti
or
xchg
mov
sbb
push
adc
rcrb
xchg
jo
leave
call
decb
mov
sti
in
test
xchg
ss
add
adc
add
in
arpl
out
sarb
adc
or
xchg
jbe
adc
testb
aad
out
dec
or
and
cmp
fdivr
lock
mov
sbb
pop
testw
js
mov
iret
jg
loop
shrb
push
dec
add
out
jbe
loope
mov
xchg
cmp
fiaddl
push
test
jge
mov
je
jge
or
dec
adc
mov
push
jg
pop
ss
arpl
out
test
sub
lock
js
push
and
outsl
mov
imul
mov
push
jp
js
mov
mov
push
push
clc
jb
in
or
mov
inc
mov
sub
jne
sbb
rcll
clc
aaa
shrl
mov
push
jle
outsl
clc
jg
or
lock
adc
xor
mov
dec
or
and
and
sbb
sahf
inc
repz
das
jmp
rcrb
rorl
inc
inc
ret
nop
lar
add
outsb
mov
std
add
add
fsubr
jmp
cmp
stos
mov
loopne
sub
adcb
xor
pushl
or
cltd
lret
sti
push
jl
call
push
push
rolb
in
jp
dec
inc
ds
xchg
sbbb
jg
adc
mull
xor
cmc
cs
fs
gs
dec
adc
pop
movsb
fmuls
adc
mov
dec
sub
push
inc
cld
test
scas
ljmp
loop
invd
or
xor
inc
jne
decl
test
mov
sysenter
fdivl
push
and
cmpb
cld
pop
sbb
xor
insl
mov
or
push
add
add
and
sbb
orb
into
adc
aaa
shlb
add
jecxz
or
jo
js
mov
ret
lcall
into
in
test
cmp
jmp
cmp
push
add
js
xchg
inc
push
mov
jbe
mov
je
mov
mov
cmp
stos
fisttps
mov
mov
adc
or
fnsave
add
cmp
xchg
cmp
clc
outsl
sahf
sar
mov
adc
test
lea
push
sti
mov
popf
and
pushf
and
decb
test
rorb
inc
inc
movsl
or
add
stc
lods
in
lds
aam
push
std
repnz
mov
or
sahf
xor
mov
je
addr16
xor
jb
lret
inc
push
add
or
dec
les
inc
fcoml
lea
sub
psadbw
sahf
cmp
int3
frstor
loop
out
ss
je
xchg
pushl
or
int3
rorl
xor
mov
fimuls
add
or
movb
cs
lea
imul
je
mov
stos
nop
dec
push
add
clc
sub
add
jge
jge
jo
or
mov
cmp
pusha
mov
dec
or
cli
or
push
pop
or
fcom
cmpsl
addr16
scas
or
frstor
ja
mov
fcoml
dec
add
mov
inc
jg
aam
dec
add
xchg
loopne
cld
mov
aam
adc
pusha
add
mov
mov
orb
add
jl
mov
outsb
inc
call
lret
dec
inc
mov
in
jg
push
incl
inc
push
ja
outsb
pushf
js
dec
pop
sbb
adc
mov
into
lret
inc
mov
adc
add
mov
cld
scas
mov
inc
cmp
push
push
insb
jmp
scas
aam
test
pop
push
je
paddw
outsb
cmp
jb
inc
mov
and
clc
or
jle
adc
xor
cmpsb
std
arpl
inc
mov
and
adc
sub
pop
pop
or
enter
mov
emms
shll
add
dec
add
lods
jnp
sub
and
decl
test
cld
push
jp
scas
mov
stos
or
or
mov
push
mov
mov
lcall
mov
mov
adc
push
stc
push
fadds
jb
movsb
xor
sbb
nop
mov
or
ljmp
push
aaa
inc
test
jmp
std
mov
rcrb
push
add
call
lea
xor
inc
pop
test
mov
sub
add
in
in
push
test
add
mov
icebp
or
mov
add
fcmovne
ss
add
icebp
mov
sbb
subps
aaa
rclb
loope
jmp
sbb
push
push
jno
adc
add
sti
pop
mov
repz
test
or
push
popa
mov
xor
xchg
call
push
dec
jle
add
out
pop
pop
lock
and
divb
add
in
or
je
lods
mov
inc
dec
movl
rcrb
ret
stos
pop
insb
xchg
lock
shr
cmp
insl
hlt
add
xor
jg
movb
test
adc
xor
icebp
lcall
adc
xchg
push
xor
test
aas
gs
push
add
les
aam
lea
inc
nop
dec
or
push
add
xchg
es
decl
mov
lcall
add
inc
aaa
stos
repnz
sbb
adc
jmp
jno
jmp
dec
xchg
cli
cld
jne
sbb
xor
push
hlt
sahf
clc
sti
scas
lret
test
cs
mov
push
faddl
push
cmpb
aaa
jp
and
inc
outsb
insb
mov
lea
stos
mov
popa
push
lret
rolb
arpl
mov
push
cmp
test
and
incl
je
pusha
or
add
lock
push
test
fcoml
push
and
cwtl
andl
stos
aas
lods
jp
mov
mov
add
add
add
add
push
sub
push
mov
jne
in
cmp
hlt
mov
cmp
xor
add
bound
in
sbb
inc
in
push
sbb
cs
push
add
lea
mov
dec
imul
sub
lret
cmp
cmpsl
call
cld
push
ret
push
das
push
dec
sbb
aam
xorb
mov
enter
pop
inc
sub
int
push
or
outsb
pushf
or
push
xchg
fnsave
or
popf
mov
repnz
cld
mov
arpl
mov
fmull
stc
or
test
test
fs
or
insl
repz
dec
push
push
in
clc
mov
cmp
ja
and
inc
sti
push
and
add
mov
hlt
mov
cmp
jl
decb
add
imulb
add
test
call
cmpsb
and
xor
mov
mov
cli
jne
xchg
int3
lea
cld
sarb
xchg
push
cmp
inc
sbb
clc
pop
test
push
fimull
inc
repz
xor
int3
push
and
fdiv
incl
test
add
clc
adc
dec
push
lock
cmp
test
pop
rcr
shll
xor
fiaddl
ret
mov
data16
fimull
jle
mov
and
sbb
adc
push
ss
jle
sbb
push
je
into
mov
or
je
insl
add
or
inc
ljmp
cmp
and
cli
icebp
das
inc
push
mov
loope
es
or
loopne
pop
jmp
clc
jne
inc
pusha
cmp
shr
adc
adc
cmpsb
shlb
adc
cld
mov
mov
mov
inc
dec
cmp
jl
movsl
or
or
lret
and
andl
or
dec
inc
imul
push
fiadds
push
ficoms
repnz
add
rcrl
add
mov
add
inc
dec
push
fsubr
incl
icebp
incl
fcomp
add
insb
jo
mov
push
sbb
pushl
add
jg
icebp
sbb
add
mov
cwtl
dec
jmp
dec
jb
int3
scas
popa
or
mov
dec
sbb
sbb
loopne
add
lods
add
push
in
add
xchg
ret
outsl
jl
call
adc
lock
mov
push
aas
mov
incb
push
mov
outsb
mov
mov
push
xchg
lock
sbb
clc
lea
js
mov
outsb
scas
push
cltd
add
push
test
js
cli
push
push
test
jmp
jg
loop
out
pop
xchg
push
add
jo
and
clc
rcll
dec
popa
jnp
jmp
pop
arpl
pop
push
sbb
push
loop
fdivrl
pop
test
jne
je
sub
push
cmp
or
pop
incl
xchg
pop
mov
mov
or
xchg
repnz
sub
cmp
inc
es
xchg
push
pop
aaa
shrb
loopne
cmp
fbstp
sbbl
adc
insb
add
lea
dec
inc
aam
call
pop
mov
mov
aam
adc
push
mov
filds
cmp
xor
jle
jbe
clc
sub
fs
ljmp
add
data16
jl
push
mov
inc
call
push
dec
push
lds
outsl
jp
add
enter
push
test
outsl
call
test
dec
pop
sub
int
call
mov
jp
add
xlat
push
add
xor
mov
lahf
or
mov
add
test
mov
mov
xor
and
fistpl
in
and
sub
mov
test
xor
mov
decl
jg
aam
fmull
mov
xor
cmp
das
call
ss
add
pop
les
push
sbb
xchg
shlb
pop
lods
mov
cmp
adc
lock
pop
and
add
pop
pop
or
inc
push
pop
mov
inc
lea
leave
cs
add
and
decl
mov
outsb
add
push
jb
jge,pn
test
add
lock
mov
outsl
pop
cmp
fdivrs
fdivs
nop
jb
dec
push
fbstp
notb
inc
adc
cwtl
sub
push
and
scas
adc
outsl
cwtl
jl
adc
decb
clc
decl
lret
jb
pop
or
insb
es
and
mov
cld
cmp
mov
push
sbb
push
sbb
push
mov
shlb
dec
int
cmc
adc
lcall
xchg
fistpll
aaa
add
push
push
flds
stos
xor
pop
add
cmp
push
pop
push
push
test
inc
or
push
movsb
subb
inc
mov
and
outsb
or
push
lods
inc
push
fwait
loop
mov
cmp
scas
and
ljmp
adc
fmul
add
in
add
mov
push
push
sti
ljmp
daa
je
and
cmp
in
test
loopne
mov
adc
add
cmpsb
jmp
loop
mov
push
les
mov
test
in
pop
loope
jbe
add
out
rorb
lods
push
push
pop
pop
icebp
sub
mov
add
cmp
inc
push
add
std
add
std
lock
jne
les
inc
vmread
or
jle
sti
mov
aaa
inc
ss
inc
inc
lock
jne
pop
ss
imul
fildll
mov
jb
jbe
jge
adc
test
inc
push
mov
add
sbb
mov
pushf
dec
and
adc
loopne
ljmp
sbb
sub
or
mov
jb
dec
stos
cmp
push
push
roll
test
push
loopne
mov
xor
push
sbb
stos
shlb
je
and
cmp
add
mov
fwait
or
aaa
or
lret
mov
push
decl
and
cmp
rorb
add
call
scas
or
push
jecxz
hlt
orl
test
sub
lea
data16
fidivs
inc
stos
mov
outsb
mov
jae
arpl
arpl
test
sbb
mov
push
mov
repnz
mov
push
fisttpl
sahf
adc
mov
aam
sbb
sub
adc
outsb
cli
out
pushf
pop
adc
leave
dec
jmp
out
mov
and
call
sbb
gs
clc
jne
add
jae
adcl
xlat
hlt
aaa
jne
lea
inc
jo
and
cmp
scas
push
dec
test
push
les
adcb
adc
push
lock
dec
pop
sbb
mov
and
shll
out
in
repz
push
inc
dec
frstor
sbb
aas
mov
dec
les
mov
mov
je
jle
push
call
in
shrl
sahf
dec
rclb
mov
clc
cmp
pop
xchg
incl
pop
pop
fdivp
cwtl
or
or
xor
xor
lock
call
or
xor
sub
fiaddl
jle
push
jo
inc
mov
push
sbbl
ljmp
push
stos
push
into
clc
call
sub
push
mov
dec
mov
mov
test
movsl
fidivl
adc
dec
jo
roll
movsb
mov
loop
and
or
xor
jb
ret
mov
outsb
xor
pushf
xlat
or
pop
sti
es
sub
call
mov
inc
mov
insl
xchg
pusha
popa
pop
hlt
xor
movsl
mov
fcoml
sub
ds
rclb
jge
adc
cvttps2pi
add
inc
lea
and
ret
arpl
icebp
jg
adc
push
xor
mov
push
xlat
in
jg
shl
add
sub
lock
xor
sub
inc
and
add
mov
ljmp
fsub
adc
add
inc
pop
push
and
xor
dec
and
push
dec
mov
dec
jl
add
fisttps
adc
sbb
jnp
js
push
adc
mov
rolb
inc
inc
sbb
push
cmp
cmp
dec
pop
sbbb
xor
in
xor
mov
out
fimull
mov
movzwl
sbb
jmp
cmp
scas
and
test
mov
les
inc
inc
mov
mov
mov
int3
and
fistl
jle
dec
testb
push
or
sub
sub
ljmp
lea
mov
sbb
dec
cmc
jnp
push
sbb
and
xchg
dec
fidivrs
jnp
aaa
cmp
add
adc
jo
mov
lret
xchg
jb
mov
int3
cmp
cs
call
mov
cwtl
push
ret
adc
fadd
rep
pop
enter
dec
outsb
push
add
movb
in
jg
aaa
je
or
movsb
outsb
adc
loopne
xor
pop
adc
dec
cli
adc
insb
hlt
outsb
jo
rclb
ds
test
add
mov
push
out
adc
pop
push
loopne
push
push
sti
jg
data16
std
test
xorl
or
push
inc
xor
jg
clc
inc
fs
test
fidivrl
add
add
pop
mov
push
repnz
cmp
add
sub
sbb
add
scas
daa
pop
fs
inc
push
in
addb
xlat
icebp
fdivs
mov
incb
into
lcall
adc
sbb
pop
and
jne
out
jmp
sbb
mov
orb
mov
cmp
je
jne
or
cmp
inc
or
out
mov
and
mov
icebp
hlt
or
xor
rolb
pop
testb
hlt
cmp
imul
sub
mov
push
dec
cmp
inc
push
sarb
ret
and
xchg
or
push
cli
pop
mov
lds
jl
inc
sbb
inc
decb
fs
add
mov
adc
mov
pushl
mov
mov
pop
lea
push
test
mul
cmp
pop
cmpsb
mov
call
add
inc
cmp
push
shlb
sub
scas
push
add
push
punpckhwd
jmp
cmp
sub
loopne
push
cmp
lods
call
shrb
dec
test
xor
mov
add
test
imul
dec
mov
mov
mov
lods
incl
fld1
push
fdivl
dec
push
sub
push
lock
inc
add
sbb
sbb
jne
rcl
div
pop
std
jnp
data16
les
sbb
cmpsl
cmpb
dec
inc
push
adc
mov
jne,pt
mov
fisubrs
jge
mov
jne
add
pop
mov
rorl
shlb
push
dec
cli
rclb
movsb
mov
ss
or
outsl
std
js
cmp
pop
fstpl
in
rorl
test
inc
inc
sar
ja
mov
mov
add
push
and
adc
adc
pop
sarl
es
mov
push
push
and
pop
push
int3
test
stos
cli
push
jg,pt
cmp
repnz
xchg
call
fcoml
pop
adc
shll
push
dec
outsb
mov
roll
or
cmpsl
inc
mov
loopne
jp
ss
shlb
pop
mov
add
mov
push
mov
call
ret
ret
mov
rorb
mov
movsb
jne
xor
mov
sbb
clc
push
sahf
jle
dec
aam
pop
dec
stc
mov
push
or
xor
loop
sub
rcll
mov
sub
add
inc
pusha
xchg
pop
out
test
test
add
pusha
data16
fwait
pushl
mov
or
push
test
sub
sbb
add
pop
mov
mov
call
pushl
or
sqrtps
and
ret
pop
cli
add
mov
pop
iret
ret
movsb
jmp
lock
pushf
fld
add
lds
push
rclb
rclb
std
aaa
or
pop
mov
je
mov
inc
mov
ret
adc
cmp
and
push
mov
and
nop
xchg
jmp
insb
pop
add
and
out
add
add
adc
fs
ss
jge
push
xor
add
jb
fdivl
es
push
ret
cs
inc
out
cmp
loopne
push
lock
cli
add
ljmp
adc
add
push
jne
adc
jb
jg
or
sub
pop
add
fs
push
mov
jle
jae
cld
lds
mov
clc
jmp
sbb
stc
ss
add
call
lock
cld
lret
mov
push
sbb
testb
add
aam
lock
push
xlat
fistl
imul
or
cmpl
ja
aaa
cld
into
lea
sbb
cs
add
lods
das
std
das
loope
mov
in
add
add
jmp
xchg
adc
push
cmp
mov
add
pop
lock
inc
sbb
or
jb
and
roll
jmp
decl
mov
add
notb
cmp
mov
int3
popa
or
lahf
fidivrs
mov
leave
push
add
in
call
inc
hlt
clc
jb
mov
call
loop
test
or
lcall
lret
and
push
or
fstpl
lods
xor
dec
or
mov
add
call
mov
popa
cmc
sahf
cld
jg
mov
add
inc
je
cmp
push
int3
je
clc
lahf
xor
fcomip
pop
les
sti
lea
or
les
movsb
fsubrl
cmp
lock
cmp
repnz
sbb
jo
pop
fsubr
pop
pushf
out
lcall
add
lcall
mov
fidivs
ret
call
scas
dec
mov
lea
mov
les
dec
pop
mov
cld
jle
fucomi
cld
add
inc
daa
sbb
push
add
xchg
or
xchg
ss
orl
jmp
cmp
enter
and
aaa
ret
and
xor
add
ja
cmp
rorb
ss
clc
inc
lret
jmp
push
pop
jge
pop
dec
loopne
pop
mov
aad
cld
add
ret
sub
adc
sub
xor
pop
pop
loopne
int3
scas
test
sbb
pop
lret
insb
mov
push
js
jo
mov
cmp
or
dec
add
inc
mov
mov
test
xchg
rcl
jbe
loop
push
pop
ljmp
dec
add
fidivrs
mov
mov
lahf
jle
pop
pop
push
inc
xor
adc
pop
add
scas
mov
xor
testb
sbb
add
mov
mov
mov
sub
test
or
adc
in
shlb
cmp
or
hlt
sarb
mov
mov
push
dec
cmp
addr16
push
out
xchg
push
mov
int3
fidivrl
inc
mov
adc
incl
xor
int3
stos
mov
fistl
pop
das
jp
fnstsw
outsb
sub
scas
sti
cmp
fs
jmp
sbb
add
dec
in
inc
scas
jne
mov
adc
cmp
and
pop
movsb
gs
and
add
aam
incl
test
ja
add
or
movsl
sbbb
mov
and
cmpsl
lret
push
dec
sar
fdivl
in
arpl
stos
cmp
jne
clc
or
cld
jg
inc
mov
add
sub
or
or
xchg
dec
cld
push
dec
gs
test
in
or
cmp
push
clc
push
pop
xor
addb
ret
ja
add
or
enter
inc
mov
mov
jmp
adc
int
call
or
and
mov
xor
imull
add
test
push
jne
or
adc
test
je
or
pop
adc
adc
or
addb
test
rolb
aaa
mov
leave
js
inc
arpl
xchg
mov
cli
fistps
add
push
jne
mov
xor
subb
je
jno
push
mov
rol
mov
mov
mov
mov
add
aaa
add
push
adc
cmp
add
je
rclb
add
mov
int3
mov
std
cmc
dec
hlt
adc
or
inc
ret
xchg
inc
inc
cwtl
fs
cld
sub
push
or
mov
sbb
mov
mov
sbb
jle
std
rorl
adc
dec
add
sti
add
cmp
inc
mov
xor
add
add
repnz
add
adc
call
ret
push
fwait
addl
std
jle
lock
les
test
dec
pushf
mov
xor
mov
sub
dec
les
sbb
clc
mov
mov
mov
push
lcall
inc
or
loopne
jo
lret
or
inc
fcompp
xchg
test
cli
sub
pop
mov
insb
fwait
clc
mov
mov
pop
xor
sub
mov
jo
add
les
notl
mov
push
jo
lcall
test
xchg
mov
add
cs
mov
inc
cwtl
loope
sarb
push
out
loopne
mov
pushf
add
hlt
xchg
or
insb
pop
testb
pop
mov
jp
pop
idivb
add
incb
out
ret
cmp
ret
add
sbbb
jg
pop
mov
add
mov
mov
jmp
and
push
ljmp
push
and
adc
out
rorb
push
and
aas
push
les
pushf
test
cwtl
push
cmp
lock
out
mov
movb
sbb
dec
test
dec
je
sbb
add
movsb
xchg
lock
pop
outsb
add
fildll
shlb
add
ljmp
mov
add
jbe
mov
adc
je
enter
dec
je
aas
fcompl
sti
je
je
mov
scas
and
mov
sbb
mov
jo
mov
dec
rcrl
xchg
xor
clc
cld
pop
jl
js
incb
mov
test
push
adc
sbb
inc
les
loop
shlb
nop
pushf
addb
add
or
mov
cmpsb
hlt
movsb
adc
in
mov
loopne
cmp
push
dec
push
insl
push
mov
popf
enter
test
jmp
xor
add
pcmpgtb
fs
aad
fstpl
and
add
push
push
int3
mov
aaa
aaa
cmp
push
ret
decl
dec
jp
jne
rolb
jb
lea
in
jmp
mov
aam
mov
or
sub
cmpl
dec
sbb
andl
rcrb
xchg
call
fdivr
jbe
push
dec
xor
idiv
pop
jg
clc
call
int
movb
or
push
ficomps
gs
sar
mov
jne
mov
in
push
pop
pop
xchg
pop
pusha
add
cmpl
mov
jge
or
cltd
in
test
outsl
inc
out
mov
jmp
mov
andl
mul
mov
push
jae
mov
std
push
pop
inc
push
bound
cli
orb
in
xchg
add
add
sbb
xchg
push
sbb
imul
dec
pop
mov
in
insb
enter
push
adc
int3
aam
mov
hlt
repnz
clc
leave
push
adc
push
mov
xor
push
cmp
faddp
adc
inc
add
scas
adc
insb
je
xor
add
pop
mov
rclb
jl
mov
cmp
mov
loopne
lock
push
fsubrs
jo
jle
or
push
popl
xchg
outsl
mov
and
insb
cmpsb
jmp
cmc
or
or
call
call
lret
loopne
outsb
je
dec
aaa
jge
insl
stos
sti
clc
outsb
cmp
ffreep
scas
adc
sub
aas
lcall
sub
loopne
adc
jbe
repz
aaa
cld
in
fiadds
xor
inc
dec
adc
push
rclb
outsl
insb
mov
dec
xchg
call
adcl
outsb
divb
mov
and
es
pop
sub
xor
inc
stos
aam
adc
xor
xlat
add
mov
add
lahf
shll
test
push
fisubl
js
cmp
adc
fistps
incb
mov
sbb
push
popa
jo
jmp
xor
xor
fstpl
mov
xorb
notb
mov
push
ret
shrb
pop
xor
ret
aam
cli
sbb
or
call
in
loop
mov
add
pusha
je
loop
push
data16
mov
cmp
adc
mov
push
enter
add
inc
int3
mov
les
scas
dec
lock
sti
jg
push
out
into
mov
mov
repz
xor
and
mov
mov
dec
mov
add
test
pop
sub
sti
push
xchg
js
out
pop
or
add
call
shrb
movb
sub
je
inc
inc
lea
test
lods
cld
outsl
jmp
adc
cmp
xor
orl
loope
shll
mov
lcall
push
xor
xor
sbb
sub
gs
mov
xchg
cmpsb
mov
mov
inc
dec
cli
inc
sbbb
outsl
cmp
push
adc
mov
clc
push
cmp
add
sub
sub
int3
jge
jg
xor
prefetcht0
or
mov
adc
cwtl
dec
lock
pushl
mov
pop
push
lock
aas
and
es
sbb
dec
adc
inc
adc
or
mov
mov
cmp
sub
das
cli
testl
xor
lock
push
into
arpl
clc
adc
add
dec
adc
jae
andl
sub
push
icebp
nop
fsubl
add
adcl
mov
pop
jb
pop
mov
aas
adc
mov
cmpsl
es
repnz
mov
lock
les
stos
mov
sbb
xor
sub
jmp
hlt
insb
or
loopne
add
inc
inc
add
lock
repnz
les
sub
add
xor
mov
xor
sbb
mov
shll
push
and
xor
push
dec
lock
xor
push
les
jne
dec
or
add
arpl
js
je
mov
push
and
loope,pn
dec
hlt
orl
mov
xchg
add
push
xor
adc
dec
cmp
loopne
lea
push
lods
mov
inc
outsb
jae
push
mov
inc
outsb
rcrb
pop
adc
sbb
jmp
outsl
idivb
mov
cmp
inc
insb
mov
jbe
push
mov
mov
push
adc
mov
nop
mov
cli
ret
pop
pop
add
mov
push
nop
fsubrp
push
stos
stos
mov
pop
dec
es
pop
test
mov
insl
dec
call
clc
jl
out
add
pushl
xor
cmovl
inc
pop
jmp
inc
rorb
loop
jg
lcall
int3
inc
push
xchg
stos
add
cld
jle
in
push
inc
jnp
js
mulps
lea
orl
xor
pop
xor
shrb
out
adc
and
xlat
push
mov
rcrb
push
push
push
inc
mov
add
inc
push
and
mov
popf
xor
pop
insl
push
xchg
or
push
ds
bound
add
mov
add
rcl
pop
push
in
fisttps
loop
adc
je
shlb
loope
mov
aam
mov
loope
sub
insb
call
pop
rorb
pop
inc
mov
push
loope
adc
add
and
push
or
mov
mov
mov
lret
inc
fdivl
incl
clc
pop
lea
stc
and
call
test
sti
fidivrs
add
sub
jbe
dec
pop
aad
test
mov
sbb
test
push
addr16
stos
fldt
dec
or
sbb
inc
add
pop
push
js
ds
xchg
hlt
int
add
int3
dec
mov
cmp
call
mov
push
test
push
or
pop
or
cmp
test
ret
or
sbb
sbb
fdivr
and
mov
aas
ret
pop
out
test
push
in
out
adc
lea
das
jmp
std
add
xchg
in
or
cmp
shlb
or
push
popa
fstpl
ror
push
in
inc
add
inc
xor
stc
adc
ja
cli
xchg
and
ja
adc
cld
jne
cmp
adc
xor
dec
add
std
mov
push
add
push
mov
in
iret
push
aam
mov
xor
sbb
stos
mov
adc
gs
fistl
stc
and
dec
subb
pop
in
push
hlt
adc
or
mov
mov
mov
xor
into
outsb
xchg
fcos
fmull
mov
xchg
cli
and
cmpsl
sarb
popa
cvttps2pi
loopne
pop
fdiv
stc
andb
ret
mov
std
sbb
push
push
and
out
adc
insl
pop
or
orb
arpl
dec
push
dec
ljmp
je
cli
xchg
xchg
adc
cmp
add
loopne
ss
cmp
shlb
aam
mov
push
add
into
pop
cld
jg
sbb
test
adc
dec
fucomi
out
addps
push
rorl
aaa
jl
add
int3
call
mov
or
ret
lds
test
and
mov
mov
add
xchg
cmp
add
push
xchg
scas
adc
and
and
push
into
or
mov
enter
loop
shll
call
test
push
call
icebp
lcall
adc
sar
cmp
add
jne
and
push
std
or
or
shlb
jge
test
ret
push
rcr
cld
cmpsb
pop
dec
mov
sub
scas
test
lea
dec
loopne
leave
xchg
cmc
adc
outsl
cmp
test
fcom
sub
cli
push
ret
jl
pop
jg
xchg
les
xor
xor
test
shl
out
pop
xor
or
jge
clc
sbb
xchg
shlb
push
cmp
push
xchg
xor
sub
shrb
xor
pushf
out
cmp
pop
lock
jp
pop
sbbb
add
js
cmc
les
daa
fdivrp
xor
add
fbld
sar
arpl
jb
add
xchg
push
inc
aad
and
mov
scas
or
divb
mov
xor
test
push
popf
test
push
push
in
mov
jp
mov
in
test
shll
inc
lea
cmp
xchg
cmc
add
jp
push
loop
sub
inc
fildl
lcall
mov
cld
or
cs
insl
cld
add
push
inc
or
icebp
sar
adc
stos
call
jmp
das
and
add
lea
add
add
inc
pusha
outsb
jno
decb
inc
cmp
xchg
inc
pushf
jmp
je
xor
mov
lock
jle
push
int3
leave
in
insb
je
mov
inc
sbb
push
ret
mov
jne
or
mov
pop
jne
xor
add
mov
push
xchg
lds
dec
inc
mov
jae
mov
scas
cli
sbb
inc
enter
sahf
dec
adc
xlat
ljmp
cmp
sbb
inc
fldt
mov
adc
sub
xor
add
mov
mov
or
fsts
scas
cmp
jl
jmp
xadd
fwait
add
pop
test
inc
or
es
push
pop
loopne
push
adc
je
test
stos
add
mov
jge
inc
mov
in
mov
sbbl
cmpsl
push
shll
push
sbb
push
imul
dec
test
cmp
adc
push
or
mov
add
push
lock
jmp
cmpsb
mov
sub
push
das
lret
lea
jne
icebp
push
call
negb
aaa
adc
sbb
xor
loope
lods
xor
movsb
pop
mov
jmp
rolb
in
dec
adc
push
add
mov
sub
xchg
subl
mov
mov
aam
orl
inc
jmp
fdivr
subl
pusha
xor
sub
in
add
adc
mov
mov
inc
popf
adc
push
pusha
xor
fmull
fcoml
fs
cmp
rcr
jno
and
pop
xor
push
scas
jmp
outsl
cs
dec
add
in
jnp
inc
test
add
jl
adc
and
add
cli
outsb
sub
rolb
or
and
mov
inc
rdpmc
add
push
les
incb
mov
mov
mov
add
push
inc
int3
pushl
xor
adc
fidivrl
add
adc
push
rcrb
or
xor
add
fiadds
mov
xor
fildl
adc
call
rol
cmp
sub
push
pop
xor
ret
fwait
xor
pop
fiaddl
cmp
xor
inc
adc
inc
movb
fildl
aas
je
pop
mov
je
ficoml
jb
mov
cld
cmp
data16
js
call
add
adc
shl
adc
push
mov
into
sti
in
clc
cmp
mov
mov
mov
pushf
mov
ret
fistps
adc
adc
adc
mov
loop
rorl
inc
fcmovnb
lods
fwait
out
data16
or
loopne
je
cld
or
loope
push
aam
add
inc
cmp
jb
popa
or
pop
test
mov
xchg
sahf
and
cmp
mov
shll
sbb
fsubl
add
xchg
mov
adc
jb
clc
mov
rol
mov
subl
xor
popf
fstpt
mov
xor
shll
data16
mov
cmp
cmp
fmul
jle
pop
jg
scas
mov
xchg
or
jne
fidivs
mov
mov
jne
insl
xor
add
sub
inc
push
sbb
cmp
jbe
divl
mov
inc
stc
sub
je
test
mov
jle
loop
out
sbbb
cmp
rolb
adc
stc
adc
mov
push
push
cmp
je
mov
add
cmc
jg
push
clc
mov
xchg
decl
xchg
test
decl
xchg
outsl
les
cmpsb
add
mov
pusha
es
xchg
add
sti
mov
add
fs
int3
mov
mov
sub
jne
sti
jle
jo
mov
push
cld
sbb
adcb
sub
push
push
popf
ret
push
and
mov
mov
xchg
bound
push
daa
lds
fcomps
out
mov
ret
mov
xchg
jmp
adc
push
test
push
cmp
scas
popa
and
add
add
add
adc
cmp
daa
into
add
cwtl
inc
jo
sbb
push
ljmp
popa
outsb
int3
mov
cmp
push
and
fs
sbb
loopne
mov
loopne
cmp
shll
dec
jne
mov
xor
aad
test
out
addl
std
jp
mov
js
outsl
les
push
rcll
or
push
pop
scas
rolb
jle
lahf
mov
repnz
or
add
mov
cwtl
add
or
mov
gs
mov
inc
bound
and
insb
fsubrs
or
mov
add
or
sub
clc
roll
inc
push
push
cmpsb
movsl
sbb
mov
push
xchg
add
lods
pop
test
pop
outsb
adc
or
insb
dec
dec
cmp
or
or
je
jge
add
cmp
lret
jecxz
push
mov
out
or
unpckhps
incb
push
cmp
loope
dec
adc
inc
xlat
mov
inc
mov
inc
mov
decl
add
push
inc
rol
paddd
mov
add
addl
adc
sbb
incb
adc
repnz
rolb
mov
mov
insb
xor
loopne
push
stos
jp
mov
dec
mov
or
mov
movsb
cmp
test
lea
pop
lcall
aad
imul
mov
outsl
cmp
sbb
insl
pop
pop
mov
les
sahf
push
fsubp
mov
bound
in
test
jne
mov
ret
pop
mov
test
inc
les
out
and
shrb
add
add
pop
ljmp
mov
add
aad
push
aam
xchg
push
je
or
push
std
pop
je
out
lret
add
xor
ss
push
clc
ds
jo
inc
mov
or
icebp
enter
ss
loope
test
adc
jae
sub
push
call
sbb
pop
mov
add
add
test
push
repnz
outsl
jbe
outsl
loopne
iret
jge
stc
push
inc
add
lret
shlb
test
pusha
push
xor
xor
or
aam
add
mov
add
or
push
or
nop
call
xor
sub
add
dec
outsb
jl
call
in
les
xchg
or
cmc
add
jle
imul
in
sti
mov
xchg
jp
add
cli
jg
loopne
das
lock
pushf
push
movsb
push
sti
lods
mov
repnz
push
outsb
aam
jle
call
lea
movsb
jl
daa
ss
push
pop
cld
pop
mov
adc
xor
xor
pop
inc
rcrb
mov
nop
cli
dec
mov
mov
imul
sub
jne
inc
aad
and
push
cmp
outsb
std
push
rorb
and
mov
adc
jbe
bound
int
sahf
sub
pop
mov
mov
fnsetpm(287
adc
jle
pop
inc
inc
xchg
aad
aas
add
adc
cltd
push
imul
mov
jl
adc
adc
push
gs
jne
fcoms
dec
mov
inc
andl
cld
cmpsb
mov
pusha
push
pop
cwtl
das
icebp
add
shrb
inc
rclb
mov
dec
inc
je
movb
fs
insb
leave
add
push
mov
mov
stos
or
les
mov
rorl
adcl
add
mov
jns
clc
test
add
or
lods
or
pop
jmp
lahf
sbb
test
push
ret
push
ja
mov
cmp
in
add
add
or
js
addb
cmc
jg
ljmp
push
into
add
or
cmp
jno
or
or
jnp
jbe
or
or
lcall
or
cmpsb
ds
pushf
orb
stos
push
icebp
fucomip
lcall
pop
gs
gs
mov
int3
sub
rcl
fs
rcrw
and
adcb
pop
shlb
test
push
jne
test
jbe
popa
add
mov
arpl
ret
xor
add
adc
mov
mov
ds
adc
sub
addb
lret
sahf
sbb
leave
jle
push
add
push
sub
repnz
icebp
mov
mov
inc
mov
mov
push
sbb
cld
pop
pop
cmp
ljmp
mov
lcall
ds
push
std
mov
push
pop
dec
dec
xchg
push
adc
enter
test
test
jge
adc
pop
mov
push
sbb
push
push
xchg
cmpl
mov
les
push
push
and
and
flds
or
bound
hlt
loopne
xor
cmp
sbb
scas
test
popf
scas
test
lock
mov
mov
loope
mov
leave
inc
push
sub
inc
jg
pop
in
xor
test
mov
jg
stos
xor
call
inc
rorl
mov
mov
mov
nop
add
jmp
cs
inc
cmp
adc
test
in
sub
rolb
adc
push
xorl
in
pop
cmp
jl
loope
jg
xlat
inc
std
decl
mov
test
test
sub
mov
popf
test
clc
mov
inc
mov
mov
mulb
ret
mov
adc
incl
outsl
pop
push
add
mov
arpl
jge
lcall
adc
adc
xchg
jle
sbb
call
add
adc
add
dec
add
mov
and
popa
sti
dec
test
lock
pop
shl
data16
xor
inc
push
aas
xchg
ss
test
decl
xorl
inc
cmp
divb
cld
xor
insb
lea
daa
sbb
ret
mov
mov
mov
fsubrl
mov
or
repz
popa
cmp
jmp
cld
loope
inc
pop
jne
cld
fldt
cld
mov
lahf
movsb
or
or
icebp
pop
adc
ds
mov
aaa
jo
cmp
shld
les
fsubrl
sbb
adc
adc
jge
js
or
inc
test
gs
mov
in
add
mov
nop
inc
clc
mov
test
in
mov
jmp
cmp
mov
cmp
or
push
ds
test
add
into
ffreep
gs
sbb
dec
xor
xor
add
mov
push
rclb
jg
adc
sbb
push
mov
pop
fistpll
xor
add
js
mov
mov
adc
je
in
into
jle
and
pushf
call
push
mov
sahf
lock
sbb
cmp
icebp
loop
sub
cmp
mov
lock
jl
mov
lock
pushl
lods
push
add
mov
add
and
int3
shlb
bound
xor
inc
lds
mov
xor
xor
scas
mov
ljmp
in
mov
incl
loope
push
xchg
loop
fs
lret
inc
call
cld
push
push
adc
lock
add
jo
push
into
pminsw
add
inc
or
mov
and
sub
inc
stos
xchg
mov
out
ss
jge
add
rorb
push
std
jp
push
not
stc
sub
nop
decb
inc
hlt
std
roll
out
sub
in
orb
push
insl
ja
push
xadd
jl
jo
das
mov
add
punpckldq
rcr
faddl
sahf
shlb
xor
ret
and
psubsw
loopne
push
je
js
scas
jecxz
ret
add
mov
test
lcall
dec
data16
daa
push
and
sbb
xor
push
or
fdivrp
es
mov
lret
leave
add
inc
add
das
orl
jp
mov
mov
sti
mov
cmp
jbe
jg
jne
dec
vpshuflw
cmp
arpl
hlt
push
test
mov
out
mov
pand
add
sti
ds
xchg
push
insb
add
sbb
push
mov
fwait
in
mov
sbb
stos
loop
push
je
movsl
add
dec
mov
jb
xor
addb
gs
mov
sbb
cld
jl
jne
adc
insl
in
pusha
push
inc
add
inc
jg
test
xchg
mov
popa
inc
dec
call
pop
add
stos
pop
adc
insb
stc
call
mov
jl
push
add
sbb
dec
inc
inc
fcompl
jne
mov
add
pop
inc
push
sbb
push
clc
call
ror
adc
add
sbb
add
mov
xor
cmp
movsb
dec
mov
fs
cmp
push
in
hlt
add
sub
xor
test
hlt
scas
dec
xchg
test
inc
call
inc
dec
fs
lock
mov
add
xor
adc
pop
aam
int3
maskmovq
rclb
pop
cmpsb
fwait
jg
fimull
mov
adc
js
xor
pop
idiv
lret
loop
push
mov
add
hlt
lods
cmp
inc
inc
xor
shlb
sub
jmp
int3
sbb
js
movsl
mov
mov
mov
pop
pop
ret
je
or
fimull
jp
jae
cld
les
sub
jmp
push
xchg
pop
sbb
ss
push
inc
icebp
add
cmp
mov
jmp
es
call
adc
es
pop
out
orb
xorb
mov
rcrl
mov
inc
cmp
inc
jp
outsl
inc
dec
mov
sbb
add
lock
add
mov
jg
lea
and
outsb
sub
test
loope
ljmp
sti
add
or
or
jle
popa
fistl
nop
push
inc
cmp
add
add
ret
cs
push
mov
mov
add
ljmp
sbb
insb
xchg
mov
mov
lret
jge
push
cmp
mov
out
or
js
mov
std
call
sbb
mov
or
jg
call
cld
or
push
je
pop
inc
sbb
std
push
or
xchg
xor
or
push
fisubrl
push
adc
sbb
add
xorl
push
ret
push
push
cmp
popf
xor
pop
rorb
fwait
sbb
std
or
pop
std
hlt
mov
inc
sbb
xor
xor
cmc
dec
inc
std
mov
mov
outsl
pop
mul
stos
inc
cs
pushf
add
or
adc
xor
jp
dec
jl
cld
lds
ret
jnp
inc
xchg
xchg
push
out
xor
adc
mov
or
stos
cld
inc
sub
cs
addl
ds
jmp
mov
push
jl
jmp
cwtl
ljmp
xor
jmp
fisubrs
lock
adcb
test
adc
xor
xor
add
cmp
add
inc
enter
test
std
add
sub
inc
ficompl
push
out
lea
das
pop
or
xor
mov
push
mov
je
add
pushf
roll
aaa
dec
ljmp
or
pop
add
or
cmp
cld
push
mov
push
shlb
and
mov
push
decl
inc
push
push
sbb
imul
dec
jo
mov
pushf
push
sub
shll
adc
fs
push
mov
mov
xor
push
mov
clc
out
mov
lea
and
dec
mov
mov
ljmp
xchg
mov
pop
in
les
add
icebp
fadds
dec
add
add
cmp
adc
cli
sub
mov
fs
add
shrl
pusha
arpl
and
shlb
mov
pusha
and
notb
add
mov
or
ss
push
xchg
mov
outsb
fdivs
lods
push
cmp
push
xor
jmp
mov
xlat
mov
add
pop
mov
mov
fdiv
add
mov
xchg
std
loope
pop
mov
mov
dec
gs
imul
add
test
es
push
dec
dec
mov
cmp
test
adc
int
clc
cmp
push
adc
inc
pop
or
je
jg
aad
push
push
push
jmp
and
je
sbb
mov
mov
int3
add
out
sbb
adc
mov
xor
into
or
push
ret
adc
xor
mov
jmp
je
cwtl
or
or
cld
xchg
add
adc
and
in
push
cmp
or
push
xorb
pop
add
sub
push
add
push
test
jo
mov
adc
jne
orb
loop
incl
add
add
data16
ljmp
push
dec
call
sub
lcall
sub
mov
sbb
mov
incl
push
or
push
aaa
jecxz
xor
xor
push
add
xchg
xor
sahf
cli
push
stos
jne
pop
add
jne
imul
push
push
jb
testl
movl
push
push
adc
and
xor
xor
incb
add
pop
mov
inc
jne
xchg
mov
repnz
lcall
cmp
fs
mov
rcrl
cmp
lret
movsb
jae
xor
jle
ljmp
adc
data16
push
dec
mov
in
shrb
sbb
mulb
orps
orl
xor
add
mov
inc
inc
cmp
pop
arpl
addl
or
or
xor
adcl
jg
movups
add
or
lret
add
outsl
ljmp
andb
inc
push
int3
dec
add
ficompl
enter
jno
incl
xorl
push
or
xor
cmp
cmp
jne
push
data16
in
and
xor
decl
xor
push
faddl
stos
pop
push
sub
sbb
sub
cmp
jbe
adc
and
lds
sub
xchg
gs
je
or
or
mov
jp
and
push
fisubl
dec
dec
push
ss
adc
jne
pop
mov
jecxz
test
rcrl
or
push
lock
stos
lds
xor
out
sbb
je
add
pop
push
or
adc
popa
mov
or
mov
xchg
jo
out
test
adc
aam
xchg
xorl
mov
call
and
sub
psadbw
push
movsb
sbb
add
pushl
add
push
mov
sub
les
mov
mov
das
dec
icebp
outsl
mov
icebp
xchg
rorb
or
mov
shrb
dec
ret
cs
mov
cmp
fmuls
mov
jbe
and
add
mov
push
enter
mov
cmp
add
jmp
cmp
inc
push
incl
lea
add
mov
outsb
mov
inc
cld
mov
les
int3
push
adc
inc
jg
push
rcrb
shll
or
cmpsb
in
jmp
jp
mov
inc
sub
stos
jge
movsb
pop
sahf
cmp
sub
mov
je
insb
adc
sub
push
mov
pop
jno
int3
and
cs
add
mov
cmp
imul
adc
into
mov
jge
cmpl
jnp
sbb
ret
add
or
adc
xchg
adc
dec
xor
xor
hlt
out
add
adc
add
and
std
mov
cs
fcmovnb
je
mov
clc
jo
js
scas
call
cmp
gs
cmp
cmp
pop
cmp
dec
inc
ss
std
sub
push
enter
pushf
je
ljmp
xor
add
push
pop
or
test
pop
mov
inc
shll
jl
gs
aaa
jmp
or
push
mov
jo
jle
push
xor
idiv
mov
jg
div
sbb
add
shl
dec
test
push
fsubl
inc
lds
js
inc
cmpsb
push
cld
sub
mov
call
cmp
ljmp
pop
push
or
sar
lcall
call
movsl
cld
andl
shlb
mov
cmp
dec
jno
mov
into
into
cmc
and
lea
movsb
fisubrs
lea
mov
push
loope
inc
ret
pop
sub
sbb
mov
aas
ss
jmp
add
mov
dec
add
add
sbb
mov
fimull
lock
add
jbe
ror
add
sbb
pop
pushf
stos
cmpsb
inc
push
cmp
rol
mov
daa
rcrl
outsb
cli
xlat
lock
and
and
je
cmp
addr16
adc
daa
and
pop
dec
jp
pop
push
pop
dec
add
call
inc
push
mov
push
or
call
add
insl
inc
xchg
data16
mov
add
push
mov
adc
inc
int3
mov
jg
cmp
cmp
movsb
mov
mov
jae
lret
movsl
cmp
shrl
inc
jmp
sti
mov
adc
and
and
adc
call
test
call
in
mov
lds
push
jbe
push
cld
jbe
jge
ds
inc
bound
les
mov
shlb
sub
aaa
insb
out
push
sti
bound
pop
xor
mov
mov
inc
in
cmp
pop
push
scas
xchg
add
loopne
jle
jnp
mov
pop
sahf
std
fcoms
call
insl
mov
xor
jecxz
aam
jl
jo
ret
lock
jle
movsb
mov
mov
xor
push
or
push
in
shrl
lea
cmp
xor
inc
cs
mov
inc
jb
add
shlb
test
xor
and
push
pop
bound
and
je
jns
pop
sub
mov
test
dec
xor
cmp
or
or
jl
popa
mov
je
push
mov
aas
cmpl
xor
hlt
sbb
xor
inc
sub
adc
movsb
pop
cli
or
cli
fiaddl
lods
jb
scas
testl
aaa
push
pop
into
rol
fcomip
call
lret
inc
movsb
mov
and
aam
xor
addl
cmc
int
mov
adcb
cmp
int3
sub
cmp
orb
add
push
stos
jo
add
insb
xchg
jge
sbb
sbb
test
sub
push
cmp
and
lea
hlt
rol
inc
adc
sbb
dec
cmc
incl
pushf
or
into
adc
push
loop
nop
mov
xchg
and
inc
fiadds
add
mov
xchg
push
lods
imul
push
mov
dec
inc
xor
popa
push
aam
cmp
cld
xchg
jg
mov
cld
mov
popa
mov
ljmp
sbb
nop
xor
jno
inc
icebp
jp
rclb
orb
jl
dec
int3
shrb
outsb
fs
add
aam
pop
jle
sub
push
sbb
sti
cmc
aas
push
or
add
lcall
add
test
decl
mov
lods
cmpsl
hlt
cmpsb
ret
les
or
jne
dec
add
out
rcrl
adc
into
add
mov
mov
cmp
cmp
cwtl
jl
or
add
stos
xchg
cmp
mov
cld
sub
inc
inc
fists
pop
xchg
stos
pop
add
out
rolb
push
loopne
mov
es
push
or
inc
mov
lcall
ljmp
or
and
jg
xor
andb
add
cmp
cld
adc
jb
test
mov
mov
leave
std
add
jg
mov
mov
test
mov
ss
or
mov
add
subl
fdiv
add
subb
fcoml
mov
dec
mov
bsr
mov
test
mov
inc
aam
popf
call
sahf
nop
push
adc
adc
test
hlt
pusha
jp
pop
rcrl
cld
push
push
add
movsb
test
fcmovbe
or
jl
mov
mov
test
je
add
dec
jl
ja
mov
aam
loopne
outsl
mov
orl
lods
clc
andb
inc
test
push
cli
mov
inc
push
shl
lock
lock
cmpsb
add
mov
sahf
rcrb
cmpsb
jle
mov
pcmpgtb
mov
mulb
sub
testb
mov
sti
jmp
xchg
adc
add
lods
mov
add
test
call
hlt
enter
add
divb
lcall
jl
cmp
sub
ret
js
leave
mov
push
pop
adc
xor
out
aas
lods
mov
je
push
xor
jge
or
cmp
adc
out
sub
pop
mov
or
les
mov
or
js
and
sub
mov
mov
dec
push
mov
push
shr
or
faddl
es
pop
bnd
dec
test
inc
inc
sbb
movb
mov
adc
or
add
jo
mov
and
sub
das
dec
mov
inc
cld
jne
incl
aam
push
or
push
xor
xor
push
les
adc
inc
pop
lea
into
add
xor
or
cmp
jne
jmp
cmp
lods
push
mov
fsubr
mov
push
xchg
sbb
pushf
fisubs
cld
lds
jbe
je
jo
mov
pushf
gs
push
jb
jbe
mov
mov
and
lea
test
rcll
push
scas
cmp
xlat
out
lods
jge
in
lea
loopne
aad
or
scas
cld
std
cmp
xchg
mov
push
cld
or
in
test
lods
mov
sar
push
in
sbb
sbb
mov
leave
sbb
mov
cmpsb
ret
jbe
xlat
add
scas
cmpsb
sub
xor
jb
stos
pop
jno
rolb
and
sbb
xchg
test
push
lds
leave
or
stos
ds
xor
outsb
loopne
imul
inc
pushl
xor
fsubrs
xor
xor
inc
adc
add
inc
pop
jmp
adc
push
xor
pop
mov
dec
mov
xor
adc
movsb
mov
xchg
adcb
icebp
into
rolb
stos
jne
push
sbb
jge
movsb
je
cmc
cmpsb
jbe
in
pushf
and
cmp
ret
into
mov
dec
repz
sti
je
in
inc
pop
mov
xor
mov
push
je
mov
clts
loopne
shr
push
mov
pop
and
cmp
cmp
out
pop
push
add
shufps
mov
sarl
hlt
je
push
or
dec
out
ret
loop
lret
add
xor
mov
add
xabort
add
leave
pop
fwait
das
pop
scas
or
and
xchg
aad
xor
fisubrs
xlat
stc
dec
cld
or
rol
aas
sub
and
adc
mov
lahf
cmp
or
dec
lock
data16
mov
arpl
test
mov
lea
mov
out
push
sti
mov
inc
jmp
cmc
add
jmp
movb
adc
in
and
xchg
push
dec
pop
aam
sbb
clc
mov
xchg
mov
cmp
jg
cmp
jp
ljmp
adc
or
mov
testb
mov
adc
push
inc
xor
add
adc
mov
scas
push
cli
xorb
cli
jg
push
adc
mov
popa
ret
sbb
fildll
xchg
add
jo
aad
data16
es
loop
push
scas
mov
inc
fiaddl
add
addb
mov
push
add
loop
mov
add
call
dec
jl
lea
repnz
push
pop
das
mov
fimuls
push
jno
cmp
ret
mov
sbb
push
sub
push
and
mov
add
pop
fcoms
mov
jo
push
je
add
inc
test
test
test
cmp
pop
insl
pop
xchg
lods
stc
fists
sub
push
cmp
hlt
mov
pop
add
cmp
mov
mov
test
and
mov
in
adc
call
clc
and
and
push
fcomps
pop
push
js
and
adc
push
jmp
scas
sbb
or
mov
fcomps
stos
push
lock
sub
inc
push
inc
push
outsl
inc
push
mov
dec
lret
sbb
fs
fisubrs
add
mov
clc
push
cmp
cmp
test
mov
xor
mov
push
adc
cld
int
jle
in
xor
add
fs
push
shlb
mov
pop
lock
push
push
pusha
decl
shll
sbb
int3
shlb
mov
jbe
scas
call
cmp
jbe
lods
stos
inc
mov
jp
xchg
cmp
std
filds
inc
adc
outsl
movl
ds
leave
cmp
mov
push
lds
push
jmp
call
jns
aam
sub
js
inc
outsl
xlat
or
insb
inc
jge
add
pushl
add
sub
roll
lret
or
and
add
lock
xlat
lock
cmpsb
fwait
lock
lea
push
sbb
inc
mov
mov
jl
lret
pusha
test
rcll
lock
scas
outsb
mov
cmpsb
dec
mov
add
test
add
cld
push
adc
shrl
pushf
mov
pop
rorb
rolb
fdivr
push
sbb
push
jne
int3
fcomip
int
push
add
je
mov
mov
dec
dec
scas
xor
jmp
jmp
xor
inc
inc
push
xchg
inc
or
mov
add
cs
pusha
call
and
ds
cmp
and
sub
or
ja
add
jb
bswap
imul
cld
call
push
repnz
push
movl
push
call
cmp
pop
xor
jmp
insb
mov
addl
out
fdivl
cmp
adc
subb
lcall
add
or
in
or
popa
or
push
inc
jo
rorb
cmp
xor
call
add
xor
xchg
clc
mov
push
je
cmpsb
sub
imul
dec
inc
sbb
xor
out
mov
imul
call
or
in
add
pushf
add
adc
arpl
mov
cld
outsb
xchg
push
push
test
dec
addb
dec
xchg
adc
mov
jno
imul
pop
jge
xchg
adc
mov
jmp
enter
lock
inc
call
mov
int3
cwtl
inc
xchg
xor
movsb
lcall
adc
add
cmc
cmp
les
sbb
xchg
jnp
fstl
gs
jg
push
xorb
ret
rcr
and
movl
lcall
adc
push
movl
cmp
stos
popa
dec
fiaddl
or
cmp
xchg
or
jne
pop
loopne
int
inc
movl
add
out
or
sub
add
add
push
cmpl
mov
xchg
lcall
add
clc
int
pop
add
leave
incl
xor
mov
add
ret
xor
push
ljmp
pop
mov
jbe
xor
into
jge
test
lds
aam
sti
lea
sub
orb
shrl
lahf
test
xor
je
pop
mov
cmpsl
mov
lods
pushf
js
sti
jae
push
add
mov
push
push
jne
mov
inc
hlt
push
sub
pop
or
les
in
pop
test
enter
fsubp
and
adc
les
adcb
ja
mov
xor
jp
sar
stc
mov
insb
push
mov
jge
loopne
cld
sbb
je
mov
pop
add
and
iret
push
inc
in
icebp
push
cld
and
pop
adc
add
jmp
and
dec
mov
xchg
gs
and
jbe
add
sarl
pushf
cmpsb
test
adc
pop
add
jp
and
and
push
adc
sbb
test
movl
sub
mov
add
adc
push
xor
cmp
out
dec
xor
fcomi
icebp
jle
pop
lret
jmp
sbb
xor
fbld
mov
mov
cltd
add
jne
pop
and
xorb
movsb
add
cld
outsl
add
jns
mov
rol
and
mov
dec
push
or
sub
mov
in
pop
fwait
sahf
mov
or
inc
add
pop
add
stos
jmp
orb
cmp
std
pop
mov
add
call
leave
sub
mov
jae
and
movsl
push
ljmp
xchg
fisubrs
xor
call
test
in
ljmp
aam
inc
fadds
insl
es
hlt
aas
clc
repz
test
shr
xor
push
push
bound
or
cmp
push
cwtl
je
fwait
call
add
cld
sbb
test
jge
roll
test
pushf
inc
popa
mov
pop
outsb
add
je
push
mov
pop
inc
flds
and
js
mov
dec
inc
call
adc
push
mov
roll
fidivs
adc
movsb
outsl
xor
roll
and
mov
cmp
das
mov
bound
inc
add
pop
shlb
or
xor
jnp
mov
push
and
lock
push
push
mov
cmpsb
mov
hlt
outsl
aam
pushf
test
inc
jmp
cs
loop
jo
data16
fwait
das
push
decb
adc
call
out
inc
into
call
clc
add
clc
push
cmp
in
push
pop
rorb
mov
incl
inc
pop
pop
int3
add
xor
push
inc
push
sahf
sahf
pop
jno
pop
sbb
push
inc
loop
data16
mov
or
lea
push
into
sbb
add
cmp
pop
scas
push
inc
aam
es
cs
sub
jnp
outsl
hlt
int3
push
inc
mov
add
das
push
jecxz
hlt
adc
test
sbb
fdivrp
das
loopne
add
jb
adc
sbb
int3
mov
dec
test
addb
les
or
dec
outsl
push
push
fmull
lods
xor
pmullw
sahf
push
mov
lcall
icebp
cs
or
in
fistpll
loopne
hlt
scas
and
mov
and
into
std
lahf
lret
inc
and
clc
inc
cld
or
xor
das
xor
add
in
pop
jle
lds
loopne
jp
cld
enter
mov
push
or
pop
lea
push
xor
add
js
rclb
add
sbb
incl
cs
sub
add
jl,pn
xorb
fiadds
mov
incb
adc
inc
pop
rcll
adc
pop
imul
xchg
je
in
add
mov
jg
mov
adc
xchg
xchg
aad
mov
mov
push
ds
jbe
fistps
sub
mov
stos
icebp
or
inc
mov
sub
ljmp
push
xor
stos
ss
push
inc
ja
lock
pop
pop
jl
pushf
mov
clc
movsb
and
xor
jmp
ds
xor
je
shlb
or
outsl
cmpsl
adc
cmpsb
addb
push
mov
or
ljmp
cmp
add
ficomps
mov
mov
add
push
jp
incl
fs
lds
mov
roll
psubsw
cmp
fisttpll
adc
mov
add
jp
shll
shll
sub
mov
scas
insb
nop
into
dec
cld
aaa
loopne
ror
push
ret
cmp
xor
pop
in
fnstsw
dec
inc
ret
nop
mov
test
sbb
ret
jae
subl
ret
add
pop
or
addr16
add
xor
outsb
mov
sub
mov
mov
into
test
sbb
insl
sbbb
mov
mov
mov
sbb
into
push
pop
outsb
fcom
add
adc
int3
lds
add
push
mov
and
js
in
xchg
push
xchg
rcl
arpl
add
clc
push
sub
push
mov
mov
incl
jne
pop
imulb
nop
mov
popf
and
add
xor
pop
out
adc
popa
jge
paddd
push
add
add
fcomps
jl
pusha
std
or
pop
lock
inc
aas
movsb
lret
les
out
js
fucomi
cmp
int3
fisubrl
pop
test
jne
iret
adc
insl
ret
jp
mov
loope
cmc
test
mov
or
mov
add
push
inc
sbb
adc
push
jge
cmp
out
lea
fidivrs
ss
push
popf
push
or
and
or
pop
jb
cmp
jbe
xchg
mov
ret
sbb
push
inc
rol
in
dec
push
dec
jg
cmp
testb
enter
loopne
mov
add
scas
add
ret
mov
int
into
negb
ret
xchg
sbb
cmp
fildl
push
insb
jne
fisubrl
adcl
fwait
lock
mov
mov
lods
pop
lock
xchg
pop
mov
and
aam
loop
push
stos
call
inc
test
mov
sub
mov
sbb
mov
cmc
push
mov
adc
ret
adc
cmp
clts
ret
pop
cwtl
andl
stc
loope
cmp
call
andl
dec
push
cmp
incb
ret
inc
fmull
mov
jmp
negb
in
scas
push
js
push
add
and
fwait
add
xor
jne
inc
ffree
cmp
add
push
out
mov
out
cmpsb
icebp
mov
lods
mov
lcall
or
inc
ret
inc
adc
shl
mov
inc
test
ljmp
mov
mov
nop
fwait
test
push
cmp
test
mov
mov
push
inc
lock
mov
fcmovnb
mov
cmp
adc
pop
xor
imul
xchg
mov
aas
addl
cmc
call
inc
gs
rolb
out
push
mov
mov
inc
pop
mov
test
xchg
dec
in
adc
jl
xor
fdivs
adc
adc
sarb
sbb
loopne
popf
push
push
lret
xchg
cmpb
ret
int3
pop
xor
mov
xor
cmp
outsb
fcompl
cmpsb
xchg
add
jbe
mov
ficompl
sbb
scas
mov
int3
nop
mov
and
push
or
xchg
inc
cld
push
test
fildl
repnz
mov
add
mov
cld
sbb
mov
mov
es
shlb
cmc
subl
fcomps
sbb
sbb
push
xor
and
add
jmp
inc
pusha
ret
loopne
nop
adc
inc
xchg
mov
sub
dec
inc
mov
jae
cmc
sbb
xor
xor
jmp
stos
aad
cli
fimuls
push
out
les
ret
ljmp
mov
mov
dec
int3
nop
sbb
jne
test
cmp
in
aam
mov
xchg
clc
ljmp
aam
xor
in
push
xchg
and
cmpsb
or
cli
add
std
rcl
inc
pop
pop
test
add
push
call
loop
les
push
cmpsb
mov
push
fidivl
rolb
sbb
mov
jnp
jp
xchg
shrb
add
lea
fwait
jo
or
test
add
push
rorl
sbb
fwait
jo
jb
push
jmp
cli
out
movnti
push
push
or
mov
push
sub
jmp
adcb
test
insb
cmp
test
push
mov
pop
in
js
ja
stos
je
push
xchg
dec
mov
sbb
push
sub
adc
inc
mov
ss
call
jg
mov
adcb
pop
push
mov
fsubrs
cmp
out
adc
jg
fmul
call
addb
adc
push
clc
rorb
popf
dec
stc
add
inc
aad
fisubrl
mov
fimull
scas
loopne
and
adc
inc
push
dec
mov
fisubl
test
adc
dec
jae
in
out
aaa
xorb
jne
add
sbb
pop
cld
add
dec
call
add
pop
push
jg
inc
in
in
ret
push
jne
ja
stos
lea
dec
rcll
fucomi
pop
add
in
shl
push
lcall
cld
jns
movl
dec
add
or
jl
rcll
push
call
test
ss
call
pop
cmp
adcb
add
lret
pushf
add
xor
outsl
or
je
inc
adc
sbb
aam
jbe
out
push
xor
add
in
jo
xor
push
std
sbb
jae
jge
jbe
jne
data16
enter
adc
xor
js
cvtps2pd
bound
mov
sbb
inc
out
and
xchg
or
pop
decl
addb
jmp
dec
push
cld
lock
mov
mov
add
ficomps
pop
ljmp
outsl
add
arpl
ljmp
mov
icebp
roll
gs
pop
in
inc
jae
leave
sar
loope
mov
out
test
shr
fdivrs
mov
jbe
faddl
jmp
fistpl
aam
mov
sarl
aam
mov
pop
ljmp
or
push
mov
lods
inc
test
adc
xchg
jbe
jo
cmp
dec
incb
pop
xchg
call
movsb
movsb
jno,pt
pop
add
jbe
je
inc
inc
xor
push
inc
clc
mov
mov
call
pop
or
scas
arpl
loop
ss
test
mov
adc
mov
inc
in
cli
add
call
mov
movsb
clc
mov
aas
push
jo
jecxz
sub
dec
jne
mov
stos
pop
mov
fcomp
add
sbb
jmp
cmp
mov
lods
cmp
test
and
test
mov
adc
sahf
sar
test
subb
ret
scas
pop
out
or
mov
dec
test
push
leave
jge
inc
repz
jmp
roll
xor
sbb
fmull
out
push
ja
adc
shll
and
cmp
mov
adc
divb
push
int3
pop
jne
inc
xor
push
add
push
cmpsb
ffreep
lcall
outsl
clc
mov
pushf
inc
loopne
xchg
xor
and
push
ret
scas
pushw
loop
int
xor
push
or
ret
bnd
inc
sahf
fs
sbb
sub
fistps
fwait
hlt
mov
mov
int
jne
pop
pop
insb
dec
lock
cmp
mov
aam
mov
nop
int3
test
inc
insb
xchg
inc
mov
test
add
pop
jb
and
idiv
popf
xchg
push
movsb
mov
cmpl
xor
add
stc
jnp
rcl
loop
adc
pop
cwtl
ljmp
incl
xchg
shlb
aaa
mov
dec
mov
mov
xor
cmp
dec
dec
mov
call
and
add
jg
scas
push
orl
and
sbb
pop
rcll
adc
and
enter
pop
mov
loopne
adc
ja
xchg
cmpb
roll
add
push
popa
adc
pushf
shll
xor
or
lea
mov
and
pop
movsl
je
fsubp
cmp
cmp
mov
nop
pop
cli
xchg
mov
jp
push
dec
js
and
sub
cmp
or
jmp
jnp
jmp
shr
test
push
out
xor
jb
mov
xchg
clc
jne
pushf
push
adc
jecxz
jmp
ds
mov
inc
add
outsb
mov
call
add
mov
add
movl
pushf
jns
loope
fmuls
fsubrl
sbb
mov
mov
sbbb
pop
push
push
or
sbbb
jae
add
std
out
daa
rcl
testb
sbb
sub
mov
cmc
test
addb
aas
testb
adc
push
adc
sbb
mov
mov
movsb
push
mov
dec
mov
dec
es
movl
pop
fdivrs
jb
mov
mov
cmp
add
mov
ds
push
xor
adc
nop
mov
add
mov
enter
outsb
push
push
jae
xchg
mov
pop
sarl
jg
pushf
stc
shlb
in
cmp
pop
neg
push
sbb
pop
cmp
sbb
int
call
add
popf
jle
clc
xchg
fmul
xor
rol
popf
lock
in
call
insb
enter
enter
addl
in
jo
sbb
icebp
aam
loop
outsl
sar
jnp
adc
test
cmp
push
inc
adc
nop
rol
jne
cli
jp
sub
loopne
in
push
clc
daa
gs
into
jno
dec
test
test
inc
mov
mov
push
or
or
add
or
add
add
inc
popf
sbbl
decl
mov
jo
mov
ret
pop
call
xchg
mov
dec
and
enter
ds
mov
dec
sbb
mov
add
aaa
push
clc
inc
inc
and
sbb
cmp
or
push
cli
mov
in
pop
fdivp
mov
add
ret
or
fildl
scas
les
add
jp
push
aas
mov
mov
test
push
inc
pusha
out
pop
xor
unpckhps
and
in
inc
in
inc
rorb
sbb
inc
mov
pop
push
add
decb
shl
mov
push
bound
testb
inc
cmpsb
repnz
lock
pop
add
and
fwait
dec
dec
bound
fidivrs
std
lods
mov
ja
int
divb
mov
cmp
hlt
sar
jmp
fadd
cmp
pop
aas
adc
xor
ret
shlb
int3
mov
mov
dec
subb
push
sar
cld
int3
inc
jp
mov
popa
lea
ljmp
fnsave
je
jmp
data16
out
jecxz
lcall
sahf
mov
loop
cmp
sbb
push
pop
push
pop
jp
jmp
aas
push
mov
and
xchg
mov
adc
mov
xchg
stos
ficoml
shl
mov
ret
cmp
cltd
or
mov
lock
mov
in
cmp
xchg
ljmp
lea
xchg
int3
push
add
inc
xor
outsl
inc
ljmp
add
int
adc
jb
cmp
add
push
or
in
fadds
pop
cs
fcoml
cld
xorb
adc
add
dec
inc
xor
jg
add
xor
insb
add
lea
cmpsb
push
mov
sub
sub
shll
dec
inc
adcl
lea
iret
add
and
jge
add
xor
jne
divl
mov
xor
dec
mov
inc
insl
lock
add
mov
add
inc
push
loopne
pop
clc
pmaxub
dec
jp
faddl
clc
and
cld
mov
cmp
outsl
push
data16
adc
xor
loop
out
push
push
aad
xor
dec
shl
test
jg
jne
add
fwait
rclb
mov
test
outsb
mov
incb
dec
add
rclb
sarb
andb
and
cld
ret
leave
in
jl
dec
adc
fs
xchg
push
mov
js
adc
stos
es
xchg
jb
xor
push
fs
dec
pop
mov
test
pop
adc
jg
aaa
out
push
rcl
cld
or
push
inc
outsl
mov
jns
push
imul
pop
and
mov
inc
cmp
fcoml
outsl
and
andl
mov
idiv
pushf
push
add
cmpsb
add
push
std
incl
subb
mov
jp
jmp
mov
inc
add
shll
jge
jl
cmp
clc
loope
xor
xor
mov
and
rclb
leave
mov
pop
fisttpl
mov
mov
push
push
int3
cmp
test
pop
inc
add
cmp
xchg
push
int3
mov
pop
cmpxchg
call
cmp
mov
cmc
mov
movsb
and
dec
lock
aam
sub
sysenter
incl
xchg
mov
loopne
sbb
lea
mov
sub
lea
call
add
jge
pop
sub
xor
inc
add
out
outsl
fistpl
push
cld
jecxz
pop
or
inc
mov
jb
inc
ljmp
jge
fcomi
mov
push
jne,pn
jp
mov
lock
jmp
or
fcoml
loope
ds
rcr
or
cmp
out
sbb
pop
loop,pt
mov
sub
dec
ret
je
push
dec
inc
lea
adc
iret
mov
arpl
icebp
jg
lea
mov
add
out
add
sub
test
pop
aam
repnz
and
jg
adc
cmp
mov
aam
cmp
xor
sbb
out
mov
ret
mov
loopne
call
xchg
cld
das
fdivrs
inc
lock
cmp
mov
hlt
xor
sti
add
jo
mov
sbb
pushl
push
sub
push
js
loop
and
inc
add
pushf
mov
in
adc
dec
fcomps
insb
cld
cmp
pusha
nop
xchg
xchg
scas
mov
push
sbb
jmp
sar
mov
sbb
outsl
jne
cmp
pop
mov
mov
push
mov
mov
or
add
add
ret
or
lcall
js
hlt
inc
pop
pusha
push
pop
mov
inc
pop
mov
pop
lods
test
pop
jle
or
jns
popa
jle
es
fstpl
sub
xor
add
pop
push
adc
lret
jne
sbb
divb
pushf
adc
jae
bound
mov
push
jp
sbb
and
xor
nop
and
add
je
push
inc
call
mov
arpl
mov
add
push
loop
add
mov
sahf
call
or
inc
mov
mov
or
sbb
shlb
jne
bound
push
mov
cld
psubb
jbe
or
mov
jbe
in
adc
cs
dec
cmp
pop
pop
or
sub
lea
pusha
adc
ss
adc
cmp
xchg
push
loopne
jb
mov
xor
into
sahf
push
loopne
daa
cld
cli
nop/reserved
stc
sbb
and
push
mov
les
cmp
or
test
xor
push
xor
xchg
push
and
or
hlt
add
mov
loop
call
incl
jo
push
fidivs
or
cmp
adc
and
test
out
jbe
inc
and
js
sub
inc
test
pop
loopne
fisubrs
int3
scas
je
jp
dec
pop
sbb
add
ret
jmp
jmp
pop
adc
sbb
das
sub
cmp
call
push
xchg
mov
inc
add
lods
mov
rcl
int
mov
lret
aaa
je
jbe
cmp
outsb
lods
dec
add
add
cmp
loope
push
sbb
adc
test
xor
adc
iret
add
in
or
dec
js
or
clc
xchg
fidivrl
adc
lcall
push
pop
jl
or
fwait
sub
fwait
add
rorb
push
push
clc
mov
out
outsb
loopne
adc
push
push
dec
cmp
mov
rclb
cli
ja
pop
or
sbb
jg
shlb
in
adc
fnstenv
rclb
jp
imulb
add
or
and
cmp
add
adc
or
adc
adc
dec
clc
pop
sbb
jmp
shll
or
or
add
jl
je
push
xchg
cld
cwtl
add
add
adc
inc
or
add
int3
push
adc
fsubs
push
pusha
lock
je
pop
int3
push
sbb
data16
mov
cmp
adc
mov
pop
or
adc
push
adc
and
ljmp
mov
inc
fdiv
push
mov
mov
add
jbe
stos
push
cmp
roll
push
test
out
cmp
and
mov
inc
outsb
add
outsb
mov
lods
mov
and
inc
loopne
dec
ret
or
rolb
rclb
mov
fadds
pop
ljmp
call
repnz
jmp
xor
inc
push
out
add
mov
push
pop
loopne
rcrl
pop
fstpt
cld
push
and
add
push
or
inc
pop
jmp
jns
sbbl
pop
mov
xchg
push
lret
ds
pop
enter
jl
call
pop
mov
xor
inc
jb
rorb
cmp
xlat
loop
add
pop
mov
sarl
jp
pcmpgtd
or
call
pop
int3
cmpsb
addr16
cmc
push
orl
call
jmp
add
xor
push
sbbb
xchg
sub
fldcw
push
pop
and
or
loopne
xor
and
adc
test
sub
aaa
pop
dec
sbb
push
roll
mov
loop
pop
jbe
inc
lea
in
mov
mov
mov
rolb
sti
inc
outsl
dec
sbb
aam
add
movsb
sbbb
xor
adc
push
mov
outsb
and
sbb
inc
cmpl
shrb
mov
in
int3
or
je
adc
rcll
data16
and
je
jecxz
adc
sbbl
push
adc
fstpt
psubb
add
sbb
rclb
je
call
addl
sbb
adc
mov
jb
jmp
xchg
inc
lds
je
imul
push
dec
fisubrl
movsb
pop
shl
xor
push
adc
mov
insb
pop
sub
sbb
std
cmc
add
cmpsl
int3
aaa
push
pop
lods
add
test
mov
in
xchg
je
pop
insb
add
cli
and
filds
mov
or
mov
jmp
adc
jo
inc
lea
test
les
mov
leave
mov
mov
iret
sbb
das
xor
mov
pop
bnd
incl
push
mov
inc
lea
sbb
mov
dec
or
lock
int3
inc
out
lret
stos
fists
cmp
cmp
ficoms
or
lock
movsb
xor
je
push
insb
rcrl
pop
add
inc
push
mov
in
movsb
inc
dec
mov
scas
fdivs
dec
sbb
dec
jo
out
add
adc
add
nop
push
mov
test
shlb
andb
mov
pusha
xor
mov
and
rorb
sub
pushl
cmp
je
dec
mov
inc
mov
rorb
test
sahf
push
mov
movsb
xchg
aas
sub
push
fs
loopne
push
ja
adc
push
jne
fcomps
xlat
mov
xchg
outsb
scas
movsb
push
jmp
sbb
pusha
pop
cmc
push
adc
pop
add
add
adc
pop
or
pop
adc
add
and
scas
push
add
jmp
jge
pop
xor
test
in
add
sbb
jo
call
lock
fcomps
cmpsb
xor
in
inc
loopne
push
arpl
adc
xlat
add
mov
xor
stos
sub
ds
pop
hlt
add
push
jp
popf
les
nop
addb
ret
inc
cmp
lcall
mov
orb
jo
pop
aas
or
lcall
addb
daa
cmp
mov
clc
pop
mov
sub
push
mov
ss
jne
mov
and
adc
sbb
clc
cmp
push
rorb
ja
lods
sbb
hlt
mov
pop
popa
sbb
movsb
dec
outsb
into
sub
lret
add
aaa
in
lods
rolb
add
dec
fisttps
sub
mov
mov
test
mov
xchg
inc
pushf
push
loop
je
jo
mov
fs
xchg
and
adc
or
rolb
shlb
scas
push
cwtl
adc
outsb
push
inc
mov
or
xchg
pop
mov
orb
pop
cld
les
rcl
ret
pop
lock
mov
cli
add
orl
push
bound
add
add
sbb
data16
or
xor
insb
push
bound
push
int3
repz
xchg
xchg
add
jle
fcomp
xor
add
mov
xchg
inc
dec
cwtl
fs
int3
inc
adc
xor
roll
mov
clc
or
test
mov
mov
ja
outsl
mov
js
sbb
popa
cli
in
add
cmp
inc
sub
mov
fs
dec
jge
sub
xchg
and
pop
push
subl
adc
jbe
mov
sbb
xor
lods
push
loopne
or
push
adc
inc
test
aaa
mov
and
mov
push
movsl
adc
jns
sub
push
dec
testl
hlt
push
push
incl
inc
adcb
pop
ja
int
imul
cmp
test
mov
dec
jl
cli
cld
or
add
pushf
or
test
lock
adc
or
mov
call
add
and
jne
stc
inc
push
push
shlb
push
push
aaa
dec
insb
fsubp
cs
test
pop
add
push
rolb
mov
mov
push
dec
push
loopne
pop
cmp
movsl
jne
leave
ljmp
fsubrl
pusha
or
or
rorb
mov
inc
and
jp
enter
push
js
mov
sbb
fcoms
mov
inc
inc
xor
and
dec
mov
add
imul
cld
aaa
xor
or
push
mov
or
test
mov
mov
dec
jns
lcall
sti
es
cmp
aam
and
ljmp
movsb
xchg
sub
mov
pop
mov
add
push
jmp
sar
xorb
mov
or
divb
test
lds
lock
lcallw
push
std
push
sbb
add
cwtl
xorl
or
inc
stos
shrb
push
cs
inc
inc
adc
clc
pop
stc
je
cmpsb
cs
gs
shlb
movsb
pushf
pop
cs
ljmp
mov
xor
lods
sbb
jne
mov
add
outsb
decl
cmp
int3
nop
repz
testl
incb
std
insl
xchg
call
pop
mov
mov
stos
mov
adc
incl
and
push
jne
test
std
scas
xchg
mov
inc
and
inc
inc
mov
push
adc
inc
mov
aas
jl
dec
jne
push
lea
sub
mov
adc
or
pushl
cmpsb
sub
jo
sahf
jge
ficomps
jne
dec
xor
push
cmpsb
popf
sbb
aas
push
xor
lea
jne
xor
inc
rclb
inc
insb
adc
mov
mov
outsl
fmull
into
pop
adc
mov
outsb
push
sti
add
cmpsb
subb
cs
adc
lea
push
jmp
sbb
add
call
rclb
and
adc
inc
ret
mov
call
sar
cs
cmc
push
roll
add
out
push
push
cmp
ret
std
inc
dec
push
repnz
lock
insb
jb
pop
dec
mov
aas
pop
jl
ds
loope
pop
cs
test
fwait
movsb
outsl
js
in
cmp
cmp
sti
mov
outsb
je
jmp
jne
int3
push
hlt
int3
bound
mov
adc
add
push
cmp
sub
add
add
cmc
aad
add
xchg
add
sbb
mov
adc
insb
icebp
push
mov
mov
fimull
enter
and
ljmp
sarb
adc
or
call
add
push
loope
movsb
ret
pop
ljmp
cli
sbb
mov
and
mov
cld
ds
adc
test
adc
insl
aas
aam
pop
dec
rorb
addr16
push
xchg
mov
cld
std
lods
cmp
sar
mov
test
or
add
out
pusha
xchg
outsl
jmp
fimuls
push
push
xor
popf
xchg
xchg
cmp
add
and
jo
imul
or
test
xchg
mov
mov
cmp
add
es
loopne
lods
out
lds
sbb
orl
mov
je
sar
adc
xchg
mov
jl
mov
mov
cmp
cmp
jp
jmp
pmulhuw
push
cmpsb
lea
stos
or
add
addb
and
jo
sub
adc
inc
cmp
push
push
cmpsb
pop
inc
push
pusha
je
lahf
push
loopne
hlt
mov
pop
cmp
ss
push
jl
add
int3
cmp
mov
ret
inc
jne
or
xor
pop
hlt
rcrb
jno
sub
xor
adc
lods
xor
data16
fisubrl
jmp
pop
js
mov
dec
add
inc
dec
into
fsubs
ss
popa
push
lock
sbb
push
lods
mov
outsl
dec
push
cwtl
push
je
xor
push
inc
in
mov
shlb
or
sub
jle
inc
pop
sti
cmp
fidivrl
es
imul
in
push
loopne
push
pushl
in
xor
push
push
lods
cwtl
jmp
xchg
fs
mov
insl
mov
cmp
mov
scas
scas
inc
les
xchg
and
in
mov
je
mov
outsb
into
in
adc
pop
push
push
ror
sbb
mov
add
in
cmpl
fucomi
cmp
dec
push
dec
cmp
clc
or
inc
or
sar
inc
dec
std
das
jle
push
xor
loop
int3
repz
push
pushf
adcl
imul
mov
lods
mov
out
and
or
and
das
add
call
sub
push
cmpsb
cmp
rcl
xchg
mov
mov
mov
xor
rdmsr
addr16
ret
pop
decb
test
push
enter
mov
add
push
out
adc
mov
orb
or
jnp
adcb
aaa
push
adc
lds
sbb
call
jmp
loop
mov
lret
push
mov
mov
lea
pusha
inc
inc
mov
inc
xchg
push
mov
xor
cmp
add
push
sub
jbe
inc
push
push
shrl
andl
and
dec
adc
mov
sbb
mov
test
test
adc
or
aam
jmp
add
int
inc
pop
mov
push
xor
addr16
into
mov
xor
mov
xor
push
mov
je
and
sar
decl
dec
xchg
inc
incl
xor
ret
add
mov
testb
or
adc
mov
dec
stc
call
mov
ds
xor
jmp
rorb
test
into
adc
xor
je
sbbb
mov
sub
mov
add
xchg
stos
lcall
movd
add
pop
xor
sti
sbb
popa
add
pop
jg
es
fiaddl
mov
adcl
inc
push
sub
dec
pop
les
test
xchg
jecxz
and
and
and
decl
bound
add
mov
test
lods
in
or
gs
test
clc
push
shll
dec
sahf
rolb
call
add
sub
cmp
repz
jg
imul
shlb
jne
mov
rolb
and
call
jae
add
jg
icebp
adc
cwtl
pop
or
les
add
xor
cmp
negb
adc
orl
loopne
push
adc
dec
pop
cmp
or
lock
sub
hlt
pop
imul
mov
sbb
enter
push
sbb
jne
or
sbb
jmp
xor
cs
arpl
ret
arpl
pop
xor
call
addb
cli
scas
loop
loope
xor
push
xor
rclb
fstpl
fildll
rorl
hlt
in
icebp
fdiv
add
lret
call
mov
or
mov
lret
add
inc
and
and
sbb
push
mov
test
fwait
or
fs
mov
dec
insb
or
jne
push
cmpsb
inc
test
scas
add
cmp
js
push
xchg
mov
and
sub
fdivrs
mov
dec
adc
dec
call
push
cmp
in
inc
and
push
jg
and
daa
shrl
jae
divb
sysenter
jb
adc
xorl
add
dec
incl
push
mov
pop
fisubs
push
pop
xchg
xor
dec
or
mov
pop
mov
mov
add
int3
mov
push
call
pop
call
pop
sbbb
aam
fnstcw
call
fmulp
in
movq
in
cmp
push
rclb
int3
mov
test
not
sbb
scas
add
rorb
push
push
ds
daa
call
stos
or
leave
lret
mov
or
sub
js
mov
jl
dec
push
mov
xor
mov
cmp
pop
loopne
mov
cmpsl
or
or
mov
out
inc
data16
adc
mov
decl
mov
insl
test
sbb
jo
inc
push
popf
movsb
inc
xor
lcall
pop
into
jmp
nop
mov
test
sub
pop
pop
mov
xchg
fimuls
rolb
cli
push
pop
lcall
les
or
pushf
and
xlat
jge
xchg
dec
push
jmp
stos
mov
jne
incl
std
cwtl
test
dec
and
mov
sbb
nop
lret
in
fs
addb
cmp
adc
js
sarb
mov
add
add
punpcklbw
jo
sbb
xor
ret
dec
mov
push
inc
cmp
push
and
bt
ret
jnp
mov
push
add
lods
repz
or
lret
inc
sub
fwait
push
je
add
or
incb
push
jmp
and
arpl
jae
add
or
inc
ljmp
clc
add
fs
or
cld
add
push
or
out
int3
roll
test
push
leave
subb
fs
aaa
orl
mov
xor
inc
rcrl
jae
incl
std
mov
push
add
mov
xchg
add
push
cld
lds
mov
dec
dec
adc
sahf
mov
add
mov
pop
imul
fisttpll
push
inc
addl
inc
jo
adc
and
cmp
lock
mov
outsl
es
js
cld
adcl
add
test
stos
fisttps
pop
add
pop
xchg
sbb
rcr
sbb
adc
les
outsl
adcl
shr
mov
loope
inc
fs
lcall
xor
int3
ret
push
adc
in
scas
add
ss
gs
pop
push
loop
mov
adc
xchg
push
push
mov
add
aam
adc
push
inc
decb
pop
add
push
pushf
adc
mov
add
in
cli
aad
rorb
sub
sub
mov
je
scas
xchg
sbb
in
mov
add
xchg
mov
call
loopne
sub
sub
add
clc
xorl
push
in
ret
inc
clts
lds
push
jne
dec
insb
jge
adc
andb
ret
add
das
loopne
ja
fadds
mov
decl
xchg
inc
aad
call
xor
js
out
mov
ret
pop
pop
mov
mov
push
icebp
test
dec
xchg
aam
test
les
sbb
xor
add
xchg
decb
std
divl
cmp
push
or
push
xchg
jg
inc
std
lret
cli
jg
sbb
push
add
repz
fs
add
popf
pop
sti
dec
test
sbb
test
sbb
jo
ret
jae
sbbb
rcl
or
mov
add
jecxz
js
scas
cli
mov
jb
cmp
mov
mov
jnp
mov
adc
rol
cs
cli
hlt
cld
fildl
out
xor
mov
push
call
shl
test
push
int3
add
fcompl
jl
fmuls
leave
popf
loopne
clc
dec
cmp
ja
das
pushf
mov
add
add
ja
imul
or
mov
mov
test
rolb
pop
and
lock
outsl
mov
mov
fdivrs
int3
sbb
mov
sbbb
pop
add
add
adc
add
adc
jl
mov
jo
popw
ljmp
and
push
and
cwtl
adc
adc
xchg
sbb
fdivr
sub
lea
in
pop
daa
icebp
lahf
call
add
hlt
dec
inc
dec
adcl
dec
push
add
mov
xor
jle
stc
cs
mov
add
sbb
mov
clc
lock
outsl
insl
int3
ret
lock
or
add
popa
mov
call
scas
jp
shlb
xor
lds
mov
out
je
add
push
push
add
jmp
xchg
cli
add
scas
inc
add
or
imull
push
add
dec
clc
fdivs
rolb
cs
xchg
mov
adc
ret
shr
ljmp
mov
arpl
or
lcall
inc
and
xchg
inc
ret
push
or
nop
dec
and
insl
and
data16
mov
shlb
push
mov
jl
xlat
sub
add
shl
decl
sbb
mov
jne
scas
je
push
enter
ss
inc
fidivl
mov
mov
xchg
or
pop
mov
add
dec
xchg
xor
clc
push
movups
push
xchg
out
lods
test
iret
xorl
and
cld
xchg
push
pop
pusha
sub
adc
int
inc
jle
pop
int3
addl
lcall
lahf
mov
loope
sub
sti
std
adc
mov
mov
arpl
loope
insb
repz
cmp
ret
inc
mov
test
loop
movb
add
fidivl
mov
out
out
in
lahf
add
inc
and
xor
stos
mov
push
mov
or
jmp
std
out
inc
shlb
lods
push
xchg
and
aam
push
and
xchg
std
int3
mov
and
jl
test
call
cmpsb
roll
push
in
add
pop
fs
data16
cmp
outsl
or
jp
or
cmpb
mov
adc
inc
adc
mov
mov
inc
add
dec
loop
jmp
outsl
add
or
push
xor
push
cli
mov
adc
shlb
outsb
je
push
cmc
gs
inc
push
push
scas
aam
mov
nop
clc
pop
pop
mov
pop
dec
stos
xor
out
inc
repnz
repz
cld
lock
cmp
mov
pop
sub
enter
mov
dec
add
stos
jmp
lock
mov
cmp
dec
pop
dec
in
jo
ficoml
sub
scas
inc
sbb
les
rorb
mov
movsb
jg
out
int3
and
push
sbb
imul
cld
sub
into
shlb
pop
js
fs
arpl
scas
mov
cmc
push
add
ret
ret
enter
cmp
stos
mov
out
rorb
dec
xchg
test
sbb
push
cmp
push
inc
dec
sbb
data16
loopne
ss
push
dec
lock
or
xchg
and
push
sub
cld
call
lahf
adc
sbb
sbb
inc
pop
je
inc
andl
xor
loope
mov
test
push
scas
movsb
int
add
mov
aam
clc
sar
lock
bound
xchg
mov
inc
dec
outsb
mov
in
adc
add
jnp
test
popa
push
dec
call
incl
push
hlt
or
orl
jbe
sbb
adc
fs
loope
push
adc
out
enter
push
clc
pop
xor
or
or
push
clc
pop
rcr
cwtl
adc
push
adc
es
stos
cmp
rorb
enter
push
fdivs
push
js
scas
and
inc
mov
mov
xor
mov
xor
mov
rsm
xchg
les
nop
in
sbb
jle
cld
pop
push
sub
inc
pusha
xor
enter
xchg
pushf
fs
or
call
stos
cld
pop
mov
loopne
mov
adc
push
add
incl
pop
inc
loope
sahf
mov
or
hlt
incb
mov
loopne
ja
cmpsl
mov
and
jmp
add
add
inc
shrb
ds
insb
dec
sti
add
ror
sarl
add
jmp
aas
sub
add
add
mov
cmpl
movsb
cmp
jmp
jg
add
loopne
mov
jecxz
inc
addl
call
xor
or
jbe
ss
cld
mov
add
aam
adc
test
xor
mov
movsl
mov
packssdw
or
rcrb
add
dec
mov
fsubrl
cld
daa
clc
lret
cmpb
adc
inc
es
getsec
or
hlt
out
adc
sub
push
nop
popf
fadds
dec
jge
pop
cld
jmp
sar
sti
sub
fmuls
mov
push
repnz
pop
add
adc
das
fs
push
fisttpl
cmp
xor
pusha
xchg
pop
jge
pop
xor
loopne
adc
repnz
in
aaa
fwait
add
les
enter
sbb
test
test
push
and
out
xchg
movsl
push
mov
xchg
xor
xor
or
addl
lea
jmp
pop
pop
je
nop
bound
jmp
sbb
mov
inc
and
fwait
xchg
xor
in
aas
jmp
or
idivb
addr16
mov
ret
inc
imul
aam
decl
shlb
sbb
lret
mov
ret
pop
mov
push
cmc
aam
mov
aas
call
sarb
popf
push
adc
adc
clc
xor
ficoms
and
pop
les
fdivrp
jne
mov
movb
lret
fdivp
xlat
popa
push
adc
jbe
or
lds
jmp
cmpsb
cmp
outsl
call
mov
jo
push
inc
cli
repnz
mov
loopne
adc
adc
adc
ret
pop
out
test
test
cmp
ret
arpl
int3
push
aad
fdiv
daa
xchg
outsl
xor
sub
rolb
data16
in
les
push
push
int3
push
clc
orb
pop
movsb
cli
sub
pop
mov
loop
ljmp
rorb
push
test
mov
adcl
mov
jp
jl
or
mov
xchg
mov
mov
pop
inc
push
call
cwtl
push
add
ljmp
mov
lcall
hlt
xchg
jge
xchg
sbb
mov
in
ret
btc
and
sub
dec
dec
xor
lret
sbb
cld
call
in
mov
jge
pusha
in
adc
cmc
hlt
jg
rorl
mov
mov
xor
jmp
jmp
cmp
scas
xor
dec
shr
jo
ret
aas
lods
data16
dec
add
int3
add
or
push
aad
insb
test
mov
fmul
int
movsl
loopne
push
test
pop
pusha
mov
ret
outsl
xor
scas
in
scas
add
and
or
ret
imul
cmp
std
bound
mov
cmp
je
jmp
cmp
or
roll
jo
mov
es
aas
push
test
data16
fwait
mov
add
and
nop
ficompl
es
out
sub
xor
adc
pop
rcrb
scas
cmpb
or
cwtl
adc
push
mov
mov
inc
sti
push
pop
ljmp
sahf
push
je
mov
sub
mov
and
arpl
aaa
roll
jne
pushf
cmpxchg
outsb
movups
sub
push
and
adc
add
es
sbb
scas
rol
push
ret
mov
ret
pop
pop
cwtl
jne
loop
jmp
cmp
dec
push
add
adc
cltd
mov
outsl
in
cmp
std
call
movzwl
mov
xor
mov
mov
lock
adc
lahf
sub
ljmp
imul
jl
das
add
lock
inc
mov
xchg
inc
jp
pop
inc
or
test
xor
mov
test
add
jo
movsl
sbb
mov
in
mov
fiadds
shr
mov
cmp
or
mov
xor
or
mov
les
adc
loopne
or
fld
push
mov
nop
das
dec
scas
jo
xor
push
add
and
je
xchg
hlt
fbld
ds
push
lea
add
cld
aaa
cmpsb
and
push
xor
cmp
pop
test
aam
xor
jmp
bnd
push
arpl
jg
movsb
push
loopne
sbb
adc
dec
xor
and
inc
fcmovnbe
cmp
les
int3
mov
hlt
pushf
sub
pop
mov
nop
inc
mov
and
in
cwtl
add
rcrl
push
dec
cld
mov
fldl
jle
push
test
cs
mov
or
jne
jmp
cli
mov
cwtl
fadds
in
xor
add
cmpsl
or
mov
call
test
jmp
pop
mov
push
adc
lea
ljmp
xchg
inc
stos
mov
cmp
decb
and
mov
call
test
mov
mov
cmp
int3
add
mov
inc
jmp
loopne
movsl
test
mov
aaa
inc
add
and
decb
ror
push
mov
sti
cmpsl
cld
inc
xchg
loope
push
add
das
jno
ret
pop
hlt
xor
or
cmp
inc
leave
clc
dec
dec
sub
adcl
add
cs
inc
lcall
sbb
mov
or
or
lea
push
stc
push
jno
stos
hlt
or
shrb
cli
dec
or
inc
lret
add
push
fildll
mov
data16
jmp
sbb
push
and
sbb
sbb
scas
test
adc
daa
scas
push
or
mov
sbb
imul
lock
std
dec
xchg
fidivrs
fmuls
aad
xor
mov
add
push
xchg
jg
pop
inc
popf
or
ud0
xchg
sbb
add
mov
lcall
les
loop
jmp
inc
mov
dec
rcl
pop
add
faddl
lods
outsl
call
lock
ljmp
push
outsb
pop
mov
ret
pop
add
aas
ret
jo
mov
jl
add
aam
jne
or
call
test
cmp
pop
add
mov
pop
inc
xchg
sti
and
xchg
loopne
je
in
and
test
inc
adc
push
ret
cli
sti
test
cmp
lahf
std
test
inc
dec
mov
xor
cmc
lea
jbe
int3
bound
push
js
fistl
xchg
add
or
ja
jo
ljmp
jo
and
mov
in
push
jl
or
addr16
incl
rcrb
cmc
or
push
jge
add
es
ja
add
and
shrb
ss
mov
aam
cmp
les
add
jle
pop
faddl
sub
adc
inc
inc
push
xor
sahf
lcall
dec
repnz
cmp
mov
jne
mov
xor
cld
mov
push
fcmovnb
pop
pop
mov
add
pop
outsb
dec
in
dec
inc
push
cmpsb
inc
or
js
popf
ret
mov
xor
push
aam
mov
iret
ljmp
ds
or
adc
jl
add
dec
lret
inc
divb
fmull
push
and
xlat
lods
push
jle
dec
add
adc
or
push
lcall
and
dec
je
pop
ret
and
test
pop
mov
inc
pop
bound
or
gs
pop
in
add
loopne
mov
movsb
and
mov
clc
xor
lods
js
rolb
xor
gs
cmc
mov
xor
out
shlb
movsb
add
pop
jbe
or
jmp
out
mov
roll
pop
arpl
and
sbb
push
or
out
mov
adc
or
cmpps
sbb
jge
push
mov
loopne
push
dec
mov
cmp
mov
in
push
stos
or
data16
cmp
xchg
bound
ret
lods
dec
mov
rcrl
fiaddl
dec
out
popa
test
into
inc
cld
adc
rolb
adcl
cmp
add
push
out
sub
mov
test
popf
push
push
into
in
add
jo
cmp
outsl
outsl
pop
clc
inc
add
inc
sub
pop
cmp
sbb
push
xchg
push
loopne
les
popa
cmp
fsub
fidivrs
movsb
loopne
pop
aam
jle
mov
cwtl
add
add
in
and
nop
jge
adc
inc
int3
jno
lods
scas
in
or
push
add
xor
dec
shlb
pop
or
mov
and
lock
ljmp
inc
xor
ljmp
and
cmpsb
inc
in
add
pop
movsb
mov
cmp
or
mov
or
movl
call
shrb
inc
jecxz
enter
enter
sub
add
inc
and
lcall
and
cmp
inc
mov
fisubrl
or
push
stc
push
cwtl
testb
fldl
decl
out
add
xor
stos
cwtl
fistps
ret
push
stos
insb
fcomip
mov
xorl
je
or
mov
add
loopne
pop
push
lock
xor
popa
cmp
add
lcall
call
add
mov
shl
or
dec
jmp
cld
loopne
xorl
xchg
sbbb
mov
daa
xorl
or
pop
mov
jne
adc
jmp
lcall
jne
lea
ds
dec
lret
out
pop
in
jle
ss
sbb
and
out
cli
loope
push
adc
sbb
add
add
jno
sub
rol
pushl
loopne
fadds
enter
jmp
and
cmp
add
outsl
jb
bound
mov
push
pop
sub
dec
push
ret
adcb
add
inc
test
push
fadds
mov
push
push
shlb
pop
nop
rorl
insb
shlb
mov
cli
add
add
insb
cmp
or
in
add
push
pop
push
mov
add
pop
fidivrl
popa
lret
xlat
sub
les
sub
call
bound
shl
inc
jge
imul
inc
or
mov
inc
or
outsb
adc
add
std
add
push
or
je
les
mov
xorl
stos
bound
cs
ficomps
cmp
test
mov
nop
dec
incl
add
test
test
mov
xor
lcall
dec
aaa
lods
enter
dec
cwtl
gs
cmpsb
inc
insb
push
sub
pop
dec
notl
push
push
push
inc
inc
loop
mov
daa
adcl
cmc
and
jp
andb
nop
sarb
repnz
mov
sub
jne
aaa
loopne
loop
pusha
push
fimuls
jecxz
adc
adc
mov
push
xor
lcall
push
xchg
push
mov
arpl
lea
dec
es
mov
sbb
jne
and
in
shr
in
and
xor
std
and
into
jle
popf
add
cld
dec
add
mov
xor
cwtl
pop
cmp
fisubrs
cmp
push
inc
push
mov
dec
sarb
adc
add
dec
inc
test
add
xor
ja
call
in
sub
jne
test
jge
aad
sbb
add
aaa
mov
pop
out
mov
loopne
je
dec
clc
sub
fmuls
mov
int
inc
cmp
jmp
rcrb
fcmovnbe
incl
cwtl
push
ja
mov
xor
out
call
pop
les
cld
clc
pop
test
adc
add
hlt
dec
stos
mov
sub
std
push
pop
xor
push
lock
dec
mov
dec
add
mov
mov
lret
lock
push
add
aad
mov
loopne
test
jo
mov
lret
inc
push
sub
jge
sbb
adc
mov
clc
mov
push
sarb
jle
test
rorl
xor
in
cli
mov
clc
mov
add
sbb
sbb
cmp
test
add
pushf
call
test
call
push
femms
add
je
sbb
pop
fildl
push
std
and
incl
push
cld
add
jp
hlt
dec
add
xor
data16
and
ror
loope
mov
push
ja
jo
inc
pop
data16
cmp
mov
cmp
adc
jg
sub
test
add
and
adc
fldt
call
fidivs
xor
dec
pop
inc
ljmp
add
test
call
add
insb
hlt
outsl
decl
or
cwtl
hlt
xchg
inc
je
inc
divl
stc
fdivs
or
ja
aaa
or
dec
lea
notb
push
or
cmpsb
call
enter
pop
sub
jbe
adc
mov
pop
fbld
push
test
loopne
mov
push
in
icebp
lods
fcompl
aam
cs
pusha
mov
dec
adc
push
and
push
xor
fdivr
sbb
mov
pop
sar
adc
inc
loop
jmp
sub
lcall
cld
daa
icebp
add
nop
sbb
mov
push
jo
je
cwtl
push
cld
pop
jl
mov
add
cmc
xchg
and
fldenv
and
hlt
push
insb
mov
clc
incl
xor
ja
std
push
and
pusha
cwtl
cmp
cmp
xchg
mov
ss
fimull
ret
push
or
xor
jge
xchg
rorb
mov
add
adc
fdivrl
rorl
mov
pop
jmp
mov
push
cmp
mov
mov
sub
mov
aas
mov
aaa
add
push
adc
sub
pop
arpl
push
out
cli
mov
mov
int3
jne
pop
xlat
fnstcw
scas
fcmovnbe
cmp
xor
ret
std
inc
ds
addl
or
lret
fisubrs
int3
cli
jp
lock
push
enter
test
mov
dec
push
pushf
lock
cmc
adc
jne
test
ja
xor
push
jne
push
sar
rolb
inc
cld
out
sbb
push
inc
add
mov
mov
ljmp
and
xor
cmc
rclb
ret
xchg
cld
and
and
das
nop
inc
cmp
add
cmp
inc
mov
jnp
fsubs
hlt
ret
mov
jge
sbb
mov
xchg
shl
xor
cmpsb
xchg
mov
lea
and
orb
mov
or
enter
jo,pn
sbb
mov
push
push
xchg
in
call
movsl
mov
adc
mov
dec
mov
aaa
xor
adc
or
call
cltd
pop
jnp
sbbl
je
outsl
pop
xchg
jl
mov
inc
inc
inc
sbb
out
jl
std
sbb
ss
jne
enter
lcall
inc
pop
ror
push
adc
fimuls
push
mov
dec
sub
divb
mov
hlt
test
or
xchg
sarb
decb
add
xor
daa
rcr
test
pusha
and
lahf
add
xor
add
adc
cmpsb
push
inc
dec
pushf
mov
test
mov
incl
das
jmp
mov
aaa
stos
inc
pop
mov
mov
mov
int
mov
xor
mov
push
test
xor
push
js
call
mov
adc
add
or
sbb
iret
push
add
mov
push
lret
mov
loope
repnz
lret
test
outsl
jo
add
pop
ds
adc
stos
movsl
jo
mov
pop
aam
sbb
in
mov
sarl
push
ficoms
mov
repnz
or
inc
addb
jo
adc
mov
pop
lock
xor
mov
fistps
push
and
cld
xor
push
push
js
das
sub
cmp
ja
test
pop
pop
test
loopne
push
je
lock
clc
push
addb
mov
push
mov
inc
cs
inc
vmovsd
adc
push
sub
xorb
pop
mov
rol
mov
mov
mov
stos
sub
rol
jecxz
jge
sub
or
pop
icebp
push
fsubp
mov
in
mov
aaa
mov
icebp
add
jle
mov
mov
mov
loope
cmp
xchg
inc
and
pop
push
les
mov
xor
mov
or
out
and
rcr
add
mov
mov
pminub
incb
add
pop
rclb
push
mov
adc
add
call
cmp
add
fildl
ret
cmp
dec
mov
addr16
sbb
test
test
fimuls
adc
popf
xchg
nop
fcoms
push
pop
adc
leave
mov
test
xor
push
mov
ret
mov
dec
pop
jo
in
insb
insl
pusha
icebp
mov
rclb
dec
jo
in
xor
inc
aad
ret
xchg
enter
or
cmp
jae
cmp
data16
pop
or
ret
jg
lret
jge
test
pop
lock
or
add
test
fdivs
pop
stos
stos
arpl
or
test
cmc
es
jnp
mov
ds
sub
loope
mov
inc
push
xor
xchg
xchg
pop
enter
adc
lock
lcall
add
jne
jl
rol
shl
xchg
adc
push
dec
dec
adc
and
out
mov
sub
xor
jle
dec
mov
mov
pop
add
mov
push
insb
or
lock
xor
mov
lret
mov
sbb
add
icebp
mov
aas
push
std
push
sub
pop
push
mov
shlb
call
icebp
cmc
mov
sub
into
stc
pop
mov
add
insb
inc
inc
test
imul
dec
in
adc
sbb
xchg
mov
and
or
or
add
sarb
cmp
push
add
mov
cmp
jecxz
clc
je
jb
lods
pop
add
push
or
addl
add
fmuls
fbld
rclb
mov
ss
sbb
xchg
push
ljmp
aad
dec
andb
mov
mov
mov
andl
push
push
xor
fmull
xor
les
pop
push
dec
mov
or
pop
adc
inc
jmp
out
out
cmovl
cmp
lock
or
sbb
sbb
xchg
pop
testl
repnz
dec
jp
jge
xchg
sar
sbb
mov
push
add
insb
nop
test
inc
cmp
jo
dec
pop
fsubrl
or
jl
adc
jge
adc
je
add
cli
sub
insl
and
rcr
mov
adc
and
sbb
pop
insb
xor
sbb
sub
pop
fadds
repnz
mov
inc
call
mov
hlt
mov
stos
pop
inc
inc
fdivrl
popa
xor
cmc
mov
sbb
cld
mov
cli
clc
pop
mov
mov
jne
mov
add
shrl
addr16
lcall
cmp
or
sbb
inc
push
ror
lods
cwtl
test
mov
cmpb
jnp
or
xchg
cmp
fldl
or
loopne
mov
mov
ljmp
mov
movl
add
aam
rcr
cs
les
sbb
out
jl
in
sub
and
sub
cmp
push
add
adc
jb
mov
repnz
inc
je
cmp
test
xchg
sub
push
rcrl
es
call
daa
cli
lcall
adc
ret
repz
int3
les
bound
xor
insw
cltd
and
cmp
scas
push
add
jo
mov
inc
repnz
aaa
ret
insl
test
leave
aam
or
cs
jo
fists
dec
jne
adc
push
lea
hlt
or
xor
dec
jo
data16
ss
xorb
pushw
jbe
pop
dec
stos
mov
inc
and
mov
pop
hlt
push
inc
and
push
sub
pop
clc
inc
adc
add
imul
pop
push
mov
jg
add
adc
and
push
aas
mov
mov
jge
lret
mov
inc
out
push
pop
lcall
mov
or
adcl
leave
push
dec
push
push
mov
dec
clc
mov
mov
add
push
in
push
aad
fldcw
push
push
iret
jbe
rcr
je
je
add
ljmp
or
mov
inc
insb
jecxz
std
add
mov
mov
ds
push
inc
cs
adc
sbb
xchg
subl
fwait
lcall
cld
fldl
or
roll
push
push
adc
fildl
ds
push
sbb
push
idivb
fildll
mov
rclb
gs
or
popf
test
mov
clc
mov
stc
sub
pusha
pop
pop
xchg
scas
leave
push
dec
test
cmc
pop
cmpl
xor
ret
rolb
mov
rclb
xor
sahf
jne
lcall
mov
in
pop
in
xor
dec
xor
mov
adc
inc
ljmp
ja
outsb
scas
je
mov
pop
mov
mov
aas
xor
test
in
shlb
in
mov
sbb
pusha
stos
inc
ljmp
insl
add
insb
sub
add
aas
pop
lret
sti
loopne
into
in
push
push
push
adc
jne
jmp
enter
adc
xor
mov
add
rolb
movsl
mov
imul
lret
je
mov
sbb
adc
push
fs
mov
sbb
pusha
mov
or
fs
mov
dec
or
fld
test
xorl
std
sub
ljmp
mov
pop
call
jmp
add
push
cli
cs
lcall
add
stc
subl
adc
inc
bound
adc
fisubs
stos
sti
enter
je
cld
add
lock
xchg
idivb
adc
dec
mov
incl
aas
inc
dec
js
sbb
mov
data16
push
test
push
cmpsl
leave
xchg
cli
inc
adc
add
cmpl
push
push
mov
adc
je
sbb
nop
sahf
xchg
jbe
and
in
cld
mov
cld
ja
add
fsubrs
je
call
inc
add
mov
jbe
fdivs
add
xchg
sbb
pop
xchg
cmpsb
clc
mov
add
ret
mov
insb
int3
call
dec
popa
clc
or
mov
ficomps
fldt
mov
push
les
ljmp
xchg
stc
repz
nop
lds
push
jg
xchg
inc
push
xor
lea
imull
insl
loop
les
push
jmp
add
push
mov
jp
mov
push
mov
dec
aas
sbb
push
push
or
push
aas
add
pop
inc
movb
sbb
mov
xor
int3
sbb
fmull
xor
dec
mov
add
inc
and
dec
jge
jmp
loop
rol
test
fidivrl
jo
mov
add
jae
cld
push
add
ret
rcrl
into
mov
lock
aam
rolb
mov
or
rcll
nop
lods
jl
cmp
push
test
test
cmp
push
dec
mov
push
or
shrb
adc
test
pop
push
add
add
leave
push
mov
test
cs
pusha
mov
xchg
fildl
mov
insl
mov
push
dec
mov
push
or
add
je
mov
addb
insl
adc
add
fdivr
js
push
xchg
pusha
dec
aas
mov
and
jmp
popa
xchg
int3
add
push
pop
or
lret
pop
mov
xchg
scas
or
leave
sbb
iret
cld
or
inc
push
or
clc
or
test
rcrb
cmp
cld
mov
ljmp
mov
enter
int3
push
clc
sar
jl
inc
mov
mov
dec
xor
mov
jbe
fisubl
movsbl
icebp
xor
mov
sub
js
imul
inc
mov
inc
cmpsl
inc
adc
lds
sbb
and
scas
jo
sub
or
mov
push
xlat
orl
outsl
push
mov
imul
add
hlt
or
adc
mov
nop
push
mov
test
fdivl
xchg
enter
pop
inc
jo
cmp
test
adc
cld
mov
pop
xorl
jne
pop
jle
xor
cmpsb
mov
and
mov
push
push
cmp
in
mov
fs
xor
sub
fwait
pop
ret
push
push
mov
push
sub
xchg
pusha
lcall
jo
lret
ljmp
add
test
call
push
add
negb
mov
mov
pop
sarb
mov
push
mov
inc
sub
sbb
push
cmpsb
mov
loopne
or
adc
inc
inc
sbb
dec
mov
push
sub
outsb
add
push
add
repnz
ret
rorl
mov
fs
inc
sbb
ljmp
cld
fwait
sub
jge
nop
dec
loope,pt
xchg
call
and
nop
out
sbb
ret
jp
xchg
mov
jb
pop
sub
mov
dec
add
decl
mov
ficomps
adc
push
adc
call
inc
call
aas
decl
lret
add
mov
sbb
push
loopne
test
ss
inc
rcr
outsl
into
pushw
jne
icebp
lahf
stos
xchg
popf
jae
loop
sti
cmpsb
stos
cs
cs
xor
sar
add
push
mov
cwtl
mov
push
or
push
cwtl
dec
dec
pop
or
addr16
mov
in
cmp
out
scas
xchg
scas
sbb
pop
jge
test
xlat
test
dec
push
test
push
lods
sub
xor
and
mov
inc
stc
fsubrs
sbb
add
scas
or
xlat
pop
adc
mov
loop
loopne
aaa
add
incl
mov
shlb
jle
and
in
jbe
jp
push
jge
call
enter
adc
sti
nop
sub
mov
mov
add
pop
fs
sub
push
xor
mov
xchg
dec
int3
mov
push
js
lock
push
ret
nop
add
push
aad
testb
dec
js
mov
cmpsb
stos
rclb
inc
clc
push
push
loope
jbe
pop
adc
movsb
mov
push
push
xor
sbb
cmp
icebp
mov
test
add
inc
and
lret
add
pop
sbb
inc
stc
call
into
mov
push
add
push
add
rcr
ret
jns
mov
add
sub
and
ret
inc
test
dec
inc
mov
clc
sarb
push
jmp
mov
xlat
mov
pop
add
shlb
push
xchg
push
add
adc
mov
xor
js
xor
adc
add
add
test
sti
mov
add
sbb
fsubrs
inc
fcompl
lea
fwait
test
xor
stos
inc
in
dec
orb
jmp
jge
fwait
inc
fcoms
bswap
clc
push
popf
pushf
inc
and
adc
sbb
test
bound
ja
push
add
in
out
js
sub
enter
rcrb
push
cli
inc
or
and
mov
lods
pop
fsubs
cwtl
incl
jns
mov
int3
sbb
dec
movsl
jo
lock
add
andl
clc
sbb
xor
mov
int3
adc
pop
clc
decl
rcrb
leave
cmp
mov
add
stos
rorb
xor
push
test
cli
lea
clc
or
inc
pop
push
popa
mov
fcomps
stos
or
xchg
jmp
out
mov
push
data16
xchg
xor
je
ljmp
pop
xor
test
add
add
jmp
mov
mov
mov
sarb
out
bound
lock
adc
push
jmp
push
jne
mov
test
mov
push
inc
inc
loop
in
sub
cli
sub
arpl
mov
adc
mov
push
sub
mov
mov
xchg
inc
xor
mov
jge
nop
inc
pusha
sub
add
cmp
lods
ret
or
mov
cmp
movsb
popa
sbb
dec
ror
and
ret
aaa
adc
adc
pmaxub
adcb
jne
sarb
sub
adc
hlt
inc
pop
cmp
shlb
mov
sar
xchg
jb
jge
addb
add
or
pushf
xlat
jg
push
inc
bound
mov
les
mov
insb
pop
sbb
std
fildl
jl
push
mov
add
mov
test
push
mov
or
fbstp
xor
push
data16
gs
xchg
push
dec
or
adc
sbbb
sub
add
and
push
incb
and
orb
add
or
insb
ljmp
jp
jecxz
sub
xor
nop
fmuls
mov
add
mov
jnp
lods
sub
dec
adc
xor
or
add
jo
sar
mov
cmp
std
jg
test
and
add
enter
pop
sti
adc
or
in
rolb
test
inc
push
xchg
out
sbb
and
mov
sub
call
decb
dec
dec
or
adcl
dec
sub
movsb
mov
icebp
add
call
adcb
xor
cmp
add
fadd
inc
cmp
aam
outsl
lock
mov
xlat
mov
mov
sbb
bound
scas
aad
xor
sub
push
sub
sbb
push
loopne
orb
push
mov
incl
arpl
push
pushl
jb
fcomps
jl
fidivl
sarl
faddl
loope
int
add
and
sbb
sbb
mov
inc
jb
push
lods
and
out
or
notb
call
jmp
cwtl
movsb
jb
inc
jl
lcall
int3
adc
cmp
icebp
inc
dec
mov
mov
jl
pushf
push
bts
das
and
hlt
shl
or
pop
ret
popa
call
dec
pop
xor
cs
mov
add
push
jl
insb
shlb
push
dec
mov
shll
push
mov
clc
int
dec
sar
xchg
push
ljmp
sbb
rolb
and
pop
or
push
fcmovnb
rorb
inc
jecxz
inc
outsl
aam
jp
or
lock
jmp
jne
addl
call
out
cmp
sbb
jmp
mov
pop
pop
mov
gs
js
sti
cmpsb
hlt
fcmovnbe
test
ss
out
sub
decb
fisubl
outsb
fmuls
addr16
scas
xchg
or
xor
arpl
movsl
icebp
sub
testl
inc
ret
xor
jg
add
mov
inc
rcll
pop
mov
jb
cli
sub
mov
mov
inc
jecxz
adc
mov
cmpsb
pop
adc
test
mov
cmp
scas
xchg
add
push
sub
push
push
jmp
pushf
push
jp
push
inc
push
std
ret
andl
movsb
jmp
js
adc
testl
inc
fisttps
push
sub
adc
dec
sti
xchg
adc
mov
sbb
jg
int3
lds
mov
rorb
rcll
mov
sbbl
xchg
jo
mov
stc
push
adc
xchg
or
xchg
js
add
andl
inc
adc
into
cli
push
push
jbe
dec
arpl
or
push
and
jb
loopne
add
add
clc
adc
pop
jb
cmp
xchg
pop
data16
inc
jg
and
mov
push
push
stos
push
inc
and
outsl
push
mov
pop
insb
push
lods
or
mov
lret
push
lds
and
xorl
rcll
sti
dec
or
mov
xor
or
jo
dec
mov
inc
or
pop
insl
cmp
cmovge
dec
repz
incl
or
sarb
rcll
sub
ficompl
loop
insb
or
mov
mov
mov
leave
cmp
pop
jb
rolb
push
aam
movb
pop
mov
ret
jae
ret
cli
lds
push
jle
aam
add
mov
add
cmp
out
mov
push
jmp
mov
sub
push
mov
mov
test
testb
hlt
mov
sahf
clc
stos
maskmovq
idivl
cs
je
shlb
shlb
clc
mov
cwtl
rcrb
shlb
inc
pushl
inc
rcrb
dec
push
cmpsb
inc
pop
xor
pusha
ss
mov
ret
or
cmp
sbb
push
fmuls
fs
and
mov
cmp
adc
movsb
es
scas
orb
add
push
pop
push
fwait
movb
insb
push
ror
ret
enter
in
shrb
push
test
adc
cmp
test
xchg
push
repz
mov
test
add
test
sub
jl
jge
push
stos
or
enter
loopne
or
mov
mov
cs
call
sar
add
enter
mov
cmp
or
inc
lods
push
jmp
xchg
push
rolb
dec
sub
push
test
add
inc
out
xor
pusha
imulb
mov
cmp
fdivr
outsl
cmp
mov
outsb
add
sub
cmp
mov
sar
push
popa
pop
add
shlb
or
xchg
add
jno
or
sbb
adc
jmp
loop
push
sub
xchg
enter
cmp
fildl
cli
xor
ficomps
inc
mov
pusha
sub
sub
mov
jp
push
push
push
loopne
int
jno
add
or
jg
fisttpl
cmc
jne
decb
lds
push
xor
and
cmc
xor
data16
fcoms
mov
int3
into
cli
and
lret
push
pop
mov
shll
lods
push
rolb
sub
dec
pusha
pop
or
out
and
and
mov
out
lcall
jb
jb
test
jmp
mov
push
aad
jmp
fiadds
add
add
outsb
aas
fisttpl
jp
rorb
orl
xor
push
pop
xor
ds
jmp
push
inc
jle
in
mov
mov
outsl
fs
or
sbb
ret
test
add
pop
push
adc
fwait
inc
outsb
inc
xchg
popa
rorb
mov
push
out
nop
lcall
call
mov
adc
fmuls
sub
jecxz
xor
into
cwtl
int3
sbb
loope
cmp
pop
sub
cld
repz
push
lea
mov
mov
dec
fwait
add
pop
aam
inc
add
lock
xor
push
mov
data16
cmc
xchg
test
insb
push
decb
pop
sub
or
inc
inc
mov
jge
gs
nop
mov
jl
push
ds
cmp
sub
ja
xor
enter
xchg
in
hlt
mov
addb
mov
inc
xor
jbe
cld
mov
pop
pop
outsb
or
xor
cld
push
mov
add
int
adc
xchg
dec
jl
mov
pop
in
ret
test
enter
mov
add
pop
mov
xchg
mov
fs
sub
loop
test
cld
and
or
rorb
or
push
scas
fmuls
adc
sub
mov
mov
push
fidivrs
cmp
cmp
xchg
push
lock
fmull
or
push
xor
in
add
cmp
sub
comiss
push
and
and
rorb
dec
sbb
sub
or
int
cmp
icebp
pop
dec
data16
clc
test
or
decb
push
in
clc
cmp
mov
fstl
add
adc
inc
mov
push
and
inc
mov
xor
mov
mov
or
add
cli
es
ffreep
mov
lock
cmp
in
into
insb
xor
rolb
pop
sub
cmp
ss
push
mov
xchg
push
je
xchg
adc
adc
sti
inc
adc
add
and
push
push
sub
test
movsb
je
mov
mov
sarl
push
pop
mov
jle
je
repz
cli
mov
pop
pop
mov
lock
push
mov
sub
cmp
lock
xor
jo
das
clc
stos
outsb
mov
je
or
dec
test
fcoms
mov
scas
inc
aaa
mov
and
loop
rorb
mov
sarb
cmp
in
inc
test
loopne
xor
imul
outsb
test
add
push
cmp
cmp
nop
int3
js
call
loope
in
mov
inc
mov
rorb
and
push
or
test
call
orb
mov
int3
rorb
add
std
mov
jmp
add
movsb
push
dec
xchg
nop
sub
lea
jp
lea
sub
sbb
test
add
test
das
js
nop
pop
cmp
mov
mov
out
xor
or
pop
ret
in
add
fs
into
int3
add
notb
aaa
punpckhwd
xchg
adc
jg
pop
lret
call
cmc
gs
fiadds
inc
loop
pop
ss
cmp
or
fs
int3
jmp
cmp
and
movsb
aad
push
mov
add
out
es
mov
cmp
hlt
movsl
jno
loope
les
cli
dec
or
je
adc
jo
mov
jmp
pop
xor
mov
adc
inc
fdivs
fs
roll
pop
testb
bound
sbb
jo
push
and
push
pop
pop
and
mov
out
popa
xor
adc
cmpsb
dec
repz
jmp
sub
pop
rorl
mov
mov
adc
data16
inc
xor
xchg
mov
xchg
and
shrl
test
clc
mov
inc
or
in
add
mov
out
dec
cmc
mov
or
sub
add
pop
sub
and
addb
dec
sub
mov
push
enter
sbb
shr
into
cmpl
add
cmp
jp
jecxz
ljmp
mov
lea
xor
dec
cmp
hlt
mov
push
std
pushf
mov
pop
fadds
imul
dec
out
push
loope
stos
cwtl
shll
fmull
sbb
adc
cld
out
popa
sub
fsubrl
je
xor
inc
mov
movsb
inc
jg
inc
fnstenv
into
cmp
cmp
xor
mov
or
pextrw
add
sbbb
int3
inc
or
stos
adc
mov
xor
icebp
cli
idiv
mov
std
in
imul
sub
insl
cmp
add
mov
add
fcmovnu
vpshufhw
outsb
add
jmp
add
fisubrs
mov
pop
mov
mov
mov
adc
dec
das
mov
hlt
add
int
add
xchg
mov
push
lods
shrl
push
test
loope
enter
mov
adc
fdivr
call
push
call
adc
cmp
pop
push
pop
sub
and
and
sub
aam
in
sbb
jle
lods
test
fists
popf
fwait
enter
ljmp
adc
in
add
push
test
jb
loop
cmp
pminsw
pop
cmp
fcomps
jmp
mov
mov
jo
data16
test
dec
imul
in
sub
jg
inc
inc
inc
cld
add
jns
sub
das
or
add
ja
adc
pop
jmp
in
es
xchg
fimull
xchg
and
clc
and
out
push
movsl
sbb
test
outsl
shlb
ja
aam
mov
test
mov
das
stos
fwait
push
adc
cmp
je
add
cmp
sti
ss
in
fidivl
test
mov
cmpb
jb
fsub
xchg
dec
sub
ljmp
gs
jge
mov
push
ret
call
in
push
stos
lock
imul
incl
add
ds
sbb
ds
cld
decl
push
push
popl
insb
je
sarb
fdivr
adc
push
std
cmp
push
shrb
inc
cmp
adc
pop
icebp
out
cmp
push
nop
xor
outsl
mov
or
xchg
aam
outsb
idiv
fstpt
test
push
inc
cmpsb
add
gs
scas
cltd
xor
push
fcmove
xchg
push
loope
test
xor
lock
fidivs
cmp
add
inc
test
fs
or
inc
push
fcompl
fsts
xor
push
and
inc
decl
adc
cli
adc
add
jecxz
js
pop
in
jp
pop
jecxz
fdivrl
xchg
call
outsb
test
push
aam
shlb
push
push
bound
or
and
mov
add
jmp
mov
inc
xor
xor
or
adcb
and
xchg
in
out
stos
mov
out
hlt
lret
inc
sarb
jl
jp
add
ret
fs
push
in
jmp
push
adc
adc
jle
push
stc
xor
sbb
shlb
xchg
add
or
nop
or
lea
test
call
jge
and
loope
outsl
add
jl,pt
mov
dec
cwtl
insb
xchg
fimull
adc
jecxz
mov
jmp
fs
popa
add
mov
and
clc
stos
jne
jae
data16
mov
jp
gs
cmp
lcall
jecxz
adc
inc
nop
std
mov
cmp
push
call
dec
cmp
push
movups
dec
mov
mov
add
movsl
cmc
or
push
or
xor
xor
pop
add
adc
cwtl
dec
push
and
push
aam
adc
jb
lds
lcall
sbb
mov
mov
and
cmp
jo
pop
dec
and
imull
and
aam
xorl
push
push
clc
jmp
jne
jb
cmpsb
sahf
mov
add
mov
push
xchg
cmp
push
jb
cmp
mov
ret
outsb
fs
mov
dec
or
adc
sub
sbb
ja
loopne
pop
cmp
test
stos
add
pop
push
shrl
adc
and
jmp
shlb
mov
mov
inc
inc
mov
js
and
inc
repnz
push
aaa
mov
jnp
push
pushf
in
mov
sbb
sub
and
clc
add
xor
sbb
sbb
add
mov
popa
and
lfs
lods
lds
in
je
iret
orl
cld
xchg
xlat
ljmp
mov
sbb
fildll
or
push
pop
mov
add
add
mov
inc
push
dec
repz
jmp
int3
mov
mov
test
mov
pop
and
add
popa
shlb
xchg
mov
es
lock
cld
pop
push
push
cmpsb
clc
add
cmpxchg
pop
inc
or
pop
js
jne
push
addl
jns
inc
aas
dec
int3
lea
mov
cmp
and
xor
inc
adc
add
pusha
inc
mov
add
je
mov
clc
call
loopne
jg
adc
inc
add
adc
push
dec
lret
imul
dec
xor
mov
push
adc
sub
adc
mov
lret
or
test
fs
jmp
mov
adc
mov
xor
cmp
mov
push
jo
cmpl
sub
cwtl
adc
lock
fsubr
cwtl
xor
in
out
sub
fildl
lea
jne
xor
jo
adcb
cli
adc
push
dec
call
xchg
stos
inc
das
sbb
or
idiv
jbe
mov
mov
sbb
jl
js
dec
mov
add
pop
mov
pop
lock
out
push
add
roll
in
jb
xchg
push
inc
xor
inc
fcoms
clc
dec
cs
rcrb
or
mov
cmp
clc
push
loop
sbb
cmp
xor
mov
xor
movb
dec
adc
mov
xor
xchg
aas
outsb
sarb
testl
and
push
pop
xchg
pop
icebp
mov
fists
dec
sbb
push
subl
gs
fs
int3
or
jb
fwait
subb
hlt
push
dec
mov
rolb
jg
outsb
cmp
jge
fisubrs
testl
inc
loop
aaa
or
pop
jmp
mov
pop
mov
sar
and
sbb
or
aaa
pushl
push
popf
push
jmp
dec
push
lea
inc
rclb
inc
and
into
push
pop
loop
push
cmp
scas
xor
insb
mov
push
sbb
push
push
call
add
push
out
pop
mov
ret
jne
inc
loope
cmp
adcl
xor
pop
in
aaa
out
sub
add
mov
and
aas
in
jle
sbb
stc
mov
and
pop
or
jg
imul
mov
pop
frstor
test
mov
push
mov
jl
filds
mov
push
cmp
out
das
cmc
dec
lret
push
mov
bound
int
lock
lret
mov
mov
sbb
test
arpl
outsb
pusha
and
push
xchg
std
incb
mov
stc
lcall
cmpsb
xor
lcall
mov
mov
test
jge
mov
cmpl
shll
xor
or
add
test
addl
sbb
out
lcall
data16
jmp
adc
faddl
dec
movl
aas
xchg
pop
mov
cld
mov
xor
lods
fimuls
mov
pop
push
sub
pop
out
sar
test
or
rorb
xchg
or
pop
xor
sbb
in
ret
sbb
adc
inc
pushl
mov
nop
xor
adc
jb
cmp
fmuls
cmpsb
push
push
inc
mov
arpl
cmp
loopne
pop
inc
add
inc
ret
push
xchg
sbb
rcl
dec
xor
push
mov
wbinvd
or
xor
int3
loope
push
sbbb
lods
push
jo
jae
mov
stos
test
ret
push
inc
pushf
mov
adc
mov
pop
mov
or
xor
into
std
les
fmull
or
scas
in
and
mov
divb
pop
mov
sbb
adc
movsb
shll
loopne
rorb
ret
fs
repnz
imul
lock
nop
add
add
jl
add
daa
add
les
xor
lea
or
add
jae
fnstenv
dec
out
addl
dec
push
cmp
xchg
std
jmp
rcr
xlat
fdivrp
xchg
sbb
pop
bound
mov
sub
fst
mov
ljmp
cmp
mov
data16
out
pop
js
adc
and
cmp
std
popf
fs
inc
mov
pop
mov
or
rclb
mov
xor
adc
mov
insb
shlb
loop
mov
jp
pop
mov
or
gs
xor
pusha
push
add
push
inc
push
xchg
xchg
add
aas
cltd
and
mov
mov
and
jb
xchg
inc
loope
decl
jne
jne
adc
sub
pop
cmp
js
in
mov
call
mov
loope
popa
shr
xchg
mov
rcr
lcall
decl
push
shlb
push
sti
je
fdivrs
fisubrl
jle
cmp
inc
call
nop
or
mov
movb
je
and
in
ss
push
lea
mov
mov
data16
sbb
ds
mov
jg
lcall
icebp
inc
test
dec
data16
add
add
mov
nop
icebp
mov
ficoms
sub
mov
mov
fcmovb
push
data16
mov
mov
lds
pop
sub
mov
ds
iret
push
xchg
push
fbstp
sbb
jmp
and
stos
sti
lods
lods
pop
repnz
iret
aas
push
lods
jo
stc
notb
imul
lods
mov
je
sub
ja
clc
jb
faddl
js
mov
stos
test
push
stos
call
repz
jmp
sbb
or
cmp
lcall
mov
jb
test
or
ja
mov
push
addl
mov
fs
push
mov
shlb
nop
sbb
dec
js,pn
rcll
enter
sbb
xchg
inc
call
mov
add
aam
push
les
add
jo
and
push
add
pop
je
dec
int3
sub
xchg
push
ss
mov
pop
gs
lcall
mov
adc
pop
pop
add
pop
loopne
rclb
dec
lret
popa
jnp
das
inc
cmp
stos
ret
cmc
pop
mov
xor
cmp
lcall
dec
insl
mov
and
jo
enter
jb
shll
lock
add
sbb
mov
pop
or
dec
rolb
mov
inc
mov
movb
mov
jecxz
sub
add
imul
dec
lods
test
popf
clc
inc
jne
pop
add
inc
adc
cli
push
pushf
pop
sub
lock
pop
inc
push
rcr
movsl
or
xor
cmpsb
ret
filds
adc
xor
fmul
insb
jmp
push
push
cmc
push
xor
or
sbb
cmpsl
and
test
nop
inc
int3
inc
add
add
cmpsb
cld
and
aam
xchg
inc
ss
xor
jbe
incl
call
rorb
call
sbb
cmpsb
lods
pop
gs
mov
pusha
mov
or
sub
mov
jmp
mov
push
adcl
movsl
es
inc
out
adc
lods
mov
inc
test
inc
gs
sub
and
outsl
jb
test
repnz
cld
inc
push
mov
sub
lock
int
outsl
ret
sbb
hlt
mov
inc
pop
pop
mov
cmp
clc
addb
ret
push
xchg
pop
pushf
pusha
lcall
jle
mov
cmp
mov
push
jae
adc
mov
mov
out
bound
arpl
push
push
or
loop
je
mov
push
subl
push
mov
add
fidivs
pop
jne
inc
cmp
cli
int3
jmp
inc
mov
movsb
lea
push
outsb
push
jae
or
imul
out
mov
or
inc
adc
mov
jmp
sbb
sbb
jb
mov
adc
jbe
mov
mov
xor
dec
bound
lea
repz
dec
add
xchg
loop
rorl
call
clc
xor
outsb
mov
inc
and
xchg
cmpl
ret
sub
and
push
pusha
iret
add
cmp
or
lcall
add
mov
clc
cld
jns
cmpsl
iret
push
adc
push
es
je
cld
pop
sbb
jbe
shlb
mov
in
inc
mov
add
cmpsb
sarb
mov
pop
mov
call
es
jmp
stos
jne
dec
add
cli
dec
std
insb
stc
mov
std
stos
push
add
ljmp
rclb
movsb
rolb
jne
xor
adc
push
cmp
imul
add
loop
xchg
xor
mov
jno
ret
jb
aam
lcall
lcall
scas
cs
rorl
rolb
jne
jle
push
push
clc
jmp
push
lock
cmc
jle
pop
sbb
push
inc
inc
push
inc
int3
add
stos
xchg
add
inc
mov
add
fwait
cmp
adc
jb
loopne
mov
aam
mov
and
test
push
ds
fs
int3
imul
sar
pop
jnp
cmp
movsl
jmp
jge
mov
mov
cmp
les
out
insb
fmuls
outsl
clc
cmpsb
movsb
jae
fsubs
sbb
inc
insb
pop
pop
cmp
cli
jo
push
xchg
mov
pop
lcall
mov
dec
mov
add
push
into
in
adc
inc
mov
lcall
rol
icebp
cmp
pop
pop
dec
fcmovnb
add
pop
pop
addl
add
lret
rorb
sbb
out
add
sub
loop
lea
adc
ljmp
je
xor
mov
into
cld
adc
roll
lods
mov
pop
les
adc
xor
inc
mov
or
jge
cltd
push
je
or
lods
pop
ret
pusha
aaa
or
icebp
test
mov
loopne
mov
mov
pop
and
or
add
lea
cmp
subl
or
or
cmp
add
cmpsl
in
aas
adc
leave
push
inc
ja
xchg
repz
inc
dec
es
stos
mov
push
test
and
jbe
movl
adc
jbe
rclb
mov
sub
cwtl
js
test
sub
lea
sub
jle
or
loope
ficoms
mov
jns
ret
loopne
push
imul
cli
jo
lcall
cmp
sub
mov
std
pop
add
adc
jle
push
xchg
xor
pop
aas
insb
add
ja
cli
cmove
fs
aas
ljmp
test
mov
xchg
add
dec
adc
das
adc
outsb
pushf
pop
lds
xchg
lea
ljmp
insb
mov
rcr
mov
sub
adc
call
les
test
nop
outsb
sub
out
sbb
xor
sbb
mov
dec
ljmp
sarb
lock
or
sarb
cli
fs
push
cs
aaa
std
dec
mov
stos
mov
mov
mov
inc
inc
nop
sbb
psrlw
fidivs
add
cmp
subb
push
add
pushl
loope
pop
inc
mov
pop
jo
mov
adc
imul
in
cmp
loop
add
push
sbb
call
leave
pop
clc
cmpsl
sbb
jmp
add
add
out
sub
pop
adc
rcr
icebp
push
add
popf
dec
mov
mov
jmp
mov
insb
in
adc
push
mov
mov
add
lock
int3
sti
mov
and
or
movsl
pop
jmp
sub
inc
sub
and
cwtl
gs
mov
insb
mov
outsb
call
cmp
xchg
cld
lea
sar
in
testb
outsl
push
dec
push
call
mov
jg
sub
aam
add
add
sub
adc
push
fs
jg
mov
or
fdiv
add
mov
lahf
aam
push
push
adcb
jg
sbb
ret
sar
test
jnp
lock
je
mov
mov
leave
mov
mov
int3
sti
aam
add
jo
test
stc
or
mov
je
ljmp
mov
dec
lret
fmull
orb
adc
mov
cli
cmp
mov
dec
in
push
ljmp
aam
jne
popa
in
mov
bound
lcall
or
pop
lods
push
pop
push
sub
cmp
test
sbb
roll
fdivl
pop
or
lcall
inc
sbb
incb
jl
mov
cmp
ljmp
adcb
push
je
clc
clc
and
jb
add
mov
aam
dec
sub
in
pop
adc
ss
inc
shl
lcall
enter
mov
push
fmuls
movsb
in
jbe
adc
push
add
pop
pop
shlb
or
ja
add
test
scas
mov
jmp
mov
in
lret
inc
inc
pop
loope
sarl
ret
cmp
mov
lock
push
sbb
shlb
xor
inc
fs
pop
mov
and
lea
pop
fsubrs
cmpsl
pusha
lds
dec
cmp
xchg
rorb
mov
push
lods
mov
push
push
ret
ret
rcrb
add
shlb
adc
and
loop
and
aaa
loop
push
mov
push
add
jg
xor
pushl
push
inc
out
inc
add
pushl
mov
push
sub
test
cmp
push
inc
popf
pop
test
out
mov
inc
pop
addb
push
rorb
movsl
negb
push
mov
jg
aad
pop
or
fs
inc
sub
sbb
add
data16
mov
push
jbe
incl
mov
pop
cmp
or
inc
ss
pop
loopne
out
sub
mov
dec
ds
incl
push
inc
add
add
loope
adc
loope
inc
ret
pop
dec
or
inc
outsb
ret
mov
mov
adc
int3
inc
aad
push
test
bound
xor
adc
or
pop
mov
hlt
andl
inc
daa
ds
jge
ljmp
dec
pop
gs
push
gs
sahf
inc
jo
or
jnp
loopne
call
xor
push
ret
push
xor
pushl
sahf
call
lea
addb
icebp
or
rcr
jo
fimuls
fnstcw
out
inc
je
outsl
or
adcl
pop
lock
push
or
mov
enter
pop
inc
and
dec
fildll
test
mov
add
pop
adc
add
mov
js
xor
addb
icebp
mov
adc
das
and
mov
test
xchg
mov
stos
movlps
cmc
ret
stos
sti
add
mov
push
pop
mov
jmp
inc
cmp
or
inc
aam
sbb
test
xor
pop
add
ret
hlt
jne
test
or
mov
pusha
int3
stos
dec
add
pusha
or
mov
adc
cmp
add
xor
add
pop
aaa
call
shlb
push
pop
xor
xchg
push
fistpl
loopne
mov
in
mov
out
push
add
push
call
cmp
je
jb
pushf
out
push
sbbb
inc
mov
push
pop
xor
jge
push
nop
lock
jl
mov
jp
lock
cs
sbbb
mov
mov
imul
lea
js
dec
sub
mov
and
inc
lea
push
push
push
add
loope
push
and
push
cld
roll
inc
je
pop
xor
and
repnz
add
aaa
in
call
or
mov
incb
insb
jp
xchg
mov
jmp
pop
test
mov
inc
fiaddl
cwtl
push
lcall
aad
decl
je
dec
adcl
xor
pop
rorb
mulb
outsb
dec
rorl
test
push
imul
incb
insl
jp
mov
adc
orb
push
pop
pop
push
pop
mov
js
das
loop
and
adc
inc
sub
aam
jle
add
rolb
out
push
mull
mov
xchg
in
sub
ljmp
fs
and
ficomps
test
fiadds
mov
lods
lcall
xor
bound
and
cmp
jnp
adc
mov
clc
adc
dec
into
inc
or
add
adc
clc
add
cmp
fidivl
cli
ljmp
aam
and
xchg
or
add
aad
lds
int3
or
jne
adc
outsl
or
sbb
je
dec
inc
sbb
sarb
mov
sub
jl
fwait
add
cmp
ss
push
insb
cmp
add
adcb
add
outsl
pop
add
adcb
imull
adc
in
sub
pop
sub
push
lock
stc
lea
jbe
call
divb
xchg
inc
incl
mov
int3
int3
iret
xor
sub
mov
xor
cmp
test
je
pop
scas
aas
mov
mov
lock
orl
ret
rorb
add
dec
jl
fisttpl
sub
or
cmp
out
lock
xor
mov
inc
mov
push
push
push
mov
subb
in
adc
xor
fildll
call
add
notb
mov
std
bound
xor
decb
mov
cld
jo
adc
xchg
dec
fisubrs
mov
hlt
loop
bound
mov
mov
or
test
ficoml
aaa
inc
mov
mov
jb
jl
stos
ds
xor
sahf
cmc
lea
cmp
andb
mov
mov
and
adc
push
mov
add
pop
sub
jo
lods
cmp
dec
push
icebp
push
aas
mov
cld
adc
aam
addl
and
or
sub
adc
cmpsb
pop
push
jne
sbb
pop
dec
cmp
push
mov
or
sbbb
dec
ljmp
int3
jne
or
or
jmp
test
sub
outsl
outsb
cmp
adc
sbb
jecxz
repz
push
adc
cmp
cmp
jg
cld
push
jmp
xor
dec
int3
push
loope
jmp
adc
fidivl
jp
xorb
mov
sar
mov
push
inc
test
add
ret
push
adc
das
dec
jbe
shrb
sbb
push
ret
das
addb
mov
lret
mov
push
cmp
cs
repnz
xor
hlt
movsb
loop
jne
mov
or
sub
adc
je
push
xchg
clc
dec
loopne
ss
je
sbb
sbb
add
and
loope
pop
clc
pop
int3
cmp
cmp
dec
cmp
rorl
mov
add
aam
mov
add
xchg
inc
int3
adcl
lcall
push
lret
jno
push
lods
inc
int3
cld
pop
mov
loop
xchg
fsin
pop
pcmpeqd
out
xchg
stos
imul
jmp
mov
cmp
mov
jp
push
jmp
lret
sbb
dec
and
clc
es
sub
add
add
das
mov
mov
push
pop
in
push
loopne
xchg
sbb
add
sub
rolb
test
mov
setnp
or
xor
add
lods
sub
orb
aad
xchg
mov
into
inc
pop
add
add
loop
sbb
bound
lods
call
cmp
shlb
lahf
add
jp
xchg
adc
cld
add
mov
add
hlt
shrb
lea
inc
add
add
clc
je
xor
call
xor
rcrb
stc
and
clc
push
push
in
or
es
test
jecxz
int3
or
adcl
inc
push
test
mov
inc
int3
sbb
imul
shrl
roll
mov
mov
les
jbe
mov
mov
mov
fbstp
std
mov
rol
ljmp
rclb
ss
mov
mov
movsb
mov
mov
inc
add
lods
int3
je
ss
xchg
mov
stc
mov
add
add
adc
xchg
push
mov
push
xor
rclb
jnp
into
or
add
add
mov
fisubrs
dec
je
jmp
sub
stos
push
push
sbb
inc
inc
mov
adc
movsb
jmp
aaa
je
add
pop
insl
mov
xchg
aam
push
aas
loopne
adc
add
push
jb
dec
or
mov
mov
or
mov
adc
mov
mov
push
sbb
lret
sar
inc
mov
pop
dec
outsb
cld
jmp
push
loopne
adc
jbe
adc
lock
mull
int3
push
pushf
shrb
or
dec
stos
loope
or
push
loop
rcll
xor
in
cmpsl
addb
nop
lods
in
jmp
mov
push
adc
fists
mov
pop
mov
jg
scas
inc
movsl
loope
push
into
mov
and
jmp
sahf
cmp
add
lret
jae
sub
add
and
je
in
inc
je
mov
aaa
adc
adc
ds
mov
or
xorb
or
pop
pop
std
pop
aaa
ljmp
inc
rcrl
sub
xor
ljmp
popa
rolb
or
lret
je
fdivr
mov
insl
push
js
les
ficoms
and
ds
cmp
and
and
sbb
push
shll
call
jg
or
bound
dec
addl
pop
fmull
fcomip
mov
mov
dec
inc
lock
mov
out
xchg
ret
insb
mov
inc
sub
or
and
test
sbb
loop
push
rcll
cmpsb
xchg
mov
xchg
enter
dec
sub
cmpb
arpl
es
out
or
add
mov
mov
cmp
add
add
int
push
inc
and
je
inc
inc
xor
add
cmp
mov
inc
jo
test
movsl
dec
out
inc
icebp
cmp
mov
push
fmull
movsb
bound
pop
jmp
and
stos
clc
lods
insb
fdivl
jbe
in
push
clc
push
xor
mov
in
adc
xor
test
pop
cld
in
inc
rcrb
push
or
cmpsb
xchg
xchg
lock
jp
pop
fsubr
push
jl
out
decl
pop
push
call
mov
xchg
cmp
hlt
or
decl
aas
cmp
adc
push
jnp
adc
pop
jne
stos
push
pop
xchg
fdivs
ss
dec
xor
inc
xor
cld
mov
jmp
stos
adc
sahf
mov
or
cmp
xchg
cmp
std
dec
nop
stos
jmp
jmp
sbb
or
add
rorb
mov
and
xor
push
lret
push
jb
outsb
jg
test
push
mov
fs
push
clc
test
sbbb
call
stc
xor
jne
in
aam
mov
dec
inc
mov
mov
fisubs
outsb
jbe
fldt
test
dec
and
inc
sahf
repnz
adc
rorl
pop
sbb
inc
add
adc
sbbl
leave
dec
inc
or
add
fs
mov
fs
dec
or
cmp
test
int3
lods
xor
inc
adcb
cmp
lods
mov
or
das
lcall
inc
cld
fldl
cmp
push
dec
adc
fistpl
jo
dec
lret
adc
inc
push
sti
cmp
out
mov
lock
pop
dec
cmpb
imul
pushf
insb
aam
sub
ret
adc
jmp
adcl
add
stos
popf
mov
into
adc
xchg
shlb
mov
xor
sbb
push
push
push
adc
dec
call
lds
mov
sbb
ljmp
mov
add
sbb
addl
repnz
lods
add
sub
fs
idiv
fwait
cmp
xor
mov
test
add
mov
cmc
mov
cmp
arpl
push
or
fwait
adc
pop
iret
js
inc
cwtl
jo
add
stos
ret
ret
push
mov
jg
es
push
popf
test
push
adc
fcompl
xor
cmp
inc
inc
xchg
jle
sub
mov
pop
push
jp
in
mov
call
test
loop
adc
pop
add
push
lds
sub
arpl
fwait
movsb
push
out
test
mov
or
add
dec
repnz
test
push
sub
ret
sub
popf
rorb
xchg
mov
out
sbb
jle
push
dec
mul
xor
add
adc
jecxz
or
std
gs
cmp
or
cs
fdivp
sub
sub
ror
push
xchg
inc
inc
add
pop
push
sbb
adc
xlat
in
mov
icebp
test
jne
cmp
push
cmpsb
sub
mov
test
inc
ret
pop
mov
and
xchg
call
int
mov
lods
call
add
arpl
adc
xor
ss
jmp
orps
push
sub
push
into
mov
or
js
sub
cmp
dec
jmp
loope
sahf
std
sbb
xchg
int3
ret
sahf
dec
inc
push
push
jmp
add
push
test
inc
add
mov
rolb
inc
test
clc
adc
das
decb
leave
movups
xor
adc
jno
scas
jle
xchg
call
inc
les
xor
mov
push
push
negb
dec
jne
or
test
dec
in
dec
loopne
shlb
jb
jne
inc
xor
and
xor
xchg
or
push
sbb
push
push
inc
mov
inc
ret
int3
insb
in
std
shlb
add
call
xchg
xor
xor
mov
roll
stos
ljmp
call
sub
jge
or
out
imul
das
jne
push
and
std
inc
inc
sar
es
add
inc
leave
jb
testl
enter
push
insb
int
aas
repnz
mov
mov
xchg
in
sbb
enter
mov
enter
cmc
in
loop
je
js
sub
pop
leave
fcoms
push
adc
outsl
lds
jbe
jne
lods
cmc
fdivr
cld
mov
xchg
aam
jmp
inc
or
jg
mov
mov
or
pop
and
dec
shlb
aam
call
int3
sbb
inc
call
mov
lods
xchg
inc
jle
jne
jne
push
add
adc
mov
stc
je
pusha
push
rorb
sub
imul
loop
lea
test
xorb
test
dec
pop
call
fiaddl
or
mov
int3
sar
call
mov
rclb
int
dec
inc
inc
aad
out
jp
fisubs
int3
orl
aam
jle
imul
cmpsl
test
mov
push
dec
sub
push
add
sarb
out
incl
cld
push
fcom
add
push
mov
rorb
sub
fidivrl
push
add
fcomps
ficoms
inc
add
fiadds
jl
incl
adc
add
xor
in
cmp
fimuls
add
xchg
sub
mov
jl
mov
ret
ss
or
decl
lock
rcl
addl
mov
in
das
inc
cmpsl
mov
mov
inc
dec
sub
mov
loop
mov
add
xor
jge
inc
das
loopne
and
jmp
push
lock
cld
sti
es
sbb
push
push
adcb
imul
sbb
dec
mov
sub
hlt
xor
ret
add
ret
sub
adc
addl
int3
cmp
out
rol
sbb
mov
add
cwtl
or
lock
movsl
sub
sub
add
pop
mov
aad
push
add
loop
inc
lea
add
repnz
popa
mov
add
clc
es
ficomps
movsl
and
fstl
ror
mov
push
std
pop
les
add
mov
and
inc
loop
call
add
xor
sbb
sub
sbb
dec
add
mov
sub
cmp
inc
jmp
test
rol
inc
and
xchg
dec
adc
push
into
pop
test
cmp
mov
int3
lock
mov
cmpsb
test
xor
into
add
std
push
mov
xor
lea
ret
ja
and
fidivl
or
inc
jae
in
lcall
cmc
mov
xor
mov
lret
adc
sbb
sar
test
test
inc
add
cld
pop
lock
outsl
scas
pop
jmp
lea
stos
adc
add
xchg
add
ss
and
mov
pop
int3
int3
inc
call
lods
add
notb
pop
jno
dec
cli
inc
adc
stc
test
nop
rol
mov
pusha
jecxz
ret
cli
test
mov
std
lods
add
dec
call
lock
inc
cmp
insb
add
or
fidivrs
add
gs
sti
and
sti
sub
pop
xchg
fs
xchg
cs
les
jb
paddsb
std
mov
in
je
mov
or
pop
movsl
lock
les
add
fnstsw
daa
call
call
std
out
addb
decl
mov
mov
sets
push
sub
push
shlb
mov
sub
or
mov
add
adc
or
add
and
xor
dec
push
adc
xor
or
pop
add
mov
xchg
cmp
jecxz
xor
call
mov
sub
call
or
into
jl
and
jle
jge
iret
js
jle
and
dec
cld
push
sbbb
push
xchg
fs
push
rorb
mov
and
rorb
dec
test
ret
call
icebp
daa
mov
lahf
cmp
mov
or
sahf
je
mov
imul
xchg
rcr
add
es
jmp
decl
dec
lret
out
add
movsb
xlat
lods
pop
add
lods
subl
xor
test
mov
adcb
mov
xchg
les
push
clc
mov
jne
xchg
test
hlt
lea
jne
xor
call
sub
mov
bound
adc
popw
fmull
mov
adc
pop
loope
add
sbb
xchg
jne
jecxz,pn
or
pavgw
dec
mov
add
or
add
push
dec
inc
or
add
leave
bound
push
or
mov
mov
lea
orl
xor
sbb
or
out
add
push
mov
es
or
push
out
shl
call
cli
cmp
scas
pop
mov
ret
jl
add
sub
cli
fnstsw
ljmp
cmp
add
test
bswap
pop
sbb
lret
mov
sub
stos
mov
mov
insl
mov
ljmp
sbb
jne
adc
mov
mov
lock
inc
call
repnz
xchg
test
xchg
sub
push
cmp
mov
dec
xlat
into
clc
inc
or
jl
mov
jg
add
cmp
mov
jne
call
jo
rclb
push
pushf
rclb
test
cmp
movsb
and
jg
push
inc
xor
jo
mov
mov
rol
fs
outsb
add
cmp
notb
add
idivb
cli
push
xor
pop
repnz
xor
movsl
add
into
bound
dec
insb
fs
out
fiadds
inc
add
jbe
push
mov
fmull
repnz
std
push
sahf
dec
test
sbb
sub
repnz
adc
mov
stc
cld
dec
push
test
inc
or
orb
pop
dec
shrl
xchg
adc
xchg
inc
je
jne
pop
pusha
jmp
movsb
les
push
sti
add
xor
rclb
mov
ret
pop
push
inc
out
mov
loop
sbbb
fs
imul
js
cmp
je
loope
cld
pusha
mov
add
sahf
decb
and
and
lods
stos
lods
mov
out
test
or
lahf
fists
lock
in
test
push
fcmovnb
sub
add
xorl
cmp
stc
push
ds
jl
add
push
std
push
call
je
loop
test
adc
mov
popf
ret
xor
mov
inc
pushl
add
add
shlb
push
jne
jg
jle
push
mov
test
adc
jl
test
hlt
push
test
push
add
psrad
adc
lods
cli
js
jb
push
aad
sbbb
or
jecxz
aaa
and
dec
or
sub
mov
dec
sub
pusha
cmp
jae
lds
adc
popa
insl
fisttpl
dec
pop
jle
test
or
push
call
pop
fcoms
arpl
push
repnz
ret
push
sbb
push
mov
mov
mov
jecxz
xchg
jne
cmp
jl
mov
sbb
adc
test
lods
mov
mov
or
popa
cld
sub
ret
divb
ljmp
pop
fnsave
fs
mov
xor
mov
fcompl
rcll
push
push
pop
cmp
push
add
adc
ja
xchg
pusha
cmp
test
js
xlat
testb
add
dec
mov
mov
dec
inc
je
ss
cmc
mov
push
xchg
je
lea
jle
pop
mov
xorb
pop
sbb
or
hlt
fadds
mov
test
test
scas
test
inc
icebp
dec
pop
mov
clc
mov
decl
adc
add
adc
inc
add
inc
sbb
rcrl
or
pop
push
or
outsb
xchg
fiadds
lahf
xchg
push
aaa
add
pop
sub
stos
push
cmpsb
adc
sbb
xchg
cmp
xchg
xchg
lret
sbb
in
mov
stos
inc
cltd
cli
adc
mov
and
fs
jmp
or
lea
pop
sub
or
add
sub
pushl
sub
xor
in
clc
loopne
jne
aam
sar
inc
push
idivb
adc
lea
jmp
cmp
xor
mov
int3
lea
add
pusha
mov
xor
mov
pop
xchg
sbb
push
mov
sbb
out
stc
in
ljmp
pop
lock
das
mov
cwtl
sub
addl
adc
pop
and
mov
dec
hlt
dec
mov
push
mov
adcl
rcl
std
dec
push
inc
aaa
loopne
sti
sbb
daa
cmp
pop
inc
mov
incb
push
je
lea
mov
mov
call
or
mov
pop
jp
push
push
pop
push
inc
clc
xor
add
sub
clc
push
das
bound
dec
or
movb
jle
fmuls
mov
push
in
roll
push
and
inc
je
fiadds
decl
adc
or
loop
test
push
ss
push
xchg
pop
pusha
push
cli
into
fidivl
push
lock
mov
sbb
stc
push
imul
cmp
mov
lock
and
push
mov
add
jp
or
push
bound
mov
jle
in
or
inc
pop
push
mov
inc
cmpsb
fbstp
cmp
pop
mov
mov
mov
icebp
movsb
in
lcall
add
es
push
scas
mov
jne
lock
sbb
cmp
cltd
and
movsl
mov
add
hlt
addb
pop
test
mov
dec
mov
in
or
movsb
dec
cwtl
sar
xchg
call
adc
test
mov
lret
and
push
lahf
test
daa
adc
push
lock
push
pop
and
and
test
push
rcll
js
mov
sti
add
or
push
fcoms
jo
sbb
xchg
and
pop
test
add
mov
add
ss
or
push
cld
lea
xchg
mov
sti
add
push
lock
sbb
jbe
push
in
or
mov
leave
insb
lods
dec
shl
dec
inc
fwait
sarl
or
add
loop
call
pop
popf
lods
mov
int3
sub
cmp
mov
add
test
repnz
push
mov
or
push
add
scas
loope
inc
stos
stos
nop
adc
push
sub
mov
xor
divb
pop
movsb
int3
push
ret
arpl
jl
mov
je
std
pusha
cmp
fwait
push
inc
mov
test
mov
test
por
hlt
push
outsl
jo
mov
sub
push
cwtl
dec
test
pop
jb
lock
push
pop
cmp
aaa
push
mov
sbb
call
jge
mov
dec
adcl
push
xor
loope
xchg
int3
adc
push
decl
jne,pt
push
or
sarb
out
mov
inc
push
mov
jmp
add
shrl
sbb
jge
sbb
orl
cmp
cwtl
mov
jo
es
push
xor
pop
clc
into
push
fistl
push
add
clc
aas
ss
clc
add
fsubp
call
popa
outsl
test
push
inc
repnz
int3
mov
pop
mov
fists
rclb
sti
rorl
mov
mov
or
ds
mov
rorb
dec
jle
mov
lock
dec
mov
xor
push
ret
push
rcll
or
rolb
add
add
fmuls
lcall
faddl
cmove
jmp
mov
test
jbe
sbb
push
jne
mov
mov
adc
hlt
xchg
push
movsb
lock
jns
jo
dec
pusha
test
or
lock
xor
fs
mov
jne
push
jg
popf
mov
adc
subb
push
push
dec
push
mov
add
push
aam
dec
xchg
adc
dec
rol
into
call
or
cmp
pushf
xchg
jle
mov
mov
psubq
inc
xor
fwait
cmp
mov
inc
mov
enter
lret
call
mov
test
hlt
int3
push
mov
inc
jg
sar
xor
lcall
sbbl
cmp
xchg
sbbl
nop
xchg
cld
add
ja
in
pop
lret
je
ljmp
rolb
xor
data16
add
mov
sub
mov
and
pop
pusha
mov
jbe
mov
dec
cmp
aam
pop
inc
aam
add
xor
add
xor
scas
imull
ds
xbegin
decb
mov
scas
xor
jecxz
sbb
enter
push
pop
push
mov
adc
fwait
sahf
xor
js
loope
shrb
fstl
test
push
mov
aaa
into
xor
dec
jno
fdivr
mov
mov
imul
xchg
outsb
daa
add
sub
dec
test
xchg
mov
imul
and
lea
stos
mov
fs
scas
icebp
and
icebp
sbb
and
adc
shl
cmp
icebp
ss
loopne
ficoml
mov
sub
mov
or
push
jmp
xchg
push
movsb
push
add
push
mov
roll
push
mov
test
nop
iret
xor
sbb
cwtl
aam
lea
adc
or
ret
loope
cmp
push
push
jbe
push
test
and
add
and
in
or
push
ljmp
add
fcompl
dec
mov
adc
mov
mov
or
nop
test
pop
push
mov
pop
inc
addb
test
or
in
sbb
inc
or
add
cs
xchg
add
push
push
pushf
nop
aam
push
call
jne
push
xchg
cmp
pop
ret
pop
mov
inc
push
gs
jl
cli
cmp
push
jmp
test
dec
loope
iret
add
xor
fidivrs
mov
sti
sub
sbb
mov
jp
add
mov
fistpl
test
arpl
pop
xor
inc
aam
mov
dec
js
jbe
dec
mov
lock
cli
and
inc
jb
jne
call
lods
mov
test
shl
mov
stos
test
sbb
call
and
add
push
loope
inc
repz
pop
dec
cld
addb
stc
pop
dec
add
enter
call
fcompl
insl
xchg
int3
shlb
loope
aaa
rolb
out
jle
xchg
loopne
mov
lods
inc
sbb
pop
shrb
adc
rolb
add
in
cmpsb
jg
fs
adc
xchg
sub
pop
adc
mov
test
add
mov
mov
dec
call
ja
call
push
jl
jmp
sbb
push
fucom
mov
mov
or
inc
push
dec
dec
or
test
push
cmpb
lcall
ret
or
push
in
mov
in
call
stc
fs
gs
std
inc
movntq
pusha
lods
push
call
sbb
stos
fsub
sub
pop
jl
sbb
xlat
xor
in
cmp
xchg
mulb
sbb
cld
push
or
and
mov
sub
add
das
or
imul
int3
call
mov
dec
add
cli
pop
mov
or
into
aam
lcall
out
imul
shlb
pushf
lock
dec
adc
xchg
cs
adc
repnz
cmp
adc
add
mov
in
addr16
in
stos
mov
enter
and
push
inc
dec
call
out
xchg
aad
sbb
add
push
icebp
pushl
leave
je
aaa
jb
inc
nop
push
sub
fmull
inc
les
movsb
dec
adc
outsl
js
lea
jne
pop
shlb
mov
dec
sub
mov
add
add
aam
incb
xor
add
cli
lcall
push
xor
mov
add
repnz
sahf
nop
cld
jns
xlat
cmp
subb
jl
or
je
cmc
out
out
cli
add
sub
mov
loop
add
adc
or
or
je
dec
xor
mov
filds
xor
fcoms
inc
inc
lods
rcll
adc
scas
xchg
xchg
push
hlt
pop
movb
cli
cmp
das
ret
jbe
mov
loop
fldt
lock
call
inc
scas
bound
and
in
sub
jo
push
mov
mov
lcall
pop
sbb
ss
push
ret
shlb
es
sbb
rolb
sbb
test
jg
adcb
cmpsl
dec
enter
int
sub
in
ljmp
xor
mov
call
push
mov
js
jno
loopne
add
ljmp
pop
ret
clc
inc
cmp
cs
cli
iret
test
add
sbb
adc
or
sahf
lods
imul
mov
push
add
push
jae
mov
pop
push
lock
jmp
pusha
add
inc
cmp
test
js
rolb
cli
push
push
jg
jmp
rorl
rcrl
push
push
adc
orl
jo
nop
jl
jmp
fucom
jge
cld
cld
add
cmpsl
add
adc
mov
push
cmp
mov
push
ja
mov
fdiv
mov
cmp
mov
mov
mov
add
fs
sub
rclb
out
adc
hlt
pop
or
std
add
add
aaa
cli
dec
fs
orl
pop
jbe
dec
xor
cmpsb
push
add
dec
pop
inc
lods
cld
inc
das
std
fisttps
inc
aam
push
sbb
xor
mov
sar
push
or
and
clc
mov
clc
je
or
sub
and
ljmp
sahf
int3
aam
out
mov
mov
aam
lock
push
cwtl
imul
mov
inc
test
push
sarl
ret
imul
gs
inc
fnstcw
les
stc
lret
xchg
adc
add
pop
and
mov
push
mov
lock
gs
mov
fcmovnbe
nop/reserved
pop
or
call
dec
clc
out
inc
fs
in
or
mov
or
jmp
fdivrs
cld
outsl
jg
inc
sbb
cmp
call
mov
pop
lock
dec
or
inc
mov
mov
mov
je
adcl
ret
nop
or
pusha
mov
add
inc
inc
or
push
fisttpl
outsl
test
or
lock
fmuls
push
jge
mov
int3
mov
scas
mov
fidivrl
xor
into
or
scas
or
decb
lods
xor
inc
mov
add
ret
insb
xor
dec
shl
xchg
push
push
test
sbb
lea
push
in
addb
ljmp
outsb
lods
cwtl
mov
dec
add
xchg
mov
inc
add
test
mov
push
mov
pusha
and
cld
dec
int3
xorl
es
icebp
cmovne
push
fs
push
mov
sub
inc
std
insb
add
icebp
fistpl
mov
fs
fidivrs
les
jge
add
out
shlb
faddp
std
faddl
adcl
lock
xchg
cli
push
dec
sub
mov
sub
je
mov
nop
repnz
sti
push
andb
test
jae
xor
js
pop
repz
fisttpl
popa
lea
adc
push
xor
cwtl
push
dec
sub
jg
jl
inc
add
add
jbe
in
std
mov
xor
push
jbe
gs
outsb
ffree
pop
add
push
sub
push
addb
movsb
sub
push
movsb
or
out
and
ret
clc
call
adc
push
lds
hlt
std
jnp
cmp
punpckhdq
mov
or
add
push
dec
sub
rcll
int3
out
push
aam
rorl
jle
mov
push
lods
xor
mov
xchg
in
mov
mov
push
mov
mov
loopne
les
rol
gs
loopne
cmp
mov
call
add
adcb
pop
mov
inc
xchg
in
lcall
jl
and
mov
or
or
mov
imul
lea
mov
addl
mov
adc
jne
mov
and
outsb
and
pop
or
dec
decl
inc
addb
push
pop
shlb
sub
inc
mov
cmp
lcall
xchg
ss
jp
icebp
pop
mov
xchg
ror
pop
gs
rorb
adc
inc
mov
es
pusha
cmp
cli
ret
jmp
int
sbb
push
ds
call
mov
inc
mov
jmp
adc
and
dec
mov
leave
inc
je
cmp
cmpsb
add
decl
lret
add
or
add
inc
cmp
jne
repnz
xor
test
insb
add
pusha
cmp
mov
popa
dec
xchg
and
enter
test
xor
in
cwtl
add
jns
xor
dec
mov
fdivr
imul
outsl
out
hlt
adc
mov
push
push
mov
mov
cmp
or
inc
ds
in
ja
push
xor
aaa
mov
xor
xorl
jo
and
mov
pop
and
push
incl
dec
test
rorb
popf
loope
push
inc
clc
movsb
pop
push
dec
push
stc
pop
lods
adc
hlt
xchg
mov
pop
or
std
cmpsb
dec
cmp
push
dec
adc
clc
mov
push
inc
jg
insb
jae
inc
push
add
mov
sbb
sub
push
mov
sub
xchg
shll
jmp
ret
rol
test
popa
inc
and
sub
adcb
push
les
and
xor
into
xor
jmp
mov
pop
sub
enter
pop
add
xor
std
pop
mov
out
cmp
push
jb
ljmp
mov
jp
and
std
and
adc
xor
or
fldenv
dec
add
ss
shlb
add
int3
sub
lds
int
cwtl
bnd
fsubs
xchg
mov
mov
loopne
pusha
adc
jns
push
enterw
push
sub
inc
push
inc
cld
aaa
xor
mov
push
jne
inc
inc
stos
inc
add
or
pusha
mov
or
add
dec
xor
call
pop
fmuls
fcoms
xchg
cmp
test
cmp
fmuls
push
or
pushl
mov
mov
or
pop
call
or
sub
test
cmpb
stc
or
mov
lahf
add
adc
xadd
aaa
or
sub
outsb
pushl
incl
mov
push
xor
frstor
les
fisubrs
adc
push
cs
sbb
dec
push
rclb
enter
scas
dec
xchg
push
decb
cmp
sti
outsl
adc
inc
into
shrb
mov
mov
es
and
fs
mov
adc
lock
jg
shrb
or
mov
or
int3
outsb
clc
mov
xor
mov
rclb
das
xchg
js
push
iret
xor
push
mov
cmp
je
fiadds
out
cld
mov
xchg
push
pop
in
je
cltd
popf
inc
xlat
test
xchg
and
outsl
mov
jne
in
add
cmp
setbe
inc
test
ret
cli
add
add
fdivs
mov
popa
sbbb
sub
and
test
dec
fisubrs
ljmp
pop
mov
aam
cwtl
decl
fbstp
xor
mov
test
dec
hlt
lock
fs
mov
gs
mov
xchg
inc
mov
scas
and
imul
js
xor
aam
in
push
jg
call
test
xchg
cwtl
leave
adc
mov
cli
adc
test
sti
mov
push
lock
jg
mov
xchg
xchg
andb
mov
dec
dec
adc
mov
loop
ds
inc
cli
push
jmp
scas
es
lock
ret
pop
inc
mov
pop
call
loopne
sbb
fiadds
out
pop
jmp
push
clc
sbb
movb
and
data16
hlt
dec
add
mov
push
clc
push
xchg
or
or
adc
outsb
pop
loop
cmp
pop
jp
sar
jg
dec
rclb
je
cmp
orl
pop
sbb
adc
mov
cmp
pushf
and
xor
movsl
jmp
fcoml
and
andl
pop
cld
add
loop
add
push
dec
jmp
or
mov
mov
int3
push
cmp
mov
or
out
mov
jg
pop
call
and
adc
mov
fimull
pop
add
pushf
inc
lods
shrl
pop
hlt
adc
or
add
js
nop
inc
or
xor
jnp
stos
in
mov
nop
xchg
inc
mov
xor
mov
add
in
loop
scas
testb
mov
push
clc
push
inc
mov
incl
xor
push
pop
pop
movl
jne
rcl
push
dec
mov
or
push
cmp
std
sub
jo
push
and
mov
das
add
cs
or
popa
push
and
pop
mov
sbbb
or
dec
mov
inc
inc
mov
pushf
cmp
push
icebp
inc
push
fld1
lea
xchg
loop
loopne
fcoms
mov
clc
pop
sbb
push
or
test
call
shll
cmp
fidivrl
imul
ds
stos
loope
aad
mov
jmp
mov
adc
pop
mov
push
sub
push
adc
mov
pusha
ret
mov
adc
call
push
idivl
popa
and
mov
inc
inc
pop
test
roll
push
adc
jb
inc
add
push
dec
fs
xchg
sbb
inc
popf
or
xchg
xchg
xchg
jno
aad
mov
or
xor
xor
push
add
mov
and
stc
pusha
add
jecxz
adcb
push
push
jne
mov
fs
add
add
dec
fdivrp
sub
add
pop
decb
mov
add
add
or
pushl
or
testb
clc
push
dec
add
ds
pusha
gs
push
cs
in
lock
hlt
aam
cld
mov
xchg
sti
fwait
mov
imul
adc
inc
cs
sbb
push
push
dec
add
xor
mov
sbb
clc
dec
push
mov
shrb
aaa
rcrl
gs
inc
in
cltd
and
xor
fnstsw
shlb
sahf
push
lea
push
dec
je
sub
icebp
insl
jmp
dec
mov
mov
push
sub
lock
pop
and
fcomps
mov
sarb
sub
in
icebp
add
das
and
push
ror
add
int3
sbb
mov
loopne
movl
jo,pn
inc
inc
test
jp
int
cld
jmp
call
pop
cmp
add
lret
mov
sub
mov
mov
mov
rolb
ret
pop
push
call
std
jne
mov
add
cld
sbbb
call
jo
mov
jb
jl
data16
std
inc
ficoml
cmp
lea
inc
lock
push
jb
add
jl
push
push
push
jmp
adc
testl
outsb
sub
mov
dec
lods
inc
movzwl
mov
sti
lock
push
shlb
jl
or
add
add
add
adc
push
mov
xor
imul
fidivl
std
sti
jmp
fwait
xchg
rcrb
jbe
addb
or
loope
jl
icebp
push
sti
std
aaa
mov
lea
push
pminub
add
aam
lock
jge
add
cmp
xor
js
loope
je
xchg
pop
add
call
jl
or
ljmp
adc
add
out
cmp
push
sbb
mov
or
jmp
add
cmp
inc
mov
je
sbb
jne
mov
or
loop
mov
iret
jge
jp
push
imul
adc
adc
cmpsl
push
loopne
arpl
nop
xor
mov
inc
loopne
outsl
adc
and
jge
add
sbb
ds
cmp
mov
cmc
fcoms
mov
mov
mov
mov
or
and
sar
movsl
icebp
das
adc
add
sub
sbb
scas
ret
mov
push
xor
les
inc
push
lret
aas
andb
jmp
mov
push
sti
xlat
or
stos
ret
cmp
inc
pusha
loopne
in
inc
loop
lea
cmp
call
mov
in
mov
faddl
ds
rcr
hlt
insb
lock
add
cmp
xchg
jae
aaa
push
dec
loopne
sub
xor
dec
xor
sub
mov
mov
sub
daa
sahf
imul
lock
inc
subb
fadd
add
jae
insb
je
rcrl
or
mov
int3
shlb
and
jle
dec
fimull
mov
ret
push
inc
clc
inc
mov
stos
xor
mov
imul
push
orl
push
popa
es
sub
js
cmc
jg
lea
add
mov
mov
cwtl
data16
sbb
jle
or
mov
test
pop
out
sbb
lods
add
sbb
jp
fdivl
mov
mov
and
adc
lahf
pop
hlt
dec
add
mov
mov
mov
pushl
ret
ret
subl
stos
add
xor
jle
push
ds
test
adc
push
aam
outsb
ret
fcmovnu
scas
call
adc
jle
adc
and
ss
mov
push
push
mov
push
mov
xchg
jg
adc
adc
in
dec
lock
and
fnsave
push
es
sub
data16
push
or
add
xchg
inc
inc
rol
test
sbb
xorb
sbb
mov
inc
adc
xchg
mov
sarl
test
cmp
data16
in
sbb
mov
sbb
hlt
inc
jne
imul
inc
mov
je
int3
mov
sbb
mov
shll
rcrb
push
fs
repz
jle
mov
or
mov
xchg
add
mov
jl
clc
pop
fxtract
orl
xchg
cmp
sbb
mov
xor
cld
xchg
jg
push
por
cmp
test
add
adc
adc
mov
stos
mov
fnstenv
lahf
clc
js
addr16
and
lods
fucom
or
push
in
or
push
rol
insb
add
dec
std
enter
inc
xchg
add
xor
jecxz
lcall
xor
rcrb
clc
or
dec
mov
mov
mov
mov
cmp
sub
mov
push
incl
push
punpckhdq
and
call
sbb
add
or
and
jle
pushl
cmp
inc
pop
test
addl
rcrl
jl
push
sarb
lea
mov
outsb
loop
inc
aam
cmp
add
pop
or
iret
xor
call
mov
push
adc
lcall
lea
sbb
mov
sysenter
push
and
je
dec
xchg
out
jmp
test
and
aam
pop
gs
daa
cmp
scas
popa
sbb
adc
scas
sar
adc
je
inc
add
cmp
int
and
push
mov
test
lods
pop
clc
pop
push
enter
add
cmp
vpunpckhbw
add
xchg
mov
pop
repz
jp
in
jecxz
loopne
add
dec
cmp
cs
mov
jp
push
dec
cmp
dec
aam
jle
les
push
fsubp
jmp
in
or
popf
sbb
call
add
mov
add
add
push
lret
mov
pushl
repnz
movsb
mov
push
and
call
dec
mov
xchg
mov
loope
inc
daa
scas
mov
mov
adc
cmp
mov
or
or
faddl
mov
adc
leave
stc
lock
or
add
push
in
or
inc
inc
test
lds
jb
shll
dec
ss
fs
pop
mov
inc
add
movl
push
xor
dec
push
cwtl
sbb
shl
inc
or
sub
jns
cld
add
lock
decl
pop
js
push
dec
sub
fisubrl
push
push
add
cli
adc
inc
fprem
mov
je
push
jle
add
adc
iret
ret
dec
adc
pop
lock
jne
add
add
and
sar
pop
jo
cs
sbb
cltd
fisttpl
cmp
adc
add
add
pop
adc
xor
jl
movsl
call
aas
pop
ds
push
lock
or
fadds
mov
inc
xchg
jne
inc
xor
cmc
mov
je
incb
adc
add
sarb
lds
stos
or
incl
push
pushf
int
inc
jns
addl
jge
sbb
adc
in
and
std
mov
or
lock
adcb
sub
inc
jae
test
mov
and
lea
mov
adc
cmp
xor
out
repz
jnp
or
mov
nop
rcl
ja
mov
mov
cmp
cmp
and
dec
or
mov
push
pop
mov
adc
call
jmp
popf
sub
out
xor
xchg
dec
dec
rorb
adc
int
xchg
outsb
call
je
outsl
outsl
incl
push
add
cmp
add
push
dec
adc
js
andl
push
mov
and
push
stos
push
mov
mov
les
pop
pop
icebp
insb
pop
jbe
push
ss
bound
cld
loopne
clc
add
jge
cwtl
daa
ret
cld
push
fiadds
jb
bound
fcmovne
inc
in
subb
int
cmp
jge
lcall
lock
pop
push
test
cs
popa
mov
adc
sub
lods
nop
insb
inc
or
or
sbb
jg
inc
dec
call
jnp
mov
in
ljmp
into
mov
adc
add
ljmp
mov
jbe
mov
and
inc
jp
push
faddl
mov
push
mov
or
push
add
sbb
sub
push
push
dec
sbb
outsb
stos
movsb
das
ret
mov
call
outsl
loope
xor
or
mov
sub
inc
test
add
fistpl
filds
mov
xchg
cmp
fiadds
popa
add
mov
decl
mov
cltd
stos
cwtl
pop
jl
rcll
fildll
xchg
xchg
xor
and
scas
pop
or
jne
push
xchg
pop
pusha
leave
adc
ficoms
loopne
inc
mov
add
and
ja
add
or
jo
ds
call
sbb
clc
adc
xor
ret
sub
inc
in
imul
ds
pusha
dec
js
mov
testb
cmpsb
ss
cmp
enter
pop
test
pushf
pop
jl
mov
push
out
test
subb
lock
pop
mov
push
jne
pop
fimull
adc
ljmp
fimull
mov
rolb
sbb
mov
aad
shlb
shll
insb
leave
call
rcrb
movsb
sarl
fisubrs
std
xchg
lea
xor
push
cmp
mov
adc
faddl
mov
jge
mov
das
clc
arpl
dec
inc
int3
or
mov
mov
mov
cltd
insl
xor
and
push
and
push
and
test
fdiv
fucomi
push
push
pop
dec
fadd
cld
xchg
adc
sbb
mov
dec
shrb
cmp
cmp
ret
mov
cmp
pop
push
xchg
movsb
jo
loop
pop
mov
lea
bound
test
jmp
les
xor
call
adc
xchg
mov
add
dec
pop
call
mov
cwtl
bound
cmp
and
ja
xchg
jne
std
pop
add
inc
invlpg
adc
push
test
sub
xchg
test
js
int3
scas
xor
clc
je
mov
lods
rol
and
jbe
mov
and
addl
in
cmp
xchg
stos
jmp
stos
dec
or
mov
add
punpcklwd
mov
add
lcall
sti
lea
popa
test
push
andb
sub
inc
xor
sub
mov
pop
pop
inc
inc
fs
test
js
mov
stos
dec
mov
cs
add
cmc
push
clc
je
rsm
movsl
push
ret
push
inc
and
xchg
clc
push
jae
add
push
divb
fsubp
xor
push
fsub
xor
inc
inc
jg
mov
pop
call
iret
int
sbb
adc
dec
pop
ljmp
test
aaa
lods
mov
pop
mov
test
add
enter
cmp
push
rclb
or
mov
std
dec
mov
sbb
jg
pop
iret
mov
into
nop
mov
aad
add
jne
int
or
xchg
jl
lock
pop
jne
inc
xor
rorb
xchg
jne
ret
mov
add
outsb
pop
je
pop
mov
test
call
jns
leave
xchg
pop
rcrb
cmp
adc
mov
or
lea
je
sub
jl
mov
xor
movsb
inc
fdiv
mov
test
lods
adc
and
push
lods
orb
in
add
push
adc
das
popa
or
loopne
rcll
ljmp
jmp
cs
xor
push
xchg
je
mov
add
sub
push
adc
xor
sbb
push
ss
ret
je
int3
mov
dec
in
lret
xor
adc
inc
adc
loop
xor
aam
cmp
dec
and
sbb
inc
push
int3
roll
shll
icebp
imul
scas
pop
push
repnz
mov
cmp
leave
out
jbe
dec
or
dec
push
cmovp
sbb
je
mov
pop
push
or
hlt
mov
lods
imul
cli
xlat
push
jp
adc
dec
jg
mov
dec
jne
sub
add
xchg
std
add
stos
and
adc
neg
aaa
in
int3
inc
cmpsb
dec
mov
scas
cmp
xor
jl
sub
into
enter
pop
pusha
movsb
dec
dec
jge
xchg
jp
les
sub
xchg
lock
push
adc
daa
clc
xor
add
imul
or
add
push
movsb
ficompl
sub
mov
cld
int3
xor
icebp
add
mov
adc
mov
ljmp
or
sub
hlt
adc
sbb
cmp
test
sbb
push
mov
fcmovne
rclb
inc
inc
fldt
mov
pop
outsb
bound
mov
xchg
sbb
aam
mov
cmc
decl
sub
ret
andl
or
add
cmpsb
not
mov
clc
cmp
jg
or
jmp
inc
pop
dec
jge
xchg
notb
cltd
jbe
xchg
mov
inc
loop
lcall
fistpl
andb
or
or
add
out
js
aam
xchg
leave
cli
insb
stc
push
mov
rol
add
loope
mov
lea
or
cli
popf
jo
rolb
data16
js
xchg
fwait
push
std
sbb
push
fcomip
add
or
aas
inc
fdivrp
add
mov
jnp
dec
movsb
add
sub
add
pusha
aam
loope
and
push
decl
test
push
stos
pop
jo
xchg
shrb
pop
jb
lret
mov
loopne
or
sbb
arpl
nop
test
xor
call
in
pop
inc
jl
pusha
into
fs
push
std
test
stos
shl
fucomip
mov
push
ja
idiv
sub
pop
or
jge
test
fdivrs
rolb
add
repz
push
dec
mov
into
movsb
sarb
pop
in
neg
add
sub
push
inc
and
and
mov
dec
jo
sub
aaa
lcall
sar
stos
jp
inc
sarl
mov
ja
mov
fsubs
sbb
cmp
les
or
ljmp
call
arpl
insb
jbe
rolb
les
xor
xor
mov
lock
adc
and
cltd
mov
and
sub
std
xchg
mov
adc
mov
lds
inc
and
xor
cmp
pop
pop
or
rorb
adc
adc
xor
insb
mov
push
or
push
fcoml
fwait
jle
aaa
ret
enter
push
popa
popa
mov
pop
jmp
push
push
mov
push
fcomps
push
or
push
mov
fisttpll
cmp
and
nop
mov
rclb
push
push
and
sub
sub
enter
inc
push
std
jl
push
insb
jnp
adc
xchg
mov
cmp
xchg
loopne
cmp
enter
outsl
shrb
out
mov
insb
outsb
or
push
movq
test
les
insb
movsl
mov
push
iret
pop
mov
dec
inc
xchg
inc
push
ja
cli
add
ficompl
pop
andb
fidivl
pop
cmp
movsb
test
xlat
push
out
push
mov
xchg
lock
aad
mov
pop
pop
inc
or
mov
xchg
or
call
cltd
cli
xor
sbb
xor
lea
or
jmp
xchg
pop
aam
mov
adc
les
sbb
cmp
dec
jmp
inc
add
jo
inc
lock
rcll
and
int
adc
dec
loopne
outsl
add
mov
push
lock
lock
pop
icebp
xchg
imul
ror
jge
sub
adc
insl
jmp
mov
xchg
es
aaa
mov
ja
sbb
cmp
dec
decl
shrb
shl
add
sbbl
test
add
mov
movb
hlt
sbb
mov
jg
fsub
mov
fisttpl
in
nop
adc
xorl
jmp
dec
cli
divb
inc
dec
mov
add
sar
outsb
mov
pop
pop
shlb
fs
pop
ficomps
out
pop
mov
add
mov
mov
fs
pushf
mov
inc
in
rol
call
lock
ret
mov
lcall
gs
dec
or
ss
iret
aad
xor
daa
pushl
adc
sbb
jbe
lds
mov
inc
push
add
aam
xchg
loopne
lret
ss
mov
pop
xlat
adc
pop
add
aaa
mov
lea
test
push
mov
adcl
es
rolb
or
sbb
fisubrl
pop
pushf
incb
mov
mov
sbb
cmp
xor
cs
cmp
cld
adc
outsb
inc
cmp
test
stos
xlat
call
jmp
sbb
out
cmp
pop
jb
adc
jbe
sub
jmp
fidivrl
loop
sub
andb
lock
add
in
rorb
add
sub
enter
or
mov
mov
dec
fsubrl
sbb
inc
mov
hlt
pop
adc
lcall
push
and
scas
mov
out
loopne
bound
bound
xor
mov
cmp
call
jmp
je
stos
mov
push
test
jae
xor
push
enter
lods
fisubrl
pop
inc
pop
sbbl
mov
cmp
adc
push
movsbl
aam
cwtl
or
pop
pushf
xorl
fcmovnu
les
mov
or
or
xor
mov
out
sub
dec
orl
add
xor
or
into
jo
adc
and
or
icebp
inc
mov
inc
adc
pop
sub
std
mov
jg
mov
sbb
push
inc
adc
push
push
int
daa
push
push
push
dec
call
sbb
and
adc
outsl
lahf
push
sbb
pop
push
cld
jmp
push
xor
pop
mov
mov
int3
or
cli
cmp
mov
jne
lea
insb
lock
inc
pop
loop
shll
mov
mov
insb
imul
adc
nop
or
jne
or
pop
je
jo
lods
test
mov
mov
sub
scas
and
push
lock
js
popf
xchg
add
movsb
test
and
mov
mov
inc
xlat
les
jns
push
mov
xor
push
loopne
or
sbb
mov
out
mov
clc
cmc
outsb
call
push
lea
divl
fimuls
mov
loop
inc
push
movsl
jmp
rol
nop
push
inc
xor
mov
xor
or
mov
test
rcr
inc
rol
sub
push
pop
mov
cmp
bound
add
ret
and
lock
xor
js
clc
inc
pop
mov
ret
clc
pop
pop
fnstcw
xor
sub
cmp
mov
pusha
daa
mov
clc
ret
add
dec
push
pop
jl
jne
and
add
rclb
jg
call
in
add
fcoms
cli
stos
jecxz
sbb
call
mov
ss
add
xchg
pusha
and
mov
loopne
test
stos
popa
es
adc
shl
in
xor
clc
mulb
mov
pusha
inc
and
mov
jmp
shl
inc
loop
shlb
and
cs
sub
add
xchg
inc
fisttpl
addb
cmp
fimull
arpl
xchg
enter
dec
and
sub
sbb
outsb
shlb
cmp
add
or
scas
pop
sbb
test
icebp
mov
je
sbb
orb
xor
rclb
std
push
loop
test
cmp
adc
push
les
lock
rcr
int3
pop
mov
fildl
call
pop
cmc
mov
lock
xchg
push
cmp
jmp
pop
lcall
inc
pop
or
sbb
pushl
jo
or
inc
and
inc
jne
mov
ret
sub
movsl
pop
test
xchg
add
in
es
scas
xor
push
cmpsl
mov
push
sti
shl
push
adc
movsl
addb
sarl
add
clc
in
ficompl
test
repz
xor
dec
or
jne
mov
mov
mov
cmp
stc
cmp
jmp
jl
cmpsb
or
sub
mov
xchg
adc
shlb
add
inc
mov
or
loope
sbb
push
pop
pusha
movsb
adc
inc
test
add
add
stos
popa
xor
mov
mov
mov
lret
insb
clc
mov
pop
test
movsl
mov
pop
pop
pop
push
inc
pop
test
fucomp
sub
jp
movsl
sub
ds
jle
mov
mov
nop
rcr
cli
push
js
daa
test
mov
cmp
mov
nop
inc
xor
mov
push
aam
scas
addl
pusha
xorb
je
lds
jne
mov
mov
aaa
adc
fs
icebp
aas
movsb
or
add
lcall
mov
mov
dec
inc
outsl
idivb
mov
add
jp
repnz
aam
mov
jne
pop
stc
mov
pop
dec
dec
pop
push
pop
mov
lods
scas
push
sti
mov
add
fildll
or
or
test
ss
push
inc
call
dec
push
pusha
xchg
fisttpl
in
add
imulb
arpl
pop
and
and
sti
inc
xchg
pop
in
sti
bound
mov
clc
xor
pop
push
sbb
lock
pop
outsl
push
mov
mov
xor
cmp
test
pop
cmp
jne
xchg
sbb
mov
pop
sbb
push
int3
pushf
cmp
inc
fildl
leave
sbb
into
out
dec
jo
or
and
mov
out
push
into
lock
inc
mov
adc
or
iret
loopne
add
and
jne
mov
lods
fwait
scas
orb
imul
jmp
icebp
orl
in
loop
dec
xor
push
and
adc
es
fs
mov
push
into
jne
jmp
js
cs
ljmp
sbb
insb
pop
push
push
dec
cmp
sbb
push
mov
loopne
mov
sbb
fmuls
imul
mov
inc
mov
data16
adc
xchg
clc
shlb
and
pop
mov
mov
ret
add
into
mov
pop
lock
out
inc
and
push
push
mov
xor
ljmp
popf
mov
cmpl
inc
inc
push
xor
or
and
pop
fucomip
pushl
mov
movsl
les
pushl
and
mov
cld
cltd
pop
scas
sub
lock
inc
mov
test
jmp
jmp
add
xchg
mov
fs
jne
ror
mov
ja
aas
or
sub
add
lea
js
rcrl
sti
add
or
test
aam
jp
decb
cmp
pop
fidivs
cmpsb
imulb
mov
lahf
pop
insb
add
mov
mov
add
mov
ret
pop
push
addb
jle
cli
add
dec
jge
sti
test
xchg
cwtl
aam
stos
and
mov
test
loopne
popa
inc
cmpsb
add
cs
fildl
repnz
in
and
fbld
cld
push
push
add
add
ljmp
pusha
pushf
or
gs
add
adc
mov
or
sbb
jmp
ret
pop
rorb
dec
dec
jo
mov
mov
pop
cmp
lret
cmp
inc
cli
add
push
xchg
out
adc
sub
xor
add
dec
popf
add
sub
and
std
mov
shrb
and
pop
notb
inc
jecxz
mov
call
scas
repz
xchg
inc
adc
rclb
adc
pusha
fdivrp
sub
aas
ss
orl
dec
pop
addb
push
dec
cli
push
popa
jmp
push
sbb
enter
and
mov
js
sahf
je
insb
mov
push
mov
jg
pop
ret
add
int3
inc
mov
mov
imul
in
std
aam
sbb
sbb
fimuls
add
out
adc
lods
jmp
rorl
xor
mov
push
sahf
lea
call
xchg
test
fcomip
outsb
mov
call
mov
xlat
mov
or
mov
add
into
add
xor
cld
lea
inc
and
je
mov
shl
xchg
or
jb
cld
popa
dec
clc
fs
jb
sbb
xchg
sti
cmpsb
mov
js
adcb
push
jecxz
push
cld
dec
dec
outsl
stos
lods
push
sbb
and
fsubp
outsb
adc
lcall
clc
test
enter
sub
dec
pop
int3
or
jl
scas
pushf
pop
and
sbb
cmp
insl
ret
mov
add
jns
sbb
cld
inc
fadds
test
jl
cli
inc
inc
mov
cmp
rorb
sub
stos
xchg
sarl
into
and
clc
aam
fsubrs
bound
mov
and
cmp
je
std
das
es
mov
or
in
jae
jl
loopne
or
aaa
sti
lock
je
lods
les
push
pop
add
lods
adc
shrl
stos
subb
pop
inc
push
sub
and
ret
std
sbb
dec
ss
cwtl
push
inc
dec
xor
xor
add
cmp
push
adc
fadd
add
out
add
notb
xchg
adc
je
jge
call
adc
test
inc
xor
mov
mov
shrb
shll
mov
xchg
divb
sti
xorl
aam
dec
in
fildll
test
out
dec
aas
add
gs
pop
nop
jle
insb
mov
nop
xor
jb
sbb
mov
sub
inc
adc
jg
cmp
sbb
lret
add
sbb
mov
in
aas
test
pop
push
lret
pop
inc
enter
and
and
jle
fs
push
inc
mov
jno
sahf
leave
mov
in
jl
adc
add
outsl
clc
push
mov
pushf
xchg
inc
loopne
xlat
nop
popa
gs
stos
je
lods
sub
imul
adc
push
dec
mov
xchg
adc
cwtl
xchg
jne
inc
jmp
mov
inc
pusha
jmp
inc
out
xchg
mov
adc
mov
fimull
mov
sub
or
ds
in
movsb
bound
js
lods
data16
push
and
add
add
rolb
lret
mov
aaa
sbb
ljmp
jle
test
lcall
jmp
ret
sbbl
sahf
sbb
icebp
push
loope
cmp
pop
ds
push
push
je
jge
subb
mov
inc
mov
add
jmp
xor
mov
mov
out
enter
sub
push
jl
cs
jbe
ret
push
mov
jo
ljmp
push
cmpl
cmp
inc
adc
mov
add
cmp
mov
fs
dec
std
inc
and
jp
push
mov
daa
xorb
inc
mov
sbb
jmp
mov
int3
push
sti
inc
inc
mov
mov
add
add
outsb
cmp
jge
push
push
mov
cli
bound
enter
dec
sar
cmovo
or
adc
jne
dec
aas
sbb
pushf
and
pop
loopne
push
pop
dec
movsl
jne
jg
je
jp
push
push
xor
out
mov
incl
jg
push
pop
js
cmp
xor
sbb
pop
and
mov
push
xchg
addl
mov
mov
mov
in
imul
ret
push
jb
mov
insb
inc
ljmp
fmul
rolb
cli
popa
cld
adc
xchg
mov
roll
pop
ret
inc
mov
mov
dec
mov
lea
sti
mov
sub
cmp
gs
push
aas
add
add
sbb
push
cmp
mov
das
mov
adc
add
pop
xor
or
xorl
fmuls
mov
sub
mov
arpl
loopne
xchg
lods
jb
gs
std
push
add
pop
jmp
cmp
inc
or
and
push
jmp
xor
clc
or
neg
adc
out
add
push
popf
dec
or
pop
jo
ss
rclb
ret
sbb
dec
mov
test
in
inc
push
jmp
adc
mov
sbb
fcoml
vzeroupper
adc
push
adc
int
decl
xor
xor
or
sbb
mov
and
dec
inc
xor
and
or
jo
aas
or
int3
movsb
lock
xor
xor
das
push
push
test
loope
rcl
jp
gs
push
cmp
or
incb
push
ds
and
or
fs
jbe
xchg
push
xchg
addl
push
mov
les
inc
cmc
push
add
insl
or
sbb
push
ret
mov
test
and
bound
dec
push
clc
std
inc
adc
or
clc
push
jmp
xor
inc
mov
test
fstpt
cli
pop
ljmp
clc
repnz
xor
cmp
mov
les
add
mov
insb
jmp
or
adc
xor
jne
gs
inc
pusha
add
adc
gs
pop
or
adc
mov
les
or
xor
fwait
add
in
insl
inc
jecxz
xlat
lea
lock
orb
push
outsb
or
pop
dec
stc
call
rcll
push
add
movsb
les
mov
ljmp
push
repnz
hlt
jbe
or
cmp
or
add
scas
aaa
cmp
outsb
iret
add
pushf
clc
ret
and
into
fsubrp
pop
mov
sub
shrl
call
dec
pop
inc
push
cmp
ret
xor
das
adc
lock
pusha
push
aas
dec
jg
in
cli
push
add
push
lret
or
xor
add
jg
inc
les
mov
mov
lock
jo
adc
jmp
lea
ljmp
and
add
bound
pop
inc
std
test
out
xor
sahf
and
and
push
out
jg
cmp
jne
dec
push
sub
adc
enter
pop
ret
mov
xlat
push
scas
mov
sarb
xchg
sbb
add
pushl
les
loop
popf
sbb
jne
and
data16
or
shl
dec
das
fmuls
leave
fimuls
dec
add
and
mov
cwtl
jecxz
sub
jg
and
and
pop
cmp
jbe
add
xchg
mov
fdivrs
incb
and
jbe
insb
cmp
shlb
je
jle
mov
cmp
sub
fwait
push
adc
or
or
repz
test
into
shlb
je
dec
dec
call
test
lret
test
adc
dec
mov
push
call
inc
std
adc
or
out
cli
and
fs
int3
mov
and
adc
addl
mov
or
cs
out
aad
gs
mov
adcb
push
lret
adc
popa
add
and
add
rorb
les
mov
xor
mov
mov
mov
faddl
scas
js
call
adcl
jmp
in
pop
pop
sbb
pushl
shufps
cmp
lock
add
push
dec
jmp
jp
mov
pop
xor
jl
xor
sub
push
mov
jge
fmull
jbe
ss
add
idivb
call
push
adc
add
ja
test
test
cld
jl
jge
jne
pop
popf
test
daa
into
cmp
add
cmp
adc
mov
cli
sbb
cld
sub
mov
hlt
jne
push
rcrb
sarl
mov
sbb
test
mov
xchg
adc
das
push
or
addl
rol
add
sbb
das
roll
sahf
and
sbb
inc
xorb
xor
divb
iret
adc
loop
aaa
lock
jle
repnz
xchg
adc
das
mov
dec
jle
push
push
ret
mov
and
lock
push
test
mov
outsb
test
dec
sub
bound
sbb
inc
mov
sbb
adc
mov
jle
call
addl
out
mov
jl
or
cs
adc
sub
dec
xchg
rclb
adc
mov
mov
inc
stc
ljmp
cmpsl
movsl
int3
test
pop
push
int3
jmp
cmp
test
add
mov
add
push
xchg
decl
xchg
gs
cmp
and
push
push
test
hlt
xor
or
cmp
mov
gs
dec
js
cmp
xchg
mov
push
add
pop
push
jmp
jmp
cmp
cs
cmp
add
inc
sub
lock
mov
insl
pop
mov
push
xor
push
cwtl
addr16
xchg
inc
ljmp
dec
mov
inc
cmpsl
or
aad
insb
mov
inc
pop
push
dec
dec
in
es
and
pop
xor
and
sbb
cmp
outsb
aaa
cmp
imul
mov
add
or
je
orb
add
outsb
loop
call
adc
sub
jbe
pop
data16
je
push
icebp
incl
iret
jmp
mov
or
sarb
pop
pop
lock
xor
fcmovnbe
call
sub
add
or
jmp
je
pop
add
push
adc
dec
mov
shlb
ds
mov
inc
jmp
adc
cltd
mov
adc
in
outsb
push
int3
inc
movl
mov
pop
xor
or
in
aam
inc
aaa
push
sub
adc
mov
lahf
mov
jo
adc
push
sbb
test
mov
pusha
xchg
cmp
std
lock
gs
loop
add
add
cld
jne
or
scas
ret
lock
ljmp
jo
jno
inc
mov
incl
inc
xor
test
and
xor
clc
or
fadds
icebp
jno
dec
or
or
das
addb
movsb
mov
add
mov
mov
mov
inc
add
out
cmp
lcall
mov
sbb
lods
jmp
pop
xchg
fdivp
mov
call
cld
fsubrs
ja
loop
dec
mov
jo
inc
dec
mov
ret
hlt
sti
rolb
add
std
dec
je
rclb
movsl
nop
mov
pop
jmp
gs
rclb
pop
inc
idivl
sbb
cmp
push
inc
xor
addl
mov
pushf
sti
pop
stc
gs
push
out
decl
push
ret
dec
xor
fs
push
sbb
rclb
sub
dec
mov
dec
lods
nop
and
imull
adc
cmp
in
or
add
push
jne
cmp
mov
outsb
scas
popa
sbb
mov
mov
insb
repz
scas
mov
shrb
mov
and
pop
lret
sar
test
nop
ds
push
fisubrl
xorb
adc
test
nop
dec
dec
jge
cld
sbb
decl
adc
ror
add
movsb
sbbb
pop
in
stc
or
out
mov
adcl
add
fwait
js
dec
dec
js
dec
shll
les
sbb
hlt
push
test
fidivl
push
enter
int3
sti
daa
rorb
and
mov
call
test
or
push
fcmovne
push
pushf
xor
mov
data16
repz
push
and
cli
mov
adc
lods
push
inc
dec
clc
inc
ljmp
push
cmp
mov
pop
adc
dec
cmp
mov
popa
js
sahf
js
add
adcb
xchg
sbb
mov
imul
fwait
adc
xorl
push
test
andb
inc
shlb
stos
push
mov
jnp
dec
xchg
push
movb
mov
leave
mov
rolb
dec
mov
decl
sbb
pop
jmp
add
imul
jl
ljmp
test
cmpsb
incl
test
cmc
rcll
adc
es
adc
and
mov
sbb
or
jb
jmp
jne
movsb
pop
add
add
adc
js
mov
jmp
mov
lock
bound
push
pop
repz
inc
push
add
repnz
ljmp
shl
int3
int3
add
sub
xchg
add
pop
test
ret
jmp
sub
or
or
sub
cmc
or
stos
dec
addb
push
lock
add
je
mov
and
testl
mov
pop
call
xor
incb
in
adc
mov
inc
test
push
cmp
push
cli
push
or
mov
jb
push
int3
in
and
add
ret
mov
es
dec
clc
aam
mov
lock
je
push
inc
in
mov
dec
test
ds
and
dec
imul
and
inc
push
stos
mov
xchg
jecxz
add
dec
add
add
inc
clc
outsb
insb
sub
mov
mov
cld
pop
aam
pop
cmc
inc
push
mov
jecxz
inc
ja
jg
pusha
loopne
repnz
roll
adc
or
inc
xchg
test
push
rcl
mov
dec
loopne
cli
cli
negl
pusha
mov
enter
ja
pmulhuw
nopl
mov
mov
xor
or
nop
lods
cld
push
loop
sbb
inc
fistl
mov
lcall
mov
fisubs
cwtl
dec
or
xchg
xchg
je
push
test
clc
add
negl
adc
iret
leave
push
jg
subl
adc
xor
xlat
ja
jg
sub
cmovp
inc
mov
mov
or
test
pop
std
pop
lods
adc
in
mov
and
push
hlt
add
xchg
xchg
mov
add
cmpsb
mov
mov
jnp
loope
hlt
addr16
cmp
mov
inc
sbb
int
sub
push
or
add
sahf
add
cld
testl
fs
inc
aaa
mov
shll
test
xchg
lods
fsts
fucomp
jbe
mov
bound
adcl
ljmp
jecxz
popa
imul
inc
mov
std
mov
push
cmc
lret
cld
jge
push
negb
cmp
dec
and
add
xor
dec
test
daa
sbb
nop
lcall
sub
loopne
dec
add
pop
mov
push
inc
pop
jne
inc
dec
dec
adc
cmpsb
pusha
cli
sub
push
testb
hlt
aas
call
aas
jmp
fisubrs
push
aaa
inc
fadd
push
inc
out
adc
xor
shl
inc
enter
sarl
push
in
pop
aaa
inc
cmpsb
and
ret
movw
jecxz
inc
mov
nop
xor
push
cmpsb
enter
adc
out
sbb
jne
scas
and
test
push
cmp
sub
incl
cmpsb
add
lock
xor
mov
xchg
hlt
fidivrl
mov
fadds
pop
inc
out
pop
mov
mov
sbb
xchg
outsb
or
jo
clc
adc
pop
jbe
ret
test
adc
fiadds
or
xor
call
adc
notl
call
outsl
or
mov
xchg
pop
mov
add
sarb
jbe
and
dec
or
aaa
or
aas
loopne
push
fbld
sbb
test
std
push
mov
cmp
pop
cld
gs
mov
je
push
push
dec
inc
ja
scas
cmpsl
add
jo
add
sarb
enter
sbb
mov
fwait
stos
jno
int3
es
and
hlt
dec
mov
std
push
je
add
or
lcall
and
shll
cmp
xchg
xchg
outsl
cmp
sahf
mov
decb
imul
aas
xor
pop
jle
xor
mov
and
testb
cmp
lea
dec
fisttpl
push
mov
in
jo
fcmovnb
call
add
or
add
insl
ljmp
leave
pusha
fcom
insb
push
scas
inc
push
push
mov
pop
es
cmp
adc
pop
mov
lods
jg
fmul
pop
pusha
mov
icebp
or
fisubrl
mov
cwtl
rorb
ffreep
sbb
sbb
xchg
adc
or
jb
sar
inc
adc
fsubr
add
and
outsl
rclb
cld
inc
adc
enter
dec
adc
push
or
add
inc
inc
lea
or
leave
jnp
add
cs
cmp
xlat
pop
mov
ljmp
lock
outsl
fsubl
lret
jae
cmpb
pop
pop
sub
mov
cld
xchg
stos
insb
divl
push
push
and
dec
lahf
dec
js
cmp
add
pusha
es
xchg
jne
mov
mov
mov
pop
lock
pop
rcl
loope
outsb
cmpb
or
inc
cmpl
add
adc
adc
push
js
insb
jle
mov
mov
sahf
scas
cmpl
pop
pop
pop
fcoms
dec
mov
add
or
jmp
ffree
inc
sub
pop
dec
push
fmull
js
cli
jge
xor
std
test
jecxz
mov
test
xchg
add
test
add
fimuls
mov
loop
pop
dec
adc
std
out
xor
xor
sub
int3
pop
dec
sbb
mov
cli
incl
mov
dec
call
fldt
xor
addps
and
lock
dec
add
cld
cmp
inc
xchg
lea
inc
xchg
and
sarb
mov
btr
add
xor
push
rolb
lods
mov
sub
and
jbe
add
adc
inc
test
xchg
mov
ss
add
int3
pop
add
adc
add
sbb
push
and
je
stos
movsb
ret
xor
ds
push
addb
movsb
push
test
xchg
xchg
orb
jne
mov
or
test
mov
test
push
add
pop
test
add
lcall
mov
add
ficoml
cmp
jl
int3
xchg
sbb
push
cs
imul
push
inc
mov
pop
popf
sti
mov
mov
popf
jl
pop
add
sub
pop
cwtl
cmp
add
mull
and
sti
and
decl
in
xor
call
or
sbb
mov
push
subb
sub
outsb
decl
sbb
xor
sbb
pop
loope
or
andb
mov
enter
pop
repnz
adc
pusha
pop
or
repnz
mov
xor
repz
hlt
inc
shl
cmp
jb
inc
repz
jo
andb
ret
mov
call
cmp
gs
inc
adc
add
mov
mov
add
mov
stos
hlt
add
push
dec
push
push
fs
mov
adcb
fcomp
mov
ss
pushl
and
andl
cld
lods
add
std
call
rcll
pop
and
enter
test
jae
push
adc
and
leave
and
mov
mov
jle
fidivs
xadd
mov
es
or
nop
xchg
mov
hlt
rorl
loopne
sbb
movsb
inc
into
mov
push
ss
loopne
or
mov
jmp
enter
lods
loope
ror
mov
pop
pusha
pop
movsb
push
cmc
loope
pop
push
mov
xchg
add
adc
push
mov
adc
cli
in
push
nop
push
sbb
test
adc
pushl
je
and
loope
scas
movsb
in
jb
test
jo
jge
pop
loopne
ret
and
call
icebp
and
sti
sahf
push
outsl
icebp
fcmovb
add
fs
test
mov
cmpsl
lods
mov
pop
cmpsb
movsl
adc
stos
int3
xor
je
mov
int3
mov
out
mov
mov
shrb
mov
mov
mov
push
mov
adc
jmp
push
adc
out
adc
popa
dec
pop
or
push
pop
loop
cmc
adc
push
sar
mov
push
int3
and
cld
in
pop
pusha
cmp
jg
jg
lahf
jne
inc
push
faddp
cmp
gs
push
cmp
pop
aam
or
fisubrl
and
fdivrs
pop
push
rol
pop
jp
in
aas
ret
inc
int3
inc
push
or
jmp
jle
jg
pop
andl
jl
jae
and
add
clc
cmp
mov
dec
sub
adc
push
pop
and
pop
nop
cld
std
adc
stc
push
push
adc
push
lods
pop
out
or
pop
mov
pop
push
and
shl
cmp
push
into
leave
or
rclb
xchg
or
iretw
movb
imull
push
jae
or
mov
and
inc
push
inc
in
aam
xorl
roll
aas
push
loop
add
add
xor
push
xchg
pop
fstl
lea
adc
lea
push
test
pop
mov
test
pop
cli
sbb
adc
es
jb
sbbb
jl
adc
and
ljmp
js,pn
ret
xor
jb
sbb
pop
cli
or
rorl
mov
push
add
pop
push
nop
rorb
push
daa
mov
mov
sbb
mov
pushf
push
inc
lcall
in
loop
enter
call
mov
add
sbb
or
jb
sbb
push
push
pop
cmpsb
pop
and
adc
ja
js
orb
push
push
loope
mov
pop
sub
mov
or
add
div
xor
shr
mov
mov
sub
mov
sbbb
imul
pop
jo
jmp
sbb
into
loope
and
pop
add
jl
push
push
es
test
adcl
outsl
arpl
xchg
mov
sub
out
push
add
sbb
clc
outsl
data16
xchg
dec
pop
pusha
cld
or
movsl
jg
in
push
in
cld
jmp
inc
enter
scas
push
push
out
xchg
cld
test
mov
mov
push
push
mov
int3
dec
push
mov
test
adc
out
push
sarb
xchg
sarb
dec
fadd
push
ret
inc
lock
push
mov
or
andl
idivb
int3
pop
rolb
dec
add
icebp
dec
fcomps
lea
clc
mov
cld
stc
add
or
xchg
or
sbb
mov
ret
je
pop
push
shlb
lods
cld
jo
out
lock
popf
add
nop
pop
push
pop
and
outsb
dec
inc
pop
xor
lock
call
adc
out
push
jle
testl
mov
mov
mov
push
adc
jb
and
cmpsb
cmp
ret
popf
sarb
sahf
das
fimuls
sahf
inc
push
cmp
adc
loope
test
sbb
es
inc
ret
fs
xor
stos
adc
test
mov
xor
in
push
push
dec
jno
mov
call
or
pop
mov
or
sub
fisubrl
mov
loopne
push
test
leave
inc
mov
ds
clc
add
pop
call
out
cwtl
aad
js
cmc
xchg
adc
aas
addl
test
or
mov
cmp
pop
pop
push
cmp
and
ja
ds
inc
aas
fadds
sbb
clc
cmp
insb
xor
inc
add
and
cltd
sbb
dec
dec
les
mov
pop
mov
test
pushf
enter
popl
sub
aad
mov
push
dec
jb
push
mov
fmull
int3
insb
xor
hlt
das
inc
rorl
leave
ret
sub
fsubrs
or
jns
xor
lock
int3
mov
ret
add
push
int3
push
xor
sbbb
dec
xor
add
aas
mov
gs
ds
dec
lret
cli
xadd
ret
sbb
lret
outsb
or
scas
inc
sbb
push
inc
int
les
pop
aam
pop
push
int
mov
inc
pop
mov
cld
xor
cmp
xor
adc
push
inc
dec
xor
pop
mov
fs
mov
and
in
loope
mov
cmp
or
inc
aas
adc
mov
rsm
out
ds
insl
mov
mov
bound
hlt
daa
hlt
test
mov
mov
add
pop
mov
xor
fdivrs
sbb
mov
lods
push
test
push
clc
jp
scas
sbbb
je
xor
dec
xchg
call
add
fistl
loopne
adc
or
mov
ljmp
lods
pop
lea
test
sbb
movsl
xchg
push
inc
push
fcoms
xor
mov
sub
ret
cmp
lcall
push
xor
lret
push
inc
or
xchg
mov
rolb
cmp
add
je
les
cmp
jecxz
les
or
and
clc
stos
jle
and
movups
pop
cmp
xor
jns
jnp
aas
cwtl
mov
in
incb
and
push
or
or
test
and
lods
cmp
stos
decb
push
and
adc
adc
sbb
rolb
push
ds
or
aad
roll
xor
call
mov
popa
push
out
sub
dec
mov
push
orb
jp
gs
add
mov
les
lock
pop
clc
push
in
add
push
shrl
and
sub
xchg
ret
add
adc
add
sahf
int3
push
or
mov
inc
aas
xorb
lock
in
test
lods
incl
dec
pushf
rolb
mov
jl
dec
std
fcmovnb
lea
incl
sbb
fnsave
je
sbb
rclb
xor
rcll
orl
addr16
cmc
mov
adc
lahf
rolb
shrb
jo
adc
add
inc
push
cmp
add
push
add
mov
call
mov
inc
gs
sub
xorb
push
xchg
adc
xchg
int3
cmp
push
leave
cmp
inc
inc
outsl
int
ljmp
gs
lock
nop
xor
ds
sbb
in
dec
lods
outsb
leave
movsb
fisubrs
xchg
sar
mov
int
pop
mov
leave
out
gs
rcrb
xor
rcl
cmpl
sub
cmp
push
lds
test
jb
leave
adc
push
push
rorb
test
adc
and
jge
js
jns
insb
js
inc
js
xor
pusha
cmp
add
xor
push
xchg
dec
clc
lea
push
adc
enter
sbb
mov
sbb
sub
sub
sbb
add
dec
pop
filds
cmp
xchg
in
dec
gs
into
adc
dec
cld
outsb
cmp
mov
inc
xor
mov
or
pop
shlb
aaa
dec
and
insb
jne
pop
movsl
movd
movsb
and
enter
cmp
movsb
sbb
inc
dec
jne
movsl
push
lret
test
adc
and
lods
xchg
repnz
ss
push
clc
inc
jg
fadds
das
xor
test
mov
popa
fadds
cmpsb
or
sarb
push
mov
js
loopne
jno
push
or
inc
xorl
imul
mov
add
pop
lods
divb
push
jge
dec
and
jno
xor
test
daa
pop
sub
inc
dec
decb
sub
mov
iret
fs
sub
cs
incl
jg
les
fwait
test
sub
mov
dec
jmp
or
pop
call
mov
inc
push
or
lods
push
mov
mov
mov
inc
enter
pop
fs
pop
sbb
scas
fdivp
or
add
das
jp
cli
inc
cld
adcl
mov
mov
mov
inc
push
call
addr16
adc
dec
adc
mov
es
pop
sbb
push
leave
cmpb
xor
jmp
and
sbb
test
out
rorb
movsb
pop
or
jne
dec
in
cli
mov
rorb
push
adc
sbb
sbb
cs
cli
inc
fcoms
xor
fisubl
into
push
lea
fiadds
cmp
int3
jbe
pop
mov
add
ret
subb
push
outsb
les
add
add
sub
push
cmpl
mov
pop
xchg
push
sbb
inc
mov
js
outsl
fistpll
mov
sub
add
jmp
repz
jo
ss
adc
push
xchg
sbb
push
mov
sti
aas
lock
insl
fnsave
js
fldl
dec
pop
jae
add
push
inc
ret
and
mov
pop
adc
xor
jo
xchg
mov
sub
xadd
in
test
test
inc
add
mov
adc
push
add
in
shll
pop
add
push
int3
jmp
aas
inc
lahf
and
adc
push
fadds
pusha
inc
rcr
push
sub
xchg
loopne
inc
add
mov
add
push
xor
mov
jg
lcall
sbb
xchg
sarl
cmp
jo
and
mov
cmp
fcompl
push
pop
push
adc
mov
je
mov
or
pop
lahf
or
push
sarl
call
inc
aaa
or
cli
and
mov
or
mov
pop
fisubs
je
mov
mov
and
loop
sbb
test
sub
sub
enter
add
sti
or
stos
call
sbb
and
push
clc
pop
dec
popa
inc
insb
or
pop
xor
dec
add
aam
in
insl
lods
das
movsb
jo
mov
testb
stos
jl
jp
mov
mov
dec
clc
adc
mov
xor
or
push
test
cld
or
in
outsl
fwait
incb
cld
jae
pop
mov
adc
add
inc
xchg
in
sbb
imul
jg
ret
js
adc
cld
or
pop
sbbl
cld
call
inc
mov
sub
movb
leave
adc
add
testl
or
pop
dec
push
inc
mov
int3
cpuid
or
out
test
pop
cmp
aaa
jle
in
inc
mov
or
insb
inc
mov
xchg
cmp
sbb
and
push
adc
shr
ss
push
inc
mov
loop
ret
mov
xor
rorl
pop
adc
cld
hlt
fisttps
faddl
add
dec
test
mov
sbb
mov
xor
adc
sbb
fs
push
or
jbe
mov
inc
cmp
in
mov
and
cs
pop
jg
or
mov
mov
ret
call
add
pushf
leave
add
sub
pop
rorb
enter
mov
lea
cmp
dec
push
add
nop
sbb
or
mov
dec
push
push
out
cmp
enter
adc
sub
outsl
stos
lea
push
pop
outsb
loope
int3
mov
mov
dec
adc
xchg
cmp
bound
sbb
mov
paddd
xorb
mov
out
cmp
add
stos
or
movsb
adc
xor
push
and
fwait
dec
ret
push
rclb
xor
xchg
imul
adc
dec
shll
adc
dec
popa
cmp
pusha
mov
cmp
lock
cmpl
xchg
and
je
jle
or
test
adc
test
out
mov
fs
faddl
mov
rorb
xor
pop
mov
lea
call
pop
test
out
sbb
leave
pop
add
add
cmc
add
cmp
gs
mov
sbb
sbb
mov
dec
add
lea
clc
mov
lods
push
mov
sbb
mov
call
pop
lock
mov
fadds
in
inc
les
push
pop
inc
test
push
ficoms
pushf
add
ret
hlt
fisttpl
push
rcl
xlat
adc
sahf
inc
mov
cmp
pop
lcall
pop
inc
data16
comiss
aaa
sub
clc
push
add
push
stos
adc
hlt
mulps
add
pop
inc
pop
sar
push
pusha
lds
jno
jne
xchg
jmp
or
inc
ret
adc
daa
loopne
mov
repnz
adc
cld
push
add
cwtl
push
call
push
mov
dec
push
and
test
mov
push
push
les
lret
and
movsl
inc
mov
dec
push
inc
pop
testl
aam
shll
mov
enter
fisubl
lret
test
pop
cwtl
adc
add
inc
jns
add
and
in
mov
pop
add
and
cmpb
push
and
mov
xor
fildll
call
mov
xchg
add
xor
inc
loopne
int
xor
inc
and
xor
mov
fadd
add
sub
fnsave
and
mov
bound
inc
lea
push
bound
push
sub
inc
insb
push
pushf
sub
mov
in
inc
inc
push
fadds
jl
xlat
movsb
jbe
cwtl
inc
jge
jg
adc
stos
pop
sbb
adc
popf
pop
std
movsb
sub
out
leave
push
sub
push
mov
add
imul
and
pop
dec
push
popa
adc
stos
mov
push
mov
mov
data16
sub
and
cmp
or
add
push
and
mov
idivb
call
popa
shlb
pop
ljmp
jmp
and
push
fstps
mov
xchg
test
std
stos
icebp
les
jge
lea
or
movb
inc
mov
adc
xchg
leave
rclb
mov
inc
adc
mov
lcall
inc
pushf
adc
stos
xchg
pop
fstpt
and
lock
mov
mov
cmp
test
inc
fdivp
mov
loop
mov
xor
push
xor
rclb
sub
sarl
cmp
mov
out
testb
insb
jmp
or
sar
sti
pushf
in
push
mov
mov
sbb
adc
inc
pop
gs
add
push
mov
sub
ss
pop
mov
add
leave
xchg
sbb
mov
mov
sub
jbe
xor
mov
or
jg
xorb
push
mov
xchg
adc
fcoms
jp
push
stos
aas
inc
mov
pushl
xchg
test
dec
popa
sbb
push
or
insb
test
bound
xor
mov
or
mov
mov
out
mov
pop
sarl
pop
mov
test
and
inc
loope
or
in
push
adc
movsb
adc
mov
mov
leave
shr
mov
mov
loope
std
movsb
push
adc
rolb
sarb
add
push
fiaddl
lea
inc
and
add
ja
je
mov
mov
or
sbb
inc
pop
or
mov
mov
sub
pusha
imul
imul
imul
cli
lds
cmpsb
push
fsubrp
add
xchg
push
test
mov
jle
cmp
sub
push
stc
out
mov
gs
xor
stos
dec
dec
cld
pop
aaa
pop
mov
adc
inc
sbb
pop
test
or
xchg
add
icebp
inc
outsl
push
cmpsl
ss
push
incb
repz
ja
ljmp
insb
loopne
mov
mov
and
pop
xchg
cld
mov
shll
mov
in
pop
push
jg
pusha
mov
and
mov
jb
das
push
mov
inc
sub
jecxz
std
cmpb
mov
inc
lods
data16
and
addb
cs
or
xchg
add
pushf
xlat
je
adc
scas
es
cmp
pop
sub
hlt
aas
adc
mov
sahf
push
dec
inc
sbb
cmp
sbb
and
jmp
xor
push
xor
out
aad
and
mov
cmp
dec
test
mov
dec
pop
int3
xor
rcll
rolb
mov
outsb
rorb
push
cmp
xor
cmove
rolb
pop
pushf
orb
les
cmp
int3
pop
in
test
call
lock
adc
loope
cmp
stos
jbe
flds
enter
cwtl
nop
popf
lock
aad
je
and
mov
mov
test
cmpsl
add
fbstp
and
push
adc
pop
call
push
mov
hlt
lea
popa
adc
add
push
sbb
mov
aam
js
or
xor
pop
and
inc
pop
xor
dec
sbb
add
scas
dec
cmp
push
sub
mov
gs
inc
mov
or
push
mov
pop
xor
loopne
mov
lock
add
mov
pusha
into
arpl
push
cld
xchg
mov
push
xor
push
push
data16
sbb
je
test
loop
push
stc
loop
mov
das
adc
push
mov
or
inc
cmp
or
mov
aam
add
pop
shrb
sub
ret
test
icebp
pop
push
js
jp
rorb
jl
test
ret
scas
mov
shrb
shrb
or
insl
xchg
lock
call
sbbl
lock
out
and
add
xorb
xchg
jl
stc
pop
js
std
pop
andb
mov
je
cmc
aas
adc
rolb
pop
add
xchg
pop
aam
and
mov
scas
inc
sbb
or
sbb
and
inc
clc
nop
sub
cmc
jg
call
in
imul
ret
add
xchg
add
clc
pop
rolb
fadds
ret
ljmp
cli
loope
pop
and
push
mov
adc
enter
icebp
add
cmp
hlt
lods
imul
push
sub
xor
adc
jg
sbb
push
std
or
pop
inc
mov
lcall
cmp
jne
push
adc
add
fnstsw
shlb
jp
pop
jne
fcoml
loop
mov
je
inc
ret
enter
js
mov
inc
adc
inc
xlat
aaa
jecxz
cld
ds
test
rolb
faddl
adc
fcom
out
sbbb
or
add
or
or
pop
push
pop
pop
push
test
fldl
add
mov
aam
and
jns
mov
xor
sar
clc
mov
clc
mov
inc
push
pop
rcrb
mov
xchg
nop
sub
bound
sbbl
shlb
int
loopne
sub
scas
xchg
movsb
mov
sub
out
std
lods
jle
movb
or
jno
sub
cmpb
notb
push
hlt
popa
mov
sahf
sub
push
pop
adc
push
imul
std
jg
jno
mov
negb
mov
mov
ret
cmp
mov
or
mov
push
aam
cwtl
xor
or
rcrb
test
rcrl
dec
mov
out
out
xchg
push
xchg
int3
xor
push
mov
push
mov
outsb
int
gs
sbb
xlat
leave
js
mov
lret
or
faddl
les
idiv
and
add
jnp
jle
xlat
add
lock
test
sbb
inc
mov
call
test
xchg
pusha
inc
xchg
pop
mov
mov
add
cwtl
les
adc
outsb
test
cmp
push
dec
or
fwait
jmp
in
test
sbb
decl
mov
icebp
in
xchg
mov
fisubrs
mov
hlt
adc
into
cmp
pushf
rorb
push
mov
dec
add
jle
pusha
push
fsubs
sbb
insb
rcrl
dec
add
push
push
lret
mov
ds
fistl
push
push
gs
sub
ficoml
gs
int3
jb
dec
dec
in
add
call
mov
ret
dec
add
cs
dec
test
add
mov
cmp
adc
pop
add
shll
xor
push
add
cmp
push
push
ljmp
inc
and
pusha
inc
add
jmp
jge
jle
nop
in
push
je
test
in
loopne
push
add
rorb
int
mov
dec
aam
fildll
adc
rolb
xorb
cmp
adc
ret
cmp
mov
push
mov
sub
sub
xor
fisubl
fildl
ret
adc
mov
mov
mov
aam
dec
fidivl
cmc
jmp
aam
popa
mov
or
bound
test
cmp
call
loopne
mov
push
xor
add
pop
mov
dec
fmuls
pop
push
xlat
mov
enter
int
adc
adcl
xor
mov
cmp
mov
fldl
or
mov
mov
lea
fidivrs
in
or
cmp
mov
adc
adc
rorl
or
pop
and
push
std
nop
pushf
js
pop
and
xchg
rcr
and
shl
and
xor
sbb
loope
xor
inc
and
dec
sarb
ret
add
dec
push
sbb
jg
xor
add
jnp
mov
mov
xorb
pop
loopne
add
test
push
dec
cmp
es
cmp
and
add
fadds
add
data16
adc
sub
add
les
popl
push
je
jb
mov
mov
and
jbe
fiadds
lock
pop
sbb
mov
int3
data16
pop
iret
popa
pushf
ret
movsb
movsl
push
dec
xchg
cmpsb
adc
sar
xor
push
movsb
add
bound
or
lock
or
les
cmp
mov
and
adc
pop
add
push
or
scas
mov
into
add
pop
fcoms
cmp
jae
pop
push
je
xchg
sahf
push
mov
add
mov
es
mov
addb
ror
sub
call
adc
fcoms
push
insl
push
mov
cmpb
addr16
and
fimuls
unpckhps
lret
int
movsl
test
je
adc
pushl
push
jl
xchg
call
outsb
jmp
dec
jge
bt
lret
pop
sub
xchg
adc
adc
xor
leave
xor
lock
adc
decb
jg
xchg
adc
dec
add
jne
movsb
cmp
cmp
adc
cmp
mov
icebp
das
add
cs
lea
fadd
add
adc
or
out
notl
jmp
test
pop
jl
dec
jb
insb
data16
aaa
sub
clc
and
ret
or
shrl
mov
int3
mov
cld
add
jae
clc
test
ljmp
or
outsb
add
outsl
outsb
popa
add
fnstenv
pop
lock
mov
cmp
add
or
loopne
mov
je
mov
mov
into
sti
test
incl
roll
nop
jge
or
out
push
xor
add
sub
adc
or
rol
shrl
mov
jp
cmp
jmp
std
jmp
call
push
sub
mov
push
adc
cmp
ret
hlt
ljmp
mov
mov
or
dec
inc
dec
cmc
cmp
add
outsb
sub
rolb
jmp
mov
dec
add
pop
lret
push
iret
xor
sti
sbb
inc
push
push
std
cmpsb
push
int3
xorl
outsb
cmpsb
and
ret
pop
dec
aas
xchg
enter
ss
dec
or
inc
sub
dec
addr16
neg
push
xorps
fcos
and
dec
push
loopne
inc
pop
adc
pop
fistpll
and
out
fnstcw
jl
call
mov
mov
cmovb
inc
rclb
les
add
fdivr
push
add
jmp
loopne
cmp
jg
mov
mov
fmuls
cmp
fwait
jns
int3
and
push
test
mov
inc
hlt
into
movsl
inc
pop
push
bound
push
jmp
mov
push
mov
pop
loopne
clc
xchg
cwtl
aam
call
icebp
add
push
inc
mov
xchg
cmp
dec
xchg
shll
push
or
sub
mov
xor
push
mov
adc
push
jb
xor
loope
pop
push
pop
jmp
dec
testl
dec
mov
inc
aad
cvtps2pi
ds
xor
add
dec
ret
mov
test
test
sbbb
ficomps
add
push
adc
out
inc
pop
jo
jmp
dec
aam
pop
pushf
jge
rolb
sbb
cmp
jns
shll
jne
daa
push
cld
movsb
shlb
int3
dec
les
inc
mov
cltd
rorl
je
loope
loopne
loopne
test
sarb
add
mov
mov
fdivrp
sbb
pop
sti
fistpll
jb
sbb
ljmp
push
call
inc
pusha
pop
arpl
cmpsb
cmpsl
lock
decb
insb
clc
repnz
mov
gs
sub
imul
push
jmp
jge
std
xchg
lea
cld
pop
sarb
pusha
mov
add
in
sub
xchg
sub
mov
sub
dec
jne
into
add
sub
push
insb
data16
jmp
mov
les
rorb
addb
xor
or
nop
inc
adc
fildll
xlat
xchg
shl
inc
jl
push
or
inc
outsb
mov
clc
jo
fcomps
scas
test
mov
push
add
fstpt
loop
faddl
fcomp
dec
pop
sar
ljmp
gs
cli
jg
jge
add
xchg
xchg
lods
call
push
fcoms
or
ljmp
movsl
xor
jo
pushf
mov
imul
fdivrs
iret
or
lea
std
lret
mov
dec
sub
xchg
stos
sbb
inc
xchg
inc
leave
cli
adc
or
xor
loop
mov
cmpsl
outsb
xchg
shlb
push
std
outsb
or
add
imul
adc
insl
shll
inc
js
jge
mov
adc
ret
rolb
inc
cli
mov
outsb
add
xor
xchg
es
sarb
ret
sbb
into
xlat
xor
jno
cmp
sbb
adc
sar
out
subb
int
pusha
cmp
push
xchg
jle
cmp
or
add
push
add
sub
rcr
sub
int
inc
jbe
inc
and
fmuls
xchg
into
outsb
mov
cmp
test
call
sti
pop
shrb
add
ret
test
ds
test
push
xor
mov
or
and
mov
push
insl
ret
les
clc
ret
cwtl
dec
in
shld
aam
clc
test
popa
into
incb
push
push
int
xchg
insb
jle
pop
dec
test
cli
jl
rorb
mov
jl
xor
xor
daa
out
xlat
lret
push
xchg
xor
and
mov
mov
fsubrs
add
inc
ret
mov
repnz
rdmsr
pop
dec
gs
inc
sbbl
pop
js
push
fsubl
lods
imul
dec
fcmovnu
stos
mov
mov
cld
mov
push
inc
ja
sarb
jae
clc
pop
adc
outsl
into
ret
inc
sub
inc
ljmp
hlt
add
mov
add
pop
pop
cmp
outsl
mov
xchg
lgs
mov
fld
divb
inc
cld
adc
push
inc
xchg
or
jmp
push
adc
pop
clc
pop
in
paddsb
mov
adc
dec
and
dec
mov
aad
adc
into
ret
xchg
add
xor
in
dec
ret
loope
cmp
dec
rcrb
inc
push
mov
mov
or
cltd
add
lea
add
push
mov
inc
jb
out
adc
in
fmulp
dec
pop
jno
push
pusha
adc
clc
jle
inc
jle
insb
inc
or
sbb
or
and
inc
jmp
mov
lods
scas
clc
pop
push
loopne
xor
mov
push
and
and
push
cmp
mov
push
adc
add
imul
call
gs
jae
les
push
pusha
cwtl
sub
push
scas
nop
stc
pusha
xchg
sub
sub
mov
call
add
arpl
fldl
ret
lock
rorl
cmp
inc
and
js
xor
adc
mov
je
xor
aas
sbb
mov
rcrb
fsubrl
rcrl
push
cmp
cs
push
jmp
xor
iret
test
pop
rolb
push
mov
add
mov
and
lock
pop
pop
fs
adc
das
test
loope,pt
sbb
mov
jle
sbb
or
fcmovu
adc
ljmp
rcrb
mov
gs
rcrb
and
pop
inc
push
mov
xchg
fdivs
mov
add
pop
bound
mov
aam
lods
add
push
outsl
add
pop
cmp
pop
aam
popa
xchg
aam
mov
adc
jl
adc
rcll
add
jg
movsl
test
aaa
adc
inc
ds
sub
mov
or
sarl
push
or
sub
mov
mov
arpl
pop
shrl
pop
ret
icebp
cli
jmp
add
xchg
dec
inc
or
lods
insb
ljmp
adc
lods
and
call
pop
mov
push
pop
add
push
out
jp
ret
lea
sub
stc
orb
dec
andb
xchg
dec
mov
lea
add
je
repz
adc
inc
add
push
xchg
int3
sub
add
inc
dec
rclb
add
and
xchg
inc
mov
es
push
js
mov
sub
xchg
jge
push
push
or
add
ret
das
repnz
test
andb
loop
mov
cld
pop
fimuls
adc
cmp
push
sub
and
inc
fcomi
outsl
bound
jae
jmp
mov
mov
inc
outsb
xchg
icebp
out
add
testb
sti
pushl
push
jbe,pt
pop
mov
inc
dec
out
adc
mov
clc
popa
sub
pop
insb
std
push
aaa
sub
adc
stc
das
adc
sub
add
jge
jmp
or
repz
mov
ror
push
xchg
cmp
bound
dec
and
pop
loop
xor
inc
imul
enter
lret
push
push
cmp
and
mov
push
xchg
jp
loope
add
notb
sbb
sbb
add
dec
jl
push
gs
into
or
jl
aaa
sub
into
mov
test
push
iret
adcb
mov
mov
loope
mov
fwait
sub
cwtl
jbe
push
cmp
sub
push
push
cld
sti
in
lods
add
bound
cmc
out
pop
jne
jae
leave
pop
add
cmpb
sbb
inc
inc
mov
pop
add
mov
jmp
sbb
dec
sbb
lret
mov
into
shrb
in
mov
inc
jl
leave
aaa
add
cld
pop
adc
pop
xchg
daa
or
rolb
push
loop
cmp
cmp
rcrl
sarb
xor
inc
pushf
mov
jmp
das
add
fbld
dec
sarb
pusha
jno
pop
xchg
pop
cli
test
cmp
es
add
dec
ljmp
ss
dec
std
adc
or
rcrl
push
jb
add
xor
je
shl
mov
std
pop
jg
decl
mov
in
push
test
insl
or
inc
mov
gs
stos
clc
inc
sbb
mov
or
lods
clc
fidivs
int3
movsb
mov
or
es
in
adc
xor
sbb
inc
stc
movsb
loopne
jp
loopne
lret
push
clc
push
add
cld
ja
mov
mov
shl
add
fs
fildl
loopne
xor
lret
pop
scas
cmp
adc
mov
cmp
dec
push
xor
add
and
int3
push
sar
decl
xor
lea
sbb
xor
pop
push
das
jnp
cmpsb
xor
leave
push
pop
sbb
pusha
shr
jmp
les
inc
push
xchg
and
rol
addr16
nop
adc
lcall
adc
ljmp
lock
faddl
xor
fcmovnu
inc
call
add
jne
clc
xchg
sbb
cmp
movsb
add
aad
ret
cld
mov
push
in
pop
sub
cli
mov
icebp
xor
dec
xor
cld
cmp
jne
push
push
or
out
lcall
js
mov
sub
enter
push
push
jle
mov
lods
dec
sub
inc
sub
ljmp
ss
cmp
inc
test
mov
sub
jl
bound
adc
jecxz
int3
jl
aas
mov
loopne
push
and
aas
adc
push
lods
xchg
shlb
inc
or
mov
mov
je
fs
jae
cli
pop
xor
insb
mov
ffree
popf
jns
lret
xor
inc
ja
pop
ja
insl
iret
stos
clc
and
adc
push
inc
data16
lcall
dec
push
je
jo
addb
enter
mov
and
adc
or
dec
jg
js,pn
testb
cmp
in
inc
jne
and
es
mov
cmpb
call
mov
je
paddq
mov
aam
jl
cmc
sbb
lock
enter
cmp
xchg
out
sahf
or
clc
inc
daa
mov
je
mov
fidivl
or
lods
test
xor
inc
outsl
mov
dec
scas
test
cli
fistpl
sub
xorb
stos
and
arpl
push
outsl
inc
and
cmpsl
mov
test
fs
inc
clc
idivb
mov
lcall
add
fwait
ret
data16
and
loopne
mov
cmp
cmpsb
rcrb
cmp
push
or
ja
lods
jns
mov
pop
mov
sub
push
mov
in
clc
icebp
insl
jge
dec
inc
push
js
mov
or
ret
pop
pop
in
lret
xchg
mov
or
pop
popa
cs
and
push
pop
neg
cmp
mov
add
inc
pop
add
repz
lock
dec
outsl
add
jmp
xchg
mov
hlt
jne
or
pop
dec
stc
xor
mov
and
fsubs
inc
pop
test
sahf
js
push
mov
call
in
cltd
lret
mov
in
loop
inc
cld
and
fsubrl
mov
test
pop
mov
ljmp
add
sti
xchg
das
pushf
shll
adc
ret
ret
adc
mov
jmp
popa
call
gs
pusha
js
mov
xchg
xchg
push
imul
sbb
or
fisubl
and
in
clc
inc
jo
and
xchg
or
add
insb
or
dec
lock
pop
fsubr
sub
ds
push
mov
xchg
cld
popa
pop
movb
mov
jl
testb
sar
jmp
mov
int3
lock
scas
loop
or
or
icebp
mov
inc
gs
subb
jl
adc
dec
sbb
or
sarl
sbb
jp
mov
xchg
adc
cld
push
add
inc
fisubl
test
je
popf
mov
pushf
xchg
jge
insb
push
pop
test
insb
mov
pop
jmp
lcall
js
xor
ja
inc
lds
insb
inc
nop
pop
and
mov
sub
xor
into
je
popa
sub
popa
leave
popa
xor
push
cmp
mov
orl
nop
iret
or
ret
sti
call
inc
inc
int3
jge
pop
push
sub
push
xor
mov
push
add
mov
or
inc
mov
xchg
call
push
sub
insb
inc
cmp
call
xor
hlt
loope
xorb
daa
ret
test
in
inc
adc
test
pop
inc
pop
rorb
adc
and
add
jp
outsl
hlt
dec
dec
cmp
sub
dec
lods
js
adc
test
test
cs
pop
inc
loope
test
mov
lea
repz
jl
and
outsl
mov
fldt
out
mov
add
gs
add
cmp
das
jb
add
jbe
adc
std
movsb
sbb
mov
pop
mov
cli
in
out
cmp
xor
stos
mov
jne
stos
jge
aam
loope
pop
out
inc
fisttpll
cmp
mov
pop
add
fdivr
fcompl
push
stos
sbb
add
pop
aad
mov
mov
jg
mov
mov
and
or
fld
mov
sar
inc
repz
mov
push
mov
test
insb
jne
aaa
pop
dec
or
push
jmp
pop
imul
outsb
inc
adc
mov
or
test
pop
push
das
and
aas
ss
mov
imulb
xchg
xchg
inc
cld
dec
pop
xchg
xchg
outsb
cld
les
jg
movsb
push
dec
sub
push
inc
dec
dec
jmp
leave
sbb
jno
into
mov
and
push
fbld
cld
add
loopne
sbb
add
or
push
inc
sbb
and
imul
int3
xchg
and
mov
jp
mov
adc
add
mov
mov
add
dec
mov
mov
xchg
ret
lods
push
dec
mov
adc
std
and
es
rol
testb
and
xchg
push
rolb
addb
mov
lea
jnp
aam
cmp
push
insb
rolb
decb
shl
fmul
xchg
adc
dec
ret
fmulp
cld
pop
mov
mov
js
jbe
pop
add
inc
cmp
fsubl
cmp
xchg
sbb
inc
pop
push
int3
and
xchg
enter
jg
sub
fmul
shlb
add
jne
push
gs
and
push
ret
cmpsb
insl
adcb
repz
aam
inc
and
pop
nop
test
hlt
sarb
fs
xlat
ret
add
push
sub
jb
fildl
shll
es
dec
aas
enter
inc
lods
cmp
push
inc
xchg
call
icebp
dec
scas
xchg
div
testb
call
mov
xor
inc
pop
pop
mov
or
add
lock
sbb
mov
add
add
stos
sar
in
or
bound
out
ljmp
sub
out
jge
inc
adc
es
pop
add
fimuls
push
test
adc
mov
or
and
lock
inc
int3
int
imul
out
hlt
sbb
mov
shlb
fimull
push
hlt
pop
xchg
mov
imul
shlb
dec
out
jmp
je
cmp
cmc
mov
fs
test
inc
cld
dec
or
push
mov
cmc
lds
dec
sub
sqrtps
mov
out
jle
and
push
pushf
out
clc
mov
idiv
test
decl
rcl
testl
xor
mov
inc
or
mov
jbe
jo
std
ffreep
call
outsl
add
and
nop
xchg
adc
mov
orl
lea
fs
in
push
ljmp
je
shr
scas
addb
push
lock
mov
cwtl
rolb
lret
ret
cmp
cld
mov
scas
outsb
hlt
sahf
mov
add
sar
push
add
or
adc
mov
push
ret
or
es
lret
inc
rolb
and
js
aam
and
rcl
push
sbb
dec
ret
ljmp
mov
mov
cmp
adc
je
xor
ja
imul
mov
push
push
add
mov
outsl
cwtl
outsl
fstps
cld
or
mov
inc
rcll
movsb
mulb
out
pop
push
outsb
xlat
add
dec
mov
sbb
gs
pop
hlt
push
pop
push
insb
push
sgdtl
push
inc
fldl
and
in
and
add
insb
push
or
fbld
dec
orl
int3
jmp
xor
push
xchg
inc
inc
fisubl
std
inc
add
sub
push
subb
mov
push
in
inc
repz
push
add
jge
push
add
call
pushf
loopne
int3
add
xchg
mov
mov
push
mov
cli
ret
add
cmc
mov
jge
mov
and
outsl
aam
outsb
jae
addr16
inc
cmp
xchg
lock
pop
cmp
pop
pminub
mov
push
inc
or
shlb
push
roll
jg
test
subl
and
dec
push
imulb
pusha
mov
sbb
inc
movl
das
cmp
or
cwtl
jmp
inc
inc
sub
push
sahf
inc
out
cld
inc
mov
pop
scas
mov
shlb
or
call
int
xchg
add
jae
pushf
mov
mov
roll
sti
lcall
add
pop
insl
pop
in
jle
lret
hlt
sbbl
mov
xchg
xchg
add
es
adc
es
and
dec
mov
icebp
mov
fdivrs
adc
fsubrs
loopne
test
aam
clc
push
cli
pop
cmp
shlb
gs
lret
mov
adc
push
ret
push
mov
fwait
out
test
sbb
jp
sahf
cmp
push
leave
cli
mov
jle
sbbl
mov
call
insl
jne
add
inc
aam
xchg
or
je
imul
lods
test
and
sahf
int3
add
ljmp
inc
push
fdiv
ret
jge
hlt
mov
orl
sbb
cld
popa
add
xor
or
add
push
sti
mov
scas
flds
xor
cmp
stos
nop
mov
cld
sbb
gs
mov
inc
inc
data16
inc
adc
fdivp
or
mov
cld
ljmp
inc
pop
cmpsb
adc
inc
adc
inc
mov
inc
paddsb
add
xor
cs
pusha
dec
clc
fcoms
fisubs
jbe
pop
push
mov
push
fs
es
sbb
test
mov
adc
add
sbb
and
mov
mov
aas
and
pop
cmp
xchg
in
fs
or
adcl
add
mov
push
jge
pop
lcall
or
mov
push
call
jmp
faddl
and
inc
cld
pop
inc
cmp
and
cld
mov
mov
adc
ret
push
adc
cmp
ror
push
jp
mov
inc
aaa
call
repnz
js
cmp
add
mov
adc
dec
test
jb
push
das
and
push
inc
sbb
mov
xchg
add
test
mov
push
mov
mov
ret
sbb
clc
jmp
fisubs
mov
jae
adcl
decl
decl
into
xchg
mov
std
xlat
inc
mov
adc
ret
test
mov
repnz
mov
and
push
mov
dec
mov
xor
xchg
rclb
jo
jbe
mov
pop
adc
movsb
adc
mov
adc
cmp
loopne
mov
mov
rol
sbb
pop
sarl
lret
pushf
ljmp
pop
fs
pusha
pop
xor
xor
js
dec
clc
fiaddl
and
cmpsb
mov
mov
sbb
jne
out
inc
mov
subl
rorb
adc
mov
jge
jl
pop
mov
leave
mov
jno
pop
adc
rclb
fcomps
inc
sub
cld
add
in
add
loope
mov
xor
test
xchg
push
js
dec
jb
je
pop
sbb
cld
mov
jle
mov
mov
push
xor
in
mov
insb
jl
test
mov
and
dec
and
testb
cmp
jb
je
scas
push
adc
add
rclb
push
pop
push
aam
xchg
js
call
dec
add
cwtl
dec
lock
sbb
sbb
add
xor
cmc
lods
loopne
inc
add
cmc
push
sar
aam
bound
jl
push
loop
fwait
add
call
rolb
and
mov
or
jne
push
aam
outsl
xchg
lcall
add
gs
push
mov
pop
dec
and
hlt
and
sbb
push
sub
or
mov
add
aad
cld
sbb
push
jns
push
aas
sbb
ljmp
lock
and
cmpsl
mov
bound
insb
dec
divb
divb
dec
and
shrb
adc
outsb
adc
adc
in
loopne
add
loop
testb
sbb
sub
mov
adcb
lahf
or
jle
dec
data16
jle
or
xchg
push
push
sbb
gs
and
jg
rclb
adc
pop
js
fnsave
lods
jbe
imul
add
test
mov
lea
in
cmp
or
add
je
je
lret
xchg
pop
sub
je
cli
add
enter
jo
pop
nop
and
cmc
adc
lea
and
mov
and
xchg
ljmp
insb
mov
shrb
xchg
push
inc
push
inc
xlat
into
rcpps
inc
aad
mov
add
insb
jmp
stos
dec
cmp
test
sbb
hlt
insb
js
std
mov
xor
xchg
rcr
in
in
shlb
arpl
inc
pop
jmp
es
js
ret
xlat
jo
xor
movsb
mov
mov
add
adcl
out
outsb
jecxz
and
mov
mov
push
mov
clc
subb
adc
dec
test
push
push
pusha
mov
add
je
data16
mov
cs
nop
or
ja
add
jmp
push
lds
cmpsb
mov
test
add
stos
mov
cld
outsl
fisttpl
add
ljmp
add
xchg
lret
cmp
and
ds
push
cmp
ror
mov
je
jecxz
mov
and
inc
add
lods
mov
testl
mov
adc
push
adc
out
scas
add
call
pop
gs
xor
push
push
test
push
repnz
mov
loope
rorb
mov
rcrb
adc
rcrb
notb
xor
push
ret
mov
cld
mov
ret
psubw
es
fmull
and
call
mov
add
and
adc
add
call
mov
adc
clc
cmpxchg
repz
lcall
dec
mov
sti
ja
test
push
nop
ljmp
movb
call
lcall
mov
lret
pop
popf
orb
leave
adc
adcl
add
push
push
mov
inc
clc
test
mov
inc
fs
mov
inc
imull
call
xor
push
aas
cmc
add
andl
add
or
cli
mov
add
sbbb
mov
mov
mov
mov
add
or
inc
mov
clc
es
mov
cmp
shrb
incb
jp
xor
lret
add
jge
sbb
sahf
cmp
mov
cmp
or
xor
sbb
add
xchg
add
idivb
aad
mov
or
addl
test
ljmp
pop
push
add
sbb
mov
add
push
mov
fisubrs
dec
jg
pushf
test
cmp
sbb
mov
test
std
cmp
lcall
into
ds
pop
gs
in
popa
sbb
mov
dec
xor
pushf
cmp
cltd
cs
call
add
out
mov
jbe
icebp
and
mov
xor
pop
jp
push
inc
cld
pop
call
pop
adc
lahf
inc
xor
pop
push
cmp
cmc
or
push
into
nop
pop
les
jl
icebp
daa
je
js
clc
ss
mov
ss
xchg
push
rorl
adc
or
ds
fs
add
outsb
lock
jp
lahf
movsb
lahf
loopne
xchg
cmp
jne
mov
inc
mov
jae
inc
cld
ret
imul
add
rclb
mov
add
mov
cmp
dec
push
push
sbb
xchg
push
sbb
lret
movsl
or
ss
sahf
int3
sbb
push
insb
adc
out
inc
cmp
pop
or
mov
mov
ja
nop
andl
sbb
push
shlb
rcrb
lock
pop
push
daa
clc
and
inc
xchg
lock
out
aad
clc
jecxz
pushf
insl
or
testb
cmp
and
incl
std
jmp
sti
lock
push
cwtl
je
pop
fmuls
int3
mov
fcoml
test
adcb
pop
push
inc
mov
out
in
mov
dec
mov
jmp
inc
inc
push
or
xchg
clc
outsb
clc
sti
adc
jecxz
cmp
in
pop
test
dec
in
clc
add
leave
add
cmp
xor
push
aad
test
and
xor
std
and
dec
test
arpl
ret
cmp
pop
js
inc
xor
int3
addb
shrb
mov
sub
insb
add
push
jg
test
incb
popf
adc
cmp
pop
ja
arpl
xchg
mov
enter
add
sub
adc
ljmp
outsl
add
movsb
inc
add
pop
imul
inc
pop
les
sub
jg
and
sarl
lret
cmc
in
lahf
push
mov
pop
ljmp
cmp
mov
gs
jle
decb
insl
setle
add
and
push
and
inc
fdivrs
test
xor
mov
pop
andb
inc
push
pop
mov
pop
jne
dec
jmp
push
mov
or
and
sub
inc
and
sbb
cmp
or
push
add
ss
xor
xchg
es
xor
mov
or
or
xor
push
sbb
lcall
inc
pop
pop
lds
lret
ret
cmp
cmp
rcrl
pop
andb
inc
adc
jnp
shlb
push
aam
sti
add
cli
popf
dec
in
adc
loopne
ret
decb
lods
push
and
jl
push
les
and
inc
test
mov
mov
arpl
mov
add
pop
dec
je
incl
out
inc
cwtl
and
das
cli
shll
sbb
rolb
int3
inc
adc
fs
inc
stc
inc
pop
sarl
mov
push
add
mov
gs
hlt
push
mov
test
dec
adc
mov
lret
dec
lods
mov
xchg
repz
call
add
xchg
push
nop
out
idivl
mov
mov
cmovne
pop
cmp
mov
dec
sbb
ljmp
xlat
sub
push
mov
push
mov
das
movsb
shlb
adc
cld
mov
mov
pop
clc
push
or
push
mov
or
mov
int3
cld
psllw
orl
lcall
inc
inc
fmull
loopne
jp,pn
push
lock
sbbb
rcl
and
xlat
mov
pop
and
movsb
fstpl
ljmp
inc
lods
dec
push
addb
jmp
mov
adc
push
je
add
dec
fsubr
cs
or
lret
idivb
psubd
nop
push
inc
inc
adcl
push
jecxz
jmp
or
add
ja
call
fidivrl
aam
push
push
sub
pop
add
mov
fs
leave
sbb
add
adc
mov
and
adc
je
dec
adc
xor
sbb
or
loope
cld
fmul
insb
std
movsl
fidivrs
inc
loopne
push
test
jmp
sbb
or
mov
sbb
push
rorl
lcall
test
add
pop
inc
inc
mov
movsb
xchg
bound
lea
addb
fdiv
dec
add
sub
mov
lea
mov
pushf
popa
outsb
orb
icebp
or
adcl
push
adc
movsb
cmp
movsb
mov
adc
lock
pusha
or
sbb
jb
jne
or
outsl
ss
mov
add
cltd
icebp
daa
add
or
mov
fs
mov
or
add
xor
enter
lcall
mov
push
test
pop
cmpsl
inc
inc
test
pusha
pop
mov
in
enter
jne
cmpsb
sub
test
mov
js
inc
std
cmpl
imul
push
les
dec
or
movsl
daa
dec
bound
cmp
inc
pusha
ss
fnsave
mov
push
and
dec
xor
cmp
push
sub
fs
movsb
mov
inc
divb
cmp
rorb
push
scas
clc
push
jne
mov
mov
mov
outsl
insl
rcrb
rorb
outsb
movsb
stos
jne
and
mov
xor
jle
lea
sbb
mov
or
xor
mov
mov
test
pop
call
sbb
lret
xor
sbb
cmpsb
dec
lods
cs
in
iret
insb
push
cli
hlt
fcomps
test
jp
xor
sbbb
je
lds
in
adc
dec
dec
mov
xor
cmp
es
das
ret
movsb
adc
mov
xchg
dec
inc
sbb
loopne
adc
add
gs
add
hlt
lock
xor
bound
push
dec
orb
subl
mov
enter
xchg
mov
test
sub
dec
sub
insb
lods
xchg
call
mov
lock
fsubrl
sar
inc
addb
push
inc
mov
add
in
sbb
xchg
jge
mov
lahf
fiadds
call
decl
fiadds
test
je
jg
clc
ljmp
add
div
and
pop
movsb
sbb
out
mov
sbb
push
mov
pusha
adc
or
out
inc
jp
sub
rorb
jns
int
jb
sbbb
add
mov
adc
mov
adc
loopne
adc
jge
mov
pop
repnz
xor
and
lods
push
ret
cmpsb
mov
int
inc
outsb
adc
xor
adc
add
loope
cmp
push
push
ds
and
push
cld
dec
and
or
xchg
inc
add
add
mov
add
push
hlt
mov
orb
mov
xchg
divb
out
mov
bound
hlt
sub
mov
rcrl
cmp
jl
fs
mov
sub
and
xchg
sbb
mov
inc
lods
add
int
stos
pop
mov
cmc
decl
rorl
xchg
hlt
inc
mov
aam
add
or
dec
sub
dec
loopne
cmp
test
into
push
jl
push
into
xchg
push
inc
inc
and
mov
fistl
dec
mov
push
orl
inc
xchg
scas
xchg
push
jb
sbb
add
lcall
or
jmp
subb
test
std
xor
jmp
cli
mov
inc
dec
jmp
dec
xor
xchg
mov
addl
mov
mov
mov
jb
cld
or
jecxz
test
dec
lods
push
subl
add
adc
mov
in
call
stos
stos
icebp
push
pop
pop
insb
add
or
and
mov
ss
mov
std
mov
sbb
or
and
mov
xor
mov
enter
inc
jmp
ret
pop
addb
jp
testb
add
dec
mov
cwtl
mov
sub
out
xor
add
add
pop
je
fildl
xor
sub
push
mov
jl
ss
repz
sub
out
mov
fnstenv
mov
adc
mov
pop
rolb
cmp
pop
dec
lcall
dec
fdivs
jl
xor
inc
sbb
or
cmp
xchg
cmc
arpl
jo
sbb
mov
mov
call
adc
pop
or
push
xor
push
push
stos
mov
push
lock
test
push
push
aad
sub
rcrb
pop
add
pop
add
cld
xor
mov
loopne
inc
push
les
or
jle
push
adc
sub
and
inc
mov
lret
mov
or
adc
adc
xchg
into
inc
lds
mov
dec
mov
rclb
or
mov
ror
cmp
push
cmp
movsb
mov
jl
sti
or
bound
dec
adc
ss
call
pop
fidivrl
pop
sub
and
mov
filds
push
in
push
inc
mov
xor
js
dec
lea
jle
inc
cmp
mov
pop
add
popa
xchg
push
fadds
push
ret
sub
aas
or
add
and
pop
lcall
add
lcall
ds
add
xchg
fmuls
inc
sub
jp
dec
test
dec
mov
lods
adc
jl
sbb
and
in
jmp
mov
sbb
aas
mov
ljmp
std
mov
or
jmp
movsl
cmpsb
shl
mov
call
cmp
mov
cmp
pop
push
mov
sbb
push
xchg
inc
shr
push
call
adcl
cld
aam
loope
dec
or
vmovdqa
push
sub
loope
call
fdivl
fs
sbb
cs
push
mov
xor
cmp
xor
data16
fisubl
dec
cli
mov
cmpsl
dec
push
dec
loope
add
sti
inc
add
mov
fwait
add
xchg
and
push
push
and
mov
mov
add
imul
or
jno
out
stos
mov
xchg
pop
fcomps
xchg
aaa
pop
cmp
aas
mov
pop
inc
add
cmp
ja
stc
mov
pop
xor
out
in
push
add
cmpsb
add
hlt
xor
push
lods
or
test
lcall
cli
sub
or
add
mov
push
push
or
adc
rol
sbb
mov
inc
call
lock
ss
mov
into
decb
aaa
inc
or
andb
lock
mov
adc
push
sub
lock
add
xor
add
test
mov
jecxz
aas
or
push
adc
loopne
jae
jecxz
mov
lock
int3
or
inc
mov
ljmp
lea
or
dec
je
push
mov
push
stc
sub
addr16
aam
notl
xchg
pop
mov
dec
xchg
or
inc
mov
shlb
js
leave
ja
dec
jecxz
into
and
or
xchg
loope
aad
inc
data16
sarb
enter
outsb
pusha
mov
aam
popa
push
ljmp
imul
loop
rolb
les
and
aaa
loopne
and
mov
and
nop
faddl
int3
sbb
inc
sub
inc
sub
add
jae
in
push
sti
or
movsb
and
add
test
icebp
shll
je
or
aaa
pop
fdivs
aad
sub
mov
outsb
inc
and
pop
mov
adc
loopne
push
cmp
movsb
leave
cmpsl
adc
pop
push
jl
lcall
dec
dec
xchg
fstl
mov
std
mov
cld
add
int3
pop
cmc
sbb
clc
loop
pop
adc
inc
mov
cwtl
outsb
mov
xchg
int3
adc
adc
adc
adc
xor
mov
xor
xchg
add
push
imulb
test
int3
mov
out
mov
or
mov
mov
imul
adc
decl
sar
mov
loopne
adc
dec
les
in
xchg
push
add
dec
sbb
outsl
shll
cwtl
xor
or
sbb
cld
je
jne
data16
pop
mov
or
mov
adc
add
fisubs
push
inc
test
call
repnz
in
in
rolb
in
pop
fstpl
and
mov
and
xlat
ljmp
push
sub
test
sub
pop
jge
jle
mov
cltd
push
add
push
jecxz
fs
sub
add
test
adc
mov
fidivrs
cmp
das
push
pusha
xor
fdiv
sub
movb
mov
xchg
nop
lea
or
adc
pop
inc
sub
out
or
add
ljmp
pop
nop
test
js
test
pushl
jmp
pop
out
shll
lea
xor
push
gs
xor
lock
pushl
mov
out
aam
jmp
add
jne
out
adc
fs
outsl
push
test
pop
outsl
xadd
or
cmp
inc
inc
xor
or
inc
sbb
out
je
rcrl
push
andb
mov
sub
lods
add
add
roll
xchg
or
insb
and
fdivs
xchg
inc
hlt
fiadds
add
lea
mov
scas
ljmp
dec
jl
call
and
push
or
aam
out
add
aam
mov
rcrb
fsubrs
test
jae
adc
inc
dec
in
insb
and
jno
cmc
ret
negb
or
incl
test
clc
mov
gs
mov
mov
mov
dec
xchg
add
add
insl
ret
jmp
xor
push
hlt
mov
xchg
pop
push
push
test
loope
jo
pop
push
sbb
mov
mov
test
mov
sub
and
rolb
xchg
sub
outsl
adc
adc
fadds
add
mov
icebp
pop
mov
ds
je
mov
test
pop
rorb
leave
pop
cltd
rcll
test
and
pop
leave
lock
inc
push
xor
pop
clc
sub
test
xlat
shlb
xchg
les
jo
mov
inc
inc
loopne
and
add
lods
in
dec
pop
cmp
adc
inc
aaa
aam
outsb
adc
xchg
loopne
and
lcall
or
mov
adc
mov
xchg
cmp
decb
xor
loopne
lcall
cmpsb
rolb
inc
test
cli
sti
js
dec
cld
fimull
ret
loope
jo
lock
data16
in
mov
orb
or
sbb
cli
testb
imul
lret
sub
lock
rclb
mov
add
scas
insb
dec
mov
out
push
pop
pop
stos
jecxz
mov
shlb
push
adcb
stos
cs
orl
mov
jmp
or
cmp
push
loop
fdivr
into
mov
push
or
aam
hlt
lahf
daa
cwtl
adcl
mov
call
adc
ljmp
mov
outsb
xchg
lret
arpl
push
mov
shlb
mov
mov
bound
pop
and
adc
push
jmp
cmp
pop
and
shlb
jmp
dec
stos
pop
psubw
mov
xchg
pusha
jb
je
or
or
rclb
push
inc
insl
mov
inc
sarl
pop
push
sbb
push
lea
push
or
pop
xor
aam
shlb
add
and
mov
or
cmp
addb
mov
inc
adc
jbe
pop
add
mov
enter
sbb
cmp
sub
es
xchg
mov
or
pop
cmp
lock
and
rorb
loop
sub
je
sti
pop
push
push
test
jge
mov
dec
push
pop
add
ja
les
movsb
ret
lods
push
data16
xchg
cmpl
jge
outsl
in
mov
je
push
dec
or
icebp
mov
mov
mov
test
jo
iret
popa
push
inc
xor
xchg
mov
xor
inc
or
sarl
test
insb
dec
mov
jne
mov
fstp
xor
lcall
orl
or
mov
adc
jno
xchg
lret
cmp
mov
jno
mov
xor
add
mov
cmp
adc
js
fs
push
enter
add
dec
mov
fisubrl
cmc
je
mov
cmc
xchg
add
ret
or
rorl
jmp
mov
cmp
jbe
popa
cltd
and
inc
sti
cmp
fwait
jmp
les
mov
movsl
inc
mov
pcmpgtb
je
sti
pop
lods
andl
mov
sbb
dec
mov
inc
lods
ret
inc
mov
sbb
and
adcl
inc
pop
sbb
stos
jo
xchg
aam
jne
mov
stc
sbb
leave
movl
dec
pop
inc
cmp
decl
mov
inc
adc
sbb
push
add
mov
jbe
xchg
pushf
je
mov
int3
mov
repnz
leave
adc
jp
or
mov
stc
jnp
mov
in
or
test
add
ret
jbe
test
je
dec
cmp
comiss
aam
fcomp
cmp
xchg
mov
adc
cmp
jns
ret
aaa
dec
mov
xor
cmp
je
xchg
inc
xchg
sub
sbb
fisubrl
bound
pop
pavgb
mov
add
push
cmp
or
dec
nop
or
and
xchg
nop
cmp
xchg
js
ffree
cmp
dec
movsb
jp
add
mov
cld
xor
mov
rcl
call
lea
js
pop
xchg
push
cmc
cwtl
lods
fnstsw
mov
loopne
cmp
sahf
mov
jmp
ds
les
adc
mov
jecxz
enter
inc
leave
adc
adc
or
mov
aad
inc
es
pushf
push
inc
test
fadd
out
je
cmc
gs
cmp
aam
jle
adc
sbb
movsb
subb
test
outsb
pop
sub
out
add
mov
jbe
adc
outsb
inc
fisttpl
insb
lret
mov
fiadds
movsl
mov
add
jne
push
cmp
cli
adc
and
and
inc
mov
int3
mov
dec
cld
lea
add
cld
shl
je
and
sarb
or
and
inc
jg
inc
xchg
out
mov
inc
cmp
in
cld
add
add
add
cmp
inc
pop
data16
test
add
inc
fnstenv
movsl
push
cmpsb
mov
xchg
aam
push
incb
push
testl
jmp
dec
int3
mov
dec
inc
and
xchg
or
push
pop
ret
dec
fsubl
pop
and
or
inc
scas
jl
pop
cmp
push
je
xor
nop
stc
insl
pop
in
pop
jno
push
xchg
sbb
add
inc
add
scas
xor
mov
dec
mov
prefetch
dec
fwait
aas
sahf
push
mov
xchg
mov
mov
pop
mov
or
fs
pop
push
loopne
and
add
loopne
ds
mov
or
data16
dec
js
rorb
inc
or
repnz
ss
addl
sti
push
push
adc
out
dec
jle
mov
push
sar
mov
in
inc
lock
push
fisttpl
mov
xor
mov
aam
es
incl
dec
lock
test
test
push
ljmp
fisttps
leave
inc
push
pop
or
cmp
pusha
add
push
lods
ss
jle
adc
je
pop
das
cmp
idivb
fsubl
dec
jno
inc
add
add
or
in
dec
in
and
sub
lcall
push
pop
xor
sahf
fwait
xor
stos
push
mov
js
cmc
loopne
jmp
adc
ret
cmpb
push
pop
stos
test
pop
mov
lock
repnz
pop
scas
push
outsb
adc
cmp
data16
pushf
inc
push
test
adc
push
xchg
push
mov
outsl
pop
loopne
jo
dec
je
add
daa
hlt
mov
outsl
test
or
mov
mov
mov
test
js
jo
pop
inc
mov
or
jmp
pop
push
clc
out
fdiv
adc
dec
sbb
push
mov
cltd
pop
loop
mov
cli
pop
sbb
push
addl
sbb
loopne
or
ffreep
mov
cmp
sbb
push
push
mov
and
jb
push
lret
roll
push
lea
ljmp
sbb
and
je
push
std
inc
dec
aam
lret
out
clc
je
jmp
jmp
sti
test
mov
add
jp
push
adc
add
cmp
xchg
mov
lea
dec
rolb
outsb
sarb
fsubs
mov
fsubs
gs
push
lcall
cmpsl
xor
sub
and
je
dec
ret
mov
jmp
inc
or
push
imul
leave
push
divl
aas
adc
mov
add
data16
mov
dec
and
sarb
rcrb
das
fsubrs
jbe
or
test
fidivs
push
addr16
gs
fildl
rcll
dec
adc
mov
popa
pop
lea
cli
mov
push
pop
jle
pop
add
jo
pushf
or
stos
push
pushl
or
dec
jmp
pop
jb
lcall
lcall
add
js
and
cli
mov
leave
icebp
inc
scas
dec
lods
cmpb
lods
dec
adc
les
loopne
enter
test
shlb
and
cli
call
xor
dec
arpl
aas
adc
jg
decb
and
mov
push
dec
fs
mov
sbb
push
ficomps
mov
mov
fmuls
data16
push
push
dec
add
pop
cmc
mov
mov
test
pop
push
or
ror
icebp
decl
test
xchg
add
orl
test
adc
xchg
sbb
gs
andl
ljmp
gs
mov
je
loopne
notb
dec
mov
ljmp
push
sbb
rolb
xlat
in
xor
test
test
fimuls
shll
mov
xorl
shr
cmp
insb
add
mov
ds
test
xchg
sbb
test
out
mov
add
cld
push
cmp
sbb
imul
adc
aaa
push
shlb
repz
adc
aaa
insl
xchg
mov
cmp
pusha
lds
jl
pusha
sbb
test
ss
and
sub
or
cmp
adc
aaa
mov
ljmp
push
xor
mov
pop
push
fiadds
divb
aad
add
pop
in
add
add
and
mov
cmpl
fs
std
je
insb
loopne
fidivrl
dec
xchg
movsb
cmp
pop
jmp
je
fmull
cmp
sub
ds
ret
int3
and
adc
cld
jle
push
mov
cli
sti
mov
subb
xchg
lret
push
jmp
mov
outsb
ljmp
cmp
sbb
inc
jl
and
dec
ficompl
adc
dec
push
int3
add
adc
adc
push
fstpt
jns
add
ficoms
inc
fldt
jge
and
imul
jg
mov
pop
cmp
repz
mov
test
test
jne
sub
push
cmp
aam
loopne
outsb
mov
cli
push
rcr
mov
adc
mov
push
js
fcmovu
clc
mov
xchg
test
test
xor
call
pop
sub
add
icebp
jp
or
jne
scas
pushf
movsb
mov
mov
xor
out
js
mov
lock
lret
sub
dec
and
gs
dec
fisubrl
mov
stos
fadds
add
push
inc
xchg
mov
sbbl
insb
jg
fidivrl
lds
cmp
or
dec
pop
rcll
mov
ret
mov
clc
mov
imul
enter
clc
push
rcr
mov
inc
dec
cmp
xor
adc
mov
test
dec
sbb
and
cld
sub
call
push
xor
mov
fldcw
jmp
xchg
in
es
std
or
inc
xor
add
aam
les
insb
jl
iret
out
stc
xchg
cld
std
je
jge
sub
jbe
cmp
in
jge
pop
inc
push
fmuls
xlat
sub
rcll
mov
sarb
inc
adc
subb
leave
dec
xorb
rclb
push
pop
cmp
inc
sysenter
jbe
or
cli
push
add
adc
lcall
mov
int3
push
or
pushf
xchg
ss
cmp
adc
pop
sub
mov
sbb
and
mov
decl
jg
popa
es
pop
add
jo
test
jp
mov
jo
sbb
and
out
pop
dec
cli
adc
test
xlat
push
je
cmc
inc
add
imul
hlt
fisttps
push
loopne
nop
pop
adc
shrb
adc
adc
ja
add
pop
lock
je
jmp
out
and
std
adc
push
dec
mov
es
or
and
add
in
gs
dec
mov
xor
mov
fiaddl
loope
pop
inc
iret
hlt
rclb
cmp
ljmp
test
in
fs
scas
das
lea
ljmp
imul
push
push
mov
outsb
xor
inc
das
clc
lret
push
mov
fs
mov
and
adc
movsb
dec
add
pop
leave
push
loopne
ss
ret
mov
js
jmp
add
push
mov
test
pop
push
or
and
in
movl
sbb
mov
inc
add
jo
leave
aad
mov
shrl
dec
and
rolb
add
sbb
popf
dec
and
cli
decl
push
push
in
fisttpl
or
mov
in
mov
or
xor
ljmp
les
int3
int3
test
aam
or
shrl
enter
inc
add
pop
jo
mov
add
mov
aaa
sub
rorb
xor
leave
pop
clc
inc
jb
ljmp
mov
xchg
mov
and
add
test
fs
lret
call
mov
jbe
jnp
mov
pop
in
add
mov
ljmp
incl
decb
xor
dec
clc
cmp
xor
je
mov
jge
pop
jnp
mov
adc
cli
jne
mov
ss
gs
mov
jo
push
add
dec
jno
pop
adc
call
mov
jne
jb
or
decb
call
mov
mov
arpl
push
xor
js
loop
add
push
call
cmp
es
or
push
pop
add
loopne
out
cmpsb
mov
adc
mov
mov
mov
mov
add
mov
ffreep
lock
das
dec
sbb
test
test
repnz
ja
call
pop
out
mov
adc
xchg
xchg
fisubrl
cmpl
cld
pop
loop
je
add
push
dec
xorl
sbb
xor
cmp
xchg
mov
push
out
xchg
sub
test
add
lock
call
daa
push
std
push
subps
add
mov
xor
mov
cmp
xor
testb
jmp
fs
adc
cld
xor
insl
les
dec
cld
loopne
dec
and
push
ds
notb
std
add
or
sbb
or
add
subl
push
xchg
in
pop
stc
push
inc
fsubrl
push
pop
mov
xor
mov
ret
mov
decb
sti
aad
adc
out
mov
out
lret
and
addb
add
popa
inc
in
add
enter
ljmp
es
insl
sub
mov
cmpb
cmp
js
loope
mov
movb
and
pop
cmpb
add
scas
lods
cli
clc
mov
bound
rcr
xchg
gs
pop
inc
cld
dec
push
les
adc
popa
push
mov
cld
mov
inc
call
and
fadds
push
push
push
push
es
xchg
hlt
inc
xor
xor
push
fidivrl
push
pop
push
pop
xchg
lret
or
insb
sbb
or
push
adc
mov
push
mov
fistpl
loop
mov
xor
mov
js
pushl
orb
xor
sbb
aaa
fcmovnu
pop
push
jbe
add
push
fcomp
outsb
inc
jo
imul
sub
les
xorb
add
pop
lcall
add
mov
pop
cld
test
scas
call
mov
pop
adc
add
outsb
jmp
pop
xchg
pop
and
test
sub
shlb
sub
push
inc
fmuls
pop
jnp
mov
in
inc
or
mov
jmp
hlt
pop
cmpsl
mov
out
in
pop
aas
pop
scas
mov
sahf
nop
xchg
inc
dec
out
adc
inc
incl
cmc
mov
inc
mov
loop
jo
xor
inc
mov
imul
xor
xchg
lret
pop
mov
test
dec
or
ret
dec
ret
xchg
and
je
pop
add
add
addl
pop
inc
dec
jle
mov
mov
test
cmp
inc
adcb
test
icebp
jg
add
imull
divb
loopne
cmp
or
rol
mov
je
icebp
fbld
or
nop
shlb
test
insb
arpl
adc
movsl
arpl
cmc
test
stos
div
sbb
mov
rsqrtps
inc
push
bound
fs
add
jb
mov
divb
sahf
shlb
push
xor
add
movb
enter
push
stos
adc
sbb
loope
decb
pop
outsb
xor
push
in
xor
sub
push
inc
je
mov
lret
cmpb
xor
call
icebp
mov
mov
mov
ret
dec
mov
xchg
add
imul
or
test
dec
mov
inc
or
pop
mov
inc
out
cli
incl
mov
aam
cmp
outsb
loope
dec
fimuls
test
and
dec
or
in
push
mov
ljmp
inc
js
inc
jmp
fmul
push
add
jg
cmpb
push
int3
lea
sbb
out
dec
pop
add
loop
mov
data16
push
or
outsb
cwtl
mov
dec
sahf
push
iret
insb
adc
lods
test
inc
push
jmp
shl
sub
repz
adc
inc
adc
lcall
bound
cmp
mov
imul
cmc
fcomip
xor
jnp
mov
inc
mov
inc
push
and
jg
pop
jae
push
mov
inc
push
test
jle
jg
movsl
je
inc
loope
ret
setae
mov
add
scas
mov
jp
shr
in
or
js
lods
sbb
addl
rolb
shlb
mov
mov
cmpsb
inc
mov
inc
aas
or
leave
sub
stc
xor
add
add
mov
incl
in
aam
dec
push
js
push
adc
mov
or
iret
pushl
test
js
mov
fisubs
gs
inc
or
ret
incb
fisttps
xor
je
out
jp
and
fcoms
jmp
xor
sbb
int3
add
clc
stos
mov
dec
pop
in
adc
jmp
rorl
testb
adc
dec
rol
pop
mov
fucomip
test
fdivl
test
cmovb
or
push
mov
nop
push
mov
inc
loope,pt
add
mov
pop
ret
lods
sbb
pop
es
jo
dec
pop
ret
lea
cld
jg
dec
fs
or
xor
incl
add
repz
in
sbb
ljmp
fmull
ds
pop
cmpl
incl
insb
mov
adc
out
sarb
push
mov
aam
mov
pop
or
fs
sub
test
imul
pop
dec
leave
jb
lds
add
add
jp
ret
push
call
mov
icebp
outsl
or
or
inc
mov
push
cli
scas
lds
psubusb
mov
rclb
and
add
jbe
repz
inc
mov
adc
cld
adc
xchg
mul
sti
sbbl
inc
sub
in
xor
cltd
cli
add
addl
fisttpl
sub
add
ja
pop
and
out
ljmp
add
add
sub
sti
fcoms
pop
mov
jmp
or
mov
mov
outsb
add
add
mov
ret
cli
mov
inc
push
push
gs
sbb
pop
add
mov
mov
outsl
clc
scas
aaa
or
push
roll
sbb
negl
subb
js
flds
cli
or
push
adc
sub
jno
test
lcall
inc
mov
jbe
clc
les
jp
mov
mov
jb
mov
xor
dec
call
cmp
dec
mov
jp
mov
push
sbb
push
flds
gs
call
sbb
loope,pt
or
popa
pushf
add
adc
jmp
loopne
sub
pop
sub
dec
pop
add
cmp
movsb
cs
and
and
mov
inc
bound
xor
push
clc
push
rcl
mov
addl
movsb
pop
mov
test
add
ljmp
ja
adc
std
mov
lods
and
pop
andb
xor
shll
mov
hlt
mov
dec
xchg
add
testl
inc
sbb
adc
andb
lods
testb
rcrb
js
in
or
lret
shrb
pushf
and
rorb
mov
call
sub
mov
pop
shlb
inc
mov
xlat
jl
xor
and
inc
je
dec
pop
add
jae
scas
add
das
or
adc
lods
shlb
fisubrs
je
je
push
jb
push
pop
or
push
dec
mov
aaa
dec
jl
leave
lock
pop
dec
sub
cmp
dec
push
data16
mov
or
add
bound
imul
fmul
inc
jns
sub
movsl
mov
cld
add
jne
cmp
sbb
in
push
xor
inc
add
stos
imul
cli
push
and
adc
mov
inc
mov
pop
repnz
repnz
std
push
push
inc
xchg
ljmp
jb
ret
outsb
jmp
ret
add
sub
add
push
repz
and
jge
out
ret
incw
cmc
push
jp
inc
je
push
cmp
mov
add
loop
pop
lock
or
add
dec
cmp
into
inc
enter
or
lea
sbb
insb
in
xor
flds
xlat
pop
sbb
push
and
es
sub
aad
bound
jmp
mov
pop
rcrl
roll
mov
andl
or
or
lahf
jmp
inc
loopne
clc
inc
xor
sti
mov
ja
sub
pushl
rolb
sahf
xchg
pop
or
nop
dec
add
jmp
ficoml
push
or
push
inc
add
pusha
push
inc
cmp
cmp
les
nop
rolb
je
shl
rcl
mov
clc
clc
adc
sbb
xor
ret
push
mov
add
sub
cmc
pusha
pushl
and
or
je
stc
fmuls
mov
add
movsb
dec
test
adc
mov
push
adc
or
push
jb
lock
mov
out
jno
stc
dec
jb
push
ds
fimull
sbb
dec
cmp
ja
sub
and
aam
push
fdivp
add
movb
jle
cmp
add
lea
test
movl
es
jg
lcall
dec
xor
sarb
fiadds
test
add
js
lods
push
mov
andl
pop
insb
mov
hlt
jne
fnstsw
outsb
xlat
push
inc
loopne
add
pop
mov
test
inc
dec
outsb
rcrb
lock
das
adc
add
pop
jbe
div
cwtl
jo
push
fidivs
das
subb
mov
pop
mov
test
ja
mov
into
dec
lods
mov
and
addl
cmp
notl
push
or
ret
sub
clc
add
or
adc
std
jbe
testb
lds
inc
dec
out
mov
adc
or
push
jg
inc
rcll
push
sbb
scas
hlt
lcall
hlt
pop
ljmp
push
mov
imul
push
mov
mov
ret
lea
push
push
xor
mov
add
mov
mov
and
cmp
sbb
sbb
mov
js
xor
and
xchg
cmpsl
movsb
adc
ret
inc
dec
mov
call
clc
xchg
sar
add
jecxz
insb
and
popf
mov
lea
inc
loopne
sbb
mov
adc
pop
les
dec
push
push
insb
sbb
stos
cmpb
fimull
mov
mov
push
imul
gs
ds
fcomip
mov
xchg
push
push
inc
or
xor
push
rcl
push
mov
into
xchg
test
jne
mov
add
mov
lret
stc
inc
shlb
pusha
jecxz
fiadds
imul
shlb
test
pusha
mov
fmull
lret
fiaddl
xchg
jp
sub
push
cmp
add
pop
cmp
lea
jg
testb
pop
push
inc
test
push
mov
pop
mov
scas
jmp
outsb
inc
pop
repnz
fisubl
shrl
mov
inc
lea
push
and
shr
dec
inc
cmpsb
xor
sub
mov
add
es
adc
lea
jecxz
adc
push
ja
jmp
lea
mov
into
or
fdivl
jmp
mov
ret
cmp
shlb
mov
pop
int3
push
cmp
push
and
hlt
movsb
testb
repz
push
cmp
adc
xor
ja
and
mov
cld
nop
or
movsb
mov
mov
call
push
sub
loope
sbb
push
add
cmp
add
scas
movsb
push
lods
fidivl
add
dec
fs
mov
adc
in
mov
test
or
pop
sbb
hlt
pop
pushl
and
clc
outsl
aas
sbb
roll
fucomi
mov
push
mov
and
mov
mov
ds
push
orb
dec
ljmp
adc
push
cld
push
and
jbe
cli
sub
testb
sbb
arpl
and
mov
push
adc
push
sbbl
scas
pop
lea
sbb
lcall
mov
sbb
repnz
jbe
popf
push
push
push
pcmpgtb
lock
sahf
add
dec
push
push
push
sub
mov
inc
xlat
add
mov
xchg
jge
pop
xor
sub
pop
sbb
icebp
add
aaa
adc
mov
or
dec
jae
and
pop
std
inc
sbb
sbb
jb
in
andl
test
mov
sub
mov
sahf
mov
js
movb
pop
test
roll
push
cltd
mov
sub
pop
pop
ret
sbb
clc
push
movsl
xorb
add
sub
pop
dec
mov
mov
xor
push
add
or
cmc
in
push
into
mov
adc
daa
pop
jne
int3
push
sbb
sbb
inc
dec
nop
cld
xchg
and
mov
or
add
ret
je
cmp
push
mov
or
adc
and
test
xchg
adc
js
mov
stos
lret
push
pop
fdiv
pop
add
inc
xor
and
out
out
and
mov
inc
loope
mov
xor
or
inc
push
sub
jmp
jne
add
frstor
ficomps
mov
je
mov
mov
test
sbb
pop
repz
fsubs
and
mov
int3
insb
mov
ljmp
inc
and
push
gs
sbb
call
mov
rol
orb
push
shlb
ds
test
adc
adc
and
sbb
inc
in
cmp
addr16
xorb
and
sub
push
pushf
dec
inc
pushl
lret
xor
shrb
pop
push
adc
sub
outsb
call
push
dec
and
pop
fldenv
mov
xor
loopne
lods
push
sarl
xchg
adc
mov
add
lock
push
add
mov
das
sbb
push
jnp
pop
sub
mov
movl
test
aam
mov
decb
shr
sarb
xor
je
test
subb
test
jns
push
adc
or
test
rcl
xchg
jecxz
aam
pop
shll
sub
inc
adc
pop
mov
or
neg
movsb
mov
jo
xor
push
adc
adc
flds
sbb
add
sarb
dec
pusha
into
rorb
aam
add
push
push
adc
out
fiaddl
pop
xor
je
int3
test
stc
xchg
ret
push
or
push
lret
push
roll
inc
mov
and
push
push
fsubrp
and
adc
mov
outsb
or
call
scas
int3
adc
inc
add
scas
sub
fs
incl
mov
cmp
cmp
xor
mov
cmc
adc
mov
dec
sub
fistpl
popf
adc
jge
test
in
jae
sti
sbb
test
mov
push
loop
add
jle
jmp
jge
adc
adc
dec
test
dec
scas
call
imul
pop
or
cwtl
ljmp
loopne
jbe
clc
add
lcall
xchg
lcall
xchg
mov
xor
push
xchg
mov
and
or
dec
test
and
in
jne
mov
cld
cmp
mov
and
repnz
mov
sarl
cmp
rolb
inc
call
shr
repnz
paddq
test
in
cmp
shrl
or
push
pop
add
idiv
push
pop
and
dec
xor
addr16
hlt
xor
mov
ds
add
lcall
lods
push
es
je
push
sub
push
add
xchg
rclb
repz
mov
ret
push
add
ljmp
jb
popf
dec
mov
inc
clc
repnz
cmp
or
xchg
push
testb
addr16
pushl
and
sub
or
mov
add
lea
scas
add
nop
sbb
mov
pusha
or
jae
pop
pop
push
jo
jnp
push
adc
sbb
mov
jb
mov
shrb
and
or
push
and
outsl
and
out
xor
mov
pushf
cmp
mov
imul
test
pop
mov
aam
or
or
adc
add
pop
pop
test
add
rolb
jle
clc
push
test
cwtl
jae
in
push
mov
pop
incl
ret
pop
dec
cwtl
mov
test
mov
jno
subl
negb
and
push
mov
pop
inc
dec
jg
mov
cmp
arpl
mov
pop
or
add
jmp
mov
cld
or
pop
pushf
call
add
push
jg
daa
or
ficomps
cmpsb
pusha
les
push
subb
es
push
imul
test
sub
sub
incl
shlb
push
xor
and
jmp
adc
es
cld
in
adc
add
les
adc
loopne
rclb
jo
mov
hlt
sbb
aaa
nop
mov
rcrl
xor
je
xchg
pop
cmp
cmp
xor
mov
jo
popf
push
push
pop
dec
push
ss
jmp
pop
nop
sbb
cmp
fs
and
mov
or
sbb
xchg
dec
dec
cmc
insl
ret
xorb
adcl
ljmp
loopne
lock
mov
cmp
jmp
outsl
sbbl
ret
mov
out
mov
and
js
mov
out
sbb
cmpsl
or
inc
inc
and
xchg
push
sahf
mov
lock
out
fdivrs
cmp
mov
std
cmp
xor
imul
xor
fs
mov
cmp
push
int3
jge
mov
jle
dec
adc
dec
or
cs
or
and
mov
les
add
push
pop
test
mov
mov
cmpsb
fmuls
nop
lahf
es
gs
cmp
xor
dec
and
xorb
mov
dec
push
cmp
lock
stos
jae
add
loop
dec
test
add
or
push
aas
cli
mov
mov
or
insb
xchg
or
jle
cmp
stos
clc
add
push
rorb
add
out
push
add
cmp
push
add
add
clc
push
or
into
cmpl
pushl
xchg
sub
mov
xorl
stc
jecxz
inc
imul
mov
test
cli
pop
xchg
mov
rolb
pop
sbb
add
rcrl
les
daa
add
push
mov
mov
sbb
test
daa
cs
ret
out
push
cmp
jmp
aas
pop
inc
loopne
push
push
or
sbb
pop
shlb
loopne
pop
push
stos
jb
mov
test
cli
imul
das
mov
jo
adc
pop
insb
xor
dec
outsb
bound
cmp
or
xchg
add
mov
push
stos
sub
push
lret
cmpsb
inc
inc
aas
xchg
mov
push
jae
add
shlb
pop
mov
push
inc
jb
bsr
fwait
push
xchg
xchg
test
rol
loop
push
push
pop
lret
cld
jge
aad
adc
add
xor
js
or
imul
inc
movb
mov
je
rorb
adc
ljmp
sahf
mov
stos
cmp
ds
sub
cmp
or
fsts
sar
jmp
mov
rol
call
imul
push
icebp
jge
push
or
mov
ja
jle
adc
inc
divl
dec
out
mov
call
or
test
jg
jecxz
mov
adc
mov
mov
and
pusha
pop
push
mov
sub
mov
in
sbb
push
mov
adc
std
lock
mov
test
inc
mov
and
sub
insb
loopne
mov
adc
clc
cld
pop
call
mov
int3
jmp
cmpsl
mov
and
or
add
xchg
push
add
addb
jmp
lods
inc
lcall
jb,pt
dec
pop
fisubrl
xchg
inc
inc
mov
adc
sbb
or
stos
rol
dec
xor
push
push
pusha
test
lea
incl
adc
cld
sbb
jmp
test
mov
pop
in
adc
sbb
push
or
mov
or
ja
test
test
in
fadds
call
inc
xor
add
bound
jbe
addl
mov
xor
and
inc
out
ds
cs
call
or
xchg
mov
xchg
sahf
sbb
loopne
mov
aad
movsb
add
pop
inc
adc
push
sti
or
ljmp
ds
push
dec
lahf
sub
add
ror
lds
sahf
adc
je
add
lea
xor
jmp
or
shlb
sti
les
push
or
enter
push
inc
je
test
shrb
sub
push
add
mov
daa
ret
inc
hlt
in
mov
outsl
adc
je
fs
bsf
lea
cmpsl
push
cmp
cli
sbb
call
dec
loope
dec
push
mov
sbb
testb
incl
push
push
adcl
mov
popf
inc
mov
jmp
cld
pusha
add
xorb
ss
rol
loop
add
xchg
std
in
mov
pop
in
into
inc
xchg
mov
std
xor
push
ds
push
and
sbb
add
mov
mov
fisubrl
inc
pop
pushw
dec
fsubs
mov
sti
js
dec
mov
add
add
jne
in
pop
shll
scas
adc
add
or
inc
ljmp
inc
clc
xchg
mov
cld
fs
mov
inc
rclb
add
inc
std
lea
mov
cli
xchg
notl
sbb
bound
add
and
lods
add
cwtl
push
outsb
adc
adc
addl
pop
mov
insb
stos
mov
in
ss
sahf
adc
clc
fadds
xchg
push
mov
dec
lods
or
sub
jbe
in
arpl
mov
push
mov
jne
sub
notl
enter
shrl
pusha
call
sbb
fs
inc
push
xchg
xchg
sbb
jno
push
mov
push
xchg
lock
push
cmp
xor
imul
mov
insb
add
data16
jne
or
lea
fmull
imul
frstor
arpl
jmp
test
ss
fcoms
incb
test
push
jnp
cmp
mov
ss
push
das
ss
test
cmpsl
add
or
add
mov
leave
add
lods
fwait
sbb
idiv
push
out
fsubrs
xor
out
xchg
jmp
jle
int3
movsb
div
pop
int3
sub
inc
xchg
shlb
pop
ror
or
insl
mov
stc
jmp
out
xor
sti
ss
mov
inc
shrb
sbb
shlb
cmp
pop
shl
out
inc
stos
movsb
push
xor
xchg
or
sar
test
dec
cmpsb
or
dec
rclb
and
test
inc
mov
mov
push
gs
sbb
xchg
in
hlt
cmp
adc
mov
mov
lods
pop
cld
call
ret
gs
xlat
push
mov
mov
push
add
xor
mov
test
jno
popf
inc
shlb
adc
dec
cmpsb
stos
jo
clc
jnp
and
cmp
push
call
je
adc
adc
push
sub
or
jmp
xor
push
cwtl
jmp
push
and
adc
jecxz
adc
jnp
iret
add
in
or
lods
in
cli
and
lea
inc
mov
mov
ja
das
cmpsb
mov
pop
mov
cmp
jle
cli
fistps
jmp
fs
dec
inc
int3
adc
mov
pop
push
add
mov
test
xlat
in
push
pop
pop
loop
sti
mov
test
cld
fcoms
cmpsb
jmp
and
inc
mov
pop
mov
int3
push
fdivrs
pop
push
pop
ret
movsb
fstp
and
and
jbe
sub
pusha
inc
sbb
mov
aad
pushf
add
dec
aam
cwtl
cmpb
js
push
lcall
jnp
or
jl
stos
add
mov
xchg
fimuls
xor
sub
push
addl
aam
xchg
test
inc
in
hlt
shll
xor
or
sbb
sbb
mov
cld
hlt
fucomi
mov
lods
incl
mov
cmovae
lahf
ret
jl
loopne
mov
push
add
in
in
inc
cmp
popl
mov
rcr
or
cwtl
add
dec
loop
jb
je
jne
pop
push
xlat
cmpsb
push
adc
or
jo
jmp
push
stos
xchg
or
incl
sbb
pop
hlt
dec
sbb
dec
pop
cmp
ljmp
notb
fidivl
imul
sbbl
or
xor
add
jle
orb
fiaddl
pushf
mov
inc
mov
mov
adc
nop
fiaddl
test
mov
pop
in
test
cmp
sbbb
aaa
mov
adc
xor
add
fcomps
pop
or
xchg
sbb
stos
mov
mov
ds
clc
inc
xchg
or
push
inc
xor
stos
pop
in
inc
data16
sbb
loopne
shrb
jo
shll
adcl
xor
push
dec
jp
loope
dec
int3
pop
xchg
cmp
fdivrs
mov
call
inc
mov
js
imul
mov
in
pop
aas
cmpb
fcmovb
fdivr
int3
pop
imul
nop
gs
push
fsub
push
data16
shld
cmp
loopne
add
popa
outsl
test
mov
pop
jns
movsl
loopne
sti
mov
test
movsb
push
lea
fistps
or
aam
sbb
outsl
adc
cmp
pop
xor
mov
inc
ret
adc
pop
push
test
lods
adc
std
aam
adc
and
je
rolb
xor
pop
dec
ljmp
fsubs
enter
fcompl
and
mov
xchg
inc
lea
push
sar
es
sti
xor
sbb
add
loope
hlt
lds
je
xor
inc
cld
pop
mov
xor
aaa
xchg
or
push
mov
sbb
clc
aad
out
or
call
push
push
out
sar
adc
ret
repnz
sbb
or
mov
dec
push
dec
push
je
or
pop
mov
cmp
aam
sub
sbb
fmull
push
sahf
xchg
out
enter
addl
leave
lods
pushl
jle
inc
mov
inc
mov
add
cltd
cmp
or
in
add
test
out
call
and
and
inc
pop
mov
jle
adc
jmp
iret
inc
mov
lods
scas
into
and
push
movsb
or
xor
pop
adc
add
insb
sub
test
adc
xchg
mov
je
add
sbb
ja
sarb
lock
cmp
or
sub
push
adc
push
insb
std
inc
mov
in
fsubr
mov
mov
repnz
rcrb
int3
adc
pop
orb
xor
out
mov
pop
loopne
dec
ret
mov
inc
push
addl
ss
test
dec
pop
dec
add
xchg
pop
xchg
jle
adc
or
xchg
aaa
cmc
das
dec
mov
or
inc
leave
cld
test
cld
sbbb
inc
lds
mov
jp
fisubs
mov
std
out
xor
clc
stos
sbb
add
sub
inc
int3
and
fdivs
mov
cs
stos
xor
adc
mov
xchg
push
outsl
xor
rclb
and
lods
dec
outsl
loop
or
pop
mov
mov
xchg
clc
mov
hlt
fs
adc
pop
ret
xchg
or
mov
bnd
sahf
ljmp
jb
cmp
mov
sbb
mov
cmp
insl
mov
push
push
pushf
arpl
mov
mov
adc
pop
inc
test
subl
pop
and
les
adc
lock
and
push
add
mov
shlb
mov
jb
mov
mov
mov
adc
int3
jb
pop
adc
cmp
mov
nop
push
and
mov
add
or
arpl
jne
mov
mov
xor
cwtl
add
dec
sbb
lock
lock
jg
and
loopne
cmp
or
add
and
mov
xchg
ficoml
rorb
cwtl
jo
dec
dec
push
inc
mov
add
pop
out
sub
test
or
add
push
movhps
leave
jo
dec
mov
inc
test
mov
daa
outsl
cld
push
add
cmp
inc
addps
call
mov
scas
rcrl
mov
inc
mov
outsb
loopne
data16
xchg
loopne
cmp
pop
movsl
incb
fsubr
adc
sbb
mov
cmpb
movl
adc
dec
cmp
push
test
jg
and
call
cmp
aas
add
jmp
pop
jbe
loopne
mov
test
mov
add
pop
mov
sub
mov
and
mov
ljmp
rolb
nop
stos
dec
cmc
aas
or
inc
push
fmuls
aam
test
mov
dec
or
inc
in
inc
push
and
aad
dec
cli
outsb
int3
loopne
ss
cs
ja
lahf
and
mov
cmc
dec
mov
jnp
inc
mov
pop
inc
fwait
push
test
ret
add
pop
jecxz
es
clc
jmp
push
rol
pop
pop
dec
repnz
adc
or
cli
push
sub
xor
add
jg
add
loopne
lea
inc
and
pop
lcall
mov
xchg
dec
cmp
fld
inc
adc
inc
inc
jl
je
cmp
call
mov
movsb
lgdtl
pop
inc
int3
or
out
outsb
inc
add
jle
adc
clc
lcall
push
fs
je
test
mov
lds
pop
aas
rclb
je
mov
test
cs
mov
rcrb
out
imul
add
shrb
sbbb
pop
sub
xor
adc
daa
mov
push
inc
int
dec
adc
push
cmpsb
add
push
outsb
in
pop
xchg
sub
ret
insb
inc
sti
jne
xor
inc
pop
or
add
lock
push
push
mov
push
push
ret
test
jmp
shll
lret
call
sbb
hlt
mov
fisttpl
or
jmp
adcl
pop
int
stos
int3
fbld
ja
out
js
dec
enter
iret
inc
jns
fcompl
out
out
loopne
jmp
addr16
aas
mov
sbb
pop
and
dec
push
test
add
or
clc
dec
push
pop
shlb
outsb
mov
sbb
and
mov
add
cltd
les
mov
mov
and
add
pop
int3
adcl
adc
shll
jp
xchg
in
pop
in
rolb
and
in
pop
pop
dec
sub
incb
adc
dec
jecxz
pop
jo
pop
stos
mov
pop
gs
and
clc
pop
inc
loop
cmc
mov
sbb
mov
lret
push
add
inc
pop
js
and
in
in
loopne
outsl
or
fst
cmp
inc
and
out
popa
push
je
test
test
shll
fdivrp
fdiv
fisttpl
mov
add
test
dec
inc
inc
inc
sahf
loope
icebp
repnz
sar
notb
out
fcom
or
je
aaa
clc
mov
inc
pop
sbb
jne
daa
cmp
icebp
int
mov
fwait
add
pop
mov
out
inc
xor
mov
dec
jmp
add
xor
fs
dec
pop
int3
sbb
out
mov
sub
mov
push
int3
shr
std
loope
das
and
incb
jecxz
and
push
aam
scas
add
cmp
add
mov
add
mov
addr16
or
ljmpw
jnp
dec
lea
or
push
call
or
ss
mov
push
leave
scas
push
mov
ret
add
push
or
mov
push
cmp
mov
movb
js
or
outsl
adc
inc
pop
jp
adc
inc
pop
sub
ret
mov
or
mov
or
jo
push
lea
or
shl
popf
cltd
xor
sbb
pop
mov
inc
mov
pop
nop
add
lea
xor
cmp
add
loope
loopne
stos
ficoms
lret
push
push
mov
mov
push
lret
adc
push
mov
pusha
add
push
sbb
mov
inc
outsl
cld
xchg
push
xlat
jge
adc
mov
add
sbb
int3
adc
add
es
outsb
xor
aaa
or
mov
je
sbb
ljmp
rolb
mov
dec
mov
push
cli
fmull
sbb
mov
push
add
cli
cmp
add
xor
popa
adc
xchg
or
lea
js
xchg
fistl
inc
fcoml
or
cmp
mov
ss
xchg
gs
jecxz
cmp
xchg
dec
or
cwtl
sbb
add
mov
js
push
int3
stos
in
je
jl
jecxz
jb
mov
into
adc
push
outsl
lock
push
fistl
mov
mov
lcall
inc
std
pushl
dec
sarb
adc
adc
push
cmpsb
cmp
loope
ret
and
jne
stc
push
cld
add
dec
test
sbb
mov
mov
in
mov
mov
ds
je
lock
or
test
mov
pop
push
jle
mov
adc
add
push
arpl
jbe
call
add
push
or
repnz
rorb
insb
sbb
clc
or
sub
cmp
pop
cmp
sub
xor
clc
inc
jmp
sar
mov
mov
jne
ret
cmp
gs
addl
or
push
test
add
rorb
cmp
in
and
out
clc
imul
and
loopne
inc
push
sbb
push
imul
sbb
icebp
ss
scas
ja
push
mov
insb
mov
jmp
mov
xchg
sub
sahf
add
add
pop
jbe
dec
test
adc
scas
cli
clc
or
dec
inc
push
adcb
jne
outsl
ret
inc
pop
mov
jmp
fbld
loopne
sbb
sbb
paddd
or
lods
decl
shll
mov
push
movl
add
pop
add
lret
or
jo
pusha
jae
and
shlb
fistps
pop
jne
add
cmpl
in
adc
test
out
lock
mov
add
dec
rcrb
dec
adcl
xchg
cmp
jp
ljmp
xchg
and
xor
mov
imul
jmp
mov
int3
lret
test
repz
pop
lock
cltd
and
shrb
jecxz
mov
or
mov
into
nop
fsubp
movups
ss
mov
jl
pop
ret
push
push
adcl
xchg
sahf
rolb
mov
push
mov
inc
inc
mov
imul
cli
dec
sub
xchg
cld
int3
test
lcall
fcomps
push
arpl
add
xor
clc
cmp
ds
fldt
cmp
xchg
mov
mov
sti
jno
cmp
sub
lods
hlt
push
jae
or
outsl
jg
dec
mov
jmp
dec
sbb
loope
pushf
fimuls
rcll
xor
movsl
adc
test
pop
push
fimuls
adc
lods
push
mov
and
jbe
fs
jle
addb
xchg
int
dec
gs
and
test
nop
and
mov
dec
push
out
movsb
or
jp
les
mov
or
pop
dec
inc
jne
outsb
cmp
xorb
inc
xor
aam
dec
loop
mov
inc
std
sbb
rclb
cltd
xor
or
lods
clc
scas
pop
out
aam
sarb
dec
orl
fisubrl
dec
outsl
mov
or
arpl
fisubl
aaa
mov
push
dec
cmp
adc
inc
xchg
roll
lea
and
add
nop
jo
and
cmp
loopne
into
jmp
sub
sub
jb
js
roll
mov
add
inc
outsl
insb
or
push
add
pop
cld
nop
ljmp
jp
imul
add
and
jl
pop
add
push
pop
cli
sub
ljmpw
cltd
les
nop
push
loop
aas
insl
inc
and
inc
insb
jl
cmc
mov
cmp
adc
sbb
popf
or
or
rcl
push
xchg
les
adc
xor
adc
xor
pusha
loopne
mulb
and
cld
subb
push
enter
cltd
jb
incl
and
jbe
mov
insb
mov
jne
push
pop
test
mov
jb
call
mov
jl
mov
je
pop
xor
mov
jge
push
fidivs
push
int
mov
push
mov
inc
inc
cmp
into
pop
mov
imul
std
clc
mov
inc
test
ds
add
mov
jo
add
add
mov
adc
dec
adc
js
inc
push
cld
je
incl
jmp
or
push
or
pop
jmp
sub
scas
dec
add
shlb
jbe
cmp
mov
add
dec
pop
je
in
dec
fsubs
and
pop
inc
inc
rol
xor
int
xor
xchg
xlat
xchg
ret
lea
mov
jl
xchg
out
mov
incb
lea
dec
shrb
cmp
mov
adc
mov
testb
pop
aaa
add
adc
fstpl
sub
insb
cld
out
or
xchg
lock
push
leave
add
cmp
andl
mov
in
lcall
outsb
xor
mov
dec
roll
dec
and
ds
adc
inc
shlb
jo
lock
int
jge
addb
mov
and
mov
sbbl
adc
jns
out
push
mov
sub
jo
xor
sarb
push
orl
add
mov
test
add
js
dec
call
xchg
es
pop
or
jo
ja
lods
xor
push
sub
mov
rorl
or
jb
pop
or
aam
gs
jmp
pusha
and
adc
scas
popa
into
pop
push
gs
mov
std
movsl
add
push
cld
aaa
mov
sub
add
mov
xor
adc
cld
fsubs
push
sbb
int3
insl
mov
lds
pusha
in
mov
lea
je
cli
mov
sub
ljmp
jne
lods
mov
shll
jg
int3
jbe
fs
xor
cmc
ljmp
pop
adc
cmp
dec
xor
imul
or
call
rorl
rcrl
cld
sub
ss
inc
jmp
movsb
mov
jmp
sub
lock
call
jae
push
cmp
insb
ret
fcoml
fcmovnb
flds
cs
add
sbb
inc
add
add
and
popf
int3
add
test
stos
lock
pusha
or
lods
test
sub
adc
xchg
cmpsb
hlt
aas
push
cmp
dec
jbe
add
xchg
call
xor
dec
inc
leave
adc
inc
cld
fucomp
inc
jg
mov
clc
mov
pop
in
inc
std
insb
or
enter
adc
mov
and
ja
dec
mov
add
cltd
insb
and
xor
inc
aam
sub
loopne
dec
pop
scas
cli
sbb
lock
xor
adc
addl
lods
pop
bnd
mov
mov
xchg
ja
push
into
out
push
and
sarl
dec
in
loop
mov
jmp
aas
sahf
inc
aam
stos
pop
fldt
push
add
cmp
faddl
mov
js
xchg
rolb
dec
sub
push
cli
xchg
jge
aad
dec
push
enter
test
std
test
test
pop
stos
add
push
xor
sarb
cmp
jle
add
lods
xorl
push
xor
minps
mov
test
or
push
cld
inc
cli
sbb
inc
dec
mov
cli
and
incb
sahf
rolb
mov
cmp
movsb
xchg
inc
and
shlb
sub
je
sub
push
je
lcall
inc
stos
cmpb
push
adc
lock
or
in
add
add
jbe
ljmp
add
xchg
call
stos
cld
mov
and
lods
je
or
adc
jns
xlat
inc
mov
jne
mov
sbb
adc
inc
or
movsb
mov
push
jne
inc
add
add
mov
push
mov
test
dec
iret
popa
push
add
outsl
push
aas
push
xor
xorl
idivb
pop
add
out
mov
mov
push
mov
nop
jmp
loopne
inc
adc
or
mov
lea
mov
clc
push
sbb
int3
pop
mov
in
dec
imul
das
inc
mov
or
inc
fcom
mov
aad
pop
inc
adc
clc
jmp
inc
and
popa
test
decb
lock
ret
cmpb
mov
mov
dec
inc
sbb
mov
clc
fs
mov
sbbb
mov
or
inc
inc
cld
pop
dec
test
aas
add
sub
rolb
loop
mov
and
push
hlt
inc
pop
add
je
lock
clc
adc
mov
cmp
leave
rorb
cmp
ds
cs
mov
sar
add
push
inc
xor
jb
lea
mov
mov
fs
push
fldcw
sti
idivb
xor
rclb
adc
mov
idivb
test
in
push
mov
push
add
mov
add
cltd
or
int3
dec
imul
push
fcoms
jo
push
lret
mov
jge
mov
das
jle
add
push
mov
or
aaa
mov
std
je
push
mov
jmp
and
sarb
inc
dec
lea
orb
and
mov
pop
dec
mov
mov
leave
loop
daa
ljmp
gs
jle
aam
pop
ss
push
push
subl
idiv
scas
call
and
cmp
xor
btc
std
mov
xchg
cmp
jae
cs
ds
negl
pop
pop
fldl2e
andb
cmp
imul
loopne
cmp
adc
push
cmc
pushf
test
sbb
mov
iretw
cmp
pop
xor
pop
jge
outsl
cld
test
shll
push
xor
je
in
stos
xchg
shlb
lock
xor
je
in
pop
or
outsb
pop
ret
xor
in
sub
cmp
xor
cmpsl
add
leave
cmp
in
jl
xchg
cmp
lcall
jl
shrb
lret
inc
ret
sbb
out
jnp
mov
or
loope
xor
or
xor
pusha
sti
andb
pop
clc
nop
test
movsb
push
insb
lret
xchg
test
jbe
repnz
call
add
jmp
nop
jne
les
inc
cs
ljmp
mul
jmp
cmc
xchg
pop
mov
pop
cld
fiadds
test
mov
inc
inc
popf
jl
sbb
add
xor
sarb
push
pop
push
jae
je
in
test
mov
in
int3
xchg
arpl
or
popa
aam
inc
pop
cwtl
push
enter
in
fsubl
hlt
das
xor
test
das
push
jo
mov
cmp
stos
movsb
xchg
call
ljmp
cld
push
mov
and
mov
push
mov
jmp
aas
mov
out
inc
sbb
cmpsl
ljmp
add
cmp
sti
pushfw
mov
mov
push
cli
call
aas
mov
push
insb
jg
ret
fs
pop
push
sti
push
inc
sbb
imul
jns
mov
sbb
inc
or
fsubrl
loope
les
std
push
mov
add
dec
mov
stos
aam
cmpsb
icebp
push
rorb
loopne
adc
add
xor
shlb
call
pop
cmp
sbb
mov
pop
cmp
cmp
test
lds
testb
cli
cwtl
adc
add
add
push
hlt
mov
cmp
shrb
add
inc
sti
incl
roll
negb
int
test
test
add
fnsave
jl
test
into
dec
inc
jbe
shrl
push
call
jmp
mov
jmp
repz
psrlq
call
test
dec
pop
addb
lcall
xor
call
cld
dec
test
movsl
aad
mov
aam
out
jp
mov
mov
or
pusha
mov
rcll
cmpsb
std
arpl
mov
out
mov
mov
lea
bound
fisttpl
movsb
pop
dec
sahf
fdivs
gs
and
test
pop
jmp
push
std
dec
xor
movsb
rorb
dec
out
std
jo
outsl
das
sbbb
lret
add
cmp
mov
jne
inc
xchg
ss
cli
imul
mov
nop
adc
and
in
xor
and
cmp
cmp
dec
mov
jl
in
lret
push
aam
ljmp
and
xor
push
popf
mov
push
mov
les
sarb
faddp
inc
jg
push
loopne
test
inc
test
push
lea
push
adc
jb
cmp
loope
jne
add
sbb
or
xchg
pop
adc
in
orl
or
sub
mov
sbb
cli
pop
dec
es
jno
test
mov
es
out
mov
lods
sbb
sub
dec
mov
add
and
fsubrl
scas
xor
loop
mov
lea
jg
loop
or
adc
js
cmpsb
lock
add
inc
and
and
xor
gs
sbb
push
push
call
xor
dec
cmp
fs
add
clts
mov
je
or
in
dec
sbb
outsb
ljmp
push
inc
mov
adc
adc
add
cwtl
and
inc
test
push
jo
pop
cmp
mov
pushl
mov
ret
mov
or
hlt
scas
push
shrb
les
test
or
add
or
subl
movmskps
std
sub
not
add
scas
cmp
mov
leave
clc
into
and
mov
rolb
mov
pop
sbb
add
les
lea
test
je
inc
lods
adc
push
push
enter
jmp
call
int
aaa
dec
sub
dec
jp
lock
lea
in
jne
or
add
mov
es
int3
or
push
mov
push
aam
rorb
jl
dec
push
sbb
data16
push
push
jge
pop
mov
rclb
inc
pop
add
in
mov
mov
cs
shll
and
pop
in
xor
mov
jg
mov
ret
jo
loope
jno
stos
rcrl
dec
imul
mov
shrb
or
push
enter
clc
hlt
punpckhbw
aam
shlb
std
jg
lock
jge
xchg
or
stc
les
push
cmpsl
cld
xor
jp
fidivs
je
cld
xchg
das
push
add
or
in
movsb
mov
lcall
pop
fildll
xor
xchg
jb
orb
ss
xchg
push
add
or
popf
mov
repnz
jmp
sub
enter
lea
es
sbb
jmp
stos
push
test
mov
xor
insl
insb
and
dec
scas
sbbb
adc
je
or
jo
sbb
mov
xchg
lds
jmp
pop
pop
shr
loop
iret
push
mov
xchg
xor
mov
loope
ficomps
push
jg
shrb
mov
orl
outsl
popw
loopne
xor
xchg
les
mov
addl
out
je
xor
imul
and
cmp
es
lea
mov
ret
jle,pn
sub
fcmovb
push
mov
push
clc
pushf
add
dec
pop
inc
cld
xchg
repnz
mov
lds
jp
jb
mov
inc
roll
decl
push
push
cmp
push
mov
fidivl
rorb
adc
out
mov
data16
jl
inc
add
dec
sbb
cmc
out
test
jbe
pop
nop
js
mov
int3
fsubrp
jbe
lea
std
ret
cld
sub
xor
in
inc
inc
jge
adcl
pop
mov
inc
jmp
mov
cld
inc
cmp
das
xchg
mov
add
fidivs
insb
jb
mov
mov
lret
jl
fbld
je
call
push
mov
rorb
rolb
cli
ret
popf
add
mov
push
mov
adc
lcall
adc
enter
pop
fdivr
inc
int
xor
and
push
push
and
cmpsb
fisubs
xchg
xor
inc
mov
mov
push
int3
lcall
dec
outsl
sbb
jne
aam
adc
sub
inc
fs
fdivr
aad
add
imul
enter
sets
pop
test
fiaddl
les
mov
and
add
and
test
ljmp
test
mov
clc
push
adc
scas
jb
ljmp
mov
add
mov
pop
mov
pminub
lock
jbe
fidivs
lock
ret
bound
and
or
notb
add
dec
adc
and
daa
xor
xor
cs
ret
rclb
cld
add
stos
or
dec
xor
popa
add
add
icebp
out
mov
jg
in
enter
push
outsb
xchg
jae
mov
or
subb
scas
pop
and
icebp
xor
and
xchg
jb
sbb
lds
mov
push
sbb
xor
icebp
pop
xchg
push
sub
insb
call
pop
and
mov
push
popa
cld
unpcklps
xlat
push
std
or
inc
push
mov
stos
fcoms
jge
lcall
imul
mov
es
add
mov
test
pop
pop
push
sbb
lret
dec
or
test
mov
add
pushf
lcall
mov
pop
sbb
enter
roll
dec
mov
lar
dec
add
mov
cmpl
aas
mov
repz
jb
fs
push
pop
or
xchg
push
xchg
cmc
jae
mov
jle
and
xchg
pop
lods
out
fcmovnb
mov
fsub
incl
adc
sub
and
movl
push
mov
sar
pushf
pop
inc
xor
mov
cmpsb
inc
ljmp
and
data16
loop
jle
movsl
pop
clc
test
mov
fildll
xor
jb
dec
das
dec
sub
cmp
xor
inc
fsub
sahf
call
mov
push
enter
mov
and
fildl
adcb
sub
push
or
cld
roll
pushf
lock
je
ret
decl
cld
inc
sbb
mov
adc
dec
push
adc
enter
or
cld
mov
mov
mov
mov
push
pop
ljmp
push
adc
or
cmp
test
jg
jmp
mov
adc
test
pop
pop
shr
mov
je
aam
iret
jmp
fsubp
and
jl
hlt
and
pushl
popa
cld
popf
jge
jmp
xor
cmp
sbb
jo
add
push
push
mov
mov
int3
mov
pusha
add
jo
insb
das
xor
mov
mov
and
jbe
out
lock
icebp
mov
pop
idiv
xchg
ret
mov
mov
ss
add
stc
out
add
and
push
sbb
mov
call
sub
in
add
jmp
push
sarb
ja
insl
adc
cli
out
adcl
mov
push
loopne
fisttpl
xchg
pop
les
push
push
aam
out
adc
call
shrb
subb
cmpsb
loop
sub
nop
add
and
mov
js
movsl
ss
mov
clc
cwtl
int3
clc
ret
xor
fsubrl
test
decl
imul
jnp
gs
pop
lea
das
rolb
ss
lea
dec
loop
mov
gs
pop
cmpb
les
add
hlt
popf
xor
pushf
nop
cmc
push
mov
dec
mov
xchg
jo
cmp
jmp
outsb
loope
and
cmp
xchg
test
je
int3
movsb
mov
repnz
sar
pop
mov
xchg
push
inc
test
pusha
xorl
push
xchg
jbe
mov
clc
mov
fiadds
pop
add
mov
rolb
xchg
xor
fistpl
fcmovnbe
xor
add
fadds
inc
mov
add
add
push
idivl
or
aam
es
push
lods
aad
dec
mov
addb
sub
insb
sbb
mov
fcomps
lret
fs
out
clc
loop
int3
push
shlb
sbb
cld
call
xchg
pushf
push
ds
subb
adc
call
xor
fwait
inc
xlat
adc
jg
pop
cmp
push
lock
mov
sti
in
push
bound
nop
or
stos
imul
test
mov
cmpb
inc
adc
mov
cltd
lret
dec
insb
lock
sub
pop
push
bound
ss
pop
nop
imul
cli
jmp
sbb
jmp
rclb
scas
mov
aam
ds
mov
neg
adc
and
cmp
dec
sub
orl
push
mov
rcrb
ret
push
push
inc
add
repnz
or
cmp
imul
pop
pop
mov
xor
scas
fwait
nop
push
ret
leave
mov
mov
push
sub
mov
jmp
test
call
xchg
mov
adc
ret
je
lock
mov
mov
getsec
mov
pop
add
xor
add
jae
ljmp
add
or
test
push
xchg
xlat
and
sub
xlat
cmp
inc
mov
gs
xchg
jo
shll
lock
mov
into
nop
cld
cs
fiadds
add
mov
push
add
pop
pushf
or
mov
adc
je
pushl
xchg
mov
out
sbb
lcall
mov
or
inc
ljmp
je
dec
sub
inc
faddl
insb
rcrb
push
mov
out
adc
shrb
insb
cli
pusha
xchg
or
or
lds
mov
incl
popf
xchg
xor
add
lcall
loope
dec
xchg
mov
out
mov
jmp
pop
push
pop
outsb
jns
rol
mov
cmp
add
or
inc
in
pushf
pushf
dec
cmp
cmp
imul
mov
xchg
push
lcall
test
imul
add
pop
push
mov
loope
mov
data16
push
xchg
test
loop
pushf
jp
xlat
mov
shll
push
fisttpl
jecxz
dec
call
imul
dec
ror
push
pop
jne
lea
mov
add
adc
std
or
push
lret
push
pmaxsw
adc
es
adc
dec
sbb
rclb
faddl
push
and
fwait
mov
sub
add
pop
add
ret
push
cmpsb
ficoml
jb
outsb
pop
xor
pop
jbe
sbb
mov
repnz
test
inc
iret
dec
icebp
push
popa
fcmovnbe
push
or
lcall
std
in
cmpsl
add
push
jp
inc
insl
pop
mov
jmp
sti
popf
mov
cmp
bound
push
jmp
pop
rcl
test
mov
and
dec
icebp
aas
jecxz
orb
push
add
ljmp
xchg
adc
popa
ret
mov
mov
mov
repnz
rorb
test
or
in
pop
fs
mov
in
add
cmp
pop
les
rolb
je
push
mov
xor
and
sbb
ror
repnz
std
jne
or
adc
dec
movb
ffreep
mov
jp,pn
cmp
jns
pushf
int3
test
push
gs
aam
xchg
pop
inc
andb
fstpl
adc
pop
add
addl
sub
push
push
mov
mov
dec
les
rcll
cmp
mov
test
jge
daa
jne
add
cld
rolb
loop
mov
mov
lods
pop
imul
adc
and
push
insb
cmpsl
test
pop
aaa
pop
lock
mov
cltd
sub
out
outsl
xchg
fmull
rolb
cli
test
add
call
fsubl
xlat
ret
inc
movb
aam
inc
ljmp
mov
pop
inc
mov
pop
pushf
mov
sub
scas
dec
push
shr
outsl
aaa
pop
idivb
aaa
xchg
xor
fmuls
divl
pop
movsb
mov
negb
movsb
mov
addb
test
arpl
push
mov
fs
inc
jg
push
dec
xor
rorb
loope
add
mov
cltd
mov
pushl
xor
lock
rcrb
and
ret
xlat
jo
push
outsb
je
sbbb
sbb
add
aad
add
dec
xor
and
dec
push
loopne
je
or
fcompl
push
mov
push
testl
pop
pusha
xor
adc
insb
push
cld
push
ret
pop
mov
dec
sbb
test
fdivrs
pop
mov
icebp
push
xor
rclb
push
push
aaa
add
or
adc
mov
jmp
cmp
in
inc
inc
stc
push
pushf
ret
ja
cmp
bnd
and
mov
gs
gs
or
es
decl
sub
inc
jp
and
mov
inc
fidivl
push
sbb
mov
mov
push
lods
dec
mov
add
cmp
cmp
mov
pop
inc
adc
inc
movb
jb
pop
call
cmp
add
clc
outsl
and
adc
call
push
push
lea
push
pop
leave
not
adc
and
call
xchg
std
rolb
outsb
jmp
push
sbb
sti
xor
imul
mov
loopne
mov
push
xor
pop
mov
add
inc
andb
stos
rorl
mov
add
mov
test
lcall
and
repz
mov
cmp
mull
inc
or
inc
inc
adc
leave
iret
pop
cs
outsl
adc
ss
push
loop
imul
adc
adc
std
aad
call
or
xchg
sub
jg
das
and
repz
test
jmp
gs
adc
inc
sbb
jmp
add
pop
jmp
cli
dec
clc
negb
push
in
in
push
push
icebp
shlb
hlt
roll
cmp
or
ficoml
aaa
push
or
sbb
push
leave
jnp
mov
jo
mov
fisubrs
inc
ret
xchg
fsts
cmp
fs
push
or
xor
cmp
pop
mov
mov
ret
dec
xchg
mov
mov
loope
pop
lea
mov
and
mov
or
je
daa
sti
xchg
fadds
test
dec
in
out
push
cmpsb
fdivrp
or
mov
push
out
adc
lahf
jle
jb
or
mov
adc
push
fcoms
fiaddl
sub
pop
push
push
sbb
cmp
roll
xor
popl
test
jo
test
bound
outsl
pop
push
lret
sarb
adc
adc
rorb
add
cltd
pslld
mov
jo
pusha
stos
mov
pop
testl
push
mov
pop
ljmp
add
and
inc
mov
add
call
lret
push
adc
and
mov
inc
add
cmpsl
rorb
pop
xor
or
iret
adc
ret
sbbb
das
add
xor
xor
popf
pop
mulb
xor
mov
jle
xor
xor
lock
pop
adc
or
xchg
inc
cli
clc
adc
ds
xchg
dec
add
xor
inc
shlb
stos
jne
lea
pop
out
or
pop
inc
mov
rolb
ss
loopne
rcll
stos
loopne
ret
cwtl
mov
js
inc
xor
push
out
push
mov
push
inc
cli
inc
xor
inc
or
adc
mov
clc
add
jle
or
mov
cmp
loope
or
filds
repnz
mov
les
add
sub
jnp
jge
jp
jecxz
cmpsb
sub
mov
imulb
add
ret
pop
sub
les
pop
and
sub
pop
fs
sahf
rolb
mov
je
les
mov
je
push
add
jno
cmpsb
push
mov
push
sub
add
xor
adc
adcl
xor
mov
fildl
add
xor
xchg
add
push
sbb
inc
popf
xchg
xor
add
sub
lcall
insb
dec
xchg
sbb
push
sbb
fists
cmp
fsubrp
int3
iret
je
or
test
jg
popa
lea
xchg
mov
push
out
call
daa
inc
test
xchg
rcll
add
add
cmpb
mov
mov
or
into
cmp
mov
push
push
adc
inc
loopnew
mov
xchg
pop
mov
adc
mov
sahf
and
hlt
push
test
mov
cmpsl
mulb
mov
int3
jl
insb
cs
push
mov
jle
sbb
mov
call
cmpsb
xor
jl
aam
jb
adc
insl
nop
shlb
inc
jl
enter
xchg
mov
sub
or
popa
or
fiadds
out
hlt
add
and
pop
daa
cld
jg
mov
inc
mov
lock
mov
inc
dec
mov
push
mov
into
or
fwait
mov
xchg
andb
cmpsb
or
roll
insb
jge
adc
pop
insb
je
inc
les
movsb
or
imulb
adc
test
xchg
shlb
inc
mov
dec
mov
out
or
adcl
lcall
pop
fidivl
inc
in
fcomps
jbe
aaa
xor
mov
imul
inc
test
in
pop
jo
pop
psrad
adc
adc
or
cmp
rorb
aam
pop
sbb
out
pop
into
or
push
test
mov
aas
adc
pop
add
mov
ret
pop
jmp
cwtl
andl
pop
mov
adc
inc
push
push
mov
pop
jb
jp
fxch
mov
ret
cld
mov
mov
scas
add
test
clc
stc
outsl
mov
cmp
or
es
jb
adc
pushl
mov
popf
dec
dec
mov
jmp
or
pop
nop
jmp
push
inc
push
mov
rclb
adc
test
test
push
call
jp
ljmp
rcrl
dec
les
jno
aaa
decb
jmp
pop
sbb
sti
mov
and
ljmp
jbe
jo
mov
nopl
inc
in
in
add
lea
sub
xchg
jmp
and
je
xor
aad
sub
aas
mov
jecxz
push
xor
mov
rol
push
jmp
add
iret
dec
ret
call
std
sti
mov
int
rcrb
mov
mov
or
out
and
es
mov
push
jp
out
cli
ss
jecxz
mov
jmp
inc
std
or
xchg
push
add
adc
movsl
loop
and
cld
push
mov
add
or
loope
push
enter
fcmovnu
or
jl
sti
adc
ja
jmp
test
popa
insb
addb
cmp
or
jp
sbb
js
xor
and
inc
adc
cwtl
adcb
adc
adc
aad
nop
pop
pop
xor
aaa
cs
or
fsubs
and
clc
aas
push
xchg
or
rcl
faddl
shlb
adc
in
sbb
clc
subb
neg
mov
and
pop
add
sbb
and
lds
das
mov
bound
aaa
sub
inc
inc
incb
mov
sarb
ret
shl
andl
daa
sub
rol
call
fidivs
movsb
sub
aas
pop
mov
xchg
call
lea
addl
jg
push
lods
in
or
push
xor
je
sub
and
jbe
mov
mov
pop
cwtl
dec
call
loope
adc
int3
mov
loopne
loopne
les
cmp
rorb
faddp
lea
adc
inc
pop
aad
add
or
add
frstor
add
int3
rorb
repz
or
jnp
jge
leave
fisubl
adc
pop
or
inc
pop
aas
rcrb
cwtl
pop
push
inc
ss
out
jb
and
gs
dec
push
mov
cmpsb
xor
inc
out
pop
jno
mov
add
in
icebp
int3
test
and
fdivrs
mov
adc
sbb
add
mov
loope
movsb
jne
or
icebp
rcl
incl
jae
or
add
jne
movb
scas
ljmp
inc
test
add
adc
mov
fdivl
call
shr
and
add
push
je
call
lret
aam
sbb
lcall
clc
hlt
mov
in
dec
add
xorl
scas
and
ljmp
cmpsl
push
mov
mov
enter
pushl
pop
mov
inc
inc
mov
fdivl
push
std
sub
add
sahf
lea
jge
adc
push
xorb
movsl
add
add
repnz
push
push
mov
sub
aaa
scas
int
sbb
call
ljmp
in
idivl
hlt
ja
data16
xchg
inc
leave
pop
adc
pusha
mov
mov
xor
pop
inc
cmp
jp
mov
jo
ret
ja
and
insb
dec
jne
mov
pop
loopne
sub
clc
call
xrelease
xchg
xor
cld
push
lmsw
pop
push
add
imul
xor
into
mov
lea
fadds
notb
inc
call
jge
mov
mov
cs
bound
std
andb
mov
nop
test
add
push
movl
dec
mov
mov
mov
imulb
fsubl
adc
sbb
mov
mov
and
fs
xchg
arpl
sbb
pop
xor
push
gs
sub
aaa
pop
mov
loope
adc
rolb
push
scas
mov
cmp
shl
js
popa
sub
sub
mov
cld
pop
mov
jg
add
int3
outsl
fwait
and
mov
insb
pushf
push
test
mov
jge,pt
fisttpll
sbb
add
mov
mov
idivb
icebp
aas
movsb
xorb
cld
les
mov
aam
mov
enter
into
or
into
jge
ja
push
js
add
cmp
push
adc
xor
mov
jbe
or
add
pop
test
lds
dec
rolb
add
pusha
test
sbb
cmp
test
add
std
mov
add
dec
pop
int
insb
adc
push
sub
xchg
in
pop
test
fwait
inc
scas
jg
popa
mov
add
mov
mov
pop
xchg
or
jne
ljmp
outsl
lret
in
xchg
int
mov
hlt
add
sub
jle
psubd
push
mov
adc
push
or
cmp
outsl
dec
fstp
ret
push
push
sub
add
testb
in
dec
lock
sub
les
sti
inc
cmp
push
cmp
addl
or
lea
les
inc
mov
mov
loope
xorl
mov
js
icebp
in
test
jecxz,pn
testb
rcll
ss
stc
or
daa
lea
into
or
jo
push
xchg
dec
jecxz
pusha
inc
and
mov
mov
pop
jp
or
jg
fildll
xor
cwtl
nop
popf
pop
xor
clc
and
shlb
lea
dec
jnp
addb
push
les
mov
out
les
pop
js
ret
mov
leave
jae
test
ret
int
data16
scas
sbb
mov
fs
inc
xor
push
loop
inc
push
les
pop
pop
cld
mov
lcall
rcrb
mov
add
push
loopne
lods
add
adc
pop
daa
lea
mov
fildll
add
les
pop
adc
push
subb
add
jl
adc
cmp
or
sbb
add
pop
lock
adc
orl
mov
test
xchg
iret
inc
mov
fiaddl
jge
sub
sbb
add
and
mov
aam
push
dec
loopne
xchg
push
mov
loop
or
add
xor
or
cld
ljmp
add
xor
push
clc
mov
or
mov
outsl
je
call
cmpsb
mov
jb
mov
stos
aas
clc
add
loopne
mov
add
xor
mov
pop
out
int3
or
mov
add
cmp
ljmp
xor
pop
es
sub
add
rolb
mov
cmp
jnp
adc
cmp
adc
mov
adc
imul
fmuls
xchg
outsb
xchg
js
pusha
and
and
mov
adcb
and
mov
orb
adc
fs
pop
xor
or
xchg
inc
jp
cld
call
icebp
push
mov
or
sbb
add
imul
and
jo
mov
rorb
ljmp
gs
insb
test
mov
dec
fsubs
lock
pop
jae
mov
cmp
cmp
adcl
data16
push
jns
mov
jnp
cmp
push
psrad
xor
xor
outsb
mov
push
out
and
arpl
pop
xchg
lret
xor
xor
mov
out
into
push
sar
xor
push
sbb
orb
cmp
sahf
cmp
test
push
repnz
outsl
sbb
ds
rclb
dec
dec
add
push
stos
sbb
and
insl
mov
int
or
adc
adc
add
or
jne
mov
cli
mov
xchg
decl
xchg
adc
cmp
dec
pop
mov
or
orb
mov
loopne
mov
shl
or
jle
dec
add
add
outsb
push
rcrb
push
or
push
xor
add
aaa
push
sub
pop
push
clc
push
push
pop
or
adc
les
mov
je
xchg
cmp
or
popf
inc
cld
mov
sub
push
xchg
push
cmp
ret
hlt
popa
mov
aam
leave
mov
in
push
inc
mov
push
rolb
mulb
in
inc
hlt
mov
js
push
cmp
inc
sub
shr
hlt
pop
push
dec
loop
mov
xchg
sbbl
push
fmull
divl
push
xor
mov
into
nop
cmp
hlt
clc
add
or
xor
sub
into
pop
sti
or
cli
inc
xchg
cmc
pop
icebp
mov
push
adc
cld
sub
lods
jmp
ret
mov
add
adc
sub
testb
rclb
les
mov
movl
sbb
cs
scas
inc
or
xor
adc
pop
push
hlt
rorl
movsl
push
inc
aas
test
lea
push
andl
xor
xor
cmpsb
add
cmp
cmp
sar
xor
test
or
add
stc
bound
pop
mov
adc
ret
push
xor
testb
notl
mov
pcmpgtw
sub
adc
lcall
loop
imul
jl
call
nop
psrld
lock
decb
rcrb
and
dec
mov
adc
xchg
shr
mov
movb
sbb
hlt
mov
repnz
dec
ficomps
adc
mov
icebp
mov
jne
and
in
and
sub
sub
fwait
icebp
pop
add
inc
sub
les
add
int
shrl
loop
cli
lret
mov
cltd
push
pop
jmp
scas
or
mov
outsl
pusha
loope
sbb
in
jl
addb
jbe
je
clc
aas
ret
pop
int3
add
int3
loop
addr16
stos
adc
shlb
dec
xchg
insb
xchg
push
adc
lods
and
rol
loope
inc
ljmp
in
rsqrtps
and
pop
cmp
ss
mov
fildll
sarb
enter
setge
jl
cld
mov
mov
mov
hlt
addl
lret
sub
scas
push
jne
ret
pop
popa
and
mov
hlt
mov
shrb
inc
enter
insb
mov
mov
rcrb
ss
outsb
ficompl
imul
into
cmp
or
inc
xor
xchg
xorb
notb
xor
mov
cmp
js
xchg
add
sub
es
in
jae
enter
sbb
addb
inc
pop
sbb
cwtl
push
mov
pop
or
jno
pushf
inc
jp
pop
xlat
cmp
pop
jmp
mov
add
push
lock
push
ljmp
jp
jb
push
sbb
test
or
jae
push
mov
sub
cmp
clc
imulb
jle
idivb
outsl
mov
pushl
push
sar
adc
lahf
je
adc
cld
imul
cmp
cli
das
aad
loop
push
cmp
notb
jmp
pushl
enter
enter
ret
popf
dec
inc
rclb
lfs
cmp
xor
sbb
fcmovnu
lcall
xchg
lock
lods
es
int3
inc
inc
mov
jne
pop
lret
les
mov
std
adc
sbb
mov
divb
add
test
fwait
add
mov
shl
add
cmp
cs
xchg
fdivrl
out
dec
in
mov
add
pop
movsb
jno
fildll
jge
add
jb
lock
push
cmpl
movsb
pushf
lea
add
inc
lods
inc
jne
pop
add
test
je
inc
call
or
shr
ds
nop
dec
add
mov
mov
mov
push
jmp
loopne
jo
inc
fxtract
or
pop
jo
sub
lret
dec
int3
lea
cmp
mov
mov
xchg
push
loope
or
jne
add
test
dec
stos
into
adc
dec
sub
test
mov
inc
shlb
xor
add
mov
push
xchg
outsb
lods
and
jle
push
xchg
xor
add
adc
push
rorl
daa
sarl
xchg
add
test
sahf
jle
xor
mov
decl
pop
dec
mov
call
lods
or
ds
and
sbb
mov
push
pop
mov
in
movsb
scas
pop
mov
pop
mov
aam
jmp
push
inc
scas
xorb
inc
cld
test
push
stos
in
and
cmp
out
mov
mov
rol
mov
and
adc
nop
xor
testl
mov
sbb
scas
aad
movsb
mov
roll
dec
popa
lcall
insb
ret
cwtl
sbb
lock
movaps
pop
loop
adc
faddl
stos
movsb
xor
add
test
cmp
mov
push
sbb
filds
ds
mov
movsl
and
ljmp
adc
or
test
fdivp
push
push
lds
rcl
mov
sub
rcl
jp
hlt
jl
mov
rolb
mov
mov
aam
loopne
adc
mov
add
aam
inc
adc
cld
or
les
std
hlt
addr16
inc
pop
inc
xor
mov
pop
je
rorl
xchg
cli
cwtl
je
jne
shr
ud1
xchg
sahf
push
mov
xor
std
inc
or
cmp
fwait
mov
jg
xor
std
adc
jo
inc
cld
jl
pop
pop
gs
pop
jecxz
add
test
fwait
sub
add
add
loop
jmp
inc
clc
inc
cmp
push
xchg
addb
add
call
and
movsb
loopne
cmp
jl
inc
and
mov
jge
push
xchg
pop
xorl
push
dec
mov
hlt
seto
loop
adcl
ret
lret
mov
inc
dec
push
inc
test
sub
mov
add
pop
inc
cmp
inc
cwtl
cltd
insb
push
faddl
jge
dec
arpl
ret
insb
inc
gs
mov
lds
cmp
ret
sti
push
jl
out
push
jne
sarb
test
or
or
lock
or
sub
ss
xchg
inc
add
add
decb
repnz
lret
mov
push
fmull
fs
insb
incl
iret
mov
mov
pop
dec
test
movsb
idivb
lret
dec
les
insl
in
inc
andb
jbe
or
dec
add
enter
in
in
jp
mov
jmp
ds
cli
cld
mov
xchg
fisttps
mov
loopne
and
add
lds
inc
cmpsb
and
adc
mov
repz
int3
pop
shl
cwtl
inc
out
shrl
bound
clc
fs
xchg
jmp
adc
dec
int
test
xchg
adc
outsb
and
lcall
in
sbb
jne
inc
or
lods
addr16
jo
paddw
add
push
xor
int3
insl
jp
je
and
mov
xor
lock
add
shr
sbb
xor
shll
lds
mov
cmpl
and
sub
mov
aam
jge
cs
push
shlb
dec
jge
and
ret
call
dec
inc
cmp
and
leave
dec
or
repnz
lea
add
sub
pop
push
jmp
xchg
lock
fadds
add
test
mov
fcomps
add
dec
leave
jae
sub
loop
add
ud0
ss
add
add
push
add
inc
incl
push
inc
test
fcomps
repz
aas
adc
cmp
stos
mov
pop
jmp
ret
lock
jmp
ret
pop
xor
push
shll
and
add
flds
inc
arpl
jg
pop
jae
cld
negl
arpl
mov
out
rorb
in
es
imul
dec
shlb
aam
xor
and
dec
nop
jle
mov
mov
test
idiv
dec
bound
je
cmp
adc
pop
das
pop
xorl
cmp
popa
popa
xchg
hlt
cmp
or
cld
lock
fmul
pop
add
push
subb
cli
adc
jo
inc
test
or
mov
movsl
jbe
push
test
push
mov
mov
pop
cmp
push
xchg
inc
inc
fdivrp
inc
out
stos
ficomps
in
test
outsb
push
push
rcrb
push
insl
push
or
test
hlt
fisubs
push
sub
mov
mov
mov
xchg
push
push
aaa
and
lods
cmp
imul
rcl
add
cmp
push
fwait
rcrb
pop
mov
sbbl
test
or
or
push
jo
mov
jno
xchg
and
sbb
cmp
ss
imul
testb
test
imul
lahf
inc
sbb
dec
dec
ja
xchg
sbb
dec
or
pushf
outsb
adc
push
arpl
cmp
add
xchg
jae
es
aam
xor
test
insb
xor
mov
aam
xor
dec
or
outsb
es
std
push
and
push
call
in
es
fcmovnu
jno
jne
pushf
stc
ds
hlt
sbb
mov
adc
push
xor
mov
jmp
jle,pt
pop
or
pop
or
ret
outsb
jecxz
std
add
ret
inc
add
jg
push
push
add
int
insl
xchg
cltd
cmp
push
add
and
js
mov
rclb
or
imul
decl
xchg
or
cmp
add
add
mov
bound
sub
push
pop
enter
add
add
push
dec
sub
shrl
les
mov
je
push
mov
sub
outsl
or
mov
pusha
inc
icebp
enter
js
insl
mov
push
jns
clc
je
cmp
cltd
push
mov
mov
push
add
inc
add
dec
popf
mov
cs
xchg
mov
call
adc
ja
sbb
jle
cwtl
mov
sub
addr16
jp
shll
bound
je
jb
mov
test
xor
add
test
sub
push
push
mov
xchg
push
je
lcall
sbb
jne
or
pusha
insl
push
dec
push
sbb
enter
add
mov
je
pminsw
jecxz
pop
cmp
push
and
mul
sub
sub
inc
fwait
call
aam
pop
aad
dec
mov
jbe
leave
inc
sub
into
idivb
sub
popl
lcall
leave
or
orl
cmp
inc
mov
adc
rcll
or
push
adc
fdivrs
mov
cli
orb
or
pop
aaa
push
adc
iret
inc
and
jne
pop
shrb
mov
push
cmp
push
inc
sbb
cmp
enter
test
mov
add
mov
aaa
out
idivb
test
and
push
ficompl
pushl
lock
pop
lock
pop
es
pusha
inc
pop
gs
xchg
mov
push
xchg
push
sbb
jl
mov
fsubrs
andb
inc
aam
xor
sbb
ja,pt
aas
call
adc
lret
mov
push
test
les
mov
call
mov
test
inc
subb
pop
cld
pop
sub
andb
movsl
ja
addl
cmp
mov
fs
repnz
mov
ret
xor
shlb
es
dec
inc
addr16
decl
in
loop
sbb
xor
mov
int3
call
inc
fcoml
adc
data16
rcr
outsb
xor
mov
or
movsl
add
or
pushf
sub
mov
push
je
clc
pop
fs
rolb
aad
sbb
add
mov
data16
mov
xchg
mov
fs
cmp
and
mov
dec
dec
push
sbb
fiaddl
push
mov
test
pop
ljmp
lret
mov
lods
cli
popa
loop
sub
pop
jmp
jg
xchg
andb
add
push
dec
mov
pop
jmp
push
adc
push
imul
aam
ss
or
xchg
add
inc
addr16
mov
pusha
adc
mov
aad
in
push
je
aam
sbb
mov
incb
push
dec
sbb
add
push
lock
adc
rcll
xor
jle
add
or
fwait
push
push
adc
adcl
lds
adc
test
int3
test
cwtl
lcall
bound
cmp
gs
pop
ljmp
xor
inc
mov
inc
adcl
fs
pop
xlat
cwtl
push
mov
ret
push
or
or
add
push
pop
jmp
or
adc
cvtps2pi
int
test
ljmp
add
dec
jge
ljmp
inc
lret
jg
xchg
push
mov
es
in
add
jno
or
cmp
mov
mov
je
aam
sbb
add
rcrl
test
push
addl
mov
icebp
aaa
inc
cld
add
add
push
xor
mov
daa
rolb
pop
adc
aam
subb
fs
inc
call
push
popa
loopne
rcrb
cwtl
sub
sub
or
punpckhbw
je
aas
add
xor
mov
pop
incl
mov
push
pop
and
loope
movsl
xor
sub
inc
ja
jb
dec
push
paddb
dec
jl
clc
dec
sub
add
push
idivb
pop
int3
mov
cs
push
jp
dec
jl,pn
mov
or
loopne
ret
push
adc
or
shlb
xor
ljmp
or
add
jg
pop
mov
into
xchg
jns
adc
xor
adc
mov
mov
sarb
inc
jae
lea
inc
rolb
and
aaa
shl
data16
mov
imul
mov
fsubs
icebp
call
inc
and
in
rolb
pop
testb
jb
add
xor
push
cmp
js
or
mov
test
hlt
inc
add
xor
mov
mov
xor
add
clc
and
rolb
mov
jmp
jmp
sbb
jo
icebp
mov
pop
xlat
pop
cmp
sahf
or
jb
andl
test
xor
mov
push
movnti
jbe
sub
shlb
adc
lods
les
cmp
test
mov
inc
push
loopne
and
sub
lcall
jmp
insb
cmp
xchg
inc
ja
sbb
psrld
sub
jbe
adc
adc
loop
hlt
ss
mov
push
add
cmp
xchg
add
je
ds
loopne,pt
inc
out
lods
lock
push
jo
adc
or
dec
mov
int3
mov
inc
add
mov
dec
inc
stc
mov
dec
add
pop
jb
lock
movsl
je
and
add
jo
inc
cmp
cli
or
fisubl
cmp
xchg
rcll
inc
adc
xchg
sahf
jl
inc
add
rol
and
push
orb
and
jne
add
inc
ret
enter
and
incl
xchg
mov
std
adc
push
add
dec
ja
lret
ja
xor
filds
add
outsb
push
add
loopne
or
clc
rcrl
fs
lock
fcmovb
cmp
xor
mov
cmp
scas
ret
insb
add
call
dec
fsubrs
lds
inc
incl
into
dec
pusha
pop
clc
lret
mov
fwait
add
mov
roll
out
incb
jg
bswap
mov
dec
inc
mov
call
jmp
mov
addb
push
mov
je
testb
mov
hlt
adc
ror
pusha
lds
cmp
push
inc
xchg
call
jb
add
ret
call
lock
shrb
jp
incb
jle
sub
gs
xor
jb
push
push
adc
jle
test
movsb
or
fdivrp
mov
shrb
ret
push
push
cmp
sbb
inc
pop
ljmp
cmp
or
loop
orb
sbb
out
mov
das
add
cmp
cs
jb
add
mov
fcmovbe
push
pop
mov
movsb
jle
add
sbb
add
pop
sub
or
pushf
fiadds
mov
xchg
sbb
mov
jne
dec
add
subb
fcompl
or
sub
pushl
pop
sarb
jmp
outsb
ds
mov
cld
test
les
outsb
and
rorl
add
cld
xchg
enter
push
and
add
and
jmp
std
enter
das
adc
movsl
add
inc
in
lcall
sbbb
and
cmp
inc
mov
mov
adc
lods
pop
xor
adc
xorb
push
and
hlt
scas
je
loop
xchg
ss
add
ss
add
je
fmull
sub
aas
mov
mov
sar
in
sbb
call
insb
adc
les
xchg
xchg
test
insb
xchg
xchg
cli
in
add
dec
add
add
rcll
arpl
add
push
in
and
das
mov
sbb
in
mov
dec
cmc
mov
xor
adc
jp
cmp
decb
fdivr
xor
cmpps
rolb
or
mov
cmpsl
add
decl
adc
push
adcl
mov
add
mov
mov
mov
sbb
mov
cmp
loop
or
mov
test
or
or
push
clc
gs
adc
or
xchg
mov
pop
push
mov
les
or
push
mov
push
mov
outsl
andl
mov
push
mov
rolb
lcall
push
push
fildll
bswap
mov
push
sbb
jne
cld
pop
cmpsb
add
push
mov
mov
push
cmp
dec
loopne
pop
sbb
jo
xor
clc
sub
cmp
test
mov
ljmp
outsl
adc
mov
mov
mov
sub
daa
pop
adc
sbbb
add
adc
mov
add
and
fildl
lret
mov
xchg
jle
sbb
loope
les
insl
xor
movsb
lods
xor
xchg
sbb
inc
mov
push
dec
push
incl
dec
cld
jmp
mov
mov
push
add
xor
jb
std
out
subb
adc
mov
sub
sub
test
or
mov
jae
mov
pusha
stos
ss
test
mov
rorl
mov
es
dec
pop
push
lds
xchg
mov
xor
sub
jge
add
sbb
je
add
cwtl
add
int3
cwtl
pop
gs
test
push
and
lock
push
and
sbb
push
loope
add
stos
and
sub
js
push
test
outsl
mov
dec
sub
lcall
mov
push
cmpsl
stos
mov
mov
and
inc
or
pop
rclb
dec
call
xchg
in
xchg
mov
mov
dec
jo
dec
push
lock
xor
add
in
clc
decl
add
sahf
inc
rolb
scas
push
add
or
incl
stos
out
pop
mov
je
repz
xchg
push
pop
mov
adc
call
adcb
pop
cltd
inc
mov
inc
jbe
jmp
test
and
sub
aad
mov
sbb
mov
cwtl
inc
sbb
pop
push
fld
clc
les
pop
dec
lahf
jo
add
push
dec
add
daa
test
xchg
aaa
mov
pusha
cmp
xor
inc
sbb
sub
jne
mov
adc
rcrb
repnz
and
or
cld
lahf
dec
orb
jae
mov
dec
jno
xor
mov
dec
call
mov
fdivrs
ds
incb
clc
mov
cmp
ret
call
mov
pop
test
lods
xchg
jnp
jg
pop
or
fimull
je
push
into
inc
rcrb
shlb
call
pop
incb
mov
rcl
mov
shl
jmp
inc
scas
or
add
ljmp
clc
jl
out
jnp
int3
scas
fiaddl
mov
push
jne
pop
sub
ds
xor
push
sub
hlt
mov
push
xor
stc
decl
mov
mov
out
sub
push
leave
adc
fsubs
test
and
movhps
lods
sbb
adc
push
insl
mov
ss
loope
fmull
push
dec
ljmp
arpl
adc
andl
cmp
leave
hlt
push
or
in
or
add
xor
mov
dec
adc
addl
gs
inc
xchg
add
cmpsb
sub
mov
pop
push
sarl
mov
lock
or
jbe
les
xor
pusha
pop
xchg
mov
or
mov
and
or
or
out
xchg
movsl
xchg
mov
call
aad
mov
out
into
adcl
je
push
xor
fimuls
jmp
mov
pop
xor
mov
xchg
mov
jae
cs
push
add
push
sub
mov
and
lcall
addl
leave
aas
add
notl
call
insb
xor
pop
rcrb
mov
and
ljmp
lea
push
push
outsb
inc
cmp
push
push
faddp
mov
data16
ret
gs
and
add
dec
mov
lock
cmpb
adc
add
adc
lahf
push
lcall
jl
jne
ret
test
mov
adc
lret
sahf
mov
cmp
add
mov
jp
pop
add
outsb
ljmp
xchg
mov
clc
rcrl
inc
push
out
sub
xchg
xor
sub
mov
add
mov
stos
insb
pop
test
stos
test
xchg
add
and
scas
test
cmpsb
movsl
push
rclb
jg
sahf
scas
scas
cli
div
mov
add
inc
lods
leave
incl
add
inc
mov
mov
inc
cmp
flds
call
data16
dec
aad
inc
fildl
loopne
pop
jl
pop
fistps
sbb
push
inc
xor
mov
pop
nop
sbb
fcomps
test
or
push
xor
push
and
sbb
add
push
pop
aam
mov
mov
ljmp
jmp
fadds
out
lret
mov
push
pop
clc
push
and
push
bound
aaa
fcomps
into
cmp
rolb
mov
scas
pusha
push
jb
push
add
ret
test
mov
adc
inc
xor
adc
add
add
dec
fisubl
in
outsl
push
push
mov
fsubr
xor
inc
add
sub
adc
ret
and
push
nop
jmp
ss
sub
push
xor
sub
aam
and
ss
outsb
push
push
outsb
ret
cmpl
repnz
hlt
push
xchg
les
xchg
lcall
pop
mov
add
cld
mov
sbb
cmpsb
cmp
inc
ret
out
xchg
cmpb
inc
sbb
jbe
bound
xchg
pop
in
push
aam
aas
add
std
call
pop
mov
mov
mov
std
pop
adc
xorb
aad
add
mov
or
add
inc
loop
sub
add
fisubs
or
mov
sub
sub
call
jl
les
add
add
inc
les
sub
inc
dec
cld
or
cmp
lcall
call
aam
xor
gs
loopne
outsl
ja
jnp
mov
jmp
arpl
jne
push
xchg
mov
subl
dec
or
push
xor
jmp
hlt
xor
push
inc
je
cs
jmp
je
rcrl
into
call
push
cmp
mov
push
je
mov
xchg
mov
dec
pop
sbb
inc
outsl
dec
adc
pop
popa
or
xchg
mov
jg
add
ds
and
mov
stos
adc
mov
and
jb
outsb
cld
rolb
push
shl
mov
and
jbe
pop
aaa
nop
add
and
ljmp
adc
mov
add
ret
add
data16
push
jo
adc
adc
inc
push
adc
mov
push
adc
imul
nop
inc
call
mov
and
pop
dec
dec
mov
push
mov
or
lret
cmp
or
bound
lock
push
mov
xor
push
mov
cmc
test
dec
xchg
or
dec
add
xorb
mov
xor
xor
or
rol
aas
outsl
loopne
add
push
adcb
dec
loop
mov
cmp
mov
cmc
pop
push
fisubs
adc
cmp
cmp
sub
pop
push
or
dec
call
jne
sbb
mov
xchg
add
lds
lods
ds
mov
pop
xchg
inc
pop
add
mov
inc
adc
sbb
mov
sub
les
adc
push
or
rcrb
mov
add
hlt
mov
jp
and
add
xchg
jbe
push
pop
and
or
inc
js
inc
orl
fcomp
xlat
add
mov
test
mov
dec
jl
dec
mov
outsl
movl
addl
gs
sbb
cld
mov
cltd
scas
imul
cmpsl
mov
adc
jo
out
sarb
inc
cmp
cmp
in
or
or
test
xlat
lret
dec
sbb
cwtl
xor
cltd
push
int3
and
xlat
push
rorl
or
pushl
decl
xchg
cmp
in
mov
adcb
push
push
sbb
bound
mov
ret
inc
mov
adc
and
sbb
jne
pop
lret
leave
jp
xor
stos
ds
mov
dec
or
dec
add
cmc
push
pop
pop
shl
std
adc
int3
push
mov
rolb
lods
jo
mov
push
sub
fsts
mov
and
ss
jge
sarb
sbb
mov
xor
fisttpll
clc
sbb
gs
mov
jmp
adc
xchg
fsubrp
rclb
adc
pop
cli
fisttpl
jmp
xor
mov
loope
lcall
popa
xor
jne
nop
and
mov
and
lock
cmp
mov
fucomi
pop
mov
cli
sbb
add
pusha
push
into
mov
outsb
enter
sbb
sub
bound
inc
xchg
push
adc
pop
cwtl
add
cmp
dec
mov
mov
mov
daa
cs
xchg
sub
out
call
push
bound
add
ja
cmp
add
std
sbb
lods
adc
fcmovnb
cmp
rclb
or
pop
xor
and
jl
es
icebp
pop
lds
repz
jg
push
fwait
mov
mov
push
lea
push
cld
mov
and
lret
cmp
cmpsb
xchg
inc
and
and
mov
call
or
dec
sub
pushf
mov
xchg
sub
rcr
adc
in
aaa
movsb
test
pusha
js
in
xor
cmp
lret
and
add
sbb
mov
lahf
jbe
sbbl
inc
pop
cmpb
jno
inc
or
xchg
or
fistpll
in
es
rcpps
daa
pop
xchg
cmp
xorb
fldenv
ss
test
add
outsb
adc
adcb
or
test
jne
daa
pusha
mov
cmp
cmp
clc
inc
or
ss
or
addl
mov
jmp
push
mov
sub
outsb
test
sub
sbb
adc
mov
outsb
xor
add
mov
dec
sub
incl
xabort
repz
aaa
add
adc
das
mov
lods
inc
mov
inc
daa
add
pop
adc
out
xchg
imul
and
add
pushf
pusha
hlt
ficompl
scas
jb
pop
push
ficoml
test
aam
adc
fs
xchg
push
mov
cmp
xchg
jno
bound
sub
mov
jl
pop
sbb
fiaddl
mov
pop
ljmp
push
mov
or
xchg
inc
int3
xorb
rdpmc
xchg
fwait
sub
dec
pop
cmp
jo
mov
mov
aad
jno
lret
add
cli
sarl
rolb
ret
loopne
xlat
xchg
test
mov
bound
cmpb
call
shlb
inc
mov
jne
push
stos
or
jge
inc
test
sti
inc
mov
repnz
sbbb
bound
notl
inc
xchg
fidivrl
xchg
in
dec
adc
stos
rcl
scas
add
push
pushl
bound
dec
cli
out
movb
ror
mov
or
call
testb
jle
mov
cmc
inc
sub
mov
mov
sbb
add
push
stos
in
cs
inc
sub
mov
sub
push
loop
xchg
ret
and
and
xor
test
mov
cmpsl
mov
hlt
cmp
fisubs
scas
dec
decl
clc
sahf
cmpsb
jbe
add
adc
add
lods
fisttpl
or
sbb
sbb
mov
mov
rclb
mov
xor
push
xor
rcll
nop
rorb
push
cmpl
mov
fists
jmp
mov
lock
or
push
imul
testb
mov
pop
iret
je
sar
cmpsb
inc
sbb
pop
mov
jae
imul
adc
stos
adcb
cmpsl
mov
testb
je
popa
mov
fstpt
movsb
cli
call
cld
sbb
hlt
rcrb
cmp
ret
test
add
aam
jnp
loopne
rorl
test
fs
jge
rcl
add
xchg
aas
lea
rorb
cmp
sub
dec
or
add
mov
sub
outsb
add
cmpsl
jo
mov
hlt
pextrw
xchg
insb
enter
add
test
lea
ja
mov
xor
enter
les
push
mov
mov
push
dec
fdivrs
lcall
dec
xor
and
mov
xor
mov
sub
ret
adc
mov
mov
call
stos
jle
std
cmc
mov
add
xchg
fidivrs
jo
inc
inc
clc
jg
mov
push
lock
adc
rorl
bound
sbb
pop
ret
enter
mov
pop
jmp
sbb
bound
jecxz
jge
icebp
fimull
push
cld
cmp
ret
js
and
xor
adc
cmp
jne
mov
add
inc
or
cld
push
inc
push
adc
sbb
testl
les
mov
push
push
mov
inc
adc
pop
add
push
mov
xor
add
orb
mov
mov
loope
xor
sbb
sbb
lret
jg
inc
push
inc
in
push
jne
mov
and
psubsb
xorb
stos
cmp
int3
test
jb
out
adc
inc
je
and
pop
lods
ss
mov
cmp
push
mov
pusha
add
add
and
jno
push
int
adc
push
jne
cld
xchg
add
or
sub
xchg
nop
test
sbb
loope
cmpsb
arpl
cmp
push
jbe
xchg
pop
pushf
sub
or
scas
pop
nop
addb
stos
ds
xchg
hlt
inc
xor
out
add
test
jbe
pop
pop
rclb
mov
adc
jmp
lret
sahf
inc
pop
dec
out
pop
dec
lods
aam
xor
and
fs
jno
mov
inc
xor
hlt
rcl
ret
je
push
adc
cmp
stos
call
clc
fbstp
je
int3
adc
push
jmp
pop
test
rcl
aam
inc
insb
jmp
hlt
or
mov
out
addb
outsb
stos
popa
fs
clc
xchg
sub
jne
movsb
fst
aas
jb
dec
cmp
xchg
mov
xor
sbb
dec
incb
add
cmp
sbb
in
insb
jg
cmp
lds
dec
test
jne
je
mov
ficompl
addl
mov
push
pop
push
push
fimull
test
mov
fisubs
dec
add
inc
test
and
pop
fcompl
out
add
popf
into
ret
jle
cld
rorb
ret
pop
xor
mov
adc
stos
jae
popa
test
jmp
adc
in
aam
cli
mov
mov
mov
mulb
xchg
rcrl
sbbl
std
mov
cld
push
rorb
mov
mov
push
push
xor
push
or
sub
mov
or
push
roll
sbb
or
xchg
add
pushf
cmpsb
outsl
mov
sbb
push
loopne
add
insl
fsubrl
in
lret
sub
add
insb
add
test
push
sub
sbb
sub
push
push
sbb
push
push
inc
mov
sub
adc
call
xchg
lahf
add
pop
pop
rclb
pop
adc
enter
push
add
out
xor
add
nop
and
test
hlt
add
pop
sub
jb
and
mov
pop
push
ss
sbb
mov
mov
mov
lea
adc
and
rolb
add
xchg
out
inc
mov
inc
add
gs
aam
clc
cmp
push
sub
or
in
pop
xchg
orb
add
push
add
sbb
sbb
fs
mov
add
mov
sub
gs
push
push
mov
outsl
out
in
mov
les
or
xchg
inc
adc
push
push
mov
pusha
aad
lret
and
xlat
or
or
mov
cmp
sti
ja
imul
add
enter
push
xor
jbe
insl
jb
out
mov
ja
add
mov
push
es
mov
repnz
lret
js
cmc
fadd
in
loopne
xor
in
call
mov
cmp
mov
adc
add
cmc
xor
movsb
roll
push
mov
loopne
cmp
ror
sarb
mov
ret
test
test
call
push
jne
dec
or
insb
inc
ror
inc
pushf
rcll
xor
inc
push
iret
add
xchg
dec
add
cmp
inc
std
andl
pushl
daa
cmpb
push
adc
sub
dec
inc
inc
loope
nop
lret
mov
test
pusha
sub
sbb
add
call
fcoml
push
je
popf
push
or
loopne
fs
sbb
lds
push
loop
push
mov
into
inc
add
lcall
ret
xor
int3
and
xchg
jo
cltd
jbe
add
test
push
test
push
mov
push
in
mov
icebp
mov
push
push
xor
sub
xchg
callw
push
sbb
sbb
testb
pusha
loopne
int
cmp
loop
inc
xchg
leave
cmpsl
xor
xor
xchg
enter
iret
xchg
es
sbb
aas
shrb
mov
cmp
lea
mov
test
dec
xor
stos
leave
push
ljmp
out
cmp
ljmp
fdivrs
dec
add
dec
movsb
and
and
rol
lahf
add
cmp
cmp
or
jmp
inc
cli
jg
scas
adc
gs
inc
inc
pushf
cld
adcb
mov
add
ret
data16
test
or
push
push
dec
and
bound
lock
jle
insb
inc
lea
or
fistl
outsb
inc
sub
mov
cmp
add
sub
sbb
sti
adc
loope
call
pop
mov
cli
inc
xor
mov
sbbb
xchg
mov
imulb
adc
cmp
sti
aam
addr16
jmp
mov
sub
xor
xchg
clc
add
add
xor
mov
mov
imul
adc
mov
dec
cli
addl
mov
cmp
adc
mov
or
psrlw
cld
out
sub
add
lea
or
inc
cmp
adc
leave
inc
js
sbb
fidivl
mov
adc
js
aas
imul
or
mov
add
add
rorb
fbstp
push
jge
mov
push
int
add
inc
inc
pushf
cmp
rorl
cwtl
adc
mov
std
push
inc
negb
std
or
pop
push
inc
lods
add
or
addb
xor
loope
pop
adc
add
pop
dec
incl
or
mov
push
inc
fsubrl
js
jne
test
test
xchg
test
cwtl
pop
mov
dec
fsubrl
cmpl
ret
mov
arpl
mov
jecxz
repnz
outsl
incb
lcall
sub
xchg
sbb
or
ljmp
mov
pop
add
movb
dec
xor
pop
push
test
nop
cmp
add
rcrl
mov
push
dec
push
pop
adc
mov
test
divps
fs
push
ficomps
push
dec
ljmp
mov
sub
stos
roll
ja
incl
call
iret
gs
cmp
add
addl
cli
repz
cwtl
outsb
fmul
mov
pusha
adc
xor
aaa
mov
ficoms
push
add
pop
lock
push
imul
mov
jb
push
mov
jne
movsb
movb
in
xchg
xor
pop
xor
outsb
inc
and
xchg
dec
jo
imul
stos
jne
mov
push
orb
push
js
lock
mov
test
pushf
push
nop
add
rcll
gs
sub
or
bound
les
add
jle
push
push
ss
jl
dec
mov
lock
in
sbb
fstps
push
sub
inc
hlt
adc
scas
sub
add
mov
xor
out
fiaddl
in
adc
push
add
or
loop
mov
faddl
mov
loopne
adc
mov
insl
out
fcom
incl
hlt
lret
inc
inc
call
lock
cs
sub
jmp
adcb
inc
in
jp
adc
xor
jmp
xor
ffree
fdivrs
push
movsb
bound
test
dec
test
cmpl
dec
out
nop
repz
bound
cld
or
pop
jle
push
je
jo
mov
mov
mov
in
shrb
mov
ss
enter
hlt
divl
jg
loop
ds
fs
pop
adc
push
test
lock
roll
rolb
imul
clc
xor
lea
xor
add
movsb
test
clc
lds
lods
mov
test
dec
push
push
sbb
js
mov
shlb
push
mov
pop
fs
sub
andb
xchg
rol
dec
mov
cmp
ds
cmp
cmp
mov
mov
in
icebp
lcall
mov
mul
orl
cmpsb
push
or
add
fnstenv
inc
push
test
lock
xor
mov
and
mov
mov
incl
jp
mov
sbb
adc
lods
hlt
cmc
aad
push
fwait
adc
incb
xchg
jne
add
cmpsb
ret
lcall
loopne
stc
xchg
add
mov
orl
add
int3
test
fs
push
mov
jecxz,pn
nop
sub
xchg
cld
mov
push
rolb
cmpsb
pop
mov
sbb
push
je
inc
sbb
xchg
call
mov
sub
add
les
cmp
dec
gs
stos
inc
movsb
or
loopne
pop
mov
scas
pop
add
addb
lea
test
hlt
rorb
fistpll
mov
decl
popl
sti
in
fnsave
into
cmp
leave
bound
or
sub
popa
lods
xlat
xchg
das
jb
int3
jl
inc
xor
or
lock
xor
xor
aad
adc
mov
add
cwtl
test
and
or
jmp
mov
arpl
and
lock
pop
mov
mov
pushf
cld
jp
sbb
push
adc
jecxz
outsl
mov
or
fwait
into
dec
sub
lret
in
cmp
test
jno
call
cmp
lock
or
add
cmp
inc
int3
test
pop
add
mov
and
sbb
inc
imulb
jmp
sbbb
loopne
jmp
jne
cwtl
sti
sahf
mov
clc
push
push
ss
cmc
enter
add
mov
mov
aam
jge
div
je
push
jb
sub
push
sbb
mov
daa
pop
push
xchg
or
jmp
lods
adcb
sub
ss
add
imul
push
mov
and
push
xor
inc
inc
cmp
push
shlb
inc
dec
pushf
data16
test
xchg
rol
hlt
lret
or
cmp
mov
or
adc
fadds
push
dec
and
xor
je
pop
inc
mov
loope,pn
push
movsb
aam
cmp
cmp
add
add
jp
leave
pop
jnp
add
cs
push
lock
es
or
cmp
call
push
std
jg
mov
add
mov
insb
push
or
out
mov
pop
push
or
pop
sub
sbb
lahf
bound
test
pop
cmp
inc
int3
fdivr
outsl
loop
aas
clc
mov
incb
xor
outsb
push
int3
mov
xchg
adc
call
cmp
adc
stos
arpl
cmp
xchg
jl
push
jo
jecxz
push
mov
decb
add
loopne
push
cmc
add
mov
ret
movsl
aad
cmp
xor
sbb
push
cld
in
lea
into
test
dec
jl
push
jbe
xor
mov
push
aaa
push
bound
pop
imul
sbb
push
jmp
push
fstpl
mov
sarl
test
mov
mov
sbb
lock
test
jl
or
jb
adc
inc
or
scas
aaa
sub
adc
js
sarb
ret
mov
lret
out
enter
mov
or
loopne
js
mov
mov
push
pop
insl
cmpb
push
mov
or
adc
ficoml
adc
mov
movsl
aad
loopne
add
ret
outsb
adc
cmp
push
inc
and
scas
lcall
inc
dec
imul
call
std
push
inc
cmpsb
fsubr
repz
push
fists
test
loop
push
hlt
inc
mov
lock
mov
jg
incb
faddl
scas
sub
push
mov
clc
adc
mov
cmp
and
dec
out
scas
xchg
mov
push
in
addb
jo
nop
xchg
adc
push
or
int3
mov
cs
dec
jp
inc
test
jg
dec
add
xor
in
push
ret
mov
add
loopne
jge
cmp
pusha
cmpl
mov
gs
adc
cmp
xchg
dec
gs
jp
iret
data16
or
add
add
repnz
jbe
aam
fisttps
decl
push
xor
cwtl
inc
mov
jg
mov
dec
in
adc
cmp
push
sub
push
nop
mov
push
or
jbe
push
ss
dec
jmp
push
lret
inc
sbb
add
mov
xor
dec
in
gs
loopne
nop
shlb
push
std
add
pop
fcoms
scas
popa
std
out
lock
dec
int3
sbb
pop
push
cmp
push
or
nop
aam
xchg
mov
pop
mov
out
push
dec
aam
sbb
inc
sarb
les
out
inc
std
out
fcom
shll
rcll
iret
mov
popa
pop
insb
push
pop
dec
mov
call
das
std
dec
mov
mov
and
add
add
mov
cli
inc
inc
into
out
lock
andl
in
and
inc
fs
lea
sub
push
add
sub
sarl
lea
aaa
into
mov
add
je
stos
pop
mov
push
mov
sbb
sarb
dec
aaa
adc
rcrb
pop
ljmp
push
fldenv
sahf
dec
lcall
inc
push
push
push
mov
loop
mov
or
xchg
mov
xor
mov
fmuls
add
sub
sarb
xor
pop
cmp
inc
adc
enter
arpl
push
push
mov
cmp
push
andb
loope
add
xchg
clc
aad
cmp
sub
loop
clc
imul
js
or
ficoml
or
mov
mov
or
sub
test
dec
rolb
movsb
inc
add
jne
add
test
push
mov
rcll
push
pop
cld
cmp
add
jp
movsb
add
dec
rolb
xchg
mov
sub
add
jbe
push
call
dec
inc
popf
xlat
mov
clc
arpl
pop
imul
xor
mov
mov
movsb
xor
rolb
movsl
mov
mov
add
add
mov
lret
pop
and
in
cmp
sbb
xchg
js
insb
test
and
out
cld
ror
cmp
lea
mov
xor
jb
push
shlb
pop
sbb
fdivrl
js
inc
and
lret
stc
jno
and
push
scas
jmp
mov
mov
insb
xor
jbe
js,pt
movb
movb
mov
test
es
out
push
int
sbb
sbbl
incl
jne
add
or
nop
xor
push
adc
aad
push
jnp
cmpsl
push
add
js
pop
mov
repnz
fs
call
mov
hlt
push
and
inc
mov
pop
cmp
mov
or
adc
lock
jbe
or
pop
add
orb
cmovne
and
jb
adc
mov
mov
push
cli
lods
lods
or
push
push
jno
pop
or
pop
test
sbb
pusha
jp
mov
inc
test
jp
iret
xchg
push
and
dec
mov
or
cs
jmp
dec
mov
sub
and
icebp
sbb
mov
bound
add
dec
xor
int3
outsb
push
gs
push
test
cld
das
outsb
das
inc
cmp
shlb
or
cmp
out
leave
inc
dec
xor
call
xchg
pop
and
cmp
icebp
mov
add
stc
cmp
sub
mov
mov
dec
pop
movsl
lods
and
cmp
and
and
xlat
lods
dec
and
jle
je
mov
sbb
cmpsl
xlat
push
adcb
sar
cmpl
in
or
ficoms
mov
inc
subb
add
jmp
jg
and
cmp
cmp
and
outsl
or
shrl
inc
mov
and
xor
fsubs
and
xchg
xor
adc
cld
fdivrl
push
icebp
testb
jmp
inc
scas
mov
std
cld
imul
ljmp
hlt
push
fdivl
jae
mov
jge
cmp
mov
push
push
push
rol
sbb
data16
xchg
push
lock
cmp
cmp
and
cld
or
loop
loopne
cld
add
arpl
out
xchg
addl
sbb
roll
cmp
jmp
mov
or
sbb
repnz
inc
push
push
sub
inc
clc
cwtl
outsb
xchg
inc
ss
push
sub
pop
or
mov
cld
cmpsb
and
lea
insb
fistpl
dec
dec
loope
sub
jb
outsb
jp
push
frstor
jae
or
or
gs
rorb
mov
mov
cmp
faddp
pop
in
cmpsl
cli
mov
mov
cmp
inc
pop
lea
test
cmp
pop
lock
xor
ret
mov
jnp
sbb
hlt
scas
inc
sbb
hlt
inc
adc
xor
ret
call
adc
roll
pop
into
inc
loope
std
in
mov
ja
js
cmp
xchg
lods
out
sbb
vunpcklps
mov
xchg
jne
cli
outsb
cwtl
inc
xchg
xchg
jmp
enter
orl
stos
sbb
and
pushf
enter
test
mov
jecxz
add
add
mov
push
pop
insb
add
addr16
fnsave
rsqrtps
push
cmpsl
jne
mov
xchg
call
test
cmc
lcall
lods
jg
mov
pop
or
jns
sbb
incl
incb
add
aam
fadd
pop
push
jmp
adc
je
loope
mov
pop
push
repnz
shll
mov
and
ret
add
sub
test
iret
in
nop
lds
push
pop
add
add
out
out
jge,pt
lock
and
idivl
negl
push
cs
test
push
call
pop
jl
mov
nop
xchg
push
push
loop
push
test
or
rclb
push
nop
add
fwait
imul
jl
outsl
sbb
add
ret
or
or
or
jb
mov
loopne
stos
lods
inc
into
inc
mov
js
js
mov
loopne
in
lcall
add
repz
pop
mov
jg
je
lock
pushf
add
ret
in
pusha
mov
movsb
stc
call
push
adc
es
lahf
imul
dec
int
mov
in
repz
mov
push
sub
mov
dec
inc
mov
fdivl
sbb
fadds
xor
loopne
imul
fimull
clc
hlt
jno
mov
adc
out
inc
ret
push
divl
add
fcomps
mov
jl,pn
push
mov
clc
push
mov
sbb
pop
push
mov
adc
fildll
xchg
adc
jbe
imul
or
fwait
in
add
jl
test
push
lcall
fcmovbe
xchg
and
sub
sbb
sahf
or
xor
testl
mov
or
mov
hlt
xor
adc
je
mov
mov
mov
subl
xchg
sbbl
dec
ja
lret
mov
or
sbb
dec
mov
jle
mov
push
xor
aad
in
je
mov
mov
and
aas
add
or
fistl
mov
add
mov
mov
xchg
in
fisubs
or
push
or
cs
add
push
inc
or
xor
dec
mov
in
outsl
jmp
cwtl
ret
pop
ret
cmp
call
fwait
hlt
dec
shl
cmp
fdivrs
xchg
rolb
stos
scas
xchg
pop
and
shll
insl
add
pop
aam
mov
cmp
rolb
or
dec
inc
cmp
jnp
push
add
dec
rorb
insb
fneni(8087
push
loopne
xchg
pop
push
or
enter
mov
xchg
test
outsl
xor
nop
mov
xchg
add
hlt
add
dec
clc
gs
outsb
adc
pop
std
pop
std
inc
enter
and
and
cs
test
add
mov
mov
and
sub
prefetchwt1
sbb
cld
add
mov
inc
push
mov
aam
dec
or
pop
icebp
lea
and
mov
inc
arpl
clc
or
or
negb
movsb
add
popa
sahf
shr
cs
insl
in
xor
pusha
inc
and
xor
call
ss
xlat
or
add
loopne
xchg
fmull
adcl
mov
je
outsb
push
ljmp
xor
or
cld
or
int
push
dec
mov
push
push
jb
sub
jp
ljmp
add
arpl
add
ret
incb
add
ja
xchg
popa
loopne
popf
test
xor
inc
xor
cmp
jp
ja
outsb
imul
in
or
push
ja
fadd
lret
movsl
mov
lods
int3
cmpb
push
negl
jo
adc
fidivl
jp
pop
mov
lds
sbb
push
rcrb
sub
inc
jmp
pusha
lret
bound
iret
xor
js
xor
inc
pop
sub
mov
loopne
es
adc
pop
sbb
xor
int3
dec
lea
or
cs
jecxz
inc
lcall
ja
outsb
loopne
mov
pop
add
and
adc
pop
inc
lods
xor
add
clc
call
inc
inc
inc
or
or
out
cmp
mov
std
sar
popf
push
push
cli
pushf
xchg
cmp
push
stc
add
xlat
es
mov
cli
inc
fbld
scas
sub
sub
ljmp
ljmp
push
incl
mov
adc
std
dec
mov
and
testb
ja
mov
rolb
hlt
pop
inc
jmp
xchg
pushf
es
scas
ds
mov
frstor
scas
sub
sbb
lcall
sbbl
rcr
fsubs
jl
pushw
adc
or
es
test
push
testb
push
add
mov
pop
lods
sbb
add
lcall
add
test
jne
clc
cmp
insb
xchg
dec
jne
fsub
call
dec
mov
ds
push
repnz
jmp
shrb
loope
in
test
data16
shll
sbb
dec
push
cs
adc
pushf
and
xchg
add
sub
jbe
out
pop
sub
jmp
mov
dec
xor
mov
roll
dec
push
sub
int3
push
sub
mov
inc
dec
call
push
ljmp
mov
test
inc
lret
leave
pop
inc
sbb
and
sbb
data16
mov
loopne
adc
cmpsb
fisubs
dec
pusha
xor
lds
pop
pop
outsb
aam
pusha
stos
add
outsb
dec
mov
cmp
jecxz
push
or
out
test
adc
jp
fcoms
adcl
pop
jge
leave
pop
xchg
inc
add
rcrl
outsb
push
sar
in
mov
ficompl
or
shlb
es
mov
call
fdiv
lcall
shrl
cmp
add
incl
adc
cmc
mov
decb
jnp
jecxz
and
outsl
and
jl
js
xchg
add
mov
add
and
cmc
inc
inc
push
cli
mov
ret
mov
cld
sar
repz
add
cmp
push
out
lock
fimull
movsl
aaa
add
or
dec
es
ss
popa
out
add
mov
out
add
inc
mov
dec
add
es
pop
insb
sub
add
add
push
es
stc
inc
clc
push
and
fwait
out
and
jo
push
push
test
loop
sub
out
xor
inc
sub
outsb
sub
jl
mov
aad
mov
in
cmp
push
lods
gs
and
mov
push
sbb
cmp
mov
inc
shlb
sahf
pushl
fcoml
or
stos
mov
into
incb
and
dec
add
cmp
add
cli
cmp
inc
les
inc
add
lods
push
hlt
cmp
hlt
insb
or
shrb
pop
cltd
xor
push
push
and
push
jno
adc
jl
int3
sbbb
popa
adc
xchg
adc
add
xor
arpl
mov
mov
push
iret
lea
push
loopne
insb
test
rolb
add
inc
inc
dec
jo
popa
mov
or
push
je
sub
mov
xchg
or
inc
notb
cmc
fs
dec
jp
add
mov
pop
mov
std
subl
jecxz
call
shrb
pusha
ljmp
es
outsl
jne
dec
fisubrl
ret
jl
push
pop
mov
aad
push
inc
testl
mov
test
mov
jne
sti
add
xchg
nop
mov
mov
rol
mov
sbb
sbb
mov
or
cmp
xchg
lcall
lock
cmp
xchg
mov
loopne
lock
cs
cmp
dec
mov
add
adc
pusha
xor
loope
add
cs
stc
fdiv
mov
mov
jmp
fiaddl
in
xor
sahf
pop
push
cmp
adc
inc
stos
dec
add
int3
add
sub
movb
sbb
stos
movsl
adc
leave
int3
add
pop
daa
les
lret
cld
push
lea
xchg
mov
push
hlt
mov
outsl
inc
xlat
jge
mov
mov
cmp
cmpsb
jle
jo
call
jnp
dec
push
lahf
mov
in
sub
and
ss
cld
dec
jle
jo
jbe
addl
push
outsl
push
das
ja
mov
cmp
or
leave
add
sbb
clc
cmpsb
cmp
push
jb
xlat
or
mul
and
test
lea
lcall
mov
jbe
loopne
rorl
add
rorl
dec
xchg
mov
or
add
push
ja
xchg
mov
pop
push
int
adcl
insb
fs
test
push
insl
mov
jmp
in
pop
mov
test
imulb
rcr
jne
mov
push
pop
aam
mov
jmp
xorl
insb
jne
imul
xchg
xor
sub
jo
push
outsb
push
mov
mov
adc
ret
fcomps
mov
mov
or
jp
pop
ret
test
fcmovbe
cmp
adc
jmp
rclb
incb
cmp
or
fisttpl
ret
dec
sbb
and
les
lock
or
loopne
add
cmp
jg
push
gs
add
nop
test
push
fimull
add
aaa
in
int3
repnz
push
aad
lods
push
lods
adc
ret
mulb
push
push
add
cmp
ret
jg
add
add
pop
jbe
mov
push
mov
mov
cmp
push
loopne
xor
stc
inc
lea
sbb
mov
fld
cmp
lcall
xchg
popa
mov
add
sbb
pop
cwtl
dec
inc
shrl
cmpl
add
add
fwait
add
fisttps
popf
jg
pop
pusha
insb
adcb
xor
mov
inc
ljmp
repz
decb
xor
sbb
fwait
add
enter
imul
cmp
test
adc
xor
mov
adc
fcmovnb
or
stos
testl
movsb
push
ret
mov
xor
jle
je
add
lcall
aam
lock
test
sbbb
push
into
jae
dec
mov
mov
mov
or
pop
push
add
inc
jl
stos
cld
cmp
je
jne
jmp
adc
jb
or
lods
sbbb
jle
popa
call
sub
decl
dec
imul
sbb
call
inc
test
cmovno
imul
clc
add
mov
hlt
mov
lret
add
jle
sarl
out
js
mov
and
test
cmp
std
mov
fistpl
fistps
mov
les
xchg
add
test
mov
xor
xchg
jo
pop
test
push
iret
mov
pop
lock
test
or
je
sbb
push
mov
loopne
cmpsb
xor
je
imul
sbb
push
cltd
push
or
add
imulb
push
aad
or
pop
int
mov
mov
adc
shl
mov
pop
movsb
cmp
sti
inc
jmp
sub
stos
clc
and
push
sarl
xchg
mov
jno
repz
loop
add
push
jb
push
test
mov
pop
jne
sbb
aam
pop
push
jl
sbb
mov
pop
rclb
pop
push
adc
xor
push
insl
add
inc
lcall
mov
sub
ficoms
in
sbb
fdivl
les
int3
cmpsb
push
xchg
icebp
into
and
cwtl
decb
test
lea
dec
loopne
lods
insb
pop
add
mov
loopne
mov
xchg
jecxz
lods
repnz
movl
sbb
int3
mov
dec
ret
cmp
or
xor
sbb
add
dec
jmp
add
shlb
pusha
aas
lods
mov
int3
add
adcb
ljmp
daa
fs
or
rcrl
dec
add
mov
pop
ror
adc
loop
out
outsl
pop
or
pop
ds
call
scas
jae
jnp
imul
fs
notrack
cmp
scas
incl
jmp
andl
xchg
add
dec
mov
loopne
jne
add
adc
lock
sub
dec
mov
aas
cmpsb
je
std
aaa
lahf
push
ss
je
mov
ss
mov
sbb
cmp
mov
sahf
ja
call
test
cld
sbb
insb
sub
push
data16
shrb
push
rcrl
dec
push
lcall
inc
incl
xor
sbb
add
fisttpl
mov
inc
xor
adc
xor
mov
testl
insl
repnz
cmp
add
inc
push
xchg
or
mov
loope
add
fildl
pop
mov
jle
sub
sar
and
adc
and
dec
inc
andb
inc
test
test
call
pop
add
push
movsl
add
enter
ds
test
mov
shlb
int3
sub
sbb
insb
mov
sub
in
insb
or
mov
mov
sub
enter
cmp
push
push
mov
cmp
inc
loopne
int
rcrl
enter
or
pusha
jo
rcrb
aas
mov
lcall
xor
xor
pop
ret
inc
gs
push
adc
jmp
push
outsl
sub
popf
je
add
cmpsb
ret
and
dec
xor
adc
dec
xor
lahf
push
push
mov
ss
pop
fwait
push
add
sbb
adc
jo
data16
fsubr
pusha
lods
or
shrl
out
xchg
and
mov
pop
or
js
in
xor
inc
mov
and
icebp
ret
call
rolb
sbb
push
add
call
lock
jmp
mov
add
movsl
xor
dec
std
bound
add
lock
cmp
int
xlat
lahf
sbb
sbbl
xor
or
rcl
inc
mov
sub
or
adc
dec
call
int3
fadds
lcall
jmp
loope
mov
test
xchg
xor
cli
shll
and
fwait
xchg
xchg
pop
das
popf
popa
add
mov
int3
sti
pop
or
lock
mov
sar
push
cmp
dec
push
sbb
push
pop
mov
lea
int3
mov
dec
inc
sarl
push
mov
mov
mov
mov
or
and
mov
jo
incl
xor
mov
fldt
xchg
orl
test
or
inc
mov
push
call
or
imul
jbe
inc
test
or
sub
test
lock
data16
pusha
inc
mov
movsl
jbe
fs
adc
int3
pop
jle
negb
push
insb
jo
add
or
cmp
pop
inc
add
outsb
jg
sarl
jge
shlb
mov
inc
sar
lret
xorl
jle
in
icebp
pop
push
daa
ficompl
and
push
jmp
pop
fidivrl
aas
jbe
sbb
xchg
adc
inc
and
dec
ss
pop
fs
enter
cmp
pop
test
or
fcmovu
and
aam
hlt
in
lea
fadds
xor
stos
pop
ffreep
add
push
inc
push
xor
xchg
add
jb
in
call
mov
ret
dec
out
cmp
std
outsl
addb
in
add
ss
or
out
mov
idivl
jo
push
loope
lock
mov
mov
cmp
add
test
push
pop
inc
dec
mov
nop
xor
fiadds
add
out
femms
mov
fs
mov
add
inc
cwtl
out
fstpt
push
call
or
sbb
inc
cmp
cmp
xor
pop
inc
pop
jne
cmpsb
inc
test
lods
and
subl
adc
rol
shr
inc
arpl
jo
fxch
mov
or
fldl
jne
dec
es
add
je
mov
or
push
fdivrl
sbb
cmp
push
xor
push
xor
jl
insl
inc
xor
inc
xchg
mov
pop
ljmp
push
cmove
call
push
cwtl
mov
cmp
je
push
mov
xor
stc
add
jo
sub
mov
rorl
mov
fcoms
cli
or
rorb
test
and
inc
js
shll
and
jmp
mov
popa
inc
adc
inc
mov
out
adc
cld
daa
mov
inc
or
shl
pop
clc
add
les
push
and
fucomip
cmp
jmp
pop
push
gs
cld
out
mov
insl
add
dec
jmp
xchg
add
popf
stos
fwait
sbb
cmp
movsb
push
add
add
mov
aas
sar
sbb
outsb
in
test
mov
adc
stos
outsb
xor
leave
call
xchg
or
movsl
adc
xor
inc
push
push
cmp
jecxz
in
sbb
jbe
in
push
std
pop
add
in
add
inc
xorb
daa
test
fisttps
add
dec
arpl
cld
enter
pop
lcall
dec
cli
es
test
shl
mov
pop
enter
push
fdivr
mov
cmp
push
and
mov
cli
divl
incl
xor
ds
int3
xchg
scas
push
pop
sub
shlb
jmp
lods
adc
mov
in
and
inc
mov
lea
mov
add
arpl
ss
pop
xchg
mov
adc
push
rorb
adc
mov
imul
xor
inc
push
xchg
inc
das
xor
call
xor
dec
pop
lods
pop
adc
shll
fstpl
pushf
lea
insl
or
sbb
test
or
lret
push
stos
push
sbb
test
ret
clc
jne
or
call
sub
add
into
shrb
mov
inc
cmpl
push
push
inc
pop
pop
sub
xor
decl
dec
sub
sub
sbb
in
mov
iret
lock
bound
in
out
dec
jbe
mov
test
inc
add
mov
in
cmc
mov
icebp
adc
es
pop
fstpl
xor
push
dec
inc
aaa
inc
movsb
es
add
dec
inc
enter
adc
mov
adc
into
mov
jle
outsl
sbb
repz
push
lcall
lea
mov
or
adc
push
sbb
es
lret
add
notb
push
fstpt
push
or
jae
lret
das
adc
push
hlt
adc
inc
bound
pop
call
mov
cwtl
sbb
je
and
bound
fs
xor
or
pop
dec
xchg
sbb
mov
mov
rorb
sub
inc
stc
lcall
xchg
jmp
stc
jg
loope
ficomps
push
in
jmp
add
mov
inc
pop
rcll
cmc
lods
adcl
jbe
push
ret
aaa
mov
lcall
in
pop
push
jle
inc
rdseed
mov
add
outsb
enter
les
jecxz
test
adc
add
or
inc
scas
xor
loopne
push
mov
test
mov
mov
add
sub
sub
inc
xor
roll
add
add
add
shlb
scas
cs
pop
jb
xchg
mov
call
loop
sub
cltd
je
mov
es
je
iret
clc
sub
gs
mov
cli
andl
xor
mov
idiv
push
mov
xchg
pop
sub
jmp
pop
hlt
stos
mov
push
cmpxchg
push
daa
fcoms
sti
mov
lods
gs
mov
and
inc
daa
out
adc
xor
jb
xchg
pop
in
mov
stos
xor
xor
xchg
andl
jg
mov
and
xor
nop
lock
es
push
fmuls
add
adc
mov
int3
ret
mov
inc
enter
xchg
mov
add
sbb
push
xor
sbbb
out
dec
dec
mov
test
pusha
xchg
inc
pop
jo
or
imul
push
jp
mov
pop
jo
aaa
movsl
sbb
xchg
ds
push
xchg
addb
orl
sbb
repz
add
scas
mov
jne
lock
mov
mov
aad
mov
pop
lret
jnp
add
inc
cmp
arpl
adc
xchg
pop
ret
pop
dec
push
js
mov
jl
xlat
and
int3
xor
adc
mov
testb
pop
dec
cmp
nop
fld
in
fmulp
jg
imul
std
std
cld
nop
inc
aad
xchg
popf
bound
jo
cmp
shl
mov
push
push
push
cmp
fisubs
stos
add
cld
insb
xor
mov
nop
orl
out
mov
pop
pop
pusha
push
inc
xor
leave
add
icebp
push
nop
sbb
jmp
mov
mov
insl
xor
leave
add
cmpsb
sarb
insb
or
lock
or
shr
mov
sbb
lock
cmc
jne
pop
adc
hlt
aam
jg
dec
cli
mov
push
clc
mov
cli
sbb
test
xchg
loopne
adc
mov
aad
mov
sbb
rorl
ds
test
mov
rorw
mulb
mov
sbb
sbb
clc
push
add
out
push
movsb
int3
and
sahf
or
mov
test
add
rorl
jbe
in
xor
push
mov
inc
mov
jecxz
sub
or
sub
mov
fwait
lea
rclb
add
mov
inc
gs
inc
or
loopne
int3
cmp
sub
jo
push
out
push
cli
shll
cmp
mul
dec
mov
pusha
xchg
jne
mov
or
push
mov
bound
sbb
loopne
and
fstpt
jge
push
xchg
movsb
dec
push
and
add
dec
inc
imul
jnp
cmp
or
xchg
xchg
jb
xor
mov
out
ret
or
adc
pusha
push
subl
and
dec
filds
add
je
call
lock
inc
mov
or
adc
pop
or
add
insb
lret
shrb
test
inc
into
xchg
in
or
jb
push
scas
pop
mov
fdivrs
sahf
clc
rcr
or
cmp
adc
nop
in
test
inc
rcrb
adc
je
stos
fst
inc
adc
lock
test
or
mov
inc
je
movsb
ds
in
fiaddl
jo
rolb
cmpsb
inc
inc
push
mov
mov
add
or
mov
cld
push
sub
aaa
je
fldt
fs
fsubrl
add
xor
xor
sub
xor
adc
jp
arpl
lock
and
push
cld
sbb
inc
testb
cmc
sub
fmull
test
xchg
rclb
push
fsubs
test
out
fidivrs
mov
les
jb
pop
mov
pop
lods
pop
pusha
das
jmp
sbb
adcl
sarb
mov
loopne
je
mov
or
adc
lea
ficomps
fdivs
mov
out
mov
dec
fs
ss
pushl
mov
shr
push
movsb
jb
mov
in
movsb
push
lods
add
inc
sbb
scas
add
mov
push
into
leave
push
sbb
cmc
push
jge
rcrb
orb
and
push
inc
gs
and
mov
lea
pop
add
lock
xchg
push
mov
sbb
and
shlb
lcall
mov
jp
test
sbb
jmp
adc
roll
lahf
std
or
test
mov
scas
mov
adc
pop
ret
daa
push
or
adc
or
cltd
mov
fisttpl
test
rolb
adc
pop
or
xor
or
push
push
lock
jmp
pop
push
mov
push
mov
pop
out
add
and
addb
test
fiadds
xor
pop
sti
fwait
test
loopne
mul
cmp
sbb
or
movzwl
add
shlb
mov
adc
sbb
call
xor
les
ret
push
or
xor
mov
je
cs
cmp
push
daa
xor
or
cmp
and
icebp
ja
sbb
loope
pop
cs
out
xchg
fs
mov
jmp
push
or
jmp
es
add
and
in
jmp
mov
lods
push
lret
shrb
jl
inc
push
add
xor
cmp
stc
inc
lods
mov
ret
cmp
pushf
gs
or
ljmp
fidivrl
rcr
adc
sub
inc
add
mov
push
call
call
stos
mov
sbb
adc
rclb
add
iret
std
bound
ljmp
xor
push
inc
inc
movsb
xor
add
add
test
ret
jbe
loopne
insl
sti
push
sahf
or
cltd
jne
fs
loope
fs
mov
jle
hlt
mov
mov
pop
pop
add
negl
mov
xchg
add
icebp
cltd
pop
push
mov
mov
aaa
push
add
jg
popf
mov
ss
shll
add
add
xor
in
add
scas
inc
fnstenv
jo
pop
sete
mov
or
lret
pop
leave
fstps
test
insb
cmp
xchg
stos
test
dec
push
cli
mov
bound
subl
jp
fisubrl
push
add
mov
fwait
adc
pop
outsl
xor
rolb
ret
aaa
inc
in
cmc
inc
mov
adc
inc
sbb
mov
loopne
movb
add
mov
test
mov
popf
es
data16
push
in
int3
ret
loopne
jmp
loope
cmp
je
incl
inc
mov
aaa
mov
mov
push
adc
sahf
mov
test
scas
ds
sbb
or
sbb
pop
sbb
or
jb
lea
fcomip
jg
imul
jl
pop
std
ret
stc
dec
lcall
mov
cmp
push
out
jne
xchg
pop
fsubl
popa
mov
jbe
add
nop
inc
pop
xor
dec
mov
adc
hlt
mov
add
dec
push
jl
int3
sub
daa
pop
stc
sbb
dec
mov
inc
sub
repz
pop
mov
xchg
cmp
push
and
jge,pt
adc
or
and
mov
add
adc
imul
loop
call
insl
enter
jle
js
pop
ficoms
mov
scas
jg
adc
insb
inc
cmp
xchg
mov
pushl
mov
mov
popa
sub
or
xchg
nop
sbb
cmp
sbb
and
ss
inc
jbe
das
push
enter
decb
inc
cli
mov
icebp
cmovg
sbb
push
push
push
pop
mov
clc
or
adc
lea
add
xor
adc
or
add
ljmpw
adc
subb
and
leave
mov
fimuls
pop
xchg
push
in
clc
add
clc
dec
loop
or
fs
xor
cmp
xor
pop
jne
lea
jge
and
pop
push
xchg
ds
inc
notb
fistps
xchg
jp
test
call
std
push
je
cmp
xor
push
push
mov
lods
add
je
cmp
iret
mov
and
mov
js
mov
pusha
pop
cmpsb
or
sbb
or
mov
push
dec
xchg
test
aad
addl
stos
or
inc
ret
mov
add
decl
ljmp
dec
bnd
inc
cmpsb
test
push
inc
dec
dec
pop
pop
outsl
outsb
neg
jl
xchg
sti
outsb
add
fidivrs
mov
adc
ljmp
push
cmp
out
loopne
nop
cmp
pop
jno
push
xor
adcl
imul
jns
aaa
adc
mov
push
mov
outsb
mov
fists
or
mov
dec
xor
and
mov
adc
lcall
leave
add
lea
push
clc
test
adc
test
jb
js
jle
mov
mov
lcall
xchg
ss
fdivl
sbb
cld
in
cli
loopne
jae
imul
lcall
jmp
mov
rdtsc
mov
fs
xor
sub
lea
mov
add
push
out
jmp
stos
fwait
xchg
mov
jmp
data16
add
orl
push
lret
mov
int3
inc
sti
xor
mov
lcall
mov
mov
in
fucompp
push
xchg
nop
call
in
jbe
add
bnd
repnz
inc
mov
je
push
scas
fcoms
mov
adc
push
or
fwait
lock
xchg
lock
add
push
int
mov
insl
rcrb
and
or
filds
xchg
loope
pop
add
ljmp
arpl
mov
dec
mov
mov
mov
stc
vphaddbd
cmp
xchg
repnz
xor
mov
fidivl
test
xor
dec
xlat
cmpsb
pop
adc
scas
push
cwtl
inc
jae
jne
test
sub
mov
adc
sbb
jb
inc
call
lea
hlt
xor
ja
bound
imul
pushf
sub
fs
sbb
fsubl
js
inc
call
mov
popa
push
in
xor
add
lods
ljmp
sub
ror
push
or
dec
dec
cmp
pop
push
ss
in
lcall
push
push
pusha
push
lret
loope
or
push
adc
fs
or
push
add
loop
in
adc
imul
test
movsb
add
mov
in
shll
cmp
or
sbb
push
push
jbe
push
sahf
int3
push
aam
pop
movsl
push
in
dec
ret
xchg
cmpsl
enter
dec
xor
cmpsb
loope
push
pop
ficoml
loopne
dec
lods
imul
outsb
push
mov
push
adc
scas
jo
mov
fninit
cmp
push
ss
out
fwait
insb
lea
jg
ljmp
jbe
mov
add
fstpl
push
sbb
push
int3
mov
push
fs
xor
dec
mov
das
es
aaa
insl
ja
mov
ret
add
or
mov
and
ret
cmp
pusha
enter
ret
hlt
or
in
cmp
add
pop
add
xlat
fwait
pusha
insl
inc
push
mov
test
outsb
dec
mov
sti
push
fsubs
stos
add
adc
inc
add
out
xchg
js
cmp
push
push
sub
hlt
add
shr
cmp
push
push
push
or
fcoml
outsb
ret
es
cwtl
cmp
rcr
adc
clc
mov
mov
cmp
and
es
inc
jae,pn
ljmp
cmp
cmp
or
sbb
adc
jecxz
shr
fmulp
or
in
cmc
xor
cs
pop
inc
bound
add
roll
jg
or
mov
adc
cmp
mov
inc
sbb
jle
mov
leave
push
test
inc
fbstp
push
lea
push
sbb
movsb
fidivrs
push
jne
push
dec
call
fdivrs
roll
dec
decb
push
push
push
add
adc
fmuls
popa
mov
out
testb
pop
mov
mov
pop
clc
and
pop
movsl
mov
outsl
adc
dec
cli
cmp
cmp
mov
mov
inc
fstpt
push
inc
subl
dec
mov
hlt
push
xor
test
enter
adc
nop
pop
inc
lods
push
mov
push
dec
loopne
test
or
xor
push
ficomps
sub
add
jmp
loope
add
sbb
call
sbb
pop
lods
push
mov
jmp
push
movsb
inc
cld
out
cmp
push
add
dec
mov
push
and
inc
sub
in
or
aad
mov
dec
stos
ret
push
cmc
adc
ror
push
test
fcoms
adc
rol
lods
int3
adc
mov
or
scas
pop
inc
sbb
shlb
aaa
cli
out
jb
cld
test
add
jle
in
sahf
pop
lea
or
int
daa
ss
rolb
cmp
out
jmp
sbb
jge
sub
and
call
or
mov
sbb
inc
aaa
imull
les
add
and
fisubrl
sbb
mov
test
fisttpl
cs
and
xor
push
int3
or
inc
sarb
cli
enter
or
sub
mov
jns
push
cmp
subb
xchg
adc
fstpt
jg
pop
jne
bound
fisttps
or
xchg
sbb
lods
sbb
push
sub
inc
push
inc
push
xchg
push
xchg
sahf
dec
cld
dec
icebp
pop
shlb
adc
and
fucomp
jb
pop
andb
int3
bnd
in
ret
bound
cmpsb
push
aam
incl
jb
fdivp
outsl
pop
sub
and
xor
ljmp
sbb
inc
cltd
lods
pop
rolb
pop
add
adc
or
rolb
cli
adc
mov
jmp
dec
cmpsb
add
or
fwait
call
cmp
call
int
mov
out
mov
int3
adc
or
dec
mov
adc
mov
and
mov
or
jne
xor
add
ds
or
mov
test
sbb
into
imul
dec
aas
sbb
push
xchg
push
ret
mov
lret
test
shlb
std
adc
mov
adc
fdivl
pusha
cmp
dec
xchg
jg
mov
lods
cmova
loopne
sar
xlat
mov
daa
or
pop
mov
dec
jg
repz
inc
test
pinsrw
ljmp
and
fs
rclb
mov
stos
imul
sub
mov
jo
push
or
stos
and
int3
sbb
add
aam
or
inc
add
mov
rolb
inc
xor
out
sbb
inc
xadd
xorl
dec
lea
test
pop
in
dec
jmp
aaa
xchg
pusha
add
pop
jne
sub
sbb
adc
push
in
lods
scas
cmp
mov
push
pop
inc
fld
addl
jbe
aaa
jge
or
mov
sub
stc
inc
hlt
mov
mov
and
push
inc
ljmp
in
jl
lcall
je
sbb
lea
mov
pushf
push
push
in
js
cmp
mov
cmp
bound
clc
sti
xorl
mov
out
ja
jl
ljmp
mov
sbb
mov
jl
mov
cmp
jmp
cli
mov
ds
es
dec
dec
push
rolb
xor
cld
decl
pop
lock
mov
xor
hlt
inc
push
sub
or
sub
es
cli
movsb
andb
xchg
push
shr
aaa
adc
je
cs
push
call
mov
lods
adcb
or
shll
xlat
inc
add
adc
push
pop
fcomps
filds
push
push
xor
mov
mov
lret
mov
or
mov
sub
call
add
or
aas
insl
xchg
mov
shlb
sub
sub
mov
mov
test
add
adc
sbb
lret
stos
or
pushf
call
pop
pop
push
xor
or
xor
rolb
mov
push
sbb
dec
rclb
add
sbb
scas
add
aam
jge
js
dec
sbb
or
cmp
inc
rcrb
cmp
push
andl
mov
ret
rorb
loop
int3
cmp
dec
std
mov
jmp
push
mov
push
adc
dec
bound
fiaddl
mov
adc
out
cmp
and
adc
pop
addb
rclb
mov
aam
push
fs
adc
mov
sub
ret
cmp
out
jb
call
pop
les
push
in
and
mov
aad
enter
call
mov
dec
or
mov
push
add
or
dec
test
xor
fdivl
xchg
je
pop
sub
out
pop
mov
aaa
inc
dec
popa
xor
fs
incb
sbb
xlat
test
outsl
call
popa
int3
jae
inc
mov
test
out
add
aad
mov
inc
test
mov
loopne
mov
outsb
xor
jae
lcall
add
sub
dec
je
imul
jge
icebp
jg
pop
or
clc
xorb
jge
cli
and
pop
or
rorl
rorb
dec
inc
movsb
pop
call
clc
stos
and
cmpsb
jbe
xchg
aam
into
jg
push
add
push
add
jge
cmpb
bswap
lock
rolb
in
icebp
jg
or
add
test
jmp
je
or
enter
push
push
in
and
inc
adc
fcoms
not
cmp
leave
mov
push
xor
mov
scas
adc
mov
push
fs
cmpsb
aaa
lcall
and
mov
sbb
sub
test
push
in
cwtl
push
push
outsl
gs
std
add
adc
lods
arpl
adc
es
cmpl
sub
out
mov
cmp
and
dec
push
push
pop
mov
jp
outsb
in
jmp
add
enter
push
mov
and
jne
into
push
loope
dec
test
mov
or
xor
mov
insl
mov
mov
cs
stos
mov
jne
cmp
add
push
sub
jge
aam
loopne
xor
sbb
pusha
lods
mov
hlt
add
arpl
ret
adc
mov
cmp
je
mov
divb
push
mov
jno
inc
fcoms
mov
clc
ds
dec
loop
mov
xor
jb
loopne
pop
mov
cmp
jl
mov
adcb
data16
add
sahf
xor
aas
sbb
xchg
or
addb
pop
push
push
adc
lcall
mov
mov
adc
pop
add
inc
jl
pop
mov
xor
repnz
call
mov
std
push
lea
inc
cli
bound
mov
adc
adc
ljmp
iret
adc
xchg
rcrb
or
js
leave
ss
mov
push
imul
ror
es
cmp
pop
fmuls
jo
push
dec
jle
add
add
movsb
and
dec
loop
jg
or
gs
mov
fadds
sbb
add
outsb
shrl
cmp
inc
jne
sub
movsb
sub
lock
aam
xor
dec
or
adc
and
ret
inc
pop
je
push
mov
fcoml
mov
int3
inc
icebp
mov
outsb
jmp
jae
enter
sti
dec
rclb
nop
mov
push
call
mov
lock
lods
test
inc
xchg
cwtl
or
push
or
add
clc
push
mov
and
jns
push
jbe
mov
inc
std
mov
dec
les
ss
sub
or
mov
mov
stos
mov
xor
ds
and
ljmp
xor
cs
push
add
pushl
mov
enter
cltd
and
pushf
mov
cmp
xchg
adc
jbe
mov
mov
aam
cs
adc
and
jb
shrb
hlt
lahf
cs
lods
or
xor
fcoms
add
adc
add
call
inc
or
jbe
repnz
or
ss
or
mov
decl
cld
pop
sbb
jmp
mov
add
lcall
add
mov
or
lock
ljmp
cld
xchg
add
dec
cmp
mov
mov
xchg
add
cld
jle
ret
in
rolb
sbb
push
call
mov
je
add
add
jle
add
std
inc
jno
shlb
data16
leave
push
push
imul
or
fcoms
loope
mov
imulb
adc
incb
xor
or
dec
dec
and
adc
adc
inc
inc
pushf
sahf
iret
pop
in
sub
or
shrl
incl
mov
dec
loop
stos
or
pop
mov
in
enter
loope
movsl
and
nop
mov
andl
mov
mov
out
mov
or
sbb
scas
es
sub
xor
inc
js
mov
sti
jge
cmp
mov
jge
mov
imul
pop
int3
inc
pop
loop
lods
sbb
or
movsb
arpl
push
mov
mov
inc
scas
into
sub
iret
int3
mov
and
fimuls
pop
stos
decb
add
add
mov
jo
loop
inc
or
push
data16
sbb
pop
dec
dec
fdiv
pop
decb
sub
andb
lret
jp
push
ds
inc
cmp
pop
nop
sarl
cmp
sub
sahf
lock
and
xor
push
sub
add
jl
adc
fiadds
pop
pop
ljmp
and
cmp
jo
mov
dec
push
xor
call
dec
adc
rol
lods
ret
and
es
rcrb
xchg
out
ss
pop
inc
or
loope
stos
push
push
jmp
dec
js
sbbl
add
mov
imul
xchg
xor
popa
mov
pop
xchg
push
sbb
cs
xor
addl
mov
mov
push
out
lods
xchg
lods
push
or
sbb
gs
jl
pop
sbb
pop
jne
aaa
add
jmp
jne
or
je
sub
cmp
add
push
and
loopne
test
data16
aaa
lock
les
inc
fcmovne
ret
push
push
rorb
push
cli
scas
mov
test
repz
clc
inc
aas
pop
icebp
mov
add
add
cld
jmp
out
xor
pop
adc
mov
jg
subl
not
add
mov
dec
je
mov
add
jo
insb
dec
add
mov
xor
das
je
ja
clc
sub
je
sub
mov
test
test
or
lret
xor
add
je,pn
or
xchg
aad
std
shlb
add
out
rorb
sub
fldenv
sti
sbb
ljmp
jne
pop
or
push
sbb
pop
push
add
and
rol
add
mov
loopne
loop
repnz
dec
add
xor
mov
orb
sbbl
call
rorl
mov
fdivr
int3
dec
inc
xor
lods
test
cmp
insl
dec
movsb
lock
loopne
xchg
fs
mov
bound
test
notb
mov
addl
dec
push
orl
jo
mov
push
or
ret
mov
mov
pop
and
cli
imulb
test
es
les
or
shl
loopne
sub
sub
lock
pop
ljmp
cmp
inc
imul
push
nop
out
mov
xlat
jle
mov
push
and
and
data16
or
dec
adc
rorl
in
pop
mov
cld
mov
jo
inc
sbb
fmull
or
lea
mov
leave
mov
push
pushf
xor
pop
jne
xor
and
pop
jb
push
dec
dec
scas
xor
scas
xchg
clc
mov
xor
xlat
cs
sub
push
fwait
push
push
stos
test
cld
test
push
xor
ret
add
popa
adc
push
sub
or
or
xlat
hlt
jmp
ret
mov
xchg
movsl
or
shlb
iret
divb
dec
jb
pop
and
xchg
dec
std
stos
outsl
or
call
cmp
in
and
inc
incb
mov
cmpl
inc
repz
add
sub
fcoml
mov
sbbb
and
aas
inc
jbe
sbbl
cwtl
clc
loop
arpl
orb
insl
dec
dec
fadds
fisttpll
jl
es
outsb
add
push
adc
dec
mov
in
add
movl
sub
lods
dec
inc
ss
lea
pop
cwtl
mov
rcrb
add
les
inc
push
test
mov
movsl
and
mov
adc
cmp
sbb
jnp
or
out
xor
mov
aam
add
hlt
pop
ret
push
lock
leave
cli
dec
js
jne
ret
push
out
xorl
jae
mov
push
outsl
sub
out
push
icebp
inc
int3
mov
roll
movsb
popf
clc
pusha
fldenv
adc
jecxz
add
push
push
jge
arpl
xor
jge
xor
cs
jne
xchg
shrl
cltd
andb
adc
js
jmp
test
cmp
xor
add
test
add
sub
loope
mov
aad
call
push
mov
cmp
xor
stc
mov
std
loopne
loopne
push
test
and
inc
hlt
idivb
rclb
mov
ret
test
lock
sbb
jmp
ljmp
jb
and
loop
push
insb
in
adc
inc
out
mov
mov
cmp
xor
inc
insb
jmp
cmc
aaa
enter
pop
es
test
daa
test
sub
sbb
fsts
loopne
test
add
cmpsl
push
popa
call
mov
or
sub
and
pusha
adc
jl
push
pop
add
jg
repnz
mov
xchg
push
sub
xor
adcb
dec
decl
std
arpl
xor
out
test
inc
fdiv
jne
sub
add
dec
sub
xlat
jne
cmp
sbb
cli
or
fimuls
je
push
adc
aaa
pop
adc
call
lods
push
jmp
ret
adc
fs
lea
xchg
cmp
comiss
lods
dec
mov
into
xor
loop
push
cmp
or
cld
push
xlat
dec
fbld
sahf
gs
and
les
mov
mov
cld
add
jbe
xchg
mov
inc
mov
push
xor
dec
dec
outsl
test
add
cltd
in
loope
and
lea
iret
movsb
inc
ret
sbb
sub
lahf
outsb
xor
adc
pushl
data16
lods
shlb
jmp
es
or
dec
outsl
sbb
test
cmp
js
add
push
or
xchg
mov
inc
es
add
pop
outsl
inc
or
nop
adc
mov
cmpsb
add
cmp
mov
or
xor
fisttpll
mov
stos
mov
jns
xchg
mov
imul
test
jmp
fldt
mov
or
pusha
xor
mov
jne
sub
dec
xchg
xor
inc
push
mov
movsl
icebp
lods
inc
movsl
sbb
push
fs
nop
jl
gs
pop
jne
xlat
dec
or
out
cmp
xor
jg
in
ss
inc
fiadds
mov
adc
inc
and
add
pop
mov
dec
add
add
jp
aad
push
test
and
aas
rcrb
mov
nop
sbb
jmp
push
add
inc
jmp
mov
cmc
ret
inc
lcall
pcmpgtd
das
dec
pop
outsb
sbb
je
fwait
mov
add
call
out
mov
fcmovbe
imul
es
and
push
mov
lock
iret
jne
push
in
mov
ret
rcrb
mov
mov
test
push
pop
cmc
mov
test
repnz
add
call
mov
aaa
cli
add
lea
shrl
sbb
gs
sbb
shlb
pop
cmp
aaa
pushf
test
lods
sub
addl
fs
sub
out
mov
sbb
mov
cld
int3
jl
sub
cmp
dec
pcmpeqw
push
sbb
cld
mov
mov
xchg
push
rcl
rorb
and
mov
pop
cmp
add
test
jl
and
mov
adc
cld
add
nop
popa
shlb
or
sub
jno
adc
lea
lahf
pop
pop
push
sbb
in
in
push
es
movsb
ja
clc
js
push
fcompl
pushf
sub
mov
xchg
pusha
mov
clc
je
pop
xchg
jno
mov
sbb
mov
loopne
andb
inc
rolb
ss
pop
adcl
dec
orl
loopne
push
cmp
fwait
add
ret
mov
sahf
pop
mov
push
jge
add
fwait
pushf
mov
xor
dec
push
js
pop
mov
add
mov
adc
sbb
push
hlt
dec
add
lock
int3
cli
stos
lret
inc
jbe
pop
push
inc
sub
aas
or
shrb
mov
or
pushf
inc
data16
shl
dec
fs
shl
and
mov
sub
or
push
inc
or
data16
mov
cmpb
push
mov
sub
enter
xchg
cmp
adc
push
imulb
lcall
push
push
mov
dec
push
push
inc
or
loopne
outsb
fwait
clc
mov
je
sbb
fstpl
adc
cs
jae
jo
pushf
movsb
lahf
out
adc
mov
pop
cmp
aam
sub
push
pop
mov
je
ss
pop
lock
dec
xor
repnz
pop
addb
cmp
outsb
into
call
sub
cld
sub
mov
call
jb
push
inc
daa
push
push
addb
mov
notl
icebp
add
dec
sti
pop
cmp
xchg
push
push
incl
lea
call
or
into
test
pop
xor
mov
test
addl
call
icebp
inc
jne
pop
inc
jmp
inc
addl
rcrl
gs
dec
and
dec
and
fs
xor
or
push
sbb
das
sbb
add
and
push
ret
enter
push
xchg
int3
add
sub
mov
push
je
pop
sbb
ja
clc
dec
push
ss
jo
push
xor
in
sahf
inc
xor
adc
push
cmp
bound
mov
mov
jp
or
push
pop
in
shlb
cmp
xchg
jp
adc
out
push
nop
nop
push
test
push
adc
fsubrs
sbb
outsl
clc
inc
jb
jp
in
push
add
cmp
lods
je
sti
sbb
inc
xor
xor
cmp
push
add
hlt
sbb
test
sub
cltd
mov
das
loop
fs
addl
xchg
adc
popa
std
add
aad
cmp
cmc
rolb
push
ret
dec
jle
xorl
shlb
lea
test
repnz
or
testl
cld
sub
mov
out
js
clc
add
inc
mov
adc
push
ss
mov
pop
test
cmp
fiaddl
push
cmp
call
test
mov
add
stos
repnz
pop
ljmp
fdivrs
fsub
push
inc
mov
je
push
mov
inc
jo
ret
inc
add
rcll
pop
jp
lea
xor
cmp
out
lock
shlb
adc
cltd
popa
add
call
clc
xor
and
divl
repz
pop
icebp
lds
idiv
inc
pop
mov
inc
fsubr
push
gs
ljmp
int3
sti
pop
push
xchg
add
incb
inc
pop
mov
aaa
movsl
outsl
xchg
and
lsl
pop
xor
ljmp
add
test
test
and
push
bound
xor
inc
sbb
cmp
popf
call
into
or
callw
ja
pop
adc
xor
lock
aam
je
pop
xchg
insb
push
es
xor
mov
jmp
sub
xor
mov
pop
arpl
mov
int3
push
add
test
mov
adc
iret
push
int3
jae
loopne
mov
push
jge
cld
push
mov
push
mov
cld
js
sbb
nop
mov
xchg
adc
xor
jg
cmp
jmp
or
test
test
sbb
jmp
clc
push
adc
insb
push
enter
in
jp
adc
inc
icebp
mov
clc
fs
pop
xor
dec
nop
jne
mov
push
mov
aaa
fstpt
or
inc
mov
or
js
xor
add
sub
shlb
xchg
push
xor
sub
aam
or
fists
out
push
push
push
test
fisttps
jbe
push
inc
out
push
xor
inc
inc
push
ret
incl
jmp
mov
mov
push
mov
imul
cmp
aaa
ljmp
test
cmp
add
cmp
test
xchg
jo
dec
adc
push
or
addl
out
loop,pt
jne
gs
sub
push
sub
push
push
push
xchg
jmp
cmc
lret
pop
test
pop
mov
mov
pop
ret
nop
int3
push
cmp
jl
fldenv
and
push
push
jecxz
imul
cmp
xor
scas
cli
adc
lcall
clc
aas
mov
or
lcall
pusha
mov
lea
and
dec
add
stos
push
loopne
push
cmp
xor
mov
or
push
mov
rolb
data16
xor
call
and
adc
mov
ret
inc
cmp
xor
cmp
scas
fs
and
int3
xor
jmp
je
mov
rcll
pusha
call
int
scas
cmp
push
shl
sbb
in
testl
xchg
xchg
addr16
ljmp
inc
xor
sub
sar
xor
jae
lcall
pop
mov
aam
gs
fdivs
xor
xchg
stos
call
or
push
dec
xchg
test
dec
jmp
es
add
xor
insl
adc
push
loopne
pop
leave
ror
ret
pop
inc
ret
jmp
or
add
dec
pop
mov
pushaw
jmp
movsl
xchg
enter
fimull
inc
inc
lcall
into
outsb
movsl
sbb
sbb
or
pop
and
inc
xchg
push
out
gs
jmp
push
mov
mov
dec
add
ret
xchg
pop
mov
and
jne
dec
into
add
mov
subl
mov
or
mov
cmp
adc
ss
test
mov
mov
add
popa
mov
lret
pusha
mov
jg
mov
fidivl
cld
daa
xchg
clc
stos
insl
popf
sub
push
add
adc
inc
push
outsl
pop
or
mov
cmp
les
int
jl
sarb
adc
xchg
cmp
and
data16
push
mov
dec
sub
add
loopne
jne
sbb
movsl
testb
test
ljmp
mov
xchg
clc
lea
sbb
mov
mov
inc
arpl
jmp
xor
push
test
test
xchg
pushw
stc
dec
adc
sub
sbb
movups
fwait
push
push
jbe
movb
adc
jle
xchg
jb
mov
aad
mov
test
ja
adc
push
xchg
add
xchg
cmpsb
insl
loopne
call
add
mov
test
push
jae
inc
push
aas
mov
test
mov
pusha
xchg
xor
cmpsl
adcb
mov
in
les
jns
rolb
xchg
sbb
pop
rcr
call
outsb
js
mov
enter
pop
rcll
cli
pop
pop
cli
inc
and
cmp
test
mov
decl
inc
adc
daa
in
lds
subb
lcall
sub
ljmp
shr
outsb
add
ljmp
decl
pop
sahf
cmp
mov
popf
sbb
cmp
addl
cmpxchg8b
xor
push
cwtl
sub
sbb
movsb
mov
or
aam
push
or
data16
mov
and
inc
test
ss
popa
sub
jmp
add
test
pushl
mov
push
lcall
ret
inc
xchg
jg
aaa
ret
add
push
mov
gs
mov
lea
cld
jg
push
mov
daa
mov
popf
xchg
add
jg
pushl
pop
shrb
int3
sbb
jecxz
inc
xor
int3
lock
les
xor
std
add
push
push
mov
mov
pop
popf
cmovne
sbbl
arpl
push
ret
pop
lea
inc
mov
adc
mov
ret
leave
les
mov
lods
cmpsb
lock
add
out
and
jmp
test
aas
cmovp
or
ret
shr
push
inc
push
int3
or
add
fisttps
insl
rorb
add
push
std
fcoms
jbe
mov
pcmpgtd
incl
push
out
fildl
mov
out
pop
test
pushf
enter
xor
inc
rol
sub
movsb
cltd
ds
add
loopne
xor
ret
xchg
jbe
or
push
mov
mov
repnz
push
fimuls
stos
loop
push
ljmp
push
add
pop
movsb
jp
inc
lods
push
pop
out
add
mov
ss
sbb
js
jbe
int
inc
inc
cmp
jbe
cmc
daa
lcall
bound
cmpsb
dec
loopne
lock
insb
xchg
enter
mov
cwtl
jg
or
add
outsb
shlb
test
xor
push
fmuls
subb
addl
hlt
imul
test
imul
pop
fistpl
ret
adc
inc
aad
rorb
push
nop
sbb
scas
js
andb
and
incl
and
cwtl
mov
add
es
stc
call
jp
jmp
add
push
mov
adc
stos
aam
and
out
andb
xorb
das
push
decb
and
aam
inc
cltd
xchg
ret
addb
fadds
push
push
or
shll
ss
and
sub
mov
mov
xor
lcall
mov
cmpsb
loopne
repnz
cmc
cmpsb
push
lods
lea
push
xchg
lods
push
fcoml
mov
sub
sub
ret
adc
xor
sti
fcoms
fnstcw
cld
add
add
jne
add
lcall
push
xchg
test
imul
add
fdivrs
jo
cmp
ret
scas
sbb
ja
les
inc
cmp
and
mov
data16
incl
cs
mov
xchg
cmp
mov
rcrb
sbb
fdivl
xor
popf
pop
xchg
syscall
mov
cli
shr
add
push
shll
add
call
and
add
jg
dec
ss
movsb
dec
xchg
xchg
adc
test
sub
mov
into
pop
mov
int3
cmp
outsb
adc
shl
mov
mov
into
dec
mov
pop
js
lret
pop
loopne
or
add
aaa
jbe
xlat
clc
test
and
inc
jne
sete
inc
in
add
push
add
call
cmp
scas
cmp
pop
jge
in
or
stos
loope
sbb
add
xor
push
adc
adc
push
jne
in
add
dec
movsb
mov
push
incb
incl
mov
cli
ja
aam
loope
out
xchg
sbb
and
and
sbb
mov
mov
mov
add
or
xchg
adc
or
sub
or
xor
xor
cmp
or
pop
test
inc
push
dec
add
call
rorb
aaa
adc
cmp
in
xor
or
jl
pop
and
add
insl
sub
ret
pushf
daa
jge
adc
jg
repnz
rcl
add
push
cmp
mov
push
or
cld
dec
rclb
sti
fisttps
into
std
jne
jb
mov
ror
subl
div
push
add
lds
andb
mov
je
inc
lea
or
add
or
loope
out
push
and
pop
sub
fcomp
stc
push
in
inc
mov
mov
mov
xor
jp
xor
dec
jmp
cld
pop
mov
decl
cmp
or
and
das
xchg
push
les
call
jbe
mov
aam
jp
cld
int3
mov
and
icebp
and
sbb
xchg
jo
lock
lock
pop
in
lods
pop
cmp
or
pop
and
ja
adc
out
jl
xor
dec
popa
add
dec
leave
lcall
rorl
sub
jbe
adc
or
xor
paddd
jmp
add
cmp
jbe
pusha
aam
xchg
xchg
mov
mov
subl
into
push
call
je
std
xchg
lods
cmpl
addr16
mov
mov
fdivl
jno
insb
mov
mov
inc
xor
aam
dec
mov
lea
dec
ret
orl
and
sbb
jne
leave
adc
and
fwait
arpl
incb
adc
adc
aam
insb
data16
sarb
jbe
inc
out
jp
or
lahf
jne
cmc
adc
adcb
aam
pop
sbb
fdivrs
xor
jge
pop
stos
or
mov
call
loopne
sarb
cwtl
mov
xchg
loopne
mov
inc
xor
push
jae
mov
fidivl
mov
scas
les
mov
aam
xchg
dec
loopne
cwtl
inc
loop
jb
mov
pop
jl
inc
loope
aad
mov
sarl
or
cmp
and
sbb
adc
mov
loopne
data16
idivb
repnz
sbb
scas
ficoml
js
mov
jne
sub
pop
test
enter
sub
movsb
sub
mov
pop
mov
adc
cmp
inc
iret
ljmp
push
jmp
or
add
push
jne
lcall
aam
in
push
popf
shl
adc
xor
mov
push
inc
add
xchg
in
mov
xchg
inc
jl
xor
mov
ucomiss
aas
in
mov
inc
add
xor
orl
mov
mov
arpl
mov
push
push
clc
lock
xor
dec
std
in
mov
dec
rcl
mov
cmp
push
aad
jae
pop
xor
mov
adc
loopne
call
insl
fnsetpm(287
insb
clc
test
sbbb
xlat
xchg
out
or
and
push
mov
xlat
mov
or
popa
fsubr
add
mov
sub
pop
ss
je
push
shll
cmp
jp
push
xor
in
jmp
fs
es
xchg
pop
add
ds
jmp
fsubrl
sub
pop
add
xor
sub
scas
outsb
in
xchg
lcall
fdivrs
jmp
inc
dec
jmp
aam
cmp
insb
aam
add
inc
pop
add
out
xchg
or
fnstsw
addb
jbe
jle
xor
out
pop
shl
mov
pop
sbb
adc
or
clc
mov
pusha
call
cli
stos
inc
mov
pop
xor
and
xchg
in
push
insb
imul
fmuls
fisubl
xchg
filds
cld
pushl
test
pusha
add
sub
push
test
ds
jbe
popf
pop
xor
pop
cld
mov
cld
jge
call
add
into
mov
hlt
mov
mov
ss
pushl
fs
and
arpl
sbb
incl
rcrb
cs
aam
push
mov
dec
repz
pop
xor
pop
repz
pop
sub
dec
dec
jge
insb
lcall
or
pusha
and
dec
xchg
andps
testl
or
push
out
sbb
dec
js
movsb
aam
adc
stos
add
adcb
aam
mov
popf
push
aas
je
inc
pop
std
push
mov
mov
adc
in
ds
pop
shr
into
inc
int3
cmpsb
inc
loope
adc
test
dec
jp
sti
ffreep
sub
lcall
add
ret
clc
xchg
test
mov
inc
mov
or
xor
push
mov
clc
add
mov
fwait
and
mov
add
adc
dec
mov
pop
nop
push
pop
sub
ds
insl
cmpsb
es
xchg
jmp
repnz
test
ss
dec
cli
adc
mov
pusha
cmpsl
sbb
addb
bound
sbbl
mov
sub
sub
add
xchg
push
sbb
inc
xchg
mov
imul
mov
mov
push
or
cmpsb
xlat
sar
test
inc
dec
or
movsb
xor
mov
jb
test
imul
mov
inc
pusha
inc
add
jle
aaa
xchg
insb
sbbb
jle
jmp
cmpl
xchg
and
fists
sbb
pushf
sub
xchg
push
mov
xor
push
int3
dec
adc
faddp
fildll
leave
loope
push
js
clc
cmp
push
xor
sub
cmpb
and
jmp
jp
mov
push
xor
cs
dec
add
int3
inc
push
cmp
sbb
hlt
adc
inc
enter
or
mov
test
das
ds
lea
mov
cwtl
imul
in
in
movsl
jno
hlt
cmp
adc
push
ds
cld
adcl
xor
mov
and
in
pop
cmpsb
cli
stos
arpl
xor
daa
add
push
jmp
jecxz
and
pop
adc
das
xchg
shll
notb
imulb
add
xor
or
incb
mov
rorb
dec
adc
push
mov
mov
inc
addl
pop
cmp
test
adc
sbb
rorl
leave
out
xchg
jmp
testb
sbb
cli
lock
mov
adc
leave
xor
data16
rclb
push
push
pushf
cmp
ja
push
faddl
add
outsb
mov
dec
jbe
mov
rorb
int3
inc
hlt
mov
and
shrb
repz
push
ret
ss
fadd
inc
cmc
jmp
cmp
push
cmp
lock
cmp
mov
jbe
sahf
or
dec
data16
mov
adc
mov
push
nop
cmp
and
or
dec
or
pop
mov
cmp
in
jns
leave
mov
call
call
or
aaa
fiadds
mov
divb
or
sub
lahf
arpl
test
mulb
and
mov
rorb
mov
jmp
mov
int3
cltd
cmc
sub
daa
adc
ss
test
push
jo
das
ret
jp
flds
push
inc
cmp
adc
pusha
mov
or
sub
pop
inc
mov
shlb
push
and
outsl
aam
lock
xor
subb
or
sarb
js
imul
sbb
add
in
push
and
lock
mov
incb
add
pop
insb
sub
sub
mov
je
clc
add
imul
test
jne
push
fisubs
xchg
scas
clc
inc
into
inc
inc
add
adc
inc
sub
jp
and
cmpsb
je
cmp
out
or
jne
pop
adc
ret
jo
pop
add
lret
and
and
xor
call
push
xor
fsubrs
js
inc
lods
loopne
dec
int3
call
or
push
dec
gs
jne
scas
arpl
sbb
inc
lock
push
or
out
pop
notb
jp
clc
es
lock
inc
orl
adc
pusha
sbb
mov
push
jmp
in
cs
jecxz
or
pop
sarl
sub
mov
jb
push
test
mov
lock
shrl
aas
xchg
inc
int3
into
mov
popa
mov
xor
je
les
pop
mov
xor
shrl
mov
xchg
push
cli
mov
leave
or
stos
pop
and
pop
cmp
roll
popa
jp
jo
pop
pop
and
push
aam
push
push
jl
dec
ret
pop
les
je
sbb
jl
add
stos
add
push
js
scas
jno
js
adc
sbb
or
adc
xor
add
xor
adc
mov
inc
bound
add
cwtl
push
jg
sub
mov
add
xor
pusha
ds
add
cli
or
or
fidivl
std
push
test
sub
push
or
and
test
adc
jmp
push
sti
ss
ljmp
sbb
ljmp
sbb
ljmp
dec
adc
xor
stc
pop
clc
decb
popf
sub
push
dec
mov
add
aaa
out
add
inc
xchg
dec
cld
gs
repz
add
je
xchg
adc
lods
das
arpl
mov
add
andl
add
cld
shlb
push
pop
add
push
mov
pusha
mov
loopne
aaa
mov
mov
xor
sbb
clc
add
inc
xchg
mov
cmp
and
stos
bound
aad
adc
cli
lods
xorb
sbbb
mov
mov
test
adc
mov
cs
mov
add
jmp
iret
rol
ja
lret
xchg
loopne
inc
mov
scas
and
adc
push
or
std
adc
in
xchg
mov
push
out
in
push
sbb
pop
sub
inc
call
cmpsb
push
in
fimull
push
mov
jno
test
icebp
sbb
pop
inc
sbb
adc
inc
sbb
aam
cmp
sbb
or
fisttpl
sahf
and
into
scas
push
push
mov
jg
les
jb
pop
and
push
cmp
outsb
into
push
sbb
and
imul
cli
inc
sbb
push
cmpsl
insl
mov
aas
je
inc
ret
pop
ret
pop
les
push
pushf
adc
mov
addr16
inc
fsubrl
or
inc
xor
dec
mov
notb
adc
mov
in
jp
mov
add
mov
dec
inc
outsb
popa
sub
jl
outsb
mov
lret
mov
cld
ffreep
xor
mov
add
mov
clc
add
pop
adc
push
inc
test
add
rclb
test
mov
cmpb
xchg
mov
clc
cmp
nop
and
ret
cli
dec
and
fimull
jne
test
mov
cmp
inc
mov
dec
mov
adc
dec
dec
popa
dec
add
clc
or
add
ljmp
mov
add
aam
ret
adcl
and
or
sub
add
push
mov
decl
test
mov
add
adc
jecxz
in
divb
cld
jmp
pop
add
clc
ljmp
xchg
or
les
or
repnz
std
or
icebp
mov
les
jo
xor
adc
add
cmp
push
test
mov
inc
test
mov
test
mov
or
xchg
sbb
xlat
jg
push
loopne
xor
xchg
mov
jg
mov
mov
stc
xor
push
movb
mov
sub
add
jmp
mov
aam
mov
and
lcall
sbb
data16
or
dec
mov
leave
dec
cmp
mov
lock
xchg
test
jl
je
dec
je
mov
test
movb
add
sub
sub
rcl
pusha
sbb
cmp
xchg
and
lea
inc
loopne
cmp
std
shll
test
add
pop
test
fstpt
call
cmp
loope
clc
cmp
mov
lods
dec
or
xchg
lock
xchg
inc
aad
jne
mov
mov
jle
dec
mov
xor
leave
inc
add
jle
push
loopne
sub
das
or
xchg
push
xor
mov
mov
pushf
lods
ret
jge
jbe
push
pop
repnz
in
loop
cld
push
cmpb
push
loope
pop
cli
dec
movb
sbb
inc
hlt
lods
push
push
repnz
adc
shrb
pop
mov
pop
sub
push
pop
lds
shll
pminsw
mov
and
aam
cmpsl
out
fldl
and
add
lds
rol
pop
sub
or
cli
add
jne
add
clc
lods
adc
inc
je
mov
js
fsts
inc
fadds
inc
mov
mov
and
loopne
decb
jl
arpl
cwtl
push
inc
xor
xchg
cmpsb
mov
or
jle
cmp
add
pop
sbb
pop
test
lock
adc
lock
pop
repnz
jle
mov
cmp
jne
bound
inc
mov
xlat
add
seta
addr16
pop
jp
dec
add
mov
xchg
or
sub
dec
mov
mov
dec
push
test
xchg
test
and
sar
sbb
jno
test
mov
fistpll
adc
ret
repnz
sar
ret
and
mov
fcoms
inc
test
push
test
clc
leave
sahf
jecxz
loope
inc
mov
add
inc
sbb
in
xor
push
or
test
push
inc
inc
mov
sub
mov
jne
or
in
pop
xchg
jne
shlb
pop
mov
inc
inc
mov
je
pop
dec
and
and
fstl
mov
sbb
mov
or
lock
jmp
hlt
or
sti
adc
dec
sbb
push
mov
mov
call
lret
jno
lds
mov
push
mov
push
mov
outsl
and
aaa
or
push
adc
aas
outsl
add
jge
inc
inc
push
shrb
rclb
or
sub
adc
fildll
adc
fists
std
and
mov
call
je
xchg
xor
push
icebp
jg
and
out
add
sub
jb
pop
jo
adc
pop
push
mov
scas
adc
test
add
gs
mov
scas
enter
mov
add
push
pop
loopne
add
jmp
lock
test
cmp
mov
stos
data16
fiadds
xor
push
sub
xchg
les
jg
cli
and
cmp
add
movsb
and
ffreep
test
inc
add
loopne
ret
pusha
jl
std
add
mov
and
mov
and
js
mov
test
push
pop
fildll
and
or
and
adcb
add
cmp
and
sbbb
add
or
hlt
pop
push
sbb
push
add
xor
push
mov
cmp
das
adc
ret
sub
je
in
adc
lea
and
cmpsb
fsubl
add
daa
adc
pushf
adc
jecxz
or
pop
int3
addb
mov
sub
jae
and
sbb
or
xor
jo
jle
push
jno
loope
push
mov
sbb
lods
fmull
mov
outsl
loopne
mov
mov
cmpl
movl
int3
jp
ljmp
pop
mov
std
pop
addl
jne
add
jo
imul
lods
or
pop
sub
cmp
dec
fsubs
sub
call
jp
xor
decl
push
add
stc
test
imul
fiadds
jmp
jb
inc
and
or
dec
movsb
adc
mov
test
pop
and
int3
test
or
in
pop
dec
imul
ret
jne
xchg
rcrb
or
and
fdivr
clc
mov
in
stc
jg
sub
pop
ret
psrlq
xchg
imull
pop
or
push
aaa
or
push
jae
into
jmp
or
inc
sbb
les
add
jo
jmp
int
ds
rcll
out
push
mov
mov
xchg
rolb
dec
aaa
pop
jo
cs
mov
mov
mov
lret
xorb
psadbw
inc
fisttpll
jl
aam
mov
gs
movaps
or
inc
push
mov
outsl
sbb
add
or
mov
or
ss
adc
and
or
ds
sub
push
xor
cmp
mov
sub
aam
push
hlt
mov
push
xor
mov
mov
fsubrs
and
ds
adc
lret
jae
push
push
out
stc
ss
adc
mov
mov
ds
or
insl
ret
into
xcrypt-cbc
cmpsl
xchg
scas
cmp
sbb
or
pop
or
cmp
sub
jns
lea
push
fwait
das
cli
mov
dec
daa
mov
repnz
enter
sbb
dec
jecxz
mul
lock
cmp
jo
std
add
xor
add
fdivs
xor
or
div
or
lock
pop
or
inc
or
test
inc
shr
mov
fsubrs
xor
jne
add
enter
sahf
adc
fidivs
js
mov
andb
cmp
mov
jp
push
pop
jmp
cmc
je
jo
sti
add
lods
jne
call
mov
faddl
lock
sbb
ljmp
mov
or
ds
cmp
xlat
pop
mov
push
je
push
xor
or
in
push
sbb
add
aam
sbbb
jmp
or
mov
jo
or
dec
loop
clc
pop
je
repz
loopne
jmp
call
or
mov
mov
adc
adc
andb
pushl
xchg
js
minps
hlt
pop
mov
int3
lods
mov
aam
lods
je
push
repz
xorb
scas
call
or
jne
mov
inc
add
mov
in
inc
xor
inc
pop
add
movsb
test
push
jo
xchg
nop
outsb
ds
rorb
xchg
xor
pop
out
add
fstl
ret
clc
icebp
andl
and
xchg
scas
jp
gs
dec
mov
or
test
adcl
mov
xor
in
mov
pop
or
jns
aam
loop
cmp
and
jmp
add
rsm
fs
inc
mov
jl
jmp
test
cmp
test
pop
adc
sbb
adc
ret
adc
adc
mov
decb
add
and
aas
mov
xor
lods
clc
incb
pop
cltd
mov
xorb
mov
js
mov
cmp
push
add
xor
add
xor
push
sbb
in
add
push
test
push
pop
and
stos
dec
or
test
pop
and
mov
xchg
jl
mov
inc
xchg
call
mov
test
inc
fdivs
mov
mov
push
outsb
push
push
clc
push
xor
push
xchg
mov
mov
mov
jo
lea
push
pop
xchg
cld
jg
push
jle
std
inc
cmp
js
dec
clc
andl
pop
xchg
out
xchg
jb
sarb
lods
pop
pop
mov
test
les
mov
push
enter
das
sub
mov
push
or
pop
sahf
loopne
sub
add
push
imul
pusha
mov
je
mov
sbb
lret
and
call
jl
loopne
loop
inc
jg
loopne
adc
fwait
int3
stos
inc
sarb
and
add
push
add
mov
dec
add
int3
dec
add
call
xor
test
and
push
mov
xchg
shl
icebp
add
pusha
mov
xor
mov
push
inc
jne
sbb
dec
pop
or
mov
dec
cwtl
mov
push
das
insl
cld
or
lock
mov
xor
ja
mov
mov
lock
lock
call
faddl
or
sub
orl
call
xlat
adc
add
int3
adc
test
icebp
stos
sahf
sbb
out
mov
and
dec
pop
insb
popa
pop
pusha
and
or
cld
add
mov
test
cld
pop
mov
cmp
sti
ffreep
xchg
rorb
dec
add
es
mov
lock
adcl
pop
mov
jno
lea
push
pop
mov
inc
push
ja
inc
lcall
mov
add
testl
add
fsubl
nop
adc
inc
sub
cmp
pop
inc
or
test
in
out
ret
hlt
and
jns
xor
lock
or
andl
push
cmp
ja
test
decb
xchg
sarb
rcl
popa
and
push
add
clc
aaa
adcb
lods
add
and
mov
cli
jne
adc
ficomps
add
jl
pop
inc
loopne
sarl
and
jne
add
pop
cwtl
mov
clc
fmuls
and
push
xor
fcoms
mov
push
pop
mov
cmp
adc
mov
adc
aam
or
jo
and
call
scas
push
shll
or
fdivl
dec
sub
pop
mov
push
insl
sub
jne
call
sahf
cmc
test
or
ficomps
push
push
and
subb
mov
movsb
outsb
and
stos
call
and
lret
jb
adc
fidivl
or
jecxz
inc
mov
sbb
xchg
mov
push
or
test
push
inc
mov
and
aam
add
xchg
bound
jl
popf
cli
or
divl
loopne
jae
cmp
call
mov
inc
divb
outsb
mov
data16
fdivrs
aad
shlb
imulb
sub
xchg
mov
test
push
dec
in
sub
or
cmpl
xchg
push
inc
xchg
rclb
sub
or
push
mov
pop
add
adc
mov
aad
pop
xchg
gs
loope
add
scas
pop
incl
push
popf
add
fcmovbe
add
jb
pop
pop
add
rolb
test
and
fistps
and
imul
std
push
loop
scas
mov
cmp
sbb
fsubr
add
mov
cmp
and
inc
push
ljmp
pusha
loopne
mov
or
fisubs
adcb
and
push
movsb
adc
mov
cmp
fldl
lcall
add
fbld
cwtl
push
test
mov
inc
loop
inc
or
imul
jb
inc
mov
push
push
add
or
notb
mov
xor
dec
pusha
pusha
mov
mov
mov
pop
daa
add
jo
mov
inc
out
mov
inc
std
jne
scas
mov
sub
inc
ret
sbb
cmp
popa
mov
clc
push
xor
add
loopne
ss
pop
xor
cmp
test
ret
pushf
fwait
test
rclb
sarl
es
test
sbb
das
mov
adc
sub
or
mov
das
push
fcoml
mov
or
jge
jne
mov
push
push
adc
push
mov
imull
mov
mov
mov
dec
fdiv
pop
or
xor
add
or
stos
lcall
bound
ja
push
mov
mov
sub
rcl
sbb
pop
lahf
push
mov
xchg
arpl
jl
push
fs
push
adc
popf
pop
mov
ljmp
cwtl
enter
mov
add
ret
push
inc
xor
call
ret
push
pop
ljmp
rolb
mov
rolb
add
pop
push
push
and
movl
push
mov
cmc
lret
clc
push
mov
fadds
insb
mov
mov
sbb
lods
int3
push
fs
aam
mov
pop
pusha
push
push
push
add
das
adc
cs
cmp
push
cmpsb
sbb
sbb
pop
pop
sbb
ss
add
or
jp
pop
jg
pusha
xor
dec
pop
ret
jne
lods
pop
sub
add
xor
in
fiadds
sub
inc
movsb
fsubrl
icebp
jns
mov
xor
add
inc
es
inc
push
outsl
inc
shll
pop
out
je
outsl
arpl
sub
pushf
xchg
add
js
mov
push
add
out
jbe
imul
les
xchg
adc
push
push
icebp
or
add
fcompl
xor
or
xchg
arpl
mov
add
es
fadd
jo
aaa
push
push
shll
jle
xchg
xlat
rcr
xchg
sbb
add
scas
sahf
daa
lods
or
and
sbb
aaa
jmp
mov
xor
push
and
test
inc
xor
in
stc
push
pop
add
je
mov
cmp
hlt
xchg
in
call
std
movsl
and
fcoml
sub
js
call
js
outsl
lds
lods
cmpb
adc
add
or
push
pop
je
adc
dec
fistpll
mov
cmp
add
adc
pop
call
or
mov
inc
arpl
inc
daa
cmc
adc
sbb
pop
push
jb
in
imul
sarb
popa
xchg
pop
test
and
mov
iret
mov
push
fistl
cmp
push
fs
mov
and
cmp
mov
push
scas
mov
out
push
jp
xchg
push
pop
push
pop
test
repz
mov
js
sahf
pop
pop
repz
and
cmp
lcall
stos
pop
lret
jle
call
addb
add
jbe
adc
lock
pushf
loope
sbb
cld
xchg
popf
rorb
and
xor
mov
test
add
rcll
pushl
jbe
adcl
cmpsl
outsb
and
xchg
add
jp
lods
fcmovbe
adc
daa
sahf
rclb
mov
lret
push
inc
cld
mov
in
xor
mov
lcall
push
ud0
test
gs
enter
push
cmp
nop
pop
incl
aad
push
add
inc
and
add
xchg
insl
dec
mov
jb
mov
and
push
in
mov
movsb
inc
lock
loope
call
stc
add
hlt
cld
or
jmp
or
push
or
movsl
mov
adc
mov
lret
std
mov
mov
ret
add
repnz
lea
in
es
int3
jmp
inc
push
xor
and
mov
xchg
icebp
or
jmp
les
pop
sbb
mov
pop
mov
pop
cmp
mov
adc
shll
popa
cmp
xchg
push
or
pushf
adc
push
jp
sbb
fsubrp
cs
js
cwtl
cmpsb
add
mov
adc
test
loope
push
xor
cmp
xchg
test
add
outsb
xor
dec
fcoml
sbb
sub
pop
inc
sbb
and
dec
sub
bound
add
clc
sub
add
inc
in
lods
push
dec
nop
mov
pop
daa
cmp
add
call
incb
ljmp
xor
inc
pop
jo
add
sbbb
push
sbb
push
sub
add
cwtl
push
test
int3
shrb
adc
movsb
mov
or
test
push
sbb
cld
lds
pusha
ret
adcb
push
sbb
cmp
mov
inc
bound
mov
cli
repz
in
or
popf
cmp
cmp
stc
mov
es
pop
cmp
xor
push
into
ss
or
jb
clc
mov
inc
loopne
es
cli
xchg
fdiv
decl
shrb
rolb
lcall
sbb
neg
ds
push
xchg
loopne
sti
pop
or
fs
loop
cld
add
popa
test
xchg
mov
xchg
mov
fs
pop
push
xchg
adc
jae
int3
incl
sbb
mov
xchg
mov
outsb
outsl
fisubrl
mov
cmp
xorl
pop
push
xor
pop
inc
ss
outsb
cli
scas
mov
push
lret
push
repnz
call
inc
adc
dec
je
cmpps
xchg
jb
outsb
push
push
into
jg
inc
fidivl
jp
xor
inc
pop
xor
inc
add
mov
mov
lds
rcr
xchg
mov
mov
mov
loopne
shlb
les
pushf
js
cmp
test
mov
mov
push
or
mov
jecxz
pop
scas
les
neg
adc
add
add
fstpt
arpl
or
cmp
loope
fs
push
adc
xchg
pop
pusha
mov
dec
jo
add
lods
outsb
add
inc
push
std
and
and
je
inc
outsb
adc
rolb
or
pop
lea
fdivs
shll
mov
call
inc
mov
jne
mov
data16
pop
std
or
aam
mov
add
jns
fwait
mov
mov
and
cmp
push
add
cmc
jmp
and
sti
mov
jbe
sti
push
adc
mov
or
and
enter
andb
mov
cli
or
jmp
or
push
iret
xor
add
shr
add
test
inc
push
testl
and
sbb
sbb
ljmp
mov
jg
jge
pop
push
pop
mulps
mov
push
je
or
or
hlt
in
in
mov
rol
push
jbe
les
or
call
je
data16
or
call
push
xor
andl
push
es
test
pop
cli
add
dec
popf
jo
mov
inc
push
in
lds
cmc
xor
mov
cmc
inc
or
hlt
enter
and
inc
testb
icebp
mov
pop
pop
in
push
dec
inc
adc
cmpsb
xor
cli
mov
out
lret
cmova
mov
adc
mov
mov
jne
mov
icebp
jbe
nop
fsubrl
fsubs
andl
mov
std
sarb
pop
xchg
movsl
ss
je
add
sbbb
mov
mov
mov
mov
scas
cmpsb
aaa
inc
test
push
negb
clc
test
mov
loop
mov
xor
call
xor
mov
outsb
push
adc
inc
pushf
dec
cmp
jl
ds
les
cmp
xchg
lea
in
jle
cld
in
rolb
fwait
icebp
jmp
lea
pop
daa
pusha
push
mov
sub
insb
jne
in
inc
mov
fsubs
mov
push
lods
xchg
or
mov
xchg
mov
xor
les
out
test
test
outsb
fdivr
out
or
fildl
mov
pop
jp
jl
push
cli
mov
pop
cmp
push
je
mov
dec
push
test
stos
push
arpl
mov
push
sub
add
hlt
int3
xchg
orb
test
inc
mov
test
out
inc
dec
movb
and
push
sbb
scas
sbb
add
add
cld
add
lods
mov
sahf
mov
jge
mov
adc
mov
jne
push
cmpsb
dec
adc
pop
ds
adc
add
dec
nop
ljmp
sbb
or
dec
and
gs
fwait
xchg
sub
push
test
dec
sbb
adc
loope
inc
add
movsl
push
loope
pop
or
push
ljmp
outsb
adc
pop
decl
push
jl
shlb
mov
and
psrlq
insl
sbb
inc
xchg
push
icebp
int
fs
inc
enter
mov
jge
je
sti
jle
cmp
push
fistl
xchg
add
dec
ja
loopne
inc
inc
sub
pop
pusha
test
scas
int3
call
mov
add
add
fldt
ljmp
mov
mov
adc
shrb
cli
xchg
or
xlat
sub
fistl
pop
ficomps
inc
ret
popa
fs
add
lods
loop
cmp
test
in
push
pop
lock
dec
cli
add
mov
nop
mov
cmpl
jmp
incb
cmp
pop
shrb
test
push
and
mov
mov
lcall
push
adc
push
ret
pop
sbb
mov
sub
fsubrl
pusha
pop
shr
and
adc
mov
push
fs
imul
jg
cwtl
ret
mov
in
mov
xor
cmp
mov
std
fcmovne
push
shlb
inc
inc
mov
cmp
xchg
roll
lahf
gs
mov
pushl
fs
fildl
push
push
cmp
outsb
subb
push
out
call
jle
pop
pop
call
mov
addb
popl
sub
je
cmp
subl
add
add
scas
mov
mov
mov
mov
push
cmp
dec
xor
gs
les
mov
mov
fs
enter
ficoms
pop
adc
pushf
pop
push
add
push
sub
addl
arpl
lods
imul
xor
push
add
add
or
hlt
inc
cmp
sbb
sub
inc
push
ljmp
mov
lea
test
loop
inc
mov
pop
call
sbb
loopne
and
push
pop
out
inc
roll
call
inc
fsubrs
sbb
sub
pop
cli
int3
push
rorl
adc
mov
cmp
add
cld
xor
test
adc
xor
fsubrl
lcall
push
in
es
js
adc
add
fsubr
xor
or
inc
adc
test
pop
add
mov
cli
inc
cmp
aas
insb
sub
adc
sub
rclb
mov
adcl
mov
nop
mov
popf
shlb
mov
mov
or
out
cli
jo
xchg
add
xchg
add
popf
xchg
inc
adc
cmp
xchg
push
decb
sbb
or
outsb
and
clc
mov
nop
mov
call
icebp
incl
movsb
xchg
cmp
dec
outsl
mov
jge
call
sbb
fdivl
dec
iret
ja
push
dec
adc
insl
sub
out
mov
fstpt
jl
ss
test
insl
mov
mov
sub
fidivs
sub
or
lret
jo
cmp
sub
push
lods
mov
or
adc
and
mov
xor
std
shlb
int3
fucomi
out
add
notl
outsb
and
mov
push
cs
stos
mov
sarb
inc
inc
cwtl
les
inc
or
imul
sti
ja
scas
adc
pop
jae
adc
cmpsb
pop
jne
je
ret
dec
imul
scas
fwait
insl
mov
sbb
sbb
push
in
pusha
jns
leave
aam
push
dec
mov
lea
movb
mov
xchg
repz
mov
dec
dec
push
add
addl
imul
sbb
jmp
loopne
bndstx
test
cmp
out
push
mov
inc
adc
and
sub
inc
push
cli
stc
add
xor
sbb
xor
ljmp
enter
icebp
mov
addb
call
or
inc
and
mov
aaa
mov
push
in
push
aam
fimull
mov
dec
mov
and
nop
mov
xor
aaa
mov
push
xorl
mov
add
add
pusha
jp
sbb
add
ret
mov
sub
dec
incl
inc
adc
leave
push
push
or
sbb
orb
fdivs
sub
sbb
js
xor
sub
inc
cmp
es
jo
enter
add
sub
mov
mov
insb
push
insl
push
jbe
pop
adc
leave
arpl
xor
dec
cld
cmp
nop
je
push
dec
pop
sbb
jbe
ret
and
mov
jmp
sbb
lock
imul
and
dec
lods
xor
aaa
test
imull
xlat
fs
inc
inc
add
push
lods
call
xor
orb
cs
aam
insb
xor
scas
inc
ret
stos
call
cli
rep
sbb
aas
ljmp
sbb
pop
mov
push
insb
cmp
mov
mov
js
jo
inc
sahf
xchg
rcll
loop
in
pushf
push
mov
outsl
cmp
sahf
pop
push
sbb
cmc
gs
push
out
sti
lock
imulb
je
cmp
je
push
and
aas
jmp
push
iret
in
idivl
xor
in
das
dec
push
sar
je
mov
jle
lret
mov
or
test
jle
clc
pop
or
fmuls
dec
dec
add
fcmovbe
movsb
xor
push
rcrl
mov
jge
xor
and
and
push
dec
js
dec
jb
cmpsl
shr
and
imul
cwtl
xchg
xor
cmp
femms
jecxz
ret
jmp
add
maxps
ljmp
lcall
loop
mov
sahf
das
add
and
push
jp
leave
cmp
fdivrs
and
add
add
pop
insl
call
rolb
and
mov
movsb
push
add
jbe
inc
pop
inc
insb
and
loopne
pop
pop
std
aaa
mov
and
loope
cmp
adc
add
dec
or
dec
push
mov
loope
push
insl
cli
jb
sub
xchg
movsl
push
add
in
mov
cmp
cld
lret
inc
rcrb
aaa
push
sbb
mov
jge
lcall
push
push
push
leave
rol
dec
cld
gs
hlt
fldenv
data16
adc
inc
enter
stos
stos
popf
mov
mov
std
and
shr
sbb
je
cmp
pop
lea
sub
imul
dec
std
je
insb
lds
xchg
inc
fwait
testb
call
pusha
incb
jl
sahf
jl
js
sbb
js
sar
scas
in
lock
dec
in
dec
jo
mov
xchg
or
js
inc
sbb
inc
mov
mov
mov
std
fwait
cs
mov
loopne
add
mov
pop
push
scas
cmp
xchg
movsl
shlb
loopne
test
fisttpl
outsb
imul
mov
xor
nop
sub
jbe
cld
outsl
mov
add
push
xchg
testl
adc
jo
into
or
jno
inc
push
cmp
hlt
inc
jmp
jl
xor
jge
add
push
add
test
rcll
mov
jnp
push
xor
mov
sbb
dec
cmp
incl
cmp
pop
adc
fstl
into
int
add
sub
and
and
push
in
fwait
xchg
es
mov
jne
test
mov
insl
push
dec
fidivl
inc
inc
adc
sub
or
and
xchg
cmp
movsl
sbb
dec
jne
shlb
sti
add
mov
sub
add
adc
add
test
ror
push
movsb
push
test
jp
pusha
aam
push
xchg
mov
mov
mov
cmp
je
jl
cli
das
xchg
sbb
push
adcl
cs
jo
flds
sbb
sbb
xor
movsl
cld
push
mov
icebp
push
cmp
mov
arpl
push
movl
jne
cwtl
mov
sahf
push
mov
test
mov
cld
gs
loopne
add
jbe
les
or
test
scas
negl
mov
pop
add
add
popa
jo
push
push
loop
mov
fisttps
and
jb
add
push
cwtl
adc
out
jo
add
mov
dec
sahf
xchg
sbb
lea
add
dec
xchg
jo
cmp
call
inc
mov
add
dec
jge
test
loopne
daa
jecxz
add
jne
clc
pop
aad
mov
cmpsb
movsl
inc
lea
xchg
je
push
loop
jl
fdivrp
sbbb
pop
jp
jmp
add
mov
inc
call
fdivs
lock
inc
data16
pusha
stos
dec
das
push
xor
push
inc
mov
lock
adc
stos
mov
nop
clc
dec
lock
notl
xor
ljmp
mov
sahf
adc
orl
mov
call
cmp
mov
sub
sub
dec
inc
and
push
outsl
add
jo
out
push
jmp
aaa
dec
jo
test
roll
addb
mov
xor
idiv
dec
nop
fistl
and
sbb
mov
rolb
loopne
stos
fwait
int3
lock
clc
adc
jle
fisubs
mov
inc
je
push
lods
sahf
xchg
and
pop
les
mov
mov
mov
aam
xchg
mov
ret
lcall
inc
cmp
dec
mov
ljmp
cmp
ss
xchg
gs
into
mov
lock
dec
or
outsl
mov
cmp
daa
out
loope
or
lea
ret
add
add
push
rcr
ret
push
popa
adc
cld
push
lock
mov
push
add
sarl
push
and
aad
push
inc
mov
add
lds
das
rorl
cld
es
test
jmp
inc
sysexit
mov
outsb
xor
xchg
pusha
mov
xchg
ficompl
mov
lea
xor
negb
mov
pop
shrb
mov
shrl
mov
cmpsl
lods
add
testb
and
popa
xchg
mov
hlt
mov
mov
inc
xor
std
add
and
hlt
inc
rcrl
pop
int3
push
push
sarl
mov
loope
cmp
jl
or
mov
or
xor
mov
inc
sub
loopne
dec
das
adc
aad
mov
mov
xchg
pand
lret
push
in
testb
sub
mov
rcrb
mov
bound
push
cwtl
orb
adc
mov
pop
sub
add
pop
clc
pop
addr16
push
ret
add
icebp
add
movsb
cmp
mov
inc
in
jb
js
or
sbb
lock
mov
lcall
add
add
mov
icebp
nop
aam
pop
add
cmp
inc
mov
imul
clc
test
jle
mov
call
gs
imul
mov
daa
mov
insb
das
mov
ret
pop
xchg
bound
jecxz
fsubrp
push
pop
sbb
gs
fbld
cwtl
jmp
add
loopne
sar
pop
cmp
pop
inc
jo
incl
push
jb
lcall
out
pop
je
int3
pop
mov
addl
ljmp
fucomip
push
les
or
call
jns
and
mov
push
std
push
or
pop
add
cmp
notb
out
imull
mov
adc
insb
xor
dec
pop
nop
iret
je
jg
mov
repnz
repz
and
repnz
or
xor
icebp
mov
out
insb
aam
inc
movsb
fdivl
sub
aad
movsb
and
js
add
testl
inc
adc
int3
fisttpll
loope
inc
mov
ds
sti
fs
push
je
pop
push
cmp
aam
imul
lock
out
adc
sbb
mov
cmp
incb
add
push
push
cmp
pushf
mov
cs
adc
and
mov
pop
out
rolb
or
stos
sbb
sub
sbb
call
mov
inc
cmp
add
dec
in
je
cwtl
ret
fidivrs
into
hlt
int3
cs
pop
dec
outsb
das
xchg
sbb
lds
hlt
fs
adc
dec
add
rclb
dec
std
or
jg
dec
pslld
xor
adc
jae
push
call
aas
mov
test
add
stos
dec
aam
adc
or
js
dec
mov
js
push
cmp
xor
jl
sbb
mov
shr
mov
jb
clc
cs
jg
adc
les
cld
cmp
inc
sbb
test
xchg
into
std
outsl
xchg
call
clc
push
mov
push
and
dec
test
xchg
pop
sub
dec
or
and
xabort
aas
les
push
adc
je
lods
jl
aas
and
cmp
push
in
pop
push
pop
hlt
mov
je
cmp
jnp
bndldx
ret
xchg
fists
mov
mov
cld
lock
sub
pop
sbb
clc
mov
lcall
lret
lahf
mov
stos
push
and
inc
std
mov
hlt
add
push
aam
clc
or
dec
mov
in
inc
cmpsb
sbb
jmp
enter
add
loop
xor
out
movsl
mov
hlt
adc
or
adc
cvtps2pd
mov
mov
sbb
jne
imulb
test
sub
cmp
ja
fsubrp
mov
xchg
add
fstpt
aaa
imul
mov
fldl
xrelease
mov
add
es
test
inc
inc
int3
xchg
ret
add
inc
or
xor
lock
sub
aam
and
insb
in
aaa
lods
jg
dec
push
pop
push
mov
push
sub
rorb
les
or
inc
shrb
dec
add
call
mov
enter
add
add
cmp
fnstsw
inc
cwtl
mov
call
pop
ret
mov
insb
scas
adc
push
ficoml
mov
add
aas
loop
pop
cmp
call
cld
inc
std
cmpsl
mov
mov
dec
adc
inc
jbe
mov
jne
xchg
outsl
jmp
jp
sub
inc
sbb
inc
or
push
jo
mov
sub
cmpsb
and
pop
or
mov
mov
xorb
fcomps
mov
int3
in
sbb
adc
sahf
ret
or
das
lods
jb
call
fstps
cmp
push
mov
pop
sbb
test
xchg
add
aam
xor
mov
call
incl
add
mov
add
js
incb
leave
mov
adc
mov
fists
test
fcoml
or
cli
push
pusha
xchg
add
nop
push
pop
clc
dec
lock
push
jbe
jle
push
cmp
pop
xchg
ds
ret
mov
xor
call
cmp
xor
cld
inc
test
inc
adc
pushf
push
lea
sub
inc
mov
stos
out
push
xchg
lds
rclb
add
add
push
mov
cs
inc
push
aam
cmp
jne
test
lods
insl
orl
adc
popa
shl
mov
mov
add
mov
cwtl
loopne
outsb
add
test
dec
inc
in
xor
mov
and
imul
je
push
xchg
adc
jp
xorl
jle
fwait
pop
mov
stc
inc
dec
mov
or
std
push
mov
ret
dec
or
or
das
sahf
pop
lods
movsb
decb
dec
sahf
sbb
movsl
mov
or
and
cmpsl
jo
add
mov
and
xchg
sarl
add
mov
hlt
cwtl
setae
sub
fisubrl
lea
into
mov
cli
mov
pusha
inc
int
insb
sub
test
inc
mov
or
dec
dec
mov
add
call
imul
call
push
movsl
fiadds
push
xor
add
xchg
fidivs
add
arpl
pushf
cmpsb
mov
or
outsl
jb
inc
dec
clc
ja
add
push
int
pop
mov
add
push
dec
xchg
jp
fs
insb
cmovbe
mov
jb
std
xchg
push
dec
sar
stc
stc
xchg
adc
lds
or
gs
cmpsb
mov
mov
les
ds
mov
pop
sub
push
inc
jne
aaa
jmp
nop
add
jae
sub
ljmp
mov
dec
pop
into
call
insb
jge
cmp
or
aam
add
imul
ficomps
roll
push
out
imul
test
xor
pop
fsubs
outsb
pop
fbld
xor
jecxz
aam
insb
lds
sub
add
rcrb
leave
imul
psraw
and
or
mov
cmp
aam
and
test
cmp
je
pop
mov
loopne
das
and
and
imul
push
mov
cmp
add
popf
push
int
test
mov
sub
mov
push
and
loop
gs
mov
sbb
pop
mov
adcb
pop
getsec
xor
rcrb
push
sarb
add
orl
stos
add
out
sbb
inc
pop
mov
push
pop
fisubs
loopne
inc
sbb
mov
pushl
sahf
add
mov
orb
rcl
jle
jo
mov
or
out
cmp
fisttps
sbb
inc
xor
jle
push
or
mov
jo
nop
insb
push
or
mov
mov
xor
rorb
add
sub
inc
cwtl
cmp
ljmp
cmpb
test
adc
ja
xchg
add
cs
pop
push
cmp
inc
mov
fimull
cmp
fadds
loopne
int3
fisubs
push
int3
enter
std
mov
test
ss
push
or
jmp
hlt
push
add
jg
shll
add
push
cmp
test
sbb
jl
pusha
mov
and
je
cmp
mov
adc
stos
movb
int
cld
mov
add
movsl
in
pop
rolb
clc
mov
and
push
outsb
jmp
adc
sub
cmc
jge
add
sbb
push
ljmp
or
mov
fidivrs
and
inc
sarb
pop
rolb
push
pop
insb
in
push
movsb
mov
outsb
in
sbb
inc
insl
inc
and
jbe
testb
loop
add
push
pop
jae
cli
mov
sbb
jg
pop
je
add
inc
es
jmp
or
bound
arpl
mov
les
mov
or
inc
enter
pop
xorb
mov
call
fisubrl
inc
xchg
push
fildll
shlb
add
je
sarb
inc
jg
cmc
rorb
add
fwait
inc
div
sub
pop
sub
push
mov
adc
cmp
mov
data16
add
xlat
inc
push
or
pop
jmp
adc
into
sbb
mov
ja
add
sar
inc
movb
test
ret
ja
sahf
adc
out
in
int3
xor
push
add
lds
add
cltd
icebp
imulb
sub
fcmovb
lea
sub
jle
loop
lock
xchg
idivb
mov
inc
push
jecxz
jge
add
dec
xorb
gs
fsubl
jne
orb
pop
pop
pop
cld
push
xchg
rcrb
or
push
add
jne
es
cmp
jmp
or
rclb
cwtl
roll
lea
jne
cwtl
add
sbb
pop
imul
mov
call
test
inc
lods
pop
pop
pop
pusha
push
push
cmp
clc
or
cmp
mov
imull
cmp
sarb
xchg
cmp
cmp
sti
mov
mov
adc
add
mov
lea
mov
enter
and
push
lock
sbb
jb
push
mov
gs
filds
repnz
pushf
xor
mov
add
jge
pusha
stos
and
jb
pusha
push
sub
cli
or
xor
pop
add
cmp
push
xchg
sbb
mov
mov
jae
push
mov
xor
cmp
and
fiaddl
mov
outsb
inc
mov
insb
pop
lret
cltd
js
rol
leave
adc
push
sub
xchg
dec
divl
or
dec
cmp
incb
jne
pop
xchg
inc
adc
pop
push
lock
cmp
add
adc
pushf
xchg
push
mov
pop
mov
or
insb
jg
cmp
mov
inc
add
push
iret
xchg
inc
xor
bound
mov
popf
ror
fsub
mov
test
mov
cmp
call
push
bound
mov
ja
lock
push
and
cmpsb
add
mov
xchg
mov
insb
fwait
xchg
dec
rolb
xchg
push
test
inc
add
and
jp
adc
cs
push
rcr
aas
xor
xor
add
fimuls
mov
ret
add
dec
or
es
dec
jl
adc
mov
sbb
jmp
cmp
lea
inc
rolb
pop
test
pushf
push
push
xor
cmp
lea
outsb
mov
or
decb
iret
push
inc
add
pop
popa
movl
push
ficoml
loopne,pt
sbb
les
lods
sbb
rcr
and
push
push
adc
pop
or
push
ret
orl
outsl
dec
jl
les
adc
inc
addl
sbbl
cmpb
cwtl
jp
je
in
movsb
je
xor
test
hlt
jns
ret
icebp
add
incl
dec
push
push
cmp
or
push
mov
in
mov
pop
jbe
lahf
sub
mov
mov
xchg
push
jnp
mov
or
sbb
inc
push
push
sub
inc
daa
inc
mov
and
mov
inc
push
test
addl
sub
shlb
pushl
add
mov
dec
adc
mov
or
cwtl
fdivp
mov
test
mov
sbb
or
test
cmp
xchg
fstl
mov
or
mov
pusha
in
add
or
inc
or
cmpsl
out
icebp
add
push
xor
ljmp
push
jmp
or
lea
push
cmpb
popf
xor
je
out
call
mov
rolb
dec
arpl
dec
or
mov
or
dec
mov
mov
out
negb
inc
ficoml
push
add
xor
push
movsb
adc
pop
and
ss
cmpsb
fwait
pop
add
dec
mov
dec
mov
movsl
sbb
ljmp
dec
rorl
insb
outsb
popa
push
jne
xor
les
int3
xchg
push
test
insb
adcb
incl
pop
rolb
sub
push
push
xchg
clc
movb
jmp
lcall
or
test
clc
push
adc
je
out
or
es
push
push
jmp
mov
test
stos
cmc
and
jbe
add
xor
punpcklbw
mov
bound
pusha
push
fcoms
lods
rcll
push
hlt
ret
in
sbb
mov
leave
lock
aam
and
jne
cmp
icebp
fildll
mov
pushf
sub
loopne
cld
lcall
jge
cs
or
mov
push
mov
add
cmp
or
aaa
std
lcall
arpl
or
dec
cwtl
pop
aaa
ss
hlt
and
ret
mov
int
repz
jne
add
push
gs
mov
mov
out
aad
adcb
dec
js
cmp
les
or
xor
dec
dec
add
xchg
and
inc
or
sbb
cmpsl
adc
mov
inc
adc
in
push
inc
das
jo
movsb
aas
outsb
pushw
lods
pop
adc
cli
mov
and
shl
mov
push
loope
andb
mov
cli
mov
enter
push
loop
push
ror
or
int3
rcrb
loop
sbb
xchg
es
and
incb
mov
je
mov
adc
hlt
pop
mov
dec
xchg
cmp
fs
add
push
iret
jne
mov
mov
add
mov
rolb
sub
sbb
pop
not
out
in
dec
loop
xchg
inc
mov
xchg
shl
add
push
adc
fsubs
or
mov
cmp
inc
insb
mov
cmpsb
sbb
add
sub
or
xor
rclb
cli
decl
dec
out
stc
fwait
cwtl
movl
push
pop
or
push
mov
ret
mov
shlb
or
jg
xor
pop
divl
xchg
lock
sub
loopne
dec
xchg
insb
jge
mov
js
lock
push
xorb
mov
or
push
mov
push
adc
jb
sub
imulb
mov
mov
mov
insb
or
mov
incb
or
mov
add
inc
jb
and
pushf
cmp
mov
jb
sbb
or
xchg
cmp
mov
dec
push
cmc
or
repz
pop
lods
or
in
adc
pop
cmp
fidivrl
inc
data16
push
and
cli
sbb
xor
cmp
lahf
push
mov
test
inc
adc
add
push
call
push
cmp
mov
rcrl
ljmp
jo
jmp
or
pusha
push
sub
pop
std
add
xchg
cmc
add
jecxz
cwtl
mov
xor
jns
sbb
or
adc
pop
cs
or
dec
jmp
adc
inc
mov
fldl
jo
cld
out
mov
push
or
je
mov
clc
push
movsl
ss
adc
xor
fwait
or
mov
sub
cmp
in
inc
gs
rclb
xor
push
push
cwtl
adc
mov
cmp
xor
dec
sbb
xor
push
push
aam
cmpsl
and
add
arpl
inc
xlat
adc
mov
pop
fidivrs
nop
inc
add
add
mov
xor
jmp
mov
scas
mov
push
idiv
fucom
pop
add
push
or
std
fildl
inc
loop
pusha
mov
repnz
fs
mov
jle
sub
test
add
test
or
les
pop
mov
mov
movsb
fildll
int3
pop
mov
xchg
dec
dec
dec
fistpl
mov
dec
jge
mov
push
xchg
mov
add
inc
mov
cmpsl
push
inc
push
pop
test
mov
pusha
pop
and
out
in
inc
pop
push
sub
rorb
inc
sbb
mov
inc
push
ret
lret
cmp
xchg
fnstcw
sub
testb
and
decl
arpl
in
andl
mov
inc
shlb
mov
call
or
pop
pop
fisubs
xchg
push
in
ret
adc
fsub
adc
adc
outsl
gs
pop
jge
fmull
arpl
adc
fadds
pusha
rorb
push
fcmovbe
pop
mov
test
pop
out
cmp
and
roll
pop
mov
in
cmc
pop
sbb
outsl
push
mov
clc
mov
dec
push
cmp
mov
push
add
xor
push
cmpsl
pusha
lock
fstl
clc
mov
lcall
jne
dec
mov
arpl
std
lea
test
add
dec
inc
je
in
dec
pop
fs
cmp
loopne
cmc
dec
pusha
add
addl
pop
out
add
cmp
in
add
dec
or
mov
inc
cmp
arpl
data16
or
test
pop
xor
ds
xor
jb
lea
aaa
mov
inc
lahf
fsubl
pop
data16
mov
mov
repnz
xor
call
inc
sub
out
adc
add
aam
mov
lds
adc
dec
sbb
incb
call
add
dec
test
mov
lock
mov
data16
call
mov
adc
in
fdivrs
mov
and
add
in
mov
rclb
jo
inc
fldt
movsb
rclb
xor
adc
ljmp
mov
jmp
inc
add
mov
fs
inc
sbb
in
and
enter
sahf
dec
and
adc
mov
aas
pushf
mov
dec
fnstenv
push
decb
or
inc
mov
rorl
cmp
jecxz
adc
adc
jo
mov
sbb
add
test
mov
mov
mov
shl
loopne
push
push
mov
sar
jb
mov
imul
or
leave
mov
jg
adc
xchg
mov
jmp
int3
shll
push
pop
test
sbb
dec
sub
dec
jg
stos
fsubp
xchg
enter
adc
dec
bound
push
inc
xor
fsubrl
mov
xor
inc
stos
push
or
dec
ss
out
jecxz
inc
lcall
popa
repnz
popa
lods
and
shl
sub
adc
or
cmp
sbb
inc
inc
in
notl
or
mov
shrl
and
jo
mov
adc
add
rcr
fcomp
push
cmp
jmp
dec
cmp
call
jmp
lods
loop
test
or
test
pop
inc
sub
jb
inc
inc
jg
imul
and
into
pop
call
std
jge
test
adc
ficomps
mov
jnp
adc
inc
stos
push
jge
push
jle
inc
sti
js
xor
xor
ds
mov
and
add
add
lcall
les
adcl
xor
icebp
cld
inc
xchg
mov
push
sbb
cmp
adc
btr
test
inc
xchg
aad
push
cld
call
ret
or
add
adc
call
les
push
dec
fs
bound
dec
out
cmp
pop
sub
dec
push
hlt
push
mov
mov
fisttpl
iret
repnz
pop
push
scas
push
test
mov
sbb
mov
adc
test
js
popa
sbb
dec
mov
aam
sar
jp
xor
mov
adc
loopne
xchg
sbbb
dec
push
mov
cmp
pop
adc
popf
js
outsb
push
sbb
int3
in
mov
sub
mov
cmp
adc
sub
xchg
jb
jl
mov
push
loopne,pt
ljmp
out
sti
push
mov
mov
pop
cmc
inc
cwtl
pop
lock
add
test
xor
pop
scas
inc
out
adc
ret
push
testl
cli
push
loop
test
add
xchg
and
mov
popa
xorb
mov
test
mov
icebp
test
xorb
add
pop
mov
push
xor
aaa
leave
gs
mov
jmp
imul
mov
add
fildl
cmpl
push
adcl
jmp
std
fidivrl
stos
push
jmp
repnz
mov
ljmp
pop
cmp
sahf
ret
jp
mov
push
sub
jle
mov
pop
sub
xchg
popf
cmp
inc
dec
std
xchg
push
cwtl
je
add
pop
ret
adc
pop
mov
push
enter
mov
pusha
and
or
add
test
sti
dec
popa
inc
inc
stos
push
imul
or
cld
imul
mov
adc
or
add
test
sub
push
inc
clc
je
popa
push
out
jle
push
shr
sbbl
cs
pushf
insl
bound
jbe
push
ret
test
jg
mov
mov
inc
leave
mov
bound
pushf
test
out
jne
inc
stos
shll
mov
mov
les
dec
in
and
add
push
sub
cmc
adc
xor
insl
mov
mov
dec
sub
fsts
mov
ljmp
in
mov
push
pusha
loopne
call
or
pop
and
push
gs
or
dec
les
inc
les
out
push
push
adc
pusha
insb
std
mov
dec
mov
cmp
int
pushf
sub
dec
sbb
mov
fcomps
inc
jne
mov
imul
add
mov
inc
sub
sahf
in
mov
push
push
mov
sub
call
in
mov
and
inc
test
orl
sub
xor
push
outsb
and
scas
ret
inc
cmpsb
dec
inc
pop
aas
xor
xor
xchg
push
cmp
aam
clc
outsl
lods
mov
imul
loopne
mov
mov
out
dec
aam
dec
sbb
addb
sub
inc
mov
lret
push
cmp
push
mov
sbb
shlb
repnz
add
add
ffree
xor
inc
jle
mov
cld
xor
pushl
inc
push
jge
std
mov
aaa
popa
mov
mov
and
dec
add
lock
aad
inc
pop
scas
fdivrl
popa
sbb
movsb
pop
icebp
jg
or
mov
jmp
mov
lea
test
test
gs
pop
jl
sub
fidivrs
add
push
jmp
cld
jle
adc
mov
mov
cli
adc
ljmp
mov
mov
repnz
jne
and
jp
arpl
pop
test
add
lea
and
jne
stos
lods
or
add
repz
incl
or
add
adc
mov
negl
dec
int3
jae
xchg
jge
push
adc
js
jne
fmuls
stc
xor
shll
loop
faddl
xchg
pop
ret
or
inc
push
divb
cmpltps
add
inc
jae
mov
push
out
mov
es
push
or
adc
xchg
adc
mov
mov
gs
and
or
push
jne
xor
xor
cmp
adc
dec
sub
pop
jp
pop
sbb
test
sub
cld
add
incl
mov
sbb
push
add
push
push
mov
mov
test
jbe
mov
hlt
push
mov
xor
jne,pn
mov
cwtl
das
ret
jp
lds
inc
fsubrs
scas
jbe
cmp
adc
out
mov
les
mov
clc
decl
push
test
adc
gs
add
mov
cmp
je
in
test
jg
mov
jge
jnp
mov
mov
mov
sub
lock
adc
movsl
fdivr
pop
push
xor
and
call
outsb
jne
jg
in
rolb
and
inc
lds
out
pop
push
jbe
mov
xor
dec
sub
mov
xor
adc
int3
cld
jg
jg
lea
movb
movsb
jmp
lods
lret
fimull
jl
dec
jnp
aaa
fdiv
push
xchg
jmp
aam
mov
push
fdivrl
cmp
cmp
push
mov
enter
or
mulb
pop
xor
ds
test
xlat
mov
add
adc
xor
mov
scas
mov
jge
dec
jg
push
and
xchg
mov
sbb
sahf
cltd
and
clc
xchg
js
pop
lods
stos
push
movsl
nop
dec
xor
jle
call
out
pop
rorb
lods
mov
push
jle
or
test
nop
sbb
mov
call
jg
test
movsb
dec
push
add
loopne
idiv
aas
insl
ljmp
aad
cld
sbb
inc
fimuls
add
cmp
loope
movsb
xor
pop
and
repz
jmp
push
decb
pusha
adc
xor
pop
sub
cmovno
clc
cmpl
dec
cs
cmp
and
int3
mov
sbb
test
mov
dec
outsl
xchg
jne
jne
sahf
inc
cmp
and
dec
sbb
ret
pop
ret
mov
cwtl
jge
xchg
inc
ds
aaa
dec
cs
imul
or
sub
push
mov
cld
sbb
sbb
mov
sti
clc
bound
insb
pop
and
dec
pop
xchg
push
movsb
and
lea
dec
mov
and
cmp
loopne
dec
outsb
dec
sub
outsb
shll
inc
pushw
mov
dec
pop
lods
xchg
adc
imul
dec
test
inc
lcall
adc
cmp
mov
adc
xchg
cmp
ret
jbe
scas
mov
xchg
and
fsubrs
cmp
out
add
xchg
aam
fsubl
fcmovnb
xchg
enter
jl
jnp
mov
stos
filds
pop
sub
pusha
xor
mov
sbb
data16
ljmp
call
incl
mov
arpl
push
push
cmc
adcb
mov
sub
mov
cmp
in
sbb
mov
popf
pop
rol
int
or
adc
jge
mov
push
cs
es
dec
jmp
inc
push
mov
xchg
sbb
adc
les
push
popa
or
xchg
outsl
imul
sbb
or
mov
push
mov
call
orb
out
repnz
rolb
mov
xchg
inc
bound
mov
mov
inc
clc
les
sarb
sbb
icebp
jg
cmp
arpl
int
sbb
pop
dec
inc
sbb
call
cmp
scas
sub
push
xor
cmp
hlt
popa
jl
js
jo
pop
insb
xchg
pop
adc
or
xor
popf
inc
es
shll
int3
loope
fdivp
and
push
jno
notb
mov
mov
or
push
adcb
jne
inc
mov
hlt
gs
movsb
cmpsb
adc
sbb
jl
add
sbbl
sbb
xor
sbb
inc
or
push
popf
dec
pop
pusha
pusha
mov
sub
inc
pop
stos
inc
add
shrl
or
arpl
lret
push
mov
call
xchg
sahf
scas
int3
push
inc
push
bound
incb
out
push
cmp
push
ret
add
xchg
jp
loope
mov
jmp
call
sub
pop
test
lods
mov
mov
test
xchg
xor
xchg
clc
testb
xchg
cmp
hlt
add
xor
pushl
inc
inc
std
ja
sub
cmp
sbbl
data16
pop
stc
dec
fdivrs
dec
arpl
sbb
mov
dec
or
cmpsb
mov
inc
and
mov
int3
jg
mov
adc
ds
outsl
scas
add
cs
leave
adc
fldt
push
ss
sbb
or
sub
sahf
add
int
aam
push
mov
movsl
cmp
sub
std
xchg
int3
lock
push
mov
rcr
push
dec
js
subl
imul
add
sub
xor
pop
jo
push
pop
icebp
dec
repnz
mov
add
fmul
mov
xchg
cltd
sbb
test
sbb
push
add
xor
mov
and
push
xor
aam
fcoml
inc
repnz
divb
dec
stos
push
out
pop
push
incb
and
daa
add
enter
add
test
add
dec
mov
adc
push
push
sub
pusha
or
mov
dec
mov
push
loopne
add
add
hlt
dec
xor
jo
xor
les
mov
insb
push
mov
pop
je
add
pop
inc
pop
les
insb
insb
insb
mov
push
cmp
test
ret
hlt
jle,pn
fisubs
inc
dec
bound
test
leave
jno
lret
data16
enter
mov
adc
cld
and
cmpsb
pushf
adc
arpl
cli
icebp
mov
addb
testb
push
repnz
inc
std
je
int
xchg
xchg
xchg
popfw
into
push
push
orb
inc
add
rclb
inc
imul
xchg
inc
lock
call
hlt
loopne
call
stos
cmpb
jmp
add
or
aam
jnp
test
jns
mov
add
mov
cld
out
cld
jmp
pusha
lea
jne
or
js
sbb
mov
leave
push
sub
popf
inc
xor
ret
push
mov
ljmp
arpl
leave
pop
inc
insb
inc
leave
icebp
mov
cmp
lahf
pop
sub
jg
in
or
add
cli
add
jle
lods
inc
push
ds
fsubs
jne
xor
decl
pop
mov
and
and
pop
push
sub
outsb
xor
test
push
xor
inc
add
jp
scas
adcb
pop
push
les
mov
pcmpgtd
rcrb
jb
inc
clc
int
pop
cmp
call
shrl
push
pop
leave
sbb
pop
mov
sub
imul
cli
les
clc
pop
adc
lahf
mov
dec
or
add
inc
dec
test
ljmp
es
outsl
fbstp
adc
lock
fucomi
and
inc
movl
mov
or
shrb
push
insb
dec
pop
shl
and
add
test
mov
adc
movsb
cmpsl
mov
andb
push
jg
lea
cmp
ret
adc
cmp
lea
sbb
rolb
or
fiaddl
pop
ret
inc
and
cmc
pop
lea
push
test
dec
pop
push
push
and
adc
inc
movsl
or
mov
jg
test
lahf
and
adc
lock
seto
fimuls
sbb
xchg
orl
mov
adc
in
inc
mov
push
dec
ret
xchg
mov
add
mov
std
mov
jb
mov
push
ss
mov
mov
loopne
xor
jae
push
out
adc
and
xchg
mov
dec
mov
std
cmp
ret
or
or
push
test
int
out
ljmp
or
xchg
xor
mov
add
add
test
push
rol
and
cmpsl
xor
and
sub
cmp
fsubrs
cmp
pusha
sub
pop
cli
cmp
aas
cmp
inc
out
mov
fiadds
shl
test
movsb
cmp
cmpsb
and
pusha
jl
aad
xor
push
sub
sbb
mov
or
pop
andb
or
mov
call
cli
mov
adc
stos
fsubrl
add
add
inc
popf
mov
decl
adc
call
pop
cmp
add
xchg
sub
stos
or
mov
mov
and
pop
xchg
push
xchg
sub
les
shlb
out
pop
adc
mov
mov
mov
rorl
and
andb
loope
fs
cmp
test
dec
pop
xchg
lret
add
jo
or
outsb
or
push
test
test
mov
cs
xor
in
mov
dec
pop
callw
mov
push
cmp
pop
lea
aam
add
or
insb
out
add
aam
lods
test
or
mul
popa
mov
decb
add
ror
inc
or
or
adc
or
mov
xor
mov
or
imul
mov
add
loopne
jb
test
xor
pop
jecxz
push
sarl
pop
nop
mov
aaa
cmpsl
repnz
jnp
or
pop
push
pop
mov
add
dec
mov
or
push
decl
or
inc
sub
mov
mov
sar
lea
cmp
adc
mov
sub
aas
lock
and
or
adc
hlt
xor
hlt
dec
sysret
insb
jae
sub
adc
ret
mov
push
cld
xchg
push
and
xchg
cli
add
int
and
movb
incl
push
testl
in
pushf
test
sarb
out
call
xor
fs
jl
ret
xchg
or
mov
or
add
push
inc
inc
testb
loope
fists
add
stos
adc
jb
inc
fsubl
cmp
rclb
cmp
jle
fstpl
jmp
mov
daa
cmp
push
xlat
clc
add
mov
out
push
pop
ds
outsb
push
xor
mov
or
xor
ds
sti
mov
test
pop
sarb
fisttpl
add
cld
sbb
pop
fistpl
call
in
shll
sub
add
mov
jne
sub
jp
cld
incl
xor
leave
mov
dec
sbb
lock
subb
sub
sub
int3
xchg
mov
mov
mov
pop
nop
pop
mov
and
xchg
inc
hlt
mov
popa
gs
sbb
adc
lret
call
cmp
je
movsb
add
pop
test
filds
sti
mov
cmp
xchg
inc
dec
jg
jle
cmp
popf
push
sub
dec
jg
gs
add
fcoml
fsubr
xor
adc
add
adc
call
cli
sbb
mov
mov
mov
lret
sarb
mov
inc
push
mov
rdpmc
pop
scas
adc
movzwl
inc
push
dec
hlt
xor
add
push
xor
in
and
pop
subl
mov
mov
push
in
sub
sbb
mov
nop
adc
out
cmp
clc
push
hlt
scas
je
nop
ljmp
clc
lahf
jb
add
mov
icebp
hlt
adc
xor
std
or
push
movsl
push
pushf
mov
dec
mov
inc
push
bound
mov
lock
gs
rclb
lock
test
lds
mov
adc
jo
xor
sbb
xchg
lods
xchg
call
add
lods
jl
jb
push
mov
dec
rclb
clc
fmull
push
push
test
xchg
sbb
mov
inc
je
mov
cli
dec
pusha
or
rcr
sub
aas
movsb
movsb
mov
mov
cmpsb
enter
dec
fimull
je
jo
lock
mov
popf
mov
mov
xor
in
push
enter
and
add
decl
mov
lods
add
lret
pop
leave
ficoms
popa
cmp
sub
outsb
out
xorl
test
push
ret
add
sub
subb
xchg
sub
hlt
nop
adc
jb
test
adcl
push
ret
inc
es
mov
push
call
pop
decb
add
scas
xchg
mov
enter
movsl
mov
inc
inc
add
pop
adc
add
mov
adc
lret
sahf
cmp
pop
dec
je
inc
js
add
pop
mov
dec
lcall
fldt
xor
sbb
and
pushl
mov
pop
jl
mov
sub
subl
dec
sbb
aam
dec
xchg
xor
jae
js
adc
bound
fs
fimull
insb
std
call
jmp
call
fnstcw
rclb
aaa
or
mov
call
xor
add
call
inc
mov
pushf
cmp
xchg
jl
add
sarb
adcb
pop
jne
cmp
bnd
clc
add
jecxz
adc
test
or
or
dec
clc
mov
nop
lds
into
and
inc
lds
or
jmp
push
hlt
mov
in
push
fs
les
push
outsl
imul
bound
ljmp
jbe
in
test
and
das
push
cmp
pop
test
or
movl
add
sbb
inc
in
nop
pop
ret
add
mov
lret
jge
rol
stc
ret
ss
nop
je
add
rorb
shlb
int3
les
inc
xchg
ret
call
inc
popf
pop
mov
cmpl
push
add
in
adc
pusha
mov
stc
xor
push
xchg
lea
lahf
and
subb
pop
in
adc
xor
cmp
jbe
mov
je
mov
push
outsl
cmp
fwait
mov
fidivrl
pop
add
pop
add
fsubs
fs
pop
ret
inc
je
xor
ljmp
div
xor
jmp
xor
or
lds
scas
fdivl
pop
mov
std
call
cmp
adc
and
lock
mov
add
jo
daa
int
scas
mov
inc
dec
mov
cli
stos
and
push
adc
loopne
std
inc
cwtl
mov
cmp
inc
cmp
test
mov
fwait
mov
sar
or
cmp
xor
call
jmp
push
adc
int3
fadds
add
xchg
std
sub
outsb
jecxz
jbe
clc
mov
je
add
and
gs
xor
mov
dec
or
push
xchg
mov
faddl
fsubrl
popf
sbb
jno
sar
movsb
cmp
push
push
pop
int
fidivl
mov
xchg
call
cs
ret
sbb
pop
or
inc
pushf
and
jecxz
lods
mov
xchg
jle
ja
rorb
pop
and
mov
mov
insl
pop
je
outsb
nop
pushf
mov
push
adc
mov
clc
add
test
inc
aas
imulb
in
mov
dec
mov
jle
fistps
ret
mov
fdivrl
dec
add
add
pop
inc
cvtps2pi
inc
insl
test
cwtl
or
inc
push
outsb
adc
push
inc
cmp
out
testb
data16
mov
aaa
mov
stos
shlb
mov
xor
sbb
aam
pushf
cmp
xchg
loopne
dec
ret
popa
js
sbb
dec
push
inc
data16
add
inc
mov
add
btrl
adc
shr
outsb
cli
mov
mov
lock
cmp
jne
lock
inc
insb
fisttpl
add
push
movsb
or
xor
inc
dec
and
and
ds
sbb
outsb
gs
icebp
in
push
dec
push
or
or
cmp
pop
add
mov
add
pushf
popa
xor
and
add
pop
add
xchg
push
stos
xor
jle
inc
mov
outsl
in
cmp
lea
mov
sbb
sbb
mov
mov
sub
cmpsl
in
pop
push
mov
shlb
pop
jne
mov
add
mov
repnz
ret
sbb
cvtdq2ps
stos
imul
pushf
or
pop
xchg
cld
jge
test
or
out
xor
iret
sbb
jmp
das
call
push
xchg
lock
aam
test
adc
cmpsb
mov
outsb
out
jb
inc
outsb
jecxz
xor
stos
sub
bound
pop
fildl
mov
push
lock
inc
and
clc
cmpsl
push
cmp
leave
test
push
sub
adc
je
xchg
push
in
jecxz
cmpsl
andb
inc
sub
out
add
add
sub
aad
scas
jae
mov
and
fcomp
hlt
aaa
enter
ret
dec
adc
sub
mov
push
mov
mov
xchg
push
and
rorl
xlat
pop
insb
push
cmpsl
dec
inc
data16
push
lret
stos
ret
test
inc
aaa
es
push
call
sub
test
out
nop
adc
outsb
sbb
mov
cmpsl
iret
push
iretw
lcall
cwtl
les
lea
mov
lcall
adc
addb
lret
outsb
cmpsl
or
daa
les
mov
xor
aas
in
stos
bound
and
test
jmp
add
xor
pop
out
push
scas
and
and
jge
mov
cmp
and
adc
inc
push
push
add
mov
mov
push
adc
cmpsb
loopne
mov
add
pop
stos
inc
std
mov
xor
xchg
insb
pushf
ss
sbb
nop
mov
or
das
int3
inc
add
jbe
push
mov
cwtl
lea
sbb
ss
dec
dec
in
ss
or
pop
inc
and
stos
icebp
bound
mov
imul
scas
jb
cmp
lea
pop
xchg
sub
mov
pop
xchg
outsl
mov
adc
pop
in
cmp
decb
cmpsb
mov
aam
mov
add
push
lods
and
jbe
inc
sbb
adcl
std
stos
mov
push
imul
push
sub
push
mov
into
cltd
fs
cld
test
ret
adc
add
and
mov
pop
mov
dec
mov
in
or
sbb
mov
add
inc
jmp
sbb
xchg
das
aad
rcrb
push
mov
push
or
xor
out
dec
mov
mov
lret
add
cs
add
pop
or
sti
and
pop
fcompl
mov
dec
lds
mov
sub
and
inc
dec
or
push
in
cli
cld
insl
jne
push
add
call
cs
movsb
mov
cltd
in
je
inc
stos
adc
repnz
or
mov
lcall
data16
lahf
mov
push
sarl
inc
pusha
loopne
or
sbb
dec
cmc
mov
and
call
push
stc
hlt
mov
pop
jae
sbb
sbb
cld
enter
mov
add
mov
sbb
add
xchg
lock
rol
ja
jne
mov
dec
sbb
and
fildl
sbb
sub
xchg
clc
push
cmp
mov
mov
fmuls
cmp
and
pop
xor
fstpt
cmc
xchg
movsb
add
inc
push
add
xchg
fisubs
jecxz
cli
decl
push
mov
mov
dec
cld
dec
xor
mov
daa
pop
icebp
loope
jno
cmp
push
nop
jne
sub
daa
sbb
pop
cmpsb
mov
or
gs
mov
hlt
jo
xor
nop
cmp
or
dec
jmp
mov
data16
jo
addb
bound
jo
mov
outsb
or
push
push
clc
mov
sub
mov
adc
add
cmp
xchg
inc
in
or
ljmp
je
xchg
xorl
adc
call
loop
popf
push
push
addb
mov
ret
cwtl
push
aam
enter
push
les
pop
push
dec
cld
shrl
sbb
mov
push
push
int3
call
arpl
out
loope
sar
adc
xor
xor
fisubrl
js
movsl
inc
or
lcall
and
mov
mov
sub
mov
pop
js
mov
add
es
cld
sti
test
push
stos
mov
mov
mov
in
and
mov
ret
je
loop
jae
jne
push
dec
add
outsl
cmpsl
push
pop
mov
jmp
mov
jl
arpl
cld
mov
cs
xor
xor
cmpsb
pushl
enter
inc
mov
cmpsl
xchg
jno
andb
orl
js
lea
nop
ljmp
fcmovb
mov
cmpsl
push
leave
mov
pop
mov
add
xchg
test
outsb
in
cmp
sbb
movsb
mov
adc
inc
cld
test
push
or
jp
fdivr
dec
sub
lock
push
ror
or
push
inc
aam
dec
scas
xor
mov
xchg
sbb
pusha
mov
in
std
aas
and
das
mov
insb
rolb
dec
xor
loop
out
pop
ss
and
jb
cmp
hlt
pop
jge
clc
push
fdivp
fdivr
fiadds
or
outsl
cmc
outsb
add
and
lcall
and
outsb
mov
cmp
adc
adc
xchg
cli
fadds
insl
shl
mov
xchg
mov
jae
int
pop
sub
fs
mov
movsb
mov
push
int
or
out
push
lcall
aam
in
movsb
fdivs
or
inc
mov
push
cld
int
jne
mov
scas
dec
adc
pusha
cmpl
or
inc
xor
cmp
negl
rclb
add
icebp
cmpsb
jb
push
pusha
push
push
and
adc
push
and
jo
lock
jmp
adc
idivl
xchg
add
mov
inc
dec
test
inc
lods
lods
jle
test
mov
iret
in
add
fsubr
mov
pop
dec
pop
jae
push
sbb
int3
nop
mov
hlt
dec
lods
sbb
mov
ret
jmp
test
mov
cmp
jb
lock
lds
push
mov
data16
pop
sbb
ret
out
jmp
adc
popa
inc
inc
insb
lock
mov
cld
add
add
cmp
sbb
adc
xchg
and
add
shr
andl
inc
call
stos
fsubrs
dec
nop
in
pop
pop
ss
add
pushf
test
cmp
adc
test
jo
jmp
int3
lock
lds
add
paddw
and
sarb
push
inc
or
pop
lock
adc
lock
sbb
or
std
cmp
shlb
push
xor
sbb
push
ja
xor
orl
or
dec
test
xorb
xchg
xor
mov
shl
outsb
jbe
mov
lods
dec
clc
push
push
leave
repnz
pushf
lods
or
rolb
ror
stos
int3
in
shlb
sbbb
adc
jge
aam
or
inc
dec
outsb
inc
and
push
add
xchg
mov
add
out
je
pop
fiadds
adc
jb
test
add
inc
push
call
mov
jle
jbe
data16
sbb
cmp
sbb
sub
pop
add
add
fbstp
insb
mov
push
lret
mov
rclb
inc
aas
or
adc
jne
inc
fs
dec
inc
mov
add
jnp
sub
add
xor
mov
das
shrb
adc
cld
gs
cld
add
jb
mov
subl
fcmovnbe
insl
bound
inc
bnd
adc
sub
jbe
cmp
pop
nop
sbb
push
mov
into
aam
repz
ds
inc
cwtl
jle
les
adc
cmpsb
jecxz
loopne
push
sbb
mov
pop
xchg
lock
jl
xorl
shll
or
idivb
nop
add
pop
mov
dec
in
adc
ret
ficoms
jne
ljmp
mov
fidivl
pop
add
out
push
cs
push
adc
mov
andb
add
add
sub
test
mov
aaa
out
adc
sbb
mov
mov
jl
pop
adc
add
and
jo
clc
mov
sti
lods
std
xchg
in
xchg
xor
dec
fcomps
sbb
inc
add
sarl
add
mov
incl
imull
fisttps
xor
inc
add
mov
push
push
lcall
pop
and
or
and
pop
sub
add
mov
add
sbb
cmp
jns
test
dec
xor
js
incb
xor
dec
jmp
shll
aas
sub
sbb
sarb
fdivl
jmp
pop
jmp
inc
inc
cmp
ss
rcl
add
inc
jb
rcll
ffree
lret
mov
les
jno
jne
out
call
dec
outsl
pop
and
mov
adc
or
or
andl
sub
cmp
cwtl
xchg
pop
push
leave
pusha
jmp
xor
push
icebp
or
or
xor
sbb
add
arpl
push
mov
test
inc
cltd
andb
mov
lret
adcb
mov
add
stos
outsl
push
cld
je
sub
mov
in
push
hlt
insb
sub
xchg
mov
xor
orb
les
divb
andl
sbb
lock
scas
inc
push
and
cmp
rolb
cmpsb
add
adc
mov
push
sub
imul
scas
je
or
add
cmp
dec
xchg
mov
dec
jno
adc
xor
push
push
shlb
xchg
mov
sbb
stc
inc
adc
push
push
fs
cltd
xor
rolb
adc
inc
in
cmp
xor
sub
add
hlt
das
inc
pop
icebp
pop
fdivrl
adcb
jg
mov
pop
pop
push
sbb
sub
fists
sbb
push
outsl
sbbl
out
jne
adcl
mov
dec
dec
xchg
push
inc
je
cmpxchg
push
push
cmc
sbb
cmp
arpl
clc
aas
push
scas
jle
and
xor
std
adc
push
mov
daa
lret
insb
inc
aaa
or
in
rclb
sbb
or
cld
ret
push
pushl
push
rcl
fbld
out
and
or
push
jne
call
lret
pop
test
sarl
incb
rcrl
mov
push
lock
inc
cmovp
mov
and
or
add
and
addb
add
repnz
xor
mov
lods
scas
push
lods
idivl
adc
pop
scas
and
adc
mov
pop
ret
in
rcll
movsb
sub
cmp
xchg
push
in
sbb
loop
test
js
ds
mov
rorb
cmpsb
cmp
in
mov
xor
xchg
fs
xor
sbb
add
les
push
inc
mov
out
mov
mov
sub
rcrb
sahf
ljmp
into
mov
jb
cmp
mov
mov
in
add
nop
add
pop
popa
dec
add
sub
aam
lock
int3
dec
pushf
or
add
js
cmp
adc
js
insb
dec
inc
je
sub
mov
fidivs
iret
rol
dec
movsb
scas
aam
or
mov
out
jb
outsl
xor
aaa
jp
sbb
mov
les
stos
cs
jns
repnz
mov
cmc
sub
add
nop
mov
sti
sub
jp
popf
call
pop
in
ss
mov
mov
ds
outsb
bound
pusha
test
frstor
lods
sub
pop
orl
inc
jo
test
xchg
xor
lret
lods
add
cwtl
clc
dec
push
add
pop
hlt
mov
sbb
add
mov
jl
and
inc
cmp
hlt
clc
ret
test
pusha
add
inc
and
lods
inc
js
fidivrl
and
ljmp
inc
mov
inc
cwtl
jo
mov
sub
icebp
int
sub
adc
or
pusha
push
shll
pusha
cld
cld
subl
jb
pop
aaa
fsubrl
imul
std
add
cmc
jne
or
jmp
es
mov
ret
daa
push
jne
pop
jo
push
adc
jmp
in
loop
adc
push
jb
pop
push
adc
mov
mov
and
mov
pop
call
int3
adc
jae
add
xor
and
cmp
je
adc
add
mov
pop
les
push
inc
jbe
orl
jbe
pop
inc
mov
test
dec
mov
int3
cld
andl
cmp
cld
mov
and
icebp
mov
mov
push
pop
jo
cmp
cltd
cmp
dec
xor
test
outsl
add
xchg
lock
sbbb
add
mov
test
lods
mov
out
push
mov
lcall
jae
pop
add
xor
mov
nop
fs
mov
push
aaa
dec
mov
and
std
out
out
in
inc
cmp
add
clc
out
aam
pop
and
ret
push
cmp
jb
daa
or
sbb
arpl
mov
sbb
shr
or
lcall
and
push
lcall
mov
data16
sub
and
sub
adcb
mov
xchg
dec
pop
dec
push
add
add
std
or
pushl
decb
or
pop
adc
cmc
add
ret
dec
fstl
or
fisubrs
add
std
mov
orl
lea
xchg
jnp
lcall
cmpsl
fidivs
xor
xor
mov
mov
bound
push
lret
pusha
dec
inc
inc
mov
or
mov
popf
hlt
sub
mov
fmull
push
add
fiaddl
addl
pop
and
adc
adc
out
add
mov
mov
fildl
movsb
ret
and
mov
in
adc
data16
fdivrs
mov
mov
je
iret
jmp
mov
fldcw
mov
push
sub
dec
add
rcl
push
lea
test
xor
jo
sbb
outsl
ret
insb
push
into
and
hlt
add
xor
or
or
jae
ljmp
dec
call
mov
and
xor
fcmovu
add
bound
xchg
adc
pop
les
sub
xchg
push
push
rol
inc
fsubs
call
adc
shlb
enter
xchg
dec
push
stos
fldcw
xor
imul
cmp
cmp
pop
add
mov
inc
lcall
jmp
dec
push
hlt
decl
test
lods
int3
lock
mov
clc
pop
add
add
imul
fstpt
ds
sbb
in
add
push
cmp
nopl
mov
mov
ja
cld
mov
adc
jp
mov
jge
movups
lds
sbb
sbb
gs
push
jno
sub
rorb
and
enter
les
inc
rolb
push
xor
mov
std
mov
call
cmp
xchg
out
cmp
pop
add
cmp
jl
cmp
mov
loope
sbb
or
adc
ret
push
loopne
mov
daa
cld
lar
pusha
add
adc
aam
mov
clc
xchg
test
sbb
pusha
lock
ret
cli
mov
xchg
and
and
xchg
or
out
mov
in
nop
sub
int
adc
insb
sbb
cmp
push
je
add
int3
adc
inc
push
rcll
test
xor
push
fiadds
mov
test
add
add
jbe
std
test
inc
add
sub
add
and
inc
sbb
iret
or
addb
xor
xor
daa
out
jne
repz
rorb
das
mov
xorl
popa
rcrl
gs
jl
std
test
cmp
and
pop
movsb
jmp
out
adcb
ret
add
inc
add
ficompl
mov
jno
or
int3
sub
gs
cmovae
add
and
add
fcomps
jae
inc
add
imul
fidivl
pop
test
cmp
adc
shrb
push
js
mov
add
sub
add
es
cmp
xor
xor
or
addl
mov
sub
push
loop
lock
div
andb
pop
mov
dec
sbbb
or
add
stos
pusha
sub
cli
rol
jbe
wbinvd
es
pop
ficompl
mov
xor
stc
aad
xorb
adc
xor
and
mov
fldl
push
add
test
jp
mov
sbb
sahf
push
into
les
push
add
out
cs
es
inc
fs
sub
inc
add
or
xchg
dec
loopne
clc
push
or
call
mov
push
ret
or
push
andl
mov
shlb
or
pushf
fs
loopne
sbb
sub
xlat
inc
push
dec
cwtl
cli
stos
cmp
int3
je
call
scas
ss
cmp
orl
mov
std
aad
std
stos
js
push
mov
adc
adc
nop
dec
ds
scas
lea
mov
shr
testl
call
add
add
sub
std
jp
ljmp
test
dec
add
popf
sub
popaw
gs
movsb
dec
mov
push
rcrb
adc
cmp
xchg
xchg
in
adc
xor
bound
inc
cltd
mov
imul
jbe
loopne
rolb
lea
mov
lcall
add
mov
aad
jb
push
mov
rorb
or
lock
imul
es
add
push
rolb
and
adc
insb
cmpsb
adc
hlt
adc
es
pop
clc
incl
add
or
dec
mov
out
mov
les
adc
mov
mov
testl
push
out
xor
mov
inc
call
inc
insl
mov
sbb
jg
test
pop
sbb
pusha
push
sbb
pop
xchg
adc
lods
fidivrl
aas
and
es
sbb
sbb
outsl
sub
outsb
lock
mov
int3
cld
xchg
fwait
mov
fimull
addb
cmp
and
dec
push
fistps
jle
mov
cmpsb
dec
outsl
sbbl
mov
pop
mov
rorb
cmp
inc
test
adc
mov
call
inc
mov
je
push
ja
jmp
lahf
or
cmp
and
lock
popa
add
ret
gs
stos
mov
fmul
cld
mov
in
or
aam
mov
aam
in
add
jmp
jmp
mov
std
push
or
adc
andb
scas
nop
lcall
mov
in
mov
or
std
and
shlb
decb
cmp
orb
mov
cwtl
pop
and
das
jp
jnp
cmpps
add
inc
je
mov
scas
push
je
xor
aad
or
inc
cmp
add
jo
xchg
std
aam
lock
cld
jge
outsl
call
ss
sbb
mov
inc
fistpll
sbb
sub
lods
stos
sbb
sbb
insb
hlt
dec
jp
sbb
xchg
cwtl
ret
and
lret
mov
incb
mov
push
incl
push
add
outsb
cmpsb
and
test
inc
inc
or
inc
icebp
jo
push
push
jecxz
cs
out
clc
hlt
repnz
bndstx
adc
push
inc
adc
jg
mov
mov
lea
jl
dec
loopne
xor
cmpsl
add
pushl
add
sbb
pop
aad
out
push
out
pop
stc
add
mov
pop
sbb
sbb
sti
dec
add
or
pop
jp
pop
jg
inc
push
cmp
clc
add
mov
test
mov
icebp
inc
outsl
mov
adc
xchg
clc
push
mov
dec
addl
shr
aaa
sbb
popa
push
cmp
adc
inc
push
add
and
out
in
adc
cmp
mov
push
cmc
test
xor
or
or
inc
icebp
inc
or
fld
dec
mov
xchg
aas
push
jb
dec
mov
inc
and
cmp
pop
aas
lea
loopne
jmp
and
push
jo
cmc
inc
incl
pushf
into
decl
push
push
aaa
mov
movsb
mov
in
cmp
pop
ficoml
cltd
add
mov
sub
mov
hlt
push
adc
sbb
inc
fdivrs
mov
fsubrl
lret
xchg
and
inc
or
test
xor
pop
inc
lea
mov
lret
add
dec
pop
cmp
push
xor
or
gs
das
pushf
xor
mov
outsb
or
imul
xchg
mov
mov
xor
call
or
jbe
mov
and
adc
inc
xorl
mov
xchg
cwtl
mov
orl
mov
into
rorb
or
dec
push
cmp
and
inc
mov
pop
test
and
jo
add
mov
lods
sub
jb
ljmp
sub
shl
push
cli
add
loopne
push
xchg
xor
aaa
add
sub
and
call
fdivrs
inc
andl
pop
dec
sub
push
js
mov
mov
int3
jbe
or
mov
enter
mov
xchg
xchg
dec
jp
fs
xchg
into
mov
lods
daa
sbb
pop
sub
pop
ret
add
pop
hlt
push
call
jnp
push
sbb
jecxz
xchg
shl
push
mov
adc
shr
shl
pop
xor
sarl
sub
xchg
nop
add
xchg
push
and
pop
adc
adc
imulb
sbb
data16
jmp
rcl
add
repnz
pop
xchg
data16
add
push
push
push
or
cli
testb
ret
add
imul
adc
mov
in
call
lcall
push
lea
lock
and
fidivs
add
pop
push
andl
push
xadd
or
push
daa
inc
cmp
xchg
les
dec
sarl
ret
adc
outsl
or
inc
and
add
adc
fiaddl
cs
in
push
scas
inc
adc
ret
out
add
mov
movsb
arpl
shr
fiaddl
xchg
push
outsb
and
std
jmp
adc
add
add
jne
or
iret
test
jl
sub
ficompl
cmp
or
push
clc
xor
aaa
test
rcr
cmp
andb
call
jae
aam
jo
adcb
outsb
xor
outsl
sar
inc
icebp
jo
mov
push
pop
pop
ja
push
or
adc
xor
pop
push
inc
addb
push
sub
shl
ds
pop
data16
or
adc
sbbl
punpckhbw
leave
out
cld
add
add
fsubrs
in
jb
mov
xor
nop
adc
sbb
mov
xor
mov
sbb
pop
mov
fcmovu
xchg
nop
push
adc
cltd
and
cmp
jo
stos
in
push
je
pop
insb
divb
rorl
shlb
fisubrl
push
andl
cltd
pop
mov
push
icebp
add
xchg
je
pop
pop
outsb
push
xor
inc
jle
fadds
mov
shlb
inc
inc
pop
and
leave
pop
xchg
je
jmp
cmp
dec
mov
cmp
lock
push
pop
xor
inc
mov
lods
insb
push
push
push
clc
pushf
jns
mov
dec
mov
jne
jp
or
push
out
in
push
push
fs
add
repz
sub
xor
add
and
mov
lret
and
stos
icebp
inc
mov
sahf
add
icebp
cmp
xor
pop
jno
popa
call
pop
inc
push
scas
xchg
ret
fistl
inc
clc
lock
icebp
xchg
mov
test
insb
cmp
scas
loop
test
add
xor
push
mov
xor
push
lock
dec
mov
cltd
fsubs
cmp
push
jb
push
test
add
mov
or
push
pop
pop
or
mov
sub
push
mov
push
sbb
mov
xchg
dec
pusha
clc
sub
sahf
xlat
out
and
daa
mov
fadds
stos
andb
dec
adc
sbb
int3
pop
sar
sbb
jmp
jne
jge
mov
cmp
fs
pop
insl
repnz
jle
add
aas
pop
jno
testb
rcrb
add
dec
or
jbe
lea
aas
sub
pop
js
inc
sbb
stos
pop
incl
mov
mov
mov
imul
xchg
mov
clc
push
rclb
lods
je
sub
or
adc
fildll
dec
mov
hlt
cmp
sbb
test
push
adcl
in
arpl
and
inc
mov
pushl
aaa
jmp
mov
add
adc
mov
sub
mov
int3
and
dec
mov
je
sub
xor
xor
pop
cmpsb
inc
or
ret
test
cmc
daa
sbb
adc
push
jge
pusha
mov
inc
ds
into
adc
jp
std
pop
add
incl
por
jo
lods
cmp
scas
roll
flds
xor
lea
cmp
clc
add
data16
push
aaa
ret
or
jne
shll
mov
ret
loop
fwait
add
pop
addl
std
stos
nop
xor
jmp
rolb
push
fbld
repz
cmc
mov
std
mov
loop
mov
inc
or
test
pushf
xchg
lret
out
xchg
push
jle
push
mov
xor
lahf
jp
xchg
shlb
add
cmp
pusha
nop
dec
fcoms
add
inc
adc
mov
insb
push
inc
lret
adc
sub
loopne
add
cmpl
lcall
inc
mov
insb
lcall
inc
icebp
or
leave
addl
shl
lds
mov
lea
fs
bound
mov
and
cmp
xor
inc
push
xchg
test
subl
mov
sub
inc
xchg
sbbb
xor
jne
xchg
in
inc
push
add
fcoms
or
rclb
les
fmul
xor
cmpsb
sub
test
sbb
cmpsb
shr
loopne
iret
pop
sub
mov
movaps
sbb
sbb
inc
notb
add
popf
aam
sbb
push
std
push
add
lcall
pop
pop
xor
jecxz
cmp
dec
loopne
hlt
mov
lcall
or
push
dec
push
jno
and
pop
dec
inc
dec
or
insl
pop
out
push
pop
in
divl
mov
fsub
jle
fisttpl
sub
inc
rolb
aas
fsubs
les
jae
pop
mov
xlat
into
sub
repz
xor
mov
xor
jl
inc
push
push
or
or
jg
dec
push
lcall
add
push
lahf
aaa
or
jg
test
adc
inc
std
les
pop
lock
xor
rolb
jb
call
sub
call
push
add
test
sahf
mov
push
jo
lcall
add
int3
mov
cwtl
sahf
xor
sbb
sbb
push
mov
add
or
movsb
pop
or
push
add
pop
rol
movsl
adc
decb
dec
xor
enter
imul
nop
lcall
and
in
adc
lret
aam
adc
imul
pop
jo
fbld
sahf
movsb
roll
mov
push
push
outsl
loopne
jo
dec
dec
dec
or
je
push
or
test
aad
rolb
sub
jge
fildl
int3
ret
imul
sbb
cli
clc
add
les
inc
push
push
ret
adc
and
call
in
mov
xor
nop
xor
dec
cmpsb
pop
cmp
loopne
int3
xor
mov
mov
call
repnz
loope
arpl
add
mov
test
insb
ja
in
pushf
sub
adc
add
pop
bound
rcr
pop
add
cmp
std
cmp
xor
mov
sbb
add
lods
movsl
fildll
std
call
add
std
ret
call
mov
ficomps
jbe
pop
enter
mov
sbb
les
mov
sub
out
jne
out
inc
push
add
gs
fisubrl
mov
dec
test
mov
and
in
cmp
ret
iret
push
mov
xorb
into
push
or
loop
or
iret
adc
cli
push
notb
fidivl
nop
adc
pushf
dec
hlt
pop
mov
popa
aaa
cmp
inc
out
push
pop
adc
lock
aam
lock
testl
sub
push
xchg
pop
je
cmp
orb
clc
cmpsl
dec
sub
jl
jg
test
inc
and
dec
mov
jecxz
enter
ljmp
xchg
cli
mov
popf
mov
addr16
pop
js
test
cmpsb
mov
add
pop
outsb
ficompl
in
int
sar
push
call
push
gs
lock
or
push
leave
mov
ret
sbb
dec
shlb
add
pop
ss
mov
xchg
test
fmull
push
pusha
xor
ljmp
out
or
dec
xchg
mov
push
adc
xor
adc
xchg
lret
pop
xor
inc
sbb
ss
jnp
dec
adc
push
cmp
dec
inc
lea
out
insl
imul
shl
cld
inc
jle
aas
push
aam
dec
decl
subb
pushf
dec
cwtl
jne
push
cmpl
or
lret
adc
add
add
fiadds
inc
shlb
addl
push
jne
mov
test
cld
js
out
or
fdivr
rorb
and
lret
js
ljmp
add
mov
lcall
arpl
adc
in
xchg
jecxz
shrb
data16
mov
push
dec
testb
push
lahf
jle
xchg
mov
and
and
out
je
pop
in
loop
jl
push
bound
inc
cmp
push
rcrl
inc
adc
xor
mov
mov
sbb
incb
push
ret
data16
mov
les
pusha
js
je
fcom
sahf
push
pop
push
pop
pushf
pop
mov
and
ret
inc
and
incl
push
mov
or
and
pop
mov
jmp
test
sahf
push
or
jl
mov
or
or
stc
in
jno
pop
inc
pop
push
push
cmc
pop
nop
cwtl
mov
fcoms
or
jp
loopne
je
inc
sarb
cs
aas
mov
andb
adc
test
add
xchg
jnp
inc
push
adc
jbe
rorl
and
push
movl
pop
lea
fcomps
push
push
push
test
cmp
pushf
int3
frndint
mov
jecxz
pop
jle
add
dec
push
je
shrb
inc
jp
sbb
inc
rorb
mov
negb
xchg
sbb
pop
inc
cld
push
test
cmc
lea
pop
scas
cmpb
out
sub
lret
adc
fiadds
and
sahf
and
sub
insb
push
cmp
pop
xchg
mov
test
lds
cld
cmp
jg
cwtl
pop
pop
adc
cmp
adc
pop
and
pop
push
rep
clc
lods
push
fisubrs
loop
out
les
push
fwait
lock
or
jmp
mov
incb
scas
fildl
loope
rclb
popa
xchg
pop
push
or
or
ret
ret
pop
mov
xchg
ljmp
sbb
push
sbb
cmc
lcall
loop
push
add
ja
shl
lret
sub
or
or
lods
adc
mov
sub
and
cmp
shrb
movsb
xchg
push
je
stc
pop
loop
nop
and
sbb
aam
cwtl
adcl
mov
imul
dec
fildll
js
in
aam
pushf
push
or
decb
cmpb
mov
dec
hlt
movsb
lock
push
dec
xchg
or
ficompl
jle
push
les
mov
call
sub
mov
adc
jb
popf
adc
cmpsb
add
or
pop
or
shlb
js
mov
inc
and
jo
ss
shlb
add
in
jne
jb
pop
icebp
mov
push
inc
mov
add
incl
or
inc
or
mov
mov
into
decb
insb
jb
ss
mov
push
add
dec
lret
rsqrtps
push
xor
jae
shll
xor
xchg
lock
inc
pop
add
ret
or
les
jnp
push
lock
pop
decb
dec
lock
add
cmovb
xchg
pop
loop
shll
insb
cld
jle
testb
ret
push
mov
sbb
mov
loop
lea
loopne
jl
push
add
aaa
cld
add
les
mov
rol
jg
loopne
add
call
mov
push
mov
inc
jp
int
cld
pop
adc
xchg
nop
lods
mov
cmp
push
cli
incl
ret
clc
inc
call
lret
stos
imul
mov
cli
sub
outsl
mov
xor
add
mov
js
std
int3
pop
and
fisttps
add
test
pop
pusha
mov
int
orl
cmp
add
out
les
cmpsb
aas
mov
pop
outsl
lds
lods
sub
sbb
test
das
pop
push
jmp
inc
and
jp
xor
outsl
xchg
pop
lea
add
inc
push
test
int3
push
cmp
jo
or
dec
or
xchg
mov
jae
mov
sub
mov
inc
lea
mov
jne
fisubrs
addb
push
xor
add
mov
cmp
fwait
adc
int3
sub
in
push
fadd
mov
or
lock
shl
insl
mov
push
mov
shlb
ljmp
icebp
xchg
or
mov
ret
jne
pushf
or
inc
test
rol
and
fs
push
mov
jne
jnp
or
int3
sub
pop
loope
adc
jbe
int3
xor
inc
push
shlb
call
push
loope
pop
fs
or
mov
insb
outsl
and
and
call
les
pusha
push
enter
mov
adc
mov
pop
movb
insb
mov
sub
xchg
ljmp
push
test
shll
and
mov
push
test
sahf
cs
cmp
mov
outsl
xchg
daa
jbe
add
fadd
out
push
mov
xor
test
popf
jne
mov
mov
movsb
daa
add
xlat
and
sahf
fs
int3
jae
adc
add
cli
enter
sub
mov
hlt
lret
mov
ljmp
sbb
xchg
int
xor
nop
push
and
add
xor
adc
testb
jb
push
xchg
incl
adc
mov
inc
xchg
inc
add
mov
inc
sbb
and
dec
ljmp
cmpl
add
mov
addr16
add
hlt
jle
in
pusha
fcoml
push
add
jmp
inc
push
fadd
push
fisubrl
adc
stos
add
add
jp
lds
dec
pop
es
and
sub
pop
push
test
cmp
lcall
mov
mov
sbb
mov
shlb
xchg
rclb
add
mov
test
ljmp
and
xchg
lds
sub
sbb
and
in
lds
and
or
mov
mov
xchg
push
push
enter
mov
sbb
daa
lock
add
lea
or
pusha
xor
cmc
leave
pop
mov
inc
dec
mov
shl
and
incl
into
inc
pop
mov
sbb
adc
mov
lods
mov
std
push
inc
rorb
je
movsl
adc
or
subb
hlt
cld
aas
or
jmp
or
mov
push
or
sub
jmp
or
cmp
add
mov
jle
push
jb
add
sbb
add
inc
push
sub
mov
xchg
stos
ds
mov
mov
cmovne
fdivr
pop
cmp
xor
inc
scas
push
cli
jl
lea
fucomi
add
ja
pop
push
xchg
movsl
incl
pop
jbe
sbb
sbb
push
clc
sub
int3
pop
mov
and
push
or
loopne
les
push
inc
test
cmp
std
jbe
test
xor
sarb
or
push
jecxz
adcl
decb
sbb
gs
paddusb
orb
sbb
push
or
add
movb
add
push
enter
aad
mov
mov
inc
add
mov
and
cmp
add
xor
or
jge
mov
and
jl
lods
sub
repz
push
pop
inc
push
mov
push
or
aaa
movsl
cli
pop
pop
call
mov
fldt
cmp
nop
fldl
xor
push
rcrb
mov
and
paddd
outsl
mov
inc
jecxz
fstps
sub
xchg
mov
insb
es
test
sbb
shll
jo
add
lods
push
inc
ljmp
cli
je
test
ljmp
mov
stc
negb
mov
or
or
mov
add
mov
subl
shlb
sar
cmc
push
outsb
add
and
xor
and
fwait
nop
decl
mov
sarb
add
cli
xor
je
std
sbb
pop
lcall
ljmp
inc
add
jne
xchg
or
sbb
bound
mov
lcall
test
in
jae
mov
dec
pusha
call
inc
and
shlb
sub
data16
mov
xor
mov
xor
clc
or
mov
enter
loopne
or
lcall
lea
lods
xchg
rclb
addr16
jb
push
in
cmp
mov
pop
and
add
repnz
inc
fs
adc
or
jg
mov
inc
or
mov
lea
mov
xchg
or
repnz
xchg
les
push
sbb
testb
stos
or
cmp
add
cwtl
pop
and
fs
mov
lods
es
insl
adc
mov
nop
cmp
or
adc
es
inc
or
cmp
adc
jle
out
pop
test
into
jbe
and
push
adc
lea
cs
or
add
icebp
pop
andb
loopne
inc
loopne
mov
add
push
pop
mov
lret
sub
add
xchg
inc
dec
pop
push
xorb
movsb
xor
ljmp
in
clc
call
or
jb
cmovl
mov
or
roll
pop
add
jns
and
mov
lods
ficoms
jmp
lret
jg
xor
stc
mov
mov
insb
mov
mov
inc
dec
or
nopl
sbb
inc
add
mov
aam
inc
jmp
xchg
mov
mulb
mov
imul
pop
mov
cld
jbe
call
int3
inc
mov
ss
inc
mov
shlb
out
mov
mov
push
std
data16
dec
lret
push
jle
ja
inc
mov
les
sbb
cmp
and
xchg
shrb
push
inc
dec
sbb
out
mov
sbb
ss
jne
fadds
mov
mov
les
xchg
pop
jo
adc
aam
in
lret
push
cmp
sbb
fdivl
pop
fidivs
ficoml
stos
fdivrl
pusha
inc
mov
fcomp
and
mov
sbb
push
ds
ret
xchg
mov
data16
sub
push
cmp
mov
nop
jle
mov
pop
pushf
ljmp
sbb
pop
rolb
dec
cwtl
leave
xor
mov
mov
enter
inc
lcall
leave
xchg
lcall
pop
and
inc
mov
and
mov
int3
rolb
lcall
jmp
add
cmp
push
push
pusha
sub
or
push
andb
push
push
mov
movsl
mov
adc
push
jmp
adc
mov
cs
add
add
lods
mulb
ret
add
or
imul
adc
ret
repnz
shrb
je
cmpb
mov
lahf
lock
cmp
dec
dec
ret
cli
shrb
add
mov
sahf
movsb
decl
adc
setle
add
mov
pop
jo
fdivs
or
and
pop
lods
inc
repz
decb
jbe
ss
pop
mov
fdivrs
xor
orl
sbb
loop
test
cmpsb
inc
insb
and
mov
scas
or
push
and
push
add
pop
inc
xor
and
les
ss
call
xchg
mov
cmp
cmp
xor
sub
stos
push
xor
pop
les
pop
add
xchg
dec
test
incb
call
lods
popf
cmp
add
jle
xchg
inc
sub
gs
repnz
sub
cmc
xchg
and
test
push
pop
xchg
outsb
jle
mov
mov
mov
push
stos
cs
fwait
jmp
sub
or
rorb
push
popa
mov
mov
xor
dec
insb
add
popa
sub
mov
rcl
cld
push
xchg
mov
push
dec
mov
sar
mov
adc
call
loop
xor
mov
rclb
mov
jmp
out
xorl
xor
call
xchg
ret
hlt
push
into
pushf
add
mov
pop
addl
or
test
and
fisubrs
fs
ljmp
aam
clc
cmp
cli
movsb
push
pop
ljmp
lcall
sahf
shlb
xchg
test
hlt
out
mov
xor
in
xchg
mov
push
mov
cmp
scas
test
fisubl
nop
or
lahf
sub
mov
scas
push
push
aaa
jne
push
xor
add
loop
dec
sahf
cmpsb
jno
fcoms
out
push
mov
dec
fists
scas
loop
sbb
loopne
test
sbb
push
xor
dec
xor
int3
cmp
pop
add
dec
xchg
adc
mov
je
add
xorl
stc
mov
jo
sub
add
orl
std
aam
mov
cmp
cld
or
pusha
mov
loopne
pop
cmp
aam
mov
cmp
add
test
adc
sub
les
mov
xchg
into
je
cmp
add
lret
fadds
shll
jae
xchg
ret
push
xor
fs
je
cmp
jmp
pop
xor
pop
testb
xchg
jg
std
cld
insl
fsubrl
rclb
jge
repz
inc
dec
fwait
sbbb
cmc
ljmp
add
xor
push
mov
test
add
mov
mov
sahf
sub
cmp
icebp
inc
mov
in
and
or
mov
dec
push
mov
in
or
outsb
and
out
sbb
add
and
push
ret
ljmp
enter
mov
rcll
push
add
push
push
icebp
insb
mov
es
push
inc
inc
fstpl
mov
test
mov
add
insb
in
daa
loopne
mov
jne
lret
mov
push
shlb
and
add
or
sar
jne
inc
rol
mov
xchg
lods
or
mov
pop
and
nop
adc
adcl
nop
mov
or
adc
mov
push
mov
lea
jl
jb
xchg
int3
int3
shlb
outsl
stos
enter
xchg
and
cmpsb
add
subb
add
sarb
mov
dec
lock
in
push
in
jmpw
in
mov
pop
shlb
and
roll
push
or
data16
dec
jo
fisubs
fwait
enter
pop
roll
loop
pushf
and
rolb
call
data16
sbb
add
ja
mov
push
pop
adc
movsb
push
sbb
dec
dec
mov
ds
aam
push
xor
mov
jae
loopne
sbb
push
filds
xor
rclb
inc
cs
fsubl
lods
or
loop
cmpsb
inc
loope
cmp
adc
stos
jmp
push
sbb
xchg
ss
ret
sub
cld
add
jns
add
adc
ja
add
daa
add
leave
test
and
or
and
out
in
and
clc
cmp
sub
push
push
mov
push
shrb
jae
movsb
or
xchg
hlt
dec
ljmp
mov
push
enter
mov
and
dec
cmpsb
push
push
add
sub
pop
into
push
pop
jl
int3
pusha
push
xor
lret
pop
adc
inc
pop
push
out
fmull
or
push
xchg
test
stos
and
push
push
inc
jmp
sub
mov
or
outsl
aaa
rolb
inc
mov
nop
cmc
ja
rorb
adc
adc
dec
das
jl
mov
pop
int
movsl
ljmp
jno
icebp
movsl
mov
mov
xchg
push
jle
das
cli
mov
jmp
insb
jne
push
daa
adc
in
jb
mov
loope
test
sub
pop
add
prefetch
or
setbe
adc
ficomps
mov
mov
adc
fs
cmp
mov
push
or
mov
inc
outsb
addr16
bound
xchg
inc
push
lods
aaa
or
mov
je
push
and
dec
mov
xchg
mov
lcall
push
mov
jp
rcrb
call
sub
pop
movsl
push
pop
call
movsb
adc
lea
sarb
add
push
orl
push
pushf
push
push
mov
or
ds
mov
push
sarb
int3
inc
enter
or
cld
add
out
push
cmp
lret
daa
adc
or
dec
xor
jmp
inc
push
mov
call
jmp
pop
mov
lea
mov
push
in
adc
lahf
pop
mov
leave
add
je
lret
in
and
gs
fsubrl
lock
jmp
push
das
push
insb
cld
adc
inc
imul
popf
lea
mov
xchg
frstor
out
push
push
inc
push
inc
add
aas
fisubrs
dec
xor
inc
add
clc
add
rorb
add
push
pusha
ret
push
test
sbb
mov
adc
xchg
fisubs
cs
into
sbb
and
inc
inc
jmp
ret
add
mov
mov
js
and
aam
inc
push
or
adc
xor
add
stos
adc
push
adc
lds
lock
movsl
push
mov
xchg
mov
movsb
dec
mov
lret
in
mov
mov
mov
jmp
cmpsb
lcall
jmp
test
aam
shlb
xor
orb
aad
add
push
mov
sub
imull
and
cmp
orl
aas
or
pop
sahf
fisubrl
clc
jg
fsub
mov
movsl
pop
add
jo
shrb
mov
xor
push
scas
stos
or
add
jns
or
mov
enter
cli
mov
push
cmp
int3
test
push
and
add
stos
jmp
addl
daa
mov
jle
or
loop
and
in
cmp
inc
add
pop
jns
inc
clc
xor
cmp
add
mov
adc
jg
push
test
or
add
gs
or
ror
cmp
lock
xchg
int3
sbb
xor
jmp
mov
sar
mov
push
jmp
xlat
mov
sbbl
mov
mov
fsubrl
cmp
mov
in
lock
jg
rolb
test
push
and
and
fidivrl
adc
or
sub
or
rolb
lcall
loope
or
inc
fimull
mov
lcall
movb
mov
adc
xchg
jb
pop
test
sbb
add
pop
ds
inc
add
add
sbb
push
jb
mov
pop
fidivs
add
sub
xchg
stos
mov
add
call
jne
sahf
inc
or
pop
fwait
mov
into
es
in
xchg
ss
push
ss
stos
sbb
pop
mov
mov
call
lea
or
or
dec
cli
xor
add
inc
cmp
rorb
frndint
inc
sbb
xor
lods
insb
lret
adc
hlt
bound
icebp
mov
inc
loope
xor
call
mov
fs
xor
cwtl
push
rorb
and
flds
cld
nop
faddl
xor
pushf
lds
add
orb
cmc
dec
jmp
pushf
dec
inc
xchg
divb
aam
ret
js
and
and
scas
inc
mov
jle
test
ret
jb
lea
negb
or
pushw
add
xor
rol
mov
push
aam
add
inc
jl
or
clc
mov
je
add
ss
cmpl
cmp
sub
ret
mov
push
cmp
shlw
adc
call
push
mov
cmpl
sub
xchg
ror
mov
aam
or
mov
lcall
xor
push
inc
jb
inc
adc
mov
push
gs
sub
add
jbe
cwtl
enter
mov
flds
mov
cld
or
pop
add
xor
mov
aam
mov
arpl
mov
pop
stc
test
test
xchg
sbb
push
shlb
ja
dec
add
sbb
repz
adc
push
insb
fs
push
adc
inc
xchg
mov
add
ja
mov
xlat
jp
shlb
bound
addr16
mov
pop
icebp
sbb
add
jge
or
outsl
dec
push
and
cltd
scas
je
stos
outsb
push
push
xchg
cmp
xchg
push
rol
jmp
mov
negb
pop
call
push
inc
int3
in
sar
pop
lods
add
xor
cs
dec
addb
cmc
push
add
xor
inc
mov
adc
sub
mov
push
roll
jno
pop
mov
rcr
or
addr16
xor
shrb
lods
add
in
push
jb
rcr
mov
push
mov
sub
stc
hlt
std
pop
cmpl
push
fsubp
cmp
stos
test
adc
lock
add
sbb
lea
adc
pop
popa
or
sti
dec
cmp
cs
add
clc
jmp
int3
sbb
stos
add
push
inc
fisttpl
sub
sub
jg
mov
iret
adc
ljmp
enter
mov
call
add
and
ret
call
push
shll
jge
push
pop
mov
movsb
mov
cwtl
js
les
jp
push
testl
cmp
lock
inc
pop
sub
setb
je
inc
lods
adc
push
fists
sbb
cld
sub
fs
and
mov
cmp
lods
inc
into
mov
call
mov
pushl
pop
add
xchg
orb
inc
inc
mov
mov
cmp
addl
sub
pop
or
inc
inc
adc
xchg
rorb
xor
mov
sbb
je
dec
sub
or
add
mov
add
xchg
test
mov
aaa
icebp
ja
cmpsl
inc
dec
aaa
and
pcmpgtb
test
push
sub
rcrl
dec
jmp
add
push
nop
sar
sahf
lret
js
xor
add
rorl
sbb
insl
movsb
dec
sbb
adc
adc
in
mov
lcall
cmp
cli
popf
cmp
cmp
fs
ret
inc
insb
push
push
adc
mov
lea
and
jg
sbb
adc
inc
push
adc
or
adc
xor
add
inc
or
addr16
clc
int3
dec
jmp
or
lea
push
dec
clc
popa
mov
add
mov
pop
cmp
daa
mov
add
add
sbb
mov
or
mov
jne
test
test
or
rorl
in
cmp
add
push
inc
and
dec
or
add
jle
sbb
rorb
jbe
lods
adc
mov
test
or
mov
and
test
inc
cmc
and
in
jmp
stos
inc
jo
dec
shl
aam
loop
lods
inc
adc
mov
cli
push
fiaddl
in
aas
mov
dec
mov
je
sbb
ss
push
mov
ret
cld
movsb
add
insb
pop
sub
or
stos
and
cmpsb
sbb
add
jbe
aaa
loope
repnz
nop
int3
bound
cmp
lock
call
push
mov
mov
add
add
cmp
xor
popf
icebp
inc
jb
pop
outsl
add
or
lock
and
test
jbe
fcompl
insb
ja
inc
push
ret
push
sbb
mov
sbb
dec
pushw
test
loope
ss
iret
jp
aam
sbb
or
fs
xor
das
push
cmp
sbb
mov
stos
push
sti
movsb
test
rcll
mov
sbb
xchg
jb
test
test
cld
in
loopne
xlat
int3
aam
rolb
ret
cmp
xchg
or
dec
push
lods
jb
loop
push
pop
push
mov
add
loop
push
xor
je
and
dec
push
mov
scas
add
sbb
arpl
mov
push
push
or
add
xrstor
add
push
insb
test
push
enter
fs
fdivrl
sahf
dec
xor
jmp
add
in
idiv
adc
dec
ficoml
xor
std
es
test
sbb
mov
dec
mov
push
or
rolb
inc
cmp
push
and
out
add
jne
inc
xor
fmuls
ret
xchg
push
sarb
or
inc
test
pop
hlt
and
es
pop
scas
add
add
adc
test
or
pop
ret
mov
xor
push
mov
push
push
or
les
inc
cltd
lcall
mov
xor
mov
pop
pop
js
rcl
dec
mov
loopne
dec
mov
push
les
inc
and
adc
adc
jmp
xchg
fmull
or
add
cs
jne
cwtl
xor
fsub
push
push
jle
roll
loopne
mov
cwtl
pop
pusha
dec
sub
inc
aaa
insl
pusha
xlat
dec
push
pushl
sub
inc
push
cmp
pop
shr
add
push
adc
add
and
xlat
ljmp
ljmp
cli
jns
add
adc
cmp
int3
movsb
movsl
dec
loop
push
or
jbe
sahf
mov
into
std
adc
or
hlt
mov
lea
lret
xor
rcrb
scas
lcall
call
jle
mov
les
mov
lods
cmp
sahf
and
pushl
add
andl
xor
fsubl
or
out
inc
fisttps
push
std
aam
xchg
rol
push
push
fsubs
inc
dec
add
lea
sub
jne
adc
lahf
scas
xor
in
jmp
test
add
cmp
mov
mov
outsw
push
icebp
ljmp
mov
mov
add
sbb
sub
push
in
xor
fdivs
shl
pop
add
inc
jl
stos
pop
mov
test
int
dec
jmp
notb
pop
sub
cmp
jp
cmpsb
inc
add
or
test
and
rolb
test
sahf
test
daa
subl
lock
nop
jg
dec
mov
aam
out
cli
sbb
push
clc
mov
add
loopne
shlb
inc
push
pop
and
fiadds
fdivrs
test
inc
dec
adc
push
aam
nop
sub
pushf
clc
into
xlat
xor
je
add
cmovge
test
dec
movsb
sbb
adc
add
xor
push
sub
repz
loopne
rolb
rolb
mov
mov
dec
imul
mov
inc
jl
cmp
cld
idivb
outsb
shll
pop
xchg
push
rcrl
jne
xchg
push
addl
test
insb
ficoms
aas
repnz
xorb
xor
ja
lcall
jg
cmp
push
push
jmp
jmp
outsb
cld
mov
add
dec
add
mov
jb
add
push
adc
jno
mov
cmp
invd
fisubrl
add
ja
sub
and
mov
xor
mov
push
mov
or
and
mov
jmp
sub
jo
add
mov
or
loop
std
cmc
push
sbb
lret
pop
cltd
add
pusha
lcall
sbb
inc
xchg
stos
lock
fwait
pusha
data16
xchg
jbe
xor
movl
sub
pop
mov
in
push
mov
js
mov
cmpl
aaa
stos
insl
lea
inc
add
push
adc
lea
aaa
pop
add
lock
cld
je
mov
adc
inc
std
or
sub
je
sbb
jle
adc
add
mov
test
jg
inc
xor
adc
pop
cmp
loopne
mov
adcl
jmp
mov
sub
pusha
push
int3
push
mov
bound
mov
faddl
mov
mov
inc
add
pop
push
add
mov
pop
mov
lahf
rolb
inc
xchg
sbb
je
jbe
cmp
xor
mov
push
jne,pt
stos
arpl
sbb
add
mov
mov
add
or
sub
and
sbb
and
push
rorl
insb
clc
int3
push
jbe
insb
fs
stc
cmp
cmpsl
je
ljmp
call
xlat
shll
loopne
mull
push
mov
fiadds
jmp
push
stos
adc
sub
repz
incb
pop
sbb
fadds
in
push
lcall
ret
mov
cld
add
or
int3
lret
pop
js
pop
add
mov
xchg
mov
lock
sbb
inc
test
adc
shl
add
xchg
push
push
js
add
data16
mov
in
mov
into
mov
mov
jo
mov
gs
lock
add
ds
sbb
dec
idivl
cmp
loopne
divl
mov
stc
inc
mov
cwtl
xor
call
lcall
cld
mov
sub
fiadds
push
in
add
jno
test
sbb
cmpsb
out
push
xor
es
push
jp
inc
sti
pop
aam
shlb
lea
ret
cmpsl
stos
xchg
sbb
or
mov
push
push
and
lea
fstl
adc
test
mov
jo
and
add
test
or
dec
cmp
ret
scas
jmp
jp
jne
pop
pop
and
add
ljmp
and
adc
hlt
jg
push
hlt
and
or
jne
xor
cmpsl
hlt
cmp
push
pop
pop
test
or
or
loope
mov
and
push
adc
add
pop
cmp
mov
push
adc
push
xor
dec
push
test
mov
mov
inc
enter
adc
cmpsb
fs
adc
aad
pusha
lock
add
bound
push
add
cmp
add
push
xor
push
call
mov
mov
adc
aam
shrl
inc
mov
sbb
adcl
scas
popa
mov
or
aaa
stos
nop
push
mov
mov
jbe
aas
test
push
mov
fimull
inc
arpl
ret
mov
call
ss
loopne
dec
lret
push
jl
rorb
xchg
add
nop
mov
movsb
push
decl
push
jge
sahf
imul
and
adc
and
adc
shl
lds
popa
add
cmc
inc
mov
testb
cmp
and
mov
sub
mov
pop
int3
dec
lock
mov
inc
push
xchg
and
jg
jle
jmp
mov
decl
ret
mov
dec
push
add
call
enter
out
lea
sahf
dec
rclb
xor
xor
or
or
mov
mov
or
int3
push
fisttpl
cmpsb
push
hlt
mov
xor
lret
jge
lret
push
nop
jl
test
les
adc
xor
test
fisubrl
push
stos
gs
es
mov
mov
adc
push
xchg
icebp
mov
cld
inc
repz
shll
pop
notb
loop
pushf
sar
mov
mov
popf
gs
add
add
sbb
or
add
loop
cmp
jo
in
push
shrb
mov
cmp
aam
imul
rcrb
lods
xor
mov
mov
inc
fsubl
mov
loop
fsubs
and
sbb
and
adc
leave
inc
adc
xchg
ss
mov
cmp
jb
test
or
hlt
or
popa
es
jo
ficoms
jp
adc
push
sarl
incl
ret
xchg
pushl
ret
jne
outsl
xchg
jg
add
lea
je
orl
push
or
fistpl
or
cli
aam
xor
lock
sub
dec
or
fsubs
add
xchg
add
and
loop
mov
rcrl
fcomip
jg
cli
int3
test
test
sahf
iret
sti
and
or
inc
dec
inc
mov
cmp
les
inc
shll
lret
fidivs
es
jne
dec
add
mov
ret
cmp
or
push
out
call
add
stos
movsb
mov
stos
xchg
in
push
cmp
call
mov
push
adc
mov
push
or
mov
xor
lret
push
push
int3
les
pop
fwait
mov
mov
rorb
aaa
into
sub
adc
in
dec
cltd
mov
inc
stos
push
cs
adc
push
call
pop
mov
cwtl
cmc
push
outsb
adc
mov
rcll
add
push
mov
mov
dec
jle
mov
mov
loopne
jo
jne
call
xchg
jge
add
mov
adc
int3
mov
ss
xchg
cmpsb
dec
add
pushf
jg
dec
mov
sub
in
inc
pop
xchg
cmp
divb
xchg
movsb
jne
sub
jl
push
daa
and
adc
inc
ret
mov
inc
mov
jmp
push
icebp
incl
jmp
jne
std
adc
xor
push
dec
and
test
repnz
push
add
xor
mov
ljmp
mov
in
jg
xchg
sbb
in
lds
mov
pop
xadd
xchg
into
and
jb
mov
shr
outsl
jne
sbb
xchg
ss
sbb
mov
pop
mov
call
aaa
mov
arpl
clc
and
xchg
dec
sbb
std
add
out
fiaddl
cwtl
enter
jo
push
pop
in
stos
es
jge
cmp
push
adc
sub
bound
mov
mov
cmove
push
sbb
or
add
sub
mov
sbb
ljmp
push
push
push
adc
leave
xorb
loope
psllw
push
and
mov
adc
pushf
jmp
out
clc
push
je
and
pop
adc
inc
cmc
cmp
pushf
dec
jne
sbb
sbb
jo
dec
pop
lcall
push
cmpb
add
mov
mov
mov
fsubr
adc
aad
sub
push
sub
adc
and
lods
lret
dec
fdivr
mov
adc
cmp
inc
stos
add
mov
push
rcrl
jb
lea
loopne
dec
push
push
mov
xlat
orb
fidivrs
pop
mov
cltd
inc
push
push
lock
sarb
mov
outsb
push
callw
push
jne
in
cmp
mov
pop
sub
dec
push
incb
cld
int3
add
xor
cmp
bsf
inc
mov
mov
or
cld
cmp
mov
stos
clc
ds
dec
insb
cmpsb
mov
mov
add
pop
loope
cmpsb
xchg
dec
inc
or
cmp
or
sarb
xchg
cmp
adc
popf
js
pop
test
add
push
lods
dec
dec
mov
inc
jmp
jmp
jbe
pmulhw
mov
and
mov
jle
add
jmp
and
stos
or
jae
stos
mov
and
mov
or
dec
lock
pop
push
ljmp
push
lock
and
adc
or
push
sbb
in
mov
loopne
clc
cli
lods
dec
add
add
ret
int3
les
cmc
or
scas
nop
xor
gs
jge
xchg
test
jo
xor
in
push
sbb
cli
pop
adc
pop
dec
mov
mov
or
and
lea
pop
adc
rol
add
mov
mov
clc
arpl
add
mov
or
cmp
fmuls
test
inc
push
pop
add
decl
add
jbe
inc
mov
ss
std
mov
pusha
and
inc
cmp
jne
and
ret
nop
movsl
sub
cmp
mov
lods
rorb
test
test
call
int3
push
adc
je
or
rolb
andb
jmp
push
inc
xchg
pop
mov
pop
jg
pop
popa
sbb
mov
mov
cmp
imul
stos
lock
jl
rorl
add
add
aas
pop
roll
cmp
dec
cmp
cli
mov
andl
out
and
sbb
scas
push
inc
data16
mov
loopne
adc
cld
jb
call
lret
dec
xor
shr
push
cld
rorb
test
notb
xchg
xchg
adc
test
pop
sub
push
add
andb
push
sub
xor
int
cmp
loop
movsl
mov
nop
stos
test
loope
icebp
push
ficoml
xor
or
aam
push
wbinvd
or
cmp
cwtl
adc
mov
cmp
and
pop
neg
sbb
mov
fists
and
inc
inc
jmp
fwait
sbb
inc
gs
lret
cmp
push
notb
out
cwtl
xchg
scas
adc
mov
into
rolb
cmp
fidivl
sub
testb
mov
xchg
mov
adc
jg
add
add
add
insb
mov
cmp
mov
imul
xor
ja
and
test
cmp
sbb
or
hlt
add
scas
lahf
xchg
mov
push
rcrl
les
sub
add
sahf
andb
call
inc
adc
mov
mov
sub
std
ret
pop
mov
xlat
pusha
jl
vmovlps
into
push
call
insl
movsb
fisttps
lcall
jmp
push
dec
std
loope
mov
movsb
pop
fcmovb
popa
data16
inc
fwait
insl
add
sahf
push
mov
inc
std
jmp
mov
xor
mov
lock
mov
in
sti
and
sub
movsb
es
jo
adc
gs
cs
xor
jbe
xor
lea
shlb
jg
fiaddl
inc
ret
lret
and
sub
mov
decl
sbb
jne
add
sahf
dec
out
add
lock
dec
mov
cmp
or
and
lea
mov
adc
loope
mov
shlb
pop
mov
cmc
xchg
ljmp
xchg
mov
push
lock
add
inc
rcrl
cmp
adc
push
sub
inc
bnd
rolb
cs
mulb
in
xchg
andl
cld
mov
adc
sub
adc
sub
mov
add
lods
inc
inc
pop
call
lcall
nop
sahf
rol
add
addl
fnop
xor
pop
cmpsl
outsb
pop
outsl
mov
inc
mov
mov
mov
ljmp
nop
inc
jb
clc
pop
pop
push
ret
outsl
inc
clc
pushf
enter
cmpl
mov
jne
lret
fwait
call
leave
aaa
inc
test
sub
loopne
gs
xchg
test
cwtl
xor
add
stos
loope
fisubl
xchg
mov
adc
cs
inc
mov
lea
cmc
popa
sarb
lret
outsl
lods
sbb
dec
inc
cmc
pop
loopne
push
push
xchg
hlt
adc
imul
call
lods
int
hlt
lcall
dec
ja
jmp
call
push
int3
test
mov
add
inc
dec
xor
add
scas
andb
sbb
gs
int
data16
sbb
cld
jle
das
add
xorl
scas
fldt
in
inc
mov
pop
and
ret
push
or
push
testl
popa
push
mov
into
lea
push
into
sub
je
push
push
enter
jge
inc
mov
xchg
aam
or
sbbl
add
aam
rcr
cmpsb
mov
in
ret
adc
add
jo
jle
adc
rorb
call
mov
jne
test
jg
es
xchg
ss
xchg
aam
inc
pop
add
cmp
jo
add
add
addr16
xchg
shrd
outsb
xor
in
cwtl
mov
loop
mov
or
adc
mov
mov
es
lretw
sbb
mov
outsl
xor
xchg
lcall
push
stos
test
movb
push
xor
jne
add
sub
cld
roll
xor
xchg
inc
jo
cwtl
cld
sbb
loopne
fs
aaa
sbb
xchg
popa
insb
fs
inc
adc
push
test
rolb
add
push
xor
push
or
cmp
pushaw
fidivrl
gs
movsl
cli
lahf
aaa
push
test
fwait
cmc
cmpsl
fists
imul
cmc
imulb
sbb
fldt
mov
ds
incl
mov
push
scas
sar
lret
sub
int3
push
mov
jno
out
sub
orl
push
inc
fadds
mov
mov
call
je
add
cmpsl
or
adc
pop
add
pusha
pop
jl
outsl
add
add
inc
jne
sub
pop
hlt
cmp
orl
loopne
es
mov
fwait
jecxz
imul
call
push
fimuls
or
mov
add
push
inc
scas
mov
outsb
pop
fcomps
inc
sti
push
sbb
outsl
cmp
ja
jmp
mov
xlat
mov
add
imul
jne
sbb
ficomps
dec
mov
jbe
lods
ret
sub
mov
jo
pop
mov
mov
rcrb
and
fs
push
fisubl
rclb
xor
rolb
pop
data16
dec
imul
inc
push
add
and
add
testb
pop
shrb
ss
mov
enter
insb
push
dec
xor
shrb
push
and
stos
rolb
and
add
test
or
insb
jne
adc
addr16
out
adc
in
jo
inc
movsb
jbe
and
aaa
int3
cs
or
mov
daa
scas
mov
add
pop
pop
in
add
hlt
aas
pop
imul
push
lea
push
pop
test
fdivp
or
into
xchg
add
sub
cli
push
push
lods
outsb
mov
cmp
xchg
adc
fdiv
sbb
or
mov
dec
xorl
cmp
std
push
mov
dec
lcall
mov
lock
mulb
jl
ljmp
aad
sbb
leave
push
adc
mov
fadd
add
test
push
popa
sbb
out
shrb
xor
push
inc
js
sub
push
call
sbb
rol
mov
je
adc
xchg
les
mov
shlb
xor
imul
cltd
sbb
adcl
dec
xchg
mov
cmp
adc
jl
lea
sbb
cli
fsubrl
xor
mov
in
je
fdivrl
mov
sub
inc
adc
jecxz
jecxz
movsb
mov
adc
pushf
loop
mov
xchg
clc
add
jae
pop
or
fdiv
je
stos
dec
popf
jle
and
push
xor
sub
jbe
scas
jo
xchg
sti
mov
stos
mov
xchg
adc
inc
movsb
nop
sub
imul
std
push
stos
cli
adcb
or
or
lret
push
push
and
add
lods
je
iret
lahf
cmp
mov
mov
aam
adc
sbb
pop
xor
push
inc
cmp
outsb
andl
mov
call
sub
add
pushf
test
pop
push
push
sbb
stos
sub
mov
jecxz
outsb
push
or
mov
shlb
fildl
adc
test
in
dec
loopne
mov
setns
lcall
lods
test
xor
push
mov
lea
inc
pop
mov
add
sarb
pop
stos
shlb
rol
push
sbb
dec
dec
out
pop
jmp
adc
mov
cmp
mov
es
test
add
mov
xchg
mov
fimull
ret
addl
es
ss
ss
cmpsl
push
inc
rclb
clc
push
imul
faddl
add
rcl
mov
cmp
adc
mov
or
add
iret
push
cmp
adc
inc
dec
fcoml
mov
shlb
mov
es
xchg
xchg
movsl
aam
jne
mov
cmpsl
pop
ss
lds
idivl
pop
adc
push
shlb
push
or
jmp
mov
sbb
lock
mov
ds
add
call
or
lret
cmpsb
add
aam
shll
adcb
sbb
pop
mov
or
mov
add
fiadds
and
xchg
lcall
arpl
ss
and
adc
add
adc
jmp
jmp
test
dec
les
int
out
sbbl
cmp
call
add
imul
inc
push
mov
mov
push
fildl
loopne
or
rorl
call
mov
aam
lcall
xchg
jecxz
cld
mov
push
add
enter
stc
ret
mov
shrb
or
sbb
push
mov
cmp
pminub
or
pop
aaa
or
inc
int3
sub
pop
imulb
sub
je
dec
test
imul
rorb
jle
mov
cld
push
incb
add
cmp
inc
pop
dec
mov
push
jbe
add
test
push
pop
or
fmuls
xor
inc
xor
push
sti
xchg
insb
mov
data16
or
add
sub
jg
jno
xor
pop
fs
sbb
cmp
adc
add
pop
mov
aaa
je
sbb
je
or
push
or
sbb
inc
jmp
jl
xor
test
xchg
call
push
push
and
push
adc
or
clc
mov
sbb
stos
mov
int3
cmp
ret
mov
or
fildll
pop
mov
subl
scas
push
ljmp
lock
push
fldln2
fisubl
loop
pushf
push
dec
pop
add
call
cli
in
and
nop
mov
mov
mov
mov
add
mov
cmp
sub
js
jb
pusha
add
mov
rol
mov
dec
lahf
xor
jnp
inc
js
in
dec
or
cmp
shll
dec
mov
sbb
repz
ficomps
sti
add
loopne
pop
mov
cmpl
and
mov
xlat
sbb
cs
xchg
ds
pop
or
dec
in
sbbb
jmp
icebp
xchg
or
xchg
mov
adc
aaa
cli
pop
pop
enter
and
xor
add
les
pusha
mov
into
dec
cli
repz
push
inc
jle
lcall
je
dec
fisttpll
or
fcompl
orb
dec
int3
add
dec
pop
dec
cli
adcb
or
jns
or
mov
push
pop
les
mov
mov
inc
rorl
pop
subb
call
gs
and
jle
xchg
ret
and
call
sarb
dec
ret
ljmp
jg
sub
jne
mov
mov
and
mov
push
and
pop
sub
in
fs
pop
je
ss
fmull
pop
subb
add
mov
inc
cmp
pop
xchg
xchg
repz
sub
push
sbb
lea
outsl
in
bound
incb
push
lret
imull
loope
jo
push
sbb
std
push
push
xchg
sahf
fadds
je
hlt
or
adc
out
pushf
loopne
xchg
and
mov
mov
lods
test
dec
dec
call
sub
cltd
out
xor
stos
subb
add
cmpl
and
testb
dec
in
rcrb
inc
add
or
add
push
mov
addl
dec
pop
add
jo
jo
add
orb
pop
add
push
sub
fcompl
stos
dec
aaa
rcl
gs
ret
fsubrs
dec
std
inc
inc
dec
jle
jl
pop
ljmp
add
jne
pop
or
cmp
enter
inc
pop
push
jmp
xchg
test
push
mov
and
mov
jmp
cld
push
pop
dec
aas
dec
das
push
popf
mov
pop
adc
mov
outsl
mov
cmp
mov
addl
xchg
push
dec
cli
xchg
xchg
push
fistpl
jecxz
inc
or
lods
pop
testl
clc
sub
jb
inc
and
sar
pop
ret
dec
test
data16
and
push
xchg
and
stos
ret
shrl
imul
mov
xchg
xchg
sub
rclb
pop
or
mov
in
cwtl
xor
mov
pushf
jo
push
add
or
mov
mov
xchg
inc
pop
jmp
sbb
in
add
stos
or
pop
loopne
add
sarb
inc
mov
enter
call
pop
fs
orb
inc
pop
ret
pusha
mov
inc
mov
jecxz
add
add
lea
js
dec
pop
jmp
mov
popa
popa
xor
shlb
push
test
pop
mov
dec
cmp
imul
insb
pop
sub
lret
xor
add
xchg
dec
ret
xor
and
pop
les
cmp
subl
sbb
out
push
in
andl
enter
xor
shrb
push
add
data16
mov
sbb
and
sahf
popa
pop
jne
cmp
sub
inc
or
mov
ret
test
add
in
ljmp
xchg
inc
mov
mov
mov
lcall
cltd
ret
test
push
add
pop
decb
push
filds
stc
cmpsb
add
movl
outsb
cmpsb
mov
out
mov
mov
adc
push
sbb
gs
xor
sahf
lea
lock
incl
test
outsl
sbb
adcb
addr16
push
and
rorb
mov
aas
insl
repz
and
inc
dec
cli
notb
mov
pushf
pop
stos
fnstcw
add
cld
ljmp
testb
jl
data16
syscall
mov
pushl
lcall
sahf
mov
lds
imul
stos
push
inc
test
clc
pop
fs
ja
das
dec
or
sub
lock
push
icebp
xchg
jle
sbb
jg
xor
pop
inc
test
cli
inc
orb
sarb
push
add
pop
dec
arpl
nop
sub
loopne
push
mov
jo
mov
add
mov
inc
frstor
jecxz
xchg
adc
enter
imul
jl
pushf
mov
add
mov
mov
ds
mov
push
mov
or
xadd
cld
mov
jae
lcall
xor
fdivs
add
mov
inc
test
cli
je
ret
lds
add
push
pop
mov
data16
jo
je
mov
test
and
insb
mov
imull
push
and
sahf
push
mov
pop
sbb
jne
clc
aas
aam
and
pop
cld
mov
inc
inc
xchg
xchg
or
mov
adc
mov
jae
cmpsb
jle
loopne
icebp
mov
es
mov
or
bound
mov
or
cld
push
pop
sub
adc
sub
jmp
add
outsl
cmp
and
test
add
pop
mulb
in
pop
test
push
mov
cmp
les
das
xor
lea
dec
mov
pop
push
push
clc
push
and
unpcklps
shl
dec
stc
js
shll
cmpsl
and
ss
je
clc
adc
mov
fwait
insb
add
push
mov
mov
mov
insb
or
lea
inc
and
sub
add
popa
outsl
cmp
outsl
xchg
push
rolb
mov
jp
lods
pop
inc
in
or
movsl
mov
xorb
and
loope
aad
fldt
mov
aaa
dec
scas
dec
lods
sub
fisubrs
push
mov
nop
jne
jbe
inc
and
decl
ret
sti
je
hlt
loopne
mov
pop
fisubs
stc
cs
test
call
and
mov
lea
add
cmp
adc
mov
test
mov
shrb
out
fldl2e
push
lock
call
clc
outsl
mov
inc
pop
dec
std
arpl
xor
push
aam
pusha
mov
sbb
cmp
pop
outsb
rolb
sbb
inc
cld
cwtl
pop
aad
rcrb
in
cmp
ret
cmpb
clc
filds
mov
cmp
and
aaa
push
dec
lret
mov
iret
out
andb
dec
cld
pusha
js
out
inc
fwait
sbb
ret
andb
xor
add
bound
cmpb
sahf
data16
add
push
xchg
in
out
jp
and
fs
sti
mov
mov
ja
fsubs
sete
mov
lcall
out
inc
movl
iret
fiadds
pusha
divb
insb
pop
popl
push
stos
push
add
xor
cld
and
decl
je
decl
imul
hlt
add
fcoms
adc
fistps
int3
lock
and
dec
or
push
pop
or
aad
push
repnz
jle
and
add
jb
add
nop
mov
pop
lock
stos
pop
push
ret
enter
add
fnstenv
adc
rsqrtps
adc
push
push
push
pop
adc
dec
inc
and
ds
inc
cmp
sub
adc
fcomps
fidivs
cmp
test
cwtl
mov
into
or
push
pop
rolb
push
pop
test
lods
ja
cli
out
adc
lret
adc
push
jle
push
cmp
push
movsb
push
add
shlb
cld
push
aaa
push
orb
paddd
push
add
xlat
lds
push
je
jno
incb
xchg
aaa
pop
mov
fnsave
into
adc
jb
sarl
psadbw
push
mov
xor
std
add
adc
jne
push
push
test
les
loopne
fdivs
in
fdivs
or
shrb
xchg
push
es
push
insb
mov
xchg
sbb
and
andl
addl
std
pop
cs
into
ret
pop
adc
shlb
test
pop
pop
cld
pop
dec
xchg
inc
out
cmc
sub
fistpl
mov
je
pop
mov
jl
adc
add
subb
mov
add
add
xchg
rcl
mov
aam
pop
jle
or
xor
mov
mov
mov
fidivl
gs
je
xor
jge
je
dec
mov
ds
pushw
jl
cmp
inc
xor
add
outsb
stos
js
dec
insl
test
clc
movsb
pop
lock
jg
push
loopne
mov
test
mov
jne
xor
cltd
push
lea
jp
xchg
cli
push
push
or
clc
sahf
clc
loop
movsb
aaa
push
ss
popf
cmp
je
cmp
mov
adc
add
jge
mov
aam
cld
rolb
or
pusha
push
loope
sub
rolb
test
or
adc
mov
pop
mov
inc
inc
jo
into
movzwl
adc
mov
lods
popa
jmp
mov
jmp
in
cwtl
mov
adc
push
andb
mov
inc
je
cmp
divb
mov
push
inc
or
sar
fisttps
xor
jl
adc
xchg
or
test
pop
orb
bound
cmp
push
and
xchg
jmp
popa
mov
xorl
cld
lret
sub
call
outsb
pop
xchg
and
test
xor
dec
in
subl
pop
add
in
cmp
in
ret
inc
sti
adc
fs
fistpll
adc
sti
ret
leave
rcrb
xor
movsl
pop
nop
inc
or
adc
mov
repnz
std
xor
mov
inc
mov
subl
xchg
xchg
ja
sbb
add
enter
das
cld
aaa
mov
and
xor
rolb
pop
mov
mov
sbb
jmp
jno
push
fwait
std
xor
jbe
into
fwait
pop
mov
push
adc
jg
enter
and
mov
mov
sbb
inc
push
int3
and
mov
push
push
popa
movsb
xchg
neg
push
outsl
push
cli
dec
adc
cmp
xchg
sbb
pusha
ljmp
fsubl
jb
adc
notb
pop
sbb
pop
adc
movd
cs
jl
add
inc
push
mov
ljmp
subb
mov
inc
dec
dec
mov
pop
push
or
int3
mov
in
ret
ret
pusha
shr
fsubrs
pop
repnz
fisttps
test
mov
sub
ret
ret
scas
dec
push
lea
shrb
test
das
xor
or
inc
adc
call
call
mov
frstor
push
fwait
mov
mov
movsb
ret
rcr
mov
dec
loop
andnpd
into
shrb
adc
ret
cwtl
jbe
daa
add
clc
dec
adc
gs
adc
sub
dec
rolb
roll
pop
shl
orl
push
mov
mov
push
inc
pop
pop
add
pop
pusha
sbb
pop
clc
les
clc
fwait
and
mov
std
outsb
dec
and
or
sbbb
ror
mov
popa
xlat
test
adc
stc
jb
or
mov
loopne
ret
data16
outsb
inc
or
pop
lret
in
ret
pop
clc
out
mov
test
mov
pusha
push
xchg
iret
test
bound
xor
repnz
or
fsubrs
jmp
jg
add
dec
mov
incb
mov
mov
push
push
inc
aaa
pop
lea
push
call
cmpb
lcall
sub
rolb
pop
xor
fisttpl
stos
gs
push
mov
jmp
sub
dec
arpl
stos
adc
pushf
lods
mov
movsb
inc
cmp
or
lcall
mov
movsl
cmp
aam
pop
frstor
sbb
sbb
test
insb
push
jp
nop
add
hlt
outsb
enter
inc
test
data16
push
push
inc
adc
xor
ljmp
sarb
nop
mov
and
dec
adc
aaa
test
imul
adc
sbbl
mulb
decl
add
cmpsl
cmc
fldl
add
add
loope
push
data16
icebp
xchg
mov
push
ds
pop
add
in
xor
mov
mov
pusha
push
dec
add
push
and
sub
inc
outsb
into
adc
cld
clc
or
push
cmpsl
or
shr
pop
das
shr
pusha
test
or
fmuls
hlt
dec
xchg
adc
call
fistpl
cld
imul
and
pop
xorl
xor
push
push
loopne
mov
adc
push
sbb
and
cwtl
test
sbb
jl
push
int3
cs
inc
mov
arpl
and
sbb
dec
les
xor
and
cmp
xor
sbb
or
add
and
clc
push
inc
cmp
je
aam
cmp
dec
inc
test
icebp
inc
sub
push
or
mov
sbb
mov
xchg
jl
mov
fistpll
in
mov
sub
sub
inc
in
decl
fs
xor
inc
out
xor
lret
push
sar
mov
gs
xor
fnstsw
mov
iret
push
stos
pop
aad
add
fwait
add
test
scas
mov
pop
lea
sbb
push
add
data16
pop
add
mov
div
or
and
aaa
sti
lcall
fcoms
lcall
cmp
add
add
inc
cld
jae
int3
sub
mov
addr16
push
xchg
add
int3
sub
mov
fnstsw
fcomip
outsb
loop
cmp
and
fs
cmp
cld
inc
push
add
lock
cmp
sub
xlat
ss
ja
dec
push
int3
mov
mov
mov
adc
loopne
dec
sbb
std
jp
adc
inc
pop
sbb
inc
inc
dec
add
fstl
jmp
in
xor
cmp
push
pop
cld
pop
ret
mov
cmp
mov
dec
adc
xchg
int3
mov
add
jle
mov
inc
mov
rcr
and
or
mov
push
clc
and
lea
mov
mov
loopne
loopne
loope
cli
mov
dec
add
ljmp
inc
cmpsb
std
fs
inc
arpl
pop
fcmovb
dec
mov
clc
push
inc
mov
or
fcoml
xor
jge
adcb
xor
int3
mov
xchg
fs
push
pop
mov
scas
lods
roll
outsb
out
mov
fimull
subl
sti
stos
lret
inc
into
subl
jae
sub
fs
in
xor
insb
stos
dec
push
jge
bound
cmp
xchg
xchg
xchg
sbb
fiaddl
mov
mov
scas
cmp
and
sub
or
fidivl
adc
add
and
push
cmp
dec
cld
loopne
cli
nop
xchg
lock
and
cmpl
adc
push
mov
mov
xor
and
sbb
incl
add
mov
or
cltd
xor
and
add
adc
pusha
mov
nop
in
std
or
mov
shrl
mov
adc
div
push
fadds
cld
ret
xor
sub
in
sbb
rcrl
dec
lods
lods
dec
add
pop
loopne
cmpsb
dec
push
inc
xchg
dec
jb
cwtl
inc
insb
push
int3
dec
test
mov
sbb
adc
sbb
lcall
mov
ja
int3
es
xor
push
mov
mov
or
push
mov
loopne
sbb
cmp
mov
xor
mov
test
pop
mov
or
sub
or
pop
xchg
lock
roll
decl
adc
or
cwtl
or
add
divps
push
add
das
push
ss
in
add
add
xchg
push
or
scas
push
aaa
inc
cmp
pop
int3
jp
cmp
jge
loop
sbb
inc
pop
in
add
push
or
icebp
dec
xor
rol
add
push
xor
pop
out
xor
cmpb
aad
adc
adc
mov
loopne
fs
inc
int3
jl
pushf
inc
push
sub
pop
dec
fdiv
ret
bound
mov
add
in
mov
jno
inc
mov
enter
or
pop
cmp
mov
sbb
mov
sarl
inc
push
mov
je
jle,pt
add
add
icebp
loope
rorb
adc
xchg
or
and
push
outsb
push
data16
pop
sub
push
push
inc
jmp
mov
ret
into
push
pop
testb
data16
scas
pop
pop
inc
pop
popa
ds
loope
xor
cld
add
negb
icebp
testb
jl
cmp
push
adc
push
add
insb
xor
lock
fcoms
add
fs
mov
daa
and
rolb
adc
add
or
jne
and
mov
or
push
mov
or
shl
scas
push
inc
cmp
push
jns
or
add
je
or
call
shlb
and
rorl
xorl
fists
adc
mov
mov
sti
lea
dec
sbbl
cmp
xchg
push
fnstcw
jl
xchg
ret
jmp
mov
push
sbb
mov
aaa
loopne
push
adc
and
je
lahf
mov
push
orb
jle
loopne
mov
pop
nop
outsb
in
lods
push
sub
cmp
adc
adc
dec
xchg
shl
inc
and
in
fstpl
loop
cmp
jbe
je
movsl
jg
inc
fimuls
in
sahf
pop
out
jmp
ficompl
cmp
sub
loopne
inc
jecxz
or
push
inc
js
inc
arpl
lret
mov
testl
stos
cli
sub
sub
xchg
adc
outsb
ljmp
adc
lods
add
hlt
les
mov
push
inc
dec
stos
or
scas
push
adc
pop
cmpsb
loopne
add
mov
movsb
fsubs
loopne
mov
fisubrs
adc
lret
pop
cltd
rorb
in
setbe
push
lea
adc
cmp
push
insb
mov
jno
add
push
ret
es
dec
adc
add
xor
adc
mov
mov
decl
pop
jmp
push
ficomps
push
push
clc
add
pop
lcall
test
xchg
mov
aam
jge
addl
push
mov
decl
loopne
xchg
mov
sar
mov
sub
cld
cmpsb
loopne
std
xchg
cld
imul
dec
mov
mov
adc
mov
pop
push
ret
adc
push
mov
loope
add
rorl
fbld
loop
xchg
and
sub
mov
push
into
subb
push
jl
hlt
xchg
dec
in
push
pushf
fs
mov
pop
fmull
cmp
jmp
ja
popa
jle
clc
dec
stos
push
adc
add
xchg
push
xor
sub
decl
mov
stos
shrl
mov
js
push
lods
test
aam
decb
fadds
roll
xlat
aas
pushf
paddsb
inc
fcom
pop
imul
inc
jp
push
test
push
mov
cmp
and
pop
je
jo
test
test
dec
xorb
fsubrl
adc
push
xchg
mov
dec
clc
je
shrl
add
icebp
call
in
mov
nop
lcall
call
lock
jle
or
adc
cmpsb
ret
mov
inc
lea
shlb
call
sub
inc
call
add
je
mov
popa
sub
push
pop
inc
mov
inc
mov
dec
ficompl
nop
jl
je
lret
inc
add
pop
inc
hlt
jle
mov
inc
inc
ret
clc
and
ljmp
lock
dec
push
mov
and
xchg
les
mov
or
inc
inc
pop
clc
mov
sub
xorb
call
adc
pop
clc
or
inc
add
dec
icebp
mov
xchg
or
cmpsb
add
fidivl
mov
mov
add
cmpl
outsb
loop
pop
inc
jl
dec
ret
mov
testb
cld
roll
xor
pop
xlat
add
push
adcl
cmp
mov
ss
and
xchg
jl
incl
int3
add
outsb
add
sahf
push
add
stos
lock
and
mov
mov
std
inc
push
fcomps
in
adc
inc
or
inc
adc
call
jge
sub
mov
push
ljmp
adc
add
sti
les
mov
in
std
add
dec
push
sub
cli
sub
call
and
mov
cs
mov
and
dec
loope
adc
lods
out
insb
pop
adc
clc
or
mov
push
pushw
cmp
jg
inc
sub
mov
into
dec
clc
sub
sub
pop
inc
cld
ds
pop
rcr
add
xor
lret
movsb
in
rorl
xor
pusha
push
mov
fdivrl
pop
inc
push
pushf
xor
rclb
and
pop
in
dec
jle
call
jmp
pop
xchg
mov
js
mov
test
pop
push
je
dec
xchg
pminub
dec
sub
dec
imul
cs
xor
outsl
inc
orb
cld
mov
inc
outsb
jne
cld
insb
mov
cmp
mov
jns
rorl
insl
mov
jmp
sbb
add
push
sub
push
rolb
push
xor
sub
jo
xchg
xor
es
insl
insb
xchg
dec
or
inc
decl
and
and
dec
jecxz
shl
lret
in
pop
sub
cmp
mov
cmp
dec
and
loop
push
and
inc
lods
dec
loope
lock
gs
dec
mov
cmp
out
cmp
es
mov
push
clc
cmp
jle,pt
dec
add
sub
cli
add
jne
movb
add
inc
sbb
lcall
lea
int3
sahf
inc
xor
push
mov
push
cmp
call
lock
push
push
xchg
loopne
repnz
loopne
jno
hlt
stos
adc
mov
add
fisubrs
add
add
add
aas
mov
adcb
or
add
sub
push
sub
push
push
jp
mov
cmp
adc
pusha
add
es
xor
repnz
add
jg
leave
mov
jle
shrb
inc
aas
incl
shlb
push
std
or
or
dec
adc
push
mov
out
push
nop
icebp
call
sub
sarb
loope
lds
mov
daa
inc
outsl
enter
sub
push
sub
mov
movsb
jmp
ret
pop
jo
lret
mov
sbb
or
das
inc
lds
sbb
sahf
iret
lock
sbb
or
pop
pop
jp
mov
or
xchg
hlt
mov
call
dec
dec
in
mov
pop
test
fnstcw
push
cs
loopne
mov
pusha
mov
inc
pop
cmp
sbbb
xchg
subb
or
cmpsb
lahf
adc
xchg
mov
dec
jmp
call
sbb
xchg
ret
mov
out
adc
jo
shl
rorl
shll
add
push
dec
adc
dec
mov
jmp
dec
add
test
es
pop
pop
ss
push
pop
pop
out
in
mov
push
int
mov
int
fiadds
pop
jbe
mov
or
add
cmp
test
lock
pop
mov
shl
pop
or
popf
adc
adc
jmp
and
push
jle
and
push
inc
test
cwtl
rolb
pop
add
push
lret
stos
sub
add
out
ljmp
or
dec
ljmp
leave
push
adc
hlt
mov
outsl
cmpb
loopne
xor
push
add
ljmp
fcomps
rcll
or
pop
pop
sub
jns
or
out
dec
lret
scas
dec
ret
decl
xor
lea
pop
mov
insb
out
gs
pop
leave
or
lea
pop
cmp
test
mov
push
test
in
sub
or
cwtl
insb
call
or
mov
mov
jne
sbb
shlb
mov
roll
inc
xchg
imul
xchg
jbe
jle
cmc
mov
push
adc
repz
ss
sbb
sub
sbb
das
inc
adc
decl
imul
testb
sbb
dec
clc
or
push
adc
nop
inc
stc
add
fimull
fistps
jle
loopne
add
pusha
mov
push
and
cli
push
push
and
mov
sub
test
faddp
mov
stos
xor
rcl
cmpsb
or
add
lods
jmp
es
or
jo
adc
jle
mov
mov
addb
push
cmp
mov
mov
loopne
pop
jnp
jbe
ss
inc
test
es
nop
ja
out
int3
jo
xor
mov
aam
incl
inc
lock
mov
lea
push
adc
mov
imul
add
in
stos
adc
test
inc
ds
sbb
je
pop
cwtl
insb
je
sbb
aaa
movsb
jle
jnp
ret
stos
mov
hlt
je
mov
lods
dec
mov
dec
add
shlb
xor
lods
and
jmp
push
lea
test
faddl
ss
mov
fimull
push
divb
mov
std
loopne
mov
orb
loop
movsl
jo
xchg
dec
out
in
pop
adc
jg
fsubs
decl
test
xchg
aam
xchg
cmp
inc
push
fidivrs
lock
xchg
jmp
jbe
outsb
jbe
pop
rol
mov
mov
add
pop
adc
and
mov
orb
lret
add
push
loop
jno
and
leave
ret
sbb
jb
mov
mov
cltd
and
pop
or
andb
cli
pop
and
in
jbe
adcl
jae
js
sub
and
je
xor
mov
enter
pop
out
fdivr
pop
jg
fs
pop
push
jge
sbb
aad
mov
jmp
mov
xor
sub
dec
inc
insb
lods
lds
cmp
sub
xchg
mov
add
enter
insl
adc
stos
ret
arpl
shr
and
sub
insb
ljmp
dec
sub
je
and
mov
fwait
mov
add
mov
cmp
fldl
mov
mov
sbb
mov
inc
cmp
push
push
lods
dec
loop
popf
out
cmp
push
hlt
daa
push
pop
or
ret
pop
sbb
xor
lcall
outsb
push
out
jl
test
mov
dec
mov
ss
sbb
stc
mov
lods
movsb
dec
push
lods
and
xchg
loope
mov
jl
inc
fnstsw
inc
outsl
cwtl
dec
or
test
push
into
cli
lea
dec
int
adc
es
push
push
fs
push
cmp
outsb
mov
push
jbe
dec
sahf
movsb
lret
popa
rol
pusha
jb
mov
std
jge
loope
push
repz
shll
outsb
movsl
add
dec
mov
notb
xchg
addl
mov
push
jo
xchg
addl
pop
faddp
shlb
test
mov
movsb
and
lea
testb
pop
pop
and
push
and
lahf
incb
mov
test
popa
inc
adc
xorb
and
add
push
jnp
sti
fadds
das
mov
add
ror
cmp
adc
mov
dec
pop
dec
pop
jecxz
cmp
mov
fs
adcb
push
add
cmp
mov
fs
xchg
mov
xor
or
and
push
lods
clc
pushf
incl
movsl
adc
xchg
cld
in
inc
add
sar
jae
aam
or
mov
xor
je
xor
push
inc
inc
pop
adc
outsl
in
aas
ret
or
jmp
aas
pusha
or
out
push
imul
test
loopne
imul
xchg
ljmp
pushf
adc
popf
ds
rclb
or
or
fmuls
clc
cmp
pop
cmp
stos
notb
adc
xchg
push
and
clc
add
and
push
ss
push
jle
loopne
jecxz
xchg
mov
lret
cmp
ficoml
push
push
dec
xchg
movsb
xchg
add
sbb
movsb
xor
mov
add
fsubs
push
mov
push
mov
pushf
jmp
xchg
push
xchg
mov
mov
add
dec
sub
adc
push
je
cltd
repnz
mov
xor
stos
dec
call
call
or
add
push
ret
in
mov
lcall
sbb
add
call
movsl
pop
mov
cmc
imul
adc
mov
cld
stc
jmp
outsb
fsubp
xchg
and
add
imul
call
in
pushl
std
adc
rclb
idiv
shlb
pop
mov
inc
push
lea
stos
add
outsl
pop
lods
pop
mov
sbb
cmp
lcall
cld
lock
pushf
mov
test
cmp
cmp
pop
pop
cld
out
xor
cmp
mov
xor
jmp
mov
mov
popa
fucomp
mov
das
push
orl
add
test
push
sbb
mov
push
andb
sbb
cld
data16
imul
stos
mov
je
addb
inc
pop
push
lea
sbbb
call
and
cwtl
jmp
lock
and
xchg
and
insl
pusha
cmp
adc
lahf
sbb
jp
sarb
jle
mov
testb
int
inc
sub
ficoml
fbld
sbb
lcall
ss
roll
mov
jmp
xchg
enter
or
and
mov
adc
pop
loope
orb
mov
incb
test
and
adc
cld
lock
push
sub
cli
adc
aas
mov
mov
and
imul
out
icebp
std
call
and
es
test
adc
mov
adcb
icebp
fucomip
insb
les
mov
testb
cltd
clc
adc
jae
repnz
jmp
or
mov
andl
arpl
mov
call
mov
xchg
and
sub
dec
call
mov
mov
inc
xchg
pop
push
decl
dec
ret
xor
xchg
and
mov
test
icebp
in
rcll
or
mov
test
movsb
movsl
mov
push
xor
or
lcall
dec
je
dec
cmp
cli
insb
mov
loop
pop
mov
and
imul
lcall
add
popl
jae
cmp
lock
push
add
mov
test
jge
je
outsb
or
push
mov
add
pop
push
push
mov
fists
push
pop
outsb
je
cli
and
je
dec
add
gs
ja
dec
faddp
out
imul
and
movsb
out
push
sub
loopne
shlb
inc
and
popf
mov
push
sti
adc
dec
adc
adc
push
je
inc
or
jle
jge
jno
in
push
add
add
lea
ja
idivl
inc
push
mov
es
mov
int3
and
mov
lea
insb
cmpl
divb
sbb
call
dec
shrb
and
enter
lods
mov
in
imul
xchg
arpl
adc
mov
fwait
mov
faddl
dec
cltd
std
xor
push
adc
fcoms
pop
dec
cs
xorb
cmp
push
dec
pop
cmp
push
adcb
adc
mov
jmp
decl
in
and
pop
fsubrp
pushf
lcall
clc
call
push
stos
ficompl
jge
cmpps
inc
test
loopne
sahf
push
dec
ja
ret
push
nop
mov
push
test
popf
adc
inc
out
sbb
stos
pop
xchg
mov
dec
rol
arpl
sub
cmp
pop
ljmp
and
ret
ror
shrb
jg
dec
rolb
cmp
xor
and
mov
jmp
cli
mov
std
push
inc
mov
adcl
push
aaa
in
cmc
mov
push
mov
inc
or
mov
add
mov
cs
cmp
add
add
pop
inc
or
fsubrl
jecxz
test
jecxz
aam
xchg
adc
into
mov
inc
dec
sbb
in
movsl
and
or
push
mov
jmp
loop
sbb
mov
ret
rcrb
xchg
js
bound
cli
mov
mov
mov
adc
jmp
mov
mov
push
jo
fdivrl
addb
es
inc
xchg
loop
fimuls
adc
or
pusha
cmp
test
scas
push
pop
mov
cmp
cmp
ljmp
int3
aam
clc
push
fsubl
add
adc
cwtl
ret
ljmp
mov
and
or
fadds
sub
inc
stos
xor
sbb
and
fidivrs
call
popa
imul
rorb
insb
int3
enter
out
pop
dec
inc
jb
push
or
mov
push
outsl
mov
sub
nop
fadd
cmp
outsb
push
cmp
movsl
aam
mov
inc
sub
jp
push
and
and
je,pt
inc
xchg
lock
fldenv
xorl
into
mov
js
enter
dec
rol
shrl
mov
js
add
pop
in
jp
call
popa
cld
xor
ret
mov
add
pop
xor
mov
xchg
test
out
test
inc
jle
mov
jne
add
enter
idivb
xlat
lock
fcomip
cmc
dec
ds
clc
test
mov
or
fwait
sbb
call
sti
inc
pop
adc
mov
cmp
repz
xchg
lods
mov
jge
out
dec
push
and
mov
scas
int3
outsb
jo
clc
adc
sub
push
pusha
jo
test
out
xor
ret
addr16
inc
pop
jns
mov
jne
dec
aas
inc
aas
out
imul
sub
or
xor
movsb
or
push
ljmp
add
add
cli
stos
inc
das
add
push
icebp
cltd
call
sub
and
mov
and
popa
fsubl
jno
lods
push
cwtl
insb
pop
add
ret
shll
stos
outsl
jmp
adc
in
loopne
xor
orb
sarb
fld
adc
sub
sti
jge
lea
or
loop
sub
lret
push
mov
push
jp
into
lock
cld
add
adc
jmp
jle
loop
xchg
mov
dec
mov
push
je
add
out
fidivrl
clc
je
loope
add
inc
xor
add
fsubl
inc
mov
inc
push
xchg
sub
inc
xlat
pop
mov
or
ljmp
ficoms
push
ret
sbb
xor
or
pop
push
jmp
call
push
adc
pop
xor
daa
mov
sub
mov
or
lret
push
or
lods
call
clc
pop
lods
inc
rcr
shrb
mov
xchg
cmc
das
mov
pop
int3
sub
sub
in
andb
xor
call
mov
mov
push
lods
loop
inc
cmp
xchg
addl
inc
sti
and
jne
pop
shr
sbb
enter
dec
push
mov
js
push
adc
std
push
sbb
call
push
add
cmp
pop
xor
push
call
and
dec
adc
push
rcrl
outsb
push
or
pusha
add
je
ja
cmp
or
loope
dec
rcr
pushf
add
and
mov
test
cld
mov
push
cmp
jp
inc
pop
inc
mov
push
nop
push
insl
push
ds
jb
xor
inc
inc
add
cli
enter
test
stos
inc
minps
jmp
cmc
and
inc
and
cmp
out
loopne
xor
scas
jo
pop
loope
rolb
addl
lds
mov
mov
cld
push
push
out
inc
mov
ret
nop
mov
pop
mov
xchg
push
or
mov
dec
mov
push
rclb
incl
sbb
xor
out
add
pushf
data16
sbb
hlt
mov
add
mov
mov
sbb
dec
jg
inc
mov
lock
push
mov
dec
test
add
mov
push
in
inc
add
test
dec
mov
loop
cwtl
cmp
add
sub
pusha
insb
push
push
inc
mov
pop
xchg
test
loopne
inc
mov
rcll
movsb
sbb
push
shll
jmp
inc
cmp
test
rolb
and
sbb
insb
ficomps
stos
xor
into
push
gs
dec
cmp
jnp
inc
pop
adc
les
add
and
or
jg
and
shlb
shlb
mov
int3
inc
jg
das
add
xor
or
xor
xor
cmc
stos
jae
mov
dec
loopne
lret
pop
in
shll
fs
das
or
inc
lock
movsb
out
mov
clc
cmp
mov
push
loop
inc
shll
mov
jb
pop
sbb
lret
js
stos
mov
arpl
cmpb
repnz
mov
xor
xchg
inc
inc
mov
xor
lcall
xchg
xor
xor
or
or
fsubr
cmp
je
test
lock
int3
jmp
aaa
mov
or
jb
in
aam
add
es
sub
out
jecxz
lock
sbb
add
jno
aad
ja
adc
pop
jnp
adc
cmpsl
sub
mov
inc
cmpsb
gs
adc
loopne
and
outsl
pop
loop
add
jns
jge
push
push
call
rcl
push
add
xor
adc
mov
adc
cmp
sbb
add
mov
inc
pop
cld
pop
pop
jle
test
inc
pop
mov
xor
faddl
call
jl
dec
rorb
inc
aas
mov
negl
push
decl
push
or
sbb
inc
inc
hlt
push
in
sbb
into
aaa
dec
call
insb
je
fidivrl
jl
or
and
dec
das
call
mov
shlb
cmp
lret
pop
add
je
mov
sub
orb
push
adc
decb
or
push
pusha
insb
into
jle
add
jp
hlt
sbb
ss
imul
and
jo
dec
loopne
pop
push
mov
mov
shrb
mov
fildl
xor
call
adcl
inc
stc
push
xchg
mov
orl
jg
pop
sbb
xchg
lock
jbe
push
inc
mov
insb
nop
mov
adc
mov
sbb
mov
mov
push
ljmp
mov
pusha
sub
push
fcompl
dec
push
or
std
mov
pop
repnz
push
or
add
inc
insb
jge
or
cltd
fisttpl
mov
rolb
and
insb
shlb
hlt
and
mov
ret
xchg
mov
pop
popa
mov
sbb
xchg
pop
mov
enter
push
sub
push
out
cmpsl
je
or
and
cli
jecxz
test
inc
xchg
imul
nop
cmp
fiaddl
std
in
mov
cltd
ror
dec
and
ret
mov
hlt
add
jbe
fcom
or
and
inc
fistpl
rcr
test
or
hlt
mov
cli
and
and
mov
dec
jmp
xabort
fadd
and
mov
pop
shrb
movsb
aaa
push
nop
mov
jmp
test
xor
mov
push
clc
add
in
jae
in
mov
mov
fdivs
cmp
repnz
shlb
ret
inc
leave
mov
decl
mov
gs
rolb
push
lea
lods
pop
cltd
scas
sbb
fwait
push
subb
dec
adc
sbb
adc
push
call
xor
or
mov
or
cmp
jg
lock
ja
push
mov
jne
push
hlt
sbb
add
inc
push
lods
shll
rolb
test
mov
push
data16
sub
jp,pn
lret
and
mov
push
cmp
nop
dec
add
movsb
mov
imul
fmull
add
ljmp
jb
pop
or
mov
dec
add
mov
call
add
cmpsb
mov
mov
mov
loopne
push
jecxz
xchg
add
push
add
inc
outsl
cmp
aaa
mov
jp
push
mov
and
sub
int3
loope,pn
cld
out
mov
push
rolb
xchg
adc
dec
fimuls
jbe
ret
in
xor
in
push
add
test
fsubs
testb
mov
and
ja
sbbb
jp
push
pop
lods
ret
in
push
mov
movsb
cmpsb
jl
xchg
add
clc
and
mov
pop
enter
je
push
into
adc
stos
jg
sti
nop
push
dec
add
add
pop
jle
add
data16
and
sbb
push
push
mov
ret
mov
push
test
xor
xor
pop
popf
adc
or
sub
add
ret
in
lock
mov
sub
lock
push
jo
push
or
jbe
cli
xor
rcrl
xchg
push
sbb
cmpsb
dec
jle
xchg
rcrb
jmp
fimuls
je
fs
orl
lock
lea
add
push
fcmovnb
push
inc
adc
hlt
cli
and
mov
fimull
ss
and
test
enter
push
cmp
into
dec
adc
sub
mov
sbb
adc
pop
nop
push
lret
add
push
addr16
mov
pusha
mov
cli
pop
notb
stos
hlt
jno
xor
mov
jb
push
movl
test
cmc
add
call
push
xchg
and
sub
sub
xchg
adcb
rclb
cwtl
pusha
std
pushl
mov
sbb
aam
add
test
dec
pop
sub
mov
adcb
into
rcll
fdivrs
rolb
push
mov
enter
push
jne
nop
sub
arpl
add
lret
jae
jg
fistl
sti
or
lar
mov
dec
test
adc
mov
sub
sub
aam
out
ret
or
imul
adc
out
xchg
maxps
mov
sbbl
shl
lds
dec
in
data16
mov
mov
push
push
cli
js
xchg
rol
push
into
mov
inc
sbb
fsubp
js
mov
adc
or
cld
call
sar
push
jns
or
pop
push
jmp
sbb
repnz
sbb
punpckldq
pop
jmp
lods
xchg
sbb
push
push
mov
add
shl
nop
push
loopne
push
mov
inc
adc
clc
pop
call
pop
nop
or
push
cmp
or
cwtl
pop
movsb
hlt
lahf
sbb
mov
xor
movsb
in
pop
loope
lock
cld
inc
push
imul
inc
subl
mov
leave
ss
add
jle
lcall
adc
les
imulb
xchg
ficomps
inc
xchg
mov
jecxz
fisttpll
inc
int3
imul
fdivs
add
adc
sti
pop
cld
push
out
xchg
mov
loope
pop
imul
xchg
loope
push
jle
dec
popa
inc
xor
mov
scas
and
pop
pop
inc
jge
shrb
push
inc
sbbb
jmp
push
or
cmc
add
clc
cld
lods
and
sar
les
sbb
sarb
test
sbb
call
jo
and
data16
and
inc
push
push
fisubl
mov
notb
add
test
imul
in
arpl
pusha
mov
inc
clc
pop
sub
lea
in
dec
ljmp
ds
and
jnp
xor
hlt
jmp
jb
incl
mov
les
push
sbb
sbbl
cmp
pop
aam
in
pop
dec
inc
mov
pop
cmp
push
or
sbb
iret
mov
or
push
or
push
push
push
cmpb
jecxz
ret
cmp
sbb
sahf
mov
out
sub
hlt
dec
push
dec
jne
push
or
out
sti
nop
push
xchg
sbb
jge
je
sahf
mov
xlat
ss
adc
outsb
and
dec
inc
or
mov
inc
imulb
std
call
dec
mov
lret
adc
loopne
push
loopne
add
inc
mov
lock
imul
jmp
addb
sub
or
mov
push
or
adc
je
or
sbb
jbe
iret
mov
sub
dec
sub
clc
mov
pusha
and
outsl
add
inc
jp
mov
or
in
inc
sub
cmpsb
add
es
clc
cmp
test
xorb
push
gs
sub
inc
in
or
adc
cltd
or
mov
sub
xchg
aam
or
rolb
sbb
push
jmp
and
fs
out
adc
cli
push
aam
mov
int3
repz
fidivrs
cltd
pop
xchg
sub
fadd
testb
mov
int3
push
aaa
inc
jg
fsubr
dec
inc
or
add
push
subl
xor
or
mov
inc
cmpsb
lea
mov
mov
cmp
jmp
jb
lea
push
sbb
je
int3
lcall
add
insl
adc
in
mov
xorl
sbb
or
xor
and
or
jmp
jge
lock
dec
sub
or
push
inc
or
jae
and
fisubrs
push
outsl
rol
jae
or
inc
clc
popf
xchg
add
out
push
lock
fs
ret
in
mov
add
mov
and
mov
or
inc
xor
push
leave
add
jbe
int3
xchg
mov
fadd
les
int3
push
pop
mov
sub
pop
int3
mov
mov
inc
add
data16
cmp
aaa
push
adc
imul
inc
in
pop
mov
inc
ljmp
nop
rcr
or
lcall
adc
cmp
add
movb
ret
and
adc
mov
sbb
cmp
mov
cmc
inc
push
mov
enter
out
test
clc
enter
cld
cs
add
inc
mov
push
arpl
jo
lock
test
cs
push
pop
jbe
jnp
push
mov
add
ret
push
mov
out
inc
push
mov
xor
mov
pop
cs
repnz
cwtl
loopne
jge
popa
pop
in
pop
cltd
adc
add
testb
pushl
mov
call
lret
les
es
jl
es
mov
aam
lret
or
rolb
fsub
decl
call
push
add
xchg
in
cmp
test
test
sbbb
and
add
clc
add
add
cmp
jecxz
shlb
adc
add
adcl
or
incb
mov
push
mov
or
and
je
pop
sbb
cmp
sub
xor
mov
pop
repnz
mov
dec
shrb
jle
and
fbld
call
mov
push
adc
xor
nop
jne,pt
scas
mov
js
lea
ds
jle
fs
push
and
add
add
cmp
push
and
dec
mov
pop
or
xchg
insl
cli
test
mov
scas
mov
dec
jle
xadd
lods
adc
out
sbb
xor
xor
mov
cmpsb
mov
inc
add
cwtl
adc
lret
push
pop
sbb
out
bound
adc
clc
ret
jbe
push
adc
les
insb
scas
shll
or
push
call
loop
lock
pop
xchg
or
test
popf
cmp
or
mov
pop
cltd
sbb
jp
test
mov
dec
sbb
mov
inc
aaa
or
or
add
loop
test
xor
jbe
test
sub
fcmovu
cmp
and
or
pusha
sbb
jl
sbb
loop
ret
js
sbb
invd
add
dec
push
int3
lcall
or
add
lock
cld
inc
aas
aam
inc
loopne
xchg
and
dec
fmuls
push
call
mov
mov
sub
arpl
inc
and
jp
jne
insb
cs
mov
dec
popa
xorl
xor
xchg
loopne
adc
mov
fs
dec
jp
lods
pusha
fbld
je
mov
scas
dec
es
inc
mulb
jmp
stos
dec
or
movsb
lods
incl
add
or
cmp
push
add
movsb
jno
cmp
mov
outsb
pop
cmp
adc
sub
push
xchg
inc
aas
push
adc
out
sahf
sbb
rolb
or
mov
sti
orl
push
cmpsb
push
call
push
gs
cmpsb
push
test
push
ds
push
mov
sbb
and
push
fsin
cmp
jge
ficoms
push
push
mov
cltd
push
inc
and
push
lret
icebp
cmpsl
fisubrs
add
cmp
dec
jb
push
add
sbb
arpl
push
jne
add
dec
or
stos
add
call
xchg
mov
mov
nop
or
and
add
inc
ror
adc
adc
test
in
sub
fiadds
scas
or
andl
sar
es
mov
fisubrs
rcr
dec
adc
mov
jge
push
loope
adc
or
xor
outsl
xor
js
mov
cmp
push
mov
push
sbb
push
mov
push
push
rcll
jg
jl
jge
repnz
orb
push
fwait
rolb
or
fwait
roll
clc
test
in
loop
fwait
cmp
jp
inc
popa
pop
mov
adc
je
lret
ja
lea
jbe
xchg
xor
fs
pop
inc
pop
je
pusha
dec
aas
add
dec
adc
sbb
mov
dec
push
dec
mov
fisubrl
push
pop
hlt
rcrb
mov
aas
shrl
loopne
call
fcomps
add
mov
and
push
or
adc
in
pop
mov
fwait
loopne
or
sbb
dec
dec
insb
inc
orb
xchg
and
out
decb
inc
lahf
imul
adc
push
test
add
loop
stos
popa
and
adc
repnz
int3
ljmp
hlt
mov
pop
dec
sbb
mov
push
mov
dec
mov
mov
dec
pushl
mov
mov
push
adc
pushf
call
and
mov
fwait
mov
xrelease
cwtl
dec
push
mov
gs
pushf
mov
into
call
xchg
pop
mov
cmp
mov
mov
add
inc
pushf
bound
sub
fcoms
add
lea
cltd
clc
xchg
inc
outsb
loopne
mov
push
rol
cmp
cmpsb
and
sbbl
xor
daa
mov
dec
or
repnz
dec
jp
loop
mov
push
mov
es
fsubrs
sahf
in
outsb
push
clc
xor
mov
push
xor
inc
push
mov
in
dec
dec
jg
ds
shll
jmp
lret
sbbb
sbb
add
cld
push
shl
outsl
sub
jo
mov
in
mov
xchg
push
in
add
je
sub
test
or
pop
cmp
je
inc
cld
outsl
jo
jge
inc
sub
orb
out
push
jne
xchg
scas
bound
mov
mov
pop
jle
adc
dec
cs
dec
add
jecxz
push
into
in
cmp
sti
ss
aaa
adc
orb
add
inc
adc
or
mov
jg
xor
fimuls
inc
mov
in
xchg
push
mov
adc
neg
mov
adc
sbb
bound
adc
fdivs
sbb
out
mov
in
mov
inc
adc
pinsrw
ret
and
imul
jns
mov
mov
pop
xchg
inc
shll
shlb
push
outsb
or
pusha
mov
imul
into
icebp
sub
cmp
mov
mov
clc
test
scas
jg
and
fistpl
cwtl
or
decl
xor
lock
xchg
pop
cmpb
mov
popf
icebp
fldt
decb
mov
in
test
mov
lcall
call
jne
jl
inc
or
pop
push
sub
test
jmp
add
call
inc
fmull
pop
add
mov
out
cli
cmpsl
dec
push
lock
jle
test
aad
or
xchg
psadbw
or
mov
rdpmc
notl
pop
sbbl
lods
adc
or
repnz
adc
es
scas
push
push
cmp
popa
je
adc
push
push
mov
lahf
aam
sbbb
push
xor
inc
mov
jp
andl
dec
mov
inc
cmp
insl
push
mov
hlt
pop
xor
xchg
mov
mov
push
xchg
push
inc
jmp
push
inc
sub
in
int
xor
dec
mov
pop
loopne
push
mov
pushf
cli
scas
call
xchg
test
pop
push
fcoml
or
lcall
sti
xor
outsb
rol
mov
dec
push
insb
fidivrl
pop
imul
inc
add
pop
orl
bound
jbe
sti
sbb
lods
mov
mov
cmp
inc
leave
dec
js
sub
or
hlt
es
pop
and
in
xor
xchg
lret
add
fstpl
lock
or
sarb
ja
push
push
adc
ja
test
data16
mov
cmp
pushf
sub
mov
loop
and
cmpb
add
add
mov
int
cmp
jg
sbb
sub
pop
shrb
cmp
and
shrb
push
mov
cli
dec
les
gs
outsb
add
mov
mov
adc
or
mov
mov
and
or
fisubrl
fiadds
push
dec
cld
push
testb
xchg
cld
insb
decl
pop
dec
push
sbb
add
add
setg
sbb
adc
inc
clc
dec
call
jp
movsl
sub
int3
sub
in
push
mov
jge
aas
push
sbb
xor
jle
mov
mov
adc
nop
call
test
fsubr
loopne
into
lods
cmc
jae
out
xor
pushl
loopne
addl
cwtl
pushf
push
or
aad
out
inc
inc
xorb
xor
xor
std
push
loop
xchg
cmp
icebp
jae
cmc
idiv
jnp
cmpl
xchg
adc
ret
jmp
lock
and
adc
shll
push
ds
pop
sbb
mov
repnz
je
dec
aaa
inc
cli
pop
insb
scas
lret
imul
push
jl
loopne
pop
sub
mov
jmp
incb
sub
addl
or
pop
inc
nop
mov
ja
xor
push
ss
jo
call
adcb
mov
push
cmp
adc
pop
bound
fwait
xor
in
xor
loopne
fimull
sbb
test
or
xchg
inc
mov
lea
mov
mov
jb
or
insl
shll
xchg
cmp
inc
js
push
or
add
push
or
cs
and
ja
sub
es
jmp
dec
dec
popa
mov
call
mov
jecxz
add
xorl
dec
dec
mov
js
fsubl
test
pop
xchg
pushf
lea
ljmp
pop
push
incb
gs
and
or
cmpsl
mov
push
push
add
mov
jmp
je
add
push
sbb
mov
push
outsb
jo
out
lock
jbe
in
or
data16
xchg
mov
jl
hlt
mov
loop
aam
clc
push
xor
jmp
shrb
je
mov
insb
sbb
repnz
jl
and
add
dec
xchg
inc
push
push
mov
and
jp
mov
lcall
jne
mov
mov
aam
push
loopne
xchg
test
add
dec
sahf
pop
mov
aas
ret
pop
push
inc
fcomp
push
jmp
xor
add
mov
out
cmp
lock
or
pop
push
sbb
orl
std
xchg
cmp
add
xlat
lds
out
inc
call
mov
cli
adc
mov
push
push
push
mov
mov
inc
inc
and
call
loope
mov
adc
pop
lcall
lock
mov
mov
insb
sbb
lods
ficoms
ljmp
adc
xor
aam
push
ljmp
test
add
arpl
movsl
cmp
cwtl
test
or
lock
test
call
sbbb
adc
fistps
mov
stos
fs
xchg
push
xchg
xchg
inc
pop
cwtl
jo
inc
sub
pop
adc
icebp
adc
or
int
jbe
ljmp
xchg
incl
push
jg
call
in
cld
inc
ret
gs
adc
adc
xor
and
cmp
loopne
test
call
xor
push
shl
sub
loop
outsb
adc
out
push
xchg
mov
inc
sbb
inc
stos
or
pop
clc
lock
mov
fidivrs
add
mov
hlt
das
xchg
loop
cwtl
push
jne
xor
pop
or
pop
mov
or
adcb
and
ljmp
std
adc
inc
shl
leave
pop
sub
scas
mov
int3
push
inc
xchg
add
les
adc
dec
ret
adc
inc
fisubs
sbb
inc
or
push
lcall
out
mov
decl
std
xor
push
aam
jbe
jmp
push
icebp
addr16
or
pop
shrb
jae
pop
push
inc
addb
push
pop
addb
inc
inc
pop
add
xchg
shlb
loope
cmpsb
fcompl
orb
int
mov
mov
mov
in
in
xor
mov
and
mov
pop
mov
data16
inc
dec
or
and
dec
sahf
mov
lret
push
inc
movsb
inc
xchg
mov
mov
aad
lcall
out
add
in
add
loopne
js
xor
out
int3
xor
xchg
hlt
call
dec
arpl
test
sti
jne
cld
jmp
movl
push
push
push
inc
dec
pusha
sbb
fcmovnu
dec
cld
sub
rorb
add
inc
aaa
xchg
lcall
pop
push
inc
sub
ljmp
jp
push
inc
pop
mov
or
and
dec
xor
bound
shl
dec
inc
or
scas
movsl
pop
decb
shrl
mov
in
sbbl
les
sub
or
adc
or
xchg
popa
popf
lcall
sbb
maxps
mov
cmp
shl
sti
sti
ret
rorb
push
and
ret
add
push
in
xor
push
mov
divb
cmp
pop
adc
pop
xor
jo
xchg
add
inc
dec
mov
push
lret
add
std
test
pop
insb
call
mov
jl
filds
fstpt
call
aam
mov
mov
stc
and
aam
add
fs
enter
cmc
lods
mov
dec
pop
jl
fmul
les
insb
push
or
movsb
mov
call
fcoml
xchg
int3
mov
ljmp
imul
pop
push
push
add
add
adc
and
jae
gs
in
add
adc
adc
or
loop
ds
insl
ljmp
movb
push
dec
push
jp
inc
jg
sbb
fmul
adc
cmpsl
and
data16
into
nop
outsb
movsl
jmp
rclb
inc
int3
add
test
cli
ss
in
xchg
pop
cmpsb
push
sbb
cmp
inc
or
fists
leave
sti
mov
jg
jne
mov
mov
sbb
lea
mov
sbb
push
jo
cmp
fsubrl
or
jge
call
xchg
mov
decl
mov
fs
in
icebp
push
aam
loop
add
aad
mov
pop
cmp
dec
loopne
repz
push
ret
mov
adc
fcoml
add
push
xchg
fiaddl
mov
sbb
push
jp
push
loope
sbb
dec
iret
lcall
lea
xor
or
bnd
pop
sbb
push
jl
inc
push
cld
pop
xor
push
addb
add
pop
or
sub
sub
in
push
sub
roll
gs
ss
xchg
clc
mov
xor
xor
subb
mov
loopne
ljmp
lods
ret
push
cmp
nop
mov
sarl
jge
shll
bound
ficoml
out
lods
xchg
rclb
add
popf
sbbb
data16
mov
test
lock
push
xchg
jno
mov
mov
lock
ja
loopne
adc
test
mov
je
hlt
and
lret
inc
fsubrp
je
addr16
sbb
pop
push
gs
cmp
sub
das
push
xor
push
cmpsl
inc
jne
jmp
and
and
test
leave
test
mov
jb
orl
push
test
or
add
rclb
fs
add
pop
test
add
push
fiadds
xorl
sub
adc
push
dec
orl
xchg
mov
lods
add
pop
mov
xor
nop
pop
adc
pop
cmpsl
test
push
stos
xor
into
sbb
sarb
pop
mov
dec
mov
cmp
adc
xor
jle
lret
mov
in
fdiv
jg
std
frstor
mov
add
test
sub
mov
or
int3
cwtl
mov
pop
add
or
push
push
addl
fmull
add
mov
mov
pop
sbb
loop
pop
data16
jmp
add
xchg
jo
sbb
xor
cli
push
iret
mov
inc
pop
rol
push
jle
fistpll
sbb
mov
lea
mov
ds
outsl
mov
enter
test
adc
mov
pop
pushf
mov
jmp
or
mov
adc
xor
inc
sbb
and
xchg
shrb
shr
icebp
cmp
add
idivl
sub
rorb
mov
repnz
gs
add
cmp
lods
add
jmp
ret
icebp
pop
push
sub
lods
mov
pop
cmp
or
outsl
mov
out
leave
push
or
ret
mov
cli
aad
push
or
test
inc
ds
bound
mov
cmp
add
scas
or
rorb
sub
add
inc
fdivrs
push
int3
pop
cwtl
lods
sahf
adc
push
sbb
pushl
or
adc
fsubrs
and
stos
stos
call
fucom
sub
pop
push
mov
and
call
mov
push
ds
inc
aad
push
rol
pop
lods
dec
movb
push
push
fidivrs
mov
jg
add
mov
popa
sarl
and
mov
adc
call
stos
cltd
inc
je
and
cli
clc
lock
mov
shlb
sub
outsb
and
xor
test
add
movsl
lods
or
inc
mov
mov
das
jmp
xor
mov
lret
mov
mov
jl
push
cltd
jo
rorb
data16
lea
enter
mov
idiv
das
push
or
sbb
data16
test
aam
lods
pop
mov
add
xor
mov
push
cmpsb
cli
fsubs
ljmp
aam
bsf
and
sub
and
insl
push
pop
inc
shll
rorb
jmp
sub
sbb
dec
or
int3
pop
fs
inc
lret
orl
sar
cmp
lea
subl
pop
test
js
add
adc
outsl
andl
dec
cli
outsb
mov
jae
in
out
test
push
pop
mov
insl
push
lcall
ds
inc
int3
ljmp
mov
pushf
push
push
call
ljmp
pop
in
les
insb
fs
push
pop
dec
ret
push
pop
rclb
xor
xor
orb
mov
mov
or
mov
sbb
xchg
cmove
jne
mov
stos
arpl
notb
gs
adc
ds
in
loop
call
adc
mov
push
push
xchg
ret
test
xor
clc
loopne
sarb
je
add
push
xchg
jne
sbb
nop
hlt
jb
stos
adc
inc
dec
cs
les
mov
rclb
cmp
addb
lea
call
sbb
push
movsl
mov
aas
push
fs
pop
pop
out
div
inc
push
push
adc
pop
push
jl
push
pushf
jo
or
adc
mov
dec
cmp
shrl
rcll
cli
push
and
cvtdq2ps
hlt
push
cmp
or
rorb
sbb
adc
lea
lods
movsl
movsb
push
jle
lods
push
xchg
jmp
in
in
nop
sbb
add
or
bnd
mov
push
out
popf
add
and
adc
sbb
jb
inc
sub
and
and
jbe
sub
call
push
leave
ljmp
push
push
call
xor
leave
mov
inc
or
or
pop
lods
test
mov
add
inc
mov
inc
popa
sbb
cs
mov
call
adc
or
dec
enter
addb
mov
jo
xor
inc
adcl
xchg
dec
push
cwtl
xor
jp
add
clc
cld
xor
mov
loopne
dec
push
int3
mov
xchg
xor
push
cld
and
jne
mov
mov
mov
adc
inc
std
les
jb
scas
rorb
cmpb
out
xchg
adcl
xor
inc
lea
dec
and
inc
lcall
ss
cmp
addr16
and
xchg
push
cmp
pop
gs
jne
aam
mov
lcall
pop
pop
add
add
adc
cmc
lods
cwtl
mull
dec
add
xchg
ljmp
xchg
inc
cmp
incl
add
mov
xor
cmpsl
mov
cld
add
mov
ror
add
adc
fmul
pop
add
dec
jmp
xor
pushf
cmpsb
inc
sub
cltd
cmc
popf
loope
mov
data16
mov
or
js
and
xchg
add
jecxz
adc
push
in
fiaddl
mov
push
mov
test
xchg
int3
push
adc
cmpb
push
fsubl
ljmp
pop
dec
push
sub
and
dec
ljmp
jmp
inc
adc
sbb
repz
test
cs
es
xchg
inc
testl
add
xor
test
lds
xchg
movsb
jae
add
lock
add
dec
scas
pop
sbb
and
imul
test
jmp
pusha
cld
push
inc
xor
call
push
dec
dec
loopne
mov
test
aam
fs
or
jne
and
cmc
inc
pop
data16
andb
add
sub
pushl
lea
sbbl
add
jns
xor
clc
dec
sti
xorb
adc
mov
loopne
mov
ss
cmp
mov
add
add
jns
jge
pop
pop
add
fucom
jg
loop
add
pop
and
shrb
push
cmp
ds
ret
rcl
jle
insb
cld
push
and
imul
loop
pop
movsb
xlat
mov
mov
mov
sbb
xor
push
adc
jl
outsl
dec
clc
or
ficomps
rolb
mov
add
enter
xchg
pusha
dec
push
xor
xorb
add
nop
cmp
cmpsb
jg
and
outsb
xor
lret
dec
ret
stos
mov
sbb
jmp
lods
call
cmp
mov
stos
mov
mov
add
adc
push
or
or
mov
xor
gs
mov
hlt
daa
sbbl
mov
icebp
or
movsl
mov
adcb
ficompl
or
sti
inc
lret
pusha
mov
or
dec
inc
sti
add
inc
das
dec
in
sbb
nop
xor
jl
lahf
mov
mov
inc
mov
xchg
dec
xchg
add
jmp
cmp
cld
add
sarb
mov
xor
inc
add
or
movsb
es
hlt
into
push
cld
cmp
in
mov
and
or
lret
ds
lea
out
aam
sbb
test
in
add
dec
outsb
rorb
push
mov
mov
shl
scas
orl
dec
pushf
shufps
push
test
dec
adcb
les
cmp
mov
inc
shlb
fcoml
mov
push
test
and
sti
sbb
out
mov
pop
add
sti
gs
mov
test
scas
call
or
inc
jo
add
fdivrs
mov
sbb
add
pop
push
std
bound
xor
mov
jo
xor
adc
xlat
ret
inc
and
or
filds
movsb
and
and
push
jg
lock
rol
push
sahf
xor
repnz
fisttpll
jbe
shlb
es
xor
cli
mov
call
mov
pop
gs
sub
push
insl
dec
test
xchg
je
popa
xorb
call
hlt
inc
or
dec
sbb
push
xchg
mov
insl
aam
test
add
pop
push
mov
lcall
add
inc
js
xor
or
dec
cs
jbe
sub
push
xor
in
sub
test
sbb
cmp
mov
inc
pop
fidivrl
push
sbb
data16
addl
fmull
lcall
fsubl
jp
pop
or
add
shrb
shl
or
add
inc
shrb
add
cmp
cmp
sbb
mov
lcall
inc
in
rorb
cmp
pop
or
pop
movsb
jno
jmp
xchg
lret
add
xlat
or
pop
fwait
scas
je
mov
stos
test
inc
out
lock
popf
push
or
mov
push
sub
or
int3
inc
addr16
das
jp
js
adc
aam
lods
add
push
sarl
out
bound
cmp
rolb
add
aam
add
inc
orb
add
xor
inc
xor
scas
ss
pushf
and
jmp
push
andb
xchg
pop
cwtl
ljmp
inc
call
test
and
mov
sti
in
xchg
add
das
add
std
in
xor
sbb
imul
push
inc
mov
jl
orl
in
and
lods
xchg
loopne
les
pop
dec
cmp
mov
push
ljmp
ficoml
jmp
call
push
xor
sar
push
cmpsl
mov
push
mov
jl
push
sti
jo
mov
push
push
add
idivl
add
movsl
pop
shll
xchg
jne
push
sub
add
mov
jne
mov
js
mov
and
lcall
pop
or
jecxz
or
add
jmp
aam
mov
test
les
shrl
in
xchg
dec
add
ret
mov
repz
sub
inc
adc
lcall
test
rclb
and
mov
add
ret
ret
pushf
in
or
lret
push
cmpsb
shrb
and
movsb
mov
sub
push
sub
push
rorb
pop
hlt
shr
jne
cmp
les
or
or
hlt
cmp
xchg
and
sarb
mov
pop
enter
inc
xchg
sbb
jmp
jbe
or
das
mov
push
xchg
jp
sar
add
ret
mov
mov
dec
pop
pusha
sbbb
add
cmp
out
test
movsb
movl
pcmpgtb
pop
push
popa
cld
adc
xor
nop
les
sub
je
jl
push
or
inc
mov
cli
mov
push
aas
pop
das
mov
cld
ja
lea
rorb
push
add
or
jmp
fisttpl
lods
sbb
call
iret
std
mov
push
lock
mov
add
outsb
repnz
stos
mov
and
push
jne
mov
ret
mov
dec
shrb
add
xchg
shlb
pop
je
mov
insb
fsubl
nop
xchg
and
popa
arpl
push
loopne
fdivrp
mov
outsb
push
xor
adc
mov
shlb
sub
arpl
adc
and
jge
call
mov
mov
inc
or
adc
jo
pusha
mov
add
or
jnp
add
mov
xor
adc
fs
and
jne
add
and
fmuls
jmp
mov
xchg
push
rolb
push
push
movsb
or
xchg
mov
das
add
cmp
push
and
push
inc
pop
movsl
xchg
mov
cmp
add
add
inc
je
ret
ljmp
and
xchg
mov
ds
movsl
popa
dec
inc
loope
inc
jnp
and
in
mov
insl
xchg
mov
test
bsr
and
mov
popa
es
mov
sub
lock
and
push
or
das
aas
inc
dec
lock
jmp
cmpsb
mov
shrb
jns
jb
inc
or
mov
cs
unpcklps
sbb
adc
bound
dec
stos
test
sbb
test
std
shrb
shl
bound
dec
pop
call
loopne
sbb
into
and
pxor
shl
inc
push
push
push
pop
cld
shlb
fiadds
push
pusha
outsb
test
leave
enter
incl
push
mov
sbb
mov
clc
sbb
ljmp
es
mov
mov
inc
sub
xchg
lods
std
cmp
cld
aam
incl
sbb
cmp
not
daa
aaa
push
pop
rclb
xchg
dec
push
rolb
loopne
pop
xchg
push
aad
fidivs
loopne
jnp
cmc
adc
jmp
xchg
rol
testb
add
push
push
or
int3
int3
or
jle
pop
fisubrs
push
and
or
ljmp
testl
add
cmpsl
sub
fstpt
in
sub
mov
mov
cmp
inc
lea
in
or
mov
push
cmp
or
sub
int3
notb
mov
neg
repnz
les
inc
pop
xchg
nop
mov
mov
xor
faddl
add
mov
cmp
and
pop
inc
sarb
push
or
dec
pop
push
mov
jb
cwtl
punpcklwd
xor
mov
inc
push
ss
sub
push
dec
mov
mov
and
cmp
sub
push
fistps
shl
in
xchg
sahf
add
repz
lcall
and
jns
inc
cld
add
sbb
loopne
cli
add
call
add
jae
shlb
add
push
notb
or
xchg
loope
inc
sbb
jne
data16
hlt
subl
xor
sbb
mov
add
or
fmull
pushl
pop
jb
es
rclb
mov
lcall
push
shl
addb
mov
push
divl
dec
inc
repnz
stos
sbb
push
xor
test
ret
dec
or
leave
dec
jg
xchg
mov
fidivrs
pop
mov
xchg
mov
cld
fwait
inc
sbb
pop
sub
dec
sbb
rcrb
or
push
add
test
cli
call
es
adc
lods
addl
xor
add
dec
sub
pop
mov
mov
xor
fldl
out
jb
push
orl
add
mov
jne
and
jle
je
jo
mov
pusha
xchg
pop
aam
adc
lock
ret
les
mov
mov
push
xor
sub
dec
xchg
adc
arpl
lcall
scas
xor
mov
mov
or
clc
push
xchg
inc
push
call
roll
jne
mov
sub
inc
pop
jle
cltd
xor
subb
aam
aas
scas
loopne
add
fisubl
ret
orl
add
inc
or
push
jge
movb
and
aas
inc
and
insb
out
rolb
inc
decb
call
rclb
and
test
dec
dec
xor
mov
xor
cwtl
ret
sub
fdivrl
xor
nop
dec
cld
push
inc
adc
test
notb
shrl
fcomps
je
add
sbb
mov
push
sbb
in
clc
pop
hlt
imul
or
mov
push
shlb
les
jmp
adc
push
and
sub
js
sbb
or
je
sbb
lods
inc
and
subb
pop
push
in
jns
pop
dec
sub
inc
ds
inc
sub
cli
and
enter
cld
xchg
push
std
rorl
lock
loopne
dec
mov
mov
mov
rolb
ljmp
fsubr
inc
mov
pusha
add
mov
int3
sbb
add
call
incl
cmpb
addr16
test
dec
push
insl
adc
mov
out
aad
jne
push
adc
add
mov
cmp
dec
mov
jecxz
or
push
int3
or
call
mov
mov
or
in
sub
sbb
mov
push
mov
add
xor
pop
add
lcall
in
jmp
sub
or
dec
dec
jbe
or
movsb
call
clc
sbbl
inc
xchg
adc
out
mov
or
mov
adc
mov
lret
jge
in
repz
cs
fwait
in
outsl
cmp
js
xor
movb
mov
xor
or
call
pop
mov
in
adc
xor
and
shl
jmp
sbb
es
in
imul
sbb
clc
ret
and
jmp
inc
sub
std
push
add
fwait
data16
ja
test
jl
inc
mov
push
lea
pushf
push
push
sbb
xor
sbb
inc
dec
clc
andl
inc
pusha
jle
ss
xchg
pop
fstpt
jne
and
xchg
ret
inc
mov
lds
adc
ret
stos
mov
push
jbe
je
enter
jo
aam
push
into
mov
mov
inc
jl
adc
jge
lcall
push
xchg
add
inc
dec
shll
mov
mov
aad
or
rorb
dec
mov
nop
lock
cli
loopne
lcall
add
xor
mov
or
std
inc
jae
shrl
sbb
xor
sub
stos
rclb
add
mov
push
jge
pop
xchg
aas
push
add
testb
jl
sbb
push
orl
cmp
ja
inc
pop
inc
and
jmp
js
add
mov
cltd
data16
outsb
or
andl
cld
pop
je
pop
mov
mov
repnz
in
xor
fdivr
push
sbb
cld
add
call
and
movsl
inc
outsl
xor
add
xor
inc
and
clc
inc
rcl
xorl
jo
add
cli
xor
jg
mov
push
push
sbb
mov
pop
cld
push
add
jo
push
lds
pop
int
bswap
inc
cmpsl
lahf
mov
ja
divb
icebp
test
lea
add
cmp
lock
add
movsb
pop
rorb
dec
cs
cmp
or
pop
arpl
lock
loopne
clc
mov
inc
test
icebp
bound
jb
or
push
insb
sbb
jb
jne
mov
mov
mov
add
imul
pop
mov
xchg
push
or
mov
mov
push
in
push
mov
jp
test
jg
xor
add
jmp
xor
xor
adc
lods
in
inc
sahf
inc
pop
in
push
test
add
add
pushf
lret
xchg
test
cmp
pop
lcall
jne
movsl
call
xchg
ret
mov
push
inc
adc
jp
dec
pop
adc
jnp
dec
xorb
add
add
lock
sbb
push
ja
xchg
or
aam
cwtl
cmp
ljmp
add
xchg
mov
xchg
in
dec
ret
adc
add
xor
inc
inc
mov
rcrb
and
notl
lea
sbb
in
cmp
mov
ret
inc
repnz
adc
sub
pop
out
and
out
mov
mov
sub
cmp
imul
mov
sub
adc
xchg
add
incl
int3
mov
add
scas
lahf
mov
enter
lods
js
add
add
add
orb
lock
mov
sub
out
xor
mov
ret
mov
inc
subb
insb
movsb
pop
rolb
call
cli
dec
hlt
rcll
dec
mov
sbb
lea
nop
sub
adc
mov
jb
push
mov
mov
hlt
mov
pop
inc
xor
in
pusha
jo
mov
dec
adc
sub
ds
mov
lea
mov
ljmp
xchg
das
pusha
and
into
mov
in
push
or
js
lea
push
mov
shrl
inc
jecxz
jne
inc
pop
imul
adc
cs
and
or
add
sbb
mov
jl
cmp
push
repnz
add
xchg
out
and
push
lock
pop
je
jo
jp
inc
mov
push
mov
loop
stos
or
mov
fsubrl
add
cmpsl
mov
pushf
call
bound
sub
icebp
out
mov
or
test
xchg
scas
ss
clc
cmp
daa
dec
xor
shlb
mov
add
repnz
push
mov
sbb
inc
ljmp
inc
les
push
push
lret
sbb
pop
xchg
inc
lods
and
push
roll
arpl
les
fcomps
insb
xor
add
cmp
fidivrl
add
mov
xor
aad
ret
push
mov
dec
adc
jmp
dec
jecxz
aad
xor
mov
sub
cld
notl
add
dec
imul
xor
loop
add
call
std
cmp
fs
adc
mov
jne
add
push
pop
push
pop
dec
cmp
push
inc
and
fsubl
in
sub
mov
mov
inc
dec
add
and
adc
les
call
jecxz
pop
movl
push
sbb
or
add
and
pop
loope
inc
lret
mov
in
dec
decl
push
repz
adc
push
xor
and
stc
push
add
ret
pop
xor
inc
inc
jmp
mov
lea
lea
xor
cli
movsl
das
inc
fdivrl
push
push
in
or
mov
es
pusha
mov
cld
sti
mov
or
inc
pop
pop
les
push
push
mov
xchg
subb
mov
fcompl
jo
push
xor
mov
push
xor
push
fisubl
add
ret
jle
mov
push
and
shl
mov
xorb
fdivs
mov
test
dec
lods
pop
push
adc
mov
mov
clc
sbbb
mov
scas
leave
ret
jmp
mov
fldl
jl
leave
popl
xchg
cmp
std
add
add
push
aas
or
and
fimull
sti
xor
push
or
mov
cmp
adc
xchg
mov
sbb
and
push
sub
mov
mov
repz
jmp
mov
pop
inc
loop
insb
test
outsl
add
inc
je
gs
inc
sar
jg
clc
jne
gs
orl
add
cmpsl
add
push
cmp
mov
mov
jecxz
cmpsb
push
sub
dec
mov
sub
dec
mov
jle
add
cld
ljmp
adc
mov
and
clc
int3
push
inc
jl
rorb
jo
mov
lcall
pop
arpl
push
test
lock
outsl
mov
rol
cld
and
inc
out
or
xor
call
push
rorl
test
jg
pop
inc
cmp
dec
and
pop
pop
call
cmp
rclb
push
push
out
push
jp
mov
pop
adc
and
jg
push
xchg
push
scas
js
inc
add
inc
std
sub
add
xor
pop
mov
mov
mov
ljmp
dec
call
mov
mov
or
int3
fldl
add
xchg
icebp
mov
insb
xchg
xor
divl
fsin
cmp
call
inc
pop
jmp
adc
xor
xchg
sti
add
sbb
cltd
mov
or
fdivr
cld
push
dec
and
mov
mov
out
call
enter
lds
ljmp
jmp
sub
sbb
outsb
xorl
sbb
fcoms
lds
pop
push
adc
outsb
pop
outsl
sbb
push
enter
cmp
xchg
sub
sub
and
inc
push
sub
std
lock
mov
fadds
xor
fcomps
mov
push
inc
push
popa
enter
je
mov
or
dec
push
cwtl
mov
mov
dec
or
dec
and
xor
lock
pop
lret
inc
fiadds
scas
shr
ffreep
sub
adc
ds
mov
sbb
and
push
cmp
sub
and
div
arpl
das
sbb
lods
scas
xchg
popa
jp
data16
insb
repz
cld
xchg
nop
lock
je
stos
and
xor
push
push
mov
push
jmp
pop
add
fs
push
fmull
in
sub
test
adc
adc
aam
inc
ret
ja
mov
mov
rorb
push
adc
add
jle
pop
dec
add
fwait
inc
imul
data16
inc
scas
shrb
mov
jno
mov
lock
fidivrs
test
cmovp
jecxz
sub
je
clc
mov
xor
outsb
rorb
fs
ds
mov
mov
pop
sub
cli
jae
es
mov
push
cmc
jp
mov
or
outsb
sbb
add
fistpl
xchg
mov
sarb
lds
pop
sbb
mov
mov
in
fidivrs
test
loop
rolb
sub
jecxz
jecxz
xchg
in
adc
mov
js
jbe
or
js
xchg
mov
loopne
cmp
or
movsl
adc
js
call
inc
test
push
push
add
cs
dec
add
and
add
jbe
or
fidivrl
out
pop
pop
in
adc
sub
callw
lods
dec
movsb
mov
inc
dec
jbe
mov
jae
data16
pop
fdivrs
or
add
cmp
add
mov
jle
jb
inc
or
or
fsubrs
push
sbb
ret
adc
roll
cmp
cld
and
lds
xchg
mov
je
out
cld
call
sbb
inc
leave
incb
ret
push
lcall
fisubrs
add
leave
icebp
xchg
inc
fcmovnb
sbb
into
push
mov
and
imul
popa
mov
and
out
lea
add
ja
les
push
and
add
repnz
gs
fdiv
xor
pop
cmp
push
push
sbb
enter
mov
xor
les
insb
sbb
push
cmp
xchg
mov
push
testb
lcall
push
shr
xor
std
adc
jp
adc
pop
fistpl
and
mov
inc
and
mov
cmp
outsb
cld
call
mov
mov
mov
test
mov
sbb
xchg
enter
nop
test
and
sbb
pusha
pop
push
push
loopne
mov
cmp
cmp
mov
lods
data16
cmp
add
adc
add
idivb
adc
sub
adc
sbb
call
xchg
ljmp
call
test
mov
push
lahf
or
or
push
call
clc
cmpb
jno
daa
push
out
subb
sbb
push
push
stos
mov
in
jg
adc
sysexit
mov
push
test
bound
adc
cwtl
enter
cld
dec
ljmp
mov
pop
jg,pn
in
decl
mov
addl
and
aad
xchg
push
inc
push
sbb
ja
call
mov
in
pop
or
rclb
clc
mov
je
ds
fucomip
cli
adc
dec
outsb
inc
cld
pop
mov
call
dec
les
mov
cmp
inc
cmpsb
jge
testb
ret
mov
cmp
loope
pop
add
xchg
mov
cwtl
add
shrb
call
fdivs
xchg
decl
rcrl
iret
pop
adc
cmp
sbb
push
mov
test
xchg
or
aam
outsl
add
push
sbbl
out
pop
lock
dec
mov
sub
ss
in
dec
ret
inc
enter
test
cwtl
rcl
inc
int3
jle
mov
dec
pop
rorl
test
or
inc
clc
mov
mov
jne
jl
mov
mov
jg
stos
jmp
or
pop
inc
scas
sbb
xchg
lock
hlt
mov
and
fdivs
shlb
sub
dec
sbb
push
ret
and
xchg
xorb
mov
mov
xchg
add
inc
or
loope
dec
les
pop
hlt
adc
rol
push
and
leave
dec
dec
adc
data16
movb
test
loope
push
push
mov
cld
mov
pop
cmpsl
push
inc
add
sub
jg
inc
call
pop
inc
dec
add
xor
ret
ret
push
mov
or
mov
and
xchg
fisubs
cs
add
daa
fcoml
sub
insb
stc
fisttpl
je
jge
orb
das
push
hlt
pop
data16
add
je
lods
fwait
mov
loop
add
inc
push
sbb
hlt
mov
fdivs
pop
inc
lods
pop
in
lret
inc
jge
and
mov
and
jo
fsubl
ret
mov
sbbl
mov
jl
jne
rorb
ss
push
jecxz
pop
lds
jl
pop
pop
loop
lods
cmpb
push
je
mov
or
clc
jmp
inc
cwtl
or
ljmp
ret
nop
sub
clc
xor
add
mov
addl
mov
stos
mov
inc
push
fwait
lock
xchg
adc
cmp
jne
ss
inc
or
push
aaa
rolb
mov
repz
test
inc
dec
pop
or
add
rolb
mov
pop
cmp
stos
inc
jge
push
pop
nop
mov
aam
xor
mov
push
lret
lahf
test
loope
sub
pushl
data16
pop
lret
and
inc
sbb
xor
ret
sbb
rcll
mov
sahf
nop
out
pop
les
push
fildl
and
les
mov
test
ja
pop
add
mov
jo
mov
data16
rol
adc
fcoms
jp
inc
mov
xor
pop
inc
loop,pn
cmp
mov
sbb
das
cli
leave
jmp
inc
test
adcl
cmp
add
pushl
cli
or
jmp
loop
clc
repz
jno
sbbl
xor
into
lret
stos
jne
lock
xchg
add
pop
jg
jo
adc
jne
lods
les
and
idiv
popf
sbbl
mov
movsb
mov
decb
push
fldlg2
jae
add
inc
in
pushw
fcmovbe
test
mov
add
adc
rcrb
es
lock
adc
pop
xor
fdivl
inc
push
mov
daa
sbb
inc
add
mov
push
insb
cmc
push
cmpsb
icebp
stos
out
mov
ret
add
mov
lock
or
clc
xchg
xor
adc
lock
inc
pop
add
push
adc
adc
jmp
mov
xchg
je
xor
mov
sub
into
ss
add
into
gs
add
and
out
push
ljmp
dec
jmp
es
xor
movsbl
adc
clc
xchg
push
cmp
lcall
add
dec
dec
imul
outsl
lock
int3
add
popf
in
nop
adc
das
gs
pop
mov
dec
inc
push
mov
cld
sbb
add
push
inc
pusha
cmp
inc
mov
push
mov
pop
rolb
jmp
cmpsb
or
sbb
cmpsb
dec
clc
ret
outsb
xor
jmp
std
mov
mov
test
outsl
mov
jbe
inc
sbb
jb
sub
pop
cwtl
hlt
add
dec
clc
call
cld
sti
loope
fsubr
pop
dec
lods
add
fidivrs
pop
shr
and
outsb
sbb
les
sub
or
mov
pop
push
mov
cld
bound
lret
mov
pusha
pop
adc
add
jg
sub
ret
lds
insb
and
sarl
and
sar
sbb
cli
pop
mov
sbb
add
adc
data16
movsb
xchg
push
loope
jg
mov
add
adc
jp
jmp
add
push
xchg
cmpsb
mov
cmp
cmp
fwait
jle
lcall
push
outsb
pop
cld
and
jbe
mov
or
add
loopne
xchg
stos
fadds
push
loopne
inc
sub
cld
sub
insb
test
inc
pop
lldt
pusha
or
jo
mov
stos
xor
xor
sbb
scas
cmp
into
mov
push
push
rcl
fs
addr16
or
add
insb
ficoml
xor
add
push
imul
mov
pushf
push
inc
loop
push
cs
push
xor
rorb
cwtl
enter
lea
adc
out
test
pop
jb
sub
les
pop
inc
jge
inc
loope
test
cs
lcall
mov
and
mov
add
jb
mov
or
fdivl
sbb
sar
mov
xor
mov
dec
test
int3
fdivrs
loopne
loop
or
lods
xchg
test
fs
xor
std
sub
inc
sbb
dec
jmp
lock
inc
dec
insb
mov
fdivr
dec
mov
fs
enter
add
add
pop
mov
test
xor
pop
push
lcall
decb
je
sub
hlt
lss
xor
adc
in
mov
cwtl
mov
je
enter
inc
xor
push
jb
cmpsl
movsb
xchg
adc
sahf
xor
adc
mov
mov
daa
lods
push
xchg
adc
testl
add
fsubr
rolb
pop
add
andl
push
pushf
mov
dec
xor
sbb
xchg
imul
pop
in
xchg
mov
pusha
mov
sbb
add
cmpsb
call
loopne
loopne
add
adc
das
cmp
leave
xor
sub
je
dec
dec
dec
add
aad
cmp
test
and
or
shll
insb
ret
push
icebp
pop
jo
add
push
ja
jbe
addl
or
test
cmc
cs
mov
je
pop
mov
jl
inc
std
pop
loop
repz
mov
mov
cwtl
cmp
push
rclb
inc
push
push
push
in
inc
jl
gs
sahf
xor
arpl
std
pop
sub
mov
and
jne
sub
mov
in
stos
mov
lock
pop
adc
sub
mov
adc
xchg
xchg
or
and
add
les
or
push
sti
lret
pop
shr
adc
xchg
sbb
ljmp
add
and
rorl
pop
pop
cmp
push
adc
data16
aaa
ret
mov
lret
lcall
inc
ret
sbbb
iret
icebp
add
jmp
sbb
sbbb
stos
lcall
adc
add
lahf
dec
and
sub
jecxz
pop
in
pop
jge
cmp
xchg
xor
xlat
cmp
scas
nop
js
jno
loop
xor
sub
adc
or
jp
lcall
call
decl
ret
rolb
or
cwtl
ret
lods
mov
xor
inc
jp
sbb
rorl
xchg
add
js
fldl
mov
repz
cmpsb
push
push
ret
pushf
xor
fcmovbe
add
leave
pushf
push
mov
fwait
ja
dec
aam
sbb
adc
popa
les
nop
rclb
not
add
lods
mov
jle
jbe
xchg
ds
pop
daa
into
xor
adc
or
lret
test
bound
inc
and
and
sbb
je
int3
fsubp
outsl
js
mov
addl
jmp
xchg
dec
pop
data16
pop
jle
shlb
loop
in
push
push
js
aam
sbb
ja
jno
jae
or
cmc
shlb
loope
pop
pop
push
pushf
xchg
dec
jno
jmp
add
divb
shrb
add
pop
outsb
sbb
add
xorb
push
lcall
push
inc
cld
sti
prefetchw
jmp
push
imul
outsl
push
sub
pop
sahf
pop
test
call
mov
mov
ss
enter
outsl
subb
pusha
sbb
inc
jp
nop
and
sub
and
scas
repnz
or
add
jl
xor
or
adc
adc
int3
mov
leave
int3
out
sub
into
or
mov
add
sarb
cld
add
ficomps
fstpl
stc
jne
lods
arpl
dec
insb
fidivs
mov
push
pushf
sub
cli
push
push
mov
mov
add
push
in
xlat
shlb
push
sbb
dec
pop
rolb
jmp
test
pop
mov
aam
cmp
mov
cld
insb
or
add
es
sbbb
add
pop
inc
std
faddp
or
sub
sub
jp
push
subl
mov
outsl
push
vpmuludq
ret
sbb
push
add
and
mov
push
add
push
dec
pop
xchg
push
xchg
into
ja
add
adc
outsl
fwait
rorl
or
hlt
addb
and
or
adc
shr
push
push
cmc
lret
push
call
fwait
add
and
fists
addb
cmpsb
outsl
sub
xorb
mov
inc
jg
lock
or
lret
and
and
pop
push
pop
cwtl
or
dec
pop
mov
jns
pop
add
dec
rclb
rcrb
push
gs
push
sub
lods
adc
lock
push
add
aas
sbb
adc
dec
add
in
inc
out
xchg
in
in
fimuls
cli
cmp
lea
es
pop
ja
subb
mov
inc
mov
test
stos
adcb
cld
cwtl
inc
pop
test
lret
gs
sub
push
xor
mov
push
jecxz
push
popl
stc
lea
int3
xor
xchg
loopne
xor
cmpsb
or
ficoml
fwait
adcb
in
movsb
push
ret
xor
gs
hlt
cli
mov
inc
loopne
jno
jl
pusha
es
mov
push
std
movsb
jbe
mov
lock
and
inc
rcr
xor
loope
bswap
outsb
jbe
adc
jge
add
shll
push
test
xchg
mov
out
xorb
mov
rclb
shlb
xor
push
jl
sub
cmpsb
or
cmpsl
push
rolb
aam
mov
std
cmp
push
add
movb
nop
insl
lcall
in
mov
mov
bnd
add
mov
out
jmp
fsubr
mov
cmc
pop
xor
mov
clc
pop
str
sub
andb
mov
or
or
std
or
filds
cli
je
add
lock
and
push
dec
nop
in
push
mov
push
adc
pop
or
inc
push
adc
and
mov
add
inc
mov
out
lea
sbb
adc
rclb
mov
push
ja
push
jp
sub
sar
fcomps
add
rolb
xchg
mov
pop
add
push
loopne
sahf
dec
pop
hlt
pop
shrl
push
or
lods
sar
inc
jo
pop
out
and
jmp
pop
inc
pop
cli
sub
or
mov
les
mov
jb
insb
xor
scas
pop
fadds
sbb
inc
lods
or
and
movsb
inc
sbbb
pushf
sbb
imul
shll
inc
mov
out
lret
fstpt
jge
sbb
jb
lock
dec
inc
dec
fs
push
aad
inc
adc
push
out
mov
or
mov
mov
test
push
push
mov
add
cmp
inc
cmp
mov
cmp
xor
repz
pop
and
es
add
xor
int3
dec
push
cld
test
and
lea
nop
test
lods
mov
movsl
sub
sub
pop
add
xchg
add
sub
ffreep
push
mov
mov
decb
or
insl
mov
add
flds
and
ret
and
out
addr16
test
push
mov
enter
sbb
jb
mov
mov
xchg
jae
mov
xor
ss
fwait
push
jle
or
jge
repz
stos
insb
or
jl
push
add
sbb
sub
cmp
fwait
test
xor
mov
aaa
xchg
inc
pop
dec
cmp
sub
inc
mov
lods
lret
loop
add
data16
adc
push
js
enter
xor
das
js
js
jae
sbb
xchg
cs
push
push
mov
xchg
movsb
int
add
add
pop
sbb
decl
dec
xor
sub
mov
mov
bound
mov
ret
sub
push
or
or
lcall
push
cmp
adc
lea
adc
pop
or
stos
je
inc
or
push
xor
adc
pop
mov
insb
adc
xchg
mov
push
aam
add
push
adcb
repz
inc
pop
lea
cmp
nop
fimuls
sbb
out
mov
jmp
pop
adc
jge
pushl
xchg
adc
stc
jmp
mov
js
add
in
xchg
push
outsb
jg
iret
das
lds
pushl
mov
push
or
sub
fimull
adc
push
mov
pop
mov
das
call
sub
or
movl
movnti
scas
loopne
push
jne
mov
sub
in
lahf
and
or
stos
in
mov
adc
test
or
pop
orb
in
push
rorb
push
aam
inc
bound
mov
rcrb
icebp
jbe
iret
xchg
sti
cwtl
adc
addr16
negl
fiaddl
cmp
frstor
je
test
test
lret
std
inc
mov
inc
std
pop
cmp
jmp
mov
enter
mov
lea
cltd
jnp
pop
xor
adc
inc
movupd
dec
sub
lock
incl
dec
inc
dec
subb
add
mov
dec
inc
loope
fimull
or
xor
aas
sub
add
call
test
fcomps
and
push
cmp
jl
out
and
insb
xor
xchg
test
push
movsl
lods
or
dec
lods
xor
sbbl
push
mov
xchg
sub
rorb
jmp
inc
and
xlat
aad
rcr
adc
loopne
jne
or
stos
push
and
pushf
aam
fmull
xor
inc
add
xchg
add
mov
add
sbb
sbb
mov
nop
incb
mov
xchg
or
xchg
stc
and
or
cmp
clc
sub
adc
fs
xchg
push
aas
clc
incl
into
add
add
inc
push
aas
in
pop
cmpsb
adc
stos
or
lret
insb
and
orb
cli
mov
or
sarb
std
icebp
lea
rclb
int3
popa
fmul
fcom
push
push
stc
or
or
rcr
dec
mov
mov
push
mov
insl
cmp
adc
push
xchg
faddl
jo
mov
push
push
dec
push
testb
test
pop
adc
mov
inc
add
adc
rcrb
xor
mov
or
lcall
dec
push
mov
mov
inc
bound
je
dec
mov
xchg
out
jle
movsb
jbe
xor
or
mov
or
inc
pop
inc
or
sub
rclb
cmp
jo
push
fcomps
daa
movsb
push
add
or
add
push
sub
sbb
shlb
clc
cmc
int
les
pop
pop
xchg
mov
mov
test
pop
sub
dec
mov
loop
pop
aam
ret
push
mov
pop
jno
sub
and
mov
and
push
mov
icebp
fisubs
insb
cmp
and
loopne
cmp
jmp
xchg
mov
in
inc
mov
pop
mov
sbb
call
adc
subl
jne
dec
jne
xchg
mov
popa
lcall
pushf
in
mov
dec
cld
fs
push
jnp
cmp
nop
and
into
push
and
or
rolb
cmp
add
fists
cmp
pop
xchg
inc
cmp
ret
or
and
jmp
xor
lods
push
xor
jp
xor
xchg
bnd
mov
xchg
faddp
mov
mov
mov
ficomps
faddl
mov
mov
xor
les
cmp
incl
jo
jl
cli
test
inc
ret
pop
int3
cmc
sahf
mov
adc
push
add
pop
in
test
push
fsubp
jg
pop
cmc
mov
ret
pop
sub
shrb
push
mov
push
daa
in
test
mov
int3
add
and
jp
pop
dec
ret
mov
inc
adc
pop
in
inc
es
bound
or
mov
adc
js
mov
pop
jo
data16
mov
leave
jbe
dec
mov
dec
aad
sbb
sbb
stc
inc
mov
aam
cli
loope
nop
xor
xchg
or
add
push
adc
call
mov
fcoml
push
sbb
jg
push
add
push
ficoml
adc
mov
add
add
push
mov
nop
incb
js
mov
jo
mov
int
loop
in
adc
pop
sbb
add
sbb
or
and
clc
cmc
or
loopne
xor
jne
gs
dec
cli
call
push
push
sbb
in
sub
movsl
dec
js
inc
adc
jne
cmp
mov
and
xlat
xchg
add
xchg
or
mov
mov
dec
sti
paddb
mov
test
xlat
imul
inc
clc
push
mov
mov
or
dec
scas
lahf
cmp
ds
and
jp
cltd
dec
push
sub
sti
push
js
and
jo
sbb
sbb
mov
lea
das
jnp
ret
ret
ret
sub
fwait
push
xor
jns
push
ret
xor
cwtl
xlat
sub
rcll
out
in
insb
adc
lock
inc
orb
sub
pop
out
shl
inc
cld
popf
test
test
sub
insb
clc
fistps
out
inc
lods
lret
mov
sub
cld
cmp
add
mov
roll
mov
lea
inc
outsb
loope
add
xorb
or
pop
mov
sub
call
and
fcomps
inc
xchg
inc
ret
mov
jno
and
or
adc
and
dec
inc
mov
orl
mov
inc
push
je
arpl
inc
cmp
ds
and
scas
aaa
ds
cli
sbb
fldt
mov
xor
fldl
push
mov
ret
mov
inc
cli
or
punpcklwd
mov
cli
inc
jl
pop
add
inc
inc
lds
lods
add
jo
jp
mov
cmp
sar
or
pop
lcall
push
and
or
pop
jp
lea
lret
cmp
adc
and
xor
aad
mov
jmp
test
jg
ds
inc
leave
cld
push
dec
test
cmp
ljmp
cmp
add
je
out
scas
or
data16
mov
imulb
mov
rcl
je
push
push
add
lahf
inc
addl
add
incl
mov
mov
data16
std
sbb
int
test
in
xor
dec
shlb
add
push
mov
pop
jnp
iret
adc
sbb
or
sub
add
jl
into
add
adc
orb
push
xchg
lret
mov
cmp
pop
and
sbb
cli
nop
mov
inc
add
push
and
jmp
out
call
xchg
cwtl
nop
mov
decl
lods
adc
push
je
lret
sub
adc
add
lahf
push
xor
mov
sbb
push
sbb
sbb
xor
add
or
add
sub
or
sub
imul
je
push
cmp
clc
popa
adc
xor
cmc
adc
rclb
lea
ds
mov
jb
mov
xor
or
pop
xor
lods
cmp
shlb
push
mov
test
inc
lea
adc
mov
daa
clc
jae
cmpsl
mov
cmp
into
lcall
nop
ficompl
movsb
xor
add
loopne
cmpsl
ja
sub
les
adc
pop
adc
scas
test
and
cmpsb
in
incl
mov
push
icebp
add
push
data16
mov
inc
dec
adc
sbb
mov
push
jb
adc
and
mov
mov
call
dec
cwtl
adc
je
adc
mov
loopne
xor
mov
push
int
bound
pop
cld
or
in
add
push
inc
jle
add
xchg
jbe
dec
into
mov
lock
sbb
jmp
rcrb
jl
or
jg
aad
xchg
fcmovbe
jmp
xor
shrb
sbb
lods
cwtl
cmp
adc
lret
mov
popf
sbb
xchg
jns
scas
push
cld
fsubrs
jl
inc
or
jl
inc
add
lcall
cmp
sti
mov
add
adc
mov
fsubrl
mov
jge
cmp
inc
pop
mov
cld
or
loopne
dec
jmp
mov
stos
pop
pop
add
and
fcmovnbe
mov
insb
daa
push
inc
add
arpl
xchg
int3
lea
push
mov
mov
push
cmp
out
es
dec
fiaddl
xchg
sbb
lea
add
push
call
std
xor
inc
jbe
lods
push
mov
xor
push
out
cwtl
xchg
out
add
sbb
mov
push
push
add
inc
je
mov
or
add
cmc
lcall
ret
push
outsb
push
les
out
mov
mov
jle
dec
mov
sub
outsl
adc
fwait
or
or
scas
insb
sti
dec
add
stos
test
pop
fadds
pop
pop
dec
push
pop
mov
add
inc
mov
xchg
shll
ret
sbb
xor
sbb
cmp
loop
mov
sub
sub
loop
lds
ss
pop
cwtl
lock
mov
push
std
outsl
dec
adc
sub
incb
imulb
and
stos
stos
test
cmp
leave
jb
divl
dec
sbb
repnz
inc
mov
ror
adc
ja
mov
cwtl
test
jp
mull
and
mov
ret
test
aam
movl
push
test
cmp
ret
jo
inc
mov
imul
and
and
add
xchg
pop
xchg
mov
arpl
xchg
cmc
ljmp
inc
xchg
dec
push
repnz
shr
xlat
jmp
cmp
addl
mov
xchg
push
mov
enter
enter
or
push
and
mov
mov
addb
out
sub
or
cmpb
add
pop
ja
mov
mov
push
insl
and
ljmp
call
js
xor
loopne
pop
lock
push
into
cs
hlt
or
in
in
leave
stos
cmp
xchg
fimull
mov
jge
roll
inc
call
or
push
pushf
movsb
pop
inc
mov
xchg
aam
out
adc
mov
out
sbb
cmp
add
jge
inc
xchg
rcrb
scas
or
cld
ror
lret
cmp
push
adc
adc
sarl
mov
out
es
pop
outsb
movl
jne
leave
mov
jg
inc
in
sbb
mov
dec
sbb
aad
sub
ds
xor
add
or
lret
push
les
push
xor
xchg
int3
pop
add
dec
or
sub
jmp
pop
add
fdivs
and
jle
bound
pop
call
popf
or
in
inc
push
sbb
daa
mov
data16
and
mov
bswap
jbe
jno
or
adc
pop
add
xchg
cmp
les
xor
ret
sub
add
in
inc
punpckldq
push
push
lea
mov
mov
lcall
mov
inc
rcr
xor
or
addr16
das
enter
dec
cld
jmp
push
mov
or
adc
add
cmp
shll
mov
les
or
push
mov
cmp
add
lea
dec
dec
nop
andl
movsb
in
es
adc
adcl
std
repnz
mov
or
adcb
jnp
push
inc
cmp
sbb
push
js
cli
add
arpl
fcoms
je
imul
mov
xchg
push
mov
leave
or
sub
inc
sbb
mov
decl
mov
std
lock
test
aas
loope
cmp
clc
imul
ss
andb
ret
inc
push
mov
aas
or
in
add
pop
rcrb
jge
jmp
inc
in
jo
dec
xor
cmp
sub
imul
data16
orb
loope
jle
xor
sub
adc
jecxz
mov
jo
icebp
call
imul
add
push
test
call
shlb
aam
scas
inc
fdivrs
fs
mov
jbe
push
cli
call
js
inc
pop
pushf
lock
movsb
cs
cld
pop
add
popa
and
fsubl
or
mov
dec
outsb
add
add
les
and
addb
test
fimuls
roll
rcrl
sbb
pop
ds
dec
jg
inc
mov
inc
bound
add
sarb
les
pusha
mov
or
cli
add
loop
push
mov
push
push
add
fcoml
bound
jl
lea
decl
push
pop
adc
xor
lock
add
loopne
dec
orb
or
inc
cmp
scas
inc
rorb
and
push
ret
dec
dec
sarb
adc
addr16
jecxz
adc
pop
arpl
les
add
cli
mov
dec
loope
cmpsb
inc
sahf
inc
imul
jg
out
mov
testb
std
mov
shrb
enter
dec
xorb
mov
push
adc
and
scas
or
add
adc
enter
sub
xchg
les
insl
lock
dec
loope
xor
add
int3
sbb
adc
outsb
sub
incl
aam
cmpsb
xlat
ds
mov
sbb
inc
or
pusha
inc
cmp
push
je
mov
ljmp
add
mov
in
out
mov
movsb
mov
shrb
pushf
subb
add
adc
and
pop
sub
incb
js
push
and
xchg
add
cld
and
mov
ljmp
mov
push
add
cs
addl
mov
aaa
cmpsb
dec
inc
add
jmp
pop
enter
test
sbb
mov
addr16
cwtl
insl
cmp
cmp
adc
mov
lock
int3
push
adc
mov
push
jb
lcall
push
jp
pop
mov
lret
pop
mov
out
cmc
jnp
test
test
push
test
inc
dec
pop
pop
movsb
jne
mov
push
mov
test
ja
rol
pop
mov
adc
test
dec
pop
add
and
jne
push
pop
mov
and
dec
aam
pop
aaa
jg
dec
lock
mov
cmp
sbb
xor
sbb
data16
stos
xchg
mov
rorb
push
dec
lock
adc
add
es
dec
call
and
incl
add
fisubrs
mov
push
push
cld
xor
int3
push
addb
add
push
add
and
call
pop
stos
add
js
fmulp
sbb
and
ret
outsl
mov
xchg
cld
fiadds
add
fsubrs
or
insl
ds
and
add
adc
fisttpl
push
fsubrp
fld
mov
jp
adc
inc
mov
xchg
push
inc
insb
scas
fcmovb
inc
push
int3
push
decl
sbb
lock
icebp
or
mov
inc
or
cmpsb
cmp
test
add
adc
loope
adc
addr16
add
aam
cmp
loop
or
pop
xor
test
into
ret
sbb
inc
add
mov
adc
mov
in
jle
out
sub
mov
stc
call
lcall
divb
inc
cs
lcall
in
and
in
mov
xchg
call
mov
imul
jbe
sub
ljmp
mov
popf
dec
mov
loop
icebp
push
shll
add
sbb
cli
xor
aaa
jne
loop
pop
test
call
mov
sub
cmp
mov
je
xchg
push
add
push
aam
mov
mov
xlat
dec
iret
mov
call
sbb
test
jg
test
sbb
add
add
and
in
push
jmp
and
outsl
fadds
fwait
clc
add
ss
int
les
call
popa
inc
or
add
xchg
and
jle
clc
push
test
xchg
sbb
mov
in
jg
scas
mov
jo
lea
mov
ret
and
inc
and
push
adc
or
loop
jo
xchg
jl
inc
pop
mov
movsl
mov
adc
cld
sbb
add
fmuls
es
push
cmpsl
fdivrs
cmp
pop
adcl
mov
movb
inc
inc
sbb
pusha
add
sbb
jo
or
arpl
out
fmull
gs
xor
adc
mov
jg
or
xor
ljmp
dec
cwtl
pop
aam
add
movsb
mov
sub
in
xor
mov
pop
jp
push
cmc
push
jno
loopne
xchg
hlt
out
cmpb
xchg
xchg
inc
scas
xor
push
add
xor
push
push
xchg
mov
aas
adcl
mov
jnp
mov
mov
aad
mov
sbb
add
scas
jge
push
mov
push
inc
inc
cmp
cli
imul
lahf
and
push
cld
and
push
add
push
add
rclb
sbb
insl
xchg
mov
movb
insb
push
ljmp
jmp
mov
bnd
inc
mov
jmp
rorb
mov
out
leave
es
and
decl
orb
int3
mov
out
mov
add
pushf
fmuls
into
add
orl
mov
jp
ret
pusha
sub
xchg
ljmp
or
push
aam
push
or
enter
jmp
pop
push
add
mov
and
add
rolb
in
inc
push
jg
add
repz
pushf
pop
outsb
sub
mov
aas
mov
mov
addl
les
fmulp
dec
inc
mov
testb
mov
mov
mov
mov
mov
pop
mov
and
les
push
outsb
mov
mov
std
pop
ret
in
lret
jo
xlat
mov
push
movsb
mov
mov
pop
push
lock
inc
inc
mov
inc
push
push
inc
aam
push
add
cwtl
xorl
pop
jg
inc
mov
lea
incl
or
jp
jo
sbb
add
leave
fdivs
pop
arpl
jae
insl
inc
or
test
and
cmc
sbb
popl
inc
shll
push
xorl
ret
mov
lcall
aas
push
les
pop
ret
and
lea
push
outsb
into
fildl
hlt
scas
nop
xor
or
add
lock
stos
std
sahf
add
add
mov
jnp
movsl
sub
cltd
fdivs
mov
and
add
dec
insl
add
cmpsb
mov
jl
loopne
pop
sarb
xor
adc
push
mov
leave
push
in
shll
or
xchg
out
pop
push
inc
jb
fistps
inc
mov
rol
inc
xchg
push
inc
cs
add
jne
enter
sbbl
rorb
and
mov
aam
btc
mov
ficoms
sbb
mov
iret
divl
sbb
and
pusha
xchg
or
mov
xor
sbb
jbe
ss
inc
mov
hlt
scas
sub
add
xor
sub
adc
pop
sbb
push
call
adc
jbe
adc
mov
and
pop
dec
push
dec
test
pop
std
call
dec
add
sub
dec
mov
sub
adcl
std
movsl
mov
in
mov
adcl
push
nop
adc
mov
std
jns
add
xchg
or
rclb
push
dec
rorb
jmp
mov
pop
mov
lcall
sbbb
and
in
rolb
mov
dec
das
inc
pop
mov
out
push
cld
dec
sbb
inc
push
pcmpeqd
mov
push
push
mov
shl
push
adc
cltd
cld
mov
arpl
sbb
push
pop
mov
sbb
lcall
lock
ss
sahf
or
scas
sub
icebp
rcll
mov
mov
mov
mov
mov
mov
push
or
dec
cmp
xchg
and
sbb
cld
stos
inc
loop
adc
and
mov
jne
fwait
adc
js
adc
mov
xor
xor
adc
mov
push
mov
incb
inc
xchg
or
mov
data16
lret
xchg
pop
sub
ret
pop
push
pushf
mov
and
inc
push
sarl
nop
cmp
adc
insb
cmp
pushf
adc
orl
adc
movsl
inc
repnz
xchg
mov
addb
add
ret
loopne
dec
dec
scas
inc
pusha
mov
mov
test
xchg
sub
sti
cli
cmp
push
sub
daa
aas
fisttpll
add
cli
fstpt
dec
js
push
cmp
ret
inc
jle
test
xor
mov
subl
ret
xlat
pop
rorl
int3
mov
or
mov
jmp
stos
push
jne
test
cmp
movsb
push
mov
pop
fdivp
aad
into
enter
pushl
jmp
cmp
mov
adc
adc
fcomps
inc
mov
fldt
adc
loopne
or
les
push
adc
adc
orb
jmp
push
hlt
or
push
push
sbb
fcoms
mov
jmp
sub
lods
iret
sbb
sub
mov
lods
jg
es
test
mov
inc
push
add
into
sbb
pushf
mov
fwait
inc
push
sbb
xchg
out
cmp
imul
test
sub
cmp
clc
sub
fst
mov
aas
int
pop
xor
mov
mov
jo
mov
mov
cli
pop
inc
inc
xlat
inc
lods
bound
mov
inc
push
xchg
cmp
xor
test
movsl
mul
mov
pop
xor
inc
test
gs
push
pop
test
xor
add
mov
add
pop
lea
push
int3
jle
mov
and
mov
arpl
cmp
mov
mov
sub
jno
xor
out
pop
cwtl
dec
cmovge
adc
sub
inc
data16
in
push
icebp
mov
inc
mov
mov
xlat
xchg
fidivl
mov
mov
cmpsb
rcl
outsb
sbb
je
cmp
adc
pop
sbb
cmp
push
out
push
mov
and
jge
rorb
pusha
mov
and
mov
push
push
cmp
fmuls
int3
dec
loope
jg
sub
push
in
pop
or
lods
mov
filds
pop
or
or
rolb
push
dec
loope
int
loopne
adc
mov
shlb
add
inc
inc
sti
hlt
mov
xchg
inc
testb
lcall
test
vpsadbw
cmp
pop
push
mov
lret
jp
lret
fcoms
dec
loop
or
and
fdivs
bnd
and
sbb
mov
mov
add
lds
dec
nop
testl
outsb
mov
test
shr
or
adc
jb
fcmovbe
inc
sar
mov
cmp
and
ret
xchg
lret
jne
mov
les
push
cmp
addl
add
incb
mov
aam
call
cs
add
jmp
jne
icebp
ficoms
outsb
mov
sti
and
sbb
mov
pop
push
test
inc
xor
sti
sub
out
add
ss
sbb
pop
fistl
scas
xor
aaa
loopne
xchg
outsb
ss
cmp
fdivs
js
or
xchg
cmovae
scas
adc
das
faddl
push
jae
inc
push
rorb
add
inc
popa
push
fs
mov
xor
and
es
cmp
test
or
in
inc
les
dec
mov
test
lods
lea
add
adc
add
adc
jecxz
mov
in
sub
call
cmp
subb
mov
enter
ret
pop
rol
mov
aas
cltd
jo
imul
pop
cmp
lret
mov
cwtl
xor
xchg
les
pop
jle
add
call
jl
sahf
cmp
and
sahf
je
lcall
arpl
rclb
mov
and
cltd
mov
lods
or
jle
ljmp
clc
aas
roll
sub
mov
add
and
push
fs
add
mov
mov
or
pusha
mov
add
rcr
jmp
sbb
aas
mov
adc
testl
sub
jmp
inc
movb
cmp
ret
test
inc
sub
mov
pop
iret
push
test
in
cmp
inc
pop
adc
push
cli
xlat
pop
sti
pop
cmc
mov
mulb
add
inc
xor
out
nop
in
decl
pop
lock
adc
mov
test
je
xchg
pushl
add
mov
push
xchg
hlt
xlat
subb
inc
sti
xchg
jo
or
mov
cmp
cld
xchg
call
sub
fwait
push
std
ret
ficoml
fdivl
xor
test
sub
push
imul
add
cmp
cmpsl
incb
leave
cld
test
jmp
std
xor
sbb
les
sub
adc
das
shl
outsb
fadds
xor
add
aaa
push
test
pusha
sub
xchg
xchg
ret
mov
fisttps
push
mov
fnstcw
mov
or
das
lcall
cli
test
mov
push
mov
xor
sub
mov
pop
das
jp
inc
mov
sarl
or
xchg
sti
ja
xor
and
fcomip
jne
loopne
loopne
jo
push
clc
mov
popa
pusha
add
std
jb
mov
jl
test
inc
mov
sti
and
mov
ss
ja
mov
je
adc
jle
test
mov
adc
sub
mov
push
sbb
push
in
cmp
add
in
mov
orl
je
insl
sub
and
mov
int3
lea
push
shlb
dec
xor
mov
pushf
in
dec
cmpsb
int
mov
inc
push
leave
data16
inc
cmpsl
movsl
or
shll
insl
pop
xchg
jo
or
roll
dec
lret
cs
rclb
dec
fdivl
sbb
incb
call
cli
ret
jnp
aam
adc
jno
jmp
xchg
and
inc
sub
scas
cmp
mov
outsl
loopne
inc
xchg
jne
pop
enter
test
into
or
popa
mov
test
add
sti
data16
leave
jge
add
out
scas
sbb
mov
ljmp
mov
push
push
aaa
imul
and
mov
pop
popa
adcl
xchg
inc
or
dec
add
sub
dec
mov
rorl
rolb
sub
aad
fcoml
popa
cs
add
push
add
and
xlat
int3
movsb
hlt
mov
push
adc
xor
inc
adc
add
mov
dec
jp
jno
adc
shl
movsb
jne
xchg
cmp
mov
inc
lcall
add
adc
inc
addr16
or
loop
fsubrl
mov
or
push
clc
adcl
jle
mov
lods
xor
add
cld
jb
xchg
add
dec
and
pushf
out
imul
clc
dec
jne
shlb
inc
sarb
call
out
add
test
jno
mov
addb
scas
mov
jb
and
ds
fisttps
cs
in
cld
mov
shl
xchg
and
pusha
fadd
mov
inc
je
sub
inc
push
leave
xor
out
lea
mov
jo
call
test
int3
xchg
adc
push
and
and
fsubrp
or
mov
mov
lock
add
mov
sbb
push
or
rcrl
pop
push
dec
aaa
or
mov
inc
sub
fiaddl
imul
push
loope
adc
test
scas
rorb
jl
dec
push
mov
pop
fs
mov
ret
pusha
cmpsb
or
loopne
icebp
mov
sbb
sbb
lock
stos
mov
push
push
fsts
xchg
mov
push
inc
push
add
inc
push
jle
out
sub
xor
mov
lea
add
out
push
inc
jbe
fcomip
stos
fs
out
incl
test
cwtl
fisttpll
fdivr
pop
pushf
mov
and
inc
mov
fiaddl
in
push
push
sub
mov
cli
das
insb
in
enter
inc
incb
into
out
and
jle
or
mov
cld
mov
cli
inc
dec
icebp
clc
call
rcr
push
mov
ret
mov
pop
inc
aad
cwtl
or
outsl
or
add
xor
add
test
call
sbb
inc
dec
mov
cmp
jns
jp
mov
mov
fs
je
mov
invd
leave
fs
add
fstl
pop
lods
sbb
mov
jo
inc
cmpsb
or
shll
or
wrmsr
lock
rcll
xor
movsb
mov
cld
enter
jne
push
or
push
loopne
xchg
les
or
jl
adc
or
sub
add
xchg
lds
push
cld
stos
or
jecxz
jo
std
cltd
in
add
enter
xor
clc
mov
pop
call
dec
outsl
aaa
pop
adc
call
dec
addl
dec
shlb
sub
add
jae
inc
xor
pop
inc
inc
test
nop
mov
or
push
in
aam
or
dec
nop
gs
mov
je
into
rclb
xlat
mov
xor
jg
inc
mov
repz
ljmp
cmp
jmp
push
xor
xor
mov
mov
cmp
sarl
movb
loop
add
out
decb
cld
call
lds
les
jp
fidivl
or
pop
mov
add
jle
fadds
add
push
inc
fs
mov
push
enter
and
mov
mov
nop
push
je
xor
sub
lea
aad
sbb
jo
mov
xorl
xor
add
jbe
movl
shlb
pop
repz
outsl
loop
push
inc
call
mov
sbb
push
call
push
jle
add
aas
mov
mov
loopne
adc
cmc
popf
xchg
mov
cld
xor
mov
inc
adc
scas
cmp
out
push
push
adc
adc
shrb
inc
stos
mov
xchg
and
pop
sahf
sub
dec
shlb
push
pcmpgtb
push
dec
pushl
and
mov
push
sbb
scas
orb
loop
add
inc
add
adc
jge
aaa
and
lret
xor
rcrb
xchg
lods
out
pop
add
rclb
loopne
inc
mov
push
fists
mov
push
sbb
es
lock
subb
ret
aam
sbb
jp
lods
lea
scas
addb
inc
pusha
add
push
mov
add
push
xchg
push
push
mov
test
adc
rcll
nop
lret
subb
gs
push
mov
ljmp
call
dec
add
pop
mov
js
dec
jle
push
mov
push
sbb
mov
jmp
orb
fiadds
add
mov
jecxz
sub
pushf
dec
mov
aas
dec
sarb
je
mov
pop
hlt
inc
or
xchg
test
push
call
pop
cli
add
paddd
out
into
mov
fisttpl
xor
lea
or
or
mov
pop
push
and
xchg
cmpsl
pop
mov
inc
jp
push
sub
lock
data16
adc
hlt
dec
ret
lcall
and
add
test
jge
aam
jno
lock
push
in
les
pop
mov
incl
mov
add
or
rorb
and
enter
push
gs
xchg
in
lret
aam
aad
mov
bswap
sbb
mov
cmp
ds
insb
mov
mov
call
fisubrs
sbb
or
mov
ret
fdivrs
lret
std
fcomps
jmp
inc
mov
or
cmpsb
push
or
cld
xchg
push
add
inc
mov
xor
mov
adc
in
in
dec
add
xlat
mov
aaa
ljmp
inc
int3
mov
xor
es
pop
movsb
mov
and
aam
clc
pop
les
int
pop
xor
les
cli
outsl
xor
push
pushf
rcrb
movsb
out
leave
ds
in
push
xchg
call
les
adc
popa
mov
cmp
push
jo
jb
or
push
xchg
cmp
andl
sbb
jmp
or
scas
push
mov
lock
cli
adc
add
rol
and
inc
sbb
push
lea
sar
sbb
jne
pop
jne
aam
pop
dec
mov
imul
xor
es
ret
insl
sub
push
xor
and
or
add
push
fs
sub
scas
sbbb
or
push
xor
ret
push
mov
lock
or
cmc
push
in
add
dec
adc
or
add
rcrb
inc
insb
dec
decb
ret
pop
inc
in
adc
pushf
add
dec
jp
in
add
and
jne
call
jmp
iret
mov
adc
adc
sub
outsl
clc
scas
or
mov
inc
fadds
jae
mov
jg
es
xor
mov
idivl
push
mov
inc
jae
inc
test
jmp
rolb
test
mov
leave
lock
mov
imul
sbb
pop
add
bound
loopne
test
mov
hlt
hlt
jne
push
push
cmpsb
add
mov
inc
lret
cld
xchg
add
push
hlt
sub
aaa
and
idiv
aad
adc
mov
in
je
jl
ret
or
inc
dec
adc
sbb
icebp
adc
nop
sbb
inc
andb
inc
stos
pop
or
lock
adc
dec
lahf
add
xchg
int3
and
push
divb
pop
push
jle
cs
aad
cld
aaa
inc
movb
pop
adc
sbb
or
and
lock
lock
add
stos
sahf
adc
pop
xchg
jo
lods
addb
pop
push
mov
mov
divb
xchg
lock
xlat
push
lret
ret
das
lods
dec
ds
ret
test
jbe
les
jge
nop
add
push
or
pop
pop
outsl
adc
or
pop
jne
icebp
rcrl
stc
call
gs
sbb
test
adcl
in
xor
jmp
rcr
fcmovne
adc
insl
cli
ljmp
xor
cld
lahf
jbe
push
jmp
inc
and
rcl
jmp
cli
rcrb
aam
mov
xor
cmp
jo
or
mov
lock
jmp
or
int3
and
xchg
into
add
and
aad
push
scas
adc
mov
aam
push
inc
push
push
icebp
inc
les
lcall
dec
mov
je
add
pushf
test
xchg
mov
jmp
and
sbb
adc
stos
xchg
jecxz
inc
pushf
pop
in
data16
outsl
and
mov
sbb
pop
out
add
fs
cmpsb
xchg
movsb
les
sub
dec
push
pop
and
ja
xor
or
lcall
shlb
mov
fs
mov
add
dec
test
fcompl
lea
jmp
in
mov
out
sti
fistps
lods
jne
les
pop
sarl
inc
mov
xchg
or
add
lock
loop
or
imul
push
std
push
dec
test
inc
mov
outsb
jl
jbe
jecxz
push
jae
in
orb
repz
and
icebp
push
enter
xchg
in
add
xchg
add
or
lods
xor
aaa
inc
adc
adc
push
cmpl
push
adc
addb
xchg
xchg
cmp
roll
nop
jae
sbb
test
and
sahf
mov
decb
add
push
sti
and
jmp
mov
push
test
or
xor
or
dec
fcoml
call
shr
outsl
outsb
mov
add
je
inc
inc
mov
or
mov
mov
ds
dec
push
add
inc
jne
xor
daa
test
loopne
push
pop
jmp
loop
inc
inc
sbb
sub
mov
inc
lea
outsl
dec
cmp
mov
xchg
inc
sub
movsl
xor
repz
paddsb
jno
cmc
lret
lret
push
add
adc
mov
sar
inc
aaa
cltd
mov
mov
js
jp
test
gs
cmp
xor
cmp
in
adc
dec
add
out
and
jne
adcl
and
sahf
out
sahf
sub
inc
cs
jb
mov
addl
addr16
aad
fdivl
fwait
or
xorb
pop
pop
icebp
test
fs
outsl
cltd
int3
inc
or
clc
xorb
add
pop
dec
pop
push
andb
and
test
cmp
add
loopne
shlb
nop
aad
sbb
ss
into
add
je
xchg
outsb
in
pop
add
shlb
aas
adc
lods
out
add
xchg
pusha
jnp
cmp
jbe
andl
roll
insb
repnz
jne
push
inc
adc
fcmovnb
xor
pop
jne
cltd
rorb
fmull
push
pop
add
ret
push
jne
add
mov
mov
push
je
mov
xor
push
xorb
push
inc
jbe
pop
lock
pop
cmp
cmpsb
fists
dec
push
or
pop
push
inc
lea
les
jbe
inc
mov
clc
incl
adc
inc
fidivl
clc
mov
push
mulb
mov
pop
xchg
push
mov
ljmp
mov
adc
jmp
sub
inc
iret
jae
inc
clc
incb
mov
dec
jle
push
call
pusha
jmp
inc
jne
lods
add
push
fsubs
and
cld
inc
and
push
adc
push
out
decl
ss
dec
aad
das
or
pop
mov
cwtl
test
jno
fsubrl
mov
lret
outsl
adc
adc
or
rorb
lock
or
ljmpw
ffree
addl
std
pop
cld
lock
adc
sub
mov
and
subl
test
fiaddl
dec
xor
fdivp
scas
mov
adc
xchg
mov
mov
add
test
jle
ret
inc
jl
movsb
decb
and
sub
xor
filds
cmc
cmc
mov
iret
imul
add
ljmp
xchg
xor
mov
cmp
rolb
scas
movsl
push
sbbb
cmp
add
inc
or
shlb
cmp
mov
adc
cltd
aam
mov
arpl
push
ss
adc
ret
jnp
or
rorl
dec
or
pop
cmovne
inc
pop
loopne
fsubr
push
rorb
mov
jo
pop
add
in
add
mov
xorl
xchg
pop
sbb
jmp
pop
mov
cwtl
pop
sahf
mov
add
and
daa
roll
in
clc
loop
fimull
rol
push
cltd
ljmp
adc
mov
popa
cmp
mov
lcall
push
push
cmp
data16
dec
or
ss
pop
inc
or
pop
sbb
movsl
pop
or
xor
and
lods
outsb
adc
xor
addl
adc
sti
pop
imul
xchg
adc
or
je
jbe
int3
sbbb
fisttps
out
jmp
mov
test
enter
incl
dec
fsubrl
rolb
xchg
push
testb
scas
add
push
hlt
enter
xchg
mov
pop
dec
jb
les
xor
jne
push
test
pop
orb
shr
push
and
mov
mov
pop
imul
cld
cmp
pushl
lret
jbe
aas
mov
or
cli
mov
inc
inc
in
push
cmp
adc
push
rclb
jge
or
inc
adc
test
pop
call
add
mov
ret
sbb
mov
ret
and
dec
add
and
mov
loopne
jl
ret
repz
push
or
push
divl
xor
cmp
pusha
adc
push
mov
pop
bound
sub
out
sub
mov
pinsrw
jle
xchg
mov
imul
incb
or
cwtl
nop
je
sub
add
pop
sub
xor
xchg
das
inc
jg
and
pop
outsb
pop
lea
jo
push
lock
gs
into
and
add
rorb
scas
xchg
mov
pop
jne
xchg
outsl
adc
inc
push
daa
les
je
lods
js
insb
pop
inc
mov
jp
in
rcrl
cmp
mov
shlb
pop
lahf
push
sub
je
mov
jno
mov
inc
cmpsl
push
or
in
mov
mov
jmp
rorl
jl
leave
fwait
mov
stos
or
in
push
push
test
adc
aam
push
cmp
inc
jge
push
mov
add
clc
jo
add
or
icebp
in
pop
xchg
call
and
popa
insb
filds
or
inc
inc
cmc
les
cmp
std
add
mov
pop
decl
xchg
std
dec
xor
jbe
mov
or
push
xchg
mov
inc
dec
scas
push
data16
movsb
loope
add
das
xor
leave
sbb
lcall
add
mov
loopne
mov
or
inc
fidivrl
mov
jmp
or
insl
clc
das
les
stos
cmp
xchg
int3
pop
ret
xchg
inc
into
in
and
or
adc
sbb
cmc
outsl
push
push
adc
loop
and
lcall
mov
pop
or
pop
mov
xor
push
fsubs
lcall
mov
rorb
nop
inc
outsb
aas
mov
add
addr16
dec
mov
pop
lea
add
call
add
call
mov
test
push
cli
or
xor
xor
pop
xchg
lcall
jp
sbb
adc
stos
cmp
cmp
ja
mov
xor
ret
mov
enter
daa
fmul
sbb
sbb
mov
sbb
jo
and
pusha
adc
or
xchg
lahf
push
inc
not
icebp
mov
sub
int
pop
insb
sbb
pop
loope
test
push
stos
dec
push
xchg
sbb
clc
pop
sub
aaa
ret
cli
adc
js
inc
hlt
cmp
and
mov
inc
call
pop
inc
push
fwait
jle
cmpsb
fdivr
dec
cld
sub
repz
sbb
js
fisubl
jp
lret
das
rclb
mov
push
xor
xchg
add
and
pusha
std
call
in
xor
jp
ss
xor
or
clc
stos
mov
ss
leave
add
or
mov
xor
clc
lock
dec
mov
sbb
jge
mov
xchg
ds
lcall
or
push
lods
add
mov
pop
shlb
sbb
out
dec
push
je
jmp
test
shlb
mov
imul
push
je
inc
push
addb
imul
xor
pop
push
les
cmp
and
testl
mov
or
and
lock
test
leave
mov
aam
out
jg
mov
adc
sub
inc
enter
xchg
xorb
popf
cli
adc
jo
mov
imul
movsb
fisubl
pop
ljmp
or
ret
fildl
outsb
call
xor
dec
add
xor
inc
out
xor
xor
in
mov
lcall
push
and
imul
inc
sbb
sti
test
cs
movsb
xchg
mov
or
sub
add
fstl
cs
xchg
bound
gs
xchg
fsubrs
test
push
sub
add
sub
lock
sub
pusha
decl
outsl
push
xor
jno
fcoms
pop
addb
je
into
xchg
dec
mov
shl
mov
jae
aas
xor
adc
mov
xor
mov
xor
sti
pop
shl
enter
iret
or
les
popf
xor
in
mov
fcmovu
add
adc
std
or
mov
add
rclb
jo
pop
repnz
mov
mov
jbe
aas
mov
fs
push
dec
push
and
pop
sub
repz
mov
jns
in
inc
dec
minps
or
xchg
pop
cmp
mov
aas
push
movsb
xchg
arpl
test
pop
rol
mov
adc
loopne
mov
mov
or
test
call
push
pop
inc
dec
leave
xor
fs
xor
mov
cwtl
sbb
or
sar
jg
out
popa
pusha
je
adc
sub
stos
shrb
les
mov
imulb
mov
lea
mov
fs
dec
jbe
add
inc
in
ss
sarb
aam
movsb
jne
or
and
pop
ret
je
jp
xlat
dec
cmp
movb
pop
rorl
insb
xor
push
inc
xchg
aad
xchg
aam
inc
test
inc
movsl
or
xchg
lahf
sub
nop
ret
jae
call
or
sti
push
scas
add
jmp
call
mov
add
or
push
jae
loopne
repz
mov
and
xor
sub
data16
jp
adc
pusha
sbb
repz
or
out
pop
sar
push
fldenv
mov
cmp
mov
cmp
shll
push
sub
or
sbb
dec
loope
gs
out
push
sbb
pop
add
jae
in
xchg
shll
insb
in
push
out
mov
or
adc
rcrl
and
movsb
clc
inc
inc
lcall
xadd
incb
testl
icebp
orb
pop
cmp
cmp
movsb
adc
es
push
pusha
pop
pusha
sub
out
adc
mov
js
js
ljmp
dec
cmp
out
ret
outsb
clc
into
jne
mov
shlb
xchg
xchg
orb
test
mov
lret
es
add
shll
mov
mov
mov
jb
rclb
push
movsb
jg
fadd
in
sub
sbb
decb
loop
or
add
mov
inc
add
fwait
inc
add
add
pop
jmp
les
pop
sti
sarb
test
ljmp
sar
ret
sbb
inc
and
fidivs
jl
mov
mov
add
mov
loopne
mov
call
out
xor
in
push
xor
jl
pop
jo
data16
movsl
out
test
int3
dec
into
fidivrl
cmp
push
xchg
push
adc
subb
mov
stos
sbb
push
or
push
mov
sahf
pop
add
add
push
je
jge
add
cmp
dec
adcl
int3
rorb
or
xor
es
inc
rolb
pop
push
out
enter
push
test
fsubs
sbb
jle
cld
dec
mov
test
sub
pusha
xchg
bound
xchg
roll
hlt
mov
adc
add
push
dec
lock
sub
rcrl
mov
es
push
fisubs
sub
incl
pop
add
push
test
fcoms
inc
adc
mov
clc
pop
adc
lock
std
inc
sub
cs
xchg
add
in
mov
sub
loop
repz
outsl
xor
cmpsb
xchg
mov
in
ds
outsb
cmp
push
fisttps
in
push
cmpsb
and
push
fadd
lcall
jae
lret
jo
pushl
icebp
lods
or
loop
add
mov
fistpll
popa
inc
inc
sbb
es
mov
mov
fdivrl
ret
mov
dec
sar
js,pn
loop
jg
pushf
dec
push
mov
jmp
ret
repnz
add
adc
je
pop
adc
jb
push
repnz
mov
push
xor
subl
jb
in
ja
mov
mov
xor
nop
lea
add
xchg
cwtl
adc
nop
push
add
jmp
cli
aaa
les
jo
push
mov
or
call
xor
orl
popa
inc
xor
mov
pop
test
push
movsb
add
push
icebp
jae
in
loopne
enter
push
incl
ret
sarl
dec
pop
data16
mov
pop
push
add
ret
push
mov
popa
sbb
enter
popa
les
mov
push
enter
add
lock
inc
push
push
scas
adc
movsb
movsl
shlb
xor
pop
pop
pop
or
push
sub
and
cmpl
jbe
call
addl
push
mov
outsb
cmp
sub
add
xchg
por
sub
in
jp
je
push
and
add
cwtl
cmp
add
pop
adc
imul
sahf
sub
mov
fisubs
xor
out
pop
pop
out
out
ret
mov
insb
cmp
imul
pop
jle
das
div
adc
sbb
mov
and
push
pusha
add
dec
sub
dec
lock
jp
or
sbb
pusha
jp
fsubs
mov
mov
mov
nop
fcoms
sub
cld
dec
mov
push
push
sbb
cmp
jmp
add
dec
mov
add
call
arpl
mov
andb
lods
pop
push
and
push
imul
inc
outsb
pcmpgtd
in
ljmp
pop
fisubl
dec
out
addr16
cli
jbe
add
fcompl
push
jns
cmp
mov
in
scas
fadds
add
js
nop
inc
jmp
ret
inc
sti
cmp
out
adc
aam
es
push
clc
add
or
les
ror
cmp
lret
call
adc
sub
sbb
mov
aad
xchg
dec
inc
mov
xor
dec
or
sub
incb
sbb
sbb
cmp
pop
scas
adc
push
in
fldcw
jp
push
mov
ret
xchg
mov
testb
incb
gs
je
fldenv
xchg
lock
or
cmp
push
shrb
inc
hlt
loopne
popa
mov
scas
push
push
pop
jo
adc
xchg
aam
nop
inc
inc
enter
loop
pop
mov
adc
test
gs
add
adc
cmp
mov
or
and
xchg
adcb
popa
adc
or
mov
call
lret
fs
ret
nop
mov
jg
out
push
cmp
or
insb
lea
hlt
and
or
xchg
jo
xor
mov
jne
cmp
aam
fcom
js
pop
mov
rol
mov
int
pop
push
loopne
jae
pop
popa
xor
inc
sti
movsb
pmulhw
adc
pop
cmove
mov
fsubs
jb
or
push
mov
xor
adc
js
pop
dec
add
jo
push
pop
pusha
add
icebp
and
loope
andb
bound
ret
and
clc
cmp
mov
add
pop
aam
cli
cwtl
add
dec
mov
loop
jmp
pop
je
in
fsubl
cmpsb
mov
ret
shlb
cmpl
fadds
and
push
adc
pop
test
xor
stos
mov
jo
dec
out
push
push
lcall
sub
xchg
mov
push
mov
mov
ret
adc
push
xchg
jp
loope
push
syscall
add
push
shr
push
push
in
pop
cmp
cld
lock
push
sub
test
lret
test
or
sbbb
sbb
faddl
jmp
mov
jle
xor
xchg
dec
xchg
pop
dec
pop
adc
cmp
cwtl
adc
es
ret
ss
ror
mov
adc
stos
mov
cmp
testl
les
ret
ss
outsb
es
clc
ficoml
mov
loop
incb
orb
rcl
mov
jl
sbbb
cmp
add
pop
adc
lahf
pop
daa
js
cmp
rol
nop
ds
stos
push
jo
add
js
pop
mov
dec
movsb
pop
in
dec
sarl
mov
and
inc
arpl
test
and
inc
clc
inc
ret
jge
je
cmp
xlat
cld
movl
out
adc
or
in
add
push
inc
les
xor
dec
push
xchg
loope
adcb
fcompl
icebp
mov
push
mov
popa
or
mov
test
jo
sti
jg
sub
insl
jmp
movsb
testb
jge
mov
je
aam
add
inc
data16
nop
add
scas
cmovnp
pop
sbb
jnp
add
dec
pop
jl
enter
rorb
nop
dec
out
call
mov
insl
add
push
jle
add
add
cld
sbb
or
faddl
sahf
push
inc
pop
imul
push
inc
xchg
mov
pop
sti
push
sbb
fs
push
dec
or
or
add
loop
cmp
push
shlb
add
mov
imul
insb
outsl
test
stos
jb
adc
decl
aaa
mov
std
sbb
or
mov
subb
clc
rcrl
fcmovnbe
mov
push
aad
mov
movsl
jno
add
lahf
xor
mov
inc
add
jmp
push
adc
leave
mov
fsubrs
int3
xchg
mov
sub
sbb
push
outsb
test
bound
leave
mov
inc
stos
mov
in
roll
cld
xor
sbb
jbe
xchg
mov
jle
icebp
add
int3
fadds
sub
push
inc
mov
mov
hlt
call
push
pusha
pop
and
mov
dec
fmull
push
jmp
orl
ljmp
sahf
mov
shll
mov
add
lea
add
test
add
adc
add
xor
ss
pop
xchg
stc
loopne
mov
xchg
adc
add
fwait
clc
inc
clc
push
sarl
outsl
jp
ficoml
fs
mov
lods
loopne
andl
in
xorb
ds
xor
loope
sbb
jmp
notb
cli
les
shl
ret
in
mov
cld
orl
xor
jae
pop
sbb
rorb
call
jge
mov
jae
leave
clc
je
pop
push
pushf
cwtl
pop
hlt
gs
or
imul
or
cmp
add
mov
mov
mov
mov
cmpsb
aas
and
and
sbb
popa
inc
push
mov
in
xor
cmc
dec
xchg
inc
mov
scas
xor
mov
outsl
mov
inc
add
loope
nop
sbbb
call
scas
sbb
out
ss
add
lret
jo
mov
rclb
xor
xchg
outsb
and
pop
jmp
cwtl
xchg
shl
dec
mov
add
mov
push
sbb
clc
xor
int3
sub
fwait
xor
sub
xor
jge
inc
mov
and
adc
add
push
add
dec
adc
jp
pop
pop
dec
cld
pushf
ljmp
push
maxps
add
pusha
dec
sub
andl
loop
push
add
lea
clc
and
add
inc
js
mov
xchg
mov
andl
inc
test
popa
xchg
or
pushf
sub
sub
clc
cmpsb
pusha
lahf
jle
xor
mov
sub
mov
lret
movsb
es
insb
cwtl
testb
mov
push
sub
push
pop
aam
adc
and
les
call
pop
jmp
add
mov
mov
movsb
neg
inc
cmp
mov
sbb
push
or
push
mov
adc
jl
ficoml
inc
adc
lret
push
sti
jbe
and
arpl
push
into
push
dec
mov
mov
dec
shrb
xor
mov
sbb
add
jne
test
stos
sarb
xor
test
test
fdiv
bound
or
loop
clc
jg
lods
add
fdivrs
enter
std
push
ljmp
jecxz
push
cmp
testb
flds
jmp
test
cli
dec
in
cli
mov
lcall
adc
xor
mov
jl
jns
ss
cmpsb
cs
ja
and
outsb
mov
inc
and
or
pop
in
push
push
fcompl
push
les
xchg
je
pop
add
mov
jb
pop
xor
fwait
xchg
add
mov
or
loope
rorb
adc
sbb
push
fiaddl
fnstenv
test
jne
rdmsr
add
pop
in
mov
incb
rol
mov
mov
cli
pushl
pop
cmp
enter
inc
stos
jbe
or
lret
insb
ljmp
cmp
or
idiv
ret
pop
es
cs
cmp
je
xchg
and
fs
push
inc
fcomps
add
loop
pop
pop
inc
shlb
push
add
adc
push
push
out
xor
pop
dec
dec
mov
add
rolb
dec
jmp
rclb
cwtl
mov
ret
sbb
adc
xor
sub
fadd
fadd
daa
or
ficoms
sahf
and
mov
pop
jb
int3
lock
mov
mov
add
mov
mov
mov
outsl
push
pop
xchg
xor
push
gs
mov
sarb
dec
or
sbbl
pop
push
in
insl
push
add
cmp
fdivp
push
mov
dec
push
push
popf
xchg
and
add
add
and
ret
sub
mov
inc
mov
pop
cmp
popf
dec
push
mov
and
sbb
inc
test
pop
mov
xchg
pcmpeqb
inc
push
outsl
loop
mov
add
cmpsb
push
mov
or
mov
inc
adc
fwait
mov
adc
arpl
and
js
mov
je
mov
sub
mov
and
cmpb
jne
mul
and
fcmovbe
jb
addb
add
stos
ds
mov
ss
insb
aam
add
clc
scas
push
dec
in
hlt
push
push
rclb
cmp
and
xor
jp
adc
movsb
push
je
adcb
or
fcmovnu
outsb
nop
mov
push
dec
jp
aas
add
jecxz
push
add
ret
mov
push
or
ss
bound
or
push
and
mov
sub
push
test
push
mov
xchg
test
or
push
aas
cmpsb
cli
lods
aaa
mov
nop
add
ds
mov
inc
add
sti
pop
push
sbbl
cmp
mov
sahf
pop
test
xchg
sub
hlt
aaa
and
inc
rcrb
add
inc
mov
mov
lock
jbe
inc
testl
icebp
shlb
pslld
iret
jo
fsubrl
loope
inc
outsb
sub
mov
movups
push
push
inc
push
subb
xor
dec
push
mov
mov
jecxz
insl
add
add
leave
je
dec
jmp
out
inc
and
je
jne
pop
test
repnz
icebp
test
test
push
and
mov
fs
in
pop
rol
inc
mov
add
adc
sub
sbb
push
movsb
fadd
ret
ficoml
adc
mov
inc
or
inc
ret
xchg
inc
jg
jecxz
xor
mov
adc
push
push
xchg
addb
pop
push
pop
push
fsub
cmp
and
mov
mov
rcl
test
dec
mov
mov
in
test
les
nop
push
adc
and
dec
inc
insb
push
addl
cmp
mov
push
sub
push
rcl
or
xor
outsl
adc
pop
dec
push
or
or
je
pushf
mov
ret
jbe
in
adc
dec
aas
push
xorb
push
mov
pop
mov
adc
shll
cs
mov
ljmp
fdivs
mov
loopne
jle
add
or
push
or
inc
pop
mov
lret
xor
hlt
inc
pop
or
ror
dec
movsb
push
imul
call
lea
insb
adcb
sti
add
fidivl
mov
xchg
jecxz
cmp
jbe
fwait
js
inc
shr
dec
or
and
cmp
pop
test
push
adc
sbb
loopne
push
cs
push
add
and
mov
daa
lods
pusha
jmp
push
push
inc
lock
cmpsb
push
lea
sbb
xlat
inc
int3
outsb
add
mov
push
shr
adc
call
lea
rolb
push
push
je
cmpsl
and
adc
aaa
fmul
call
mov
cmp
out
js
cld
xchg
pusha
push
sub
ljmp
sub
jge
jne
outsl
jbe
xor
inc
pushf
fidivrl
movsb
popf
add
das
mov
jb
jg
pop
inc
movl
das
and
test
and
daa
mov
jecxz
out
xor
ret
jnp
inc
incl
aas
adc
aad
sub
inc
je
rorb
xlat
xor
cmp
sbb
add
data16
repz
jg
sub
cmp
loop
jne
orl
bound
cmp
loope
inc
loop
lock
push
mov
fucom
sarb
ljmp
xchg
mov
mov
cmp
call
add
call
add
adc
pop
add
adc
mov
les
clc
test
add
mov
pushf
xchg
rorb
in
pop
mov
and
pop
lock
cmp
sti
int3
mov
adc
jo
mov
mov
mov
imulb
pushf
scas
add
addb
gs
cmp
testl
push
rclb
inc
mov
lcall
or
scas
inc
adc
fs
outsb
aam
add
dec
push
pop
pop
xor
pop
lea
arpl
mov
cli
inc
dec
loope
sub
mov
add
in
ljmp
xchg
sbb
int3
ret
sub
add
dec
mov
dec
fisttps
mov
jle
ret
pop
adc
addr16
ss
sub
add
in
lods
aad
inc
cmpb
mov
inc
inc
mov
and
push
push
mov
dec
xor
jb
stos
and
adc
cmp
subb
ret
xchg
xchg
rclb
add
aas
loopne
add
add
cmp
pop
and
sbb
cmp
pop
cwtl
push
imul
cmp
cmp
mov
mov
jl
je
dec
cli
cmpsl
mov
gs
cmp
cmp
mov
leave
push
sbb
or
ret
push
jl
repnz
push
push
sbb
pop
cmp
ljmp
adc
mov
pusha
lds
fisttpll
or
mov
sbbl
jae
dec
loop
cli
lock
jne
pop
data16
and
je
inc
and
xorl
inc
fidivs
js
loope
rolb
insb
out
in
jno
add
sbb
xor
mov
lods
lods
jne
pop
fdivl
mov
bound
pop
outsb
xchg
mov
cmp
icebp
xchg
icebp
mov
pop
xorl
push
push
pop
cmp
adc
mov
jne,pn
xor
push
jge
adc
outsl
add
sti
xchg
gs
xor
addl
or
enter
mov
and
adc
mov
lea
xor
mov
mov
jmp
je
or
pop
xchg
xor
loope
add
adc
aaa
mov
packuswb
adc
adc
pop
dec
sahf
roll
inc
mov
mov
pop
mov
jo
mov
rcll
roll
dec
pop
lret
inc
dec
or
mov
int3
loopne
or
sahf
lock
test
and
sbb
mov
outsb
mov
orb
push
je
movups
or
cs
jp
fwait
or
cmp
loopne
or
imul
call
add
call
scas
mov
lret
and
je
ds
dec
sbb
mov
nop
out
inc
push
and
loope
movsb
xor
aaa
test
pop
push
mov
push
inc
cmp
test
cwtl
or
clc
dec
nop
dec
mov
dec
push
pusha
call
mov
decb
nop
pop
aaa
sub
inc
mov
ret
and
in
cs
sahf
stos
dec
xor
mov
clc
gs
es
mov
jl
xor
inc
pusha
add
hlt
cwtl
push
xchg
ss
sub
test
mov
or
jg
pop
add
jle
sbb
mov
add
test
ss
std
mov
pop
pop
and
adc
jne
mov
cmc
outsl
call
mov
pop
jo
dec
push
add
cli
jne
pop
dec
testl
jbe
nop
stos
cmp
push
fdivrp
push
sbb
bound
stc
leavew
jne
xchg
push
pop
push
push
movsb
insb
cmpsb
sahf
adc
sub
jnp
push
pop
add
movb
jl
cmpb
pushf
and
sub
inc
test
or
pop
in
in
ljmp
jmp
inc
mov
mov
adc
pop
or
cmp
ljmp
clc
jo
dec
adc
testb
cmpsl
xchg
mov
clc
outsl
inc
adc
or
ret
push
cmp
out
lcall
pushf
inc
inc
inc
mov
xchg
push
xchg
leave
add
ret
cli
idiv
or
adc
fidivrs
shlb
ljmp
scas
push
fildl
in
mov
push
sbb
inc
cmp
sbb
cld
cmp
or
lcall
rorb
xor
adc
addps
mov
push
adc
jb,pn
xchg
and
push
addl
inc
mov
pop
cs
mov
stos
outsb
adc
jmp
rcll
push
stos
jg
hlt
add
pop
xor
icebp
jg
sarb
movl
jae
dec
push
xor
inc
shlb
fdivr
xchg
insl
andl
test
mov
loop
nop
cmp
adc
js
sub
add
stos
mov
mov
jl
sbb
adc
out
pop
push
sahf
int3
popf
push
mov
push
inc
inc
movb
or
rclb
push
repnz
mov
jmp
pop
push
lock
out
push
mov
push
rorb
jl
loopne
pop
clc
gs
adc
movsb
sbb
inc
push
out
movsb
mov
push
ljmp
push
pop
test
sbb
enter
mov
push
test
add
dec
mov
mov
loope
pop
dec
test
add
ffreep
mov
dec
add
jmp
push
push
les
jl
push
je
in
cs
outsb
adc
mov
imul
inc
clc
mov
pusha
xchg
dec
mov
cmp
in
pushf
mov
inc
test
mov
nop
cwtl
hlt
or
cmp
push
xor
pop
pop
or
pop
xchg
stos
cmp
jne
pop
push
in
jp
cmpsl
and
insb
adc
mov
dec
jb
imul
add
mov
add
mov
jne
repnz
loop
sarb
dec
call
lods
mov
test
push
mov
jo
mov
js
test
loopne
sub
jle
test
or
mov
push
cmp
sbb
mov
aaa
jmp
sbb
loop
or
out
inc
pop
inc
das
inc
mov
push
std
cld
push
pop
arpl
stc
shlb
jo
push
sub
test
mov
mov
xor
fmull
xor
les
or
pop
imul
cmp
loopne
mov
sub
addl
aam
pop
shlb
dec
mov
dec
xor
jge
mov
add
test
sub
mov
mov
lahf
xorb
push
or
loopne
cmp
sub
pop
inc
test
jns
xchg
mov
fs
test
stos
inc
add
or
dec
ret
das
incl
lock
lea
xor
decb
adc
int
cmpl
ljmp
adc
pop
mov
ret
dec
mov
jle
call
pop
inc
add
icebp
sub
pop
insb
lock
mov
lret
sar
iret
loope
xor
cmc
std
mov
mov
rcrl
loope
movb
cli
dec
inc
add
mov
xor
int3
push
test
leave
jg
movsl
or
out
test
cmc
and
insb
aam
les
cwtl
call
push
fs
dec
pusha
loope
mov
loop
pop
push
adc
inc
sbb
inc
mov
add
mov
fcomp
push
leave
cwtl
je
push
add
aaa
mov
push
sub
xor
or
jmp
imul
mov
mov
mov
jne
pop
int3
add
lods
int3
xor
aam
js
and
mov
fistpl
adc
pop
ss
push
mov
in
add
enter
add
imul
in
sbb
or
mov
fisubrl
cmp
sar
int3
pop
or
sub
andl
jg
aam
mov
in
nop
or
xor
into
cli
inc
test
pop
lods
push
or
pop
mov
or
pop
mov
or
ljmp
add
inc
orl
adc
iret
je
cld
add
xor
pop
mov
sbb
add
adc
lcall
rolb
xchg
cmp
rcr
inc
mov
lock
pusha
std
mov
sbb
rcrl
shl
rolb
pop
lds
add
ljmp
loopne
jle
dec
push
add
adc
or
push
clc
aaa
js
push
icebp
jge
out
cmp
adc
gs
outsb
add
fwait
pop
push
insb
in
test
push
push
push
pop
dec
loopne
xor
lcall
nop
dec
insb
mov
mov
jo
ljmp
add
xchg
ficomps
pushf
jmp
test
jmp
imulb
xor
inc
cld
rclb
roll
test
inc
rorb
cmp
hlt
out
push
cli
mov
cmp
push
ret
cmpb
or
ret
push
jle
in
push
inc
jb
mov
adc
sti
hlt
add
inc
push
sarl
out
incl
popa
pop
mov
fdivrl
dec
rolb
sbb
cli
add
lahf
fisubl
mov
or
data16
adc
adc
subl
sbb
enter
aad
inc
ljmp
sub
jae
sti
and
cld
mov
sub
inc
jle,pt
mov
inc
jle
repz
rorb
xor
lahf
sbb
nop
push
ret
es
je
call
dec
xor
rolb
pop
idiv
loope
dec
call
adc
flds
or
enter
push
fiaddl
xor
adc
inc
mov
lret
adc
push
scas
sbbb
shrb
mov
mov
andl
inc
or
fsubl
dec
inc
clc
in
pop
mov
jmp
dec
inc
in
mov
sbbl
xor
loopne
sub
stos
mov
inc
or
sub
call
pop
lock
sahf
js
movsl
cvtpi2ps
cmp
dec
int3
or
pusha
or
out
rorl
or
das
push
data16
mov
scas
adc
cmpsl
int3
push
pop
adc
jo
lcall
int
jbe
aam
sbb
mov
adc
mov
push
inc
test
pop
pusha
sbb
mov
mov
or
mov
aas
inc
fs
sbb
cmpsb
mov
enter
mov
add
dec
xor
cs
mov
ret
adc
and
add
orl
sub
or
inc
or
in
xchg
cmp
sub
negb
shll
insb
sub
clc
sub
call
sub
mov
xor
inc
int3
aas
les
inc
js
sub
outsb
sbb
push
por
lcall
faddl
cmpsl
sub
add
out
mov
or
daa
dec
cmp
test
scas
insb
cmpsb
adc
add
call
pop
push
je
add
mov
push
mov
mov
push
inc
or
repz
xchg
dec
or
les
dec
sbb
sbb
and
sahf
mov
sbb
jmp
into
shll
imul
xor
lret
fildl
adc
sbb
adc
push
iret
push
inc
ret
dec
or
pop
mov
enter
and
fsubrs
fadds
adc
ss
push
lock
test
adc
xchg
shlb
lods
xchg
dec
dec
push
sub
mov
sbb
mov
mov
sub
sub
inc
xor
movsl
or
into
sbb
push
push
pop
iret
mov
loop
popa
xchg
les
cmp
adc
mov
mov
data16
adc
xchg
adc
xor
add
hlt
mov
mov
xchg
mov
inc
xchg
add
scas
or
or
addb
push
inc
je
or
and
xchg
ficoms
aad
pop
dec
mov
orb
sbb
fmull
push
push
adc
leave
mov
addr16
lahf
xchg
inc
push
lea
fidivs
mov
mov
inc
dec
bound
loope
xchg
test
call
movsl
lea
cwtl
mov
push
jb
stc
bound
sbb
jp
test
negb
mov
lds
push
mov
pop
sarb
orl
sbb
je
out
xchg
or
dec
xchg
subl
push
mov
rolb
ret
rolw
push
sbb
cltd
push
or
js
push
push
mov
gs
pinsrw
call
xchg
mov
fildll
test
es
pop
push
add
adc
insb
lret
xor
shlb
cs
lds
and
jle
lret
je
mov
bound
xor
push
add
pop
jle
adc
mov
mov
loop
and
or
loopne
movsb
sub
add
push
push
jne
rorb
pusha
test
repnz
sbb
sbb
test
xor
add
sub
loop
cld
mov
fnstcw
sbb
mov
or
dec
adc
pop
pusha
les
je
bound
inc
aad
dec
outsb
jae
jne
icebp
lods
mov
and
inc
addl
in
in
call
ds
jg
in
mov
sahf
push
inc
lock
mov
adc
cmp
pop
xchg
lods
sub
push
call
xchg
inc
xchg
les
es
mov
mov
je
push
xchg
call
les
js
test
call
push
add
sub
adc
rorl
pop
inc
lods
fmulp
ljmp
out
popf
add
adc
hlt
pandn
out
push
pop
nop
xchg
int3
andb
add
out
xchg
in
dec
mov
pop
xchg
adc
jb
cmpsb
or
xor
dec
push
push
pop
jno
add
or
mov
jge
in
push
fmul
or
adc
mov
mov
shlb
js
xor
pop
iret
stc
jne
nop
jp
mov
mov
pop
mov
cwtl
jle
mov
adc
daa
mov
sbb
sahf
ja
out
mov
mov
push
mov
aam
mov
jae
or
pop
call
outsb
inc
push
jmp
stos
or
inc
shlb
insb
popa
push
adc
cld
jmp
add
jae
push
rclb
mov
or
fdivrs
pop
mov
push
jns
out
andl
sti
mov
cmp
or
lea
mov
pop
mov
and
mov
sbb
enter
inc
xor
pop
inc
or
xor
fadd
push
inc
sar
adc
add
mov
ds
adc
stos
push
fimuls
cmp
stos
cmp
subb
inc
jle
pop
sbb
add
jne
ljmp
xchg
lods
mov
and
gs
andps
sub
jne
cmp
xchg
fs
pop
shr
addr16
adc
jmp
mov
les
scas
jmp
cld
push
shl
aam
int
inc
rclb
jo
add
inc
mov
add
mov
push
add
test
aad
jge
test
sahf
test
repnz
adc
sub
mov
fldt
rclb
jb
jae
jge
sub
pop
inc
das
ss
cmp
jmp
dec
shll
adc
bound
pop
add
sub
ret
fidivl
xchg
cmp
sub
test
and
test
xchg
sbb
and
sub
push
test
pop
cmp
outsb
inc
sub
jmp
mov
push
adc
xor
clc
ja
lcall
fidivl
add
mov
outsb
add
stos
movsb
dec
add
js
hlt
test
inc
call
inc
nop
mov
xchg
mov
dec
pusha
scas
movsb
jbe
ja
outsb
loopne
or
or
mov
push
add
add
inc
data16
sbb
or
adc
mov
mov
add
pushf
cmp
mov
push
cmpsb
cld
ret
ret
ja
pushl
add
cmpsb
test
pop
xchg
mov
sub
scas
mov
incl
or
or
dec
push
jg
popa
mulb
push
inc
jne
lcall
lret
sbb
inc
mov
inc
and
sbb
mov
test
mov
mov
clc
sar
mov
test
add
dec
cmp
or
dec
aam
xor
push
pop
inc
in
pop
mov
push
or
add
das
cwtl
cmp
mov
lods
mov
jl
and
mov
loope
sbb
mov
std
and
test
stos
and
dec
mov
cmp
adc
mov
adc
shlb
clc
jl
cld
rcll
scas
sbb
pusha
pop
sarb
pop
cmp
jp
js
inc
push
cmp
dec
cmp
fwait
cmp
lock
push
pop
inc
adc
jne
xor
lea
jb
std
pop
das
mov
pusha
in
xor
sbbl
cmpxchg
faddp
dec
sarb
in
add
xchg
and
outsb
jecxz
arpl
dec
adc
cmp
jl
sub
loopne
sub
or
jbe
clc
pop
xorl
sbb
xchg
adc
sbb
pop
cmp
and
clc
adc
lret
mov
fucomp
outsl
out
push
pop
bound
pop
mov
lea
lar
stos
shrb
imul
add
adcb
and
mov
int3
dec
ja
js
dec
push
or
mov
scas
insb
call
les
add
xchg
shl
pushl
cmpsb
dec
loopne
push
fimuls
add
cmp
sbb
int
fwait
push
xchg
or
mov
push
mov
fs
push
inc
call
out
push
adc
xor
jp
enter
xchg
ljmp
jmp
adc
xchg
lret
mov
dec
inc
or
movsl
outsl
xchg
icebp
pop
xchg
push
ret
adc
or
sbb
adc
les
mov
ret
in
inc
cmp
lahf
cmp
push
stc
outsb
sarl
stos
xorl
xchg
mov
ret
push
mov
call
adc
pop
inc
xlat
pop
pop
into
outsb
inc
orb
cmp
mov
add
push
pop
push
push
push
vcvtsi2sd
dec
mov
loopne
js
inc
mov
je
push
lcall
sub
add
adc
adc
add
push
dec
push
sub
ljmp
pop
popa
rorl
sarb
xor
pop
std
dec
test
jmp
mov
pop
jb
add
push
pop
rclb
cld
test
ret
push
inc
in
push
sbb
add
mov
fmuls
xchg
or
and
xor
pop
enter
gs
sti
jmp
inc
cmp
ret
test
mov
leave
jne
pop
ret
pop
add
rcrb
pushf
add
cld
fwait
enter
sbb
mov
adc
lea
or
mov
pusha
mull
sub
ljmp
xor
mov
clc
adcl
fcmovb
int3
xor
call
fs
push
jecxz
adc
movsl
jo
inc
cmp
aaa
sbb
push
aaa
mov
inc
ds
mov
jbe
cmp
xor
je
xor
fiadds
pop
in
and
cwtl
jmp
push
xor
mov
iret
sbb
rolb
jmp
mov
aas
mov
adc
sub
lea
icebp
adc
or
shlb
inc
mov
cld
test
leave
inc
xor
dec
imulb
add
jp
shll
adc
jbe
push
sub
rolb
pop
xor
xchg
cmp
cmp
cmp
mov
cmp
stos
fs
pop
incl
std
fists
push
lea
mov
sub
out
cld
lret
pop
sbb
or
jb
xor
adc
mov
sbb
in
int
negb
loop
bound
push
call
ret
cli
fdiv
or
push
cld
sub
outsl
push
xor
lock
outsb
les
inc
outsb
nop
push
cli
popa
in
inc
xor
mov
sbb
faddl
fisubrs
mov
ljmp
and
adc
inc
add
test
xchg
add
adc
or
test
fs
xchg
push
imul
or
leave
add
test
mov
cmpsb
notb
xor
inc
bound
in
add
xor
push
mov
dec
xchg
orb
jg
inc
ret
push
std
mov
hlt
pushl
push
pop
aam
add
sub
mov
rcrb
jmp
in
xor
jmp
add
push
sub
pop
mov
sbb
cmp
push
jmp
add
push
ss
and
or
aad
negb
cwtl
stos
aam
shl
dec
xor
std
dec
dec
or
pop
fcompl
push
call
push
dec
push
and
cmp
pop
ret
dec
cmp
rol
add
inc
pop
ret
or
xchg
push
push
cli
ret
dec
mov
pop
leave
adc
add
stos
xchg
test
lock
cmp
sub
lock
adc
incl
push
pop
das
sbb
adc
imul
aad
xor
inc
and
or
and
or
sbb
pop
push
jle
add
dec
xor
push
outsl
ss
adc
mov
pop
enter
in
push
push
mov
dec
data16
and
loope
sub
lods
imul
push
push
inc
jmp
icebp
fisttps
mov
mov
push
sub
xor
mov
dec
dec
jecxz
sub
push
adc
rorb
fildll
rorl
gs
mov
cmc
testb
push
sbb
cmc
lock
cld
mov
push
repnz
sbb
jmp
cld
inc
jne
ljmp
fcomp
sub
xor
fldl
mov
test
mov
fcmovb
cmpsl
outsb
ret
mov
arpl
sub
cs
xor
xchg
stc
aad
adc
ss
inc
sub
sbb
push
sub
imulb
insb
std
scas
movsb
inc
and
push
outsb
xor
nop
test
outsl
int3
mov
dec
push
fdivrl
inc
pushf
mov
push
push
sbb
jl
add
add
ja
add
or
fs
pop
cltd
jl
inc
loope
sbbb
mov
or
mov
mov
or
movsb
cld
and
cltd
jb
or
add
push
adc
push
push
inc
jmp
int
inc
mov
je
out
adc
push
pop
subl
mov
in
sar
inc
jge
or
add
clc
and
mov
sbb
pop
clc
and
push
mov
clc
enter
in
cs
js
mov
cli
push
mov
dec
popa
add
adc
jge
or
jne
add
sub
sahf
push
pop
adc
mov
rcr
adc
lock
or
clc
pop
gs
mov
adc
dec
or
pusha
pop
mov
adc
pop
orl
test
mov
push
rsqrtps
add
nop
cli
mov
mov
add
jmp
addl
jb
scas
incl
push
push
sarl
dec
sbb
decl
xor
jbe
daa
add
testb
cmp
push
adcb
loopne
movsb
fdiv
fldl
pusha
push
dec
js
lcall
icebp
or
scas
in
push
out
inc
lods
xchg
lret
xor
mov
mov
push
icebp
clc
sub
test
js
pushl
and
adc
in
cmp
mov
mov
mov
mov
xchg
dec
inc
rcr
xchg
mov
xchg
adc
jbe
inc
lods
jle
xchg
or
pushw
jnp
jmp
scas
mov
lret
jge
mov
push
pop
xor
pop
and
std
add
mov
add
bound
jmp
add
stos
scas
in
xor
mov
mov
sub
sbb
mov
test
cmpsb
js
pop
adc
stos
imulb
or
int3
lret
in
sti
mov
incb
mov
test
inc
dec
jg
xchg
add
pop
fmuls
add
xchg
mov
add
xor
push
cmp
fstpt
lock
int3
lea
leave
pop
add
es
mov
jg
add
inc
int3
jo
push
aas
fiadds
and
cmp
ret
lret
xor
or
lods
sub
fimull
push
ja
cli
scas
in
mov
aas
int3
ss
inc
sarb
out
movl
inc
or
or
and
call
mov
sbbb
cwtl
out
adc
push
incb
jbe
mov
add
sub
loop
pop
dec
xor
adc
shrb
pop
cmp
ljmp
xchg
pushf
xchg
push
ljmp
rclb
in
mov
mov
dec
jne
mov
cltd
lock
movsb
add
or
add
fst
pushf
es
dec
loope
orb
ret
lds
outsb
loope
sbb
mov
or
mov
cwtl
add
xorb
int3
adc
inc
cmp
jae
pusha
pushf
inc
jge
repnz
fisubrl
pop
cs
fdivr
push
dec
mov
adc
dec
aaa
cld
xchg
test
inc
jnp
push
in
inc
jl
psubusb
and
out
mov
jge
jge
pop
pusha
cmpb
push
out
inc
mov
je
movsb
mov
nop
sub
ret
push
arpl
mov
mov
sbb
sbb
sub
outsb
pop
and
decl
adc
dec
dec
or
test
addl
adc
std
add
mov
inc
mov
and
sbb
test
sub
hlt
roll
cmpsb
ljmp
and
xorb
xorl
cld
aaa
fsubrl
test
movsb
push
pop
jg
push
dec
cmp
push
cwtl
push
and
or
xchg
xchg
sbb
cmp
inc
rcr
stos
test
test
jle
jo
add
pop
aaa
push
movb
push
mov
sub
repz
adc
dec
xchg
ret
pop
mov
add
cmp
nop
adc
es
stos
xor
add
mov
mov
mov
sti
sbb
sub
in
mov
push
push
das
xor
jg
outsl
aaa
lea
repz
sahf
js
pop
inc
pop
push
clc
test
pop
scas
icebp
xor
sbb
fs
mov
cmp
enter
mov
xor
mov
adc
mov
shl
outsb
add
mov
addl
add
hlt
nop
adc
or
imulb
adc
lock
push
or
cmp
adc
mov
jge
push
ljmp
adc
add
mov
pop
pop
test
xor
cmp
adc
call
cld
rol
es
fisubs
push
out
ljmp
mov
sbb
xchg
push
add
je
cmp
sbb
sub
pop
loopne
and
push
pop
outsb
xchg
fimull
xchg
sub
and
adc
lret
shlb
cltd
add
test
mov
push
cld
sbb
sahf
aaa
nopl
and
dec
cmp
aam
fcompl
and
in
pop
mov
mov
sub
lock
test
call
add
xchg
push
lea
popf
loopne
out
lods
push
sub
jbe
add
mov
mov
aam
fdiv
stc
outsl
pop
loopne
addl
sub
inc
fistpl
outsb
clc
push
or
gs
cmp
inc
dec
add
loopne
inc
push
repz
dec
fcmovnb
push
pushf
pop
cmp
inc
pop
pop
gs
add
shrb
xor
mov
and
xchg
or
lock
iret
mov
cmc
and
dec
or
or
aad
push
mov
inc
orb
pop
mov
and
divb
jge
mov
cmp
rolb
insl
ret
adc
shll
push
sti
call
xor
out
fadds
push
test
pop
out
add
dec
js
scas
push
adc
mov
cmp
enter
aas
push
add
or
pop
push
test
mov
and
pop
test
mov
add
stos
mov
and
push
push
mov
mov
and
insb
in
fistpll
add
mov
push
outsb
add
cmp
jmp
ljmp
add
pop
inc
adc
je
cmpl
xchg
inc
add
xorl
dec
adc
roll
jmp
popa
add
mov
xchg
xchg
arpl
push
and
fstpt
inc
mov
pop
pop
adc
fdivrp
rolb
push
daa
mov
outsb
cmp
push
mov
fs
mov
out
inc
inc
ficoms
add
ret
jge
mov
incl
mov
xchg
lock
inc
mov
out
nop
dec
outsl
pop
mov
sbb
mov
mov
ljmp
inc
lahf
inc
add
hlt
mov
dec
push
cmp
or
test
inc
adc
xor
mov
ljmp
outsl
add
ljmp
dec
dec
add
clc
adc
add
jno
jle
push
sbb
and
aas
mov
inc
inc
adc
sahf
push
push
or
xchg
pop
adc
aad
and
dec
cld
push
aam
test
cli
mov
and
cltd
cli
cmp
ljmp
out
mov
push
mov
clc
cmp
ljmp
sahf
popa
inc
lea
movsb
rorb
fcomi
pop
ss
add
jne
pushf
jp
cmpsb
aad
loop
inc
repnz
mov
add
mov
adc
push
rolb
out
sub
inc
test
imul
pop
sahf
add
lock
adc
jb
jle
outsb
push
inc
cmp
enter
sub
cmp
mov
sub
xchg
push
leave
push
imul
out
stos
cmovns
je
cwtl
adc
les
popa
adcl
jbe
stos
push
push
cs
and
mov
pop
add
test
mov
or
fistpll
inc
ljmp
jg
cld
sub
add
add
and
add
mov
adc
push
sarb
mov
lahf
lods
push
out
cmp
cmp
sbb
mov
std
cld
bound
fsubrl
adc
ljmp
cmp
sbb
fidivrl
mov
call
test
push
repz
cmp
shll
and
gs
mov
xor
outsb
mov
or
xchg
aam
inc
jb
push
mov
movsb
cli
ljmp
shlb
xor
icebp
mov
adc
mov
mov
jle
cmp
and
add
sub
lock
jle
fsubrl
add
fcoml
and
mov
outsl
call
ret
fadd
repnz
mov
mov
shlb
addl
lret
mov
pop
dec
popf
pop
pop
pop
and
in
inc
inc
incl
test
inc
shlb
mov
or
decl
in
xor
jne
rorl
push
shl
test
data16
lock
lock
or
lcall
lcall
dec
mov
cmp
push
lret
out
lcall
push
push
push
dec
add
or
add
pop
faddl
imul
in
addl
rorl
call
sub
cs
and
pushf
jge
cltd
fsubrs
sub
ret
mov
adc
jge
cmp
std
aaa
inc
adc
repnz
mov
dec
pop
dec
xchg
push
push
cltd
xor
mov
bound
push
and
push
into
movsb
and
add
cmp
mov
or
mov
aaa
sbb
jae
cld
pop
add
push
pop
xchg
outsb
inc
hlt
addl
ret
xor
add
outsb
mov
pusha
loopne
xor
add
inc
pop
mov
loopne
incb
push
mov
add
adc
scas
xchg
nop
or
push
out
sub
push
testl
movsb
fcmovu
imul
test
dec
jge
lahf
sub
popa
push
xchg
int
add
mov
jge
std
jnp
loopne
call
push
fs
cs
clc
jge
jecxz,pt
je
jb
scas
cli
das
cli
cli
and
cld
mov
push
rolb
mov
inc
test
test
add
incb
xchg
sbb
push
adc
dec
sahf
mov
lock
adc
es
or
sbbl
inc
push
push
add
push
cli
add
push
aam
in
dec
push
jbe
and
aam
push
xor
sarl
arpl
pop
sub
jmp
xorb
pop
mov
or
daa
pop
or
and
inc
in
lcall
push
and
sbb
ret
adc
popa
sub
test
or
loope
mov
rol
movsb
xchg
xor
outsb
push
inc
ljmp
or
sbb
dec
imul
nop
xor
inc
or
cmpps
inc
xor
lock
call
nop
adc
pop
and
test
fwait
mov
push
mov
xchg
push
and
mov
or
or
push
dec
add
inc
lock
mov
gs
leave
mov
dec
mov
mov
pop
jp
mov
les
test
sub
leave
inc
push
push
push
cs
mov
in
mov
test
mov
dec
out
orl
aaa
lea
jo
int3
adcb
xor
sti
mov
rclb
mov
iret
call
sub
dec
sub
mov
push
adc
ljmp
call
pop
xchg
icebp
or
mov
dec
int
ds
adc
pop
cld
loopne
mov
jg
cld
xor
push
add
inc
add
addl
xchg
cld
xor
cmp
jnp
push
jae
lahf
and
sti
add
das
xor
or
inc
inc
jae
mov
add
and
jbe
pop
ficomps
fidivs
mov
test
or
popa
pusha
pop
pop
push
and
aad
cmp
test
ret
test
and
dec
dec
push
push
inc
loope
popa
adc
dec
jo
push
xchg
mov
leave
sti
cli
call
data16
or
push
data16
sbb
mov
roll
inc
inc
andl
cmp
mov
push
mov
or
jle
mov
xor
fstpt
adc
movsb
mov
mov
add
xlat
stos
imul
mov
incl
mov
pop
incl
int3
mov
lea
stos
pop
in
pop
adc
fdivrs
movl
pop
movsl
push
popa
outsb
fmuls
fcoms
add
bound
loope
and
pop
out
jmp
int3
xchg
inc
ljmp
sub
jmp
xchg
cmp
ss
mov
call
mov
add
shr
inc
xchg
test
xor
push
and
sub
je
bound
shl
xor
xor
test
loopne
sahf
sub
or
and
inc
mov
push
mov
mov
lcall
pop
movsl
aam
and
mov
cwtl
cld
push
fadd
inc
push
mov
repz
push
je
xchg
lea
push
mov
pop
fcom
push
addb
xor
decl
clc
push
lcall
inc
pop
loope
into
mov
mov
shlb
loop
dec
push
cmp
xchg
hlt
aad
js
cmp
mov
fwait
xor
push
sub
ss
ret
out
push
in
and
loope
xchg
icebp
adc
jp
sub
stos
mov
cli
xchg
lods
cmp
mov
mov
lock
fdivr
push
test
cmpb
roll
dec
jg
pop
std
jo
mov
mov
test
and
mov
divps
out
cmp
aas
fidivl
sbb
out
jne
or
xor
adc
or
clc
adc
notb
inc
push
dec
add
mov
cld
or
inc
cmp
popa
cli
loop
mov
jne
arpl
mov
and
movsb
movsb
ss
cmp
cwtl
leave
aas
mov
rcr
add
push
inc
add
pop
dec
mov
mov
jne
loop
int3
jge
ljmp
or
mov
push
outsl
movb
sub
je
andps
ljmp
inc
inc
jge
call
ret
push
mov
adc
rolb
mov
and
jbe
shl
call
inc
push
in
enter
jl
shrb
push
xor
mov
mov
pop
loopne
outsl
loop
imul
wrmsr
sbb
mov
sbb
add
dec
outsl
add
test
call
adc
adc
jecxz
int3
fsubrl
sbb
scas
ljmp
cmovne
add
mov
inc
or
stos
xchg
xchg
jp
rcr
je
shll
mov
mov
lcall
mov
pushf
push
add
mov
push
and
daa
pop
inc
or
scas
clc
std
inc
push
insb
pop
xor
pop
mov
popf
push
clts
sub
clc
mov
jne
clc
sbb
jo
cmp
jne
or
fisubrs
ret
mov
dec
mov
sbbl
decb
add
cmp
mov
push
xchg
lea
ret
jno
gs
and
sbb
pusha
dec
inc
push
mov
roll
div
subb
xor
lahf
xchg
loop
inc
test
loop
push
cld
lods
push
dec
movsl
popa
mov
add
mov
xor
test
mov
sbbb
js
and
xor
jmp
cwtl
cmovg
es
push
xor
popf
jbe
inc
je
add
adc
les
je
mov
popa
inc
jmp
and
sub
jmp
aas
add
test
hlt
push
mov
pop
cmpsb
push
mov
js
call
pushf
pop
and
repnz
sub
fisubl
jmp
xchg
add
adc
push
lret
pop
test
mov
add
in
and
stos
mov
enter
addl
mov
shlb
adc
inc
jg
add
js
outsb
cld
mov
jl
cmp
jo
and
xchg
adc
in
cli
xchg
lea
or
fcomip
add
dec
xor
adc
add
mov
jb
jbe
std
or
sbbl
or
fs
push
cld
mov
xor
xchg
clc
pop
add
jne
inc
je
add
pop
push
or
inc
sub
clc
push
or
mov
ljmp
mov
add
mov
push
xchg
sbb
dec
or
lock
out
stos
xchg
rcl
ss
movsl
outsb
push
sahf
pusha
popa
jle
cmp
ret
xlat
mov
mov
jae
loop
dec
push
outsb
cmp
arpl
mov
mov
aas
xchg
xor
test
fadds
adc
or
push
dec
lret
fdivl
push
sub
adc
arpl
mov
das
pusha
je
add
jge
or
xchg
lds
add
push
loop
mov
icebp
sub
movsb
add
mov
je
call
xor
add
in
cli
or
adc
xor
add
mov
push
push
cmpb
push
loop
mov
adc
dec
std
cli
add
lods
push
cmp
sarl
shrb
lds
in
imulb
xlat
sbb
sbbb
stos
and
scas
jb
sbb
ret
jb
mov
jo
call
add
dec
add
adc
lcall
pop
mov
mov
xor
insb
lea
test
dec
inc
dec
push
cmpsb
clc
add
lock
sbb
jg
test
fcmovbe
insl
xor
lods
inc
jge
xor
push
ret
jl
pop
dec
stos
adc
cmc
push
xor
sub
pop
cmpl
mov
push
add
and
ljmp
inc
dec
or
xor
adc
push
or
mov
cld
pop
adc
adc
adc
paddsb
fistpll
push
js
mov
push
xor
or
dec
jle
mov
xchg
jmp
ret
push
add
pop
js
xchg
mov
dec
lahf
mov
xchg
loopne
ljmp
mov
ret
jo
addb
cld
dec
add
and
or
ds
out
and
ja
push
leave
mov
dec
jecxz
popa
adc
and
jp
cmp
jp
push
adc
arpl
iret
lcall
insl
adc
sub
roll
mov
cmp
lahf
push
xchg
aam
jne
dec
call
and
bound
or
cmp
pop
lock
xchg
jne
dec
loope
cmp
pop
mov
pop
gs
js
mov
or
mov
push
popf
dec
xlat
imul
int3
add
sub
mov
or
loopne
push
pop
push
pop
sub
xor
pop
xchg
arpl
xchg
mov
popa
push
lea
test
jmp
ret
mov
sbbl
test
or
sub
and
aas
int3
movb
das
jle
jne
or
repnz
fwait
js
mov
push
rolb
add
mov
int3
or
subl
clc
aaa
jmp
and
cmp
adc
or
dec
gs
jo
mov
testb
add
fadd
add
push
jne
push
adc
fiaddl
test
je
mov
push
dec
call
push
push
test
aas
je
fdivp
out
inc
sar
mov
jge
mov
insb
inc
ja
test
movsb
dec
xor
inc
call
scas
dec
pop
sbb
sbb
lea
out
clc
jecxz
shrl
jecxz
inc
test
call
aaa
add
xchg
adc
imul
mov
vaddsubpd
push
inc
xchg
jg
mov
and
add
sub
mov
add
pop
out
ret
ljmp
inc
add
adc
or
mov
mov
mov
sarb
pop
inc
test
pcmpeqw
add
pop
inc
mov
jg
pop
dec
xor
in
sub
nop
xor
cmpsb
pop
dec
loope
dec
mov
mov
bound
testb
add
add
xchg
mov
mov
or
adc
xor
and
es
or
inc
or
mov
rol
push
push
subl
dec
mov
dec
push
jbe
push
inc
adc
insb
sti
test
scas
ds
push
icebp
and
aas
xchg
outsb
mov
aam
lods
lock
push
xchg
cmp
ret
bound
jo
xor
mov
les
dec
lcall
push
aaa
or
pop
movsb
fimull
jg
in
mov
adc
add
sub
jmp
fldl
pop
cmp
sub
mov
mov
inc
daa
adc
push
jne
adcl
jne
push
push
xchg
dec
sbb
push
push
inc
xchg
ljmp
sub
mov
mov
aam
and
adcb
add
sar
mov
je
add
mov
add
xor
inc
jl
stos
push
dec
adc
ljmp
add
lea
xchg
cmp
add
scas
ret
sbb
shll
sub
sbb
rolb
clc
inc
mov
xor
aam
data16
rclb
stos
add
push
or
and
movsb
or
mov
pop
or
fldt
mov
mov
inc
stos
or
or
or
push
lea
sub
insb
cmp
push
pop
or
insb
dec
stos
test
out
jp
cltd
push
cmpb
not
cmpb
sub
fisubs
jnp
jo
and
sahf
test
ror
mov
adcb
inc
and
adc
and
sbb
mov
test
pop
cld
in
ss
test
idiv
mov
repz
sub
mov
xchg
shrl
sbb
pusha
ret
lock
jb
ljmp
jecxz
leave
fs
push
mov
iret
mov
pop
js
sti
xchg
jecxz
mov
shrb
test
mov
inc
and
shlb
add
xor
sbb
and
rorb
inc
mov
or
inc
jo
mov
enter
or
adc
mov
loopne
shll
add
movsb
add
or
dec
inc
punpckhdq
or
push
push
inc
or
add
jmp
mov
jbe
sti
andl
adc
in
fnstenv
pop
or
cli
mov
insb
rcr
out
dec
lret
pop
add
cs
xchg
mov
sub
cmp
adc
inc
enter
loope
mov
adcl
dec
and
sbb
adc
or
mov
inc
lock
mov
xor
call
popa
cmpb
pop
xchg
add
dec
fisubl
in
sub
ljmp
pop
enter
inc
ret
loop
ja
enter
fildl
xchg
in
jge
jbe
pop
sti
xor
sub
cwtl
cmc
and
syscall
das
js
xor
hlt
mov
adc
inc
add
or
insb
push
adcb
and
mov
add
ljmp
loop
or
xchg
loop
dec
bswap
and
sbb
insb
in
in
loope
pop
dec
add
adc
jle
test
adc
mov
mov
gs
push
rcrl
movsb
push
pushl
adc
inc
add
dec
push
fadds
hlt
insb
add
int3
jne
cli
pop
push
fisttpl
into
repnz
ds
mov
push
dec
sbb
aad
cwtl
push
pop
push
les
aam
mov
xchg
jo
inc
mov
mov
ja
sbb
dec
add
dec
cld
dec
push
xor
ror
and
dec
jmp
jb,pn
jmp
pop
lret
mov
sbb
scas
clc
pusha
std
adc
hlt
ror
fs
push
out
xor
test
xchg
js
add
pop
xchg
lcall
and
lea
jns
add
pop
cmp
test
pusha
fiadds
outsl
in
or
xchg
xorl
push
pusha
xor
les
sahf
push
xor
cmp
ret
fs
inc
cli
or
pop
ret
cwtl
pop
lea
loopne
xchg
iret
fmull
shlb
xor
andl
and
int3
decb
clc
xor
add
dec
std
in
not
or
mov
jno
jbe
ds
rorb
mov
scas
mov
mov
dec
and
dec
in
movsl
mov
rorl
call
xchg
mov
adcl
pop
loopne
mov
lds
decb
shr
idivb
mov
mov
ret
test
int3
lret
xchg
mov
xchg
or
in
pop
mov
jbe
mov
fistpl
cmpsb
std
lds
inc
xor
xorl
insb
pop
rolb
pop
adc
dec
loopne
enter
cmp
sbb
push
fdivs
xchg
pop
jp
mov
push
sub
inc
call
aaa
shr
fstpt
movsl
xor
mov
nop
push
fmull
jbe
mov
xchg
shll
fs
mov
fbstp
sub
pop
lods
sbb
sbb
dec
pop
jo
fdivl
jbe
or
or
ljmp
or
mov
push
leave
sbb
cmc
scas
mov
pop
xor
ss
or
or
mov
cvttps2pi
push
dec
add
mov
loope
add
mov
sti
syscall
mov
fsubs
cmpsb
mov
icebp
push
movsl
outsl
sbb
js
inc
and
push
lock
cmp
lock
pop
pop
enter
add
inc
neg
dec
dec
testb
mov
outsl
sub
add
addr16
rorl
filds
add
inc
outsb
int3
sbb
js
cmp
add
jmp
jne
in
add
punpckhbw
stos
mov
mov
mov
push
mov
imul
jmp
add
mov
les
inc
adc
mov
jbe
push
out
dec
or
mov
fsubl
and
adc
bound
cmpsl
cmc
xor
mov
rclb
mov
popa
push
mov
push
push
ja
push
ljmp
iret
pushw
sbb
fsub
cmc
cmp
mov
pushf
mov
ret
cmp
ljmp
cld
aad
dec
and
or
add
rol
idiv
insb
dec
orl
sbb
outsb
lock
or
mov
sti
adc
les
inc
pop
pop
and
or
ds
cld
cmp
ss
mov
or
sbb
jecxz
or
movsb
pop
stos
xchg
sbb
xor
jmp
addl
mov
sarb
add
pop
mov
pop
add
lret
cmp
ljmp
repz
push
push
pushf
in
mov
in
rcll
test
jb
test
iret
dec
inc
es
xchg
fiadds
insl
ljmp
lods
outsb
dec
hlt
sub
pushf
dec
fiadds
xchg
add
and
mov
leave
dec
pop
dec
mov
jbe
adc
inc
cmp
mov
or
sbbb
push
in
cs
pop
orl
insb
mov
or
in
test
mov
and
push
in
or
and
pop
inc
push
fsubr
adc
ret
sub
aad
les
mov
sub
mov
xor
mov
push
insb
fs
loop
and
shr
jp
sbb
cld
test
addb
mov
mov
and
pop
dec
pop
mov
mov
test
hlt
ret
mov
test
sbb
inc
cld
inc
jne
mov
and
jb
das
jle
shl
clc
cs
jle
call
sub
or
loope
or
sbb
mov
aas
sub
push
pop
push
inc
pop
std
mov
inc
add
sar
and
push
ret
ljmp
loopne
jne
xor
ljmp
test
pop
insl
add
xchg
lcall
js
xchg
add
les
jle
xchg
les
pop
mov
mull
mov
jmp
and
movsb
adc
xchg
mov
das
or
int3
push
push
sbb
sar
adc
dec
xor
inc
mov
rclb
lcall
rorb
pop
sub
push
call
dec
adc
push
nop
cli
or
cmpsb
push
outsb
test
push
push
cld
or
js
clc
dec
adcb
adc
inc
mov
rol
and
incl
data16
test
push
mov
and
inc
jbe
jp
repz
out
push
sahf
and
test
sub
or
nop
pushf
inc
jae
jb
dec
test
bound
cli
add
inc
ret
push
push
xrelease
jne
cwtl
mov
cmpsb
sbb
mov
add
mov
shll
xchg
add
rcrb
jne
enter
add
int
xchg
push
aaa
rolb
test
and
push
adcl
stc
add
or
enter
scas
mov
xchg
or
adc
or
push
pop
fs
ja
addl
loopne
fsubl
insb
inc
inc
xor
lret
movsb
mov
shr
cmc
sbb
mov
test
scas
dec
dec
or
xor
and
hlt
fwait
pop
cmp
aaa
cs
pop
sub
xchg
mov
push
mov
lret
xor
xor
pop
cmc
incb
adc
add
adc
xchg
je
sbb
mov
nop
adc
or
adc
je
jnp
cltd
dec
pop
insb
push
push
aaa
fcompl
dec
rolb
incb
add
test
lea
inc
inc
and
cmpsb
and
inc
fsubr
pop
pop
jmp
push
movsb
adc
xchg
or
add
push
cld
mov
roll
sbb
dec
dec
aaa
std
hlt
test
adc
test
lret
rorb
leave
insb
mov
fsubr
ljmp
or
inc
xchg
aas
lret
push
or
push
cmpsl
pop
mov
loopne
ljmp
inc
add
lret
lea
je
jecxz
sub
ljmp
lock
push
adc
mov
mov
test
inc
mov
xchg
outsb
push
pusha
imul
in
ja
sub
and
push
addl
inc
loopne
push
inc
stc
cwtl
push
test
jne
push
dec
jb
mov
mov
push
aad
sahf
pop
mov
or
pusha
insb
and
or
xchg
push
or
and
sbb
aam
nop
test
roll
mov
popa
xchg
push
inc
mov
pop
clc
into
fs
ret
clc
mulb
sub
enter
inc
outsl
or
mov
inc
lds
xchg
dec
inc
jl
xor
jb
xor
or
add
shr
add
in
inc
cmpl
jne
pop
test
hlt
cmp
orl
pop
and
pop
add
mov
or
jl
lahf
loopne
test
xchg
cmp
sub
lret
sbb
lock
icebp
movsb
ret
rclb
rolb
add
mov
call
mov
sbb
sub
daa
adc
sub
clc
add
cmp
xchg
cmp
adc
pop
imul
adc
mov
lods
fmuls
adc
push
fdivrl
inc
ja
sub
hlt
push
sub
adc
rcrb
adc
pop
std
sub
pop
or
inc
rorb
aaa
dec
mov
movsb
pop
sub
out
enter
insl
and
inc
push
ja
fsubs
cmpl
mov
or
lea
or
daa
mov
clc
xor
mov
jecxz
cwtl
and
inc
gs
push
inc
bound
lock
jp
imul
jecxz
dec
cli
popf
push
mov
or
loopne
inc
jl
add
inc
ss
test
lea
seto
or
or
fs
add
stos
out
push
scas
push
ret
hlt
call
data16
cli
sbb
sbb
inc
pop
call
test
cmp
sub
add
fadd
cmp
dec
or
testl
shlb
mov
les
mov
adc
in
imul
mov
push
fdivr
mov
mov
orl
outsb
imul
movsb
xchg
pop
push
cmp
sub
shrb
in
mov
stos
sub
jmp
inc
scas
les
inc
add
icebp
sahf
xchg
mov
jbe
push
outsl
push
jge
add
and
dec
clc
mov
int3
push
inc
sti
and
dec
das
and
push
in
mov
push
push
jge
push
push
push
lcall
pusha
mov
call
idiv
and
dec
les
and
mov
fsubrs
add
push
je
sbb
add
sarl
hlt
xchg
lock
adc
imul
sbb
mov
rorl
adc
loopne
loop
push
push
xor
in
call
je
pop
loop
jne
cld
sub
fistl
cwtl
aad
loopne
lock
enter
xor
or
std
hlt
sub
stos
lods
add
adc
dec
inc
mov
or
inc
mov
pop
das
movsl
mov
pop
cmp
mov
fistpll
push
mov
call
call
mov
jb
aas
pop
aad
jnp
dec
clc
mov
fistpl
mov
insb
out
rclb
loope
pop
int3
jbe
rcrl
or
inc
je
mov
pop
js
and
rclb
mov
pushf
sub
icebp
in
es
cmp
and
cld
jne
fcoml
mov
test
or
shr
jb
es
mov
enter
mov
jl
push
or
hlt
jne
lret
jbe
fiaddl
adc
add
adc
push
std
xor
clc
jmp
pop
ja
arpl
and
add
mov
je
push
stos
push
mov
or
daa
add
repnz
fisubrs
mov
add
call
in
stc
fs
rcrl
inc
repz
adc
jg
fisubrs
xor
pop
jl
xchg
inc
add
mov
mov
add
and
mov
push
shl
in
sbb
sub
std
dec
add
push
lods
cli
cmpl
adcl
add
inc
jmp
xchg
and
cmpsb
mov
mov
sub
aad
xchg
push
inc
ret
gs
aaa
push
xchg
movsl
bnd
ret
sub
xchg
xor
xor
inc
rclb
loopne
inc
mov
add
subps
std
push
sub
cmp
rcll
call
lea
fidivl
inc
pop
iret
xchg
scas
nop
jne
fs
aas
pop
pusha
add
add
inc
push
add
flds
lock
adc
rcr
inc
inc
xor
mov
aas
std
mov
imul
push
xor
outsl
rolb
mov
dec
outsb
dec
inc
rcrl
fisubrs
add
flds
loop
add
adc
dec
outsl
mov
stos
jecxz
sbbb
mov
js
lds
lock
aaa
pop
push
es
or
dec
dec
push
cli
mov
out
mov
mov
popa
adc
cmp
ljmp
sub
cs
les
cmp
lahf
sar
scas
pop
add
int3
adc
adc
je
mov
sar
cli
js
std
jmp
test
pop
ljmp
xchg
mov
es
pop
insb
lock
mov
adc
fcoms
or
mov
mov
movsl
lock
test
mov
ss
adc
and
cmp
shlb
enter
sbb
add
push
cwtl
xchg
and
mov
xchg
dec
rolb
aam
pusha
loopne
orb
daa
int3
or
push
pusha
adc
mov
outsl
out
mov
clc
sub
sarb
push
jmp
das
and
mov
leave
movb
cld
lock
push
push
push
add
dec
push
mov
adc
pop
push
test
add
mov
push
dec
push
clc
add
sbbb
adc
sahf
push
sub
scas
cwtl
aas
sub
in
dec
popl
jmp
aad
xorl
ret
mov
jmp
in
in
or
and
test
or
cmpsb
push
mov
push
loop
jmp
jmp
mov
inc
mov
in
std
xchg
adc
cmpsb
decl
in
cmp
fadds
cmp
mov
sbb
pop
outsb
inc
shlb
jmp
jo
cmp
imul
insl
lods
sahf
dec
sbb
jo
inc
insb
or
lret
push
out
rolb
pop
adc
xor
adc
pusha
mov
cmp
and
mov
adc
lods
and
inc
cmpsl
cli
pop
or
cmp
lcall
xchg
movb
xor
scas
cmpb
int
test
das
inc
mov
jo
nop
fdivrp
add
push
test
out
push
inc
aas
xor
push
cmpsb
mov
push
push
aaa
inc
test
xlat
addb
in
sbb
add
adc
movb
xor
sbb
jae
or
pusha
xor
fsub
pop
pop
mov
and
mov
xor
leave
xchg
incl
ss
jmp
push
xchg
cmp
inc
lret
outsb
inc
shl
sbb
leave
loop
mov
xchg
outsl
sub
shlb
gs
add
loope
push
inc
clc
dec
inc
icebp
rorb
lret
push
lahf
orb
fst
sysret
movsl
scas
inc
mov
lea
fbld
dec
hlt
mov
into
int3
fsubr
fcomps
adc
adc
pminsw
push
xchg
jp
mov
mov
fmull
cmpsb
pop
stos
add
mov
xchg
pop
les
or
push
pop
mov
imul
sub
outsl
xchg
repz
sarl
xchg
add
sbb
add
incl
int
push
incl
mov
mov
sub
inc
insl
mov
and
lcall
add
out
and
jmp
xor
push
imul
mov
adc
jo
test
xchg
xchg
mov
adc
adc
mov
mov
add
int3
adc
cmpsb
dec
fs
pop
add
in
insb
or
mov
push
push
dec
leave
movsb
or
inc
dec
dec
loop
iret
stc
jbe
rorb
jg
icebp
adc
dec
imul
incb
scas
cld
mov
adc
hlt
call
loopne
lea
std
inc
gs
pusha
testb
inc
ds
lock
pop
inc
mov
pusha
add
jg
mov
mov
cmp
dec
test
popl
inc
jmp
inc
sub
pop
or
adc
cmp
pop
inc
popf
jo
add
add
xchg
push
cmc
push
shr
adcl
pusha
mov
mov
icebp
lcall
jo
in
js
lea
inc
fsubrl
inc
cmp
mov
jg
sub
or
or
mov
and
cld
cli
mov
sahf
lret
jo
inc
fisubl
jmp
xor
clc
out
loopne
and
aam
xor
sbb
dec
test
xchg
dec
rcr
cli
xchg
jp
xor
xchg
push
shl
in
fisttps
jp
push
xchg
in
js
or
add
aad
add
sbb
sbb
hlt
out
mov
leave
jo
jl
fiaddl
jecxz
adc
les
mov
push
mov
loopne
orl
or
lock
inc
cmp
xchg
dec
and
push
pusha
add
sbbl
jo
push
clc
inc
mov
add
call
dec
pop
mov
cmpsb
jecxz
sbb
adc
xor
ret
imul
out
movsb
test
push
xchg
call
adc
cmp
push
movsb
insl
int3
push
jae
fimull
mov
in
insl
mov
mov
cmp
bound
mulps
cmc
sub
mov
push
stos
pop
aad
push
incb
je
push
fs
jle
into
sti
orl
data16
xchg
xchg
and
xor
and
aam
add
mov
push
loopne
cltd
inc
outsb
rorb
pop
fimull
mov
jb
and
fidivs
push
imul
sbb
pop
sbb
push
arpl
aam
adc
js
insl
arpl
test
pop
mov
loope
cli
mov
cmpsb
mov
mov
push
xchg
out
les
or
sbb
xchg
pop
push
adc
int3
les
pop
add
sub
mov
pop
jp
scas
scas
jb
push
mov
popf
dec
les
or
push
aas
nop
ds
les
ljmp
lock
cmp
push
or
ds
pop
cs
jecxz,pn
jl
pop
test
nop
in
jmp
inc
mov
xor
push
jle
imul
rcll
mov
nop
xor
ficoml
adc
adc
push
xor
push
loopne
lahf
push
cltd
rclb
mov
jb
call
mov
xchg
mov
cmp
jbe
inc
mov
movsb
fdivrl
lret
rcrb
inc
add
dec
fstpl
push
or
sub
hlt
cmp
movl
fistl
fwait
into
xor
in
cli
push
xor
jae
push
fiadds
jecxz
and
add
sbb
mov
fdivrs
adc
aad
xor
cmp
or
dec
dec
sub
dec
inc
xor
pop
push
dec
and
jo
loopne
je
cmpsb
mov
xor
push
adc
rcrl
or
inc
inc
mov
fldenv
jae
pop
dec
callw
jne
fadds
pusha
sbb
sar
add
sub
inc
mov
mov
adc
cmp
pop
bound
and
nop
and
call
test
es
adc
insb
and
dec
inc
cmp
add
push
addb
aam
ljmp
jmp
test
int
shr
sbbb
dec
in
insl
jnp
pop
hlt
dec
adc
sbb
push
sub
arpl
jmp
adcl
dec
mov
sbb
enter
mov
xorb
sub
lods
xchg
push
mov
adc
mov
mov
jecxz
pop
adc
or
push
in
mov
call
insb
shl
aaa
fisttpll
lea
sub
lea
jecxz
loopne
loop
add
pop
fiaddl
jp
gs
in
movsb
inc
jmp
loopne
mov
lcall
je,pt
dec
call
add
sbb
xor
movsb
jmp
inc
jmp
mov
cmp
add
repnz
js
jo
es
idivb
pop
cltd
pop
inc
add
imul
add
or
mov
cli
push
mov
mov
mov
outsl
push
in
sub
mov
mov
loopne
xor
imul
out
dec
in
push
hlt
xor
je
mov
fisubl
push
mov
sub
ret
inc
vmovsd
pusha
test
stos
aas
add
push
cmp
pusha
dec
mov
adc
and
xchg
nop
mov
adc
fcompl
mov
or
lock
jp
fs
out
dec
insb
inc
test
ljmp
push
and
lea
mov
adcl
cmp
call
decb
xchg
mov
or
pop
adc
push
mov
add
add
gs
push
fcmovb
mov
jg
mov
xchg
push
xchg
sub
cli
dec
add
or
inc
xor
popa
popf
les
and
clc
mov
jne
and
mov
xor
inc
mov
xchg
test
fisubs
inc
push
imul
push
xchg
mov
mov
mov
mov
ret
push
decb
sbbl
cmp
xchg
lcall
nop
push
and
loope
in
fwait
cld
sarb
shl
pushf
cmp
xchg
lock
jle
stc
add
repnz
mov
loope
dec
and
xor
sub
mov
and
add
into
dec
pop
and
jle
ja
or
mov
sti
mov
cmc
sbb
mov
int
outsb
add
sbb
aam
pop
jp
xadd
adc
mov
xchg
hlt
pop
add
in
int3
or
inc
push
adc
and
push
mov
call
inc
fiadds
push
cld
jmp
mov
call
push
imul
inc
outsb
inc
mov
cmc
cmp
data16
xchg
push
mov
dec
sub
push
pop
mov
aas
mov
sahf
add
pop
or
rorb
movsb
push
add
and
scas
pusha
sbb
mov
lea
mov
aad
cwtl
sub
addb
mov
lret
jne
cmp
push
dec
bound
or
xchg
popf
lods
std
and
ds
add
adc
and
pop
data16
cld
cmp
rolb
mov
push
cmp
pop
and
adc
add
mov
mov
sbb
testb
or
jbe
dec
mov
adc
xorl
push
iret
push
sub
sub
sbb
sub
add
push
push
add
push
jnp
adc
fwait
xor
aad
rcr
call
and
inc
jmp
inc
pop
test
jne
dec
fildl
loopne
pop
rolb
push
cltd
push
je
aaa
or
add
xor
cmp
xchg
adc
outsb
mov
dec
xchg
jb
mov
cmc
pop
add
pusha
xorl
mov
and
in
inc
jbe
subl
mov
xor
mov
sub
cmpsb
lock
out
adc
pop
or
mov
add
cmc
add
and
lods
repnz
adc
inc
push
mov
sbb
sub
pop
out
shlb
push
test
std
lret
fwait
clc
into
dec
pushf
and
pop
inc
jae
cmp
push
jb
mov
hlt
outsb
fnstsw
ss
or
cmp
and
sbb
stos
dec
sub
mov
adc
sbb
out
add
sbb
ret
sbb
add
test
and
mov
arpl
fadds
cli
pop
mov
mov
push
mov
xchg
fidivrl
ret
das
ret
cmpsl
and
leave
cmp
repnz
mov
decb
cmp
hlt
mov
sarb
adc
mov
ret
or
push
dec
sub
pusha
push
pop
imul
mov
sbb
sti
add
sar
testb
add
je
dec
jmp
fsubs
or
sbb
subl
push
pusha
hlt
sti
mov
in
push
clc
stos
xor
lcall
and
inc
adc
subb
cmp
out
lcall
cwtl
stos
and
jmpw
jg
add
cmpsb
movsb
dec
mov
add
dec
sbb
daa
gs
jp
scas
decb
push
mov
rol
pop
mov
push
add
adc
fiaddl
mov
cld
xor
rol
adcb
and
icebp
ss
pushl
pop
add
jmp
xchg
lock
nop
mov
addb
into
rclb
mov
inc
fidivs
push
fisttps
clc
jl
shrb
loopne
subb
testb
mov
add
mov
mov
or
je
ret
xor
push
ja,pt
mov
adc
cmp
test
ss
clc
testb
sbb
mov
add
or
ret
and
xchg
test
mov
test
and
incl
push
push
or
lock
xchg
and
mov
cmpl
push
add
mov
test
sbb
pop
ret
mov
pop
mov
pop
mov
inc
shrb
and
lods
add
mov
adc
sub
shrl
int3
adc
pusha
add
jbe
int3
inc
pop
lcall
sub
add
cmp
jmp
js
dec
ficompl
mov
mov
mov
push
dec
bound
movsb
push
jo
dec
mov
sub
push
das
outsb
mov
or
roll
or
jmp
adc
sub
xchg
xchg
xchg
adc
adc
je
inc
gs
leave
or
push
adc
mov
mov
mov
xor
push
inc
adc
xor
add
pop
test
push
mov
mov
push
jle
adc
fs
add
inc
add
pop
lds
cmpsb
push
xor
outsb
les
repnz
int3
push
pushf
adc
mov
addl
add
fs
sub
add
scas
mov
lret
jns
sub
mov
adc
mov
jb
je
mov
inc
xor
add
aad
out
mov
inc
xor
sbb
jae
fbstp
lret
cmp
scas
into
loopne
xor
out
sbb
or
xchg
dec
xchg
imul
xchg
push
mov
lcall
mov
xor
orb
iret
cmp
jne
and
aas
or
cmpsl
in
lds
inc
cmp
fsubs
call
and
jp
imul
jne
int
sbb
push
in
cld
cmpb
movsb
aas
push
mov
jb
subl
jo
cmp
pop
mov
or
add
fisubl
xor
popa
sbbb
je
push
jbe
add
xchg
mov
je
outsb
mov
and
add
rolb
inc
pop
psllw
cmp
dec
add
jmp
or
or
cld
bound
stos
lock
dec
test
subl
shlb
mov
xlat
data16
adc
rolb
aad
pop
test
or
pop
push
pop
fs
pop
add
lcall
fmuls
clc
xor
ret
add
inc
sbb
pushf
jmp
sub
fbstp
jecxz
testb
xor
cmp
mov
push
xor
mov
cmp
xor
fwait
or
mov
fdivr
xchg
test
std
fdivr
lods
dec
nop
or
cld
or
cmp
inc
cmpsb
mov
fcmovne
hlt
mov
mov
test
test
test
inc
push
lea
adc
call
mov
jmp
insb
test
call
mov
mov
xor
in
and
mov
adc
pop
cmp
or
jmp
push
int3
mov
jp
or
push
cmpb
jmp
ds
les
nop
xor
int3
inc
imul
mov
ss
adcl
lcall
sbb
cld
adc
or
and
sub
add
xchg
mov
je,pn
mov
inc
shl
push
xchg
or
push
jbe
push
add
fistps
mov
sti
jl
sub
dec
mov
pop
call
pusha
ss
fldl
loop
xchg
int3
imul
fs
mov
sbb
aaa
mov
sbbb
rol
fnstenv
cmp
incb
xchg
pop
sub
cld
xor
ud0
loop
mov
and
add
movsl
add
call
gs
push
int
sub
shll
inc
loope
loope
mov
hlt
sbb
xchg
and
mov
mov
ss
mov
mov
xchg
je
mov
lods
dec
test
add
add
mov
inc
cmp
push
or
scas
add
out
jb
mov
outsl
sub
cltd
sbb
push
hlt
cmp
lock
shlb
aas
fimull
xor
cs
add
add
jbe
add
jmp
fstps
and
sbbl
arpl
sbb
mov
in
xchg
cmpl
or
leave
mov
xchg
jmp
mov
fsubr
dec
lods
cmpsl
push
fs
data16
adc
inc
mov
push
mov
xor
test
adcb
test
shr
add
rol
shl
push
pop
push
pop
fisubrl
mov
shlb
adc
mov
inc
or
popf
mov
stc
sar
es
aas
ds
push
pushf
test
inc
mov
ficoml
adc
dec
jb
les
ret
aas
mov
add
aaa
pop
movsl
fistps
jp
cmp
adc
mov
rcrb
mov
jmp
es
das
sub
pop
or
inc
mov
fcomps
or
movsl
push
lds
push
lcall
test
jne
notb
nop
rolb
sub
add
mov
shll
gs
inc
sbb
cmp
sarl
mov
cwtl
adc
jne
lret
mov
adc
mov
add
or
fcompl
lods
and
gs
insl
jo
mov
inc
mov
test
cs
jbe
std
inc
sub
push
insl
cli
or
mov
fisubs
push
mov
cmc
insl
sbb
mov
faddp
xchg
insb
ljmp
push
add
cld
mov
mov
je
outsb
dec
rclb
inc
sbb
push
rorb
dec
out
ljmp
in
and
pusha
and
sub
mov
addl
into
jg
pop
sub
inc
fistpll
loopne
pushl
adcl
xor
push
test
sbb
xor
andb
push
sti
ss
aam
xchg
jb
sbb
pop
ret
inc
addl
js
popa
add
ds
mov
mov
add
loop
mov
add
insb
cmp
push
decl
stos
or
xor
insl
addb
pop
dec
jmp
push
pop
add
dec
ret
mov
inc
sbb
mov
inc
add
add
inc
pop
or
ja
enter
faddl
sub
lds
std
and
cmpsb
sbb
cmp
rclb
mov
jp
nop
std
aam
add
cld
xchg
mov
xor
lods
shlb
shrl
jo
test
rcl
and
mov
leave
les
stos
and
push
fs
or
push
and
pop
add
jae
out
call
cli
mov
push
test
push
xchg
pushf
call
je
sub
js
fmull
outsl
xor
sub
std
adc
inc
incl
push
add
adc
or
push
lret
insb
and
pop
adc
mov
xor
insl
arpl
mov
roll
jb
ret
mov
mov
inc
loope
jne
push
sbb
mov
sbb
cmp
rorb
and
cmpsb
xchg
cwtl
jp
inc
adc
sbb
push
lahf
in
add
dec
push
je
adc
mov
add
sbb
xchg
sub
dec
jl
push
mov
inc
pop
aas
mov
mov
ja
mov
jl
sub
jo
mov
cmp
decl
lods
dec
jl
mov
add
jae
adc
mov
rcr
mov
mov
xor
test
std
pop
xchg
mov
cmp
in
rclb
sub
andb
cmp
add
popl
imul
push
inc
fs
lods
inc
loopne
add
push
in
inc
add
inc
call
test
pushf
sub
pop
pushf
lds
push
nop
cmpl
xchg
jmp
mov
test
adc
push
or
inc
fadds
adc
hlt
or
mov
cld
xchg
add
inc
mov
and
arpl
and
or
loopne
sti
push
cmp
and
leave
loopne
int3
ret
ljmp
mov
sub
push
cld
repnz
dec
arpl
add
aad
jle
add
xor
dec
rolb
mov
clc
rdpmc
push
lea
sbb
sub
call
and
js
icebp
or
xor
out
push
adc
outsb
add
lock
add
shlb
sub
lea
dec
dec
mov
mov
int3
and
add
and
mov
incb
jne
gs
lods
and
test
leave
pop
mov
adc
add
push
jmp
mov
movsb
mov
push
inc
lea
add
test
sahf
xor
jnp
xchg
icebp
aad
mov
test
outsb
mov
add
push
jo
push
daa
sub
incb
mov
push
sbb
xor
call
dec
je
es
mov
sbb
fimuls
mov
sbb
das
push
sub
and
and
push
jne
pop
pop
cld
aas
mov
addl
pop
mov
lcall
aaa
inc
push
mov
repz
mov
jb
sub
jge
fdivr
nop
inc
push
sub
adc
dec
es
movsb
sbb
add
shll
or
test
push
add
mov
push
mov
test
jb
mov
and
add
sti
incl
je
gs
clc
push
insl
cmp
int3
add
mov
mov
inc
lods
dec
mov
adcb
das
xor
cld
mov
pushl
xchg
daa
xchg
call
hlt
xlat
dec
or
push
and
push
nop
in
dec
je
rorl
adc
inc
and
inc
push
and
data16
push
mov
paddb
int3
dec
cmp
push
data16
fs
or
gs
push
jl
loop
cs
pushl
or
add
dec
icebp
adc
pop
inc
sub
pop
mov
sub
sbb
jge
outsb
inc
lock
sbb
inc
dec
xchg
pop
add
push
hlt
adc
call
enter
pop
cld
idiv
arpl
sub
adc
insb
sub
stos
fs
out
pop
sbb
dec
insl
mov
or
adc
js
jno
add
mull
cmpb
or
and
lea
std
jmp
sub
jge
dec
imul
add
fdivrs
mov
or
in
mov
push
nop
int3
and
jo
cmp
pop
pop
push
mov
ficompl
mov
dec
and
es
test
and
int3
xor
leave
sbb
jbe
mov
adc
arpl
xor
imul
pop
testb
call
gs
es
xchg
xor
mov
mov
cmp
jbe
adc
pop
lcall
mov
in
cmp
mov
push
push
sub
enter
fistps
pop
sbb
or
clc
popa
ud0
test
ret
sub
in
cld
andb
mov
testb
mov
jle
pushl
jle
xor
cmp
mov
push
mov
icebp
insb
lahf
push
xor
ds
clc
cmp
push
mov
sub
pop
xor
xchg
mov
add
das
movsb
ds
insb
mov
inc
clc
rcrb
test
inc
sbb
dec
cmpsb
push
xchg
shlb
nop
pop
push
jl
jge
dec
pop
or
loop
mov
into
mov
xchg
mov
xchg
mov
push
cmpsb
lcall
psubsb
push
jecxz
inc
push
pop
mov
add
xchg
sbb
or
push
xlat
mov
test
stos
insb
sbb
pop
std
push
lcall
adc
loopne
addb
clc
pushl
inc
push
inc
mov
in
je
mov
mov
and
xor
out
or
push
rorb
adc
incb
pop
xchg
rolb
xor
cli
dec
mov
lcall
loopne
stos
sbb
adc
ror
in
add
pusha
jns
xchg
xor
es
sub
pop
in
les
or
inc
mov
aam
icebp
filds
jne
divb
add
xor
mov
jnp
add
cmpsb
scas
mov
jge
sbb
cld
cs
or
jmp
and
fimuls
adc
mov
cmp
ror
inc
and
cld
dec
call
pushl
pop
mov
std
ret
push
cmp
jecxz
add
lret
sarb
sbb
pop
movsb
xor
cmp
test
inc
dec
adcb
sub
jo
nop
loopne
test
inc
test
out
sar
inc
add
or
aas
xor
inc
rcpps
lock
cmpl
cld
inc
lds
and
pusha
sub
mov
inc
xor
add
popa
jmp
fdivs
dec
les
cli
adcb
add
or
shl
lret
or
xor
nop
or
or
out
orb
add
ds
add
pop
mov
inc
pushf
mov
notb
les
add
test
and
push
jo
xchg
xchg
mov
movsb
mov
pop
sub
push
fbld
lret
add
add
push
xchg
add
nop
imul
pop
sub
add
pop
rclb
nop
jns
bound
push
ret
loop
or
or
mov
or
int3
in
pop
cmp
test
sub
rclb
popa
xor
mov
mov
push
fs
mov
pop
add
sub
pusha
pop
dec
in
adc
ja
push
es
xor
push
pop
and
pusha
jmp
sbb
mov
fcoms
fsubs
fimull
les
lret
mov
push
fdivrp
jnp
jg
pop
test
add
ljmp
subl
insb
push
adc
add
or
dec
sahf
fmuls
in
xor
nop
adc
rcrb
dec
jg
insl
scas
and
jl
fwait
jne
adc
fs
mov
repz
pusha
add
ds
js
adc
add
push
ret
ss
xchg
das
and
pop
push
aas
and
dec
int3
dec
xchg
adc
push
imul
rolb
mov
inc
mov
inc
push
jb
test
xchg
and
and
or
mov
sti
sub
inc
xor
lock
stc
cmp
inc
mov
data16
xchg
in
sbb
push
or
push
dec
ficomps
ja,pn
fucomip
sbb
push
test
fmull
pop
imul
je
adc
add
mov
adc
outsl
push
push
mov
adc
or
pop
adc
nop
outsb
in
fs
mov
fiadds
add
decl
push
lock
jne
xchg
outsb
sbb
insb
or
rorb
push
sti
cmpsb
jp
jbe
push
call
adc
ret
xor
subb
cli
lods
adc
pop
subb
push
jae
loope
inc
pop
cmp
jle
lds
sarb
dec
popf
add
xchg
divb
or
mov
cli
xlat
cmp
stc
mov
fisubs
aam
rorb
or
and
jo
or
ja
fcoml
int3
roll
stc
jne
sub
aas
sub
or
mov
enter
inc
std
shr
addr16
ljmp
outsb
jmp
enter
das
cmp
mov
sti
std
gs
stos
mov
in
xor
jbe
shll
or
aaa
lock
fildll
idiv
lcall
out
mov
mov
dec
or
jmp
xor
es
add
dec
and
jp
ficoml
xchg
inc
pop
loopne
in
or
or
or
inc
decl
test
mov
lret
repnz
dec
dec
push
dec
add
push
xchg
fdivp
cmp
inc
pop
sti
shrb
sub
je
jo
adcl
lods
xchg
sbb
jb
mov
cmpsl
mov
hlt
std
repz
or
shrl
push
pop
push
cmp
ds
mov
inc
inc
adc
call
pop
dec
inc
repnz
pop
and
aam
dec
jae
adc
add
sub
jl
loope
test
jo
mov
or
sbb
push
mov
cs
push
inc
cmp
jmp
xor
xchg
jmp
loopne
adc
outsl
les
add
inc
leave
sbb
jne
add
ljmp
add
test
fs
sub
ret
and
mov
std
or
popa
push
and
fcoml
loop
dec
clc
imul
test
and
pop
sbb
enter
jmp
hlt
inc
jnp
add
inc
enter
fwait
jl
test
aas
pusha
es
cmp
cmp
add
dec
mov
cmp
call
fwait
cmpb
or
and
mov
fcoml
cmp
subl
ret
movsb
notb
sbb
and
jecxz
insb
mov
js
xor
push
inc
or
popf
test
aas
cli
sbb
leave
jae
xchg
ret
pop
pop
adc
leave
jb
sbb
dec
call
push
out
testb
push
mov
movb
xor
jbe
and
mov
fnstsw
fldl
mov
and
lret
outsl
adc
lea
xchg
pop
rorb
lock
xor
inc
movl
subb
mov
sub
pop
out
xor
dec
push
inc
cmp
pop
je
and
jne
lret
enter
or
and
test
jle
nop
call
pop
lea
xchg
clc
inc
adc
repz
popf
les
inc
sub
push
jp
pusha
imul
adc
or
sbb
pop
push
xlat
inc
fstpl
add
fs
sub
int3
xchg
or
shl
push
mov
andb
clc
mov
hlt
add
lods
xor
inc
mov
mov
push
fs
sub
inc
push
arpl
add
popf
mov
addb
mov
int
lds
testb
and
mov
cmp
orb
gs
call
sub
lock
push
fmul
mov
and
dec
jge
call
adc
push
cli
add
mov
out
es
push
fadd
inc
fs
sub
imul
push
mov
push
dec
je
pop
in
test
mov
xchg
adc
push
xor
loopne
shlb
ret
and
outsl
add
sbb
and
pop
imul
push
pushf
fsubp
in
sbb
xor
lcall
cld
inc
ror
cmp
iret
add
pusha
sbb
mov
xor
xchg
pop
sub
shrb
and
jl
push
stc
and
xor
mov
cs
sub
push
sbb
cld
das
adc
rclw
cmp
add
cmpsb
incl
aam
pop
xor
dec
xor
push
inc
out
and
add
outsb
mov
inc
pop
push
dec
jnp
repz
cli
std
add
add
push
mov
inc
mov
push
pusha
xchg
sub
cs
imul
mov
cli
add
push
xor
push
dec
and
add
subb
jb
add
dec
dec
mov
push
hlt
incl
test
or
fmuls
or
or
andb
or
pushl
orl
xchg
cmp
push
mov
adc
or
fadds
cmp
jmp
dec
std
subw
add
pop
loop
icebp
in
inc
mov
mov
inc
push
decl
pop
test
jmp
enter
outsb
loope
jbe
clc
add
int3
mov
adc
mov
pop
addl
cs
or
push
je
ret
adc
mov
jmp
and
jne
mov
fisubs
mov
lret
sub
mov
adc
repnz
clc
adc
add
sub
je
insl
rorb
loope
cmp
fimull
test
or
test
ret
jb
repnz
in
push
add
lock
or
xor
popf
fildl
loope
xchg
xor
insl
push
jne
mov
jecxz
mov
or
push
mov
mov
xchg
movsb
jns
dec
push
mov
orb
xchg
xor
out
adc
jae
call
inc
in
rclb
sub
inc
sti
pop
add
xor
xor
in
aam
fsubrl
in
xor
gs
clc
push
insl
test
test
sub
pop
jb
xor
or
fs
fs
cmp
push
outsb
int3
sub
into
add
sti
divl
jecxz
push
paddw
dec
dec
adc
and
paddq
fmul
inc
push
shr
adc
and
jecxz
fs
test
inc
adc
lds
adc
and
cmp
push
lock
push
jnp
pusha
fnsave
dec
adc
or
jo
stos
fs
or
push
scas
mov
std
inc
jmp
sub
fists
push
ret
adc
mov
clc
test
sbb
mov
lock
ret
and
popa
and
add
lea
test
or
test
mov
enter
xor
jbe
pop
scas
cmp
clc
jmp
pop
cltd
je
sar
test
rorb
adc
dec
cli
ret
xor
mov
in
mov
lods
shlb
add
cli
dec
sarb
add
test
pushf
push
cmp
cmp
cmp
pop
jne
push
cmp
test
rclb
xchg
cs
add
push
adc
mov
movsb
les
fadds
and
inc
and
adcb
in
pop
pop
or
and
jmp
cmp
lcall
xor
lock
test
jmp
and
mov
mov
jae
mov
xchg
insb
or
push
pop
or
sahf
xlat
cmpsb
and
mov
mov
push
add
inc
cmp
cmpsl
insb
jl
icebp
sub
sub
shrl
push
cmp
testb
adc
ret
add
test
mov
cmpsl
loop
rcrb
mov
fldcw
stos
and
jbe
jne
xchg
std
pop
js
pop
mov
mov
mov
adc
lock
and
jmp
fists
loopne
sahf
cmp
fcmovbe
pop
aam
hlt
add
fiaddl
ljmp
pop
mov
cmp
cwtl
ret
mov
mov
rol
push
xor
outsb
pusha
push
mov
nop
jmp
outsb
outsl
arpl
or
adc
sbb
add
outsb
test
mov
pop
push
xchg
cmp
or
add
cld
stos
iret
inc
xlat
movsl
xchg
clc
xor
cmp
stos
cltd
mov
add
inc
add
push
lahf
mov
fs
push
es
addl
imul
cmpl
or
test
add
sub
xchg
cmpb
clc
addr16
adc
xchg
movsb
sarb
addl
iretw
pop
or
lods
mov
or
inc
push
dec
xor
mov
and
adc
adc
pop
cmpsl
shrl
std
mov
adc
out
aaa
push
sbb
mov
jg
sbb
and
repnz
std
push
push
or
add
or
dec
int3
inc
inc
push
pop
inc
test
mov
stc
mov
cld
fcompl
cmp
jecxz
or
cmc
sbb
sbbb
mov
sbb
outsb
push
mov
inc
xor
mov
mov
fcmovnu
shrl
hlt
cli
enter
mov
fadd
int
xchg
sbb
bswap
loopne
lods
add
inc
and
nop
pop
adc
push
aam
clc
add
mov
push
xor
gs
or
in
jmp
pop
add
jmp
mov
inc
cli
jo
adcl
dec
push
xchg
jb
insb
xor
push
jmp
dec
arpl
fidivrl
test
out
inc
xor
mov
shr
popa
imul
aas
sub
fimull
std
imul
roll
into
call
mov
popf
mov
and
in
adc
negb
xor
xchg
push
jmp
or
or
test
lock
decb
out
mov
sbb
mov
inc
cmp
clc
mov
jg
je
xchg
leave
decb
ds
and
inc
jne
sub
mov
adc
cmp
enter
std
dec
adc
jle
ds
or
push
sbb
mull
into
icebp
out
and
ret
int3
loopne
sar
aad
push
in
pop
int3
pushl
and
movsb
xchg
test
push
xchg
sub
and
cli
push
jne
or
jge
xchg
es
xchg
xor
add
icebp
or
mov
jp
int3
mov
adc
jbe
fiadds
mov
jl
xor
dec
loopne
add
mov
rorl
and
mov
sbb
mov
lds
cmpps
xchg
popa
cmp
inc
js
mov
mov
testl
shrb
xchg
mov
cmp
and
inc
leave
jmp
pop
and
cmpsb
fs
movsb
add
xchg
icebp
jbe
sbb
and
push
dec
loop
sub
idivb
mov
cmp
dec
and
jne
sub
sub
lea
push
xchg
mov
fstpl
mov
dec
dec
pop
fs
call
and
sub
sbb
movsb
mov
adcb
test
jl
inc
pop
ljmp
out
gs
xor
push
in
pop
push
aam
dec
scas
dec
mov
lock
mov
mov
lock
mov
xor
call
mov
out
into
lea
sbb
inc
mov
and
cmp
ret
test
mov
clc
out
mov
add
or
and
adc
out
sar
pop
adc
mov
and
mov
bound
dec
jo
cld
bnd
imul
sbb
mov
fcomp
fcmovbe
push
pushf
push
jbe
fmull
je
mov
test
ret
aam
or
or
sub
test
inc
jl
dec
nop
out
in
mov
push
jns
mov
push
push
mov
gs
dec
cmpsb
inc
popf
dec
pop
cmp
icebp
fs
add
adc
cmp
cs
adc
lea
inc
adc
adc
cld
js
mov
add
es
mov
sti
jl
jl
rolb
jle
adc
fwait
pop
xor
pop
in
xchg
push
add
push
je
pop
std
std
sbb
push
ljmp
pop
loopne
imul
mov
addr16
adc
and
dec
jo
mov
xchg
hlt
scas
push
dec
cmp
ret
mov
adc
es
inc
jo
dec
pop
inc
and
outsb
add
ljmp
adc
cmp
insb
cli
cmpsb
push
cmp
or
xor
mov
mov
clc
xlat
mov
push
sub
data16
not
int
mov
cld
sti
push
sahf
pop
xchg
mov
push
addr16
adc
loopne
cmp
cmpsb
js
pop
pusha
loope
cmp
fiaddl
add
xchg
lea
cmp
bound
mov
stc
add
call
scas
xchg
shrb
lsl
fs
push
js,pn
xchg
mov
sub
or
add
jmp
push
cs
pop
decl
jne
add
dec
sub
mov
mov
or
daa
stos
cmpsb
inc
jmp
rclb
jne
xchg
stc
into
add
mov
push
rorb
or
push
adc
mov
xchg
ret
mov
testb
pop
sbb
inc
jb
inc
mov
mov
push
xchg
fdivl
ljmp
and
std
add
sar
int3
rclb
mov
in
lds
sub
mov
int
rolb
cmp
mov
cmp
imul
jne
clc
fwait
adcl
jle
inc
and
loop
add
enter
loopne
sub
repz
shrb
fs
pop
fldl
or
mov
mov
push
adc
mov
pop
xchg
xor
je
jb
xor
test
jo
or
push
and
pop
or
pop
add
outsb
lods
or
rcl
ret
int3
clc
jle
lret
mov
push
scas
xor
stos
jne
lahf
insl
jecxz
add
mov
loopne
mov
in
cli
cmp
mov
dec
aas
and
addb
ds
add
in
cld
popf
push
movsb
push
or
add
inc
adc
out
jbe
xlat
andl
push
mov
std
ljmp
cmpl
mov
imul
mov
orb
push
push
cmp
push
xorb
mov
and
mov
loop
xchg
xchg
push
pop
inc
mov
adc
add
in
jp
sbb
cld
pop
inc
pop
pop
push
adc
cmp
sbb
mov
daa
lea
loopne
push
test
inc
fdivrl
sub
mov
jg
add
mov
sbb
push
faddl
loopne
mov
bound
es
ljmp
and
and
std
xor
add
imul
hlt
xchg
cli
dec
add
inc
sbbl
lcall
out
mov
adc
add
inc
fistpl
add
loop
add
add
pusha
les
mov
scas
sub
mov
push
jb
and
popa
xchg
jg
inc
rolb
cmp
lods
inc
insb
push
inc
xchg
or
xchg
adc
out
xchg
fadds
fidivl
addb
cmpsl
push
rcrb
adc
rcr
or
add
xchg
pop
push
add
sub
aas
push
mov
std
shrb
insl
aas
and
xor
addl
mov
inc
dec
dec
ljmp
sub
pop
nop
psllq
or
pop
mov
push
and
lock
cmp
mov
mov
hlt
daa
jne
rolb
shrb
lea
pop
cld
adc
mov
and
inc
cmp
add
and
push
or
jae
and
mov
push
cld
add
cwtl
adc
fs
xchg
addb
sbb
movsl
int
mov
dec
insb
mov
sarb
or
add
adc
mov
pop
aam
test
cmp
in
sbb
fbld
cli
out
jbe
mov
add
push
ljmp
xchg
rolb
or
std
dec
pop
push
clc
dec
mov
adc
call
ja
mov
add
or
mov
inc
dec
aaa
adc
jmp
inc
xchg
aam
or
xchg
dec
dec
ret
aaa
test
je
out
pop
push
mov
out
jbe
fcompl
test
or
test
xor
and
cli
add
jb
inc
js
pop
push
loop
cmp
idiv
movsb
jg
ret
xor
xchg
aaa
in
test
sbb
sbb
in
pop
sub
mov
or
mov
push
inc
adc
lods
cmc
je,pt
cmpl
rorl
lods
jp
je
mull
add
push
jne
jmp
decb
gs
lods
cli
inc
sbb
ss
stc
clc
xchg
mov
push
sub
push
add
sub
sbb
and
ficoml
jecxz
pusha
js
test
xchg
test
mov
push
lcall
mov
jmp
jl
ja
or
outsb
scas
rcrb
push
sub
fidivrl
in
es
add
jge
cli
inc
push
jle
lock
enter
into
add
pop
sbb
into
scas
test
mov
test
rclb
sbb
inc
popa
cld
mov
sarb
push
xchg
adc
dec
push
xor
jp
mul
pusha
mov
sbb
aam
cld
sbbl
ret
inc
out
push
mov
scas
and
bound
add
xchg
inc
add
or
cmp
add
xor
lods
out
movsl
lret
scas
xor
pop
and
ret
cwtl
stos
cmc
or
add
mov
jo
cmpsb
pop
mov
add
decb
enter
add
pop
and
or
cmpl
notb
xchg
or
sub
rol
scas
pop
add
add
fwait
and
mov
jmp
or
jle
mov
adc
cmp
outsb
xchg
xchg
les
add
mov
imul
sbb
and
cmp
inc
call
and
push
and
pop
or
pop
mov
ljmp
sub
rolb
or
push
mov
fs
jne
mov
scas
sahf
ljmp
push
mov
mov
xor
jno
mov
scas
fcom
lods
cwtl
shlb
push
test
lods
or
lock
adc
or
push
stc
jp
mov
and
push
test
hlt
scas
push
pushf
and
add
jnp
mov
cmp
or
inc
push
mov
les
or
mov
pop
enter
rcrl
fcoms
fmuls
rclb
lret
faddp
cmp
xchg
push
dec
xchg
test
push
in
cmp
lea
fisubs
sbb
lcall
es
shl
fcoml
xor
cmp
ljmp
je
xorl
call
movsb
cmpsb
and
dec
xor
test
add
push
adc
icebp
das
inc
cld
cmp
cmp
mov
inc
sub
add
test
xchg
cmc
inc
or
xor
jmp
cmp
pop
dec
sub
out
push
insb
xorps
push
addr16
cmpsb
imulb
loop
insl
cmp
push
cli
shrb
mov
jle
test
mov
scas
loopne
adc
and
mov
pop
pop
add
jle
pop
push
mov
les
in
cmp
dec
dec
mov
loopne
inc
insl
ret
shrl
mov
push
test
sbb
xchg
push
loopne
leave
mov
in
sub
nop
movsb
lock
ret
mov
xchg
push
sub
push
jl
std
in
and
cwtl
and
test
adc
add
outsl
push
adc
bswap
rorb
nop
sub
outsb
jo
lods
sub
adc
pop
or
jg
loopne
ret
mov
cmp
cli
and
adc
cli
push
testb
stos
xchg
add
xorl
rclb
in
mov
jbe
or
add
pusha
inc
ja
test
mov
inc
pop
and
dec
and
pop
push
call
std
dec
dec
dec
cli
cmp
call
into
cmpsb
lock
nop
push
enter
mov
cld
sbb
and
push
pop
into
fisubs
mov
and
mov
loopne
add
popf
dec
jg
lods
cmp
je
rorb
dec
testl
sbbl
mov
fcompl
mov
cmp
sub
xchg
test
std
aad
loopne
mov
pop
add
mov
push
fs
xor
or
xor
push
icebp
neg
cmpb
mov
faddl
aam
insb
lea
movsl
popf
clc
and
adc
fidivrl
psadbw
cwtl
xor
dec
jae
xor
and
xchg
xor
stos
pushw
in
cmpsb
lcall
adc
mov
cli
push
rolb
sahf
mov
mov
push
insb
shrb
sub
inc
test
add
mov
jbe
adc
jo
jmp
inc
cmp
in
sti
outsl
mov
adc
push
ret
in
mul
ss
or
xor
out
adc
sti
cmp
add
sbb
dec
mov
js
mov
push
pop
and
cmp
cmp
jb
add
and
push
pop
push
fmull
aam
mov
fwait
pop
aaa
push
jne
jne
push
pop
sarb
push
xor
push
jmp
test
cmp
in
push
leave
sarb
lock
xor
xchg
ficoms
pop
cmp
push
cld
jge
pop
push
mov
add
lret
imul
scas
clc
scas
cmp
push
cmp
and
cmp
fstps
jge
mov
int3
js
xchg
je
cmc
mov
sub
insl
mov
dec
aam
shl
push
call
test
ljmp
sub
shlb
call
mov
or
add
arpl
add
sbb
cwtl
push
lret
push
cmp
pop
int3
sub
gs
pop
sbbb
lret
jb
adc
aas
mov
iret
xor
add
add
push
fcomip
fcompl
stos
sub
rolb
cmp
shrl
shl
push
or
hlt
push
add
and
and
and
cmp
shlb
jne
andl
pop
sahf
push
test
pop
inc
test
cli
mov
pop
psubsb
rclb
lods
add
insb
ljmp
arpl
mov
sbb
dec
ret
gs
insl
pop
inc
mov
xchg
stos
movsb
cld
xchg
lea
shlb
mov
adc
mov
add
jmp
add
cmp
call
dec
or
shrb
xchg
pop
inc
push
or
add
seto
iret
add
jecxz
lcall
scas
push
xor
test
xchg
pop
push
pop
lret
test
ss
adc
push
loope
scas
js
xor
sbb
mov
pushf
loop
jg
sahf
sbb
mov
push
jmp
add
add
aaa
adc
sti
mov
push
lock
fdivp
call
faddl
push
dec
cld
test
cmp
sub
add
call
call
std
mov
inc
aas
icebp
addr16
dec
sbbb
in
jno
es
mov
or
cs
bnd
call
aad
mov
call
outsl
sbb
and
adc
adc
push
add
sti
adc
sbb
xchg
pop
subl
pusha
lea
rorb
add
jbe
xchg
out
out
lahf
lea
testb
stos
lods
aaa
jns
cmpsb
sbbl
insb
mov
loopne
inc
mov
adc
ret
or
andb
pop
jg
insb
out
in
adcl
pop
xchg
sbb
mov
sub
outsl
adc
test
aam
rclb
jge
inc
xor
out
ret
loopne
adc
add
testl
idivb
and
pop
ret
and
lcall
dec
dec
enter
jg
inc
testb
pusha
xor
aam
adc
movsb
sub
test
cmc
dec
bound
loopne
jae
mov
xor
xorb
aam
aad
pop
sub
pop
test
cmp
sbb
or
or
pop
fcmovnb
xchg
stos
sub
pop
hlt
scas
mov
dec
clc
jbe
cmpsl
or
jl
cmc
decl
cmp
and
xchg
push
xor
imul
add
and
push
cmp
fs
clc
inc
lods
add
push
nop
add
or
or
adc
push
ficoms
sbb
or
inc
push
into
andb
inc
jne
or
fs
movsl
repz
fs
mov
sbb
mov
push
mov
mov
out
in
push
pop
sbb
mov
sub
loop
xchg
inc
ret
inc
or
sbb
pop
call
push
hlt
sbb
sbb
pop
cmp
add
int
iret
mov
pop
insl
push
mulb
adc
push
mov
adc
dec
out
mov
fcompl
cmpsb
iret
test
idivl
ret
inc
cli
add
ds
insl
xchg
testb
mov
sub
clc
pusha
push
scas
sbb
pop
fs
ja
fs
cld
pop
rcl
and
adc
ss
jmp
or
mov
push
sbb
inc
xor
hlt
sahf
add
loop
mov
enter
add
stos
mov
xor
icebp
jno
sbb
scas
push
pop
push
jge
repnz
or
add
mov
test
xchg
push
pop
push
std
shll
pop
sar
inc
add
pop
cli
test
dec
add
sbb
adc
xor
push
stc
es
or
pop
enter
mov
inc
inc
xchg
lods
jl
shlb
push
mov
xor
insb
sbb
mov
sarb
clc
cmpl
je
mov
test
cltd
or
dec
sub
test
push
and
mov
mov
push
mov
sbb
add
mov
jmp
sbb
fiaddl
rcll
or
dec
mov
mov
mov
cmp
loop
jg
push
add
addl
enter
inc
rolb
dec
sbb
mov
jge
mov
sub
or
mov
pand
adc
xor
dec
incl
inc
mov
stc
jb
psllq
fcomip
inc
ret
out
ss
nop
inc
xchg
inc
stc
sbb
sub
sahf
mov
add
fcmovnu
jmp
jne
inc
mov
push
nop
adc
add
es
mov
fildll
xchg
rorb
loopne
cmp
sub
lods
jp
mov
in
and
push
fidivrs
loope
push
ja
add
sbb
and
xchg
mov
mov
mov
unpcklps
push
adcb
cmc
rolb
lea
inc
loopne
xchg
pop
aaa
bound
inc
mov
push
add
ja
mov
push
jge
les
jp
mov
or
push
inc
imul
inc
push
test
pop
rol
jne
xor
int3
sbb
pop
pop
cmp
mov
xchg
inc
pop
or
adc
mov
add
mov
ss
mov
xor
aas
jecxz
call
dec
outsb
sub
sahf
inc
mov
mov
pop
lds
test
ds
inc
or
test
sti
add
xchg
flds
push
loop
cmp
dec
sbb
lret
ja
xor
mov
je
test
add
adc
sub
xchg
dec
pop
dec
inc
dec
inc
mov
and
lods
loop
andb
insb
mov
in
jb
xlat
rclb
sbb
ljmp
js
repnz
xor
movsl
mov
sub
lds
push
sub
jl
sub
aas
mov
push
stos
jle
insb
int3
dec
cmp
sti
insb
or
divl
movsl
test
jno
mov
cmpl
sub
push
popa
xor
cmp
scas
adc
pushf
mov
pop
sti
adc
sbb
pop
jo
push
out
push
or
cmp
dec
test
push
or
ds
int
xor
pop
xlat
in
lret
addb
fsubl
pop
push
xor
loopne
test
or
out
test
adc
cli
push
clc
xchg
push
pop
outsb
insb
rclb
enter
lret
ret
inc
mov
je
xchg
xchg
in
test
xlat
mov
call
cmp
call
cli
mov
rdpmc
insl
addb
je
add
enter
loopne
popf
inc
lods
push
ljmp
call
sbb
out
cmc
inc
orl
test
imul
sbb
push
or
dec
cmp
jb
mov
pop
or
nop
cs
cmp
or
pop
add
ret
mov
shr
xchg
push
clc
sub
imul
call
rolb
push
imul
dec
jge
jns
push
adc
in
or
xchg
ljmp
ss
dec
jge
mov
ret
add
xrelease
fnstsw
push
cld
mov
add
call
ret
ret
cli
jbe
push
sub
addr16
aaa
pop
mov
pop
shlb
in
fstps
add
or
mov
rorl
lods
sbb
in
or
ret
jbe
sub
int3
daa
or
push
dec
jo
mov
jns
pop
or
sbb
xor
jo
push
insb
adc
pop
add
mov
pop
dec
or
lret
add
insl
dec
bound
pop
cld
xlat
dec
inc
scas
jb
ljmp
scas
pusha
push
nop
aam
les
enter
add
push
lea
pop
ret
lea
jmp
ljmp
in
jg
ret
and
adc
sar
call
pop
fsubr
push
sub
repnz
faddl
mov
jne
jmp
jp
outsl
sub
pop
imul
xor
mov
sti
add
sbb
scas
add
xor
jmp
push
jp
and
outsb
jo
mov
mov
xchg
call
push
adc
ret
sub
jle
pop
in
mov
dec
leave
jle
jne
cs
jge
jg
mov
ljmp
xor
aad
enter
lea
and
enter
shlb
rcl
sub
sub
lods
mov
mov
push
ja
ss
mov
pushf
jge
subb
in
sbb
push
rolb
clc
call
sti
cmpsb
sub
clc
cmc
dec
add
push
std
lock
data16
insb
in
leave
push
jle
popf
cld
scas
mov
lret
sti
xchg
dec
inc
je
jb
lock
mov
testb
sub
das
nop
inc
and
mov
jmp
mov
mov
mov
push
js
inc
push
inc
out
mov
fsubrs
adc
push
push
test
call
sbb
daa
pop
je
dec
call
xchg
js
mov
sbb
test
fcmovu
and
inc
mov
adc
lahf
cmpsb
push
clc
ret
jl
sarl
push
rorl
jae
xchg
into
gs
rcll
ja
lea
mov
nopl
and
sbb
ss
lcall
out
adc
adc
out
dec
push
push
mov
jb
pop
mov
jne
cld
std
shlb
nop
pop
adc
hlt
rcpps
ljmp
jmp
sbb
rolb
add
jg
icebp
pop
xchg
lret
pop
clc
lods
mov
jge
xor
sbb
or
jmp
cmp
cld
es
and
push
je
push
cmp
add
test
push
mov
aad
add
pusha
pop
sbb
push
inc
mov
jbe
clc
push
gs
popa
in
dec
leave
push
ret
cmp
daa
mov
nop
dec
int3
fimuls
jmp
add
push
sub
adc
adc
loopne
cwtl
out
xchg
adc
push
pop
int3
mov
ss
les
mov
push
jp
les
push
push
call
int3
ficomps
jge
sbbl
adc
fwait
mov
inc
pop
enter
cmp
pop
jo
mov
jg
or
std
adc
or
push
mov
and
ds
mov
inc
push
fwait
mov
xor
sti
add
xchg
add
mov
scas
jmp
adc
mov
gs
insb
mov
das
xchg
push
xchg
pushl
push
dec
aam
mov
xlat
mov
mov
fs
push
adc
es
jg
jl
addl
das
or
push
jmp
fbld
int3
sbb
mov
cmp
cld
mov
push
bound
aas
xchg
lea
jle
jne
push
clc
addl
inc
mov
or
xor
xor
pusha
mov
jae
dec
pop
and
cmp
scas
adc
push
loopne
test
and
cmp
icebp
mov
test
inc
or
mov
pop
clc
push
pusha
push
outsb
cli
add
in
js
out
push
loopne
inc
add
pop
test
les
test
push
adc
das
cmpsb
dec
push
das
xchg
hlt
xlat
mov
cs
add
dec
out
aam
xchg
lock
push
add
ss
fadds
dec
jne
xchg
xor
test
loopne
rorb
mov
sub
test
les
sub
pop
inc
jmp
mov
mov
jo
add
shl
andb
adc
xchg
sahf
and
inc
push
test
push
insl
xchg
mov
loopne
in
in
ret
repz
push
ret
or
jb
add
xor
pop
sub
pop
fsts
fimull
jne
lret
and
aas
push
push
ret
inc
sub
nop
ret
sbb
mov
cmc
std
cmp
mov
les
or
roll
push
xor
jb
ljmp
inc
jo
lea
ljmp
imul
icebp
sbbl
and
outsl
push
mov
adc
test
push
add
pop
test
sub
push
jle
push
dec
sbb
jp
inc
xor
testb
push
decl
xor
lods
ja
add
loope
idivl
inc
xchg
xor
push
test
add
jp
and
fbld
push
lea
or
dec
lods
imulb
pop
imul
pop
clc
mov
jg
addl
out
adc
xchg
mov
mov
fs
adc
or
call
push
add
push
pop
mov
sti
push
adc
call
adcb
pusha
inc
loop
dec
daa
dec
adc
push
or
pop
push
int3
roll
pop
test
test
dec
inc
jb
inc
negb
or
jns
mov
jp
clc
add
iret
gs
pop
cmp
sbb
lds
mov
adc
cmpsb
and
inc
es
sub
dec
lds
sub
bnd
adc
ret
push
aas
add
jle
nop
lock
or
rcl
int
push
lods
push
push
pop
call
inc
pop
mov
adcb
mov
xchg
ret
faddl
adc
rcrb
filds
mov
in
mov
cld
loopne
mov
call
adc
sbb
mov
push
xchg
je
inc
shlb
pop
add
cmp
rcll
gs
nop
add
push
fs
xchg
mov
or
sbb
lock
jp
adc
xor
test
dec
or
nop
in
xor
cli
psubb
adc
dec
scas
pop
mov
es
sbbb
cmpsl
xchg
ja
rorb
add
test
cltd
ss
xor
mov
mov
xor
or
in
add
icebp
inc
sbb
int
inc
xor
cld
icebp
les
cld
loopne
or
jne
lcall
adc
jle
mov
or
lcall
enter
dec
clc
decb
mov
dec
inc
cmp
add
fwait
push
shrl
jo
push
cmp
push
inc
jmp
sbb
imul
dec
push
addl
mov
xor
clc
xor
mov
sbb
cmp
subl
sub
outsb
andl
ret
cld
push
loopne
jmp
sbb
clc
je
rclb
stos
adc
fidivs
mov
mov
sbb
pop
xor
push
hlt
xchg
hlt
mov
test
mov
sub
push
adc
inc
int3
push
sbb
fsubr
adc
or
loope
mov
in
fucompp
add
dec
or
in
lret
out
and
mov
mov
ds
or
idiv
sbb
rorb
and
push
fisubs
mov
aam
adc
add
add
je
jbe
add
push
shrb
pop
push
addr16
jg
fadds
clc
sub
jecxz
adc
inc
push
adc
popf
push
or
in
cli
adc
rorb
insb
adc
decb
dec
fwait
test
push
sub
xchg
mov
cmpsb
mov
int3
push
idiv
inc
paddusb
xchg
jns
inc
mov
loope
loopne
aam
inc
andps
je
mov
dec
and
cmp
imul
add
adc
cld
loopne
jae
add
jg
je
add
addr16
cmp
cmp
es
xorl
and
je
mov
adc
or
pop
push
aaa
mov
xchg
jnp
xor
mov
adcl
imul
leave
push
mov
add
int3
mov
push
pusha
jle
cmp
out
inc
aad
push
pop
mov
push
dec
cs
dec
ljmp
lret
jle
xchg
dec
out
setne
fsubs
ljmp
call
and
fs
mov
fucomi
jl
hlt
pop
cli
pop
xor
cmp
add
cs
dec
cmp
xchg
cs
push
xor
ljmp
test
add
adc
inc
ret
imul
mov
shl
adc
add
testb
dec
loope
fs
mov
nop
sbb
xor
push
js
stos
fcompl
insb
mov
icebp
sub
cmp
clc
push
pop
xor
mov
push
adc
jg
sub
jne
mov
pop
insb
inc
pop
imul
mov
pop
dec
pop
xchg
inc
outsl
insb
pop
ret
mov
add
push
cmp
push
call
popa
cmpsl
pusha
ljmp
cld
frstor
ret
int
inc
gs
lea
movsb
and
mov
push
insb
shll
cmp
xor
xchg
notl
orb
pop
andb
leave
adc
mov
push
in
mov
test
jge
cli
dec
addb
fadds
enter
mov
sbb
test
sub
mov
push
and
jo
inc
or
test
bound
cmp
pop
push
sbb
ret
add
mov
and
or
jl
xor
jo
jl
nop
pop
outsb
mov
mov
jb
jle
push
mov
scas
dec
lea
mov
and
adc
lcall
xor
insb
push
inc
shlb
pop
xadd
push
outsb
add
out
je
adc
dec
loop
adc
loopne
mov
sbb
pop
mov
cli
or
call
call
bound
inc
push
inc
fidivl
pop
or
xchg
dec
push
shrl
and
adc
add
push
mov
lods
mov
pop
data16
divb
push
hlt
lea
jo
lods
jle
loopne
std
cmp
xchg
divl
mov
and
add
enter
or
psubb
mov
into
in
std
dec
adc
cmpb
inc
xor
call
les
push
add
push
xor
lods
inc
clc
pop
jns
push
insb
pop
dec
mov
sbb
lock
jnp
sub
adc
jns
inc
test
and
pop
ljmp
adc
or
xor
or
divb
cltd
movsb
inc
adc
mov
dec
mov
and
aaa
sbb
lods
push
or
test
and
jno
fbld
ljmp
lcall
sub
mov
pop
lock
incb
shlb
and
inc
ljmp
lret
ss
push
sbbl
cmp
xchg
inc
in
push
outsl
xchg
xor
xor
pop
pop
adc
pop
test
cli
aas
jmp
mov
cld
xor
adc
add
into
testb
int3
and
hlt
xor
out
jo
jne
add
fldt
or
loope
lret
movsb
pop
cld
xor
cmpsb
jp
lret
sbb
mov
inc
or
jmp
test
mov
ret
sub
mov
test
jbe
mov
or
inc
pop
mov
mov
jp
test
pop
xchg
sbb
sahf
fdivrl
dec
adc
mov
push
orb
xor
pop
test
add
roll
add
push
je
inc
inc
cli
push
sbb
push
jb
mov
add
rcrl
cwtl
mov
sbb
mov
jp
fwait
or
mov
loopne
sbb
jg
inc
push
fmull
push
cli
and
push
and
scas
outsb
sub
mov
mov
mov
inc
pop
cmpl
sarb
fdivs
xchg
mov
add
inc
cmp
xor
mov
xchg
les
mov
les
mov
and
xchg
sbb
insb
add
ljmp
sub
in
pop
add
push
icebp
xchg
loopne
jo
inc
lret
mov
add
or
push
push
add
daa
push
or
fimuls
inc
and
lock
inc
iret
lret
sbb
int3
push
adc
fiadds
inc
push
pop
icebp
lock
mov
mov
jne
push
xor
cli
outsl
mov
int3
mov
push
and
jb
fcmovne
data16
addl
fisubl
cli
cmp
jne
sbb
dec
xor
jo
addl
xchg
or
adc
add
fadds
xchg
stos
add
loop
cmp
gs
in
xor
outsb
fdivrp
dec
fsubs
adc
inc
push
and
add
pop
lret
icebp
mov
add
or
clc
mov
into
insl
adc
out
mov
sub
adc
nop
popa
push
sub
les
mov
add
ds
dec
push
lret
in
sahf
inc
and
add
fsub
mov
out
stos
cli
add
les
xchg
fs
aam
add
mov
add
add
cmpsb
add
push
jb
scas
pop
sub
lea
call
test
adc
jmp
push
sub
shlb
push
push
dec
pop
fsubrs
adc
incl
into
and
arpl
sub
ds
mov
adc
sbb
push
add
cmp
and
or
pop
test
cmp
cld
js
test
add
dec
xor
arpl
cmp
mov
push
je
cld
or
adc
cmp
mov
push
sub
out
pop
movsl
scas
mov
mov
sub
adc
mov
add
add
loope
mov
mov
pusha
push
xor
xor
into
ret
cld
mov
es
dec
dec
pop
and
xor
push
push
push
add
mov
xor
in
jmp
iret
add
fcoml
bound
pusha
pop
shll
addr16
cmpl
scas
sub
push
outsl
dec
xchg
ss
sub
fs
sti
pop
inc
aad
aad
xchg
sbb
div
push
inc
jl
lock
test
and
sti
and
loop
xor
sbb
add
mov
xchg
aam
jb
mov
pop
or
daa
mov
ja
aas
or
cld
or
stos
pushf
jbe
test
mov
cmp
hlt
xor
testb
jne
adc
das
cli
jne
jo
insb
jb
rolb
clc
push
dec
adc
lea
dec
cmp
dec
fbld
mov
in
inc
lock
loope
push
add
pop
pop
lret
add
sub
fs
out
insb
push
lods
push
out
pop
push
xor
call
xor
cld
add
outsl
sbb
ret
push
cmp
inc
test
shlb
or
or
ficoms
or
jbe
ljmp
sub
in
lock
movsl
test
lahf
test
mov
jle
xor
imul
inc
mov
mov
or
mov
adc
jl
adc
cmpsb
mov
add
loop
pop
cmp
push
mov
inc
inc
xchg
cmp
gs
lea
loopne
popa
cmp
movsb
sub
lock
xor
push
je
jno
add
les
push
add
jo
adc
jne
dec
jge
push
jmp
int
xchg
clc
int3
call
cmpsb
test
or
in
push
andb
mov
xor
je
je
call
dec
jge
jmp
sbb
popa
cmp
jmp
sbb
mov
sub
mov
fsubs
and
fmul
push
adc
out
add
jle
test
cmp
addb
and
gs
test
push
addr16
xchg
test
jo
mov
addl
gs
xor
inc
inc
jp
dec
adc
mov
test
test
ret
add
insb
xchg
lock
out
popf
je
subb
cmpsb
fdivr
jbe
mov
andb
push
int3
inc
adcb
outsl
rorb
inc
add
xchg
jb
dec
xor
das
hlt
add
mov
add
fcoml
mov
pop
fidivrs
aam
idivl
fdivrl
mov
cmp
mov
jne
pop
ret
clc
jb
xchg
xlat
push
push
jmp
sarb
add
add
inc
dec
dec
cli
test
push
mov
inc
daa
data16
pop
aam
adc
enter
call
cmp
call
dec
sbb
cmp
adc
hlt
rol
mov
in
pop
inc
xchg
insb
stc
and
add
dec
nop
jl
sub
inc
adc
loopne
clc
data16
je
push
stos
sbb
xor
adc
stc
mov
inc
xchg
and
fisttpll
push
cmpsl
rcrl
sti
or
pushf
std
push
jmp
inc
es
clc
movsl
add
js
add
push
lcall
or
outsb
lods
call
test
mov
sub
adc
xchg
cs
lods
test
xchg
pop
xchg
rclb
mov
bound
cmp
ficomps
or
xchg
adc
adc
out
and
stos
cld
cwtl
sub
jmp
push
cmpsb
dec
xchg
mov
aaa
pop
xchg
inc
xchg
clc
sbb
xchg
add
adc
ret
dec
loopne
cmp
sbb
es
cwtl
cli
aad
push
lret
ljmp
mov
inc
or
idivb
fnsave
dec
mov
jb
je
xor
icebp
ret
movsl
jbe
mov
jmp
ljmp
out
ljmp
push
or
jmp
cmp
pusha
pop
aam
xor
test
orb
pop
xor
cli
nop
mov
push
repz
mov
lcall
or
and
sub
outsl
incl
xor
push
lea
add
arpl
add
les
insl
pop
je
xchg
into
insl
cmpsl
or
js
lcall
or
xorb
aam
hlt
mov
ror
test
cmp
fcoms
cmp
jmp
stos
call
rolb
adc
test
mov
aad
js
in
or
sbb
sbb
data16
arpl
lods
test
jne
outsb
into
rolb
pop
ljmp
lods
mov
les
je
stos
nop
clc
mov
pop
sahf
dec
cmp
arpl
add
add
dec
mov
and
outsl
push
push
add
or
xlat
call
sbb
jmp
jl
mov
add
loop
mov
repnz
loop
adc
scas
mov
xor
mov
loope
jne
pop
aam
pop
popf
lea
test
push
decl
push
sub
mov
in
cmp
push
cmp
pop
hlt
pop
push
je
mov
lea
dec
out
scas
xchg
push
fisubrl
jle
push
outsb
dec
popa
sbb
cmp
push
adc
imul
dec
sbb
or
insb
xchg
jmp
in
and
sub
lea
jg
pop
arpl
adc
orl
mov
mov
mov
subb
xchg
jle
dec
or
rorl
pop
test
dec
push
fsubrs
fldl
cmpsl
aas
pusha
out
sbb
inc
add
mov
leave
add
pop
push
std
inc
pop
or
push
jne
js
push
mov
imul
or
int3
js
fs
inc
push
xor
repnz
incb
add
jne
add
xchg
jo
bnd
pop
push
or
xor
cld
sbb
adc
cmp
xor
push
fdivp
test
sbb
xor
adc
push
ret
or
mov
inc
sbb
jmp
pop
fcmovne
cmpsb
push
xchg
incl
inc
adc
rol
arpl
and
lock
decb
inc
or
sub
add
mov
cmp
and
into
push
popf
cmp
and
or
jne
mov
add
adc
test
mov
je
add
pop
sbb
inc
fs
jo
mov
mov
movsb
imul
push
les
jb
adc
or
mov
pushl
jo
inc
mov
sbbb
mov
cli
fadds
and
sbb
push
aad
push
hlt
orl
movsb
leave
enter
mov
das
push
ficomps
clc
sbb
in
jae
mov
pop
shlb
mov
inc
sub
xchg
in
sbb
fisttps
mov
lret
fistl
call
ror
adc
xchg
cmpsb
mov
xor
fcompl
pop
add
cmp
jp
cmp
mov
insl
mov
sub
pop
outsl
dec
add
push
push
in
adc
rcrb
pop
pop
shrb
and
or
cmp
push
adc
ljmp
sahf
mov
lods
insb
dec
pusha
cli
jo
inc
or
ljmp
faddl
mov
jp
lock
lea
mov
mov
movl
in
mov
std
pop
outsb
add
fimull
mov
add
jp
sti
scas
add
sbb
mov
mov
aam
out
inc
std
sub
mov
mov
or
pop
and
push
lods
incb
ds
push
incl
jecxz
sti
movl
sub
mov
nop
xchg
mov
push
mov
jae
mov
shr
aam
push
das
stos
pop
arpl
clc
cmp
sahf
je
sub
call
loop
insb
push
add
lods
push
out
dec
cmp
clc
inc
cmpsl
cmp
mov
fs
pop
and
outsl
sbb
xor
adc
sub
add
add
jmp
xor
inc
pop
mov
filds
das
sub
nop
inc
adc
jne
incb
add
sbb
add
dec
loop
add
mov
xchg
mov
js
repz
mov
pop
test
add
cmp
push
not
push
lock
js
fldt
add
cmp
pop
push
add
add
cmc
hlt
cmp
and
ficoml
xchg
sbb
mov
or
imul
inc
push
pop
add
rcr
mov
ret
out
jne
popa
adc
mov
add
and
inc
clc
movsl
mov
es
test
sbb
mov
lods
cmp
jno
sbb
add
push
xchg
push
outsl
mov
or
mov
adc
jmp
incb
loopne
cld
nop
add
sub
dec
push
cmp
rcr
mov
mov
divl
pushf
subl
inc
test
test
jne
push
xchg
incb
ljmp
loopne
inc
roll
xorl
sub
dec
sbb
das
and
pushf
push
mov
push
rol
aam
push
add
or
ror
fisttpll
mov
mov
mov
pop
divb
in
mov
lods
mov
rorb
adc
cld
mov
adc
fdivs
hlt
jmp
add
cmp
inc
pop
rorb
jae
lcall
out
shlb
add
loop
test
inc
sarl
xchg
dec
dec
xchg
test
inc
add
ror
xchg
jo
pop
push
push
push
cmp
cld
adc
je
dec
xchg
push
pop
enter
cld
pusha
mov
xor
adc
ffree
pcmpeqw
dec
or
les
adc
cli
outsl
adc
cmp
gs
icebp
jl
test
test
popa
cli
pop
sarb
in
or
dec
push
call
push
add
cld
cmc
rol
inc
mov
fs
jno
pusha
enter
push
and
out
sbb
mov
fistpll
std
xor
jle
dec
in
cmp
rorb
ds
fs
ss
rcrb
xor
push
cmp
push
sar
jg
cli
inc
push
je
popf
xor
xor
cmp
mov
hlt
cmp
addr16
ficoml
push
sti
add
mov
inc
les
repz
dec
mov
bound
xchg
jno
fs
mov
add
aad
and
stos
mov
fiaddl
loope
leave
cltd
shlb
or
outsl
hlt
inc
js
aas
sbb
push
jb
gs
add
add
adc
sub
jp
test
push
adc
and
or
sub
jl
add
or
or
nop
jb
and
int
out
mov
adc
push
add
push
sbb
lret
roll
inc
mov
lock
mov
push
pop
cmp
mov
mov
fidivrl
mov
inc
ret
fsubrs
lock
and
stos
push
es
jne
sub
in
mov
dec
push
mov
xor
mov
roll
and
rorl
call
int3
andb
clc
pop
inc
das
loope
lods
jl
sub
incl
sub
jno
dec
and
adc
mov
fs
sbb
jg
outsb
or
addl
js
xchg
inc
clc
pop
jno
jmp
jne
pop
cmp
lret
cmp
fmuls
les
add
mov
lcall
inc
dec
and
lcall
ret
add
cs
or
call
cmpsl
insb
ret
outsl
pop
sub
or
adc
addl
jmp
sbb
notl
dec
pushf
mov
gs
call
pop
cli
loope
pop
xchg
push
xchg
or
add
inc
fsubrs
lret
cmp
movsl
shrl
ds
movsb
inc
pop
dec
ss
clc
bound
mov
ljmp
test
mov
adc
enter
mov
icebp
sub
pop
ud0
icebp
cmpxchg
orl
ljmp
push
int3
mov
cmp
imul
fadds
mov
shlb
cmp
testl
call
and
pop
cmp
push
cli
rdtsc
add
call
ljmp
xor
pop
or
cmp
incl
js
aam
xor
pop
mov
jo
mov
sub
xor
clc
mov
mov
test
dec
mov
jge
jmp
lcall
xchg
jb
mov
jmp
lock
mov
or
sbb
push
pop
inc
dec
mov
mov
mov
pop
push
pop
mov
shr
or
jg
mov
add
je
push
dec
orb
aaa
sbb
jbe
cmp
aaa
xor
lret
mov
decl
mov
mov
jbe
add
clc
js
incl
push
mov
rorl
push
lock
shrb
into
push
dec
dec
jp
mov
lods
or
adc
and
mov
roll
psubd
dec
mov
mov
or
sub
inc
ret
mov
mov
push
mov
dec
mov
or
push
mov
add
dec
sbbb
dec
lods
pop
pushf
adc
clc
imul
rorl
add
psllq
rol
lock
fs
add
and
call
lds
lods
mov
lea
cmp
orl
enter
es
or
mov
xor
pop
mov
jne
mov
das
lahf
mov
xchg
bound
and
and
das
movsb
dec
call
lea
inc
outsb
inc
test
call
inc
clc
sub
lea
mov
add
inc
sub
mov
enter
fs
or
addr16
mov
lods
inc
popa
mov
test
add
jg
mov
jo
mov
inc
jb
pop
inc
decl
mov
adc
cmp
inc
fadds
mov
or
inc
jb
icebp
bound
lock
lcall
inc
push
xlat
pop
push
inc
add
js
ret
pop
push
adc
push
mov
sbb
push
dec
push
add
pop
cs
mov
sub
cmp
js
cmp
pop
sub
mov
data16
dec
popf
ret
or
xor
push
fbld
enter
add
cld
decl
jmp
add
rol
lret
test
fisttpll
push
in
and
inc
dec
ds
sbb
mov
add
insl
arpl
ret
push
enter
gs
jg
mov
lds
xor
pop
or
mov
les
ljmp
inc
imul
xor
int3
mov
test
or
push
pop
clc
push
jo
call
mov
or
push
xor
mov
test
or
adc
mov
lea
ret
sbb
xor
jle
push
add
push
dec
lea
mov
mov
jb
incl
or
push
push
mov
lea
divb
push
push
pop
adc
jb
xchg
cmp
inc
imul
cs
lea
mov
aaa
or
xchg
sub
or
shrb
lahf
clc
clc
cs
cld
mov
cltd
inc
add
jge
popf
les
cmpsb
jne
push
nop
push
pop
and
enter
adc
sub
adc
sub
cmpsl
pop
fistl
cmp
aaa
add
cwtl
ljmp
adc
ljmp
dec
xor
out
or
test
mov
ljmp
xorb
xchg
or
cltd
loope
mov
lea
lea
jecxz
call
ret
test
sub
push
xor
adc
or
dec
and
push
add
and
sbb
hlt
add
or
adc
cli
fimuls
sbb
test
in
cmp
inc
add
adc
sahf
scas
les
pop
inc
mov
dec
mov
dec
add
shrl
mov
adc
test
loope
mov
cld
mov
movsl
fimull
cmp
lods
push
push
mov
or
xchg
hlt
fadd
or
push
inc
out
pushf
sti
xchg
sub
cmc
jmp
rorl
icebp
adc
addr16
pop
mov
cli
sub
inc
lock
push
or
fcompl
xor
sub
int
add
push
std
adc
add
xor
inc
stos
xchg
int3
lock
sbb
mov
std
aaa
test
xchg
andb
andl
and
test
ret
aas
add
sahf
fisttpll
subb
adc
cmc
mov
push
insb
arpl
pop
popa
jecxz
je
adc
inc
insb
aad
add
mov
rolb
shl
lods
and
test
cmpsb
and
fcoml
ret
mov
jecxz
mov
xchg
gs
push
inc
mov
cld
pop
sub
xor
push
and
adc
pop
xchg
incb
test
insb
sub
jae
dec
incl
jo
call
or
jo
cmp
xor
inc
inc
cmp
rcrl
ror
lods
push
push
xor
jbe
adc
decl
call
inc
loope
inc
push
mov
nop
pop
xchg
ret
adc
je
in
imul
add
push
lret
jle
addr16
adc
shlb
jae
xor
pop
mov
cld
cmp
testb
dec
sbbb
and
dec
adc
jb
aad
subb
imul
push
js
mov
shlb
mov
dec
push
andl
mov
enter
adc
test
lock
hlt
xor
push
push
pop
lods
std
add
dec
call
ret
and
rolb
pusha
outsb
xchg
jecxz
cmp
in
popa
add
and
sbb
inc
lcall
jmp
inc
inc
stos
iret
sub
cmp
xchg
inc
push
ret
enter
lret
lcall
jbe
fists
lret
dec
lods
inc
ffree
push
fwait
xor
nop
sbb
jb
cltd
clc
mov
ss
dec
push
mov
push
mov
hlt
adc
jbe
stos
out
and
int3
and
or
cmp
icebp
mov
addl
push
or
or
mov
lea
or
add
dec
ljmp
je
sti
push
decb
fsts
and
push
push
fmull
jnp
xchg
dec
lods
repz
std
rcr
mov
mov
dec
sbb
dec
push
in
enter
lcall
mov
sub
pop
jmp
je
rclw
loope
loopne
jne
call
xchg
lahf
mov
push
js
cld
xchg
lea
test
push
xor
or
call
jge
mov
das
jp
cmpsb
add
test
inc
adc
push
adc
pop
xchg
sbb
and
push
and
inc
call
pop
mov
and
enter
outsl
call
jge
mov
xchg
mov
out
clc
push
push
int3
inc
std
xor
pop
je
sub
lds
fwait
xor
mov
lea
hlt
pop
jne
mov
xorb
sbbb
test
pop
add
and
popa
push
data16
andl
jmp
mov
fmuls
push
jge
cmp
scas
and
xor
fldl
xor
sbb
mov
das
add
outsb
pop
out
pop
dec
or
test
add
fbld
adc
test
mov
bound
in
inc
popa
xchg
cmc
push
xchg
push
mov
add
popf
jne
xor
aas
push
lret
das
out
popf
add
adc
shll
pop
outsl
mov
jmp
clc
mov
cmpsb
nop
xchg
decl
data16
mov
or
sub
inc
sub
adc
les
add
mov
or
je
aas
push
inc
cld
fbld
add
sbb
mov
add
add
adc
stos
rclb
and
daa
add
negl
lock
xchg
pop
je
inc
icebp
lock
inc
jecxz
pop
sbb
mov
add
and
jge
push
mov
mov
jne
or
js
push
icebp
aaa
cld
sub
mov
or
ljmp
sub
mov
jmp
in
sbbl
ret
mov
ds
test
jmp
add
cmp
push
clc
and
scas
pushf
mov
sbb
call
mov
popa
cld
fldenv
pop
adc
adc
mov
mov
or
xor
arpl
inc
pop
add
divps
mov
sub
lea
gs
pop
cmc
and
mov
icebp
inc
fstl
bound
orl
movsb
int3
mov
push
insl
adc
lcall
xor
loope
in
mov
xor
loopne
movb
cld
je
mov
fs
loopne
enter
cld
pop
std
cmp
in
and
mov
mov
jae
ljmp
push
mov
adc
lret
addl
adc
insl
enter
push
cld
outsb
mov
jo
sbb
rcll
sbb
jo
shrb
xor
jb
pop
lods
inc
add
xchg
pop
mov
outsb
xchg
inc
orb
sbb
dec
test
hlt
push
outsl
adc
fists
sub
mov
popa
test
subb
dec
imul
sbb
mov
jo
inc
faddl
nop
nop
inc
inc
rorb
mov
pop
add
test
negl
aas
push
out
out
lea
mov
and
call
xchg
add
mov
jmp
pop
mov
xor
adc
mov
ds
mov
adc
inc
pop
mov
cmp
jl
add
jl
jb
loope
dec
jp
out
mov
mov
std
subb
add
push
pusha
mov
xorl
daa
mov
xor
jecxz
call
sbb
shrb
inc
dec
pop
int3
inc
test
test
jge
call
rcrb
loopne
fdivl
mov
nop
test
or
into
cld
or
into
or
pop
sbb
ds
mov
je
jne
incl
movsb
pop
je
add
bound
push
pop
paddw
dec
adc
xorl
pop
pushf
sbb
or
nop
or
rol
inc
repnz
inc
cmp
inc
cs
adc
xor
cld
lret
repnz
in
xlat
and
xor
xchg
pop
test
jne
imul
idivb
loopne
fs
int3
insb
movsb
arpl
push
jmp
jnp
mov
mov
into
adc
adc
addb
in
cld
call
scas
enter
outsl
sub
jne
mov
mov
inc
popa
sub
jb
dec
dec
scas
js
dec
inc
dec
push
cltd
pop
test
rorb
lcall
xchg
mov
pop
js
push
push
mov
lret
jp
inc
dec
mov
sbbb
pop
ljmp
or
icebp
or
dec
jbe
inc
add
jne
mov
and
adc
push
push
ret
cmp
mov
push
add
dec
sub
cmp
lret
cwtl
les
in
push
mov
add
hlt
push
push
call
push
and
pop
add
sbb
call
loopne
jl
sub
add
mov
inc
ljmp
add
sbb
inc
pop
mov
pop
sbb
push
mov
add
mov
clc
xchg
jle
inc
jp
or
mov
xchg
mov
and
adcb
ds
cvtps2pd
push
rorl
ss
cmpsb
dec
jmp
push
enter
pop
xor
add
mov
ficoml
add
nop
xlat
fcmovne
inc
pop
dec
hlt
fsubr
sub
loopne
jnp
fsubrs
loop
lcall
incl
push
jns
fimull
sbb
mov
mov
jae
inc
add
xchg
mov
inc
inc
jge
shl
sbb
or
aam
sub
pop
call
adc
push
shll
cli
jecxz
sub
jge
stos
nop
shlb
jo
xlat
sub
inc
push
dec
andl
in
subl
nop
test
xchg
inc
inc
pop
push
mov
and
and
xor
sub
jle
inc
pusha
sub
ficoml
and
dec
inc
int3
mov
clc
sbb
sub
rorb
dec
shlb
sbb
cmp
dec
dec
dec
push
mov
stos
in
movsb
aas
xor
and
inc
arpl
call
iret
test
push
adc
call
add
or
clc
testl
lock
fs
pop
scas
push
jmp
push
push
aas
push
pusha
fimull
jl
xor
in
enter
arpl
sbb
adc
icebp
aam
test
ds
xchg
push
adc
and
fsubrp
sub
add
jmp
icebp
out
rcrb
pop
push
cwtl
push
push
inc
push
movsb
test
movsb
adc
not
ret
xchg
leave
xor
add
mov
cs
or
gs
xor
ret
inc
stos
push
xchg
adc
cwtl
pop
mov
je
jb
xor
test
sbb
lods
sbb
dec
mov
add
lea
sub
mov
or
fldt
mov
or
sub
mov
stos
lds
mov
jecxz
mov
sti
xchg
or
loope
and
mov
aam
pop
bound
ds
inc
stos
inc
push
jecxz
xchg
jmp
push
or
out
shrb
jmp
dec
test
mov
mov
sbb
pop
add
add
xlat
std
dec
jl
add
or
dec
xor
or
xchg
push
dec
ror
scas
movsb
fists
mov
push
pop
cld
dec
push
mov
adc
ds
adc
sbb
negl
inc
out
iret
and
ss
jge
xor
push
sub
fsts
out
jle
loop
fdiv
mov
pop
xchg
clc
sahf
cld
pop
clc
push
rcr
js
dec
in
xor
enter
mov
or
fcoml
test
int3
shrb
sbb
divl
es
ficoml
adc
push
adc
cli
and
mov
pop
loopne
adc
sub
iret
andl
in
sarb
fistps
cmp
push
or
mov
cmp
inc
or
orb
push
fcomp
jo
in
xor
ret
add
pop
call
xor
leave
xor
cmp
fwait
inc
xchg
jecxz
call
add
int3
push
mov
fcoms
adc
sub
fcmovb
xor
inc
pop
das
xor
in
mov
and
lods
and
mov
aam
pop
dec
loopne
cmp
mov
pop
fisubrl
push
or
outsl
ja
push
mov
push
int
jmp
imulb
stos
xchg
neg
loope
call
clc
cmpsl
notb
out
or
sbb
sub
sahf
fwait
loop
fdivrl
notl
test
sbb
pop
push
mov
enter
mov
inc
jmp
adc
data16
jne
pop
rcrb
fildl
sub
sub
push
pop
cli
mov
fcompl
xor
adc
or
mov
xlat
lea
ret
dec
orb
jmp
xchg
call
pop
adc
pop
xor
repz
cmp
fs
js
adc
adc
adc
in
xchg
xchg
js
or
mov
mov
push
and
add
mov
pmuludq
les
hlt
inc
mov
adc
pop
adc
and
aas
push
mov
adc
in
outsb
ret
pop
cld
mov
inc
inc
in
xchg
mov
xor
add
and
add
out
inc
inc
hlt
adcl
lds
nop
lret
mov
xchg
push
and
in
rolb
lret
sti
int
into
ret
cmp
clc
add
and
xchg
cld
mov
ljmp
mov
test
add
pop
test
sbb
gs
adc
pop
pop
pop
lcall
adc
cld
insb
mov
mov
cwtl
cltd
fistl
xchg
add
push
xor
jecxz
test
fs
add
mov
cmp
mov
mov
dec
adc
std
xor
mov
pop
aam
mov
mov
push
or
inc
nop
lret
lcall
cs
js
fisttpl
xchg
xlat
outsb
loopne
mov
shlb
mov
and
jae
cmp
and
test
sub
push
inc
lea
dec
inc
std
or
mov
data16
pop
cmp
jo
lock
cmc
push
jbe
clc
cld
mov
mov
cmp
ret
push
out
jae
or
jne
mov
pop
add
push
sub
andb
sbb
sbb
aad
jle
add
jbe
loope
or
ret
mov
call
lods
sub
xor
ja
lock
outsb
sbbl
dec
adc
inc
xor
jp
mov
shl
aad
jmp
fcoml
andl
inc
jecxz
dec
jge
or
inc
ficoml
test
mov
sub
sub
add
inc
or
mov
add
dec
mov
adc
in
in
inc
loop
xor
mov
sub
add
dec
inc
push
jb
lds
test
jle
xorl
lcall
fld
push
movsb
add
adc
jecxz
or
inc
loop
sbb
mov
mov
lock
into
scas
pop
dec
out
mov
pop
int3
rcr
addb
cmp
mov
push
push
hlt
add
push
ss
rcrb
shrb
pop
dec
add
and
pop
iret
push
cmp
or
bound
cmp
lea
imul
push
pop
mov
sarb
inc
cltd
push
ret
ficoms
popf
lea
push
es
pusha
outsb
std
int
fcoml
lea
adc
pop
mov
sbb
dec
push
adc
insl
pop
psrad
xor
stos
fildl
add
lods
adc
fstpl
push
cmp
subl
clc
cwtl
mov
inc
ret
push
in
inc
cld
subl
jmp
dec
lods
mov
xchg
push
cmp
mov
lret
aaa
ds
arpl
xchg
lcall
pop
call
clc
xchg
push
mov
std
push
cwtl
cli
mov
lea
adcb
loopne
push
loopne
test
fmuls
pop
fstpt
dec
sub
je
dec
xor
cli
fwait
mov
add
fdivr
push
fmuls
pusha
and
jmp
popa
test
mov
mov
lock
loop
adc
enter
into
dec
or
mov
cld
adc
mov
pop
fs
adc
test
in
clc
inc
push
xchg
inc
push
test
xor
or
shlb
mov
mov
push
sub
sbb
addr16
gs
xchg
jmp
jbe
xor
insb
movsb
inc
scas
lea
nop
sub
mov
jne
lods
mov
into
push
mov
fisttpl
inc
and
cmp
pop
adc
cld
shlb
and
aas
xor
dec
ret
pop
inc
loopne
pop
mov
sbb
mov
int3
mov
add
and
add
pop
xchg
add
add
sbbb
inc
mov
popf
and
int3
in
dec
lods
inc
negb
stos
inc
cmpsb
push
jae
fwait
mov
or
xor
inc
jle
dec
adc
xor
outsl
hlt
aas
add
std
xchg
adc
pop
pop
inc
popf
mov
lcall
decl
movsb
push
adc
pop
adc
mov
lcall
mov
add
mov
sbb
je
xor
sbb
test
inc
xor
inc
fistpl
cs
int3
out
fs
inc
xchg
xchg
inc
aad
test
cmp
dec
xchg
test
outsl
cwtl
shrb
testb
mov
jo
and
in
mov
add
xor
mov
inc
inc
and
mov
push
add
ret
jl
add
insl
int3
clc
pop
inc
push
andl
cli
hlt
stos
fwait
in
enter
mov
ficompl
dec
and
sahf
repz
jle
pop
iret
mov
fs
sbb
dec
xor
mov
jle
fdivrl
ljmp
inc
cmp
or
inc
std
pusha
mov
in
inc
nop
dec
in
sbbl
inc
and
in
jmp
mov
jp
decl
inc
cmp
sbb
call
dec
shlb
adc
outsb
aam
push
and
mov
test
in
adc
icebp
aaa
adc
or
shll
or
lcall
ljmp
push
push
inc
add
cli
adc
adc
les
loop
push
pop
lret
rolb
xor
cld
stos
enter
cmpl
ret
fcoms
xor
test
mov
rcr
lcall
insl
dec
pop
and
inc
rolb
jbe
gs
fs
add
cmp
loope
and
adc
fadd
fistpll
adc
das
ljmp
and
lahf
inc
notb
inc
call
insb
mov
and
mov
mov
inc
cld
imul
mov
adc
loopne
aaa
fdivl
cmp
push
sarl
int3
pop
lock
bound
dec
mov
fwait
push
cs
or
aam
imul
dec
hlt
shl
call
xchg
js
dec
lock
add
fs
ja
push
adcl
imul
lcall
fisttps
push
pop
push
test
test
mov
dec
mov
inc
mov
subb
pop
cmp
movsb
add
xor
arpl
aas
xor
mov
cmp
fs
hlt
subl
ss
call
xchg
cmpl
mov
adc
cli
or
inc
mov
dec
xchg
mov
std
mov
js
std
pop
outsl
add
mov
cmp
mov
imul
dec
and
add
push
mov
loopne
jle
jge
sbb
or
pushf
mov
mov
cmpsb
mov
fisubl
in
add
mov
xor
pop
adc
fisubrl
nop
ds
inc
jmp
adc
push
jns
adc
dec
insl
dec
hlt
lea
dec
cwtl
adc
mov
dec
lcall
insb
sbb
push
jle
leave
xor
orl
cs
cli
mov
add
lret
jp
pop
call
movsb
cld
push
mov
lea
lcall
cmp
int3
call
nop
sbbl
and
mov
push
mov
and
or
call
cmp
add
or
push
sub
call
add
xor
pop
pop
dec
cmp
cli
ret
or
ror
mov
adc
in
fdivr
sysenter
pop
pop
les
jge
mov
adc
lock
ret
rcll
call
js
shrl
es
popa
rcr
fwait
data16
stc
mov
iret
xchg
pop
mov
add
sub
cld
push
lock
sbb
jne
cld
pop
ffree
mov
iret
mov
je
pop
mov
xor
push
shl
hlt
lock
push
or
lds
outsb
test
inc
ret
nop
cmp
pop
sub
je
loop
lcall
pushf
adc
push
inc
leave
add
lds
data16
xchg
cmp
mov
lock
sbb
movsb
lods
cmp
push
sbb
and
sarb
mov
xchg
data16
cmp
cld
mov
adcb
add
mov
aam
xchg
xchg
pusha
lret
adc
dec
jl
sub
cmp
pop
push
jne
push
fisttpll
push
jnp
pop
addb
mov
or
xchg
and
xchg
xchg
test
pop
scas
or
lret
xor
stc
xchg
jl
mov
faddl
xor
adc
cmp
or
hlt
cld
push
push
pop
in
fcmovbe
mov
dec
pop
push
or
push
add
testb
cmpsl
xchg
xchg
push
dec
fstl
jo
clc
jbe
decl
test
push
out
mov
push
in
movsb
jae
xor
lret
xchg
sbb
dec
jne
inc
pop
fisubrs
sub
enter
jae
dec
push
cmp
addb
add
dec
out
sysret
nop
movl
inc
loop
and
push
jb
pop
mov
ljmp
or
stos
es
xlat
xchg
jmp
xchg
sub
aaa
sbb
dec
lea
mov
mov
addb
xlat
dec
mov
mov
adc
adc
sub
lea
rcll
sub
sbb
mov
incl
add
and
test
pop
pop
es
lock
add
sahf
pop
leave
add
push
cmpsl
adc
and
in
pop
not
int3
ret
shlb
adc
add
clc
clc
lods
lods
daa
aam
testl
mov
and
and
xor
jl
mov
push
xor
inc
inc
fsubrl
insb
idivb
mov
pop
push
js
xor
xor
das
xor
push
xor
mov
daa
out
mov
push
and
rorb
popa
cmp
test
popf
dec
in
cmp
insb
adc
mov
jmp
lds
lea
call
push
fmuls
js
mov
xor
mov
xchg
sub
sbb
test
js
and
decb
mov
clc
insb
popl
mov
and
rorl
lea
insb
dec
mov
push
mov
dec
decl
xchg
insl
ljmp
inc
add
repnz
adc
loope
shl
mov
cmc
add
and
test
mov
jae
mov
cmp
pop
stos
test
hlt
lods
sar
ss
lods
idiv
jno
je
jne
mov
push
push
punpcklbw
cmp
subb
jecxz
cmpsl
orl
push
mov
and
insb
xchg
cmp
es
fxch
add
jo
add
mov
sub
push
hlt
iret
jg
add
add
xor
std
cmpsb
test
pushf
mov
push
inc
mov
add
xchg
sbb
cmp
call
ret
adc
sub
fs
stos
sbb
popf
adc
clc
pop
push
inc
push
mov
ret
in
push
daa
pop
sub
push
adc
sbb
jne
std
and
outsb
add
outsb
pop
push
jge
in
xor
movsb
mov
jne
push
cld
dec
jne
fs
in
mov
std
or
je
xorl
push
sarl
sbb
les
or
xchg
sub
sbb
xchg
or
sbb
pop
pop
stos
xorl
lret
mov
pop
rcr
mov
fildl
or
fidivl
or
call
fs
jo
mov
lock
mov
jo
mov
cmc
test
xor
sub
or
and
adc
aas
arpl
mov
cltd
nop
repnz
mov
dec
insb
add
test
mov
xchg
xchg
add
mov
popl
cwtl
addl
and
nop
mov
xchg
cmp
adc
lock
rorb
lret
pop
andb
loopne
outsb
fmulp
xor
inc
cmpsl
lock
mov
mov
rorb
pop
jge
or
xor
int3
je
jp
nop
xor
rorb
add
imul
mov
out
imul
pop
movsl
outsl
jmp
pusha
mov
mov
add
jg
jnp
lods
mov
dec
cmp
jle
pop
add
cmp
lea
jmp
adc
rol
jne
mov
wbinvd
pop
mov
icebp
jg
or
hlt
inc
insb
mov
stc
xchg
orb
mov
aam
mov
add
aas
pusha
inc
enter
call
loopne
add
xor
push
in
scas
out
push
sub
xorl
aam
inc
and
fiaddl
in
loopne
notl
xor
cmpsb
mov
wrmsr
inc
stos
call
sub
dec
in
and
js
loope
add
pusha
push
pop
mov
data16
call
push
jl
cmp
clc
pop
add
mov
push
mov
add
js
mov
inc
mov
mov
mov
arpl
push
sbb
test
test
hlt
popf
gs
icebp
push
mov
and
pop
dec
adc
rcl
loopne
jmp
xchg
fdivr
xor
jle
add
shrl
les
mov
adc
in
or
xor
and
push
xchg
jb
pop
adc
add
and
insb
ljmp
or
sbb
enter
test
pop
fdivl
adc
mov
mov
pop
sbb
lcall
fs
clc
sbb
test
adc
sub
lea
shl
outsb
daa
test
mov
mov
xor
int3
decl
daa
dec
adc
popa
sbbl
movsb
fsubrs
or
inc
pop
sub
mov
shr
dec
jo
and
sub
sbb
sbb
dec
sbbb
xchg
jp
ret
sub
cmp
cmp
mov
xchg
sbb
mov
cmp
add
insb
loope
and
addl
dec
push
push
add
dec
inc
pushf
jbe
outsl
push
add
lock
or
les
cli
jb
xor
pop
add
dec
add
inc
jnp
sbb
sub
loop
shrb
hlt
adc
loopne
push
mov
dec
out
dec
pop
xchg
js
lds
addb
xadd
xorl
dec
sub
pop
push
push
pushf
and
aam
xor
push
sbb
in
sbb
mov
jmp
push
jmp
shlb
mov
mov
in
mov
pop
ss
call
test
pop
enter
sub
inc
scas
orl
les
mov
jne
stos
push
inc
scas
insb
cld
notb
loope
imull
leave
cli
mov
rcll
mov
aas
xor
hlt
scas
mov
test
popa
jbe
or
inc
jecxz
push
mov
cld
jg
test
adc
pop
dec
sub
stos
push
add
jne
pop
sub
push
ret
rorb
lea
add
push
clc
mov
push
pop
out
loope
sub
inc
lret
sub
inc
pop
and
and
int3
jg
fmull
or
cmp
dec
pop
clc
pop
xchg
pushl
scas
sti
add
push
or
and
es
mov
out
adc
add
push
adc
je
clc
mov
es
sub
jg
std
std
mov
into
add
loop
mov
mov
xor
test
stc
lcall
or
mov
dec
add
leave
adc
mov
dec
jmp
popa
rcr
cli
add
adc
mov
sahf
fmull
xchg
push
orps
call
imul
xchg
sbbl
dec
xor
xchg
sbb
int3
clc
inc
add
imul
sarl
push
push
xor
inc
ljmp
fxch
pop
sti
push
push
cmpl
loop
mov
mov
mov
pop
or
pusha
dec
movsb
push
mov
and
mov
sbb
adc
mov
inc
xor
insl
mov
cld
cmp
jne
mov
movsb
sub
es
cmc
adc
sub
pushf
push
add
and
dec
mov
push
sbb
out
sub
loop
jne
mov
pop
or
and
or
les
add
xor
jno
push
fldt
rcl
xor
imul
inc
movsb
insb
int
inc
adc
pushf
dec
push
jl
mov
mov
push
out
push
je
add
and
cmp
mov
push
sbb
dec
add
push
xchg
cs
dec
inc
sub
cmpsb
inc
je
push
mov
sub
sbb
pop
jbe
pop
je
dec
fnstsw
mov
dec
aam
out
jg
jmp
cmp
arpl
push
pop
roll
cs
inc
je
loopne
and
lea
inc
pushf
inc
xchg
pop
shlb
and
clc
inc
je
xchg
ss
dec
xor
sub
add
inc
mov
insb
loopne
stos
push
mov
inc
add
aam
mov
subb
std
sbb
push
mov
in
test
loopne
cmp
push
ss
cmc
push
mov
in
or
cmp
out
adc
add
movlps
jmp
sbb
divb
pop
pop
rolb
es
cs
fcmove
add
in
sbb
test
lret
push
clc
mov
pop
sbb
xor
xor
je
push
add
fidivl
pop
add
pop
xchg
call
fmulp
mov
mov
clc
inc
imul
fwait
jae
mov
arpl
xor
dec
clc
jno
loope
sub
xor
inc
in
mov
test
and
pop
lahf
cwtl
jle
mov
xor
outsl
add
pop
fsubl
fiaddl
push
imul
adc
jmp
insb
and
pushf
cmp
dec
sbb
test
in
mov
loopne
adc
inc
je
mov
mov
add
or
add
mov
mov
or
in
push
test
mov
inc
push
pop
je
add
mov
fs
fldl
test
sbbb
xor
test
mov
push
ret
inc
xor
repz
mov
shrb
mov
jo
cld
idivb
loop
pop
sub
cs
and
cld
mov
add
loope
mov
mov
aam
mov
test
sbb
les
cs
or
or
sbb
inc
roll
mov
push
icebp
push
or
jge
call
loope
imul
xchg
js
mov
movsb
and
mov
xor
ja
cmp
push
pop
xor
push
xor
orb
xor
outsb
and
movsl
add
dec
xchg
ljmp
nop
mov
loopne
pusha
push
popa
cmpsb
and
fisubrl
add
and
lods
mov
faddp
and
in
mov
lahf
pop
outsb
int
pusha
lods
push
mov
call
loopne
std
cmp
dec
nop
aad
outsb
and
fiaddl
in
push
mov
popa
mov
movsb
or
jns
hlt
adc
push
pop
lcall
push
lea
outsl
cld
xor
movsb
and
add
in
inc
movsl
lea
or
xchg
adc
enter
js
ret
ret
popa
mov
vmovddup
test
addb
push
mov
popa
test
fcmovnu
ret
out
dec
mov
pop
lods
out
cmp
lret
ret
sbb
push
mov
mov
shlb
xor
mov
dec
lock
dec
sbb
inc
push
mov
ss
aam
add
sub
xor
jne
insl
in
es
ret
jb
push
adc
lock
clc
out
add
nop
pop
insl
call
mov
jb
inc
jne
das
xor
mov
add
add
or
add
neg
xchg
orl
dec
push
or
jp
sub
loop
shl
add
mov
mov
nopl
lea
mov
push
insb
add
and
ds
jl
loope
jge
test
mov
xchg
sahf
into
lgs
cli
mov
leave
mov
shlb
cwtl
gs
pusha
mov
push
les
jae
xor
or
sbb
pushf
mov
out
aam
jno
push
js
push
xchg
jge
push
mov
loopne
test
push
dec
pop
adc
and
daa
sub
dec
pop
lret
add
mov
cmp
in
pusha
int3
mov
xchg
sbb
lea
out
ret
push
dec
dec
or
int3
xor
mov
adc
and
pop
sub
pop
lea
or
xchg
push
mov
adc
fdivrs
or
or
add
push
enter
and
dec
pop
mov
sub
cmp
push
lock
xchg
movsl
call
adc
and
subb
add
rorb
adc
lock
sti
fidivs
xlat
ljmp
inc
jmp
adc
cmp
jmp
cmpl
xor
sbb
mov
and
incl
jo
shlb
je
inc
mov
mov
and
mov
mov
in
ret
shrl
add
xor
add
dec
lods
scas
xchg
hlt
test
xlat
add
xchg
out
lock
cmp
clc
mov
pop
fcoms
je
loopne
out
sub
stc
pop
jecxz
dec
mov
push
adc
scas
dec
push
adc
xchg
ljmp
and
or
sbb
adc
inc
gs
aad
jo
outsl
pusha
mov
movsb
cwtl
pop
jl,pn
aas
adc
dec
test
cmp
jl
dec
mov
xor
xchg
pop
adc
es
or
or
mov
nop
fadd
adc
push
std
out
jmp
pop
inc
or
int3
push
pop
push
out
dec
and
aas
jg
jb
test
cmpsl
add
inc
cld
fs
xchg
add
push
or
les
fimull
rolb
mov
pop
sub
xchg
push
sub
stos
aad
jmp
xor
push
add
outsl
ret
hlt
rclb
dec
orl
lret
aaa
or
push
push
shrb
fimuls
mov
adc
in
push
or
stos
adc
lret
dec
lret
rorb
testl
imul
add
xchg
out
nop
mov
cmpsb
rcrb
mov
push
lea
dec
mov
jmp
xor
or
adc
or
subb
sahf
cwtl
rcrb
fdivs
jb
adc
mov
inc
js
fmuls
int
adc
ja
ljmp
adc
imul
or
test
xchg
rorb
test
call
test
push
mov
fists
pusha
adc
push
pop
xor
inc
push
sbb
jl
ret
cmp
push
rcrb
mov
psadbw
inc
sub
add
dec
adc
mov
sbbl
jmp
bswap
fcoms
je
shlb
xor
fiadds
ret
fcoms
push
test
mov
pop
lcall
stos
sarl
jnp
sbb
cmp
or
mov
aas
mov
movsb
or
data16
cmp
ljmp
xchg
movsb
sub
cld
mov
cmp
adc
push
test
push
add
call
dec
sbb
loope
pop
jg
xchg
fwait
call
addr16
cmp
mov
mov
push
dec
cmp
dec
pop
in
imul
or
ret
pop
daa
sbb
and
add
jbe
lods
sarl
adc
into
pushw
add
and
neg
pop
ds
mov
out
add
jbe
test
cmp
mov
mov
pushf
push
mov
adc
or
ja
aad
push
jl
dec
pop
mov
jne
jl
cmpb
nop
inc
aam
mov
stos
out
int
pushf
in
cmp
clc
in
add
js
xor
add
ljmp
rcl
cmp
dec
add
sahf
fbstp
xchg
add
cmp
jmp
jbe
enter
ja
sub
fadds
xor
push
and
popa
test
sub
mov
rol
and
mov
inc
jnp
gs
inc
hlt
or
xchg
push
jg
or
jb
jle
push
inc
jmp
pop
daa
insb
mov
ret
mov
cli
les
sarb
add
add
popf
xor
enter
dec
cmp
lds
jbe
jmp
xor
jmp
hlt
add
or
int3
jle
jge
sbb
loopne
mov
add
push
in
loopne
push
mov
mov
or
pop
sahf
cmp
mov
cwtl
incl
mov
add
rol
push
inc
test
mov
push
mov
lret
enter
aad
out
add
add
lock
je
fucom
sub
inc
lret
push
adc
lods
call
or
mov
rorb
mov
push
sub
adc
scas
insl
pop
cld
test
and
pop
decl
test
add
xchg
sarb
pop
add
xor
mov
or
push
fstl
pop
push
hlt
aas
and
sbb
lock
js
jge
adc
xor
int3
push
jmp
inc
push
gs
push
roll
aam
sahf
aaa
adc
ljmp
mov
arpl
sub
or
mov
dec
insb
fs
push
jnp
into
mov
nop
push
stos
pop
and
or
mov
sbb
fsts
in
or
aaa
ret
add
imul
jl
aam
aad
aas
pop
jmp
jbe
jb
out
cli
roll
addb
pop
jne
jg
fdivrs
imul
lock
xor
pop
mov
sub
xor
mov
sbb
mov
xor
push
add
clc
psllw
or
sub
sub
ds
out
add
mov
cmp
cmp
mov
xor
sbb
add
pop
nop
adc
cmp
inc
pop
mov
sbb
adc
test
mov
pop
or
adc
xor
add
cli
cmc
push
or
sbbl
adc
mov
dec
fisttpll
int
xor
add
sub
push
and
xor
fadds
les
mov
push
jb
and
test
dec
cld
imull
jmp
cmp
and
add
pop
mov
or
inc
ret
jne
pop
das
dec
xor
mov
lods
sub
pop
aam
call
push
mov
mov
test
mov
add
xchg
push
loopne
xchg
ljmp
jns
or
dec
int3
mov
mov
pop
and
push
pop
push
rcll
sub
test
fisubrs
jae
jmp
aam
or
push
add
jmp
movb
push
push
test
mov
test
jmp
add
fiaddl
sub
stos
push
out
sub
add
lds
mov
push
pop
adc
aam
inc
pop
es
jp
pop
jg
lea
xchg
loopne
into
push
popf
mov
and
or
xchg
loopne
push
or
rcrl
shlb
testb
jo
cmp
push
mov
add
mov
pop
call
inc
inc
inc
adc
cmpsb
adc
add
add
int3
pushf
xchg
add
sti
imul
loop
inc
mov
bound
push
add
and
cld
in
add
or
or
mov
inc
call
mov
xchg
shl
notb
in
call
notl
push
jge
xchg
hlt
cmp
sbbb
ret
lock
subb
insb
mov
sbb
or
add
adc
mov
mov
fs
mov
cmp
cmp
mov
or
ret
loopne
mov
rcrb
sarl
add
test
scas
and
mov
add
pop
cmp
xor
rorb
sbb
mov
cmp
test
call
jg
push
add
jle
data16
mov
pop
and
dec
lock
outsl
aaa
and
mov
pop
decl
cld
cmp
or
je
sbb
sbbb
add
xor
gs
pop
sbb
jo
pop
adc
cmp
pop
inc
adc
gs
orl
push
movups
and
test
pop
in
hlt
dec
mov
push
arpl
xchg
movb
mov
adc
fsubl
jle
mov
adc
or
jle
outsl
mov
in
loopne
mov
adc
adc
vaddsubpd
sahf
xchg
icebp
pop
fs
mov
inc
push
mov
adcb
cmp
inc
jne
lret
ljmp
js
sahf
loopne
mov
mov
cmp
pop
add
scas
inc
mov
add
sbb
addr16
loopne
pop
movsl
inc
decb
fadds
mov
std
decl
call
push
mov
js
std
and
sbb
adc
jge
push
mov
data16
call
imul
push
jne
pop
and
mov
inc
cmp
add
jmp
adc
rolb
mov
aas
call
out
pop
xchg
in
dec
push
popf
rcll
testb
mov
push
cmovnp
test
pop
mov
cmp
rolb
add
sbb
mov
sub
dec
jg
add
testb
int3
cmp
mov
inc
mov
xor
lea
pop
rcrl
adc
xor
xlat
jo
or
xchg
call
adc
fs
mov
xor
mov
or
es
mov
test
add
into
sbb
inc
push
jmp
push
ss
lea
pushf
jle
movaps
xor
cmp
sub
add
add
imul
aad
cld
inc
shr
jb
outsb
push
cwtl
lock
scas
pop
loopne
adc
mov
inc
pop
ds
mov
mov
mov
test
add
xlat
pop
or
fxch
push
push
push
jp
data16
mov
push
je
mov
xor
or
mov
repnz
sub
mov
sar
add
jmp
and
add
repz
or
xchg
ret
lock
std
cld
dec
mov
jecxz
xchg
dec
aam
cmpb
push
addb
dec
fsubrl
js
or
or
mov
loopne
test
addl
xor
and
add
add
test
movsb
aad
xor
out
js
jp
mov
push
adc
in
jle
jo
dec
test
add
pop
hlt
xchg
movsl
cmp
mov
test
dec
adc
push
cwtl
test
cmp
ja
pop
lea
inc
cli
sub
pop
je
and
push
jb
aam
jmp
or
pop
cmp
dec
data16
data16
test
push
push
in
push
js
test
ljmp
fcoml
sub
or
lret
pushf
or
mov
dec
aaa
sbb
mov
fsubs
pop
mov
and
push
imul
xchg
cs
sub
push
xor
or
les
out
mov
cld
push
adc
jnp
cmp
pushf
mov
jle
cmc
add
cmp
imul
inc
jge
inc
dec
lret
mov
add
outsb
lods
xorl
cmp
inc
jmp
or
add
pusha
add
fiaddl
aam
pop
pop
loopne
arpl
icebp
imul
mov
leave
ss
mov
inc
mov
jb
movsl
xchg
outsb
dec
cmp
hlt
ret
and
test
arpl
call
or
jmp
fdivr
fildl
jne
test
mov
mov
inc
push
jo
mov
mov
inc
in
rorl
inc
push
push
adc
sub
sarb
xor
ss
sub
aad
cli
jae
jmp
call
popf
pop
push
je
ret
push
inc
or
or
inc
jb
ret
inc
loop
shrb
cmpl
mov
sahf
sub
sbb
push
stos
inc
loope
mov
mov
and
jb
sti
mov
jmp
dec
xorb
xor
add
das
pop
out
add
mov
push
and
enter
push
cmpsl
inc
or
pop
ret
pop
and
sbb
insb
into
jne
divb
pop
or
mov
cli
inc
cld
pop
xchg
ljmp
lods
push
bt
imul
cmpsb
lcall
fisttps
fidivl
or
insl
push
data16
scas
xor
inc
inc
add
rcrb
pusha
mov
lods
clc
xor
or
filds
jae
jne
mov
outsb
mov
lods
outsb
jmp
inc
push
or
add
and
mov
push
shrl
sub
outsb
add
add
fcomp
cli
push
andl
xor
rorb
sarb
mov
jae
jle
mov
imul
lahf
andb
push
pop
mov
dec
and
or
aam
into
in
xchg
or
lods
xor
jmp
xor
xor
pop
test
fs
or
adc
fdivr
idivb
push
incl
roll
fs
movsb
in
jmp
or
ret
or
mov
pop
pushl
and
inc
lods
sbb
roll
sbb
pop
int3
rorb
imulb
inc
pop
or
lret
movsl
shr
inc
sub
push
adc
jae
and
push
push
mov
decl
add
xor
or
adc
mov
lcall
lea
enter
xchg
xchg
inc
mov
pop
fs
adc
jmp
push
iret
pushl
int3
push
imul
xor
push
clc
popf
int3
mov
jge
sub
mov
push
test
cmp
repnz
and
push
pop
mov
icebp
push
addb
add
mov
test
dec
mov
cmc
push
popf
xor
sbb
push
mov
or
fidivs
mov
pop
stos
cs
xchg
and
push
ret
rol
xor
xchg
add
cwtl
jle
jne
xor
je
mov
mov
add
sub
shl
pop
psllq
data16
xchg
xor
mov
xchg
sar
fisubrs
sub
or
mov
or
or
aad
jp
inc
and
push
or
cs
mov
in
xor
and
call
mov
enter
dec
pushf
xor
mov
add
inc
inc
add
int
cmpsb
add
xchg
fimuls
lock
jmp
cmpsb
jle
and
test
jle
sbb
lahf
push
test
cmp
sar
inc
flds
stos
fwait
mov
adc
push
add
dec
dec
bnd
inc
mov
jg
in
xchg
xchg
movsb
inc
add
jle
test
pop
cwtl
fmull
push
testb
push
mov
or
dec
cli
pop
push
mov
push
pushf
popa
imul
and
add
inc
clc
andl
notb
jp
std
push
std
je
cld
andb
mov
pop
mov
pop
inc
cmp
pop
add
aam
gs
int
mov
clc
lock
lea
xorb
andl
pushf
repz
insb
push
popa
insl
lret
sbb
testb
or
pop
icebp
sub
jle
push
add
mov
or
xor
mov
add
stos
cmp
pop
push
ljmp
dec
lcall
cli
cld
push
inc
pop
insl
or
pop
adc
out
pop
or
mov
jae
and
add
loop
ss
xchg
pop
mov
jo
push
in
dec
inc
xchg
test
mov
cli
call
push
jae
or
pmullw
inc
mov
inc
sahf
pop
xchg
lahf
jle
jmp
cld
sti
sub
push
push
in
inc
ret
je
stos
sbb
or
test
stc
adc
pushf
out
add
inc
or
sub
jg
fistps
lea
sahf
clc
inc
je
xorb
or
push
mov
inc
pop
sarb
push
orl
notb
or
jle
rclb
sub
inc
push
dec
mov
out
mov
clc
test
fcmovnbe
mov
pop
add
cltd
mov
daa
mov
lret
jg
adc
adcl
mov
or
pop
cmp
mov
add
aad
add
push
mov
add
test
lea
sbb
dec
sahf
jl
rcr
or
push
jo
mov
or
loop
jmp
loopne
inc
mov
push
std
out
xchg
mov
ds
enter
lret
mov
sbb
fdivrl
mov
lock
mov
rolb
pop
mov
pxor
add
insb
mov
lock
push
xor
rorb
nop
popf
sbb
movsb
ret
imull
movsl
pusha
adc
lret
pushf
sbb
das
and
mov
sbb
jl,pt
pop
sub
movsl
int
dec
ficompl
cs
or
sub
pop
scas
cmp
mov
dec
push
jg
fistl
sbb
adc
add
push
mov
aas
cmp
jbe
sub
ret
in
add
aam
add
mov
pushf
stc
std
loopne
mov
pop
sbb
inc
insb
cs
push
sbb
push
sbb
pop
adc
lcall
mov
addb
dec
dec
mov
fnstcw
insl
fmull
inc
fcomps
outsb
mov
fcoms
sbb
sub
push
nop
lods
adc
jp
je
push
cmp
xchg
xor
aad
adc
and
pop
scas
sbb
cmpsb
push
hlt
adc
enter
jo
popa
xchg
and
or
ja
popf
movsb
xchg
push
ja
inc
test
mov
add
sub
ss
out
pop
outsb
pusha
dec
add
adc
stc
pop
jmp
mov
adc
or
mov
jbe
psllw
push
dec
popf
insb
jne
incb
jne
ljmp
test
pop
inc
pop
rclb
lods
adc
adc
adc
fisubl
sbb
pushf
inc
imul
loope
clc
aas
call
sbb
cmp
jno
mov
add
pop
cwtl
or
decb
lods
in
add
push
and
iret
int3
rolb
dec
test
jmp
push
shr
push
mov
and
test
jp
pop
imul
sub
mov
call
rorb
andb
test
add
push
cmpb
sbb
mov
inc
or
xor
in
stc
sti
mov
push
call
popa
mov
fdivrl
jecxz
inc
aaa
lret
push
push
ficomps
shrb
cmp
dec
rolb
cmp
sbb
jbe
faddp
inc
cs
add
dec
mov
dec
mov
push
lea
imul
call
inc
std
xlat
aad
mov
call
inc
mov
xor
clc
movsb
js
inc
call
call
mov
es
rclb
les
test
faddl
rcpps
mov
inc
add
dec
xor
dec
nop/reserved
mov
and
rolb
cwtl
or
mov
add
xorb
shll
call
push
gs
push
xor
out
mov
inc
adcl
ds
or
push
cmp
leave
cs
in
clc
xchg
jne
sub
push
int3
cmp
les
dec
dec
jle
outsl
js
call
shlb
jb
movsb
mov
movsl
adcb
push
js
fdivrp
xchg
fcompl
lea
pop
inc
or
loopne
adc
sub
icebp
jne
dec
les
cmp
jne,pt
xor
jns
ficoms
xchg
pop
test
lret
shl
aaa
adc
lods
je
xlat
rcrb
pop
and
outsb
nop
test
rolb
ret
inc
and
pop
out
test
insb
adc
add
xchg
stos
out
outsb
enter
sub
push
lock
pop
inc
push
loop
and
sbb
in
aas
xchg
pop
mov
call
repnz
and
test
bound
adc
mov
loope
cld
mov
or
xor
xchg
xor
xor
pop
insb
xor
push
sub
mov
or
leave
sbb
sub
mov
add
sbb
mov
lds
jns
js
mov
cmp
icebp
rclb
ret
shrb
pop
add
loope
xor
mov
sar
aas
push
in
push
mov
cli
es
push
fs
je
nop
sbb
jp
hlt
dec
lret
mov
fsubp
loopne
in
shl
push
jno
arpl
cmpsl
aas
adc
nop
lea
shl
inc
jecxz
or
fs
or
cli
sbb
pop
lock
pop
mov
jge
push
xor
dec
orb
xor
fdiv
xlat
rol
jecxz
push
ljmp
ljmp
clc
gs
cmp
push
lock
stos
mov
cmp
jg
rolb
mov
add
test
fisttpl
repnz
adc
mov
xchg
js
xor
pop
hlt
fidivs
push
xor
xchg
sbb
pop
aas
push
les
mov
cmp
rclb
lods
arpl
ds
add
loop
std
or
jne
adc
add
loopne
clc
push
add
enter
and
jb
add
push
data16
leave
jmp
xorb
jo
addl
inc
pop
sbb
fdivrl
push
jbe
pop
adc
mov
fimuls
sbb
push
sbb
in
add
mov
cmpsl
mov
xchg
push
jmp
aad
add
jle
mov
cmp
add
in
pop
cmp
lock
push
sbb
lea
sub
sbb
fisttps
inc
xor
or
sub
clc
lea
hlt
or
and
pop
inc
push
add
inc
push
push
les
loope
fistps
sbb
mov
push
jo
mov
popf
inc
push
ret
sbb
ss
mov
les
int3
pop
sbb
roll
rorl
bound
and
fcoms
xor
jle
fildl
lcall
dec
adc
push
addl
adc
push
aaa
jo
enter
sub
xor
add
xchg
sub
xor
lea
movsl
pop
sbb
xchg
pop
clc
ja
mov
adc
clc
cmp
push
add
fidivs
cmpsb
mov
push
js
xlat
sub
orl
sbb
ds
insb
pop
andl
add
or
mov
jecxz
sub
movsb
mov
mov
dec
xor
scas
push
loopne
lds
test
inc
add
pop
cld
mov
mov
pop
add
pusha
mov
jb
or
aas
cwtl
pop
or
push
movsl
jo
inc
and
mov
mov
int
sarb
cs
std
xor
or
js
outsb
insl
scas
sbb
lret
mov
je
or
push
add
movsb
call
pop
pusha
aas
loope
add
and
insb
pop
push
inc
test
pop
or
jp
add
dec
test
cmp
outsl
into
inc
pop
and
pop
pop
xor
push
rcr
test
mov
incb
or
pop
mov
push
lahf
mov
shrb
ljmp
xchg
jbe
jecxz
dec
xchg
lock
inc
inc
jb
gs
xor
push
mov
out
sub
negb
jp
bound
xchg
testb
mov
ret
cmp
into
fs
sub
je
mov
push
push
mov
mov
xchg
pop
mov
adc
cli
pop
xchg
mov
adc
xchg
push
daa
or
inc
adc
and
popa
inc
les
push
add
sti
mov
add
ss
insb
movsb
cmc
and
sbb
repz
pop
cmpsb
aas
rorb
movd
js
add
push
outsl
rolb
movsl
mov
je
cli
or
loope
inc
mov
addb
gs
aam
mov
enter
js
mov
add
mov
pop
bound
xor
loop
test
and
cmp
rolb
imul
mov
ret
xchg
fsubr
dec
fs
push
adc
cld
add
push
orl
push
aas
pop
and
cs
push
lret
xor
repz
push
outsb
sbb
ret
lret
sbb
ds
add
rcl
and
jmp
sarb
lock
adc
add
inc
es
negl
add
and
mov
ds
adc
inc
mov
mov
add
mov
adc
call
ljmp
gs
inc
pop
sbb
test
icebp
inc
inc
call
rolb
pop
dec
stos
mov
andl
stos
imul
hlt
jo
stos
adc
fcoms
fwait
mov
add
adc
jne
fistpll
int3
add
mov
gs
test
mov
and
rorl
xor
xchg
or
or
std
stos
sub
mov
pop
inc
insb
inc
insl
mov
push
sbb
jl
orl
sub
push
out
jle
add
mulb
mov
pop
cmp
add
in
divl
dec
je
jb
and
or
bound
adc
jo
push
es
push
insb
or
test
push
inc
dec
outsl
add
into
icebp
inc
je
cmp
sbb
mov
xorl
pop
cmovp
clc
hlt
push
shll
ret
in
int3
mov
push
fildll
jb
sahf
punpckhdq
sbb
divb
in
cld
movb
dec
cmpsb
pushf
daa
add
mov
fmull
rclb
mov
add
mull
push
scas
xor
or
int3
mov
sub
pop
fisttpll
jl
ret
pop
or
ja
add
addps
push
push
or
push
pop
and
call
imul
add
subb
xor
or
cs
ret
xchg
and
lods
mov
lea
fisttpl
stos
scas
nop
lret
inc
and
fadds
imulb
clc
clc
dec
clc
inc
inc
sbb
psubsb
jp
dec
push
and
dec
inc
add
imul
mov
xchg
lods
scas
arpl
pusha
and
push
mov
sarb
fmul
loope
sub
aam
call
mov
cs
call
push
add
pop
inc
test
or
stos
sub
pusha
sub
std
push
orl
jmp
and
jl
cltd
rcrb
popa
incl
inc
decl
enter
adc
jo
xchg
dec
int
xchg
push
cs
and
dec
ljmp
add
lret
xorb
push
pop
mov
add
push
push
clc
sub
adc
clc
aam
jl
mov
inc
jp
jmp
movsb
or
cli
pop
pop
fisubrl
loop
add
fisubrl
aam
mov
ljmp
int
fldt
cs
pop
movsb
mov
fcomi
push
cmp
sbb
inc
adc
mov
lea
ljmp
inc
dec
les
fdivrl
or
push
push
je
ret
jge
ds
push
sbb
inc
call
dec
xchg
aad
push
push
sahf
or
lock
ret
dec
and
xor
pushf
cmp
push
xchg
sbbb
add
push
sub
cmpsb
jne
mov
lcall
xchg
call
and
sub
notb
or
ljmp
mov
clc
jmp
fnstenv
test
sub
inc
pop
sbb
adc
mov
or
cmp
push
pop
shr
test
inc
int3
pusha
movsb
inc
inc
and
adc
adcl
aam
xor
jmp
push
adc
hlt
xor
in
or
and
add
cmp
xor
sahf
aam
fdivs
shl
outsb
mov
adc
xchg
push
dec
fmul
mov
inc
adc
jle
scas
nop
shll
jne
dec
test
sbb
lods
pop
sub
pop
mov
and
inc
xchg
push
repnz
xor
sub
push
sbb
push
fdivs
adc
retw
inc
insb
mov
stos
cmp
sub
sbb
xor
enter
add
or
data16
xor
ficoml
test
jmp
xchg
xor
add
jbe
int3
in
sub
inc
sub
pop
adc
sahf
jo
loope
fs
cmp
scas
stos
xor
sub
add
add
call
sahf
test
inc
add
push
and
dec
mov
dec
pop
test
xor
sbb
add
loope
aam
ss
or
lret
loopne
stos
pusha
inc
xchg
jg
sti
push
push
das
add
inc
adc
scas
pop
loopne
add
pop
mov
sbb
lock
popf
ficoml
xchg
mov
push
adc
inc
lods
mov
and
fmuls
push
mov
dec
add
mov
mov
adc
in
jb
aam
add
and
lock
adc
repnz
sbb
xchg
nop
jle
or
xchg
mov
cmp
cwtl
adc
sbb
in
pop
mov
test
add
jb
push
je
rol
je
mov
dec
popa
mov
mov
movsb
cwtl
push
into
xchg
fsubrl
xchg
sti
cmp
adc
push
mov
sarl
push
cmp
loopne
dec
je
pusha
adc
cmp
in
inc
and
inc
outsl
mov
cli
aas
or
dec
std
nopl
push
decl
test
lret
movsb
mov
xor
jo
or
sti
aaa
inc
mov
rolb
sbbb
loop
or
inc
test
push
pop
and
and
inc
sti
push
dec
xor
faddp
lock
xor
inc
jl
pushw
cld
add
push
js
shll
cmpb
loopne
xor
outsb
rorb
rol
pop
push
outsb
dec
call
add
mov
mov
mov
je
and
mov
int3
sbb
mov
jbe
jge
xchg
push
addl
insl
imul
mov
out
jp
cmp
subb
test
fsubrp
in
xbegin
cmp
push
add
inc
xchg
cwtl
push
push
sub
cmp
jg
push
mov
sbb
ret
insl
mov
pusha
push
mov
mov
xor
cli
mov
lcall
popa
test
ret
mov
sti
fsubrl
mov
out
jmp
addb
push
mov
dec
push
jl
jo
sbb
roll
adc
pop
xchg
sub
inc
into
xor
inc
jg
shll
pop
cmp
insl
sbb
addr16
sub
aaa
mov
scas
ret
add
jl
movb
and
sub
daa
test
xor
icebp
xchg
ss
sub
cmp
add
lret
push
push
in
or
es
scas
loopew
push
push
outsb
adc
imul
jge
dec
xor
add
aam
adc
push
sarl
xor
notb
sar
sbb
in
and
cwtl
mov
mov
test
add
sbb
and
test
fists
mov
clc
xor
xchg
jp
jne
push
les
mov
pop
inc
test
incb
mov
adc
or
rcl
cwtl
clc
cld
iret
test
jbe
daa
mov
stc
push
mov
je
xor
jo
aam
test
add
mov
xor
adc
nop
mov
adc
mov
mov
pushf
movsl
xchg
push
push
push
and
push
popf
clc
es
lds
inc
outsb
sbb
lret
cwtl
pop
sub
hlt
adc
jmp
cmp
adc
cmp
cmp
popf
add
pushf
push
jg
ljmp
push
ret
xchg
subb
cld
adcl
flds
lret
adc
jmp
nop
or
shrb
mov
cwtl
sub
cli
and
xchg
cmp
push
or
push
cli
jg
mov
xor
jno
xchg
std
leave
ret
add
sar
xor
pop
sub
inc
sbb
lea
jne
inc
clc
xchg
xchg
aam
fisubrl
and
pop
std
push
pushf
sbb
inc
dec
outsb
add
adc
das
xorb
loopne
mov
movsb
xchg
and
jo
aam
cld
popl
xor
test
push
mov
jecxz
out
mov
jg
test
sub
and
and
mov
jge
sbb
idivl
pop
adc
daa
cld
add
sub
inc
inc
mov
test
incl
decb
push
mov
mov
dec
push
or
dec
xor
mov
add
pop
mov
mov
lret
stos
stc
shrb
lock
push
cmc
mov
jne
loop
fsub
mov
mov
add
aam
lock
or
shr
loope
mov
decl
mov
mov
push
fstpt
push
test
mov
mov
dec
sub
add
mov
push
push
mov
mov
outsb
mov
xor
stc
cmp
sub
clc
loopne
push
lods
test
push
int3
loopne
cmp
push
push
lods
xor
movsb
int3
push
ds
dec
popa
xchg
mov
push
sti
inc
add
sbb
ss
pop
cli
pop
hlt
shrb
or
xchg
out
loop
cmpsb
mov
decb
fsubl
notl
sbb
cmpsl
das
push
and
push
mov
nop
rcll
cli
or
popa
nop
mov
dec
push
dec
push
roll
xchg
les
out
and
sbb
mov
adc
push
and
rclb
movups
jmp
or
loop
fs
ret
mov
pop
mov
mov
inc
cmp
ja
cmp
popa
inc
lea
push
ja
push
js
movsb
out
mov
push
aas
test
pop
pop
mov
mov
in
and
test
and
jg
icebp
dec
mov
push
lret
int
pop
inc
call
cmpsb
mov
or
dec
cmp
lods
test
adc
mov
ficomps
in
call
in
dec
sub
stc
fsubr
call
loopne
sub
add
mov
fdivrs
xor
dec
inc
add
add
aaa
mov
lock
gs
xchg
and
inc
dec
pop
dec
push
and
mov
jo
mov
xor
in
or
xorb
mov
jne
ret
jg
in
adc
fwait
adc
sbb
xchg
mov
testl
cmp
fsubs
sbb
mov
decl
push
mov
inc
sti
dec
cmp
xchg
call
mov
mov
adc
inc
repz
jb
sbb
dec
scas
hlt
repz
cwtl
pop
mov
rolb
es
lds
ja
inc
es
je
jg
clc
test
mov
push
je
mov
push
test
xor
icebp
pop
or
push
push
into
aam
mov
inc
pusha
cmp
cwtl
add
push
js
push
add
inc
cmpsb
aam
loopne
or
ljmp
clc
mov
mov
test
xor
inc
cmpsb
or
cmp
incl
jle
pushf
sub
cmp
mov
aaa
or
push
sub
jp
jecxz
incl
jp
leave
filds
sub
mov
push
or
and
lds
mov
sub
adc
clc
movsl
movsb
mov
stos
add
inc
xchg
pop
jg
push
push
int3
sbb
adcb
cmp
sbb
rcrl
cmp
cmp
je
jge
mov
fstpt
sarb
or
cmp
and
pop
cmp
decl
mov
cmp
push
andb
mov
outsb
or
shlb
ret
push
push
inc
pop
or
add
cmp
dec
mov
push
jmp
imul
push
loop
jle
sub
push
sbbl
in
jg
nop
fmuls
jb
into
ljmp
in
add
leave
mov
sub
cmp
sti
test
xchg
je
xchg
jg
dec
pop
dec
mov
add
xor
mov
repnz
or
pop
ficoml
cli
imul
mov
pop
jne
rclb
sbb
mov
mov
mov
js
or
mov
mov
lcall
mov
scas
leave
shlb
mov
test
out
mov
pop
fisubrs
fidivrl
or
mov
in
or
jle
and
inc
adc
adc
outsb
dec
psubb
adc
inc
fsubrs
lret
gs
movsb
cwtl
cld
push
mov
mov
scas
add
movsb
sbb
leave
mov
adc
lock
xor
cmp
add
insl
aam
push
mov
add
add
mov
int
pop
outsb
sub
inc
aaa
add
mov
mov
jne
test
mov
fidivrs
push
sbb
fs
lcall
fs
mov
ljmp
rcr
and
dec
cmp
and
jge
mov
mov
adc
adc
or
and
adc
or
cmp
mov
lcall
std
andl
add
push
push
nop
ds
push
pop
inc
cmpsb
lock
and
leave
pop
lods
jne
jmp
inc
rol
outsl
shll
pop
sbb
test
or
pop
stos
pushf
jmp
test
shlb
sub
or
stos
pop
into
jl
data16
fisttpl
int3
cmpsb
dec
in
pop
dec
movsb
fistpl
faddp
push
pop
rcll
sub
int
cmc
incl
imulb
dec
test
adc
jae
std
push
add
stc
cmp
pop
shl
cmovae
sbb
mov
inc
cld
mov
iret
addl
aam
mov
push
shrl
sbb
addl
inc
jmp
mov
cmpl
pop
lods
add
movsl
mov
dec
outsl
outsl
adc
push
sahf
lods
test
mov
ret
outsb
faddl
test
adc
lea
movsb
movsl
add
das
pop
cld
ljmp
test
xchg
adc
repz
mov
dec
hlt
mov
rorl
ret
pusha
mov
testb
pop
add
and
jb
lret
rorl
or
jp
and
cwtl
jle
inc
or
cmpsl
pusha
xchg
out
sbb
lahf
jle
gs
std
mov
mov
mov
mov
je
loopne
push
sbb
shrb
adc
int3
mov
mov
sub
std
shlb
add
mov
push
jg
sarl
mov
xchg
mov
lods
mov
add
inc
nop
push
push
call
jb,pt
gs
lock
outsb
push
enter
gs
pop
and
leave
mov
and
mov
out
xchg
jne
jnp
sub
lea
je
ret
aaa
jp
xor
jecxz
dec
xchg
xor
mov
xchg
jp
fisubl
push
or
pusha
andb
and
aam
mov
mov
add
rorl
pushl
inc
mov
enter
add
subl
push
and
mov
and
aam
sub
scas
sbb
xchg
movsl
push
push
sbb
add
pop
dec
xchg
inc
dec
sets
rol
in
jnp
imull
push
push
cltd
mulb
in
mov
adc
and
or
or
adc
cmp
nop
ss
jb,pn
push
test
sub
lock
sub
movsl
cs
cs
or
add
xor
jbe
sbb
adc
notb
sbbl
jb
mov
test
cli
int3
adc
je
add
les
adc
insb
pop
mov
mov
enter
rcr
or
inc
push
jge
test
loopne
ljmp
jge
js
xor
mov
ret
adc
jo
lcall
lcall
ss
ror
adc
lea
or
mov
dec
mov
cmp
jb
icebp
dec
and
das
and
push
add
cmp
pop
pop
xchg
icebp
mov
cmp
dec
je
icebp
inc
mov
push
lret
enter
pusha
sti
pcmpeqd
jmp
jo
into
mov
adc
mov
cwtl
movsb
inc
and
push
mov
mov
sub
push
rcrb
xchg
add
mov
inc
jne
pop
mov
insb
shlb
mov
xchg
jo
cld
pop
add
sbb
cmp
fmuls
sbb
cmp
adc
or
ret
inc
inc
gs
cmpsb
or
stos
les
call
mov
aam
insb
xor
cld
rol
mov
add
decl
mov
jle
sbb
dec
lcall
jae
mov
sbb
and
add
jb
or
fs
inc
or
xchg
pop
ss
fidivrl
add
xor
enter
stc
lds
add
fsubrs
xchg
add
push
xchg
jecxz
inc
push
push
pusha
and
fsubrl
sti
cmp
aas
mov
in
add
bound
sbbb
adc
push
push
cs
jb
gs
cmpsb
test
add
dec
pop
mov
add
sub
mov
lock
fisubl
call
andb
sbb
cmp
add
or
clc
shr
pop
mov
push
xchg
call
outsb
mov
in
sbb
jae
decb
nop
loope
ficoml
out
push
and
icebp
mull
mov
push
shl
cmp
adc
fstpl
add
mov
mov
addr16
cmp
sbb
dec
dec
cmp
rcrb
leave
xchg
arpl
cwtl
cmp
rclb
fisttpl
dec
jmp
add
push
adc
mov
movsb
std
sbb
jnp
push
sbb
imul
sub
bound
sbb
add
pop
in
mov
iret
insb
mov
addb
dec
inc
sub
pop
or
fcoms
adc
fisubl
dec
gs
icebp
adc
mov
fmuls
cmpl
fs
add
push
xchg
cmp
mov
mov
push
mov
add
or
lea
ret
or
sbb
sub
loope
aaa
pop
mov
mov
lret
dec
rclb
and
xchg
push
inc
xor
push
and
subb
push
and
add
sub
cs
xor
test
mov
int3
pop
mov
add
jg
push
sbb
dec
inc
pop
cmp
js
jle
cld
dec
xor
decb
mov
add
add
mov
or
mov
adc
in
aas
inc
ror
decb
clc
dec
cwtl
push
fs
loope
pop
rolb
cmp
loopne
gs
faddl
nop
ds
loope
dec
fdivs
adc
je
xor
adc
sbb
xor
push
add
inc
and
test
push
cs
push
jbe
cmp
int3
adc
cmpsb
mov
ljmp
stc
mov
outsb
mov
imul
addb
sub
mov
into
push
add
push
pop
or
call
into
push
lahf
cmp
daa
or
in
mov
imulb
cmp
push
ss
xor
test
jne
cld
fcoml
nop
rcl
cmp
pop
or
mov
sub
jb
add
stos
cmp
mov
xor
push
inc
and
ret
xchg
adc
or
jle
shlb
xchg
cmp
in
inc
rcrb
mov
mov
inc
ret
call
add
adc
es
push
cmp
dec
in
ss
pop
aam
push
pushf
mov
test
lods
je
push
inc
push
inc
outsb
xchg
pop
lea
pop
xchg
enter
mov
mov
push
std
or
test
add
mov
xor
test
pop
arpl
adc
aaa
loope
rcrb
push
dec
pop
lret
sub
sub
cmp
les
mov
call
push
es
jo
push
test
pop
xchg
jbe
iret
add
ret
xchg
fidivl
inc
stos
sub
fidivrs
or
push
push
cmc
push
xor
call
pop
sub
out
jmp
lods
mov
xor
xor
adc
dec
je
mov
outsb
rol
ds
hlt
mov
mov
sbb
incb
insb
push
movsb
mov
in
xor
cmp
jg
sub
or
into
faddl
pop
int3
push
xchg
jge
aad
cmp
sbb
je
andl
push
add
test
inc
pushl
jmp
fs
clc
xor
mov
push
xchg
push
adc
repz
das
popa
or
adc
pop
mov
std
fadds
aas
lods
mov
ficoms
repz
pop
and
mov
clc
xor
andl
pusha
dec
push
cmpsb
cmp
adc
lret
pop
pusha
jmp
add
or
sarl
cmpb
mov
enter
push
mov
aam
xchg
ret
xor
or
push
jmp
jmp
xor
push
push
adc
add
repz
scas
mov
mov
pusha
adc
icebp
push
clc
das
mov
or
movsb
dec
jecxz
mov
ja
xor
xor
clc
cmp
out
test
cmpsl
sub
xor
or
pop
test
add
ss
dec
push
in
push
xchg
movsb
call
xchg
scas
mov
push
test
clc
aaa
in
adc
andb
xor
or
call
adc
pop
mov
cmp
jo
fmull
push
inc
enter
in
jle
jmp
xchg
mov
adc
jbe
pop
adc
adc
mov
inc
sbb
sahf
cmp
movsl
test
in
xchg
push
push
mov
sub
xor
cmp
ss
enter
fucomp
jle
je
insb
faddl
call
or
add
std
aaa
addl
dec
cmp
cmp
mov
hlt
mov
popf
add
aam
pusha
add
cmp
dec
push
std
fcoml
or
sbb
imul
sub
jge
repz
adc
add
jmp
cmp
std
and
and
mov
call
add
push
dec
sbb
mov
sub
stos
pusha
cmc
push
je
lcall
jg
mov
sub
push
push
les
cmp
jb
outsb
push
or
xchg
mov
sbb
out
das
add
inc
aas
jl
ret
pop
gs
cbtw
jbe
add
add
xchg
push
int3
add
repz
lea
push
popl
pop
xchg
in
incb
roll
jo
inc
push
test
hlt
addb
sub
enter
std
lock
mov
jl
sti
sbb
pop
clc
mov
push
imul
test
jg
mov
cltd
inc
inc
add
or
add
lahf
orb
dec
cmp
xor
add
movsb
pop
pop
xor
mov
dec
pop
ljmp
aas
lcall
add
insb
or
inc
addl
or
xchg
sub
int3
sti
sbb
pop
push
stc
mov
add
pop
jge
aas
cmp
in
sub
mov
testb
pusha
aam
dec
sub
or
mov
and
rol
test
pop
cmp
lcall
int3
hlt
movsb
adc
hlt
fdivl
jb
fsubs
adc
aas
aam
add
jbe
testb
inc
in
or
fs
or
das
mov
test
dec
xor
pop
add
lcall
clc
test
les
pop
mov
leave
xchg
cmp
test
cmp
jne
vmread
push
xor
neg
pop
adc
xor
cld
fwait
and
mov
lcall
push
movsb
dec
pop
mov
fs
hlt
shl
stos
add
mov
and
mov
push
popa
aad
scas
push
call
push
sbb
int3
orl
sbb
push
cmpsl
scas
mov
daa
add
pop
sbbb
mov
cs
aad
xor
jb
inc
test
cmc
xor
nop
and
or
pop
pop
cmpl
lock
cld
add
fcomi
or
jge
ret
ret
call
repnz
jmp
mov
inc
int3
jp
jge
adc
call
xor
sub
sbb
rcll
insb
xchg
mov
push
mov
inc
xchg
fidivs
adc
inc
outsb
fcoml
jae
je
shlb
ret
push
adc
je
add
and
inc
adc
dec
push
and
test
push
cs
test
in
jg
adc
and
cld
xchg
pusha
mov
push
lods
xchg
call
inc
adc
es
xor
popf
mov
outsl
int3
cmp
pusha
loopne
xchg
xchg
sub
aaa
arpl
dec
sbb
xor
test
jle
and
mov
cmc
xchg
dec
nop
add
movb
rorb
jp
jae
mov
or
mov
hlt
loop
adc
add
push
aas
scas
xor
jmp
std
imul
push
cmc
shrb
lcall
xchg
gs
enter
push
sub
sub
push
cmp
jb
imul
cwtl
leave
cs
ss
and
lock
push
sbb
gs
ret
inc
or
cltd
or
rclb
js
cltd
push
mov
in
aas
ljmp
out
sbb
gs
fs
arpl
jne
sbb
mov
inc
adc
add
mov
jbe
sbb
push
mov
adc
jbe
adc
addb
ds
push
dec
aas
mov
setbe
hlt
jne
cld
gs
hlt
pop
rorb
sbb
mov
mov
cli
add
inc
cmpsl
cwtl
push
add
cmp
pop
insb
cmp
les
jge
imul
test
add
fwait
push
jo
test
in
push
jmp
xor
cld
cs
mov
js
inc
or
inc
jp
fildl
ret
xchg
fists
mov
pop
xor
in
sbb
inc
adc
jl
adc
push
or
stos
cmp
faddl
aam
xchg
les
or
jb
push
imul
or
mov
push
icebp
jns
mov
in
ss
js
out
addb
push
xlat
mov
add
pop
dec
rolb
ud0
jmp
cld
outsb
cmpb
imul
adc
std
adc
test
inc
into
pop
mov
xchg
inc
push
mov
push
jne
or
inc
es
sbb
addl
jo
hlt
and
scas
push
fs
xor
inc
insb
xchg
push
arpl
pushaw
inc
lds
inc
ds
or
int
lret
ret
add
idiv
add
jg
in
push
mov
inc
mov
or
shrl
sub
add
ret
test
and
xor
push
rol
daa
out
push
repz
call
fbstp
pop
sbb
or
fs
or
adc
fs
cmp
inc
aas
mov
outsb
add
mov
xorb
push
cs
enter
add
add
pop
and
add
into
push
mov
cwtl
hlt
jp
jbe
loop
pop
push
loopne
pop
inc
bound
test
into
cld
cld
nop
stos
ret
xchg
dec
leave
dec
sbb
sub
xorl
push
movsl
push
mov
adc
push
rcr
add
fcomps
xchg
ljmp
push
lret
add
popa
xchg
and
xchg
mov
inc
repnz
stos
pop
outsl
pop
push
mov
jb
outsb
movb
pop
outsb
add
jle
imul
mov
fstl
or
jge
mov
stos
or
out
sbb
ljmp
jmp
inc
dec
push
add
mov
push
rcl
pop
and
xchg
adc
frstor
dec
adc
cltd
inc
test
pop
ss
ljmp
push
inc
hlt
sub
cwtl
xor
test
adc
in
mov
mov
or
les
lret
jo
jecxz
adc
cli
out
add
dec
push
std
andb
in
scas
cmp
adc
cmp
adc
je
imull
add
fwait
test
scas
roll
test
add
adc
divb
jge
lods
push
sub
notl
imul
adc
dec
out
xorb
inc
mov
outsl
ret
adc
lods
add
push
xor
or
mov
xor
pop
pop
mov
pop
mov
incb
push
out
es
in
push
sbb
and
xor
rolb
jns
inc
xchg
dec
jle
iret
sbb
sarb
daa
movhps
xor
sub
xor
adc
test
mov
xchg
xchg
xor
add
mov
imul
or
mov
fistpl
add
pop
sub
incl
push
add
aam
push
jp
add
hlt
movsl
cli
pop
and
ljmp
ret
pushf
cli
rcr
or
xchg
pop
jae
jne
xor
inc
inc
push
pushf
sub
add
push
and
ret
mov
mov
adc
int3
push
adc
sub
mov
push
leave
call
scas
mov
pop
xchg
stc
ret
jge
mov
test
addb
je
mov
cmp
shrb
inc
jp
mov
sub
jl
rolb
cltd
dec
insb
insb
dec
sbb
fiaddl
adc
sub
mov
push
loopne
or
inc
sub
inc
fimull
fst
lods
mov
push
lea
push
push
in
jo
cmc
ja
add
add
clc
mov
push
jo
xchg
clc
les
push
das
dec
jge
dec
mov
mov
add
sbb
sub
or
cmp
es
mov
mov
rclb
push
stos
aaa
add
sub
inc
dec
pop
mov
jl
inc
pop
or
out
sbb
mov
jl
cld
pop
xor
xchg
sub
inc
mov
sub
mov
rolb
and
mov
mov
das
push
cmp
or
cld
jb
add
jo
cmp
adc
loopne
sub
cs
fs
push
dec
xor
mov
push
out
sbb
xor
mov
push
add
or
pop
adc
shll
test
sub
aaa
push
hlt
push
fcmove
mov
or
sbbb
mov
mov
cld
inc
fs
aaa
sbb
xchg
sbb
and
gs
cmpsl
fwait
mov
push
mov
ret
adc
and
mov
call
imull
inc
repz
push
sub
and
inc
sahf
adc
inc
fildl
adc
mov
mov
xor
or
and
sub
hlt
mov
popf
cwtl
orb
jle
mov
push
cmpsl
stc
sbb
and
xor
pop
add
dec
xchg
mov
int3
jnp
push
xchg
inc
bound
ret
add
adcl
lret
xor
jg
subl
inc
inc
jb
xchg
mov
gs
pop
hlt
es
addb
cmp
mov
pushf
loope
mov
xchg
fs
out
call
cld
adc
mov
rolb
add
out
jp
push
lods
or
mov
pop
pushw
ds
sbb
jns
jbe
mov
mov
mov
mov
mov
into
jmp
jmp
call
test
std
xor
inc
or
jo
sub
xor
jno
leave
add
sub
push
pop
and
mov
dec
xchg
andb
adc
inc
movsb
or
testb
je
cmp
sub
mov
xchg
jne
inc
shlb
add
adc
push
in
sub
push
mov
shrl
imul
std
jno
sub
xor
pop
xchg
out
dec
jmp
pop
xor
mov
cmp
cmp
xchg
call
push
or
add
and
xchg
out
rclb
divb
adc
fdivs
or
movl
in
mov
aam
xor
subb
jge
pop
mov
xor
jg
imul
add
dec
add
cld
and
cld
xchg
addb
adc
call
mov
inc
mov
je
ljmp
aaa
hlt
lcall
mov
leave
inc
les
jne
rclb
sub
dec
mov
mov
shlb
push
lahf
addl
jbe
mov
cmpsb
push
mov
sub
sti
push
lock
sub
js
cmp
or
test
int3
cmp
mov
pop
pop
jecxz
cld
cmp
cwtl
sbb
dec
mov
dec
outsb
loop
int3
daa
add
push
mov
lock
pop
pop
incl
ss
addb
pop
jle
rcrb
mov
push
cmp
sbb
lea
xchg
fwait
cmpsb
pop
sub
rol
and
add
insb
dec
test
sbb
sti
xor
dec
lret
call
incl
inc
cmpsl
hlt
sbb
call
inc
loope
fs
psubb
test
xchg
mov
insb
mov
pop
dec
aaa
ds
les
sarb
cmp
test
jle
mov
stos
inc
scas
cmp
mov
ss
mov
lock
mov
stc
jbe
cwtl
jle
aaa
or
je
pop
pop
movsb
lock
push
sub
add
popa
sub
or
mov
lods
nop
push
add
mov
adc
mov
inc
inc
inc
dec
push
sbbb
sub
je
std
fildl
int3
shll
pop
mov
push
stc
mov
ds
mov
pop
mov
push
sub
mov
mov
lret
push
insl
adcb
inc
xchg
pushf
or
mov
jae
jge
cmp
inc
add
sub
add
jmp
xchg
movsl
adc
fs
adcb
rolb
hlt
outsl
and
cmp
mov
xor
mov
test
adc
fwait
inc
mov
cmp
adcl
lods
inc
push
incl
and
push
push
dec
lock
adc
push
andl
sbb
cmp
add
mov
aam
push
adc
fidivl
adc
call
sbb
pop
cmpxchg
ss
add
loope
std
les
cmp
call
pop
incb
out
mov
or
and
packsswb
push
push
push
lds
adc
outsl
pop
sbb
jmp
sti
ret
sub
jbe
movsl
mov
insl
xor
mov
fs
mov
sbb
jne
xor
icebp
sbb
add
test
inc
push
dec
test
pop
mov
test
add
inc
xchg
or
or
loop
pop
icebp
xchg
pop
push
and
jl
je
ret
push
push
xchg
or
fwait
mov
jae
xchg
fidivl
sub
mov
sub
inc
jl
or
mov
cmpb
add
je
dec
fdivrp
fnsave
inc
mov
cmc
scas
push
int3
es
push
mov
lret
mov
cmp
rcll
lock
insb
mov
add
lock
std
lea
test
scas
xchg
je
hlt
cmpb
inc
sub
lock
jmp
rorb
add
lods
loopne
ljmp
xor
push
pop
jb
call
arpl
push
push
out
mov
cld
mov
mov
insl
xor
or
push
add
sahf
add
das
cmp
lods
push
sbb
mov
enter
rorb
or
shll
and
sub
pop
adc
ret
push
sbb
mov
and
and
call
push
test
add
inc
out
cwtl
mov
push
aaa
rol
cmpsl
and
xor
mov
pusha
cmpsb
movsb
or
orl
mov
pop
mov
jmp
cmpsb
sti
cmpsb
or
hlt
outsl
mov
out
fwait
xchg
push
fimull
cld
cli
ljmp
inc
pushf
cld
mov
je
and
mov
cmp
fcoml
push
jle
pop
sub
pop
pop
jle
mov
push
pop
or
popf
or
mov
das
loope
sbb
dec
lea
in
mov
outsb
lock
adc
jo
mov
sbb
xchg
pop
pop
dec
dec
fs
pop
mov
icebp
xor
mov
inc
inc
adcb
je
pop
adc
push
jge
add
sti
lds
dec
bound
aad
lock
xchg
mov
sbbb
and
loope
pop
sub
add
add
and
sub
push
pop
and
pop
sub
add
enter
jne
cmp
sbb
ljmp
sub
and
or
adc
and
cmp
mov
xor
sti
or
push
mov
xor
pop
arpl
hlt
push
int3
push
push
sbb
sbb
js
adc
insl
jmp
shlb
mov
adc
xchg
cmp
adc
pop
and
out
testb
ficoms
subb
mov
pusha
jne
jne
aaa
ljmp
add
mov
dec
shrb
or
lea
pop
aad
push
and
cmp
cmc
pop
loop
pushf
mov
jne
enter
lcall
cmpsl
adc
or
push
dec
dec
lcall
dec
outsb
es
push
push
aam
ret
std
popa
jp
ss
add
scas
test
das
pop
pop
xchg
jle
std
inc
mov
shlb
mov
add
das
adc
int3
cwtl
cmp
sub
test
jbe
jl
mov
outsl
jp
inc
inc
divb
inc
adcb
lods
fcomp
dec
imul
dec
xor
or
out
mov
push
mov
mov
popf
cmpb
mov
or
inc
sub
test
push
lods
pushl
add
mov
adc
notl
inc
roll
adcb
pop
pop
jecxz
or
cmpsl
scas
shr
xchg
adc
mov
in
bndstx
call
test
insb
jb
lock
lea
test
adc
mov
sub
push
test
mov
sbbb
fldl
int3
pop
pop
dec
xor
ret
xchg
push
outsb
push
cmc
adc
mov
cmpb
repz
ret
xor
adc
mov
pop
cwtl
mov
xor
ds
int3
lock
push
icebp
jo
dec
sbb
push
and
inc
push
add
mov
inc
ljmp
sbb
add
clc
loopne
imul
adc
outsb
stc
pop
inc
mov
adc
mov
push
lock
push
pop
pop
adc
or
jge
or
lcall
push
adc
or
jb
nop
jnp
xor
inc
push
loop
push
pusha
lret
add
push
inc
and
lcall
rcrb
je
pusha
daa
mov
testb
cmp
fcmovnbe
push
push
roll
cwtl
add
jo
mov
jl
adc
das
inc
ret
stos
insb
cld
jae
jo
fisttps
inc
decb
pop
add
and
and
aas
adc
pop
xorb
testb
insl
push
xor
mov
pop
add
cmp
mov
stc
lds
lea
pop
jp
mov
in
nop
ds
rolb
cmp
push
adc
inc
push
cmpsb
adc
js
lock
xchg
enter
int3
jne
ret
ficomps
add
cmp
gs
pop
sub
dec
jo
fwait
push
xor
push
insb
cmp
out
add
pop
dec
insb
cmp
fistl
lea
je
pop
or
scas
dec
cmp
jmp
sub
cmp
inc
aas
mov
jo
pushf
adc
shlb
push
cmp
call
test
fcomp
mov
outsb
jge
push
ja
rcrl
jle
mov
xor
sub
lock
cmpsb
pushf
jmp
int3
rcll
andl
loop
mov
ror
pop
pop
imul
ret
scas
rclb
pop
clc
rcr
or
int3
push
xor
movsl
mulb
jnp
or
push
jmp
sahf
add
push
and
push
out
add
add
ret
rolb
mov
insl
add
ljmp
xchg
xor
mov
pop
add
std
in
dec
push
push
sahf
cmp
add
or
mov
lods
xor
xchg
and
je
and
mov
int
dec
xchg
mov
add
mov
sbb
adc
jge
loopne
rol
adc
push
les
jp
ret
fdivr
sbb
sub
mov
mov
pop
push
cmp
inc
sahf
xlat
dec
push
hlt
cld
push
mov
jle
enter
mov
lcall
adc
sub
jb
push
cmp
imulb
jno
loope
pop
mov
cld
fbld
clc
in
adc
call
xchg
xor
cld
nop
push
ljmp
push
xor
lock
call
sbbl
xchg
or
inc
cmp
pop
cli
ljmp
incl
add
jecxz
sub
xchg
mov
gs
inc
mov
mov
add
and
adc
cmp
cld
call
popa
adc
dec
adc
mov
gs
cmc
lods
ljmp
cmc
in
pop
aad
decl
aad
add
mulb
fisubs
and
cmc
add
inc
or
add
and
icebp
in
add
push
dec
jmp
fmul
loope
jae
xor
and
cld
mov
dec
adc
mov
mov
add
aaa
adc
cmc
push
sahf
aaa
imul
xorb
call
or
sbbl
fimull
sbb
test
add
loope
xchg
and
dec
test
bound
pop
mov
and
adc
and
popa
hlt
sbbb
push
shr
add
dec
cmc
push
xchg
icebp
mov
sbb
test
and
add
dec
jge
int3
pop
inc
or
out
sbb
push
jne
mov
mov
lds
sub
sub
push
fmul
mov
inc
add
xchg
loopne
int3
jmp
xchg
pop
adc
push
adc
mov
mov
jmp
dec
aaa
shrb
sbb
sar
mov
fbstp
adc
mov
subl
dec
adc
mov
push
push
fsubr
push
jg
movsl
fistps
xor
xor
push
test
pop
rorb
add
sar
inc
sub
adc
xchg
mov
jmp
scas
jo
add
ret
lea
jne
test
add
out
in
xor
cli
pop
jg
test
push
out
cs
loope
jbe
adc
push
daa
pop
imul
jl
add
ss
mov
sbb
mov
pop
xchg
add
push
jne
xchg
push
aaa
add
cli
add
jle
ljmp
jbe
ret
dec
cli
ret
cli
mov
pop
add
xor
inc
mov
out
pop
hlt
and
pop
pop
push
xlat
pop
std
aaa
push
imul
push
scas
and
xor
dec
xchg
lds
jmp
push
inc
push
fcoms
movsb
adc
pushf
xchg
adc
add
adc
xor
xor
xchg
sub
ret
decb
faddl
inc
adc
adc
add
cmp
jbe
adc
sbb
mov
inc
dec
mov
fisttpl
cwtl
push
or
fimuls
sbb
inc
push
push
icebp
jne
jne
jae
jbe
mov
push
push
push
call
daa
movsb
push
in
lcall
push
pushf
push
lea
mov
xor
and
or
push
or
mov
xchg
inc
fcom
pop
or
clc
add
add
lahf
clc
jecxz
imul
hlt
xchg
cs
cmpsl
xor
or
scas
xchg
jle
cld
or
adc
jno
jecxz
pop
fldl
outsl
inc
and
dec
aam
sbb
cld
lods
icebp
sub
mov
cmp
inc
mov
aam
xor
stc
imul
pusha
mov
or
push
xchg
push
sub
mov
lds
mov
push
pusha
mov
add
loopne
je
out
daa
push
iret
int3
or
or
push
pop
les
jle
mulb
mov
sub
xchg
lock
push
loopne
xchg
test
popa
inc
inc
adc
insb
clc
mov
push
mov
mov
push
mov
adc
leave
mov
or
jle
bound
cmpsl
pop
cli
mov
movsb
enter
negb
lea
mov
lock
fisttps
inc
imul
and
out
test
add
or
loope
add
or
push
ja
adc
cmc
sbb
mov
enter
pop
push
push
xchg
icebp
mov
aas
jns
shl
clc
inc
pop
movsb
movntq
out
push
mov
push
fimuls
mov
and
or
jl
add
jb
cmp
push
std
pop
or
dec
pop
in
push
shl
adc
outsb
adc
cmp
arpl
mov
mov
or
or
push
int3
push
loop
add
adc
push
dec
int3
mov
pushl
inc
orb
xchg
lret
xor
mov
mov
out
or
rorb
mov
and
stc
push
inc
push
mov
add
test
je
mov
cmp
adcb
sahf
add
stos
call
cmpsb
cmc
inc
push
int3
sbb
add
out
mov
nop
shl
jmp
fs
inc
adc
int
lahf
cld
aaa
ljmp
rcr
push
mov
xchg
push
add
push
loopne
or
mov
adc
mov
sub
or
xchg
pop
sbb
add
lret
lods
pushf
dec
xor
xor
movsb
mov
cmc
sub
lock
adc
mov
dec
cmp
mov
mov
pop
adc
clc
lea
gs
mov
jge
mov
push
stc
ret
sbb
pop
add
mov
jo
inc
adc
or
xchg
jge
cmp
dec
or
rclb
popa
rolb
cld
inc
in
inc
xor
ret
fs
mov
movsb
sbb
or
xlat
dec
scas
mov
sub
ja
jae
add
sti
cs
in
adc
movsl
in
rcr
fiadds
push
fs
lock
jne
fcom
das
call
add
ljmp
adc
cbtw
cmp
mov
call
pop
fsubrs
ljmp
sbb
adc
enter
test
clc
fcomip
test
dec
xchg
push
les
mov
in
mov
lret
decl
cwtl
fcmovb
inc
imul
mov
in
push
xor
fidivrl
cmp
js
data16
mov
les
push
cmp
out
mov
add
cmc
mov
adc
and
inc
ljmp
stc
push
testl
clc
jmp
inc
cmpsb
inc
jle
xchg
push
pop
pop
cld
dec
mov
push
jl
cmc
add
test
add
and
mov
xchg
out
cmp
movsl
bndldx
dec
repz
leave
adc
lret
mov
dec
or
push
pop
push
and
inc
cmc
jg
or
ret
mov
dec
or
mov
push
sbb
adc
out
xchg
fdivrp
mov
test
fstpt
adc
sub
adc
push
test
sbb
jo
add
add
movsl
inc
test
xchg
loopne
adc
inc
shll
mov
dec
fwait
or
test
xchg
adc
sbb
jle
movb
jne
mov
push
or
testb
push
adc
mov
mov
push
jmp
in
std
adc
orl
xor
push
dec
subb
je
loopne
sar
and
icebp
push
gs
or
or
xchg
and
push
cld
push
enter
sbb
push
sub
push
pop
inc
cltd
pushf
mov
decl
push
push
or
popa
mov
ja
bound
shlb
ret
out
add
mov
pop
dec
inc
and
dec
inc
mov
pop
push
inc
rorb
or
test
pop
inc
sbb
xor
pop
fdivs
insl
inc
lods
loope
adcb
sbb
inc
mov
sbb
setb
adc
lahf
rclb
aam
cmc
cmp
and
add
pop
pop
cld
movsl
aad
popa
jbe
bound
outsb
mov
rorb
sbb
adc
std
fdiv
mov
icebp
and
rclb
pop
ds
sub
ret
xor
mov
and
shr
and
loopne
mov
cli
or
notb
sbb
pop
push
xor
cld
fldl
push
push
xchg
sbb
addl
jecxz
lods
addl
or
movsl
xor
and
xchg
rorb
mov
decl
mov
push
in
fs
adc
lock
pop
insl
call
dec
mov
stos
sbb
xchg
jmp
push
push
sti
dec
inc
call
aad
pop
cmp
push
int
dec
jg
rolb
fs
fcoml
fiadds
lock
xor
rorb
int3
mov
inc
mov
lds
push
lret
lock
push
pop
out
xchg
lcall
pop
sbb
loopne
enter
adc
ret
inc
jmp
fists
sbb
or
mov
lret
sub
and
fldt
loope
ds
out
add
test
outsb
loopne
popa
push
mov
ljmp
push
and
mov
add
pushf
adc
xchg
mov
push
inc
mov
add
mov
shlb
icebp
ja
pop
adc
inc
ljmp
rep
push
inc
movsl
mov
mov
add
nop
mov
xor
inc
cmp
divb
nop
test
jbe
sub
pop
add
inc
cli
ljmp
mov
stos
push
or
cmp
ss
mov
mov
pop
sbb
imul
cmp
jl
decl
das
cmp
sbb
shrb
or
out
add
ss
inc
push
inc
dec
or
add
or
cld
icebp
xor
cwtl
dec
xchg
insl
inc
dec
mov
jge
sub
pop
aam
lods
dec
subb
cmc
clc
int3
imul
push
int3
stos
sbb
sub
inc
sub
xor
pop
jmp
mov
into
adc
pop
sahf
jmp
inc
adc
push
call
mov
push
push
jne
sub
scas
fildl
dec
or
jb
cmp
jmp
shrb
shll
pop
sub
sti
add
lock
data16
icebp
dec
inc
jnp
fiadds
mov
shll
lcall
or
daa
je
shll
cli
sbb
mov
add
rcrb
push
cli
mov
subl
push
sbb
call
and
lods
fwait
popa
mov
add
fadd
cmp
xchg
inc
sbb
cwtl
mov
mov
test
sub
push
mov
test
sub
push
dec
movsb
fwait
xchg
inc
push
jl
ljmp
adc
mov
jne
sbb
popa
sbb
pop
clc
into
pop
pop
test
mov
loope
sbb
dec
fdivr
inc
xlat
and
lds
push
push
inc
les
inc
dec
into
cmp
nop
jne
rolb
inc
cwtl
cli
jecxz
cmp
xor
stos
jno
ret
dec
ljmp
sbb
scas
repz
xor
pop
or
or
xor
aam
dec
cmp
xchg
pop
idivl
add
nop
clc
adc
insb
xor
cwtl
pop
push
jl
cli
inc
call
pop
sbb
mov
aas
ljmp
dec
add
stos
push
jg
sbb
scas
movsl
mov
adc
and
jle
roll
cmp
int3
xchg
cmp
jge
in
movsb
dec
cs
sti
int3
mov
inc
xlat
mov
jl
adc
insb
enter
inc
adc
push
dec
adc
in
xor
or
jbe
push
out
mov
std
jo
push
mov
lcall
stos
mov
pop
mov
in
jmp
pop
shlb
mov
ljmp
mov
mov
ss
orl
hlt
imul
fcoms
dec
mov
or
stos
stos
mov
pop
adc
fbstp
pop
test
and
paddb
push
int
inc
inc
or
ss
jp
gs
leave
mov
push
jns
push
fstps
ss
inc
inc
push
or
mov
pop
jb
adc
xor
cmp
cmpb
inc
add
xchg
aaa
call
dec
cmp
int3
push
add
mov
adc
test
sub
xchg
rcl
fs
scas
aaa
xor
sub
inc
lock
rcll
inc
mov
pop
xchg
add
insl
arpl
mov
mov
test
adc
or
sub
xor
mov
cs
insl
cmpsb
into
push
ret
aaa
dec
cmpsb
add
sbb
ret
cmp
dec
dec
insb
aam
ljmp
sahf
je
divb
cmpb
rcl
bound
sahf
ret
add
inc
xchg
pop
cmp
add
popa
adc
gs
and
push
and
aas
push
insb
clc
jmp
cmp
cmp
jno
or
loope
inc
aas
mov
add
loopne
xchg
cwtl
in
aad
mov
mov
test
cmpsl
inc
adc
mov
adc
je
mov
sahf
gs
insb
xor
add
push
lds
dec
xor
push
sbb
dec
pop
inc
sbb
pop
test
lods
jo
cmp
push
jp
push
lock
push
fbld
jp
repz
cwtl
gs
scas
and
shlb
test
cmp
add
xchg
inc
sub
add
push
or
std
sbb
pop
icebp
insl
push
test
add
dec
jl
ss
pop
mov
mov
icebp
pop
dec
ljmp
call
loopne
sub
mov
mov
push
jbe
push
imull
mov
sbbl
xlat
aam
sbb
mov
fwait
inc
jg
cld
into
or
mov
orb
loop
mov
or
test
xchg
jo
lea
je
or
mov
ljmp
clc
xchg
in
push
cld
test
lock
adc
pusha
push
jmp
push
xor
mov
call
push
sbb
out
mov
sub
mov
es
push
mov
lret
xchg
sbb
stos
cwtl
inc
outsl
fidivrs
cli
aas
pop
je
xor
test
mov
inc
sbb
fadds
push
in
add
movb
fmull
adcb
clc
push
js
in
dec
or
xchg
cmp
aam
inc
loope
push
les
mov
adcl
loopne
js
in
sbb
lret
clc
xchg
mov
sbb
outsb
cmp
dec
pop
test
filds
pop
mov
pop
jne
ret
fdivs
push
dec
loop
sbb
rorb
mov
in
nop
les
mov
add
adc
jnp
lcall
add
dec
push
mov
pop
cltd
rolb
inc
loopne
or
push
bound
pusha
mov
movb
mov
decb
jbe
subb
test
xor
ljmp
xchg
add
mov
icebp
mov
mov
rcrb
mov
outsl
sbb
mov
mov
cmp
cld
filds
sbb
ss
or
enter
add
call
inc
cmp
mov
mov
xor
dec
or
adc
and
mov
dec
inc
test
and
mov
xchg
fs
push
repnz
adc
or
call
push
and
push
call
cmp
mov
add
icebp
dec
addl
aaa
ss
lcall
lock
rcrb
sar
xchg
fmul
push
inc
mov
adc
ret
in
or
dec
add
test
or
adc
dec
or
push
or
out
xor
aad
mov
push
mov
pop
xchg
cs
icebp
sub
cs
mov
lea
pop
mov
pop
pop
add
xchg
add
jbe,pn
subl
adc
jne
call
in
or
lock
mov
xchg
add
mov
hlt
pop
out
jmp
push
inc
or
add
adc
fsubrs
sub
mov
movsl
adc
cli
call
fcoms
cmp
out
or
call
rorb
test
push
push
cmp
mov
or
ret
into
inc
sub
fstpl
push
xor
cmpsb
xchg
repnz
adc
call
inc
sti
sbb
add
adc
incl
push
rcrb
jle
into
sarb
dec
inc
mov
dec
mov
sub
cmp
mov
outsl
fsqrt
sbb
je
push
sbb
push
andb
xchg
push
repnz
xor
loop
push
nop
cmpsb
clc
xchg
decl
pushf
test
mov
cmp
sub
decl
sbb
sub
cwtl
or
xor
orl
call
jl
sub
scas
movsb
lcall
lods
inc
decl
jmp
sbb
mov
call
xor
push
loopne
inc
adc
dec
fsubrl
mov
push
inc
ja
je
push
push
into
sahf
rclb
dec
push
cwtl
cs
cli
add
xorb
lods
xor
push
mov
dec
mov
push
inc
inc
adc
rol
call
push
lock
or
dec
es
lcall
mov
xchg
mov
lret
xor
add
loop
cwtl
imulb
mov
insb
loop
adc
test
xchg
hlt
decl
jmp
inc
push
addl
and
add
jo
inc
in
push
sbbl
dec
add
pop
adc
and
inc
jb
lods
cltd
pop
cmp
fbld
sub
mov
mov
push
pusha
inc
jge
enter
fadds
fisttps
pop
je
enter
mov
lods
daa
add
jl
lock
push
fistps
nop
mov
loopne
add
lock
sbb
hlt
pop
sub
andb
inc
xor
or
mov
pushf
js
and
ret
add
ds
sbb
cmp
xchg
push
inc
push
outsb
jecxz
add
cmp
or
fcmovnb
xor
pop
push
not
add
test
xchg
nop
mov
loopne
and
aaa
dec
pop
rorb
cs
add
and
xor
aam
push
stos
or
imul
xor
rolb
ret
adc
test
push
adc
cmpsb
push
stos
adc
lcall
daa
dec
adc
paddw
mov
adc
call
dec
lods
xor
or
lcall
jmp
adc
insb
lea
mov
rcll
and
xor
mov
in
hlt
mov
add
xchg
call
arpl
hlt
push
inc
xchg
dec
mov
mov
outsl
clc
and
pop
cmp
and
lock
or
jnp
fwait
aam
add
lcall
push
jne
test
inc
inc
call
xor
adc
out
mov
test
add
adc
xor
push
shlb
push
test
push
inc
mov
push
mov
cli
fwait
xchg
jnp
adc
lock
sti
xor
mov
fimuls
fldl
mov
xor
idiv
cmp
or
loopne
insl
enter
inc
insb
icebp
pop
inc
std
adc
jb
ljmp
pop
clc
mov
push
lea
sbbl
sub
iret
adc
cmc
add
loopne
mov
loop
add
sub
rorl
inc
xor
sbb
rolb
js
mov
jmp
int3
lret
les
mov
into
data16
mov
loope
imulb
js
or
repnz
or
xor
enter
mov
mov
add
cld
adc
cld
inc
out
pop
jecxz
xchg
xchg
lcall
mov
int3
cs
add
int3
sbb
push
pushf
pusha
adc
movb
shrb
xor
pushf
pop
out
push
inc
fdivl
adc
add
lahf
test
es
push
sti
and
dec
out
sbb
mov
push
leave
shlb
icebp
mov
inc
in
xchg
add
xor
jmp
push
push
sbb
loop
loope
popa
insb
test
add
push
aas
adc
and
cs
xchg
dec
xchg
adc
jbe
rcll
pop
leave
nop
loop
cwtl
mov
out
lcall
mov
mov
inc
add
jmp
push
xor
scas
jne
mov
mov
stc
mov
data16
dec
adc
jb
cli
pop
or
xchg
or
add
and
push
test
iret
call
sbb
dec
jge
adc
out
lock
adc
adcl
test
xchg
mov
mov
fimuls
or
out
rorb
mov
mov
add
enter
movb
aam
mov
in
pop
addb
sbb
dec
push
insb
adc
sbbb
icebp
sub
jo
jbe
mov
or
jb
test
dec
xchg
push
lcall
mov
pop
sub
cmp
lock
sbb
jo
movsb
hlt
jne
sbb
dec
dec
lods
cmp
out
xor
xor
fiaddl
push
add
xor
cli
clc
pop
lea
clc
and
dec
fstpt
sub
call
roll
call
adc
out
lods
std
jmp
and
push
dec
and
cmp
or
rcrl
movsl
push
jecxz
jne
inc
je
xchg
sub
xchg
xchg
sbbb
mov
outsb
outsb
nop
inc
punpckhbw
push
ds
je
sbb
or
rol
shll
mov
inc
mov
mov
pop
in
xchg
pop
jb
sub
into
enter
inc
mov
andb
out
and
sub
push
push
adc
and
pushf
dec
adc
mov
cmp
or
jbe
pop
cmpsl
and
inc
mov
aaa
icebp
xor
lea
bound
cmp
xor
lods
lock
or
pop
inc
jl
pop
xchg
mov
xor
outsb
sti
or
sbb
adc
add
sbb
xor
xor
int3
push
adc
mov
xchg
dec
divb
pop
jp
sbb
inc
movb
add
adc
inc
inc
cli
push
mov
aas
push
inc
adc
cmpsb
cmp
outsl
inc
cli
outsl
test
jb
jmp
adc
gs
inc
push
push
dec
add
dec
xor
sub
into
insl
pusha
fsubl
push
and
jp
add
inc
int3
adc
fnstenv
lods
aaa
jmp
test
xor
inc
push
xor
add
xchg
push
rclb
and
mov
xchg
jo
add
addb
push
int3
lea
orl
adc
in
xchg
pusha
pop
adc
loope
jo
add
je
data16
cli
jg
inc
shrb
and
stos
aas
add
rclb
jbe
xor
in
or
pop
push
lea
xor
and
add
fs
movsb
clc
add
arpl
in
cmp
mov
push
pushl
sbb
sti
and
xor
add
and
aaa
inc
inc
adc
push
adc
or
jp
cld
lret
pop
jbe
addr16
jp
inc
push
xor
jmp
aam
enter
mov
movsbl
rorb
add
jmp
jbe
sbb
call
cli
es
mov
addl
pop
cld
gs
rolb
lret
pop
inc
mov
roll
or
mov
cmp
repz
adc
sub
pop
clc
jb
call
mov
inc
adc
adc
scas
fadd
or
call
add
sub
push
cmp
or
inc
imul
clc
call
inc
popa
jne
out
sbb
inc
mov
dec
fwait
dec
mov
and
ljmp
cmp
add
and
pop
sbb
ret
in
pop
jmp
and
dec
mov
orl
ss
mov
pusha
add
aaa
int3
inc
add
ds
fcoms
ficompl
jp
std
add
call
loope
sub
push
cmp
mov
inc
scas
clc
dec
adc
data16
adc
push
add
xor
mov
adc
mov
rcl
adc
lret
loopne
adc
lods
jb
or
jl
je
add
push
push
sbb
iret
push
fs
adc
adc
inc
add
cld
fs
jbe
pop
pop
lcall
sbb
push
pop
mov
and
push
mov
fwait
xor
or
mov
cli
push
cmp
mov
js
pop
push
idiv
clc
sbb
jne
jecxz
bound
adc
stos
jno
adc
jge
or
flds
pop
enter
sar
xor
mov
fdivr
cmc
lea
cs
push
jmp
ss
testb
adc
je
pushf
adc
mov
movsl
mov
xlat
xchg
fcmovbe
mov
push
ret
push
inc
mov
lock
or
pop
divb
or
pop
fcmovnb
xchg
rclb
xchg
js
movb
loopne
ret
imul
fs
mov
je
les
dec
int3
add
pop
decl
adc
scas
ret
scas
in
sbb
adc
xorb
jge
add
and
lea
adc
fiaddl
lds
clc
cmp
add
scas
cmp
or
inc
mov
test
pop
and
add
xchg
aaa
push
sub
sbb
mov
xor
jg
fbld
idivb
loope
jle
push
es
xor
std
push
or
pop
xor
cmp
jo
mov
pushf
cli
dec
or
cmp
and
sbb
add
mov
lock
push
mov
add
lods
or
add
inc
xlat
cltd
mov
stos
addb
aad
fdivs
and
mov
push
jmp
cmp
mov
jnp
je
subl
xchg
mov
into
xchg
pop
stos
mov
jge
xchg
jne
sbb
andb
adc
shlb
mov
mov
mov
push
jne
push
pop
xchg
push
cs
add
cmp
add
jmp
test
inc
mov
mov
shrb
inc
jne
call
shlb
test
negb
jne
mov
shlb
pop
jp
clc
inc
cmp
insb
sbb
vmovups
add
sbb
sub
bound
cmp
xor
dec
mov
in
push
mov
or
popa
add
mov
ror
mov
dec
jle
lock
lahf
sub
push
aam
xchg
adc
mov
das
stos
fcoms
test
pop
adc
out
push
push
aas
or
inc
push
or
mov
push
lcall
push
push
inc
push
xor
clc
aas
jecxz
imul
mov
lret
out
pop
insb
addb
cld
sarl
inc
add
push
or
pop
pop
outsb
insl
ss
cmpsb
pop
and
out
sub
cmp
popa
test
ja
mov
and
sti
je
in
or
jmp
in
hlt
das
adc
sub
jno
test
sbb
mov
lahf
add
call
inc
test
mov
dec
jo
and
add
roll
movsb
sub
xor
movups
inc
cmc
or
ret
mov
dec
shlb
xchg
pop
outsl
inc
pop
popf
push
hlt
aas
mov
mov
push
xor
xchg
data16
jl
push
dec
nop
add
sbb
outsb
call
test
loop
sub
xchg
rclb
mov
and
add
cmc
mov
mov
test
fidivl
mov
push
push
dec
movsl
outsb
mov
cmp
mov
test
add
adc
pop
push
popa
cmpsl
adc
push
es
pop
clc
insb
fldl
cmp
dec
push
add
inc
decb
cmp
shrb
jmp
inc
jg
test
cmp
mov
popf
pop
xchg
pop
mov
andb
clc
test
and
divl
test
es
push
sbb
pop
or
fcompl
das
ss
xchg
jmp
or
orb
outsl
and
xchg
bound
pop
mulb
inc
cmp
mov
add
mov
fisubrl
in
push
mov
or
push
jns
bound
cmp
xor
mov
mov
scas
mov
aaa
cmp
push
outsl
adc
fs
hlt
push
mov
sbb
adc
popa
xor
outsb
ret
lcall
cmc
pop
mov
and
xor
imul
in
dec
pop
push
std
adc
aad
inc
jge
adc
pop
ret
mov
test
clc
testb
out
lret
cmc
sub
mov
test
test
mov
inc
js
cmp
aam
push
test
push
aas
in
addl
lcall
rcrb
mov
in
xor
pop
in
mov
add
rclb
mov
cld
push
cs
shr
dec
popa
mov
jo
push
outsb
sbb
aas
push
inc
xorb
and
shrb
in
out
add
jae
cwtl
mov
xor
pop
or
jg
add
jmp
dec
mov
sbb
mov
xor
push
sarb
jne
scas
jp
orl
dec
push
push
xchg
add
inc
daa
mov
shlb
popa
mov
jge
call
mov
das
sub
inc
add
cmpsb
mov
cmp
mov
enter
icebp
inc
jmp
sbb
bound
insb
adc
popa
sbb
sti
add
mov
mov
into
push
or
sti
es
and
sub
sub
add
xchg
aam
xchg
and
imul
sub
add
ds
push
clc
scas
push
cmp
xor
hlt
mov
add
call
mov
pop
xorb
xor
jle
xor
repnz
mov
push
sbb
jle
incb
shr
xor
and
popa
and
pop
push
subb
lea
mov
sbb
call
mov
mov
or
inc
movsl
pushl
je
adc
pop
cmp
sub
call
pop
mov
fs
clc
pop
xorl
sub
sub
test
push
outsb
fisttps
xor
push
pop
pop
inc
or
hlt
mov
bound
movsl
adc
in
out
xor
adc
add
pop
popf
sbb
xchg
mov
cmc
xor
in
outsb
cmp
adc
pop
fistps
pop
div
mov
mov
outsl
jle
shl
dec
xor
pop
enter
cmp
or
xchg
sbb
push
nop
jo
lods
or
int
cmp
lock
in
movsl
sarl
clc
xor
test
mov
into
dec
cmpsb
adc
jle
clc
jg
jl
decl
jne
cmp
lock
test
inc
add
jno
or
jbe,pn
test
mov
into
adc
pop
es
mov
xchg
dec
test
mov
loop
pop
cld
rcr
insl
push
pop
and
imul
pusha
sub
inc
fs
or
pop
jp
movsb
fsubl
xor
mov
jg
leave
pop
lea
or
jl
jb
stos
add
lock
mov
xor
cmp
lea
les
adc
jbe
mov
adc
inc
cmp
pop
movsb
fistl
mov
cli
sbb
sarl
and
pushf
add
nop
loope
lods
movsb
scas
cmp
adc
call
out
mov
insb
xchg
mov
sub
mov
sti
sub
lahf
or
or
pop
ret
sbb
lods
sbb
pop
lret
mov
loope
jg
into
lcall
lock
jbe
das
daa
aad
cmp
or
jne
push
sbb
lea
push
dec
pop
mov
aam
es
xor
decb
xchg
lcall
adc
dec
cwtl
xlat
cld
push
xlat
inc
add
pop
dec
fistps
and
push
or
and
lret
adc
test
movsb
test
dec
fprem
dec
pushf
decl
cmp
arpl
iret
lcall
mov
sbb
inc
xchg
push
dec
rclb
inc
imul
imul
adc
inc
add
lock
inc
jp
ds
jbe
push
lods
or
push
sbb
push
or
xchg
mov
push
roll
je
lret
jecxz
dec
adc
sti
mov
ss
push
xor
outsb
and
adc
cwtl
lea
fbld
les
inc
rclb
mov
sbb
fidivrl
sub
movb
mov
movb
pop
push
mov
add
mov
add
inc
cmp
or
mov
mov
clc
rclb
push
test
mov
std
ret
mov
test
mov
loopne
lock
sub
dec
jecxz
pop
call
adc
and
insb
cli
mov
or
or
lea
scas
mov
push
ds
jmp
xchg
lods
mov
xor
push
adc
jge
repz
outsl
mov
mov
dec
sti
dec
fsubrs
or
orl
iret
pop
or
jo
nop
cli
mov
inc
ds
nop
mov
or
dec
insb
xchg
pushf
movsl
inc
inc
int3
in
loop
adc
push
xor
stos
adc
test
push
fldt
xchg
or
add
jmp
add
repnz
add
cld
xor
jl
clc
push
sbbl
mov
or
inc
sbb
gs
dec
test
stos
int3
cmp
rcrl
repz
add
cli
icebp
sub
aas
mov
int3
data16
and
cmpsb
movb
jle
in
sbb
and
push
adc
or
dec
nop
inc
jne
dec
pop
sub
loopne
addr16
xchg
cltd
cli
pop
cmp
imul
dec
or
icebp
inc
xor
test
push
dec
sbb
dec
loop
jne
sbb
cmp
mov
dec
push
cld
add
adc
add
mov
into
les
aam
sbb
pop
cld
jmp
xor
incb
jo
inc
adc
mov
adc
fmuls
int3
loopne
ficomps
adc
and
in
add
push
xchg
dec
push
push
jecxz
mov
out
xchg
js
xor
testl
mov
mov
aad
ret
push
push
xor
mov
xor
ret
ret
push
dec
push
out
push
mov
loopne
inc
jnp
arpl
in
push
or
clc
and
dec
data16
dec
cwtl
cmc
daa
nop
mov
ret
fidivl
cmp
fbstp
add
add
in
jl
push
test
jp
ljmp
imul
dec
ret
fsub
ret
outsb
dec
or
loope
inc
inc
xor
pushaw
jmp
pop
call
dec
out
in
sub
cld
lea
dec
addb
and
aaa
inc
mov
push
jmp
mov
gs
mov
and
mov
mov
ljmp
dec
shlb
xchg
xchg
fmul
jp
out
xchg
mov
decb
adc
push
dec
xor
dec
je
fbstp
push
test
call
or
out
sub
xor
outsb
or
sar
or
xchg
add
push
mov
inc
xor
in
mov
rclb
aas
sub
lcall
dec
pop
xor
dec
inc
add
lods
pusha
sbb
adc
shrb
push
inc
arpl
ror
or
subb
int3
xchg
xor
les
ja
dec
jg
xchg
movsl
movsb
notb
sbb
push
call
inc
je
or
fnstsw
pop
xor
push
popa
xchg
push
dec
mov
stos
dec
xor
fadds
in
lods
nop
loopne
mov
add
adc
and
mov
mov
dec
int
fdivrs
add
mov
test
jb
dec
outsl
dec
test
inc
outsl
test
inc
les
and
out
stos
test
popa
and
test
movl
xchg
sbb
add
ds
mov
scas
mov
fstpt
jae
and
or
fidivrs
lcall
xorl
iret
pusha
ss
pop
dec
mov
dec
push
or
and
adc
push
std
shrb
sub
lds
add
leave
divb
incl
and
hlt
push
push
imull
sarl
sbb
loope
cli
cmp
sub
test
mov
sub
mov
sbb
out
ficomps
testb
add
lret
sub
sbb
loopne
cmpl
jbe
push
cmpl
adc
pop
add
stos
push
cmpsb
inc
add
push
icebp
mov
mov
repz
addl
push
int3
mov
ss
jb
sbb
push
mov
imul
mov
stc
fimull
dec
cld
testb
pushf
mov
lahf
xor
pop
inc
xchg
je
testl
push
test
pop
push
xor
pop
inc
fildl
or
xor
cli
scas
sub
cmpb
pushf
insl
push
jmp
popa
inc
mov
xchg
loope
and
shl
lods
or
ret
popf
test
stos
rol
cmp
inc
cmpsl
cli
cmove
or
fsubrs
pop
push
dec
mov
into
push
sub
and
sub
inc
leave
out
lcall
and
subl
in
adc
fwait
mov
js
adc
or
andl
adc
cmpsb
pop
pop
or
out
insl
jbe
or
xchg
sbb
test
lahf
movsb
idivb
mov
jae
pop
loop
cmp
mov
pop
fcomps
sub
add
dec
dec
gs
inc
inc
pop
test
rol
push
jmp
js
shr
ret
push
jp
cld
mov
ljmp
jmp
or
jl
incb
test
xor
cmp
mov
sub
lcall
fimuls
add
pop
imul
push
and
or
addb
pop
inc
popa
adc
mov
or
rorb
jp
inc
mov
shlb
fsubrs
add
jg
xchg
inc
mov
mulb
adc
cmpsb
add
test
aam
adc
out
inc
adc
hlt
xchg
wbinvd
cmp
dec
sar
mov
inc
add
push
pop
sub
addl
jle
ss
outsl
cmp
and
push
scas
dec
mov
pop
cli
call
lahf
hlt
inc
sub
roll
adc
mov
add
mov
inc
std
pop
es
jne
sbb
xor
ret
fildll
sti
push
xchg
add
push
jge
cmp
push
or
dec
andl
push
sarl
or
sub
int3
nopl
fsubrl
lea
push
popa
cli
rcrb
aad
dec
or
test
push
and
stos
cmpl
inc
xchg
or
mov
cmc
dec
or
fsubs
mov
inc
rcll
sbb
and
ljmp
shlb
xchg
outsl
cmp
lds
loope
js
pop
pop
and
add
enter
or
push
out
je
xorl
inc
xchg
incl
in
clc
cld
outsb
inc
sbb
pop
jecxz
xor
lret
dec
stos
pop
xchg
add
dec
fs
stos
adc
mov
in
mov
stos
add
add
or
xor
sbb
xorl
add
add
test
fnstenv
cwtl
sub
sbb
cld
inc
out
loope
or
mov
mov
jg
insl
hlt
jl
fstl
adc
dec
es
push
out
enter
popa
out
nop
mov
sub
inc
pop
mov
or
sbb
push
aam
and
push
mov
sub
out
mov
mov
cmpsb
and
in
sarl
ds
mov
adc
aam
or
pop
sarb
mov
clc
cli
and
jl
adc
jne
jo
and
jno
mov
mov
ret
adc
inc
mov
sub
sbb
mov
xchg
cmp
jb
or
and
mov
pop
xchg
dec
push
call
pusha
stos
test
dec
int3
push
dec
adc
or
mov
gs
popa
jecxz
lret
popf
pop
push
or
adc
mov
flds
ljmp
test
inc
je
aas
mov
rolb
mov
mov
aad
dec
test
adc
push
sub
jge
or
call
add
out
pop
test
jb
pop
outsb
adc
insl
sub
in
cmp
mov
add
mov
xor
add
clc
sbb
pop
push
mov
outsb
pop
push
xor
leave
push
in
test
shl
into
or
movsb
lret
mov
icebp
push
add
out
and
imul
test
shrb
sub
jle
mov
clc
add
int3
outsl
xlat
daa
nop
cmp
icebp
andb
addl
sub
out
push
popf
aas
loop
loope
out
add
cmp
sbb
xor
mov
push
inc
cwtl
popa
mov
andb
fs
jb
and
imul
mov
push
mov
adc
fisubrs
int
shll
cmpb
pop
ds
int
xchg
in
addl
add
loope
call
ret
xchg
fcmovnu
fs
pop
xchg
push
scas
sub
mov
mov
xchg
mov
lea
mov
push
add
jne
les
inc
in
push
mov
push
test
std
adc
xchg
out
pop
add
push
jmp
add
mov
nop
jno
or
cmp
dec
sbb
test
adc
sbb
jge
shll
inc
dec
ret
sub
ja
pop
push
push
mov
enter
xchg
sub
fcoms
pop
push
sar
adc
add
pop
xor
cmp
lods
mov
scas
push
call
xchg
hlt
cmp
loopne
pusha
lods
pop
xchg
jb
mov
inc
dec
cmp
inc
ljmp
mov
in
xor
mov
push
rolb
adc
rol
test
adc
dec
dec
jo
add
and
in
cld
aad
jo
pop
mov
add
js
sub
dec
mov
xchg
mov
hlt
push
les
iret
xchg
ficoml
and
or
hlt
mull
sub
mov
cld
xor
dec
dec
dec
in
xor
pop
lods
cmp
lea
mov
add
or
jl
mov
lret
mov
orb
out
mov
jns
and
insl
std
cli
push
add
dec
fdivrs
sbb
pusha
add
in
adc
mov
push
push
mov
add
push
aad
push
push
cld
xorps
call
es
cld
outsl
out
add
je
xchg
push
sbb
ret
inc
ret
xor
lea
sbb
push
pop
pop
add
enter
dec
dec
call
push
data16
arpl
sub
lods
loop
jg
adc
ds
mov
lea
jne
jecxz
mov
call
mov
je
leave
cmp
fmuls
jl
movsb
loopne
cmp
or
mov
decl
jne
pop
mov
add
lods
outsl
sub
inc
xor
adc
mov
cld
aas
cmp
mov
sub
cmp
icebp
ja
mov
inc
repnz
mov
push
test
ds
dec
aaa
and
mov
fs
dec
and
mov
xchg
inc
es
add
add
call
aam
adc
lret
ljmp
incb
hlt
popa
add
cmpsb
movsb
aam
std
inc
dec
and
mov
test
idivb
mov
push
jge
lcall
add
clc
in
loop
xor
aad
mov
mov
pop
nop
or
xor
fcomps
movsb
pop
or
push
or
mov
xor
mov
fisubl
mov
js
dec
popa
pop
lods
sub
fadds
mov
inc
aam
adc
pop
add
subl
add
xchg
scas
fiaddl
pop
jbe
loopne
rol
div
clc
cli
cmp
mov
sub
nop
movsl
ss
fwait
push
adc
fmul
mov
fdivrs
or
pop
adc
add
push
pop
jmp
int3
and
add
add
dec
mov
mov
pop
xchg
mov
cli
jle
ds
push
and
repnz
adc
mov
mov
ds
cld
push
sbb
cmp
xchg
pop
pop
fldt
mov
loop
push
insb
outsl
jo
cmp
loopne
adc
mov
mov
pop
jo
lock
in
aam
fcoms
or
add
or
cmpsl
shlb
lea
push
add
pop
aam
add
stos
mov
mov
adc
cld
xchg
mov
nop
pop
test
sbb
mov
incl
xchg
cmp
in
test
roll
or
mov
pushf
push
js
es
lods
inc
pop
mov
je
test
add
aaa
aam
lods
or
call
push
mov
push
xchg
cmpsb
push
pop
dec
or
pusha
and
cmp
fiaddl
into
and
pop
sbb
clc
pusha
pop
sub
push
popa
jp
xchg
in
nop
inc
dec
mov
bound
jp
test
ljmp
jnp
in
pop
lea
int
pop
sahf
movsb
sub
jge
loop
adc
xor
sbb
add
sbb
pop
cld
cmp
mov
mov
leave
dec
inc
stc
ficoms
and
out
add
sbb
lret
rolb
xchg
test
cmp
cmp
enter
dec
aas
mov
das
js
lcall
lret
pushf
ret
jbe
out
adc
pop
iret
in
test
lods
fstl
imul
scas
mov
dec
adcb
xchg
nop
dec
les
fsubrs
add
sub
pop
jo
push
roll
lcall
or
jne
mov
arpl
pusha
call
pushf
and
push
out
dec
enter
add
int3
leave
hlt
mov
xor
ljmp
and
jno
adc
cli
pop
lcall
pop
jg
sub
mov
ljmp
mov
imul
cld
or
push
sbb
push
jbe
js
sub
rorb
jecxz
mov
in
cmp
dec
js
pop
mov
mov
adcb
push
sti
push
xchg
inc
gs
inc
lock
sbb
sbb
inc
adc
adc
add
dec
push
xchg
jle
adcl
lret
push
sar
fldenv
push
adc
mov
lods
sub
fcos
loop
dec
xchg
scas
sub
push
in
push
xchg
push
or
cmp
rcl
mov
imul
adc
adc
push
rol
sub
scas
pusha
push
mov
dec
roll
sub
std
mov
repnz
cmpsb
jle
adc
and
aas
sub
lret
push
and
je
or
loop
je
cwtl
push
data16
or
js
pop
mov
sub
aam
mov
or
in
pop
inc
mov
out
and
or
add
and
mov
js
outsb
mov
je
add
dec
outsb
jge
dec
xor
decl
jl
dec
outsb
gs
pop
fistps
rorb
les
sbb
mov
sbb
inc
int3
adc
cmp
mov
mov
and
dec
add
test
fs
xor
and
push
add
notb
mov
outsb
mov
sub
dec
sbb
mov
inc
jo
push
and
cmp
test
sbb
in
andl
fsubrl
jg
enter
or
leave
enter
xchg
sub
and
and
jge
outsl
test
pop
or
adc
dec
leave
and
sbb
mov
mov
hlt
je
out
dec
pop
inc
jmp
shl
inc
outsl
pop
mov
dec
cld
decl
push
ret
inc
mov
pop
mov
dec
pop
mov
and
stc
popa
sar
pusha
ljmp
or
dec
adc
js
mov
push
ret
test
pop
andb
xchg
add
dec
push
and
cmp
xor
daa
fcmove
push
cmpsb
push
dec
inc
js
rolb
jb
xor
dec
add
mov
popf
inc
jl
mov
dec
inc
or
fidivl
and
sbb
ds
push
adc
push
outsb
push
jmp
add
testb
dec
or
test
sbbl
or
sbb
inc
rorb
adcb
insl
xchg
xchg
push
adc
mov
test
fst
inc
mov
into
fdivrs
cmpsb
adc
mov
test
sbb
dec
fsubrs
mov
pushf
cmp
xchg
mov
jp
lss
cld
push
mov
mov
adc
loop
inc
cmpsb
stos
or
inc
repz
shl
decl
and
push
add
frstor
ds
or
fmull
dec
jmp
call
mov
mov
push
cmp
pop
mov
inc
push
sbb
pop
xchg
ss
mov
insb
or
fildll
or
imul
out
xchg
lods
neg
xchg
hlt
aas
xchg
push
movsb
pop
imul
out
adc
adc
ret
cmp
inc
mov
add
pop
mov
xchg
notl
cmp
xor
xlat
cli
and
jb
bound
push
hlt
pop
scas
add
adc
or
or
add
dec
and
mov
lock
xor
xor
jl
jne
add
cmp
cld
push
imul
lods
out
jmp
push
or
inc
inc
mov
lret
jmp
jl
mov
push
rclb
jb
test
imul
outsl
push
xor
cld
cmpsl
pop
jno
mov
xchg
jge
test
mov
jmp
xor
fwait
rolb
mov
and
loop
call
les
pop
add
adc
push
add
adc
pop
sbb
dec
nop
dec
sub
xchg
sbb
sbb
pop
rorb
jb
repz
pop
jg
and
or
add
inc
cwtl
les
jnp
pop
cmp
add
enter
cmp
ffreep
test
sub
shlb
loopne
cmp
mov
aas
ret
sub
ret
cmpl
push
inc
xor
xchg
pop
loope
pop
mov
pop
jns
or
insl
repz
or
mov
cmp
std
lret
cmp
jmp
cmp
hlt
push
xchg
clc
dec
iret
or
pop
mov
les
aaa
sbbb
xorb
mov
jl
outsl
adc
sbbl
aad
and
or
stos
pop
hlt
or
iret
mov
cmc
or
pop
mov
fimull
mov
cmc
insl
ret
lds
pop
sbb
push
and
push
jp
ret
add
insl
aaa
cmp
std
inc
or
sbb
test
push
in
push
mov
or
jno
mov
jo
or
js
data16
jle
testl
push
lret
or
mov
rclb
xchg
mov
les
mov
and
sub
rorb
sbb
call
push
push
lcall
inc
push
jl
mov
rclb
shll
pop
push
mov
or
sub
loopne
out
mov
test
add
mov
pop
loopne
cmp
fiaddl
mov
dec
cmp
call
ds
mov
shr
inc
ret
imul
push
mov
test
push
loope
nop
hlt
add
mov
inc
adc
push
jle
sub
loop
push
fdivrs
pop
stos
outsb
xor
andl
pop
leave
jne
inc
mov
pop
rorl
add
movsl
or
rcll
sub
fwait
or
fiaddl
cmp
fisubrl
out
add
call
jnp
daa
mov
inc
aaa
pop
add
xor
xor
outsl
ret
loope
inc
or
shlb
pop
ret
push
mov
sbb
call
call
pusha
call
jge
xchg
jle
pop
sub
cli
nop
inc
call
faddl
mov
pop
xchg
sbb
jl
xlat
inc
imul
bound
xor
push
push
push
pop
clc
fcomp
addb
xchg
adc
test
xor
push
push
test
pop
xor
outsb
in
xchg
fstps
orb
sub
cmp
dec
out
mov
fistps
stos
test
mov
jge
cmp
cmp
mov
jo
mov
sbb
adc
sbb
and
push
jl
pop
fcom
ja
mov
lock
sarb
mov
push
pop
xor
lahf
into
sbb
push
je
add
clc
push
fdivrl
mov
imul
sub
mov
sbb
dec
xor
jmp
jbe
ret
out
rcl
xchg
scas
sbb
xchg
into
inc
fs
or
pusha
loopne
pop
jmp
pop
incl
dec
ret
cli
loopne
mov
xchg
dec
nop
xchg
cmpl
subb
push
pop
mov
sahf
ret
xchg
xor
lock
pop
dec
icebp
imul
mov
test
xchg
movsb
lea
repnz
xor
mov
ja
and
or
stos
dec
shll
xor
jb
imul
repnz
lock
incl
sbb
rorl
pop
pop
sti
pusha
sub
push
movsb
out
nop
adc
jae
pop
mov
mov
je
jmp
gs
pop
call
testb
cmp
adc
dec
cld
sbb
push
add
xchg
mov
into
push
push
push
push
js
dec
loop
test
fcom
push
pop
ficoml
mov
and
push
sub
pop
nop
mov
es
stos
add
push
add
pop
mov
mov
je
gs
mov
lds
and
sbbb
jnp
push
xchg
push
or
retw
or
inc
aam
xor
testb
mov
rcrb
sbb
dec
cmp
push
inc
pop
inc
js
sub
dec
pop
adc
push
stos
pop
ffreep
push
lret
fdivrs
outsb
cld
es
and
xor
push
xchg
or
stos
mov
push
les
lock
addl
mov
movsl
or
mov
dec
mov
pop
test
mov
imul
cmp
dec
std
divb
pop
mov
enter
cmp
mov
add
mov
sub
dec
sub
stos
adc
xor
cld
inc
shlb
test
pop
fidivrl
jbe
outsb
out
icebp
arpl
mov
add
push
cld
mov
aam
or
lret
mov
movsb
cmp
outsl
pop
jl
les
push
push
jg
sub
add
imul
mov
fisubrl
imul
aad
lcall
pop
push
cwtl
xor
mov
xor
test
or
sub
push
inc
jmp
xlat
mov
insl
test
jl
mov
dec
inc
mov
aaa
xor
test
mov
adc
sahf
fsts
daa
xchg
pop
push
and
adc
les
mov
insb
lock
mov
stc
adc
add
push
adc
fadd
jb
js
dec
mov
fs
cli
push
addb
ficoml
paddd
test
add
adc
bound
lret
lock
lret
jp
aam
lea
cmp
out
ret
mov
mov
cmp
mov
lds
jo
dec
cmp
sbb
add
std
int
lret
je
dec
lcall
daa
pushf
add
inc
push
cmp
lods
push
push
xchg
je
and
pop
cwtl
lea
add
cmpsb
push
sub
test
imul
insl
or
fadds
mov
test
shufps
hlt
mov
xor
mov
mov
dec
notl
add
push
add
cmp
cld
dec
cmp
icebp
pop
sub
pop
add
dec
mov
mov
or
push
fdivrp
xchg
mov
test
jmp
and
iret
and
aas
jbe
and
fstpt
in
clc
pop
push
mov
mov
outsl
mov
insl
loop
and
bound
test
loope
pop
xchg
fimuls
cmp
shll
xorl
jp
add
outsl
push
adc
push
jle
les
adc
int3
lret
shrl
xchg
mov
cld
in
jmp
lret
outsb
push
xchg
xchg
sub
pusha
mov
test
stc
into
int3
into
rclb
dec
loop
lods
mov
lods
das
dec
add
clc
add
leave
inc
push
call
pop
je
adc
orl
mov
ror
xchg
sbb
icebp
daa
xor
inc
das
inc
mov
inc
push
bound
clc
scas
jb
push
add
mov
pop
jo
pop
lods
stos
push
sarl
cld
int3
dec
ficoms
test
jle
or
aaa
adc
mov
rolb
and
in
inc
fcmovne
lock
sar
jo
adc
jno
or
std
push
pop
xor
rclb
pop
icebp
shrl
and
xor
std
mov
adc
cli
xor
cli
sub
adc
sub
push
in
and
sub
fs
jae
jp
enter
cmp
lock
and
mov
adc
sbb
or
sbb
push
rol
lret
pusha
lret
outsl
inc
xchg
fdivrp
rol
test
test
sahf
test
adc
xchg
inc
pusha
test
pusha
add
add
insl
bound
cmp
dec
js
subb
dec
ds
fadd
sbb
inc
or
jmp
enter
xor
cmp
adc
dec
jmp
in
cmpsl
sub
jns
test
xor
ret
test
and
mov
xor
mov
xor
ret
inc
pushf
mov
lcall
data16
mov
push
daa
inc
incl
xor
std
jecxz
add
pop
mov
sti
testb
push
jmp
xchg
inc
inc
insl
fwait
loopne
dec
push
mov
xor
mov
cmpsl
sbb
mov
movsl
push
loopne
and
push
dec
adc
movsb
shl
xor
pop
cld
add
xchg
add
hlt
mov
mov
push
jb
adc
loopne
pop
inc
call
pop
jae
rolb
loop,pn
or
dec
mov
pop
icebp
xchg
mov
mov
cmp
call
push
and
rcr
shrb
imul
push
mov
inc
dec
lret
dec
push
and
out
and
inc
xor
sbb
out
stos
imul
xchg
repnz
fnsave
or
adc
and
cmp
sub
mov
pop
clc
ret
jnp
jmp
inc
or
out
adc
add
jbe
or
rcl
add
es
hlt
xor
jnp
les
cmp
add
ds
or
into
adc
ljmp
push
lock
push
loop
push
xor
xchg
movsb
insb
loopne
mov
outsl
test
je
xor
push
hlt
aad
psubusb
sahf
push
mov
jbe
push
xchg
or
mov
test
add
mov
aam
push
sub
jg
int3
out
pop
test
lret
push
movsl
fwait
dec
mov
incl
jmp
adc
enter
lret
loopne
inc
dec
lret
jo
jecxz
outsb
in
jle
sbb
jo
mov
mov
and
movsb
cmc
cmpsl
cmpsb
test
cmp
mov
loopne
adc
shlb
inc
call
or
sahf
push
leave
out
add
sbb
push
inc
call
cmp
sbb
test
rol
sub
sub
mov
dec
mov
dec
push
scas
inc
cs
test
ss
xor
mov
add
jae
in
xchg
icebp
and
clc
mov
insl
movsl
fists
cmp
ljmp
sub
xor
leave
loop
mov
mov
mov
sbb
jl
lcall
lcall
rcrl
movb
dec
movsl
mov
orl
imul
add
dec
jb
push
or
jp
sbb
adc
adc
lock
loopne
and
lods
or
andl
mov
lea
loope
cld
inc
sub
mov
sub
std
shlb
outsb
std
mov
sub
dec
or
pop
push
mov
icebp
mov
sahf
dec
loopne
lret
divb
pop
das
inc
adc
jo
mov
sbb
inc
add
adc
dec
sbb
scas
push
hlt
adc
and
aam
cwtl
adc
std
mov
and
cmp
dec
mov
xor
xchg
jo
add
xor
fildll
push
inc
mov
jle
adc
loope
or
or
push
jge
xchg
iret
jmp
sbb
mov
call
int3
out
inc
xchg
jle
testb
add
add
pop
cmp
dec
roll
hlt
push
mov
adc
lea
or
lock
push
push
in
sub
adc
jle
inc
gs
dec
or
loope
jg
cli
cmp
jecxz
mov
push
push
decl
dec
mov
cwtl
mov
jmp
push
das
subb
lret
mov
stos
push
mov
or
ret
rcrb
adc
xor
push
pop
mov
push
lcall
adc
sbb
stc
and
pop
sbb
adc
pushf
sub
dec
cmpsb
push
add
je
mov
sbbl
dec
jle
xor
add
mov
or
dec
testb
call
sub
jecxz
inc
cli
xor
and
dec
pop
adc
sub
push
mov
xlat
lret
addr16
int3
addb
sbb
jb
add
push
xchg
push
std
push
enter
mov
fnstcw
fcoms
outsb
and
push
test
lcall
or
cmovs
or
loop
in
push
out
fsubrl
inc
andl
shlb
mov
xchg
mov
push
inc
mov
mov
imul
test
mov
pop
mov
paddd
add
es
push
xchg
adc
cli
cmp
clc
aas
scas
cmp
inc
aam
jge
mov
clc
mov
pop
in
shr
lea
loopne
inc
mov
test
dec
mov
mov
inc
jmp
mov
pop
or
mov
lods
std
push
stos
inc
sbb
jb
icebp
sbb
test
xorl
cmp
sbb
cld
cmpl
dec
inc
jge
xchg
test
js
cs
push
ds
divb
inc
into
or
add
je
data16
dec
pop
and
push
shll
jmp
js
dec
add
test
in
xor
push
and
xor
dec
add
nop
dec
cmp
push
jae
push
dec
aam
xchg
test
cmp
and
fisttps
mov
mov
xchg
add
ret
pop
ret
xor
push
add
call
js
lret
clc
lcall
jmp
sbb
arpl
in
pop
push
insb
pop
jmp
leave
mov
cmp
notl
lods
dec
lods
call
lea
mov
xorb
ss
je
lock
push
jb
aas
mov
and
sub
sbbl
mov
pop
push
cli
jnp
push
loopne
inc
add
outsl
icebp
mov
cmpsl
punpckldq
add
cs
fistpl
sub
sbb
sahf
push
mov
test
mov
xorb
into
gs
cmc
pop
mov
cld
mov
and
outsb
lcall
and
mov
fcompl
xchg
mov
fs
clc
adc
je
xor
lret
ret
pop
cmc
loopne
ja
adc
push
mov
insb
add
or
rorb
movl
test
mov
inc
je
adc
adc
mov
or
pop
out
pop
add
mov
loop
imul
add
call
mov
pop
adc
or
xor
push
clc
or
sbb
add
cld
loop
inc
cli
or
ss
shl
mov
mov
sbb
push
pop
mov
inc
rclb
std
mov
jb
adc
movsb
push
mov
push
cmp
loope
ljmp
fidivs
inc
mov
xor
call
ret
mov
mov
mov
out
lret
fidivl
out
stos
stos
inc
adc
or
mov
xchg
xchg
add
push
xchg
add
jo
xchg
adc
sbbb
sbb
mov
clc
cmpsb
insl
call
xchg
dec
mov
or
clc
int
push
xor
mov
pop
push
loopne
inc
lock
add
dec
push
jge
call
sub
pop
das
mov
adc
lock
jp
shrb
mov
xor
icebp
sbb
loope
mov
nop
or
nop
adc
subb
popa
in
mov
gs
and
out
mov
inc
fisttpl
bound
jg
push
mov
mov
adc
filds
and
ret
inc
call
sub
rclb
lcall
mov
push
mov
movsb
test
jp
pop
es
push
popa
push
xor
shl
cs
cmp
add
jo
adcl
adc
xchg
in
pop
adc
ss
rolb
add
inc
or
enter
inc
adc
xor
or
cmp
data16
clc
xchg
push
jl
cld
call
sbb
lcall
cld
inc
rorb
push
dec
add
cld
add
addb
push
lret
push
add
aam
mov
push
pop
das
pusha
shll
mov
pop
je
pop
mov
loop
test
push
push
jge
or
fs
test
adc
adc
push
xchg
fiadds
jle
out
adc
adc
dec
testb
movsl
sbb
in
jb
pop
cmp
shlb
testl
shrl
es
dec
push
jne
inc
cld
mov
cmovb
aam
sub
loopne
fidivrs
cmp
mov
cmpsb
mov
dec
pop
dec
adc
push
pop
pop
por
in
xchg
sti
pop
mov
add
jmp
enter
push
lock
xchg
pusha
mov
xchg
push
test
mov
fadd
test
adc
xor
dec
cmp
insb
pop
dec
jle
adc
inc
push
xchg
cmp
and
inc
je
aaa
jo
cwtl
popa
cwtl
test
icebp
jmp
add
inc
notb
rcl
adc
push
mov
mov
sub
and
outsl
clc
pop
add
mov
inc
xchg
in
sub
adc
adc
xchg
rorl
ljmp
mov
xlat
mov
inc
sub
ficompl
and
cmpsb
add
mov
push
push
cmp
pop
aaa
cmp
xor
rcll
cmp
push
insb
es
ret
mov
ss
add
jbe
pop
call
xchg
and
add
int3
jae
sub
mov
mov
icebp
inc
sbbb
fcompl
outsb
add
sarb
push
xor
mov
lea
push
xor
cli
add
and
es
cmc
mov
incb
mov
int
jp
movsl
ds
cmp
aam
clc
mov
in
add
or
adc
adc
inc
loop
cmpsl
dec
adc
test
divl
movb
repnz
jb
and
inc
adc
pop
dec
cld
cs
lret
clc
push
std
xlat
jmp
or
ret
mov
sahf
adc
out
sub
push
sti
add
push
sti
jge
or
outsl
pop
aas
xchg
insl
sbb
aam
arpl
loopne
push
mov
sbb
mov
xchg
int3
lahf
xor
add
cmp
pushf
push
sub
outsb
clc
add
jmp
sti
roll
icebp
fcmovnu
cmp
lret
add
and
pop
push
mov
scas
dec
xlat
sbb
mov
or
sub
decl
out
add
adc
pop
addl
mov
loop,pt
scas
mov
icebp
and
push
sub
in
mov
sub
inc
and
push
or
jb
lcall
pop
jge
je
sbb
or
movsb
fcoml
cld
pusha
pusha
sbb
jbe
mov
adc
push
jnp
or
mov
ret
sub
fidivrl
or
push
adc
dec
mov
mov
adc
in
shlb
sbb
or
pop
adc
in
mov
xchg
pop
pushf
add
mov
inc
pusha
mov
push
pop
pop
jae
push
movsb
lock
xchg
push
fwait
xchg
jecxz
adc
mov
push
adc
lret
mov
push
jge
or
mov
xor
mov
pusha
xchg
fs
ljmp
pop
pusha
dec
and
cltd
cmp
and
clc
fwait
xchg
ds
cs
mov
movsb
inc
les
push
sub
mov
jb
push
mov
mov
mov
add
or
std
pop
sub
pop
loopne
sbb
stos
andl
mov
shrl
hlt
add
insl
or
shrb
xchg
int
jo
sub
fidivl
sub
xchg
inc
cli
dec
xor
pusha
xor
js
aam
icebp
repnz
xor
add
and
jno
xchg
lea
incb
dec
inc
mov
jmp
les
xlat
and
cmp
hlt
pop
inc
adc
fwait
and
jmp
push
mov
sbb
xor
mov
push
adc
scas
cmpsb
add
loopne
push
xor
xchg
mov
inc
repnz
mov
sbb
mov
and
add
mov
je
aas
mov
inc
cmp
push
fs
jmp
sbb
movsb
insb
fsubrs
sub
push
push
jo
pop
insb
imul
mov
pop
dec
sbb
loopne
das
jmp
sarb
inc
pop
mov
jnp
sub
addb
test
sub
sub
sub
push
mov
leave
aaa
jp
aaa
adcl
add
loopne
add
adc
in
aaa
push
mov
push
add
mov
in
push
push
pop
mov
cmp
xbegin
lret
lock
add
sbb
outsb
dec
rorl
clc
and
ja
xchg
jne
outsl
xlat
mov
add
push
call
and
out
clc
xchg
sbb
add
push
cmp
test
movsb
jmp
into
rolb
mov
test
lock
jle
mov
subb
bound
jp
inc
xchg
push
add
inc
cmp
xor
adc
scas
adc
shl
mov
ljmp
add
xchg
ret
cmp
xchg
lods
hlt
insb
lret
mov
orb
push
jmp
pop
add
sbb
xchg
cmc
call
rcll
and
sti
jg
movsl
add
xor
je
stc
push
cld
dec
pop
add
jo
sub
inc
push
cmp
cmp
pop
or
js
imul
cmp
mov
gs
in
shl
or
andb
xor
fisttpll
add
inc
or
dec
inc
mov
add
into
pop
or
cli
push
jne
pop
test
xor
jo
lcall
outsb
adc
shlb
imul
test
mov
mov
sbb
pop
shr
sti
hlt
mov
aaa
ds
in
clc
jl
andb
xor
dec
mov
jo
aam
pop
pop
shlb
xor
push
dec
dec
mov
call
xchg
nop
inc
push
xchg
loopne
rcrb
shlb
mov
and
sbb
push
int
jne
test
test
mov
ss
ret
movsb
pusha
sti
sub
xchg
sub
and
addb
ss
mov
test
cmp
or
pushf
mov
mov
or
mov
insl
add
push
mov
mov
push
adc
and
das
rcl
shrl
or
pop
hlt
pop
add
in
jne
addl
xchg
jbe
push
ret
dec
mov
pop
lcall
mov
and
pop
cld
hlt
xor
xchg
push
xor
lcall
hlt
mov
push
cwtl
mov
stos
hlt
xor
xor
push
add
push
cmp
test
jle
mov
cli
push
push
fmull
add
sub
ret
dec
adc
int3
push
add
sbb
mov
in
adc
test
and
xlat
dec
inc
test
cmp
lea
cmp
add
jmp
and
out
lret
fcmovnb
adc
or
xor
lds
adc
add
adc
incb
lcall
rclb
add
jb
jb
cmpsb
and
push
ret
mov
lret
movsl
stos
pop
ss
inc
adc
jg
xor
push
inc
loop
fwait
in
lret
pop
xchg
push
pushf
arpl
or
mov
mov
cmp
js
inc
pop
sbb
cld
hlt
and
insb
loope
scas
pop
repz
cmpsb
or
inc
data16
xorl
punpckhdq
les
shr
xor
dec
clc
rol
jmp
aas
jecxz
repz
xor
push
jne
mov
pop
inc
ljmp
cmp
sub
pusha
mov
out
je
push
loopne
mov
popa
pop
add
test
adc
or
es
inc
mov
xchg
ficomps
jns
sub
mov
mov
push
mov
out
jmp
adc
xor
xchg
call
sbb
sarb
and
pop
mov
push
xor
mov
clc
decb
pop
mov
dec
cld
ret
push
and
stos
sbbl
push
xchg
test
scas
fsubs
xchg
mov
shrb
push
xchg
push
testb
mov
and
mulb
in
enter
sub
mov
outsl
adc
dec
sub
or
adc
mov
adc
fs
pop
jle
and
pop
popa
lock
inc
xor
inc
movsb
shlb
fwait
add
std
or
ljmp
mov
outsb
adc
outsb
adc
test
dec
ljmp
insl
mov
cmp
or
and
shlb
loopne
roll
push
and
push
jne
inc
push
jge
jge
add
fldcw
xor
inc
mov
call
arpl
loope
jbe
mov
xorb
pop
pop
insb
sbb
enter
filds
dec
aam
push
pop
incl
push
push
popf
pop
add
push
dec
mov
cmp
movsl
cwtl
div
push
jmp
mov
mov
std
sub
xchg
fadd
pop
scas
sbb
sbbb
xor
hlt
adc
rclb
jp
mov
fcoms
popa
fdivrs
push
hlt
mov
int3
insb
adc
jmp
jmp
or
inc
mov
cs
lcall
sub
sbbl
push
pusha
adc
gs
dec
comiss
ret
or
jnp
daa
gs
call
cli
jl
sub
sar
xor
add
push
xchg
inc
xchg
nopl
mov
add
mov
sub
sahf
mov
push
push
ret
xor
pop
mov
adc
orb
scas
push
outsb
decl
test
loop
movb
je
inc
rclb
loope
cli
mov
inc
cmp
mov
xor
hlt
clc
fwait
leave
mov
shll
daa
or
jg
mov
roll
jmp
lea
push
gs
xchg
jo
add
push
aaa
js
scas
push
je
and
sub
addr16
leave
sub
rcrb
add
pop
jb
pop
hlt
and
loop
add
jae
rorb
popf
addr16
dec
dec
push
call
ret
adc
adc
or
xorb
test
in
mov
push
push
mov
movsb
stos
add
add
ja
clc
fisttpll
lret
popa
rolb
stc
mov
inc
prefetcht2
rol
mov
cmp
add
mov
js
rcl
or
push
adc
cwtl
int3
cmpb
fs
scas
out
adc
xchg
test
ret
stos
and
std
rcl
mov
mov
fsubrs
pop
push
sbb
hlt
xor
pop
aam
mov
adc
mov
sub
adc
mov
mov
or
xorl
cmp
lock
ja
fimull
jne
pop
sub
into
fs
push
xor
add
decb
shll
aam
sbb
pop
push
rcrb
js
je
sub
and
adc
and
add
and
lea
jecxz
push
jl
dec
inc
push
roll
in
mov
xor
sahf
dec
push
push
into
and
filds
inc
jge
test
xchg
cli
cs
clc
inc
fmuls
in
fsubrs
movsb
sbb
in
adc
outsl
cwtl
mov
fsubrs
fisubs
data16
inc
cld
or
xor
pop
imul
mov
stos
stc
stos
data16
sbb
out
call
sub
enter
mov
mov
jno
adc
jge
rolb
sub
into
je
xchg
lods
pop
add
call
mov
xor
pushf
push
sbb
and
loop
lcall
jne
or
jbe
das
rcrb
lea
out
push
imul
inc
push
dec
mov
add
enter
inc
dec
mov
mov
push
mov
cli
and
pop
lea
loope
jge
mov
mov
enter
sahf
shlb
mov
je
mov
pop
and
push
adc
cmpl
pushf
inc
loopne
push
pop
test
ds
cmp
jg
sarb
inc
add
popl
xor
ret
repz
jg
lock
cmp
push
movsb
xchg
add
clc
inc
and
sub
inc
loopne
mov
pop
mov
inc
fwait
dec
cwtl
in
out
je
mov
adc
shlb
dec
xor
push
pop
sbb
jg
xchg
shrb
stos
out
push
fwait
push
pusha
mov
mov
fmul
shl
test
lret
popl
pop
mov
fsubrs
jbe
mov
rclb
ret
mov
es
dec
rolb
lock
mov
dec
inc
add
xor
div
mov
insl
int3
adc
push
insb
inc
push
sbb
sbb
jl
out
add
call
and
cli
xor
adcb
or
mov
cs
mov
inc
decb
jl
adc
rolb
adc
and
in
push
test
add
push
and
notb
cmpsb
mov
cmp
push
xor
push
or
mov
bound
or
add
pop
add
cs
mov
insl
adcb
cwtl
mov
push
dec
sbb
jle
push
pusha
enter
push
fadd
mov
movsb
daa
lret
adc
jb
add
mov
pop
xchg
sub
lock
or
sub
pusha
ret
ds
icebp
notb
add
dec
js
pushf
add
push
adc
mov
adc
lock
jmp
inc
push
hlt
pop
xchg
and
xchg
sub
adc
xchg
lock
test
jae
test
push
cltd
test
call
aaa
dec
cmp
jl
fsubrs
add
fdivs
fnstcw
inc
dec
jmp
pop
imul
scas
nop
jmp
ret
add
in
nop
push
js
ret
dec
push
repz
je
pop
add
stos
std
inc
sub
stos
imul
xchg
out
mov
cmpsl
add
cmp
aam
adc
ljmp
nop
sub
and
dec
dec
xchg
sbb
mov
test
cmp
fistpll
test
mov
xchg
jmp
mov
mov
sub
popf
pop
xor
ret
and
or
jmp
adc
fsubs
and
jmp
jmp
add
push
filds
out
loopne
in
subl
push
dec
push
jbe
sub
xchg
test
adc
pop
jns
fisttpll
test
lods
test
adc
jmp
ja
dec
outsl
cld
jo
push
in
movsl
or
std
dec
pop
and
dec
aam
cmp
push
adcl
sub
outsl
adc
mov
clc
cmp
lods
jo
xchg
add
test
mov
fisttpl
xor
clc
xor
dec
jle
lcall
into
int3
shlb
cld
inc
mov
mov
push
mov
data16
or
push
cmp
lods
jbe
arpl
fildl
adc
rol
xchg
push
ss
dec
dec
loopne
aam
call
cmp
sbb
add
mov
sti
orb
sub
leave
mov
clc
sub
pop
sbb
sub
xor
add
fidivs
nop
mov
inc
push
orb
sub
outsb
jg
mov
notl
and
xor
pop
cltd
pop
lea
mov
push
push
mov
lods
outsl
jo
rolb
adc
ds
repz
jne
jmp
or
fidivrs
pop
adc
sub
cmpsb
jnp
mov
push
loop
xor
andl
cmc
mov
pop
mov
and
push
push
hlt
xor
sub
insb
rcr
add
and
iret
ljmp
push
sahf
gs
adc
fldcw
pop
fwait
jo
andl
add
call
push
insl
and
jmp
hlt
pop
add
fildl
inc
aam
and
rclb
adc
adc
push
adc
adc
inc
sub
mov
rolb
test
cmp
and
enter
add
loopne
js
adc
or
mov
shrl
std
fdivs
or
test
ljmp
in
dec
cwtl
jns
mov
lods
popa
mov
pop
lock
jp
mov
fdivrl
xor
push
aaa
and
inc
xchg
mov
add
lods
push
cli
push
and
push
xorb
and
adc
mov
mov
imul
aam
ret
mov
mov
add
aas
lcall
adc
decl
in
xor
and
inc
jmp
loop
loope
xor
lods
leave
cmc
icebp
lcall
adc
push
sbb
add
push
out
xor
aad
pop
xchg
rol
pusha
pop
push
int3
insb
rorb
sub
fs
js
inc
arpl
sub
inc
daa
scas
lcall
xor
dec
or
mov
in
add
cli
sahf
xor
das
add
call
xor
shl
add
xor
xchg
mov
gs
dec
pop
sbb
dec
dec
in
pop
push
mov
adc
push
push
lock
jne
cltd
mov
push
inc
lock
movsbl
push
cli
testl
loop
fbld
mov
push
jnp
rcrb
call
out
mov
jmp
rdmsr
notb
xchg
pop
jmp
sbb
adc
mov
pop
sub
and
add
dec
cmpsb
std
push
out
fsubrs
je
add
cld
sbb
cld
cld
push
cli
mov
leave
mov
or
adc
adc
dec
lock
adc
sub
mov
xor
sbbb
daa
adc
jb
fdivs
call
jmp
shlb
mov
sbb
loop
push
push
rcll
call
push
movsl
jmp
adc
bound
leave
adc
and
fcompl
sbb
pop
xor
in
pop
xor
ljmp
rcl
xor
mov
and
sub
inc
xor
stc
inc
aam
add
adc
or
dec
sub
jmp
nop
stc
rclb
mov
jmp
loopne
jo
push
and
ss
pop
mov
pop
cmc
push
jb
rclb
jmp
imul
sub
clc
xor
icebp
sbb
test
or
pop
and
call
add
xchg
jne
xor
mov
add
xchg
dec
loope
xlat
icebp
insb
mov
adc
pop
push
out
pop
cmp
or
lret
xlat
xorl
inc
xchg
insb
jg
cmp
stos
mov
mull
cli
mov
xchg
inc
decb
mov
mov
je
pop
or
testb
fcoms
cld
incb
incl
test
ret
adc
inc
and
and
mov
test
inc
rcll
stc
js
lea
outsb
or
mov
clc
into
into
outsl
adc
jb
and
mov
push
xchg
test
fchs
cmp
sbb
jmp
dec
jl
xchg
adc
je
faddl
sbb
mov
shrb
cmc
cmp
or
push
mov
ja
inc
or
inc
push
xor
xchg
add
lret
add
ljmp
test
mov
cmp
stos
or
cwtl
mov
mov
cmpsb
push
in
add
cmpsl
es
jle
sarb
les
je
xor
xlat
jo
test
in
sbb
push
stos
mov
xchg
ss
jmp
and
cli
push
inc
adc
pop
xchg
ja
popf
ficomps
dec
push
pop
jb
pop
bound
jg
cmc
mov
mov
sbb
add
inc
jmp
xor
inc
xchg
dec
fbstp
sub
idivl
push
cld
divb
loope
add
and
test
add
sbb
inc
mov
sub
sti
mov
mov
add
scas
jmp
imul
out
arpl
and
je
fisttps
mov
movb
fcomp
lock
and
push
sti
cli
out
inc
sub
jb
mov
inc
test
inc
lds
push
inc
jl
and
and
inc
mov
jne
test
adcl
cld
std
in
add
push
cmp
fcompl
std
fldl2e
mov
sub
imull
mov
push
push
xorl
dec
outsl
push
dec
push
mov
aam
mov
cmp
xor
test
std
and
shrb
adc
mov
cmpsl
jp
xorb
push
aam
jne
pop
repnz
rol
and
nop
mov
shlb
cmpsl
lods
daa
imul
dec
sbb
jge
int3
sub
jmp
sar
pushf
push
mov
adc
pop
aam
add
daa
xchg
sbb
add
je
push
ds
xchg
push
mov
xadd
cmp
movups
ret
xor
inc
test
mov
rcrb
xchg
test
adc
aas
cld
mov
call
sub
pushf
dec
int3
ljmp
insb
jge
loopne
mov
or
aaa
push
jecxz
xor
leave
cmp
inc
lea
pop
outsb
or
stos
into
adc
mov
das
lods
adc
sbb
inc
scas
cmc
mov
test
pushf
mov
add
rolb
lds
jp
mov
xchg
and
inc
push
aam
push
inc
and
adc
dec
orb
fs
xor
add
xor
das
cmp
ds
and
and
and
gs
push
dec
data16
adc
in
xchg
sub
fs
xor
or
ljmp
jno
in
push
jb
sub
push
gs
jnp
loopne
subb
dec
push
adc
fs
cmp
addb
xlat
add
cmp
mov
cmp
rol
daa
sub
cmp
int3
inc
mov
aam
pop
out
cmp
sbb
or
sbb
loopne
ret
push
pop
nop
rolb
pushl
pop
add
rcrb
xor
mov
cmc
lods
rcl
data16
rol
loop
nopl
fiaddl
into
lock
movsl
jp
and
and
ret
bound
adc
sbbb
imul
lea
mov
fnstcw
pop
or
lock
or
xor
ret
jb
pop
incb
jbe
dec
add
add
sub
or
ret
push
jl
loop
xorb
insl
sarb
add
cli
ja
aas
inc
add
add
or
jge
add
das
add
into
fs
sbb
movl
pop
pop
inc
imul
dec
int3
add
or
test
inc
adcb
andl
movsb
loope
ret
popa
scas
xor
push
les
and
adc
push
push
add
dec
add
das
bound
inc
dec
nop
shrb
add
push
cld
fcmovbe
push
lahf
pop
mov
and
pop
rorb
adc
jbe
mov
add
add
add
adc
jne
sub
cmp
mov
push
inc
enter
orb
fcoml
test
adc
push
inc
push
rolb
pop
popa
ljmp
xor
fcompl
dec
pop
clc
mov
mov
mov
out
rcrb
sbb
repnz
cs
je
mov
dec
cwtl
mov
pavgb
jle
jge
push
inc
arpl
lods
je
jmp
aaa
aaa
mov
outsl
pop
cwtl
or
inc
jmp
push
mov
mov
mov
push
xor
sbb
dec
out
jo
cs
cli
rorb
sbb
and
cmp
push
rclb
test
test
outsl
or
ffreep
aas
mov
add
loope
push
fwait
data16
jo
or
fists
or
pop
clc
mov
aam
mov
sub
mov
cli
fadds
cmp
xchg
movsb
in
jmp
insb
xchg
dec
mov
mov
mov
cmp
inc
xor
in
add
xchg
pop
sbb
adc
pushl
lds
add
jecxz
cmp
cwtl
inc
jge
lods
int3
push
div
inc
lea
xchg
push
push
int3
mov
mov
ds
pushf
adc
cmp
dec
pop
jmp
popa
lods
push
lock
call
jo
push
jge
mov
dec
push
dec
push
rorb
jo
pop
add
dec
dec
push
add
add
mov
cli
xchg
and
mov
pushf
jge
add
mov
ds
paddusw
add
data16
gs
movsb
out
mov
jge
fidivl
mov
mov
xor
push
movsb
stos
jp
mov
aad
ds
push
sti
pop
adc
jp
std
mov
and
rcl
popa
fmul
cmp
jle
mov
xchg
push
rol
push
lods
push
sbb
cmpb
lret
inc
sbb
call
stos
ret
xchg
dec
push
cld
xor
lods
xchg
inc
push
push
ret
mov
add
cwtl
inc
inc
sbb
cli
add
mov
pop
cmp
mov
in
inc
mov
test
push
mov
sub
or
cmp
ror
adc
lds
jecxz
rolb
dec
adc
cld
sub
pop
jmp
sahf
cmp
cmpsb
push
std
test
push
mov
pop
push
cs
jae
jl
lcall
aam
adc
push
sahf
sbb
and
jle
ljmp
movsb
popa
mov
scas
xchg
mov
test
push
addl
cmp
test
or
pop
inc
ret
cli
mov
adc
mov
pop
pop
mov
sti
and
enter
mov
sti
fimull
push
std
jo
lods
in
out
sar
inc
xor
or
into
addl
adc
cli
shll
test
clc
pop
pop
dec
mov
pop
insb
mov
outsl
pop
icebp
addb
lret
shr
sub
rclb
outsl
cmp
je
lods
fwait
movsl
jl
lea
dec
aaa
or
adcl
sub
mov
pop
ljmp
ret
hlt
or
lods
mov
add
orl
sub
shlb
mov
icebp
cmp
ret
data16
inc
test
mov
lret
mov
sub
std
or
rcrl
mov
mov
mov
push
mov
or
mov
dec
add
sti
cmp
test
pusha
rep
fcomps
int
subl
nopl
pop
lcall
push
xchg
xor
dec
les
push
add
add
decb
lock
adc
adc
inc
rorb
test
fisubl
popf
sub
mov
cwtl
xchg
push
mov
call
fmuls
xlat
test
lock
dec
rclb
sahf
movsl
add
push
mov
inc
out
add
add
je
mov
pop
sahf
pop
cmp
out
jmp
int3
mov
and
add
mov
jl
loopne
enter
add
inc
xor
add
faddl
push
pop
inc
cmp
add
push
ljmp
out
nop
mov
mov
hlt
sahf
jns
pop
sbb
cmp
jle
cmp
push
aaa
push
hlt
test
jmp
int
pop
rcll
es
adc
cmpsb
dec
pusha
nop
fimuls
push
rorb
mov
or
jl
inc
cld
loopne
cmp
xchg
faddp
jno
adcl
bound
jmp
decb
int3
pop
mov
push
test
lods
mov
cmc
add
cli
ljmp
fildl
es
mov
fidivl
adcl
fistpl
sar
das
dec
mov
or
xor
test
cmp
pop
lock
pusha
inc
xchg
leave
ret
fdivrl
je
jne
mov
jge
or
je
xor
pop
loopne
mov
add
push
jbe
or
cs
lods
es
insb
push
cli
add
sbb
movsbl
pop
push
test
push
push
adc
loope
or
or
cmp
xchg
xor
push
sub
push
push
mov
sub
into
test
aas
inc
js
push
xor
out
call
ret
test
adc
shlb
or
sbb
xchg
sub
inc
daa
test
in
jl
sarl
mov
pop
inc
or
or
dec
icebp
jmp
inc
in
insl
push
jne
mov
or
sbb
push
pop
dec
dec
test
ljmp
lock
mov
push
inc
xchg
adc
test
in
xchg
add
ss
out
mov
add
dec
cld
call
ret
ret
mov
mov
pop
push
in
cmp
aam
sbb
sbb
push
ret
add
jo
cmp
dec
scas
xchg
subl
add
add
and
sbb
aas
enter
dec
loop
incl
push
and
jp
or
push
adc
sbb
mov
test
insb
add
or
scas
shrb
push
dec
fsubrl
mov
fwait
pusha
fiadds
testl
mov
add
and
or
and
add
or
dec
ret
mov
xor
loopne
cmp
and
push
loop
add
fldcw
clc
or
and
or
test
subb
cmp
inc
mov
jnp
ret
sarb
jg
test
jp
orl
or
jp
clc
sbb
in
clc
fwait
and
cmp
ljmp
xchg
add
shl
add
inc
pusha
je
jo
add
sbb
add
push
pop
jecxz
pop
push
sub
mov
sub
mov
mov
mov
inc
in
aam
fadds
add
in
jge
or
xor
mov
mov
popa
shlb
fsubrl
inc
mov
mov
push
out
xchg
xor
icebp
xor
loope
jne
pop
or
adc
inc
push
mov
jb
flds
push
inc
imul
or
push
jb
test
xor
adc
inc
mov
cs
adc
mov
pop
jae
and
xchg
rcll
sbb
ss
addb
push
pavgb
call
repnz
mov
dec
push
add
adcl
aad
rolb
fists
xchg
fdivr
movsb
sbb
cld
inc
jnp
jo
jnp
xchg
and
adc
xor
inc
sbb
xor
xor
push
lds
enter
sbb
push
out
lds
and
dec
mov
or
nop
mov
cld
pushf
mov
xor
divb
pop
sub
jge
aam
mov
mov
pinsrw
pop
pop
mov
or
pusha
mov
movsl
push
mov
loopne
or
leave
push
sarl
jle
cmpsb
sbb
pop
fmull
push
mov
jle
aam
cli
ljmp
push
cmp
mov
lods
sbb
outsl
call
pop
add
repz
test
movsb
sbb
push
clc
cmp
lahf
gs
je
add
add
iret
subb
and
push
testb
and
xor
adc
mov
jl
enter
add
or
push
mov
dec
cmp
add
gs
mov
sti
xor
movsl
movb
add
push
pop
push
stos
inc
mov
ds
mov
adc
pop
mov
add
adc
and
imul
sti
ljmp
push
sarb
jnp
test
add
shl
jle
sbb
mov
jne
jge
or
and
in
js
arpl
xor
add
xchg
in
mov
sbb
sbb
and
sysexit
adc
sub
push
ret
xchg
cmp
cmpsb
loopne
lods
push
sti
test
or
pop
leave
fcomps
xor
cmpsb
lock
call
leave
pop
cld
lea
mov
pop
push
mov
outsl
leave
loopne
mov
or
pop
cmp
push
pop
leave
cmp
jnp
js
jb
dec
and
xor
ljmp
lret
and
inc
push
enter
cmp
dec
xor
and
mov
cmpb
jl
lods
sbb
jne
inc
shl
icebp
sub
xor
mov
or
sbb
ja
or
sub
push
insb
add
and
dec
mov
jno
test
or
cmp
rclb
or
outsb
inc
mov
mov
outsl
pop
out
adc
clc
pop
loopne
sub
and
add
jmp
jl
movsb
push
mov
sbb
js
das
mov
pop
adc
inc
and
adc
scas
add
arpl
test
fsts
daa
or
hlt
es
push
sbb
inc
push
push
call
push
enter
fadd
pop
inc
mov
adc
jg
add
and
movsl
mov
int3
mov
sub
push
xor
sub
jmp
mov
popa
pusha
dec
pusha
movsb
fimull
sbb
push
pop
loop
std
xchg
or
addr16
mov
pop
clc
xchg
sbb
and
in
sbb
jae
push
leave
lss
inc
fdivrl
adc
ret
lock
jg
fbstp
test
test
or
loopne
sbb
icebp
sub
hlt
or
adc
add
xor
mov
scas
push
push
aam
inc
enter
gs
or
cmp
mov
test
inc
pop
test
loop
clc
test
cmp
mov
in
das
add
stos
mov
mov
add
adc
adc
xor
rolb
iret
bound
or
dec
dec
and
test
add
push
mov
xor
mov
outsb
xchg
and
incb
adc
sbb
sbb
adc
pusha
fldt
loopne
fs
cmc
push
xchg
jge
cli
jne
cmp
lret
cmc
xchg
movsb
insb
jne
lock
cmp
movsb
sub
or
xchg
or
adc
push
into
mov
sub
addr16
mov
nop
sub
jb
les
rclb
sbb
loope
pushf
insl
mov
outsl
push
std
fistpl
pop
xchg
lock
sbb
sub
pusha
xor
dec
xchg
lods
pop
pop
shr
sub
xlat
sbb
inc
aaa
mov
cmp
mov
pop
loope
movsb
jo
jl
pop
cli
sub
push
pushf
sub
clc
mov
je
jne
push
test
cld
dec
fcomps
cli
cmc
inc
in
mov
push
lea
add
xchg
add
pop
add
xchg
mov
les
ret
and
inc
ret
adc
jmp
clc
repnz
fsubrl
icebp
pop
add
call
and
cmp
adc
nop
push
sub
ret
sbb
bound
or
fcoms
dec
test
in
and
and
mov
inc
pushf
loopne
out
hlt
jp
jb
icebp
lea
clc
int
sub
pushf
jmp
jns
or
mov
mov
or
adc
adc
jl
add
or
pop
push
or
mov
mov
xchg
adcb
jp
and
mov
jo
enter
add
shrb
pop
fs
jne
or
in
lods
test
aam
imul
loope
sbb
push
push
jne
or
pop
inc
stos
cmp
mov
mov
aas
pop
mov
mov
xor
cmp
push
inc
mov
mov
sub
mov
inc
addl
std
lret
sub
or
cld
xchg
pop
mov
pop
int3
push
cmp
out
in
mov
lret
mov
or
ret
pop
push
test
test
pop
and
sar
or
xor
adc
jbe
ljmp
pop
xor
popf
mov
sbb
mov
push
inc
cmp
mov
adc
std
fcoml
pop
push
add
jg
jno
xor
mov
add
add
sub
movsb
xchg
test
ds
test
and
adc
incl
jbe
push
sbb
rcrl
dec
inc
clc
mov
out
inc
jmp
ret
sub
repnz
ja
das
jmp
add
jae
in
rclb
xor
aaa
adc
lret
fcmovbe
pop
xchg
push
loop
inc
fs
jae,pn
icebp
pop
or
push
cmp
add
and
loopne
push
push
nop
lock
mov
je
xor
push
xchg
mov
ret
mov
xchg
in
jae
movsb
xchg
in
lea
dec
mov
push
imul
or
jg
or
and
push
add
outsl
dec
roll
dec
outsl
or
movl
cmovge
push
insl
clc
pop
leave
xchg
mov
push
clc
add
inc
cmp
stos
xlat
jnp
xchg
testb
dec
adc
sub
dec
cs
mov
dec
fisubrs
xchg
fmulp
std
push
xchg
xor
inc
xor
add
out
mov
out
hlt
mov
dec
ljmp
xchg
add
dec
add
lea
jne
mov
arpl
or
ss
xor
nop
push
inc
aaa
fsubs
lds
add
adcb
shr
inc
cmp
mov
lds
and
pop
mov
push
ja
in
sbb
and
push
call
or
and
or
ret
int3
rolb
int3
test
and
adc
sbb
push
jp
sbb
ds
dec
insl
pusha
xor
bound
das
mov
jecxz
push
aam
or
dec
js
mov
mov
inc
fadds
add
pop
roll
les
pop
stos
sub
inc
pop
mov
mov
cmp
ljmp
mov
insb
or
adc
mov
pop
out
into
inc
popa
std
xchg
push
in
rorb
out
jmp
pop
mov
lock
jbe
fs
push
xor
sub
das
int3
test
mov
inc
mov
inc
fcomps
cmp
add
or
adc
add
sbb
ret
mov
cs
nop
push
cwtl
fisubrs
je
lods
cmp
fwait
lret
add
in
cmpsb
popa
int
cmc
mov
cmp
and
dec
or
mov
loopne
hlt
pop
mov
adc
pop
mov
mov
pop
lcall
movsb
decb
mov
inc
pop
push
ss
sub
cmp
shl
andl
pop
sub
loopne
mov
fstpt
push
add
insb
push
mov
mov
adc
pop
lea
pop
call
jb
jmp
lock
arpl
xlat
push
adc
inc
sbb
push
hlt
pop
outsl
fisttps
mov
inc
dec
movsb
aam
xor
adcl
cmp
xchg
push
mov
orb
mov
imul
out
push
add
sub
or
jg
cmc
inc
sti
test
or
dec
sbb
or
add
add
inc
ret
or
inc
push
push
pop
adc
sub
pop
push
mov
dec
cmp
push
inc
call
mov
rcll
mov
and
clc
xor
jnp
es
jnp
je
gs
add
data16
mov
mov
inc
call
jae
sahf
nop
mov
rcrb
je
les
dec
lret
inc
loopne
test
push
jmp
or
push
loope
in
cld
aas
inc
jb
addb
jne
shll
inc
mov
ret
adc
sbb
gs
loopne
push
aaa
nop
clc
es
sub
fistl
push
insl
adc
push
ds
cmp
xchg
push
mov
add
sbb
jg
xor
mov
and
mov
dec
jb
test
bsr
inc
stos
fidivs
inc
popf
clc
or
sub
sbbl
push
jmp
popa
jge
cltd
cli
and
pusha
sbb
push
js
xor
cmc
push
xchg
insb
in
xchg
ret
xchg
arpl
pop
jmp
mov
or
loope
sub
xor
push
js
mov
lds
enter
and
mov
inc
test
das
adc
mov
inc
add
adc
or
lcall
mov
push
push
pop
cmp
jne
xchg
adc
jbe
mov
mov
mov
mov
mov
cltd
roll
dec
push
pop
jecxz
sub
cmc
orb
out
jae
xorb
and
in
cmp
mov
xor
inc
jne
push
sbb
pushf
jge
cmp
popl
cmc
cmpsb
aam
das
mov
rorb
mov
les
fwait
mov
dec
leave
mov
fdivs
clc
mov
jbe
lcall
sbb
int3
xor
sub
mov
dec
fiadds
mov
pop
inc
and
push
call
xor
push
shrb
pop
add
inc
bound
cmp
or
or
repz
push
add
adcl
push
roll
xchg
add
out
enter
sub
mov
clc
mulb
insb
push
cmp
xchg
pop
mov
cmp
jns
scas
dec
pop
sahf
adc
mov
pushf
out
iret
push
push
scas
bound
dec
xchg
pop
sbb
insb
sub
pop
mov
loop
mov
ljmp
scas
outsb
mov
ljmp
pusha
lret
test
mov
jle
enter
mov
inc
addl
std
fists
adc
cmp
mov
push
gs
cmp
nop
mov
push
add
test
push
lods
mov
mov
mov
jno
adcb
add
xchg
cli
jg
pushf
xchg
pop
jne
mov
sbb
into
das
mov
cwtl
xchg
add
pushf
mov
xchg
xchg
les
es
fidivl
test
or
sub
sbb
fcoms
cmc
push
leave
jo
cmp
orb
push
rcll
mov
pop
xchg
stos
cmpsb
hlt
push
sbb
and
inc
call
cwtl
clc
lods
mov
mov
les
push
call
sahf
cld
mov
pop
in
pop
push
pop
loopne
and
testb
popf
add
fstpt
add
loopne
ja
xadd
adc
and
push
out
incb
mov
cmp
mov
pop
mov
aas
inc
pop
xchg
rcrb
add
xchg
into
add
and
inc
push
push
push
loope
sahf
into
mov
mov
fistl
cmp
add
mov
les
dec
mov
lcall
js
xchg
pop
aam
scas
lcall
mov
jnp
aas
shrb
sbb
paddusb
test
push
inc
sbb
enter
hlt
test
mov
fcmovb
outsl
andl
pop
mov
push
mov
orb
mov
add
inc
mov
ret
dec
lock
push
inc
lea
rol
in
inc
sub
jecxz
ljmp
fildl
cmpsl
mov
jmp
push
sbb
adc
adc
pop
jle
aam
xor
jl
je
jmp
sbb
sbb
xor
mov
hlt
data16
mov
sbb
js
dec
pop
jmp
nop
jmp
pop
jp
xchg
loope
push
and
jmp
data16
jle
adc
mov
cmp
or
push
adc
xor
push
leave
cmp
je
or
xchg
add
ds
push
inc
mov
ret
mov
pop
scas
push
test
ja
dec
cld
mov
add
add
fimull
pinsrw
ss
scas
xor
pop
nopl
cmp
xor
int3
xorl
test
adc
mov
int3
add
lock
push
fmuls
push
inc
jecxz
add
insb
daa
aam
mov
xor
hlt
jge
cmp
fisubl
adc
pop
xchg
fmull
ljmp
unpcklps
sar
mov
add
mov
mov
test
and
pop
nop
cmp
and
mov
lea
pushf
lods
call
pop
adc
pop
mov
add
pushf
subb
push
jbe
test
pop
cwtl
int3
rcrl
mov
and
and
cs
pop
loopne
xor
adc
push
rolb
adc
cli
mov
mov
gs
cli
or
cmp
rorl
shrl
and
adc
cmp
inc
lret
out
pop
add
lea
adc
dec
xchg
push
mov
mov
cmpsl
pop
lds
mov
add
xor
xchg
aad
sub
mov
mov
fdivl
lods
add
enter
fnstsw
sub
ljmp
xor
in
dec
pop
nop
hlt
rolb
and
sub
decl
inc
dec
call
loopne
pusha
or
and
jo
fs
cmp
in
add
add
call
sbbl
mov
jle
gs
push
andb
inc
adc
xchg
movb
or
in
sub
adc
loop
xor
inc
call
loop
jg
or
and
push
roll
xor
shlb
pop
cld
sub
mov
push
shrb
mov
psubw
shl
icebp
or
jo
sbb
pminsw
lods
cmpsl
push
insb
push
cli
adc
xor
dec
lcall
sbb
or
test
lret
cmp
push
insb
xor
ss
jns
xor
lea
test
cmp
ds
dec
fwait
imul
lods
aaa
dec
jle
xchg
ficomps
mov
je
sbb
mov
push
jmp
mov
mov
test
push
test
and
icebp
notb
je
jb
pcmpgtw
std
out
xchg
or
add
clc
clc
jge
lock
sahf
insb
add
and
add
cmp
or
adc
lock
adc
cmp
stc
leave
push
xor
mov
pop
cmc
add
sbb
sbb
mov
mov
mov
nop
mov
rclb
mov
lock
int3
xor
or
adc
cltd
xorl
mov
push
jmp
data16
mov
jge
push
roll
scas
lea
sub
pop
lock
movsl
pop
dec
test
add
cmp
inc
pop
movsb
out
cld
push
sti
inc
inc
adc
adc
stos
les
mov
enter
fdivrp
adc
mov
mov
test
jp
pop
sbb
jb
fadds
loopne,pn
rclb
jne
push
push
popa
cmp
mov
fistl
inc
rclb
arpl
loopne
dec
and
pop
loopne
cmp
mov
lcall
sahf
pop
call
adcb
icebp
and
push
add
lods
addb
jmp
mov
mov
sti
aas
incb
jmp
pop
outsb
sar
add
adc
add
add
je
cmp
aam
mov
sbb
insb
mov
pop
mov
mov
push
ds
in
add
fstl
or
sbb
mov
hlt
into
jne
call
mov
enter
push
mov
or
cmp
push
dec
dec
in
push
jo
mulb
jmp
jmp
aam
into
aam
jo
cmp
and
mov
jo
pushf
je
push
lds
bound
adc
mov
mov
addb
cltd
or
jl
add
push
outsl
add
adc
sbb
mov
jp
add
ja
and
fcoms
movsb
sbb
push
subl
mov
popa
xchg
cwtl
or
int3
inc
mov
inc
xor
cli
jg
mov
add
shlb
clc
in
push
adc
ljmp
hlt
add
divb
cmp
xacquire
je
dec
lock
mov
je
sub
dec
loop
cld
in
sbb
xchg
pop
dec
inc
jne
xor
mov
adc
push
xorl
and
cld
enter
cld
push
xlat
es
push
inc
aam
and
dec
push
scas
cs
scas
push
inc
mov
movb
push
cld
cli
sarb
sarb
test
add
cmp
decl
add
divb
pushf
or
inc
adc
popa
shrl
ds
xchg
inc
sar
fisttps
push
inc
imul
push
inc
je
dec
mov
dec
jg
out
dec
xchg
push
inc
pop
aas
pusha
push
dec
sar
sbb
test
enter
in
mov
sbb
or
roll
push
pop
sub
xchg
dec
sti
and
or
cmp
js
adc
inc
decb
sub
or
inc
xchg
cmp
notb
in
inc
ficompl
pushf
cld
adc
sbb
mov
loopne
and
dec
pop
mov
ret
inc
or
adc
and
pop
pop
les
mov
mov
es
call
or
jmp
push
dec
nop
mov
cmpsl
dec
lods
lock
aas
mov
pop
shlb
sahf
mov
dec
xchg
xchg
cli
push
xor
jne
inc
inc
mov
int3
bound
fbld
jl
or
push
and
mov
mov
fs
mov
outsl
jp
adc
jne
div
call
push
lods
les
or
orb
mov
push
addl
pop
test
add
cmp
roll
dec
into
push
add
jge
rorl
xchg
cmc
js
aam
lock
sbb
outsb
ljmp
add
fcomps
and
scas
xchg
or
xchg
or
push
xchg
jp
pop
xor
inc
out
push
call
lds
popf
ffreep
mov
sbb
mov
jbe
aam
add
xor
xor
lods
inc
mov
leave
jp
pop
mov
arpl
dec
repnz
test
pop
icebp
xchg
movsl
or
imulb
push
xchg
add
push
mov
pop
lcall
mov
xlat
inc
push
or
push
and
jo
push
addr16
les
and
jg
pop
add
mov
or
xchg
xchg
ret
and
jbe
pop
cli
pusha
mov
popa
cli
stc
or
ljmp
add
lcall
leave
shlb
jbe
mov
push
sbb
stos
adc
and
in
mov
cmp
ror
cmp
jge
call
loop
or
xchg
or
shl
sbb
add
es
push
xchg
in
push
xchg
mov
pop
sbb
fimull
jl
out
xor
nop
aam
pop
les
inc
aas
jp
and
jne
cld
xor
subb
mov
cli
cmp
add
imul
mov
and
cmp
out
jp
push
jne
push
outsl
push
jge
call
inc
orl
mov
lahf
push
stos
xor
es
ss
dec
insb
das
inc
in
push
setnp
jb
cli
inc
cltd
outsl
out
fucomip
lret
dec
cmp
jg
or
xchg
inc
cld
mov
fstpt
cmp
jne
or
or
loopne
mov
ljmp
loopne
xchg
aam
test
nop
int3
push
or
cli
inc
jmp
jne
inc
pop
nop
or
xor
enter
cmp
movsb
shl
lds
out
push
mov
int3
adc
or
andb
adc
push
aad
scas
push
sbb
shlb
push
mov
sub
push
test
cmp
sti
or
inc
inc
aam
lods
adc
inc
pop
push
xchg
adc
xchg
lods
and
rolb
jmp
or
sub
call
shll
cld
test
cmp
jo
rolb
sbb
fsubs
shll
icebp
jmp
push
push
ror
rcrb
inc
add
add
xor
add
mov
cmpsb
push
jo
aas
cwtl
sub
sbb
nop
fcomps
ss
sbb
push
imul
lret
xchg
sbb
data16
add
inc
or
clc
lods
aam
mov
adc
shld
push
mov
jge
stos
or
das
fmuls
adc
xchg
mov
mov
lock
dec
sbb
mov
es
push
stos
xor
push
pop
push
fdivrl
stos
add
test
inc
outsb
ret
push
ret
dec
fs
push
inc
ja
rcrb
ret
dec
push
push
mov
add
inc
fmuls
js
cmp
mov
push
loopne
pushw
sub
js
jp
sbb
data16
lds
jecxz
clc
xor
sbb
push
mov
cli
xchg
and
add
in
sub
push
pop
pop
rcll
cmpsb
push
or
arpl
lock
repz
aaa
xor
mov
inc
push
push
mov
add
sbb
mov
sub
mov
push
push
push
mov
mov
or
push
xlat
js
mov
outsb
mov
xor
xchg
adc
outsb
int
cld
popa
mov
and
data16
aam
sbbb
setns
dec
push
jb
addb
lea
addl
mov
pop
mov
and
popa
aas
push
jle
mov
push
xor
push
sar
xchg
inc
add
inc
adc
xor
add
and
data16
int3
dec
cmp
mov
call
push
faddp
imul
and
xchg
xor
fnstcw
cmpsl
and
out
and
sbb
dec
jns
pop
ss
mov
push
ljmp
jne
xor
fwait
clc
or
call
jne
mov
mov
dec
push
test
aam
js
sti
mov
out
jecxz
sbb
pop
xchg
stc
pop
aad
push
cs
add
loop
je
inc
rcl
and
xor
add
jle
je
mov
or
or
mov
xchg
addb
push
push
push
fdivrs
cmpsb
mov
xor
add
mov
inc
add
mov
inc
adc
loop
mov
or
ds
lret
lcall
push
xor
mulb
sub
xor
lods
mov
les
pop
mov
sub
sub
xor
enter
js
popa
xor
outsb
les
xor
cmpl
fadds
jmp
lahf
cs
loope
adc
lea
push
rclb
sub
aaa
inc
mov
aas
or
pop
xchg
call
stos
xor
dec
fcomp
popa
add
mov
jmp
xchg
ss
mov
adc
icebp
arpl
ret
adc
dec
xor
cmp
repz
add
call
aam
inc
sub
gs
jge
lcall
push
neg
jmp
outsl
mov
add
cmp
cmp
repnz
mov
jo
pop
test
shr
inc
aam
and
push
xchg
xchg
mov
xor
xor
pop
push
mov
cli
adc
or
jne
jne
ljmp
or
xchg
xor
adc
xchg
cmp
push
jecxz
or
lret
or
adc
or
mov
push
and
xchg
test
arpl
loope
fsubrs
in
mov
xchg
testl
mov
dec
mov
mov
pusha
or
aad
fcmovb
xchg
or
cmp
bound
cmp
mov
add
push
cmpb
clc
pop
call
loop
rcr
out
xor
sbb
test
enter
js
push
bound
adc
mov
adc
dec
shr
rorb
test
dec
outsb
push
push
xor
orb
outsl
jnp
lods
push
mov
and
mov
add
sub
mov
jne
es
ljmp
repnz
jb
mov
and
fisubl
out
inc
dec
xchg
cmp
notb
mov
xchg
loope
lods
or
xchg
popf
ss
xor
ds
mov
nop
rol
mov
adcb
stc
push
push
cmp
lahf
test
into
pop
cs
aas
mov
add
scas
fcom
pop
std
femms
ljmp
mov
pop
and
rolb
mov
jne
ret
mov
cmp
dec
stos
push
jle
outsb
dec
incl
pop
jmp
add
push
add
loopne
fsubp
add
cwtl
jns
inc
rorb
test
fdivl
or
std
lea
ja
out
add
adc
rolb
jmp
sbb
pop
addl
lret
xor
mov
pop
inc
loopne
mov
je
lea
loop
add
adc
hlt
fcoms
gs
ret
sub
imull
adc
aam
sbbb
dec
test
dec
clc
pop
pop
push
jge
and
pusha
dec
add
adc
out
mov
mov
rolb
xor
mov
cmpsb
cmp
jge
mov
test
lock
pop
push
in
add
adc
sbbb
jl
aam
or
push
inc
mov
pop
or
adc
mov
jge
pop
mov
imul
xor
pop
aad
or
pop
or
test
mov
add
xor
inc
fldenv
or
dec
push
mov
push
mov
inc
push
push
fs
mov
mov
mov
xchg
addb
fs
mov
int3
daa
xchg
add
mov
and
pop
pop
push
test
dec
ret
mov
into
outsb
fwait
xor
or
push
test
aam
pop
int3
lahf
inc
fwait
add
pop
sbb
mov
push
insl
add
inc
fs
push
sub
imul
outsb
inc
dec
inc
mov
loope
shl
jb
dec
mov
cmp
jb
adc
add
aam
jne
cs
dec
push
pop
xor
test
nop
xchg
ret
xor
mov
mov
mov
sub
push
adc
add
rclb
adcb
xchg
mov
adc
lcall
mov
xlat
mov
ss
xchg
test
das
mov
sbb
sub
in
or
jecxz
mov
movsb
and
rcrl
les
mov
or
and
std
jmp
mov
inc
cli
imul
pusha
inc
pop
mov
push
fildll
jl
loope
mov
fmuls
inc
pop
jge
push
test
js
les
je
push
jo
aam
add
push
fsubs
flds
mov
orl
jns
hlt
push
jo
inc
and
decb
fsubl
add
inc
or
or
pop
dec
pop
add
cmpsb
or
push
cpuid
push
std
leave
push
add
jle
push
jmp
sub
les
decb
sub
rcr
cs
pop
mov
inc
lods
push
je
cld
cmp
pop
cmp
outsb
adc
psubb
rcll
mov
adc
add
popa
es
mov
test
insb
jno
jne
xchg
das
out
aas
jnp
lock
adc
add
ret
lea
dec
push
dec
hlt
mov
adc
inc
into
mov
inc
adc
cmp
int3
xchg
push
push
shll
push
ds
mov
fcoml
jp
arpl
mov
sbb
cmovne
or
aas
insb
and
cld
ret
or
mov
sub
loopne
cmp
push
aaa
sbb
fld
pop
push
call
jne
out
sub
push
shlb
icebp
aam
inc
push
xor
jbe
cmp
fs
cmpsl
shlb
sar
in
std
pop
mov
sbb
push
jo
adc
and
and
or
rolb
xor
adc
add
bound
push
pushf
clc
cmp
call
rcrl
dec
stos
mov
xlat
inc
icebp
or
cld
fs
mov
ljmp
stos
es
out
sbb
mov
xchg
sub
rol
decb
loop
pop
jae
and
inc
and
in
push
mov
push
mov
add
clc
hlt
clc
jbe
push
or
jg
incl
outsl
mov
xor
pop
jg
pop
int
leave
inc
sbb
test
adc
add
pop
inc
in
rol
adc
shlb
ret
outsl
out
jg
js
adc
cmp
adc
in
and
xchg
loop
loopne
mov
adc
fnstcw
int3
out
jge
shr
inc
cwtl
nop
aaa
outsb
sbb
cld
mov
flds
pusha
mov
push
pop
dec
dec
lahf
mov
sbbb
and
mov
enter
adc
push
pushf
push
push
push
lea
ljmp
or
test
lea
ret
and
mov
cmp
adc
add
mov
xlat
push
js
mov
mov
sahf
pop
push
pusha
jl
pop
test
mov
sbb
add
xor
fisttpll
jo
nop
add
rcrl
add
add
mov
push
or
and
xor
repnz
es
addl
mov
retw
imul
mov
adc
jne
int
mov
adc
orl
shlb
pop
cli
outsb
jo
add
lds
test
cmp
cmovb
notb
cmpsb
add
les
lock
inc
inc
insl
xchg
inc
js
dec
or
cmp
push
cli
mull
sbb
test
cwtl
les
lcall
xor
jmp
cs
jg
mov
fs
add
das
fs
push
xor
popf
xor
test
mov
cmp
xchg
cld
stc
sbb
fsubs
pop
adc
sbb
rolb
fcmovb
mov
push
mov
inc
pop
push
adc
xchg
loope
add
hlt
int3
push
int
in
inc
sub
or
es
ret
xchg
test
scas
insl
shlb
movsl
or
jb
add
dec
pop
pop
rol
and
inc
or
mov
dec
loop
add
stos
inc
inc
xchg
push
jge
push
cmp
sarl
js
dec
rorb
jo
push
imul
mov
lock
pop
pusha
mov
jle
xchg
adc
outsl
push
mov
adc
and
adc
out
rclb
add
jg
rcll
popf
push
stc
mov
inc
ljmp
cli
lcall
dec
clc
incl
push
xor
loopne
call
ret
cmp
loopne
cld
sti
and
out
lock
sahf
add
push
fdivrs
jl
or
add
les
mov
jnp
adc
mov
sub
inc
pop
sbb
mov
or
lock
leave
lods
or
cmp
inc
inc
xor
movsb
add
mov
icebp
rorb
std
dec
or
jno
les
cmpsb
add
in
cld
cmpsb
inc
add
xchg
aad
test
in
mov
mov
test
mov
adc
or
push
add
jl
roll
std
scas
dec
mov
testb
mov
jo
fst
push
or
push
fimull
cmp
and
mov
daa
lods
dec
sub
dec
subl
add
jb
fnstsw
popa
les
test
or
cmpsb
mov
popa
pop
xor
les
repnz
sub
adcb
inc
add
std
cmp
cmp
pusha
les
imul
mov
adc
sub
mov
xchg
adc
test
adc
push
adc
int
pop
or
xlat
je
ret
add
data16
pop
loopne
stos
xchg
sarb
or
hlt
xor
sub
add
or
cli
pop
ret
add
push
inc
call
cmp
lods
push
inc
movsl
in
fbstp
mov
push
mov
and
arpl
cmp
add
cmp
xchg
mov
test
mov
testb
pushl
mov
movsb
push
dec
cltd
in
mov
and
shlb
fs
or
xor
or
add
adc
fimull
test
jae
mov
push
inc
cmpsb
jae
cmpsb
not
int
push
dec
mov
outsb
xor
and
sub
dec
mov
adc
mov
add
ficompl
es
adc
imul
pop
adc
push
add
mov
adc
push
add
loopne
jmp
cmpsl
or
ffree
aad
cld
test
cli
and
jge
sbb
add
pop
nop
sahf
imul
jg
xchg
loopne
pop
ficoml
push
mov
mov
xchg
lret
add
jae
lcall
pushl
dec
adc
insl
add
and
mov
cli
loopne
xchg
adc
inc
and
inc
ret
adc
outsl
dec
pop
push
idiv
add
pop
xchg
fidivrl
dec
cmp
icebp
mov
adc
cli
mov
push
push
inc
ds
aaa
mov
subb
add
daa
sar
mov
int3
inc
push
add
cmp
push
push
call
inc
xor
call
mov
in
cmp
nop
xor
jb
and
xlat
ds
push
push
push
ret
push
scas
mov
out
xor
mov
mov
sbb
roll
fs
mov
jnp
pop
in
sbb
std
scas
sub
add
sub
je
jg
bnd
jl
xchg
mov
nop
inc
jge
ja
pusha
xchg
ljmp
pop
aaa
sbb
ljmp
test
dec
cmp
push
jne
and
push
sbb
outsb
mov
dec
test
jb
shrd
pop
push
adc
mov
arpl
push
xor
cmc
xchg
sahf
and
add
pushf
mov
lods
cmpsb
push
inc
in
repnz
lock
sub
jne
cmpsb
ficoml
add
xchg
popl
cwtl
test
mov
mov
cld
inc
pusha
xchg
adc
pop
mov
adc
dec
popf
push
push
dec
and
mov
or
jl
enter
push
xchg
rclb
and
fidivl
xchg
jo
jb
cmpsb
adc
leave
inc
xchg
dec
fildl
cmp
dec
lods
lcall
fsub
jbe
fnstsw
add
stc
jne
aam
insb
pop
adc
add
enter
divl
insb
divb
adc
mov
sub
sub
or
addl
mov
inc
jp
sub
jg
inc
push
push
lds
mov
stos
lret
or
sub
leave
cmp
insb
add
into
sub
negb
or
push
mov
jae
scas
push
mov
sbb
mov
sbb
mov
int3
and
sub
cs
ja
lods
push
xor
cmc
adc
inc
jae
jbe
in
ret
pop
inc
and
jmp
or
lcall
adc
dec
lret
call
loop
les
or
adc
je
inc
or
fisubl
jo
sbb
out
mov
sbb
or
or
les
cmp
add
cmpl
pop
test
adcb
aad
aam
add
cmp
jmp
cmp
enter
and
xor
adc
sbb
cltd
push
mov
gs
inc
ja
add
int3
fidivs
push
clc
mov
into
rclb
mov
mov
sub
push
jmp
nop
mov
adc
inc
subl
xor
mov
push
pop
clc
xchg
movsl
call
jl
push
push
pop
adc
push
pop
mov
push
repz
decl
imulb
ds
pop
lods
push
movsl
testl
negb
test
adc
push
pusha
call
ljmp
add
cmp
pop
jl
and
add
lods
dec
ja
loop
repnz
mov
clc
adc
mov
or
js
mov
nop
sbb
mov
inc
in
jmp
adc
lods
setne
repz
add
sarb
mov
jl
xor
lock
push
lret
jp
fimuls
sbb
ss
jle
push
js
sub
mov
inc
mov
push
sbb
call
dec
shrb
les
ret
mov
add
loop
adc
icebp
repnz
mov
arpl
xchg
je,pt
dec
fdiv
sar
mov
or
adc
loopne
clc
aad
jle
add
mov
add
xchg
or
shll
add
int3
or
je
sti
inc
incl
push
sbb
sbb
outsl
mov
int3
push
jl
ret
mov
loopne
cli
shrb
stos
dec
je
sahf
cmp
mov
bound
pop
shlb
push
fwait
and
inc
adc
insl
mov
lea
xor
sub
call
aas
sub
scas
or
pop
je
repnz
ja
adc
sbb
mov
add
je
cmp
push
aam
jb
negl
js
stos
std
pop
out
gs
jmp
imulb
icebp
das
add
inc
js,pt
cmp
int3
outsl
sbb
cs
les
call
fwait
or
xor
idiv
adc
scas
xor
add
inc
add
rolb
lcall
or
lea
int3
inc
mov
mov
jb
sbb
fs
fs
mov
out
push
jbe
js
dec
fimull
std
jg
inc
pop
mov
inc
xchg
xor
pop
jecxz
inc
ret
and
lds
xchg
loop
clc
es
ret
in
lcall
xor
dec
mov
mov
add
mov
loop
shlb
ret
lea
xor
adc
gs
push
dec
add
es
addb
cmc
add
sbb
insl
je
ss
ss
adc
cli
jne
and
data16
dec
inc
lahf
rcll
hlt
mov
ds
cltd
dec
lret
mov
fprem
das
push
lret
pop
fnstenv
ret
orb
pushf
lods
repz
xchg
out
dec
add
les
in
test
lea
xchg
add
cmp
addb
stos
je
push
popl
or
mov
in
decb
push
mov
add
les
js
mov
int
nop
and
nop
rcll
lret
push
or
fimull
add
mov
push
test
incb
pusha
inc
or
fchs
fcoms
outsb
add
jb
iret
shlb
xor
rol
add
inc
or
cmp
add
sub
sar
loope
xchg
out
dec
leavew
or
mov
insl
mov
rcll
lret
cmp
js
insb
rorb
pop
test
add
pop
mov
inc
inc
cmp
xchg
lahf
fistl
jge
jmp
pop
nop
jle
jne
les
mov
jp
or
js
xor
mov
xor
adc
test
add
in
sti
or
push
pop
pop
push
mov
cmc
ljmp
and
dec
ret
je
cmpsb
cmp
inc
in
je
insb
or
mov
fmull
outsb
call
adc
fsubs
test
sbb
aas
cmp
les
mov
add
sbb
addb
addl
cs
sub
call
ficomps
mov
push
xor
inc
imul
dec
jge
sub
test
ljmp
mov
js
add
jo
inc
mov
add
les
mov
outsb
fs
jmp
inc
jbe
ret
adcb
imul
fsubrl
lea
testb
cs
mov
mov
int3
or
lret
mov
push
xchg
ljmp
cli
push
push
mov
pop
or
fiaddl
cs
xchg
add
pop
fs
add
dec
add
dec
push
sbb
imul
or
js
mov
mov
mov
insb
mov
enter
mov
pop
dec
pop
mov
dec
jne
mov
sbb
mov
insl
imul
test
das
imul
je
xchg
dec
mov
add
dec
add
jge
aaa
in
xchg
pop
clc
loop
cmc
sub
add
push
fcomps
movsb
mov
nop
sahf
or
arpl
inc
movsl
mov
fimull
movsb
rclb
mov
sbb
bound
ja
pop
pop
fiadds
and
sbb
and
lds
mov
mov
inc
dec
sbb
add
dec
mov
lock
adc
add
call
mov
cmpsb
cs
push
sbb
in
ljmp
jle
ror
and
andb
xchg
orb
jp
jp
js
push
cmp
scas
mov
dec
lcall
ret
int3
mov
fimuls
xchg
xchg
xchg
jne
pop
fidivrl
in
push
in
repnz
push
pop
test
rcr
cmp
test
cmp
xchg
inc
sub
mov
lods
add
mov
call
push
pop
or
sub
pop
test
into
jno
or
dec
or
add
and
pop
push
dec
mov
cld
mov
push
jb
dec
pop
icebp
and
add
mov
or
adc
cmp
iret
add
lock
and
inc
pusha
cmpps
xchg
add
mov
call
or
test
and
enter
jl
sub
rcrb
inc
enter
xchg
push
nop
cmp
insl
xchg
add
push
adc
rcr
call
dec
cmp
add
push
or
push
mov
add
negb
cmp
mov
fistpl
pushf
fsubrl
jle
pop
push
pop
sahf
imulb
and
add
clc
stos
sub
and
add
mov
addb
loope
adc
ljmp
not
sbb
add
aam
or
or
pop
dec
push
inc
xchg
mov
sbbl
adc
loopne
or
insl
sbb
lcall
dec
inc
pop
repz
dec
movsb
ja
call
nop
sbb
dec
or
mov
pop
dec
insb
mov
fcmovbe
push
or
adc
or
mov
xchg
shr
mov
or
mov
clc
inc
jg
sub
rcr
inc
push
mov
daa
xor
xor
push
xor
pop
mov
ss
jg
cmp
ficoms
inc
pop
or
pop
pop
mov
pop
aad
jl
push
sbb
rclb
dec
mov
mov
imul
divb
fwait
aam
fadd
or
test
sbb
mov
rcll
clc
push
aad
repz
pop
das
mov
sbb
enter
inc
push
pusha
mov
xor
fstpt
lock
imull
in
mov
add
ret
adc
xchg
jge
jmp
inc
push
cmp
push
test
mov
inc
cld
rcr
aas
fcomps
mov
out
push
mov
not
jmp
leave
je
inc
or
xor
nop
mov
inc
inc
les
jl
inc
pop
add
sub
inc
in
push
push
cs
icebp
mov
loopne
faddl
jle
leave
pop
outsb
xor
adc
cmp
insb
jecxz
cmpsb
fisubs
mov
sahf
inc
inc
nop
lods
aaa
add
rcr
int3
lea
addl
es
jo
clc
fmul
mov
push
enter
and
push
jecxz
mov
jb
sbb
enter
adc
adc
push
mov
call
xor
mov
cli
in
mov
jl
shrb
pushf
int3
out
mov
cmp
push
movsl
inc
fiaddl
mov
icebp
cmpsb
mov
jp
imul
xor
pop
lock
pop
ja
aad
jo
sbb
dec
scas
stos
hlt
cmp
pop
loope
and
inc
test
repnz
push
inc
div
xchg
les
clc
sub
movb
or
xchg
cmp
fimull
sub
or
lock
stc
sub
test
add
out
xor
pop
jns
es
into
in
aam
aas
adc
mov
lods
cld
orb
push
mov
sbb
adc
lods
lea
and
cmp
rolb
ljmp
fildl
cmpsb
lret
ror
sub
mov
adc
ss
add
cmp
or
adc
and
or
lahf
jmp
inc
mov
sub
add
pop
pop
lret
add
fisttpll
cmp
fwait
xor
loope
loopne
inc
and
sub
adc
fcmovnu
stos
cli
pushf
clc
push
push
push
jo
sti
cmpl
pop
jg
cwtl
stc
sbbl
push
mov
and
repnz
pushf
add
les
xchg
rcrl
ret
pop
sbb
lods
aad
mov
mov
adc
pop
and
dec
hlt
ret
jp
adc
jb
popa
roll
inc
cmc
pop
int
pop
ss
mov
shl
xchg
sub
sbb
sarb
inc
cld
insb
pop
and
nop
inc
sbb
jecxz
outsb
push
add
lfs
xchg
fildl
add
cmc
dec
jle
loope
ja
sub
cs
add
push
fbld
pop
jg
add
andb
add
mov
lock
lahf
adc
mov
lods
inc
shl
data16
cmp
cmp
movsl
adc
fcomp
pop
rcrb
cwtl
mov
scas
aad
fiaddl
xor
incb
push
in
pop
call
dec
loop
cwtl
pop
xchg
mov
mov
and
fwait
add
add
aad
shlb
push
mov
mov
dec
cmp
sub
sub
aad
loopne
ret
cmp
outsl
outsl
in
xor
cmp
and
ret
lock
lds
ljmp
push
aas
inc
sarb
fmuls
pop
fsts
sbb
leave
test
gs
mov
daa
movsb
mov
into
out
arpl
pop
push
in
mov
pop
or
pop
xchg
xchg
lods
inc
mov
es
pop
js
addb
inc
adc
call
add
jns
aas
les
sub
mov
mov
mov
fimull
in
call
adc
adc
jne
lea
mov
inc
fwait
sub
adc
mov
add
xor
int3
push
push
adc
push
pop
pop
dec
mov
mov
into
xor
lock
push
or
xor
and
clc
adc
mov
adc
add
adc
pop
push
pop
es
pop
and
adc
push
stos
add
call
das
pop
mov
pushf
or
test
sub
adc
jns
jmp
test
lock
js
cld
push
mov
sar
enter
dec
rcrl
jmp
jle
adc
dec
sub
mov
mov
mov
inc
and
inc
inc
cltd
pop
and
inc
pop
icebp
outsb
mov
dec
or
push
std
lret
mov
andl
fs
aam
push
jg
fiaddl
clc
aaa
je
push
push
inc
and
jge
enter
orb
xorl
insb
push
adc
and
cmp
push
jne
insb
sbb
test
aad
mov
xchg
adcl
push
push
mov
stos
je
lods
mov
dec
mov
mov
add
add
adc
cmpl
in
loopne
movl
jp
mov
dec
outsb
pop
mov
clc
mov
cwtl
and
mov
cwtl
cmp
imul
push
subb
hlt
or
xchg
int3
dec
pop
mul
xor
repnz
inc
stos
or
inc
cwtl
enter
xor
xchg
jae
cmp
call
push
insb
fs
mov
mov
jg
inc
sbb
sub
mov
std
scas
sub
mov
rorb
push
xchg
add
cwtl
ret
in
clc
aas
test
inc
cmp
pop
popl
loope
push
mov
mov
lock
jmp
and
lea
jl
mov
adc
cmpsl
inc
sti
or
fwait
xchg
push
out
push
xor
push
jo
adc
mov
add
push
xor
xchg
xchg
out
pusha
stos
add
push
cmp
add
insl
sbb
fdivrl
dec
fdivs
mov
popf
nop
pop
imull
add
jns
fbstp
jg
in
jecxz
add
jmp
lea
lods
mul
lods
cmp
mov
jmp
and
arpl
insb
push
push
adc
pop
xor
dec
adc
jg
cmp
sbb
rorb
mov
rol
mov
push
jbe
adc
mov
or
mov
fdivr
sbb
sub
lods
or
pop
xchg
je
jl
xor
clc
mov
add
push
mov
out
fcoml
xchg
xchg
test
pop
inc
cmpxchg
dec
xchg
push
jne
cmp
fdivp
push
inc
inc
mov
sbb
ret
stos
xchg
les
pop
adc
push
jne
dec
xchg
pop
mov
test
idiv
add
sbb
pop
cmp
cmp
dec
xchg
inc
push
mov
js
xchg
push
push
divps
sub
into
cmp
xchg
mov
pusha
push
mov
dec
push
icebp
scas
in
add
jle
add
adc
add
adc
jmp
mov
pop
push
subl
pop
fistpl
mov
rorb
or
outsb
mov
push
lods
fbld
pop
je
jecxz
subb
add
add
outsb
adc
fs
mov
pop
push
inc
mov
out
xlat
and
aaa
lock
or
jl
mov
xchg
xchg
and
add
sub
push
fiaddl
js
rclb
jne
movl
push
pop
test
or
mov
adc
sbb
lock
inc
jecxz
rcrl
xor
xor
mov
xor
cmp
insb
je
outsb
or
mov
and
dec
getsec
push
cli
push
or
mov
cld
push
mulb
sbb
mov
pop
mov
stc
adc
jb
in
dec
mov
es
sub
push
pop
sub
test
dec
fisubrl
mov
lods
dec
dec
sub
cmp
mov
repz
inc
pop
inc
dec
imul
imul
mov
and
mov
inc
add
ds
clc
or
adc
incb
mov
mov
xor
mov
dec
lea
push
pop
and
ja
mov
jge
sub
insb
mov
jg
addr16
ret
mov
pusha
sbb
loope
add
aaa
je
add
movsl
fs
ss
fcom
and
inc
sub
mov
cmc
sub
ljmp
test
cmpb
imul
xchg
add
lea
sub
pop
add
inc
dec
xor
fwait
xchg
or
push
stos
cs
in
pop
orb
xchg
rorb
jge
sbbb
les
cmp
push
cmp
enter
add
xchg
addb
add
mov
fcomps
out
sbb
loope
sub
int3
fildl
test
test
subl
fcomps
xchg
sub
adc
jecxz
sbbb
aas
shrb
dec
xchg
daa
push
push
or
jmp
test
inc
dec
mov
les
mov
das
xchg
push
cld
test
ret
push
inc
push
sahf
clc
fcompl
and
jp
cltd
outsb
push
inc
sub
adc
lock
lods
add
ss
dec
inc
loope
je
sbb
sarb
test
inc
inc
fbstp
adc
mov
or
xor
cs
jl
xchg
cmpl
and
int3
hlt
dec
mov
mov
fwait
mov
data16
call
cld
jmp
jl
enter
inc
mov
fistpll
sub
jmp
push
cmp
subl
ds
cmp
gs
xchg
pop
push
lock
pop
aam
jb
xchg
imul
bound
pop
inc
idivb
outsb
mov
mov
or
mov
adc
aas
in
dec
aad
insb
cli
arpl
lret
mov
mov
movsl
mov
and
lret
ret
sub
nop
inc
dec
cwtl
jbe
sarb
cwtl
ret
test
movsb
scas
push
pop
dec
bound
jle
aaa
jmp
add
mov
ja
stos
nop
push
xor
lea
sbb
dec
ljmp
inc
fs
inc
mov
and
or
jno
pop
int
push
mov
insl
stos
nop
ficoms
dec
sbb
mov
jle
cmc
adc
sub
dec
imul
mov
push
xor
cwtl
test
jl
adc
mov
mov
add
pop
cmp
decl
cwtl
jle
push
in
rcll
test
nop
test
and
xor
enter
pop
sub
pop
aad
xchg
mov
mov
pushf
loopne
inc
mov
sbb
xchg
jge
xor
lea
mov
inc
push
fstl
sbb
or
pop
ljmp
int
xchg
push
mov
test
add
popf
sub
mov
shrb
lsl
std
cld
push
dec
xor
sbb
out
adc
push
lock
addl
jp
inc
bound
or
ljmp
je
push
push
adc
out
icebp
fildll
rolb
xor
pop
jb
push
nop
or
mov
and
jb
outsb
insb
pop
loopne
add
loopne
xor
pop
shrl
outsb
xchg
out
mov
cwtl
xor
sbbl
shlb
push
inc
pop
push
pop
cwtl
jbe
aaa
push
test
int3
xor
sbb
mov
push
push
loopne
rol
ja
push
xchg
int3
stos
push
or
jle
xor
pop
sbb
mov
add
in
jp
pusha
push
adc
cmp
adc
not
shlb
loope
jbe
cs
push
lcall
adc
mov
mov
jno
aaa
sbb
mov
je
imul
dec
arpl
jg
std
test
xchg
dec
jo
adc
scas
sub
add
jb
pop
inc
aaa
testb
push
sbb
rorb
jg
rclb
pcmpeqw
rol
add
xor
mov
inc
pop
adc
xchg
or
add
popl
add
pop
out
pop
sbb
push
push
lods
dec
add
cmp
add
dec
add
fcmovnu
push
push
xchg
insb
stos
or
mov
sbb
shrb
xchg
rcr
dec
sub
lret
and
clc
pop
pop
nop
fidivs
adc
mov
or
mov
lea
fistl
mov
push
data16
neg
push
in
sahf
mov
jbe
jmp
add
push
mov
inc
and
dec
lock
rolb
test
ss
inc
mov
mov
or
out
xor
add
cmp
in
xlat
inc
sub
adc
hlt
data16
push
pop
aas
pop
test
int3
or
xor
cs
xchg
cmp
push
mov
mov
nop
add
dec
cmpsb
arpl
xor
pop
or
icebp
neg
sarb
inc
and
adc
xchg
shr
add
pop
sar
lods
and
ss
mov
sbbl
movb
aaa
jbe
shr
mov
jne
movsb
lea
popf
popf
call
or
mov
bound
stc
pop
repnz
mov
test
pop
cmp
mov
popa
add
shlb
idivb
clc
add
adc
mov
add
sub
sbb
inc
mov
aad
fsubr
inc
inc
push
aaa
fnstenv
mov
mov
cmp
shlb
dec
test
xchg
aam
pop
adc
push
or
inc
jmp
push
adc
push
push
add
adc
and
sbb
sar
or
inc
test
jp
push
ja
fdiv
push
add
mov
int3
clc
fildll
call
cmpsl
loop
je
popa
cld
push
std
cmpsb
jne
inc
ficompl
jl
ds
xchg
cmc
mov
mov
mov
das
jo,pn
xchg
insl
add
pop
push
rclb
add
lock
inc
mov
lcall
xor
cltd
mov
popf
scas
nop
mov
inc
sub
cld
js
inc
aaa
sbb
rorb
test
jmp
loope
lds
fs
xchg
dec
adc
f2xm1
ljmp
sub
loop
in
cmp
enter
faddl
adc
les
lea
push
inc
jmp
ret
add
fwait
outsb
es
scas
cmp
or
call
push
ss
fdiv
or
mov
ss
rorl
out
mov
leave
lea
push
pop
imul
mov
mov
mov
dec
test
and
inc
stos
dec
das
push
xor
mov
mov
mov
mov
sub
jle
pop
or
push
cmp
out
gs
popa
mov
adc
or
dec
pop
aam
fs
mov
aas
xor
leave
pop
mov
movsl
push
push
adc
dec
cld
ljmp
and
inc
and
mov
sub
stos
push
add
mov
insb
and
push
outsl
mov
sbb
inc
xor
dec
and
push
test
addl
or
xchg
cmc
test
pop
or
push
mov
mov
lcall
mov
movsb
add
cmc
push
fsts
mov
and
andl
mov
push
rcrl
nop
lcall
js
sub
notl
dec
pop
inc
pop
enter
test
mov
push
push
add
outsl
pop
dec
or
mov
test
test
dec
inc
stos
es
hlt
cmp
aam
mov
jecxz
in
fldl
add
mov
imul
jle
dec
test
sarb
xorb
insb
mov
sbb
xor
sbb
clc
ljmp
jb
out
inc
cmp
dec
ja
pusha
das
fs
or
or
dec
cmp
push
add
dec
jmp
aaa
ljmp
inc
test
std
and
dec
and
icebp
dec
decl
add
mov
data16
push
aam
mov
mov
add
lods
push
and
push
aam
in
sti
fidivl
inc
add
cmp
mov
pop
clc
test
loopne
sub
push
inc
jne
cmp
or
bound
pop
add
cld
add
push
jmp
push
loop
sti
push
pop
je
inc
cmp
hlt
out
cltd
mov
fistpll
push
mov
fildll
pop
jmp
rorb
out
cmpl
push
push
mov
ret
inc
add
nop
cmp
pop
xor
aam
adc
add
jecxz
loopne
fidivrs
sar
cld
in
fs
fiaddl
xor
mov
mov
xor
test
loope
nop
cmp
fisubrs
xchg
jp
mov
fcmovb
divb
clc
lea
xorb
cli
cld
inc
pop
inc
mov
add
outsl
adc
jo
nop
jl
or
scas
sub
frstor
outsb
sbbb
shr
cltd
cmc
and
jle
or
nop
cmp
imull
mov
insb
unpckhps
shrl
imul
sub
pop
cmp
sbb
je
sub
jl
jecxz
pusha
movsb
lock
xchg
imul
inc
xor
adc
add
aam
pop
pusha
shrl
std
cmpsb
jbe
xor
jne
addl
xor
push
mov
in
js
mov
add
inc
cmpsb
sbb
push
adc
aas
outsb
loopne
popa
xchg
xor
push
add
mov
scas
js
outsb
lock
inc
pop
movsb
mov
ret
cld
dec
dec
push
add
dec
inc
cmpl
xor
add
out
inc
sti
pop
enter
and
xchg
call
add
or
pop
sub
add
add
int3
cmp
ficoml
fcomps
fadd
cmp
sub
sub
mov
pop
std
inc
pusha
into
shl
pop
push
sbb
push
shll
cmp
hlt
mov
inc
or
ret
data16
aam
jno
int3
xor
sub
push
mov
cmp
mov
aam
jo
lret
ds
jle
adc
and
xchg
movb
call
clc
sub
push
fnsave
shlb
popa
dec
adcb
cmpsb
pop
repnz
test
push
cli
bound
sub
or
mov
jne
jno
inc
or
fwait
xor
xchg
add
adc
jg
mov
hlt
add
xor
cld
mov
mov
cli
mov
fcomps
sub
cmc
fimuls
cmp
out
xchg
ret
jb
ret
mov
pusha
xor
into
push
int3
arpl
enter
pusha
xor
cld
lahf
sbb
cld
xchg
lea
push
shlb
pop
or
cmpsb
cmp
jge
test
pop
mov
mov
add
or
bound
jo
push
lds
xorl
or
sub
jecxz
outsb
and
pop
add
inc
fs
push
push
xchg
in
pushl
cld
add
mov
in
mov
sbb
add
in
mov
aam
lods
call
ret
or
adc
jmp
xchg
inc
adc
lock
push
pop
fiadds
les
int3
push
outsl
push
std
sub
push
inc
mov
rol
scas
outsl
xchg
pushf
sbb
aad
inc
push
cmp
lock
out
push
cmovge
cmp
les
sysenter
adc
jmp
test
shrb
and
fdivs
adc
push
aas
adc
or
sbb
je
ss
add
roll
or
xlat
xor
fistpll
les
movsb
std
cmovno
sub
mov
inc
xor
lea
test
jmp
mov
bnd
or
or
push
sarl
ficoml
imul
cld
add
scas
or
mov
mov
mov
mov
and
add
negl
push
pop
push
sub
xchg
add
mov
pop
inc
into
mov
mov
cmp
mov
fcoms
push
dec
clc
jmp
mov
test
cld
repz
cltd
out
addb
rcrb
sbb
ljmp
clc
push
movsb
test
adc
or
inc
push
inc
pop
into
std
sub
xchg
jne
outsl
mov
sbb
jae
mov
test
add
or
rcll
negb
and
push
or
pop
clc
dec
cmp
mov
mov
cmp
sbb
push
jmp
ss
sbb
pop
pushf
pop
lock
jp
push
and
sbb
inc
xor
adc
jmp
ss
je
int3
xchg
inc
lock
xchg
fisttpl
cmp
xor
mov
and
inc
pop
xchg
or
add
ss
add
pop
jmp
push
jne
jae
or
loopne
add
mov
adc
pmuludq
mov
pop
mov
or
push
mov
cmp
sub
out
push
pop
pop
jbe
and
and
bswap
inc
pop
repz
mov
or
and
or
and
mov
xor
push
loope
icebp
add
sbb
in
jecxz
push
scas
les
adc
mov
cli
jge
je
jmp
jo
stc
lds
enter
std
nop
jb
sahf
lock
dec
lods
add
daa
push
pop
movsb
mov
xor
aam
adc
test
jae
mov
xchg
jne
jl
or
xchg
lods
inc
ljmp
aas
mov
mov
xchg
xor
sub
jl
push
or
jge
pop
sub
inc
inc
cld
xor
cltd
adc
je
mov
je
ljmp
adc
call
clc
dec
xchg
sub
xor
cmp
ror
enter
dec
fcmovu
icebp
push
add
adc
xor
sub
ret
stc
lock
or
mov
push
mov
push
movsb
or
fimuls
sti
mov
lret
adc
xor
aas
fs
mov
add
out
mov
les
mov
lea
dec
call
push
fdivs
mov
loopne
aaa
add
popf
hlt
mov
add
pusha
shrb
xchg
std
fwait
data16
es
mov
xor
enter
mov
lock
and
cli
scas
pop
mov
outsb
pop
enter
push
lds
cmc
mov
dec
xchg
inc
push
mov
pop
inc
mov
mov
dec
mov
cmp
inc
push
sbb
pop
push
cld
pop
stos
mov
add
pop
push
cmp
pop
mov
dec
es
adc
sbb
mov
or
ljmp
add
inc
outsl
cmp
fs
adc
lea
sub
cmp
aam
adc
adc
sub
fs
inc
outsb
ss
adc
leave
cmp
adc
test
push
es
and
sbb
cmp
push
ljmp
cmp
adc
pop
repnz
push
out
lea
dec
or
loopne
adcb
and
ds
and
or
inc
idivb
add
pop
divl
mov
pusha
popa
stos
das
jmp
outsl
cmp
ret
inc
out
aad
sarb
lock
add
into
sbb
pop
add
or
sub
xor
subl
in
and
ret
jo
mov
jb
mov
notb
sub
in
jge
fs
lods
ds
inc
pop
dec
mov
mov
nop
mov
mov
out
xchg
adc
stos
cmp
icebp
adcb
jge
or
push
hlt
roll
or
xor
imul
lods
adc
pop
insb
sarl
lahf
push
jl
arpl
loope
cwtl
inc
in
xor
sar
pop
or
ret
es
popa
mov
or
arpl
and
mov
les
clc
lcall
pop
xor
pop
arpl
xor
sub
es
push
test
unpcklps
call
push
adc
and
aam
add
push
mov
aad
stc
mov
or
jno
iret
adc
in
sub
das
mov
mov
cli
mov
mov
jmp
clc
sub
lock
jno
enter
jb
decl
lock
adc
or
int3
xchg
push
sti
out
fadd
insb
shlb
inc
push
or
incb
add
dec
movsl
push
ret
mov
lea
push
mov
stos
xchg
stos
sbb
inc
jnp
sbb
push
mov
out
adc
adc
xchg
inc
mov
jg
inc
fwait
lods
push
scas
les
mov
rcrl
xor
mov
cmp
inc
jne
pop
and
test
mov
xchg
lahf
adc
mov
adc
add
jmp
sub
fdivr
push
comiss
je
adc
xor
cmp
inc
jne
int3
jmp
mov
dec
xor
dec
decl
add
testb
call
rolb
xchg
mov
add
mov
xor
inc
push
std
mov
pop
sbb
xchg
cmc
sbb
test
je
icebp
mov
mov
and
cmp
in
clc
push
and
inc
sbb
movsl
subb
je
fnsave
or
xchg
rcll
aam
call
adc
mov
les
negb
or
or
pop
mov
jmp
and
call
pop
mov
push
pop
push
mov
je
pop
aas
xor
mov
jbe
mov
iret
dec
fsubl
mov
outsb
and
ljmp
scas
lods
xchg
loopne
xchg
sbb
dec
and
mov
filds
jg
imul
lahf
call
test
or
jecxz
pop
jmp
pop
adc
or
jne
jb
jo
je
push
push
scas
jne
xor
aaa
xor
nop
push
mov
add
lret
or
add
and
inc
cwtl
push
jl
pop
call
ljmp
adc
dec
outsb
sbb
clc
es
jle
sbb
aam
cmp
fimull
addb
mov
andb
add
adc
dec
xchg
movsb
rolb
xor
das
ljmp
adc
pop
pop
inc
fsubs
loopne
or
es
or
mov
rcrl
push
or
push
and
xchg
inc
scas
ljmp
ds
xchg
sahf
pop
sub
pop
jge
mov
cmp
call
mulb
cli
lods
mov
inc
or
cld
scas
out
sub
inc
add
sti
cmp
call
cmp
insl
dec
iret
rorb
push
cld
cmp
mov
lods
mov
mov
xor
push
shll
clc
call
mov
ja
js
cmp
inc
mov
aaa
jge
adc
adc
add
xor
or
or
xchg
je
gs
or
xor
xor
mov
xchg
inc
test
inc
mov
pop
and
mov
das
adc
add
push
dec
inc
lods
xor
insb
lea
aaa
mov
add
cld
rcrb
out
adc
sbb
xchg
mov
push
fists
dec
push
testb
xchg
fidivs
ljmp
xor
pop
add
inc
cmp
enter
mov
push
mov
aaa
loop
or
or
sbbb
into
incl
repz
sub
adc
mov
or
xor
mov
sub
inc
sahf
popa
lea
and
jbe
or
dec
add
mov
sub
or
call
jg
fcmovnbe
push
xor
inc
or
fs
clc
testb
adc
jmp
lock
push
mov
and
push
mov
push
fidivs
pop
sub
jbe
test
test
pop
mov
mov
lcall
sub
jle
xchg
cmp
add
sbbb
test
arpl
hlt
test
mov
inc
cmp
sbb
adcb
adc
ret
mov
xor
mov
adc
cwtl
push
sbb
movsl
ja
push
sub
xor
jb
clc
outsl
adc
inc
movb
shlb
adc
ficomps
test
test
sbb
pop
mov
out
into
push
sbb
jp
notb
jge
mov
loope
cld
aad
outsb
test
ljmp
push
pushl
add
les
and
ret
pop
mov
fwait
jg
adc
idivb
clc
cld
push
sbb
cli
mov
les
push
bound
dec
les
pop
bound
cmp
cmp
subl
or
adc
or
add
nop
push
add
lock
mov
dec
dec
call
dec
add
dec
pop
mov
paddq
lret
pop
add
insb
loopne
push
pop
cmp
push
inc
pop
and
pop
mov
add
jl
lock
pop
xchg
push
clc
lcall
add
add
or
movl
insb
jecxz
pusha
mov
insb
jl
and
xor
mov
cmp
inc
mov
es
mov
mov
or
pop
add
ret
xchg
hlt
or
push
or
imul
hlt
mov
hlt
dec
les
pop
movsb
aad
adc
add
inc
icebp
push
xchg
mov
outsl
add
outsl
test
xor
out
xchg
movl
or
shlb
xchg
cmc
fists
shlb
ja
shr
push
orb
dec
inc
cmpsb
push
ss
nop
or
fdivr
push
pop
rorl
incb
cli
and
idiv
xor
xchg
lods
pop
hlt
aam
add
arpl
mov
push
test
or
add
mov
shlb
inc
rcrb
or
test
xor
rorb
mov
pusha
mov
add
or
mov
dec
add
push
ffree
sbbl
push
add
pop
mov
xchg
shl
cs
mov
inc
jecxz
mov
lret
push
loopne
xchg
mov
addl
jl
sub
adc
dec
inc
cmpb
std
call
jle
push
inc
jge
decl
jo
pop
cmp
push
mov
inc
fs
insb
add
mov
pop
jle
jp
and
clc
adc
xchg
mov
loopne
xor
cmc
inc
pushl
clc
mov
mov
dec
lea
popf
mov
test
call
pop
pop
inc
add
aas
jbe
mov
icebp
movsl
aam
push
nop
loop
and
adc
lea
push
add
inc
jbe
push
lret
push
dec
xchg
outsl
or
adc
mov
lods
sbb
push
test
scas
sub
jl
inc
mov
dec
rolb
in
inc
jle
call
roll
xchg
es
push
jo
ret
sbb
sub
xor
fistps
add
jl
sarb
mov
pop
pop
outsb
or
jmp
jb
push
xchg
mov
or
inc
loopne
pop
push
jo
call
shl
adc
sarb
jae
mov
cmp
add
sahf
and
test
dec
enter
jmp
pusha
cmp
xor
test
bound
xlat
lret
or
and
push
xor
hlt
jno
push
adc
or
movsb
lock
shl
pop
xor
push
mov
add
mov
rcrl
xor
mov
jmp
scas
aas
lcall
mov
jg
and
mov
or
stos
lock
jne
lock
inc
dec
in
jp
std
lret
pop
adc
add
and
push
xchg
sbb
lret
lods
mov
ja
shlb
jb
cwtl
sbb
xchg
cmp
lea
in
ret
adc
sub
cwtl
push
lock
cmp
call
or
push
mov
lock
in
lcall
test
into
dec
lods
push
or
nop
pop
icebp
clc
xor
adc
fisubs
mov
and
out
sbb
dec
testb
fldt
add
ret
dec
fisubs
xchg
mov
nop
push
mov
out
push
push
sbb
clc
inc
or
insl
jne
out
inc
stc
les
imul
push
enter
cmp
jg
sub
outsb
push
xchg
push
inc
add
pop
add
add
push
ficoml
jp
add
push
adc
mov
pusha
xchg
les
loope
icebp
in
test
jg
loop
sub
pop
jne
add
jle
ljmp
mov
je
fisubl
add
pop
mov
call
jp
in
insb
stos
sub
adc
dec
jbe
pop
push
pop
sbb
adc
rcrb
add
cld
cwtl
mov
inc
cmp
cld
out
dec
mov
enter
fdivrs
test
ss
aas
fdivp
fidivl
fidivs
aam
pop
cmp
dec
and
orl
mov
test
jmp
orl
lret
mov
mov
jmp
or
es
mov
sbb
jbe
mov
inc
xor
mov
addb
fstps
cld
leave
and
sbb
je
xor
inc
movsb
lds
fbstp
xor
jg
jg
int3
pop
dec
push
out
aaa
mov
mov
cmp
test
add
cmp
int
lock
jl
inc
mov
int
adc
lods
sbb
cld
and
dec
stos
mov
sbb
push
adc
test
sbb
roll
subb
inc
mov
int
add
in
mov
jge
inc
xchg
ret
mov
gs
inc
cmpl
mov
mov
lods
inc
pop
cmpl
in
sub
outsl
or
outsb
sub
sbb
adc
rcl
loopne
adc
leave
push
cltd
lret
aam
pop
cli
cmp
dec
cwtl
and
add
mov
ret
popa
adc
fcompl
into
adc
add
cmp
xchg
mov
mov
call
cli
and
add
mov
sub
es
inc
cld
sahf
push
inc
sahf
repz
adc
test
mov
jp
cmpsb
jl
sar
or
ret
outsb
lret
jp
add
sbb
inc
ror
push
nop
lcall
mov
fwait
test
inc
insl
jo
lcall
je
mov
push
ret
or
push
clc
sahf
push
pop
aas
lret
pop
pop
cmp
xor
mov
out
orb
sub
mov
add
mov
pop
cli
dec
sbb
ss
out
out
and
xchg
scas
and
push
test
faddp
or
pop
outsl
imul
xchg
add
aad
rcl
pop
adc
fs
das
mov
sub
mov
add
inc
xor
fsubl
jmp
adc
rolb
addb
dec
testl
decb
add
cmp
outsb
movsb
loope
fisubl
adc
jl
or
dec
adc
leave
ss
fldcw
xlat
sbb
nop
add
inc
pushf
ss
je
jb
add
cmp
sarl
mov
sub
nop
cmp
sar
or
sub
push
mov
push
mov
aam
cmp
mov
and
js
les
popa
inc
mov
out
and
adc
fdivrs
jb
js
cs
adc
push
sub
adc
lds
repz
and
xor
or
shlb
in
adc
and
lea
jmp
or
cmp
add
pop
dec
scas
inc
jb
jle
pushl
dec
dec
sub
testl
nop
stos
test
popf
add
je
adc
push
pop
pop
push
add
xchg
cmpsb
or
mov
pushf
add
add
or
sbb
jge
jmp
inc
je
addr16
sub
jp
or
es
dec
mov
inc
xor
insb
test
fwait
mov
fcompl
mov
inc
into
add
add
dec
pop
push
push
mov
ss
pop
sbb
mov
and
lds
adc
ret
add
out
inc
mov
sub
adc
sbb
in
xchg
ljmp
pop
push
rorb
pushl
adcl
adc
sbb
ja
pop
push
and
mov
test
ror
and
mov
test
adc
add
pop
xchg
push
cmp
or
xchg
rcll
fdivrs
and
pop
adc
call
dec
push
or
xchg
inc
jg
jbe
pop
movsb
lock
cmp
sbb
loop
hlt
push
adcl
cmc
cltd
rorb
inc
add
aaa
cmpb
ret
ret
add
inc
sub
jo
jo
cwtl
dec
movb
sbb
cmp
call
test
jle
mov
cmp
push
shll
movsl
sub
push
pusha
lret
lock
mov
push
push
adc
push
adc
mov
int3
rclb
movsb
jne
data16
mov
stos
das
inc
mov
dec
pop
mov
ret
out
pop
inc
pop
sub
dec
sbb
outsb
into
scas
out
mov
dec
add
mov
sbb
pop
fwait
ret
dec
lcall
rorl
or
fiaddl
push
or
adcb
test
mov
jo
icebp
sub
or
fsubrl
push
je
out
add
cmp
cli
mov
fs
cmp
push
mov
xor
in
or
jb,pn
lock
inc
xchg
mov
lods
pop
mov
aas
mov
jne
pop
scas
test
les
add
test
adc
aas
or
out
or
rclb
mov
mov
repz
mov
xor
push
adc
rorb
fidivrl
hlt
mov
mov
stc
or
xlat
push
es
and
cmpsb
mov
pop
ret
out
sub
in
ret
jle
jmp
mov
pop
testb
add
lcall
add
push
dec
lock
lea
inc
fmuls
mov
std
rep
cmp
cli
inc
jae
les
add
inc
int3
jnp
inc
pop
icebp
xchg
and
sub
or
dec
push
aaa
fsubs
fs
in
cmpsb
mov
andl
pop
mov
mov
subl
call
lcall
push
dec
push
dec
push
add
rcrb
adc
sbb
faddl
nop
fcmovb
les
sub
push
sbb
insl
out
lods
push
pop
in
mov
jge
int
inc
cmpsl
int3
lea
in
mov
adc
js
jl
sub
mov
je
callw
lods
sbb
mov
and
call
sub
and
xor
and
hlt
xchg
pushf
fwait
jmp
inc
jg
xor
es
xor
rcr
aad
ret
lcall
or
push
adc
mov
loop
call
push
adc
ret
inc
pop
mov
dec
mov
mov
add
subl
inc
sbb
clc
icebp
out
push
aam
and
xchg
cmp
xchg
cmp
imul
cld
test
loopne
lods
filds
xor
adcb
mov
fadd
nop
add
fsubrl
mov
add
dec
mov
add
mov
rcrb
inc
inc
mov
popl
and
adc
push
inc
cmp
mov
add
xor
pop
push
ja
mov
cmp
push
icebp
add
mov
into
pop
add
xchg
daa
add
rorl
ret
les
xchg
pop
test
aas
adc
cs
fwait
and
data16
scas
jp
adc
pusha
mov
and
flds
enter
cli
pop
ret
int
out
imul
adc
cmp
sti
adc
inc
add
and
pop
and
or
into
ds
aaa
adc
test
add
je
call
js
icebp
push
js
popf
ss
and
hlt
sbb
sub
lock
stos
sub
ret
xor
inc
mov
jp
mov
or
loopne
inc
aaa
orb
xlat
inc
stos
aam
cmc
xchg
pop
int3
repnz
or
pop
cmpsb
pop
clc
add
lods
push
mov
sbb
pop
das
data16
outsb
call
fs
out
pusha
sub
or
mov
push
push
iret
hlt
ret
jbe
popa
ret
rcll
mov
cli
adc
cmp
inc
or
clc
popa
push
lcall
cld
jnp
test
inc
repz
add
jmp
xchg
adc
ret
inc
loope
or
mov
imul
jl
cmp
add
data16
lea
sub
aas
sub
push
adc
mov
push
add
mov
mov
out
int3
cld
fs
bound
adcl
push
push
mov
stos
lea
icebp
and
add
aam
jle
popa
ss
jbe
mov
push
aam
jmp
test
sbb
fdivrl
push
add
dec
mov
cmp
push
add
add
ret
data16
outsl
sbb
fistpl
mov
ljmp
or
lea
movsb
mov
inc
aas
cwtl
adc
mov
dec
mov
ds
inc
inc
push
repnz
int3
movsb
hlt
sbb
jmp
add
dec
js
xchg
icebp
out
xor
mov
inc
push
push
mov
and
or
push
mov
mov
js
hlt
shlb
sbb
std
fbstp
dec
in
pop
ja
mov
and
cmp
pop
jo
cmpsb
pop
mov
adc
lock
push
mov
mov
xor
leave
xor
mov
mov
add
andb
and
fwait
pop
xchg
mov
call
int
push
sbb
push
mov
lea
aas
test
pop
inc
aam
loopne
xorl
dec
push
aam
stos
mov
xlat
xchg
das
cmpsb
mov
cmp
dec
icebp
and
divl
push
jns
mov
jp
lret
ret
rcrb
cmpl
xchg
test
aad
cmp
or
mov
pop
pop
sarb
add
dec
dec
push
push
add
jg
dec
mov
adc
gs
dec
and
inc
rorl
rolb
loopne
pop
aas
aam
mov
movsb
cmp
mov
jle
pop
push
ja
add
fs
stos
inc
or
mov
enter
fdivl
mov
je
cmpl
insb
jmp
xor
in
addr16
cli
or
mov
js
sub
add
dec
cmp
pop
mov
mov
adc
cmp
test
aam
aam
push
lock
rol
cli
clc
push
andb
xlat
or
sub
jb
pop
scas
dec
sbb
dec
jp
aam
mov
test
cwtl
cmpsb
fisubrl
or
sub
push
cltd
cmpsb
jbe
mov
lret
pusha
dec
cmpsb
dec
dec
add
in
pop
ret
ret
cmp
pop
je
push
cmpsb
adc
sub
das
clc
sub
test
pop
mov
inc
dec
movsb
pop
and
inc
clc
je
push
dec
pop
data16
mov
aad
call
mov
adc
add
adc
test
adc
mov
adc
enter
mov
decb
pushf
flds
jle
add
ret
clc
dec
mov
jne
sbb
push
inc
fadd
dec
test
xor
imul
lods
dec
es
add
outsb
pop
inc
in
add
insb
add
sbb
add
ljmp
arpl
hlt
cmc
push
push
addr16
mov
sahf
xor
xor
incb
or
add
mov
pop
pop
or
aas
pop
push
adcl
lods
das
cld
ja
inc
xchg
mov
mov
clc
enter
add
dec
sar
add
inc
and
push
test
or
push
mov
cltd
sbb
subb
orl
sub
xor
mov
lcall
add
pop
cmp
jge
or
cwtl
adc
or
mov
jne
cld
inc
lock
andb
cmp
mov
push
push
mov
add
mov
fimull
fildll
or
dec
jmp
pop
pop
les
and
push
add
mov
lods
sarb
ret
test
mov
mov
and
mov
adc
lea
decb
lcall
xor
lds
call
inc
sti
pushf
hlt
or
mov
mov
jl
pop
dec
jp
sbb
mov
dec
movl
push
sbb
push
mov
rcrb
push
mov
jbe
sbb
and
popfw
jp
push
lock
add
mov
mov
rorb
push
cmpb
mov
outsb
imul
push
pop
cwtl
test
fwait
mov
and
cwtl
adc
pop
adc
push
aam
add
test
push
aas
cmpsb
mov
xchg
pop
add
and
push
mov
adc
lods
push
jl
mov
ret
fsubr
clc
out
fisubl
or
cmc
loope
inc
add
scas
call
popf
loop
ret
mov
cli
data16
loopne
sbb
add
call
cmp
mov
xor
ljmp
aaa
or
and
gs
xchg
ds
inc
leave
int3
into
adc
push
pop
cs
mov
test
sbb
mov
decl
fs
std
lea
ret
cmp
push
es
pop
push
mov
andps
inc
sub
inc
cld
xor
rorb
int3
fs
or
adc
push
sbb
or
lock
aam
sbb
mov
je
adc
mov
xor
inc
enter
punpckhdq
sahf
nop
imul
xchg
sbb
push
cmpsb
dec
fld
mov
insb
jae
in
pop
mov
jmp
subb
mov
inc
pop
fisttps
icebp
into
cwtl
jmp
mov
outsb
push
or
jne
adc
inc
aaa
cmp
stos
inc
cmp
mov
clc
or
add
stos
jl
mov
jp
xchg
ret
and
cld
das
inc
mov
pop
decl
fs
out
inc
cmp
loop
pusha
arpl
ljmp
fistpl
bound
mov
pop
push
gs
and
mov
push
inc
mov
inc
push
add
dec
ljmp
dec
xchg
dec
fistpll
sub
pop
sub
dec
cmp
in
push
dec
dec
loope
mov
mov
fwait
mov
faddl
gs
add
int3
je
jne
pop
lret
fs
hlt
test
cmp
jge
dec
push
xchg
out
mov
sti
aaa
xchg
orb
into
and
ficoms
jmp
jae
push
push
push
push
sub
mov
bound
test
add
push
push
paddusb
pop
bswap
je
in
or
mov
inc
xor
nop
mov
js
pcmpgtd
push
movb
jns
xchg
mov
adc
push
push
cmp
movsb
fcoms
adc
sbb
cmpsl
ss
jl
add
cmc
or
cmp
sub
notl
adc
and
es
jl
push
nop
or
cmp
cs
jne
data16
push
mov
push
into
fmuls
inc
out
shl
jmp
test
aam
lods
lock
lahf
inc
push
xor
shrb
mov
popf
sbb
call
out
dec
xor
mov
xchg
sarl
sarl
and
mov
std
sbb
sbb
sbbl
enter
lea
test
inc
rcll
pushw
jmp
inc
rorb
je
lcall
gs
push
or
clc
stos
test
test
push
pop
mov
inc
cmc
adc
sbb
inc
loopne
test
cmp
into
in
loope
sub
mov
pop
add
xor
adc
mov
pop
hlt
ret
inc
pop
lock
pusha
adc
scas
sbb
pop
mov
mov
lahf
cmp
call
add
add
pop
mov
loopne
call
and
mov
pop
adc
and
xor
jecxz
or
lcall
jne
movl
jns
jge
adcl
lea
pop
xchg
xor
push
cmp
daa
inc
mov
mov
mov
cmp
fcmovnu
cmp
jb
push
xor
inc
cld
and
orl
adc
add
orl
or
divb
sbb
jmp
sar
pop
clc
add
lds
jmp
sub
jecxz
push
push
mov
ss
or
insl
loopne
add
push
dec
inc
or
mov
ljmp
rolb
jbe
push
pop
stos
ror
sub
inc
inc
adc
insb
movsb
aad
push
adc
out
mov
ret
test
test
int3
fsubrl
mov
add
sbb
xchg
jp
sbb
flds
dec
je
jg
jne
je
jns
shrb
and
push
push
or
outsl
xor
paddd
int3
and
pop
push
scas
lcall
cld
cmp
jle
sub
cmp
icebp
fsubrl
stos
in
imulb
into
push
hlt
lahf
push
and
dec
mov
sbbb
jae
inc
je
mov
mov
shl
xor
and
fiaddl
jne
cwtl
ljmpw
decb
inc
data16
lea
and
xor
cmp
rcl
lock
sbbb
and
dec
aaa
cltd
inc
ja
inc
decb
pop
shlb
in
les
test
aaa
jae
cmp
insl
aam
decb
jne
cld
mov
inc
mov
add
stos
sbb
push
mov
pop
ret
sub
sub
jmp
mov
call
lahf
or
orl
and
jge
and
jns
push
int3
add
xchg
inc
fsubrs
jecxz
inc
mov
sub
inc
xchg
mov
push
lret
jg
adc
push
mov
push
push
dec
push
mov
andb
orl
mov
pop
mulb
test
jne
pop
ds
das
jo
not
push
mov
pushf
xor
xchg
and
lea
push
out
rorb
push
clc
sub
jo
scas
adcb
push
pop
push
lock
ljmp
lcall
mov
test
test
mov
ss
lea
xor
inc
sti
imul
ljmp
insb
cwtl
add
add
mov
xchg
xchg
insb
movsl
loopne
pop
xchg
call
ret
clc
stc
dec
pushf
xchg
add
xor
ret
mov
xor
jb
clc
jae
push
push
fsubrs
push
mov
add
and
and
outsb
pop
jge
cld
inc
or
pop
adc
jmp
cmp
push
and
pop
cmp
pop
enter
and
adc
popf
cltd
dec
sbbb
mov
mov
mov
sub
sbb
pop
les
lret
clc
cli
mov
add
jb
arpl
dec
rcr
xchg
ret
push
decb
flds
sbb
adcb
adc
cmpsl
scas
fwait
lcall
sbb
jb
ficompl
mov
rclb
jae
inc
sbb
push
push
push
adc
xor
xor
push
pop
dec
or
stos
insl
push
mov
ja
aam
jmp
fsubrl
mov
pushf
xor
sbb
jle
xchg
int
insl
cs
in
int3
jl
and
mov
cwtl
rol
xor
dec
mov
fldl
sub
leave
dec
in
dec
inc
test
in
sbb
gs
mov
mov
cld
jae
adc
pop
inc
mov
stos
inc
or
popa
pusha
test
xor
pop
jg
arpl
mov
insb
lret
push
out
adcb
insl
std
pop
popa
outsl
cmp
jmp
jl
mov
out
push
shrb
andb
data16
sarb
xor
mov
and
aam
jns
fsubrs
or
mov
paddsb
mov
je
pop
push
out
mov
daa
add
sub
add
jno
int3
sbb
rolb
add
sbb
ljmp
mov
sbb
adc
repnz
sub
lcall
fildl
ss
push
fmulp
xchg
add
add
jns
push
push
mov
or
les
mov
xor
jne
sbbb
pop
and
add
xlat
scas
dec
sub
ss
or
call
sbbb
loopne
pusha
fadds
fcoml
pushf
or
sahf
dec
lods
inc
mov
hlt
cmp
push
fsubrl
js
adc
lret
xor
pop
jp
cwtl
or
or
xor
dec
cld
aas
xchg
clc
mov
call
and
rorb
dec
mov
cmp
ljmp
sti
xchg
add
xor
dec
or
and
sbbl
push
mov
add
pop
or
int3
sbbl
sub
call
jne
outsb
test
lock
mov
add
test
lret
sub
add
mov
ds
jg
xchg
jge
aaa
push
rcrb
iret
inc
test
add
movsb
jbe
icebp
dec
xlat
decl
lea
jne
lahf
dec
add
pop
sahf
jne
cmc
or
jl
rdpmc
jb
push
push
push
sub
int3
clc
mov
nop
movsb
lea
xchg
std
lret
sbb
jb
das
or
push
rcr
pop
bound
add
dec
pushf
lret
adc
pusha
sbb
mov
fs
xor
cld
es
push
shrl
mov
sbbb
xorl
or
add
ds
std
cmp
loope
or
movsb
lds
cmpsb
cs
and
pop
dec
bound
subb
hlt
xor
xor
test
adc
push
xor
bound
dec
or
mov
mov
dec
inc
shrb
push
dec
call
loope
std
lea
orb
mov
iret
or
or
lret
cli
orl
imul
xchg
mov
test
cld
je
add
adc
push
sbb
mov
jb
ss
lods
push
ret
or
mov
pop
jl
test
add
mov
ret
test
adc
add
sbb
and
inc
or
andb
fisubrs
add
mov
push
sar
lahf
and
fdivs
adcl
pop
clc
pop
sbb
dec
cmp
dec
movsb
xchg
rcl
pusha
xor
cltd
stos
jb
std
into
and
imul
popf
xor
or
jp
push
dec
mov
sbb
pop
or
negl
push
pop
loope
inc
pop
push
xor
cli
xchg
mov
mull
test
inc
pop
jbe
jl
pop
fs
pop
insb
pop
das
adcb
mov
cld
call
sbb
jne
decl
pop
or
test
jne
test
lock
test
int3
xor
cwtl
fimull
jecxz
ror
adc
mov
push
int3
outsl
xor
or
aad
xchg
dec
or
mov
mov
mov
pop
add
push
mov
inc
add
sub
xor
push
and
outsb
mov
jo,pn
pop
sbb
pop
inc
sub
and
lcall
testb
mov
and
sub
leave
push
mov
inc
mov
fists
addb
push
or
bound
jmp
scas
mov
add
push
cmp
jo
jle
jb
stos
jmp
in
fwait
cwtl
out
xor
dec
jle
cmp
jmp
lret
mov
xchg
orb
rolb
push
xchg
cmp
adc
mov
mov
push
leave
mov
inc
stos
sbb
lock
cmp
lahf
mov
add
push
in
shl
call
xlat
adcb
pop
in
enter
or
lea
sub
stos
inc
mov
dec
ljmp
mov
cmp
pop
lds
sarb
ret
push
pop
cmpsb
xchg
in
xchg
adc
mov
sub
adc
sarl
push
sbb
loopne
les
mov
test
addl
shlb
xchg
push
or
and
or
push
or
arpl
add
sub
push
data16
decb
aaa
lods
xrelease
xor
push
dec
xor
mov
dec
rclb
mov
mov
sub
nop
fs
add
cmp
add
push
mov
adc
adc
ficoms
add
sbb
loopne
cs
rcl
lea
push
js
push
jns
stos
or
and
adc
xchg
and
fnstsw
ja
inc
add
mov
mov
cld
mov
sbbb
sub
enter
xlat
aam
sarb
and
lea
push
cmpb
test
lret
push
push
adc
test
rcrb
mov
dec
inc
push
pop
mov
mov
mov
sub
js
mov
rolb
orl
lods
cmp
sbb
ret
lock
pop
xor
pop
cmp
sbb
add
in
mov
push
fsubl
dec
inc
mov
add
mov
mov
add
jge
repnz
in
cld
and
sub
push
adc
incb
inc
add
fs
sbb
jbe
gs
jp
mov
add
dec
test
inc
ret
cltd
test
addb
inc
dec
mov
inc
pop
insl
xchg
cli
popa
ss
jg
mov
mov
clc
push
gs
enter
sub
xchg
in
jne
push
mov
clc
inc
sub
jb
mov
push
pushl
xor
add
push
leave
sbb
mov
loopne
repnz
jmp
mov
cmp
sub
push
test
int3
out
shr
out
je
mov
cs
add
cmp
adc
inc
adc
mov
push
push
rolb
clc
push
add
cmc
repz
adc
sub
test
inc
aam
aam
jo
int3
dec
rorb
pusha
test
popf
sub
add
cmp
pop
sub
fwait
sub
mov
shlb
add
outsl
push
push
push
cld
mov
mov
inc
fisubrl
data16
jge
jnp
mov
push
out
test
test
das
sbb
faddp
or
test
nop
ja
push
and
adc
sub
add
inc
movl
lock
add
rolb
inc
out
mov
fsubrp
lods
dec
shrl
cmp
or
mov
jle
ss
loop
mov
or
push
xchg
es
loop
in
lret
xor
lcall
aam
stc
cltd
push
or
iret
lret
loopne
popa
inc
xchg
or
jmp
test
inc
mov
mov
ljmp
lds
sarl
jbe
pop
sahf
rolb
xabort
and
pushf
sbb
mov
dec
mov
sbb
test
pushf
sub
or
sub
sub
dec
or
cmpsb
adc
adc
inc
das
add
sub
jbe
jl
lods
adc
loop
cmp
jns
rcpps
pusha
mov
lret
or
push
gs
inc
dec
push
pop
les
cli
sub
ljmp
push
ljmp
cmp
dec
mov
push
push
add
push
in
test
add
push
int
push
mov
mov
mov
loope
xchg
bound
adc
add
loop
hlt
or
andl
mov
cwtl
sub
mov
dec
inc
es
sar
pop
fmuls
stos
jne
inc
jb
or
insb
loope
cli
into
cmp
fiadds
mov
mov
sbb
push
aaa
and
idivb
sti
std
push
aad
xchg
movsb
and
enter
or
call
xlat
mov
fwait
push
adc
fdivs
fs
sub
dec
adc
call
cmc
out
add
cs
orl
stos
ljmp
lcall
ret
push
inc
stos
jmp
mov
sbbl
jl
out
inc
or
or
cld
sub
and
push
clc
push
jb
and
sbb
adc
mov
mov
jge
xor
fsubs
les
cs
add
push
sub
sbb
and
lods
jl
shrl
dec
lock
cmpsb
mov
push
fadds
mov
aad
cmp
dec
loopne
push
cmp
or
js
adc
sbbb
adc
xchg
lret
xchg
mov
ja
xchg
addb
add
xchg
cwtl
cmpl
push
stos
sbb
aaa
push
lret
or
cmpl
adc
fnstenv
insb
inc
sbb
mov
and
inc
pop
jb
shlb
sbb
in
xchg
sub
mov
fists
pusha
test
dec
adc
inc
and
fidivrl
loopne
push
push
pusha
pushf
or
idivl
jmp
iret
lret
push
inc
rcrb
sub
or
cmp
lret
ret
imul
push
popa
xor
in
in
xlat
jmp
lret
out
push
add
mov
mov
das
push
pop
xor
aam
xor
sub
bound
or
xor
les
pop
aad
mov
clc
xor
xchg
mov
sub
push
lock
sbbb
rorb
into
xor
dec
cli
add
xorl
add
push
scas
adc
test
mov
xor
mov
je
mov
pop
sub
pop
enter
jle
orb
adc
mov
jp
mov
pop
jg
push
cmp
call
rcrb
repz
call
ss
push
lret
std
js
jne
jb
xlat
add
xchg
outsl
xor
loope,pn
add
inc
adc
decl
cmp
mov
cwtl
and
nop
scas
mov
mov
sub
cmp
adc
pop
push
test
pop
divl
js
mov
cmp
lock
add
inc
rep
gs
push
rcl
mov
loope
jle
dec
test
xorb
iret
in
dec
mov
imul
call
lea
outsl
inc
cwtl
fwait
das
xchg
pop
jae
les
rorl
std
test
mov
inc
insl
sbb
out
add
jle
xchg
fwait
shlb
mov
cs
xor
xor
push
movl
js
or
mov
call
bound
mov
inc
adc
popl
or
jo
mov
mov
gs
cmovae
sub
inc
adc
clc
pop
stos
outsb
es
push
jg
fld
fidivl
sub
mov
clc
js
push
loopne
outsb
and
push
cmp
repz
adc
mov
add
gs
sub
sahf
arpl
rcrb
dec
test
mov
push
shll
ljmp
data16
sub
ljmp
mov
movsl
inc
and
adc
or
mov
cmpl
jle
sbb
sub
mov
dec
mov
mov
sbb
and
push
sub
inc
fdivr
roll
je
push
loopne
cmp
pop
lock
daa
out
xorb
insl
cmp
cli
aaa
test
or
push
adc
push
in
notb
rorl
cld
push
ret
icebp
fildl
mov
jmp
loopne
push
mov
mov
mov
leave
xchg
or
mov
push
add
ret
add
dec
push
pop
or
shlb
push
stos
add
sbb
mov
cmp
inc
pop
fsub
jle
jmp
out
movsb
into
add
iret
ret
and
ljmp
sbb
push
jl
aam
lret
mov
je
shrb
js
in
mov
inc
inc
es
and
mov
xor
call
inc
or
or
jp
nop
mov
pop
mov
scas
jb
xchg
mov
ss
fadd
aad
add
fsubrl
testb
sub
adc
sub
imul
inc
and
mov
dec
lret
push
call
cltd
loop
into
repz
fists
mov
je
sbb
gs
push
andb
ret
mov
cmp
outsb
cmp
sti
ljmp
sbb
in
gs
mov
test
ret
push
xchg
adc
mov
inc
cmp
rcrb
jmp
add
out
add
jmp
add
push
cld
mov
mov
push
push
mov
push
pop
add
inc
fmull
cmp
cmpsl
pop
lret
gs
mul
add
aaa
mov
xor
and
pop
daa
scas
or
xchg
es
imull
add
ljmp
push
std
inc
xor
fmuls
jne
into
pop
add
sarb
adcb
shlb
add
test
outsw
mov
mov
push
push
adc
aaa
in
adc
in
pop
mov
je
push
push
jmp
nop
inc
mov
add
push
push
orb
call
pop
xor
adc
fxch
outsl
in
sarb
mov
fcos
test
mov
jb
or
testl
push
inc
jnp
mov
and
and
push
stos
lret
xchg
jecxz
sub
ds
mov
adc
xor
xchg
inc
jne
ret
ficoms
mov
lcall
clc
in
inc
push
roll
inc
jmp
inc
ret
adc
int
sti
movsb
mov
adc
icebp
pop
push
inc
mov
jne
in
cld
jnp
add
push
js
add
aaa
mov
lea
roll
stos
mov
cltd
call
xor
es
clc
cmp
pop
ja
je
jbe
mov
pop
xchg
std
inc
xorl
fistps
out
dec
movsl
loop
push
add
ficomps
mov
ficoml
je
fmull
gs
xor
notb
mov
inc
test
sub
pusha
dec
mov
push
aam
je
inc
jl
dec
push
inc
add
xor
pusha
dec
pop
xor
inc
push
xchg
adc
cs
mov
push
pop
outsl
add
std
outsl
mov
xor
cld
into
push
test
shr
and
pop
adc
and
test
cltd
fcomps
xchg
lcall
sbb
add
cmpsb
jne
dec
aam
pop
pop
lock
das
cmp
inc
out
pop
decl
jbe
js
cmc
data16
es
lods
add
jae,pn
jne
bound
add
mov
jp
push
sahf
std
dec
cwtl
shr
xorb
mov
das
jle
cmp
les
push
cmp
dec
fwait
adc
int3
mov
repz
jl
mov
jg
mov
jns
add
add
call
add
cmp
shlb
xchg
lea
and
out
ja
mov
xor
add
je
pop
xor
rcrb
rclb
push
nop
adc
cwtl
call
cmpl
movsb
add
sahf
pusha
jge
push
hlt
push
outsb
jmp
mov
ret
sarb
int3
adc
sub
adc
in
push
add
cltd
bound
and
add
push
adc
jb
push
mov
jbe
loopne
jl
push
mov
std
add
outsl
mov
xchg
jne
or
mov
sahf
call
push
xchg
xchg
test
add
add
or
xchg
and
mov
add
aam
mov
sub
out
and
pop
inc
lock
call
mov
mov
inc
push
movsl
and
mov
lea
sub
int3
call
flds
loope
mov
lea
mov
add
test
test
sub
or
jne
cwtl
cmovne
icebp
pop
xchg
cld
fimull
mov
push
cli
push
cmp
nop
push
jns
rcrb
fwait
inc
int
xchg
rcrb
cmp
add
icebp
clc
jge
jne
sbb
or
pop
push
xor
push
mov
mov
rcll
inc
jg
or
subl
jp
push
xor
int3
mov
pop
xchg
jne
jo
sar
pushf
gs
cmp
shrb
inc
in
nop
mov
sbb
in
icebp
test
xchg
and
sub
mov
sbb
dec
cs
cwtl
outsb
sub
notb
mov
or
sarb
pushf
lock
pop
lret
or
ljmp
imul
sub
jb
movsb
mov
xchg
push
inc
mov
xchg
lret
icebp
adc
dec
sub
enter
push
push
adc
and
ret
hlt
fwait
sbb
jmp
loopne
les
add
push
pop
xor
push
sub
push
xor
pop
mov
mov
pop
push
inc
mov
sti
outsb
sbb
popa
mov
and
enter
dec
push
push
cld
shlb
jmp
add
es
mulb
std
mov
pop
lcall
into
fdivs
in
push
int
mov
inc
xchg
mov
push
clc
sub
sti
add
sub
lcall
pop
or
inc
and
repnz
lods
push
push
push
xchg
pushf
sub
test
sti
push
mov
add
inc
loop
je
add
iret
inc
inc
aaa
and
push
pop
push
jge
jle
in
int3
or
adc
mov
mov
popa
lret
cltd
mov
mov
xchg
mov
bound
fs
or
fwait
and
mov
in
inc
or
loope
fs
xor
mov
adc
insb
pop
test
xorb
fdivr
add
cmpsb
push
push
out
pushw
sti
imul
hlt
cmp
test
ret
sarb
cmp
pop
sub
mov
sbb
dec
stc
push
inc
xor
mov
lea
pop
or
dec
mov
push
cbtw
rclb
lock
mov
pop
sarb
or
inc
pop
sub
in
add
inc
dec
lock
mov
into
add
push
push
mov
mov
cld
ds
test
sbb
popa
jmp
test
add
shr
subl
jge
imul
add
loopne
popa
fcmovnu
xor
adc
or
add
aaa
xbegin
notl
add
push
adc
push
sbb
mov
pushf
cmp
mov
mov
call
or
outsb
jmp
xor
xchg
sbb
push
mov
test
pop
enter
push
out
and
and
jo
jo
insb
mov
mov
add
test
test
out
mov
cli
xor
push
sbb
mov
and
push
rep
jne
jecxz
sbb
add
loope
inc
sti
ljmp
sub
xor
popa
in
data16
inc
clc
add
jo
ljmp
pop
push
pop
movsl
aas
dec
dec
add
andl
hlt
aas
or
or
fsubrs
rorb
jb
cs
pop
fmuls
test
and
adc
mov
xchg
fsubr
loopne
out
and
clc
mov
add
push
or
add
lock
ja
je
jg
add
inc
shll
out
in
je
idivl
lcall
xchg
pop
rclb
cmp
icebp
mov
lock
sbb
or
ja
lsl
ret
loopne
popa
bound
mov
xchg
add
out
out
shlb
je
int3
jbe
and
adc
mov
or
push
mov
fwait
outsl
cmp
sti
mov
push
and
sahf
gs
add
add
or
jo
mov
mov
pop
push
cmp
cld
mov
out
adc
jne
add
push
adc
bound
scas
scas
push
push
lcall
sub
jb
jl
jb
fistpll
lods
movsb
push
jno
adc
and
mov
and
inc
push
stos
push
pop
add
pop
jne
repz
add
adc
sahf
aam
loopne
cmp
xchg
aam
xor
rolb
jmp
in
shlb
stc
push
add
dec
inc
mov
adcb
add
mov
jne
cmp
cwtl
cmc
cmp
loop
ret
loop
notb
pop
sbb
je
inc
setp
jb
sub
ds
push
lret
fisubl
mov
dec
je
mov
rclb
test
faddl
inc
mov
cmp
or
repz
sbb
cmp
dec
cli
je
and
sbb
sbb
and
mov
leave
push
jl
das
ljmp
sbb
push
call
sub
int3
mov
push
push
imull
xor
icebp
call
dec
ret
mov
loope
sbb
pop
add
aam
clc
test
xchg
cmpsb
rorb
dec
mov
dec
out
xchg
cmc
jg
mov
cmp
test
popa
lods
adc
sub
inc
test
sub
movsb
mov
xor
dec
je
mov
push
scas
test
pop
push
insb
hlt
inc
stc
adc
jge
out
lods
pusha
adc
xchg
adc
insb
imul
sbb
cmpsb
push
inc
repnz
lock
movsl
mull
int3
or
and
inc
dec
xchg
roll
les
cmp
ss
adc
loopne
add
mov
adc
cmp
movsb
inc
mov
adc
jecxz
inc
ja
and
into
test
icebp
call
inc
adc
dec
hlt
pop
xor
call
add
jbe
push
aaa
fdivl
cmp
hlt
aas
rcr
dec
into
cmp
add
stos
jge
test
enter
arpl
adc
arpl
or
cld
inc
mov
shlb
mov
push
dec
andb
mov
cmpsb
je
les
inc
test
fadds
cmp
xchg
nop
dec
out
add
jo
dec
jmp
mov
push
dec
cs
jo
es
xor
xchg
rorb
add
push
jbe
ret
jb
divb
xor
jle
xor
sbb
mov
inc
inc
add
lret
test
outsl
jmp
xchg
lret
cs
inc
sub
mov
rorb
addr16
add
fwait
push
add
notb
sbb
aas
adc
pop
cld
xor
adc
es
jge
in
jl
cli
push
loope
jp
adc
fiaddl
inc
loopne
int3
dec
push
jne
in
leave
mov
dec
xchg
hlt
add
subb
test
nop
adc
ret
jl
outsb
xor
out
push
xchg
sarb
inc
test
clc
sbbl
sahf
enter
mov
cmp
inc
rolb
xchg
movsb
fs
aam
sbb
pop
fisttpl
jl
cmp
add
out
jmp
push
shlb
mov
pop
pushl
sub
mov
inc
mov
jecxz
decl
cmp
les
add
push
dec
sti
out
fprem
mov
jne
mov
ret
sahf
dec
pop
roll
dec
stos
add
pop
push
test
add
pop
int3
or
ret
inc
and
push
data16
mov
out
adc
sub
insl
fisubrl
push
adcl
int3
pop
xor
or
incb
push
adc
inc
add
lret
mov
enter
add
into
add
gs
orb
mov
mov
je
cmp
shll
jmp
clc
dec
fisubrs
jbe
mov
lea
dec
das
ret
xor
cmp
jmp
pop
dec
adc
mov
nop
or
cli
and
ljmp
stos
add
mov
mov
jle
mov
pop
mov
daa
loopne
outsl
and
add
in
push
lea
push
int3
mov
push
sub
subb
loope
push
sub
cmp
inc
shlb
rorb
or
arpl
mov
movb
pusha
inc
xchg
jl
dec
insb
jp
call
inc
dec
lcall
clc
dec
inc
pop
xor
test
call
or
xor
pop
enter
outsb
notb
hlt
push
aas
push
js
fldl2e
lret
add
add
fs
mov
dec
cmp
jno
jo
add
mov
mov
xor
and
mov
cmp
add
mov
pop
lcall
mov
dec
jl
hlt
xchg
mov
nop
and
movsl
or
pop
mov
pop
xchg
orl
dec
sub
sbb
orb
and
mov
scas
jne
pop
sti
push
pusha
adc
int3
push
mov
std
lock
jb
add
mov
adc
dec
mov
or
test
push
ret
add
mov
jle
pop
xchg
xor
aam
add
jecxz
xchg
and
andl
add
cs
mov
push
stos
clc
bound
outsb
dec
pushl
femms
add
out
ljmp
cs
pusha
xor
add
sbb
mov
inc
cltd
int3
or
call
xor
mov
xchg
movsl
mov
sbb
pusha
inc
or
enter
lret
aam
ficoms
push
clc
push
jge
inc
adc
xchg
mov
mov
push
lds
lret
inc
je
inc
mov
mov
pop
call
ds
dec
test
push
jmp
int3
sbb
adc
cld
mov
jae
mov
sbb
test
gs
jb
and
inc
test
mov
jmp
push
sub
push
jo
sbb
lods
insb
hlt
test
jp
ret
outsl
jo
jbe
and
fbstp
bound
push
dec
add
cmpb
mov
movsl
push
nop
incb
les
inc
mov
pop
jmp
push
sbb
mov
roll
push
sub
lea
mov
data16
cmpsb
xchg
ljmp
std
lahf
pop
es
xor
push
shrb
cmpl
movd
pushf
adc
loopne
or
jmp
or
sbb
dec
add
inc
add
add
inc
or
popf
add
cld
or
push
leave
pop
xchg
add
lea
pop
or
xor
push
xchg
mov
scas
ret
lret
inc
add
cmp
in
shlb
imul
mov
adc
fildl
cmp
mov
ljmp
push
mov
out
mov
xor
and
pop
sbb
cmp
sti
jne
sbb
cmp
fisubrs
insb
fdivr
idivb
les
arpl
sub
std
dec
add
mov
mov
sar
or
sub
mov
loope
or
call
ror
imul
mov
sub
insb
outsb
sub
mov
sti
hlt
roll
xchg
in
add
pop
wrmsr
or
cmp
aas
sbb
ljmp
sahf
add
aam
push
push
push
mov
xchg
inc
test
movsl
xchg
rorb
push
dec
pop
sub
pushf
push
sub
sub
push
inc
aam
xor
sbb
pcmpgtb
leave
xor
xor
test
push
bound
inc
inc
xor
pop
fucomp
add
jle
jl
ds
pop
mov
or
dec
adc
adc
mov
mov
mov
fisttps
psrld
nop
jnp
add
inc
pslld
fdivr
call
sub
stos
adc
cltd
push
or
jb
push
les
fdivrs
lock
cmc
lds
add
fs
xor
dec
mov
popf
jo
add
mov
push
add
loopne
adc
mov
rorb
insl
or
inc
mov
test
xor
clc
sub
push
rclb
mov
sbb
inc
ret
adc
xor
add
push
scas
push
xor
dec
pop
cmp
mov
add
out
es
hlt
mov
cmp
jae
jp
jmp
push
cli
sbb
pop
icebp
sub
cld
sub
push
and
movl
and
push
dec
int3
cmp
aaa
stc
jecxz
push
add
jmp
xchg
in
pop
xor
adc
xor
push
sbb
xchg
jl
idivb
in
pop
sub
imul
mov
push
js
std
xor
sahf
sbb
jg
inc
cs
cmp
push
pop
push
loopne
in
hlt
and
out
adc
dec
rcrb
or
movsb
push
pop
rolb
fisubrs
jnp
enter
add
pop
clc
fistpll
xchg
and
mov
aam
add
add
adcl
pop
xor
mov
or
add
dec
push
loopne
and
pusha
addl
push
fildl
xor
jo
push
adcl
mov
int3
arpl
sbb
push
adc
testb
cmp
enter
pop
pop
outsb
cmp
cmp
adc
mov
js
push
push
insb
dec
insl
mov
jl
in
test
lret
std
xchg
fcmovu
add
ss
test
mov
mov
xor
adc
and
sahf
jae
lea
cmpsb
daa
mov
sbb
push
sub
out
sysret
xor
push
nop
pop
pop
jp
scas
not
push
xchg
sbb
pop
pop
xor
sti
xor
test
mov
jo
out
sbb
pusha
loope
data16
fs
push
sbb
fs
inc
and
cmovno
in
roll
sbb
adc
sarb
jg
je
xor
cmp
shll
adc
or
enter
push
loopne
add
jb
push
and
add
jne
pusha
mov
data16
ficoml
sub
lods
jle
mov
rorb
jmp
cmp
and
std
clc
inc
sarb
pop
pusha
rorl
lock
push
adc
push
pop
mov
jge
and
add
mov
and
lods
xchg
aam
fiaddl
adc
faddl
cli
in
orb
gs
jmp
mov
and
xchg
pusha
mov
dec
xlat
xor
dec
dec
notb
xchg
push
loopne
jge
js
je
or
das
addb
jb
xchg
ja
dec
dec
dec
fidivrl
push
ret
jmp
imul
jbe
pop
pop
add
test
cmpsl
lock
inc
pop
xchg
out
dec
fdivs
push
imul
loop
cld
pop
mov
adc
cwtl
call
inc
ret
cmp
cmpsb
xchg
rorb
or
pop
add
lea
xor
cmpl
ret
and
cwtl
fs
push
inc
sahf
mulb
inc
jp
jne
pop
test
sti
cli
push
lock
lea
es
cmp
mov
rorb
gs
mov
imul
push
rcrl
loopne
lock
and
call
cmc
mov
sbb
sbb
not
mov
and
ret
out
jo
cmp
mov
daa
sbb
pop
enter
pop
and
clc
inc
nop
cmp
dec
call
jo
bound
shll
mov
testb
mov
and
inc
mov
push
mov
je
je
xchg
adc
fwait
sub
aaa
jl
sbb
js
mov
int
outsb
push
cmp
mov
mov
es
nop
add
nop
ficoms
enter
cmp
xchg
adc
sbb
and
inc
testb
mov
hlt
shl
testb
pop
lcall
pusha
add
pmuludq
dec
and
mov
outsb
push
sub
test
add
div
mov
cld
test
std
ljmp
rcll
ret
test
cli
jno
add
ljmp
loopne
inc
and
es
push
enter
mov
pusha
pop
sbb
lret
mov
lock
inc
aas
hlt
or
int
adcb
jb
mov
xchg
popf
or
cli
push
rcrl
and
call
rol
pop
test
test
add
add
in
add
jo
loopne
dec
inc
pop
cmp
jecxz
add
les
push
js
add
cmpb
rcrb
inc
push
fcoms
mov
sarb
std
mov
push
pop
mov
push
out
mov
add
lea
and
fstpt
or
push
and
out
cmpsl
loop
xchg
popa
outsb
mov
rcrb
aam
xchg
add
sbb
ds
sub
mov
inc
outsb
and
std
pop
inc
cld
test
push
icebp
js
mov
call
cmp
add
xor
popf
mull
mov
addb
arpl
dec
dec
inc
in
ret
xchg
in
mov
mov
xor
es
cmp
and
push
icebp
inc
mov
je
mov
das
add
fsubl
insb
mov
pop
test
adc
ret
dec
lock
push
sub
imul
ret
dec
insb
cmpl
mov
outsb
mov
pop
xor
add
int3
pop
je
jmp
outsl
sbb
andb
leave
call
subl
lret
adc
cmp
xchg
push
jle
xor
addr16
idivb
or
lock
test
cld
lock
test
push
jnp
xchg
movsb
dec
lahf
les
jo
add
mov
jl
les
mov
inc
add
sbb
add
loop
scas
es
test
cmp
shlb
ljmp
or
and
test
filds
fwait
fnstcw
in
add
hlt
adc
push
pop
fsubrl
decb
je
movsl
or
mov
ficoms
push
lock
pop
ljmp
imull
divb
add
inc
push
pop
fisubs
xor
push
incl
clc
rol
js
mov
push
jle
sarb
jb
xor
std
xor
lock
and
cmp
add
lar
dec
out
test
jp
xor
ucomiss
roll
push
insl
pushf
push
mov
lock
mov
push
enter
outsb
call
enter
insb
or
je
push
pop
mov
inc
ret
and
xor
in
ds
xorl
or
icebp
sub
push
pushl
fsubs
adc
adc
push
pop
add
insb
mov
xorb
or
xor
test
cltd
in
push
add
out
pop
mov
test
scas
lock
jp
pop
inc
fsubs
lods
push
cmp
shrb
and
clc
xchg
test
fwait
mov
fisubrs
arpl
mov
jno
das
inc
dec
enter
sbb
outsl
pop
and
xor
js
test
sbb
arpl
repnz
add
adc
xchg
mov
cmpsb
push
subl
mov
add
out
pop
mov
mov
adc
push
cmp
dec
add
lock
mov
lret
shrb
push
test
enter
aaa
rcll
jp
mov
cmp
pop
jmp
inc
popa
in
mov
pusha
cmp
inc
jne
jp
add
ret
ficoms
clc
push
cwtl
mov
jne
mov
xor
movsl
mov
lock
and
std
out
movsl
push
aad
mov
push
hlt
sbb
push
repnz
decb
jno
sub
mov
arpl
mov
xorl
jmp
push
scas
lock
sub
jg
adcl
xchg
fldl
or
mov
sbb
add
xchg
mov
mov
pop
pop
xor
push
sbb
add
aad
mov
std
sbb
push
test
pop
jp
push
add
sahf
shlb
in
jne
rorb
sub
sub
push
call
jle
outsl
cwtl
aas
push
xor
inc
inc
inc
xor
fisttps
fsubr
adc
sbb
push
mov
test
aam
sbb
jns
pop
inc
ss
mov
adcl
fstl
call
test
inc
call
pusha
xorl
je
int3
leave
mov
xchg
push
and
cmp
mov
push
sbb
fwait
jge
push
mov
push
gs
je
add
xchg
pushf
add
test
cld
adc
shl
lea
push
aaa
shll
rcr
jne
je
fwait
adc
pop
adc
enter
mov
push
mov
or
jo
mov
add
shrl
mov
and
sub
sbb
xchg
push
aad
outsb
cmp
or
inc
fwait
inc
jg
adc
ljmp
dec
push
loopne
cmp
mov
testl
mov
mov
add
fcoms
lcall
dec
add
push
push
clc
pusha
and
mov
inc
inc
imul
and
loop
je
or
loop,pn
or
dec
or
dec
push
fcompl
mov
das
ss
sub
popa
hlt
pop
push
clc
xchg
jp
popa
jle
inc
pop
int3
iret
test
stos
mov
push
popf
mov
dec
ljmp
hlt
mov
insb
pop
mov
call
insb
data16
push
mov
cld
xchg
test
mov
testb
in
inc
mov
push
adc
mov
in
sahf
shll
or
xor
das
xchg
loop
add
dec
inc
imul
xor
insb
add
lea
or
jecxz
test
sbb
jmp
jnp
sbb
sub
xchg
mov
xchg
aam
push
adc
mov
dec
cld
push
push
jp
fadds
dec
inc
das
movsl
lahf
loopne
mov
scas
push
or
and
sub
fnsave
fnsave
add
pop
mov
ljmp
xchg
mov
sbb
fs
push
cmpsb
pop
mov
push
mov
sbb
xchg
and
mov
xor
add
mulb
or
call
dec
mov
adc
push
inc
cld
hlt
jne
jmp
fcomps
push
adcl
movsl
movb
xor
dec
into
inc
adc
jp
mov
shlb
inc
jle
mov
inc
in
push
std
xchg
ljmp
sarb
mov
add
pop
roll
pop
inc
shl
and
sub
jmp
test
enter
inc
test
jecxz
repnz
je
xor
fcmove
in
or
mov
xchg
lock
push
add
lds
mov
lock
cs
mov
into
push
pop
sbb
aas
loope
inc
cmpsb
jecxz
clc
bound
pop
cmp
aam
inc
add
mov
sub
jbe
lret
push
test
sub
xlat
or
mov
xchg
mov
scas
mov
loop
jle
mov
mov
dec
sbb
inc
mov
jnp
dec
or
xchg
add
adc
ret
cmp
mov
sbb
je,pn
loopne
fimull
fs
and
dec
jl
jb
push
adc
popa
push
mov
fldt
xor
mov
dec
jb
adc
inc
test
ret
jnp
pop
mov
in
inc
cli
adc
xchg
sbb
sbb
mov
or
pop
aas
inc
xchg
xor
lock
bswap
and
xchg
loope
lea
call
push
jl
jmp
mov
cmpb
movsl
inc
and
cmp
sbb
push
push
jp
outsb
lods
sbb
outsl
cld
cmp
and
lcall
subl
jno
int3
add
lahf
mov
push
dec
lds
stos
incb
ss
sub
je
xchg
inc
push
shrl
lcall
xchg
mov
popf
iret
es
mov
dec
jg
inc
notb
jo
in
into
push
xchg
cmc
mov
xchg
insb
in
dec
test
inc
pusha
mov
dec
or
lea
out
sub
or
dec
mov
xchg
insl
push
pop
push
ss
mov
insb
jne
and
repnz
aaa
mov
lret
or
test
movsb
sub
push
in
je
push
pushf
and
arpl
icebp
bound
pusha
rcr
inc
push
into
lea
test
and
into
xorb
rorb
lea
arpl
insb
dec
xchg
cli
lret
xchg
adc
push
loop
xor
add
dec
js
cmc
cmp
mov
push
leave
jge
adc
ds
mov
jae
rol
pop
cmpsb
nop
or
outsl
or
sbbl
insb
mov
lds
dec
call
dec
loop
pop
add
and
mov
loopne
add
pushf
cmp
push
cli
insb
pop
add
rorb
push
inc
push
mov
or
adc
sub
xchg
xchg
out
cmc
aaa
cld
xlat
or
lea
inc
jne
dec
mov
lock
call
icebp
sbb
ret
test
xchg
pop
add
or
aad
loopne
or
clc
repnz
xor
cld
stos
pop
bound
loope
pop
in
int3
shll
push
mov
inc
lds
mov
mov
push
or
mov
push
iret
or
and
pop
imul
jp
call
or
mov
mov
xor
test
jmp
mov
sub
inc
aaa
daa
or
lock
push
movsb
clc
xchg
mov
xor
jmp
push
push
mov
popa
pop
aaa
sbb
dec
movl
sub
pop
add
inc
ss
ss
and
es
stos
data16
adc
stc
lock
cmpb
in
adc
sbb
lock
test
in
aaa
iret
pop
jbe
inc
dec
push
les
std
xorl
xor
in
cs
sub
lea
leave
rolb
inc
callw
jmp
inc
mov
inc
std
shll
add
mov
mov
cs
mov
aas
sbb
fdivl
jmp
fsubrl
es
ret
dec
or
clc
mov
aad
sub
sub
add
add
inc
mov
mov
je
rorl
push
add
popa
cmpsb
push
and
cmpsb
lods
divb
inc
leave
dec
mov
xchg
sbbl
mov
jg
les
mov
cmpsl
or
inc
or
sub
pop
cld
and
jne
push
movb
xchg
cmp
dec
sbb
divb
xchg
call
arpl
lcall
lock
adc
mov
ret
imulb
lcall
imul
rcrl
stos
xchg
imul
in
add
mov
mov
lea
jbe
jmp
ss
pop
ficompl
pop
push
outsl
repnz
insb
int
xor
idivl
adc
push
loopne
pop
add
repnz
hlt
pop
inc
cmp
xorb
dec
ret
add
popw
or
jge
test
xchg
nop
aam
xchg
ret
push
dec
adc
lret
cmp
dec
mov
les
mov
sub
pushf
pop
mov
es
adc
cs
loop
add
adc
scas
jl
xchg
ss
mov
pop
sub
mov
data16
push
adc
hlt
cmp
mov
jbe
mov
xor
sahf
sbb
and
add
lret
inc
andb
adc
cltd
into
add
sbb
mov
push
sbb
insl
std
adc
push
xor
inc
add
ja
movsb
cmpsl
adc
test
mov
mov
pop
shrl
hlt
jne
pop
inc
pop
push
enter
add
jg
ret
rorb
and
inc
leave
fs
pop
push
cmpsb
push
push
adc
in
push
or
mov
clc
cld
inc
pusha
xor
test
push
out
push
inc
addb
je
adc
sti
push
test
inc
add
cmp
stos
xchg
je
mov
mov
push
lea
xor
ds
das
mov
sarl
jbe
leave
adc
pop
add
xor
aas
inc
jo
push
sub
inc
and
pop
mov
add
sub
sub
subb
jbe
inc
jg
daa
lret
cmp
jb
add
leave
xchg
outsb
xor
sahf
es
data16
fdivs
xor
or
jae
add
fadds
and
pop
loopne
inc
fstpt
sub
rorb
jle
nop
jecxz
decl
pusha
inc
dec
jne
clc
shr
data16
test
cmpsl
pushf
insb
jne
or
shlb
inc
sarb
ficoml
testl
sbb
fiadds
jno
cmp
fwait
add
adc
lods
pusha
out
adc
js
lcall
sub
rol
push
ljmp
scas
and
mov
jbe
in
inc
lea
cmp
add
pop
int
outsl
pop
addr16
fisttps
hlt
testl
js
mov
mov
fildll
pop
dec
mov
aaa
in
adc
sub
mov
inc
mov
int3
loop
add
adc
lock
fwait
call
dec
cwtl
insb
add
jge
inc
push
sub
stos
sbbl
cmc
pop
adc
push
lret
dec
scas
xorb
movb
out
out
cmp
push
movsb
rcl
icebp
das
push
pop
pushf
fsubrl
xor
rclb
sub
int3
je
dec
aas
push
or
cmp
sub
sbb
sbb
cmp
add
dec
or
shr
lret
lcall
adc
mov
call
int3
and
push
call
shlb
cmp
cmp
sahf
lret
add
in
or
inc
loopne
pusha
sbb
in
cld
and
push
jl
dec
rol
imul
mov
and
dec
fiaddl
sub
and
leave
sbbb
inc
fnsave
push
add
cmp
mov
mov
sbbl
out
push
add
cltd
jbe
and
dec
ret
pop
and
cld
add
xchg
add
sub
cwtl
adc
adc
rorl
int
and
int3
nop
lcall
imul
loopne
gs
fmuls
movsl
jge
jecxz
xchg
push
stc
loopne
add
jl
daa
inc
or
sub
push
imulb
adc
into
xchg
dec
xchg
inc
in
mov
rcrb
cmp
jp
xchg
std
call
test
cld
mov
mov
or
mov
or
gs
test
or
in
mov
dec
cs
mov
add
loope
mov
adc
jle
pop
cmp
add
xchg
data16
outsl
fistl
pop
orps
add
sub
leave
add
rolb
inc
sbb
insl
push
add
gs
mov
dec
out
in
je
loope
fmuls
or
ljmp
inc
or
ljmp
in
mov
cmpsb
es
cmp
cmp
shll
mov
aam
lods
push
hlt
loopne
sarl
popa
shl
mov
punpckhbw
in
les
fnstcw
xlat
mov
pusha
outsl
jb
sahf
mov
xor
nop
repnz
add
clc
and
pop
sbb
hlt
test
je
xchg
daa
mov
push
in
loop
popf
cmp
and
pop
adc
pop
inc
xor
mov
je
pop
cmp
cmc
push
mov
imul
or
pinsrw
sarl
imul
cmovbe
inc
pop
fucomi
mov
mov
cmp
mov
inc
clc
and
mov
push
cld
jg
ds
sbbl
cmc
pop
ss
notb
push
and
loopne
mov
cmp
je
pushf
inc
xor
push
popf
pop
pop
sub
xchg
leave
cld
std
mov
insb
add
repz
nop
ljmp
or
mov
sbb
mov
call
cmpsb
ss
add
fs
mov
or
xchg
lret
iret
and
cmp
outsl
cmp
cmp
lods
dec
lcall
sti
aas
mov
and
pop
xchg
sti
in
mov
inc
mov
mov
mov
inc
sub
int3
jne
idiv
sub
cmc
ljmp
sahf
outsb
inc
push
and
pushf
jle
sub
cmp
lret
lock
dec
jge
pop
mov
fsubs
shlb
dec
add
ret
xchg
dec
insb
mov
fisubl
push
adc
xchg
push
adc
movsb
sbb
cli
sbb
insb
xchg
cld
xor
dec
nop
sbb
push
fisubrl
push
test
in
fstl
lea
add
fcomip
mov
cmp
cmpsb
enter
adc
std
gs
or
inc
sub
jno
ret
add
das
jbe
sbb
push
push
push
pusha
out
inc
add
mov
sbb
dec
sbb
psubsb
cs
xor
movsb
add
xchg
mov
addb
pushf
jmp
fcoms
add
and
mov
lea
and
mov
jmp
and
push
mov
and
add
inc
adcl
aaa
test
sarb
jno
and
xchg
stos
cmp
insb
adc
mov
mov
loope
mov
push
adc
xchg
test
cmc
xlat
add
pop
mov
dec
xchg
pop
adc
hlt
test
xchg
inc
xchg
jae
and
nop
gs
or
sahf
loop
les
dec
test
rcl
cmp
jmp
inc
and
cs
mov
fisubrl
cmp
inc
xor
pop
push
sbb
insl
lock
in
and
or
or
inc
cli
out
inc
jo
add
add
inc
or
in
call
push
movsb
push
mov
xor
sub
push
cmp
aam
fists
aad
std
push
mov
stc
stos
lea
lcall
or
and
ss
and
inc
xor
sub
xchg
loope
push
outsb
cwtl
pop
insl
inc
add
cld
mov
mov
push
arpl
xor
mov
insb
mov
sbb
loop
cld
es
incl
cs
inc
jmp
out
je
test
and
xlat
push
addb
add
jne
inc
cmp
insl
xor
rclb
rorl
cmp
fdivp
mov
lods
addl
data16
cmp
aas
adc
xor
adc
clc
jne
and
loopne
in
mov
gs
pop
bound
enter
adc
xor
add
pusha
adc
cld
pop
jp
or
jbe
loop
movsl
aas
cltd
dec
je
lret
fmuls
bound
int3
xor
nop
ljmp
fiadds
loope
push
ret
lret
and
lock
ljmp
add
cld
ss
push
mov
push
mov
loop
rcl
aad
lock
sbb
xor
inc
mov
pop
adc
sub
jo
ss
repnz
lcall
adc
stos
adc
cld
jb
ljmp
cld
mov
lea
mov
pop
pop
fdivs
aad
add
pushf
in
inc
cmp
pop
inc
or
push
dec
mov
sub
add
and
hlt
bound
cmpb
inc
in
and
cmp
dec
adc
enter
enter
xor
sub
cmp
sbb
sub
jmp
lret
add
enter
add
sar
test
cmpsb
jno
enter
fcoms
jmp
and
in
sbb
hlt
call
call
test
sub
int
sub
fs
dec
jne
rclb
dec
pushf
xchg
out
test
shlb
mov
mov
ret
pop
lock
inc
push
add
dec
incb
nop
jne
or
push
pop
sub
push
je
dec
push
mov
mov
lods
xor
pop
inc
mov
mov
mov
adc
iret
or
dec
dec
cld
loope
cmp
jle
dec
call
into
add
cli
push
and
clc
cmp
cmp
inc
xchg
dec
xchg
jp
add
pop
gs
pop
scas
xorl
pop
add
enter
sub
test
mov
ljmp
mov
cmp
cmp
enter
inc
inc
cmc
aad
les
in
adc
loopne
outsl
inc
add
enter
fcoms
mov
jmp
mov
adc
mov
loopne
das
jb
mov
and
lock
arpl
test
nop
lock
data16
inc
push
lods
orb
fidivrs
repz
into
outsb
mov
insb
xor
ds
push
stc
and
mov
lea
call
push
inc
add
cmp
test
leave
lods
cmpsb
push
js
add
ds
mov
xor
sub
push
dec
cmp
xor
out
mov
leave
push
jae
js
outsb
jecxz
test
mov
les
adc
aad
outsl
pop
pop
xor
push
add
data16
stos
cmp
loope
std
jg
shl
clc
dec
cmpb
jnp
mov
mov
dec
sti
aaa
sbb
loopne
push
fcomi
cmp
or
sbb
pop
mov
cs
dec
ljmp
fsubs
or
addb
or
push
add
adc
minps
adc
sub
jg
and
addr16
das
inc
xor
loopne
xchg
and
or
dec
pop
ss
cli
das
sbb
or
xor
outsl
cs
fsub
inc
cmp
sbbb
mov
jge
mov
mov
jecxz
inc
fsubr
sbb
add
mov
fwait
sub
xchg
push
cmp
roll
add
daa
test
jns
push
jl
sub
fstpt
jo
in
or
pushf
loop
jmp
adc
push
aaa
sbb
adc
dec
std
aad
les
pushf
jle
nop
or
call
popf
xchg
lods
adc
andb
and
pusha
repz
or
test
push
or
jl
mov
dec
jbe
cmp
rcll
mov
sub
sub
or
je
push
outsb
dec
add
test
pop
inc
adc
add
and
cld
mov
push
cmp
es
adc
aad
push
push
enter
in
and
mov
add
mov
lea
pop
js
aas
les
jmp
stos
xor
adc
xor
fisubl
xchg
stos
dec
xchg
std
enter
out
stos
in
bound
mov
mov
push
adc
add
cmp
mov
add
sub
movsb
inc
adc
repnz
sub
jbe
xlat
cs
cmpsb
icebp
hlt
xchg
sbb
nop
lret
or
cwtl
or
je
xchg
dec
add
sbb
fcmovnb
nop
cmc
mov
cmp
sub
jp
adcl
jecxz
or
insl
lock
push
add
ss
adc
push
sub
cs
push
test
adc
push
test
data16
add
sub
das
push
aas
mov
adc
pusha
lods
daa
add
test
movb
pop
or
lret
xchg
mov
adc
dec
xor
loopne
pop
fadds
icebp
sbb
rolb
loop
test
inc
inc
cmp
sbb
mov
aam
into
test
pop
pop
sub
pop
ss
adc
pop
pusha
push
mov
pop
push
inc
repnz
test
test
ficomps
adc
push
and
adc
push
inc
jmp
sbb
sub
pushf
jne
and
call
test
and
mov
repnz
sub
loop
rcrb
pop
lret
call
add
aaa
inc
cld
mov
lea
or
sbb
leave
rcrl
jge
push
or
push
or
incb
test
cwtl
dec
or
pop
xor
mov
sarb
rol
outsl
enter
adc
movsl
js
push
mov
mov
popa
or
push
popf
pop
icebp
insl
add
xor
outsl
push
xchg
inc
lods
je
mov
xor
outsb
lcall
popa
roll
stos
mov
pop
jle
cld
add
pushl
arpl
maxps
mov
fdivrs
xchg
sub
insb
cmp
or
push
pop
add
push
scas
subb
pop
cmp
flds
or
ret
mov
arpl
test
in
inc
clc
test
and
xchg
and
xchg
lods
add
mov
mov
loop
mov
sbb
mov
imul
mov
out
xor
test
testb
cmp
inc
push
inc
shll
push
sub
jo
pop
ljmp
mov
push
add
call
ret
in
push
sub
push
les
inc
fcomps
pop
push
movsl
les
cmp
and
mov
jmp
dec
loopne
or
int
ret
mov
enter
pop
sub
cld
push
cmp
int3
mov
es
or
shl
push
mov
cmpb
test
repnz
and
inc
sub
out
xchg
adc
and
nop
or
sbb
fs
adc
xor
fwait
imul
or
adc
int3
or
mov
pusha
xor
lock
enter
mov
jo
or
je
or
stos
dec
jmp
call
push
xchg
rorb
pop
sbb
pop
pop
dec
pop
and
out
push
inc
xchg
lods
cmp
jmp
sbb
or
dec
mov
add
inc
cmp
clc
adc
inc
add
inc
mov
push
xchg
pop
inc
outsl
fsubl
push
es
inc
ss
fldcw
inc
push
cld
xchg
cmovs
add
mov
ss
xchg
mov
adc
or
test
jne
add
aam
dec
popf
inc
arpl
inc
sub
movsl
stos
mov
dec
test
lea
mov
pusha
mov
push
or
dec
cmp
push
mov
loopne
mov
outsl
or
and
mov
ljmp
les
adc
cmp
ljmp
or
ffreep
inc
mov
xlat
outsl
std
xor
rcl
add
dec
add
jmp
sub
adc
js
data16
mov
mov
jg,pn
leave
orb
push
add
inc
mov
lock
ficoml
mov
pusha
mov
shlb
adc
mov
mov
lock
roll
dec
inc
xchg
jno
and
out
loope
dec
imul
rcll
mov
push
dec
xor
push
push
dec
xchg
sub
dec
fcoms
cld
roll
mov
pusha
andb
les
add
push
pusha
cli
cmp
mov
es
push
mov
add
or
in
push
cmp
ret
inc
mov
jmp
mov
or
test
sub
sbbb
int3
inc
jnp
push
ja
xchg
hlt
mov
dec
xor
jle
or
xor
test
test
rorb
incl
repz
mov
shl
or
push
sbb
or
mov
loop
sbb
lret
testb
or
call
add
jl
add
add
mov
add
std
mov
mov
xchg
in
adc
inc
pop
or
cli
mov
and
push
ficoml
and
pusha
fsubp
js
pop
adc
divb
xor
dec
xor
push
add
or
jnp
xor
aaa
loop
in
adc
xor
xorb
xchg
je
cmp
push
xchg
push
dec
shll
push
decb
cmc
pop
mov
ret
push
add
or
cmpsl
pop
dec
int3
call
lcall
add
mov
pop
stos
cli
cs
lods
clc
cmp
sbb
add
mov
aam
push
loope
in
rclb
jge
inc
or
jae
jno
ret
mov
xor
sub
testl
adc
xchg
cmc
pushl
cmp
ret
stc
fwait
test
sub
mov
xchg
idivb
sub
pusha
push
sub
mov
popa
imul
push
xchg
xor
jbe
mov
jg
sarb
aaa
adc
mov
adc
adc
test
test
enter
call
xchg
rorb
mov
pop
hlt
jp
shr
out
adc
clc
in
cmp
xchg
dec
std
and
sbb
adc
sbb
xor
pop
sub
inc
fs
dec
add
or
sub
pop
addl
adc
xor
or
repnz
inc
or
ja
inc
cltd
push
push
jle
adc
or
mov
sarb
xchg
in
dec
push
pop
add
xchg
xor
fisttps
mov
cmp
notb
push
lahf
dec
jmp
add
or
push
pushf
mov
inc
dec
loopne
in
mov
sahf
jbe
push
ljmp
mov
callw
test
pop
cmc
gs
mov
call
fmull
outsb
test
jo
les
sbb
mov
rcr
pcmpeqw
call
jne
xor
pop
fimuls
idivb
outsl
ret
arpl
and
cli
hlt
mov
add
ret
rorb
push
inc
add
xor
lcall
cmp
fldt
add
or
pop
push
loop
mov
inc
adc
inc
mov
mov
or
call
dec
hlt
imul
dec
sar
dec
fidivrs
mov
fdivrs
adcl
dec
add
mov
orl
mov
xchg
cmp
or
push
sbb
psubsw
xor
or
aam
add
ja
mov
or
pop
inc
mov
adc
dec
iret
lock
fildl
xor
icebp
fs
nop
push
xlat
orl
adc
jl
lock
mov
sub
pop
mov
js,pn
dec
sub
sbb
ret
decl
sbb
and
cs
xorl
les
xor
popa
cmpsb
ret
sub
mov
hlt
add
test
inc
loope
das
mov
pop
cld
xchg
in
mov
add
adcl
and
movsb
mov
incl
or
ja
inc
cld
cmovne
andl
push
push
clc
movsb
mulb
pop
lea
inc
push
mov
cld
adc
dec
outsb
push
pop
push
sti
or
loop
in
and
sbb
mov
push
adc
add
xor
adc
dec
xor
push
in
test
aam
iret
xor
pop
rorl
adc
insb
mov
rcl
xchg
mov
out
rorb
lcall
rolb
int3
xchg
hlt
jbe
icebp
mov
and
push
mov
or
stos
jp
test
inc
andb
add
aaa
faddl
adc
jb
enter
testb
cmp
dec
ja
sbb
insl
inc
add
xchg
shr
ret
sahf
mov
xchg
or
fcoml
or
xor
xor
movsl
inc
mov
sub
inc
mov
test
add
aam
mov
inc
decl
jmp
push
xchg
subb
in
mov
fnstenv
sub
or
sbb
je
orb
shlb
adc
mov
push
subb
push
ja
test
std
push
lcall
test
and
aam
sub
scas
xor
les
mov
add
pop
inc
out
imul
test
rorl
jl
xchg
mov
mov
push
rcll
mov
push
lcall
xchg
sbb
popa
xchg
mov
or
mov
cmp
or
je
cmp
jl
lods
orb
inc
hlt
pop
stos
inc
inc
mov
enter
adc
inc
fiaddl
cmpsl
mov
rcrl
outsb
pushf
mov
adc
push
inc
loope
and
lock
and
jp
or
mov
ljmp
jb
negb
or
xlat
push
cwtl
aas
aas
cs
mov
leave
mov
adc
adc
pop
push
rorb
lock
ljmp
decb
or
pop
scas
dec
sbb
mov
sarb
inc
cmpsb
subb
leave
frstor
cli
aas
push
push
xor
xor
dec
add
aaa
push
aaa
mov
xlat
add
imul
xor
test
add
or
lea
add
add
fsubs
push
ljmp
and
je
sbb
dec
fcmovb
push
fadd
push
or
dec
imul
sbb
add
les
scas
cmp
or
imul
jmp
insb
pushf
arpl
mov
fidivrs
xchg
cmp
pop
cmp
fsubl
test
push
insb
push
call
mulb
insl
cmp
ss
jne,pn
mov
xor
jb
mov
insb
or
ror
incl
pop
inc
or
sti
or
clc
dec
popa
pop
les
incb
pop
outsl
sbb
inc
mov
dec
cld
inc
int3
push
fisubrs
add
dec
cmp
jl
add
aam
ret
scas
sub
adc
jp
push
sub
inc
or
jb
subl
add
adc
mov
add
lahf
or
sbb
dec
jle
xor
mov
jmp
clc
cld
add
sbb
mov
fisubl
shl
stos
xchg
rolb
mov
movsl
jno
lods
aam
add
add
je
hlt
test
push
in
aas
jl
icebp
lods
les
jne
outsl
and
sub
out
hlt
stos
into
jne
decl
lret
dec
add
mov
iret
mov
mov
mov
aaa
cmp
xor
mov
jp
push
add
add
lock
cli
das
and
jae
xchg
adc
adc
mov
push
xchg
adc
or
aas
xor
sbb
mov
loopne
fcomps
mov
cltd
adc
lcall
sub
movl
test
add
ja
inc
inc
cwtl
add
gs
pusha
cld
adc
or
dec
pop
ret
insl
mov
jmp
pop
add
mov
jnp
insl
cmp
push
mov
inc
std
push
mov
mov
rclb
sbbb
sbb
add
jmp
mov
orl
fsubr
mov
sbb
test
xor
inc
test
cli
bound
lods
insl
in
les
push
pop
mov
xor
fbstp
push
add
mov
sbb
mov
test
shr
inc
push
jge
cmpsb
shrb
inc
dec
decl
mov
adc
jle
mov
push
scas
test
das
add
loope
add
jg
test
iret
mov
int3
sub
mov
ret
ficoms
xorl
sbb
xchg
add
pop
add
push
cmp
fisubs
mov
mov
loopne
or
inc
push
inc
dec
cld
movsb
jbe
loopne
mov
cmp
xchg
pop
loopne
push
xor
xor
lods
mov
gs
dec
and
or
jl
ljmp
xchg
nop
mov
xlat
dec
pop
enterw
movzbl
loope
inc
aas
cmp
adcb
jo
jb
sub
pop
or
mov
fistpl
test
add
pop
hlt
nop
out
call
cmp
pop
dec
fiadds
lock
iret
mov
aad
fisubs
hlt
rclb
sub
push
inc
bound
sarb
shrb
xchg
xor
xchg
xchg
dec
in
fisubrl
dec
jge
call
in
les
and
rorb
mov
inc
test
push
adc
cld
loope
sub
inc
hlt
outsb
adc
jmp
inc
or
stc
rol
inc
pop
inc
repnz
sbbl
loopne
or
nop
mov
inc
dec
cld
cltd
fsubs
inc
je
fs
call
lret
push
push
add
fimull
fidivrl
int
and
shlb
shr
mov
mov
inc
dec
pusha
push
jge
hlt
outsl
movsb
sub
or
add
sbb
or
pop
dec
imul
and
adc
loope
in
pop
shufps
cltd
ret
xchg
in
push
sub
pusha
js
or
movsb
mov
push
add
pop
mov
rolb
sti
add
inc
add
jmp
add
stos
pop
aas
insb
cld
inc
mov
mov
push
dec
cli
xor
cmp
jno
fiaddl
minps
call
cmpsb
xchg
push
xor
add
mov
jmp
enter
mov
dec
in
cmp
mov
cs
flds
adc
cmp
push
scas
mov
push
enter
les
mov
notb
dec
pop
test
cld
and
sub
xor
sahf
es
aam
cwtl
add
outsb
add
push
loopne
out
adc
in
das
push
ljmp
in
inc
add
bound
jmp
inc
xor
aad
xor
add
dec
jmp
and
aaa
push
pusha
mov
ficoms
mov
or
clc
cmp
cmp
push
or
int3
rcrb
inc
or
out
jecxz
scas
cmp
mov
push
pop
mov
inc
dec
pop
xor
shll
inc
mov
mov
jmp
push
fisttpl
and
mov
push
sbbb
sub
push
pop
mov
sub
addb
add
sbb
rclb
add
sub
ds
leave
inc
mov
rcll
out
pop
stos
loope,pn
xor
xchg
divl
sbb
xor
callw
test
jbe
adcb
jb
fsts
test
push
mov
or
add
nop
or
test
lds
test
js
stos
leave
clc
icebp
sbb
cmp
repz
pop
test
mov
aam
repnz
test
dec
sub
sbb
gs
js
inc
adc
es
icebp
lock
shrl
add
outsl
jne
int3
sbb
pop
adc
or
lock
lcall
dec
sub
cld
sbb
push
std
dec
push
mov
jge
movsl
aaa
ljmp
sbb
add
imul
cwtl
shl
pop
test
sbb
fldt
jne
hlt
adcl
inc
decb
xor
pop
mov
call
mov
inc
sbb
inc
mov
jnp
outsl
or
lcall
out
jae
add
call
sbb
addl
push
test
fdivr
mov
dec
or
jg
enter
sti
fnsave
cwtl
add
enter
ret
test
xor
xchg
into
jne
add
cld
or
mov
or
xlat
sbbl
cmp
inc
mov
sbb
insb
loope
add
je
jb
xchg
cmp
jb
cmpsb
enter
jne
dec
jne
rolb
dec
sbb
ret
fucomi
xchg
or
cmp
data16
sub
jecxz
call
push
cltd
call
ficoml
incl
or
push
inc
jle
hlt
pop
push
dec
inc
cmp
int
sbb
mov
dec
jbe
hlt
mov
add
mov
add
xchg
sbb
pusha
add
inc
inc
push
enter
push
repnz
enter
imul
mov
inc
aaa
mov
je
pop
fdivs
mov
pusha
jp
sbbl
daa
mov
add
and
mov
test
fildll
jmp
loop
and
fs
mov
hlt
leave
xlat
and
fimuls
mov
mov
mulb
inc
mov
in
add
or
sbb
ds
incb
mov
fadds
stc
hlt
rolb
shrl
cmp
mov
stos
mov
mov
loope
inc
xor
mov
inc
adc
or
add
dec
inc
movsb
add
sub
decl
sbb
mov
out
notb
clc
jb
std
in
ss
xor
adc
fcomps
and
cmp
test
scas
mov
fimuls
mov
mov
mov
inc
shrb
pop
push
ss
mov
mov
or
fldenv
icebp
ret
shlb
or
xlat
movsb
test
inc
enter
les
push
sub
pop
scas
inc
mov
and
adc
sub
insl
mov
and
mov
negb
sti
ds
xor
sbb
mov
dec
sbb
pop
dec
nop
xchg
add
ljmp
call
int3
push
add
aaa
jo
movsb
frstor
jmp
ds
pop
sbb
addl
mov
add
mov
test
inc
js
cmp
pop
pop
je
loopne
push
sub
ss
in
movsl
push
mov
popa
mov
add
lock
xor
push
bound
add
pop
lock
stc
pusha
insl
xor
jecxz
inc
ljmp
xlat
mov
inc
pop
aam
push
jp
xor
icebp
fdivs
lock
or
cmp
test
mov
data16
push
fwait
ret
lcall
dec
jne
jbe
push
test
lods
add
or
lock
ret
pushf
andb
and
xlat
push
pushf
and
insb
push
cmpsb
in
fmuls
ljmp
shlb
rclb
pop
push
jecxz
sub
mov
fwait
mov
inc
or
add
sub
loop
ret
mov
int3
add
popf
outsb
enter
add
cs
pop
sub
movsl
and
dec
call
xchg
push
or
cwtl
xor
xlat
add
sbb
js
or
or
pop
sbb
pop
push
jl
pop
sbb
or
adcl
sti
inc
pop
outsl
test
or
xor
call
lds
inc
inc
sub
pusha
shlb
test
int
lcall
mov
cmp
push
or
movsb
out
testb
fwait
loop
dec
push
xchg
or
pop
rclb
cs
rolb
add
lret
cs
or
repnz
push
inc
mov
pop
sbb
add
fsubl
sbb
fs
je
pop
or
push
cmp
aaa
imul
xor
pop
xchg
scas
jp
in
push
dec
push
or
jbe
repnz
hlt
jae
jmp
sbb
push
adc
out
outsb
add
popa
inc
xor
dec
sahf
inc
jmp
test
inc
add
call
mov
fldcw
mov
jbe
and
mov
adc
adcb
pop
and
sbb
mov
pop
adc
sub
add
ret
inc
sub
lock
sub
es
lods
pop
ljmp
cmp
jne
scas
incl
cld
lcall
call
sbb
je
cld
cmp
cmp
mov
mov
fwait
sub
sbb
lods
sbb
bound
test
and
sbb
sub
jl
clc
or
xor
push
call
xlat
jno
xor
sbb
mov
in
sub
push
mov
xor
sbb
add
cld
jmp
sub
or
lcall
and
int
insl
ficoms
mov
or
sub
mov
xor
push
add
and
pop
jo
lock
jg
xor
sqrtps
adc
scas
das
add
paddusw
dec
es
xor
mov
inc
iret
fadds
mov
mov
jp
sub
stc
mov
imul
add
stos
ret
lods
mov
pop
adc
inc
push
add
or
loop
cmpsb
loopne
or
int3
lret
scas
popa
test
test
hlt
mov
mov
push
ljmp
loopne
fwait
sub
push
push
sub
test
mov
mov
clc
popl
enter
cs
push
add
ja
popf
push
call
insl
int
mov
mov
sub
imulb
and
enter
mov
jne
outsl
sub
call
jb
mov
pop
test
mov
pop
mov
xor
mov
dec
and
xor
mulb
test
jg
mov
mov
int3
xor
adc
cs
sub
imul
jp
push
or
and
adc
mov
jns
cs
in
push
sahf
and
stos
dec
int3
adc
lods
inc
xor
es
cwtl
push
push
repz
mov
jmp
pop
pop
cmpsb
add
mov
push
jg
fwait
jecxz
adc
sbb
mov
insb
dec
jge
cmp
inc
dec
mov
inc
adc
pop
mov
xor
movsb
call
je
icebp
inc
or
push
xor
cmp
scas
es
in
outsb
rcrb
outsb
jp
push
add
jmp
outsl
icebp
aaa
je
movsb
mov
test
cmp
push
outsb
out
insl
sbbl
fs
pop
or
fildl
dec
fdivs
call
mov
mov
mov
mov
pop
jb
mov
addb
jg
aam
mov
inc
inc
mov
jle
mov
cli
xchg
and
nop
mov
sbb
neg
or
sub
push
add
insl
push
ja
ljmp
loopne
test
sub
lock
dec
mov
mov
cmp
jmp
xchg
push
push
push
les
mov
jg
sbb
dec
cmp
cmp
cpuid
push
lock
test
pop
cli
orl
or
sbb
adc
jmp
xor
cli
pop
test
and
cld
add
sub
movsb
fcmovbe
xchg
adc
fsub
xor
xchg
subl
insb
mov
loop
sub
insb
decb
jp
and
call
jne
jb
add
adc
aas
arpl
xchg
and
aam
fwait
or
cs
pop
pop
cmp
inc
mov
push
call
push
dec
int3
mov
sarl
int3
jmp
push
int3
insb
stos
dec
and
push
cmp
cs
les
std
test
push
dec
mov
ficomps
nop
or
aas
push
mov
dec
aam
aam
push
jae
movsb
mov
push
pop
sbb
stos
add
pop
clc
push
addl
clc
xchg
nop
or
sub
icebp
inc
mov
scas
mov
jb
xorl
mov
call
lcall
push
adc
mov
push
imul
ss
cmp
je
mov
ja
je,pt
sub
rolb
push
mov
test
sbb
dec
call
pop
loopne
mov
adc
mov
sarl
xor
mov
dec
sub
pop
sahf
xor
or
cli
push
in
dec
xchg
scas
aaa
ss
pop
bound
cmp
mov
dec
adc
mov
lods
shrl
fadds
in
data16
and
jmp
mov
aam
or
xlat
mov
sbb
push
popa
insb
xchg
sbb
xor
std
dec
repnz
inc
pop
movsb
mov
insl
pop
test
rolb
cltd
mov
jb
sub
push
ret
inc
or
add
mov
out
push
out
pushl
and
sahf
push
cmc
adc
adc
enter
ljmp
add
aam
outsb
rcrl
or
sub
popf
aam
cld
pop
movsl
rorb
lret
push
sbb
mov
pop
mov
jmp
inc
push
add
mov
test
leave
in
not
cmpsb
cmovs
mov
adcl
and
sub
push
sub
adc
inc
dec
add
add
hlt
incb
pushf
inc
jo
inc
inc
push
adc
ret
movsb
sub
jle
or
inc
movsb
rolb
cmp
push
xor
mov
fsubrl
movb
orb
lcall
inc
mov
xchg
cmpsl
fs
push
mov
add
pop
jp
test
add
fcoml
dec
bnd
push
dec
pop
pusha
push
and
movsb
bound
xor
sub
mov
mov
neg
scas
jl
sub
xlat
rolb
xchg
lock
jo
mov
ljmp
into
add
cld
lock
faddl
add
adc
dec
fmuls
cmp
dec
xor
sbb
aad
xchg
es
xchg
dec
mov
in
incl
shlb
in
dec
mov
test
insl
sbb
mov
insl
xchg
inc
je,pn
mov
pushf
sub
and
call
imul
mov
ds
sbb
shlb
jnp
xchg
adc
sub
add
cld
inc
clc
arpl
fisubrs
inc
adc
push
pop
push
mov
sbb
pop
shl
outsl
mov
adc
call
cmp
ret
sbb
enter
mov
mov
mov
add
repz
xchg
mov
add
push
enter
sbb
inc
xor
bound
jge
cmpsl
sub
fs
push
jno
mov
push
inc
ret
add
mov
adc
insb
sub
add
mov
or
cmp
fadd
or
sbb
or
ret
jno
mov
enter
fmuls
test
je
jnp
dec
push
insl
ror
push
in
pop
cmp
fidivrs
lea
mov
add
push
clc
jg
sub
mov
orl
xor
insb
xor
ror
es
lcall
nop
cli
xchg
jmp
mov
and
xor
dec
inc
fbld
scas
cli
add
mov
cld
push
sti
add
nop
inc
pusha
popf
and
mov
fmull
addl
sub
mov
pop
add
in
imul
add
rclb
jno
nop
jo
mov
and
adc
call
jg
jl
xor
je
lock
or
sub
sbb
stos
jle
rcl
popf
and
fs
cmp
mov
add
loop
push
cmp
shll
adc
jnp
mov
inc
cwtl
lret
jne
xor
imul
loope
mov
or
push
sub
dec
add
cli
add
hlt
mov
xadd
in
fwait
mov
dec
xor
mov
inc
cltd
loopne
lock
mov
rcrb
pop
add
sub
cld
leave
fwait
and
mov
sarl
push
push
jmp
mov
push
adc
push
adc
or
lds
add
xchg
nop
dec
sbb
pop
test
rolb
adc
mov
dec
or
pop
cltd
jo
shll
jge
fs
adc
mov
mov
cmp
fiaddl
rolb
xor
repnz
icebp
sahf
or
imul
cmp
adc
add
sub
or
mov
dec
adc
push
fadds
xor
or
cld
pop
inc
push
hlt
push
rolb
inc
xor
sbb
sbb
paddd
pop
mov
call
mov
out
das
push
mov
ret
jle
cmp
jne
cmp
push
nop
mov
inc
inc
xor
push
or
jle
push
roll
stos
mov
mov
aam
add
inc
add
std
testl
outsb
and
adc
mov
jo
cli
cmpb
mov
add
rcr
adc
push
mov
add
pop
je
push
jp
xor
aam
and
pushf
repnz
jae
dec
loopne
enter
push
push
adc
xor
inc
cmc
cmp
or
push
jle
push
cwtl
push
mov
sti
add
movb
push
or
cwtl
data16
fstpt
push
rclb
mov
pop
add
push
xor
iret
sbb
fwait
stos
mov
fsubs
cmp
xor
test
push
pop
mov
pop
icebp
incl
fmuls
xor
sbb
movsb
mov
xor
cs
mov
popa
test
mov
or
mov
les
or
mov
cmp
ljmp
pop
mov
sbb
or
dec
and
sub
dec
xor
xor
push
push
pop
nop
inc
clc
dec
push
roll
jp
rclb
dec
loopne
add
mov
lret
inc
sbb
push
js
and
xor
mov
sbb
adc
fs
push
add
fsubrl
mov
std
inc
pop
fcoms
call
push
fcmovnu
jmp
repnz
hlt
xor
loope
or
xor
push
xor
and
and
jo
pop
ljmp
fsubs
cld
enter
sbb
lcall
or
inc
movb
rcr
loope
cmp
pop
mov
bound
bound
mov
push
pop
adc
inc
test
test
push
sub
adc
or
jge
and
sbb
std
inc
sbb
data16
dec
or
adc
mov
mov
mov
rorb
outsb
xor
inc
mov
mov
subl
sti
int3
jnp
js
dec
fmulp
dec
int3
je
ljmp
or
call
adc
and
insb
mov
mov
or
mov
jo
push
stos
push
negb
mov
pop
adc
xchg
inc
popa
nop
and
inc
call
xor
xchg
jp
adc
les
mov
push
add
inc
xchg
ss
scas
xlat
inc
aaa
movsb
push
pop
sahf
mov
daa
cltd
push
mov
call
ret
and
jmp
adc
mov
cmp
movsl
xchg
pop
push
fidivl
mov
in
mov
pop
call
fiadds
pop
in
scas
xchg
aad
cld
mov
add
cmpl
inc
jp
adc
adc
loopne
test
enter
push
imul
xchg
pop
xor
add
mov
jbe
dec
and
mov
sub
add
mov
outsl
fs
push
jmp
sar
xchg
pop
inc
push
push
ficoml
mov
lea
mov
jg
dec
xor
shr
orb
divb
mov
pop
dec
inc
in
popl
pusha
enter
in
fistl
enter
jno
mov
mov
fmull
inc
clc
mov
popa
push
pop
push
cmp
aam
push
out
out
in
mov
dec
ljmp
or
and
adc
push
inc
pop
dec
mov
inc
push
adc
lds
and
xchg
xchg
pusha
es
and
mov
push
shlb
add
push
sarb
in
or
sbb
cmp
push
or
call
scas
xchg
dec
leave
add
cmp
repnz
mov
inc
sbb
outsb
mov
fiadds
cmp
nop
nop
mov
add
jbe
jnp
mov
in
push
sub
in
xor
mov
pop
out
mov
push
test
pop
mov
jne
inc
lods
jl
push
roll
sub
lcall
test
adcb
dec
das
mov
pop
addl
dec
lret
in
mov
cltd
add
sub
push
idiv
insl
pop
add
les
ret
or
std
add
enter
in
call
pop
lock
iret
imul
pop
add
loopne
push
aam
jns
push
push
push
js,pn
dec
shrb
cld
and
fistpll
outsb
ja
seto
jmp
cmp
mov
jg
mov
push
push
ljmp
data16
mov
loop
outsb
add
test
test
and
push
sti
insb
xor
dec
push
cmp
es
xchg
std
pop
fadds
bnd
dec
mov
sub
cmp
push
pop
imul
js
and
pop
push
cmp
dec
xor
or
mov
xchg
mov
inc
push
add
mov
adc
jmp
lret
or
nop
adc
cmovns
jnp
xchg
push
push
enter
or
push
out
aam
mov
xchg
decl
jmp
push
inc
mov
aad
aad
mov
cli
mov
lds
jbe
nop
loopne
leave
sub
cmp
test
jg
loope
je
push
aad
xor
adc
pop
test
lret
loopne
adc
enter
and
leave
jns
nop
mov
gs
cld
adc
mov
loop
cmc
add
lret
ja
xorl
mov
out
xor
sti
adc
test
push
rcll
add
sub
inc
std
sbb
push
mov
decb
sub
add
add
mov
cli
inc
push
mov
add
out
mov
or
jmp
mov
mov
mov
dec
sbb
clc
enter
add
jmp
sbb
movsb
jo
inc
adc
xor
mov
push
ds
add
rol
inc
add
push
jo
data16
inc
mov
loopne
cmp
fcompl
or
inc
movsl
mov
mov
xchg
loope
lods
or
mov
cwtl
ljmp
out
pop
loop
add
add
inc
dec
test
add
pop
jmp
mov
scas
dec
jae
int3
inc
mov
stos
shrl
dec
push
es
cmp
sbb
insb
dec
cmp
mov
cmpsb
movsl
shrl
push
mov
jp
mov
mov
adc
and
shll
mov
push
std
and
inc
and
decl
and
test
push
cmp
mov
mov
xchg
xchg
pop
dec
push
inc
jne
push
clc
sub
xchg
mov
clc
in
in
nop
add
add
mov
inc
test
xor
cli
nop
push
je
into
jb
fsubr
mov
mov
mov
push
sbb
sbb
mov
push
lea
add
or
jge
inc
aaa
clc
mov
dec
xlat
pushl
in
push
xor
loope
decb
pop
jl
push
stos
loopne
or
mov
add
jo
mov
xorb
sbb
sub
mov
sbb
mov
inc
test
mov
out
ljmp
or
jbe
aaa
sbb
test
loopne
mov
clc
push
and
popa
add
test
dec
jg
fs
cmp
call
sbb
jmp
xor
call
push
cld
and
push
cli
jb
add
mov
push
roll
das
adc
test
movsl
test
sub
sub
pushl
adc
xor
into
pusha
and
jbe
inc
loope
lret
pop
and
push
push
adc
adcb
fcomp
add
lret
dec
jo
ja
or
loope
lock
mov
cld
xor
pop
adc
in
int3
push
adc
test
or
adc
cmp
out
xchg
daa
xchg
mov
aad
and
sub
jne
and
xor
icebp
stc
adc
stc
xor
push
repz
popf
call
scas
cmpsb
outsb
clc
adc
lock
adc
xchg
sub
orl
mov
lea
outsb
sbb
jae
xor
jno
add
je
sbb
mov
mov
add
sbb
sub
mov
lea
scas
ljmp
testb
cld
stos
xlat
xchg
and
nop
mov
pop
xchg
pop
mov
mov
or
es
sub
xor
rolb
sub
xor
dec
mov
and
lret
cmp
xchg
cmp
pusha
pop
fsubrs
push
test
imull
cmp
std
push
hlt
inc
jne
mov
push
pop
xor
lea
sbbl
push
cmpsl
movsb
out
or
push
add
mov
and
ret
cmp
and
lcall
loop
bound
inc
test
jp
jb
gs
outsb
add
and
mov
pop
or
aam
mov
sub
mov
fs
mov
sub
mov
pop
add
xchg
call
popa
dec
jp
shr
filds
lea
test
dec
mov
mov
ja
mov
pop
dec
lret
loopne
adc
add
push
ljmp
test
mulb
mov
push
dec
cmp
mov
jo
jmp
cmc
add
ljmp
xor
stos
js
test
sub
sub
call
xor
lock
or
push
loop
or
add
add
add
dec
pop
je
pop
dec
xchg
je
add
mov
and
push
cli
incb
testb
clc
loope
mov
sbb
shrb
mov
js
add
rol
subl
rclb
pop
inc
xchg
xor
int
mov
psubb
out
testl
cmp
dec
arpl
cwtl
pop
push
ja
fcoms
jnp
std
ret
negb
or
pushf
cmpsb
mov
add
or
push
adc
add
or
lock
push
or
enter
sbb
sub
loope
mov
pop
cmpsb
test
sarb
dec
push
push
lods
inc
push
ret
int3
xor
jle
test
shlb
add
mov
dec
add
cli
shrb
pushf
ja
dec
test
pop
jo
in
and
jmp
jge
or
add
popa
fildl
cld
sub
shlb
mov
clc
xor
sti
js
push
scas
xor
mov
loopne
repnz
jns
aaa
clc
stos
inc
inc
iret
push
clc
pushf
in
or
mov
mov
pop
mov
or
sub
cmpsb
mov
mov
inc
add
push
cmp
push
push
cli
clc
fnstenv
add
enter
xchg
in
gs
cmp
xchg
push
and
mov
mov
push
pop
cmc
inc
inc
sbbb
and
pop
mov
shl
jecxz
ffree
cmp
push
lock
rcrb
aam
and
inc
sbb
xor
movsb
jne
or
sbb
pslld
cmp
in
xchg
loope
shrb
popl
ds
adc
push
cmp
xchg
test
xchg
mov
aaa
clc
out
inc
mov
push
ljmp
cmpsw
adcl
mov
jecxz
mov
icebp
inc
xchg
fs
adc
and
jmp
mov
mov
decb
cmp
test
sbb
rclb
rcrl
xor
dec
je
adc
mov
je
sbb
int
pop
fcoms
mov
les
pop
or
jbe
cmp
and
xchg
mov
jg
adc
push
cwtl
pop
mov
push
cmp
lret
inc
pop
pop
jp
add
jbe
dec
loope
jl
iret
push
and
push
or
xchg
out
fisubl
scas
or
add
je
aas
add
es
sbb
sbb
jb
pop
adc
outsl
sbb
cli
aaa
clc
adc
iret
gs
rcrb
outsb
push
clc
stos
cld
dec
jmp
aam
inc
popf
clc
jo
sbb
xchg
imul
pop
test
test
push
pop
dec
adc
fwait
addb
cld
mov
mov
rclb
mov
push
add
xor
sbb
insb
inc
add
rclb
mov
std
cmp
push
pop
rorb
lret
dec
add
sub
movsl
icebp
test
popa
push
fistpll
sbb
or
xor
shlb
call
jne
popf
ljmp
and
enter
clc
adc
jbe
std
cmp
mov
aaa
sbb
cld
add
pushf
or
cmpsb
arpl
outsl
lcall
cli
lea
or
jo
add
and
clc
mov
jo
pop
gs
sbb
or
push
sbb
xchg
inc
inc
ljmp
and
push
jno
hlt
jbe
cmp
or
xchg
rorl
pop
push
fcomp
lea
jb
mov
xchg
and
xor
loop
loope
pusha
and
fs
cld
punpckhdq
test
jle
out
add
xor
mov
xchg
pop
push
or
push
call
adc
xor
xchg
jno
mov
xor
adc
dec
push
mov
mov
je
call
add
add
or
in
jmp
in
adc
mov
lret
in
outsb
dec
inc
mov
es
adc
aam
xor
xchg
jle
dec
sub
loopne
clc
sbb
dec
loop
data16
insb
subb
xchg
mov
cmpsl
push
rcrl
int
add
xor
dec
or
jb
mov
push
aam
cmpsb
int3
popa
add
fmul
sbb
pop
lods
xor
insb
adc
test
stos
pop
or
mov
inc
lea
or
fs
call
cmp
push
or
and
popa
xchg
push
pusha
cs
in
push
jmp
data16
xchg
fnstcw
mov
sub
dec
enter
cld
pop
xor
push
fdivrs
sti
cmpb
sbb
pop
add
add
ds
imul
lret
dec
xchg
sahf
xchg
decl
xchg
addl
mov
dec
or
push
mov
push
test
adc
mov
jl
inc
mov
rolb
mov
ret
jle
ljmp
xchg
hlt
arpl
adc
adc
test
jo
bound
xor
aaa
stos
push
sti
mov
adc
cld
cmp
lret
sub
mov
xor
arpl
and
je
jmp
sub
es
cmp
cmpl
inc
lods
jmp
inc
jle
ss
adc
mov
outsl
sahf
jmp
push
pop
test
sbb
dec
adc
ja
adc
test
pop
lea
test
inc
lcall
dec
mov
xor
dec
mov
testl
inc
mov
jle
aaa
sbb
inc
mov
stos
ficomps
stos
add
cld
lcall
dec
sub
ss
sub
repnz
push
xchg
test
movsb
push
push
or
testb
add
test
or
jmp
add
test
push
push
inc
testb
addb
mov
add
test
rcr
mov
cwtl
cli
loop
es
popa
xor
mov
inc
inc
sub
loope
mov
cmp
fmuls
xor
loopne
out
call
push
add
pop
pusha
insb
or
movsl
xchg
adc
inc
inc
leave
add
mov
jo
xchg
outsb
mov
sbb
mov
mov
jbe
mov
mov
cli
adc
add
stos
rclb
lret
mov
es
sar
add
cmp
mov
xchg
adcb
jl
nop
aas
or
push
inc
out
gs
ret
push
xchg
add
dec
lea
std
mov
push
lock
rcrb
stc
xor
insl
std
mov
lcall
popa
sbbb
push
mov
rcrl
mov
fistl
rcrb
or
xor
loopne
pop
sub
test
stos
hlt
outsl
add
fcoms
mov
and
xor
xchg
lret
stos
addr16
xchg
xor
xor
jle
jp
push
sbb
sub
loop
dec
mov
nop
sbb
cmp
inc
call
jle
je
mov
push
sbb
mov
sbb
or
fidivrl
adc
bound
adc
mov
pop
icebp
pop
cmp
push
inc
int3
mov
arpl
outsl
addr16
adc
ljmp
add
adc
mov
and
sarb
add
xlat
enter
pop
ret
push
sub
mov
add
mov
add
or
and
mov
pop
push
jb
out
std
incl
in
mov
or
push
jae
pushf
cli
lea
lea
pop
mov
pop
mov
cs
lock
fmuls
adc
or
rolb
inc
mov
flds
pop
jo
ret
xor
mov
imul
push
jp
mov
ds
add
jb
push
push
or
inc
lods
xor
mov
es
out
push
bound
into
and
sub
or
sahf
add
insb
inc
push
pop
shll
push
add
dec
and
ficompl
sbb
mov
arpl
ror
sub
popa
xchg
mov
lds
jmp
in
pop
cmc
inc
cli
loopne
inc
add
push
dec
lods
test
aas
pop
mov
push
pusha
test
mov
out
mov
arpl
xor
lahf
je
push
lcall
mov
and
mov
lea
int3
add
xchg
mov
je
adc
rep
int
jmp
aas
cmp
jb
push
xor
add
ds
pop
pop
ret
xor
sbb
add
adc
mov
sbb
push
push
mov
fildl
inc
rol
add
imul
push
adc
ror
inc
int3
data16
sbb
fildl
dec
fprem
sub
xchg
int3
mov
push
adc
bound
mov
ss
pop
repz
lea
push
popa
sbbb
sbb
jle
mov
adc
mov
pop
fisubrs
cmpl
cmpsl
cmp
sbb
hlt
sbb
nop
add
and
cwtl
jg
mov
test
sar
mov
aad
push
jmp
adc
rorb
push
lea
scas
and
add
ret
fnstsw
cmp
sar
imulb
mov
cmp
test
pcmpgtw
mov
scas
xor
cmp
les
aam
xor
fidivs
xchg
movsb
or
ret
cmp
les
shll
fwait
js
test
push
clc
push
jb
mov
inc
inc
cwtl
mov
insb
cli
add
mov
push
push
push
push
mov
push
push
pop
data16
add
mov
inc
loopne
outsl
add
out
or
gs
mov
aam
pop
push
adcw
adc
es
roll
pavgb
inc
pop
insb
aam
cmp
and
fadds
std
enter
jne
inc
mov
and
repnz
adc
add
jne
pusha
cli
pop
xchg
adc
push
inc
mov
cmp
cmp
inc
jne
push
mov
xor
and
sbbl
cmp
ljmp
jbe
dec
push
inc
and
cld
jns
shr
mov
cmc
dec
xchg
stc
test
in
out
pushl
xchg
cmpb
movsb
mov
xchg
imull
sbb
inc
std
dec
push
jl
jge
mov
int
inc
lods
sbb
je
cmp
push
inc
xchg
pop
in
paddusb
call
pop
jg
sbb
pop
aam
sbb
xchg
adc
push
call
lcall
test
aas
fsubrp
dec
xchg
out
xchg
add
adcl
pusha
fidivrl
cmp
decl
pop
jle
cld
add
mov
jb
stos
rcl
movsl
dec
jecxz
sub
incl
cmpsl
dec
leave
adc
insl
push
lds
je
bound
imul
in
mov
cld
call
jg
stos
fs
mov
jns
fwait
lods
outsb
mov
mov
fisubrl
cmp
fwait
pop
daa
push
xchg
mov
sbbb
maxps
inc
sbb
adc
mov
mov
iret
repz
addb
add
pushl
dec
out
mov
repnz
add
xlat
stos
xor
cld
pushl
or
cli
pop
inc
lock
aam
scas
pushf
data16
jg
std
xchg
es
test
jno
xor
sbb
and
daa
mov
pushl
subl
outsb
pop
mov
sub
das
test
add
and
mov
push
mov
jg
and
stos
sti
inc
in
stc
add
cmp
ljmp
xchg
popf
cmp
mov
push
ror
or
in
pop
xchg
inc
pop
les
sbb
pushl
orl
inc
out
mov
fneni(8087
xor
or
and
ret
bound
jns
enter
aad
test
gs
or
cmpsb
mov
call
mov
decl
dec
add
push
popa
xor
sbb
adc
mov
push
sub
fisttps
inc
push
mov
mov
movsl
clc
jl
test
ja
cltd
idivb
lcall
inc
push
repnz
fisubrs
mov
sbb
push
pusha
xor
add
add
addr16
jge
sbb
stos
stos
out
jbe
lcall
sbbb
inc
cli
jge
xchg
cli
cli
adc
mov
leave
sti
jg
and
in
mov
aam
pop
mov
scas
ljmp
movsb
mul
jb
xchg
fwait
rol
jne
mov
loope
std
sbb
xchg
xchg
scas
dec
es
ljmp
ss
jle
aas
inc
cmc
div
add
xor
pop
push
movsl
movsl
hlt
shl
in
stc
icebp
icebp
rcl
decl
loop
jno
stos
fcomp
jae
xor
push
sub
mov
push
inc
and
gs
ret
ret
pop
xor
sbb
aaa
xchg
xchg
mov
das
lcall
incl
or
adc
sbb
loop
int
jmp
dec
daa
daa
imul
call
or
sbb
sub
je
sbb
cs
sbb
ljmp
mov
pop
out
pop
mov
push
divb
cmp
popa
jge
mov
push
sub
jnp
jecxz
movsl
jmp
ds
das
das
jno
test
mov
in
in
sub
and
pusha
jecxz
cld
pop
jns
mov
mov
pop
in
aam
push
lret
lret
inc
addr16
cli
cmp
dec
xchg
dec
dec
ficomps
pop
pop
call
mov
push
repnz
out
sub
stos
in
sti
sti
push
xchg
lds
xor
push
adc
decb
stc
stc
out
push
jg
cmp
push
push
lock
cmp
and
test
jecxz
push
push
repz
mov
inc
rolb
aas
xchg
xchg
lods
and
cmp
cmc
cmc
add
mov
mov
scas
fcmovu
jne
and
arpl
add
adc
sub
std
repz
mov
inc
pop
cli
or
adc
xor
mov
xchg
xchg
mov
cs
pop
cmp
cmpsl
cmpsl
repnz
jle
cmpb
inc
dec
fs
mov
sbb
sub
jae
xchg
shlb
sbb
dec
shll
incl
push
sub
jle
nop
nop
stos
or
inc
lret
out
sub
mov
cmp
inc
jmp
pop
pop
loop
or
sbb
shl
xor
push
je
cmp
decl
or
push
xchg
dec
dec
fisttpl
push
or
and
mov
ret
mov
lods
lods
or
out
les
cmpsb
cmp
xchg
movsb
shl
in
bnd
mov
out
mov
mov
inc
outsb
aaa
aaa
pop
fisubrl
mov
mov
std
decl
rorb
test
mov
push
push
cli
repz
hlt
pop
iret
ljmp
hlt
jp
pop
or
cmp
scas
jmp
mov
or
and
jb,pn
sbb
and
cmpsb
cmpsb
icebp
jae
mov
xchg
mov
call
call
fnstsw
je
ds
pop
and
mov
mov
lea
jo
nop
jl
ds
jno
mov
int3
data16
nop
dec
out
xchg
movsl
decl
push
add
add
push
adc
popa
mov
mov
scas
push
push
stc
imul
rcrl
sbb
lcall
loope
jmp
clc
adc
cwtl
cwtl
mov
adc
xor
imul
pop
mov
jmp
ret
xchg
cmpsl
sub
push
push
and
jg
mov
jmp
into
dec
stos
push
mov
sub
jp
and
pop
mov
sbb
jmp
mov
xor
push
ret
sub
sub
adc
mov
lret
test
push
cld
insl
mov
push
cmp
sahf
out
lea
jns
out
add
jns
out
inc
popf
inc
jns
out
xchg
jns
out
addr16
ljmp
xchg
pop
ret
jns
out
push
inc
add
jns
out
hlt
xor
xchg
sahf
out
sahf
jae
aas
or
gs
out
pop
sub
sahf
out
ss
cmp
sahf
imul
jns
out
cs
jns
out
dec
popa
into
jnp
out
sahf
jno,pt
cmc
push
jns
pusha
pop
enter
sahf
out
inc
sahf
out
sahf
aam
dec
imul
jns
out
push
vandnps
adc
xor
inc
mov
jns
out
mov
jns
out
shll
sahf
out
sahf
sbb
insl
dec
adc
jns
out
das
loope
int3
cmp
jns
out
repnz
out
sahf
out
xchg
mov
out
jg
jle
and
sahf
out
sub
cmp
sahf
out
sahf
loop
jbe
push
dec
jns
out
push
fisttpl
insb
in
jns
out
outsb
out
cmpsb
test
out
sahf
movsb
aaa
mov
inc
pop
jns
out
mov
fs
out
sahf
out
cli
pop
and
sahf
mov
sbb
mov
sahf
out
jb
icebp
push
out
sahf
out
jl
and
sahf
out
sahf
faddl
jns
out
stos
fadds
sahf
out
pop
stc
rclb
pop
daa
mov
iret
sarl
mov
cmp
repz
xchg
and
repz
js
clc
cmpb
cmp
fidivl
mov
ret
mov
adc
iret
repz
cld
cmp
ja
iret
repz
repnz
cmp
repz
addr16
iret
repz
xlat
stos
jbe
or
iret
repz
cli
pop
inc
lock
rep
aam
scas
pushf
iret
repz
movsb
jb
mov
xchg
cmp
repz
ss
test
xor
in
jno
repz
fdivs
adc
iret
repz
sbb
iret
repz
adc
cmp
daa
mov
or
cmp
sbb
mov
push
cmp
mov
iret
repz
jecxz
test
add
repz
and
mov
repz
repz
mov
cmp
dec
pop
iret
shr
stos
cmp
repz
inc
dec
xor
inc
stc
add
iret
repz
cmp
test
mov
cmp
xchg
popf
cmp
repz
repz
iret
repz
push
ror
or
cmp
repz
pop
xchg
inc
pop
repz
repz
repz
pop
sbb
orl
and
nop
mov
cmp
repz
out
mov
cmp
pop
or
loopne
cmp
repz
dec
push
and
repz
repz
bound
xchg
in
out
aaa
cmp
repz
aad
test
insb
push
hlt
ljmp
scas
or
repz
sbb
mov
repz
repz
iret
repz
mov
mov
iret
repz
dec
add
push
repz
repz
xor
repz
rcrl
iret
repz
imul
iret
repz
push
xchg
into
iret
repz
push
sub
mov
cmp
mov
cmp
repz
cltd
sub
cmp
push
mov
cmp
repz
repnz
cmp
repz
addr16
iret
repz
xlat
stos
jbe
or
iret
repz
cli
pop
inc
lock
rep
aam
scas
pushf
iret
repz
movsb
jb
mov
xchg
cmp
repz
ss
test
xor
in
jno
repz
fdivs
adc
iret
repz
sbb
iret
repz
adc
cmp
daa
mov
or
cmp
sbb
mov
push
cmp
mov
iret
repz
jecxz
test
add
repz
and
mov
repz
repz
mov
cmp
dec
pop
iret
shr
stos
cmp
repz
inc
dec
xor
inc
stc
add
iret
repz
cmp
test
mov
cmp
xchg
popf
cmp
repz
repz
iret
repz
push
ror
or
cmp
repz
pop
xchg
inc
pop
repz
repz
repz
pop
sbb
orl
and
nop
mov
cmp
repz
out
mov
cmp
pop
or
loopne
cmp
repz
dec
push
and
repz
repz
bound
xchg
in
out
aaa
cmp
repz
aad
test
insb
push
hlt
ljmp
scas
or
repz
sbb
mov
repz
repz
iret
repz
mov
mov
iret
repz
dec
add
push
repz
repz
xor
repz
rcrl
iret
repz
imul
iret
repz
push
xchg
into
iret
repz
push
sub
mov
cmp
mov
cmp
repz
cltd
sub
cmp
push
mov
push
jle
gs
sbb
movsb
ret
cmp
jmp
pop
xchg
cmp
inc
icebp
lods
cli
pop
stos
dec
jecxz
xchg
and
cli
push
lods
jbe
testb
fcomip
incl
dec
and
lds
lret
xlat
es
xorb
pop
dec
and
incl
push
cwtl
pop
inc
loope
das
jne
orl
imul
movb
pop
out
xchg
pushf
xchg
mov
push
pop
fcmovbe
mov
and
dec
loopne
sub
ret
hlt
mov
lcall
mov
dec
mov
mov
data16
cmp
sbb
cmp
call
push
jg
mov
ja
mov
andl
pop
popl
sbb
call
clc
mov
jae
and
add
jecxz
push
push
stos
sub
mov
add
incl
aaa
or
and
push
in
push
sbbb
sub
push
pop
repnz
imul
int
add
bound
les
push
popf
mov
mov
incb
imul
sub
cmp
out
stos
jg
lcall
lahf
push
mov
and
fldl
cmp
dec
out
inc
xchg
push
lea
jno
pop
add
pusha
out
sbb
cltd
xchg
jmp
int3
fstps
call
inc
mov
cmp
out
inc
fists
orl
xchg
push
adc
insb
dec
push
clc
pop
jb
std
push
in
fildll
pusha
cmp
sub
fldenv
cmpsb
and
pushl
cmp
addr16
push
out
mov
xchg
rcrb
fwait
xchg
sahf
add
dec
popa
fsubl
mov
sbb
icebp
call
sbb
loop
mov
in
and
inc
adc
pop
sbb
mov
lods
das
and
adc
test
jne
dec
out
cltd
fnstsw
testl
cmc
mov
pop
sti
jle
mov
jbe
and
fsubrl
mov
lcall
lret
lcall
adc
and
adc
test
jge
mov
xor
sub
decl
mov
repz
shl
sub
mov
cli
inc
jmp
mov
inc
mov
jge
fsubs
xor
fnstcw
rol
mov
mov
cmpsb
cmc
cmp
movsl
jp
sub
mov
es
lods
mov
in
js
or
push
jle
testb
ret
mov
pop
add
cmc
lahf
pop
cmpb
aad
test
enter
data16
adc
jge
cmpsb
outsb
fstpt
mov
decl
outsb
pop
sbb
in
lcall
out
outsb
gs
jmp
jle
mov
call
ss
ljmp
xor
xor
movsl
xchg
xor
dec
mov
aaa
cld
or
loopne
shlb
icebp
add
dec
inc
pushl
jg
push
push
pop
xchg
imulb
jbe
lea
mov
int3
stos
dec
push
in
add
sahf
shll
jecxz
push
sbb
sub
mov
popf
pop
ljmp
xchg
or
mov
sbb
pop
xchg
fcmovnbe
push
jmp
inc
adc
mov
adc
jmp
cmp
into
test
out
mov
leave
xor
jp
mov
pushf
rcr
pop
push
bnd
sbb
jns
aaa
mov
ljmp
outsl
adc
inc
fildl
mov
and
sub
mov
ret
mov
mov
cmp
or
add
hlt
pushl
or
mov
pushf
fs
rcll
xor
sarb
push
inc
push
add
xchg
lret
out
sahf
out
stos
xchg
push
negb
and
jns
out
dec
addr16
loope
out
sahf
out
mov
out
sahf
jmp
sub
sahf
out
push
imul
out
sahf
out
data16
sbbb
loopne
sbb
jns
out
pop
sbb
sahf
out
push
sub
add
movsl
repnz
pop
jns
out
sub
jns
out
pop
mov
sahf
xor
stos
push
push
jns
out
stc
cmp
jns
out
outsl
jmp
sahf
out
sahf
int3
ja
mov
fstpt
out
inc
jmp
jns
out
lods
dec
sti
push
sahf
out
sahf
push
daa
fs
cmp
out
mov
rcrb
out
imul
jns
inc
sbb
jns
out
test
lahf
out
sahf
out
lds
fcompl
arpl
adc
jns
out
jge
adc
out
sahf
out
in
shrb
out
sahf
cli
and
sbb
out
jns
out
mov
jns
out
movsb
in
sahf
out
sahf
fwait
call
out
mov
out
sahf
out
outsb
jnp
hlt
sahf
out
sahf
add
jns
out
fxch
aam
scas
out
sahf
out
xor
aaa
cmpsb
sahf
out
sahf
mov
dec
testl
jns
dec
push
out
sahf
out
mov
out
sahf
jae
pop
push
xor
jns
out
mov
mov
out
sahf
out
in
cmp
aas
sahf
out
sahf
jns
ljmp
jns
ds
jb
jns
out
mov
ficomps
nop
popa
jo
inc
jns
out
cmpsl
movsb
pop
imul
sahf
out
pop
add
insl
sahf
out
sahf
jbe
xlat
lret
inc
mov
pop
sbb
shlb
sahf
out
xchg
stc
pop
pushf
sahf
out
sahf
jp
andl
enter
jns
jns
jno
out
sahf
out
lods
cmp
sahf
out
sahf
xor
scas
mov
jns
std
insb
clc
shl
jns
out
stos
sub
sahf
out
sahf
jnp
xchg
out
sbb
repnz
out
sahf
out
push
push
sahf
out
sahf
loope
in
out
lahf
adc
out
mov
add
sahf
out
aam
sti
jmp
inc
sahf
inc
mov
jns
out
or
push
add
in
jo
cmp
cmp
cmpsb
push
jns,pn
out
addr16
xchg
sahf
out
dec
sbb
sahf
loopne
or
sahf
out
sbb
frstor
out
sahf
out
cmp
sahf
out
sahf
cld
icebp
faddl
out
and
xor
out
push
jecxz
mov
dec
mov
sub
jns
out
dec
shll
sahf
out
mov
jns
int3
inc
adc
out
adcb
sahf
out
arpl
jns
mov
outsb
out
call
fwait
or
jns
out
xchg
mov
out
sahf
rcr
cwtl
ficoml
jns
out
mov
add
out
sahf
out
pop
push
ljmp
inc
sbb
sahf
out
popa
or
cmp
out
sahf
out
in
fbstp
out
sahf
into
aaa
int
outsl
fstpt
out
repz
ret
out
sahf
out
dec
xchg
add
in
test
out
hlt
inc
pop
daa
stos
out
sahf
out
cli
jecxz
jbe
out
sahf
int3
add
sub
jns
mov
jns
out
inc
rorl
sahf
insl
push
mov
sahf
out
ret
mov
out
and
fistps
sahf
out
sahf
push
push
imul
dec
inc
fidivrs
out
sahf
out
pop
push
jmp
sahf
out
sahf
lds
sub
out
iret
jns
imul
add
sahf
out
sahf
mov
andl
jns
out
and
ds
out
sahf
out
push
push
cwtl
mov
inc
fld1
mov
enter
jns
inc
test
and
sahf
out
adc
test
sub
jns
out
or
fwait
shl
sahf
out
ja
xchg
mov
and
or
out
icebp
jne
jg
out
sahf
out
data16
inc
and
in
arpl
jns
mov
jns
out
xchg
mov
sahf
out
sahf
xchg
jmp
jns
out
dec
cmp
aam
out
sahf
out
mov
cmp
out
sahf
pop
jle
fdivrs
ret
jns
out
pop
rcl
and
out
pushf
cmp
pop
sahf
out
sahf
lcall
sahf
out
out
lahf
mov
out
sahf
out
movsl
mov
jns
nop
cmpsl
add
int
jns
out
dec
out
stos
xchg
shl
jns
out
sub
pop
mov
or
adc
jns
out
xlat
mov
jns
out
sbb
shl
sahf
out
sahf
adc
idiv
cmp
jns
push
jns
out
cmp
test
sahf
out
sahf
mov
lret
xor
jg
or
xor
movsl
cmp
repz
sti
jl
cmp
xor
inc
inc
inc
fsubrp
lret
push
jnp
xor
dec
xchg
or
ret
dec
or
mov
mov
pop
mov
ljmp
shll
xchg
push
aam
pop
int3
pop
gs
insb
jo
push
std
in
mov
push
std
jmp
fsubrs
or
in
add
shrb
add
scas
jg
sub
adc
inc
dec
addr16
xchg
repnz
into
push
mov
jae
lods
je
out
xor
call
inc
icebp
sbb
sub
mov
bound
dec
ljmp
push
ds
sarb
lcall
hlt
pop
jg
pushl
mov
adc
sub
pusha
out
sbb
jp
xchg
leave
pushf
out
mov
cmp
sub
mov
jmp
cmp
push
cltd
popa
pop
sub
mov
imul
daa
pop
add
es
sbb
mov
mov
push
mov
ds
rorb
sbb
daa
cmp
sub
into
fimuls
ss
xor
dec
mov
inc
pop
dec
or
inc
or
outsb
cs
sahf
mov
inc
daa
push
es
aam
shrd
cmpsb
out
and
daa
sbb
fdivp
sub
out
hlt
rorb
ss
rorb
cmp
sub
push
das
lods
aam
inc
mov
or
scas
outsb
sub
mov
and
push
rclb
or
cvtps2pi
or
outsb
outsb
sbb
push
mov
push
inc
xchg
jg
rorb
mov
sub
and
dec
sbb
fiadds
jbe
divb
mov
rclb
or
das
lods
je
ficoms
and
pop
out
lods
mov
dec
push
xchg
jne
pop
arpl
inc
sub
inc
mov
dec
sub
jle,pt
jne
pop
cmpsb
fidivrs
rclb
jle
mov
push
arpl
sub
dec
lods
je
push
ss
imulb
push
jne
pop
arpl
aam
addr16
das
or
inc
sbb
mov
dec
scas
inc
cmc
aam
inc
inc
cs
das
sub
arpl
dec
cmp
mov
sbb
mov
jne
pop
dec
inc
out
aam
inc
lods
testb
pop
inc
popf
mov
scas
pop
push
jle
cmc
aam
push
es
xor
out
dec
outsl
popf
pop
mov
pop
imul
cmp
scas
fimuls
push
div
push
inc
inc
dec
mov
push
inc
pop
mov
xchg
push
addr16
out
mov
jle,pn
push
rcrb
inc
cs
jmp
movsl
cmpsb
jbe
jmp
mov
jbe
cmc
aam
js
pop
pop
sbb
push
inc
add
repz
or
sbb
iret
repz
pop
push
dec
iret
repz
inc
je
bound
cmp
repz
cmpsb
lods
pushf
xchg
repz
repz
repz
cmc
iret
rcr
jnp
iret
repz
insl
push
pop
repz
repz
dec
and
xor
ds
sbb
lret
cmp
repz
fst
out
repz
repz
cli
xchg
cwtl
test
repz
mov
cmp
repz
loopne
fcmovbe
repz
repz
scas
movsl
mov
mov
mov
cmp
push
pop
push
repz
repz
push
adc
iret
add
cmp
lea
repz
fwait
nop
mov
repz
aad
ret
iret
repz
enter
in
cmp
repz
sub
adc
repz
repz
or
outsb
jae
repz
js
inc
pop
push
idivl
repz
loope
fcmovnbe
repz
repz
scas
movsb
mov
mov
mov
repz
push
pop
imul
iret
repz
pop
adc
iret
repz
add
cmp
repz
lcall
repz
aam
ret
cmp
leave
clc
repz
in
cmp
repz
sub
adc
repz
repz
or
repz
jns
inc
pop
push
add
repz
pop
sbb
es
repz
pop
push
dec
iret
repz
inc
jne
arpl
cmp
repz
cmpsl
lods
popf
xchg
repz
repz
repz
hlt
fdivrs
iret
repz
insb
addr16
pop
repz
repz
dec
and
xor
repz
aas
push
add
iret
repz
out
repz
repz
xchg
cltd
test
repz
mov
cmp
repz
sbb
xor
repz
repz
jb
repz
jg
push
inc
dec
sarb
repz
lret
jmp
repz
cmp
scas
mov
iret
repz
mov
cmp
repz
cwtl
rcr
leave
iret
repz
out
std
lock
cmp
jno
pop
push
repz
repz
dec
add
sbb
repz
adc
cmp
repz
ja
pop
push
repz
repz
dec
add
cmp
adc
cmp
es
mov
stos
mov
sahf
aad
iret
iret
repz
ret
sti
not
cmp
repz
int3
shl
repz
repz
cmc
mov
cmp
test
push
cmp
repz
sbb
xor
repz
repz
repz
jns
push
inc
dec
fidivrl
repz
ror
jecxz
cmp
repz
stc
mov
test
repz
movsl
xchg
iret
repz
adc
iret
repz
bound
iret
repz
jne
pop
dec
inc
popa
cmp
repz
jnp
push
pop
repz
repz
inc
or
iret
repz
push
cmp
cmp
repz
stos
cmpsb
test
lahf
xchg
ret
iret
repz
into
in
loopne
cli
mov
iret
repz
lods
mov
iret
repz
xchg
cmp
enter
cld
addr16
repz
jge
push
pop
repz
repz
inc
lar
sbb
and
cmp
repz
push
sbb
xor
and
imul
push
pop
dec
inc
fdivrl
repz
lret
call
repz
iret
mov
add
repz
adc
and
repz
repz
dec
inc
pop
iret
repz
push
insb
gs
nop
cmp
repz
orb
repz
scas
fcom
lret
cmp
ret
cld
cmc
out
out
cmp
repz
sub
pop
push
repz
repz
iret
repz
push
stos
cmp
repz
mov
cmp
repz
xchg
jecxz
icebp
iret
repz
clc
into
aad
jbe
iret
repz
fs
push
pop
repz
repz
dec
ds
sub
repz
and
out
iret
repz
hlt
std
ret
cmp
repz
scas
cmpsl
mov
mov
sbbl
cmp
pop
push
imul
jb
or
iret
repz
push
and
xor
fnstsw
repz
iret
stc
lock
repz
xchg
pushf
xchg
repz
mov
cmp
repz
test
repz
movsb
lods
mov
repz
mov
jl
iret
repz
outsb
addr16
push
repz
repz
inc
xor
es
repz
das
adc
add
xlat
cmp
repz
cli
repz
repz
lahf
xchg
iret
repz
test
cmp
repz
push
pop
arpl
cmp
repz
clts
sbb
adc
and
xor
xchg
mov
iret
rep
movsl
rcr
ror
cmp
leave
idiv
in
or
repz
sbb
cs
repz
repz
inc
dec
push
iret
repz
pop
outsw
je
mov
test
mov
iret
repz
sahf
jmp
cmp
repnz
xor
repz
and
adc
repz
push
jns
imul
cmp
bound
dec
inc
imul
cmpsb
adc
inc
sbbb
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
dec
xchg
add
add
sub
mov
test
push
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
cmp
add
dec
add
std
ds
adc
push
push
add
xor
dec
xor
dec
adc
addb
add
pusha
mov
sub
jl
add
cwtl
adc
filds
dec
jne
jo
je
bound
push
je
imul
popa
je
jbe
jmp
gs
popa
jo
outsl
push
push
and
insb
and
gs
push
ljmp
mov
sbb
je
outsb
push
fs
js
gs
imul
int3
mov
cmp
inc
insb
inc
jne
fldl
je
jb
ss
roll
inc
cld
fwait
neg
insb
outsl
les
xor
dec
imul
mov
dec
pop
popa
insb
inc
insb
arpl
cmp
scas
adc
sub
andb
mov
mov
outsb
imul
in
imul
cmp
addb
inc
outsl
jne
inc
cmp
lods
loopne
xor
push
imul
mov
lods
mov
insl
pop
dec
arpl
fisttpl
mov
insl
insl
insb
dec
xor
and
fs
loopne
or
jo
out
mov
cli
movsl
add
fistl
movsb
jns
les
push
and
popf
lret
mov
bound
jns
inc
jno
in
notl
mov
or
cmpl
ja
imul
xchg
mov
outsl
insb
data16
pop
push
je
nop
jo
je
stos
outsl
cmp
int
adc
insl
cmp
cs
arpl
sub
jnp
dec
ss
pop
jge
mov
and
jae
insl
mov
pop
inc
jnp
mov
js
push
push
inc
je
jnp
jbe
pcmpgtb
mov
or
cmc
cmp
sbb
fsubrs
adc
push
popf
loope
sbb
sub
xchg
inc
addr16
popa
cli
fs
pop
addr16
mov
jb
jae
adc
insl
ret
insb
xlat
sub
jne
push
sub
jb
fs
jns
sbb
mov
jbe
mov
dec
mov
dec
inc
xor
adc
fsubrl
movsb
imul
pop
inc
mov
cmp
dec
imul
and
mov
dec
add
push
and
sbb
dec
add
push
xchg
out
inc
jle
sbbb
adc
push
daa
push
test
fldl
push
add
add
mov
add
comiss
fldt
stc
stos
test
movsb
outsl
pop
add
add
pusha
mov
xor
jbe
sub
xor
lea
pusha
jb,pn
cmpsb
popa
imulb
out
mov
cs
xchg
sarb
pop
mov
fnstsw
sub
dec
rcrb
sbb
cmovg
mov
add
mov
jo
pop
and
add
xchg
and
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
