add
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
movzwl
movl
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
push
call
mov
push
push
push
pushl
call
mov
push
call
mov
push
mov
call
neg
sbb
inc
push
push
push
in
adc
xor
push
call
cmpl
je
cmpl
je
push
call
mov
xor
xor
call
mov
xor
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
test
jne
mov
not
mov
or
mov
lea
push
call
mov
pop
leave
ret
push
mov
sub
push
push
push
orl
mov
inc
mov
pushl
pushl
pushl
push
push
call
add
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pushl
call
mov
mov
add
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
call
call
jmp
push
call
mov
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
push
pushl
call
mov
pushl
call
cmpl
jb
mov
pop
pop
pop
leave
ret
push
imul
jb
je
arpl
call
pushl
call
push
mov
pushl
call
push
mov
sub
push
push
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
push
pushl
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
xor
mov
push
push
push
call
lea
push
push
push
call
add
push
push
push
push
push
pushl
call
pushl
call
push
push
pushl
pushl
pushl
call
push
push
push
push
push
call
pushl
pushl
pushl
call
mov
add
push
push
pushl
call
push
mov
pushl
call
mov
jmp
xor
push
push
push
push
pushl
call
pushl
mov
mov
pushl
pushl
push
push
call
push
pushl
pushl
push
call
lea
push
call
pop
push
lea
push
push
push
push
call
push
lea
push
push
call
pop
push
lea
push
push
call
jmp
call
push
mov
call
xor
pop
pop
leave
ret
push
push
push
mov
mov
mov
mov
push
add
pop
mov
mov
add
mov
mov
cmpb
je
movzbl
sub
push
call
add
cmp
jg
mov
mov
mov
movzbl
sub
inc
test
jne
jmp
mov
mov
call
dec
movzbl
sub
je
inc
call
jmp
call
mov
xor
push
push
mov
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
push
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
movl
movl
mov
movl
call
push
push
mov
call
push
mov
call
pop
pop
ret
push
mov
sub
push
pushl
call
pushl
mov
xor
movl
pushl
mov
movl
movl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
push
push
push
pushl
call
pushl
call
mov
push
pop
pop
ret
nop
incl
add
add
add
dec
fs
add
or
adc
add
add
add
adc
add
add
in
add
add
mov
add
je
add
add
add
add
add
add
add
add
movsl
jne
mov
inc
imul
add
imul
fsincos
sahf
xor
orl
xchg
in
push
cld
mov
pop
lea
mov
add
jne
jne
call
std
test
push
mov
clc
mov
maxps
add
mov
mov
add
incl
cmp
add
add
xor
and
loopne
add
adc
incl
inc
call
call
mov
push
cmp
loope
call
cld
add
add
jne
push
inc
aam
push
test
lea
verr
mov
test
les
enter
incl
adc
adc
mov
add
add
pop
add
pop
add
add
add
add
add
add
sbb
sbb
sbb
sbb
sbb
pop
add
xchg
fs
inc
add
add
outsb
inc
insb
gs
mov
call
je
dec
push
insl
add
js
add
add
add
push
jns
popa
mov
jb
outsl
push
insb
pop
gs
cs
jne
sub
add
xor
add
add
add
adc
lahf
lcall
repnz
jge
pushf
jecxz
arpl
xlat
lock
mov
stos
out
int3
cltd
mov
add
mov
pop
or
loop
imul
inc
pop
xor
sbb
xor
or
or
lret
mov
xor
xchg
daa
pop
ficoms
sub
js
xor
pop
xchg
mov
popf
cmp
xor
aam
adc
pop
pop
sti
jbe
pusha
dec
jecxz
sti
test
xor
das
je
xor
jae
cli
in
inc
push
dec
sub
stos
icebp
mov
in
add
sbb
lds
pop
push
je
call
into
mov
rorb
scas
ret
push
inc
daa
jle
repnz
lcall
pop
daa
scas
or
inc
push
sbb
jecxz
inc
push
pusha
pop
xor
outsl
iret
xchg
ds
sahf
inc
jne
mov
cmp
sbb
add
inc
jno
cmpsb
inc
das
cwtl
xchg
push
jb
lds
push
aad
outsl
pop
xor
mov
xor
pop
jmp
pop
xor
movsb
in
cmp
bound
mov
and
push
dec
and
test
dec
jb
arpl
cmpsl
xor
or
call
daa
dec
mov
mov
jns
shlb
icebp
sbb
in
jl
test
lcall
push
arpl
fsub
pop
fwait
and
jecxz
lea
scas
pusha
jl
push
sub
sbb
adc
inc
inc
stos
jbe
mov
es
test
mov
lods
jmp
or
mov
inc
mov
sub
xchg
daa
mov
push
push
pusha
and
fs
shr
js
dec
clc
sahf
into
xchg
jp
mov
mov
enter
mov
loope
pop
mov
lds
movsl
cmpsb
jbe
push
cmp
mov
std
lret
inc
ss
mov
into
cld
lret
cmpsb
dec
dec
rcl
dec
push
mov
cltd
in
xchg
mov
xorb
sub
imul
jae
mov
clc
jle
push
push
adc
subl
sbb
sub
push
cmp
sub
mov
sub
jecxz
cmp
aas
jle
divl
fsubrs
sbb
mov
cld
jmp
push
imul
pop
push
sbb
cmc
pop
mov
cld
fiaddl
jecxz
pop
pop
loopne
out
shl
je
negb
ljmpw
lea
sub
stos
jmp
dec
cmp
and
popa
fidivrl
int
mov
sar
inc
and
es
cmpsl
inc
mov
ja
and
mov
in
pop
xchg
sbb
jne
sahf
stos
jmp
mov
adc
mov
lds
xor
mov
cmpsl
jmp
inc
lods
fldenv
xor
xchg
jne
subb
jmp
xor
and
sbb
repz
jns
popa
mov
mov
or
mov
mov
subl
push
into
xchg
lret
sbb
xor
mov
sarl
mov
add
push
inc
push
das
xchg
or
sbb
aaa
push
push
mov
es
mov
fistpll
dec
inc
fwait
add
lret
and
lock
lds
xchg
mov
fldcw
cmpb
or
inc
icebp
jo
mov
cmc
adc
mov
mov
jg
dec
pop
in
xor
add
aam
pop
add
push
mov
insl
mov
sbb
mov
lods
lret
in
lods
das
xchg
loope
stos
dec
data16
fsts
cmc
popa
cwtl
or
dec
push
imul
inc
sub
sbb
aaa
movsb
and
leave
jl
in
jbe
lea
rcl
pop
cmpsl
jl
push
adc
dec
push
dec
jmp
movsb
pop
mov
or
outsl
sahf
xchg
pusha
or
ret
imul
dec
bound
dec
push
enter
pop
aam
pop
ja
cmp
mov
mov
jge
push
mov
in
int
or
push
push
adc
lods
xchg
push
cmp
xor
shrl
jno
inc
fidivrs
movsl
in
aad
sbbl
test
lahf
out
mov
mov
jno
xchg
loope
mov
orl
scas
test
cmp
jae
mov
or
lret
or
insl
jo
cmpsb
push
ret
jo
lods
pop
cltd
add
cmp
lds
stos
jmp
fadd
cltd
xchg
xor
xchg
gs
test
lock
loop
dec
adc
mov
push
adc
aas
pop
in
js
lock
add
cld
icebp
fisubrl
aaa
mov
and
enter
pop
inc
push
andb
cmp
fisubl
and
repz
shll
jg
fcoml
push
mov
pop
pop
popf
ss
mov
jecxz
mov
loope
nop
mov
movsl
cmpsl
insb
scas
jecxz
push
push
cmp
aam
ja
dec
and
icebp
push
adc
and
or
in
js
xchg
push
fsubs
sub
mov
test
inc
add
insl
sbb
sbb
push
mull
xor
mov
test
or
mov
nop
repz
repnz
sti
popf
cltd
cld
pop
test
push
mov
push
pop
loope
outsb
jnp
or
mov
pop
inc
mov
dec
add
xchg
xchg
dec
imul
add
negl
popl
xchg
addb
push
pop
cmp
xor
dec
imul
pusha
jle
into
leave
rcrl
jae
add
mov
mov
xlat
cmp
mov
jl
pop
sti
and
lods
jg
ja
gs
sbb
cwtl
mov
nop
scas
sbb
jbe
mov
fucom
jne
cmpxchg
mov
and
imul
xor
flds
aam
cmp
out
inc
sbb
add
add
sbb
not
inc
rcll
add
adc
pusha
movsl
mov
adcb
adc
inc
or
and
dec
cmpl
fbstp
lods
fildll
stos
or
or
dec
pop
aas
inc
jmp
adc
bound
shrb
roll
icebp
sbb
dec
subb
xchg
hlt
stos
loop
repz
xor
push
adc
imul
jns
jno
sbb
adc
mov
xchg
ljmp
mov
cmp
mov
fmulp
out
xor
mov
mov
push
stos
jne
push
cmp
shlb
loopne
mov
mov
je
xchg
outsl
push
mov
adc
les
mov
and
cmc
jne
fisttpl
pop
pop
outsb
lods
loop
sarb
sbb
inc
pop
shlb
mov
add
lahf
cmpsb
movsb
pop
in
loopne
jmp
and
cmpsb
pop
inc
cmp
cli
cmp
sbbb
ret
ja
dec
pop
lods
outsb
shlb
mov
xchg
clc
xlat
shl
pop
repz
rcll
icebp
jl
adc
inc
or
jae
xchg
es
fwait
sub
fwait
mov
jo
ja
dec
scas
jecxz
scas
cltd
aad
das
mov
adc
daa
mov
stc
sbb
mov
xchg
xchg
xchg
movsb
in
dec
roll
in
leave
push
repz
lds
in
outsb
jmp
dec
xor
or
fcmove
cmp
clc
sub
cmc
dec
jno
orl
inc
std
mov
inc
rcll
into
jmp
fists
out
aas
imul
out
rclb
in
jg
jl
adc
push
dec
jno
push
popf
imul
xor
mov
sbb
or
cmpsl
inc
loop
adc
stos
xlat
sti
sub
ja
loopne
loopne
mov
mov
fmull
sub
sub
gs
push
add
mov
les
cmp
push
ja
xchg
sub
sub
mov
in
xchg
mov
and
xor
sbb
adc
mov
and
cmpsl
jmp
lds
daa
push
cmp
lds
loop
rolb
ret
repz
pop
iret
setge
movsl
repz
fnstcw
mov
aad
ret
out
movsl
mov
fimull
repnz
fs
dec
scas
push
mov
pop
mov
push
andb
xor
xchg
sbb
les
stc
stos
jle
ds
sub
adc
rcrl
jg
sbb
repnz
and
popf
cmpl
out
test
and
dec
and
xlat
or
test
sub
dec
mov
ret
sti
adc
sub
cli
mov
pop
mov
lret
mov
ret
push
aad
mov
lcall
jae
pop
mov
jne
jno
mov
daa
xchg
ljmp
psllw
ret
or
dec
call
daa
or
pop
shrb
test
loopne
out
stos
pop
call
jg
rcrl
test
adc
cmp
push
add
mov
push
cmpsb
loop
sbb
push
jne
add
jp
mov
cld
ror
cli
fiadds
add
pop
pop
fbstp
imul
jmp
clc
jb
and
xor
fistps
jp
jne
scas
push
in
mov
jge
lea
int
sbb
xor
dec
rcrl
cmp
gs
jge
andl
out
daa
scas
fcoml
imul
int
cmp
int3
cmp
mov
lahf
cmpsl
inc
jbe
jno
rcrb
inc
mov
sbb
iret
cmp
xchg
out
pop
lock
out
mov
mov
sbb
cwtl
sub
sbb
movsl
cmp
les
clc
add
push
jl
push
call
sarb
dec
mov
mov
fisubrl
mov
and
adc
outsl
cmp
lock
and
xlat
psrlq
and
icebp
xlat
inc
mov
adc
imul
gs
xor
xchg
js
lret
and
call
add
shlb
outsb
push
popa
sbb
cmp
notb
mov
out
cmp
mov
pop
fmuls
xor
dec
mov
test
fcomi
and
cs
fcompl
divb
addl
mov
or
add
sub
mov
popa
std
inc
dec
adc
add
push
je
mov
pop
aam
bound
lret
mov
dec
pop
fwait
stos
cmpsl
and
lock
sbb
dec
out
pop
lret
pop
cmp
cmpl
pop
shll
scas
xor
adc
jecxz
pop
push
inc
cmp
cmp
sub
jl
jo
jmp
leave
inc
inc
sbb
mov
adcl
add
fstsw
sbb
fists
loope
std
mov
or
xchg
std
rorl
imul
out
dec
pop
push
xor
sub
inc
mov
sub
cmp
cmp
imul
xor
lods
pushl
cwtl
movsb
test
mov
xor
xlat
outsl
shll
es
mov
cwtl
push
out
adc
fnstcw
pop
dec
imul
inc
stos
fs
imul
inc
fisubs
mov
loopne
fs
jb
mov
sub
push
ret
fs
scas
xchg
in
push
push
pushf
das
dec
and
sub
enter
pop
out
sbb
arpl
and
movsl
lahf
jecxz
pop
ret
stos
lahf
or
mov
dec
or
cli
xor
lret
pop
push
cmpsl
or
repz
repnz
mov
push
push
cli
aas
and
jbe
test
sahf
pushf
roll
addr16
das
jne
movsb
pop
popa
mov
dec
adc
into
dec
jbe
nop
stc
mov
fdivs
sbb
or
jg
shr
imull
je
out
jp
stos
push
outsl
adc
jnp
es
xor
cwtl
mov
and
xchg
addr16
scas
xor
dec
imulw
pop
add
add
ffree
lods
mov
and
lret
sub
lcall
push
daa
inc
stc
lcall
adc
stos
mov
xor
icebp
add
shrb
pop
loopne
or
mov
mov
mov
inc
mov
inc
scas
inc
mov
add
int3
mov
pusha
jno
iret
mov
loopne
mov
xchg
dec
sbb
sub
popf
pop
mov
jmp
sbb
loop
or
sbb
repz
cmp
xchg
push
jb
adc
jo
xor
lret
stos
push
pop
push
lret
mov
jp
dec
insl
hlt
xchg
clc
ret
mov
or
and
sub
push
popf
jae
inc
pop
in
movsl
mov
std
mov
sbb
inc
sbb
jle
push
and
scas
pop
cs
in
adc
jns
mov
les
popf
imul
and
arpl
das
imul
aam
xchg
xchg
idivb
jge
jbe
imul
hlt
das
loope
cmpsl
aad
into
icebp
inc
sub
iret
mov
push
les
test
jl
push
cmp
icebp
cwtl
or
aam
outsl
cltd
mov
jle
cli
push
mov
int
aad
imul
int3
xchg
dec
or
repz
fwait
lods
lret
insb
mov
cmp
out
out
sbb
sahf
dec
lret
enter
mov
fcomip
adc
imul
pop
into
testb
pop
sub
xchg
sbb
pop
scas
pop
mov
sub
xchg
fsubs
andl
outsl
pop
addr16
push
adc
cli
sub
rclb
pusha
jl
arpl
mov
loopne
push
scas
repz
scas
test
pop
enter
fiaddl
xchg
jbe
sbb
xchg
add
stc
pop
and
imull
sarb
cltd
cmp
mov
pop
lods
inc
sbbb
lcall
push
adc
push
mov
loop
mov
test
inc
cmpsb
or
repnz
shrl
daa
add
pop
sub
int
fcomi
leave
hlt
and
iret
sub
into
sbb
loope
mov
fimull
cmpsl
dec
mov
movsb
int
xor
addr16
int
adc
ss
jle
or
ficoms
mov
rcrl
jmp
int3
jl
in
addb
cmc
out
xchg
aas
into
add
cltd
fs
or
aas
and
adc
xchg
sub
sub
sub
mov
and
data16
jne
lds
mov
inc
push
jbe
test
dec
jnp
outsb
add
test
jp
push
mov
dec
iret
mov
int
pop
rorl
shrl
mov
jge
mov
out
mov
rorb
cld
iret
insb
cmp
add
or
mov
fmul
adc
jnp
inc
add
aaa
xchg
icebp
stos
test
pop
imul
aaa
inc
sbb
call
push
scas
orl
and
ljmp
xor
push
repnz
add
inc
pop
hlt
out
pop
jae
inc
add
inc
outsb
cmp
dec
imul
sbb
inc
fsubp
sbb
test
jg
arpl
mov
bnd
xchg
hlt
adc
jbe
cld
int
aam
cwtl
jne
sub
jmp
push
xor
popa
stc
fisttpl
xlat
xchg
adc
es
xchg
or
cwtl
push
dec
xor
add
xor
xlat
pushf
cmp
ds
stos
hlt
and
je
ficompl
mov
iret
fstp
mov
loop
fstpl
sub
lahf
lahf
rolb
pop
aaa
popa
pop
div
int
test
dec
jecxz
fidivrl
jecxz
or
xchg
gs
mov
pop
lret
push
adc
xor
leave
jns
sub
jbe
pop
jecxz
leave
jnp
gs
xor
cmp
pop
int
and
and
je
mov
in
xchg
inc
dec
add
sub
icebp
in
mov
stc
xchg
cld
and
xchg
insl
cmpsb
sub
jbe
mov
shlb
mov
or
test
mov
sarl
xchg
inc
and
hlt
out
jnp
sbb
loope
mov
xchg
xor
cli
mov
and
push
push
adc
imul
rcrb
bound
cmp
in
or
insl
cmp
ljmp
sbb
dec
aaa
arpl
inc
punpckhwd
mov
insl
add
clc
xor
mov
xchg
sbb
xchg
fistpll
cli
and
push
push
adc
xchg
sbb
or
addl
pop
xchg
lret
scas
and
addb
iretw
jae
adc
xor
aas
lods
fsubrs
sub
jl
inc
pop
filds
cmp
or
mov
int
sti
mov
inc
push
repnz
xchg
fs
mov
aam
push
fisttps
sub
xorl
clc
push
mov
dec
in
jae
sub
sbb
mov
insb
sbb
push
push
add
stos
push
adc
lods
or
cmp
mov
and
fstl
std
sub
and
stos
dec
dec
mov
cwtl
into
into
push
add
or
into
jo
adc
fldl
xchg
xorl
sub
mov
inc
fcoml
aad
push
add
inc
aaa
rcrb
and
fsubrs
mov
xor
cld
jecxz
xchg
sub
les
sbb
dec
cmp
xor
xchg
cmc
pop
ss
test
fwait
jb
fnstenv
jp
dec
xlat
xor
ret
cmpl
inc
mov
lret
xchg
push
cmp
dec
sbb
and
sub
cmp
enter
lahf
outsb
cs
je
push
xor
push
adc
addl
mov
fildl
mov
js
mov
mov
sub
mov
sbb
xchg
mov
lods
cmpsb
jle
pop
nop
mov
sbb
sub
mov
add
rcll
pop
push
jle
mov
sub
mov
std
bound
sub
and
mov
xchg
adc
vpsubsw
addr16
lds
popf
add
iret
add
les
add
add
push
add
inc
add
movsb
add
rolb
add
add
add
add
add
add
add
adc
add
add
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
or
jne
or
scas
add
aas
js
filds
add
insb
add
add
add
add
add
add
add
add
and
gs
out
push
jae
inc
outsb
imul
push
sub
enter
or
pop
js
fimull
pop
in
push
decl
add
add
mov
adc
add
push
mov
push
push
dec
push
push
or
or
pop
jp
push
stos
lea
pop
test
adc
add
int3
sub
push
push
push
lock
loopne
add
clc
or
push
test
std
lea
push
and
decl
dec
decl
add
add
cmp
clc
lea
adc
inc
sub
mov
jmp
adc
adc
lock
push
in
push
fadd
add
adc
add
add
scas
add
gs
inc
inc
add
gs
imul
gs
gs
je
inc
inc
gs
dec
jbe
je
arpl
add
dec
dec
inc
imul
jge
add
outsb
add
push
addr16
add
jb
or
jg
add
add
add
pop
add
mov
popa
push
shlb
push
rol
cmp
push
pop
in
lock
lods
out
xchg
cwtl
outsl
aas
xor
cmp
mov
out
aas
xor
inc
cs
sbb
lcall
iret
adc
mov
shll
lds
push
clc
or
xchg
aas
imul
dec
jnp
xor
notl
imul
jecxz
and
mov
xor
jecxz
data16
mov
imul
push
scas
out
stos
push
cmp
mov
jbe
adc
jmp
lret
xchg
ror
xchg
in
lea
imulb
repz
movsb
and
inc
pop
cmp
mov
int3
xor
jae
ds
jbe
movsl
lock
jmp
jnp
icebp
pop
push
loope,pn
fwait
pop
jp
mov
loope
xchg
into
jb
add
pop
and
cld
cli
stos
mov
test
cmp
or
outsl
sbb
cs
in
cmp
call
scas
stc
test
in
inc
mull
in
out
mov
sbb
pushl
ret
dec
or
sti
add
mov
leave
push
out
mov
mov
test
push
cmp
mov
stos
outsl
sub
push
push
cmp
or
push
pop
cwtl
push
int3
cmp
push
daa
jo
xchg
imul
lret
pop
ret
mov
or
and
into
hlt
push
or
mov
push
fs
jle
gs
mov
mov
push
int3
and
ret
push
cmpsb
xchg
cltd
leave
xor
call
mov
xor
popa
pop
rclb
sub
mov
out
xchg
outsl
add
add
mov
mov
loop
and
arpl
jbe
leave
ljmp
addl
rcrb
lret
cs
mov
mov
sahf
push
jle
fimuls
cmp
pop
scas
push
clc
stos
mov
and
jne
lret
mov
jge
pop
mov
or
or
pop
jbe
or
cmpsb
in
pop
pop
and
ss
push
and
mov
ret
les
lea
int3
adcb
dec
das
enter
stos
pop
insl
jnp
push
dec
ror
jmp
out
fwait
adc
inc
in
std
cld
inc
mov
mov
cmp
add
sub
pusha
cmp
int3
cmp
lahf
repz
scas
jo
rsqrtps
test
jle
sub
cmp
imul
pop
stc
sub
jge
mov
lds
push
inc
pop
fisttpll
pmaxsw
jnp
mov
test
lock
cmp
pop
std
cmp
sbb
cmpsb
fwait
mov
mov
dec
adc
add
inc
inc
or
and
push
int
pop
int
test
movsl
movsb
loop
sbb
add
push
icebp
push
push
mov
into
in
aad
pop
mov
mov
imul
jge
jmp
dec
mov
sbb
cmc
or
or
inc
pop
adc
js
mov
cmp
pop
push
scas
dec
data16
push
adc
outsb
xor
pusha
xor
and
ret
stos
aad
sbb
adc
rcll
lea
push
cmp
adc
push
lret
xchg
adc
andl
lods
in
stc
jb
in
mov
and
cltd
push
mov
out
pop
xchg
or
push
push
sbb
in
orl
loop
jne
test
pop
jo
test
imul
mov
sbb
jle
add
sub
jg
sub
fistpll
inc
add
and
push
and
add
iret
jmp
push
adc
test
sbb
lea
cld
jns
sbb
scas
jae
bound
push
int3
pushf
dec
out
push
lcall
xor
adc
fiadds
mov
loopne
sub
mov
or
int3
pop
ds
push
sti
mov
push
pop
hlt
loopne
mov
lock
sub
in
sub
out
and
mov
in
js
repnz
sub
lcall
push
stos
jae
daa
clc
dec
stos
pop
adc
jge
shll
lret
sub
and
mov
inc
popa
in
add
xchg
into
lret
jp
jae
cs
scas
aas
cmpsb
ds
orb
mov
mov
pop
repnz
jle
mov
stc
cmpl
outsl
imul
clc
test
shll
mov
and
xor
sub
add
mov
jmp
sbb
aaa
add
and
popa
add
pushf
push
fisubs
inc
mov
mov
in
aam
mov
punpckhbw
adc
sbb
cmc
xor
sub
imul
sahf
mov
sbb
leave
pop
and
inc
add
aas
bound
sbb
cmp
mov
ret
sub
jns
hlt
ljmp
loopne
xchg
fildll
cmp
mov
out
xor
mov
xor
push
les
mov
mov
sbbb
rolb
jb
mov
jne
outsl
bound
outsl
inc
sub
xor
data16
mov
adc
or
rolb
mov
out
mov
fwait
or
repnz
jns
rcrb
and
test
xchg
lock
out
test
sub
mov
cmp
adc
fwait
cmp
inc
rol
inc
outsl
sbb
repz
jb
test
movsb
into
add
sti
je
and
ror
scas
and
and
mov
jmp
push
sahf
insb
push
inc
adc
lods
mov
sub
jle
mov
push
mov
fiaddl
mov
iret
hlt
pop
xor
mov
pushf
shlb
lret
lret
repnz
dec
pop
rorl
adc
cmp
mov
mov
sbb
push
push
sub
xchg
pop
jno
testl
arpl
pop
testb
adc
pop
sub
pusha
push
clc
daa
mov
and
into
adc
lret
out
jns
xchg
aas
popf
sub
out
and
push
filds
push
inc
push
inc
mov
xlat
mov
jno
xlat
xchg
sub
inc
cs
aad
jo
imull
dec
test
sub
mov
subb
lock
mov
sahf
sbb
dec
call
mov
adcl
jle
fldl
cwtl
fldenv
xor
mov
aas
notl
arpl
fisubrl
xorb
xlat
imul
push
movsb
mov
xchg
sub
outsb
cmp
jg
ss
mov
out
outsl
aaa
cmp
movsl
add
ror
push
xchg
stos
pop
mov
pop
outsb
push
leave
int
mov
pop
je
jno
lahf
iret
jecxz
into
push
lods
and
mov
jmp
and
sbb
adc
fwait
push
and
or
daa
cld
adc
push
fld
sub
mov
fwait
inc
iret
nop
roll
sbbl
in
popa
or
jbe
add
dec
pop
in
es
mov
push
adc
dec
nop
pop
arpl
inc
mov
cmp
les
jecxz
sbb
inc
xlat
and
jge
popa
adc
cld
rolb
ja
cmpsb
orb
and
sub
and
in
aas
test
cmp
fiadds
les
jbe
mov
lods
das
cmp
or
lods
mov
xor
aam
outsb
add
cli
cwtl
mov
aad
or
repz
pop
jmp
pop
mov
aam
movsl
scas
stos
ss
dec
adc
scas
xchg
and
sub
jmp
loope
sahf
insb
pop
adc
mov
sti
or
push
lcall
jle
mov
shlb
in
pop
mov
mov
xchg
dec
xchg
mov
loopne
clc
pop
inc
sbb
lea
fisubrl
bound
pop
inc
cmp
fsubrp
scas
stc
pop
sbb
lcall
xor
ret
jecxz
pusha
dec
bound
out
mov
pop
mov
sbb
jae
mov
jns
dec
or
mov
mov
sbb
out
fwait
inc
dec
fldz
loope
movb
das
mov
and
lcall
fistpll
cs
pop
xchg
add
mov
pusha
insl
pop
mov
adc
mov
scas
push
cmc
call
xor
movsl
movsl
or
into
test
pushf
adc
ds
cmpsb
leave
cltd
jo
push
ds
and
test
or
sbb
outsl
lds
pop
push
cltd
out
pop
out
jle
aas
movsb
cltd
cmp
push
sahf
and
divb
xorl
and
jle
notl
in
pop
pop
lds
in
sbb
std
push
pushl
jmp
stc
mov
pop
nop
fs
gs
adc
sbb
dec
mov
cmp
or
loope
ror
mov
dec
xor
dec
mov
pop
hlt
enter
or
or
mov
jne
popf
faddl
and
xchg
xchg
mov
xor
push
xor
xor
xchg
ss
test
scas
nop
sub
push
fsubs
ret
notl
push
cli
addb
aas
cmp
fst
out
sub
mov
fisubl
xor
orl
xchg
sbb
cmp
xor
xchg
in
adc
frstor
xchg
pop
nop
mov
ficomps
outsl
xor
mov
cwtl
rorb
jle
adc
movsb
decl
leave
aaa
push
test
and
jmp
ss
lahf
loop
adc
push
sbb
jb
mov
add
push
push
sbb
push
add
inc
gs
push
sub
call
mov
sbb
pop
pop
mov
jnp
and
ret
cmp
cli
mov
out
dec
jecxz
pop
jne
rorb
ret
rcrb
xor
pop
imul
jg
jnp
and
and
gs
aas
pop
push
fldl
cld
mov
in
jg
jno
add
mov
sbb
shlb
out
pop
mov
arpl
sbb
push
cmpsb
icebp
cltd
jb
or
call
ror
popa
mov
xchg
adc
cmp
jle
push
aad
aas
jbe
stc
fwait
arpl
bound
repz
into
pop
cmp
aas
lods
push
jne
clc
repz
int3
jp
scas
lods
push
adc
out
mov
sub
jle
out
int
imul
loopne
xor
cmp
jbe
lahf
into
pop
js
into
or
cmp
push
test
or
clc
sahf
gs
mov
adcl
inc
mov
mov
in
dec
scas
cmpsl
add
repz
out
sbb
insl
shll
add
push
jbe
inc
mov
mov
add
mov
inc
jae
inc
dec
mov
add
mov
cmc
ficoms
ret
test
inc
js
out
jmp
xlat
outsb
inc
add
lods
sahf
mov
out
cwtl
ret
sbb
mov
clc
mov
xchg
pop
vandnpd
movsb
cld
jo
call
jl
mov
lods
test
dec
cmp
xor
xchg
in
cmp
mov
sub
push
xchg
push
jp
sub
fcomi
mov
cwtl
movsb
mov
mov
mov
inc
cld
adc
xlat
imul
xchg
inc
aam
pop
scas
jb
jge
mov
cmp
cmc
in
or
fdivrs
lds
out
scas
pop
and
sub
mov
and
mov
dec
pushf
ret
xor
jl
je
dec
add
aam
dec
in
rcr
sub
out
xchg
sub
dec
sahf
push
pop
pop
lock
xchg
mov
jnp
push
sbb
add
push
gs
test
jg
inc
cltd
pop
xchg
pop
jle
adc
outsb
out
stos
push
jbe
cltd
sbb
sub
pop
and
andl
fstpt
inc
scas
sahf
sti
push
pop
test
fs
hlt
iret
mov
test
xlat
test
cwtl
xor
adc
gs
and
jecxz
add
sbb
and
jle
jg
or
lea
pusha
test
repz
pushl
adc
imul
int
imul
jge
pop
cmpsb
or
add
inc
pop
xor
scas
ror
into
in
inc
jmp
adc
das
add
stos
mov
push
in
and
xchg
mov
xor
fnsave
rorl
movsl
xor
ljmp
das
dec
xchg
jbe
and
ss
cmp
push
imul
iret
stc
cmp
incb
int
mov
dec
imul
ljmp
or
imul
gs
mov
test
cmc
push
xchg
fldl
cld
push
hlt
ret
sbb
and
out
ret
dec
movsl
mov
fwait
xchg
jo
lods
push
mov
mov
int
inc
lds
xchg
sub
es
jge
rcrl
dec
cmp
iret
ja
and
cmp
push
leave
out
mov
inc
daa
test
sti
icebp
xor
cltd
mov
push
dec
push
in
xorb
add
icebp
pop
pop
xchg
lcall
mov
mov
mov
lock
adc
stc
popf
sub
jp
jle
out
ror
ret
push
lret
mov
adc
lret
push
fsubl
in
adc
jle
xor
pop
cltd
add
jmp
or
inc
fimull
inc
push
push
ret
and
inc
cmpsb
movsl
lds
cmp
stos
jmp
stos
and
lods
jnp
jne
and
sbb
jo
call
pushf
nop
jmp
cmp
outsl
ja
popa
pop
test
sbb
jecxz
pop
in
jnp
inc
cmp
pop
imulb
jbe
xchg
mov
int
adc
mov
nop
ret
fwait
mov
lret
push
jno
out
mov
call
fwait
into
add
xchg
jle
bound
mov
in
push
push
mov
punpckhbw
pop
aaa
bound
jl
insb
mov
mov
nop
or
push
nop
mov
cmpsb
shlb
and
cmp
fisttps
jne
mov
sub
pop
inc
mov
clc
push
or
bound
jle
cli
mov
inc
push
scas
out
ret
xchg
insl
minps
xor
das
xchg
pop
cmpsb
icebp
jnp
dec
adcl
pop
bswap
repz
adc
xor
add
das
mov
lock
jl
aad
adc
cmp
stc
ret
and
cwtl
movsl
cmc
inc
addr16
adc
lods
cwtl
js
ja
mov
jg
cmp
or
jb,pn
mov
mov
insl
repnz
cli
or
mov
sbb
push
cmp
scas
adc
sbb
mov
ficomps
cmp
ret
stos
push
xchg
or
test
inc
mov
leave
imul
cld
loop
or
mov
dec
sub
mov
lret
negl
mov
addr16
cld
fcomp
jge
jbe
ja
loop
out
fucom
inc
mov
push
vpand
outsb
xchg
insb
sti
popa
addr16
jnp
jp
pop
repnz
subb
sbbl
test
xor
xor
xlat
cmc
jb
rorb
ret
in
mov
xor
inc
iret
out
cld
gs
mov
xchg
jp
mov
in
and
lods
mov
mov
cmp
push
ja
lahf
pop
sbb
insb
repz
push
nop
fistpl
add
imul
dec
pop
pop
orb
inc
pop
ljmp
adc
gs
loop
shll
lods
xor
mov
pop
cs
sti
pusha
cmp
pusha
movsl
ds
shlb
cmp
or
leave
movd
sbb
movsl
fmul
xchg
mov
xor
xor
pop
in
or
adc
cmp
pop
lock
inc
jbe
fucomi
cmp
loop
mov
test
sub
add
aad
fldl2t
add
cli
decb
outsl
aam
push
lret
push
xor
mov
mov
and
push
xchg
insb
mov
dec
rclb
flds
jmp
push
adc
es
pop
popa
hlt
dec
imul
in
call
mov
std
data16
pop
jae
sub
fwait
xchg
dec
mov
xor
dec
xor
outsb
mov
xchg
mov
inc
mov
and
loop
push
xchg
jecxz
ret
into
insb
leave
mov
cmpsl
and
test
lcall
test
loopne
es
push
lahf
sbb
imull
push
icebp
and
inc
jge
int3
out
and
popa
sub
clc
sahf
aaa
mov
hlt
and
lods
add
push
ds
into
or
fists
mov
inc
cmpsb
push
imul
sub
pop
or
push
fidivs
mov
xor
push
and
fisubrs
sbb
hlt
test
clc
sbb
or
push
adc
in
jmp
loopne
rcll
leave
test
filds
sub
push
js
icebp
insl
lds
mov
rcr
imul
mov
or
mov
jg
loopne
pop
les
mov
aam
jmp
gs
lahf
pop
inc
adcb
js
mov
jns
cmp
xchg
push
pop
icebp
pusha
mov
xorb
pop
popa
das
test
jnp
xchg
cmpl
outsb
std
mov
out
push
or
jne
dec
and
out
js
movsb
cmp
scas
add
and
in
jb
jmp
shrb
je
cltd
lahf
mov
lods
repnz
mov
ljmp
out
push
sub
in
aaa
inc
or
shl
add
push
sbb
dec
repz
fisttpl
cmc
inc
add
dec
cld
jecxz
xchg
iret
adc
xor
mov
movsb
jae
je
mov
push
in
mov
ffree
outsl
iret
adc
in
mov
out
lods
fwait
lock
imul
cmp
sub
fnstenv
shr
cmpsb
or
out
lahf
mov
inc
gs
mov
pop
push
rclb
aaa
orl
lock
out
sbb
sub
xor
loop
imul
pop
out
pop
clc
jbe
mov
sarl
xor
mov
mov
cmpl
xlat
add
call
ja
out
shrl
xchg
bound
sbb
iret
push
cmc
daa
fwait
add
aas
add
add
incl
add
add
outsl
add
jg
add
add
add
pop
add
add
add
add
add
add
add
mov
add
addb
das
incl
inc
stos
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
leave
mov
or
add
add
add
xchg
popl
lds
adc
add
add
add
add
add
jb
add
add
add
add
add
add
add
add
les
and
add
je
jb
outsl
pop
dec
xor
pusha
insb
addr16
enter
jecxz
out
popa
fcmove
dec
insl
add
xchg
inc
clc
inc
mov
add
dec
add
push
call
std
std
incl
jnp
add
push
pushf
or
xor
mov
pop
pop
add
push
add
push
call
jge
roll
nop
add
ljmp
add
add
test
ljmp
cmp
test
test
lret
pushl
add
or
call
jge
mov
push
push
add
cmpsl
clc
mov
lea
add
push
fdivr
push
int
loopne
add
adc
sbb
add
add
add
sbb
add
sbb
sbb
sbb
sbb
inc
add
imul
insb
add
add
add
add
add
add
repnz
gs
imul
inc
dec
js
push
xor
add
add
add
je
add
popa
insb
inc
dec
xor
add
add
xchg
add
je
add
add
add
add
and
add
mov
aad
adc
jge
push
cwtl
push
fsubrs
pop
imul
mov
iret
pop
mov
repnz
xchg
sbb
xchg
popf
push
movsl
pop
cs
pop
enter
mov
add
sahf
mov
out
pop
cltd
cs
xchg
dec
and
pop
lods
outsb
mov
arpl
add
mov
aas
scas
push
mov
jg
dec
and
and
cmp
ret
scas
mov
push
es
sti
je
sbb
imul
stos
inc
addl
ds
icebp
dec
imul
sub
leave
mov
fs
imul
mov
lods
or
shrb
aaa
lret
jns
adc
lods
test
mov
adc
jnp
data16
push
lods
push
cmpsl
dec
add
sub
shrb
jecxz
xchg
mov
fnstcw
and
lods
mov
cmp
pop
mov
add
outsl
add
xor
xchg
outsl
sbb
dec
aaa
push
shl
mov
xor
dec
xchg
jno
cli
and
out
fs
push
mov
jnp
dec
sbb
in
int
jmp
daa
fwait
aaa
dec
cmc
inc
loope
sbb
push
roll
mov
addr16
sub
jmp
addr16
fildll
dec
or
jecxz
mov
fisttps
mov
lret
push
test
lods
pop
gs
jnp
imulb
test
cmpb
in
add
popf
js
idivl
xor
cmp
push
push
je
sti
pop
xchg
in
push
inc
jle
mov
icebp
filds
loope
inc
adc
add
mov
loope
jmp
pop
pop
out
cmpsl
or
xor
or
push
cli
andl
or
jmp
mov
mov
int3
xchg
jl
inc
pop
sub
testb
cwtl
adc
je
mov
je
and
lret
push
pop
and
adc
push
dec
cmp
ja
xchg
jl
push
mov
int3
jb
mov
fst
jge
dec
dec
xchg
xchg
xor
aaa
adcb
and
mov
movsl
pop
pop
dec
shrl
add
and
adc
test
sbb
popf
icebp
flds
cmovnp
jmp
xor
jbe
dec
pop
in
leave
test
xorb
lret
adc
dec
xchg
xchg
in
cmp
das
inc
pop
data16
lds
push
in
mov
add
scas
fimuls
inc
call
sahf
inc
into
loopne
mov
mov
jns
fcoms
jl
mov
jle
int3
mov
xor
jp
sub
dec
jmp
jle
les
pop
shll
flds
jecxz
imul
pop
xchg
outsb
leave
or
jmp
inc
dec
xor
xchg
inc
add
shlb
dec
adc
mov
mov
dec
inc
nop
mov
jecxz
mov
xchg
mov
dec
dec
mov
fs
mov
sub
ja
cld
enter
int3
dec
jo
das
inc
nop
push
ljmp
in
out
push
xor
jmp
iret
mov
es
fmuls
fcomp
cmpsb
jb
pop
mov
or
loop
sbb
adc
in
cmp
rolb
pop
jbe
mov
pop
icebp
int3
sub
ds
into
rcl
sub
xor
jb
nop
lcall
fcomp
push
inc
and
cmp
add
xor
fs
adc
cli
push
movsb
xchg
je
jnp
loope
jg
imul
aas
mov
mov
and
pop
ret
stos
cmp
test
push
jns
add
rcll
jbe
push
sub
push
cmp
push
adc
mov
sahf
sub
sbb
enter
addr16
stos
xchg
iret
outsb
xor
sbb
jns
cmp
lock
add
cmp
dec
cmp
cmp
jl
add
push
not
add
mov
xchg
iret
cmpsb
sub
outsb
pop
jno
jmp
js
stos
xchg
out
aaa
in
out
js
call
arpl
mov
xor
xor
and
in
mov
xchg
jp
mov
test
mov
sbb
repz
lea
movsb
stos
aad
jne
mov
ret
push
cli
in
icebp
xlat
jns
xchg
jmp
notb
mov
test
jp
mov
repz
lods
mov
xchg
jp
mov
lahf
push
push
jne
push
inc
mov
inc
mov
sahf
or
insl
lock
jns
dec
sahf
cmpsb
ficomps
sub
xor
js
pop
test
mov
cmc
andl
mov
xor
and
dec
repnz
std
push
sbb
cvtpi2ps
scas
movsb
mov
test
fsubr
in
call
stos
xchg
mov
add
repz
test
fstpl
push
push
dec
xchg
mov
fisttps
adc
mov
int3
inc
daa
sbb
lahf
lods
adc
addr16
mov
push
adc
push
fcomi
fnsave
ret
xchg
jle
xchg
imul
dec
pushf
insb
pop
adc
mov
add
xor
test
xor
aad
in
into
into
int3
sub
jae
in
inc
push
push
frstor
mov
in
push
aad
sbb
push
mull
lahf
inc
jp
cmp
sbb
cmp
je
cwtl
jl
and
cmp
ja
imul
addr16
add
mov
out
mov
or
add
std
cltd
push
imul
sahf
adc
daa
pop
sub
aas
rcrb
dec
in
sub
add
std
aad
pop
push
push
test
das
pop
mov
movsb
or
add
or
rclb
test
scas
push
push
add
adc
ja
inc
repnz
cmp
shrb
push
daa
aam
adc
into
cmp
cs
nop
mov
cmp
scas
into
stos
loope
cmpsb
xor
mov
pop
sarl
fwait
mov
sbb
ja
or
push
test
adc
ret
mov
popa
out
orl
sbb
mov
inc
push
push
mov
dec
dec
add
mov
in
push
sar
push
in
mov
ds
push
mov
lahf
mov
add
xorl
sbb
adc
push
in
faddl
mov
xchg
cmp
sbb
out
dec
sbb
inc
loop
dec
mov
in
mov
imul
subb
or
imul
add
bound
addr16
lret
shll
or
sarb
sahf
gs
loope
mov
or
pop
and
xchg
and
rcr
mov
mov
test
mov
inc
push
xchg
mov
in
push
add
insb
inc
inc
sub
gs
mov
into
add
sub
fs
lcall
pop
mov
and
fnsave
xor
test
mov
jo
jmp
into
sub
popa
aad
out
add
jo
push
js
cmpsb
dec
jecxz
scas
mov
push
loope
fbstp
icebp
inc
mov
pop
jo
push
sbb
dec
cmp
xchg
loopne
stc
pop
mov
push
fnsetpm(287
lcall
push
push
pop
sbb
mul
repz
push
add
aaa
cs
sarb
insb
jecxz
jmp
orb
cmp
and
xchg
add
push
mov
ljmp
and
dec
push
js
mov
add
mov
mov
nop
adc
add
or
adc
test
or
push
cld
in
out
movsb
call
add
icebp
push
push
add
int3
push
lcall
lds
and
or
mov
negb
mov
out
push
cmp
jmp
sahf
and
mov
lahf
stos
adc
cmp
jo
in
xor
out
inc
jbe
xor
lods
inc
push
push
cmp
mov
push
xchg
lock
push
daa
pop
shrl
pop
adc
cmpb
fldln2
pop
pop
or
shrl
icebp
cld
xor
notl
mov
sub
cwtl
or
push
dec
add
push
sub
testl
filds
shrl
mulb
dec
pushf
test
or
push
xor
inc
pusha
add
xchg
shll
xlat
cmpsb
into
push
and
lock
cmp
add
or
addr16
cwtl
push
push
test
popa
shlb
jo
test
sub
pop
push
mov
sbb
jns
cmp
inc
shrl
imul
ss
jecxz
popf
je
xor
push
cmp
ss
std
pusha
lahf
iret
cli
imul
pop
rcll
ror
adcb
enter
or
movsl
dec
imul
movsl
loope
mov
lea
and
push
add
jl
add
aaa
ss
jno
jle
es
in
adc
insl
jno
adc
and
shl
int3
jl
mov
xchg
dec
add
das
dec
pop
inc
nop
mov
les
in
repz
cmp
push
subl
cmc
adc
adc
clc
dec
sub
mov
pop
push
fs
mov
add
test
mov
ret
outsl
outsl
les
ficoml
mov
aad
pop
pop
int
dec
gs
in
lods
sbb
lret
jecxz
popf
push
sarb
mov
rcr
fnstenv
test
pop
pop
pop
sub
adcl
lds
xchg
jp
lock
test
pop
inc
mov
or
daa
or
in
std
test
xchg
mov
pop
adc
cmp
iret
push
push
jp
push
daa
fidivl
popf
movsl
fidivs
ror
pop
int
inc
lods
out
adc
repz
sbb
aam
imul
stos
or
mov
stc
lcall
add
repz
test
or
arpl
adc
repnz
jle
sbb
shrl
xchg
cmc
popa
dec
test
mov
xorl
and
sahf
into
jbe
adc
lcall
mov
aaa
pop
lcall
mov
faddl
push
mov
das
xchg
and
test
fldcw
in
fildll
inc
xor
sti
mov
push
es
into
rcrb
adc
ret
pop
push
popa
cwtl
sub
outsl
mov
cwtl
xor
stc
mov
xor
ficoms
xor
mov
cmp
mov
pop
movsl
sbb
add
sbb
sbb
sti
pop
jl
xchg
test
movsl
mov
fildl
push
aad
mov
cmp
repz
fisttps
pop
repz
dec
sbb
scas
inc
jmp
imul
mov
inc
pop
pop
pop
test
mov
mov
scas
int
addl
pusha
and
aas
daa
movsl
inc
cwtl
popf
inc
test
sub
leave
mov
insb
add
inc
loop
inc
roll
adc
fistps
insb
fsts
push
add
roll
xor
bound
cmp
xchg
mov
mov
or
pop
jns
fnsave
inc
jo
repnz
scas
pop
inc
push
shl
jne
sbb
sub
addr16
fs
jecxz
andb
fnstsw
pop
jmp
sbb
and
sbb
jecxz
out
sbb
roll
ds
xchg
sarl
add
sbb
mov
inc
and
addr16
mov
dec
data16
sbb
dec
rcll
repz
or
mov
cmp
dec
cld
insb
fisttpll
sub
shrl
cli
lahf
cs
push
xchg
in
sub
jo
xlat
pop
in
adc
movl
sti
decb
loope
out
lods
or
faddl
das
mov
lret
mov
aas
mov
and
mov
mov
sub
push
push
cmp
scas
int3
in
hlt
or
cmp
mov
add
adc
sub
push
leave
out
or
int3
cmp
ret
or
lods
mov
xor
pop
test
cmc
or
push
mov
orb
movsb
cmp
in
frstor
std
mov
js
ss
aas
outsl
leave
pop
adcb
sub
mov
imul
push
enter
dec
mov
mov
sub
pusha
movsl
push
sbb
xchg
std
lret
jmp
add
into
jnp
push
shrl
mov
sbb
cmovns
jge
ss
sub
lock
mov
xor
adcl
test
sbb
fadds
daa
shlb
xchg
lds
inc
cmpsb
push
inc
mov
stc
sbb
or
xchg
ficomps
cmpsl
or
xor
push
add
call
pusha
flds
je
popa
rclb
outsl
push
cmc
aad
push
xchg
outsb
dec
out
in
shrb
pop
cmp
push
dec
hlt
mov
push
addr16
pop
push
mov
push
push
mov
or
mov
mov
jmp
mov
inc
adc
in
jle
cmovle
lods
repz
xlat
mov
sbb
jle
lea
loop
sbb
repnz
out
iret
xchg
dec
inc
aad
xor
pop
push
adc
dec
pop
lcall
mov
int3
js
and
xchg
dec
imul
mov
mov
sbb
add
repnz
lds
jns
scas
mov
cmp
sub
scas
test
gs
jo
sub
lds
insl
pusha
sbb
push
das
pop
rclb
iret
sbbb
das
gs
lahf
jne
dec
and
add
mov
arpl
jbe
sub
pop
in
xchg
iret
aad
pop
jne
mov
inc
bound
push
lods
or
or
outsb
hlt
std
sbb
and
sti
xchg
cmp
pop
pop
jnp
xor
add
jb
call
sub
mov
lea
insb
in
int
movsl
jae
scas
mov
pop
or
out
xchg
xor
in
call
out
sti
xchg
and
jg
pushf
gs
mov
pushf
add
mov
cltd
add
outsl
inc
push
xchg
or
inc
mov
enter
jl
js
gs
test
inc
loop
xlat
ret
icebp
in
les
test
lret
mov
insb
inc
adc
mov
enter
mov
sbb
xor
imul
dec
xchg
imul
ja
into
dec
pop
mov
data16
sub
fsubrl
enter
jmp
push
pop
mov
fdivl
jbe
jge
push
add
popf
lea
les
jb
add
cmp
add
add
xchg
mov
pop
jp
sbb
movsl
or
jne
in
xchg
aas
out
mov
aas
gs
mov
add
jmp
push
sbb
xchg
xor
test
sub
imul
imul
and
xchg
es
or
add
pusha
enter
outsb
outsl
in
lret
xor
pop
inc
or
push
fs
adc
adc
dec
sbb
xor
ss
inc
stos
cmp
sbb
fdivl
in
sti
fwait
xor
jle
mov
add
pushf
pop
dec
lret
mov
sbb
mov
mov
and
adc
dec
fsubrl
ja
xchg
adc
xlat
cmpsb
add
lods
push
nop
je,pt
mov
cmp
in
cmp
or
mov
mov
sbb
scas
adc
lods
imul
sub
jle
sarl
cmpl
mov
inc
shl
test
ja
mov
mov
mov
lcall
sbb
xchg
and
idivl
sahf
and
pop
pop
and
sbb
pop
sbbb
dec
pop
adc
xchg
adc
lahf
push
pop
test
cmpsl
mov
imul
inc
nop
cmpsb
in
dec
lods
cwtl
push
push
jp
sti
sub
into
out
add
lcall
sub
mov
jbe
cli
xor
inc
lds
dec
movsl
outsl
and
adcb
repz
sub
dec
je
sbb
jg
xchg
sub
inc
fs
es
or
js
mov
jge
mov
int
loope
sbb
and
xchg
sahf
mov
xchg
push
repnz
pop
xor
mov
sbb
and
dec
repnz
rcr
dec
shl
sbb
pop
inc
push
adc
add
mov
out
gs
ret
inc
lcall
pop
sbb
adc
push
rorb
jbe
pop
add
in
xchg
stos
pop
ljmp
or
in
fimuls
pop
gs
sub
shlb
push
popa
decl
adc
mov
mov
lock
dec
es
mov
aam
shrb
inc
ret
jo
dec
in
cmp
popa
aam
lcall
pop
loop
sub
aaa
cld
mov
jae
jae
xchg
add
sub
jge
jnp
sub
sbbb
add
sbb
das
in
es
jp
or
xchg
sahf
push
scas
sahf
ja,pt
add
mov
shlb
in
popf
cmp
pop
sbb
dec
mov
xchg
jecxz
int3
into
push
mov
and
jp
test
jp
jl
mov
stos
dec
insb
clc
xor
in
jle
sbb
xchg
ficomps
into
test
and
pop
lea
bound
pop
in
mov
adc
aam
adc
mov
inc
fdivs
negb
fidivrs
push
mov
adc
add
ss
es
aad
test
mov
jge
fs
lret
xchg
int3
iret
sub
or
popa
test
pop
jp
add
lahf
pop
xlat
das
sbb
cmp
test
push
dec
xor
xchg
add
je
pop
outsl
add
mov
mov
cmp
arpl
rclb
ret
movsb
dec
adcb
push
adcl
xchg
push
xor
popf
cmp
popf
push
enter
out
adc
cli
sbb
shl
out
xchg
xchg
std
add
sub
xchg
sbb
sbb
popf
cmpsb
nop
ret
pop
cs
lods
clc
into
and
cltd
daa
jecxz
xchg
pop
jo
push
sub
push
jge
out
add
xor
inc
ja
or
repnz
sub
inc
cmp
add
add
add
add
mov
add
add
add
in
add
add
add
add
addb
add
add
add
addb
add
add
add
add
add
cmc
add
add
add
add
add
add
add
add
rolb
add
jo
jo
aam
jo
int3
int3
int3
int3
int3
int3
int3
int3
int3
jae
jb
jo
add
add
add
add
add
push
add
jae
add
add
add
add
add
add
add
add
mov
add
push
add
add
sbb
add
ret
add
add
test
add
add
add
arpl
jb
add
add
outsl
jb
inc
movl
add
sahf
fimull
enter
mov
adc
mov
xor
ljmp
addl
call
test
add
push
clc
stos
mov
enter
pop
lea
sarl
out
in
add
push
inc
push
test
mov
gs
mov
add
add
mov
decb
adc
es
push
ljmp
incl
jmp
je
push
cmp
mov
adc
cld
push
adc
mov
lea
add
loopne
adc
incl
loopne
clc
jne
jmp
mov
push
jne
add
adc
cmp
add
add
add
add
call
jae
add
add
add
add
add
add
outsl
imul
in
dec
add
inc
push
inc
gs
arpl
insb
inc
gs
jno
inc
add
add
push
add
inc
dec
insb
fs
add
gs
jne
popa
inc
outsl
gs
push
imul
push
imul
add
add
dec
adc
add
add
addl
add
push
rep
dec
mov
int3
sbb
mov
mov
inc
outsb
and
lret
dec
sub
jp
push
push
sbb
shlb
inc
lcall
or
add
stos
js
loop
xchg
pop
cltd
test
test
push
scas
cmc
inc
call
mov
mov
cmpsb
cmpxchg
in
negb
roll
mov
jbe
cmp
jb
outsl
adc
cwtl
push
push
push
xor
je
mov
mov
addr16
pop
outsb
mov
sub
out
aas
filds
mov
xchg
insl
pop
xchg
pop
cmp
ljmp
mov
mov
xchg
and
xor
mov
insb
inc
ljmp
clc
pop
add
xor
js
dec
sbb
aad
xor
mov
mov
sub
in
push
cmp
sbb
adc
outsb
ss
jecxz
ds
stos
imul
xchg
sarb
ss
pusha
aam
hlt
add
xor
fstpl
lods
push
sub
cmp
xor
cltd
sysexit
inc
rorl
cmp
call
sub
rcrl
sub
inc
sbb
pop
daa
cli
adcb
add
fs
cmp
int3
shrb
dec
out
scas
dec
das
scas
sbbl
cmc
imul
xor
push
xlat
adcb
test
sub
and
cs
andl
adc
pop
dec
cmp
pop
test
loop
rcll
fs
test
repz
mov
leave
cld
roll
sbb
pop
notb
and
sbbl
lahf
xor
clc
cmp
dec
pop
bound
out
push
xchg
add
gs
ret
sub
mov
aam
xlat
idiv
pop
mov
ljmp
out
stos
pop
daa
dec
mov
jns
ret
data16
jns
jge
cmp
fcompl
andl
push
add
mov
int3
mov
jmp
jmp
xchg
pusha
loopne
inc
dec
out
lods
pop
xor
dec
push
out
data16
adc
cmp
ret
int
sub
stc
push
inc
pushf
ja
jp
stc
pop
push
clc
leave
add
mov
scas
xchg
mov
push
and
xchg
cld
jle
pop
insl
cmpsl
xor
push
inc
std
ret
pop
frstor
push
inc
push
lods
jns
mov
inc
daa
lcall
mov
dec
out
and
adc
pop
xor
lcall
pop
cli
pop
test
lock
jecxz
lahf
shll
int
mov
push
dec
cmp
jb
cld
xchg
xlat
xchg
mov
sahf
xor
xchg
xchg
push
sub
insl
mov
push
sbb
outsl
outsl
xchg
movsb
sbb
or
popa
nop
aas
jae
inc
icebp
rcll
xchg
push
sbb
cmpsl
ret
inc
add
sbb
or
fisttpll
add
loope
lcall
mov
xor
pushf
icebp
inc
or
jns
adc
imul
in
aaa
fwait
in
mov
xor
inc
cld
sbb
or
mov
pop
ret
mov
mov
mull
les
mov
movsl
gs
adc
cltd
cs
sub
push
out
cltd
jge
add
cwtl
add
xchg
add
outsb
mov
pop
icebp
call
cmp
mov
and
shlb
pusha
movsl
cwtl
adc
jb
in
pop
test
lock
fwait
mov
stos
shrb
pusha
jbe
and
movsb
xchg
in
dec
fcompl
xchg
push
popf
inc
cwtl
sub
test
push
mov
pop
es
and
pop
xor
das
push
sub
inc
iret
push
sbb
sub
ret
mov
sbb
jmp
xchg
in
aas
mov
in
insl
sub
filds
mov
add
jle
push
xchg
shl
enter
add
or
push
pop
or
loop
outsl
rcr
pop
mov
jecxz
dec
mov
shl
pop
add
dec
jno
leave
cli
push
add
jns
pop
paddusw
popa
or
lret
push
mov
sub
stos
in
and
aam
dec
bound
aas
jmp
out
dec
sub
cs
or
push
fisubrs
or
inc
pop
jne
les
in
sarl
inc
jmp
scas
xchg
or
sub
and
pop
sub
cmp
cmp
sbb
je
out
push
pop
stos
jge
push
mov
lds
sbb
fidivl
sti
mov
sbb
cwtl
and
int
in
xor
das
imul
mov
enter
cld
sar
add
mov
xchg
inc
add
xor
fisttps
inc
cmp
sub
jae
xchg
xor
push
subl
jno
mov
clc
inc
jge
cwtl
test
jl
jns
sub
mov
icebp
xchg
and
rep
fistps
fisubl
push
xchg
jbe
fs
out
inc
sbb
mov
xchg
cmp
xchg
dec
lods
leave
hlt
pop
loope
pushf
repnz
outsl
fs
xchg
dec
push
sub
inc
or
test
dec
out
xchg
cwtl
sbb
xlat
mov
inc
mov
hlt
aad
stos
pushf
inc
dec
cld
jecxz
pop
cmc
mov
rcll
jle
jb
cmp
andb
mov
stc
popa
fs
leave
cli
mov
or
lods
enter
mov
xchg
mov
jg
addr16
ffreep
int
pxor
push
mov
clc
outsl
mov
shr
jge
test
lods
out
icebp
mov
sarb
and
push
out
lods
mov
and
fwait
clc
rolb
jge
add
cmp
xor
push
shrl
jno
sarl
stos
and
subb
jmp
les
pop
fwait
xor
cld
jns
jecxz
cmp
fcmovu
je
push
leave
pop
out
adc
xor
mov
xchg
mov
ss
lock
ljmp
mov
mov
sub
imul
and
and
nop
inc
xchg
or
in
mov
push
dec
push
jp
mov
fmuls
mov
insl
out
push
dec
mov
push
mov
lods
xor
mov
popf
add
cmpsb
popf
icebp
lahf
inc
jp
test
mov
push
lcall
in
out
fcoml
outsl
repz
scas
arpl
or
pop
mov
sub
or
inc
inc
dec
mov
mov
add
cmp
ror
pop
outsl
pusha
and
test
sub
lret
inc
ds
xchg
popl
fwait
mov
lods
rcll
jmp
sbb
adc
and
cmp
sub
push
and
inc
sti
ret
or
enter
pop
add
cmp
movsl
stc
mov
sub
jle
inc
or
and
dec
jbe
daa
in
jbe
decb
jnp
and
sbb
subb
out
jae
scas
test
sub
sub
mov
popf
jno
scas
lea
mov
push
push
enter
cmpsl
dec
out
add
repz
fucomp
insl
adc
out
jns
stos
mov
push
mov
inc
xchg
cmp
mov
jle
push
sbb
fstps
addr16
mov
xor
negl
in
push
inc
fdiv
in
jle
ja
mov
adc
fldcw
sbb
xor
pop
push
hlt
xchg
xchg
push
inc
lret
fidivl
inc
adc
fcom
sbb
lcall
in
enter
pop
jnp
adc
ret
push
in
mov
pushf
jne
je
sbbl
jae
std
repnz
ss
mov
lcall
mov
cmp
icebp
sbb
scas
mov
or
xor
test
int
dec
adc
aaa
ja
xchg
mov
pop
sahf
pop
faddl
ret
fsub
add
in
dec
xchg
mov
in
scas
jns
pop
push
outsl
sbb
pushf
call
push
fldcw
pop
mov
fcmovnu
andps
inc
inc
repz
test
test
les
push
int
jmp
arpl
xchg
cmp
add
test
jns
push
xlat
and
or
mov
cmp
adcb
sub
ds
movsl
lds
sahf
rcrl
les
sub
in
out
xor
iret
mov
out
cmpsb
mov
ja
sti
mov
xchg
aad
cmpsb
incb
jecxz
out
sbb
sub
mov
fcmovnb
sub
push
mov
mov
out
fldenv
and
pop
mov
lahf
add
jo
adc
in
inc
icebp
sub
inc
out
pop
outsb
lea
aam
inc
pop
iret
jno
aaa
sbb
fdivrl
fistl
clc
sub
outsl
sbb
xor
inc
or
lahf
xchg
sbb
and
pop
fcompl
and
loop
stc
pop
enter
xor
add
insb
add
push
sub
or
popf
lahf
aaa
hlt
xor
xchg
stos
cmp
add
insb
test
cmc
mov
orl
lcall
mov
pop
xchg
cmp
push
nopl
sub
adc
dec
cmp
xchg
ret
popa
lea
or
aas
lds
out
subl
mov
push
dec
dec
inc
xor
jbe
push
mov
shll
in
xor
rep
leave
mov
jecxz
mov
out
dec
mov
jnp
leave
arpl
int
xor
repnz
cmpsl
dec
sub
inc
sub
inc
bound
cmp
outsb
and
sahf
test
xchg
xor
fwait
add
inc
dec
fs
call
xlat
scas
fidivl
add
popf
adc
xlat
mov
mov
add
xor
mov
fs
sahf
ds
aaa
and
lcall
inc
hlt
loope
icebp
sub
add
add
dec
jmp
jne
xchg
dec
adc
push
cmp
lret
mov
push
or
repnz
aam
mov
cltd
xlat
xor
rorl
hlt
out
lret
je
dec
fisttps
insl
in
lret
cvttps2pi
out
mov
inc
daa
mov
mov
pop
cmp
aad
andb
mov
xor
push
pop
sbb
pop
cld
xchg
cs
pop
stos
rcll
add
shr
pop
loope
cli
add
ror
mov
lahf
fcoml
bound
mov
mov
push
repnz
in
mov
adc
xor
ss
push
mov
addb
jge
jae
mov
xchg
jb
xor
nop
push
push
jne
sarl
xor
fcmovnbe
scas
push
cmc
jge
mov
clc
icebp
scas
push
dec
movl
enter
mov
push
repnz
lods
mov
cli
push
fstpl
in
or
pop
popf
jns
ret
mov
jmp
enter
lret
push
jmp
cli
arpl
in
cmpsl
inc
jae
mov
int
stc
mov
push
test
xor
rclb
adc
cmp
push
dec
pusha
mov
sub
outsb
sub
push
arpl
jmp
push
shr
sub
test
stc
mov
das
xor
fcmovne
outsb
cli
out
addr16
js
scas
lods
add
mov
in
adc
xorl
and
cmp
xchg
hlt
xor
add
test
rcrl
dec
dec
nop
mov
sub
fisubs
ret
sub
xor
cwtl
pop
icebp
sti
mov
call
pop
ds
sar
xchg
aad
and
movsb
nop
xlat
iret
int
jmp
ffreep
and
aad
sahf
iret
jg
pop
pop
xchg
stos
and
inc
or
iret
ss
inc
mov
mov
add
or
fmuls
xchg
pusha
sbb
dec
out
sar
push
pop
es
mov
add
repz
call
xchg
pushf
mov
or
cmp
push
clc
mov
ffree
inc
or
or
pop
mov
gs
in
jecxz
mov
iret
jle
jl
sub
push
stos
fstl
cmp
or
in
lret
pop
sbb
add
push
adc
fwait
mov
mov
pop
mov
xor
jae
test
push
inc
movsl
mov
sub
dec
adc
test
or
push
lods
jns
adc
mov
pop
jg
push
push
je
stos
push
loop
cmp
stos
inc
repz
or
mov
push
popa
mov
fwait
pushf
cmc
in
pop
pop
xchg
xchg
filds
shrl
jns
add
fsts
sbb
inc
leave
js
adc
mov
adc
xorl
ret
push
adc
mov
mov
ret
inc
gs
movl
ret
shlb
dec
sarb
test
inc
ljmp
in
or
out
out
jo
xchg
lcall
out
les
leave
xchg
and
adc
push
mov
mov
jp
mov
movsl
and
nop
push
mov
inc
movsb
dec
insb
int
and
das
xchg
les
cld
fsubs
add
call
leave
jnp
imul
mov
dec
js
mov
jne
out
fidivrs
aas
dec
leave
rcrl
int
sti
les
xchg
adc
push
jle
mov
out
jo
sti
out
sti
jns
and
stc
cmc
push
lahf
loop
lret
fisubs
dec
cltd
int3
xchg
fwait
movsl
popf
xor
mov
xchg
push
bound
mov
adcl
loopne
sti
add
std
test
pop
sub
mov
jg
xchg
dec
jmp
ds
lods
in
jp
inc
into
insl
pop
jle,pt
cmc
cmpsb
pinsrw
cli
loopne
sbb
fcomp
enter
clc
xlat
mov
fistpl
mov
adc
imul
push
ret
cmp
outsl
test
pop
mov
call
adc
xor
or
nop
pop
fcomps
in
cmpsl
lods
into
mov
xor
cltd
cld
dec
rcrb
insl
pop
aad
icebp
es
or
lds
push
xchg
mov
dec
je
xor
icebp
das
in
gs
lret
sti
cmc
les
push
mov
or
xchg
pusha
sbb
push
mov
pop
sub
cwtl
rolb
scas
mov
mov
addr16
test
xchg
gs
push
jbe
fdiv
sbbb
pop
nop
pusha
int3
lret
sub
add
mov
aam
call
lods
fildl
scas
mov
data16
clc
and
aam
xor
push
call
cmp
test
mov
ljmp
xchg
inc
sbb
aaa
mov
int3
mov
mov
push
jge
jecxz
mov
pop
jle
or
sub
insl
push
js
push
out
ret
mov
fs
push
lcall
test
mov
call
inc
xchg
mov
mov
or
add
mov
jl
iret
stc
mov
iret
or
test
pop
data16
mov
jl
adc
sub
inc
bound
loopne,pt
sub
add
cwtl
fcompl
sub
bound
fdivp
stos
adc
bound
sbb
mov
sbb
arpl
in
rcll
adc
data16
dec
or
pushf
adc
imul
add
pop
stos
pop
mov
mov
call
shrl
push
and
xor
jmp
dec
insl
dec
inc
dec
mov
shrl
push
and
popf
addr16
sub
pop
adc
fimuls
pop
jge
insb
add
xchg
mov
jle
int
rclb
add
cmp
mov
add
data16
jp
insb
xor
mov
mov
or
jo
jmp
hlt
jg
inc
and
into
mov
out
or
call
sbb
or
scas
and
push
and
je
adc
les
push
dec
dec
sti
mov
int3
in
ret
lret
xchg
push
pop
cmp
xchg
or
sub
add
adc
jecxz
clc
inc
adc
lods
test
lea
mov
adc
adcl
ret
ljmp
js
mov
push
je
mov
pop
popa
push
mov
sub
dec
sub
outsl
cmpsl
mov
add
cmpl
cs
mov
push
xchg
in
cwtl
jne
jne
mov
push
mov
out
and
mov
aam
push
adc
mov
rorl
test
mov
lods
aaa
jge
xchg
lods
imul
lods
mov
stos
aas
ja
stos
sbb
cs
addr16
adc
in
pop
xor
jae
mov
fidivrs
lods
mov
xorl
push
dec
cli
lret
push
adc
aam
xorl
fwait
mov
mov
nop
xchg
test
or
out
lock
add
pop
pop
push
sub
outsl
jae
shlb
jbe
jo
adc
or
lret
inc
dec
push
push
in
in
xor
out
mov
fidivl
lret
fsubs
rcrb
rorb
push
cmp
push
out
cmpl
inc
jl
cld
into
push
movsb
or
push
adc
cmp
or
adcb
push
testl
xlat
mov
xchg
pop
inc
and
xlat
mov
dec
mov
xchg
movsl
rcl
scas
lret
sub
jns
push
xor
push
arpl
aad
pop
mov
dec
xor
mov
stc
mov
xor
push
or
xor
out
iret
lcall
ret
loope
mov
outsl
push
mov
sbb
ss
gs
js
shlb
sub
fabs
xchg
push
lds
jns
int3
sarl
out
adc
js
and
inc
mov
inc
leave
adc
mov
lahf
test
jmp
add
dec
mov
test
ljmp
inc
sub
out
popf
jmp
call
sbb
sbb
cmc
in
into
rcrl
add
lods
xor
out
inc
lods
sbb
ror
sub
dec
dec
pop
cmp
jmp
mov
out
xchg
xor
add
add
inc
xchg
fmuls
rorl
insl
in
jp
pop
repz
add
mov
cs
mov
push
inc
push
or
mov
in
andb
add
add
test
add
add
add
add
cmp
add
add
dec
adc
add
add
addb
add
add
add
add
add
add
add
add
clc
leave
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
add
add
and
and
les
stc
add
add
add
add
add
add
add
inc
lret
add
add
or
rolb
cs
add
add
add
lcall
sub
clc
xor
add
popaw
popa
jb
push
pop
aam
jb
fs
inc
and
push
ja
mov
inc
stc
add
add
xor
sub
inc
pushl
push
ret
cmp
stos
adc
test
test
jmp
test
lea
push
xor
in
jno
scas
lock
add
adc
ret
push
cld
repz
movl
push
push
add
xor
rolb
das
test
adc
incl
lea
jl
push
std
std
sar
xor
cld
shlb
push
in
add
repz
adc
test
add
pushl
rorb
jo
adc
push
clc
push
add
add
push
adc
out
add
add
add
scas
add
add
pop
fadds
push
cmp
cmp
out
pop
sbb
add
inc
outsb
insb
outsb
movsl
jne
adc
inc
popa
inc
inc
jo
movsl
popa
mov
inc
outsb
outsl
je
inc
imul
jo
push
insb
imul
gs
insb
xor
gs
gs
jae
jae
loopne
insb
inc
insb
inc
dec
add
add
or
add
add
add
add
add
add
cli
loop
add
add
add
add
add
add
add
les
jge
out
dec
and
mov
mov
fs
push
test
mov
xchg
lock
inc
cld
sub
mov
inc
xor
mov
ret
mov
lods
repz
cmp
lods
rolb
out
mov
sarl
lock
jb
scas
or
jae
add
inc
dec
cmp
sbb
fs
imul
jl
les
repz
jno
icebp
mov
xchg
jl
xlat
ds
mov
push
pop
jp
outsb
sbb
movsb
mov
adc
xchg
add
ja
jne
push
shl
leave
adc
loop
fst
mov
popf
enter
sub
fdivrs
dec
cmp
aad
xlat
xor
push
in
movsl
and
negb
mov
or
aas
inc
xlat
rcrb
dec
push
fstpt
jmp
mov
mov
fldcw
loop
mov
xchg
lcall
cmp
or
nop
sub
scas
gs
or
jae
cmp
adc
add
push
and
sub
pop
lods
fsubrp
stos
dec
jp
cld
xor
lret
mov
adc
daa
fsubp
mov
add
test
sbb
sub
lods
test
out
mov
cmp
sub
add
sbb
dec
mov
sbb
adc
jnp
jns
mov
insb
cmp
pop
cld
mov
mov
sarb
mov
lds
jge
lods
mov
sar
mov
movsb
shrl
test
mov
cmp
push
sbb
out
out
lahf
loop
and
cmpsb
enter
fisttpl
xlat
cltd
mov
inc
mov
sub
push
scas
push
inc
fcoml
out
sbb
sub
int3
icebp
scas
and
aas
lcall
mov
or
int3
test
add
xchg
popa
adc
stos
xchg
and
sti
pop
mov
cltd
sbb
inc
mov
sub
stc
inc
ret
pop
sub
out
in
jae
xor
jnp
nop
cli
negb
dec
aaa
scas
fldcw
imul
cltd
enter
rorb
cmc
xchg
push
sub
daa
inc
pop
push
fidivrs
scas
jge
mov
dec
fdivs
sbb
cmp
inc
addr16
mov
pop
loop
fcoml
mov
loop
jmp
jnp
push
push
inc
rol
enter
jg
mov
mov
cmp
cmp
call
jnp
sbb
lret
pop
sahf
inc
gs
pop
sub
push
xor
stc
or
rcrl
je
mov
ljmp
popa
fsubrl
mov
in
aas
mov
mov
rorl
fnstsw
inc
pop
dec
mov
add
loope
int3
cli
es
fs
fld
cli
dec
pop
mov
jp
or
mov
aaa
push
cld
pop
stos
mov
jne
bound
sub
arpl
mov
jmp
jbe
pop
into
mov
xchg
ret
jns
gs
add
hlt
adc
xchg
mov
xchg
lock
mov
dec
add
test
test
inc
fcoms
repnz
test
jle
sbb
aaa
mov
stos
out
xlat
mov
scas
imul
xchg
decl
in
cs
sub
and
call
lods
dec
add
imul
xor
adc
cmp
icebp
clc
push
inc
pop
dec
adc
add
call
cs
outsl
inc
pop
ret
push
ja
in
jb
mov
or
enter
cs
clc
mov
or
pop
aas
mov
rorb
mov
xchg
xchg
jbe
add
cld
mov
xchg
icebp
mov
add
outsb
push
test
stos
adc
adc
mov
pushf
pop
out
repz
sbb
out
xor
adc
pop
loope
test
sub
lcall
fstpt
jbe
mov
cmp
popa
cltd
inc
push
js
cmc
mov
fnstcw
xchg
out
fdivrl
test
xor
outsb
add
or
out
push
xchg
insb
lcall
jo
out
les
xlat
jae
aaa
andl
jbe
push
mov
or
int
dec
in
sbb
and
hlt
jne
cli
add
pop
xor
stos
xor
push
mov
sahf
addr16
push
push
push
sbb
movsl
rcr
jg
mov
ds
xorb
or
mov
sub
xchg
inc
inc
fists
push
outsl
jp
mov
insb
mov
add
movsb
mov
cmp
test
les
adc
dec
pop
jb
in
mov
imul
push
mov
lods
xchg
dec
add
push
sub
mov
and
lcall
lahf
insb
push
test
mov
xorl
out
dec
xchg
mov
bswap
mov
xorl
aad
inc
js
test
dec
loopne
and
faddl
out
push
lock
ljmp
sbb
xor
out
das
sbb
ja
fs
mov
nop
pop
shrb
fnsave
mov
imull
je
out
imul
int
sub
sarl
fnsave
out
xchg
notb
idivl
cmpsb
sub
mov
arpl
lea
repz
pushf
jle
in
mov
adc
lcall
xor
stos
and
sbb
subb
pop
inc
bound
mov
jns
sub
sub
push
or
repnz
scas
pop
int
sub
xchg
push
mov
scas
data16
pop
mov
mov
sub
cmpsl
loopne
lcall
add
div
into
inc
loop
cmp
aad
push
iret
test
out
push
pop
pushf
cli
or
stos
inc
leave
xor
das
ljmp
fucomip
and
cmp
jle
iret
inc
and
loop
out
jno
repnz
es
and
mov
bound
xor
in
add
jno
cwtl
jno
arpl
inc
inc
loop
cmp
mov
jo
shll
cli
out
loope
cltd
aas
enter
jbe
cmp
popf
cs
adc
xchg
sub
out
inc
dec
mov
xchg
jp
dec
dec
icebp
jp
test
imul
fildl
rcrl
jge
shr
fcoml
bound
stos
and
sub
in
cli
jp
repz
fists
mov
mov
lret
fcmovnu
push
adc
dec
mov
inc
loop
shll
xchg
pop
push
pushf
out
aas
jne
add
push
dec
push
mov
idivl
jnp
cli
int
stos
into
cmp
and
mov
int3
cwtl
in
push
mov
js
and
dec
neg
movsl
pop
cli
dec
in
or
int3
push
inc
int
popa
cs
pusha
sahf
sub
std
test
hlt
mov
cmp
or
ffreep
xor
rol
movb
mov
and
loop
ret
ret
push
and
dec
mov
mov
dec
cmp
xor
mov
leave
mov
jmp
dec
mov
add
movsl
mov
sub
call
pusha
scas
push
mov
mov
movsb
sbb
push
fs
movsl
push
addb
repnz
cltd
add
ljmp
and
or
shrb
lock
sbb
mov
mov
in
imul
jns
mov
jmp
xchg
dec
mov
aaa
insb
xchg
outsl
add
xchg
and
push
loop
mov
cmpsl
pop
sti
lret
dec
inc
pop
fdivr
sbb
jmp
outsl
ret
xchg
ja
mov
pop
adc
lods
dec
imul
add
add
jmp
mov
scas
add
push
jmp
push
mov
xor
dec
ss
stc
in
push
data16
cmp
bound
test
repnz
iret
into
inc
lret
fldcw
lods
aas
mov
std
pushf
push
into
sbb
in
mov
std
xor
sbb
std
inc
shr
jae
enter
inc
adc
cmp
pop
call
add
popl
add
jg
inc
scas
xchg
fs
into
add
xor
loopne
push
ljmp
scas
fnstenv
push
lret
cmc
sbb
mov
push
inc
outsl
pop
out
push
addb
add
and
push
mov
or
rorl
data16
out
ret
sbb
cld
inc
push
dec
cmpsl
and
daa
out
or
inc
or
movsl
shl
and
stc
push
addr16
sbb
cmp
iret
or
ds
outsb
in
jg
lock
push
cmp
lods
jb
mov
lret
out
pop
dec
mov
ret
fisttpll
jne
into
sbb
hlt
das
jge
icebp
xchg
cmpl
arpl
je
push
add
push
jmp
mov
addr16
add
sti
adcl
outsl
dec
jp
adc
stc
nop
mov
push
int3
xlat
cmp
mov
lea
adc
rclb
sbb
push
adcb
sub
out
and
scas
cltd
pusha
cmp
add
gs
inc
je
pop
inc
push
and
and
ret
out
pop
imul
icebp
stc
loopne
stos
inc
addr16
iret
test
icebp
inc
sbb
aad
mov
fistl
cmpsb
mov
adc
xor
push
stc
add
pop
repnz
xor
inc
gs
jl
ja
mov
push
ret
jae
std
nop
insb
mov
sub
sbb
push
jmp
std
dec
push
push
cltd
daa
mov
aad
push
jnp
xchg
arpl
iret
es
sbb
pusha
int
movsl
jecxz
insb
jp
mov
or
dec
pop
cwtl
leave
pop
in
sbb
sbb
or
push
push
mov
test
cmp
adc
add
int3
pushf
in
int3
dec
int
adc
add
stc
cmp
jno
mov
xor
push
sarb
or
nop
es
loopne
push
xor
lahf
fmul
pop
jne
add
cmp
adc
fprem
jp
sub
ret
and
daa
fldt
add
sti
out
bnd
xchg
sub
cmp
or
leave
mov
adc
xor
mov
inc
popa
pop
inc
jno
lock
xchg
adc
dec
ds
rorl
sub
xor
pop
shll
shll
xor
jmp
cmc
je
cmp
add
jge
mov
out
sbbb
ret
jg
shll
es
popa
inc
add
ljmp
pushf
adc
lcall
stc
in
sub
lret
add
mov
pop
outsl
in
sbbl
fsubr
outsb
pop
push
ljmp
cmp
addr16
sbb
pop
mov
daa
jge
mov
movsb
ss
insb
loope
cmp
movsl
pop
cmc
mov
sbb
dec
call
jno
bound
insb
push
xor
pop
mov
push
adc
pop
dec
cs
lret
or
nop
out
push
xchg
jnp
mov
adc
in
mov
shrb
push
sbb
sti
inc
mov
push
fs
or
push
mov
arpl
leave
sub
xchg
cmp
movsl
pusha
jns
cmpsb
adc
and
popa
jle
in
pop
mov
js
imul
cltd
push
mov
xchg
push
lods
push
repnz
insl
push
dec
and
js
sbb
dec
outsl
mov
xorl
pop
aad
sbb
ss
xlat
dec
mov
jnp
int
stos
pop
xor
cmp
leave
inc
adc
stos
cmp
add
mov
mov
fpatan
imul
push
jmp
stos
dec
in
push
jp
lock
fcomps
xor
rol
xchg
cltd
repz
test
pusha
xor
xchg
stos
insl
jecxz
sti
aaa
das
data16
or
sub
jecxz
loopne
mov
dec
inc
sbb
out
clc
pusha
sub
rclb
add
aas
icebp
jo
leave
xor
push
movsl
subl
xor
gs
mul
mov
addr16
jo
shlb
cmp
jns
pusha
sar
sbb
pop
insl
clc
add
push
setno
mov
adc
sub
pop
sti
xor
stc
mov
cwtl
shlb
stos
call
dec
pop
ret
aas
test
rcrl
es
jge
mov
mov
mov
pusha
cmc
xchg
imul
fdivl
and
adc
insl
out
jno
lea
ljmp
jne
and
out
xor
popa
hlt
fistl
jecxz
ds
cmp
push
cmc
lahf
js
ss
lret
stos
dec
add
or
xchg
lock
dec
jg
dec
dec
sarl
in
loop
or
push
adcl
fistpl
mov
mov
outsl
sbb
or
push
ret
mov
sti
dec
jp
dec
mov
lds
test
andb
cmp
cwtl
pmuludq
add
mov
test
lock
ds
sub
adc
clc
fcmovnu
bound
outsl
hlt
cmp
xchg
movsl
jmp
mov
cmp
mov
jbe
mov
mov
lods
push
retw
imul
lahf
add
adc
mov
mov
lahf
lods
dec
xchg
pushl
rorb
int3
in
mov
scas
std
push
push
rol
shll
fs
stc
loop
insb
int
sbbl
aaa
clc
inc
adc
daa
mov
jno
movsb
or
pusha
pop
pop
out
jp
loop
cmp
jge
lret
mov
insb
cs
dec
and
nop
lods
nop
xchg
outsb
rolb
mov
mov
shlb
mov
xchg
dec
xchg
or
mov
sahf
fsubrl
int
and
sahf
orl
in
lock
mov
adc
push
int3
mov
shrl
cmp
pusha
out
mov
andl
sti
adc
jmp
in
daa
jmp
lods
stos
pushf
add
aas
test
in
ret
inc
stos
ljmp
cmp
icebp
cmc
mov
test
mov
int
negb
stos
or
js
hlt
mov
ret
test
enter
rcrb
jl
jl
subl
pop
push
test
shll
movsl
pop
mov
adc
loopne
sub
imul
add
sub
sub
or
js
mov
movsl
pop
lahf
mov
mov
hlt
dec
or
into
add
xchg
push
jb
sbb
xchg
aam
add
xchg
push
xchg
jge
arpl
pop
cmpsl
push
cmovl
lahf
pop
std
ja
movsb
idivl
stc
rcrl
jge
test
sbb
dec
xor
dec
psubw
and
popf
fldcw
sarl
outsb
fnstenv
mov
dec
insb
mov
add
mov
cmp
ficoml
add
add
and
in
xor
xor
popf
jle
push
ret
dec
push
jbe
pusha
cld
add
inc
sbb
push
divb
and
mov
inc
fsub
mov
add
or
cmc
out
inc
lock
push
stc
addr16
jl
cmpl
sbb
mov
or
add
mov
push
add
repnz
mov
sahf
inc
ret
cmp
or
in
imul
add
mov
inc
jnp
pop
out
gs
jmp
cmp
shlb
lods
into
jecxz
rorb
andb
sub
je
mov
adc
sbb
mov
push
inc
shrl
inc
arpl
xor
lret
push
in
ret
push
es
jl
out
lock
add
xor
subb
lods
mov
mov
out
xor
jne
adc
xor
xor
and
imul
sub
jle
pushf
xchg
stos
xor
xchg
jp
mov
push
lahf
mov
mov
lahf
and
jnp
ds
inc
sub
pop
inc
add
fmuls
inc
cmp
or
jle
pop
popa
inc
mov
aaa
pop
xchg
test
pop
xchg
cmpsb
mov
jne
or
xor
cmc
loope
pushl
inc
mov
mov
fld
in
add
call
stos
fwait
cmpsl
sbb
out
lds
pop
ss
pusha
adc
sbb
xor
movsb
stc
ljmp
or
popf
pushl
sbb
ud0
mov
pushf
divl
adcb
movsl
jmp
adc
cmp
pop
in
fimull
pusha
aam
inc
and
ljmp
outsl
cmp
xchg
inc
xor
mov
fsubl
mov
cmp
fwait
push
jmp
mov
xchg
fisubl
jno
pop
push
xchg
rclb
out
lods
sbb
add
xchg
jne
jl
push
imul
mov
xchg
scas
jb
and
fstpl
out
mov
clc
ds
dec
or
hlt
jns
in
jecxz
fistpl
jmp
movsb
pop
in
and
inc
jnp
mov
fbld
jne
sbb
testb
mov
and
mov
or
lcall
xchg
sub
imulb
pop
dec
xchg
std
in
push
xor
ja
out
fs
mov
mov
cld
shrb
les
shlb
mov
cwtl
pop
data16
pusha
add
sbb
adc
sbb
jae
mov
mov
daa
scas
mov
les
xchg
popa
add
arpl
xor
test
mov
movsb
repz
imul
jb
xor
add
push
mov
xlat
mov
sub
mov
mov
sbb
sbb
pop
pop
mov
xchg
or
sub
pop
jns
dec
sub
dec
inc
loop
popa
f2xm1
sub
enter
int
je
mov
addr16
mov
cmp
icebp
int3
call
jle
jl
mov
jmp
outsl
push
mov
pop
jns
das
pusha
popa
int3
sub
or
cmp
xchg
mov
and
push
and
mov
sbb
pusha
xchg
imul
pop
xchg
shrl
in
push
nop
sub
mov
jmp
adc
fidivrl
mov
popa
mov
cli
fwait
cld
in
out
std
dec
subl
rcr
roll
insl
out
dec
sub
add
add
sub
add
add
add
add
add
add
lcall
add
add
add
add
add
add
xchg
add
push
adc
add
add
add
add
add
add
add
add
xor
sbb
sub
mov
sub
add
add
addb
stos
ret
ja
mov
js
js
int3
int3
int3
int3
int3
int3
int3
int3
pop
decl
add
jae
and
inc
add
add
add
aas
add
inc
add
add
add
add
add
add
add
add
add
and
add
inc
add
sbb
sbb
sbb
cmp
add
sbb
fisttps
arpl
jae
push
dec
imul
add
outsb
dec
jne
push
or
cld
mov
sbb
fdivr
or
mov
je
cld
lea
inc
divps
lea
movl
leave
inc
leave
and
or
ret
in
add
add
dec
push
add
adc
incl
ljmp
add
rclb
loopne
mov
call
ljmp
add
inc
xchg
push
loopne
call
push
and
inc
sub
adc
or
adc
push
add
lea
push
jmp
dec
add
mov
inc
sub
daa
add
ja
incl
sbb
add
jmp
add
test
add
add
pop
or
add
add
ficompl
sbbb
sbb
loopne
sbb
sub
clc
add
sbb
push
add
or
fs
insl
gs
add
je
imul
inc
gs
add
inc
gs
add
insb
addl
inc
gs
gs
jae
enter
imul
arpl
add
add
sub
add
add
pop
add
lahf
add
enter
ret
xlat
and
and
imull
add
mov
pop
sbb
ret
sbb
cmpsb
sub
incb
aaa
adc
out
dec
aas
mov
jo
sub
or
pop
iret
movb
mov
mov
in
sub
sub
mov
lahf
or
jmp
jae
hlt
bnd
les
push
pop
sub
data16
mov
xor
lret
inc
stos
stos
mov
decl
cld
je
sahf
xchg
mov
adc
xchg
jp
lods
out
push
aam
fdivs
pop
add
leave
xchg
jbe
in
call
addr16
mov
lcall
out
pop
adc
xchg
mov
cld
ljmp
cli
bound
ror
cmp
scas
js
scas
in
mov
push
push
mov
pop
jmp
sarb
cmp
add
rcrl
lods
sub
jge
mov
test
iret
in
xor
jnp
adc
lds
inc
sub
js
aam
lret
movsb
decl
aad
mov
mov
aad
xor
sti
orb
aam
loop
xchg
repnz
pop
into
adc
inc
test
xor
sti
aad
xchg
and
movsl
sti
mov
aam
and
xchg
mov
mov
jmp
sbb
sub
adc
push
addb
scas
std
popa
andnps
mov
jg
addr16
xchg
stc
xlat
xor
mov
jl
pushf
clc
jl
mov
xor
pop
scas
xor
pop
ss
inc
shll
mov
or
test
in
ljmp
rcrb
icebp
aam
push
ljmp
fwait
sti
push
imul
insl
stc
fcmovnb
je
sahf
mov
xor
mov
stos
mov
aas
fbstp
int
cmp
scas
and
sbb
pop
lds
sbb
test
mov
xor
imul
mov
push
shlb
and
adc
rcr
and
xchg
popa
push
sbb
mov
or
out
ljmp
push
sub
dec
clc
das
adc
xor
sbb
mov
int3
adc
in
popf
fmuls
jo
xor
push
adc
sub
xchg
sub
stc
jecxz
jns
jnp
mov
or
pop
mov
std
mov
pop
push
cli
pop
int
sbb
iret
cmp
sbb
mov
inc
clc
push
sub
sbb
mov
testb
push
inc
adc
iret
pop
aad
mov
pop
imul
sbb
mov
mov
inc
inc
xlat
mov
and
ret
push
dec
data16
orb
movsl
push
xchg
test
call
scas
push
ss
call
xor
jl
xchg
loop
inc
and
sub
jle
outsb
cmc
inc
pmuludq
xchg
mov
jnp
cmp
test
xor
hlt
sub
lcall
push
or
out
xchg
pop
dec
imul
xchg
sub
cwtl
xchg
iret
mov
fisubs
adc
fstp
out
mov
ffreep
mov
js
push
out
and
pop
cmp
xor
leave
xor
fdivl
js
scas
jae
pop
mov
sub
sub
sbb
dec
adc
enter
ret
or
cs
arpl
pop
int
js
sbbb
sar
jbe
lret
cmc
lods
jae
adc
cmp
cli
int3
pop
cmp
adc
mov
jle
jb
fisubrs
cmp
imul
cmp
and
das
test
xchg
jg
and
dec
mov
mov
cmp
jge
adc
out
lock
inc
gs
in
stc
shrb
mov
cld
mov
loop
push
mov
in
mov
cmpsb
mov
dec
inc
jnp
lds
mov
xor
xor
dec
sub
cmp
inc
inc
mov
mov
mov
or
fld
xchg
sbb
imul
mov
hlt
leave
mov
shll
test
cmp
mov
divb
lods
or
mov
jae
nop
inc
jp
push
dec
push
jmp
es
mov
sbb
leave
or
inc
lcall
push
ror
adc
std
fwait
xchg
sub
mov
lea
mov
popf
cmp
and
add
and
aam
testl
ffreep
sbb
jae
enter
jo
aad
int3
call
insb
mov
js
xchg
out
arpl
xlat
inc
and
roll
imul
es
stos
mov
dec
add
push
sti
mov
xor
jno
pop
ljmp
sarl
aad
incl
sub
mov
sub
xchg
js
fldl2t
push
das
sbb
int
xchg
push
jns
fistpll
lret
jmp
cmp
sub
imul
add
jle
ja
push
lahf
and
add
je
sub
ret
cmpl
out
sbb
jo
dec
add
sub
mov
popf
aaa
sbb
addr16
out
scas
cli
xor
in
scas
jno
push
sbb
mov
push
and
out
sub
or
jmp
xchg
push
pushf
xchg
mov
fcoml
mov
cmp
lods
das
inc
mov
sti
dec
aam
pusha
or
inc
pop
mov
push
sub
push
into
popl
add
sbb
hlt
or
pushl
mov
daa
xchg
sub
xor
pop
out
stc
repz
aad
mov
xor
int3
stos
lock
jge
int3
sub
into
in
jg
mov
cmp
and
lcall
lds
cmp
pusha
ret
inc
mov
mov
mov
push
jo
stos
pop
mov
push
pop
adc
mov
or
xchg
xchg
in
jb
mov
ss
mov
add
push
cmp
sub
cmp
outsl
sbb
push
inc
push
jae
pop
ret
mov
cmp
aaa
loop
aam
imul
mov
iret
out
and
xor
data16
test
or
insl
or
mov
in
test
subl
stc
xchg
push
mov
pop
cld
cltd
add
pop
mov
outsl
sti
add
sub
mov
cmc
xchg
cmpsb
jg
icebp
ds
pop
lods
xchg
and
inc
mov
xor
test
xor
inc
into
add
daa
cs
pop
aad
popf
xlat
mov
aad
mov
jl
dec
cmp
sub
xchg
pop
movsl
and
pop
jns
outsb
cs
ja
push
mov
ret
outsb
cmpsb
scas
pop
add
cmp
xlat
das
sub
jp
pop
imul
leave
sub
pop
test
inc
cltd
cli
adcl
cmp
call
daa
lods
in
lcall
sarl
aad
mov
cmpsl
es
fwait
cmc
gs
std
rcl
jno
sub
cltd
and
fildll
dec
dec
jbe
mov
cmp
add
mov
lea
xor
popa
stc
jns
xchg
xor
in
sub
lcall
jae
cmp
mov
insb
inc
inc
gs
xlat
xchg
cmp
cmc
and
retw
pop
adc
nop
repnz
iret
mov
mov
negb
push
mov
fwait
scas
out
xchg
jns
xchg
xchg
sti
fldl
jno
test
dec
adc
pop
movsb
int
cmpb
cmc
pop
fs
in
imul
jmp
mov
dec
adc
movsl
divl
stos
dec
mov
inc
xchg
out
xor
in
scas
aad
or
push
stos
lret
fidivrl
sbb
std
jne
push
sbb
std
cld
push
repnz
push
jecxz
jae
dec
sub
in
jns
pop
push
push
or
cmp
jns
dec
pop
jmp
inc
dec
int3
ret
fildll
push
fistl
test
in
push
cltd
xchg
add
push
sub
and
push
aad
aas
test
cmp
lret
vmovhpd
pop
in
jmp
mov
movsb
jae
ss
pop
les
lcall
mov
fldl
jmp
xchg
push
push
sub
movsl
push
and
add
scas
cmpsb
jb
es
adc
stos
test
sub
in
call
add
jp
xor
sub
rol
jne
pop
insw
fstl
in
aaa
divb
sub
outsb
jmp
pop
rolb
loopne
fldl
jle
repnz
addl
pop
dec
push
icebp
push
loope
jge
and
das
pop
mov
or
sub
ja
adc
or
fwait
sub
test
andb
frstor
mov
orb
adc
push
sbb
daa
pop
or
mov
outsl
imul
mov
bound
std
cmp
mov
push
rcrb
sbb
shlb
mov
shlb
jge
inc
jne
jl
aad
or
es
test
mov
xor
dec
xchg
pop
sti
xor
mov
add
inc
mov
mov
std
rclb
cmpb
xchg
jno
ss
push
in
ljmp
push
lahf
in
and
lret
addr16
pop
sub
bound
test
cmpsl
gs
pop
sub
jg
mov
push
scas
movl
jae
in
test
arpl
jb
scas
stc
adcb
icebp
sub
popf
in
sub
mov
pop
jle
jle
add
test
orb
push
stc
inc
clc
xchg
iret
lods
in
cmp
stos
lods
hlt
push
ljmp
into
xchg
pop
fadd
xlat
das
cmp
jge
adc
es
das
test
pop
shl
loopne
in
negb
dec
pop
mov
lcall
addr16
je
xor
das
rcrb
ret
jno
mov
cwtl
xorb
mov
lret
mov
lret
int3
mov
lods
push
sub
leave
shlb
mov
iret
mov
in
mov
add
nop
mov
cli
test
mulb
mov
push
add
push
int
mov
or
xor
pop
aam
xchg
mov
mov
ret
and
fdecstp
adc
lcall
sbb
or
test
push
mov
xchg
and
fwait
adcl
mov
mov
add
popa
adc
clc
cmp
add
inc
sbb
imul
jecxz
xor
cltd
pop
stos
xchg
in
mov
jb
jae
mov
xor
cmp
adc
repnz
mov
js
mov
bound
pop
aaa
xor
fstl
stos
xor
pop
test
out
cmpsb
popa
shl
push
sbb
xchg
mov
pop
pop
jmp
ret
add
lret
xchg
ja
inc
jg
mov
mov
mov
rorl
xchg
int3
lock
or
cwtl
and
push
lods
in
sub
mov
inc
cmp
mov
jecxz,pn
out
or
cs
mov
and
pop
call
sub
dec
lret
repnz
add
aaa
lret
xor
pop
cmp
mov
loopne
or
xor
fistpl
ds
adc
pop
pusha
pusha
mov
xchg
or
iret
cltd
or
xlat
adc
xor
and
out
inc
call
pushf
lock
roll
pop
adc
roll
pop
bound
in
adc
add
ret
or
ljmp
mov
adc
or
jmp
cwtl
adc
push
sub
sti
adc
and
and
push
fdivrs
add
mov
aaa
aad
aas
adc
xchg
cmp
cmp
cltd
and
ds
mov
cmp
mov
mov
and
xor
imul
push
cld
cmc
leave
fisubrs
movl
add
jae
repz
xchg
int
test
negl
add
outsl
out
test
adc
sbb
xchg
add
loope
jmp
cmpsl
out
test
push
je
pop
cmp
sub
aas
lock
fcomip
jg
in
mov
movsb
dec
cmc
insl
jns
mov
enter
rorb
pop
aad
loopne
cmp
jne
lods
loopne
rcr
dec
push
in
xchg
daa
cmc
pop
pop
cmp
fisttps
idiv
dec
clc
sbb
mov
sub
cmp
je
cs
xor
lahf
gs
fldenv
aam
sub
sbb
mov
scas
andb
dec
inc
mov
cwtl
rep
lock
fcmovu
sub
lds
cli
data16
dec
pop
xor
xor
cs
loop
lret
shll
jb
pop
in
pop
adc
call
incl
insb
lods
jp
fwait
out
add
jo
adc
mov
push
cmc
sahf
jl
adc
mov
adcl
int3
lds
outsb
mov
insl
out
adc
js
mov
out
jae
dec
push
push
fidivrl
or
adc
xor
add
jns
jo
or
nop
nop
mov
test
pop
pop
mov
push
lds
inc
push
mov
imull
lock
pop
xchg
roll
pop
inc
enter
daa
pusha
mov
dec
xor
outsb
cld
mov
outsl
mov
in
jae
js
aas
es
mov
add
es
scas
lcall
js
push
inc
xlat
or
mov
imulb
popa
xor
into
mov
mov
in
jnp
mov
popa
iret
xor
roll
fidivs
ret
int3
or
lahf
dec
mov
enter
xor
inc
call
insl
cmp
jb
inc
sbb
xor
pop
xchg
inc
fs
mov
lods
ljmp
mov
repz
add
push
jns
out
pusha
aaa
inc
push
movsb
psubusb
or
mov
push
rcrb
fstps
out
cmc
jno
outsl
out
popf
pushw
inc
add
add
xchg
push
inc
daa
enter
or
cmp
pop
xor
mov
xchg
je
and
mov
pushf
jge
sbb
or
mov
fucomp
sarl
icebp
push
cmc
outsl
and
inc
loopne
pop
jo
es
inc
pop
mov
mov
xchg
xchg
jns
inc
outsl
add
imul
push
fs
adc
push
hlt
in
mov
or
sbb
cli
imul
aad
mov
jo
enter
scas
or
pop
call
rcrl
repnz
inc
fldl
mov
cmpsb
mov
int
inc
into
or
negl
data16
daa
jg
xchg
push
loope
fwait
mov
xchg
mov
push
dec
hlt
js
ljmp
xor
cltd
jp
inc
mov
xchg
movsl
jmp
daa
je
shlb
aam
sub
cld
mov
movsl
and
xchg
fisubrs
int
lea
sub
stos
lods
inc
btr
mov
jbe
andl
or
mov
sbb
fistl
mov
xchg
jbe
inc
nop
divb
jno
ret
out
les
fnsave
sbb
mov
pop
sub
xchg
push
and
mov
sbb
les
rorl
sub
mov
in
out
jnp
pushf
outsl
fcmovu
addr16
stos
clc
adc
sub
xor
enter
mov
fldenv
jmp
and
push
jne
outsb
jne
hlt
clc
fninit
ss
mov
push
push
jp
inc
repnz
clc
mov
test
es
push
sbb
cvtpi2ps
mov
mov
in
xchg
je
int3
lcall
mov
mov
xor
push
fists
scas
data16
xorb
test
test
xchg
iret
cs
or
stos
or
inc
add
pop
jp
and
push
and
ljmp
cmp
cmpsl
add
pop
mov
int3
fcompl
mov
inc
call
stos
aad
mov
pop
or
inc
push
adc
arpl
aas
fidivs
push
int
int3
mov
sarl
add
out
pop
adc
mov
push
data16
inc
rorl
ss
xchg
push
fisttps
pop
push
push
adc
jg
mov
addr16
jg
mov
pop
jmp
jmp
sub
rcll
leave
mov
xor
xor
lahf
add
and
sbb
push
mov
mov
loop
cltd
sub
and
jo
jg
push
jl,pt
dec
jecxz
add
cmp
mov
sbb
mov
mov
jb
xchg
call
repnz
xchg
xchg
decl
mov
enter
jg
out
adc
ficompl
mov
inc
dec
xchg
test
mov
push
cld
xor
in
in
imul
cwtl
les
lahf
push
daa
test
lret
adcb
sub
fwait
mov
mov
cs
sbb
push
dec
jecxz
enter
jp
scas
xor
je
dec
ret
adc
push
clc
pop
dec
rorb
xor
push
mov
sbb
icebp
mov
jp
outsb
arpl
mov
int
or
aaa
stos
aad
mov
in
xchg
xchg
fdivr
jbe
iret
pop
mov
sub
hlt
pop
mov
leave
hlt
clc
shl
sub
mov
jmp
add
push
dec
in
fucomip
mov
faddp
vminps
jecxz
or
scas
xchg
fldenv
adc
and
xchg
sbb
loope
xchg
dec
lods
sub
popf
sbb
fwait
push
or
add
push
adc
xchg
add
dec
inc
ficoml
test
stos
mov
xor
in
mov
adc
or
out
stos
movsl
mov
jp
xor
out
test
cmp
mov
rcrl
adc
xchg
icebp
loop
loope
sub
aas
sahf
test
cwtl
add
pop
jle
jno
mov
sbb
and
nop
sub
mull
jecxz
cmp
scas
insb
add
add
or
add
add
mov
add
add
sldt
pop
add
xlat
add
add
add
test
add
add
fmul
add
add
add
add
add
xor
xor
xor
dec
add
mov
addb
stos
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
addr16
mov
outsl
outsb
jb
or
add
add
add
add
das
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
nopl
and
js
add
fs
gs
add
jg
je
fs
push
movb
roll
jecxz
sbb
mov
or
add
fmuls
incl
dec
mov
incl
mov
sbb
push
rclb
add
cld
call
inc
insb
aam
test
push
sar
cmp
jnp
add
add
add
adc
leave
add
incl
add
enter
mov
add
call
push
mov
cmpsl
scas
push
popf
cld
loopne
incl
sbb
dec
push
push
xlat
mov
lock
enter
add
push
call
add
jne
lret
add
repz
or
mov
push
add
push
hlt
add
sbb
add
addr16
pop
add
add
add
add
add
add
add
add
add
inc
insb
insl
shll
je
jae
popa
outsb
dec
add
insb
insb
imul
gs
sbb
popa
dec
outsl
add
insb
add
add
cmovae
insb
add
insb
add
outsl
jbe
outsb
xor
insb
je
je
je
insb
out
ja
out
add
das
adc
jnp
xlat
gs
xor
ja
in
pop
shlb
cmc
icebp
xchg
movsb
push
or
mov
and
mov
movsl
cs
mov
das
jge
add
jns
inc
sbb
jle
fildll
stos
xlat
cmpsl
jno
sub
sbb
insl
and
or
push
aaa
iret
daa
test
popa
mov
push
push
cmc
dec
pushf
dec
adc
xchg
cmpsl
or
test
xchg
sbb
out
sub
add
in
mov
nop
sar
mov
loop
xchg
mov
push
pusha
cmp
pop
dec
mov
inc
cmp
leave
sar
push
scas
rorb
sub
aaa
jno
inc
push
push
jno
pop
mov
icebp
mov
loopne
pop
negl
dec
dec
ficompl
lahf
movsb
int
cmp
mov
cmp
cmove
aad
fwait
sbb
jne
pop
jb
add
test
add
fsubrl
scas
fcmovnu
sub
xlat
insb
fwait
push
out
ljmp
test
out
stos
pop
mov
fsubrs
das
test
xchg
mov
stc
mov
dec
cwtl
repz
gs
scas
cwtl
loopne
sub
mov
jnp
insb
lret
inc
push
repnz
out
mov
push
or
xor
cltd
push
lahf
out
sahf
stc
mov
mov
movsl
and
pusha
or
in
cmp
stc
mov
int3
and
imul
add
push
jecxz
dec
mov
inc
adc
loop
stos
push
imul
add
ds
pop
xor
mov
setae
loope
addr16
add
add
test
xor
or
pushf
sub
dec
pop
addb
cmp
jnp
sbb
stos
repz
sarl
insb
out
ds
cmp
xchg
fwait
repnz
jbe
pop
xor
stos
lds
into
xchg
xchg
push
out
mov
mov
cmpsb
xor
inc
dec
dec
push
adc
mov
mov
cmpsb
icebp
lret
enter
xchg
ret
divb
pop
inc
idivl
jnp
test
or
mov
loop
loope
cmpsb
ja
add
cwtl
jge
loop
push
jp
xchg
pop
jnp
jno
adc
fsts
sbb
or
dec
and
jns
mov
xor
ret
int
mov
cmpsb
pop
insb
or
adc
inc
cmc
xchg
xor
push
mov
pop
rol
das
int
scas
cld
sbbl
xchg
stc
cmp
das
mov
pusha
ret
sub
mov
pushf
aas
test
adc
outsb
add
inc
mov
mov
out
and
cmp
xor
std
ss
xchg
pop
push
movl
leave
subb
hlt
ret
pop
sub
adc
cld
fsub
jno
les
jge
sub
dec
insb
jns
fdivs
mov
jmp
loope
pop
sbb
push
sub
sbb
call
and
fisubl
ss
scas
icebp
sub
fidivrs
inc
cmpl
std
adc
mov
aas
fstpt
fimull
andb
pop
pop
aam
xor
dec
test
push
cs
dec
xor
xchg
xchg
es
inc
xor
pusha
hlt
push
out
faddp
shrl
xor
int3
cmc
sbb
inc
ja
lods
mov
jns
fldcw
cli
lret
lock
dec
fdivrl
xchg
mov
std
out
shrb
and
in
jno
hlt
push
lret
cmpl
addr16
push
dec
inc
push
push
stos
cmp
lds
xor
lret
aad
in
add
push
shrb
lahf
std
sub
imul
bnd
dec
pop
xor
rclb
dec
cmpsl
mov
inc
call
sub
mov
rcr
mov
xchg
fildll
fmull
cmp
stos
pop
lcall
push
ds
insl
sbb
jp
pusha
adc
stos
dec
hlt
jno
mov
in
sub
int3
lods
div
int3
adc
aam
loop
mov
mov
hlt
fists
aad
insl
jge
adc
and
cltd
sbb
xchg
jge
lret
xlat
dec
push
sbb
push
pusha
mov
inc
mov
sti
and
pop
mov
popf
in
js
scas
xlat
jns
enter
jg
inc
cmp
add
orb
test
pop
ds
jg
mov
cli
pop
fidivl
repnz
out
sbb
test
jmp
mov
fldenv
push
push
nop
pop
jno
jno
icebp
or
mov
dec
xchg
bound
xchg
shrl
fcoml
xchg
sub
test
pop
mov
int
js
push
orb
lahf
push
mov
cwtl
pop
inc
fisubrs
mov
or
push
mov
cmp
mov
gs
fwait
dec
jae
mov
push
jmp
jae
dec
fsts
push
addr16
xchg
lcall
iret
test
pop
ja
lcall
js
pushf
or
sbb
mov
ret
mov
call
pushf
adc
push
push
dec
testl
pop
inc
adc
and
fimuls
jnp
cmpb
sbbl
rclb
mov
cmp
jge
jno
cs
xor
ficompl
mov
mov
cmp
jmp
sub
repz
loopne
and
dec
push
cltd
imul
mov
rorb
daa
jbe
imul
std
adc
leave
sub
clc
and
in
je
jle
jecxz
mov
pop
jmp
push
xor
sub
fwait
inc
pop
clc
fadds
xchg
in
popa
dec
or
out
inc
sub
mov
rorb
imulb
inc
sahf
mov
out
fcomps
int3
loop
movsb
pop
popf
out
scas
mov
pushf
jno
inc
jle
sub
dec
xlat
lods
jns
je
xchg
xor
popf
imul
mov
aad
adc
inc
sub
mov
ss
int
stos
adc
xchg
adc
test
pop
sub
insb
rolb
sub
dec
pushf
cmp
mov
cmpsl
adc
jecxz
sbb
xor
popa
jmp
fcoms
negb
adc
push
mov
and
ss
sti
jae
lcall
mov
je
push
add
ds
arpl
stc
add
xchg
mov
das
mov
xchg
inc
mov
pusha
and
leave
push
sub
fdiv
call
push
shll
jmp
mulb
lahf
popf
fs
mov
pusha
pushf
inc
outsb
loop
cmpsl
cmc
rorb
sub
xchg
movsb
cmpsb
sbb
rcll
repz
jg
jmp
lods
push
push
xlat
mov
lods
push
add
cltd
insl
icebp
aaa
fidivrl
sub
push
cmp
fnstcw
jp
adc
cmpsl
aaa
bound
cmc
fmull
movsb
sub
std
add
nop
mov
inc
add
sub
adc
mov
cmp
enter
adc
fcompl
lret
cmp
in
ja
bswap
jnp
addl
sub
fistl
xor
cld
mov
clc
jmp
lods
outsl
scas
arpl
in
adc
test
dec
xorl
pusha
cmp
push
sbb
dec
int
xor
imul
fstpl
ret
fwait
or
push
xchg
out
add
ret
cmp
mov
push
mov
fisttps
cwtl
mov
fwait
and
mov
out
and
fxch
xchg
js
adc
jns
mov
out
pop
cmc
out
insl
fisubrs
pop
notb
sub
nop
inc
in
or
dec
mov
xlat
inc
mov
in
fbstp
les
lcall
mov
lahf
pop
cmp
jae
iret
cmc
xchg
dec
fnsave
xchg
or
hlt
inc
aad
ljmp
lcall
push
fidivl
test
sub
les
stos
das
adcb
andl
not
adc
mov
out
testb
dec
inc
mov
and
mov
mov
push
or
mov
xor
add
dec
mov
jle
pop
adc
movsb
movsb
arpl
popf
mov
xchg
ljmp
pushf
cmp
jmp
repnz
sbb
aaa
std
imul
mov
cmp
pop
std
smsw
mov
and
xchg
sub
jo
dec
aad
mov
sbb
xchg
xchg
scas
outsl
enter
loope
out
xchg
and
outsb
fsubs
adc
out
out
push
jb
and
imull
inc
push
in
rcrl
enter
mov
jmp
imul
jg
gs
cmp
decl
hlt
jge
fldl
and
ficoml
mov
notb
testb
add
and
jp
xchg
jg
lock
fadds
push
push
dec
subb
jle
int3
lods
push
xorb
pop
fisubl
xor
jle
sub
mov
xchg
or
shlb
mov
add
mov
sbb
jecxz
arpl
mov
add
push
or
ljmp
pop
push
sti
xchg
decb
mov
mov
lcall
sbb
push
cmpsb
mov
mov
dec
sbb
aas
js
push
outsb
cwtl
xor
sarb
dec
int3
mov
scas
inc
pop
sub
xlat
adc
sahf
sub
fimuls
in
jmp
and
or
xchg
mov
pop
sub
and
cmpsl
into
mov
xchg
lcall
push
loop
jp
in
and
into
pushfw
jb
cmp
iret
popl
cs
rolb
nop
sub
bound
call
xor
mov
movsl
sub
jbe
add
lret
aaa
dec
test
push
fcoms
outsb
stos
mov
xchg
daa
into
rorb
insl
push
push
xor
mov
hlt
fsubs
into
add
jp
or
mov
enter
mov
mov
xor
dec
fidivrs
cwtl
adc
aas
testb
or
mov
xchg
sub
daa
pusha
sar
mov
ja
cmp
mov
movsb
push
jb
mov
cmp
inc
je
outsl
mov
fadds
jmp
cmc
and
cmp
jmp
jne
xor
pop
ljmp
jbe
insl
jns
push
data16
iret
movsl
push
push
or
out
xchg
in
add
std
xchg
lods
mov
ds
dec
sub
jp
pop
push
frstor
mov
leave
mov
push
adc
lods
or
lahf
push
and
ret
jg
cld
adc
mov
fisubl
push
sbb
outsb
inc
push
pop
jae
jo
cmpsb
sub
stos
dec
pop
dec
and
lret
popa
cmp
and
rolb
rcl
hlt
or
scas
fstpl
mov
mov
lods
fldl
icebp
lods
dec
insb
sbb
test
fs
rcrb
sti
inc
pop
aad
push
or
xchg
xor
push
jg
push
push
popa
sbb
lret
jne
cld
out
jp
popf
xor
push
jmp
cmpsl
pusha
rclb
dec
cltd
js
and
add
fstpl
fadds
jb
jae
adc
out
and
sbb
fnstenv
sub
sub
imul
jne
fsub
ret
fimull
mov
add
push
mov
iret
ljmp
fistpll
js
fucomi
add
or
cmp
movsl
cld
jl
xchg
jle
dec
jmp
adc
xchg
cmp
dec
outsb
inc
sti
adc
xchg
adc
movsl
jmp
sub
sbb
inc
push
push
cmp
js
repz
iret
js
hlt
test
cmp
movsb
outsl
push
fsubrs
xor
mov
dec
fnsave
test
adc
jl
xor
adc
inc
push
mov
outsl
rcll
mov
or
jg
push
fs
ret
push
or
in
dec
aas
inc
inc
xor
je
fiaddl
lods
insb
rclb
sbb
sub
inc
sbb
xchg
add
adc
xchg
mov
xchg
and
pop
pushf
push
cmpsl
lods
add
mulb
clc
mov
hlt
and
mov
pushf
imul
jo
cmp
inc
xor
mov
mov
sub
lds
outsb
lods
sar
or
lret
dec
test
push
rcl
mov
inc
clc
inc
dec
mov
shll
cs
nop
push
xchg
cwtl
stc
xchg
popa
arpl
dec
repnz
mov
xchg
mov
std
dec
inc
xchg
inc
les
loope
std
lahf
dec
lea
mov
in
loopne
pusha
aad
js
push
mov
sarl
xor
je
adc
scas
inc
bound
arpl
leave
test
jae
imul
inc
ss
aas
pop
int
push
sub
ja
lahf
pop
lock
ds
mov
dec
lcall
mov
loop
mov
pusha
jae
jno
mov
add
fisttps
add
call
das
jmp
lds
sbb
orb
js
cmpsb
pusha
loopew
or
dec
popf
fmuls
xchg
jmp
imul
pop
ds
dec
xchg
pop
sub
pusha
mov
cmp
xor
out
xchg
adc
hlt
notl
int3
test
addr16
rol
mov
bound
sti
int
dec
sub
scas
jo
sub
add
pop
pop
rcll
scas
inc
sub
lods
dec
cmp
xchg
je
insl
lea
mov
int3
pop
mov
xchg
cmp
aas
jo
out
jo
rorb
jl
das
or
out
sbb
flds
fisubl
adc
sub
mov
mov
mov
xchg
repz
mov
dec
lea
adc
test
out
xor
popf
and
mov
mov
dec
and
pop
xor
push
out
xor
test
cmp
jo
xchg
mov
and
mov
pop
push
mov
mov
imul
sbb
mov
mov
push
imul
enter
xor
dec
adc
jmp
out
cmp
adc
push
cmp
aam
sub
stos
fsubrl
out
and
adc
cmp
ds
fisubl
xorb
cmp
dec
fisubl
ret
cld
cwtl
outsb
mov
cli
push
cli
and
jg
sub
push
in
mov
adc
insl
dec
cmp
pop
push
sahf
adc
popf
test
in
pop
stc
test
jno
push
jae
test
pop
movsb
pop
jg
dec
cmc
aad
fcmovnb
jp
xchg
xor
add
push
popa
push
stos
add
and
rclb
nop
stos
mov
sbb
stc
lods
nop
pop
jne
rclb
xor
addr16
outsl
incb
hlt
jg
inc
push
ret
dec
fsincos
ja
xor
gs
es
aaa
pusha
in
outsl
inc
repz
push
leave
aaa
inc
inc
shrl
pop
inc
or
push
jg
mov
jbe
sub
mov
push
clc
aam
std
dec
cltd
cwtl
push
leave
insl
pusha
cltd
lds
dec
push
in
inc
repz
sub
cmpb
outsb
lods
pop
xchg
cmovae
push
inc
pop
jns
inc
and
les
inc
cmp
lock
adc
and
push
shr
inc
sbb
push
push
jmp
xor
ds
sub
cwtl
dec
mov
and
pop
ljmp
cmp
addl
dec
sub
jns
adc
mov
aas
in
es
add
fisubrl
sbb
aaa
shl
mov
out
xchg
fnstcw
push
xor
xchg
adc
xor
dec
arpl
iret
pop
mov
in
cmp
cli
sub
or
stos
mov
mov
aad
or
xchg
mov
stc
jno
pop
adc
fimuls
in
bswap
xor
jp
pop
fldl
inc
push
mov
jmp
fisubrs
faddl
push
pop
shr
in
cwtl
lock
xchg
test
rclb
mov
and
inc
sub
std
insb
mov
dec
or
scas
shll
ret
lret
divb
sub
jge
rolb
dec
int3
push
jns
add
mov
pop
ror
lods
push
xchg
mov
fwait
adc
pop
or
mov
imul
daa
lea
mov
pop
push
dec
into
pop
cmp
push
jecxz
mov
inc
mov
loope
inc
int3
insl
xor
pmovmskb
loop
clc
mov
jb
aas
or
jae
mov
ja
in
dec
int
in
clc
call
ret
imul
ret
sbb
test
jnp
fs
aaa
mov
pop
out
fs
xchg
and
and
push
sbb
sbb
xor
test
je
mov
lea
sbb
sbb
negl
imul
jecxz
adc
in
mov
mov
shll
aam
fadds
fsub
test
mov
xchg
cmp
and
sbb
aad
cmp
mov
xor
sub
mov
mov
and
inc
fistl
test
test
xchg
out
mov
and
mov
mov
ret
stc
icebp
cmp
es
bt
sbb
out
xchg
out
cmpsl
je
insl
ror
push
adc
fwait
fwait
dec
int
mov
js
jge
xchg
movsl
jne,pn
test
aad
rorb
unpckhps
cmpsb
mov
add
std
sbb
call
cld
push
xchg
push
in
divb
jo
loopne
xchg
jmp
cmpsl
sub
xlat
jg
aaa
push
test
mov
addr16
adc
cmp
daa
xchg
sub
add
pop
cmp
add
andb
hlt
adc
in
cs
insl
jmp
jp
aad
mov
mov
inc
push
and
and
lret
sbb
pop
aaa
inc
push
cmpsl
push
xlat
cmp
insl
insl
ror
in
push
dec
push
lods
inc
nop
push
jns
cmc
test
insb
or
jmp
adc
fbld
out
xor
mov
scas
jle
dec
lods
or
push
pop
add
fisubs
mov
cld
add
push
sti
lret
xor
ret
mov
and
sub
jl
jns,pt
roll
add
add
add
add
add
add
sldt
add
push
jg
add
add
out
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
addb
stos
add
ja
mov
push
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
add
jb
and
add
or
add
add
add
add
adc
loopne
add
insb
add
hlt
add
add
add
add
add
popa
add
add
add
add
add
mov
add
add
add
push
add
add
and
push
outsb
imul
push
inc
pop
ja
dec
dec
jo
push
imul
add
mov
xorl
pop
pop
lea
mov
incl
in
cld
adc
adc
mov
adc
cld
adc
add
inc
shlb
leave
dec
inc
into
or
xor
push
add
add
incl
enter
fmull
in
push
incl
add
add
add
mov
adc
hlt
add
add
rorb
cld
mov
add
incl
add
push
add
clc
push
popf
push
add
cmp
mov
inc
add
mov
decl
add
lcall
push
aam
add
add
add
add
push
add
add
add
or
xor
add
add
je
js
outsl
inc
outsb
je
add
inc
sbb
gs
jo
inc
imul
insb
dec
popa
arpl
gs
push
push
cs
jb
addr16
push
jns
outsl
xchg
imul
push
popa
gs
js
xor
add
add
mov
add
add
add
les
add
add
add
add
push
add
je
add
cmpsb
sub
mov
iret
cmc
adc
adc
push
cmp
mov
por
cmp
and
test
in
lcall
dec
mov
sbb
push
shrb
sahf
sbb
jg
rcl
sub
inc
mov
cmpb
pop
in
add
outsb
stos
sbb
push
les
xchg
outsl
pavgw
mov
clc
lret
roll
bound
dec
cmpsl
dec
fldt
mov
imul
dec
xor
and
ss
imull
mov
hlt
jmp
dec
icebp
cmp
pop
dec
sub
mov
mov
stos
or
enter
dec
mov
xor
push
inc
xor
push
das
adc
movsl
sbb
scas
jns
xor
cmp
clc
dec
sbb
pop
mov
sahf
psubb
insl
adc
or
out
mov
bound
lock
jne
iret
xor
in
fidivrl
vorps
sub
push
neg
pop
pop
inc
enter
adc
lahf
enter
shl
pop
or
nop
xor
mov
popa
popa
push
cmc
or
jbe
adc
mov
gs
xor
sub
jo
lock
rolb
gs
int3
cmpsb
inc
jb
and
push
fst
js
xchg
ja
mov
pushf
xor
rolb
hlt
mov
jecxz
ja
loopne
xchg
das
js
jecxz
in
je
sub
mov
gs
shll
iret
jns
sub
xchg
stc
data16
test
and
jecxz
outsb
aaa
sub
shrb
add
mov
sub
dec
aas
cmpsl
push
das
dec
sbb
mov
pop
lcall
mov
aaa
push
jp
insb
push
pop
xlat
pop
mov
sahf
faddp
dec
mov
cmp
rcrl
mov
inc
aaa
cmpsb
cmp
inc
pusha
dec
out
lcall
rorb
imul
xlat
into
jle
daa
loope
pushf
repz
mov
js
jp
cld
dec
lock
add
cld
iret
xchg
mov
aas
xchg
test
shrb
outsb
push
ret
lahf
pop
mov
pop
cs
pop
mov
cltd
aad
or
jp
cwtl
fldenv
inc
push
sub
fimull
aam
or
sahf
lods
ret
outsb
adc
cmp
arpl
hlt
mov
dec
pushl
iret
mov
ds
dec
xor
push
aaa
outsl
sub
push
std
mov
stos
sub
dec
cmp
mov
mov
sbb
icebp
stos
push
mov
cmpsb
pop
das
mov
pusha
je
lret
fidivs
mov
dec
shll
in
outsb
cmp
inc
xor
mov
jae
imul
jne
xchg
test
sbb
xorb
push
js
sbb
test
adc
clc
jp
insb
ret
inc
inc
enter
mov
and
or
push
pushf
add
cmp
lret
mov
dec
jp
mov
xchg
add
icebp
mov
adc
xor
rcrb
push
pushf
adc
jge
insb
push
std
loop
sbb
push
sti
jo
in
dec
push
sti
jge
push
jb
outsl
call
in
lret
jg
cli
lds
repz
ja
adc
in
shll
add
xchg
ret
and
enter
xor
add
xor
mov
xchg
sbb
pop
mov
xlat
arpl
mov
xlat
fucomi
xchg
sbb
xchg
or
adc
mov
sbb
scas
inc
mov
in
in
test
push
push
std
insb
dec
sub
lahf
mov
out
push
inc
jbe
fcomi
xor
xchg
lcall
inc
pop
aam
jg
dec
lret
xor
loop
pop
add
mov
jmp
xor
ficoms
lret
add
fidivrs
sbb
rcll
or
stc
cmp
sahf
fstps
outsb
cmp
dec
sub
fdivrp
sbb
dec
mov
out
jns
xor
xchg
ljmp
pop
cld
dec
xor
testl
ret
out
adc
lahf
mov
dec
test
lcall
add
xchg
mov
lods
std
mov
cs
ret
mov
shlb
sbb
ja
mov
push
mov
push
dec
xor
nop
sbb
xchg
push
pop
jp
in
ficoml
out
add
or
ja
mov
jns
and
test
sub
push
mov
int3
mov
je
sbb
push
rol
sbb
mov
dec
dec
pusha
in
adc
call
lods
push
xor
and
xor
test
jge
mov
push
mov
dec
dec
adcl
push
outsl
call
in
add
mov
cmpsl
push
dec
adc
in
pop
fstpt
add
add
shrb
in
js
lret
jg
ret
aaa
or
in
enter
mov
mov
in
add
in
pop
inc
push
and
push
mov
lcall
loope
pop
cli
sub
stc
pop
in
dec
inc
into
out
sbb
leave
dec
test
sub
xchg
cmp
or
dec
leave
in
and
lods
test
inc
cmp
sub
sbb
pop
daa
push
adc
jp
mov
mov
shll
dec
cmpsb
bound
pushf
fcomp
push
out
jns
out
mov
icebp
cmp
inc
push
sub
je
inc
scas
lahf
neg
mov
jp
mov
mov
add
inc
jecxz
or
push
mov
add
cmp
jmp
sub
add
cmpsl
enter
neg
lock
mov
adc
xchg
dec
pop
lret
mov
lods
bound
push
or
lods
mov
outsb
mov
mov
cmpsl
ja
jno
jae
sub
pop
sub
int3
lcall
les
lahf
rclb
mov
push
es
xchg
inc
popf
xor
xor
sti
imul
int3
mov
push
mov
dec
or
out
lods
jle
mov
mov
add
dec
in
aad
mov
push
sub
int
lret
ds
inc
fimull
fidivrs
cmp
outsl
mov
in
icebp
lret
lret
pop
aad
fnstenv
xor
add
push
mov
add
int
out
sbb
add
pop
xchg
std
jbe
jg
xchg
in
cmp
or
cmp
bound
movsl
test
mov
mov
arpl
jmp
mov
scas
push
sub
repz
imul
in
into
popa
mov
sub
pop
mov
and
loop
dec
sti
sub
test
or
pop
inc
test
aas
gs
cmp
gs
lock
cmpsb
fstpl
into
notl
xchg
lods
outsl
add
call
sbb
in
lea
lahf
dec
sub
insb
lret
in
movsl
clc
roll
ret
fldl
sbb
jno
mov
fdivp
rol
cmp
sbb
jge
push
addr16
pop
sbb
mov
hlt
fsubrs
sti
fucomip
test
and
lds
xchg
in
ja
mov
mov
mov
icebp
test
push
inc
jl
into
push
repz
aas
inc
push
pop
iret
xchg
fiadds
jg
dec
mov
stos
bound
inc
sbb
push
shlb
cmp
test
add
shlb
out
orb
imul
in
fidivrl
inc
addr16
xchg
inc
mov
mov
or
in
arpl
fdivrs
dec
imul
mov
shrb
push
and
pop
add
sub
vbroadcastss
fwait
jmp
jecxz
imul
sbb
cmp
mov
mul
xchg
push
minps
insl
add
adcb
xchg
add
xor
xor
inc
jmp
and
stos
pop
mov
mov
mov
lock
dec
hlt
into
mov
ljmp
je
notb
push
pop
add
push
movsl
aad
pop
cltd
bound
pusha
or
into
out
push
leave
sbb
rclb
or
cltd
xchg
and
mov
bswap
rorb
dec
fists
pop
cmp
cmp
fnsave
pop
inc
fldt
jl
ja
lret
pop
jnp
add
mov
xorb
jmp
jne
or
data16
in
ljmp
cmp
mov
xor
loopne
std
fisttpll
movb
xlat
dec
insb
mov
xchg
mov
xor
jmp
in
push
lea
pop
mov
in
cwtl
movsl
pop
adc
sub
sbbb
push
adc
fldcw
lock
or
and
bound
sub
mov
cmpsl
cld
xor
ret
push
xorl
xchg
dec
repz
mov
sbb
or
into
jmp
clc
movsb
ret
into
inc
shll
pop
jb
dec
xor
repz
flds
add
bound
xor
dec
lods
xor
sbb
movsl
add
int3
xchg
daa
cmc
mov
xchg
xor
pop
inc
popl
mov
pop
sbb
enter
and
insb
mov
mov
psllq
aam
sbb
lods
dec
movsb
jle
rorl
jbe
or
ret
jle
xchg
xchg
adc
adc
jecxz
mov
pop
and
mov
mov
xchg
repnz
mov
push
in
jle
jge
sbb
add
jno
lock
inc
pop
insb
in
sarl
cli
aas
ja
in
data16
sbb
jl
mov
push
sbb
lds
and
fwait
sub
mov
dec
mov
ljmp
and
cld
adc
insb
add
stos
test
shlb
jno
loop
pop
mov
adc
scas
lret
pop
push
sti
loopne
fists
dec
mov
lods
rcr
stos
inc
jl
fs
out
xchg
xor
sahf
or
jns
aaa
mov
stc
cmpsb
je
cmp
icebp
test
mov
or
xor
push
ficoms
fstpt
in
int
iret
push
mov
and
bound
xor
mov
adc
cwtl
mov
xor
pop
out
shr
cltd
lret
test
pop
jmp
dec
nop
mov
imul
fwait
mov
inc
or
fists
shll
fsubrl
rol
jge
jo
out
mov
ret
ficompl
sbb
adc
inc
xor
jecxz
inc
mov
xchg
xlat
jmp
cmpsb
arpl
bound
test
dec
adc
and
adc
cmp
fists
ja
xorl
bound
daa
aam
aaa
mov
in
xor
movsl
dec
ret
or
test
inc
jns
out
xchg
push
inc
mov
dec
pop
out
xchg
mov
cmp
xor
inc
sbb
pop
or
fwait
js
sbbl
adc
pop
lock
push
push
inc
ja
fwait
int
ss
xchg
dec
fdivrl
xchg
mov
aam
push
jbe
gs
adc
pop
xor
push
call
in
ja
sahf
add
mov
ret
xchg
or
les
sbb
mov
and
jmp
sbb
push
mov
pop
dec
cmp
scas
mov
enter
fisubrs
inc
add
xchg
jbe
fsubp
iret
dec
inc
push
test
in
fbstp
xchg
test
and
loope
cltd
sbb
dec
and
sbb
adc
lods
push
mov
fcomi
iret
pop
shrl
mov
push
cmp
int3
xchg
ja
add
push
push
inc
cli
xchg
out
in
ljmp
sbb
xorb
lret
adc
shlb
cmp
test
scas
dec
sti
add
leave
into
fisubl
hlt
test
aad
and
orb
rcr
sub
lcall
and
sbb
stos
mov
jns
in
pusha
xchg
in
mov
sti
dec
jb
mov
xor
lods
daa
dec
xchg
imul
ds
negl
inc
leave
arpl
call
mov
shl
jg
xchg
es
dec
mov
lds
mov
xchg
bound
mov
mov
sub
add
test
sub
ss
iret
div
dec
xchg
sub
push
fnstcw
mov
js
cmp
aad
lods
mov
fisttps
push
push
cld
jmp
adc
xlat
or
ljmp
nop
push
adc
fsubrl
xorl
dec
or
sbb
pusha
pushf
mov
out
outsb
gs
xor
cs
stc
adc
push
repz
mov
push
or
push
ljmp
ds
dec
sub
ljmp
jge
cmp
adc
test
mov
dec
dec
in
int
cmc
adc
popf
xor
test
out
xor
ljmp
dec
cmp
inc
xor
call
cmp
adc
adc
fnstsw
paddusw
shlb
cmp
xchg
pop
jbe
inc
pushf
dec
add
sbb
xchg
jle
mov
add
sbb
push
jmp
sub
std
out
lret
lods
movl
hlt
dec
xor
push
adc
mov
adc
sub
pusha
lods
sub
mov
inc
leave
mov
loopne
pop
addb
jnp
pop
ret
adc
mov
dec
inc
lahf
push
aas
mov
fwait
dec
das
or
sbb
repz
cmp
popa
daa
sbbb
gs
mov
icebp
mov
int
test
sbb
and
jo
je
push
cltd
xchg
sti
jno
xchg
mov
push
adc
addr16
or
add
ljmp
mov
loopne
dec
fstl
insb
pop
xor
add
loope
sti
jle
pop
mov
mov
adc
fadds
int3
mov
aad
jmp
imul
push
fdivrs
jnp
enter
push
jecxz
rolb
jb
push
out
cmp
dec
cltd
push
fcmove
mov
pop
xchg
mov
xlat
sub
ja
lcall
loope
jbe
cmp
adc
fwait
cli
cltd
hlt
inc
adcl
imul
popa
arpl
or
gs
bound
pop
outsl
pusha
mov
sbb
aam
jb
rcrb
pop
jmp
or
cwtl
mov
mov
hlt
stos
fsubl
int
jge
into
mov
mov
lcall
and
sarb
adc
mov
dec
jo
scas
sub
push
mov
xchg
aam
pop
inc
outsl
andl
xlat
inc
sbb
push
out
pushf
sbb
rcrb
mov
dec
cli
sub
sub
jae
xchg
xorl
lods
notb
mov
loop
adc
adc
cmp
add
enter
lods
jb
aaa
dec
call
adc
add
mov
mov
xchg
push
enter
testl
arpl
xor
xchg
xchg
fwait
dec
adc
mov
dec
cmp
pushl
adc
xor
gs
push
adc
xchg
sahf
mov
xchg
inc
dec
and
mov
in
push
add
mov
mov
or
adc
sar
negb
inc
arpl
incl
push
xchg
rol
mov
or
pop
mulb
outsl
sbb
and
jno
mov
pop
fdivrs
inc
or
xor
lea
data16
mov
sbb
add
cwtl
mov
xchg
and
mov
jne
lcall
or
xor
std
adc
jne
jns
inc
in
fsubp
sub
popa
lods
int3
xor
stos
cs
fcmove
xor
push
pop
stos
adc
sub
add
shl
into
sub
int3
loopne
orl
xchg
int3
mov
cmp
decb
aad
repnz
jecxz
insb
jae
jae
int3
jne
adc
cmpl
sub
lods
sbb
mov
out
stos
inc
in
aas
xor
push
sub
push
mov
aam
stc
scas
sub
fdiv
in
add
adc
or
mov
adc
mov
in
dec
or
xchg
addr16
push
nop
test
sub
pusha
and
or
jb
jp
lock
xchg
xor
sub
movsb
nop
repnz
rorl
pusha
xor
shrl
sbb
pop
sub
push
pop
mov
movsb
pop
and
les
mov
sbb
clc
pop
addr16
push
iret
xchg
fmull
dec
je
jb
rorb
cltd
fidivs
pop
aad
push
sbb
or
lds
xchg
js
push
out
mov
test
cmp
mov
lret
mov
xor
fstps
xor
dec
or
mov
stc
xchg
add
shll
outsl
ds
xor
in
outsl
iret
int
xor
gs
sub
je
xor
mov
std
cwtl
push
and
cmpsb
loopne
jne
test
sbbb
mov
or
xor
sarb
imul
jbe
adc
add
inc
cld
pop
ljmp
sbb
leave
in
xchg
in
sub
fcmovbe
sbb
dec
movsl
cmp
lods
je
or
sar
add
add
push
mov
dec
roll
shr
mov
and
sbb
push
ss
xor
inc
int3
add
int3
inc
sahf
fmuls
faddp
pop
es
xor
sbb
adc
ss
add
fadds
addb
fistpll
push
cmp
out
inc
mov
lock
outsl
js
test
stc
mov
test
fstl
insl
dec
jmp
leave
in
cmp
ljmp
aam
jnp
dec
or
jmp
xchg
inc
pop
es
push
push
jne
pop
pushf
xchg
pushf
sub
mov
xchg
shlb
mov
aam
adc
pusha
in
ss
sti
jle
jmp
xchg
jne
cmp
mov
call
xor
inc
cmp
aam
pop
mov
rorb
add
push
aad
in
dec
addr16
cwtl
arpl
into
mov
mov
fistpll
roll
push
scas
and
fmull
sbbb
ja
inc
or
stos
pusha
sub
mov
add
add
add
xchg
add
xor
add
add
add
add
add
add
add
mov
add
add
add
les
add
add
nop
add
add
add
add
add
push
lock
add
add
add
add
pop
in
add
add
add
add
stos
stos
add
add
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
add
pushf
leave
add
ror
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
aas
lret
sub
add
and
add
sbb
add
adc
add
or
add
add
add
cld
leave
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
lret
pusha
lret
insb
lret
or
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
clc
lret
sbb
add
inc
lret
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xchg
lret
add
pushf
lret
add
movsb
lret
add
lods
lret
add
mov
add
mov
lret
add
xlat
lret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
lock
add
clc
lret
add
or
add
sbb
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
int
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
into
add
or
add
add
add
cld
int
add
int
add
int
add
int
add
int
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
into
add
dec
into
add
pusha
into
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fmul
add
clc
into
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
iret
add
pushf
iret
add
movsb
iret
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
ror
add
fmul
add
call
iret
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
