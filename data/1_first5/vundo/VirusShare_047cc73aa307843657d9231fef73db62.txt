fsubp
or
add
test
add
xchg
or
test
add
push
add
ss
str
in
add
fimuls
add
pop
add
jmp
add
xor
add
push
or
sbb
push
add
add
rclb
add
dec
dec
or
add
mov
add
add
adc
testb
mov
mov
add
pop
or
clc
imul
jb
add
xchg
xchg
add
or
lds
add
lahf
add
add
les
add
roll
push
cmpsl
str
dec
pop
add
movsb
pop
add
in
add
or
inc
add
add
add
xor
add
faddl
add
adc
add
dec
or
fidivl
or
cmp
push
add
fs
add
hlt
pop
add
push
lock
add
xor
ds
and
or
add
add
fists
add
into
add
add
add
lret
repz
in
pusha
or
subb
rcrl
and
add
icebp
add
add
mov
mov
add
and
add
pusha
or
sbb
add
add
add
jne
add
mov
orl
movw
pop
push
mov
movw
movl
pop
xor
jmp
mov
mov
and
push
mov
sub
popl
mov
mov
and
jmp
sub
mov
and
xor
cmp
jne
lea
mov
mov
and
push
mov
orb
addb
pop
cmp
je
xor
push
popl
jne
push
mov
subb
pop
ret
push
xor
mov
mov
mov
push
mov
subb
orl
pop
lods
mov
pop
ret
push
push
mov
movb
sbbl
pop
mov
add
push
push
push
jmp
xor
lret
lods
xor
sub
push
mov
mov
add
push
mov
orl
pop
pushl
mov
add
add
mov
push
mov
sbbl
pop
add
xor
lea
mov
add
mov
xor
push
mov
subl
pop
rol
xor
inc
push
mov
xorb
orb
pop
cmpb
jne
cmp
je
inc
cmp
jb
mov
add
movzwl
mov
push
mov
orb
sbbl
pop
add
mov
add
pop
cmp
jbe
cmp
jae
pushl
push
mov
addl
pop
pushl
sub
movl
addl
pushl
call
call
pop
push
mov
xorb
pop
pop
pop
pop
leave
push
mov
andw
pop
ret
call
test
jne
ret
push
push
mov
call
push
mov
addl
pop
sub
movl
push
mov
andw
sbbb
pop
addl
push
call
push
push
ror
add
xor
mov
sub
xchg
mov
pusha
call
push
popl
mov
sub
addl
movl
addl
push
call
push
mov
xorl
pop
mov
mov
xor
xor
rol
inc
dec
jne
cmp
je
push
mov
subl
sbbw
pop
cmp
jne
popa
shl
push
xor
push
popl
je
push
mov
xorb
movb
pop
push
call
push
mov
push
jmp
push
and
and
popl
mov
jne
call
mov
and
xchg
out
inc
mov
fwait
pop
insb
jmp
xor
xchg
mov
shrb
shll
aad
push
les
pusha
int3
xchg
jns
adc
add
out
ret
mov
icebp
aaa
out
cmp
adc
stos
int
pop
imul
sbb
out
pop
into
jo
sbb
adc
daa
add
add
loope
push
xor
subw
push
call
push
mov
push
mov
sbbw
pop
push
jmp
pop
mov
push
push
mov
xorb
pop
push
push
xorw
jl
call
cmp
push
in
test
daa
cli
sub
mov
cmc
test
push
mov
sub
sti
imul
xchg
jno
dec
imul
add
les
lods
jle
test
jae
jg
xor
or
outsb
stos
sbb
sbb
dec
gs
cwtl
popf
cmp
test
jmp
outsb
sahf
dec
jmp
inc
or
adc
outsl
jp
push
adc
add
add
mov
mov
push
mov
andb
pop
rep
pop
pop
push
add
mov
add
xchg
push
xor
jmp
sub
mov
push
popl
add
sub
mov
add
jmp
mov
and
mov
xorb
stos
xlat
jg
inc
in
sub
push
xor
nop
sbb
mov
in
mov
imul
lret
xchg
data16
adc
jbe
std
data16
cmpsl
in
push
std
mov
add
repnz
inc
xor
arpl
add
or
jne
add
push
mov
xorw
subb
pop
jmp
call
insb
push
pop
fadds
ret
mov
xor
lock
cmpsl
inc
pusha
daa
or
out
or
fstl
add
adc
mov
out
aas
ret
orl
es
and
and
and
jmp
push
adc
ret
std
call
mov
dec
cmp
add
lret
cli
arpl
stc
jne
dec
lock
fimuls
and
testl
pop
cmp
cmp
mov
fnstcw
nop
or
sbb
repnz
or
or
xchg
rcll
call
loop
pop
pushf
in
cltd
push
mov
dec
add
std
leave
in
stos
aaa
add
outsl
pop
push
pop
mov
pop
pop
fadds
add
sbb
sub
sbb
xchg
test
aaa
xorb
nop
push
xchg
push
frstor
push
cmc
ds
pop
and
loop
pushfw
int
sbb
out
ret
loop
outsl
xor
sbb
fdivl
cld
inc
mov
push
aas
pusha
lret
add
cmp
lods
add
add
sbb
push
and
sbb
arpl
sub
jmp
insb
rcrl
bound
lods
lds
movsl
arpl
fsubl
or
mov
inc
mov
xor
mov
inc
repnz
push
add
cmp
mov
cmp
cli
imul
mov
test
adc
imul
repnz
or
or
popa
lock
jnp
js
push
lds
mov
mov
inc
lock
hlt
add
lret
fsubrs
jo
mov
enter
test
gs
sbb
aam
sub
mov
out
pop
xchg
dec
or
jnp
call
adc
pusha
sub
sub
addr16
addr16
push
jge
pusha
push
mov
sbb
xchg
sbb
fildl
xor
mov
jb
in
mov
sub
jmp
cmpsl
dec
pop
fsubr
mov
imul
push
jnp
es
insl
sub
dec
insl
popa
nop
push
rorl
movsl
dec
mov
inc
xor
add
out
outsb
loop
test
push
dec
or
and
imul
cs
fmull
sbb
int
incb
outsb
dec
xchg
cltd
pop
xor
jmp
jge
and
cmp
mov
aaa
outsl
xor
xor
fcomps
dec
add
sbb
dec
clc
jp
mov
mov
cmp
out
add
pop
dec
xchg
pusha
and
push
jecxz
test
adc
iret
enter
adc
pop
mov
loope
das
jbe
mov
cmc
out
push
repz
icebp
push
cwtl
xchg
bound
mov
jecxz
add
sub
pop
sahf
movsl
adc
cmc
es
std
add
insl
stc
pop
movsb
or
adc
pop
jg
cmp
cld
cmc
mov
add
lahf
sbb
loope
inc
mov
sub
sub
pop
push
xlat
mov
mulb
mov
lcall
imul
xor
inc
jge
shlb
shufps
xor
aaa
push
add
and
mov
push
mov
xchg
lret
cmpl
lcall
scas
cmpl
and
movsl
jnp
inc
aad
mov
repnz
adc
pushf
dec
pop
sbb
mov
and
fimull
in
push
mov
mov
xorb
mov
outsl
adc
es
push
jbe
xor
xor
inc
loop
and
int3
inc
sub
inc
loop
mov
test
mov
loopne
pushl
mov
pop
fdivr
sub
mov
or
xlat
test
mov
cltd
jle
dec
or
mov
lock
inc
orb
aas
test
dec
jo
scas
xchg
in
cmp
stos
push
in
and
xor
adc
in
pop
sti
push
sub
or
lods
pop
pop
or
jl
les
mov
jne
adc
mov
jns
ret
addr16
roll
gs
xor
adc
add
mov
outsl
or
mov
pusha
scas
sub
data16
ds
loop
shr
enter
mov
jo
cmp
addr16
lret
jecxz
push
push
xlat
xchg
inc
jp
nop
inc
mov
rolb
push
ret
push
ret
popa
lcall
jmp
push
push
ret
and
xorl
inc
mov
mov
cmpsb
ja
cltd
pop
fisttpl
pop
in
sub
jae
mov
push
ja
inc
jmp
movsl
jb
out
or
repz
dec
jnp
inc
mov
xor
inc
push
sahf
dec
push
mov
mov
fmull
xchg
clc
jb
addr16
dec
add
and
imul
xor
xchg
subb
mov
lds
mov
xchg
mov
fnstcw
nop
or
outsb
repnz
mov
lcall
call
inc
mov
sarl
xorl
sbbb
idivb
cmovae
fisubs
cltd
imul
or
sbb
xchg
cli
loopne
add
pushl
inc
add
aas
xor
loop
inc
icebp
jae
in
idivl
jmp
lods
das
insl
mov
in
cmp
and
mov
sbb
push
pop
dec
push
in
movsl
jmp
aas
jge
fistpll
cmp
sbb
sbb
push
mov
clc
mov
fldl
repnz
xor
pop
fadd
and
jl
ds
and
cmpsl
adc
jbe
or
popf
sti
fmull
out
mov
in
mov
fcoml
inc
negb
add
gs
and
test
mov
leave
out
shrl
inc
inc
cmp
popa
js
repnz
scas
sbb
outsl
pop
inc
inc
in
iret
mov
outsb
push
shll
add
xchg
imul
inc
xchg
mov
test
fwait
call
cmp
sub
inc
and
inc
sbb
es
mov
in
add
cmp
jg
rol
mov
sbb
push
mov
mov
pop
xor
mov
hlt
or
mov
dec
movsb
fcmovnb
data16
enter
ds
jae
adc
repnz
nop
pushf
inc
pushf
adc
mov
or
jle
cli
mov
aas
int3
in
js
xor
rol
inc
dec
mov
mov
repnz
jmp
roll
dec
adc
jne
add
xlat
sub
pop
sbb
popf
dec
dec
dec
lea
outsl
repnz
clc
jmp
sbb
mov
push
iret
xor
mov
std
sti
testl
and
cld
addr16
add
cltd
jle
shll
mov
push
mov
outsb
cmp
mov
mov
das
jne
inc
jge
mov
orl
mov
aaa
mov
roll
jbe
inc
xor
inc
into
fwait
into
fstpt
inc
int3
ja
mov
cli
jle
mov
movl
into
ss
cs
adc
sub
sbb
jo
mov
or
and
stos
sub
mov
movq
testl
adc
movsl
xor
jl
fwait
sbb
jns
mov
loope
popf
out
mov
jb
push
push
push
add
sub
push
arpl
mov
add
daa
xchg
dec
xor
movsl
jecxz
xor
int3
cmp
mov
fisubrl
jae
inc
fs
cmc
jg
sub
sub
ret
rcll
pop
inc
pop
inc
mov
ljmp
enter
jl
jno
insb
cmp
inc
insl
lea
xchg
cwtl
add
lea
es
movsb
push
lahf
movsb
stc
fnstcw
xor
sbb
fiaddl
xor
mov
xchg
and
cwtl
sbb
xor
repz
adcb
and
in
test
movsl
jb
sub
add
jo
xchg
add
loopne
xor
or
sar
sub
inc
xor
lock
jl
adc
leave
imul
stos
sarb
mov
jp
dec
adc
inc
movsl
or
movsl
pop
pop
iret
mov
inc
xor
jl
sbb
or
sbb
std
add
sub
cmp
mov
push
push
imulb
std
cli
ja
add
lcall
fildll
subb
mov
xchg
in
or
popa
outsl
into
mov
push
mov
mov
pop
cmp
inc
pop
rol
add
insb
pop
outsb
inc
roll
adc
pop
inc
dec
sahf
in
movsb
mov
mov
and
andl
push
mov
xor
add
inc
shll
jl
push
fisubrl
ljmp
pop
lock
pop
in
enter
jo
popa
xor
insl
aas
pusha
lahf
mov
and
addr16
orl
mov
push
loopne,pt
out
shl
ss
jns
pop
push
in
adc
sbb
sbb
fwait
sub
mov
lds
ds
mov
jbe
movsl
leave
outsl
mov
loopne
aam
or
xchg
cmp
in
push
xor
inc
hlt
jne
lcall
pop
aas
adcl
inc
je
mov
or
push
xchg
loope
inc
fldt
sahf
nop
clc
out
mov
and
sub
mov
dec
nop
add
inc
and
xchg
imul
xchg
sbb
cmpsl
and
or
or
imul
push
jmp
adc
fists
xchg
xchg
fcomps
push
sbb
into
lds
add
pop
movsb
or
adc
jle
jb
ret
add
adc
pop
pop
cs
filds
inc
or
aam
stc
adc
mov
lret
xor
add
cltd
and
cld
test
inc
pop
fadds
and
in
mov
lret
add
cs
addl
idivl
xor
aad
push
negl
jne
jbe
and
sub
cmp
cmpb
mov
sub
cltd
jmp
ds
enter
mov
xchg
clc
inc
jb
mov
adc
mov
inc
sahf
dec
pop
fcomps
push
pop
inc
inc
fsubs
adc
mov
push
dec
add
insb
ret
inc
ret
inc
xchg
test
cmp
add
leave
cld
icebp
mov
aas
ljmp
cli
push
and
fmull
or
mov
adc
jle
adcl
into
pop
mov
adc
sbb
fadds
sub
push
int3
or
fmull
lods
stc
and
dec
inc
and
push
pop
inc
sbb
jmp
xchg
aaa
es
cmp
or
outsl
pop
jne
repnz
sahf
mov
insb
inc
pop
fadds
xchg
xor
mov
cmp
leave
push
sbb
aas
and
add
bound
mov
mov
cmp
and
jp
mov
add
ja
rcrb
mov
inc
movsb
adc
mov
xchg
mov
mov
xchg
mov
or
add
mov
mov
fmul
adc
bnd
mov
inc
mov
test
pop
sbb
popa
int3
jns
push
ja
int3
dec
dec
call
js
mov
inc
clc
nop
sub
mov
pop
bound
push
cwtl
pop
out
testl
arpl
daa
mov
test
aad
xor
inc
insl
fidivs
ss
rolb
xchg
mov
lcall
test
fiadds
es
sahf
insb
fadds
or
and
or
hlt
cmp
lods
inc
sub
aad
ljmp
pusha
pop
pop
or
icebp
in
outsb
dec
cmp
faddl
jl
cmpsb
mov
or
repz
out
daa
dec
out
jl
jno,pt
mov
add
or
int3
aam
iret
test
divb
cli
negb
mov
or
mov
das
push
jmp
mov
mov
or
xor
inc
enter
inc
xor
inc
enter
inc
xor
adc
lret
sub
out
fstps
ret
aam
fistpl
cmp
pop
adc
xchg
out
imul
rorl
sahf
mov
xor
mov
sbb
aam
push
divb
inc
xor
into
in
lods
mov
mov
jne
sub
fs
xlat
pop
mov
lret
sub
outsb
push
movsl
rcrb
pop
popf
test
insl
push
mov
roll
hlt
loope
cltd
sbb
mov
pop
into
sbb
shl
stos
dec
cmpb
or
add
sub
fs
lea
inc
shrl
mov
mov
pop
adc
cmpsb
lock
xor
xor
insl
pop
cltd
ss
jo
push
data16
sahf
stos
sbb
jmp
shll
aas
in
imul
jo
inc
xor
inc
add
xchg
mov
fmul
sbbl
lea
add
shlb
xchg
push
mov
lahf
or
pushf
int3
cmpsl
xchg
pop
jo
mov
mov
sahf
push
fiaddl
sbbl
pop
popa
clc
mov
dec
mov
lods
out
jmp
icebp
pop
sbbl
popa
stos
loope
xor
sub
cmc
sbb
sub
popa
and
mov
bound
pop
adc
push
sbbb
mov
rcll
mov
cmc
clc
stos
xor
mov
push
adc
repnz
incb
and
xor
test
test
setb
adc
stos
cltd
dec
cmpsl
scas
mov
icebp
popa
incb
movd
movsl
in
leave
in
sbb
dec
xor
inc
jnp
jo
sub
jmp
test
daa
out
jns
and
cltd
mov
in
sbbl
fnstsw
xlat
or
arpl
xlat
pop
push
xchg
in
fcompl
insb
cmp
pop
imul
adc
sbb
push
fs
xchg
outsl
xchg
test
xor
mov
and
push
xor
inc
fsubs
inc
testb
adc
sub
mov
sub
loop
test
xor
pop
jno,pt
fcoms
pop
in
scas
insl
add
jecxz
mull
mov
jg
movsb
mov
push
xlat
repnz
lods
adc
lock
enter
mov
cmp
xchg
push
mov
data16
xor
inc
lahf
fs
push
jno
push
lods
out
ljmp
jnp
cltd
push
push
popa
sub
mov
sbbb
xor
mov
push
pop
fadds
mov
inc
sub
mov
or
pop
push
int
es
jns
inc
push
jae
scas
shll
jp
movsl
mov
mov
mov
dec
outsl
add
es
sbb
ret
inc
clc
inc
xor
in
push
call
in
ret
push
aas
rcrl
out
cmp
call
shll
lcall
sbb
jne
pop
adc
xor
mov
add
lods
stos
imull
or
mov
jnp
aaa
lods
cld
sub
dec
or
pop
dec
xor
divb
mov
push
std
mov
testl
leave
jae
fcoms
jge
int
push
adc
outsl
movsb
push
lret
mov
call
cmpb
pop
push
fsubr
aaa
pop
dec
and
shl
mov
jmp
bound
aaa
subl
je
loope
pop
stc
jp
push
cmp
xchg
loope
add
ljmp
lods
shrb
repnz
mov
lret
popa
mov
xchg
dec
xchg
or
xchg
jge
imul
call
cmpb
sub
sub
fs
xchg
add
and
inc
adc
dec
lcall
push
cmpsb
jae
xlat
xchg
sbb
mov
mov
xchg
mov
jns
aam
jmp
lods
int
rclb
sbb
movsl
adc
xchg
cmp
cmp
arpl
lea
fldenv
fcomps
push
inc
stos
mov
fwait
aad
inc
in
outsb
add
movsb
lahf
sarb
nop
scas
mov
test
mov
sti
push
outsb
sti
and
cwtl
flds
adc
mov
shrb
repnz
movsl
das
imul
fildl
inc
xor
int
mov
es
dec
test
push
jecxz
xchg
fs
mov
xchg
mov
movsl
add
outsb
enter
and
pop
xchg
cmp
pop
shlb
cmpsb
cmpl
fs
xor
or
push
adc
div
add
lods
jge
push
xchg
lea
xor
in
fsts
adcl
sar
pushf
out
cli
mov
push
iret
add
lahf
lods
push
shll
mov
clc
and
stc
ds
cmpsl
pushf
push
cmpsb
iret
lds
lds
cmp
iret
rorb
adc
adc
inc
xor
fs
repnz
xor
cmp
call
lds
fdivp
subb
aam
pop
xchg
or
sub
jp
mov
mov
or
dec
mov
decl
push
out
scas
push
xor
cmc
fdivp
sbb
adc
and
sbb
inc
mov
popl
movsl
shl
sub
xorl
mov
fst
pop
cltd
dec
popf
cmp
and
sbb
push
sbb
push
jo
ret
pop
ret
lea
ss
aas
popf
pop
fsubl
fists
andb
int3
inc
es
popl
xchg
inc
xor
mov
stc
push
jns
bound
adc
sub
iret
out
push
inc
mov
cwtl
call
sbb
lret
cmp
sub
and
mov
fadds
mov
pop
imul
inc
pop
sbb
push
adcb
push
fs
mov
sub
popf
xchg
in
lcall
sub
or
push
and
jne
pop
inc
pop
ljmp
sbb
fiadds
pop
aas
leave
mov
or
or
xor
sarl
dec
icebp
inc
lods
mov
leave
popa
ret
out
and
notl
cmp
add
pop
fadds
push
inc
xchg
lock
xor
aaa
imul
sbb
pop
cmp
jae
fidivl
or
mov
mov
aam
out
xor
rcll
loopne
mov
adc
bswap
and
or
xchg
cld
jo
insb
dec
add
adc
data16
sub
inc
xor
or
and
cmpsb
jecxz
pop
jns
gs
test
add
sbb
xlat
pop
xlat
add
push
sbb
push
xor
mov
fimuls
cs
dec
shll
or
and
pop
fcoms
and
cmp
lret
mov
cwtl
sbb
int3
loope
mov
out
and
in
in
mov
mov
mov
cmc
int
loop
inc
adc
inc
sub
cwtl
adc
icebp
xor
inc
aaa
mov
test
jl
lds
jl
cwtl
xor
dec
pusha
push
flds
repnz
fsubs
jmp
adc
sahf
add
jl
cmp
aam
stc
sub
or
cli
out
test
or
addr16
add
mov
pop
aas
mov
mov
sub
ja,pn
push
addr16
popa
outsb
ret
push
lods
fs
sub
push
arpl
xchg
inc
div
cli
jnp
mov
push
sbb
pop
inc
mov
and
dec
pop
pop
loopne
push
add
lahf
pop
loope
out
push
mov
dec
fucom
repz
cwtl
sub
sub
icebp
mov
in
fcompl
sub
out
scas
cmp
outsl
mov
or
push
leave
imul
inc
add
popa
rolb
ljmp
xchg
mov
mov
xlat
sbb
xchg
mov
xchg
fiadds
xor
popf
mov
cmc
mov
dec
in
out
lods
inc
outsl
mov
dec
cmp
or
mov
mov
push
pushf
inc
xor
xor
inc
xor
pop
pop
inc
add
xor
lods
add
cmc
sbb
cld
pop
fstpl
test
enter
ret
das
mov
mov
cmp
xor
mov
outsb
pop
dec
ds
pop
fadds
or
mov
pop
fnstsw
sbb
repnz
fcmovu
jbe
add
frstor
movb
cld
cmp
ljmp
repnz
jmp
add
xchg
in
mov
je
jne
push
rcl
push
inc
add
mov
rcrb
stc
outsb
and
int3
int3
mov
insl
pop
int3
xor
pop
fadds
add
fwait
sbb
jne
fcmovnb
sbbl
shll
dec
dec
jg
adc
test
scas
ret
pop
repnz
lcall
pop
sbb
cwtl
test
dec
mov
out
mov
jnp
out
fnsave
test
movsl
cmpsl
adc
mov
cmp
mov
dec
incb
clc
mov
pop
push
pop
pop
call
xorl
sub
addr16
adc
lock
mov
add
arpl
push
push
and
inc
lea
pop
js
add
adc
mov
xchg
popa
xor
push
jge
popf
sbb
int
jl
popa
cld
inc
inc
mov
mov
sbbb
cli
mov
mov
inc
out
out
cmp
xchg
lret
in
lock
sahf
test
frstpm(287
sbbl
sbb
mov
pop
mov
ret
mov
sub
jge
jg
push
mov
inc
push
rcl
subb
sbb
mov
dec
sub
xor
call
cmp
cmp
cltd
loope
notb
sbb
adc
inc
pop
add
pop
jecxz
push
adc
cmpsb
xchg
sbb
int3
cmp
hlt
mov
sub
inc
and
in
add
cmpsb
sbb
inc
imul
inc
mov
ret
and
aas
das
mov
lds
or
mov
push
lahf
mov
imul
js
imul
in
push
mov
shlb
aaa
xchg
hlt
jbe
insb
std
push
fucomp
pop
fdivrl
mov
dec
dec
pushf
push
pop
dec
stc
in
sub
lret
push
or
or
loope
inc
sbb
stos
jb
or
push
xor
inc
sbbb
inc
mov
jmp
enter
mov
cld
xchg
xor
outsb
inc
jmp
mov
in
xchg
divl
sbb
push
sbb
xchg
sub
imul
lods
jb
loop
pop
inc
inc
mov
stos
sbbl
pop
push
cmp
jmp
sbb
sbb
call
mov
mov
negl
jo
xchg
mov
scas
scas
pop
scas
or
mov
std
ljmp
pusha
push
nop
xchg
xchg
lods
xchg
in
or
mov
subl
push
add
gs
aas
mov
cmp
mov
outsb
popl
lret
shlb
pop
aad
jnp
add
xor
fnstcw
mov
push
xchg
nop
dec
mov
push
out
mov
repz
ljmp
sti
sub
inc
cmpsb
mov
sub
mov
push
setno
fstps
pop
sub
fsubp
test
push
out
inc
adc
xor
adc
fadds
cmp
pop
and
sbb
mov
sahf
push
jo
mov
mov
mov
add
push
shrb
fdivrs
sbb
lcall
mov
cs
jbe
or
mov
fstl
push
push
mov
je
sub
adc
icebp
push
aad
lret
rcrl
in
pop
out
test
push
out
jle
mov
popf
dec
dec
or
bound
mov
fcoml
popf
dec
into
imul
shr
mov
xor
push
shll
mov
mov
les
neg
in
or
cmp
scas
cltd
dec
xchg
sub
push
jg
jmp
cmp
adc
int3
es
add
cmp
or
mov
add
shrl
mov
aad
and
sub
jns
sbb
pop
dec
push
xor
adcb
mov
inc
in
insb
pop
fsubrs
xchg
sbb
jns
sub
out
fsts
adc
add
xchg
sub
push
mov
js
push
xor
xor
xlat
mov
fst
or
cmp
aad
mov
mov
ret
pop
into
call
sbb
xlat
adc
sbb
in
jne
push
adcb
push
outsb
pop
pop
inc
inc
mov
lret
cmp
mov
pop
scas
mov
xchg
sarb
add
dec
add
fadds
in
daa
sahf
cmpsb
jbe
into
sbb
aas
mov
icebp
cmp
call
pusha
testb
fsubs
repnz
xor
pop
andl
movsb
sar
loop
and
push
xchg
jns
xor
int3
imul
xchg
shll
mov
shrb
call
fwait
mov
outsb
ljmp
fs
inc
sub
shlb
ds
out
je
inc
sahf
mov
pop
fadds
push
mov
sub
or
outsb
pop
imul
movsb
movsl
test
sbb
sbb
xlat
mov
icebp
sub
inc
repnz
mov
cmp
xchg
popa
cmp
cld
pmaxsw
cmp
insl
sub
repz
sti
mov
out
xchg
repz
stc
sbb
jnp
and
sbb
rcrl
cmp
insb
cmp
inc
les
movsb
add
shlb
lret
mov
pop
xchg
lret
cld
rcrb
and
inc
mov
faddl
pusha
or
sub
movsl
ror
enter
mov
in
leave
es
shlb
loope
inc
sti
neg
ljmp
scas
cltd
dec
xchg
sub
fwait
adc
icebp
push
subl
in
rol
dec
xchg
and
sub
mov
addl
dec
xchg
iret
sbb
xchg
dec
push
xor
outsb
sub
xor
mov
dec
popa
and
pop
push
jbe
dec
fdivs
push
jecxz
pop
js
scas
test
cld
add
inc
or
sbb
mov
outsb
dec
pop
lret
stos
cmp
int
jns
arpl
adc
gs
iret
jl
mov
dec
testl
int3
test
inc
mov
inc
outsl
add
fadds
mov
call
mov
loope
enter
jmp
sbb
je
aad
out
jo
cs
inc
stos
stc
xchg
mov
jno
nop
mov
cmc
cmpsb
pop
cmpsl
pop
push
xor
shlb
jmp
add
and
dec
in
mov
xor
arpl
jb
shrl
loopne
jns,pn
cmp
int3
aas
fcmovne
fwait
lret
jl
cmp
ja
xchg
adc
outsl
pop
jb
lock
sub
icebp
jl
call
sahf
ss
dec
sarl
jo
cld
inc
enter
jno
repnz
mov
mov
je
out
jmp
in
cmpsl
add
les
insl
pop
add
scas
lahf
jmp
scas
lahf
fdivp
fnstenv
inc
lods
jbe
sbb
pop
pop
and
xor
sub
xor
leave
shlb
hlt
jo
lods
mov
dec
out
leave
jbe
fwait
pushf
ljmp
dec
repnz
loop
int3
xchg
pop
out
cmp
leave
inc
out
mov
add
or
repnz
scas
sbb
cmp
push
ss
incl
gs
jae
inc
mov
xchg
outsl
sbb
sbbb
shl
sbb
in
dec
mov
push
inc
stc
push
jle
stos
fcoms
inc
and
int
fsubrp
nop
jge
mov
enter
loop
push
lock
sub
sub
and
dec
add
or
pop
call
inc
inc
ja
sub
iret
mov
jo
sub
test
pop
fcoms
clc
test
jmp
mov
pop
les
das
sbb
cli
movsl
sbb
xchg
mov
in
mov
mov
mov
pop
fadds
adc
roll
repnz
xchg
out
out
dec
je,pn
dec
xor
lds
movsl
fucomi
int
js
outsb
dec
xorb
movsl
mov
lods
jge
cmpsl
jno
into
lea
push
add
cli
sub
jmp
fsub
xchg
cmc
les
mov
xchg
push
sbb
jecxz
frstpm(287
sbbl
push
cmpsl
mov
push
or
lods
sbb
stos
rorl
lock
nop
ds
into
negb
lea
movsb
lahf
in
lret
lret
mov
cwtl
inc
sbb
mov
stc
nop
or
arpl
cmpsb
push
test
jmp
jb
outsl
mov
add
push
and
dec
fdivs
out
cwtl
sbb
scas
sub
pop
jecxz
sar
popf
dec
stos
push
inc
out
xchg
jecxz
cli
jg
test
imul
sub
mov
sbb
jnp
sbb
data16
push
roll
push
mul
popf
push
pop
push
xor
dec
sbb
push
mov
fadds
pusha
movsb
mov
cltd
mov
jbe
inc
xor
es
xorb
add
int
xor
xor
and
insl
mov
fiaddl
jmp
dec
inc
push
xor
mov
out
in
inc
scas
pop
test
cli
push
adc
mov
jmp
mov
out
aad
xchg
xlat
mov
jl
inc
dec
mov
inc
imul
loop
testb
rolb
adc
fidivs
scas
pop
gs
xchg
push
mov
push
pop
fadds
and
xor
mov
ja
ljmp
mov
cmpsl
and
inc
mov
fnstenv
incb
repnz
cld
xor
ds
inc
js
scas
popa
loopne
enter
flds
pop
pop
inc
push
fdivrl
mov
mov
sbb
inc
xor
pop
imul
iret
sbb
es
or
out
aad
je
inc
sti
es
mov
sbb
les
push
mov
cmp
out
xchg
das
addr16
cmpsl
push
fmull
rol
lods
lahf
test
pop
fmul
jae
std
fwait
sub
int
xor
inc
enter
inc
xor
int3
imul
jo
cli
mov
inc
xor
pop
ficoml
or
cmpsb
or
jp
jne
repnz
das
add
adc
inc
and
fwait
lods
mov
cmp
add
cs
xchg
and
or
jp
or
adc
pusha
test
aaa
mov
mov
inc
inc
pop
outsl
mov
movsl
outsl
push
ucomiss
jne
faddl
push
mov
pusha
push
inc
dec
je
jno
out
pop
iret
add
sahf
nop
repz
fsubrs
xor
jl
inc
pop
sbb
pusha
daa
test
push
es
mov
mov
cmp
push
mov
roll
es
es
jno
xor
adc
push
and
sbb
lods
das
jle
push
fistps
cltd
sbb
test
sbbb
pop
jae
clc
pop
scas
hlt
cmc
js
push
xor
inc
sub
repnz
and
clc
fwait
cld
cmp
ljmp
stos
mov
cmpsl
fcoms
jg
or
xchg
push
es
data16
inc
stc
pop
xor
ds
int
add
loopne
mov
popa
inc
dec
ja
aam
sbb
popw
repz
mov
leave
hlt
cmp
orl
fstpl
inc
push
add
xchg
pop
fadd
cld
add
addb
sbbl
ret
imul
lock
call
les
out
popa
pop
inc
xchg
push
cld
mov
dec
iret
mov
in
out
lock
imul
jle
add
cmc
pop
dec
ds
call
mov
lods
ss
xor
inc
sbb
outsl
enter
dec
jle
lret
not
ret
mov
in
xchg
jl
and
lods
inc
sbb
ret
mov
or
jne
xchg
sub
cli
inc
xor
outsl
xchg
sbb
sub
repz
add
inc
xor
mov
sbb
xor
dec
inc
add
mov
push
jmp
mov
dec
cli
dec
dec
pop
cmp
jno
shr
mov
sbb
popf
insl
or
stos
ljmp
sbbl
jne
xor
cmp
insl
pop
pusha
xor
mov
sub
inc
sbb
ds
adc
add
into
cmp
je
mov
add
fadds
jne
test
jecxz
inc
xor
sahf
test
pop
fdivs
enter
jmp
fs
mov
scas
push
ljmp
jmp
sub
xor
out
sbbl
pop
cmp
add
mov
pop
fsubrs
pop
repnz
jb
pop
lods
in
imul
out
aad
jmp
cmp
gs
lea
mov
dec
mov
fisubl
sbb
cs
int
mov
mov
inc
stos
aaa
std
orb
insl
xor
inc
xchg
scas
shll
mov
popf
leave
arpl
push
leave
mov
les
cmp
adc
gs
in
xor
and
cmp
mov
scas
inc
or
sub
adc
pop
movsl
mov
or
jbe
nop
sbbl
iret
jmp
mov
hlt
mov
in
cwtl
test
shrb
mov
icebp
sub
xor
sub
add
xlat
mov
js
mov
cmp
mov
cmpsl
repz
je
bound
sbb
lcall
jb
dec
clc
sub
sbb
sti
mov
jns
or
xor
xor
pop
loop
lock
int
and
pop
loopne
mov
dec
into
fstpt
cs
inc
subb
push
or
pusha
ds
test
sbb
shll
mov
std
dec
or
push
push
sub
aaa
mov
push
pop
cmp
sahf
push
adc
icebp
add
bound
and
inc
mov
aam
cwtl
fadds
cmp
xchg
dec
clc
mov
and
cmc
pop
mov
std
in
iret
push
inc
shll
push
sbb
cwtl
xchg
repnz
jle
push
cmpsb
xor
xchg
pop
fmull
dec
push
popl
xor
pop
mov
inc
dec
insb
sub
sub
and
or
jbe
out
sub
testl
cmp
fucomp
or
lods
out
ror
pop
out
lock
enter
fdiv
lret
cmp
ljmp
mov
and
sub
mov
xchg
cld
mov
subb
inc
xor
mov
out
add
mov
or
out
and
lods
ss
and
inc
mov
in
sahf
adc
std
inc
jg
pop
neg
and
jbe
cltd
mov
fldenv
in
pop
or
int
insl
popf
dec
jne
popa
gs
insb
push
stos
rolb
sbb
dec
iret
movsl
fiaddl
bound
sbb
popa
pop
insb
pop
mov
imul
mov
sbb
ss
cli
loope
or
cmp
push
mov
add
cmp
or
adc
push
es
cmp
lods
xor
fstpl
dec
sbb
pop
cmp
test
xor
mov
sbb
enter
mov
imul
aad
rorl
mov
adc
inc
xor
sub
dec
mov
mov
jg
or
lods
leave
push
pop
cmp
addr16
decl
nop
data16
and
sahf
cmp
lods
pop
fcmovnu
popa
incl
divl
dec
mov
es
jae
cmp
test
xchg
ljmp
sub
test
jecxz
adc
repnz
les
jbe
fmulp
cld
adc
pop
pusha
test
aaa
or
int
xchg
repnz
jmp
arpl
cmpsl
push
xor
or
add
inc
outsl
inc
xor
mov
push
xor
push
insb
cmp
fadds
arpl
mov
mov
pusha
in
jp
inc
test
clc
loop
xchg
imulb
pop
xor
mov
push
imul
or
sbb
mov
imul
jg
pop
sbb
dec
std
mov
shrb
pop
pop
jmp
stc
lret
cltd
popa
sub
mov
stos
add
ficoml
pushf
xor
push
cmp
pop
and
pop
test
scas
into
or
xor
repnz
pop
mov
xor
test
mov
pushf
mov
ja
sub
int
cli
sahf
movsb
sbb
add
cmpsl
or
push
mov
mov
mov
push
arpl
mov
dec
iret
push
sbb
mov
lods
je
out
into
xlat
movsb
push
push
mov
aam
inc
pushf
cmc
stos
std
pop
add
fists
lcall
and
and
push
and
sub
scas
mov
or
push
or
test
mov
xchg
cwtl
rclb
and
pushf
lea
insb
push
pop
fadds
inc
mov
or
loopne
push
inc
lods
int
adcl
fmuls
ds
dec
rorb
fadd
scas
mov
jl
sbb
cmp
jmp
dec
dec
frstor
xchg
sbb
gs
inc
es
enter
dec
les
repz
xchg
cmp
mov
pop
adc
arpl
divps
lock
xchg
jae
loope
sbb
outsb
bound
mov
mov
lds
adc
mov
sbb
jle
sub
pushf
in
jns
jo
push
jmp
inc
ds
pusha
inc
pushf
call
arpl
idivb
jp
inc
xor
cmp
movsb
imul
pop
in
cwtl
lret
inc
addr16
xchg
outsb
insb
dec
bnd
pop
inc
mov
rol
data16
rolb
rol
das
add
aaa
mov
push
mul
js
sub
mov
xchg
and
jns
ret
jne
arpl
inc
mov
add
cmp
mov
sbb
lea
cmp
arpl
pop
fnstsw
inc
cld
aaa
or
sbb
dec
xchg
push
pop
lret
xchg
cmpsb
and
xchg
arpl
repz
mov
sbbl
push
xor
ffree
andb
sub
lahf
idivl
fwait
stc
lods
cmovo
cmp
lods
sub
in
aas
mov
popa
aas
xor
push
rolb
hlt
dec
push
add
mov
stc
insl
jle
sub
out
pusha
dec
xchg
fadds
xlat
cmp
mov
fbld
push
pop
les
push
fisttps
jle
mov
push
and
jns
push
xor
in
loope
cmpsb
pop
lcall
sub
ds
pop
pop
test
xlat
or
adc
leave
int
jne
push
xor
leave
je
mov
fs
dec
cmc
mov
push
pop
fadds
cmp
adc
repnz
jb
add
mov
and
iret
dec
sbb
adc
dec
insb
lods
inc
or
mov
std
dec
or
jge
mov
adc
mov
pop
call
push
stc
pop
mov
xchg
dec
adc
into
lret
jl
jae
aaa
scas
jno,pt
stos
movsl
rcr
push
lahf
push
imul
aam
in
push
push
aad
cltd
jmp
ljmp
leave
or
jae
sahf
inc
inc
pop
push
sub
jle
jp
sub
nop
orl
xor
jno
dec
nop
sbb
pop
addr16
loope
add
fadds
ds
adc
repz
stc
pop
mov
jo
sbb
imul
loopne
test
push
hlt
cli
push
dec
jno
leave
mov
std
or
mov
int
sbb
sbb
pop
sub
jle
in
and
sub
push
sub
mov
popf
xchg
fcmovne
sbbl
arpl
xchg
mov
gs
fisttpll
add
outsl
leave
xchg
mov
outsl
jmp
mov
int3
push
adc
mov
int
adc
in
imul
movl
inc
sbb
pusha
lret
xor
dec
or
inc
xor
sahf
mov
add
mov
rolb
out
sbb
push
dec
das
sbb
fidivrl
or
das
cmpsb
inc
or
js
shll
mov
lock
sub
jnp
xor
inc
push
cwtl
lods
and
dec
mov
adc
or
mov
negl
jl
fbld
lahf
ret
and
push
scas
add
mov
push
loope
xor
mov
aaa
je
outsl
pushf
es
mov
adc
icebp
adc
aaa
pop
push
cwtl
adc
mov
ljmp
or
mov
pop
and
cltd
and
add
mov
test
js
mov
xchg
sbb
in
sbb
jb
xor
inc
jbe
sbbl
pop
add
shlw
mov
sbb
inc
mov
pop
lea
mov
push
ss
pop
mov
add
enter
xchg
inc
mov
xor
rolb
fidivrs
xchg
addr16
lret
nop
xor
adcl
add
dec
jno
cmp
xlat
push
movsl
icebp
sub
test
aam
pop
repnz
add
in
fsubrs
insb
mov
shlb
and
scas
push
adc
test
cmp
xchg
sarb
push
inc
push
sub
push
andl
stos
mov
jbe
pop
add
inc
xor
ss
mov
jb
adc
or
pop
jno
pop
mov
adc
jp
jns
xchg
jns
movsb
mov
mov
sbb
insl
xchg
jl
ret
push
andl
into
sub
int3
sahf
je
pop
adc
mov
ret
ret
movsb
mov
cmp
and
je
cmpsb
push
sub
movsl
inc
ja
aam
push
sub
sbb
and
out
jns
ror
ret
mov
push
daa
jg
data16
pushf
inc
mov
insl
lds
pop
fadds
cs
sbb
pop
mov
repnz
pop
cwtl
sub
cmp
pop
movsl
hlt
push
xchg
cmp
push
ret
jl
loope
pop
inc
imul
dec
hlt
mov
push
adc
inc
clc
push
arpl
fadd
pop
mov
xchg
ljmp
bound
push
xchg
pop
cmc
dec
fnsave
xchg
pop
and
mov
ja
mov
fistpll
xchg
sub
mov
int3
xchg
lret
xchg
std
push
add
sbb
jecxz
int
inc
or
sub
mov
xor
mov
fidivrl
je
rclb
out
in
les
jno
push
mul
xchg
cmp
jmp
ret
mov
mov
sar
lods
in
jmp
sbb
ret
test
outsb
xchg
test
stos
lods
outsb
add
dec
mov
insb
xor
inc
lock
imul
adc
push
mov
push
fsubl
in
mov
les
and
jns
cmpsb
push
shr
push
pop
cmpsl
push
pop
cmc
add
inc
rcrl
call
lds
loopne
fadds
or
jl
shlb
dec
push
js
jp
mov
push
in
mov
shrb
sub
mov
out
mov
mov
pop
dec
or
orb
loop
jbe
jge
lret
fdivrl
xchg
mov
mov
or
push
arpl
scas
loopne
insb
repnz
test
ret
aas
mov
or
cmp
in
lds
pop
jno
les
mov
std
jns
mov
clc
pop
pusha
clc
inc
int3
sbb
jae
rclb
or
and
mov
add
cmc
push
push
lods
inc
pop
and
mov
shrb
mov
test
fidivl
or
out
push
lods
dec
ljmp
jmp
ja
and
mov
lahf
nop
test
test
sub
shll
push
shl
mov
cli
jmp
dec
sbb
int
repz
lret
test
js
cmp
int3
lock
test
jle
jb
hlt
xor
push
cld
sub
xchg
pusha
jno
into
mov
mov
sbb
or
pop
sub
imul
push
jle
cmc
mov
aaa
int3
pop
les
iret
dec
dec
aas
das
movsl
rolb
scas
test
dec
lret
lret
in
data16
das
test
push
cli
enter
sub
cmpb
imul
mov
cmpsb
incl
dec
xor
mov
lahf
mov
mov
in
xchg
ret
jbe
lahf
in
xlat
inc
xor
jl
add
mov
aaa
scas
cmp
call
outsl
sub
mov
jne
push
enter
mov
sub
cmp
jo
les
xor
mov
dec
adc
pop
enter
dec
sti
push
dec
xor
xor
jo
add
xor
add
cmp
pop
cld
mov
sahf
dec
in
sub
mov
sub
repz
adc
cli
je
pusha
xor
sub
sti
xchg
jne
idiv
add
sti
mov
mov
hlt
mov
test
mov
xchg
jae
loope
scas
xor
fldcw
cmp
mov
fcmovnbe
movsl
mov
mov
in
ror
outsl
jg
xchg
jb
daa
imul
int3
cmpsl
mov
xlat
mov
push
xor
and
cmpl
lods
cmpsl
cwtl
pop
or
in
into
lds
xorb
pop
dec
stos
push
push
mov
pop
popa
dec
sarl
inc
pop
sub
mov
push
sub
out
cmp
cmpsb
dec
cmp
in
fsts
faddl
mov
xor
lret
and
adc
fdivl
xor
sub
add
gs
enter
or
sub
inc
or
dec
data16
and
jmp
cmpsb
ficoml
adc
mov
pop
push
push
dec
mov
dec
ja
dec
adc
int
sub
ds
jmp
fistps
inc
pop
mov
pop
shll
inc
ss
mov
xchg
or
add
mov
lods
pop
das
in
pop
mov
clc
mov
add
jbe
sahf
xor
iret
mov
lods
inc
lds
out
ds
inc
add
jo
and
fdivrl
add
jbe
sahf
flds
pop
mov
xor
jl
arpl
pop
inc
sarb
pop
jae
lahf
mov
mov
adc
aaa
xor
mov
dec
and
fcomps
pop
flds
inc
mov
fdivrl
mov
jb
fwait
test
or
inc
jnp
bound
jecxz
push
and
inc
mov
lods
out
repz
mov
cmpsb
mov
cmp
sbb
sub
out
inc
shlb
stc
and
jle
fdivrs
push
roll
gs
ss
ja
jg
roll
or
add
cmp
insl
mov
ljmp
lea
cmp
jb
cmpsl
jno
int3
iret
jbe
pop
lds
mov
shrl
mov
cmp
inc
les
orl
lret
mov
pop
outsl
aam
xchg
jle
into
inc
fsubp
cmp
or
dec
and
repnz
enter
jb
push
mov
sbb
or
mov
jnp
lds
mov
push
or
mov
movswl
sahf
in
push
push
popf
xor
mov
test
faddl
add
dec
pop
jnp
pop
add
cmpsb
fistpl
aaa
pop
rcrb
ret
push
xchg
or
ret
imul
popa
mov
cli
mov
sub
add
addr16
add
and
dec
and
sbbb
inc
dec
rolb
jnp
cli
ljmp
lret
test
pop
icebp
adc
jbe
sbbl
pop
add
xchg
pop
arpl
cwtl
dec
les
mov
add
push
in
loope
enter
add
iret
out
in
pushf
loope
insl
aaa
pop
jp
cmpsb
xor
jmp
jae
stc
jae
mov
loop
insb
push
pop
fadds
popa
repz
xor
lds
jns
push
ds
xlat
inc
stos
sahf
test
roll
xorb
rolb
pop
popa
imul
sub
movsl
lods
fst
imul
fiaddl
push
push
mul
mov
push
jge
int
lahf
push
je
jge
and
pushf
mov
scas
adc
xor
mov
lea
inc
mov
pop
fadds
pop
dec
pop
push
pop
or
or
dec
add
push
and
jns
and
popa
mov
nop
cmpb
dec
repz
lret
int3
int3
outsb
movsb
or
mov
or
adc
jno
dec
cmp
inc
popa
fadds
mov
sbbb
into
push
mov
inc
adc
xor
loop
jecxz
cmp
jge
cmpsb
enter
pop
stc
xchg
scas
mov
xchg
fwait
xchg
and
xchg
sbb
ret
pop
sbb
pop
popf
les
std
rolb
arpl
and
lret
mull
cmp
das
call
xchg
inc
std
add
lock
ret
arpl
fistpl
mov
sbb
cwtl
push
mov
dec
cld
mov
dec
mov
push
ffreep
lods
fildl
dec
cmp
sti
cmp
rorb
mov
outsb
cmp
scas
mov
pop
mov
cmpb
sub
mov
push
addr16
into
sub
inc
xchg
sbb
in
jp
adc
insb
and
add
lods
stos
add
sbb
mov
repz
out
mov
pusha
sbbb
ret
repnz
add
mov
repnz
push
xor
pop
pusha
shr
jl
popf
jmp
cmp
sbb
jb
adc
dec
enter
mov
sub
jne
sub
mov
push
mov
and
data16
xor
test
cmp
sahf
int3
push
xor
ror
movsl
sbb
xor
arpl
loop
mov
or
shl
stos
in
mov
notl
cmpsb
arpl
add
adc
adc
xor
fidivrs
jecxz
xchg
pusha
fisttps
nop
mov
push
inc
popa
js
jmp
jg
xor
xchg
mov
andl
push
pop
pop
mov
enter
and
loopne
push
mov
outsb
insb
adcb
repz
enter
insb
test
mov
pop
pop
inc
xor
loopne
inc
xor
mov
cmp
lea
loopne
inc
bound
and
jle
pop
pusha
dec
mov
jae
iret
aas
fsubl
xchg
xor
adc
pop
sbb
mov
scas
shl
sbbb
repz
cmp
jmp
out
inc
pop
push
adc
sub
stos
mov
loope
mov
outsl
outsl
lock
cltd
daa
loope
cmp
push
jns
lea
pop
fldl
add
test
pop
fadds
sbb
lds
mov
pop
sahf
rcrl
mov
add
pop
out
movsb
lea
gs
scas
jae
xchg
rcll
adcb
sub
push
inc
xor
inc
rorb
dec
adc
and
push
lcall
call
mov
mov
mov
andb
dec
xor
dec
mov
push
mov
cmp
outsb
out
mov
inc
add
jmp
imull
fadds
inc
or
dec
repz
bound
sbbl
add
xchg
adc
jbe
call
jp
lret
sub
mov
clc
and
mov
rclb
outsl
aam
clc
xor
mov
pop
inc
mov
xchg
daa
mov
mov
xchg
leave
add
fadds
jge
outsl
cmpsb
stos
enter
mov
push
mov
arpl
sub
push
test
pop
xchg
mov
das
pop
or
xor
inc
sbbl
enter
test
ret
repnz
jmp
xchg
push
and
pushf
mov
mov
fmull
pop
out
es
andb
mov
sbb
in
sbb
fisubrs
cmp
xchg
or
lock
addb
ja
fsub
lret
ljmp
xchg
mov
lock
pop
ss
testl
inc
and
rorb
or
aas
andb
cs
cld
lds
sbb
mov
adc
mov
movsb
insb
clc
into
mov
cmp
imul
addb
testb
push
test
ljmp
out
repz
mov
stc
fisttpl
sub
jecxz
imul
add
sub
shll
add
pop
push
pop
ror
into
xchg
je
xor
sbb
jb
out
and
adc
clc
mov
inc
xchg
stc
inc
mov
addl
jnp
push
pop
push
add
les
in
push
mov
adc
dec
out
jns
jmp
dec
out
bnd
jge
mov
fcompl
xor
jne
cmp
sbbb
mov
fwait
shll
or
lods
mov
flds
mov
mov
xor
enter
mov
cmpb
sbbl
sbb
sub
mul
out
cmp
das
fwait
mov
ret
filds
mov
mov
pop
xor
pop
pop
mov
test
fidivrl
ss
push
pop
loop
and
std
je
jno
iret
mov
push
inc
jp
ljmp
leave
mov
outsb
adc
int
inc
insl
mov
or
mov
mov
xchg
jne
xchg
iret
sub
pop
sbb
push
push
dec
push
sbb
xchg
fadds
insb
dec
pop
fadds
jg
cmpsl
fcoml
xor
int3
test
fbstp
sub
sub
arpl
mov
pop
xor
stos
lds
mov
insl
xor
mov
dec
lcall
mov
movsb
dec
add
xor
mov
mov
subb
hlt
add
adc
mov
cmp
jmp
dec
xchg
mov
push
inc
push
xor
mov
int
jb
fstpl
ret
mov
imul
jne
xlat
mov
jge
sti
add
xor
pop
or
int3
rorb
add
cmp
cli
jmp
sti
xchg
dec
mov
outsl
mov
push
fimull
xchg
jle
cmp
sbb
push
mov
jmp
and
scas
adc
mov
xor
pop
movsl
es
jns
decb
fsubr
lahf
negb
adc
in
stc
mov
mov
sub
in
or
lcall
rcrl
out
mov
shr
and
test
loop
lods
sub
divb
shll
mov
mov
jae
lea
push
lds
or
es
pusha
shl
loope
movsl
jg
loop
decb
mov
xor
mov
xor
fadds
jecxz
and
xchg
jbe
call
and
test
sti
vphsubwd
repnz
mov
popf
icebp
mov
cmpsb
mov
inc
add
pop
adc
inc
mov
pop
lock
mov
sbb
add
mov
sbb
mov
xchg
jo
push
loopne
mov
stos
push
mov
cld
ret
jl
dec
mov
or
test
or
pusha
jno
xchg
js
mov
push
xchg
or
jge
add
sbb
jge
add
insb
sbb
sub
sbb
push
or
xchg
pop
mov
stos
dec
sub
xchg
sub
test
dec
loope
pop
cmp
inc
cmc
mov
clc
mov
mov
fsub
sbbl
int3
adc
cmp
sbb
aaa
inc
iret
or
add
jne
cmp
fs
push
or
ret
stos
xchg
test
push
inc
stos
cli
cmp
dec
add
sbb
fwait
stc
and
ljmp
mov
jecxz
mov
lret
pushf
add
mov
mov
push
loopne
data16
call
sub
out
mov
sbb
ret
repnz
jnp
inc
loopne
adc
fdivrl
push
scas
dec
jae
inc
ljmp
or
aaa
sbb
sub
out
xchg
or
adcb
adc
mov
lret
push
pop
ljmp
stos
sbb
aaa
adc
cmp
inc
pushf
sub
jecxz
ss
jne
fwait
dec
xor
.byte
