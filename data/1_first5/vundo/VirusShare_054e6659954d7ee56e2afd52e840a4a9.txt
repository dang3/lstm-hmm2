dec
add
rolb
or
add
push
add
push
loopne
and
pusha
add
and
out
add
add
pusha
add
or
inc
add
push
xor
je
rolb
and
mov
cli
or
jo
mov
push
jo
mov
push
nop
add
pop
adc
push
or
add
add
add
or
jo
jne
inc
add
add
add
xor
repz
add
adc
and
loopne
jbe
add
cld
push
adc
lods
or
add
add
add
pop
adc
xchg
or
add
adc
add
mov
add
add
add
or
add
push
inc
add
rolb
rorl
lock
or
add
add
testb
add
add
mov
push
or
add
add
pusha
add
or
add
or
add
adc
xor
add
add
add
punpcklbw
fwait
push
rolb
xchg
and
dec
or
add
add
add
adc
ret
add
or
mov
testb
add
lock
lock
mov
les
inc
add
or
add
push
rolb
add
add
or
rolb
add
add
nop
add
xor
lea
push
add
add
add
adc
add
jno
add
loope
add
icebp
add
ds
add
roll
cmp
add
or
add
mov
daa
add
add
or
sub
lock
adc
dec
add
add
pusha
add
push
lock
add
lock
add
add
push
lock
add
mov
or
add
push
add
and
or
add
push
adc
clc
push
xor
sub
add
dec
add
add
or
add
xadd
dec
add
add
or
loopne
call
or
add
or
add
or
jno
xor
add
lock
add
add
inc
add
add
add
add
add
add
mov
add
or
add
inc
add
and
sub
rolb
sbb
rolb
sbb
add
or
and
fadds
lock
add
add
pusha
add
jo
sub
rolb
loop
nop
add
inc
add
push
add
or
add
pusha
add
add
add
jo
xor
add
add
add
add
push
add
push
add
stos
add
add
nop
add
in
push
popl
xor
call
test
jne
ret
push
push
mov
pusha
call
mov
push
xorl
addl
push
call
cmpl
jne
call
ret
jmp
xor
mov
shl
mov
shl
mov
cmp
jne
call
popa
pusha
call
mov
push
xorl
addl
push
call
push
xorl
addl
push
xorl
addl
push
push
call
add
or
je
ret
popa
call
push
xorl
addl
push
call
push
push
ror
mov
sub
xchg
mov
shl
push
xor
push
call
push
mov
push
jmp
pop
mov
push
push
push
mov
mov
rep
pop
pop
push
rol
inc
sub
mov
sub
xchg
push
mov
mov
mov
sub
mov
add
xchg
xor
jmp
sub
mov
sub
sub
mov
sub
or
jne
add
jmp
mov
shr
shl
mov
xor
jmp
sub
mov
xor
cmp
jne
mov
add
cmpw
jne
ret
push
xor
pushl
pop
lea
or
mov
mov
lods
mov
pop
ret
push
mov
add
push
push
push
push
push
mov
mov
add
pushl
mov
add
add
mov
add
xor
lea
mov
add
mov
xor
rol
xor
inc
cmpb
jne
cmp
je
inc
cmp
jb
mov
add
movzwl
mov
add
mov
add
pop
cmp
jbe
cmp
jae
pushl
pushl
push
xorl
addl
pushl
call
call
pop
pop
pop
pop
pop
leave
ret
call
movsb
test
fs
xchg
mov
pop
clc
mov
pop
sub
jle
push
lods
stos
jmp
lds
addl
bound
ret
je
jp
dec
jne
insb
mov
cwtl
rorl
lret
and
seto
ja
push
mov
jp
sahf
addb
push
cltd
and
clc
out
or
fnstsw
sarl
dec
adc
icebp
push
add
mov
jg
add
fistpl
fs
dec
lret
popf
pop
push
outsb
dec
sub
out
pop
pushf
jle
add
fidivrs
cltd
xchg
mov
cmpsl
or
dec
mov
add
push
cmpsl
mov
icebp
je
cmp
cmp
cli
push
push
inc
inc
ret
and
aad
xchg
pusha
pop
std
pop
into
test
or
out
cwtl
mov
or
mov
bound
loopne
leave
or
rolb
add
sbb
or
mov
or
les
dec
xor
add
movsl
movsl
test
cmp
pop
lret
insb
ret
rol
xchg
push
addr16
inc
dec
in
or
cmp
movsb
test
fs
adc
mov
mov
xchg
sbb
scas
or
test
fisttpll
push
sbb
std
shl
inc
sub
imul
jo
dec
dec
aad
and
std
sarl
and
outsl
dec
scas
cmovae
inc
out
dec
add
in
and
test
lock
jge
mov
add
jne
mov
ja
cltd
sbb
stos
push
mov
fnstenv
jecxz
shll
clc
fidivs
mov
xorl
ret
inc
cmp
popa
xlat
jge
jnp
mov
popf
ja
sbb
sahf
int3
in
out
cltd
mov
push
xchg
xchg
lret
xchg
test
dec
scas
js
and
fimull
mov
lret
arpl
scas
mov
sbb
push
ss
cld
jno
lock
lret
test
add
std
jnp
cmpb
add
fadds
adc
fiadds
jmp
xor
js
or
lcall
xchg
cmp
imul
adc
nop
push
addr16
out
sbb
out
cmpsl
jp
sahf
pop
inc
mov
jp
out
dec
add
rorl
xchg
aad
imul
insb
scas
ret
aas
pop
jl
pop
iret
out
cmpsl
sub
jbe
pushf
dec
roll
es
mov
outsl
add
jns
jg
jp
xchg
sbb
in
sbb
lcall
fs
adc
mov
fisubrs
lea
jle
and
js
xchg
inc
adc
jno
cmpsb
xor
js
and
pop
icebp
cli
mov
cmp
bound
fs
add
cmpsl
inc
fwait
cmp
mov
lcall
rcrb
or
jg
adc
dec
mov
push
outsb
aam
and
ds
cld
addr16
jbe
lcall
add
fadds
rcll
xor
std
push
and
pop
mov
in
hlt
lock
dec
xchg
pusha
pop
and
fnstenv
mov
or
out
mov
repz
pusha
pop
xor
into
mov
ljmp
jge
in
mov
xlat
xchg
sti
jmp
inc
in
lock
xchg
inc
shl
mov
cmp
imul
mov
arpl
rcl
mov
inc
cmp
xchg
xchg
addr16
mov
lea
push
and
xchg
jle
cmpsl
cmp
pop
dec
leave
cmc
imul
dec
pusha
cmp
jg
mov
ret
mov
xchg
inc
mov
lcall
pop
push
ss
into
or
cld
xlat
les
and
mov
iret
loopne
pusha
adc
dec
fsubr
xchg
and
nop
lods
aaa
jbe
roll
push
push
mov
jno
or
xchg
scas
cmp
pusha
fldenv
xchg
icebp
xchg
inc
or
pop
fwait
cmp
movsb
test
push
add
and
xchg
cmp
in
and
out
lea
cltd
and
dec
xchg
js
cltd
mov
mov
lcall
roll
jmp
imul
dec
mov
cltd
popf
push
add
and
sbb
mov
inc
daa
jmp
out
fsts
pop
push
cmp
out
cmp
add
jbe
cwtl
repz
inc
mov
fs
mov
into
push
out
test
incl
outsl
jg
fdivrs
out
dec
pop
or
mov
xor
xor
mov
in
scas
orl
fsub
push
ljmp
adc
push
add
cmp
dec
push
or
push
and
xor
in
stc
lret
jecxz
push
pusha
fsubrs
pop
frstor
das
add
jl
arpl
call
add
xor
repz
adc
push
popl
xchg
push
pushfw
add
das
pop
je
fs
ss
fnstenv
mov
testl
cmp
xchg
pop
outsb
out
movsl
mov
lock
add
jno
popf
jp
and
xor
push
adc
das
ret
jge
ficomps
jle
movsl
cmpsb
dec
lahf
mov
mov
dec
and
add
mov
and
cmpsl
out
nop
jle
daa
mov
rol
push
push
add
out
sahf
pop
pop
push
push
xchg
cmc
jae
mov
dec
add
movsb
pusha
add
and
jo
dec
jbe
mov
clc
ds
out
fsts
rcl
push
rorl
cmpsb
sub
inc
or
dec
imul
mov
mov
xchg
icebp
sbb
fnstsw
add
negl
sbb
pushf
xor
and
into
lds
and
dec
cmp
inc
out
dec
add
ljmp
in
insb
popa
mov
repnz
or
inc
or
mov
outsb
jle
and
dec
inc
mov
bound
push
inc
in
popf
cmc
jno
mov
clc
xchg
icebp
sbb
pop
fs
iret
ss
cwtd
push
adc
jge
test
out
push
dec
jne
or
and
js
ss
xlat
add
fadds
and
cmc
mov
mov
out
subl
or
out
cmp
pop
sub
and
rorl
push
mov
sbb
aas
adc
push
aam
and
and
int3
loope
add
push
xchg
add
jno
pop
scas
dec
ds
fiadds
out
mov
mov
ss
out
dec
add
dec
mov
daa
jbe
mov
mov
clc
and
shlb
or
movsl
sahf
mov
jmp
inc
lahf
mov
lods
ljmp
lret
fcmovnb
add
and
add
jnp
lret
add
mov
xor
xor
push
jp
sahf
jle
jne
adc
xchg
arpl
inc
imull
iret
fsubl
jge
jmp
push
push
addr16
js
ja
in
fadd
add
dec
cmpsl
pop
loop
dec
fwait
cmp
dec
jns
jle
outsl
lods
jo
adc
in
ret
cmp
push
out
cmpsl
add
mov
jbe
pop
sub
xchg
ja
adc
xor
push
push
dec
inc
jns
jg
rolb
ljmp
mov
lods
ljmp
gs
fisubs
mov
and
add
pop
ljmp
lret
push
imul
mov
ret
push
ds
dec
add
sub
ljmp
xchg
lret
push
arpl
adc
inc
cmc
xchg
stos
pop
cmp
cmpsb
mov
in
iret
sub
mov
xchg
xchg
outsl
test
loopne
aas
adc
in
sub
dec
mov
mov
aad
xchg
pusha
pop
and
lret
out
shl
cmp
jno
jmp
inc
movsb
ret
fisubs
push
fdivrl
aaa
mov
stc
mov
aas
repnz
adc
out
mov
xlat
xchg
sti
rcrl
sahf
inc
out
jns
call
out
dec
xchg
or
mov
leave
jle
mov
and
ds
push
ss
push
or
mov
scas
jnp
cltd
or
ljmp
push
daa
mov
fsubr
xor
inc
jp
popf
cmp
fcmove
mov
iret
fldcw
shll
movsb
jge
and
test
add
fadds
aad
in
nop
mov
mov
or
fdivrp
mov
cmpsl
movsl
push
outsl
push
sub
jns
mov
mov
fs
jno
rcr
int3
in
sub
pushf
xor
dec
sbb
insl
cmc
xchg
leave
test
xchg
sbb
ret
test
loopne
pushf
jnp
xlat
lret
lret
icebp
mov
les
mov
out
fdivrl
add
js
jg
out
dec
add
loope
mov
lret
rol
jge
imul
add
pop
ljmp
mov
jo
call
call
addr16
js
cmp
cmp
inc
fucomip
arpl
mov
ret
testb
xchg
lods
lods
lahf
nop
jno
add
mov
jp
push
xchg
ror
cmp
mov
int
je
pop
mov
popf
dec
dec
out
and
rolb
mov
xor
cmp
xor
and
fmuls
mov
ds
push
in
pop
and
pop
loop
fwait
cmp
je
cwtl
xchg
xor
adc
sub
lcall
pop
xchg
cmp
cwtl
jl
xchg
push
imul
or
sbb
dec
arpl
outsl
inc
enter
test
mov
sahf
mov
lods
ljmp
mov
inc
mov
add
mov
add
pop
fnstenv
cmp
scas
ret
inc
fcom
mov
orl
sbb
clc
adc
mov
sbb
mov
scas
loope
mov
scas
in
cmp
scas
test
movsl
push
fstpt
sbb
stos
add
or
cmp
ljmp
fstps
es
mov
loopne
aad
iret
movsl
in
xor
lcall
xchg
push
fbld
arpl
les
leave
cmp
push
push
sti
or
jae
pop
or
sti
xor
popa
fistpll
nop
negl
mov
shr
cmc
jno
sti
jns
jg
int
xchg
or
adc
jge
into
pop
inc
mov
cltd
lods
ljmp
dec
or
push
mov
mov
scas
test
inc
es
push
or
jnp
inc
jp
sahf
jl
push
push
cmc
je
cmpb
inc
add
mov
loop
push
push
push
bound
es
push
mov
cmp
int3
push
icebp
lods
lds
fs
fldcw
pop
bound
stc
arpl
mov
mov
je
push
jl
inc
dec
mov
test
pop
sbb
adc
sub
sarb
adc
and
push
xchg
push
xchg
inc
xchg
int3
mov
loop
dec
fwait
cmp
dec
jns
push
xchg
xor
adc
mov
mov
cmc
fstpt
jp
jne
jbe
mov
mov
in
cld
mov
xor
fdivrs
jp
jno
dec
push
sarb
ja
jg
mov
imul
push
dec
push
mov
adc
ss
push
jb
in
xchg
mov
rcll
lock
pop
mov
pop
data16
lahf
adcb
movsl
mov
cmp
mov
xor
or
cmp
or
jbe
mov
jno
mov
fstpt
in
sbb
xlat
jle
cmp
call
repz
add
push
cmp
jmp
lcall
push
and
mov
and
pusha
ds
into
add
dec
int
cmc
dec
add
hlt
pop
das
daa
fisubl
jbe
push
inc
xor
jae
pop
fsts
ja
arpl
fcmovnu
add
xlat
rolb
sbb
sbb
adc
push
in
fs
xor
in
mov
sub
ds
push
popl
repnz
das
sahf
subb
test
push
add
and
cmp
add
adc
and
mov
dec
lahf
sti
inc
fwait
loope
or
and
mov
out
mov
mov
dec
and
sub
pop
adc
lock
orb
arpl
xchg
dec
cmp
xchg
adc
orb
decl
es
add
scas
daa
icebp
mov
seto
and
adc
imul
out
mov
ljmp
fcomp
jg
out
push
std
xchg
roll
inc
loop
ret
rol
in
out
jle
or
sub
bound
cmpsl
negb
xchg
sti
mov
fwait
insb
out
pop
sub
jl
fisubl
adc
fcomi
insb
or
rolb
hlt
outsb
sbb
push
jecxz
aam
push
push
or
in
or
xchg
xor
enter
or
lods
xchg
fsts
inc
xchg
std
mov
loop
cltd
sbb
pop
mov
mov
xor
or
sbb
push
push
mov
gs
popa
cmpsl
sub
xor
jno
jle
xor
fidivrs
cmpl
and
fisttpll
out
insl
in
ret
cmp
mov
add
cli
test
xor
sbb
mov
push
and
bound
add
scas
and
testl
lcall
inc
insb
and
dec
push
ds
bswap
fbstp
aaa
mov
xchg
jns
push
fisubs
in
xchg
and
mov
jae
and
faddl
data16
add
xor
cmc
and
aad
xchg
pusha
pop
sub
mov
dec
cmp
jno
out
cwtl
mov
or
mov
bound
fdivl
out
or
rolb
in
sbb
mov
call
xchg
inc
popf
in
sub
lcall
xor
out
and
sub
lahf
inc
mov
pop
loop
adc
or
rolb
sbb
sbb
xor
jecxz
mov
pop
fimuls
fnstenv
push
mov
push
cs
aas
mov
push
inc
or
fldenv
sub
stos
arpl
sbb
cwtl
xchg
dec
adc
fadd
add
test
sbb
out
mov
mov
xlat
push
add
and
cmp
cmp
out
gs
mov
mov
mov
nop
lods
stos
dec
pop
jmp
xchg
sti
mov
push
or
xorb
dec
in
jb
xor
dec
ffreep
push
imul
ret
add
test
mov
sub
cs
xor
and
stos
aam
adc
cmp
cmp
icebp
add
ret
loope
arpl
nop
dec
popf
in
xchg
and
dec
notl
and
stos
out
nop
push
jo
jno
or
icebp
inc
mov
shlb
dec
stc
mov
mov
mov
add
cwtl
addb
cwtl
add
leave
add
rorb
test
dec
test
nopl
cmp
stos
dec
fdivl
mov
jno
leave
xchg
ffree
lea
jp
sbb
out
dec
add
cwtl
inc
xchg
push
loope
dec
mov
ss
push
adc
iret
mov
cmp
mov
fstps
ret
dec
adc
bound
pop
mov
xchg
sub
xor
xchg
sahf
stos
aaa
dec
lods
test
push
movsl
ja
addb
jns
lcall
ss
out
js
and
mov
mov
cwtl
ja
add
leave
ret
dec
daa
sbb
inc
fwait
cld
shll
jle
xor
test
push
movsb
push
mov
fldl
sbb
xchg
inc
inc
push
in
addr16
cmp
out
test
jp
jge
pushf
mov
or
enter
or
fldcw
add
push
and
enter
jb
dec
cmp
rep
add
push
mov
mov
pop
xor
inc
repz
pop
or
loope
adc
xor
lods
dec
mov
cmc
push
jge
and
loopne
popa
cmp
cmp
sub
daa
int
cmpsb
dec
sbbl
mov
dec
and
push
add
and
out
xchg
or
mov
push
es
lahf
sub
jns
or
cmpl
add
pop
mov
lock
std
cmp
neg
mov
rorb
aam
and
cmc
xchg
pushf
inc
jno
jmp
js
aaa
push
mov
shrl
call
test
inc
sub
enter
or
fs
pop
xor
in
aaa
cwtd
fcoms
xor
test
push
jno
jbe
and
push
ficoml
sahf
add
jo
pop
mov
mov
pop
adc
bound
xchg
mov
loop
xor
jmp
pop
xchg
mov
jno
or
inc
mov
subb
push
dec
push
dec
int3
add
mov
and
pusha
ljmp
sbb
add
lret
clts
jbe
add
imul
test
xlat
xchg
sti
roll
pop
ljmp
jle
fildll
mov
push
aad
sbb
and
push
popl
repnz
jae
push
and
pop
and
stc
out
pop
pushf
cmp
imul
decb
out
dec
popf
push
inc
repz
cmp
mov
push
jns
lret
mov
aad
xchg
arpl
mov
pop
jp
jle
jae
push
or
hlt
and
jp
popf
jl
out
push
je
push
jge
xchg
shl
jbe
pushf
dec
adc
wbinvd
xor
mov
xor
inc
ret
fcmovnb
jmp
out
mov
or
jle
fbld
movsb
pop
iret
enterw
and
lahf
je
pop
jl
test
cmp
lods
mov
adc
xchg
push
insb
sbb
adc
lcall
loope
mov
js
xchg
rcrb
pop
jae
fs
dec
lods
xchg
fsts
add
mov
push
ror
nop
push
gs
cmp
stos
add
and
out
dec
push
in
xchg
and
xlat
jo
or
js
and
je
or
rol
nop
push
data16
in
sub
mov
jg
jae
dec
icebp
dec
add
cmpsb
dec
fwait
scas
mov
sub
mov
scas
inc
movsl
lods
in
xchg
cltd
scas
dec
sbb
outsl
inc
or
fldenv
adc
inc
mov
xchg
xor
add
cmc
sarl
ret
scas
push
adc
mov
dec
fsubs
jns
sbb
sub
movsb
mov
imul
nop
mov
or
and
cmp
jmp
int
scas
mov
xor
dec
xchg
lcall
and
lods
mov
sub
or
pop
dec
stos
xchg
adc
pop
dec
add
xorl
add
push
mov
pop
pop
jbe
mov
sti
cmc
cmp
sbb
inc
hlt
les
cmp
imul
lock
pusha
pop
and
cli
cmp
xchg
and
jmp
push
dec
add
cmpsb
inc
fwait
scas
cmp
imul
adc
cld
cmc
mov
or
or
xor
imul
decl
sbb
xor
test
pop
arpl
mov
mov
and
push
and
sbb
lock
add
add
cmpsl
or
fldenv
add
test
xchg
mov
jns
addr16
js
push
add
fwait
addr16
int
adc
jae
dec
fsubl
cmp
dec
adc
inc
or
hlt
xor
ss
lret
scas
notl
dec
xor
inc
or
push
cmc
aaa
push
ss
dec
or
inc
nop
icebp
in
and
outsl
dec
mov
inc
out
dec
add
mov
and
inc
jne
mov
mov
ret
cld
scas
cmp
stos
in
push
push
fs
fs
pop
push
ss
dec
or
in
jge
movsl
dec
inc
scas
add
idivb
push
imul
lret
dec
lahf
cmp
dec
daa
lcall
aam
sub
fwait
jno
pop
jbe
sbb
sub
jl
mov
mov
push
or
adc
or
jmp
subb
rol
mov
gs
cmp
cmpsl
pop
loopne
popa
lds
jp
in
nop
and
ljmp
inc
clc
mulb
push
jmp
cmpsl
mov
in
ret
je
xchg
inc
js
in
sahf
mov
adc
pop
inc
cmpsb
in
mov
out
int
mov
add
cmp
dec
pop
push
lock
stos
cwtl
push
jmp
test
add
and
nop
sbb
mov
vpunpckldq
ret
dec
ljmp
cmpsb
or
fs
lock
fisubrl
ret
test
or
std
fldl
in
cmp
mov
fstps
xor
push
fidivrs
popf
cmpsl
inc
push
flds
das
clc
sub
rcrb
mov
aaa
jno
sub
cmp
xchg
add
jb
and
xchg
sub
es
and
enter
filds
ret
movsb
inc
fwait
cmp
dec
jns
push
mov
and
adc
dec
cmp
stc
cmpb
pop
cltd
out
jge
shlb
mov
xor
dec
dec
xchg
lea
fiadds
pop
aaa
add
flds
jp
je
in
hlt
xchg
push
xchg
pusha
pop
sbb
scas
sbb
out
hlt
mov
out
push
jns
jbe
cwtl
rcll
jae
fs
jle
rcr
popa
pop
jbe
into
into
xor
prefetch
push
sbb
mov
iret
and
cmp
sbb
movsb
jne
mov
push
daa
jbe
roll
cmpsl
sub
cmpsl
scas
mov
lcall
push
inc
mov
sub
popa
in
test
mov
mov
mov
xchg
dec
stos
push
push
add
fidivl
aas
fisttpll
mov
aam
push
sti
add
add
and
xchg
test
data16
sbb
mov
xor
imul
prefetchw
daa
cmp
mov
nop
out
push
push
adc
imul
test
mov
pop
and
scas
sub
jb
shl
int
lret
add
or
jb
inc
jb
rol
mov
dec
mov
cltd
scas
sarl
sub
xchg
mov
xchg
xchg
mov
add
dec
movsl
xchg
roll
pop
xchg
mov
pop
in
rcr
scas
lods
fldcw
pop
jne
xor
cmpsb
dec
fldt
ljmp
aad
xchg
pusha
pop
pushl
imul
call
cmp
loope
and
jae
and
in
xor
stc
gs
pop
dec
stos
pop
dec
jns
push
and
add
pop
and
lods
iret
xchg
push
popa
xor
pop
xchg
ds
mov
lods
ljmp
lcall
repnz
in
cmp
dec
add
dec
dec
les
fsts
or
mov
sbb
paddsb
js
lahf
lods
cli
stos
cmp
in
dec
int
inc
bound
and
jno
mov
icebp
add
dec
ret
push
mov
mov
cmp
popf
jp
pop
inc
stos
ja
or
fisubl
sbb
fcmovnbe
scas
pushf
jbe
sub
cmpsl
xchg
rol
out
pop
cmp
lcall
mov
andb
or
cmp
ret
xor
lea
gs
test
fisubrs
or
movsl
hlt
push
push
ss
jge
stc
repz
cltd
iret
dec
xor
cli
push
notb
push
in
rol
jbe
cmpsb
xchg
outsl
mov
fistl
outsb
sbb
xchg
fs
dec
add
enter
cmp
movsb
jge
xchg
dec
mov
or
les
cmp
clc
mov
ds
and
jns
push
fcmovnu
outsl
out
or
rolb
sbb
xchg
cli
sbb
ret
and
mov
mov
mov
test
in
jo
mov
cmp
gs
pop
dec
stos
test
cmc
dec
jp
or
sarl
out
mov
mov
push
add
and
movsb
push
adc
clc
and
mov
push
sub
and
adc
andb
scas
pop
mov
fs
xlat
addb
add
push
pop
lock
jl
sahf
and
addl
pop
dec
add
mov
mov
xlat
xchg
sti
call
lock
out
popa
sub
jge
lcall
and
pop
ljmp
mov
add
cwtl
roll
push
arpl
or
imul
mov
nop
jge
push
dec
mov
cmp
push
lods
sbb
mov
mov
notb
dec
sahf
dec
cmpsb
repz
xchg
dec
ljmp
add
je
push
cmp
pop
and
push
loopne
fwait
inc
adc
fbstp
xor
mov
mov
repz
and
xorl
add
and
sarl
je
push
jb
and
cld
ret
push
cmpsl
mov
outsb
jle
mov
movsl
and
ds
push
ss
pushf
and
into
adcb
and
fcoml
adc
ja
out
mov
jns
push
push
sub
push
cmpsb
push
mov
and
aad
ret
xlat
jg
lods
std
cli
fnstsw
repz
ret
nop
andl
in
xchg
out
pop
ljmp
es
jns
adc
cmpsb
inc
fwait
scas
cmp
push
pop
rolb
push
fwait
xor
push
mov
clc
xchg
js
push
mov
jne
and
cltd
in
out
adc
bound
test
dec
inc
jmp
pop
sahf
dec
loope
xor
dec
inc
and
jle
inc
push
decb
in
jecxz
add
sahf
cmp
dec
xlat
jbe
mov
pop
sbb
in
jno
push
jbe
addr16
in
xor
pushl
shl
add
out
lcall
fs
dec
lds
push
sub
xchg
push
sub
inc
in
sbb
push
jge
mov
repz
sbb
shlb
pop
addb
leave
out
aaa
out
nop
jae
push
addr16
xor
cmp
mov
arpl
fisubl
jbe
jbe
xor
rol
mov
imul
pop
mov
lret
cmp
dec
add
in
mov
out
xchg
insb
adc
sbb
and
jl
mov
mov
ret
dec
das
xchg
push
or
and
or
lahf
fdivr
pop
pop
pop
aaa
lock
jmp
inc
jle
jmp
mov
cltd
push
decl
mov
mov
jg
and
cmp
ljmp
push
push
add
and
mov
pop
dec
lods
xchg
push
ljmp
sub
in
xchg
and
adc
jo
xchg
mov
scas
push
out
xchg
dec
bound
mov
repz
jo
in
mov
pop
dec
mov
mov
ficompl
jbe
sub
push
mov
xchg
push
push
add
in
pop
inc
mov
stos
and
addb
in
cmp
dec
add
push
dec
int3
dec
pop
mov
jg
jge
stos
mov
fidivrs
test
fs
sbb
cltd
jbe
popf
inc
sbb
inc
popl
dec
bound
xor
lds
fbld
fdivrs
addr16
cmpsb
push
cmp
xchg
sti
scas
int
arpl
or
or
jnp
pop
cli
std
sarb
lea
fs
std
out
dec
add
xor
les
out
dec
pop
or
jp
lods
fdivs
mov
inc
cmp
ljmp
add
cmpsb
sub
out
jbe
sbb
lods
aaa
dec
movsl
inc
lcall
push
xor
mov
fs
into
out
mov
dec
cmp
mov
lea
cltd
pop
dec
fmuls
mov
aaa
mov
mov
jae
out
mov
and
ljmp
nop
inc
mov
lods
ljmp
mov
inc
mov
lds
mov
aad
xchg
pusha
pop
daa
xchg
into
stc
fisttpl
xchg
mov
call
inc
or
out
sub
ss
push
or
jmp
fs
dec
cmp
sub
subb
out
and
out
inc
mov
jmp
xchg
cmp
ret
mov
fwait
and
cmp
insb
and
sub
mov
icebp
dec
sahf
cmp
dec
or
mov
cli
ljmp
pop
mov
iret
movsl
pop
rcrb
ret
addl
add
movsb
dec
fwait
cmp
dec
jns
push
mov
push
push
lret
push
ret
cmp
mov
xorl
dec
xchg
xchg
jbe
popf
dec
neg
cmp
fadds
dec
aaa
push
shll
jg
xchg
mov
ljmp
push
ds
dec
add
test
push
arpl
jno
pop
jbe
adc
ljmp
add
and
pop
and
jle
adc
popf
test
sahf
insl
std
pop
lret
test
lret
gs
or
inc
pop
arpl
xchg
test
add
call
push
ja
jg
insb
mov
in
lcall
dec
shrb
arpl
jnp
imul
paddsw
pop
add
aad
dec
ljmp
mov
xchg
dec
jns
pop
inc
sbb
in
inc
out
inc
imul
pop
mov
mov
mov
out
dec
push
inc
sahf
adc
fldenv
jbe
aaa
leave
add
rol
xchg
push
imul
mov
arpl
pop
push
outsb
jp
sbb
bound
rcll
out
push
adcb
add
fldenv
sub
dec
loop
dec
shll
or
cmp
movsl
in
adc
add
push
ss
mov
leave
mov
or
cmc
popf
push
inc
fwait
aam
cli
popa
dec
pop
and
jp
sub
repz
mov
xchg
jno
or
sub
jp
setno
rclb
xor
pop
and
pop
xor
or
je
jno
mov
mov
pushl
mov
adc
or
push
mov
loope
sbb
subb
dec
ljmp
pop
dec
mov
imul
dec
push
adc
pop
dec
mov
mov
xchg
inc
xor
sbb
test
mov
and
jne
jae
in
jne
and
pop
mov
dec
mov
push
lods
arpl
jno
cld
or
xchg
cmp
lahf
test
push
add
and
scas
and
cmpsl
out
mov
pop
cmp
push
inc
cmp
fsts
shll
out
inc
inc
into
out
and
sarb
sub
addr16
xor
adc
pusha
in
stos
enter
dec
mov
scas
jge
std
cmp
popf
js
and
scas
ss
mov
sub
je
pop
lcall
fimull
mov
sub
sti
sub
jbe
and
pop
bound
out
inc
fsts
pusha
fsubrs
lcall
fs
mov
xlat
xchg
sti
mov
push
dec
out
popa
sub
jge
and
mov
fs
push
sti
xor
jle
add
mov
movsl
add
mov
and
pusha
lahf
jge
sbbl
add
push
fwait
inc
adc
fidivrs
mov
xchg
lcall
fs
clc
int
lods
xor
push
push
jmp
push
ds
fldenv
stos
lcall
inc
xchg
rclb
cmp
add
fadds
js
push
push
pop
hlt
popa
leave
mov
add
outsl
subl
mov
xchg
imul
cmpsl
fldenv
sti
iret
sbb
popf
out
pop
sub
jl
sub
dec
add
jp
ss
mov
pop
dec
mov
andl
dec
lods
add
cmp
dec
inc
into
cld
xor
stc
dec
add
and
aam
sub
lahf
push
jb
and
enter
insb
test
arpl
inc
in
ret
hlt
mov
aaa
mov
xchg
push
or
lcall
dec
scas
xchg
fsts
lret
lahf
mov
in
ja
insb
xor
in
es
cmp
add
mov
add
inc
mov
xor
ja
aad
pop
jbe
pushf
and
cmp
in
mov
repnz
sbb
or
xchg
icebp
pop
xlat
ret
call
pop
adc
arpl
scas
push
andl
add
movsb
dec
fwait
cmp
dec
jns
push
mov
sub
sub
jle
insl
inc
jge
sbb
push
jae
das
jle
pop
jg
test
sbb
mov
sub
rcll
jge
xor
lea
adc
sbb
inc
mov
cltd
jb
in
xor
fs
dec
lahf
outsb
sbb
decl
out
test
pop
mov
add
and
scas
mov
andb
dec
add
dec
mov
push
out
fwait
jle
popf
push
xchg
xchg
push
push
add
jg
adc
ret
jne
dec
and
in
cs
cmp
pop
dec
cmpsl
add
sub
sbb
or
lcall
jns
and
push
jae
lahf
jle
cmp
or
xchg
mov
dec
in
and
nop
lods
cli
mov
sti
aad
xchg
out
mov
ljmp
pop
loope
popf
ret
rolb
adc
sbb
mov
leave
or
cwtl
mov
jae
mov
fs
dec
add
jg
xchg
cmp
jmp
xor
or
ror
lea
imul
cmp
sub
outsl
dec
cltd
mov
cmp
and
sbb
imul
jbe
roll
dec
sbbb
adc
or
mov
bound
jnp
lcall
xor
loopne
movsl
pop
scas
pop
shll
cmpsl
inc
mov
pop
push
or
fnstcw
das
mov
mov
cltd
mov
adc
addr16
rcl
and
push
pop
enter
push
sub
inc
jmp
push
mov
pushf
jbe
pop
cmp
fiadds
jae
mov
xchg
jbe
xchg
jg
fwait
jae
fs
ja
and
push
lods
sbb
cmp
add
mov
shrb
sbb
or
cmp
or
xchg
add
sub
pusha
bound
cltd
fidivrs
ret
lock
lds
or
mov
lods
ljmp
mov
inc
mov
add
je
cltd
rcrl
jae
fs
incl
ficoms
push
in
test
cmova
fcmovbe
enter
sbb
jbe
movsb
popa
ljmp
int3
das
fs
jle
mov
sub
out
popf
dec
jne
stos
jge
out
dec
add
adc
cmp
scas
lcall
and
outsb
xchg
pop
dec
fcoms
scas
fldenv
add
dec
into
mov
dec
leave
jl
les
jle
add
fidivrs
popa
jb
jp
mov
and
insb
stos
mov
cmc
xchg
add
cltd
mov
mov
lods
inc
jns
jg
mov
add
mov
repz
mov
push
and
jbe
jns
int3
xor
xorb
dec
cltd
rclb
mov
test
fwait
jo
fcmovnu
mov
jno
les
shrl
push
push
rcrb
adc
and
icebp
fbstp
and
lcall
jl
imul
fldl
rep
ret
xchg
cmp
cmp
fidivs
mov
ja
loop
sbb
or
pushf
in
les
es
xor
cmp
movsb
mov
mov
fs
clc
lea
and
cltd
call
test
dec
mov
jno
arpl
int
mov
ret
jno
add
mov
mov
es
pop
xor
cli
jnp
arpl
push
fldenv
dec
lret
or
lahf
jae
pop
adc
bound
daa
or
ljmp
adcb
pushf
or
and
andl
mov
int
hlt
es
ss
mov
push
jmp
xchg
fmuls
scas
jge
jmp
mov
mov
mov
out
mov
sub
and
dec
jp
popf
sub
and
pop
push
or
xor
mov
cmpsl
mov
xor
jg
dec
inc
cmp
scas
dec
adc
sbb
xchg
push
push
push
fs
jns
pusha
pop
sbb
fcoms
add
fidivs
sbb
sub
loope
jmp
add
mov
lock
je
and
stc
xchg
mov
or
hlt
xchg
inc
into
add
jb
and
dec
add
call
dec
sub
ljmp
cmpb
int
sub
icebp
nop
lods
push
xor
add
xchg
sti
lds
jb
mov
or
mov
ljmp
xor
dec
in
jb
das
ss
cltd
arpl
sti
jmp
mov
adc
adc
sub
mov
lock
xor
jb
cmc
push
and
jg
inc
dec
pop
push
adc
mov
xchg
sti
jmp
xchg
pop
inc
out
jns
call
arpl
or
insb
clc
shll
or
movsl
out
lea
pop
push
cli
out
cmp
lret
lcall
push
adc
fldcw
fiaddl
xchg
fimuls
xor
sbb
or
inc
out
fisttpll
jge
xchg
dec
inc
add
fwait
dec
lods
arpl
fsub
pop
lds
divb
cli
out
dec
add
subl
jmp
xchg
sti
int
test
sti
lock
ljmp
jmp
scas
xor
xor
shrd
shrb
mov
or
insl
test
lret
jno
cmovnp
jp
jbe
popf
dec
pop
mov
popf
jnp
push
rcrl
outsb
dec
sub
js
jg
imul
int
insl
iret
in
shll
cs
pop
xchg
pusha
pop
xor
into
repz
add
cmp
jno
ljmp
daa
jmp
out
dec
add
fs
sahf
jnp
mov
mov
pop
ret
arpl
jno
push
in
sbb
in
dec
add
je
xchg
test
imul
cmp
mov
and
or
jno
sub
add
mov
push
add
arpl
jns
push
test
dec
aad
aam
imulb
pop
dec
stos
bound
lcall
daa
push
ss
or
aaa
jle
out
fisubl
lcall
mov
xlat
mov
add
fcoms
xor
xor
xor
popf
jne
es
bound
pop
push
es
push
sub
inc
fadds
popl
push
cmc
xor
ss
daa
or
jno
es
cmp
and
xchg
mov
fstps
dec
or
push
sub
mov
dec
aad
xchg
test
mov
in
xchg
mov
mov
shr
lods
jg
leave
lock
pop
dec
aaa
imull
bound
pop
mov
pop
inc
bound
mov
notl
rorl
and
push
add
and
jmp
orb
add
test
decl
in
lcall
popf
cmpb
dec
add
pop
dec
mov
fsts
xchg
adc
mov
dec
mov
xchg
and
mov
mov
lods
ljmp
jno
and
lahf
inc
mov
test
xlat
push
add
and
lock
ja
lods
xchg
fsts
test
inc
mov
jbe
xor
out
les
dec
cltd
and
sub
pop
scas
and
and
movsb
lods
int3
cltd
mov
dec
cmpsb
orb
iret
std
or
addr16
dec
pop
iret
shufps
pop
aam
push
les
cmpsb
xchg
jp
fdivrs
in
add
data16
fs
dec
xchg
cmp
jmp
mov
out
xchg
or
arpl
divb
dec
mov
fs
mov
sub
sub
lret
ret
xor
push
in
icebp
cmpsb
sti
xor
test
xchg
mov
sbb
ffreep
push
decl
jo
int3
outsb
fadd
add
add
aad
push
pop
mov
and
lds
pop
push
or
fs
cltd
cmp
cmp
sbb
ret
cmp
mov
insb
push
fdivrl
rclb
adc
xchg
push
std
pop
inc
cmpsb
ret
in
mov
pop
cmpsb
sarb
ret
out
mov
xlat
xchg
sti
jmp
sti
push
xor
sub
add
cld
testb
loopne
or
sbb
push
imul
dec
mov
xchg
xchg
outsl
xor
mov
fs
flds
in
mov
arpl
outsb
push
lret
stc
mov
sti
push
dec
mov
sbb
pusha
lcall
dec
push
adcl
sub
adc
lahf
jmp
fdivl
jp
arpl
lock
movsl
fs
stos
or
jecxz
aas
mov
inc
hlt
test
or
mov
mov
ja
pushf
dec
sar
imull
pop
xchg
dec
loope
cmp
cmp
add
popa
in
mov
jecxz
mov
aad
xchg
pusha
pop
xor
into
lret
pop
push
in
fidivrs
sub
ljmp
push
or
cmp
mov
fs
in
dec
mov
fsts
out
cmp
pop
sbb
xchg
xchg
dec
lahf
stc
aas
lods
lds
outsl
subl
outsl
inc
mov
inc
out
dec
add
xchg
lods
pop
in
pop
popa
jbe
xor
dec
xchg
xchg
xchg
dec
pushf
imul
xor
sub
push
fsubl
in
xchg
and
leave
hlt
shlb
jp
and
mov
mov
out
aas
fsts
add
inc
add
jge
sbbb
rcrb
mov
sbb
dec
add
cwtl
jmp
cltd
add
jle
add
fidivs
jno
inc
adc
or
scas
ljmp
adc
or
rclb
sbbb
and
mov
xlat
xchg
sti
scas
inc
xchg
xor
lock
sub
jnp
out
dec
in
add
mov
js
push
fwait
push
push
ljmp
sub
adc
xchg
cld
out
dec
add
xor
mov
out
dec
push
jge
or
int
xor
jo
xchg
inc
ror
lea
es
cmp
int
setno
inc
jle
add
dec
sarl
xchg
cltd
scas
cld
sbb
adc
out
cmpsl
pop
mov
leave
adc
xchg
xchg
psubq
fadds
pop
push
sub
ja
jg
mov
leave
popa
lcall
mov
into
dec
lahf
cmp
dec
or
and
dec
enter
movsl
jle
adc
jbe
jb
shrb
add
out
dec
std
rclb
and
out
dec
add
outsl
gs
dec
ret
aad
stos
xor
push
or
lods
jl
clc
pop
fstps
lock
clc
pop
inc
or
or
in
fnsave
cs
hlt
cmp
lret
pop
sahf
dec
pop
imul
xlat
mov
xor
mov
stos
and
fimuls
mov
pop
mov
push
pop
and
pop
mov
adc
test
mov
movsb
lcall
fs
mov
scas
dec
sahf
cmp
dec
inc
jbe
mov
testl
or
test
cmp
outsl
jg
xchg
cmp
shrb
and
in
add
cmp
dec
sbb
roll
out
mov
sub
add
idivb
or
out
das
pop
inc
es
in
and
dec
add
mov
icebp
add
mov
jnp
lods
xchg
and
jbe
dec
bound
movsb
and
jle
int3
cmp
dec
xchg
out
dec
add
movsb
arpl
nop
and
pop
ja
pushf
jnp
lahf
shrl
push
in
test
add
push
ds
dec
add
adc
adc
imul
jle
add
arpl
rorl
pop
scas
pop
sub
movsl
fnstenv
ja
popf
inc
push
cmp
call
lods
aad
jg
pop
mov
ds
add
cmpsl
popa
dec
ss
ljmp
outsb
cmp
dec
dec
jbe
ret
jmp
call
out
xchg
dec
mov
dec
mov
ret
cli
dec
jp
je
push
mov
push
pop
and
in
jp
hlt
fwait
inc
adc
push
repnz
pop
loopne
mov
or
sbb
add
rclb
dec
lods
pop
frstor
in
and
outsl
cmp
in
addr16
jns
rol
lea
insb
xchg
xchg
cltd
and
push
xchg
and
mov
pop
addr16
push
and
movsl
push
aam
and
negb
cld
pop
into
insl
imul
sbb
pushf
dec
rcrb
ljmp
dec
bound
rol
cmpsb
dec
xchg
cmpb
adc
lds
out
nop
jno
add
andl
lret
cmp
stos
scas
mov
mov
xchg
jbe
push
not
mov
sbb
jle
sti
jb
scas
dec
aad
add
fdivrs
mov
push
lods
pop
adc
mov
dec
fdiv
fdivl
jp
arpl
mov
fimuls
bound
add
hlt
mov
insl
stos
add
sbb
mov
mov
in
bound
mov
cmpsb
outsl
sahf
dec
mov
add
push
inc
pop
daa
mov
inc
movsb
push
or
add
or
int3
cmp
in
imul
mov
shl
cmp
push
das
jne
sbb
add
xchg
pop
lds
pop
push
push
pop
fs
jnp
cld
shl
incl
ret
cltd
test
pop
jg
nop
in
lret
in
cmp
mov
inc
xchg
ja
adc
or
jecxz
repnz
xor
cmc
jnp
push
adc
sahf
dec
rolb
push
dec
test
push
divl
or
cmp
out
jbe
mov
xchg
pushf
add
cs
ljmp
xor
scas
pushf
jle
add
pop
mov
fisttpll
int3
fldcw
ss
sbb
mov
pop
cli
test
sub
sbb
cmc
xchg
jnp
mov
incl
inc
lods
mov
dec
add
jg
in
mov
push
add
pop
and
pop
das
add
pushf
inc
adc
xchg
std
nop
in
jae
fs
daa
xchg
cmp
daa
es
inc
fsts
seto
lcall
in
cmp
fs
lret
test
cmp
mov
out
inc
fsts
stos
or
sub
cmp
and
loop
pop
mov
xchg
and
out
jmp
fisubl
dec
lods
xchg
push
ljmp
pop
mov
mov
lea
inc
js
in
sub
std
gs
pop
dec
lods
push
fnstsw
pop
xchg
and
add
jne
lods
arpl
jle
cmp
push
or
pop
inc
rol
xor
xor
fstps
jbe
mov
rcrl
lea
push
add
in
pop
hlt
data16
sub
inc
rorl
jp
or
mov
dec
inc
mov
pop
gs
pop
dec
lods
push
jae
jg
cmp
sarl
push
rol
movsb
pop
sub
fwait
add
out
jns
es
mov
push
scas
sahf
hlt
inc
push
ss
adc
dec
adc
cmp
pop
loopne
inc
cmpsb
or
rolb
adc
sbb
cmp
mov
andl
ret
cmp
xchg
pop
sbbb
jae
fs
jp
and
push
pop
xor
push
rolb
adc
sub
xchg
insb
mov
push
xchg
ljmp
imul
adc
out
dec
add
jno
ljmp
sbb
pop
es
jb
cwtl
imul
jle
pop
push
lock
push
jne
in
mov
sub
sub
dec
loop
pop
jg
movsl
cli
or
push
imul
rcll
insb
mov
fs
mov
aaa
inc
lods
leave
xchg
lcall
jae
and
std
mov
cmpsb
daa
sahf
and
cmp
mov
mov
sub
shlb
pop
and
shl
test
popa
js
stos
mov
movsl
and
popl
sub
ljmp
pusha
pop
sbb
hlt
mov
bnd
jecxz
push
lahf
popl
pop
cmc
pop
push
ss
mov
ljmp
scas
add
outsb
lret
jne
xchg
imul
fs
insb
adc
aas
arpl
sbb
cld
out
cmp
aad
es
pop
pop
dec
out
je
cltd
adc
out
cwtl
xchg
xchg
sbb
xchg
jne
test
and
push
mov
add
popa
xchg
xor
mov
shlb
ds
sbb
stos
cmp
leave
out
popf
ret
subl
scas
pop
push
call
dec
add
and
dec
and
sti
xchg
insb
scas
inc
sbb
fcompl
cmp
pop
pop
sbb
repz
pop
ds
sbb
or
pop
scas
push
fiadds
ljmp
ficoms
adc
jb
dec
lods
xchg
jne
ds
push
xor
stos
or
push
loopne
jno
mov
test
xchg
in
adc
mov
stos
and
cmp
adc
or
aad
pop
in
mov
out
mov
int
sti
pop
dec
jp
popf
jle
mov
inc
stos
xor
pushf
dec
push
xor
insb
ret
nop
bound
inc
rcll
add
rcll
and
cwtl
dec
mov
imull
and
popf
pop
mov
dec
mov
fsts
or
mov
out
xchg
addr16
pop
fs
jo
andb
clc
add
lea
cmp
mov
fs
jle
leave
ss
jnp
mov
xchg
xchg
mov
push
in
sar
fldl
mov
mov
out
add
cld
pop
cmpsb
jb
repz
ja
in
pop
mov
jmp
sub
enter
sub
cwtl
fsts
cmc
shl
popa
aas
fsts
lahf
cmpsl
arpl
dec
jne
insb
and
jns
in
shlb
clc
xchg
inc
mov
dec
xor
in
nop
and
mov
dec
mov
jno
xlat
fs
push
fbstp
xor
push
imul
adc
in
bound
mov
int
mov
adc
emms
xchg
int3
popf
dec
push
out
ds
cwtl
xchg
push
movsb
ja
fdivr
add
scas
cmpsb
mov
mov
add
and
sub
xchg
push
lahf
decl
mov
jo
mov
aam
gs
dec
fnstsw
adc
jge
xchg
dec
and
or
arpl
inc
idivb
jp
js
pop
inc
push
sub
insb
push
sub
xchg
out
movsl
movsb
xchg
fisubrs
test
sub
in
gs
sub
and
clc
mov
push
testb
dec
adc
xchg
or
lcall
scas
mov
push
imul
sub
pop
fsts
fstl
push
call
cld
and
mov
lods
ljmp
je
mov
les
pop
gs
pop
lock
xlat
xchg
sti
roll
cld
push
push
jns
in
jns
call
and
xorb
pop
xchg
push
xlat
pop
and
or
cmp
fwait
dec
adc
mov
inc
into
add
repnz
add
sbb
push
cltd
in
call
out
mov
sbbl
inc
or
nop
hlt
xor
ss
mov
adc
xor
repz
es
cmpsb
ficompl
add
xchg
sti
scas
adc
add
push
sub
jnp
xchg
mov
add
push
ss
or
dec
mov
push
dec
or
cld
cmp
ljmp
mov
insb
pusha
test
adc
in
inc
or
fldenv
cmp
mov
add
sub
sbb
or
push
aas
rol
stc
push
lods
arpl
xchg
rorl
and
inc
into
sub
mov
add
push
fnstenv
xor
xchg
xchg
jb
sub
push
sub
pusha
pop
jge
jo
movsb
xlat
ret
add
fadds
xor
fcomp
filds
test
mov
xchg
dec
xchg
adc
cmp
cmp
pop
push
or
fidivl
inc
repnz
scas
and
inc
sahf
jl
cmp
mov
iret
cli
dec
popa
cmp
aad
int
loope,pn
dec
bound
mov
xor
jg
cltd
cmp
fs
cmpsb
push
push
pop
fs
jp
sub
lret
adc
mov
mov
ja
add
aam
and
mov
das
pushaw
jl
insl
das
ss
imul
mov
rorb
adc
jge
loope
les
adc
push
or
leave
mov
dec
mov
xor
push
add
and
mov
fisttpll
xchg
fsts
sub
test
movsb
cmp
xchg
dec
mov
add
cmp
aad
ljmp
jae,pn
fs
pop
xor
popa
arpl
popf
bound
cmp
jmp
test
nop
push
push
jb
dec
cli
add
in
dec
in
add
lcall
dec
popf
push
ror
lea
insb
lea
dec
inc
mov
dec
lcall
pop
cltd
push
and
mov
adc
push
push
xchg
dec
pushf
dec
in
das
pop
loop
mov
out
mov
add
shll
cmp
dec
stos
data16
sti
orb
in
jl
push
loopne
imul
push
xchg
and
int
jns
outsb
jns
jg
pop
xchg
push
movsb
jns
in
les
push
jp
xchg
shrb
sahf
insb
jae
fs
insb
js
adc
divl
arpl
add
cmp
in
je
and
lock
insb
lcall
inc
fwait
scas
mov
js
popa
mov
adc
cmp
arpl
repnz
mov
adc
aaa
dec
std
paddusw
sub
add
add
out
inc
adc
lea
dec
xchg
mov
pop
and
add
je
xchg
sbb
dec
pop
jae
fs
ja
and
mov
test
push
or
jno
cmp
cmpsb
xchg
out
bound
jnp
sub
xchg
cltd
scas
pop
sbb
mov
leave
je
push
js
in
jae
push
cwtl
movsb
push
add
fadds
sbbl
out
cmovb
add
inc
mov
loope
or
cmp
push
add
add
lcall
ja
pop
and
dec
jp
and
scas
popl
mov
dec
push
ss
repz
repz
shll
dec
cmp
decb
sbb
call
cmp
and
ss
dec
scas
xchg
fsts
mov
out
fsts
pop
sar
in
xor
cwtl
xchg
xchg
mov
add
xor
ja
mov
lahf
and
mov
sub
leave
adc
mov
cli
mov
lcall
cmp
lahf
xchg
inc
ja
sarl
inc
jns
jg
pop
in
sti
lret
mov
and
jle
dec
pop
push
or
fnstenv
mov
fs
dec
out
push
bound
jnp
sbb
andl
add
fadds
loop
in
insb
mov
inc
inc
gs
sbbl
out
inc
std
shl
mov
arpl
mov
push
jp
push
xchg
mov
push
add
sub
mov
pop
jne
das
sti
cmp
test
sbb
or
addr16
inc
xchg
xchg
lahf
fisubrl
mull
pushf
jne
sbb
neg
adc
andb
dec
sbb
pop
push
in
mov
push
mov
xchg
dec
push
push
mov
sbb
fwait
sub
int
imul
pop
mov
divb
in
mov
xor
jb
dec
jle
xchg
inc
getsec
and
daa
adc
fiadds
in
jl
mov
push
cmp
push
push
ss
lds
dec
adc
outsl
xor
mov
fs
jbe
cld
test
and
sub
fcomp
jno
mov
cmpsb
es
inc
push
add
xchg
adc
sub
add
fdivrl
sbb
add
push
hlt
jg
js
shlb
cli
push
adc
cmpsb
inc
fwait
scas
lock
xorl
aaa
push
cltd
ds
pop
ljmp
or
and
or
shrb
jmp
rcll
push
in
jl
lahf
mov
icebp
mov
add
push
ss
push
or
xor
dec
or
cmp
or
fs
jg
cmp
aas
adc
push
xchg
adc
out
movsb
cmp
sti
lods
dec
mov
outsl
ja
cmp
rcll
jg
add
in
inc
and
mov
add
xchg
insl
push
mov
jns
adc
mov
sbb
ret
push
popa
inc
sub
jp
stc
arpl
cmpsb
out
xor
jbe
dec
jbe
popf
add
popf
cmpsl
cli
scas
insb
and
out
push
out
in
mov
shr
jns
and
les
call
push
fcmovnu
cli
test
mov
sub
jo
push
int
xor
test
xlat
xchg
sti
jmp
dec
mov
out
imul
inc
inc
js
add
dec
leave
cmp
fcomps
jne
scas
insb
in
ret
inc
push
iret
adc
adc
or
fisubrl
popa
cmp
lret
mov
in
jl
add
fadds
test
dec
jb
push
fsubr
add
fmull
mov
xor
cmp
adc
in
pop
inc
out
dec
add
cmpsb
inc
fwait
scas
jl
xor
not
inc
lock
pop
loope
sub
pop
jg
cld
movsb
sub
mov
mov
push
addr16
jns
push
push
les
test
icebp
add
adc
and
loope
pop
insb
add
fs
inc
xchg
cmp
xchg
mov
adc
sub
jge
or
fimull
dec
sar
pop
test
pop
xchg
je
pushf
inc
jb
pop
adc
mov
pop
cld
mov
xchg
inc
jge
xchg
dec
sub
data16
push
sbb
push
xchg
jne
and
inc
cmp
and
or
xchg
cmp
and
das
fs
jle
mov
pop
lock
mov
mov
fists
repz
scas
mov
inc
jmp
mov
jg
les
lret
int3
das
imul
jp
pop
hlt
ja
cld
pop
and
add
fwait
jne
lods
arpl
out
addl
push
or
jae
and
fs
popa
jge
ret
test
cmp
fsubs
pop
outsb
and
inc
cmc
mov
sub
icebp
mov
repz
lahf
cmp
dec
sub
js
and
cli
xor
out
cmp
push
push
jns
and
in
xor
push
pop
loope
inc
or
cmc
inc
push
ss
and
sub
scas
add
add
pop
aam
insb
rol
jbe
push
mov
dec
push
adc
in
rcll
sti
jp
mov
aad
insb
popf
dec
addr16
out
jmp
mov
shr
cmp
and
cmp
jae
dec
dec
xor
jmp
jmp
push
popa
ss
mov
adc
movsl
out
mov
bound
inc
mov
add
pop
dec
jae
add
push
scas
ljmp
sub
sub
fsts
std
bnd
jp
push
or
pop
int
js
add
out
pusha
lea
sub
push
mov
mov
or
sub
adc
imul
les
sbb
or
outsl
sbb
adc
jns
test
mov
imulb
ljmp
cmp
or
fldenv
jbe
sysret
mov
push
imul
or
out
fcmovbe
lock
jbe
cwtl
pop
test
call
cmp
mov
hlt
dec
mov
fsts
adc
push
out
xchg
mov
cwtl
xor
xor
xchg
js
xchg
sub
lcall
roll
jmp
js
sub
or
leave
in
xor
mov
jns
adc
movsb
pop
subb
in
nop
and
out
scas
out
mov
hlt
mov
sahf
and
adc
dec
in
das
pop
loope
pop
icebp
mov
xchg
dec
mov
push
roll
xchg
cmp
add
sub
push
and
pop
arpl
xchg
js
xchg
mov
mov
dec
push
push
adc
push
mov
xor
xchg
cmp
push
mov
jmp
xorl
loope
mov
dec
cltd
cmp
sub
ja
jg
test
popa
call
inc
mov
imul
dec
push
or
xor
xchg
ja
hlt
adc
push
lock
xlat
xchg
sti
shrl
xchg
push
es
jns
call
xlat
add
lds
fs
mov
mov
push
ret
inc
lods
sub
sub
test
ret
xchg
je
and
insl
sub
pop
cltd
pop
adc
jge
xchg
dec
cmc
inc
rcl
repz
in
subb
fmull
call
in
icebp
push
arpl
add
fs
mov
mov
xor
push
pop
push
or
xchg
jnp
pop
lods
fs
out
jecxz
xlat
push
mov
inc
aam
enter
add
fdivrs
cld
sbb
mov
test
js
jg
fldcw
inc
ljmp
push
inc
test
dec
pop
mov
lea
aas
mov
xchg
jae
adc
xor
movsb
ret
cltd
pop
xor
in
cmp
jb
movl
cli
ljmp
fs
fs
inc
xchg
cmp
lods
dec
std
xchg
push
in
test
add
xor
sub
mov
imul
dec
movb
inc
jle
push
mov
xchg
cmp
arpl
mov
adc
push
ljmp
ret
cmp
je
scas
mov
sbb
add
mov
aam
xchg
cwtl
test
mov
test
test
lcall
es
sbbl
in
mov
and
lcall
mov
add
es
outsl
cmpsl
daa
pop
testl
mov
pop
or
std
pushf
fnstsw
push
inc
add
fadds
mov
in
cltd
mov
fcoms
jbe
push
int3
cmpsl
push
pop
and
sgdtl
cmpsl
pop
mov
out
lcall
fsts
xchg
push
push
adc
imul
pop
adc
stos
daa
mov
test
movsb
fisttpll
addr16
scas
psubd
jns
addr16
js
adc
jecxz
adc
fiadds
push
mov
add
and
lock
and
dec
jge
clc
and
dec
mov
outsl
xor
lret
imul
mov
ret
ficomps
cmp
push
add
and
add
cmp
jecxz
insb
jecxz
or
mov
repnz
and
es
shrb
lcall
xchg
orl
mov
adc
mov
xor
ja
push
rcl
std
and
push
push
mov
mov
cltd
aad
popf
jbe
pop
sbb
cmp
lods
pop
adc
inc
clc
shll
fmuls
jnp
pop
fsts
pop
and
daa
je
mov
jne
lods
arpl
fiaddl
inc
loopne
inc
in
xchg
and
ret
dec
jecxz
test
cmp
fwait
cmpsb
daa
mov
add
pop
pop
test
call
xchg
outsl
dec
lods
xor
cmpb
dec
add
rorl
cwtl
fsts
in
mov
mov
out
sub
test
in
xor
scas
in
icebp
mov
sub
out
dec
lods
cmc
or
test
pushf
orb
test
movsl
mov
icebp
mov
mov
ret
fimull
fstpl
and
lcall
fs
push
add
mov
fadds
push
gs
mov
shufps
in
dec
andl
hlt
les
cmp
cwtl
xchg
lods
mov
lcall
jmp
and
cmpsb
out
lea
sbb
js
inc
hlt
les
pushf
and
jp
push
stc
rolb
int3
and
pop
push
jp
sahf
jge
sbb
in
clc
push
jl
fimuls
xchg
add
or
mov
dec
xor
shr
jbe
es
imul
mov
add
push
fnstenv
pop
lcall
mov
pop
out
loopne
aam
and
aad
xorl
push
add
xor
pushf
fimull
jle
xchg
dec
inc
jecxz
mov
xor
jl
in
cmp
stc
out
cmp
pop
adc
lods
test
mov
xchg
dec
dec
push
xor
cmp
shr
or
fstps
jbe
shll
or
cmp
mov
cmp
push
xchg
push
popa
jge
pop
and
out
dec
mov
cmpsl
pop
je
push
mov
lods
ljmp
sbb
inc
mov
add
test
dec
add
jbe
jge
arpl
lock
aaa
push
jae
leave
ret
cmp
mov
mov
fsub
rcll
in
std
enter
and
dec
hlt
fdivrl
stc
lea
push
dec
movsl
std
pop
push
sbb
test
mov
dec
lods
mov
addl
add
leave
jl
add
pop
bound
xchg
cli
mov
and
push
cmp
stos
in
iret
sbb
mov
daa
fs
dec
les
out
jbe
push
arpl
xlat
push
in
sahf
jmp
xchg
test
fs
std
xlat
fnstsw
xlat
mov
les
mov
mov
or
inc
push
cltd
jns
hlt
mov
insb
ljmp
xlat
xchg
sti
ficoms
dec
in
out
push
sub
jnp
cvtpi2ps
popf
mov
lods
ljmp
push
es
bnd
decl
gs
aad
xchg
pusha
pop
adc
into
add
sub
ljmp
add
and
cmp
dec
push
fcmovnu
mov
or
out
add
and
xchg
inc
shr
mov
cmpl
ja
mov
inc
push
arpl
popf
push
xlat
loope
add
jle
pusha
test
jae
mull
add
repnz
add
ss
fiadds
pop
jmp
jo
mov
lods
out
mov
pop
dec
lahf
cmp
dec
inc
pop
pcmpeqb
and
xchg
dec
mov
pop
and
cmpl
fwait
scas
js
sub
and
ss
cltd
es
sti
in
dec
mov
std
imul
adc
sub
push
decl
aaa
call
daa
push
in
jne
rcrb
inc
scas
mov
in
jp
pop
sub
pop
and
fucomp
das
mov
mov
arpl
and
mov
sub
clc
dec
add
add
push
xchg
loop
xor
mov
sub
cmpsb
and
and
jae
insb
jl
out
jp
pop
loop
pushf
adc
mov
add
sbb
dec
inc
inc
and
mov
push
and
cmp
lret
xor
jecxz
out
dec
inc
jns
push
popl
add
mov
push
and
xchg
push
test
add
jle
aas
xor
sub
cmp
inc
arpl
inc
jmp
jno
ja
dec
jg
out
inc
imul
and
out
pop
xchg
inc
into
std
les
je
testb
ds
js
jnp
adc
push
gs
mov
jnp
cltd
pop
dec
into
add
fs
movsb
fimull
popf
les
outsb
in
arpl
add
out
xchg
push
xchg
int3
inc
call
cmc
mov
and
lcall
cmp
ss
aam
adc
cmp
fidivrs
fidivs
or
dec
cmp
lcall
or
sbb
or
cmp
push
lock
orl
push
ljmp
popf
and
ret
decl
jbe
insb
scas
clc
cmp
aas
iret
or
aaa
aad
jge
mov
insb
scas
rol
push
xchg
lahf
adc
jge
in
push
dec
xchg
cmp
cmp
and
xchg
in
scas
lods
fnstenv
cmc
int
jnp
adc
fiadds
in
in
mov
std
rorb
mov
push
xchg
xor
icebp
push
jno
mov
ret
inc
pusha
pop
repnz
lret
xchg
push
mov
int
adc
dec
clc
jae
int3
jne
push
sbb
pop
or
shl
pusha
jecxz
sbb
or
jg
inc
dec
leave
sti
cmp
stc
ret
aaa
subl
push
sbb
imul
and
std
pop
sbb
jl
cmp
jne
aam
in
xor
lcall
popa
push
ss
lods
or
mov
stc
adc
shll
jnp
cltd
scas
in
cmp
cmp
aaa
mov
pop
adc
mov
imul
stos
jmp
push
push
mov
decl
stos
movsb
in
sbb
add
lock
xlat
ljmp
dec
ja
mov
pushf
jl
call
cwtl
outsl
sub
adc
sbb
nop
push
push
push
or
lcall
jns
and
xchg
mov
repnz
cltd
mov
xchg
test
push
pop
push
mov
dec
adc
push
pop
lcall
mov
add
mov
add
sbb
daa
dec
pushf
in
sub
in
mov
xlat
xchg
sti
scas
js
fs
popf
jne
pop
sub
jl
clc
popl
add
inc
push
ss
mov
cmp
dec
push
pop
push
pop
fs
jo
fbld
int
mov
inc
je
or
or
sbb
and
add
fadds
stos
pop
rorl
dec
fnstsw
fs
mov
xlat
xchg
sti
enter
cmp
popa
sub
jge
int
push
fadds
nop
scas
lret
cmp
mov
subb
ss
imul
rcrl
lahf
repz
dec
add
mov
inc
addr16
js
xor
cmp
and
push
stos
xchg
push
fs
mov
xlat
xchg
sti
movb
fwait
pop
xchg
out
push
sub
jnp
in
mov
cmp
out
dec
mov
mov
mov
dec
sahf
dec
mov
add
jle
or
popf
test
push
add
and
test
cmp
lahf
nop
enter
cmp
or
mov
mov
sub
cmc
dec
push
ss
data16
or
popa
dec
adc
neg
push
mov
adc
sahf
xor
pop
jp
popf
jbe
pop
int3
mov
push
add
or
js
mov
add
and
mov
jle
pop
popl
mov
lods
ljmp
sbbb
add
ficompl
insb
xor
pop
push
mov
xchg
jno
add
js
jl
mov
pop
repz
pop
dec
stos
push
fsubl
jns
seto
mov
push
sub
mov
adc
xorb
loop
mov
es
dec
mov
xchg
into
bound
jb
mov
ficoms
adc
xor
push
loope
mov
icebp
loopne
aad
xchg
pusha
pop
cli
fmul
fcoml
push
call
pop
jecxz
shll
je
jnp
arpl
lock
mov
mov
int
imul
ret
inc
pop
rcrl
stos
adc
and
cld
stos
add
mov
into
sysret
stos
pushf
jnp
and
aas
out
push
mov
bound
ds
mov
test
push
add
and
ljmp
dec
mov
fsts
jnp
ds
add
cmp
addb
or
and
mov
mov
mov
xlat
xchg
sti
call
dec
dec
shr
popa
sub
jge
adc
xchg
push
inc
shlb
stc
dec
add
cmp
sub
js
and
and
mov
scas
jnp
rol
xchg
push
xchg
cmp
das
pop
mov
nop
movl
ja
or
rolb
cmc
je
or
xor
xchg
inc
fcoms
mov
mov
sbb
dec
add
cwtl
pop
xchg
repnz
sub
loop
xor
sbb
hlt
push
jle
adc
or
jl
pushf
pop
data16
hlt
enter
jmp
push
jl
add
cmp
daa
add
popf
cmp
jns
into
stc
inc
into
cld
jecxz
test
mov
and
insl
out
cmp
arpl
mov
and
jmp
or
cmp
add
push
out
inc
fldenv
jbe
pop
and
xor
cmpsl
and
and
shrb
push
or
mov
mov
fs
mov
sbb
xchg
sbb
flds
call
pop
fs
mov
cmpsb
dec
jb
add
and
xor
cmp
out
dec
enter
push
and
addl
mov
lahf
xor
cmp
cmpsl
aas
cmp
push
in
dec
add
cmpsb
dec
fwait
scas
pop
cmp
mov
clc
jo
push
pop
adc
imul
fnstenv
inc
stos
mov
pop
popf
ret
mov
lods
adc
fistpll
sub
or
mov
push
roll
jnp
and
repnz
es
push
fstp
arpl
dec
out
movsb
sbb
js
xchg
dec
fadds
es
aaa
js
push
xchg
pop
popa
add
adc
imul
das
mov
dec
mov
jb
push
dec
cld
mov
xchg
fidivrl
jle
cmp
adc
call
inc
pop
push
addr16
ds
ss
insl
or
sbb
ja
dec
sbb
std
rcrl
mov
fs
std
rclb
mov
fs
dec
movsl
cmp
dec
test
push
push
pop
out
mov
add
pop
inc
fsts
shlb
int3
add
adc
inc
into
add
hlt
dec
add
xchg
test
and
cmpsb
out
xchg
inc
xchg
les
sbb
in
test
push
adc
dec
mov
add
sub
lcall
inc
cmp
adc
fdivrs
add
pop
lahf
out
cmpsl
ficoml
jbe
pushf
dec
pop
movsl
jns
dec
push
dec
in
inc
jmp
cmpsb
ja
jg
in
push
aad
mov
xor
cmp
or
jle
scas
cmpsl
xor
add
cwtl
leave
sbb
lock
add
in
sub
out
bound
loope
bound
mov
add
xchg
sbb
and
and
dec
jp
or
xchg
cmp
movsb
pop
dec
sbb
imul
dec
pop
clc
in
pop
dec
pushf
cmp
sbb
lods
mov
inc
leave
mov
stos
cmpsb
pop
inc
cmpsb
out
mov
pop
and
add
jae
fwait
adc
sbb
jmp
out
or
lcall
add
xchg
xchg
xchg
or
jnp
push
in
test
hlt
xchg
je
out
jl
mov
add
and
out
