add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
jns
roll
push
pop
adc
pop
pop
scas
or
add
add
add
xor
push
add
add
add
add
imul
add
inc
add
scas
add
add
add
add
add
add
add
add
add
add
outsl
add
add
adc
testb
add
add
add
add
add
lcall
add
add
dec
add
add
add
add
add
add
add
add
add
inc
add
add
jbe
scas
add
add
jbe
scas
add
inc
add
add
add
scas
add
add
add
push
add
add
add
add
add
add
add
add
scas
add
add
add
scas
add
add
add
add
scas
add
add
add
daa
add
add
add
daa
add
add
add
addl
add
add
scas
add
test
rolb
add
xchg
out
add
add
sub
mov
scas
add
add
data16
add
add
add
add
add
add
add
add
mov
daa
add
adc
xchg
add
jns
and
mov
add
add
add
add
add
mov
pop
add
add
add
add
add
roll
data16
add
add
arpl
mov
fldl
je
sbb
loop
sbb
scas
add
add
add
add
add
add
pop
add
add
add
out
add
add
add
bound
insl
add
loop
dec
add
add
dec
add
scas
add
add
add
add
add
sub
jecxz
lcall
add
add
add
jle
loop
jbe
scas
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
scas
add
add
add
add
leave
add
adc
testb
add
add
dec
add
add
add
add
add
add
flds
mov
inc
add
add
add
add
add
add
scas
add
add
add
add
xchg
add
add
add
mov
add
add
flds
inc
add
cwtl
add
add
add
add
add
add
add
add
add
add
dec
add
mov
jae
and
dec
add
add
add
add
add
inc
add
add
add
jns
adc
scas
add
add
add
scas
add
add
pop
add
data16
add
add
add
add
mov
add
outsb
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
sbb
push
add
add
add
sub
add
scas
add
xor
add
add
or
add
add
sub
mov
add
dec
add
and
add
add
add
dec
add
mov
add
add
sub
or
xor
jns
push
dec
cmp
mov
cmpsb
lods
lea
jno
sub
icebp
fisubs
inc
mov
imul
jge
mov
insl
in
aam
in
clc
in
pop
push
or
push
mov
xlat
lcall
adc
pop
fsubs
jo
adc
movsb
sti
fwait
scas
xchg
popa
sub
add
push
fwait
mov
push
fsts
push
imul
mov
test
and
xorl
add
lcall
in
js
stos
hlt
mov
mov
es
nop
dec
call
sbbl
and
dec
mov
push
lea
int3
popa
xchg
ret
mov
xor
sub
not
test
rclb
push
filds
and
ja
push
popf
repnz
push
bound
mov
adc
jae
mov
fmuls
xor
cmpsl
shrb
jmp
push
sarb
inc
mov
dec
cltd
xchg
arpl
sub
mov
fisttpll
movsl
push
lds
adc
sub
ljmp
dec
addr16
xor
js
sub
stc
andl
cmp
jg
or
or
dec
xchg
inc
roll
cmp
jnp
mov
sub
push
decb
jnp
pop
or
xchg
sahf
jmp
call
and
mov
int
jae
add
lcall
adc
imull
dec
push
sti
push
pop
jae
ret
outsb
out
sarl
mov
and
test
cmpsl
mov
lock
push
ffree
mov
fsubrs
outsb
cwtl
add
cmc
add
std
xchg
sarb
add
inc
sub
push
jge
push
or
cmp
cmp
sub
xchg
adc
mov
cli
pop
cmp
sbb
roll
adc
std
cld
or
lret
arpl
stos
imul
je
dec
mov
and
js
or
push
and
mov
xchg
xchg
outsl
das
ss
shrl
mov
push
cmp
fsubs
sub
test
or
cltd
pop
mov
out
xor
inc
lret
out
enter
or
fdivr
push
int
loop
nop
adc
repz
test
xorl
pushl
int3
lods
mov
or
adc
fistl
loop
mov
xor
inc
push
mov
nop
cltd
cltd
xor
and
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
push
cmc
aad
in
cmc
cmp
imul
inc
mov
fs
adc
xor
or
sbb
sub
cmp
push
jp
mov
add
jne
add
ljmp
in
cmc
and
jb
pusha
inc
imul
mov
mov
aad
test
movsl
mov
pop
hlt
xchg
push
and
or
and
nop
push
pop
pop
nop
mov
lcall
or
mov
sub
cmc
aam
ljmp
pop
cs
rclb
push
mov
mov
adc
cli
add
sbb
sub
or
xor
gs
popf
inc
in
inc
and
cmp
sub
mov
loopne
insl
push
cmpsb
movsl
cmp
lcall
jge
mov
add
jo
gs
mov
mov
mov
adc
ljmp
cmc
and
jae
arpl
push
andb
mov
and
outsl
xchg
sbb
sbb
xor
push
rclb
sub
call
aad
cmpsl
pop
mov
inc
xchg
lcall
aas
loopne
icebp
push
pop
repz
sbb
mov
sub
xchg
dec
les
xchg
pop
movsl
push
jp
mov
gs
jne
add
ljmp
in
cmc
cmp
push
jp
mov
gs
jne
add
ljmp
push
ja
insb
sbb
bound
movsb
jne
adc
push
cmp
es
out
cmp
push
lds
fimuls
sub
push
push
xor
icebp
std
push
aas
adc
add
sub
jb
mov
repnz
call
cmp
icebp
inc
test
jns
or
jb
or
or
and
pop
dec
aas
sbb
mov
movsl
lahf
addr16
and
add
scas
cmovns
les
add
repnz
mov
dec
call
cmp
popa
adc
call
pop
shrb
dec
adc
and
arpl
xor
pusha
and
jns
cmp
adc
out
jg
dec
insb
mov
xchg
add
mov
jb
or
add
xor
push
repnz
jo
ja
gs
pop
pop
lret
fcompl
pop
inc
aad
mov
std
enter
xor
xor
lret
lods
adc
bound
jae
leave
sub
movsl
mov
mov
sahf
rcrb
je
iret
and
fstpl
mov
xchg
cld
mov
dec
mov
mov
inc
icebp
lods
mov
jecxz
sbb
cmp
jl
sub
dec
mov
jp
mov
leave
jne
push
dec
mov
xchg
pusha
mov
fisttpl
and
mov
pop
shl
mov
cmpsb
add
jne
cmc
xchg
mov
inc
lahf
insb
in
push
js
es
popf
lds
mov
jns
mov
iret
sbb
int3
fadds
cwtl
sub
ds
push
std
sub
movsl
push
or
call
inc
lods
cmpsb
pop
mov
gs
subb
pop
pop
movsb
jns
stos
fdivrs
cmp
inc
fstpt
mov
cmp
pop
cli
ds
nop
sbb
push
xor
and
pusha
cld
xor
fstpt
clc
sarb
or
sub
sahf
loope
jmp
or
sbb
insb
insl
hlt
cli
aad
mov
bnd
jl
je
lahf
mov
fldcw
repz
out
pop
cmpsl
xchg
adc
andl
mov
mov
dec
fwait
out
out
mov
insl
or
fistps
mov
mov
cmpsb
ficompl
adc
cmp
aas
jle
xor
lds
xchg
test
inc
sahf
mov
subl
clc
into
in
cmp
and
jge
pusha
fistps
adc
andb
xchg
and
xchg
mov
pop
test
pushf
stos
or
rcrb
and
xor
xor
mov
adc
mov
cmp
xchg
xlat
push
js
inc
ja
jl
ret
cmp
mov
shld
flds
loopne
cmp
in
push
pop
add
mov
pop
js
push
and
or
inc
or
in
push
xchg
fiadds
sub
inc
daa
and
jg
jle
mov
mov
cmovs
and
sbb
lods
jge
into
js
inc
pop
int3
rcrb
and
xchg
sub
arpl
pop
push
aam
daa
inc
es
psubd
jp
aam
dec
sbb
into
push
jge
pop
out
fwait
sub
je
or
pop
mov
jb
ds
rol
sub
mov
in
dec
or
xchg
lock
fmuls
jb
orl
cmc
inc
or
xor
lea
fsub
pop
int3
rolb
addb
aas
wbinvd
out
scas
jg
and
xor
mov
cmp
aad
sbbb
pop
out
xchg
aam
push
test
pop
push
jecxz
xchg
inc
sbb
loopne
xor
dec
push
cmp
sti
leave
in
dec
dec
jne
cmp
xor
call
push
leave
hlt
mov
lahf
push
rclb
sbb
ror
fnstsw
push
movsl
xchg
sbbb
fisubrl
repz
cmp
in
xchg
xlat
pop
xor
inc
aad
inc
fistpll
mov
and
in
shlb
sahf
adc
sahf
add
lock
push
sbb
daa
hlt
mov
ds
xchg
and
ret
hlt
cmpl
sub
inc
roll
dec
aaa
mov
adc
cmp
jl
lahf
or
imul
adc
push
mov
je,pt
push
outsl
addr16
pop
push
mull
mov
in
cmp
pop
pop
cmc
xchg
je
xchg
pop
lods
movsl
mov
out
mov
pop
repz
fs
js
lcall
out
mov
mov
jecxz
mov
daa
push
das
cmpsl
shll
push
pushf
or
jp
into
in
xlat
insb
jle
jl
ror
mov
push
push
add
jae
sti
ret
jae
jmp
cli
xchg
cs
gs
fsubp
imul
jmp
mov
dec
lea
popl
ficoms
mov
dec
jge
inc
cmc
mov
and
clc
push
inc
daa
adc
dec
ljmp
test
test
movsl
test
pushf
sbb
or
bswap
inc
xor
stos
pop
fsubl
movsl
and
mov
ljmp
xchg
mov
push
cmp
push
test
hlt
mov
shll
mov
rep
cmpsb
jle
add
pop
pop
ret
lock
lret
xchg
mov
dec
out
jb
mov
xorb
mov
push
jo
mov
sub
arpl
xor
dec
pusha
or
notb
fdivrp
sub
xchg
ljmp
or
stos
mov
nop
push
stos
cmp
pop
notl
filds
mov
mov
dec
sub
mov
jp
shlb
into
outsl
fbstp
push
and
lods
add
lret
mov
mov
pop
rorl
movsb
jmp
stos
mov
xor
push
sbb
cmpsb
or
aas
ja
jle
test
xchg
jne
xor
xor
addr16
sbb
jae
and
je
rclb
out
js
mov
shll
ja
mov
loopne
clc
add
dec
movsb
loop
int
mov
ja
int3
push
bound
mov
mov
or
add
mov
push
push
inc
in
outsb
push
inc
icebp
sub
sti
xchg
xor
and
jnp
cmc
sbb
ffree
inc
ds
mov
sub
inc
push
scas
stos
inc
hlt
sbb
jae
xor
sarb
movsb
mov
lods
cs
loop
aad
divb
add
add
mov
mov
push
sub
push
ss
and
arpl
icebp
lds
cmpsb
lcall
out
mov
xchg
xor
xchg
add
iret
mov
rorl
and
addr16
jae
xor
loope
daa
add
out
xchg
push
das
inc
leave
popf
scas
in
push
mov
pop
lahf
stos
inc
sub
xchg
pop
jae
and
jno
or
sub
inc
rorl
jns
mov
sbb
add
adc
sub
ret
cmp
and
add
repz
pop
lock
cmp
jne
fwait
mov
sbb
lea
jecxz
mov
outsl
mov
inc
sub
mov
mov
clc
loop
pop
dec
pop
cmp
outsl
xor
and
xchg
push
movsb
mulb
or
jnp
mov
adc
decl
std
data16
lret
test
nop
cld
les
jo
lods
das
arpl
mov
pop
pop
mov
test
fcomps
gs
mov
lret
aad
pop
scas
mov
or
xchg
lahf
outsb
cmp
pminsw
pop
add
lea
jb
mov
mov
sbb
inc
aad
jge
lcall
or
sbb
sti
lret
cmp
out
int
jns
xor
rorb
cmp
shr
mov
fcmove
ja
and
jae
dec
enter
ret
pushl
lock
xor
hlt
loop
or
mov
mov
and
ljmp
data16
mov
xor
push
pushf
cltd
or
inc
pop
sub
push
push
popa
test
enter
insb
pop
dec
aas
cmpsb
add
sti
lahf
stc
cmp
movsb
mov
pop
or
dec
shlb
data16
clc
push
push
jae
lret
xchg
int
mov
sbb
inc
insl
nop
sub
pop
jo
pushf
pop
test
jnp
push
in
rolb
jns
outsb
les
mov
jne
ds
inc
lds
xor
test
dec
xor
das
les
cmp
pop
iret
cmp
sbb
lahf
cmp
insl
jg
pop
cmp
outsb
je
mov
aad
xchg
lret
and
mov
add
and
or
pop
lret
ficomps
pop
aam
mov
pop
cmp
push
push
pop
push
lods
xor
adc
dec
add
jg
mov
sub
jge
movsl
flds
mov
jmp
lret
insb
cli
adc
cltd
mov
sti
sub
sbb
sarl
inc
rcll
out
mov
ret
push
dec
xchg
aas
and
stos
inc
aaa
xchg
loopne
push
jo
xor
mov
mov
orl
ljmp
fstl
in
mov
jg
and
add
icebp
mov
cmp
arpl
cmpsb
flds
and
insl
das
mov
adc
push
lret
xchg
xor
fistpll
or
dec
das
outsb
not
test
xor
insl
pushf
int3
fistps
xor
int
xchg
cmp
adc
push
jne
in
sub
mov
rcr
not
cmp
add
out
pop
loopw
pavgw
sub
push
jmp
ret
jmp
mov
lret
and
pop
mov
xor
jle
jo
ja
loopne
pushf
dec
cltd
pop
inc
and
xor
jmp
xchg
outsl
scas
sbb
jl
or
aas
push
nop
call
xor
cmp
lret
xchg
inc
push
imul
inc
mov
cs
mov
cmpb
add
and
mov
pusha
mov
adc
std
push
inc
xor
mov
push
ja
fldl
or
lods
ljmp
outsb
std
inc
out
inc
mov
xor
out
or
mov
test
sbb
push
std
ja
adc
leave
cmp
xor
push
rclb
fnstenv
or
push
insb
mov
test
push
jnp
mov
outsl
test
cwtl
sub
xchg
mov
jmp
cmc
sub
jmp
jecxz
iret
mov
je
push
in
fcomps
xor
lret
fstpl
and
sub
push
cmp
adc
xlat
jns
xchg
pop
fiaddl
ret
inc
inc
mov
imul
shlb
in
jb
movsl
xor
mulb
sbb
fnsave
xchg
jns
mov
jno
pop
mov
scas
add
jae
imul
cmpsl
xchg
cmc
sbb
popa
push
pop
mov
mov
fistl
repnz
jno
sbb
sbb
cwtl
sbb
xchg
add
test
mov
lret
int3
adc
mov
loop
inc
push
sub
lock
insb
inc
push
mov
lods
fstpt
out
testb
outsl
neg
pop
sarl
shll
or
push
cwtl
fucomip
mov
std
and
jl
out
add
jle
repz
cmc
pusha
pop
dec
stos
icebp
inc
imul
inc
stos
xor
popa
fstl
jae
adc
cmp
aam
insl
jo
in
addr16
sbb
and
xchg
push
xchg
xchg
in
push
imul
xchg
movb
stos
mov
rcll
sub
pop
aad
loope
mov
push
jnp
leave
mov
fdivrl
xor
jno
jmp
xchg
inc
test
stos
pop
test
adc
sti
loop
or
ret
mov
xor
jb
and
inc
dec
and
push
add
xchg
ss
add
fs
cmp
jg
xchg
shrl
stos
mov
mov
dec
push
push
cmc
sub
popa
jg
enter
divl
dec
neg
out
lret
mov
fimull
xchg
cmpsb
or
daa
sahf
push
fcmovne
and
adc
or
xlat
push
mov
insb
mov
sti
fld
inc
mov
jg
add
mov
shll
dec
pop
cmpsl
dec
cmp
in
scas
iret
lods
or
lock
jns
jne
cmpsl
movsb
imul
xlat
add
fdivs
mov
sbb
pusha
lea
dec
popf
inc
pop
movsl
and
ljmp
jns,pn
fsubrl
jbe
movsb
dec
mov
inc
test
icebp
pushf
in
sub
in
jbe
test
je
adc
or
inc
xor
jae
push
adc
dec
out
pop
cmp
aam
test
sbbb
xlat
shrl
movsb
test
loop
in
out
push
mov
push
shrb
jne
jnp
mov
popf
add
pop
les
cmp
hlt
out
dec
ljmp
xor
mov
outsb
add
stos
ss
jg
add
push
jo
xchg
lods
stc
sub
jbe
pusha
nop
push
imul
dec
xchg
inc
inc
cmp
pop
out
inc
loop
ret
repnz
and
in
imul
shr
xchg
inc
in
pop
add
mov
shll
jae,pt
pop
sbb
in
dec
inc
push
outsl
xchg
lret
inc
and
outsl
sahf
data16
inc
stc
nopl
shr
dec
xchg
cmp
or
mov
lds
mov
pop
pop
cs
mov
mov
mov
dec
inc
data16
push
push
add
mov
jo
adc
scas
and
iret
lret
pop
test
sub
sbb
dec
push
pop
aam
jnp
xchg
js
dec
jbe
test
sbbb
and
in
sbb
enter
loop
jbe
inc
dec
lods
jns
sub
push
cmp
mov
adc
test
out
std
xchg
dec
std
repz
dec
sub
mov
mov
mov
test
lock
or
add
add
das
dec
dec
pop
imul
cmp
add
pop
and
sbb
imul
jecxz
pop
in
movsb
add
fimuls
mov
push
xor
ja
adc
iret
sbb
nop
lahf
jae
imul
mulb
push
sarl
sahf
mov
pop
shll
int3
or
xor
inc
imul
or
sbbl
imul
mov
mov
jmp
sbb
icebp
or
repz
insl
jae
jl
rcrb
xchg
int
sbb
pop
xor
andl
repz
inc
dec
std
push
push
shrl
mov
jl
das
inc
and
ret
gs
add
outsl
loope
sub
mov
add
data16
loopne
cld
cwtl
mov
call
icebp
test
or
jecxz
add
cli
or
lahf
fwait
adcl
rorl
mov
das
push
cmpsb
arpl
adc
ja
mov
mov
mov
mov
xor
dec
dec
and
xchg
push
js
jmp
mov
mov
cld
pop
push
lods
or
out
and
std
mov
cmp
notl
jbe
mov
push
add
mov
std
bound
jge
mov
jbe
adc
mov
dec
mov
inc
xor
cmp
arpl
and
inc
test
test
xchg
and
mov
mov
stos
xchg
add
ds
aaa
sbb
test
insb
jge
lret
stos
jecxz
pop
adcb
jno
imul
push
popa
stos
out
cs
and
in
jecxz
into
pop
out
adc
sub
ss
mov
sahf
les
mov
jle
and
jns
scas
xchg
adc
and
jns
pop
dec
es
mov
movsb
test
jb
xchg
stos
fidivrl
or
adc
cmpl
push
movsb
cmp
xor
xor
pop
jnp
cmp
rcrl
je
dec
clc
jno
pop
loope
mov
gs
and
test
js
std
jge
ret
dec
pusha
pop
cwtl
popf
cmp
jbe
xchg
das
in
ret
pop
cmpsl
cld
mov
into
fcomps
push
mov
mov
popf
push
mov
fdivr
ret
xor
in
dec
int3
popa
push
faddl
test
lods
pop
cmp
insb
mov
frstor
cmp
cmp
sub
mov
jge
imul
popf
dec
scas
jp
sub
xor
cmp
gs
mov
mov
cmpl
fsts
pop
iret
xchg
je
inc
fisubrs
lock
cltd
push
add
jae
int
and
sbb
add
jo
into
jmp
push
pop
repnz
int3
push
fdivp
aad
addl
lahf
jecxz
adc
and
insb
ljmp
mov
and
call
cmc
lret
adc
ds
or
cli
mov
cmpsb
adc
inc
mov
xchg
or
outsb
add
mov
int3
es
dec
cmp
roll
addr16
cmpsl
out
push
cmpsb
lock
xchg
ss
imul
and
xor
cwtl
insl
add
jle
divl
jecxz
mov
out
fsts
lds
test
cmp
mov
outsl
sbb
mov
loop
iret
shll
push
push
leave
push
test
pushf
stc
xlat
and
fmuls
push
rorl
sub
sarl
ljmp
fistpll
xlat
mov
das
out
mov
pop
mov
mov
int
add
imul
mov
and
jnp
adc
xor
movb
data16
mov
mulps
push
movsl
out
aas
test
sbb
xlat
add
outsb
cmc
std
test
jle
jl
add
fdivrp
xlat
dec
mov
or
add
xchg
test
popa
mov
aaa
mov
xor
fsubrs
jp
mov
insb
push
jbe
out
orl
adc
jecxz
xor
imul
add
rol
sub
and
jge
add
mov
cmp
lret
fildl
popl
fwait
push
add
push
lcall
dec
push
pushf
mov
rcrb
sbb
rcl
dec
aad
mov
and
xor
fidivrl
lret
adc
cmp
fcmovbe
jl
adc
repz
push
cmp
outsl
inc
insb
xchg
ja
pop
lcall
or
lock
xor
add
mov
fbld
sub
ds
or
and
sub
test
xor
int
leave
xchg
jl
shll
and
inc
lret
test
sub
je
out
mov
mov
xchg
roll
mov
inc
sub
dec
mov
push
xchg
adc
stos
xchg
in
xor
cwtl
cmp
jb
jp
lods
xchg
mov
jne
inc
rclb
mov
cs
sbb
lea
jno
call
cmpsb
icebp
fsubrs
and
push
lret
or
xchg
fdivs
push
and
and
and
testl
jne
xor
ljmp
dec
xchg
add
cld
add
and
jne
inc
xchg
mov
jge
bound
cmp
pop
mov
sub
inc
cmp
mov
add
in
inc
and
mov
enter
lock
jp
sahf
jne
stos
mov
xchg
xchg
icebp
add
testb
xor
int3
stos
scas
mov
push
rorb
je
jns
mov
fisubl
mov
jmp
add
cmp
sub
insl
mov
cmp
outsl
jg
adc
gs
pop
xor
mulb
addr16
shl
stc
lods
nop
out
cmpsb
jno
add
ja
fisubrl
adc
insb
mov
mov
or
mov
jge
inc
bound
mov
xlat
cmp
and
pop
cmc
andb
test
out
mulps
arpl
mov
xor
mov
nop
ljmp
lods
testb
jb
ja
xor
mov
push
rolb
imul
mov
into
in
jnp
call
sub
xor
out
aaa
pop
or
inc
lods
ds
pop
add
loopne
mov
xor
pushf
add
aaa
in
idivl
add
inc
mov
sbb
lret
push
mov
jmp
ljmp
cmc
cmp
push
jp
mov
gs
jne
add
ljmp
in
cmc
cmp
push
jp
mov
gs
jne
add
ljmp
in
cmc
cmp
push
jp
mov
gs
jne
add
jmp
cli
les
aam
in
cmc
cmp
push
jp
mov
iret
stos
jne
jb
popf
and
inc
xchg
push
test
jae
add
add
xor
adcl
je
fs
xchg
push
test
mov
movsb
add
adc
and
xor
xorb
ret
es
inc
mov
lea
mov
cmp
adc
daa
mov
push
call
push
out
or
rcrl
ret
pop
sbb
add
test
loopne
mov
lods
xchg
iret
cmpsl
mov
push
jecxz
div
sub
or
cli
pand
sbb
or
out
push
xchg
lret
out
sub
add
negb
fistl
je
and
dec
lahf
idiv
aam
aam
xorb
ret
cli
addr16
or
shll
pop
jnp
dec
out
sar
adc
mov
cld
mov
sti
jecxz
mov
push
xchg
push
pop
daa
mov
lock
cld
pop
cli
popa
fdiv
push
mov
jl
outsb
push
pop
fisttpl
jl
movsb
mov
addl
out
imul
hlt
xchg
std
add
sub
cltd
pop
xchg
outsb
mov
sub
shrl
push
cwtl
xor
xchg
xchg
inc
icebp
xor
inc
lret
or
std
ss
adc
adc
push
jbe
andb
pusha
andl
and
inc
lret
adc
xchg
aas
test
shlb
loope
out
les
hlt
xor
ret
adc
add
xor
and
push
xchg
inc
mov
xchg
push
test
jae
add
adc
and
xor
ret
adc
add
xor
and
push
xchg
inc
mov
xchg
cmc
xchg
mov
pop
insb
pop
fistl
in
sahf
cwtl
out
das
imul
dec
daa
xchg
xchg
mov
iret
inc
pushf
adc
lret
dec
mov
sbb
or
loop
jp
in
sbb
sub
or
jnp
or
sub
xchg
std
rcll
testl
inc
gs
shrl
pop
xlat
mov
ret
and
je
push
mov
and
imul
verr
dec
sub
xlat
adc
les
and
dec
cmpsl
imulb
dec
sub
out
or
and
aas
icebp
leave
adc
cmc
xchg
push
into
test
inc
pop
je
lea
adc
aaa
aad
sub
xor
scas
mov
sbb
fxch
adc
push
fs
xlat
xchg
pop
mov
mov
bound
test
add
sub
jnp
icebp
or
nop
sbb
pop
push
lcall
fs
sub
roll
push
in
dec
jb
loope
push
jae
pop
jmp
or
adc
push
pop
push
cmp
je
or
or
hlt
rcl
inc
sub
adc
jne
mov
cmpsl
add
cmp
scas
arpl
xchg
dec
adc
mov
or
fs
cli
sub
testl
jle
adc
inc
pop
sbb
lds
repz
sahf
lret
jno
mov
clc
dec
shl
jnp
imul
nop
mov
test
jb
inc
je
movsb
ljmp
fisttpl
mov
ss
mov
push
lret
pop
pop
std
pop
bound
repnz
bound
fisubrs
ja
push
loop
or
dec
sbb
call
das
push
cmp
mov
mov
dec
xchg
xor
pop
adcl
add
adc
push
sbb
mov
cmp
out
jecxz
xor
sbb
mov
shlb
add
mov
mov
mov
add
xchg
mov
addr16
add
daa
xchg
mov
insb
dec
jo
or
clc
xchg
cmp
mov
ljmp
add
mov
imul
xchg
cld
test
add
add
jp
mov
xchg
lret
ret
inc
add
inc
ds
cmp
ljmp
push
out
push
sub
test
addr16
in
push
out
jno
jl
lret
test
mov
sub
icebp
cmpb
test
xchg
xchg
psubq
jnp
sbb
xor
xchg
mov
movsl
inc
lcall
mov
push
sbb
mov
jnp
xchg
decl
in
xor
scas
lahf
sub
jecxz
popa
imul
rolb
mov
xchg
ss
xchg
or
xchg
jno
out
fchs
test
mov
inc
mov
sub
repz
jle
dec
int
pushf
xor
incl
shl
cli
leave
adc
add
inc
clc
aaa
dec
jb
cmpl
pushf
adc
das
imul
nop
stos
sbb
jg
add
ret
fadds
in
mov
jge
adc
dec
dec
jb
dec
fucomp
mov
fcom
imul
pop
inc
out
aad
arpl
add
sbb
and
push
and
jmp
sbb
ret
sbbl
mov
mov
out
stos
mov
std
rcll
fnstcw
cmp
and
test
std
repz
inc
outsb
lea
dec
sbb
stos
fs
incl
loop
pop
out
dec
pushf
stos
mov
mov
popf
mov
cmpsl
mov
mov
rep
iret
mov
and
xchg
dec
sbb
fcomip
dec
andl
and
xor
jp
roll
or
jae
or
mov
daa
lods
int3
push
inc
mov
cmp
sbb
add
push
es
cmpsl
mov
dec
push
jecxz
cmpsb
insb
rclb
dec
mov
loopne
and
jo
ss
xor
jmp
and
cld
cmc
es
xchg
dec
test
scas
dec
mov
data16
and
ljmp
pop
push
add
out
adc
push
imul
dec
test
or
insl
mov
pop
or
movsb
push
pop
mov
insl
arpl
xchg
sbb
pop
mov
lods
mov
popf
jmp
shrl
add
fdivl
in
test
cmp
pop
leave
xchg
or
mov
jg
push
pop
push
shlb
jno
in
mov
and
insb
pop
mov
add
xchg
jnp
int
fadds
push
fwait
cmp
adc
mov
inc
xchg
mov
sub
xorb
lea
sub
pop
in
pop
adc
push
lea
shll
sub
jg
bound
lar
lods
in
add
jl
xchg
punpcklwd
and
adc
adc
or
push
flds
xchg
ljmpw
popa
push
hlt
xchg
cmp
lret
lret
sub
imul
sub
adc
xchg
sub
sbb
mov
jb
jmp
add
sbb
mov
jnp
push
sub
or
fisubl
scas
mov
mov
mov
bound
popa
sbb
xchg
bound
lock
or
pop
fnstcw
out
adc
mov
clc
jl
scas
sub
jg
enter
pop
insb
jne
loopne
inc
cs
pop
test
mov
mov
xor
lea
scas
mov
movsl
or
icebp
mull
insb
inc
scas
in
sti
arpl
add
jnp
nop
adc
enter
push
xlat
mov
pop
jne
sbb
sti
in
jo
pop
and
xor
xchg
push
ret
aad
mov
mov
xchg
int
jge
push
dec
mov
jle
mov
mov
push
and
mov
jl
push
xor
sub
popf
or
push
enter
and
sub
mov
imul
sub
cmpb
daa
push
and
xor
mov
imul
mov
or
push
movsl
sahf
inc
std
hlt
xchg
xor
xchg
jbe
test
cmp
sbb
or
jne
rclb
iret
aaa
mov
push
adc
inc
mov
sbb
mov
in
in
sub
mov
sbb
add
rorl
cwtl
xchg
mov
mov
or
sti
dec
add
mov
in
mov
int3
mov
mov
outsl
cmc
into
push
outsb
add
mov
lret
rolb
adc
add
imul
js
mov
xchg
xchg
inc
cld
jmp
lcall
and
aam
push
xor
movsl
cs
add
and
fwait
popf
int
mov
jmp
jmp
imul
cmp
xchg
dec
out
mov
mov
ds
inc
add
cmp
test
outsb
xor
mov
in
adc
and
push
xor
clc
xchg
pop
sub
add
insb
sbb
lret
shrl
insl
sbb
mov
inc
push
into
mov
jmp
jno
lret
xchg
jg
or
jle
daa
call
iret
gs
stc
lea
pop
sahf
mov
cmp
test
rorb
push
clc
xchg
dec
or
imul
add
xor
or
adc
cmp
lahf
and
push
ja
out
mov
mov
cmc
fldenv
xor
int3
fwait
mov
dec
clc
popf
stos
mov
pushf
inc
rorl
das
js
fs
xchg
dec
bound
mov
mov
and
xchg
mov
cmp
pop
sbb
cmc
pop
mov
adc
scas
cmpsl
int3
jl
xor
stc
mov
rcl
cmp
cltd
mov
enter
jge
sbb
sub
adc
xchg
mov
mov
movsb
fcmovb
and
data16
jb
mov
js
lea
push
insl
mov
jne
dec
add
mov
and
lea
xchg
shlb
repz
outsl
cmc
gs
dec
cmp
dec
cmp
dec
mov
stos
or
mov
ror
ja
push
lods
leave
das
out
push
mov
ficoml
sti
movsb
or
adc
repnz
sbbl
cmpl
pop
stc
jl
fwait
addr16
cli
leave
pop
std
and
and
sub
adc
stos
push
sub
das
dec
nop
sti
popf
pop
out
scas
in
mov
push
out
daa
and
in
lret
push
jo
repnz
inc
mov
pop
push
mov
push
cwtl
arpl
sti
cwtl
mov
rolb
jns
push
fadds
mov
iret
pop
push
or
push
cld
push
or
idivb
fcmovb
add
test
addr16
sbb
mov
cwtl
js
sbb
pop
sti
aaa
pop
adc
enter
adc
incl
out
jb
jnp
sub
sbb
sub
jge
inc
xor
dec
push
lahf
pusha
or
out
mov
jne
movsl
cmp
dec
pop
stos
in
jmp
mov
pop
out
ficoms
cmp
pushf
push
mov
xor
sbb
mov
lea
xor
sub
or
cmpsl
push
nop
fidivs
cmp
xchg
pop
fadds
repz
lods
xchg
cmp
push
int
call
sarb
push
inc
inc
sub
into
add
testl
push
test
fcmovne
xchg
aaa
xor
lods
sub
or
hlt
fsts
in
lods
loope
in
inc
adc
jle
sub
inc
xor
fbstp
nop
inc
jbe
mov
imul
jb
push
dec
ss
loopne
test
lret
cmpl
cmpsl
xchg
inc
sti
xor
incb
fwait
cwtl
mov
dec
adc
shll
cmp
jecxz
pop
idiv
jmp
dec
push
xor
in
outsl
sbb
pop
lret
dec
xor
sbbl
pop
pop
lret
mov
cltd
ja
ret
test
enter
sbb
add
addr16
and
test
notl
cmpl
jns
sbb
push
mov
mov
mov
xor
fisttps
imul
mov
mov
roll
enter
pop
enter
sbb
into
lahf
cmp
push
out
sub
jne
mov
sahf
inc
and
sbb
jmp
arpl
call
mov
test
mov
pop
xchg
es
mov
pusha
cmp
mov
imul
scas
xchg
clc
rcr
aad
mov
push
loop
fwait
bound
movsb
inc
jae
enter
sbb
add
inc
jecxz
sarb
inc
jbe
adc
mov
imul
lock
add
add
mov
dec
sarb
aam
adc
sub
add
clc
frstor
jne
lea
nop
cmp
cmovs
into
cwtl
lock
push
and
add
jp
insb
jmp
test
scas
outsb
xchg
imul
mov
push
xor
out
addr16
pushf
mov
push
mov
jnp
pop
out
push
xchg
or
mov
fidivl
repnz
jmp
imul
xor
mov
int
adc
jp
push
test
push
hlt
pop
imul
js
adc
ficoml
xor
jl
jbe
lock
lock
dec
mov
lds
imulb
lds
sub
xchg
ret
xchg
negl
imul
inc
push
add
in
sti
dec
mov
or
add
push
loop
stos
mov
test
jb
int
add
push
ja
mov
ljmp
ss
mov
sti
mov
adc
movsl
out
sbb
jmp
jnp
imul
add
sbb
cmpl
cmpsb
imul
sbb
call
jno
push
xchg
mov
test
pop
gs
push
xchg
mov
stos
mov
loopne
inc
mov
sub
mov
out
xor
ret
sarb
flds
scas
and
je
fstpl
out
adc
cmp
hlt
jo
enter
dec
ljmp
dec
push
mov
imul
fiadds
cltd
shll
push
inc
in
dec
mov
xor
push
push
pushf
testl
bound
xchg
das
js
pop
arpl
push
loope
imul
into
mov
sti
jle
pop
xchg
dec
stos
mov
clc
xchg
lret
jae
hlt
out
mov
in
repz
movsl
nop
jg
sub
ficoml
push
pop
push
inc
add
paddw
loopne
fs
jnp
or
xchg
and
or
mov
popf
pop
fwait
loopne
pop
mov
mov
adc
dec
fimull
lea
lret
adc
xlat
sub
jl
testl
or
popf
cltd
pop
stc
aad
sahf
inc
loopne
jno
notl
rcrb
mov
push
into
inc
fcmovb
sub
insl
movsl
mov
jb
test
outsb
xorl
pop
xorb
pop
or
fptan
push
in
cli
xchg
out
add
ljmp
pop
mov
or
ds
rcrb
inc
ja
movsb
mov
je
pop
xchg
pop
sub
mov
cltd
inc
jne
mov
pusha
push
mov
xchg
stos
das
addr16
decb
ret
jns
jl
cmp
bnd
ja
call
stc
in
hlt
fldcw
adc
xor
loop
sbb
and
loopne
jge
jo
mov
xor
and
add
and
pop
ds
mov
mov
sbb
mov
push
test
push
mov
stc
mov
daa
xchg
das
mov
or
mov
mov
nop
mov
mov
adc
movsl
das
mov
sub
scas
xchg
sub
inc
mul
add
sub
mov
in
mov
sbb
mov
mov
arpl
adc
fcomps
pusha
pop
inc
dec
cmp
dec
xchg
mov
js
movb
jl
and
lock
mov
pop
mov
jg
mov
aad
out
xor
xchg
faddl
jmp
sub
or
mov
adc
cltd
iret
icebp
mov
lahf
dec
sbb
mov
rorb
sti
sub
andb
sbb
jg
adc
jno
mov
sahf
mov
fnsave
pop
shll
xchg
ds
cmp
call
sbb
fsubrs
in
cli
mov
or
add
pop
push
pop
dec
and
cmp
cli
dec
loop
out
xchg
icebp
icebp
adc
mov
addb
inc
das
add
mov
fcoml
push
movsb
pop
loop
xchg
out
fsubrs
inc
hlt
popf
cmp
test
daa
mov
mov
ss
or
pushf
orl
stc
lods
pop
add
mov
jle
hlt
das
push
nop
js
test
or
movl
inc
lahf
mov
jecxz
in
or
fdivs
inc
mulb
outsb
mov
das
inc
adc
mov
test
mov
jmp
into
sub
arpl
push
mov
popf
inc
sbb
fcmovb
fwait
cmp
dec
ja
sbb
js
mov
jo
pop
sar
jmp
xchg
sub
les
xor
add
jnp
jmp
loopne
jne
adc
lods
jb
adc
ficomps
mov
fmull
mov
sub
sbbb
xchg
mov
cmp
lds
movsb
into
mov
ds
inc
scas
xchg
pop
pop
ss
sub
fisttpll
jmp
mov
sub
loope
sbb
daa
icebp
movsb
aaa
fs
adc
ret
push
pop
lcall
mov
repz
imul
fs
adc
mov
pop
inc
dec
ror
xchg
pusha
add
pop
ret
movsb
sub
fmuls
or
lcall
xchg
add
adc
pop
fwait
movsb
insl
pop
icebp
xchg
jo
mov
xor
fldl
xchg
push
rcrl
aas
jg
pop
cltd
addl
mov
sub
int3
fldenv
cmp
insb
in
jl
sbb
push
enter
bnd
mov
sbb
pushf
fnstsw
jecxz
outsb
mov
stos
jne
and
daa
imul
scas
clc
fmuls
inc
imul
pop
push
dec
dec
and
sbb
jbe
mov
adc
faddl
push
mov
mov
ja
scas
inc
and
cmpsb
shlb
push
inc
jb
daa
ss
ret
xorl
xchg
stos
jb
repnz
imul
mov
ds
push
xchg
cld
xchg
or
shr
jne
jne
xchg
mov
mov
mov
add
xchg
sbb
iret
sarl
icebp
nop
rolb
mov
xchg
test
push
inc
les
loope
scas
inc
test
les
mov
fmull
or
je
xor
fimull
clc
adc
std
jns
jge
inc
sub
lea
dec
or
cmp
xor
jbe
or
jns
jle
push
adc
and
int3
fs
jg
cmpsl
mov
pop
xchg
xor
xchg
mov
into
jne
pop
sti
mov
pop
pop
mov
lds
filds
pop
and
test
sar
icebp
cmpsl
dec
inc
int3
xor
push
cmp
pop
adc
adc
fs
sub
js
ss
push
add
sbb
stc
mov
imul
jl
das
mov
imul
rcll
stc
lcall
or
or
push
add
inc
aas
aad
sbb
mov
mov
pushf
dec
popa
jne
es
jo
jp
sti
dec
cwtl
addb
pop
jno
insl
xchg
add
push
addl
cld
inc
mov
mov
in
imul
mov
dec
inc
push
add
add
cmp
xorl
ljmp
jb
aam
mov
sub
push
test
cmpsl
int
xchg
mov
xchg
sub
mov
pop
test
mov
xchg
adc
sbb
iret
pop
sbb
jnp
xchg
repnz
jae
rclb
sbb
cmp
push
add
nop
movsb
je
xchg
xor
gs
dec
jge
jae
pop
mov
nop
fnstcw
insl
icebp
xor
aas
negl
lcall
dec
cmc
es
mov
shlb
cmp
mov
fwait
mov
dec
mov
pop
sbb
adc
hlt
leave
sbb
dec
leave
mov
push
push
mov
add
inc
jne
sbb
add
push
push
push
aad
sbb
notl
push
sbb
push
push
and
xchg
adc
rdtsc
push
lock
into
mov
inc
jg
in
mov
cmpsb
xor
scas
es
repz
mov
inc
cltd
inc
ja
mov
and
dec
pushf
dec
mov
popa
or
jbe
fbld
inc
pop
rolb
sbb
fists
dec
xchg
push
push
xchg
mov
mov
jbe
cmc
enter
cmpsl
lods
ret
sbbl
test
scas
shlb
xchg
xlat
dec
movsl
icebp
outsb
je
jne
add
nop
in
or
xor
gs
sarl
xchg
insb
stc
or
test
cs
stos
mov
lods
add
sub
mov
and
ss
icebp
pushf
pmullw
add
push
out
pop
lcall
lds
scas
gs
mov
add
popl
xor
lret
fcoms
push
rclb
mov
jg
nop
or
fcmove
push
jmp
jns
ss
adc
jno
mov
jbe
lahf
push
and
and
cmp
sbb
hlt
sub
icebp
mov
add
rcl
outsl
lods
and
adc
aam
dec
adc
pop
aad
mov
into
cmp
rol
mov
push
ss
sub
imul
push
ret
or
fwait
lods
mov
mov
sbb
push
out
xor
push
xchg
cmpsb
sub
adc
jnp
pop
je
xchg
mov
cmpsl
jno
pop
int
xchg
adc
mov
xor
xchg
sti
fildl
je
xor
pop
repnz
dec
jb
fildl
jp
mov
xchg
fwait
testb
jecxz
push
clc
lods
and
insb
xchg
dec
mov
push
adc
lret
imul
pop
and
cltd
add
mov
xchg
shl
gs
sub
movsb
mov
cmp
inc
les
mov
xor
xchg
mov
clc
enter
in
jae
jnp
cmp
sbb
inc
xor
xor
mov
mov
clc
sahf
xchg
or
fwait
mov
fucomp
leave
arpl
jp
enter
popf
mov
and
xchg
fists
or
mov
mov
mov
or
in
nop
out
stos
repnz
iret
aas
hlt
dec
sub
ret
stos
and
and
xchg
repz
sbb
fidivrl
out
repnz
je
add
adc
and
xor
ret
adc
add
xor
and
push
xchg
inc
mov
xchg
push
test
jae
add
adc
and
xor
ret
adc
add
xor
and
push
xchg
inc
mov
xchg
arpl
aam
les
hlt
repz
adc
add
xor
and
jo
pusha
push
nop
jo
add
add
and
mov
ret
adc
scas
dec
xor
push
hlt
fcompl
cmp
sbb
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
sbb
sub
or
and
adc
popa
enter
call
mov
subl
icebp
js
push
push
mov
popa
leave
jno
add
push
sbb
sub
js
push
xor
gs
fsubs
push
mov
mov
inc
rclb
adc
mov
scas
xchg
push
cmpsb
inc
cli
adc
xchg
hlt
div
xor
out
outsb
pop
bound
test
adcb
add
adc
popf
scas
adc
mov
or
xorl
into
test
sub
mov
mov
das
xor
dec
das
xchg
xor
mov
and
cs
push
inc
mov
enter
arpl
dec
inc
lea
add
outsb
cmpsl
loopne
in
aam
push
cltd
fldl
rorl
mov
lock
add
xlat
push
fdivl
xor
ret
je
mov
push
ljmp
subl
icebp
js
push
xor
popa
enter
call
mov
call
daa
icebp
pop
in
sub
imul
add
mov
imul
cmp
pop
out
inc
lds
jle
add
add
or
jle
dec
hlt
sbb
shrl
and
adc
popa
enter
call
mov
subl
icebp
js
push
xor
popa
enter
call
clc
movsl
xor
mov
js
cli
inc
aas
mov
std
lds
push
pop
sbb
inc
lret
int3
cmp
mul
cmp
mov
dec
jle
je
mov
enter
jbe
cmpsb
xchg
ret
sti
or
inc
push
lods
mov
mov
test
push
jp
push
rorl
xor
inc
rcrb
jne
sub
sub
push
insl
pop
xchg
daa
dec
xor
jecxz
icebp
dec
vaddpd
je
repnz
scas
jno
ss
adc
imull
or
and
lods
sbb
std
loope
pushf
sbb
je
hlt
cmc
sub
and
sbb
or
aad
int3
xlat
cltd
fwait
lret
int
stos
xchg
jnp
aaa
sbb
cltd
in
jns
ret
daa
and
insb
dec
cmp
repz
mov
mov
cmc
into
cmc
cmp
incb
fwait
bound
scas
addr16
mov
mov
int
jl
cmpsl
mov
fnsave
into
dec
jno
and
dec
fwait
popa
aas
jecxz
mov
pop
or
inc
sbb
fidivrl
sub
popf
mov
cmpsl
cltd
mov
rol
orl
clc
cmp
cmp
and
int
jno
bound
push
les
inc
cmpsb
nop
and
sbb
inc
push
lret
les
cmpsl
sub
andl
push
jle
push
lcall
fnstenv
fiaddl
add
cld
add
lret
dec
vpmadcswd
jno
mov
pop
addl
adc
enter
lahf
push
cmp
add
pop
cwtl
mov
push
cwtl
xor
dec
iret
push
jno
cmpsb
jb
sarl
repz
mov
xchg
fldt
in
jb
xchg
imulb
adc
inc
arpl
and
jae
jbe
fsubs
adc
xor
jbe
jge
out
dec
xor
push
cmp
mov
int
add
xlat
daa
clc
je
or
vmovups
call
in
push
in
enter
into
sbb
aaa
mov
sbb
movsb
dec
mov
inc
mov
gs
mov
jmp
fwait
inc
push
inc
aaa
cli
int3
rorl
inc
inc
push
lret
das
or
iret
cmp
mov
test
aam
lret
pusha
mov
lcall
adc
enter
and
pop
outsl
cvttps2pi
jle
sub
mov
and
outsl
insl
push
popa
adc
push
push
sarl
scas
xchg
dec
push
int
or
pop
sbb
inc
mov
shlb
lret
jmp
ret
dec
push
mov
push
addr16
mov
insl
and
push
fistpl
popf
pop
shlb
fidivrl
lock
adc
fcomps
jge,pt
adc
into
jg
mov
adc
and
lret
dec
pop
je
movsb
inc
and
jno
cwtl
int
or
mov
mov
xchg
jg
aas
ret
and
sub
dec
push
bound
mov
das
hlt
push
inc
mov
movsb
and
iret
insl
scas
dec
sahf
out
xchg
sub
js
sbb
inc
lods
lods
clc
mov
and
mov
adc
jmp
mov
sub
in
add
push
xor
lret
outsb
insl
imul
cmpsw
pushf
inc
popf
and
xor
inc
ds
adc
movsb
dec
mov
popa
pop
mov
daa
std
sbb
fldcw
mov
mov
cmpl
mulb
lea
push
adc
xchg
repz
shl
lods
ss
sbb
insb
cltd
mov
orb
sbb
mov
cmp
mov
subl
inc
out
xchg
xor
loope
or
adc
pop
ficomps
movsb
mov
xor
rcl
rorl
mov
sub
push
cld
jno
jb
sahf
xchg
clflush
and
mov
inc
sbb
mov
sub
sbb
xchg
daa
sar
xlat
mov
arpl
mov
pop
push
mov
jae
in
xchg
loopne
xor
jecxz
or
mov
pop
mov
mov
pushf
xor
adc
add
clc
hlt
fwait
test
in
sub
push
sub
xchg
inc
xlat
sbb
xchg
popf
sbb
push
inc
push
mov
sub
sub
push
sbb
popa
lret
call
cmpsb
das
stc
add
mov
or
and
mov
pusha
mov
sbb
outsl
adc
cltd
orl
xor
mov
lds
add
mov
into
ficompl
sub
adc
mov
or
mov
jg
imul
movsb
ljmp
lea
mov
add
pop
adc
mov
mov
cmc
and
mov
mov
xchg
and
xchg
das
sub
mov
ss
lcall
mov
sbb
rcrl
push
mov
fsubrs
cltd
push
data16
mov
int3
sbb
mov
fwait
mov
test
sbb
jnp
es
test
xchg
cmpsb
xchg
mov
jae
add
adc
cmp
inc
dec
fmuls
jmp
dec
add
repnz
push
stc
fists
jbe
scas
dec
aas
mov
popf
pop
pushf
outsl
jne
mov
sbb
daa
std
dec
inc
ljmp
push
aas
sahf
add
cmp
fistps
outsl
call
xchg
ret
std
push
int
xchg
or
cmp
push
nop
movsb
in
mov
push
xor
in
mov
xchg
xor
cmp
ljmp
adc
imul
les
pushf
xor
cmp
stos
fldl
test
or
adc
sub
icebp
fidivl
aaa
pop
sbb
ret
pushf
cwtl
icebp
cltd
mov
fucomp
dec
test
fs
sub
and
push
sti
add
pushf
test
xor
pushf
lods
sar
jmp
rcrl
lahf
jbe
out
lock
pop
pop
int3
jmp
pop
test
insb
loope
adc
inc
dec
lea
icebp
xor
adc
call
popf
mov
aam
adc
and
or
sbb
adc
les
pop
push
leave
jg
jb
xor
test
cmp
insl
gs
jno
stos
inc
outsl
mov
xor
call
leave
cld
xor
xor
movsl
insl
push
scas
inc
push
mov
and
xchg
cmp
push
out
xchg
adc
or
rolb
push
xchg
repz
sti
push
ret
sbb
mov
ja
mov
movsb
imul
cmp
lds
test
add
dec
inc
adc
sbb
xor
mov
in
cltd
decb
testb
dec
pop
lea
rorb
in
lahf
cmp
lret
and
cmpsl
mov
subl
inc
popf
push
xor
dec
roll
xchg
sbb
cld
xor
or
mov
cmp
aas
lods
notb
outsl
cmp
sahf
insl
in
ds
inc
push
sarl
ficoms
notl
cmovl
insb
sbb
ss
xor
jp
or
inc
test
test
cmp
add
add
jp
into
pop
or
nop
sbb
test
je
jbe
testb
adc
pop
call
adc
sub
lods
sti
jb
dec
fdivrl
loope
ljmp
xchg
mov
jb
push
cmp
xchg
xchg
mov
pop
cmp
adc
test
xchg
inc
hlt
stos
add
and
mov
in
sahf
mov
cmc
mov
addr16
stc
sbb
dec
lods
push
xor
mov
jge
loopne
shlb
out
or
dec
xor
ret
or
or
cmpsl
aas
mov
mov
sub
add
out
cmp
add
inc
outsl
adcl
mov
loope
adc
push
fists
or
popa
sub
sbb
outsb
fwait
add
add
mov
addr16
out
call
sbb
popa
inc
xchg
adc
jb
or
jnp,pt
loopne
les
sarb
fisttpl
fadd
cmpsl
iret
mov
dec
jb
addl
fsincos
and
pop
orl
pop
sub
pop
das
popf
aaa
mov
mull
out
incl
push
mov
push
dec
cli
repz
sbb
xor
arpl
jnp
pop
jp
inc
jmp
imul
lahf
add
mov
in
loop
mov
lods
je
stos
pop
pushf
paddb
fistps
rcrb
jbe
outsb
adc
adc
cmpl
icebp
ja
mov
daa
test
adc
cmp
dec
shll
push
xchg
lock
std
or
aas
dec
nop
and
aam
testb
cmp
lcall
push
adc
and
mov
cwtl
shrb
pop
sub
cmpsl
dec
pushf
push
mov
add
mov
outsb
dec
fisubrs
adcl
inc
out
push
push
push
or
jo
stos
imul
loope
cmp
mov
add
pop
imul
cmc
xchg
loopne
int3
test
out
and
hlt
mov
adc
xchg
aad
jmp
test
pop
xor
out
inc
jne
dec
movsb
pop
sub
mov
pushf
add
adcl
imul
daa
jb
scas
pusha
dec
push
mov
mov
or
add
jg
sbb
dec
jmp
fistl
jg
rcll
hlt
sub
pop
xchg
add
push
xchg
xchg
loopnew
mov
ss
es
dec
push
outsl
iret
xchg
sub
lret
or
js
jo
mov
addr16
jecxz
mov
jle
adc
outsl
int3
lods
dec
cmp
lcall
xor
sub
sbb
lods
pop
mov
push
shrb
ljmp
mov
aaa
or
insb
test
scas
sub
sub
fidivrl
mov
repz
inc
ficompl
cmc
je
pop
mov
pop
outsb
loop
jbe
mov
cmp
jno
pusha
hlt
jae
rorl
xchg
mov
movsb
cmc
jl
mov
jnp
sub
ljmp
mov
cli
jp
cli
aam
cli
dec
sub
popf
test
repz
push
add
cwtl
scas
daa
pushf
aam
aam
mov
pop
js
dec
inc
and
mov
sub
jbe
inc
sti
cmp
mov
outsl
imul
dec
pusha
dec
dec
stc
inc
xlat
jle
mov
stos
fsubl
int
outsb
push
sbbb
sti
sbb
push
or
repz
jne
sub
das
and
stc
cmp
ljmp
shlb
dec
xlat
shl
and
stc
clc
out
ret
movsb
jno
stos
push
outsb
xor
js
je
cwtl
jns
mov
lret
adc
push
subl
dec
mov
scas
adc
decl
imull
mov
cmp
mov
mull
mov
mov
mov
ficompl
pop
and
and
mov
ljmp
lock
bound
mov
int3
xchg
and
push
jmp
adc
xchg
inc
int3
sub
out
lds
cmp
xchg
stos
pop
loopne
mov
jp
jne
mov
leave
xor
adc
jnp
sub
test
adc
clc
push
dec
xor
xchg
xor
mov
xchg
lods
lahf
hlt
loop
out
or
out
jecxz
mov
cwtl
das
dec
adc
push
mov
aaa
lods
dec
cmp
add
cli
sub
inc
add
fistps
repz
jbe
cmp
dec
ret
pop
mov
xchg
add
test
and
inc
mov
sarl
rolb
fcoml
and
mov
inc
or
push
das
mov
xchg
adc
ljmp
jbe
int
lock
shl
shlb
data16
jne
inc
mov
inc
jg
xlat
call
fadd
add
stos
dec
in
dec
jl
cmc
inc
mov
out
xor
mov
lret
add
or
dec
arpl
mov
enter
or
loopne
fstl
test
jo
mov
xchg
add
jne
push
jecxz
cs
jb
sub
mov
and
stos
jbe
and
push
cmp
push
mov
aam
adc
fdivrs
in
jle
or
xchg
cmpsb
shr
cmp
inc
mov
clc
sbb
les
cs
jle
dec
inc
lret
pushl
ds
sub
xorb
pop
mov
pop
sahf
xorl
es
dec
sbb
xchg
iret
lea
dec
xchg
mov
mov
decl
adcb
mov
lret
xor
ja
push
mov
in
pop
fstpl
sbb
jle
fisttps
shr
add
cltd
das
sub
mov
stos
gs
xchg
dec
pop
xchg
adcb
jge
out
into
inc
pop
sahf
testb
pop
mov
imul
mov
movsl
mov
or
mov
stc
nop
ds
shl
aad
dec
repz
imul
int
dec
mov
loopne
jl
push
dec
xor
sarl
bound
sbb
out
lods
xlat
fisubl
push
nop
jl
int
in
jbe
sbb
adc
dec
roll
xor
xor
inc
dec
mov
mov
jmp
push
sahf
outsb
addr16
xor
cmp
lea
gs
push
sub
lret
adc
and
outsl
pop
xor
out
stos
add
pop
aas
in
mov
push
loop
lret
jle
push
dec
xor
fisubrs
pop
dec
pop
dec
mov
add
rcl
inc
data16
pop
repz
orl
mov
inc
test
push
fwait
addr16
fucomip
scas
jbe
add
sahf
inc
cmp
outsl
lahf
clc
dec
inc
adc
cmc
pop
int
imul
scas
cmp
in
fidivl
lret
jecxz
add
sub
adc
cli
sub
mov
push
sbb
popa
add
sahf
jno
iret
xor
pop
xor
push
cli
pop
dec
push
inc
sub
or
sub
xor
sub
pop
fnstenv
popf
and
inc
sub
xchg
bound
cmc
subb
mov
adc
pop
cmp
mov
enter
movsb
and
adc
sahf
inc
lods
test
dec
lret
pop
sbb
push
jmp
in
mov
push
sub
out
mov
jl
addr16
into
addr16
out
add
sbb
rorb
js
addl
addr16
sub
lret
dec
test
adc
incl
xchg
pop
push
sbb
xchg
addr16
aaa
loop
sub
pop
sbb
xor
cmp
in
or
es
mov
xor
push
std
ss
mov
xor
sub
dec
ja
in
and
cmpsl
jae
dec
xchg
aaa
loopnew
mov
insl
and
pop
aaa
pop
rclb
lcall
or
cmpsl
xchg
inc
mov
data16
jmp
xchg
popl
pop
fisttpll
inc
sbb
and
or
fcomi
addr16
dec
adc
popf
arpl
or
mov
xchg
pop
xchg
inc
xor
enter
aad
adc
stos
xchg
fstpl
lds
xor
pop
test
jl
and
dec
mov
lods
test
sbb
lcall
ret
pop
ljmp
or
sbb
imull
repz
xor
ret
dec
pop
push
pop
dec
popf
fs
fidivrl
or
sarl
pop
loop
xor
cmp
lea
sbb
int3
jecxz
int3
cld
jbe
add
sahf
push
mov
sub
cmc
xchg
add
repnz
dec
add
test
outsl
adc
xor
push
inc
fsubrp
std
jmp
fwait
cmp
mov
loop
push
into
jl
in
inc
push
ret
add
hlt
rcrl
out
xchg
aam
cmp
pop
mov
pusha
rcrl
repz
push
jb
dec
int
fsub
sti
adc
cmp
clc
xchg
push
push
dec
mov
cltd
mov
aas
pop
loopne
scas
imul
inc
jns
add
sub
pop
jle
pop
sub
inc
iret
stos
cmpsl
ljmp
in
fwait
xchg
outsl
xchg
and
jl
idivb
pusha
fs
icebp
push
and
mov
loopne
test
out
push
push
outsl
andl
fsubl
mov
std
cs
outsl
push
add
push
dec
or
fdivrs
lret
push
lock
ficompl
or
push
sbb
sub
bound
inc
repnz
jbe
cmc
fstpl
outsl
push
nop
jns
inc
pop
xor
push
or
pop
orb
idivb
push
in
clc
jge
bound
rcll
sbb
inc
aad
mov
ljmp
int3
or
sub
int3
or
mov
ljmp
inc
int
jecxz
fstpl
jo
xchg
pop
es
pop
enter
cmp
daa
adc
ja
aad
add
lds
pop
int
scas
adc
loope
push
pusha
xor
cmc
mov
in
xlat
es
inc
je
jle
pop
sbb
add
jle
es
pop
jp
jmp
int3
cli
andl
lea
gs
lods
cmp
jecxz
insb
jno
hlt
mov
sub
jle
dec
push
or
hlt
imul
push
es
mov
aad
jge
fistl
sbb
outsb
push
int3
push
lods
neg
es
cmpsl
stos
xchg
test
mov
inc
push
and
cli
loop
push
dec
push
dec
sub
jecxz
adc
and
fwait
cld
jnp
int3
nop
mov
jge
pop
push
cmp
test
cmp
rcr
sti
add
std
nop
push
lds
dec
lods
jl
mov
pop
adc
enter
test
xchg
and
or
das
dec
lock
mov
jns
mov
sarb
and
add
in
orb
and
mov
int3
rcrl
sbb
push
lods
mov
xchg
rorb
cmp
inc
sbb
lret
ficoms
aaa
jno
sbb
mov
shl
orb
jnp
xorl
pushf
mov
jbe
pop
mov
fsubrl
cmp
or
adc
mov
aas
hlt
pop
dec
enter
ret
and
jmp
or
pop
arpl
scas
cmp
fdivl
mov
sub
insb
adc
lret
insl
pop
loop
shll
pusha
ficoms
mov
mov
mov
je
nop
pop
movsl
stc
sbb
sub
xchg
jecxz
jnp
ljmp
out
cmpb
add
pop
jne
or
shlb
out
fwait
mov
jg
ficoml
xor
cmp
or
test
sbb
xchg
jp
scas
in
stos
xchg
push
es
popa
dec
fcom
repz
decb
out
jle
pusha
in
inc
or
mov
pop
fucom
faddp
or
push
into
sbb
shrl
lods
xor
mov
das
pop
lret
mov
popf
fnstenv
cli
int
fcoml
or
mov
cmp
imul
jmp
dec
push
out
xchg
popf
or
gs
jl
clc
add
gs
xchg
cmc
and
lods
sbbl
cmpsb
cld
pop
dec
sbb
or
dec
leave
and
or
sbb
sysenter
test
insb
jp
mov
gs
cmp
fs
outsl
sbb
das
test
repnz
cmc
cmp
stos
jg
test
cld
insl
mov
sub
adcl
mov
cmpsl
orl
mov
cltd
pop
dec
ret
and
sub
in
sub
add
mov
xor
lahf
ss
mov
sbb
mov
nop
mov
in
mov
xor
les
jecxz
push
add
inc
push
xchg
pop
xorl
add
jle
mov
and
leave
sub
sbb
xor
dec
sbb
repnz
sbb
jns
sahf
sub
cmpsl
mov
xchg
xchg
movsb
outsl
jl
bound
and
jno
add
pop
test
iret
inc
and
push
adc
push
xor
orl
aas
pop
push
jnp
jo
inc
push
mov
mov
pop
and
iret
adc
lods
movsb
mov
push
mov
ror
mov
xor
xlat
push
in
fidivrs
cmp
or
push
stos
fmull
push
lods
jecxz
mov
movsl
jnp
arpl
push
ficompl
xchg
inc
adc
xor
shrl
push
jmp
fistps
push
xchg
pop
mov
xor
in
fnstenv
insl
gs
subl
icebp
js
push
xor
popa
enter
call
mov
subl
icebp
js
push
xor
popa
enter
call
xor
add
xchg
pop
loope
jno
shrl
mov
test
jno
inc
call
mov
subl
icebp
clc
shr
and
adc
test
scas
jmp
adc
jp
push
add
addr16
and
aam
clc
hlt
lret
xchg
lret
mov
movsb
dec
push
dec
inc
dec
je
sbb
add
xor
and
aam
les
xchg
mov
push
push
inc
bound
add
add
xor
and
ljmp
mov
loopne
rol
movsb
sub
adc
adc
test
aaa
rol
and
xor
out
xchg
jbe
mov
movsl
insl
pop
pop
movl
in
cmc
sti
lret
sub
imul
orps
xchg
xor
or
fcoms
and
xchg
iret
mov
dec
insl
movsl
mov
loope
aas
adc
sub
mov
sbb
cli
dec
inc
test
mov
lret
lret
cmp
xchg
xor
xlat
xor
aaa
mov
hlt
mov
jne
adc
incl
mov
add
imul
lcall
or
add
xor
and
aam
in
xchg
xchg
test
cmp
xchg
pop
xor
and
addr16
cmp
push
scas
mov
test
fbstp
iret
rcrl
push
pop
je
xor
sub
outsl
and
xchg
lret
mov
stc
jmp
shrl
pop
add
bound
add
xor
and
aam
cli
hlt
ljmp
mov
movsb
pop
push
dec
inc
jp
push
sbb
add
xor
and
aam
cli
hlt
ljmp
mov
movsb
pop
push
mov
xchg
mov
rcll
cli
mov
lea
mov
mov
mov
repz
pop
push
dec
mov
loope
jmp
es
adc
mov
xchg
xlat
inc
add
test
add
cmp
push
movsl
repz
xor
fsubl
xor
bnd
jmp
test
mov
and
mov
rcrl
add
shl
loopne
mov
mov
stos
je
push
pusha
xchg
mov
addl
mov
mov
cmc
jp
test
iret
inc
xchg
xor
loop
shl
sbb
stc
add
sub
sbb
mov
jns
mov
lret
rorl
mov
pop
adc
call
faddl
mov
xchg
inc
jns
test
jge
mov
xchg
ret
push
js
out
xchg
xchg
cmpb
mov
sbb
ret
dec
bound
inc
and
inc
lcall
inc
adc
sbb
push
push
into
test
mov
push
and
push
mov
or
into
imul
inc
dec
jmp
repnz
repz
pop
jl
es
or
sarl
into
out
cmp
dec
call
addr16
dec
cmc
pop
push
mov
out
pusha
ja
lahf
dec
pop
repnz
sub
pop
mov
mov
enter
inc
xor
pop
enter
cmp
data16
lahf
jbe
xchg
push
jo
aaa
rcll
imul
inc
sbb
popa
xor
js
pop
xchg
in
lds
sbb
addr16
adc
cmpsl
add
lods
pop
inc
mov
inc
xchg
or
xchg
call
sbb
imul
lahf
lds
xchg
xor
cmpsl
xchg
xchg
stos
mov
int3
xchg
into
cld
into
or
outsb
jg
adc
xor
xor
cmp
push
add
lret
hlt
insb
pop
scas
jp
pop
xlat
int
inc
mov
lahf
lods
and
pop
adc
pop
test
clc
xchg
dec
sti
add
xchg
mov
jl
pushf
xchg
int
int
out
push
mov
adc
arpl
test
rolb
sub
cmp
repz
xchg
adc
pextrw
pop
sub
inc
mov
xchg
aas
xchg
fs
movsb
xchg
push
das
out
xor
sub
ret
aad
int
lods
sarl
and
pop
xchg
arpl
xor
add
and
ja
sub
sarl
inc
xor
jge
xor
inc
and
outsl
rorl
orl
ja
pop
pop
add
rcrb
and
mov
dec
sbb
jge
xor
pop
xor
pop
lea
inc
rorb
jb
dec
dec
pop
mov
cmp
push
mov
into
xchg
fmull
pop
outsb
sbb
pop
pop
push
in
movb
adc
sub
add
pop
arpl
or
and
test
enter
shrl
fcompl
dec
mov
sbb
dec
scas
ljmp
or
add
aaa
lods
in
scas
sub
mov
test
push
std
or
mov
stos
fnstsw
xchg
mov
icebp
mov
and
stos
repz
in
in
and
test
xchg
std
shrl
out
jecxz
scas
dec
rorb
cld
cmp
cs
lods
mov
mov
in
scas
or
lods
mov
or
test
psraw
mov
inc
test
xchg
jge
add
inc
int
es
js
popf
ficoms
xor
pop
lret
mov
push
xorl
loope
rorl
hlt
dec
cmpsb
sbb
sub
ljmp
mov
xlat
mov
mov
push
cmpsb
test
pop
mov
sub
xchg
jb
dec
dec
repnz
mov
mov
sbb
xchg
aaa
sub
divl
in
mov
push
mov
push
std
lcall
mov
movsl
add
data16
mov
cmp
aas
sbb
das
pop
daa
xchg
imul
push
mov
sbb
push
mov
jecxz
popa
inc
xorl
arpl
sbb
xor
negl
lods
imul
and
mov
pushf
mov
cltd
mov
sub
push
popl
out
cwtl
mov
and
push
andl
sub
push
xchg
pop
add
dec
mov
mov
or
leave
cwtl
movsl
in
stc
movsl
gs
lret
jge
out
leave
iret
nop
sbb
jge
mov
cmc
movsl
cmp
mov
xor
orb
lock
cli
fdivrl
js
rolb
ss
aam
cmp
push
aam
xor
and
cld
adc
push
fildll
outsb
loop
fmulp
mov
test
push
aad
or
fwait
int3
fbld
adc
outsb
cmpsl
fwait
add
jg
dec
insl
mov
cmpsl
lahf
fdivrp
les
fildll
dec
adc
pmuludq
push
in
xor
stc
aad
loopne
sub
sbb
ret
icebp
mov
pop
mov
xor
fidivs
pop
jo
cmp
cmp
test
ja
xor
pop
jmp
mov
stc
loopne
arpl
jge
lahf
adc
sti
dec
jo
ffree
mov
jmp
test
jl
mov
mov
incl
cld
or
aam
in
cmpsb
aaa
mov
imul
mov
pop
xchg
or
inc
adc
pop
inc
jne
push
mov
dec
stc
xlat
shlb
rorb
or
push
int3
sbb
or
push
add
jp
cli
xchg
fwait
mov
mov
gs
add
lods
out
mov
xrelease
jae
mov
cmpsl
out
fs
jb
pop
lea
fs
mov
xchg
ja
leave
jmp
sub
dec
add
sbb
mov
mov
popa
cmp
and
and
mov
push
cmp
sub
sub
fwait
xchg
push
aaa
inc
xor
insb
pop
es
fwait
jae
inc
mov
rcl
push
cmpsl
adc
mov
in
and
lods
mov
clc
jo
cmp
arpl
iret
movb
inc
or
imul
xlat
or
outsb
imul
lcall
fiaddl
out
fs
mov
scas
call
sbb
cltd
aad
int3
mov
cmp
cmc
lahf
hlt
mov
jno
fmuls
test
xorb
or
roll
movsl
push
icebp
test
popf
mov
lahf
bound
or
and
add
popa
xchg
enter
clc
mov
mov
or
push
bound
icebp
dec
pushf
mov
bound
clc
call
xor
fisubrs
xchg
stos
pop
jno
in
push
cwtl
push
nop
and
push
ret
mov
jb
movsl
mov
pusha
popf
nop
or
shr
notb
mov
mov
imul
imul
pop
sbb
adcl
out
dec
aaa
sub
and
mov
mov
dec
outsb
popf
fsubrl
xchg
mov
inc
or
icebp
test
xlat
rcl
aaa
ret
sbb
add
enter
jp
mov
jmp
popf
out
or
add
adc
sub
dec
lcall
cld
push
jle
push
mov
daa
pop
outsl
scas
xor
xchg
push
dec
mov
dec
in
xchg
pop
pop
sub
movsl
and
and
or
enter
dec
test
jecxz
mov
mov
mov
adcb
mov
mov
cmpsb
xchg
in
lock
jne
lods
jne
outsl
adc
mov
out
dec
ja
or
mov
out
xchg
ret
inc
nop
mov
push
stc
adc
sub
push
push
fisubs
cwtl
xor
jle
mov
fsubrl
cmpsl
scas
ljmp
adc
lods
outsl
xor
and
sub
adc
mulb
les
mov
mov
sub
outsb
fcoms
outsl
jmp
repz
inc
cmpsb
mov
notl
mov
adc
xchg
xchg
data16
and
sbb
pop
jg
imul
jns
jp
xchg
push
push
out
push
jmp
push
jl
xor
cmc
sub
lcall
scas
aas
daa
mov
and
lret
jb
dec
mov
jmp
pop
inc
pop
mov
mov
push
les
xor
cmp
fsubrp
mov
push
out
push
in
push
inc
das
scas
cmp
in
mov
cmpsl
pushf
mov
pop
cli
aas
mov
pop
out
scas
aaa
mov
sbbb
push
es
push
mov
shlb
inc
lods
xchg
mov
test
repnz
ljmp
jno
notb
push
xchg
lret
rorl
dec
mov
je
jbe
sub
pop
adc
rcl
mov
movsb
ja
or
enter
mov
fistpll
aam
push
fcomps
add
lods
fidivl
push
popf
mov
or
pop
push
cmp
jge
push
ret
ds
enter
daa
in
stos
andb
flds
jg
out
cltd
nop
movsl
andb
clc
test
sbb
iret
xchg
mov
btc
out
in
sbb
inc
scas
push
pop
add
jmp
in
in
ds
repz
xchg
dec
mov
aad
cmp
jns
mov
mov
jmp
inc
loopne
call
cld
jmp
lret
ret
mov
sub
int3
ja
mov
into
fldt
stc
out
test
aas
pop
out
clc
mov
test
jb
popa
fbld
iret
push
push
popa
movsl
fcompl
mov
cmp
fs
sub
mov
mov
enter
pop
mov
scas
jbe
ljmp
sahf
adc
sbb
es
stos
out
push
and
daa
mov
fsub
mov
adc
cmp
fstl
cld
dec
ds
out
or
push
es
add
mov
pop
fcmovb
test
negb
jno
in
cmc
aas
std
andl
sub
fildll
std
mov
addl
adc
test
jae
or
pushf
xor
dec
mov
push
or
pushf
mov
push
js
mov
jl
dec
add
pop
sub
fbld
sub
lods
scas
mov
icebp
add
test
or
int
and
loope
jns
or
jg
xchg
nop
xchg
mov
pop
fs
movsb
shlb
xor
xchg
jne
sbb
es
xor
mov
and
mov
sidtl
sbb
jae
fisubrs
and
lods
and
mov
push
inc
or
push
cmc
ffreep
stc
inc
mov
mov
lock
add
jp
sbb
pushf
sarl
lret
fistl
gs
xchg
clc
dec
test
cli
dec
xor
mov
pop
push
and
push
orb
sub
jb
sub
cwtl
dec
je
sbb
pop
sti
fsubr
ret
std
mov
outsb
incb
jg
popf
lret
pushf
xchg
inc
push
jb
sti
pushf
shlb
mov
sub
sbb
add
xor
mov
and
out
aam
jns
pop
into
mov
shll
mov
adc
lea
dec
daa
sub
mov
into
fsubr
cltd
push
mov
mov
arpl
jne
lock
lock
stc
add
fsubrl
adc
pop
sub
sbb
imul
loop
sahf
adc
popa
fisttps
mov
mov
mulb
cmc
out
mulb
cs
fidivrs
imul
pusha
cwtl
cmp
dec
leave
lret
cmc
cld
xchg
stos
cwtl
lods
sub
jmp
popa
test
jae
test
xchg
mov
dec
mov
test
aam
mov
cs
jbe
in
fistpl
das
test
inc
out
xchg
push
mov
sub
inc
push
jns
mov
or
adcl
out
sbb
ret
or
push
pop
cmp
test
sub
insb
adc
lods
mov
jmp
jmp
pop
psubw
movsl
mov
psllw
sbb
fidivrs
pushf
lds
rcll
jl
cmc
rclb
mov
out
pop
and
int
pop
sbb
jns
push
mov
test
test
adc
mov
outsl
pop
and
rcrb
and
xchg
push
int
mov
jecxz
das
push
js
addb
rcrb
test
xchg
loope
shll
shl
dec
outsl
inc
push
cs
iret
sub
add
mov
jno
enter
jbe
sub
jmp
movsl
pop
in
jns
fldcw
dec
scas
orl
repnz
jns
incb
xor
cmp
add
cmp
ljmp
je
sub
sbb
sub
das
xor
repz
arpl
das
mov
jo
test
fildll
mov
in
sbb
nop
movsb
pop
fiadds
mov
and
mov
rorl
sub
dec
adc
push
and
xor
int
pop
sub
sbbb
add
mov
or
shl
inc
mov
sbb
xchg
aad
pop
adcl
movsl
scas
push
add
lret
sub
dec
ret
cmp
mov
popa
dec
mov
sub
add
sub
fidivs
sarl
adc
js
ja
inc
int3
add
and
jg
xor
cmp
enter
cmp
and
xchg
scas
jmp
loope
je
loope
test
repz
dec
out
cs
invd
loop
add
aam
cmp
loopne
push
loop
addb
sbb
jmp
test
scas
xor
or
leave
sbb
les
movsl
sar
xchg
subb
mov
jmp
pop
clc
je
inc
xor
xchg
scas
adc
push
mov
cmc
sbb
enter
dec
mov
inc
pop
out
jb
inc
xchg
xor
add
cmpl
dec
stos
ja
fisttpl
mov
test
inc
jp
insl
rcrb
mov
mov
xor
add
push
sub
out
test
leave
lock
nop
call
push
insb
clc
pop
dec
mov
ret
xor
or
pop
insb
push
fcmovne
jge
gs
cmp
cwtl
lds
insb
mov
or
lock
pop
jge
pop
add
movsb
inc
ret
ljmp
out
add
xchg
lds
sub
inc
js
mov
push
loopne
out
dec
aas
mull
and
aas
lret
inc
lahf
jmp
dec
fsubr
sbb
mov
cwtl
shr
sbb
push
sub
add
scas
add
xchg
sahf
inc
inc
pop
loop
gs
xlat
mov
dec
or
adc
jbe
pop
testl
popa
push
cltd
or
aas
sbb
inc
movsb
add
movsb
pop
lea
pop
int
vpshuflw
xchg
cmc
mov
jp
mov
cmpsb
mov
in
daa
mov
mov
mov
sbb
xchg
call
ds
or
out
cmc
fistpl
pushf
adc
scas
and
push
fisttpll
loop
shl
imul
rcrl
outsl
xchg
sbb
ds
pop
roll
ret
notb
adc
sbb
dec
aam
add
leave
cmp
ret
sahf
test
fadd
add
and
or
dec
gs
in
inc
xlat
push
andb
fldcw
xchg
cmpsb
cltd
popf
add
outsb
cmp
inc
push
pop
jb
test
lret
xor
push
push
cmp
fucomi
xor
mov
fcomip
mov
mov
outsb
xchg
into
daa
sub
mov
pop
push
lock
mov
xchg
cmp
xchg
add
mov
push
dec
dec
roll
xor
clc
push
sahf
fs
ss
mov
mov
pop
ret
lock
xchg
scas
pop
loope
aas
pusha
iret
or
mov
and
sbb
fmull
sbb
dec
sarb
mov
in
xlat
aad
dec
add
push
mov
stos
adc
jge
sbb
push
jne
or
xor
sbb
popf
jae
adc
stos
add
adc
or
xchg
leave
or
aam
outsl
inc
sbb
je
jne
dec
dec
mov
xchg
rcl
jmp
insb
cmp
fists
jg
cs
repz
inc
mov
jp
mov
inc
mov
mov
dec
jecxz
lret
stc
int3
and
loop
cli
clc
aas
rorl
cmp
clc
stos
push
sbb
loopne
dec
pop
cmp
push
jb
stc
aad
mov
btr
xchg
add
push
add
adc
dec
in
push
add
out
push
lret
inc
cmpsb
daa
lods
sbb
mov
sub
in
mov
or
lds
in
stc
movsb
cmp
xchg
lock
je
xor
ds
jg
add
cmp
insb
pop
inc
sub
imul
dec
int
and
sub
aas
popf
scas
mov
or
repnz
pop
and
mov
jp
push
movb
mov
lods
ss
add
fwait
les
inc
sub
call
xchg
cld
jg
jp
sub
mov
jg
dec
popa
pop
or
xchg
pop
imul
add
in
cmp
inc
outsl
inc
push
xlat
xchg
jb
mov
std
andl
cmp
xor
mov
or
in
jle
out
or
inc
cmp
fs
push
mov
jecxz
add
shll
ja
inc
push
adc
rcll
iret
mov
jbe
jg
inc
pop
cmp
pop
loope
int
call
enter
mov
mov
mov
inc
sti
or
mov
adc
lods
cmp
sbb
outsb
jp
leave
inc
sbb
movsb
dec
lods
sub
dec
sub
sbb
jns
pop
cld
push
pop
dec
push
dec
mov
repnz
outsl
sbb
ret
icebp
sahf
sahf
xchg
je
mov
and
cmp
andb
adcb
stc
xchg
daa
jo
jae
subl
out
lods
pop
xchg
push
or
aam
mov
aas
repnz
iret
icebp
xchg
fs
sub
adcl
xchg
adc
inc
xchg
mov
lods
nop
push
push
movsl
sbb
cltd
mov
fcmovnbe
adc
mov
das
pusha
xchg
xlat
fildll
adc
xorl
nop
loope
push
fmul
arpl
cmp
add
mov
pop
addr16
and
pusha
mov
test
jne
lahf
pop
sbb
icebp
push
and
out
mov
push
pop
sbb
aad
std
cmpb
fld
xchg
dec
xchg
dec
mov
add
jbe
mov
or
adc
adc
add
jmp
stc
jmp
inc
xchg
scas
mov
fidivrl
mov
cmp
rcrl
inc
aas
pop
and
pop
push
fwait
mov
js
xchg
pop
lret
testl
push
push
les
daa
daa
sbb
push
ds
jg
cmp
adc
mov
dec
xor
sbb
pop
mov
ljmp
pop
fdivrs
add
pop
dec
mov
es
stos
and
add
cmp
cmc
mov
pcmpeqd
mov
and
pop
mov
int
hlt
dec
mov
jne
imul
adc
dec
mov
dec
out
cmp
jecxz
sahf
shr
mov
rol
mov
jne
loope
dec
nop
add
push
adc
mov
or
sub
xchg
cmp
pop
dec
pusha
inc
xor
movsl
ret
fisttpll
in
inc
cmpsl
xchg
xlat
xchg
jmp
sub
imul
xchg
pop
fs
sahf
jl
ret
call
jb,pn
aaa
dec
repnz
and
mov
icebp
fsubl
mov
insl
pop
pop
not
mov
mov
es
out
pop
jge
mov
fstps
and
push
add
adc
mov
int
xadd
sti
icebp
add
in
and
cmp
mov
mov
test
int
mov
loope
cltd
xchg
xchg
and
mov
pop
dec
bound
int3
push
and
jl
xor
inc
push
and
xchg
jno
pop
adc
scas
sub
dec
cmpsl
sbb
xchg
mov
sub
mov
dec
fwait
sub
ret
je
ja
fadd
hlt
jne
jb
xor
or
ja
mov
ja
push
pop
cmp
mov
jge
repnz
dec
std
mov
jbe
fdivl
pop
push
dec
frstor
or
sbb
xlat
pop
insl
aam
mov
jle
dec
inc
test
inc
out
xor
clc
and
ficoms
or
dec
jecxz
lds
inc
or
push
popf
shr
sub
xchg
pop
inc
inc
lahf
jne
sbb
add
xor
and
aam
cli
hlt
ljmp
mov
movsb
pop
push
dec
inc
jp
push
sbb
add
xor
and
aam
cli
hlt
ljmp
mov
movsb
pop
push
dec
inc
jp
push
sbb
add
xor
lret
hlt
ljmp
mov
movsb
outsb
push
jle
dec
je
pusha
sbb
test
sub
xchg
in
sbb
jnp
dec
push
pop
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
rcrb
rorb
loopne
sahf
jl
sub
pop
lds
pop
inc
xchg
pusha
lods
adc
add
xor
and
rcrb
loopne
nop
pop
orb
mov
lea
add
xor
and
sarb
loopne
nop
insl
addb
popf
inc
scas
add
dec
fistpll
arpl
cltd
pop
rorb
dec
rclb
mov
pop
lods
xchg
push
lcall
add
pusha
cmpsb
pop
push
jl
add
dec
add
mov
bound
std
inc
in
out
enter
jbe
mov
cmp
into
mov
mov
lea
push
pushf
sub
mov
mov
push
sub
sub
cmp
nop
dec
nop
jge
mov
push
insl
std
inc
inc
lods
out
enter
add
xchg
das
lret
mov
lcall
dec
mov
mov
fisubl
jmp
fcom
scas
xor
repnz
add
push
or
sub
mov
sub
add
mov
loopne
nop
pop
orb
mov
and
adc
add
xor
and
xchg
sbb
test
clc
leave
and
or
sub
fiadds
sbb
jne
imul
mov
paddsb
mov
mov
clc
xor
and
int
cwtl
and
cltd
push
loope
nop
adc
insl
push
popf
inc
lea
pusha
lods
adc
add
xor
and
rcrb
loopne
nop
pop
orb
mov
lea
pusha
lods
adc
add
xor
and
rcrb
sbb
mov
fidivrs
pop
xor
jno
gs
call
aaa
and
movsl
rcr
add
lds
sub
sahf
je
mov
sbb
mov
xchg
les
test
and
sbb
mov
fildl
dec
cmpl
fdivl
imull
and
pop
cmpsl
mov
push
push
push
js
fs
xor
mov
inc
pop
fwait
outsb
lods
mov
scas
loope
push
xchg
fwait
stos
pop
lahf
add
das
and
cmc
xor
jl
xlat
mov
sub
iret
push
xchg
cmpl
sub
cmpsl
push
push
inc
jmp
loope
dec
push
ds
gs
stos
loope
pop
loopne
imul
inc
hlt
pop
inc
iret
and
jecxz
ljmp
xchg
jno
movsl
push
xchg
out
push
push
sbb
jmp
and
jne
jge
repz
pop
and
int
add
xchg
repnz
or
fmuls
addr16
sub
enter
sbb
mov
out
mov
push
aad
and
or
jge
repz
sub
jg
ror
xor
xchg
dec
mov
mov
jecxz
insb
xor
push
push
sub
cwtl
out
xor
xor
dec
xchg
cmp
add
and
or
mov
inc
push
dec
sbb
push
rorl
out
fs
mov
loope
inc
imul
push
enter
fcomi
jnp
repnz
add
add
mov
out
loop
xor
out
sti
cmp
ja
lea
push
cltd
pop
xor
leave
or
addr16
nop
sbb
or
clc
cmp
adc
enter
mov
popa
in
push
lods
xor
push
mov
jecxz
dec
add
push
scas
or
rcr
inc
sub
mov
adc
inc
mov
push
mov
add
mov
add
sbb
cli
xchg
aad
lods
sbb
mov
cwtl
gs
dec
cs
inc
aad
popf
test
cmp
gs
xchg
vpsrld
jmp
xchg
sbb
dec
sub
or
cmc
ss
xchg
push
out
jg,pt
push
les
jmp
mov
bound
xchg
cmpsb
push
mov
and
leave
lods
test
fcomps
orb
iret
mov
sub
pop
cmp
inc
push
scas
xchg
jp
push
sahf
cmc
xor
lcall
jae
mov
inc
or
xchg
sti
ds
jle
pop
lock
in
mov
xchg
shll
call
test
sbbl
mov
add
cld
dec
outsl
sbb
cmpb
xor
fcmovbe
test
mov
test
shl
iret
fiadds
sub
ljmp
and
mov
add
leave
sub
dec
add
fs
xor
push
outsl
test
cmp
cmp
loope
or
jecxz
jno
push
xchg
sub
xchg
or
not
jbe
adc
cwtl
call
test
jl
sub
mov
or
xchg
sub
cmp
xchg
in
movsl
repnz
fwait
xchg
cmp
sbb
popf
jnp
pop
and
scas
cmp
das
gs
push
mov
iret
and
dec
js
aas
in
mov
stc
and
fisubrl
cmp
add
mov
stos
bound
aaa
push
add
adc
sbb
mov
adc
sub
pop
dec
loopne
imul
fs
jg
inc
mov
mov
sub
lret
and
adc
cmp
push
ret
ja
fwait
push
mov
out
in
lock
addr16
mov
sbb
aas
cltd
fimull
shl
std
dec
push
pushf
lahf
outsb
mov
icebp
push
push
outsb
fmull
xchg
push
mov
xchg
inc
enter
lret
mov
stos
xor
cli
imul
jl
ja
dec
iret
cmpb
xor
cmp
aam
leave
cmp
stc
shll
sti
int3
lret
js
dec
addl
mov
ret
jmp
jnp
adc
mov
or
mov
test
dec
jne
cmc
adc
ds
cs
sbb
push
mov
jnp
add
popf
lods
sbb
scas
mov
lods
lahf
dec
addr16
imull
outsb
add
ds
ss
fsubrl
gs
mov
adc
inc
jbe,pt
test
bound
mov
push
xor
lea
shrl
stc
inc
jl
sbb
insb
test
bound
in
test
push
iret
subl
push
jb
and
dec
add
out
popa
test
pop
adcl
jg
inc
pop
cmp
scas
fadd
sbb
iret
pop
or
push
out
lret
adc
out
inc
or
popa
push
aad
std
mov
push
add
push
xlat
aad
adc
sbb
xlat
scas
rcll
ljmp
jno
andb
lods
jge
push
testl
mov
adc
jmp
mov
mov
shrl
fdivrl
xor
xchg
push
xchg
or
and
sub
push
jae
shll
das
clc
call
jae
and
xchg
sahf
pop
roll
inc
mov
mov
jb
psrad
adc
aad
lock
jmp
les
xor
xor
cmp
jp
sti
rolb
cmp
cmpsb
push
shl
dec
maxps
sbb
notl
movsl
ret
imul
push
pop
jno
int3
stos
in
mov
pushf
ljmp
jae
xchg
ds
xchg
and
adcb
sbb
inc
mov
out
sbb
push
test
in
ja
popf
sahf
mov
xchg
call
scas
jecxz
div
and
cld
je
imul
xor
pop
mov
mov
add
pusha
js
scas
icebp
push
pop
insl
jle
fmul
rcll
ret
xchg
ret
jl
leave
xchg
mov
push
orb
negb
outsb
mov
mov
aaa
loope
enter
gs
aas
popa
mov
pop
pop
fiaddl
pop
or
lods
dec
popa
pusha
ror
push
inc
repz
cmpsb
xorb
jg
in
scas
int3
push
imul
mov
cmpsb
andl
mov
inc
arpl
hlt
in
adc
pop
and
shrb
inc
sarl
gs
aas
loop
fmull
mov
fadds
push
push
ret
sbb
fst
pop
loop
ja
or
and
lea
xchg
lods
adc
ja
out
dec
aaa
push
imulb
sbb
mov
jb
adc
jnp
rcrl
repnz
stos
int3
mov
sbb
cltd
addr16
push
fstpl
aas
clc
pop
adc
mov
cmp
xchg
mov
sub
shll
jl
dec
or
mov
inc
dec
xchg
cs
dec
jb
ds
hlt
lcall
adc
lret
mov
clc
enter
out
mov
mov
pop
shrb
xor
push
pop
in
jns
jo
mov
xchg
sbb
mov
mov
xor
cld
lea
out
mov
dec
orb
loopne
mov
ss
pop
mov
std
leave
or
out
shll
hlt
sbb
fiaddl
inc
jge
cltd
inc
or
sub
aaa
push
xorl
add
test
adc
push
fdivrs
insb
std
mov
mov
cli
mov
lods
mov
mov
rclb
adc
icebp
test
in
or
inc
sub
jmp
cli
and
je
jmp
add
mov
adc
adc
inc
push
mov
imul
mov
push
rcll
movsb
cmp
dec
jle
adc
mov
lret
aaa
pop
push
cmc
jle
clc
push
out
fistps
cmc
and
xor
ja
testl
inc
sub
adc
daa
hlt
jno
add
mov
jb
jl
xor
kmovb
loop
adc
dec
or
data16
dec
pop
mov
push
push
test
lea
add
rclb
and
xchg
dec
pop
xchg
cmp
shrl
xchg
jp
fdivl
cmpsl
loope
lret
mov
push
jge
notb
and
mov
sub
aam
sub
jle
aas
mov
jnp
inc
mov
push
in
xchg
push
into
nop
inc
ss
mov
jge
icebp
mov
mov
push
fmul
scas
mov
out
shll
sti
cmp
sbb
mov
sbb
sub
loope
stos
adc
mov
js
data16
xchg
cmp
sarl
sbb
mov
mov
mov
push
mov
dec
xchg
or
jbe
movsb
in
lods
test
mov
inc
out
xor
sbbl
test
pop
int
lods
sub
mov
pop
lret
test
int
jbe
or
inc
dec
jo
dec
xlat
in
nop
pushf
adc
push
sub
outsl
loopne
add
dec
or
lcall
fdivr
je
scas
and
xchg
or
stos
mov
jp
inc
andl
test
dec
cltd
scas
xor
xchg
inc
iret
add
xchg
jno
jne
sbb
out
jno
sub
ds
stc
leave
push
or
and
ss
pop
jl
jecxz
idiv
mov
lds
ja
push
lahf
push
incb
jle
mov
gs
ds
cwtl
cwtl
mov
inc
clc
sub
cmc
insb
pushf
adc
jmp
dec
imul
push
test
mov
test
pop
leave
add
subb
daa
ss
adc
jle
jnp
mov
vrsqrtss
in
sbb
pop
add
sub
or
adc
stc
fnsave
cmp
in
and
fldt
rcl
cld
add
pop
push
cltd
sbb
mov
mov
push
stos
and
aam
inc
ret
insl
ret
xchg
mov
sbb
in
pop
push
lea
jns
movsb
xor
clc
dec
sti
cmpb
sub
xor
je
insb
hlt
lods
cmp
loopne
or
xor
fstpt
add
filds
dec
mov
mov
dec
ficompl
xchg
dec
jmp
call
fidivl
dec
aam
xchg
rcrb
pushf
in
lds
in
jg
lret
dec
xchg
hlt
test
pop
test
pop
xor
xchg
in
push
or
add
push
mov
nop
pop
ret
mov
mov
popa
xor
mov
int
jp
xchg
call
sub
fs
jno
pusha
pop
lahf
insb
and
nop
inc
cmp
xchg
mov
adc
mov
mov
mov
je
pop
arpl
ja
syscall
xorl
dec
add
adc
pop
inc
cmpb
mov
ja
pop
and
jmp
in
xchg
rcl
addr16
jle
jecxz
mov
inc
cmp
cmpb
call
sub
mov
mov
movsl
mov
cmp
cmp
lcall
les
jno
in
lret
mov
fadds
in
iret
sub
jno
mov
mov
pop
and
int
xchg
xchg
add
jno
nop
sub
adc
repz
mov
and
call
dec
and
cmp
cmp
shll
push
shrl
xchg
adc
and
scas
repz
and
sub
pop
xchg
mov
movsl
in
jae
xchg
jb
sbb
pop
xor
xchg
jo
sub
sub
out
into
cli
and
inc
cltd
add
jne
dec
loop
push
les
sub
cmp
inc
subb
jno
in
orl
dec
pop
mov
andb
out
mov
test
rcl
iret
in
insb
shlb
push
push
imul
push
jmp
push
pop
aas
shll
fildll
cmc
adcl
negl
cmp
dec
pop
mov
in
fcmovu
mov
fsubrl
pop
aas
sbb
push
je
inc
not
lods
pop
push
pop
insl
xor
sbb
fwait
jbe
pop
cmp
cmp
arpl
pop
push
xchg
imul
in
mov
nop
call
clc
and
cmp
setns
lcall
xchg
dec
aaa
jp
mov
dec
mov
sbb
mov
imul
add
jo
sbb
out
int
jle
lods
pop
call
ror
rcrb
scas
movb
ja
pop
dec
or
xchg
outsl
and
xchg
inc
cwtl
mov
lret
ljmp
mov
stos
int3
mov
cli
int
sbb
or
add
insb
mov
xor
dec
movsb
cld
into
lahf
jge
lods
nop
inc
xor
lea
mov
and
pop
cli
pop
std
sbb
xor
jno
insb
push
sbb
xchg
inc
aas
dec
adc
dec
orb
push
adc
sbb
inc
dec
sbb
clc
lods
pop
es
sub
xchg
pop
es
dec
cmpsb
rclb
popa
cld
pop
mov
leave
sahf
cmpsb
mov
ss
int
lcall
out
sub
mov
push
jp
cltd
push
int
jne
outsl
lret
and
cmp
mov
ret
movsl
jg
pop
or
in
lods
sbb
lock
nop
cmp
mov
jl
cmp
mov
in
test
ljmp
test
push
stc
enter
cli
xor
pop
nop
or
mov
stc
pop
es
inc
jo
repnz
or
pop
rclb
push
cmp
xorl
bound
pop
shll
sbb
cmp
pop
cld
push
sarb
push
xchg
fsubs
jge
add
xchg
mov
add
mov
cltd
fidivl
xchg
packuswb
pop
cmpsl
mov
xchg
in
cld
xchg
mov
jp
cmp
or
dec
adc
adc
fsubs
test
sub
fidivs
fsubrl
icebp
adc
dec
inc
sarb
ljmp
ss
sarb
pop
mov
pop
clc
cmpsb
cmp
fwait
imul
adc
push
int
scas
js
je
sbb
cs
enter
in
inc
xchg
daa
xchg
and
sarl
xlat
adc
xor
in
cmpsb
insl
test
sub
adc
jp
aas
sti
hlt
dec
shlb
mov
and
add
int3
test
int3
insl
adc
ds
in
shlb
inc
cs
pushf
fs
out
sbb
xchg
and
inc
jl
mov
sub
or
call
dec
sbb
inc
shl
jne
mov
mov
mov
stos
pop
repz
lret
fstpt
mov
or
mov
push
push
stos
push
mov
pop
int
cmp
daa
cwtl
mov
mov
lcall
cmp
push
mov
xlat
testb
dec
mov
xor
dec
xchg
movsl
pop
jge
sub
out
and
lret
ds
dec
loope
aas
out
fs
ja
mov
mov
fsubl
jnp
inc
push
jecxz,pt
adc
mov
xor
sbb
stos
rolb
inc
jae
adc
subb
inc
sub
test
je
ss
jle
mov
jo
or
popf
xor
mov
mov
dec
fldl
repnz
fisubrl
popf
xchg
dec
je
xchg
test
jmp
sub
and
movsl
mov
roll
push
negb
lea
pop
cli
cmpsl
pop
push
push
sbb
xchg
xor
mov
or
sub
lods
cmp
xchg
popa
or
jb
lock
cwtl
sbb
dec
test
lock
mov
sbb
inc
hlt
ret
dec
fs
jp
movsb
xchg
pusha
mov
mov
adcb
xor
lds
push
in
pop
stos
mov
xchg
lea
push
cwtl
add
inc
push
jl
dec
imull
push
mov
or
adc
sub
cli
xchg
imul
pop
pushf
jae
cmp
dec
imul
insl
xor
out
mov
aad
repnz
int
adc
repz
pop
ss
push
fdivr
enter
ss
push
jns
cwtl
sbb
sub
aaa
add
dec
or
pusha
pop
mov
cmp
sbb
adc
add
imul
jns
test
push
push
bound
aad
mov
jno
mov
aam
cmpsb
sbb
repnz
xchg
ficompl
por
and
test
iret
rcl
sub
adc
fsubs
sbb
and
lods
and
hlt
mov
pop
insl
push
sub
pop
jnp
addr16
add
and
iret
jo
mov
jmp
and
inc
sbb
incb
jns
in
xor
pusha
cmpsb
xor
fdiv
mov
xorb
adc
or
lods
call
xchg
bound
insl
xor
add
pop
dec
adc
inc
mov
mov
pop
fxch
dec
popa
mov
adc
imul
or
and
cmc
lods
inc
ss
dec
dec
sbb
lret
addl
test
xor
cli
push
inc
jbe
adc
fmuls
mov
pop
data16
cmp
es
jl
lret
mov
adc
xchg
paddusb
jnp
roll
pop
lods
pop
and
stos
enter
mov
push
ret
pop
lahf
shlb
arpl
adc
and
faddl
ljmp
cmp
push
fdivrs
mov
ret
adc
imull
movsl
in
pop
daa
sub
test
lahf
and
out
call
dec
cmp
adc
rorl
add
das
push
jns
push
jge
in
insb
inc
aaa
scas
jbe
cmp
imul
fwait
xchg
push
rcrb
inc
cld
fstl
adc
lock
shll
pop
jg
test
push
mov
movb
pop
cmp
push
lea
adc
test
ficoml
mov
call
mov
and
prefetch
mov
adc
clc
test
mov
xchg
dec
sbb
lods
dec
xor
out
loope
aam
push
movsb
push
movsb
fldcw
or
fs
out
pop
jae
pop
dec
mov
bound
scas
sbb
mulb
and
cmpsb
fcoml
push
sar
or
cmpb
cmpl
mov
int3
std
xlat
or
lret
sbb
out
add
ja
jmp
adc
xchg
ds
in
test
fldenv
repz
jge
sbbb
subl
scas
dec
add
jb
stos
fcmovne
ljmp
cmp
out
lahf
stos
cmp
push
or
js
adc
pop
mov
jmp
dec
mov
sti
or
stos
push
lahf
mov
cmpsb
jb
pop
imul
lods
mov
or
jg
into
pop
jecxz
xchg
bound
inc
mov
enter
mov
pop
sbb
fsubp
pusha
push
lods
pop
sub
jp
popf
mov
push
lret
mov
or
cmpsl
push
mov
xor
or
std
and
jl
ffreep
inc
xor
pop
arpl
add
sub
push
xor
jo
or
jnp
fidivrl
push
mov
shl
or
fstpt
test
pop
test
in
pop
lock
callw
test
inc
inc
scas
inc
imul
fldl
fs
adc
xchg
inc
clc
push
mov
xor
sbb
pop
dec
pop
xchg
mov
out
sbb
movsb
lret
shl
cmp
xor
fistpl
movsl
repz
pop
lahf
adc
inc
add
inc
add
pop
jp
test
or
xor
stos
jmp
lcall
mov
add
scas
ret
xlat
jae
cmp
jne
xchg
mov
mov
ja
jbe
mov
adc
cmp
pop
or
fidivs
and
sbb
sahf
mov
in
adc
pop
sbb
pop
add
mov
out
pop
ret
and
lods
fisubrs
cld
xor
mov
or
popf
mov
mov
lcall
lods
mov
iret
nop
stc
mov
ficomps
dec
mov
and
sub
cmp
jo
add
sub
jns
and
inc
pop
popf
test
hlt
testl
push
scas
mov
into
jb
pop
aas
iret
mov
js
pop
mov
lods
mov
adcl
jle
or
ja
xchg
mov
and
xor
addl
fiaddl
pop
jecxz
cmp
xchg
psubq
fnstenv
jle
nop
or
mov
jno
jle
stos
sarl
lahf
push
popa
mov
lods
mov
pusha
inc
xchg
lods
xchg
out
out
pop
inc
lock
test
imul
lods
jno
aas
test
dec
ja
sbb
dec
jl
out
psubsw
into
mov
in
xchg
add
sbb
or
leave
xchg
aas
cs
sub
pop
mov
inc
cmpsb
cmp
dec
mov
dec
addr16
lods
lods
clc
lock
stc
xor
jns
into
out
or
nop
pop
orb
mov
lea
pusha
lods
adc
add
xor
and
rcrb
loopne
nop
pop
orb
mov
lea
pusha
lods
adc
add
xor
and
rcrb
rolb
and
andb
jns
insl
push
pushf
inc
mov
pusha
movsb
adc
add
xor
and
sar
shr
fchs
insl
nop
pop
orb
mov
daa
fidivrl
mov
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
outsb
enter
pop
pop
xchg
adc
inc
out
mov
cmpsl
into
xchg
fiadds
sahf
xlat
sahf
outsb
aaa
jle
dec
pop
pop
pop
ja,pn
jmp
push
push
xor
mov
xchg
xchg
rolb
mov
addr16
push
mov
es
push
mov
ffree
xchg
enter
mov
leave
movl
bound
push
jge
ds
iret
dec
fstps
inc
push
xchg
cmpsb
or
cltd
out
mov
loop
add
ds
mov
mov
xor
and
mov
popa
dec
xchg
andb
or
mov
int3
mov
sbb
scas
xlat
inc
out
pop
sahf
xlat
outsl
imull
xchg
jp
shll
psllw
idiv
mov
mov
xchg
ds
iret
ret
inc
mov
and
out
inc
out
in
mov
push
xchg
mov
cmp
push
mov
in
pop
push
mov
mov
mov
mov
sahf
inc
cmpsl
aaa
xlat
dec
xchg
pop
or
push
lea
divl
out
xchg
iret
mov
cmpsb
pop
xchg
xlat
sahf
test
sub
pop
add
inc
ds
and
icebp
xchg
loop
jecxz
out
scas
cwtl
fistl
add
and
and
ds
push
cmp
lods
rcrb
loopne
cmpsl
aad
clc
mov
lods
or
pusha
and
adc
addr16
push
push
inc
out
mov
cmpsl
into
xchg
fiadds
mov
sahf
outsb
aaa
jle
dec
pop
pop
pop
ja,pn
addr16
push
push
inc
out
mov
cmpsl
into
xchg
fiadds
mov
sahf
outsb
aaa
push
lock
mov
sub
dec
mov
and
fwait
es
pop
in
enter
pop
insb
gs
test
lods
mov
and
push
sarl
pop
push
fadd
orl
and
cs
xor
rclb
cli
cli
out
xor
decb
xchg
cmpsb
inc
cmpsl
sub
and
cld
pop
cwtl
data16
outsb
sbb
xchg
mov
pop
ficoml
cmp
mov
aas
xorl
lds
pusha
cli
andl
es
pushf
leave
sub
jmp
scas
xchg
and
iret
push
test
in
out
in
in
push
mov
sar
gs
jl
cmpsl
call
inc
mov
and
cmp
ficompl
sbb
sub
or
std
incb
inc
dec
int
or
pop
jbe
or
sbbl
lcall
jl
add
push
ds
mov
vpsrad
dec
stos
mov
outsl
rolb
idiv
add
leave
jecxz
in
hlt
stc
mov
cmpb
ja
fsubs
aad
icebp
mov
mov
mov
inc
xchg
mov
xor
nop
mov
test
icebp
das
adc
push
nop
ss
lods
je
jb
or
xchg
mov
shrb
jp
int3
add
pop
sbb
stos
mov
mov
xchg
jecxz
mov
imul
daa
outsl
arpl
aaa
stc
lods
sarl
mov
mov
jg
mov
and
jb
js
jecxz
outsb
fmul
cld
test
inc
xchg
les
push
or
add
cmp
add
filds
push
and
or
repnz
push
sub
add
or
int
in
out
insb
movsl
pop
and
jne
inc
mov
inc
insl
lock
mov
or
jae
cli
xchg
sub
nop
test
xor
xor
fmuls
nop
das
cmp
xchg
imul
in
shlb
jl
ficoml
inc
iret
inc
jae
and
andl
mov
leave
jbe
jnp
js
inc
sbb
xchg
xor
movl
lahf
push
call
sarb
inc
stc
sbb
cs
ret
and
fwait
jp
icebp
inc
inc
mov
sub
xor
pop
js
add
stos
mov
adcl
ja
mulb
inc
hlt
imul
sub
shll
push
inc
adc
stc
jecxz
adc
je
rcrb
jnp
sahf
ljmp
aad
lahf
push
es
rol
cwtl
adc
mov
sbb
stos
js
pop
scas
lahf
mov
pop
sbb
inc
aas
push
inc
push
cmpsb
cmp
jl
mov
ljmp
fcoml
test
xlat
sahf
fdivl
jb
inc
aas
ss
insb
std
stos
cmp
push
clc
cmp
adc
cmp
lret
fadd
push
gs
fwait
or
adc
js
add
push
std
adc
adc
sbb
xorl
sub
inc
mov
jle
cmpsb
sub
movsl
dec
jae
xor
loopne
unpckhps
push
and
sub
cli
sti
sub
cmpl
push
jge
out
imul
xchg
cs
push
cmp
and
out
mov
xor
mov
add
shlb
pop
lret
pop
jbe
out
scas
inc
xchg
mov
cwtl
inc
loop
pop
pop
inc
pop
or
fs
adc
jmp
cmpsb
test
jnp
cmp
in
dec
sbb
pop
and
movsb
pushf
cmp
mov
cs
pop
or
cmp
pop
ja
ss
addr16
mov
xchg
test
and
fisubs
cltd
mov
pop
and
ret
fidivl
sbb
mov
jmp
bound
adc
leave
and
adc
pop
inc
pop
sbb
lds
rorb
mov
shl
out
cmp
inc
clc
iret
dec
pop
add
push
mov
popa
push
add
stos
out
jb
lods
lds
cmp
inc
stos
out
cmp
std
pop
adc
xor
ficompl
adc
arpl
xchg
mov
jo
or
js
inc
insb
ss
sti
adc
cltd
add
cwtl
daa
and
sub
and
dec
pusha
or
aaa
or
xor
cmpsb
or
inc
int3
mov
mov
outsb
popf
mov
ja
leave
mov
arpl
jae
mov
mov
daa
push
xor
ds
xchg
adc
push
mov
inc
xchg
lods
out
iret
xchg
clc
pushf
inc
sbb
lods
out
pop
mov
sbb
or
out
jmp
shrd
mov
push
push
adc
fs
xchg
inc
push
jne
mov
pop
jmp
int
jle
lds
and
mov
iret
mov
mov
pusha
sbb
bound
push
mov
in
mov
xor
loope
mov
rolb
lret
inc
mov
arpl
add
mov
jne
sbb
mov
mov
loop
rorl
dec
or
inc
mov
inc
mov
int
mov
sbb
mov
fwait
jle
inc
pushf
loope
ret
pop
add
out
pop
cmp
pop
xchg
push
shll
xchg
pop
rcll
push
test
xlat
outsl
aam
mov
jo
inc
enter
repnz
dec
inc
fisttps
mov
xchg
push
jne
xor
xchg
int
je
mov
xchg
inc
cmp
out
jbe
pop
cld
pop
add
fdivs
adc
loop
cmpxchg
xchg
sub
xlat
push
and
cmp
shlb
hlt
add
mov
int3
cmpsl
push
push
sbb
mov
xchg
sbb
out
jecxz
inc
dec
call
icebp
jno
ljmp
xor
mov
roll
dec
cltd
ss
in
je
fisubl
mov
xor
scas
movsl
in
fstps
cmc
arpl
mov
cmp
in
push
jmp
dec
cmp
xchg
fdivl
ficomps
sbb
rolb
cmp
mov
adc
fs
aas
bound
rcr
jl
push
cmp
xchg
mov
push
fs
xchg
push
mov
gs
loope
sti
lock
out
and
mov
adc
clc
push
mov
jb
imul
repz
lahf
push
out
pop
fcom
test
and
cld
sub
imul
mov
xchg
scas
and
jnp
xchg
movsb
dec
fistpl
in
inc
mov
mov
imul
pop
shrl
lea
push
inc
fnsave
sbb
pop
sub
aam
pop
pop
testb
ja
lret
xchg
mov
jge
dec
and
das
cltd
cmp
ljmp
fidivs
inc
lods
mov
cld
je
mov
push
mov
or
or
xchg
inc
data16
jno
and
mov
std
or
pop
adc
ficomps
aam
dec
jg
popf
mov
stc
out
nop
aad
into
jmp
movsl
test
mov
ja
pop
jmp
mov
lahf
mov
sub
xor
fimull
sub
sbb
pop
daa
fwait
mov
mov
jle
imul
cs
outsl
mov
jae
sar
pop
push
imul
in
out
push
gs
xchg
in
imul
pusha
leave
jb
xor
call
fs
in
pop
loopne
push
mov
ss
adc
mov
dec
ret
push
mov
aaa
mov
jne
aam
lds
mov
sub
jno
mov
cmc
pusha
insl
test
bound
pop
pop
insl
shl
hlt
push
lret
jno
dec
mov
or
inc
dec
sbb
mov
mov
popf
stos
pop
int
mov
cmp
fistl
dec
loop
push
push
in
js
dec
gs
or
lock
pop
sahf
movsb
inc
fisubl
sahf
xchg
fists
leave
push
shlb
int3
sahf
push
xor
ret
mov
dec
sub
cmp
pop
cmp
inc
dec
lret
and
inc
pop
adc
inc
mov
jl
and
pusha
dec
jmp
lea
pop
test
mov
out
add
aad
inc
add
mov
push
and
and
fs
jmp
imul
mov
roll
loope
pushf
jmp
push
test
das
push
shll
dec
es
xchg
mov
xchg
dec
stos
add
rcrl
enter
fcmovnb
aas
dec
scas
repnz
sahf
mov
and
adc
out
xor
mov
mov
add
push
dec
out
xchg
adcb
negb
jecxz
adc
leave
pop
das
xor
sbb
addr16
lret
fcomps
mov
rorb
lret
and
dec
ljmp
cli
lahf
jle
sub
shlb
push
negl
dec
ror
and
cmpsb
and
pop
enter
or
inc
les
loope
daa
iret
xor
test
mov
sub
xor
ret
subl
inc
aas
loopne
scas
add
es
loope
out
pop
mov
sti
iret
xchg
mov
dec
scas
add
in
xchg
lea
hlt
ret
mov
add
jns
aaa
popa
daa
roll
sbb
adc
test
in
sti
mov
fistpl
clc
movl
sbb
jg
push
or
fidivrl
sahf
lea
scas
mov
add
mov
cmovle
sbb
shlb
mov
out
test
xchg
lds
loop
leave
andl
es
mov
push
repz
lcall
sub
xchg
sbb
push
iret
mov
fucomip
das
mov
sbb
test
inc
sahf
rolb
mov
jg
divb
popa
subb
aas
ss
mov
aas
or
repnz
fldcw
cli
jns
out
outsb
cmpsl
push
mov
lods
push
push
rorb
lods
push
pop
mov
int3
cmp
in
pushf
mov
mov
fnsave
out
in
add
dec
inc
inc
pslld
add
arpl
inc
pop
and
dec
lods
xchg
mov
add
jmp
sti
shl
dec
mov
dec
sbb
sbb
in
std
iret
shll
xchg
int
iret
and
data16
test
xor
outsb
mov
or
push
adc
test
add
and
jb
and
lcall
adc
pop
mov
lcall
jmp
mov
out
ret
jle
test
mov
mov
mov
sub
shrb
cmp
push
cs
cmc
cmp
repz
push
pushf
and
iret
sbb
cmpsl
or
arpl
cmpsb
aam
mov
push
movsb
jecxz
push
mov
push
movsl
call
push
nop
test
aas
daa
in
dec
inc
int3
pusha
and
ljmp
xor
sub
cwtl
decl
stc
fcmove
sahf
repnz
and
popf
cmp
scas
xchg
pop
das
and
ret
push
mov
xorl
shrb
mov
or
js
sbb
mov
cwtl
jo
icebp
push
repz
mov
xchg
scas
notl
iret
aas
dec
inc
mov
adc
clc
jge
hlt
js
pushf
shl
pushf
lcall
sub
fs
and
aad
mov
sub
and
mov
and
out
fs
incl
xchg
repnz
xor
mov
jae
inc
ss
adc
add
jne
cs
lds
dec
flds
loopne
cmp
sbb
or
out
pop
sbb
or
sbb
jle
int3
jnp
std
cmp
push
cmp
jb
ds
xchg
xchg
std
lods
in
insl
imul
popf
xor
pop
adc
mov
jbe
das
mov
in
movsl
bound
idivb
icebp
hlt
xchg
jns
push
fucomip
cmp
rorl
in
loopne
fwait
pop
mov
cmp
mov
jbe
sahf
mov
js
pusha
stos
or
xchg
jnp
sbb
sub
adc
dec
push
push
clc
mov
or
out
stc
cs
push
movsb
repnz
jb
pushf
sbb
aam
inc
add
mov
outsl
fbstp
inc
psllw
outsl
xchg
sbb
cli
mov
xchg
add
loop
jne
mov
pop
aaa
and
mov
test
dec
lods
not
stc
dec
fsts
or
addr16
mov
mov
ss
xor
xchg
aaa
pop
sbb
jo
cld
inc
jle
popa
xor
ljmp
cs
daa
je
fidivrl
push
imul
jg
inc
lods
pusha
add
mov
movsl
test
pop
add
mov
out
ret
or
jg
insl
in
adc
inc
lods
pop
sub
jmp
ffree
test
cmp
into
jle
mov
push
or
popf
cmp
xchg
xor
mov
aam
sti
cmp
cmp
daa
mov
in
fwait
pop
data16
xor
add
dec
inc
sbb
sub
ljmp
movsl
jecxz
or
inc
mov
dec
or
aad
jg
jb
dec
lds
or
aas
cmp
fbstp
jp
dec
adc
inc
mov
lret
fistl
mov
xchg
fwait
mov
das
jnp
inc
pop
fdivl
in
jns
dec
int3
xchg
jecxz
mov
cmpsb
popa
notb
test
cmc
mov
cmp
pop
fistpll
and
adc
aas
cmpsl
xchg
ja
mov
jmp
mov
pop
in
cs
mov
push
cli
stos
push
dec
mov
pop
adc
mov
adc
mov
push
inc
sub
ret
xlat
mov
xchg
mov
jle
lods
push
add
jne
mov
jnp
jmp
jne
cmp
mov
outsl
jle
imul
pop
repz
xchg
pop
mul
mov
jg
push
loopne
icebp
inc
cmp
data16
push
push
pop
ret
adc
mov
cmp
cli
ficoms
xor
loop
mov
adc
insb
xchg
clc
xchg
inc
xchg
int
int3
or
fwait
lret
repz
push
loopne,pn
in
lahf
hlt
and
nop
and
addr16
jge
xchg
jmp
sbb
and
xchg
frstor
roll
xor
adc
fstps
sbb
fiadds
jg
pusha
inc
mov
roll
add
push
mov
push
adc
pop
cmp
rolb
ss
cwtd
mov
mov
cmp
sub
cwtl
push
mov
inc
pop
call
out
cld
bound
mov
or
push
xor
test
jecxz
xchg
pop
mov
mov
fcom
mov
mov
pop
in
das
pop
push
push
adc
fdivl
push
inc
ror
aam
shlb
arpl
lods
shrb
push
ss
xchg
push
in
shlb
stc
aam
popf
or
pop
sbb
pop
cltd
sbb
sti
or
ret
mov
cmp
cwtl
and
sub
and
cmp
popf
int
mov
mov
loope
pop
das
push
push
movsl
ds
mov
push
cmpl
mov
fldl
xchg
xor
enter
inc
push
scas
xor
repz
lds
fwait
or
xchg
lea
push
jg
in
jo
add
add
jecxz
shl
mov
aas
nop
clc
push
jo
cwtl
inc
mov
jb
jbe
or
pop
dec
dec
pop
out
mov
pop
in
inc
sub
sub
ret
sahf
mov
je
mov
mov
jecxz
adc
rorb
jp
and
jbe
sub
sub
push
or
fidivs
addr16
sub
jmp
pushl
sub
jg
jnp
lds
mov
sub
int
mov
fsts
insb
movl
dec
fsts
mov
faddl
lahf
dec
xor
into
dec
ja
ss
or
add
sbb
sbb
jmp
jbe
popa
test
push
test
sub
jno
addb
or
push
ja
das
cmp
sti
push
adc
cmc
ds
dec
mov
je
pusha
and
mov
add
lahf
repz
in
sub
cltd
rcrl
setnp
mov
adc
jne
xchg
ret
and
push
cmp
xchg
imul
sub
inc
mov
repnz
filds
mov
or
xchg
pop
cmc
add
mov
or
pop
fbstp
lea
jne
mov
in
pop
popa
test
sti
mov
in
gs
or
jecxz
not
outsb
cmc
sahf
nop
sub
and
sbb
jnp
dec
inc
repz
mov
dec
outsl
neg
cmc
fwait
add
push
cmp
in
xchg
inc
fbstp
add
movsb
call
clc
divl
test
incl
mov
pushf
pop
inc
xchg
cmpsb
push
dec
lea
jno
mov
mov
sti
rorl
lds
cltd
fidivs
pop
mov
enter
enter
pop
dec
test
psubb
add
jl
fsubrp
loopne
pop
inc
cld
shl
imull
das
pop
mov
in
insl
iret
mov
jb
adc
je
mov
leave
sub
pop
or
test
push
jns
out
xor
adc
mov
inc
in
hlt
lock
push
cld
or
sub
push
imul
push
data16
adc
hlt
cmp
dec
pop
xlat
push
shl
mov
mov
mov
jmp
and
ret
mov
rcr
cwtl
sarl
jmp
fidivrl
dec
jg
not
daa
out
cmp
jg
mov
add
int
sub
mov
mov
repz
daa
mov
stos
jmp
xor
ss
cltd
push
or
pop
ds
loopne
dec
les
dec
rolb
popa
cmpsl
inc
pop
cmp
xchg
shlb
xor
insb
jb
push
test
int
dec
lret
pop
subl
inc
push
fstl
cmc
shrl
xorl
mov
or
jnp
inc
loope
in
fld
sbbb
push
loop
mov
xchg
sub
push
lret
stc
or
pop
gs
repnz
dec
outsb
addr16
mov
push
mov
scas
xor
aad
lahf
jmp
mov
jnp
inc
jae
pop
inc
push
sahf
jo
out
fs
in
jp
stos
loopne
or
inc
or
insl
not
cwtl
iret
add
jnp
inc
push
inc
rol
lock
or
inc
nop
out
out
ficoml
mov
les
ret
xor
stc
xchg
popa
leave
push
add
insb
jmp
aad
daa
jmp
gs
pcmpgtd
dec
fcoml
jbe
push
xor
push
mov
shr
dec
lcall
cs
out
and
xchg
out
cmc
dec
adc
mov
es
inc
add
test
sbb
arpl
ja
dec
movsb
fimull
sub
xchg
into
fidivrl
or
mov
pop
mov
icebp
insl
das
xchg
mov
scas
leave
inc
movsb
push
outsl
icebp
shll
jno
cmpsl
mov
inc
xchg
repnz
push
inc
and
pop
mov
push
mov
loop
rcr
outsl
xchg
sub
js
sbb
shll
sbbb
dec
xor
mov
sub
bound
sub
mov
lock
test
and
push
mov
scas
inc
sbb
lds
pop
cmpsl
dec
hlt
mov
add
mov
sub
jb
out
sub
mov
test
pop
mov
lret
test
sub
mov
sub
test
pop
cmp
into
jg
fmuls
adc
sarb
mov
sbb
cmp
ja
loop
movsb
jge
mov
jbe
pop
adc
fiadds
pop
xorb
test
arpl
jmp
adc
mov
and
lcall
loopne
idiv
and
jae
jg
mov
lock
dec
js
add
fistl
lret
lahf
and
int3
bound
pop
dec
mov
imul
roll
xlat
out
push
popf
mov
pushf
mov
sti
cmpsb
stos
sbb
mov
pop
repz
lcall
cmpsb
or
jmp
cmp
xor
mov
inc
xor
iret
fimuls
jp
or
stos
loope
sub
jge
aam
int3
xchg
add
inc
dec
jno
addr16
jnp
push
popa
jecxz
adc
lods
adc
insb
sti
arpl
bound
test
cltd
stos
sbb
sbb
mov
push
daa
inc
jnp
pop
ja,pn
addr16
push
push
inc
out
mov
cmpsl
into
xchg
fiadds
mov
sahf
outsb
aaa
jle
dec
pop
pop
pop
ja,pn
addr16
push
push
inc
out
mov
cmpsl
into
xchg
fiadds
mov
sahf
outsb
aaa
jle
dec
outsl
pop
pop
ja,pn
iret
push
push
push
inc
out
outsl
cmpsl
into
xchg
fiadds
mov
pushf
outsb
aaa
jl
dec
pop
pop
push
sub
ds
sahf
inc
adc
or
fnstcw
sbb
popa
cmp
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
add
adc
and
xor
lea
bound
sbb
bound
mov
mov
loopne
lock
adc
add
xor
and
push
inc
pusha
jb
pop
adcb
mov
loopne
lock
adc
add
xor
and
push
inc
pusha
jb
bound
xlat
mov
rclb
pop
pop
je
and
inc
mov
fldt
loope
pop
jle
jmp
xchg
mov
or
fwait
adc
scas
mov
cli
call
pop
dec
dec
mov
ret
mov
jge
push
add
ret
inc
in
pop
and
mov
mov
sub
lock
xor
inc
inc
in
jo
or
je
daa
aas
ret
arpl
lock
ror
das
sbb
push
lods
jecxz
xor
xchg
and
subl
add
dec
out
adc
mov
leave
in
clc
jo
xlat
xchg
pusha
xchg
cwtl
pop
nop
ret
pop
xchg
movsl
bnd
int3
adc
add
xor
and
push
inc
pusha
jb
bound
mov
mov
loopne
lock
inc
adc
jae
arpl
and
add
jb
and
fwait
mov
cmpsb
rolb
gs
outsb
inc
jp
inc
inc
adc
dec
in
shl
aad
lock
mov
push
adc
push
pop
pop
or
push
inc
pusha
jb
bound
mov
mov
loopne
lock
adc
add
xor
and
push
inc
pusha
jb
bound
mov
mov
loopne
lock
adc
in
cmpsl
and
aas
cmp
dec
pop
inc
fs
lcall
sub
pop
ret
call
daa
sahf
lret
test
lds
push
aad
test
cli
les
push
out
sarb
fs
out
xor
jl
sub
add
sbb
lods
imulb
rcrl
into
sub
mov
inc
pushf
insb
adc
cltd
outsl
sbb
aad
nop
pop
xchg
ror
loope
pop
push
sbb
cld
cmp
or
mov
lods
nop
jecxz
mov
in
push
pop
lret
xchg
fisttps
or
jns
mov
fstps
add
loope
or
in
sbb
jl
hlt
adc
cmp
roll
repz
sbb
stos
fimuls
mov
push
and
mov
fwait
ret
lea
xlat
fldenv
cwtl
inc
adc
cmp
sarb
loope
jle
cmc
mov
sub
inc
jge
dec
mov
and
lahf
ds
xor
daa
into
or
fs
fisubrs
repz
mov
dec
shlb
cmpsb
pop
enter
adc
mov
jb
pop
stos
shl
sbb
adc
mov
add
xor
xchg
insb
xchg
or
push
int3
xchg
sahf
jbe
das
adc
data16
jns
dec
fdivl
mov
out
popa
test
lret
lds
dec
cs
push
xchg
out
cmc
mov
pop
and
xor
jge
orb
xchg
mov
fdivl
jp
xor
in
std
lret
addr16
notl
sahf
add
and
les
repz
dec
jl
pop
movsl
divl
xor
fcomps
fdivl
push
push
lods
sbb
in
adc
daa
inc
ja
imul
xor
sbb
sti
inc
jb
jge
xchg
into
jne
xor
rolb
xchg
cld
je
xchg
out
mov
inc
in
pop
xchg
popf
lods
imul
mov
push
out
idivl
sbbl
lahf
aaa
jo
movsl
iret
rcrb
inc
sub
aaa
jae
mov
and
shll
push
xor
inc
inc
imul
das
loopne
pop
jle
xor
sti
jae
nop
cli
rcrb
je
jmp
rcrl
xlat
adc
cld
cld
sub
and
mov
repz
dec
je
lcall
add
jbe
push
addr16
enter
mov
pop
repnz
cmp
lds
xchg
aam
sbbb
lods
mov
in
call
int3
orb
sub
repz
stos
jno
xor
xchg
sahf
or
mov
ret
testb
jge
add
sahf
cmp
inc
idivb
fisubl
stos
ljmp
dec
pop
push
in
jbe
ret
adcb
or
pop
cwtl
add
jl
xlat
aam
xor
sub
or
sbb
sub
xor
outsl
inc
inc
jl
adc
cmpsl
or
pop
adc
or
cmp
adc
outsb
into
dec
dec
ficoms
and
inc
jb
or
movl
mov
mov
mov
movsl
clc
movsl
out
enter
adc
int
inc
push
mov
sahf
lahf
iret
ljmpw
je
pushfw
and
cmp
out
fcomps
push
out
rol
fcompl
sbbb
jae
arpl
push
xor
xor
in
mov
inc
mull
sub
push
mov
cwtl
out
xchg
idiv
pop
add
or
ret
xchg
std
ret
push
mov
in
mov
xchg
imull
fimuls
dec
test
mov
dec
clc
jb
or
insb
push
mov
inc
sbb
fs
mov
int3
xor
cli
das
aas
nop
fidivrl
in
xchg
mov
pop
decl
xchg
mov
dec
leave
xchg
in
push
xor
daa
jle,pt
mov
dec
cmpsb
xor
sbb
sub
scas
mov
test
mov
jl
js
movsl
mov
ja
adcb
push
mov
cmpsl
mov
sbb
mov
jae
daa
jle
add
sbb
stc
lcall
mov
es
fdivs
aas
inc
pop
insb
outsb
push
popa
sub
add
mov
in
xchg
push
mov
push
imul
fcomps
stc
and
push
adc
xor
in
inc
mov
fwait
aas
testb
sbb
mov
jg
xor
xor
sbb
popl
les
xor
add
les
push
lret
xchg
mov
fidivrl
filds
lcall
testl
sub
jbe
mov
mov
xor
and
shlb
fs
fcmovnbe
daa
mov
cwtl
dec
insl
sub
in
or
sub
in
sub
fiaddl
adc
out
adc
adc
sbb
test
mov
pushf
fidivl
pusha
js
fcomps
mov
icebp
or
mov
into
fcmovnbe
cli
sti
imul
int
or
cmc
out
bound
rcr
scas
jns
mov
xor
sbb
xor
inc
mov
scas
sub
addr16
iret
xchg
cmp
and
mov
test
xchg
push
loope
call
out
gs
clc
push
ljmp
clc
popf
negb
stc
xlat
jno
es
fdiv
cmp
es
sbb
push
jmp
mov
mov
cli
add
call
push
fldcw
jp
xchg
push
adc
jecxz
shl
adc
xor
fbld
jne
mov
das
aas
pushf
addl
icebp
xchg
sbb
jp
xor
bound
in
outsb
push
out
ret
cld
int
rcrl
fsubrp
in
cltd
xchg
and
push
aad
outsl
add
mov
int3
add
das
repz
cmp
sub
push
pop
shl
dec
xor
fs
cwtl
or
decb
clc
mov
mov
xor
lds
into
pushl
insl
xchg
movsl
xchg
sub
push
test
cmp
jbe
aaa
and
pop
inc
jno
popf
xlat
cmpb
iret
mov
mov
imul
pand
sub
iret
loope
int
hlt
push
jae
push
mov
ss
inc
ds
in
bound
sub
scas
in
stos
pop
jnp
xchg
jo
fdiv
scas
aas
xlat
sub
xchg
push
fwait
pop
stos
cmpsb
push
xor
or
lds
out
sub
and
sub
vorps
push
inc
dec
mov
test
mov
inc
pop
rorb
push
std
daa
mov
or
jmp
pop
mov
sbb
xchg
mov
xchg
pop
loope
roll
gs
cli
lods
xchg
xchg
and
dec
aas
sbb
dec
xchg
movsl
hlt
dec
and
orb
or
xor
imul
inc
mov
ds
jl
cld
gs
rep
out
or
ja
dec
fdivrp
sbb
bound
inc
or
lret
jne
sbb
cmp
mov
mov
xchg
xchg
lea
mov
stc
cmp
loop
xchg
mov
mov
ljmp
rolb
ljmp
mov
mov
xlat
mov
push
repz
insl
adc
xor
mov
cld
in
jb
cs
inc
fisttpl
rcrl
pop
cmc
pop
mov
mov
mov
dec
hlt
mov
fcmovu
inc
push
fsubrs
mov
dec
inc
lods
jbe
mov
int
jae
dec
or
ret
xchg
fcoml
mov
cs
lahf
cmp
xchg
sti
inc
out
int3
sbb
je
jmp
fwait
sahf
pop
je
add
pop
inc
pop
aas
data16
leave
mov
fistl
push
aas
xor
rsqrtps
jl
xchg
sahf
cwtl
mov
repz
xchg
std
mov
adc
pop
ja
ds
hlt
dec
lret
out
mov
sbb
inc
fcmovnbe
xlat
lods
xchg
hlt
stos
es
subl
mov
pop
cmp
decb
aas
lods
jmp
lahf
test
jnp
xchg
cmc
inc
insl
dec
sub
shrl
inc
add
jae
cld
idivb
push
testb
outsb
loop
fistl
pop
mov
mov
and
or
sub
add
imul
hlt
jg
fidivrs
imul
push
adc
stc
sbb
push
out
mov
rcrl
popa
lret
and
popa
dec
push
ret
push
mov
in
adc
out
pop
xor
dec
fdivl
sbb
fisubrl
add
inc
std
xchg
jecxz
sub
jbe
loop
fmul
fdivr
mov
pop
jp
sbb
scas
imul
test
pop
adc
frstor
cs
pop
mov
fimull
in
pop
mov
ficomps
jp
test
daa
daa
mov
out
jae
cltd
or
call
insl
fidivrl
jge
pop
dec
cmpsb
dec
and
pop
clc
xchg
jge
sub
xchg
daa
push
ss
inc
dec
pop
mov
xchg
sub
push
or
sbb
mov
xchg
ljmp
cmc
subl
daa
jbe
rorl
and
rep
int
mov
sbb
mov
sti
pop
arpl
xor
mov
push
or
xchg
and
out
into
loop
or
jmp
inc
xchg
stos
jmp
arpl
insl
push
inc
fldl
cmpsl
aam
sub
addr16
adc
fs
push
jns
inc
mov
push
mov
hlt
sbb
out
and
leave
sub
mov
fcomi
xchg
idivl
or
shll
scas
ljmp
push
into
int
xor
cmpsb
out
movsb
pop
std
stos
fs
mov
dec
testl
inc
or
shrb
mov
outsl
fistl
fisubs
sbb
aas
ja
dec
fs
call
sbb
inc
daa
mov
sbb
dec
test
xchg
cmpsb
imul
ja
lret
cwtl
cmp
mov
dec
push
orl
sub
jmp
lods
shlb
out
sub
pop
outsl
fisttps
mov
push
cli
xor
push
clc
xchg
xor
sub
or
mov
jl
mov
fdivrl
dec
fsubrs
jg
enter
pop
lret
dec
ljmp
or
repz
dec
jg
filds
aaa
outsl
inc
je
mov
cmp
inc
add
mov
push
mov
push
or
sub
mul
aad
lds
popa
out
mov
add
movsl
dec
nop
push
repz
mov
lret
jl
dec
ficomps
mov
push
mov
add
cltd
xchg
rol
and
dec
mov
and
push
aam
in
sbb
xchg
ret
mov
xchg
dec
sbb
dec
aad
sbb
jno
hlt
hlt
imul
xor
add
cmp
sbb
outsb
loopne
mov
jns
loopne
mov
outsl
push
sbb
in
imul
ja
push
or
xor
and
dec
lahf
sub
inc
xchg
hlt
idivl
lahf
arpl
push
push
fdivrs
cmpl
mov
sub
idivl
daa
sar
add
jnp
pusha
gs
add
sbb
jnp
or
cmp
ss
test
repnz
cmp
push
testl
and
ljmp
sarb
dec
leave
pop
push
inc
fwait
daa
xchg
pop
push
mov
cld
cmp
inc
jp
cmpsl
adc
movsb
sbb
mov
fsubrl
out
cltd
add
and
nop
or
test
mov
push
insl
and
into
dec
push
adc
sub
pop
or
or
mov
cmpsl
loopne
dec
mov
mov
cli
push
enter
lret
adcl
jmp
sbb
mov
lcall
fldl
fadds
pop
or
fs
push
je
or
fcoms
push
pop
adc
sbb
mov
fwait
jbe
sbb
push
push
jbe
leave
dec
and
xchg
mov
sub
or
sahf
xor
jo
and
add
nop
bnd
xchg
cmp
repnz
stos
sbb
or
push
mov
idivl
adc
jl
sbb
clc
pop
jno
fs
and
push
lahf
daa
cld
push
mov
push
cmp
xor
xchg
test
arpl
mov
dec
xchg
fwait
insb
xor
insb
lret
sahf
pop
out
cmp
or
fldt
lds
xchg
push
mov
pop
push
and
xlat
test
scas
cwtl
movsb
sbb
imul
mov
scas
mov
cmp
mov
xor
ljmp
imul
aam
mov
mov
sbb
ret
add
sbb
cmp
lods
sar
fs
pop
addr16
xlat
loope
mov
cmc
xlat
pushf
inc
mov
jg
xchg
lcall
sub
cmp
pop
sub
sub
push
push
sbb
or
subl
outsb
xchg
int3
or
aaa
ret
sbb
xor
mov
pop
adc
dec
cmp
les
mov
lods
xchg
int
adc
or
daa
jecxz
or
movsl
outsb
sbb
mov
adc
scas
pop
aam
cmpsb
repnz
and
push
mov
movsl
jno
xor
cmp
mov
stc
out
test
les
adc
inc
push
add
push
dec
fldl
cld
mov
adc
in
inc
mov
mov
mov
lcall
sahf
lods
mov
fnsave
sbb
xchg
daa
movsl
or
push
pop
cli
jbe
mov
call
int3
sub
xor
adc
mov
ljmp
pop
fs
mov
maskmovq
xor
scas
shll
xchg
stc
push
xor
lock
subl
mov
pop
xor
test
xchg
cmc
xor
dec
lds
cli
out
adc
xor
lahf
adc
adc
movsl
pop
dec
ror
inc
mov
adc
sub
cmpsl
std
pop
mov
loopne
pop
sub
sbb
aad
sti
mov
jns
cmp
dec
aas
out
xor
es
push
pushf
jg
lret
ficoml
popa
adc
mov
arpl
lods
jle
inc
inc
lods
lock
add
pusha
subl
sub
loopne
push
or
inc
cmpsb
test
mov
pop
arpl
ds
jno
mov
das
xchg
pop
mov
aaa
mov
jne
and
jmp
and
or
cmp
xchg
sub
inc
fnsave
jns
mov
dec
dec
xchg
add
push
les
std
mov
mov
cltd
popa
subb
lock
mov
inc
jp
ds
ss
xchg
or
fbstp
test
repz
jbe
mov
sbb
imul
cmp
pushf
fs
push
adc
stos
mov
pop
sahf
xchg
pop
xchg
xor
xor
xor
gs
outsb
xor
sbb
pop
dec
or
jl
in
and
out
repnz
xchg
mov
out
std
fbstp
out
and
pop
jbe
pop
cmp
test
andb
ret
xchg
and
xor
cmpl
bound
mov
jne
aam
pop
mov
inc
add
fs
jmp
das
push
scas
xor
movsl
push
sub
push
mov
and
xchg
or
and
mov
push
xlat
ja
xchg
js
mov
xor
pop
mov
dec
std
inc
js
repz
sbb
inc
ja
mov
jge
push
sub
and
adc
mov
imulb
ljmp
and
dec
hlt
adc
xor
fsts
mov
mov
xor
or
mov
cmpsb
pop
dec
push
push
clc
push
sub
test
jae
lcall
sub
mov
scas
mov
rcrl
xor
add
int
xchg
fisubs
xchg
data16
jbe
push
inc
and
movsb
add
repz
das
and
dec
sub
cwtl
pop
in
orl
das
pop
mov
in
cwtl
jge
inc
xor
mov
js
nop
xor
ret
scas
pushf
and
lock
rcll
xlat
in
cltd
insl
cmp
out
xchg
jmp
lds
aam
push
inc
decl
in
das
lods
add
mov
sub
aaa
or
es
cmp
imul
mov
xchg
jbe
popf
pusha
xor
mov
popa
inc
popa
xchg
movsb
inc
xlat
dec
fcmovnbe
test
mov
cmp
or
cli
dec
jle
pop
mov
or
jle
push
scas
push
jmp
add
and
mov
ficomps
addr16
mov
fbstp
repnz
jl
jl
pushf
stos
test
out
mov
jecxz
cwtl
stc
mov
insb
adcb
fisubs
nop
in
sbb
push
mov
or
lcall
cmpsl
in
stos
lcall
insl
ljmp
sarl
mov
mov
cmpsl
std
std
push
sbb
xchg
or
arpl
push
mov
int3
in
ss
ljmp
jl
pop
mov
dec
and
out
mov
push
mov
cwtl
mov
lret
jns
push
les
popl
ljmp
adc
addr16
addr16
aam
mov
or
test
mov
jle
aas
repnz
jg
lods
cmpsb
inc
push
and
not
test
cmp
xchg
js
stc
in
jg
and
std
movsl
mov
mov
cmp
arpl
loop
cld
inc
call
lods
xchg
cmp
jns
adc
push
mov
out
idivl
push
clc
jns
push
ret
jg
pop
popf
stos
in
dec
adc
ds
cs
fiadds
popa
out
xor
pop
push
jle
hlt
lret
dec
jecxz
in
cs
dec
cmp
dec
push
inc
std
mov
xor
inc
popf
mov
xor
clc
imul
and
shlb
std
push
jb
jbe
push
pop
mov
add
mov
cli
xor
dec
sub
shlb
pop
es
xor
push
iret
sahf
pcmpeqw
jne
jmp
inc
shufps
das
mov
mov
outsl
jae
cmp
fildl
push
mov
pop
cmp
cmp
pop
add
cmp
push
jae
jle
dec
les
fs
aad
mov
pusha
adc
mov
icebp
cmp
mov
dec
movsl
stos
andl
jnp
add
aad
test
subb
fldl
add
push
mov
sbb
scas
add
enter
xlat
cmp
inc
shll
xor
addr16
lcall
fldcw
xchg
xchg
in
push
lcall
aad
mov
fidivrl
fnstcw
and
push
int3
fs
push
dec
std
aad
jbe
test
push
lret
cmpsb
ja
mov
inc
mov
sbb
stc
in
sbbl
insb
outsl
fadd
pop
gs
nop
fwait
and
je
mov
jp
repz
inc
mov
jl
push
js
sub
cmpsl
sub
mov
sbbl
mov
sbb
out
test
loop
loope
push
es
pop
adc
mov
xchg
scas
cmp
shll
imul
lahf
sarl
ss
fwait
mov
jo
gs
cmp
das
push
push
cli
or
sti
pusha
xor
daa
mov
frstor
popa
out
mov
rcrl
js
repnz
jmp
mov
dec
cs
push
lcall
mov
test
add
ja
addr16
mov
mov
push
stos
dec
jp
je
call
pushf
into
pop
lahf
mov
clc
stos
das
lret
leave
nop
aas
xor
sbb
inc
int3
lods
ja
aaa
lock
xchg
push
push
pop
xchg
jp
jno
scas
scas
pop
psubb
das
movsl
pop
push
add
ds
or
pushf
imul
movsl
jbe
push
test
jno
push
rclb
jmp
xchg
mov
mov
inc
fstps
dec
cltd
cmp
ficomps
xchg
xor
and
cmp
pop
lds
cmc
aam
and
mov
push
dec
push
mov
fwait
push
adc
imul
cs
sahf
loop
pop
mov
mov
clc
or
hlt
stos
jb
push
cs
std
mov
out
xchg
mov
jnp
adc
repz
add
js
scas
add
mov
nop
push
cmpb
hlt
pop
lret
inc
scas
push
push
cmp
mov
push
lret
in
or
jno
mov
mov
xlat
adc
cmpsl
cmpsl
das
cld
repnz
xor
inc
push
push
inc
pusha
jb
bound
mov
mov
loopne
lock
adc
add
xor
and
push
inc
pusha
jb
bound
mov
mov
loopne
lock
adc
and
push
push
inc
pusha
jb
bound
mov
mov
loopne
lock
adc
add
xor
and
push
inc
pusha
jb
mov
or
mov
sbb
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
xor
shrl
aaa
mov
lea
fs
test
push
leave
push
mov
pop
mov
mov
dec
mov
sub
sbb
or
negl
leave
push
mov
pop
mov
mov
mov
popa
out
xor
test
cltd
sub
cmp
xor
cmp
sbb
fisubrs
push
or
fucomp
pop
xlat
inc
jbe
cmp
jle
aad
adc
ds
ret
imul
les
adc
or
push
jle
cmpsl
sbb
pop
sub
leave
mov
sub
push
mov
inc
imul
fcmovnbe
idivb
adc
cmp
out
sbb
ror
lcall
mov
cld
lret
cmpsb
into
mov
jbe
addr16
mov
out
cmp
mov
or
test
mov
cmp
cmpsb
mov
into
mov
shll
pushf
lock
das
adc
out
sbb
test
pop
dec
mov
and
out
sbb
mov
or
jnp
add
xlat
push
fnstcw
outsb
cltd
pop
in
daa
or
daa
mov
pop
xchg
cwtl
push
das
mov
jp
cmp
into
add
loope
push
sti
orb
mov
stos
shll
mov
adc
outsl
in
or
and
cli
pop
out
in
or
jl
sub
sbb
or
stc
ds
push
mov
pop
mov
mov
dec
mov
sub
sbb
or
stc
ds
push
mov
pop
mov
mov
push
dec
jne
or
daa
xchg
mov
ljmp
xor
aad
xchg
ss
mov
das
pmulhw
stc
xor
es
stos
mov
jno
mov
cmpl
cmp
xchg
pop
out
mov
mov
mov
pop
in
xchg
in
cwtl
call
repz
pop
loopne
cli
shrl
adc
clc
and
imul
sbb
mov
push
and
movsw
lret
cmp
shll
push
add
sub
pop
sbb
dec
out
fnstsw
cmp
imul
fsts
mov
dec
inc
or
ficoml
rorb
stos
cmc
mov
dec
lods
fmuls
test
insl
cwtl
dec
xlat
or
outsb
mov
add
and
jg
test
mov
fstpt
push
jb
pop
or
sbb
stos
cmova
pushf
in
push
mov
lock
add
rcrl
hlt
xor
cld
les
pop
cmp
lods
out
dec
dec
aas
sbb
es
rorb
rolb
pop
jne
sahf
int3
pop
iret
fnsave
mov
cli
inc
pop
in
lea
add
in
leave
mov
fnsetpm(287
xor
fsubr
aas
mov
sahf
push
cli
mov
js
push
xchg
fildl
jae
scas
movsb
out
xor
inc
and
adc
mov
sarb
loope
mov
mov
fnstenv
xor
daa
add
xor
xchg
xchg
sti
and
rcl
cwtl
pusha
push
fsubs
inc
bound
xchg
test
out
in
xchg
pop
mov
std
mov
add
icebp
aas
aaa
jecxz
orl
pop
sub
test
xor
shrl
loop
out
int
stc
in
inc
fwait
sub
loopne
cs
sub
rolb
insl
test
enter
cmp
jae
lods
ljmp
out
ret
mov
push
mov
bnd
std
inc
jno
and
pop
imul
and
cmpb
out
je
pop
pusha
fnsave
andl
test
call
ljmp
cli
fcompl
call
stos
in
xor
daa
sbb
mov
cs
lahf
pop
les
pop
mov
pop
movb
cmp
rorl
dec
jmp
jp
dec
or
xchg
pushf
fidivrl
pop
jl
pop
scas
shll
jecxz
arpl
sbb
jmp
push
popf
rcl
push
stos
or
outsl
cmp
test
xor
ret
mov
inc
jo
notl
sub
shll
push
in
jp
xchg
mov
and
ja
mov
pusha
loop
stc
cmp
adc
mov
in
mov
aad
adc
sbb
scas
push
pop
xchg
out
sbb
js
addr16
add
nop
jno
mov
mov
sti
movsl
add
mov
enter
mov
and
cmp
clc
jmp
hlt
jmp
xchg
mull
xchg
adc
out
mov
ljmp
das
rcrb
mov
push
xchg
mov
add
test
xor
dec
maskmovq
testl
in
stos
testb
fisubs
stos
push
sub
fcmovnb
add
in
lret
mulb
inc
push
jecxz
aad
cld
mov
or
or
push
or
enter
dec
int
add
rclb
movsb
xor
shlb
lcall
test
faddl
inc
icebp
lret
xchg
je
xor
inc
stc
mov
sbb
movsl
mov
mov
in
lret
pop
lahf
bound
pop
xor
das
sbb
movsb
fdivrl
inc
mov
add
mov
imul
mov
fdivr
pop
fwait
mov
cmp
int
push
mov
adc
dec
sub
call
hlt
mov
mov
xor
push
jo
ret
les
sahf
pop
sbb
adc
clc
jo
test
and
mov
add
push
test
cmp
push
gs
jp
imul
cmp
lds
insl
mov
xlat
cltd
imul
xchg
inc
jl
lcall
lahf
dec
push
aas
xchg
mov
test
mov
shr
sub
push
je
xor
or
or
rolb
dec
sbb
jns
popf
cmp
mov
jmp
loop
pop
std
es
fidivl
or
adc
or
stos
aas
into
test
xor
xor
mov
or
pop
mov
sub
sahf
mov
loope
cltd
pop
in
in
std
int3
cmp
lds
scas
adc
xchg
mov
fidivrl
sub
subb
test
test
test
inc
mov
mov
xor
cltd
out
mov
insl
mov
push
rdmsr
inc
sbb
clc
mov
je
mov
ja
inc
lret
mov
insl
mov
testb
inc
sahf
fisubs
mov
mov
call
ds
lods
mov
ljmp
mov
lahf
movntq
xchg
das
notb
and
fwait
cmp
sbbl
cmp
in
inc
xchg
cs
fucomi
mov
sub
mov
push
cmpsb
fnstcw
popa
dec
out
sar
movsl
lahf
cltd
in
adc
stos
xor
lahf
test
nop
push
gs
pop
in
lods
push
xchg
pusha
xlat
push
jecxz
dec
sti
cmp
xchg
daa
adc
inc
add
adc
mov
test
inc
dec
jno
or
mov
out
push
insl
xchg
xor
jae
pop
sub
or
roll
add
jb
adc
lods
lahf
push
pop
dec
dec
adc
sbb
in
jg
sti
push
jmp
adc
cmpsb
adc
mov
testb
push
pop
es
xchg
sub
jl
jge
inc
jmp
inc
dec
sub
push
sbb
or
clc
inc
mov
inc
or
into
std
adc
mov
movd
xor
aad
stos
cwtl
cmpsb
cmp
pop
xchg
hlt
aaa
mov
pop
ret
push
push
ljmp
jp
loope
add
mov
sbbb
or
ret
jns
cltd
xor
cld
ljmp
test
aam
mov
ffreep
es
fimuls
stc
xor
push
fcompl
pop
inc
fadds
nop
ja,pt
out
adc
ficoml
ja
fsubrl
push
hlt
fstps
fwait
scas
movsl
jns
cwtl
shl
gs
mov
rcrl
int3
pop
sbb
dec
sub
arpl
xchg
lea
inc
enter
rcl
jle
scas
pop
inc
cmpsl
sub
ret
mov
push
rolb
pusha
xchg
cld
adc
mov
pop
dec
lcall
dec
push
xchg
xor
and
int
addr16
xchg
out
into
mov
dec
outsl
push
ljmp
adc
sbb
or
mov
mov
pop
pop
adc
repnz
xor
popf
xchg
fcompl
cli
mov
dec
test
or
mov
icebp
sbb
bound
cmp
xchg
jnp
push
cmp
sbb
dec
fimuls
into
xor
ljmp
out
les
dec
stos
pop
jo
popa
inc
mov
out
sbb
stos
rorl
mov
in
inc
xchg
dec
jb
mov
das
jmp
enter
pop
loopne
out
aaa
cmpsb
push
popa
pop
push
icebp
fsubl
fwait
mov
mov
cmp
pusha
mov
adc
mov
push
dec
inc
jp
inc
ljmp
mov
fdivl
pusha
sbb
push
push
lret
lahf
adc
cmp
inc
adc
cltd
mov
xchg
add
and
xor
inc
aaa
dec
mov
popa
sub
pop
hlt
dec
outsl
insb
sahf
loopne
mov
push
cwtl
test
push
sub
pop
cs
lea
fimuls
in
adc
dec
das
mov
sub
movsb
or
dec
dec
mov
fstps
inc
sub
adc
push
sub
or
cli
and
jbe
dec
je
mov
call
into
jo
pop
dec
in
aam
rcll
bound
adc
cwtl
push
sar
call
outsb
push
sbb
fnstcw
push
fimull
jo
test
mov
jns
jnp
in
and
aas
in
push
adc
dec
dec
adc
adc
cltd
cltd
xchg
sbb
insb
nop
shlb
dec
dec
xor
dec
xor
push
and
popa
pop
mov
sub
pop
lods
add
push
inc
shl
or
inc
jno
dec
orb
shlb
testb
dec
fidivrs
mov
cltd
scas
inc
mov
adc
faddl
fmuls
add
dec
and
fiaddl
mov
fucomip
push
push
sub
lahf
rorl
xchg
cld
pop
cli
add
movsb
out
cmpsb
pop
lods
and
mov
or
sub
cld
outsl
adcl
or
stc
or
cmp
sbb
cmp
mov
push
xchg
jecxz
cld
jbe
xchg
testl
in
dec
mov
bound
push
incb
jmp
mov
adcb
pusha
ljmp
cmp
xchg
jecxz
pop
int
outsl
mov
mov
and
popa
iret
rorb
test
jge
sbb
insl
mov
mov
inc
incb
in
and
or
jge
cmp
inc
icebp
push
push
jl
ror
lret
cmp
jb
adcl
fstpl
hlt
lret
sbb
add
and
fnstsw
jnp
jnp
loope
lods
ret
das
push
jo
stos
out
fcmovnb
cli
and
jge
lahf
mov
popl
pop
mov
sahf
stos
jge
cmp
push
mov
ljmp
jo
movsb
ja
mov
shll
xor
lock
out
pop
lcall
test
or
mov
mov
lcall
aad
jp
xchg
orl
ret
neg
mov
add
push
mov
test
mov
shrb
stos
inc
cmp
jle
add
push
sbb
xchg
mov
jnp
jg
mov
and
add
add
or
pusha
and
ret
xchg
jg
ffree
sub
sub
js
and
pop
jg
dec
cmp
push
cmp
dec
pop
fisubrl
mov
sub
fistps
aas
fldcw
rolb
js
jmp
insb
shll
fcomps
pusha
repnz
testb
imul
and
stos
in
cs
gs
or
test
jne
sub
lcall
ja
or
dec
daa
push
cld
repnz
loop
fbld
push
fnstsw
sbb
ss
xchg
ret
push
test
cmp
rorl
rcrb
stos
mov
scas
inc
mov
bound
fbld
into
mov
iret
push
and
leave
ja
jmp
mov
or
xor
push
mov
jmp
movsb
lret
cmpsl
sub
js
aam
cmp
sub
push
test
push
popf
testl
sub
scas
sub
in
cmp
mov
jbe
pop
mov
out
dec
xor
xor
aad
mov
dec
es
add
mov
xchg
mov
jg
push
pop
mov
xlat
in
into
aad
in
inc
push
shll
sbb
mov
sub
les
mov
out
push
ret
inc
loope
dec
loope
in
pop
scas
ss
pop
mov
inc
add
xchg
pop
orl
loop
and
lods
fisttpll
sbb
sbb
add
pop
or
add
lds
inc
dec
pop
out
stos
mov
aas
jbe
jne
mov
inc
pop
rolb
cwtl
mov
pop
outsb
add
ljmp
adc
in
pushf
int
add
push
lods
xchg
mov
sti
xor
dec
fcoml
cltd
or
mov
add
sub
pop
aaa
push
out
mov
pop
fwait
ret
es
cwtl
inc
fldl
sbb
stc
decl
test
cmc
inc
sub
pushf
inc
mov
inc
jbe
mov
inc
insb
scas
pop
add
xchg
xchg
mov
fcmovnbe
or
mov
mov
pop
dec
cmpb
cmc
or
roll
icebp
push
fwait
pop
sub
loope
leave
insb
inc
into
adc
or
xor
and
mov
push
pop
roll
lret
push
add
aaa
pop
repnz
jp
test
mov
mov
adc
fmul
popa
cmc
int
ret
push
mov
xor
mov
sbbb
or
mov
in
xchg
sar
dec
iret
mov
cmc
mov
cmpsl
in
mov
or
repnz
pop
outsl
pop
sbb
push
sbb
adc
stos
xor
jp
scas
pushf
xchg
lret
pop
mov
sbb
int
lcall
mov
pop
in
das
pop
sub
cs
jbe
pop
mov
push
shlb
add
cs
jp,pt
lea
dec
iret
or
xchg
mul
stc
jle
cmp
push
in
xrelease
push
sub
mov
test
push
mov
lret
push
add
dec
outsl
push
insb
fwait
push
inc
jl
je
mov
sub
ljmp
cmp
sbb
mov
xlat
and
scas
aam
adc
push
or
lcall
sub
in
mov
scas
dec
jg
cmp
or
cli
popf
pop
add
outsb
jne
cmp
inc
rorb
mov
outsb
sbb
in
fiadds
insb
lea
popl
inc
in
aam
out
sbb
mov
sbb
xchg
pop
arpl
scas
xchg
addr16
mov
shlb
dec
pop
cmpsl
jle
shl
adc
iret
sbb
scas
test
lahf
push
jmp
sub
mov
pop
push
mov
or
pushf
inc
in
adc
int
mov
jge
es
cwtl
mov
mov
into
jg
imul
dec
pop
mov
or
out
mov
jg
out
pop
jb
mov
mov
adc
lds
bound
arpl
inc
dec
add
inc
scas
mov
add
je
orl
aaa
xor
scas
xor
jp
mov
sub
mov
mov
xor
sbb
fwait
sub
call
aam
adc
lods
mov
lods
mov
int3
jns
addl
xchg
outsl
inc
or
aas
fcomps
dec
jo
mov
xchg
stc
or
loope
dec
mov
jb
scas
add
push
sub
sub
aam
sbb
aam
sarl
adc
lcall
sbb
incb
jo
rorb
lods
cli
loop
mov
rclb
lds
loopne
sbb
ss
hlt
push
rcrb
push
scas
sarl
ss
push
sbb
add
mov
lret
xor
jg
pop
jo
or
ss
es
cmp
lods
aaa
fwait
cltd
add
mov
dec
mov
or
push
lcall
test
mov
or
mov
fmull
les
add
inc
es
adc
lods
addr16
cmp
push
add
xchg
and
hlt
repz
ja
cmpsb
call
pop
adc
adc
jp
cmp
dec
dec
lods
cli
mov
add
jge
dec
xchg
jmp
xchg
or
dec
or
adc
pop
leave
enter
dec
cmp
cmp
mov
dec
adc
jg
and
out
xor
js
mov
push
mov
cltd
popf
shlb
repnz
sbb
add
lds
jp
mov
shll
outsl
shl
test
jge
and
ret
ret
rorl
ret
sahf
outsb
aad
pop
push
jo
mov
adc
mov
aam
icebp
mov
push
std
fildl
inc
cmp
pop
lret
mov
pop
adc
imul
mov
add
mov
jecxz
mov
iret
test
push
mov
inc
cmpsb
bswap
sbb
into
push
imul
clc
mov
adc
stc
push
lahf
jno
xchg
and
nop
push
mov
inc
lds
dec
shrb
and
pop
sbb
xlat
mov
xor
aas
orb
cmpsl
fistpl
lret
mov
mov
cmp
mov
jle
dec
adc
mov
mov
in
sub
hlt
xor
stos
ficoml
xor
leave
popf
roll
out
mov
mov
pop
shrl
inc
sub
or
and
mov
je
sahf
xlat
es
fs
or
sar
aad
lahf
sarb
jae
ja
add
mov
mov
fs
pop
hlt
rcl
jnp
mov
mov
push
fcoms
push
jecxz
arpl
mov
mov
aad
dec
sbb
enter
loope
out
mov
pop
and
sbb
ret
dec
mov
cmpsb
and
mov
sbb
and
cmp
push
mov
mov
or
arpl
xor
xchg
push
dec
xchg
lods
dec
xchg
pop
cmpsl
sbb
push
pop
cltd
lahf
push
lods
jmp
push
jg
fcoms
cmp
inc
in
adc
mov
add
mov
cmc
or
loopne
in
jmp
adc
inc
int3
inc
test
xor
fsubrl
popa
pop
cs
lcall
jnp
mov
ret
aaa
xchg
xlat
jl
inc
aam
andb
pop
dec
insb
sub
sbb
fs
cmp
mov
inc
movsl
push
cli
ja
aas
inc
pop
in
push
cld
pop
pop
repnz
fisubrs
pop
loope
call
test
cmpsl
inc
ljmp
dec
imul
mov
imul
std
adc
and
lahf
and
dec
mov
mov
xorl
push
or
test
push
test
daa
outsb
faddl
iret
je
arpl
and
sbb
dec
push
imul
adc
lcall
cmp
dec
or
in
mov
dec
pushl
pop
imul
pop
aas
jmp
jnp
add
dec
pop
xor
outsb
out
xor
push
test
cmp
fimuls
cs
add
push
xchg
call
gs
test
daa
jp
rcr
sbb
inc
xlat
pop
lret
dec
pop
pop
cwtl
pop
and
stos
andl
cmp
pop
dec
inc
mov
out
jp
sub
cmpsb
push
push
shll
mov
pop
jmp
mov
fsubl
fstps
stos
divl
inc
icebp
std
in
cwtl
mov
out
lea
sbb
mov
jl
imul
and
or
pop
out
adc
call
pop
xorb
sahf
mov
adc
fs
jae
sub
inc
inc
jmp
rcl
add
test
push
lahf
stc
mov
xchg
sahf
subl
jb
leave
jno
or
mov
mov
sbb
sub
push
or
or
sti
xchg
sbb
std
mov
xor
out
inc
push
movsb
and
cwtl
jp
inc
imul
jbe
or
push
mov
testb
loop
shrb
dec
sub
jno
aaa
adc
icebp
add
cmp
scas
fidivrs
pop
aad
push
xor
or
pusha
mov
test
sbb
cmp
xlat
sub
cmp
and
fisubrl
lods
dec
leave
test
repnz
lahf
mov
fcmovb
inc
dec
rcr
ss
in
cmp
rcrb
rep
push
mov
shrb
cmpsl
xchg
push
out
mov
or
cwtl
popf
dec
in
gs
mov
dec
push
xchg
out
xlat
and
add
cmp
push
xor
mov
cmpsb
jno
dec
js
or
ret
sar
sarb
aaa
lahf
fcmovb
aam
pop
add
aaa
pop
xchg
dec
cli
or
pop
aam
fisttpll
in
inc
cs
mov
pop
gs
andb
outsl
xchg
xor
test
mov
imul
xlat
pop
daa
fs
xlat
and
stos
jb
pop
bound
lahf
inc
dec
xlat
sbb
pop
movsb
pop
inc
lds
fisttpl
dec
dec
or
add
adc
mov
fisttps
movsb
xlat
bound
roll
sti
jp
scas
mov
gs
fsubrl
lcall
cmp
les
pushf
add
sbb
jbe
mov
dec
sub
rclb
cmp
mov
inc
add
pop
mov
jne
and
out
scas
daa
cmp
jne
and
xlat
popa
mov
fisubrl
insb
and
std
lods
inc
ja
call
sahf
push
mov
sub
sbb
or
stc
ds
push
mov
pop
mov
mov
dec
mov
sub
sbb
or
stc
ds
push
mov
pop
mov
mov
dec
mov
sub
into
std
ds
push
mov
pop
mov
scas
rcrl
cmp
sbb
mov
stc
ds
test
leave
jns
mulb
xchg
mov
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
