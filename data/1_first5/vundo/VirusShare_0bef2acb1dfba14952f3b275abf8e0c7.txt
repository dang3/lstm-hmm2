and
mov
mov
inc
mov
and
add
and
mov
mov
mov
jmp
push
push
call
call
xor
inc
mov
xor
mov
jmp
and
jmp
sub
jmp
xor
jmp
add
add
cmc
std
je
sub
cmc
shr
mov
shl
mov
and
sub
mov
or
dec
and
mov
jmp
push
jmp
leave
ret
leave
dec
pop
int3
ret
xorl
push
jmp
call
jmp
subl
call
test
je
add
ret
ret
add
add
add
or
je
push
push
mov
mov
mov
sub
mov
jmp
ret
loop
pushl
call
add
pusha
mov
call
jmp
xor
mov
add
add
push
mov
jmp
push
jmp
push
dec
int3
ret
jmp
ret
ret
pop
dec
xorl
push
push
jmp
push
subl
call
mov
add
xor
mov
jmp
sub
shr
test
lea
jle
xor
mov
dec
xor
mov
jmp
lea
jmp
push
outsb
jne
push
push
lea
ror
rol
mov
mov
add
push
call
jmp
test
jne
push
jmp
call
push
int3
ret
inc
subl
jmp
negl
jmp
mov
ret
add
add
add
mov
or
mov
or
add
rol
xor
xor
mov
lea
sub
jmp
nop
movzwl
xor
mov
and
cmp
jmp
sbb
call
ret
mov
shr
mov
mov
jmp
push
cmpw
je
sub
cmpw
nop
nop
nop
nop
nop
jne
add
xor
or
add
mov
mov
xor
and
cmp
sete
mov
ret
add
add
add
test
add
add
add
add
add
add
sub
jmp
shl
shr
rol
inc
mov
shr
lea
lea
jmp
mov
jmp
add
int
in
lds
adc
in
sub
test
jne
jmp
push
xor
and
mov
test
mov
movl
mov
jne
xor
ret
jmp
cmp
je
push
ret
mov
jmp
movl
mov
mov
push
inc
mov
add
sub
mov
push
mov
mov
movl
jmp
add
add
add
push
rol
xor
and
and
add
mov
sub
mov
push
push
jmp
push
push
mov
mov
shl
mov
mov
jmp
mov
jle
jmp
and
inc
xor
mov
mov
add
jne
add
nop
nop
nop
nop
nop
ret
mov
xor
test
je
movsbl
jmp
xchg
xor
jne
ror
add
mov
movzbl
jmp
rol
add
xor
mov
jmp
jle
add
jmp
mov
or
shl
mov
mov
rol
xor
mov
add
jmp
jne
add
cmpl
jne
pop
pop
pop
mov
pop
jmp
push
jmp
mov
lea
push
push
call
add
jmp
je
jmp
add
mov
test
je
push
push
mov
or
mov
sub
jmp
cltd
and
add
sar
test
jle
dec
xor
dec
sub
mov
lea
xor
and
mov
add
shl
mov
jmp
add
test
je
rol
inc
and
mov
sub
test
mov
jmp
sub
test
jmp
add
repz
xor
and
inc
mov
test
je
mov
jmp
push
jmp
xorl
call
ror
and
mov
push
push
mov
mov
mov
add
nop
nop
nop
nop
nop
add
mov
and
sub
dec
mov
add
add
xor
cmp
mov
jmp
jne
jmp
add
std
mov
sub
push
push
jmp
push
push
jmp
call
int3
ret
call
call
leave
call
dec
subl
jmp
mov
mov
mov
rol
mov
sub
test
jne
movzbl
add
jmp
sub
mov
rol
mov
cmp
je
add
rol
or
mov
xor
mov
test
jne
sub
sub
mov
mov
jmp
lea
mov
mov
or
add
mov
shr
and
jmp
sub
mov
jmp
add
insb
and
mov
nop
nop
nop
nop
nop
sub
mov
push
jmp
add
xor
sub
mov
cmp
jne
xor
decl
ret
add
add
add
out
rol
shr
mov
jmp
call
lea
call
mov
and
or
and
xor
mov
shl
and
mov
mov
nop
nop
nop
nop
nop
test
jne
add
ret
shr
add
mov
shl
shr
or
mov
test
jne
add
jmp
test
mov
mov
mov
movl
jmp
shl
mov
lea
add
add
add
mov
sub
mov
add
test
je
jns
movzwl
jmp
sub
jmp
add
jmp
ret
addl
jmp
test
je
jmp
add
push
jmp
int3
addl
call
test
jne
jmp
add
jmp
push
int3
push
dec
call
addl
push
jmp
nop
inc
subl
push
jmp
dec
jmp
pop
call
push
call
push
xorl
call
jmp
test
jmp
add
add
add
add
call
cmpl
jne
cmpb
jne
nop
jmp
addr16
roll
add
add
add
fs
jmp
mov
jmp
add
add
add
add
flds
test
add
add
xor
call
inc
xor
shl
mov
nop
push
nop
jmp
jmp
add
ret
add
shl
inc
mov
push
jmp
nop
call
call
dec
push
inc
leave
inc
inc
subl
call
mov
jmp
add
mov
lea
add
add
and
shl
mov
shr
and
lea
mov
mov
add
jmp
test
jne
cmp
je
add
cmp
jl
pop
jmp
mov
or
and
or
mov
xor
or
mov
and
xor
inc
shr
add
mov
rep
movzwl
rol
mov
dec
ror
shr
mov
add
jmp
ret
pop
mov
pop
ret
mov
ret
add
add
add
loope
mov
add
test
jne
jmp
test
jle
xor
xor
or
shr
sub
mov
lea
sub
sub
sub
jmp
xor
add
inc
sub
mov
add
or
sub
mov
sub
mov
lea
push
push
jmp
push
call
push
push
xorl
push
push
call
nop
nop
nop
nop
nop
push
jmp
pop
call
xorl
mov
call
push
jmp
inc
int3
xorl
mov
jmp
jne
movzbl
add
mov
mov
jmp
dec
stc
mov
rcrb
mov
pop
ret
dec
shl
mov
movzwl
sub
or
mov
mov
jmp
mov
add
sub
into
mov
mov
jmp
in
mov
add
cmpl
jne
pop
pop
pop
mov
pop
ret
add
add
add
test
decl
sub
jne
test
jmp
dec
mov
sbb
rolb
mov
and
mov
shr
and
add
test
mov
je
jmp
pop
add
pop
shl
xor
inc
add
mov
pop
ret
add
add
add
mov
stc
call
out
movb
call
adc
scas
add
add
jle
or
and
mov
xor
xor
mov
dec
add
mov
and
xor
mov
add
add
sub
jmp
call
push
jmp
push
pop
subl
mov
call
jmp
and
or
mov
add
ror
mov
movzbl
add
mov
lea
dec
mov
shr
and
jmp
xchg
cmp
shlb
mov
mov
sub
test
jne
movzbl
jmp
out
test
or
push
mov
push
add
sub
mov
call
add
jmp
mov
inc
incl
mov
add
jmp
push
jmp
jmp
inc
ret
nop
addl
mov
call
jmp
add
test
jne
mov
mov
pop
ret
add
add
add
and
lea
jmp
mov
xor
and
xor
mov
call
push
jmp
jmp
call
dec
subl
push
jmp
push
push
leave
dec
pop
ret
xorl
push
call
and
sub
mov
mov
call
jmp
or
mov
push
xor
and
mov
ror
mov
pop
nop
nop
nop
nop
nop
shr
shr
mov
xor
add
sub
jmp
mov
or
les
push
jmp
subl
push
jmp
push
int3
push
ret
int3
int3
nop
xorl
push
jmp
addl
mov
call
jmp
inc
sub
and
mov
shr
and
add
test
jmp
and
mov
call
jmp
or
and
test
lcall
pop
and
add
shl
shl
add
mov
pop
ret
add
add
add
inc
cld
add
add
lea
call
mov
sub
or
add
and
mov
mov
and
mov
nop
nop
nop
nop
nop
mov
mov
mov
cmp
jne
mov
add
pop
jmp
pop
rorl
push
jmp
push
nop
addl
nop
nop
nop
nop
nop
push
jmp
int3
inc
addl
push
jmp
push
push
nop
call
call
call
addl
call
test
je
add
jmp
sbb
or
add
add
ret
sub
test
jmp
cmc
das
push
mov
mov
pop
mov
pop
and
mov
mov
pop
ret
add
add
add
pop
pop
mov
pop
sub
mov
pop
ret
add
add
add
test
add
add
mov
add
nop
nop
nop
nop
nop
lea
inc
mov
nop
nop
nop
nop
nop
shr
and
add
subl
nop
nop
nop
nop
nop
lea
jne
test
mov
nop
nop
nop
nop
nop
je
shr
sub
or
or
xor
mov
sub
mov
mov
add
jmp
movb
add
nop
nop
nop
nop
nop
jmp
movzbl
mov
inc
shr
rol
mov
and
add
add
nop
nop
nop
nop
nop
shr
mov
mov
je
test
je
sub
mov
jmp
add
sub
mov
mov
jne
nop
nop
nop
nop
nop
sub
dec
mov
add
shl
mov
mov
mov
movl
nop
nop
nop
nop
nop
jmp
movl
mov
movl
nop
nop
nop
nop
nop
jmp
lea
call
cmpl
jne
cmp
nop
nop
nop
nop
nop
jne
call
test
mov
je
or
dec
mov
sub
add
jmp
mov
jne
nop
nop
nop
nop
nop
mov
jmp
sub
jmp
sub
and
shl
mov
rol
mov
nop
nop
nop
nop
nop
movzbl
shl
add
add
lea
and
mov
mov
call
nop
nop
nop
nop
nop
cmp
jb
add
cmp
jb
add
cmp
nop
nop
nop
nop
nop
jae
add
test
mov
je
lea
shr
mov
sub
nop
nop
nop
nop
nop
mov
mov
add
sub
nop
nop
nop
nop
nop
jne
mov
nop
nop
nop
nop
nop
mov
dec
mov
xor
sub
mov
xor
add
mov
nop
nop
nop
nop
nop
movl
jmp
mov
mov
add
add
nop
nop
nop
nop
nop
mov
movl
mov
cmpl
je
nop
nop
nop
nop
nop
pop
dec
mov
sub
pop
pop
shl
mov
pop
ret
add
push
add
add
add
fcoms
add
push
add
add
add
mov
add
ret
add
add
add
add
add
add
add
add
push
add
out
add
add
add
mov
add
ret
add
add
add
add
add
add
add
inc
insb
outsl
jae
inc
jb
jbe
jb
cwtl
add
imul
add
add
inc
jb
popa
je
inc
imul
js
je
jb
arpl
jae
add
daa
add
gs
je
inc
imul
add
add
imul
js
add
adc
add
add
add
add
and
add
add
add
mov
add
push
add
nop
sub
add
in
xor
aaa
std
xor
nop
imul
out
aas
adc
sbb
mov
pop
xor
xor
cmp
ss
test
lds
sbb
insb
cmp
cmp
cmp
pop
aas
sub
push
cmp
xchg
xor
xor
dec
xor
xor
xor
cmp
add
add
add
xor
xchg
xor
add
add
add
add
and
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pushl
cmpsl
mov
jo
leave
add
repz
imul
or
scas
mov
loop
cmp
scas
mov
out
out
gs
aas
mov
xchg
cmpl
cmc
ljmp
add
inc
push
adc
je
cmp
inc
push
jle
push
mov
jne
rcll
fidivs
pop
je
and
shll
leave
sti
and
shll
push
jno
test
pop
out
adc
test
or
jecxz
int3
aaa
xor
xchg
adc
sbb
pop
jae
push
add
mov
or
adc
lret
test
loop
lds
jns
int3
shll
shrl
inc
pop
mov
clc
adc
js
sub
aaa
mov
pop
dec
cli
lahf
and
cmp
test
out
mov
test
adc
mov
in
data16
.byte
