add
jg
xor
push
push
push
push
pushl
call
push
call
test
je
orl
jmp
andl
push
push
push
mov
call
xor
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
and
ret
int3
int3
int3
int3
int3
mov
push
mov
cmpl
je
orl
jmp
andl
pop
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
push
push
mov
call
movl
movzwl
movl
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
testb
push
push
push
push
push
mov
push
je
push
jmp
push
pushl
call
push
call
mov
push
push
mov
push
push
pushl
call
push
push
push
push
pushl
call
andl
push
pop
mov
cmp
jb
mov
dec
jns
pushl
mov
push
push
push
pushl
call
push
pop
mov
cmp
ja
mov
dec
jns
pushl
push
push
push
imul
jb
je
arpl
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
push
pushl
call
mov
call
mov
push
push
push
pushl
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
pushl
pushl
push
push
call
add
pushl
call
cmpl
jb
mov
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
push
push
push
pushl
call
push
pop
pop
ret
push
mov
sub
push
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
push
pushl
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
mov
push
push
push
call
mov
call
push
push
push
mov
call
lea
push
push
push
call
add
mov
mov
push
push
push
call
push
push
push
push
push
pushl
call
pushl
call
push
push
pushl
pushl
pushl
call
push
push
push
push
push
call
pop
pop
jmp
lea
push
pushl
call
mov
lea
push
call
pop
push
lea
push
push
push
push
call
lea
push
pushl
call
jmp
push
call
xor
pop
leave
ret
push
mov
sub
mov
andl
andl
mov
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
andl
push
mov
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
sub
cmpl
mov
push
je
cmp
je
lea
push
push
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
test
jne
mov
not
mov
or
mov
lea
push
call
mov
pop
leave
ret
pop
xchg
inc
add
add
pop
and
and
outsl
and
les
sbb
add
add
pop
add
add
mov
add
add
add
or
add
fs
xor
add
add
add
sbb
sbb
repnz
dec
sbb
pop
xor
add
and
jb
push
dec
xor
jb
fs
add
push
outsb
or
cld
stc
xor
sar
clc
dec
inc
in
jmp
fdivr
or
decl
cmp
add
inc
adc
leave
dec
std
inc
cld
decl
pop
in
mov
lret
inc
pop
ret
in
add
adc
sbb
add
adc
addr16
push
inc
cld
stos
aam
rolb
adc
loopne
mov
call
test
add
pop
add
jmp
std
pop
std
je
push
xor
rcrl
adc
or
call
loopne
lock
push
adc
loopne
add
dec
jne
sarb
jo
repz
push
call
add
push
add
push
cmp
add
adc
sbb
add
sbb
nop
add
cmp
cmp
out
add
sbb
jae
outsl
gs
jl
movsl
insl
insl
add
inc
je
add
movsl
outsb
push
test
outsl
gs
imul
jae
insb
je
push
push
insb
imul
inc
push
jne
gs
jae
mov
jae
loopne
insb
add
add
add
pop
jb
add
add
add
les
push
sbb
cmp
bound
push
ss
jge
repnz
inc
push
pop
movb
test
ja
mov
mov
lods
stc
pop
jge
jecxz
ljmp
and
hlt
xor
push
push
jl
dec
cld
lcall
int
mov
cmc
mov
or
jb
aad
jge
push
aad
loope
push
scas
mov
in
iret
xchg
in
xor
cltd
movsl
and
and
imul
imul
mov
sarl
sbb
enter
inc
jle
jecxz
outsl
pushf
fwait
cmp
cmpsb
hlt
fsubs
clc
and
push
xchg
xchg
arpl
in
xchg
xor
sarl
data16
cmp
add
add
xchg
ss
jnp
cli
inc
push
and
rorb
adc
mov
inc
xor
pop
add
ret
out
rorl
push
je
fwait
in
bound
push
mov
popf
aaa
pop
sub
in
pop
mov
dec
cmp
push
sbb
or
dec
pop
pop
jbe
or
mov
sub
adc
fdivl
scas
dec
fucom
movsb
or
insb
and
incl
icebp
jl
mov
pusha
pusha
mov
mov
push
movsl
push
jge
inc
push
loopne
mov
scas
mov
jnp
sbb
xchg
jl
or
xchg
sbb
mov
rclb
aad
fiaddl
stos
or
sti
add
lcall
push
mov
mov
inc
cltd
and
sbb
xchg
xchg
and
push
inc
pop
lods
aam
dec
and
adc
push
jb
pop
mov
sbb
leave
stc
jns
pop
sbb
enter
add
mov
cwtl
clc
dec
lret
add
cmp
sbb
frstor
or
outsl
pop
xchg
leave
sahf
fildll
test
jne
icebp
cs
or
sarb
adc
fsubs
aam
jno
push
dec
jne
inc
jmp
mov
jo
call
add
pushf
fs
int
mov
ds
jg
sti
sbb
in
and
popa
fnsave
fcomps
pop
insl
push
js
je
pop
push
ror
imul
and
lods
ja
and
mov
sbb
pop
addr16
xor
xor
js
sbb
mov
enter
enter
add
and
xor
pop
movb
inc
mov
mov
mov
sbb
les
add
add
or
out
inc
mov
mov
jp
mov
adc
jnp
ljmp
or
pop
imul
jmp
mov
cmp
cwtl
arpl
push
sub
pusha
adc
pop
sub
js
insl
popf
mov
mov
insl
mov
ja
inc
lods
rep
xchg
iret
movsb
inc
test
leave
mov
or
imul
sbb
add
cmp
repnz
mov
data16
das
push
das
xor
xchg
loope
mov
xor
nop
mov
in
inc
aas
jb
sbb
mov
out
inc
ja
xor
out
pusha
addr16
xchg
sbbb
sahf
pop
push
xlat
or
daa
mov
pop
jbe
ss
jmp
rorb
inc
mov
dec
movsb
in
add
inc
stos
xor
es
pop
popa
stc
sub
pop
into
or
inc
pop
mov
fidivs
xor
xor
inc
xor
sub
dec
pop
mov
mov
iret
ret
cwtl
sbb
jo
xor
mov
addr16
xchg
mov
lds
iret
insb
in
imul
ret
mov
xor
fwait
sbb
cmp
xchg
cmpsb
scas
lahf
jb
movsl
into
lds
and
rcrb
jl
subps
ss
cmp
push
jg
cmp
lds
sub
fs
jae
das
das
lea
jno
repz
dec
lds
mov
data16
xchg
dec
mov
sub
and
inc
lods
loopne
divb
movsb
inc
xchg
mov
add
cmp
or
dec
jno
pop
adcl
pop
jl
jb
pop
mov
loope
mov
jmp
xchg
cmp
pop
pop
enter
leave
push
lahf
jns
lret
cmp
inc
jnp
xchg
sbb
or
sub
sub
mov
popf
sbbl
or
dec
xchg
xchg
lds
out
stos
popf
add
push
clc
mov
pushf
daa
ret
rorb
lods
mov
sbb
push
gs
sub
jecxz
pop
imul
xchg
jmp
push
mov
mov
mov
xchg
ljmp
xchg
stc
xor
and
push
push
icebp
gs
bound
sti
sub
xchg
les
sub
mov
lods
xor
adc
popa
lret
adc
nop
aad
jno
add
jno
adc
mov
mov
mov
pop
lret
lahf
xchg
sbb
rorl
inc
je
pop
cmp
shrl
dec
fbstp
mov
out
adc
add
addr16
push
push
lds
jne
outsl
mov
into
add
sub
pop
divb
add
push
aad
gs
mov
add
xor
lcall
lret
xchg
out
sbb
cli
insb
fiaddl
and
push
pop
fcomi
xor
lret
mov
das
xchg
scas
fimull
cmp
add
repnz
mov
mov
pop
daa
jge
in
add
push
cmpsb
fistpl
adc
icebp
dec
add
std
add
add
mov
jnp
mov
pop
pop
mov
add
loop
outsl
enter
sbb
cltd
stos
add
adc
jmp
sub
mov
addb
cmp
test
adc
call
test
or
idiv
or
inc
xor
pusha
mov
std
aas
outsl
add
cmp
push
movsl
sbb
rolb
sahf
jnp
jae
outsl
std
cwtl
ret
push
test
mov
loopne
ss
sahf
or
in
scas
rorb
shl
mov
cli
nop
mov
mov
sub
gs
pop
inc
insl
mov
jae
xor
jae
ss
and
push
or
push
outsl
int3
or
mov
in
idivb
daa
mov
push
and
add
movsl
and
inc
shlb
jae
jae
add
cld
cld
sahf
push
push
cltd
mov
xchg
mov
repz
pop
test
scas
cmpb
and
mov
or
cs
adc
loope
jmp
sub
sub
pop
cmpsb
insb
imul
dec
mov
mov
lock
in
jge
dec
dec
pop
icebp
insl
loop
inc
inc
pop
or
mov
mov
xor
mov
cmp
sbb
aam
jp
test
push
pop
in
adc
jnp
psubsb
adc
cmp
out
push
fstpl
ret
jmp
cmpsb
cltd
sub
out
test
dec
sub
mov
leave
dec
rorb
out
int3
lods
enter
jo
mov
sub
mov
mov
lods
daa
xor
xor
scas
mov
cmp
mov
mov
jge
sarl
loope
xchg
xchg
lods
sbb
push
fadd
test
jnp
jmp
jnp
add
sbb
std
dec
jno
std
roll
das
imul
mov
sub
mov
adc
inc
popf
dec
jg
mov
stos
nop
aaa
jl
push
out
sbb
loopne
inc
leave
adc
xchg
fimuls
pop
jmp
daa
stos
cmp
lcall
mov
scas
iret
dec
push
lret
test
mov
out
mov
gs
mov
and
imull
test
sti
js
insb
roll
das
mov
movsl
ds
push
stc
int
ret
dec
insb
inc
movsb
add
je
xchg
inc
push
mov
daa
add
mov
xor
inc
nop
ret
into
sub
xchg
mov
push
cmp
inc
pop
push
test
je
adc
dec
repnz
mov
sti
mov
repz
xchg
iret
jno
and
adc
mov
adc
jl
leave
loop
ret
mov
icebp
rorb
in
loopne
inc
pusha
icebp
inc
out
and
add
mov
xchg
fimuls
neg
xchg
mov
std
clc
xor
inc
lods
data16
ljmp
sub
pop
je
pop
scas
addl
ss
pop
add
jae
fdivrs
fwait
dec
xor
xchg
in
sbb
xor
xlat
stc
andl
xlat
sti
mov
fidivrl
into
enter
adc
cmp
dec
inc
cmp
push
pop
loope
cld
test
repz
fidivrl
sbb
pop
fisubs
add
mov
jae
clc
add
adc
mov
mov
add
stc
or
and
mov
fisubl
dec
rcrb
int
mov
mov
xchg
adc
outsl
das
and
loope
aam
inc
xchg
insl
mov
or
mov
jno
aaa
mov
out
and
or
xchg
sarl
sub
outsb
in
jo
out
into
or
imul
fsubs
xchg
shrb
sbb
repnz
gs
fcoms
mov
jge
push
loope
dec
repnz
je
add
add
movsl
dec
jb
add
daa
imul
test
sub
jns
rcrl
jbe
das
pop
xchg
ret
std
sbb
xchg
dec
adc
in
xor
gs
int3
inc
pop
pop
inc
idiv
sub
jle
rclb
fistpl
pop
jno
jle
pusha
cmpsb
inc
mov
sbb
cmpsb
add
xor
mov
or
lea
adc
call
int3
stos
lods
and
lods
cmp
cmp
mov
xor
cmp
fwait
aad
push
aas
ljmp
mov
pop
and
fucomi
cltd
xlat
dec
scas
mov
ss
inc
mov
xor
add
pop
sub
push
imul
loope
add
push
pusha
es
jl
insl
out
int3
push
add
push
pop
push
insl
lret
inc
and
push
xor
pop
leave
fcmove
jmp
pop
dec
outsl
test
test
orl
lods
mov
pop
dec
xchg
leave
fistpl
sub
shl
int
loope
dec
jb
pop
add
xchg
jb
sbb
pop
dec
sbb
fxch
mov
stc
mov
negb
cmp
call
arpl
icebp
mov
movb
push
add
ljmp
and
popa
dec
xor
sbb
xchg
inc
xchg
ja
cmpsb
or
jle
nop
test
mov
inc
pop
arpl
cwtl
ss
and
cmpb
outsl
sbb
jge
adc
insb
jmp
fs
and
insl
fnstsw
fwait
sbb
ror
ficomps
jns
mov
pop
fistpl
lahf
lods
ficompl
jb
rcll
in
test
xchg
loop
ret
pop
pop
fimull
sbb
adc
inc
jnp
loope,pn
cmp
fs
and
or
lret
movsb
test
push
cmp
dec
aaa
mov
cmp
loope
lods
xor
xchg
dec
jbe
int
scas
push
inc
les
jg
cmp
add
rcrl
lods
outsl
pop
es
fisubrl
out
stos
sub
cmp
xor
adcb
or
cmp
inc
pop
arpl
ja
andl
daa
es
mov
ret
and
adc
or
mov
mov
and
xchg
xchg
fld
scas
push
scas
cmpsl
fst
stc
loopne
sahf
popa
mov
sub
dec
or
push
cmc
std
push
push
and
cmc
mov
push
dec
or
dec
cmc
xor
add
loopne
add
sbb
imul
cmovg
inc
ja
outsl
pushf
push
and
or
ds
out
or
push
icebp
hlt
xchg
cwtl
out
test
in
es
push
andb
movsl
xor
daa
pop
xor
and
jns
cmp
push
mov
fs
insb
push
dec
mov
jle
push
call
push
mov
jmp
int3
iret
mov
inc
lock
pop
sub
inc
mov
repz
stc
iret
xor
les
fdivrl
ror
imul
in
cwtl
jae
rcl
or
scas
in
repz
mov
lods
xchg
popf
in
test
mov
or
cmpsb
out
leave
push
mov
dec
fs
cltd
movsl
test
repz
out
outsl
repz
sub
test
jge
aad
rcrb
jb
sub
xchg
clc
mov
and
imul
or
repnz
out
sbb
out
mov
sbb
push
dec
jmp
inc
ror
fsubl
fwait
xlat
inc
jmp
movsl
mov
in
mov
nop
aad
in
and
fs
adc
lds
pushf
jno
gs
xchg
or
out
jge
push
pusha
rol
mov
in
push
push
lods
xor
jmp
les
jp
xor
pop
cmpsl
pop
into
jle
push
arpl
or
int3
mov
lcall
pop
fcomps
pop
mov
pusha
mov
adc
repnz
daa
nop
out
xor
pop
jo
mov
mov
push
xchg
or
and
dec
repnz
leave
sub
sti
sbb
pop
leave
push
ret
in
xchg
jne
insl
scas
sub
mov
aam
jbe
out
lcall
and
push
out
enter
or
pushf
cltd
xchg
jo
lcall
and
add
imul
mov
and
mov
cmp
ljmp
mov
ror
sarb
ficompl
lret
stc
repz
dec
mov
jnp
adc
pop
in
cmp
pop
and
mov
inc
subl
sub
mov
jb
or
sbb
xchg
cmp
shlb
leave
jecxz
xchg
jo
sbb
xor
and
or
pop
inc
jb
nop
insl
arpl
andb
pop
and
xchg
les
mov
xadd
sbb
xor
test
mov
sbb
fsubs
repnz
jno
mov
inc
popf
in
inc
sub
outsb
ret
ret
mov
push
dec
es
aam
push
lcall
aad
jbe
lea
daa
sub
adc
jge
popa
aaa
sub
mov
cld
loope
out
jns
adc
js
inc
cmc
sti
add
scas
aaa
mov
and
fwait
mov
push
adc
xchg
xor
insb
or
movsb
jne
mov
sbb
add
ljmp
cmp
jecxz
lret
push
xchg
lods
lret
test
sub
jmp
sbb
xorb
mov
sbb
push
sbb
sbb
cmp
dec
movsb
mov
adc
jbe
and
or
fsubr
sahf
adc
pop
aad
orl
loop
inc
int3
cli
ficoml
mov
mov
movsb
add
cli
push
aas
mov
nop
adcl
shrb
sub
aas
cld
cltd
hlt
repz
fisttps
and
adc
cmp
jp
sarb
loopne
push
or
mov
pop
into
mov
adc
dec
popa
mov
inc
aam
lock
and
cmp
push
xlat
jne
pushf
mov
mov
loop
adc
mov
pop
jae
outsl
mov
xchg
xor
mov
and
push
xor
and
dec
loop
or
jg
push
lea
xlat
add
lcall
sarb
lret
pop
or
aad
sub
sahf
test
fistps
or
push
adc
sub
arpl
jle
hlt
mov
dec
call
andl
ret
pop
add
stc
sub
emms
ja
int
hlt
aad
pop
cmp
add
push
test
add
add
insl
mov
xchg
dec
jae
inc
shlb
sub
loop
sub
jbe
push
fmull
mov
inc
pop
pop
mov
addr16
mov
xor
mov
mov
jbe
negb
push
and
jmp
ss
out
fwait
popa
loop
outsb
mov
arpl
lret
jecxz
out
jno
mov
iret
call
nop
lcall
mov
add
in
sub
scas
add
add
xchg
in
lcall
and
mov
mov
push
lahf
jo
jge
and
fstcw
jg
mov
jecxz
or
push
decb
cld
push
sbb
cwtl
add
sbb
orl
mov
jp
sbb
mov
pop
adc
out
stc
push
stos
sub
adc
sbb
dec
mov
xchg
pusha
mov
out
add
cli
test
and
clc
mov
jo
mov
rol
dec
idivl
jp
or
mov
popf
out
push
in
testb
negb
addr16
push
clc
jle
mov
sub
mov
loop
mov
stos
cmc
lahf
addr16
dec
loop
arpl
pop
dec
pop
sub
fidivrs
xchg
out
cmp
cmpsl
sti
rcrb
aas
xor
and
out
rorb
jge
rorb
or
repz
dec
je
fldcw
lock
push
scas
xchg
mov
cmp
mov
fs
testb
add
mov
inc
mov
daa
jo
xchg
mov
push
outsb
adc
out
inc
into
gs
adc
adc
dec
mov
or
push
sub
stos
dec
cli
xorl
pop
push
jl
imul
cmp
inc
push
push
aam
push
sti
sbb
hlt
fcmovb
mov
pusha
xor
xchg
and
mov
add
jns
jae
scas
and
push
jg
test
mov
jp
adc
cmp
cwtl
pop
out
add
or
jmp
stc
cli
dec
movsl
fabs
cld
mov
rcr
addr16
pop
cwtl
in
cmp
subl
or
idivl
pushf
mov
int
adc
loopne
ret
fsubr
mov
ret
sbb
in
outsl
fdivr
subl
push
jecxz
or
outsb
adc
jle
jo
pop
test
loope
insl
push
inc
pop
sbb
mov
icebp
add
lret
inc
into
js
loopne
push
adc
repz
xor
pop
push
lds
pop
inc
push
add
jle
jb
inc
sarl
in
xorl
or
pop
leave
sub
and
test
or
sarl
leave
rclb
imul
lahf
dec
cmp
sarb
sbb
fdivs
leave
sub
sbb
sahf
xchg
jnp
je
repnz
in
fucom
in
and
sbb
insl
mov
iret
lcall
lea
jnp
cmpsb
xor
mov
jmp
pop
jp
pusha
cmc
sbb
push
les
arpl
sub
fs
scas
les
ja
mov
cltd
xchg
out
faddl
add
and
data16
xor
popa
adc
xchg
dec
mov
fldt
fstpl
mov
sub
mov
jl
push
lds
or
test
jle
ss
repnz
sub
movb
xchg
push
call
jmp
or
lock
cmp
cmp
faddp
and
leave
in
mov
lret
xchg
xor
or
or
imul
or
sahf
cmc
mov
or
stos
int
pop
or
aam
xchg
pop
mov
popa
add
add
or
lret
push
out
sub
rorb
add
dec
cmpb
mov
es
scas
dec
jge
lods
shrb
ljmp
mov
lds
insb
lock
inc
push
jg
test
sbb
movsb
mov
xchg
lcall
stc
int3
aam
fs
cmp
ss
and
mov
xchg
push
cmp
shll
out
shl
mov
call
repz
and
sbb
sbb
and
sbb
dec
bound
cmp
movsl
insl
sbb
shll
xchg
xlat
stc
out
pop
into
mov
in
add
jp
dec
cmc
popl
push
outsl
xchg
mov
andb
ds
out
fimuls
shrl
jns
popf
add
add
insb
lods
cmp
int3
mov
xor
lock
ret
xor
sbb
adc
and
out
ljmp
subl
sub
add
iret
sbb
fistps
or
add
inc
mov
lock
sbb
test
cwtl
sub
dec
das
fwait
xchg
hlt
imul
mov
scas
mov
cwtl
hlt
bound
add
sbb
mov
jns
lret
push
adc
cli
and
add
inc
gs
adc
shl
movsb
vorps
ljmp
inc
xor
add
add
add
add
repnz
add
add
add
mov
add
add
push
add
add
add
add
add
add
add
cmp
add
add
or
in
in
in
in
inc
add
js
addb
stos
stos
add
ja
js
sub
js
js
add
add
add
add
imul
adc
adc
add
adc
std
add
add
add
add
add
add
adc
add
sub
add
add
jb
add
add
add
xor
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
sahf
int3
jns
jne
dec
imul
add
push
and
sti
jecxz
out
sbb
push
sahf
sar
mov
mov
add
push
add
jne
jne
pop
push
std
pusha
jmp
test
pop
add
mov
mov
pop
add
push
add
mov
add
lret
jmp
in
push
add
sub
loopne
add
add
call
test
decl
adc
test
ret
adc
jne
or
push
push
jne
mov
test
test
incl
je
clc
test
clc
add
push
ljmp
push
decl
loopne
add
push
pop
pop
add
add
add
add
add
add
sbb
add
sbb
sbb
sbb
sbb
sbb
xlat
std
add
jb
gs
gs
add
inc
insb
gs
outsl
mov
outsl
add
gs
dec
add
je
pop
inc
pop
imul
dec
add
push
je
fcom
gs
jae
push
addr16
je
add
add
sbb
popf
int
add
add
std
in
add
add
add
add
lahf
movsb
fs
mov
push
ja
sbb
jno
dec
fwait
movl
inc
dec
sbb
push
pop
add
loope
jmp
lahf
stc
mov
adc
adcl
xor
cmpsb
mov
sbb
jbe
cmp
jle
rclb
clc
cmpsl
mov
ja
sbb
adc
ret
pop
mov
jmp
lods
adc
push
out
insl
ds
lea
les
mov
dec
mov
push
sahf
repnz
pop
or
jns
push
std
enter
pushf
push
ret
mov
repnz
sub
adc
jge
mov
fcom
xor
sbb
outsb
dec
pop
inc
aad
shll
test
fildll
lret
xor
xor
fs
mov
sahf
into
fsubrl
jmp
sbbb
lcall
or
or
mov
imul
add
adc
cld
out
dec
mov
jle
scas
xchg
mov
cmp
push
pop
or
lret
or
jl
dec
pop
pop
jns
mov
pop
adc
or
mov
add
and
addb
or
add
fstl
jns
divl
mov
imul
dec
adc
xor
sub
inc
cltd
repnz
inc
call
sub
and
jg
movsl
mov
sub
xor
adc
xchg
es
in
fcoms
mov
inc
sahf
movsl
push
loope
mov
mov
inc
repz
xor
hlt
cmpsl
cld
test
xchg
jecxz
jb
dec
outsb
lcall
or
shrb
mov
int
aad
pop
mov
imul
mov
mov
insl
popa
scas
push
and
or
sbb
dec
adc
pop
mov
stc
mov
mov
lea
cmp
scas
aaa
pop
cmp
addps
movsb
les
pop
push
les
xor
inc
lret
in
leave
xor
hlt
je
jp
push
adc
push
imul
dec
dec
in
int3
xor
cltd
xchg
cwtl
mov
jns
loope
push
lcall
push
pop
stos
dec
push
daa
ret
jmp
inc
movsb
jg
and
int
push
fadds
insb
mov
out
loop
pop
out
stos
mov
fcmovbe
sbb
cltd
inc
lret
and
call
fsubrl
jne
push
jnp
dec
sbb
imul
je
insb
jo
pop
adcl
jg
mov
add
fnstcw
or
test
xchg
jmp
inc
dec
push
in
adc
rorl
mov
int
mov
mov
push
and
ret
lret
aas
or
daa
cmpl
daa
cmp
in
add
outsb
jmp
inc
sub
filds
arpl
andl
dec
jnp
mov
ret
popa
addr16
aam
or
pop
icebp
rcrb
shlb
sahf
mov
adcl
arpl
inc
push
xor
add
pusha
pop
dec
xchg
mov
int
xor
mov
popa
js
pop
sbb
rcll
clc
pop
push
adc
lahf
xor
lret
jle
inc
xchg
fbstp
mov
sub
jb
mov
push
into
and
out
sub
jmp
dec
fisttps
mov
notl
mulb
mov
test
imul
mov
sbb
xor
frstor
out
cmpsl
mov
lds
mov
out
test
sub
fnstsw
int3
popf
scas
repz
xorb
aaa
add
sbb
cwtl
sbb
mov
pop
mov
or
outsl
and
add
pop
pop
insl
cltd
pop
mov
test
pop
outsb
sbb
sub
test
adc
mov
mov
pop
cs
andb
cmc
jbe
jge
jno
pop
incb
jg
fwait
pop
test
adc
mov
or
inc
testl
and
xchg
jb
fs
mov
scas
pop
mov
sbb
mov
popf
int
test
pop
outsb
add
adc
ret
out
adc
enter
cltd
adc
jnp
rorb
and
add
es
subb
test
add
das
cmp
mov
jge
mov
call
mov
mov
xchg
sub
test
sbb
xchg
loopne
jl
pop
or
stos
mov
ja
dec
add
repz
push
jo
mov
pop
push
adc
scas
xor
test
test
add
add
pop
jecxz
inc
or
mov
dec
mov
mov
je
cmpsb
pop
cmpsb
cltd
popa
cmp
xchg
add
ljmp
push
cld
int3
leave
sub
rol
jle
icebp
aas
pop
mov
xchg
and
xorb
dec
mov
jns
adc
inc
das
iret
xlat
push
jns
jb
sub
push
mov
test
ljmp
fdivp
xchg
inc
mov
cmp
test
lahf
xchg
pop
fidivrs
push
pop
rolb
sub
cmpsl
sbb
stos
jae
mov
mov
lcall
xlat
into
shrb
dec
ja
inc
xchg
ret
push
inc
aam
test
data16
push
push
cmp
popf
xor
mov
in
sbb
push
xchg
inc
loope
rcrl
loop
dec
add
pop
jp
popf
and
lret
ja
enter
or
push
cld
cmpsb
fimull
fwait
lock
fdivs
cmp
incl
cld
out
rcrl
in
int3
pushf
push
adc
int3
mov
jge
jbe
cmovo
push
jecxz
je
pusha
xlat
out
andb
bound
xor
es
jmp
mov
cmp
sub
adc
sti
repnz
pop
int
les
js
pushf
and
and
jp
jg
or
das
leave
fisubl
and
iret
testl
in
add
outsb
mov
sub
sbb
sbb
fistps
fsubrs
sub
outsb
add
stos
into
fdivrs
jmp
and
aam
mov
shlb
flds
sub
fisttpll
mov
jnp
or
ljmp
out
jbe
stc
mov
test
test
ret
or
cmp
outsb
test
cmp
aaa
mov
and
dec
fucomi
js
and
mov
orb
aaa
ficompl
dec
add
cmpsl
xchg
jle
or
out
mov
xchg
cmpsb
push
sub
jp
ja
lock
aas
and
sub
iret
test
jb
ljmp
ret
ja
lret
out
mov
xor
xor
jne
bnd
insb
and
jp
loope
mov
xchg
aam
out
jmp
ja
add
mov
pop
dec
mov
add
aam
mov
cld
sub
scas
xchg
jo
xor
loop
inc
mov
mov
add
push
mov
sahf
inc
sub
and
push
loopne
pushf
mov
lods
cwtl
pop
jmp
popa
mov
mov
movsb
jae
mov
lock
or
incl
dec
mov
xchg
insb
cmp
icebp
mov
sbb
enter
add
enter
dec
fadds
cld
push
or
or
cli
test
sub
mov
cwtl
shll
sbb
cmpsl
stc
sti
mov
movsl
xchg
jbe
test
push
ret
div
insl
lcall
stos
pusha
push
mov
push
jmp
in
xlat
popf
adc
test
dec
ss
pushl
cmp
push
std
popf
cmpb
inc
inc
in
repz
inc
fiadds
inc
jl
lret
loopne
jne
imul
sbb
cltd
lea
add
fisttpll
xchg
into
adc
sahf
sti
repz
xlat
dec
in
aas
push
lock
repz
test
mov
shll
xchg
cmp
rol
inc
pusha
outsb
push
scas
mov
data16
cmp
mov
mov
dec
cli
popfw
mov
pop
icebp
mov
push
xor
scas
inc
inc
jns
adc
es
and
mov
lods
mov
mov
or
sbb
jnp
mov
lods
cmp
cmp
xor
mov
testb
ror
decb
js
mov
add
mov
dec
fs
cmp
add
popa
dec
bound
xor
ret
insb
inc
xchg
xor
dec
inc
inc
test
cmp
leave
sti
icebp
mov
jmp
test
jle
mov
jle
mov
ljmp
xchg
lds
icebp
cmpsb
mov
mov
data16
leave
test
ljmp
push
out
movsl
sub
sbb
jle
cld
add
pop
movsb
push
xor
insb
leave
xlat
sbb
and
dec
sbb
or
dec
push
jle
adc
fistps
sub
add
push
pop
push
dec
sbb
mov
jae
lods
sbb
dec
in
mov
insb
mov
mov
or
dec
and
adc
push
in
add
cmp
push
xchg
aam
adc
push
and
sub
fwait
dec
inc
nop
in
mov
jecxz
hlt
orb
out
pop
test
xchg
loop
ficoml
mov
mov
cs
test
fdivrl
push
or
insl
jecxz
mov
mov
out
aad
xchg
mov
push
sub
nop
push
sub
jmp
ret
stos
shll
jno
sbb
aaa
fwait
ja
and
ds
leave
xchg
and
test
hlt
and
loop
leave
jecxz
and
sbb
div
loope
add
repz
adc
pop
mov
dec
test
mov
cmpb
push
push
mov
or
hlt
mov
dec
out
roll
lock
mov
and
insb
scas
daa
jno
cmp
in
dec
adc
andl
add
movsl
in
push
dec
push
cwtl
into
sti
add
jp
imul
scas
test
push
les
test
adc
mov
xchg
popa
mov
clc
mov
cld
aam
push
sarl
mov
call
add
mov
pop
cmp
outsl
fsubl
cmp
in
cltd
sbb
adc
mov
outsl
insb
cmp
jnp
jo
sbb
jp
out
pushf
enter
pop
pop
push
mov
add
pusha
jb
loopw
add
movsb
test
mov
lahf
mov
fmul
jbe
xchg
xchg
insb
push
pop
ss
dec
cltd
adc
bound
push
pusha
icebp
lret
mov
lahf
sbb
xlat
inc
sbb
ficompl
xchg
fdivrl
cld
add
push
cmp
les
fcompl
lahf
cmpl
mov
pop
andb
add
add
call
test
sbb
sbb
pop
mov
mov
push
cltd
jno
scas
mov
inc
push
pop
push
test
sbb
outsl
les
sbb
into
sub
pushf
xchg
and
fisubl
iret
mov
mov
shl
jmp
and
aam
pop
mov
sahf
xorb
cmp
bound
add
ret
aad
popa
xchg
dec
mov
xchg
dec
inc
into
fildll
sbb
push
stos
pop
inc
fidivl
inc
pop
test
repz
pop
loopne
inc
adc
mov
mov
lock
xchg
pop
add
aaa
push
mov
mov
push
adc
in
outsb
bound
shr
rorb
mov
leave
push
inc
rorb
xchg
dec
mov
orl
daa
xorl
mov
xchg
jae
xlat
popa
and
stos
mov
loopne
sahf
out
rol
and
mov
bound
out
mov
mov
mov
sub
dec
adc
out
push
add
cmp
fdivl
andl
jl
int
push
sbb
not
inc
into
les
inc
jge
int3
out
xor
out
push
jmp
mov
cmc
push
jo
mov
cmp
cs
das
scas
sbb
mov
or
pop
sbb
push
and
jno
or
not
mov
fists
call
loope
fld
pop
subl
imul
js
and
outsl
addr16
ss
das
shrl
rcl
out
cmp
jb
addb
movsb
cmp
call
mov
out
mov
pop
stos
shll
and
imul
stos
in
or
or
fidivrs
mov
test
dec
adc
xor
add
rcrb
arpl
outsb
pop
or
adc
xchg
out
mov
cmpsb
adc
xor
les
mov
mov
movsl
cmpsl
xor
and
aam
mov
push
mov
inc
lret
test
pop
xchg
dec
inc
aad
pop
or
nop
xchg
stos
ds
out
pop
int
mov
xchg
dec
sbb
cmp
leave
fsub
pusha
das
push
xchg
test
popf
sti
in
and
push
push
pop
insb
mov
inc
mov
dec
push
and
idivl
jecxz
mov
aam
rcr
fldenv
std
daa
lds
push
scas
or
ficoml
xor
shll
push
adcb
fs
test
sbb
out
and
cmpb
outsb
pop
hlt
das
out
dec
sbb
and
pop
outsl
out
push
ljmp
fldcw
lock
pop
subl
adc
jb
aad
cmp
mov
cmp
mov
cmp
pusha
loop
icebp
ljmp
sub
aaa
pop
clc
in
cmp
cmp
and
pop
pop
sub
jecxz
cld
stos
test
xchg
or
rorl
popf
leave
jp
xchg
int
shl
xchg
jge
pop
and
cli
repnz
mov
mov
loope
and
data16
in
mov
pop
test
imul
call
sbb
mov
jl
xor
and
fistl
jns
xchg
ss
dec
dec
test
sbb
xchg
adc
pop
sub
in
mov
push
jo
outsb
cmp
sbb
nop
outsb
add
cwtl
pop
fdivs
xchg
addr16
jne
ficoml
dec
cmp
mov
shr
lds
jno
in
aam
mov
call
pop
aad
push
in
fnstenv
test
sarl
movsb
lea
rclb
lahf
push
ds
out
and
mov
adc
lcall
or
xchg
jnp
xor
push
out
mov
jns
fcoml
xchg
push
push
arpl
jmp
repz
add
mov
imul
xlat
icebp
clc
push
sbb
movsl
xchg
loop
into
cmc
cs
xchg
iret
adc
mov
sub
pop
and
repz
push
aam
jb
lods
xchg
xchg
or
mov
jo
sbb
fstl
or
daa
stos
sti
and
lret
int
mov
lcall
out
cmp
xchg
imul
aad
dec
and
xor
add
inc
subb
xor
lahf
arpl
sbb
push
jg
inc
jae
daa
shlb
lods
test
xchg
push
outsl
les
outsb
insl
loope
ljmp
jnp
imul
mov
aam
lea
movsb
jge
add
scas
push
xor
pushf
mov
jmp
xor
add
repnz
sub
mov
mov
mov
stos
bound
cld
pop
lret
add
lods
test
and
push
popw
adc
xchg
jecxz
cmc
add
dec
inc
dec
or
test
mov
cld
fwait
ds
fisubrs
rcrl
inc
std
mov
or
loope
xchg
mov
cmp
or
xlat
loop
in
mov
push
leave
and
out
clc
xor
call
cmpb
mov
andb
mov
icebp
out
dec
dec
sbb
or
lods
xor
lods
inc
ficoms
lds
aam
cwtl
jl
fiadds
push
mov
jmp
or
subl
lock
sbb
stos
leave
enter
inc
daa
test
sti
xchg
ja
or
xlat
scas
or
cmp
gs
jno
shll
stc
frstor
adc
dec
dec
mov
xchg
mov
pop
jg
test
xor
pop
mov
lcall
fisubs
aad
xor
add
adc
test
xlat
cltd
out
call
inc
inc
divb
and
add
bound
dec
das
pop
ficompl
lcall
fmuls
lods
out
es
sbb
mov
das
je,pt
sahf
fisubl
cli
in
fcmovne
xor
movsb
sbb
xor
movsl
dec
inc
pop
or
sbb
lret
and
push
gs
mov
jp
inc
push
test
js
in
xor
mov
lcall
mov
les
mov
or
sarb
mov
dec
push
scas
sahf
jmp
xchg
or
and
cmp
in
fnsave
idivl
or
sub
and
push
dec
sub
rcrl
mov
fistl
add
add
mov
ffree
leave
mov
lret
push
test
in
mov
lods
dec
lds
cmc
lahf
in
fadds
add
push
std
sarb
mov
decl
jecxz
mov
push
push
arpl
int3
repnz
ljmp
push
push
rorl
dec
cltd
mov
push
loope
mov
icebp
add
mov
gs
aas
sbb
push
repz
add
std
mov
jmp
mov
jp
and
mov
mov
idivl
lea
sbb
repz
stos
scas
inc
pushf
and
sbb
mov
mov
sub
stos
movsl
std
stos
int
xchg
ds
popa
sbb
shll
mov
mov
mov
cli
addl
pop
gs
mov
cld
mov
and
fcomps
inc
adc
es
mov
sub
cmp
mov
push
inc
jb
jg
imul
fisttpl
movsl
cmpsb
outsl
cmpsb
imul
mov
mov
push
inc
dec
cltd
xchg
stc
jg
lock
pop
ret
pop
or
mov
cltd
scas
fnstsw
mov
aam
pop
mov
sub
out
and
fisubrs
pop
pushf
dec
ret
xchg
fldl
das
je
inc
xchg
cmp
popa
mul
push
xor
sub
fnstenv
jmp
stos
dec
push
loopne
inc
push
xchg
jp
jle
popa
movsl
mov
out
stos
lock
inc
inc
mov
insb
fisttpll
dec
ret
xchg
pop
xor
mov
xchg
in
in
cmp
adc
in
jecxz
dec
cli
push
adc
sti
fistl
pop
inc
mov
arpl
dec
mov
ret
into
test
icebp
lea
jne
sbb
push
jnp
stos
out
mov
aad
shr
sub
aam
cli
loopne
xor
mov
cmp
mov
jmp
aam
cmp
popf
cmp
cmp
mov
cltd
inc
xchg
inc
cltd
iret
push
xor
sub
test
in
mov
adc
adc
pop
cs
sbb
cmp
leave
inc
adc
repz
leave
mov
push
add
orb
sbb
lahf
in
in
and
repz
jns
dec
sbb
or
mov
cmp
pop
aas
push
push
gs
fistps
jle
imul
or
movsl
inc
imul
loope
and
inc
pop
out
in
popa
xchg
push
mov
sub
rol
mov
or
push
std
lods
repz
sbb
xor
sub
sarl
insl
inc
sub
mov
mov
mov
sub
xchg
mov
push
sbb
jo
fs
or
xchg
shrb
cmp
or
jnp
sbb
mov
xchg
scas
inc
rorb
notb
dec
xchg
adc
cs
jmp
mov
into
pop
dec
or
cltd
je
push
das
push
and
push
adc
aam
dec
dec
aas
shrb
jbe
sti
test
jns
sub
jp
iret
lods
lret
ret
inc
ds
idiv
sbb
inc
outsb
popf
mov
in
gs
add
divl
add
xor
ret
mov
push
inc
xorl
xchg
pop
push
leave
pop
sub
push
pop
mov
outsb
add
fnstenv
lret
stos
mov
or
lret
push
cmp
popa
cmp
sbb
leave
cli
pop
mov
mov
lahf
dec
push
or
aad
sbbb
lock
xchg
adc
adcb
xor
loopne
xchg
add
sbb
add
fldl
add
add
int
pop
lea
add
add
add
add
add
add
add
sub
add
rolb
add
pop
add
ja
mov
jg
add
add
add
and
add
add
add
add
add
adc
add
add
add
add
dec
add
add
add
ja
push
add
add
add
add
fsubs
add
add
add
add
add
sub
clc
add
add
and
popa
outsb
and
pop
ja
jae
inc
dec
and
push
ja
mov
add
xor
cmp
fisttpl
xor
or
push
adc
push
lea
adc
lea
mov
jmp
test
inc
pop
cmpl
add
dec
jno
adc
cmp
inc
add
add
push
xor
decl
int3
inc
lea
jge
push
push
add
add
or
loopne
cld
push
call
incl
adc
shr
inc
or
inc
dec
dec
add
call
pop
incl
add
push
add
push
push
add
mov
clc
mov
std
clc
add
jne
incl
add
add
pushl
add
insl
add
insb
add
add
add
add
add
fstpl
add
push
add
add
add
inc
inc
outsb
or
inc
jne
adc
je
jo
sbb
popa
jo
leave
outsb
inc
je
inc
gs
insb
mov
lret
arpl
popa
push
cmp
jb
insb
push
jae
gs
jne
inc
push
jb
xor
gs
js
xor
add
add
or
add
mov
add
add
add
add
add
add
add
add
xlat
add
add
add
add
sub
cmc
and
nop
mov
cmp
cmc
inc
fmul
leave
out
dec
and
mov
lea
dec
int3
xorl
inc
xor
or
in
adc
out
or
sub
mov
push
lret
push
or
test
adc
out
ja
or
dec
cmc
imul
xor
xchg
or
cwtl
mov
cmpl
sbb
iret
notb
inc
jbe
icebp
xchg
inc
je
push
adc
outsl
pop
inc
shrl
dec
pop
in
and
push
arpl
test
jmp
test
sti
xchg
loop
loopne
loopne
cmpsl
sbb
or
fstpt
inc
icebp
hlt
adc
xor
nop
lret
ljmp
mov
popf
scas
add
cs
in
dec
movaps
ljmp
jo
mov
pusha
xchg
aad
xor
sbb
cld
insl
mov
xchg
add
subb
out
fmulp
or
push
push
jp
scas
in
adc
fimull
inc
mov
add
pop
popf
test
aam
xchg
pop
into
add
sbb
loope
xchg
jo
mov
in
inc
cwtl
mov
mov
mov
xor
stc
mov
mov
and
inc
fsubrl
leave
fistl
daa
push
pop
stos
push
xchg
in
in
rcrb
stc
gs
mov
bound
fmul
cmp
cmp
scas
lods
scas
pop
jne
mov
aas
sub
test
jl
popa
ficomps
je
test
pop
mov
nop
jmp
add
or
pushf
dec
sub
cmp
repz
or
xchg
pop
into
pop
mov
xor
and
inc
decl
mov
or
cmp
mov
jmp
fwait
add
jno
gs
mov
pop
std
lock
cs
stos
inc
xorl
mov
rcrl
pop
dec
out
ret
mov
fisubs
or
mov
imul
jno
scas
xchg
jne
aas
aam
enter
lret
cwtl
aam
push
xchg
sub
adc
pop
cs
pushf
test
lret
push
push
shrb
loopne
mov
jecxz
jne
push
push
mov
jl
shl
pop
pop
sti
shlb
testl
cmp
mov
adc
add
call
rorl
or
repz
mov
push
xchg
in
lcall
adc
int3
and
jle
je
gs
mov
inc
outsl
add
adcl
adc
and
pop
xchg
lods
mov
cmpsl
cli
enter
rcll
add
call
and
loop
xchg
add
mov
addr16
xchg
clc
lods
cmpsl
outsl
xlat
or
out
pop
movlps
in
pop
mov
test
xchg
xor
mov
hlt
add
daa
cmp
sbb
out
add
mov
test
addr16
xchg
cmp
xor
cmp
jmp
cs
mov
pusha
rcrb
mov
adc
pop
push
inc
js
or
cs
mov
ret
stc
pop
mov
imul
push
adc
xchg
mov
or
sub
enter
ljmp
hlt
push
fstps
sbb
and
pop
test
inc
jecxz
mov
inc
je
inc
or
pop
outsl
je
or
ror
int3
pop
cmp
inc
push
adc
data16
js
popa
xorb
xchg
lahf
push
and
outsl
insl
cmp
push
data16
mov
push
test
mov
cmpsl
ficoml
add
pop
repz
mov
adc
paddq
lods
fisubrl
aam
in
data16
clc
add
int
add
cmpsb
xchg
add
and
cld
dec
jbe
sti
adc
insl
or
pop
jo
jns
xorb
je
mov
pusha
idiv
scas
inc
rorl
cli
pop
dec
add
dec
out
push
fnsave
pop
xor
mov
negb
js
sbb
rcrb
xlat
std
xor
mov
xor
bound
out
mov
jmp
mov
and
cmc
in
and
lahf
push
xchg
push
stos
imul
or
mov
adc
std
mov
cwtl
mov
mov
push
scas
push
orb
adc
fldt
mov
or
aam
cmp
push
sub
xlat
mov
lods
sub
fistl
in
jae
pop
push
push
clc
xchg
mov
inc
sub
dec
push
and
aas
jge
and
mov
aaa
lock
inc
loope
cmovle
imul
jae
sub
dec
lock
adc
in
sahf
or
ret
jg
mov
push
orl
mov
in
sbb
or
lret
mov
lods
aaa
mov
jne
cltd
sub
fsub
idivb
push
fnstsw
fcmovb
aam
cmpsl
icebp
cmpsb
pop
in
mov
jb
imul
jnp
imul
ds
add
xchg
add
out
mulps
out
rcll
xchg
mov
outsb
cmp
and
pop
xchg
cmp
adc
pop
in
ljmp
scas
mov
imull
xchg
lea
in
sarb
and
jb
sub
xor
add
div
pop
inc
adc
jg
shrl
mov
or
lahf
pop
push
daa
jne
cltd
fsub
pop
je
daa
inc
mov
sarb
ds
and
xor
das
scas
loop
repnz
jae
jl
je
ljmp
ljmp
xchg
ficomps
shrb
out
or
or
xchg
popf
xchg
aad
push
adc
stos
jecxz
mov
test
xor
jo
and
and
cmp
jle
pop
sbbl
out
add
pop
cmc
mov
les
xchg
sbb
mov
sub
lcall
cmp
fiadds
and
test
jno
or
mov
xchg
cmp
fwait
mov
add
mov
fnsave
cmp
repz
jmp
jo
je
push
sbb
jge
xchg
dec
jno
scas
cwtl
in
call
push
sarl
push
cmp
pop
add
shr
test
pop
scas
insb
lret
scas
test
std
cmc
icebp
adc
movsb
xchg
push
cli
mov
xor
xor
jno
outsl
lret
pusha
in
xchg
imul
push
jne
je
enter
pusha
lcall
lret
repnz
mov
scas
jge
and
fwait
push
mov
stos
cltd
mov
xchg
fadds
pop
inc
outsl
jns
int3
lods
iret
stos
addl
fdivl
stc
sub
cmp
je
cmpsl
cmpsl
xlat
jns
popa
fdivrl
mov
jns
xchg
xchg
mov
shrb
test
rcl
sub
ja
je
mov
test
leave
pop
rcr
gs
mov
mov
and
cltd
rol
xor
pop
jmp
sti
cmpsb
mov
xor
mov
or
in
pop
add
out
cwtl
xor
lock
or
add
pop
icebp
f2xm1
push
cmpsl
lret
mov
into
cwtl
adc
insb
sbb
out
out
iret
xor
scas
icebp
leave
lret
shll
sbb
or
stc
notl
rcrb
cmp
ja
cltd
or
outsb
mov
sti
adc
daa
jbe
sahf
jmp
add
inc
dec
arpl
in
or
pop
scas
jae
dec
aad
sbb
arpl
loope
fs
fdivs
mov
addr16
sbb
ret
pushf
fisubl
cmp
imull
out
out
hlt
jnp
stc
sbb
rcr
add
popa
jl
lods
test
pop
jo
mov
cmp
mov
fwait
sub
popf
cmp
in
sub
sbb
dec
or
js
dec
dec
mov
test
ds
xchg
rcrl
xchg
pusha
scas
out
xor
push
inc
adc
push
inc
int
imul
add
mov
push
or
mov
adc
rdpmc
push
dec
sarl
push
inc
sub
inc
dec
inc
sbb
cmp
pop
jp
mov
adc
jo
or
push
cmp
inc
sarl
mov
add
movsl
shl
repnz
jnp
inc
mov
mov
or
lret
mov
cltd
sbb
push
xlat
xor
rcr
dec
iret
subb
imul
push
cmpsl
enter
cmpsl
pop
loope
sbb
and
and
xor
movsb
repnz
push
jg
loop
inc
data16
sub
and
mov
and
pop
xchg
jmp
lds
xchg
and
or
push
dec
xchg
mov
repnz
insl
movsb
es
add
dec
sbb
fdivs
push
call
pop
out
pop
dec
and
inc
int3
lret
fisubrs
in
sbb
mov
xchg
or
pop
repz
sub
push
iret
lds
cmpsb
stos
push
and
dec
lock
jb
mov
lock
mov
popf
inc
jbe
aaa
adc
cmp
scas
cmp
mov
pop
int3
rolb
in
dec
dec
mov
das
inc
popf
pop
jae
movsb
sub
rcl
or
cltd
lret
ljmp
cmp
js
cmp
mov
and
mov
push
loop
xchg
fisttps
or
xor
loopne
rorb
pusha
imul
js
push
mov
andl
jo
std
icebp
mov
add
and
push
notl
aas
rcl
sbb
adc
xchg
push
popf
scas
cmp
inc
leave
hlt
adc
cmpsl
into
dec
aas
je
scas
stos
cmp
hlt
jle
sub
movsb
pop
cmpsl
xchg
push
cmpsb
pop
into
sub
inc
lods
outsb
repnz
les
pop
jle
cmc
and
hlt
movsl
ret
gs
js
rcrb
push
insl
jmp
inc
push
jo
cmp
sbb
lret
push
lret
push
cmc
imul
fildll
inc
test
xor
das
loop
stc
inc
xchg
sub
or
sub
mov
lret
pop
push
ret
dec
adc
les
jg
xor
fbld
sbb
add
lea
jns
and
in
loope
or
mov
clc
daa
xchg
cmp
ss
xor
adcl
in
or
xor
sub
in
jne
jnp
outsb
sub
and
mov
push
les
loopne
mov
cmpsb
dec
add
mov
add
popa
dec
fwait
popl
movsl
pop
push
mov
in
iret
sub
neg
jl
dec
xor
inc
mov
test
stos
mov
orl
xchg
cld
jne
aaa
adc
mov
and
ret
push
jae
or
cmp
loope
push
sub
shll
out
mulb
inc
leave
and
call
jmp
int3
pop
rcrl
inc
js
clc
adc
scas
mov
mov
push
ljmp
inc
loope
rcrb
addl
daa
sbb
push
stos
push
push
push
mov
ljmp
lock
push
push
out
pop
cmp
test
inc
inc
or
pop
enter
push
mov
mov
or
lock
lods
loop
dec
mov
cmp
inc
push
outsb
test
jns
jne
popa
int3
mov
jb
pop
ret
xchg
pop
cmpsl
pop
roll
lret
dec
mov
xchg
pusha
sbb
aas
push
pop
jb
je
int
jne
in
sub
mov
mov
popf
sub
sar
jno
test
gs
outsl
pop
inc
lret
aad
in
adc
adc
je
inc
scas
scas
adc
and
aas
sub
inc
dec
mov
xchg
into
lret
daa
mov
inc
jmp
cmp
int3
cmpsl
or
call
and
push
popf
loope
sbb
mov
sti
shl
cmc
push
mov
mov
clc
adc
call
jno
jg
lods
out
testb
arpl
or
loop
xor
cmc
adc
sbb
cltd
inc
iret
mov
rcrl
out
repz
push
fs
outsl
jno
add
imul
lahf
add
and
cld
addr16
adc
imull
xlat
sub
push
int
jno,pn
mov
mov
leave
orb
xchg
jbe
ja
ja
inc
out
in
xor
xor
iret
add
fists
mov
mov
fsubl
jmp
push
xchg
in
xchg
inc
in
xchg
repz
mov
pop
pop
test
scas
inc
mov
adc
movsl
cwtl
dec
das
fcomps
sbb
outsb
dec
mov
or
movsb
xor
scas
repz
push
dec
push
mov
mov
jbe
popf
repnz
clc
cmpsl
jne
sub
cmp
sub
and
inc
mov
fidivs
jecxz
call
xchg
jecxz
imul
xor
inc
dec
xor
lret
push
leave
aas
cmp
pop
dec
add
jp
leave
add
repz
sub
loopne
std
fisubs
xchg
inc
insl
and
xchg
pop
mov
cmc
test
jb
add
in
add
out
pop
or
cmp
mov
pop
loopne
insl
inc
cmp
inc
jae
std
insl
gs
sbb
xchg
xchg
inc
xchg
test
sub
hlt
iret
mov
dec
mov
pop
movsl
shrl
and
repz
pop
mov
push
push
mov
gs
push
sub
jne
pop
sbb
jecxz
add
lahf
lock
sub
push
outsb
adcl
lcall
shll
pushf
inc
xlat
sub
or
mov
mov
add
repz
cltd
pop
loopne
cmp
fidivrl
sar
jnp
cmc
push
mov
iretw
imul
pusha
push
mov
mov
sub
sbb
lea
jmp
inc
into
popl
or
mov
std
outsb
mov
mov
dec
imul
int
push
jno
dec
daa
iret
nop
mov
mov
aam
cmpsl
mov
mov
cltd
test
xchg
dec
fsubs
not
test
mov
sbb
jnp
add
sub
adcb
push
pop
jb
mov
in
sub
lret
lods
or
xor
testb
pop
xor
jns
insb
mov
stos
insl
push
out
mov
clc
hlt
in
popf
pop
lret
cltd
ja
rcl
stc
and
jg
lods
gs
cwtl
pop
daa
in
and
push
dec
pop
cmc
shlb
scas
adc
adc
pop
cmp
pusha
and
pop
jne
inc
push
in
int
je
cmp
fnstcw
sbb
out
sub
lahf
dec
scas
jb
mov
inc
jle
mov
mov
lret
pop
jo
inc
cmp
mov
imul
sbb
inc
ds
inc
mov
sub
out
fucomi
popf
mov
inc
int
mov
fnstsw
lret
lods
in
cmc
mov
divb
shrb
jg
stos
adc
leave
xor
fimuls
jnp
adc
xlat
push
adc
lds
jne
sbb
std
stc
jge
inc
fstpl
pop
ds
cmp
mov
sub
lea
ljmp
cltd
das
test
cmp
in
mov
outsb
and
sbb
xchg
rorl
pop
mov
gs
pusha
mov
lods
xor
and
pushl
jmp
and
idiv
dec
lods
int
dec
mov
mov
daa
in
jmp
push
stos
ljmp
inc
iret
jbe
adc
test
xchg
xchg
push
test
dec
sahf
push
cld
dec
xchg
push
mov
lock
lret
xchg
pop
test
xor
out
xchg
jp
jne
push
in
adc
js
js
fcomps
test
and
movsb
sub
icebp
dec
repnz
sbb
and
adc
lods
fsubrl
sahf
add
ds
mov
hlt
test
jns
mov
rcl
outsb
icebp
sahf
jg
rcrl
pop
push
pop
cmp
in
xor
lock
stos
loope
lds
ret
pop
in
xor
rsqrtps
dec
addr16
imul
ljmp
and
pop
jmp
and
in
jmp
push
cmp
ja
dec
rcrb
in
mov
fcom
jb
inc
sub
jl
loope
push
sbb
pop
and
icebp
sahf
movsl
out
inc
push
xchg
mov
xor
jbe
mov
fwait
and
dec
daa
adc
and
adc
jecxz
xchg
push
imulb
jo
data16
js
mov
scas
inc
inc
push
mov
stc
xor
adc
into
xor
sub
mov
repnz
and
xor
cmp
and
pop
ljmp
and
hlt
dec
shlb
lcall
xchg
lods
icebp
push
loope
in
cltd
scas
stc
mov
cld
jecxz
mov
jmp
test
pop
push
sbb
into
mov
mov
mov
movsl
add
fnstsw
scas
fcompl
xor
loope
popa
mov
pop
das
fsts
lcall
fldenv
cmp
mov
lret
ja
xor
jp
sahf
in
jecxz
pushf
lds
addl
stos
mov
mov
dec
push
ror
std
popa
ja
dec
sbb
test
xchg
pop
pop
testl
xor
enter
cmpsb
in
pop
sbb
fistps
movsl
pop
div
enter
repnz
add
xchg
mov
sub
jge
mov
add
dec
stc
outsb
fistpll
sub
pusha
xchg
pop
adc
push
inc
dec
inc
mov
aam
ja
push
xor
lods
mov
cmp
in
adc
push
mov
sbb
stc
loope
mov
adc
leave
lods
add
addl
lds
xor
in
iret
adc
hlt
adc
shr
ds
mov
xchg
es
testb
dec
dec
adc
sbb
stos
mov
xlat
mov
clc
inc
or
movsb
xor
cmp
mov
int3
jecxz
imul
cli
jne
iret
cld
jns
std
xchg
sbb
pusha
fwait
aas
movsl
rorl
in
pop
pop
sub
add
adc
sub
or
push
jne
push
sbb
dec
jl
sti
fdivrl
out
aas
xor
leave
jl
out
fimuls
or
push
cmp
hlt
mov
add
cmp
dec
clc
jae
mov
mov
scas
and
js
pop
add
rorb
xchg
lret
mov
cmp
sub
stos
jg
icebp
jno
lret
push
rorb
mov
sbb
jmp
movsb
inc
movsl
repnz
sbb
xor
fs
push
in
arpl
and
mov
mov
es
icebp
hlt
test
loop
rolb
adc
stc
sti
pusha
neg
iret
sub
pusha
mov
loop
jno
push
dec
fistpll
xor
imul
mov
jmp
fwait
cmpsb
fiadds
inc
test
aaa
add
sub
mov
xchg
frstor
lret
stos
adc
add
adcl
cmp
sub
scas
out
leave
inc
rcrb
fwait
xor
leave
mov
pop
jge
movsb
pusha
or
into
sub
push
clc
adc
loope
pop
fadds
or
push
cld
inc
mov
test
call
adc
adcb
lea
lret
mov
dec
push
repz
push
sub
mov
dec
mov
pop
pop
in
outsb
data16
jbe
les
lahf
int
imull
pop
sahf
xchg
flds
pop
jg
aam
pop
sbb
sti
cmp
in
sbb
jp
movsb
mov
sbb
test
push
push
js
leave
lret
push
inc
or
cmp
jae
mov
sbb
and
xchg
dec
inc
ss
inc
or
push
sti
mov
mov
loop
push
ficompl
fwait
xlat
push
or
xor
and
inc
jne
dec
js
mov
jo
xlat
addr16
mov
mov
xchg
jno
mov
cmp
sbb
jns
je
add
aad
nop
sub
xchg
test
xor
stos
sub
add
pop
pushf
xor
dec
repz
aam
fcom
shlb
cmp
out
sub
popf
mov
rcll
jmp
xlat
test
nop
jbe
cmp
addr16
lds
add
xor
fadd
cmc
lret
or
stos
int
insb
movsb
outsl
std
in
out
push
int
jo
pusha
je
push
jns
fmull
es
xor
inc
adcb
mov
xor
pop
xchg
int3
test
in
out
test
je
ficomps
add
mov
movsl
bound
dec
cmp
sbb
sbb
popa
jns
and
lret
dec
jge
mov
add
add
std
add
add
add
movl
add
add
add
add
add
add
add
add
add
add
out
add
add
add
adc
add
add
add
jbe
add
add
or
add
add
xor
pop
add
mov
sub
add
adc
add
push
ja
mov
incl
incl
add
add
add
and
jne
or
or
adc
add
add
add
adc
add
into
inc
add
add
pop
icebp
and
add
arpl
rolb
add
add
sbb
add
mulb
add
add
add
add
add
and
jo
gs
inc
jae
inc
push
imul
add
punpcklwd
jmp
mov
enter
or
push
jmp
and
inc
pop
in
pop
incl
mov
cld
add
leave
mov
incl
push
test
push
push
add
scas
ljmp
push
dec
fs
push
rolb
lret
in
mov
mov
mov
cmp
add
push
daa
fidivs
and
rcrb
push
push
jmp
mov
call
add
clc
mov
loope
std
push
out
and
cld
cld
push
mov
add
mov
push
add
cmp
clc
loopne
add
lret
sub
mov
cmp
lea
inc
adc
adc
push
jne
shll
pop
add
add
add
add
add
add
add
add
add
add
add
add
and
inc
add
gs
outsl
outsb
outsl
insb
test
imul
xchg
push
add
jbe
je
arpl
dec
xor
inc
insb
jb
addr16
jge
add
imul
inc
popa
gs
loop
push
mov
add
add
add
push
add
popf
and
sarb
movb
test
daa
push
popa
scas
jle
mov
roll
mov
arpl
test
cmp
ja
hlt
filds
std
mov
sbb
cmc
mov
jbe
adc
fwait
idivb
add
adc
roll
das
lahf
jmp
mov
lods
dec
pop
das
cwtl
add
repz
es
sub
jbe
pop
inc
mov
add
in
faddp
push
fistpl
push
sbb
dec
repnz
xchg
and
cwtl
jno
out
push
pushf
push
into
push
sbb
arpl
outsl
xor
das
or
and
orb
sbb
adc
cmp
pop
aad
inc
xor
lds
mov
and
jle
sbbl
or
mov
pop
outsl
add
mov
pop
repnz
add
mov
dec
in
inc
dec
add
mov
fstpl
add
adc
fnstcw
jbe
das
pop
dec
mov
loop
int
movsb
in
mov
movsl
movsl
test
add
lock
xchg
outsb
mov
jmp
lods
sbb
sub
mov
js
testb
fisubrl
lret
xchg
out
outsl
andb
cmp
mov
stos
push
std
ss
adc
mov
mov
popa
cli
adc
push
mov
jno
cmpsl
insb
dec
ret
sahf
enter
aaa
das
rclb
jns
sbb
rclb
data16
movd
jle
cwtl
add
in
loop
adc
lock
cmp
ud2
outsb
rorb
adc
mov
inc
push
xchg
sti
nop
gs
imul
xchg
jne
jmp
mov
test
popf
dec
push
cltd
xlat
ja
inc
cltd
mov
xchg
jg
iret
pop
push
cmp
push
into
cmp
insb
inc
inc
clts
daa
and
dec
lea
arpl
sbb
in
sti
in
gs
lods
cmp
sub
sbb
roll
sub
xor
jae
cmp
adc
cltd
jle
lea
cmp
call
xchg
jge
mov
clc
insl
rorb
cmp
rcll
mov
add
in
push
add
lahf
ret
xor
int3
pop
movsb
loopne
iret
jae
scas
int
dec
imul
cmp
pushf
inc
push
fdivs
sbb
mov
pop
sbb
sbb
mov
pop
in
arpl
xchg
adc
adc
jo
and
mov
jne
mov
dec
lock
cmp
inc
popl
scas
sub
push
loopne
xchg
shlb
pushf
aas
aam
shll
cmpsb
mov
and
fcomip
repnz
pop
and
fwait
lds
xchg
inc
dec
test
add
push
jg
std
add
pop
test
pop
fistpl
outsb
loope
sahf
ret
fs
aad
dec
pop
pop
push
mov
and
inc
lret
push
into
jl
jo
ret
xchg
pusha
mov
adcl
test
nop
mov
adc
and
xor
jmp
or
stos
jnp
jnp
xchg
shrl
xchg
and
add
sti
mov
shlb
adcb
test
cli
lods
mov
xor
pop
pop
push
ja
out
push
mov
fldenv
stc
mov
cwtl
sti
xchg
rcll
sub
cltd
pop
scas
movsl
roll
mov
lea
in
xlat
pop
nop
decl
sub
jle
js
jns
les
rclb
out
scas
add
xor
fmull
sbb
popa
mov
shll
out
or
xchg
sub
adc
add
ja
sub
enter
test
sub
mov
aas
xchg
push
addl
inc
stos
xlat
push
and
jle
pusha
scas
xor
mov
xchg
jle
sub
cltd
aad
icebp
pop
push
jno
clc
or
add
add
dec
loopne
and
xchg
sbb
in
aad
xchg
xor
inc
mov
or
jle
pop
mov
pop
or
sub
adc
push
orb
dec
popa
jbe
mov
dec
pop
pop
lahf
popf
fidivl
in
jle
jae
out
xchg
push
dec
test
or
inc
aad
or
mov
insb
arpl
mov
rcll
imul
xlat
dec
push
xchg
adc
mov
jb
cs
cmpsl
or
xor
sti
pop
outsb
test
mov
push
cmpsb
movups
sti
cwtl
scas
add
cmp
loope
jo
push
xchg
stc
push
das
jno
dec
dec
hlt
sub
aaa
xor
push
out
jo
aas
push
insl
xor
call
inc
push
or
cwtl
mov
sahf
aaa
shll
gs
mov
pop
int3
mov
call
fwait
pop
cmp
mov
sti
test
lcall
sbb
mov
inc
out
pop
testb
mov
int
andb
jmp
in
dec
sub
sbb
adc
test
test
push
mov
adc
das
push
stc
xchg
test
xchg
in
xchg
push
in
cmp
lret
movsl
cmpsb
icebp
jecxz
xchg
bound
into
dec
movsb
cmp
cmp
and
ret
push
xor
in
mov
sub
pop
mov
or
pop
aaa
int3
pop
sbb
add
mov
mov
or
mov
push
out
pop
and
dec
mov
mov
ror
clc
mov
or
notl
xchg
pop
pop
jbe
mov
loop
out
adc
xchg
clc
cmp
mov
jge
sbb
jecxz
lods
add
adc
adc
jp
data16
out
icebp
push
jo
ret
dec
xor
lods
and
pushf
lds
xor
out
fildl
out
adc
ficoms
mov
test
cmc
jmp
scas
movsb
jne
inc
testb
lds
pop
sbb
mov
pop
xchg
push
in
sbb
push
mov
xchg
inc
cmp
repnz
sbb
or
pop
cltd
insl
and
dec
push
sbb
jae
movsl
movups
inc
pop
and
out
int3
jecxz
aam
mov
repnz
iret
in
rcrb
cmp
shrl
test
int3
mov
ss
mov
dec
jg
mov
pop
shlb
or
pop
mov
stos
sbb
mov
ja
fnstcw
jns
std
fwait
xlat
jecxz
mov
sbb
test
gs
popf
jg
push
je
mov
add
fdivl
je
ds
loopne
xchg
dec
pop
daa
addr16
fimull
in
mov
gs
sub
shl
fisttpll
scas
push
xlat
add
xchg
mov
push
sbb
js
mov
call
push
popf
and
inc
mov
lret
pushf
les
ret
pop
xor
or
add
sub
dec
xchg
jnp
loope
jmp
push
mov
jne
xchg
xchg
gs
shrb
jb
je
gs
sub
addl
aaa
scas
add
push
and
cmp
cmp
lret
inc
jp
sbb
stos
xchg
adc
add
push
nop
add
mov
adc
fsubs
addb
lods
imul
cmp
cli
xor
jo
mov
mov
cmc
xchg
pusha
jno
mov
inc
jecxz
xor
fisttpll
mov
sub
lcall
mulb
pop
xlat
mov
mov
dec
out
stos
sub
and
fldenv
lahf
xchg
insb
pop
dec
sub
aaa
jno,pt
lahf
pop
add
mov
repnz
xchg
js,pt
andl
test
jge
out
aaa
xchg
scas
and
stc
add
roll
or
lret
sti
and
out
lock
in
in
cmpsb
cmp
shlb
std
and
sub
mov
or
mov
or
inc
pop
rcr
xchg
insl
sub
je
push
test
mov
daa
adc
std
iret
fdivp
mov
pop
inc
lods
ret
lret
test
dec
stos
rclb
arpl
std
bound
scas
cmp
scas
mov
mov
das
push
fs
aas
leave
insl
cmp
or
and
mov
sub
icebp
dec
es
and
push
jg
or
sbb
aam
pusha
int3
adc
jnp
or
fcomps
add
and
push
xor
std
lahf
adc
adc
lds
sub
pushl
je
inc
icebp
fst
fs
sub
les
adc
mov
cli
adc
pop
clc
je
clc
ds
add
repz
inc
pop
clc
pop
pop
aaa
orb
outsl
adc
add
mov
pusha
repnz
push
loope
inc
cmp
sub
adc
pop
je
mov
enter
cli
or
jecxz
insb
push
daa
xchg
pop
lcall
iret
int3
adc
mov
xchg
xchg
inc
clc
sub
or
cmp
les
push
cmpsl
andl
sub
sub
call
jbe
out
adc
add
out
lea
hlt
into
jl
pushl
pusha
lock
cmp
das
roll
sahf
pusha
mov
leave
scas
cmp
sbb
out
insl
xchg
shlb
jbe
add
out
cli
loope
dec
outsl
pop
cli
xor
dec
lret
ds
neg
push
adc
outsl
jns
push
inc
jbe
cmp
cmp
dec
js
adc
push
pop
ds
loope
leave
pop
arpl
into
jl
xchg
and
mov
pop
stos
dec
aaa
cld
fists
mov
lock
gs
jl
rolb
mov
mov
mov
mov
and
mov
jne
notb
sbb
inc
dec
sub
push
shr
jle
cmpsl
pop
inc
xchg
shl
mov
stos
add
rolb
sub
daa
lds
sub
jns
sub
adc
in
dec
sti
std
cmc
rorb
jno
mov
out
test
in
jl
out
ficompl
hlt
call
jno
into
xchg
icebp
sbb
mov
scas
das
pop
add
cs
jo
sub
jecxz
mov
aam
imul
sti
pop
sub
subl
fs
cmp
cwtl
sarb
lods
in
push
inc
stos
mov
aas
out
adc
cmp
and
sbb
pop
mov
jmp
adc
orl
dec
sti
out
fstpt
inc
sub
inc
shll
repnz
lcall
push
shlb
inc
cmpsb
or
imul
je,pt
shr
ja
enter
in
push
adc
xchg
loope
pop
mov
ss
sbb
and
or
in
and
cmc
ss
iret
subb
sbb
inc
out
mov
pop
mov
or
push
pop
clc
js
dec
and
adc
mov
jecxz
mov
add
sbb
loop
push
mov
jge
mov
mov
xchg
jnp
xchg
jle
dec
aam
adc
leave
test
add
pop
xchg
sub
fwait
out
leave
and
enter
movsl
cmp
cwtl
pop
fildl
mov
stos
mov
ret
test
jne
adc
fs
jmp
inc
enter
pushf
lods
mov
pop
xchg
inc
xor
xlat
mov
inc
fbld
loopne
cmp
testl
subb
ds
in
mov
push
cmp
pop
lods
push
lahf
sbb
and
std
pop
pop
dec
cmp
xor
add
and
sub
shl
mov
into
popf
inc
bswap
cld
pusha
or
pop
push
inc
add
jno
faddp
mov
mov
inc
sbb
and
add
sti
dec
test
cld
or
xchg
aam
inc
xchg
rorl
psllq
lahf
and
stos
or
add
push
xorb
out
into
dec
pop
cltd
mov
test
ljmp
mov
mov
mov
lcall
addb
or
fistpl
ret
dec
sbb
orl
dec
push
or
mov
rcrl
push
insl
sarl
push
pusha
cmp
jp
aad
sub
stos
inc
push
cmp
jbe
pop
stos
lret
or
neg
or
fcompl
icebp
sbb
or
incl
inc
scas
cltd
xchg
push
jno
ljmp
aaa
test
fmul
adc
ljmp
or
sub
sub
add
cmp
lock
cld
lahf
mov
idivl
insb
add
call
and
cltd
xor
in
lods
mov
sbb
mov
mov
jg
out
inc
or
faddl
pop
testl
cmpsl
xchg
add
adc
jne
scas
xchg
jno
push
ljmp
cmp
lret
jmp
add
jecxz
push
test
inc
outsb
sbb
cmpsl
shrl
insb
es
cmp
rclb
lret
stos
inc
popa
lods
mov
or
dec
and
cs
push
jge
cmp
or
lds
stos
bound
ret
pop
loopne
jbe
add
push
test
in
cmp
pop
pushf
iret
psubusw
das
xchg
jb
out
jle
fldenv
cmc
pop
ds
outsb
int3
sbb
fprem
inc
icebp
pop
stos
ljmp
lahf
push
mov
movsl
mov
rcrl
xor
jle
fldt
icebp
in
xchg
sub
mov
inc
adc
addl
push
fstpt
or
pop
scas
cwtl
and
dec
or
lods
pusha
inc
cwtl
lcall
lds
mov
or
mov
imul
mov
adc
jmp
sbb
mov
jnp
cld
inc
enter
addb
popf
shrb
and
test
hlt
dec
pop
pop
ds
pop
mov
jg
xchg
mov
shr
jge
rcll
mov
or
bound
rcll
popf
pop
stos
into
xchg
cs
cmp
mov
push
xor
std
push
push
test
mov
psraw
icebp
in
lahf
jo
mov
mov
adc
add
test
mov
cs
mov
mov
jno
loopne
sbb
je
add
arpl
insl
hlt
push
and
das
dec
mov
push
cmp
mov
outsl
es
mov
sub
nop
jge
xchg
ljmp
xchg
mov
sbbb
out
mov
aaa
adc
lock
xor
cmp
nop
lods
out
rcrb
in
ds
push
lahf
sub
fisubs
inc
xchg
push
mov
popf
jp
leave
jns
in
cmpsb
sbb
repz
icebp
mov
sbb
cmp
faddl
mov
pop
gs
lea
loope
sbb
ja
js
aam
or
cmc
mov
xchg
pop
inc
sbb
call
lret
mov
mov
out
inc
sub
push
or
in
push
jno
or
jo
fstps
fisubrs
popf
dec
inc
jmp
stos
push
insl
icebp
xor
xchg
dec
xchg
sub
pushf
pop
fcomps
aaa
adc
xchg
aaa
repz
xchg
sbb
es
inc
or
popfw
aad
fwait
js
add
adc
push
loop
insl
cmp
lods
push
and
inc
mov
pop
std
and
pop
insb
add
filds
sbb
push
inc
push
stos
pop
jg
jp
out
test
adc
and
adc
cmpl
adc
test
jne
scas
xchg
pcmpgtb
in
pop
lret
xchg
aas
hlt
sub
pop
hlt
fucomi
cwtl
jb
lcall
cmp
inc
and
push
scas
ret
in
xchg
dec
pop
push
adc
jecxz
into
cmp
into
jo
mov
xlat
mov
add
sub
out
push
mov
call
add
mov
pop
or
fnstsw
inc
xor
mov
xchg
sahf
mov
and
fcompl
cltd
ja
lods
xor
popa
iret
arpl
xor
jl
lea
cmp
mov
imul
pop
in
hlt
mov
pop
fistpl
pushf
sub
dec
test
push
cmpb
cmpsb
inc
loopne
popa
int3
lods
fstp
jno
and
outsb
divl
push
jb
mov
adc
mov
and
mov
sbb
or
mov
pop
int
mov
sti
movsl
mov
xchg
test
pop
lock
rclb
shlb
xchg
lahf
and
inc
lock
inc
ja
ret
cmp
je
mov
mov
jbe
faddl
push
cs
and
xor
fwait
mov
arpl
fdivl
sarl
out
sub
xorl
mov
and
mov
cs
scas
bound
sbb
arpl
push
in
lea
xchg
scas
aad
data16
inc
insb
xlat
or
decb
xchg
ret
xor
mov
dec
xchg
outsb
cmp
cld
stc
pop
mov
push
out
jae
pop
xor
sbb
sbbl
fiaddl
roll
ja
out
add
xor
imul
ja
outsl
push
mov
jp
ret
std
push
or
ljmp
xchg
mov
in
aam
icebp
pop
mov
cmp
adc
cmp
iret
pop
jge
imul
loopne
sti
aas
les
jmp
push
mov
imul
adc
sbb
cmp
test
or
and
jp
pop
lock
pop
or
in
jp
sub
cmp
sbb
dec
rcr
xchg
sti
cmc
xchg
loopne
xchg
pushf
vunpckhps
imul
mov
adc
nop
push
cwtl
and
mov
jmp
xchg
push
and
sbb
mov
jle
inc
bound
fdivrl
add
inc
andb
add
add
scas
out
ficomps
movsl
cmp
sbb
ret
xor
out
xchg
ret
call
ljmp
jo
les
popf
dec
scas
loop
sahf
mov
das
das
stos
pop
dec
mov
sbbb
xor
xchg
sub
mov
inc
ja
xchg
outsl
cmpb
mov
ss
in
inc
mov
push
mov
dec
add
and
xorl
frstor
shlb
aas
mov
out
es
ljmp
pop
loope
add
xchg
pop
lods
clc
sti
out
mov
pop
push
mov
sub
add
xchg
and
mov
sub
mov
aam
fiaddl
fucomi
lds
or
xchg
fwait
cmpsl
enter
push
mov
addr16
lock
jo
adc
in
pop
sti
inc
xchg
mov
stos
pop
lcall
xchg
dec
out
lcall
jmp
jb
cltd
dec
sub
nop
ds
jp
icebp
movsl
test
jo
movsb
mov
add
xchg
lret
je
or
and
mov
addr16
sbb
and
adc
adc
arpl
add
sbb
jmp
mov
cwtl
mov
aam
movsb
ss
pop
pusha
loop
push
rclb
xorb
fstpt
imul
cmp
xor
repz
inc
add
ret
pop
pop
in
into
mov
cmp
mov
aam
sbb
sbb
xchg
arpl
xchg
inc
ret
push
lahf
lret
jbe
stos
pop
lock
inc
lahf
push
sbb
push
mov
cmp
adc
jns
call
cmp
pop
addr16
mov
out
sbb
dec
mov
rcl
and
sbb
pop
icebp
sahf
in
fcoms
inc
lretw
mov
dec
sbb
shll
out
add
mov
fimull
jecxz
out
xor
sub
in
jns
xchg
mov
imul
push
jmp
pop
or
mov
cmp
loope
out
mov
out
shr
adc
in
cmp
call
ret
and
mov
enter
xchg
ret
iret
jp
jl
adc
cli
lcall
sbb
xchg
cmp
pushf
add
in
xchg
out
daa
pop
and
mov
lret
mov
test
ja
pushf
cmpl
jmp
cmp
fwait
pusha
aaa
cltd
inc
add
xchg
clc
add
or
xchg
fs
fsubrl
jb
lahf
pop
inc
lret
stos
mov
clc
scas
std
in
andps
cmp
or
jmp
and
jb
pop
ret
insl
into
xor
inc
loopne
pop
test
sbb
orl
push
cmpsb
fidivrs
and
mov
jge
xor
sar
lods
xor
mov
aaa
int3
out
les
mov
std
je
outsb
inc
mov
popa
leave
dec
jb
fisubrs
aad
scas
cmp
js
pop
arpl
sbb
insb
xchg
lods
xor
test
jp
es
insb
and
xchg
mov
fs
fistpll
mov
getsec
fmulp
lahf
cmp
inc
or
sarl
cmp
js
pop
fwait
mov
lahf
cld
sbb
xor
test
jae
aas
movsl
mov
outsl
jmp
sub
pop
and
shl
movhps
cld
ret
push
adc
pop
shll
jo
mov
jnp
fcomip
mov
aas
out
add
add
add
add
mov
mov
add
inc
add
add
add
add
add
add
add
add
pop
icebp
add
add
add
add
add
add
add
add
out
popa
add
add
add
add
stos
stos
add
or
mov
incl
add
add
push
jo
gs
add
add
add
add
inc
int
add
je
add
add
pop
add
pusha
add
in
add
lock
add
add
arpl
adc
dec
addb
jae
jb
inc
movb
mov
sti
jecxz
sbb
inc
enter
mov
adc
lea
and
mov
ljmp
clc
test
or
or
mov
test
inc
adc
cld
clc
adc
xor
mov
out
addl
add
mov
inc
add
add
jbe
adcl
or
add
adc
push
push
push
lcall
cmp
mov
cld
push
adc
add
cld
mov
enter
add
push
clc
lret
roll
lret
mov
clc
and
add
add
add
add
lods
add
mov
add
add
add
inc
inc
insl
imul
mov
gs
jo
insb
add
arpl
outsb
gs
xor
inc
loop
add
dec
push
add
inc
gs
cs
outsl
add
gs
add
inc
insb
outsl
push
outsl
jb
jge
imul
add
add
add
add
or
add
add
add
rcr
add
mov
adc
xorb
fisttpll
sbb
cmp
pushfw
mov
pop
cmpsb
and
and
pop
and
arpl
mov
scas
fsts
xchg
inc
stos
or
int
push
pop
pop
inc
in
notb
ss
repnz
insb
lea
sbb
cmp
das
push
cwtl
dec
add
mov
js
cmpsb
lret
lahf
fldenv
mov
in
inc
jb
push
add
leave
fwait
fwait
stc
push
daa
bound
mov
add
pop
les
inc
sub
daa
jge
aas
in
lock
cmp
cmp
xchg
popf
push
mov
fdiv
xor
std
or
mov
inc
not
orb
jne
dec
jo
mov
aaa
sub
je
fwait
cwtl
dec
pusha
out
cmp
jnp
in
push
call
add
pop
dec
xchg
mov
xor
lret
cmp
popa
nop
js
jmp
xor
mov
les
xor
pop
orl
sbb
ss
cwtl
inc
pop
and
mov
je
outsb
gs
mov
leave
sub
jne
rolb
add
and
inc
invd
mov
fimull
and
aad
cltd
mov
cmp
faddl
mov
cmc
sbb
mov
hlt
cmp
movsb
movsl
mov
sbb
sub
sbb
or
enter
xchg
and
mov
gs
cmp
shl
mov
mov
pop
sbb
aas
iret
cmp
sbb
mov
inc
pop
notl
or
dec
in
sbb
jne
mov
std
outsl
lea
cmpsb
rorb
fwait
mov
mov
pop
enter
rcl
lods
sbb
idivb
pop
push
and
vpaddd
insl
push
jne
jbe
loopne
mov
sub
addr16
lock
stos
fs
xor
mov
cmp
mov
pop
inc
ret
decb
push
insb
loopne
mov
xchg
pusha
xor
lods
inc
add
mov
call
xchg
dec
mov
ljmp
ds
jne
aam
dec
xlat
outsb
loop
ljmp
loopne
icebp
ret
adc
add
popa
mov
dec
scas
push
jno
fdivl
add
mov
sbb
divb
dec
mov
and
push
in
xchg
xchg
enter
std
dec
sub
jns
sub
rol
cmp
inc
sbb
jg
jg
mov
jp
push
mov
xchg
rorb
mov
je
in
and
mov
movsb
inc
and
add
cmp
xlat
scas
mov
xchg
push
jle
outsb
lock
insl
ret
jl
fcmovb
pop
or
and
xchg
popa
mov
popf
adcb
aas
rcll
repz
cmpsl
mov
clc
std
mov
clc
call
mov
cltd
mov
in
shlb
xchg
shrb
and
push
pop
pop
inc
in
or
push
in
mov
xor
call
mov
fsubrl
xchg
dec
sub
cmp
loopne
popa
jecxz
cltd
mov
sbb
mov
test
xorb
pop
out
inc
dec
fisttpl
pop
je
adc
or
test
pop
and
imul
lods
jns
inc
int
fimuls
insb
test
movsl
mov
dec
ss
mov
jbe
call
jmp
add
lret
mov
std
stos
sbb
inc
pop
fwait
push
test
je
sbb
xor
out
inc
mov
sbb
data16
mov
mov
add
add
pop
dec
daa
fnstenv
adc
lcall
sub
fildl
data16
int
adc
out
js
sub
shlb
push
mov
divb
aad
jecxz
xor
push
imul
fs
jnp
cwtl
jge
scas
sub
pushf
ror
add
lret
ret
jno
cmp
iret
jae
shll
adc
push
jo
inc
add
out
fbld
dec
push
or
cmp
pop
push
das
int
movsb
xchg
test
lret
pop
dec
sub
test
pop
fwait
sbb
sub
in
aam
sub
inc
and
sti
mov
push
test
leave
xor
loopne
pop
or
and
and
pop
jns
insl
aam
cmpb
mov
push
shll
cmpsl
inc
addr16
pushf
inc
push
test
stos
xlat
cltd
mov
jp
lods
and
push
jle
mov
outsb
xchg
xor
gs
sub
mov
fs
add
leave
mov
test
push
or
sub
add
sbb
dec
insb
fs
jp
push
adc
inc
outsb
mov
and
mov
or
pop
pop
mov
daa
inc
imul
push
xchg
cmp
testl
fs
add
dec
sbb
xchg
pusha
push
and
sub
mov
dec
sbb
fwait
mov
inc
cmc
ror
fidivrl
cmp
inc
adc
cmp
mov
test
adc
adc
sbb
dec
fsubrp
movb
lcall
pushf
cmc
xor
cwtl
jns
mov
stos
lods
loope
ficoml
addl
dec
call
imull
das
and
push
in
js
nop
hlt
mov
iret
out
xor
das
aam
cwtl
imul
mov
ss
repz
add
pop
popf
jno
mov
hlt
loope
add
lcall
sbb
lret
mov
insl
xchg
jge
into
and
stos
aad
or
mov
adc
movsb
maskmovq
sbb
or
add
in
mov
div
cmc
mull
cmpsl
cwtl
mov
cs
pop
popa
inc
add
loopne
ds
mull
sbb
insb
push
inc
or
push
xchg
shll
fcmovnu
repnz
mov
push
mov
push
pop
sub
or
mov
mov
mov
pop
cmp
adc
push
neg
jg
sar
xchg
cmp
sub
mov
push
xchg
das
or
or
es
sub
arpl
push
push
sub
adc
or
aad
mov
mov
xor
push
dec
dec
mov
sbb
pop
mov
inc
call
cmpsl
dec
adc
cmp
adc
xchg
or
std
mov
loop
pop
fs
shl
lea
mov
nop
cmp
mov
add
nop
add
mov
out
inc
mov
dec
fbld
inc
loopne
icebp
int
in
loop,pn
syscall
push
out
mov
pop
xor
mov
hlt
rcrb
mov
out
jbe
stos
bound
pop
dec
lea
and
pop
call
jae
cmp
daa
cwtl
into
xor
fdivrs
shrb
or
out
xorb
mov
cmp
inc
mov
scas
fisttpll
xchg
jns
pushf
in
popw
dec
sbb
adc
pop
scas
out
popf
mov
adc
mov
xor
add
cld
mov
mov
rcll
icebp
or
pushl
add
sahf
rorl
insl
dec
jae
adc
sub
jb
push
pusha
sub
xchg
mov
test
in
in
adc
pop
mov
push
dec
mov
and
jmp
lds
mov
jns
stos
imul
ret
in
iret
aas
sbb
jg
mov
pop
pop
in
mov
shlb
lds
lods
mov
inc
pop
mov
lcall
jge
bound
and
inc
int
xchg
xchg
dec
addr16
das
mov
jl
and
dec
pop
sbb
jl
nop
es
in
int
je
sub
sbb
test
xor
xchg
xchg
loopne
fnstenv
js
sub
xor
movsl
ds
xlat
inc
aad
xor
pop
mov
in
fldcw
jle
xorb
popa
idivb
lock
sahf
imul
adcl
xchg
dec
shl
jg
jmp
cmp
fidivl
push
ds
cmp
xchg
iret
push
pop
fbstp
lods
xorl
dec
ljmp
je
pop
pop
pop
cs
pusha
mov
xorl
sbb
mov
movsl
jmp
add
push
sahf
addr16
xchg
xchg
mov
sub
sti
and
lock
push
lock
mov
int
mov
pop
int
jmp
or
std
push
sarl
stos
iret
pop
jnp
mov
inc
in
jno
sub
lcall
sbb
push
movb
pop
and
call
ja
stc
enter
out
sub
sub
mov
stc
dec
jbe
inc
lcall
fwait
sub
popa
bound
xchg
lcall
inc
cmp
sbb
jnp
hlt
es
mov
and
je
push
clc
cmp
fiadds
ja
cmp
inc
mov
mov
mov
lock
movsb
inc
jge
add
xchg
out
sbb
testl
add
cmp
fmull
nop
xor
mov
test
lods
lods
sub
and
dec
sbb
pop
add
js
addr16
sbb
test
push
in
sbb
or
adc
cmc
inc
push
xchg
xchg
push
mov
fstpl
movsl
jg
cli
imul
inc
in
add
shrl
ffreep
xchg
xlat
dec
iret
jp
out
punpcklbw
lahf
jb
mov
adc
lock
pop
sbb
cmp
cmp
out
aam
in
ljmp
stos
jnp
xchg
aad
out
and
jo
test
sbb
inc
aas
gs
adc
push
sub
jno
inc
dec
and
data16
movsl
adc
das
mov
push
aas
iret
or
cwtl
sbbb
cmp
push
xchg
lds
push
jo
pop
test
push
or
fdivrl
inc
mov
cli
or
sbb
pop
movsl
leave
fildl
scas
or
test
mov
shrl
lock
movsb
or
ret
cwtl
mov
je
shl
loope
mov
pop
pop
push
ret
mov
mov
pop
std
js
add
add
or
dec
aam
add
and
xchg
mov
adc
cmpl
mov
mov
and
in
fsubrl
in
inc
pop
sbb
mov
or
inc
cmpsl
int
jg
pop
int3
pop
xchg
iret
or
mov
lret
mov
adc
cmp
xchg
jno
mov
pop
sub
xchg
adc
cmp
inc
sub
mov
andl
outsl
mov
xor
in
sub
notl
add
fnsave
add
out
cmp
and
frstor
fdivl
xchg
push
daa
lea
xorl
mov
cmp
pop
fwait
lock
inc
and
cmpsl
inc
test
jecxz
aas
cltd
arpl
pop
js
mov
xchg
pop
jae
add
jb
fs
gs
mov
mov
mov
out
sub
sbb
and
push
jmp
sbb
stc
test
inc
sbb
jne
dec
stos
and
jns
add
mov
fbstp
add
in
fldl
icebp
adc
pop
fisubs
iret
push
in
es
out
scas
add
jno
and
les
or
sub
push
lea
pop
inc
jecxz
js
dec
adc
mov
shrb
loopne
jo
push
mov
mov
jnp
inc
mov
sub
xchg
inc
lahf
icebp
mov
pop
movsl
pusha
icebp
xchg
fxch
cmpsb
daa
cmpsl
push
dec
push
insl
mov
pop
lahf
ret
and
adc
imul
xor
or
dec
inc
push
cmp
mov
jle
testb
pop
mov
push
adc
in
pusha
data16
nop
ret
xchg
dec
iret
lret
xchg
mov
pushf
jne
adc
or
push
lea
adc
lds
stos
mov
push
dec
pusha
imul
cmp
addl
rcll
jbe
adc
add
outsb
rorb
insl
inc
call
mov
pop
pusha
sbb
or
fisubrs
jg
push
jno
mov
pop
push
xor
int3
lret
mov
enter
inc
pop
fnstenv
ss
mov
add
hlt
cli
cld
jb
iret
test
lds
push
ficoml
mov
notb
mov
lock
shlb
mov
add
daa
ja
fbld
dec
bound
xchg
enter
enter
aam
xchg
std
pop
mov
jns
inc
test
leave
aam
outsl
ljmp
or
dec
cmp
cmp
xor
xor
shrl
or
jl
nop
loop
cmp
ds
inc
sub
and
fimull
mov
jne
pop
adc
pop
mov
ficoms
pop
dec
lods
andb
vpsllq
or
dec
adc
sbb
fnstsw
and
adc
jb,pt
pop
mov
cmp
mov
ficoml
xchg
cmpsl
jbe
pop
sub
cmp
imul
or
xchg
inc
out
rcr
xchg
fsub
jo
pop
add
cmp
lds
pop
dec
pushf
push
pop
out
loope
pop
ficoms
js
int
mov
lret
andb
dec
dec
lock
int3
jno
mov
xor
dec
sbb
pop
out
ss
sbb
mov
or
xor
shlb
xorb
xchg
mov
push
ljmp
mov
aad
push
iret
fistps
sub
pop
cmp
cmp
jne
nop
cmp
fldcw
push
mov
add
rclb
stos
outsl
loop
ss
jnp
js
insl
dec
adc
and
test
fcmovbe
push
jbe
lret
sub
out
add
jns
pop
leave
cmp
hlt
aas
stos
dec
inc
loope
xlat
push
inc
sahf
jno
or
xchg
inc
mov
add
cltd
xchg
xchg
mov
jnp
inc
xor
push
xchg
insb
cmp
jl
mov
subb
mov
cmc
inc
mov
imul
xor
jge
mov
hlt
jle
mov
push
ljmp
icebp
cltd
data16
xchg
outsl
mull
jp
mov
push
push
lret
fmulp
cmpsb
add
cmp
mov
mov
hlt
cmp
pop
pop
lds
add
or
pop
movsb
jb
insb
xor
inc
fwait
lds
fstps
test
nop
inc
mov
xor
ss
hlt
add
dec
imulb
ret
std
shr
or
xchg
ds
xchg
stos
mov
repz
lret
int
out
xor
mov
adc
out
out
sbb
sbbl
out
and
sahf
jno
mov
cmp
in
mov
push
lock
xchg
sub
outsb
iret
fwait
std
pop
aam
std
mov
sbb
xchg
pop
push
push
jle
mov
jecxz
sahf
cmp
push
push
pop
adc
lods
xor
pop
lds
inc
dec
ljmp
xor
mov
dec
jle
cmp
xor
push
ds
adc
mov
and
mov
sub
out
mov
sub
adc
out
fwait
lret
push
push
inc
or
cmpsb
jmp
hlt
cmp
add
mov
mov
cmp
and
lock
cltd
insl
xchg
adcb
stos
pop
hlt
in
push
xchg
mov
sbb
repnz
lahf
in
jae
add
sub
push
cmp
sub
flds
shl
ljmp
sub
fdivrp
sbb
sbb
cmpsb
andb
pop
fstl
lret
sbb
inc
jge
cld
mov
out
dec
add
inc
pop
inc
and
pop
xchg
mov
dec
push
in
cmpsl
test
in
lcall
out
sub
cmp
sbb
and
jbe
or
test
rclb
dec
imul
adc
jg
jg
or
or
sub
mov
lret
mov
outsb
adc
mov
das
pop
int3
dec
loope
call
sub
in
cmp
mov
repnz
jb
mov
jb
cwtl
xchg
cli
lea
sbb
add
ss
xchg
scas
fimull
adc
ja
inc
push
cmp
mov
or
arpl
das
push
rcrb
cwtl
xor
negl
fists
or
dec
mov
insl
in
stos
cmp
xchg
fimull
enter
cmc
push
aaa
mov
popa
sti
xchg
nop
pop
pop
sahf
clc
xchg
int3
or
mov
adc
insl
in
stos
push
ljmp
or
mov
test
testb
or
adc
cmc
pop
mov
testl
loop
sbb
scas
push
mov
lret
mov
int
ja
in
test
dec
sbb
inc
out
cs
out
cmp
mov
or
rcrb
mov
ret
xor
or
lods
inc
outsl
bound
or
push
xchg
mov
aas
testb
bound
jecxz
testb
mov
push
jle
and
lods
mov
push
imul
jnp
mov
mov
adc
pop
pop
out
add
fst
or
pop
mulb
mov
jg
fwait
cmc
lahf
into
js
jp
rorl
ds
dec
movsl
mov
les
out
aas
hlt
imul
mov
in
js
mov
ss
repnz
daa
js
adc
cmp
cwtl
sub
dec
or
repz
mov
xchg
or
orl
cmpsl
fstps
out
test
jo
and
lea
dec
aam
lods
xchg
dec
add
ficoms
enter
enter
testl
jne
cmpsb
push
xor
sbb
outsl
xor
cs
mov
adc
sbb
lcall
cli
xchg
loope
push
insl
out
sbb
fimull
lahf
inc
jb
aad
test
or
jg
push
or
std
sbb
push
sub
incl
lods
and
or
shlb
div
dec
adc
push
rorb
rcl
xchg
arpl
insb
imul
jge
lcall
xchg
mov
in
sbb
xchg
popa
cld
pusha
or
add
sub
sbb
inc
rcl
popf
lcall
adcb
xlat
dec
mov
cmp
cwtl
jo
add
sbb
fmull
repnz
push
lcall
outsl
add
cmpb
scas
outsl
cmpsl
test
divl
rolb
call
arpl
jbe
xor
rolb
lcall
jns
mov
decb
iret
sub
mov
test
jp
in
lods
sub
inc
aad
pop
xor
or
jle
imul
jne
add
and
jmp
mov
pop
xchg
jg
inc
pop
inc
test
mov
sbb
mov
negl
mov
loopne
lret
sbb
add
mov
jmp
lods
sbb
inc
mov
cmp
push
out
mov
clc
in
xchg
xlat
jle
mov
adc
or
pop
imul
clc
mov
xchg
icebp
out
xor
rcrb
add
arpl
jp
mov
add
push
pusha
repz
rorb
mov
fwait
movsl
std
adc
mov
into
add
cmovno
add
pop
jno
cmp
rcrl
insb
bound
imul
xchg
pop
bound
mov
fistpl
xchg
scas
pop
rcll
or
out
push
scas
sub
aaa
sbb
mov
icebp
pop
sub
and
psrlq
into
outsb
adc
push
cmpsb
or
sub
sbbb
lds
inc
fwait
jno
jg
es
xchg
adc
mulb
pusha
push
sahf
jno
jb
out
divb
subb
lcall
scas
ffree
stos
fistl
push
cmp
xchg
fildll
mov
sub
pushf
dec
jg
mov
sub
inc
cmpsl
xor
mov
arpl
adc
push
lods
mov
ja
in
xor
addr16
movsl
push
fdivl
lret
fdivp
sub
std
popl
push
jge
or
icebp
mov
xor
jno
or
mov
dec
es
test
jmp
addl
inc
xor
xchg
dec
push
or
dec
repnz
push
int3
mov
xchg
mov
jne
ror
xchg
punpckhdq
lods
in
push
pushfw
stos
jo
cltd
roll
ljmp
repnz
jmp
addb
sbb
xor
adc
mov
or
jae
adc
add
mov
mov
pushl
outsl
xor
enter
cs
cmp
xor
dec
cmp
ret
inc
mov
testb
mov
xchg
sbb
cld
icebp
in
in
pushf
pushf
shrb
mov
lcall
mov
enter
movsl
mov
lret
dec
nop
or
sbb
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
ja
mov
incl
add
add
arpl
or
add
add
add
add
adc
add
add
add
add
js
push
add
add
push
add
insb
xor
popa
add
add
add
mov
add
add
add
add
add
add
add
and
js
add
pop
outsb
push
jae
jae
dec
add
scas
push
and
add
xchg
ljmp
sbb
adc
mov
pop
adcl
test
add
dec
test
xchg
or
adc
adc
add
push
incl
cld
or
add
test
push
push
decl
add
add
leave
sub
jmp
add
mov
add
xor
add
decb
je
push
out
loopne
decl
lock
inc
dec
add
lock
push
add
incl
adc
call
adc
inc
filds
enter
inc
call
lea
clc
push
adc
add
add
add
mov
pop
add
add
sbb
sbb
sbb
sbb
sbb
pop
add
add
add
pop
insb
add
inc
add
gs
dec
inc
add
insb
add
fs
inc
gs
dec
outsl
gs
jmp
gs
insb
insb
add
mov
jns
insl
inc
add
add
outsl
in
insb
dec
insb
jb
lret
dec
add
add
add
add
adc
add
add
add
add
add
into
add
xor
add
add
add
add
add
push
lods
je
adc
xor
ja
in
xchg
hlt
outsb
cmp
int
jbe
out
dec
mov
mov
ss
xchg
adc
lock
adc
cwtl
mov
roll
mov
int3
imul
xor
sbb
fs
out
sbbl
rorb
ja
pop
mov
cltd
push
or
jp
das
jmp
cmp
faddl
test
pop
jp
jnp
ds
cs
inc
pop
push
mov
cmpsb
repnz
mov
cwtl
adc
loopne
test
jg
lock
push
and
int3
adc
mov
insb
push
popa
cmpsl
sbb
data16
loopne
xchg
add
mov
aam
xchg
mov
test
xor
call
iret
test
mov
scas
jo
or
sbb
mov
movsl
je
mov
dec
sbb
pop
or
sub
imul
sarb
stos
dec
repz
pop
dec
pop
xlat
lock
stos
dec
iret
nop
mov
lock
out
cmp
mov
jmp
and
xchg
aam
add
sbb
mov
push
sub
rol
jg
dec
xchg
arpl
push
mov
inc
subl
dec
sub
mov
mov
lret
daa
mov
icebp
stos
and
es
in
out
add
pushf
subb
aas
add
ret
in
sarb
mov
pop
add
jmp
loop
ss
ljmp
insb
enter
push
imul
hlt
fstp
jae
mov
pop
add
pop
lods
or
mov
push
aaa
push
lret
lret
cs
xchg
out
movsb
push
or
sarb
sub
add
jne
jo
sub
jno
push
push
sub
lea
mov
push
dec
dec
and
cmp
inc
inc
mov
out
sbb
aaa
sub
xlat
dec
stos
movsl
in
clc
add
cmp
push
cs
mov
popa
out
push
lcall
fsts
lock
aam
dec
stc
rcrb
inc
fs
or
stos
or
adc
jmp
ss
addr16
popf
test
mov
sub
jbe
xor
out
xchg
out
ret
jno
xchg
hlt
push
sbbb
push
jne
adc
sbb
dec
jb
leave
cmp
push
or
call
les
or
pop
shrl
mov
dec
fnsave
jae
sbb
arpl
enter
lods
mov
out
testb
repz
dec
outsb
fs
dec
add
roll
push
loopne
cmpsl
sub
inc
and
lcall
adc
aaa
aaa
lahf
cwtl
or
inc
int3
es
xor
addr16
mov
sahf
sbb
sbbb
rcrl
lret
lock
es
out
sbb
leave
std
lahf
mov
xor
mov
and
pop
push
sahf
push
inc
xor
fs
insl
repz
jmp
movsl
into
lods
nop
loope
test
inc
hlt
xchg
jnp
pop
loope
dec
out
mov
xor
mov
out
subl
xor
mov
mov
mov
inc
scas
pop
pop
xchg
nop
cmp
rclb
movsl
cs
cmp
movsb
ds
int3
insl
es
jmp
add
addr16
lret
fstl
dec
jmp
jae
adc
jmp
inc
std
mov
sti
int3
fsubrp
mov
cmpsb
call
mov
aam
jge
scas
notl
xchg
dec
xchg
aad
push
mov
cmpsb
sub
sub
aaa
mov
jns
lods
int
push
mov
repz
push
push
pop
lcall
sub
lods
mov
mov
pusha
inc
adc
outsb
out
push
daa
movsb
jns
jg
pop
dec
pop
sub
xchg
sub
jnp
daa
idivb
test
cld
inc
repnz
lret
movsb
dec
loopne
rorb
ja
adc
adc
xchg
push
xchg
jmp
xor
fisubrl
inc
jnp
cs
xchg
into
mov
cltd
mov
dec
or
or
pop
jno
push
add
not
aad
inc
xchg
cmp
cmp
push
sti
jno
filds
xchg
jp
xchg
jp
pop
loop
cwtl
adc
cld
jno
sbb
xchg
fisttpl
xlat
jl
cmpsb
add
jnp
xchg
cmpsb
pop
mov
fdivs
jbe
dec
dec
dec
fwait
ret
jnp
jp
dec
lods
aaa
mov
cmpsb
sub
mov
mov
adc
push
arpl
sbb
adc
mov
ret
jge
mov
cmp
or
aaa
mov
cmp
mov
adc
stos
push
sub
in
enter
aad
jne
sbbb
jb
imul
sub
shl
jbe
out
xor
scas
or
in
and
movsb
push
insl
and
aam
sub
out
pop
push
imul
test
data16
jno
or
js
or
push
jle
push
push
cmp
mov
mov
adc
dec
cmp
xor
les
aam
in
cmp
and
jle
pop
inc
cli
dec
mov
xlat
jg
add
movsb
scas
sub
inc
or
jne
pop
stc
cmc
adc
call
xor
bound
xor
mov
out
pop
lret
mov
sbb
stc
mov
pop
mov
and
and
loop
popf
push
test
call
mov
aad
lea
test
xchg
addr16
adc
xor
pushf
rolb
dec
outsl
inc
clc
add
cmp
je
aad
or
dec
mov
scas
xor
dec
xchg
dec
pop
es
stc
js
out
adc
mov
cwtl
jb
mov
mov
test
cmp
shlb
adc
enter
sub
mov
mov
ret
xlat
sbb
cmpsl
jecxz
inc
xchg
outsb
or
ficomps
mov
push
gs
jg
push
push
sets
cwtl
mov
and
inc
and
movsl
xor
sti
pop
push
out
sub
mov
mov
out
add
xor
hlt
shll
sub
addr16
dec
adc
cmp
hlt
cmp
jp
mov
xor
ret
mov
arpl
stos
test
sbb
lods
int3
cmpsb
push
mov
inc
xchg
add
insl
pop
xor
jl
stc
xchg
adc
inc
pop
jle
mov
cmp
mov
sbb
sti
jbe
pushf
stos
mov
mov
xchg
nop
int
in
outsl
push
scas
in
and
mov
stos
pop
dec
ret
inc
enter
pop
popa
add
cmp
inc
lret
dec
into
dec
push
inc
cld
cltd
xchg
xchg
pop
adc
js
fmul
sbbl
xlat
rcrl
dec
aaa
in
jp
cltd
push
insl
jmp
or
std
je
push
xchg
mov
pop
sub
je
in
shll
push
outsl
std
jae
popa
add
pop
int
push
lock
mov
push
sbb
adc
jne
outsb
jnp
jmp
mov
sub
jbe
inc
inc
loop
jbe
dec
lahf
push
push
mov
fsts
iret
dec
mov
mov
dec
dec
cmc
adc
test
pop
dec
sbb
adc
sbb
xor
lahf
les
push
adc
aad
pop
push
imul
outsl
mov
adc
inc
call
mov
xchg
push
and
sub
adc
push
jp
lahf
lea
out
int3
pusha
cli
inc
pushf
jns
into
jle
jge
mov
repnz
icebp
cltd
cmp
cmpsb
push
mov
hlt
xchg
nop
sub
jmp
jp
popa
into
pop
xor
stc
push
mov
call
leave
int
test
pop
mov
add
mov
mov
mov
pushf
adc
inc
es
jge
js
xchg
stos
xchg
stos
cwtl
lds
and
aas
jge
sbb
int3
pushf
mov
mov
gs
scas
inc
xor
or
or
lea
pusha
mov
dec
ret
push
sub
pop
es
addr16
jmp
cmpsl
ljmp
jno
fcomps
shl
lahf
addr16
xchg
in
mov
int3
out
push
fsubrs
or
dec
mov
loopne
lods
outsl
mov
and
js
call
fdivrp
pop
dec
lock
xor
cmc
shlb
sbbl
loop
jnp
jnp
adcb
adc
mov
mov
add
aas
sub
pop
jg
sub
sbb
push
ss
loop
shrb
fcmovne
ljmp
jno
aad
cli
mov
sub
inc
dec
mov
loopne
inc
arpl
in
in
jecxz
lds
or
popf
and
mov
mov
jo
pop
cmp
cmp
xor
pop
pop
dec
pop
sahf
xor
inc
popa
sub
fisubrs
popa
xchg
imul
inc
inc
bound
sub
or
and
mov
adc
dec
or
stc
push
subl
outsl
stc
jno
cmp
inc
call
dec
adc
rcr
lret
jle
mov
cwtl
pushf
fmul
mov
push
pushf
je
call
lret
xor
xor
pop
inc
mov
sub
pop
outsl
fstpt
jg
out
xchg
out
pop
push
incl
fs
and
fstpl
jecxz
hlt
pusha
loope
mov
mov
push
adc
xor
and
addr16
mov
dec
sub
lock
outsl
out
mov
scas
and
lods
push
test
inc
mov
jg
clc
pop
mov
adc
and
imul
sub
xchg
push
cmp
xchg
sbb
lret
loope
lret
insl
sbb
stc
rclb
sub
repnz
sbb
cli
addr16
insl
xchg
jns
push
push
dec
mov
out
jne
mov
push
mov
sub
mov
add
out
inc
jne
mov
leave
mov
adc
pop
je
xchg
pusha
insl
ds
addr16
xor
gs
lahf
mov
and
sbb
jg
cmp
pop
outsl
mov
sub
pop
xchg
add
fildl
lret
out
out
fistpl
push
mov
mov
xchg
sbb
out
mov
and
mov
outsl
andb
xchg
stos
test
scas
nop
push
jnp
call
insb
aas
insb
pop
outsl
mov
pop
mov
pop
add
packsswb
cmpsb
and
pop
bound
dec
add
and
in
cmp
inc
inc
pop
mov
nop
pop
fwait
incb
mov
pusha
mov
mov
movsb
push
sbbb
or
aaa
outsb
jecxz
call
add
jb
mov
add
xchg
ljmp
sti
jle
adc
data16
rorl
mov
mov
xor
jmp
pop
lea
sub
jo
jo
outsb
cli
ds
xor
popa
or
fstps
jbe
dec
pop
xchg
add
inc
mov
push
inc
dec
cmp
inc
in
mov
cs
pushf
out
ret
lret
adc
stos
mov
mov
xchg
pop
push
enter
and
xchg
into
and
xchg
xor
cmpsb
mov
testb
ret
push
inc
pop
add
in
mov
push
loop
es
in
or
xchg
stc
dec
pusha
lahf
sbb
stos
mov
out
stos
pop
or
xor
fcomi
testl
aaa
testb
rcll
repz
mov
rcrl
into
pusha
mov
fcmovnu
pop
outsl
and
mov
sbb
sub
or
and
mov
dec
ret
stc
push
or
xchg
js
lret
pop
daa
xchg
mov
dec
jno
cmp
mov
mov
inc
pop
jnp
sbb
cli
jmp
push
push
inc
shr
scas
ljmp
lret
icebp
in
inc
dec
pop
outsb
pop
mov
test
dec
fsubs
scas
mov
fucomip
dec
or
stos
push
ret
movsb
dec
inc
lret
fmull
add
add
push
lods
icebp
xlat
arpl
xor
xchg
enter
pop
lret
insl
xchg
or
sbb
mov
add
les
in
mov
and
cs
out
scas
lea
stos
js
repz
or
fdivrs
mov
enter
out
iret
jmp
push
or
xchg
outsb
and
movsl
xor
mov
out
adc
and
stc
lret
les
xchg
xor
ja
jo
adc
and
sarb
movsb
sbb
or
imul
iret
mov
cmp
xchg
roll
lret
clc
sbb
insl
push
mov
scas
jp
dec
mov
cmc
lret
mov
cmpsl
scas
ficoml
jo
test
shlb
inc
sarb
sarl
dec
shr
leave
fs
add
loop
mov
mov
fwait
in
fstps
dec
mov
insl
dec
dec
mov
dec
js
dec
das
push
xor
xchg
lahf
outsl
cmp
xor
call
subl
inc
push
enter
imul
sarb
xor
rcll
repnz
sbb
cmp
cmp
scas
cmp
stos
mov
les
xchg
mov
mov
hlt
mov
ja
test
mov
adc
pop
jb
add
addr16
aaa
repnz
or
cmc
dec
aad
mov
pushf
push
jge
and
lahf
sbb
mov
stc
call
xchg
jae
rcl
add
or
push
shll
imul
ss
adc
or
xor
sbb
inc
jmp
es
xchg
out
mov
in
xor
and
hlt
jmp
mov
mov
stos
adc
mov
aam
hlt
movsl
aaa
in
jmp
insl
test
jmp
or
adc
mov
in
adc
aam
lods
inc
stos
add
mov
sbb
sub
inc
jbe
mov
mov
sub
and
add
fs
stos
xchg
sub
cs
sbb
pop
fists
xlat
ret
ret
fwait
mov
add
mov
push
or
mov
cmp
inc
push
lods
mov
in
add
sbb
xchg
into
jno
cs
sub
cmc
stos
mov
loope
mov
cmpsl
dec
aad
or
jne
mov
cmc
nop
inc
lahf
sbb
aam
xor
cmpsb
mov
daa
fsubrs
mov
lods
in
les
xlat
imul
popf
ds
imul
adc
or
repz
imulb
repz
or
rclb
in
jne
sbb
xchg
add
xor
sahf
push
daa
rol
mov
bnd
das
repz
jmp
cmpsl
dec
mov
bound
dec
push
and
frstpm(287
push
ds
cmovle
ret
or
add
pop
jp
add
push
mov
popa
imul
out
lock
rorl
mov
pop
mov
cmpsb
cmpb
sahf
sbb
pop
fs
xor
pop
inc
and
hlt
pop
cltd
fstpt
scas
and
dec
js
mov
addr16
adc
call
lcall
push
ljmp
cli
fsubl
mov
sbbl
sbb
lods
or
call
inc
hlt
xor
xlat
sbb
lods
jge
cld
or
subl
push
xor
cmp
mov
inc
popf
gs
and
inc
into
leave
es
ljmp
add
mov
add
aas
imul
pop
adc
jl
pop
cmpl
push
loopne
or
xor
test
pop
imul
adc
sub
cmp
out
mov
fcmovne
shrb
mov
mov
jmp
movsl
add
clc
mov
idiv
insl
push
mov
mov
imul
in
pop
popf
pop
mov
sbb
rorl
cmp
shlb
stos
sub
dec
aaa
out
push
mov
mov
jmp
xchg
adc
pop
xchg
ljmp
add
sbb
push
push
das
mov
cltd
inc
clc
and
mov
push
adc
pop
push
mov
mov
jbe
inc
shlb
jmp
sbbl
pusha
inc
sbb
stc
push
and
xchg
mov
pop
push
mov
outsb
jle
dec
mov
aam
lret
jnp
push
gs
xchg
xor
out
inc
inc
test
xor
mov
pop
gs
pop
sub
mov
outsl
aaa
mov
sahf
jp
sbb
and
insl
scas
leave
ficoms
fisubl
ja
mov
mov
int
xchg
mov
outsb
in
popa
adc
push
or
sbb
and
inc
test
pop
cmp
adc
out
sbb
jl
scas
fs
out
aaa
inc
rcrb
dec
xchg
jnp
and
pop
lret
gs
cmp
rcll
test
push
mov
dec
xchg
mov
mov
push
js
fs
inc
mov
call
popa
dec
pop
xchg
orl
daa
push
mov
mov
popa
mov
or
sub
mov
cwtl
adc
add
adc
push
in
xor
or
insl
mov
in
push
mov
fidivrs
into
clc
cmp
fisttps
std
lods
or
addr16
insb
lds
imul
aam
lahf
or
sbb
in
sbb
out
call
add
inc
test
flds
push
adc
mov
std
lahf
bound
mov
test
pop
sti
xor
rorb
ljmp
mov
jle
cmpl
movsl
or
arpl
inc
jp
int3
inc
cmc
push
leave
xchg
jle
mov
mov
into
ret
imul
push
mov
hlt
xchg
in
push
sub
add
das
pop
jl
pop
aaa
xchg
adc
popa
mov
dec
jne
mov
pop
loop
mov
and
into
mov
insb
mov
aas
pop
shll
cmc
mov
push
lods
cmpsb
pop
ljmp
mov
add
adc
pop
jbe
mov
mov
scas
sub
mov
stos
fwait
dec
cs
rep
xor
imul
xchg
stc
shrl
daa
test
les
add
in
mov
add
imul
xlat
or
shrb
push
iret
lods
or
jge
mov
push
push
xor
fs
sub
loopne
sbb
sbb
adc
lds
mov
dec
mov
push
fs
lret
nop
mov
xchg
lods
das
fistpll
dec
xchg
out
push
pop
mov
sti
sub
inc
pusha
test
jno
lds
call
fcomp
out
ss
cs
jp
out
adc
push
test
pop
mov
mov
mov
push
stos
xlat
cmp
cmc
bnd
pusha
xchg
inc
cwtl
call
xor
pop
call
push
jmp
sub
ret
xchg
cltd
jo
insl
in
pop
dec
test
pop
bound
jbe
das
sarl
jmp
mov
je
cmp
jne
hlt
pop
and
orb
xlat
mov
push
or
outsb
mov
das
pop
pop
movsl
outsl
pop
cmp
shll
sub
and
loop
ret
addl
cmp
mov
ret
sbb
push
jbe
movsl
in
ja
mov
jg
enter
int
xchg
or
push
iret
mov
jmp
cwtl
fnsave
sbb
sbb
sti
les
mov
dec
mov
lods
pop
ljmp
mov
push
out
or
mov
pusha
mov
jmp
daa
xchg
dec
sub
insl
in
sti
sub
push
movsl
outsl
cmp
pushf
cmp
fcmovbe
xchg
mov
mov
pop
insl
lock
sbb
aad
mov
fistps
sbb
pop
ss
jge
pop
scas
fcomip
pop
jp
mov
sbb
imul
fsubrs
inc
lea
imul
fucomip
push
hlt
push
mov
push
or
push
and
ds
jno
xchg
add
imul
sub
mov
in
or
dec
dec
leave
add
ds
or
mov
cltd
ror
push
push
jg
daa
xchg
and
ret
jp
mov
stc
into
gs
or
and
sub
cmp
cs
jg
push
loope
ds
push
addr16
adc
mov
adc
mov
pop
pusha
adc
daa
xor
leave
xchg
mov
int3
mov
or
mov
test
aaa
fisubrl
xor
ja
pop
insl
or
mov
jns
mov
arpl
xchg
mov
jne
jp
xchg
aam
leave
dec
dec
lds
pop
lcall
push
inc
stos
outsl
or
lock
ljmp
mov
sub
popf
jnp
mov
xlat
outsb
cwtl
xor
loop
mov
mov
lock
not
dec
mov
fs
mov
ljmp
rcr
call
inc
cmp
outsb
sahf
test
loop
adc
outsb
jl
ss
lret
jne
pop
jnp
fldenv
sub
sub
add
fiadds
add
add
add
add
dec
add
mov
add
add
add
add
inc
add
add
add
outsb
add
roll
add
add
add
add
popa
add
add
add
mov
add
add
add
add
add
stos
stos
add
mov
incl
push
addb
loopne
add
add
add
add
mov
add
popa
testb
inc
add
add
inc
add
mov
add
pushw
add
push
add
add
add
or
imul
outsl
push
jb
add
dec
pop
add
push
lcall
add
sahf
xor
pop
push
lea
add
add
in
push
cld
addb
cmp
push
lea
call
cld
pushl
in
add
push
decb
inc
adc
push
insb
leave
lea
or
in
or
add
adc
add
enter
fcoml
in
add
add
add
popl
incl
fildl
insb
cli
mov
push
incl
incl
jmp
or
cld
pop
mov
and
adcl
inc
rcrb
jp
decl
add
stc
pushl
incl
loopne
jne
add
adc
add
add
add
in
js
add
or
lcall
add
add
add
imul
insb
outsb
add
push
add
je
sahf
gs
jb
outsb
jae
add
dec
add
mov
popa
adc
dec
gs
ja
add
push
jne
popa
push
outsl
jns
outsl
imul
push
insb
dec
insb
push
popa
push
add
add
push
add
mov
add
add
add
push
cmpsb
dec
ret
inc
iret
int3
adc
imul
push
inc
mov
arpl
movsl
cwtl
inc
sub
dec
jbe
shll
cmpsb
enter
sahf
add
outsl
cltd
fstpt
outsb
jge
sbb
jae
hlt
js
push
mov
insb
jne
mov
add
mov
outsb
dec
and
pop
mov
lock
dec
out
or
add
xchg
filds
sub
repz
aam
or
mov
cltd
cmpsl
popf
mov
fidivs
jecxz
xchg
inc
sub
adc
inc
xor
imul
in
add
jne
or
mov
shll
adc
pushf
add
test
add
scas
push
sbb
sub
cwtl
dec
pushf
add
push
rol
add
int
jae
fcoml
scas
sub
aas
orl
push
cmpsl
and
subb
std
dec
xchg
mov
in
and
lret
xor
call
jbe
adc
mov
jbe
imul
mov
daa
mov
xchg
add
lea
mov
jge
jge
jb
sbb
push
outsl
popf
add
out
sbb
es
aad
jge
push
cltd
pop
or
lock
ja
jns
pop
andl
shl
xor
neg
loopne
stc
xchg
daa
sbb
shl
jnp
push
cmp
ljmp
adc
mov
cmpsb
in
out
cmc
cwtl
and
leave
stos
in
imul
int3
lods
lret
push
cltd
imul
fstpt
jecxz
mov
dec
mov
xchg
sbb
fldt
out
adc
add
cmp
jg
gs
sub
fs
push
neg
adc
sahf
cmp
push
sahf
data16
sbb
popa
dec
push
push
mov
pop
mov
sti
imulb
mov
mul
push
movsb
dec
out
inc
jae
and
daa
mov
push
sbb
in
jo
cmp
sub
pusha
dec
sbb
lret
xchg
ja
jge
hlt
fcomp
push
aas
sbb
sti
pop
mov
fiadds
hlt
xchg
adc
pusha
jmp
push
rolb
cli
sub
cs
popa
mov
enter
das
xor
mov
fisubl
data16
sub
and
dec
mov
xchg
jns
dec
arpl
call
inc
mov
mov
push
jmp
inc
push
ljmp
lea
jecxz
add
xchg
cmp
icebp
cmp
and
jmp
es
daa
inc
into
cmp
shll
shrl
into
mov
mov
push
popa
movsl
lret
push
loopne
out
int3
jmp
scas
xor
add
sbb
xorb
jg
dec
dec
jne
mov
ffree
mov
mov
inc
movsb
pop
or
mov
test
fs
xchg
add
incl
push
popa
imul
xor
lds
loope
sub
adc
negl
cmp
pushf
dec
adc
das
sub
out
inc
out
adc
fistps
push
ret
mov
loop
xchg
subl
mov
mov
pop
mov
insl
mov
or
inc
mov
and
vmaxpd
dec
enterw
xchg
add
pop
or
cld
call
leave
cmp
sbb
adc
adc
mov
push
test
jle
and
add
rorl
arpl
or
int
jp
jp
aam
ja
xchg
fwait
mov
xlat
test
sbb
mov
mov
jnp
add
jnp
push
pusha
loopne
clc
adc
push
mov
insb
xor
cwtl
mov
dec
dec
jno
pop
lret
out
ror
xchg
xchg
and
mov
in
cli
popf
in
fs
movsb
sbb
scas
mov
jmp
jge
notl
lods
movsb
mov
fbstp
adc
cmp
in
stos
push
xchg
cs
add
stos
mov
clc
cli
test
and
mov
hlt
into
std
je
push
fwait
call
clc
insb
notb
cmp
sub
and
bound
jmp
sti
push
shrl
xlat
lea
pop
add
movsb
stc
ss
popf
pushf
std
and
ffreep
push
mov
adc
dec
fdivs
sub
test
or
aaa
testl
push
adc
mov
leave
rorb
jb
aam
imul
xor
cmp
stc
test
add
push
cld
pop
inc
gs
adc
int3
jg
lcall
pop
int
dec
xor
xchg
into
xchg
out
loopne
out
rorl
adc
xchg
adc
das
leave
shrl
out
mov
aas
in
pusha
xlat
subb
dec
push
lods
and
fcoms
or
cmp
jg
mov
push
nop
inc
cli
sysexit
stos
xchg
sbb
add
rclb
pop
jno
cltd
sbb
popa
arpl
pop
mov
andl
inc
movntq
xchg
movsb
loopne
adc
int3
and
jno
in
xlat
dec
cli
aam
icebp
mov
or
js
add
pop
cld
mov
pop
or
jg
fldcw
addr16
ja
in
jae
lret
add
xor
lret
scas
fcmovb
lock
fs
lret
gs
sbb
xor
pop
and
adc
inc
fidivs
cmpl
pop
mov
rcrb
sbb
stos
xchg
cld
rcr
ror
je
xor
pop
push
cmc
sarb
out
xor
scas
data16
pop
mov
arpl
ficomps
out
in
mov
je
push
aad
rcrb
out
add
pop
inc
xor
and
adc
pop
pop
sbb
pop
sub
dec
xchg
loop
clc
and
test
sbb
xorb
in
imul
inc
jns
aaa
cwtl
sub
jl
jmp
lds
sbb
or
test
ss
out
or
add
xchg
add
inc
dec
dec
push
xchg
rolb
or
scas
pop
pushf
adc
xchg
cmp
and
push
cmp
out
mov
dec
cwtl
fs
mov
out
test
rorl
testb
std
sub
and
stc
push
call
test
jnp
jne
add
and
fsubrs
divb
mov
mov
or
addb
jbe
in
and
es
in
out
pop
mov
in
std
mov
and
test
inc
add
push
push
aam
pusha
xchg
push
ret
jecxz
test
adc
inc
int
mov
or
push
inc
or
add
pushf
inc
in
pop
mov
cli
dec
test
outsb
scas
xor
dec
ficomps
sub
ficoms
add
out
js
in
cmp
std
paddsw
arpl
movsl
or
cs
or
into
daa
loopne
jmp
push
lods
jae
xor
clc
cmpsb
push
dec
lret
aad
movsl
mov
xchg
mov
sub
das
mov
sub
dec
xor
dec
mov
push
adc
test
fisubs
xlat
adc
mov
insl
adc
icebp
fcoml
or
jmp
mov
jnp
inc
xchg
fdivl
mov
pop
push
stos
jl
lret
push
mov
call
clc
stos
ficoms
je
mov
int
mov
lods
popa
mov
lret
inc
or
jae
imul
stos
pusha
cld
lods
sbbl
pushf
pusha
addb
fdivrs
pop
sbb
push
mov
mov
out
jl
inc
sub
add
or
loope
out
adc
dec
pop
add
mov
call
pop
pop
adc
movsb
movsb
xor
gs
int
jnp
jge
sbb
ljmp
aad
dec
dec
popa
cmp
adc
pop
mov
nop
cmp
jb
je
xchg
inc
dec
fistpl
nop
pop
js
sar
aad
mov
cmp
add
bound
push
adc
cwtl
inc
xor
push
mov
adc
sub
sub
repnz
lret
rclb
and
or
dec
cmp
cmp
dec
cwtl
pop
sbb
pop
push
jge
push
cs
push
push
aam
push
imul
inc
test
sub
cwtl
cmp
xchg
stos
loopne
sti
mov
dec
sbb
inc
jbe
mov
cmp
out
push
pop
hlt
jg
xchg
enter
idiv
mov
pop
lahf
lcall
or
lods
inc
stos
mov
test
mov
fidivrs
mov
idiv
popa
aas
imul
fs
outsb
pop
test
cwtl
sub
jo
xorb
xor
daa
jae
mov
inc
test
or
mov
inc
jmp
mov
mov
cmpsl
dec
fsubl
lods
cli
in
mov
inc
or
shrb
std
pop
insb
daa
xor
int3
xor
push
fsub
push
add
clc
hlt
out
lock
int3
in
pop
xor
or
pop
xor
out
mov
sub
stos
push
sub
cmpsb
mov
xchg
and
mov
lds
xchg
mov
xchg
dec
ficoms
divb
add
dec
jle
test
incl
and
jae
inc
ja
sbb
push
cmc
and
movsb
push
scas
lcall
rorl
pop
xor
ret
mov
mov
dec
xor
data16
mov
mov
push
jge
flds
cmpsb
out
push
loop
jmp
pop
sbb
inc
rcrb
cmc
movsb
xchg
mov
lret
movsb
or
movl
pop
ljmp
inc
mov
push
pop
mov
and
sub
fldenv
rorb
jle
adc
mov
push
test
add
lret
pop
scas
jnp
push
adc
dec
jmp
test
mov
sub
and
arpl
orl
aam
cltd
jge
jecxz
cmpsl
jecxz
and
pop
stos
jp
orb
mov
jge
sub
insb
mov
add
mov
jbe
xor
shr
or
xchg
push
mov
jge
loope
or
movsb
dec
imull
int
sub
adc
jno
mov
les
outsb
jbe
mov
push
adc
or
mov
test
adcb
out
adc
lds
mov
jl
push
push
inc
mov
fisubl
fisttpl
out
ret
insl
loopne
add
ror
ret
mov
rcrb
std
xchg
test
jb
test
jge
mov
jb
lahf
cmpsb
jne
mov
mov
daa
push
shrb
xchg
repz
add
cmp
add
fcoms
movsl
movsl
xchg
andl
pop
and
push
dec
mov
cltd
fwait
imul
and
pop
and
push
rclb
jbe
into
js
in
data16
sbb
loopne
adc
fisubl
xchg
jae
and
inc
cmp
pop
test
and
arpl
push
pop
rorb
pop
jle
push
test
cmp
and
imul
cmp
shl
cmp
sbb
mov
sbb
cmp
sub
rclb
add
mov
addr16
push
cmpsl
push
xor
cwtl
scas
arpl
leave
je,pn
dec
add
xchg
sbb
sbb
sbb
mov
push
push
jmp
popf
sub
add
outsl
pop
fwait
mov
bound
daa
call
xor
adc
sbb
adc
in
adc
es
gs
rolb
inc
fistpl
std
jb
inc
jecxz
push
sbb
mov
push
out
stos
and
gs
addr16
sbb
lods
mov
sub
push
shrb
mov
cmp
jge
in
add
leave
in
enter
pop
mov
jecxz
xchg
in
pop
sub
loopne
sbb
push
sub
sbb
cwtl
cmp
shll
ds
jl
mov
gs
sub
ret
insb
cmp
push
in
out
fs
sbb
or
ja
addr16
nop
cmp
mov
ss
xor
loope
and
mov
flds
cltd
mov
pushf
cld
fimuls
insl
call
neg
insb
out
push
adc
cmp
jg
divl
in
pop
int3
cli
push
in
push
inc
mov
xor
mov
std
loop
push
movsl
imul
pop
stos
xchg
repnz
popl
push
scas
add
inc
hlt
jno
testl
in
mov
ret
out
outsb
sub
and
lods
and
sub
pop
roll
push
push
or
jle
rorl
pop
fadd
js
mov
fcmovnu
pop
aaa
or
repz
jle
cld
jle
imul
data16
jnp
mov
pop
mov
dec
cmpl
call
sub
xchg
sbb
fimuls
jmp
fiaddl
mov
pop
int
fdivl
jns
cmpsb
dec
sub
xchg
int
xor
dec
mov
subb
and
and
repz
sbb
pop
push
movsb
xorb
mov
dec
mov
sbb
loop
imull
sarb
lock
or
inc
bndldx
test
sahf
ss
stos
call
xchg
lahf
iret
ror
mov
xchg
retw
mov
pop
cld
and
cmp
sub
sub
sub
aaa
cwtl
ret
cmp
shl
outsl
push
push
xchg
or
push
mov
adc
jmp
jge
movsl
pusha
add
rorl
das
sub
sub
outsb
lahf
sbb
mov
push
xchg
ds
stos
jmp
shll
ljmp
push
pop
call
jo
out
fwait
jne
mov
sub
movq
idiv
and
nop
test
inc
inc
imul
js
add
cmp
dec
pushf
jl
icebp
fxch
fwait
popf
out
insl
imul
mov
lret
pop
ret
jg
aad
test
subb
jp
xchg
add
sbb
outsl
push
mov
xchg
testb
sbb
pop
jle
mov
loop
push
enter
outsl
jecxz
scas
movzwl
arpl
mov
xlat
adc
testb
pop
mov
insb
push
das
mov
cmp
stos
xchg
push
out
jge
mov
xlat
sbb
xchg
add
loopne
dec
adc
bound
jbe
fwait
movsl
aas
jbe
lds
icebp
imul
test
jmp
add
pushf
les
out
call
sbb
rcll
andb
adc
xchg
push
dec
sbb
ljmp
pushf
and
mov
mov
mov
loope
pop
push
dec
in
jno
add
bound
inc
xor
sbb
jae
ljmp
pop
iret
cli
jecxz
daa
test
mulb
push
sbb
mov
nop
push
orl
out
shlb
jns
xlat
aaa
aas
push
ljmp
or
test
xor
jnp
insl
or
imul
push
xchg
sub
or
cmp
jmp
and
pop
pop
inc
pop
push
push
mov
sub
jle
sahf
mov
mov
call
sub
and
cmp
xchg
push
stos
mov
inc
loopne
xor
sub
sbb
mov
insb
sahf
cmp
cli
adc
push
pop
testl
jnp
dec
dec
xor
jo
mov
jnp
mov
aas
push
add
xchg
sub
ret
mul
pop
lods
xchg
inc
xlat
inc
xor
mov
xchg
adc
lahf
push
add
ja
cli
mov
sbb
out
xor
movsl
aam
push
iret
mov
int3
out
cs
pop
ja
hlt
cltd
ret
stc
dec
fmul
xchg
cmp
jb
pop
xchg
mov
inc
mov
push
jno
in
and
mov
inc
aas
dec
dec
mov
adc
pop
mov
ror
fcmovnb
jo
shlb
daa
sbb
mov
dec
dec
lock
dec
push
adc
pop
pop
scas
jg
jno
cmp
and
popf
mov
jmp
jl
aam
movsb
outsl
test
inc
sbb
icebp
lea
lahf
sub
lods
js
das
cmpb
inc
and
mov
addr16
mov
mov
and
cwtl
ds
pop
or
scas
dec
xchg
pop
cmp
out
jge
imul
xchg
pop
sub
int3
sub
or
lea
rcrb
add
in
mov
push
cmpsl
faddl
incl
je
cmc
xchg
mov
push
or
mov
out
clc
nop
sbb
inc
inc
push
and
movsb
xchg
sahf
push
rcrl
pushf
jp
inc
lret
jg
mov
add
mov
pusha
mov
test
cld
dec
popa
jmp
and
add
mov
or
adc
sub
jo
mov
sub
inc
cmp
mov
jne
repnz
icebp
mov
mov
rorb
dec
inc
ficoml
mov
ret
mov
push
lcall
add
fs
data16
ljmp
leave
gs
jle
data16
mov
mov
loopne
sub
mov
pop
add
into
clc
cmp
fsubrl
mov
inc
pop
and
mov
in
or
add
in
mov
test
into
lds
mov
adc
aaa
shll
mov
aam
mov
clc
jbe
dec
js
mov
arpl
fcoml
push
mov
sbb
testb
pop
mov
xor
push
and
push
xchg
repnz
leave
mov
outsl
jnp
sub
nop
lock
stos
stos
dec
lods
pop
xchg
jp
push
pop
dec
mov
xor
pop
ffree
lea
mov
adc
mov
leave
add
jge
shlb
in
cmp
jg
popa
aas
adc
and
int
scas
aaa
mov
push
pop
fsts
ljmp
push
lcall
mov
sahf
or
fcmovne
test
jno
inc
scas
xlat
enter
insb
add
jg
sbb
mov
pop
arpl
pop
inc
pusha
pop
dec
fnsave
jno
cmc
popf
pop
hlt
int3
mov
adc
xlat
and
sub
repz
shll
and
outsl
adc
int3
icebp
negl
add
xorb
mov
add
sub
loop
repz
repnz
xor
ss
mov
adc
fimuls
out
xor
xchg
or
out
out
in
dec
and
add
xchg
and
movb
cmp
sar
dec
or
mov
push
addl
sub
adc
lcall
gs
dec
icebp
in
outsb
xlat
rorb
and
xchg
dec
lods
ljmp
clc
mov
pop
aam
jns
shll
xchg
cld
push
jecxz
jl
jnp
sbb
inc
ja
and
xchg
adc
jo
into
lcall
pop
inc
push
fmul
jecxz
add
lret
jl
cmpsb
cmp
mov
adc
add
jmp
xchg
add
mov
add
pop
push
addb
xchg
dec
jno
lcall
pop
dec
pop
adc
xchg
cmp
cmp
das
xor
bound
add
lea
pop
es
pop
aas
jecxz
insl
dec
stos
fsubs
mov
lods
hlt
sbb
roll
xor
inc
ss
int
in
or
xchg
mov
fmull
push
mov
cmp
popf
jle
dec
out
fwait
sub
jl
scas
and
jle
mov
adc
push
cmp
or
pop
das
push
cmp
shrl
cmp
mov
dec
pop
mov
inc
aam
stos
sbb
inc
aas
dec
push
push
xchg
pusha
pusha
fists
pushf
sub
call
lcall
or
xchg
push
lea
or
xchg
cmp
lret
xchg
aad
int3
jmp
lds
adc
mov
pop
jecxz
repnz
xchg
enter
xlat
test
xchg
je
stc
inc
cmp
push
and
insb
sub
jle
stc
pop
lahf
pusha
add
lret
pop
mov
jbe
dec
out
mov
cmp
stos
sub
mov
test
push
fisubs
jno
rcl
push
test
sbb
imul
ret
repz
push
fmull
mov
sub
js
mov
sbb
shll
loope
pop
rorb
rcll
jle
dec
call
inc
sbb
xor
pop
shll
pop
sbb
jecxz
cmp
jnp
imul
loope
or
jno
out
mov
dec
dec
pop
test
aas
mov
pop
fadd
mov
jmp
cltd
cs
xor
dec
push
nop
cmp
adc
dec
add
and
mov
pop
adc
dec
cwtl
fnstsw
stos
or
pop
in
pop
jb
mov
mov
nop
out
mov
lahf
test
or
xchg
xchg
popf
add
add
add
mov
add
add
add
cmpsb
add
scas
add
add
fiadds
xor
pusha
addb
nop
add
addb
rolb
orb
testb
add
adc
add
call
add
adc
add
addb
add
stos
stos
add
ja
mov
call
in
push
push
push
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
mov
pop
add
mov
mov
cmp
je
cmp
jg
mov
mov
mov
movb
movzbl
sub
inc
test
jne
jmp
mov
movb
call
mov
mov
movzbl
sub
je
incl
jmp
push
push
push
push
mov
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
add
add
add
jb
outsb
inc
or
add
add
add
add
add
roll
enter
add
je
add
and
add
add
outsl
add
inc
loope
add
add
add
cmp
push
add
xchg
fbld
arpl
jae
push
outsl
imul
outsb
add
push
leave
aaa
mov
popa
or
mov
inc
cld
inc
lea
add
dec
mov
mov
incb
inc
std
and
call
add
ret
push
add
add
mov
cmp
lea
rorb
rolb
add
add
push
add
test
popa
decl
xor
inc
incl
adc
incl
orl
clc
call
jge
push
push
incl
push
adc
std
dec
mov
ret
orl
lock
decl
incl
addb
add
push
add
add
fiaddl
addb
add
add
add
sub
clc
add
add
push
je
imul
outsl
adc
inc
gs
add
add
sub
inc
cmpsl
popa
gs
gs
gs
insb
and
js
push
insb
hlt
gs
push
add
add
dec
insb
popa
jne
gs
add
push
insb
arpl
add
add
add
or
add
add
cwtl
add
and
add
add
roll
and
xchg
cltd
enter
int
sub
ficoml
mov
sub
das
cld
mov
mov
cs
sbb
mov
xchg
push
cli
xor
stc
fidivrl
iret
xchg
xchg
out
inc
push
sarl
repnz
add
lods
in
lods
lods
push
movl
rcrb
fdivl
aaa
popf
test
mov
call
into
out
cmp
xchg
mov
ds
mov
imul
mov
sub
inc
mov
fsubrs
addl
xchg
push
jp
cmp
jo
js
add
mov
inc
ret
enter
scas
pop
jecxz
inc
cmp
pop
nop
rclb
xor
dec
push
mov
dec
mov
dec
lcall
insl
stos
hlt
mov
es
loopne
xchg
js
cmc
subps
insb
push
out
mov
pop
scas
xchg
jbe
dec
sbb
add
in
pop
fbstp
popf
call
pop
test
sar
rorl
out
cmp
stos
shll
pop
cltd
pushf
loop,pn
mov
mov
sub
fisubl
dec
pusha
sbbb
push
ds
xor
pop
xor
xchg
gs
mov
jmp
dec
jg
add
and
test
sub
xchg
or
sarl
xchg
xchg
js
popf
adc
xor
mov
push
cmpsl
divl
icebp
jo
into
adc
in
xchg
inc
mov
push
push
cltd
es
pusha
jp
add
cs
int3
xor
ljmp
sub
sub
ljmp
push
xchg
aam
or
or
repnz
sub
int
stc
lret
and
sbb
and
sbb
adc
leave
cmp
mov
lret
pushf
cmp
scas
arpl
jns
andl
dec
cmp
das
jmp
lock
mov
sbb
cmpsl
xor
aaa
shr
xchg
sbb
xchg
adc
std
mov
int
inc
movsb
je
leave
rdrand
sahf
inc
sub
test
push
mov
and
xor
fst
loopne
test
ret
rcll
jae
add
outsb
in
mov
cmp
sarb
push
out
dec
cs
cli
stc
fadd
xor
push
and
sub
or
ljmp
push
adc
pop
mov
push
dec
xchg
loop
outsb
sar
insl
xor
loop
xchg
xchg
orl
mov
push
or
xchg
pop
shll
mov
cmp
cmpl
dec
xchg
jo
aam
loopne
insl
orl
mov
mov
adc
add
sub
push
sub
push
dec
sub
jne
pop
and
push
dec
outsl
xor
adc
jb
les
incl
push
adc
inc
mov
es
insl
inc
int
dec
ja
xlat
xor
push
pop
inc
pop
mov
sub
jg
loop
cmp
inc
and
pushf
or
fnsave
sbb
mov
aaa
inc
sbb
pusha
sbb
adcb
mov
mov
arpl
fsubrs
sub
repnz
dec
std
mov
bound
xchg
lahf
wrmsr
pop
sub
rcrl
ljmp
mov
pop
insb
call
lcall
pop
lret
xor
shll
mov
jp
xor
adc
in
lock
inc
add
orb
scas
daa
or
cmc
inc
xchg
xlat
cwtl
js
std
dec
fwait
add
hlt
int3
sarl
pop
lods
cltd
ror
out
ret
adcb
test
leave
mov
repnz
adc
inc
push
cmpsl
push
repz
mov
add
test
lea
push
shll
dec
and
add
ss
push
arpl
pop
ss
jae
push
in
cmpsl
lret
je
cmp
xor
push
cmp
ljmp
push
pushf
or
cmp
fcomip
sbb
lods
mov
fidivrs
lods
mov
push
ljmp
subl
ret
xor
leave
mov
pop
jns
dec
mov
iret
pop
and
stc
iret
add
dec
arpl
shrb
add
mov
mov
pop
ss
jbe
addb
div
mov
or
jne
xchg
movsl
imul
insl
cs
push
lods
out
dec
hlt
cwtl
pop
loop
je
xor
cltd
jmp
and
or
lods
cmp
pop
aaa
std
xchg
clc
inc
adc
outsl
insb
mov
dec
fldenv
and
mov
adc
mov
jl
dec
mov
jp
es
leave
push
cmp
rcrb
and
push
jmp
les
fcoml
push
in
enter
fwait
push
adc
or
idiv
xorl
xchg
mov
test
rclb
icebp
mov
mov
int3
ret
clc
jecxz
mov
in
loope
addl
mov
jg
jl
add
lds
cmp
jmp
into
aad
stos
cs
loop
std
mov
xchg
jl
mov
push
jg
or
pop
sub
lods
inc
jecxz,pt
jbe
pop
jnp
sbb
adc
pop
ror
notl
clc
pop
mov
cltd
stos
sar
push
aad
mov
fcmovb
push
shr
fs
mov
sub
sahf
bound
sbb
push
pop
ds
mov
push
flds
xchg
sbb
lods
movsl
pop
pop
addr16
sub
and
outsl
or
push
and
push
pop
sbb
cmpsb
jns
mov
push
movsl
cmp
andl
outsb
outsl
and
addr16
std
sbb
xchg
aas
scas
std
movsb
and
test
mov
dec
lcall
mov
stos
dec
pop
cmp
imul
sub
dec
xchg
icebp
mov
sahf
addl
lahf
das
sbb
pusha
push
dec
aaa
int
jno
lcall
jmp
pop
add
cwtl
push
loope
dec
cmp
inc
subb
dec
incb
push
push
push
out
lods
iret
jp
std
jl
sub
sahf
mov
dec
push
mov
in
aas
mov
cmp
out
sar
mov
sub
push
push
fwait
dec
mov
jns
pop
cld
out
cmp
aam
add
add
daa
xchg
dec
test
ds
outsl
imul
loop
push
pop
in
adc
arpl
pop
mov
pop
popf
bound
imul
xchg
sub
mov
jle
or
mov
ds
or
fisubl
mov
sbb
xchg
int
and
jbe
ficomps
test
test
mov
cmp
mov
xor
bound
aad
test
xor
mov
mov
daa
sti
testb
rolb
mov
mov
cld
mov
lods
xchg
ret
movsl
in
paddsb
and
or
and
inc
lret
push
mov
adc
rcr
and
imul
lret
shrb
sbb
or
mov
mov
into
xorb
or
dec
and
xchg
cmpsb
test
outsb
subl
gs
mov
cmp
pop
add
lahf
inc
and
adc
pop
sbb
sub
enter
andl
pop
aaa
mov
jle
jge
mov
or
and
push
inc
fidivrl
das
jo
les
aaa
jmp
sub
jbe
push
aad
push
cltd
push
mov
adc
fnstenv
loopne
test
xchg
mov
pop
test
aaa
jecxz
jno
or
and
insl
rcrb
inc
aad
inc
xchg
dec
sub
sbb
jle
xchg
lea
mov
sahf
push
das
push
repz
shll
cvttps2pi
xor
sbb
add
pop
mov
or
pop
cmp
lahf
aam
xor
push
cld
dec
xchg
rorb
adc
mov
outsb
dec
fldcw
cmpl
test
add
mov
inc
lret
add
in
inc
out
mov
inc
jg
rcr
cwtl
mov
loop
dec
insl
pop
sub
mov
cmp
scas
cs
jae
pop
jmp
pop
hlt
mov
push
loop
pushf
inc
and
mov
ds
movsb
jns
dec
fs
and
adc
jle
sbb
jecxz
aaa
gs
add
fdivrs
jno
inc
stc
and
vpaddw
and
push
mov
mov
test
mov
lods
push
out
test
mov
push
mov
and
fistl
add
call
scas
or
shr
adc
into
sub
jns
mov
jnp
xchg
inc
mov
xor
mov
loop
cwtl
inc
mov
push
pop
int3
scas
dec
jbe
cmp
fldl
scas
ret
fstpl
mov
mov
popa
int
mov
mov
bound
and
test
sbb
pop
jecxz
fsts
push
lea
cmp
out
inc
std
dec
jns
scas
and
mov
rol
mov
mov
fldl
lds
mov
and
lret
shl
lahf
cltd
and
les
leave
pusha
xchg
loope
pop
jmp
lea
push
jecxz
aas
icebp
pop
hlt
std
pushf
aaa
lahf
jne
pop
xor
push
dec
adc
jne
cmc
adc
xor
jno
pop
ljmp
ja
cmp
imull
xchg
inc
out
push
jg
add
xchg
jmp
push
lods
insb
out
pop
push
pop
adc
push
fstpl
push
iret
add
sbb
in
leave
gs
arpl
and
jns
lahf
leave
mov
fmulp
gs
push
lock
adc
jnp
or
repnz
filds
pop
test
cmp
sarb
pop
loopne
xchg
aad
pop
fnstcw
pushf
rcrb
clc
cmc
hlt
inc
sbb
das
jb
adc
pop
fadds
into
xchg
repnz
inc
push
dec
shrl
fs
xchg
pop
pop
jp
out
lea
stos
rcrb
mov
cs
adc
pushf
out
clc
mov
mov
insl
das
xorl
lret
movsl
xchg
outsl
fwait
in
inc
adc
outsl
inc
push
xchg
jmp
jmp
sub
lods
inc
jo
push
xor
push
push
sbb
cmpsl
rol
jb
mov
mov
popa
pop
xchg
lcall
mov
push
lods
cmp
outsb
in
insb
fdiv
and
push
mov
mov
push
sbb
jecxz
dec
pop
cwtl
popf
test
mov
add
cld
clc
push
dec
fwait
mov
stc
rorl
and
fisubs
pop
mov
sbb
mov
in
rcrb
fwait
negb
loopne
arpl
mov
mov
dec
inc
and
stos
addr16
xchg
sbb
sbbl
stos
pop
inc
shll
and
add
mov
in
iret
cli
outsl
test
adc
negb
mov
xor
hlt
mov
aad
xchg
add
or
and
fnstsw
subb
pop
arpl
insb
rcl
out
lods
push
in
aam
xchg
and
ret
push
xor
sahf
pop
dec
scas
imul
insb
fstpt
das
nop
xor
fs
push
adc
outsl
pushf
xchg
jl
add
lret
daa
add
scas
push
push
das
sbb
outsl
dec
inc
xor
daa
pop
lock
or
mov
mov
outsl
aam
mov
sbb
sub
insb
adc
fildl
inc
jb
das
push
cmp
fwait
mov
mov
sbb
inc
mov
pop
sbb
aam
ror
cmp
test
pop
mov
pop
xor
adc
xchg
aam
or
push
inc
shrb
ds
cmc
mov
mov
sbbl
jbe
sbb
or
jge,pn
and
pop
fstenv
pop
repnz
xchg
xchg
mov
pop
xchg
idivl
fidivrs
dec
sbb
leave
in
cmp
les
lds
es
adc
mov
push
sbb
adc
fcmovnu
cmp
movnti
sub
mov
cs
lret
cs
jno
mov
mov
mov
add
fld1
mov
cmp
xchg
jne
loopne
in
push
int3
pop
enter
adc
aad
pop
lea
adc
nop
sti
jne
ljmp
pop
dec
and
push
lods
in
sbb
lods
adc
mov
mov
mov
or
jno
sarl
rcr
jae
sti
roll
shlb
and
and
and
push
orl
jae
push
repnz
pop
jno
leave
addl
aas
test
repnz
xor
adc
cmc
cwtl
outsl
jge
push
push
or
out
or
int
and
inc
pop
repnz
hlt
mov
int3
push
lods
es
je
mov
fisubrs
pop
pushf
pushf
dec
test
mov
and
int
fwait
cmc
shl
inc
mov
add
sbbb
pusha
aas
into
sub
loopne
data16
fcomps
mov
and
xchg
sub
jae
mov
jbe
mov
shll
and
leave
or
sbb
lret
or
add
jo
jg
fistpl
orb
in
in
sub
shll
cli
ljmp
pushl
add
cmc
push
repnz
adc
lret
ss
push
mov
adc
imul
pusha
ss
shlb
jns
ret
inc
mov
cmpsb
jmp
das
adc
add
add
enter
popa
jmp
mov
insl
dec
addr16
repnz
mov
and
mov
imul
or
jmp
lcall
xor
inc
adc
jb
fucomip
dec
mov
jp
inc
and
xor
mov
inc
add
std
leave
enter
ret
inc
mov
pop
mov
js
push
rcrl
or
callw
adc
sbb
stos
and
sub
jl
out
inc
sub
fdivrl
cwtl
dec
mul
aas
mov
push
mov
cmp
shl
and
mov
movsl
jmp
sub
hlt
das
jns
adc
insl
mov
or
add
out
mov
jmp
or
int3
dec
test
xor
cwtl
xchg
jbe
xor
leave
das
pop
popf
sbb
sbb
mov
mov
sub
lahf
and
push
mov
dec
fbld
or
outsl
and
mov
pop
out
das
les
xchg
loope
lock
out
and
fmull
movsl
stos
or
add
jle
lcall
shll
das
daa
mov
shrl
inc
or
xor
lods
cwtl
xchg
jb
int
jnp
data16
push
xchg
inc
sbbl
hlt
loope
add
fs
dec
lea
mov
xor
lret
xchg
push
out
sbb
nop
lods
fdiv
jae
std
rolb
imul
push
sub
jb
jmp
pop
dec
cwtl
int3
lea
and
test
pop
push
push
insb
cltd
insl
jg
outsl
scas
push
cmp
mov
pop
in
push
mov
imul
add
inc
jo
sbb
cmc
pop
and
or
imul
pop
xchg
jnp
xchg
cld
jge
lcall
pop
mov
pop
in
mov
daa
test
insb
pop
inc
push
lods
fdivs
inc
mov
dec
clc
pop
adc
fwait
insl
fiadds
sbb
addr16
mov
fucomip
cmc
pusha
sub
in
push
fisttpl
loop
pop
mov
inc
xchg
stos
sub
jp
out
call
dec
jo
sbb
adc
stos
and
lock
xchg
addl
mov
sbb
ja
mov
andb
pop
xchg
lret
push
lea
sub
les
enter
mulb
pop
jnp
mov
rcl
pop
cmpsl
sub
pop
nop
mov
into
jno
in
jle
sub
scas
xchg
ret
add
add
and
outsl
ret
push
and
sbb
push
std
inc
stos
pop
inc
adc
cwtl
mov
mov
mov
dec
div
stos
fstps
outsl
rcrb
jne
in
or
nop
shr
cli
jecxz
into
ret
cmp
pushf
adc
je
sub
sub
pop
lods
xchg
gs
jne
adcb
bound
hlt
bound
push
sahf
stos
dec
movsb
out
xchg
xchg
stos
mov
push
jg
add
mov
cmp
je
icebp
pop
out
cmpsl
cmp
fdivs
dec
arpl
pop
sub
mov
pop
mov
jns
cmp
or
dec
xor
fwait
mov
dec
mov
test
mov
bound
pop
lahf
sbb
sbb
sar
jo
ret
inc
cmp
stc
nop
lea
insb
push
out
std
mov
inc
pusha
test
fptan
imul
push
test
push
add
mov
pop
ret
iret
pop
mov
sub
add
sbb
inc
jmp
jg
xor
add
or
push
sub
mov
cwtl
outsb
fisttpl
in
cmc
sub
mov
jle
xchg
out
aas
sub
cmp
or
mov
jmp
or
jp
xchg
inc
fwait
hlt
loop
std
pop
fnstsw
insl
or
pushf
pop
lds
cmpsl
push
pop
fs
popa
movsl
dec
arpl
and
dec
push
jnp
mov
sbb
cmp
mov
ja
sub
ret
mov
loopne
dec
push
lock
outsl
pop
fnstcw
mov
xchg
sbb
cmp
lock
jecxz
adc
push
sbb
in
jmp
lock
xor
popa
test
push
sub
push
cmpsb
scas
mov
aad
xchg
cmpsb
dec
cmp
jp
mov
hlt
add
aad
lock
rclb
iret
push
mov
and
or
ja
cmp
arpl
mov
loope
adc
cmpl
call
testl
mov
sahf
fldl2e
into
out
js
sub
loopne
lock
loop
xor
or
cwtl
mov
cmp
clc
cmp
dec
cld
push
cld
ja,pn
addr16
cmc
adc
ja
sarb
xchg
mov
xchg
testl
adc
popf
xor
fldt
or
cld
xor
les
shl
inc
xchg
jo
rolb
xchg
fistps
adc
loop
ja
mov
push
inc
cmpsl
leave
in
pop
popa
cmpsb
ret
jo
cld
frstor
add
enter
repnz
and
insb
test
pop
pushf
jecxz
pop
loopne
sar
int
adc
sub
mov
fimull
push
imul
jae
clc
cmc
out
das
xchg
adc
push
pop
movups
imul
pop
dec
dec
dec
adc
mov
inc
js,pn
aam
and
jmp
mov
test
in
movsl
cltd
mov
mov
inc
iret
jecxz
lcall
mov
push
mov
dec
les
xor
cwtl
cld
inc
inc
lahf
mov
dec
cltd
fcompl
popa
test
push
mov
inc
das
push
in
push
sbb
data16
sbb
in
jne
scas
repz
lods
dec
push
xchg
lret
lds
movsb
fdivs
mov
fnstsw
jb
and
adc
or
incl
cmp
cmp
icebp
sbb
out
jle
lcall
sbb
cmpsb
dec
mov
adc
movsb
pop
inc
add
dec
imul
cmp
rcr
mov
ret
in
scas
jle
mov
cmp
gs
mov
rcr
pop
repnz
je
cmpsl
push
cld
stos
shll
pusha
sub
xchg
sub
enter
pop
pop
adc
adc
pushf
push
shrb
call
jp
mov
push
dec
cmp
bound
fcoml
mov
sbb
lret
xorb
inc
lahf
mov
adc
movl
loopne
stos
or
ds
xchg
jmp
mov
clc
xchg
cmp
ret
addr16
out
stc
sti
sahf
mov
stos
sarl
or
cld
fldl
mov
lods
mov
adc
inc
mov
cmc
lods
cmpsb
add
and
ss
lods
cmp
mov
jns
inc
or
inc
mov
lods
adc
insl
mov
gs
add
insb
add
add
mov
add
test
add
add
add
roll
add
add
add
add
add
pop
add
loope
add
add
add
add
add
add
add
add
add
ja
mov
jo
jo
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
in
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
in
add
fsubr
add
aam
add
int3
in
add
in
add
mov
in
add
lods
in
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
out
add
dec
out
add
push
out
add
pop
out
add
fs
add
insb
out
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
out
add
mov
out
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
lock
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
lock
mov
lock
lods
lock
movsb
lock
pushf
lock
xchg
lock
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
lock
cld
lock
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
repnz
dec
repnz
push
repnz
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
repnz
lods
repnz
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
