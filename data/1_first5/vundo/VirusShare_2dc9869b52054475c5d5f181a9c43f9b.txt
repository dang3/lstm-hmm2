push
push
cmc
sub
lea
call
pusha
lea
jne
dec
aam
xor
shr
btr
mov
shl
ror
shl
add
setg
dec
pushf
mov
bt
test
jmp
cmc
lahf
jae
inc
xor
or
sub
jmp
xor
mov
test
andb
mov
jo
dec
and
lret
fbld
mov
fisttpl
lea
inc
icebp
push
and
mov
cs
aam
ss
loopne
mov
mov
pop
sub
inc
popa
repnz
mov
push
shlb
andb
cwtl
roll
not
lods
pusha
dec
pushf
mov
push
mov
neg
jmp
push
call
inc
cld
and
mov
lea
jne
call
je
pusha
mov
lea
push
lea
call
push
pushf
jmp
push
call
cmp
icebp
or
lds
lock
and
adc
mov
push
lock
call
dec
int
mov
xchg
xor
inc
loopne
jmp
addr16
xchg
ret
jg
ljmp
mov
push
lcall
mov
inc
sub
mov
dec
leave
nop
lret
lock
jge
sub
ret
cld
pop
mov
mov
xchg
pop
mov
inc
xchg
push
dec
pop
xchg
roll
insl
pusha
jb
ret
and
jl
in
jg
dec
or
rorb
sub
fimull
ror
dec
pop
push
and
sub
inc
nop
and
inc
lods
aam
mov
add
push
mov
arpl
lret
dec
inc
pop
push
pushf
mov
or
add
add
inc
push
add
add
add
add
add
cmp
or
add
add
jns
push
add
add
add
inc
pop
add
add
add
add
dec
aam
add
add
add
add
addb
add
or
add
enter
add
add
or
add
movsl
jmp
add
or
add
pop
add
add
add
or
add
add
add
mov
bt
cmp
add
bt
pusha
mov
test
cmc
stc
test
push
lea
je
jmp
adc
shrl
jl
sahf
pop
xlat
jecxz
mov
outsl
inc
call
adc
mov
pop
mov
in
jecxz
jle
push
xchg
ret
leave
scas
movsb
lret
mov
icebp
xor
xor
push
cwtl
dec
cmp
in
mov
xor
xchg
ds
sub
testb
inc
jns
dec
pushf
test
pushf
not
clc
pushf
sub
cmp
cld
std
stc
pushw
popfw
pushf
pushf
movb
push
inc
movb
jmp
add
dec
outsb
je
jb
gs
jne
jb
inc
popa
je
inc
jbe
imul
outsl
ret
call
ret
ss
outsl
scas
mov
add
dec
andl
fs
je
pusha
pusha
push
push
lea
jmp
gs
sub
lods
mov
push
lahf
dec
pop
mov
jnp
movsl
mov
inc
push
push
adc
out
sub
gs
mov
mov
inc
subl
xchg
push
push
dec
fbstp
scas
dec
or
into
cld
out
cmp
daa
xchg
push
lods
mov
mov
je
and
test
repz
and
push
call
mov
jb
call
push
call
ss
xchg
stc
cmc
push
bt
or
call
inc
jl
sahf
mov
xor
cld
ret
xchg
cltd
push
ret
and
mov
xor
dec
dec
mov
sub
dec
fldenv
fisubrl
lcall
idivb
stc
xor
inc
mov
cmpsb
orb
fistpll
les
and
js
sbb
push
mov
test
jno
int3
xchg
push
call
scas
xor
dec
push
push
dec
dec
dec
cs
push
push
add
das
fucomip
push
mov
dec
pop
xchg
pop
out
gs
push
in
fisttps
rorb
xchg
inc
push
pop
cmc
sub
jp
jne
jae,pt
mov
sbb
fdivrs
or
fidivrs
js
cs
mov
popf
mov
aaa
lahf
in
insb
test
ret
jge
aam
movsb
or
inc
jp
pop
insb
dec
std
mov
rorl
jns
sarl
aas
add
push
or
insb
loopne
iret
bound
cmpl
icebp
sbb
mov
gs
popf
out
sete
call
jmp
pusha
pushf
add
jmp
push
call
adc
push
call
add
rcrl
paddsb
cld
mov
test
push
xchg
pop
rcll
cmp
push
xor
jne
out
iret
jnp
loope
shrb
out
push
clc
cmp
mov
mov
dec
pusha
aas
sarb
jl
cmc
push
ja,pn
cld
push
push
jnp
or
hlt
sub
jno
push
cmc
cmc
call
push
call
imul
repnz
jbe
loopne
daa
xor
je
dec
loopne
adc
and
sub
ret
out
rcr
and
leave
iret
in
sarb
ficoml
fucom
sub
mov
or
pop
das
lret
push
fwait
pop
scas
jle
ljmp
mov
mov
mov
add
add
hlt
jmp
lods
jno
mov
mov
jb
adc
and
jns
cli
jmp
les
fs
pop
test
orb
gs
lods
js
adc
jl
jo
jo
cmp
aas
jp
stos
pusha
lea
in
xor
xor
xchg
enter
jno
jl
fs
mov
and
call
imul
cmp
sahf
cmpsl
cltd
jno
mov
test
mov
mov
ss
jl
xchg
aas
imul
test
scas
push
mov
inc
adc
mov
ljmp
stos
mov
pop
mov
jo
mov
addl
das
loopne
sbb
loopne
jne
jle
cli
mov
mov
dec
movsb
rcrb
popf
push
and
stos
push
or
xchg
sub
pushf
adc
mov
mov
or
and
popf
cmpsb
and
les
mov
push
movsb
pop
test
push
or
scas
lods
fsubs
push
movsb
mov
scas
push
jge
mov
int
out
cmpsb
sub
stos
das
sub
jne
cs
pop
pushf
nop
cli
sub
push
mov
xorl
int
jge
mov
adc
enter
or
mov
insb
int
sbb
inc
mov
int3
ret
jno
dec
test
stos
xor
adc
ret
out
ds
inc
scas
xchg
mov
mov
dec
dec
sub
test
test
sub
push
leave
lods
aaa
mov
ret
fwait
enter
inc
mov
jo
fs
jno
mov
out
les
cmp
xor
jmp
stos
sbb
mov
mov
inc
sub
popf
enter
pop
bound
lock
in
mov
fstpt
test
pushw
popf
adc
movsl
in
push
and
lahf
add
or
ja
mov
pop
out
lods
scas
and
cmpsb
mov
sub
sbb
fsub
je
mov
andb
adc
jl
mov
push
test
adc
add
sahf
enter
cld
outsb
or
fnstsw
lret
scas
mov
fsub
fwait
test
inc
add
mov
push
fs
comiss
in
das
mov
inc
and
out
cmp
leave
cltd
or
pop
jo
xchg
mov
mov
insl
test
xchg
mov
icebp
repz
sub
pop
lods
pop
mov
test
xchg
movq
mov
cmp
sub
scas
loopne
or
cmpsb
cli
fimuls
push
mov
out
sahf
shrl
lods
xor
jbe
pop
xchg
jl
mov
cmpb
mov
pushf
mov
push
pop
adc
sbb
arpl
lcall
fcoml
lock
aaa
lods
push
xor
adc
xlat
xor
in
mov
stc
stos
sub
sub
adc
adc
pop
enter
sub
stos
mov
push
sbb
push
mov
sub
adcl
mov
xor
movsb
pop
fmulp
addr16
popf
or
stos
mov
dec
xchg
int3
cmc
outsb
incb
setne
rclb
addb
mov
xchg
insb
jnp
movsl
sbb
xchg
sbb
push
push
push
repz
mov
jns
xchg
mov
cmpsb
daa
push
enter
mov
lods
lcall
fwait
adc
jae
nop
dec
fs
rolb
cs
test
andb
inc
shll
rclb
cmp
mov
addr16
push
mov
xchg
aaa
sub
pushl
and
inc
jle
and
sti
fcomps
das
mov
mov
dec
sbb
std
push
outsb
and
xor
repnz
jmp
xor
in
and
mov
sub
iret
jno
in
popa
jo
mov
fildll
and
cmpsb
loope
or
lea
lock
out
mov
ljmp
js
cltd
push
cli
xor
and
mov
sarl
outsl
fadd
adc
push
cmpsl
or
pushf
daa
or
cmp
sub
dec
mov
mov
xchg
lods
insl
or
out
pop
mov
fbld
lods
jp
ret
xor
and
in
lds
jmp
stc
icebp
lds
jge
gs
sbb
out
lcall
into
fs
sub
mov
movsb
xchg
push
jo
dec
sbb
add
popf
lock
sbb
addr16
fs
int
push
xchg
stc
fsubl
dec
or
mov
imul
out
call
cmp
mov
add
mov
push
mov
test
ficoml
or
mov
out
mov
je
push
mull
insl
imul
lahf
dec
pop
xor
mov
lods
and
es
lcall
das
out
cld
cmc
enter
pusha
push
xchg
int3
jecxz
jmp
aas
adc
mov
adc
cli
ret
jecxz
bound
insl
jae
out
xchg
addr16
repz
push
pop
call
enter
mov
mov
popa
nop
hlt
scas
lock
test
mov
rorl
xchg
mov
dec
push
mov
mov
fidivrs
and
pop
dec
inc
aaa
incl
xchg
mov
push
mov
sub
pop
push
and
cmpl
mov
dec
mov
dec
and
jecxz
hlt
movsl
test
out
sbb
xor
outsl
into
mov
sub
sub
into
movsb
out
movb
xchg
mov
fscale
in
inc
sahf
push
sahf
mov
pop
enter
mov
aas
inc
or
pushf
test
into
movsb
push
dec
sub
pop
mov
cmpsb
add
mov
sbbl
adc
and
insl
sbb
pop
mov
sub
inc
fldt
or
loopne
lret
mov
jbe
aam
std
mov
sub
in
lahf
mov
ds
add
inc
xlat
jg
fstpt
movsb
sbb
iret
mov
sbb
mov
jmp
gs
pushf
cwtl
hlt
dec
mov
sbb
mov
and
push
sbb
adc
nop
inc
insb
push
dec
sub
mov
frstor
xor
aad
cwtl
ljmp
mov
out
mov
sub
pop
inc
add
cltd
mov
into
push
gs
cmp
pop
sub
pusha
mov
enter
push
outsb
lock
jae
sub
movsb
aad
ljmp
push
sub
adc
push
inc
xchg
mov
pop
je
stos
push
rcrb
dec
test
jo
es
push
jl
cmp
xchg
aad
xor
dec
arpl
mov
insb
call
mov
fidivrs
movl
out
jl
call
adc
mov
test
push
mov
out
jnp
jl
pop
dec
in
mov
std
stos
mov
fs
mov
cltd
pusha
enter
mov
jmp
sub
and
xchg
bound
aam
cwtl
ljmp
jp
cmpsb
pop
les
xchg
enter
ss
iret
adc
or
inc
in
int3
pop
idivb
enter
dec
push
gs
jno
popl
mov
imul
outsl
test
pop
pop
lea
xchg
fiadds
xchg
ds
xor
pop
loop
scas
adc
mov
ja
cmp
insb
scas
jns
les
int3
js
cs
adc
bound
xor
pop
insb
test
or
movsl
addb
leave
scas
sub
out
sbb
cmp
movsl
mov
cmp
repnz
in
shrl
imul
shrb
mov
std
jg
lds
push
test
dec
dec
nop
outsb
sbb
sahf
mov
nop
test
and
cwtl
dec
or
sub
test
fsts
inc
inc
rorb
push
lods
lods
mov
dec
and
dec
add
xchg
xchg
jno
lret
test
xor
pop
xor
jo
mov
sbb
xchg
xchg
jge
ds
inc
std
jle
add
push
test
cmpsb
js
andb
dec
cmp
adc
sahf
cld
sahf
rcrb
sbb
insb
je
nop
mov
aam
movsb
mov
mov
sahf
dec
test
pop
jl
mov
loopne
or
test
stos
mov
sahf
dec
mov
xchg
jg
lock
dec
xchg
sub
fsubrs
cmp
pushf
mov
insb
mov
xor
cwtl
mov
mov
insl
sahf
inc
mov
nop
cmp
or
cs
cmpsb
cwtl
pusha
fs
sahf
seto
mov
lods
lods
xchg
push
nop
jle
push
add
enter
add
nop
push
inc
pop
sbb
outsl
push
stos
movsb
xchg
in
mov
nop
pushf
andb
pop
pusha
push
xchg
mov
loopne
outsb
in
gs
push
mov
call
push
enter
and
xor
test
mov
adc
and
lock
je
test
and
jge
dec
js
pushf
insb
outsb
or
cmp
mov
fsubrl
or
pop
in
sahf
pop
push
nop
mov
push
push
add
test
sbb
nop
pop
call
nop
jp
outsl
jl
jo
std
pushf
pop
and
insb
fs
push
lock
rorb
nop
dec
add
in
int3
or
int3
push
sbbb
mov
sbbb
cs
aaa
and
insb
loope
add
pop
sbb
or
pusha
popa
cmp
fsubrl
cli
mov
xor
mov
cmp
test
mov
inc
in
popl
adc
adc
scas
mov
test
adc
push
adc
lods
call
popa
jns
fcmovbe
mov
jmp
mov
or
mov
mov
rclb
ds
movsb
ror
mov
pop
cltd
movsb
adc
out
outsb
xchg
rcll
sub
jnp
ds
push
mov
out
xchg
mov
std
mov
sbb
and
xorl
cmpsl
push
enter
dec
xor
jmp
bound
pop
pandn
lods
je
aaa
sbb
jne
daa
ljmp
insb
push
pop
popf
jl
mov
pop
cmpsl
mov
je
xlat
outsb
loop
add
call
popf
sbb
roll
and
ret
adc
mov
sub
mov
mov
inc
adc
enter
xchg
mov
lea
fwait
dec
enter
invd
dec
mov
lcall
push
ljmp
jo
fidivs
daa
mov
push
and
mov
subb
mov
jl
or
data16
into
mov
in
xchg
mov
dec
inc
loop
enter
loopne
add
movsb
hlt
fisubrl
adc
pmaxsw
lret
mov
cmpsb
dec
lahf
cmp
jge
mov
dec
rclb
mov
adc
loopne
cmp
lods
das
ljmp
add
xchg
jmp
sarb
jp
jmp
cli
mov
add
or
pavgb
push
fucom
rcrb
movsb
std
sbb
and
jp
insl
movsb
fisubrs
cld
pop
out
jge
test
fnsave
into
hlt
mov
mov
loopne
mov
iret
sbb
fisubs
lret
jae
lods
and
pop
into
mov
ret
lcall
inc
mov
divb
in
pop
and
xchg
mov
enter
inc
mov
aam
movsb
mov
ficoms
adc
jb
cli
out
cmp
adc
mov
inc
xor
js
pop
adc
add
jnp
mov
dec
aad
jo
in
pop
push
fwait
lods
mov
sbb
inc
in
push
fcompl
inc
dec
cltd
out
rorb
pop
loope
adc
mov
stc
xchg
jo
cmp
inc
je
mov
pop
arpl
fdivs
xor
ret
or
jl
dec
fists
arpl
jo
rolb
ja
and
hlt
jecxz
movsb
mov
inc
xlat
push
cmp
push
enter
push
lret
xlat
or
push
inc
out
hlt
pop
sbb
sbb
or
das
xor
lcall
dec
out
push
mov
sub
pop
scas
sub
pop
ficompl
push
mov
dec
int3
es
xchg
lods
fs
or
mov
cmp
xchg
mov
stc
daa
or
es
mov
fmulp
push
clc
scas
out
xor
pop
mov
push
push
nop
inc
stos
jle
pop
mov
xchg
insb
push
scas
add
mov
xchg
sub
mov
sahf
enter
stos
mov
les
lret
data16
lret
adcb
loopne
les
adc
les
ja
cs
push
sub
cwtl
pop
scas
mov
mov
dec
mov
cmp
gs
pusha
stos
ja
nop
loopne
and
sub
das
push
jns
jg
adc
or
push
hlt
ljmp
mov
daa
add
xchg
data16
push
insl
mov
mov
ss
subb
enter
xor
stos
dec
outsb
xchg
mov
gs
pop
cmp
loop
cmp
js
lds
movsb
or
adc
lret
loop
leave
cwtl
mov
pop
sbb
ds
jp
mov
and
xchg
push
dec
movb
ret
cmp
pop
xor
dec
aas
out
push
bound
add
push
out
dec
push
shrl
push
mov
lahf
ljmp
clc
cli
push
lods
xchg
call
inc
dec
cmp
test
adc
push
push
add
adc
or
dec
les
mov
andl
daa
dec
pop
fistps
cmp
or
scas
addr16
cmp
mov
mov
jnp
fnstenv
xchg
gs
call
inc
or
mov
mov
insl
sahf
enter
out
rcrb
jo
dec
enter
dec
sub
mov
mov
dec
sub
mov
cmpsb
mov
mov
mov
js
dec
cmc
clc
out
popf
mov
fwait
pop
stc
sbb
rcl
and
dec
sub
or
in
movsl
lea
xchg
push
ss
test
push
push
subb
pushf
js
movsb
sub
mov
jle
fadd
mov
stos
xchg
sub
daa
and
push
adc
adc
shll
mov
mov
inc
xchg
and
out
cmp
mov
mov
lret
inc
test
fildll
sub
mov
call
scas
xor
dec
adc
dec
mov
mov
jae
dec
ja
sbbb
dec
mov
pop
lds
je
mov
sbb
testb
mov
shrb
hlt
pop
and
arpl
int
sub
push
test
fwait
mov
bound
aas
stos
ret
es
es
sub
mov
pop
lds
testl
push
pop
xchg
iret
test
arpl
fdivs
adc
xchg
adc
dec
mov
mov
addr16
and
xor
sub
adc
es
cwtl
fwait
out
cmp
xchg
notl
mov
mov
pop
addr16
ljmp
sub
add
jl
mov
mov
fs
or
jge
push
jge
and
cmpsb
push
jp
push
push
cmpsl
icebp
gs
int
lods
mov
leave
int
mov
insb
icebp
xor
rolb
cwtl
pop
idivb
mov
mov
repnz
add
fisubl
scas
xor
pop
lock
xchg
mov
sbb
adc
into
enter
jo
mov
xor
lret
inc
movsl
shl
pop
sub
imul
repnz
das
pop
daa
int3
pop
xchg
orb
data16
icebp
popf
pop
pop
dec
and
cltd
push
gs
mov
pop
repz
jne
out
mov
sti
sbb
pop
pop
out
mov
push
in
jne
arpl
cltd
fistpl
rorl
jnp
das
adc
mov
mov
outsb
sti
cwtl
enter
pop
fstpl
xlat
mov
mov
sbb
inc
add
dec
add
pop
mov
insb
or
jo
enter
stc
movsb
and
push
testl
dec
pop
mov
push
mov
nop
pop
xor
rcll
popa
ljmp
jae
jge
jg
sub
mov
mov
pop
xchg
push
orl
std
pop
outsb
dec
xchg
fidivs
xchg
fistpll
adc
jne
inc
inc
push
push
stos
or
xchg
cltd
push
js
idivb
cmpsl
cmp
mov
xchg
sbb
jmp
adc
test
mov
out
or
jo
shlb
pop
mov
rclb
test
inc
scas
add
rorb
ja
mov
mov
mov
ja
lock
push
xchg
out
cmp
pop
dec
mov
shll
mov
scas
dec
sbb
and
mov
lock
cmpsl
mov
push
jg
lds
mov
mov
pop
sbb
je
push
js
fcoml
in
inc
subb
and
test
stos
xor
push
outsl
xor
lcall
movsb
lds
lret
sti
scas
add
movsb
jle
add
pop
fsubrp
lock
cmpsb
push
mov
cmpsb
pushf
adc
out
dec
add
xor
stos
je
in
lahf
outsl
in
aaa
popa
cmp
add
sbb
loopne
ds
xchg
push
xor
push
dec
xchg
push
inc
dec
nop
aaa
pushf
popa
scas
xor
lret
repz
jl
mov
pop
inc
xchg
jnp
xchg
mov
enter
aam
int
fisubrs
mov
shlb
clc
in
lds
push
mov
xchg
sub
aam
aas
mov
loop
mov
pop
lcall
cltd
xchg
ja
imul
mov
mov
fimuls
scas
js
stos
lods
movl
test
inc
and
fistl
pop
call
dec
sbb
xchg
or
pushf
push
pop
scas
dec
lea
lcall
mov
xor
mov
and
adc
inc
outsl
test
rcrl
pop
mov
pushl
cmpsb
inc
mov
subl
jg
push
aam
orb
mov
inc
or
push
movsl
mov
pop
mov
addb
rolb
out
stos
mov
fbld
push
cmpsl
mov
dec
xorb
pop
jecxz
clc
push
sub
out
aas
ss
dec
mov
outsl
out
pop
outsb
iret
fs
push
stos
mov
jbe
lcall
xchg
cwtl
fsts
xchg
in
fninit
or
mov
mov
mov
inc
inc
push
icebp
nop
aam
pop
sti
push
jb
pop
push
and
leave
pop
fyl2x
pop
sub
mov
sbb
test
mov
lcall
mov
jp
sub
sahf
lret
mov
stos
cs
push
aaa
push
mov
push
jecxz
into
push
stc
enter
xor
sbb
dec
lahf
into
mov
enter
push
loopne
enter
lods
nop
ljmp
jmp
das
shlb
and
cmpsb
mov
mov
pop
mov
cwtl
xchg
int3
sub
mov
sub
out
je
mov
mov
mov
mov
sub
test
movsl
repz
mov
mov
push
jp
push
shr
push
loop
mov
call
push
rolb
pushf
sub
sbb
ficoml
ss
jo
sub
das
adc
pop
push
jo
insb
adc
mov
mov
pop
pop
fcomps
aaa
out
jmp
sti
or
cltd
adc
add
cld
xor
sbbl
xor
gs
xchg
push
leave
popf
fimuls
xor
cmp
mov
addr16
pop
jo
mov
pop
out
pop
popf
insb
mov
cltd
sub
jecxz
sub
pop
sub
push
out
xchg
mov
xchg
mov
mov
jmp
je
inc
pop
sbb
jle
iret
jo
mov
mov
hlt
xor
mov
fsubl
inc
icebp
popf
mov
into
movsb
push
xor
shrb
test
mov
pop
lods
dec
push
inc
push
adc
pusha
pop
sub
mov
pusha
add
or
cwtl
rcl
sarl
sbb
in
mov
mov
std
cmp
pop
ficomps
inc
dec
xlat
stos
paddusw
andb
mov
scas
test
and
mov
fsubs
mov
fnstsw
xor
mov
in
add
scas
dec
dec
jo
je
jl
mov
pop
lcall
lods
pop
jge
add
adc
int
insb
pushf
enter
lods
and
fwait
sti
xor
pop
mov
in
cmp
call
movl
mov
mov
push
inc
or
sbb
mov
test
sub
jge
jne
jbe
test
mov
adc
repz
mov
movzwl
cmpsb
stos
in
fs
loopne
nop
data16
sub
pusha
in
loopne
mov
jp
dec
je
andb
xor
jo
pop
bound
ret
nop
cld
xor
cmpsl
xchg
dec
and
out
insb
mov
ja
sub
movsl
lds
sub
rorl
int
mov
sub
pop
iret
divl
mov
out
scas
mov
scas
ljmp
mov
mov
lods
test
fcompl
pop
dec
ja
mov
enter
aas
pop
sub
in
sbb
inc
iret
pop
call
nop
outsb
jecxz
xchg
fdivrl
or
xchg
jbe
mov
xchg
xor
jg
shll
hlt
out
daa
out
outsb
mov
scas
rcrl
cmp
inc
addr16
pop
js
cs
mov
sbb
arpl
enter
jo
cmp
es
aas
lods
mov
loopne
incl
insl
loope
cmp
test
cmc
daa
les
sub
in
sbb
ret
mov
leave
stos
fdivrl
pop
or
jnp
mov
and
mov
bound
lds
pushf
sub
out
je
mov
or
das
hlt
add
mov
and
dec
xor
or
scas
mov
shrb
mov
int
faddl
iret
xchg
ret
repnz
loopne
dec
out
test
xor
mov
enter
sbb
or
mov
adc
dec
mov
sti
test
push
xchg
push
into
xchg
or
std
mov
cmpsb
andb
push
stc
and
jg
push
ljmp
icebp
out
repz
std
or
lahf
ret
mov
cmp
ret
daa
fnsave
mov
push
mov
jmp
jmp
jg
arpl
add
sbb
mov
into
ss
add
pop
insb
inc
pop
adc
les
data16
mov
dec
negb
xchg
in
push
push
or
or
cmpsb
xor
sub
ja
jmp
mov
cmp
mov
mov
out
daa
add
xchg
jecxz
fcompl
add
stos
mov
movsb
xchg
fsubp
mov
sahf
das
sar
js
adcl
add
daa
in
movsl
xchg
dec
loope
cli
mov
mov
sbb
sub
cmpsb
push
je
loop,pn
sub
xchg
aaa
enter
push
je
mov
cmpsb
ljmp
push
test
stos
cwtl
jne
out
lock
xchg
sbb
incb
jmp
sbbl
jns
lahf
add
mov
cwtl
dec
fcom
std
push
xchg
sub
xchg
cwtl
insl
push
xchg
mov
sbb
and
bound
out
in
imull
and
movsb
hlt
lds
cli
inc
mov
lock
mov
addr16
fnstsw
orb
mov
add
mov
leave
movsb
sbb
inc
idivb
mov
add
loope
out
cmp
faddp
enter
mov
pusha
int3
cli
mov
lret
xor
lods
jge
out
sbb
mov
arpl
lcall
and
xchg
addr16
scas
enter
pop
into
in
sbb
sbb
add
mov
in
add
push
sub
testb
je
dec
xchg
mov
mov
add
fs
sub
xchg
xor
xor
or
mov
cmpsb
sbb
sub
imul
and
cmpsl
xchg
mov
dec
leave
out
mov
push
enter
cmp
lret
push
xchg
wrmsr
js
in
and
enter
pop
loopne
xchg
xchg
mov
fdivs
sbb
push
cmp
outsl
enter
out
push
cmp
out
jl
lock
mov
sub
lea
xchg
pop
sbb
gs
rcr
es
ss
dec
test
mov
xchg
dec
cmp
sub
sbb
push
mov
or
mov
lret
sbb
stos
add
xchg
pop
pusha
sub
pop
xchg
insl
mov
jb
out
ljmp
pop
lds
enter
and
xor
stos
call
jl
mov
outsl
jo
cmpsb
mov
and
out
das
sub
movsl
push
lods
out
mov
push
shrl
call
mov
call
mov
lcall
dec
js
loopne
xchg
ds
mov
and
test
adc
adc
nop
in
fwait
pop
call
pop
or
movsb
jecxz
mov
lock
push
xchg
out
cwtl
mov
mov
lahf
jl
jnp
push
and
lcall
scas
loopne
jo
or
ficomps
ds
pop
ljmp
in
fisttpll
ret
push
aad
sub
clc
imul
push
sahf
lds
jne
jnp
mov
fisttpl
pop
in
push
pop
enter
mov
inc
and
movsl
adc
gs
cmp
xchg
es
jno
stos
aas
lods
lock
cmp
stos
xor
mov
hlt
lods
or
lods
ficoms
clc
mov
movsl
lcall
gs
mov
jg
icebp
ror
adc
das
shrl
test
pushf
loop
add
ljmp
js
call
inc
jecxz
movsl
test
xchg
adc
in
pop
pop
shlb
sub
out
dec
out
cmp
sub
push
mov
lock
fmuls
or
mov
popa
xchg
das
sbb
mov
jnp
sbb
sub
bound
add
fs
movsb
xor
sbb
fldenv
sub
sub
arpl
push
ljmp
dec
cmpsb
pushf
or
daa
mov
les
test
jmp
fsubr
push
stos
lahf
dec
xor
inc
jo
sbb
or
lods
pop
pop
xchg
push
mov
test
ds
mov
push
pusha
std
sbb
popf
popf
or
pop
hlt
mov
in
fisubs
mov
out
enter
push
jecxz
push
pop
mov
fstpl
or
pusha
sbb
inc
repz
popf
fisttpl
dec
mov
and
add
call
mov
dec
leave
mov
push
mov
inc
cwtl
mov
xor
and
divl
xchg
mov
lock
sbb
scas
scas
sub
mov
push
bound
stos
lods
lret
test
je
mov
mov
popf
mov
xchg
enter
xlat
inc
cltd
jbe
sahf
dec
sbb
cs
sub
and
mov
fnstenv
cwtl
cmp
andb
rcrl
fs
lret
jecxz
push
xor
pop
scas
fucompp
push
ja
daa
cwtl
insb
in
push
mov
mov
inc
xlat
and
push
dec
push
pop
mov
ret
test
mov
pop
lock
enter
push
xchg
scas
call
das
repz
test
or
push
into
mov
sbb
sub
mov
dec
push
pop
insb
mov
adc
ret
fwait
xchg
test
jne
jno
pop
cmp
test
addr16
adcb
dec
aam
or
mov
std
pop
aam
pop
loopne
push
cmpsb
xchg
pushf
adc
dec
test
stc
es
mov
je
pushf
cmp
and
out
mov
mov
scas
mov
aam
insl
ds
pop
jge
cmc
push
addb
fld
mov
gs
mov
mov
into
js
cmp
and
fimull
scas
ljmp
aas
dec
sub
lods
sub
jmp
add
loopne
cmp
cmc
cltd
dec
xlat
popa
mov
in
pop
pushf
mov
divb
stos
sbb
filds
repz
fwait
mov
pop
bound
jecxz
call
pop
sub
popa
cmpsl
jle
mov
push
pushf
mov
pop
push
dec
xor
scas
pop
mov
jae
dec
dec
lods
xchg
cmp
add
sbb
inc
mov
enter
sub
jmp
inc
in
or
sub
jb
xor
mov
adc
pop
orl
dec
cld
and
pop
mov
movsl
insl
cwtl
lods
aad
loop
mov
sbb
mov
mov
cmp
dec
stos
xchg
cs
jp
call
dec
xchg
call
push
fdivr
push
nop
lods
test
enter
pusha
loop
pop
cli
movl
cmpsl
cmpsl
or
cld
mov
xchg
loopne
out
push
stos
adc
cwtl
aaa
out
call
sbb
in
loopne
mov
test
push
mov
cmc
or
push
lock
and
add
je
mov
push
sub
mov
jle
mov
test
shll
mov
mov
push
mov
movsb
orl
es
cs
sub
xor
popa
mov
popa
ficoms
test
cld
cld
and
cmp
ds
xor
xlat
fisubs
out
enter
test
inc
mov
in
mov
je
xor
lods
addr16
jcxz
mov
cmp
fmuls
mov
pop
dec
dec
stos
adcl
push
fld1
cld
aaa
pop
add
pop
xor
out
push
enter
insb
daa
cmp
push
mov
mov
pusha
andb
adc
repz
je
std
sti
xor
daa
sarl
xor
sbb
imul
add
movsb
push
or
mov
xchg
mov
test
sub
mov
sahf
test
mov
jecxz
pop
enter
or
lahf
sub
mov
adc
outsl
mov
adc
add
dec
or
jmp
mov
add
or
mov
adc
dec
notl
arpl
test
jne
fadd
add
xchg
push
pop
pop
mov
hlt
sbb
push
stos
fimuls
jno
xchg
je
mov
push
xlat
mov
ja
mov
push
cmpsb
mov
mov
xchg
mov
into
dec
lea
cwtl
push
ljmp
ja
jo
cmpsl
ljmp
adc
xchg
lahf
nop
mov
outsb
aaa
cmp
xchg
adc
nop
filds
cmp
mov
pop
scas
cwtl
push
addps
movsb
push
out
mov
xchg
push
test
clc
sub
jle
lods
mov
xchg
js
mov
dec
mov
inc
cwtl
push
iret
mov
cs
sub
pop
cmpsl
mov
jl
sbb
jmp
bsf
out
mov
adc
subb
mov
xchg
push
out
clc
xorps
push
xchg
mov
outsb
test
mov
mov
es
test
into
xchg
lret
push
pushf
dec
nop
dec
mov
adc
jl
fwait
mov
les
pop
xchg
xor
enter
mov
jl
mov
push
xchg
and
pop
and
pop
xor
lods
aam
inc
out
mov
push
addr16
loopne
lahf
mov
push
pop
dec
cmpsl
mov
or
push
aas
cmp
push
mov
outsl
js
push
push
sbb
xlat
mov
sbb
subb
lock
add
pop
adc
xchg
fs
mov
push
js
cld
adc
jle
es
enter
es
cmpsb
pusha
jl
jo
pushf
cwtl
push
jl
mov
xchg
add
xchg
or
and
sbb
pop
add
or
pop
test
mov
mov
push
das
push
add
aaa
dec
pusha
dec
das
pusha
sti
pusha
dec
push
and
push
and
jl
in
xchg
ja
nop
fldt
sub
clc
arpl
push
inc
sahf
dec
pop
mov
lcall
ret
pop
pop
mov
je
orl
out
mov
mov
call
outsl
push
push
test
push
roll
shrl
xor
xorl
mov
xchg
mov
movsl
adc
mov
mov
sbb
add
push
mov
mov
mov
out
mov
add
lret
pusha
enter
out
jns
fimuls
jle
mov
cmpb
pop
daa
leave
push
add
dec
into
xchg
or
je
das
xchg
inc
mov
or
dec
mov
adc
cmpsb
pop
fwait
movsl
mov
lods
mov
nop
jbe
sbbb
lds
xor
lods
nop
out
sbb
add
sti
and
jecxz
cwtl
mov
sub
repnz
push
mov
dec
or
enter
fsubl
fadd
int
ret
movsb
das
xchg
adc
mov
dec
ja
fcoms
and
mov
pop
les
xlat
sbb
jmp
nop
mov
rol
out
dec
xor
push
mov
lods
xor
idivb
movsb
jge
divb
push
std
stc
nop
mov
xor
das
shll
shlb
adc
outsb
xor
ficomps
cmp
pop
movsl
test
mov
aas
sti
and
pop
mov
mov
sub
mov
rep
enter
or
sti
and
and
pop
jb
mov
sub
adc
cmp
cmp
xchg
decl
sarb
xor
xlat
aad
clc
mov
orb
sub
ret
popa
cmpsb
enter
push
test
out
jp
mov
dec
pop
add
sub
xor
hlt
jno
enter
mov
or
hlt
shrb
sub
xor
adc
xchg
pop
sbb
mov
sbb
sti
mov
pop
inc
fisubrl
loopne
mov
inc
data16
add
push
stos
add
jmp
xor
fstpt
mov
jecxz
jno
scas
and
ret
out
xchg
xchg
outsb
adc
sarb
or
mov
jmp
rcrl
pop
fstpl
pushf
mov
test
aad
arpl
ffree
and
mov
mov
insl
rcll
loopne
lods
sbb
in
fmull
or
pop
dec
mov
sbbl
out
mov
jg
lds
sub
cmpsb
in
imul
int
mov
movsl
ss
mov
cmp
inc
ljmp
in
lods
out
das
test
push
sub
les
xorl
fiadds
adc
jl
jno
xchg
lcall
sbb
scas
and
jns
inc
push
ds
leave
stos
movsb
sub
int3
fdivrs
push
cmpsl
loopne
pop
ret
inc
rcrb
pusha
int3
scas
cld
les
sbb
inc
int3
addr16
mov
into
fistpl
add
pusha
addr16
popf
rclb
das
out
fsubl
inc
popf
rorl
push
add
enter
inc
sahf
outsb
xor
dec
pop
mov
dec
das
fs
enter
movsl
add
mov
dec
inc
jmp
sub
inc
sub
mov
fisttpll
je
add
stos
test
mov
mov
loope
in
idivb
movsl
fsubl
mov
sub
push
mov
popf
cmpl
lods
in
adc
lahf
loopne
shll
xchg
adc
mov
mov
sbb
faddl
fadd
push
mov
lock
mov
mov
imul
dec
lret
inc
call
jae
sbb
test
lret
test
cmp
pop
jl
enter
fbstp
sub
or
pop
test
cs
and
movsb
outsb
add
or
jae
jae
push
dec
xchg
ss
ds
mov
sbb
fisttpll
out
ficomps
push
or
std
inc
add
add
gs
jg
addl
xor
enter
mov
dec
mov
mov
test
xor
jg
pusha
lea
xor
sub
push
mov
mov
push
sarb
popf
cmp
popf
les
inc
cmp
mov
cwtl
lds
gs
sbb
je
xchg
xchg
test
pop
sbb
mov
into
sub
jle
mov
xchg
cmpsb
mov
out
hlt
repz
in
sbb
inc
jns
pop
outsb
in
pop
mov
and
cmpsb
lock
sahf
or
es
inc
dec
push
xor
adc
sub
gs
inc
pusha
outsl
in
pusha
out
mov
sub
pop
dec
and
push
pop
push
and
sbb
or
les
scas
adc
mov
loopne
fists
stos
movsb
sub
inc
insl
call
out
enter
adc
insl
sub
push
lods
mov
jno
out
cmp
enter
pop
inc
mov
xchg
out
sub
bound
adc
or
sub
mov
xor
pop
out
jno
ficoms
and
aas
loopew
mov
dec
mov
cmp
mov
mov
call
mov
xlat
fldt
imul
mov
inc
dec
das
push
push
mov
and
stos
and
cwtl
xor
pop
sbb
imul
repnz
sub
sbb
inc
push
adcl
in
sarl
xorb
jo
mov
mov
lock
scas
ficoms
sub
pop
or
cmp
mov
xor
movl
mov
mov
adc
mov
inc
scas
xorl
test
pusha
js
shlb
sub
rcr
shl
sbb
adc
xchg
mov
sahf
push
inc
out
or
pop
sahf
pusha
jno
testl
pop
jl
fsubr
mov
test
ljmp
xor
push
das
je
pop
sar
adc
mov
fwait
push
test
ficoms
loopne
sub
outsl
mov
out
pop
push
add
scas
pushf
sub
pop
or
cmp
fmuls
lret
outsb
outsb
mov
in
xchg
jnp
stos
push
bound
enter
dec
push
mov
sbb
pushf
and
daa
xchg
fistps
out
jg
sub
adc
xchg
clc
cmp
or
mov
dec
cmpsl
inc
and
jb
xlat
mov
xchg
sbb
test
mov
mov
inc
mov
and
jnp
mov
sub
scas
lock
aad
test
test
rol
iret
scas
xorb
aam
and
mov
mov
cmc
lahf
or
mov
inc
xor
adc
xlat
cmpsb
cmc
adc
mov
lcall
arpl
ss
call
lock
insb
sub
inc
js
scas
dec
mov
and
jl
sti
jo
jnp
das
or
lret
mov
stos
sbb
hlt
and
mov
repz
mov
mov
fwait
enter
cmc
sahf
pop
mov
or
jno
ss
mov
mov
cmp
sahf
scas
clc
ss
mov
xchg
or
ds
xor
fisubs
in
rdmsr
enter
clc
adc
shr
lret
and
lods
sub
rcl
mov
pusha
or
out
cs
mov
insl
movsb
pop
dec
ds
mov
mov
pop
xchg
sbb
dec
sub
ficomps
test
jg
adc
andl
xor
xchg
add
loop
rcrb
fwait
scas
fsubs
mov
outsl
divl
loopne
jecxz
mov
mov
mov
das
cmc
subl
ds
movsl
ja
out
mov
popl
jp
les
xor
xor
jo
fistl
push
dec
icebp
and
imul
jmp
push
dec
push
movsb
stos
mov
push
xchg
sbb
jecxz
mov
mov
adc
lea
popf
fidivs
movsl
mov
hlt
lock
test
scas
jl
fucomi
idivb
dec
mov
fldcw
mov
ret
mov
xor
or
out
mov
inc
scas
mov
push
daa
adc
xchg
js
in
jmp
mov
out
bound
lea
jno
or
xchg
les
or
push
cltd
jae
fwait
push
sbbl
mov
push
mov
enter
sub
out
cli
nop
push
das
sarb
inc
push
mov
pop
push
call
repnz
mov
jecxz
iret
stos
adc
mov
lcall
lods
mov
pop
cmp
adc
das
mov
and
pop
inc
cli
mov
idivb
sti
das
dec
call
xor
subl
outsb
lods
pop
xor
pop
test
cmp
mov
repz
xchg
cwtl
xchg
shl
test
dec
mov
mov
mov
dec
mov
fdivs
cmp
add
mov
dec
ret
lods
inc
mov
pop
pop
lods
mov
int3
mov
aaa
mov
repnz
adc
xorl
sbb
out
mov
jg
lahf
movl
cmpsl
xlat
stos
pusha
scas
lock
enter
lock
cmc
dec
mov
mov
out
nop
jae
pop
cld
jnp
jp
inc
mov
add
or
add
es
inc
dec
in
pusha
call
insb
int
stc
movsb
dec
int3
inc
std
push
pop
pop
sbb
aad
jl
xchg
dec
pop
rclb
pop
sahf
mov
inc
cs
lods
das
into
dec
imul
scas
adc
std
add
enter
or
and
push
fdivs
inc
pop
sub
dec
xchg
mov
nop
dec
dec
out
stos
cmp
imul
mov
fistl
push
dec
loopne
dec
mov
fsubrp
sub
dec
in
cmpsb
sub
mov
filds
frstor
pop
ja
add
jae
je
in
jno
loopne
mov
jl
or
insb
jl
push
xchg
dec
nop
xchg
adc
sub
fmull
adc
out
and
lret
addr16
push
push
das
gs
shrb
iret
pop
and
pop
dec
or
adcb
aam
cmp
js
xor
mov
cmpsb
push
xchg
xor
dec
in
xor
popa
lcall
hlt
mov
in
flds
imul
inc
addr16
pusha
cmpsb
cli
sub
jnp
mov
jle
xchg
mov
in
xchg
push
bound
xor
aaa
test
fs
sbb
addr16
or
pop
xor
add
pusha
xchg
push
outsl
pop
mov
or
movsb
out
ret
fs
test
stc
push
mov
arpl
xor
pop
enter
enter
addr16
jmp
in
mov
cwtl
cmp
outsl
rcr
das
push
mov
lret
and
mov
jns
pusha
popf
in
mov
dec
aas
xchg
push
cmp
mov
lds
clc
imul
pushf
sbb
add
ficompl
lcall
push
cmp
pop
mov
mov
adcl
cwtl
mov
jae
je
inc
lock
stos
mov
dec
and
dec
outsb
outsl
daa
pop
bound
cmpsb
fwait
lods
dec
xor
xor
mov
lods
int3
enter
icebp
iret
pop
pop
xchg
aas
adc
or
daa
testl
fwait
setb
sbb
mov
dec
jb
aaa
cmp
test
mov
xchg
jp
nop
mov
stc
mov
fsubr
insb
xchg
data16
mov
lret
test
daa
mov
pop
adc
test
mov
add
aaa
pop
fmuls
jmp
enter
mov
adc
out
cwtl
sub
in
adc
bnd
xchg
mov
mov
sbb
mov
mov
jno
nop
jmp
mov
test
sub
cmp
xor
adc
fildl
dec
sub
in
stos
pop
dec
sbb
loop
mov
fdivs
fdivs
mov
call
jg
push
call
fcoms
in
les
mov
mov
and
jmp
int
aas
mov
xor
sahf
out
ficomps
rclb
insb
or
lahf
popf
gs
fsubr
in
and
into
or
pop
xor
mov
push
sub
mov
gs
insl
xor
cwtl
aam
pop
sub
cs
imul
push
mov
aam
js
fmulp
push
scas
sbb
xchg
jbe
pop
arpl
pop
jecxz
test
mov
pop
dec
inc
xchg
rcrl
xchg
ficoms
clc
jb
jns
mov
bound
mov
pop
or
pop
jne
mov
jo
js
and
subl
test
ret
movsb
lret
in
stos
lock
mov
jl
movl
inc
fisubs
pop
xchg
xchg
sbb
push
cmpsl
ret
addr16
js
fdivrl
mov
ret
insl
fisubs
push
push
xchg
mov
xchg
sbb
gs
scas
in
out
fs
xchg
fsub
adc
fmuls
add
lds
fmuls
mov
aad
jmp
sbb
sbb
xchg
nop
sub
nop
xchg
cmp
out
test
mov
lock
mov
rol
sahf
hlt
loope
int3
sub
mov
dec
add
mov
out
adc
in
popf
mov
mov
mov
in
dec
lock
mov
or
iret
xor
add
out
loope
repz
test
and
dec
lret
xchg
pop
xor
mov
push
pop
shrl
xchg
movsb
jl
fwait
mov
sti
cmpsl
jmp
adc
scas
sub
mov
insb
xor
test
mov
cmp
inc
mov
xchg
test
mov
mov
add
xor
out
pop
scas
les
loope
add
addr16
ss
jb
frndint
or
and
xor
loope
std
popa
push
lock
sbb
xchg
ret
pop
mov
fwait
inc
pop
notb
jo
mov
mov
jge
rcl
stos
cmpsl
addr16
test
xlat
sbb
hlt
xor
insb
sti
pop
pop
aad
jae
mov
push
bnd
sbb
in
sbb
cs
add
mov
xlat
out
and
out
cli
test
cld
lods
push
adc
hlt
rcll
and
lods
das
mov
xor
or
mov
push
mov
int3
loope
lds
pop
js
mov
mov
mov
ficompl
jle
mov
test
cmpsl
mov
scas
push
movl
cwtl
bound
add
and
call
shlb
sbbb
mov
and
movsl
mov
fsubs
call
lock
ficompl
lret
aaa
jo
push
arpl
cwtl
sub
xor
in
gs
nop
repnz
mov
xlat
sub
cmpsb
iret
inc
pop
into
gs
pop
mov
push
or
enter
lds
insb
nop
mov
pop
data16
dec
dec
test
add
bound
int
mov
lds
dec
xchg
imul
movl
push
mov
cmp
add
dec
icebp
das
enter
dec
sub
inc
push
xchg
push
mov
inc
add
jecxz
mov
pop
or
lahf
rol
in
hlt
cmpsl
imul
scas
mov
cwtl
pop
movsb
sbb
hlt
lret
sub
sub
sbb
cmpl
and
out
mov
add
cs
cmp
cmp
pop
inc
pop
scas
sub
pop
int
jnp
and
into
out
adc
addr16
dec
imul
and
xchg
adc
fs
lods
repnz
ds
scas
icebp
js
mov
inc
pop
fst
int
pop
mov
test
sub
sahf
test
fldcw
ror
test
add
or
mov
xchg
dec
imull
cwtl
movsb
hlt
jne
lret
movsb
push
fisubl
xchg
jmp
daa
push
and
pop
mov
mov
sbb
mov
test
mov
pop
mov
js
cmp
negl
mov
jnp
push
jg
cwtl
fldt
arpl
lods
add
in
fcomi
mov
into
push
push
push
dec
icebp
xorb
out
enter
mov
or
jle
arpl
fimuls
xchg
adc
popa
mov
rorb
mov
mov
ficoml
mov
push
fldt
scas
jle
dec
and
pop
push
push
pop
outsb
pop
inc
scas
push
push
ljmp
push
mov
sbb
mov
pushf
out
xor
sahf
mov
jne
sti
xchg
dec
pop
mov
out
push
fistl
mov
cwtl
sbb
lods
dec
into
dec
cmpsl
pop
enter
lock
mov
sbb
pop
lcall
popa
dec
gs
test
add
sahf
sub
pushf
lods
adc
bound
push
cli
into
in
movsb
icebp
lret
cmp
cltd
test
cmpsb
lea
roll
dec
mov
das
sbb
adc
imul
xchg
icebp
xor
xor
out
xchg
fistpl
inc
mov
test
arpl
lcall
scas
call
lcall
xor
daa
mov
mov
mov
push
xor
imulb
hlt
xchg
cmpl
mov
clc
sbb
in
in
push
dec
mov
das
fxch
mov
inc
cmpsl
shll
test
loop
cmpsb
mov
adc
enter
addb
lcall
dec
es
dec
lea
enter
sbb
add
outsl
aaa
mov
mov
pop
pop
jbe
js
fsubp
add
mov
cmp
repnz
lcall
insb
cmp
shll
loopne
or
daa
xchg
xor
adc
fldt
lock
mov
in
jnp
das
mov
ljmp
mov
aaa
pop
xor
mov
daa
repz
lods
cmp
push
ljmp
mov
leave
mov
pop
insb
and
stos
push
mov
sub
xor
stc
add
lds
xchg
daa
fdivrl
je
daa
out
fnstcw
pop
out
xor
adc
mov
mov
mov
inc
adc
cltd
mov
jmp
jecxz
cld
sbb
push
pop
mov
dec
cld
movsb
ret
daa
mov
std
jbe
out
cmc
jmp
loope
mov
enter
push
sub
sti
add
xchg
and
jae
cmp
push
cld
aad
sub
add
dec
dec
rclb
call
mov
push
mov
sti
pop
push
out
pop
xor
inc
std
mov
push
lahf
ret
xor
js
or
icebp
testl
pop
dec
push
ret
cwtl
xor
pushf
sub
lahf
pop
lock
cld
dec
fsubl
nop
mov
cs
mov
nop
pusha
jl
test
push
ljmp
xor
nop
cmpsl
nop
mov
gs
cwtl
jl
das
mov
addr16
jl
sbb
test
sbb
popl
pushf
mov
sub
cli
pusha
or
jp
test
movsb
cwtl
mov
mov
out
pop
lods
nop
subb
test
cmp
das
js
pop
cmpsl
pushf
mov
insb
inc
test
insl
mov
sahf
add
add
cmpsb
add
xchg
push
fldt
sub
js
lods
add
and
adc
mov
cmpsb
insb
lods
push
dec
jnp
dec
mov
mov
or
lahf
mov
pop
mov
sbb
xor
scas
cmp
bound
shrb
push
nop
sbb
mov
pop
and
pusha
and
data16
mov
pop
shlb
je
int3
addr16
mov
sub
inc
dec
loope
int3
jle
mov
add
jo
or
xchg
nop
mov
sub
mov
mov
aam
mov
push
cs
push
les
enter
fwait
cmp
loopne
outsb
inc
xchg
jl
push
dec
and
fsubrs
sub
push
outsb
mov
lahf
mov
sbb
mov
push
jo
or
mov
insb
cmpsb
push
cwtl
and
lods
push
bswap
sbb
mov
add
sahf
shrb
pushf
push
lods
insb
lods
or
xor
add
sub
or
pop
cwtl
arpl
push
cwtl
lods
andb
pop
or
or
test
fldt
insb
addr16
pop
call
in
cmpsl
adc
mov
or
test
xor
jl
xor
stc
nop
jecxz
add
ss
pushf
pop
add
jo
cmpsl
adc
sub
and
enter
xor
sbb
pop
jns
xor
sbb
mov
loop
mov
insl
mov
jmp
insb
gs
cltd
xadd
push
jmp
jo
popf
iret
cwtl
mov
lods
das
add
ja
popf
daa
shrb
mov
xchg
lahf
loope
sarb
add
push
scas
cmpsl
out
mov
inc
scas
pop
mov
mov
xchg
xchg
mov
jmp
jno
inc
cli
mov
mov
sub
xchg
add
jmp
mov
mov
gs
outsb
daa
mov
sbb
xor
push
cmpsl
mov
mov
bound
add
lds
int3
push
fistpll
movsl
mov
loop
jle
lahf
addr16
xor
bound
push
inc
addr16
mov
xlat
rolb
cld
push
aam
lock
stos
adc
jne
push
or
xor
push
rol
mov
pop
cltd
inc
mov
and
jg
mov
mov
mov
roll
push
push
dec
cmpsl
sbbl
push
call
shll
das
mov
nop
shrl
in
call
jae
je
in
enter
mov
push
popa
repz
lds
inc
enter
sub
inc
xor
sub
mov
subl
btc
outsl
stos
fildl
js
subb
arpl
mov
pop
add
xchg
sahf
std
or
enter
fisubs
push
aas
jne
add
pop
add
enter
sarb
mov
mov
clc
arpl
lock
pop
mov
ret
or
pop
push
or
ss
jmp
ret
adc
xchg
jne
in
mov
mov
mov
mov
jbe
sub
in
add
enter
mov
cmp
mov
gs
mov
sbb
push
ret
in
imul
mov
mov
jl
adc
inc
imul
xchg
sti
aas
pop
enter
add
dec
or
jmp
lcall
sbb
repz
mov
mov
push
mov
fdivl
ret
call
mov
pop
enter
jg
inc
xchg
mov
out
outsl
mov
pop
adc
mov
sbb
test
sahf
and
js
lea
jo
adc
cmp
push
mov
inc
lock
dec
pop
mov
mov
adc
push
jo
push
xchg
xor
pop
insb
and
das
enter
popl
inc
adc
push
push
mov
arpl
fsubl
inc
into
stos
js
mov
ljmp
test
add
stos
push
cltd
out
adc
add
cmp
stos
scas
sub
cmp
mov
xor
pop
xor
mov
dec
sub
push
bound
fcom
stos
cwtl
fcomps
andl
mov
scas
out
outsl
mov
enter
sub
stos
xor
js
sub
insb
xor
jns
pop
pop
dec
or
sbb
jle
lods
and
pop
dec
push
sub
sub
lock
sub
pusha
pop
test
enter
test
cmp
cmpl
sbb
test
ret
or
call
ljmp
or
in
add
shl
jns
dec
or
movsl
dec
iret
pop
outsl
sbb
mov
daa
mov
leave
adc
in
sub
in
sbb
or
dec
pop
popf
stos
sub
mov
xor
rcll
sub
mov
movsl
shlb
cmpsb
adc
les
xchg
add
pop
push
xor
fisubrs
movsl
pop
pop
movsb
add
sahf
sbb
push
push
lds
sub
sub
or
push
sarl
out
xor
dec
jg
mov
and
sub
lods
add
jl
adc
aad
stos
testb
push
xor
pop
xchg
loope
or
das
push
and
or
push
cld
push
out
pop
nop
mov
pop
dec
out
test
mov
cmp
pop
jl
sbb
xchg
sub
inc
andl
and
cs
push
xor
xchg
xchg
sbb
pushf
iret
xor
ja
sbb
push
lods
or
adc
lock
xor
in
pop
fildl
jnp
pop
xchg
mov
sahf
pop
push
dec
add
out
jl
popl
jecxz
test
xchg
inc
faddl
add
mov
pcmpgtw
mov
jl
fwait
adc
mov
jo
ffreep
std
fisttpll
mov
and
mov
push
push
push
mov
rolb
cwtl
cmpsl
jnp
lret
push
enter
aaa
and
sahf
scas
out
xchg
xor
test
in
pop
cmp
out
mov
mov
adc
mov
hlt
out
das
xor
inc
imul
pop
xchg
mov
subl
cmpsl
sub
cmp
jne
adc
and
lods
mov
subl
push
nop
dec
dec
mov
out
imul
xchg
cmp
push
hlt
cmpsl
lods
inc
push
pop
pop
incb
fldt
sub
add
das
mov
fistpll
clc
mov
mov
mov
mov
repnz
jmp
jb
shlb
lret
daa
lret
fucomp
and
scas
das
fnstenv
push
and
repnz
or
das
lods
rcll
scas
nop
loope
in
movl
cwtl
sub
sbb
in
in
sbb
ds
sub
push
push
push
pop
cmp
stc
xchg
mov
sahf
out
inc
pop
aad
xor
in
bound
fisttpll
jmp
dec
inc
push
pop
testb
mov
xchg
dec
mov
or
push
ljmp
scas
pop
mov
fcmovb
pop
ret
mov
sbb
cmp
mov
or
iret
lods
stos
xor
sub
pop
out
cmp
test
out
xchg
hlt
filds
push
lods
out
jmp
and
dec
mov
adc
and
mov
jo
mov
aam
mov
fnstenv
inc
xchg
pop
lds
pop
out
and
lret
int
sub
adc
orl
mov
mov
and
ja
pop
shl
rcl
lret
mov
mov
cmp
fwait
mov
scas
jecxz
faddp
cmp
jp
push
in
stos
jo
in
data16
mov
inc
mov
mov
xor
push
xor
out
aad
cmpsl
mov
addr16
or
dec
and
mov
enter
movsb
mov
dec
dec
push
lret
leave
cmpsb
push
out
addr16
ljmp
xchg
xabort
mov
mov
idivb
dec
fldl
ret
movsl
fidivrs
or
adc
push
scas
xor
jb
ret
dec
xor
in
pop
repz
gs
sub
inc
xchg
mov
pop
movsl
push
or
outsl
lods
sub
xor
pop
lret
daa
push
xor
movsb
jecxz
sti
xchg
mov
mov
adc
sub
mov
outsl
clc
sub
mov
sbb
push
lret
lods
sahf
add
lret
xchg
xchg
movsb
jo
cmpsb
out
test
xor
sti
mov
sub
movsb
call
add
mov
lcall
imulb
cmp
nop
inc
gs
repnz
adc
mov
mov
mov
adc
lds
jle
dec
adc
push
enter
mov
xchg
sub
mov
adc
sbb
sub
js
xor
out
fstp
cwtl
subl
daa
push
aas
xor
enter
aad
push
sbb
in
subl
and
mov
bound
jo
mov
mov
add
dec
leave
mov
xor
outsb
inc
cmp
jb
ret
sub
lret
movsl
adc
aas
ja
jge
sbb
lret
pusha
popf
sbb
in
ds
push
cmpsl
xor
enter
mov
xchg
fmull
cwtl
lds
jne
pop
sahf
clc
out
outsb
xchg
out
movsb
inc
movsb
std
ret
lret
in
fs
mov
mov
shrb
fwait
add
rorl
cmp
jl
outsl
lret
inc
ss
adc
pop
xchg
pusha
out
pusha
dec
jecxz
xchg
mov
enter
rolb
xor
cmpsb
mov
stos
xchg
scas
cltd
cmp
xchg
xchg
movl
mov
cmpl
shll
fs
cld
repnz
call
loope
push
jo
outsl
mov
into
stc
mov
popf
dec
mov
dec
ja
clc
adc
xchg
sbb
xchg
jmp
enter
mov
jecxz
iret
movsl
js
orb
rcll
shlb
lcall
enter
sbb
negl
or
into
push
shl
loopne
mov
scas
stos
dec
sahf
mov
mov
in
mov
stos
push
lea
enter
out
dec
pop
push
out
dec
adc
mov
add
xchg
iret
lods
addr16
into
xchg
sub
sbb
lds
mov
pop
iret
mov
fistpll
out
sbb
cld
xor
dec
push
pop
fisttpl
pop
adc
sti
pop
xchg
jle
hlt
dec
scas
movsl
jo
loop
mov
mov
out
ds
fsubrs
int
popa
rcrb
stos
out
leave
mov
push
and
loop
sub
mov
mov
adc
adc
push
pop
adc
mov
addr16
sub
inc
pop
les
inc
xor
sbbl
inc
int3
mov
popa
int3
and
pop
clc
jo
in
push
sub
push
pop
jnp
jnp
push
mov
mov
stos
xchg
in
xor
add
aad
mov
sub
mov
and
iret
repz
dec
ret
xchg
mov
pop
popa
outsb
or
enter
roll
pop
fwait
gs
or
push
sbb
enter
out
fists
pop
enter
js
mov
stc
push
rol
je
mov
mov
mov
in
mov
push
cltd
call
pop
mov
sub
and
mov
enter
push
mov
mov
hlt
add
bound
je
sub
into
stos
and
test
pop
sub
jne
popa
jle
mov
push
out
sahf
pop
pop
adc
add
icebp
cmpsl
mov
je
scas
fldcw
mov
or
adc
cmp
mov
outsl
aas
sbbb
sbb
ss
cmp
test
popf
jno
stos
pusha
xor
test
sub
or
push
popl
fistps
scas
mov
dec
jne
incl
enter
pop
rorb
mov
sti
xor
push
jg
daa
out
sbb
or
cmp
sbb
or
push
xchg
mov
mov
add
orl
cwtl
rolb
push
sub
mov
push
int
pop
int
ret
jo
repnz
sbb
push
mov
mov
mov
mov
pop
int3
ret
mov
int3
call
lods
cmp
fsubrs
cmpsl
or
lahf
cmp
sub
pushf
adc
and
push
sbb
mov
xor
cld
cmp
sbb
in
cmp
int3
mov
fadd
bound
fst
xchg
push
imul
push
push
pop
mov
addr16
sahf
mov
ret
cmc
daa
dec
test
bound
xor
movsl
dec
mov
dec
jbe
xchg
cmp
inc
add
dec
js
out
mov
aam
cltd
movsb
mov
pop
sub
call
jno
mov
adc
gs
inc
aaa
roll
in
ficoms
dec
lret
ret
pop
outsl
add
push
int
nop
repnz
ds
loop
aad
inc
mov
out
push
pop
fldt
push
jo
loopne
into
fmull
repz
mov
and
stos
nop
sub
scas
test
mov
lds
icebp
fs
popf
ja
fstpt
adc
mov
xchg
pop
cli
rorl
push
and
out
cmpsb
jo
pop
mov
je
pop
adc
pop
sub
mov
pop
push
push
cmp
jb
mov
addb
cmpsb
lret
jge
ds
jne
imul
xchg
push
cwtl
nop
sahf
addr16
stos
lods
mov
test
mov
cmc
xchg
cli
dec
mov
ret
mov
subb
inc
stos
cmc
int
mov
repnz
or
adc
mov
jno
push
sub
int
mov
dec
arpl
cwtl
negb
and
or
push
imul
je
cmp
mov
mov
jg
push
or
lods
push
aas
xchg
xorl
outsb
xor
mov
pusha
xorl
mov
cmpsb
ja
mov
cld
adc
test
dec
mov
outsl
push
lock
int3
and
mov
dec
push
mov
arpl
mov
xchg
inc
cwtl
das
rolb
xchg
mov
pusha
scas
rolb
mov
test
and
xor
push
aam
dec
mov
xor
hlt
jns
sbb
push
sub
mov
cmc
mov
repz
mov
push
fsincos
dec
mov
outsl
cld
pop
mov
cmp
out
fimuls
mov
cmpsl
mov
push
xchg
cltd
mov
xchg
movsb
insl
in
mov
pop
sub
test
outsb
xor
imul
lea
and
mov
outsl
dec
outsl
lret
std
nop
pop
dec
lods
daa
xadd
mov
push
xchg
aad
mov
dec
imul
nop
xorb
mov
inc
addb
mov
push
popf
push
aaa
and
mov
popf
pushf
ja
mov
lock
mov
out
pop
mov
mov
or
sbbb
sbbb
lds
test
cmpb
lahf
mov
pop
mov
pop
or
mov
jb
jmp
lcall
mov
pop
mov
in
cmc
mov
mov
mov
mov
sub
mov
scas
mov
dec
cmpl
push
push
lahf
jg
mov
jnp
fs
pushf
ds
out
mov
je
sbb
das
pushf
cwtl
and
xchg
stos
or
lahf
jle
stos
xchg
movsl
mov
in
lods
cltd
pop
jge
push
les
mov
sub
mov
stos
mov
jns
flds
pop
mov
mov
jg
stos
cltd
mov
in
mov
outsb
cwtl
int3
or
in
or
scas
scas
popf
dec
dec
lea
cltd
das
add
mov
mov
lock
dec
pusha
sub
pop
sbb
and
sahf
test
cmpb
mov
push
cmp
enter
imul
sarb
sahf
popl
shll
dec
movsb
add
mov
mov
pop
pop
mov
bound
lret
lahf
pushl
jmp
xor
mov
add
mov
das
call
dec
xchg
jns
and
dec
stos
outsb
xorb
push
rcrb
xchg
dec
aas
test
push
mov
adc
sbb
mov
inc
stos
insb
mov
popf
scas
push
xchg
int3
xorl
push
push
lahf
sarb
negb
jne
xchg
rclb
fbstp
push
xor
mov
aad
dec
cmpsb
push
ljmp
dec
mov
mov
pop
or
cmp
loop
ficoms
cwtl
mov
scas
xor
cwtl
mov
into
test
xor
sub
mov
push
scas
pop
aam
dec
mov
popf
dec
mov
sarl
inc
and
adc
scas
mov
cs
sub
push
outsl
insb
test
cwtl
out
push
popf
push
loopne
mov
dec
fs
mov
js
sub
push
pusha
movsl
rcrb
lock
dec
cmpb
out
push
jg
in
cwtl
mov
insb
aaa
sub
popf
dec
imul
mov
loopne
pop
int3
pop
xchg
ljmp
popf
push
mov
push
xchg
addr16
jecxz
mov
icebp
cmp
loope
popf
dec
lods
pop
or
mov
mov
movsb
mov
lods
xchg
sbbb
cmpsl
cli
mov
sub
movzbl
ret
mov
and
cltd
dec
fstl
mov
or
movsb
adc
add
mov
mov
and
cmc
adc
mov
sbb
mov
xchg
lods
addr16
jo
mov
jecxz
jp
out
in
xor
mov
jo
push
lods
and
sarb
mov
sbb
into
mov
pop
and
jl
fnstsw
clc
push
daa
mov
lcall
scas
pushl
xchg
mov
jg
mov
or
push
test
cwtl
mov
mov
sti
in
popf
push
push
push
or
mov
cmp
lret
cwtl
add
inc
cwtl
mov
push
movsb
std
mov
test
adc
dec
scas
inc
jg
mov
sbb
sub
mov
lret
xor
pop
jns
dec
ret
imul
mov
cltd
xor
movsb
inc
dec
sahf
xchg
scas
jno
imul
rorb
xor
inc
mov
fcmovnu
mov
xchg
mov
rcl
popf
stos
adcl
popf
test
mov
adc
xchg
dec
mov
movsl
push
ret
mov
push
push
or
nop
aas
push
scas
and
pusha
mov
add
fcomps
push
aam
daa
xor
pop
mov
xchg
sub
pop
dec
cli
mov
push
repz
call
add
cmpb
lahf
scas
mov
sbb
mov
push
out
jns
cs
scas
popf
dec
xor
test
movsb
cmp
push
stos
push
push
sub
xchg
mov
inc
out
mov
push
push
xlat
leave
in
jae
push
pop
popf
push
test
mov
cmpsb
inc
push
mov
sub
push
xor
lea
movsb
mov
dec
lods
mov
jo
aad
pop
mov
pusha
cwtl
es
pop
xchg
or
cltd
mov
dec
lcall
dec
and
mov
dec
icebp
mov
popf
scas
push
push
adc
xlat
js
and
inc
or
dec
outsl
add
mov
mov
jl
inc
inc
xlat
mov
out
xor
push
popf
push
and
adc
popa
adc
dec
jnp
in
mov
push
mov
test
xor
cmpl
nop
push
in
jge
in
mov
add
lahf
cli
mov
data16
cwtl
mov
push
cwtl
xor
mov
sub
and
rcrb
mov
stos
sbb
stos
rorl
xchg
push
fldenv
mov
add
fldl
mov
int3
push
mov
lods
fstpl
mov
jo
loopne
adc
pop
and
movsb
mov
cmpsb
flds
enter
ret
push
push
fst
mov
inc
test
cmp
mov
cwtl
mov
pop
lods
int
mov
test
push
lret
mov
scas
aaa
xchg
push
jge
lahf
lock
scas
dec
xchg
adc
xor
xorl
and
xor
adc
add
leave
mov
movsb
cmp
sbb
push
in
add
popf
cmp
lods
jmp
bound
mov
std
mov
xchg
adc
push
popf
push
lods
movsb
int3
iret
mov
movsb
cmc
mov
popf
dec
lods
out
jge
mov
fld
adc
jmp
loop
cmp
test
xor
scas
popf
push
mov
lahf
push
pop
call
inc
jmp
mov
movsb
pop
fdivs
pop
pop
mov
push
ficomps
jae
cld
mov
push
sub
movl
icebp
lret
lods
in
pushf
enter
les
and
addr16
jno
xchg
je
loope
push
sub
fs
int
sub
and
and
ds
daa
stos
push
and
sbb
js
test
loopne
dec
hlt
sahf
fisttpll
add
clc
cwtl
repnz
xor
rcrb
test
into
xor
pop
push
add
jle
mov
or
push
int3
sub
pop
pop
adc
clc
mov
jo
xlat
mov
lods
out
cmovo
pop
mov
cwtl
rclb
xor
jo
into
daa
pop
lcall
imul
je
es
int
pop
pusha
push
in
enter
xor
inc
aas
jns
mov
add
fcmove
dec
jnp
or
xchg
icebp
mov
mov
dec
inc
lret
test
cwtl
pop
lahf
scas
scas
xchg
push
into
repnz
adc
pop
jp
cwtl
lods
adc
cmc
lret
in
pop
sbb
jb
mov
push
outsl
bnd
divl
enter
pop
push
push
or
jle
mov
dec
aas
sbb
xor
mov
gs
out
fs
jge
or
dec
test
mov
fs
fnstenv
ja
les
mov
dec
sub
inc
mov
in
clc
pushf
lea
sub
sub
jmp
mov
cwtl
es
fwait
mov
imul
enter
outsb
frstor
jnp
mov
rep
pop
enter
popf
pop
sbb
mov
das
adc
hlt
orl
or
insl
xorl
mov
cmp
daa
mov
cltd
pop
push
xor
cwtl
sahf
jge
push
lock
nop
lods
inc
pusha
shll
mov
and
insb
cmp
int3
movsb
daa
outsb
mov
xlat
lea
mov
sub
adc
int3
dec
push
jo
jbe
nop
and
sub
pop
lods
push
push
popa
mov
sub
cltd
xchg
push
jo
in
adc
movsl
clc
sub
outsl
xlat
lods
jg
fwait
out
scas
adc
in
aaa
das
push
dec
imulb
push
push
movsl
push
outsb
cmp
sub
xlat
dec
push
adc
fisttpl
dec
mov
lahf
daa
in
cmpsl
adc
jno
push
push
cmp
mov
orb
out
bound
push
sbb
xlat
cmpsl
repz
stos
pop
cmp
std
lahf
sub
xor
mov
rcrb
or
das
sti
cmp
or
fimuls
push
lcall
insb
inc
movsl
push
filds
mov
mov
push
jle
lcall
or
adcl
std
jmp
jns
pop
insl
loop
mov
mov
adc
cli
negl
mov
pop
cmp
mov
dec
aad
leave
clc
sub
jns
sub
flds
and
jb
test
push
cmpsl
adc
inc
test
imul
stos
out
mov
sahf
addr16
sbb
mov
lret
jo
xchg
inc
jl
jle
push
adc
insb
jo
inc
mov
cmp
push
mov
push
sbb
mov
adc
mov
je
push
adc
jo
sarl
xchg
mov
sbb
clc
dec
aaa
frstor
xchg
xchg
aas
push
into
sub
shl
out
cs
mov
mov
nop
dec
inc
mov
sbb
cmp
jne
cmc
jg
sbb
ja
jecxz
rcl
and
inc
cmp
cltd
enter
cmpsl
aas
push
xchg
cld
jmp
push
mov
pop
enter
sub
add
mov
sbb
int3
in
push
sub
subb
dec
ds
aas
push
lods
mov
mov
mov
pop
mov
pusha
sbb
dec
sarb
sub
mov
cmpsb
pop
sub
lock
sar
inc
outsl
insb
sbb
push
scas
mov
int3
fisttpll
adc
mov
cs
xchg
aam
adc
mov
inc
ss
movsb
push
cmpsb
xlat
nop
enter
fisttpl
cmpsl
cli
inc
addr16
popf
push
scas
dec
pop
fwait
movsl
sub
insl
daa
clc
out
xorb
mov
dec
or
test
clc
sbb
adc
xchg
pop
xchg
fsubrs
pusha
adc
jmp
mov
das
pop
dec
je
arpl
adc
dec
cs
test
andb
inc
outsl
jno
inc
pop
xchg
arpl
pushf
push
in
jo
and
rcll
cwtl
sub
adc
jae
mov
xor
test
out
addr16
in
lods
or
scas
in
repz
out
iret
nop
lea
mov
cld
in
cmpsl
inc
pop
fwait
movsl
insb
mov
xor
dec
idiv
test
xrstor
scas
out
mov
xor
int
inc
clc
sahf
xor
out
mov
cmp
xor
nop
scas
fwait
mov
jle
inc
pop
pop
bound
pushf
xchg
or
pop
jle
push
jge
push
sub
out
pusha
in
mov
push
and
xor
pop
cmc
idiv
jae
cld
push
inc
mov
dec
nop
shlb
or
push
testl
movsl
xor
sahf
outsb
push
push
nop
mov
sub
ja
mov
jnp
xchg
repz
pusha
and
sbb
sbb
push
scas
dec
dec
stos
test
nop
int3
imulb
mov
movsb
int
jne
out
leave
mov
sbb
scas
dec
stc
inc
out
test
in
push
jmp
jns
mov
xchg
cmpsb
cltd
shrl
test
add
pop
enter
outsl
mov
pop
je
jbe
push
sub
dec
ss
sub
in
das
sbb
fwait
out
dec
mov
cmp
pop
leave
nop
pop
out
jge
stos
test
aad
je
pop
scas
cmp
inc
fistpll
push
pushf
xchg
insb
mov
pop
enter
adc
pop
scas
push
dec
outsb
cmp
push
les
mov
mov
cmp
xchg
mov
mov
imul
or
je
bound
adc
gs
cmp
clc
inc
outsl
ja
sahf
sub
sbb
imul
scas
dec
ror
jae
dec
mov
lock
clc
stos
sbb
add
and
dec
aam
lods
xor
inc
or
rorb
out
add
mov
pop
add
mov
and
cmp
mov
dec
cmpsb
dec
std
xor
mov
push
enter
pop
mov
xlat
mov
ret
dec
cmpsb
sarb
cmp
outsl
add
jo
mov
inc
push
clc
imul
stos
and
ds
fs
inc
xor
clc
test
lahf
jo
add
fstp
pop
jnp
nop
ja
adcb
push
mov
addl
mov
outsb
jo
pushl
rclb
pop
fs
out
lods
adc
addb
lods
int
js
jg
in
dec
lds
mov
dec
mov
arpl
daa
xor
sub
shlb
xchg
pop
aam
mov
clc
mov
ficomps
out
sub
lods
enter
je
add
cmpsb
andl
xor
sub
in
pop
popf
pop
mov
popf
das
aas
outsl
mov
enter
cmpsl
jno
leave
pop
sub
adc
adc
cmp
jns
pop
in
sub
pop
and
push
popf
jmp
mov
mov
xor
loopne
adc
lods
mov
ds
gs
lahf
and
popa
fidivrl
int
hlt
lods
lods
pusha
repnz
mov
dec
pop
cwtl
fwait
push
insb
pusha
pop
pop
jno
into
push
in
or
dec
pop
xchg
xchg
sbb
dec
int3
sbb
ljmp
sbb
loopne
into
xor
fbld
or
add
mov
mov
shrb
xor
cmovne
dec
mov
into
dec
test
push
lcall
in
mov
aas
cmc
shrl
subb
cltd
cmp
das
dec
pop
gs
or
pusha
push
into
int3
or
dec
popf
fs
mov
xchg
les
xchg
sbb
dec
loope
dec
push
adc
cli
scas
push
dec
adc
rcll
adc
pusha
jae
mov
and
mov
jb
pop
in
dec
or
clc
test
in
sub
insb
fdivl
in
pop
dec
sbb
testl
sbb
lahf
push
pusha
mov
xor
cmpsl
mov
and
movsb
jnp
pushf
push
outsl
dec
cmp
pop
in
dec
xchg
adc
xor
push
push
lods
and
dec
movsl
xlat
jae
out
cwtl
pop
stos
pop
and
inc
inc
jb
movsb
pop
mov
repnz
sbb
dec
pusha
push
cltd
push
sub
in
sub
out
inc
iret
xor
data16
dec
subl
xchg
dec
mov
scas
leave
adc
adc
jmp
sbbb
jl
sub
jmp
mov
mov
popf
popf
adc
xchg
push
or
nop
enter
out
mulb
pop
daa
xor
imul
jo
and
popa
stos
mov
mov
push
and
dec
push
inc
nop
adc
mov
jle
xchg
cmpsl
push
inc
adc
cli
sbbb
stos
das
push
mov
mov
clc
imul
fwait
sub
xchg
push
and
jp
pusha
adc
adc
mov
dec
mov
sub
nop
shlb
stos
pop
aad
add
lea
outsb
das
scas
dec
mov
rcrl
outsb
jns
lret
dec
ret
dec
mov
push
pop
dec
cmp
sbb
out
ror
xor
scas
dec
ss
int3
jmp
clc
mov
mov
cwtl
mov
xor
repz
daa
nop
inc
movsb
xchg
cmp
add
into
lock
xchg
lods
fs
jb
sub
mov
data16
inc
xor
dec
cmpsl
pop
adc
push
jbe
insb
adc
dec
pop
push
lahf
mov
fsubrl
cmc
fisttps
mov
ljmp
dec
inc
and
add
and
add
cwtl
adc
sahf
push
scas
and
pop
add
les
pop
les
xchg
out
insl
sbb
adc
push
adc
lods
sbb
jmp
and
xor
sar
cmp
scas
mov
xorb
outsl
scas
and
sub
fldl
ss
lock
mov
mov
xor
inc
call
int
adc
leave
jb
push
mov
xor
scas
test
in
mov
jne
jo
pop
mov
jae
cmp
out
outsl
ss
aad
cmc
clc
jnp
cmp
dec
or
mov
push
mov
jne
shrl
pop
pop
push
inc
and
arpl
mov
mov
mov
dec
into
jl
arpl
adc
fisttps
xor
push
roll
ret
pop
rcrb
cmp
sbb
jle
adc
push
mov
mov
push
das
cld
or
mov
and
cmpsl
popf
mov
arpl
push
xchg
out
clc
fisttps
mov
addr16
add
add
jl
jo
popa
data16
cmp
insb
mov
mov
orl
lcall
pop
leave
mov
jmp
xor
filds
ja
cmpl
inc
scas
push
data16
jge
mov
sub
nop
mov
inc
jo
cmp
daa
mov
inc
dec
inc
aaa
pop
mov
popf
roll
lods
dec
xlat
or
loopne
sub
clc
andb
faddl
roll
orb
clc
push
outsl
mov
jmp
adc
cwtl
test
sbb
nop
adc
push
cmp
sbb
pop
lret
cltd
push
rclb
pusha
mov
xchg
aam
xchg
jo
in
mulb
sub
jmp
adcl
sbb
fldl
roll
inc
xlat
popf
sti
jge
mov
ret
cltd
outsl
je
and
popf
js
sub
adc
jnp
mov
mov
stos
enter
mov
push
outsb
mov
lods
enter
sub
pop
orl
jmp
in
std
dec
ds
mulb
arpl
movsl
nop
adc
mov
clc
sbb
sbb
je
jnp
sub
mov
in
ljmp
outsb
subl
test
fucomip
mov
xor
ljmp
sbb
jo
stc
xchg
daa
cmpsl
and
jmp
xchg
jle
jg
pop
dec
cltd
sbb
jns
add
mov
pop
mov
sbb
out
pushf
xchg
or
sbb
fmuls
aas
mov
add
mov
xchg
push
push
sub
popf
jle
dec
arpl
sbb
mov
adc
pop
lods
pop
fcomps
movsl
adc
jmp
in
clc
cmp
cld
shrl
mov
lods
cmp
add
adc
loope
pop
add
pushf
ficomps
aaa
sbb
and
sub
adc
sbb
ss
outsl
sbb
shll
and
lahf
imul
inc
push
push
subl
sti
sahf
xor
sbb
mov
push
ret
imull
sub
and
adc
lret
repz
add
mov
in
andl
sbb
stc
adc
outsb
arpl
jns
in
dec
pop
pop
outsl
movsl
pop
int
fistps
imul
lea
lods
icebp
pop
mov
sbb
stos
repnz
push
roll
mov
insb
pop
enter
xchg
jnp
not
test
jl
sub
and
sahf
push
cmp
mov
jle
lea
sbbb
adc
data16
imul
movsl
hlt
in
repz
pop
mov
out
push
popf
adc
sub
shll
lea
sbb
jp
repz
xor
aas
sub
mov
repnz
nop
and
cmpsl
arpl
aad
ljmp
test
int
mov
cli
jmp
or
aam
movsl
fists
mov
mov
pop
xchg
xlat
mov
aaa
scas
sub
or
int
fstl
mov
les
mov
les
in
inc
mov
adc
int
jb
jno
jg
add
adc
mov
jbe
add
divl
in
xor
fdivp
shrl
mov
sarl
jmp
mov
jo
and
fldt
enter
xor
jbe
fadds
dec
pushw
push
loopne
xadd
jns
inc
fldenv
ret
out
pop
sbb
xor
imul
int3
jecxz
loope
or
pop
mov
and
shll
jg
aas
hlt
mov
pop
ds
mov
jp
ret
out
mov
scas
insl
adc
mov
mov
fst
mov
xchg
sub
add
inc
scas
rcrl
clc
mov
scas
inc
add
icebp
sbb
mov
repz
test
movsl
pop
subb
adc
mov
sbb
imul
fwait
cmp
lcall
sbb
jo
daa
cs
jae
xor
mov
insl
int3
adcl
fs
mov
jae
mov
xor
les
stos
leave
xor
clc
sbb
ja
sbb
mov
stos
xlat
sti
ss
ds
out
adc
repz
js
cld
popf
test
lods
jbe
push
and
mov
das
mov
push
inc
mov
insb
xchg
mov
jle
pop
push
ficoms
push
pop
lock
jo
std
jecxz
sub
leave
push
mov
mov
or
cwtl
enter
stc
outsl
outsb
nop
adcl
cs
mov
mov
popa
and
test
mov
lret
push
push
ss
mov
fucom
mov
xchg
lods
dec
jg
sahf
out
lds
or
aas
clc
ja
pop
es
outsl
push
mov
and
mov
dec
push
add
pop
jno
mov
in
cmpsb
lods
push
mov
adc
jmp
hlt
push
pop
stos
mov
mov
pop
movsb
push
cmpsl
cmp
and
jmp
push
xor
enter
sbb
clc
movsl
inc
jb
mov
push
xlat
insb
imul
adc
sbb
movsl
inc
lea
lret
xor
ja
mov
cmpsb
xor
mov
mov
imul
sbb
add
dec
xchg
pop
push
or
mov
pop
mov
jle
ja
lcall
and
or
sub
lock
adc
pusha
push
xlat
mov
into
jp
out
cmpsl
xlat
push
scas
je
mov
fsts
icebp
js
out
push
inc
xor
or
adc
fs
fcmovnu
jne
inc
dec
lods
push
pop
aas
pop
adc
adc
and
das
and
stos
pushl
pop
sub
in
mov
pop
jns
lcall
clc
pop
jge
lds
xor
sbb
push
test
xchg
lods
aas
xchg
enter
sti
xchg
adc
jno
cld
arpl
ds
daa
jb
jbe
cmpsl
aaa
xor
daa
dec
cmp
stos
ljmp
mov
pop
leave
out
sub
into
cmp
and
jo
pop
pop
or
sbbb
lret
clc
mov
pop
sbb
cmp
cwtl
clc
mov
inc
orl
cmp
jns
out
icebp
jle
pusha
fdiv
outsb
lcall
pop
in
jnp
ret
mov
sti
jae,pn
lahf
mov
inc
test
int
bnd
adc
fistpll
sbb
push
fmuls
push
xlat
mov
add
mov
nop
stos
adc
popa
mov
jb
adc
ljmp
pushf
ret
ja
repnz
adc
sbb
sub
xchg
jo
mov
mov
dec
mov
daa
xor
rcrl
int
push
pusha
das
lea
add
popf
cltd
adc
andb
dec
dec
dec
dec
adc
insl
decl
movsl
cmp
sub
enter
mov
cmp
clc
mov
mov
in
push
xchg
andl
inc
pusha
bound
loopne
adc
mov
test
enter
scas
mov
js
daa
out
jo
push
adc
das
pusha
insl
ljmp
arpl
and
xchg
and
orl
test
in
push
in
into
push
das
pop
sti
adc
mov
xor
push
mov
icebp
leave
out
scas
ljmp
insl
mov
call
iret
sub
mov
out
rcrl
mov
cmpsb
ljmp
mov
decl
lods
enter
cmpb
clc
lahf
pop
push
mov
jbe
int3
push
or
iret
cmp
mov
sub
out
imul
pop
clc
mov
ret
mov
sbb
push
popf
mov
pop
mov
push
mov
add
stos
add
adc
les
idivl
shll
push
mov
cli
xchg
outsb
test
dec
add
ret
shlb
mov
mov
inc
add
mov
sub
mov
ja
mov
ja
and
pop
incl
sbb
mov
ret
pop
xchg
mov
mov
stos
pop
sbb
loope
cwtl
xchg
leave
aas
mov
dec
pop
outsl
and
fcmovb
mov
ss
pop
adc
mov
fnstsw
std
gs
push
jb
mov
xchg
or
xchg
mov
movsl
aas
xchg
pushf
int
fcoml
pusha
loopne
pop
addr16
aas
mov
mov
sbb
int
mov
shl
adc
mov
inc
mov
f2xm1
hlt
add
andl
enter
xchg
xchg
data16
es
xchg
mov
lods
pop
sub
clc
data16
addr16
sbb
lods
cmp
enter
mov
sbb
mov
mov
jb
fsubp
scas
cwtl
out
xlat
xchg
das
mov
sahf
pop
inc
scas
jo
jge
pop
mov
popf
insl
pop
adc
jo
push
xchg
sub
nop
loopne
aam
daa
stc
sbb
inc
rorb
lcall
dec
add
mov
xor
sti
mov
pop
cmpsb
aas
mov
mov
scas
jg
mov
dec
test
pop
in
clc
mov
mov
jle
push
nop
pop
add
inc
mov
mov
xor
jmp
out
idivl
sub
lret
inc
outsb
mov
lds
jl
pop
enter
xchg
pop
push
cld
mov
cmp
sbb
push
out
bound
xor
add
mov
jge
jmp
mov
dec
out
je
xchg
push
xorl
push
test
jno
and
or
ret
jb
icebp
inc
dec
or
jp
leave
lods
stos
xor
adc
es
cmc
icebp
movsl
aaa
mov
paddusb
dec
out
aad
mov
nop
outsb
scas
xor
movsl
mov
mov
aas
sub
xor
adc
clc
add
movq
mov
or
mov
scas
mov
out
inc
cmp
xchg
mov
ds
aad
lods
enter
dec
lods
cwtl
cmpsl
mov
mov
sub
stos
dec
pop
dec
stc
pop
sub
or
adc
adc
mov
das
repnz
pushl
mov
test
push
lods
pop
xchg
test
pop
arpl
aam
mov
into
repnz
lret
push
push
gs
sar
xchg
lcall
cmp
cmovp
xorl
adc
test
jecxz
lret
gs
pop
leave
mov
mov
xchg
xor
scas
inc
push
push
push
push
sub
enter
pop
ljmp
xchg
sbb
fnstcw
sbb
pop
leave
xchg
stos
popf
bound
mov
iret
mov
adc
mov
push
fstps
fsubrl
mov
xor
mov
fnstsw
data16
jmp
es
and
negl
mov
lods
inc
mov
scas
mov
push
enter
jge
imul
jb
cld
xor
pop
or
jg
test
lahf
add
imul
loope
les
mov
fs
stos
mov
inc
aaa
pushl
jp
pop
cltd
into
dec
xlat
int
mov
stc
cmp
into
fnsave
dec
sbb
enter
xchg
scas
or
cmpl
dec
fs
push
mov
sub
ss
stos
mov
loope
pcmpeqb
imulb
dec
adc
mov
and
aas
shlb
mov
inc
or
inc
cld
lahf
je
mov
mov
jo
adc
stos
ss
pusha
add
pop
arpl
enter
mov
mov
mov
xchg
shlb
fidivs
adc
mov
iret
shl
mov
mov
call
add
test
xchg
stc
fsubrl
fidivs
lds
mov
loop
dec
and
add
lcall
std
xor
xchg
dec
lcall
call
movsl
cmp
xor
jo
mov
sub
adc
push
cmpsb
mov
std
jbe
jge
mov
pop
mov
pop
mov
int
cmp
mov
mov
mov
popf
enter
scas
ret
in
xchg
test
push
pop
clc
add
out
xchg
nop
dec
jl
push
dec
lea
or
jae
inc
js,pn
mov
sub
orl
mov
psrad
pop
dec
push
cmp
movsb
xor
into
inc
out
roll
dec
repz
aaa
cwtl
cmc
xchg
mov
sbb
je
dec
cmp
mov
add
les
stc
ss
mov
clc
xor
pop
jbe
jg
lea
ret
cmc
dec
mov
xor
aaa
bound
ficoms
loop
mov
push
sbb
popl
and
push
stos
repz
add
add
es
or
ja
push
fsub
ja
pop
fadd
data16
loop
xor
ret
test
push
stos
sub
lods
test
cltd
jo
bound
cmp
test
je
in
das
sar
xchg
imul
int3
lods
icebp
sbb
stos
mov
ret
push
sub
mov
jae
cli
or
aaa
repnz
mov
jns
subl
adc
sbb
test
jns
enter
incl
or
mov
xor
fmulp
jg
loopne
movsb
and
pop
mov
ficompl
jg
sbbb
cmp
jno
sar
jmp
dec
outsb
or
xor
xchg
and
outsl
and
mov
sub
xchg
sbb
in
adc
jmp
lock
sti
inc
aad
pop
mov
pop
aas
xchg
add
mov
dec
in
mov
sbb
jae
cmc
mov
rep
stos
fldcw
push
cmpsb
je
divl
inc
adcb
ja
xchg
dec
xchg
push
sar
xchg
out
xor
test
cmp
mov
test
xchg
ja
in
cmpsl
out
pusha
fs
dec
outsb
push
xchg
jbe
or
mov
add
filds
push
xchg
xchg
out
or
cmp
push
pop
rcrb
cmpsl
mov
bound
mov
xchg
inc
pusha
arpl
jle
pop
or
jae
out
adc
clc
add
outsl
mov
pop
jmp
enter
jmp
lock
lock
ret
scas
mov
into
sbbb
aam
fs
enter
test
or
or
mov
scas
mov
push
jno
rclb
jle
xchg
or
add
adc
or
into
fwait
push
inc
push
mov
mov
js
jne
sbb
cwtl
adc
loope
xchg
dec
adc
mov
mov
addr16
lods
mov
mov
jge
sbb
lods
cmc
fbstp
and
push
inc
cmp
nop
and
out
push
sbb
sub
arpl
cmpsl
enter
push
movsl
shlb
stc
lods
fadds
scas
mov
scas
dec
adc
popa
cmp
leave
xor
scas
shlb
jb
push
gs
stc
pushf
cmp
out
sbb
scas
cmp
mov
stos
cmp
xchg
jmp
out
cmpsw
cmp
mov
decb
xchg
aam
mov
aam
inc
fisubrs
sbb
mov
aam
popa
ja
mov
pop
mov
jg
add
movb
cmpsb
mov
fwait
or
push
dec
or
or
iret
cmc
nop
pop
ljmp
lcall
mov
gs
push
rorl
mov
or
enter
aas
sub
or
lahf
pusha
sahf
xchg
mov
pop
lock
cwtl
aas
or
rcrl
pushf
mov
je
sub
out
inc
xchg
cmc
das
pushf
es
mov
je
mov
incl
orb
jae
lods
les
pop
dec
pop
andl
mov
add
push
enter
mov
pop
outsb
iret
mov
and
outsl
aaa
dec
movsl
movsb
arpl
bound
insb
add
xchg
test
clc
and
push
in
mov
sub
mov
and
or
xchg
int
mov
pop
out
pop
out
adc
and
xor
cmp
push
or
movsl
mov
mov
dec
adc
negb
in
jmp
pop
sbb
test
and
push
pop
call
lods
mov
jge
mov
inc
or
sub
lahf
lcall
scas
bound
add
cmp
push
jno
andl
and
fistps
jp
clc
cmpsb
pop
add
scas
and
enter
sbb
aaa
mov
adc
and
push
push
adc
xchg
daa
aam
mov
mov
push
out
lods
sub
fsub
jl
jg
pop
testb
cmc
sahf
pop
mov
test
jl
xchg
mov
hlt
rorb
lds
call
push
mov
pop
sub
call
in
aam
pop
pop
nop
and
add
clc
addb
scas
sbb
push
push
popf
push
leave
push
adc
movsb
pop
add
xor
jge
jbe
mov
sub
in
lea
push
jo
mov
mulb
mov
cmp
dec
data16
mov
sub
enter
insl
pop
shll
std
in
push
bound
cld
add
lock
out
call
mov
outsb
xor
clc
mov
jmp
sub
sti
loopne
adc
popf
adc
outsb
lds
add
sub
pop
mov
divl
fimull
call
xor
test
stos
out
and
mov
cli
mov
jmp
mov
sarb
addb
test
mov
jnp
ljmp
push
notl
push
mov
out
cmp
xchg
leave
mov
shld
test
clc
adc
out
jle
push
insl
mov
push
jp,pt
js
pop
push
int
dec
mov
jno
xchg
cltd
or
sbb
sti
hlt
scas
movntps
test
mov
inc
mov
mov
dec
stos
lock
addl
enter
adcl
lret
loop
call
push
movl
xchg
test
in
fs
imul
in
rcrb
and
jo
test
enter
ja
push
aaa
pop
or
lcall
mov
mov
and
clc
jbe
push
sbb
sti
outsl
dec
push
lods
cmp
xorb
xchg
push
in
test
pop
sub
incb
sbb
mov
or
xchg
div
mov
sub
cmp
inc
dec
fdivr
outsb
sub
out
in
mov
xor
inc
jle
sbb
daa
popf
inc
into
pop
clc
push
loopne
je
pop
sahf
inc
scas
jmp
mov
adc
jecxz
cltd
sub
ret
or
pop
lods
rcrb
add
std
fimuls
ret
outsl
push
fsubrl
adcl
andl
pop
bound
loope
xchg
and
sbb
cmpsl
out
mov
xchg
out
pop
xchg
test
aas
and
movsb
push
out
xchg
mov
imul
xor
fisubs
hlt
fiadds
xor
sbb
dec
dec
fisubl
pop
shll
or
mov
sbbl
mov
mov
xchg
mov
lods
bound
jae
icebp
je
lock
nop
bound
stos
push
mov
rcrl
jmp
dec
lds
enter
push
ljmp
mov
shll
clc
mov
or
orb
scas
inc
push
andl
outsb
dec
sbb
sub
lods
push
push
arpl
push
jae
dec
test
xchg
shlb
sub
pusha
xchg
lahf
dec
mov
cmp
mov
test
addr16
je
xchg
out
in
cld
pop
xlat
sbb
je
jbe
or
push
cmp
sarl
in
adc
sub
in
stos
jae
mov
stos
cmp
jmp
dec
pop
icebp
aaa
repnz
cmpsb
daa
in
cmc
and
xchg
dec
out
stos
outsb
nop
insb
movsl
aaa
bound
jg
ficomps
fcmovne
jno
outsl
dec
xor
andl
rep
adc
or
and
fdivrs
lods
cs
sahf
jne
pop
sub
rcrb
out
inc
js
lds
pushf
or
push
sbb
cltd
ds
leave
lea
lods
jne
clc
cli
dec
xor
dec
lock
xchg
push
bound
sbb
push
stos
jle
xchg
iret
mov
xor
pop
pop
insb
addl
add
pop
addr16
inc
and
pop
and
xchg
cmpb
lcall
dec
in
jmp
add
filds
fimuls
mov
cvttps2pi
sbb
jo
into
jle
adc
adc
pushf
mov
decl
clc
in
push
movsl
rol
ret
out
add
sbb
out
xor
xchg
enter
adc
or
xor
jnp
cwtl
add
pop
test
je
clc
rolb
adc
das
adc
jbe
push
pop
arpl
xchg
enter
shrl
xor
push
movsl
sub
ja
adc
frstor
push
test
xor
int3
push
pusha
scas
dec
push
stc
lds
push
insl
orl
popf
shrb
sub
dec
arpl
xchg
pop
pop
adc
call
cli
lea
jno
cmp
or
aas
pop
ja
testb
int3
xchg
stos
jne
leave
push
pop
xor
jo
xor
push
clc
cmpsb
push
jo
dec
xor
sub
cmp
cmp
xchg
push
sbb
push
or
aaa
movsl
mov
cmpsb
ljmp
lret
xor
das
jle
shrb
push
add
lea
mov
mov
mov
popa
cmp
mov
xchg
pusha
mov
outsb
mov
mov
xor
pop
jecxz
mov
rolb
mov
or
in
mov
adc
lcall
hlt
popf
cmp
ret
mov
mov
inc
ja
test
ror
sub
subl
ret
cmpsb
adc
lret
in
sub
sahf
std
mov
dec
lods
push
mov
insb
jno
xchg
cs
in
popf
xor
shll
mov
xor
mov
rcr
xchg
mov
push
addr16
mov
enter
xor
xchg
mov
sbb
out
nop
pushf
rolb
sbb
sbb
jle
mov
das
lcall
mov
cmp
loope
fdivl
test
stos
fimull
daa
mov
aad
loope
or
sbbb
test
jg
rolb
mov
ljmp
adc
jo
mov
aad
into
adc
lock
clc
or
mov
into
sub
xchg
clc
push
xchg
enter
mov
mov
adc
imul
pop
xchg
sbb
adc
dec
outsb
and
call
xchg
xacquire
jg
aas
movsl
cmp
loope
lods
add
pop
lcall
testb
nop
mov
sbb
sti
aam
inc
jno
push
pop
or
sbb
sub
cmp
mov
pop
sub
jl
call
mov
mov
mov
pop
aam
inc
adc
aam
enter
je
jecxz
and
dec
sbb
out
movsl
pop
movq
sahf
addb
or
aas
mov
clc
cli
test
pop
inc
lcall
popf
enter
pop
aas
pop
fwait
testb
push
add
or
xchg
xor
pushf
mov
je
jno
data16
pop
jp
seto
and
std
clc
sub
outsl
mov
mov
repnz
cmp
sahf
xlat
dec
outsl
addr16
lahf
push
ds
jecxz
and
ret
cmp
scas
dec
fiadds
lds
mov
mov
push
cmp
lock
push
call
sub
enter
xchg
mov
in
inc
push
cmp
push
movsb
fbstp
push
mov
enter
loop
stos
loopne
dec
mov
and
sub
push
insb
addb
mov
mov
test
xchg
stos
clc
mov
cltd
mov
dec
nop
ja
stc
mov
cmc
mov
stos
scas
cli
into
cmp
clc
push
ja
mov
sbb
testl
cmc
and
ficomps
sub
dec
shr
mov
mov
mov
jecxz
cmpsl
push
pop
xor
inc
jbe
sti
jno
or
cmc
pop
pop
mov
outsb
push
push
pop
pop
jne
jge
clc
push
add
mov
mov
mov
rol
xchg
jnp
jne
repnz
enter
lods
movsw
fisttps
xor
sbb
xchg
andl
outsl
cmpsb
sub
pop
lods
pop
and
jg
mov
lret
cmpsl
mov
mov
push
lods
or
sbbb
mov
ljmp
ljmp
xchg
daa
xchg
mov
and
shlb
lods
add
or
pusha
bound
pop
stos
dec
mov
mov
movsb
or
jnp
fnstcw
add
cltd
dec
cmpsl
loopne
clc
jnp
les
hlt
push
or
sbb
dec
pop
into
jnp
imul
rorl
mov
dec
imul
pusha
xor
push
inc
bound
lods
addr16
sbb
add
push
sub
mov
mov
nop
xchg
lahf
sbb
push
mov
pop
xlat
jbe
fs
jo
fbstp
or
cmp
sar
push
sub
inc
sub
jmp
divb
lret
testb
sbb
cs
lret
adc
aas
scas
or
mov
xor
mov
aam
lock
lcall
dec
sub
aaa
adc
cwtl
outsl
mov
lcall
mov
lock
and
shlb
ja
sbb
int
xchg
sub
outsb
mov
mov
xchg
fwait
in
sbbb
popa
xchg
into
mov
sub
loopne
out
shll
jg
test
jb
cmp
add
inc
iret
cmp
or
or
ljmp
scas
adc
mov
push
test
push
push
daa
cmpsb
mov
mov
mov
pop
xlat
push
cltd
shr
or
nop
jp
test
mov
push
insb
scas
inc
daa
aam
and
mov
xchg
mov
pop
icebp
and
dec
fstpl
mov
sti
xchg
shrb
xchg
xorb
movsl
xor
mov
ja
call
je
push
xchg
lea
mov
ret
fsubrl
lcall
jmp
in
test
pop
jge
mov
dec
inc
jo
std
mov
cmp
push
call
mov
out
popf
clc
cmp
pop
stos
mov
inc
add
or
inc
jbe
xchg
pop
stos
cmpsl
xor
lods
push
ljmp
sub
jo
pop
pop
push
movsl
loopne
imul
jo
repz
mov
and
lock
mov
cmp
in
rclb
lock
fdivs
push
mov
jge
xchg
xorl
shlb
mov
pop
jle
movsb
xchg
mov
xor
fcoml
jp
mov
ja
daa
mov
xchg
loope
inc
dec
or
mov
push
jecxz
adc
scas
and
out
lret
jbe
andb
imul
push
fistpll
into
mov
and
lods
cmpsl
cld
adc
sbb
dec
ja
fidivs
aam
stos
mov
out
push
cmp
fwait
insl
lods
rcrl
cli
les
lods
mov
xor
iret
xchg
xchg
sub
je
sbb
dec
mov
addr16
lods
add
fldt
out
and
inc
pusha
adc
lcall
pop
jns
sub
mov
add
sub
scas
iret
mov
sbb
mov
mov
orl
xchg
out
push
adc
pop
dec
push
cli
ficompl
mov
sub
push
jno
sbb
xchg
sbb
add
stc
sbb
cli
adc
test
mov
xor
jno
adc
inc
push
mov
inc
mov
stos
mov
cltd
mov
mov
shlb
add
jmp
sbb
inc
and
jo
mov
insl
pop
adc
pushf
sub
enter
fadds
xchg
pushl
je
call
mov
xchg
mov
jmp
jno
xchg
and
mov
sbb
test
mov
mov
jmp
out
cmpsl
add
cmp
int3
repnz
xchg
xchg
mov
or
sub
in
mov
out
mov
mov
imul
dec
scas
test
fs
mov
int
mul
out
clc
das
mov
fildl
addr16
mov
clc
adc
lds
pop
xlat
pop
inc
cmp
fisubrs
rcll
fstl
scas
dec
pop
enter
sub
movsl
cltd
loope
jnp
popa
mov
dec
mov
inc
inc
rorl
in
inc
dec
cli
pop
nop
incb
pmaddwd
add
scas
sub
clc
jae
lcall
sti
or
mov
ficoms
pushf
lcall
in
movsl
pop
cltd
xchg
in
jo
sbbb
js
inc
add
lcall
xchg
data16
fisubrs
lods
push
pop
and
rcll
push
jo
leave
cwtl
dec
fstpt
xchg
adc
jle
add
movsb
pop
popa
pop
dec
sbb
daa
scas
loopne
nop
add
stc
les
loopne
cmp
lcall
imul
je
add
andnps
insb
lret
mov
in
cmpl
adc
sbb
imul
jl
xor
jecxz
pop
pop
cmp
and
sub
test
pop
test
jle
jno
mov
and
sbbl
gs
movl
jmp
pop
cmpsb
push
jl
insb
repz
jno
loope
jle
mov
cmp
mov
out
test
call
xor
pusha
mov
lods
notb
add
mov
mov
jg
ss
cltd
cmc
stos
mov
nop
std
mov
add
mov
mov
push
pop
lods
ret
lcall
mov
les
xchg
fisttpll
jp
out
xor
pop
js
scas
pop
scas
lds
dec
movl
movsl
clc
rorl
or
jge
test
cmp
mov
clc
loopne
and
add
data16
data16
mov
scas
call
dec
arpl
mov
movsl
push
fistpll
das
push
repz
cmpsb
adcb
int
mov
adc
call
movsb
pushl
mov
add
mov
mov
push
push
lods
or
push
mov
ja
mov
inc
xor
jmp
test
cs
mov
inc
fmul
fstpl
mov
out
mov
or
xchg
jno
push
jne
das
sbb
testb
lahf
adcb
mov
inc
fsts
push
mov
jge
inc
ja
or
call
or
mov
sub
mov
mov
sbb
ds
adc
sub
aam
test
pop
push
gs
inc
xor
maskmovq
negl
icebp
pop
fsubrs
sbb
sti
leave
inc
mov
inc
inc
sbb
inc
in
jo
int3
outsb
outsl
mov
fwait
mov
mov
push
lods
dec
shr
int3
fstp
inc
cmp
mov
pushf
cmp
lea
jnp
fucomip
add
out
popf
inc
stc
mulb
mov
into
and
addr16
lods
mov
mov
cld
sub
call
add
mov
shrl
dec
mov
and
pextrw
push
inc
gs
fptan
jle
pop
pop
jg
lods
add
movb
push
je
jo
mov
std
jbe
fsubs
movsb
in
adc
daa
dec
pop
inc
xchg
enter
je
out
pop
inc
lret
data16
add
sarl
push
fwait
icebp
fcmovnu
das
or
pop
bound
in
fimuls
add
inc
aam
dec
adc
dec
lods
in
mov
fnsave
mov
inc
lods
cwtl
enter
jns
repnz
es
mov
call
fisubs
cs
lds
mov
test
lock
mov
inc
mov
adc
dec
mov
ja
subb
add
stos
push
sbb
mov
cmp
loop,pt
mov
cmpb
fnstsw
mov
in
iret
mov
cmpl
jbe
fcmovnu
jnp
mov
push
jmp
xorl
mov
int3
jbe
lahf
xor
push
mov
and
bswap
pop
inc
push
icebp
jbe
sub
adc
mov
jle
cmpsb
adc
push
mov
clc
pop
loop
jno
xchg
xor
lock
dec
mov
insb
xchg
outsl
or
mov
xchg
sub
push
or
pop
push
and
sbb
in
mov
orl
in
lahf
dec
mov
fdivl
cmpsb
sahf
mov
or
mov
scas
dec
lock
popf
nop
pop
xor
mov
mov
lret
aad
sub
movsb
loop
clc
adc
mov
xchg
sub
cmpsb
lods
add
pop
mov
xor
scas
push
inc
sub
les
jmp
dec
inc
stos
sub
clc
out
in
jecxz
movsl
push
dec
jns
jno
mov
sarb
jo,pn
in
dec
mov
cltd
sub
or
aam
out
dec
cs
repz
std
out
nop
mov
sbb
ss
jnp
mov
jbe
or
adc
sub
cmp
ds
mov
shrl
or
clc
jle
fimull
jb
jbe
and
pop
js
adc
push
adc
andb
cmp
jbe
sub
ret
cltd
mov
xor
mov
sarb
dec
xor
fadds
ds
adcb
movsl
in
pop
in
xchg
arpl
jnp
iret
sub
das
mov
mov
mov
add
add
or
adc
shlb
clc
and
pop
daa
scas
or
push
xor
int
inc
xchg
fsubs
cli
or
fiadds
out
insl
lea
js
xor
adc
xorl
ss
push
jl
push
dec
and
enter
cltd
jle
ret
shll
addr16
mov
xor
lret
notl
cmc
clc
mov
mov
push
xor
rorb
pop
stos
movl
mov
dec
mov
es
push
xchg
lret
push
xor
push
sbb
push
mov
mov
imul
xchg
push
mov
gs
and
out
xorl
pop
loopne
mov
lret
push
es
adc
pushf
lock
rolb
insl
mov
and
sub
push
mov
adc
aam
aad
test
loopne
xor
inc
jno
xchg
mov
pop
jne
stos
cmp
push
lock
shlb
sbb
push
sti
outsb
mov
mov
jmp
push
mov
fs
add
test
movsl
mov
mov
cltd
adc
fidivl
test
pop
and
xchg
pop
into
mov
pop
dec
add
ret
mov
pusha
in
sar
sbb
repz
scas
sub
adc
mov
cmp
or
daa
les
xchg
outsb
std
push
jbe
out
enter
call
jg
dec
cltd
pop
pop
iret
cwtl
pusha
out
or
xor
mov
repz
mov
push
dec
lcall
and
sbb
add
adc
into
dec
inc
ds
jno
out
xor
jmp
jg
sub
jmp
popa
test
in
pop
push
aas
mov
ret
or
jecxz
out
mov
sbb
sub
pushl
xor
mov
cwtl
insb
mov
xchg
sbb
pop
mov
lcall
lea
mov
mov
push
clc
lods
fwait
adc
repz
jbe
inc
loope
xor
jmp
cmc
pop
mov
xor
mov
or
and
pop
adc
lret
inc
mov
mov
mov
fisubrl
ja
shl
pop
push
lea
lods
jmp
and
dec
dec
lahf
divl
jmp
sub
add
fprem1
add
and
or
scas
ffreep
shlb
aas
les
xor
and
sbb
xor
in
pop
mov
enter
inc
hlt
sub
shlb
sub
and
jmp
xor
cwtl
and
movsl
movsb
dec
outsb
popf
xlat
sbb
inc
pop
cmp
adc
daa
mov
push
clc
fsin
jmp
ds
push
pop
ja
add
jno
orl
inc
cmpsb
gs
out
push
lea
adc
das
sahf
movsl
out
mov
sbb
ficompl
cmp
adc
xor
or
dec
clc
jbe
sub
movsb
and
test
inc
jne
sbb
in
ret
sbb
mov
inc
out
pop
fidivs
push
lds
pmuludq
mov
fstps
sub
mov
mov
mov
xor
fldcw
sbb
push
daa
fstps
imul
dec
mov
cld
popa
xchg
scas
inc
jb
enter
insb
insl
jge
inc
stc
movsb
mov
ja
jno
and
cli
dec
arpl
jg
test
sub
sbb
jmp
mov
sub
xchg
test
jo
xchg
push
xchg
push
in
or
pop
sub
cmp
lock
dec
ljmp
pop
sub
daa
fs
fbld
outsl
mov
mov
mov
aam
lods
mov
mov
cmc
lods
lahf
pop
pop
cmp
pop
mov
leave
sub
testb
mov
data16
push
sbb
ret
mov
fsubr
out
and
hlt
loop
mov
sub
jnp
push
lods
mov
lock
cmp
mov
mov
jp
lods
in
leave
iret
fldl
mov
stc
jge
sub
push
adc
xor
sub
mov
dec
int3
dec
xchg
ljmp
jg
jp
ret
js
das
mov
test
xor
push
xchg
sub
mov
mov
jmp
mov
push
pusha
lret
push
mov
mov
cwtl
push
dec
sub
sub
or
pop
scas
push
sbb
lea
sub
mov
scas
adc
and
dec
fnstcw
divb
push
repz
lret
and
dec
not
fistpll
lods
sbb
cmpxchg
lea
mov
jbe
fs
les
dec
mov
out
jecxz
pushf
repz
lods
mov
mov
mov
pop
or
mov
pushf
mov
subl
outsb
outsl
lock
jg
mov
mov
and
xchg
dec
lock
mov
mull
adc
int3
inc
mov
cmpb
dec
in
js
sub
sbb
pop
cs
pop
mov
jo
ret
mov
out
lods
add
call
jno
andb
xchg
adc
xor
mov
pop
bound
mov
xor
mov
push
mov
xchg
mov
dec
adc
lret
xor
jns
jo
mov
popa
pop
sub
daa
divb
cmp
dec
push
into
fs
jne
xchg
dec
into
ja
dec
call
sub
call
pop
mov
mov
int
jle
aas
sbb
inc
push
jmp
gs
icebp
mov
sbb
mov
popa
mov
sub
push
xchg
dec
dec
adc
push
dec
jecxz
push
std
scas
pop
sub
orl
aas
adc
sbb
add
popa
pop
loope
mov
pop
cmpsl
sub
xor
xchg
lea
movsb
sbb
sub
idiv
sub
pop
aam
fidivl
lock
adc
cli
in
mov
inc
pop
stos
push
shlb
stos
andb
adc
inc
pop
test
mov
lahf
enter
js
mov
das
mov
mov
cltd
push
pushf
push
std
mov
test
or
cltd
add
into
fs
dec
push
inc
imul
andl
insb
mov
dec
pop
pusha
lds
nop
dec
jo
sti
gs
cmpsb
pop
mov
rorl
or
cld
pop
scas
adc
sbb
iret
mov
mov
inc
or
insl
mov
mov
mov
movsl
in
adc
test
push
sbb
jns
pop
and
or
adc
or
mov
push
mov
jg
pop
sbb
jl
push
pusha
std
or
sub
xbegin
pop
sbb
pop
adc
lea
and
cmpsb
mov
pop
clc
lock
or
sub
add
rcr
pop
and
icebp
movsl
lods
xor
cmc
ds
movsb
mov
pop
dec
lods
aaa
imul
sub
int3
and
jne
lcall
jp
lret
mov
mov
cmpl
stos
inc
add
mov
cs
or
or
pop
sub
mov
adc
mov
dec
dec
mov
lcall
js
les
jae
ds
pop
sarb
repz
mov
lds
inc
cmp
xchg
cld
pop
mov
cmp
pop
aam
fcoms
cmpsl
popa
or
and
arpl
stos
scas
mov
fldenv
loop
cmp
and
sub
fwait
repnz
cmp
cmpsl
sahf
sub
mov
mov
xchg
mov
pusha
mov
sbb
dec
test
xchg
rolb
pop
or
mov
fisttps
cld
scas
repnz
lods
add
inc
push
in
mov
push
dec
int3
loop
mov
pop
jo
bound
adc
or
push
enter
mov
or
or
stos
clc
arpl
cmc
adc
ss
pop
add
mov
aas
inc
pop
js
lcall
adc
andb
leave
rorb
cli
push
lea
cld
dec
cmpl
push
xor
mov
lock
iret
mov
push
in
mov
push
mov
inc
out
add
dec
pop
xchg
xchg
jnp
sti
jno
push
jo
mov
decb
in
jmp
push
pusha
adc
ffree
stc
mov
lods
adc
or
scas
lds
clc
push
out
rcl
pusha
mov
and
mov
mov
cmpsl
notb
icebp
mov
test
bt
mov
pop
sub
sub
pop
push
push
dec
xchg
enter
iret
inc
mov
je
pop
addr16
fwait
jbe
jmp
sub
xor
xor
pop
pop
hlt
sbb
stos
dec
insl
inc
cltd
mov
mov
fdiv
jmp
sbb
add
in
les
out
mov
lock
out
loopne
push
mov
cmp
icebp
pusha
cmp
in
ja
popf
lock
scas
and
xchg
or
mov
idivb
lcall
mov
mov
mov
add
stos
or
adc
jb
popa
xchg
jae
mov
cmp
mov
insb
inc
mov
jge
adc
pop
mov
add
or
int3
xor
fdivl
or
test
loopne
fnstenv
pop
pusha
xor
enter
xchg
mov
sub
push
mov
cmpsb
xchg
loopne
mov
add
scas
or
mov
sbbb
jnp
mov
dec
jno
sbb
nop
pop
inc
cmp
movsb
pop
adc
test
scas
imul
lahf
mov
decl
popf
clc
outsb
mov
mov
aam
adc
inc
mov
into
inc
bound
cld
xchg
das
xor
push
push
rcr
popf
inc
inc
popa
add
stc
sbb
cli
aad
xchg
sbb
mov
test
or
ljmp
sub
mov
cmpsb
mov
mov
jo
pusha
in
mov
cmpsl
clc
mov
xor
pop
fbld
jnp
push
mov
shll
sub
call
dec
jae
sti
dec
xchg
fldcw
rcl
imul
ret
sbb
or
add
ja
cli
xor
sub
mov
lods
into
sarl
cld
and
jmp
xchg
xchg
mov
ja
arpl
ss
pushf
in
xchg
movsl
and
mov
cmp
int
xor
in
mov
shl
inc
in
fsubl
mov
addl
jne
lock
push
or
outsl
sbb
mov
sub
iret
pop
adc
cs
fisttpll
pop
cmp
mov
mov
cltd
adc
incb
in
mov
stc
push
inc
mov
and
aaa
mov
test
andl
xchg
mov
je
dec
inc
mov
cmp
nop
lahf
mov
sahf
das
loop
repnz
add
fisubrs
cmp
add
andl
xor
pop
sbb
mov
pop
inc
xorl
jg
idivl
test
les
pushl
mov
data16
or
mov
sub
pop
jo
pop
mov
xchg
jae
hlt
clc
adc
cs
pushf
push
mov
dec
and
repnz
or
xlat
sub
mov
js
pop
or
cmp
xor
mov
cmc
in
ds
lret
cmpb
or
jl
test
pop
pop
jp
mov
imull
pushf
push
add
jge
sbb
addl
dec
sbb
adc
mov
rorb
sub
sbb
dec
inc
pop
or
xlat
sbb
mov
bound
mov
bound
ljmp
sbb
cmpsl
enter
imul
xlat
ljmp
adc
push
dec
lock
addr16
jp
sbb
outsl
mov
or
push
lds
fidivs
push
mov
repz
mov
pop
pop
scas
dec
out
nop
std
sub
pop
stc
leave
mov
mov
inc
mov
jne
xor
es
push
push
pop
or
fisttpll
out
clc
and
add
jle
testl
ret
movsb
xchg
dec
test
mov
lods
inc
sbb
pop
out
inc
xorl
clc
in
and
push
mov
adc
setns
lcall
push
mov
sahf
movsb
mov
jo
test
or
or
aas
adc
lock
lock
sbb
inc
inc
enter
or
nop
push
mov
das
mov
mov
imul
pushf
mov
enter
cmp
out
and
shrb
and
sub
hlt
push
fdivr
rcrb
sub
xchg
mov
inc
push
ret
pop
icebp
sub
pop
sub
mov
push
dec
cmpsl
sbb
das
sub
pop
pop
outsb
xchg
adc
cmp
stc
pushf
lods
pop
jecxz
nop
xchg
rep
das
outsb
in
aad
push
and
scas
repnz
mov
jnp
daa
mov
in
mov
xlat
cs
add
out
scas
push
mov
inc
in
inc
scas
ret
test
mov
sbb
scas
pusha
dec
or
frstor
data16
xchg
outsb
pop
xchg
xlat
fcoml
inc
test
sbb
push
mov
mov
dec
in
jne
ret
aad
daa
in
mov
cwtl
pop
pop
clc
or
cwtl
sub
lcall
mov
leave
sub
movsl
in
mov
xchg
cwtl
mov
dec
xlat
xchg
and
sbb
out
dec
dec
xchg
out
jae
fsubp
out
enter
sub
popf
push
fnstsw
fwait
rcll
mov
js
jg
mov
lods
sbb
mov
sahf
ds
stc
adc
popa
ret
hlt
mov
push
mov
lea
mov
sahf
enter
ss
lret
cmc
jecxz
mov
mov
mov
adc
data16
enter
pop
xchg
or
outsl
push
aam
movzbl
sub
cwtl
pcmpeqd
out
mov
pop
sbb
jno
sti
dec
scas
fsubp
lret
repz
xchg
add
sbb
std
mov
sub
imul
pop
sti
scas
mov
adc
stos
in
clc
push
jl
mov
lret
andl
ret
xchg
ret
imull
je
daa
aam
mov
call
adc
inc
aas
jbe
aad
enter
dec
or
mov
xchg
das
mov
sub
push
push
pop
mov
and
testl
nop
pop
adc
mov
dec
scas
ss
adc
and
mov
push
mov
lods
sbb
test
sub
push
mov
clc
add
add
rcr
gs
or
lods
pop
push
ret
das
and
jo
xlat
xchg
sbb
jb
pop
inc
outsl
in
fnstenv
ret
faddl
xor
mov
out
inc
movsb
or
std
mov
and
mov
das
inc
nop
lahf
pushf
push
int3
dec
jnp
push
xchg
jg
xor
adc
test
cmp
pop
lods
jl
lods
jmp
xchg
negl
push
push
mov
adc
cwtl
clc
pop
mov
cltd
repnz
push
dec
and
sub
inc
test
inc
mov
movsl
das
adc
adcl
ret
cmp
or
in
push
pop
ds
and
mov
scas
and
xchg
aad
mov
sbb
insb
scas
push
pop
dec
sub
cmp
add
xchg
gs
andb
and
aas
enter
xchg
or
mov
xchg
fidivs
jo
mov
loop
push
andb
xor
xchg
cld
cwtl
adc
loop
xchg
movsb
pop
or
or
shlb
xchg
pop
out
imul
pop
clc
jle
mov
cwtl
or
les
pusha
nop
lods
idivb
sub
add
les
sbb
jbe
mov
add
sahf
xor
cmpsb
bnd
sub
fs
lcall
lea
in
mov
das
fldcw
movsb
lods
adc
scas
or
sub
sbb
sahf
fwait
cmpsl
data16
xor
out
push
sub
hlt
pop
xor
push
mov
adc
cltd
das
scas
movsl
xchg
and
pop
rorb
sbb
xor
in
or
add
imul
mov
mov
xchg
or
or
test
into
add
ja
fstpt
cmp
gs
clc
sub
cbtw
mov
dec
cmp
outsb
add
jns
mov
mov
cmpsb
jo
adc
pushf
enter
popf
out
or
lahf
sbb
in
imul
push
pushf
dec
xchg
dec
pop
fsubrs
clc
sbb
and
mov
stc
int3
aas
xor
fbld
enter
and
mov
add
xchg
ljmp
pop
bound
or
js
add
xlat
cltd
push
mov
lcall
dec
mov
sub
call
mov
lock
dec
push
fcomp
pop
imul
movl
cmp
push
ds
sbb
pop
ljmp
ret
push
pushf
inc
rol
sbb
rclb
sub
lea
sub
cs
ret
push
xchg
xchg
enter
adc
xor
icebp
ret
clc
xor
adc
nop
insl
arpl
rcrl
fs
clc
aam
jmp
fsubp
aaa
pop
sbb
rcrb
jb
dec
cmpsl
sub
inc
nop
addr16
adc
scas
int
mov
pop
adc
jecxz
je
in
popf
mov
dec
loop
pop
push
xor
scas
dec
push
mov
and
in
sub
ffreep
int
push
jae
pusha
jo,pn
push
sub
sub
imul
xchg
mov
dec
aaa
pusha
add
mov
xor
dec
jo
and
dec
test
jg
cmp
dec
jmp
sahf
cmp
pop
sbb
bound
repz
push
fdivs
and
add
sahf
sbbb
push
into
mov
das
mov
popf
enter
lcall
rcrl
mov
sub
adc
popf
clc
xor
add
cld
jae
lock
filds
loop
and
movsb
pop
sbb
sahf
sub
jle
shlb
jo
push
cwtl
int
or
adcb
icebp
imul
outsb
lods
push
les
xor
mov
mov
lcall
fisttpll
scas
sbb
rclb
std
adc
fiadds
lcall
cs
pop
cmpsb
push
insb
or
and
mov
sub
inc
pop
fbstp
mov
mov
jmp
fisubs
ljmp
sub
mov
mov
movsl
or
cmpsb
movsb
lock
dec
aad
cmp
es
repnz
jmp
mov
insb
fisubrs
mov
adc
sbb
shlb
mov
lock
dec
jmp
mov
mov
jle
imul
pop
out
xor
push
jp
mov
loopne
mov
mov
mov
shlb
repz
decb
nop
jo
lahf
loop
imul
push
das
adc
and
lcall
sbb
or
scas
fcmovb
cmp
inc
adc
pusha
es
push
sahf
clc
iret
xchg
cs
lods
test
lret
movsl
mov
mov
pushf
in
mov
stos
std
cmp
push
xchg
dec
and
sub
and
push
xchg
jns
xor
or
sub
ffreep
neg
jbe
sbbl
loopne
adc
daa
pop
lahf
push
cmc
in
or
mov
push
jo
jns
in
or
enter
pop
ljmp
ja
pop
aad
sub
jb
outsl
add
sub
mov
sbb
outsl
in
xor
mov
pop
jo
notb
sub
shrl
cwtl
xchg
fimull
in
mov
sbb
add
mov
xor
imul
insb
adc
sub
outsl
in
add
rorl
and
or
cmpsl
lds
dec
jno
sbb
jae
xor
xchg
subl
adc
jb
pushf
pop
add
xor
stos
mov
push
xorb
mov
aaa
incl
xchg
adc
mov
mov
or
outsb
add
outsb
ja
imul
lds
or
push
or
sbb
sbb
pop
add
insb
sbb
sahf
xlat
add
cmp
andb
cli
dec
repz
adc
and
mov
push
aaa
clc
cwtl
repz
jo
jg
loope
enter
jbe
in
push
pushf
lds
nop
ss
mov
out
or
xchg
mov
es
aaa
fisubl
adc
pop
test
test
fwait
mov
mov
push
pop
std
lods
jae
lods
cmp
xor
mov
fnstcw
and
and
push
int3
or
popa
hlt
adc
or
and
js
push
mov
shlb
cmovo
nop
lcall
dec
je
xchg
mov
mov
inc
jl
cmp
sub
out
scas
imul
inc
add
sahf
push
into
jno
adc
cwtl
aad
clc
outsl
fdivl
insb
pop
fs
or
jnp
int
and
sub
vmovhps
stc
push
in
out
lcall
out
fists
mov
push
lods
scas
cmp
mov
movl
and
loope
jb
xor
ret
lods
inc
int
nop
stos
scas
xor
addr16
insl
addl
jo
xor
data16
mov
mov
out
out
loopne
nop
lods
mov
in
aam
adc
pusha
jge
popf
data16
mov
scas
inc
push
cmpsl
scas
outsb
xor
outsl
daa
icebp
ss
clc
dec
test
loop
xchg
mov
sub
adc
andl
adc
push
cmp
xchg
jne
sub
mov
lods
daa
dec
jne
jno
mov
mov
pushf
fldenv
pop
clc
mov
incl
stos
xchg
jle
scas
adc
xchg
add
xor
outsl
or
clc
add
into
out
sbb
dec
ficompl
fsubrl
adc
inc
cltd
enter
adc
push
sub
inc
sbb
loope
push
popa
mov
xchg
lret
pushf
lods
pop
and
mov
mov
xchg
dec
in
jecxz
jbe
dec
sbbl
and
nop
and
mov
xchg
lock
and
in
mov
lea
pop
xchg
sub
dec
popf
fcomp
fbstp
mov
jo
std
jmp
shlb
js
in
les
mov
mov
adc
jnp
daa
lret
mov
push
lock
stos
clc
stos
movl
pop
or
lock
inc
adcb
and
mov
push
dec
mov
movsl
das
cmp
push
jo
ds
sub
jno
repnz
push
dec
push
jo
jle
jmp
cmp
push
sbb
popa
hlt
xchg
mov
aad
nop
sbb
inc
xchg
lahf
cmpsl
clc
js
mov
out
hlt
adc
aaa
inc
stos
imul
pop
shlb
jle
push
add
push
or
sbb
inc
aaa
movsl
mov
or
ror
scas
pop
pusha
mov
adc
ss
in
es
push
mov
sub
pop
rcrb
push
mov
aas
xchg
daa
ljmp
add
loopne
xchg
lods
ja
mov
sub
andl
mov
insl
xchg
aam
rorl
scas
sbb
es
lret
rcr
and
push
cwtl
insb
mov
aad
mov
je
ficoml
clc
xlat
shrb
pop
rolb
pop
sub
sub
xor
out
shrb
fwait
push
or
adc
mov
scas
jl
ret
mov
data16
push
xor
mov
xlat
hlt
add
ret
or
mov
popa
das
in
outsb
xchg
movsl
sub
adc
jo
mov
scas
pop
pop
sbb
mov
aam
shl
mov
xchg
push
je
mov
cmp
push
mov
repz
hlt
aam
scas
mov
andl
cmp
dec
lea
add
movsl
xor
adc
movsb
sub
mov
mov
imul
jno
fidivs
js
sbb
shll
xchg
dec
mov
dec
es
mov
ja
scas
push
cmp
xor
hlt
cltd
ret
push
push
lods
cs
pop
adc
out
enter
dec
stos
gs
push
in
mov
mov
clc
mov
cltd
sub
test
mov
es
jle
ja
pop
push
fcomps
inc
ja
pop
cmp
cmpsl
xchg
cmpsl
aaa
dec
and
or
lret
pop
enter
je
insl
mov
js
ljmp
sbb
das
ror
daa
test
dec
or
out
lcall
xchg
mov
je
and
jecxz
stos
punpcklwd
jle
jbe
xchg
pop
cmp
loope
push
dec
jnp
pop
int
mov
sub
js
xor
jae
pop
test
xchg
mov
movsb
lods
adc
xor
push
inc
mov
inc
out
insb
pop
sti
inc
mov
fcoms
mov
inc
mov
leave
icebp
loop
push
pop
outsb
sahf
inc
sahf
dec
mov
loopne
dec
roll
std
mov
mov
add
sbb
inc
popf
sbb
add
cs
pop
sbb
mov
pusha
int3
outsl
sbb
cmp
data16
push
lods
mov
mov
arpl
rcr
movsb
cmp
mov
out
mov
fdivrp
pop
sbb
daa
stos
js
mov
lcall
cltd
rol
mov
in
movb
inc
aas
xlat
mov
sub
jb
sbb
mov
movsb
aam
insl
add
jae
add
adc
outsl
aas
inc
mov
out
mov
mov
nop
mov
jne
in
xor
push
pushl
les
ror
das
dec
lock
imul
jmp
fistps
popf
jbe
jp
mov
mov
sub
insb
es
scas
jno
pop
shlb
jbe
jb
inc
dec
stos
jl
cmp
in
enter
enter
pushf
int
cwtl
push
xchg
pop
enter
insl
pushf
je
add
in
mov
jmp
jnp
ja
mov
out
inc
adc
mov
mov
pop
ljmp
sti
add
cli
xchg
push
mov
nop
es
jb
test
aas
outsb
jno
in
sub
mov
xlat
in
jb
adc
out
mov
icebp
push
data16
and
test
lret
lods
popa
fldt
cwtl
or
dec
divl
int
add
ljmp
adc
fimuls
repz
roll
jbe
mov
mov
arpl
push
mov
enter
sub
sbb
jb
mov
jne
jecxz
fmuls
lock
enter
mov
rolb
mov
mov
or
fdivs
icebp
data16
mov
sbb
xor
mov
and
mov
mov
adc
add
movsl
scas
sbb
out
rorl
xor
pop
adcb
leave
xchg
cmpsb
push
push
jle
sbb
cmp
ds
fmul
ss
mov
xchg
xor
scas
jmp
cwtl
movsb
sub
mov
sbb
xor
xchg
test
mov
divl
into
mov
jge
shlb
push
repz
push
stc
sub
popf
push
mov
lea
enter
and
stc
mov
or
or
mov
jp
int3
inc
rcrb
pop
mov
nop
adc
and
pop
movsl
fcoms
fsubrp
jnp
call
sahf
inc
sahf
xchg
pop
dec
rolb
jns
push
jmp
das
ja
int3
and
mov
dec
and
jecxz
clc
ljmp
out
shl
adc
fisubl
dec
icebp
dec
mov
add
std
mov
shrl
in
out
or
cmc
nop
pop
dec
add
addl
lods
mov
orb
repz
in
push
push
test
stc
mov
movsb
jns
mov
mov
mov
mov
xchg
popf
subl
icebp
rclb
or
and
sbb
mov
cmp
outsb
icebp
das
mov
mov
mov
jmp
add
popa
std
repz
add
dec
or
lods
in
clc
pop
push
outsl
or
adc
xor
int
cli
stc
cmpsl
mov
mov
mov
mov
mov
rol
push
pop
int
outsb
ret
adc
icebp
shrw
dec
cmp
enter
sbb
pop
adc
lret
test
adc
sub
and
xchg
cmpl
and
imul
mov
push
out
das
cmpxchg
pop
mov
jae
daa
inc
mull
int3
sbb
jecxz
mov
dec
pusha
inc
pop
sbb
fsts
ja
push
sub
mov
out
fs
pop
insb
adc
ljmp
and
lock
push
add
mov
sub
dec
scas
fldcw
add
sbb
sub
cmp
enter
mov
out
adc
repnz
test
inc
in
or
xor
adc
cmpsl
pusha
mov
inc
popa
outsb
movsl
rcrb
xor
repz
sbb
mov
push
das
or
testb
xlat
lahf
sbb
pop
mov
lods
mov
xchg
mov
movsb
repz
inc
jo
cmpl
sbb
popa
clc
sahf
xor
popf
pop
das
adc
loop
daa
dec
jb
gs
dec
mov
insl
push
xor
mov
outsb
sub
add
lock
push
es
push
dec
jmp
sub
jo
and
outsb
push
xor
gs
ret
pop
or
sbb
fsubrp
and
jae
and
pushf
mov
pop
lock
xor
jle
sbb
sbbl
xor
xchg
js
lret
mov
outsb
dec
movsb
cs
repnz
jno
addr16
gs
mov
push
lcall
dec
outsl
xor
mov
repnz
adc
mov
dec
sub
js
dec
addb
sub
cltd
mov
shrl
mov
bound
testl
andb
mov
out
out
imul
xor
sub
cmp
loop
enter
cmp
add
aad
jg
dec
xor
xorl
dec
sti
mov
push
sahf
insb
popf
jnp
push
fdivrp
cmpb
imul
test
mov
scas
mov
fidivl
xor
hlt
sti
jbe
pushf
and
mov
stc
ss
clc
xchg
je
fisttpl
jbe
jmp
mov
push
imul
pop
movsl
xchg
xchg
sub
mov
ret
ficoml
imul
fnstcw
jmp
lcall
inc
jno
js
enter
pop
nop
clc
mov
jns
mov
mov
jbe
push
push
pop
mov
pop
imul
fisttps
pop
cltd
ror
inc
rcll
ret
pushf
loopne
pusha
loope
sub
repnz
lcall
mov
and
stos
lret
rorb
inc
mov
in
pop
pop
test
dec
ja
leave
jnp
jl
clc
or
sbb
sbb
cmp
adc
mov
xor
xchg
arpl
mov
mov
into
mov
jmp
jnp
lods
xchg
call
jmp
mov
cmpsl
mov
xor
hlt
icebp
push
int3
mov
out
push
jle
jb
lods
in
xchg
add
mov
mov
bound
in
mov
lahf
icebp
mov
xchg
inc
mov
stc
in
sub
pusha
fs
in
cmpsb
fiaddl
mov
xor
jno
gs
cmp
mov
jmp
int
mov
fmuls
jg
fidivl
jb
xchg
insb
mov
lods
pop
roll
enter
mov
mov
in
mov
inc
jmp
push
sub
jecxz
addr16
lock
mov
mov
bound
xchg
dec
jle
stos
lods
rorb
fldenv
aaa
push
mov
icebp
aaa
cmpl
fdivs
push
jle
in
mov
icebp
xchg
subl
mov
xor
mov
cs
jmp
mov
xchg
cmp
jbe
push
mov
sbb
and
mov
xchg
xor
shl
orl
inc
lahf
stc
mov
jge
xchg
mov
pop
mov
iret
push
mov
pushl
imul
mov
addr16
xor
cmp
add
dec
add
mov
push
dec
sbb
popa
xlat
in
sub
out
mov
xor
mov
mov
ja
enter
and
pop
mov
loop
mov
je
jmp
js
sti
xor
push
cmpsb
lods
mov
cmp
and
shrb
scas
push
test
xchg
sar
lret
add
mov
or
inc
out
sub
clc
mov
jg
cld
into
xor
dec
cmp
outsb
pop
stc
xor
and
loopne
pop
fldt
dec
loopne
les
pop
sbb
fcompl
push
test
mov
mov
decl
call
bound
adc
xor
ret
pop
das
ss
xor
mov
inc
mov
xor
mov
sub
clc
or
pop
mov
mov
or
lcall
mov
icebp
sbb
xor
or
lea
out
jae
mov
aam
mov
cwtl
sbb
scas
cld
jge
jo
mov
and
imul
orb
sub
push
jmp
cmp
clc
sbb
dec
push
sub
xchg
mov
repnz
adc
mov
mov
cmp
jo
xchg
or
dec
fidivl
jmp
jns
jmp
sub
push
test
mov
xlat
mov
dec
push
push
lret
shll
daa
dec
in
mov
jbe
out
test
ds
mov
out
sub
mov
jno
mov
mov
jl
mov
int
cmp
fstp
test
cmpb
das
push
lea
mov
aas
shlb
mov
jge
dec
mov
mov
jns
jae
dec
mov
xor
push
stc
add
mov
xor
outsb
pop
mov
addr16
adc
loope
ja
ror
xchg
dec
test
xor
sbb
lds
ret
fwait
sub
popa
lock
stos
clc
shrl
in
lods
adc
jno
fwait
aas
stc
scas
test
enter
lret
xor
push
mov
fbstp
in
add
mov
push
enter
scas
cwtl
xchg
pusha
jbe
sbb
out
sbb
dec
dec
dec
fimull
scas
cmp
sbb
jle
pop
jp
pop
jmp
ret
das
inc
sub
cmp
fisubrl
bound
outsb
sahf
xlat
xchg
lods
lds
repz
adc
mov
push
xor
mov
dec
mov
enter
outsl
sub
jbe
movsb
dec
or
in
jmp
bound
jl
add
pushf
xor
test
push
movsl
imul
sub
jg
mov
leave
sbb
or
mov
pop
dec
push
mov
and
test
nop
in
adc
dec
add
pop
jecxz
or
daa
sub
sbb
pop
pop
dec
pop
mov
mov
repz
push
mov
or
push
mov
dec
or
or
addr16
adc
not
inc
pop
xor
cld
mov
cmpsl
xor
pop
push
nop
sbb
loopne
aad
ficomps
fldlg2
xchg
and
aam
and
outsb
loop
mov
outsb
push
pop
mov
cs
pusha
shll
push
xlat
les
xor
adc
fcoms
aam
das
xor
xorb
sub
mov
stos
adc
in
xchg
lds
jg
mov
pop
loop
jnp
enter
inc
out
pop
jo
and
push
xchg
es
push
fmuls
sub
ss
cs
pop
into
out
out
orl
add
mov
data16
stc
jnp
sahf
xchg
mov
cmc
out
xchg
clc
call
sbb
push
jge
fidivrl
mov
cmpl
sub
push
movsl
dec
sahf
lock
iret
ret
mov
adc
xchg
jbe
add
cmovns
inc
nop
pop
lea
adc
and
insl
movsl
popa
cs
fidivrs
mov
adc
jp
test
dec
jmp
sub
pop
jae
pause
sub
sbb
rorl
enter
das
nop
cmp
inc
mov
nop
shlb
push
jo
xor
sarl
daa
outsb
pop
cmp
fdivrl
sbb
add
mov
dec
clc
in
push
ss
xor
adc
and
mov
xchg
adc
ljmp
mov
lret
or
scas
stos
or
dec
or
inc
lds
cmpsl
lcall
xchg
mov
pop
xchg
mov
mov
push
stc
daa
cld
sbb
scas
decb
addr16
cwtl
fbld
call
push
stos
push
sub
add
jecxz
mov
pushf
jo
xor
outsb
enter
and
or
push
jmp
xor
push
stc
mov
cmp
out
add
les
jbe
push
xchg
clc
mov
jo
mov
notb
mov
cmpsb
xor
push
push
notl
pop
sbb
dec
jge
ret
das
test
test
mov
mov
out
xor
pusha
lcall
adc
sahf
in
lret
inc
adc
enter
ja
sbb
mov
sub
push
leave
push
test
dec
out
lods
icebp
mov
cmp
and
mov
stos
and
lods
and
inc
movsb
lds
xchg
scas
arpl
pop
aad
pusha
mov
imul
mov
sub
mov
mov
ror
and
sahf
and
add
xor
stos
xor
scas
js
rcr
test
scas
loopne
popf
mov
push
mov
xchg
mov
fcomip
shll
in
adc
cs
sub
sbb
pop
icebp
cmpb
mov
adc
add
stc
lcall
pop
in
cmpl
outsl
sub
test
mov
std
fwait
imul
les
popa
push
daa
enter
clc
mov
stos
or
mov
hlt
test
xor
jge
lock
js
enter
imul
pushf
popf
mov
roll
xlat
inc
xchg
mov
mov
fldt
out
lret
inc
int3
or
adc
rol
std
flds
mov
jl
or
imul
inc
push
jns
mov
sub
cmp
mov
test
xchg
push
push
mov
lcall
jbe
mov
mov
sti
iret
mov
repz
xor
in
jbe
adc
xchg
imul
ja
fnstcw
outsl
dec
outsb
fcomp
mov
into
adc
push
sbb
mov
popa
js
mov
push
imul
mov
hlt
aad
add
inc
inc
xchg
mov
shl
lock
es
jae
int
or
lods
push
je
mov
adc
div
pop
addr16
push
add
adc
insl
pusha
enter
movsb
inc
sub
mov
adc
mov
loopne
pop
jg
and
inc
arpl
dec
loop
test
lcall
cmp
and
pop
sub
mov
sbb
adc
addl
push
sub
rorl
and
or
and
sub
inc
scas
loopne
stc
cmc
and
add
dec
pop
mul
data16
ljmp
out
shl
jo
pop
std
mov
daa
int3
add
adc
sti
ljmp
jmp
xchg
pop
std
cmp
lods
cltd
inc
mov
gs
sub
insl
inc
mov
mov
roll
popa
inc
sub
xchg
adc
inc
out
fistpl
mov
fstps
popf
add
push
or
fucomip
les
or
cmp
dec
cmp
scas
clc
adc
jp
enter
imull
cmpsl
mov
xlat
jo
lcall
das
and
daa
push
mov
inc
cmpsl
mov
jg
movsb
mov
mov
adc
mov
lods
into
testb
and
test
dec
ficompl
xor
adc
sub
push
gs
sbb
dec
enter
gs
flds
insl
lods
mov
sbb
jl
cmp
sbb
push
ss
enter
mov
std
mov
test
or
push
adc
mov
inc
xchg
sbb
ficoms
lds
js
xor
clc
int
orb
adc
outsb
movsl
cmpsl
jge
xchg
ljmp
cmpsl
jno
jp
push
movsb
pop
enter
rcll
mov
and
nop
cmpsb
sbb
pusha
mov
lds
fcoms
mull
movsl
test
or
and
rorl
outsl
shll
jo
xchg
out
and
cmp
fbld
xchg
lahf
xor
dec
mov
jmp
mov
xchg
mov
xchg
lds
adc
xchg
mov
pop
ss
out
aaa
jo
or
aam
gs
stc
shrb
jg
sub
jle
sahf
push
mov
leave
lcall
pop
stc
inc
pop
nop
enter
mov
int
adc
xor
lods
sbb
pop
fldz
ja
inc
mov
mov
sub
lods
dec
andb
sub
cmp
jg
fnstenv
mov
scas
mov
jno
adc
mov
fisttps
test
cld
sub
jo
cmpsl
push
jg
mov
mov
mov
js
mov
and
test
fdivrl
cld
gs
cltd
push
in
mov
adc
push
je
das
mov
shl
xlat
xchg
sub
es
xchg
mov
test
adc
pusha
push
fcmove
xchg
test
dec
cmpsl
push
or
jmp
cmp
sbb
inc
add
ds
imul
das
jle
mov
out
mov
cmpsb
out
mov
pinsrw
inc
fimull
jne
shrl
mov
mov
mov
add
mov
and
push
data16
mov
pop
ret
xchg
popa
jecxz
jb
xchg
mov
mov
je
pushl
sub
popf
repz
mov
push
cmp
sbb
adc
xor
adc
push
adc
mov
cmp
pop
dec
mov
movsl
or
sar
push
sbb
andl
xor
rolb
std
hlt
add
gs
sbb
addb
outsl
mov
adc
xor
popf
dec
jg
test
add
mov
les
hlt
dec
mov
in
nop
mov
inc
sbb
movsb
mov
pop
ss
and
aam
jo
mov
mov
test
pop
aad
and
cmp
sub
es
cmpsb
fxch
std
dec
adc
shlb
push
dec
and
in
mov
xor
rclb
ss
fcmovne
stos
fdivl
sbb
sbb
xlat
daa
push
shlb
mov
sub
sti
and
aaa
push
inc
add
mov
pop
data16
push
aam
mov
roll
mov
pop
push
daa
fdivrs
jns
xor
cld
and
push
mov
out
repnz
mov
fisubrs
sahf
pop
ret
mov
mov
jns
nopl
loopne
mov
test
insb
xor
cmpsb
inc
scas
dec
and
js
push
push
movsl
jno
pusha
xchg
xor
stos
clc
stc
shlb
or
xor
gs
outsl
xchg
inc
mov
out
push
rclb
inc
and
mov
mov
pop
jmp
mov
int3
fdivl
aad
jb
mov
loopne
mov
test
mov
inc
mov
repz
or
dec
mov
mov
mov
jo
scas
jp
sbb
adc
sbb
gs
andb
lds
add
fisubrs
aam
dec
test
in
pop
incl
push
test
adc
inc
das
test
jno
sbb
or
rorl
or
in
imul
push
xchg
add
loop
scas
pusha
enter
scas
das
mov
rcll
dec
or
xor
loope
push
dec
enter
arpl
out
mov
imul
xlat
inc
pop
mov
movsb
or
mov
mov
testb
cmp
je
sbb
pop
sub
add
pop
lret
test
and
pop
in
xor
adc
pop
push
pop
into
outsl
push
aaa
pop
cltd
inc
pop
cmp
std
movnti
subl
jle
push
jmp
les
jo
popa
and
iret
mov
push
add
enter
pop
cwtl
cmpsb
pop
clc
push
fmuls
je
shll
jg
das
shll
jp
cmp
ljmp
bound
sub
ficompl
adc
xor
push
popa
loop
mov
gs
test
addb
cs
loop
fiadds
loopne
clc
inc
adc
pop
jg
js
xor
pop
xchg
stos
inc
fcomp
pop
add
sub
arpl
mov
or
aas
fisttps
fbstp
mov
aad
xchg
dec
movsl
pusha
sbb
sub
les
push
dec
xchg
xor
imul
movl
jne
dec
dec
push
popf
lock
stos
pop
enter
and
cmp
mov
sti
out
iret
mov
in
test
adc
push
mov
add
sub
push
subb
ret
cwtl
enter
push
mov
lret
loopne
loop
test
mov
mov
and
sub
popa
loopne
push
mov
sub
sbb
mov
inc
movntq
inc
hlt
jns
mov
cmpsb
add
push
inc
sahf
das
lods
fdivs
pop
cmpsb
mov
adc
and
mov
ja
jp
sbb
sbb
outsl
ss
leave
mov
mov
and
mov
adc
gs
push
xchg
clc
outsb
push
adc
mov
in
mov
adc
push
sti
out
fsts
imul
data16
dec
mov
gs
out
and
cwtl
pop
dec
jno
pop
clc
fsts
xchg
sbb
loope
lret
filds
mov
push
cmp
dec
loopne
mov
xor
lea
movl
scas
xchg
leave
push
pusha
xor
lods
adc
jo
clc
iret
pop
push
jo
ljmp
and
mov
sbb
into
xor
lods
enter
fdivrs
cmpsb
or
dec
mov
gs
inc
mov
shlb
mov
push
xor
shrb
pop
repz
dec
movsb
mov
sti
mov
jg
movl
mov
loopne
inc
and
mov
jge
pop
sub
int3
bound
jge
gs
mov
and
mov
xchg
ljmp
cvtps2pd
neg
cmp
call
jg
movsb
outsl
adc
outsb
jmp
aad
fimuls
jo
in
inc
sub
add
xor
jae
lds
dec
stc
daa
mov
cmpsl
out
mov
jne
lea
loop
push
shl
mov
mov
clc
push
push
nop
xchg
inc
jns
and
lahf
cmp
sbb
adc
dec
aam
test
dec
lock
mov
inc
lods
xchg
fwait
add
cmp
xchg
push
cmp
inc
imulb
inc
jb
jb
pop
movsb
xor
cmp
push
jg
xchg
xchg
test
adc
and
adc
divb
fsubrp
mov
jmp
shrl
mov
in
inc
pushf
jae
pop
shrb
pop
in
loope
adc
sub
xchg
xchg
jo
aaa
mov
and
inc
push
inc
fistps
ss
movsl
and
stc
mov
dec
lcall
add
fisubrs
scas
aam
push
dec
pop
push
inc
push
shlb
loopne
sbb
jmp
pop
mov
xchg
mov
cli
dec
jbe
inc
mov
out
jl
aas
ss
movsl
shlb
push
scas
jp
lret
or
mov
pushf
dec
bswap
jge
mov
add
movb
mov
cmp
xor
mov
dec
push
cmp
int3
lock
add
mov
push
cmp
cmpsl
jbe
lcall
sub
mov
mov
mov
adc
add
sbb
pop
mov
fbstp
mov
ds
call
pop
lret
mov
sbb
pop
test
iret
cwtl
pop
cld
testl
stos
pop
enter
xor
xchg
sbb
xor
test
sub
hlt
add
enter
cmp
sahf
shll
ds
test
fucomp
call
or
pop
test
sti
mov
add
loope
lods
sbb
sti
lds
mov
sub
lods
test
xor
repz
mov
daa
lods
jl
pushf
pop
mov
xor
sbb
jle
imul
push
or
scas
sbb
dec
jno
dec
push
lods
xlat
add
shlb
outsl
cmp
sub
sbb
jmp
lods
ljmp
imul
pop
cmpsb
mov
mov
cmp
loop
mov
inc
mov
sbb
std
cmovnp
fidivl
cmp
mov
pop
jl
mov
ret
fiaddl
cwtl
enter
or
push
mov
test
mov
add
xlat
pop
mov
push
into
lahf
cmc
push
dec
xor
mov
mov
cli
lods
pushf
lcall
xchg
lds
mov
or
aas
mov
inc
ficoms
sbb
stc
mov
xchg
cmp
mov
cwtl
test
add
ss
mov
dec
cltd
or
test
iret
jmp
out
ja
lods
mov
sbb
mov
int3
inc
dec
hlt
enter
mov
fstpl
xchg
jl
adc
cmp
cmpsl
jbe
fistl
sub
fnstsw
sub
push
je
inc
mov
sub
jle
pop
mov
dec
icebp
mov
shlb
push
mov
aas
aad
or
mov
rcll
ds
aas
js
inc
jb
in
ds
mov
daa
sti
add
stc
push
xchg
mov
push
adc
repz
insb
shll
push
pop
enter
adc
stos
fidivrs
mov
xor
negb
movsb
cmp
mov
adc
rcl
mov
insb
lret
mov
xor
jns
xor
pushl
xchg
mov
sbb
into
mov
addl
adc
mov
mov
pop
sub
mov
push
fldt
cmp
icebp
xor
jecxz
xchg
loopne
jno
inc
das
and
adc
repnz
jo
mov
push
out
lock
mov
filds
das
mov
ret
or
mov
sub
stc
add
sub
push
adc
cli
xchg
mov
cmp
lods
mov
enter
into
in
pop
push
hlt
mov
hlt
jo
push
std
pop
jo
add
xor
cmpsl
jmp
mov
ss
push
jg
sub
inc
fcomps
iret
enter
arpl
pop
cmp
enter
mov
pop
dec
scas
push
out
jge
mov
out
scas
mov
ja
rcr
mov
and
pop
dec
cmpsb
push
ds
add
mov
addr16
push
pop
fcoml
adc
mov
hlt
mov
xchg
outsb
ja
add
adc
pop
add
mov
std
inc
mov
sub
fwait
loop
arpl
notb
add
pop
adc
movsb
xchg
icebp
test
cmp
es
pop
adc
push
mov
push
xor
ja
imull
cli
nop
mov
fistpl
fists
or
je
mov
dec
testb
sub
add
addr16
dec
and
adc
add
inc
push
mov
test
jne
pop
sub
lods
insb
push
stos
js
jmp
add
pop
mov
fwait
std
pop
ficomps
pop
push
mov
cmp
mov
add
mov
daa
ficoms
dec
ds
xor
lret
add
insb
xchg
mov
mov
mov
xchg
nop
add
mov
cmpsl
testb
cmpsl
imull
mov
mov
popa
and
pop
sbb
insl
ja
push
add
xchg
inc
into
andl
test
stc
es
and
enter
shlb
filds
shll
das
pushf
dec
add
jns
les
nop
inc
scas
in
leave
push
dec
push
test
hlt
sub
rcrb
bound
icebp
in
mov
ljmp
test
lds
enter
popf
clc
outsb
mov
cmp
aas
lods
sbb
pop
dec
std
fdivp
sub
mov
movsb
cmp
jo
jae
inc
aad
mov
aas
nop
mov
adc
or
icebp
mov
jae
dec
cmp
lods
in
jl
mov
mov
mov
movaps
fbstp
xchg
shll
ljmp
scas
push
and
aas
enter
dec
divb
dec
inc
xchg
lret
cmp
mov
xchg
fs
adc
mov
xchg
incb
lock
jno
jbe
ss
cltd
xchg
sub
mov
movsl
dec
ret
xchg
push
jle
push
outsb
incl
pop
scas
sahf
lock
dec
sti
pop
mov
aad
js
dec
sub
mov
arpl
inc
cmpsl
sbb
dec
mov
xor
cmpsl
fistps
test
push
dec
lods
jae
movsl
xor
repz
adcb
out
xor
shll
imul
jle
cmpsl
or
dec
cmpsl
pusha
xlat
decl
pop
dec
test
mov
push
popf
nop
mov
xchg
pop
inc
outsl
mov
cwtl
adc
rep
mov
sub
lcall
ret
imul
lock
push
cmp
out
push
into
out
mov
das
out
in
stos
add
idivb
dec
lcall
outsl
jl
in
pop
sub
sub
ret
mov
test
ret
fadds
shlb
in
iret
jecxz
shr
jae
or
in
sbb
mov
sub
js
sub
subb
in
clc
sbb
rorl
mov
ja
fs
mov
or
pushf
dec
loopne
and
aam
popf
sti
jle
xchg
push
shrl
loope
int3
pushf
push
into
rcr
or
sti
test
mov
sbb
gs
and
dec
adc
pushf
adc
mov
xlat
pop
outsl
enter
dec
outsb
sbb
aad
ljmp
or
sarl
jne
xorb
adc
repnz
in
enter
cmp
adc
push
out
pusha
enter
addr16
jle
sbb
pop
lret
sbb
push
pop
xchg
popf
pop
cmp
in
fcoml
pop
jb
xor
jo
or
cmpsl
mov
or
outsl
mov
adc
sub
or
cld
mov
sbbl
iret
cli
mov
clc
xchg
mov
inc
adcb
roll
push
push
adc
sahf
mov
push
mov
fisttps
lcall
xchg
lock
inc
pop
lcall
addr16
test
push
cltd
in
xchg
or
jbe
mov
or
mov
push
sahf
stos
inc
push
mov
dec
sti
xchg
cmpsb
sbb
push
mov
pop
fiadds
jne
push
mov
xor
jmp
xor
mov
ds
loope
sbb
cmpsb
out
jno
frstor
mov
xchg
test
mov
pop
rorl
dec
out
mov
inc
push
test
mov
or
pop
daa
mov
ljmp
je
and
or
inc
inc
mov
pop
shll
adc
shr
lds
cmc
xchg
mov
mov
lock
pop
lods
dec
popa
push
jecxz
mov
faddp
adc
push
jo
enter
add
es
xor
push
adc
add
aam
mov
sbb
sbb
dec
push
lods
cld
sbb
outsl
pop
fldt
xor
jne
clc
clc
push
movl
scas
ljmp
adc
jns
iret
pop
adc
cwtl
daa
pop
xchg
jmp
push
jg
inc
fisubrs
nop
enter
mov
ficoms
clc
scas
inc
lods
push
push
add
lds
test
jno
jb
fiaddl
subb
mov
mov
pop
mov
sahf
int
mov
xor
or
pop
jne
fdivl
jns
into
fidivs
adc
imull
mov
in
cmp
movsl
jnp
or
test
pushf
xor
roll
mov
mov
ljmp
int3
mov
xchg
sti
sbb
lods
repnz
loope
loopne
xor
test
testl
repz
inc
hlt
subb
xchg
pop
lds
movntq
push
mov
jbe
or
jno
sbb
push
adc
mov
inc
jmp
add
xor
mov
xor
scas
adc
xor
mov
jae
imul
pop
je
mov
inc
or
xor
into
lret
scas
add
fdiv
insb
mov
mov
mov
mov
mov
jecxz
lods
stc
shrb
pushf
addb
push
dec
out
jp
mov
add
cmp
sarb
mov
add
mov
jge
inc
inc
nop
add
enter
movsl
lods
sbb
dec
mov
fdivl
repnz
sbb
stos
imul
mov
divb
dec
jno
popf
mov
lahf
nop
cmp
cmp
out
jb
xor
or
js
or
shlb
push
jns
jnp
push
ds
inc
fxch
mov
dec
add
into
sbb
mov
mov
mov
or
mov
dec
ds
push
add
daa
mov
mov
push
rep
xor
and
shll
loop
pop
mov
aam
xor
dec
sbb
andb
sub
es
test
xor
in
scas
xchg
mov
push
xor
divb
cmp
test
add
mov
xor
out
jecxz
mov
test
ljmp
movsl
push
adc
not
out
push
enter
insb
inc
stos
int3
sub
lock
popf
xor
out
push
add
clc
push
outsl
add
hlt
and
ds
dec
subb
sbb
outsl
mov
test
push
pop
adc
push
sbb
mov
test
dec
movaps
inc
rcrl
mov
rclb
push
out
andb
roll
mov
es
aas
cmp
pop
mov
sbb
jmp
mov
negb
lods
lock
hlt
push
ror
int3
inc
mov
sbb
mov
mov
loope
xchg
inc
sbb
xor
xchg
xor
push
xor
jae
jge
test
dec
push
mov
shl
push
data16
adc
fbld
repnz
mov
sahf
test
sbb
loopne
aad
mov
mov
das
pop
adc
je
push
adc
iret
mov
push
push
cwtl
inc
cli
push
xor
dec
xchg
dec
mov
fisubs
sbb
cld
mov
mov
test
push
inc
push
adc
mov
ret
xchg
scas
loope
adc
dec
adc
xchg
scas
jle
test
mov
push
cmp
push
es
jle
mov
xor
lret
popl
mov
les
adc
mov
sahf
adc
idivb
and
clc
push
roll
mov
lock
into
nop
add
pop
cltd
rorl
fisubrl
mov
idivb
xor
scas
mov
cmp
insl
scas
ss
shll
sbb
mov
cmp
gs
mov
mov
inc
fildll
jno
cmp
pop
mov
insl
mov
xchg
add
mov
and
fbstp
push
clc
jecxz
data16
subl
push
int3
pusha
scas
sbb
scas
xchg
mov
jl
popa
fcompl
cmp
fldlg2
scas
sub
mov
shrb
mov
loopne
gs
ss
shlb
cli
adc
divb
cltd
std
adc
out
add
rorb
pop
adc
xor
jns
inc
pop
bound
lds
mov
xlat
mov
add
outsl
push
adc
loop
xchg
scas
cltd
call
rol
jb
or
jge
mov
into
and
pop
xor
jp
cmpb
jl
mov
mov
pop
mov
es
adc
enter
xchg
jae
push
rcll
adc
dec
insb
jb
gs
mov
xchg
inc
sub
mov
ret
cmp
adc
stos
sub
test
movsl
shl
xor
mov
das
scas
ret
mov
lods
cwtl
ss
dec
mov
mov
pop
scas
mov
clc
je
xor
and
push
std
addr16
mov
fisubrl
mov
dec
lahf
orl
or
and
movsl
notb
mov
gs
and
sahf
mov
xor
daa
jo
sbbb
call
sub
cmp
gs
mov
mov
aam
idivl
and
out
lods
fstps
jo
das
pop
loopne
mov
mov
bound
sbb
jne
shl
pusha
fcmovne
mov
cmp
mov
add
push
scas
mov
sbb
scas
push
cltd
in
mov
shlb
adc
cmp
push
sub
daa
fildl
sbb
repnz
sahf
mov
mov
pop
push
dec
arpl
lock
in
fcomps
fistl
scas
ja
dec
add
ficompl
shrl
adc
mov
cmp
push
addb
adc
aam
outsb
divl
xchg
cltd
inc
out
test
lock
mov
push
mov
or
xchg
dec
cld
shlb
cwtl
out
pop
repz
pop
dec
ret
add
enter
and
and
pop
out
mov
mov
pop
cmp
aas
push
add
bound
fldcw
adc
test
and
xchg
dec
sbb
daa
push
mov
add
pushf
rcr
xchg
xlat
enter
push
popf
mov
out
pop
dec
pop
dec
adc
sbb
iret
fdivp
fs
orb
cli
mov
nop
ss
inc
mov
inc
call
clc
cli
mov
push
test
mov
cmpl
mov
movl
pop
sbb
nop
mov
rol
fsubs
arpl
push
xchg
out
ficomps
inc
mov
outsb
sar
sbb
sbb
rcrb
jmp
xchg
sub
sub
in
xor
clc
gs
or
jo
pop
adc
adc
popf
fs
out
inc
shrb
imul
or
mov
push
mov
mov
sbb
imul
repz
packssdw
inc
aas
jo
pop
pop
outsb
rcr
fldt
dec
lods
adc
sub
daa
stos
jbe
mov
lods
sub
jb
imul
mov
or
mov
shll
mov
jmp
es
ret
and
push
fldenv
xor
cmp
sbb
icebp
movsl
enter
xchg
clc
out
je
sub
aaa
push
aas
cmpsb
mov
popa
js
jg
inc
inc
mov
and
or
enter
push
lcall
mov
out
mov
leave
jl
mov
dec
fdivrp
ja
adc
and
jbe
xor
test
mov
repz
pusha
sub
shll
push
jns
not
jo
sub
sub
lods
xlat
test
inc
in
fimull
test
mov
scas
fwait
lods
and
jmp
adc
movsl
test
aam
js
mov
or
and
bound
mov
pop
mov
pushf
pop
push
insl
mov
mov
pop
outsl
movsl
inc
xchg
out
mov
push
bound
jp
cmp
adc
icebp
lock
jbe
mov
mov
xor
out
xorl
pop
lods
aas
js
jg
das
mov
or
mov
jae
xor
sbb
sub
mov
lret
ret
pop
add
lahf
stos
lds
scas
mov
loop
aam
std
cmp
mov
jb
xor
pop
popf
repz
push
leave
mov
push
cmpsb
iret
nop
cmp
jp
push
cmp
mov
lods
imul
mov
mov
repnz
rol
stos
mov
nop
adcl
outsl
enter
fwait
jl
fstl
sahf
mov
pop
cs
mov
or
data16
mov
test
jle
mov
mov
fistps
bound
cld
mov
lods
mov
mov
ret
scas
xchg
mov
inc
lock
sbbl
mov
int3
mov
mov
jmp
cmp
fisubrl
sahf
mov
insb
std
and
cmp
pop
imul
pop
fdivrs
sub
iret
inc
mov
jge
sub
mov
mov
cmp
and
mov
and
push
sbb
call
in
cmp
mov
inc
enter
mov
pop
in
int
push
mov
fs
xchg
pop
andb
jne
add
ret
lock
iret
push
mov
mov
call
mov
in
scas
pushf
push
mov
cmp
scas
stos
jne
jae
mov
xor
adcb
lret
adc
and
fcoml
jp
ja
xor
dec
push
decl
cmpsl
push
pop
push
jne
out
dec
inc
dec
add
ret
scas
movsb
jb
lds
jle
xor
add
and
enter
repz
into
out
lock
jno
nop
stos
add
push
fwait
dec
popf
cmp
jae
xor
mov
xor
cmc
lcall
sub
xor
jle
xor
jecxz
pusha
fidivs
sbb
clc
xchg
call
xor
push
out
cmpsl
inc
fcmovne
repz
jmp
cs
add
adc
inc
scas
das
lea
mov
fimuls
inc
scas
pop
lods
hlt
mov
outsl
and
xchg
and
sbb
dec
fdivs
out
add
cmpsb
popa
lods
mov
sbb
sub
push
rcr
addr16
jg
enter
bound
sahf
sahf
mov
jmp
mov
xor
cs
and
cwtl
inc
xchg
xchg
pop
outsb
sbb
mov
dec
jp
sbb
imul
loopne
xchg
or
imul
in
movsl
mov
mov
push
jmp
nop
imul
push
test
shlb
faddl
test
sbb
aam
dec
push
adcl
dec
cmp
xchg
hlt
push
xchg
outsl
cli
mov
dec
mov
and
dec
push
test
mov
xor
loop
in
dec
xchg
testb
rolb
cmp
outsb
push
in
cltd
mov
ret
insb
test
mov
in
lods
pop
adc
out
sahf
or
mov
shrb
xchg
push
lods
sbb
in
mov
mov
loop
mov
fdivs
inc
mov
lea
nop
inc
mov
repnz
cmp
mov
adc
scas
loop
cltd
cmp
mov
adc
nop
popa
jne
inc
pushl
into
testb
and
pop
fsubrl
pop
cmpsl
mov
dec
mov
xor
insl
push
lds
in
in
arpl
push
mov
imul
mov
add
dec
lods
xchg
jo
dec
popf
push
mov
jae
dec
xchg
cli
cmpxchg
test
in
lock
mov
test
inc
les
je
cmpsb
mov
lock
sti
and
pop
mov
dec
cld
inc
push
or
xchg
lcall
sbb
in
and
arpl
popa
mov
xor
int3
push
test
pop
std
mov
lods
fwait
dec
and
divl
ja
add
scas
jae
and
sbb
test
ljmp
shl
mov
nop
cmp
lods
nop
mov
pop
xor
mov
rolb
pushf
test
ret
into
inc
jle
sti
xchg
outsl
mov
cs
pop
sbb
inc
lahf
iret
je
inc
lods
cmc
sbb
test
aam
mov
push
je
scas
addr16
push
or
pop
ds
lods
scas
sbb
adc
mov
movl
clc
scas
jg
pop
iret
outsb
stos
shlb
pcmpgtb
stos
dec
aas
bnd
mov
repnz
push
inc
jmp
enter
cs
fstps
cmp
fs
popa
movsb
adc
add
pop
std
sbb
lret
dec
mov
ljmp
push
mov
imul
enter
pop
mov
cld
xor
and
mov
call
adc
ss
cmp
or
pop
in
push
xchg
nop
jo
roll
dec
fsub
cmp
fisubrl
lods
xor
mov
mov
dec
sbb
lods
sti
pushf
pusha
mov
mov
mov
outsl
lahf
push
dec
mov
push
inc
push
cli
pop
adc
mov
in
pop
push
hlt
scas
in
mov
mov
push
inc
test
ds
lcall
pop
std
adc
lods
mov
mov
push
lods
daa
mov
push
jg
cld
outsb
mov
ret
fidivrl
in
pusha
setge
push
in
or
mov
cmpsl
dec
ja
bound
sti
push
and
xor
cmpsl
jge
aaa
daa
in
inc
out
sbb
and
mov
in
je
enter
xlat
icebp
aas
pop
fstl
test
push
inc
push
mov
fucomip
clc
inc
movsb
cmpsl
mov
icebp
fdivl
bound
test
cmpsl
sub
sti
mov
jg
nop
arpl
pop
mov
push
or
inc
xchg
push
rcll
das
cmpsl
cmp
mov
pop
pop
repz
scas
pushf
out
mov
loope
movsl
sub
jbe
fs
cld
add
jns
cltd
mov
jne
shll
icebp
dec
out
add
or
shrl
cs
pop
sub
adc
sahf
mov
ret
adc
jo
mov
movsb
fldl
out
inc
cmpsl
test
loop
enter
fists
add
movsb
into
or
jne
test
mov
mov
jmp
jae
push
pop
jge
popa
mov
gs
scas
stos
subb
inc
fs
call
movsl
mov
jo
pop
mov
sahf
mov
ret
jmp
addl
cld
push
repnz
jnp
call
scas
cmpsb
sbb
fst
pmulhuw
mov
js
dec
aas
cwtl
pop
mov
mov
sub
loopne
pop
cmp
clc
dec
lods
das
xor
dec
cld
sarb
insl
scas
out
sub
rol
push
enter
imulb
jl
jno
adc
sbb
mov
leave
sub
in
push
dec
or
fildll
jnp
mov
and
mov
cmp
mov
push
loope
pop
sub
add
jnp
shl
push
mov
loopne
lahf
repz
subl
sbb
clc
rcrb
sub
pop
andl
or
add
stos
and
xor
sbb
cwtl
movsl
cli
mov
ljmp
sub
leave
jg
hlt
enter
nop
je
int
aas
xchg
sbb
xor
pushf
leave
aas
push
icebp
jle
test
sub
mov
insb
insb
sub
pushf
add
fs
mov
pop
das
iret
xor
jecxz
jns
sub
mov
adc
lea
cs
pop
arpl
sub
cmp
xchg
mov
out
pop
fs
add
into
sub
test
int3
add
enter
cmpsl
test
in
pop
inc
or
gs
mov
xlat
adc
jne
mov
clc
xor
sar
movb
xor
or
inc
test
cmp
test
sub
repz
pop
negb
in
cld
test
inc
loopne
pop
push
cmpsl
enter
jp
insb
subb
or
jecxz
pop
imul
mov
adc
mov
movsb
in
sub
add
push
out
dec
sub
in
jle
cld
xchg
sub
jo
test
mov
out
push
loopne
dec
sub
mov
mov
popa
pop
cld
pop
mov
sub
lret
aam
mov
mov
mov
leave
push
mov
xchg
enter
cltd
mov
add
es
js
push
xor
out
js
movsl
pop
push
mov
ss
loopne
mov
les
divb
fstl
cmc
into
cmp
push
icebp
lret
hlt
fldt
sbb
icebp
lods
daa
push
cmc
leave
adc
pop
sbb
mov
scas
dec
and
arpl
mov
scas
xor
cmp
lret
mov
xchg
out
int3
nop
cmpsb
dec
cmp
or
jns
add
fstps
ljmp
inc
mov
pop
cltd
xchg
sbb
xchg
cmp
out
add
xchg
fldt
sbb
lods
adc
push
mov
xchg
notl
pop
sub
sti
mov
pop
stos
movl
mov
pop
sbb
add
clc
cmpsl
push
aas
inc
scas
pop
cmc
or
xor
pop
addb
push
lea
or
mov
inc
enter
or
push
addr16
enter
push
fists
movsb
pop
les
enter
mov
test
adc
shrl
mov
and
mov
mov
pusha
and
push
add
mov
or
dec
ja
cmpl
mov
call
inc
sbb
lcall
fiadds
dec
sub
stos
push
jnp
add
outsl
and
xchg
pushf
lods
daa
aas
xor
sub
mov
sub
lods
bound
or
jle
sahf
rcrl
pop
sub
and
enter
push
mov
out
pop
jmp
pop
adc
scas
shl
jge
or
sbb
fs
int
stc
jg
jmp
fwait
cs
push
pop
jbe
pop
add
mov
cmp
jmp
outsl
mov
lods
aas
jbe
push
test
mov
cmc
fcoms
rorb
test
das
mov
icebp
mov
mov
mov
push
dec
outsl
mov
sbb
setbe
mov
mov
mov
in
sub
xchg
mov
jbe
sbb
arpl
mov
mov
movaps
leave
movsb
rcll
pop
fs
sub
mov
push
scas
mov
mov
mov
imul
xor
mov
mov
out
xor
lea
mov
xorl
sub
lret
cs
scas
add
inc
outsb
xchg
aad
adc
pop
sub
mov
push
adc
mov
or
lret
xchg
mov
push
sarl
fisubrs
jmp
or
sbb
lods
adc
fnsave
je
out
mov
or
call
and
mov
sbb
insl
mov
push
fxtract
lea
xorb
fwait
and
sub
xor
pop
addr16
sub
add
test
es
fstl
lcall
sub
iret
mov
imul
lret
mov
jp
pop
rcrb
scas
in
clc
in
pop
les
xor
test
lea
xor
dec
sub
std
shrb
sbb
das
dec
neg
xor
inc
adc
lret
xor
aas
cwtl
ret
pop
dec
adc
sbb
mov
push
pop
nop
repnz
cmovo
sub
inc
pop
mov
push
adc
pop
xor
fcomi
out
hlt
call
aaa
imul
sub
inc
scas
mov
out
out
xchg
mov
aam
ljmp
cmp
lret
lods
cltd
mov
xchg
sub
or
and
inc
mov
out
fbstp
leave
cltd
stos
inc
push
mov
addw
mov
stos
fistl
push
cld
xor
outsl
xchg
sarl
push
mov
ret
add
movsb
xchg
nop
mov
loop
or
and
fdivrs
insb
xchg
inc
insl
inc
xorb
imul
sbb
pop
lock
mov
loopne
add
mov
iret
fildl
imul
xchg
clc
xorl
inc
ret
jne
sub
push
pop
fwait
jae
and
bound
aas
mov
pop
push
xor
scas
cld
xchg
dec
mov
jmp
dec
fsubp
gs
shlb
out
sbbl
sub
stos
mov
fnstsw
push
jbe
repnz
cmc
lret
push
inc
cltd
add
jo
outsb
out
mov
cmp
mov
xlat
test
mov
cmp
test
ds
jae
lods
icebp
jg
in
lahf
xor
mov
jb
push
nop
je
jmp
cmp
jo
mov
xchg
sbb
das
adc
adc
or
ss
mov
das
loop
sbb
mov
xchg
ljmp
mov
mov
rcr
mov
fwait
mov
iret
push
andl
mov
nop
jge
push
push
cltd
mov
push
add
cmp
cmp
rcrl
inc
mov
rcl
and
repnz
mov
sbb
inc
stos
dec
nopl
mov
das
jno
lret
xor
aam
repz
les
push
ja
xor
arpl
add
push
or
mov
daa
iret
xor
lea
dec
xor
out
mov
xchg
dec
push
mov
mov
adc
push
lods
dec
cmp
insb
jle
sub
andb
adcl
scas
pushf
stos
dec
xor
lock
xchg
inc
sub
fcomip
inc
std
inc
jecxz
mov
call
inc
mov
add
cmc
gs
pop
jecxz
cmpsl
clc
xchg
sarb
loope
jmp
dec
adc
jg
cli
sbb
cltd
cltd
xchg
xor
jno
hlt
pop
test
out
push
pusha
dec
sbb
in
mov
shll
xor
cmp
push
push
push
xchg
les
outsl
push
cmpsl
jo
enter
jns
xor
sbb
imul
pushf
add
mov
mov
jo,pt
enter
mov
and
inc
sbb
popf
aaa
js,pn
cs
cmc
aas
mov
loop
clc
or
rorl
sbb
sbb
add
pop
clc
mov
and
and
cwtl
movb
mov
pusha
sahf
sub
or
push
ret
or
imul
cmp
pop
sub
lcall
inc
lods
je
adc
mov
hlt
imul
pop
clc
cld
test
or
inc
xor
inc
dec
mov
sbb
scas
cmpsl
mov
mov
sub
mov
shlb
xor
adc
xor
out
shrl
jns
xor
dec
dec
js
scas
aad
mov
call
mov
or
iret
test
mov
mov
push
mov
pop
gs
hlt
xchg
pop
adc
ds
adc
sahf
cld
test
jge
call
pusha
xor
mov
sbb
jns
and
jge
jl
stc
mov
fcoms
adc
test
jp
rcrl
sbb
cmp
inc
movsb
push
jle
sbbb
push
cmpsl
mov
je
fistl
xor
xchg
ss
movsl
inc
sub
xor
jge
cmpsl
pop
loopne
lods
pop
cmp
ss
mov
mov
add
pop
mov
add
adc
xchg
cld
daa
jae
inc
popf
loope
push
out
mov
mov
popa
cs
aaa
lea
xchg
sti
xor
pop
or
mov
and
push
and
fwait
stos
mov
mov
xorb
stc
jb
fs
cltd
jo
push
push
mov
adc
popa
mov
pop
jp
das
push
ljmp
xorl
xlat
out
and
xchg
scas
mov
and
popf
clc
fwait
inc
mov
pop
ret
jmp
add
out
std
outsl
adc
push
pop
es
jecxz
out
in
movsb
dec
es
and
jnp
lret
movl
pop
call
gs
xchg
sbb
mov
xor
outsl
ljmp
push
sub
nop
dec
scas
mov
loopne
cs
pop
cmp
sahf
jno
icebp
xor
test
enter
fsubp
cmpl
adc
loopne
stos
dec
rorb
pop
call
fimuls
add
mov
dec
mov
pop
mov
popf
push
pop
jg
add
lahf
mov
stos
sub
mov
ret
xchg
pop
cmpl
sbb
push
test
pop
and
aas
addr16
shl
pop
daa
sbb
jge
ljmp
icebp
nop
lock
in
test
dec
rol
fnsave
shll
jae
shlb
das
hlt
sbb
imul
push
scas
jb
cmp
stc
inc
test
nop
adc
stos
add
push
out
lock
mov
inc
fidivrl
sub
hlt
enter
shrb
add
shl
push
fs
mov
lahf
mov
xchg
dec
xor
insb
lcall
fmull
mov
lds
punpcklwd
mov
pop
imul
inc
loopne
fisttps
jns
add
sahf
out
das
mov
pop
xchg
ficoms
jg
inc
fsubl
cmp
mov
out
aad
into
pusha
push
mov
mov
mov
sub
and
insl
fwait
cli
scas
xor
rolb
icebp
cmp
or
inc
mov
xor
gs
out
mov
cmp
nop
push
and
fs
cmp
and
loop
test
xchg
pop
push
out
mov
fs
stos
fdivs
inc
cmp
xor
paddb
cmpsb
cmp
mov
inc
into
mov
dec
xor
fnstcw
mov
cwtl
shlb
sbb
mov
cmp
xchg
or
pop
mov
in
cmp
jecxz
mov
nop
fstps
fstpt
mov
loope
pusha
inc
xchg
cmp
inc
stos
dec
jmp
enter
fmull
mov
fs
or
cmpsb
xchg
push
add
mov
lret
lret
loop
xchg
mov
mov
mov
fisttpll
into
movsb
sub
pop
cld
jae
hlt
iret
outsb
push
out
sub
inc
lea
xor
mov
cltd
enter
jmp
fsubl
mov
rorb
addr16
inc
cltd
push
pop
mov
xor
negl
adc
orl
inc
mov
movsb
cwtl
lods
into
fisubrl
jo
ss
xor
push
popf
and
je
cwtl
mov
jns
out
loope
outsb
xchg
addr16
movsl
jmp
cmp
scas
push
xor
mov
mov
cmp
fdivrs
adc
movsl
aad
inc
adc
xchg
sbb
cmp
push
cmp
jp
jle
aaa
sbb
scas
in
cmp
mov
inc
clc
jmp
pop
sbb
cmp
cmp
cld
stos
and
imul
scas
fwait
sub
loop
gs
mov
xlat
shll
dec
push
pushf
add
mov
mov
xchg
and
aam
sub
popf
mov
stos
pop
repz
test
sbbl
pop
mov
cmpsb
scas
xchg
fcmovne
ljmp
clc
popf
add
cmp
jo
cld
dec
mov
push
in
cltd
out
sub
cmp
sub
pop
cmp
cmpsl
cmp
xor
neg
push
xor
xchg
ss
adc
mov
and
out
mov
and
daa
jo
jg
enter
movsl
pop
pop
adc
loopne
jns
adc
pop
and
in
push
pop
scas
pop
clc
es
inc
mov
cwtl
mov
or
jecxz
sub
mov
das
mov
adc
mov
push
mov
mov
sub
push
sbb
mov
push
jl
dec
push
icebp
jbe
bound
fcompl
mov
cli
xchg
mov
fiadds
xor
daa
mov
aas
lods
mov
ret
and
pusha
mov
pop
fbstp
push
mov
dec
mov
pop
sub
je
or
lret
mov
xlat
sub
pop
push
jecxz
jno
xor
cltd
push
mov
sbbb
inc
and
push
clc
sbb
scas
mov
sbb
mov
out
cs
and
xor
daa
add
pop
jnp
sub
out
sub
sub
jbe
pushf
sub
sbbb
cs
mov
popf
idivb
aaa
movsl
data16
sahf
adc
jle
scas
jo
jae
imul
push
mov
mov
dec
pusha
inc
push
or
cmp
and
push
fsubrl
hlt
push
sti
mov
jp
jge
idivl
roll
rorb
call
cmc
cmp
push
int3
xor
dec
dec
aaa
xlat
push
push
sbb
sub
ret
sahf
cmc
or
dec
sub
xor
mov
jge
lock
add
push
call
test
aas
xchg
push
arpl
inc
lret
xor
mov
pop
ret
or
or
pusha
mov
sub
lods
mov
imul
mov
cltd
arpl
dec
xchg
out
mov
jne
fstpl
sub
repz
mov
lds
mov
xor
ss
mov
lock
ret
and
clc
inc
lcall
sub
xchg
add
out
stc
cmpsb
inc
enter
add
mov
pop
mov
fwait
sbb
push
push
pop
orl
dec
inc
adc
xchg
stos
repz
ja
mov
adc
mull
rcrb
pushf
jb
dec
aam
data16
cmpsl
es
mov
xchg
outsb
test
pop
mov
cli
daa
mov
mov
adc
clc
pusha
insl
clc
ret
mov
addr16
mov
mov
mov
adc
ljmp
test
sahf
xor
imul
mov
mov
movsl
out
mov
pop
push
jp
dec
data16
outsl
xor
enter
mov
mov
mov
aam
inc
dec
pop
clc
movsb
ljmp
or
xchg
and
icebp
scas
xor
mov
cmp
daa
xchg
mov
outsl
clc
in
inc
std
xor
lcall
addr16
adcb
dec
add
push
bound
fdivl
sub
mov
cmp
not
sub
cmp
lods
loop
or
addr16
aam
pop
int3
imulb
or
fdiv
dec
mov
sbb
pop
cmc
enter
scas
pop
clc
ljmp
mov
ret
add
inc
test
lret
xchg
push
dec
push
nop
push
pop
outsb
jns
addl
pop
lret
lods
fldt
clc
jg
mov
ror
das
pop
xlat
in
inc
sub
jl
in
mov
test
pop
xchg
stos
xchg
mov
shrl
pop
ss
outsl
dec
jg
sub
data16
jg
sbb
scas
adc
and
and
xorl
shlb
xchg
xor
xchg
dec
mov
stc
jecxz
mov
imul
enter
sbb
mov
xchg
aad
mov
pop
dec
xchg
push
sbb
out
clc
push
jp
dec
arpl
xchg
fwait
cmpsl
mov
mov
repnz
mov
mov
push
sub
fistl
dec
fsts
add
inc
rcrl
aas
std
into
jne
push
lahf
inc
gs
in
aam
rol
dec
es
stc
scas
dec
inc
in
xchg
sub
dec
or
mov
inc
jecxz
xor
xor
cmc
js
std
push
xor
mov
push
mov
aas
push
dec
mull
in
push
dec
cmpsl
lods
mov
nop
incb
mov
xor
push
lods
nop
fmuls
push
push
xor
rclb
fwait
xor
pop
leave
fnsave
dec
push
xlat
popl
adc
xchg
lods
jg
and
mov
push
and
jmp
ds
add
pop
notb
movsb
mov
jmp
repz
outsb
jnp
mov
pop
loopne
cltd
lret
mov
popf
sbb
int
pop
shll
into
bound
and
mov
inc
lea
dec
cmp
adc
mov
add
addr16
in
lods
xchg
mov
mov
pop
out
pop
hlt
mov
pop
scas
sub
xchg
sbb
xor
pop
pop
mov
stos
mov
mov
sub
outsb
stos
fstpl
jb,pn
test
push
mov
or
cmpl
xchg
fs
sub
sbb
jo
or
dec
aaa
mov
lret
call
or
ljmp
test
inc
or
jno
add
imul
xchg
push
pop
or
adc
hlt
add
mov
xchg
jns
call
xchg
insb
mov
xchg
pop
repz
sbb
pop
jo
xor
in
rep
push
inc
lods
and
pushf
mov
xchg
mov
mov
mov
out
test
mov
leave
negb
lea
mov
xor
mov
push
shlb
movsl
pop
lret
test
sahf
aad
div
push
lock
ja
sub
mov
mov
xlat
adc
cs
std
mov
sahf
pop
mov
inc
jns
mov
jns
xor
cmp
sbb
mov
add
dec
std
scas
lock
cmp
xchg
cmp
and
mov
xor
loop
fldenv
sub
jle
repz
loopne
pusha
fldcw
sub
cmc
xchg
inc
push
sbb
inc
dec
adc
aaa
push
scas
mov
mov
or
sbbb
in
dec
mov
test
mov
pusha
mov
jo
cmp
cltd
mov
lds
popa
pop
jmp
addr16
pusha
xor
in
add
xor
js
push
mov
jp
pop
test
lock
push
out
sub
mov
lahf
mov
xor
in
mov
xchg
adc
scas
and
dec
mov
fstpl
jne
fcomps
sbb
dec
movsl
push
and
cmc
mov
push
repz
les
es
xchg
je
push
stc
cwtl
lods
dec
clc
lcall
push
in
sahf
adc
mov
in
movsb
lahf
mov
call
ljmp
mov
lcall
push
adc
ja
movhps
dec
and
or
movsl
pusha
push
scas
int
push
pop
mov
jae
add
mov
je
iret
sub
pop
idiv
cmpsb
push
mov
das
mov
arpl
push
jbe
jae
push
sbb
sbb
push
dec
rcrb
pop
push
out
push
inc
clc
push
pop
out
cmp
dec
and
xchg
push
dec
shrl
insl
jne
insb
les
jmp
sub
pop
cld
aas
mov
xor
divl
xchg
pop
inc
pop
inc
hlt
int3
sbb
fildl
adc
mov
lret
adc
lock
ljmp
mov
sbb
ficoml
jg
es
insb
stos
jae
loop
jg
mov
stos
lods
cmp
mov
dec
and
pop
enter
jnp
dec
cld
test
mov
mov
lret
cmc
push
je
int3
clc
repz
lods
jo
sub
movsb
jnp
outsl
insb
mov
daa
lods
in
pop
sbb
sahf
mov
in
jns
push
adc
pop
es
cmp
cmc
leave
lods
cli
inc
inc
dec
mov
das
ret
pop
pop
xor
pop
xorl
outsb
sbb
adc
jo
pop
lahf
es
out
test
push
lods
dec
xlat
divl
or
dec
xchg
dec
lods
daa
loope
in
inc
cld
in
adc
pop
in
jl
popf
enter
add
xor
dec
cmp
subl
cmp
dec
mov
inc
jns
or
mov
ret
add
push
xor
push
les
push
das
xchg
dec
dec
cld
xchg
in
xor
sbb
fs
dec
lods
aaa
sbb
dec
movsb
jo
gs
divb
test
les
pusha
enter
fs
adc
gs
lock
pushf
fisubs
std
sub
mov
jb
mov
jb
imul
jmp
push
dec
sbb
dec
pop
mov
setb
arpl
inc
enter
nop
daa
addr16
pusha
fisttps
stc
lods
cs
lret
pusha
push
lods
nop
popf
scas
xchg
enter
fcoml
dec
jp
jae
jo
sub
and
cs
xchg
push
push
or
adc
cmp
popa
loop
ret
insb
push
and
inc
and
rolb
jge
rclb
je
sbb
faddl
xchg
incb
xor
inc
pop
xchg
sbb
mov
jl
nop
movsl
dec
inc
adc
mov
push
inc
mov
and
scas
pop
ljmp
cli
sahf
nop
dec
push
outsb
ret
sub
push
insb
lods
repnz
jp
sbb
sub
fiaddl
adc
jne
fstpl
ja
ljmp
in
stc
clc
or
pushf
pop
mov
aam
icebp
mov
cltd
shll
popf
into
cmpsl
mov
scas
ds
and
xchg
or
test
or
cmp
dec
lods
jmp
out
movl
je
xor
mov
cld
jle
enter
mov
imul
mov
sbb
adc
packuswb
outsb
push
xchg
add
adc
xor
insl
mov
stos
xor
mov
and
adc
xchg
sahf
je
out
mov
rol
inc
nop
cld
sub
push
xor
sub
and
xchg
scas
pushf
aam
xchg
shrb
aad
lods
pop
sarl
in
js
and
xlat
adc
into
pop
pop
mov
int
clc
sbb
dec
dec
jbe
adc
xlat
cmp
xor
mov
dec
sub
in
jne
ret
xchg
and
mov
xchg
fistpl
inc
out
lock
hlt
test
stos
orb
cwtl
dec
lahf
fisubrl
lret
jmp
jmp
mov
push
mov
pop
jb
jecxz
cmpsb
fiaddl
push
sub
and
jbe
mov
sbb
loopne
mov
xchg
or
xchg
lods
bound
pop
cld
loopne
mov
lods
outsl
stc
in
fs
mov
fimull
negb
dec
pop
fld
jmp
jb
ds
push
mov
arpl
or
jo
filds
enter
lds
outsl
push
sbb
push
mov
sub
cmc
add
jmp
mov
cmpsl
add
mov
pushl
int3
mov
push
sub
adcb
jmp
sub
and
jle
les
je
mov
pop
pop
mov
pop
into
xor
sahf
mov
mov
push
xchg
outsl
frstor
pop
pop
mov
ret
xor
les
add
mov
rolb
adc
andl
push
mov
or
fdivrp
cli
jb
int
mov
stos
sub
ret
and
shl
push
pop
xchg
fbld
fcmovnbe
dec
je
push
xor
movsb
xor
lea
das
or
xchg
pop
fcmove
push
pop
ss
pop
xchg
out
pop
xor
dec
push
or
mov
cli
fwait
jno
neg
out
daa
pop
xor
jmp
cmpsl
mov
mov
add
sbb
push
ljmp
pusha
pop
imul
ss
jle
xor
into
mov
jmp
adc
stos
or
rcrl
clc
pushf
or
jp
das
iret
aas
and
jle
js
leave
lods
inc
cmp
out
push
fs
jmp
add
cmpsl
mov
rcrl
daa
sti
shlb
jle
out
pop
aad
repz
repnz
xchg
ljmp
pop
pop
jge
pop
orl
jp
add
mov
mov
inc
push
adc
add
pop
out
or
movl
das
leave
fcoms
outsb
loop
dec
loope
mov
push
je
inc
test
or
insb
scas
mov
lods
hlt
imulb
xor
jnp
in
mov
je
adc
xlat
mov
out
add
and
ret
mov
popa
fnsave
push
inc
aaa
and
mov
outsb
push
jo
lret
mov
into
shll
std
or
xor
test
sbb
inc
dec
add
scas
mov
imul
or
cmp
adc
mov
fidivrs
mov
or
cmpsl
loope
pop
push
in
or
outsl
cmp
popf
enter
xlat
pusha
fwait
movsb
das
sbb
inc
fsubl
insb
sbb
pushl
sahf
mov
push
call
ja
jge
test
fld
sbb
outsb
push
add
mov
jnp
aam
data16
mov
bound
popf
mov
push
sbb
dec
clc
lret
jo
xor
addr16
jmp
ss
xchg
into
push
sbb
inc
sbb
pop
jp
mov
fistl
scas
loope
sahf
popf
jno
loopne
push
xor
imul
data16
jecxz
and
pushl
mov
push
jno
sbb
mov
daa
xchg
fsts
xor
pop
xor
into
sub
adc
shrl
xor
lahf
xor
and
mov
mov
push
mov
jo
les
es
cmp
divb
sub
add
in
data16
dec
mov
cwtl
push
les
jno
lock
into
lods
pop
fucomip
add
lahf
jp
inc
mov
lods
ss
jle
scas
ret
mov
xchg
push
aas
pushf
movsb
jns
gs
orb
inc
sbb
mov
repz
insl
mov
pushf
gs
mov
enter
and
pushf
push
into
daa
clc
push
and
mov
sub
dec
sub
jp
out
loopne
clc
jg
scas
mov
adc
shrb
mov
dec
mov
ja
sti
jae
xor
mov
les
int
stos
pop
fwait
mov
ss
inc
mov
xchg
outsl
mov
and
or
call
mov
or
jmp
push
mov
jno
test
xchg
shlb
xor
xor
mov
dec
jae
jmp
out
int3
sub
cmp
leave
xor
pop
pop
jmp
imul
or
mov
shlb
sbbl
lods
es
out
pop
push
in
jo
dec
test
push
sti
sti
repnz
sub
jmp
xchg
lods
mov
mov
mov
fs
arpl
dec
movsl
mov
xchg
scas
aam
loop
dec
xchg
add
jo
mov
mov
xchg
and
push
add
pop
out
add
jmp
sahf
mov
or
clc
cmp
dec
mov
add
adc
or
xchg
rclb
ret
enter
dec
dec
in
fisubrl
gs
pop
popf
rcl
test
mov
or
mov
push
xor
cmp
sub
and
dec
andb
lods
xor
mov
mov
int3
jg
pop
and
mov
jle
stc
subb
ss
fwait
push
push
push
in
cmp
xlat
jnp
pop
cmpsb
lods
push
xor
push
sub
lock
xchg
and
or
hlt
mov
movsb
pop
jo
nop
jno
mov
sbb
cmc
call
lea
xlat
xchg
pop
mov
inc
and
aas
push
mov
into
dec
iret
ret
xor
add
adc
in
mov
ret
ret
lcall
add
lds
mov
or
sub
mov
cmp
out
add
mov
insl
xchg
call
test
inc
repnz
aaa
mov
adc
inc
fs
jns
sti
sbb
sub
ds
mov
pop
sbb
mov
je
or
pop
aas
mov
mov
push
jo
add
lock
jl
jne
lods
dec
gs
jg
call
mov
push
in
mov
pop
iret
mov
mov
add
push
sub
xchg
jno
or
xor
sub
xchg
cmp
pop
in
mov
xor
arpl
mov
clc
sub
call
imul
mov
and
test
ja
sub
dec
nopl
adcb
jo
popf
xor
add
or
sbb
jl
mov
jle
pop
add
cmp
jb
dec
xlat
dec
dec
jno
int
test
mov
pop
not
pop
scas
xchg
jg
pop
cmp
cmpsl
inc
xor
mov
lret
xor
fldt
inc
mov
movsl
out
mov
in
into
or
mov
cmpsb
inc
push
aad
test
into
dec
cmp
mov
lods
adcb
mov
jbe
mov
xor
ds
lcall
mov
test
mov
repnz
cmp
movsb
rcrb
cmp
mov
scas
dec
cmpsl
mov
enter
or
insl
out
pop
pusha
lcall
nop
das
mov
sbb
inc
dec
movsl
jb
xor
add
pop
mov
adc
dec
shrl
aad
adc
std
jo
movl
cmp
add
aaa
adc
dec
jne
mov
scas
pop
pusha
daa
push
jbe
dec
dec
pop
and
mov
push
xor
push
lods
test
call
scas
cltd
scas
and
inc
lahf
fcmovu
fwait
mov
xor
add
xor
scas
loop
add
and
cltd
mov
xor
test
scas
push
aad
fsub
add
enter
sahf
add
in
scas
lahf
inc
cmp
outsl
mov
clc
dec
movsb
or
cmp
fwait
cmp
mov
int3
dec
pop
test
leave
pop
mov
mov
add
mov
repnz
mov
fidivl
mov
nop
xor
repnz
or
mov
das
jmp
icebp
sbb
xor
inc
push
push
ss
andl
cmpsl
push
aaa
mov
sbb
pop
movsl
enter
sarl
repz
test
xchg
pop
adc
sbb
js
enter
sub
popf
and
ret
lret
lods
negb
jo
or
movsl
movsl
and
js
dec
out
scas
add
sub
xchg
mov
xchg
std
sub
adc
nop
and
dec
bound
mov
mov
ja
and
dec
xor
inc
in
or
mov
dec
out
mov
cld
loop
int3
jns
add
sbb
mov
mov
stc
and
shll
mov
lea
dec
in
imul
fmull
ljmp
dec
icebp
ret
mov
pop
and
pop
clc
push
inc
or
out
imul
decl
mov
dec
dec
test
pop
and
sahf
inc
enter
cld
addr16
in
mov
add
sub
push
xor
imul
gs
out
popa
push
stc
stos
jmp
dec
ss
mov
addb
pop
inc
push
sbb
sbb
out
call
in
add
fcmove
pop
mov
push
scas
test
mov
jne
mov
sahf
repz
into
lods
hlt
imul
xchg
cmpsl
inc
fwait
mov
mov
imul
xchg
clc
add
and
pop
mov
cld
lret
jns
enter
scas
xchg
test
rol
pop
test
scas
dec
sbb
sbb
cld
pop
insb
movsb
icebp
insb
inc
pop
notl
nop
mov
push
fmul
jl
das
and
push
iret
hlt
adc
test
sbb
sub
ret
cltd
insl
shlb
daa
loop
or
call
sbb
add
cmp
test
jnp
push
push
jne
data16
pop
jg
pop
inc
ja
icebp
addb
enter
daa
add
pusha
pop
xor
xor
imul
mov
mov
xor
push
jae
clc
mov
test
mov
xor
jle
mov
insb
or
add
outsl
inc
add
adc
repz
addb
int3
popf
gs
jmp
add
ss
mov
add
pop
data16
jmp
scas
daa
jmp
loopne
mov
adc
popa
stc
dec
xor
xchg
push
mov
push
inc
sbb
mov
push
push
dec
icebp
adc
cwtl
dec
adc
clc
xor
nop
mov
push
test
mov
mov
popa
push
jo
movl
dec
inc
adc
lea
xchg
stos
iret
sub
jae
fsubrs
sbb
scas
lds
lds
dec
and
mov
out
daa
mov
movsb
or
in
fwait
outsl
int
sub
outsl
js
icebp
pop
ret
lds
dec
push
push
mov
in
push
in
pop
cmp
dec
fldenv
aam
insl
pushf
pop
or
cmp
pushf
mov
mov
lods
xorb
pop
out
jecxz
or
lds
sub
or
mov
sub
mov
dec
push
mov
cmp
pop
jmp
jno
fiadds
xor
adc
add
pop
stc
xchg
je
cmc
fidivs
dec
cs
sti
inc
std
jae
dec
sub
pusha
cmp
loopne
movsb
out
mov
push
pop
js
in
imul
loope
jp
fimuls
popa
ret
add
push
mov
or
fadd
push
add
divb
je
and
xchg
adc
sbb
insl
xor
mov
and
jecxz
bound
xor
push
xor
mov
adc
or
mov
inc
mov
mov
ror
orw
xor
sbb
mov
mov
jb
daa
push
mov
cmc
stos
dec
cltd
mov
mov
adc
sahf
mov
fidivs
int
sbb
decl
jg
mov
mov
das
rcrb
test
stc
ret
fldl
pop
xchg
mov
divl
rcll
dec
mov
push
imul
in
ds
divl
add
pop
mov
pusha
sbb
into
es
pop
mov
xchg
mov
icebp
cmp
loope
loopne
adc
mov
cld
cmc
inc
xor
js
xor
cmpsl
je
int
xor
cmpsl
scas
stos
scas
sbb
sbb
mov
pop
in
mov
ja
push
sbb
loopne
fdiv
mov
sub
pop
icebp
mov
jno
sbb
jmp
pop
call
aaa
pusha
insb
xchg
jmp
gs
pop
lods
loope
mov
push
int3
jl
sbb
pop
sub
std
adc
or
adc
movsl
arpl
jne
add
dec
in
mov
clc
std
pop
mov
inc
stc
pop
or
imul
adc
repz
xorb
cld
cmc
mov
push
jno
shll
add
shlb
adc
mov
xlat
lods
outsl
pop
enter
jg
pushf
outsl
jle
add
jecxz
out
dec
xlat
jae
inc
rcrl
sahf
cmp
mov
sub
outsl
xchg
cmc
stos
jecxz
addb
inc
cmp
pop
test
ds
cld
les
out
outsl
jae
pop
fistpl
or
push
inc
pop
pop
push
cmp
sarl
xor
test
push
or
xchg
out
popf
movsl
jge
jg
push
or
pop
jl
shll
pop
lock
in
adc
cmp
cli
call
pop
pop
js
je
aad
mov
call
mov
aaa
popf
mov
loop
scas
in
ror
test
test
dec
shrl
mov
mov
subb
or
movsb
mov
push
sub
mov
das
mov
popf
js
mov
inc
xorl
data16
stc
xor
sub
sub
enter
bound
scas
inc
xor
shlb
stos
dec
xor
xchg
adc
dec
mov
loope
nop
mov
dec
mov
cmp
dec
aam
pop
js
aad
fisttps
addr16
push
mov
push
insb
je
call
aaa
mov
cmpsl
xor
sub
addb
fisubs
mov
rorl
pop
rcll
inc
lock
push
in
ret
lss
cmp
xchg
adc
lods
or
shrl
or
mov
jno
adc
jl
pop
or
jge
sub
adc
scas
or
ret
and
insl
inc
sub
mov
mov
dec
sbbl
mov
mov
inc
add
mov
call
mov
nop
xor
jecxz
lcall
mov
xlat
in
add
cmp
std
mov
lock
add
je
inc
mov
scas
or
enter
adc
lahf
pop
mov
dec
gs
dec
sub
test
std
cmpb
or
fldl
mov
cmpsl
dec
aad
mov
pop
mov
jae
sub
mov
shll
inc
in
xchg
mov
scas
dec
xlat
sub
fidivs
lock
data16
mov
add
push
jle
ret
stos
sbb
xchg
aas
push
xor
into
and
jl
cmp
dec
adc
sarb
mov
in
xchg
fldenv
divl
xor
inc
cld
cmpsb
mov
jae
jmp
scas
sbb
cmp
mov
add
movsb
js
sub
mov
adc
mov
jno
popf
enter
mov
xor
xor
loopne
int
inc
jl
mov
cmp
emms
mov
or
pop
sbb
mov
inc
add
push
push
push
stos
sbb
mov
pop
sbb
repnz
jae
imul
lds
clc
test
outsb
aas
out
nop
imul
and
lds
lods
add
sub
loop
pushf
lcall
sub
adc
sahf
inc
outsb
notb
roll
outsb
pusha
lret
pop
jae
jmp
das
mov
daa
push
aad
xor
sbbb
push
sbb
or
int
imulb
add
jp
dec
add
xor
imul
ljmp
js
movsb
enter
pop
shrl
out
mov
xlat
dec
enter
shr
lret
lods
into
adc
arpl
cwtl
sbb
push
imul
adc
sub
add
jmp
cmp
imul
mov
nop
dec
je
out
pop
adc
xor
sbb
sbb
mov
shll
jbe
and
out
outsl
ret
mov
mov
test
dec
clc
push
dec
and
loop
mov
pop
outsb
pop
push
fnstsw
lods
dec
xor
jo
push
bound
int
dec
lods
mov
icebp
nop
popa
sbb
shrb
dec
jmp
push
arpl
mov
inc
xchg
jmp
repnz
xchg
pushf
daa
inc
lret
clc
dec
xor
push
stc
pushf
or
andl
mov
inc
push
loope
loop
jmp
mov
sub
flds
and
lret
test
call
and
int
sbb
mov
sahf
jge
idivb
hlt
xor
pop
mov
cmp
and
mov
popa
addl
mov
fildl
sahf
mov
xchg
aad
pop
scas
pushf
pop
jmp
imul
enter
lea
outsl
lds
pop
cmpsl
mov
add
ljmp
scas
dec
xor
jae
jne
les
popf
jl
or
dec
lret
sti
sahf
adc
mov
das
xor
out
hlt
jecxz
or
std
mov
xor
xor
push
mov
dec
pop
dec
arpl
add
rcll
std
mov
rol
fsubr
dec
push
movsl
push
add
adc
inc
lods
ret
or
cmp
cmp
pop
pusha
xchg
popf
jo
lahf
sub
cltd
push
xchg
repnz
push
fiadds
sub
shll
das
ret
xlat
dec
lahf
outsl
sbb
mov
movd
xchg
sub
or
adc
stos
mov
add
or
push
add
sub
inc
jmp
and
push
and
dec
repnz
out
pop
clc
rorb
loopne
stc
fs
lods
outsl
dec
sub
xorl
iret
adc
out
loope
push
push
cmpsl
sbb
pop
enter
repz
js
and
adc
jnp
lds
jle
xchg
push
sahf
and
mov
pop
mov
stc
cmpsb
movsb
pusha
push
dec
dec
enter
inc
cld
mov
imul
movl
push
bound
mov
xchg
fcmovnb
sbb
or
and
sub
sbb
scas
adc
add
xor
rolb
or
shlb
xchg
pop
test
mov
addr16
les
and
fs
xlat
adc
pop
add
add
fdivl
jecxz
call
xchg
jne
iret
xor
data16
pop
mov
imul
rcrb
mov
loop
insl
mov
push
stmxcsr
jg
ds
pusha
sahf
mov
cmp
mov
gs
jmp
enter
mov
pop
das
popa
out
int3
insb
popa
mov
jns
push
scas
data16
mov
mov
push
stos
outsl
cmp
fmull
cmpb
test
dec
mov
pop
dec
xchg
xchg
imul
xchg
mov
test
dec
xchg
pop
sbb
xchg
clc
jb
and
pop
dec
test
popf
push
leave
cmpsl
jle
push
mov
jl
test
cmc
pop
push
mov
adc
cmp
mov
nop
scas
popf
push
scas
push
outsb
and
mov
inc
scas
pop
dec
call
fwait
inc
es
out
nop
fistl
loop
sti
xchg
xchg
mov
test
xchg
or
dec
dec
gs
movl
pop
es
out
adc
out
sahf
daa
rcr
mov
dec
lds
adc
inc
sbb
in
mov
mov
mov
adc
xor
fsubrs
mov
orl
pop
sahf
mov
adc
jl
orl
dec
sub
inc
and
mov
adc
mov
jecxz
outsl
mov
or
ds
pop
fisttpl
jb
jo
nop
push
xchg
enter
pop
ss
cmp
hlt
loope
push
adc
enter
sti
cmp
enter
movl
and
xchg
pop
push
js
loope
movsl
clc
test
push
imul
inc
les
fs
jb
int3
hlt
dec
and
js
mov
clc
inc
mov
push
popa
das
dec
push
push
into
ret
push
jbe
xor
mov
aaa
mov
xchg
mov
mov
mov
pop
call
jge
add
nop
loope
adc
mov
jge
cmp
sbb
inc
cmp
rorb
fisubrl
stos
test
sub
jmp
repnz
adc
push
xchg
cld
test
sbb
pop
cmpsb
fsubrl
and
dec
sbb
enter
inc
stos
or
xor
inc
and
or
ret
jnp
stos
xchg
nop
in
cmp
aam
lock
enter
sbb
addb
xor
mov
push
mov
bound
xor
movsl
gs
push
or
push
aad
add
pop
lds
pop
jb
insl
nop
inc
repz
or
adc
addr16
pushf
shlb
jo
movl
cmp
mov
and
in
fistps
sti
mov
jg
sbb
out
push
inc
inc
dec
xor
test
mov
mov
cmpsb
fimuls
aad
je
add
jle
pop
imul
cmp
out
xor
mov
std
int
mov
xchg
adc
dec
nop
or
nop
mov
enter
daa
or
mov
stos
adc
xchg
push
xlat
cmp
pop
stos
adc
mov
lock
repz
jg
in
xchg
nop
pop
sar
push
inc
in
enter
xchg
push
adc
pop
xchg
enter
pop
adc
movl
nop
movb
inc
jno
xor
push
mov
push
jl
aam
pop
imull
lret
outsl
daa
mov
stc
js
or
dec
fistl
es
xor
pusha
rclb
dec
loopne
fadds
test
pop
insb
lods
xchg
and
fwait
lahf
data16
mov
mov
nop
inc
adc
pushf
ret
jb
xchg
xchg
adc
ljmp
test
ret
cwtl
lea
gs
fst
cmp
inc
arpl
enter
dec
scas
fistl
movsl
adc
push
imul
mov
pop
mov
jecxz
xchg
or
mov
inc
iret
mov
dec
bound
dec
push
xchg
mov
lods
subl
push
and
sub
loop
rolb
jb
cmp
lods
mov
sbb
or
gs
aad
adc
popa
lcall
sbb
into
cmc
push
fisttps
fbld
jae
mov
arpl
inc
mov
jmp
xchg
popf
sub
cs
push
sbb
dec
sbb
push
cmp
cmp
xchg
and
xchg
cmp
jae
scas
mov
xchg
call
push
jbe
outsb
lods
and
inc
sbb
fsts
jl
popa
in
or
dec
xchg
mov
jns
inc
jp
lcall
jge
jno
clc
adc
sbb
jg
daa
push
lods
dec
sbb
pop
lcall
insb
cmp
mov
mov
lahf
je
stos
fs
mov
sbb
add
xor
inc
negb
ret
jno
push
mov
cmp
stos
repnz
pop
mov
pop
xor
hlt
dec
sbb
into
or
mov
into
cld
in
mov
stos
mov
orl
mov
jg
fs
movsl
lret
mov
and
push
int3
in
push
inc
cs
mov
das
xor
adc
sbb
add
aaa
lock
cmp
mov
push
xor
and
mov
test
lahf
xchg
pop
mov
and
je
mov
dec
xor
aaa
xchg
loopne
jp
pop
jno
imul
or
mov
pop
out
inc
ret
lods
ss
mov
mov
xchg
out
jo
sub
mov
test
pop
cmp
mov
vpmulhw
mov
jge
outsl
nop
mov
fdivl
jp
fdivrl
push
push
and
loope
jbe
mov
outsl
sbb
enter
dec
loop
ss
mov
scas
cmp
inc
inc
aam
in
mov
in
cmpsb
jle
cmc
mov
mov
call
lods
push
mov
popa
rcrb
add
fbstp
jne
test
test
fdivrs
push
mov
dec
mov
jecxz
lahf
jge
fs
shlb
aad
pop
pushf
adc
jnp
imul
sub
push
adc
jmp
cmp
movsl
stos
cwtl
inc
sbb
jecxz
inc
jecxz
daa
xchg
and
or
cmpsb
sbb
push
push
les
imul
scas
dec
and
clc
in
mov
inc
adc
mov
gs
cld
ficompl
and
addr16
mov
xchg
and
jg
sub
movsl
xchg
into
inc
into
shrb
jecxz
jbe
aaa
adcb
pop
icebp
loopne
dec
cmc
xor
sub
lcall
addr16
cmp
xor
push
in
jg
push
lcall
or
ret
sbb
dec
test
lock
and
lahf
or
cwtl
sbbb
sub
mov
or
dec
enter
inc
loopne
and
mov
sub
and
sub
es
sti
pop
lahf
mov
and
jno
inc
stos
call
pop
xor
das
pop
je
adc
popl
scas
cmpsl
pusha
insb
mov
xchg
inc
push
inc
cmpsl
imul
int3
push
sbb
flds
fidivrs
pusha
dec
inc
mov
jns
enter
mov
xlat
sbb
clc
add
pop
sbb
icebp
mov
sub
lods
sbb
in
adc
sbb
pop
mov
lret
subb
xor
popf
popa
sbb
cmc
shrl
push
enter
sbb
adc
lea
rorl
push
out
add
enter
jg
sbb
add
scas
iret
dec
mov
ja
dec
cmpsl
fimuls
jg
push
fisubrs
pop
add
scas
out
mov
dec
pop
jg
sbbb
and
je
jge
xor
mov
bnd
pop
push
jo
movsl
bound
mov
jle
dec
test
dec
xchg
pop
enter
mov
xchg
ljmp
dec
sarl
decb
cli
mov
inc
mov
mov
rcrl
push
jo
add
outsl
mov
test
imul
daa
cmp
orl
in
xor
pusha
pop
outsl
sub
mov
mov
scas
sbb
mov
dec
and
sbbl
rcl
and
adc
enter
mov
sbb
in
cmp
outsl
movsl
sbb
adc
push
enter
in
dec
pop
rcrb
cwtl
out
mov
movsb
mov
fsts
out
data16
popf
sbb
lods
clc
mov
fs
in
cs
lods
cmpsb
xor
lret
sub
cmp
fistps
clc
pop
les
sbbb
push
subb
cmp
iret
jne
jecxz
mov
daa
daa
sbb
pop
ds
jne
bound
sahf
sub
inc
jmp
ret
mov
inc
testb
ljmp
imul
mov
or
fisubl
sub
jns
outsb
sbb
ljmp
mov
mov
test
popf
sub
pop
gs
ds
bound
and
jg
and
loopne
stos
xor
mov
lods
clc
xor
xor
cmpsl
xor
jp
aam
adc
aas
jecxz
rorl
sbbl
rcr
mov
adc
clc
out
js
fidivl
enter
movsl
sub
mov
shl
inc
xor
sbb
scas
inc
test
clc
sub
lock
shll
jne
ja
popw
add
fs
lods
inc
jp
mov
lock
mov
popf
or
scas
dec
aam
in
sbb
mov
mov
inc
aam
dec
rcrl
xlat
cwtl
ja
and
ja
pop
mov
js
xor
bnd
nop
inc
cltd
ficomps
jno
mov
mov
xor
mov
fldt
adc
push
out
sbb
movl
test
jno
push
lods
call
call
or
mov
cli
test
mov
enter
xor
test
inc
imul
pop
popa
mov
dec
mov
xchg
fsubr
and
lret
pop
lock
in
stos
jno
ret
mull
mov
leave
pop
cmp
lcall
gs
mov
sahf
dec
push
jl
out
cmp
in
inc
stos
push
push
lock
outsb
call
jg
loop
test
sbb
fxch
hlt
jl
pop
fstpt
mov
jo
call
mov
push
or
cltd
and
test
mov
dec
jo
jb
mov
sub
test
lahf
push
pop
in
test
xchg
pop
xchg
fisubrs
subb
xchg
imul
cwtl
push
sahf
push
das
push
sbb
sub
sarb
jge
push
mov
xchg
cwtl
loop
test
or
xor
and
dec
xchg
and
aaa
hlt
sahf
fdiv
sbb
lods
dec
lods
sbb
add
faddl
cmp
mov
xchg
jmp
xchg
mov
pushf
adc
sub
push
sbb
mov
and
insb
movsb
jo
mov
nop
scas
sbb
add
test
test
mov
push
lret
insb
fs
in
test
xor
sbb
pusha
repz
enter
shlb
mov
jle
cwtl
xchg
jnp
inc
push
scas
insb
lea
xchg
outsb
dec
aad
ret
ror
mov
jo
test
mov
xor
lods
ret
fwait
add
fidivrs
sbb
icebp
or
cwtl
gs
adc
mov
jo
pushf
fistpll
sub
out
push
insb
xchg
cmp
test
xor
sbb
cmpsb
orb
xchg
call
fistpll
sub
test
clc
scas
inc
cmpsl
mov
fsubrs
mov
mov
scas
fwait
call
andb
push
ret
pop
cwtl
sub
stos
arpl
insb
xchg
enter
mov
mov
ds
dec
jl
and
push
mov
mov
inc
aas
sahf
mov
rorb
lods
push
sbb
sbb
je
and
add
mov
js
mov
jne
sub
sarb
ja
test
mov
scas
lods
jecxz
rolb
test
das
mov
mov
pop
mov
lahf
mov
xchg
push
pop
fwait
mov
call
mov
lods
clc
add
inc
insb
push
pushf
mov
scas
inc
nop
loop
xorb
cli
mov
scas
addr16
push
mov
xchg
dec
test
aaa
jg
pop
fmul
scas
jo
pushf
and
mov
xor
cmpsb
test
mov
sbb
lods
mov
shrb
mov
adc
pushf
mov
js
out
mov
inc
fs
mov
mov
xchg
sub
popf
cwtl
push
push
mov
cmp
js
ljmp
clc
adc
mov
inc
mov
pusha
mov
dec
outsl
pop
mov
mov
lock
jmp
es
lock
dec
mov
and
and
js
stc
insb
mov
jo
dec
fidivs
adc
or
jmp
lods
js
cltd
rcrb
mov
mov
mov
insl
call
fsubrl
xor
sub
add
mov
inc
movsb
movsb
addr16
test
and
fisttpl
scas
sbb
sub
jo
and
push
jo
add
call
out
lahf
test
dec
mov
mov
mov
cmp
adc
lock
int
xor
mov
lcall
sub
enter
mov
ret
push
je
arpl
xor
cmp
mov
sub
adc
stc
repz
xchg
test
adc
jnp
cmp
andb
shrb
lahf
mov
fwait
aam
in
fsubrs
cmp
daa
mov
mov
pmaxub
sub
dec
movsl
push
outsb
dec
sub
push
mov
mov
int3
sahf
mov
sti
add
imul
cmp
call
rorb
mov
and
sub
mov
sahf
repz
sub
lahf
mov
popa
out
js
lods
icebp
inc
mov
ficomps
nop
dec
aas
adc
xchg
jno
push
jnp
sarb
ret
and
jl,pn
nop
sbb
jmp
inc
mov
js
in
mov
add
xor
push
add
mov
not
insb
xchg
test
sbb
mov
jle
bound
ret
mov
or
xchg
imul
jl
je
daa
and
mov
addr16
insb
cmpsl
or
jmp
mov
mov
cli
xor
cmp
lods
jb
add
adcb
xor
movsb
jo
pop
call
mov
cwtl
pop
stos
mov
imul
cltd
lock
data16
cmpb
shrb
jp
scas
mov
mov
lock
and
ds
std
cmp
or
xchg
mov
mov
adc
dec
xchg
push
mov
xor
cmp
mov
jo
iret
push
cs
mov
ja
fdivrs
mov
movsl
add
push
push
adc
jno
fdivrs
rorb
inc
or
mov
pushf
data16
fs
pushf
mov
jnp
mov
das
jl
mov
out
dec
je
mov
mov
jge
adc
and
mov
add
mov
xor
adc
mov
loopne
ja
clc
jl
and
ret
mov
iret
fwait
pushf
out
mov
in
scas
lock
xchg
test
shl
and
scas
push
loop
mov
scas
fdiv
pop
mov
and
je
mov
insb
cld
loopne
mov
pop
cmp
mov
mov
insb
xchg
pop
lods
cmp
jbe
out
mov
arpl
xor
shlb
in
jp
mov
xor
jo
and
push
xlat
test
mov
scas
xchg
clc
out
stos
cmpsl
lods
loope
lods
enter
mov
add
mov
test
lods
fxch
mov
ret
xor
cmova
mov
jb
mov
mov
ja
pop
in
add
push
loop
aas
jo
mov
cmp
mov
mov
lahf
mov
subb
fcomps
enter
lcall
sbb
in
lcall
mov
cmp
or
movsl
sub
sub
push
test
movsb
pop
lret
jo
mov
mov
or
dec
sub
mov
mov
rcll
mov
push
or
sbb
lock
test
mov
sahf
sarb
adc
mov
mov
mov
enter
sub
imul
push
jno
mov
sub
and
dec
shrb
ljmp
shr
pusha
int3
dec
cmp
sbb
mov
and
mov
push
xchg
pop
incb
dec
scas
cwtl
or
insb
push
xchg
sahf
addr16
outsb
mov
push
pop
mov
stos
mov
fdivrs
stos
xchg
test
add
xchg
sbb
mov
mov
nop
pop
jg
mov
xor
cli
pop
mov
stc
iret
scas
enter
xchg
mov
or
fs
push
int3
sbb
push
mov
or
jo
enter
dec
sbb
mov
mov
push
cmpsl
rorl
into
stos
lea
mov
int3
lods
mov
aas
mov
scas
pop
xchg
sbb
add
jecxz
pop
push
push
aaa
mov
movsb
mov
shll
inc
out
js
js
xchg
mov
in
mov
lods
xor
cmp
mov
lock
dec
enter
addr16
insb
xor
cltd
and
test
xlat
fidivs
clc
adc
cmp
sub
adc
push
enter
nop
repz
push
mov
jg
mov
into
sbb
push
mov
sub
dec
fdivrs
scas
mov
call
mov
cltd
daa
adcb
mov
int
js
pop
bound
dec
out
and
pop
inc
or
test
jbe
mov
in
mov
sarb
lret
fs
mov
lods
in
mov
mov
cmp
and
xchg
fwait
mov
dec
lock
mov
mov
loope
adc
je
inc
in
lahf
pop
lods
shl
mov
mov
mov
mov
sub
sbb
nop
clc
loop
mov
lock
push
ds
es
daa
adc
dec
sbb
das
cmp
mov
fcomps
sub
add
call
fisttpl
scas
clc
jge
mov
pcmpgtb
adc
rolb
xchg
mov
cmpb
jmp
or
sbb
and
loopne
xor
scas
adc
addb
xor
sub
jg
push
xchg
cwtl
js
jo
pusha
xlat
arpl
nop
int
mov
mov
fmul
ja
in
fisttpl
scas
and
call
mov
clc
dec
sarl
dec
xchg
nop
mov
add
mov
adc
sub
xchg
shll
xor
pop
mov
xlat
add
adc
mov
push
pop
add
sub
enter
adcl
xchg
or
dec
dec
shl
inc
mov
into
fcoml
pop
fwait
jp
pop
jle
push
push
sub
pop
repnz
sub
sti
insb
stc
stc
mov
xchg
and
aas
frstor
dec
push
ret
insb
daa
mov
nop
mov
xor
mov
sbb
pop
lods
fisttpl
dec
imul
hlt
clc
lods
push
cmp
adc
nop
adc
push
pop
filds
push
addl
mov
xchg
pop
fidivrs
cmpsl
les
cmp
sbb
adc
mov
mov
ret
or
icebp
stos
cmp
fiaddl
xchg
adc
xchg
push
jb
push
mov
mov
pop
lcall
and
jbe
out
je
dec
repz
mov
subb
xor
mov
and
push
jne
push
xor
movsb
mov
ret
rcrb
xchg
push
and
clc
popf
pop
xchg
jns
dec
mov
jecxz
push
xchg
adc
repnz
sub
lea
dec
cmp
mov
and
and
test
test
mov
fsubl
rcll
xor
pop
xor
pushf
sub
mov
mov
pop
pop
mov
out
shll
je
push
mov
test
es
out
aaa
push
mov
push
mov
mov
loope
dec
inc
popf
mul
call
into
enter
mov
lcall
xchg
pop
iret
int
jne
fs
fstps
sbb
mov
sbb
movsl
aad
dec
scas
xchg
dec
ja
mov
fnstsw
sub
adc
das
mov
rclb
push
into
push
je
cli
adc
mov
push
mov
cmpsl
outsl
lods
mov
mov
in
dec
xor
jno
insb
and
mov
leave
sbb
xor
ds
test
jecxz
fdivl
xchg
mov
or
int
loopne
xor
mov
icebp
mov
in
stc
jo
bound
pop
mov
ret
out
clc
mov
mov
cmpsb
aas
enter
stc
adc
into
das
mov
es
mov
fistpl
adc
mov
frstor
or
fdivl
push
jnp
fs
roll
scas
hlt
mov
in
jo
cmp
xorl
negb
clc
mov
scas
ja
adc
mov
in
cmp
cmp
mov
pop
pop
push
sbb
mov
test
test
cwtl
pop
xchg
mov
out
mov
pop
fcompp
push
loopne
push
dec
xchg
lods
mov
aam
cmpsb
and
mov
test
pop
sbb
in
scas
leave
pop
ds
lahf
fistpll
pop
scas
cmpsl
jnp
js
subl
mov
shll
setge
test
incl
adc
inc
ret
fcomps
lea
inc
lods
xlat
jp
out
jmp
in
xor
popa
cld
mov
cmpsb
inc
fistl
mov
and
arpl
mov
push
jmp
jns
lds
popa
and
pusha
cltd
mov
mov
shlb
mov
mov
jb
sub
push
push
and
test
outsl
pop
jne
jo
push
xchg
fcomip
xchg
clc
xor
ret
sti
fiadds
pop
xor
xlat
inc
push
push
adc
adc
cmc
pop
push
mov
into
lds
jle
cmp
out
addr16
add
add
arpl
push
repz
iret
mov
jge
daa
ljmp
sub
jl
les
mov
mov
test
ljmp
repz
roll
sahf
inc
push
mov
pop
cmp
mov
out
cmp
jo,pn
xchg
sahf
cmp
pop
sub
pop
cwtl
insb
adc
cs
cwtl
enter
xor
cltd
mov
lock
outsl
cli
cmp
xchg
mov
pop
cmc
push
test
cmp
cmp
fsubrl
mov
xchg
add
inc
imul
lahf
adc
mov
mov
aaa
cli
xchg
adc
dec
cmp
jo
push
xchg
mov
or
test
pop
adc
mov
insl
xor
mov
repz
imul
cltd
out
lret
mov
xchg
scas
sbb
sub
dec
xchg
shrb
testb
rolb
push
jge
xor
sub
les
je
mov
xlat
sti
or
ja
cmp
or
xchg
push
xchg
adc
cld
mov
xor
arpl
scas
xor
scas
jb
das
les
loop
enter
and
pop
test
stc
sarl
lahf
adc
xchg
sbb
pop
pop
nop
inc
repz
xchg
iret
and
std
fisubs
out
pop
in
data16
sub
insb
aad
xor
into
push
xor
out
xor
repz
or
push
insb
mov
inc
fs
jp
xchg
movsb
pop
cmc
fldcw
outsl
movsl
nop
pop
popa
jb
mov
lret
inc
mov
fbstp
pop
xlat
add
dec
push
sti
out
cmp
or
mov
inc
cwtl
clc
int
insl
push
adc
inc
adc
mov
fidivrs
addr16
pop
dec
or
mov
mov
int
fwait
sti
jg
adc
or
shlw
lods
or
mov
fdivl
aaa
clc
mov
in
lret
popf
aas
mov
imull
and
icebp
mov
xchg
jne
or
insb
pushf
dec
cmpsl
js
inc
cmp
fs
sbb
mov
pusha
cltd
sbb
test
test
push
jmp
test
movsl
cmp
push
dec
movsb
fdivl
in
push
inc
jecxz
mov
mov
cld
rorb
mov
push
push
ret
xor
sbb
rorb
jg,pn
push
jns
nop
flds
dec
cmc
pop
cmp
lock
movsl
enter
mov
xor
mov
insl
xor
lods
outsb
icebp
cmpsl
movsb
push
or
fnstcw
gs
pop
push
dec
mov
es
mov
jmp
ds
push
pop
xor
out
xchg
scas
push
xor
negb
or
and
rol
cmpsb
clc
js
cmp
xor
idiv
adc
in
pop
outsb
inc
and
enter
or
hlt
add
sbb
xlat
adc
cltd
pusha
push
mov
imul
push
mov
or
hlt
int
aaa
test
sbbl
xchg
popa
in
aaa
sub
push
jae
jl
popf
add
pushw
mov
sbb
enter
cmp
out
jnp
dec
and
icebp
xchg
shrb
xor
mov
repnz
push
jge
cli
out
cmp
xor
ret
stc
pop
icebp
scas
fcmovnb
std
jg
push
mov
sbb
scas
ret
sbb
addr16
sbb
ficompl
out
xchg
adc
add
mov
sub
add
lods
push
outsl
dec
sbb
sub
mov
sbb
enter
sub
cmp
pop
outsl
pop
push
nop
lods
cmp
fwait
inc
mov
cld
and
sub
cmpsb
stos
lds
pop
lcall
adc
je
aas
rep
arpl
ljmp
sbb
shll
or
jecxz
mov
pushf
cmpsb
test
shrb
sbb
fadds
xchg
and
pop
xchg
jae
dec
jnp
das
lcall
pop
out
sbb
rol
mov
mov
sbb
push
push
repz
xchg
in
add
call
in
loop
fbstp
mov
cmp
pop
jae
insb
lahf
xchg
subl
mov
ror
cmp
aam
jmp
bound
cmpsb
out
adc
add
lock
add
xchg
mov
push
jl
push
in
mov
jns
cwtl
sbb
adc
xchg
scas
cli
and
pop
in
mov
pop
iret
cmp
int3
pop
jno
inc
and
sbb
shlb
bound
adc
cmp
or
ljmp
and
and
jne
cmpsl
pusha
out
inc
xor
pop
mov
repz
or
stos
lahf
add
inc
add
mov
push
mov
add
mov
fimull
rorb
xor
xchg
dec
jg
or
lahf
xchg
jge
cmp
fcomps
mov
ss
dec
jno
jb
mov
pop
lahf
push
dec
loop
stos
pushf
sub
adc
mov
jns
add
lock
sub
mov
and
daa
in
sbb
jbe
sub
into
mov
xchg
sahf
icebp
cmpsb
push
divb
call
xor
adc
or
push
movsl
xchg
fsubl
into
cmpsb
sbb
es
mov
orb
pop
movl
xor
ficoml
scas
push
clc
bound
enter
xchg
xchg
popl
outsl
cmpsl
xor
aam
insb
scas
ss
fimuls
mov
pop
mov
jne
dec
pop
lcall
es
jl
or
dec
jo
xchg
std
adc
jno
xor
cmp
xor
xor
dec
push
push
in
lods
scas
incl
mov
bnd
dec
push
test
xlat
sbb
leave
push
adc
daa
lods
mov
push
add
arpl
xchg
xchg
adc
sbb
adc
enter
ret
fimuls
adc
inc
mov
push
xor
ljmp
in
addb
scas
mov
pushf
pop
jo
adc
test
fdivl
xchg
xchg
mov
dec
jae
hlt
and
shll
and
mov
mov
lods
mov
in
xor
dec
cmp
sub
push
and
in
xchg
mov
or
cmc
dec
jp
lods
dec
add
sub
sub
xor
xchg
cs
jne
cmpsl
shr
jp
mov
and
pop
jbe
mov
outsb
cmp
scas
popf
cmove
mov
int
mov
lcall
push
enter
mov
mov
dec
ja
test
xlat
add
jns
mov
scas
adc
cmpsb
sarb
mov
mov
enter
movsb
or
xor
pop
movsl
fsubl
push
mov
test
xchg
xchg
stos
mov
xlat
xor
mov
sar
mov
call
nop
lock
dec
stos
lods
cmp
push
jb
or
inc
clc
scas
inc
adc
jo
lods
adc
mov
inc
and
jno
mov
sub
pushf
sar
or
fisubrs
inc
dec
cs
les
sub
xor
jmp
mov
test
test
mov
ss
mov
pop
pop
adc
mov
rorb
clc
sbb
out
cmp
mov
cmp
lods
mov
daa
add
pop
gs
dec
iret
mov
mov
shll
cmp
daa
jne
jb
clc
or
fs
add
loop
xlat
in
mov
rolb
mov
aam
jecxz
mov
mov
mov
push
out
clc
pusha
rcr
or
popa
std
inc
int
xor
mov
mov
xor
jo
cmpsb
out
fcoms
ret
sarb
nop
dec
inc
movsb
mov
mov
xor
nop
mov
mov
lock
movsl
xchg
push
das
lods
mov
lock
mov
sbb
jae
pop
or
lcall
pop
mov
xor
inc
or
aam
imul
movsb
mov
fs
pop
pop
xor
sarl
mov
mov
push
test
icebp
scas
dec
jg
mov
mov
and
adc
push
sti
clc
sbbl
inc
sbb
sbbb
js
gs
mov
enter
mov
in
movsl
fwait
xchg
pop
and
sbb
fisubrl
mov
sbb
jle
push
jge
pop
nop
xchg
pop
sbbl
mov
sub
inc
xchg
sbb
aas
lods
cmpsl
mov
aam
shll
lahf
add
ja
out
mov
lahf
jp
into
mov
cmp
or
test
mov
rcl
sti
pushf
mov
mov
insl
stos
ret
lods
int3
aas
mov
out
push
test
push
test
xorb
loopne
mov
call
sub
adc
dec
xor
shrb
popf
mov
clc
scas
ficoms
jnp
jns
sahf
jge
mov
fisttps
add
out
aas
dec
out
jno
jne
xchg
lods
sub
xor
mov
divb
mov
mov
mov
mov
adc
or
out
popa
pop
jnp
fwait
ss
sbb
or
or
jecxz
dec
cmpb
js
mov
sbb
dec
mov
shrb
push
and
mov
shlb
push
xchg
xchg
je
in
sub
cmp
inc
scas
into
ds
ljmp
push
add
fldenv
xor
mov
push
inc
jle,pn
push
jmp
fs
pop
dec
mov
imul
mov
ja
xlat
insb
fadds
cltd
mov
push
xor
out
inc
dec
mov
push
sub
insl
fldt
shlb
mov
sbb
dec
mov
loopne
pop
xchg
or
test
pop
cmp
pushf
cmp
js
repnz
xchg
repz
cmp
mov
jae
and
adc
adc
out
dec
jns
mov
inc
adc
mov
rcl
scas
and
pop
jmp
inc
fwait
pop
or
sub
mov
fs
xor
gs
test
push
mov
dec
push
inc
lods
mov
mov
imul
arpl
lods
out
fs
lods
inc
jae
stos
dec
adc
push
orb
iret
cs
push
pushfw
xchg
gs
rcrb
nop
call
popf
clc
and
xorb
scas
in
insb
movsl
ja
pop
cmp
dec
clc
sti
xor
sbb
pop
xchg
idivb
popa
cmp
loope
in
fistpll
xchg
inc
push
push
adc
mov
inc
add
sbb
arpl
in
mov
xor
inc
aas
ja
or
xor
repnz
dec
cmp
fisttpl
leave
inc
das
push
pop
es
pop
adc
sbb
faddl
and
mov
cmpsl
cltd
sub
dec
mov
sbb
enter
inc
les
adc
hlt
fwait
enter
movsl
into
mov
dec
lcall
or
lcall
out
pop
dec
cmp
sbb
hlt
lods
push
push
xlat
mov
mov
lds
cmp
rcrb
add
sbb
enter
pop
pop
in
sti
dec
inc
push
lret
and
push
es
sbb
mov
mov
cmp
imul
fsubrp
mov
decl
sbb
dec
hlt
dec
xchg
mov
mov
mov
and
cmpsb
sahf
cmp
rolb
mov
inc
les
hlt
mov
or
pop
lock
test
xchg
add
test
in
dec
outsb
cmc
enter
sub
pop
xchg
and
mov
pop
mov
mov
push
out
pop
out
scas
sub
scas
or
mov
je
cmp
pop
data16
dec
shlb
mov
adc
dec
pop
test
mov
pop
cwtl
or
push
movsb
lods
lock
mov
xor
imul
in
lea
sahf
jae
jo
jmp
and
lods
js
or
divl
fwait
mov
mov
aad
negb
adc
mov
aaa
mov
cmp
scas
xor
leave
test
int3
push
or
jbe
mov
lods
add
icebp
sbb
cmp
xchg
jo
lret
loop
pushf
je
xchg
push
js
xlat
scas
div
add
mov
std
lds
fdivl
xor
adc
int3
xchg
mov
xchg
popa
fidivs
stc
or
popf
lods
cmpsb
dec
aas
push
arpl
jae
pushf
mov
mov
cmp
mov
and
or
sub
add
cmpsb
and
mov
test
mov
sub
inc
mov
clc
mov
push
adc
fimull
lock
inc
or
add
arpl
loopne
lret
lods
mov
je
mov
scas
lods
and
cmp
inc
mov
cwtl
push
mov
std
sbb
fs
adc
mov
mov
mov
lods
vmovups
add
xchg
ss
rol
lock
jg
push
mov
test
loopne
xchg
sub
imul
mov
ja
inc
jg
incl
lods
dec
jno
xchg
or
loope
test
fucomp
mov
push
ret
push
pusha
dec
popa
mov
mov
or
addr16
pop
ret
jl
push
scas
jo
and
mov
inc
pop
std
mov
dec
pop
insl
nop
bound
cli
test
into
cmp
push
movsb
enter
pushf
push
adc
mov
pop
fxch
jne
loopne
cmp
sbb
lret
push
or
jnp
movsl
and
dec
sub
aam
push
loop
ja
lods
pop
ljmp
add
scas
adc
lret
jle
out
xchg
push
scas
dec
sti
ljmp
ds
pusha
adc
dec
xchg
sbb
inc
xlat
mov
sub
shll
jg
mov
sbb
cltd
arpl
mov
add
xchg
test
scas
or
jae
iret
xor
enter
popa
rol
adc
add
cli
outsl
aaa
add
mov
js
fcompl
jae
cmp
adc
dec
pop
je
or
pop
inc
push
inc
jb,pn
leave
mov
xor
in
dec
jg
outsl
push
ret
in
mov
daa
test
lods
fadds
mov
cmpsl
mov
xchg
sub
jbe
outsb
mov
mov
xor
popf
ja
loop
mov
xchg
push
xor
jb
mov
mov
pop
lret
movsb
ja
push
dec
mov
add
ret
lds
leave
loop
push
mov
aad
xchg
mov
lds
mov
mov
movsb
aam
cmp
icebp
test
push
and
stos
into
mov
rclb
xchg
mov
jb
test
mov
insl
mov
sub
mov
fnsave
mov
dec
int3
into
sub
out
push
movsl
inc
xchg
nop
mov
cmc
mov
dec
push
jns
repz
inc
push
loop
xchg
jo
ds
cmp
movsb
out
mov
stc
mov
adc
push
cmc
push
fnstenv
out
cmp
mov
push
dec
loop
mov
cmpsl
dec
shl
xchg
mov
aaa
mov
adc
jns
aas
in
mov
pop
push
out
loopne
mov
lods
jmp
mov
mov
mov
jb
xor
es
mov
addl
mov
lret
fs
xchg
add
xchg
cmp
fistpl
sti
jne
movsl
or
es
push
pop
rorl
popf
dec
outsl
insb
lods
fbstp
cltd
cmpsl
pushl
mov
fistpl
mov
and
cmp
push
xchg
subl
in
mov
les
mov
fisubl
xlat
lods
xchg
repnz
push
mov
cltd
daa
adc
in
mov
add
scas
dec
mov
mov
rcr
push
cmp
jmp
popa
rcl
sarb
cmp
movsb
adc
xchg
pop
mov
adc
and
test
dec
pop
std
mov
push
sarb
outsl
incl
xchg
pop
xchg
cmp
es
dec
fbstp
loopne
adc
mov
popf
stc
cmpsl
inc
xor
mov
mov
cmp
stc
mov
out
outsb
out
push
sub
fisttpll
lock
fidivl
mov
leave
push
mov
outsb
and
sarb
int3
mov
jo
add
sbb
push
xor
mov
cmpsb
mov
cwtl
scas
push
add
lock
mov
ret
cmp
xor
into
xor
inc
pusha
xor
mov
pop
out
outsl
dec
mov
cltd
inc
mov
lock
loope
mov
loopne
lcall
push
mov
pop
cmp
mov
out
xchg
or
jle
icebp
pop
dec
inc
xlat
pop
xchg
mov
subl
mov
mov
push
int
push
je
add
aaa
push
lods
ret
push
pop
xor
ds
xchg
xchg
pop
mov
xorl
stc
add
mov
inc
xchg
sbb
pop
pop
pxor
jmp
mov
cwtl
dec
sbb
dec
jno
into
mov
sub
lret
mov
leave
fwait
shlb
mov
insl
mov
mov
jb
cmp
movsl
adc
mov
inc
fsubrl
cmpsb
inc
sbb
mov
xchg
out
pop
test
mov
int
mov
dec
xchg
xor
mov
insl
rol
pushf
bound
mov
scas
imul
cmpsl
in
test
shl
popa
xorb
push
add
mov
push
call
fdivrp
add
das
imul
addb
icebp
xor
lds
lret
inc
pop
mov
subl
mov
loopne
test
cwtl
mov
mov
pop
es
push
xorl
ljmp
movsl
or
mov
mov
enter
adc
xchg
into
mov
mov
xor
insl
pop
push
mov
sbb
scas
pop
shll
cmp
clc
mov
ljmp
ds
je
cmp
jl
lock
push
bound
outsb
pop
mov
hlt
test
sub
or
ljmp
sbbb
neg
lcall
ret
test
add
push
pop
inc
jge
rolb
pop
inc
push
mov
test
add
pop
inc
push
inc
push
ret
push
add
xor
push
inc
imul
outsb
mov
in
movb
mov
mov
imul
pop
pop
out
ds
mov
lock
ja
add
popf
dec
jne
dec
push
je
xor
negb
test
and
imul
shl
mov
and
aaa
fldenv
adc
pop
aaa
mov
push
adc
xor
daa
xchg
mov
and
or
fwait
not
pop
shrb
sti
add
mov
mov
cld
push
pop
lds
or
jg
test
je
mov
xor
in
rolb
mov
adc
fcmovnb
cmpsb
mov
scas
nop
rcrl
aaa
push
das
pushl
mov
push
xor
test
mov
cmpsb
mov
mov
mov
dec
inc
call
fidivl
gs
pop
sarl
dec
sbb
cmpsl
test
or
loopne
fprem1
test
arpl
mov
dec
jmp
cmpl
and
dec
es
scas
cli
jbe
hlt
aas
shrb
lret
sar
xchg
adc
aas
ss
je,pn
lret
mov
add
cmpsb
clc
xchg
lahf
jo
pop
sbb
rcr
pop
jmp
sbbl
jae
sti
into
aas
mov
xor
mov
test
pop
cmp
shlb
lods
das
das
icebp
cmc
rcll
cmp
mov
mov
mov
jne
int
enter
mov
stos
lahf
movsl
push
sub
popa
clc
daa
lock
clc
fidivs
adc
enter
testl
mov
mov
add
push
cwtl
cli
in
leave
enter
mov
xor
repz
cmpsb
adc
jg
adc
lock
sub
pop
lock
mov
rorl
adc
dec
mov
push
fstps
pop
insb
pop
add
jne
daa
push
and
or
scas
sbb
mov
pop
popf
enter
fwait
jl
imulb
std
mulb
sub
cltd
mov
xchg
fisubl
nop
shrb
cmp
lahf
inc
sub
mov
pushf
shrl
arpl
dec
outsb
pop
xor
stc
ret
xor
call
or
pop
pushf
adc
mov
aaa
mov
xchg
mov
clc
mov
jnp
mov
xor
jmp
ljmp
dec
ror
cld
sbb
aas
iret
mov
test
cmpsl
and
cmp
sti
outsl
sbb
jns
mov
mov
clc
cltd
in
fcmovbe
iret
test
mov
push
xor
dec
mov
ss
jne
dec
jle
ss
jbe
mov
mov
fwait
pop
dec
cmpsb
nop
je
cltd
insb
or
add
clc
xchg
mov
stos
and
fisubl
mov
xor
push
mov
jno
sbb
enter
mull
push
repz
mov
rcrl
cmp
push
mov
arpl
mov
fcoml
sbb
test
mov
lcall
push
add
xor
dec
lock
and
cmpsb
fistpll
dec
fidivrs
outsl
adc
jb
les
outsb
lds
rcll
gs
ret
sub
cmp
fadds
sub
pop
movsb
push
jmp
pop
stos
lret
imul
std
in
mov
clc
orl
mov
movsl
xor
push
sti
mov
jmp
out
fwait
mov
jae
jnp
pop
push
push
es
das
and
jns
pop
pop
inc
cmp
out
xchg
aam
in
sub
add
sbb
add
clc
std
sbb
inc
test
pop
scas
dec
test
int
cmpb
es
ljmp
cmp
mov
mov
dec
inc
pop
adc
sub
mov
cmp
sub
mov
repz
dec
pushf
call
pop
inc
ja
add
xchg
pinsrw
outsl
push
divb
pop
add
xor
jg
data16
xchg
xchg
into
scas
sbb
das
xchg
scas
adc
iret
fstpt
aas
stos
mov
popa
mov
imul
sbb
or
xchg
dec
adc
dec
fbld
dec
sbb
lock
rol
sbb
adcb
mov
xchg
insb
dec
jbe
sahf
push
and
addb
rcll
ret
adc
push
mov
pop
es
fs
pusha
push
nop
imul
in
call
and
cmpsb
xchg
sti
add
pop
popl
sarl
push
ret
mov
cmp
bound
fildll
mov
add
xchg
pop
pop
popa
hlt
or
je
out
scas
sbb
cmpsl
mov
xchg
mov
jg
add
sbb
lods
sbb
scas
mov
aas
lock
in
testl
stos
push
scas
inc
cmp
push
lea
lcall
pop
pop
mov
pop
or
adc
or
sub
mov
idivl
call
outsb
cld
mov
daa
mov
ja
pop
xchg
mov
mov
in
lods
in
inc
push
stc
ret
pop
movsl
enter
aad
mov
cmpsl
aas
imul
shr
push
mov
imul
jmp
push
daa
cmc
pusha
stos
xchg
adc
sub
loope
sbb
vpmadcswd
lds
pop
push
bound
lock
in
mov
push
movsl
mov
push
push
cmp
lret
dec
repz
inc
dec
into
in
xor
dec
into
adc
les
mov
add
ljmp
inc
idivb
cmpsl
mov
sub
movsb
push
push
filds
rcl
push
ds
xchg
popa
adc
mov
sub
xor
xchg
mov
mov
xor
mov
push
inc
movsb
clc
icebp
add
mov
pop
pop
arpl
pop
or
push
cmp
push
ret
lods
sub
sbb
jae
fsub
jmp
popa
mov
pop
fwait
jo
iret
dec
mov
push
icebp
pextrw
sub
cmp
clc
js
push
mov
add
je
xor
iret
jbe
mov
and
enter
pop
insl
sbb
mov
mov
push
xchg
inc
sbb
std
inc
imulb
loope
int3
xchg
mov
popf
scas
lods
mov
jnp
lahf
nop
pop
test
sahf
lock
and
and
dec
scas
mov
fcmovb
mov
into
ret
mov
jle
mov
fimuls
icebp
sub
sub
dec
pushf
icebp
scas
jecxz
inc
or
push
fisttpll
nop
test
dec
test
pop
or
add
in
sub
mov
cmp
popa
fwait
jge
dec
lock
or
daa
test
sbb
mov
mov
imul
xor
inc
mov
dec
mov
cmpsl
imul
xchg
stos
enter
xor
dec
xchg
ret
jmp
subl
fsubl
cltd
inc
test
fcompl
mov
pop
ljmp
arpl
scas
jae
mov
in
lds
mov
and
das
js
mov
add
mov
inc
aas
jge
clc
jp
shr
sbb
or
xor
scas
fmuls
xor
cs
mov
xorl
cmc
push
lret
sbb
push
mov
inc
dec
nop
das
fidivrl
popa
sub
movsl
imul
pop
pop
scas
lods
clc
lcall
xchg
inc
push
adc
mov
mov
lahf
pop
test
push
add
dec
xor
sti
push
xorl
xchg
sub
push
cltd
sti
jp
test
repz
ljmp
lcall
std
mov
das
aam
outsl
orb
pop
out
adc
dec
add
daa
hlt
mov
ljmp
mov
push
push
pushf
add
daa
mov
pop
xor
stos
add
sbb
sbb
scas
push
sbb
cmpsl
mov
loope
cltd
popf
push
enter
xor
xchg
iret
arpl
pop
adc
outsb
cs
pop
int3
sub
mov
cmp
inc
roll
out
sbb
out
dec
cmp
push
dec
insb
das
adc
or
les
cmp
clc
fldcw
push
xchg
or
js
movl
mov
sbb
push
push
insl
ss
ret
dec
sub
and
jg
and
enter
or
hlt
stos
sbb
outsl
shlb
ja
gs
push
jmp
aas
dec
nop
add
out
shufps
inc
mov
orps
add
jnp
and
out
ss
frstor
sub
mov
repz
mov
push
dec
dec
and
cmp
pop
xor
add
push
push
push
shrb
outsl
push
loop
gs
push
push
lret
mov
sub
inc
and
xchg
jmp
push
xor
xchg
lods
cli
mov
addr16
mov
adc
jnp
dec
cld
or
xor
dec
jo
jo
mov
test
dec
jae
pop
movhps
push
and
pop
xor
mov
mov
mov
gs
jmp
ror
xchg
mulb
rorl
lods
pop
inc
in
lock
and
cwtl
negl
movhlps
shlb
clc
fwait
test
insl
push
jo
sbb
sbb
mov
lcall
mov
jo
icebp
add
and
pop
inc
loopw
sbb
mov
sub
mov
dec
push
inc
sbb
sub
dec
push
push
sub
rcr
cmp
loopne
adc
lods
lds
test
js
dec
mov
add
in
push
jne
inc
mov
add
xor
dec
fidivl
in
mov
aam
fildl
add
rcl
cs
int
dec
movsb
scas
or
loopne
mov
fsubrl
icebp
cmpsb
testb
andl
scas
mov
push
fstp
fisubrs
lods
fcompl
or
xor
sub
iret
clc
mov
lcall
mov
ficoml
leave
push
jne
ja
sbb
rorl
mov
or
adc
test
cmp
clc
adc
inc
cmp
mov
cwtl
ss
and
inc
lock
xchg
adc
dec
push
movsb
lods
test
xchg
or
or
xor
hlt
lds
sbbl
mov
xorl
dec
test
out
insb
fs
test
outsb
sub
lock
push
pop
outsb
pop
and
addr16
out
shl
inc
loope
pusha
mov
pop
insl
jo
into
pop
and
repnz
lods
icebp
fildll
xchg
mov
ds
jg
insl
movsl
fnstenv
bound
pop
stc
or
cmpsb
inc
xchg
xor
enter
aam
dec
test
dec
dec
test
cmp
sub
movsb
rcrl
test
jne
cmp
dec
xor
dec
orb
dec
dec
test
sbb
aam
stos
pop
push
mov
mov
insb
xor
jl
ja
in
aas
mov
lock
mov
mov
mov
cmp
stc
loope
mov
andb
pusha
les
pop
or
xor
sub
cmpb
repnz
outsl
mov
xor
inc
mov
clc
dec
pusha
cltd
sbb
ds
push
add
pop
clc
jg
repnz
in
test
lret
lldt
pushf
and
iret
mov
fiadds
aad
sub
mov
add
mov
mov
hlt
inc
xchg
loope
sbb
mov
mov
cmpb
jbe
adc
xor
sbb
mov
push
arpl
push
cmpsl
xor
jne
mov
test
aaa
add
jmp
mov
mov
testb
imul
jbe
imul
inc
and
aas
lods
xor
inc
mov
add
xchg
ss
and
ljmp
adc
inc
sti
mov
int
popf
mov
repz
je
sahf
jmp
dec
inc
add
jns
lahf
aas
mov
push
and
das
std
dec
stos
mov
popa
ja
and
push
xor
insl
sarl
jp
add
pop
nop
repnz
jns
xabort
xchg
push
mov
dec
aad
and
inc
sbb
cmpsb
pop
iret
mov
mov
jns
push
jmp
jle
outsb
in
stc
push
gs
fwait
inc
imul
or
mov
jb
xor
out
pop
aaa
add
mov
mov
mov
lea
in
repnz
call
push
jmp
scas
add
fwait
idivl
mov
cmp
test
gs
xor
les
mov
js
or
out
inc
aas
dec
mov
fs
adc
push
lahf
mov
in
cmc
sub
call
mov
sub
mov
or
adc
aad
push
addr16
ljmp
pop
jmp
xchg
adc
mov
push
mov
jecxz
out
imul
mov
dec
sub
push
adc
pop
jae
cmp
std
fsubs
lods
mov
cmp
pushw
add
xchg
jmp
lods
test
leave
mov
xchg
inc
add
je
xor
sbb
mov
jae
jl
movsl
aas
ret
inc
fists
gs
aam
xchg
push
cltd
pop
jne
add
shrb
ret
mov
xor
lcall
lods
out
rol
pop
prefetchwt1
divb
cmp
and
scas
or
mov
hlt
jmp
mov
adc
jbe
mov
add
ja
push
inc
adc
and
sub
scas
mov
adc
push
inc
dec
mov
pop
cwtl
lods
fimuls
scas
addr16
xor
movsb
test
mov
lea
xchg
dec
jmp
pushf
ficomps
dec
mov
jo
jge
cmpsb
lock
xchg
mov
test
jg
fstpt
dec
sbb
mov
inc
xor
mov
stos
mov
push
mov
dec
and
cmp
mov
out
mov
in
inc
sbb
xchg
jns
push
sbb
mov
addl
data16
dec
add
iret
ljmp
je
xor
mov
psllw
adc
insl
cmp
push
imul
adc
dec
xchg
rcll
test
and
stos
mov
lock
mov
cmp
js
or
sarl
xor
sbb
lods
ret
lret
sub
movsl
mov
fidivs
or
icebp
sbb
or
mov
lods
xchg
pop
gs
pop
or
out
mov
push
test
fmul
mov
lods
push
mov
jae
out
xor
adc
mov
repnz
sbb
stos
popf
and
lock
pop
sti
imul
add
xorl
arpl
sub
dec
loope
and
aam
push
push
ja
pusha
addr16
and
ret
mov
je
pop
xorb
cld
insl
add
push
mov
jns
inc
and
mov
or
mov
pop
xchg
cld
mov
xchg
outsb
inc
xchg
adcb
arpl
mov
sahf
xor
sbb
clc
scas
mov
cmp
mulb
mov
testl
pushf
daa
xor
dec
push
ds
push
push
aas
ljmp
pop
es
test
fldt
loop
loop
out
inc
rorb
mov
add
and
adc
sti
nop
lods
mov
or
adc
scas
inc
nop
sbbl
fldln2
mov
and
mov
xor
stos
pop
mov
mov
mov
mov
lods
push
sub
dec
clc
and
sub
mov
in
nop
push
xor
mov
or
jle
push
int3
mov
mov
icebp
nop
mov
cmp
test
or
adc
adc
decb
ret
es
divb
mov
mov
lea
push
push
cltd
xor
push
mov
adc
and
xor
pop
mov
push
sbbl
cmpsl
or
fwait
cmp
mov
sbb
xor
loopne
ret
fistps
out
lret
xchg
pop
cltd
ja
popa
fdivp
mov
adcb
mov
outsb
lret
inc
addr16
jg
fmull
sub
fisubl
push
jge
clc
or
mov
lcall
mov
add
out
inc
mov
dec
lods
dec
push
pop
frstor
rclb
pop
cmp
add
inc
xor
loop
enter
es
fwait
and
cs
xchg
mov
dec
and
scas
xchg
stos
cmc
jb
std
jo
mov
jae
ja
jecxz
imul
pop
dec
stos
cltd
lock
push
scas
cli
or
movsb
mov
mov
mov
outsl
pop
xchg
and
mov
ja
cmp
rorl
and
mov
pop
mov
iret
shrb
je
add
les
loopne
imul
inc
divl
scas
mov
lods
es
xchg
mov
icebp
shr
bound
jae
mov
sbb
xchg
inc
mov
sbb
xor
hlt
insl
adc
adc
clc
cmpsl
mov
ljmp
mov
test
sbb
repz
test
dec
cmp
dec
mov
ret
nop
xchg
adc
push
lock
xchg
ss
cltd
lods
sub
xor
imul
push
test
not
xchg
sarl
ss
mov
push
or
je
mov
cwtl
mov
mov
xchg
call
hlt
mov
sbb
xor
stos
mov
pop
inc
adc
and
rolb
stc
cmp
sub
and
push
out
mov
stos
push
fisttpll
call
add
mov
push
mov
inc
xchg
clc
push
xchg
rorl
jmp
mov
jb
mov
push
xchg
clc
jmp
pop
push
xor
xchg
in
mov
mov
data16
fadds
sbb
sub
pop
fwait
je
or
or
cs
mov
dec
mov
sub
dec
add
clc
mov
sbb
jbe
aas
fcoms
popf
add
push
or
data16
pop
in
jecxz
jno
ret
jl
out
ljmp
sti
or
jg
lret
mov
rorb
outsb
mov
scas
xor
mov
stos
push
and
adc
js
fnstsw
sarb
dec
scas
loopne
cmp
add
mov
loopne
roll
sbb
add
ffree
adc
shr
cmp
mov
mull
jmp
xor
test
adc
andb
pop
mov
xor
xor
or
imul
add
aam
xor
jnp
dec
js
lret
ret
in
jg
mov
sbb
loop
mov
pop
sub
shl
test
aas
sub
push
jecxz
fcoms
cmpl
mov
xchg
mov
ss
cld
push
adc
jle
outsb
jae
push
bound
xor
push
xchg
mov
cwtl
xchg
fwait
das
push
add
xchg
mov
inc
lea
jecxz
mov
shrb
dec
and
pop
sub
pop
fnstenv
mov
outsb
lods
or
push
xlat
sbb
dec
into
mov
bound
mov
les
dec
fwait
dec
decb
lock
data16
cmp
add
pop
fildll
out
gs
cmpb
iret
xchg
jge
mov
push
and
test
push
fidivrl
lock
mov
jecxz
daa
xchg
push
pop
xlat
xlat
mov
sbb
push
add
mov
insb
xchg
movsb
enter
clc
cltd
inc
subl
mov
pop
mov
fdiv
lret
or
movsb
nop
arpl
out
xor
dec
sub
scas
les
jmp
addl
inc
shrl
movl
sub
dec
sbb
push
mov
push
mov
lea
stc
jle
pop
mov
outsb
pop
mov
sahf
pop
inc
xchg
mov
scas
rorb
dec
in
push
mov
es
jno
outsl
cmp
jo
jl
inc
lret
test
sbb
and
in
fwait
clc
stos
scas
xchg
dec
mov
mov
mov
lods
push
sahf
lock
in
in
inc
inc
test
sub
cmp
leave
mov
shll
mov
sbb
xor
mov
dec
add
lds
xor
jp
inc
pop
fwait
jb
sarl
xor
cmp
xorb
clc
scas
xlat
scas
jp
jmp
lods
xor
push
shll
or
mov
sub
mov
xchg
cmpxchg
push
or
xchg
inc
test
insl
jg
sti
in
rcrb
mov
lea
jb
mov
mov
xlat
stos
dec
pop
movsb
pop
mov
aaa
daa
fwait
cs
divb
sarl
rorb
mov
outsb
mov
js
push
sysenter
es
rcll
ret
and
cld
sbb
add
out
insl
mov
jo
pop
dec
mov
and
imul
mov
in
lret
push
mov
adc
or
lods
xor
push
xchg
mov
xor
jmp
mov
mov
fs
stos
arpl
mov
lret
ficomps
rcl
jmp
insl
cwtl
mov
lret
test
jns
mov
jp
mov
sarl
mov
add
mov
cld
xchg
sbb
xchg
inc
in
test
push
and
mov
cmc
decb
pop
shrb
dec
mov
mov
das
pop
jnp
daa
cmp
adc
and
push
scas
lods
xor
imul
addl
xchg
mov
bound
not
clc
popa
mov
dec
hlt
sbb
outsl
ret
mov
inc
push
mov
sbb
loopne
popf
sbb
xchg
imulb
fcomps
das
dec
dec
lret
add
mov
cmpsb
mov
jae
dec
push
cs
sub
repz
mov
pop
out
lea
jl
push
mov
out
and
std
inc
xor
or
test
xchg
pusha
lods
pop
push
inc
dec
jbe
and
test
lea
dec
out
leave
cmp
mov
in
or
fmulp
lods
mov
test
repnz
outsl
loope
iret
sub
mov
ljmp
sbb
pop
mov
inc
test
pop
popf
pop
lds
iret
jb
push
enter
mov
mov
mov
outsl
daa
scas
adc
stc
movb
xchg
push
movsb
add
dec
or
add
push
clc
scas
lret
das
mov
xor
mov
pop
adc
outsb
jnp
stc
sahf
sbb
movsl
aad
mov
lret
test
decl
shll
clc
fcomps
mov
loopne
fs
adc
aam
xor
xchg
pop
cmp
pusha
sbb
enter
lret
fsubl
in
clc
lcall
or
lods
clc
ficoml
xchg
icebp
xorb
out
lods
xor
lea
xlat
jle
adc
pop
inc
push
insb
jle
mov
pop
sti
push
sbb
sub
adc
jae
fidivl
adc
scas
cmp
std
fstl
cmc
push
adc
pusha
push
loopne
sahf
sarl
int3
cmp
cwtl
mov
loop
movsb
cld
mov
ret
rolb
fsubl
adc
mov
fcomps
jmp
mov
lods
mov
pop
in
out
sbb
mov
ret
scas
lods
xchg
sbb
adc
shrb
js
nop
es
add
inc
idiv
mov
sbb
cmpsl
lods
sub
in
jmp
outsl
pop
push
inc
nop
sub
add
inc
ret
cmp
lret
jg
jno
and
push
jmp
mov
pop
add
sbb
imul
lock
sbb
sbbl
xchg
mov
cmp
jo
mov
mov
xchg
xchg
bnd
mov
sub
iret
repz
inc
and
clc
ljmp
cmp
cltd
jmp
ds
push
xchg
sbb
clc
mov
jmp
pop
ss
insl
jns
jo
sbb
pop
lahf
cmp
xor
jp
lret
adc
mov
mov
pop
js
push
xchg
fcmovne
xchg
divl
in
cmp
dec
mov
test
push
stc
or
xchg
jle
mov
mov
scas
shll
arpl
in
pop
xchg
stc
or
scas
inc
sti
insl
or
rcll
aaa
xchg
xchg
fdivl
and
mov
xchg
and
inc
or
loop
scas
mov
mov
pop
std
orl
movsl
and
fistl
mov
bound
inc
mov
xor
pop
movsl
shlb
mov
sbb
mov
xchg
outsl
mov
xlat
jae
lods
push
jle
ljmp
dec
mov
pop
cmp
outsb
mov
xor
or
mov
dec
dec
sub
xchg
push
cltd
andl
mov
shrl
adc
in
test
lahf
fmull
sbb
enter
xor
add
scas
gs
lea
sub
jge
pop
mov
stos
enter
dec
xlat
push
adc
sbb
push
mov
call
cmp
xor
das
sub
cmpsl
test
rcll
dec
push
mov
stos
mov
mov
rclb
cltd
mov
into
outsb
xor
and
mov
push
xor
sub
cmpsl
mulb
ljmp
xchg
mov
lods
and
pusha
xchg
mov
movsl
sbb
mov
dec
jge
push
lods
mov
push
sbb
loope
in
xchg
mov
jae
add
cmp
push
lods
pop
pop
rclb
adc
andb
lods
testl
leave
ljmp
cs
mov
dec
jb
stos
push
cmpsl
bound
fs
gs
js
repnz
sbbl
adc
mov
pop
add
cs
push
adc
aam
pusha
icebp
mov
push
sbbb
pop
pop
rorl
mov
clc
insl
mov
jae
or
xor
aaa
push
and
lock
xchg
je
fs
fwait
push
pop
call
push
lds
scas
jp
lock
mov
pop
sub
test
adc
insb
scas
mov
push
dec
and
aaa
scas
pop
jle
or
stos
stos
push
scas
jo
andl
sub
imul
mov
xchg
add
enter
movsb
in
lds
mov
inc
cmp
adc
jecxz
hlt
xor
xchg
mov
push
into
repz
ja
enter
jno
jmp
mov
fs
arpl
mov
xchg
dec
dec
push
and
addr16
daa
in
xor
jns
icebp
push
pop
cli
or
shrb
out
insb
adcl
dec
test
insb
jge
stc
cmp
dec
dec
lea
push
rorl
cmp
inc
orb
inc
dec
inc
mov
stos
pushf
pop
add
pop
pop
rorl
imul
in
mov
jle
cli
mov
pop
enter
addw
pop
not
sub
jecxz
dec
mov
adc
jns
mov
ds
movl
sub
dec
nop
jbe
sub
nop
or
lcall
cmp
push
sbb
popa
push
fistps
inc
sbb
jecxz
adc
cli
fs
les
or
jnp
out
sub
movsl
test
sbb
fldl
dec
inc
jno,pn
jecxz
inc
jbe
gs
sar
addr16
and
fcoml
mov
lods
jecxz
daa
mov
loope
fbld
pop
andl
enter
in
loop
mov
ja
adc
out
imul
je
sub
cs
add
jo
addb
jo
dec
cmp
xchg
movsl
mov
ljmp
es
sub
subb
repz
call
mov
mov
leave
mov
jmp
mov
ficompl
arpl
xor
cmpl
push
aaa
fs
movsl
mov
sbb
cmp
icebp
andl
aaa
sbb
pop
repz
push
ss
or
outsb
sbbl
and
mov
je
cmpsl
sahf
ret
mov
pop
ret
and
subb
dec
adc
in
mov
insb
rorl
in
push
push
cmp
mov
xor
movsb
rorb
mov
out
mov
cwtl
into
pop
add
mov
stos
insl
dec
icebp
rcl
mov
scas
cmpsb
jae
orl
inc
mov
and
or
jle
and
fldt
daa
mov
mov
mov
ret
cs
shrl
je
lods
test
xchg
nop
dec
bnd
pop
xor
out
mov
mov
xor
add
outsl
pop
mov
je
pop
xor
lds
nop
mov
xor
cmpb
repz
xor
pop
mov
cmp
test
inc
sbb
insb
mov
aas
into
nop
ja
sar
mov
cmpb
sahf
cwtl
out
mov
and
jmp
adc
cs
push
pop
mov
outsb
sub
xchg
mov
push
mov
mov
dec
push
enter
jecxz
cmpb
scas
movl
mov
pop
imul
xchg
fstpt
cwtl
pop
adc
adcb
test
jns
mov
inc
sub
jge
push
push
popa
bound
push
movsb
sbb
push
inc
and
cmp
xchg
and
cmpsl
mov
mov
lods
lods
lods
loopne
pop
dec
mov
popl
mov
leave
sub
mov
mov
imul
arpl
dec
xchg
mov
add
dec
movsl
mov
scas
cmp
in
enter
test
mov
sahf
imul
cmp
xchg
addr16
scas
pop
sbb
scas
pop
lcall
loopne
add
bnd
bound
je
push
fistpl
cmp
cmpsb
xchg
fdivrl
pop
inc
xorb
jmp
dec
das
mov
xchg
jo
adc
clc
xorl
cmp
mov
mov
jbe
pushw
xlat
jp
bswap
inc
popa
mov
mov
xchg
and
in
mov
sub
int3
and
cli
cmc
insb
sub
shrb
out
sar
mov
cmp
out
stos
adc
sub
sbb
cmp
mov
imul
xlat
push
jb,pn
pop
push
mov
mov
or
xlat
inc
sub
int3
ss
insb
mov
test
adc
xor
push
and
clc
adc
pop
repnz
adc
dec
movsb
out
mov
lcall
scas
xchg
push
and
mov
or
rorl
imul
jmp
movsb
mov
aam
cmp
push
pop
mov
je
and
xchg
pop
mov
pop
mov
shlb
test
xchg
add
ret
sub
lret
cmp
popa
jmp
sarb
sahf
enter
sub
scas
cmp
adc
push
xchg
gs
rcl
xor
xchg
aam
mov
xchg
mov
jmp
push
inc
out
xchg
dec
imul
dec
out
icebp
pushf
mov
mov
pop
mov
mov
dec
stc
jo
inc
adcb
inc
xchg
sub
fildl
stos
lock
sub
mov
mov
push
sahf
adc
add
jno
dec
adc
and
sbb
scas
leave
or
pop
inc
xchg
iret
xchg
in
and
mov
add
inc
dec
add
mov
call
mov
arpl
fs
sbb
cmpsb
mov
jnp
in
mov
inc
adc
mov
sub
pusha
pushf
into
mov
lock
or
imul
adc
out
mov
lret
pop
daa
mov
ds
mov
push
sbb
inc
mov
xor
jl
int
xor
mov
and
mov
aad
sahf
and
jb
mov
adc
sbb
jl
jp
add
cli
out
jg
inc
xchg
mov
je
pop
mov
adc
push
mov
das
pusha
adc
fs
mov
pop
mov
sub
jae
insb
xchg
or
test
mov
jmp
pop
clc
repnz
and
pop
adc
xchg
insb
enter
nop
pop
dec
lret
outsb
dec
push
mov
and
mov
sub
dec
dec
call
and
aam
gs
cmpsb
inc
adc
pop
out
cmp
lcall
fildll
or
push
adc
andl
mov
push
div
sahf
pop
adc
mov
mov
jb
mov
mov
or
nop
movl
sbbl
jae
pop
inc
mov
push
or
fucomip
mov
xor
sbb
lock
xchg
hlt
dec
cmpl
inc
orb
pop
mov
mov
push
add
fistps
and
leave
mov
pop
dec
sub
stc
in
mov
sub
outsb
cmpsl
into
mov
mov
mov
into
imul
and
mov
popf
sbb
jae
scas
push
nop
mov
js
jp
inc
lods
cmp
mov
es
fsub
lahf
test
cmp
xor
dec
jnp
xor
mov
inc
fcmovb
mov
lea
fimuls
mov
jae
or
cmpsb
and
sbb
nop
pushf
popf
clc
push
loop
jmp
xchg
lock
lds
out
mov
fsubrl
pusha
in
inc
mov
sahf
fld
mov
sub
test
jne
pushf
xchg
movl
int
cmp
dec
nop
je
dec
hlt
pop
enter
xchg
loope
cwtl
dec
mov
int3
incb
and
add
cmp
mov
add
js
pop
imul
stc
xchg
inc
sub
inc
pop
out
shll
clc
movsb
add
movl
scas
push
cmpsl
jns
adc
xor
scas
push
enter
pop
fildll
pop
aas
out
pop
repz
and
ret
lahf
adc
dec
lods
lret
nop
xor
pusha
leave
push
sbb
push
rolb
dec
ret
sbb
hlt
pop
sbb
fiadds
push
xchg
mov
xor
das
lock
pop
jg
inc
sbb
imul
adcl
adc
cmpsl
jecxz
add
push
movswl
je
dec
and
ljmp
mov
mov
cmpsb
pop
jae
pop
stos
sub
lods
add
nop
mov
gs
dec
popa
pushf
mov
xchg
mov
inc
sbb
mov
je
daa
mov
loopne
dec
push
sbb
cmp
mov
xchg
sbb
fsubr
sahf
cld
and
pop
mov
add
js
inc
xor
lahf
pop
xor
inc
test
mov
xor
xchg
xlat
aam
xor
push
mov
outsb
jmp
test
mov
ret
hlt
fisttps
pop
aad
in
sbb
xor
ljmp
dec
xchg
cld
test
test
lret
aam
mov
xor
aas
push
lahf
ss
sbb
subb
sub
jge
xchg
negb
scas
and
pop
cmpsl
jmp
mov
jmp
adc
mov
mov
pusha
lods
or
pop
scas
je
sbb
push
ljmp
pop
lret
lret
sbb
dec
loop
push
adc
shlb
fs
ds
dec
aam
fisttps
sub
cli
cmp
pop
push
fbld
jo
jp
mov
and
nop
mov
xchg
in
jmp
insl
push
scas
test
xor
ljmp
int3
cwtl
mov
popf
mov
xorb
sub
pushf
in
jo
adc
sub
jo
subl
add
mov
sti
aaa
xchg
or
std
sub
xchg
inc
sarb
pop
test
mov
mov
leave
cli
out
fsub
aas
mov
gs
stos
mov
adc
mov
cmpsl
xor
mov
inc
pop
and
lock
push
fcoms
sbb
scas
dec
inc
andb
addr16
testl
lcall
lret
lea
adcl
push
jg
mov
outsb
movsb
push
call
sbb
push
mov
push
clc
lahf
sbb
xorl
ja
push
fimuls
push
sub
jmp
fnsave
add
pop
leave
int3
clc
rol
rolb
ds
lds
mov
shr
cltd
js
outsb
pop
pop
pop
push
add
xor
mov
negl
xchg
xor
inc
negb
into
nop
lock
enter
xor
pushf
mov
stos
mov
dec
jo
test
hlt
rclb
mov
ret
sub
in
push
mov
mov
loop
cs
push
cwtl
clc
jecxz
or
shlb
or
outsl
add
pop
push
dec
icebp
mov
in
mov
cld
data16
adc
clc
jge
mov
pop
clc
jg
loope
aas
adc
ss
pop
cltd
rcrl
push
push
incb
clc
sub
pusha
aam
scas
sub
rcr
cmp
pop
cmc
cmp
jl
leave
nop
popa
xorl
add
sub
insl
or
lcall
push
dec
mov
dec
out
arpl
cmpsl
repz
fisttpll
test
pop
pop
enter
mov
jne
xor
jo
cmp
sbb
pushf
addr16
cmpsb
sub
xor
xchg
xchg
push
pop
das
cltd
jae
jne
ss
scas
push
addr16
jb
and
in
lds
imul
sbb
xor
divl
cmp
jb
movsl
pop
mov
pop
fs
dec
or
je
add
mov
fdivs
pop
jle
mov
iret
movl
mov
cmp
pushf
stc
push
popf
addl
ds
pop
xchg
sti
jmp
cltd
int3
data16
pushf
mov
outsb
and
and
and
fsubp
sbb
inc
scas
push
rorb
dec
insb
dec
outsl
xlat
push
lret
mov
loopne
mov
inc
add
in
xchg
clc
sbb
lcall
jno
je
clc
adc
push
push
scas
adc
mov
cmpsb
mov
xorb
fcmove
cs
mov
ss
pop
xor
push
add
imul
ljmp
add
push
lds
inc
mov
test
xchg
push
icebp
lock
add
out
mov
or
jno
mov
test
scas
popa
mov
sbb
lret
loopne
adc
cmpsb
lahf
pop
mov
mov
pop
pop
mov
xchg
cltd
add
out
fwait
andb
push
shl
inc
jp
fistpll
xor
xchg
mov
lods
dec
jbe
add
adc
jae
mov
ja
pop
shrb
push
mov
incb
mov
addr16
jge
arpl
cmc
pop
ds
mov
xor
jl
jo
mov
adc
aas
jne
or
mov
pushf
push
sbb
jl
pusha
and
mov
mov
sub
sbb
mov
jmp
cmp
test
adc
fcompl
in
fwait
inc
mov
hlt
xchg
mov
dec
test
test
xchg
mov
mov
cltd
mov
mov
in
popa
fcompl
lods
jnp
adcb
je
inc
mov
sub
outsb
aam
shlb
cli
or
mov
push
xor
in
mov
adc
mov
das
int
mov
or
insb
inc
lods
mov
pushf
xchg
test
jg
or
mov
paddq
sbb
mov
xor
rclb
dec
jmp
xchg
lods
repz
cmpl
mov
test
sbb
int
cmp
je
jne
dec
gs
jo
lds
cs
xorl
and
dec
sub
lahf
mov
cli
mov
fmuls
jnp
push
sub
bound
imul
test
sarb
mov
lods
mov
cmp
mov
int
out
mov
movsb
enter
mov
jg
pop
push
lret
xor
xchg
clc
xor
imul
cmp
cmpsl
and
lret
ss
test
imul
sbb
adc
inc
adc
push
jl
adc
jnp
xor
scas
stc
xchg
inc
filds
idivb
and
cmp
cs
imul
and
dec
arpl
imul
cmp
adc
dec
add
ds
cmp
mov
pop
cmpsb
and
push
mov
loop
pop
dec
mov
jbe
and
push
or
frstor
pop
mov
dec
or
jl
sbb
inc
imul
dec
xchg
mov
outsb
sbb
jmp
pop
fnsave
mov
decb
lock
clc
out
sti
mov
mov
mov
cmp
ret
stc
ljmp
mov
int
stos
jnp
dec
cmp
pusha
gs
pop
mov
addb
mov
push
sbb
dec
test
pop
repnz
ds
xor
lods
mov
dec
sub
sti
pop
call
call
add
jmp
stos
dec
or
nop
rol
mov
lods
enter
xchg
sahf
cmc
push
shl
or
push
ja
je
cs
fstps
lret
movsl
aas
fdivl
out
push
jne
mov
out
sbb
xlat
jle
lods
stos
call
inc
push
xchg
mov
mov
sbb
clc
xor
lock
inc
push
int
icebp
fcomp
hlt
addr16
out
rcll
jp
ficompl
movsb
clc
mov
push
xchg
push
adc
orb
xor
sub
lret
int
push
push
jge
pop
movsb
sbb
movb
leave
mov
fcomi
call
xchg
mov
imul
push
lds
in
inc
jno
jge
cmp
shll
cli
rolb
mov
push
jp
inc
xchg
dec
mov
loope
stos
push
iret
divb
push
int
sub
fildl
call
imul
pop
fs
lods
mov
mov
sbb
inc
mov
dec
pop
lea
cli
mov
fcoms
fdivp
jecxz
out
xor
mov
int
and
les
xchg
mov
xchg
clc
out
pop
mov
mov
shll
sub
mov
and
enter
test
mov
jns
cmp
xor
lret
and
pushf
push
daa
xchg
popa
mov
pop
mov
adc
fsubp
adc
xchg
fldenv
stc
scas
sbb
popf
mov
mov
xor
push
fwait
shlb
iret
mov
ds
inc
jecxz
jnp
jmp
and
mov
mov
loopne
and
into
dec
inc
cmc
lods
shr
add
in
dec
mov
sbb
mov
shl
movsl
adc
jbe
add
mov
push
or
or
jg
jns
lock
mov
mov
into
mov
es
shll
scas
mov
test
lods
pop
loopne
fnstenv
outsl
cmp
dec
mov
sbb
ret
test
fdivl
mov
mov
pop
sub
mov
pusha
xchg
mov
scas
movhps
ss
rolb
sub
je
cmpsl
push
sbb
adc
jbe
in
mov
mov
xchg
xchg
push
cmpsl
xchg
sbb
push
sbb
push
add
jl
sub
jne
les
movl
int3
aad
adc
aam
fs
das
and
jg
xor
pop
imul
js
in
insb
hlt
daa
daa
push
add
mov
push
and
js
arpl
pop
dec
adc
xlat
cmp
sbb
cmp
cmp
sti
stc
sbb
subb
xor
xchg
push
add
cmpsb
in
push
movsl
les
pop
lods
push
inc
mov
fsts
std
cs
pop
enter
jecxz
xor
mov
sub
jns
adc
and
jle
popf
pop
decl
ljmp
mov
mov
nop
int3
out
add
les
inc
fisubrl
pop
hlt
aad
andb
xchg
push
data16
jns
insb
insl
jns
stos
clc
mov
dec
sbb
jnp
mov
sbb
inc
cltd
add
jecxz
hlt
mov
scas
sub
sbb
sahf
in
fisubl
pop
pop
outsb
mov
xchg
push
popa
pusha
mov
imulb
es
cwtl
push
mov
push
ret
jl
int
pusha
decb
jg
xchg
sbb
and
lcall
xor
rorb
enter
xchg
scas
dec
out
push
jae
cmp
cs
sub
mov
cmpsl
jo
push
sbb
sub
arpl
mov
or
sahf
in
das
fwait
jae
stos
dec
mov
mov
add
mov
ja
icebp
shrl
int3
jnp
hlt
push
ljmp
sahf
pop
bound
lods
pop
ror
pop
push
push
shlb
jecxz
adc
fidivl
lret
mov
insl
xchg
push
sub
cwtl
sbb
and
dec
push
test
dec
fisubl
push
icebp
xchg
mov
or
mov
or
fcomps
mov
push
imul
add
push
pop
daa
add
and
les
cmp
cs
out
insb
enter
sub
stc
cwtl
in
pop
daa
mov
push
xor
push
mov
sbb
in
imul
outsl
or
aam
adc
sbb
outsb
and
jne
enter
lods
mov
jl
das
popa
into
loopne
mov
dec
sbb
inc
rcrb
dec
mov
or
rclb
xorl
aaa
js
mov
lds
fldenv
lds
dec
movsl
cwtl
and
pop
fs
daa
frstor
mov
lret
inc
addr16
cmpsb
jae
push
cmc
cs
outsl
nop
call
stos
push
mov
jmp
pop
data16
add
sub
add
mov
sub
mov
jbe
xchg
jge
sahf
lods
mov
xor
push
mov
loop
nop
ss
lock
mov
outsb
sub
inc
lahf
test
mov
imul
inc
push
dec
add
xchg
addr16
fdivl
lods
mov
inc
out
sar
push
mov
in
aas
insb
push
push
scas
cmp
xchg
lock
add
jno
adc
lods
in
push
aaa
mov
lret
mov
hlt
loopne
dec
and
ret
movb
aam
nop
scas
es
add
jbe
fmul
movsl
sbb
scas
adc
pop
imul
imul
out
push
and
in
dec
aas
jbe
adc
or
fsubrl
dec
sarb
cld
mov
rolb
push
pushf
mov
and
inc
and
dec
das
mov
pop
stos
lret
iret
scas
fs
mov
dec
push
pop
adc
mov
sbb
icebp
loopne
test
mov
sbb
mov
xor
lods
xchg
gs
mov
mov
jle
jo
enter
xor
das
or
int
xchg
clc
rolb
out
inc
or
xchg
push
or
mov
into
pop
sub
in
insl
icebp
outsb
pop
mov
stc
push
dec
imul
sbb
fsubrs
out
fidivrl
pop
mov
notb
mov
popf
dec
pop
cltd
fs
ds
movl
clc
jmp
lods
sub
loopw
pop
sub
inc
sub
movsl
sbb
inc
jae
pop
arpl
mov
cmp
stc
int
shlb
sbb
movsl
enter
adc
cmp
fildl
stos
add
int3
mov
xor
mov
jbe
mov
pop
bnd
movsl
enter
and
fcmovnu
enter
outsl
xor
pop
dec
stos
dec
jmp
pop
push
dec
adc
inc
test
stc
hlt
jmp
cmp
pop
sbb
pop
jb
xchg
mov
mov
daa
mov
inc
jmp
popa
push
test
cltd
sbb
mov
out
clc
leave
rcl
mov
lods
mov
in
nop
and
ljmp
movsb
push
mov
leave
xor
jbe
fisttps
mov
aaa
jnp
push
and
cmc
test
stc
inc
ficompl
in
mov
mov
movsl
fbld
adc
adc
sub
sbb
sbb
bound
aaa
pop
sbb
dec
in
sub
data16
mov
add
fdivrl
mov
lret
mov
cmc
pop
mov
jmp
pushl
shll
fwait
mov
or
sarb
je
xor
lahf
dec
scas
sahf
rolb
mov
dec
sbbb
pop
mov
xlat
adc
inc
in
jg
sbb
xor
xchg
aaa
test
or
mov
jno
push
push
mov
fldcw
mov
stos
mov
mov
push
push
in
sub
pop
ret
imul
sbb
xor
jne
jmp
pop
imul
in
shll
cmp
mov
fistpll
mov
in
jo
leave
adc
je
cs
movb
or
adc
scas
push
out
bswap
jbe
rolb
divl
imul
daa
mov
pop
test
push
ror
es
dec
adc
fxch
ficoms
data16
dec
jmp
mov
pop
cs
push
cwtl
or
test
cmp
imul
pop
or
cltd
cmp
cmpb
pop
and
data16
hlt
adc
enter
mov
addl
sub
mov
test
decb
outsb
mov
mov
fiadds
and
int3
sbb
add
adc
pop
mov
ljmp
pop
stc
out
ret
daa
xor
mov
fiadds
xor
inc
mov
mov
sbb
jo
mov
dec
ja
mov
popl
jnp
mov
mov
mov
movsl
push
jnp
pusha
mov
adc
mov
movsl
test
sub
stos
clc
pop
outsb
pop
push
push
and
lret
fstps
xor
lret
or
pop
mov
push
push
lods
mov
push
insb
xor
scas
mov
add
repnz
adcl
enter
sub
scas
popf
mov
pushf
xor
xchg
orl
nop
out
movl
icebp
outsl
cmp
cs
popa
push
into
mov
je
jae
mov
add
fwait
mov
cld
and
fstps
repz
mov
ret
loop
dec
lcall
push
push
fimull
dec
jp
iret
in
cmp
pop
jnp
lock
scas
adc
mov
aam
inc
xchg
inc
inc
add
gs
xor
cltd
fldl
clc
adc
pop
pop
pop
lods
arpl
add
lods
add
inc
sti
mov
jle
push
cmpsl
test
scas
es
push
call
cmpsl
push
test
xchg
mov
jle
jecxz
mov
or
push
clc
popa
movsb
pop
pop
adc
sub
push
lods
and
lods
aas
sbb
fcmovne
out
cmpsb
push
aas
xor
lods
cltd
jbe
rolb
mov
lods
movl
int
sbb
push
out
sbbl
mov
insl
xchg
je
in
out
jb
push
inc
arpl
loope
clc
loop
push
mov
in
and
pshufw
cmpsl
xor
mov
daa
or
push
nop
pusha
orl
je
sbb
gs
push
shlb
scas
pusha
cld
arpl
dec
mov
ret
scas
mov
pop
andl
pop
test
js,pn
mov
push
pop
out
enter
pop
push
stc
pop
stos
lock
xchg
and
push
ja
sub
scas
fisubl
jp
rcl
cmp
outsb
mov
fisttpll
or
xor
test
mov
ret
enter
cli
out
sub
mov
iret
sub
mov
divl
sti
rclb
pop
mull
xor
sub
in
xchg
cwtl
jno
test
cmpsl
repnz
mov
popf
pop
ret
decb
dec
js
sarl
jae
mov
xchg
subb
sbb
in
aad
add
adc
mov
or
jno
mov
mov
aaa
push
test
in
mov
push
dec
jae
out
xor
push
push
mov
call
aam
mov
mov
out
test
out
adc
mov
add
cld
dec
scas
cli
in
addr16
push
and
enter
mov
cmp
rolb
aad
loope
xchg
jne
mov
sub
mov
out
mov
xor
pop
aas
mov
lock
adc
popa
or
movsl
jmp
fdivs
adc
add
mov
and
xchg
jae
pop
xor
add
jo
test
xor
inc
sbb
movsl
cltd
mov
mov
jo
jl
cmp
mov
and
popl
loope
enter
jae
cltd
clc
out
push
mov
scas
add
into
insb
dec
mov
mov
fidivs
dec
mov
inc
pop
sub
add
mov
xchg
ljmp
inc
lds
call
cmp
mov
mov
aad
ret
lods
sbb
daa
mov
shl
sbb
jge
adc
ljmp
fnstenv
sub
sub
or
popa
and
lods
mov
inc
and
lret
cmp
or
aad
mov
add
stc
push
jbe
xor
pop
cmpsb
dec
int3
scas
push
addr16
ror
mov
push
xchg
mov
jno
sbb
in
out
mov
stos
fidivrs
xor
mov
shrb
inc
aaa
in
je
inc
insb
jae
enter
sub
dec
jo
xlat
movsl
jb
push
pop
scas
sarl
nop
jle
dec
lods
mov
and
gs
jbe
push
and
js
fiadds
cmpsl
jmp
nop
xor
mov
lock
mov
sub
aas
pop
dec
es
xor
sti
sbb
inc
jle
pop
faddl
aas
push
stc
mov
jmp
ljmp
xorl
push
jnp
fs
jmp
or
mov
dec
or
dec
enter
outsl
sbb
pop
clc
outsb
into
loopne
mov
push
adc
inc
lods
cs
mov
ss
aas
sub
in
addr16
mov
pop
mov
enter
mov
mov
or
clc
rcr
notb
xchg
adcl
jo
mov
or
shlb
mov
andb
dec
or
xor
push
cwtl
or
mov
lret
outsl
orl
loope
aam
insb
es
gs
mov
mov
repnz
jle
jne
jno
fiadds
sti
mov
call
mov
dec
xchg
nop
push
cld
inc
sbb
xor
jecxz
fcoml
cwtl
inc
push
ror
mov
or
inc
and
sbb
adc
clc
inc
loopne
jbe
adc
icebp
enter
jmp
add
test
cmc
out
pusha
jl
jb
pop
aam
in
xlat
rclb
add
mov
insb
inc
dec
clc
insl
mov
push
xchg
xlat
add
clc
sub
adc
in
rcl
lcall
stc
xchg
cmp
daa
outsl
cltd
lcall
adc
outsb
movsb
jno
mov
push
pusha
add
lock
dec
pop
inc
hlt
clc
xor
rcr
into
mov
insl
jle
jecxz
pop
mov
sti
out
repnz
aad
cwtl
mov
pop
dec
xor
in
call
test
jno
stos
rcll
stos
dec
adc
call
scas
pushf
rorl
jae
loope
mov
pop
xor
pop
out
mov
inc
pop
outsl
sub
mov
jnp
dec
dec
mov
dec
mov
mov
sbb
rclb
popf
adc
scas
stc
mov
lret
inc
das
pop
push
pop
lock
jne
cmp
fsubrl
lret
loopne
in
mov
pushf
xchg
jg
sub
das
mov
mov
or
push
cmpsl
xor
dec
mov
incb
sbb
mov
dec
xor
sti
push
cmp
mov
jg
push
std
sahf
psllw
push
push
popa
inc
xorb
andb
push
add
mov
mov
or
in
xchg
aaa
loope
iret
popf
out
and
mov
incl
mov
test
inc
mov
add
sbb
fdivp
inc
xor
mov
xor
daa
jae
pop
jp
dec
mov
adc
sahf
in
add
and
xchg
nop
xchg
bound
and
or
lock
dec
pop
psubsb
int3
mov
mov
xchg
leave
pop
cmpsl
enter
adc
mov
in
addl
ljmp
inc
cmpsb
sbb
xor
sbb
movsb
mov
repnz
dec
cltd
cld
fsubrs
jmp
pop
pop
fcoml
pop
sbb
or
pop
movsb
pop
enter
push
adc
xor
adc
mov
cld
rclb
imul
push
nop
das
adc
adc
int3
in
data16
lods
xlat
popa
test
jno
sub
sti
mov
adc
out
pop
pop
push
mov
push
sbb
clc
cmp
out
mov
pop
aas
push
inc
scas
dec
call
roll
hlt
inc
arpl
xchg
stos
mov
dec
out
push
mov
push
sbbb
inc
out
push
add
lods
bound
enter
mov
leave
pop
and
lret
inc
jp
cld
pop
dec
add
cs
lods
bound
repnz
nop
adc
aaa
or
push
stos
push
movsb
pop
out
mov
mov
cmpsl
inc
hlt
inc
daa
lret
push
xor
inc
xor
cmp
fs
dec
daa
pop
dec
cmc
nop
push
repz
push
cs
enter
lds
sti
test
mov
cwtl
push
push
pusha
pop
sbb
insb
repnz
enter
or
aas
pop
and
mov
mov
inc
pushf
xchg
xorb
push
fstl
mov
ljmp
xchg
mov
push
in
test
repz
ret
clc
icebp
pop
rcrb
xchg
call
push
adc
mov
jp
and
inc
xchg
daa
push
and
int3
inc
je
loop
or
jae
gs
mov
cmp
sub
je
dec
mov
sub
mov
insb
fcmovnb
fimull
push
jo
mov
in
data16
mov
jecxz
or
cli
cltd
movsl
bound
testb
gs
jmp
add
pop
push
mov
or
mov
mov
mov
push
fdivrs
mov
xor
sub
insl
or
sbb
sarb
inc
cmpsl
push
cmp
sbb
pop
imul
lock
dec
in
push
mov
scas
adc
test
xor
jecxz
add
leave
daa
ficompl
jle
test
inc
cmp
mov
enter
dec
inc
jge
in
sbb
leave
ror
push
cmpsl
sbb
mov
mov
jo
sub
mov
lret
outsl
or
test
pushf
inc
mov
xor
jmp
or
jle
pushf
notb
stos
push
sahf
or
xchg
ss
repz
iret
cmpsb
repnz
icebp
jg
inc
and
enter
insb
push
rorl
add
mov
xor
mov
repnz
test
cmc
sub
fbstp
cmp
test
mov
push
jg
sbb
cmp
mov
fsubl
push
mov
adcb
mov
jbe
ljmp
sahf
outsl
dec
mov
xor
aam
jae
addr16
jmp
cmp
test
fisubrl
mov
out
dec
stos
rclb
mov
fucomi
mov
addr16
mov
dec
sbb
pop
mov
lods
xor
rolb
lods
pop
xor
sub
jne
and
insl
jl
arpl
mov
jmp
out
out
loopne
in
cli
mov
xor
inc
mov
ret
jns
sub
mov
add
enter
xor
mov
mov
cmp
lea
and
jns
aas
jmp
clc
push
shll
xchg
mov
pop
es
test
insl
sub
adc
xlat
cmc
popf
sbb
mov
int
mov
mov
add
inc
push
sub
fwait
enter
adc
ret
mov
movsb
add
clc
pop
gs
push
adcb
gs
push
lret
repz
cs
sub
test
sahf
pop
fsubp
test
or
xchg
adcl
cs
xchg
cmpsl
mov
sub
jo
stos
bound
ret
into
mov
push
test
xchg
cmc
adc
inc
jmp
fs
sub
into
dec
mov
arpl
sub
mov
cmp
insb
popa
pop
rcl
and
loop
and
repz
std
xor
fisubs
call
and
mov
mov
mov
push
sub
pop
add
rcrl
xor
movsb
shrb
inc
lods
stc
mov
mov
cmc
jo
sbb
adc
hlt
and
pop
mov
and
xchg
jmp
out
push
push
add
popf
jp
lds
jg
jne
std
fcomps
enter
ss
sbb
jp
mov
dec
xchg
and
fs
movsl
rcrb
sbb
lret
lds
lahf
and
xor
adc
pusha
and
or
cmp
jno
sub
mov
pop
leave
xchg
subl
xor
js
jb
shlb
pop
xor
test
xlat
fnstenv
pop
pusha
adc
clc
xchg
xchg
fisttpll
repz
test
aad
pop
push
pop
pop
adc
mov
aad
adc
mov
data16
test
sbb
push
fdiv
inc
jg
movsl
cltd
lahf
sbb
adc
jno
int3
andb
mov
sahf
addl
hlt
jb
seta
out
icebp
mov
mov
mov
sbb
or
sti
nop
mov
mov
lret
repnz
nop
cmp
leave
lods
scas
imul
aad
sbbl
cmc
mov
mov
les
mov
adc
cmp
gs
sub
idivb
gs
lahf
xchg
jns
enter
jle
xchg
xorl
jmp
and
mov
jmp
jo
fbld
mov
test
scas
popa
call
fldt
jmp
sbb
sub
dec
pop
lods
js
adc
shrb
cmpsl
fs
push
fldt
cmp
ret
or
push
dec
movsb
iret
mov
data16
sub
in
mov
jge
add
sub
pop
cmp
cmp
sahf
pop
mov
push
lds
roll
sahf
iret
ljmp
mov
int3
dec
adc
xchg
fcmovnbe
insl
mov
std
push
fsubl
outsl
add
or
sbb
je
push
sbb
cwtl
movl
adc
nop
adc
fcompl
imul
ds
sti
movsl
sub
inc
imul
mov
xor
adc
fstp
add
cmc
or
mov
inc
popa
sub
push
lods
mov
int
fidivrs
outsb
fldt
mov
sub
or
jo
jl
cmp
xchg
jle
jp
lret
enter
mov
addb
xor
pop
fistpll
fildll
sbb
adc
mov
xchg
arpl
mov
adc
mov
xor
fidivl
in
addr16
pusha
out
mov
cmp
jp
xchg
xor
mov
or
ret
loopne
sub
xchg
xchg
cmpsb
sbb
jmp
lods
dec
mov
add
xor
popa
sbb
jne
mov
xlat
xor
pop
inc
mov
cmp
xor
sarb
int
testl
sahf
in
pop
out
inc
xor
cltd
aad
out
or
scas
mov
mov
pop
mov
lret
mov
xor
mov
xchg
cmpsb
cmp
push
mov
pop
jno
mov
aas
insl
jl
shl
mov
ret
loop
out
sarb
jne
mov
loopne
cmpsb
out
ds
std
pop
push
pushf
inc
subl
ss
or
loopne
pop
dec
popf
sarl
xor
xchg
push
repz
push
dec
call
inc
imul
xchg
pop
jns
jne
nop
mov
mov
popa
pop
mov
pusha
andb
cmpsl
shrb
jno
std
sbb
cld
dec
inc
pop
push
cmpsl
mov
sar
bound
mov
dec
inc
cmp
les
aas
mov
mov
sbb
push
jecxz
dec
inc
mov
sbb
cmp
push
or
lcall
inc
inc
icebp
lock
jnp
mov
mov
mov
decl
xor
orl
mov
mov
test
inc
sbb
sbb
pop
repnz
mov
aad
or
jle
xor
sub
mov
xlat
stos
push
push
inc
adc
outsl
adc
sbb
lods
pop
cwtl
pop
mov
and
daa
mov
jle
mov
push
dec
mov
lret
pop
xor
arpl
lret
call
lret
mov
add
mov
sub
flds
inc
sbb
in
loopne
lret
mov
push
jnp
mov
dec
sti
inc
insl
and
test
mov
bswap
push
mov
and
fnsave
mov
mov
push
fmuls
jnp
stos
pushf
add
ds
mov
nop
dec
push
sub
in
mov
mov
mov
ficoml
stc
lods
or
pop
js
push
and
cmp
scas
inc
jne
xchg
push
outsl
adc
mov
mov
adc
mov
ds
jne
je
push
xchg
sti
jle
inc
adc
test
sub
ja
jmp
repz
cmpsl
loope
stos
outsl
mov
cmp
xor
out
inc
mov
mov
bound
jg
xchg
ds
xchg
mov
insl
sbb
aam
leave
jnp
hlt
nop
sub
mov
ljmp
jae
loop
fisttpll
in
mov
in
mov
mov
pop
add
repnz
jge
inc
test
outsl
sub
jl
fdivrs
ficoms
mov
xchg
pop
xor
push
cmpsl
test
lcall
inc
test
clc
add
cmp
push
cli
mul
outsb
mov
adc
popf
inc
xor
sub
inc
push
repnz
adc
jmp
push
sahf
pushf
hlt
xchg
popf
xor
dec
notb
iret
add
sub
dec
mov
xchg
outsb
adc
in
std
and
mov
mov
xorb
mov
lods
mov
mov
mov
enter
mov
jmp
lds
ljmp
in
sub
push
dec
push
fadd
bound
sub
push
adc
addl
or
into
or
and
lea
mov
adc
insl
lret
jl
add
adc
add
cmpsb
xchg
js
inc
mov
call
sbbl
adc
push
sahf
sbb
cmp
popf
fcoml
daa
ljmp
call
push
inc
imulb
xchg
scas
in
pop
jmp
push
cmp
dec
nop
sbb
popf
dec
lahf
aaa
sti
and
pusha
mov
sbbb
cmp
pop
fwait
push
idivb
stos
adc
movsl
inc
test
xchg
dec
loope
pop
mov
xor
mov
movsl
mov
or
sbb
jbe
and
aad
mov
les
sub
mov
sbb
jbe
pop
add
mov
pop
sub
sbb
lcall
add
je
int
pop
popf
sub
dec
sub
sar
ja
in
clc
mov
testl
pop
sbb
clc
add
outsl
scas
xor
lcall
sbb
dec
mov
dec
jae
outsb
testb
fld
jg
or
stos
add
popa
and
pop
dec
or
cmp
pop
push
or
cltd
out
je
mov
movsl
pop
imul
enter
sbb
mov
stos
imul
or
imull
pushf
test
dec
sub
or
mov
addr16
lods
sub
pushl
enter
and
outsb
mov
mov
cltd
ja
and
push
push
andw
call
testl
sub
xchg
scas
pop
or
int3
pop
movsb
mov
inc
lods
push
stc
pop
popa
in
stos
adc
into
mov
jnp
dec
mov
dec
lcall
mov
mov
xor
pop
decl
hlt
lds
add
stos
gs
call
pop
dec
aam
jl
jge
cmpsb
sbb
mov
dec
mov
or
insb
cli
inc
mov
jecxz
arpl
repz
clc
outsb
push
subb
je
add
lret
mov
pop
dec
adc
sub
repz
orl
popf
adc
pop
movsb
push
push
es
inc
fsubp
test
inc
cmp
push
pop
je
mov
sbb
pop
jle
cmp
das
pop
clc
adc
out
ret
cmp
sarl
sahf
mov
push
dec
inc
push
pop
mov
push
into
jmp
aad
push
lods
mov
mov
jo
pop
inc
pop
aam
sub
cwtl
enter
sub
jge
jne
xor
push
dec
das
sbb
lcall
fwait
pushf
imull
add
jb
testl
shlb
outsl
clc
movsl
jl,pt
sbb
clc
daa
enter
or
arpl
mov
andl
cmc
sbb
push
gs
add
int3
mov
jge
mov
jl
mov
push
pop
sbb
lret
movl
lcall
xor
push
adc
stos
pushf
lea
lods
sbb
pop
popf
dec
aaa
orb
adc
idivb
or
mov
jno
push
add
repz
add
mov
sbb
aad
pop
movsl
dec
sub
enter
adc
push
xchg
sub
jle
lock
sub
pop
mov
and
sub
repnz
inc
cmpsl
sub
lea
mov
sbbb
cmc
mov
xchg
adc
pop
daa
mov
repnz
mov
sub
add
mov
push
mov
mov
push
push
xchg
xor
inc
into
je
mov
cmpsl
ja
test
jle
int
in
push
pop
mov
stos
push
inc
enter
push
mov
ret
dec
test
push
aas
cmp
push
nop
ror
jnp
mov
rcll
js
das
mov
cmp
sar
add
sbb
pop
mov
sub
mov
sbb
lods
sbb
lahf
lds
jp
movsl
scas
enter
in
or
mov
pusha
sbb
ljmp
and
test
out
mov
lods
ficompl
jb
mov
aam
cmp
jno
cltd
mov
or
or
mov
cwtl
repz
call
enter
jg
shrb
js
scas
mov
fnstcw
lods
jg
lret
lock
rcrb
jp
stos
jns
js
jno
dec
pusha
mov
mov
cmp
je
jae
jb
jno
sete
scas
je
jnp
jns
inc
push
mov
jnp
inc
js
and
xchg
jne
insl
adc
test
int3
clc
enter
inc
jb
movsl
jo
mov
xor
jl
pop
jo
pop
daa
or
stos
jp
insl
mov
and
lock
fdivl
mov
inc
and
loope
mov
int
je
and
enter
ja
cmp
jne
je
mov
pop
and
out
or
inc
mov
bound
sahf
jg
sbb
jno
jge
mov
and
jp
int3
sub
cmc
les
add
xchg
js
sti
sub
push
ja
cmp
jne
je
pusha
clc
inc
int3
fxch
mov
dec
jne
je
jae
mov
lods
imul
push
xor
jg
mov
and
push
in
pop
jge
sbb
imul
jbe
mov
sub
lods
popf
js
and
enter
jle
xor
and
je
mov
mov
outsl
mov
out
fbstp
mov
sti
pop
hlt
sar
push
bound
and
in
adc
jle
int3
mov
aaa
ja
lret
jnp
push
and
insl
scas
jns
and
enter
ja
inc
push
jo
mov
and
je
int3
mov
dec
shlb
insl
dec
sbbb
loopne
cmpsb
ja
xchg
mov
sbb
jecxz
imul
jp
push
xchg
jbe
mov
imul
in
je
jae
jb
pop
jno
lret
pop
pop
jo
or
cs
loope
sti
jnp
cmpl
jns
mov
fmull
js
out
loopne
ja
mov
xchg
dec
jbe
adc
test
xchg
je
out
loopne
jae
jb
out
fildll
xlat
or
sub
lock
leave
or
andb
add
push
addr16
jb
pop
nop
push
daa
sbb
out
fistpll
into
xchg
test
fdivrl
int3
cli
push
adc
fs
xchg
pop
ja
sub
jne
jb
or
and
sbb
xchg
mov
nop
ljmp
push
mov
bound
sub
pop
js
int3
push
push
fsubrl
sub
addr16
pop
je
in
jae
out
fisubs
adc
stos
fnsave
sbb
andb
fs
mov
insl
cmp
xchg
push
jle
sub
jge
nop
cmpb
mov
dec
insl
sbb
sbb
test
ja
add
jo
js
cmpb
divb
xchg
hlt
xor
and
jge
addr16
and
jnp
ja
ja
popa
mov
out
mov
jno
sbb
jmp
insb
xor
jge
push
aaa
push
xor
xchg
js
ja
out
adc
ds
cmp
xchg
inc
jne
adc
xchg
pop
popf
out
bound
pop
xorl
xchg
dec
cmpb
jg
nop
scas
jle
jl
push
bound
bound
mov
js
sbb
dec
int3
popf
ja
inc
jbe
push
ja
xor
cmpsb
pop
jb
insb
mov
inc
cmp
rcrl
sub
lea
dec
jp
sbb
or
outsb
ja
pop
jbe
jne
je
mov
jbe
je
jae
int3
repz
add
or
lret
ja
loopne
aad
stos
jge
jnp
and
or
jno
mov
js
adc
xchg
mov
pop
ja
mov
xchg
adc
out
pop
call
lock
jb
and
scas
outsb
jle
nop
cld
jge
jl
pop
xchg
xchg
jnp
sub
pop
nop
daa
jns
js
pop
in
jne
mov
xor
loop
divl
and
negb
lcall
nop
cmp
and
sub
enter
ja
pop
jbe
mov
cmc
and
xlat
add
pop
orb
insb
jns
insl
arpl
sbb
out
fistps
sbb
outsb
pop
jno
lret
stos
nop
dec
imul
jle
fildll
and
or
fwait
imul
jo
sub
subb
xchg
jle
inc
xchg
pushf
jge
sbb
insl
push
lods
jl
sbb
sbb
mov
adc
test
nop
jns
out
fbstp
inc
xchg
cmp
adc
xchg
sub
lcall
pop
fbld
dec
xor
sub
xor
sbb
clc
jmp
mov
jnp
out
loopne
jbe
mov
scas
in
xorl
push
loopne
jno
mov
rorb
push
xorb
mov
lret
push
out
loopne
jl
pop
ds
jp
xchg
mov
sarl
xchg
movsb
je
sub
mov
loopne
stos
jb
int3
cli
enter
jno
or
push
xchg
xor
jg
dec
jle
push
dec
sub
jb
jl
jp
jns
mov
outsl
pop
js
out
fildll
gs
xchg
nop
je
adc
xchg
pop
adc
xchg
mov
pop
cs
in
mov
pusha
xchg
cmp
lds
pop
jg
popl
sahf
jge
mov
xchg
stos
jnp
mov
adc
jns
jbe
jne
lods
stos
js
jbe
sbb
and
mov
sbb
jb
and
adc
fmull
bound
fnstsw
sbb
mov
and
int3
xchg
inc
movsl
cmpl
cli
sbb
test
sub
dec
xchg
jmp
mull
push
pop
scas
andb
popf
test
arpl
inc
int
mov
sahf
ja
dec
jbe
jne
jge
pop
and
pop
rcl
mov
clc
pusha
test
mov
clc
xchg
test
mov
movsbw
not
pusha
mov
mov
mov
setge
neg
inc
mov
test
inc
neg
test
mov
neg
rcr
bt
xor
lea
jmp
sar
not
not
test
mov
call
push
call
fimull
ficomps
cld
add
out
fidivs
bound
dec
mov
mov
pop
push
aad
or
lods
mov
pop
rcr
push
cltd
mov
xchg
mov
loopne
xchg
in
add
cmp
dec
or
hlt
pop
hlt
scas
mov
addb
jb
add
stc
insl
pushf
add
fsubl
cmpsl
insb
inc
icebp
sbb
or
or
inc
iret
inc
pushf
pushf
mov
add
add
clc
sub
ja
pushf
add
lea
push
jmp
xchg
mov
ljmp
popa
fists
fisubl
data16
mov
or
js
fistps
ficompl
and
dec
dec
data16
repz
and
jno
mov
fisubrl
or
rorb
pushf
or
mov
imul
sub
dec
cmp
cld
or
xchg
and
dec
xchg
adc
adc
mov
fucomi
sbb
and
ljmp
dec
cltd
cmpsl
mov
mov
mov
mov
or
jns
imul
sbb
shll
ds
cmp
int3
into
stc
add
adc
movsb
adc
sub
xor
repz
mov
sub
pop
or
arpl
mov
mov
dec
dec
dec
dec
ds
pop
lret
lahf
xor
jmp
lahf
pop
data16
mov
daa
addr16
scas
or
dec
mov
xchg
lds
mov
fistps
call
inc
cltd
movsb
fstps
gs
imul
push
fstl
daa
jnp
mov
dec
push
imul
enter
mov
loopne
or
fsubs
xor
push
in
adc
add
lcall
xchg
in
incl
add
bt
mov
stc
push
push
add
jbe
test
call
push
push
pushf
lea
jae
test
sub
pusha
call
call
bsr
xor
pusha
mov
movw
mov
lea
push
mov
call
push
call
mov
gs
add
cmp
mov
call
movw
lea
je
and
and
test
shrd
mov
adc
mov
stc
xor
bt
pusha
jmp
push
call
add
push
dec
gs
dec
pop
push
call
outsl
fscale
push
call
pop
pushf
mov
lea
call
push
call
clc
adc
or
add
je
imul
inc
add
sbb
add
bt
stc
pusha
pushf
cmp
pushl
lea
jae
not
mov
lea
setnp
adc
mov
and
rol
mov
cmp
bt
clc
cmc
xor
test
repnz
push
lea
jne
dec
mov
inc
inc
bsr
call
iret
and
xor
dec
in
dec
and
repnz
xor
lahf
dec
mov
dec
dec
or
cmp
lods
xor
add
int
add
add
jmp
sbb
push
pop
or
mov
xor
mov
mov
dec
xchg
jbe
jo
cmovo
js
mov
xchg
jg
fwait
jmp
out
pop
jge
xchg
leave
jl
loope,pt
addr16
decl
push
out
das
sub
push
aaa
push
mov
call
rcrb
call
mov
fnstsw
mov
jl
in
inc
pop
ret
into
scas
jnp
imul
jbe
push
mov
sub
sbb
jecxz
ret
inc
mov
sub
mov
loopne
sbb
cmpsl
push
add
into
cld
mov
push
call
xor
fs
cmp
xor
and
dec
idivb
stos
mov
clc
and
das
add
jns
loope
jl
xchg
stos
lret
stos
and
dec
xor
cwtl
es
add
leave
xchg
or
loope
pop
aas
pop
pop
push
inc
imul
jp
test
mov
test
in
mov
test
add
jne
ret
jae
add
gs
cmp
push
call
in
lahf
out
testb
icebp
add
or
stos
into
orl
cmp
fldcw
mov
mov
sbb
scas
repnz
push
pop
dec
inc
cmp
loopne
sbb
push
call
push
popf
xchg
push
call
into
mov
ret
push
call
xchg
dec
pop
fildll
push
mov
ljmp
iret
jmp
imull
ret
ds
movsb
jge
xchg
jns
popl
inc
xor
cwtl
jb
inc
ud0
mov
mov
into
loopne
push
mov
sarb
andl
loopne
imul
xchg
xchg
ja
mov
ss
insl
push
outsb
in
dec
repnz
push
jae
repz
lods
insl
add
mov
stc
out
ficoml
into
and
lahf
mov
jb
lds
divb
mov
test
xor
mov
pusha
mov
loop
jbe
mov
mov
xor
jp
push
dec
popa
pusha
les
test
jns
and
mov
in
add
xchg
push
adc
jo
repz
dec
aad
push
xchg
jl
mov
jo
shl
outsl
and
aas
stos
ss
push
push
popa
jbe
popf
xor
sub
push
xchg
ret
sub
and
fdivs
notl
aaa
aam
sahf
call
push
mov
iret
push
and
jecxz
mov
test
push
mov
ja
mov
cli
scas
outsb
pop
mov
out
mov
cwtl
mov
aad
jle
sub
stc
mov
inc
outsb
pop
dec
mov
mov
xchg
xor
pop
pop
jmp
mov
jge
xchg
inc
fs
mov
lea
mov
dec
fdivl
mov
dec
cmp
sbb
and
adc
add
mov
sub
stos
lods
out
icebp
mov
jle
push
mov
iret
sub
sar
pushf
mov
mov
push
inc
movsl
clc
pop
je
les
stc
enter
mov
dec
ljmp
out
andb
xor
and
dec
scas
xor
hlt
mov
aas
popf
ret
or
clc
inc
mov
jl
bound
sub
jae
push
ds
and
cwtl
stc
add
push
push
pusha
pusha
mov
or
in
movsb
repnz
scas
insl
inc
loope
xchg
add
outsl
lock
lret
cmp
and
push
scas
xor
pop
adc
mov
sti
frstor
xchg
test
sub
movsl
mov
lods
xchg
in
lock
ret
jge
gs
dec
test
xchg
xchg
sub
cld
test
sbb
add
dec
push
xchg
xor
xor
movsb
lods
xchg
cmp
loopne
sub
adc
sbb
xchg
rclb
inc
insb
shlb
std
xorl
mov
or
mov
pop
movsb
mov
jb
cmp
rorl
decl
in
add
xchg
out
mov
rorb
pop
jns
addr16
cmp
xchg
sub
pop
mov
mov
aaa
xchg
sbb
push
push
inc
mov
lret
xor
pop
ret
mov
sub
lods
mov
xlat
repnz
les
cmpl
outsb
mov
mov
fisubl
fisttpl
rcrb
imul
xor
jecxz
mov
outsl
jge
movsl
lahf
xor
out
mov
jnp
add
pop
add
lds
mov
int
mov
loope
mov
mov
xchg
ss
lret
inc
jne
mov
mov
and
mov
aam
mov
jbe
aas
push
xor
mov
loopne
fs
cld
out
arpl
mov
cmp
mov
xor
dec
movsl
stc
repnz
adc
lret
lret
mov
jecxz
mov
jno
popa
xchg
sub
jge
mov
cmp
fcoml
stc
jb
cld
mov
pop
rorl
pusha
xchg
mov
or
pop
rcr
sub
popa
test
add
lahf
mov
les
fcmovnu
mov
imull
movsl
test
mov
nop
pop
push
iret
call
cmp
push
adc
cmpl
loope
in
nop
shl
testb
out
lahf
sub
frstor
or
sub
outsl
xchg
cmpsl
insb
cmpsb
push
sahf
das
mov
mov
mov
add
push
and
shlb
jne
mov
and
outsl
push
movsb
add
dec
ret
pop
mov
nop
pop
adc
andl
pushf
jo
std
shll
lea
sti
mov
into
add
mov
mov
pop
test
or
xor
setno
sub
mov
int3
xor
lods
sahf
insl
push
mov
pop
push
stos
pushf
mov
cmc
pushf
test
scas
sub
stos
outsb
lods
clc
lods
pushf
test
scas
mov
lods
movsb
mov
pushf
scas
mov
sub
lods
adc
cwtl
movsb
insl
mov
in
je
push
out
iret
pop
insb
ja
popf
jb
lahf
stos
cmpsl
test
aas
aaa
test
ljmp
sbb
xor
xor
jne
lcall
das
lods
sbb
xchg
das
dec
sub
lahf
test
das
mov
xchg
leave
daa
push
imul
cltd
test
xchg
xchg
sbb
outsb
rclb
push
cwtl
mov
sub
in
data16
fmull
test
mov
imul
jo
lret
in
hlt
lahf
loopne
xchg
dec
scas
mov
inc
mov
ja
fwait
mull
inc
sub
cmpsl
jl
sub
xor
jo
insb
jmp
jle
pop
mov
pop
and
jo
and
test
aas
dec
rcrb
ss
sbb
mov
lock
mov
iret
xchg
pop
inc
aam
jmp
fsubrs
or
pop
adc
lods
mov
test
pop
xchg
stmxcsr
xchg
out
stc
pusha
scas
pusha
ds
cmp
cmp
dec
dec
sarb
inc
clc
inc
mov
movsb
call
icebp
and
dec
xchg
mov
and
xchg
add
cmp
push
rorb
dec
and
clc
into
pop
dec
sub
cwtl
adc
nop
sub
xor
sub
adc
lea
mov
shlb
sbb
add
dec
or
clc
mov
inc
dec
sahf
pop
dec
ds
cmp
stos
mov
rcr
scas
clc
cwtl
ljmp
or
mov
mov
dec
inc
pop
sub
movsb
ljmp
mov
cmp
pop
cmpsl
add
sub
insb
dec
call
lods
or
popa
dec
inc
mov
stos
xchg
mov
cwtl
movsb
outsb
lock
inc
dec
inc
js
dec
jle
xchg
push
clc
jo
cltd
pop
bound
movsb
fsubrs
jl
test
int
dec
lods
push
mov
cwtl
mov
mov
das
sub
lahf
popf
xchg
pop
mov
std
or
dec
mov
test
mov
pop
imul
mov
rolb
sub
push
xor
nop
movsb
dec
inc
cmp
inc
dec
mov
std
insb
push
dec
das
nop
mov
addr16
nop
les
ret
in
outsl
inc
pop
dec
lods
inc
inc
pop
inc
dec
es
orb
cmpsl
mov
jo
addr16
lock
mov
jge
xlat
jnp
call
mov
mov
iret
xchg
mov
movsl
in
aaa
dec
popf
jbe
mov
cwtl
dec
arpl
pop
into
cli
cmp
out
pushf
cwtl
xlat
xchg
sahf
push
mov
aaa
in
out
sbbl
xorb
dec
push
lahf
pop
cmp
sub
cmp
xchg
mov
lods
pop
xor
daa
cmc
sahf
xchg
jb
adcl
inc
and
sbb
lock
shlb
push
cmp
cmp
dec
loopne
pusha
ds
cmpsb
dec
jl
jge
inc
lea
cmp
adc
jbe
inc
outsb
dec
cmp
adcb
fwait
dec
inc
dec
sahf
dec
mov
sub
cmp
mov
jne
js
xor
arpl
addr16
dec
adc
inc
insb
mov
dec
aaa
cwtl
cld
bound
adc
mov
push
pop
sub
ja
test
jno
xchg
push
test
stos
or
sbb
pop
dec
inc
pop
movsl
pop
imul
pop
mov
outsl
push
out
dec
clc
push
shlb
ds
push
insb
adc
dec
fs
and
test
popf
pop
aas
lock
jnp
test
dec
fldz
xor
test
aaa
call
cmp
pop
rcrb
lods
addr16
sub
cmp
sbb
in
lods
lcall
fdivs
pop
jmp
orl
mov
je
daa
lahf
into
mov
enter
sbb
ljmp
aam
pop
shlb
sbb
insl
sbb
cmpsl
jno
pop
mov
emms
jecxz
das
mov
cmpsl
xchg
xchg
pop
pop
cmpsl
xor
push
jle
xchg
mov
nop
and
mov
sti
sub
jmp
push
pop
sahf
aas
push
and
clc
mov
clc
cmp
imull
fisubrs
jle
pushf
jae
pop
adc
inc
cmpl
dec
fs
rolb
push
xchg
test
mov
xchg
cli
pop
sub
pusha
fwait
add
fwait
inc
add
stc
push
add
inc
daa
dec
sahf
push
mov
pusha
sub
push
gs
imul
pop
or
pop
fisubrs
sub
imul
xchg
js
and
mov
mov
add
addb
push
mov
leave
in
sbb
movsb
ds
jo
cmpsl
repnz
lods
lret
sti
mov
inc
pop
shlb
stc
lahf
adc
leave
sub
clc
and
jns
dec
rolb
jne
test
cmpl
jo,pt
mov
push
sub
aaa
xchg
jo
lods
adcb
pop
sbb
loope
dec
repnz
pop
arpl
sbb
dec
subb
cwtl
in
mov
pop
cmp
pop
and
bound
cmpsl
adc
test
push
sbb
popf
bound
dec
cmp
out
lods
rorl
js
shlb
inc
pop
aaa
addl
test
call
insb
adc
cmp
call
sub
cmp
or
addr16
lock
mov
cmp
sarl
cmp
cwtl
push
cmc
inc
dec
push
xor
jno
bound
sub
xor
nop
pop
inc
jns
ds
cmp
inc
mov
orb
call
dec
mov
and
sub
jo
jle
cmp
mov
jo
lock
dec
sbb
outsl
in
loope
lods
fsubl
xchg
loop
dec
jle
and
lods
sub
test
sub
fbstp
cmp
ds
mov
out
out
rcrb
push
enter
and
add
inc
lea
imul
pop
loopne
insb
cld
cmpsb
scas
push
push
dec
sub
push
lods
lock
or
daa
pop
cmpsb
ds
dec
test
jge
insb
daa
xlat
popa
push
add
call
mov
insb
or
sub
sbb
or
orb
xor
sub
in
pop
cmpsl
dec
daa
xor
mov
sbb
or
call
fdivrp
sub
cwtl
jl
nop
fsubrl
fldenv
in
repz
call
mov
or
push
push
add
xchg
sbb
mov
test
mov
push
enter
or
test
xchg
sbb
adc
cmp
jl
inc
movsl
stos
mov
xchg
push
je
in
int
popf
jg
xchg
jae
push
cmp
bound
cmp
test
sub
dec
enter
mov
js
js
adcb
inc
sbbb
jo
push
adcb
iret
adc
mov
inc
xchg
jnp
sub
ss
cmpsl
int3
sbb
dec
loop
mov
pop
sbb
cltd
sbb
cmpsl
ficoml
jg
sahf
mov
cmp
dec
iret
lahf
aam
sub
and
sahf
and
jecxz
inc
dec
cmp
loope
xchg
or
inc
pop
in
xchg
cld
insb
sub
cwtl
adc
std
sti
jp
dec
inc
seto
je
jo
lods
call
scas
xchg
cmpsl
insb
test
jnp
in
lods
cmpsl
pop
or
pop
jns
mov
in
lods
loop
mov
add
jl
sarl
cmpsl
insb
pop
and
into
dec
push
push
push
jns
fdivs
sub
nop
arpl
push
push
pop
popa
adc
cwtl
imul
and
adcb
cmp
dec
push
out
mov
mov
sub
rcr
inc
pop
aas
jnp
xor
pop
adc
or
stos
in
push
mov
insl
fs
insb
out
jg
je
inc
scas
icebp
cmp
dec
insb
mov
xchg
inc
lds
mov
mov
mov
sbb
cltd
mov
loop
dec
push
orb
mov
pop
insb
jge
pop
das
inc
push
test
add
xor
cmovge
ret
pop
pop
sahf
roll
mov
or
repnz
pop
adc
test
data16
mov
stos
popa
inc
in
push
aaa
xchg
xchg
mov
cwtl
out
outsl
cmp
push
fnstcw
aaa
dec
mov
jl
xchg
in
jge
jp
or
dec
xchg
cmp
xchg
fwait
inc
push
ja
pop
jns
push
arpl
dec
mov
inc
pop
jge
sub
xlat
dec
pusha
pop
inc
movsl
and
pop
adc
fcompl
xor
loopne
or
cmp
mov
ja
nop
push
js
mov
mov
mov
cwtl
xchg
lahf
jl
fs
dec
adc
xchg
test
ljmp
js
cmpb
sahf
hlt
mov
data16
pop
dec
clc
xchg
inc
adc
jle
cltd
je
mov
xchg
pushf
pop
clc
sub
jl
lahf
lock
push
or
lcall
imul
mov
dec
repz
and
pop
jnp
cwtl
dec
sub
sahf
sub
jo
fdivl
xor
insb
cmp
jo
movsb
sbb
sub
sub
jecxz
dec
cmp
in
and
nop
stos
sbb
jbe
inc
lret
out
dec
or
jo
arpl
lods
in
mov
out
pusha
leave
mov
dec
hlt
orl
popa
add
movsl
pop
adc
lea
lcall
aaa
push
mov
outsl
lcall
adc
sbbb
loopne
mov
lahf
movsl
dec
fists
pop
cs
test
push
aaa
insb
nop
jo
je
jl
jnp
mov
lret
push
sub
cmp
loop
sub
mov
mov
outsl
sub
mov
test
and
inc
cmpsb
loop
xor
and
inc
lea
sub
ja
jmp
jno
pushf
mov
xchg
pushf
clc
movsb
sub
mov
fdivrs
fstpl
test
test
adc
push
jg
adc
adc
cwtl
sub
fs
outsb
outsl
into
push
mov
shlb
loope
arpl
pop
inc
pop
pop
or
js
pop
bound
and
sbb
xor
fisubs
lock
or
arpl
pushf
sahf
stos
pop
jp
jle
sahf
jnp
nop
and
out
dec
jle
inc
fdivr
pop
mov
cmp
js
mov
inc
jp
cmp
cmpsb
lgs
cmp
lret
mov
ja
gs
js
xchg
shrb
cmp
shrb
mov
jg
cmp
dec
gs
insb
dec
or
sbb
insl
pop
mov
hlt
pop
std
cmp
subl
lea
jg
mov
std
loope
cmp
xor
or
data16
dec
lea
lea
inc
ljmp
or
test
data16
jp
stos
sub
ss
scas
out
add
pop
jp
sbb
aas
pop
ja
mov
pop
inc
mov
js
inc
xchg
ret
xchg
push
or
out
jmp
inc
dec
lcall
sbb
push
xor
arpl
sub
or
aaa
mov
ret
pop
jns
jbe
aam
push
fs
push
cwtl
cltd
imul
xchg
mov
add
sbb
sub
inc
xor
mov
insb
dec
xor
sbb
movsb
test
repnz
push
mov
fldcw
lods
mov
imul
stos
insl
jnp
sub
js
pop
test
rcrb
and
cltd
jbe
push
dec
cli
lods
sahf
aas
inc
inc
cmp
ror
mov
inc
mov
and
adc
xchg
lods
xor
inc
lahf
mov
or
lock
sbb
and
sub
orl
or
pop
into
iret
test
jl
mov
test
out
into
stos
into
mov
into
mov
or
xor
xor
sub
stos
inc
sbb
orb
add
lods
pop
push
cmp
aaa
dec
inc
cmpsl
jg
or
or
add
cs
inc
cmp
outsl
push
dec
aaa
mov
or
adc
nop
mov
loopne
cltd
push
mov
nop
cmc
sbb
bound
je
jp
cmc
mov
sbb
or
je
insl
gs
dec
test
subl
or
push
cmp
ljmp
dec
xor
adc
cmp
sbb
ret
imul
cs
cmp
test
in
jg
pop
bound
outsl
push
test
mov
out
pop
test
movsb
pop
fdivrl
iret
faddl
xchg
cmpsl
ret
cs
es
push
mov
fsubs
mov
dec
mov
movsb
fldl
jecxz
lahf
es
jb
popa
out
inc
shrb
in
pop
add
jle
jg
cltd
sub
xchg
push
stos
dec
or
scas
insb
clc
pop
pushf
sbb
call
es
scas
cwtl
inc
mov
jge
cmpsl
mov
aaa
lods
lahf
jo
xchg
jo
pop
or
xor
loopne
and
mov
xchg
stos
insb
sarb
push
test
lea
sbbb
pop
jl
cmp
inc
pushf
dec
je
pop
pushf
jb
push
and
adc
mov
fs
enter
and
lea
nop
dec
pushf
and
jo
push
xchg
fwait
push
pusha
cld
cmpsb
insb
inc
pushf
dec
jo
shlb
sbb
fs
pushf
sbb
or
out
test
je
insb
cwtl
fs
inc
or
and
clc
ljmp
mov
insb
xor
pushf
pop
add
or
mov
insb
loopne
pushf
adc
push
jo
mov
test
mov
or
dec
andb
xor
scas
insb
and
pushf
js
adc
test
cmpb
push
test
pusha
dec
insb
pushf
rcrb
mov
subl
xchg
js
sbb
or
cmp
pusha
adc
pushf
mov
push
call
imul
pushf
pushf
and
nop
insl
and
andb
add
insb
xchg
sbb
pusha
loopne
and
cmpsl
and
inc
dec
fs
call
cmp
hlt
test
jg
xchg
imul
sub
jg
pop
cmp
dec
das
insb
sub
or
add
call
pushf
out
pusha
cmp
jle
out
cwtl
jle
das
insb
mov
or
pusha
inc
lea
insb
pushf
cmp
jl
jo
or
lods
pop
clc
pusha
loopne
xchg
pushf
daa
test
dec
mov
jle
lea
test
mov
jo
clc
pop
and
insb
pop
dec
pushf
jb
pop
ror
jge
popf
or
push
test
pusha
dec
insb
pushf
clc
pushf
out
pusha
cmp
mov
insb
test
inc
xor
jl
iret
push
push
or
fwait
int3
adc
scas
fs
pop
pushf
lock
jl
sub
push
pushf
insb
je
adc
mov
call
and
pushf
daa
cwtl
cmp
fwait
cmp
fisubs
lcall
sti
pusha
mov
fsubrs
or
fdivs
jp
add
out
cwtl
jp
das
insb
mov
test
jb
sub
push
pushf
jmp
addl
inc
lods
sbb
or
int3
lock
and
out
pusha
stos
insb
enter
imul
mov
mov
mov
jns
mov
sub
dec
lock
orl
cmpsl
cmp
data16
daa
push
pop
mov
js
call
mov
sahf
js
mov
inc
pushf
scas
je
push
pushf
fisubl
hlt
and
xor
sbb
pusha
xchg
mov
lret
in
and
movsb
call
mov
sbbl
pop
insl
mov
push
sahf
movsl
mov
pop
inc
mov
sub
mov
insb
or
mov
push
fwait
insb
ficomps
mov
push
xchg
insb
mov
sub
dec
movsl
lahf
xchg
push
xchg
insb
xchg
lea
xchg
sahf
test
mov
mov
lea
pop
pop
mov
mov
push
pusha
or
mov
sub
jmp
sub
add
jmp
sub
fisubrl
jmp
sub
test
jmp
sub
xchg
jmp
sub
pop
sub
dec
sub
inc
sub
xor
jmp
sub
or
jmp
sub
fisubrs
jmp
sub
mov
out
cmpsb
enter
jg
into
jg
into
jg
into
jg
into
jg
into
fs
insb
scas
dec
push
mov
int3
and
je
clc
inc
mov
adc
in
in
dec
loop
dec
xlat
in
dec
int3
in
dec
shr
mov
dec
test
cwtl
lcall
mov
bound
inc
mov
sub
push
mov
repnz
mov
mov
je
push
nop
push
subb
push
pushw
pop
push
dec
push
cmp
je
push
and
adc
es
dec
cld
ds
ja
xchg
in
imul
call
mov
lods
lds
movsb
lea
test
jl
je
insb
and
mov
mov
cmp
fs
clc
vmovupd
push
out
mov
mov
sub
jmp
pop
sbb
or
test
add
mov
ds
pop
mov
shlb
mov
rcrb
sahf
xchg
test
dec
mov
dec
nop
jmp
mov
pop
xchg
xchg
sbb
test
push
insb
xchg
pop
or
dec
sahf
nop
mov
test
adc
in
xor
sbb
call
call
lea
mov
cmpsl
xorb
mov
xchg
mov
jl
add
jo
inc
push
jno
hlt
les
mov
pop
adc
fs
or
lods
fsubs
ret
jmp
mov
into
pop
jo
cltd
jmp
dec
enter
push
xorb
jo,pt
push
test
pop
pop
push
bound
dec
test
mov
jge
dec
xchg
xchg
dec
mov
fadds
sbb
lahf
movsl
mov
add
pusha
sub
jo
lret
clc
insb
clc
cmp
pop
sub
nop
sub
int3
add
push
loopne
or
cmpsb
adc
pusha
pop
rclb
lahf
lea
mov
into
mov
test
jae
mov
inc
ret
into
jg
gs
shlb
xchg
adc
insl
or
mov
rcrb
call
push
rorb
lea
jo
mov
ds
ja
sahf
scas
mov
mov
cmp
xor
sub
and
sbb
xchg
or
imul
sub
insl
inc
loopne
aad
call
jo
mov
lahf
mov
loopne
nop
mov
pop
and
test
js
push
push
push
pusha
mov
jmp
jle
sub
and
sahf
scas
mov
jle
adc
push
lock
test
call
imul
enter
mov
ja
push
cmp
push
nop
sub
mov
jmp
jle
js
sbb
pop
rcl
test
imul
aas
pusha
add
inc
test
rcrb
lahf
les
imul
int
enter
xchg
xor
and
sub
mov
or
adc
clc
lods
aaa
shr
mov
mov
jmp
fcoms
mov
or
stc
sub
inc
lahf
cwtl
mov
mov
test
dec
xor
inc
pusha
push
dec
xchg
jo
cwtl
push
imul
lock
and
into
mov
addb
jns
lock
mov
mov
mov
mov
mov
test
and
js
andb
fs
mov
mov
adc
lods
pushf
xor
lcall
imul
add
inc
xchg
lods
daa
fcoms
xor
mov
or
jle
addr16
and
pop
addr16
and
mov
dec
pop
dec
aam
daa
gs
bound
or
inc
call
fcoml
mov
mov
into
test
mov
mov
and
dec
mov
sub
dec
popa
xor
inc
imul
push
mov
gs
sub
aaa
gs
into
xchg
enter
lahf
cs
mov
xchg
lods
daa
fcoms
out
ja
lock
mov
push
fs
es
cmp
and
push
push
sbb
sub
cmp
ror
dec
cmp
fwait
adc
hlt
mov
clc
pop
call
ja
xchg
mov
mov
scas
insb
cwtl
arpl
js
or
push
push
mov
xchg
call
call
call
enter
loopne
add
pop
cmc
lea
loopne
insl
fsub
pusha
sbb
rcrb
rorb
in
or
mov
js
jo
cs
jns
pop
mov
inc
pop
out
adcb
call
sub
int3
cld
ds
cwtl
insb
and
inc
dec
lods
adc
xor
out
pusha
sub
movsb
pop
mov
clc
sbb
clc
hlt
cwtl
mov
push
push
push
mov
sub
add
and
movsl
mov
ror
dec
sti
nop
pop
stos
jge
out
or
cltd
mov
repz
inc
jo
xchg
mov
xchg
sub
mov
cwtl
and
and
clc
pop
jg
cltd
lods
pop
inc
xchg
hlt
push
js
pop
mov
pop
test
inc
daa
jmp
and
into
clc
stc
xor
cmp
and
out
fdivrs
mov
push
mov
mov
lock
push
mov
mov
mov
mov
push
into
mov
ja
sahf
pusha
jns
fs
pop
or
cmp
pop
nop
mov
or
and
mov
jns
pop
cmp
sub
cmp
repnz
sub
jo
mov
cld
add
and
imul
shlb
pop
xchg
sub
pop
js
add
dec
lock
fisttps
inc
xchg
mov
mov
push
inc
mov
jns
mov
call
pop
es
scas
test
xor
popa
sub
mov
lods
daa
sub
mov
jo
scas
ja
mov
andl
mov
push
rcrb
in
int3
test
cwtl
pop
orb
pop
inc
mov
jge
mov
xchg
leave
adc
imul
movsb
std
ljmp
test
cmp
test
fsubl
pop
or
lods
mov
ret
push
in
sbb
aam
jno
lds
icebp
or
stc
movsb
or
push
out
mov
dec
clc
loope
jns
or
pop
jo
scas
out
mov
jnp
pop
xor
mov
mov
dec
int
or
fcoms
jp
movsb
cwtl
add
rcll
into
stos
pop
test
jbe
sbb
sub
cmpsl
push
and
movsb
inc
loopne
mov
jo
mov
xor
lret
mov
fistpl
lea
push
mov
push
push
loopne
add
and
imul
and
mov
lret
orb
mov
or
mov
and
rcrl
fidivs
into
aad
jmp
out
mov
mov
sahf
mov
lret
sbb
cmp
xchg
stos
dec
je
outsb
insb
inc
mov
xchg
mov
aam
inc
mov
push
cmpsl
xor
dec
sahf
pop
nop
movsb
jne
insl
icebp
mov
xor
and
repz
push
pop
cmpsl
clc
mov
insb
fdivrp
jo
or
sbb
adc
daa
ss
cmpsl
insb
pop
jb
mov
mov
fcomps
loop
out
lods
cmp
jle
cmpsl
mov
adc
push
mov
insb
call
mov
sahf
dec
lods
xchg
push
pusha
insb
push
cmp
sub
cli
pop
call
mov
dec
scas
lcall
mov
sub
daa
cli
sahf
call
clc
nop
dec
insb
mov
je
fs
xor
daa
repnz
loopne
into
data16
je
mov
dec
jg
out
repnz
add
adc
daa
cmp
insb
insb
adcb
ret
aam
out
cli
mov
sbb
daa
cmp
jp
mov
jo
daa
aam
call
pop
push
mov
cmp
mov
jb
orb
rclb
sahf
cli
mov
push
cmp
daa
je
test
push
lahf
les
daa
or
ja
arpl
stos
nop
jne
jg
arpl
cmp
add
inc
int3
xchg
xchg
inc
mov
mov
xchg
js
push
push
jg
xor
pop
mov
sbb
aas
mov
lahf
sahf
jo
inc
pop
mov
daa
push
sahf
adc
xor
cmp
dec
mov
push
je
mov
mov
fimull
daa
sub
pop
pop
insb
mov
mov
das
sahf
loopne
clc
push
sub
daa
push
sahf
push
pop
movsb
mov
insb
loopne
daa
add
adc
es
div
dec
or
cmpsl
je
xchg
xchg
mov
int3
fsubs
out
sahf
add
mov
dec
pop
daa
outsb
pushf
mov
dec
xchg
scas
push
dec
int
fs
stos
lock
insb
add
daa
xor
xchg
icebp
insb
les
jl
push
push
nop
push
popa
xchg
or
lods
cmpsl
pushf
nop
mov
lret
add
pop
pushf
jbe
fisubs
call
mov
bound
cmp
bound
xorb
stos
mov
pushf
adc
inc
scas
lret
lods
pop
mov
cmpl
mov
jge
test
cs
clc
pop
xchg
dec
movsb
xchg
xor
ds
mov
fimull
mov
push
gs
mov
mov
and
test
push
cwtl
cmp
iret
jo
scas
mov
out
adc
pop
mov
mov
jnp
cs
mov
sub
fadd
xchg
stos
adc
ja
lahf
rclb
and
mov
jle
inc
cli
jmp
jnp
cs
mov
mov
mov
adc
ds
insl
push
repz
sbb
movsb
sarb
lcall
sub
scas
push
mov
stos
ss
fimull
leave
xor
lock
into
push
jo
mov
inc
repz
movsb
mov
lret
inc
shl
adc
pusha
mov
pop
lods
mov
stos
mov
insb
mov
adc
xchg
icebp
xor
cmpsl
ja
or
jae
out
or
inc
jmp
je
lret
test
in
cltd
lret
nop
dec
sbb
nop
mov
xchg
mov
pop
mov
mov
gs
icebp
add
mov
stc
aaa
rcrb
xchg
add
ss
scas
jmp
and
sub
dec
mov
add
xchg
cld
roll
mov
lret
lock
mov
or
call
mov
scas
inc
aam
jne
lds
clc
je
jmp
aad
lock
sub
xor
mov
jle
cmp
iret
lahf
cltd
push
ret
nop
push
jo
inc
mov
xlat
push
mov
or
mov
xchg
and
pop
jbe
mov
lods
jg
orb
mov
sbb
adcb
clc
mov
pop
mov
lods
int3
dec
dec
lock
imul
out
jno
jge
ret
fidivs
pop
jns
sbb
notl
dec
push
rorl
and
jl
loope
or
xchg
loopne
mov
mov
inc
int3
test
cmp
mov
sub
rcll
movsb
mov
lea
xchg
xchg
mov
pusha
pop
ljmp
inc
in
daa
lock
push
or
mov
dec
loope
outsb
xor
or
add
int3
xorb
mov
aad
fwait
dec
pushf
in
mov
je
cld
or
lods
out
fldl
ret
dec
movsl
mov
out
cld
in
call
sub
out
push
cmp
push
or
sub
mov
loope
pop
mov
rorl
fcompl
fdivrs
jbe
dec
scas
cmpsl
xchg
jns
pushf
pusha
jl
jne
cli
mov
addr16
adc
lcall
lods
daa
dec
cmpsl
xor
stc
jne
pop
int3
and
fsubrl
subb
data16
pop
mov
shll
sub
mov
jns
lret
mov
jg
mov
mov
dec
xor
stos
or
lds
lock
jno
je
aam
adc
cmpsl
rorl
mov
add
lea
cmpsl
push
sub
pop
nop
add
loopne
xor
mov
pusha
test
push
or
mov
nop
adc
sbb
lods
popa
cli
pop
inc
sub
push
push
sbb
mov
sub
jno
cmpsl
jl
aad
mov
mov
lock
in
or
mov
stos
movsb
inc
cwtl
jnp
sbbl
test
mov
ja
sub
and
mov
scas
test
inc
lock
cltd
inc
pop
mov
xchg
inc
jmp
pop
enter
nop
pop
stos
mov
in
pop
sub
fstpt
adc
enter
xchg
push
adc
mov
movsb
loop
xor
lcall
outsb
pusha
mov
dec
jge
or
push
xlat
into
adc
jg
dec
das
mov
ss
xor
push
push
or
mov
movsb
cwtl
in
push
mov
loop
inc
mov
push
fadds
add
mov
test
pop
lock
mov
cmp
test
adc
jo
pop
ja
mov
movsb
shrl
adc
and
loopne
repz
add
xchg
aad
ljmp
ds
cmpsb
rcl
fs
jp
and
das
and
in
pushf
pop
and
repnz
lcall
dec
or
shr
in
xchg
fidivl
clc
frstor
scas
push
sub
rcrb
xchg
pop
sahf
stos
add
cmc
and
call
js
fs
inc
jae
mov
ds
jmp
push
and
adc
pop
ret
push
mov
xor
mov
jmp
stos
arpl
lahf
xlat
mov
jmp
dec
out
fcmovu
push
pop
cmp
and
mov
loopne
jae
dec
adc
into
adc
and
andb
imul
shlb
test
mov
mov
xorl
push
xchg
dec
sub
jmp
xchg
in
or
xchg
mov
call
and
xor
lret
movsb
fwait
push
imul
mov
xor
adc
push
loope
cmpsb
cltd
pop
jmp
mov
jns
xchg
in
stos
add
add
icebp
aaa
dec
lods
outsb
shrl
mov
les
nop
sub
loop
lds
jbe
test
outsl
lret
xchg
icebp
rcl
js
dec
mov
shlb
sub
push
cmp
andl
sub
sub
fstpt
test
mov
adc
shrb
add
lods
int3
inc
rorb
loop
xchg
cmp
sahf
jae
push
data16
push
lcall
loopne
fcoms
mov
cmpsb
call
jmp
stos
test
pop
popf
ret
scas
dec
sbb
and
push
setge
sbbb
dec
sbb
and
cmp
loope
or
push
std
lea
mov
or
out
and
gs
fmuls
test
dec
shlb
stos
icebp
popf
gs
nop
mov
jne
nop
pop
push
mov
stos
sbb
sbb
pop
jnp
xor
int3
mov
adcb
jbe
fwait
mov
icebp
ss
je
cmp
mov
mov
add
xor
push
cwtl
jo
lods
fstl
mov
scas
lahf
cmovg
sub
mov
call
jnp
aaa
fcoml
sub
pop
stc
xchg
aad
out
inc
test
xor
pusha
cli
scas
scas
push
jns
pop
mov
dec
mov
dec
rcrb
dec
sbb
lods
incl
or
rcll
ret
xchg
jo
jb
xor
jp
outsl
addb
movsl
mov
mov
stc
add
xor
fcmovbe
xchg
mov
inc
lds
mov
jl
iret
cltd
xor
adc
cmp
mov
fldl
cmp
ja
div
stos
add
mov
inc
fdivl
in
insl
pop
loop
mov
cmp
xor
test
lods
shrl
push
and
daa
mov
rolb
aam
es
stc
mov
test
jmp
or
sub
pop
stos
push
jl
outsl
ja
push
lods
mov
loopne
int3
in
dec
test
movsl
pusha
add
jo
sub
ret
repz
cwtl
in
pop
pusha
add
shrb
jl
xor
into
fmull
adc
mov
fistpl
stos
lods
or
inc
add
jge
mov
adc
imul
jns
nop
clc
jp
mov
mov
mov
mov
push
inc
xchg
notb
push
dec
and
push
jbe
add
scas
pushf
lock
fbstp
mov
daa
and
and
inc
sub
cltd
dec
push
aad
pop
push
shrb
jbe
push
scas
xchg
imul
inc
mov
sti
add
mov
fldenv
push
jecxz
and
cltd
sbbb
ljmp
out
mov
lock
mov
mov
fimuls
adc
in
inc
test
jnp
ja
subl
imul
mov
or
das
pop
mov
in
sbb
xor
mov
cmp
and
sbb
adc
in
push
inc
and
icebp
xchg
in
loopne
std
push
or
push
dec
add
sub
jbe
sbb
rclb
mov
daa
cmp
dec
mov
frstor
mov
mov
stos
dec
xor
sbbb
inc
xchg
fs
mov
push
mov
jecxz
pop
sub
out
test
bound
js
inc
cmp
adc
push
xchg
scas
mov
sbb
xor
inc
fs
dec
jmp
cs
sarl
mov
loope
es
imul
ret
stos
adc
lods
mov
inc
out
pop
mov
push
cmpsb
js
lea
aad
dec
repnz
push
sti
add
adc
mov
lds
inc
mov
xchg
jnp
inc
lahf
xor
adc
outsl
std
sub
mov
pop
and
lahf
pop
movsb
mov
es
pop
lock
inc
add
sbb
ret
out
test
jnp
lods
sahf
sbb
outsb
sbb
jp
pop
loope
shrb
and
insl
cmpl
repnz
dec
stos
xchg
push
push
leave
mov
popa
push
adc
mov
sub
movsb
mov
lock
mov
mov
push
jns
push
pop
jno
jno
loopne
push
and
nop
and
addr16
stos
data16
pop
fs
pop
dec
sub
dec
and
xchg
es
mov
out
mov
fidivrs
ret
or
pop
mov
stc
arpl
inc
stos
movsb
in
mov
mov
int
jle
cmp
inc
xor
mov
pop
scas
addb
outsl
push
bound
pop
pop
loope
daa
dec
test
pop
jno
out
mov
mov
popl
test
es
adc
cld
lret
mov
mov
sbb
in
nop
cmp
aad
mov
sub
mov
popf
repnz
jno
int
lea
inc
outsb
sub
scas
test
mov
push
fcoms
mov
fsubrl
shlb
xchg
hlt
fnstcw
stos
mov
push
sahf
imul
lock
cmpb
frstor
xor
imul
lahf
icebp
mov
inc
lods
out
ds
scas
cmp
bswap
ss
mov
sahf
mov
xchg
xchg
je
outsl
std
xchg
xchg
out
xchg
lock
mov
sub
xchg
js
and
icebp
push
imul
test
scas
ret
das
enter
daa
jns
mov
loop
inc
push
mov
scas
std
lcall
mov
lcall
sarb
fldcw
push
xorb
lock
pop
sbb
js
cld
stos
push
sbb
add
cwtl
dec
xchg
addb
loopne
sti
mov
test
mov
cmp
pop
sbb
or
into
sub
mov
ljmp
and
push
or
jge
fsubrl
push
cs
enter
xchg
xchg
lahf
mov
loope
jns
fstpl
rolb
in
mov
ficoms
out
popf
ss
daa
sub
lock
mov
mov
add
sbb
sub
fcoms
mov
push
out
scas
lods
mov
jo
cwtl
mov
mov
xor
loop
pusha
loope
lea
lcall
cmp
mov
mov
loope
cmp
sarl
loopne
push
ds
out
inc
add
xchg
rol
imulb
clc
or
push
in
push
lods
cwtl
jo
xchg
cld
ds
mov
mov
cmp
in
or
cltd
outsb
scas
xor
cld
xorl
mov
push
mov
xlat
cmpsl
pop
out
pop
jb
cmp
xor
and
scas
sbb
in
scas
mov
sub
out
xor
adc
scas
es
jb
iret
push
mov
and
stos
pop
dec
add
ja
push
sub
insb
mov
mov
lahf
mov
inc
lods
cmp
insb
or
in
scas
cltd
adc
es
in
xor
mov
movsb
sub
loopne
dec
mov
dec
cmp
sbb
es
nop
xchg
cld
cmp
jo
sbb
movsl
aad
jae
je
pop
mov
pop
xchg
and
cmpsb
adc
cmp
mov
cmp
in
scas
out
push
gs
xchg
mov
sbb
stos
xchg
xor
mov
xchg
cmpsb
int
inc
jo
mov
push
mov
mov
sub
jne
pop
std
stos
xchg
test
and
or
sbb
inc
add
lods
jbe
adc
xchg
add
push
loop
scas
sub
sub
out
popf
jp
inc
test
add
lods
addr16
sbb
test
mov
call
pop
xor
fldcw
dec
sub
stc
repz
mov
push
in
dec
les
mov
ja
inc
xchg
sub
xadd
pop
scas
leave
sbb
stc
das
cwtl
cmc
fdivl
in
je
fiadds
push
setg
lret
daa
leave
mov
rorl
sub
cli
js
pushf
xor
and
add
les
arpl
mov
or
sbb
fcomi
add
mov
xchg
out
fisttpll
aam
xor
mov
add
out
imul
pop
les
inc
mov
push
lock
scas
or
add
addr16
imul
nop
iret
ljmp
fisttpll
push
add
sub
jo
test
xor
cmp
dec
xchg
xchg
fsub
int
test
ret
xor
push
sbbb
pop
sbbl
cld
test
faddl
mov
cmp
out
ds
jg
icebp
clc
pop
mov
test
push
add
add
insb
test
daa
inc
imull
out
movsl
insb
pop
enter
test
xchg
sub
bound
jmp
cmp
pop
mov
adc
outsb
push
or
stos
push
aad
jbe
xchg
xchg
aaa
jo
je
std
add
inc
xorb
sti
cli
cmpsb
test
lods
enter
adc
sub
loop
cwtl
mov
scas
test
cltd
jo
inc
ret
add
cmpxchg
mov
and
or
jo
mov
repz
xchg
push
dec
outsb
jle
xchg
fmull
lods
jl
sbb
stos
das
sub
jb
cmp
test
cmp
sbb
iret
adcl
ficomps
cmpsl
nop
cmp
mov
jbe
lret
or
xor
ds
mov
mov
mov
shlb
pop
scas
adc
jnp
pop
lds
xchg
push
and
es
popa
cmp
stos
inc
lods
ds
or
sti
jb
in
das
fiadds
hlt
mov
scas
push
iret
inc
pop
cltd
xorb
mov
in
mov
pusha
push
push
icebp
loop
cmp
push
mov
lret
loopne
inc
leave
stos
les
mov
fwait
shll
jo
repz
inc
lods
mov
add
xor
jle
movsb
inc
xor
xchg
dec
jae
push
mov
pushl
clc
leave
xchg
dec
jnp
sub
xchg
mov
xor
loop
xor
test
adc
sahf
cmp
ja
cmp
divb
dec
xor
fadds
or
jg
sbb
mov
and
stos
enter
bound
cmp
sub
fisubrl
push
out
mov
or
je
dec
insl
out
mov
jno
adc
cwtl
fcmovu
xor
stos
mov
xchg
pushf
sbb
scas
sbbb
je
mov
pop
xchg
or
inc
lods
mov
bound
adc
jno
mov
push
lods
loope
sbb
add
pop
push
jbe
add
push
pop
ss
inc
dec
mov
pop
loope
xor
jmp
rcr
xor
and
pop
fwait
mov
faddl
cmpsb
dec
mov
xor
jbe
ds
es
hlt
jno
cltd
rorl
lcall
sahf
call
mov
mov
xchg
mov
xchg
into
clc
pop
mov
jg
fcomps
sub
xchg
loop
jmp
mov
inc
pop
rorb
stos
add
cmp
mov
pop
addr16
cmpsb
xlat
or
mov
test
push
clc
push
mov
stos
mov
cmpsb
sub
ds
xor
test
cmp
xor
lahf
movsb
adc
add
add
adc
test
lods
xor
lods
push
add
pop
in
lcall
lea
insl
xor
arpl
jg
sub
movsw
lods
xchg
out
sub
outsl
mov
mov
dec
mov
or
add
mov
push
jmp
adc
lods
xor
loope
rorb
push
mov
and
cmp
test
sub
scas
inc
mulb
outsl
mov
test
mov
scas
or
adc
insl
cwtl
xchg
cmp
ret
sbb
ret
push
pop
xchg
push
pop
outsb
dec
jg
fstpl
mov
jo
in
adc
mov
mov
jecxz
scas
cmpsl
lock
and
inc
inc
mov
cmp
movsl
jp
test
xchg
mov
fists
push
ret
lcall
into
loope
test
adc
push
sub
jae
sahf
xor
push
scas
mov
lea
jns
in
dec
and
les
cmp
adc
xor
push
jmp
mov
addr16
mov
pop
pop
push
mov
xor
mov
dec
or
cmp
loopne
mov
ror
movsw
mov
inc
insb
mov
mov
mov
adc
sti
shlb
adc
lcall
cmp
xchg
lret
mov
test
ss
scas
cli
sti
loope
jle
mov
inc
xchg
xchg
imul
jg
rcrl
adc
insl
subl
pop
nop
push
dec
jae
rorl
mov
lret
pop
mov
add
inc
and
xchg
arpl
jp
loopne
jae
out
xchg
pop
popf
jbe
dec
out
mov
cmovg
adc
mov
jo
inc
add
js
pop
mov
into
inc
lods
insl
push
popf
cmp
lods
ret
out
xchg
dec
shl
jo
xchg
pop
in
sub
adc
cmp
inc
sti
mov
inc
bound
mov
pushl
in
xor
imul
lods
or
lret
arpl
ja
addr16
push
imul
xor
rclb
sub
mov
adc
mov
add
fidivl
xor
je
push
sub
mov
or
mov
in
push
js
sub
push
mov
mov
mov
pusha
lea
jne
jmp
push
call
push
stos
iret
call
push
call
fwait
dec
sub
add
test
mov
cmp
clc
test
add
test
add
pushf
pusha
movb
lea
jmp
aaa
pop
divl
lcall
int3
subb
sahf
imul
and
push
shl
adc
jne
and
cmp
test
or
jl
mov
pop
and
shl
out
loop
test
jle
div
mov
cs
imul
mov
pop
mov
sub
mov
mov
jns
cmp
iret
dec
std
popa
xchg
jne
popa
inc
test
jecxz
imul
lods
je
or
mov
pop
in
mov
sub
inc
ljmp
cli
xor
loop
out
and
dec
aas
fsubrs
xor
fs
inc
adc
inc
decl
xchg
inc
fcmovnu
sti
ljmp
mov
fildl
inc
push
mov
xchg
pop
jno
jbe
lret
stos
addr16
add
add
inc
jg
frstor
xchg
push
jnp
inc
push
adc
lea
pushf
pushf
pushl
ret
mov
movzbl
movsbw
movsbw
mov
pusha
pushl
lea
jne
clc
clc
push
clc
movzwl
sub
call
ret
dec
push
pop
js
add
mov
pop
out
add
das
loopne
into
mov
add
out
test
push
inc
sub
int3
fistpll
push
leave
mov
add
push
inc
dec
fcomp
aaa
mov
mov
sbb
repnz
jbe
add
in
dec
cld
and
xchg
xor
gs
mov
addr16
lahf
lock
out
ss
adc
movsb
pop
cwtl
enter
sub
cmpsb
imul
cmp
pop
push
dec
jnp
sub
push
sar
mov
jae
fsubrs
push
xchg
dec
sti
push
dec
lret
and
xchg
pop
xor
fsts
jo
ljmp
push
mov
aad
imull
in
jmp
xchg
repz
mov
ret
test
outsl
mov
pop
add
loope
cmpsb
stc
lds
lods
pop
mov
sbbb
inc
mov
add
mov
mov
shlb
cltd
hlt
or
xor
pop
xlat
int
lcall
mov
add
xor
sub
mov
repnz
andb
gs
fucomip
in
mulb
push
inc
push
push
add
cmp
cmpsl
stos
jge
jbe
insb
cmpsl
call
push
cmpsb
xor
sbb
repz
add
push
call
push
pop
or
add
clc
stos
push
mov
push
pusha
push
pushl
ret
sub
pushf
call
mov
data16
mov
ljmp
cmp
ljmp
loope
cmc
into
out
xchg
aam
cmp
or
sbb
dec
int
cmp
repz
push
cmp
fdivrp
add
popa
jle
xor
aas
mov
xor
icebp
sbb
mov
gs
rorb
iret
jmp
or
cmpsb
lods
lahf
cmp
pop
mov
ljmp
rorl
filds
push
in
das
adc
daa
lret
mov
fs
lret
or
filds
dec
aad
ljmp
xchg
inc
test
mov
adc
xchg
xor
dec
push
nop
out
jb
jg
mov
imul
out
push
xchg
std
daa
push
adc
lsl
bound
std
dec
lods
cmp
jecxz
mov
jae
jns
out
and
cmp
aad
xchg
stc
mov
leave
call
jmp
leave
push
push
movsl
xchg
xor
rcll
jmp
fisttpl
inc
inc
mov
jg
negl
and
cmp
fmull
out
and
adc
fucom
fstpl
or
adc
mov
lret
and
nop
dec
adc
data16
test
xchg
cmp
push
lea
je
clc
cmc
call
push
call
adcb
loope
sub
dec
mov
jmp
jle
fcmove
pusha
enter
jno
je
cmp
jge
fstp
or
pop
mov
mov
dec
inc
sbb
int3
call
add
subps
aas
add
cmp
hlt
jge
lods
test
iret
mov
add
sbb
pop
in
inc
pop
fidivl
dec
add
shll
sbb
out
aas
jmp
inc
pushf
rcrl
cmp
bound
and
mov
jmp
push
movb
lea
je
cmp
pusha
pushf
pushl
add
call
lock
shl
push
xchg
cmp
mov
adc
rcrl
movsl
mov
mov
xchg
imul
jne
mov
push
mov
adc
test
push
cmpsb
cmc
sbb
xor
pop
add
sub
mov
and
pop
mov
add
popa
push
es
push
push
adc
sarl
clc
stc
cmp
pusha
pusha
lea
jb
pushf
pushf
cmp
pusha
push
call
test
sahf
stc
dec
iret
mov
pop
inc
xchg
arpl
pop
sbb
sti
ljmp
pop
sbb
dec
mov
pop
inc
jle
sti
mov
bound
xchg
test
xor
loopne
mov
push
mov
imul
mov
int
mov
hlt
pop
int3
xchg
xchg
in
ret
testl
xor
dec
inc
les
in
call
stos
lret
not
not
pushf
inc
dec
jmp
push
call
jg
insb
rcll
dec
les
jg
and
push
ja
ja
mov
mov
in
lds
fsubs
int3
pop
dec
imul
or
in
adc
and
dec
pop
stos
aam
dec
int3
mov
iret
xor
int
or
pop
outsl
in
and
inc
test
xchg
dec
mov
mov
push
and
nop
jo
mov
aam
cmovs
jg
jnp
push
test
adc
xchg
mov
test
repnz
dec
adc
xor
mov
shl
mov
test
cld
cwtl
push
dec
adc
into
pop
mov
push
mov
adc
pop
je
scas
push
loop
pop
push
adc
pushf
aas
out
jmp
jle
dec
sub
call
xor
inc
pushf
movb
call
mov
jmp
sub
rolb
mov
add
dec
xchg
push
into
mov
nop
mov
pop
add
test
sub
push
test
call
movb
jmp
push
call
frstor
jg
mov
shll
scas
adc
shl
xor
xchg
in
cs
js
adc
icebp
aas
mov
inc
push
add
lock
add
inc
addb
jle
setno
iret
xor
xchg
popa
push
adc
sub
cs
cmp
and
popf
mov
outsb
dec
push
nop
sub
fstps
sub
int
enter
push
inc
push
xor
cs
insb
add
addr16
aad
add
or
jmp
push
call
cmp
mov
add
test
lods
inc
gs
mov
dec
dec
dec
dec
inc
push
cs
insb
add
int3
mov
fs
int3
ss
in
in
jne
xchg
mov
add
ja
pop
pop
sbbl
hlt
xchg
arpl
jns
fisttps
mov
and
dec
sbb
notb
and
mov
xorl
push
pop
pop
aam
out
in
mov
out
je
insb
push
or
xor
inc
push
inc
cmp
xchg
hlt
mov
inc
ret
call
push
call
pop
js
and
scas
sarl
mov
idivl
adc
insl
push
or
add
mov
gs
xlat
vfnmsub231ss
adc
scas
in
mov
inc
aaa
pop
mov
aas
jmp
jl
xor
mov
lock
jg
lock
jp
aas
jns
dec
lahf
and
pushf
subb
jmp
dec
iret
test
es
adc
mov
insl
push
mov
in
aad
mov
in
imul
fistpll
nop
movsl
into
mov
rorl
mov
aad
popf
loop
jge
pop
push
push
mov
jge
rcrl
pop
fcmovnu
shll
arpl
xchg
sub
ud0
movsl
mov
repnz
les
movsb
dec
in
or
dec
imul
and
cmp
call
dec
dec
inc
inc
push
push
xor
cs
insb
add
outsl
mov
add
jmp
mov
pop
test
loopne
jecxz
shr
es
mov
pop
cmc
dec
xchg
xchg
and
idivb
cmp
clc
loope
sarb
dec
xorb
add
cmpsl
stos
jl
dec
fisttpl
cltd
xor
add
sub
mov
adc
movsl
push
inc
cmp
ret
pop
arpl
int
cmc
jp
int3
pusha
sub
push
out
out
sbb
movsl
sbb
fwait
loope
xor
inc
pop
xor
push
inc
nop
xchg
rol
mov
pushf
push
lea
jmp
push
call
or
pushl
popl
mov
cmp
pusha
push
pushf
movl
lea
jmp
popl
cmp
aad
mov
bound
lahf
out
movsl
shrb
fcomp
sbb
dec
pop
lea
hlt
lods
jbe
push
in
leave
push
arpl
sbb
fadd
test
xchg
jg
dec
inc
push
jo
mov
negl
dec
pop
push
dec
push
jno
inc
iret
scas
aad
pop
cltd
adc
repnz
and
sarl
xchg
pop
xchg
xlat
push
sbb
dec
popf
push
mov
orl
add
cmp
push
pushl
cmp
mov
lea
ja
push
inc
mov
inc
sub
xchg
shl
rol
or
cmc
mov
shl
jmp
push
mov
mov
pushf
pushl
pushf
pushl
ret
xchg
cwtl
jmp
push
call
add
lret
add
add
or
lret
call
ss
out
xchg
adc
test
lcall
or
cltd
and
negb
aas
scas
mov
dec
mov
insl
insl
cmpsl
icebp
jmp
push
fildll
push
push
push
or
mov
pop
in
filds
test
mov
loop
iret
lods
dec
loopne
mov
shl
jl
mov
addr16
sub
jb
inc
mov
pop
pushl
jl
jae
imul
or
add
pushf
bt
movb
add
pusha
push
lea
jmp
stos
arpl
mov
mov
repz
mov
jo
xor
sarb
jo
dec
push
sahf
inc
dec
dec
jl
repnz
outsl
xchg
adc
mov
push
incb
repz
cmp
dec
ds
repnz
jmp
iret
xor
push
sbb
lock
inc
mull
and
mov
enter
or
xchg
dec
arpl
icebp
mov
imul
pop
adc
shr
mov
lcall
add
sbb
jb
push
mov
in
dec
xchg
lret
push
pop
pop
xor
inc
jo
adcb
aad
int3
fists
call
fmull
lods
cmp
inc
adc
pop
sarb
xchg
notl
mov
rcrb
aam
push
pop
xchg
add
adc
pop
jl
cli
jnp
jno
sar
mov
cmp
inc
and
or
pushw
popfw
pusha
movb
pushf
pushl
inc
pushf
jmp
je
adcb
out
sbb
das
lcall
mov
xchg
icebp
add
out
jmp
mov
pop
fistl
mov
dec
inc
fisttpll
nop
popf
mov
loopne
movsb
gs
ss
test
subl
addr16
clc
jns
repnz
pusha
insb
mov
loop
aas
pop
mov
adc
shl
ror
mov
aas
mov
test
jg
add
jmp
mov
push
sbb
xor
ljmp
aam
jg
cltd
xlat
mov
xchg
jmp
mov
dec
add
lock
fisttpl
add
stos
std
mov
dec
mov
push
gs
sets
sbb
repnz
fildl
ret
rorl
lods
inc
cmc
push
test
jecxz
pusha
mov
fists
sbb
fcmovnb
pop
mov
dec
repz
ss
addr16
ret
orb
rcl
dec
fisttps
pop
jnp
mov
imul
in
jmp
lahf
testb
out
sti
sbb
cmpsb
cmp
shlb
lret
sbb
mov
rol
jne
push
jecxz
int
push
mov
sbb
jae
add
add
push
inc
or
loop
lret
dec
sbb
lret
mov
mov
sbb
or
enter
icebp
dec
push
mov
mov
repz
mov
aam
jl
das
sbb
into
stc
cmp
das
jns
rorb
mov
xor
mov
iret
ret
ret
data16
add
ret
push
xor
cmc
sub
xor
cmp
xlat
sbb
or
stos
ret
sub
jp
xchg
lret
cmc
flds
inc
adc
inc
pop
mov
fimuls
lahf
dec
dec
dec
in
mov
out
and
jecxz
ja
dec
jnp
popa
sbb
mov
nop
mov
jg
add
pusha
movb
lea
ja
pusha
inc
inc
setae
inc
xor
xchg
pushl
test
mov
cmp
rol
rol
mov
pushl
bt
xchg
test
btc
not
bsr
mov
jmp
push
push
pushl
push
lea
call
test
jmp
cmp
push
push
jmp
mov
je
or
push
dec
sub
js
je
rolb
inc
mov
jo
fisubs
mov
push
jo
gs
scas
inc
cld
push
mov
mov
pop
cmpsl
loope
int3
jmp
jne
arpl
cs
inc
or
or
out
adc
lock
jnp
sti
sbb
rcll
add
enter
lods
cmp
mov
loop
xor
ret
sub
add
inc
inc
dec
xor
cs
insb
add
push
fcom
mov
cmpsb
pop
push
adc
in
add
cld
or
or
pushf
shrb
inc
int
cltd
in
and
fmull
rol
mov
jmp
fwait
pop
mov
push
inc
push
mov
push
sti
or
insb
fs
inc
fnsave
sbbb
test
and
or
dec
sub
cmp
mov
sti
add
stos
push
insb
adc
push
or
fildll
jbe
push
add
or
push
repnz
ret
daa
shr
scas
xchg
out
ja
cmc
mov
pop
insl
in
xor
mov
xchg
cmpsl
xlat
dec
lret
and
cmp
int3
pop
cltd
mov
sahf
enter
sbb
lods
mov
call
lds
scas
movsl
outsb
dec
jns
xchg
into
add
lods
in
fsubl
mov
fcompl
neg
loopne
cmp
pusha
movb
pusha
pushf
xor
sub
jmp
adc
movb
pushf
pusha
lea
jmp
push
call
das
faddl
and
lds
add
je
inc
add
decb
xchg
ret
bswap
movsbl
pop
pusha
mov
pushf
jmp
jmp
push
call
push
lods
push
push
sub
imul
in
add
lahf
cwtl
sbb
outsb
mov
push
outsb
movsb
hlt
aam
mov
test
daa
push
jae
loope
ficompl
pop
outsb
int3
cs
cmp
fmull
or
jo
mov
mov
icebp
sub
jae
pop
add
fidivs
mov
sahf
xchg
inc
and
bnd
jae
ret
and
dec
inc
mov
xchg
daa
dec
stos
bound
mov
push
call
gs
mov
clc
jbe
jo
fsub
sti
ja
xchg
movsl
push
mov
push
mov
call
sbb
push
fsts
pop
sub
insl
sub
rorb
pusha
cmp
cmp
xchg
call
xchg
push
sti
loope
out
jg
hlt
gs
sub
adc
cmp
gs
ficoml
jbe
iret
inc
repnz
push
adc
pop
mov
lea
jne
push
pusha
jmp
push
call
and
outsl
scas
inc
gs
mov
push
call
lea
fsubrs
xor
cmpsb
jo
mov
rcll
es
imul
shlb
insl
xor
aaa
jp
push
jmp
cltd
dec
sar
repz
popa
and
dec
movsb
push
sub
enter
loopne
add
dec
test
lea
call
pusha
pushf
lea
jb
pusha
pushf
pusha
push
pushl
ret
lea
pushf
pusha
bt
stc
mov
stc
push
mov
stc
test
cmc
mov
jmp
push
call
pmuludq
fldt
pushf
jp
fists
mov
lahf
repz
push
xor
mov
shl
and
pushf
je
xor
inc
ret
jne
ljmp
xor
mov
stc
movsl
cld
push
js
xorb
cmpsb
ss
jbe
xchg
bt
jb
xor
lret
stos
popa
push
xor
xor
clc
clc
add
pushf
xchg
cwtl
movzbw
movsbw
seto
lea
push
mov
movl
pusha
push
mov
pusha
pushf
pushf
push
pushl
ret
or
xor
mull
cmc
add
imul
push
and
idivb
movsl
pop
filds
push
sub
jp
fucomip
sub
ret
fsubl
lcall
popl
lods
adc
xchg
clc
push
xchg
ja
or
dec
pop
fstpl
mov
scas
lods
test
adc
xchg
gs
rcrl
push
call
mov
push
lds
bound
add
lock
imul
adc
add
stc
movsl
xchg
mov
jle
mov
mov
dec
push
in
add
mov
div
cmp
sub
dec
xchg
das
xchg
jp
fdivrs
imul
xor
mov
adc
pop
roll
and
iret
loope
addr16
loope
loopne
push
lock
ja
imul
cs
xchg
sub
add
push
sti
stc
pop
push
stc
push
dec
or
dec
dec
scas
lea
dec
aas
jg
xor
in
getsec
leave
and
movsl
xchg
dec
and
sti
orb
xchg
push
sub
jl
lds
and
pop
int3
sub
adc
gs
fdivrl
sbbb
push
mov
mov
cmp
or
pop
sti
jb
jp
fwait
pop
pop
sbb
clc
frstor
gs
cmpsl
push
add
xorb
add
fldenv
mov
bsf
lea
add
jmp
push
xlat
mov
xor
jge
sti
movsb
mov
jmp
cltd
add
call
jnp
mov
int3
sub
xlat
jg
popf
lods
add
dec
jg
xor
jne
call
imul
int3
and
sbb
mov
dec
pop
mov
adc
push
imul
xchg
mov
aam
xchg
sti
lcall
xor
lcall
and
dec
cmp
in
ret
addr16
test
test
mov
adc
and
add
mov
jae
mov
pop
jb
pop
jnp
fbstp
xor
push
int3
xor
cs
insl
imul
or
jb
mov
mov
cltd
scas
daa
mov
mov
add
push
call
mov
or
or
stos
jno
add
mov
testl
jge
or
divl
neg
std
loop
jl
push
jmp
scas
movsb
mov
mov
jg
push
clc
lret
fistps
test
fcompl
mov
test
and
fadd
mov
mov
jle
mov
lcall
popf
das
mov
jo
inc
pop
and
sbb
hlt
inc
shll
fadds
push
lret
push
movzbl
lea
jmp
push
call
or
fsubrl
cwtl
xor
mov
xor
sub
ror
dec
mov
call
push
call
inc
mov
add
inc
js
je
jb
arpl
jae
xlat
jp
and
sar
lret
movsl
mov
lock
pushf
inc
std
jne
das
pusha
or
adc
movsl
aam
pusha
lds
mov
fists
push
pop
adc
fmull
sub
jp
das
adc
iret
push
out
add
and
mov
aad
and
pushf
cmc
sti
push
adc
pop
and
lret
jecxz
lock
mov
push
pushf
lea
jae
call
push
call
repz
iret
int
and
mov
and
pop
dec
pop
add
jno
dec
nop
std
rolb
dec
dec
push
jl
jle
lea
dec
jne
jle
cmc
lret
adc
xchg
mov
js
sub
stos
shl
inc
mov
ret
aas
mov
and
adc
xchg
mov
xchg
insl
or
bound
adc
xchg
movsl
xchg
imul
std
jnp
iret
pushf
mov
loopne
mov
mov
pop
std
sbb
or
sahf
mov
or
shrb
leave
ss
les
mov
imul
mov
lcall
insb
fbstp
das
and
push
add
push
roll
subl
lahf
dec
inc
push
dec
inc
dec
xor
cs
insb
add
mov
in
pop
out
add
or
add
dec
jo
outsb
push
jb
outsb
je
jb
add
pop
in
in
cmp
push
call
outsw
fucomip
push
push
stc
dec
das
jg
cmp
mov
out
mov
popf
sbb
fnstcw
adc
push
arpl
stos
xor
pusha
xchg
out
or
cwtl
dec
mov
int3
jmp
pop
cld
mov
cmpsb
outsb
sbb
xor
dec
lret
or
outsb
and
rcr
jle,pn
fdivl
fstpl
int
cmpsl
paddusb
test
test
cmp
push
push
pusha
lea
jae
jmp
mov
int
bound
fs
hlt
daa
xor
repnz
in
mov
push
inc
in
push
ret
and
dec
ret
fistpll
fimull
hlt
mov
xchg
xor
xchg
add
shll
pop
out
dec
pop
aam
pop
lret
stc
leave
push
dec
sbb
push
sub
popf
arpl
fsubrs
jns
push
push
sub
adc
testb
inc
and
sub
leave
clc
les
divb
cltd
mov
lret
mov
dec
dec
mov
into
add
jne
or
lock
out
sub
lds
sarl
imul
mov
pop
out
pop
aad
sub
call
and
hlt
insb
rep
xchg
xor
inc
pop
sarl
mov
jbe
jbe
popf
aas
lea
lods
stos
adc
inc
imul
ret
push
mov
pop
lahf
xchg
repnz
popa
dec
jbe
sbb
stos
pop
call
xor
jg
mov
bound
jo
mov
mov
add
or
data16
xor
add
or
mov
outsb
jecxz
imul
shlb
lods
and
outsb
or
add
xor
dec
out
push
mov
add
xchg
adc
mov
cld
xchg
fisttps
pushl
pushl
push
lea
ja
shl
add
ror
sub
push
shld
add
add
btr
rcr
push
rcr
mov
cmp
setns
rcl
mov
jmp
dec
cli
pusha
mov
mov
push
clc
or
jg
pop
cmp
pop
sub
dec
dec
sbb
jmp
data16
bound
pop
mov
hlt
inc
adc
xor
pop
mov
lret
mov
popa
mov
lods
sub
inc
push
pushf
testb
inc
cmpsb
cltd
or
dec
push
add
insb
les
or
ret
stos
sbb
les
es
std
fisttpl
add
add
add
add
add
add
add
add
cmp
or
add
add
jns
push
add
add
add
inc
pop
add
add
add
add
dec
aam
add
add
add
add
addb
add
or
add
enter
add
add
or
add
movsl
jmp
add
or
add
pop
add
add
add
or
add
add
lea
jae
push
mov
setge
neg
lea
cmc
mov
bsf
rcl
shrd
xor
mov
pushf
cmp
stc
jmp
lods
stos
mov
fldenv
or
stos
lret
mov
arpl
lahf
mov
aam
xchg
inc
call
mov
cmp
insl
sub
mov
cmc
dec
hlt
cmpsb
into
or
cmp
fnstsw
mov
lock
inc
bts
shr
or
xchg
inc
sbb
shl
stos
and
sbb
pushl
jne
pusha
mov
push
push
in
jne
add
cli
ss
xchg
fs
jne
pusha
call
push
call
dec
adc
add
pop
mov
pop
test
jns
imul
inc
sub
cmpsl
xor
xor
lods
xchg
xchg
pop
lret
mov
cltd
xchg
inc
cmc
inc
ret
out
testl
daa
xchg
lret
adc
and
mov
roll
jmp
imul
sahf
jne
ret
lcall
repz
int3
loop
pinsrw
fs
jne
push
lea
call
pushf
mov
lea
jmp
lea
call
call
jmp
mov
lea
push
lea
call
jmp
stc
stc
call
push
call
pusha
xor
cmpsb
mov
xor
inc
add
addr16
adc
leave
test
rcll
pop
fwait
nop
push
push
mov
and
jo
fbstp
out
dec
inc
std
and
loopne
sbbb
push
rolb
int3
pop
js
in
fchs
lods
jnp
dec
or
test
sbb
test
sarb
fcompl
push
xor
out
les
sub
call
imul
cs
insb
add
add
push
mov
add
dec
adc
testl
fildl
add
and
stos
inc
push
push
xorb
jge
ljmp
iret
fucomip
xor
jno
fisttps
sbb
add
adc
mov
mov
push
inc
mov
push
les
ror
xor
sbb
sbb
inc
fsubrs
fiaddl
pop
mov
loopne
cmp
jecxz
shll
dec
leave
inc
cmp
nop
mov
icebp
mov
fnstcw
jmp
int
int3
negb
stos
mov
insl
call
lods
divps
aam
stc
xor
nop
ret
outsl
pop
sbb
xchg
icebp
sub
or
call
adc
add
mov
ret
stc
repnz
std
xchg
dec
dec
pop
or
add
daa
inc
inc
int
push
test
les
sub
enter
scas
imul
icebp
xchg
jle
pop
xchg
sbb
outsl
int3
inc
cli
cmpsb
mov
lahf
pushf
xchg
jg
mov
push
fidivrs
mov
push
call
mov
clc
dec
jns
sti
test
gs
sbbl
jmp
push
cmpsl
push
lock
mov
mov
sbb
in
mov
stos
jae
jge
das
push
cltd
outsl
sub
ret
out
stos
addr16
fidivs
mov
es
dec
fxtract
popf
cltd
xchg
pop
lret
adc
add
enter
or
or
mov
daa
xchg
jmp
jmp
push
call
shll
mov
stc
mov
mov
es
cld
xchg
sbbb
jg
adc
sahf
push
inc
repz
adc
mov
xor
subl
into
jl
jns
outsl
out
add
sub
mov
scas
adc
enter
lods
cmpsb
xchg
iret
mov
jb
sbb
fisttpl
inc
lret
add
push
aas
xchg
jmp
icebp
inc
pop
cwtl
fdivrl
inc
lds
mov
add
test
je
ljmp
mov
in
ds
mov
fdiv
es
pop
adc
cld
mov
jae
into
popf
mov
ret
int
pop
mov
inc
jb
inc
fistpl
lds
popa
mov
sbb
mov
mov
mov
js
les
inc
sub
outsl
dec
faddl
push
mov
mov
hlt
scas
mov
inc
shrl
or
mov
mov
cmp
ret
test
std
leave
cmp
push
dec
in
ret
add
ljmp
add
mov
mov
xchg
cmpsb
or
subl
pop
or
sub
scas
pushf
fdivl
shll
sbb
fcoms
mov
sbb
push
cmpb
jmp
push
call
stc
scas
push
jmp
xchg
testb
jns
cmovl
es
pop
jecxz
xor
add
inc
xchg
xchg
int3
aad
and
addb
aaa
jmp
test
sarb
sub
xor
push
fsubrp
adcb
aas
sbb
stos
sub
sbb
sub
jecxz
cli
sbb
jo
mov
push
cmp
out
pop
mov
ja
mov
push
pop
popf
mov
mov
add
mov
pusha
push
xor
mov
mov
pop
mov
orl
data16
push
xchg
ds
mov
fucomip
clc
xor
rclb
rcll
lcall
inc
mov
aam
test
mov
jg
imul
cmp
rcl
and
sub
lods
and
dec
sub
jmp
add
push
call
inc
dec
sub
sub
test
rolb
add
fs
jmp
or
jecxz
push
push
or
push
in
mov
popa
xchg
lock
ficoml
daa
mov
pusha
test
cmpsl
mov
lcall
out
fldenv
push
mov
orl
enter
mov
int
cmp
pop
mov
pusha
aam
mov
insl
sub
and
mov
test
dec
push
call
in
lret
call
sub
add
dec
pop
sbb
popf
sub
fisubl
addl
lds
jb
mov
push
shll
push
scas
dec
pcmpgtw
ds
pop
nop
out
mov
mov
and
lock
loop
sarb
push
inc
inc
sub
xor
mov
add
pop
roll
mov
or
adc
adc
leave
push
call
push
push
call
jo
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
push
gs
insb
outsl
jae
dec
gs
movb
inc
call
sub
leave
push
xlat
hlt
mov
sub
out
lds
jecxz,pt
mov
xchg
dec
adcb
dec
cmp
insb
mov
movl
pop
xor
into
fists
inc
mov
or
jg
jmp
lret
cmc
mov
mov
fildl
and
fnstcw
xor
into
dec
lea
test
lret
or
icebp
jg
pop
and
inc
mov
scas
pushl
push
shll
ljmp
and
mov
push
cld
jecxz
sub
rcll
mov
test
out
and
dec
fstl
adc
mov
jmp
fldenv
test
xchg
xchg
mov
fcompl
mov
push
into
mov
xlat
add
fisttps
lods
mov
and
nop
xlat
xlat
scas
sub
cmp
decl
mov
insl
imul
inc
out
jp
out
jno
push
adc
ljmp
inc
movb
mov
fisubrl
adc
mov
ds
sbb
sbb
jnp
gs
hlt
inc
imul
adcl
loope
jns
or
jmp
jmp
addr16
imul
int
xchg
add
mov
dec
mov
test
and
jge
vsqrtsd
push
xlat
inc
mov
imul
push
add
pop
ss
mov
jbe
outsb
mov
jne
add
or
nop
mov
push
add
movsl
xlat
mov
lods
mov
mov
pop
mov
jg
dec
sbb
idivb
cltd
mov
rorb
jne
push
mulb
lcall
shll
int
inc
fldl
mov
mov
jbe,pn
fldl2t
cmpsl
adc
loope
pop
jecxz
clc
mov
jbe
jl
lret
or
in
dec
cld
ljmp
mov
pop
cli
xchg
or
sub
and
call
ljmp
push
jecxz
add
jp
in
test
shl
push
sete
jmp
lret
jne
or
jb
dec
jg
aad
or
nop
hlt
aas
aam
adc
cmp
sbb
loope
and
push
decb
push
call
jecxz
nop
jmp
out
and
pop
and
and
clc
mov
xchg
jns
bound
inc
xchg
or
dec
int3
fistpll
test
repnz
ss
fsubrp
outsl
cmp
add
sbb
jnp
cld
sbb
psubb
dec
in
lea
das
pusha
sub
aaa
les
jecxz
ja
dec
shll
mov
and
push
mov
or
addr16
scas
cli
add
add
xchg
push
insb
xor
push
call
pop
div
push
and
xor
es
jl
push
lcall
arpl
dec
adc
lcall
mov
jo
jae
ret
rep
flds
add
jne
popa
push
lods
mov
xor
mov
fisttpll
push
mov
test
ja
sub
in
hlt
dec
inc
sbb
push
mov
mov
cltd
dec
mov
dec
or
push
dec
sbb
add
fs
or
ret
divl
push
mov
mov
sub
in
leave
js
enter
and
push
insl
or
mov
sbb
sbb
out
pop
pushf
jo
fistpll
push
mov
pop
shlb
ja
inc
cmp
or
bound
fdivr
xor
push
mov
std
xchg
into
fistpll
push
adc
bsf
loope
dec
push
cmp
aaa
daa
mov
and
je
ds
xchg
orb
rcrb
dec
push
ja
pop
into
fisubl
test
pop
lret
jmp
or
mov
rclb
adc
xchg
or
push
mov
call
jle
es
mov
mov
je
push
sbb
pop
add
in
xor
sbb
push
mov
std
js
sbb
mov
fimuls
cmc
mov
cmc
adc
mov
adc
into
aam
fimull
imul
or
pop
mov
stos
data16
add
mov
mov
jno
push
call
push
add
outsl
mov
loopne
add
and
test
mov
movb
pushl
lea
je
call
mov
mov
not
mov
pop
mov
jmp
push
call
les
andb
filds
add
mov
rolb
mov
scas
rol
and
jl
cmc
mov
adc
lods
aad
cmpsb
push
imul
rcl
into
push
in
add
cwtl
mov
jle
insb
mov
dec
lret
rorl
sbb
sub
xchg
out
add
xor
xchg
dec
cmp
lods
jecxz
popa
jge
dec
jl
test
rorl
mov
add
and
cmpsl
shl
sbb
lret
in
mov
add
push
cmc
inc
xchg
and
inc
xchg
cmpsl
sti
outsb
dec
dec
cmp
mov
jp
add
sbb
loop
xchg
sub
sbb
cmpsl
fistpl
adc
ds
mov
dec
cli
repz
lea
cmp
xor
lock
jp
mov
xor
iret
push
xchg
push
aas
cmpsl
insb
popa
add
xorl
into
lods
fwait
rcrb
xor
xchg
and
sbb
xchg
and
je
add
call
cmp
call
mov
flds
xor
push
mov
push
inc
je
or
adcb
ss
icebp
int3
inc
sti
inc
or
imul
les
dec
test
sbb
lret
pop
xchg
xchg
and
xor
je
mov
in
fadd
sub
lret
xor
fnstcw
push
fwait
mov
inc
push
and
js
mulb
std
es
inc
mov
mov
shll
or
mov
jle
add
into
out
call
cmp
fisubl
lahf
int3
aaa
pause
cmp
or
cmpsb
sub
int
xchg
bound
dec
add
jecxz
xlat
cmp
addb
incl
cld
js
xchg
add
jae
arpl
lahf
jmp
jecxz
cmp
push
imulb
aad
xchg
es
loopne
les
repz
ljmp
daa
xor
aam
andb
out
in
ss
sbb
data16
lock
lret
cmp
lock
add
xor
inc
add
stc
add
pop
cld
and
ja
push
sbb
out
pop
subb
push
arpl
popa
mov
or
jle
sub
pop
subb
fldenv
loop
mov
mov
movsb
lea
ja
mov
push
mov
pushf
lea
jmp
jmp
lea
je
jmp
test
rolb
pushf
jle
in
mov
das
xchg
fmull
mov
addr16
sbb
imul
xchg
mov
call
ljmp
out
popa
cs
lcall
testl
add
push
cld
push
jae
xchg
scas
fwait
addl
sub
xchg
out
fs
adc
imul
lds
repz
clc
adc
jae
stos
sbb
das
push
pushf
mov
shl
mov
cmp
test
cmpb
call
cmpsl
fucompp
rorl
dec
lock
shll
or
mov
repnz
sub
xchg
push
push
imul
inc
mov
fidivrl
les
mov
mov
cmp
std
addr16
dec
cmc
test
mov
adc
movsb
ds
sbb
xchg
pop
add
fcmovnu
sub
adc
cli
xor
into
rorl
xchg
inc
pop
xor
fdivl
dec
int
inc
das
cmp
xchg
movsl
loope
push
je
xchg
popa
in
xchg
xor
jl
mov
xor
call
int3
adc
push
in
pop
cmp
adc
daa
adc
add
test
lcall
add
cltd
xchg
outsb
mov
scas
xchg
les
push
call
and
outsl
stos
jg
call
push
xchg
push
stos
push
pusha
lea
jmp
shrd
call
push
rcrl
fcmovnb
xchg
mov
iretw
pop
leave
fs
out
aas
pop
sub
sbb
out
push
int
iret
hlt
push
pop
pop
cmp
jns
imul
cmp
dec
je
and
jmp
into
cs
add
dec
aam
pop
push
data16
and
mov
mov
aam
shl
inc
int
pusha
or
aam
push
addr16
mov
call
jae
push
pushf
lea
je
call
push
call
mov
outsl
mov
in
push
flds
add
call
mov
add
sti
xchg
inc
subl
rcrb
das
xchg
and
ss
pop
adc
fists
sub
xlat
or
ja
nop
mov
std
and
adc
divb
sbbb
and
dec
mov
dec
or
int
test
out
dec
out
test
daa
outsb
ja
out
pop
jg
das
adc
shrb
and
shr
dec
lea
add
ret
xchg
gs
pop
out
lea
jne
jmp
push
call
cmp
jl
dec
push
call
pushf
adc
adc
fiadds
add
adcb
push
call
ljmp
call
cld
inc
gs
call
out
or
incl
pop
or
or
inc
aam
shr
add
add
inc
popf
pusha
mov
push
xchg
movsl
roll
stos
dec
imull
jb
or
add
push
sub
psraw
popf
sahf
or
jb
in
mov
out
mov
popf
sub
adc
pop
shlb
mov
das
mov
fs
xor
repz
jg
jge
negl
fbld
sbb
sbb
sarl
mul
stc
stc
push
xor
movb
pusha
lea
call
push
lea
jae
push
cmp
xor
pushf
pushf
pushf
lea
call
pushf
lea
jae
pusha
mov
pusha
inc
not
jmp
jae
mov
insb
jo
sbb
aad
jmp
fmuls
push
sbb
rcll
jecxz
fsubrl
mov
pop
pop
and
dec
xchg
nop
mov
pop
popf
roll
pop
jmp
lret
inc
scas
cld
addr16
mov
adc
cs
pusha
xchg
stc
inc
lods
testl
testb
push
call
sub
mov
dec
pop
imull
mov
pop
daa
aam
or
dec
xchg
adc
or
mov
enter
jb
pop
movsb
nop
int
mov
lahf
cmp
mov
add
add
mov
je
je
repz
aam
and
jno
hlt
inc
imull
mov
mov
mov
decb
imul
mov
in
ret
cmpsl
lods
jmp
jnp
loope
insl
lahf
pop
mov
pop
add
fiadds
pusha
mov
pushf
push
pushf
pushf
lea
jmp
push
call
jp
imul
mov
in
repnz
add
js
mov
gs
loop
push
outsl
out
loope
cs
mov
or
mov
pop
or
clc
jge
aam
rcll
loopne
mov
ficoms
and
popf
lcall
cmpsb
cmp
add
cmp
jge
aas
stos
ss
ja
jge
push
xor
mov
out
adc
adc
xchg
xchg
gs
inc
call
push
call
outsl
sub
sbb
add
cs
mov
xor
test
xchg
cmp
adc
and
imul
int
push
jmp
and
dec
xor
cmp
mov
and
clc
lahf
call
dec
or
xor
pushf
call
in
imul
pusha
js
loope
add
sarb
sbb
mov
cld
push
fstpl
iret
lods
in
lahf
in
add
jb
xchg
pusha
orl
push
mov
sbbl
mov
js
cmc
rcr
dec
enter
loope
push
push
icebp
pop
sbb
inc
je
jg
cmp
sub
mov
and
mov
lret
mov
arpl
out
movsb
adc
inc
arpl
loop
and
fst
icebp
mov
popa
das
outsl
lock
cld
sub
fdivs
xor
and
popa
push
jmp
gs
ret
out
sub
dec
push
jle
cli
xchg
ds
stc
leave
pusha
bound
push
fsts
mov
call
loope
pop
xchg
insl
sub
movsl
and
pop
ja
pop
stos
sub
test
mov
xchg
ds
mov
xchg
add
xchg
sbb
mov
fstpl
adc
lret
add
cmp
jmp
inc
xchg
and
inc
jge,pn
sbb
lcall
std
in
mov
test
add
inc
in
testb
sbb
arpl
xchg
lcall
sub
fwait
inc
pop
pop
fwait
xor
sub
imul
add
int
imul
loope
push
ret
adc
cmc
inc
cmp
fcoms
sub
in
pop
out
lahf
in
test
inc
add
mov
cmp
sub
jo
xchg
int
rorb
dec
outsb
leave
orb
test
out
push
leave
dec
adc
iret
xor
push
cld
mov
aam
pop
sbb
sub
sbb
dec
and
cmp
jecxz
aas
xlat
arpl
daa
fisttps
mov
stc
pop
gs
lds
pusha
cmp
ror
mov
and
mov
sub
out
jp
test
and
add
int
xchg
fwait
lods
push
jb
out
repnz
daa
lods
leave
dec
inc
sub
mov
aam
add
in
gs
add
push
call
scas
out
movsl
xabort
add
rcrb
mov
add
jns
ljmp
cwtl
sub
test
cmp
mov
mov
in
lods
pop
cmp
iret
mov
push
add
nop
cmp
movsl
and
lcall
in
push
sbb
dec
in
jo
rorb
jo
in
xchg
outsb
cli
loope
outsl
dec
dec
lret
dec
paddq
xchg
pusha
out
mov
scas
test
push
and
xchg
enter
jecxz
pop
jmp
nop
scas
daa
push
and
jb
cmp
pop
and
mov
mov
pop
outsl
pusha
scas
subb
test
inc
outsl
adc
fisttps
daa
out
lods
lcall
scas
dec
cmpsl
movsb
and
mov
les
lods
pusha
mov
aam
mov
mov
add
mov
enter
js
enter
rclb
les
xchg
enter
js
mov
cs
enter
mov
in
aam
xchg
enter
rclb
fsubr
xchg
enter
sub
xchg
lahf
cltd
enter
inc
lcall
fwait
enter
sub
xchg
lahf
popf
enter
inc
sahf
enter
add
lahf
enter
sub
xchg
lahf
mov
inc
mov
and
shlb
adc
cmpsb
dec
fstps
enter
shlb
and
cmpsl
enter
ja
sub
or
insl
sub
test
ja
sub
pushf
insl
xor
stos
enter
lahf
lods
enter
cmp
cmp
scas
out
stc
lahf
lahf
inc
xchg
mov
jns
mov
xchg
enter
and
fcomip
push
push
inc
mov
push
in
mov
pop
mov
mov
and
popa
jp
mov
aas
test
les
test
aad
push
push
nop
and
xchg
rorb
adc
jmp
ret
ljmp
cmp
ja
test
loop
lret
sbb
mov
lahf
and
inc
scas
pop
enter
adc
shrl
roll
sbb
enter
jge
pushf
enter
call
nop
or
pushf
mov
and
cld
add
pop
mov
mov
sbb
push
mov
mov
fcom
int
and
int3
or
fwait
clc
mov
fwait
or
fwait
sbb
fwait
sub
fwait
cmp
fwait
dec
mov
fwait
pop
mov
fwait
push
dec
fwait
js
hlt
or
mov
fwait
cwtl
mov
fwait
test
lea
or
mov
mov
mov
pop
fsubs
pop
call
imul
pop
or
mov
dec
jne
pop
mov
cmp
and
dec
jge
pop
mov
pop
pop
mov
push
dec
mov
mov
out
nop
test
cmp
cmp
out
cwtl
lahf
or
inc
mov
pushf
lods
or
inc
mov
or
ja
dec
popf
sub
insl
and
cwtl
in
outsb
sbbb
cwtl
cs
push
loop
and
pushf
popf
addr16
push
push
inc
pushf
pop
fs
adc
pop
mov
mov
xor
xchg
bound
sub
push
je
mov
lcall
jmp
push
mov
pusha
pop
or
gs
xchg
movsb
mov
mov
jle
cmp
mov
sub
sub
jne
ds
xor
mov
fisubrs
pusha
daa
out
xchg
lods
sbb
outsb
jle
mov
pop
pop
or
js
cli
enter
inc
fcomps
out
and
and
sbb
lods
inc
jns
push
lock
mov
pop
lock
pusha
daa
shlb
fcoms
fidivrs
fadd
cmp
mov
or
pop
stos
pop
mov
push
jge
and
lds
push
mov
cs
test
je
and
pop
enter
icebp
ja
loope
popa
lahf
mov
fbstp
and
xor
cmp
push
daa
push
loope
add
outsb
in
and
xchg
sbbl
addr16
adc
scas
mov
stos
pop
mov
sub
mov
push
movsb
insl
or
sub
push
inc
test
dec
cmpsl
xlat
xchg
cwtl
rclb
sub
daa
inc
sbb
mov
shrb
pop
pop
mov
pop
movsb
jp
test
add
pop
mov
repz
xchg
nop
loopne
adc
jecxz
inc
mov
push
jo
scas
or
pop
and
out
test
lods
jl
jne
jo
cwtl
cmp
adcb
aad
cmp
jl
sahf
mov
adcb
lahf
imul
pop
enter
pop
popa
sub
call
cmpsl
ds
xchg
lods
mov
je
mov
scas
es
mov
inc
and
into
cli
cwtl
xchg
test
xchg
xchg
sub
inc
stc
xchg
ja
pusha
inc
dec
xorb
sbbb
or
and
dec
rclb
push
lcall
xchg
insl
jns
je
pusha
test
sub
adc
test
jnp
outsb
insb
mov
mov
adc
cwtl
insb
push
adc
loopne
dec
push
out
insb
mov
and
sub
xchg
into
sbb
mov
push
sarl
add
je
mov
push
insb
mov
adc
hlt
lahf
js
lret
adc
cmpsl
mov
mov
or
lahf
and
clc
fsubrl
orb
pusha
into
andb
mov
insl
mov
inc
pop
mov
mov
mov
mov
push
aam
movsb
outsb
mov
and
mov
mov
stc
stos
pusha
mov
sub
jo
nop
sub
jle
pushf
dec
jl
sub
jo
js
sub
adc
insb
rclb
push
jo
pushf
and
pusha
inc
dec
cli
mov
or
jge
mov
xchg
mov
dec
testb
inc
or
call
xchg
xor
adc
push
ja
nop
sub
pop
or
and
and
insb
adc
pop
pop
mov
or
mov
lea
sub
aaa
hlt
mov
mov
sub
aaa
fsubs
je
sub
enter
insl
shr
adc
and
lods
test
lea
mov
test
insb
lods
jle
nop
mov
jne
mov
outsb
dec
int3
sub
push
pop
lods
sbb
jl
in
aaa
bound
and
jl
push
xor
mov
push
je
mov
into
or
outsl
xor
dec
clc
cmovo
pop
test
ss
adc
dec
andb
pop
stos
movsb
jp
mov
xor
dec
pushf
pop
mov
push
cwtl
into
repnz
or
mov
mov
mov
xchg
sbbb
mov
inc
add
jge
push
push
scas
jmp
enter
hlt
cwtl
inc
and
xchg
dec
inc
inc
fs
call
push
in
lahf
rolb
cmp
jl
dec
sub
sub
outsb
sub
test
daa
xor
inc
outsb
popf
insb
lea
pop
insb
aam
pusha
arpl
cld
mov
and
subl
lahf
add
clc
lahf
mov
sub
subl
imul
les
int3
sub
adc
jmp
in
dec
mov
pusha
fiadds
loop
mov
xchg
movsl
cmp
add
je
pop
jp
mov
dec
xorb
test
xchg
repz
roll
ret
je
mov
daa
add
movsl
dec
or
mov
loop
adc
mov
jmp
adcl
int3
jb
ds
dec
sbb
mov
or
adc
pop
xorl
or
cwtl
clc
sub
pop
xchg
test
sub
xor
pop
imul
mov
test
mov
je
pop
je
mov
les
stc
sub
push
cmp
imul
out
add
push
ja
orb
jge
fucomip
cmpsb
leave
xchg
aas
mov
andl
mov
add
mov
cmp
or
fbld
cmp
jbe
jmp
test
test
push
dec
pop
jbe
xchg
jle
enter
je
sub
mov
add
jge
mov
ficomps
jmp
add
ret
mov
jl
and
leave
sub
std
pop
jbe
ja
nop
cmp
xchg
js
mov
jbe
and
cmp
sub
aaa
jl
cltd
or
and
jl
jns
cmp
aaa
sub
subb
mov
stos
sub
mov
jbe
jno
test
or
mov
test
ja
cmp
aam
mov
pop
jbe
jmp
jbe
in
xchg
mov
orl
xor
push
sub
or
mov
in
sbb
les
je
dec
or
mov
fs
sub
xor
and
jl
in
push
pusha
lahf
xchg
hlt
test
es
ljmp
outsb
loopne
pop
sti
repnz
push
jae
jp
xor
in
push
and
and
cwtl
sub
pop
dec
cwtl
and
les
adc
fwait
lods
das
les
scas
andl
in
adc
enter
or
cmp
test
call
scas
mov
mov
scas
aas
pop
in
mov
in
pop
int3
mov
and
arpl
ljmp
dec
sbb
imul
and
rolb
dec
adc
pop
enter
jbe
and
sahf
mov
test
out
mov
and
cltd
pusha
lods
lret
sbb
outsl
dec
cwtl
sub
jno
cmpsl
insb
loopne
xchg
mov
jo
lcall
xchg
jb
and
cwtl
lods
jmp
mov
ret
xor
lcall
movsb
clc
sbb
ljmp
mov
lods
test
loopne
or
cltd
and
pusha
pop
out
lods
and
repz
mov
mov
test
enter
dec
mov
inc
cmpsl
lret
mov
sub
sub
hlt
xchg
arpl
jnp
stos
int3
out
xchg
jp
mov
jmp
xchg
sbb
sbb
jle
fdiv
adc
addr16
xlat
repnz
jo
jl
shl
bound
add
sbb
dec
outsb
xorw
sub
movsb
pop
pop
adc
stos
scas
enter
pop
pop
dec
sub
push
enter
xor
cmpsl
dec
or
lods
test
nop
testl
ret
dec
outsb
jno
int3
or
mov
jo
mov
cmpsl
aam
test
pop
call
leave
jg
stc
cmp
sti
dec
add
mov
or
enter
jnp
fistps
enter
inc
push
inc
fldt
lds
outsl
or
mov
pusha
and
cmpsb
or
and
jbe
xchg
jb
ret
mov
add
mov
inc
ljmp
inc
daa
cmpsl
jno
add
pop
xchg
test
pop
xor
mov
out
cwtl
in
fsubs
dec
shlb
mov
inc
sub
dec
movsb
sub
jge
fcompl
cmpsl
mov
int3
adc
mov
mov
bound
popf
std
mov
in
jg
loop
jge
loope
int3
out
jl
xchg
fisttps
movsb
loopne
push
testl
add
sbb
jge
mov
pushf
fst
loopne
cmpsb
mov
pop
cmpsl
mov
lret
int
mov
fcomp
push
mov
nop
xchg
pop
xlat
arpl
outsl
or
adc
test
test
pop
jl
mov
jno
mov
les
mov
sub
jp
pop
sbbb
rcll
adc
pop
negl
and
lods
pop
dec
fldcw
pusha
mov
sarb
fisttpl
adc
push
inc
stos
jg
pusha
mov
jmp
pop
mov
aam
loop
or
mov
leave
imul
jbe
call
sbb
pop
iret
scas
fcoms
arpl
cwtl
das
add
xchg
dec
dec
fdivl
out
jecxz
outsb
jl
mul
shl
popf
es
dec
in
rcll
int
mov
ror
std
fwait
sti
cld
inc
mov
xchg
lcall
cltd
sbb
daa
jp
mov
negl
xchg
adc
out
mov
sbb
push
mov
ret
ret
cmpsl
shrl
sub
or
jg
test
lock
negb
and
xor
dec
add
stos
enter
test
paddsw
cwtl
cwtl
clc
int
mov
psubd
fdivs
xchg
mov
loope
pop
push
xchg
mov
fs
pushf
or
adc
insb
test
xchg
aad
jge
cld
loop
inc
imul
sub
out
push
cld
xor
xor
scas
in
xchg
xchg
aam
mov
sbb
mov
xchg
pop
push
pusha
pop
sub
sbb
xor
aam
or
dec
xchg
or
xchg
insb
sub
fidivs
das
mov
jo
xchg
scas
and
scas
aam
cmp
int
es
jle
sbbl
sub
cltd
sbbb
jp
in
mov
xor
pusha
xchg
int
pop
fwait
imul
or
shlb
test
stos
insb
clc
sbb
adc
jmp
inc
jg
repnz
xchg
adc
or
or
push
xchg
pushf
or
cmp
out
or
adc
push
xor
movsb
mov
and
and
dec
add
stc
insb
test
mov
pop
jl
cmpsl
pop
pop
aaa
xchg
lret
popf
fmuls
jle
or
das
mov
mov
inc
mov
addr16
jp
xchg
mov
dec
cwtl
cwtl
sbb
iret
out
lahf
mov
jle
inc
mov
scas
xbegin
sbbb
xchg
shrl
mov
outsl
nop
mov
mov
mov
in
call
dec
popf
mov
mov
imul
mov
mov
sbb
jno
out
push
test
cmp
dec
cmpsb
dec
mov
mov
lds
cwtl
movsb
test
push
push
pop
rolb
jl
das
std
shl
xlat
cmpl
jo
dec
sub
outsb
std
xor
enter
pushf
mov
subb
stos
jle
scas
lds
mov
jae
dec
xor
and
pop
mov
xor
fwait
dec
pop
cmp
enter
pusha
push
push
scas
inc
sub
popf
nop
dec
mov
insb
test
push
loop
xlat
lods
dec
out
cmp
arpl
xor
ret
sahf
enter
mov
cltd
fldt
imul
push
and
repnz
mov
lods
inc
inc
stos
out
fcompl
pop
pop
adc
enter
mov
pop
dec
ret
mov
int
pusha
push
xchg
mov
insb
test
fs
nop
mov
or
sub
lds
scas
lock
fsubs
cmpsb
inc
insb
jl
sbb
xchg
outsb
daa
call
jge
fsubr
and
ret
out
out
and
dec
enter
data16
xchg
sbb
push
xorl
sbb
mov
sbb
jge
out
inc
ret
pop
mov
mov
xchg
mov
xchg
xchg
insb
mov
dec
cmpsl
sahf
pop
inc
pop
cmp
mov
out
mov
fdivrs
xchg
mov
xchg
and
push
insb
out
int3
out
xor
insb
add
mov
int3
jp
std
pop
int
cmpsb
pop
lret
jl
decl
xchg
pushf
or
jl
aam
xchg
mov
and
gs
cmp
adc
inc
xchg
outsb
jl
sahf
xor
insb
sbb
mov
mov
push
mov
sub
sub
push
aam
ja
fildl
lret
addr16
jno
mov
xor
mov
icebp
in
xor
inc
mov
loop,pt
js
popf
roll
scas
cmp
stos
fsubrs
fdivs
xchg
popa
pop
mov
stos
es
sub
mov
out
sbb
sub
lds
jae
leave
adc
sub
mov
xor
jp
int
scas
ja
jno
into
mov
enter
push
cmpsb
pop
pusha
ret
call
mov
sub
jnp
sub
push
sub
lea
push
xchg
sub
cmpsl
mov
sarb
bound
lret
out
adc
fwait
push
pop
adc
mov
xchg
cmpsl
mov
cwtl
dec
mov
xchg
mov
xorl
push
mov
or
mov
inc
nop
sbb
mov
shll
cmpsb
pop
enter
bound
sbb
enter
lahf
or
dec
xchg
pop
scas
sub
xchg
mov
mov
das
stc
mov
cmpsb
lahf
fdivl
xchg
pushf
xchg
ret
scas
lahf
xchg
jmp
lea
test
in
lods
or
icebp
nop
cltd
lds
pop
enter
mov
sbb
pop
sub
mov
push
pushf
mov
sub
jge
movsb
push
jmp
or
outsb
ret
les
iret
orb
fs
mov
adc
imul
nop
xchg
mov
mov
popf
push
pushf
enter
bound
pop
fs
mov
or
inc
mov
sahf
and
pop
mulb
pop
push
and
lock
pusha
pop
push
scas
dec
and
fidivl
cmpsb
cld
jae
add
punpckhbw
inc
dec
cld
pop
sbb
pop
adc
nop
into
add
imul
fwait
xchg
pushf
ret
sbb
test
or
enter
mov
sbbl
add
inc
scas
popf
imul
and
pop
sbb
jnp
in
sbb
or
sbb
nop
add
cli
xchg
mov
push
aaa
mov
and
scas
jg
push
jecxz
xchg
and
addr16
jno
outsl
sub
cmpsl
lds
lods
movsb
pusha
enter
xor
pop
adc
xor
fistps
xchg
pushf
xor
fidivrs
cmp
or
fs
scas
outsl
pusha
movsb
jmp
pop
dec
jecxz
mov
cwtl
pusha
xchg
insb
or
push
cs
cs
jo
xor
daa
pop
mov
mov
xchg
sbbl
enter
ja
push
call
das
lcall
lea
or
cli
pop
sbb
out
daa
mov
dec
pop
mov
scas
das
mov
sub
cmp
outsb
mov
sub
mov
inc
mov
int3
pop
out
and
push
sbb
xchg
fwait
jmp
jle
and
loop
push
das
in
mov
lret
imul
js
inc
divl
into
nop
ret
fwait
lods
sub
mov
repnz
mov
aad
enter
pop
inc
repz
push
test
pop
xor
xchg
js
insl
mov
test
xchg
pop
mov
xchg
mov
ret
cmp
ss
mov
cmp
pop
inc
imul
movsb
outsb
rorl
sub
push
push
and
adc
pop
jmp
mov
pusha
fs
out
rcrb
stc
fcomps
lea
adc
dec
push
gs
lcall
push
sbb
out
pop
fsubp
stos
pusha
clc
mov
pop
lahf
mov
jno
test
jg
and
or
pop
cwtl
mov
pushf
pop
sub
test
or
cmc
pop
adc
arpl
dec
jg
cmpsl
loopne
jne
stos
sbb
enter
jns
lahf
jae
inc
call
fcomps
mov
jp
lea
cmpsl
andb
push
xor
push
jl
xor
jg
sub
movsl
sub
lods
dec
xlat
mov
cmp
add
and
dec
movsl
jge
pop
daa
iret
xor
fdivrl
aam
enter
imul
adc
hlt
xchg
pop
test
shrb
sub
mov
mov
cmp
xchg
and
xchg
pushf
sub
xchg
mov
sbb
mov
in
loop
roll
mov
push
xor
mov
dec
repnz
popf
iret
pop
pop
pop
gs
sub
push
stos
mov
mov
les
pop
rolb
and
test
sub
es
cwtl
shlb
scas
mov
in
lock
pusha
xchg
xchg
lds
mov
adc
cmp
loopne
fsubrs
adc
xchg
dec
cmpsb
into
mov
push
inc
movsl
add
xor
dec
and
mov
mov
loope
lds
aam
xchg
mov
xor
push
pop
sbb
fwait
ja
shll
jo
mov
out
add
push
ret
sub
aam
adc
popf
pop
fistl
mov
daa
arpl
sub
clc
mov
xor
lods
mov
sbb
cmp
sbb
stos
les
xchg
fs
xor
pop
shrl
fsubl
sub
pusha
outsl
pop
jl
out
repz
sub
fistl
outsb
sub
aad
sbb
nop
adc
xchg
and
inc
rcrb
pusha
lods
and
aam
xchg
mov
stos
pop
fs
or
pop
fwait
das
add
je
mov
pusha
enter
pop
icebp
icebp
cmpsb
loopne
mov
test
lods
nop
frstor
dec
mov
stos
daa
addr16
or
xor
push
dec
or
shlb
sub
int3
push
jb
fs
hlt
popa
cmpsb
mov
movsb
lcall
daa
fstpl
mov
inc
fcoms
mov
pmulhw
xchg
movsl
les
xor
xchg
mov
aas
loope
xchg
xor
sub
mov
lock
cmp
jo
fadds
mov
testl
arpl
mov
xor
pop
mov
pusha
les
sbb
icebp
movsb
aad
sbb
sti
lea
pop
xchg
sub
xor
clc
pushf
outsl
shlb
shrb
ja
scas
lcall
dec
andl
sarb
dec
std
rcrb
gs
or
pusha
inc
xchg
pop
shrb
mov
outsb
xchg
push
out
aam
mov
pop
mov
inc
or
nop
insb
and
mov
daa
outsl
mov
nop
in
inc
cld
mov
pusha
sub
mov
mov
xchg
stos
add
mov
je
sahf
outsl
psraw
add
sub
adc
cli
das
leave
mov
jnp
lret
mov
sub
pop
adc
movsb
test
ficomps
xor
xchg
subb
into
test
sbb
sbbb
sub
rcrb
mov
xor
add
jl
sbb
call
sbb
imul
add
aad
les
xor
aam
xchg
nop
mov
mov
nop
dec
dec
sub
inc
xor
pop
hlt
mov
sbb
push
push
pop
into
inc
push
daa
jne
cmp
scas
enter
dec
pusha
push
fptan
bound
scas
out
xchg
in
sub
adc
sub
pusha
push
mov
pop
enter
lods
jle
test
daa
mov
inc
adc
pushf
push
pushf
insl
xchg
lods
sbb
lods
push
lods
and
push
mov
sbb
das
iret
movsl
mov
pop
mov
test
cmpsl
jo
and
push
cmpsl
cld
mov
dec
jne
pmullw
ficompl
pop
outsl
clc
scas
cld
nop
sub
inc
call
mov
or
jp
pusha
imul
push
movsb
in
push
lcall
pushf
ljmp
xchg
adc
pop
push
les
stos
addr16
pop
mov
inc
repz
fisttpll
test
pop
jge
fs
pushf
pop
fisubl
cwtl
fidivs
xor
out
outsb
push
inc
xor
sbb
imul
mov
xor
and
and
jno
mov
mov
test
outsl
mov
pop
je
pop
sub
jg
dec
cmpl
mov
add
pop
mov
lods
lods
or
mov
mov
inc
cld
dec
les
push
ja
push
mov
imul
mov
in
stos
mov
push
popa
pop
inc
jl
nop
dec
stos
enter
mov
push
jg
pop
or
lds
and
jo
pop
mov
sti
cmpsb
mov
sbb
repnz
adc
push
inc
out
outsl
sahf
jae
mov
ret
stos
jb
je
dec
push
inc
imul
jo
inc
lods
and
jmp
js
aam
pusha
push
inc
into
jnp
jae
jno
in
sub
addr16
pop
push
int3
test
movsl
adc
test
jo
sub
divb
mov
repz
pop
dec
std
js
pop
clc
sub
lds
pop
loop
insl
push
xchg
mov
test
adc
cmp
int
mov
outsl
movsb
imul
ret
sbb
test
or
scas
pop
test
lahf
xchg
js
enter
jl
gs
mov
cli
jle
icebp
pop
or
pop
xchg
out
adc
sub
xlat
cmpsl
xchg
ljmp
inc
cs
popa
pop
in
pop
test
je
and
jecxz
lahf
add
andb
aad
enter
hlt
data16
sub
movsb
inc
stc
pop
call
and
popa
aam
out
repnz
scas
stos
enter
and
orb
pop
cmpl
add
jl
stos
dec
loopne
scas
pusha
pop
xchg
outsl
enter
jns
jle
scas
ljmp
mov
mov
adc
cmp
push
sub
lret
test
daa
fsubrs
cmpsl
fsts
and
dec
and
or
fisubrl
repnz
or
mov
pop
xor
mov
int3
jo
insb
inc
lea
adc
es
pop
adc
cmp
cmpsl
jo
fwait
add
push
daa
add
fisubrl
mov
test
test
sbb
pushf
lcall
push
notl
int3
mov
imul
outsb
shl
out
mov
lods
xchg
pop
pop
mov
mov
pop
sbb
xchg
sahf
inc
scas
jns
int3
cltd
pop
jb
jle
jo
and
fcoms
and
lahf
daa
mov
fimull
je
mov
insb
cltd
pop
cmp
enter
adcb
stos
sub
push
push
adc
sbb
fwait
add
cltd
pop
jge
add
data16
or
aaa
sbb
xchg
push
pop
insb
scas
enter
xlat
cltd
mov
cwtl
scas
mov
inc
mov
fs
test
repz
mov
jge
out
pop
fwait
enter
stos
mov
jne
xchg
xor
push
popf
cmp
cltd
test
pop
fistl
dec
add
sbb
xchg
std
sbb
and
jmp
xor
mov
sub
dec
mov
dec
jge
and
sbb
stos
xchg
mov
sub
es
iret
out
outsb
cmpsl
dec
test
popf
repz
push
pop
mov
xchg
xor
xchg
xor
sbb
sti
movntq
push
nop
jmp
roll
and
mov
loope
jle
into
xchg
jo
movsb
mov
lods
push
dec
xchg
or
cmpsl
mov
sub
or
adc
mov
in
inc
addr16
jl
scas
sysret
lods
xchg
jno
outsb
pop
movsl
rorb
cli
outsl
addr16
scas
sbb
stc
push
lods
popf
mov
rorb
lcall
xchg
test
xor
and
and
gs
mov
test
mov
xor
pop
jb
mov
shr
pop
or
out
add
inc
jnp
inc
jg
and
or
xor
add
dec
adc
imul
nop
lds
and
into
aam
orl
into
loopne
cwtl
cmp
or
outsl
cmpsb
loop
jg
lahf
test
out
ret
shll
clc
xchg
and
push
adc
sbb
nop
pop
enter
sbb
jl
fcoml
rcrl
lds
mov
jg
cmpsl
scas
dec
insl
pop
pop
bound
xor
loopne
insb
dec
enter
gs
mov
jns
imul
cld
mov
mov
mov
fisubrs
jle
cmpsl
cwtl
mov
lods
sub
lock
mov
mov
xlat
sbb
pop
inc
mov
jno
lods
add
jp
repz
sbb
mov
repnz
je
arpl
loop
cs
mov
in
mov
popa
jmp
js
pop
adc
dec
push
shlb
cwtl
test
stos
popl
scas
sbb
js
xor
jle
mov
xor
dec
enter
mov
fimuls
scas
dec
mov
sti
fcomip
sbb
cmp
shlb
imul
insb
pop
jg
shll
insb
xchg
jle
test
cmc
int3
cwtl
lods
sub
pushf
mov
enter
sub
mov
mov
xlat
xchg
cmpsb
lahf
xlat
lods
sub
fildll
js
mov
or
ret
mov
pop
sub
lea
sub
shll
and
call
int
or
xchg
xor
sub
aas
dec
movsl
adc
mov
test
fnstcw
lahf
mov
in
stc
scas
dec
test
jl
dec
ret
jl
popl
mov
fiadds
jg
ljmp
lods
xchg
jae
sbb
jp
cmp
xchg
jmp
pusha
out
out
jo
fsubl
cmp
je
jno
xchg
mull
push
aad
mov
into
test
cmc
mov
fmuls
leave
aad
push
cmp
jl
loopne
cltd
cmpsl
nop
or
in
aad
xor
pop
js
movsl
mov
es
sbb
add
cmpsb
nop
dec
popa
outsb
cmp
cmp
enter
push
jmp
adc
push
or
push
lock
imul
out
jecxz
and
cld
lock
jl
cmp
ljmp
dec
int3
pushf
lea
inc
das
pop
mov
cmc
adc
cmp
mov
xchg
pushf
sub
mov
cwtl
subb
stc
jg
lea
scas
mov
adcl
sbb
xor
cwtl
or
shll
out
mov
inc
add
loopne
mov
adc
stos
lods
clc
shl
hlt
mov
dec
mov
add
std
scas
aas
shll
enter
aad
add
je
dec
mov
xchg
sub
xor
fndisi(8087
in
dec
inc
cs
mov
popa
inc
test
mov
xlat
inc
dec
or
fbld
or
pusha
pop
pop
orl
nop
lahf
minps
xchg
outsb
mov
out
jle
pop
outsl
repz
ret
xor
push
mov
sub
mov
loop
xlat
mov
sub
call
pushf
xchg
out
lret
fcomps
lahf
sbb
dec
mov
fdivr
test
loop
fwait
sahf
jecxz
mov
stc
arpl
les
ret
adc
mov
repz
dec
inc
cmp
mov
fwait
insb
leave
adc
push
push
aam
mov
and
pop
iret
lds
pop
out
jmp
mov
jae
dec
sub
test
enter
pop
enter
xor
enter
adc
or
xlat
outsl
aas
push
mov
mov
arpl
das
addb
daa
pusha
ror
dec
test
js
jle
mov
mov
push
insb
subb
jle
out
js
xchg
sahf
sub
xchg
push
test
pop
jl
das
test
sahf
mov
js
mov
pop
jno
xor
test
in
pusha
les
sti
sub
int3
pop
roll
mov
int3
mov
and
les
sbb
pop
dec
pop
add
es
idivl
push
fcompl
cmove
cmpsb
lahf
cmpsb
jmp
ds
aam
cmp
cs
mov
mov
imul
mov
xchg
push
negl
push
call
lds
mov
lds
adc
mov
addb
mov
imul
je
or
pushf
enter
mov
adc
es
or
xor
iret
xchg
addr16
dec
pop
sbb
scas
jmp
out
mov
mov
adcb
outsb
mov
leave
pop
cmp
mov
ss
mov
push
cld
cmpl
les
lds
inc
nop
inc
daa
clc
cmpb
mov
mov
std
scas
pusha
pop
sbb
mov
cmpsl
jae
mov
je
insl
mov
ret
mov
das
adc
mov
shll
dec
fildll
adc
pop
mov
inc
mov
lods
movb
clc
ret
outsb
push
xor
inc
fnstcw
sbb
xlat
lds
add
movsb
enter
daa
cmp
addr16
cmpsb
dec
mov
stc
insl
mov
insb
pop
inc
fidivrl
scas
pushf
push
cs
ja
scas
cs
xor
xor
and
fistpll
xchg
push
mov
nop
sub
gs
cmpsb
mov
mov
jl
xchg
lea
movsb
jle
lods
add
dec
out
or
lea
push
xor
iret
mov
test
mov
loop
mov
sub
mov
in
leave
mov
and
pop
lcall
mov
orb
mov
xor
mov
or
gs
dec
fisubs
aam
enter
data16
cmpsl
nop
imul
adc
enter
xchg
cmp
pop
aaa
loopne
jo
cwtl
into
lret
dec
enter
cmpsl
out
nop
std
fwait
xchg
adc
loope
jl
xchg
xchg
pushl
cwtl
sub
fiaddl
mov
scas
pop
mov
mov
push
xchg
and
push
roll
mov
int
mov
jo
push
or
adcb
xchg
outsl
mov
push
sahf
push
test
mov
cmp
stc
mov
sahf
sbb
les
iret
repnz
aad
icebp
jo
or
mov
dec
lea
stos
xlat
sub
sub
push
add
lahf
shr
cmp
enter
ror
ret
iret
xor
sbb
pop
sbb
dec
rcrb
mov
inc
daa
cmc
les
fwait
inc
sub
push
fdivr
xor
xor
fisubrs
inc
jl
push
insb
xor
testb
fidivrs
push
adc
faddp
lock
enter
icebp
lods
jb
mov
mov
mov
sub
stos
sub
xor
enter
cmp
push
mov
int
scas
sahf
cmp
packuswb
lods
test
jl
sub
shll
jl
add
nop
data16
ret
fsubrl
clc
jno
jo
inc
loopne
outsb
mov
in
out
aas
pop
dec
xlat
mov
je
and
in
addr16
popf
testl
js
lods
mov
aam
sub
enter
cmp
sbb
pop
or
jb
jbe
mov
mov
scas
dec
jae
test
in
push
xchg
sub
stos
cmp
mov
lods
jo
sbb
push
ds
mov
xchg
mov
int
fisttpl
ja
cmp
sub
mov
scas
jecxz
cwtl
mov
cmp
es
pop
add
sbb
cmpsl
in
scas
cmp
and
popa
movl
insb
fdivs
add
out
mov
xor
xor
add
pusha
movsl
sahf
pop
xlat
or
test
mov
xchg
dec
nop
jns
jns
iret
cmp
sbb
cwtl
add
pop
and
bnd
mov
jo
mov
dec
lods
insl
fs
aaa
out
xchg
add
xchg
adc
cmp
loopne
mov
sub
xchg
pusha
in
roll
test
sub
push
rcrb
imul
dec
out
punpcklbw
xor
cmp
xchg
pop
ja
pushf
shlb
lods
and
or
ja
and
mov
fcoml
jg
outsl
push
loopne
inc
pushf
outsb
xchg
mov
movsb
dec
call
pop
lock
mov
movsl
and
shll
pop
xchg
dec
cld
jnp
push
loop,pt
fimuls
dec
lock
pop
pop
pop
enter
data16
in
outsl
scas
andb
ret
repz
mov
out
stos
stos
lea
push
movsb
mov
out
cmp
mov
pop
nop
js
sbb
test
mov
sbb
push
cmpsl
in
shlb
cmp
out
mov
jp
mov
push
jg
or
mulb
test
daa
mov
xchg
xchg
in
and
out
ljmp
lcall
xor
imul
cltd
jno
pop
test
pop
jo
das
push
jle
or
andb
sub
jl
mov
xor
adc
neg
add
and
in
repnz
sub
jmp
scas
pop
icebp
lea
rorl
mov
imul
dec
lret
movsl
shlb
adc
ss
call
mov
shrb
in
pusha
test
pop
arpl
rcrb
add
pop
sbb
es
jnp
aam
test
pusha
lock
and
pop
jns
pop
movsb
call
aaa
and
icebp
rorl
jle
daa
fsubs
stos
insl
jae
adcb
int3
loop
and
call
adc
mov
in
ret
loop
jl
xor
sbb
jl
push
hlt
pop
fwait
mov
lods
mov
dec
push
push
adc
clc
push
fldenv
mov
mov
sub
mov
scas
in
cmp
lret
std
insl
movsb
lahf
lock
pusha
repnz
scas
mov
roll
add
push
sbb
daa
es
adc
faddl
push
gs
stos
pusha
pop
jge
mov
cmp
imul
nop
pop
pop
pop
enter
insb
adc
fsubl
ficomps
mov
dec
mov
xor
les
add
and
movsb
sub
rolb
mov
loope
pop
mov
mov
rcrl
xor
push
iret
pop
shlb
cmp
mov
out
pop
nop
and
inc
es
sar
sahf
dec
push
lretw
or
in
imul
aam
push
gs
cmp
into
adc
pop
or
sbb
orl
or
loopne
loop
je
aam
popl
sbb
or
adc
inc
les
mov
jo
clc
xor
adc
pop
dec
xor
bound
std
pminub
or
enter
lahf
mov
cmp
cmp
xor
addl
call
xchg
mov
sub
out
stos
es
loope
mov
subb
mov
iret
jnp
and
in
in
ja
mov
movsb
mov
out
jl
enter
sub
js
or
pop
xchg
pop
es
xor
cmp
shlb
xchg
jo
dec
div
jmp
or
int3
add
aas
jl
mov
xlat
repnz
xchg
push
scas
mov
daa
xchg
and
mov
int3
test
xchg
movsb
fsubrl
and
fdiv
push
sub
xor
std
add
into
mov
outsb
pop
inc
xor
int3
cwtl
jnp
ret
jb
pop
push
test
test
push
add
dec
xchg
mov
cltd
sbb
sbb
jo
leavew
addb
sub
mov
xchg
sub
cmp
pop
sub
insb
sbb
nop
lods
sub
mov
cmpsb
cmp
pop
aas
movsb
jbe
in
push
push
xchg
sub
pop
sub
dec
das
pop
jne
das
mov
mov
je
test
ja
enter
cmp
add
push
cmp
push
jbe
loopne
mov
cmp
test
pushf
push
xchg
mov
cmp
sbb
mov
sbb
add
push
push
les
inc
sub
or
xchg
in
popf
mov
in
push
push
test
int3
nop
scas
lcall
mov
xchg
mov
sahf
popl
ret
mov
sahf
pop
xor
pop
mov
add
ficomps
xchg
pop
or
enter
xlat
xchg
sbb
xchg
jo
pop
aad
aad
inc
scas
pop
pop
pop
dec
js
lret
xor
dec
nop
mov
test
loope
fwait
mov
lods
or
xchg
ljmp
jne
ds
and
pop
push
nop
sub
and
loope
movsb
movsb
add
cmp
aaa
nop
fwait
adc
xchg
push
arpl
outsl
test
arpl
imul
adc
pop
sub
test
jae
mov
add
cmp
lret
cli
ret
lds
adc
mov
or
cmp
push
scas
and
stos
enter
jle
lahf
rcrb
enter
int3
sahf
adc
iret
mov
test
dec
adc
adc
in
adc
or
pushf
adc
movsb
cs
imul
aad
sub
xor
sets
pop
push
faddl
sbb
das
inc
sbb
enter
xchg
das
inc
jae
or
fstpt
sub
inc
out
sub
repz
je
sub
pop
pop
fisttpll
dec
pop
or
sbb
jge
lds
incl
cmp
lock
ror
repnz
or
test
cmpsb
pop
lahf
mov
jecxz
mov
or
jae
dec
clc
movsl
mov
daa
int3
or
outsl
jo
push
pop
pop
or
jo
insb
das
pusha
movsl
outsb
pop
or
cwtl
adc
jmp
or
jecxz
movsb
xor
adc
mov
sbb
and
insb
shrb
stos
inc
stos
sbb
fcomip
and
xor
into
cmp
ljmp
insb
maxps
ret
pushf
pop
enter
or
pop
fwait
xchg
ret
pop
mov
mov
pop
fwait
test
adc
dec
mov
pop
cmpsb
adc
pop
adc
mov
sbb
and
mov
mov
mov
mov
sub
sbb
mov
test
xor
adc
cmp
cmp
push
adc
mov
jmp
jo
enter
stos
enter
out
outsl
xchg
sub
sahf
sti
push
adcb
dec
pop
mov
sub
iret
sub
cmp
lods
mov
lods
fst
bound
jne
cmp
pusha
jo
out
or
adc
mov
movsb
xchg
dec
push
call
mov
mov
sahf
mov
push
sub
dec
sub
pop
jge
ja
dec
mov
push
mov
stc
mov
inc
das
cmc
sbb
cmpsl
cmp
mov
dec
or
clc
imul
pop
lods
bound
test
mov
push
lahf
test
xchg
lahf
dec
sub
xchg
dec
fs
push
lahf
cmpsb
nop
lret
push
daa
xchg
dec
dec
movsb
pop
jle
xchg
push
movsb
push
sub
outsl
outsb
or
hlt
rorb
ret
dec
lretw
add
adc
jp
mov
xchg
xchg
movsb
pusha
mov
xchg
cmpsb
push
outsb
lcall
mov
jb
stos
xor
lods
ljmp
inc
jl
fldl
pop
jno
inc
les
enter
adc
test
add
mov
pop
test
jg
sub
push
outsl
mov
add
shl
push
ret
scas
pushf
enter
xor
mov
add
push
sub
scas
inc
cmp
push
jo
mov
push
sub
and
gs
inc
dec
addb
insl
pop
daa
cmpb
dec
cli
mov
xchg
adc
xor
rorb
inc
cmp
push
in
mov
mov
in
push
and
lods
sbb
pop
sbb
outsb
sbb
inc
cmpsl
mov
xchg
cs
lods
test
lcall
push
jl
push
iret
sbb
out
movsb
enter
inc
pop
jmp
cmp
nop
test
push
std
and
jmp
pop
and
pop
lret
push
in
push
test
in
push
out
push
dec
cwtl
in
push
mov
or
arpl
repnz
lds
test
mov
popf
into
or
movsb
sub
mov
cmp
mov
outsb
mov
jmp
mov
xchg
lea
outsb
cli
sahf
xchg
test
cwtl
fimull
cwtl
xchg
insl
inc
mov
or
enter
js
cltd
cwtl
mov
mov
jle
rorb
xor
mov
out
cmp
lods
enter
pop
or
popf
dec
mov
xor
fdivs
jae
test
call
nop
pushf
arpl
arpl
das
push
out
xchg
pop
mov
sub
mov
mov
outsl
out
mov
and
aaa
cmp
je
jg
lods
sbb
lods
push
hlt
pusha
adc
fs
imul
pop
mov
in
and
pop
daa
sub
inc
mov
fmul
sahf
xor
and
iret
cltd
icebp
and
cwtl
push
cli
movsl
xchg
or
push
and
sti
cs
mov
mov
fs
lods
dec
shlb
movsb
daa
sub
in
or
orl
out
loop
adc
mov
outsl
popa
and
mov
clc
sbb
ja
movsb
aas
rorl
and
sbb
addr16
mov
sub
mov
ljmp
pop
or
addr16
mov
cmp
xor
movsb
jbe
test
inc
cmp
inc
test
add
hlt
xlat
into
push
or
imul
lock
jae
loope
xchg
add
shll
xchg
mov
pop
or
cmp
and
daa
push
xor
pop
push
scas
pop
sub
pop
cmpsl
adc
sbb
lea
test
insl
stos
fsubrs
cmpl
movsl
aam
enter
fwait
push
push
dec
test
xchg
adc
aad
sbb
mov
test
mov
or
fdivrl
andps
fcoms
ds
ljmp
aaa
push
movsl
sahf
and
je
pop
jns
sub
loope
add
in
ret
out
mov
enter
iret
mov
mov
mov
test
insb
movsl
stos
and
mov
mov
jne
cmp
pop
jae
insl
sbbl
cltd
mov
test
test
xchg
mov
scas
and
enter
shld
sbb
mov
cmpsb
push
enter
in
push
cwtl
enter
mov
jg
sub
push
fs
scas
mov
iret
imul
sbb
outsb
ss
inc
xchg
das
clc
lods
mov
loopne
xchg
mov
aaa
mov
inc
imul
mov
xchg
mov
insl
jecxz
sbb
mov
jo
ds
gs
and
push
test
andb
icebp
cmp
dec
lods
lfs
jge
pusha
inc
scas
daa
jl
punpckhwd
in
nop
adc
add
pop
push
and
dec
jecxz
push
jb
mov
shr
jg
cld
loop
xchg
xorb
mov
iret
dec
adc
stc
enter
and
sbb
aas
mov
mov
or
inc
mov
setg
in
je
aaa
dec
jl
add
fwait
sysenter
jo
jge
in
dec
cmp
imul
pop
mov
rcll
mov
insb
adc
in
mov
cmp
scas
mov
dec
jle
movsb
jo
fmull
sahf
pusha
popl
mov
dec
push
lret
adc
cmp
cltd
repnz
test
fcomps
cmpsl
rcll
loope
in
dec
mov
pop
sbb
sbb
popa
add
push
mov
scas
xchg
lds
jo
ret
stos
mov
cltd
stos
sub
jne
fdivrs
mov
dec
inc
movsl
xchg
adc
jnp
incl
sar
dec
adc
push
roll
pop
jmp
cmp
insb
push
push
ljmp
xor
sub
enter
arpl
cli
ja
sub
stos
jne
test
fisubrl
xchg
movsb
mov
inc
push
jmp
arpl
cmp
scas
jne
movsb
cmp
inc
sarb
daa
shrb
shl
and
ret
inc
nop
push
push
push
icebp
lret
push
sbb
stc
inc
daa
lahf
push
cmp
sahf
sub
jp
in
xor
dec
dec
cld
sub
iret
orl
or
sub
cmp
cmp
mov
jl
cmp
in
push
cltd
inc
add
scas
int
and
jo
inc
mov
sahf
lods
and
out
outsb
mov
das
aaa
lods
push
inc
or
inc
ja
test
mov
and
push
dec
in
cmpsb
arpl
stos
insl
lods
fadds
xchg
push
push
out
les
jae
mov
stc
sbb
in
or
sahf
stos
add
clc
in
dec
xchg
and
push
dec
mov
out
imul
lock
test
in
push
movsb
mov
ret
loopne
pop
ret
xchg
in
pop
push
test
es
add
popf
aad
dec
mov
fsubrs
dec
ja
mov
mov
mov
and
or
jne
push
clc
or
inc
jp
push
push
mov
mov
mov
bound
mov
pushf
call
inc
sahf
out
insl
mov
das
out
in
adc
mov
out
lret
das
sbb
xlat
mov
rorb
aas
jg
sbb
pushf
sub
stos
fmulp
fnstenv
loopne
andb
sahf
loop
sahf
into
mov
mov
test
lds
sub
pop
xchg
gs
stos
movsl
movsb
jo
stos
incl
lods
mov
mov
dec
and
or
push
pusha
mov
stos
mov
outsb
mov
pop
hlt
popf
sbb
shlb
in
xchg
sub
out
scas
add
stc
jb
mov
dec
aam
cmp
fucomi
in
mov
data16
loop
lods
mov
lahf
scas
dec
lods
cmp
fisubrs
lret
rcrb
sti
xchg
es
push
aad
in
lahf
sub
and
daa
jae
sub
xchg
mov
mov
daa
mov
mov
push
xor
sub
call
dec
enter
mov
mov
mov
sub
push
inc
cmovg
adcl
daa
fs
xchg
inc
das
in
mov
sub
cmpsl
lds
jl
and
cmp
ljmp
inc
xchg
jmp
xor
push
in
lods
hlt
mov
scas
stc
js
pop
lahf
outsb
xchg
mov
clc
lahf
and
adc
mov
inc
push
sub
out
add
mov
sbb
ljmp
imul
lock
and
outsl
mov
movsb
jle
lods
call
jae
test
sub
xor
loope
mov
sub
cmp
pop
dec
out
imul
inc
jge
test
pushf
pop
loop
movsb
adc
idivl
and
xchg
je
cltd
adc
mov
ljmp
fidivs
shlb
mov
std
push
mov
adc
aaa
mov
mov
mov
dec
mov
mov
adc
das
loopne
sbb
sub
mov
jne
push
jge
pop
mov
mov
cmp
in
insb
dec
daa
imul
insb
fisubs
mov
repnz
lock
in
fdivrs
jb
fidivs
cmp
out
loopne
cmpsb
add
jmp
mov
scas
xor
stos
mov
push
fnsave
mov
call
lods
sbb
stos
mov
movl
jbe
xchg
cmpsb
and
stos
lods
cmp
scas
fs
dec
das
sahf
jl
iret
pop
in
sub
cmp
daa
xor
icebp
outsb
push
xchg
or
jo
jbe
sbb
popf
xor
imul
icebp
jno
in
sti
cmp
cmp
lcall
push
rclb
lods
cltd
mov
sarb
xchg
cmp
sbb
add
cmp
dec
mov
fsub
jo
jbe
xchg
add
lea
add
clc
xor
loopne
jl
jb
sti
shll
push
bound
jge
in
cmp
outsl
imul
rorl
cltd
in
lea
xchg
aaa
cmpl
fcomps
sbb
sar
push
aam
mov
fmul
pop
add
add
cmpb
jl
lds
sbb
jge
or
enter
ja
shl
filds
cmp
and
fisubs
lcall
scas
mov
cmpl
mov
mov
sub
and
xchg
lods
mov
sub
cmp
stos
mov
imul
push
push
inc
dec
imulb
stc
cli
fbld
ja
mov
fnstenv
daa
xor
mov
pop
push
push
and
test
je
jne
sub
xlat
enter
shrb
mov
dec
cmp
mov
bound
enter
roll
xchg
scas
cmpsb
clc
int3
jo
lock
sub
mov
in
loopne
js
cmp
call
jo
popf
lahf
das
iret
push
data16
into
stos
dec
jne
jecxz
pusha
icebp
test
outsl
lret
repz
in
sbb
scas
lods
sarb
mov
inc
xchg
mov
pop
lret
pop
pushf
xor
sarb
jge
js
mov
movsb
imul
jnp
fs
or
jno
xor
lahf
cmp
sbb
call
push
test
push
sub
mov
lret
lods
inc
pushf
mov
mov
pop
mov
ljmp
push
test
sub
xchg
pop
sbb
pop
push
popf
push
cmp
iret
mov
gs
adc
or
and
jo
fildll
cmp
mov
sahf
mov
pushf
mov
mov
xchg
pop
push
sub
xchg
sub
gs
int
test
sub
jg
and
jno
lahf
les
add
loopne
fbld
inc
xor
push
fldt
jp
scas
add
jmp
and
test
dec
push
aaa
jmp
xchg
mov
xchg
and
jo
popa
mov
test
mov
movsb
or
test
and
and
insb
shlb
mov
notb
lods
rcrb
imul
cmpsl
xor
and
sahf
push
push
xchg
inc
adc
sahf
dec
or
mov
stos
and
loopne
xor
addr16
mov
mov
int3
mov
mov
mov
rolb
mov
test
mov
pop
test
mov
cmpsl
pusha
dec
aam
sub
out
popa
pop
mov
nop
or
ret
lea
xchg
dec
and
jmp
cmpsb
add
add
push
mov
mov
insb
hlt
in
daa
in
fmull
pop
lahf
cwtl
cmp
pushf
cltd
push
movsb
cltd
push
lods
cltd
addr16
add
sub
cmpsl
cwtl
mov
cli
pop
sub
mov
lret
inc
clc
cmp
dec
mov
iret
sbb
mov
sub
cmp
mov
mov
sub
push
pop
cmp
push
cltd
insb
js
aam
xlat
adcb
mov
xchg
loope
add
xchg
xchg
mov
out
iret
test
movsl
call
xchg
lds
imul
push
add
push
and
xchg
pop
sub
and
push
cwtl
xchg
imul
outsl
loopne
ljmp
mov
jns
pop
jno
mov
pusha
cli
pushf
mov
or
jmp
pop
and
stos
pop
sbb
mov
or
adcb
mov
jbe
push
add
inc
mov
xchg
sbb
sarb
jb
xlat
or
cmc
lcall
xchg
add
std
mov
add
outsb
sbb
sub
mov
lods
jo
out
scas
push
in
shll
enter
test
dec
mov
test
movsl
je
cmpsl
push
add
push
sub
and
test
and
sub
shll
hlt
daa
cld
sahf
add
or
adc
and
enter
mov
cmpsl
nop
pop
inc
and
xor
movsl
jae
ljmp
and
in
clc
cmpsl
shlb
jecxz
dec
xor
xchg
outsb
xor
jnp
push
dec
jl
dec
je
insb
push
push
insb
dec
cmp
jmp
xor
nop
dec
and
hlt
es
cmp
jnp
mov
cmp
push
xchg
pop
pop
xchg
and
mov
jae
mov
and
push
js
cmp
jne
mov
jge
fwait
or
test
mov
imul
loope
roll
repz
jge
stos
movsl
and
jg
bound
loopne
mov
cmp
cmp
in
inc
adc
jge
call
rorl
mov
mov
es
scas
outsl
sub
rcrb
movsl
jmp
mov
dec
sub
mov
jmp
mov
xchg
lret
ret
fisubs
nop
mov
jno
pop
adc
mov
sbb
push
shll
ljmp
sarb
dec
shlb
inc
nop
icebp
add
lcall
or
push
jecxz
adc
pop
pop
xchg
test
imul
xor
out
lods
cmc
cmp
pushf
es
add
cmp
scas
divb
loopne
sub
imul
sahf
das
cmp
hlt
outsl
mov
push
jle
int3
dec
mov
sti
cld
ret
popf
stc
mov
insl
and
das
pop
test
in
and
mov
ret
push
mov
mov
push
hlt
dec
outsb
push
fidivrs
mov
orb
sbb
push
lcall
out
cmc
xlat
daa
sub
jg
add
adcl
popf
xchg
xchg
mov
call
or
inc
mov
fucom
or
mov
dec
addr16
xor
push
adc
jbe
cmc
imul
xor
data16
cmp
push
dec
hlt
add
pop
js
xor
mov
xchg
movsl
cmpsl
enter
mov
jle
push
mov
outsb
mov
gs
mov
cmpsb
adc
cs
enter
xchg
pop
xchg
sub
pop
sbb
mov
jp
or
inc
scas
pop
enter
xchg
inc
push
popf
mov
push
dec
jbe
or
push
in
cltd
clc
es
test
stos
pushf
mulb
jl
pushf
or
cwtl
daa
push
lcall
mov
es
jae
mov
pushf
das
sub
outsb
cwtl
cmp
in
notb
popa
pusha
dec
pop
or
mov
xor
stos
sarb
call
mov
cwtl
int3
stos
ror
mov
inc
stos
push
inc
pop
mov
lods
cmp
cmp
sub
cmp
movsl
jne
cmp
sub
mov
mov
nop
fmull
inc
cltd
fiadds
sub
jnp
and
dec
dec
cmp
cs
lea
fwait
mov
enter
test
pop
mov
cmp
sahf
out
cmp
or
ja
cwtl
popa
pushf
ret
mov
add
xor
and
xchg
or
out
jg
xor
scas
lahf
movsl
xor
push
scas
inc
test
mov
lods
call
pushf
mov
fisubs
mov
mov
movsb
fistps
sub
xor
ret
lods
sbb
mov
rclb
xchg
inc
out
jae
mov
lods
xor
ss
adc
pop
popa
adcb
mov
cmp
jne
lds
and
fld
cmp
iret
jo
cmp
outsl
call
insb
xor
cltd
sub
xor
lret
xchg
xor
fsubrl
out
addr16
mov
int3
das
xchg
and
popa
push
sub
lods
call
cmp
test
movsb
mull
and
dec
lds
push
dec
pop
stos
jb
mov
mov
sbb
test
dec
cmpsl
cmp
stos
pushf
nop
xor
sub
mov
orb
pop
andb
cwtl
xchg
jne
cmpsl
sahf
lock
adc
and
testl
push
mov
pop
mov
fdivrs
into
inc
sub
pushf
inc
mov
mov
daa
imul
push
jns
lods
mov
xor
outsl
adc
inc
jb
and
mov
sub
aas
clc
xor
scas
jne
xor
xchg
test
mov
mov
scas
movsb
cmp
dec
push
sub
pop
cmp
or
aam
daa
scas
outsl
xchg
inc
lock
mov
lods
rolb
nop
pushf
and
mov
push
lods
ja
xor
xchg
lds
mov
sub
sbb
inc
je
sub
sbb
adc
cwtl
push
push
dec
test
sarb
stos
nop
lods
inc
lock
es
jg
test
or
inc
push
jmp
mov
or
enter
scas
and
lock
xor
xor
mov
xor
stos
sub
daa
and
add
iret
adc
imul
sub
pop
mov
in
dec
jp
xchg
imul
sbb
pusha
push
xchg
jmp
outsb
orb
fmuls
popf
sub
int3
add
outsl
loop
cmpsl
inc
push
fs
iret
push
pop
and
pop
lcall
xchg
ljmp
loopne
pop
jno
shlb
add
dec
je
mov
cwtl
lods
mov
xor
sub
shrl
or
and
dec
arpl
daa
nop
xor
out
out
push
push
xor
push
or
xchg
mov
ja
xor
test
cld
loopne
cmc
sahf
xor
mov
xchg
mov
pushf
daa
loopne
int
xchg
inc
int3
dec
mov
lds
mov
push
mov
fcoms
gs
pop
cmpsl
scas
dec
push
test
jo
mov
scas
insl
jae
fs
jnp
clc
enter
cwtl
cmp
cld
aaa
sbbb
movsl
gs
insb
mov
ljmp
sahf
mov
pop
push
shld
mov
cmp
daa
outsb
push
mov
xor
ret
sub
das
and
es
ficomps
xchg
add
xchg
cli
outsl
mov
jne
mov
sbb
mov
js
jo,pn
ret
filds
pusha
sbb
out
xchg
lret
data16
rep
in
test
inc
cmc
and
mov
xor
mov
jne
cmp
push
imul
and
mov
scas
fdivl
xor
ds
xchg
outsb
jmp
sbb
pusha
or
loop
movsb
cli
les
icebp
dec
loopne
or
dec
add
sub
sub
lret
pop
sub
jae
xor
sbb
jg
lds
lods
cmc
arpl
scas
dec
mov
lret
cmp
mov
repz
loop
roll
dec
not
test
xor
movl
xchg
ss
iret
adc
cld
leave
outsb
mov
or
ret
mov
enter
cmpsb
mov
outsb
xor
xchg
clc
mov
stos
repnz
icebp
out
fcoml
lret
push
push
and
pushf
outsb
stos
fs
mov
popa
enter
sti
sbb
xchg
sub
sub
sub
les
stos
and
idivb
nop
lock
jns
pop
sahf
and
mov
jne
mov
hlt
test
outsl
clc
nop
lods
mov
in
ret
mov
mull
add
jp
inc
enter
ja
cld
addr16
pop
enter
mov
xchg
rcrl
pushf
ss
mov
inc
dec
gs
out
mov
insl
push
and
pop
shlb
lods
das
mov
dec
fisubs
rorb
scas
cmp
in
nop
mov
cmpsb
adc
or
lcall
cmpsb
push
dec
std
jg
call
mov
cwtl
dec
ds
cmpsb
cmp
popa
dec
je
pop
arpl
pop
shr
lods
cmp
pop
rcl
jnp
mov
mov
or
mov
jae
push
imul
sub
sub
and
push
mov
mov
cmp
pop
xor
stc
popf
enter
lahf
idivb
daa
cmp
pusha
cwtl
and
lret
stos
movntq
xor
cmp
and
lods
cmp
je
enter
push
xchg
fdivs
scas
xor
cmp
mov
sub
fucom
mov
or
jle
mov
dec
pushf
lea
movsl
jmp
jbe
cwtl
sub
pusha
or
cld
push
xchg
push
cs
js
ljmp
movsb
mov
or
cs
dec
data16
nop
inc
jge
or
push
aaa
mov
test
push
loope
add
jg
lods
or
call
jle
mov
fsubrp
jge
je
stos
cmpl
seto
inc
movsb
or
mov
sahf
jo
aam
sahf
scas
pop
push
les
enter
jecxz
imul
add
xchg
mov
in
outsb
inc
subl
jmp
das
dec
jb
aaa
cwtl
xchg
mov
ljmp
pushf
sub
clc
cld
das
lcall
out
fisttpll
mov
imul
ja
pusha
mov
inc
lods
imul
lods
dec
pop
push
mov
add
push
sub
inc
mov
enter
mov
lahf
sbb
lcall
icebp
xchg
sbb
cwtl
sub
addb
fwait
cmpsb
pop
mov
outsb
lods
xchg
jne
xor
mov
push
movsb
fidivrs
jne
xor
imul
icebp
adc
add
push
mov
mov
sub
push
stos
outsb
decb
loop
mov
xchg
xchg
inc
lods
stos
pusha
mov
popf
mov
mov
pushf
xchg
and
xor
sahf
fstpl
sub
or
mov
mov
mov
outsl
fs
pushf
mov
scas
scas
and
add
ret
shr
mov
fisttpll
cltd
scas
push
data16
lea
insb
cli
push
inc
shrb
cltd
call
cmp
stos
arpl
test
push
jp
inc
push
pushf
adc
inc
nop
aaa
inc
jnp
cld
sub
adc
push
inc
loopne
push
stos
mov
cltd
popf
mov
mov
enter
ljmp
adc
nop
scas
xchg
cwtl
ss
xchg
movsl
xchg
xor
xor
popl
xchg
stos
mov
and
gs
push
aaa
and
scas
loop
xchg
push
int3
ds
je
jno
stos
js
cltd
mov
push
cmpsl
cmp
mov
pop
ja
push
aas
shlb
stos
test
popa
popa
lds
out
pushf
push
xchg
xchg
jne
cmp
mov
pop
pop
sbbl
cmpsb
pop
xor
scas
stos
xor
subb
mov
xchg
scas
inc
addr16
xchg
cmp
push
mov
mov
xchg
xchg
scas
daa
dec
inc
insl
mov
subb
arpl
imul
sub
lods
mov
lahf
sub
stc
dec
mov
mov
mov
or
mov
nop
and
lods
sub
mov
cmp
pop
es
mov
mov
mov
rclb
mov
dec
jb
jne
imul
outsl
das
sbb
jbe
cld
jae
fstps
or
add
push
scas
mov
xor
stos
and
push
mov
out
adc
pushf
insl
outsb
lcall
and
out
in
xchg
stos
mov
movsb
int3
cmp
push
ljmp
mov
daa
jmp
dec
mov
mov
dec
lds
xchg
in
push
dec
sub
push
push
insb
inc
lods
dec
sub
dec
pop
sub
xchg
sub
pop
mov
cmc
mov
lods
xlat
movsl
xchg
fisttpl
jno
mov
cs
je
cmp
push
icebp
in
mov
cmpsl
cmp
ljmp
hlt
jp
xchg
inc
sbb
pushf
loopne
add
stos
mov
mov
leave
outsl
mov
jno
jmp
dec
imul
cmpsl
stos
test
int
arpl
jo
sub
xchg
lahf
pop
sti
cs
push
xchg
ret
aaa
push
lret
popf
cmp
pushf
dec
xchg
dec
cltd
mov
adc
lock
ja
xchg
cmp
xchg
pop
rcr
das
pop
movsb
cltd
sub
cmpsb
test
sbb
sbb
xchg
jb
push
dec
cs
xchg
mov
mov
out
idivb
js
cli
pusha
arpl
outsb
xchg
call
lods
sahf
pop
pop
mov
xchg
mov
pop
xor
mov
xchg
pop
inc
int3
mov
data16
dec
lea
xchg
inc
sub
cltd
cmp
pop
arpl
jge
xchg
sub
jg
cmp
fwait
out
outsb
in
cmp
pop
xor
hlt
sahf
cltd
adc
rolb
enter
push
xlat
call
nop
jl
addb
pop
jmp
add
daa
mov
mov
aam
fsubl
inc
daa
adc
inc
in
fsubs
sub
mov
sub
aam
fmul
push
jae
sbb
scas
mov
movsl
call
lds
and
nop
fcomps
sub
xchg
mov
pop
pop
cs
outsl
outsl
lods
jb
push
pop
je
add
imul
sub
sub
out
pop
test
daa
and
cmp
rol
lods
sarl
pop
icebp
gs
and
mov
push
outsl
gs
mov
js
mov
movsl
sub
addb
pop
out
pushf
mov
fisubl
mov
mov
sbb
sub
xchg
mov
insb
add
and
pushf
mov
repnz
push
mov
lock
ljmp
xor
sarb
inc
movsb
insb
sub
mov
aas
stos
mov
push
loopne
mov
lock
adc
mov
movsb
or
ja
cwtl
lahf
xchg
mov
xor
shrl
mov
mov
mov
mov
cmpsl
push
fsubrl
stos
cmovae
nop
mov
das
mov
inc
in
movsl
mov
es
jno
xor
and
sub
and
insb
xchg
mov
in
out
cmp
lcall
ljmp
adc
mov
out
int
mov
sahf
push
xchg
movsb
jno
xchg
ret
push
mov
mov
pop
mov
clc
xchg
out
outsl
mov
lea
xchg
xchg
jl
mov
je
add
fs
sbb
lds
movsl
sub
sub
ja
pop
pop
inc
mov
mov
enter
scas
jo
daa
xchg
addb
scas
push
lds
lods
sub
xchg
ret
loop
cltd
pusha
adc
outsl
jl
push
add
push
test
pop
jle
sub
test
xor
pusha
mov
pop
test
xor
outsb
sub
and
jo
jne
bound
cmp
out
mov
enter
mov
notb
cmpsb
dec
mov
bound
in
xor
xchg
bound
xor
pushf
mov
rorl
mov
ss
mov
popa
adc
rolb
push
inc
inc
push
pop
gs
icebp
repnz
pushf
push
cmp
sub
mov
loop
ljmp
sti
out
lock
enter
lret
into
sbb
pop
xchg
test
leave
lods
dec
mov
cwtl
ror
inc
lods
sub
lods
and
jg
xchg
dec
push
lock
pop
jo
fcompl
mov
pop
sbb
add
xchg
jle
out
cmpsb
jl
push
sub
push
jnp
movsb
add
adc
es
je
cmp
pushf
push
mov
cmp
repz
sub
jg
scas
xor
test
cmpsl
xchg
pmulhuw
or
jge
xchg
fisttpll
mov
outsl
xor
pop
pop
mov
arpl
mov
mulb
loopne
xchg
lds
mov
dec
mov
in
xchg
xchg
mov
jp
dec
aam
jno
repz
shl
lods
jae
fisubs
push
mov
pmaxub
xchg
mov
leave
mov
lret
test
pop
xchg
ss
rorb
cmp
push
cltd
mov
and
cwtl
inc
pop
xchg
or
mov
mov
addr16
fdivl
mov
or
push
sahf
dec
pop
rcr
pusha
jns
cwtl
daa
push
inc
es
jo
mov
xchg
pop
sbb
in
daa
mov
mov
and
pushf
dec
pop
mov
cmp
inc
mov
rcrb
and
inc
pusha
sub
lea
mov
pop
stos
pop
mov
out
fdivrl
aad
xchg
test
xor
pushf
arpl
cwtl
lods
rcr
mov
lods
gs
pushf
xorb
push
sbb
pop
mov
mov
dec
out
mov
adc
jmp
fadd
cwtl
jb
andb
rorl
js
sbb
mov
lds
clc
test
fdiv
cmp
and
pop
jnp
es
sub
fcmovbe
shrl
insl
jecxz
test
das
iret
mov
cmp
fs
popf
mov
fwait
xchg
fwait
push
lret
enter
in
pushf
xchg
test
enter
push
push
mov
add
ret
aaa
insb
lea
lock
mov
shrl
clts
xchg
test
scas
mov
fdivs
jb,pt
push
jp
xchg
sbb
jbe
in
loopne
jl
sbbb
xchg
out
xor
addr16
popa
xor
mov
jecxz
test
add
xchg
enter
outsl
mov
dec
push
cli
push
mov
fsubrs
out
test
out
adcb
cmp
das
adc
inc
hlt
mov
mulb
sbb
stos
push
mov
mov
add
pop
popf
in
push
mov
inc
mov
lods
cmp
aam
daa
xlat
lds
jmp
int
cmpsb
jo
jne
mov
test
pushf
lock
in
push
push
ljmp
pop
mov
movsb
mov
adc
add
in
jmp
movsl
fucomp
inc
sub
cs
ja
cmp
mov
jecxz
or
push
pop
xorl
fiadds
leave
push
test
aas
cld
ja
pop
mov
sub
lock
mov
mov
mov
iret
xchg
insl
adc
out
lods
xor
out
mov
ja
cmp
lds
popf
enter
mov
popf
ljmp
push
imul
popa
mov
lahf
sbb
lods
out
mov
ljmp
imul
mov
call
out
es
jb
xchg
out
sub
lods
call
movsl
xor
inc
call
nop
dec
jl
xorl
daa
outsb
cmp
xchg
cmp
addr16
push
fsubrl
or
xchg
cmpsl
outsb
mov
hlt
and
das
fldl
nop
pop
or
pop
mov
pushf
sub
testb
mov
push
shl
cmpsb
scas
cmp
rcr
xchg
jns
mov
mov
xchg
inc
add
inc
mov
mov
inc
mov
in
lods
cmp
pop
or
jmp
out
out
mov
inc
aas
lds
xchg
sub
cmc
xor
push
cmp
bound
adc
lret
stos
and
stos
in
lods
cmp
fsubs
adcl
xorl
jmp
iret
cmpsb
cmc
mov
stos
jns
pop
add
sbb
mov
mov
je
inc
pop
clc
out
jmp
shl
mov
or
dec
ds
popf
daa
stos
push
addr16
enter
fs
ss
mov
lods
mov
loopne
xor
mov
xchg
push
mov
push
pusha
push
imul
xchg
rcl
jns
push
cmpb
mov
add
push
xchg
insl
lds
out
scas
and
jp
ja
mov
add
jl
adc
lcall
and
es
cmp
jl
cmp
mov
push
mov
test
lds
dec
popa
xchg
insl
jg
adc
decl
inc
mov
sahf
popa
aam
xor
arpl
sahf
outsl
xchg
xchg
xor
cld
pop
loopne
dec
mov
sbb
cmp
test
fs
inc
mov
movl
out
movl
xor
pop
pop
mov
inc
jbe
dec
arpl
sbb
repz
push
ljmp
add
lret
in
in
int3
mov
in
rcrl
push
loopne
mov
or
pop
arpl
test
sbb
insb
sbb
scas
xor
cmpsl
mov
and
mov
or
cmpb
pop
cmpsb
sbb
je
cmp
pop
pop
popf
test
cltd
xchg
daa
arpl
rcrl
sahf
nop
nop
lods
sbb
mov
dec
push
std
test
mov
mov
cmp
movsl
or
mov
repnz
movl
mov
and
jmp
nop
lods
adc
mov
and
jp
cmp
inc
jne
xor
out
cmp
cmpsl
mov
stc
push
inc
in
sbb
stos
es
dec
decb
sbbl
in
jb
aad
jbe
mov
mov
das
stos
lds
lods
repnz
push
xor
jns
insl
test
sbb
mov
xor
pop
push
and
push
mov
shr
movsb
lds
mov
dec
ljmp
push
cmp
negb
lahf
rorl
cmpsb
mov
scas
mov
cwtl
into
call
popf
lds
out
add
lret
call
popf
pop
cmpsb
mov
data16
mov
outsb
xor
push
cld
jb
sub
movsb
push
mov
popf
imul
pushf
or
sahf
lret
fs
pop
test
mov
scas
or
lds
sbb
cmpsl
rorb
insl
mov
push
fs
aam
fwait
loopne
dec
or
or
ja
cmp
adc
movsb
out
outsl
loope
dec
imul
lea
lea
sub
push
daa
ja
cmp
adc
and
lea
dec
pushf
and
sub
stc
data16
stos
xor
pop
andb
mov
adc
or
pop
mov
imul
cmp
daa
movsb
pushf
push
push
sahf
sub
sbb
in
movsl
enter
xor
mov
sbb
jnp
sub
cmp
out
lds
call
bound
fs
fstpt
dec
xor
gs
xor
dec
xchg
movsl
shr
movsb
jns
in
popl
mov
insb
pop
dec
inc
cwtl
push
call
inc
and
ret
packuswb
mov
sub
popf
sub
inc
outsl
fadds
sub
imul
pop
sub
rclb
sbb
pop
pusha
pop
xchg
loopne
cmpsb
insb
pop
psllq
xchg
sbb
jmp
fwait
xchg
mov
jl
ljmp
mov
pop
icebp
nop
stos
sbb
or
daa
test
push
xor
xchg
sub
outsl
lods
xchg
scas
inc
out
pop
pop
cmp
sbb
jg
lds
jb
pusha
scas
das
js
cmp
cmp
addr16
jns
jo
pop
mov
les
scas
dec
fistpll
lds
mov
pop
adcl
movsb
xor
fnsave
push
cli
shll
jne
outsl
lods
pusha
push
iret
mov
pop
cmc
xor
mov
inc
xor
add
dec
mov
iret
loop
push
lcall
cmpl
inc
clc
mov
and
test
jo
enter
sub
icebp
pop
sti
div
in
adc
pop
mov
xchg
loop
movsl
mov
aad
pushf
fbld
and
push
icebp
or
rcrl
mov
fdivrl
ss
mov
add
push
mov
mov
dec
test
push
jb
and
lods
fs
sahf
mov
and
jns
cmc
jae
rcrl
xchg
mov
mov
ja
xor
adc
insl
add
mov
pop
ret
int
pop
jnp
cmp
ss
popf
adc
pop
xchg
pushf
mov
or
daa
jb
stos
inc
je
lea
loope
shrb
std
vorps
out
push
loope
push
pop
js
xchg
inc
dec
dec
sbb
int
jmp
xchg
icebp
mov
mov
out
jg
movsb
mov
jb
insl
jge
xor
dec
cmp
mov
xor
rol
adc
sub
arpl
test
out
nop
scas
push
les
lds
fisubrl
fistpl
test
imul
and
or
fldenv
out
mov
testl
cltd
mov
mov
cwtl
repz
and
or
adc
fsubs
fisttpll
rclb
or
push
aad
cmp
rcrb
adc
cmp
adc
cmp
stos
outsl
sbb
pushf
insb
rorb
movsb
dec
mov
inc
imul
xchg
shlb
push
orl
inc
or
jns
shlb
lds
imul
xor
push
lret
sti
push
enter
jns
push
and
nop
fisubrs
scas
mov
pop
dec
sahf
jno
pop
test
pop
enter
enter
outsb
cmp
fs
sbb
clc
ds
subl
loope
cmp
lret
cmp
addr16
fwait
test
subl
push
stc
jae
add
adcl
mov
aam
push
push
jno
fmul
cltd
lods
in
repz
inc
lcall
xchg
shl
scas
daa
xor
mov
pop
sahf
push
cmp
cld
jo
in
repz
inc
incb
and
movsb
fcompl
inc
and
out
aam
out
leave
icebp
sahf
or
loope
jp
cmp
fsubs
adc
enter
lods
test
ds
shrb
push
xchg
gs
ret
push
decb
pop
dec
jb
movsb
or
mov
cmpsb
repz
inc
add
cmp
popf
rorl
pop
lods
jl
in
repz
inc
cmpsl
test
icebp
cmp
mov
mov
mov
xchg
mov
mov
or
mov
insb
repz
jmp
aaa
out
sbb
mov
add
or
ds
xchg
xchg
cmp
daa
jbe
cwtl
sbb
loope
sahf
pushf
out
jo
test
jmp
push
push
int3
out
jg
movsl
jp
mov
inc
pushf
popa
test
in
and
jno
sub
and
and
xchg
pop
lds
jl
out
add
jbe
enter
and
call
outsl
pop
jl
xor
mov
dec
push
out
pop
mov
jp
jmp
mov
stos
xor
jmp
sub
sbb
pusha
pusha
imul
shl
sbb
xchg
dec
xchg
pop
xchg
outsb
loop
fstpl
adc
icebp
addr16
sahf
std
pop
mov
sub
in
add
rcrl
daa
lahf
mov
mov
int
fisttpll
xor
into
jb
dec
fs
mov
push
mov
adc
out
pop
lods
lods
ljmp
jle
adc
push
out
iret
out
in
scas
data16
daa
pop
cmp
daa
sub
sbb
push
popa
inc
dec
ret
inc
dec
imul
loopne
int
push
dec
xchg
das
mov
stos
stos
cmp
enter
push
push
and
xor
jnp
mov
enter
adc
cmp
jbe
in
jle
lea
mov
out
xchg
adc
lahf
cli
adc
sub
sub
push
movsb
sub
lods
cmp
dec
daa
stos
pop
pop
push
pop
mov
mov
bound
hlt
xchg
push
mov
and
xchg
dec
jno
inc
adc
sub
mov
pop
ljmp
sub
mov
icebp
scas
sbb
dec
out
incl
pop
and
mov
std
push
adc
cmp
mov
or
push
cmp
xchg
sub
enter
les
ja
movsl
inc
test
lods
sub
pushf
lea
scas
jns
or
out
hlt
sbb
lds
ret
pop
sbb
fildl
cmpl
in
add
push
idivl
sub
fisttpll
cmp
popf
into
jmp
pushf
push
outsb
push
fucom
lahf
mov
sbb
iret
ret
pop
aas
xadd
out
cli
vmovsldup
stos
sbb
xchg
fimuls
aas
cwtl
sbb
push
or
mov
cltd
enter
xchg
pop
cwtl
pop
or
jb
je
scas
jbe
jmp
cmpsb
mov
sahf
mov
mov
scas
dec
xchg
test
xchg
lcall
and
and
repnz
sub
outsb
and
outsl
dec
rcl
mov
or
adc
insb
fsubp
sub
out
out
sbb
push
mov
je
mov
mov
lret
repnz
mov
push
lahf
or
mov
scas
mov
scas
push
xor
push
in
jno
gs
scas
int3
outsl
popa
sarb
push
cmp
xor
lods
pop
xchg
and
hlt
sahf
call
arpl
faddp
popa
inc
and
sbb
and
xor
pop
xor
stos
mov
nop
test
or
add
mov
stos
cmp
fldenv
aam
movsl
test
push
movsb
sbb
mov
lds
addb
test
int3
imul
dec
inc
mov
sub
mov
mov
mov
fdivrl
pop
push
add
outsl
js
aad
pop
xchg
cmp
cmpsb
lea
xchg
pop
js
insb
mov
jl
call
popf
lods
mov
pop
movsb
mov
pop
stos
ljmp
push
jbe
jae
loop
enter
ja
cmp
dec
pop
orl
lret
es
and
or
and
lea
adc
cmp
and
and
fcmovnu
sub
sahf
adc
pop
repz
and
hlt
sets
mov
leave
pop
jne
xor
xor
scas
pop
xor
mov
cs
jae
mov
jne
xorl
pop
mov
mov
jo
les
sub
pop
and
jae
mov
mov
sub
sub
outsl
xchg
jae
cmpsb
jae
mov
cmp
cltd
mov
addb
ficoms
pop
fidivs
stos
movsb
das
andb
mov
mov
outsb
ja
dec
pop
out
push
xchg
and
stos
mulb
mov
jmp
cmp
xor
pusha
out
mov
adc
scas
stos
enter
jmp
jnp
xchg
enter
dec
cmpl
xor
imul
xor
mov
cmp
stos
rcll
cmp
gs
mov
push
into
test
aam
sub
je
shlb
in
cmp
jbe
jae
scas
imul
xchg
lds
in
loop
loopne
rclb
mov
pop
inc
or
xor
xchg
scas
cmp
pop
pop
enter
arpl
sbb
mov
pop
inc
jne
nop
subb
testb
stc
or
lods
mov
inc
shll
enter
outsl
daa
xchg
movsb
jne
xchg
stos
lods
jmp
add
xchg
sbb
repnz
xchg
repnz
clc
push
mov
nop
pop
pop
mov
push
xor
push
jl
jg
lcall
repnz
pop
xchg
adc
sub
sub
sub
mov
cs
push
push
jle
add
data16
jp
pusha
pushf
push
jo
or
loopne
push
cwtl
jl
fdivrs
adc
jmp
mov
outsb
daa
jns
movsl
jbe
xchg
js
adc
es
pusha
scas
jo
mov
icebp
xchg
or
movsb
mov
xor
and
sbb
xchg
lcall
xchg
loop
xchg
lods
xor
jbe
insl
sahf
sbb
es
push
sbb
jge
push
nop
cmpsl
adcb
outsb
lods
push
dec
mov
jmp
cs
rolb
or
scas
test
pop
mov
repz
and
or
sub
or
cmp
sbb
sub
das
outsb
ja
nop
inc
mov
mov
pusha
nop
lods
stc
iret
lods
push
inc
test
mov
cwtl
mov
movsb
ffreep
and
jg
insl
or
cmpsb
ljmp
cmp
sub
jmp
mov
mov
mov
int
stos
mov
outsl
aaa
lods
stc
subl
jg
nop
mov
cmpsl
lods
sub
sub
negl
pop
cmpsl
pop
sbb
jge
sub
clc
movsl
jbe
arpl
jle
cmpsb
fisttpl
outsb
movsb
daa
data16
xor
lret
mov
mov
inc
cwtl
lahf
outsb
xchg
mov
in
sub
popf
mov
jo
insb
out
dec
test
cmp
les
jo
sahf
cwtl
cmp
movsb
ljmp
fistpll
insl
push
gs
fwait
cmpl
jne
cmp
lock
cmc
and
xchg
push
pusha
sub
arpl
popl
testl
lds
adc
xlat
pop
test
mov
sub
cmp
add
jmp
sarl
test
imul
loop
adc
enter
cmc
and
mov
or
rcr
call
adc
sahf
dec
mov
pushf
enter
in
stc
in
jnp
mov
cwtl
ret
dec
mov
mov
leave
xchg
sub
jns
mov
ljmp
cmp
push
rclb
clc
sbb
call
sub
cmpsl
mov
inc
add
ljmp
loope
jne
rolb
dec
test
mov
jae
dec
xor
repnz
adc
andl
sub
cmp
mov
das
push
shrb
outsb
bound
imul
fs
int3
lods
js
lods
hlt
push
cmpl
movsl
pop
lcall
sbb
or
dec
cmpsl
daa
test
cmpsl
scas
insl
lret
cmp
scas
push
jne
xor
pop
stos
outsl
mov
je
mov
jl
cmp
sub
mov
stos
mov
in
push
sbb
shll
mov
and
aas
movsb
push
push
lret
mov
push
mov
adc
nop
insl
sub
sbb
and
push
xor
inc
mov
mov
das
sahf
js
push
clc
xchg
mov
xchg
xchg
sub
push
push
cmpsl
clc
test
scas
and
dec
dec
jno
or
pop
test
sub
mov
sub
and
mov
mov
inc
fadd
lods
dec
and
inc
lea
inc
pop
dec
mov
and
mov
stos
mov
test
xor
js
xchg
cmp
outsb
sub
xor
cmp
mov
test
xchg
jg
addr16
sub
lods
scas
cs
enter
sbb
stos
popf
clc
loopne
pop
mov
xchg
pusha
push
insl
sub
xchg
lds
mov
in
cmp
inc
test
xchg
and
andb
xor
ja
xchg
fwait
sub
inc
cmpsb
loopne
mov
das
cmp
push
xor
pop
xchg
sbb
sti
xor
mov
sbb
mov
dec
add
sahf
mov
or
xor
mov
aad
and
cmp
sbb
in
cmp
cmpsl
in
mov
fisubrl
push
adc
insl
jle
int
jb
jle
test
jns
mov
jo
mov
jl
ret
mov
loope
insl
insb
jo
xor
dec
icebp
dec
and
xor
inc
lods
imul
mov
pop
cwtl
push
push
mov
movsl
stos
jge
je
adc
add
inc
lods
jae
push
sbb
test
inc
xor
enter
scas
lods
ja
movsb
icebp
aaa
enter
jae
mov
inc
jmp
pusha
fwait
push
inc
dec
mov
pop
dec
push
bound
mov
mov
inc
pusha
test
stos
mov
jle
out
sub
psllw
imul
lods
xchg
sbb
xor
jnp
push
lret
push
push
out
xchg
mov
in
cmp
jle
test
out
jo
xor
jne
fldcw
xchg
lock
outsl
jae
and
mov
jne
push
xchg
and
inc
lods
adc
push
int
xchg
xchg
xchg
testb
in
enter
fsubr
cmp
outsb
scas
enter
push
cmpsb
repz
enter
xorb
je
xchg
jecxz
adc
mov
inc
lods
mov
mov
lahf
jb
in
sub
mov
je
xor
add
imul
insb
push
fcoml
cmpsb
dec
mov
inc
jmp
jae
push
test
mov
jg
adc
and
popf
adc
sub
dec
daa
push
cmp
push
inc
inc
jne
or
sti
xchg
dec
push
out
pop
add
mov
add
xchg
mov
mov
das
mov
lods
lods
mov
in
movsb
push
sub
es
mov
cltd
imul
dec
sub
cld
sarb
sbb
dec
jl
mov
inc
push
sahf
mov
ds
dec
dec
cmpsl
ljmp
sahf
sub
ss
in
cwtl
or
adc
sub
mov
cwtl
or
bound
mov
daa
xchg
sub
test
dec
pop
pushf
subb
pusha
out
push
cwtl
gs
xorb
fisubrs
add
mov
mov
ljmp
shll
dec
lret
subl
addr16
pop
dec
sahf
mov
call
pushf
jg
xchg
xor
pop
mov
sbb
je
fldt
lods
sub
cmp
inc
mov
jne
test
fs
nop
nop
cmp
xor
and
mov
insb
cmpsb
mov
cmp
xor
imul
sub
lods
sti
ret
or
add
test
push
in
lods
mov
sbbb
dec
mov
pop
fbstp
jmp
sbb
cmp
lods
jp
cmp
cmp
test
adc
ja
jne
mov
cmp
pusha
loop
aas
or
sub
cwtl
in
stos
ret
cmp
mulb
cmp
das
mov
xchg
cld
clc
jecxz
cwtl
idivb
and
mov
aaa
sub
loopew
push
xor
insb
inc
cmpsl
push
fildll
dec
inc
pop
push
inc
mov
xchg
sahf
cmp
pop
nop
pop
lods
sub
mov
add
xor
mov
cmpsl
xchg
pop
inc
jmp
xchg
add
cwtl
fildl
cmpsb
mov
notb
mull
stos
pop
insb
adc
sahf
leave
data16
jbe
mov
out
sbbl
cwtl
and
xchg
pop
cmpsl
xchg
test
dec
push
js
jle
cmpsb
pop
shrl
sahf
nop
mov
dec
cmpsl
pusha
test
mov
stos
sub
pop
dec
mov
insl
movsl
int
xor
ret
cmpsl
mov
les
fdivr
inc
or
inc
dec
movsb
cli
popf
pushf
mov
mov
and
lods
xor
shrb
in
call
das
fs
les
push
cmpsl
cli
pop
or
test
fsubrp
mov
sub
cmp
gs
test
incl
daa
pop
jae
xor
jae
mov
mov
es
cld
ljmp
cs
sub
repnz
xchg
iret
rorb
mov
mov
mov
lretw
out
cs
lds
sbb
mov
mov
jne
shl
push
xchg
lea
aam
jmp
movsl
loope
push
xchg
in
pushf
fs
mov
ds
leave
lahf
cmp
and
mov
sbb
push
cmp
push
jo
pushf
pop
pop
xchg
orb
mov
pop
fildll
cmp
pop
mov
clc
mov
popa
mov
mov
jp
xchg
sbb
mov
xchg
pop
mov
and
mov
cmp
xor
insb
daa
and
popf
and
mov
movsl
rcrb
out
push
icebp
cwtl
push
aad
pop
data16
cmp
jmp
sub
ja
fnstcw
ficoms
stos
sbb
rorl
andb
cmp
nop
in
pop
push
lret
stos
iret
imul
pop
mov
cmpsb
test
fstl
ljmp
xor
leave
dec
call
insb
scas
data16
mov
sub
scas
and
or
mov
les
out
cmpsl
mov
cmp
jo
arpl
movsl
pop
popa
fwait
int3
pusha
test
push
xchg
pop
or
sub
xlat
fisubrs
shlb
bnd
jecxz
test
loop
xchg
jmp
lock
pop
sbb
mov
jnp
in
lods
lock
test
sub
jmp
mov
pop
icebp
ljmp
jne
movsl
andl
lds
xchg
out
xor
or
fiaddl
jns
mov
cmpsb
test
pop
cmp
rcr
sbb
scas
popf
sahf
jle
push
adc
mov
nop
jb
xchg
jne
dec
ret
rcrb
cmpsl
test
daa
test
out
ljmp
or
mov
sub
daa
pusha
addb
jnp
or
dec
cmp
daa
or
jl
scas
movsl
dec
in
outsl
gs
add
jg
scas
or
jl
cs
cmp
inc
mov
nop
nop
lds
dec
insl
mov
outsb
movsb
cmp
or
in
popa
push
sub
into
mov
sbb
xor
adc
pop
dec
jno
add
dec
mov
in
mov
insl
mov
in
js
call
subb
stos
push
lods
cmpsl
lock
leave
lock
movsb
dec
shlb
movsl
lret
jp
scas
dec
test
push
sbb
cmp
shrb
loopne
les
mov
mov
pop
insl
inc
xchg
push
mov
jmp
fwait
mov
jbe
dec
jmp
movsb
stos
mov
popa
lret
dec
data16
sahf
ret
lods
lods
and
jbe
hlt
call
insl
push
call
divb
cmp
adcl
mov
dec
push
in
sti
into
movsb
add
pop
mov
fldcw
int3
sub
mov
stos
popa
mov
jne
push
add
mov
sub
mov
mov
xchg
cmp
popf
lods
xlat
out
and
dec
xchg
std
mov
cmp
lahf
and
dec
push
dec
pop
fnstenv
mov
sahf
mov
xor
adc
and
mov
daa
cmpsl
dec
stos
xor
dec
sub
scas
popa
mov
push
outsl
push
aam
outsl
lods
popa
adc
into
mov
push
xor
push
pop
jo
movsb
xor
push
cwtl
movsb
jg
jne
cmp
test
ds
mov
outsb
lret
dec
out
loope
mov
mov
jmp
jp
sbbb
push
push
movsl
insb
jle
insl
sub
daa
sub
mov
push
inc
outsb
mov
cmp
enter
and
adc
xchg
xchg
inc
or
and
or
sub
adc
push
mov
movsb
and
cmp
call
jne
mov
mov
insb
loop
push
filds
js
pop
cmp
pop
ret
cmp
aaa
sub
lods
lret
mov
xor
cld
sbb
adc
ret
add
dec
mov
jo
ja
into
loop
mov
mov
data16
lods
outsl
fs
inc
pop
adc
jmp
rol
dec
mov
inc
test
in
xacquire
lds
push
out
call
mov
inc
dec
lock
xor
inc
mov
gs
xchg
add
repnz
jl
inc
pusha
cwtl
lods
pop
pop
fnstsw
add
rol
jbe
movb
fmull
test
lds
cmpsl
sub
cmpsb
sahf
jnp
lahf
and
dec
mov
popf
lds
pushf
mov
lds
std
sahf
testl
mov
mov
fistpll
daa
cmpb
outsb
das
mov
dec
cld
xor
cld
movsl
sub
xchg
and
lods
in
jne
mov
push
aas
push
cmp
das
jbe
jmp
das
into
and
vmovups
scas
js
lret
dec
sbbl
fxtract
pop
std
das
gs
mov
jb
mov
lcall
out
or
nop
pop
daa
jl
cli
or
push
sub
in
jge
lods
push
mov
jge
add
stos
pop
adc
mov
sbb
jg
mov
xor
shlb
fdivp
cltd
cmp
jmp
arpl
pusha
enter
dec
movsl
pushf
xchg
sub
in
lret
movsb
or
dec
popf
jmp
adc
loopne
mov
mov
lds
mov
testl
daa
aaa
cwtl
mov
mov
into
js
movsb
outsb
insb
pop
insl
mov
shrl
rorl
or
stc
dec
call
and
xchg
mov
jne
mov
pushf
ds
cmp
mov
push
mulb
ljmp
jne
ds
fisttpl
mov
das
iret
stos
into
test
xchg
enter
fs
dec
push
mulb
adc
test
movsb
mov
sub
cwtl
xchg
mov
cli
lahf
scas
mov
js
lahf
popf
jmp
cmp
push
icebp
dec
mov
or
mov
inc
dec
pushf
pop
or
pop
repnz
xchg
dec
lahf
adc
xor
popf
jmp
enter
in
movsb
enter
mov
sarb
jb
in
xchg
cmp
stos
cmp
adc
js
push
cmpsl
add
push
outsb
pop
decl
xchg
stos
push
lock
cwtl
out
mov
cmp
es
xor
arpl
stc
enter
mov
pop
das
cmp
xor
jp
sbb
cmp
mov
insl
inc
sbb
mov
fldt
inc
popa
cs
fldt
jno
aam
add
incb
cmp
xchg
test
mov
lret
scas
dec
jne
lahf
fldcw
sbb
rcr
pop
mull
push
push
iret
je
out
adcb
push
mov
outsb
mov
neg
shl
xor
arpl
dec
xchg
xor
mov
xchg
jno
negb
jmp
xchg
xchg
sub
cmp
daa
jae
jmp
or
stc
outsb
inc
stos
or
jne
mov
lea
imul
lods
fxtract
xchg
sub
les
jl
sbb
pop
mov
pop
cmp
cmp
imul
pop
mov
xchg
cwtl
and
jl
lds
mov
xchg
and
int3
xchg
and
hlt
or
and
stos
cmp
and
hlt
test
jae
dec
loop
lods
mov
in
ljmp
cmp
aad
cmp
cmp
jo
stos
lods
insl
push
mov
in
gs
xchg
mov
and
dec
ja
out
sti
cs
ja
cs
lds
or
enter
aas
sarb
xor
cmp
mov
xchg
jo
push
jecxz
test
xor
lds
test
pop
aaa
xor
addr16
lds
xchg
inc
jl,pt
rol
add
lock
rcl
pop
inc
lcall
sub
out
adc
orl
pusha
int3
dec
pop
sub
outsb
jo,pn
lock
and
loopne
lods
test
sub
push
mov
xchg
push
pushf
sarb
fisttps
cmpsb
fsubr
repz
mov
es
and
dec
test
add
dec
js
lock
jo
je
push
subb
add
lods
test
fidivs
or
add
pop
pop
dec
jo
int3
adc
popf
mov
aad
mov
sub
shlb
mov
adc
jne
jae
xchg
cmp
das
jg
rcrb
mov
or
call
cmp
mov
sbb
sbbl
mov
cmpsb
ja
and
push
pop
pop
decl
gs
pop
pop
adc
mov
adc
jmp
mov
add
lret
adc
cmp
nop
xchg
inc
test
sbb
push
orb
repnz
mov
push
insl
push
mov
fiadds
adc
adc
push
mov
dec
push
ljmp
pushf
popf
fcoms
aad
add
cmpsb
outsb
jne
xlat
or
cmp
pushf
pop
popf
das
cmp
movsl
fcoms
int
pop
sahf
shlb
mov
jg
call
adc
cmc
lods
es
iret
mov
cmpsb
cmp
gs
jae
lret
out
in
mov
and
cmp
jp
or
in
aam
mov
add
leave
fmuls
push
fadd
sbb
mov
mov
mov
lcall
sbb
mov
aam
cmpsb
xor
test
mov
cmp
jg
mov
dec
xchg
pop
xor
sub
fcoml
les
cs
push
xor
dec
inc
sbb
xor
shl
adc
call
outsl
mov
outsb
and
xor
and
mov
jmp
scas
ja
pushf
xor
adc
lret
js
setb
cmc
pop
popf
enter
cltd
rolb
lods
fldl
imul
int3
inc
shlb
cld
enter
movsl
mov
jo
das
nop
enter
add
sahf
xlat
cmpsb
shrl
xchg
adc
push
std
and
cmp
rcrl
sub
popf
dec
jle
mov
ds
loopne
dec
sti
out
popf
dec
outsl
insb
pop
mov
pop
mov
and
jmp
loopne
push
cmp
jle
sub
dec
jo
gs
hlt
mov
xor
mov
or
cmp
xor
lds
into
lods
jp
cld
inc
push
and
aam
insl
cld
sahf
inc
sub
test
dec
imul
dec
xor
aad
xchg
xor
cmp
and
dec
nop
scas
mov
lret
mov
mov
push
dec
outsb
movl
or
ficomps
pop
pop
andb
and
xchg
mov
test
jno
ja
mov
fsts
mov
add
mov
sub
mov
insl
test
push
dec
push
dec
lds
push
lahf
mov
push
in
arpl
aas
scas
inc
mov
jnp
push
push
pop
loopne
out
sub
movsl
mov
movsl
xchg
push
mov
xchg
shrb
xor
orl
js
je
mov
dec
cmp
out
lea
rol
incl
push
inc
es
gs
rorb
xlat
xchg
mov
jo
imul
outsl
and
test
mov
insb
call
imul
xlat
popa
es
imul
cmp
pop
repz
or
push
dec
cs
mov
mov
xorb
pop
stos
ja
rcll
mov
xor
mov
mov
xchg
repnz
mov
mov
ret
pop
mov
xor
inc
hlt
sbb
xchg
test
and
enter
fld
int3
lahf
mov
test
scas
pop
cmp
mov
jle
mov
mov
popf
loop
in
pop
pusha
dec
mov
xor
loop
lds
and
cmp
push
nop
jmp
mov
mov
out
pop
or
pushf
add
pop
mov
sub
mov
dec
sbbl
adc
enter
into
sub
jg
das
call
mov
inc
cltd
and
xchg
sub
mov
sub
cmpsl
icebp
push
ficompl
testb
in
loopne
pushf
in
sub
and
lock
lock
cmp
mov
mov
jmp
jb
nop
sub
add
lcall
in
mov
jns
movsl
sub
mov
mov
call
mov
jmp
sbb
cmpsb
lods
fildl
sbb
sub
or
sub
lods
out
jg
lret
and
pop
cs
and
xchg
lea
mov
fcom
mov
add
shll
adc
pop
sbb
adc
loopne
repz
push
ja
jo
movsb
scas
sub
out
xchg
lcall
scas
or
xchg
hlt
cmpsb
dec
push
cmpsb
ss
jo
cmp
repz
stos
xor
iret
pop
xor
nop
mov
xchg
jp
pushf
imul
push
mov
sub
cli
lods
mov
repnz
add
push
jle
xchg
sub
vfmsub231ps
adc
jmp
scas
push
inc
xchg
sub
incl
pop
jne
dec
andl
fimull
sbb
les
enter
push
xchg
mov
mov
push
sti
into
loope
out
mov
add
pusha
cmp
stos
mov
ret
cmp
popf
call
xchg
adc
cmc
lods
notb
js
and
imul
repnz
dec
js
lret
jo
vpunpcklqdq
sahf
pop
out
pop
or
xchg
repz
mov
daa
lds
adc
outsb
mov
scas
add
getsec
cmpsb
enter
inc
gs
cld
mov
jecxz
ja
shlb
push
jle
xor
push
mov
xchg
jno
cmp
cmpsb
cmpsl
pop
jmp
js
scas
into
or
enter
push
sub
pop
shlb
xchg
insl
sub
mov
jle
push
sbb
xor
cltd
mov
int3
cld
fnstsw
leave
mov
xorl
fcoml
push
pusha
mov
in
insb
enter
push
jb
inc
adc
xor
mov
mov
stos
push
ja
enter
mov
loopne
test
pop
pushw
orl
stos
mov
sbb
je
cld
xlat
jo
fs
pop
mov
mov
xchg
mov
fwait
mov
mov
push
lea
xchg
daa
push
push
mov
jno
xchg
push
aad
enter
push
int
xchg
inc
les
pop
testl
pop
decl
jb
rolb
pop
mov
scas
mov
lcall
jecxz
dec
xchg
js
addr16
in
cmp
lret
test
bound
mov
es
sahf
xor
mov
mov
movsb
movb
scas
sub
mov
mov
pushf
pop
jmp
lods
addr16
scas
cld
cmpsl
dec
rcrb
jbe
daa
test
stos
lahf
fisubs
inc
in
jo
aaa
cmpsb
inc
or
cmpsb
cmp
jne
xchg
cmpsb
push
lds
movsb
cmp
mov
movsb
enter
push
fldcw
jmp
popa
movsb
stc
adc
mov
fsubl
adc
cmp
adc
xor
cmp
sub
mov
dec
mov
lds
sahf
cmp
frstor
stc
mov
ja
mov
jo
shlb
aam
pop
std
mov
aam
stos
lock
and
shll
pop
pop
pushl
mov
adc
in
orb
mov
mov
dec
push
jo
mov
cwtl
lds
jp
test
jnp
mov
jle
mov
xchg
in
cmp
mov
ljmp
notb
push
mov
in
movnti
stos
push
or
add
nop
lahf
movsl
test
cmpsl
lods
scas
movsl
mov
iret
xor
sarb
sahf
aam
pop
movsl
inc
nop
enter
dec
sahf
jle
mov
cmp
adc
cmpsb
pop
lods
jle
or
sub
repnz
outsb
mov
cmp
adc
hlt
jne
enter
mov
jle
cmp
aaa
cwtl
pushf
enter
and
loopne
fwait
jnp
lds
sahf
xchg
fucomi
push
and
fwait
sub
sub
xchg
mov
pop
pop
or
push
gs
mov
xchg
xlat
pop
mov
jo
mov
out
mov
push
push
dec
ja
nop
stc
movsb
mov
xchg
lods
cmp
mov
das
repz
mov
mov
nop
adc
in
rol
and
cwtl
repz
cs
cwtl
insl
int3
dec
movsl
cmpsl
pushf
enter
xchg
xchg
jb
xchg
test
stos
or
gs
dec
mov
bound
les
mov
cmpsl
pusha
inc
into
push
ret
sub
dec
jl
sub
outsl
and
mov
int3
arpl
int
xlat
enter
mov
in
mov
mov
jge
jbe
push
cmp
sbb
inc
lahf
push
mov
bound
mov
aad
faddl
outsb
push
push
and
jb
and
insb
adc
pop
or
adc
enter
jmp
push
ljmp
and
pop
test
jne
lods
out
in
lods
inc
scas
pop
or
movsb
cmp
leave
outsb
cmp
sahf
aam
in
inc
adc
pop
call
lcall
xchg
and
enter
push
push
in
add
je
push
cmp
fcoml
dec
mov
loopne
cmp
movsl
rorl
or
out
pop
addr16
adc
mov
jp
or
mov
ss
or
js
out
jb
incb
or
cwtl
shrl
push
mov
rolb
arpl
enter
xchg
lock
cmp
stos
cmovle
xlat
into
mov
adc
xchg
sarb
inc
jnp
cmc
scas
in
pop
inc
outsb
ficoml
inc
popa
xchg
nop
cmp
test
les
jle
inc
out
mov
lds
dec
dec
jae
xchg
mov
inc
mov
xor
out
movsb
sbbb
mov
pop
xchg
test
mov
jbe
or
insl
push
mov
add
dec
jl
cmpsb
imul
ret
and
xor
jae
scas
sahf
es
jo
cmc
jle
lcall
jb
xchg
sbb
hlt
mov
pop
and
aad
xor
xor
addl
jecxz
cmp
jno
daa
test
mov
mov
xor
mov
ljmp
adc
jge
test
push
in
icebp
cmpsb
ds
jl
pop
lcall
std
adc
mov
out
ja
loopne
out
enter
les
daa
pushf
mov
movsb
pop
dec
movsl
mov
js
push
cmpsl
out
pop
popf
sub
jns
xor
pushf
jb
pushf
lods
jmp
sub
jo
cmp
and
arpl
push
sahf
mov
jg
push
inc
test
mov
dec
inc
mov
adc
sub
call
adc
mov
lods
ljmp
push
je
push
lods
gs
xchg
stos
mov
pushl
popf
xchg
jnp
xchg
rcrl
andl
shl
popa
in
fsts
rorb
outsl
push
cltd
test
inc
pop
aaa
cmp
or
and
xchg
jne
cmp
aad
xchg
xor
movsl
xorb
jmp
mov
mov
xchg
lods
test
ret
mov
mov
lcall
inc
movsb
mov
insb
cwtl
insb
mov
pop
subb
subl
xchg
test
mov
test
jo
xor
daa
idivl
dec
push
mov
jg
inc
andb
cmp
ds
mov
pop
or
imul
test
mov
and
sbb
mov
xchg
push
adc
scas
push
mov
mov
lahf
xor
es
mov
jnp
push
mov
mov
xor
push
pop
sub
sbb
test
mov
imul
lahf
dec
cmp
pop
movsb
fwait
bound
sbb
pop
cwtl
lcall
popf
aaa
scas
pop
pop
mov
movsb
sub
movsl
xor
outsl
sbb
mov
imul
stos
mov
sub
jmp
fdivs
enter
das
mov
pop
mov
lods
shlb
fisubrs
or
jnp
movsb
enter
and
cs
sbb
movsl
xor
mov
enter
movsl
cwtl
mov
sti
mov
push
ja
adc
lcall
mov
cmpsb
enter
mov
lock
adcb
data16
addr16
and
psubd
adc
dec
jne
lret
mov
or
mov
mov
je
int
pop
stos
dec
ja
subb
add
fwait
pop
test
scas
and
jg
lcall
cmovne
mov
xchg
cmpsb
fwait
test
jo
or
movsb
and
mov
mov
in
mov
lods
inc
jno
les
sub
jg
arpl
xchg
pop
add
lds
lods
mov
xchg
sbb
mov
jle
clc
and
leave
and
out
scas
xchg
popf
psubb
outsl
jns
insb
xchg
pop
mov
xchg
jl
nopl
lahf
jo
enter
repz
imul
fsubrl
xchg
test
dec
fcompl
push
push
or
iret
lods
pop
mov
popa
lods
loop
inc
icebp
andl
cmpsl
sub
repz
cmp
push
dec
subl
std
cmp
addl
fsubl
xchg
or
in
xor
test
push
shll
jle
bound
xchg
mov
sub
sub
sub
mov
clc
jmp
mov
fsubrl
icebp
into
cmpsb
cmpsb
icebp
popa
out
enter
jge
shll
nop
out
test
jmp
and
jmp
into
or
cmp
loope
fdivrl
mov
push
adc
in
add
push
gs
sub
pushf
ret
movsb
xchg
movsb
mov
jp
push
pop
push
jge
in
adc
inc
pop
dec
xchg
xor
lahf
es
test
dec
xchg
fwait
sub
pop
popf
pushf
sub
lds
adc
pop
enter
push
stos
jbe
and
jmp
mov
pop
js
lea
jl
cmp
setge
xchg
subb
sub
ret
enter
outsb
dec
xchg
pop
adc
popa
scas
inc
scas
out
pop
int
or
and
xor
mov
push
bound
movsl
out
and
add
and
stos
and
stos
test
xor
mov
xor
mov
test
imul
sahf
sub
lods
stos
jae
inc
aad
mov
js
mov
outsb
call
push
cmp
mov
xchg
rcr
jne
lahf
mov
sbb
imul
sub
mov
sub
lds
mov
fidivs
sbb
out
mov
xchg
dec
mov
sub
mov
sti
imul
xor
push
xor
lds
out
cwtl
stos
cmp
movsb
mov
aam
jns
mov
loop
nop
sub
add
cmpsl
cmpsb
movsb
sub
dec
test
arpl
jo
fldcw
jbe
outsb
fs
sub
in
mov
dec
rcrl
add
jmp
orb
test
lcall
test
dec
xchg
aaa
mov
addr16
jbe
mov
inc
mov
push
gs
andl
outsl
and
cmp
xor
out
jg
fcmove
ja
mov
in
adc
xchg
scas
out
iret
nop
scas
out
lods
les
rorb
mov
mov
or
shr
sub
mov
insl
push
fwait
cmp
in
push
xchg
clc
add
fisttps
mov
cs
cs
pop
mov
fwait
sbb
iret
test
pop
movsl
mov
mulb
adc
imul
les
loopne
mov
ljmp
ljmp
xchg
dec
mov
jmp
pusha
jnp
enter
mov
ret
das
mov
rorb
hlt
outsb
les
outsb
popf
sub
mov
xchg
jg
jbe
push
test
sbb
mov
and
jl
and
pop
inc
xor
js
test
mov
push
xor
filds
enter
xor
jo
jecxz
stc
cmp
push
add
movsb
cltd
jae
out
cmp
test
mov
jbe
shl
mov
mov
stos
fldt
out
pushf
xor
jecxz
out
test
sub
mov
cmp
pop
mov
inc
xlat
scas
cmpsb
call
imul
inc
adc
mov
loop
sbb
popf
jns
pop
push
push
data16
add
pop
mov
cwtl
test
pushf
and
fldl
inc
in
lds
and
inc
js
dec
sbb
mov
xchg
jbe
sub
imulb
cmp
pusha
push
mov
int
mov
nop
stos
movsb
aaa
test
xchg
cmpsb
xchg
cmpsl
stc
enter
jbe
aaa
sbb
sub
stc
jmp
icebp
cmpsl
xor
mov
incl
dec
and
pop
cmpsl
decl
sbb
stos
cmp
daa
data16
mov
mov
cltd
push
scas
cmp
mov
into
mov
or
mov
cltd
loope
out
inc
shll
sahf
je
and
and
sbb
mov
lods
push
mov
dec
stos
shl
mov
cwtl
clc
adc
pushf
xor
dec
inc
lds
and
rcll
mov
inc
push
or
cmpsl
fs
stc
test
aam
jne
mov
fnsave
xor
mov
in
sbb
aas
inc
push
sbbl
and
out
sbb
lret
pusha
aas
mov
frstor
arpl
insb
jns
test
es
jl
lods
xchg
xlat
and
mov
pop
cs
jo
xor
lcall
test
fdivs
ljmp
cltd
mov
test
les
andl
arpl
inc
push
stos
mov
pop
cmpb
cltd
daa
addb
sub
or
xchg
xchg
mov
test
jb
cli
xchg
pop
mov
cmpb
ljmp
cmp
jne
cmp
mov
push
mov
push
test
pushf
mov
xchg
out
int
mov
shlb
insl
mov
pop
es
addr16
movsb
cmp
pop
pop
and
lock
scas
lds
lods
jns
insl
and
push
rcrl
mov
mov
cmpsb
outsb
sub
scas
or
cmp
jb
mov
es
push
xchg
push
cltd
and
insb
jg
lds
movsl
xor
mov
roll
adc
push
popa
andl
mov
lahf
sbb
adc
push
push
pop
cmp
stos
sbb
sub
scas
sub
test
and
sbb
pushf
or
jb
orb
cwtl
and
ret
shlb
je
fisubs
and
cld
aaa
insb
dec
xlat
outsb
jb
fistl
xchg
xor
nop
lock
nop
cmp
in
and
jl
mov
xchg
out
jecxz
test
test
sub
inc
xor
mov
clc
dec
addl
xchg
ret
test
scas
mov
push
call
test
das
bound
fildll
cmp
xchg
pop
jnp
mov
jle
scas
mov
popf
pusha
or
mov
repnz
outsl
int
es
sahf
push
cmpsl
push
sub
dec
flds
cli
ja
fs
cwtl
mov
and
add
shlb
test
jmp
popa
pop
pop
subb
pop
std
in
movsl
pop
fiadds
add
pop
adcl
popf
jb
dec
ror
test
mov
mov
ret
pop
faddl
xchg
mov
fisubrs
shlb
pop
out
add
sbb
mov
dec
loopne
adc
dec
cmp
outsl
sbb
mov
xor
lock
imul
adc
imul
dec
push
test
cmp
pop
movsb
cwtl
divl
pushf
xor
dec
das
inc
int
dec
lahf
notl
push
ljmp
bound
out
popa
add
andb
or
jno
push
ret
jo
mov
push
sbb
lret
in
jo
jbe
daa
movswl
movsl
jae
in
sbb
adc
int
mov
lds
pop
test
and
scas
pusha
and
nop
xlat
jo
sbb
js
adc
adc
adc
cltd
mov
dec
lods
mov
pusha
add
fcoms
ds
sti
aaa
fsubp
and
pop
stos
inc
dec
push
adc
push
push
adc
aad
aas
mov
lods
pop
ljmp
and
hlt
jl
fwait
enter
inc
shll
rcrb
adc
jno
shll
xor
cmpsb
push
mov
js
insb
xchg
fcmovnu
mov
iret
mov
test
and
mov
push
adc
je
mov
lock
scas
mov
lcall
in
push
popf
push
add
xchg
pop
sub
mov
into
pushf
cmpsl
pop
lahf
mov
push
push
jo
data16
fimuls
mov
test
ret
imul
xchg
in
je
bound
lods
sub
movsb
mov
popf
stos
mov
sub
pop
popa
in
mov
sub
inc
pop
mov
cwtl
mov
push
dec
push
dec
movsb
lahf
jmp
ret
test
aad
dec
fsubs
mov
xor
imul
lods
fistpll
mov
test
test
ficoml
add
lcall
xchg
inc
mov
std
mov
cwtl
lds
inc
mov
mov
lahf
pushf
pop
sbb
mov
imul
int
fs
xchg
mov
xor
test
sub
out
popa
nop
mov
dec
xor
scas
mov
xor
fs
mov
std
jb
push
mov
push
xor
or
pop
mov
rcrb
sbb
xchg
ja
mov
cmp
inc
inc
add
stos
xchg
lds
mov
xorb
inc
mov
adc
and
rclb
or
sahf
test
das
mov
mov
xor
xor
imul
into
adc
pop
mov
fwait
lds
push
pop
push
jecxz
rolb
cmp
rolb
inc
cld
cmp
sub
test
stos
in
or
insb
xlat
call
push
pop
out
sti
cmp
and
mov
mov
enter
sub
push
repz
jo
enter
ljmp
xchg
mov
nop
aaa
ficompl
jl
inc
sub
mov
roll
lods
mov
into
pop
pop
mov
enter
jmp
sbb
xchg
mov
mov
cmpsl
imul
mov
sbb
sbb
cmp
clc
push
sbb
call
dec
nop
adc
scas
push
andb
xorb
out
pop
or
or
pop
sub
cmp
test
aam
out
rcl
sbb
shld
mov
ds
lahf
stos
pop
imul
pop
fwait
bound
mov
addr16
test
movsb
ss
sbb
mov
lods
ret
test
iret
mov
mov
dec
test
lods
xchg
cmp
sub
xchg
cmp
push
xchg
mov
int
cmp
fs
sbb
pop
dec
mov
in
xchg
sub
lcall
cmp
jne
inc
jge
inc
mov
mov
inc
mov
fs
and
ja
sahf
test
ljmp
orb
popl
cmp
jns
cmpsb
cmpsb
jmp
stos
push
cmp
or
std
dec
push
push
mov
pop
pop
fsubs
dec
test
jmp
lds
pushf
adc
dec
scas
in
and
daa
scas
stc
push
sbb
dec
add
pop
call
jo
aad
mov
stc
nop
subl
xlat
fdivrl
sub
cmp
and
mov
add
loopne
sti
lcall
lea
scas
arpl
hlt
xorl
mov
sub
fs
jo
dec
mov
mov
les
cmp
pop
dec
sub
das
sbbb
stos
sbb
mov
push
insb
xchg
inc
pop
pop
push
sub
add
jbe
xorl
lea
mov
xlat
sti
cmc
add
xlat
inc
ficomps
pushf
movsb
test
and
push
clc
sub
cmp
cmpsl
pop
cmp
sub
sub
ds
jae
ret
push
push
insb
nop
scas
sub
popf
outsl
sbb
push
in
pop
and
adc
popf
outsb
bound
cmpl
aad
jle
lahf
test
das
jne
cmp
test
xor
scas
loope
cmp
jne
jecxz
inc
and
mov
push
push
mov
push
outsb
cmp
es
xor
es
sbb
pop
nop
mov
mov
pushf
and
out
jle
cmp
and
add
dec
mov
mull
push
mov
test
hlt
inc
popa
pop
lods
out
push
sub
nop
and
out
sub
push
push
outsb
lods
in
add
jge
and
cmp
jae
adc
andb
and
push
lock
pushf
icebp
iret
sbb
jne
cmpsl
push
xor
movsl
sbb
aaa
lcall
sahf
insb
cmpsb
mov
dec
xchg
je
sahf
inc
scas
in
pop
sbb
cmpsl
dec
outsb
pushf
pop
mov
jo
add
push
movsl
div
pop
test
roll
cltd
loope
push
ror
adc
test
sub
mov
lods
sub
mov
xor
or
mov
dec
lea
daa
fcmovbe
lcall
pusha
push
popa
imul
and
adcb
shlb
fnstsw
out
test
cmp
jo
subl
out
dec
leave
pop
adc
fadds
divb
scas
loope
in
push
pop
cld
in
mov
adc
mov
push
sub
cmpsb
mov
sahf
sub
int3
popf
cmp
int3
sbb
bound
mull
test
mov
mov
or
pushf
call
icebp
cmp
fsubl
sti
sub
pop
aad
js
repnz
scas
push
stos
xor
cmpsl
pop
add
xor
mov
add
lret
push
jg
cli
fcomps
in
cmp
lods
loope
mov
movsb
pop
fdivrs
lret
daa
fidivrl
cmpsb
fwait
call
enter
pop
test
mov
dec
pop
ret
mov
mov
mov
aaa
jo
xor
add
ljmp
lds
or
add
jmp
shlb
jg
pop
mov
gs
xor
stos
push
or
scas
xorb
jns
xor
cmpsl
xchg
mov
mov
pop
bound
scas
cmp
test
lret
mov
nop
pop
scas
pop
pop
out
sahf
dec
test
test
call
xchg
xor
scas
scas
insl
jno
inc
scas
lret
inc
sub
and
daa
xchg
pop
pushf
lock
je
fcomps
pop
mov
cmpl
add
mov
movsb
jo
mov
push
nop
sub
imul
pop
jg
movsb
xor
cmp
cmp
push
pop
mov
xchg
mov
mov
sub
hlt
mov
adc
in
js
mov
imul
pusha
andb
mov
push
jp
shll
cmpsb
mov
jg
push
xchg
shl
sbbl
test
sbb
or
stc
sbb
sub
stos
lret
cmc
xchg
roll
cmpl
ret
rcl
stc
js
xor
xor
ret
xor
jmp
jge
es
lahf
lcall
das
mov
pminsw
add
add
lock
mov
mov
mov
jg
mov
outsb
lods
scas
sahf
pop
enter
aad
inc
cmpsl
clc
cmp
mov
pop
adc
fsubrs
out
dec
fwait
xchg
mov
push
dec
in
enter
mov
loope
sub
shrl
dec
pop
xchg
lods
push
dec
aam
enter
daa
inc
xor
movsl
jmp
inc
pop
pusha
dec
enter
icebp
mov
xor
mov
jmp
loope
xchg
cmpb
dec
repnz
iret
pop
ret
mov
fldenv
test
je
lds
fimuls
and
and
pop
jo
cwtl
dec
shlb
es
daa
loop
add
inc
call
into
aam
fcompl
cs
loop
stos
les
out
lds
mov
jmp
movsl
movsl
loope
push
push
mov
xlat
cmpsl
jae
mov
imul
in
pop
cmp
xor
lret
xchg
mov
pop
push
or
pusha
sbb
push
addr16
cmc
lods
jb
enter
sub
mov
stos
pop
fsts
cltd
mov
scas
je
jae
mov
push
movsl
push
pushf
push
cld
pushf
mov
adc
scas
adc
mov
pop
sbb
jae
into
xor
or
mov
push
outsl
aam
push
adc
sbb
ror
xor
xchg
shll
jl
mov
dec
inc
pop
mov
clc
fwait
imul
mov
mov
out
inc
push
pop
mov
cmp
lods
push
or
je
cmpsb
xchg
cmp
sub
scas
lods
and
icebp
stos
cmp
call
sub
pop
adc
mov
cltd
or
insb
andb
lds
push
mov
aas
cmp
pop
data16
les
sub
or
sub
call
xlat
mov
push
sub
enter
jne
or
sbb
adc
in
cmpsb
cmpsb
movsl
push
inc
mov
and
cmp
bound
pop
icebp
test
and
mov
xor
shld
lods
out
mov
pop
or
adc
mov
and
outsl
lods
mov
loope
xor
repz
daa
mov
rorl
adcl
sarl
andl
mov
push
sub
sbb
sahf
sub
icebp
adcl
stos
ja
inc
sub
mov
xchg
outsl
mov
xor
les
jns
out
outsb
loop
test
mulb
cwtl
mov
jne
in
mov
fdivrs
pusha
pop
shlb
pushf
jno
pop
mov
cltd
jg
adc
into
rcrl
dec
pop
hlt
subb
xor
lods
mov
jno
adc
xor
mov
mov
or
fstp
iret
mov
push
dec
cmp
push
mov
jbe
movsl
jge
daa
xchg
test
leave
xor
pop
jo
mov
push
bound
push
jo
jne
arpl
mov
popf
and
lods
stos
test
cmp
mov
bsr
xor
aas
stc
mov
inc
push
sbb
mov
popa
data16
mov
bound
dec
fldt
loope
loopne
daa
iret
insb
ret
cmp
inc
cli
call
shrb
out
insl
sahf
or
mov
mov
fdivrp
ds
cmp
push
repnz
and
pop
dec
mov
jae
pop
mov
dec
repz
notb
xor
pop
mov
or
mov
mov
cs
pop
enter
and
mov
int3
stos
jo
les
xor
cmpsl
and
cmpsb
loop
fidivs
imul
push
pusha
stos
push
lret
movsl
mov
iret
outsl
cmpsb
mov
and
cmpsb
ja
test
xchg
jg
push
fdivrl
cmp
roll
xchg
rolb
fsubrl
lahf
sub
nop
loop
lds
jae
dec
inc
sahf
adc
adc
movsb
shlb
xor
gs
enter
jge
jg
addl
test
insl
mov
cwtl
imul
sahf
dec
call
sbb
inc
stos
pop
mov
cmpl
sub
imul
pop
and
adc
sbb
sti
imul
sahf
or
dec
aad
je
cltd
loop
sbb
cmc
stos
cli
lds
pusha
fisubl
popf
xchg
cmp
aaa
xchg
xor
andb
mov
movsl
in
fiaddl
icebp
in
stos
aam
mov
arpl
push
shrb
lea
imul
sub
scas
push
fcmovnb
sub
ffreep
dec
sub
or
push
clc
jno
rolb
and
mov
or
call
push
scas
movsl
lods
cmp
dec
xchg
shl
pushf
stos
sub
les
inc
sub
popf
jg
cmpsb
xchg
sub
pop
popa
xbegin
cmp
inc
int3
push
cmp
xchg
mov
cmc
aad
pushf
dec
lock
cld
aas
xor
test
push
test
das
xchg
cmpsb
popa
dec
xor
or
sub
inc
fimuls
mov
data16
cmpl
lods
mov
or
int
adc
ja
mov
das
mov
pusha
pushf
xor
in
bnd
add
test
or
popa
repz
and
dec
xor
push
les
or
fwait
xor
lods
mov
inc
pop
and
and
sub
je
inc
pop
lahf
pushf
mov
test
andb
xor
sub
pushf
pushf
fwait
lcall
test
lods
aam
test
xor
hlt
jae
push
or
push
jge
clc
ss
adc
les
jno
add
movl
loopne
adc
dec
scas
xor
mov
ds
out
lods
ljmp
cmpsb
insb
dec
jns
or
lods
sbbl
cld
subb
test
add
mov
dec
push
scas
out
push
outsl
cmpsb
sbb
les
lahf
or
lods
mov
or
das
add
insb
push
nop
test
pop
mov
fiadds
xor
popa
or
repnz
xor
dec
sub
cmp
lea
lret
push
enter
daa
lds
ret
shll
and
sti
sar
insl
scas
xchg
add
mov
sbb
cmp
xchg
sahf
push
fwait
and
test
scas
mov
add
out
dec
loopne
jge
clc
xor
xorb
mov
mov
dec
in
mov
sbb
dec
lock
dec
hlt
setbe
sub
and
cmpsl
nop
add
fildll
inc
jmp
dec
add
xchg
lods
ja
subb
mov
lock
cwtl
inc
xchg
lock
test
or
je
cmpsl
and
inc
out
arpl
mov
ret
hlt
les
mov
jbe
fbstp
movsl
enter
push
dec
das
xor
out
int3
push
xchg
shrl
nop
int3
mov
and
lahf
cmp
inc
lods
divb
mov
mov
daa
fwait
xor
push
es
sub
mov
xchg
cwtl
mov
pop
das
xchg
test
mov
sub
loopne
arpl
in
mov
xchg
mov
bound
mov
push
mov
dec
mov
clc
jg
and
shlb
lahf
cmpsw
test
out
or
popf
es
dec
mov
pusha
cmpsb
mov
xor
scas
cmp
or
dec
sbb
cmpsl
lods
xor
cmp
mov
push
cmp
dec
and
xchg
cmp
push
das
lret
cwtl
lods
xchg
scas
xorb
add
call
stos
cmp
fnsave
sub
in
add
push
push
leave
imul
push
mov
sbb
mov
movsl
mulb
fisubs
mov
scas
pop
dec
lods
dec
mov
push
inc
add
dec
sub
sarl
and
jmp
pop
pusha
outsb
into
jp
mov
repz
mov
pop
fsubr
pop
cmp
mov
jbe
aam
gs
movsl
out
add
add
stc
outsl
std
push
cli
nop
mov
or
cmp
lock
xchg
push
js
jbe
stos
mov
lret
fsubs
ljmp
fprem
push
xlat
sahf
adc
lahf
divl
and
bound
mov
aas
xchg
xchg
and
adc
pushf
inc
andb
fsubs
xchg
cmp
inc
adc
rcrb
sub
and
lahf
scas
shr
cmp
sahf
cmp
cmp
ds
int3
adc
imul
dec
clc
testb
test
dec
lret
gs
popa
movsl
loopne
bound
out
or
jge
out
out
leave
ds
cwtl
dec
jae
and
subb
dec
xor
icebp
mov
mov
push
push
pop
jbe
cmp
ret
sub
cwtl
vmptrst
test
adc
movl
call
pop
lods
lcall
lods
pop
orl
hlt
xor
jp
sbb
and
stc
xor
ljmp
jbe
popa
and
jne
gs
ljmp
out
cwtl
mov
add
jo
jg
add
mov
xor
pop
scas
insl
inc
mov
cmp
jecxz
mov
incb
cwtl
movsb
das
push
xor
outsl
push
scas
lock
fsts
cltd
xor
lcall
and
inc
sub
pop
ja
imul
ret
scas
cmpsb
and
xor
mov
pop
outsl
ds
gs
push
xor
pop
push
sub
sub
mov
comiss
cmp
outsb
shl
addb
and
lret
rcl
int3
mov
nop
out
mov
or
rolb
jge
and
mov
push
jmp
stos
jne
scas
movsb
jo
stos
fcoml
mov
adc
sub
test
loop
cmpsl
pop
cmc
inc
loopne
sbb
test
push
jno
cmp
xor
lahf
cmc
loopne
out
mov
clc
pusha
sub
lods
outsl
pop
pop
outsb
sub
xchg
lods
in
test
and
das
xor
push
jl
pop
test
mov
gs
jmp
mov
lea
xor
in
mov
iret
loopne
mov
cmp
hlt
scas
push
cmp
clc
mov
mov
scas
add
inc
jae
inc
daa
icebp
jbe
fstpl
je
jmp
ljmp
mov
xor
add
push
inc
xchg
xchg
stos
enter
iret
or
imul
jbe
xchg
insb
pop
add
sub
or
adc
push
test
sub
ljmp
add
ret
out
cmp
xor
mov
xor
mov
les
sub
sub
movsb
in
scas
mov
ja
push
sbb
fstp
popf
push
call
lods
loopne
cmp
jo
ds
stos
lret
lds
mov
jg
jg
call
cwtl
inc
pusha
mov
jnp
fcompl
inc
cmpsl
xor
mov
sahf
ds
mov
cmp
dec
push
je
outsb
lcall
pop
adc
sub
filds
push
dec
pop
stc
cwtl
adc
or
add
fmull
test
sub
add
fistpl
xchg
pop
inc
fisttpl
inc
lret
pop
sub
cmp
in
xchg
jle
scas
xchg
pop
les
jecxz
addb
lds
xor
jno
cmp
inc
jae
lcall
dec
mov
mov
mov
mov
test
in
int
mov
xchg
mulb
pop
ret
outsb
mov
cmp
pushf
xchg
push
jae
in
lahf
enter
sahf
jb
fcomp
jne
sbb
lods
enter
mov
outsl
ja
shll
js
jl
dec
popf
jns
cmp
imul
test
mov
jae
mov
lcall
dec
jno
jb
xchg
scas
jle
jl
and
dec
or
fwait
movsl
add
subl
ljmp
push
sub
popf
cmp
je
jnp
shrb
ss
sbb
sti
mov
jmp
jo
fbld
pop
movsb
add
xchg
dec
cmpl
dec
fs
mov
pop
sbb
cld
subb
jno
ljmp
xor
jo
aad
sbb
fcomps
jbe
cmp
in
outsl
push
rorb
popa
adc
cmp
repz
shll
mov
inc
movsl
stos
lods
js
sub
push
xchg
mov
test
ror
in
or
or
sub
insb
add
push
xchg
and
cmp
andl
pushf
mov
lods
push
sub
xchg
fcmovnb
inc
jl
imul
and
pusha
es
aad
daa
stos
cwtl
and
sbb
sbbl
add
mov
sarl
out
xor
movsb
ror
sub
lods
or
repnz
mov
in
popf
jno
rcl
enter
push
cs
popf
test
call
sub
mov
inc
popa
rorl
adc
enter
aam
xchg
mov
or
jg
fs
push
cmp
xor
andl
mov
out
xor
jecxz
add
gs
lcall
nop
lods
jge
xor
fldl
push
cmpsl
push
jg
insb
je
scas
cmp
addr16
out
iret
fcmove
pop
jg
mov
mov
xchg
adc
lds
hlt
push
add
repz
xchg
inc
sahf
jns
push
movsl
outsl
mov
mov
jno
rcrb
popf
and
movsb
stos
and
pop
push
stos
pop
and
lock
stos
mov
sub
inc
shrl
mov
adc
stos
jne
mov
lods
out
ds
dec
push
push
cmpsl
mov
mov
pop
out
lcall
push
mov
insb
mov
popf
cs
push
cmpsl
mov
je
sub
sub
sbb
sti
outsl
je
jb
jb
mov
cmpsl
pushf
movsb
lods
fimuls
add
je
xor
stc
in
out
adc
mov
xchg
xor
xchg
daa
outsl
fwait
dec
addb
call
in
je
imul
vmovaps
cmpb
mov
insb
inc
xchg
into
jns
pusha
pop
ds
and
xchg
inc
inc
lods
dec
les
and
cmpl
jp
xor
or
xchg
cmp
jecxz
pop
and
lahf
rclb
jle
jle
push
sti
daa
xor
mulb
icebp
lods
cmp
test
push
or
in
movsl
mov
dec
dec
xchg
and
fdivp
mov
mov
int
xor
test
ja
mov
subl
push
mov
xchg
imul
ss
push
or
and
mov
test
cmpsb
cmp
dec
cmc
cld
mov
mov
mov
adc
ds
aad
out
addps
inc
je
push
pop
test
dec
xchg
popw
in
xor
pop
pop
rorl
popf
aad
movsl
xor
or
nop
stc
popa
sbb
and
popf
and
lds
cmp
out
popf
push
push
mov
stos
rorl
xor
mov
dec
int3
jmp
pop
enter
movsb
mov
lds
xor
xor
inc
xchg
rep
inc
cmp
sub
movsb
lcall
lcall
icebp
out
in
adc
xor
lret
and
rcrb
lret
mov
nop
mov
mov
mov
push
pushf
mov
pop
icebp
and
mov
mov
mov
loop
jb
int3
test
fsubrl
jb
inc
mov
cmp
and
cmp
sub
sub
push
and
cltd
lods
dec
mov
pop
pop
jb
dec
lods
adc
and
sub
shrb
hlt
popa
lods
push
test
cmpsb
sub
je
inc
mov
movsl
outsb
vmovd
outsl
out
loop
pop
iret
outsb
daa
cli
insb
aaa
xchg
enter
cmp
xor
sub
clc
lods
sub
pop
sub
push
mov
push
fwait
test
pop
mov
and
or
test
rcrl
sbb
rolb
sahf
pop
shlb
shll
jg
pop
xchg
add
and
inc
mov
cmp
aam
divl
jg
push
and
inc
pop
shlb
xorl
jbe
xchg
sub
pop
inc
adc
xor
test
cmp
andl
pop
sbb
cmpsb
stos
test
scas
mov
jae
out
or
stos
adc
and
push
mov
push
jbe
rcr
mov
mov
dec
sahf
add
nop
int
xchg
hlt
mov
in
xlat
jnp
pusha
popa
fs
sbb
cmpsl
sub
cmpsb
in
lods
sub
decb
das
mov
jmp
pop
enter
jns
cld
cmp
fcoml
dec
sbb
lods
adc
or
xchg
pop
mov
xchg
decb
into
outsb
push
out
mov
cltd
cmp
repz
pop
mov
mov
push
sti
cmp
adc
mov
lahf
shrl
scas
data16
gs
shlb
pusha
jg
ljmp
cmp
bound
inc
jne
test
lods
enter
movsb
in
fldl
jns
orb
jp
stos
cmc
mov
xchg
inc
ss
cmp
ficoms
shlb
stos
ds
mov
pop
test
jmp
xor
mov
cmp
hlt
sub
pushf
and
sbb
lahf
hlt
push
daa
push
sub
mov
cmp
pop
mov
clc
add
jg
lock
sbb
or
or
pop
movsl
mov
leave
scas
outsl
add
mov
jno
mov
push
sub
popf
push
test
cmp
bound
mov
dec
fcmove
fidivs
out
pushf
nop
pop
clc
lods
mov
das
xlat
je
popa
mov
xor
repnz
nop
jb
addl
jecxz
ss
add
xor
push
lcall
pop
pop
xor
xor
lcall
jle
cwtl
mov
jge
faddp
ja
mov
push
mov
pop
or
cmpsl
mov
push
sbb
and
mov
xor
push
push
sbb
jbe
pushf
sbb
pop
mov
and
sbb
sbb
dec
mov
insb
movsl
add
jo
ljmp
daa
subl
mov
sti
pop
mov
cmp
pop
addr16
cmc
int
mov
sbb
mov
sbb
push
mov
mov
or
shll
and
add
fneni(8087
pop
fldenv
jle
add
test
cld
push
mov
lret
mov
xchg
jne
test
in
rcrl
mov
out
push
sub
lcall
pop
enter
push
mov
pushf
loope
and
and
js
test
outsb
sbb
push
push
add
js
dec
dec
sbbl
int3
test
fstps
in
sbb
mov
and
stos
push
mov
imul
sbb
push
mov
lods
or
sub
shlb
xchg
enter
inc
push
inc
push
push
in
lahf
push
roll
in
int
lods
scas
inc
bound
sub
jbe
shrl
lahf
pusha
xlat
xchg
icebp
test
cmpsb
cmp
mov
icebp
in
stos
inc
dec
nop
fwait
outsb
stos
cmp
movsb
jns
xor
pop
mov
fidivs
cmp
shlb
mov
pop
xor
add
lods
fnstenv
in
mov
push
xor
in
pop
jl
mov
or
mov
xchg
insb
and
jecxz
sub
push
pusha
sub
je
mov
pop
fnstenv
xchg
xor
mov
dec
movsl
pop
pop
testl
push
aaa
lods
jno
xchg
int3
scas
mov
sahf
fnsave
lods
call
push
gs
cmpsl
push
pop
sbb
cli
mov
sub
or
subl
xor
mov
jno
bound
inc
outsb
jmp
inc
xor
push
add
and
repnz
ficompl
sub
xor
imul
adc
pop
pop
jo
push
mov
lret
dec
and
mov
or
jnp
inc
xchg
add
je
inc
mov
js
lea
inc
xor
cmp
sbb
add
enter
xchg
jb
nop
sub
mov
dec
jle
mov
pop
cmp
push
lods
fimull
cs
mov
pop
ret
scas
test
inc
sbbb
pop
mov
movsb
lods
outsb
pop
iret
sahf
xchg
mov
jne
mov
enter
pop
push
xchg
inc
pop
fsts
dec
daa
pusha
push
mov
lcall
jge
scas
fwait
setl
adc
lds
or
push
dec
jecxz
jns
pop
push
popf
das
mov
and
mov
out
cmp
inc
scas
das
test
mov
cmp
inc
aaa
push
push
icebp
scas
jne
dec
cmp
das
fwait
inc
cwtl
daa
test
jno
fmuls
xlat
repz
lock
ja
sbb
int3
mov
and
dec
test
mov
jb
cmp
cld
outsl
iret
popf
lds
rcl
pop
cmp
shl
cmp
xchg
jae
pop
pop
mov
ljmp
mov
outsl
push
push
call
stos
dec
jne
int
cmpsl
ja
xchg
and
mov
push
add
fisubrs
sbb
inc
arpl
inc
es
insl
xor
jnp
pop
jge
into
xchg
cwtl
lods
jg
enter
cmp
adc
xor
dec
cmp
daa
sub
fnstsw
pop
lds
enter
push
scas
mov
mov
pusha
imul
test
xchg
pop
mov
andb
mov
ret
sub
add
sub
adc
es
and
enter
imul
cltd
int3
lds
jl
into
enter
rorl
push
gs
mov
cwtl
push
cmp
test
std
imull
cld
mov
sub
cmp
fidivl
xchg
subb
inc
in
xchg
divl
jge
out
jae
mov
jmp
sbb
cmp
dec
addr16
mov
or
pop
jmp
les
aas
data16
lahf
jecxz
mov
jg
mov
mov
or
add
mov
lds
jl
scas
insb
xor
mov
push
fstpt
inc
pop
push
roll
lcall
scas
enter
pop
aad
jbe
lock
sub
fscale
sahf
add
das
cmp
iret
jle
cmpl
inc
xlat
jg
sub
rol
mov
test
lods
add
out
pop
cmpsl
mov
sbb
mov
adc
gs
pop
mov
test
mov
in
cmp
sbb
mov
popf
test
jl
add
push
mov
push
clc
adc
loope
divb
push
pusha
or
push
jg
mov
scas
test
lods
pop
push
xchg
sbb
sbb
scas
cwtl
das
xchg
pop
dec
push
jl
lahf
xorps
sub
pop
sub
test
xorb
jae
adc
cmp
popa
xor
addb
cmpsl
push
cmp
rcrb
cmp
data16
inc
mov
mov
mov
fsubrs
cs
mov
test
jmp
pop
mov
add
push
xchg
push
test
rcrb
pop
pop
cmpsb
arpl
cmpsl
movsb
ficomps
repnz
jle
mov
ss
loop
push
xor
cmpsl
inc
push
bound
xchg
cmp
adc
mov
das
mov
jl
outsl
loopne
and
dec
adc
fwait
mov
test
pop
inc
insl
inc
bound
inc
pusha
test
outsl
movsb
inc
ds
movsb
cwtl
in
clc
pop
push
mov
dec
mov
aad
dec
lods
push
xchg
or
pop
sbb
jbe
cmpsl
insl
mov
add
jns
sub
mov
aas
xchg
cmpsb
push
jb
lcall
cmp
cwtl
in
inc
mov
sub
pushf
adc
sbb
nop
lods
movsl
es
das
popf
lds
mov
adcl
nop
cwtl
jle
hlt
xchg
stos
dec
jb
dec
nop
stos
sahf
cltd
or
pop
out
cwtl
jbe
insl
mov
mov
jle
push
xchg
jo
sub
xchg
or
shl
cmp
pushl
das
ret
mov
cmpsl
cmp
xor
mov
cmpsb
mulb
fsts
mov
xor
mov
loope
incl
outsl
push
test
jp
loope
xor
lods
hlt
sub
int
out
lcall
jle
imul
and
loope
enter
mov
push
mov
insl
mov
pusha
xchg
jbe
jno
adc
mov
jo
shrl
push
outsb
xchg
stos
cmc
lahf
pop
push
data16
pop
push
cld
jg
lods
nop
fcomi
insb
cmpl
xchg
scas
and
lret
pop
fyl2x
ljmp
fldcw
xor
add
pop
dec
test
data16
arpl
jmp
int3
sahf
sarl
call
mov
fwait
mov
clc
enter
mov
dec
inc
mov
daa
xchg
dec
ds
daa
fcoms
jb
daa
jge
pushf
addr16
cmpsl
pop
aad
add
sbb
pop
jmp
push
xchg
nop
stos
test
mov
movsb
jle
xor
stos
cwtl
lcall
pop
sahf
xor
and
mov
mov
xor
lods
pop
xrelease
enter
out
pop
sub
pop
stos
cmp
xor
mov
adc
clc
sbb
lcall
jno
xchg
addr16
inc
cltd
pop
push
push
sbb
lock
lea
movsb
xor
shrl
jmp
sbb
sub
pushf
test
rorb
daa
orl
imul
jp
fstl
inc
daa
rorl
mov
or
mov
cwtl
pop
push
dec
add
imul
pop
xor
mov
in
lods
mov
mov
dec
jnp
mov
push
jno
xor
add
mov
pop
ss
scas
imul
lcall
jbe
pop
insl
aam
icebp
or
xchg
dec
mov
push
push
pusha
push
xchg
push
int3
scas
push
mov
push
mov
mov
fwait
movsl
mov
je
mov
das
sub
jo
or
xchg
pop
add
into
pop
inc
enter
jb
push
sub
lock
into
mov
inc
std
xchg
push
std
inc
xchg
sbb
jg
mov
push
xchg
lds
mov
outsl
insb
lods
dec
sarb
nop
xchg
mov
pop
mov
mov
in
leave
inc
adc
rolb
clc
cmc
imul
sbb
and
call
mov
das
daa
mov
ljmp
rolb
sub
jle
hlt
mov
test
mov
dec
push
stos
mov
ljmp
mov
sbb
outsl
inc
das
xor
out
push
and
xchg
cmp
lods
lods
enter
adc
cmpsl
stos
out
or
or
jb
inc
scas
cld
sbb
int3
dec
dec
cltd
fidivrs
scas
aas
js
insl
aam
comiss
andl
lahf
cmp
cltd
xor
ret
int3
stos
pop
enter
insl
sbbb
sub
lcall
popa
mov
cwtl
shrb
dec
sub
jno
imul
ds
mov
int3
call
lds
rolb
movsl
dec
push
lret
clc
cmp
outsb
mov
mov
push
and
sbb
xor
fldenv
inc
xchg
stc
push
stos
loopne
and
jb
jne
cltd
lahf
jl
aad
push
mov
aam
arpl
dec
dec
jo
fldenv
sti
bound
inc
mov
xchg
jle
enter
cld
sub
fs
fstpl
xchg
cwtl
and
jecxz
in
sbb
pop
lahf
push
push
cmp
pop
xchg
aas
add
and
stc
aam
cmp
pop
mov
push
in
les
xor
push
enter
clc
mov
cmp
and
inc
xchg
jmp
outsb
sti
cmpsl
int3
enter
inc
mov
in
popf
lahf
mov
hlt
ja
xchg
dec
sbb
dec
cmp
lock
or
xor
test
xlat
cld
lahf
fcoml
xchg
sub
pop
je
fwait
inc
fmull
mov
test
adc
dec
or
imul
mov
mov
dec
mov
inc
push
inc
adc
cs
test
sbb
jmp
jb
ja
sub
addr16
inc
repnz
mov
push
pop
push
cmpsl
repz
sahf
pop
xchg
lcall
pusha
lea
mov
fistpl
imulb
sahf
hlt
sbb
mov
dec
mov
aad
mov
outsl
pop
int
aaa
sub
mov
je
nop
adcb
jbe
mov
sub
stc
call
push
jo
sub
test
ja
sub
sub
xchg
loopne
push
push
cmc
nop
jge
and
pop
das
test
dec
xchg
clc
xchg
xchg
fwait
ja
push
inc
jns
inc
mov
mov
cmp
std
in
sbb
mov
sub
add
or
scas
push
adc
ret
cwtl
rcl
sub
mov
insb
sub
cld
cmp
lods
cmp
cmp
sub
cwtl
push
inc
stos
in
jo
cmp
repz
mov
leave
push
lods
outsb
in
add
mov
dec
outsl
shll
pop
or
mov
hlt
rorb
xchg
cmp
lahf
pop
xchg
rolb
loopne
pop
push
dec
xchg
mov
mov
gs
adc
sub
pop
daa
jmp
xchg
inc
dec
lods
mov
scas
dec
dec
mov
test
mov
or
scas
cmp
dec
sbb
push
leave
ds
jg
arpl
xchg
nop
in
mov
sub
dec
adc
les
jl
cmpsl
adc
xchg
outsb
fwait
lds
insb
add
pushf
push
test
xchg
cmp
scas
cmpsl
ljmp
sub
pop
push
sbb
mov
pop
pop
test
rolb
jb
fcoms
subb
pop
jle
and
jns
andb
jg
iret
sub
jne
push
inc
pusha
cmp
ds
rcrb
aam
int
jae
pop
stos
mov
xchg
lds
cwtl
rorl
mov
inc
adc
and
jnp
cmp
sti
jmp
mov
sahf
mov
mov
cmp
adc
cmpsl
mov
xlat
jl
outsl
add
inc
push
push
vpsubsw
sub
in
cmp
call
lea
inc
push
iret
popa
mov
pop
inc
jo
call
nop
jg
pop
cs
xchg
loopne
xchg
fidivrl
test
adcl
pop
jle
testb
repz
ljmp
mov
dec
scas
mov
jg
push
jle
les
or
movsb
test
data16
sub
add
xchg
pop
scas
mov
jle
scas
repz
xchg
adc
cmp
pop
mov
ret
cmp
data16
mov
push
imul
imul
mov
das
xor
test
fstpl
jle
test
cmpsb
test
cmp
cmpsb
mov
repz
xor
pop
lods
arpl
je
rorl
scas
out
push
sub
testl
mov
sbb
inc
test
jnp
test
aam
out
and
scas
xor
daa
shll
hlt
mov
mov
push
dec
or
sahf
jg
cwtl
adc
inc
xor
insl
push
jo
pusha
test
rorb
bound
sbb
mov
dec
dec
int3
mov
pusha
call
stos
popa
push
or
insl
xor
js
jl
adc
mov
and
scas
in
cmp
data16
mov
leave
mov
xor
stos
mov
inc
nop
daa
cmp
gs
jg
or
repnz
mov
lahf
scas
call
push
jmp
cmpsb
daa
inc
test
cmpl
dec
andb
ficomps
scas
push
jo
movsb
pop
push
jae
inc
cmp
mov
dec
aam
mov
cmp
push
dec
dec
xchg
jne
in
jmp
jne
gs
pop
popf
xchg
jb
mov
jecxz
fisubrl
pop
mov
inc
lods
add
dec
pop
fisttps
mov
jge
mov
cwtl
jmp
or
mov
hlt
ljmp
bound
ret
xor
pusha
pop
cli
arpl
enter
add
sub
jne
mov
mov
xor
popa
push
mov
in
xchg
adc
insb
pushf
mov
add
and
dec
lods
subl
call
sub
pop
lods
imul
jp
xchg
and
or
xcrypt-ofb
cmpsl
sub
lods
xchg
cmp
mov
and
rcrl
rcrl
pushf
or
nop
out
mov
pop
call
push
sbb
lret
negb
subw
gs
mov
js
ror
adcl
xor
jne
cmpsl
cmp
sub
sub
out
ds
insb
adc
mov
pminsw
mov
sbb
mov
xor
ljmp
divl
sub
fistpll
test
cltd
jmp
dec
mov
je
jle
pusha
sbb
imul
pop
ror
sbb
outsl
mov
cltd
and
test
mov
lahf
cwtl
mov
xchg
test
mov
push
cwtl
push
jb
hlt
popa
jmp
mov
repnz
pop
sbb
adc
jg
fisubs
mov
cmpsb
and
leave
mov
add
pop
repz
sbb
les
mov
push
xchg
mov
push
mov
mov
cmc
repz
cmp
mov
pop
xchg
test
mov
imul
inc
dec
test
lss
imul
sbb
sub
sbb
cmp
jno
test
push
jae
mov
nop
nop
sahf
call
or
sub
scas
arpl
lds
lds
push
pushf
addr16
pop
dec
pop
xor
popf
shlb
pop
add
aas
lods
and
sbb
daa
sub
jmp
mov
clc
pop
push
pop
add
outsb
add
test
push
sbb
push
repz
push
mov
push
imul
hlt
test
icebp
xchg
jl
xlat
cmp
popl
and
andb
pop
in
adc
daa
outsl
mov
arpl
jle
movsb
jmp
mov
xor
ret
mov
es
mov
push
inc
lods
pop
jno
shlb
orb
mov
mov
push
repnz
sub
test
dec
in
rcl
js
sbb
lcall
stos
mull
and
dec
push
mov
mov
mov
scas
cmp
mov
mov
cmpb
xor
sub
push
lahf
sahf
mov
mov
mov
and
fmull
or
sub
mull
dec
xchg
fisubrl
or
mov
js
add
ficoms
nop
and
lods
mov
jmp
cld
popa
or
or
mov
xchg
movsl
push
lea
xor
cmp
test
out
dec
call
push
popf
ret
pop
sbb
sbb
add
aam
mov
clc
sbb
dec
test
jecxz
pop
adc
and
lods
daa
lock
push
dec
adc
mov
cld
inc
je
cmp
ret
push
outsl
jecxz
movsb
movsl
daa
cmp
cltd
push
push
pop
add
dec
jmp
nop
out
xchg
aaa
sbb
dec
push
jge
jo
outsl
mov
mov
adc
out
pop
adc
cmp
shrl
mov
stos
xor
xor
dec
iret
jmp
out
cmp
pop
mov
xor
sbb
popf
test
sub
adc
leave
lcall
push
mov
cli
jae
xchg
inc
adc
rol
scas
das
jne
lret
lods
scas
adc
mov
mov
adc
cli
dec
lret
xor
add
push
je
sub
addr16
xchg
xor
fadds
push
and
pop
lock
rclb
mov
xchg
movl
jmp
cmp
sahf
fwait
mov
cli
scas
inc
das
push
inc
insb
pusha
das
mov
outsl
daa
mov
lds
sar
rcr
andb
mov
mov
lcall
mov
mov
jbe
iret
movsb
lcall
out
jl
adc
daa
push
lds
enter
xor
pop
push
add
lock
xor
lock
cld
pop
mov
pushf
jg
ss
xchg
imul
mov
insb
mov
mov
mov
push
mov
pop
ret
vmwrite
mov
data16
sbb
cmp
js
push
fcmovu
bound
xchg
pop
js
cmp
in
dec
stos
outsb
pop
dec
nop
jmp
dec
mov
add
pop
in
arpl
test
mov
shlb
and
stos
pushf
enter
push
push
dec
cwtl
pop
dec
inc
push
inc
mov
add
sar
iret
scas
repnz
mov
popa
inc
sbb
push
mov
or
hlt
add
je
out
repz
test
aad
sbb
jg
mov
and
stc
xchg
lods
loope
arpl
push
ss
push
aam
int3
xor
mov
mov
mov
and
frstor
shl
test
push
mov
xchg
push
jb
hlt
fwait
push
mov
popf
cltd
ja
aam
sahf
add
into
mov
lds
gs
out
aas
push
xchg
sahf
clc
push
push
ret
popl
mov
ffree
jo
pushf
dec
repnz
enter
or
lret
push
addr16
inc
jb
xchg
push
mov
and
sahf
dec
cmp
addb
xlat
mov
mov
in
jbe
loopne
push
pop
sbb
lea
sbbl
sahf
int3
sbb
les
insb
aas
outsl
add
or
dec
sbb
sub
pop
jae
ljmp
cmpb
scas
pushf
out
mov
mov
mov
rcrb
xchg
mov
sbb
das
int
dec
xchg
push
mov
popa
adc
daa
pop
lea
dec
and
lods
lods
insb
sbb
inc
ret
sti
cld
add
clc
adc
lock
hlt
mov
fcmovnbe
jne
sub
and
enter
arpl
dec
cmpsl
dec
sbb
pop
mov
ds
ljmp
sarb
dec
nop
mov
js
mov
lods
jl
cmp
sub
stc
sar
push
lods
ret
jp
sbb
mov
int3
imul
mov
inc
subl
mov
stos
inc
test
pop
mov
repz
lods
add
cmpsl
ja
adc
aam
cli
jo
mov
pop
imul
into
pushf
inc
scas
xor
sub
or
fs
push
lret
fwait
out
pop
pop
xchg
jbe
and
pop
and
nop
arpl
in
stos
xor
xorl
movsl
lea
mov
add
movsb
push
mov
mov
push
lcall
dec
dec
imul
les
les
push
lret
mov
imul
andl
daa
xchg
sbb
mov
cmc
mov
mov
or
push
pop
mov
push
xchg
nop
addr16
insl
lds
dec
mov
ss
ljmp
ds
adc
js
push
adc
out
inc
sti
mov
jle
and
ljmp
js
pop
lcall
dec
jne
cmp
jg,pt
cmp
dec
sbb
sbb
pop
sub
add
mov
jl
add
mov
outsl
lahf
idiv
test
mov
push
pushf
inc
mov
outsb
push
jo
ja
pushf
cmp
cmp
enter
sbb
sub
enter
xor
push
loopne
push
mov
fnsave
loopne
inc
sub
and
notb
sbb
pop
lods
sub
into
lret
mov
adc
aad
lcall
ja
add
mov
mov
xchg
push
icebp
test
mov
insb
mov
adc
stc
push
inc
dec
inc
loopne
xchg
faddl
xchg
sbbl
in
dec
rol
push
iret
sub
rol
aas
fdivs
sub
enter
ret
stos
mov
mov
dec
jae
inc
popf
dec
push
mov
fs
lcall
dec
adc
bound
jne
jb
jmp
outsb
in
push
repz
mov
pop
movsl
mov
inc
sarb
xchg
hlt
nop
add
movsb
leave
iret
pusha
lods
mov
mov
enter
int3
ljmp
aam
jo
cmc
dec
sbb
mov
loop
in
cli
clc
and
pop
pop
push
mov
divb
insl
mov
mov
mov
mov
pusha
sbb
test
outsb
bound
gs
js
in
mov
adc
mov
inc
or
jno
gs
pop
or
pop
dec
push
adc
cmp
das
adc
xchg
cmp
sub
pushf
or
sub
cmpsl
imul
in
stos
sbb
test
xchg
pop
nop
repz
xorb
test
clc
out
xor
aad
sarb
push
pop
mov
cmp
pop
enter
bound
xchg
pop
dec
aad
scas
xchg
scas
jns
test
fdiv
pop
lods
enter
and
daa
push
xor
in
pop
sub
shrl
lods
popf
leave
push
fadds
mov
sahf
shrl
ret
sub
test
mov
sbb
loop
ss
xchg
fbld
pop
push
stos
pop
nop
out
int3
push
pusha
aaa
and
pop
lret
lcall
sahf
pop
pop
arpl
test
and
push
fsubrl
dec
out
pusha
movsl
push
je
push
adc
stos
push
sbb
pop
lds
mov
mov
mov
ja
or
sbb
lds
xchg
and
lods
clc
filds
mov
outsl
xor
in
pop
repnz
int
jle
inc
cmp
and
cltd
rep
mov
scas
lods
mov
cs
mov
adcl
stos
js
push
mov
mov
sbb
or
sahf
icebp
testl
clc
jmp
je
xor
adc
test
jne
daa
mov
jmp
repnz
jb
ds
andl
scas
sahf
test
mov
mov
pop
pop
push
enter
mov
das
push
bound
xor
pop
push
idiv
lcall
jecxz
push
outsb
in
test
or
lcall
lds
or
adc
fisttpll
inc
cmp
decl
sbb
pop
shl
inc
test
enter
dec
mov
push
and
imul
negb
push
mov
outsb
xchg
jnp
aas
mull
dec
data16
fiaddl
cmovne
fmulp
rclb
loope
mov
and
ja
sahf
iret
or
inc
aad
mov
out
orb
mov
jo
jne
insb
jl
scas
imul
filds
lock
rcrb
sub
dec
gs
mov
push
out
lds
sub
adc
ja
aaa
push
push
jle
xchg
ret
sub
cmp
or
movsl
pop
pusha
dec
pushf
mov
out
and
jnp
scas
movsb
call
sbb
fbstp
js
hlt
sbb
jae
push
mov
icebp
dec
out
bound
jo
mov
icebp
in
sub
int
cmpl
lea
scas
mov
mov
and
cmpsb
ljmp
inc
movsl
xchg
popf
fstps
xor
mov
lods
cmpsb
xchg
nop
inc
push
mov
cmc
inc
test
sbb
daa
orb
sbb
ja
cs
mov
cmp
les
pop
addr16
stos
pop
sbb
xchg
repnz
test
leave
or
jae
insl
jp
jae
rorb
movsl
push
mov
in
inc
stos
rolb
cmp
sti
sti
das
shlb
pusha
cmp
mov
mull
or
dec
sub
sub
xchg
pop
add
sub
adc
sbb
and
xlat
lods
lcall
sub
and
xor
push
ret
data16
pop
dec
test
insl
aaa
stos
hlt
sbb
inc
add
popf
push
xchg
movsb
xor
pop
inc
xchg
and
rcll
shr
jne
xor
data16
in
cbtw
mov
cmp
negb
pop
add
push
jge
mov
and
inc
and
push
mov
and
cmp
sahf
and
pushf
fistpl
pop
adc
arpl
loopne
inc
cmpsl
jbe
pop
pop
pop
xor
incl
push
push
popf
das
mov
shrl
cmp
jae
cmp
fs
sub
xchg
div
stos
sub
and
mov
repnz
xor
push
xor
push
pop
ja
mov
stos
or
sbb
sbb
jnp
ljmp
ljmp
fisttpll
cmc
lods
adc
daa
arpl
mov
sbb
inc
test
push
inc
std
stos
movsl
lods
push
jne
pushf
mov
dec
ss
xchg
test
test
test
mov
push
lods
or
fwait
inc
xor
scas
push
fcomip
lods
das
xor
cs
movl
loop
cmp
lds
scas
jne
cmp
in
pop
sbbl
mov
mov
pop
adc
jmp
cltd
cmp
sbb
xor
jno
xchg
ja
lahf
fmull
stos
orb
pop
lahf
push
insl
fimull
dec
test
pop
sub
sub
enter
test
sahf
lea
pop
mov
icebp
jne
mov
or
push
lock
test
mov
out
and
enter
andb
rcr
push
mov
fs
and
js
popa
mov
cltd
cmp
cmp
popf
pop
xchg
loopne
mov
insb
test
fisubrs
mov
loopne
gs
scas
fimull
mov
das
movsb
enter
add
pop
jmp
hlt
ljmp
imul
hlt
and
enter
int3
fldln2
fdivs
dec
or
in
fstpl
sar
cmp
lods
loopne
mov
int
subb
dec
in
test
xor
cmp
dec
jo
push
adc
jl
scas
dec
in
outsl
mov
das
push
sub
scas
lds
stc
mov
pop
imul
popf
enter
cld
cmpsb
xor
xchg
and
xchg
cmpsl
lea
into
aas
sbb
stc
mov
cmpsb
mov
popf
int
mov
je
cwtl
mov
iret
push
lea
jne
insb
pop
xor
insb
pushf
out
fldt
jb
loope
repz
cmpsb
mov
loop
orw
sahf
pop
adc
mov
pusha
lds
lods
xor
mov
xchg
rcrl
pop
insl
jg
xchg
push
dec
movsl
call
imul
sub
sbb
lods
pop
in
cs
test
cmp
jne
cmp
jns
or
lcall
mov
faddl
std
test
mov
dec
loope
cmp
pushf
pop
gs
sbb
aam
dec
push
daa
out
aas
rolb
rcrl
aaa
xchg
sbb
dec
andl
mov
das
pushf
mov
lahf
fldl
jle
cmpsl
pop
mov
insb
push
inc
or
mov
fs
cmpsl
call
mov
call
push
pop
cmpsl
push
jl
cmpsb
shrb
jecxz
pop
fs
or
pop
fimuls
jmp
mov
or
cwtl
push
outsl
cwtl
pop
daa
rorl
xchg
mov
mov
jb
int
xor
mov
iret
lret
pop
inc
mov
fwait
popf
pop
pop
inc
into
sahf
sahf
xor
movsb
int3
movsb
fs
cmp
and
jl
int
mov
inc
pop
test
jmp
and
clc
ret
subb
cmp
xor
lods
mov
jg
js
sub
jge
icebp
mov
mov
add
dec
inc
data16
pusha
push
int
xlat
sub
pop
mov
enter
pop
mov
dec
cmp
xchg
movsb
das
out
bound
mov
adc
mov
mov
sbb
outsl
xchg
sbb
mov
hlt
mov
addl
popa
lods
xor
xchg
mov
xchg
fldl2t
mov
ret
aas
jmp
lods
or
cwtl
mov
js
or
xchg
dec
jo,pn
outsb
xchg
cmp
shrb
push
xor
and
sub
lods
push
xlat
or
jb
mov
out
test
stos
inc
mov
std
or
jno
sbbl
pop
insb
stos
lods
cltd
sbb
sub
adc
mov
push
movsb
das
jle
adcb
push
stc
xor
divl
add
shr
test
mov
imul
jl
data16
jle
adc
inc
scas
jmp
ds
pop
aam
push
push
hlt
pop
dec
mov
inc
out
inc
ja
loopne
sbb
pusha
pop
imul
aam
inc
xchg
ja
push
adc
dec
insb
bound
dec
xchg
dec
add
pop
fisttpll
push
push
sub
add
pop
xor
sub
bound
ja
and
xor
mov
hlt
mov
cmp
pop
push
mov
mov
pushf
sbb
adc
mov
adc
and
dec
movsb
and
lret
sar
add
add
add
in
cmp
cmp
pushf
sahf
test
fidivrs
pop
cmp
inc
lods
mov
xchg
push
push
mov
sbb
popf
popf
cmp
sahf
dec
fsts
add
mov
jg
arpl
clc
orl
dec
mov
adc
cmp
fsubl
int3
popf
rcr
test
mov
sbb
jae
xor
fisubrs
aaa
js
fdivrs
adc
inc
sub
jne
aas
xchg
enter
xor
add
mov
adcl
lahf
test
popa
and
testb
shr
cmp
inc
mov
test
aas
cmpsb
ja
mov
xor
arpl
pop
lcall
xchg
fs
xchg
push
mov
cs
shl
xchg
ja
movsb
add
loope
pop
jnp
repz
pop
jns
insb
sbb
test
or
sbb
dec
jae
cli
mov
fwait
xchg
mov
or
fstps
adc
jo
jge
sub
or
cmp
mov
lcall
pushf
add
into
loop
xchg
popa
aas
clc
popa
pop
in
xor
stos
ja
push
cmp
sub
push
lods
scas
dec
xchg
cmp
or
mov
enter
pop
sbb
mov
loopne
mov
add
and
cmp
push
mov
idivl
outsl
cwtl
fmull
repz
ljmp
mov
popf
push
xchg
mov
das
dec
movsb
icebp
ja
sahf
xor
push
push
inc
cltd
fbld
jbe
xor
or
pop
icebp
inc
jp
lods
dec
xchg
cs
inc
pop
cmp
lret
dec
test
lock
or
je
mov
jmp
jecxz
xchg
ja
fdivrp
push
sbb
outsb
mov
mov
es
adc
pop
sub
test
gs
xchg
mov
subl
cwtl
stos
jne
shrl
lret
sub
lea
sbb
inc
add
mov
xor
jnp
int3
in
enter
and
mov
cmp
cltd
sbb
mov
pop
mov
jl
ja
jmp
ret
mov
ljmp
or
mov
fs
pop
pop
gs
jnp
xchg
mov
repnz
or
mov
lock
push
inc
mov
pusha
lahf
jl
repz
push
or
lds
push
mov
imul
int
pop
aas
mov
push
xlat
push
xchg
loope
test
mov
sub
xchg
iret
cmp
mov
sub
mov
add
fadd
xor
mulb
fistpl
loope
loope
stos
andl
mov
mov
jl
call
cmp
and
cltd
mov
inc
hlt
cwtl
sub
nop
inc
lods
pushf
pusha
xchg
xchg
push
andl
mov
data16
movsb
popf
mov
cli
cmp
out
popa
das
pop
sti
pop
jecxz
fadd
gs
mov
pop
and
sbb
sub
xor
jb
add
sub
fistpl
clc
sub
mov
or
outsb
pop
mov
or
add
nop
xchg
or
inc
mov
pop
push
jns
mov
and
pop
in
push
loope
push
xor
xor
lret
push
push
jl
scas
mov
sbb
sahf
jl
lock
js
mov
xor
into
and
ds
jl
mov
lds
or
cs
inc
lods
mov
and
mov
insb
fidivs
fnsave
mov
rcll
jmp
je
out
mov
nop
inc
adc
mov
adc
push
clc
ret
push
or
inc
in
jp
mov
movsb
nop
popf
mov
mov
repnz
add
jg
fimull
pop
sub
adc
aaa
jnp
fbld
and
cmp
fisubl
mov
push
outsl
push
ljmp
xchg
push
test
test
fdivs
out
mov
jmp
ja
mov
mov
lods
mov
lahf
rorb
mov
cld
jne
shlb
mov
lahf
jb
lods
mov
mov
repnz
dec
and
in
cmp
dec
jns
lds
mov
aam
insl
mov
dec
inc
fwait
mov
inc
mov
sti
push
adc
mov
jne
xor
push
dec
push
add
dec
daa
mov
popf
sti
inc
cld
jp
and
loope
pushf
push
lods
movsb
call
lcall
insb
stos
fwait
pop
push
ds
mov
addr16
out
add
xor
cltd
dec
and
testb
stos
cmpsb
xor
sahf
sbb
sahf
scas
aam
xchg
clc
xor
insl
js
xchg
lods
xor
xchg
sub
mov
dec
stos
aas
rolb
sub
popf
outsb
ljmp
cmp
dec
loop
out
sbb
push
dec
daa
jle
out
outsb
sahf
test
insb
push
popf
sub
mov
cmp
popf
fldl2e
xchg
jno
popf
xor
pop
push
mov
pop
subl
cmp
mov
cmp
push
inc
pop
fldl
push
pop
gs
mov
add
mov
add
inc
xchg
jle
ljmp
lahf
adc
mov
aad
sub
mov
lods
xchg
and
dec
test
xor
pop
jge
outsl
test
mov
out
xchg
movsb
sti
mov
ja
dec
scas
fstl
mov
ljmp
pusha
sahf
jo
lods
in
or
es
sahf
or
sbb
xchg
pop
mov
cmpsb
xchg
mov
in
cmp
in
dec
inc
xor
inc
xchg
inc
je
pop
repnz
mov
imul
or
fists
imul
xor
jnp
mov
xchg
lds
mov
shll
mov
mov
aad
mov
inc
rcrl
push
in
sbb
adcl
push
enter
sub
fs
xor
punpckhdq
push
adc
test
xor
push
mov
xchg
enter
decb
push
loopne
repnz
stc
xlat
mov
pop
sub
pop
add
pop
dec
clc
or
rolb
push
icebp
in
jno
sbb
jmp
mov
xor
sbbl
add
pop
pushf
mov
jns
push
dec
das
loop
dec
pop
sub
and
js
jl
mov
cwtl
sahf
mov
orb
aaa
xor
pop
hlt
cmp
dec
pusha
mov
test
into
push
sub
loopne
enter
movsb
and
mov
aam
js
mov
sahf
roll
inc
jmp
mov
mov
lods
jge
push
dec
nop
mov
in
pop
lods
js
push
nop
popf
scas
in
fwait
jne
xor
add
pop
test
pop
nop
test
ss
sub
enter
mov
cltd
lods
sub
ljmp
mov
testb
subl
xchg
daa
pusha
mov
mov
jg
enter
movsl
shlb
out
imul
nop
fwait
mov
jnp
cmp
adc
mov
mov
in
lahf
sub
cmp
pusha
pop
or
lods
or
incb
mov
cmc
imul
pusha
mov
mov
icebp
cs
xor
lahf
jo
add
call
test
or
insb
ds
push
jo
push
or
jo
xchg
test
popa
fisubs
xchg
mov
mov
ss
inc
outsl
cmpsl
aas
cwtl
dec
dec
sub
jne
out
sub
dec
cmc
or
add
add
mov
jecxz
push
sbb
scas
rclb
push
mov
mov
mov
mov
mov
and
scas
stos
test
lcall
mov
outsb
push
inc
xchg
sub
scas
lds
out
push
cmp
xchg
enter
sub
jecxz
inc
icebp
xlat
pusha
pop
hlt
push
lds
dec
lods
in
js
movsb
inc
pusha
rclb
xchg
in
not
es
inc
xchg
in
les
push
cmp
outsb
xchg
mov
pop
idivl
fistpll
jnp
adcb
add
imul
xchg
repnz
sbb
mov
xchg
mov
push
pop
adc
cwtl
add
push
push
lahf
lds
mov
push
imul
outsb
sub
mov
xchg
enter
sub
in
push
jo
js
test
in
rcr
enter
sti
jle
sahf
push
orb
mov
push
and
sub
or
push
icebp
bound
add
pop
data16
mov
fnstsw
pushf
jp
sub
jb
gs
scas
cmp
inc
in
lahf
daa
xor
out
jle
cmpsl
sub
push
stos
enter
xor
in
bound
lret
and
mov
pop
push
inc
xor
push
xor
adc
adc
sub
cli
pop
cmp
ljmp
enter
mov
dec
or
and
mov
aaa
pop
lcall
test
leave
shr
pop
push
cmp
lret
jbe
mov
push
sahf
int
cld
cltd
in
or
push
hlt
pop
jle
mov
jbe
push
push
lods
cmpsl
shlb
movsb
js
xchg
pop
call
mov
fucomip
sti
rolb
popf
neg
pushf
lock
xchg
xor
sbb
cmp
sbb
lcall
push
daa
xor
lods
pop
lds
in
adc
shlb
out
test
mov
in
mov
stos
iret
lahf
lcall
enter
lds
push
add
mov
pusha
pop
repnz
mov
enter
mov
mov
movsl
jmp
xor
sbb
pop
jne
in
popa
lds
in
mov
in
xor
xlat
sahf
xchg
add
adc
repnz
inc
xchg
jp
push
imul
and
xacquire
pushf
pop
ja
cmp
jbe
lods
jle
xchg
movsb
stos
jno
jne
pop
ja
cmp
push
xchg
mov
or
mov
sub
push
dec
stc
mov
shll
pop
pop
jo
mov
and
scas
test
xchg
mov
in
in
cmc
daa
lods
sbb
mov
lds
xor
sbb
nop
mov
mov
mov
pop
xchg
fs
sub
cmc
pusha
cmp
hlt
insl
std
xchg
and
push
dec
dec
xchg
pusha
cs
push
aad
mov
out
lods
mov
cmp
int
pop
mov
xchg
lret
fs
stos
or
outsb
je
xchg
push
outsl
test
into
movsb
adc
lods
mov
add
hlt
or
gs
xchg
fcom
pop
push
movsb
sarl
dec
push
sub
pop
push
mov
xor
pusha
repnz
aad
pop
xchg
cmp
shr
sahf
movsb
mov
xchg
movl
loopne
mov
sbbl
rolb
and
cmp
mov
test
sbb
cmp
mov
arpl
sub
stos
fnsave
imul
fdiv
enter
scas
je
popa
and
mov
adc
sbb
pop
stos
repz
cmp
jge
pop
int3
in
fsubrs
xor
push
adc
out
mov
jbe
cmp
xor
mov
scas
test
mov
shlb
js
mov
jo
mov
js
popf
mov
sub
test
jle
cmpsb
negl
jns,pn
sub
or
pushf
icebp
stos
mov
jecxz
cmp
jle
rcrb
shr
pop
inc
leave
cmp
int3
movsb
enter
adc
pop
movsl
cmpsb
js
cwtl
mov
or
push
adc
jge
pop
jbe
rorb
lss
push
pop
mov
and
mov
or
aas
repnz
xchg
aaa
test
jbe
mov
jnp
das
ss
fistps
fbstp
popa
pop
jb
and
pushf
mov
xor
sbb
adc
nop
rcrb
testb
fsubs
adc
pop
sub
scas
stos
xor
adc
out
cltd
fwait
repnz
and
sahf
jg
fdiv
adc
pop
xchg
or
test
testl
mov
fs
mov
ficoms
cmp
dec
pusha
mov
stos
mov
cltd
fisttps
xor
icebp
jg
std
mov
sub
les
test
loope
sbb
jmp
rolb
test
jns
mov
outsb
fs
fwait
sub
cmc
sbb
push
cmpsb
std
les
gs
clc
repnz
in
sub
xchg
and
jmp
out
clc
add
mov
adc
dec
loopne
out
fcmove
test
cmpsl
sahf
push
cmc
pop
movsl
scas
out
mov
cmp
bound
jb
xchg
adc
cmp
cwtl
test
fisubs
shlb
mov
jne
lods
mov
test
test
repz
movsl
nop
les
pusha
mov
xor
mov
nop
and
sub
inc
xchg
cmpsl
lds
xchg
movsl
xchg
ss
scas
stos
scas
test
sub
sub
lcall
push
dec
test
jo
xchg
and
add
in
rep
lods
addb
cmp
xor
loope
jo
jl
jg
stos
push
xchg
aam
aam
es
shll
lods
xchg
cmp
jge
lcall
mov
cmpsb
pop
adc
div
test
stos
movsb
cmp
push
adc
pop
stc
int3
lods
inc
into
cmp
pop
movsb
sahf
adc
test
mov
xor
dec
mov
push
jl
cli
nop
push
js
call
cmp
or
test
and
xlat
cmp
inc
movsb
push
dec
ret
push
sub
pop
mov
insb
ss
mov
mov
and
jmp
mov
lods
xchg
test
lcall
mov
push
out
xchg
es
sahf
lods
mov
push
mov
mov
test
fs
icebp
add
repnz
inc
cmpsl
cmpsl
std
mov
in
mov
lock
sahf
das
sbbb
mov
xchg
pop
js
nop
mov
cmpsb
nop
push
test
jns
int3
jbe
and
test
sub
fbld
jge
jno
mov
in
movsb
fisubl
cmp
jecxz
cwtl
mov
xchg
enter
xor
add
xchg
fldl
fidivs
fwait
xor
shll
dec
int3
sbb
jmp
out
cmp
jmp
mov
pusha
lds
and
push
xor
jns
jmp
or
cwtl
lds
xor
es
inc
mov
ja
addr16
imul
jmp
cmp
movsb
imul
jg
sbb
daa
nop
stos
ss
mov
xor
push
push
dec
mov
ljmp
or
repnz
jmp
repz
xchg
pop
push
aas
outsl
add
jp
jo
mov
gs
into
or
out
test
sub
jp
pop
imull
out
fxrstor
lods
rcll
mov
jb
lock
sbb
push
sbb
add
fcompl
jo
cmp
cmpsl
in
inc
mov
rcrl
imul
xor
insl
js
mov
stc
mov
lods
mov
push
lahf
pop
outsl
test
fists
or
lods
clc
dec
mov
mov
and
ds
cmp
ds
xor
jb
out
iret
test
scas
repnz
bound
and
push
je
loope
jo
mov
sbb
inc
sub
pop
mov
orl
sarb
into
and
fwait
pop
fwait
pop
sub
fbstp
xchg
into
cwtl
nop
jbe
inc
pop
mov
daa
cmpsl
je
lods
call
cmp
mov
out
or
jbe
inc
and
scas
les
xchg
outsb
stc
fldt
lock
or
or
daa
test
daa
sub
sbb
jg
adc
adc
or
enter
shll
pop
lods
mov
cld
cwtl
in
dec
imull
push
jno
and
and
mov
push
lods
popa
test
adc
aam
add
or
mov
sarl
jne
cltd
sub
sbbb
pusha
mov
lcall
pop
push
lods
arpl
sbb
mov
sti
lret
stos
add
sbb
add
mov
sub
mov
das
xor
mov
push
jp
mov
stos
stos
sub
insl
push
sub
and
add
popa
insb
jg
es
xchg
adc
sub
call
xchg
jl
lods
cmpsb
add
imulb
in
xchg
mov
ret
lods
pushf
mov
lds
out
pop
mov
mov
movsl
lahf
mov
jo
inc
xor
sub
mov
lahf
xchg
outsb
lods
movsl
mov
mov
pop
jbe
mov
push
test
mov
push
test
add
mov
jmp
cmp
imul
lret
ljmp
inc
loope
orl
add
scas
push
ljmp
sub
data16
or
sti
xor
dec
lcall
test
mov
jo
ja
cmp
outsl
mov
stos
arpl
daa
pushf
cmpsb
jge
test
arpl
lods
ss
loope
in
lcall
popa
in
cmp
inc
sahf
clc
jg
dec
rdpmc
mov
aam
push
jge
jne
pusha
lock
filds
pusha
mov
imul
dec
cmc
lods
cld
jae
dec
push
or
adc
insl
subl
popf
lret
push
cmpsl
ja
mov
rorl
movsl
in
mov
pop
sub
inc
fadd
lahf
lret
lods
push
xchg
popa
cmp
push
clc
xchg
inc
lock
xor
ja
add
out
jns
xchg
sbb
sahf
negb
cmpsl
xchg
ja
push
or
inc
push
popf
leave
mov
xor
test
inc
mov
and
fidivrs
popf
adc
test
pop
test
push
sbb
insb
dec
shlb
test
pusha
nop
test
mov
jno
stc
push
xor
mov
lcall
fcmovnu
cmpsl
sub
xor
dec
adc
imul
sub
punpckldq
das
mov
repnz
jl
in
jle
ja
loopne
xor
lret
pop
sbb
stos
mov
push
les
jnp
subl
pop
lret
jae
push
xchg
push
rorl
jnp
push
adc
push
jo
in
popa
mov
orb
xchg
inc
or
push
inc
rorl
cwtl
pusha
sahf
jmp
aaa
xchg
sub
lods
dec
and
jecxz
ja
push
clc
aam
add
sti
xor
jnp
mov
pushf
or
push
push
inc
repz
ds
sbb
mov
jl
mov
dec
sarl
lods
mov
xor
dec
aaa
xor
jbe
enter
jb
testl
das
les
jb
mov
pop
sahf
push
scas
cmp
rclb
cmp
push
movsl
clc
pusha
cmp
stos
icebp
xlat
and
lcall
fmull
push
testl
sbb
jb
js
push
inc
jl
jge
mov
push
icebp
out
fdivr
jp
pop
cld
into
lds
int3
pop
pusha
lcall
or
xchg
adcl
dec
fiadds
pusha
mov
inc
ljmp
push
js
cmp
lods
mov
xchg
in
mov
pop
push
jo
enter
adc
lods
cmpb
inc
repnz
xor
pop
xchg
pop
sbb
and
sbb
stos
xor
faddp
mov
adc
mov
and
call
lds
sahf
xlat
xchg
pop
dec
dec
jb
scas
pop
repz
cmc
mov
bound
lds
aam
stos
jo
xor
mov
push
add
lods
xor
mov
repnz
cltd
jns
gs
mov
mov
mov
push
sbb
jmp
negl
cmp
inc
pop
and
xor
icebp
jecxz
jecxz
test
enter
xchg
mov
and
mov
dec
cmpsb
nop
cmp
ljmp
jo
mov
cltd
dec
out
sbb
dec
cmp
xchg
lahf
test
insb
xorl
cmp
or
dec
clc
ret
inc
jge
ds
xlat
lret
shrb
dec
clc
movsb
mov
lret
pop
loopne
addr16
fwait
push
sbb
inc
sahf
lea
push
cmp
jmp
imul
add
test
and
pushf
inc
mov
fdivp
and
mov
ljmp
leave
inc
jo
cs
popf
cmpsl
push
mov
xchg
mov
movsb
icebp
xchg
push
dec
stos
mov
rcrb
dec
dec
push
outsb
outsb
pushf
outsb
xlat
mov
mov
jbe
mov
inc
repz
in
int
push
pop
iret
insb
or
test
fwait
mov
cs
mov
mov
dec
push
cmp
imul
dec
rep
mov
sahf
xchg
adc
jp
push
push
sub
xlat
shlb
imull
xor
fs
or
cmp
enter
jmp
imul
jbe
sub
sbbb
jae
mov
xorb
lcall
jle
push
adc
mov
or
and
push
adc
mov
xchg
add
sub
sub
dec
rolb
cmc
pop
mov
movsb
lods
add
lret
lcall
mov
cmpsl
lret
outsl
adc
nop
jl
pushf
lds
bswap
rorb
lea
cld
movsb
pop
inc
cmp
repz
stos
rorl
fisttpll
hlt
fistpl
insb
test
adc
ret
sar
inc
cmpsl
bound
jl
cwtl
fnsave
mov
add
push
and
scas
popf
rcrb
out
enterw
mov
pop
clc
pop
stc
dec
idivb
jne
ja
push
and
xchg
sub
inc
jae
cmp
mov
dec
out
mov
ret
xchg
jo
xchg
es
cltd
dec
xchg
test
jb
push
adc
xchg
fsubrp
shrb
aam
mov
mov
xor
pop
mov
sbb
cmpsb
es
call
movsb
lds
das
push
rcrb
stos
mov
mov
testl
xchg
ret
lcall
pop
jb
mov
jp
cmp
dec
xchg
pop
scas
in
mov
pop
sbb
mov
inc
popa
xor
xor
nop
lds
cwtl
mov
das
push
stos
push
sub
lahf
push
das
imul
mov
les
pop
jge
repnz
sbb
cmp
sbb
imul
and
insb
sub
in
enter
cltd
lds
insb
int
xchg
lds
rorl
or
pop
jmp
cmpsl
addr16
movsl
mov
fwait
adc
mov
je
sub
sub
mov
jne
hlt
jg
push
fmuls
and
pushf
cmpsl
mov
push
pop
testb
aas
jnp
inc
or
bound
xchg
outsb
popf
and
loope
int
std
adc
mov
mov
call
jmp
sarl
jg
in
sub
scas
xor
push
testb
outsb
xchg
push
mov
aam
push
nop
sti
adc
int
jne
jl
mull
stos
mov
dec
cmp
roll
jge
sub
les
push
push
jne
cmpl
aas
mov
imul
hlt
and
jne
ds
nop
push
xchg
and
xchg
xor
xor
push
push
pop
jecxz
test
aaa
insl
insl
call
push
in
adcl
fidivs
inc
jne
shl
sbb
stos
sub
xchg
push
mov
stos
cli
cmpsl
mov
cld
pop
data16
movsl
adc
scas
pop
pop
insl
test
test
scas
push
ret
std
adc
scas
xor
das
inc
mov
or
and
test
cmp
cmp
mov
xchg
adc
lds
cmpsl
pop
test
lea
test
jmp
sahf
jne
cmp
pop
xchg
aam
mov
pop
js
mov
cmp
xor
sbb
and
push
adc
xor
pop
out
mov
pusha
cmpsb
sahf
and
mov
loope
push
cmp
jne
test
xor
rcrb
adc
pop
out
sbb
movsl
in
push
xchg
fistpl
loope
mov
scas
jnp
insb
call
movsb
outsb
dec
cmp
outsl
mov
or
out
or
lds
sbb
mov
pusha
mov
add
scas
or
fsubl
cmp
adc
out
sbb
les
push
loopne
gs
mov
sahf
fisttps
mov
test
or
jecxz
jl
cmp
stos
sahf
xor
push
jle
inc
dec
mov
iret
popf
inc
inc
nop
imul
scas
xor
movsb
sbb
clc
sahf
ret
jl
cmpsb
aas
dec
notl
jns
dec
sbb
inc
xchg
xchg
push
into
in
pop
sbb
gs
dec
push
dec
bound
pop
mov
sbb
out
ret
repnz
movsb
jge
stos
fstps
out
imul
jae
pop
push
repnz
loope
daa
mov
fwait
mov
inc
dec
jp
xchg
xlat
in
fisubs
mov
cmp
mov
js
xor
sahf
and
aam
xchg
sarl
mov
jnp
or
ret
movsb
cltd
enter
xchg
jo
inc
sbb
add
push
ja
and
fisubrs
sub
pop
clc
mov
movsb
add
fistpl
subb
push
ljmp
mov
int3
and
pop
in
jae
shr
jp
dec
lods
fistl
inc
jge
cmp
sbb
dec
dec
fcomps
out
adc
lods
pusha
lods
fsubrl
sub
fiaddl
jns
sbb
mov
in
ret
test
mov
sbb
std
and
ja
lret
scas
inc
insb
cltd
loope
enter
mov
imul
dec
cmp
out
push
cmp
aam
clc
push
shrb
shr
xor
and
clc
enter
mov
repnz
test
and
pushf
mov
in
cmpsb
mov
daa
jbe
and
insb
and
xchg
insb
cli
mov
pusha
inc
adc
or
cmpsb
or
out
into
repnz
dec
cli
outsl
jbe
nop
fsub
add
sbb
jne
test
and
jecxz
pop
inc
cmp
xor
lcallw
dec
fsts
mov
gs
test
enter
pop
jg
sub
rorb
cmp
aad
sbb
mov
fisubrs
or
fstps
sbb
pop
js
mov
jl
outsb
jl
inc
adc
add
mov
insb
push
outsb
scas
push
sub
cmp
push
imul
push
dec
sbb
js,pt
adc
lcall
pop
jecxz
push
clc
sub
cmp
mov
mov
in
fsts
pop
xchg
mov
xor
nop
xchg
subl
popl
sub
lea
xor
xchg
cmpsb
xchg
outsb
pop
mov
xchg
push
cmp
xorb
cs
aaa
mov
lahf
push
xchg
nop
pop
lea
jmp
mov
jp
nop
enter
int3
inc
cltd
sub
test
sub
and
xabort
insl
mov
fst
add
movsb
in
sbb
inc
adc
cmpsl
sbb
sub
stos
loopne
pop
insl
scas
sub
or
mov
sub
mov
mov
sbb
lahf
test
jbe
add
xchg
sub
ret
add
pop
cmp
adc
pop
pop
orps
mov
and
add
fidivs
adc
jmp
dec
sbb
jg
cwtl
mov
or
sub
out
int
cmpsl
enter
inc
adc
sub
subl
mov
iret
test
nop
scas
cmp
popf
pop
iret
outsl
test
or
pusha
mov
daa
call
popf
gs
sbb
pop
subl
push
cld
xchg
daa
pop
or
xchg
pusha
lds
pusha
xchg
mov
bound
into
inc
js
dec
jg
vhaddps
lcall
dec
pop
and
movq
clc
shlb
mov
xchg
lods
mov
inc
call
pop
inc
mov
ljmp
dec
xor
xchg
dec
test
dec
push
mov
call
lds
enter
dec
mov
pop
jnp
cli
jne
stc
lods
cmp
mov
pop
cmp
hlt
jge
mov
lds
and
mov
or
mov
jg
gs
dec
xor
insl
mov
xchg
pop
mov
mov
sarb
add
and
scas
int
popf
cmpsb
lods
cmp
mov
push
xor
lds
mov
cmp
lds
sbb
pop
xor
rclb
loop
insb
dec
sti
push
push
sub
daa
roll
push
int
fsubrp
cmp
mov
add
fxch
xor
mov
sahf
pop
and
lds
ljmp
lods
xor
mov
fdivs
jno
pop
imull
iret
pop
mov
dec
mov
dec
adc
push
push
movsl
cmp
pop
rcrl
ljmp
data16
scas
sbb
xor
ret
out
mov
ss
pop
mov
popf
and
sbb
inc
repnz
fisttpll
pop
aad
nop
leave
addr16
pop
or
cli
sahf
outsl
imul
add
jne
cmpsl
adc
stos
enter
stos
lds
push
add
sbb
cmp
mov
add
sahf
lret
sub
push
repz
in
insl
in
pop
repz
insl
inc
movl
add
sbb
pop
int
push
inc
mov
out
stos
jbe
test
pop
sbb
dec
bound
and
jne
add
or
sub
lret
stos
cmc
dec
dec
inc
lahf
dec
jge
mov
cltd
dec
imul
push
je
pop
sbb
push
nop
je
jmp
mov
cmp
inc
jle
out
cmpl
cmp
dec
jp
mov
push
shrb
lods
pusha
adc
mov
scas
mov
popf
pop
lahf
insb
sbb
push
lds
jg
dec
loopne
shrb
pushf
js
movsl
push
dec
push
nop
push
cli
in
xchg
sarl
repz
aaa
pop
sti
int
js
xor
add
jb
sbb
push
lods
test
rcll
cmp
push
nop
mov
push
mov
outsl
ret
scas
je
xor
inc
xchg
xor
jle
push
xor
prefetch
stos
pop
test
imul
xor
loope
xchg
add
imul
mov
xor
or
insl
pop
jno
add
ss
mov
xor
insl
inc
popa
imulb
imul
xchg
push
xor
ljmp
cmp
xor
outsb
mov
mov
popa
sub
push
enter
lds
test
mov
cmp
in
pop
mov
mov
std
pop
adc
push
mov
movsl
ja
test
and
in
enter
mov
xchg
sub
outsb
test
mov
or
outsb
movsl
lea
pushf
sub
mov
dec
sbb
xchg
xor
dec
jae
mov
mov
xchg
mov
xchg
dec
mov
pop
loopne
or
hlt
add
and
xor
push
xchg
jle
pushf
mov
scas
xor
in
in
orb
pop
add
adc
loop
fcmove
sub
mov
push
mov
cmp
adc
and
and
mov
mov
imul
es
sub
inc
sbb
into
lds
dec
ret
add
cmpsb
jmp
jg
nop
cmc
jo
inc
and
add
xor
mull
test
movsl
shll
lds
in
mov
mov
mov
dec
jb
pop
cwtl
ret
insl
les
jb
xchg
enter
cmp
xchg
mov
in
add
add
stos
xchg
cmpsl
je
jle
push
mov
gs
lcall
mov
mov
sub
cmp
cmpsl
inc
xchg
sub
sbb
test
shrb
mov
lcall
inc
sbb
mov
ljmp
into
loopne
jno
pop
icebp
push
lret
repz
cltd
cmpl
dec
inc
add
lock
scas
adc
data16
mov
sbb
cwtl
shll
cltd
mov
pop
pop
das
jns
daa
xlat
jmp
push
xor
sbb
in
mov
pop
mov
jg
mov
out
push
mov
fdiv
or
sub
arpl
gs
push
push
mov
adc
mov
nop
mov
outsl
test
sbb
sbb
dec
and
adc
sbb
inc
rorb
sbb
sbb
pushf
cmp
je
stos
xorb
das
mov
cmp
jp
sbb
js
sub
shl
pop
xor
sub
aaa
lds
aas
in
stos
jle
sahf
lds
jg
mov
push
rorb
clc
mov
pop
cmpsl
sub
daa
pop
xor
mov
cmp
sbb
push
scas
ss
test
sbb
mov
pop
lcall
lods
xor
aaa
fdivl
dec
addr16
push
test
mov
mov
push
xchg
jl
xchg
test
ja
cwtl
cmp
loop
je
cmpsb
inc
stos
rorl
mov
mov
add
movsl
xchg
push
pushf
pop
xchg
mov
push
lds
mov
aas
and
sub
push
push
ret
cmpsl
pop
subl
aam
mov
or
rcrl
dec
out
stos
enter
gs
sbbl
inc
sahf
fsts
aaa
mov
cmp
push
pop
in
into
xchg
fs
jecxz
adc
fwait
fs
ret
mov
jle
cmpsb
test
adc
mov
es
pop
repz
cmpsl
imulb
clc
pop
fs
inc
std
jmp
sbb
sbb
outsb
insl
mov
lcall
out
pusha
mov
sbb
pushf
icebp
mov
xchg
xchg
sbbb
mov
add
daa
clc
sub
mov
mov
mov
clc
call
out
push
add
sub
mov
daa
fcoml
jo
addr16
adcb
test
scas
out
lods
dec
or
popa
int3
sub
mov
es
mov
das
test
cs
movsl
cmpsb
arpl
jbe
xor
and
or
aaa
lods
or
sbb
aas
stos
ja
dec
jl
repnz
imul
dec
movsb
in
mov
lods
cmpsl
movsbl
dec
jecxz
or
pop
cld
pop
sub
test
lret
lcall
fadds
das
or
flds
mov
aam
xchg
fistpl
inc
or
fidivrs
xchg
lds
jo
push
movsb
int
lock
and
ds
sbb
imul
mov
jne
outsb
popf
xor
push
out
lea
jo
lods
loopne
ficompl
xor
repz
insb
gs
or
and
ret
push
addr16
pop
inc
js
mov
ficoms
adc
je
jne
into
xchg
sahf
push
mov
sub
adc
sub
dec
lods
loope
mov
mov
xchg
sbb
pusha
arpl
fwait
jo
xorb
push
xchg
lea
movsb
jne
xor
xchg
idivl
das
es
mov
mov
mov
xchg
jo
xchg
cmpsb
sbb
xchg
aam
ljmp
sti
mov
cmp
cmp
scas
jo
enter
in
icebp
mov
adc
pop
fildll
in
jl
jg
fstps
stos
fidivrs
notb
sbb
xchg
xchg
and
jle
stos
pop
sbb
adc
dec
cmp
cmpsl
mov
mov
cmpsb
fisubrl
nop
mov
enter
insb
clc
imul
outsl
pushf
aas
into
sahf
lock
push
cmpsb
arpl
xchg
cmp
hlt
xchg
xor
push
sub
lods
test
add
test
out
push
in
bound
push
dec
or
sbb
imul
mov
push
into
xchg
dec
lock
popa
aaa
pop
ss
mov
daa
out
inc
test
sub
lods
sbb
aas
xchg
sahf
xor
sub
sbb
aas
sbb
cmp
xchg
lods
cmpsl
mov
mov
pusha
js
test
and
cwtl
mov
pop
sub
or
repz
or
or
in
mov
add
pop
mov
test
xchg
lcall
mov
aaa
xchg
and
fisubrs
dec
or
lods
or
xorl
pop
movsb
cli
add
daa
sbb
je
je
dec
mov
and
push
lcall
push
imul
xchg
rcrl
mov
pop
in
cld
test
lds
mov
scas
xor
adc
movsl
adc
fs
outsb
xchg
sub
inc
cli
jg
push
daa
pop
xchg
adc
jmp
xor
lock
cmpsl
mov
and
mov
clc
mov
fiadds
xor
mov
and
test
outsb
call
inc
sbb
sub
cmp
sbb
fwait
push
mov
je
mov
jmp
adc
movsb
mov
cltd
enter
xor
pop
inc
mov
mov
mov
in
popa
call
inc
testl
jb
call
fsubl
jo
mov
inc
sbb
sub
stos
xor
je
or
or
pop
test
cmc
or
sub
and
fcompl
mov
das
out
sbb
sbb
pop
jg
cmp
mov
shlb
mov
pop
mov
scas
mov
orb
loopne
pop
jnp
lds
xor
frstor
and
dec
xchg
and
push
fcomps
iret
inc
cli
scas
gs
push
sub
jp
movsb
addr16
cmp
aas
sub
jne
addr16
add
loopne
adc
iret
xor
jg
gs
jmp
sub
cmpsl
aaa
inc
scas
dec
mov
test
pop
movsb
daa
cmpsb
sub
mov
out
adc
jmp
hlt
les
andb
or
mov
jmp
add
xor
mov
pop
xchg
sbb
sbb
push
daa
stc
dec
push
cmp
cmpsl
gs
jg
cwtl
pop
lahf
cmpsl
test
cmp
xor
popa
xchg
hlt
scas
outsb
mov
jge
sub
mov
adc
bound
pop
call
lea
ja
jmp
cs
scas
cmp
push
sti
aaa
inc
or
pop
adc
pop
clc
sub
ffree
mov
pushf
lods
repz
pop
das
mov
adc
add
jo
add
jmp
xchg
mov
repnz
fstps
cmp
sub
mov
mov
scas
test
sub
in
and
mov
pop
mov
xchg
jbe
jmp
push
divb
mov
test
and
scas
mov
call
pop
ret
out
dec
mov
clc
push
test
mov
add
mov
adc
js
push
pop
rolb
mov
cmp
mov
xchg
jmp
subb
mov
add
clc
call
gs
xor
or
push
aaa
lcall
insb
dec
inc
lahf
arpl
push
cmp
cmp
mov
daa
fadds
and
inc
ss
insb
mov
xchg
jge
mov
jb
mov
cmp
and
and
push
xor
sub
mov
pop
dec
mov
lea
add
adc
sbb
insl
cld
hlt
pop
sub
jmp
leave
repnz
inc
pop
xchg
mov
fwait
inc
in
scas
sub
add
pop
imull
jo
das
push
test
sub
sar
cmpsl
pop
pop
jmp
jbe
jo
es
fsubrl
lods
clc
aam
data16
out
pop
addr16
outsb
test
sbb
cmpsl
mov
xor
sbbl
and
or
movsl
jnp
pop
cwtl
mov
inc
int3
xchg
xchg
lea
and
sbb
iret
insb
in
nop
xor
mov
aam
call
dec
mov
nop
pop
mov
icebp
mov
xor
pushf
dec
mov
push
and
mov
loope
jo
push
sti
outsl
jmp
iret
ja
fsubrs
mov
jl
dec
mov
cli
insb
in
mov
test
sub
mov
in
pushf
lods
add
push
out
lahf
popa
in
sub
andb
lcall
cmpsl
push
cld
push
js
pop
js
jo
push
fwait
push
sbbb
andb
mov
mov
push
sub
push
mov
push
inc
clc
add
scas
xor
sub
lods
clc
out
pop
pop
mov
sub
movsl
insb
out
inc
cmp
sahf
das
mov
sub
xor
outsb
cs
cwtl
idivl
popf
repnz
dec
xor
sti
pop
pop
cmpsb
sbb
xchg
orb
wbinvd
mov
mov
push
lods
movsb
xchg
pusha
test
sbb
pop
push
adc
cmp
push
stos
cmpsb
pop
jmp
push
movsb
clc
inc
or
cmpsl
jno
jo
xor
cmpsb
je
inc
sbbb
iret
orb
push
fiadds
int3
add
shrl
push
scas
xchg
inc
jl
fimull
jl
mov
xchg
mov
xor
call
es
push
and
cs
push
dec
aad
xor
add
test
or
out
out
daa
cmp
inc
fldcw
bound
push
mov
mov
cs
aam
fistpll
lods
mov
sbbl
lods
es
mov
xchg
mov
jge
mov
ja
scas
sub
cmpsb
jge
pop
outsb
pusha
inc
in
stos
mov
fs
incl
test
mov
int
xor
add
jg
or
clc
pop
ss
jge
bnd
popf
dec
xor
pop
fdivl
mov
outsl
mov
test
sbb
sub
leave
jne
out
push
mov
mov
lcall
push
cwtl
lret
rcrl
sub
ficoml
gs
in
mov
xchg
lahf
xor
mov
stos
nop
ret
lds
dec
pushf
cmpsl
insb
mov
js
clc
cmpl
cmp
pop
test
mov
into
adc
mov
sahf
adc
insl
sub
adc
rcr
das
fcomps
dec
popf
ljmp
fisubl
int3
sahf
outsb
dec
sarb
xchg
add
pushf
gs
jp
aas
inc
cli
subl
daa
adc
sub
cli
cmpb
in
or
mov
xchg
test
xor
stc
cltd
dec
sub
outsl
mov
fnstenv
popf
inc
sub
push
fwait
push
xchg
test
pusha
xchg
movsb
sahf
insb
xchg
mov
sahf
cwtl
xchg
cld
push
pop
nop
mov
and
call
push
int
jne
jae
lahf
pop
hlt
fs
cmp
sbb
add
lahf
int3
sub
inc
lds
loop
shlb
cmpsb
lcall
sub
mov
cmp
cmp
push
pop
rcrb
nop
dec
call
daa
mov
xor
pop
pop
lock
enter
orl
sub
mov
push
adc
cwtl
enter
mov
or
add
popa
add
pop
not
jo
out
mov
sbb
sbb
mov
cmc
test
or
dec
dec
mov
scas
lds
jae
mov
adc
pop
sub
cmp
lahf
or
xor
test
test
push
dec
insb
cmp
xchg
pop
lods
xor
daa
jl
daa
sub
lcall
ja
mov
shlb
adcb
sub
addr16
pop
mov
xchg
stos
xlat
fsts
sbb
lods
cmp
les
pop
mov
or
push
hlt
shl
cmp
aad
insb
xor
cmp
addr16
fwait
aaa
mov
jl
lcall
outsl
addr16
pushf
test
xchg
movsb
jl
enter
ljmp
testb
insb
scas
ljmp
xor
rclb
adc
nop
cmpsl
cmp
scas
icebp
in
pusha
xchg
jmp
mov
insl
out
test
pop
xor
push
dec
mov
and
pop
ss
fcoms
lock
repnz
lahf
xor
mov
mov
popa
mov
jne
xor
test
in
mov
popf
bound
sbb
nop
es
movsl
out
shrb
mov
ret
lds
daa
fsubrs
add
lea
cmpsl
jmp
xchg
mov
popf
mov
pushf
test
pushf
daa
imul
xchg
add
ss
pop
adc
mov
aas
inc
mov
in
sub
out
push
mov
mov
xchg
lods
jb
and
pop
mov
nop
xlat
daa
push
mov
jne
mov
dec
push
add
push
fbld
pushf
test
sub
mov
add
push
aas
push
sbb
pop
mov
jbe
add
dec
mov
mov
cwtl
lea
aam
cltd
mov
sbb
in
sub
outsb
cmp
shll
mov
fadds
call
push
mov
rcll
xchg
lock
lret
xchg
ret
push
outsl
lods
nop
push
es
xchg
mov
lret
lds
and
mov
in
pop
jmp
sbb
adc
sub
stos
inc
or
pusha
xor
inc
imul
jmp
lods
mov
jle
imul
jno
rcl
mov
jge
stos
data16
bound
shlb
aaa
stc
sub
daa
pop
mov
lods
bound
jno
mov
inc
popa
push
lods
dec
das
pop
mov
pop
push
lods
push
ljmp
pop
sub
icebp
push
adc
enter
jb
lret
mov
mov
sti
mulb
inc
mov
cltd
push
ja
fstps
pop
outsb
add
and
ja
mov
out
sub
sbb
adc
les
dec
jne
xor
push
mov
xor
pop
divb
mov
mov
and
sbb
mov
ljmp
and
int
scas
data16
xchg
or
insl
lahf
icebp
push
push
test
xchg
pop
adc
andl
xchg
es
sub
push
and
mov
sbb
sub
test
popa
sub
insl
xchg
testl
ss
xchg
daa
nop
xchg
dec
idivb
and
test
mov
shrb
add
xor
loopnew
jno
mov
pop
pop
and
push
mov
std
or
push
stos
out
mov
xchg
add
sub
clc
inc
cld
dec
shll
push
ficompl
cmpsl
ja
cmp
push
push
xchg
mov
stos
add
or
pop
add
jl
inc
cs
aaa
sbb
add
scas
cmp
jns
cmp
or
hlt
gs
xor
enter
push
outsl
sub
push
xchg
cmpsl
cmp
test
data16
mov
or
bound
mov
ret
fimuls
inc
mov
xchg
xor
push
xchg
out
jmp
and
movsl
rcr
jmp
outsb
sahf
jbe
add
mov
cltd
pop
in
push
test
call
push
cmp
mov
dec
sti
xchg
insb
loope
push
mov
std
sub
insb
mov
add
jge
cmpsl
and
je
lea
pusha
xchg
nop
stos
nop
jo
mov
lods
ret
mov
pop
test
jo
nop
gs
push
add
mov
inc
cwtl
pop
leave
lahf
xchg
subb
cwtl
fcmovnb
js
mov
test
push
sub
dec
insb
xor
jbe
dec
and
and
jne
pusha
call
adc
inc
xlat
aam
and
mov
shrb
call
mov
into
push
mov
mov
int
in
clc
lcall
push
dec
stos
mov
movsb
xchg
int3
nop
je
sub
js
cltd
sub
lahf
enter
popa
mov
pop
sbb
add
pop
cld
jb
pop
jl
sub
xor
mov
and
cmpsb
sahf
je
out
outsl
mov
or
sub
push
mov
mov
push
bnd
sbb
push
clc
cs
push
mov
call
add
out
jmp
lahf
data16
stc
cwtl
dec
cmp
enter
dec
jmp
pop
mov
adc
lcall
jmp
call
pushf
pop
sti
mov
xchg
jbe
sti
movsl
popf
pusha
andnps
dec
in
mulb
loopne
add
mov
ror
xchg
mov
jp
push
scas
lods
mov
xor
add
in
mov
jno
in
mov
mov
xor
pop
das
xchg
into
push
push
push
jo
add
and
ret
cs
jge
push
int3
test
movsl
lcall
incb
mov
xor
out
mov
popa
mov
push
or
rcr
cltd
aad
lea
das
push
outsb
dec
or
iret
mov
push
mov
js
and
cmp
insl
sbb
jp
aas
imul
pop
mov
push
pop
jmp
add
mov
movsl
scas
test
cmpsl
push
or
and
and
sbb
mov
cmc
std
mull
jecxz
imul
fisubrs
mov
testl
fcompl
push
pop
fwait
imul
add
inc
add
das
fstpl
rcr
sbb
loop
mov
mov
fsubl
mov
cmpsl
insb
mov
outsb
inc
insl
jo
test
jmp
push
or
scas
cmpsb
aaa
or
sub
nop
mov
pushf
push
daa
jnp
cmpsl
enter
or
mov
sub
subb
sahf
sub
jo
into
gs
mov
adcb
cmp
mov
mov
mov
jnp
das
and
jge
fptan
mov
xchg
sbb
mov
mov
add
xor
enter
lret
insb
stos
enter
xchg
outsb
rolb
xchg
repz
push
mov
and
cmp
inc
mov
and
xor
xchg
pop
inc
scas
mov
stos
pop
mov
push
adcl
add
jo
jbe
cmp
ror
dec
insw
loop
lahf
mov
outsb
fldt
cs
sub
mov
outsl
cmp
pop
mov
adc
ss
cmpsb
pop
sbb
fwait
jmp
insb
movsl
or
bound
push
outsb
jg
mov
or
xor
repz
in
mov
out
into
test
lods
out
bound
inc
xchg
insl
add
cmpsl
xchg
jo
ja
call
nop
inc
push
movsb
stos
inc
push
lock
pop
leave
mov
jae
xchg
out
jo
orb
into
sti
popf
int3
fimuls
test
repnz
orb
xchg
pop
sbb
je
or
push
aam
fsubs
insb
push
mov
cld
test
push
or
adc
ss
sbbl
lods
scas
mov
inc
fmuls
fisubrs
sbb
fbstp
outsl
push
sahf
dec
test
or
lidtl
jle
cmpsl
xor
xor
enter
mov
push
mov
add
lahf
aam
mov
cmp
xchg
cmp
push
inc
enter
add
pop
mov
jne
cmp
pop
out
jp
repnz
or
out
addr16
lcall
pop
fimull
enter
jb
mov
inc
es
mov
aam
js
hlt
and
and
lcall
lahf
int
xchg
int3
divl
andb
mov
xor
inc
jo
jae
scas
shr
or
andb
test
adc
out
cmp
cmp
jg
and
push
mov
sbb
sahf
cltd
lea
jmp
dec
cs
das
add
mov
movsl
dec
cmc
inc
in
pop
int
inc
cltd
movsb
test
mov
fsubr
xor
mov
or
outsb
inc
subb
sar
xor
cmc
fs
mov
mov
xchg
js
hlt
call
sub
test
sub
repz
jle
push
mov
les
std
call
lcall
roll
mov
loop
mov
repz
mov
mov
dec
mov
enter
setp
xor
cltd
dec
pop
mov
dec
test
push
jo
mov
inc
pushf
push
and
adc
xor
mov
stos
add
cmpl
lret
pop
push
test
sahf
jnp
rol
pop
or
cmpsb
pop
outsl
push
stos
jne
pop
mov
cwtl
xchg
enter
mov
xorb
mov
mov
sahf
out
mov
xchg
out
pop
pusha
xor
cld
inc
xchg
add
scas
xor
orb
jo
dec
addb
push
test
inc
outsb
inc
ja
cmpb
mull
sub
sbb
bound
xor
jmp
stos
hlt
nop
repnz
test
inc
cmp
pop
insb
aad
insl
adc
es
mov
test
jmp
jbe
bound
pop
or
and
int3
scas
sbb
cmp
mov
mov
pop
pop
xlat
push
int3
insb
je
pop
dec
bound
mov
iret
xchg
js
imulb
xchg
cmp
inc
inc
movsl
mov
inc
nop
xchg
cmp
sbb
ja
mov
lods
in
imul
ret
adc
je
pop
lods
or
in
adc
pop
xchg
sbb
mov
sub
outsb
xor
out
and
insb
jmp
push
imul
pop
test
mov
push
repz
inc
sbb
test
sarl
mov
xchg
and
hlt
imul
loope
imull
mov
and
icebp
call
add
decl
nop
xchg
xor
cmp
test
lods
xor
jecxz
fs
mov
or
jmp
adc
clc
mov
cmpl
enter
xchg
lahf
jle
xchg
push
jo
mov
xor
stos
notl
push
sbb
mov
jge
enter
ss
hlt
add
mov
popf
mov
or
and
xor
data16
insb
cs
xchg
outsb
mov
pushf
in
jmp
out
dec
dec
xchg
movsb
test
popa
ja
arpl
test
outsl
xchg
sub
pop
out
or
sub
nop
push
mov
push
shlb
jg
pop
xorb
jecxz
js
repnz
xorb
lods
or
je
pop
or
mov
xchg
pop
jne
cmp
sub
sub
add
sub
pop
cmp
pop
and
jo
daa
push
pushf
xor
movsl
fcoms
jle
scas
or
pop
andl
dec
enter
mov
and
mov
outsl
jmp
cmpsb
jno
pop
dec
mov
in
sub
fbstp
xor
inc
pushf
pop
test
xor
je
outsl
push
nop
sbb
lods
push
sarl
cmp
and
lods
jge
aad
mov
pop
testb
push
shrl
pushf
lods
xchg
fdivp
sbb
addr16
pop
pop
xor
les
shlb
adc
inc
mov
cmp
lock
das
xor
test
push
cmpsl
popf
lods
pushf
sub
out
lcall
sahf
dec
lss
ds
pop
aam
dec
inc
out
push
clc
fnstenv
mov
les
mov
daa
jge
fcomps
push
dec
and
jne
das
clc
sub
and
test
hlt
jns
jmp
push
push
sbb
enter
js
test
or
push
pusha
shll
xor
mov
and
int3
push
mov
xchg
cwtl
cmpsb
jbe
test
cmp
and
pop
cltd
in
xchg
lret
jmp
cltd
mov
not
test
cld
lret
int3
cmp
mov
repnz
add
sti
sbb
mov
lcall
enter
or
test
jns
sub
mov
js
inc
fdiv
mov
pushf
leave
sbb
mov
cmp
mov
cmp
add
xchg
stos
xor
inc
stos
push
repz
andb
repnz
cld
daa
pop
fdivr
ja
inc
mov
sub
js
sub
mov
cmp
or
imulb
inc
aas
loop
mov
inc
pop
cmpsl
lock
cmp
and
movsl
mov
jmp
pop
jge
fwait
push
mov
ficomps
or
dec
cmpsl
pop
and
rcrl
cmp
popf
sub
push
vmovshdup
fcoms
scas
inc
nop
test
inc
add
sub
js
pop
std
fmull
sub
aaa
pushf
aam
das
jne
loop
mov
push
movsb
fldenv
cmpsl
pop
fidivl
scas
lcall
pusha
inc
jp
push
pop
pop
mov
and
clc
cld
push
dec
and
lea
mov
das
push
repnz
loopne
enter
inc
adc
adc
call
lods
enter
mov
insl
test
push
mov
mov
mov
mov
jmp
cli
jmp
mov
pusha
lahf
xchg
jo
lock
mov
pop
adc
inc
xchg
lret
lahf
sub
add
mov
negl
imul
cs
sub
add
or
addr16
loop
enter
inc
mov
add
mov
mov
movsb
out
mov
rorb
sti
lods
test
mov
mov
mov
ficoml
mov
sbb
nop
or
aam
ljmp
sub
cmp
scas
inc
sub
imul
add
pcmpeqw
pop
fisttpl
mov
enter
add
jecxz
sub
mov
sbb
daa
call
cld
push
nop
pop
les
lods
cmpsl
subl
orb
decl
jl
clc
mov
dec
andl
stos
inc
test
sub
mov
mov
test
sub
loope
js
in
dec
je
notl
outsb
insb
or
dec
mov
dec
pusha
mov
xchg
pop
test
sub
popl
sub
push
mov
dec
test
sub
jo
inc
sub
inc
mov
sub
pushf
mov
test
sub
lods
fisubrs
test
test
dec
and
jge
out
int3
xchg
sbb
popf
test
out
fcoml
or
mov
test
iret
hlt
movsb
add
cld
sub
add
jno
fisubs
cmpb
js
push
arpl
les
jecxz
test
stos
dec
xlat
sub
movsl
inc
mov
loopne
or
xor
xor
or
push
dec
jno
mov
mov
and
fwait
sub
sbb
mov
inc
sbb
shll
push
or
cld
mov
sub
std
sub
or
sub
insb
daa
mov
sub
xor
mov
sub
push
sub
insb
pop
mov
sub
insl
sub
insb
jnp
fsubrl
mov
fsubrs
aam
outsb
movsl
sub
outsb
mov
ja
test
sub
adc
fstpl
mov
mov
sbb
sub
mov
pop
clc
jle
jne
testb
jg
inc
outsb
nop
push
xchg
es
push
dec
je
jo
insb
cmp
fisubs
stos
jo
dec
movsl
jo,pn
movsl
outsl
jo
push
movsl
nop
jo
or
sbb
mov
pop
sub
sub
pop
and
sub
pop
sbb
sub
pop
adc
adc
insb
or
dec
insb
add
insb
clc
mov
outsb
hlt
popl
pushf
outsb
call
mov
mov
leave
mov
sub
xlat
sub
insb
in
shrb
repz
insb
add
sub
insb
sbb
cmpsb
mov
mov
lahf
xchg
scas
popf
int3
orb
push
insl
lea
jge
test
lea
xchg
ja
xchg
movsl
and
lahf
mov
sub
ja
xchg
frstor
imul
call
clc
sbb
in
fisubrl
sbb
and
je
xor
enter
call
fmul
mov
mov
dec
mov
mov
test
cmpsb
imul
in
sub
jle
into
mov
pusha
xchg
xchg
cltd
sub
sub
data16
pop
dec
and
and
lahf
rcrl
ja
movsb
aam
icebp
sub
insb
test
sbb
or
sub
loopne
dec
or
mov
inc
sub
push
das
enter
dec
es
jae
push
and
nop
out
test
outsl
nop
pusha
jno
jp,pt
andl
jle
xchg
andb
add
mov
ljmp
mov
into
incl
leave
adc
clc
dec
jle
sahf
push
fsubl
fwait
loope
or
out
dec
icebp
add
addr16
test
test
or
imul
mov
dec
mov
mov
rclb
push
test
xchg
insb
test
sub
jne
jo
orb
clc
fdivs
sti
pusha
aad
mov
movsb
mov
movsl
mov
mov
lds
outsb
int3
shl
outsb
xchg
imul
movsl
icebp
sub
mov
jecxz
and
lock
test
adc
sbb
leave
adcl
add
push
sub
leave
jno
add
jnp
jo
jo
insl
outsl
loopne
inc
mov
stc
fadds
outsb
and
dec
incl
into
fcomps
test
jmp
mov
dec
or
cmp
adc
sbb
and
dec
mov
test
xchg
cmp
imul
pop
lret
popa
xor
xor
insb
mov
outsb
dec
mov
movsl
insl
movsl
mov
aaa
jp
jle
push
add
inc
pop
mov
jmp
push
mov
clc
loope
mov
mov
and
addr16
add
out
mov
dec
enter
test
mov
mov
xchg
pop
popa
call
jns
adcl
test
mov
pop
or
insl
leave
jo
sarl
cwtl
loope
test
jmp
cltd
mov
and
push
fsubrs
sbb
jle
insb
dec
out
xchg
into
mov
mov
lea
or
imul
mov
inc
xchg
sbb
pusha
js
push
test
and
test
test
test
lock
mov
mov
mov
jae
scas
shlb
inc
mov
and
pop
mov
xlat
outsb
push
inc
insb
push
outsb
daa
loopne
fwait
icebp
push
adc
stc
pushf
pusha
sub
int3
or
pop
adc
daa
xchg
pusha
test
insl
sub
pop
mov
call
mov
lcall
std
push
adc
mov
lods
pushf
nop
imul
mov
test
outsl
addr16
aam
outsb
dec
inc
sub
or
sbb
ds
fs
lock
add
or
sub
mov
mov
shrb
cmpsl
insb
out
movsb
fimuls
movsb
cld
inc
pop
and
pushf
repnz
cmp
adc
ja
mov
addr16
sbb
sbb
inc
cli
push
subl
cmp
test
mov
rclb
push
insb
fmuls
jle
jmp
pop
std
hlt
sub
mov
inc
insb
scas
lret
int3
lahf
and
lcall
imulb
pinsrw
add
or
pop
js
movsb
push
xchg
jae
mov
and
test
add
add
inc
pop
popl
scas
mov
mov
rorb
bound
xchg
mov
in
psubsw
fwait
subl
es
or
mulb
mov
popf
stos
paddb
pusha
mov
pop
pop
mov
mov
pop
bound
in
fisubrs
das
jl
pushf
sub
test
repnz
test
cmp
or
pusha
adc
bswap
jg
andb
adc
insb
test
call
inc
cmpsb
mov
es
cld
bound
sbb
test
pop
mov
inc
or
push
sbb
xchg
xchg
popl
jmp
cwtl
sub
test
add
sub
mov
xchg
enter
pusha
rcrb
jg
and
test
std
nop
nop
insl
lahf
sub
js
sbb
push
jge
push
test
je
insb
lds
lahf
jo
lahf
pop
sub
pushl
pusha
dec
popf
jb
sub
adc
dec
cmpsl
lds
dec
int
mov
mov
enter
pop
out
lret
pusha
cmc
mov
mov
inc
or
mov
lods
and
cmp
outsw
dec
dec
scas
pushf
lcall
mov
pusha
lock
es
mov
jl
xor
arpl
pop
sahf
dec
sbb
outsb
sahf
pop
testl
mov
push
cmp
cwtl
insb
xchg
test
insb
cmp
sub
stos
call
mov
mov
jb
in
nop
aad
aam
orb
cmpsb
ljmp
popf
and
or
enter
or
lea
xchg
pop
mov
outsb
lods
cmp
and
pop
pop
test
inc
adc
jno
sub
sub
cwtl
pop
mov
sub
lcall
dec
lahf
stos
push
je
sub
and
pop
jge
movlps
ljmp
sub
insl
aas
and
sub
mov
pushf
clc
insb
push
sub
ds
sbb
dec
int3
orl
cwtl
subb
or
into
loop
inc
mov
cmp
scas
mov
push
mov
lods
addb
jno
inc
imul
cs
cmpsl
icebp
push
xchg
inc
sub
test
cmp
filds
das
pop
mov
add
fwait
inc
dec
pop
loope
dec
call
mov
dec
lea
lret
call
mov
mov
into
lret
fs
sbb
adc
dec
push
pop
rorb
idivl
shl
das
push
or
cmpl
or
mov
dec
and
and
es
cmpsb
fwait
cltd
enter
fimull
and
pop
in
lcall
fiadds
jp,pt
iret
jo
and
jae
sbb
fisubrs
jmp
pushf
movb
lea
jae
jbe
cmp
pusha
xor
jmp
mov
pop
mov
pushf
pushl
push
pushl
ret
pop
iret
pushf
jmp
insl
fimull
test
mov
push
mov
or
mov
push
xor
fidivl
das
fsubrl
mov
pushf
mov
mov
iret
xchg
inc
jge
sub
outsl
fs
add
mov
mov
xchg
scas
popf
dec
inc
pop
mov
adc
into
fbld
lds
pop
dec
pop
aam
loopne
xlat
xor
out
jg
lahf
and
or
clc
push
mov
mov
mov
out
fmuls
xchg
mov
jmp
xor
sti
iret
adc
lret
ds
outsb
jno
data16
inc
inc
out
add
inc
scas
or
mov
sbb
sbb
fidivl
test
fs
fists
add
outsb
pop
ror
int
fisttpll
repz
add
inc
sub
inc
rorl
scas
rclb
or
mov
iret
fcomps
cltd
sti
jns
cs
inc
test
imul
insb
dec
adc
cmc
cmp
pusha
pusha
pushl
lea
jmp
dec
cld
std
out
cltd
enter
pop
rol
cmp
mov
adc
adc
add
jge
ja
test
aas
or
das
sbb
dec
cmp
popf
rcll
and
les
push
mov
xor
xchg
push
push
ror
push
outsb
aas
pop
loope
daa
cmp
lret
sti
and
mov
divb
daa
inc
sub
mov
dec
mov
inc
fisttps
sar
sbb
sbb
push
push
in
test
add
into
xchg
js
gs
inc
mov
xchg
xchg
push
or
xor
rcrb
dec
loopne
inc
imul
das
std
cmp
pmulhw
stos
and
dec
sbb
pop
inc
test
inc
lods
add
inc
std
push
jg
add
add
xchg
push
into
jmp
mov
testl
xlat
inc
repz
dec
clc
push
pop
ja
mov
and
push
call
je
and
movb
movl
push
pushf
mov
pushf
pushf
movb
pushl
ret
sbb
push
add
dec
ret
cltd
in
inc
out
xchg
adc
imul
add
addr16
lea
repz
xchg
fcoml
dec
and
imul
mov
js
popf
in
push
fcoms
iret
loop
and
pop
add
mov
movsb
cld
pop
xor
mov
adc
lock
setb
push
clc
push
cmp
lahf
sar
push
neg
shl
aad
and
push
btc
sbb
cmp
jmp
mov
jmp
movw
pushl
lea
je
movzbl
dec
add
btr
add
bt
rcl
mov
pusha
test
jmp
in
in
fidivrl
xchg
scas
or
jle
push
stos
add
test
mov
sub
inc
jg
ret
mov
aas
lods
mov
xlat
and
add
out
add
ljmp
je
xchg
nop
mov
pop
cmp
mov
mov
sarl
xor
jne
add
cmpsb
mov
mov
jns
push
add
test
add
sub
lds
add
mov
dec
jg
clc
ret
in
shll
push
ss
iret
mov
cli
jle
cli
gs
ljmp
sub
adc
sbb
xchg
cltd
mov
add
inc
pop
mov
data16
bound
jo
sbb
mov
jle
test
lods
adc
es
icebp
clc
push
lea
mov
jo
or
add
dec
gs
test
sbb
adc
jbe
nop
inc
jg
scas
dec
dec
pop
jo
add
insb
xor
xchg
bound
insb
push
dec
xlat
std
lock
movsbl
adc
fldcw
push
pop
movsl
mov
push
aam
xchg
movsl
mov
loop
adc
xchg
loopne
fcomps
cmpsb
mov
cmp
mov
cld
inc
ljmp
mov
sti
mul
jmp
jle
in
dec
add
jge
sub
lds
ds
mov
lods
js
adc
mov
stc
or
or
jp
or
push
call
xchg
push
push
call
or
mov
lea
ror
clc
mov
jmp
sbb
or
andl
cs
push
push
jb
lahf
mov
cmp
pop
stos
xor
mov
and
mov
jecxz
xchg
push
sbb
mov
mov
lret
in
mov
push
hlt
cmp
test
mov
cmp
mov
mov
lea
shrb
fwait
adc
mov
adc
cmp
test
imul
jg
sub
fcomps
sahf
dec
ja
hlt
add
cwtl
xor
inc
andb
mull
dec
or
fmull
jmp
lock
push
mov
push
or
mov
or
scas
mov
rorl
xchg
cli
in
test
push
jo
jb
cmp
xor
mov
push
ljmp
mov
inc
fstps
xchg
outsb
int3
jecxz
push
mov
jmp
pushf
lea
jne
test
pusha
bt
stc
cmpb
pusha
jmp
scas
repz
pushf
mov
test
mov
add
bt
cmc
movb
add
push
pusha
mov
lea
jmp
mov
and
mov
push
loope
inc
add
inc
or
loop
and
mov
push
popa
sub
or
xchg
inc
mov
push
xchg
jecxz
loop
xor
adc
jae
cmp
flds
outsb
jmp
and
add
sub
lea
mov
lcall
and
test
mov
je
gs
adc
push
stc
cli
in
add
jne
clc
sub
jmp
ret
movsb
popf
inc
add
and
push
or
fisttps
pop
aad
add
cmp
ds
loope
mov
shlb
popf
sub
cltd
out
add
jecxz
push
xchg
xchg
idivb
dec
inc
mov
in
pop
loopne
scas
hlt
ret
out
inc
jne
out
jne
mov
xchg
cltd
into
push
cmp
nop
loope
jb
or
add
out
push
call
sub
xor
jmp
mov
mov
pushl
setne
not
cwtl
seta
lea
pushf
movl
pushf
jmp
in
lock
cmp
test
mov
bound
out
insl
xchg
xchg
cli
cmp
mov
imul
shll
mov
push
pop
push
pop
and
add
icebp
jge
and
inc
in
pushl
ja
out
add
ret
pop
dec
daa
test
lds
and
cmp
and
push
call
cmp
mov
push
call
jl
pusha
mov
pusha
mov
push
movw
pushf
lea
jmp
inc
lea
not
not
call
push
subb
sbb
mov
pop
and
stos
jmp
mov
mov
insb
mov
loop
push
add
pop
movsl
ja
cli
inc
xchg
inc
or
fwait
mov
pop
stos
call
shlb
stos
popl
dec
bound
add
dec
dec
dec
push
stos
lea
jne
call
testl
push
je
sub
adc
imul
inc
fistps
outsl
inc
dec
cli
and
daa
test
adc
xor
xchg
push
call
xchg
xchg
mov
push
add
xchg
jp
fbstp
dec
push
cmc
pop
and
fcompl
fcmovnb
or
inc
pop
or
jns
test
cmp
incb
pop
rcll
mov
lret
loop
xchg
jp
test
test
mov
xchg
push
push
push
movsb
cmp
pop
andb
cmp
pop
clc
jp
add
jnp
inc
mov
and
jle
les
and
lock
xor
aad
aaa
mov
jecxz
shrb
test
call
jge
call
push
call
cmp
in
mov
add
mov
dec
or
ljmp
mov
or
xchg
inc
fisttps
add
enter
mov
addr16
dec
mov
sub
repnz
mov
sub
fstpl
sahf
cmp
cmc
lcall
xchg
adc
push
push
mov
fstps
mov
pop
mov
hlt
sub
dec
data16
sbb
dec
pop
int3
xor
repz
mov
clc
inc
iret
hlt
std
bnd
movsb
xchg
push
dec
xlat
mov
dec
push
jo
xor
or
jecxz
lahf
dec
test
or
into
fistps
rcl
xorl
jl
xchg
adc
insl
jno
mov
into
loopne
mov
icebp
out
out
sbb
push
cli
jae
ret
jno
popa
push
and
or
stos
push
xchg
cltd
add
inc
gs
outsl
fs
gs
imul
add
lret
or
add
adc
add
cmp
push
mov
pop
lret
push
cmp
hlt
and
lahf
into
dec
adc
and
xorl
mov
fsubrl
fmull
test
cmp
lahf
stos
push
stc
xchg
pop
inc
mov
lds
sarl
push
jb
cmp
cmp
pop
pop
shrb
and
shlb
rcll
push
addb
ret
repz
je
pusha
test
mov
lea
je
pusha
pusha
test
and
movl
mov
push
pushf
lea
jmp
push
call
xor
jns
in
push
add
mov
pusha
push
lea
je
movsbw
bt
dec
add
rcr
mov
ror
btr
shld
shl
mov
cmp
movsbw
rcl
btr
mov
test
clc
test
pushf
movb
push
lea
je
shld
add
ror
or
add
bswap
mov
push
movl
clc
test
test
pushl
pusha
lea
je
clc
jmp
push
call
mov
and
xor
add
mov
mov
cmc
jb
mov
testb
mov
cmp
sahf
add
popa
cmp
out
add
jl
dec
loop
fdivrs
into
mov
sahf
nop
xchg
out
rorl
aam
lods
mov
in
mov
cwtl
shrl
insb
ret
xchg
loop
add
sbb
jb
mov
outsb
pushf
out
int3
push
out
rolb
lret
sbb
iret
ficompl
fistps
fsubrl
mov
test
in
jno
adc
and
imul
mov
fimuls
pop
and
push
lods
mov
fldt
cmp
jl
mov
and
jae
movsb
xor
rcl
gs
push
sbb
outsl
stos
or
cmp
add
shl
dec
pusha
lea
jns
call
pusha
movb
movb
adc
pushl
jmp
cmp
pushf
mov
lea
ja
not
inc
dec
inc
pushf
pushl
inc
sar
jmp
push
call
mov
arpl
jb
popa
das
aad
inc
test
adc
mov
cmp
orl
bound
fsts
sbb
clc
les
cltd
lret
ret
push
push
dec
cmp
xchg
in
scas
adc
and
fildl
stos
jmp
in
xorb
sub
or
push
addb
add
je
rep
inc
or
inc
push
adc
pusha
lea
jae
call
repnz
add
xlat
inc
call
nop
gs
cs
jb
add
lahf
repnz
mov
aam
pop
jbe
ljmp
or
movsl
enter
ds
rcrl
jp
in
iret
xor
decb
pusha
bound
sub
push
shr
mov
pop
pushl
popl
movsbw
pusha
pushf
sets
lea
movl
movl
jmp
hlt
in
add
lds
js
adc
pop
les
mov
mov
mov
rcrb
int
jo
repz
scas
fnsave
loope,pt
cmpsl
add
sbb
test
mov
pop
jbe
sbb
and
popa
popa
add
negb
mov
lcall
inc
in
test
and
push
xchg
iret
push
loopne
sub
orl
or
mov
test
cwtl
sub
cmp
scas
scas
int
mov
add
push
jnp
data16
push
sub
jno
out
push
dec
ljmp
jne
jae
jge
add
push
cmp
shll
shll
movsb
nop
push
and
pop
in
jbe
push
cmpsl
xchg
jbe
loope
dec
jae
dec
fs
fdivs
jecxz
int
or
xchg
sbb
sbb
fisubrs
aas
pop
mov
stos
jb
cltd
jmp
adc
bound
xor
test
and
aas
jecxz
xor
pop
nop
xchg
add
push
imul
sub
pop
push
popa
mov
push
xlat
rolb
jp
das
mov
test
xor
gs
pop
outsb
loop
outsl
mov
in
movsb
add
mov
mov
pusha
enter
ljmp
fisttps
test
out
fmulp
add
add
pop
sub
hlt
in
cmp
nop
lcall
mov
addr16
add
mov
cli
rclb
mov
xchg
scas
shrb
pop
jbe
pop
cs
test
xchg
push
or
ss
or
mov
out
jno
outsl
movsl
cmp
xchg
imul
and
inc
push
push
shld
xchg
ror
sub
shld
bswap
mov
bswap
lea
rcl
shrd
mov
test
cmpsb
call
push
call
push
arpl
pusha
lea
je
cmp
cmp
jmp
popa
pop
aam
fcoms
jnp
or
aam
and
dec
rolb
fmull
jg
and
inc
or
push
sbb
fistps
jecxz
or
mov
inc
sbb
adc
fcompl
mov
test
push
dec
test
push
lods
into
mov
pop
pusha
loopne
cli
insl
out
pop
repnz
repz
test
and
xchg
jb
mov
xchg
mov
outsl
add
pop
xchg
addr16
call
xchg
push
call
cmp
addr16
aaa
dec
jge
push
or
call
sbb
jg
ljmp
cmpsl
mov
movsb
fildl
test
add
jl
cmp
iret
mov
adc
cmpl
pushl
popl
jmp
push
call
std
push
and
and
lea
je
xor
ror
shr
mov
sar
test
add
sub
bts
mov
bt
test
jmp
jge
mov
sarb
mov
or
cmpb
movsb
fdivr
add
in
ds
jle
hlt
sub
sub
aad
sub
push
push
cli
pop
mov
mov
jle
xchg
sbb
pop
jle
sub
push
int
aad
cbtw
popf
popa
mov
xor
cmp
fdivs
es
or
int3
outsl
pushf
add
pushf
pushf
lea
jmp
push
call
stos
addb
je
pushf
pushl
jmp
popa
inc
jl
movsb
inc
push
pop
movsb
xor
ds
lock
dec
dec
test
push
jl
xor
cwtl
insl
xor
dec
mov
pop
cld
ret
pop
hlt
xorb
pop
pushf
xor
fistpl
pop
imul
cs
fidivs
adc
in
in
pop
xchg
sub
mov
pop
sbbb
jns
or
mov
mulb
dec
hlt
adc
mov
sbb
pop
jae
xor
repz
and
repz
mov
inc
mov
fnsave
sbb
and
loop
scas
pop
iret
add
cmpsl
test
xchg
mov
adc
adc
pop
hlt
leave
mov
mov
pop
mov
cmp
xchg
pop
sbb
bound
shll
rorl
lea
test
mov
scas
lret
push
hlt
adc
rorb
or
adc
hlt
dec
sub
lea
ja
je
mov
bswap
bt
add
setge
shld
shl
not
mov
test
stc
pusha
push
add
pusha
mov
mov
adc
bswap
shl
btr
mov
bt
cmp
push
jmp
sub
lea
jns
call
test
cmp
call
push
call
fidivs
push
or
mov
pop
aaa
sbb
inc
xchg
jg
sti
rcr
add
cld
push
fdecstp
jmp
xchg
stc
rcr
mov
adc
mov
fwait
ret
je
and
xor
inc
mull
pop
or
xchg
das
add
ret
aad
mov
rcr
jmp
jmp
in
std
jge
pop
cli
imul
xchg
push
jge
mov
adc
jmp
push
call
or
xchg
push
maxps
push
stc
fwait
jbe
cmp
repnz
adc
incl
shlb
imul
jg
fisubl
inc
jns
jb
lods
lds
xchg
sub
test
or
bound
test
les
loopne
subl
loopne
call
or
inc
shll
push
mov
pop
aam
jg
push
adc
ja
hlt
jo
push
ss
and
push
lret
push
and
cmp
pop
pop
push
pop
mov
js
popf
xchg
call
add
mov
cltd
aaa
and
cwtl
mov
pop
push
cmpsl
std
xchg
pop
jp
or
xchg
mov
rcrb
push
arpl
pop
adc
nop
dec
push
sbb
mov
fists
fxam
sub
mov
xchg
aad
jmp
rol
ss
cmpsb
jne
inc
notl
xchg
xchg
int
inc
mov
jns
inc
sub
cmp
fstpt
dec
lahf
lret
pop
xchg
xor
movl
stc
not
call
out
std
and
mov
subb
fsubr
ret
scas
xor
leave
xchg
mov
je
dec
cwtl
jno
pop
cmc
fbld
mov
sarb
mov
scas
or
in
pop
push
data16
cld
ja
or
sbb
sbb
sbb
push
adc
lcall
out
mul
test
into
mov
inc
mov
mov
neg
call
push
call
cmp
jmp
gs
fwait
push
adc
sbb
in
cli
adc
push
and
sbbb
lods
jp
dec
xor
xor
xchg
xchg
ss
ds
push
outsb
xchg
hlt
inc
sahf
test
pop
dec
mov
stos
lods
push
pop
lods
ret
dec
mov
pop
sbb
clc
mov
rcrb
nop
pop
dec
inc
sbb
sti
jl
push
sti
inc
movsl
xlat
or
mov
xchg
in
outsl
adcl
dec
scas
sbb
cmpsb
adc
movsb
std
mov
or
jae
fnstcw
js
into
and
cmp
sbbb
mov
aaa
xor
imul
imull
mov
repz
sbb
std
push
cltd
push
lcall
jge
rorb
push
shlb
mov
jle
ret
int3
js
fs
push
rorb
fisubrl
rcrb
sbb
movsl
mov
or
or
std
push
jg
inc
sti
xor
in
and
fistl
out
call
hlt
sbb
test
dec
ret
push
mov
mov
jl
cmp
pop
scas
icebp
cmp
mov
mov
fwait
int
or
and
inc
inc
jb
xor
pop
hlt
sub
jns
dec
imul
jae
fisubs
es
xchg
sbb
sbb
fisubl
movsb
xchg
rclb
inc
inc
push
inc
push
dec
xor
cs
insb
add
imul
call
sti
lcall
rcr
mov
mov
cmc
pop
push
push
pop
and
pop
jecxz
mov
cmp
cld
mov
mov
data16
loopne
and
shrb
xchg
loopne
pop
and
mov
pop
fidivrs
stc
popf
mov
lcall
stos
xchg
clc
xchg
jg
xor
and
clc
xchg
leave
jge
jl
pop
sbb
stos
sarb
frstor
mov
in
adc
xchg
or
push
enter
daa
int
fwait
test
dec
fcomps
mov
inc
mov
cmp
push
push
mov
or
push
push
sub
mov
cmp
lret
movsb
out
je
testl
dec
and
mov
cmp
fwait
icebp
popf
outsb
dec
mov
add
fists
mov
insb
push
fs
icebp
adc
jmp
jae
jb
das
fwait
outsl
mov
in
sbb
and
bts
dec
adc
jae
jge
scas
sbb
mov
fstpt
sti
addr16
out
pop
dec
pushf
les
add
lahf
pop
add
ret
fldl
pop
inc
dec
cwtl
call
push
adc
insl
jne
pop
xchg
xlat
mov
outsb
jge
mov
lds
ret
lahf
outsl
lock
xlat
mov
xlat
push
mov
jge
pop
cmpsb
and
or
push
cmpsb
cmpsb
daa
stos
pop
pop
mov
mov
inc
inc
fisttpl
mov
cmp
dec
add
and
test
jmp
stc
int3
pushf
movb
jo
cli
xchg
xchg
test
mov
test
shll
icebp
aam
notl
fnsave
dec
dec
lock
lock
add
cld
mov
mov
mov
mov
sbb
mov
outsl
push
push
xorl
incl
clc
mov
dec
push
aad
dec
lcall
in
dec
and
add
pop
stc
arpl
push
fsubrs
je
leave
call
mov
pusha
jno
pop
jp
orl
test
sub
stc
pop
std
out
cmp
xor
test
xor
loope
daa
movsl
jns
out
xchg
xchg
sbb
sub
xchg
cmp
jne
hlt
loop
sub
or
cs
int3
pop
add
out
and
lds
aas
xchg
cmp
pop
out
push
pop
mov
pop
jmp
xchg
xchg
mov
jge
or
lret
jg
sti
jb
adc
dec
mov
mov
gs
or
das
iret
std
sub
xchg
sub
test
jmp
arpl
fs
xor
cs
insb
add
aad
ljmp
mov
mov
add
out
and
movsl
mov
je
inc
push
fsqrt
cmp
scas
fcompl
mov
dec
enter
sub
repz
push
or
adc
jo
inc
cli
pop
scas
pop
cwtl
gs
jno
icebp
or
daa
das
cmp
pushl
setno
insb
rorb
cmpsl
push
fmuls
push
call
outsl
aaa
out
outsl
mov
mov
add
jo
insl
gs
aas
mov
test
cld
jnp
jl
sub
xchg
mov
mov
inc
je
lea
push
out
mov
jecxz
lcall
mov
es
out
fidivl
and
cld
in
push
fidivrl
and
pop
not
inc
test
cmp
popl
test
and
jo
inc
sbb
push
cs
cmp
push
call
test
lods
add
sub
popa
mov
pop
jmp
mov
jo
mov
dec
sub
pop
out
call
cmpsl
jbe
xor
xor
inc
jo
add
xchg
inc
daa
add
cmp
and
xchg
fiadds
test
push
stos
int
sbb
cmpsl
jns
lods
cmp
sub
sbb
mov
jo
out
xor
subb
adc
mov
out
into
or
jg
aas
pushf
pop
cmpsl
lods
ljmp
test
mov
cwtl
scas
jg
je
inc
dec
cmp
dec
dec
jae
cwtl
xor
mov
dec
pusha
jbe
dec
mov
aad
cwtl
adc
xorb
lock
dec
inc
cmp
and
mov
push
xchg
ss
addl
push
jo
xchg
pop
mov
inc
cmp
inc
aas
or
je
inc
lret
xchg
cmp
movsb
addr16
pop
loope
dec
inc
gs
outsl
data16
ds
pusha
inc
mov
jl
jle
mov
movl
xchg
push
outsb
sub
andb
jge
aam
mov
inc
mov
inc
dec
dec
inc
aas
pusha
dec
sub
inc
push
dec
inc
mov
loop
inc
cmp
xchg
push
call
inc
inc
inc
in
cmp
test
mov
cmp
inc
mov
cmc
mov
imul
test
dec
mov
xchg
aas
ds
push
push
add
cmp
and
cmp
mov
cmp
movb
aad
inc
xchg
inc
cmp
dec
jb
pop
pop
push
inc
cmp
frstor
icebp
dec
jb
cmp
inc
cmp
aaa
aas
dec
sbb
test
xchg
cmovnp
push
sub
dec
lds
dec
jns
cmpb
inc
and
dec
pushf
or
aaa
pusha
xor
ss
popl
mov
dec
pop
imul
lret
inc
mov
mov
jnp
push
inc
dec
cmp
pop
inc
stc
scas
sbb
jge
insl
mov
dec
dec
inc
jbe
ds
outsl
inc
push
stos
cmp
ds
les
pushf
push
cmp
mov
xchg
dec
in
incb
xlat
dec
movl
std
dec
inc
orb
jnp
or
bound
cmp
inc
push
mov
fadds
pop
aas
inc
je
dec
mov
inc
jae
cmp
gs
xchg
mov
in
dec
pushf
dec
or
jns
lret
inc
xchg
xchg
dec
cmp
test
sbb
dec
insb
xchg
xchg
jmp
cmpb
mov
adc
and
dec
loopne
pusha
mov
dec
cmpsl
xchg
jno
inc
xlat
jae
mov
test
mov
mov
popf
mov
dec
and
pushf
jns
jne
xchg
push
adc
in
popa
pop
pop
cmpsl
mov
xchg
movsb
sub
adc
jg
or
cmp
pop
dec
and
inc
mov
dec
push
mov
lock
jb
leave
movsb
popf
mov
dec
cltd
and
ss
daa
mov
insb
and
cs
jb
dec
fwait
cmp
jg
subb
sub
mov
or
dec
pop
out
in
jle
xchg
cmp
imul
dec
inc
dec
test
orl
pop
not
mov
dec
subl
ljmp
mov
cmp
cmpb
das
mov
ficomps
pop
ss
push
cli
cmpsl
addl
outsb
test
andb
insl
decl
inc
jle
mov
xor
xchg
pop
push
pop
dec
jnp
jecxz
pop
xchg
mov
call
ds
mov
sbb
add
cwtl
xor
cmp
or
insl
inc
out
stos
test
jbe
jbe
inc
stc
pop
nop
add
mov
in
cmpb
xchg
ret
aaa
pushf
mov
cmpsl
dec
daa
cld
mov
outsl
sti
jle
out
push
test
and
sub
movsl
push
bound
insl
dec
popa
mov
xor
mov
mov
jge
jnp
jns
js
outsl
outsb
insl
insb
imul
jecxz
add
and
daa
mov
jge
dec
repz
sbb
and
jl
dec
inc
jns
mov
xchg
enter
bound
inc
inc
pusha
inc
cwtl
push
or
aas
imul
pop
fsubl
jge
scas
jnp
mov
mov
inc
cwtl
inc
rcrb
jl
push
mov
lock
outsb
cs
int
sbb
or
dec
add
sub
cmp
out
or
pop
ds
sahf
mov
inc
xor
cmp
aam
jno
dec
lods
or
movsb
dec
js
push
ss
push
pop
nop
cmp
sbb
inc
lret
adc
jp
xchg
dec
inc
stos
aaa
popf
movsb
fwait
or
inc
inc
push
cmp
cld
in
repz
test
dec
dec
and
ja
test
xor
fsubs
dec
cmp
inc
dec
push
fldl
outsl
jl
stos
movsb
pop
addr16
inc
jo
popf
cmp
mov
ds
shrb
mov
daa
ds
push
movsl
inc
pushf
and
push
shrb
insb
dec
es
cmpsl
sahf
push
popa
cwtl
mov
jle
sbb
mov
pushf
mov
and
ja
ret
xchg
inc
mov
loopne
adc
cmp
cld
xor
dec
negl
sti
outsb
sbbb
cmp
xchg
dec
cmp
dec
cmp
fsubl
push
mov
dec
sub
inc
cltd
adc
cwtl
outsb
cmp
scas
sub
test
jno
bound
ds
dec
inc
popa
sahf
dec
inc
dec
mov
int
pop
push
fisubs
in
sub
test
nop
pop
pop
insl
ja
cwtl
mov
inc
add
and
inc
cmp
pop
jae
dec
test
sti
ljmp
add
add
insl
pop
pushf
fs
dec
jne
cmp
lret
insl
mov
scas
out
sbb
es
addr16
push
push
sub
and
movsl
lock
outsb
in
dec
mov
and
dec
push
scas
mull
cmp
outsl
cld
dec
push
shrl
in
pop
dec
in
inc
jae
xchg
jo
pop
fwait
add
inc
inc
push
add
mov
inc
or
pushf
js
inc
cmp
cmp
sub
dec
subb
pshufw
movsb
dec
cli
pop
sub
inc
mov
pusha
out
fwait
push
or
fcompl
push
pop
aaa
inc
dec
std
dec
addr16
dec
and
inc
xor
sbb
add
cmp
arpl
pusha
sub
movsl
inc
ret
push
dec
cmpsb
mov
call
test
imulb
out
das
mov
aaa
push
nop
sbb
and
mov
inc
dec
lea
jno
mov
dec
sbbl
cmp
xchg
dec
ror
pop
insl
les
sbb
sti
push
pusha
sbb
and
xchg
scas
arpl
pop
imul
push
dec
stc
mov
pop
imul
dec
pop
or
sahf
popa
xor
mov
mov
aaa
xchg
mov
insl
pop
cs
inc
cmp
adc
out
or
xor
push
adc
and
jb
insl
xchg
inc
sbb
aad
and
mov
nop
or
cwtl
aaa
xchg
xchg
pop
test
push
into
aas
movsl
cli
adc
iret
data16
xchg
mov
cmp
nop
out
hlt
cwtl
cmpsl
nop
stos
sbb
dec
cmp
cmpsl
push
inc
pop
sbb
pop
xor
sbb
push
nop
jbe
dec
scas
ss
xor
scas
pop
lods
lods
fs
daa
cwtl
sahf
stos
mov
or
movsb
cmpsl
test
test
xchg
cmpsb
or
dec
test
mov
dec
lahf
data16
lods
dec
cwtl
lahf
out
mov
ja
fs
or
pop
push
sbb
xor
inc
cwtl
dec
inc
push
xchg
pop
ds
stos
sbbb
cld
out
test
jle,pn
sub
pop
daa
xchg
push
and
inc
imul
loop
call
movsb
mov
lahf
mov
cs
addr16
js
or
sub
add
test
das
adc
mov
mov
or
ja
pop
in
scas
sub
mov
dec
jo
test
sbb
loope
int3
out
out
lret
xlat
enter
loopne
xchg
cmpsb
jg
stos
cmpsl
push
in
lock
je
jle
fstp
mov
jg
jbe
popf
sbb
or
mov
mov
cmp
inc
push
push
insb
pop
pusha
daa
insb
sahf
js
subb
nop
mov
sahf
movsb
mov
mov
mov
mov
push
sub
lahf
lock
clc
daa
add
or
sbb
pop
sub
daa
push
lahf
jno
out
lods
xchg
gs
xchg
mov
es
out
movsb
insl
pop
lret
push
scas
into
sub
nop
pop
adc
mov
sbb
lods
pop
mov
cmpsb
mov
and
xchg
mov
and
scas
outsb
scas
mov
je
lock
adcb
sahf
and
lock
movsl
movsb
mov
int3
and
int3
and
and
mov
call
push
adc
popa
jnp
mov
enter
xor
hlt
lahf
cmpsl
daa
and
mov
lahf
lahf
mov
sahf
mov
mov
mov
insb
xchg
push
daa
xchg
sahf
mov
xchg
pop
call
aaa
daa
or
mov
xor
lahf
mov
jmp
loopne
mov
shlb
scas
push
push
push
data16
xchg
rcrb
imul
movsb
ficomps
lods
hlt
xor
dec
fildll
in
pusha
pop
pop
pop
sub
pusha
pop
insb
jo
jl
testb
ficoms
mov
jne
push
pop
cmpsl
cmp
daa
mov
andb
jl
sahf
push
mov
push
daa
sbbl
aam
enter
xor
pop
outsb
test
scas
ficoms
sbb
scas
push
fs
xchg
loopne
add
sbbb
call
mov
push
daa
xchg
sahf
pop
mov
mov
je
mov
push
mov
daa
xchg
sahf
cwtl
mov
mov
movsl
cltd
test
fwait
popf
mov
rcrb
add
loope
popf
or
daa
loopne
cltd
mov
push
lea
daa
hlt
mov
xadd
push
fiaddl
xchg
shlb
mov
jg
mov
jnp
lahf
movsl
mov
lods
or
dec
das
or
addr16
fcoms
push
xchg
jns
xorb
lock
and
enter
xor
adc
adc
stos
mov
push
adc
lcall
mov
sbb
lcall
lock
icebp
out
and
ret
in
fsubr
frstor
nop
mov
adc
inc
test
add
jb
inc
mov
push
mov
lret
xchg
and
xor
sbb
sbb
mov
adc
mov
adc
and
test
loope
mov
xchg
cmp
rolb
shlb
xor
imul
hlt
sub
mov
and
rcl
and
mov
adc
insl
mov
lret
in
xchg
mov
mov
int
jmp
mov
lds
fdivrl
mov
sbb
imul
pop
mov
or
adc
mov
das
sub
mov
outsb
int3
or
clc
inc
pop
repnz
adc
and
mov
or
seto
pop
or
and
push
mov
mov
dec
push
sbb
push
call
fs
adc
pop
push
in
xchg
in
test
mov
jno
jae
rclb
jne
shll
sbb
sub
fldl
stc
jb
mov
sub
xchg
call
ret
or
inc
inc
add
lds
jge
hlt
outsb
lods
lret
fistpl
fcmove
iret
out
mov
loop
lods
sub
cmp
add
push
mov
arpl
repnz
lret
push
rcrb
cmp
int
add
rorb
scas
sbb
imul
jmp
rcl
mov
sub
ss
jo
push
out
xor
cmc
push
rcr
ret
and
mov
shrl
or
ja
mov
xor
xor
mov
add
int3
hlt
dec
xor
mov
rcrl
dec
xor
pop
cmp
lret
jbe
ss
mov
lock
je
daa
fistpll
imul
jne
sub
scas
xchg
dec
int
or
imul
pop
cmp
scas
xorb
xchg
fimuls
and
or
repnz
mov
sti
jle
dec
mov
lahf
or
insb
push
stc
mov
test
jl
popa
pop
add
inc
add
push
lods
or
lock
xor
adc
sub
pop
je
mov
sub
dec
dec
cmp
sbb
lahf
mov
rclb
loop
call
fsubs
inc
mov
cs
fcoms
sub
push
inc
divl
push
das
dec
stc
jae
fisttpl
or
pushf
adc
ret
pop
mov
dec
in
clc
inc
push
push
pusha
jmp
std
dec
xchg
xor
jo
mov
dec
jp
bound
movsl
lds
xor
mov
cli
inc
dec
mov
enter
loop
lahf
imul
pushf
jl
adcl
xchg
out
sub
and
xor
scas
divl
ljmp
es
lahf
ret
mov
int
enter
adc
rcr
dec
nop
addr16
mov
dec
pop
pop
sub
leave
ss
pop
movsb
dec
jl
mov
outsb
movsb
xor
dec
pop
cmp
xchg
xchg
adc
call
imul
int
mov
mov
scas
xor
jne
movb
and
mov
pusha
movb
jmp
push
call
mov
test
or
cwtl
inc
jmp
push
insl
ja
xchg
out
add
ja
push
pushf
out
jecxz,pt
ja
sub
roll
int
adc
xchg
icebp
mov
mov
pop
stos
in
outsb
je
mov
xchg
cmpsb
adc
mov
adc
repz
cmp
jle
xor
sarb
push
stos
sbbb
add
jge
lcall
je
sbb
sbb
ja
jno
jmp
je
sub
je
add
pushf
lea
jmp
jp
mov
pop
mov
out
shll
xchg
in
mov
and
ljmp
scas
pop
pop
jmp
xchg
sub
filds
jno
fistpl
lds
add
jb
or
movsl
mov
inc
rol
cmp
mov
push
rcr
es
xchg
lahf
mov
sbb
mov
jle
movsl
shl
cmp
mov
cmp
scas
insb
mov
lret
lcall
insl
movsl
inc
mov
aam
adcl
sub
mov
xor
in
mov
imul
into
push
movsl
xchg
aad
jae
aaa
xor
or
insl
jecxz
add
mov
fsubr
inc
cmpxchg
push
jnp
or
push
add
or
ret
pop
add
jno
int
imul
and
xchg
loopne
jo
cmpsb
mov
pusha
mov
pop
insb
or
popa
jae
fisttps
mov
mov
mov
mov
pop
jae
std
jb
pop
mov
scas
push
out
push
imul
sbb
into
nop
and
bound
pop
scas
rolb
shl
mov
loop
inc
mov
jp
enter
xor
sbbb
cld
inc
or
dec
psubusw
inc
enter
fs
rcrl
add
loop
pop
sbbb
sub
xchg
push
pop
dec
int3
xor
pop
push
cmc
std
sbb
xor
data16
scas
and
outsb
mov
xchg
mov
stos
cmp
bound
add
pop
stos
or
dec
stos
jbe
mov
pop
sahf
lea
sub
mov
mov
daa
mov
xchg
push
outsl
insb
xor
cs
insb
add
mov
test
cmp
jp,pn
add
lods
cmp
pushl
mov
jo
inc
jno
daa
xor
mov
xor
in
rolb
dec
xchg
out
jge
sub
fbstp
inc
dec
mov
dec
ds
sbb
and
cmpsl
cmpb
lock
stos
adc
or
into
test
lods
je
insb
insb
arpl
stc
push
mov
cmpsb
add
dec
sahf
dec
testb
mov
xor
roll
and
int
mov
xchg
not
mov
sub
movb
call
lea
mov
call
pushf
lea
jbe
shl
mov
sar
add
test
shld
shld
mov
cmc
bt
call
push
call
or
mov
push
andb
scas
je
push
loop
out
sub
clc
out
scas
xchg
lret
out
push
jg
push
je
mov
push
mov
xlat
mov
mov
stos
test
jle
jne
mov
jno
inc
out
mov
gs
sbb
pop
xchg
sbb
or
jmp
push
dec
push
call
mov
imul
addl
movsl
lods
gs
aam
lock
stos
aaa
add
cmp
xlat
adc
jle
dec
js
dec
outsl
adc
inc
mov
push
scas
mov
mov
sbb
cmpsb
mull
dec
jne
int3
sub
push
imul
cmc
mov
jmp
sbb
inc
xchg
sub
insl
stc
cmpsb
or
cmp
pop
cmp
xor
adc
cmp
lahf
fcompl
bound
es
out
sahf
sarl
sti
cld
lcall
lea
mov
leave
sub
imull
loop
mov
sti
mov
cli
and
addl
ret
cmpsl
repz
push
shlb
inc
mov
adc
xchg
dec
mov
sub
pop
int
test
mov
fisttpl
sbb
int
stc
cwtl
dec
xchg
in
enter
outsl
call
mov
jmp
push
insb
sbb
out
inc
scas
mov
fs
outsl
dec
stc
out
push
pop
push
mov
jmp
cmp
mov
sub
push
rorl
lods
int3
filds
mov
dec
test
sbb
push
mov
xchg
pop
movsb
and
popf
dec
mov
or
inc
mov
adc
leave
ret
test
mov
movsl
gs
jg
rclb
stos
rcrb
ja
sub
pop
int3
mov
and
popf
mov
ja
xchg
insl
xor
mov
aaa
or
jle
jae
and
mov
pusha
pushf
lea
jmp
test
stc
mov
ljmp
popa
orl
xchg
or
in
ret
pop
pusha
ljmp
adc
xchg
jg
push
addr16
fprem1
sub
push
pop
rcrl
das
fdivr
es
sub
lds
sub
push
pop
push
xchg
or
xor
iret
int3
mov
clc
cmpl
loope
push
out
aaa
sbb
jno
clc
mov
pop
in
fisttpll
xchg
dec
xchg
lock
lock
aad
icebp
xor
andb
pop
rol
adc
mov
push
jb
movsl
sub
sub
test
scas
push
test
dec
push
inc
loopne
faddl
and
ja
mov
lahf
in
flds
insb
and
aam
mov
iret
hlt
andb
adc
jne
push
ds
xchg
mov
push
test
gs
int
in
add
das
dec
mov
out
mov
and
sbb
cmp
lock
cmpsl
jle
pop
imul
xchg
ficoml
into
fisttps
outsb
daa
mov
sbb
adc
cld
sbb
dec
pushf
dec
in
cmp
cwtl
cs
jg
orl
scas
and
int
mov
ds
and
filds
pop
sub
mov
push
xchg
mov
dec
jns
mov
aas
into
pop
repnz
iret
inc
fisttpl
and
dec
roll
push
or
jecxz
sub
out
mov
test
xchg
rolb
xchg
mov
xor
mov
mov
sub
xchg
pop
mov
int
mov
mov
sub
stc
sub
lods
jb
adc
sbb
adc
xor
js
loope
mov
outsl
stos
push
in
push
lea
add
xchg
mov
enter
push
dec
mov
sarl
repnz
cmp
les
std
in
aad
stos
pop
add
fadd
imul
divl
stos
int
pushf
je
xchg
sbb
sub
fwait
add
gs
andl
pop
pop
sbb
mov
xor
mov
out
repz
fdivp
inc
movsl
pop
cwtl
mov
adc
jmp
lock
mov
jnp
popf
loop
repnz
sub
lahf
call
xchg
lret
mov
bound
aad
push
imul
sbb
mov
insl
mov
popa
xchg
cmpsl
jbe
dec
dec
rclb
lcall
out
push
shll
cld
unpcklps
sub
hlt
jp
or
and
lret
movsb
cmp
and
ret
testb
jne
xchg
lcall
ret
adc
lds
sbb
addb
mov
xlat
or
push
call
jno
pusha
pusha
lea
je
pushf
bsf
clc
mov
jmp
dec
mov
out
jns
orb
or
jb
aam
sti
lea
pop
push
or
sbb
les
stos
shll
pop
pop
sbb
push
rorl
fildll
das
insl
add
cmc
or
xchg
sub
push
fiadds
out
and
pop
mov
cmp
cmp
adc
lock
dec
xor
cmpsl
int
xor
adc
cmpps
enter
int3
pushf
sub
push
jle
adc
popf
pop
imul
leave
and
mov
scas
dec
dec
sbb
jecxz
je
jecxz
mov
sarl
std
xor
mov
fdivrs
jl
in
or
das
je
xchg
in
sahf
pushf
sub
iret
inc
lcall
sub
jle
pop
mov
insl
lahf
sub
cli
inc
adc
out
clc
gs
xchg
sar
push
push
cs
sbb
stc
cmpsl
mov
sar
dec
rcrl
xchg
push
fwait
cs
pop
dec
jno
or
jmp
leave
inc
mov
push
and
notb
fwait
pop
fsub
sub
xor
popf
pop
pop
pop
jbe
shl
fs
lock
jg
mov
mov
lods
add
push
fisubs
aad
add
and
pop
and
fbld
cmc
mov
je
mov
jle
adc
lahf
jge
movb
int3
lret
leave
jbe
shlb
mov
ja
and
lods
mov
ljmp
lds
stos
add
mov
cmp
sbb
loopne
inc
in
sbb
imul
jno
aaa
push
fildl
adc
push
call
xchg
and
lahf
mov
add
aaa
popl
jmp
fsubrp
pop
sub
xchg
call
ss
scas
push
mov
mov
push
rolb
popl
jno
int
fimuls
cld
sahf
mov
enter
add
movsl
jge
jg
mov
mov
ja
push
xchg
cmp
or
mov
jbe
ficompl
ljmp
in
icebp
mov
push
call
ret
push
push
add
inc
xor
or
mov
cmc
fwait
push
ret
ljmp
mov
push
fcomp
in
mov
and
filds
mov
or
dec
xor
xchg
dec
mov
ds
mov
outsl
fstps
xchg
sub
insl
jmp
dec
push
pop
lds
mov
cld
push
mov
or
add
imul
mov
cs
cmpsl
lods
jecxz
xor
outsl
xlat
or
out
fbld
fnstenv
outsl
insl
ret
les
adc
fists
stos
cli
es
and
sub
lock
shlb
shrw
into
or
jle
pop
aas
test
xor
movsb
scas
sbb
inc
add
fucom
jl
orl
mov
pop
iret
testb
rcrl
push
sub
test
pop
mov
mov
cmpsl
into
fucomip
test
test
push
fimuls
cmpsb
sub
and
and
cltd
fidivrs
das
shl
jecxz
ret
psubd
inc
lods
sbb
movsb
aaa
call
dec
mov
pop
rcll
jbe
fucomp
scas
inc
iret
mov
sbb
jbe
push
mov
xchg
dec
mov
push
xor
iret
mov
mov
jg
add
clc
inc
push
das
pop
mov
js
cmp
jmp
sub
mov
dec
mov
mov
sub
aaa
mov
cli
dec
mov
cli
loop
mov
cmpsl
xor
sbbb
jno,pt
push
add
repz
add
mov
movsl
jl
in
mov
pop
aad
ret
mov
add
das
pushf
mov
lods
fisttpll
in
mov
xchg
mov
adc
sarl
movsb
lret
dec
fcmovu
sub
or
inc
mov
jnp
fdivr
jnp
fdivl
nop
arpl
push
call
decb
jg
dec
push
stc
xlat
fs
fiaddl
adc
jl
sub
outsb
adc
jp
aas
lretw
xchg
mov
xor
jecxz
fidivrs
call
mov
adc
orb
lock
rcrl
adc
cltd
stc
sahf
push
add
mov
fcmovne
dec
cwtl
outsl
mov
aad
cmp
ror
push
scas
enter
pusha
in
jb
mov
repz
arpl
idivb
fildl
and
dec
loopne
mov
fs
and
lcall
and
push
cli
leave
mov
les
dec
cmp
in
sub
in
pop
pop
or
inc
rolb
imul
xchg
roll
int3
adc
or
je
stos
outsl
cmp
call
inc
jl
lock
inc
adc
mov
pop
xlat
loope
das
lods
stc
popa
out
cmp
pusha
mov
bound
inc
pushf
fnstcw
ljmp
loope
xor
test
mov
cs
lcall
jne
ds
pop
andl
scas
xor
sbb
dec
mov
pop
mov
jge
mov
mov
out
mov
in
sbb
sbbl
out
push
cwtl
mov
mov
testl
outsl
mov
xchg
add
int
lret
mov
pushf
movb
lea
jmp
mov
cmp
call
push
call
push
stos
lds
mov
insb
push
iret
data16
cmpsb
push
lret
mov
les
push
stos
jne
push
mov
out
mov
addr16
jg
mov
ret
or
adc
sbb
jl
lcall
xchg
xchg
orb
outsl
aaa
popf
das
jne
jnp
addb
mov
sbb
xchg
out
lods
push
ret
cmpsl
mov
pop
and
icebp
pop
scas
aas
loopne
or
ja
xchg
in
ja
call
int3
in
ss
fdivr
and
out
jg
push
cli
int3
sarb
mov
imul
hlt
fildll
adc
xor
cmp
in
mov
pop
in
dec
int
jge
incl
and
mov
adc
test
cmp
xor
adc
pop
jne
repz
cmp
adc
test
addr16
push
lahf
jne
jns
jp
xchg
jnp
sti
icebp
lahf
add
adc
dec
jmp
push
fbld
push
adcb
jl
and
or
jae
mov
out
cmp
aaa
popf
es
pop
aas
sub
jb
jbe
incb
and
fmull
and
sbb
mov
pusha
imul
test
or
cmpsb
lcall
or
sti
imul
pop
dec
sti
inc
stc
aaa
push
shll
cwtl
into
fists
sahf
pop
xchg
loopne
fisubrl
call
popa
lret
push
fwait
jg
outsb
hlt
add
and
sub
sub
fs
jmp
js
shll
dec
inc
cs
jl
adc
jnp
push
call
andl
mov
in
mov
add
or
push
call
sbb
push
call
imul
icebp
push
add
pusha
jmp
push
call
fcoms
test
jne
pushf
mov
dec
cmp
add
or
or
and
aad
inc
xor
stos
dec
int
stos
fdivl
fistps
ret
insl
scas
lret
sbb
imul
fwait
pushf
adc
or
lahf
add
and
mov
scas
adc
inc
imul
fs
imul
sbb
jmp
push
pop
in
dec
jb
add
mov
add
repz
ret
xor
arpl
or
addr16
adc
pusha
jge
out
mov
mov
or
aad
pop
icebp
and
dec
shrl
push
and
popa
dec
in
jb
add
pusha
push
push
jl
lahf
adc
push
xchg
movsl
xor
jecxz
add
pop
fs
cld
pop
div
or
roll
fildll
stos
and
sub
fistpll
mov
push
pop
lahf
pop
jb,pn
lret
mul
xor
jecxz
sbb
ss
xor
xor
cmc
nop
lods
mov
and
shrb
jns
ds
dec
xor
xlat
dec
jne
push
push
xchg
neg
pusha
adc
neg
not
call
push
call
fdivl
pop
inc
or
lea
jmp
test
cmc
cmp
pushf
call
xor
lock
xor
jo
aad
std
sub
aad
pop
pushf
test
dec
xchg
jne
mov
mov
cmc
pop
out
jo
aad
fisttps
push
push
nop
test
imul
dec
adc
movl
sub
inc
jmp
sub
inc
adc
adc
pcmpgtb
das
cmp
pop
in
sahf
jne
add
and
mov
call
adc
add
divb
add
mov
push
aam
call
inc
movsl
scas
pop
out
enter
rorb
and
cmpsl
cmp
and
xchg
add
mov
jns
rol
xchg
jg
jb
iret
xchg
push
scas
insb
out
mov
call
sbb
push
pop
dec
mov
and
push
addr16
addl
adc
stos
cld
fs
test
add
je
sbb
int
mov
in
jo
pushf
mov
pop
dec
xchg
es
push
inc
push
dec
imul
push
in
xchg
fwait
jmp
rcrb
fidivrs
add
and
jle
mov
fbld
lock
push
mov
cmp
jmp
mov
add
lcall
sub
movzbl
lea
clc
movb
cmp
sub
jmp
das
pop
add
xchg
js
inc
adc
daa
not
leave
fsubrl
jg
jle
jno
cwtl
inc
pushf
xlat
cmp
loopne
mov
movsl
rcll
into
jns
push
push
add
pushf
jmp
xchg
call
fwait
inc
sti
mov
aaa
sbb
jae
or
pop
popa
pop
jge
mov
jmp
adc
nop
lret
xor
jns
pop
scas
cmpsb
lcall
mov
add
rolb
and
add
mov
sbb
sar
rcrl
in
mov
test
inc
add
pop
outsl
adc
mov
lods
xor
lret
cmp
inc
daa
stos
cs
mov
push
or
fldcw
arpl
scas
test
movsl
push
fidivrl
jecxz
jg
insl
bnd
mov
xor
or
or
out
xor
push
sbb
push
pusha
icebp
adc
push
arpl
xchg
add
mov
push
cmc
add
pushf
cmp
mov
not
pusha
mov
adc
xchg
sub
sub
mov
or
shr
mov
sub
test
stc
stc
pusha
cmpsb
movb
pushl
call
push
call
jno
shrl
push
iret
in
and
add
test
cli
in
shll
add
in
pop
or
js
push
jl
sub
push
call
cmc
xchg
inc
sbb
adc
cmp
cmpsb
add
pop
cwtl
int
add
add
push
xor
sbb
mov
sbbl
je
fcomi
fwait
inc
clc
fs
stc
hlt
adc
push
inc
lret
add
cmp
push
fcomi
clc
insb
pusha
inc
fimull
and
xor
es
outsb
xchg
outsb
stc
add
cmp
mov
movsl
adc
mov
sub
push
out
adc
and
insb
mov
out
push
and
dec
fisttpl
test
lock
pop
push
sbb
xchg
outsl
sbb
scas
or
xor
xchg
pusha
movw
movb
jmp
push
call
or
mov
lea
jbe
shr
rcl
mov
add
test
add
test
bsr
btc
movsbw
mov
call
enter
adc
mov
jge
and
andb
out
push
cmp
mov
mov
adc
repnz
add
lods
jo
mov
cld
add
ret
adc
int3
sub
sbb
lea
jns
cmpsb
outsb
and
fcmovnbe
sahf
and
pop
scas
jg
add
movsb
and
pop
lret
jae
stos
pop
push
into
push
push
icebp
xsaveopt
adc
cmp
pop
mov
or
and
jge
push
jmp
ds
add
mov
mov
lods
dec
int3
mov
adc
inc
out
xchg
dec
inc
cwtl
add
cld
sarl
push
mov
dec
sti
in
inc
les
hlt
js
sbb
sbb
test
iret
pop
icebp
sbb
push
add
mov
cmp
arpl
filds
out
add
adc
lret
loope
sbb
xchg
xchg
and
sarb
lock
xor
jmp
mov
aaa
mov
aas
in
mov
push
js
push
fsubp
call
sub
out
gs
mov
or
add
imul
insb
add
fcmovnbe
push
mov
push
call
lahf
sbb
xor
orb
leave
xchg
cwtl
xchg
push
loop
and
add
dec
cmpsb
dec
shrl
jno
loopne
push
out
notb
jecxz
fistps
adc
cmpsb
test
rcr
mov
test
pusha
adc
pop
lcall
mov
outsb
push
mov
mov
mov
out
add
test
rorb
sbb
push
aad
push
enter
ljmp
lods
pop
popa
nop
ja
push
push
push
dec
sarl
pop
and
arpl
xchg
sbb
jle
jne
es
fistps
movsb
mov
adc
icebp
xor
sub
cmp
mov
mov
pop
aam
jns
mov
mov
loopne
add
data16
xchg
das
mov
xchg
dec
in
pop
pop
mov
rclb
rorb
and
outsl
ret
call
fdiv
and
and
mov
in
or
cmpl
pushf
roll
scas
jecxz
pop
shll
call
adc
loop
add
icebp
mov
notb
ret
lea
imul
data16
and
adc
adc
outsl
adcb
inc
into
sub
xchg
inc
stos
sbb
jns
shrb
add
sub
xorl
xor
sub
push
xchg
xchg
ror
popa
mov
or
fwait
loope
sbb
es
shl
add
lret
pop
call
addr16
roll
push
and
inc
flds
scas
jp
cmp
push
test
lcall
cld
test
arpl
dec
mov
int3
test
pop
cmp
xchg
pop
enter
cmc
popa
inc
dec
jg
fisubl
insl
xchg
add
cmp
pop
in
mov
sub
into
pop
test
cltd
cmp
mov
ljmp
pop
addr16
sub
inc
jecxz
lcall
nop
xor
fstp
aaa
adc
or
outsl
dec
cmp
pop
js
xchg
stc
dec
test
mov
xchg
sbb
stos
jg
inc
jge
adc
xor
pop
sbb
fcmovnbe
xlat
mov
and
cmp
pop
dec
lret
cmp
mov
movsl
test
in
adc
lret
add
into
dec
test
insb
js
test
and
leave
push
aam
in
mov
iret
pop
orb
dec
mov
dec
mov
in
in
cmp
sub
push
push
mov
test
pusha
jl
mov
mov
into
movsl
cs
cld
psrld
add
lahf
xor
jne
in
or
push
call
scas
or
pop
push
pop
loop
leave
orb
or
jae
and
stos
movsl
xchg
clc
addr16
scas
xor
cmp
jno
test
into
js
mov
adc
dec
sub
nop
les
ror
xlat
inc
hlt
je
lret
push
or
fimull
call
xor
xchg
dec
scas
cmp
xchg
in
adc
loop
ljmp
lcall
xor
repnz
sub
int
jne
fidivs
jmp
out
loop
int3
and
fcompl
jae
jmp
pushf
js
scas
test
pop
fiaddl
subb
inc
aas
pusha
xchg
dec
mov
sarl
clc
jae
cs
push
clc
push
jmp
sub
arpl
dec
or
fwait
add
loope
gs
xor
sub
scas
mov
xor
jl
jle
and
push
pop
stos
rcrl
aaa
jne
in
jnp
pop
cmp
clc
pop
cwtl
xchg
cmp
loopne
sbb
sahf
dec
not
jmp
xchg
pop
adc
pop
mov
insb
cli
jbe
or
lret
cld
test
cltd
jo
and
cmp
addr16
das
neg
in
lahf
iret
js
testl
xor
push
add
test
push
jno
pop
popf
push
jmp
push
or
pop
pop
jl
cmp
lea
hlt
dec
xor
xor
dec
jbe
out
or
popf
sub
sub
push
cld
jecxz
lds
mov
lods
out
cmp
insl
sbb
or
mov
test
mov
mov
mov
hlt
adc
adcl
icebp
ret
popl
mov
daa
int3
enter
jp
nop
adc
fwait
push
sub
mov
xlat
jns
sahf
xor
xor
and
mov
dec
test
dec
sub
gs
sbb
sbb
sub
and
mov
cli
pop
mov
and
sub
inc
xor
pop
ret
fsubrs
jecxz
jno
out
jmp
mov
out
fisttpll
pusha
enter
ror
popf
adc
addr16
call
outsl
popa
mov
push
cmpsl
add
in
add
stos
notb
cltd
mov
ret
mov
dec
adc
dec
jg
or
loope
mov
in
movsl
adc
lds
nop
sub
inc
dec
insb
push
pop
or
sbb
bound
icebp
mov
aaa
aad
jnp
lahf
pop
testb
mov
sub
xor
inc
in
push
xor
and
jns
lods
mov
dec
stc
push
pop
outsb
das
mov
in
adc
or
scas
add
fldlg2
or
outsl
hlt
push
lock
and
in
cmp
push
sub
jecxz
test
sub
test
cmc
call
push
call
mov
fdivl
cwtl
data16
dec
fmull
pop
mov
mov
cs
test
jb
aas
shlb
jmp
xor
rcl
out
sarb
dec
ret
jns
addr16
push
call
jle
push
call
int
jg
add
inc
and
imul
adc
subb
hlt
pop
cmp
xchg
push
lahf
mov
jl
int3
int
jp
movsl
and
fldenv
and
dec
fstps
bnd
inc
adc
or
cmp
add
mov
aam
mov
jno
pop
es
enter
test
sub
jne
not
cmp
call
push
call
pushw
pop
dec
jo
fistpll
adc
aam
imul
loop
dec
js
push
dec
mov
jecxz
scas
push
lods
add
jo
jmp
dec
push
loop
sub
pop
mov
add
mov
adc
lret
call
dec
mov
mov
test
dec
outsb
addr16
shl
adc
cmp
scas
repnz
and
push
int
and
loop
hlt
cli
jg
sub
lahf
imulb
inc
push
lret
sub
aad
and
xor
lea
sub
jg
jbe
mov
pusha
pushf
call
subb
cs
push
mov
or
into
rorb
or
mov
dec
fdivrs
jno
cmc
sub
inc
inc
jbe
xor
jmp
test
test
push
enter
mov
mov
xchg
mov
xchg
mov
or
fs
mov
or
sbb
pop
dec
mov
sti
sub
lea
es
mov
jae
adc
js
lock
pop
out
shll
lcall
int
gs
mov
mov
sub
loopne
or
mov
or
fsubl
pop
dec
pop
dec
mov
push
into
xchg
imul
shll
push
push
mov
cmp
xchg
jg
fadds
test
call
aaa
daa
mov
cmpsl
adc
pop
movsl
icebp
mov
mov
inc
scas
sarl
push
fnsave
loop
and
jge
cmp
in
mov
aas
add
out
rcr
loope
jge
dec
fbld
jge
ja,pn
sbb
jns
int3
push
sbbl
mov
xlat
pushfw
sbb
int
js
fld
and
sub
outsl
jge
mov
mov
jecxz
pop
add
add
mov
sbb
rclb
movsl
jle
call
das
sbb
dec
ds
push
je
fsubrl
sbb
scas
inc
inc
arpl
imul
icebp
cs
cwtl
lock
jae
add
xor
stos
stos
dec
pop
jne
aaa
lahf
adc
sub
aaa
sbb
inc
pop
push
add
jle
xlat
addr16
lret
out
jo
xchg
cmpsb
sub
insl
cli
cmp
xor
pop
lds
enter
cmpsl
sub
pop
nop
filds
xlat
bound
bound
in
or
pushf
hlt
sbb
aas
test
jg
ffreep
sub
shrb
fisttpll
or
and
icebp
inc
ret
sub
shrb
out
mov
xor
int
sbb
sbbl
adc
aam
gs
mov
ja
orl
push
mov
mov
push
rorl
push
pop
sahf
sub
sub
insb
pop
pop
xchg
fmuls
enter
fldt
mov
mov
sbb
aaa
mov
push
roll
or
outsl
and
pushl
aas
inc
add
jmp
xor
push
xchg
aaa
add
mov
push
call
jmp
lea
xchg
not
pushl
mov
bswap
pushf
mov
pushf
movb
pushl
ret
push
call
pushf
aaa
movsl
out
push
add
iret
fs
imul
mov
jb
lea
mov
mov
ffree
mov
outsb
pop
ret
scas
inc
mov
mov
ja
xlat
pop
jns
nop
xchg
push
add
adcl
popf
fucomip
in
jb
and
pop
lcall
aad
nop
xor
sbb
test
push
push
cmp
int
pusha
ljmp
adc
jge
mov
rolb
inc
or
ljmp
cs
push
adc
or
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
outsl
arpl
imul
cmp
add
fdivrl
xor
add
adc
push
add
popl
or
into
push
das
not
popf
addb
fwait
adc
call
push
xchg
cmc
push
divl
js
out
jg
cmp
es
test
add
jno
jae
mov
dec
xor
and
jnp
dec
xchg
push
mov
div
movsb
push
mov
mov
push
movb
lea
jmp
push
dec
inc
dec
dec
xor
cs
insb
add
shr
call
insb
or
jb
lea
je
push
mov
pusha
test
pusha
pushl
call
push
call
jle
xchg
clc
out
jge
sbb
mov
ret
ja
sbb
fs
lret
cmp
iret
jge
mov
int3
bound
outsb
fidivl
or
es
pop
dec
shll
dec
rclb
aam
mov
insl
fildl
jge
mov
inc
psraw
mov
fnstenv
mov
pop
jnp
fucomp
cmpsb
stos
test
outsb
jbe
mov
mov
pushf
sbb
dec
pushf
in
test
popa
cmpsb
xor
jmp
jns
movsb
mov
ret
dec
fsub
sti
fdivl
push
mov
jmp
add
fbld
call
repnz
pop
xchg
adcb
pop
and
mov
aam
dec
dec
xlat
insl
jge
mov
or
jp
push
jno
jae
in
rcrb
movb
call
into
xchg
pop
xor
lret
insl
andb
mov
orl
sub
leave
push
mov
aas
call
mov
pop
ficoms
push
leave
hlt
sbb
fnstsw
enter
insb
inc
cmp
sti
xor
jl
cmp
jmp
or
add
jmp
adc
sub
pop
stos
icebp
dec
movsb
ffreep
mov
not
mov
jbe
orl
push
xchg
xchg
adc
add
add
mov
std
daa
push
pop
leave
into
fisttps
imul
sahf
lret
jae
dec
aad
jb
int3
inc
adc
and
lods
or
arpl
xor
out
mov
mov
push
aaa
call
or
dec
clc
jecxz
lods
adc
jae
sub
mov
inc
sub
repz
pop
mov
jle
insl
pusha
scas
repz
rcr
pop
imul
push
mov
call
sub
dec
xor
inc
push
es
sub
ljmp
sub
pop
jp
dec
dec
cld
aaa
mov
dec
or
xchg
push
into
sub
mov
jg
aas
imul
xchg
popf
aad
pop
and
jno
xchg
xchg
or
in
nop
faddl
outsl
xor
adc
jbe
loope
push
cmp
sbb
dec
xchg
adc
insb
pop
cmp
cmpsl
xor
test
sti
xor
xor
and
and
lcall
aad
pop
pusha
xor
movsb
inc
and
mov
jo
adc
jne
fstps
sbb
push
push
xor
jae
fisttpll
xor
lret
pop
lock
add
les
and
arpl
out
rcr
xchg
test
mov
adc
adc
call
out
dec
js
dec
mov
lea
call
call
stc
cmp
pop
and
lods
movsl
adc
test
cwtl
xor
add
mov
push
adc
jne
movsl
pop
out
adc
fisubl
adc
inc
pop
pusha
jge
xor
xlat
xchg
inc
xchg
nop
mov
mov
int3
xchg
rcll
cmp
sub
jno
into
loopnew
inc
xchg
adc
out
jb
rcrb
xchg
nop
hlt
mulb
leave
sbb
out
pop
test
les
fprem1
push
pop
sti
mov
inc
sbb
je
push
fidivl
fimuls
outsl
repnz
adc
mov
sbb
fidivrl
repnz
jl
push
int
addr16
ds
cmp
sbb
mov
popf
mov
nop
mov
filds
dec
push
mov
ret
in
or
mov
dec
loopne
stos
push
fisttps
loop
mov
xor
rorl
test
std
cmpsl
pop
xor
mov
inc
cmpsb
add
loope
cmpsl
data16
push
pop
jmp
loopne
xchg
fbstp
push
lret
shlb
lcall
out
fmuls
pop
push
out
and
inc
xor
pop
sub
dec
inc
mov
rclb
xchg
and
outsl
cld
mov
xor
enter
imul
popf
negb
cli
cmpb
pop
and
test
cmp
or
mov
push
popa
das
mov
data16
or
pop
inc
pop
imul
jle
mov
lea
jae
test
cmc
cmp
push
pushf
pusha
lea
jae
ja
pusha
pusha
cmp
cmp
lea
jnp
pushf
pusha
movb
lea
ja
dec
setnp
call
push
jmp
push
call
outsl
mov
inc
push
sub
loope
scas
fcmovb
xor
xchg
pop
scas
xor
sbb
mov
pusha
or
sub
lds
ss
xchg
sub
cli
pop
cwtl
pusha
stc
mov
xchg
sub
mov
lea
jae
jmp
mov
push
pushf
mov
pushf
pushl
ret
out
sahf
mov
inc
push
dec
pushf
mov
popa
cmpsl
lock
adc
addr16
and
arpl
aas
push
rcr
or
or
dec
mov
adcl
sub
arpl
ljmp
jecxz
loopne
sbb
adc
divb
rolb
sti
pop
xor
pop
xchg
test
gs
inc
lds
lret
cs
mov
inc
pop
movsl
mov
lret
sub
mov
leave
sbb
inc
mov
arpl
leave
popf
sbb
xchg
xchg
test
sub
jl
push
cmpsb
sub
sub
in
dec
sbb
mov
movb
repnz
imul
or
pop
adc
stos
sti
test
rcll
cmp
mov
btc
bts
test
stc
mov
test
bt
pushl
sub
pusha
movb
rep
not
mov
pushf
push
pushl
lea
jmp
add
inc
gs
fs
jo
gs
dec
outsb
outsw
add
mov
add
push
pusha
test
pusha
test
pushf
pushf
push
call
pushf
lea
je
sar
cmc
ror
add
bt
btc
mov
cmc
clc
clc
pushf
add
pusha
cmc
pushf
mov
or
mov
clc
cmp
movb
pushf
jmp
lret
icebp
push
push
dec
dec
mov
movsl
mov
mov
mov
negl
mov
jmp
push
ds
mov
pop
sub
movsl
inc
scas
mov
fwait
aas
cmpsl
test
xor
jmp
rcl
jno
shl
jae
aas
inc
sub
adc
cmp
sbb
or
out
pop
and
dec
xor
movsl
xchg
push
call
or
sbb
pop
adc
pushf
movb
pushl
ret
push
call
int3
pop
mov
push
push
call
in
and
push
call
inc
push
call
mov
push
pushl
dec
jmp
push
call
cwtl
jmp
cmp
lar
sbb
roll
lcall
les
pop
test
into
fbld
js
fwait
xchg
ret
shl
push
xchg
movsb
rcll
xchg
je
not
mov
dec
jge
adc
dec
icebp
mov
ds
jle
xlat
push
aam
mov
pop
fisubrl
push
ror
xor
dec
sub
mov
gs
mov
sub
int
gs
popa
scas
cld
icebp
scas
iret
adc
mov
nop
mov
scas
hlt
shrb
mov
pop
dec
js
subb
push
mov
jo
lahf
sub
mov
lock
outsl
cwtl
pop
pop
xchg
cmpsl
xchg
sahf
cwtl
mov
pushf
mov
lods
or
xchg
stos
test
sub
mov
xchg
lods
xor
sub
lahf
rclb
out
cmpsb
cmpsl
jl
xchg
clc
jo
and
out
mov
in
in
jmp
scas
pop
mov
je
xor
xchg
and
jne
jo
sub
call
jo
push
in
sub
cmpsl
fisubrs
ja
ljmp
xor
adc
movsb
mov
cmp
cmpsl
scas
cmp
cmpsl
lods
mov
test
mov
jo
daa
push
cmpsl
mov
call
arpl
imul
jecxz
pushf
test
adc
lock
and
cmpsl
test
jmp
cmpsb
and
push
inc
scas
sarb
ss
and
mov
sub
cmc
lods
clc
mov
in
mov
ljmp
pop
push
repz
lods
out
into
imul
scas
aam
std
xchg
sub
scas
das
push
pop
xor
rorb
inc
sahf
pop
mov
mov
jo
rolb
push
inc
push
iret
push
push
push
fmuls
das
es
pop
nop
pop
sbbb
in
pushf
push
pop
push
scas
mov
cmp
jbe
push
cmp
scas
sti
mov
pop
mov
push
into
cmp
and
xchg
stc
and
test
test
mov
fbstp
mov
stc
cmp
test
mov
nop
es
mov
lahf
sub
push
mov
xlat
mov
adc
mov
test
aam
push
outsb
dec
add
mov
pop
mov
and
push
dec
cmp
addr16
mov
inc
mov
xor
dec
or
mov
es
mov
lock
inc
test
in
test
cltd
test
movsl
test
jle
jp
pop
mov
xor
mov
movsl
rol
mov
inc
js
mov
xchg
or
es
out
js
inc
or
push
data16
cmpsb
inc
dec
mov
and
and
mov
sbb
push
imul
adc
mov
and
inc
jno
mov
or
sbb
push
push
mov
test
stc
outsb
pop
test
mov
test
test
jle
lods
sbbb
loop
mov
clc
cmp
hlt
movsl
scas
sub
mov
mov
xchg
pushf
mov
scas
pushf
loop
lahf
mov
cld
mov
stos
je
fs
je
loopne
mov
outsb
pusha
int3
test
insl
adc
call
les
aam
jbe
sub
scas
cs
mov
push
push
jbe
or
test
adc
lea
cli
xchg
bound
dec
pop
cli
mov
cmp
pushf
shrb
insl
adc
call
arpl
and
fwait
repnz
jg
js
js
js
js
jle
xchg
test
xchg
arpl
out
inc
out
cmp
jae
mov
in
xor
lea
sub
insb
bound
cmp
je
jecxz
inc
stos
mov
ja
shr
stos
xor
push
imulb
stos
mov
nop
mov
fmull
dec
loop
sub
or
mov
fs
dec
nop
cltd
xchg
scas
movsb
insl
or
pop
dec
and
sub
stos
sub
mov
xchg
fwait
dec
cmp
xor
outsl
mov
enter
lahf
dec
lea
cmpsl
pop
xchg
pop
jecxz
cmp
fimuls
xchg
dec
pop
clc
mov
mov
xchg
sbb
dec
insb
loopne
enter
call
scas
addr16
push
inc
adc
sbbl
xlat
stos
aam
fs
or
sub
pop
cmp
mov
outsl
sbb
dec
cmp
insb
cmp
or
cwtl
inc
push
sbb
fcom
push
test
mov
pusha
cmp
mov
adc
aas
adc
dec
pop
push
inc
xchg
mov
popa
sbb
cmp
out
fadd
sbb
in
jae
or
adc
adc
stos
dec
or
test
or
addr16
and
sub
adc
cmp
xchg
scas
push
inc
imul
xchg
sbbb
sub
cmp
push
popf
dec
ss
call
inc
outsb
jb
mov
push
sbb
enter
jo
adc
push
subb
bound
ds
xor
shrb
fcompl
inc
xor
cmp
jl
movsb
inc
in
inc
pop
movsb
inc
pop
outsl
dec
inc
lcall
mov
dec
inc
push
xchg
and
cmp
hlt
push
jnp
mov
in
mov
sbb
jb
in
cmp
xchg
pop
sbb
inc
cmpsb
adc
es
lcall
pusha
test
std
lcall
pusha
sahf
and
pushf
pop
loop
dec
enter
cld
aam
or
cmp
push
cmp
push
das
clc
in
or
js
data16
xchg
ficompl
mov
outsb
pop
cmp
orb
or
push
cmp
loop
sub
sub
fwait
outsb
outsb
fimuls
sub
cmp
mov
jl
lea
inc
je
pop
cmp
mov
and
xchg
adc
into
adc
loopne
cmp
enter
in
inc
adc
inc
pop
mov
mov
pop
insb
push
inc
call
xor
add
push
nop
aaa
inc
mov
int3
sub
dec
shl
inc
imull
dec
fs
cmp
cmp
cmp
cmp
mov
xchg
xorb
cli
inc
sub
jns
gs
lcallw
pop
pop
out
orb
push
fimuls
nop
pop
cmp
mov
pop
mov
cmpsb
pop
pop
push
scas
sbb
dec
data16
in
ds
add
cmp
inc
or
cltd
roll
ret
addr16
or
pop
jl
addb
pop
pushf
sbb
mov
bound
int3
sbb
and
pop
rorb
mov
sub
push
subl
push
inc
sbb
and
data16
jl
pop
imul
dec
call
sbb
daa
inc
imul
dec
cmpsb
add
cmp
les
cli
arpl
cld
ss
jmp
push
xchg
or
sub
mov
addr16
out
jbe
pop
mov
pop
orb
or
adc
js
push
mov
fwait
dec
sub
adcb
outsb
cmp
push
pushf
dec
ret
cmp
inc
idivb
data16
adc
xlat
cmp
push
adc
cmp
pushf
push
pop
sbbl
inc
data16
inc
pop
and
push
mov
mov
imul
push
add
push
and
mov
cmp
pusha
outsb
add
imul
lea
pop
or
push
jecxz
negl
inc
pop
sbb
data16
xchg
dec
cmpsb
fs
jle
sti
lret
inc
popl
cmpsb
outsb
orl
jp
add
in
sahf
or
addb
inc
pop
mov
xor
lahf
sbbl
repnz
push
add
sub
cmp
cld
dec
push
pop
cmp
mov
fs
pop
pusha
test
cwtl
push
inc
dec
inc
int
out
aas
cwtl
addr16
outsl
popa
mov
adc
inc
inc
mov
and
and
or
xor
pop
dec
inc
mov
cli
je
xchg
sbb
je
movsb
inc
inc
cmp
mov
lcall
out
push
adc
add
incb
sub
push
push
sbb
pop
pop
lahf
jl
lods
inc
dec
xchg
inc
aaa
out
imul
daa
cmp
in
jns
jae
loop
jecxz
or
push
fwait
addb
or
mov
inc
insb
pop
push
jmp
xlat
jo
bound
xchg
shrb
pop
sbb
sub
fimull
out
push
lds
frstor
cmp
cmc
xor
jg
ret
in
add
or
or
or
push
out
cmp
xorb
in
fcomip
bound
test
jnp
xchg
insb
dec
call
ficoms
aas
or
sahf
lock
xor
loop
je
arpl
pushf
es
jl
stos
dec
iret
inc
cmp
sbb
scas
int
dec
stos
or
add
mov
cld
jae
leave
sbb
jb
pop
scas
add
and
pop
cmc
jp
jle
ljmp
mov
in
adc
add
pop
enter
mov
mulb
pop
icebp
in
mov
outsl
cmpsb
aaa
scas
xchg
repz
pop
push
movb
inc
mov
test
mov
adc
fisttpll
out
cmpsl
ret
std
dec
pop
rcll
repnz
pusha
aas
inc
out
pop
adc
out
jmp
mov
xor
push
mov
test
out
scas
or
jns
in
mov
cs
lds
rcrb
iret
fildl
popf
xchg
sub
dec
dec
iret
push
push
clc
xor
in
push
lcall
js
neg
xchg
stos
mov
inc
push
fs
lret
negb
jne
cmovo
or
adc
or
mov
mov
mov
fmuls
push
push
lea
jmp
push
call
outsb
pop
jp
das
rorl
mov
cmpsb
cmpsb
add
outsb
mov
sbb
jb
mov
dec
dec
and
fwait
adc
je
popf
add
xchg
ss
test
mov
lds
inc
sti
cmp
xchg
pop
xchg
fistpl
push
xchg
movsl
cmc
jb
jecxz
inc
ficompl
adc
jbe
in
fsincos
addr16
xchg
in
mov
mov
lds
out
push
and
in
jnp
add
jbe
push
call
xchg
inc
repnz
inc
xor
mov
mov
add
in
add
sahf
mov
mov
jae
inc
into
fildll
mov
sub
shr
fisttpll
loop
arpl
cs
or
fwait
test
into
out
mov
push
xor
xor
stc
mov
lds
xor
cltd
or
out
dec
mulb
or
pop
bound
insb
aam
adc
roll
mov
adc
xor
in
push
insb
mov
shrb
shl
fcomi
shrl
pushf
stos
jmp
push
call
incl
mov
gs
inc
mov
push
call
xchg
mov
and
test
cmp
cltd
popf
lcall
cmp
imul
loopne
int
fmull
xchg
scas
cmp
negl
fs
in
jg
add
enter
push
push
mull
or
cwtl
or
gs
es
in
pushf
and
lods
push
bound
or
adc
ret
insb
adc
out
adc
ret
or
fsubrl
or
stc
jge
scas
jno
add
out
sbb
enter
mov
add
push
call
adc
test
jmp
aam
inc
cmp
lcall
or
cmpsb
inc
pop
std
jge
add
loope
enter
aam
mov
jmp
out
add
dec
mov
mov
gs
jno
clc
sbb
hlt
fs
insb
sbb
mov
adc
inc
mov
repnz
sbb
mov
push
scas
sub
fwait
jg
leave
xchg
out
leave
adc
out
sub
adc
lods
jp
add
push
insb
jae
insb
insb
outsl
arpl
add
dec
outsl
popa
fs
imul
add
int
gs
popa
adc
js
call
int
lea
insb
and
jb
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
arpl
gs
sub
rolb
shl
and
cmp
add
pushf
push
movb
movb
lea
jmp
cli
shr
in
ss
call
scas
mov
mov
dec
jl
lcall
mov
xor
fistpll
dec
fisubrl
out
xchg
hlt
fisttpll
das
cmpsb
mov
stc
in
out
divb
fcmovu
push
jl
repz
dec
xchg
mov
test
inc
lock
mov
loopne
mov
add
or
in
rcll
jg
mov
stos
jmp
data16
mov
mov
cmpsl
sub
push
in
test
add
ljmp
and
pushl
popfw
jmp
push
call
mov
push
pop
gs
mov
push
call
xchg
cmp
jl
add
cmp
cmc
and
mov
sbb
sbb
lds
add
dec
int3
pop
inc
pop
xchg
testl
inc
mov
cmpsl
mov
imul
push
andb
adc
mov
in
fildll
mov
mov
scas
outsb
cs
leave
and
pop
pop
xor
inc
xchg
mov
sub
pop
in
xchg
inc
andb
push
add
call
and
inc
js
xchg
mov
lcall
daa
xor
data16
or
sub
xchg
hlt
or
fcmovnb
imul
hlt
cs
insl
and
jle
pop
in
push
xchg
adc
ljmp
or
adc
idivl
movsb
xchg
cld
and
sarl
add
jge
mov
scas
dec
xchg
outsl
jge
jnp
push
int3
les
ljmp
gs
rorb
mov
inc
add
push
call
shrb
je
in
pop
dec
add
xchg
push
pusha
pushl
lea
je
jmp
setle
dec
inc
pusha
inc
stc
sar
dec
xchg
aaa
neg
mov
shr
rol
dec
or
mov
stc
test
mov
pop
jmp
push
call
cmp
mov
rep
outsb
fidivrl
cmp
lds
mov
xor
fsubl
dec
xchg
mov
into
fistpll
dec
push
mov
stos
lahf
fisttpll
shlb
clc
sbb
adc
aam
xlat
leave
jle
ficoms
pushf
mov
leave
push
sbb
test
pop
pop
rol
dec
movsl
xor
or
loop
and
fs
add
sbb
xchg
mov
sub
inc
lods
push
rcr
sub
add
cltd
xchg
sub
add
xchg
addr16
jp
repnz
and
lods
mov
insb
and
xlat
push
jecxz
xchg
push
xor
push
imul
mov
pop
pop
scas
ret
pop
push
out
xchg
xor
push
adc
daa
xchg
in
cmp
mov
mov
mov
sahf
jecxz
dec
inc
mov
jecxz
call
xchg
lea
adc
add
mov
mov
icebp
cwtl
xchg
sbb
fstpt
cwtl
sub
pop
fmul
sub
jmp
rclb
ss
xlat
jb
fbstp
pop
add
sbb
jnp
test
ds
shlb
mov
loopne
cmp
jne
aam
outsb
xchg
mov
sub
movsl
cmpsl
lock
ret
arpl
push
outsb
adc
add
inc
gs
gs
arpl
popa
jo
add
inc
sbb
push
xchg
stc
push
jp
pop
leave
or
dec
lahf
add
imull
iret
mov
inc
pop
je
adc
xlat
imul
inc
mov
add
mov
out
push
scas
loop
or
mov
sbb
cmp
addr16
mov
insl
sub
jmp
sti
push
lods
imul
xor
fcmovnb
sub
add
and
sbb
jmp
in
xchg
das
stos
out
fisubs
mov
sub
lahf
xor
jge
dec
cmp
dec
xchg
clc
push
popa
fnstcw
testl
xor
rcrl
imull
xor
sahf
cmpsb
cltd
test
xorb
dec
mov
dec
inc
push
lret
pop
jge
xor
add
fists
mov
xor
push
rolb
xchg
iret
addl
jmp
lea
je
bt
mov
ror
dec
neg
btc
mov
jmp
push
call
adc
inc
sub
clc
push
shl
call
push
call
dec
in
aam
orb
das
add
dec
mov
lcall
jne
stos
lret
loope
cmpsl
mov
mov
into
fbstp
mov
enter
fimuls
mov
scas
add
pop
int
push
sahf
mov
ficomps
cmpsl
and
push
adc
nop
inc
push
xlat
sbb
lea
loope
sub
popf
dec
adc
inc
dec
xor
pop
sub
xchg
adc
loop
sub
and
test
out
jnp
fsubs
mov
ficoml
mov
inc
fisttpll
push
jae
adc
and
jecxz
popf
xlat
aaa
scas
ror
aaa
sbb
ljmp
sbb
mov
jbe
cs
ds
in
sbb
int
loope
test
lods
or
js
xor
push
sub
loope
lock
or
add
in
push
gs
ljmp
popa
aas
in
mov
jmp
sbb
lea
jmp
push
call
sbb
mov
push
sbb
add
xor
aaa
adc
lahf
xchg
mov
out
dec
ror
jge
xor
sbb
sbb
test
push
mov
lock
repz
aam
ja
cmp
jne
dec
push
push
nop
shll
sub
outsb
mov
and
jmp
mov
mov
dec
jno
jbe
cmc
mov
pop
mov
dec
xor
out
mov
in
test
xorl
mov
or
ljmp
outsl
leave
in
je
add
push
negl
call
push
adc
call
push
call
cli
enter
fs
jae
call
faddl
xorb
mov
lods
clc
insb
pop
je
cmc
pop
inc
pop
fwait
loopne
or
push
stos
xchg
xchg
fisubl
xchg
dec
shll
shl
mov
push
mov
or
arpl
push
cmp
test
jmp
xor
cltd
push
mov
mov
cmp
aam
xchg
sbb
loope
jae
mov
jp
cmp
dec
adc
xor
movsb
mov
push
lods
stos
or
ljmp
fldt
mov
test
test
movsl
lock
adc
xor
mov
adc
xorl
mov
push
stos
pop
cld
jp
sub
pop
stos
dec
or
iret
adc
inc
inc
xor
xor
popf
jle
subb
xor
in
inc
rorb
fdivrl
adc
cltd
cmp
adc
stos
xor
cmc
mov
fnsave
sbb
and
pop
xlat
insl
aaa
add
ret
rorb
cmp
and
pop
subl
cmp
outsl
stc
loop
mov
daa
inc
cmp
cmp
cmp
aam
xchg
and
mov
pop
lods
ljmp
mov
divl
mov
or
test
pushf
push
lea
call
clc
test
stc
sub
call
jl
out
jecxz
leave
outsl
lahf
add
pop
test
fwait
jne
in
sbb
sub
popa
adc
mov
out
mov
gs
enter
cmpsl
insb
jne
lock
call
and
push
sbb
add
sbb
and
sub
mull
dec
mov
jge
sbb
jge
imul
or
out
je
cmpsb
xor
pusha
fdivrs
dec
ret
rcl
movsb
jb
pop
jnp
sbb
inc
xchg
lret
pusha
fsubrs
test
add
pop
push
mov
cld
mov
in
imul
sbb
psadbw
sub
subl
sub
jne
sub
mov
fstps
icebp
lret
aaa
jl
fwait
adc
out
in
jge
scas
lock
mov
cmp
test
push
icebp
es
test
fldcw
test
or
mov
cmpb
insb
xchg
or
dec
or
mov
ficoms
mov
push
pop
xor
daa
cmc
pusha
outsb
xchg
arpl
xor
imul
sti
scas
test
lods
repnz
or
aad
in
repz
xchg
mov
push
std
in
add
push
or
jmp
in
push
dec
add
xor
mov
stos
jbe
call
xchg
sbb
aas
cmp
jbe
sub
pop
jp
xor
stc
add
push
jge
and
and
jbe
or
fildll
cmp
inc
sbb
pop
push
add
fnsave
loope
clc
fcomip
xchg
lret
sbb
jmp
sub
sbb
inc
adc
sub
mov
sub
test
mov
sahf
aad
mov
cmp
in
sub
add
jbe
add
out
push
add
add
add
add
or
or
push
add
add
add
add
xor
add
push
add
add
add
add
inc
pop
add
push
add
add
add
add
pop
add
push
add
add
add
add
cmp
add
push
add
add
add
add
or
xor
push
add
add
add
add
inc
pop
add
push
add
add
add
add
pushf
or
inc
inc
pop
add
push
add
add
add
add
aad
add
pop
add
push
add
add
add
add
inc
pop
add
push
add
add
add
add
xor
add
pop
add
add
add
add
add
inc
pop
add
add
add
add
add
pop
add
pop
add
add
add
add
add
inc
pop
add
pop
add
add
add
add
add
pop
add
add
add
push
cmp
add
add
mov
fstpt
sbb
test
adc
testl
fcomps
out
xor
inc
movsl
inc
cmpsl
aam
adc
mov
pop
imul
dec
pop
or
pop
and
and
lahf
mov
and
sbb
data16
push
push
gs
rcl
or
jp
inc
cmc
pop
xchg
push
xchg
cltd
mov
adc
outsb
adc
pop
inc
xchg
rclb
movsb
push
mov
mov
and
dec
jge
and
adc
jg
shll
pop
mull
push
dec
push
dec
dec
test
outsl
mov
sbb
inc
js
popa
jp
test
or
mov
repz
sub
arpl
hlt
or
pusha
add
mov
xor
sub
movsb
mov
add
pop
fxch
scas
arpl
lea
in
leave
popf
clc
dec
fnstsw
add
andb
sub
into
popa
outsl
scas
mov
lahf
mov
rolb
add
push
call
insl
js
cmp
add
jb
jne
insb
push
jb
je
arpl
scas
mov
xchg
sbb
dec
pop
in
jl
mov
and
push
push
inc
add
mov
adc
mov
in
pop
clc
dec
pop
loopne
ljmp
aad
js
insb
arpl
mov
nop
lcall
pop
xchg
add
or
xchg
sub
jb
ror
jb
lret
arpl
int3
inc
fcomp
cmpsl
pop
push
pop
mov
rcll
ret
push
daa
icebp
mov
int
dec
and
and
mov
repnz
sub
int3
jno
rcrb
inc
fisubl
dec
dec
and
nop
push
xlat
shrb
aad
lods
mov
mov
push
mov
push
adc
pop
dec
dec
add
insl
lahf
cmpsl
cwtl
cmp
clc
adcl
push
mov
lret
sbb
loop
rorl
stc
add
push
fwait
add
push
ja
mov
pushf
cmp
bt
add
mov
cmp
cmp
add
pushl
mov
lea
jmp
call
sbb
mov
icebp
hlt
xor
mov
jo
dec
dec
aas
dec
lcall
mov
sub
pop
in
add
repz
testl
roll
test
inc
xchg
jmp
mov
popf
pushf
out
xor
xchg
xor
fists
jne
jns
sub
dec
xchg
stc
xor
or
mov
cwtl
sbb
jo
jle
jp
jmp
pop
lods
mov
xor
lret
shll
fistl
cwtl
std
cmpsb
insb
mov
dec
mov
movsb
mov
in
xor
das
mov
movsl
icebp
mov
cmp
out
sub
pop
or
roll
scas
ja
and
rorb
clc
ljmp
int
imul
jmp
dec
popf
aas
icebp
or
jnp
cld
stos
sbb
mov
adc
mov
cs
out
scas
ss
jbe
test
ret
sbb
cmp
mull
adc
xor
pop
cwtl
clc
icebp
in
push
push
popf
data16
xchg
cmp
enter
jne
popa
push
call
clc
test
jmp
add
ja
sbbl
jb
mov
inc
or
mov
inc
les
mov
mov
mov
fcmove
filds
cld
dec
jecxz
sbb
test
dec
andl
mov
push
adc
xor
sub
jl
fidivl
xor
rcrl
fdiv
inc
sbb
enter
mov
inc
movsl
push
inc
xchg
neg
movsl
imul
call
repnz
dec
ljmp
pusha
shlb
cmp
add
outsl
stos
mov
call
jle
push
call
hlt
cli
incl
push
in
dec
cmp
add
ljmp
arpl
add
rolb
js
in
je
add
push
lea
je
clc
test
sub
jmp
push
call
push
add
cmp
mov
test
mov
call
jne
aam
and
fmul
or
daa
xchg
xor
mov
cli
dec
test
les
jae
push
xchg
aam
push
push
movb
pop
iret
xchg
pop
lret
lret
and
sub
out
das
dec
loope
mov
xor
fdivs
push
call
jmp
mov
adc
adc
or
add
mov
push
shll
and
mov
into
hlt
mov
nop
add
mov
inc
shlb
adc
pop
insb
fwait
sbbl
mov
cli
scas
lods
inc
gs
push
shrb
inc
jb
jmp
not
aam
sbb
sarb
negb
fucomi
aaa
adc
push
adc
jb
dec
faddl
fs
mov
mov
add
add
aas
ret
cmp
cmp
jmp
push
call
pop
ret
es
loopne
or
cmp
in
lock
or
add
outsl
and
les
cwtl
mov
mov
test
push
dec
enter
pushf
xor
sbbb
add
pop
pop
enter
jae
daa
add
inc
add
insb
das
pop
pushf
jno
lods
jp
cmp
test
shrb
sbb
ds
pushl
dec
pop
add
xchg
dec
cmp
rolb
inc
adcl
push
sarl
add
fisttpll
pop
adc
sbb
and
push
jns
ja
or
jge
clc
pop
inc
mov
data16
les
aam
cmp
push
mov
inc
faddl
stos
call
pop
and
popa
lcall
or
rorl
ljmp
push
lcall
mov
xchg
inc
and
in
insl
mov
push
pushf
lea
jmp
push
call
jns
add
mov
bt
test
pushl
test
push
pushf
lea
je
xadd
mov
inc
bswap
mov
call
pushf
sub
mov
pushf
bt
push
shr
test
clc
test
mov
cmpl
mov
push
pushl
jmp
imul
add
add
push
or
mov
push
jmp
outsb
push
jo
mov
je
fsub
pop
adc
fstps
pop
lahf
icebp
imul
clc
add
pop
hlt
push
cmpsl
jl
dec
lods
and
test
xor
out
popf
push
sbb
pop
faddl
push
daa
out
scas
jne
sub
jno
ret
dec
sbb
lret
lods
jmp
sarl
gs
mov
add
insb
adcb
push
call
popf
push
call
loope
xlat
imul
inc
or
adc
hlt
dec
ss
mov
adc
dec
add
xor
dec
int
test
je
test
lahf
fwait
jmp
das
and
mov
sbb
jns
jg
xchg
fisttpl
mov
mov
es
call
xchg
lea
je
cmp
stc
cmc
cmp
call
push
call
push
push
call
scas
lock
gs
insb
jne
push
bound
jb
add
jne
in
jecxz
add
pop
sbb
loopne
mov
out
lods
cmpsb
xor
mov
loopne
mov
ja
push
stos
popf
xchg
pop
add
mov
cmpsl
in
push
mov
mov
adc
add
lock
xor
and
inc
sbb
add
ret
in
cmpsb
mov
xchg
or
into
inc
aam
insl
dec
add
dec
push
stos
stc
cmp
inc
clc
out
mov
sarb
sub
push
aad
enter
xchg
or
dec
scas
fwait
pop
fisttpll
in
pusha
sub
and
add
jns,pt
outsb
jne
sbb
leave
mov
pop
insl
mov
or
inc
add
loop
and
scas
xor
xor
sbb
dec
imul
xchg
push
jp
push
xchg
jno
shlb
fildl
cmp
adc
xor
jmp
push
call
outsb
jmp
std
xchg
cmp
test
daa
dec
and
or
xchg
sbb
and
xor
cmp
mov
ss
push
adc
mov
fisttps
sub
sbb
sbb
jbe
mov
add
cld
xor
inc
insb
insb
jo
shl
fs
adc
imul
repz
out
notl
mov
iret
push
call
mov
dec
dec
jle
arpl
sub
push
aaa
scas
mov
mov
test
adc
and
mov
mov
loop
and
sub
rcrb
aam
xchg
pusha
mov
or
or
gs
lret
add
xchg
inc
mov
push
add
mov
sti
mov
push
adc
add
negb
sub
adc
nop
stos
lret
jp
idivb
fldenv
popf
push
mov
push
fcoml
pop
pusha
mov
mov
push
clc
test
test
pushf
call
add
call
push
call
mov
insl
pushw
ljmp
movl
pop
sub
rclb
movsb
mov
adc
jnp
loope
rcll
cmp
fildll
out
dec
ja
mov
mov
ljmp
scas
push
repnz
rcrb
sub
inc
push
adc
pop
mov
xor
negl
repz
jo
insb
jo
jo
cs
insb
add
insb
push
addr16
mov
and
sbb
sbb
xor
mov
cld
add
int
pop
xchg
shr
push
xor
and
mov
pop
into
aam
jnp
aas
movsb
mov
loop
sbb
scas
mov
adcl
mov
mov
lock
xlat
les
nop
jp
loopne
cmpsl
jnp
test
xchg
pop
rcr
mov
jnp
scas
movsl
pop
mov
idivl
adc
cld
ljmp
pop
and
jle
or
push
and
mov
xor
xchg
test
and
repz
sub
jno
repz
into
push
sub
fwait
pop
xchg
fcompl
es
mov
pop
or
gs
or
repz
in
xor
ja
int3
out
dec
into
lods
push
movw
dec
pushf
pushl
neg
pushl
call
jmp
pusha
movb
push
adc
pushf
lea
jmp
lea
jne
push
stc
test
pushf
movzwl
xor
bts
jmp
push
call
enter
push
push
in
mov
mov
cmpsb
dec
pop
cmp
lret
lahf
adc
sub
inc
xchg
push
jp
push
mov
pop
push
dec
outsl
push
jle
jnp
jge
mov
iret
ffreep
mov
and
movsl
mov
jmp
jbe
test
in
in
dec
ret
ja
aad
mov
pop
int3
outsb
aam
adc
in
gs
aam
pop
icebp
gs
pushf
ja
lods
repnz
mov
dec
inc
mov
push
call
imul
pop
sahf
xchg
add
aas
aas
adc
push
mov
adc
pushf
pusha
mov
sub
pushf
push
movb
call
std
xor
push
sahf
cmpsl
sbb
stc
add
adc
mov
jo
mov
jne
aad
inc
adc
in
daa
out
out
sbb
in
gs
add
data16
jo
orl
xor
mov
adcl
sbb
sub
inc
lods
loop
xchg
scas
mov
divl
or
xchg
lret
mov
sti
lds
push
mov
push
lea
cmp
cli
jns
mov
jo
test
add
fwait
mov
xor
mov
testb
inc
daa
in
mov
iret
fbstp
fsubrs
fcoms
ljmp
push
xchg
pop
test
imul
cmp
flds
leave
pop
add
test
pop
stos
jno
mov
mov
inc
pop
icebp
out
pop
sti
dec
pop
rcll
fstps
dec
rcr
or
pop
icebp
ror
leave
inc
pop
out
loop
fdivs
mov
outsb
js
and
mov
fsts
jo
jmp
cmc
jmp
push
lcall
mov
shrb
xchg
int3
bound
mov
hlt
fistpl
test
mov
and
adc
sub
test
jmp
movzbl
sub
call
or
lods
fwait
lea
je
adc
pop
aas
or
in
out
roll
daa
lods
popa
ret
inc
cmc
fcomps
pop
or
int
sub
lea
sbb
pop
fisttpll
inc
cmpsl
mov
adc
int3
popa
out
aad
jge
scas
push
les
lret
dec
or
out
mov
test
sub
flds
mov
in
mov
call
call
call
cltd
pop
ja
xor
lret
ds
lret
ror
xor
jns
pop
lcall
test
push
inc
iret
fistpll
jle
or
dec
pop
ljmp
adc
into
adc
movsb
add
pop
fsubrs
jle
std
cmpsl
cmp
pushf
daa
popa
add
testb
fstl
push
call
aad
jl
iret
push
shld
btr
mov
clc
call
sub
push
enter
or
int3
xlat
imulb
adc
sub
sub
cld
jmp
mov
inc
inc
sbb
lock
stc
sahf
or
adc
rolb
clc
lods
mov
test
push
loop
fimuls
push
mov
cmc
call
pop
cmpsb
clc
adc
cmc
dec
sub
mov
std
jle
cmp
sahf
mov
rcrb
in
inc
mov
and
pushl
aad
bound
sub
loope
jg
push
call
mov
push
call
lods
in
lea
call
pusha
call
pushf
test
bt
neg
pusha
push
pushf
pushl
inc
lea
jle
not
pushf
dec
cmc
mov
not
jmp
bts
bswap
add
mov
jmp
or
jge
lods
pop
sub
imul
mov
cmp
and
mov
sub
outsl
loop
mov
sbb
je
xor
rcrl
jns
mov
or
movsl
pop
inc
pop
jl
sahf
dec
inc
lea
jbe
outsb
xor
and
call
pushf
adc
pushf
pusha
lea
jae
call
xchg
and
jmp
mov
mov
lahf
and
sub
xor
loopne
sahf
inc
je
mov
std
fs
fwait
push
sbb
inc
clc
and
arpl
pop
bound
adc
jne
cld
stos
jnp
lea
in
add
pushf
fdivrs
cmc
dec
iret
fistpll
add
adc
fimuls
mov
xchg
jl
adc
jae
daa
and
rclb
aad
or
rcr
push
out
cmpsl
push
dec
lods
sbb
add
out
jp,pn
and
fldl
int3
scas
push
push
push
jle
shl
xchg
daa
mov
sar
or
mov
movb
stc
xchg
xor
btr
bswap
movzbw
mov
cmc
cmc
sub
pushf
pusha
jmp
cmp
push
lea
je
shld
mov
cmp
push
add
stc
cmc
stc
call
pusha
lea
ja
not
call
outsl
fsubs
sub
in
popa
adc
jns
inc
pop
subb
mov
push
mov
and
jecxz
cmp
jnp
cmp
ss
movsl
mfence
subb
dec
and
xchg
jp
cmc
and
xchg
iret
sub
mov
outsl
inc
je
pop
hlt
inc
mov
aad
push
push
aad
adc
jle
fstpt
push
call
jns
dec
dec
ljmp
shlb
sbb
lea
push
call
icebp
xchg
hlt
xchg
fs
and
repz
lea
xchg
sti
test
xchg
orl
push
into
lods
fsub
test
pop
lahf
aam
cmpsb
cmpsb
or
mov
popf
lea
xchg
lcall
lcall
mov
shrb
mov
jge
xor
lret
mov
imul
repz
xor
shrb
sub
push
push
jnp
pop
aas
cmp
cmp
popa
daa
sbb
inc
pop
inc
adc
jl
or
xor
pop
inc
ficoml
sbb
jg
stos
adc
lods
dec
shll
aad
pop
sub
mov
fsub
into
fbstp
lods
sbb
push
mov
dec
fsubrl
sub
add
imul
push
and
imull
push
xlat
xor
cmc
lods
xchg
mov
dec
mov
and
les
fwait
icebp
pop
lea
outsb
fstl
pop
jb
push
sbb
stos
mov
in
stc
daa
add
pop
inc
ficoml
add
out
lahf
pop
gs
jmp
mov
add
in
fisttpl
cmp
leave
mov
popa
cmp
cmp
mov
and
pushw
pop
in
aad
add
xchg
jp
in
sub
add
mov
push
pushl
ret
push
call
je
jmp
ljmp
fnstcw
sbb
xor
push
push
mov
pushf
mov
pusha
mov
pushf
pushl
pushl
ret
lea
jne
stc
cmp
pusha
cmpb
pusha
call
push
adc
jbe
push
adc
fwait
pop
mov
loope
cli
scas
xor
testl
repnz
dec
arpl
jae
push
dec
add
imul
dec
inc
fiaddl
ret
divl
xchg
sbb
daa
sub
mov
push
pop
loope
sbbb
inc
xchg
fstpl
push
enter
ret
jp
mov
inc
roll
ljmp
jbe
hlt
leave
mov
or
fldenv
out
push
call
lret
mov
lea
ss
call
ficoml
jb
pop
std
enter
dec
sbb
mov
xchg
mov
repnz
jmp
nop
pop
xchg
dec
xchg
aam
push
add
lret
cld
mov
pop
pop
in
loope
adc
fsub
fs
jno
out
jo
jge
push
mov
jecxz
movsb
and
sub
aam
popa
fists
or
mov
add
mov
rcrb
cmp
in
roll
xor
mov
dec
pop
push
stos
pop
outsl
roll
sbb
test
sbb
sub
mov
js
mov
mov
push
dec
dec
lods
add
call
jns
movsb
packssdw
push
insb
sub
fldt
mov
push
lods
pop
and
add
sub
icebp
test
out
bt
bt
test
pushf
pushf
push
call
push
call
xchg
popf
sbb
gs
in
mov
push
mov
xchg
call
push
call
cli
push
sete
lods
mov
setns
jmp
daa
cmc
or
push
cld
sub
sarb
dec
pusha
loop
sbb
inc
cmp
dec
cmp
sub
lret
adc
inc
cs
enter
fadds
jp
loope
gs
xchg
std
sbb
xchg
mov
cs
fstps
mov
sub
call
add
les
das
insb
xchg
ror
mov
imulb
int
repz
andb
and
add
lcall
call
ret
and
cwtl
outsl
mov
inc
arpl
ja
cmp
add
xlat
fprem1
mov
fwait
cmpsl
and
add
aas
jnp
sub
mov
pop
or
sub
pop
arpl
xchg
aam
je
inc
cmp
jae,pt
inc
pop
gs
adc
mov
xor
popa
adc
jge
xor
mov
and
add
dec
push
call
les
rcrl
add
lods
mov
dec
gs
stos
adc
push
push
sub
pop
sti
jno
pop
sub
add
rcr
dec
mov
push
add
add
cmp
push
sub
adc
add
in
hlt
and
pop
sub
add
sarb
stc
pusha
cmp
cmp
add
pop
es
cld
call
aas
add
mov
fs
sub
adc
add
das
cld
in
xor
sub
add
add
cmp
repz
sub
add
rcr
divb
push
sub
add
add
clc
pusha
icebp
mov
pop
sub
add
add
das
or
test
add
add
push
sub
add
test
cld
das
inc
push
sub
andb
popf
repz
sub
add
inc
dec
sub
stc
repz
sub
add
rcrb
repz
pop
sub
add
ror
stc
jl
pop
sub
add
pushf
js
cmp
add
add
lods
lock
add
add
pusha
jne
pop
sub
add
inc
jp
negl
add
add
push
sub
add
mov
sub
push
add
add
repz
sub
add
sarb
std
in
repz
sub
add
inc
dec
xor
inc
push
pop
sub
sbb
add
and
je
pop
sub
pop
cmp
lret
sbbb
add
add
repz
vmulsd
or
add
inc
mov
pop
sub
add
sarb
negl
pop
sub
sbb
add
daa
sti
gs
sub
add
inc
mov
push
sub
add
lock
sti
scas
aad
iret
rcll
je
and
rcrl
enter
pop
scas
fsubs
dec
imul
sbb
rorl
stos
pop
fimull
pop
xor
fs
inc
or
mov
inc
or
int3
pop
test
cmc
inc
repnz
ror
mov
lret
lds
sti
fidivrs
push
pop
pop
xchg
sub
add
imul
jge
out
loope
outsl
test
in
xchg
add
jns
push
jno
movb
lea
je
sub
clc
mov
pusha
shr
add
mov
cmp
call
push
call
jge
pop
dec
cwtl
inc
arpl
cmp
pop
aaa
jecxz
push
inc
daa
cmpsl
js
fildll
xor
cwtl
mov
xchg
test
jle
imul
sbb
cmp
lcall
and
xorb
adc
setl
push
mov
push
aas
mov
dec
dec
mov
jle
cmp
fcmove
idiv
lea
scas
add
sbb
int3
das
pop
push
cmc
mov
incl
fisttpl
out
mov
push
jge
ss
jae
cwtl
loopne
scas
pop
sarb
push
lret
call
stc
mov
cmc
lret
clc
mov
fsts
ret
jp
out
mov
pop
push
mov
pop
mov
loop
and
js
sti
sub
mov
rclb
mov
add
xchg
pop
cmp
jbe
add
push
push
jne
int
push
cld
sbb
into
push
pop
sub
adc
and
xchg
xchg
mov
addr16
out
mov
xchg
repz
hlt
clc
imull
xorb
aad
sub
cmp
cmp
adc
dec
mov
adc
inc
sti
pop
lods
push
cli
shl
add
push
call
pop
inc
cmp
shr
pushf
push
pusha
lea
je
call
inc
movb
pushl
push
not
movb
dec
stc
pushl
mov
not
bt
pushf
cmp
jmp
iret
pop
rolb
jle
cld
jecxz
adc
push
in
in
mov
mov
mov
mov
sti
lea
mov
divl
adc
or
inc
ret
lea
dec
push
repnz
mov
pop
test
jbe
lret
inc
or
jbe
ret
push
xor
insb
mov
lret
cmp
mov
inc
loope
cmp
mov
dec
aad
pop
sbb
es
sub
sbb
mov
lea
lea
je
sub
movsbl
movzbw
add
rcr
mov
rcr
btr
btr
mov
pushf
bsr
rol
mov
call
popa
inc
scas
mov
mov
adc
jb
ss
enter
add
roll
push
hlt
dec
dec
ret
or
enter
inc
insl
add
pop
xchg
xchg
repnz
add
xchg
adc
cmpsl
or
sub
push
mov
orb
sbb
cmp
int3
int
xchg
sub
imul
fwait
dec
cmpsb
fs
pushf
or
stos
dec
stc
test
cwtl
fnstenv
and
xchg
sub
xchg
cmc
repz
scas
sub
dec
inc
dec
popf
js
fcomip
push
adc
add
inc
out
mov
fisubrs
xlat
cmp
push
push
mov
push
mov
xchg
jecxz
jmp
in
int3
mov
ret
push
rcr
pop
fisttpll
mov
adc
out
pop
in
cli
sub
jns
orl
mov
fdivrs
adc
and
sbb
inc
ret
sub
out
mov
mov
sbb
inc
dec
fsubrs
aaa
daa
inc
mov
xor
mov
mov
xor
push
xlat
lea
jmp
jmp
pop
pop
insb
into
fistps
out
in
adc
mov
js
inc
push
out
and
mov
iret
sbb
push
in
xlat
sbb
arpl
sub
or
cmp
scas
out
cmp
sbb
pop
gs
push
and
mov
std
xchg
shll
fwait
pop
out
and
subb
daa
mov
push
call
jle
fstpl
or
mov
pop
outsl
aas
pop
rorb
fmull
pop
sub
pop
jb
pop
subl
pop
cwtl
xlat
cmpsl
int
xor
int
enter
dec
xor
aaa
and
and
add
fimuls
push
popf
push
lds
cmp
shrl
outsl
sbb
sbb
and
mov
sub
outsl
xchg
dec
pop
mov
push
call
dec
push
call
and
mov
in
xchg
add
cltd
les
or
lds
and
mov
push
dec
inc
inc
out
jp
jb
push
out
cmpsb
lcall
cs
out
mov
hlt
aaa
js
and
cmp
sub
adcb
daa
mov
dec
loopne
cmpb
test
pop
stc
pop
rcrl
pushf
cwtl
in
iret
push
rcrl
xor
add
repz
push
dec
mov
scas
bound
push
push
jmp
push
js
pop
pop
xchg
aaa
lea
pusha
cs
jne
sbb
dec
dec
cltd
stos
jmp
mov
out
sbb
movntq
filds
int
mov
inc
mov
sbb
add
jge
arpl
sub
push
pop
xor
es
mov
cmc
dec
int3
pusha
in
mov
dec
mov
xor
inc
jmp
stc
cmp
jmp
push
rep
pushl
jmp
pop
sbb
repz
and
xor
cmp
jno
into
pop
push
popa
xchg
popa
ds
loope
adcb
pusha
cmpsb
lahf
mov
push
mov
fadds
shl
mov
out
fwait
mov
es
pop
xor
pop
lcall
push
pop
addb
lods
push
push
or
lea
add
je
inc
add
shrb
iret
sbb
add
pop
dec
shld
shr
rol
dec
mov
add
shl
add
stc
neg
sbb
xor
add
shl
mov
cmc
push
shr
pushl
cmp
call
pusha
lea
je
test
clc
push
add
push
pusha
pushf
lea
jmp
pop
sbb
pop
aam
jl
lcall
rcll
aam
cmc
dec
bound
pop
ljmp
loopne
jecxz
or
mov
dec
mov
fmuls
cmp
xor
cmp
inc
cmp
push
lret
adc
test
mov
jg
adc
rclb
ljmp
cs
int3
mov
and
push
mov
dec
pop
call
push
push
add
fucomp
ds
iret
leave
data16
push
in
pop
mov
push
sbb
pop
ja
divb
jbe
jbe
inc
add
shrl
fsubl
xor
pop
das
pushw
dec
mov
js
fnsave
data16
out
dec
and
cmp
loop
gs
outsb
dec
frstpm(287
mov
call
test
int
or
rol
fidivs
jae
idivl
into
jbe,pn
jb
cltd
mov
fimuls
dec
and
adc
test
mov
xchg
and
ficoml
mov
mov
mov
mov
sub
movsl
fs
test
mov
data16
xchg
stos
sahf
dec
xlat
in
jns
repz
sub
or
cmp
cmp
ret
inc
sbb
jg
repz
add
fwait
aam
inc
pop
movsb
jl
jo
fsubrl
push
into
fistps
divb
fimuls
lret
push
and
scas
ljmp
pop
xchg
iret
fstpt
add
dec
cmpsb
shlb
and
cmc
fildl
sbb
ljmp
outsl
test
sbb
add
adc
lea
call
push
adc
pushf
call
and
jp
adc
dec
call
fwait
mov
mov
cwtl
cld
xor
adc
dec
shlb
inc
gs
inc
mov
adc
and
out
pop
cmp
sbb
fistpll
mov
dec
js
jecxz
jns
push
call
xor
push
sub
cwtl
sbb
les
mov
mov
cld
mov
lahf
push
cld
stc
xor
repnz
jne
lea
movzbl
call
lea
call
push
lea
jae
mov
mov
dec
mov
inc
jmp
push
call
jp
sbb
lret
mov
insl
xorl
mov
icebp
cmp
sbb
pushf
mov
cmc
pop
hlt
pop
or
xor
fdivrp
outsb
xorb
shrb
hlt
jmp
int3
aas
mov
sub
daa
xchg
mov
int3
push
push
test
lods
push
xorb
subl
lahf
push
test
add
add
cmc
bt
add
push
dec
jmp
push
call
pop
jne
in
pop
inc
js
outsb
mov
aam
sub
andb
fsubrp
mov
gs
iret
fdivp
cmp
xor
mov
mov
lock
rorl
lods
mov
inc
in
push
sarl
pop
mov
jle
bnd
dec
jne
mov
push
jbe
pop
gs
popf
subb
push
sub
add
bound
jmp
pushf
mov
movzbw
push
mov
pushf
pusha
pushl
pushl
ret
pusha
lea
jne
mov
mov
mov
not
pushfw
setle
jmp
not
call
setae
mov
not
pushfw
popw
jmp
push
lret
mov
lea
and
mov
push
fimuls
scas
sti
sub
in
sub
sti
je
into
filds
mov
sub
clc
fisttpll
pop
mov
aaa
scas
add
rorb
jbe
mov
mov
mov
dec
add
adc
lahf
test
inc
xor
and
xor
dec
xor
adc
or
js
imul
cmp
sbb
sbb
fistps
int3
inc
lods
fcomps
jg
dec
lock
sbb
adc
adc
cmpl
push
inc
adc
std
hlt
jg
xchg
cmpsl
push
fsubs
push
lcall
fisubrl
xor
scas
cltd
outsb
cltd
sbb
lods
mov
jle
adc
fdivs
inc
push
lahf
inc
dec
leave
js
repnz
mov
fildl
test
xchg
in
mulb
roll
cwtl
int
jae
push
repz
cltd
lret
aad
mov
sbb
xchg
pushf
std
daa
push
push
rcl
jae
outsb
sbb
mov
push
sbb
adc
dec
push
dec
shrb
sub
inc
mov
es
in
push
call
push
xor
xor
bt
cmpl
push
lea
je
dec
ror
mov
shl
sub
movzbw
shr
push
mov
dec
sbb
add
sub
and
add
sub
rcl
neg
rol
sub
mov
stc
shr
clc
cmc
cmp
push
call
push
call
stc
repz
jecxz
inc
dec
int
cmp
and
sub
in
jmp
pop
xor
cs
or
adc
in
pushf
push
mov
stc
nop
or
fnsave
pushf
ds
dec
fmuls
sbb
and
add
xchg
cmp
jns
scas
clc
mov
and
ljmp
loop
push
call
adc
sbb
pop
mov
xchg
push
pop
and
or
fisttpll
mov
shll
xchg
shlb
pushl
into
filds
cltd
cld
xchg
fimuls
sbb
nop
ss
pop
inc
sub
int
pop
add
and
loop
pop
inc
add
aas
sarl
jns
gs
in
push
xchg
xor
mov
dec
pop
xchg
inc
push
int
and
push
jp
mov
stos
arpl
xlat
movw
pushf
sub
pushl
push
call
cmp
push
pushf
lea
jae
call
push
call
icebp
stos
dec
imulb
xchg
xor
aaa
adc
mov
test
gs
fcmovne
push
call
mov
addr16
mov
push
imul
daa
cld
add
movsb
sbb
push
jne
mov
std
jns
filds
sub
lds
mov
xor
pop
test
push
jnp
mov
fsub
movsb
test
dec
sti
leave
aad
cwtl
cs
iret
addl
xchg
out
pushl
lea
jae
pushf
push
inc
dec
mov
push
inc
inc
not
call
clc
cmc
pusha
and
add
jbe
push
cmc
pushf
add
pushf
lea
jmp
push
call
adc
or
jnp
inc
sub
inc
ja
aam
cltd
fcomps
and
repnz
fildl
ret
cltd
into
pop
test
mov
adc
inc
clc
out
std
subb
sub
pop
or
pop
cli
and
je
cmp
sbb
mov
fs
jg
fisttps
into
in
jmp
xor
ret
iret
std
out
inc
fcomps
lahf
nop
add
mov
mov
push
fimuls
or
adc
add
data16
out
popf
dec
cmp
push
xchg
fcomip
jns
in
loopne
roll
ret
jp
mov
pop
mov
mov
push
scas
push
xor
in
ja
cmp
sbb
shll
in
pop
jno
fwait
adc
stos
ret
xchg
xlat
sbb
pushf
lea
ja
call
mov
jmp
daa
shrl
popf
leave
push
push
in
and
inc
out
ljmp
sub
mov
into
inc
cmp
dec
mov
data16
pop
jae
and
ret
and
and
iret
xor
mov
cld
pop
mov
push
dec
sbb
imul
test
pop
mov
or
cmc
imul
cwtl
sbb
imul
lea
aaa
push
call
dec
sti
enter
lahf
add
subb
push
lods
hlt
pushf
pushl
pushl
ret
outsl
idivl
aam
jno
dec
jo
popf
and
xchg
pop
mov
sbb
push
xchg
dec
xchg
mov
jae
push
sbb
in
repz
out
cli
clc
data16
dec
in
icebp
test
outsl
setl
jnp
jnp
mov
push
dec
pop
xlat
ret
add
fcmovu
gs
mov
in
push
hlt
inc
push
aas
sub
pushf
lea
jae
stc
stc
bt
pushf
xor
jmp
add
dec
gs
popa
addr16
outsl
js
add
lods
gs
xchg
push
jmp
mov
or
or
push
std
inc
in
js
jg
popf
xchg
fsubr
into
fistpll
sbb
jmp
gs
enter
and
int
jl
xor
jmp
scas
add
jecxz
sub
dec
or
mov
push
xchg
in
lock
and
inc
pushf
or
mov
cmp
sbb
dec
repnz
jmp
push
mov
sbbl
loope
adc
pushf
lcall
idiv
movsl
icebp
in
clc
mov
mov
into
fbstp
das
mov
dec
sbb
push
or
hlt
lods
or
and
test
mov
dec
fists
and
push
loope
mov
dec
out
sbb
dec
mov
scas
jo
icebp
insl
das
ficoml
sub
repnz
sub
or
scas
or
cmpsl
jge
scas
ficoms
cli
das
mov
cmp
shrb
je
fbstp
pop
jg
xlat
push
fst
fnstsw
das
outsb
das
cmc
fsubs
cmc
test
jb
lods
scas
push
and
cmpsb
pop
scas
fwait
addr16
or
fisubs
test
mov
outsb
cmpsb
mov
and
inc
pop
jmp
sub
cmp
sub
push
enter
adc
movb
mov
call
push
call
sub
in
repnz
add
add
scas
mov
call
pop
jne
enter
aaa
pop
test
push
fwait
push
shrb
and
data16
in
sbb
cmpsb
insl
sub
jno
les
sbb
sub
rorb
aas
cmp
dec
xor
and
inc
dec
enter
clc
into
loope
fs
outsb
dec
insl
xor
cmp
cmpsb
jnp
xchg
dec
rcl
outsb
hlt
pop
dec
mov
scas
xchg
push
sub
jp
xor
adc
push
call
mov
cmp
in
push
dec
hlt
xor
or
mov
xor
fildll
mov
repnz
inc
cmc
hlt
shll
cmp
add
insl
dec
or
push
and
in
daa
into
insb
fisttpll
mov
xchg
sbb
stc
cmc
loop
pop
call
leave
jp
inc
in
add
jbe
jo
in
lret
xchg
testb
sub
inc
push
and
sbb
aas
aaa
cwtl
xchg
pop
xchg
add
pushf
pop
mov
nop
ds
sahf
fisttpll
fs
ficompl
into
fbstp
aad
mov
vorps
dec
jecxz
mov
ds
insb
jle
es
pop
data16
mov
push
jbe
test
xchg
outsb
aaa
popf
mov
push
mov
fucomip
sbb
notl
jae
pushf
jge
inc
cli
sti
loopne
jp
push
call
test
test
cmp
mov
and
xchg
cli
loope
insb
push
mov
pop
dec
das
in
std
cmp
in
dec
icebp
fs
adc
addl
imul
dec
ss
cmp
xor
mov
push
rcrb
lods
mov
into
icebp
cmp
movsl
or
jp
in
mov
push
jae
mov
inc
cltd
dec
xchg
sub
insb
jp
rcrl
frstor
sub
xchg
pusha
divl
aas
pop
loop
or
fwait
rcrb
daa
jp
filds
dec
add
dec
cli
test
cmc
adc
stos
inc
or
flds
cwtl
cs
xor
popa
push
loopne
jg
sbb
stos
xor
xchg
sub
or
pop
pop
push
stos
xor
sarb
mov
loope
push
shll
scas
dec
sbb
leave
popa
decl
sub
mov
adc
jl
pop
fs
out
add
xchg
inc
dec
cli
dec
add
enter
je
cmp
sbb
add
jmp
mov
dec
push
mov
jg
mov
cwtl
leave
shll
mov
test
sub
jae
push
xor
iret
mov
icebp
cwtl
aam
enter
dec
jg
lods
pushf
pushf
dec
stc
neg
pusha
jmp
push
mov
jl
mov
repz
xor
fisubl
add
shlb
mov
mov
inc
push
adc
jae
test
mov
pusha
mov
test
mov
into
add
cmp
jecxz
or
aas
jb
ds
jb
mov
jne
test
pusha
xor
outsl
mov
stc
rclb
jmp
hlt
cmp
filds
stc
aaa
adc
fisttpll
dec
jmp
and
mov
mov
xchg
imul
out
shll
jl
stos
outsl
inc
pop
movsb
jae
daa
xor
add
cmp
inc
xchg
mov
jp
push
imul
data16
add
mov
add
out
mov
adc
jae
gs
lcall
push
call
jbe
and
pop
jp
movsbl
lea
pushl
mov
pusha
movl
movzbl
mov
mov
call
push
call
mov
mov
daa
add
rclb
add
ljmp
mov
call
adc
cmpsl
in
jo
stc
in
cmp
add
vpcmpgtd
pop
jp
inc
call
push
call
mov
stc
push
not
clc
bt
pushf
movw
sub
pushf
lea
call
bt
pusha
cmp
jmp
call
push
mov
xchg
test
repnz
inc
lcall
repz
repnz
sub
aas
jg
mov
fildll
and
fcoms
pop
fimuls
in
subl
ja
clc
inc
fsubs
mov
imul
xor
ja
pop
jb
jmp
and
lret
xor
pop
scas
inc
cltd
push
call
das
inc
call
xchg
push
setne
bsr
neg
lea
call
adc
pusha
movb
lea
jmp
push
call
cli
test
dec
in
out
add
in
mov
jb
in
or
add
std
repnz
in
push
sbb
out
or
pop
ror
mov
pushl
pushf
xchg
bsf
and
mov
stc
sub
jmp
jmp
adc
sbb
std
das
mov
addr16
inc
sub
fsubl
imul
aas
into
leave
ret
jecxz
mov
push
xor
add
ret
xchg
mov
and
mov
xchg
inc
adc
lea
sub
imul
adc
int
push
push
sahf
xchg
js
out
aad
shrb
loope
dec
adc
jae
movsl
and
in
mov
aaa
fs
jbe
sub
lods
mov
mov
dec
push
xchg
call
ret
jg
insb
je
xor
or
cmpsl
aas
add
and
sbb
shrl
lock
or
mov
addr16
cmp
bound
xchg
xchg
and
jae
lret
idivl
sarl
loop
je
push
cmc
xor
jae
repnz
xor
loopne
dec
jbe
push
inc
mov
cmp
or
gs
xor
ret
dec
dec
mov
pop
jge
into
pop
pop
dec
bound
dec
mov
adc
cmp
sbb
inc
frstor
sbb
sbb
js
adc
push
lods
imul
inc
dec
mov
or
dec
lahf
push
mov
js
push
mov
repnz
lea
jnp
push
lea
jne
stc
shrd
mov
sub
cmc
btr
sub
cmp
rcl
mov
cmp
bt
pushf
sub
call
push
call
gs
test
jmp
mov
xchg
scas
xor
loop,pt
daa
cld
xor
addb
into
fistps
jns
or
fimuls
xchg
or
xor
adc
xor
fisttps
xor
jnp
inc
inc
mov
les
cld
lret
insl
lahf
xor
fwait
jb
shrl
gs
cs
and
shr
fld
inc
xchg
adc
out
add
mov
popf
mov
cmp
mov
rorb
xor
loopne
int3
sbb
cs
adc
or
pop
jae
pop
adc
push
pop
fisubrl
dec
push
jle
jecxz
jp
push
or
jno
jle
imul
xchg
inc
add
cmp
sbb
data16
or
idivb
jbe
jbe
pop
dec
loope
pushf
add
pushf
pushf
pushf
lea
jo
jne
call
dec
mov
ds
mov
hlt
mov
jp
lcall
int
push
les
mov
inc
cltd
jecxz
xlat
jmp
sbb
cmpsl
int3
or
lahf
shl
dec
rcrl
cmc
inc
std
pop
mov
les
jle
push
adcb
pop
rcrl
clc
dec
dec
test
xchg
fidivs
inc
adcb
push
mov
fstpl
pop
les
jmp
jmp
push
call
sarl
dec
stc
stc
test
mov
call
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
repnz
mov
pushf
lea
jne
pushf
movsbw
movsbw
bswap
movb
pushf
mov
lea
setge
lahf
cwtl
lea
movb
push
call
mov
jae
out
fstpt
mov
je
jb
stos
insb
aaa
test
mov
jl
sub
dec
out
rcll
clc
pop
leave
inc
dec
pop
aad
jp
dec
repz
xor
iret
jg
sbb
xor
inc
lret
leave
mov
pop
out
rcrl
mov
aaa
enter
jg
cld
push
out
clc
pushf
adc
mov
out
sub
or
cwtl
dec
xchg
mov
dec
stc
xchg
sbb
jb
les
sbb
sub
add
imul
add
rcr
pop
mov
inc
and
mov
xor
dec
rcrl
and
ds
stos
cmp
hlt
test
push
push
iret
fistpll
mov
sub
inc
stos
jo
mov
clc
sub
dec
addr16
or
add
pop
movsb
out
xchg
lea
shl
add
imul
je
fistl
outsl
lret
mov
jnp
pop
add
popa
outsl
fs
mov
add
fildll
inc
int3
int3
movsb
mov
sub
dec
fidivl
fadds
inc
and
bound
fwait
movsb
and
adc
mov
add
ficoms
xor
repnz
xchg
xor
cmp
cmp
aad
push
cmpsl
adc
mov
push
add
sbb
mov
pop
dec
pop
aam
xor
add
xchg
push
fbld
mov
adc
out
mov
insl
sbb
popa
mov
xchg
out
xor
sub
add
push
mov
xlat
je
testl
gs
jno
mov
add
fwait
and
xchg
mov
push
loope
xorb
mov
mov
rolb
imull
sbb
daa
mov
mov
daa
outsb
pushf
stos
pusha
pushf
pushf
lea
jmp
push
call
sub
pusha
pushl
mov
xchg
rol
not
sub
jmp
push
call
adc
add
sub
stos
testl
push
add
call
pop
push
inc
cwtl
fs
dec
sbb
lock
xor
adc
xor
cmp
cmp
mov
into
loope
mov
iret
pop
push
inc
popf
fs
push
sbb
pop
add
sbb
sbb
cmc
xor
adcl
ds
call
ljmp
cld
out
mov
repz
cmp
out
movb
dec
pushl
call
mov
cmc
addl
pusha
pushl
pushf
lea
jmp
mov
pusha
lea
je
push
mov
pusha
movb
lea
jmp
xor
std
sub
push
ds
xlat
orl
stc
xor
pop
aad
int3
arpl
sbb
addl
nop
xlat
js
mov
in
sub
lcall
test
aas
notl
call
sub
adc
adc
inc
dec
cmovbe
jno
xor
cmp
outsl
mov
pop
add
leave
push
call
push
push
shll
insb
cs
insb
add
imul
jle
mov
and
mov
in
xchg
mov
out
test
scas
vpaddd
int
add
leave
and
xor
and
dec
fdivs
dec
loope
jo
nop
stos
mov
scas
and
push
and
bound
lds
xchg
mov
loopne
lock
bound
out
or
xchg
adc
cmp
pusha
sub
pushf
pushl
stc
cmp
pushf
lea
jae
push
pushf
lea
jmp
push
call
xor
call
push
and
iret
call
mov
lret
mov
es
addb
inc
push
dec
iret
lret
xor
add
mov
rcrl
out
mov
sub
mov
insb
cmc
in
insb
and
dec
repz
test
xor
mov
outsl
and
lock
scas
in
xchg
test
and
adc
push
jbe
sbb
or
sahf
pop
push
outsb
insb
imul
adc
inc
dec
mov
idivl
fsubs
pop
movsb
inc
jno
jae
push
gs
mov
pushf
call
push
call
mov
dec
fldt
rorb
gs
xor
call
add
movb
pushf
popl
jmp
push
dec
rcl
clc
ror
setge
push
neg
rcl
and
not
mov
call
mov
mov
call
mov
call
cmc
stc
add
clc
cmc
lea
ja
pusha
neg
pushf
sub
test
stc
clc
movb
neg
pusha
pushf
push
sub
jmp
mov
call
mov
call
movsbw
pusha
inc
sbb
not
xor
pushf
movsbw
rol
sar
bswap
not
shrd
xor
test
bt
bswap
mov
clc
cmp
jmp
push
bt
add
call
bswap
das
aad
movzww
stc
cmc
jmp
call
pop
movsbw
push
pusha
movsbw
pusha
mov
mov
pushf
lea
movsbw
xchg
setge
xchg
lea
jne
xchg
pushf
or
ror
rcr
push
bt
clc
sub
not
push
adc
add
add
push
xchg
btr
pusha
pushf
add
xchg
movsbw
clc
bsf
movl
pushf
stc
inc
adc
mov
cmc
bsf
rol
bswap
call
mov
pushf
lea
jmp
pusha
mov
mov
pusha
movw
mov
push
pushf
pushl
mov
push
jmp
mov
push
pushf
lea
jmp
call
pushl
push
pushl
popl
movw
movb
lea
jmp
pushf
mov
bswap
pop
cwtl
pusha
mov
call
jmp
pushf
mov
call
jmp
call
call
pushl
mov
pushf
pusha
jmp
inc
bswap
jmp
pushf
movsbw
cwtl
cwtl
mov
pusha
pusha
call
movl
pushf
mov
movb
lea
jmp
pushl
popl
movb
pusha
lea
jmp
clc
sub
pushl
movl
neg
call
mov
pusha
jmp
jmp
add
stc
jmp
pushl
pushf
mov
pushl
popl
pusha
movb
mov
lea
jmp
movzbl
call
push
pushf
popl
call
push
mov
mov
pushf
jmp
add
bt
stc
bt
add
pushf
cmc
neg
bt
pushl
stc
ror
mov
jmp
mov
movb
pusha
pushl
mov
mov
lea
jmp
pushf
pushf
call
jmp
pushl
popl
mov
push
lea
jmp
aas
bts
mov
test
add
sub
mov
mov
jmp
movl
push
call
sub
pushf
bt
stc
sub
pushl
call
mov
movw
mov
push
pushl
ret
movb
pushf
inc
pushf
call
lea
jge
pusha
mov
mov
pushf
lea
jmp
shr
call
call
ror
cmc
xor
stc
push
sub
mov
mov
pushf
lea
jmp
call
jmp
cwtl
clc
cmp
test
push
sub
pusha
jmp
inc
mov
inc
mov
pushf
stc
shl
cmc
add
add
adc
push
setle
xor
dec
pusha
sub
shrd
call
shld
test
bts
mov
shl
mov
bt
clc
call
mov
pushl
pusha
pushf
mov
mov
jmp
add
jmp
push
mov
jmp
lea
jne
jmp
mov
pusha
lea
jmp
xor
mov
cmc
mov
pushf
stc
pushf
pushl
add
pusha
jmp
pushf
popl
call
mov
pushf
popl
mov
pushl
popl
pushl
lea
jmp
bts
movzbw
mov
movzbw
shl
pusha
seto
add
not
rol
sbb
pushl
xor
not
jmp
xor
jmp
xor
clc
ror
add
jp
xor
stc
cmp
pusha
cmc
cbtw
jmp
jmp
shr
pushf
xor
bsr
rcr
xor
dec
call
pusha
jmp
call
seta
sub
not
sub
movzww
pusha
cmc
test
pushf
add
clc
push
call
rol
sub
jnp
not
call
pushf
movl
pushl
jmp
pushf
mov
push
lea
jmp
push
shr
movl
pusha
mov
push
mov
call
add
call
movsbw
shrd
pusha
bswap
mov
cmc
movb
mov
add
jmp
jmp
call
daa
and
btc
rcl
mov
bt
stc
push
movb
sub
pusha
pusha
mov
pushf
pushf
push
lea
jmp
pusha
lea
je
call
pusha
mov
pushf
mov
pushf
mov
movw
pushl
pushf
popl
call
pushl
popl
pusha
push
mov
movb
lea
jmp
movzbl
ror
jmp
test
xor
stc
cmc
clc
bt
add
pushf
call
add
pusha
pushf
pushf
mov
lea
jmp
sar
neg
bsr
lea
clc
jmp
xchg
clc
ror
lea
bsr
sub
bt
bswap
das
call
push
dec
not
seta
bswap
pusha
rol
sar
adc
or
lea
bt
neg
shr
adc
sub
shld
mov
movsbw
seta
xchg
mov
rol
xchg
neg
shr
add
jmp
jmp
not
movb
inc
cmp
sub
jge
push
clc
xor
call
btr
stc
mov
pushl
rol
test
bt
bswap
stc
cmp
add
stc
neg
jmp
pushf
mov
add
push
pushf
add
seto
not
call
mov
movb
mov
pushf
jmp
mov
jmp
push
ror
movb
cmc
pushl
jmp
sar
shr
rcr
add
xor
pushf
not
rol
pushf
dec
pop
setl
rcr
rcl
ror
bts
ror
and
stc
shl
mov
call
call
pushf
popl
pusha
call
jmp
mov
pushf
call
pushf
mov
rol
jmp
cmc
add
call
cmp
bt
cmc
sub
call
pushf
push
mov
mov
pushf
movb
movb
lea
jmp
movw
push
mov
mov
call
clc
cmc
cmp
add
call
sar
shr
jmp
mov
pushf
mov
mov
mov
lea
jmp
not
test
clc
xor
push
mov
movb
push
pushf
sub
jmp
sar
mov
clc
movsbw
shl
lea
test
adc
movzbw
clc
xor
pushf
push
call
movl
inc
pushf
stc
sub
call
clc
pushf
add
mov
test
neg
bt
sub
bt
jmp
pushl
popl
pushf
lea
jmp
mov
pushf
lea
jmp
neg
test
cmc
pusha
sub
cmc
push
pushl
add
pushf
movb
pushf
mov
mov
pushf
movw
pushl
pushl
ret
push
mov
pushf
mov
lea
jmp
pusha
not
stc
jmp
jmp
btr
sub
mov
adc
shld
mov
lahf
shl
xor
test
mov
das
btr
cltd
shl
mov
xadd
stc
test
mov
bsf
pushl
popf
pushl
mov
not
lea
pusha
mov
pushf
movsbl
xchg
bswap
mov
movzbl
setno
mov
mov
movw
pushl
ret
pushf
popl
call
pushf
add
pusha
movb
lea
jmp
pusha
neg
mov
cmc
add
pushl
movb
mov
jmp
call
pusha
clc
pushl
popl
clc
stc
mov
add
clc
pushl
popf
push
mov
lea
jmp
call
setg
jmp
mov
pushf
push
movb
movb
lea
jmp
mov
jmp
sub
jbe
adc
mov
cmp
cmp
clc
sub
pusha
stc
shl
jmp
shr
push
movzbl
push
add
bt
xor
bt
pushf
cmp
sub
pusha
cmc
stc
push
xor
push
inc
cmc
pushf
call
pushf
popl
mov
push
lea
jnp
push
call
stc
cmp
call
movw
pushf
popl
push
pushl
popl
pushf
pushf
lea
jmp
jmp
movzbw
push
jmp
call
pushf
mov
pushf
mov
pushl
ret
test
add
push
stc
cmc
clc
mov
call
mov
bt
sub
pushl
mov
pusha
pushf
add
movb
lea
jo
push
push
pushf
popl
jmp
divl
pushf
push
pushf
mov
movl
jmp
inc
jmp
aaa
sub
sbb
mov
cmc
inc
pushf
btr
mov
mov
cmp
cmc
add
jmp
mov
jmp
jmp
xor
bt
add
pushf
cmp
sub
clc
push
xor
pushf
jmp
jmp
aaa
jnp
inc
jbe
out
idivl
push
jb
fstpt
adc
jns
jp
inc
sbb
dec
mov
sbb
jp
adc
jp
adc
shlb
out
js
data16
out
js
into
arpl
xor
jnp
out
mov
repnz
jns
xor
les
adc
adc
movb
les
push
jnp
rorb
jns
fstpt
push
mov
repnz
jnp
xor
js
dec
jae
les
js
dec
add
cmp
jns
xor
les
idivl
push
push
jp
dec
xor
js
adc
jp
adc
les
jnp
out
loop
out
jp
ljmp
les
jnp
fidivl
les
jp
ljmp
les
mov
jnp
ds
js
and
jbe
out
adc
jb
mov
sbb
jns
add
ds
jp
dec
jbe
out
and
add
ds
js
into
scas
jns
fidivl
js
fiadds
js
data16
out
js
out
jp
dec
add
ds
jnp
ds
jnp
outsl
jnp
xor
js
adc
jp
inc
scas
jns
fiaddl
jns
xor
les
xchg
jnp
dec
data16
out
jp
inc
jbe
out
js
push
xchg
jns
xor
les
inc
jns
sarb
js
sbb
jns
xor
jns
repnz
fimuls
jp
adc
jp
adc
jns
fstpt
push
arpl
inc
xchg
jnp
dec
jp
adc
les
and
stos
js
into
mov
fiaddl
rclb
les
jnp
jb,pt
js
push
mov
jnp
cmp
les
jp
ljmp
les
jnp
out
mov
loop
jns
idivb
out
adc
mov
loop
jnp
repnz
repnz
jnp
xor
jp
inc
jae
les
js
adc
jp
inc
pop
jns
xor
js
ds
repnz
jnp
xor
js
arpl
inc
mov
jns
add
mov
sbb
out
jecxz
les
js
ds
repnz
inc
push
jp
dec
add
ds
jp
adc
jp
adc
les
js
ds
jp
adc
js
push
add
jb,pt
out
jnp
out
js
ds
jnp
fidivrs
ljmp
les
arpl
inc
iret
js
and
js
ds
repnz
jnp
add
fstpt
push
jp
out
jns
add
mov
out
jp
inc
mov
fisubl
les
js
ss
jnp
jb,pt
les
arpl
xor
js
push
mov
jnp
ds
jp
dec
jp
adc
jnp
sar
jnp
ds
jnp
shlb
out
mov
loop
jnp
out
idivb
out
jae
les
jnp
loop
jnp
out
jnp
sbb
dec
mov
loop
jnp
out
jns
out
arpl
xor
jnp
xor
jp
inc
jp
out
jnp
loop
js
sbb
dec
data16
out
jnp
loop
js
into
mov
out
jp
dec
mov
loop
js
and
jp
push
outsl
jnp
xor
jns
xor
jnp
out
aaa
jnp
inc
mov
loop
js
add
cmp
jnp
loop
js
out
jp
loop
jp
inc
mov
loop
js
sbb
jp
ljmp
mov
mov
pushf
push
call
pushf
movl
mov
push
movw
pushl
lea
jmp
jmp
pusha
mov
pushl
call
add
mov
pushl
mov
mov
pushl
pushl
ret
pusha
pusha
pushf
pushf
popl
mov
jmp
cmc
sub
movw
push
mov
pushf
lea
jmp
jmp
push
xor
jmp
test
clc
cmc
xor
pusha
rol
test
test
call
jmp
bt
pushf
test
sub
jmp
cmc
movsbw
clc
movzbl
bswap
rcr
btr
lea
mov
stc
rol
pusha
call
test
test
stc
cwtl
pushf
mov
bt
pushf
sub
movb
mov
movw
pushf
lea
jmp
lea
jge
pusha
mov
mov
mov
pushf
lea
jmp
jmp
mov
pushf
pushl
lea
jmp
push
call
pushf
pusha
movb
pusha
mov
push
call
jmp
mov
pushf
lea
jmp
call
pusha
call
jmp
pushf
pushl
popl
push
pushl
lea
jmp
rol
mov
push
stc
pushf
and
jmp
call
pop
mov
jmp
clc
pushf
ror
push
call
bts
xor
bsf
bswap
pushf
inc
inc
inc
cmc
lea
shl
add
neg
btr
adc
jmp
xchg
pop
push
not
bts
neg
xchg
push
xor
mov
pushf
bswap
shr
add
shrd
rol
xor
pushf
sets
bsf
movzbw
dec
pushf
stc
btc
rol
ror
ror
lea
btr
inc
cmp
movzbw
sub
shl
rcl
mov
and
mov
add
mov
pusha
movzbw
add
movsbl
mov
rcl
add
mov
lea
rol
bt
rcr
stc
xor
movsbw
inc
cmc
rcl
rol
mov
pusha
inc
not
inc
add
bswap
jmp
push
pushf
mov
pushf
lea
jmp
mov
call
movzbw
movsbw
cwtl
mov
call
pusha
mov
bt
cmp
cmc
sub
pushf
cmp
call
lea
jne
push
mov
push
pushf
lea
jmp
call
mov
movb
movb
pushl
ret
mov
pushl
mov
jmp
jmp
add
call
jp
push
mov
pushf
mov
mov
lea
jmp
mov
setno
call
pushl
popl
push
pushf
lea
jmp
pushf
pushf
call
pushf
popl
pusha
mov
pushf
pushf
mov
push
movb
call
cmp
sub
pushf
neg
test
sub
cmc
cmc
pushl
add
pushf
jmp
mov
pusha
pushl
decl
call
mov
pushf
push
lea
jmp
pushf
popl
push
pushl
popl
pushl
pushf
lea
jmp
pushf
call
pusha
pusha
mov
pushf
movb
push
pushf
lea
jmp
mov
push
mov
push
lea
jmp
bt
rol
pushf
call
lea
jnp
shr
pusha
pusha
mov
push
mov
lea
jp
pushf
push
pushl
popl
pushf
pusha
pushf
lea
jmp
shr
mov
pusha
cmp
call
mov
pushf
push
mov
call
push
mov
pushf
jmp
not
shr
bswap
stc
mov
sub
or
mov
mov
cmp
not
cmc
cmp
not
stc
cmc
cmp
stc
sub
stc
stc
cmp
and
pushf
mov
jmp
stc
neg
cmc
pushf
call
mov
pushf
mov
mov
pusha
mov
jmp
pushf
pushf
popl
push
mov
mov
pushf
pushf
movb
mov
pushl
pushf
lea
jmp
jmp
pushf
pushf
popl
call
call
sub
jmp
movb
pushf
mov
push
pushf
push
push
lea
jmp
pushl
push
pushf
rep
bts
shld
mov
std
btr
mov
pushf
pushl
popf
pushf
push
movb
lea
jmp
jmp
pusha
bt
sub
pushf
mov
pushf
push
lea
jmp
daa
mov
test
sub
stc
push
add
movb
jmp
pusha
clc
rol
call
mov
mov
lea
jmp
rol
mov
shr
pushf
mov
sbb
ror
mov
pusha
add
pushf
shrd
mov
mov
movb
pushf
pushf
popl
jmp
push
neg
pushl
jmp
lea
jmp
jmp
lea
pushf
pushf
movl
lea
jmp
movb
mov
mov
movb
lea
jmp
pushf
pushf
popl
shr
mov
bts
shrd
mov
call
shl
mov
sar
mov
push
test
bt
add
pusha
movb
push
call
aam
cmp
notl
bswap
mov
push
sub
test
pusha
and
push
pushf
pushf
popl
pushl
pushf
push
pushl
popl
push
lea
jmp
mov
add
pushf
pushf
call
pusha
test
cmp
cmp
xor
cmc
stc
pushf
call
add
btc
sar
xchg
seto
xor
jmp
mov
push
lea
jmp
call
lea
ja
bswap
btc
call
mov
call
call
pusha
mov
jmp
xadd
sbb
mov
and
pushf
cmc
shr
mov
pusha
sub
call
movb
mov
push
pushf
call
call
neg
pushf
jmp
call
call
movl
dec
clc
stc
bt
not
mov
sub
push
mov
add
call
cmc
sub
call
movsbw
cmc
shr
mov
call
sub
test
shr
push
call
mov
pushf
mov
movw
lea
jmp
rol
pushl
bswap
call
pusha
mov
mov
movw
mov
jmp
cbtw
push
mov
cwtl
mov
pushf
sub
jmp
jmp
shl
mov
clc
add
btc
movsbw
sub
sbb
jp
test
movzbl
test
shl
jmp
call
movb
pushl
mov
push
mov
call
pushf
pushf
mov
pushl
mov
lea
jmp
mov
pushf
pushl
mov
mov
mov
pushf
movb
movw
lea
jmp
pushf
call
cmc
lea
jmp
push
pushf
popl
pushf
xchg
movzbw
xchg
mov
lea
mov
push
pushf
lea
movb
xchg
not
mov
mov
pushf
cld
cld
call
cmp
xchg
btr
mov
push
bt
pusha
push
shr
call
jmp
push
pushf
call
not
mov
movl
pusha
movb
mov
push
call
sub
pushf
mov
mov
movb
pushf
movb
lea
jmp
mov
pushf
popl
jmp
xor
movzbw
not
rol
movzbw
pushf
call
call
pusha
mov
decl
call
pushf
ror
test
pushl
call
jmp
pushf
movl
movl
pusha
mov
pusha
pushl
movl
lea
jmp
jmp
pusha
mov
call
mov
pushf
popl
pusha
pushf
pushl
popl
pushf
lea
jmp
pusha
call
push
mov
mov
pushf
lea
jmp
add
pushf
jmp
inc
jmp
cmp
clc
xor
xor
inc
xor
pop
inc
pop
mov
lea
pushf
pushf
push
inc
jmp
rcr
rol
movsbw
not
mov
jmp
mov
pushf
jmp
movb
mov
call
cmp
cmp
mov
shr
mov
stc
call
cmc
rol
cmp
pushf
pushf
bswap
jmp
mov
add
mov
add
sub
bt
pusha
mov
movb
sub
mov
pushf
shl
pusha
mov
mov
jmp
bsr
mov
xor
inc
neg
rcr
mov
pushf
pushf
bt
sub
cmp
movw
shl
lea
jns
push
pusha
mov
jmp
aas
xor
mov
btc
mov
or
bt
bt
mov
call
cmc
shld
push
jmp
jmp
rol
bswap
mov
inc
test
add
lea
movzbl
jmp
rcl
movzbl
bt
xor
pushf
rol
pushf
pusha
movw
jmp
mov
bswap
jmp
mov
pushl
pushf
mov
pushl
mov
lea
jmp
jmp
ror
rcl
call
mov
pushf
mov
mov
mov
lea
jmp
cmp
shl
jmp
pushf
popl
movb
movw
pushl
popl
pushf
mov
lea
jmp
stc
add
bt
neg
stc
stc
cmc
sub
push
neg
movb
sub
test
test
mov
jmp
cmp
neg
jmp
pushf
popl
call
bt
jmp
rol
movsbl
inc
sbb
rcr
test
add
add
cmc
clc
pop
jae
movzbl
jne
pushf
cmc
pusha
mov
mov
pushf
stc
push
rol
test
cmp
bswap
call
call
pushf
popl
jmp
mov
pushf
pushf
pushf
popl
call
jmp
pushl
movb
mov
call
push
pushf
mov
pusha
mov
lea
jmp
pushf
mov
pushl
jmp
pushf
push
mov
call
movsbw
btr
ror
dec
mov
clc
add
pushf
pusha
lea
jmp
mov
push
mov
push
jmp
jmp
pushl
clc
xchg
jmp
jmp
mov
pusha
lea
jmp
pushl
bt
sub
jmp
mov
movb
pushf
push
pushf
popl
call
mov
sub
stc
jmp
jmp
call
pushf
pushf
popl
jmp
shl
jmp
mov
pushf
pusha
movb
movl
lea
jmp
lea
neg
and
shr
clc
sub
not
pop
pushf
mov
movsbw
jmp
pushl
popl
mov
lea
jmp
stc
add
call
pushl
popl
pushf
push
mov
mov
lea
jmp
jmp
stc
setno
btc
mov
rol
bt
dec
add
setbe
push
not
mov
call
shld
mov
call
mov
pushf
mov
pushf
popl
mov
pushl
popl
mov
movw
lea
jmp
call
mov
pusha
pushf
pushf
lea
jmp
pusha
dec
cmc
not
pushf
call
pushf
pushf
movb
inc
jmp
cmc
neg
cmp
push
clc
sub
cmp
add
pushf
mov
pushl
pushf
pushf
pushl
ret
bts
mov
shl
ror
mov
stc
add
push
movw
mov
pushf
lea
jmp
stc
bsr
cwtl
lea
mov
test
bt
mov
cmp
add
jbe
pusha
mov
push
pushf
movw
pushf
lea
jmp
sub
call
mov
pushf
pushf
push
mov
call
call
xor
bsr
mov
sub
pushf
mov
clc
sub
mov
mov
push
shr
mov
movb
pushf
movb
mov
call
not
movzbw
mov
lea
je
rol
push
pushf
bswap
cmc
jmp
mov
push
lea
jmp
jmp
cmc
cmp
clc
add
test
push
neg
cmp
sub
pusha
pushl
neg
test
sub
cmp
stc
stc
add
pushf
movb
mov
push
push
pushf
pushl
ret
dec
shld
mov
push
jmp
call
call
pusha
mov
mov
call
movb
mov
jmp
call
lea
jno
mov
pushf
push
pusha
lea
jmp
mov
movw
mov
mov
movb
lea
jmp
pushf
pushf
popl
movw
mov
pushl
popl
pushf
push
mov
pushl
lea
jmp
mov
mov
push
call
pushf
call
neg
mov
bt
jmp
test
mov
dec
xor
add
mov
test
bt
push
pushf
add
jmp
mov
push
lea
jmp
push
jmp
pushf
mov
pushl
pushf
popl
push
jmp
pushf
mov
pushf
jmp
mov
call
jmp
cmp
movw
xor
cmc
pusha
pushf
cmc
mov
jmp
cmp
cmc
call
movb
call
add
call
rcr
xchg
mov
test
not
dec
mov
xor
cmp
mov
pusha
pusha
bt
pushl
add
jmp
shld
add
sar
shr
and
adc
mov
test
bt
cmp
add
push
jmp
lea
jns
push
push
pusha
mov
pusha
call
jmp
mov
pusha
mov
movb
movb
lea
jmp
pushl
mov
push
pushf
popl
pushf
pushl
popl
pusha
pushf
pushf
lea
jmp
pushl
jmp
mov
mov
clc
cmc
add
push
call
test
test
not
cmc
test
xor
test
pusha
jmp
cmc
jmp
cmc
sub
cmc
add
jmp
cmp
xor
mov
jmp
pushf
call
call
mov
jmp
call
call
not
bsr
call
jmp
mov
pusha
jmp
jmp
add
bsf
stc
mov
cmp
bt
movb
and
mov
push
lea
je
stc
push
lea
bsr
mov
call
pushf
popl
jmp
not
pushf
clc
cmp
pushf
and
push
mov
call
bts
aam
sbb
mov
daa
call
stc
sub
test
bt
test
add
test
xor
cmc
jmp
movzbw
lea
jbe
dec
clc
rol
xadd
xadd
and
push
lea
mov
shld
sub
ror
shl
xchg
mov
sub
xadd
movzbw
stc
mov
btc
cmc
add
bt
mov
shr
cmc
bsf
add
bswap
rol
movsbl
movsbw
xor
movzbw
inc
jmp
call
