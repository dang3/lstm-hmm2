sbb
add
add
or
and
xor
aas
sbb
dec
and
sahf
mov
pop
and
sahf
dec
popa
mov
jne
mov
push
hlt
push
sbb
ja
sahf
push
sti
test
mov
dec
ret
pusha
popf
inc
xor
push
dec
add
loopne
mov
iret
jns
adc
sbb
loop
push
ds
jb
fs
mov
leave
aaa
in
add
dec
lahf
pop
jge
jmp
fnsaves
mov
mov
jb
sub
xchg
pushf
outsb
mov
push
jbe
sub
jmp
pushf
ljmp
add
mov
push
int
sub
popf
mov
aas
fucomp
fists
inc
gs
inc
jge
pop
mov
xchg
arpl
movsl
daa
les
stc
adc
mov
test
mov
jnp
in
jae
int
std
xor
cmpsl
stos
es
out
mov
mov
repnz
pop
sub
aam
dec
cmc
into
mov
leave
pop
sub
or
cmp
daa
or
fdivrs
xor
dec
push
ss
insb
push
mov
ja
or
xor
sbb
lods
adcl
cwtl
arpl
push
sbb
mov
leave
ss
or
fs
loope
lock
int3
xor
mov
or
push
push
pusha
lock
xor
std
js
lea
outsl
jnp
xor
inc
inc
and
xor
movsb
rcl
xor
pushf
sub
aas
inc
call
mov
or
scas
jg
inc
imul
jb
sar
lahf
push
sahf
je
push
sub
jno
push
fadd
cmp
dec
bound
daa
cli
mov
or
lcall
ljmp
adcl
arpl
push
adc
lea
leave
jns
pushf
pop
ljmp
mov
stos
sub
sbb
adc
bound
mov
in
push
xchg
les
mov
fiadds
add
jl
push
adc
out
cmp
std
ret
xchg
sti
adc
popf
push
xor
xor
add
jmp
jg
icebp
pop
jge
cmc
or
push
mov
sahf
mov
mov
lahf
loope
shlb
and
cmp
sbb
cmpsl
insb
arpl
dec
iret
cmp
sbb
sbb
adc
cmp
mov
lret
rclb
dec
mov
mov
pop
in
fwait
cmpb
xchg
push
mov
push
lds
push
push
daa
imul
jbe
gs
shrb
arpl
popa
cmp
mov
ret
in
ret
pop
inc
dec
pop
xor
mov
aaa
imul
dec
movsl
inc
push
lret
pop
cmp
popa
jo
add
xor
fistps
sarl
into
les
mov
and
lahf
arpl
lea
add
pop
scas
add
or
or
packsswb
ljmp
mov
arpl
mov
and
or
xorps
test
int3
insl
or
dec
pop
movsb
lret
adcl
out
insl
add
mov
cltd
add
jb
jl
dec
mov
mov
pop
ret
jae
or
cmp
fsubl
add
cld
test
iret
test
dec
mov
mov
push
fwait
into
and
es
in
mov
mov
push
sbb
mov
mov
ss
and
jne
inc
test
mov
ja
push
xor
lods
or
adc
js
pop
and
out
inc
jl
cmp
push
scas
in
sub
std
cld
or
fwait
inc
mov
mov
add
sub
aad
shl
sub
pop
pop
inc
push
mov
push
jle
lret
leave
inc
jno
lahf
out
call
cmp
mov
adc
xchg
or
jnp
xlat
icebp
add
mov
sbb
stos
inc
jg
mov
mov
int3
pop
xchg
dec
ret
jle
mov
out
add
inc
int3
insb
adc
pusha
in
and
mov
cs
mov
cld
lcall
xchg
data16
pop
call
rclb
sbb
jmp
inc
and
sbbl
inc
add
adc
adc
add
rcrb
add
xor
outsb
push
add
test
pop
pop
gs
stos
in
push
sub
clc
loopne
mov
test
out
dec
mov
fsubl
repnz
movsl
scas
es
and
ret
push
pushf
mov
cwtl
adc
leave
stc
bound
push
scas
mov
ljmp
dec
xchg
or
fcoms
test
xor
dec
out
xchg
cmp
fdivrs
adc
cmp
rcr
ficomps
aam
in
dec
pop
ficoms
mov
pushl
mov
out
jmp
out
xchg
repnz
imul
mov
mov
sti
push
outsb
sub
dec
cld
push
jno
mov
xchg
pop
test
xchg
cmp
push
inc
add
imul
jb
pusha
xchg
push
lret
push
pop
adc
into
pop
scas
pop
lods
sub
xchg
repnz
mov
addr16
jg
aad
sub
and
mov
scas
dec
imul
xchg
leave
movsl
aad
push
shr
mov
scas
pop
faddp
adcb
rorb
add
dec
sub
jmp
add
aad
mov
dec
xchg
loopne
and
aaa
jb
cmc
nop
aas
jae
jmp
lock
xor
mov
jbe
mov
in
cmp
push
add
sub
pop
sbb
popf
jl
adc
pushw
scas
aaa
lret
inc
rcrb
jnp
push
push
aas
hlt
lcall
dec
xchg
data16
inc
daa
test
cmp
mov
sub
or
or
pop
das
dec
jbe
cmp
jmp
stos
mov
xor
push
mov
dec
and
int
rcr
mov
or
mov
cmp
ja
fldt
flds
movsb
pop
rclb
das
fldenv
mov
inc
das
ss
xchg
clc
popa
jge
pushf
xchg
mov
sahf
cld
ja
mov
add
adc
icebp
cwtl
pop
jp
andb
fsubr
lds
fidivrl
push
adc
das
pop
xor
call
jns
push
pop
fdivrl
mov
adc
sbb
inc
xor
sbb
or
xchg
mov
adc
mov
or
fs
and
push
movsb
imul
loopne
testb
iret
mov
cmp
scas
add
addr16
cld
add
mov
lcall
ja
lock
lret
jbe
imul
mov
jge
repz
or
repz
adc
adc
pusha
dec
jge
inc
loop
divl
sbb
inc
mov
mov
cmpsb
push
ds
out
add
mov
aad
xchg
leave
pop
add
cmp
data16
adc
xchg
mov
lret
cwtl
and
pushf
dec
pop
dec
xor
popa
addr16
pop
cwtl
jl
sub
mov
mov
push
pop
sti
mov
push
cltd
stos
popf
pusha
inc
mov
aad
das
and
jne
add
mov
sahf
sbb
jle
push
pop
mov
divb
dec
pop
clc
lcall
fs
jo
xchg
scas
cltd
es
jne
aaa
cmp
lcall
test
mov
lods
mov
mov
pop
lea
icebp
mov
mov
cltd
pusha
int
jg
jle
jne
or
ds
push
and
inc
adc
xor
jle
pop
sub
stc
insl
mov
add
scas
mov
add
pusha
pop
add
fdiv
bound
push
cmp
in
aad
lock
jecxz
iret
test
cmp
xchg
adc
sub
ja
hlt
xchg
cs
inc
int3
leave
aad
mov
ljmp
les
test
sub
in
aam
cmp
xor
mov
sbb
cmp
dec
jbe
sahf
sbb
popa
xor
cmpb
cwtl
cmp
push
mov
inc
mov
and
adc
push
xchg
std
mov
inc
aas
loope
ja
ljmp
sub
sahf
mov
inc
pushl
lcall
fwait
lods
inc
jo
enter
cs
add
notrack
notl
push
hlt
sub
inc
shlb
loopne
jnp
mov
xor
stos
pop
rclb
fldenv
out
cmc
jecxz
mov
mov
adc
mov
push
nop
cmp
pop
mov
xchg
sub
xchg
loopne
xchg
jmp
scas
test
adc
lods
adc
daa
or
push
imul
xchg
nop
cmp
mov
and
addb
das
int3
rcrl
addr16
add
cmp
inc
es
dec
pop
shrl
lahf
mov
or
out
adc
push
repnz
fwait
daa
stos
mov
mov
arpl
and
or
xor
jle
rclb
adc
fbld
jnp
jl
mov
push
and
xor
js
lcall
aas
jno
jle
dec
jno
inc
shll
sbb
sbb
sahf
sub
mov
and
jns
mov
ret
push
fists
push
add
outsb
add
bound
cmp
test
push
mov
add
dec
pop
jecxz
mov
mov
lock
cld
fidivl
dec
lods
pop
jnp
outsb
pop
clc
cltd
jmp
adc
jo
push
mov
or
js
mov
dec
adc
enter
and
loopne
inc
pop
adc
lahf
push
call
adc
mov
xchg
xchg
in
and
adc
sub
mov
push
sbb
int3
fsubrl
std
iret
jg
jns
add
jno
jne
rclw
bound
jo
jb
mov
add
sbb
mov
ss
aam
aad
mov
stos
scas
mov
inc
lret
mov
pop
sbb
shl
jmp
jae,pt
aad
inc
add
add
adc
in
fwait
add
inc
xchg
cmp
out
cmp
scas
je
add
into
test
mov
lds
jns
jmp
mov
leave
push
adc
mov
cmp
lock
insl
dec
jns
mov
or
or
inc
shl
add
jbe
loop
stc
dec
add
outsb
jmp
arpl
loopne
nop
jbe
xchg
fists
repnz
push
mov
popf
jnp
in
cli
inc
inc
cli
xchg
cmp
fsubl
dec
mov
pushw
outsb
fnsave
test
paddw
jnp
pop
dec
pop
xor
xor
cmp
fs
rol
mov
js
jne
or
movsl
xchg
cmp
dec
aaa
test
out
sub
cli
and
mov
popa
push
mov
out
mov
fs
sahf
into
adc
mov
fisttpll
fdivrl
sub
lret
pop
loopne
inc
adc
fdivrl
jmp
jno
xchg
cmp
rcll
xor
iret
int
out
fstp
movsb
rcrl
int3
mov
jp
dec
mov
loop
andb
inc
push
dec
add
enter
fwait
out
into
pop
push
ljmp
dec
jle
popf
cmpsl
cmp
stos
cmp
fs
sbb
call
and
jmp
in
subb
sbb
sub
mov
and
sbb
mov
sub
adc
add
mov
sub
jg
imul
lods
dec
outsb
into
add
sti
mov
adc
mov
nop
push
arpl
add
dec
popa
inc
inc
xlat
push
mov
lcall
subl
int3
add
xor
xor
addl
adc
dec
xchg
subl
cmp
shrl
sub
and
cwtl
add
stos
or
outsb
and
cmpsb
xchg
and
sbb
fwait
pop
movsl
xor
outsl
fists
insl
mov
js
jmp
add
mov
inc
adc
das
out
xchg
daa
in
seta
cwtl
call
jl
inc
cmp
sub
inc
lea
jg
adc
mov
inc
movsl
mov
lret
mov
xor
pop
incl
mul
pop
bound
ret
xor
xchg
popa
adc
jns
pop
jmp
hlt
inc
push
lret
dec
cltd
xor
jl
daa
mov
push
lcall
pop
shlb
nop
inc
iret
pop
mov
add
sbb
in
loope
into
xchg
pop
lahf
inc
mov
push
mov
push
insl
jb
jbe
cmp
rorb
sbb
adc
jle
cld
rcrb
dec
ror
mov
fstpl
or
loop
movsb
pop
jp
out
inc
arpl
lret
dec
xor
push
jle
test
stos
aas
fistl
adc
push
inc
insb
insb
mov
mov
inc
xor
and
mov
mov
test
jecxz
xor
cli
add
pop
xchg
dec
sbb
sub
mov
dec
inc
lcall
xchg
sti
lret
inc
xchg
push
sbb
in
sub
in
sahf
out
push
shlb
aad
xchg
rorl
fiadds
stc
cmp
jbe
mov
ffreep
sahf
cmp
aam
push
xor
cmp
cli
push
outsb
or
push
sub
sbb
lods
insb
and
push
rcrb
fsub
mov
fst
out
add
cwtl
ss
aam
mov
jg
adc
lods
and
loope
xlat
push
sbb
add
mov
adc
and
sbb
mov
pushf
dec
inc
pop
mov
rclb
cmp
pop
lods
cmp
xor
fistps
cmp
lcall
push
mov
mov
mov
adc
mov
dec
call
push
jle
or
in
push
pop
xchg
out
mov
stos
mull
xchg
in
dec
int3
dec
or
push
out
xchg
inc
sub
xchg
out
es
mov
cmp
adc
popa
mov
inc
fisttpl
cmp
add
xchg
fistl
or
divb
out
jmp
rcr
sti
cli
into
dec
popa
sbb
or
adc
pop
pushf
sti
inc
pushf
jb
in
test
scas
addr16
jbe
lahf
mov
pusha
fildll
mov
push
popl
into
rorb
test
add
movsl
mov
iret
call
fstl
or
ret
mov
add
cs
inc
sarl
arpl
sub
cli
pop
xchg
xchg
imul
js
insl
add
mov
cld
int
lds
cmp
push
inc
adc
mov
imul
fidivrl
and
and
dec
dec
mov
loope
pop
icebp
pop
in
xor
pop
xchg
adc
decl
sub
jle
cmp
jmp
enter
push
mov
and
or
sbb
out
mov
xchg
sbbb
lods
inc
stos
mov
out
in
lahf
xor
jmp
popf
fsubs
test
imul
cs
dec
js
mov
out
je
test
rep
or
xchg
ret
mov
fistps
xchg
push
jns
xor
mov
push
pop
inc
faddl
cmp
mov
ja
lcall
mov
les
dec
push
jp
clc
pop
pop
pop
gs
dec
popa
into
add
jae
mov
aam
sahf
add
test
arpl
and
gs
xor
scas
pushf
mov
repz
js
xor
sbb
inc
cli
pop
or
mov
xchg
test
cwtl
push
in
xor
dec
aas
mov
in
leave
repnz
mov
out
cwtl
sub
sub
push
mov
adc
mov
jne
xchg
or
cmpsl
mov
and
out
mov
js
sbb
pop
sbbb
cmpsb
call
sub
push
jle
stos
sbb
add
pop
aad
stos
pop
mov
inc
mov
jb
inc
aaa
push
xchg
faddl
mov
dec
xorb
pop
xor
xor
mov
mov
mov
and
outsl
xchg
sbb
jp
mov
xchg
cmp
mov
lock
pusha
mov
xchg
cmc
sub
mov
adc
pop
xchg
in
add
push
daa
mov
divl
sti
adc
jne
bound
mov
js
pop
sahf
inc
test
mov
mov
lods
push
or
push
andb
js
jge
adc
jne
jae
mov
mov
jo
sbb
sub
mov
mov
dec
out
sahf
mov
add
aas
adc
sub
lret
mov
ffreep
jne
bound
or
cli
push
xor
loop
gs
rcrl
xor
repnz
mov
ljmp
lret
daa
inc
insb
iret
lds
mov
mov
mov
sub
sti
cld
fnstenv
jbe
adcb
out
sbb
call
data16
gs
pop
outsl
push
fwait
test
xchg
dec
and
cmp
adc
xlat
icebp
loope
aaa
aaa
in
aas
outsl
shrb
loope
inc
inc
loope
jnp
cmc
xchg
pusha
and
pop
arpl
fcmovnbe
call
and
lahf
mov
ror
insl
sahf
xor
aam
cmpb
outsl
data16
pop
out
lret
test
lock
mov
lahf
and
rclb
cmp
cmp
dec
jg
stos
rorl
mov
ds
mov
adc
and
mov
adc
popl
cmp
aas
scas
mov
stc
arpl
mov
dec
jae
pop
les
cmc
pop
ljmp
rcrb
sbb
xchg
mov
cmp
ret
fisubl
lock
or
inc
addb
fisubrl
mov
or
adc
test
cmpsl
in
xchg
mov
xchg
pop
icebp
repnz
dec
pop
push
fimuls
sbb
popa
adc
jl
xchg
int3
and
sbb
fwait
adc
push
icebp
lret
inc
mov
pop
mull
les
or
stos
lea
pop
or
push
daa
fisttpll
push
dec
fmulp
mov
cmp
out
mov
xchg
xchg
lahf
out
cld
xlat
jne
ds
and
jb
xchg
arpl
shrb
lds
iret
outsl
cld
push
mov
stc
into
pop
push
nop
mov
jmp
pop
push
and
sahf
jle
repz
pop
fistpll
push
inc
dec
sub
outsl
cld
xchg
ret
inc
and
pop
jno
inc
testb
sbb
mov
or
iret
adc
test
outsl
lods
dec
out
lods
ret
es
cmp
pushf
cs
cwtl
popa
jmp
test
sub
push
push
mov
outsb
pop
push
pop
adc
idiv
inc
leave
insl
mov
enter
mov
pop
adc
sub
mov
adc
push
dec
jne
sbb
sti
pushf
int
insl
mov
test
daa
outsb
add
sbb
lcall
stos
inc
and
mov
int3
adc
sbb
test
movsb
pushf
divl
lahf
insl
in
pop
fwait
dec
sub
outsb
dec
fnstcw
ficoms
mov
mov
repnz
or
push
jae
sti
jmp
xchg
fildll
gs
jns
imul
out
mov
mov
push
lahf
inc
push
mov
inc
stos
inc
pop
push
lock
inc
stos
test
clc
mov
dec
stos
dec
dec
cmp
pop
push
cmp
pushf
add
cmpsb
loope
popa
mov
mov
add
cmp
adc
inc
cmp
mov
adc
mov
inc
out
sbb
push
jge
mov
pop
stc
hlt
lea
fistl
xchg
inc
xchg
popa
ret
push
cli
lods
push
loopne
pop
out
lea
mov
mov
insl
jmp
xchg
int3
cmp
es
fistpl
out
nopl
mov
shlb
add
xchg
dec
iret
jae
imul
out
mov
std
fbld
fwait
pop
and
dec
mov
lahf
inc
rcrl
popf
ss
sbb
adc
dec
jne
scas
xor
mov
xchg
and
mov
enter
lahf
adc
push
scas
sub
jae
iret
jmp
call
cmc
mov
scas
cmp
scas
sbb
xchg
sub
dec
aam
xchg
cmpsb
cmp
sbb
mov
push
ds
std
cmc
aaa
ret
xor
scas
bound
std
cmc
imulb
test
loopne
fnstsw
stos
shl
add
fwait
xor
fsts
xchg
xchg
test
add
repnz
cmp
loopne
shrl
icebp
xchg
ror
aam
xchg
mov
enter
mov
jmp
push
jae
xchg
and
xchg
cmp
sub
scas
lds
in
enter
pop
in
xor
ficoms
and
and
insb
xchg
test
popa
mov
lods
fsubrs
jge
out
sub
dec
adc
out
adc
cmp
mov
clc
xchg
fsts
xchg
jmp
lahf
les
arpl
or
push
cmp
fnstcw
cmp
in
mov
sbb
scas
or
loop
into
sbb
outsl
and
push
loopne
push
in
ja
jl
gs
and
fildll
cmp
lret
sbb
int3
xchg
mov
scas
push
mov
push
push
lods
int
addr16
out
stos
testl
inc
std
loop
cmpl
testl
push
fdiv
dec
and
lea
jmp
adc
call
imul
dec
xor
aad
stc
push
ret
mov
loope
sub
aad
adc
xor
cwtl
ljmp
clc
mov
push
adc
stos
or
xchg
aaa
mov
xor
cmp
or
mov
dec
push
sbb
outsb
int3
in
out
push
scas
scas
jb
push
stos
jb
test
clc
cmp
arpl
hlt
pop
adc
test
sub
push
int
xchg
leave
lock
lds
shll
cs
stos
or
push
subl
sub
xchg
jmp
imull
movb
and
js
scas
mov
jge
jo
cmp
cmpsb
mov
dec
clc
lcall
lahf
lahf
repz
mov
enter
ja
jb
ret
enter
lahf
dec
mov
mov
gs
in
idivl
negl
adc
mov
sbb
sbb
push
push
and
pop
icebp
fidivrs
ret
xchg
sbbl
data16
negl
mov
xchg
mov
push
rcl
ja
das
dec
popf
aaa
mov
push
jg
lods
fdivs
mov
sub
call
ror
xor
mov
in
push
and
pop
dec
jns
test
call
cmpsb
in
mov
ret
daa
les
jbe
cmp
or
jl
and
pusha
loopne
jno
gs
leave
jp
mov
or
mov
adc
and
or
rorb
out
mov
lea
sub
add
pop
dec
movsb
out
mov
pop
inc
dec
clc
mov
loop
cs
mov
mov
cmp
fsubl
ret
mov
scas
cld
sub
mov
pop
sarl
mov
push
int
ror
jns
je
leave
lcall
leave
loop
inc
add
fsubrl
lock
jae
notl
and
push
mov
clc
popf
test
aaa
lcall
stos
xor
jmp
cld
in
sbb
push
imull
mov
add
mov
xor
outsb
push
mov
dec
leave
sub
and
cmp
es
out
jle
popa
movsb
test
stos
loope
and
sub
sbb
sti
rolb
lret
pop
lret
xchg
addr16
test
or
test
inc
add
push
sbb
cmp
dec
mov
sub
or
test
jb
ljmp
inc
mov
and
js
mov
push
inc
jecxz
call
jne
sub
or
shrl
ja
loope
mov
inc
xchg
jp
jle
bnd
ja
mov
in
ficoms
sub
cmc
push
ss
lcall
fisttps
fildll
adc
ja
repnz
sub
insl
push
scas
mov
mov
hlt
cmp
out
lock
test
ret
cmp
jge
sti
enter
and
add
das
xchg
imulb
cmp
cmp
and
fs
rclb
push
rorb
nop
inc
dec
cld
sub
xchg
sbb
jg
iret
add
push
insb
dec
cmc
mov
outsb
insl
cmp
int3
mov
cld
pop
in
mov
xchg
jo
inc
inc
int3
cld
rcll
jl
fcoml
dec
mov
js
sub
adc
rcll
sub
cmp
fwait
and
and
inc
sbb
sub
imul
mov
mov
adc
inc
fwait
ljmp
mov
arpl
jo
jg
out
pop
adc
sub
pusha
in
lcall
cltd
repz
loopne
dec
jmp
cmp
and
and
mov
fisubrl
in
jbe
enter
sub
inc
jb
xchg
flds
mov
add
scas
repz
pop
in
cmp
dec
jecxz
jno
mov
pop
sbb
jbe
sbb
pop
sub
int3
add
test
jecxz
cli
mov
lcall
insb
cmpsb
fdivrs
mov
inc
iret
jne
fucomp
sti
dec
lcall
fisubrs
rcrb
sahf
dec
xchg
andl
pop
push
lcall
scas
in
icebp
andl
fbld
xchg
sbb
sbb
iret
lock
stos
repnz
jp
jmp
scas
sar
pop
std
or
ss
mov
jle
stc
lock
enter
cmpsb
adc
cmpsb
mov
insb
aas
adc
scas
shl
mov
adc
pop
inc
test
or
add
mov
cmc
pop
mov
ss
ss
in
int
push
mov
mov
push
shlb
js
adc
xchg
xor
lea
and
je
xchg
aas
xor
xchg
popa
mov
mov
lcall
fidivl
cmpsl
out
test
sahf
fstl
sahf
in
adc
push
and
adc
jmp
or
pop
pop
mov
mov
xor
pop
cmpsl
dec
shlb
cmpsb
lea
cs
mov
mov
clc
js,pt
mov
or
stos
push
jne
xor
testb
xchg
and
popf
and
leave
int
cmp
test
rclb
and
or
push
pop
sub
int3
fcomi
jge
xchg
iret
inc
sub
das
push
rorl
incl
lahf
dec
xor
loope
jecxz
pop
xor
sub
cmp
push
dec
add
mov
xchg
ret
sub
imul
std
dec
pop
in
in
cmp
cmpsb
insl
loopne
fnstsw
sbb
fsubs
add
lea
jno
fcmovb
fwait
xlat
into
stc
test
fstpl
or
sub
pop
pushw
push
out
pop
sahf
pop
repnz
dec
cmc
pop
into
cmp
lret
mov
jbe
mov
sarl
movsb
popa
call
dec
xchg
jae
outsl
daa
les
or
inc
sahf
cmc
push
push
push
popa
ljmp
push
dec
pop
or
mov
dec
pop
xchg
adc
push
sahf
dec
in
loope
jne
bound
cli
outsb
call
aas
xchg
cmp
int3
pop
xchg
push
mov
fstp
fisttpl
cwtl
scas
mov
inc
in
or
and
sti
imul
jo
sub
mov
adc
lcall
adc
lea
mov
push
fcoms
fidivrl
mov
in
lcall
aam
jmp
sbb
or
test
test
jno
bnd
push
pop
int
xchg
xor
ja
and
sub
mov
repz
pop
mov
scas
push
lods
or
xchg
fnstenv
movsb
outsl
add
fbld
mov
xor
popf
mov
repnz
and
aam
lss
ret
jge
or
or
stc
mov
test
mov
xchg
adc
xchg
mov
or
sbb
dec
sub
outsb
mov
sbb
pop
inc
sbb
lcall
mov
fmul
xchg
xchg
xor
mov
leave
push
out
in
fadd
je
push
in
rcl
sub
cmc
rcl
fists
shlb
call
push
test
leave
leave
mov
repz
ficoml
pusha
mov
jmp
sbb
test
inc
mov
jns
xchg
cmp
icebp
mov
mov
sbb
jecxz
mov
out
mov
lret
gs
fsubl
test
das
stos
add
and
rcll
and
xchg
pop
cwtl
push
fistpl
into
jb
sbb
adc
test
add
or
xor
or
xchg
and
lret
lret
or
jbe
mov
sahf
pop
iret
push
test
in
fists
int
std
pushf
cmpsl
lods
fsubrl
rolb
dec
pop
inc
in
push
jl
nop
pushf
mov
cmpl
add
fidivrs
or
out
arpl
mov
lock
pop
lods
jae
jno
cmp
int
add
and
jbe
stos
repz
mov
push
lahf
jl
inc
inc
js
inc
insl
imul
stos
xor
popf
nop
movl
dec
pop
dec
stc
push
push
mov
mov
popa
test
jle
push
jns
data16
jmp
inc
pop
jecxz
push
adc
fistpll
mov
xorl
cmp
or
mov
xchg
iret
push
and
adc
inc
jbe
ljmp
ds
fs
mov
push
push
mov
pcmpgtd
dec
stos
inc
pop
js
lahf
add
loop
sbbb
pop
imul
hlt
xlat
mov
cmp
es
sbb
aad
jnp
in
stos
ja
mov
ljmp
lahf
sbb
sbb
movsl
leave
cmp
mov
and
cmp
nop
pop
jmp
xor
mov
xor
ret
lcall
push
xchg
fmull
xchg
int
cltd
add
add
lock
and
inc
mov
out
dec
jae
test
jns
lret
inc
js
fwait
sbb
aam
mov
add
cli
push
lret
xorl
push
bound
jge
sub
ret
scas
push
mov
stc
push
loopne
mov
jnp
fucom
sbb
jl
popf
adc
bound
lret
add
ficompl
es
add
inc
jo
sub
mov
in
in
and
je
sbb
cmpl
je
stos
pop
jmp
stc
jno
and
adc
test
in
xchg
push
adc
mov
lea
xor
cwtl
mov
or
add
stos
test
pop
pop
and
mov
fs
sub
aad
lods
mov
stc
dec
addr16
cltd
or
addb
nop
dec
jb
jae
imull
lock
insb
xchg
fnsave
data16
in
cld
leave
hlt
test
call
cmc
cld
sar
test
pop
xchg
pop
jnp
in
jmp
pop
addb
inc
or
cmp
or
jo
xchg
xchg
push
aaa
negl
repz
adc
inc
or
scas
mov
or
mov
xor
outsb
lahf
arpl
sti
mov
fistpl
nop
into
fldenv
push
sub
mov
dec
std
mov
lret
add
ficomps
insl
mov
mov
mov
shlb
add
adc
xor
stos
adc
pushw
add
adc
stos
mov
rol
notl
pop
loope
and
sbb
sub
pop
lret
aad
cs
fistps
addr16
movb
arpl
sbb
jnp
int
add
les
jne
int
orl
push
xlat
jg
pop
xchg
nop
jle
insb
pop
jo
sti
add
loope
or
xchg
stos
popa
dec
jp
sub
or
test
mov
jp
xor
cs
jne
add
push
and
mov
testl
rcrb
lcall
cmc
pop
outsb
js
add
push
hlt
cmpb
xor
mov
test
xchg
mul
xor
mov
xor
jl
push
jle
rcr
xor
add
inc
adc
sarb
js
dec
sbb
jp
push
icebp
adc
dec
lods
xor
outsb
pop
ret
cmpsl
aad
call
outsl
movsl
out
mov
xchg
lods
add
inc
push
popa
orl
jbe
mov
lahf
imul
loope
jns
ret
mov
sbb
xor
sarl
out
aaa
adc
in
nop
push
aaa
xor
mov
pop
hlt
shl
les
sub
lock
pop
movsb
ret
aaa
ja
push
call
jmp
lret
fildll
xchg
cmpsb
mov
add
xchg
and
inc
hlt
scas
xchg
ljmp
and
test
outsb
jmp
test
cmp
dec
iret
and
pop
aaa
aam
xor
inc
sub
xor
mov
push
outsl
lock
pop
xchg
jle
and
out
sti
sub
jnp
loope
jb
inc
sti
cmp
jns
or
jmp
pop
popf
mov
jne
stc
iret
aas
enter
xchg
lods
and
das
stos
pop
leave
add
mov
movsb
adc
fcoms
fdivrs
inc
out
sahf
pop
stos
push
jb
jno
dec
lret
jge
roll
fsubrs
subl
lret
xor
jo
popa
mov
push
jnp
sbb
lret
sub
push
or
adcl
in
mov
enter
nop
mov
aas
or
mov
jl
xor
fistpll
push
test
xchg
sub
cmp
fs
lods
inc
fcomps
inc
clc
mov
loope
xor
arpl
adc
jb
out
pushf
lock
fadd
and
test
fildl
inc
repnz
aam
test
mov
cmpsl
dec
mov
mov
lea
push
clc
pop
lods
xchg
mov
push
lock
cmp
scas
mov
push
pop
push
xchg
dec
jo
hlt
add
cltd
xlat
fistpl
in
adc
fcomi
out
push
xor
push
sub
outsb
test
mov
insb
insb
sahf
sub
dec
mov
lods
and
shlb
xor
insl
cmp
fwait
imul
add
addr16
and
dec
daa
dec
push
push
mov
or
dec
jge
loope
push
inc
and
ja
pop
mov
loope
nop
pop
jae
sbb
jb
add
scas
popl
data16
dec
pop
push
fisubs
roll
jmp
adc
outsl
lods
xor
cld
out
push
inc
mov
pop
mov
shrl
adc
jbe
insl
pop
mov
enter
mov
nop
mov
jle
and
xor
gs
inc
jb
or
lret
in
and
inc
into
mov
mov
movsb
movb
pop
mov
push
pop
pusha
stos
movd
or
add
dec
sub
mov
lret
repz
out
jmp
dec
push
pop
or
fcmovu
pop
adc
pop
lock
lret
iret
sbb
lods
shrl
dec
adc
jge
fimull
test
cmp
test
pop
ja
mov
adc
and
pushf
jl
mov
or
stc
xor
inc
or
jmp
call
ror
das
into
xchg
pop
and
out
pop
add
std
jmp
imul
mov
pushf
and
andl
aad
mov
nop
imul
xchg
les
movsl
mov
pop
dec
fsubrs
stos
leave
filds
gs
imul
imul
pop
jnp
test
adc
loope
ja
mov
jae
icebp
pop
cmp
inc
div
loope
or
mov
mov
lods
stos
icebp
inc
ja
insl
and
out
or
andb
mov
push
std
iret
jge
xchg
outsl
push
inc
xor
fadds
out
mov
sub
jo
pusha
lret
push
sbb
mulb
insb
lret
sbb
shll
inc
lock
mov
incb
lea
pop
or
xchg
mov
sti
arpl
addl
js
mov
stc
outsb
inc
mov
scas
xor
sub
mov
imul
mov
inc
cmc
push
scas
inc
jp
rorb
pop
repz
in
mov
cmp
je
lret
mov
lea
push
popa
dec
mulb
hlt
shrb
sub
sti
fistps
icebp
cmpsb
daa
jno
cmp
xor
add
xchg
je
push
dec
cwtl
and
mov
int3
test
lahf
cmp
adcl
cmp
js
xor
arpl
iret
in
xchg
mov
push
inc
add
ljmp
cli
dec
sub
push
clc
fdivs
aam
sarl
cmp
iret
int
inc
nop
mov
roll
jno
jae
cmc
jae
or
scas
jno
push
xor
stc
pop
mov
ret
cmc
and
or
movsb
sbb
leave
jno
jb
push
push
push
sbb
repnz
test
xchg
fwait
dec
aad
rolb
subl
or
add
adc
lods
xchg
lods
and
xlat
mov
test
pop
test
js
mov
xchg
mov
fdivl
arpl
and
bound
cmp
loopne
cli
pop
adc
sbb
mov
divb
pop
mov
sub
js
int
in
inc
fcoml
in
lea
jnp
mov
add
inc
cmp
add
fcmovbe
lock
push
ficoml
call
lahf
push
sarb
imul
cmc
out
xchg
inc
mov
cmp
xor
int3
loop
and
xchg
icebp
js
cli
pop
xchg
pop
cmpb
pextrw
imul
iret
xlat
xchg
mov
in
pop
adc
cmp
jmp
repnz
loopne
ds
jae
loopne
sbb
je
in
call
call
mov
loope
mov
jg,pt
lods
popa
xchg
test
cmpl
add
dec
or
mov
mov
push
cltd
popf
aam
out
xor
push
rclb
aad
bound
or
cmp
mov
icebp
cmp
push
lret
test
cmpsb
mul
push
fbld
mov
fistl
psrlq
mov
jno
jle
fisubrl
and
int
push
xchg
pop
std
fdiv
stos
aaa
pop
ljmp
adc
iret
xchg
aam
ja
cli
stc
xchg
pop
mov
imul
inc
shlb
jb
insb
sbb
test
pcmpgtb
pop
mov
sbb
ret
add
mov
jne
jae
jmp
out
inc
icebp
hlt
sbb
adc
pop
mov
push
mov
mov
test
sub
mov
sub
aam
or
sbb
mov
xchg
leave
scas
mov
movb
ja
push
inc
push
pop
rclb
push
adc
int
mov
mov
in
fsts
fmuls
aas
fists
repnz
mov
enter
sbb
pop
idivl
push
gs
inc
addl
out
adc
or
mulb
test
push
sub
or
jle
pop
xchg
lret
loop
mov
ja
js
cmp
jns
cmp
adc
ficompl
mov
dec
mov
mov
or
inc
inc
fcomps
jmp
aas
addr16
dec
cmp
inc
jbe
movsb
stos
sbbl
dec
ficoml
adc
push
lds
xchg
mov
fidivrl
sub
xchg
inc
ljmp
adc
fimuls
xor
inc
sub
fsubr
arpl
push
int3
mov
dec
xchg
pop
sbb
outsb
dec
mov
std
hlt
lret
iret
ljmp
std
aas
mov
fiadds
imul
jmp
orl
xchg
mov
cltd
cmp
dec
sbb
fwait
clc
cwtl
jle
mov
pop
pop
mov
out
cmp
test
insl
jne
icebp
cld
inc
or
outsb
pop
rcrl
sti
inc
mov
mov
xchg
ja
xchg
jmp
adc
int3
pop
and
xor
mov
mov
das
xor
aam
mov
mov
jns
xchg
aam
xor
fcomps
jecxz
sbb
cltd
js
lret
gs
subl
pop
pop
int3
inc
mov
or
and
push
mov
imulb
addl
mov
pop
and
cltd
push
ror
loopne
dec
les
cmc
sti
dec
out
je
xchg
insb
mov
popa
call
mov
loope
imul
test
pop
out
xchg
call
jbe
or
mov
addr16
push
cltd
mov
mov
or
stos
cmp
stc
adc
dec
mov
dec
xchg
les
shr
jp
pushf
lret
test
xchg
sbb
inc
jbe
int3
loop
popa
and
xorb
daa
pop
push
rcl
mov
ss
adcl
xchg
test
cmpsb
outsb
mov
xchg
mov
cmp
fdivl
ss
shlb
and
scas
mov
jb
pop
movsl
mov
adcb
shlb
out
jecxz
mov
jb
scas
push
icebp
jmp
dec
xor
jmp
pop
inc
icebp
mov
pushf
hlt
cmp
push
pop
sub
xchg
jle
ja
cmp
cwtl
and
aas
adc
cmpsb
movsb
jmp
sub
cwtl
dec
setp
outsb
outsb
push
movsl
repz
cmp
aaa
xlat
cwtl
into
xchg
xor
push
roll
mov
in
push
in
stos
fdivrl
sahf
push
or
fs
je
dec
push
xchg
mov
inc
test
push
and
subb
movl
push
cmp
pop
inc
test
test
in
icebp
std
cmp
cmpsb
in
xchg
in
xor
mov
and
insl
pop
xor
in
cltd
mov
pushf
cmpb
stos
hlt
fs
push
and
fs
cwtl
jne
fsubr
int3
in
aaa
in
es
inc
repz
push
adc
test
xchg
and
popa
mov
pop
mov
jmp
jbe
dec
jge
pop
xor
jno
or
push
pop
xorb
and
xchg
es
inc
addr16
add
rcrl
and
xchg
sub
jno
sub
mov
push
jb
fwait
sub
dec
xchg
mov
adc
cltd
dec
xorb
fxch
push
nop
sysret
inc
mov
clc
pusha
and
mov
and
xchg
push
push
adc
dec
sub
xchg
ljmp
sub
daa
sti
xchg
insb
dec
cmp
adc
mov
rorb
push
xchg
dec
out
cmp
imulb
bound
lock
push
cmp
mov
mull
push
push
inc
xchg
xor
data16
or
or
sbb
loop
call
imul
pop
cs
xor
inc
mov
out
mov
mov
ds
dec
pop
jns
cmp
rorl
and
xchg
mov
into
sub
outsb
jae
dec
sbb
dec
sub
nop
out
std
ljmp
jecxz
lods
mov
psllq
in
loop
pop
cmp
mov
je
dec
push
lret
repz
insb
dec
push
mov
sbb
loopne
arpl
lds
adc
jb
mov
cmc
les
dec
lret
loope
or
push
xchg
enter
cmc
pop
lret
mov
bnd
dec
leave
insl
sbb
xor
fnstenv
push
or
in
int3
pop
inc
mov
inc
iret
aam
cmpsb
pushf
mov
inc
das
and
inc
or
jo
or
fnsave
adc
or
sti
adc
push
mov
push
jno
adc
call
pop
sbb
fcompl
stos
pop
mov
mov
inc
addr16
andl
js
aaa
cmc
and
jmp
lret
push
dec
mov
lea
xchg
loop
gs
arpl
sahf
push
ss
leave
and
call
ljmp
lret
testl
fucomp
rolb
arpl
sub
div
mull
ficompl
mov
imul
psrld
scas
into
outsl
jnp
adc
mov
xchg
sbb
cmp
and
xchg
dec
inc
repnz
shl
sbb
inc
sbb
jecxz
jae
clc
lods
mov
pop
adc
mov
push
xchg
out
sbb
xchg
push
xchg
idivl
adc
jg
or
cmp
sub
aaa
mov
lds
adc
lods
sub
es
mov
popf
push
push
inc
lods
and
les
sub
movsb
mov
xchg
cld
bound
mov
jp
jns
insb
jl
repnz
addr16
lret
imul
mov
pop
push
into
inc
mov
add
add
mov
adc
rol
mov
out
push
xor
aad
and
iret
clc
loope
lret
das
or
add
or
push
adc
dec
xchg
and
sub
je
or
stos
scas
arpl
nop
out
jge
add
movsb
lock
lods
mov
cwtl
jne
jne
fcomi
mov
jge
cs
sub
or
or
mov
data16
xchg
call
lret
nop
cmc
ds
mov
pop
movsb
lcall
xorl
push
mov
mov
xchg
lods
xchg
fstpl
mov
push
std
adcl
xor
adc
dec
mov
aam
mov
pushf
fisubl
mov
je
aas
sbb
push
sub
push
adc
xor
jg
es
inc
rcll
clc
sbb
xor
pop
cmp
sbb
popf
jb
test
push
xor
dec
scas
adc
dec
cld
push
in
jg
test
add
fnstcw
jnp
fcmovnb
mov
xor
cmp
leave
inc
sub
movsl
in
and
dec
imul
jg
js
pop
xor
push
and
mov
mov
sub
daa
push
cs
sbb
jmp
xchg
gs
fnstcw
gs
out
addr16
mov
addr16
jecxz
cmpb
movsl
test
mov
push
rcrl
loop
out
lahf
push
dec
popl
sub
push
ljmp
mov
addb
xor
cmp
or
out
fsubrl
in
int3
push
insb
divb
test
push
call
es
bound
popf
jmp
lock
stos
in
shr
add
pop
dec
stc
pop
pop
pop
mov
cli
test
mov
test
or
aas
test
xor
test
sahf
push
push
cmp
xchg
sbb
outsb
and
jne
repz
or
mov
dec
and
mov
lods
in
out
daa
add
and
imul
push
sahf
fists
les
or
mov
rcll
dec
hlt
mov
pop
pop
fstpt
sti
mov
aas
aam
sbb
js
mov
inc
sbb
lods
sub
ds
mov
jbe
repz
xor
add
mov
pop
test
loop
add
push
mov
mov
incl
pop
pop
push
mov
sti
xchg
mov
mov
mov
stc
push
xchg
push
in
and
mov
lcall
aaa
test
mov
cmp
pop
ret
sarb
dec
jno
insl
xchg
shlb
out
xchg
jmp
xor
jbe
mov
sbbl
mov
xor
mov
lea
hlt
jns
iret
mov
add
jle
xchg
in
stos
fwait
mov
js
and
divl
adc
sub
jbe
fwait
and
jmp
cmc
mov
sub
mov
sub
mov
cmpsl
lea
mov
lahf
fbld
fstpl
mov
decl
sbb
hlt
xchg
and
pop
lret
fsubrs
ret
and
push
inc
repz
sbb
inc
lahf
shlb
imull
add
ja
aam
dec
js
inc
push
inc
xchg
inc
mov
shlb
ja
dec
call
insl
cmpsl
das
dec
jg
sub
pop
fwait
push
inc
mov
pop
scas
arpl
pop
aad
jp
outsb
mov
sbb
inc
sub
ljmp
and
cmp
mov
pop
xor
ret
repz
movsl
mov
fbld
cld
mov
dec
inc
sub
scas
jp
popf
not
in
inc
mov
stc
insb
dec
and
data16
jnp
dec
mov
sub
lds
in
add
aad
xchg
inc
pop
cmp
inc
repz
xor
sub
int
ret
mov
mov
mov
sbb
aad
stc
inc
shll
movsl
inc
sub
ss
xor
imul
mov
and
mov
lods
xlat
loop
fcomip
add
movsb
addl
cltd
repnz
pop
pop
sub
lret
jmp
xchg
out
adc
xchg
inc
dec
sub
inc
and
or
sub
outsb
daa
pop
repnz
scas
dec
aaa
inc
pop
arpl
sbb
push
inc
xor
xor
mov
inc
pop
mov
pop
movsl
or
aaa
aam
fldcw
sub
adc
jge
adc
jle
mov
test
ds
push
sbbb
inc
xchg
test
loop
push
dec
mov
cmpsl
gs
mov
add
mov
jge
out
lret
sub
daa
pop
cli
mov
les
movsl
mov
push
mov
inc
clc
adc
mov
inc
repnz
push
xor
push
add
scas
mov
andl
push
pop
aam
addr16
hlt
orl
inc
pop
sar
mov
pop
adc
dec
xor
insl
hlt
add
dec
xchg
adc
xchg
dec
fidivrl
outsl
imul
cltd
push
add
pop
repz
jge
dec
scas
sub
pop
filds
mov
sbb
or
stos
and
aad
mov
mov
aad
stos
cmp
mov
add
outsb
push
inc
test
cmpsb
pop
arpl
pop
lds
nop
xor
lea
mov
mov
mov
leave
aaa
push
lea
add
push
ss
cmp
mov
je
push
pop
add
and
out
mov
xchg
cmpsb
sarb
arpl
aam
xlat
xchg
mov
movsb
arpl
dec
shl
sbb
pop
jae
je
stc
or
dec
out
cltd
mov
fisttps
xchg
sahf
pop
sbb
flds
xchg
mov
test
add
out
insb
push
push
jge
shll
js
sub
mov
lock
xor
jp
xor
cmp
insb
xchg
adc
add
inc
lock
adc
sbb
in
int3
mov
cmp
xchg
adc
xchg
and
add
test
inc
push
pushf
cld
into
mov
inc
jge
push
frstor
xchg
or
fistpl
cmp
and
mov
stos
test
mov
xlat
xchg
cmpsl
push
ljmp
test
sub
mov
mov
jp
cld
je
loope
sbb
inc
fdivl
addr16
inc
push
rclb
out
lret
dec
and
xor
adc
ljmp
ret
dec
ficompl
mov
sbb
arpl
pop
push
push
sbb
popf
inc
dec
shr
or
add
mov
mov
aam
gs
cli
pop
xchg
push
cmp
nop
popa
and
jo
lret
dec
ljmp
cmpsl
jnp
rorb
xchg
hlt
aad
gs
inc
imul
test
and
enter
push
add
mov
iret
xlat
mov
mov
sub
fisubrl
fwait
xor
cmc
xchg
add
dec
push
push
mov
mov
imull
stos
rol
aas
jg
jns
pusha
pop
cld
pop
in
lock
pop
push
xchg
fcomp
dec
add
pop
fmull
dec
adc
mov
inc
pop
xor
cmp
mov
xor
fxch
push
mov
push
fbstp
pushf
mov
xchg
cmp
or
cltd
dec
jle
jp
cmp
xorb
lret
dec
dec
hlt
into
mov
decb
pop
dec
push
out
divl
sub
cld
cld
sub
cmp
fdivrl
clc
xchg
jmp
bound
mov
mov
out
mov
pop
cmp
mov
xor
je
inc
rclb
mov
popf
mov
pop
xor
or
push
jecxz
xchg
mov
inc
or
pop
cbtw
xchg
xchg
cmp
push
sbb
lea
pop
add
mov
adc
insb
xchg
std
sbb
iret
mov
shlb
dec
or
sub
out
sbbb
pop
mov
mov
vmread
mov
dec
add
cli
cmp
fnstenv
mov
int
add
in
cmp
dec
lds
mov
fld
lcall
cli
cmpsb
mov
insb
sbb
xor
out
scas
fcoml
push
and
addr16
leave
xor
jp
inc
js
div
and
clc
int3
popa
sahf
pop
cltd
cs
push
jnp
inc
cmp
pop
fisubs
in
loop
and
and
ret
xchg
mov
lahf
lcall
xlat
rclb
mov
scas
dec
sub
sahf
std
pop
dec
sbb
ljmp
jge
add
mov
and
mov
insl
loopne
add
in
pop
daa
cmp
cs
push
outsl
shll
adc
push
jno
and
cmp
sbb
roll
dec
and
xchg
or
ds
idivb
lret
out
dec
dec
xchg
test
xor
hlt
or
jno
out
test
imul
add
inc
jmp
push
inc
xor
imul
mov
iret
xchg
inc
add
jle
loop
push
iret
add
fdivrl
xchg
jae
lea
stos
hlt
icebp
lds
xchg
or
cmpsb
xchg
shl
repz
jecxz
inc
sbb
fldcw
adc
lods
dec
sub
rolb
sub
imull
inc
or
push
icebp
xor
add
inc
addl
adc
ds
mov
add
test
jge
cli
insl
cmp
int
xchg
push
mov
xlat
pop
mov
dec
xchg
fbstp
ret
pop
mov
cmp
sbb
jb
add
loop
lds
or
call
xchg
test
xor
fisttpl
sub
push
insl
insb
out
sti
xchg
adc
or
mov
cmp
mov
notb
adc
stos
loopne
inc
inc
subl
es
pushf
pop
push
aad
data16
fmuls
jmp
and
outsl
fs
jbe
ja
pop
jb
cmp
bound
adc
push
dec
xchg
jl
xchg
adc
jmp
lret
pop
mov
and
je
scas
repz
pop
xchg
fiadds
cld
inc
and
hlt
jge
jo
xchg
and
mov
lret
daa
push
stc
inc
jo
push
push
in
cmp
mov
jbe
jne
mov
mov
push
cli
xorb
mov
ror
push
add
or
mov
push
pop
push
pop
sahf
add
pop
subl
stos
cmc
mov
cmp
out
hlt
sbb
xor
xchg
sub
mov
imul
push
std
lret
mov
jne
sti
push
inc
ret
cwtl
shll
xchg
outsl
movsb
addb
pushf
enter
jb
push
mov
jae
mov
sub
test
lcall
ficoms
pushf
inc
sbb
std
js
jmp
test
test
xor
xchg
cmp
aad
gs
into
cmp
int3
inc
add
inc
add
pop
cmp
leave
push
les
je
and
sbb
scas
jbe
arpl
cmp
adc
in
popf
mov
add
shll
mov
fists
jno
mov
xor
jo
and
aam
aaa
jno
aad
mov
jl
mov
dec
xor
mov
ss
sub
or
mov
mov
sbb
or
mov
adc
lret
cmpb
popf
mov
int
sbb
cmp
xchg
dec
mov
pop
push
push
out
push
add
jecxz
and
xor
shlb
in
popf
jl
and
push
pop
push
dec
ljmp
and
cwtl
ja
jb
or
int
test
imul
imul
sbb
daa
and
dec
xchg
xlat
push
enter
or
ljmp
or
pop
push
xlat
add
out
arpl
mov
sahf
mov
test
adc
or
mov
sbb
fcmove
xor
push
aaa
mov
mov
cmp
pop
sbb
sub
push
mov
clc
jle
mov
lds
sbb
adcl
je
inc
ficomps
cmp
mov
dec
js
jae
out
jle
pop
test
cltd
roll
fdivrs
sarl
fs
xchg
aaa
loop
iret
pop
pop
inc
cmpsl
rorl
jp
cmp
cli
mov
lds
mov
je
aad
clc
jg
jmp
adc
adc
popf
push
inc
mov
cmp
inc
mov
movsl
xchg
data16
inc
mov
xor
rorl
dec
test
jg
mov
into
inc
fstpt
aam
lods
call
scas
push
lock
push
dec
aas
push
jg
sarl
push
lds
sub
js
addr16
push
mov
imul
jge
fnstcw
lds
push
ds
mov
push
push
mov
add
ljmp
mov
mov
cltd
push
jge
add
out
je
idivl
cli
test
repnz
movl
mov
leave
xor
leave
ljmp
and
jmp
adc
jp
lods
fs
test
push
add
xor
mov
or
mov
hlt
repnz
and
mov
in
xor
xor
imul
jnp
lods
sub
sti
shlb
push
loop
aam
not
and
cwtl
cld
cmp
dec
jl
sub
add
enter
mov
outsb
addl
gs
iret
lea
jno
mov
mov
push
sub
xchg
fimull
jp
xchg
xlat
mov
pop
inc
in
jge
jmp
mov
cmp
ficoml
or
int
fadds
jp
sub
lods
adc
dec
jb
cld
stos
mov
jbe
rolb
push
or
push
mov
fwait
in
sahf
sub
adc
fnstenv
add
mov
test
out
fisubrs
iret
aad
xchg
mov
xor
int
add
dec
mov
cwtl
and
adc
je
or
in
add
test
adc
dec
inc
dec
outsl
sbb
mov
sub
xchg
and
cli
dec
fdivr
and
lahf
ds
xor
mov
adc
push
sbbb
cmpsl
pop
push
hlt
pop
and
push
imul
sub
cmpsb
jo
loope
dec
orl
cmpsb
push
shr
lea
mov
lock
sub
std
mov
dec
xorb
push
cmp
insw
ja
insl
mov
fs
std
push
lcall
in
cmp
mov
les
xchg
bound
repnz
sahf
leave
repz
adc
aad
pop
pop
pop
iret
add
test
xchg
add
call
push
lcall
cmp
out
jp
pop
mov
sub
cmp
adc
fisttps
aam
xor
sahf
in
jo
lods
iret
pop
imul
or
inc
not
aad
outsb
ret
into
dec
add
push
jbe
inc
jge
and
push
insl
out
jle
stos
cmp
push
lea
dec
fadds
mov
decl
rclb
xlat
xchg
mov
mov
aam
pop
mov
fmuls
jl
test
iret
xchg
lock
inc
push
pop
popa
adc
xchg
add
std
arpl
mov
adc
flds
jnp
orl
outsl
inc
das
xchg
test
jmp
mov
and
cwtl
hlt
jb
jl
push
xchg
sub
roll
fistpll
mov
test
add
push
pop
mov
pop
xchg
adc
lret
xor
mov
adc
sub
xchg
mov
xor
jbe
dec
fwait
inc
movsb
jae
push
sbb
ds
jno
out
and
scas
addr16
add
outsl
shrl
cltd
es
out
sarb
lock
xchg
jge
call
pop
test
xchg
sub
inc
sub
push
out
test
inc
aam
lods
loop
xor
aam
stos
mov
int
test
das
lock
fwait
pop
sbb
test
outsl
push
dec
ret
sbb
mov
out
push
inc
push
dec
mov
pop
lea
lock
pushf
xor
mov
mov
pusha
xlat
and
or
movsb
aaa
fwait
shll
pop
les
scas
and
add
pop
xor
scas
push
sbb
pop
call
mov
or
fildll
adc
sub
sub
inc
pop
pop
es
xchg
pop
inc
fdivrl
movsl
stc
xchg
xchg
rcrb
xor
add
xor
into
mov
jae
or
mov
mov
movsl
cmp
xor
stos
mov
xchg
cmp
push
xchg
leave
mov
xchg
repnz
stos
cmp
or
rcrb
fisttpl
xchg
stos
mov
or
enter
mov
insl
adc
mov
out
pushf
fs
mov
push
enter
push
mov
popf
xchg
jns
lock
dec
or
push
nop
mov
aad
sti
pop
outsb
dec
dec
add
mov
sbb
sub
bound
repz
movsb
jecxz
out
dec
fdivs
and
push
and
aas
pop
xor
and
loop
mov
pop
push
push
jle
outsb
icebp
mov
cmp
and
adc
mov
lods
fisubrl
test
fs
mov
ljmp
jo
lahf
inc
rcr
xor
call
std
int
mov
mov
lret
adc
mov
jo
inc
movsb
std
jge
push
sahf
les
ds
inc
loope
jo
insb
inc
jnp
sbb
jno
pop
dec
jg
jecxz
cmpb
jnp
xchg
loopne
loopne
xor
pop
and
out
ja
mov
pop
mov
popa
inc
dec
push
ja
add
dec
jge
jp
sbb
out
inc
pushf
aaa
insl
pop
pop
sbbl
mov
outsb
outsb
ffreep
inc
mov
pop
xlat
arpl
insb
loop
xchg
imul
shlb
ret
mov
imul
inc
shl
add
cmp
cmp
out
push
movsl
lcall
mov
pop
mov
sbb
xchg
jnp
mov
jnp
les
xor
fcoml
cmp
xor
js
stos
lods
cmp
mov
inc
std
repz
lcall
xchg
outsb
adcb
cli
lahf
inc
xor
int3
dec
arpl
lret
sbb
jo
movsb
push
jno
jno
add
imul
int
shl
lods
mov
stos
sbbl
insb
add
imul
add
cmp
xor
pop
push
movsb
das
dec
jno
icebp
mov
pop
and
xchg
cmp
mov
filds
mov
cmp
mov
xor
fpatan
cmp
push
ficomps
push
inc
lahf
insb
sub
sub
mov
and
add
inc
adc
test
cld
or
lea
cwtl
mov
loopne
xlat
xchg
bound
popa
push
cmp
push
popf
and
sub
and
enter
insb
std
mov
jecxz
lods
fs
mov
pop
pop
dec
dec
mov
aas
cmp
int3
aad
mov
dec
pop
pop
add
in
or
cmp
mov
decb
ljmp
shlb
pusha
inc
pop
cmpsb
jecxz
jl
fcmovbe
das
mov
out
push
push
push
insb
stc
movsb
push
mov
mov
loop
sbb
ror
push
inc
jo
fcmovb
mov
lods
push
xchg
push
mov
scas
pop
or
add
or
jecxz
mov
jmp
push
ds
jbe
mov
in
arpl
fists
fcmovnb
loope
add
cmp
jae
test
mov
ss
test
jmp
test
jnp
cld
or
xchg
aaa
pusha
mov
mov
mov
lahf
jle
adc
dec
lods
or
pushf
rcll
jl
sarl
push
dec
inc
xor
in
or
sbb
lock
cltd
push
cmp
scas
mov
jge
jbe
in
add
lods
xor
jno
jge
add
push
fwait
loope
jmp
fsubrl
pop
sbb
mov
data16
cmc
sub
inc
cli
in
ss
enter
lods
xlat
push
adc
mov
mov
in
negl
push
btr
sti
js
sarb
mov
mov
dec
and
in
add
call
stc
cmp
out
push
flds
adc
cmp
dec
lock
rcr
jns
or
mov
imul
mov
mov
dec
test
into
adc
push
dec
ficompl
xchg
and
sbb
push
lret
ficomps
mov
push
lea
pop
push
cmp
pop
pop
adc
mov
in
xor
repnz
jno
nopl
sbb
jno
lods
push
mov
push
fildll
mov
inc
pop
test
ret
dec
or
push
inc
lret
loopne
rorb
ficompl
push
push
inc
iret
bound
in
repnz
dec
adc
xchg
mov
lcall
out
fists
xchg
mov
rcrb
inc
std
xchg
sbb
dec
add
jecxz
cmpsl
shll
enter
pop
aad
jb
xor
pop
int3
pop
pop
push
lcall
outsl
jg
cmpsb
mov
or
sti
lods
gs
mov
xchg
ja
lea
daa
je
push
test
pusha
ss
mov
vmovlps
sbb
cld
mov
ljmp
push
and
mov
daa
out
or
xchg
ljmp
fists
clc
dec
sbb
loope
xchg
lods
mov
stos
int
and
mov
sbb
in
addr16
dec
insb
pop
sbb
xchg
sti
jecxz
inc
push
pop
repz
cmp
xor
add
dec
in
je
rorl
sub
pop
push
idivb
lods
or
mov
sub
stos
xor
mov
mov
or
imul
repnz
sub
xor
mov
popa
push
ffreep
inc
iret
cmp
and
shrl
mov
inc
jne
or
into
subl
icebp
lret
xchg
mov
inc
xor
add
out
dec
push
inc
sbb
fnstenv
ss
icebp
xor
xchg
xchg
sbbl
mov
jno
repnz
cmp
rol
mov
dec
dec
xchg
jmp
dec
push
ja
or
ja
sub
xor
mov
repnz
cld
jg
push
push
jl
gs
inc
les
sbb
mov
ret
add
sub
mov
movsl
or
mov
in
dec
lock
dec
or
std
imul
xlat
rorl
inc
push
pushf
xor
mov
dec
sub
mov
pop
aam
xor
loope
mov
xor
jae
mov
fdivrl
testb
test
cmp
test
jg
jecxz
mov
jp
jb
clc
fsubrl
dec
les
pop
cmp
and
addb
mov
mov
out
adc
push
ljmp
dec
add
xchg
dec
push
loop
or
jne
xor
aam
xchg
mov
mov
out
mov
push
addr16
or
mov
mov
push
or
sub
subl
sbb
ror
scas
pop
dec
xor
push
push
scas
int3
add
mov
push
jb
and
add
inc
in
stos
mov
loopne
in
jmp
sub
mov
pushf
xchg
leave
dec
pop
cmc
sar
pop
lds
in
or
movsb
dec
pop
aas
mov
ret
push
jl
cmp
das
shll
adc
ljmp
jbe
jne
lods
roll
ret
outsb
in
cmp
scas
inc
inc
cwtl
pop
and
cmpsb
call
insb
mov
xlat
pop
mov
mov
xchg
mov
fisubrs
mov
sub
je
lock
nop
pop
inc
sbb
out
cmp
mov
popf
dec
jg
or
mov
ret
out
into
stc
push
cltd
xor
xchg
jnp
sahf
xchg
inc
cld
fwait
push
loop
addb
in
orl
scas
scas
inc
popl
xchg
xchg
pop
push
mov
jbe
test
or
jns
fcoms
pusha
adc
les
push
or
xor
out
mov
pushf
or
sbb
mov
push
jl
out
xor
test
loop
js
dec
xor
mov
mov
jno
in
orb
lcall
push
push
and
ds
sbb
jecxz
and
push
aas
dec
movsb
dec
and
scas
pop
cmp
ja
dec
jnp
and
cwtl
scas
shll
xchg
std
fwait
jo
add
xor
imul
xchg
xlat
and
jae
cmp
cmpsl
sub
lods
xlat
insl
push
mov
ret
cwtl
xchg
repz
mov
lahf
mov
or
fwait
xor
cs
inc
inc
rcl
pop
dec
push
cmpsb
lods
jb
adc
or
mov
xor
xor
sub
iret
pop
cmpsl
push
repz
jl
outsb
or
xchg
leave
pop
xlat
mov
xchg
push
mov
imul
and
cmp
mov
test
nop
pop
or
sub
dec
mov
lcall
mov
clc
push
insl
pushw
mov
sbb
or
push
mov
icebp
lahf
addl
pop
shlb
out
loope
or
mov
inc
stos
dec
mov
jns
ficompl
mov
pop
mov
iret
jmp
sub
call
das
fucomi
mov
xor
mull
pop
mov
mov
push
enter
sub
xchg
fdiv
dec
mov
inc
lods
and
rolb
xchg
dec
mov
cs
sbb
ror
jg
lods
cltd
push
mov
xorb
adc
push
fwait
push
sbb
push
lcall
cmp
jb
jl
pop
ss
sbb
xchg
sar
movsl
push
jne
in
cmp
sbb
xchg
adc
les
xrelease
sub
imul
fbstp
push
or
pop
je
or
adcl
ljmp
sub
jg
test
push
jb
cmpsb
loop
sub
imul
or
cmpsl
cli
icebp
or
dec
xorl
repz
leave
mov
sbb
dec
adc
jl
lods
pusha
mov
sub
lock
add
xchg
mov
sbb
sub
lret
sbb
rol
pop
les
push
add
shll
mov
mov
sub
pop
pusha
js
in
push
push
stos
movsl
pop
xchg
mov
push
and
cld
mov
push
xor
mov
mov
outsl
fadds
cwtl
ss
in
mov
mov
or
mov
test
lret
inc
fcoml
sub
mov
mov
in
mov
bound
sbb
popl
aam
xchg
fidivrl
push
mov
lcall
add
inc
jo
mov
cmp
sbb
push
push
sub
inc
cmp
sbb
cld
loope
pop
test
dec
sbb
push
dec
dec
lods
add
in
cmp
pop
stos
inc
fdiv
sti
lahf
fldl
pop
out
and
rorb
in
insb
fnstenv
fcompl
and
dec
jbe
mov
dec
sub
cmp
dec
fwait
in
inc
cli
jl
dec
test
and
cmc
push
data16
jo
das
ficompl
movsl
fwait
loop
inc
xchg
leave
movsb
sbb
movsb
test
out
das
mov
cld
and
push
or
out
push
insl
xchg
cmp
femms
insb
xor
xchg
ret
out
hlt
data16
cltd
js
xor
mov
push
fmulp
push
push
mov
call
xchg
and
subb
fwait
pop
sub
adc
mov
lret
or
setl
and
inc
mov
push
insb
lcall
in
inc
adc
pop
add
and
shll
sub
push
or
inc
into
sbb
in
sub
arpl
adc
xlat
pop
fwait
mov
sbb
jnp
das
pop
mov
call
or
imul
or
mov
sbbl
pop
push
push
incl
mov
xchg
pushf
js
inc
movsl
stos
mov
mov
add
jecxz
cmp
fsubl
push
mov
mov
xchg
ss
push
push
mov
pop
jno
call
std
xchg
dec
sbb
push
jae
add
or
jg
int3
mov
or
mov
and
loopne
sti
jnp
xor
xchg
push
sub
je
mov
mov
fldcw
into
nop
popa
inc
xchg
enter
xor
mov
adc
out
sbb
jp
movups
jge
inc
xchg
adc
adc
push
ficomps
je
lods
push
leave
and
cs
aad
mov
adc
ljmp
jno
pop
jle
loop
xchg
or
enter
pop
or
xor
and
sbb
jae
adc
and
xchg
fists
and
dec
cwtl
imul
jbe
test
daa
movsl
sub
cmpsb
xchg
movsl
fistps
jae
cmp
mov
mov
leave
add
mov
dec
or
xlat
int3
jecxz
inc
xor
in
xchg
mov
test
push
sub
mov
mov
inc
xchg
or
neg
dec
clc
mov
push
test
pusha
inc
jge
mov
movsl
repz
jmp
jbe
jno
pop
push
add
scas
inc
jle
jae
les
mov
sub
xor
adc
data16
outsb
xchg
mov
faddl
lcall
movsb
add
sub
out
push
das
add
pop
aad
adcb
fsub
fistpll
sar
sbb
test
fsubrs
xchg
adc
xlat
int3
icebp
lret
sbb
inc
dec
xchg
out
pop
cmp
jns
sbb
sub
int
mov
jmp
cld
and
add
fsubrs
iret
fcoml
jl
fsts
jmp
or
xchg
xor
add
dec
add
mov
repnz
hlt
je
xchg
push
mov
jns
cwtl
scas
int
inc
mov
jl
popf
ror
cmc
fdivrs
pop
xchg
pop
data16
icebp
arpl
cmp
lret
adc
jno
mov
mov
push
xchg
outsl
pushf
scas
test
inc
adc
testb
subl
push
inc
es
mov
aaa
mov
out
pop
lret
aas
mov
cmp
pop
pop
adc
popa
and
xchg
ss
dec
inc
incw
inc
jmp
ljmp
mov
jge
ffree
orb
stos
das
ss
fdivrs
test
imul
cmpsb
lret
je
xchg
mov
push
out
lcall
adc
enter
mov
add
addr16
fdivs
sub
or
push
stos
cmp
test
jo
cmp
add
ljmp
cli
fucom
or
mov
mov
in
ret
inc
push
out
test
or
xorl
stc
dec
or
xor
xlat
das
ret
mov
cmp
lcall
jl
xor
adc
int3
stos
adc
popf
and
stos
cwtl
mov
enter
cwtl
cmc
xorl
dec
cmp
je
outsb
fmull
inc
repnz
insb
sub
test
dec
nop
aad
xchg
movsl
xchg
pop
dec
sbb
pop
arpl
loop
xchg
out
icebp
mov
sahf
or
mov
pop
jno
jo
add
xor
jns
mov
pop
daa
mov
mov
popf
push
cmp
mov
fstl
lock
cli
das
add
xchg
push
xor
in
rcll
fstl
out
cmp
imul
push
bound
sbb
stos
pop
pop
mov
jbe
sarb
sub
cmpsl
nop
sub
aaa
jnp
xor
xchg
lahf
lret
nop
mov
enter
jecxz
popf
inc
mov
ljmp
sahf
jge
ret
dec
cmc
fsub
adc
inc
stc
xor
test
pop
out
pop
inc
leave
divb
push
dec
cmp
dec
mov
xchg
and
sbb
prefetchwt1
in
dec
ja
fdivrl
mov
jmp
dec
sub
ja
xchg
mov
aas
sarl
inc
xor
cmc
test
ss
or
mov
mov
divl
push
fwait
repz
xchg
xchg
inc
outsl
loopne
jecxz
loopne
ret
stos
mov
sti
mov
notl
sti
jb
daa
mov
pop
sbb
enter
push
mov
ljmp
or
mov
inc
jae
mov
test
adc
mov
or
icebp
lods
insl
test
push
mov
push
adc
push
bound
and
int
mov
lret
pop
jecxz
add
pushl
enter
mov
mov
imul
imul
adcl
adc
adc
sbb
mov
and
lret
mov
pusha
mov
adc
test
xor
sbb
or
jl
ja
out
inc
pop
repnz
add
push
pop
mov
test
ds
add
ret
pop
xlat
dec
aaa
in
sub
dec
sti
pop
mov
repnz
ss
into
push
ss
pop
jge
scas
ficomps
inc
sbbl
sub
sbb
leave
lahf
xor
push
mov
adc
rol
inc
mov
adc
std
pushf
test
inc
aad
jae
iret
insb
and
mov
xchg
fsts
jp
ja
pop
repz
popf
push
in
imul
movsb
sbb
js
fdivl
mov
out
out
test
clc
or
nop
pusha
je
repz
mov
push
stos
add
mov
bound
push
test
loope
mov
pop
push
adc
lea
adc
mov
fldcw
xlat
sar
stos
out
mov
popf
dec
push
cld
js
cmpl
and
jno
inc
test
xchg
ds
or
and
jge
inc
xchg
cmp
xchg
cmp
dec
pop
fwait
cli
and
lea
mov
mov
daa
pushf
jae
push
sti
inc
popa
inc
add
jp
icebp
mov
dec
lea
in
les
lds
hlt
loopne
push
outsb
sahf
popa
jp
cwtl
sbb
add
cli
lods
mov
fs
fdivs
add
mov
fstps
flds
adc
mov
or
push
mov
fsubrl
inc
pop
mov
lret
fcomps
push
int3
outsb
scas
pop
ja
mov
jge
out
push
les
jmp
jmp
mov
rorl
push
or
shrb
imul
movb
mov
and
loope
stos
sub
pop
lea
js
out
lret
js
xor
int3
jns
loope
pop
push
imul
lods
mov
mov
es
jnp
call
jno
call
ja
mov
imul
inc
adc
repz
cli
repz
out
jle
iret
mov
inc
mov
ror
jecxz
xlat
cmpsb
push
das
or
push
mov
mov
dec
cmp
cmp
les
mov
filds
in
pop
andl
pop
ud0
pushf
sbb
loope
sub
imul
jbe
pop
or
adc
ds
loop
mov
dec
imulb
mov
mov
leave
mov
xchg
leave
mov
in
dec
sti
movsl
jne
jo
subb
or
pop
sti
push
aam
push
repz
pop
adc
lret
pop
mov
sbb
ret
cld
jbe
out
xor
jns
dec
inc
pop
loopne
pop
sbb
cli
pusha
and
dec
lock
and
js
shlb
out
mov
push
in
fisttpll
pop
subb
js
fidivl
nop
xchg
jmp
inc
call
push
repz
lret
mov
pushf
jnp
shlb
sarb
inc
or
stc
rol
shl
scas
mov
mov
xor
fs
add
push
and
inc
mov
mov
and
cmp
test
fildll
pop
sub
pop
mov
clc
or
sub
fsubl
mov
xchg
push
pushl
rorl
dec
inc
negb
imul
inc
sub
and
call
and
or
push
out
ficomps
stc
fdivrl
aas
push
cs
jle
pop
xchg
mov
js
jnp
jmp
insl
bnd
or
adc
cmpsl
fdivl
mov
xor
cwtl
push
mov
repnz
push
scas
mov
stos
cmp
xchg
arpl
sarl
push
sbbb
and
or
bound
iret
jl
sub
pop
out
or
push
mov
das
imul
div
and
fimuls
xor
outsl
jae
rorl
test
xor
and
jge
inc
clc
pop
mov
cmpps
inc
mov
call
xor
inc
xor
call
inc
sbb
loop
cmc
pop
clc
inc
push
push
ja
dec
xlat
or
jle
imul
or
jmp
pop
es
out
in
repz
outsl
sub
call
insl
xor
xchg
inc
sbb
mov
inc
adc
fldln2
cltd
stos
mov
clc
adc
and
inc
and
mov
adcb
movsb
cs
and
sub
sub
sti
pop
pop
lods
sbb
mov
sar
sbb
add
cmp
sbb
dec
xor
adc
lock
inc
cmc
adc
out
sahf
jmp
push
addr16
shlb
lcall
outsl
popa
mov
cmpsb
leave
out
add
mov
pop
call
ss
or
aaa
test
dec
xchg
movl
das
icebp
fidivrl
mov
mov
mov
pop
cli
add
imul
dec
jnp
loope
xchg
pop
push
fwait
pop
jns
inc
jg
hlt
and
xchg
pop
push
push
mov
insl
out
xchg
add
and
adc
sbbb
xor
test
or
sahf
popf
hlt
or
aam
negb
lcall
push
fistps
xchg
stos
or
dec
cmp
add
xchg
push
and
jmp
pop
call
repnz
cmp
pop
shrl
mov
popf
add
inc
imul
inc
arpl
inc
bound
daa
and
or
arpl
fsubrl
mov
ds
push
push
ret
xchg
push
enter
add
add
lret
out
fs
xchg
inc
cmpsl
lahf
cmp
dec
push
fidivrs
stos
add
int
add
push
xchg
xor
inc
dec
dec
cmc
mov
push
mov
and
inc
rorl
loopne
std
aas
shr
sub
outsb
ret
adc
jno
insb
outsl
insb
jno
test
clc
scas
jns
mov
mov
and
inc
sub
sbb
mov
mov
loopne
arpl
sub
cmpsl
bound
mov
lahf
in
mov
pop
jmp
bnd
pop
inc
xchg
iret
cmpsb
out
dec
enter
push
cmp
mov
hlt
sub
dec
arpl
dec
stc
jo
stos
and
in
dec
xor
cltd
xchg
mov
leave
and
dec
adc
out
je
into
lret
jmp
mov
mov
lret
ds
loop
popf
mov
divb
jp
xlat
into
sti
lock
cmp
xor
je
fwait
mov
jp
je
fdivrl
xor
jmp
stos
cwtl
sahf
xchg
leave
lock
xchg
or
loopne
xor
cmp
aad
or
test
fwait
iret
push
dec
rorb
test
ret
sub
movl
sub
pop
mov
push
or
pop
push
das
insb
sub
loop
mov
xchg
jne
dec
out
sbb
jnp
and
mov
xor
es
and
stc
cmp
hlt
mov
pop
pop
orl
std
cmp
mov
test
iret
xchg
test
inc
push
cmc
pushf
pop
shll
test
repnz
lds
xor
repz
cmp
inc
rcpps
fs
xchg
mov
fs
stc
pop
add
push
jne
and
xchg
insb
inc
fbld
adc
adc
mov
imul
jne
xchg
mov
mov
inc
adc
add
ror
aas
dec
or
sub
xchg
mov
hlt
mov
xlat
bound
shlb
mov
das
push
and
es
pop
fstl
add
ret
push
ljmp
inc
pusha
pop
adc
mov
dec
cmp
sub
aad
mov
shl
or
and
pop
sbb
cmp
jbe
add
xor
cld
or
mov
dec
cmp
push
jecxz
xor
incb
inc
scas
jl
fisttps
and
xchg
pop
aam
test
mov
std
lret
cwtl
jle
xchg
mov
jl
and
mov
adc
loope
pop
sub
cmp
in
into
aam
push
mov
outsl
xchg
sub
addb
mov
cmp
lret
cmp
mov
jl
push
stos
and
gs
movsl
outsl
dec
pop
into
xor
insl
or
push
loop
jno
adc
dec
jg
fisttps
xchg
push
outsl
lds
adc
vsubps
lcall
lods
sub
inc
add
jae
push
stc
fwait
popf
cs
push
mov
imul
mov
mov
mov
fstps
jle
jge
jnp
push
loope
aam
hlt
jo
scas
ljmp
out
xor
adc
and
inc
movsb
add
test
ficoms
jo
adc
push
aaa
or
and
cltd
add
sub
in
in
inc
inc
pop
or
data16
movsb
cmp
pop
adc
les
pushf
mov
fs
sarl
lahf
push
mov
filds
sub
cmc
cmp
or
xchg
adc
fdivrl
or
addl
rorl
sub
mov
xorb
sub
cmp
movsb
clc
adc
je
fst
out
int
push
test
jp
adc
lahf
loopne
icebp
enter
fisubrl
jmp
iret
lods
dec
clc
pop
sbb
sbb
lcall
push
test
mov
jo
push
mov
dec
mov
callw
or
cli
push
arpl
ficompl
cmp
xor
jp
cli
outsl
ss
mov
cmc
adc
jne
jo
cmpsb
and
and
adc
lds
or
cmc
insb
jno
cmp
fimuls
gs
and
adc
popf
jns
or
adc
xor
lea
scas
sub
pop
in
inc
in
sub
fisttpll
jge
push
in
push
lock
in
loope
xchg
negl
cmp
jl
pop
mov
mov
xchg
out
rorb
inc
std
adc
xchg
jbe
xor
cmp
inc
inc
xchg
scas
add
into
ret
jbe
ret
adcl
stos
pop
mov
and
out
fcmovnb
aam
cmpsl
not
cld
and
cltd
scas
lea
cs
mov
xor
aas
xor
dec
sbb
insl
mov
punpckldq
dec
sbb
xlat
arpl
jbe
sbb
ret
mov
lods
scas
jne
or
fdivs
xchg
testl
push
xchg
sub
scas
loope
push
lea
insb
jbe
sarb
shrb
cmp
add
and
adc
imul
xchg
add
add
pop
loope
hlt
call
lds
mov
push
mov
lea
fwait
inc
fdivs
out
jbe
or
int
add
sahf
mov
xchg
pop
popa
int
mov
pop
fldl
leave
sbb
pop
mov
xchg
xchg
clc
xor
jl
stos
jl
test
icebp
insl
mov
inc
nop
shrl
in
adc
dec
lret
fabs
stos
movsb
out
or
outsb
mov
mov
lahf
lds
testb
rcr
cmp
inc
fcmovu
insl
ss
mov
addl
cwtl
and
mov
test
push
ds
lods
and
sbb
dec
cs
out
cmpsb
mov
stos
sbb
enter
or
mov
add
pop
mov
mov
loopne
mov
mov
inc
rcll
out
test
lods
inc
ds
fdivs
cmp
es
inc
aaa
add
pop
orl
adc
lock
xchg
iret
cmpsl
pop
xor
xchg
dec
cli
mov
sbbl
ret
cmpsl
stc
xorl
cmp
insl
jle
push
jp
fcmovbe
jno
leave
jmp
cmc
xchg
fcompl
pop
xlat
xchg
or
push
mov
imul
cmpsb
out
or
shl
ljmp
push
pop
call
fcoml
das
int3
jo
sahf
fimull
fsubs
mov
daa
mull
push
mov
sbb
or
pop
lods
push
imulb
xchg
dec
jecxz
aad
iret
jne
pop
hlt
loope
adc
xchg
mov
arpl
push
loop
dec
sub
adc
mov
jns
mov
outsb
in
out
cmc
xchg
mov
sbb
ja
lea
push
pushf
pop
test
es
clc
movsb
incl
lds
je
fdivrl
imul
loopne
adc
notb
jmp
les
dec
fcmovnbe
sysret
jo
es
sarb
push
mov
push
shrl
and
sbb
stos
pop
sahf
dec
jp
jge
out
xchg
xor
pop
into
jg
lahf
or
lods
mov
xchg
data16
out
sbb
add
fsubrs
loope
dec
adc
jno
lea
in
jecxz
dec
testb
push
mov
sub
test
fadd
popf
dec
fcoms
fidivl
ret
popf
decb
fs
inc
jae
push
fisttps
sti
fs
stc
add
mov
jnp
js
movb
je
mov
shr
fwait
xchg
repnz
repz
xchg
and
add
mov
sub
sub
stos
jnp
inc
insl
ret
mov
das
mov
cmc
fists
and
icebp
xlat
push
ss
mov
loopne
or
mov
rcr
jnp
cli
cli
pop
mov
xchg
adc
jmp
and
add
push
insb
sbb
pop
dec
or
popa
sub
lods
in
mov
ds
mov
and
in
lods
out
push
jb
rcl
pop
lahf
push
shrl
jecxz
pop
push
or
mov
push
inc
or
jle
lret
mov
test
repz
fsubrl
sti
rolb
push
adc
sub
dec
int
sub
ret
loope
fistpl
sti
dec
jecxz
inc
mov
daa
testb
mov
adcl
sub
dec
push
aaa
daa
inc
cmp
add
int3
js
loopne
aad
jg
cld
cld
in
iret
fs
test
cmp
lock
mov
add
decl
lea
cmpsl
in
bound
or
push
cwtl
mov
sub
jne
add
cwtl
mov
out
jecxz
std
popf
lods
loopne
cmp
mull
push
std
push
pop
fs
inc
cmp
scas
fildl
imul
shll
imul
addr16
lock
std
and
frstor
and
lcall
pop
pusha
add
in
push
xchg
xor
or
mov
add
ret
cmp
push
xor
test
loop
add
fadds
pmuludq
mov
js
jecxz
data16
mov
lods
sarl
or
call
adc
scas
add
je
jnp
push
or
dec
into
add
fistpl
push
or
or
cmpsb
adc
imul
cwtl
push
xor
lock
dec
push
outsb
clc
xchg
push
sub
repz
mov
dec
mov
fwait
pusha
sub
leave
shlb
ja
sub
test
cmpsb
cmp
mov
push
xor
xor
dec
sbb
push
xchg
cmp
lcall
repz
xor
lcall
dec
cmp
test
jle
push
out
shl
add
dec
loopne
in
mov
add
xchg
fisttpll
and
jbe
xor
mov
cmp
cmp
sub
add
pushf
lds
cmp
out
mov
jne
mov
int3
push
cld
dec
jbe
ljmp
outsb
cmp
inc
jbe
mov
je
hlt
pop
xchg
clc
cwtl
or
ss
roll
and
jno
icebp
inc
test
xchg
inc
jle
and
in
xor
pop
cmp
outsb
insl
in
jo
pop
mov
jae
ds
inc
xor
nop
idivl
pop
rorl
ficompl
in
dec
ss
aam
pop
pop
cmp
jno
and
movsl
dec
push
adc
mov
test
imul
test
jecxz
cmpl
das
mov
xor
jo
sbb
fnsave
movsl
mov
mov
aas
push
and
cmpl
add
mov
push
cld
mov
outsb
jo
xor
inc
aas
add
mov
ret
lcall
mov
pop
hlt
jp
sbbl
mov
lods
dec
testl
ljmp
inc
pop
shll
je
dec
sahf
int
push
jl
sub
mov
push
js
push
inc
stc
out
inc
test
jb
pop
jno
cli
out
int3
sub
jle
jae
pop
cld
into
das
jp
and
push
dec
sbb
shrb
dec
popa
dec
lret
sub
add
negb
jno
sub
ss
jge
cmp
mov
fisttps
sarl
mov
lds
aad
cmp
lahf
daa
daa
pop
clc
dec
mov
add
adc
dec
ret
out
scas
out
mov
inc
movsb
mov
mov
pop
outsb
mov
and
and
mov
push
push
add
in
loope
push
clc
es
adc
pop
outsl
cmp
jb
pop
cmp
and
lods
popl
sub
shrw
add
fiaddl
imul
leave
mov
cltd
xchg
subl
and
in
mov
cli
out
jb
sub
jno
loopne
insb
enter
pusha
push
iret
dec
adc
push
xor
rcll
adc
aam
push
mov
jl
cli
or
insb
pop
pop
jo
jp
ljmp
imul
cmp
pop
movsb
mov
popf
push
pop
xor
push
cmp
or
mov
into
and
mov
push
xor
out
push
xor
cmp
dec
xor
mov
sub
dec
fucomp
loopne
pop
ficoml
mov
shr
jb
fucomi
xchg
and
jo
rclb
test
cmp
sahf
mov
aad
dec
cld
xchg
mov
cli
enter
mov
push
leave
mov
and
mov
mov
xchg
and
adc
or
mov
test
mov
ja
inc
aas
sbb
and
dec
push
lea
and
pcmpgtd
adc
jae
jo
test
testb
addl
push
mov
adc
icebp
fisubs
stos
fdivrs
push
lods
xor
imul
test
mov
notl
and
mov
fnsave
sbb
std
aam
daa
push
mov
mov
push
iret
cmp
lods
cmpsb
data16
loope
cmp
leave
loop
aad
xchg
repz
cmp
in
mov
mov
imul
repnz
sbb
leave
pop
in
push
ja
inc
push
sbb
arpl
or
cmp
sub
mov
sub
loope
mov
add
in
jns
mov
sub
call
std
jo
mov
addl
roll
imul
xor
jo
decl
fistpl
je
xor
arpl
fadds
mov
mov
and
fisttps
adc
mov
cli
mov
dec
js
gs
lods
xor
sti
xchg
arpl
cli
arpl
inc
fnsave
mov
scas
mov
out
ds
jo
fistps
sti
lea
push
xorb
add
subl
into
aas
lds
in
inc
mov
lret
push
inc
mov
adc
and
xor
and
mov
cwtl
clc
fbstp
jns
dec
xor
push
and
sub
roll
loopne
fstl
mov
loop
push
cmp
in
ljmp
fiadds
in
mov
adc
int3
or
sub
adc
xchg
bound
lahf
mov
fsubl
fldt
push
adc
xchg
sarl
xlat
ss
mov
out
data16
jns
out
mov
popf
addb
push
jne
push
movsl
or
bound
outsb
adc
movsl
mov
das
loopne
jge
in
mov
mov
testl
lea
dec
cli
adc
xlat
jp
xlat
fwait
or
add
dec
mov
test
mov
test
and
add
cmpb
sub
pop
push
push
das
sub
loop
cmp
jbe
int3
dec
fsubl
pop
jno
cli
movsl
setne
ret
mov
push
repnz
fsubl
shl
add
icebp
jbe
fnstenv
or
rcrl
mov
or
xlat
push
mov
in
pop
sub
rcll
repz
add
mov
push
leave
xor
out
outsb
mov
xchg
sub
jns
clc
shll
imul
xchg
cltd
jb
insb
cmp
dec
dec
cmp
fucom
sbb
adc
in
je
out
jge,pn
enter
jo
or
add
insl
xchg
mov
shll
daa
and
negb
mov
mov
jae
mov
and
xchg
out
int
das
mov
clc
sub
and
shll
test
mov
loope
xchg
std
in
cld
pop
fs
jmp
inc
jp
cmpsl
inc
pop
mov
mov
jne
in
jl
enter
test
popf
cwtl
sub
mov
jg
cmp
lret
jg
add
fists
xchg
cmp
adc
pop
fcoms
sub
mov
xchg
fnstenv
sbb
rcrb
sbb
dec
mov
clc
ret
out
lods
lahf
loopne
lea
sbb
push
loope
push
dec
fistpll
ret
test
jnp
mov
cli
cltd
sbb
sbb
and
mov
or
cmpsb
in
jb
ja
int3
push
jge
gs
push
mov
push
mov
dec
xor
adc
jmp
das
dec
into
jg
sbb
sbb
nop
nop
fdivl
cmp
clc
subps
andl
dec
jbe
pop
bound
or
mov
hlt
ja
cltd
cltd
in
and
insb
lods
sbb
xor
dec
cmpsb
cs
jle
popa
test
sbb
sub
mov
cmp
xchg
pop
dec
ds
pop
sarb
push
imul
add
pop
xor
push
out
loope
ret
and
sub
mov
lds
stos
mov
aad
or
and
mov
jmp
mov
push
and
mov
repz
mov
fsubrl
pusha
and
cld
inc
adc
je
jecxz
xchg
xlat
mov
mov
test
mov
sub
jnp
int3
xor
sub
cmp
push
les
push
dec
lret
pop
pop
scas
sub
adc
sub
sub
jns
sti
sbb
or
jle
pop
iret
sbbb
jae
jecxz
mov
xchg
stos
rcl
test
das
add
jmp
jmp
push
inc
cmc
in
loopne
pop
cmp
ds
cmp
fs
mov
daa
mov
in
sub
sub
push
clc
das
stos
mulb
cmp
test
movsl
nop
adc
sarb
cwtl
sbb
jle
mov
popa
mov
xchg
cmp
jp
popa
shll
aam
sahf
mov
addr16
pop
sbb
or
add
scas
push
sbbb
daa
jge
sub
pop
inc
push
cmpsl
inc
add
xchg
lret
sub
iret
push
shrl
scas
jno
dec
lods
inc
mov
cld
push
and
and
push
adc
mov
stos
test
movsl
cmp
movl
insb
xchg
movsl
add
insb
popf
cmp
and
jae
jge
hlt
dec
inc
sbb
inc
jge
pop
stos
jecxz
push
repz
sbb
cmc
push
mov
pop
stos
divb
popa
inc
repz
dec
dec
add
jns
and
and
cmpsb
mov
cwtl
ret
push
sbbl
dec
arpl
mov
fwait
jg
xorl
jle
push
pop
mov
jle
in
dec
mov
mov
loope
int
push
jae
pushf
out
inc
jnp
dec
outsb
jp
mov
std
cltd
aad
and
addr16
lock
orl
xchg
imul
pop
ja
fmull
aad
sub
push
sbb
adc
movsb
jecxz
scas
xor
dec
imul
dec
ja
out
adcb
in
mov
ja
xorb
bound
push
inc
xchg
movsb
xor
shll
sub
mov
add
movsl
pop
xchg
popf
in
in
lret
sbb
mov
clc
test
xorl
pop
push
popf
inc
popa
jmp
xchg
jnp
js
jle
inc
les
nop
adc
pop
imul
popa
call
xchg
out
jo
test
outsb
or
cmc
out
cvttps2pi
add
jecxz
mov
mov
or
or
shl
clc
xchg
imul
mov
push
or
pop
loope
xchg
or
mov
pop
jl
imul
out
test
andl
jns
jl
setb
repnz
test
js
jmp
pop
clc
data16
sbb
lcall
sub
jg
fdivl
xchg
sbb
jo
push
scas
lret
mov
popa
int3
or
mov
or
inc
sbb
repz
icebp
mov
push
call
enter
gs
and
jl
xor
out
fisubrl
dec
add
bound
insl
mov
jbe
jle
inc
mov
cltd
fwait
xchg
dec
cmp
sbb
push
ljmp
xchg
sar
mov
mov
imul
fwait
leave
lock
xchg
int
jle
mov
sarb
jno
in
jnp
and
xchg
test
negl
sbb
push
rcrl
stos
add
lcall
pop
add
sbb
addl
mov
mov
jns
cmp
cld
lcall
daa
xor
push
insb
out
jp
dec
mov
pop
les
cmc
mov
outsl
pop
aad
sub
rclb
decl
dec
sldt
dec
or
rcrl
pop
pushf
push
adc
pop
aam
or
sti
jns
rcll
je
scas
push
imul
dec
mov
je
push
out
lods
pop
repnz
pusha
cmp
push
jne
and
or
fcmovu
jno
outsb
push
scas
dec
sti
mov
push
sbb
std
cli
loop
hlt
push
lea
imul
addr16
sar
push
in
cmp
cmp
sub
xor
dec
outsb
adc
cltd
sub
and
sbb
iret
adc
cmp
pop
fnop
or
mov
ljmp
mov
test
stos
xor
sub
xor
xchg
ljmp
xor
nop
sbb
in
mov
repnz
das
jg
stos
adc
seto
out
andb
xchg
mov
pop
add
imul
xchg
mov
adc
adc
xchg
bound
xor
les
pop
bound
stos
out
dec
insl
fildll
add
sub
test
dec
xchg
sbb
push
scas
out
pop
and
outsb
mov
ret
iret
add
cld
std
mov
sar
push
scas
pop
mull
add
shrl
pop
push
ret
ret
or
stos
mov
fsub
dec
pop
jmp
es
adc
jp
pushf
arpl
sub
andl
mov
ja
shll
adc
or
cmp
lods
loopne
sarl
cmpsl
push
dec
jne
lea
or
jmp
pop
das
das
adc
pop
gs
repnz
cwtl
cmp
cmc
int
hlt
and
xchg
cmp
inc
sbb
aam
movsl
sarb
stc
dec
lods
mov
out
lcall
sahf
pop
test
push
repz
mov
sbb
clc
popa
scas
rol
test
inc
out
inc
fldt
in
out
or
and
cmp
test
lcall
fisubs
popf
sbb
adc
pop
movsl
push
fsubs
insb
outsb
fiadds
inc
pop
pop
jns
in
addb
fwait
cmpsb
sub
fdivr
cmpb
or
mov
nop
int
pusha
and
psubusb
shlb
dec
mov
pop
xorl
mov
mov
xor
push
sti
scas
sti
cli
or
xchg
iret
sbb
pop
mov
stos
repnz
div
xchg
adc
inc
clc
iret
je
inc
xlat
outsb
lock
je
aad
jecxz
dec
shl
fiaddl
adc
mov
repnz
push
inc
mov
or
lods
mov
push
cmovno
outsl
les
cmp
mov
sub
xchg
jl
mov
pop
aad
xor
es
clc
test
inc
xlat
ljmp
xchg
jle
insl
mov
rcr
pop
mov
mov
aas
es
mov
and
add
push
sbb
lret
lds
scas
jb
push
dec
sbb
jno
mov
in
std
lea
dec
sti
mov
sbb
push
enter
fdivrl
mov
sbb
fsubp
mov
jp
push
and
dec
pop
pop
jg
push
shrb
inc
mov
sub
adc
adc
cmp
gs
inc
dec
test
fwait
mov
jo
stos
cmpsl
sub
and
sub
xchg
andl
lods
dec
and
sbb
lea
inc
mov
test
push
pop
out
or
in
int3
dec
repz
adc
mov
int3
push
inc
loope
mov
push
sbb
out
mov
push
leave
dec
insb
dec
fildll
jg
aas
mov
lcall
push
mov
inc
in
sbb
ljmp
mov
subb
inc
scas
hlt
dec
cmp
mov
cmp
loope
jl
js
imul
xorl
xchg
js
js
fs
pop
dec
dec
jg
push
inc
adc
mov
mov
lcall
outsb
stc
jne
dec
add
lcall
xchg
mov
xchg
push
mov
shrl
das
test
mov
mov
test
pop
fwait
icebp
in
ja
pop
or
xor
std
test
jo
push
dec
xor
cmpl
push
aas
pushf
dec
cmp
and
out
xor
and
ja
sbb
insb
movsb
mov
aad
popa
push
idivl
stos
add
cmp
dec
lods
popf
xchg
sub
or
shll
sbb
rolb
lds
jle
fstpt
punpckldq
xor
jns
cwtl
out
mov
in
das
cs
push
xchg
jmp
lret
lea
ja
lods
shlb
movsl
addr16
mov
cmp
pop
mov
sub
mov
sbb
divb
lea
cs
fs
push
out
into
sbb
and
int3
lock
es
or
xchg
xchg
ror
pop
mov
into
gs
xchg
push
dec
daa
aad
and
pushf
movsb
sub
or
lods
int3
gs
mov
stc
outsl
out
push
pop
out
rorb
int
mov
mov
jbe
mov
mov
push
sub
mov
cmp
adc
add
lahf
ds
inc
es
mov
adc
repnz
mov
sbbl
and
fisubrs
mov
push
ja
push
sub
js
ret
movsb
dec
pop
test
xor
scas
push
mov
jp
xor
pop
mov
js
in
inc
jmp
insb
movsl
mov
mov
dec
std
push
dec
jge
jne
stc
mov
push
and
or
mov
clc
dec
jo
sbbl
popf
arpl
fnstenv
loope
cmp
jl
push
movsb
movl
enter
sar
sahf
aaa
out
sahf
adc
mov
push
mov
push
arpl
or
pop
xchg
int3
dec
sub
test
xchg
xor
rorl
push
sub
inc
xchg
sub
dec
pop
cmpsl
inc
mov
adc
testl
shl
push
pop
mov
and
sbb
test
pop
les
mov
insl
pop
inc
dec
mov
das
enter
ljmp
mov
add
dec
pop
repz
sbb
mov
jne
stc
and
pop
aad
repz
loop
sarl
jmp
pusha
cmp
xor
ds
aaa
cmp
in
push
out
in
call
mov
lahf
mov
mov
cmp
out
scas
movsl
jbe
or
jmp
adc
push
adc
jo
cmp
dec
dec
and
push
aaa
idivl
fstpt
iret
cld
mov
test
roll
sbb
xchg
repz
inc
testb
xchg
shlb
lock
and
ucomiss
adc
adc
inc
out
sbb
aas
outsl
ljmp
xlat
sub
mov
iret
xchg
push
xchg
adc
jg
outsb
xchg
insb
inc
js
jg
cmp
shr
cli
sub
shlb
bound
es
lcall
imul
adc
mov
iret
ds
add
aam
mov
call
xor
add
mov
cmpsl
push
mov
mov
or
lret
mov
rorb
test
xor
adc
test
xchg
test
mov
nop
inc
xor
scas
lea
mov
jmp
movsl
sub
add
movsb
mov
sub
or
dec
push
scas
mov
imul
inc
push
inc
adc
shl
pop
push
rorb
ret
xchg
sbb
daa
test
push
sub
cli
stc
jb
aad
in
and
ret
and
mov
loope
sahf
int3
xchg
sbb
mov
popa
cli
pop
popf
push
es
imul
adc
out
ljmp
mov
nop
out
loop
and
in
mov
xor
int
pop
cmp
fcmovnb
cmp
push
jo
mov
jns
xlat
fisttpll
push
cwtl
or
imul
adc
in
sub
enter
jae
mov
lds
cmpsb
std
std
popa
dec
adc
gs
xchg
dec
addb
push
fucomp
pop
adc
pop
xchg
inc
sti
rcll
call
mov
sbb
xchg
fmul
mov
cmp
mov
jl
pop
xchg
packuswb
push
sub
mov
gs
mov
dec
dec
mov
inc
jns
push
hlt
into
in
xor
repnz
pop
sbb
pop
dec
lods
jne
hlt
shlb
jp
cmp
fsubrl
fcoms
mov
mov
and
cmp
mov
cmc
daa
dec
pop
das
cmpsb
clts
mov
iret
cmp
push
mov
test
push
lcall
push
sbb
data16
sub
testl
cmp
ret
mov
pop
jae
sti
rorl
pop
push
jecxz
imul
adc
mov
adc
daa
cld
cmpsb
nopl
sbb
movq
imul
dec
sub
imul
xchg
pop
fldcw
adc
xchg
mov
ss
out
scas
in
mov
faddl
pop
movsb
mov
test
xchg
xor
pop
fs
inc
repz
jmp
adc
in
pop
xchg
add
pop
inc
cmp
or
jne
aad
fst
das
clc
xchg
xchg
xor
cmpsl
cmp
cli
lret
fisubrs
lods
bound
inc
loopne
stc
xchg
inc
cmpsb
data16
pop
add
xlat
dec
xchg
push
dec
addb
jns
jmp
mov
pop
mov
and
cmp
nop
sahf
loop
fwait
cwtl
sarb
add
mov
in
std
or
adc
sbb
mov
arpl
jb
xchg
fldl
cmpsb
and
jl
loopne
or
mov
inc
mov
push
inc
pop
popf
jg
inc
adc
fcomps
push
xchg
dec
inc
cmp
dec
dec
adc
in
nop
ds
mov
sub
data16
aaa
pop
mov
stc
cmpsl
rorb
test
stc
pop
ret
stos
adc
or
bnd
hlt
jno
out
push
ret
bound
movsl
jp
loop
int3
mov
inc
pop
not
cmp
push
jg
adc
aad
push
pusha
fcoml
enter
hlt
fbld
iret
gs
inc
sbb
outsl
inc
sahf
mov
and
push
and
ds
mov
std
stos
push
jne
lret
lahf
mov
sbb
pop
pop
push
mov
dec
pop
mov
xorb
xor
loop
icebp
pop
or
cwtl
sbb
cmp
test
xor
shll
inc
xchg
mov
ror
loop
sbb
adc
inc
xor
stc
fwait
sbb
popa
out
sbb
icebp
ds
sbb
xchg
xor
mov
cmp
ljmp
dec
movsb
xor
jmp
stos
cli
xchg
cmpsl
fcmovnb
mov
inc
cltd
loop
sub
imul
jmp
dec
ror
mov
or
push
leave
jno
push
stc
inc
dec
xlat
movsl
cmp
mov
ss
dec
sbb
mov
pusha
jne
insl
xchg
sbb
out
repnz
add
inc
fs
pop
shll
mov
int3
pop
pop
addb
push
aad
in
loope
sub
je
dec
xchg
test
adc
push
jg
cmp
push
xchg
xchg
mov
mov
xor
mov
or
sub
and
call
pop
cltd
sbb
sahf
jno
sub
sub
xchg
cmpb
sub
cmp
mov
adc
xlat
test
mov
mov
xchg
sub
xor
in
repz
daa
sub
mov
mov
mov
cmpsb
cli
cli
mov
push
dec
add
xor
ret
cmpsl
sbb
adc
fs
xor
dec
and
mov
lret
rol
cmp
dec
inc
js
mov
add
pop
xor
push
dec
jecxz
push
lea
jg
lea
xor
pop
push
lret
push
cmc
pop
push
mov
or
mov
into
negl
xchg
in
and
shr
lods
inc
or
test
shr
push
and
hlt
sar
mov
cmp
pop
pushf
and
sbb
and
cmpsb
stc
imul
lahf
add
xchg
pop
sarl
iret
or
mov
sub
lods
rcr
jp
mov
icebp
shlb
insl
jne
idivl
pop
enter
pusha
ds
jl
jp
inc
repnz
test
mov
cmpsb
mov
pop
stos
sub
or
enter
adc
mov
test
scas
mov
dec
aam
inc
pop
push
push
jmp
fwait
out
mov
xchg
jecxz
inc
xor
xchg
outsl
mov
out
ljmp
fstl
sub
adc
xchg
push
movl
icebp
lods
and
addr16
sub
inc
lcall
popa
mov
int
int3
je
mov
fcom
fnsave
popa
and
inc
pop
enter
loop
lock
jb
mov
cmpsl
sarl
cmp
inc
stos
ds
dec
jne
adc
nop
test
adc
daa
cmc
addb
in
cwtl
mov
sbb
push
movsl
lret
jbe
mov
fwait
cli
sub
adc
xchg
es
mov
out
xchg
cwtl
mov
adcl
out
jno
inc
lret
gs
ret
mov
cmp
outsb
or
xor
pop
mov
outsb
mov
shrl
in
push
lea
sub
xchg
pusha
xor
nop
xchg
lds
ret
inc
xchg
jmp
aas
push
leave
stos
sub
xchg
push
sub
jae
mov
mov
scas
call
fst
push
adc
adc
fldt
cmpb
mov
jnp
mov
rclb
outsl
pop
aaa
or
je
dec
mov
xor
push
xchg
mov
mov
cmpsl
cmp
shl
out
and
ret
fcomps
out
mov
insl
in
xlat
push
cltd
sub
mov
cs
jecxz
cmp
je
in
or
loope
pop
lods
mov
inc
xchg
orl
mov
setne
dec
jl
mov
push
lock
mov
push
movsb
mov
subl
andb
imul
xchg
add
gs
movsb
pushl
loopne
sub
pop
outsb
mov
sahf
or
rolb
or
iret
jle
adc
xor
popa
lahf
push
jp
outsl
jns
outsl
pop
cld
pop
xor
xor
xor
cmpb
mov
sbb
clc
or
add
and
addr16
out
outsl
fadd
mov
jo
cli
fildl
xor
cltd
stos
clc
or
shlb
jecxz
sahf
lcall
scas
mov
and
and
cmp
mov
pop
add
xchg
fdivrl
roll
push
jle
inc
xchg
dec
scas
scas
lds
dec
jo
int3
fcoms
loopne
pusha
int3
sub
mov
cmp
and
push
ss
mov
pop
inc
shl
sbb
cmp
lret
cmpsl
stos
and
out
aam
call
push
mov
test
out
fs
pop
mov
rcrl
ds
sahf
mov
xlat
shll
fwait
popf
outsb
pop
fistps
mov
jge
or
das
xchg
push
sub
pop
push
xchg
leave
or
pop
mov
inc
lret
test
mov
dec
cmp
xor
das
stos
pusha
sbb
je
mul
loopne
add
cmc
ljmp
test
rol
lret
add
jo
adc
std
mov
imul
xor
imul
adc
and
out
jmp
icebp
and
ds
arpl
out
inc
stos
lods
pop
sub
in
sbb
add
fadds
ret
mov
sub
jp
fimuls
nop
adcb
nop
adc
dec
push
inc
mov
xor
or
in
adc
lahf
mov
dec
ret
push
xchg
push
lret
or
aas
js
aam
fistps
idivl
xor
jnp
ds
and
ror
dec
mov
pop
lods
xchg
dec
adc
jmp
xlat
or
add
inc
mov
cmp
js
pop
ljmp
cmp
xor
pop
jg
adc
and
les
add
ret
mov
lock
xchg
jnp
sub
call
sbb
int3
add
cmp
rsqrtps
outsb
inc
adc
mov
iret
inc
daa
ljmp
jbe
outsl
cmpsb
subb
call
shrl
cmp
sbb
push
xchg
cmp
dec
jnp
rorl
je
dec
jnp
jp
mov
and
rcl
sub
xor
adc
jae
mov
out
mov
dec
jo
addr16
and
pop
in
or
dec
cmp
insl
test
insb
pop
jnp
mov
ss
or
mov
add
or
sub
cmp
into
lcall
or
enter
mov
sub
sbbl
ds
and
repnz
dec
js
out
pushf
rcr
push
adcb
jns
lret
gs
out
jl
stos
es
adc
addr16
fwait
orl
sti
lds
ficoml
dec
xlat
and
int
sahf
lock
push
mov
pop
add
sbb
in
outsl
push
sub
xchg
jmp
das
push
out
sbb
cld
xchg
add
pop
pushf
pop
sub
mov
xor
adc
pushw
dec
lret
xchg
dec
data16
pushf
adc
push
mov
insb
lret
pop
fisttpll
pop
loope
jl
call
ret
fcomps
add
adc
jbe
adc
shlb
incl
aaa
pop
scas
add
daa
jne
out
movaps
jo
mov
fidivl
out
mov
dec
loopne
add
repz
push
jne
lea
hlt
mov
add
and
rorl
negl
iret
pop
icebp
fs
pop
or
sub
hlt
or
xchg
popa
pop
lret
push
iret
mov
repnz
xor
and
jno
lds
jg
mov
or
outsl
cmp
lea
das
adcb
imul
mov
push
or
push
test
xchg
aam
mov
xchg
push
sub
or
jae
cwtl
cmp
test
js
jo
jns
xlat
and
in
cmp
clc
test
sbbb
aas
iret
dec
movsb
aas
fidivrl
mov
and
out
pop
dec
or
mov
outsb
lods
xor
jge
in
imul
loope
test
in
and
mov
ds
ss
mov
cmp
pop
add
jo
push
ds
andb
out
add
mov
hlt
or
xor
sub
ja
xchg
int3
jge
jge
xor
es
xor
out
subb
rcrl
sbb
jg
mov
test
fs
or
pop
dec
mov
shrl
mov
pop
arpl
push
cmpsl
dec
xchg
scas
add
sbb
pop
sbbl
add
stos
fcomps
shlb
jnp
or
push
mov
je
lahf
jne
lds
adc
xor
push
fcomip
mov
add
pop
mov
sub
js
out
movsb
loop
or
sbb
or
xchg
xchg
sub
and
sub
inc
and
jae
je
or
enter
or
jbe
addr16
xchg
xchg
mov
pop
sbb
mov
cmc
lcall
loope
xchg
sub
pusha
cmp
imul
aas
aad
mov
and
negb
cmp
inc
sub
clc
inc
int3
fs
pop
in
data16
pop
cmp
or
ss
mov
cmpsl
fcompl
inc
sbb
inc
arpl
fimuls
rcll
or
popf
adc
inc
call
lret
push
fiadds
jecxz
jl
fcmovne
test
or
aaa
sub
fisubrs
or
rorl
mov
ja
idiv
xor
dec
or
outsb
int3
imul
lods
sub
call
stc
out
lahf
loopne
adc
orl
cmc
loop
movsl
inc
aas
mov
cmpsl
sti
jg
mov
mov
aas
pop
inc
xchg
pmaxsw
sti
call
outsb
xchg
mov
xor
stos
inc
fs
loopne
inc
cltd
incl
leave
fwait
into
xchg
rcll
add
mov
fwait
mov
movsl
mov
in
outsl
jae
xchg
pop
in
test
popl
test
loop
push
aad
fs
fidivs
adc
loope
std
push
inc
and
xchg
shl
add
jl
xor
or
dec
mov
ret
sbb
ss
sub
sahf
push
xchg
mov
mov
mov
xchg
out
int3
lods
or
orb
mov
sbb
cli
test
inc
cmp
stc
mov
out
cs
cs
insl
clc
and
or
mov
arpl
dec
cmp
ljmp
mov
dec
popf
inc
out
mov
jge
popa
stos
inc
inc
daa
jle
jmp
xchg
pop
daa
pusha
xor
enter
ljmp
dec
mov
xor
sub
add
cmp
inc
inc
adc
insb
std
pusha
push
stc
dec
daa
push
xchg
mov
enter
mov
mov
inc
xor
sbb
mov
pop
adc
pusha
int
sbb
addb
push
cld
xchg
pop
cmp
sarb
cwtl
nop
pop
test
mov
push
inc
loopne
fidivrs
jb
or
aas
icebp
add
pusha
dec
rcll
push
push
add
test
mov
data16
pop
inc
shl
pop
sbb
popf
sub
mov
pop
test
sub
adc
jne
jae
jbe
js
ss
es
cmp
cmp
out
mov
push
pushf
mov
test
inc
jmp
mov
notl
push
movsl
inc
into
pop
jge
xchg
mov
cmpsb
pop
or
adc
mov
xchg
mov
dec
ss
inc
adc
sbb
sub
vpavgb
pop
icebp
sub
les
xchg
or
mov
mov
lods
push
mov
in
imull
pop
and
push
cmp
inc
scas
inc
xchg
stc
scas
xor
bound
loope
nop
out
push
pop
aaa
pop
pop
pop
je
fwait
dec
test
pop
sub
repnz
imul
adc
inc
in
jne
or
ja
popf
sub
mov
nop
add
jecxz
aaa
shlb
or
aam
push
lret
stos
push
scas
pop
leave
imul
data16
mov
outsl
xlat
xor
ljmp
addr16
fwait
imul
add
addb
pushf
jge
jnp
adc
jl
mov
in
sarb
rorb
dec
dec
push
push
xchg
addl
rorl
inc
imul
jae
mov
imul
mov
mov
scas
int
movsl
mov
dec
mov
push
popf
push
push
std
add
pushf
push
aaa
shlb
mov
aas
out
sub
je
cmpsl
xor
test
outsb
ror
sbb
add
jae
out
jmp
cmc
cmp
lods
and
inc
out
or
cli
pop
sbb
add
out
push
sub
ljmp
bound
jno
sub
push
testb
ret
fstpt
pop
dec
jecxz
pusha
push
jecxz
aad
gs
jge
leave
dec
add
aad
pushf
sti
inc
or
hlt
xor
mov
sub
push
sarl
cmp
dec
mov
sbb
aaa
cwtl
mov
mov
shl
dec
rcr
scas
sbb
js
cmc
enter
adc
sbb
iret
das
mov
mull
or
mov
jns
test
nop
insl
and
cld
add
push
and
mov
pop
nop
dec
adc
shrb
es
cmpsl
xor
pop
cmp
ja
push
shrb
mov
lret
test
fistps
test
xchg
shll
xchg
adcl
pop
adc
negb
or
pminub
lods
test
add
loopne
or
scas
adc
popa
mov
mov
xor
rolb
cmpsb
cmp
mov
cltd
fnsave
clc
mov
cmp
pop
mov
std
ror
sbb
jbe
andl
shlb
inc
dec
ret
in
sub
adc
sub
mov
int
push
pop
loope
fnstsw
mov
pop
and
cmpsb
mov
xor
or
adc
jge
sbb
sbb
test
addr16
sbbb
push
rclb
testl
mov
pop
test
pop
mov
push
lods
push
sub
out
stos
xchg
lds
pop
inc
mov
or
and
loop
mov
jl
adc
xor
iret
gs
cmp
jae
int3
fcomi
movsl
sub
pop
cwtl
cmp
mov
and
imul
dec
les
mov
insb
fwait
mov
subl
mov
shlb
sub
daa
movsb
push
sar
ret
cmc
into
push
lahf
repz
arpl
xchg
fwait
xlat
aaa
in
scas
and
xchg
ds
loopne
jo
pushl
outsb
std
lods
stos
fisubrl
add
stc
push
push
adc
popf
aad
lea
pop
repz
add
jle
in
cmp
insb
or
inc
pop
inc
in
loop
fistpll
jb
sbb
push
cmpl
push
sbb
lret
ja
sahf
adc
mov
stos
pushf
jl
jg
enter
add
mov
es
sbb
sbb
shlb
or
gs
test
leave
adc
hlt
pop
jns
push
ss
push
mov
and
sub
rorl
mov
add
mov
stos
jecxz
sbb
sbb
cmc
or
mov
inc
lcall
add
jl
pop
lret
mov
mov
add
test
out
repz
cltd
mov
imul
fidivl
and
xor
sbb
pop
xchg
popf
or
imul
std
aad
xchg
pop
mov
or
aas
int
and
pop
outsl
adc
mov
pop
int
sbb
andb
lds
aas
popf
lds
scas
pop
bound
dec
out
repz
ret
jns
cmp
cmc
xchg
cmp
clc
out
loop
shll
shr
mov
xchg
mov
push
js
xchg
xchg
pop
jns
loopne
push
or
shlb
push
lock
imul
mov
or
cmp
outsl
mov
sahf
push
mov
mov
cmp
jb
fwait
repz
es
push
stc
lret
dec
cmovs
loope
lret
sbb
test
cs
outsb
jecxz
xchg
mov
ja
aas
mov
cld
popa
cmpsl
scas
and
xchg
sarl
in
sbb
mov
or
cwtl
movsl
jmp
fsubrl
out
adc
add
mov
cmpsl
lret
ret
daa
sbb
out
mov
sbb
fucomip
repnz
jmp
lcall
sub
nop
mov
pop
cmp
pop
pop
leave
movswl
sbb
jge
mov
inc
cli
fwait
cmpsl
push
push
add
mov
test
push
sub
icebp
test
data16
sbb
mov
add
mov
ficomps
outsb
insb
repz
pop
ds
jns
mov
jecxz
flds
mov
cmp
fs
cld
jmp
add
les
rolb
jns
sub
loop
rcl
jmp
lret
adc
mov
fisubrl
aas
test
ljmp
sbb
into
je
call
insb
or
fnsave
cwtl
test
pop
aad
fisttps
xor
push
scas
mov
imull
xchg
pusha
out
insb
push
push
add
inc
insb
or
jecxz
orb
jns
or
call
and
mov
jge
mov
addl
int
mov
or
popf
mov
jp,pt
cwtl
mov
outsl
inc
jno
ja
sbb
jno
xchg
inc
data16
sbb
pop
movsb
ficoml
insb
mov
mov
cmp
adc
push
pop
cmp
test
ror
mov
mov
int3
gs
mov
xor
jg,pn
mov
lret
add
cli
in
mov
fwait
dec
addr16
ret
fwait
ja
jp
mov
mov
mov
mov
das
push
or
clc
fucomip
leave
iret
lret
or
ds
les
jle
negb
rcrb
or
pop
cmpsb
pop
imulb
push
sub
jge
gs
pop
mov
insl
jns
adcl
lea
pop
inc
sbb
roll
ljmp
test
push
cmp
aam
add
std
push
inc
int3
xchg
inc
xor
sub
fistps
jno
adc
leave
push
outsl
cltd
and
mov
and
mov
fldenv
gs
inc
xor
add
xor
inc
rclb
or
jmp
ds
in
xchg
into
hlt
pusha
or
and
bound
mov
test
jmp
cld
mov
leave
jp
inc
std
jge
push
push
daa
inc
icebp
mov
shrl
dec
sub
pop
mov
dec
xchg
or
sub
or
sub
ret
ret
adc
paddusb
scas
mov
outsl
cltd
xchg
xchg
jbe
inc
add
pop
xchg
jp
mov
dec
or
roll
fs
push
popa
fcoms
out
or
das
mov
sti
lds
daa
xchg
stos
addr16
scas
popf
xchg
and
fwait
out
lods
ja
mov
inc
xor
xlat
fimuls
inc
nop
push
shrb
pop
std
inc
lock
and
add
loop
pop
and
shlb
xor
sti
dec
mov
inc
push
mov
jbe
fisubs
push
mov
mov
popf
cmp
mov
aad
sbb
add
adc
aam
xor
ret
cltd
mul
inc
push
pop
lods
dec
mov
cs
call
xchg
sbb
cmp
mov
jne
push
mov
les
xchg
adc
ss
mov
push
xchg
or
imul
or
cmpb
jb
js
mov
std
icebp
call
pop
jle
movsl
xchg
mov
and
fldenv
add
cmp
push
mov
sub
jmp
push
adc
fldl
xlat
aaa
addr16
repz
inc
sub
push
ds
or
xor
sub
jl
lret
pop
cwtl
scas
xchg
int
andl
sub
xor
add
xor
sbb
sti
sub
push
push
add
scas
imul
xchg
sahf
loopne
rorb
add
mov
xor
pop
sbb
fs
loopne
pop
cmp
ja
sbb
add
adc
mov
ljmp
mov
negl
push
sub
fwait
les
stos
xor
in
insl
sub
push
testl
cli
add
dec
adc
test
mov
and
adc
ret
jl
dec
or
mov
sarb
add
or
push
dec
dec
jecxz
mov
movsl
mov
push
or
sub
iret
popa
push
cmpsl
or
ljmp
adc
daa
out
pushf
and
cmpsb
cmp
sub
lahf
pop
mov
lods
add
cmp
add
mov
push
adc
mov
scas
nop
jecxz
or
loope
jg
lret
push
out
dec
das
push
xor
nop
into
sbb
cli
inc
xchg
loope
pushf
push
push
xchg
push
mov
ja
mov
jae
sti
rclb
lea
insb
sti
mov
rcrb
inc
pop
xor
cwtl
jbe
mov
xchg
ja
and
push
push
mov
out
sarb
jge
push
xchg
pop
cmp
cmp
xor
push
leave
dec
jg
data16
shlb
xor
mov
mov
fnstenv
xor
imul
push
adc
lds
ds
sub
mov
mov
nop
int3
push
adc
push
xor
pop
cmp
daa
xchg
xchg
pop
and
mov
push
aad
inc
jns
into
pop
cmp
jbe
pop
mov
adc
movsl
js
lock
inc
dec
in
xchg
sti
push
sbb
insb
sub
add
les
sahf
in
cmpsb
out
fisubrs
mov
sbb
mov
in
mov
data16
pop
lods
mov
mov
mov
mov
test
shrb
mov
insb
aaa
sub
mov
lahf
xchg
rcrl
int
add
xchg
xchg
ljmp
or
inc
movsl
mov
das
jecxz
sbb
hlt
movsl
lods
pushw
cmpsb
mov
add
pushf
fadds
mov
faddl
cwtl
das
mov
mov
call
pop
cli
mov
mov
inc
in
sub
pusha
or
inc
pop
hlt
ret
dec
dec
xchg
mov
inc
mov
and
push
dec
inc
es
or
adc
xor
pop
and
leave
xchg
dec
int3
and
lock
or
fiadds
add
add
fadds
fcoms
xor
pop
daa
clc
bnd
or
add
cmp
adc
adc
in
mov
dec
rcll
cmc
cmc
xchg
xchg
sub
or
cmc
cli
test
and
dec
out
mov
xchg
push
and
push
pushf
xchg
outsl
test
or
cmp
fsubrl
lret
inc
iret
fmulp
fbstp
cmp
icebp
mov
add
mov
mov
cmp
movsb
xor
icebp
push
mov
mov
cmpsb
jnp
insl
xchg
fwait
xor
mov
sbb
scas
repz
add
mov
call
outsb
mov
mov
arpl
fisubs
loopne
insb
mov
adc
jecxz
movsb
aas
imul
add
jne
jno
mov
negl
mov
loopne
insl
scas
mov
pop
cmc
cmp
push
lods
fldcw
inc
jmp
mov
out
stc
cmp
xchg
adc
sbb
adc
and
in
incb
mov
aam
lret
adc
lea
scas
push
rclb
mov
and
xchg
jno
jecxz
into
xchg
push
inc
cltd
test
call
out
push
sti
and
xchg
jns
filds
cmpsl
lds
cmp
mov
sub
stos
mov
sub
xchg
lods
mov
sahf
fidivs
stos
add
add
xor
cld
pop
push
idiv
sarl
test
lods
xchg
aad
movsb
sub
lret
push
jmp
repnz
pop
mov
sbb
cmpsb
rclb
jg
jb
xchg
lret
ds
in
mov
mov
xchg
mov
iret
fmull
popa
adc
cmp
jb
sub
dec
test
pop
stos
push
aaa
int
sti
mov
repz
push
bound
ret
in
add
pop
sahf
xor
mov
jnp
or
push
push
jg
jb
pop
jl
je
lcall
xor
out
faddl
pushl
lods
push
sub
cwtl
dec
and
lret
and
es
insb
mov
aas
push
leave
push
push
cwtl
ljmp
and
ljmp
push
mov
scas
aad
and
and
fisttpl
bound
jl
jl
jnp
icebp
cld
add
mov
jns
shlb
and
mov
das
add
les
sub
xchg
cmpsb
add
lcall
fs
sbb
fcom
sbb
ja
lcall
leave
or
cld
inc
mov
imul
adc
enter
dec
loopne
cmp
movl
pop
pop
lock
in
cmpsb
ss
cmp
or
inc
xchg
and
jno
jmp
inc
ja
mov
out
stos
pop
test
dec
jb
cli
bnd
packuswb
sub
inc
sub
xchg
jg
loope
cltd
nop
and
sbb
add
inc
or
inc
mov
mov
adc
push
rol
adc
scas
add
andl
add
sub
pop
inc
mov
push
enter
jb
jg
fwait
call
sbb
popf
rclb
cmp
or
mov
insb
loopne
sbb
and
cmp
cmp
or
fcomps
sbb
inc
cmpsl
dec
dec
in
pop
sbb
mov
fisubrs
in
xchg
pop
pop
repnz
and
ljmp
mov
adc
mov
push
or
cmc
pushf
pop
mov
arpl
mov
push
jmp
push
jp
sti
rorb
and
jg
rclb
stos
and
and
jbe
gs
fdivrp
xor
insl
into
cld
and
lahf
dec
jns
mov
mov
adc
mov
inc
mov
and
xor
ficompl
sub
mov
popa
or
add
aam
fs
jl
fadds
xchg
adc
xor
mov
lods
scas
mov
popf
pop
add
ficoms
aad
cltd
sbb
ljmp
lea
test
fcoms
fstl
xor
push
loop
ret
sub
iret
mov
sbb
adc
xchg
sub
loop
out
movb
loope
insb
dec
mov
sub
inc
jmp
mov
push
lds
jle
nop
shrb
mov
cmp
pop
xlat
std
mov
pushf
push
pusha
jne
mov
fsubl
loope
pop
fcoml
mov
jle
mov
andb
mov
add
fisubrs
fbld
rcr
outsl
mov
xchg
ss
jl
mov
lds
mov
pop
rcll
xor
push
mov
daa
out
cmpsb
dec
pop
adc
inc
icebp
ss
jmp
xchg
mov
rolb
shlb
sti
loopne
cmc
data16
mov
inc
dec
or
xorl
leave
and
and
push
sub
in
push
iret
sub
mov
nop
sub
aad
stos
jae
les
sahf
add
and
sahf
mov
xor
dec
lods
fwait
push
sahf
cmp
fistl
aad
inc
loopne
dec
dec
dec
cmpsb
xor
mov
stos
or
pop
ds
cmp
and
ret
sbb
sbb
xchg
lock
push
jbe
xor
xchg
push
push
stos
inc
iret
aam
arpl
into
mov
mov
fildl
mov
mov
push
in
popa
mov
fs
bound
cmp
lods
rol
fs
cli
adc
orb
cmp
dec
bound
out
pushf
jmp
xchg
aas
add
sub
pop
aaa
stos
pusha
cmp
mov
js
xchg
int3
mov
movsl
ljmp
adc
inc
sti
mov
cmpsb
sbb
in
cld
sbb
jbe
shl
stos
int
insb
mov
clc
je
pop
decb
mov
push
sbb
fidivl
add
sub
mov
mov
mov
insb
and
sub
insb
or
xor
mov
jno
mov
push
push
xlat
xor
lods
in
or
in
stc
add
enter
ljmp
sti
test
sbb
out
sub
push
or
stos
inc
mov
sti
push
sbb
bound
test
pop
imul
sti
lds
arpl
loope
notb
pop
dec
adc
xor
fstpt
orl
mov
sar
popf
and
xor
testb
arpl
jmp
int
pop
jns
into
shlb
scas
icebp
gs
sahf
and
fs
jnp
cmp
push
enter
adc
jo
ss
jne
js
insl
jmp
or
mov
lahf
jg
mov
or
dec
xor
loop
arpl
push
mov
mov
fs
jmp
mov
inc
popa
mov
ja
std
mov
sbb
push
data16
cmp
inc
ret
add
inc
xchg
out
adc
push
fsubrp
frstpm(287
mov
out
cmp
cli
test
xchg
pushf
add
mov
mov
dec
inc
mov
out
pcmpgtd
mov
jae
add
inc
dec
xchg
or
mov
mov
inc
pop
inc
and
mov
popf
lcall
dec
mov
imul
cmp
sti
mov
sahf
xchg
leave
add
lea
stc
ror
add
jg
rcrb
cvtps2pi
mov
fstpl
aad
daa
pop
pop
xchg
inc
cmpsl
push
pop
or
popa
xor
jb
jmp
mov
sub
cmp
mov
pop
jbe
aam
rcrb
js
cmpsl
xor
jb
in
mov
lock
movsl
cmp
add
or
bound
fmul
sti
push
dec
popf
stos
sub
push
pop
popa
out
mov
pop
adc
mov
setnp
rcl
mov
les
xor
sbb
sbb
lahf
and
xor
mov
in
inc
sahf
and
std
jp
dec
xchg
lret
jge
scas
ret
add
mov
enter
push
shlb
mov
jns
mov
jl
test
and
repnz
mov
pop
add
mov
repz
xor
fsubl
ljmp
bound
jne
mov
push
fdivrl
mov
sbb
lods
outsb
movsl
dec
loopne
mov
iret
add
mov
dec
or
ret
out
lds
push
stos
push
pop
addr16
mov
dec
out
out
xor
imul
out
cmp
flds
fldenv
stc
fwait
or
jge
ss
insl
and
ret
clc
mov
movsl
mov
hlt
pop
jl
call
xor
movsl
inc
xchg
cmpsb
in
addr16
and
sub
jl
enter
pop
jge
imul
scas
or
cmpsl
pop
insl
les
test
jl
lcall
inc
les
in
xor
rcr
jns
add
cmp
ss
je
cmp
ja
outsb
add
inc
ljmp
lods
push
or
xchg
push
xchg
jb
je
push
fisttpl
aad
or
push
sub
mov
inc
dec
or
lret
daa
xor
xchg
mov
and
inc
sti
repz
lods
adc
in
mov
fimull
adc
test
pop
jp
icebp
push
lods
addl
aas
mov
repz
movsb
mov
loop
dec
or
dec
xor
pop
decb
das
mov
out
sbb
outsb
jbe
shl
daa
dec
les
push
lods
lret
cld
push
mov
cwtl
jno
adc
xlat
add
push
fsubrs
pop
and
lds
xor
out
sub
jbe
cwtl
dec
pop
ljmp
in
movsb
lcall
aaa
ds
cs
lret
enter
sub
sbb
mov
shrb
cmpsb
jmp
push
lods
sbb
aas
add
bnd
lods
add
jmp
lods
xor
jmp
adc
lds
mov
inc
iret
iret
pop
inc
adc
inc
lcall
xchg
mov
scas
cltd
or
pop
into
xor
inc
je
sarb
pop
adc
fistps
in
cmpsl
cmc
out
jl
fsubrl
lods
pop
adc
jbe
sbb
movsl
dec
daa
test
inc
xor
or
rcrb
popa
cmp
out
adc
insb
jno
orl
and
sbb
jl
test
hlt
insb
jmp
stos
or
adcl
orl
pop
jnp
push
out
mov
mov
sub
mov
in
xchg
mov
mov
inc
adc
arpl
int3
inc
xchg
in
imul
xorl
negl
aad
popf
or
jge
jae
pushf
jbe
fldl
mov
shrl
xchg
mov
aaa
adc
mov
cmp
lock
or
mov
loopne
or
xor
bound
add
pop
xchg
pop
pushf
cmp
je
das
ret
pop
ret
mov
sbb
inc
loop
mov
imul
push
push
push
scas
popf
jge
rorl
mov
jns
push
lock
push
xor
movsl
xor
ja
pop
adc
inc
pushf
popa
gs
cmp
dec
push
movl
imul
pop
fstpt
mov
lret
mov
sbbb
dec
cmc
movsl
shll
xor
rorl
cmp
dec
out
push
leave
test
sbb
mov
jg
push
les
ljmp
loopne
movsb
pop
andb
fldl
pushf
shll
xor
stos
pop
push
xor
pop
scas
add
fwait
ret
mov
adc
sbb
xor
xlat
sbb
pop
pop
clc
mov
mov
arpl
mov
mov
adc
imul
imull
mov
adc
add
lock
cmp
cmp
add
or
mov
mov
pop
sub
or
and
fadd
loopne
call
sbb
mov
in
mov
adc
daa
loope
shll
add
lea
prefetch
jne
jae
pop
mov
jae
fisubrs
ret
gs
xchg
movsl
ror
xchg
sbb
clc
ret
fs
mov
frstor
mov
call
inc
shll
aad
xchg
push
fwait
lock
pop
add
into
call
cmp
xchg
xchg
sbb
inc
and
addr16
add
jge
mov
pusha
cld
xor
bound
andb
scas
add
jbe
arpl
and
cmpsl
shrb
mov
js
ret
outsl
aam
lret
or
sbb
stc
popa
inc
js
sbb
pop
jae
xor
ds
pop
cmp
adc
inc
fwait
addr16
cli
cmpsb
add
test
int
sbb
sub
ljmp
ret
outsb
dec
xchg
shlb
scas
fwait
mov
clc
movsl
push
xlat
cli
scas
subl
cmp
sahf
mov
aas
psubusb
dec
sub
inc
push
in
lds
rcll
je
enter
jno
sbb
xor
pop
aas
imulb
insl
pop
jbe
push
je
adc
pop
xchg
mov
sbb
cld
or
lret
push
lock
mov
pop
pop
pop
out
jge
or
inc
or
jno
mov
fidivrs
sbb
fs
aaa
mov
sbb
iret
mov
testb
jae
lret
add
icebp
sub
jle
pop
out
mov
je
ljmp
js
fnstcw
cmp
pop
js
push
jg
scas
ds
jl
stos
pusha
inc
and
in
bound
imul
add
and
mov
mov
imul
scas
into
pop
add
push
mov
jecxz
push
mov
pop
and
add
pop
test
popa
xchg
hlt
mov
out
or
add
and
test
mov
daa
out
mov
loope
push
lea
cmp
mov
call
insl
inc
push
mov
lret
ja
xor
pushf
cmp
xor
pop
out
jo
sbb
cmp
push
sub
or
scas
mov
xchg
push
dec
fnsave
in
sub
fprem1
dec
inc
xchg
test
cmp
jmp
xchg
mov
jle
aas
mov
pop
scas
jp
lods
pop
imul
add
jnp
mov
pop
cmpsl
stos
lock
xor
jecxz
movsl
fidivs
and
sub
fwait
cwtl
sar
rcrl
push
xor
mov
gs
or
jmp
stos
sarl
add
dec
inc
in
test
and
subb
idivl
shlb
xchg
dec
cmc
lock
scas
jno
data16
mov
or
cmc
lret
mov
cmp
inc
js
in
nop
rcrl
insb
mov
testl
jb
xchg
mov
inc
insb
jbe
repz
push
mov
push
sahf
out
decb
test
inc
ror
xchg
mov
lret
push
fistpll
pop
data16
das
inc
push
add
dec
mov
push
dec
mov
inc
sub
sbb
test
jb
pop
sub
fwait
cld
mov
push
mov
repz
mov
dec
je
xlat
and
es
xchg
cmp
pop
xor
jle
insb
sub
push
mov
xor
sub
inc
out
gs
adc
sbbl
mov
push
jbe
or
xchg
shrl
pop
add
lods
in
push
ret
int3
out
push
pop
mov
xor
adc
cmp
xor
js
adc
sbb
jmp
jmp
push
xor
dec
outsb
add
mov
xchg
mov
add
xlat
fxch
divb
scas
sub
outsb
loop
adc
clc
jmp
and
xchg
push
lock
cltd
sarb
fcmovnu
and
fs
shl
stos
sti
push
jb
loop
in
call
shlb
stc
or
mov
jns
add
mov
or
mov
mov
cmpb
push
jne
pop
jns
push
mov
and
xchg
pop
fldt
pop
test
gs
sbb
orl
add
out
aam
pop
popf
int3
lea
cmpsb
adc
mov
fwait
repz
xchg
mov
stos
pushl
pusha
ds
outsb
mov
insl
and
inc
mov
lea
in
cmp
sbb
mov
push
pop
ljmp
cwtl
and
cmp
or
inc
pop
int3
scas
cmp
cmp
incb
sarl
stos
test
sti
ret
push
sbb
inc
lock
in
outsl
in
sbb
jg
icebp
mov
out
dec
ljmp
test
adc
in
lret
out
loop
mov
sti
clc
outsl
and
popf
push
push
lret
push
mov
xchg
hlt
jns
pushf
xor
cmp
and
xor
cmp
mov
mov
xor
lods
enter
jae
xchg
xchg
push
inc
fs
jo
inc
and
jl
xchg
adc
sub
jbe
scas
mov
fwait
dec
js
insb
iret
cmpl
outsl
mov
orb
arpl
insl
sub
fs
sbb
dec
dec
lods
je
or
loope
stos
inc
jne
add
in
test
mov
jo
and
js
shlb
aaa
sub
mov
cmc
sub
pop
call
aam
mov
fldenv
mov
mov
xchg
mov
or
dec
movsl
gs
fwait
xchg
dec
loopne
pop
dec
or
dec
sarb
pop
sub
push
inc
inc
ds
or
push
push
pusha
push
stc
push
stos
pop
jmp
xchg
sar
mov
pop
ffreep
xor
into
inc
lods
aaa
jmp
sbb
adc
pop
lods
lret
cmpsb
dec
xchg
scas
jbe
testb
scas
mov
adc
hlt
hlt
ret
mov
iret
lahf
mov
out
popa
pop
xchg
pop
cmp
lock
daa
jmp
sbb
mov
xor
adc
stos
and
mov
mov
and
xchg
popf
pop
pop
inc
aaa
in
fstps
iret
jl
mov
sti
stc
cmp
nop
mov
pop
xor
inc
sub
xchg
loope
cltd
jb
push
push
adc
add
add
daa
jl
sar
pop
sarb
out
push
loopne
pop
leave
mov
xor
movb
sbb
pop
jge
out
repz
aas
pop
xchg
into
ljmp
paddw
xor
cmc
cmp
push
and
sub
cld
adc
popf
sbb
dec
stos
mov
mov
jne
je
dec
sti
outsb
mov
cmpsb
xchg
cld
loop
mov
es
or
sub
dec
cs
fldcw
ja
in
jmp
mov
roll
xor
ljmp
in
inc
jg
js
out
adc
ret
stc
jg
out
dec
and
shll
mov
mov
pop
gs
stos
inc
dec
push
jge
sub
adc
adc
xchg
rcr
push
dec
ficoml
jg
out
mov
sub
xchg
filds
lahf
sub
fisubs
lods
cmpxchg
xor
jp
lods
lea
idiv
popa
rcrb
adcb
mov
pop
lret
cmpb
sbb
jg
leave
xchg
loopne
pop
hlt
xchg
jge
mov
out
stc
jbe
inc
scas
insl
xor
and
mov
inc
ja
sahf
sbb
inc
int
add
pop
pop
clc
loopne
mov
fisttpll
cmpsb
xchg
fidivrl
call
cmp
inc
dec
dec
xchg
sub
sub
add
pop
push
ret
vcvtps2pd
xor
shrl
imul
mov
shll
enter
insl
lods
js
mov
mov
dec
cmp
dec
adc
sbbb
ljmp
je
inc
aas
frstor
cli
inc
mov
mov
jno
cld
out
lret
lock
movsl
icebp
inc
cli
inc
cmp
lea
mov
loop
insl
sahf
xlat
jge
icebp
fimuls
xchg
sub
inc
or
push
mov
mov
fstps
lock
push
mov
inc
mov
pop
cmp
cli
lret
push
jmp
push
add
arpl
clc
ja
xlat
pop
push
dec
mov
mov
or
pop
fdiv
jp
insl
rorb
cmpsb
outsb
xchg
inc
push
fcomps
xor
inc
rolb
lods
sahf
and
pop
xrelease
testl
jle
add
enter
mov
xchg
in
lds
mov
clc
sarb
or
jge
and
ret
xchg
in
stos
or
stos
out
or
outsl
push
loopne
pop
jbe
in
repz
pop
in
sub
mov
add
pop
push
enter
inc
jmp
negb
jb
shll
insl
std
mov
ficoml
mov
mov
push
sub
rcrb
adc
xchg
or
pop
test
mov
sahf
pop
inc
push
adc
iret
lock
popl
push
and
jbe
out
inc
and
lea
xchg
insb
daa
ja
inc
inc
sub
lret
pop
mov
adc
outsl
add
scas
ljmp
sbb
sarl
inc
dec
pop
faddp
mov
mov
cmpsl
mov
sub
adc
xchg
xchg
mov
in
xlat
popa
jns
sbb
jg
pop
int
xor
mov
xor
sub
sahf
int
shl
adc
fs
inc
gs
sub
and
lods
test
jmp
adc
subl
outsl
cmp
outsl
out
mov
outsb
daa
loopne
adc
xor
push
imul
scas
pslld
mov
mov
filds
sub
xor
or
push
int3
cmp
leave
add
and
rcll
mov
sub
cmp
xor
mov
sub
mov
sarb
pop
push
cltd
in
std
out
daa
xor
cmp
sub
jg
add
stos
test
cmp
sub
dec
adc
ror
pop
mov
and
mov
cld
jg
cmpsl
repnz
nop
pushf
add
mov
adc
call
jno
cwtl
xchg
in
inc
or
stos
and
pop
aas
daa
sbb
add
outsl
and
scas
jg
jl
or
pop
sbb
in
push
xchg
call
les
xchg
aam
jmp
out
sub
imul
mov
lret
leave
dec
xchg
xchg
mov
mov
out
lods
inc
jp
pop
mov
leave
mov
fcmovnb
loopne
xor
mov
movsb
xchg
add
jbe
insb
dec
cmp
das
adc
sbb
divb
stos
lods
add
orb
sub
pop
adc
test
lea
sub
inc
fwait
push
mov
in
orb
rcl
movsl
scas
adc
fnstsw
sub
es
mov
sub
jle
pop
js
sti
shlb
sahf
sbb
arpl
fwait
rcrb
jo
jge
iret
sub
sbb
dec
or
das
adc
mov
fsub
and
xchg
repz
movsl
in
sub
jbe
xor
push
xor
or
push
shlb
sahf
mov
push
call
lret
pop
mov
mov
insb
sub
inc
jle
lea
ja
testl
mov
mov
cmp
stos
outsb
pop
imul
imul
cli
fidivrl
adc
insb
and
jle
mov
push
bound
dec
scas
fisubrs
arpl
ret
mov
mov
inc
je
iret
int
call
bound
movsb
lcall
jmp
sbb
mov
shrb
jo
add
imul
xor
rorb
lods
mov
or
scas
inc
imul
or
cmp
test
or
cmp
jbe
in
paddq
inc
jmp
ret
mov
out
mov
sbb
jae
lcall
pop
mov
outsb
xchg
jo
mov
pop
xchg
outsb
cmpsl
lcall
adc
test
lods
aaa
in
lds
push
and
mov
mov
daa
push
inc
ret
pop
ljmp
setl
sub
rol
outsl
je
bound
mov
popf
inc
jno
push
cmp
mov
in
std
xchg
bound
lcall
movsl
inc
scas
push
cmc
xor
pop
lret
or
sbb
fidivl
jge
sbbl
test
push
or
jle
out
sub
push
out
add
aam
enter
mov
lods
lea
scas
into
cli
add
je
cmp
lret
into
test
cs
mov
stc
stc
mov
mov
lds
jns
addr16
push
popf
xlat
scas
pop
jecxz
jg
add
shlb
sub
push
rcll
cmc
push
in
mov
add
pushf
and
fnstenv
in
enter
cmp
and
scas
mov
std
dec
pop
mov
dec
dec
pop
adc
and
push
dec
arpl
jg
jne
outsl
sbb
xchg
sub
jae
jg
negb
lock
cltd
loopne
mov
and
cmp
lea
mov
loope
inc
clc
jp
mov
fildl
ds
hlt
and
scas
popa
and
and
cmpl
fimuls
jp
mov
mov
mov
or
mov
fs
mov
imul
pop
dec
push
cmpsb
sbb
pop
mov
ljmp
adc
adc
ret
or
sbb
dec
mov
shll
jae
xchg
enter
xchg
add
mov
cmpsl
ja
in
xor
and
loopne
js
mov
push
push
inc
adc
mov
cmp
xor
and
mov
mov
ja
pop
adc
insb
or
aas
adc
jno
and
adc
push
push
popf
testb
jle
xchg
les
inc
inc
loope
mov
mov
dec
xchg
or
enter
dec
ja
pushf
push
cmp
or
cmp
test
cmpsb
add
pop
sbb
xchg
jmp
out
gs
fisubrs
incb
fdiv
push
sbb
scas
adc
inc
pop
dec
and
test
xchg
inc
insb
popf
sub
ret
les
mov
imul
jmp
mov
sbb
dec
cmpsb
leave
and
test
dec
mov
mov
loopne
adc
in
or
test
push
xchg
jl
xchg
push
sbb
cmc
in
jb
xor
add
je
cmpsl
jb
add
movb
lret
cmp
aas
popa
icebp
test
std
add
mov
lret
cs
loope
loopne
test
and
add
pop
xchg
lea
xchg
or
adc
das
xchg
shlb
gs
or
or
sbb
ljmp
jg
movsb
or
pop
xchg
mov
mov
adc
out
out
jne
fiadds
pop
je
and
dec
mov
or
xchg
mulb
repz
ficompl
cmp
addr16
jge
fstps
sbb
push
jmp
out
xor
and
jb
arpl
inc
or
add
dec
or
adc
cmp
mov
sbb
in
mov
lahf
jo
psubusb
out
inc
aam
mov
push
jns
adc
mov
dec
mov
push
jbe
mov
inc
out
or
es
repz
xchg
push
out
pop
xchg
cmpsl
ret
dec
xor
mov
xor
fadds
std
cli
ret
cmp
imulb
dec
mov
cmpsb
hlt
in
sub
dec
arpl
ljmp
xchg
scas
sub
lcall
stos
bound
push
ss
mov
loop
sbb
jnp
stc
lea
inc
sub
cmp
or
pop
lods
mov
inc
mov
or
sub
inc
push
cmpsb
mov
int
pop
ds
inc
sub
inc
pushl
test
adc
cmpsb
dec
push
mov
mov
cltd
inc
mov
pop
pop
scas
mov
imul
sbb
repnz
fdivrl
xchg
shl
mov
and
jle
and
inc
sub
shr
jl
out
sarb
fdivr
or
pop
sbb
testb
sub
add
call
mov
ret
andb
push
mov
mov
into
cmp
shrl
lea
cmp
dec
mov
int
aam
aas
repnz
adc
fsubs
and
pushf
or
pop
lahf
call
test
pop
jnp
or
cmc
arpl
mov
cmc
decb
sbb
imul
sub
arpl
cmp
adc
mov
arpl
jns
pushf
ss
loop
jl
testb
sti
adcl
insl
push
daa
mov
xor
jae
inc
or
outsb
sub
sarb
aad
cmc
lcall
push
adc
ret
inc
push
cmc
mov
pop
test
jns
loope
xor
insl
cli
sbb
mov
mov
push
les
daa
sbb
int3
mov
sub
jno
lock
out
and
and
cld
mov
lods
push
out
sub
sahf
or
dec
mov
jmp
mov
cli
ret
xchg
movl
fisubl
inc
test
jge
dec
xor
pop
lods
pop
sub
mov
shll
push
push
xchg
shlb
ficomps
and
sbb
lahf
out
int3
inc
mov
push
jge
dec
mov
mov
lods
fldt
xor
stos
iret
dec
adc
int3
popa
cli
pop
ljmp
dec
iret
dec
outsl
mov
or
test
ljmp
int
cld
pop
out
add
jmp
push
xor
cmp
cs
daa
or
aam
cmc
pop
out
cld
int3
xor
mov
xlat
loopne
ss
xchg
mov
fstps
xor
mov
mov
scas
in
cmp
push
inc
movsl
xchg
inc
lcall
pop
push
mov
lea
adc
insl
daa
in
aam
ds
fistps
in
daa
xor
int3
inc
push
pushf
or
xchg
pop
pop
out
adc
mov
popa
xchg
push
xchg
dec
jl
mov
and
add
scas
xor
arpl
xchg
pop
and
insb
xor
add
icebp
out
push
jp
fmuls
fs
inc
jbe
jbe
imul
jae
sbb
call
add
push
cmp
aas
sbb
mov
out
popf
rep
push
inc
aas
loope
add
sub
push
outsl
cli
add
dec
stos
test
in
add
es
or
dec
add
lea
inc
xchg
cmp
pop
out
idivl
pushf
jmp
ficoml
stc
or
scas
pushf
test
scas
cld
fwait
adc
cmp
jbe
cltd
pop
repnz
call
pcmpgtw
jbe
pop
mov
add
rcrl
dec
pop
iret
stc
das
sti
or
subl
imul
jno
push
inc
rcrb
sbb
rcrb
xor
stos
test
push
int3
es
push
or
jo
and
sbb
mov
pushf
fmull
insb
test
insw
sub
mov
stos
sbb
inc
int
add
dec
fs
pop
aad
rclb
cmp
adc
cmpsl
mov
pop
fldl
cmc
cmpsl
pop
out
dec
or
mov
scas
mov
fisttpll
mov
add
popf
pop
ljmp
ds
adc
xchg
testb
fldl
movsl
dec
push
add
pmulhw
aas
scas
fisttpll
incl
pop
aas
shlb
hlt
scas
int
cld
pop
adc
stc
mov
xor
negw
mov
mov
adc
pop
push
outsl
xchg
add
pop
add
xlat
or
or
fstl
dec
addl
cwtl
ss
jae
xchg
jnp
sbb
pusha
xchg
add
pop
loopne
or
and
aad
push
cli
call
pop
mov
es
dec
lret
out
adc
lcall
mov
daa
sub
and
data16
mov
adc
jno
aas
dec
out
dec
fildl
icebp
mov
add
pusha
jb
in
adc
push
sbb
test
inc
jmp
and
or
xchg
int3
out
loope
add
stc
mov
add
daa
sbb
inc
inc
cmpsb
nop
mov
pusha
mov
aaa
xchg
loopne
test
test
push
cmp
inc
mov
adcl
mov
negb
std
push
cmp
std
and
jae
cmp
inc
sahf
sarb
lock
repz
ret
jno
dec
das
out
add
shrb
shl
sbb
sub
add
push
cmp
mov
xchg
dec
mov
dec
pop
inc
pop
test
hlt
sar
push
test
add
jp
fsubrs
jmp
loopne
lods
test
mov
ss
out
xchg
pop
ss
add
xor
fs
icebp
pop
jmp
mov
xchg
cmpsl
cmp
lret
adc
push
pushf
outsl
xor
sbb
xchg
ret
in
in
cld
test
mov
iret
sub
inc
xor
adc
out
jge
push
cmpb
inc
xchg
add
lahf
mov
sub
xchg
lods
sbb
stos
adc
popa
stc
push
xor
mov
imul
adc
inc
gs
jno
or
pop
jnp
loopne
jecxz
stos
movsb
std
andb
fidivl
loop,pt
mov
sbb
dec
add
dec
pop
test
cmc
arpl
jb
je
lcall
mov
push
nop
lahf
and
add
sbb
or
pop
inc
sbb
fstpl
inc
jle
shll
mov
mov
inc
mov
jno
or
icebp
lds
mov
frstor
xor
sub
cwtl
add
leave
sub
push
or
or
jae
loop
cmp
push
ret
xor
jnp
inc
mov
ficompl
mov
mov
out
pop
or
xlat
add
jns
inc
jmp
xor
into
sbb
mov
pushf
sarb
and
or
inc
ds
inc
push
daa
pop
cmpsl
push
sbb
sub
add
push
dec
out
pop
addb
push
mov
adc
fstps
cmp
pop
repz
pop
outsb
sbb
mov
pop
add
and
subb
and
movsb
jno
lahf
add
pop
adc
add
sahf
fsub
nop
xlat
sub
dec
and
pop
out
mov
pop
add
cli
data16
sbb
mov
mov
insl
orl
jle
int
test
call
push
decb
sbb
add
push
in
xchg
inc
in
data16
push
or
mov
out
hlt
or
mov
scas
pusha
outsb
or
data16
xor
cmpsl
lods
jecxz
xchg
fadd
adc
mov
cmpsb
negb
push
pop
adc
push
xchg
out
out
aam
std
mov
sbb
and
push
fisubrl
mov
insl
icebp
mov
mov
dec
mov
es
jne
movsl
sbb
mov
xchg
jns
jmp
int
out
inc
inc
dec
jbe
push
das
jno
pop
movups
pop
push
je
mov
fdivrp
inc
pop
and
add
cld
dec
shll
imul
std
and
mov
dec
or
test
mov
mov
xor
fiadds
mov
fisubrs
adc
mov
and
mov
jecxz
sbb
adc
aad
mov
jmp
pop
jbe
add
mov
imul
mov
adc
jg,pn
pop
push
sub
adc
clc
fadd
cli
lahf
jmp
fs
mov
push
popa
mov
mov
nop
popa
sbb
sbb
mov
pop
fnsetpm(287
mov
jo
imul
push
xor
xchg
add
in
pop
out
sub
repz
mov
stc
push
cwtl
imul
dec
fdivs
cmp
ljmp
and
lret
stos
pop
std
dec
call
in
fisubl
push
jecxz
mov
ret
enter
xor
mov
xchg
js
jne
adc
aad
fimuls
xchg
mov
fistl
fistps
jle
cwtl
sbb
jle
aaa
sub
push
arpl
push
dec
mov
dec
sbb
loopne
cmp
jbe
jmp
ds
add
fimull
mov
xor
aad
mov
divb
hlt
mov
inc
insb
gs
jecxz
call
das
rcl
sar
xchg
mov
fmulp
inc
fldt
inc
push
push
pop
jae
mov
or
push
xchg
outsb
cmp
rcl
bound
sbb
aaa
xchg
fidivs
pop
aam
xchg
xlat
cmp
cmc
jo
aas
adc
push
cmp
push
inc
and
mov
test
cld
mov
and
in
xchg
ds
push
add
rcr
cmc
mov
lea
add
xchg
lock
sub
mov
or
and
xchg
clc
xchg
dec
lcall
stos
xchg
jmp
dec
lea
mov
ret
loop
mov
aaa
movsb
inc
xchg
test
fcmovb
std
out
insl
js
lock
xlat
aad
and
push
les
or
sub
in
pop
cmp
out
lahf
in
push
mov
sbb
adc
adc
rclb
sub
xchg
cmp
pop
shrl
test
rolb
add
sub
mov
icebp
xor
in
out
dec
mov
sbb
sub
mov
dec
daa
aam
jge
lods
test
add
insl
xor
frstor
pop
adc
daa
insb
vpminsw
mov
out
nop
adc
popa
mov
or
lds
cwtl
out
or
enter
mov
cs
mov
push
xor
mov
mov
pop
popa
hlt
push
mov
arpl
sti
push
add
stos
mov
hlt
add
idivb
adc
sbb
inc
sahf
or
aad
mov
call
xor
icebp
cmpb
cmpsl
xor
rorb
out
and
outsb
xor
adc
inc
adc
pop
mov
mov
mov
jmp
cmpsl
movsl
xchg
mov
push
sarb
dec
scas
cs
lret
lret
mov
ljmp
or
and
cmp
movsl
sbb
adc
and
jno
shll
push
cltd
stc
jno
add
loope
fidivrl
xchg
das
call
insl
push
inc
pop
push
cs
mov
mov
ja
scas
icebp
jge
test
roll
arpl
inc
mov
and
inc
pop
test
adcb
xchg
and
lahf
aam
inc
fidivrs
xor
cmp
outsb
imul
outsb
mov
mov
shll
es
imul
adc
xlat
int3
out
and
fimull
or
leave
pop
jbe
jae
repz
lods
sub
xchg
les
xor
add
ret
pushf
xor
cmovg
cmp
sub
sbb
sahf
pminsw
nop
inc
in
into
out
mov
roll
dec
out
sub
iret
subl
pop
jo
movsl
jo
mov
add
jl
push
je
repnz
push
push
mov
sbb
xchg
mov
jb
outsl
adc
xor
fdivrs
pop
cmc
mov
pop
into
scas
loope
pop
xor
shrl
and
out
movsl
out
ror
push
aam
popl
sub
jnp
push
fmuls
lahf
mov
and
jbe
movsl
adc
rol
pop
bound
mov
lods
push
inc
dec
js
add
add
cmpsl
stos
jnp
inc
mov
pop
jg
pop
stos
out
xor
sub
sbb
mov
aad
sbb
mov
data16
push
cmpsb
out
repnz
loope
xor
push
xor
mov
out
jecxz
ja
add
in
or
imul
addb
pop
lret
fimuls
push
jge
jecxz
lea
inc
push
or
movsl
push
sub
pop
enter
or
movsb
lods
es
stos
imul
sbbb
cmc
rclb
push
jo
lock
push
cmp
pop
xchg
dec
ja
jg
or
mov
cmp
das
mov
test
jmp
xor
and
jmp
push
inc
xor
in
shr
lea
fcmovnbe
dec
loopne
imul
sbb
je,pt
mov
fmuls
xor
push
leave
insl
rcll
cmp
nop
mov
fisubrl
pop
jnp
in
sub
insl
pop
xchg
dec
cld
jmp
jp
jmp
push
ficompl
es
jl
repnz
out
mov
stos
push
mov
or
pop
add
hlt
mov
int
mov
cmp
or
cmp
mov
.byte
.byte
sbb
add
add
or
and
xor
aas
sbb
dec
and
sahf
mov
pop
and
sahf
dec
popa
mov
jne
mov
push
hlt
push
sbb
ja
sahf
push
sti
test
mov
dec
ret
pusha
popf
inc
xor
push
dec
add
loopne
mov
iret
jns
adc
sbb
loop
push
ds
jb
fs
mov
leave
aaa
in
add
dec
lahf
pop
jge
jmp
fnsaves
mov
mov
jb
sub
xchg
pushf
outsb
mov
push
jbe
sub
jmp
pushf
ljmp
add
mov
push
int
sub
popf
mov
aas
fucomp
fists
inc
gs
inc
jge
pop
mov
xchg
arpl
movsl
daa
les
stc
adc
mov
test
mov
jnp
in
jae
int
std
xor
cmpsl
stos
es
out
mov
mov
repnz
pop
sub
aam
dec
cmc
into
mov
leave
pop
sub
or
cmp
daa
or
fdivrs
xor
dec
push
ss
insb
push
mov
ja
or
xor
sbb
lods
adcl
cwtl
arpl
push
sbb
mov
leave
ss
or
fs
loope
lock
int3
xor
mov
or
push
push
pusha
lock
xor
std
js
lea
outsl
jnp
xor
inc
inc
and
xor
movsb
rcl
xor
pushf
sub
aas
inc
call
mov
or
scas
jg
inc
imul
jb
sar
lahf
push
sahf
je
push
sub
jno
push
fadd
cmp
dec
bound
daa
cli
mov
or
lcall
ljmp
adcl
arpl
push
adc
lea
leave
jns
pushf
pop
ljmp
mov
stos
sub
sbb
adc
bound
mov
in
push
xchg
les
mov
fiadds
add
jl
push
adc
out
cmp
std
ret
xchg
sti
adc
popf
push
xor
xor
add
jmp
jg
icebp
pop
jge
cmc
or
push
mov
sahf
mov
mov
lahf
loope
shlb
and
cmp
sbb
cmpsl
insb
arpl
dec
iret
cmp
sbb
sbb
adc
cmp
mov
lret
rclb
dec
mov
mov
pop
in
fwait
cmpb
xchg
push
mov
push
lds
push
push
daa
imul
jbe
gs
shrb
arpl
popa
cmp
mov
ret
in
ret
pop
inc
dec
pop
xor
mov
aaa
imul
dec
movsl
inc
push
lret
pop
cmp
popa
jo
add
xor
fistps
sarl
into
les
mov
and
lahf
arpl
lea
add
pop
scas
add
or
or
packsswb
ljmp
mov
arpl
mov
and
or
xorps
test
int3
insl
or
dec
pop
movsb
lret
adcl
out
insl
add
mov
cltd
add
jb
jl
dec
mov
mov
pop
ret
jae
or
cmp
fsubl
add
cld
test
iret
test
dec
mov
mov
push
fwait
into
and
es
in
mov
mov
push
sbb
mov
mov
ss
and
jne
inc
test
mov
ja
push
xor
lods
or
adc
js
pop
and
out
inc
jl
cmp
push
scas
in
sub
std
cld
or
fwait
inc
mov
mov
add
sub
aad
shl
sub
pop
pop
inc
push
mov
push
jle
lret
leave
inc
jno
lahf
out
call
cmp
mov
adc
xchg
or
jnp
xlat
icebp
add
mov
sbb
stos
inc
jg
mov
mov
int3
pop
xchg
dec
ret
jle
mov
out
add
inc
int3
insb
adc
pusha
in
and
mov
cs
mov
cld
lcall
xchg
data16
pop
call
rclb
sbb
jmp
inc
and
sbbl
inc
add
adc
adc
add
rcrb
add
xor
outsb
push
add
test
pop
pop
gs
stos
in
push
sub
clc
loopne
mov
test
out
dec
mov
fsubl
repnz
movsl
scas
es
and
ret
push
pushf
mov
cwtl
adc
leave
stc
bound
push
scas
mov
ljmp
dec
xchg
or
fcoms
test
xor
dec
out
xchg
cmp
fdivrs
adc
cmp
rcr
ficomps
aam
in
dec
pop
ficoms
mov
pushl
mov
out
jmp
out
xchg
repnz
imul
mov
mov
sti
push
outsb
sub
dec
cld
push
jno
mov
xchg
pop
test
xchg
cmp
push
inc
add
imul
jb
pusha
xchg
push
lret
push
pop
adc
into
pop
scas
pop
lods
sub
xchg
repnz
mov
addr16
jg
aad
sub
and
mov
scas
dec
imul
xchg
leave
movsl
aad
push
shr
mov
scas
pop
faddp
adcb
rorb
add
dec
sub
jmp
add
aad
mov
dec
xchg
loopne
and
aaa
jb
cmc
nop
aas
jae
jmp
lock
xor
mov
jbe
mov
in
cmp
push
add
sub
pop
sbb
popf
jl
adc
pushw
scas
aaa
lret
inc
rcrb
jnp
push
push
aas
hlt
lcall
dec
xchg
data16
inc
daa
test
cmp
mov
sub
or
or
pop
das
dec
jbe
cmp
jmp
stos
mov
xor
push
mov
dec
and
int
rcr
mov
or
mov
cmp
ja
fldt
flds
movsb
pop
rclb
das
fldenv
mov
inc
das
ss
xchg
clc
popa
jge
pushf
xchg
mov
sahf
cld
ja
mov
add
adc
icebp
cwtl
pop
jp
andb
fsubr
lds
fidivrl
push
adc
das
pop
xor
call
jns
push
pop
fdivrl
mov
adc
sbb
inc
xor
sbb
or
xchg
mov
adc
mov
or
fs
and
push
movsb
imul
loopne
testb
iret
mov
cmp
scas
add
addr16
cld
add
mov
lcall
ja
lock
lret
jbe
imul
mov
jge
repz
or
repz
adc
adc
pusha
dec
jge
inc
loop
divl
sbb
inc
mov
mov
cmpsb
push
ds
out
add
mov
aad
xchg
leave
pop
add
cmp
data16
adc
xchg
mov
lret
cwtl
and
pushf
dec
pop
dec
xor
popa
addr16
pop
cwtl
jl
sub
mov
mov
push
pop
sti
mov
push
cltd
stos
popf
pusha
inc
mov
aad
das
and
jne
add
mov
sahf
sbb
jle
push
pop
mov
divb
dec
pop
clc
lcall
fs
jo
xchg
scas
cltd
es
jne
aaa
cmp
lcall
test
mov
lods
mov
mov
pop
lea
icebp
mov
mov
cltd
pusha
int
jg
jle
jne
or
ds
push
and
inc
adc
xor
jle
pop
sub
stc
insl
mov
add
scas
mov
add
pusha
pop
add
fdiv
bound
push
cmp
in
aad
lock
jecxz
iret
test
cmp
xchg
adc
sub
ja
hlt
xchg
cs
inc
int3
leave
aad
mov
ljmp
les
test
sub
in
aam
cmp
xor
mov
sbb
cmp
dec
jbe
sahf
sbb
popa
xor
cmpb
cwtl
cmp
push
mov
inc
mov
and
adc
push
xchg
std
mov
inc
aas
loope
ja
ljmp
sub
sahf
mov
inc
pushl
lcall
fwait
lods
inc
jo
enter
cs
add
notrack
notl
push
hlt
sub
inc
shlb
loopne
jnp
mov
xor
stos
pop
rclb
fldenv
out
cmc
jecxz
mov
mov
adc
mov
push
nop
cmp
pop
mov
xchg
sub
xchg
loopne
xchg
jmp
scas
test
adc
lods
adc
daa
or
push
imul
xchg
nop
cmp
mov
and
addb
das
int3
rcrl
addr16
add
cmp
inc
es
dec
pop
shrl
lahf
mov
or
out
adc
push
repnz
fwait
daa
stos
mov
mov
arpl
and
or
xor
jle
rclb
adc
fbld
jnp
jl
mov
push
and
xor
js
lcall
aas
jno
jle
dec
jno
inc
shll
sbb
sbb
sahf
sub
mov
and
jns
mov
ret
push
fists
push
add
outsb
add
bound
cmp
test
push
mov
add
dec
pop
jecxz
mov
mov
lock
cld
fidivl
dec
lods
pop
jnp
outsb
pop
clc
cltd
jmp
adc
jo
push
mov
or
js
mov
dec
adc
enter
and
loopne
inc
pop
adc
lahf
push
call
adc
mov
xchg
xchg
in
and
adc
sub
mov
push
sbb
int3
fsubrl
std
iret
jg
jns
add
jno
jne
rclw
bound
jo
jb
mov
add
sbb
mov
ss
aam
aad
mov
stos
scas
mov
inc
lret
mov
pop
sbb
shl
jmp
jae,pt
aad
inc
add
add
adc
in
fwait
add
inc
xchg
cmp
out
cmp
scas
je
add
into
test
mov
lds
jns
jmp
mov
leave
push
adc
mov
cmp
lock
insl
dec
jns
mov
or
or
inc
shl
add
jbe
loop
stc
dec
add
outsb
jmp
arpl
loopne
nop
jbe
xchg
fists
repnz
push
mov
popf
jnp
in
cli
inc
inc
cli
xchg
cmp
fsubl
dec
mov
pushw
outsb
fnsave
test
paddw
jnp
pop
dec
pop
xor
xor
cmp
fs
rol
mov
js
jne
or
movsl
xchg
cmp
dec
aaa
test
out
sub
cli
and
mov
popa
push
mov
out
mov
fs
sahf
into
adc
mov
fisttpll
fdivrl
sub
lret
pop
loopne
inc
adc
fdivrl
jmp
jno
xchg
cmp
rcll
xor
iret
int
out
fstp
movsb
rcrl
int3
mov
jp
dec
mov
loop
andb
inc
push
dec
add
enter
fwait
out
into
pop
push
ljmp
dec
jle
popf
cmpsl
cmp
stos
cmp
fs
sbb
call
and
jmp
in
subb
sbb
sub
mov
and
sbb
mov
sub
adc
add
mov
sub
jg
imul
lods
dec
outsb
into
add
sti
mov
adc
mov
nop
push
arpl
add
dec
popa
inc
inc
xlat
push
mov
lcall
subl
int3
add
xor
xor
addl
adc
dec
xchg
subl
cmp
shrl
sub
and
cwtl
add
stos
or
outsb
and
cmpsb
xchg
and
sbb
fwait
pop
movsl
xor
outsl
fists
insl
mov
js
jmp
add
mov
inc
adc
das
out
xchg
daa
in
seta
cwtl
call
jl
inc
cmp
sub
inc
lea
jg
adc
mov
inc
movsl
mov
lret
mov
xor
pop
incl
mul
pop
bound
ret
xor
xchg
popa
adc
jns
pop
jmp
hlt
inc
push
lret
dec
cltd
xor
jl
daa
mov
push
lcall
pop
shlb
nop
inc
iret
pop
mov
add
sbb
in
loope
into
xchg
pop
lahf
inc
mov
push
mov
push
insl
jb
jbe
cmp
rorb
sbb
adc
jle
cld
rcrb
dec
ror
mov
fstpl
or
loop
movsb
pop
jp
out
inc
arpl
lret
dec
xor
push
jle
test
stos
aas
fistl
adc
push
inc
insb
insb
mov
mov
inc
xor
and
mov
mov
test
jecxz
xor
cli
add
pop
xchg
dec
sbb
sub
mov
dec
inc
lcall
xchg
sti
lret
inc
xchg
push
sbb
in
sub
in
sahf
out
push
shlb
aad
xchg
rorl
fiadds
stc
cmp
jbe
mov
ffreep
sahf
cmp
aam
push
xor
cmp
cli
push
outsb
or
push
sub
sbb
lods
insb
and
push
rcrb
fsub
mov
fst
out
add
cwtl
ss
aam
mov
jg
adc
lods
and
loope
xlat
push
sbb
add
mov
adc
and
sbb
mov
pushf
dec
inc
pop
mov
rclb
cmp
pop
lods
cmp
xor
fistps
cmp
lcall
push
mov
mov
mov
adc
mov
dec
call
push
jle
or
in
push
pop
xchg
out
mov
stos
mull
xchg
in
dec
int3
dec
or
push
out
xchg
inc
sub
xchg
out
es
mov
cmp
adc
popa
mov
inc
fisttpl
cmp
add
xchg
fistl
or
divb
out
jmp
rcr
sti
cli
into
dec
popa
sbb
or
adc
pop
pushf
sti
inc
pushf
jb
in
test
scas
addr16
jbe
lahf
mov
pusha
fildll
mov
push
popl
into
rorb
test
add
movsl
mov
iret
call
fstl
or
ret
mov
add
cs
inc
sarl
arpl
sub
cli
pop
xchg
xchg
imul
js
insl
add
mov
cld
int
lds
cmp
push
inc
adc
mov
imul
fidivrl
and
and
dec
dec
mov
loope
pop
icebp
pop
in
xor
pop
xchg
adc
decl
sub
jle
cmp
jmp
enter
push
mov
and
or
sbb
out
mov
xchg
sbbb
lods
inc
stos
mov
out
in
lahf
xor
jmp
popf
fsubs
test
imul
cs
dec
js
mov
out
je
test
rep
or
xchg
ret
mov
fistps
xchg
push
jns
xor
mov
push
pop
inc
faddl
cmp
mov
ja
lcall
mov
les
dec
push
jp
clc
pop
pop
pop
gs
dec
popa
into
add
jae
mov
aam
sahf
add
test
arpl
and
gs
xor
scas
pushf
mov
repz
js
xor
sbb
inc
cli
pop
or
mov
xchg
test
cwtl
push
in
xor
dec
aas
mov
in
leave
repnz
mov
out
cwtl
sub
sub
push
mov
adc
mov
jne
xchg
or
cmpsl
mov
and
out
mov
js
sbb
pop
sbbb
cmpsb
call
sub
push
jle
stos
sbb
add
pop
aad
stos
pop
mov
inc
mov
jb
inc
aaa
push
xchg
faddl
mov
dec
xorb
pop
xor
xor
mov
mov
mov
and
outsl
xchg
sbb
jp
mov
xchg
cmp
mov
lock
pusha
mov
xchg
cmc
sub
mov
adc
pop
xchg
in
add
push
daa
mov
divl
sti
adc
jne
bound
mov
js
pop
sahf
inc
test
mov
mov
lods
push
or
push
andb
js
jge
adc
jne
jae
mov
mov
jo
sbb
sub
mov
mov
dec
out
sahf
mov
add
aas
adc
sub
lret
mov
ffreep
jne
bound
or
cli
push
xor
loop
gs
rcrl
xor
repnz
mov
ljmp
lret
daa
inc
insb
iret
lds
mov
mov
mov
sub
sti
cld
fnstenv
jbe
adcb
out
sbb
call
data16
gs
pop
outsl
push
fwait
test
xchg
dec
and
cmp
adc
xlat
icebp
loope
aaa
aaa
in
aas
outsl
shrb
loope
inc
inc
loope
jnp
cmc
xchg
pusha
and
pop
arpl
fcmovnbe
call
and
lahf
mov
ror
insl
sahf
xor
aam
cmpb
outsl
data16
pop
out
lret
test
lock
mov
lahf
and
rclb
cmp
cmp
dec
jg
stos
rorl
mov
ds
mov
adc
and
mov
adc
popl
cmp
aas
scas
mov
stc
arpl
mov
dec
jae
pop
les
cmc
pop
ljmp
rcrb
sbb
xchg
mov
cmp
ret
fisubl
lock
or
inc
addb
fisubrl
mov
or
adc
test
cmpsl
in
xchg
mov
xchg
pop
icebp
repnz
dec
pop
push
fimuls
sbb
popa
adc
jl
xchg
int3
and
sbb
fwait
adc
push
icebp
lret
inc
mov
pop
mull
les
or
stos
lea
pop
or
push
daa
fisttpll
push
dec
fmulp
mov
cmp
out
mov
xchg
xchg
lahf
out
cld
xlat
jne
ds
and
jb
xchg
arpl
shrb
lds
iret
outsl
cld
push
mov
stc
into
pop
push
nop
mov
jmp
pop
push
and
sahf
jle
repz
pop
fistpll
push
inc
dec
sub
outsl
cld
xchg
ret
inc
and
pop
jno
inc
testb
sbb
mov
or
iret
adc
test
outsl
lods
dec
out
lods
ret
es
cmp
pushf
cs
cwtl
popa
jmp
test
sub
push
push
mov
outsb
pop
push
pop
adc
idiv
inc
leave
insl
mov
enter
mov
pop
adc
sub
mov
adc
push
dec
jne
sbb
sti
pushf
int
insl
mov
test
daa
outsb
add
sbb
lcall
stos
inc
and
mov
int3
adc
sbb
test
movsb
pushf
divl
lahf
insl
in
pop
fwait
dec
sub
outsb
dec
fnstcw
ficoms
mov
mov
repnz
or
push
jae
sti
jmp
xchg
fildll
gs
jns
imul
out
mov
mov
push
lahf
inc
push
mov
inc
stos
inc
pop
push
lock
inc
stos
test
clc
mov
dec
stos
dec
dec
cmp
pop
push
cmp
pushf
add
cmpsb
loope
popa
mov
mov
add
cmp
adc
inc
cmp
mov
adc
mov
inc
out
sbb
push
jge
mov
pop
stc
hlt
lea
fistl
xchg
inc
xchg
popa
ret
push
cli
lods
push
loopne
pop
out
lea
mov
mov
insl
jmp
xchg
int3
cmp
es
fistpl
out
nopl
mov
shlb
add
xchg
dec
iret
jae
imul
out
mov
std
fbld
fwait
pop
and
dec
mov
lahf
inc
rcrl
popf
ss
sbb
adc
dec
jne
scas
xor
mov
xchg
and
mov
enter
lahf
adc
push
scas
sub
jae
iret
jmp
call
cmc
mov
scas
cmp
scas
sbb
xchg
sub
dec
aam
xchg
cmpsb
cmp
sbb
mov
push
ds
std
cmc
aaa
ret
xor
scas
bound
std
cmc
imulb
test
loopne
fnstsw
stos
shl
add
fwait
xor
fsts
xchg
xchg
test
add
repnz
cmp
loopne
shrl
icebp
xchg
ror
aam
xchg
mov
enter
mov
jmp
push
jae
xchg
and
xchg
cmp
sub
scas
lds
in
enter
pop
in
xor
ficoms
and
and
insb
xchg
test
popa
mov
lods
fsubrs
jge
out
sub
dec
adc
out
adc
cmp
mov
clc
xchg
fsts
xchg
jmp
lahf
les
arpl
or
push
cmp
fnstcw
cmp
in
mov
sbb
scas
or
loop
into
sbb
outsl
and
push
loopne
push
in
ja
jl
gs
and
fildll
cmp
lret
sbb
int3
xchg
mov
scas
push
mov
push
push
lods
int
addr16
out
stos
testl
inc
std
loop
cmpl
testl
push
fdiv
dec
and
lea
jmp
adc
call
imul
dec
xor
aad
stc
push
ret
mov
loope
sub
aad
adc
xor
cwtl
ljmp
clc
mov
push
adc
stos
or
xchg
aaa
mov
xor
cmp
or
mov
dec
push
sbb
outsb
int3
in
out
push
scas
scas
jb
push
stos
jb
test
clc
cmp
arpl
hlt
pop
adc
test
sub
push
int
xchg
leave
lock
lds
shll
cs
stos
or
push
subl
sub
xchg
jmp
imull
movb
and
js
scas
mov
jge
jo
cmp
cmpsb
mov
dec
clc
lcall
lahf
lahf
repz
mov
enter
ja
jb
ret
enter
lahf
dec
mov
mov
gs
in
idivl
negl
adc
mov
sbb
sbb
push
push
and
pop
icebp
fidivrs
ret
xchg
sbbl
data16
negl
mov
xchg
mov
push
rcl
ja
das
dec
popf
aaa
mov
push
jg
lods
fdivs
mov
sub
call
ror
xor
mov
in
push
and
pop
dec
jns
test
call
cmpsb
in
mov
ret
daa
les
jbe
cmp
or
jl
and
pusha
loopne
jno
gs
leave
jp
mov
or
mov
adc
and
or
rorb
out
mov
lea
sub
add
pop
dec
movsb
out
mov
pop
inc
dec
clc
mov
loop
cs
mov
mov
cmp
fsubl
ret
mov
scas
cld
sub
mov
pop
sarl
mov
push
int
ror
jns
je
leave
lcall
leave
loop
inc
add
fsubrl
lock
jae
notl
and
push
mov
clc
popf
test
aaa
lcall
stos
xor
jmp
cld
in
sbb
push
imull
mov
add
mov
xor
outsb
push
mov
dec
leave
sub
and
cmp
es
out
jle
popa
movsb
test
stos
loope
and
sub
sbb
sti
rolb
lret
pop
lret
xchg
addr16
test
or
test
inc
add
push
sbb
cmp
dec
mov
sub
or
test
jb
ljmp
inc
mov
and
js
mov
push
inc
jecxz
call
jne
sub
or
shrl
ja
loope
mov
inc
xchg
jp
jle
bnd
ja
mov
in
ficoms
sub
cmc
push
ss
lcall
fisttps
fildll
adc
ja
repnz
sub
insl
push
scas
mov
mov
hlt
cmp
out
lock
test
ret
cmp
jge
sti
enter
and
add
das
xchg
imulb
cmp
cmp
and
fs
rclb
push
rorb
nop
inc
dec
cld
sub
xchg
sbb
jg
iret
add
push
insb
dec
cmc
mov
outsb
insl
cmp
int3
mov
cld
pop
in
mov
xchg
jo
inc
inc
int3
cld
rcll
jl
fcoml
dec
mov
js
sub
adc
rcll
sub
cmp
fwait
and
and
inc
sbb
sub
imul
mov
mov
adc
inc
fwait
ljmp
mov
arpl
jo
jg
out
pop
adc
sub
pusha
in
lcall
cltd
repz
loopne
dec
jmp
cmp
and
and
mov
fisubrl
in
jbe
enter
sub
inc
jb
xchg
flds
mov
add
scas
repz
pop
in
cmp
dec
jecxz
jno
mov
pop
sbb
jbe
sbb
pop
sub
int3
add
test
jecxz
cli
mov
lcall
insb
cmpsb
fdivrs
mov
inc
iret
jne
fucomp
sti
dec
lcall
fisubrs
rcrb
sahf
dec
xchg
andl
pop
push
lcall
scas
in
icebp
andl
fbld
xchg
sbb
sbb
iret
lock
stos
repnz
jp
jmp
scas
sar
pop
std
or
ss
mov
jle
stc
lock
enter
cmpsb
adc
cmpsb
mov
insb
aas
adc
scas
shl
mov
adc
pop
inc
test
or
add
mov
cmc
pop
mov
ss
ss
in
int
push
mov
mov
push
shlb
js
adc
xchg
xor
lea
and
je
xchg
aas
xor
xchg
popa
mov
mov
lcall
fidivl
cmpsl
out
test
sahf
fstl
sahf
in
adc
push
and
adc
jmp
or
pop
pop
mov
mov
xor
pop
cmpsl
dec
shlb
cmpsb
lea
cs
mov
mov
clc
js,pt
mov
or
stos
push
jne
xor
testb
xchg
and
popf
and
leave
int
cmp
test
rclb
and
or
push
pop
sub
int3
fcomi
jge
xchg
iret
inc
sub
das
push
rorl
incl
lahf
dec
xor
loope
jecxz
pop
xor
sub
cmp
push
dec
add
mov
xchg
ret
sub
imul
std
dec
pop
in
in
cmp
cmpsb
insl
loopne
fnstsw
sbb
fsubs
add
lea
jno
fcmovb
fwait
xlat
into
stc
test
fstpl
or
sub
pop
pushw
push
out
pop
sahf
pop
repnz
dec
cmc
pop
into
cmp
lret
mov
jbe
mov
sarl
movsb
popa
call
dec
xchg
jae
outsl
daa
les
or
inc
sahf
cmc
push
push
push
popa
ljmp
push
dec
pop
or
mov
dec
pop
xchg
adc
push
sahf
dec
in
loope
jne
bound
cli
outsb
call
aas
xchg
cmp
int3
pop
xchg
push
mov
fstp
fisttpl
cwtl
scas
mov
inc
in
or
and
sti
imul
jo
sub
mov
adc
lcall
adc
lea
mov
push
fcoms
fidivrl
mov
in
lcall
aam
jmp
sbb
or
test
test
jno
bnd
push
pop
int
xchg
xor
ja
and
sub
mov
repz
pop
mov
scas
push
lods
or
xchg
fnstenv
movsb
outsl
add
fbld
mov
xor
popf
mov
repnz
and
aam
lss
ret
jge
or
or
stc
mov
test
mov
xchg
adc
xchg
mov
or
sbb
dec
sub
outsb
mov
sbb
pop
inc
sbb
lcall
mov
fmul
xchg
xchg
xor
mov
leave
push
out
in
fadd
je
push
in
rcl
sub
cmc
rcl
fists
shlb
call
push
test
leave
leave
mov
repz
ficoml
pusha
mov
jmp
sbb
test
inc
mov
jns
xchg
cmp
icebp
mov
mov
sbb
jecxz
mov
out
mov
lret
gs
fsubl
test
das
stos
add
and
rcll
and
xchg
pop
cwtl
push
fistpl
into
jb
sbb
adc
test
add
or
xor
or
xchg
and
lret
lret
or
jbe
mov
sahf
pop
iret
push
test
in
fists
int
std
pushf
cmpsl
lods
fsubrl
rolb
dec
pop
inc
in
push
jl
nop
pushf
mov
cmpl
add
fidivrs
or
out
arpl
mov
lock
pop
lods
jae
jno
cmp
int
add
and
jbe
stos
repz
mov
push
lahf
jl
inc
inc
js
inc
insl
imul
stos
xor
popf
nop
movl
dec
pop
dec
stc
push
push
mov
mov
popa
test
jle
push
jns
data16
jmp
inc
pop
jecxz
push
adc
fistpll
mov
xorl
cmp
or
mov
xchg
iret
push
and
adc
inc
jbe
ljmp
ds
fs
mov
push
push
mov
pcmpgtd
dec
stos
inc
pop
js
lahf
add
loop
sbbb
pop
imul
hlt
xlat
mov
cmp
es
sbb
aad
jnp
in
stos
ja
mov
ljmp
lahf
sbb
sbb
movsl
leave
cmp
mov
and
cmp
nop
pop
jmp
xor
mov
xor
ret
lcall
push
xchg
fmull
xchg
int
cltd
add
add
lock
and
inc
mov
out
dec
jae
test
jns
lret
inc
js
fwait
sbb
aam
mov
add
cli
push
lret
xorl
push
bound
jge
sub
ret
scas
push
mov
stc
push
loopne
mov
jnp
fucom
sbb
jl
popf
adc
bound
lret
add
ficompl
es
add
inc
jo
sub
mov
in
in
and
je
sbb
cmpl
je
stos
pop
jmp
stc
jno
and
adc
test
in
xchg
push
adc
mov
lea
xor
cwtl
mov
or
add
stos
test
pop
pop
and
mov
fs
sub
aad
lods
mov
stc
dec
addr16
cltd
or
addb
nop
dec
jb
jae
imull
lock
insb
xchg
fnsave
data16
in
cld
leave
hlt
test
call
cmc
cld
sar
test
pop
xchg
pop
jnp
in
jmp
pop
addb
inc
or
cmp
or
jo
xchg
xchg
push
aaa
negl
repz
adc
inc
or
scas
mov
or
mov
xor
outsb
lahf
arpl
sti
mov
fistpl
nop
into
fldenv
push
sub
mov
dec
std
mov
lret
add
ficomps
insl
mov
mov
mov
shlb
add
adc
xor
stos
adc
pushw
add
adc
stos
mov
rol
notl
pop
loope
and
sbb
sub
pop
lret
aad
cs
fistps
addr16
movb
arpl
sbb
jnp
int
add
les
jne
int
orl
push
xlat
jg
pop
xchg
nop
jle
insb
pop
jo
sti
add
loope
or
xchg
stos
popa
dec
jp
sub
or
test
mov
jp
xor
cs
jne
add
push
and
mov
testl
rcrb
lcall
cmc
pop
outsb
js
add
push
hlt
cmpb
xor
mov
test
xchg
mul
xor
mov
xor
jl
push
jle
rcr
xor
add
inc
adc
sarb
js
dec
sbb
jp
push
icebp
adc
dec
lods
xor
outsb
pop
ret
cmpsl
aad
call
outsl
movsl
out
mov
xchg
lods
add
inc
push
popa
orl
jbe
mov
lahf
imul
loope
jns
ret
mov
sbb
xor
sarl
out
aaa
adc
in
nop
push
aaa
xor
mov
pop
hlt
shl
les
sub
lock
pop
movsb
ret
aaa
ja
push
call
jmp
lret
fildll
xchg
cmpsb
mov
add
xchg
and
inc
hlt
scas
xchg
ljmp
and
test
outsb
jmp
test
cmp
dec
iret
and
pop
aaa
aam
xor
inc
sub
xor
mov
push
outsl
lock
pop
xchg
jle
and
out
sti
sub
jnp
loope
jb
inc
sti
cmp
jns
or
jmp
pop
popf
mov
jne
stc
iret
aas
enter
xchg
lods
and
das
stos
pop
leave
add
mov
movsb
adc
fcoms
fdivrs
inc
out
sahf
pop
stos
push
jb
jno
dec
lret
jge
roll
fsubrs
subl
lret
xor
jo
popa
mov
push
jnp
sbb
lret
sub
push
or
adcl
in
mov
enter
nop
mov
aas
or
mov
jl
xor
fistpll
push
test
xchg
sub
cmp
fs
lods
inc
fcomps
inc
clc
mov
loope
xor
arpl
adc
jb
out
pushf
lock
fadd
and
test
fildl
inc
repnz
aam
test
mov
cmpsl
dec
mov
mov
lea
push
clc
pop
lods
xchg
mov
push
lock
cmp
scas
mov
push
pop
push
xchg
dec
jo
hlt
add
cltd
xlat
fistpl
in
adc
fcomi
out
push
xor
push
sub
outsb
test
mov
insb
insb
sahf
sub
dec
mov
lods
and
shlb
xor
insl
cmp
fwait
imul
add
addr16
and
dec
daa
dec
push
push
mov
or
dec
jge
loope
push
inc
and
ja
pop
mov
loope
nop
pop
jae
sbb
jb
add
scas
popl
data16
dec
pop
push
fisubs
roll
jmp
adc
outsl
lods
xor
cld
out
push
inc
mov
pop
mov
shrl
adc
jbe
insl
pop
mov
enter
mov
nop
mov
jle
and
xor
gs
inc
jb
or
lret
in
and
inc
into
mov
mov
movsb
movb
pop
mov
push
pop
pusha
stos
movd
or
add
dec
sub
mov
lret
repz
out
jmp
dec
push
pop
or
fcmovu
pop
adc
pop
lock
lret
iret
sbb
lods
shrl
dec
adc
jge
fimull
test
cmp
test
pop
ja
mov
adc
and
pushf
jl
mov
or
stc
xor
inc
or
jmp
call
ror
das
into
xchg
pop
and
out
pop
add
std
jmp
imul
mov
pushf
and
andl
aad
mov
nop
imul
xchg
les
movsl
mov
pop
dec
fsubrs
stos
leave
filds
gs
imul
imul
pop
jnp
test
adc
loope
ja
mov
jae
icebp
pop
cmp
inc
div
loope
or
mov
mov
lods
stos
icebp
inc
ja
insl
and
out
or
andb
mov
push
std
iret
jge
xchg
outsl
push
inc
xor
fadds
out
mov
sub
jo
pusha
lret
push
sbb
mulb
insb
lret
sbb
shll
inc
lock
mov
incb
lea
pop
or
xchg
mov
sti
arpl
addl
js
mov
stc
outsb
inc
mov
scas
xor
sub
mov
imul
mov
inc
cmc
push
scas
inc
jp
rorb
pop
repz
in
mov
cmp
je
lret
mov
lea
push
popa
dec
mulb
hlt
shrb
sub
sti
fistps
icebp
cmpsb
daa
jno
cmp
xor
add
xchg
je
push
dec
cwtl
and
mov
int3
test
lahf
cmp
adcl
cmp
js
xor
arpl
iret
in
xchg
mov
push
inc
add
ljmp
cli
dec
sub
push
clc
fdivs
aam
sarl
cmp
iret
int
inc
nop
mov
roll
jno
jae
cmc
jae
or
scas
jno
push
xor
stc
pop
mov
ret
cmc
and
or
movsb
sbb
leave
jno
jb
push
push
push
sbb
repnz
test
xchg
fwait
dec
aad
rolb
subl
or
add
adc
lods
xchg
lods
and
xlat
mov
test
pop
test
js
mov
xchg
mov
fdivl
arpl
and
bound
cmp
loopne
cli
pop
adc
sbb
mov
divb
pop
mov
sub
js
int
in
inc
fcoml
in
lea
jnp
mov
add
inc
cmp
add
fcmovbe
lock
push
ficoml
call
lahf
push
sarb
imul
cmc
out
xchg
inc
mov
cmp
xor
int3
loop
and
xchg
icebp
js
cli
pop
xchg
pop
cmpb
pextrw
imul
iret
xlat
xchg
mov
in
pop
adc
cmp
jmp
repnz
loopne
ds
jae
loopne
sbb
je
in
call
call
mov
loope
mov
jg,pt
lods
popa
xchg
test
cmpl
add
dec
or
mov
mov
push
cltd
popf
aam
out
xor
push
rclb
aad
bound
or
cmp
mov
icebp
cmp
push
lret
test
cmpsb
mul
push
fbld
mov
fistl
psrlq
mov
jno
jle
fisubrl
and
int
push
xchg
pop
std
fdiv
stos
aaa
pop
ljmp
adc
iret
xchg
aam
ja
cli
stc
xchg
pop
mov
imul
inc
shlb
jb
insb
sbb
test
pcmpgtb
pop
mov
sbb
ret
add
mov
jne
jae
jmp
out
inc
icebp
hlt
sbb
adc
pop
mov
push
mov
mov
test
sub
mov
sub
aam
or
sbb
mov
xchg
leave
scas
mov
movb
ja
push
inc
push
pop
rclb
push
adc
int
mov
mov
in
fsts
fmuls
aas
fists
repnz
mov
enter
sbb
pop
idivl
push
gs
inc
addl
out
adc
or
mulb
test
push
sub
or
jle
pop
xchg
lret
loop
mov
ja
js
cmp
jns
cmp
adc
ficompl
mov
dec
mov
mov
or
inc
inc
fcomps
jmp
aas
addr16
dec
cmp
inc
jbe
movsb
stos
sbbl
dec
ficoml
adc
push
lds
xchg
mov
fidivrl
sub
xchg
inc
ljmp
adc
fimuls
xor
inc
sub
fsubr
arpl
push
int3
mov
dec
xchg
pop
sbb
outsb
dec
mov
std
hlt
lret
iret
ljmp
std
aas
mov
fiadds
imul
jmp
orl
xchg
mov
cltd
cmp
dec
sbb
fwait
clc
cwtl
jle
mov
pop
pop
mov
out
cmp
test
insl
jne
icebp
cld
inc
or
outsb
pop
rcrl
sti
inc
mov
mov
xchg
ja
xchg
jmp
adc
int3
pop
and
xor
mov
mov
das
xor
aam
mov
mov
jns
xchg
aam
xor
fcomps
jecxz
sbb
cltd
js
lret
gs
subl
pop
pop
int3
inc
mov
or
and
push
mov
imulb
addl
mov
pop
and
cltd
push
ror
loopne
dec
les
cmc
sti
dec
out
je
xchg
insb
mov
popa
call
mov
loope
imul
test
pop
out
xchg
call
jbe
or
mov
addr16
push
cltd
mov
mov
or
stos
cmp
stc
adc
dec
mov
dec
xchg
les
shr
jp
pushf
lret
test
xchg
sbb
inc
jbe
int3
loop
popa
and
xorb
daa
pop
push
rcl
mov
ss
adcl
xchg
test
cmpsb
outsb
mov
xchg
mov
cmp
fdivl
ss
shlb
and
scas
mov
jb
pop
movsl
mov
adcb
shlb
out
jecxz
mov
jb
scas
push
icebp
jmp
dec
xor
jmp
pop
inc
icebp
mov
pushf
hlt
cmp
push
pop
sub
xchg
jle
ja
cmp
cwtl
and
aas
adc
cmpsb
movsb
jmp
sub
cwtl
dec
setp
outsb
outsb
push
movsl
repz
cmp
aaa
xlat
cwtl
into
xchg
xor
push
roll
mov
in
push
in
stos
fdivrl
sahf
push
or
fs
je
dec
push
xchg
mov
inc
test
push
and
subb
movl
push
cmp
pop
inc
test
test
in
icebp
std
cmp
cmpsb
in
xchg
in
xor
mov
and
insl
pop
xor
in
cltd
mov
pushf
cmpb
stos
hlt
fs
push
and
fs
cwtl
jne
fsubr
int3
in
aaa
in
es
inc
repz
push
adc
test
xchg
and
popa
mov
pop
mov
jmp
jbe
dec
jge
pop
xor
jno
or
push
pop
xorb
and
xchg
es
inc
addr16
add
rcrl
and
xchg
sub
jno
sub
mov
push
jb
fwait
sub
dec
xchg
mov
adc
cltd
dec
xorb
fxch
push
nop
sysret
inc
mov
clc
pusha
and
mov
and
xchg
push
push
adc
dec
sub
xchg
ljmp
sub
daa
sti
xchg
insb
dec
cmp
adc
mov
rorb
push
xchg
dec
out
cmp
imulb
bound
lock
push
cmp
mov
mull
push
push
inc
xchg
xor
data16
or
or
sbb
loop
call
imul
pop
cs
xor
inc
mov
out
mov
mov
ds
dec
pop
jns
cmp
rorl
and
xchg
mov
into
sub
outsb
jae
dec
sbb
dec
sub
nop
out
std
ljmp
jecxz
lods
mov
psllq
in
loop
pop
cmp
mov
je
dec
push
lret
repz
insb
dec
push
mov
sbb
loopne
arpl
lds
adc
jb
mov
cmc
les
dec
lret
loope
or
push
xchg
enter
cmc
pop
lret
mov
bnd
dec
leave
insl
sbb
xor
fnstenv
push
or
in
int3
pop
inc
mov
inc
iret
aam
cmpsb
pushf
mov
inc
das
and
inc
or
jo
or
fnsave
adc
or
sti
adc
push
mov
push
jno
adc
call
pop
sbb
fcompl
stos
pop
mov
mov
inc
addr16
andl
js
aaa
cmc
and
jmp
lret
push
dec
mov
lea
xchg
loop
gs
arpl
sahf
push
ss
leave
and
call
ljmp
lret
testl
fucomp
rolb
arpl
sub
div
mull
ficompl
mov
imul
psrld
scas
into
outsl
jnp
adc
mov
xchg
sbb
cmp
and
xchg
dec
inc
repnz
shl
sbb
inc
sbb
jecxz
jae
clc
lods
mov
pop
adc
mov
push
xchg
out
sbb
xchg
push
xchg
idivl
adc
jg
or
cmp
sub
aaa
mov
lds
adc
lods
sub
es
mov
popf
push
push
inc
lods
and
les
sub
movsb
mov
xchg
cld
bound
mov
jp
jns
insb
jl
repnz
addr16
lret
imul
mov
pop
push
into
inc
mov
add
add
mov
adc
rol
mov
out
push
xor
aad
and
iret
clc
loope
lret
das
or
add
or
push
adc
dec
xchg
and
sub
je
or
stos
scas
arpl
nop
out
jge
add
movsb
lock
lods
mov
cwtl
jne
jne
fcomi
mov
jge
cs
sub
or
or
mov
data16
xchg
call
lret
nop
cmc
ds
mov
pop
movsb
lcall
xorl
push
mov
mov
xchg
lods
xchg
fstpl
mov
push
std
adcl
xor
adc
dec
mov
aam
mov
pushf
fisubl
mov
je
aas
sbb
push
sub
push
adc
xor
jg
es
inc
rcll
clc
sbb
xor
pop
cmp
sbb
popf
jb
test
push
xor
dec
scas
adc
dec
cld
push
in
jg
test
add
fnstcw
jnp
fcmovnb
mov
xor
cmp
leave
inc
sub
movsl
in
and
dec
imul
jg
js
pop
xor
push
and
mov
mov
sub
daa
push
cs
sbb
jmp
xchg
gs
fnstcw
gs
out
addr16
mov
addr16
jecxz
cmpb
movsl
test
mov
push
rcrl
loop
out
lahf
push
dec
popl
sub
push
ljmp
mov
addb
xor
cmp
or
out
fsubrl
in
int3
push
insb
divb
test
push
call
es
bound
popf
jmp
lock
stos
in
shr
add
pop
dec
stc
pop
pop
pop
mov
cli
test
mov
test
or
aas
test
xor
test
sahf
push
push
cmp
xchg
sbb
outsb
and
jne
repz
or
mov
dec
and
mov
lods
in
out
daa
add
and
imul
push
sahf
fists
les
or
mov
rcll
dec
hlt
mov
pop
pop
fstpt
sti
mov
aas
aam
sbb
js
mov
inc
sbb
lods
sub
ds
mov
jbe
repz
xor
add
mov
pop
test
loop
add
push
mov
mov
incl
pop
pop
push
mov
sti
xchg
mov
mov
mov
stc
push
xchg
push
in
and
mov
lcall
aaa
test
mov
cmp
pop
ret
sarb
dec
jno
insl
xchg
shlb
out
xchg
jmp
xor
jbe
mov
sbbl
mov
xor
mov
lea
hlt
jns
iret
mov
add
jle
xchg
in
stos
fwait
mov
js
and
divl
adc
sub
jbe
fwait
and
jmp
cmc
mov
sub
mov
sub
mov
cmpsl
lea
mov
lahf
fbld
fstpl
mov
decl
sbb
hlt
xchg
and
pop
lret
fsubrs
ret
and
push
inc
repz
sbb
inc
lahf
shlb
imull
add
ja
aam
dec
js
inc
push
inc
xchg
inc
mov
shlb
ja
dec
call
insl
cmpsl
das
dec
jg
sub
pop
fwait
push
inc
mov
pop
scas
arpl
pop
aad
jp
outsb
mov
sbb
inc
sub
ljmp
and
cmp
mov
pop
xor
ret
repz
movsl
mov
fbld
cld
mov
dec
inc
sub
scas
jp
popf
not
in
inc
mov
stc
insb
dec
and
data16
jnp
dec
mov
sub
lds
in
add
aad
xchg
inc
pop
cmp
inc
repz
xor
sub
int
ret
mov
mov
mov
sbb
aad
stc
inc
shll
movsl
inc
sub
ss
xor
imul
mov
and
mov
lods
xlat
loop
fcomip
add
movsb
addl
cltd
repnz
pop
pop
sub
lret
jmp
xchg
out
adc
xchg
inc
dec
sub
inc
and
or
sub
outsb
daa
pop
repnz
scas
dec
aaa
inc
pop
arpl
sbb
push
inc
xor
xor
mov
inc
pop
mov
pop
movsl
or
aaa
aam
fldcw
sub
adc
jge
adc
jle
mov
test
ds
push
sbbb
inc
xchg
test
loop
push
dec
mov
cmpsl
gs
mov
add
mov
jge
out
lret
sub
daa
pop
cli
mov
les
movsl
mov
push
mov
inc
clc
adc
mov
inc
repnz
push
xor
push
add
scas
mov
andl
push
pop
aam
addr16
hlt
orl
inc
pop
sar
mov
pop
adc
dec
xor
insl
hlt
add
dec
xchg
adc
xchg
dec
fidivrl
outsl
imul
cltd
push
add
pop
repz
jge
dec
scas
sub
pop
filds
mov
sbb
or
stos
and
aad
mov
mov
aad
stos
cmp
mov
add
outsb
push
inc
test
cmpsb
pop
arpl
pop
lds
nop
xor
lea
mov
mov
mov
leave
aaa
push
lea
add
push
ss
cmp
mov
je
push
pop
add
and
out
mov
xchg
cmpsb
sarb
arpl
aam
xlat
xchg
mov
movsb
arpl
dec
shl
sbb
pop
jae
je
stc
or
dec
out
cltd
mov
fisttps
xchg
sahf
pop
sbb
flds
xchg
mov
test
add
out
insb
push
push
jge
shll
js
sub
mov
lock
xor
jp
xor
cmp
insb
xchg
adc
add
inc
lock
adc
sbb
in
int3
mov
cmp
xchg
adc
xchg
and
add
test
inc
push
pushf
cld
into
mov
inc
jge
push
frstor
xchg
or
fistpl
cmp
and
mov
stos
test
mov
xlat
xchg
cmpsl
push
ljmp
test
sub
mov
mov
jp
cld
je
loope
sbb
inc
fdivl
addr16
inc
push
rclb
out
lret
dec
and
xor
adc
ljmp
ret
dec
ficompl
mov
sbb
arpl
pop
push
push
sbb
popf
inc
dec
shr
or
add
mov
mov
aam
gs
cli
pop
xchg
push
cmp
nop
popa
and
jo
lret
dec
ljmp
cmpsl
jnp
rorb
xchg
hlt
aad
gs
inc
imul
test
and
enter
push
add
mov
iret
xlat
mov
mov
sub
fisubrl
fwait
xor
cmc
xchg
add
dec
push
push
mov
mov
imull
stos
rol
aas
jg
jns
pusha
pop
cld
pop
in
lock
pop
push
xchg
fcomp
dec
add
pop
fmull
dec
adc
mov
inc
pop
xor
cmp
mov
xor
fxch
push
mov
push
fbstp
pushf
mov
xchg
cmp
or
cltd
dec
jle
jp
cmp
xorb
lret
dec
dec
hlt
into
mov
decb
pop
dec
push
out
divl
sub
cld
cld
sub
cmp
fdivrl
clc
xchg
jmp
bound
mov
mov
out
mov
pop
cmp
mov
xor
je
inc
rclb
mov
popf
mov
pop
xor
or
push
jecxz
xchg
mov
inc
or
pop
cbtw
xchg
xchg
cmp
push
sbb
lea
pop
add
mov
adc
insb
xchg
std
sbb
iret
mov
shlb
dec
or
sub
out
sbbb
pop
mov
mov
vmread
mov
dec
add
cli
cmp
fnstenv
mov
int
add
in
cmp
dec
lds
mov
fld
lcall
cli
cmpsb
mov
insb
sbb
xor
out
scas
fcoml
push
and
addr16
leave
xor
jp
inc
js
div
and
clc
int3
popa
sahf
pop
cltd
cs
push
jnp
inc
cmp
pop
fisubs
in
loop
and
and
ret
xchg
mov
lahf
lcall
xlat
rclb
mov
scas
dec
sub
sahf
std
pop
dec
sbb
ljmp
jge
add
mov
and
mov
insl
loopne
add
in
pop
daa
cmp
cs
push
outsl
shll
adc
push
jno
and
cmp
sbb
roll
dec
and
xchg
or
ds
idivb
lret
out
dec
dec
xchg
test
xor
hlt
or
jno
out
test
imul
add
inc
jmp
push
inc
xor
imul
mov
iret
xchg
inc
add
jle
loop
push
iret
add
fdivrl
xchg
jae
lea
stos
hlt
icebp
lds
xchg
or
cmpsb
xchg
shl
repz
jecxz
inc
sbb
fldcw
adc
lods
dec
sub
rolb
sub
imull
inc
or
push
icebp
xor
add
inc
addl
adc
ds
mov
add
test
jge
cli
insl
cmp
int
xchg
push
mov
xlat
pop
mov
dec
xchg
fbstp
ret
pop
mov
cmp
sbb
jb
add
loop
lds
or
call
xchg
test
xor
fisttpl
sub
push
insl
insb
out
sti
xchg
adc
or
mov
cmp
mov
notb
adc
stos
loopne
inc
inc
subl
es
pushf
pop
push
aad
data16
fmuls
jmp
and
outsl
fs
jbe
ja
pop
jb
cmp
bound
adc
push
dec
xchg
jl
xchg
adc
jmp
lret
pop
mov
and
je
scas
repz
pop
xchg
fiadds
cld
inc
and
hlt
jge
jo
xchg
and
mov
lret
daa
push
stc
inc
jo
push
push
in
cmp
mov
jbe
jne
mov
mov
push
cli
xorb
mov
ror
push
add
or
mov
push
pop
push
pop
sahf
add
pop
subl
stos
cmc
mov
cmp
out
hlt
sbb
xor
xchg
sub
mov
imul
push
std
lret
mov
jne
sti
push
inc
ret
cwtl
shll
xchg
outsl
movsb
addb
pushf
enter
jb
push
mov
jae
mov
sub
test
lcall
ficoms
pushf
inc
sbb
std
js
jmp
test
test
xor
xchg
cmp
aad
gs
into
cmp
int3
inc
add
inc
add
pop
cmp
leave
push
les
je
and
sbb
scas
jbe
arpl
cmp
adc
in
popf
mov
add
shll
mov
fists
jno
mov
xor
jo
and
aam
aaa
jno
aad
mov
jl
mov
dec
xor
mov
ss
sub
or
mov
mov
sbb
or
mov
adc
lret
cmpb
popf
mov
int
sbb
cmp
xchg
dec
mov
pop
push
push
out
push
add
jecxz
and
xor
shlb
in
popf
jl
and
push
pop
push
dec
ljmp
and
cwtl
ja
jb
or
int
test
imul
imul
sbb
daa
and
dec
xchg
xlat
push
enter
or
ljmp
or
pop
push
xlat
add
out
arpl
mov
sahf
mov
test
adc
or
mov
sbb
fcmove
xor
push
aaa
mov
mov
cmp
pop
sbb
sub
push
mov
clc
jle
mov
lds
sbb
adcl
je
inc
ficomps
cmp
mov
dec
js
jae
out
jle
pop
test
cltd
roll
fdivrs
sarl
fs
xchg
aaa
loop
iret
pop
pop
inc
cmpsl
rorl
jp
cmp
cli
mov
lds
mov
je
aad
clc
jg
jmp
adc
adc
popf
push
inc
mov
cmp
inc
mov
movsl
xchg
data16
inc
mov
xor
rorl
dec
test
jg
mov
into
inc
fstpt
aam
lods
call
scas
push
lock
push
dec
aas
push
jg
sarl
push
lds
sub
js
addr16
push
mov
imul
jge
fnstcw
lds
push
ds
mov
push
push
mov
add
ljmp
mov
mov
cltd
push
jge
add
out
je
idivl
cli
test
repnz
movl
mov
leave
xor
leave
ljmp
and
jmp
adc
jp
lods
fs
test
push
add
xor
mov
or
mov
hlt
repnz
and
mov
in
xor
xor
imul
jnp
lods
sub
sti
shlb
push
loop
aam
not
and
cwtl
cld
cmp
dec
jl
sub
add
enter
mov
outsb
addl
gs
iret
lea
jno
mov
mov
push
sub
xchg
fimull
jp
xchg
xlat
mov
pop
inc
in
jge
jmp
mov
cmp
ficoml
or
int
fadds
jp
sub
lods
adc
dec
jb
cld
stos
mov
jbe
rolb
push
or
push
mov
fwait
in
sahf
sub
adc
fnstenv
add
mov
test
out
fisubrs
iret
aad
xchg
mov
xor
int
add
dec
mov
cwtl
and
adc
je
or
in
add
test
adc
dec
inc
dec
outsl
sbb
mov
sub
xchg
and
cli
dec
fdivr
and
lahf
ds
xor
mov
adc
push
sbbb
cmpsl
pop
push
hlt
pop
and
push
imul
sub
cmpsb
jo
loope
dec
orl
cmpsb
push
shr
lea
mov
lock
sub
std
mov
dec
xorb
push
cmp
insw
ja
insl
mov
fs
std
push
lcall
in
cmp
mov
les
xchg
bound
repnz
sahf
leave
repz
adc
aad
pop
pop
pop
iret
add
test
xchg
add
call
push
lcall
cmp
out
jp
pop
mov
sub
cmp
adc
fisttps
aam
xor
sahf
in
jo
lods
iret
pop
imul
or
inc
not
aad
outsb
ret
into
dec
add
push
jbe
inc
jge
and
push
insl
out
jle
stos
cmp
push
lea
dec
fadds
mov
decl
rclb
xlat
xchg
mov
mov
aam
pop
mov
fmuls
jl
test
iret
xchg
lock
inc
push
pop
popa
adc
xchg
add
std
arpl
mov
adc
flds
jnp
orl
outsl
inc
das
xchg
test
jmp
mov
and
cwtl
hlt
jb
jl
push
xchg
sub
roll
fistpll
mov
test
add
push
pop
mov
pop
xchg
adc
lret
xor
mov
adc
sub
xchg
mov
xor
jbe
dec
fwait
inc
movsb
jae
push
sbb
ds
jno
out
and
scas
addr16
add
outsl
shrl
cltd
es
out
sarb
lock
xchg
jge
call
pop
test
xchg
sub
inc
sub
push
out
test
inc
aam
lods
loop
xor
aam
stos
mov
int
test
das
lock
fwait
pop
sbb
test
outsl
push
dec
ret
sbb
mov
out
push
inc
push
dec
mov
pop
lea
lock
pushf
xor
mov
mov
pusha
xlat
and
or
movsb
aaa
fwait
shll
pop
les
scas
and
add
pop
xor
scas
push
sbb
pop
call
mov
or
fildll
adc
sub
sub
inc
pop
pop
es
xchg
pop
inc
fdivrl
movsl
stc
xchg
xchg
rcrb
xor
add
xor
into
mov
jae
or
mov
mov
movsl
cmp
xor
stos
mov
xchg
cmp
push
xchg
leave
mov
xchg
repnz
stos
cmp
or
rcrb
fisttpl
xchg
stos
mov
or
enter
mov
insl
adc
mov
out
pushf
fs
mov
push
enter
push
mov
popf
xchg
jns
lock
dec
or
push
nop
mov
aad
sti
pop
outsb
dec
dec
add
mov
sbb
sub
bound
repz
movsb
jecxz
out
dec
fdivs
and
push
and
aas
pop
xor
and
loop
mov
pop
push
push
jle
outsb
icebp
mov
cmp
and
adc
mov
lods
fisubrl
test
fs
mov
ljmp
jo
lahf
inc
rcr
xor
call
std
int
mov
mov
lret
adc
mov
jo
inc
movsb
std
jge
push
sahf
les
ds
inc
loope
jo
insb
inc
jnp
sbb
jno
pop
dec
jg
jecxz
cmpb
jnp
xchg
loopne
loopne
xor
pop
and
out
ja
mov
pop
mov
popa
inc
dec
push
ja
add
dec
jge
jp
sbb
out
inc
pushf
aaa
insl
pop
pop
sbbl
mov
outsb
outsb
ffreep
inc
mov
pop
xlat
arpl
insb
loop
xchg
imul
shlb
ret
mov
imul
inc
shl
add
cmp
cmp
out
push
movsl
lcall
mov
pop
mov
sbb
xchg
jnp
mov
jnp
les
xor
fcoml
cmp
xor
js
stos
lods
cmp
mov
inc
std
repz
lcall
xchg
outsb
adcb
cli
lahf
inc
xor
int3
dec
arpl
lret
sbb
jo
movsb
push
jno
jno
add
imul
int
shl
lods
mov
stos
sbbl
insb
add
imul
add
cmp
xor
pop
push
movsb
das
dec
jno
icebp
mov
pop
and
xchg
cmp
mov
filds
mov
cmp
mov
xor
fpatan
cmp
push
ficomps
push
inc
lahf
insb
sub
sub
mov
and
add
inc
adc
test
cld
or
lea
cwtl
mov
loopne
xlat
xchg
bound
popa
push
cmp
push
popf
and
sub
and
enter
insb
std
mov
jecxz
lods
fs
mov
pop
pop
dec
dec
mov
aas
cmp
int3
aad
mov
dec
pop
pop
add
in
or
cmp
mov
decb
ljmp
shlb
pusha
inc
pop
cmpsb
jecxz
jl
fcmovbe
das
mov
out
push
push
push
insb
stc
movsb
push
mov
mov
loop
sbb
ror
push
inc
jo
fcmovb
mov
lods
push
xchg
push
mov
scas
pop
or
add
or
jecxz
mov
jmp
push
ds
jbe
mov
in
arpl
fists
fcmovnb
loope
add
cmp
jae
test
mov
ss
test
jmp
test
jnp
cld
or
xchg
aaa
pusha
mov
mov
mov
lahf
jle
adc
dec
lods
or
pushf
rcll
jl
sarl
push
dec
inc
xor
in
or
sbb
lock
cltd
push
cmp
scas
mov
jge
jbe
in
add
lods
xor
jno
jge
add
push
fwait
loope
jmp
fsubrl
pop
sbb
mov
data16
cmc
sub
inc
cli
in
ss
enter
lods
xlat
push
adc
mov
mov
in
negl
push
btr
sti
js
sarb
mov
mov
dec
and
in
add
call
stc
cmp
out
push
flds
adc
cmp
dec
lock
rcr
jns
or
mov
imul
mov
mov
dec
test
into
adc
push
dec
ficompl
xchg
and
sbb
push
lret
ficomps
mov
push
lea
pop
push
cmp
pop
pop
adc
mov
in
xor
repnz
jno
nopl
sbb
jno
lods
push
mov
push
fildll
mov
inc
pop
test
ret
dec
or
push
inc
lret
loopne
rorb
ficompl
push
push
inc
iret
bound
in
repnz
dec
adc
xchg
mov
lcall
out
fists
xchg
mov
rcrb
inc
std
xchg
sbb
dec
add
jecxz
cmpsl
shll
enter
pop
aad
jb
xor
pop
int3
pop
pop
push
lcall
outsl
jg
cmpsb
mov
or
sti
lods
gs
mov
xchg
ja
lea
daa
je
push
test
pusha
ss
mov
vmovlps
sbb
cld
mov
ljmp
push
and
mov
daa
out
or
xchg
ljmp
fists
clc
dec
sbb
loope
xchg
lods
mov
stos
int
and
mov
sbb
in
addr16
dec
insb
pop
sbb
xchg
sti
jecxz
inc
push
pop
repz
cmp
xor
add
dec
in
je
rorl
sub
pop
push
idivb
lods
or
mov
sub
stos
xor
mov
mov
or
imul
repnz
sub
xor
mov
popa
push
ffreep
inc
iret
cmp
and
shrl
mov
inc
jne
or
into
subl
icebp
lret
xchg
mov
inc
xor
add
out
dec
push
inc
sbb
fnstenv
ss
icebp
xor
xchg
xchg
sbbl
mov
jno
repnz
cmp
rol
mov
dec
dec
xchg
jmp
dec
push
ja
or
ja
sub
xor
mov
repnz
cld
jg
push
push
jl
gs
inc
les
sbb
mov
ret
add
sub
mov
movsl
or
mov
in
dec
lock
dec
or
std
imul
xlat
rorl
inc
push
pushf
xor
mov
dec
sub
mov
pop
aam
xor
loope
mov
xor
jae
mov
fdivrl
testb
test
cmp
test
jg
jecxz
mov
jp
jb
clc
fsubrl
dec
les
pop
cmp
and
addb
mov
mov
out
adc
push
ljmp
dec
add
xchg
dec
push
loop
or
jne
xor
aam
xchg
mov
mov
out
mov
push
addr16
or
mov
mov
push
or
sub
subl
sbb
ror
scas
pop
dec
xor
push
push
scas
int3
add
mov
push
jb
and
add
inc
in
stos
mov
loopne
in
jmp
sub
mov
pushf
xchg
leave
dec
pop
cmc
sar
pop
lds
in
or
movsb
dec
pop
aas
mov
ret
push
jl
cmp
das
shll
adc
ljmp
jbe
jne
lods
roll
ret
outsb
in
cmp
scas
inc
inc
cwtl
pop
and
cmpsb
call
insb
mov
xlat
pop
mov
mov
xchg
mov
fisubrs
mov
sub
je
lock
nop
pop
inc
sbb
out
cmp
mov
popf
dec
jg
or
mov
ret
out
into
stc
push
cltd
xor
xchg
jnp
sahf
xchg
inc
cld
fwait
push
loop
addb
in
orl
scas
scas
inc
popl
xchg
xchg
pop
push
mov
jbe
test
or
jns
fcoms
pusha
adc
les
push
or
xor
out
mov
pushf
or
sbb
mov
push
jl
out
xor
test
loop
js
dec
xor
mov
mov
jno
in
orb
lcall
push
push
and
ds
sbb
jecxz
and
push
aas
dec
movsb
dec
and
scas
pop
cmp
ja
dec
jnp
and
cwtl
scas
shll
xchg
std
fwait
jo
add
xor
imul
xchg
xlat
and
jae
cmp
cmpsl
sub
lods
xlat
insl
push
mov
ret
cwtl
xchg
repz
mov
lahf
mov
or
fwait
xor
cs
inc
inc
rcl
pop
dec
push
cmpsb
lods
jb
adc
or
mov
xor
xor
sub
iret
pop
cmpsl
push
repz
jl
outsb
or
xchg
leave
pop
xlat
mov
xchg
push
mov
imul
and
cmp
mov
test
nop
pop
or
sub
dec
mov
lcall
mov
clc
push
insl
pushw
mov
sbb
or
push
mov
icebp
lahf
addl
pop
shlb
out
loope
or
mov
inc
stos
dec
mov
jns
ficompl
mov
pop
mov
iret
jmp
sub
call
das
fucomi
mov
xor
mull
pop
mov
mov
push
enter
sub
xchg
fdiv
dec
mov
inc
lods
and
rolb
xchg
dec
mov
cs
sbb
ror
jg
lods
cltd
push
mov
xorb
adc
push
fwait
push
sbb
push
lcall
cmp
jb
jl
pop
ss
sbb
xchg
sar
movsl
push
jne
in
cmp
sbb
xchg
adc
les
xrelease
sub
imul
fbstp
push
or
pop
je
or
adcl
ljmp
sub
jg
test
push
jb
cmpsb
loop
sub
imul
or
cmpsl
cli
icebp
or
dec
xorl
repz
leave
mov
sbb
dec
adc
jl
lods
pusha
mov
sub
lock
add
xchg
mov
sbb
sub
lret
sbb
rol
pop
les
push
add
shll
mov
mov
sub
pop
pusha
js
in
push
push
stos
movsl
pop
xchg
mov
push
and
cld
mov
push
xor
mov
mov
outsl
fadds
cwtl
ss
in
mov
mov
or
mov
test
lret
inc
fcoml
sub
mov
mov
in
mov
bound
sbb
popl
aam
xchg
fidivrl
push
mov
lcall
add
inc
jo
mov
cmp
sbb
push
push
sub
inc
cmp
sbb
cld
loope
pop
test
dec
sbb
push
dec
dec
lods
add
in
cmp
pop
stos
inc
fdiv
sti
lahf
fldl
pop
out
and
rorb
in
insb
fnstenv
fcompl
and
dec
jbe
mov
dec
sub
cmp
dec
fwait
in
inc
cli
jl
dec
test
and
cmc
push
data16
jo
das
ficompl
movsl
fwait
loop
inc
xchg
leave
movsb
sbb
movsb
test
out
das
mov
cld
and
push
or
out
push
insl
xchg
cmp
femms
insb
xor
xchg
ret
out
hlt
data16
cltd
js
xor
mov
push
fmulp
push
push
mov
call
xchg
and
subb
fwait
pop
sub
adc
mov
lret
or
setl
and
inc
mov
push
insb
lcall
in
inc
adc
pop
add
and
shll
sub
push
or
inc
into
sbb
in
sub
arpl
adc
xlat
pop
fwait
mov
sbb
jnp
das
pop
mov
call
or
imul
or
mov
sbbl
pop
push
push
incl
mov
xchg
pushf
js
inc
movsl
stos
mov
mov
add
jecxz
cmp
fsubl
push
mov
mov
xchg
ss
push
push
mov
pop
jno
call
std
xchg
dec
sbb
push
jae
add
or
jg
int3
mov
or
mov
and
loopne
sti
jnp
xor
xchg
push
sub
je
mov
mov
fldcw
into
nop
popa
inc
xchg
enter
xor
mov
adc
out
sbb
jp
movups
jge
inc
xchg
adc
adc
push
ficomps
je
lods
push
leave
and
cs
aad
mov
adc
ljmp
jno
pop
jle
loop
xchg
or
enter
pop
or
xor
and
sbb
jae
adc
and
xchg
fists
and
dec
cwtl
imul
jbe
test
daa
movsl
sub
cmpsb
xchg
movsl
fistps
jae
cmp
mov
mov
leave
add
mov
dec
or
xlat
int3
jecxz
inc
xor
in
xchg
mov
test
push
sub
mov
mov
inc
xchg
or
neg
dec
clc
mov
push
test
pusha
inc
jge
mov
movsl
repz
jmp
jbe
jno
pop
push
add
scas
inc
jle
jae
les
mov
sub
xor
adc
data16
outsb
xchg
mov
faddl
lcall
movsb
add
sub
out
push
das
add
pop
aad
adcb
fsub
fistpll
sar
sbb
test
fsubrs
xchg
adc
xlat
int3
icebp
lret
sbb
inc
dec
xchg
out
pop
cmp
jns
sbb
sub
int
mov
jmp
cld
and
add
fsubrs
iret
fcoml
jl
fsts
jmp
or
xchg
xor
add
dec
add
mov
repnz
hlt
je
xchg
push
mov
jns
cwtl
scas
int
inc
mov
jl
popf
ror
cmc
fdivrs
pop
xchg
pop
data16
icebp
arpl
cmp
lret
adc
jno
mov
mov
push
xchg
outsl
pushf
scas
test
inc
adc
testb
subl
push
inc
es
mov
aaa
mov
out
pop
lret
aas
mov
cmp
pop
pop
adc
popa
and
xchg
ss
dec
inc
incw
inc
jmp
ljmp
mov
jge
ffree
orb
stos
das
ss
fdivrs
test
imul
cmpsb
lret
je
xchg
mov
push
out
lcall
adc
enter
mov
add
addr16
fdivs
sub
or
push
stos
cmp
test
jo
cmp
add
ljmp
cli
fucom
or
mov
mov
in
ret
inc
push
out
test
or
xorl
stc
dec
or
xor
xlat
das
ret
mov
cmp
lcall
jl
xor
adc
int3
stos
adc
popf
and
stos
cwtl
mov
enter
cwtl
cmc
xorl
dec
cmp
je
outsb
fmull
inc
repnz
insb
sub
test
dec
nop
aad
xchg
movsl
xchg
pop
dec
sbb
pop
arpl
loop
xchg
out
icebp
mov
sahf
or
mov
pop
jno
jo
add
xor
jns
mov
pop
daa
mov
mov
popf
push
cmp
mov
fstl
lock
cli
das
add
xchg
push
xor
in
rcll
fstl
out
cmp
imul
push
bound
sbb
stos
pop
pop
mov
jbe
sarb
sub
cmpsl
nop
sub
aaa
jnp
xor
xchg
lahf
lret
nop
mov
enter
jecxz
popf
inc
mov
ljmp
sahf
jge
ret
dec
cmc
fsub
adc
inc
stc
xor
test
pop
out
pop
inc
leave
divb
push
dec
cmp
dec
mov
xchg
and
sbb
prefetchwt1
in
dec
ja
fdivrl
mov
jmp
dec
sub
ja
xchg
mov
aas
sarl
inc
xor
cmc
test
ss
or
mov
mov
divl
push
fwait
repz
xchg
xchg
inc
outsl
loopne
jecxz
loopne
ret
stos
mov
sti
mov
notl
sti
jb
daa
mov
pop
sbb
enter
push
mov
ljmp
or
mov
inc
jae
mov
test
adc
mov
or
icebp
lods
insl
test
push
mov
push
adc
push
bound
and
int
mov
lret
pop
jecxz
add
pushl
enter
mov
mov
imul
imul
adcl
adc
adc
sbb
mov
and
lret
mov
pusha
mov
adc
test
xor
sbb
or
jl
ja
out
inc
pop
repnz
add
push
pop
mov
test
ds
add
ret
pop
xlat
dec
aaa
in
sub
dec
sti
pop
mov
repnz
ss
into
push
ss
pop
jge
scas
ficomps
inc
sbbl
sub
sbb
leave
lahf
xor
push
mov
adc
rol
inc
mov
adc
std
pushf
test
inc
aad
jae
iret
insb
and
mov
xchg
fsts
jp
ja
pop
repz
popf
push
in
imul
movsb
sbb
js
fdivl
mov
out
out
test
clc
or
nop
pusha
je
repz
mov
push
stos
add
mov
bound
push
test
loope
mov
pop
push
adc
lea
adc
mov
fldcw
xlat
sar
stos
out
mov
popf
dec
push
cld
js
cmpl
and
jno
inc
test
xchg
ds
or
and
jge
inc
xchg
cmp
xchg
cmp
dec
pop
fwait
cli
and
lea
mov
mov
daa
pushf
jae
push
sti
inc
popa
inc
add
jp
icebp
mov
dec
lea
in
les
lds
hlt
loopne
push
outsb
sahf
popa
jp
cwtl
sbb
add
cli
lods
mov
fs
fdivs
add
mov
fstps
flds
adc
mov
or
push
mov
fsubrl
inc
pop
mov
lret
fcomps
push
int3
outsb
scas
pop
ja
mov
jge
out
push
les
jmp
jmp
mov
rorl
push
or
shrb
imul
movb
mov
and
loope
stos
sub
pop
lea
js
out
lret
js
xor
int3
jns
loope
pop
push
imul
lods
mov
mov
es
jnp
call
jno
call
ja
mov
imul
inc
adc
repz
cli
repz
out
jle
iret
mov
inc
mov
ror
jecxz
xlat
cmpsb
push
das
or
push
mov
mov
dec
cmp
cmp
les
mov
filds
in
pop
andl
pop
ud0
pushf
sbb
loope
sub
imul
jbe
pop
or
adc
ds
loop
mov
dec
imulb
mov
mov
leave
mov
xchg
leave
mov
in
dec
sti
movsl
jne
jo
subb
or
pop
sti
push
aam
push
repz
pop
adc
lret
pop
mov
sbb
ret
cld
jbe
out
xor
jns
dec
inc
pop
loopne
pop
sbb
cli
pusha
and
dec
lock
and
js
shlb
out
mov
push
in
fisttpll
pop
subb
js
fidivl
nop
xchg
jmp
inc
call
push
repz
lret
mov
pushf
jnp
shlb
sarb
inc
or
stc
rol
shl
scas
mov
mov
xor
fs
add
push
and
inc
mov
mov
and
cmp
test
fildll
pop
sub
pop
mov
clc
or
sub
fsubl
mov
xchg
push
pushl
rorl
dec
inc
negb
imul
inc
sub
and
call
and
or
push
out
ficomps
stc
fdivrl
aas
push
cs
jle
pop
xchg
mov
js
jnp
jmp
insl
bnd
or
adc
cmpsl
fdivl
mov
xor
cwtl
push
mov
repnz
push
scas
mov
stos
cmp
xchg
arpl
sarl
push
sbbb
and
or
bound
iret
jl
sub
pop
out
or
push
mov
das
imul
div
and
fimuls
xor
outsl
jae
rorl
test
xor
and
jge
inc
clc
pop
mov
cmpps
inc
mov
call
xor
inc
xor
call
inc
sbb
loop
cmc
pop
clc
inc
push
push
ja
dec
xlat
or
jle
imul
or
jmp
pop
es
out
in
repz
outsl
sub
call
insl
xor
xchg
inc
sbb
mov
inc
adc
fldln2
cltd
stos
mov
clc
adc
and
inc
and
mov
adcb
movsb
cs
and
sub
sub
sti
pop
pop
lods
sbb
mov
sar
sbb
add
cmp
sbb
dec
xor
adc
lock
inc
cmc
adc
out
sahf
jmp
push
addr16
shlb
lcall
outsl
popa
mov
cmpsb
leave
out
add
mov
pop
call
ss
or
aaa
test
dec
xchg
movl
das
icebp
fidivrl
mov
mov
mov
pop
cli
add
imul
dec
jnp
loope
xchg
pop
push
fwait
pop
jns
inc
jg
hlt
and
xchg
pop
push
push
mov
insl
out
xchg
add
and
adc
sbbb
xor
test
or
sahf
popf
hlt
or
aam
negb
lcall
push
fistps
xchg
stos
or
dec
cmp
add
xchg
push
and
jmp
pop
call
repnz
cmp
pop
shrl
mov
popf
add
inc
imul
inc
arpl
inc
bound
daa
and
or
arpl
fsubrl
mov
ds
push
push
ret
xchg
push
enter
add
add
lret
out
fs
xchg
inc
cmpsl
lahf
cmp
dec
push
fidivrs
stos
add
int
add
push
xchg
xor
inc
dec
dec
cmc
mov
push
mov
and
inc
rorl
loopne
std
aas
shr
sub
outsb
ret
adc
jno
insb
outsl
insb
jno
test
clc
scas
jns
mov
mov
and
inc
sub
sbb
mov
mov
loopne
arpl
sub
cmpsl
bound
mov
lahf
in
mov
pop
jmp
bnd
pop
inc
xchg
iret
cmpsb
out
dec
enter
push
cmp
mov
hlt
sub
dec
arpl
dec
stc
jo
stos
and
in
dec
xor
cltd
xchg
mov
leave
and
dec
adc
out
je
into
lret
jmp
mov
mov
lret
ds
loop
popf
mov
divb
jp
xlat
into
sti
lock
cmp
xor
je
fwait
mov
jp
je
fdivrl
xor
jmp
stos
cwtl
sahf
xchg
leave
lock
xchg
or
loopne
xor
cmp
aad
or
test
fwait
iret
push
dec
rorb
test
ret
sub
movl
sub
pop
mov
push
or
pop
push
das
insb
sub
loop
mov
xchg
jne
dec
out
sbb
jnp
and
mov
xor
es
and
stc
cmp
hlt
mov
pop
pop
orl
std
cmp
mov
test
iret
xchg
test
inc
push
cmc
pushf
pop
shll
test
repnz
lds
xor
repz
cmp
inc
rcpps
fs
xchg
mov
fs
stc
pop
add
push
jne
and
xchg
insb
inc
fbld
adc
adc
mov
imul
jne
xchg
mov
mov
inc
adc
add
ror
aas
dec
or
sub
xchg
mov
hlt
mov
xlat
bound
shlb
mov
das
push
and
es
pop
fstl
add
ret
push
ljmp
inc
pusha
pop
adc
mov
dec
cmp
sub
aad
mov
shl
or
and
pop
sbb
cmp
jbe
add
xor
cld
or
mov
dec
cmp
push
jecxz
xor
incb
inc
scas
jl
fisttps
and
xchg
pop
aam
test
mov
std
lret
cwtl
jle
xchg
mov
jl
and
mov
adc
loope
pop
sub
cmp
in
into
aam
push
mov
outsl
xchg
sub
addb
mov
cmp
lret
cmp
mov
jl
push
stos
and
gs
movsl
outsl
dec
pop
into
xor
insl
or
push
loop
jno
adc
dec
jg
fisttps
xchg
push
outsl
lds
adc
vsubps
lcall
lods
sub
inc
add
jae
push
stc
fwait
popf
cs
push
mov
imul
mov
mov
mov
fstps
jle
jge
jnp
push
loope
aam
hlt
jo
scas
ljmp
out
xor
adc
and
inc
movsb
add
test
ficoms
jo
adc
push
aaa
or
and
cltd
add
sub
in
in
inc
inc
pop
or
data16
movsb
cmp
pop
adc
les
pushf
mov
fs
sarl
lahf
push
mov
filds
sub
cmc
cmp
or
xchg
adc
fdivrl
or
addl
rorl
sub
mov
xorb
sub
cmp
movsb
clc
adc
je
fst
out
int
push
test
jp
adc
lahf
loopne
icebp
enter
fisubrl
jmp
iret
lods
dec
clc
pop
sbb
sbb
lcall
push
test
mov
jo
push
mov
dec
mov
callw
or
cli
push
arpl
ficompl
cmp
xor
jp
cli
outsl
ss
mov
cmc
adc
jne
jo
cmpsb
and
and
adc
lds
or
cmc
insb
jno
cmp
fimuls
gs
and
adc
popf
jns
or
adc
xor
lea
scas
sub
pop
in
inc
in
sub
fisttpll
jge
push
in
push
lock
in
loope
xchg
negl
cmp
jl
pop
mov
mov
xchg
out
rorb
inc
std
adc
xchg
jbe
xor
cmp
inc
inc
xchg
scas
add
into
ret
jbe
ret
adcl
stos
pop
mov
and
out
fcmovnb
aam
cmpsl
not
cld
and
cltd
scas
lea
cs
mov
xor
aas
xor
dec
sbb
insl
mov
punpckldq
dec
sbb
xlat
arpl
jbe
sbb
ret
mov
lods
scas
jne
or
fdivs
xchg
testl
push
xchg
sub
scas
loope
push
lea
insb
jbe
sarb
shrb
cmp
add
and
adc
imul
xchg
add
add
pop
loope
hlt
call
lds
mov
push
mov
lea
fwait
inc
fdivs
out
jbe
or
int
add
sahf
mov
xchg
pop
popa
int
mov
pop
fldl
leave
sbb
pop
mov
xchg
xchg
clc
xor
jl
stos
jl
test
icebp
insl
mov
inc
nop
shrl
in
adc
dec
lret
fabs
stos
movsb
out
or
outsb
mov
mov
lahf
lds
testb
rcr
cmp
inc
fcmovu
insl
ss
mov
addl
cwtl
and
mov
test
push
ds
lods
and
sbb
dec
cs
out
cmpsb
mov
stos
sbb
enter
or
mov
add
pop
mov
mov
loopne
mov
mov
inc
rcll
out
test
lods
inc
ds
fdivs
cmp
es
inc
aaa
add
pop
orl
adc
lock
xchg
iret
cmpsl
pop
xor
xchg
dec
cli
mov
sbbl
ret
cmpsl
stc
xorl
cmp
insl
jle
push
jp
fcmovbe
jno
leave
jmp
cmc
xchg
fcompl
pop
xlat
xchg
or
push
mov
imul
cmpsb
out
or
shl
ljmp
push
pop
call
fcoml
das
int3
jo
sahf
fimull
fsubs
mov
daa
mull
push
mov
sbb
or
pop
lods
push
imulb
xchg
dec
jecxz
aad
iret
jne
pop
hlt
loope
adc
xchg
mov
arpl
push
loop
dec
sub
adc
mov
jns
mov
outsb
in
out
cmc
xchg
mov
sbb
ja
lea
push
pushf
pop
test
es
clc
movsb
incl
lds
je
fdivrl
imul
loopne
adc
notb
jmp
les
dec
fcmovnbe
sysret
jo
es
sarb
push
mov
push
shrl
and
sbb
stos
pop
sahf
dec
jp
jge
out
xchg
xor
pop
into
jg
lahf
or
lods
mov
xchg
data16
out
sbb
add
fsubrs
loope
dec
adc
jno
lea
in
jecxz
dec
testb
push
mov
sub
test
fadd
popf
dec
fcoms
fidivl
ret
popf
decb
fs
inc
jae
push
fisttps
sti
fs
stc
add
mov
jnp
js
movb
je
mov
shr
fwait
xchg
repnz
repz
xchg
and
add
mov
sub
sub
stos
jnp
inc
insl
ret
mov
das
mov
cmc
fists
and
icebp
xlat
push
ss
mov
loopne
or
mov
rcr
jnp
cli
cli
pop
mov
xchg
adc
jmp
and
add
push
insb
sbb
pop
dec
or
popa
sub
lods
in
mov
ds
mov
and
in
lods
out
push
jb
rcl
pop
lahf
push
shrl
jecxz
pop
push
or
mov
push
inc
or
jle
lret
mov
test
repz
fsubrl
sti
rolb
push
adc
sub
dec
int
sub
ret
loope
fistpl
sti
dec
jecxz
inc
mov
daa
testb
mov
adcl
sub
dec
push
aaa
daa
inc
cmp
add
int3
js
loopne
aad
jg
cld
cld
in
iret
fs
test
cmp
lock
mov
add
decl
lea
cmpsl
in
bound
or
push
cwtl
mov
sub
jne
add
cwtl
mov
out
jecxz
std
popf
lods
loopne
cmp
mull
push
std
push
pop
fs
inc
cmp
scas
fildl
imul
shll
imul
addr16
lock
std
and
frstor
and
lcall
pop
pusha
add
in
push
xchg
xor
or
mov
add
ret
cmp
push
xor
test
loop
add
fadds
pmuludq
mov
js
jecxz
data16
mov
lods
sarl
or
call
adc
scas
add
je
jnp
push
or
dec
into
add
fistpl
push
or
or
cmpsb
adc
imul
cwtl
push
xor
lock
dec
push
outsb
clc
xchg
push
sub
repz
mov
dec
mov
fwait
pusha
sub
leave
shlb
ja
sub
test
cmpsb
cmp
mov
push
xor
xor
dec
sbb
push
xchg
cmp
lcall
repz
xor
lcall
dec
cmp
test
jle
push
out
shl
add
dec
loopne
in
mov
add
xchg
fisttpll
and
jbe
xor
mov
cmp
cmp
sub
add
pushf
lds
cmp
out
mov
jne
mov
int3
push
cld
dec
jbe
ljmp
outsb
cmp
inc
jbe
mov
je
hlt
pop
xchg
clc
cwtl
or
ss
roll
and
jno
icebp
inc
test
xchg
inc
jle
and
in
xor
pop
cmp
outsb
insl
in
jo
pop
mov
jae
ds
inc
xor
nop
idivl
pop
rorl
ficompl
in
dec
ss
aam
pop
pop
cmp
jno
and
movsl
dec
push
adc
mov
test
imul
test
jecxz
cmpl
das
mov
xor
jo
sbb
fnsave
movsl
mov
mov
aas
push
and
cmpl
add
mov
push
cld
mov
outsb
jo
xor
inc
aas
add
mov
ret
lcall
mov
pop
hlt
jp
sbbl
mov
lods
dec
testl
ljmp
inc
pop
shll
je
dec
sahf
int
push
jl
sub
mov
push
js
push
inc
stc
out
inc
test
jb
pop
jno
cli
out
int3
sub
jle
jae
pop
cld
into
das
jp
and
push
dec
sbb
shrb
dec
popa
dec
lret
sub
add
negb
jno
sub
ss
jge
cmp
mov
fisttps
sarl
mov
lds
aad
cmp
lahf
daa
daa
pop
clc
dec
mov
add
adc
dec
ret
out
scas
out
mov
inc
movsb
mov
mov
pop
outsb
mov
and
and
mov
push
push
add
in
loope
push
clc
es
adc
pop
outsl
cmp
jb
pop
cmp
and
lods
popl
sub
shrw
add
fiaddl
imul
leave
mov
cltd
xchg
subl
and
in
mov
cli
out
jb
sub
jno
loopne
insb
enter
pusha
push
iret
dec
adc
push
xor
rcll
adc
aam
push
mov
jl
cli
or
insb
pop
pop
jo
jp
ljmp
imul
cmp
pop
movsb
mov
popf
push
pop
xor
push
cmp
or
mov
into
and
mov
push
xor
out
push
xor
cmp
dec
xor
mov
sub
dec
fucomp
loopne
pop
ficoml
mov
shr
jb
fucomi
xchg
and
jo
rclb
test
cmp
sahf
mov
aad
dec
cld
xchg
mov
cli
enter
mov
push
leave
mov
and
mov
mov
xchg
and
adc
or
mov
test
mov
ja
inc
aas
sbb
and
dec
push
lea
and
pcmpgtd
adc
jae
jo
test
testb
addl
push
mov
adc
icebp
fisubs
stos
fdivrs
push
lods
xor
imul
test
mov
notl
and
mov
fnsave
sbb
std
aam
daa
push
mov
mov
push
iret
cmp
lods
cmpsb
data16
loope
cmp
leave
loop
aad
xchg
repz
cmp
in
mov
mov
imul
repnz
sbb
leave
pop
in
push
ja
inc
push
sbb
arpl
or
cmp
sub
mov
sub
loope
mov
add
in
jns
mov
sub
call
std
jo
mov
addl
roll
imul
xor
jo
decl
fistpl
je
xor
arpl
fadds
mov
mov
and
fisttps
adc
mov
cli
mov
dec
js
gs
lods
xor
sti
xchg
arpl
cli
arpl
inc
fnsave
mov
scas
mov
out
ds
jo
fistps
sti
lea
push
xorb
add
subl
into
aas
lds
in
inc
mov
lret
push
inc
mov
adc
and
xor
and
mov
cwtl
clc
fbstp
jns
dec
xor
push
and
sub
roll
loopne
fstl
mov
loop
push
cmp
in
ljmp
fiadds
in
mov
adc
int3
or
sub
adc
xchg
bound
lahf
mov
fsubl
fldt
push
adc
xchg
sarl
xlat
ss
mov
out
data16
jns
out
mov
popf
addb
push
jne
push
movsl
or
bound
outsb
adc
movsl
mov
das
loopne
jge
in
mov
mov
testl
lea
dec
cli
adc
xlat
jp
xlat
fwait
or
add
dec
mov
test
mov
test
and
add
cmpb
sub
pop
push
push
das
sub
loop
cmp
jbe
int3
dec
fsubl
pop
jno
cli
movsl
setne
ret
mov
push
repnz
fsubl
shl
add
icebp
jbe
fnstenv
or
rcrl
mov
or
xlat
push
mov
in
pop
sub
rcll
repz
add
mov
push
leave
xor
out
outsb
mov
xchg
sub
jns
clc
shll
imul
xchg
cltd
jb
insb
cmp
dec
dec
cmp
fucom
sbb
adc
in
je
out
jge,pn
enter
jo
or
add
insl
xchg
mov
shll
daa
and
negb
mov
mov
jae
mov
and
xchg
out
int
das
mov
clc
sub
and
shll
test
mov
loope
xchg
std
in
cld
pop
fs
jmp
inc
jp
cmpsl
inc
pop
mov
mov
jne
in
jl
enter
test
popf
cwtl
sub
mov
jg
cmp
lret
jg
add
fists
xchg
cmp
adc
pop
fcoms
sub
mov
xchg
fnstenv
sbb
rcrb
sbb
dec
mov
clc
ret
out
lods
lahf
loopne
lea
sbb
push
loope
push
dec
fistpll
ret
test
jnp
mov
cli
cltd
sbb
sbb
and
mov
or
cmpsb
in
jb
ja
int3
push
jge
gs
push
mov
push
mov
dec
xor
adc
jmp
das
dec
into
jg
sbb
sbb
nop
nop
fdivl
cmp
clc
subps
andl
dec
jbe
pop
bound
or
mov
hlt
ja
cltd
cltd
in
and
insb
lods
sbb
xor
dec
cmpsb
cs
jle
popa
test
sbb
sub
mov
cmp
xchg
pop
dec
ds
pop
sarb
push
imul
add
pop
xor
push
out
loope
ret
and
sub
mov
lds
stos
mov
aad
or
and
mov
jmp
mov
push
and
mov
repz
mov
fsubrl
pusha
and
cld
inc
adc
je
jecxz
xchg
xlat
mov
mov
test
mov
sub
jnp
int3
xor
sub
cmp
push
les
push
dec
lret
pop
pop
scas
sub
adc
sub
sub
jns
sti
sbb
or
jle
pop
iret
sbbb
jae
jecxz
mov
xchg
stos
rcl
test
das
add
jmp
jmp
push
inc
cmc
in
loopne
pop
cmp
ds
cmp
fs
mov
daa
mov
in
sub
sub
push
clc
das
stos
mulb
cmp
test
movsl
nop
adc
sarb
cwtl
sbb
jle
mov
popa
mov
xchg
cmp
jp
popa
shll
aam
sahf
mov
addr16
pop
sbb
or
add
scas
push
sbbb
daa
jge
sub
pop
inc
push
cmpsl
inc
add
xchg
lret
sub
iret
push
shrl
scas
jno
dec
lods
inc
mov
cld
push
and
and
push
adc
mov
stos
test
movsl
cmp
movl
insb
xchg
movsl
add
insb
popf
cmp
and
jae
jge
hlt
dec
inc
sbb
inc
jge
pop
stos
jecxz
push
repz
sbb
cmc
push
mov
pop
stos
divb
popa
inc
repz
dec
dec
add
jns
and
and
cmpsb
mov
cwtl
ret
push
sbbl
dec
arpl
mov
fwait
jg
xorl
jle
push
pop
mov
jle
in
dec
mov
mov
loope
int
push
jae
pushf
out
inc
jnp
dec
outsb
jp
mov
std
cltd
aad
and
addr16
lock
orl
xchg
imul
pop
ja
fmull
aad
sub
push
sbb
adc
movsb
jecxz
scas
xor
dec
imul
dec
ja
out
adcb
in
mov
ja
xorb
bound
push
inc
xchg
movsb
xor
shll
sub
mov
add
movsl
pop
xchg
popf
in
in
lret
sbb
mov
clc
test
xorl
pop
push
popf
inc
popa
jmp
xchg
jnp
js
jle
inc
les
nop
adc
pop
imul
popa
call
xchg
out
jo
test
outsb
or
cmc
out
cvttps2pi
add
jecxz
mov
mov
or
or
shl
clc
xchg
imul
mov
push
or
pop
loope
xchg
or
mov
pop
jl
imul
out
test
andl
jns
jl
setb
repnz
test
js
jmp
pop
clc
data16
sbb
lcall
sub
jg
fdivl
xchg
sbb
jo
push
scas
lret
mov
popa
int3
or
mov
or
inc
sbb
repz
icebp
mov
push
call
enter
gs
and
jl
xor
out
fisubrl
dec
add
bound
insl
mov
jbe
jle
inc
mov
cltd
fwait
xchg
dec
cmp
sbb
push
ljmp
xchg
sar
mov
mov
imul
fwait
leave
lock
xchg
int
jle
mov
sarb
jno
in
jnp
and
xchg
test
negl
sbb
push
rcrl
stos
add
lcall
pop
add
sbb
addl
mov
mov
jns
cmp
cld
lcall
daa
xor
push
insb
out
jp
dec
mov
pop
les
cmc
mov
outsl
pop
aad
sub
rclb
decl
dec
sldt
dec
or
rcrl
pop
pushf
push
adc
pop
aam
or
sti
jns
rcll
je
scas
push
imul
dec
mov
je
push
out
lods
pop
repnz
pusha
cmp
push
jne
and
or
fcmovu
jno
outsb
push
scas
dec
sti
mov
push
sbb
std
cli
loop
hlt
push
lea
imul
addr16
sar
push
in
cmp
cmp
sub
xor
dec
outsb
adc
cltd
sub
and
sbb
iret
adc
cmp
pop
fnop
or
mov
ljmp
mov
test
stos
xor
sub
xor
xchg
ljmp
xor
nop
sbb
in
mov
repnz
das
jg
stos
adc
seto
out
andb
xchg
mov
pop
add
imul
xchg
mov
adc
adc
xchg
bound
xor
les
pop
bound
stos
out
dec
insl
fildll
add
sub
test
dec
xchg
sbb
push
scas
out
pop
and
outsb
mov
ret
iret
add
cld
std
mov
sar
push
scas
pop
mull
add
shrl
pop
push
ret
ret
or
stos
mov
fsub
dec
pop
jmp
es
adc
jp
pushf
arpl
sub
andl
mov
ja
shll
adc
or
cmp
lods
loopne
sarl
cmpsl
push
dec
jne
lea
or
jmp
pop
das
das
adc
pop
gs
repnz
cwtl
cmp
cmc
int
hlt
and
xchg
cmp
inc
sbb
aam
movsl
sarb
stc
dec
lods
mov
out
lcall
sahf
pop
test
push
repz
mov
sbb
clc
popa
scas
rol
test
inc
out
inc
fldt
in
out
or
and
cmp
test
lcall
fisubs
popf
sbb
adc
pop
movsl
push
fsubs
insb
outsb
fiadds
inc
pop
pop
jns
in
addb
fwait
cmpsb
sub
fdivr
cmpb
or
mov
nop
int
pusha
and
psubusb
shlb
dec
mov
pop
xorl
mov
mov
xor
push
sti
scas
sti
cli
or
xchg
iret
sbb
pop
mov
stos
repnz
div
xchg
adc
inc
clc
iret
je
inc
xlat
outsb
lock
je
aad
jecxz
dec
shl
fiaddl
adc
mov
repnz
push
inc
mov
or
lods
mov
push
cmovno
outsl
les
cmp
mov
sub
xchg
jl
mov
pop
aad
xor
es
clc
test
inc
xlat
ljmp
xchg
jle
insl
mov
rcr
pop
mov
mov
aas
es
mov
and
add
push
sbb
lret
lds
scas
jb
push
dec
sbb
jno
mov
in
std
lea
dec
sti
mov
sbb
push
enter
fdivrl
mov
sbb
fsubp
mov
jp
push
and
dec
pop
pop
jg
push
shrb
inc
mov
sub
adc
adc
cmp
gs
inc
dec
test
fwait
mov
jo
stos
cmpsl
sub
and
sub
xchg
andl
lods
dec
and
sbb
lea
inc
mov
test
push
pop
out
or
in
int3
dec
repz
adc
mov
int3
push
inc
loope
mov
push
sbb
out
mov
push
leave
dec
insb
dec
fildll
jg
aas
mov
lcall
push
mov
inc
in
sbb
ljmp
mov
subb
inc
scas
hlt
dec
cmp
mov
cmp
loope
jl
js
imul
xorl
xchg
js
js
fs
pop
dec
dec
jg
push
inc
adc
mov
mov
lcall
outsb
stc
jne
dec
add
lcall
xchg
mov
xchg
push
mov
shrl
das
test
mov
mov
test
pop
fwait
icebp
in
ja
pop
or
xor
std
test
jo
push
dec
xor
cmpl
push
aas
pushf
dec
cmp
and
out
xor
and
ja
sbb
insb
movsb
mov
aad
popa
push
idivl
stos
add
cmp
dec
lods
popf
xchg
sub
or
shll
sbb
rolb
lds
jle
fstpt
punpckldq
xor
jns
cwtl
out
mov
in
das
cs
push
xchg
jmp
lret
lea
ja
lods
shlb
movsl
addr16
mov
cmp
pop
mov
sub
mov
sbb
divb
lea
cs
fs
push
out
into
sbb
and
int3
lock
es
or
xchg
xchg
ror
pop
mov
into
gs
xchg
push
dec
daa
aad
and
pushf
movsb
sub
or
lods
int3
gs
mov
stc
outsl
out
push
pop
out
rorb
int
mov
mov
jbe
mov
mov
push
sub
mov
cmp
adc
add
lahf
ds
inc
es
mov
adc
repnz
mov
sbbl
and
fisubrs
mov
push
ja
push
sub
js
ret
movsb
dec
pop
test
xor
scas
push
mov
jp
xor
pop
mov
js
in
inc
jmp
insb
movsl
mov
mov
dec
std
push
dec
jge
jne
stc
mov
push
and
or
mov
clc
dec
jo
sbbl
popf
arpl
fnstenv
loope
cmp
jl
push
movsb
movl
enter
sar
sahf
aaa
out
sahf
adc
mov
push
mov
push
arpl
or
pop
xchg
int3
dec
sub
test
xchg
xor
rorl
push
sub
inc
xchg
sub
dec
pop
cmpsl
inc
mov
adc
testl
shl
push
pop
mov
and
sbb
test
pop
les
mov
insl
pop
inc
dec
mov
das
enter
ljmp
mov
add
dec
pop
repz
sbb
mov
jne
stc
and
pop
aad
repz
loop
sarl
jmp
pusha
cmp
xor
ds
aaa
cmp
in
push
out
in
call
mov
lahf
mov
mov
cmp
out
scas
movsl
jbe
or
jmp
adc
push
adc
jo
cmp
dec
dec
and
push
aaa
idivl
fstpt
iret
cld
mov
test
roll
sbb
xchg
repz
inc
testb
xchg
shlb
lock
and
ucomiss
adc
adc
inc
out
sbb
aas
outsl
ljmp
xlat
sub
mov
iret
xchg
push
xchg
adc
jg
outsb
xchg
insb
inc
js
jg
cmp
shr
cli
sub
shlb
bound
es
lcall
imul
adc
mov
iret
ds
add
aam
mov
call
xor
add
mov
cmpsl
push
mov
mov
or
lret
mov
rorb
test
xor
adc
test
xchg
test
mov
nop
inc
xor
scas
lea
mov
jmp
movsl
sub
add
movsb
mov
sub
or
dec
push
scas
mov
imul
inc
push
inc
adc
shl
pop
push
rorb
ret
xchg
sbb
daa
test
push
sub
cli
stc
jb
aad
in
and
ret
and
mov
loope
sahf
int3
xchg
sbb
mov
popa
cli
pop
popf
push
es
imul
adc
out
ljmp
mov
nop
out
loop
and
in
mov
xor
int
pop
cmp
fcmovnb
cmp
push
jo
mov
jns
xlat
fisttpll
push
cwtl
or
imul
adc
in
sub
enter
jae
mov
lds
cmpsb
std
std
popa
dec
adc
gs
xchg
dec
addb
push
fucomp
pop
adc
pop
xchg
inc
sti
rcll
call
mov
sbb
xchg
fmul
mov
cmp
mov
jl
pop
xchg
packuswb
push
sub
mov
gs
mov
dec
dec
mov
inc
jns
push
hlt
into
in
xor
repnz
pop
sbb
pop
dec
lods
jne
hlt
shlb
jp
cmp
fsubrl
fcoms
mov
mov
and
cmp
mov
cmc
daa
dec
pop
das
cmpsb
clts
mov
iret
cmp
push
mov
test
push
lcall
push
sbb
data16
sub
testl
cmp
ret
mov
pop
jae
sti
rorl
pop
push
jecxz
imul
adc
mov
adc
daa
cld
cmpsb
nopl
sbb
movq
imul
dec
sub
imul
xchg
pop
fldcw
adc
xchg
mov
ss
out
scas
in
mov
faddl
pop
movsb
mov
test
xchg
xor
pop
fs
inc
repz
jmp
adc
in
pop
xchg
add
pop
inc
cmp
or
jne
aad
fst
das
clc
xchg
xchg
xor
cmpsl
cmp
cli
lret
fisubrs
lods
bound
inc
loopne
stc
xchg
inc
cmpsb
data16
pop
add
xlat
dec
xchg
push
dec
addb
jns
jmp
mov
pop
mov
and
cmp
nop
sahf
loop
fwait
cwtl
sarb
add
mov
in
std
or
adc
sbb
mov
arpl
jb
xchg
fldl
cmpsb
and
jl
loopne
or
mov
inc
mov
push
inc
pop
popf
jg
inc
adc
fcomps
push
xchg
dec
inc
cmp
dec
dec
adc
in
nop
ds
mov
sub
data16
aaa
pop
mov
stc
cmpsl
rorb
test
stc
pop
ret
stos
adc
or
bnd
hlt
jno
out
push
ret
bound
movsl
jp
loop
int3
mov
inc
pop
not
cmp
push
jg
adc
aad
push
pusha
fcoml
enter
hlt
fbld
iret
gs
inc
sbb
outsl
inc
sahf
mov
and
push
and
ds
mov
std
stos
push
jne
lret
lahf
mov
sbb
pop
pop
push
mov
dec
pop
mov
xorb
xor
loop
icebp
pop
or
cwtl
sbb
cmp
test
xor
shll
inc
xchg
mov
ror
loop
sbb
adc
inc
xor
stc
fwait
sbb
popa
out
sbb
icebp
ds
sbb
xchg
xor
mov
cmp
ljmp
dec
movsb
xor
jmp
stos
cli
xchg
cmpsl
fcmovnb
mov
inc
cltd
loop
sub
imul
jmp
dec
ror
mov
or
push
leave
jno
push
stc
inc
dec
xlat
movsl
cmp
mov
ss
dec
sbb
mov
pusha
jne
insl
xchg
sbb
out
repnz
add
inc
fs
pop
shll
mov
int3
pop
pop
addb
push
aad
in
loope
sub
je
dec
xchg
test
adc
push
jg
cmp
push
xchg
xchg
mov
mov
xor
mov
or
sub
and
call
pop
cltd
sbb
sahf
jno
sub
sub
xchg
cmpb
sub
cmp
mov
adc
xlat
test
mov
mov
xchg
sub
xor
in
repz
daa
sub
mov
mov
mov
cmpsb
cli
cli
mov
push
dec
add
xor
ret
cmpsl
sbb
adc
fs
xor
dec
and
mov
lret
rol
cmp
dec
inc
js
mov
add
pop
xor
push
dec
jecxz
push
lea
jg
lea
xor
pop
push
lret
push
cmc
pop
push
mov
or
mov
into
negl
xchg
in
and
shr
lods
inc
or
test
shr
push
and
hlt
sar
mov
cmp
pop
pushf
and
sbb
and
cmpsb
stc
imul
lahf
add
xchg
pop
sarl
iret
or
mov
sub
lods
rcr
jp
mov
icebp
shlb
insl
jne
idivl
pop
enter
pusha
ds
jl
jp
inc
repnz
test
mov
cmpsb
mov
pop
stos
sub
or
enter
adc
mov
test
scas
mov
dec
aam
inc
pop
push
push
jmp
fwait
out
mov
xchg
jecxz
inc
xor
xchg
outsl
mov
out
ljmp
fstl
sub
adc
xchg
push
movl
icebp
lods
and
addr16
sub
inc
lcall
popa
mov
int
int3
je
mov
fcom
fnsave
popa
and
inc
pop
enter
loop
lock
jb
mov
cmpsl
sarl
cmp
inc
stos
ds
dec
jne
adc
nop
test
adc
daa
cmc
addb
in
cwtl
mov
sbb
push
movsl
lret
jbe
mov
fwait
cli
sub
adc
xchg
es
mov
out
xchg
cwtl
mov
adcl
out
jno
inc
lret
gs
ret
mov
cmp
outsb
or
xor
pop
mov
outsb
mov
shrl
in
push
lea
sub
xchg
pusha
xor
nop
xchg
lds
ret
inc
xchg
jmp
aas
push
leave
stos
sub
xchg
push
sub
jae
mov
mov
scas
call
fst
push
adc
adc
fldt
cmpb
mov
jnp
mov
rclb
outsl
pop
aaa
or
je
dec
mov
xor
push
xchg
mov
mov
cmpsl
cmp
shl
out
and
ret
fcomps
out
mov
insl
in
xlat
push
cltd
sub
mov
cs
jecxz
cmp
je
in
or
loope
pop
lods
mov
inc
xchg
orl
mov
setne
dec
jl
mov
push
lock
mov
push
movsb
mov
subl
andb
imul
xchg
add
gs
movsb
pushl
loopne
sub
pop
outsb
mov
sahf
or
rolb
or
iret
jle
adc
xor
popa
lahf
push
jp
outsl
jns
outsl
pop
cld
pop
xor
xor
xor
cmpb
mov
sbb
clc
or
add
and
addr16
out
outsl
fadd
mov
jo
cli
fildl
xor
cltd
stos
clc
or
shlb
jecxz
sahf
lcall
scas
mov
and
and
cmp
mov
pop
add
xchg
fdivrl
roll
push
jle
inc
xchg
dec
scas
scas
lds
dec
jo
int3
fcoms
loopne
pusha
int3
sub
mov
cmp
and
push
ss
mov
pop
inc
shl
sbb
cmp
lret
cmpsl
stos
and
out
aam
call
push
mov
test
out
fs
pop
mov
rcrl
ds
sahf
mov
xlat
shll
fwait
popf
outsb
pop
fistps
mov
jge
or
das
xchg
push
sub
pop
push
xchg
leave
or
pop
mov
inc
lret
test
mov
dec
cmp
xor
das
stos
pusha
sbb
je
mul
loopne
add
cmc
ljmp
test
rol
lret
add
jo
adc
std
mov
imul
xor
imul
adc
and
out
jmp
icebp
and
ds
arpl
out
inc
stos
lods
pop
sub
in
sbb
add
fadds
ret
mov
sub
jp
fimuls
nop
adcb
nop
adc
dec
push
inc
mov
xor
or
in
adc
lahf
mov
dec
ret
push
xchg
push
lret
or
aas
js
aam
fistps
idivl
xor
jnp
ds
and
ror
dec
mov
pop
lods
xchg
dec
adc
jmp
xlat
or
add
inc
mov
cmp
js
pop
ljmp
cmp
xor
pop
jg
adc
and
les
add
ret
mov
lock
xchg
jnp
sub
call
sbb
int3
add
cmp
rsqrtps
outsb
inc
adc
mov
iret
inc
daa
ljmp
jbe
outsl
cmpsb
subb
call
shrl
cmp
sbb
push
xchg
cmp
dec
jnp
rorl
je
dec
jnp
jp
mov
and
rcl
sub
xor
adc
jae
mov
out
mov
dec
jo
addr16
and
pop
in
or
dec
cmp
insl
test
insb
pop
jnp
mov
ss
or
mov
add
or
sub
cmp
into
lcall
or
enter
mov
sub
sbbl
ds
and
repnz
dec
js
out
pushf
rcr
push
adcb
jns
lret
gs
out
jl
stos
es
adc
addr16
fwait
orl
sti
lds
ficoml
dec
xlat
and
int
sahf
lock
push
mov
pop
add
sbb
in
outsl
push
sub
xchg
jmp
das
push
out
sbb
cld
xchg
add
pop
pushf
pop
sub
mov
xor
adc
pushw
dec
lret
xchg
dec
data16
pushf
adc
push
mov
insb
lret
pop
fisttpll
pop
loope
jl
call
ret
fcomps
add
adc
jbe
adc
shlb
incl
aaa
pop
scas
add
daa
jne
out
movaps
jo
mov
fidivl
out
mov
dec
loopne
add
repz
push
jne
lea
hlt
mov
add
and
rorl
negl
iret
pop
icebp
fs
pop
or
sub
hlt
or
xchg
popa
pop
lret
push
iret
mov
repnz
xor
and
jno
lds
jg
mov
or
outsl
cmp
lea
das
adcb
imul
mov
push
or
push
test
xchg
aam
mov
xchg
push
sub
or
jae
cwtl
cmp
test
js
jo
jns
xlat
and
in
cmp
clc
test
sbbb
aas
iret
dec
movsb
aas
fidivrl
mov
and
out
pop
dec
or
mov
outsb
lods
xor
jge
in
imul
loope
test
in
and
mov
ds
ss
mov
cmp
pop
add
jo
push
ds
andb
out
add
mov
hlt
or
xor
sub
ja
xchg
int3
jge
jge
xor
es
xor
out
subb
rcrl
sbb
jg
mov
test
fs
or
pop
dec
mov
shrl
mov
pop
arpl
push
cmpsl
dec
xchg
scas
add
sbb
pop
sbbl
add
stos
fcomps
shlb
jnp
or
push
mov
je
lahf
jne
lds
adc
xor
push
fcomip
mov
add
pop
mov
sub
js
out
movsb
loop
or
sbb
or
xchg
xchg
sub
and
sub
inc
and
jae
je
or
enter
or
jbe
addr16
xchg
xchg
mov
pop
sbb
mov
cmc
lcall
loope
xchg
sub
pusha
cmp
imul
aas
aad
mov
and
negb
cmp
inc
sub
clc
inc
int3
fs
pop
in
data16
pop
cmp
or
ss
mov
cmpsl
fcompl
inc
sbb
inc
arpl
fimuls
rcll
or
popf
adc
inc
call
lret
push
fiadds
jecxz
jl
fcmovne
test
or
aaa
sub
fisubrs
or
rorl
mov
ja
idiv
xor
dec
or
outsb
int3
imul
lods
sub
call
stc
out
lahf
loopne
adc
orl
cmc
loop
movsl
inc
aas
mov
cmpsl
sti
jg
mov
mov
aas
pop
inc
xchg
pmaxsw
sti
call
outsb
xchg
mov
xor
stos
inc
fs
loopne
inc
cltd
incl
leave
fwait
into
xchg
rcll
add
mov
fwait
mov
movsl
mov
in
outsl
jae
xchg
pop
in
test
popl
test
loop
push
aad
fs
fidivs
adc
loope
std
push
inc
and
xchg
shl
add
jl
xor
or
dec
mov
ret
sbb
ss
sub
sahf
push
xchg
mov
mov
mov
xchg
out
int3
lods
or
orb
mov
sbb
cli
test
inc
cmp
stc
mov
out
cs
cs
insl
clc
and
or
mov
arpl
dec
cmp
ljmp
mov
dec
popf
inc
out
mov
jge
popa
stos
inc
inc
daa
jle
jmp
xchg
pop
daa
pusha
xor
enter
ljmp
dec
mov
xor
sub
add
cmp
inc
inc
adc
insb
std
pusha
push
stc
dec
daa
push
xchg
mov
enter
mov
mov
inc
xor
sbb
mov
pop
adc
pusha
int
sbb
addb
push
cld
xchg
pop
cmp
sarb
cwtl
nop
pop
test
mov
push
inc
loopne
fidivrs
jb
or
aas
icebp
add
pusha
dec
rcll
push
push
add
test
mov
data16
pop
inc
shl
pop
sbb
popf
sub
mov
pop
test
sub
adc
jne
jae
jbe
js
ss
es
cmp
cmp
out
mov
push
pushf
mov
test
inc
jmp
mov
notl
push
movsl
inc
into
pop
jge
xchg
mov
cmpsb
pop
or
adc
mov
xchg
mov
dec
ss
inc
adc
sbb
sub
vpavgb
pop
icebp
sub
les
xchg
or
mov
mov
lods
push
mov
in
imull
pop
and
push
cmp
inc
scas
inc
xchg
stc
scas
xor
bound
loope
nop
out
push
pop
aaa
pop
pop
pop
je
fwait
dec
test
pop
sub
repnz
imul
adc
inc
in
jne
or
ja
popf
sub
mov
nop
add
jecxz
aaa
shlb
or
aam
push
lret
stos
push
scas
pop
leave
imul
data16
mov
outsl
xlat
xor
ljmp
addr16
fwait
imul
add
addb
pushf
jge
jnp
adc
jl
mov
in
sarb
rorb
dec
dec
push
push
xchg
addl
rorl
inc
imul
jae
mov
imul
mov
mov
scas
int
movsl
mov
dec
mov
push
popf
push
push
std
add
pushf
push
aaa
shlb
mov
aas
out
sub
je
cmpsl
xor
test
outsb
ror
sbb
add
jae
out
jmp
cmc
cmp
lods
and
inc
out
or
cli
pop
sbb
add
out
push
sub
ljmp
bound
jno
sub
push
testb
ret
fstpt
pop
dec
jecxz
pusha
push
jecxz
aad
gs
jge
leave
dec
add
aad
pushf
sti
inc
or
hlt
xor
mov
sub
push
sarl
cmp
dec
mov
sbb
aaa
cwtl
mov
mov
shl
dec
rcr
scas
sbb
js
cmc
enter
adc
sbb
iret
das
mov
mull
or
mov
jns
test
nop
insl
and
cld
add
push
and
mov
pop
nop
dec
adc
shrb
es
cmpsl
xor
pop
cmp
ja
push
shrb
mov
lret
test
fistps
test
xchg
shll
xchg
adcl
pop
adc
negb
or
pminub
lods
test
add
loopne
or
scas
adc
popa
mov
mov
xor
rolb
cmpsb
cmp
mov
cltd
fnsave
clc
mov
cmp
pop
mov
std
ror
sbb
jbe
andl
shlb
inc
dec
ret
in
sub
adc
sub
mov
int
push
pop
loope
fnstsw
mov
pop
and
cmpsb
mov
xor
or
adc
jge
sbb
sbb
test
addr16
sbbb
push
rclb
testl
mov
pop
test
pop
mov
push
lods
push
sub
out
stos
xchg
lds
pop
inc
mov
or
and
loop
mov
jl
adc
xor
iret
gs
cmp
jae
int3
fcomi
movsl
sub
pop
cwtl
cmp
mov
and
imul
dec
les
mov
insb
fwait
mov
subl
mov
shlb
sub
daa
movsb
push
sar
ret
cmc
into
push
lahf
repz
arpl
xchg
fwait
xlat
aaa
in
scas
and
xchg
ds
loopne
jo
pushl
outsb
std
lods
stos
fisubrl
add
stc
push
push
adc
popf
aad
lea
pop
repz
add
jle
in
cmp
insb
or
inc
pop
inc
in
loop
fistpll
jb
sbb
push
cmpl
push
sbb
lret
ja
sahf
adc
mov
stos
pushf
jl
jg
enter
add
mov
es
sbb
sbb
shlb
or
gs
test
leave
adc
hlt
pop
jns
push
ss
push
mov
and
sub
rorl
mov
add
mov
stos
jecxz
sbb
sbb
cmc
or
mov
inc
lcall
add
jl
pop
lret
mov
mov
add
test
out
repz
cltd
mov
imul
fidivl
and
xor
sbb
pop
xchg
popf
or
imul
std
aad
xchg
pop
mov
or
aas
int
and
pop
outsl
adc
mov
pop
int
sbb
andb
lds
aas
popf
lds
scas
pop
bound
dec
out
repz
ret
jns
cmp
cmc
xchg
cmp
clc
out
loop
shll
shr
mov
xchg
mov
push
js
xchg
xchg
pop
jns
loopne
push
or
shlb
push
lock
imul
mov
or
cmp
outsl
mov
sahf
push
mov
mov
cmp
jb
fwait
repz
es
push
stc
lret
dec
cmovs
loope
lret
sbb
test
cs
outsb
jecxz
xchg
mov
ja
aas
mov
cld
popa
cmpsl
scas
and
xchg
sarl
in
sbb
mov
or
cwtl
movsl
jmp
fsubrl
out
adc
add
mov
cmpsl
lret
ret
daa
sbb
out
mov
sbb
fucomip
repnz
jmp
lcall
sub
nop
mov
pop
cmp
pop
pop
leave
movswl
sbb
jge
mov
inc
cli
fwait
cmpsl
push
push
add
mov
test
push
sub
icebp
test
data16
sbb
mov
add
mov
ficomps
outsb
insb
repz
pop
ds
jns
mov
jecxz
flds
mov
cmp
fs
cld
jmp
add
les
rolb
jns
sub
loop
rcl
jmp
lret
adc
mov
fisubrl
aas
test
ljmp
sbb
into
je
call
insb
or
fnsave
cwtl
test
pop
aad
fisttps
xor
push
scas
mov
imull
xchg
pusha
out
insb
push
push
add
inc
insb
or
jecxz
orb
jns
or
call
and
mov
jge
mov
addl
int
mov
or
popf
mov
jp,pt
cwtl
mov
outsl
inc
jno
ja
sbb
jno
xchg
inc
data16
sbb
pop
movsb
ficoml
insb
mov
mov
cmp
adc
push
pop
cmp
test
ror
mov
mov
int3
gs
mov
xor
jg,pn
mov
lret
add
cli
in
mov
fwait
dec
addr16
ret
fwait
ja
jp
mov
mov
mov
mov
das
push
or
clc
fucomip
leave
iret
lret
or
ds
les
jle
negb
rcrb
or
pop
cmpsb
pop
imulb
push
sub
jge
gs
pop
mov
insl
jns
adcl
lea
pop
inc
sbb
roll
ljmp
test
push
cmp
aam
add
std
push
inc
int3
xchg
inc
xor
sub
fistps
jno
adc
leave
push
outsl
cltd
and
mov
and
mov
fldenv
gs
inc
xor
add
xor
inc
rclb
or
jmp
ds
in
xchg
into
hlt
pusha
or
and
bound
mov
test
jmp
cld
mov
leave
jp
inc
std
jge
push
push
daa
inc
icebp
mov
shrl
dec
sub
pop
mov
dec
xchg
or
sub
or
sub
ret
ret
adc
paddusb
scas
mov
outsl
cltd
xchg
xchg
jbe
inc
add
pop
xchg
jp
mov
dec
or
roll
fs
push
popa
fcoms
out
or
das
mov
sti
lds
daa
xchg
stos
addr16
scas
popf
xchg
and
fwait
out
lods
ja
mov
inc
xor
xlat
fimuls
inc
nop
push
shrb
pop
std
inc
lock
and
add
loop
pop
and
shlb
xor
sti
dec
mov
inc
push
mov
jbe
fisubs
push
mov
mov
popf
cmp
mov
aad
sbb
add
adc
aam
xor
ret
cltd
mul
inc
push
pop
lods
dec
mov
cs
call
xchg
sbb
cmp
mov
jne
push
mov
les
xchg
adc
ss
mov
push
xchg
or
imul
or
cmpb
jb
js
mov
std
icebp
call
pop
jle
movsl
xchg
mov
and
fldenv
add
cmp
push
mov
sub
jmp
push
adc
fldl
xlat
aaa
addr16
repz
inc
sub
push
ds
or
xor
sub
jl
lret
pop
cwtl
scas
xchg
int
andl
sub
xor
add
xor
sbb
sti
sub
push
push
add
scas
imul
xchg
sahf
loopne
rorb
add
mov
xor
pop
sbb
fs
loopne
pop
cmp
ja
sbb
add
adc
mov
ljmp
mov
negl
push
sub
fwait
les
stos
xor
in
insl
sub
push
testl
cli
add
dec
adc
test
mov
and
adc
ret
jl
dec
or
mov
sarb
add
or
push
dec
dec
jecxz
mov
movsl
mov
push
or
sub
iret
popa
push
cmpsl
or
ljmp
adc
daa
out
pushf
and
cmpsb
cmp
sub
lahf
pop
mov
lods
add
cmp
add
mov
push
adc
mov
scas
nop
jecxz
or
loope
jg
lret
push
out
dec
das
push
xor
nop
into
sbb
cli
inc
xchg
loope
pushf
push
push
xchg
push
mov
ja
mov
jae
sti
rclb
lea
insb
sti
mov
rcrb
inc
pop
xor
cwtl
jbe
mov
xchg
ja
and
push
push
mov
out
sarb
jge
push
xchg
pop
cmp
cmp
xor
push
leave
dec
jg
data16
shlb
xor
mov
mov
fnstenv
xor
imul
push
adc
lds
ds
sub
mov
mov
nop
int3
push
adc
push
xor
pop
cmp
daa
xchg
xchg
pop
and
mov
push
aad
inc
jns
into
pop
cmp
jbe
pop
mov
adc
movsl
js
lock
inc
dec
in
xchg
sti
push
sbb
insb
sub
add
les
sahf
in
cmpsb
out
fisubrs
mov
sbb
mov
in
mov
data16
pop
lods
mov
mov
mov
mov
test
shrb
mov
insb
aaa
sub
mov
lahf
xchg
rcrl
int
add
xchg
xchg
ljmp
or
inc
movsl
mov
das
jecxz
sbb
hlt
movsl
lods
pushw
cmpsb
mov
add
pushf
fadds
mov
faddl
cwtl
das
mov
mov
call
pop
cli
mov
mov
inc
in
sub
pusha
or
inc
pop
hlt
ret
dec
dec
xchg
mov
inc
mov
and
push
dec
inc
es
or
adc
xor
pop
and
leave
xchg
dec
int3
and
lock
or
fiadds
add
add
fadds
fcoms
xor
pop
daa
clc
bnd
or
add
cmp
adc
adc
in
mov
dec
rcll
cmc
cmc
xchg
xchg
sub
or
cmc
cli
test
and
dec
out
mov
xchg
push
and
push
pushf
xchg
outsl
test
or
cmp
fsubrl
lret
inc
iret
fmulp
fbstp
cmp
icebp
mov
add
mov
mov
cmp
movsb
xor
icebp
push
mov
mov
cmpsb
jnp
insl
xchg
fwait
xor
mov
sbb
scas
repz
add
mov
call
outsb
mov
mov
arpl
fisubs
loopne
insb
mov
adc
jecxz
movsb
aas
imul
add
jne
jno
mov
negl
mov
loopne
insl
scas
mov
pop
cmc
cmp
push
lods
fldcw
inc
jmp
mov
out
stc
cmp
xchg
adc
sbb
adc
and
in
incb
mov
aam
lret
adc
lea
scas
push
rclb
mov
and
xchg
jno
jecxz
into
xchg
push
inc
cltd
test
call
out
push
sti
and
xchg
jns
filds
cmpsl
lds
cmp
mov
sub
stos
mov
sub
xchg
lods
mov
sahf
fidivs
stos
add
add
xor
cld
pop
push
idiv
sarl
test
lods
xchg
aad
movsb
sub
lret
push
jmp
repnz
pop
mov
sbb
cmpsb
rclb
jg
jb
xchg
lret
ds
in
mov
mov
xchg
mov
iret
fmull
popa
adc
cmp
jb
sub
dec
test
pop
stos
push
aaa
int
sti
mov
repz
push
bound
ret
in
add
pop
sahf
xor
mov
jnp
or
push
push
jg
jb
pop
jl
je
lcall
xor
out
faddl
pushl
lods
push
sub
cwtl
dec
and
lret
and
es
insb
mov
aas
push
leave
push
push
cwtl
ljmp
and
ljmp
push
mov
scas
aad
and
and
fisttpl
bound
jl
jl
jnp
icebp
cld
add
mov
jns
shlb
and
mov
das
add
les
sub
xchg
cmpsb
add
lcall
fs
sbb
fcom
sbb
ja
lcall
leave
or
cld
inc
mov
imul
adc
enter
dec
loopne
cmp
movl
pop
pop
lock
in
cmpsb
ss
cmp
or
inc
xchg
and
jno
jmp
inc
ja
mov
out
stos
pop
test
dec
jb
cli
bnd
packuswb
sub
inc
sub
xchg
jg
loope
cltd
nop
and
sbb
add
inc
or
inc
mov
mov
adc
push
rol
adc
scas
add
andl
add
sub
pop
inc
mov
push
enter
jb
jg
fwait
call
sbb
popf
rclb
cmp
or
mov
insb
loopne
sbb
and
cmp
cmp
or
fcomps
sbb
inc
cmpsl
dec
dec
in
pop
sbb
mov
fisubrs
in
xchg
pop
pop
repnz
and
ljmp
mov
adc
mov
push
or
cmc
pushf
pop
mov
arpl
mov
push
jmp
push
jp
sti
rorb
and
jg
rclb
stos
and
and
jbe
gs
fdivrp
xor
insl
into
cld
and
lahf
dec
jns
mov
mov
adc
mov
inc
mov
and
xor
ficompl
sub
mov
popa
or
add
aam
fs
jl
fadds
xchg
adc
xor
mov
lods
scas
mov
popf
pop
add
ficoms
aad
cltd
sbb
ljmp
lea
test
fcoms
fstl
xor
push
loop
ret
sub
iret
mov
sbb
adc
xchg
sub
loop
out
movb
loope
insb
dec
mov
sub
inc
jmp
mov
push
lds
jle
nop
shrb
mov
cmp
pop
xlat
std
mov
pushf
push
pusha
jne
mov
fsubl
loope
pop
fcoml
mov
jle
mov
andb
mov
add
fisubrs
fbld
rcr
outsl
mov
xchg
ss
jl
mov
lds
mov
pop
rcll
xor
push
mov
daa
out
cmpsb
dec
pop
adc
inc
icebp
ss
jmp
xchg
mov
rolb
shlb
sti
loopne
cmc
data16
mov
inc
dec
or
xorl
leave
and
and
push
sub
in
push
iret
sub
mov
nop
sub
aad
stos
jae
les
sahf
add
and
sahf
mov
xor
dec
lods
fwait
push
sahf
cmp
fistl
aad
inc
loopne
dec
dec
dec
cmpsb
xor
mov
stos
or
pop
ds
cmp
and
ret
sbb
sbb
xchg
lock
push
jbe
xor
xchg
push
push
stos
inc
iret
aam
arpl
into
mov
mov
fildl
mov
mov
push
in
popa
mov
fs
bound
cmp
lods
rol
fs
cli
adc
orb
cmp
dec
bound
out
pushf
jmp
xchg
aas
add
sub
pop
aaa
stos
pusha
cmp
mov
js
xchg
int3
mov
movsl
ljmp
adc
inc
sti
mov
cmpsb
sbb
in
cld
sbb
jbe
shl
stos
int
insb
mov
clc
je
pop
decb
mov
push
sbb
fidivl
add
sub
mov
mov
mov
insb
and
sub
insb
or
xor
mov
jno
mov
push
push
xlat
xor
lods
in
or
in
stc
add
enter
ljmp
sti
test
sbb
out
sub
push
or
stos
inc
mov
sti
push
sbb
bound
test
pop
imul
sti
lds
arpl
loope
notb
pop
dec
adc
xor
fstpt
orl
mov
sar
popf
and
xor
testb
arpl
jmp
int
pop
jns
into
shlb
scas
icebp
gs
sahf
and
fs
jnp
cmp
push
enter
adc
jo
ss
jne
js
insl
jmp
or
mov
lahf
jg
mov
or
dec
xor
loop
arpl
push
mov
mov
fs
jmp
mov
inc
popa
mov
ja
std
mov
sbb
push
data16
cmp
inc
ret
add
inc
xchg
out
adc
push
fsubrp
frstpm(287
mov
out
cmp
cli
test
xchg
pushf
add
mov
mov
dec
inc
mov
out
pcmpgtd
mov
jae
add
inc
dec
xchg
or
mov
mov
inc
pop
inc
and
mov
popf
lcall
dec
mov
imul
cmp
sti
mov
sahf
xchg
leave
add
lea
stc
ror
add
jg
rcrb
cvtps2pi
mov
fstpl
aad
daa
pop
pop
xchg
inc
cmpsl
push
pop
or
popa
xor
jb
jmp
mov
sub
cmp
mov
pop
jbe
aam
rcrb
js
cmpsl
xor
jb
in
mov
lock
movsl
cmp
add
or
bound
fmul
sti
push
dec
popf
stos
sub
push
pop
popa
out
mov
pop
adc
mov
setnp
rcl
mov
les
xor
sbb
sbb
lahf
and
xor
mov
in
inc
sahf
and
std
jp
dec
xchg
lret
jge
scas
ret
add
mov
enter
push
shlb
mov
jns
mov
jl
test
and
repnz
mov
pop
add
mov
repz
xor
fsubl
ljmp
bound
jne
mov
push
fdivrl
mov
sbb
lods
outsb
movsl
dec
loopne
mov
iret
add
mov
dec
or
ret
out
lds
push
stos
push
pop
addr16
mov
dec
out
out
xor
imul
out
cmp
flds
fldenv
stc
fwait
or
jge
ss
insl
and
ret
clc
mov
movsl
mov
hlt
pop
jl
call
xor
movsl
inc
xchg
cmpsb
in
addr16
and
sub
jl
enter
pop
jge
imul
scas
or
cmpsl
pop
insl
les
test
jl
lcall
inc
les
in
xor
rcr
jns
add
cmp
ss
je
cmp
ja
outsb
add
inc
ljmp
lods
push
or
xchg
push
xchg
jb
je
push
fisttpl
aad
or
push
sub
mov
inc
dec
or
lret
daa
xor
xchg
mov
and
inc
sti
repz
lods
adc
in
mov
fimull
adc
test
pop
jp
icebp
push
lods
addl
aas
mov
repz
movsb
mov
loop
dec
or
dec
xor
pop
decb
das
mov
out
sbb
outsb
jbe
shl
daa
dec
les
push
lods
lret
cld
push
mov
cwtl
jno
adc
xlat
add
push
fsubrs
pop
and
lds
xor
out
sub
jbe
cwtl
dec
pop
ljmp
in
movsb
lcall
aaa
ds
cs
lret
enter
sub
sbb
mov
shrb
cmpsb
jmp
push
lods
sbb
aas
add
bnd
lods
add
jmp
lods
xor
jmp
adc
lds
mov
inc
iret
iret
pop
inc
adc
inc
lcall
xchg
mov
scas
cltd
or
pop
into
xor
inc
je
sarb
pop
adc
fistps
in
cmpsl
cmc
out
jl
fsubrl
lods
pop
adc
jbe
sbb
movsl
dec
daa
test
inc
xor
or
rcrb
popa
cmp
out
adc
insb
jno
orl
and
sbb
jl
test
hlt
insb
jmp
stos
or
adcl
orl
pop
jnp
push
out
mov
mov
sub
mov
in
xchg
mov
mov
inc
adc
arpl
int3
inc
xchg
in
imul
xorl
negl
aad
popf
or
jge
jae
pushf
jbe
fldl
mov
shrl
xchg
mov
aaa
adc
mov
cmp
lock
or
mov
loopne
or
xor
bound
add
pop
xchg
pop
pushf
cmp
je
das
ret
pop
ret
mov
sbb
inc
loop
mov
imul
push
push
push
scas
popf
jge
rorl
mov
jns
push
lock
push
xor
movsl
xor
ja
pop
adc
inc
pushf
popa
gs
cmp
dec
push
movl
imul
pop
fstpt
mov
lret
mov
sbbb
dec
cmc
movsl
shll
xor
rorl
cmp
dec
out
push
leave
test
sbb
mov
jg
push
les
ljmp
loopne
movsb
pop
andb
fldl
pushf
shll
xor
stos
pop
push
xor
pop
scas
add
fwait
ret
mov
adc
sbb
xor
xlat
sbb
pop
pop
clc
mov
mov
arpl
mov
mov
adc
imul
imull
mov
adc
add
lock
cmp
cmp
add
or
mov
mov
pop
sub
or
and
fadd
loopne
call
sbb
mov
in
mov
adc
daa
loope
shll
add
lea
prefetch
jne
jae
pop
mov
jae
fisubrs
ret
gs
xchg
movsl
ror
xchg
sbb
clc
ret
fs
mov
frstor
mov
call
inc
shll
aad
xchg
push
fwait
lock
pop
add
into
call
cmp
xchg
xchg
sbb
inc
and
addr16
add
jge
mov
pusha
cld
xor
bound
andb
scas
add
jbe
arpl
and
cmpsl
shrb
mov
js
ret
outsl
aam
lret
or
sbb
stc
popa
inc
js
sbb
pop
jae
xor
ds
pop
cmp
adc
inc
fwait
addr16
cli
cmpsb
add
test
int
sbb
sub
ljmp
ret
outsb
dec
xchg
shlb
scas
fwait
mov
clc
movsl
push
xlat
cli
scas
subl
cmp
sahf
mov
aas
psubusb
dec
sub
inc
push
in
lds
rcll
je
enter
jno
sbb
xor
pop
aas
imulb
insl
pop
jbe
push
je
adc
pop
xchg
mov
sbb
cld
or
lret
push
lock
mov
pop
pop
pop
out
jge
or
inc
or
jno
mov
fidivrs
sbb
fs
aaa
mov
sbb
iret
mov
testb
jae
lret
add
icebp
sub
jle
pop
out
mov
je
ljmp
js
fnstcw
cmp
pop
js
push
jg
scas
ds
jl
stos
pusha
inc
and
in
bound
imul
add
and
mov
mov
imul
scas
into
pop
add
push
mov
jecxz
push
mov
pop
and
add
pop
test
popa
xchg
hlt
mov
out
or
add
and
test
mov
daa
out
mov
loope
push
lea
cmp
mov
call
insl
inc
push
mov
lret
ja
xor
pushf
cmp
xor
pop
out
jo
sbb
cmp
push
sub
or
scas
mov
xchg
push
dec
fnsave
in
sub
fprem1
dec
inc
xchg
test
cmp
jmp
xchg
mov
jle
aas
mov
pop
scas
jp
lods
pop
imul
add
jnp
mov
pop
cmpsl
stos
lock
xor
jecxz
movsl
fidivs
and
sub
fwait
cwtl
sar
rcrl
push
xor
mov
gs
or
jmp
stos
sarl
add
dec
inc
in
test
and
subb
idivl
shlb
xchg
dec
cmc
lock
scas
jno
data16
mov
or
cmc
lret
mov
cmp
inc
js
in
nop
rcrl
insb
mov
testl
jb
xchg
mov
inc
insb
jbe
repz
push
mov
push
sahf
out
decb
test
inc
ror
xchg
mov
lret
push
fistpll
pop
data16
das
inc
push
add
dec
mov
push
dec
mov
inc
sub
sbb
test
jb
pop
sub
fwait
cld
mov
push
mov
repz
mov
dec
je
xlat
and
es
xchg
cmp
pop
xor
jle
insb
sub
push
mov
xor
sub
inc
out
gs
adc
sbbl
mov
push
jbe
or
xchg
shrl
pop
add
lods
in
push
ret
int3
out
push
pop
mov
xor
adc
cmp
xor
js
adc
sbb
jmp
jmp
push
xor
dec
outsb
add
mov
xchg
mov
add
xlat
fxch
divb
scas
sub
outsb
loop
adc
clc
jmp
and
xchg
push
lock
cltd
sarb
fcmovnu
and
fs
shl
stos
sti
push
jb
loop
in
call
shlb
stc
or
mov
jns
add
mov
or
mov
mov
cmpb
push
jne
pop
jns
push
mov
and
xchg
pop
fldt
pop
test
gs
sbb
orl
add
out
aam
pop
popf
int3
lea
cmpsb
adc
mov
fwait
repz
xchg
mov
stos
pushl
pusha
ds
outsb
mov
insl
and
inc
mov
lea
in
cmp
sbb
mov
push
pop
ljmp
cwtl
and
cmp
or
inc
pop
int3
scas
cmp
cmp
incb
sarl
stos
test
sti
ret
push
sbb
inc
lock
in
outsl
in
sbb
jg
icebp
mov
out
dec
ljmp
test
adc
in
lret
out
loop
mov
sti
clc
outsl
and
popf
push
push
lret
push
mov
xchg
hlt
jns
pushf
xor
cmp
and
xor
cmp
mov
mov
xor
lods
enter
jae
xchg
xchg
push
inc
fs
jo
inc
and
jl
xchg
adc
sub
jbe
scas
mov
fwait
dec
js
insb
iret
cmpl
outsl
mov
orb
arpl
insl
sub
fs
sbb
dec
dec
lods
je
or
loope
stos
inc
jne
add
in
test
mov
jo
and
js
shlb
aaa
sub
mov
cmc
sub
pop
call
aam
mov
fldenv
mov
mov
xchg
mov
or
dec
movsl
gs
fwait
xchg
dec
loopne
pop
dec
or
dec
sarb
pop
sub
push
inc
inc
ds
or
push
push
pusha
push
stc
push
stos
pop
jmp
xchg
sar
mov
pop
ffreep
xor
into
inc
lods
aaa
jmp
sbb
adc
pop
lods
lret
cmpsb
dec
xchg
scas
jbe
testb
scas
mov
adc
hlt
hlt
ret
mov
iret
lahf
mov
out
popa
pop
xchg
pop
cmp
lock
daa
jmp
sbb
mov
xor
adc
stos
and
mov
mov
and
xchg
popf
pop
pop
inc
aaa
in
fstps
iret
jl
mov
sti
stc
cmp
nop
mov
pop
xor
inc
sub
xchg
loope
cltd
jb
push
push
adc
add
add
daa
jl
sar
pop
sarb
out
push
loopne
pop
leave
mov
xor
movb
sbb
pop
jge
out
repz
aas
pop
xchg
into
ljmp
paddw
xor
cmc
cmp
push
and
sub
cld
adc
popf
sbb
dec
stos
mov
mov
jne
je
dec
sti
outsb
mov
cmpsb
xchg
cld
loop
mov
es
or
sub
dec
cs
fldcw
ja
in
jmp
mov
roll
xor
ljmp
in
inc
jg
js
out
adc
ret
stc
jg
out
dec
and
shll
mov
mov
pop
gs
stos
inc
dec
push
jge
sub
adc
adc
xchg
rcr
push
dec
ficoml
jg
out
mov
sub
xchg
filds
lahf
sub
fisubs
lods
cmpxchg
xor
jp
lods
lea
idiv
popa
rcrb
adcb
mov
pop
lret
cmpb
sbb
jg
leave
xchg
loopne
pop
hlt
xchg
jge
mov
out
stc
jbe
inc
scas
insl
xor
and
mov
inc
ja
sahf
sbb
inc
int
add
pop
pop
clc
loopne
mov
fisttpll
cmpsb
xchg
fidivrl
call
cmp
inc
dec
dec
xchg
sub
sub
add
pop
push
ret
vcvtps2pd
xor
shrl
imul
mov
shll
enter
insl
lods
js
mov
mov
dec
cmp
dec
adc
sbbb
ljmp
je
inc
aas
frstor
cli
inc
mov
mov
jno
cld
out
lret
lock
movsl
icebp
inc
cli
inc
cmp
lea
mov
loop
insl
sahf
xlat
jge
icebp
fimuls
xchg
sub
inc
or
push
mov
mov
fstps
lock
push
mov
inc
mov
pop
cmp
cli
lret
push
jmp
push
add
arpl
clc
ja
xlat
pop
push
dec
mov
mov
or
pop
fdiv
jp
insl
rorb
cmpsb
outsb
xchg
inc
push
fcomps
xor
inc
rolb
lods
sahf
and
pop
xrelease
testl
jle
add
enter
mov
xchg
in
lds
mov
clc
sarb
or
jge
and
ret
xchg
in
stos
or
stos
out
or
outsl
push
loopne
pop
jbe
in
repz
pop
in
sub
mov
add
pop
push
enter
inc
jmp
negb
jb
shll
insl
std
mov
ficoml
mov
mov
push
sub
rcrb
adc
xchg
or
pop
test
mov
sahf
pop
inc
push
adc
iret
lock
popl
push
and
jbe
out
inc
and
lea
xchg
insb
daa
ja
inc
inc
sub
lret
pop
mov
adc
outsl
add
scas
ljmp
sbb
sarl
inc
dec
pop
faddp
mov
mov
cmpsl
mov
sub
adc
xchg
xchg
mov
in
xlat
popa
jns
sbb
jg
pop
int
xor
mov
xor
sub
sahf
int
shl
adc
fs
inc
gs
sub
and
lods
test
jmp
adc
subl
outsl
cmp
outsl
out
mov
outsb
daa
loopne
adc
xor
push
imul
scas
pslld
mov
mov
filds
sub
xor
or
push
int3
cmp
leave
add
and
rcll
mov
sub
cmp
xor
mov
sub
mov
sarb
pop
push
cltd
in
std
out
daa
xor
cmp
sub
jg
add
stos
test
cmp
sub
dec
adc
ror
pop
mov
and
mov
cld
jg
cmpsl
repnz
nop
pushf
add
mov
adc
call
jno
cwtl
xchg
in
inc
or
stos
and
pop
aas
daa
sbb
add
outsl
and
scas
jg
jl
or
pop
sbb
in
push
xchg
call
les
xchg
aam
jmp
out
sub
imul
mov
lret
leave
dec
xchg
xchg
mov
mov
out
lods
inc
jp
pop
mov
leave
mov
fcmovnb
loopne
xor
mov
movsb
xchg
add
jbe
insb
dec
cmp
das
adc
sbb
divb
stos
lods
add
orb
sub
pop
adc
test
lea
sub
inc
fwait
push
mov
in
orb
rcl
movsl
scas
adc
fnstsw
sub
es
mov
sub
jle
pop
js
sti
shlb
sahf
sbb
arpl
fwait
rcrb
jo
jge
iret
sub
sbb
dec
or
das
adc
mov
fsub
and
xchg
repz
movsl
in
sub
jbe
xor
push
xor
or
push
shlb
sahf
mov
push
call
lret
pop
mov
mov
insb
sub
inc
jle
lea
ja
testl
mov
mov
cmp
stos
outsb
pop
imul
imul
cli
fidivrl
adc
insb
and
jle
mov
push
bound
dec
scas
fisubrs
arpl
ret
mov
mov
inc
je
iret
int
call
bound
movsb
lcall
jmp
sbb
mov
shrb
jo
add
imul
xor
rorb
lods
mov
or
scas
inc
imul
or
cmp
test
or
cmp
jbe
in
paddq
inc
jmp
ret
mov
out
mov
sbb
jae
lcall
pop
mov
outsb
xchg
jo
mov
pop
xchg
outsb
cmpsl
lcall
adc
test
lods
aaa
in
lds
push
and
mov
mov
daa
push
inc
ret
pop
ljmp
setl
sub
rol
outsl
je
bound
mov
popf
inc
jno
push
cmp
mov
in
std
xchg
bound
lcall
movsl
inc
scas
push
cmc
xor
pop
lret
or
sbb
fidivl
jge
sbbl
test
push
or
jle
out
sub
push
out
add
aam
enter
mov
lods
lea
scas
into
cli
add
je
cmp
lret
into
test
cs
mov
stc
stc
mov
mov
lds
jns
addr16
push
popf
xlat
scas
pop
jecxz
jg
add
shlb
sub
push
rcll
cmc
push
in
mov
add
pushf
and
fnstenv
in
enter
cmp
and
scas
mov
std
dec
pop
mov
dec
dec
pop
adc
and
push
dec
arpl
jg
jne
outsl
sbb
xchg
sub
jae
jg
negb
lock
cltd
loopne
mov
and
cmp
lea
mov
loope
inc
clc
jp
mov
fildl
ds
hlt
and
scas
popa
and
and
cmpl
fimuls
jp
mov
mov
mov
or
mov
fs
mov
imul
pop
dec
push
cmpsb
sbb
pop
mov
ljmp
adc
adc
ret
or
sbb
dec
mov
shll
jae
xchg
enter
xchg
add
mov
cmpsl
ja
in
xor
and
loopne
js
mov
push
push
inc
adc
mov
cmp
xor
and
mov
mov
ja
pop
adc
insb
or
aas
adc
jno
and
adc
push
push
popf
testb
jle
xchg
les
inc
inc
loope
mov
mov
dec
xchg
or
enter
dec
ja
pushf
push
cmp
or
cmp
test
cmpsb
add
pop
sbb
xchg
jmp
out
gs
fisubrs
incb
fdiv
push
sbb
scas
adc
inc
pop
dec
and
test
xchg
inc
insb
popf
sub
ret
les
mov
imul
jmp
mov
sbb
dec
cmpsb
leave
and
test
dec
mov
mov
loopne
adc
in
or
test
push
xchg
jl
xchg
push
sbb
cmc
in
jb
xor
add
je
cmpsl
jb
add
movb
lret
cmp
aas
popa
icebp
test
std
add
mov
lret
cs
loope
loopne
test
and
add
pop
xchg
lea
xchg
or
adc
das
xchg
shlb
gs
or
or
sbb
ljmp
jg
movsb
or
pop
xchg
mov
mov
adc
out
out
jne
fiadds
pop
je
and
dec
mov
or
xchg
mulb
repz
ficompl
cmp
addr16
jge
fstps
sbb
push
jmp
out
xor
and
jb
arpl
inc
or
add
dec
or
adc
cmp
mov
sbb
in
mov
lahf
jo
psubusb
out
inc
aam
mov
push
jns
adc
mov
dec
mov
push
jbe
mov
inc
out
or
es
repz
xchg
push
out
pop
xchg
cmpsl
ret
dec
xor
mov
xor
fadds
std
cli
ret
cmp
imulb
dec
mov
cmpsb
hlt
in
sub
dec
arpl
ljmp
xchg
scas
sub
lcall
stos
bound
push
ss
mov
loop
sbb
jnp
stc
lea
inc
sub
cmp
or
pop
lods
mov
inc
mov
or
sub
inc
push
cmpsb
mov
int
pop
ds
inc
sub
inc
pushl
test
adc
cmpsb
dec
push
mov
mov
cltd
inc
mov
pop
pop
scas
mov
imul
sbb
repnz
fdivrl
xchg
shl
mov
and
jle
and
inc
sub
shr
jl
out
sarb
fdivr
or
pop
sbb
testb
sub
add
call
mov
ret
andb
push
mov
mov
into
cmp
shrl
lea
cmp
dec
mov
int
aam
aas
repnz
adc
fsubs
and
pushf
or
pop
lahf
call
test
pop
jnp
or
cmc
arpl
mov
cmc
decb
sbb
imul
sub
arpl
cmp
adc
mov
arpl
jns
pushf
ss
loop
jl
testb
sti
adcl
insl
push
daa
mov
xor
jae
inc
or
outsb
sub
sarb
aad
cmc
lcall
push
adc
ret
inc
push
cmc
mov
pop
test
jns
loope
xor
insl
cli
sbb
mov
mov
push
les
daa
sbb
int3
mov
sub
jno
lock
out
and
and
cld
mov
lods
push
out
sub
sahf
or
dec
mov
jmp
mov
cli
ret
xchg
movl
fisubl
inc
test
jge
dec
xor
pop
lods
pop
sub
mov
shll
push
push
xchg
shlb
ficomps
and
sbb
lahf
out
int3
inc
mov
push
jge
dec
mov
mov
lods
fldt
xor
stos
iret
dec
adc
int3
popa
cli
pop
ljmp
dec
iret
dec
outsl
mov
or
test
ljmp
int
cld
pop
out
add
jmp
push
xor
cmp
cs
daa
or
aam
cmc
pop
out
cld
int3
xor
mov
xlat
loopne
ss
xchg
mov
fstps
xor
mov
mov
scas
in
cmp
push
inc
movsl
xchg
inc
lcall
pop
push
mov
lea
adc
insl
daa
in
aam
ds
fistps
in
daa
xor
int3
inc
push
pushf
or
xchg
pop
pop
out
adc
mov
popa
xchg
push
xchg
dec
jl
mov
and
add
scas
xor
arpl
xchg
pop
and
insb
xor
add
icebp
out
push
jp
fmuls
fs
inc
jbe
jbe
imul
jae
sbb
call
add
push
cmp
aas
sbb
mov
out
popf
rep
push
inc
aas
loope
add
sub
push
outsl
cli
add
dec
stos
test
in
add
es
or
dec
add
lea
inc
xchg
cmp
pop
out
idivl
pushf
jmp
ficoml
stc
or
scas
pushf
test
scas
cld
fwait
adc
cmp
jbe
cltd
pop
repnz
call
pcmpgtw
jbe
pop
mov
add
rcrl
dec
pop
iret
stc
das
sti
or
subl
imul
jno
push
inc
rcrb
sbb
rcrb
xor
stos
test
push
int3
es
push
or
jo
and
sbb
mov
pushf
fmull
insb
test
insw
sub
mov
stos
sbb
inc
int
add
dec
fs
pop
aad
rclb
cmp
adc
cmpsl
mov
pop
fldl
cmc
cmpsl
pop
out
dec
or
mov
scas
mov
fisttpll
mov
add
popf
pop
ljmp
ds
adc
xchg
testb
fldl
movsl
dec
push
add
pmulhw
aas
scas
fisttpll
incl
pop
aas
shlb
hlt
scas
int
cld
pop
adc
stc
mov
xor
negw
mov
mov
adc
pop
push
outsl
xchg
add
pop
add
xlat
or
or
fstl
dec
addl
cwtl
ss
jae
xchg
jnp
sbb
pusha
xchg
add
pop
loopne
or
and
aad
push
cli
call
pop
mov
es
dec
lret
out
adc
lcall
mov
daa
sub
and
data16
mov
adc
jno
aas
dec
out
dec
fildl
icebp
mov
add
pusha
jb
in
adc
push
sbb
test
inc
jmp
and
or
xchg
int3
out
loope
add
stc
mov
add
daa
sbb
inc
inc
cmpsb
nop
mov
pusha
mov
aaa
xchg
loopne
test
test
push
cmp
inc
mov
adcl
mov
negb
std
push
cmp
std
and
jae
cmp
inc
sahf
sarb
lock
repz
ret
jno
dec
das
out
add
shrb
shl
sbb
sub
add
push
cmp
mov
xchg
dec
mov
dec
pop
inc
pop
test
hlt
sar
push
test
add
jp
fsubrs
jmp
loopne
lods
test
mov
ss
out
xchg
pop
ss
add
xor
fs
icebp
pop
jmp
mov
xchg
cmpsl
cmp
lret
adc
push
pushf
outsl
xor
sbb
xchg
ret
in
in
cld
test
mov
iret
sub
inc
xor
adc
out
jge
push
cmpb
inc
xchg
add
lahf
mov
sub
xchg
lods
sbb
stos
adc
popa
stc
push
xor
mov
imul
adc
inc
gs
jno
or
pop
jnp
loopne
jecxz
stos
movsb
std
andb
fidivl
loop,pt
mov
sbb
dec
add
dec
pop
test
cmc
arpl
jb
je
lcall
mov
push
nop
lahf
and
add
sbb
or
pop
inc
sbb
fstpl
inc
jle
shll
mov
mov
inc
mov
jno
or
icebp
lds
mov
frstor
xor
sub
cwtl
add
leave
sub
push
or
or
jae
loop
cmp
push
ret
xor
jnp
inc
mov
ficompl
mov
mov
out
pop
or
xlat
add
jns
inc
jmp
xor
into
sbb
mov
pushf
sarb
and
or
inc
ds
inc
push
daa
pop
cmpsl
push
sbb
sub
add
push
dec
out
pop
addb
push
mov
adc
fstps
cmp
pop
repz
pop
outsb
sbb
mov
pop
add
and
subb
and
movsb
jno
lahf
add
pop
adc
add
sahf
fsub
nop
xlat
sub
dec
and
pop
out
mov
pop
add
cli
data16
sbb
mov
mov
insl
orl
jle
int
test
call
push
decb
sbb
add
push
in
xchg
inc
in
data16
push
or
mov
out
hlt
or
mov
scas
pusha
outsb
or
data16
xor
cmpsl
lods
jecxz
xchg
fadd
adc
mov
cmpsb
negb
push
pop
adc
push
xchg
out
out
aam
std
mov
sbb
and
push
fisubrl
mov
insl
icebp
mov
mov
dec
mov
es
jne
movsl
sbb
mov
xchg
jns
jmp
int
out
inc
inc
dec
jbe
push
das
jno
pop
movups
pop
push
je
mov
fdivrp
inc
pop
and
add
cld
dec
shll
imul
std
and
mov
dec
or
test
mov
mov
xor
fiadds
mov
fisubrs
adc
mov
and
mov
jecxz
sbb
adc
aad
mov
jmp
pop
jbe
add
mov
imul
mov
adc
jg,pn
pop
push
sub
adc
clc
fadd
cli
lahf
jmp
fs
mov
push
popa
mov
mov
nop
popa
sbb
sbb
mov
pop
fnsetpm(287
mov
jo
imul
push
xor
xchg
add
in
pop
out
sub
repz
mov
stc
push
cwtl
imul
dec
fdivs
cmp
ljmp
and
lret
stos
pop
std
dec
call
in
fisubl
push
jecxz
mov
ret
enter
xor
mov
xchg
js
jne
adc
aad
fimuls
xchg
mov
fistl
fistps
jle
cwtl
sbb
jle
aaa
sub
push
arpl
push
dec
mov
dec
sbb
loopne
cmp
jbe
jmp
ds
add
fimull
mov
xor
aad
mov
divb
hlt
mov
inc
insb
gs
jecxz
call
das
rcl
sar
xchg
mov
fmulp
inc
fldt
inc
push
push
pop
jae
mov
or
push
xchg
outsb
cmp
rcl
bound
sbb
aaa
xchg
fidivs
pop
aam
xchg
xlat
cmp
cmc
jo
aas
adc
push
cmp
push
inc
and
mov
test
cld
mov
and
in
xchg
ds
push
add
rcr
cmc
mov
lea
add
xchg
lock
sub
mov
or
and
xchg
clc
xchg
dec
lcall
stos
xchg
jmp
dec
lea
mov
ret
loop
mov
aaa
movsb
inc
xchg
test
fcmovb
std
out
insl
js
lock
xlat
aad
and
push
les
or
sub
in
pop
cmp
out
lahf
in
push
mov
sbb
adc
adc
rclb
sub
xchg
cmp
pop
shrl
test
rolb
add
sub
mov
icebp
xor
in
out
dec
mov
sbb
sub
mov
dec
daa
aam
jge
lods
test
add
insl
xor
frstor
pop
adc
daa
insb
vpminsw
mov
out
nop
adc
popa
mov
or
lds
cwtl
out
or
enter
mov
cs
mov
push
xor
mov
mov
pop
popa
hlt
push
mov
arpl
sti
push
add
stos
mov
hlt
add
idivb
adc
sbb
inc
sahf
or
aad
mov
call
xor
icebp
cmpb
cmpsl
xor
rorb
out
and
outsb
xor
adc
inc
adc
pop
mov
mov
mov
jmp
cmpsl
movsl
xchg
mov
push
sarb
dec
scas
cs
lret
lret
mov
ljmp
or
and
cmp
movsl
sbb
adc
and
jno
shll
push
cltd
stc
jno
add
loope
fidivrl
xchg
das
call
insl
push
inc
pop
push
cs
mov
mov
ja
scas
icebp
jge
test
roll
arpl
inc
mov
and
inc
pop
test
adcb
xchg
and
lahf
aam
inc
fidivrs
xor
cmp
outsb
imul
outsb
mov
mov
shll
es
imul
adc
xlat
int3
out
and
fimull
or
leave
pop
jbe
jae
repz
lods
sub
xchg
les
xor
add
ret
pushf
xor
cmovg
cmp
sub
sbb
sahf
pminsw
nop
inc
in
into
out
mov
roll
dec
out
sub
iret
subl
pop
jo
movsl
jo
mov
add
jl
push
je
repnz
push
push
mov
sbb
xchg
mov
jb
outsl
adc
xor
fdivrs
pop
cmc
mov
pop
into
scas
loope
pop
xor
shrl
and
out
movsl
out
ror
push
aam
popl
sub
jnp
push
fmuls
lahf
mov
and
jbe
movsl
adc
rol
pop
bound
mov
lods
push
inc
dec
js
add
add
cmpsl
stos
jnp
inc
mov
pop
jg
pop
stos
out
xor
sub
sbb
mov
aad
sbb
mov
data16
push
cmpsb
out
repnz
loope
xor
push
xor
mov
out
jecxz
ja
add
in
or
imul
addb
pop
lret
fimuls
push
jge
jecxz
lea
inc
push
or
movsl
push
sub
pop
enter
or
movsb
lods
es
stos
imul
sbbb
cmc
rclb
push
jo
lock
push
cmp
pop
xchg
dec
ja
jg
or
mov
cmp
das
mov
test
jmp
xor
and
jmp
push
inc
xor
in
shr
lea
fcmovnbe
dec
loopne
imul
sbb
je,pt
mov
fmuls
xor
push
leave
insl
rcll
cmp
nop
mov
fisubrl
pop
jnp
in
sub
insl
pop
xchg
dec
cld
jmp
jp
jmp
push
ficompl
es
jl
repnz
out
mov
stos
push
mov
or
pop
add
hlt
mov
int
mov
cmp
or
cmp
mov
test
sarl
xor
and
enter
shll
mov
bnd
out
movsb
mov
cmc
test
lock
out
cmpsb
cmpsb
jbe
mov
sahf
inc
inc
and
xor
jge
mov
insb
mov
mov
add
dec
push
flds
scas
sub
mov
mov
sbb
lret
aad
fwait
repz
stos
scas
and
adc
cmp
dec
adcl
arpl
mulb
pop
mov
sbb
xchg
incl
mov
push
jns
lds
cltd
jle
jmp
jb
push
cli
icebp
jg
push
and
or
cltd
pop
js
insl
jb
mov
cmp
push
ret
daa
mov
int3
jae
decb
jae
pop
or
addr16
fnstcw
and
scas
mov
dec
push
imul
bound
les
adc
ret
dec
dec
lret
es
rorl
mov
mov
js
push
sbb
sar
out
lcall
in
fcmovbe
xor
inc
cli
jp
mov
cmc
push
xlat
mov
or
jae
mov
jmp
int
cltd
pop
inc
xchg
pop
incb
out
xchg
lret
shll
fiadds
adc
aas
lcall
and
jmp
jmp
ja
jle
lea
test
mov
or
dec
and
and
dec
test
xchg
push
and
cmp
mov
mov
cmp
scas
mov
das
arpl
sub
mov
dec
pop
mov
adc
mov
adc
loope
enter
inc
pop
cmpsb
jne
lret
shlb
sbb
inc
hlt
ljmp
repz
mov
aam
xchg
icebp
enter
inc
push
daa
leave
cmc
mov
and
lds
dec
pop
push
adc
xchg
xchg
pushf
repz
outsl
and
std
gs
pop
cmpsb
xlat
pop
cli
mov
mov
xor
pop
rcr
push
cmp
push
xor
jno
stos
jmp
sbb
mov
fucom
icebp
sbb
test
pop
sbb
add
mov
push
clc
push
rol
cmp
mov
mov
sbbb
mov
leave
loopne
push
dec
test
sbb
call
popa
push
or
test
jno
xchg
jl
gs
dec
sbb
xchg
out
sbb
mov
stos
jg
inc
sti
lret
sbb
sbb
jnp
push
or
outsl
pop
inc
aas
cmp
and
dec
pop
mov
icebp
in
adc
or
lcall
sub
das
jae
fiadds
adcl
sub
dec
inc
mov
scas
xor
xor
and
xchg
rcrl
jo
xor
loopne
aas
leave
gs
sbb
mov
cltd
out
dec
clc
cld
in
jo
fadds
inc
push
test
test
lds
cmp
cmpsb
int
push
xchg
adc
rolb
push
test
ss
sbb
pop
inc
sbb
pop
call
js
stos
sti
leave
call
stc
out
or
mov
xor
jg
pop
add
dec
jl
jge
out
sub
jne
pop
push
xchg
or
xor
popf
jb
pop
out
cwtl
push
sub
jnp
lcall
jl
xchg
cmc
mov
iret
in
insl
inc
mov
enter
imulb
dec
repnz
xor
jge
pop
cmp
pushf
fisttpl
outsl
cvtps2pd
cmpsb
mov
mov
repz
call
lahf
aaa
jno
lock
mov
mov
pop
push
push
fsubs
xchg
adc
sti
sbb
sbb
inc
inc
lahf
lret
jmp
jecxz
cmp
or
ds
cmp
ss
adc
xorb
lea
rcll
sbb
loop
mov
push
pop
inc
ficomps
lods
shrb
pop
mov
sub
sahf
push
sub
aad
and
ds
fcomps
sbb
stc
sbb
pop
push
sub
cmp
negl
cs
adc
push
xchg
xchg
sbb
aaa
aam
push
cwtl
xchg
test
pushf
sbb
jle
loope
and
repz
out
sahf
xchg
cmpsl
mov
sub
fcmovu
lock
fmulp
fdivr
mov
push
mov
cmp
jge
sub
scas
jle
xchg
pop
icebp
jp
repz
fldcw
jae
sarl
loopne
sub
jnp
enter
xlat
iret
sbb
xor
adc
xchg
imulb
push
mov
fwait
adc
sub
cmp
cmp
inc
xchg
int
and
out
pop
ds
jno
jl
call
leavew
add
cmp
mov
sub
dec
add
mov
jmp
pop
mov
outsl
xchg
out
daa
cmp
imul
or
inc
adc
into
or
sub
iret
xor
gs
adc
ret
sub
es
fdivrs
sbb
add
popf
jns
sbb
sub
stos
push
jp
insb
dec
rorl
cmpsl
mov
push
cld
test
fstl
std
inc
std
mov
aaa
xchg
dec
lods
push
push
xchg
mov
xchg
aas
push
lcall
or
sbb
cli
pop
mov
test
mov
sbb
mov
push
mov
in
jp
push
insl
and
jecxz
mov
sbbl
repnz
and
mov
ret
xchg
dec
xchg
mov
adc
fiadds
cltd
into
push
mov
mov
push
and
outsb
dec
and
xchg
fwait
push
scas
dec
dec
ret
in
insl
xchg
xchg
aad
xor
movsl
or
add
leave
inc
call
cmp
and
cs
sarb
push
jne
xchg
shl
scas
int
cmpsl
cld
cmp
in
inc
xlat
fimull
je
stc
sbb
mov
or
adc
test
xchg
test
mov
lods
aas
jo
push
pop
ficompl
in
iret
xchg
jns
das
testl
es
push
insb
xlat
lods
lods
fcmovu
pop
and
ljmp
add
mov
test
fadd
lret
cmpsl
mov
aad
js
adc
stos
adc
xchg
mov
aam
push
jb
xchg
int3
fstps
push
adc
cwtl
xchg
rclb
leave
inc
xchg
enter
repz
mov
fstpt
jb
out
pop
rol
inc
push
mov
sbb
movsl
loope
sbb
cmp
in
leave
std
fidivrl
jae
lods
mov
out
sahf
lret
in
adc
jp
stc
imul
push
or
lods
fs
mov
int
mov
mov
xchg
arpl
ljmp
mov
jns
inc
dec
mov
jge
xor
cmp
mov
push
frstor
push
in
xchg
push
pop
icebp
aaa
sbb
adc
bound
or
push
mov
loopne
aas
daa
pop
push
xor
out
cld
mov
ljmp
dec
sahf
aam
ficoml
mov
shl
mov
jmp
mov
out
jle
xchg
popa
insl
dec
add
rclb
mov
out
pop
fists
popf
fs
inc
cmp
dec
xor
lret
clc
add
lcall
and
xlat
push
jg
test
aad
out
xchg
adcl
jnp
mov
shlb
or
ljmp
mov
mov
pop
fs
pop
mov
es
icebp
jecxz
nop
je
hlt
popf
fsubrp
mov
lods
test
adcb
pusha
daa
xchg
xchg
add
and
and
mov
cmp
hlt
mov
mov
iret
fbld
hlt
ret
es
addr16
inc
sub
xor
ds
or
add
inc
xor
push
cmp
xchg
rclb
jae
pop
cmp
and
xchg
cli
add
les
jl
and
pop
les
fs
mov
out
cmp
cmp
stc
into
iret
cmp
pop
and
cmp
in
and
dec
int3
jae
aaa
adc
pop
dec
jmp
sbb
jmp
or
xchg
fstps
lcall
pop
push
mov
repnz
add
out
jbe
movsb
loopne
mov
es
push
out
cmc
lods
push
mov
push
jns
xor
in
and
in
int
mov
stc
les
mov
mov
sbb
stos
les
xorl
out
sub
inc
scas
loopne
xchg
cmpsl
push
xor
stos
rol
push
enter
inc
add
mov
rcrb
xchg
ss
mov
push
pushf
pop
adc
xchg
shl
decl
pop
scas
fwait
enter
outsl
cmc
sbb
xor
cld
stc
insb
hlt
fwait
mov
bound
loopne
cmp
pushf
cmpsl
lret
test
gs
aas
jb
enter
xchg
adc
dec
jb
into
ficoml
pop
add
imul
and
outsb
out
cwtl
fisubrl
stos
sbb
adc
lahf
cmp
jnp
xchg
mov
push
adc
mov
add
or
push
jns
data16
sbb
fsubl
push
xor
filds
scas
int3
xor
fimuls
nop
pop
cli
jns
mov
pop
aam
xor
mov
and
loop
adc
mov
lahf
mov
pop
mov
jg
push
mov
loop
sbb
jae
sbb
bnd
sbb
aas
clc
sbb
sub
push
xlat
push
inc
mov
fcmovu
add
xlat
fs
xchg
dec
cmp
ljmp
scas
das
js
call
in
stos
mov
jbe
pushf
dec
cmp
inc
sub
adc
cmp
lret
lret
inc
cmp
jae
subb
sbb
push
jno
inc
cmpsl
lock
xor
enter
pop
popf
add
sub
dec
mov
mov
adc
mov
push
mov
cmp
mov
int
push
out
push
inc
call
loop
dec
or
movsl
das
out
jle
lcall
push
loope
sub
ljmpw
andl
inc
xchg
std
xchg
addl
fisttps
jnp
stos
clc
adc
outsb
xchg
es
cld
ss
pop
mov
lods
cmp
in
dec
adc
je
sbb
imul
orb
mov
inc
sbb
loopne
cmp
xor
inc
xor
in
pop
and
shr
fisttpl
ss
and
jmp
mov
jb
mov
ret
int3
ljmp
cmp
in
xchg
add
push
call
adc
loope
dec
out
leave
ds
or
or
das
ret
jb
into
jae
outsl
mov
std
pop
aad
cmp
das
shll
sbbl
mov
lahf
jnp
xor
cli
movsl
cld
inc
pushf
cmpsb
jle
pop
sub
inc
mov
fwait
shl
out
mov
jns
xchg
sbb
mov
sub
dec
xchg
jmp
or
imul
loop
outsl
nop
mov
test
cli
mov
rclb
push
aaa
inc
test
fldl
inc
stos
and
mov
adc
cmpsl
fdivs
inc
loopne
jecxz
shl
aaa
cmp
daa
std
sahf
dec
jae
in
mov
inc
int
stc
rclb
aaa
dec
mov
in
xor
pop
dec
cmpsb
out
xor
ror
add
loope
mov
sbb
lock
mov
adc
ss
mov
pop
sub
mov
icebp
aas
test
filds
pushf
xchg
ja
add
jns
pop
xchg
mov
insb
imul
jne
xchg
xchg
loop
pop
daa
mov
mov
data16
sub
es
push
jnp,pn
xchg
test
mov
sub
xchg
fimull
jb
jmp
imul
insl
mov
mov
add
inc
std
clc
mov
jo
xor
and
clc
adcb
ret
test
stos
cmp
testl
push
dec
and
cmc
dec
or
lret
and
xor
dec
mov
int3
ret
inc
lods
repnz
rol
lods
int
jbe
mov
ds
outsb
lods
imul
pop
mov
sub
push
and
imul
insb
pop
xchg
jno
sbb
bound
sub
rcrb
push
ret
test
sbb
in
ljmp
iret
push
lcall
loop
inc
imul
or
mov
add
and
gs
call
push
insb
lahf
imul
fs
les
filds
cmp
jno
pop
xchg
das
mov
decb
jg
lea
jne
cmp
enter
pop
dec
mov
pop
outsl
call
and
push
ljmp
shr
push
popa
loopne
adc
inc
pop
xlat
fcoml
fidivrs
and
dec
movsl
aam
xchg
mov
enter
cmp
cmp
pop
and
mov
sahf
call
xor
test
mov
push
add
mov
push
and
pop
push
scas
xor
dec
lahf
mov
rorl
pop
movsl
shlb
addr16
out
jne
cmp
sub
aam
js
mov
cmpsb
inc
adcl
mov
sbb
nop
add
jns
int
mov
imul
sub
push
xchg
hlt
dec
punpckldq
jnp
push
int
enter
inc
shl
inc
shl
bnd
push
stos
xchg
repnz
je
push
imul
jns
mov
data16
repnz
stc
cwtl
xor
fdivl
sahf
sub
push
rclb
mov
push
out
addr16
sti
pop
cs
sti
push
xor
push
pop
shll
adc
dec
fcomps
sti
fs
fsts
pop
mov
scas
or
and
fwait
push
ljmp
dec
stos
dec
enter
roll
push
mov
push
sti
outsl
cltd
popa
ds
jnp
and
or
cmp
xchg
out
push
mov
rorb
scas
sbb
xor
adc
nop
loope
add
repz
scas
mov
cs
cmpl
add
je
lock
dec
inc
xor
call
jbe
dec
lds
aad
cwtl
lods
dec
xor
push
stos
and
sbb
sub
jg
in
movsl
mov
fsubl
mov
mov
pop
jl
fldln2
and
aas
lock
rorb
arpl
jne
xor
clc
nop
sbb
jo
add
idivl
push
mov
inc
pop
vmwrite
sub
fstpl
push
pop
cmc
jmp
loop
or
lods
in
sbb
leave
inc
mov
pop
jae
in
pop
dec
mov
test
hlt
jno
loop
sub
mov
jecxz
andb
out
sub
cmp
fidivrl
je
mov
jl
jae
testl
cli
daa
gs
push
mov
mov
dec
sub
lds
push
and
sahf
xchg
mov
mov
enter
cmpsb
lcall
imul
sbb
mov
inc
pusha
dec
insl
or
outsl
inc
hlt
fiadds
cmpsl
or
jmp
aas
js
mov
aaa
jmp
sbb
lea
je
and
push
sbb
iret
call
push
xchg
in
fadd
clc
jb
dec
push
enter
pushf
out
adc
mov
cltd
fldcw
jge
shlb
loopne
xor
fisubs
and
popa
inc
pop
lea
mov
test
out
in
jae
mov
leave
ret
leave
stos
or
xor
mov
push
inc
fsubrp
sbb
fabs
imul
xchg
cs
mov
push
add
lret
push
sbb
outsl
lret
xchg
outsb
mov
in
cli
sbb
lretw
adc
inc
into
cli
test
imul
outsb
movsb
pop
scas
jnp
fwait
out
call
jecxz
xchg
jae
mov
mov
data16
loop
cld
fiadds
movsb
mov
or
je
test
jmp
aad
jo
mov
jl
or
add
fstl
jg
jns
push
mov
jo
mov
imul
sub
xor
int3
and
jg
popf
int3
sti
adc
test
je
test
icebp
shrb
sahf
test
sub
ret
xor
repz
add
mov
nop
adc
push
inc
pop
pop
pop
pop
mov
sbb
pop
adc
cmpsb
std
mov
outsb
sub
adc
out
repz
inc
gs
push
push
mov
cli
icebp
jmp
subl
pop
dec
sahf
aaa
ss
shl
cli
adc
jb
cmp
dec
out
mov
sbb
pusha
pop
jl
out
mov
pusha
shl
aam
call
xor
mov
inc
inc
xor
gs
les
pop
mov
adc
jns
pushf
push
ljmp
xchg
insl
sbb
jno
je
mov
scas
cmp
cmpsb
dec
cltd
sub
inc
pop
outsl
inc
jne
xlat
xchg
xor
insl
negl
xor
xchg
inc
xchg
aam
xchg
add
ret
in
push
mov
mov
imul
sahf
fs
and
push
cmp
faddp
sahf
mov
mov
in
cmp
xchg
and
call
cld
das
mov
sub
sti
push
out
pop
pusha
ljmp
mov
mov
xor
test
loop
andl
jg
add
icebp
mov
jmp
mov
dec
inc
xor
dec
pop
rcrl
pop
push
fdivrs
or
push
xchg
xor
aam
and
addr16
or
ja
xchg
jae
inc
fs
push
xor
jmp
add
push
mov
lods
popa
xchg
leave
lods
test
push
dec
xchg
lcall
dec
popf
fistl
cltd
scas
xchg
imul
cld
insl
jecxz
add
stc
mov
mov
test
aad
mov
std
xor
sub
scas
push
sbb
sar
test
aam
fwait
inc
sarb
iret
movsl
fwait
int3
sub
adcl
loope
lea
push
xor
adc
aad
mov
xchg
add
add
mov
lods
sub
inc
movsb
in
mov
cmp
mov
and
jb
mov
loop
in
mov
xchg
cmp
filds
dec
int
testl
and
addr16
arpl
xor
imul
popf
rcrb
cmp
xorb
mov
mov
push
mov
fwait
mulb
xor
loope
aaa
mov
xor
adc
xor
mov
xchg
scas
clc
xchg
outsl
stos
dec
adc
jb
sbb
jg
sbb
add
xabort
movsl
in
hlt
repz
imul
andb
xchg
mov
mov
in
jge
fisttpl
int3
imul
xchg
sbb
xchg
das
lea
or
and
add
or
mov
movsb
and
cmp
xchg
into
insl
cmp
negl
ja
out
je
bound
popa
jmp
cmc
sbb
sysret
lods
sub
cltd
mov
dec
ret
cmpsb
pop
out
mov
and
notl
jns
xchg
mov
jle
insl
popa
arpl
add
xchg
loope
mov
and
sub
xchg
popa
mov
xchg
shlb
mov
test
loop
xchg
ja
movsb
adc
pop
dec
push
xchg
and
imul
lret
fidivl
je
pushf
xor
mov
push
outsl
sbb
es
int3
mov
mov
popa
and
xchg
jne
jb
orl
addr16
aaa
mov
cwtl
push
xchg
std
mov
pop
sub
dec
mov
sbb
into
mov
mov
ret
dec
sub
mov
in
jg
cld
cltd
xchg
cmp
cmp
sub
lea
cli
int3
dec
cwtl
lcall
orl
mov
mov
pop
dec
cmpsb
cmc
mov
xchg
out
push
cmp
mov
mov
jbe
inc
insb
cmpsb
stos
scas
jae
movsl
cltd
inc
rorb
jnp
popa
lods
pop
fistpl
pop
mov
movsl
jg
xor
adc
fcoms
adc
adc
pusha
mov
mov
cmp
insb
mov
iret
das
popa
jne
xor
sbb
xchg
stos
dec
mov
or
pop
fildl
clc
divb
xor
aas
fimull
xor
ficomps
cmp
or
mov
insl
sbb
adc
jne
pushf
mov
adc
hlt
push
dec
addr16
add
pop
dec
aas
shll
jl
pop
lcall
ja
or
sub
mov
lcall
sub
stos
adc
ja
fimuls
lock
mov
mov
shll
cmp
cmpsb
push
add
xchg
in
adcl
sbb
jns
inc
repnz
jl
push
stc
sub
lock
jne
je
add
div
outsb
cmp
aam
lods
test
xor
ds
xchg
mov
ds
push
jmp
mov
jmp
inc
cltd
xchg
int3
aad
xor
mov
xor
mov
mov
xchg
pop
xchg
sbb
bound
sbb
push
shlb
test
nop
xchg
mov
mov
fidivrl
adc
shrb
adc
cmp
adc
pop
adc
test
fs
mov
adc
mov
jbe
mov
inc
adc
sbbl
adc
dec
push
push
test
cmpsl
push
mov
inc
mov
add
cmp
xchg
mov
sub
adc
adc
das
jns
leave
fwait
dec
pop
xchg
insb
jl
out
sahf
cmpsb
js
push
cld
adc
push
inc
mov
adc
repz
add
fistl
sahf
out
lahf
sub
das
or
stc
cmc
icebp
xor
inc
notb
dec
loope
mov
jne
xchg
pop
adc
in
aam
jg
jle
adc
arpl
mov
mov
add
mulb
jnp
leave
cmc
mov
adc
xor
in
loop
inc
or
or
pop
cmp
stos
dec
push
negb
and
fsubrs
dec
icebp
mov
popf
rcll
xchg
mov
scas
sub
cwtl
popf
push
sbb
jae
stos
lret
shr
sbb
jmp
mov
xchg
xor
cli
lret
fiadds
stc
imul
sub
lahf
pop
add
cs
push
mov
mov
mov
add
call
out
sahf
in
jae
lret
dec
pop
pop
gs
incb
fdivrs
sub
xor
idivb
aas
aam
outsb
es
xor
push
addps
inc
scas
imul
dec
mov
pop
and
cli
adc
sub
imul
shrb
adc
pop
in
and
dec
jo
repnz
lds
and
lea
test
das
gs
jecxz
outsb
jmp
dec
outsb
and
inc
std
imul
stc
call
sub
push
xlat
outsl
daa
arpl
inc
imul
sub
dec
ja
fs
sarl
stos
adc
push
xchg
sbb
insl
mov
aad
sbb
pusha
xchg
mov
xchg
out
cmp
and
or
add
lahf
hlt
lea
sub
sub
fucomip
stos
cmpps
ret
into
add
xchg
ljmp
push
mov
movsl
gs
mov
cmp
lea
mov
dec
mov
lret
lahf
cmp
popf
ja
cmp
jp
sub
xchg
test
xchg
cmp
jae
clc
jne
mov
movl
cs
and
push
stos
xchg
jp
inc
test
lods
cmc
aas
push
inc
add
pop
rcrb
shl
roll
pushf
sub
faddl
sbb
sbb
mov
jge
test
sbb
add
inc
push
clc
push
int3
test
and
jge
cld
lds
sub
push
out
insl
fadd
push
adc
inc
das
push
hlt
inc
mov
mov
inc
mov
jecxz
and
push
jg,pt
test
enter
mov
xchg
sti
jmp
ret
mov
shrl
mov
sub
jge
jge
je,pt
int3
test
icebp
jae
stos
call
pop
or
mov
int3
clc
xchg
jno
scas
or
add
pop
sub
mov
xlat
mov
mov
jp
fsubrl
cwtl
rol
test
sub
xchg
out
jb
xor
aad
mov
pushf
test
xchg
pop
call
fiaddl
mov
sub
enter
xor
int3
sub
daa
movl
pop
xchg
clc
adc
in
mov
lock
push
push
cltd
sbb
dec
mov
and
adc
xchg
xor
stos
pop
sbb
sarl
cmpsb
fwait
and
outsl
pop
dec
push
hlt
andl
jns
scas
mulb
jp
pop
ss
and
cmc
xor
dec
inc
xor
mov
xchg
inc
inc
cwtl
inc
pop
out
pop
inc
mov
sahf
push
pop
push
or
cmp
je
pop
push
popa
xchg
test
aam
and
jnp
ljmp
mov
int3
inc
and
cmp
mov
inc
pop
stos
or
mov
mov
in
into
nop
imul
rorl
cmp
cmp
outsl
scas
lcall
popa
rep
repz
pop
xor
or
mov
cmp
repnz
adc
dec
mov
inc
jecxz
fnstenv
jp
sub
scas
les
adc
mov
pop
inc
aad
or
fsubrl
push
xchg
mov
jl
stc
pusha
mov
xchg
fsubrs
test
pop
xchg
icebp
sbb
push
or
dec
rorb
mov
jmp
push
pop
push
sbb
lea
xor
xchg
cmc
sbb
push
mov
movsb
xchg
ljmp
dec
xchg
lcall
cld
imul
and
ljmp
pop
and
cs
inc
mov
cmpsl
ds
lcall
fisubs
fucom
cmpsb
test
mov
out
dec
sti
xlat
ret
loope
dec
sub
stos
ror
lds
inc
fsubrl
lods
dec
inc
aaa
lds
loop
out
adc
jnp
icebp
mov
repz
jle
dec
mov
test
pop
fldenv
inc
adc
insb
mov
inc
aas
inc
push
dec
xchg
xor
pushf
inc
idivl
xorb
xor
push
jp
dec
testb
aam
jnp
scas
arpl
rclb
test
jl
dec
cmp
mov
dec
ss
and
xchg
push
inc
inc
loop
ffree
pusha
xchg
bound
mov
mov
mov
pop
xchg
pop
fs
js
mov
jle
pushf
lret
adc
jecxz
fadd
loop
pop
xchg
xor
dec
sbb
add
jne
lds
sub
xor
push
in
sbb
test
adc
lods
js
fwait
dec
xor
adc
test
shr
cmp
out
and
mov
ja
daa
gs
push
daa
inc
scas
jbe
add
push
push
jecxz
xchg
sub
cmp
pusha
xlat
sub
mov
in
mov
mov
pop
pop
lret
or
int3
adc
aam
mov
loopne
test
jns
dec
dec
inc
jno
add
es
pop
and
out
leave
dec
pop
lahf
pusha
jns
in
test
bound
aam
getsec
inc
sub
push
hlt
dec
lret
in
js
adcl
sarb
addr16
jne
sbb
inc
sub
repnz
push
repnz
sti
outsl
clc
and
push
xchg
rorl
xchg
ss
cmp
mov
scas
and
cmp
jmp
mov
outsl
xchg
mov
mov
insb
lock
das
mov
add
inc
and
push
les
in
mov
xor
test
sbb
xor
fs
jle
test
repnz
repz
mov
or
inc
cmp
out
or
pop
roll
sub
inc
dec
bound
mov
jbe
out
xchg
rcrl
movsb
arpl
and
mov
enter
dec
xor
sbb
cmp
cmp
outsl
mov
dec
xor
xchg
aad
loopne
inc
aam
inc
ret
pop
mov
mov
jb
xchg
mov
iret
cli
les
testl
lea
and
sbb
pop
cmc
cmp
ret
push
mov
lret
cmpsb
jns
jge
mov
ret
jo
mov
popa
jae
pop
sbb
sub
sti
dec
mov
mov
cmp
xchg
cmpsl
mov
or
hlt
mov
data16
lret
fs
int3
add
adc
mov
mov
jno
push
bt
jge
jle
aaa
loop
or
jnp
mov
lods
dec
shrb
sbbb
pop
lds
into
cli
int3
or
jmp
sbb
cmp
data16
add
ds
xorl
sub
jg
inc
popf
sbb
or
ss
mov
push
jo
or
add
test
mov
data16
fdivs
nop
jnp
daa
fucom
jnp
fsqrt
data16
sbb
jae
enter
mov
or
fs
push
in
insl
adc
cmp
cmp
jle
mov
xchg
mov
add
sub
xchg
jbe
push
ljmp
fcoms
inc
cmp
ret
mov
xor
pusha
pop
fwait
movsb
jbe
repnz
inc
mov
lcall
mov
inc
or
cmpsl
sbb
push
sbb
aam
inc
aas
lock
push
rclb
shrb
xchg
push
or
jle
inc
inc
jbe
mov
pop
ficompl
mov
add
sbb
xchg
xor
nop
push
or
adc
pop
fwait
cmp
pop
mov
out
insb
mov
pop
aad
dec
mov
and
push
xor
xlat
sarb
sub
cmp
mov
mov
xchg
mov
jb
jp
pusha
pop
push
out
inc
ret
xchg
outsl
out
xchg
hlt
cmp
fidivl
pop
fistl
jne
add
jno
scas
fdiv
or
mov
arpl
mov
push
rclb
mov
push
imul
mov
pop
sti
jns
jg
xchg
into
cli
out
sub
push
jnp
ret
jle
ja
or
cmpsl
test
gs
xor
pop
repz
xchg
mov
js
or
adc
adc
and
mov
loopne
mov
xchg
dec
jge
nop
test
mov
pop
or
ret
jg
xchg
fists
sub
scas
jb
mov
bound
or
inc
bound
ja
jge
fadd
sub
jno
mov
hlt
loop
pop
push
clc
cmp
xlat
faddl
in
rorl
xchg
test
and
or
in
push
xlat
sub
dec
sub
hlt
test
out
pop
lcall
mov
stos
dec
jmp
fsubrs
and
mov
pop
pop
inc
call
in
push
jle
adcb
xlat
repnz
xor
jg
jg
or
push
sub
testl
fnstsw
jg
pop
adc
shll
dec
sbb
dec
sbb
dec
mov
cli
push
mov
or
dec
mov
ljmp
out
add
xor
jg
jl
or
jo
insl
xchg
and
push
jns
pop
lret
aam
mov
mov
xchg
daa
prefetch
mov
pop
inc
sub
ja
dec
or
dec
add
sub
clc
lea
rclb
mov
icebp
xchg
xor
xchg
fisubs
fmuls
ja
or
push
adc
mov
xchg
mov
pop
fwait
subl
ret
loop
pop
test
clc
and
sbb
mov
jb
push
adc
add
cld
sub
push
pop
sub
frstor
lock
add
iret
xchg
int3
cmpsb
xchg
clc
into
add
mov
jb
outsl
jno
or
ss
mov
in
loopne
adc
mov
cmp
xor
mov
xchg
in
sbb
imul
and
sbb
inc
sub
ljmp
xor
aad
adc
je
inc
leave
jl
dec
repnz
adc
jle
jnp
and
mov
jne
push
ljmp
adc
movsb
jo
ret
jecxz
movsl
call
sbb
adcl
mov
test
ss
jo
arpl
out
addr16
das
jmp
xor
incb
xlat
sbb
ljmp
push
aam
div
pop
loop
mov
jb
mov
mov
xchg
int3
pop
movsl
jno
popf
push
xchg
lods
cmp
cmpsl
lcall
ljmp
mov
or
insl
mov
psubusb
cmp
mov
icebp
push
jmp
es
xchg
add
insl
dec
popf
xchg
jg
xor
nop
in
movsl
push
fcomp
add
mov
mov
push
add
lret
gs
pusha
dec
lret
fs
ds
negl
push
outsl
or
pop
xchg
lcall
add
xor
inc
xchg
js
adc
js
add
inc
scas
cltd
adc
mov
xor
lret
test
ljmp
call
imul
mov
jno
pop
xor
lret
and
cmpsb
in
into
out
fldenv
lret
lret
jb
imul
push
push
dec
inc
jmp
inc
jb
jl
or
movsl
mov
mov
jle
sub
stos
mov
adc
sub
repz
out
add
ljmp
adc
push
ficoms
add
pop
sub
ret
call
inc
test
cli
dec
movsl
stc
mov
mov
inc
and
sub
fcmovne
je
scas
js
push
push
dec
pop
sbb
push
adc
mov
out
out
pop
shr
out
and
repnz
iret
test
jmp
adc
insl
imul
not
sub
loope
hlt
cmpsb
jbe
or
push
into
lock
add
insl
imul
add
add
leave
iret
push
orb
negl
aaa
cwtl
xor
mov
divl
sarl
mov
test
mov
add
out
lcall
out
cs
push
and
dec
pop
and
inc
cmpb
arpl
and
or
pop
outsl
call
mov
sub
cwtl
add
cmp
lods
mov
cld
popa
aaa
or
pusha
mov
dec
outsl
aas
lock
scas
jp
xor
scas
xchg
fidivrs
pop
movsb
push
out
scas
sti
xor
lods
dec
jg
cli
fidivl
ljmp
or
push
xchg
int
test
mov
sbb
rcl
push
neg
shlb
lahf
push
mov
stos
push
mov
mov
lods
pop
xchg
add
sbb
std
nop
mov
mov
or
mov
clc
fmul
test
lret
fmul
je
mov
push
cwtl
movsl
cli
push
mov
ljmp
addb
jnp
stos
inc
ret
add
and
pop
jno
and
fcompl
repz
call
add
adc
fucom
fdivrs
mov
sbb
sub
adc
fwait
out
jge
shlb
mov
sub
dec
insl
or
pop
xor
lods
movsb
fsub
cmpsb
sub
and
std
or
sbb
loopne
mov
push
test
push
push
or
mov
pop
sub
outsl
pusha
jnp
in
dec
jge
outsb
cmp
lods
js
jmp
cltd
xchg
add
int
and
cmc
aad
push
test
andl
xchg
mov
push
out
rclb
mov
out
mov
shll
in
sbb
jecxz
in
pusha
dec
push
outsb
adc
pop
and
jp
or
dec
mov
jae
jne
rclb
popa
cmp
js
add
push
ret
push
in
test
cmp
pop
mov
sti
and
mov
leave
nop
movsb
fldcw
mov
xchg
xchg
shr
divb
cmpsl
mov
adc
insb
iret
adc
inc
fcmovb
repz
fwait
mov
movsb
gs
std
and
mov
repnz
movsl
movsl
fadd
jae
xor
aaa
cmp
sub
xchg
push
lds
cmp
mov
xchg
mov
adc
add
lods
in
xor
xor
jle
mov
and
add
pushf
xchg
xchg
movsl
in
push
xchg
insl
xchg
mov
mov
jle
sub
push
mov
add
sbb
adc
sub
lds
and
inc
popw
mov
pop
adc
in
sbb
aam
movsb
cmp
mov
mov
inc
sbb
dec
lcall
in
or
add
inc
popa
xor
mov
lea
pop
pushf
and
and
divl
lds
or
ret
sub
sub
outsb
push
mov
jecxz
cmpb
test
jl
mov
ds
xor
dec
dec
xchg
jbe
xchg
mov
adc
and
jmp
stos
xchg
jl
jecxz
jb
cli
mov
pop
inc
ds
adc
sub
fstps
enter
lods
or
cmc
js
shll
or
outsl
out
mov
xchg
push
sub
aad
int3
fisttpl
int3
mov
or
call
dec
shr
out
push
fdivl
adc
test
stos
inc
adc
jns
mov
out
sub
bndstx
int3
inc
pop
stos
jbe
pop
sbb
dec
aas
dec
mov
adc
outsl
pop
in
adc
fs
sbb
dec
push
mull
xor
mov
mov
pop
cmp
das
mov
push
pop
sub
jp
mov
dec
xor
rclb
call
shr
push
mov
js
fstl
fiadds
insb
fsub
push
sbb
pop
cwtl
or
repnz
js
je
or
mov
inc
lea
add
movsb
jae
xchg
inc
test
xorb
dec
dec
popf
pop
inc
mov
mov
mov
jb
push
lcall
xor
cmpsb
repz
ret
sub
pop
les
inc
sbb
in
jp
rclb
xchg
or
sbb
cmp
dec
sub
in
pop
push
subb
dec
mov
mov
cmp
insb
cmpsl
fistl
fdivrl
cmpl
jl
pusha
dec
fldt
out
xor
mov
mov
in
add
cmp
add
icebp
bound
inc
cmpsl
xchg
jle
dec
inc
or
jo
cmpsl
mov
sbb
push
into
inc
xchg
push
inc
roll
jb
mov
adc
jp
scas
mov
mov
sbb
aad
daa
out
dec
mov
imul
and
adc
mov
inc
incb
push
jbe
xchg
xlat
sbb
pop
flds
add
mov
push
leave
dec
sarb
scas
push
adc
push
cld
xchg
jae
insb
or
or
in
loop
fisubs
jae
mov
and
lods
jmp
jne
xor
bound
dec
sub
push
lods
imul
bound
jl
and
sbb
loopne
xor
cmc
ja
ljmp
insl
in
jmp
sbb
or
das
loopne
mov
repz
lret
dec
jmp
push
mov
sbb
movsl
dec
xchg
notl
jae
inc
loop
xchg
sub
and
mov
in
icebp
out
mov
fdivp
ficoml
jg
jmp
test
add
sub
adc
sbb
or
jb
call
and
fsubs
push
arpl
mov
ret
inc
mov
inc
mov
clc
xchg
insb
pop
pop
mov
aad
mov
xor
xor
push
adcl
popa
fisttpll
cmc
test
xchg
addr16
les
dec
das
jecxz
dec
pushf
sub
inc
lcall
sbb
xor
idivb
xchg
or
lahf
bound
in
pop
push
test
cwtl
add
in
jg
std
sub
push
testl
scas
leave
mov
dec
mov
fisubs
stos
pop
mov
inc
inc
sub
add
push
ss
loope
les
jns
or
hlt
mov
in
xchg
and
fdivs
dec
xchg
lret
outsb
sub
incl
sar
ds
cmp
mov
and
mov
mov
sub
shr
dec
movups
int3
push
test
adc
in
sbb
xor
push
inc
mov
jno
mov
mov
jmp
xchg
scas
push
mov
push
adc
or
and
jp
mov
testl
adc
aad
in
mov
je
push
cmp
enter
dec
dec
outsl
dec
jle
jno
stos
nop
fisttpl
pop
sbb
push
push
mov
xchg
add
aad
xor
and
movsb
jmp
sbb
push
mov
in
shll
in
and
decb
and
mov
adc
xchg
pusha
and
or
adc
sbb
inc
jno
cmpsl
test
push
dec
or
mov
mov
ja
pop
sbb
mov
fcomp
stc
sbb
clc
ret
jae
push
sbb
adc
enter
pop
dec
mov
dec
call
cmp
xchg
fstpl
repz
test
lock
mov
adc
mov
push
movb
mov
ret
xchg
mov
fiaddl
or
scas
rolb
mov
shlb
ss
nop
mov
test
push
lods
outsl
stc
cs
or
cmp
pop
push
push
pop
adc
out
cs
inc
jnp
ja
pop
mov
rclb
fs
ja
cmp
push
add
inc
sbb
sbb
test
fisubs
js
mov
push
mov
stos
faddl
mov
mov
mov
mov
xchg
pop
xchg
inc
loopne
pop
scas
leave
out
test
sbb
out
lock
fstl
sub
stos
jge
mov
js
and
mov
xchg
fwait
arpl
icebp
popa
orb
movsl
push
imul
push
push
inc
fisubrl
push
testl
dec
push
es
mov
jne
lret
inc
into
popa
cwtl
mov
xchg
cmp
in
inc
nop
in
mov
fmuls
and
imul
test
insl
test
sarb
leave
mov
pop
adc
ds
cltd
pop
imul
xchg
out
and
jb
dec
xor
or
dec
push
shrb
leave
pop
popa
mov
xchg
in
mulb
fidivrl
sub
enter
or
shrb
mov
int
mov
xchg
cmp
subl
mov
cwtl
shrb
dec
push
dec
ljmp
push
pop
scas
mov
add
pusha
mov
ds
push
je
in
in
repnz
cmpsl
mov
inc
lea
aas
sub
mov
pop
dec
lds
pop
fwait
mov
movsb
cmp
adc
pop
data16
adc
in
divl
or
jae
loope
mov
dec
pop
and
insl
into
cmc
add
pop
fwait
leave
cmp
insl
mov
repnz
ret
in
js
jp
int
xchg
fcomps
lods
call
inc
ret
sti
in
jns
or
sub
mov
push
insl
add
mov
fistps
jg
pop
cmpsb
cmp
ss
andl
outsb
lods
arpl
pushf
cmp
and
pop
roll
dec
sbb
adc
sbb
out
je
aaa
loop
popf
in
sbb
clc
jne
ret
and
and
sbb
xor
or
sub
addr16
and
xchg
stc
mov
inc
mov
jmp
jns
push
adc
cs
mov
xor
enter
add
fmull
adc
pop
dec
int
orl
ficomps
push
adc
jo
aas
std
cli
cltd
xor
lods
sbb
jmp
call
push
xor
aaa
xor
mov
and
xor
test
inc
mov
lcall
fs
sbb
mov
pop
mov
mov
add
movsb
sub
jecxz
negl
repnz
sub
mov
jns
sub
std
outsl
gs
outsb
fcoms
sub
cs
mov
cld
lods
jo
adc
aam
ja
imull
subb
data16
in
addl
xor
stos
lret
or
mov
xchg
lahf
cmp
inc
inc
lods
fisubs
popf
mov
lea
movsl
ret
mov
sbb
enter
lea
dec
bound
inc
sarl
ret
cld
or
adc
fs
in
aaa
or
outsl
pop
add
pop
rclb
xor
jo
jns
add
jnp
fmull
lods
dec
adc
mov
ffreep
aas
lods
mov
jl
sbb
rolb
mov
or
inc
cmp
sahf
adc
push
ss
cmp
adc
jb
fs
lock
movsl
jbe
xchg
movsl
sahf
rolb
jp
push
add
and
sahf
xchg
xchg
lret
nop
adc
subl
pusha
inc
push
cmc
dec
test
mov
sub
sbb
lahf
int3
sbb
sbb
cmpsl
mov
sbb
mov
jo
mov
fs
and
or
popf
lods
lds
stc
mov
mov
sub
imul
sub
jne
dec
or
or
cld
cmp
push
or
pushf
sar
xor
mov
cmpb
pop
add
or
mov
or
pushf
arpl
or
dec
dec
imul
test
stos
or
jnp
aam
mov
sub
and
push
fs
imul
pop
xchg
cmpsb
fwait
mov
inc
imul
cmp
in
ja
xchg
les
xor
dec
cmp
aam
cltd
repnz
mov
xchg
je
pop
inc
or
xor
fs
pop
and
sub
sbb
add
jecxz
mov
inc
push
sub
xor
sub
cmpsb
sub
pop
lret
or
cmp
inc
cmc
push
dec
jl
gs
stos
rolb
popa
cwtl
adc
xlat
pop
sub
rclb
insl
xor
test
dec
jge
in
adc
std
mov
psrlw
je
sbb
test
or
add
jmp
mov
fnstcw
or
jno
mov
les
mov
mov
repnz
mov
stc
mov
sar
ss
push
mov
pushf
mov
xor
das
fistpll
and
dec
dec
and
pop
mov
sub
repz
jge
mov
ss
hlt
jl
andl
dec
cmp
push
arpl
test
int
jmp
sbb
packssdw
sub
push
xor
cld
adcb
adc
cli
or
test
and
push
sti
dec
push
arpl
call
cmpl
stos
mov
insb
popf
push
push
mov
adc
pop
sahf
mov
aad
mov
pop
jo
lcall
inc
jo
push
inc
cmp
inc
in
clc
jne
sub
mov
and
cmp
jne
leave
lcall
int3
scas
xchg
adc
testb
idivb
mov
adc
dec
jle
xor
jle
repnz
sub
or
enter
jbe
push
cmp
pop
sbb
inc
loopne
dec
ljmp
in
mov
push
cld
nop
mov
lods
xchg
mov
xchg
cmp
divl
into
xchg
insl
sub
pop
sub
dec
gs
daa
jecxz
xor
cmp
jbe
pop
adc
roll
pushw
lods
adc
test
or
and
bound
shll
xchg
imulb
xor
std
jno
loope
jecxz,pt
lock
mov
adc
and
add
stc
mov
sbb
test
xchg
cltd
lods
stc
loope
push
push
ret
and
cld
movsl
jg
dec
adc
dec
or
mov
lret
and
cld
cmpsb
jecxz
mov
daa
mov
xchg
push
mov
cmp
mov
pop
xchg
jge
shlb
lahf
enter
add
rcll
stos
fs
jge
imul
mov
lods
mov
lea
fs
and
jno
pop
pop
dec
push
fsubs
insb
std
loope
daa
ljmp
mov
sbb
jno
sbb
jbe
lret
sahf
lds
sub
xor
push
repnz
lret
enter
or
call
out
inc
arpl
mov
and
cmp
jle
rclb
xor
leave
push
sub
ss
push
xor
ficoms
jmp
fmuls
sub
sbbl
enter
pushf
dec
insl
jbe
cmp
mov
jbe
test
and
mov
rorl
aas
and
lods
fbstp
add
mov
pop
xchg
mov
cmp
aaa
pop
pop
add
mov
pop
push
or
mov
sahf
jnp
fsubs
pop
xor
enter
ljmp
repnz
aas
mov
sub
adc
sbbl
stc
loop
popf
cwtl
inc
push
inc
xchg
popa
lret
xchg
addb
mov
popf
xchg
xor
xor
movsl
leave
dec
or
sub
push
mov
fwait
xlat
mov
pusha
xchg
in
ror
sub
xlat
stos
fnstenv
rorl
test
mov
sub
xchg
ljmp
cmpsl
sti
popf
xor
int
jbe
les
sub
fstps
xchg
dec
mov
pop
sub
sbb
movsl
and
shl
lret
push
adc
rcll
xor
or
xchg
push
call
lds
pop
test
test
nopl
out
stos
push
rclb
inc
xor
test
mov
mov
mov
adc
jg
inc
cmp
cmc
jmp
in
dec
push
push
mov
xor
mov
andl
or
adc
xchg
shrb
mov
and
leave
push
cs
out
sub
jp
sub
loope
pop
test
dec
dec
pop
jmp
or
ret
cmc
mov
add
ds
xchg
repz
push
pop
lret
dec
popl
rol
sub
or
aad
es
sbb
xor
jle
inc
jno
lock
sub
fidivrs
push
mov
shlb
xchg
aas
iret
popf
cmpb
mov
repz
jae
sbb
cmp
xchg
mov
sbbb
sbb
repz
xchg
icebp
pop
mov
movsl
lea
jecxz
and
add
stc
repnz
pop
dec
sbb
test
inc
shrl
stos
and
sti
cmpb
icebp
les
pop
cli
xchg
lret
cmp
test
lods
xchg
xchg
hlt
sbb
pop
shrl
sub
mov
inc
push
adc
xor
cmpsb
jge
inc
pop
and
push
ret
dec
cmp
and
ds
aaa
and
xchg
push
push
jbe
jo
sbbb
add
jg
xorl
cmp
loopne
push
dec
mov
fmuls
mov
add
add
mov
pushf
cmpsl
xor
mov
divl
sub
ret
repnz
pop
cmp
cld
lret
and
push
lret
ja
mov
pop
cwtl
and
jo
loop
cmpsb
fs
iret
push
push
iret
divb
xchg
loopne
jae
push
mov
bound
popa
add
mov
sbb
cs
mov
lods
in
rolb
and
jle
push
mov
sar
cmpsl
hlt
inc
xchg
in
scas
daa
cmp
cmp
and
lods
jmp
sbbb
out
cmp
mov
pop
stos
ss
and
sub
sub
jnp
cmpsb
imul
stos
jp
add
inc
sub
or
into
loop
xchg
addr16
adc
fmul
stos
jmp
stos
jo
mov
lcall
jle
cmp
into
in
jns
loope
negb
lret
fwait
push
fdivrl
rcrb
insl
xchg
nop
hlt
pop
in
in
jge
push
pop
adc
insl
repz
pop
leave
pop
orb
aaa
xor
dec
nop
push
stos
scas
aas
bound
jns
mov
repnz
mov
ret
or
aad
inc
stos
mov
lods
shlb
and
cmp
les
pop
xor
lret
es
fwait
jp
cmp
fs
dec
push
pop
sub
bound
out
mov
mov
and
movsb
sbb
shlb
push
pusha
push
pop
xchg
lea
cmpsb
add
mov
sar
mov
insb
mov
fs
loop
adc
icebp
mov
lahf
mov
push
pop
lret
cltd
cltd
into
add
or
add
aaa
mov
push
pop
stos
pop
inc
in
sub
add
mov
jb
jp
jo
sub
and
and
push
scas
sub
stos
loope
mov
sub
or
mov
lock
and
jl
rorb
pop
into
pop
push
xchg
push
or
xor
mov
sti
xchg
jno
xor
scas
xchg
xchg
imul
idivl
inc
ror
rol
sbb
jmp
insb
orb
and
push
xchg
out
cmp
mov
mov
mov
js
ljmp
or
in
mov
and
sbb
stos
mov
sbb
jmp
cmp
and
xchg
push
leave
pusha
mov
fsubrl
bnd
xorb
mov
cmp
or
mov
mov
stos
cmp
movsb
shll
add
das
dec
mov
pop
movsl
lcall
test
movsb
mov
inc
fs
je
test
cmpsl
mov
enter
outsb
sbb
repnz
lock
jne
push
inc
aaa
dec
cmp
shr
mov
mov
push
push
mov
int
push
daa
mov
cmp
push
jl
jle
or
cmp
push
in
ja
dec
push
call
push
push
dec
adc
stos
out
call
push
push
call
xor
jns
loope
lds
mov
push
cmc
mov
push
pop
mov
das
xchg
outsl
mov
inc
pop
orb
mov
mov
inc
icebp
xchg
arpl
adc
pop
jb
mov
add
mov
nop
insb
outsl
jae
jae
je
cmp
cmp
negb
insl
adc
lds
inc
mov
and
outsb
jl
add
push
cmp
adc
sub
push
add
pop
lar
xor
xlat
xchg
imul
int3
orb
mov
inc
xchg
adc
stos
xchg
shl
gs
cltd
jnp
sbbb
mov
stos
push
je
lock
sbbb
xchg
push
push
sub
lods
mov
pop
lods
or
scas
push
jmp
add
add
cmp
push
pop
das
mov
cmpsb
stos
mov
push
dec
dec
or
lock
sbb
pop
insb
gs
sbb
lret
rclb
nop
int3
fstpt
mov
adc
jne
add
inc
and
pop
and
xor
pop
dec
mov
xchg
mov
mov
cmpsl
psubq
sbb
adc
lcall
and
and
mov
and
nop
idivb
xor
loope
xchg
hlt
lock
xchg
xchg
adc
jl
cmpsl
cli
push
add
and
pop
jmp
push
popl
mov
xchg
loop
xor
mov
push
jne
ret
movsl
mov
mov
stos
out
dec
mov
pusha
ljmp
sub
adc
and
int3
stos
dec
in
movsb
mov
stos
dec
clc
loop
xor
leave
ds
loope
xrelease
lods
cmc
jmp
shlb
mov
xor
cmp
dec
out
mov
adcl
mov
ss
scas
xchg
dec
sahf
jmp
cmp
mov
jnp
mov
or
bswap
jbe
stos
fsubrs
pop
sub
xchg
and
sub
movsb
insl
mov
xchg
dec
add
dec
push
xchg
xchg
lahf
mov
mov
mov
fsubp
mov
sarb
sbb
adc
and
shll
in
addr16
ja
mov
not
sub
cmp
dec
scas
ss
addl
mov
rclb
mov
sarb
pop
movsl
fiadds
sbb
jmp
xor
jp
sbb
push
mov
setns
adc
mov
lods
popf
sti
or
add
cld
pusha
shrb
or
jle
jge
pop
ljmp
pop
push
out
lcall
scas
cmp
mov
push
icebp
insl
adc
and
cmp
mov
outsl
dec
push
mov
test
jbe
fnstenv
outsb
movsl
add
bound
sbb
js,pn
cmp
mov
jmp
mov
xchg
xchg
lea
mov
push
outsb
in
mov
adc
fcmovnb
idiv
push
xor
mov
ret
addr16
test
popf
xchg
or
sbb
das
imul
sbb
adcb
and
mov
dec
jae
aas
mov
fcomps
inc
mov
pop
cwtl
pop
loop
nop
ljmp
sbbl
clc
and
push
lahf
mov
test
in
inc
jecxz
lock
scas
xor
push
daa
int
mov
int
insl
xchg
xchg
idivl
frstor
out
inc
lods
rorb
call
adc
xor
icebp
ficoml
add
cmpsb
push
addr16
outsb
scas
rcrb
test
cmpsb
test
xor
add
les
xchg
push
insb
inc
mov
cs
mov
and
dec
mov
sbb
pop
pop
outsl
outsb
push
scas
sti
scas
jecxz
mov
lds
lods
ror
aad
pop
jnp
imul
adc
outsl
lahf
pushf
cmp
pusha
popf
cmp
add
jb
inc
xchg
mov
out
adc
cmpl
mov
mov
mov
scas
sbb
out
jecxz
push
icebp
push
inc
dec
icebp
xlat
movsb
push
push
and
push
pop
inc
enter
in
test
mov
dec
add
fistpll
mov
xor
addb
daa
leave
sbb
and
cmp
xchg
sbb
mov
scas
dec
mov
push
lret
xor
jl
std
mov
jne
out
or
sbb
insl
adc
aam
js
sbb
dec
lock
mov
adc
fisubl
out
add
adc
lds
pushl
sub
out
or
jg
push
nop
arpl
xor
push
mov
and
push
xchg
fstpt
push
loop
and
mov
cmpsl
dec
data16
loop
and
or
bswap
data16
xor
lods
sar
sbb
adc
aaa
rcrb
add
test
cmp
pusha
pop
xchg
sbb
cli
int
test
push
cmc
pusha
test
cmp
and
add
push
cwtl
pop
inc
lea
mov
sub
scas
mov
out
and
out
and
mov
int
dec
jns
cmp
mov
test
js
wbinvd
cltd
xor
out
in
in
stos
stos
fwait
mov
sub
in
xlat
call
andl
sbb
mov
pushf
cmp
fs
es
add
dec
dec
push
or
mov
pop
add
add
sbb
call
push
mov
lahf
pop
mov
and
cmp
sbb
mov
aam
rolb
inc
jnp
lret
bound
std
xchg
xor
movsb
shr
sbb
cmpl
data16
in
mov
inc
fsub
push
data16
mov
push
sbb
dec
dec
les
jmp
gs
push
lock
jne
iret
dec
push
and
popa
int
cmpsb
jmp
sub
cmpsb
out
loopne,pt
outsl
inc
adc
and
pop
clc
xchg
mov
nop
or
push
adc
repz
mov
pop
push
call
jo
adc
cmpsl
adc
dec
mov
xor
mov
dec
in
cmp
xor
in
cmp
jmp
aam
outsb
push
dec
icebp
cmpsl
es
mov
inc
add
nop
rolb
jb
or
das
push
les
cmp
mov
mov
scas
inc
sub
adc
xor
sbb
jmp
cli
mov
mov
dec
inc
or
fisubrs
adc
in
push
imul
xchg
xchg
and
add
xchg
ljmp
scas
cmp
stc
mov
cmp
test
mov
flds
sbb
fldenv
cmp
sbbb
push
sahf
pop
rcl
or
and
jmp
aaa
out
ret
xchg
lret
test
dec
test
pop
dec
push
jle
or
roll
rcrb
pop
dec
data16
scas
lea
xor
add
pusha
push
jle
jge
jne
outsb
cmp
popf
mov
gs
and
dec
shl
pop
les
dec
jb,pn
adc
addr16
or
jb
pop
imul
rcrb
sub
xchg
cmp
js
xchg
and
test
xor
ret
cmp
xchg
push
mov
cltd
jmp
pop
and
xchg
aam
test
clc
jle
outsb
xor
sub
xchg
bound
push
or
push
cli
pop
shlb
pop
and
mov
test
cld
push
dec
dec
ds
int3
push
dec
xor
stc
mov
mov
mov
ret
insl
outsl
cs
das
push
jg
sub
fbstp
sbb
pop
dec
out
sarl
push
call
fwait
stos
orl
sub
sbb
mov
and
or
pushf
mov
mov
push
gs
sub
jge
xor
ror
cmpsl
stos
xchg
rorl
pop
mov
add
ds
mov
repz
and
jns
mov
push
sbb
popf
cmpsb
ss
mov
movsb
sbb
in
jp
inc
pop
and
and
sub
int3
cmp
pop
xchg
push
insb
and
xchg
cmp
push
push
imul
add
add
fwait
push
add
xor
mov
mov
push
jno
mov
sub
xor
stos
mov
mov
push
fmuls
jl
loop,pn
std
mov
test
outsb
cwtl
call
addr16
mov
jg
push
jo
inc
cwtl
jmp
add
push
scas
outsl
sar
scas
decl
pop
shrl
or
leave
or
mov
xor
sbb
outsb
mov
fiaddl
push
insb
xchg
ret
arpl
and
lods
xchg
xor
or
push
dec
call
jnp
fdivrs
or
sbb
xchg
jl
mov
or
arpl
lret
fninit
leave
mov
stos
jnp
inc
clc
push
xchg
ljmp
sub
or
xor
xor
lds
xor
sbb
sarl
fiaddl
vpxor
mov
or
or
cmp
cmp
insb
mov
cmpl
adc
call
dec
fwait
adc
sub
jp
fadds
subb
leave
xchg
sbb
inc
popa
and
sbb
sub
ds
cmp
test
jns
xchg
or
inc
inc
es
sub
lock
push
aaa
adc
int3
mov
cmp
mov
sub
es
pusha
daa
movsb
xchg
cltd
pop
pop
aam
mov
cltd
rclb
xor
arpl
cmpsb
fildll
imul
inc
jg
xchg
je
fbld
rcrl
incb
stc
sub
sbb
repnz
out
jno
jg
shlb
push
loope
arpl
push
xor
ss
xchg
xor
pop
call
and
popfw
sub
inc
add
sub
popa
pop
mov
rcrl
mov
stc
push
or
sub
cltd
xor
adc
mov
mov
out
mov
std
mov
lcall
cmp
ret
push
sub
xor
mov
adc
psrad
pop
sub
test
out
aas
addr16
es
repz
into
pop
outsb
inc
adc
push
or
sti
push
int3
icebp
push
cmp
movsb
push
fs
mov
scas
cmp
fidivs
sbb
hlt
lcall
lea
fwait
orb
add
int
push
dec
stos
xor
fistpl
mov
mov
imul
mov
jmp
mov
in
cmpsb
in
or
pop
sub
pushf
int3
imul
rol
adc
mov
vpmacsdqh
xor
lods
pop
xchg
adc
dec
add
mov
pop
ja
mov
mov
lock
ja
sbb
pop
out
cmp
stos
jg
push
insb
xor
pop
lods
xor
loopne
addl
mov
add
es
jge
repz
or
pop
adc
mov
pop
movsl
test
dec
cs
push
or
mov
add
push
pop
outsl
or
sbb
hlt
adc
xor
or
dec
add
pop
inc
test
js
icebp
cmp
mov
rol
jne
push
shlb
adc
imul
jmp
lahf
mull
clc
jg
push
push
dec
jg
mov
cmpsl
out
fidivs
call
mov
mov
sbb
rorl
lcall
mov
lea
mov
testb
xor
cmp
aas
jne
fnsave
mov
jg
adc
mov
push
xchg
lods
test
movsl
push
daa
repz
xor
movsl
xchg
fs
cli
mov
rorb
popa
xchg
xchg
xor
xor
test
jae
cmp
lea
push
push
push
movsb
mov
and
mov
push
or
lea
inc
push
inc
jnp
sbb
imull
loope
pop
mov
fdivs
xor
gs
jmp
xchg
sbb
push
aas
sbb
mov
sbb
dec
or
clc
or
gs
pop
data16
imul
out
int
aaa
fsubrs
in
dec
inc
mov
xchg
adc
not
aam
mov
inc
sub
lcall
addb
mov
jae
xchg
inc
and
daa
pop
mov
dec
lods
inc
insl
and
pop
sbb
jge
xchg
out
clc
fwait
aad
insb
cld
out
cmp
push
enter
jp
pop
in
call
cmp
inc
sub
mov
fwait
mov
nop
arpl
jg
add
xor
jns
out
mov
aad
mov
jnp
fld
push
jnp
lahf
ficompl
and
dec
and
enter
inc
jb
adc
fists
fisttpl
push
mov
fsub
cwtl
dec
data16
imul
ljmp
add
sub
movsb
cltd
jae
push
push
xor
ss
rolb
dec
iret
cmp
popf
orl
adc
xor
rorl
and
adc
aas
dec
cli
dec
mov
cmpsl
pop
rorl
adc
lret
sub
mov
addl
sbb
inc
xchg
inc
lock
mov
shrb
outsl
sbb
dec
ret
pop
fisubl
ss
stos
add
or
pushf
lock
es
stos
mov
mov
hlt
and
lcall
dec
lds
fs
iret
ss
push
lods
scas
lea
jle
int3
add
in
pop
pop
cmp
push
cmp
mov
mov
xor
stc
outsb
dec
jle
test
outsl
test
out
or
ret
fildll
mov
cs
pop
mov
mov
sbb
les
sti
fisubrs
and
popf
mov
lds
adc
test
cmp
push
sub
cmpsb
std
int3
divb
aad
popa
insb
mov
dec
inc
nop
pop
mov
mov
mov
xchg
outsl
adc
aad
in
arpl
push
dec
rolb
in
add
and
inc
sbb
and
xchg
mov
imul
jg
sub
adc
repnz
inc
in
jg
jle
cld
add
mov
ljmp
or
xchg
fwait
and
pusha
out
negb
push
lock
imul
xchg
pop
pop
nop
ret
sbb
addr16
sub
and
add
pop
xor
and
xor
loopne
rcll
or
xorb
xchg
mov
pop
mov
loopne
shll
testb
sub
cmp
dec
clc
mov
aaa
scas
imul
mov
or
xlat
push
repnz
xor
pop
movsl
cli
and
pop
je
pop
ficoml
dec
mov
outsl
into
aad
and
pminsw
mov
shll
shlb
int
dec
inc
mov
and
dec
jbe
push
pusha
insb
xor
sbb
inc
scas
dec
push
data16
pop
pxor
pop
out
lods
cld
xor
rcpps
xor
cmp
or
dec
push
int3
jne
hlt
pop
pop
jmp
inc
shl
sahf
out
ds
pop
ficompl
push
into
cmp
jne
std
cmp
sub
movsb
popa
add
cmp
mov
xorb
out
into
cmp
test
je
hlt
push
inc
and
cli
sub
mov
mov
jmp
pop
jo
adc
lods
rorb
adc
movsl
sbb
pop
mov
ret
outsb
cmp
adc
jae
cmpl
and
mov
xchg
pop
jg
or
push
pop
and
insl
push
loope
push
jne
jae
faddp
or
jne
test
lods
incb
mov
xchg
hlt
mov
xor
arpl
sub
pop
out
push
pop
dec
loopne
pop
jge
add
xchg
les
repnz
lods
jbe
push
fisubrs
xchg
data16
imul
push
popa
lds
xchg
dec
xchg
in
dec
mov
frstor
mov
lods
ljmp
dec
inc
rol
push
repnz
out
lahf
add
outsb
test
aaa
xor
out
mov
cs
jmp
adc
add
call
lock
jmp
daa
sbb
inc
or
decl
jle
test
test
shrb
or
fnstenv
xorb
fnstsw
xor
add
and
mov
test
lods
dec
lods
stc
mov
xor
push
mov
pop
cmp
sub
imul
mov
es
adc
insl
mov
jmp
aad
aad
out
and
and
pop
pop
mov
jne
pusha
jg
ss
inc
fcoml
pop
push
xlat
lret
lods
pop
mov
push
arpl
inc
and
movsb
fbstp
push
xlat
ljmp
or
icebp
mov
mov
xchg
cmc
push
dec
imul
and
sti
mov
xchg
ja
push
jo
lahf
pop
scas
sbb
and
leave
push
jbe
jo
int3
adc
mov
cwtl
ja
add
and
cs
mov
in
sbb
pushl
jp
xchg
dec
popf
int3
sti
xlat
movsl
ret
aad
fisubs
and
scas
fcmovb
mov
sub
mov
push
sbb
add
daa
sub
leave
addr16
xchg
and
xor
push
fistpll
adc
mov
adc
andl
xchg
sahf
xchg
push
sti
popa
sub
addr16
push
jmp
shll
inc
adc
mov
out
mov
adc
and
jbe
pop
mov
mov
data16
cmp
push
lods
bound
imul
lret
sbbb
add
out
fisttps
sub
repnz
cmp
pop
pop
mov
cli
cltd
add
int3
testb
push
cmp
sub
lods
rcrb
push
pop
mov
mov
hlt
jp
mov
xchg
push
jp
or
mov
dec
xchg
add
push
jle
mov
std
mov
add
or
jg
decb
xchg
lret
loopne
insb
pop
stos
loopne
test
into
mov
add
fs
das
mov
mov
and
pop
out
pop
lods
mov
sub
cmp
jb
stc
arpl
or
sbb
and
push
mov
stos
arpl
sarl
test
aad
jge
push
sbb
jo
rorl
lds
mov
or
and
jmp
pop
cmpsb
mov
mov
jae
mov
push
xlat
lcall
lcall
dec
negl
sbbl
xor
les
stos
inc
sub
test
ret
mov
xor
mov
lock
mov
xor
mov
pop
jg
icebp
pop
fwait
xor
xchg
adc
lds
inc
adc
scas
cmp
push
push
clc
clc
sub
sbb
dec
movsb
xor
xor
mov
cwtl
je
inc
adc
inc
out
das
fwait
jle
mov
shr
or
out
pop
popa
mov
jnp
pop
sub
mov
into
sbb
cmp
lret
or
adc
in
scas
push
pop
in
es
sub
push
repnz
js
lods
mov
nop
jbe
popa
cs
and
iret
mov
mov
call
cmc
clc
in
or
mov
cmp
add
in
jbe
push
dec
pop
lods
cld
sub
mov
jae
out
fadd
xor
les
add
dec
lret
cmp
sub
bound
mov
cmp
and
outsl
push
hlt
push
or
and
mov
test
out
sahf
lret
mov
frstor
aad
cld
jecxz
pop
in
icebp
push
jmp
lea
dec
jg
pop
jne
mov
mov
je
fdivr
mov
and
push
fsub
mov
add
cmp
cltd
test
adc
cmp
je
jb
aad
js
push
pop
mov
cld
subl
testl
mov
xchg
add
mov
call
push
mov
inc
sbb
xchg
xchg
cmpsl
pushl
loop
sbb
inc
mov
icebp
imul
sbb
xlat
icebp
dec
ret
mov
jmp
repz
jecxz
sub
jnp
mov
stos
mov
movsb
ds
inc
adc
add
clc
in
ljmp
push
je
push
or
mov
cld
sub
sub
hlt
and
jae
cli
mov
mov
sbb
adc
movsl
jb
es
sbbl
jmp
inc
push
pop
and
sub
aaa
mov
int3
mov
add
imul
sbb
push
cmc
into
lock
rolb
lods
pop
xor
movsl
clc
inc
xor
push
das
int3
je
jmp
jne
shufps
fsubs
ret
xchg
xchg
int3
or
stc
lcall
dec
push
mov
xor
aaa
inc
inc
lods
fadds
xchg
push
in
int3
add
mov
cmp
popa
adc
inc
jge
pop
sub
dec
push
test
mov
cmp
shrb
aam
mov
dec
xchg
decl
loop
jle
jo
pop
dec
test
mov
dec
std
sti
ja
cwtl
gs
jle
arpl
inc
gs
je
test
jle
daa
sbb
dec
mov
xor
sbb
inc
pop
dec
sahf
mov
ret
sub
mul
aas
sahf
mov
mov
push
jp
testl
mov
pop
mov
mov
cmpsl
fcoms
push
lea
xchg
inc
sbb
cmc
gs
sub
pop
mov
insb
push
aad
ljmp
sbb
add
mov
pop
mov
clc
mov
jnp
sarb
mov
sbbb
out
cmpsb
dec
loope
inc
pop
or
fs
imul
ja
xchg
xor
lahf
outsb
pop
nopl
mov
out
imul
cli
and
in
div
inc
repz
lahf
out
push
dec
sbb
les
and
in
push
mov
lock
and
cmpl
int
popa
addl
pop
scas
sbb
ret
push
fidivs
test
dec
int3
loop
jmp
cmpsb
inc
xchg
pop
and
out
cmp
outsb
mov
sbb
xor
loopne
lock
cltd
les
in
inc
clc
outsb
jnp
lea
ljmp
ficoml
pop
repz
fdivrl
test
cmpsb
or
pop
xchg
pop
movsl
jo
mov
xlat
fiadds
inc
mov
or
outsl
test
cmp
and
adc
sub
pop
jl
clc
pushf
or
cs
or
inc
xchg
mov
ret
cli
fmuls
pop
cli
fs
xchg
dec
dec
lret
xor
jge
sub
xchg
xor
push
sahf
cmc
fsubrs
addr16
shrl
in
dec
aaa
mov
int
cwtl
filds
inc
or
jne
int
lock
inc
mov
cwtl
fsubrl
adc
mov
int
xor
fwait
pop
popa
xchg
leave
mov
pop
dec
add
mov
adc
lea
jns
nop
and
fmulp
movsb
cmpsb
bound
push
movsl
test
xor
movsb
lods
push
mov
xchg
std
push
or
popa
inc
repnz
sub
jp
mov
mov
cmc
lods
sar
xor
aam
pusha
dec
dec
push
mov
add
inc
sbb
sbb
shll
out
jp
sub
push
add
jge
lock
ja
aas
dec
dec
cltd
jp
dec
and
jno
faddl
inc
cmp
addr16
push
xchg
test
dec
xchg
adc
hlt
cmc
lea
ret
movsl
xchg
cmp
in
xchg
pushf
add
and
iret
or
or
pop
movsb
xor
addr16
mov
aam
jnp
jecxz
jnp
ds
cmp
and
jl
cmpsl
xor
mov
test
push
orl
cmp
mov
and
mov
call
fdivl
push
lea
push
sahf
cld
imul
mov
loopne
cld
repz
iret
les
mov
pop
xchg
mov
xor
es
loopne
dec
and
jecxz
xchg
pop
popa
push
adc
lods
jg
inc
orb
pop
out
stos
ljmp
sahf
loopne
je,pn
or
mov
les
jge
shl
out
out
arpl
and
mov
repz
dec
add
arpl
pop
or
shll
pop
adc
adc
lret
scas
inc
and
cmp
jo
cmp
fcoms
mov
and
pop
and
jo
or
andb
push
fs
push
mov
xchg
iret
shl
je
pop
lahf
adc
cmp
xor
hlt
mov
dec
ljmp
jle
cmpsl
es
adc
popa
jmp
inc
cmp
inc
in
stos
and
sub
mov
or
iret
pop
xchg
addr16
xchg
pop
or
inc
dec
sahf
es
sti
mov
int3
adc
inc
fsts
repz
std
and
das
andb
fsubr
lahf
adc
popf
mov
lock
in
popa
sbb
dec
cmp
cmp
push
add
dec
mov
sbbl
adc
out
jg
cmp
push
jno
sub
lret
sahf
lock
and
gs
mov
lods
fnsave
mov
aad
jb
inc
out
jle
jnp
aad
xchg
xlat
sbbb
adc
inc
fldenv
jmp
mov
sub
dec
mov
mov
jg
jmp
inc
dec
mov
sub
pop
loope
lods
xchg
mov
jecxz
mov
push
pop
sub
cmp
inc
addr16
pop
or
inc
daa
arpl
je
push
hlt
lods
ret
rep
xor
repz
stos
adc
vsubsd
daa
shl
jecxz
adc
push
popf
add
cmp
push
mov
jle
stos
jle
mov
pop
push
repnz
xchg
jae
out
stos
lock
test
adc
jle
dec
je,pn
ss
scas
jp
xchg
rcrl
mov
mov
inc
ret
sub
mov
pop
or
jecxz
xor
sbb
insl
cltd
jae
nop
xchg
or
jbe
inc
xchg
fs
stc
sbb
iret
cmpsl
mov
sub
int3
cmp
add
xor
test
and
imul
test
adc
or
xchg
pop
push
jo
xor
adc
jne
insl
xchg
std
or
pusha
push
mov
out
test
andl
push
mov
mov
fwait
mov
fisubrs
add
push
inc
ror
jbe
push
outsl
or
leave
dec
push
jne
out
xlat
arpl
cmp
fsts
mov
test
adc
jecxz
loop
jbe
scas
idivl
icebp
shrb
jbe
les
sar
mov
pop
push
fdivr
pop
add
scas
add
lods
mov
rolb
push
xchg
ds
fldt
cmp
push
jmp
mov
xchg
lret
pop
lret
stos
mov
call
data16
mov
imull
sub
dec
loope
xor
pushf
xlat
addr16
mov
hlt
int
push
pop
insb
adcl
lcall
pop
ljmp
jge
js
in
enter
je
sbb
mov
push
mov
fmull
adcb
mov
shr
xlat
mov
out
mov
dec
jno
sbb
scas
jne
aas
ljmp
xchg
push
dec
push
rcl
mov
arpl
inc
adc
push
imul
test
out
scas
jl
jbe
popa
sti
test
cmp
gs
push
fnstsw
pop
sti
stos
push
mov
test
test
ret
popa
sub
cmp
xor
lret
lds
les
cmp
outsb
aaa
ret
pop
sub
mov
sti
cmp
push
pop
and
daa
adc
or
push
xor
std
mov
lock
sarb
sbb
shll
popf
pop
jle
in
add
mov
add
push
gs
pop
and
movsl
divb
mov
or
mov
push
xchg
insl
jns
ljmp
jne
mov
ds
adc
pop
xchg
push
push
xor
or
sbb
push
sarb
xchg
cli
bnd
aas
jge
cmp
sbbb
mov
fs
fcoml
lods
xor
popf
or
cli
es
mov
or
fdivrs
and
shl
mov
cmp
push
xor
dec
imul
mov
cld
fsubrs
lret
mov
adc
push
fwait
mov
notl
push
jne
popa
je
adc
divb
mov
cli
mov
add
dec
popf
and
mov
popa
push
lahf
inc
push
aam
pop
mov
sti
cli
mov
jae
sub
int3
loop
ljmp
popa
inc
repz
pop
cld
in
in
xchg
sbb
or
hlt
imul
jne
imul
sbb
imul
adc
xchg
test
fistpll
insb
inc
or
stos
jp
clc
stc
shll
fidivl
cwtl
nop
inc
pop
fxch
mov
sub
mov
sub
add
jb
je
test
cmp
cmp
mov
bound
mov
out
add
lods
cmp
loope
ljmp
fwait
jmp
sbb
pop
inc
popa
jns
and
add
inc
xor
pop
aad
push
hlt
stc
push
cmp
lcall
mov
in
daa
cmpsl
mov
push
imul
inc
data16
mov
cmp
sbb
xlat
xchg
je
mov
push
fwait
andl
sbb
mov
hlt
jbe
and
inc
lds
ss
xchg
orl
inc
and
imul
outsl
sar
out
jge
scas
pushl
push
cmp
push
jl
loope
dec
jecxz
cmp
push
aad
lods
cmp
xchg
push
sub
or
mov
and
mov
lock
popf
js
out
jle
outsl
dec
clc
inc
in
cmp
enter
dec
pop
xor
mov
xor
and
popf
mov
es
lods
scas
inc
lea
iret
push
imul
and
sti
inc
add
clc
push
jbe
mov
mov
leave
data16
cmp
jb
pop
test
push
jl
stc
push
mov
in
inc
jmp
test
pop
xchg
and
shrl
lahf
xchg
lods
lret
fmulp
jg
repnz
jg
jmp
xor
lds
cmpl
cmp
call
xchg
mov
stos
call
or
sbb
out
iret
and
pop
out
cmc
fsubrs
mov
mov
lods
push
aaa
xlat
scas
push
pop
ds
mov
rcll
mov
cmc
fs
jp
adcb
loope
sub
stos
and
loope
mov
xchg
enter
add
stos
mov
cmpb
popf
shrl
addr16
cs
mov
jae
test
sahf
aad
lret
and
jno
in
mov
xchg
cltd
lods
mov
dec
xchg
push
loop
cmpsl
cmp
xchg
rolb
aaa
dec
cmp
ret
aas
mov
into
lock
dec
xor
mov
mov
dec
dec
jo
push
cmp
add
out
jge
push
lahf
adc
stc
dec
fs
ret
or
jb
hlt
js
and
dec
adc
aas
mov
xchg
in
jbe
mov
xlat
out
jl
es
inc
sub
fldt
and
push
repz
mov
sub
push
xor
dec
rcrb
sbb
movsb
cmpsb
dec
sar
jo
jns
jns
ror
mov
adc
adc
and
xor
mov
in
mov
sahf
jo
stos
lahf
addr16
cmpsb
in
inc
sbb
mov
lds
pushl
pop
or
lret
repz
xchg
cmp
cmp
std
xchg
cs
mov
sarb
into
mov
cmp
xor
pushf
in
pop
sub
mov
andl
inc
sub
jbe
scas
xchg
lock
or
fisttpll
dec
data16
faddl
jge
pop
sub
jmp
push
dec
dec
jno
sbb
icebp
daa
ret
push
lahf
rorl
rcr
add
jecxz
mov
or
addb
xor
cwtl
lea
in
stc
dec
dec
mov
movsl
repz
hlt
pusha
mov
inc
mov
and
popf
jecxz
enter
sbb
dec
dec
jg
daa
or
sti
xor
pop
mov
cli
cmpsl
in
or
inc
fcmovu
jae
aas
push
and
xchg
test
xchg
orl
pop
dec
cmp
sub
imul
loop
popa
movsl
mov
test
fwait
pop
fidivs
xchg
daa
mov
int
push
jle
rcpps
dec
aam
stos
movsl
test
scas
imul
outsl
mov
stos
inc
push
mov
ljmp
sbb
xor
xchg
nop
cwtl
xor
sbb
sub
cld
shrl
pop
andb
shr
jecxz
shl
int
hlt
jmp
outsl
adc
mov
rclb
push
add
or
push
jmp
push
mov
mov
lods
ja
pop
sbb
adc
dec
jno
fcmovbe
in
test
loop
pop
pushf
dec
outsl
orb
push
mov
out
in
std
fbld
rcrb
pop
dec
sbb
imulb
or
scas
imul
jle
mov
inc
xor
les
inc
in
ljmp
xchg
pop
hlt
jge
jno
aam
in
jb
mov
jnp
shrb
stc
jmp
xor
nop
pusha
pop
in
cmp
jmp
cwtl
inc
loope
lret
push
cs
and
les
jae
test
mov
pusha
lahf
fstpl
xor
adc
mov
cmp
or
mov
andl
dec
mov
inc
lcall
out
outsb
and
in
scas
call
leave
insl
pop
mov
cwtl
cwtl
movsl
nop
jl
push
xor
mov
movsb
ret
aaa
inc
or
jnp
jne
sbb
pop
push
xor
iret
jns
push
lahf
pop
or
daa
aad
or
shrb
push
int
clc
outsb
dec
scas
mov
xor
adc
or
mov
mov
add
add
aaa
pop
mov
test
sbb
dec
xor
jae
scas
jecxz
sub
xor
fxch
dec
push
aam
movsb
inc
and
mov
inc
insb
lods
inc
idivl
mov
or
rorb
into
jb
xchg
ja
fs
mov
fst
xor
jb
mov
test
pop
scas
xor
sub
jge
and
movsl
push
fcomi
push
mov
xchg
jmp
les
scas
add
in
add
sbb
mov
mov
mov
jge
xchg
xchg
pushf
das
and
and
push
add
ret
dec
dec
mov
lods
fsubrl
pusha
mov
repnz
pop
sub
xchg
add
cmpsb
push
aam
push
xchg
scas
int3
mov
xchg
jp
adc
push
mov
adc
jp
cmp
xchg
rolb
mov
mov
push
adc
mov
sub
sbb
jns
lahf
outsl
pop
lahf
jno
push
jge
cli
pop
cmp
fisttps
jae
jl
dec
jmp
push
dec
movsl
adc
rcrl
or
cli
pusha
ja
lods
cltd
inc
jno
mul
mov
mov
sahf
roll
push
lods
xor
pop
or
js
out
nop
sbb
xchg
mov
shlb
aaa
mov
aam
mov
pop
mov
pop
roll
jge
sbb
inc
mov
das
in
in
or
aas
jle
lret
inc
and
bound
ljmp
xchg
pop
aam
add
jnp
xchg
js
cmpsl
lods
std
scas
mov
daa
test
push
in
inc
hlt
loopne
adc
loope
xchg
fwait
imul
jae
adc
movsl
popa
mov
mov
push
and
inc
adc
adc
xchg
sub
in
dec
sub
test
out
pop
sbb
cmpsb
adc
into
push
jo
mov
rcll
cmp
dec
icebp
sub
push
mov
xchg
mov
js
push
lods
ss
aaa
mov
stos
cmp
mov
adc
fsubs
xchg
or
arpl
sbb
sti
push
scas
mov
jl
jge
sahf
sbb
movsb
add
sbb
mov
fst
shll
ror
ret
fistpll
stos
mov
in
pop
jne
push
sub
or
mov
leave
scas
add
jle
popa
int3
xchg
scas
les
loope
mov
dec
adc
ja
roll
in
dec
sbb
andl
jno
out
loope
pop
sbb
sbb
stos
sti
scas
roll
out
das
cmc
jle
dec
fcomps
test
mov
jno
mov
int3
sbb
test
pop
push
mov
xchg
test
sub
ja
add
jecxz
inc
xchg
add
or
xchg
stc
push
jle
sub
mov
mov
inc
aas
pop
push
pop
pop
or
mov
pop
ficompl
add
jge
sbb
add
stos
mov
lock
fsubs
push
mov
rcll
pop
int3
in
pop
or
mov
ja
push
inc
nopl
daa
movsb
aaa
ret
add
sub
ljmp
pop
repnz
mov
mov
lock
and
mov
pop
cmp
xor
pcmpgtb
inc
and
clc
mov
icebp
cmp
add
mov
xchg
sbb
std
mov
repnz
out
in
fwait
push
aas
fiadds
loopne
dec
jbe
lds
cld
insl
xchg
les
xchg
or
cmp
dec
adc
push
push
dec
test
sub
jbe
mov
push
sub
cli
mov
sti
fbstp
mov
jmp
hlt
jne
inc
push
dec
enter
lods
or
mov
inc
jae
xlat
jnp
test
and
or
scas
pop
jnp
add
or
ljmp
add
in
movsl
mov
cmp
mov
nop
mov
inc
jle
mov
inc
inc
js
shrl
mov
roll
bound
mov
adc
pop
outsl
adc
or
test
and
stos
lds
je
mov
mov
arpl
mov
lods
shrb
mov
call
icebp
push
and
cmpsb
add
rol
jg
dec
sbb
cmp
inc
or
icebp
lods
cmp
pop
dec
jmp
push
sub
inc
xchg
push
mov
pop
into
js
insb
dec
pushf
fbstp
add
sbb
xlat
adc
inc
adc
add
pop
push
cmp
movsl
lea
push
les
pop
dec
mov
add
mov
inc
xor
xchg
pop
cmp
das
mov
fldenv
sub
les
ss
xchg
xchg
push
notb
jnp
pop
push
loopne
aam
push
pop
arpl
loope
bnd
mov
int3
or
imul
or
push
jnp
stos
mov
mov
mov
pop
xchg
pushf
xchg
sbb
push
std
ja
add
adc
adc
cmp
lock
push
iret
mov
push
push
addb
xchg
and
stos
sahf
cmp
and
mov
add
loop
adc
mov
mov
mull
cmpsl
inc
mov
stos
add
sub
rol
ja
lods
mov
sbb
test
and
sub
mov
add
jbe
repz
int
mov
sub
scas
pushf
mov
mov
out
pop
mov
mov
enter
and
adc
sub
js
inc
loopne
xor
jmp
popa
sbb
jne
pushf
andb
lret
jmp
out
mov
pop
mov
sahf
pop
xor
cmp
add
sub
cmpsb
ljmp
les
cld
and
xchg
adc
adc
sahf
filds
pop
push
dec
lea
ss
clc
adc
xchg
aad
repnz
shll
jne
fmull
jne
cs
fmull
xor
shll
lret
test
mov
inc
int3
pop
pop
sub
sub
xor
imul
cltd
cmp
sbb
lret
mov
imul
cmp
jmp
repz
stos
pop
adc
cmp
shlb
xlat
push
es
jg
mov
dec
sub
dec
leave
xchg
dec
pop
js
sbb
mov
sub
mov
imull
dec
dec
push
cs
out
mov
jg
jecxz
pop
adcb
sti
dec
out
mov
int
push
test
push
ret
arpl
mov
movsl
mov
inc
push
xlat
aaa
jnp
dec
int3
divb
test
lods
mov
add
cmp
movsb
out
push
fildll
add
mov
stos
mov
rcrl
sbb
faddp
mov
xchg
movsb
test
mov
lds
cmp
mov
addr16
shll
out
pop
push
aas
das
pusha
xor
cmc
pop
pop
dec
cmp
and
mov
and
push
jp,pt
jl
mov
popf
lods
test
pop
xor
lcall
cmp
push
mov
cmpsl
push
dec
test
xor
std
test
cmp
add
bound
push
xchg
or
xchg
inc
lcall
jl
lcall
xchg
push
cmpsl
jo
imul
add
mov
adc
cmp
or
xor
xchg
shll
aam
push
loope
popa
push
lahf
jns
dec
sarl
movsl
sbb
call
outsl
mov
das
dec
xchg
les
xchg
mov
jmp
push
lds
pop
rorl
pop
iret
mov
clc
jne
pop
pop
or
pop
xlat
mov
cld
cmp
test
pop
pop
int
push
xor
jno
je
mov
imul
adc
adc
into
sub
add
mov
jnp
jmpw
xchg
xchg
xchg
inc
aaa
ret
jl
ljmp
jns
sub
bound
inc
ljmp
mov
loopne
push
sbb
mov
push
pushf
inc
ret
xchg
inc
add
mov
scas
lret
jae
aaa
jl
in
jbe
fucomip
mov
fs
fwait
jmp
xchg
cwtl
add
scas
dec
jnp
xlat
arpl
push
add
sbb
ret
dec
int
in
push
stc
sub
mov
mov
aaa
add
loopne
stos
and
std
into
fbld
fcoms
pop
in
fsubs
xchg
arpl
jns
mov
cmp
pop
outsb
stos
out
jo
cli
mov
stos
pop
xor
sub
loope
stc
inc
mov
das
sti
clc
push
jae
orl
imull
repnz
fistpl
jns
jle
adc
push
inc
fisttpl
xchg
mov
sub
sub
adc
inc
iret
sub
sahf
mov
pop
rorb
je
pushf
addb
add
test
cli
pop
mov
or
or
pop
mov
jge
inc
cmp
shlb
sarl
or
out
mov
push
push
mov
push
dec
and
mov
xchg
add
repz
test
mov
lods
add
out
shr
leave
js
adc
insb
addr16
cmp
dec
push
add
cmc
cmp
sbb
xor
stc
es
sbb
pop
mov
lods
je
jge
test
mov
add
cmpb
jne
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
