jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
and
jae
push
int3
jbe
pop
es
jp
cmp
push
add
add
add
or
sub
je
xor
push
add
add
push
add
add
jns
jae
loopne
daa
add
xchg
add
push
add
sbb
push
add
mov
lods
add
add
add
or
dec
add
add
add
and
add
push
add
adc
add
add
into
add
add
push
add
add
add
mov
add
add
add
add
insl
add
dec
add
add
jbe
mov
add
mov
add
add
jbe
push
add
add
add
add
add
push
add
add
add
add
add
add
add
dec
add
add
add
sub
in
add
add
insl
add
dec
add
xchg
add
mov
add
add
add
scas
add
push
add
add
pop
add
add
dec
add
mov
add
add
testb
add
inc
add
ret
add
call
add
push
add
inc
add
add
dec
add
icebp
add
popa
add
jno
mov
je
xor
dec
add
mov
dec
add
add
add
add
dec
add
add
add
push
add
faddl
pusha
add
jbe
inc
add
mov
pop
add
jbe
mov
add
add
call
add
add
add
push
add
add
add
pop
add
jbe
and
push
add
add
dec
add
add
and
add
call
add
add
push
add
add
add
add
add
mov
add
mov
mov
add
push
add
out
add
push
add
dec
add
add
add
add
push
add
dec
add
jl
js
mov
add
jbe
lcall
add
add
and
add
sub
lret
add
pop
add
add
add
add
add
dec
add
add
mov
add
inc
add
mov
xchg
add
pusha
add
add
add
add
push
add
lods
add
add
add
popa
add
add
add
dec
add
rolb
add
dec
add
jbe
popf
add
add
add
add
push
add
add
xchg
add
jecxz
push
add
into
add
add
add
push
add
add
fadds
aam
xchg
adc
pop
add
add
jbe
popa
add
pop
add
and
add
jbe
inc
add
faddl
mov
scas
add
add
add
sbb
and
adc
add
cmp
jbe
ret
add
inc
add
add
add
dec
add
pop
add
add
mov
dec
add
jbe
das
add
sbb
add
add
push
add
add
das
push
loop
adc
data16
add
add
add
add
push
add
add
add
add
add
push
add
add
push
add
add
add
add
push
add
testb
add
pop
add
aas
add
add
add
add
into
add
xor
mov
add
add
add
push
add
add
add
add
add
push
add
mov
pop
add
xchg
add
add
es
add
xor
push
add
add
add
add
and
mov
mov
and
adc
cmp
add
cmp
add
add
add
add
add
rolb
add
sub
add
add
add
add
add
add
pushf
add
popf
mov
adc
aaa
and
and
ficomps
aas
in
push
add
sub
sub
sti
clc
cmp
sub
inc
or
jg
enter
test
mov
inc
rcll
mov
xor
out
rorl
dec
pop
xor
ret
fadd
rcrl
and
sti
leave
in
inc
push
sub
jp
sub
stos
push
imul
dec
pop
mov
int
jae
fs
test
out
add
push
dec
mov
mov
repz
bound
cld
cli
mov
jp
nop
and
testb
out
sbb
lret
and
xor
arpl
cmp
std
arpl
and
adc
test
and
pusha
adc
mov
push
cmp
fs
jo
lahf
scas
stos
xor
or
jmp
adcb
dec
mov
scas
inc
dec
mov
inc
xlat
inc
mov
inc
or
aad
sub
test
gs
cmpsb
sub
cld
jnp
pop
add
adc
jb
ficoml
int
mov
cmp
aas
fisttpll
pop
lret
fs
mov
mov
mov
and
dec
data16
les
sbb
dec
popa
xchg
push
jnp
adc
addr16
rclb
inc
mov
clc
cmp
sbb
sbb
test
shl
filds
jg
xchg
jbe
sub
loopne
out
sub
xchg
aam
xchg
int3
cmp
xchg
pop
sbb
or
push
comiss
test
mov
lock
or
jp
xor
xor
xlat
mov
jno
xchg
mov
dec
loope
adc
add
test
add
sub
cmp
iret
test
pop
inc
inc
mov
enter
test
push
sahf
cmpsb
sub
or
test
pop
aas
or
shr
pop
xor
xchg
inc
push
or
and
xchg
lcall
mov
xor
xor
mov
dec
fsubs
scas
in
xor
test
ds
jp
adc
push
add
cmc
inc
mov
nop
aam
stc
push
add
mov
jno
mov
sbb
jne
sub
cmc
lock
jle
push
push
jb
daa
clc
fs
cmpsl
dec
movsb
xor
shll
mov
jo
or
push
call
mov
mov
in
dec
mov
ret
mov
sub
xor
rolb
mov
rolb
dec
mov
jecxz
mov
lahf
sar
jo
in
cmpsb
fwait
repnz
fwait
pop
out
pusha
mov
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
push
sbb
dec
cs
ds
push
jle
cs
pop
adc
pop
sahf
test
sahf
and
out
sbb
push
nopl
ds
dec
pop
pop
dec
outsb
jg
inc
test
jl
into
icebp
out
out
pop
mov
es
push
outsl
inc
pop
jbe
imul
fmulp
fucom
mov
mov
push
dec
bound
inc
push
mov
scas
jne
data16
std
push
inc
mov
add
movsb
push
sbb
int3
cs
rorb
xorb
push
inc
mov
jb
mov
xorl
addr16
filds
mov
mov
data16
sahf
popa
lahf
mov
fwait
xor
sub
pop
push
bswap
cmp
jg
mov
imulb
inc
loop
dec
lret
scas
add
xchg
out
leave
loope
ja
dec
rcrb
insb
sahf
dec
jle
outsb
xchg
xchg
pop
fs
fisubl
push
out
loopne
lock
dec
mov
repz
mov
jno
popa
fists
mov
mov
adc
test
xchg
push
das
cs
sub
pop
pop
inc
dec
outsb
jg
std
xchg
lahf
xchg
mov
cmpsl
xchg
jecxz
and
out
fnstsw
jnp
dec
push
pop
inc
sub
xor
insb
or
sub
fcompl
int3
mov
mov
dec
dec
dec
cmp
cmp
cmp
sahf
cli
jmp
lret
lahf
stos
nop
lods
iret
sahf
lcall
dec
push
ds
adc
outsb
jg
outsl
mov
mov
iret
out
out
push
pop
push
ucomiss
ds
dec
pop
pop
dec
outsb
jg
outsl
mov
mov
iret
out
out
push
pop
fstpl
inc
push
shll
int3
test
cmpsl
mov
icebp
js
in
rolb
scas
xchg
lea
gs
mov
sbb
sub
jno
inc
adc
sub
push
in
xchg
cmp
andb
xlat
sbb
cmpsl
or
lahf
cmp
jnp
lea
xchg
jo
cmp
lea
in
daa
test
dec
mov
jb
cmpsl
sahf
adc
cli
sbb
mov
mov
mov
jecxz
adc
addr16
cmc
push
mov
sub
dec
xchg
push
add
inc
pop
scas
mov
mov
jnp
mov
and
shrb
in
iret
xor
adc
pop
and
sbb
or
ss
pop
jecxz
xor
sbb
pop
or
jmp
test
mov
enter
xorl
or
jle
fistps
sti
lret
add
ss
sarb
fiadds
inc
lcall
std
mov
pop
push
pop
or
popf
icebp
push
jns
adc
clc
mov
push
jecxz
push
mov
lods
das
sub
out
push
push
xor
mov
mov
arpl
icebp
roll
cltd
vpaddd
adc
mov
mov
and
push
jb
mov
mov
jecxz
jbe
leave
mov
sub
jl
xchg
mov
pop
into
out
mov
add
movsl
jns
in
loope
neg
jge
mov
adc
inc
mov
js
in
loopne
sbb
pop
push
and
jmp
lock
cmp
mov
sbb
pop
stos
cmc
dec
xor
cmp
fidivs
jge
pop
movlps
fsts
mov
add
mov
pop
or
push
js
xlat
jmp
xchg
popa
fdivr
add
jbe
dec
jecxz
cmp
into
outsb
stos
sbb
mov
inc
or
jle
loopne
leave
lock
popa
fmull
sub
aad
jo
test
jle
pop
adc
icebp
iret
iret
adc
mov
adc
pop
mov
mull
cmp
in
ret
insl
mov
cwtl
and
pop
cltd
jns,pn
push
or
jp
push
xchg
mov
and
mov
movsb
repnz
das
subb
ljmp
shrb
das
ja
pop
xchg
inc
or
leave
cmp
mov
adcl
inc
adcb
push
mov
push
sub
sub
xor
aad
cltd
sub
ljmp
bound
daa
cmpsl
adc
mov
or
push
xchg
pop
fisubrs
iret
shll
gs
ret
pop
add
outsb
mov
loopew
xchg
in
cwtl
aaa
sbb
movsb
dec
jno
ret
push
lock
pop
mov
bound
stos
add
jo
mov
cwtl
xchg
mov
cmpsb
loopne
cwtl
mov
mov
mov
ljmp
pop
xchg
push
fcmovb
jne
cmp
clc
jne
imul
sub
out
roll
cmp
out
pop
push
fmuls
mov
gs
das
jno
aas
jle
jmp
scas
dec
mov
das
cmp
vcvtsi2ssl
pop
hlt
add
mov
and
mov
cmpsl
cmp
sbb
cmp
fstps
es
pop
in
addl
sub
jge
pop
fwait
mov
je
cltd
sub
lret
or
or
out
pop
add
js
inc
mov
or
ds
mov
mov
push
push
insb
inc
rorb
rol
les
mov
scas
les
sbb
aam
sub
sbb
sbb
loop
sbb
add
jmp
xlat
cmp
jmp
pop
xor
xor
cmp
push
enter
stos
xchg
xchg
es
mov
rcrl
cmc
mov
in
jg
xorl
in
inc
lcall
cmp
lea
mov
and
push
imul
aas
lcall
daa
push
jnp
rorl
dec
les
fstps
jle
xchg
scas
inc
jge
mov
or
or
jecxz
into
cmpsl
lcall
pop
mov
or
lods
dec
pop
rcrl
pop
mov
mov
dec
or
jle
ficoml
les
sub
cmp
xor
inc
jg
shr
mov
dec
rcrl
xchg
stos
add
sub
ds
xchg
pushf
pop
pop
dec
dec
fwait
xor
jg
pop
mov
jmp
cmpsb
dec
or
push
in
dec
repz
fmuls
stc
push
or
jmp
lods
popa
cmp
jnp
lret
push
adc
xchg
outsb
daa
push
pop
push
fisubrl
nop
dec
ljmp
jo
xorb
lret
push
or
rclb
fcmovnbe
push
ss
ds
add
clc
dec
ret
hlt
arpl
jge
cli
add
cmpsl
jne
push
cwtl
mov
inc
sub
jnp
pop
leave
outsb
sub
pop
mov
sar
mov
mov
fistpll
xchg
mov
fdivrs
pop
jge
push
repz
jge
movsb
dec
sub
shrb
adc
iret
mov
loop
nop
mov
int
out
imul
shrl
jae
call
aad
sarb
mov
and
clc
pop
ljmp
adc
fs
pop
int3
je
hlt
add
jge
data16
jge
in
push
lret
and
adc
push
dec
fistpll
mov
popf
clc
adc
inc
outsl
mov
push
mov
adc
push
sbb
int3
pop
jge
jns
clc
and
jg
sbb
ljmp
out
xorb
xorl
adc
icebp
mov
xchg
cltd
mov
popa
push
filds
fwait
in
mov
lea
daa
and
inc
shll
rorb
je
iret
xlat
mov
jbe
ret
xchg
in
pop
jnp
or
inc
test
or
xor
mov
push
jmp
adc
cmp
adc
adc
lahf
imul
mov
mov
adc
outsb
mov
inc
notl
fs
jg
inc
xchg
add
add
sbb
pusha
push
shr
lret
iret
out
jg
mov
mov
pop
xchg
dec
xorb
adc
pop
lcall
adc
fistl
adc
jns
notb
popf
jmp
ficoms
xchg
negb
pop
jbe,pt
aad
ljmp
sbb
insl
mul
jns
daa
mov
push
movsb
fimuls
mov
dec
mov
adc
cmp
xchg
ret
adcb
repnz
bound
cmc
std
movsb
dec
addr16
sbb
adcl
lock
mov
push
loope
rclb
sbb
out
sub
push
mov
sub
sub
pop
pop
mov
mov
ss
pusha
je
mov
nop
jb
push
adc
sbb
idivl
rol
mov
mov
sbb
add
les
jns
xchg
test
sti
rorl
leave
xor
jne
mov
dec
xchg
ds
aas
adc
mov
imul
jnp
push
push
lret
dec
ds
mov
call
jle
icebp
add
pop
pushf
dec
inc
leave
add
out
ja
shrl
add
test
lcall
add
mov
lods
dec
mov
daa
fwait
addr16
mov
cltd
add
mov
call
test
cld
adc
pushf
outsl
inc
push
sbb
das
sbb
add
lock
cmp
loop
ror
ljmp
lds
js
lret
lods
ret
mov
lret
push
xor
aas
jbe
or
and
add
sti
fstpl
dec
insl
ljmp
mov
stos
add
sbb
rclb
addb
or
popf
sub
loop
fwait
mov
xchg
call
outsl
pop
or
mov
push
sub
movsb
mov
push
mov
test
popf
sbb
lea
leave
cmc
pop
stc
popf
adc
add
faddl
rcrb
cmpsl
add
ds
jg
fwait
push
ficompl
cmp
pop
nop
jno
js
push
pop
jle
std
push
jl
shr
jp
lods
lods
jl
dec
mov
bound
xchg
leave
rcrl
loop
bound
xchg
jl
jge
mov
or
mov
inc
add
and
dec
sub
xchg
mov
data16
jns
or
stc
in
push
lahf
and
fcoms
xchg
xchg
adc
or
add
test
push
int3
lret
outsl
decl
mov
inc
dec
adc
ss
dec
push
outsl
int
jecxz
bound
mov
pop
push
sbb
daa
imul
jge
mov
sbb
pop
test
inc
les
arpl
push
mov
push
shl
xor
es
cwtl
in
mov
cwtl
pusha
ss
pop
insl
cmp
push
shrb
adc
mov
int3
je
andl
and
xchg
lds
jmp
data16
dec
dec
jg
movsb
cmp
mov
pusha
mov
call
mov
pop
push
xchg
cltd
lahf
push
cmovne
and
jle
pusha
mov
movl
adc
std
push
stos
jno
mov
cmpsl
pop
mov
loopne
test
lret
loop
xor
shlb
ja
cmc
sbb
das
lret
gs
lea
dec
shll
inc
lods
mov
inc
mov
fisubrs
hlt
int
add
xchg
jecxz
mov
jae
push
addr16
mov
mov
lcall
mov
inc
test
test
jo
mov
stos
cmpl
ds
lock
imul
outsb
adc
xchg
aaa
jnp
sub
push
jnp
push
rcr
pop
mov
divb
pop
mov
pop
ret
scas
nop
pop
push
bswap
imul
call
loop
push
pop
data16
enter
scas
clc
xor
call
fsubrs
xor
rorb
arpl
lcall
xchg
sub
mov
sti
fistpll
mov
lret
jmp
pop
aam
sub
mov
pop
shrd
sbb
cmp
in
stos
aas
daa
imul
adc
push
rorl
push
mov
mov
add
outsb
inc
xor
xchg
cmc
jmp
iret
xor
loop
lock
lods
lret
ret
nop
shrb
test
jge
mov
ljmp
fbld
gs
or
fisubrs
call
pop
mov
int
jge
movsb
dec
inc
pop
sti
sahf
loopne
inc
fs
cld
pop
in
roll
mov
std
out
sahf
lods
shrb
iret
pop
sbb
jae
xor
out
xlat
in
sahf
mov
mov
mov
bound
sbb
mov
xor
xchg
dec
add
inc
divb
jnp
inc
adc
fiadds
dec
mov
pop
mov
add
bound
inc
mov
repz
movsb
mov
pop
mov
mov
loopne
adc
mov
clc
sbb
pop
in
cmpsb
jmp
jne
test
test
int3
add
aaa
cmpsb
ss
inc
jge
in
pop
mov
sbb
out
jns
mov
iret
cmp
out
movsl
push
ret
jbe
movsb
jp
pop
push
mov
xchg
jle
or
jno
inc
daa
icebp
add
push
jne
sbb
js
dec
dec
jae
push
movsb
clc
cmp
xor
loopne
pushf
popf
addr16
test
push
xor
jne
in
pop
mov
fwait
sbb
int
loope
dec
cmp
mov
sub
iret
arpl
movsb
add
pop
fcoms
sub
ljmp
pop
cmpsl
pusha
mov
lods
pop
sub
out
cmpsl
xchg
stc
dec
mov
mov
jge
push
rorb
push
movsl
dec
fstpl
pop
ffreep
pop
inc
jg
xchg
dec
xchg
mov
adcl
push
mov
fs
sbb
insb
jno
dec
sbb
add
push
pusha
jmp
imul
xchg
jg
sub
test
sbb
dec
out
dec
add
jmp
push
imul
repnz
cs
sbb
sbb
into
repnz
pop
xor
bnd
cwtl
or
cli
or
mov
fisttpll
jge
fnsave
inc
xchg
add
mov
into
clc
mov
shl
and
mov
roll
movsl
imul
ret
adc
lcall
fisubs
push
or
fisttpl
mov
add
cmpsl
lret
bound
sbb
xchg
sub
jo
inc
xor
inc
push
test
stos
mov
repnz
xchg
adc
pop
and
das
test
movsb
subb
push
sbb
mov
dec
pop
push
lods
cmp
jp
test
adc
push
dec
cmp
shlb
xchg
lahf
gs
sub
pop
rorl
std
or
ljmp
and
push
cmpsb
mov
sbb
stc
cltd
rol
into
pop
or
lods
loope
jge
xlat
aas
es
pop
add
test
fwait
pop
fwait
ss
ds
xchg
jle
or
xor
std
ror
les
pop
mov
adc
test
and
cmpsl
jae
xchg
sbb
cmpsb
adc
push
adc
js
in
fildll
faddp
je
inc
xchg
or
mov
les
fdivl
imul
jno
mov
xor
js
mov
icebp
nop
test
add
fisttps
call
mov
mov
pop
icebp
les
outsb
add
loop
sti
jge
test
mov
sbb
aam
or
lret
add
cmp
xor
xor
insl
sub
lods
cmp
push
push
push
sti
inc
jge
push
and
adc
fnsave
aas
jmp
popa
push
cltd
jmp
push
daa
out
jmp
adc
push
add
into
mov
cmp
iret
sbb
in
sbb
gs
jne
dec
int
push
pop
jle
popf
mov
xor
test
xor
test
mov
mov
xor
sub
jmp
cmp
fsts
sbb
in
jmp
add
lcall
cmp
loope
lret
jno
xchg
jge
push
stc
or
jmp
lcall
and
jno
xor
scas
aaa
push
into
adc
aaa
js
sub
mov
mov
aad
iret
adc
push
loope
data16
das
mov
mov
out
xchg
pop
lret
scas
pop
jnp
fildl
decl
shll
pop
mov
inc
sbbl
adc
sbb
pop
loop
inc
xchg
fcomip
dec
das
loop
or
jne
adc
outsl
mov
mov
adc
ret
nop
adc
pushf
jo
sbbb
outsl
push
xchg
iret
adc
xchg
fs
jp
xlat
mov
dec
xor
fwait
int
insb
xchg
cmp
fs
xchg
add
fwait
mov
fwait
js
stos
enclu
pop
filds
and
mov
insb
cmp
lret
jge
outsb
pop
mov
cli
aam
mov
in
sub
movsl
std
cmpsl
frstor
aaa
mov
int
sub
fdivs
inc
pushf
int3
fwait
cwtl
lods
push
fstpt
int3
dec
mov
decl
or
movsb
xchg
or
cli
aad
fdivr
sub
push
inc
inc
and
cmp
xor
push
and
jb
repz
lret
stc
or
mov
movl
push
add
pop
jge
test
leave
ja
jb
push
push
push
xchg
add
push
sub
pushf
and
or
sub
mov
lods
push
fdivl
cmpsl
cmp
repz
or
stos
ret
push
daa
cmp
mov
push
cmpsl
xchg
mov
mov
jne
cmp
jns
call
jmp
out
mov
scas
cmp
pushf
dec
mov
xchg
xor
scas
fsub
push
pop
dec
jns
push
aaa
add
jg
sbb
xor
daa
xchg
daa
andl
mov
jl
xchg
dec
adc
xlat
es
add
lds
imul
pusha
pop
mov
lahf
sbb
pop
xchg
sbb
data16
lea
iret
adc
insl
outsl
fidivrl
jg
jne
mov
jne
movsb
inc
sub
mov
ss
adc
ja
aas
std
cld
adc
daa
lds
mov
sub
dec
fwait
mov
rcrb
hlt
outsl
fidivl
mov
jno
lods
lret
or
push
mov
fwait
mov
stc
xor
push
mov
push
out
xlat
push
jno
hlt
add
push
sub
inc
cltd
cmp
sub
std
jg
lods
adc
filds
lahf
and
mov
or
aad
jecxz
jmp
daa
lock
ds
lds
pushf
and
jmp
insb
and
das
cli
xchg
aas
sbb
lock
nop
mov
sub
test
jmp
lret
xor
cli
adc
cld
jns
inc
sti
xchg
push
lcall
imul
mov
mov
lods
xchg
push
push
rolb
aam
jne
fs
mov
sub
lods
push
test
adc
mov
mov
and
ret
push
iret
je
jg
ret
loope
test
or
popf
or
addb
jo
js
mov
aad
xchg
inc
cwtl
cs
xchg
add
int3
jo
jp
mov
cmpsl
loope
sbb
or
fidivs
mov
loope
neg
inc
push
repnz
mov
mov
jg
out
xor
push
idiv
insb
pop
into
xor
sbb
retw
cld
loop
xchg
push
pop
movsb
fcomps
dec
push
adc
sbb
pop
lcall
ret
push
sub
jmp
mov
mov
sbb
push
mov
sub
aaa
and
ret
repz
fidivs
je
aad
int
mov
les
adc
mov
inc
push
pop
inc
aad
xor
je
ret
mov
ss
int3
push
inc
iret
jae
xchg
roll
sub
fs
test
inc
sub
lods
and
insb
or
adc
arpl
mov
dec
inc
sti
pop
outsb
mov
dec
inc
or
shrb
jae
push
in
fnstcw
dec
popf
dec
mov
mov
inc
mov
pop
outsb
scas
or
out
jbe
lock
rcrb
lods
push
mov
mov
pop
mov
je
leave
push
lods
mov
fmul
jo
pusha
add
dec
xor
mov
dec
stc
pop
xor
stos
fisubrs
push
ror
fldcw
mov
push
push
inc
xor
int3
rcl
xchg
sbb
lahf
mov
data16
les
push
lds
push
inc
xchg
push
add
js
mov
sub
sbb
mov
mov
andl
xor
pop
mov
loop
movsl
mov
je
jl
stc
ljmp
mov
stc
push
fsubrl
inc
cmp
es
jns
pop
movb
lds
pop
fsubrl
and
sub
scas
mov
lcall
inc
adc
inc
or
and
jge
cmc
pop
jg
out
jge
dec
dec
ficoms
jg
scas
adc
or
loopne
scas
fiaddl
movsb
xchg
repnz
aaa
popf
shll
movsb
sub
push
mov
adc
out
mov
xchg
and
adc
out
shll
xlat
fildll
dec
push
cwtl
mov
push
fidivrs
fdivr
push
pusha
and
lahf
es
push
mov
jb,pt
xchg
int
cmp
mov
icebp
xorl
adc
xor
subb
sti
and
push
out
outsl
ja
xchg
xchg
adc
les
push
cli
ret
test
xchg
inc
add
pop
mov
aad
ja
push
fsubrp
dec
pusha
loopne
push
mov
aaa
pop
loope
hlt
mov
addr16
mov
paddsb
cmp
imul
dec
scas
xchg
push
rolb
aaa
push
adc
loop
loopne,pn
adc
in
leave
mov
mov
in
loope
jg
sbb
popf
loope
cwtl
jp
sbb
pusha
and
and
and
nop
mov
fidivrl
rorb
sbb
jmp
push
in
pop
ret
iret
or
add
stos
mov
jmp
xor
add
push
sub
insl
xor
int
pop
sub
sub
lods
pmaxsw
mov
ja
lcall
ss
notb
popf
inc
test
mov
push
push
cs
fwait
adc
sub
and
push
mov
inc
inc
test
mov
mov
mov
movsb
xchg
or
ljmp
jg
repz
dec
shlb
xchg
insl
ret
cmp
dec
or
ret
js
cmp
sarl
lret
out
insl
popa
xor
insl
adc
add
clc
and
adc
cmpsb
inc
lahf
mov
jmp
inc
mov
insb
imul
mov
jno
shrl
in
adc
pusha
pushf
mov
add
sti
lock
jnp
sbb
adc
mulb
cmpsl
xchg
cmp
mov
out
cmp
data16
cwtl
and
push
daa
out
pop
xchg
icebp
sub
jae
int
ds
dec
pop
pop
dec
outsb
jg
outsl
mov
mov
iret
out
out
push
pop
push
ucomiss
ds
dec
pop
pop
dec
outsb
jg
outsl
mov
mov
iret
out
out
push
sbb
add
daa
sub
pop
and
jnp
outsl
mov
mov
iret
out
test
cmp
sub
sbb
outsl
dec
pop
pop
dec
out
scas
jno
popa
and
mov
xchg
xchg
jo
pusha
jecxz
roll
cmp
ret
or
arpl
push
rolb
mov
add
pusha
jecxz
roll
xor
add
lock
inc
rclb
inc
mov
mov
add
pusha
jecxz
jnp
shll
and
lock
ret
add
rorl
addr16
lea
sub
sti
mov
jo
xchg
movl
js
pop
pushf
js
repnz
mov
pop
in
shr
rorl
cmp
push
out
mov
mov
leave
or
gs
fidivl
cmc
out
fiadds
mov
sub
adc
adcb
xor
xchg
ret
inc
jnp
mov
lret
dec
push
insl
xor
data16
mov
push
out
or
cmpb
in
fwait
mov
pop
xchg
dec
inc
loopne
and
outsl
add
pop
push
mov
and
movsl
or
lods
stos
pop
push
xor
fcoml
addb
push
inc
leave
xor
add
lock
loopne
rolb
or
adc
jecxz
nop
push
in
push
dec
int3
jg
test
xorb
sub
pop
loope
cmc
push
lock
mov
mov
push
fsubrl
push
std
inc
out
adcb
xor
inc
arpl
outsl
stc
jb
push
push
andl
adc
loopne
rclb
inc
mov
mov
add
pusha
jecxz
roll
xor
add
rclb
inc
mov
mov
add
add
sub
mov
gs
ficoml
rolb
aas
rcr
call
test
sub
cmp
adc
inc
mov
test
push
jne
adc
push
jecxz
nop
cltd
sarb
lods
xchg
cwtl
add
lods
mov
jl
les
sbb
sub
mov
roll
push
into
sahf
jle
mov
pop
add
pop
mov
push
mov
lods
or
mov
aas
adc
xchg
cmp
out
sub
enter
js
mov
mov
js
movsl
mov
xchg
cmp
jge
inc
cmp
cmp
xchg
or
mov
xor
stos
adcl
push
push
jnp
cli
inc
mov
jmp
in
stos
std
leave
test
call
xchg
xlat
rorb
hlt
mov
nop
xor
push
gs
loop
jl
aas
rorl
or
push
pushf
sbb
pop
adc
and
fsub
out
push
mov
pop
inc
jne
imul
loope
ja
or
xor
add
imul
rolb
add
and
cmpsb
ss
cmp
sbb
dec
push
insl
daa
sbb
cld
or
and
cmc
pop
push
jb
in
sub
sub
and
fcoml
lahf
sahf
jbe
inc
xor
notl
jno
cmp
adc
push
lock
out
jne
insl
stc
mov
jae
jmp
mov
push
mov
fidivrl
lcall
mov
jo
sti
imul
out
mov
stos
inc
push
sub
xor
jp
fwait
in
das
insl
pop
push
jecxz
jecxz
adc
inc
mov
xlat
inc
inc
mov
or
push
jne
arpl
push
xor
dec
loop
fidivrl
xchg
leave
jle
nop
adc
adc
mov
divl
cmpsb
ss
addl
lods
inc
sub
mov
jb
pop
jns
cmpsb
int3
mov
imul
mov
enter
adc
xor
ret
outsb
pop
lods
es
lcall
push
inc
pop
xchg
subb
loop
mov
ret
test
pop
sub
lea
leave
test
aas
popa
cmp
movsl
ret
or
push
sbb
adc
cmp
mov
push
insb
cmp
into
pop
jl
lods
cwtl
out
mov
leave
retw
cmp
ret
rorb
fisttps
movsl
pop
fcoml
shrb
push
jb
lock
mov
mov
sbbl
pop
icebp
xor
mov
repnz
lahf
xchg
mov
in
fsubrs
mov
sub
inc
daa
clc
test
push
lahf
mov
cld
cwtl
mov
jbe
push
lods
xor
jbe
pop
or
cltd
lret
pop
jl
loope
jp
jmp
mov
sahf
test
push
not
bound
leave
and
test
xchg
xor
dec
cmpps
inc
mov
and
stc
in
fistps
outsb
push
lret
dec
mov
popf
pop
cs
pusha
andb
aaa
push
mov
and
pusha
pop
ud0
aad
enter
push
sti
idivb
jge
and
lcall
stos
int
shll
lahf
jnp
push
or
repnz
mov
outsb
daa
and
out
xor
xlat
sti
call
mov
push
jg
scas
rcrb
das
mov
idiv
xchg
or
jl
ss
es
mov
xor
xor
hlt
test
pop
and
pop
xor
pusha
sub
inc
and
lock
repz
mov
add
sbb
dec
mov
addl
aam
popa
and
cmp
or
call
push
mov
sahf
in
mov
data16
scas
sub
inc
jle
shr
and
pushf
xor
lds
lods
insl
xchg
les
pop
mov
in
test
enter
mov
int3
and
xchg
mov
call
xchg
mov
sub
dec
out
lods
jne
movsl
shrb
pop
scas
adc
cmp
cwtl
adc
arpl
insb
ja
out
icebp
sbb
sbb
xor
mov
push
mov
push
mov
inc
test
xor
imul
mov
shr
mov
vpand
cltd
imul
movb
dec
imul
ljmp
filds
movswl
jbe
add
inc
mov
inc
xchg
dec
jbe
mov
mov
loopne
mov
arpl
mov
xlat
lret
pop
arpl
pop
dec
cmp
ret
push
xlat
push
ja
lods
daa
push
cmpsb
outsl
inc
inc
mov
sbb
ja
int
lret
divl
inc
inc
dec
sarb
mov
adc
xchg
mov
mov
cli
cmp
fildl
push
rcl
outsb
push
cmp
inc
mov
mov
in
cmp
mov
shl
jge,pn
xor
push
sbb
cmp
ss
xor
inc
push
adc
cld
je
sbb
icebp
ljmp
fdivrs
xchg
shrb
stc
xor
dec
pop
sub
pusha
loop
cltd
xchg
jne
fidivrl
call
xor
xor
dec
pop
test
repnz
or
fs
popf
cmpsl
mov
lds
stc
pop
jno
out
orl
push
rcr
int3
or
sbb
in
mov
pop
aas
push
sbb
icebp
sti
icebp
pop
push
jmp
shll
or
sub
push
sbb
cmp
testb
push
or
lahf
int
or
pop
nop
sbb
imul
call
aad
jle
in
shl
pop
movsl
dec
mov
mov
jmp
add
insl
rcll
shr
lret
and
scas
ret
rcll
sub
les
adc
sub
xor
xchg
lahf
cld
outsb
rdtsc
mov
scas
repz
int3
pop
push
dec
jmp
std
or
jae
or
inc
outsl
popf
daa
sti
dec
sahf
sti
lock
insl
inc
inc
push
pop
cmp
and
in
adc
mov
sbb
loope
xor
les
mov
cmp
jp
push
ds
adc
lock
push
push
jns
pop
int3
fmul
cmp
adc
and
ret
mov
xor
in
jb
dec
aam
xchg
mov
or
and
xchg
adc
daa
jl
aas
lret
arpl
ljmp
fwait
xchg
cmpsl
add
test
out
add
ds
jo
xchg
lds
icebp
mov
push
dec
or
and
pop
adc
dec
inc
xor
jle
add
mov
lcall
mov
dec
pushf
push
push
lds
inc
aas
push
push
outsl
xor
ficoms
push
mov
out
test
cld
adc
push
mov
insl
xor
sub
fsubr
jnp
pop
movsb
das
cli
fstl
lret
adc
aam
hlt
jae
inc
cmp
dec
inc
xor
adc
sahf
cmp
add
adc
loopne
movsb
jmp
cmp
or
pushf
adc
fwait
push
dec
enter
or
dec
popf
lea
xlat
sub
sbb
inc
cltd
or
insb
lods
int3
or
mov
mov
mov
je
dec
in
adc
int
sbb
popf
pop
lds
xlat
sbb
popf
adcl
xchg
cmpsl
shlb
mov
sbb
cmp
mov
test
jl
lock
mov
add
push
rorl
pop
sbb
mov
mov
stos
jge
sub
cmp
cmp
sub
add
movsb
jp
imul
stos
push
jle
push
xchg
dec
sbbb
incl
push
into
neg
adc
or
jecxz
sarb
jmp
jl
popf
xchg
pop
inc
roll
push
adc
inc
mov
and
jbe
divb
pop
dec
mov
jg
in
fwait
pop
insl
add
push
xor
mov
cmp
cmpsb
jg
fmull
or
jne
insl
gs
in
pushf
jae
ret
or
lock
cli
gs
mov
xor
or
insl
movsb
call
dec
push
inc
stos
fs
jb
xchg
ds
shrb
xchg
es
fsubr
or
fdivl
insb
aad
enter
daa
aaa
push
lea
outsl
in
add
dec
or
insb
les
jmp
adc
inc
stc
cmp
pop
in
outsl
inc
shr
and
sbb
aam
lds
dec
int3
push
mov
pushf
jl
cmc
sahf
adc
mov
jmp
int3
mov
aas
loopne
leave
test
adc
lcall
insb
pop
xor
adc
aas
in
pushf
test
aad
jmp
outsl
sub
ds
inc
cmpsw
jl
xchg
push
lea
mov
cmp
dec
dec
cmp
in
mov
flds
cmp
pushf
out
pop
loope
xchg
jnp
insb
jnp
dec
std
cmpb
test
imul
xchg
mov
mov
lock
inc
sub
xor
cltd
fnsetpm(287
inc
jns
inc
jb
popa
jmp
dec
pop
push
dec
cmp
mov
loopne
pop
bound
int3
mov
pop
ret
mov
dec
in
in
mov
cmp
mov
mov
jnp
pushf
xchg
repnz
inc
ds
cmp
add
adc
iret
pop
lea
pop
in
shll
aas
pop
call
test
outsb
movsb
test
int3
shll
ds
cmp
pop
sti
and
fninit
jp
test
jmp
jne
inc
add
or
add
adc
add
shlb
pop
sarl
or
inc
mov
mov
data16
xchg
and
aaa
inc
jl
inc
inc
cmp
scas
push
cmpsl
xchg
cmp
push
out
stc
cmpsl
addr16
adc
mov
mov
dec
mov
shlb
loop
mov
cld
push
mov
add
pop
push
sub
pop
xchg
clc
addr16
jle
xchg
pop
xor
or
xor
inc
cwtl
jecxz
jb
jae
jp
pop
popa
add
pop
je
mov
sahf
mov
pusha
pop
or
push
fsubs
bound
jecxz
stos
cmpsl
cmp
or
mov
cmp
push
out
jmp
sar
js
dec
sahf
pop
inc
xor
aaa
ret
sti
out
pop
mov
cltd
pop
sbb
pop
repnz
out
movsl
rcll
and
inc
xchg
scas
repnz
stos
mov
aad
or
lret
popa
cmp
mov
cmpsb
push
sti
and
sbb
pop
inc
cmp
inc
aas
jns,pn
mov
and
adc
jle
inc
sahf
push
cmpsl
fcmovne
mov
popa
shlb
add
cmpsb
les
imul
or
sbb
ljmp
cmp
or
mov
lret
mov
test
adc
stos
cmovl
mov
xor
cmp
jecxz
cmpsl
out
pop
mov
pop
mov
xor
or
sub
push
mov
adc
mov
sub
in
xchg
out
loope
iret
fldpi
xchg
sub
xchg
jo
cmp
aas
cmpsb
add
jne
ds
dec
sub
or
aad
notrack
fnstenv
cli
aad
popf
pop
add
cs
mov
test
xorl
lds
cltd
fdivrl
lods
or
scas
add
es
loope
outsl
xor
dec
jge
sti
cmp
stos
sub
std
mul
popa
lret
lods
adc
call
mov
xchg
ds
inc
jl
loopne
int
xchg
xor
dec
mov
inc
imul
cmp
out
pop
jno
fwait
xor
idivb
xchg
ja
sub
sbb
inc
xlat
mov
adc
mov
pop
mov
mov
addb
hlt
and
add
xchg
cmp
or
push
adc
mov
xchg
cwtl
test
insl
mov
aas
int
aas
sahf
and
mov
out
mov
sub
push
fistps
push
push
in
dec
cli
jmp
lcall
or
je
jo
aaa
mov
sub
in
fnstsw
inc
jb
pop
leave
xchg
pop
cwtl
cmp
es
mov
sbb
jl
loop
dec
iret
or
addr16
mov
pop
stos
mov
jae
lret
cmp
es
mov
repz
pop
jns
outsb
adc
add
std
out
jb
dec
lds
cmp
mov
sahf
push
dec
out
adc
loopne
xor
mull
addr16
inc
inc
pusha
shll
xchg
aad
cwtl
test
fwait
sbb
int3
ljmp
lcall
out
sub
in
fistps
mov
or
adc
dec
push
sbb
jmp
xchg
aam
jp
pop
stos
push
rorb
int3
inc
dec
push
dec
xchg
and
inc
daa
std
nop
or
insb
adc
hlt
add
in
and
sbb
or
pop
dec
jecxz
lds
movsb
or
test
sahf
iret
insl
popf
scas
inc
mov
aas
and
call
dec
rcrl
cmp
xor
xchg
out
mov
repz
jp
mov
gs
in
out
pop
xor
inc
fwait
insl
push
cmp
arpl
hlt
dec
scas
outsl
sbb
adc
jge
mov
insl
push
mov
test
cmpsb
or
aas
bound
jge
out
add
xchg
loope
lret
iret
shlb
sbbl
cmp
sarl
enter
xlat
mov
enter
fstpl
or
pop
ds
loop
xor
adc
test
inc
or
mov
stc
inc
jnp
push
dec
mov
stos
ret
incl
subb
add
lea
push
cmpl
or
or
int3
and
das
clc
mov
fwait
pop
cmp
push
punpckhbw
cmpb
test
and
aaa
lock
scas
mov
jb
add
loope
mov
push
inc
add
cmp
adc
ss
movl
mov
xor
mov
gs
jne
test
xchg
call
jns
sub
aad
sub
xor
inc
xor
movsl
add
push
cmp
xlat
pop
and
movsl
pop
mov
dec
mov
add
out
push
jbe
std
aad
sub
movb
ficoml
add
fistl
xchg
push
pop
xchg
lret
or
mov
cmpsl
cmp
rclb
xchg
inc
sbb
negl
ret
or
mov
test
push
add
je
test
xchg
mov
and
xchg
insl
int
push
pop
lods
in
add
cmpsb
mov
xchg
sub
imulb
xchg
mov
mov
outsb
inc
notl
outsl
rcrb
or
xlat
cmp
push
ja
xlat
cmp
call
leave
dec
or
cmp
push
daa
push
sub
mov
push
es
iret
push
into
or
adc
mov
fstps
xchg
in
cs
cwtl
inc
xchg
cs
cmpsl
das
jge
adc
aas
loopne
enter
jle
jne
pop
push
mov
lods
sub
cmpsl
jo
jbe
inc
ret
pop
sbb
sub
adc
testl
xchg
loop
in
push
mov
andl
lahf
imul
or
scas
out
push
push
lds
pop
je
dec
sbb
arpl
pop
sbb
orb
bound
scas
xor
sbb
pop
mov
in
daa
arpl
sbbl
sub
cmc
shll
and
xchg
cmpsb
les
sub
mov
add
sti
sub
lret
pop
mov
add
jl
xor
ljmp
mov
and
or
or
sub
xchg
in
or
or
pop
out
pop
stc
repnz
cltd
iret
push
rorl
dec
or
cs
mov
or
lret
mov
fdiv
add
mul
imul
xchg
lds
in
mov
scas
add
xor
xor
shll
lods
xchg
test
repnz
jg
adc
mov
xor
out
pop
xchg
add
rcl
adcb
cmp
rol
aaa
in
cmp
fnstenv
mov
dec
inc
es
ret
in
xchg
rolb
repnz
add
ret
and
dec
lret
test
lcall
cmp
aas
pop
mov
push
mov
push
sbb
nop
jle,pt
sti
jb
and
xchg
push
icebp
fiaddl
js
sbb
cmp
add
cmp
and
lock
mov
div
mov
pop
pop
cvtpi2ps
iret
das
insb
jmp
jecxz
jge
andl
add
sbb
out
bound
bound
imul
out
fidivrl
popa
and
sub
es
int
jne
cmp
std
cwtl
push
jnp
pop
pop
inc
les
scas
int
in
mov
or
adc
sti
sbb
pop
inc
mov
ror
sbbl
enter
pop
in
imull
adc
inc
es
stc
hlt
insl
rcrl
cmpsl
jge
insb
mov
sarl
add
lahf
dec
dec
mov
fisttpl
or
jne
dec
rcr
jg
pusha
sbb
gs
sub
insb
or
fsts
mov
pop
add
and
mov
mov
aam
cmp
push
or
mov
dec
test
sbb
pushf
subb
pop
inc
xchg
push
out
fwait
dec
js
in
sub
mov
mov
push
out
cltd
sbb
aam
mov
jae
shrl
xchg
mov
inc
int
pop
out
dec
ss
xchg
iretw
pop
movsl
lret
mov
jne
sub
jbe
sbb
cmpl
mov
dec
mov
mov
xor
inc
cmpsb
add
cmp
pop
lret
push
je
outsb
and
sub
shll
packsswb
pop
xchg
aam
sub
mov
inc
jp
adc
popa
in
loopne
push
cld
es
lcall
je
cmp
decl
dec
std
dec
lods
fildl
call
jne
jl
jo
add
xchg
push
adc
fidivrs
imul
aas
jne
push
inc
jno
mov
mov
push
repz
and
pop
mov
inc
cld
sbb
xchg
adc
add
popf
xchg
in
inc
cs
sbb
pop
inc
mov
movsl
enter
mov
int3
mov
lret
stos
add
inc
jno
sub
xchg
and
dec
rcrb
sahf
lcall
cmp
mov
scas
xlat
cli
loope
lret
mov
insl
sbb
fcoms
xchg
sbb
cmc
lods
mov
cs
mov
jno
stos
imul
push
hlt
push
and
cmp
rcl
jbe
mov
mov
mov
xor
or
ret
inc
jle
cmp
adc
movsl
pop
int
out
das
or
mov
subl
sbb
pop
lret
sub
jmp
push
arpl
sub
pop
out
mov
mov
push
inc
jp
jo
imul
adc
mov
outsb
dec
sbb
pop
push
mov
push
mov
fmuls
scas
out
sub
stos
push
pop
into
add
lock
push
adc
add
test
pop
or
cmp
adc
and
neg
cmp
xchg
ja
insb
xor
into
cmp
fsubp
in
test
jo
jl
pop
icebp
cmp
data16
call
mull
add
aaa
test
push
sbb
cmc
add
dec
add
pop
xchg
stos
popa
lods
loopne
xchg
xor
pop
mov
lock
ror
jno
jl
fwait
adc
test
ds
ret
dec
cmp
mov
xor
and
vphadduwq
imul
mov
loopne
pop
inc
sbb
sub
lock
cltd
sub
mov
mov
xor
xchg
pop
mov
pop
loope
pop
pop
lea
into
test
loope
mov
xor
outsb
jmp
gs
mov
dec
xchg
xchg
mov
xchg
in
push
inc
sub
testl
insb
inc
add
daa
fidivrl
ds
ja
out
inc
mov
mov
inc
jne
xlat
or
push
mov
cli
andl
mov
shr
xor
and
lods
sub
jle
popa
dec
or
sub
mov
daa
xor
pop
xchg
mulb
mov
shll
sahf
loop
pop
adc
dec
mov
jne
popf
imul
push
inc
sbb
push
aad
dec
and
adc
out
mov
inc
mov
leave
rclb
in
bound
into
and
pusha
lods
lret
filds
jp
cwtl
jecxz
mov
and
lock
arpl
push
rolb
mov
add
pusha
jecxz
roll
xor
add
rclb
inc
mov
mov
add
pusha
stos
push
stos
inc
ret
xor
add
rclb
inc
mov
mov
add
pusha
jecxz
roll
xor
addb
push
shlb
sub
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
leave
das
fnstcw
jmp
xlat
notb
mov
dec
lcall
or
sbb
iret
cmp
leave
das
fnstcw
jmp
outsl
cltd
outsl
test
mov
ja
or
cmp
shlb
shlb
pop
loope
nop
jbe
addr16
mov
pushf
testb
or
outsb
mov
arpl
js
cmpsl
cltd
mov
iret
jne
repnz
and
xor
cmpsb
dec
das
es
push
inc
dec
mov
mov
mov
xchg
filds
mov
ss
push
sbb
inc
dec
in
push
and
push
scas
cmpsb
mov
or
inc
sub
cmp
and
fisttpll
cwtl
outsl
push
cmp
inc
pop
jo
adc
rcrl
jp
xor
iret
cltd
stos
push
shlb
jbe
orl
dec
push
lahf
inc
push
in
sbb
pushf
sub
sarb
dec
scas
testl
ficompl
mov
mov
aam
adc
sub
dec
pop
sub
cmp
add
shrb
push
stc
pop
sahf
outsl
mov
dec
mov
cmpsl
jno
pusha
xchg
testl
fisubs
push
jp
insl
lcall
in
mov
mov
or
push
mov
inc
mov
jo
outsl
cltd
xor
fstpt
imul
jb
pop
test
stos
lods
das
mov
test
pop
rcrl
dec
mov
mov
or
sbb
sub
cmp
leave
das
fnstcw
jmp
outsl
cltd
jg
dec
mov
mov
or
sbb
sub
cmp
leave
das
imulb
mov
xchg
mov
addr16
lock
push
cmpsb
sbb
into
mov
cmpsl
or
test
mov
movsl
xor
test
movsl
xchg
or
cmp
or
cmp
popa
std
mov
mov
jg
ds
adc
leave
sub
mov
icebp
shl
nop
pop
jl
fcos
and
fldl
mov
lock
fwait
push
sbb
add
stos
outsb
pcmpeqb
inc
dec
sbb
sbb
popa
test
std
cmp
rcll
in
outsb
outsb
jae
ret
nop
dec
rolb
mov
fists
ljmp
test
test
lock
neg
pusha
popf
testb
movsl
xorl
aaa
adc
push
mov
pop
ja
jmp
mov
nop
subb
loop
gs
cltd
push
cmc
inc
insl
cmp
mov
out
inc
insb
or
mov
aam
sbb
pop
xor
lahf
in
inc
adc
or
popf
mov
into
push
mov
call
and
mov
aad
test
rcl
push
add
and
pushf
push
popf
fsubrs
mov
mov
push
sti
and
push
inc
xor
xchg
inc
into
adc
je
add
ja
dec
xor
sub
scas
xchg
dec
push
in
mov
imul
test
popf
cmpsl
fstl
sbb
loopne
repz
xchg
add
sbb
dec
push
push
mov
pop
hlt
push
clc
mov
lods
jne
jb
stos
push
add
dec
xchg
test
sub
sub
xchg
addr16
in
jnp
xor
and
xor
sub
push
push
clc
out
inc
cltd
test
fcomps
sbb
jns
lds
rcr
out
pop
cmp
cmp
jge
mov
int3
cmc
fcoml
leave
repnz
repnz
loope
ret
es
inc
sarb
mov
es
jb
push
jmp
jno
dec
and
inc
loopne
or
ret
pop
lret
stos
sub
push
movsl
sub
punpcklbw
lahf
bswap
push
loopne
aad
sbb
lock
push
xor
jle
and
orb
sbb
xchg
push
add
mov
xchg
icebp
lods
cmp
fstp
shll
xlat
inc
sub
fadds
pop
mov
lods
ror
xchg
or
loop
pop
scas
je
sti
inc
insl
jae
aad
movsb
sub
call
push
scas
scas
out
xor
nop
xchg
aam
mov
pop
in
fildl
imul
clc
cmp
cmp
shl
imul
std
inc
mov
push
jno
aam
mov
lret
outsl
sbb
lcall
je
mov
or
ja
fld
push
hlt
rcl
adc
sub
dec
iret
ret
pusha
mov
mov
cmp
and
aaa
daa
lret
lods
jl
sbb
or
pop
sub
mov
xlat
fsubrs
pop
inc
rcll
addb
daa
shll
ljmp
or
push
pop
jle
fmuls
xor
mov
std
int
movsl
imul
mov
sahf
outsl
xor
mov
loopew
xlat
mov
xorb
es
call
mov
push
lds
pop
push
mov
and
push
jbe
loop
or
cmp
fbld
ljmp
pusha
in
jnp
jg
adc
cltd
inc
fisubl
paddw
and
subl
jne
stos
hlt
lahf
mov
jae
int
negb
stos
push
test
call
cmp
pop
mov
clc
jmp
std
push
test
loopne
mov
arpl
enter
dec
or
dec
mov
mov
mov
push
test
adc
sbb
ret
ss
fldcw
cltd
loope
test
and
adc
adc
cli
mov
repnz
std
and
into
lods
nop
insl
mov
add
mov
daa
cltd
loop
rclb
testl
in
xchg
xchg
cld
pop
aad
jo
inc
or
push
mov
out
lret
imul
subl
pop
sub
pop
push
test
inc
fs
and
lods
cmc
mov
aaa
in
xchg
out
out
push
mov
cmp
fiaddl
and
add
adc
in
and
lods
shll
dec
test
sub
outsl
popa
sbbb
xor
xchg
dec
sub
ljmp
jb
iret
dec
movsb
mov
aad
sub
inc
outsb
popf
imull
mov
jnp
or
push
dec
jp
cmp
jb
jle
mov
cmpsb
decb
test
int3
pop
bound
aad
cmc
xor
lret
jge
nop
and
loope
aad
loopne
in
test
adc
xorb
scas
jae
dec
jp
out
dec
pop
rcrl
cmp
add
stos
out
aam
push
stos
fiadds
mov
lock
inc
data16
mov
out
stos
xchg
sub
lods
push
iret
lret
xchg
push
fwait
aad
add
popf
xchg
movsl
xor
aad
sbbb
pusha
addr16
leave
lods
outsl
fstps
aas
into
rorl
pop
mov
jb
dec
mov
loope
fistps
jg
push
ljmp
sbb
mov
enter
push
push
inc
inc
call
or
cmc
lret
imul
pop
jmp
hlt
js
int
dec
sub
jbe
mov
in
int
out
gs
dec
cmpsb
xor
sbb
pop
mov
jb
sbb
cmp
stc
rolb
insb
mov
mov
arpl
fldenv
aas
xor
add
push
into
lahf
subl
mov
decl
lcall
xor
fnsave
mov
inc
ds
subl
dec
lods
fimuls
movsl
mov
mov
js
jae
add
add
dec
push
lcall
insl
mov
fstl
sbb
lcall
push
push
imul
push
pop
movsl
push
push
dec
das
fld
test
fs
sahf
stos
and
int
into
jno
shll
ficomps
jle
or
fcomps
lret
sbb
mov
pop
negb
inc
stos
into
mov
inc
mov
aas
pop
shlb
imul
add
ror
sbb
lds
test
mov
lods
add
add
idivb
shld
sbb
cmp
leave
stc
xorl
cltd
ret
sub
cmp
repz
mov
or
int
test
sti
ds
imul
es
sbb
iret
dec
mov
xor
push
stc
pop
pop
adc
dec
fdivrl
mov
enter
mov
fisubl
das
in
mov
xor
das
imul
mov
imul
in
adc
in
imul
dec
mov
jmp
push
test
vmulpd
add
aad
in
push
popl
pop
mov
add
ficomps
mov
add
adc
in
ror
pop
mov
add
adcb
cmpsb
ficompl
insl
mov
test
jbe
xlat
and
ljmp
xchg
jbe
loope
das
jno
mov
aad
xchg
mov
mov
add
push
ret
sub
test
sub
repz
cmc
xchg
loop
mov
ftst
pop
cli
add
xchg
int
ds
outsb
add
mov
test
sti
jne
cld
add
jge
ljmp
js
movsb
out
dec
fimuls
jl
pmulhuw
mov
in
pushf
and
xchg
jle
test
or
xor
adc
pop
sub
es
push
jno
std
sahf
add
xor
xor
cmp
test
dec
or
mov
out
and
es
pushf
aam
add
cmp
outsb
mov
loopne
adc
adc
aas
pop
jmp
in
inc
mov
lods
outsl
fwait
push
ja
cmp
mov
lods
xchg
loop
pushf
gs
add
mov
xlat
jbe
call
insb
adc
mov
mov
fstl
decl
dec
in
sub
mov
cmc
xor
or
in
je
sbb
xor
push
xor
mov
add
fwait
inc
cli
adc
dec
mov
out
xor
cld
cmp
hlt
inc
push
mov
pop
daa
add
jle
rclb
cmp
icebp
mov
scas
mov
cwtl
stc
push
mov
negb
jae
push
fwait
push
int
push
jmp
mov
xor
add
cmp
and
lret
cmpsb
xchg
xchg
jo
popf
lds
in
push
mov
xor
stos
add
and
scas
push
push
and
pop
std
adc
dec
int
pusha
rcl
popl
loop
scas
aas
xchg
push
in
divb
test
and
fsub
ret
test
lods
lcall
jmp
fbld
inc
test
lock
push
inc
jbe
mov
mov
jno
xlat
inc
mov
xchg
cmp
mov
adc
mov
iret
push
aam
add
loopne
mov
inc
push
mov
mov
inc
mov
pop
or
adc
pop
mov
nop
adc
into
xor
jg
xor
aas
nop
data16
mov
xchg
enter
pop
cmp
sub
xchg
lret
add
lea
testb
sbb
jle
out
fucomi
xchg
scas
movl
cmc
mov
lds
and
insl
pop
mov
data16
movsb
test
cmpb
sbb
pop
lods
add
out
data16
lods
add
dec
mov
testb
jg
enter
push
lds
push
and
fs
lods
xor
addb
rorb
cmp
sbb
out
je
dec
sub
push
ret
incl
push
push
outsl
popa
jecxz
mov
clc
sarb
movsb
sbb
dec
inc
push
dec
jno
out
jecxz
push
cmc
js
jns
cmp
xchg
push
or
jns
fadds
pop
ret
popa
xchg
or
cs
enter
sbb
dec
repnz
ret
jg
je
inc
sbb
packssdw
xlat
aam
ja
popf
lret
fsts
les
or
push
cld
in
jecxz
lret
xor
pop
inc
xchg
jb
shlb
loop
into
fdivl
dec
push
fcomi
adc
push
rcrl
mov
subl
pop
addr16
popa
clc
ljmp
mov
pop
jb
push
out
pop
and
jg
repnz
cwtl
dec
insl
sub
xor
sti
adc
loope
loopne
push
xchg
scas
xor
push
lock
test
jmp
aad
pop
testl
insl
and
mov
loop
xor
ds
pop
shl
lret
xchg
add
push
sbb
clc
fidivs
faddl
inc
jmp
or
aas
jae
or
mov
out
and
aaa
sbb
cmp
sbb
in
pusha
push
scas
inc
cmp
inc
loopne
push
and
lods
inc
stc
mov
inc
inc
stc
je
nop
sahf
dec
rorl
cs
shll
push
icebp
stos
xlat
mov
jns
loope
fwait
rcll
aad
jl
dec
popf
out
jge
push
andl
inc
add
mov
or
cmpsb
lods
dec
push
push
out
or
jbe
icebp
psraw
mov
cmpl
rcrl
adc
cli
outsl
cld
lcall
in
call
xor
add
push
int3
pop
jl
mov
cltd
cmp
sbb
and
cwtl
and
inc
sbb
scas
mov
xchg
pushf
mov
ss
xor
sar
notl
scas
jo
xor
mov
jg
in
adc
or
mov
insb
mov
test
cmp
mov
xchg
or
paddb
orl
inc
cmp
and
aas
fisttps
xchg
mov
sub
sub
pop
shl
lds
dec
sbb
in
pusha
lods
data16
fldl
ja
test
sarb
or
scas
or
inc
outsb
das
es
cmpsb
mov
sti
lods
pop
pushf
sbb
lods
jle
stc
pop
mov
xor
sub
fadds
bound
mov
sbb
mov
cld
mov
push
fwait
mov
pusha
jmp
lods
flds
ljmp
xchg
jge
add
dec
mov
dec
sbb
mov
icebp
sbb
ljmp
popa
dec
jae
xor
inc
push
sti
movsb
fwait
addr16
imul
cmc
push
sbb
pop
pop
hlt
iret
cwtl
inc
push
sbb
in
and
fxch
lea
xlat
out
insl
mov
dec
push
mov
aas
shlb
pop
stc
outsb
daa
addr16
lods
mov
inc
out
or
andl
or
jecxz
pop
fwait
daa
jae
in
pcmpgtb
icebp
or
sbb
dec
adc
fbstp
sbb
stos
jmp
add
lahf
pop
mov
nop
dec
ret
sbb
imull
push
jg
xor
add
ljmp
loop
scas
mov
xor
fdivrs
cmpl
and
pop
jg
push
arpl
or
rorl
fwait
enter
mov
jno
ss
push
mov
pop
adc
pop
ficompl
enter
out
mov
lret
xor
mov
dec
aaa
cmp
add
sbb
jb
adcb
cmp
inc
aam
mov
or
lock
cmp
dec
cmp
mov
or
push
mov
cmp
or
ficoml
fmull
mov
add
pop
add
lods
rolb
scas
ficoms
arpl
movsb
scas
xchg
cmp
in
and
stc
jbe
sub
mov
jnp
xchg
or
jl
out
aaa
xor
jbe
adc
xchg
cmpsl
jb
cld
adcl
ret
or
xchg
cmc
pushf
adc
fiadds
add
out
xchg
jle
daa
xchg
inc
subb
int
mov
mov
mov
jp
repz
mov
mov
adc
divl
daa
out
and
pop
popa
lods
add
fwait
xchg
mov
or
mov
ret
adc
sbb
scas
or
inc
rclb
mov
sbb
and
sub
jmp
mov
fsubs
push
and
xchg
sub
jo
xchg
stos
jnp
subb
xor
enter
lret
es
popf
rclb
push
cmp
nop
xchg
push
movl
in
inc
push
and
loope
gs
xchg
fisttpll
xor
leave
cmp
mov
test
jmp
mov
aaa
jbe
cli
or
pop
roll
or
mov
mov
sub
add
ja
lret
in
rol
push
fldl
loopne
sub
and
clc
mov
jl
mov
int
jecxz
outsl
cmpsb
mov
outsb
and
jge
hlt
bound
jb
mov
mov
stos
loopne
les
enter
push
jle
pop
daa
incl
out
xor
sub
pusha
lods
cltd
divb
cmpb
out
xlat
mov
ljmp
aaa
push
mov
sbb
cld
aas
mov
mov
aas
imul
xchg
xchg
mov
aam
data16
xor
cmpsb
mov
movsb
xor
xchg
ja
jp,pt
xor
jmp
in
idivb
cmp
nop
fisubl
test
lods
push
xchg
negb
aam
in
mov
test
test
adc
rolb
insb
std
inc
push
cmp
cmp
fcomps
mov
mov
and
pop
out
push
adc
aaa
pop
pop
push
mov
sub
cmc
sub
pushf
inc
aad
or
sbb
ljmp
cmp
mov
mov
xchg
push
sbb
in
daa
repz
sub
lock
sub
xchg
idivb
mov
add
xor
dec
mov
imul
imul
cmp
cld
xchg
lds
stc
sahf
hlt
pushf
xchg
cmc
or
push
jnp
inc
mov
inc
movsl
cmp
mov
ja
stos
insb
xchg
mov
mov
shl
mov
sbb
hlt
push
jg
cs
sbb
icebp
jge
mov
repz
dec
rclb
into
in
cwtl
sbb
data16
jg
data16
add
pop
and
sahf
cld
in
mov
sahf
sbb
pushf
jbe
xor
mov
push
pushf
popw
in
lret
cmc
test
call
into
cmc
xor
inc
mov
pop
test
add
in
pushf
fistl
lcall
xor
arpl
push
pop
rclb
call
mov
ret
in
cwtl
scas
lcall
scas
add
lret
jne
movsl
mov
xchg
iret
or
xchg
add
mov
and
lea
jl
sbb
mov
xchg
js
pop
mov
enter
bnd
push
inc
push
add
in
mov
push
mov
push
fcmovnb
mov
inc
call
dec
out
push
pusha
xchg
cmp
or
sahf
cmpsb
loope
xchg
cmpsb
mov
mov
sub
sti
push
rcrb
sbbb
repnz
mov
pop
add
xchg
add
cwtl
rcr
mov
jl
jg
loop
cmpsb
imul
xor
push
sbb
cmp
mov
adc
inc
xchg
cmp
push
mov
xor
dec
cld
hlt
dec
mov
insb
jae
shll
scas
pop
into
out
dec
lahf
add
ds
mov
loop
adc
xchg
data16
pop
mov
out
inc
test
or
xchg
ja
sbb
dec
jmp
mov
nop
lahf
push
xchg
pop
pop
jno
jmp
adc
mov
loopne
xor
pop
xor
and
dec
cli
xchg
xor
mov
stos
notrack
std
mov
test
dec
xchg
test
add
dec
lret
mov
adc
jmp
jge
dec
jns
mov
lods
push
pop
aaa
mov
ret
push
dec
loopne
sub
outsb
lcall
xor
sbb
stos
mov
fstpt
cmp
jp
in
cmp
mov
or
jnp
dec
icebp
mov
out
cmp
mov
sub
inc
xchg
push
sarb
jne
lods
idivb
lret
xor
pusha
mov
fmul
clc
pop
xchg
inc
and
mov
inc
out
fdivrl
adc
cmp
mov
out
es
xor
add
repz
imul
lods
cmp
or
jno
cmpsb
std
ret
dec
xchg
fcomi
test
outsb
imul
mov
popf
cld
leave
add
push
aaa
pop
xor
adc
aaa
push
xchg
add
or
cmp
imul
sub
push
pop
jns
out
mov
cmp
in
lcall
pop
stos
pushf
xor
loopne
push
jno
mov
jle
jp
sarb
or
in
dec
ljmp
xchg
bound
push
mov
out
test
lods
inc
ror
push
push
fstp
in
and
das
int
mov
fadds
insl
push
int3
mov
adc
jnp
push
fdivrl
push
dec
jp
sahf
xlat
lret
movsb
ds
out
xor
into
push
mov
and
or
inc
dec
dec
mov
or
aaa
aad
xchg
adc
mov
loop
pushf
arpl
inc
fdivr
cltd
push
or
or
pop
sub
cltd
int
dec
imul
add
lods
das
rcr
movsl
aam
and
mov
das
sbb
test
lret
push
xchg
imul
decl
iret
adc
mov
ret
mov
jle
inc
into
outsl
pop
jae
push
jno
mov
xchg
dec
je
scas
sub
push
add
mov
imul
es
mov
out
incb
push
and
into
imul
inc
pop
adc
fimuls
cmc
mov
scas
jle
insl
mov
push
ljmp
cwtl
loop
loope
pop
xor
movlhps
xchg
dec
ret
push
xchg
jo
sar
dec
inc
push
dec
mov
sarb
jmp
repz
fwait
imul
mov
adc
xchg
dec
pop
sbb
movsl
and
inc
movsl
mov
pop
pushf
xor
inc
jbe
xor
push
aam
jecxz
cmp
cmp
push
jb
adc
out
popf
and
mov
popa
xchg
inc
xchg
mov
scas
ja
aam
fnsave
mov
rclb
mov
add
popf
sbb
xchg
or
cwtl
notb
clc
ja
or
repz
shlb
popa
fimull
xchg
cmp
sub
shl
sub
add
hlt
mov
adc
add
lcall
mov
xor
pusha
aaa
cmp
imulb
xchg
mov
xchg
sub
pop
cmpsl
fcomp
rcr
in
fcmovnbe
cmpb
andb
push
fcomip
repnz
sti
inc
cmp
rcrb
jbe
aas
loopne
push
jmp
jmp
push
shlb
in
outsl
sub
rol
es
adc
pop
aas
jecxz
stc
pop
mov
jg
dec
mov
mov
or
sbb
sub
cmp
leave
das
fnstcw
jmp
outsl
cltd
jg
dec
mov
mov
or
sbb
sub
cmp
leave
das
fnstcw
jmp
outsl
cltd
jg
dec
mov
mov
or
sbb
sub
cmp
leave
sub
cmp
or
pop
mov
jg
dec
cmp
ret
jns
jle
xchg
adc
mov
cmp
push
pop
jne
pop
pop
push
inc
adc
loope
icebp
mov
mov
cli
xchg
jle
or
inc
sub
and
jp
push
lcall
rcrl
sub
jno
inc
repnz
inc
and
xor
adc
fildll
shll
in
xchg
je
inc
add
pop
out
lock
std
mov
xchg
or
pop
imulb
xor
fxch
into
testl
push
shlb
adcl
cmp
jb
pop
nop
int3
and
adc
mov
nop
sahf
bound
inc
movb
dec
and
rorb
cs
jg
mov
cld
pop
lea
xchg
mov
cmpsb
and
into
icebp
loope
mov
cmp
lret
and
in
xchg
mov
inc
aam
movsl
ljmp
test
lds
push
pop
cltd
inc
cli
xchg
jmp
jno
inc
sub
and
xor
int3
adc
icebp
int3
rcrl
enter
jae
js
dec
pop
push
pop
xor
fs
lcall
mov
xchg
add
cmp
dec
push
xor
outsb
aas
adc
movsb
fcomps
mov
hlt
stos
pushl
add
jns
or
xor
push
lcall
rcr
mov
ljmp
inc
sub
and
jp
push
lcall
rcr
mov
ljmp
mov
adcb
stc
rolb
fstps
fsubrs
xor
loopne
cmpsl
test
rolb
dec
push
cmpsb
fsubs
jecxz
xor
or
mov
sub
adc
mov
pop
out
mov
call
cmp
adcb
dec
and
jmp
dec
pop
sahf
xchg
mov
xlat
xchg
xchg
xor
sub
and
fbld
insb
adc
dec
scas
das
mov
push
cmp
mov
mov
inc
leave
inc
lods
pop
repnz
inc
xchg
daa
push
cmpsl
out
aam
mov
cvtdq2ps
dec
movsl
sub
mov
subb
jmp
mov
sub
jp
jne
scas
dec
data16
lret
jl
sub
repnz
inc
xchg
in
push
jnp
dec
in
jp
mov
cmp
pop
out
lret
popf
pusha
and
xlat
fsubrl
ficoms
fstl
fwait
mov
jge
dec
push
loope
mov
or
aam
fcomi
fs
ds
push
loopne
xlat
fs
jns
xor
adc
ds
mov
lahf
ret
ljmp
mov
dec
jp
pusha
cmpsl
out
in
arpl
inc
xchg
addr16
inc
out
jne
or
inc
sbb
dec
imul
add
mov
dec
push
rcll
xor
dec
iret
and
fistps
daa
sub
sti
cmp
inc
lock
xchg
xchg
cmp
mov
pusha
mov
imul
jnp
xchg
dec
orl
out
out
and
sbb
xchg
sbb
xchg
ret
jbe
mov
lds
add
arpl
xchg
clc
and
adc
sarl
mov
or
pop
jo
sub
inc
rclb
je
insb
ficoml
lret
push
fbstp
cmc
pop
jmp
daa
in
lret
cmp
pop
cmp
fdivrs
subb
test
subb
lds
mov
mov
into
dec
adc
push
imul
xor
cld
fdivr
sub
aam
cmc
stos
dec
int
movsl
adc
inc
outsl
in
push
pop
daa
pusha
xchg
cltd
and
das
push
scas
popf
mov
fwait
insl
mov
dec
push
mulb
pop
or
ljmp
pop
mov
or
sarl
cmpb
dec
push
add
inc
idiv
adc
arpl
popa
adc
popa
sbb
and
int3
test
imul
imul
stos
jg
and
dec
ds
cmp
subb
je
mov
test
fcomps
dec
mov
inc
jge
add
lcall
push
jl
mov
das
dec
test
pop
dec
into
xchg
shl
test
dec
xchg
andb
lret
mov
mov
test
and
mov
mov
dec
push
cmp
rorb
or
pop
mov
icebp
cmp
nop
or
pop
push
dec
pop
cmp
adc
lods
test
xchg
inc
mov
stos
add
or
sbb
lret
or
lods
insl
cwtl
mov
fwait
jns
ja
test
imul
iret
jl
daa
shr
leave
repnz
cwtl
lcall
pop
jecxz
test
mov
push
sbb
pusha
xchg
das
push
cmpsl
int
aaa
aas
mov
sbb
mov
repnz
sti
rcrl
jno
add
imul
scas
lret
and
sti
jno
mov
icebp
add
jle
je
cltd
cmpsb
test
push
lock
mov
dec
jb
adc
cli
adc
cmp
jb
inc
jecxz
lock
stos
or
or
mov
je
mov
stos
xor
dec
subl
xchg
xchg
pusha
iret
es
add
rcrb
pop
pop
leave
imul
loop
push
pop
addr16
or
adc
insb
mov
jnp
or
test
daa
les
sbb
jnp
jmp
cmpb
testl
call
outsl
dec
push
ljmp
mov
xor
mov
add
test
xor
ja
inc
pusha
cmp
cltd
push
pop
jnp
dec
out
push
jo
xor
jp
and
mov
jnp
fsubl
inc
mov
add
inc
cs
mov
and
bound
mov
mov
pop
pushf
mov
xor
xchg
xchg
sbb
inc
shl
jg
sub
jnp
dec
mov
lods
inc
addl
pop
rol
mov
dec
push
mov
das
nop
dec
xor
movhps
popf
movl
dec
mov
pop
jg
hlt
cld
push
ret
sub
subl
xor
jnp
pop
mov
mov
xor
loopne
outsb
mov
pusha
mov
outsb
or
lock
sbb
popf
and
dec
mov
or
sub
fistpl
push
push
jb
pushf
ret
pushf
shrd
xor
out
and
cmp
fiaddl
mov
jb
add
xchg
push
test
lea
movsl
lret
gs
push
xor
adc
push
fcmovb
cwtl
out
sbb
loope
push
push
add
mov
inc
rolb
push
sbb
jmp
test
sarl
xchg
pop
loop
pop
sahf
dec
mov
incb
icebp
push
or
test
lods
pop
and
pushf
lahf
das
imul
aas
push
jge
ret
ficompl
movsl
mov
pushf
lods
cmc
sbb
pusha
or
mov
jle
aaa
fisubrl
inc
xor
inc
adc
push
jno
sub
jl
lahf
jmp
or
lcall
jno
dec
daa
out
int
lcall
xchg
xchg
sbb
xor
iret
xchg
movsb
in
cld
loopne
mov
pushf
fistpl
arpl
cmp
or
jno
jmp
sbb
setne
sub
outsb
sti
pop
loopne
call
add
in
mov
jae
mov
xchg
in
into
mov
mov
adc
imulb
movsb
test
mov
rolb
push
fsubrs
lock
cmp
pop
jecxz
out
rclb
int
jns
adcl
inc
popa
in
add
sbb
scas
sub
ret
scas
ret
fildll
js
ret
xchg
jmp
popf
hlt
or
dec
aaa
lock
dec
fwait
rcll
iret
jmp
pushf
aad
and
sbbb
push
lock
jne
ret
lods
lahf
ljmp
cmpsl
out
push
sub
shll
jae
lock
subl
xchg
lcall
cmp
imul
jo
ss
int3
mov
js
jmp
pop
sahf
lret
cmp
cli
jmp
xchg
stc
fdivr
movsb
ss
xchg
mov
cltd
test
in
addr16
jae
xor
cld
into
inc
sbb
les
outsl
call
push
repz
cmp
push
push
cmc
inc
xor
sbb
adc
sbb
nop
xor
sarb
in
cltd
into
or
mov
xchg
stos
sub
pop
lcall
push
jbe
loopne
mov
scas
outsb
jne
stos
push
and
cmp
cmp
shll
or
fcmovnbe
movsl
adc
sbb
push
cmp
jo
inc
into
mov
add
out
mov
dec
loope
repnz
in
mov
and
cltd
call
xor
xchg
push
mov
mov
outsb
cmp
ds
push
and
out
dec
cmp
jnp
das
rcr
xchg
dec
divb
mov
arpl
inc
mov
push
jl
inc
aad
jecxz
pop
lret
mov
std
cwtl
pop
imul
mov
mov
xchg
jg
nop
imul
insl
js
pusha
out
shlb
xchg
sub
pop
dec
adc
pushf
ja
outsl
inc
add
inc
fld
bound
mov
xchg
aad
mov
outsl
je
scas
and
dec
push
in
pop
das
scas
fstpt
xchg
jecxz
test
fucomp
out
sub
cmp
mov
lea
mov
jne
mov
gs
add
sbb
insl
mov
xor
ret
push
push
dec
mov
add
or
clc
pop
mov
fbstp
rorl
pushf
push
arpl
pop
cwtl
hlt
adc
push
jp
fdivs
fcomi
adc
movl
inc
xchg
push
pop
mov
into
xor
mov
lods
cmp
push
cli
and
mov
mov
mov
inc
xchg
jno
cmp
mov
popf
mov
mov
jmp
stos
adcl
loop
adc
insl
or
fcomp
adc
mov
sbb
pop
repz
sahf
pop
add
adc
mov
cmp
repnz
movsl
mov
int
mov
es
lea
jg
rcll
cmp
jb
std
das
out
clc
loopne
push
cltd
or
in
add
sbb
cli
cmp
or
fstpt
cmp
jnp
jne
imul
dec
cmp
cmp
cmpb
movsb
je
es
jns
or
jbe
shrb
sahf
dec
leave
imul
inc
cmpsl
cli
jno
nop
and
xor
out
xchg
sbb
pop
sub
es
mov
inc
inc
and
push
test
lds
das
clc
in
gs
jb
sbb
jg
stos
ljmp
pop
xor
je
mov
arpl
aas
int
movq
mov
dec
xor
out
in
pop
adc
lock
or
adc
fstpt
stos
bound
sbbb
je
das
sub
call
xchg
cmp
std
cs
outsb
hlt
je
cmp
inc
and
scas
notl
cmc
pop
mov
adc
cmp
inc
add
jns
pop
test
idivl
dec
and
fs
mov
ss
sbb
orb
xchg
out
pop
mov
cwtl
inc
pop
aas
ljmp
push
jno
jnp
call
mov
fwait
xchg
adc
mov
subl
cmc
sub
adc
std
ja
mov
cmp
lcall
fdiv
fs
shrb
pop
ljmp
pop
loop
pop
ss
dec
and
in
pop
iret
xchg
stos
popa
inc
lods
roll
cmpsb
dec
fcmovbe
emms
fwait
or
pop
push
jle
ljmp
mov
lahf
bound
idivl
fstps
pop
add
cmp
sbb
dec
xchg
es
rcll
push
and
mov
cld
pop
fsub
push
ds
xchg
push
pop
jecxz
bound
int
shl
sahf
sub
jb
cltd
mov
test
dec
ljmp
push
out
jbe
popa
subb
lods
stos
movsl
inc
icebp
in
ljmp
jbe
stos
lea
xor
mov
cli
pusha
ficoml
shrb
aam
pop
cld
stc
sub
push
mov
pop
enter
mov
mov
clc
sub
jecxz
push
mov
into
mov
lret
repnz
pop
mov
push
jo
lock
cs
xor
mov
adcb
lods
push
pop
scas
mov
sbb
jae
jmp
fistl
outsl
xor
xchg
cwtl
dec
add
je
sbb
arpl
dec
cltd
rcrb
pop
hlt
mov
mov
jb
mov
sbb
cmp
cmc
dec
jecxz
in
aad
ja
or
jg
jge
xor
sub
push
xorb
test
ss
or
es
mov
je
xchg
lahf
add
mov
mov
addl
xchg
adc
push
in
lret
daa
push
outsb
dec
movsb
loopne
popa
xchg
outsl
pop
adc
jl
scas
dec
shr
flds
jmp
gs
push
imul
imul
aam
sub
sbbl
inc
mov
ror
popa
sub
lods
les
js
repz
inc
pop
in
jecxz
fildl
add
adc
enter
outsl
aad
loop
xchg
dec
lahf
adc
adc
xchg
movsl
cmp
cmp
mov
mov
xor
sub
leave
mov
sbbl
inc
scas
mov
mov
es
cmp
lahf
popa
int3
cld
ja
sbb
hlt
pop
adc
push
pop
out
pop
mov
pushf
adc
fldt
cmp
mull
rorb
orb
fisubrl
pop
sbbl
mov
xor
insb
xor
cmp
cmpsb
cmpsb
data16
andl
adc
sahf
xor
mov
xor
test
push
and
pop
icebp
lds
mov
loopne
in
test
xchg
in
dec
das
and
sub
sub
adc
sub
iret
push
mov
fisttpll
xor
add
sub
push
lods
in
mov
or
add
cmp
add
xchg
popa
enter
mov
cld
stc
into
mov
xlat
test
sti
jne
sub
and
pop
inc
xor
outsl
mov
xor
pop
out
shr
push
fsubrl
add
aam
je
shll
fidivl
xchg
and
aas
push
arpl
sbb
orb
mov
inc
push
out
and
adc
inc
add
sbb
test
loope
or
fnstsw
sbb
sub
pop
test
or
push
xchg
dec
inc
cmpb
sahf
das
mov
mov
arpl
xchg
sti
movsb
fidivl
xchg
popa
into
jecxz
jl
adc
mov
or
cmc
negl
fistps
jmp
test
enter
les
loopne
sarl
xor
stos
sbb
sbb
jge
dec
xor
dec
cmpsb
cmp
lahf
icebp
rcr
rcll
push
test
enter
iret
mov
mov
mov
pusha
into
outsb
imul
roll
mov
jge
pop
jne
ds
xchg
jmp
clc
enter
sub
int3
adc
inc
iret
lret
ret
or
inc
inc
sbb
shl
cwtl
push
out
jmp
rclb
push
xor
cmp
push
push
mov
push
mov
ja
repz
pop
jmp
jle
sbb
jl
popf
adc
je
cmp
cltd
ja
mov
stos
fistl
addl
insb
pop
pop
fsub
push
icebp
stos
pop
in
cmc
mov
lds
pop
push
cld
mov
inc
dec
push
jg
or
mov
xorl
jp
jne
sti
int
loop
add
and
dec
add
notb
jnp
and
fwait
push
jbe
dec
and
int
push
das
aaa
adc
pop
push
cmovne
rcrl
call
mov
roll
and
fsubs
jge
fstps
pop
mov
bound
adc
test
adc
cmp
mov
stos
cmpsb
mov
mov
mov
test
pop
shll
testb
fwait
jnp
cmp
insb
push
int
jecxz
imul
xchg
or
mov
cmp
mov
sahf
mov
cmp
jmp
lods
dec
mov
inc
and
popf
or
dec
xlat
lods
in
jecxz
pop
sub
mov
daa
lods
inc
popa
inc
adc
mov
jns
add
rcr
push
xchg
mov
push
addr16
data16
add
push
sub
mov
dec
inc
vpshaq
rcrl
push
fidivs
xor
js
cmp
dec
or
mov
das
test
mov
add
cmpsl
adc
pop
jno
call
fistps
inc
and
sbb
fsubl
and
sub
cmp
add
fsub
aas
inc
aam
add
cmpb
popf
sub
adc
mov
ror
sbbb
add
mov
test
lods
test
push
mov
xor
cmc
test
jl
ror
fs
add
xor
mov
lahf
pop
cmp
je
in
in
mov
test
mov
inc
sub
jl
pusha
jp
insb
jb
cmp
xor
add
in
out
mov
mov
and
jmp
jns
inc
pop
roll
insb
loope
add
mov
insb
sub
nop
jo
jl
sub
sbb
xor
or
out
dec
adc
scas
sub
and
mov
outsl
mov
xchg
sub
test
push
psllw
popf
dec
sbb
scas
push
in
xorb
cmpsb
adc
xor
shll
roll
bound
or
cmp
xor
push
mov
cmpsl
es
jmp
leave
add
out
scas
cs
pop
sub
leave
mov
inc
jecxz,pn
cs
adcb
nop
clc
iret
ljmp
mov
push
xor
cmp
test
stc
jmp
imul
popa
ja
or
push
pop
pushf
mov
mov
xchg
fcmovnu
xchg
jmp
pop
cmp
iret
push
xor
xchg
arpl
fisubl
cmp
leave
push
mov
rorb
xor
cmp
es
out
lods
fs
mov
sbb
inc
xor
test
aad
add
mov
sub
push
pop
pop
inc
jae
pop
sbb
ja
add
pop
data16
cmc
fcoms
shll
or
push
out
jo
negb
addr16
jne
inc
ret
scas
rcrb
jle
gs
orl
push
fwait
lret
sub
push
dec
xor
rorb
ret
js
push
lahf
push
aaa
dec
jl
pop
mov
sbb
adc
mov
sub
cwtl
imul
jmp
fs
insl
or
test
pop
imul
cld
cmpsb
xchg
clc
xor
adc
aaa
sub
cmp
filds
jmp
fcmove
stos
faddp
loopne
scas
dec
bswap
or
jl
dec
test
mov
jnp
aad
ljmp
loopw
sbb
cmp
enter
mul
repnz
stc
sbb
repz
or
outsb
add
adc
inc
dec
loop
cltd
cmp
fistl
inc
dec
pop
cmp
dec
sti
cmp
insl
hlt
sbb
insb
nop
inc
testl
mov
mov
test
test
sub
movsl
xor
cwtl
push
fbld
cmp
mov
mov
inc
shll
cltd
pop
cli
int3
mov
inc
mov
or
lock
xorl
cld
test
cltd
mov
pop
dec
jle
aad
mov
data16
push
xorb
pop
in
sbb
leave
xor
lret
lock
jae
push
cmp
add
iret
sahf
xlat
add
push
js
dec
gs
movsl
push
test
jg
in
ss
scas
jecxz
mov
inc
divb
adc
ja
repnz
mul
sub
mov
aad
sbbb
decb
fwait
adc
fsubl
push
scas
jne
mov
aad
mov
add
or
mov
dec
fadds
jno
add
stos
mov
aam
pop
xchg
jge
inc
cmc
iret
push
into
inc
rcll
jae
out
movsb
es
push
ret
in
add
dec
mov
push
dec
aaa
cmp
add
inc
outsb
ret
sbb
mov
iret
es
mov
xchg
pushf
xchg
xor
jno
das
push
mov
pop
cmpsb
clc
adc
out
nop
cltd
enter
push
pop
scas
loope
jo
mov
ja
in
and
adc
pop
mov
fs
shl
add
push
dec
lret
cmp
and
pushf
mov
xor
adc
data16
add
mov
add
jns
xchg
ss
pop
lods
incl
rcrb
inc
mov
xor
data16
mov
adc
insl
out
test
lcall
bound
mov
rclb
adc
testl
loope
push
xchg
pop
jp
push
xchg
addr16
sti
xchg
repz
adcb
enter
add
stc
jp
xor
pop
jg
cmp
testl
xor
ficomps
push
pop
stos
jo
sarb
pop
jnp
push
jns
data16
sbb
add
les
lahf
sbb
adc
js
push
faddp
jno
sub
icebp
cwtl
loop
sahf
mov
xchg
lret
loopne
xchg
xorb
dec
sub
testb
and
jl
fs
insl
push
inc
pop
push
sbb
mov
sbb
frstor
mov
pop
movsl
shrl
push
lahf
inc
add
in
xlat
lea
in
movsb
add
mov
sbb
mov
insb
mov
inc
sub
and
jp
push
lcall
rcr
mov
ljmp
inc
sub
and
jp
push
lcall
rcr
mov
ljmp
inc
sub
and
jp
stos
adc
shrl
cli
addl
jno
inc
or
and
jp
ljmp
shrl
add
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
cmp
push
or
inc
cmp
sub
mov
rorl
mov
cmp
push
or
and
dec
jns
icebp
lods
loope
rorl
mov
cmp
push
or
and
dec
add
mov
mov
xchg
jmp
sub
jg
cmp
lcall
push
sbb
mov
push
sbb
jmp
push
xor
movsb
push
sbb
push
adc
or
fcoml
cmpsb
insb
aad
test
cmp
loop
push
mov
mov
xchg
pop
movsb
mov
js
sub
imul
jge
jge
mov
push
mov
and
mov
pop
fstpl
pop
xor
xor
test
jnp
and
cs
jo
out
mov
ret
in
pop
inc
in
add
sbb
inc
in
loopne
mov
sub
aam
mov
repnz
sub
inc
jge
insl
and
dec
add
rorl
mov
jnp
inc
and
push
dec
cmp
push
cld
mov
mov
repnz
cltd
call
pop
add
xor
inc
cmp
insl
pop
js
fdivrs
enter
mov
out
push
xor
or
jge
insl
and
dec
add
rorl
mov
cmp
push
or
and
dec
add
rorl
mov
cmp
mov
xchg
push
sub
pop
cmp
inc
outsl
inc
add
lds
sbb
imul
hlt
add
cmpsb
leave
insl
fstpl
jecxz
bound
lock
add
mov
mov
push
xchg
arpl
jle
mov
or
outsb
out
out
js
es
sub
out
cmpsb
jae
repz
shlb
movsb
rcrl
inc
mov
and
imull
pop
std
lock
and
loope
and
add
inc
push
ljmp
inc
sub
jns
lcall
jl
jmp
enter
fninit
popf
ds
xchg
sub
jl
push
fcoms
mov
jne
mov
add
jmp
add
lods
jge
push
or
cltd
xor
xchg
jae
sbb
dec
fsubl
push
xchg
add
in
sbb
or
lock
test
repnz
or
test
push
mov
cmp
and
lahf
gs
sar
dec
mov
xchg
sub
push
adc
and
sub
xor
xor
mov
push
fsubl
lods
pushf
addb
xor
mov
testl
lds
shlb
fistpl
data16
pop
adc
push
or
xchg
bswap
or
inc
ljmp
mov
pop
outsl
repnz
push
dec
mov
pop
and
adc
jno
data16
nop
inc
movsb
loope
ret
push
xor
lret
rol
out
arpl
jl
shll
fwait
mov
cwtl
rcll
test
and
outsl
mov
inc
pop
sbb
jmp
or
loopne
add
xchg
xor
push
mov
sub
lret
mov
mov
jge
shl
xchg
aam
movsb
jne
popa
dec
push
add
push
in
or
movsl
jecxz
das
push
sbbl
push
ret
or
outsb
les
lcall
cmpsl
mov
xchg
xchg
lock
cwtl
ret
jg
jp
lret
inc
xor
fisttps
addl
xchg
xchg
lods
dec
ja
push
sbb
push
es
push
dec
xor
jno
hlt
adc
ja
sbb
add
in
loopne
orl
lret
pop
push
push
pop
shlb
lods
xor
in
jno
pop
push
mov
bound
out
ror
xchg
imul
pop
ud0
cmpsl
pop
xor
fwait
inc
xor
sbb
jns
movsl
rep
pop
hlt
or
mov
jnp
daa
jnp
sbb
lcall
mov
or
sub
mov
daa
subl
mov
arpl
xchg
jo
sub
sub
jp
cmpsl
inc
cmp
sub
ja
xchg
clc
sbb
pop
jmp
leave
pop
stos
push
xor
test
aad
inc
cmp
cmpsl
int3
add
xchg
and
loop
xor
in
cmp
test
adc
aaa
or
ss
arpl
and
je
or
dec
pop
call
in
and
out
pop
popl
aam
out
ss
xchg
xchg
push
shr
add
and
cs
push
stc
imul
xlat
inc
dec
loopne
cmp
or
rcr
or
cmp
cwtl
popa
jns
movb
inc
outsl
xchg
lods
jb
shl
cmp
icebp
bound
or
sub
pop
inc
cs
dec
xchg
adc
pop
xlat
or
adc
pop
leave
hlt
lret
or
popf
js
shll
sbb
xor
fcompl
mov
clc
push
in
jns
inc
cmpb
fucomip
insb
xchg
fnstcw
add
loop
addr16
xchg
adc
pushf
shr
jp
cmpb
xchg
hlt
inc
fisubrl
testl
inc
out
mov
jae
and
xor
dec
jmp
xchg
xchg
aas
sbb
fs
cli
sbb
repz
insb
addr16
mov
daa
divl
pop
jmp
and
mov
daa
add
out
imul
pop
mov
aaa
gs
pop
mov
popa
xchg
xchg
push
mov
stos
mov
sbb
ret
cwtl
out
je
inc
push
pop
pop
jns
fcoms
mov
push
cmc
scas
mov
dec
fdivs
std
dec
mov
push
pop
sets
xlat
add
out
mov
fcomi
dec
push
fadds
dec
pop
repz
mov
sbb
and
sbb
mov
push
dec
jge
adc
add
mov
xchg
sbb
mov
push
inc
das
adcb
test
xlat
mov
outsb
push
stc
loop
arpl
call
pop
lea
mov
clc
outsl
add
cmc
fldenv
mov
sbb
xor
cmp
push
mov
or
adc
push
repnz
icebp
pop
inc
fistl
imul
mov
xchg
push
adc
push
push
cmp
mov
mov
mov
mov
jno
testb
jnp
ret
push
mov
imul
es
mov
jo
hlt
cld
pusha
pushf
push
hlt
fs
mull
jmp
adc
adc
inc
rcr
lret
icebp
js
sahf
loope
mov
arpl
pusha
sbb
pop
pusha
or
push
jmp
aas
xorl
sub
and
mov
cmpsl
adc
pusha
jne
inc
dec
adc
mov
incl
popa
dec
fwait
shl
add
movb
inc
dec
test
inc
fidivrl
sbb
add
mov
sub
das
push
pop
stos
jbe
jo
rclb
lods
hlt
xchg
aad
push
add
xorb
fs
icebp
sub
mov
jp
in
mov
push
mov
jecxz
arpl
incl
mov
xor
movsb
xchg
sub
jno
out
mov
sbb
xorl
int
repz
sti
lds
ret
enter
jmp
inc
inc
mov
pop
jg
sbb
and
call
or
cmpsl
imul
daa
shlb
out
scas
ret
outsl
and
pop
dec
lcall
mov
mov
cs
mov
repz
inc
stos
nop
inc
mov
gs
xchg
aad
mov
in
push
add
sbb
push
mov
xchg
xor
cmc
fdivrp
or
xor
mov
fcomi
push
inc
inc
inc
in
sub
and
xchg
adc
sbb
cmp
out
into
add
pop
xor
loopne
addr16
add
fsubs
pop
pop
lock
and
ret
aad
cmp
adc
hlt
test
out
sub
rcll
andl
inc
stc
push
xchg
jl
cmp
hlt
lods
enter
cmp
push
jno
inc
mov
aad
pusha
push
push
push
jmp
pop
or
lock
sarb
xor
loope
scas
daa
aad
mov
mov
adcl
sbb
pushf
xor
insb
push
jl
inc
jno
push
pop
mov
idivb
adc
inc
fistpll
push
notl
int
add
leave
push
es
test
into
add
pushf
sbb
lds
enter
out
mov
ja
fwait
cmp
fwait
dec
lock
and
hlt
jge
mov
out
lahf
je
cwtl
or
and
mov
leave
out
mov
popa
inc
add
jecxz
iret
movsb
dec
lea
mov
mov
push
mov
mov
test
bound
jae
mov
inc
or
imul
loope
scas
aad
outsl
ret
pop
mov
fsubp
cmp
mov
pop
cs
fsub
sbb
fldcw
daa
cmp
repz
sbb
xorl
jnp
cmp
daa
sub
or
outsl
sub
cltd
add
mov
ljmp
or
jg
test
outsl
pop
and
ficomps
pop
cs
inc
xchg
cmp
sub
mov
jge
loope
pop
push
and
add
jb
in
rcl
push
movsl
xor
rorb
jns
lods
cwtl
cmp
stos
jmp
std
fld
ret
imul
push
mov
leave
mov
or
stc
mov
fwait
testb
pop
addl
repnz
adc
in
pushf
stc
int
ja
inc
sbb
pop
mov
pushl
pop
rol
cmp
add
mov
fwait
shrb
inc
push
mov
aad
shrl
movsb
xchg
dec
push
inc
mov
push
inc
sbb
lcall
inc
pusha
test
pusha
adc
imul
fldt
cli
xchg
js
push
pop
hlt
pop
popa
fs
incl
popf
jb
jns
xlat
sbb
pop
ja
xor
sub
in
sti
cmp
pop
add
inc
out
pop
lret
movsl
mov
fmuls
cmc
cli
lcall
jge
outsb
cmp
jnp
sahf
add
cmc
xor
mov
pop
insb
xchg
sbb
shlb
ror
mov
inc
mov
dec
cli
inc
sbb
daa
jp
or
out
cwtl
and
pop
cli
jmp
dec
mov
dec
lret
adc
lret
shrb
daa
out
out
dec
inc
sbb
push
inc
addr16
jg
sub
push
push
adc
mov
sub
rorb
add
push
lea
pop
xchg
outsl
outsb
adc
test
lahf
push
pop
in
mov
cmp
outsb
lret
jp
rcll
mov
mov
shll
sub
shll
lret
call
lcall
push
mov
inc
and
mov
cmp
jl
movsb
pop
aas
pusha
mov
popa
int3
mov
insb
mov
sub
xchg
insl
out
stos
int3
fsubrs
out
mov
inc
imul
clc
shll
lahf
and
mov
add
ja
mov
xchg
aad
inc
clc
xchg
jnp
fisubs
mov
imul
inc
outsl
shr
fstl
jae
lret
xchg
dec
scas
pop
mov
cmp
push
adc
jl
sbb
fisubrl
cmp
into
inc
stos
int3
or
lds
cmpsb
clc
icebp
xor
jg
addr16
inc
les
cmp
or
arpl
inc
les
add
add
push
mov
jl
add
cld
and
ljmp
jle
testl
pop
jnp
repnz
and
jle
gs
loopne
jo
mov
add
cwtl
js
iret
inc
ror
push
push
push
push
add
negb
pop
cmpsl
push
mov
add
push
test
mov
fdivl
js
or
rorl
std
jecxz
push
mov
mov
sub
loope
inc
lock
sub
xchg
mov
xchg
pop
pop
sbb
out
shrl
imul
pop
psubsb
pop
in
mov
add
jmp
mov
test
or
xorl
push
jnp
addl
jmp
dec
sub
test
js
std
and
scas
ja
dec
mov
movsb
inc
push
pop
adc
xor
shlb
jne
sbb
dec
aam
scas
xchg
jp
push
sub
xchg
jo
mov
xchg
and
ror
insl
mov
mov
in
inc
rcr
mov
cld
iret
std
sbb
mov
jg
or
mov
inc
push
pop
adc
cmp
mov
or
stos
push
cmp
cmp
sbb
pop
scas
pop
add
cmp
mov
pusha
push
push
lods
push
out
fucomi
out
int
inc
sbb
outsb
inc
int
repnz
mov
dec
xorl
hlt
mov
dec
cli
js
lods
ffree
xlat
mov
cmpsb
push
cld
xchg
ja
sarl
inc
pop
pop
enter
loop
pop
cli
xchg
nop
stc
push
mov
jne
lods
or
negb
jle
push
daa
xor
xor
lock
pop
add
out
xchg
add
mov
mov
sarl
add
in
loopew
jno
xchg
xor
insl
pop
and
clc
stos
les
push
xchg
mov
xchg
test
test
jbe
mov
test
insl
fs
pop
cmp
or
pusha
fbld
jl
push
sub
inc
add
lock
sbb
lock
adc
outsl
jb
es
inc
sarl
lret
or
mov
mov
add
jp
push
orl
mov
cmp
clc
outsb
sbb
or
xor
sub
pop
loope
jp
into
fmull
aas
sbb
push
stos
dec
iret
push
pop
imul
pop
rcll
outsl
push
gs
loop
and
push
mov
js
pop
or
dec
mov
or
inc
pusha
mov
dec
sbbl
mov
arpl
ss
cmp
mov
in
insb
call
fsubp
movsl
mov
cltd
mov
inc
inc
cmc
mov
imul
mov
out
int3
or
sub
push
xchg
rcr
mov
aas
into
shl
aas
xor
hlt
xchg
xor
les
ljmp
sub
push
sbb
pop
cltd
push
pop
push
pop
lods
inc
mov
jg
stos
ror
nop
jne
dec
fidivl
dec
ss
and
or
fcompl
cmp
add
aad
jo
jns
dec
inc
adc
jmp
fcmovbe
push
imul
lahf
pop
push
or
xchg
insl
imul
xor
lahf
sbb
lock
sbb
rep
notb
outsb
push
dec
inc
and
mov
ja
and
push
sub
in
xor
in
push
push
inc
fisubl
adc
mov
adc
out
and
fisubs
je
inc
mov
imulb
mov
ficoml
js
aam
push
add
or
outsb
jle
xorl
cmc
not
fwait
and
inc
insl
push
imul
inc
in
or
xchg
inc
vpsllw
push
cwtl
adc
and
pop
rcr
mov
push
push
jl
hlt
adc
mov
ja
test
sbb
adc
dec
mov
fnstcw
dec
inc
outsb
xchg
insl
notb
mov
leave
jmp
fs
xchg
xor
inc
in
outsl
cld
negl
dec
xchg
adcl
jb
cwtl
das
mov
insl
adc
lahf
ffree
fsts
popf
addr16
dec
loopne
jb
fs
bound
inc
sub
rclb
les
jae
jns
imul
push
jp
cmp
popf
in
mov
lods
imul
adc
fs
test
and
cmp
adc
xor
xchg
stc
xchg
addr16
sub
bound
xchg
imul
in
pusha
and
mov
cmp
or
int
ret
adcb
mov
rcrb
iret
imul
movsb
aad
lods
sub
cld
divl
add
leave
push
cmc
add
inc
push
fstpt
dec
test
bswap
scas
sbb
fcompl
es
add
cmpsb
div
push
cli
ljmp
sub
xlat
inc
loope
dec
hlt
orl
push
inc
mov
testl
pop
mov
pop
mov
cs
outsl
lcall
insb
sarl
sti
mov
dec
xchg
mov
pop
xorb
cli
inc
mov
xchg
mov
cli
int3
movsl
cmp
test
cs
je
cmp
out
inc
fisubl
cmp
inc
int3
jb
mov
dec
pusha
pop
sub
pop
mov
push
push
pushl
rorb
xchg
nop
jbe
jg
test
filds
push
inc
pop
mov
in
int
movsl
sub
fs
ds
and
in
ljmp
ss
shrb
ss
es
dec
cmc
movsl
push
jne
rolb
sbb
insl
add
fwait
xchg
push
cmp
fsubrs
lret
mov
call
push
es
sub
xchg
mov
add
and
inc
adc
push
ja
shlb
xchg
or
out
push
and
cmp
or
mov
xor
and
sti
icebp
inc
out
xchg
push
mov
and
mov
push
mov
sarl
sti
add
dec
or
jmp
jo
cld
fists
fistl
ret
sub
stos
sub
mov
xor
push
stos
scas
jno
cmp
adc
jmp
and
sbb
fmull
pop
ljmp
pop
aad
fcomp
xlat
pushf
xchg
inc
test
add
scas
pushf
sub
jp
adcb
xor
adc
mov
cmpsl
aas
jo
cmc
mov
mov
dec
shll
mov
sub
push
sbb
cmc
pop
scas
and
adc
mov
clc
aaa
cmc
pushf
mov
mov
into
or
enter
pop
cld
aaa
sub
jmp
imul
jmp
pop
cmpb
orl
inc
jne
and
adc
pop
cmpsl
xchg
or
lods
xor
cli
adc
sub
cmpsb
dec
daa
rolb
popa
jno
lds
inc
mov
mov
data16
jb
in
xchg
mov
pop
ja
adc
inc
pop
cs
imul
mov
testb
out
xor
pushf
push
mov
sub
dec
add
mov
stc
dec
sarb
je
lahf
mov
xchg
add
imul
mov
lods
aam
xchg
les
popa
mov
stos
xchg
into
add
das
jmp
ds
pusha
shl
pusha
jmp
sbbb
pop
cmp
inc
bnd
add
daa
sahf
in
rcr
cltd
call
pop
gs
sbb
fmull
jg
xchg
lcall
mov
pop
sub
sbb
push
movsl
pop
lock
cld
in
xor
out
flds
cmpsb
push
loop
std
dec
mov
and
cld
xchg
test
push
pop
sub
or
call
mov
cmp
or
dec
or
movl
jp
into
mov
scas
loop
aas
loopne
mov
mull
inc
sbb
pcmpeqw
cmp
xchg
xor
inc
data16
or
pop
mulb
aam
js
stos
mov
cmp
fldt
jl
aad
int3
add
inc
adc
dec
andl
loope
push
sub
mov
cld
xchg
les
push
mov
lcall
sahf
jge
mov
xchg
and
adc
aam
or
mov
sub
incl
cmp
push
push
stc
jne
sbb
ds
and
jno
mov
addr16
cmc
xchg
push
movb
mov
jp
movsb
in
sahf
jl
pop
lcall
sub
cmc
mov
jp
shll
mov
inc
xchg
icebp
repz
pop
dec
nop
lea
pushw
add
enter
ljmp
mov
push
rclb
push
and
push
imul
jo
test
orl
in
in
or
outsl
daa
inc
jp
mov
dec
ja
mov
and
sub
xchg
and
cmp
fldenv
mov
clc
mov
call
aas
mov
inc
daa
mov
cld
loop
shrd
cmc
test
cwtl
enter
cltd
shrl
mov
aas
mov
out
lods
fs
imul
adc
jb
loop
enter
push
into
nop
cmp
cmp
sub
pop
bound
inc
insb
mov
test
aam
mov
jge
mov
hlt
popf
and
cmp
mov
daa
test
jnp
andb
pop
and
lds
addr16
mov
xor
out
mov
cmp
insb
jg
pop
dec
dec
sub
in
or
or
mov
jne
mov
shll
push
fwait
cmp
lahf
cltd
push
int
mov
orl
mov
mov
gs
outsb
ds
push
lea
lods
in
dec
gs
mov
test
std
add
add
stos
ret
jecxz
push
inc
daa
mov
insl
mov
sbbb
test
mov
push
sbb
adc
in
cmp
popa
mov
pusha
mov
add
je
shl
push
ljmp
jno
subl
mov
xor
ja
or
popa
dec
lahf
dec
rcll
push
mov
pop
push
stos
adc
cmp
push
cmpsb
pop
pop
xor
decl
push
divb
sub
mov
ljmp
ss
inc
ss
dec
adc
cltd
lea
inc
lea
test
and
in
addr16
push
push
push
ja
sub
pop
inc
jns
push
dec
add
jmp
je
fnstenv
jg
and
icebp
xor
mov
push
pop
cmpsl
inc
lahf
lods
and
fs
lret
mov
fidivrs
mov
int
sub
push
inc
mov
aaa
movsb
fldt
ds
popa
xor
inc
jge
insl
and
dec
add
rorl
mov
cmp
push
or
and
dec
add
rorl
mov
cmp
push
or
and
dec
add
rorl
mov
cmp
push
or
and
dec
add
rorl
pop
and
jle
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
imul
adc
push
sbb
mov
jp
push
pop
xchg
dec
loope
hlt
scas
les
aam
sub
xor
add
adc
fs
push
mov
jp
or
cmp
or
cli
mov
sbb
lret
cmp
push
rcr
push
ds
dec
les
inc
mov
cmpsl
or
adc
inc
mov
fwait
out
jge
dec
inc
inc
push
mov
nop
aas
std
mov
adcl
arpl
mov
mov
pushf
ror
and
jg
popa
dec
movb
pop
je
and
add
xchg
cmpsb
in
aaa
add
data16
dec
xchg
jnp
push
sbb
jns
aaa
in
andl
imul
mov
mov
out
xchg
movsl
imul
push
not
shl
sub
sti
pop
aam
fwait
mov
sbb
fs
cmp
pop
sub
xchg
in
xchg
mov
mov
shr
push
cmovl
dec
xchg
dec
popa
das
hlt
in
orl
xor
add
js
fs
in
mov
es
pop
mov
cmp
sub
sbb
ljmp
add
lds
cmc
push
aam
cmc
or
pop
lcall
cli
mov
mov
sub
daa
mov
clc
and
mov
xchg
pop
push
mov
mov
and
push
mov
xchg
dec
in
hlt
sub
sbb
or
xor
add
adc
fs
push
mov
xchg
dec
in
hlt
sub
sbb
or
lock
sub
inc
mov
mov
in
sbb
adc
inc
iret
gs
pusha
xor
ds
iret
arpl
mov
daa
pop
stos
mov
push
sbb
je
stos
mov
adc
rorb
es
int3
lcall
mov
sub
pop
fnstenv
mov
in
in
cmpsb
and
cltd
insb
inc
jmp
mov
mov
lcall
dec
test
bound
mov
xchg
mov
rclb
aas
lret
out
movsl
arpl
or
xchg
out
sbb
or
fisttpl
loop
gs
jbe
cmpsl
arpl
inc
push
xlat
add
push
pop
outsb
cmp
outsb
lea
xorl
shll
loop
into
jne
jg
xchg
pop
test
cmpsb
cmp
test
inc
adc
dec
lret
inc
push
cld
push
lock
push
adc
jo
cmp
or
pop
xor
scas
aaa
rcrb
es
adc
fisttpl
popa
jg
insl
ljmp
pushf
popaw
xchg
dec
mov
mov
or
xchg
inc
sub
fld
into
fcom
addr16
adc
lods
rorl
out
jmp
xchg
push
or
push
imul
or
sbbl
push
cmc
add
stos
ja
out
pop
inc
mov
xor
pop
mov
out
xchg
mov
out
addr16
xorl
push
and
dec
adc
outsb
cmp
ret
cltd
bound
aad
call
gs
mulb
push
sbb
leave
and
mov
mov
rclb
adc
mov
call
xchg
mov
or
dec
mov
pop
mov
insb
bound
insb
sub
jnp
lea
icebp
cmp
lret
insb
test
pop
insl
adc
incb
add
mov
mov
jp
filds
cli
push
or
ss
lcall
jp
das
sbb
out
inc
in
pop
adc
pop
ss
insl
setno
push
out
out
add
addr16
dec
mov
test
cmpl
push
push
ror
fdivrs
popa
mov
pop
inc
jo
mov
push
mov
enter
cli
rol
mov
cmpsb
jecxz
ficoml
lods
or
cmpsb
jbe
mov
mov
adc
fmul
leave
imul
rclb
cmp
add
inc
sub
xchg
int3
lds
clc
idivl
xor
cmpsl
sarl
arpl
icebp
test
and
lock
cwtl
jae
and
push
mov
mov
push
out
jp
pop
add
xchg
cmpl
xor
mov
xor
dec
adc
inc
push
not
data16
das
les
adc
pop
addr16
lcall
mov
into
cli
push
cli
pshufw
mov
stos
lock
cmp
jne
and
sub
fmull
or
cmp
add
test
repnz
cmp
imul
cmp
mov
loope
aaa
movsb
sub
rcrb
dec
xorl
lock
orb
inc
sti
push
cs
inc
out
imul
push
push
fisubrs
iret
mov
mov
ljmp
adc
mov
popa
lret
inc
or
sbb
cmp
mov
lods
pop
push
cmp
repnz
out
cmpsb
cltd
insb
js
xchg
les
js
imul
sub
sbb
cld
out
fistl
arpl
sub
jp
ja
mov
ljmp
pop
or
inc
push
daa
in
mov
es
jle
adc
into
nop
popa
cwtl
ret
or
stos
jl
mov
add
sarb
cmp
in
sahf
mov
push
cmp
nop
push
in
and
negl
lock
push
push
mov
mov
out
or
cld
push
into
testb
imul
dec
xchg
xchg
cmp
imul
sbbb
mov
mov
call
fcoms
enter
dec
adc
repz
dec
adc
mov
mov
pop
mov
in
mov
cmpb
dec
and
push
mov
jne
js
adc
dec
jmp
push
dec
stc
in
mov
sub
pop
out
icebp
movsl
xorl
daa
dec
les
or
inc
aas
dec
cs
mov
mov
sub
ret
or
loopne
inc
push
imul
mov
das
aad
movsb
pop
mov
aad
rcl
jle
mov
mov
cltd
ljmp
jmp
adc
pop
les
sbb
jnp
shll
jecxz
push
ss
push
push
stc
arpl
pop
cmpb
mov
add
pop
jo
inc
test
out
mov
xchg
bound
sbb
pop
sub
push
sub
dec
pop
inc
cli
test
leave
pop
jmp
repz
enter
mov
mov
mov
jecxz
pop
fidivl
popf
adc
mov
xchg
xor
imul
insl
scas
inc
pop
sub
mov
fcom
pop
mov
adc
jecxz
push
cmp
aam
adcl
roll
mov
test
sbb
in
cld
out
pop
xchg
data16
xchg
int
xor
push
fxch
xor
in
cmp
cli
push
push
fwait
cmpsb
decb
mov
jno
cltd
cmpsb
sub
inc
sbb
inc
jnp
movsb
dec
jle
fnstenv
push
xchg
inc
lea
rcrb
dec
jne
dec
xchg
into
pop
std
in
push
aam
inc
jns
push
int
jo
cmp
add
pushf
das
inc
sub
lods
subb
jl
mov
out
std
in
mov
pop
mov
clc
mov
das
movsb
pop
aas
mov
icebp
dec
das
bound
movsl
pusha
cmp
lods
insl
mov
out
lds
sarb
imul
mov
push
adc
repnz
jg
lods
xchg
xor
cmp
add
cwtl
outsl
xchg
cmc
popf
cli
mov
sub
mov
movsl
hlt
jne
xchg
xor
mov
out
loopne
dec
out
and
call
fcomps
and
xchg
movsl
into
push
icebp
add
or
or
dec
ret
in
jg
cwtl
xor
mov
add
jecxz
adc
bound
adc
rcl
push
sbb
addr16
ljmp
aas
int
fsubl
jo
xchg
pop
lcall
loop
dec
xchg
jmp
mov
mov
jmp
cmp
inc
mov
int3
out
or
out
in
mov
mov
js
ret
pop
and
stos
xorb
add
test
cmp
or
add
mov
fwait
xchg
push
shll
xor
inc
sub
jnp
or
test
inc
add
lret
daa
sbb
ret
jp
dec
movsb
jp
adc
pop
push
dec
push
and
cmpl
pop
stc
cs
push
xchg
das
loope
dec
out
mov
cs
or
mov
xlat
sub
sahf
fistps
pop
jae
adc
or
xor
scas
and
push
jmp
xchg
cmp
or
popa
and
into
stos
xor
lods
lods
dec
repnz
pop
cld
data16
pop
in
xor
lret
mul
add
stos
test
cmp
mov
cmp
fsubs
cmp
and
xchg
das
pop
test
adc
scas
testb
lea
push
insb
fcmovnu
cmp
mov
lahf
sbb
cld
aad
outsb
sub
mov
jle
into
xorb
adc
test
push
andb
mov
ja
daa
jp
call
cmpsl
fbld
mov
adc
les
push
and
fs
mov
call
sbb
ret
js
mov
cwtl
fisttpll
mov
xor
or
xor
es
and
insb
pop
sub
mov
inc
stos
fisttpll
aas
sub
scas
ljmp
pop
gs
sahf
mov
mov
cmp
cwtl
adc
dec
cs
mov
lods
fwait
arpl
pop
pop
testl
pushf
jge
stc
pusha
inc
jb
cmpl
insl
dec
push
pop
jg
je
lods
popa
test
aad
xorb
inc
adcb
int
or
ret
sub
fstpl
lods
fsubrs
adc
stos
cmc
mov
test
cmpl
les
push
cmc
frstor
xchg
and
pop
add
mov
adc
and
pop
cmp
xchg
or
fwait
cmp
icebp
pop
dec
push
mov
repnz
xor
add
pop
pop
cmp
ror
and
pusha
mov
and
ret
mov
fldt
test
mov
movb
fsubl
cs
outsl
das
repnz
mov
mov
cmp
sub
dec
mov
cwtl
mov
push
cmpsl
jae
sbb
inc
jg
adc
push
xchg
push
icebp
pop
push
xchg
notl
pop
std
xchg
inc
fidivs
in
mov
out
andb
loope
mov
mov
jmp
aam
nop
lds
clc
sbb
jmp
gs
jne
cmc
sub
lods
mov
inc
cwtl
push
pop
ljmp
fcmovnb
sbb
mov
aas
push
mov
cmp
mov
cmp
cwtl
xor
inc
adc
int3
inc
mov
or
mov
push
and
push
iret
jne
cmpsb
sbbb
push
hlt
xor
xor
aam
mov
push
lods
jb
loop
pop
xchg
sbb
and
dec
in
int3
sub
pop
lret
push
push
loop
lods
lea
sbb
xchg
add
shlb
js
dec
cmp
rcl
and
jnp
sub
mov
out
lret
mov
dec
daa
xchg
xor
out
not
jns
add
sarb
jl
adc
cld
insl
cwtl
xor
mov
jo
ss
sbb
dec
jl
popf
xor
cmp
leave
xchg
lods
bound
stos
pushl
fld1
in
cmp
insb
lcall
inc
mov
sbb
mov
lods
lea
cli
add
xor
loop
shll
sub
call
fstpl
jne
dec
mov
mov
add
push
jl
push
sarl
mov
mov
repnz
dec
xchg
or
xor
adc
dec
in
adc
inc
int3
je
ficomps
sbb
mov
cli
pop
push
movl
fld
icebp
stos
mov
les
call
incb
sbb
push
fs
stos
fs
and
sub
aas
outsl
adc
push
arpl
pushf
jns
std
xchg
ja
movsb
push
pop
push
cmp
icebp
in
push
sub
out
or
jecxz
cli
lea
subb
dec
cs
push
fwait
rclb
xchg
dec
add
mov
mov
jae
lock
mov
adc
ret
xchg
cmp
mov
push
jnp
xchg
mov
in
push
xor
jl
movsb
packsswb
lds
dec
aas
xchg
cmpsl
add
lea
push
xchg
clc
pop
test
mov
push
lret
stos
mov
cmpb
loop,pt
test
pushf
push
mov
mov
das
cmpsl
inc
pop
insb
loopne
push
and
pop
pop
adc
mov
call
mov
pop
imull
adc
dec
xor
adc
inc
mov
call
mov
jecxz
outsb
xchg
lods
cli
loopne
rcl
int
in
and
rcrl
int3
pushf
mov
lds
sub
inc
divl
test
or
je
jp
lods
dec
sbb
inc
test
fldt
pusha
lock
setp
bound
js
xchg
icebp
out
cmp
dec
mov
push
cmp
xor
into
repnz
les
bound
imul
test
jg
orb
mov
aad
loopne
into
and
insl
loopne
xchg
jb
mov
in
or
inc
cmpsl
push
mov
lea
or
rcl
je
xlat
mov
xor
aaa
xor
or
jb
jae
jo
je
inc
xchg
pop
mov
dec
add
pop
push
sub
call
mov
fwait
loop
fsin
addr16
pop
cmpsb
jle
fsubs
adc
adc
pusha
jle
out
mov
jnp
insb
lds
fwait
jle
popf
cwtl
jmp
mov
lahf
cmpsl
test
out
mov
pop
sbb
std
leave
in
lea
push
or
push
cmp
push
roll
in
loop
mov
sbb
out
hlt
lret
mov
ds
push
mov
js
dec
rorl
scas
popa
mov
ljmp
mov
sub
jg
push
scas
pop
aas
push
mov
adc
iret
popf
fisubrs
xor
push
cmp
xor
ds
xchg
iret
nop
mov
es
lahf
jmp
lods
push
xchg
enter
mov
aas
sbb
mov
or
lret
fdivs
jmp
inc
std
cmp
or
rcrb
mov
inc
xchg
add
jne
ja
popf
xor
int3
loop
sahf
dec
xor
dec
cld
dec
mov
aas
pop
lods
and
cmp
inc
mov
cmc
cltd
bound
ljmp
loop
outsb
pop
dec
test
sti
lods
aaa
xchg
xor
mov
xchg
cwtl
movsl
imul
and
push
xor
rcrl
filds
push
adc
cmpsb
sub
jno
arpl
leave
cmp
pop
neg
xlat
sarb
mov
popf
cmp
sbbl
stc
lahf
push
adc
mov
mov
sti
jecxz
cmpsl
sub
xchg
and
and
or
orl
stc
imul
movsb
cltd
or
loopne
cmp
test
icebp
stos
out
mov
mov
scas
inc
jmp
jecxz
or
sub
bound
cmp
lds
mov
cmpb
stc
test
mov
inc
fldenv
cmp
aam
out
icebp
add
lods
mov
jns
outsl
adc
lret
inc
mov
mov
push
arpl
stos
mov
or
mov
pop
xor
ret
mov
mulb
pop
pop
and
stos
inc
mov
mov
mov
sbb
or
inc
fcompl
adc
mov
call
sahf
xchg
popa
pushf
sub
in
in
or
or
dec
iret
fldt
pop
pusha
xchg
pop
mov
in
daa
cli
cmp
movaps
stc
push
testw
fwait
cmpsl
scas
inc
adc
mov
imul
in
adc
mov
in
popa
push
push
jle
inc
lea
dec
int
out
xor
popa
inc
das
rcl
test
mov
in
push
ds
je
push
stos
sub
frstor
jl
ret
inc
enter
clc
jbe
cmp
jl
add
fcomps
xor
push
pop
dec
outsl
out
movsb
cld
mov
lret
cmp
daa
jge
sub
xor
push
movl
lods
mov
mov
lret
rorl
sbb
jb,pt
imul
mov
pop
mov
push
sub
dec
or
inc
movsb
inc
or
lahf
mov
sbb
cmp
push
pop
push
xchg
mov
stos
pop
or
mov
fsubs
lds
iret
mov
inc
pop
mov
adc
aam
idivl
cli
push
pop
sub
mov
sbb
imul
and
leave
enter
iret
xchg
aam
mov
mov
jp
lods
or
aad
outsb
fcompl
inc
outsl
daa
repnz
das
test
scas
and
inc
sbbl
notb
enter
add
xor
mov
pop
inc
or
or
xchg
dec
mov
dec
mov
out
sahf
loop
mov
push
mov
push
scas
cmp
push
gs
pushf
popf
js
lds
jl
add
out
insb
dec
jle
in
jb
test
or
int
cwtl
mov
mov
aaa
push
movsb
fstenv
arpl
cwtl
insl
pushf
sub
jl
rol
arpl
movsw
jo
and
outsl
jmp
lock
notb
pop
mov
call
lahf
or
int
dec
gs
cmpsb
jp
or
or
mov
ja
mov
bound
dec
jp
cmp
sbb
jae
std
pusha
cli
lcall
sub
cmpsl
fimuls
xchg
into
jbe
std
cmp
sahf
outsb
dec
inc
mov
jle
add
insl
pop
and
scas
cld
loope
mov
dec
pop
jns
xchg
loopne
cmp
dec
clc
or
gs
push
jno
fdivr
mov
lock
mov
mov
frstor
lahf
add
cltd
jecxz
sub
popa
insl
or
jno
out
pop
outsb
push
sbb
jecxz
ror
push
pop
mov
ljmp
loopne
adcb
in
stos
sub
mov
xor
es
or
mov
scas
cltd
je
sbb
inc
mov
fadds
divb
shll
or
mov
add
neg
pop
jnp
repnz
push
imul
movsl
xchg
ret
or
mov
ljmp
std
lret
stos
fildll
fdecstp
mov
int
xchg
fistps
fucomi
addb
ret
jns
fnsave
imul
pop
jb
pop
dec
cmc
aaa
negl
cltd
fmulp
xchg
out
addl
pop
xorl
inc
pop
jg
into
pop
adc
mov
xchg
xchg
jle
mov
bnd
fiadds
cmp
cmpsl
jb
dec
ds
rcll
scas
xchg
lods
filds
loop
push
stos
gs
es
push
pop
sub
ficoml
fnstsw
pop
add
cmpsl
sub
sti
aaa
add
and
adc
mov
mov
push
xchg
dec
aam
out
enter
pushf
imul
sub
jle
mov
shrb
jmp
push
mov
test
in
cltd
fisubrl
enter
mov
gs
xchg
leave
testb
sbb
and
or
mov
dec
mov
ret
jp
mov
sub
shll
insl
hlt
insb
bound
aaa
adc
or
fadds
ss
mov
lret
and
ret
sti
notb
or
mov
cli
pop
aam
inc
ret
cmc
ds
lds
mov
mov
mov
sub
or
dec
stc
ficoms
or
mov
stos
loope
test
cs
loope
xchg
ret
fwait
ret
sbb
test
xlat
outsl
lds
jle
fildl
or
jo
sub
bound
into
or
or
sbb
adc
sub
xchg
int3
adc
inc
dec
outsb
and
jecxz
sub
jns
int3
loop
cmp
mov
xchg
add
pushf
inc
xor
ret
xor
xor
testl
dec
popf
pop
pop
imul
insb
fs
jnp
call
xchg
aaa
sti
and
mov
sub
push
popf
std
add
or
add
fbstp
inc
out
cwtl
xor
push
cmp
lret
xor
mov
test
dec
icebp
mov
test
push
pop
mov
daa
inc
pop
sbb
dec
daa
jmp
stos
mov
or
fninit
add
aad
aam
nop
or
jne
mov
sbb
rcl
or
test
dec
push
or
js
outsb
pop
sub
adc
cmpb
sub
stos
insb
inc
push
loope
fldenv
xor
aam
add
sub
inc
lret
push
sub
inc
cmc
inc
mov
lods
adc
popf
mov
stos
cmc
test
aas
push
sub
push
push
jmp
ret
add
popf
repz
and
xchg
xchg
andl
sub
cmp
inc
rcr
adc
mov
cmc
adc
loope
sbb
sbbl
fwait
jne
fists
das
push
inc
mov
sub
inc
jo
push
pop
dec
pop
sahf
push
rolb
fwait
pop
push
inc
or
sbb
jo
mov
and
mov
hlt
int3
or
cs
push
pop
aam
hlt
push
lret
sub
outsl
aaa
imul
mov
jae
fs
cmp
jmp
test
repz
jle
or
leave
test
mov
dec
lods
xor
xor
lcall
sbb
sti
ljmp
mov
pop
mov
faddl
push
mul
mov
mov
cmpsl
mov
or
push
mov
movsb
mov
shr
aam
inc
xor
les
cmp
icebp
ljmp
je
inc
lcall
test
dec
in
hlt
sub
sbb
or
xor
add
adc
fs
push
mov
xchg
dec
in
hlt
sub
sbb
or
aaa
push
pop
adc
gs
push
mov
pop
nop
dec
in
in
sub
sbb
or
sbb
mov
cmp
fs
aam
movsb
jp
shrb
xchg
cmp
cmp
sub
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
jl
insb
daa
pop
pop
dec
pop
icebp
push
pop
or
push
inc
cld
mov
stos
faddl
lods
out
mov
jl
insb
daa
pop
pop
dec
pop
cmp
sub
sbb
or
cld
mov
cmpsl
fdivl
lods
aaa
pushf
xlat
mov
jl
insb
daa
pop
cmovl
cmp
sub
sbb
or
cld
push
iret
popf
mov
int3
xchg
loop
and
or
arpl
mov
cwtl
cmpsl
mov
popf
cmp
sub
xchg
or
fcmovne
sub
data16
sub
loop
icebp
iret
add
imul
jb
mov
xlat
add
pop
dec
cmp
and
xchg
and
cld
xor
add
out
out
sub
ss
dec
aaa
sbb
cmpsl
cltd
mov
and
js
movsb
in
sbb
pop
mov
mov
push
sub
lahf
pop
dec
inc
adc
mov
xchg
lahf
push
push
xlat
lea
cmpl
int3
decb
xchg
mov
mov
and
in
movsb
and
mov
insb
xor
sbb
sbb
or
cld
scas
in
mov
mov
xlat
mov
xor
and
js
push
sub
fimuls
call
call
lret
dec
or
cmp
add
imul
into
mov
les
mov
insb
inc
xor
jb
sbb
sbb
or
cld
mov
cmpsl
fcoml
lods
out
xlat
mov
jl
insb
daa
pop
pop
dec
pop
cmp
sub
sbb
or
cld
mov
cmpsl
fcoml
lods
out
xlat
mov
jl
dec
mov
ret
out
inc
pop
and
xchg
pop
and
out
decl
cld
mov
sbb
mov
cld
cltd
mov
inc
dec
jle
iret
cmp
ja
and
adc
and
ds
sbbl
fldl
cmp
mov
jbe
sbb
out
movsb
jmp
mov
notl
add
jbe
pop
aad
in
mov
cmp
and
aam
push
aas
inc
enter
mov
lret
insl
gs
pop
adc
shll
sti
xchg
xchg
leave
in
fildl
sub
inc
mov
jns
movsb
lcall
roll
jne
jg
push
fcmovnbe
fldt
mov
out
insb
sbb
xchg
call
mov
add
in
dec
dec
and
jae
pop
aad
loope
mov
cltd
enter
cmp
xor
fxtract
inc
idivb
push
rol
lret
das
push
or
cli
out
mov
mov
pop
push
insl
mov
icebp
ja
cwtl
into
inc
pushf
push
fcmovb
int
mov
shlb
adc
imul
call
lds
jo
push
call
ss
jg
clc
pop
int3
jg
jecxz
sbb
ret
ja
inc
cli
mov
hlt
lcall
mov
test
test
mov
jp
mov
outsl
cwtl
xchg
hlt
push
mov
or
out
mov
adc
push
mov
jg
dec
cltd
test
mov
pushf
rclb
jp
sbb
sub
out
adc
or
inc
bound
cmp
sbb
sbb
addr16
adc
mov
fimull
sahf
es
cwtl
aam
xchg
xchg
jp
mov
lret
xor
outsb
orb
pop
sti
shlb
mov
sbbl
test
scas
jns
cs
xor
insb
inc
stc
inc
sub
hlt
xchg
jmp
cmp
inc
repnz
jecxz
sub
cmpsb
or
ljmp
xchg
mov
or
inc
jae
loop
fcomps
pop
push
sub
xchg
and
ret
adc
jge
clc
push
mov
or
clc
cli
int3
lock
sub
loop
inc
mov
mov
mov
repnz
inc
xchg
pop
adc
push
cmc
mov
xor
xor
mov
out
mov
jmp
mov
xor
cltd
xchg
pop
sbb
aad
cmp
jbe
dec
xchg
xor
sbb
pop
add
sahf
mov
mov
xor
cmp
cltd
ret
jg
cmpsl
mov
mov
insb
cmp
add
aad
lods
fcomip
cmp
sti
lret
into
cmp
xchg
insb
inc
xchg
or
mov
inc
fsubrl
jecxz
cmp
cmc
in
mov
xor
sbb
xchg
mulb
push
jge
lahf
sti
inc
rorl
in
cmp
and
fs
int
or
in
stc
adcb
xor
add
push
call
push
lret
mov
out
mov
sub
jg
inc
cmpsl
xchg
pop
fdivl
shrb
dec
icebp
test
xchg
sub
jecxz
push
scas
scas
mov
shr
xchg
push
rcr
popa
push
mov
roll
shrl
ljmp
mov
sub
pusha
push
nop
add
ljmp
movsb
dec
cld
cmp
xchg
fprem
adc
push
or
fs
mov
iret
cmpsb
stos
xchg
mov
or
inc
mov
repz
push
test
xchg
add
add
cmpsb
xor
repz
sbb
push
push
addb
movsb
mov
jnp
out
jp
pop
sahf
mov
and
push
sub
daa
das
mov
mov
jb
cmpsl
dec
sub
cvtps2pi
sbb
dec
or
fisttps
lahf
jae
pop
add
in
and
fs
pop
xchg
xchg
pop
leave
sbb
xchg
push
xor
imul
cs
jno
xchg
xchg
cmpsl
ror
pop
in
fdivr
imul
icebp
enter
lahf
daa
pop
in
sbb
jmp
xchg
pop
xor
add
and
mov
mov
daa
sbb
adc
sti
mov
rclb
lahf
jo
ss
out
mov
fldenv
insl
scas
inc
ja
subb
imul
pushf
leave
pop
pushf
shrl
jnp
jmp
int
sub
xchg
aam
cmp
jmp
mov
jae
data16
and
sarb
stc
sub
daa
sti
pop
sti
adc
and
mov
or
in
push
jo
shlb
xchg
cwtl
xor
lcall
cmp
repz
add
adc
scas
dec
or
mov
and
mov
add
and
cmp
ljmp
and
shl
sbb
mov
andl
pop
aam
gs
cld
popf
or
mov
mov
dec
in
and
ja
inc
cmp
scas
mov
dec
xchg
sbb
cmpb
inc
test
push
pop
fistpll
dec
stos
add
ret
mov
fsubrl
imul
xor
js
sub
sbb
cmp
rorb
mov
sahf
jae
mov
jecxz
pushf
ret
test
gs
xor
les
pusha
xor
je
pop
icebp
fldt
dec
ret
and
mov
pop
push
push
inc
xchg
test
cld
lret
adc
xchg
jmp
mov
out
push
xchg
in
or
stos
fcmove
dec
and
lahf
jo
iret
mov
dec
popa
fwait
out
pop
sti
jne
in
adc
orl
push
mov
cmpsl
enter
adc
aas
mov
sti
mov
cmpsb
cmp
cmpsb
scas
jnp
in
mov
add
lret
cmp
pop
into
mov
pop
pop
or
jecxz
faddl
jns
hlt
jae
inc
sub
jo
outsl
adc
inc
or
cmp
jbe
out
dec
int3
mov
add
mov
pusha
nop
les
xlat
rcl
and
fmull
bound
mov
test
and
pop
ficompl
gs
push
ss
mov
cmp
pop
popf
cld
rol
push
mov
pop
mov
push
insb
loop
pop
movsb
test
xor
into
jns
inc
out
in
and
sbbb
stos
fstpl
aam
ret
xchg
mov
in
mov
mov
jle
ljmp
lcall
rol
mov
adc
das
imul
bound
xor
roll
and
mov
das
mov
popf
scas
inc
pop
cmc
mov
push
sub
add
dec
ljmp
repnz
pop
inc
fwait
push
jb
imull
mov
aad
inc
shlb
scas
cmpsb
pop
cwtl
pop
lcall
mov
decb
fwait
pop
or
test
push
push
mov
or
pop
mov
lret
rclb
add
orb
daa
ret
in
jl
mov
add
pop
mov
addr16
jo
fs
mov
ss
cmp
outsb
scas
shl
jle
movsb
rclb
pop
jp
mov
push
cmp
loop
mov
loope
push
inc
sarb
add
out
dec
push
mov
scas
nop
dec
mov
test
jp
pop
dec
jns
dec
jae
rcl
mov
mov
push
mov
arpl
sub
scas
into
loope
mov
std
jecxz
pusha
stos
cmp
adc
repz
stc
xchg
cwtl
pop
lock
jg
mov
mov
repnz
clc
fmul
push
adc
inc
iret
shl
fxch
jb
xlat
ss
xchg
inc
xor
lods
int
icebp
xchg
jg
or
into
jmp
mov
pushf
sahf
and
sub
mov
push
addr16
jge
mov
call
clc
lods
cmp
es
sahf
std
fidivl
mov
jns
xor
movl
fcomps
sbb
shll
dec
mov
pop
adc
loopne
btc
push
jb
repnz
xchg
add
cmp
dec
pop
out
bound
in
jo
stc
fbld
dec
mov
lahf
xorb
dec
dec
sub
stc
jno
sbb
out
mov
push
add
jnp
dec
push
jecxz
sub
push
mov
in
xchg
jle
in
push
rorl
jg
fidivrl
and
push
jo
in
fsubs
and
mov
lretw
pop
sbb
push
cmc
in
cmpsb
push
xor
leave
cmpsb
cs
lods
das
jae
sbb
in
cmp
mov
pop
mov
and
pop
xor
inc
sbb
setp
testl
mov
bnd
dec
int3
dec
popf
adc
pop
aad
mov
xchg
mov
dec
pop
mov
arpl
fstps
ljmp
xchg
xchg
ss
int3
cs
inc
inc
test
mov
mov
lret
dec
stc
sbb
or
inc
or
push
push
mov
add
sbb
or
xchg
or
add
loope
mov
inc
hlt
aad
sahf
sbb
lds
dec
cs
dec
leave
pop
pushfw
cmc
rorl
dec
push
xchg
hlt
adc
mov
jmp
std
cmp
rcl
adc
ficompl
jl
lret
xchg
in
lods
mov
bound
sarl
mov
insl
shl
or
hlt
or
lods
loopne
clc
je
jns
pushf
fadds
dec
xor
xor
lret
mov
lods
and
movsl
mov
int3
pop
inc
sbb
add
pop
cli
sub
xor
dec
cltd
add
inc
fcoms
cmpsl
test
push
test
push
cltd
jecxz
pushf
daa
mov
mov
jnp
mov
aas
pop
cwtl
inc
rcrb
mov
icebp
rcrl
sbb
stos
adc
xor
in
lret
add
xchg
inc
fsubrs
movsb
sbb
sbb
cli
lcall
lea
and
mov
pop
sub
icebp
pushf
es
inc
inc
or
lret
into
pop
xchg
cs
fsubs
push
imul
jae
jbe
ja
inc
add
xor
pop
mov
sub
mov
outsb
mov
adcl
and
and
and
inc
push
lahf
aaa
insb
pop
test
cmpsb
sub
mov
das
sub
push
jp
sarl
sub
and
add
mov
iret
lea
popf
lret
xchg
cs
or
dec
add
xchg
outsb
and
std
dec
and
imul
mov
jbe
inc
mov
loope
mov
pushf
ds
fwait
adc
sar
or
sub
cmpsl
testb
bound
pop
test
and
and
xor
arpl
pop
sub
xchg
popa
inc
dec
add
in
mov
xchg
loopne
ret
movsl
ss
mov
mov
ds
sbb
call
dec
adcl
mov
and
inc
jge
enter
mov
push
dec
mov
or
push
movsb
sti
daa
addr16
jle
mov
jbe
enter
jmp
imul
movsb
push
cmp
lea
sub
or
pop
jbe
sbb
xchg
jg
and
xorl
imul
imul
cli
movsl
xchg
push
jno
jle
icebp
outsb
das
mov
inc
mov
xchg
daa
fcomi
mov
popa
mov
xor
adc
mov
inc
mov
pextrw
sbb
inc
jno
insb
jo
mov
cld
roll
jne
lret
adc
push
cltd
pop
mov
xor
push
repnz
push
xor
jg
shlb
jo
rorb
aam
and
jo
mov
push
jle
cwtl
mov
sub
or
out
ficoml
lock
call
lds
orl
jnp
xor
jmp
call
loope
pop
cld
xor
mov
popf
popa
xchg
repz
push
test
ljmp
xchg
cmp
es
mov
jp
daa
mov
fidivs
sbb
mov
popf
xchg
out
xchg
das
stos
imul
and
adc
mov
repz
or
sbb
insb
int3
jns
jb
test
imul
outsl
jecxz
insl
pop
cltd
xchg
cs
daa
jno
ljmp
scas
dec
push
outsb
or
mov
cmp
loope
mov
sbb
push
sbb
cmp
pop
pushl
lahf
shll
jge
xchg
movsb
sbb
add
movsl
aam
jle
inc
jae
pop
jecxz
shlb
sbb
out
int
cmp
icebp
sarb
adc
pop
jns
and
jl
push
jb
inc
jae
dec
rcl
fdivs
popf
jns
pushf
addr16
sahf
pop
lods
cwtl
iret
xchg
clc
clc
testb
fwait
ret
or
scas
test
jno
int3
dec
js
fcmovne
jnp
jnp
add
or
mov
adc
je
cmp
jnp
je
sub
test
mov
adc
adc
add
jp
mov
push
loopne
add
mov
repnz
ds
mov
shlb
cmc
iret
les
xlat
sub
sahf
inc
cmpsl
ss
fwait
mov
shrb
mov
mov
pop
xchg
fcoml
fistps
adc
pushf
dec
cmp
shrl
and
aam
pop
jno
daa
leave
adc
ljmp
cmpl
xor
xchg
pop
test
iret
iret
mov
inc
aad
fiadds
mov
mov
nop
in
testb
stc
adc
cmp
and
add
cwtl
loopne
pop
mov
shlb
jae
rcr
das
xchg
pop
ss
sub
sbb
cmpsl
jb
insl
push
setl
js
cmp
lods
mov
add
into
loope
in
jnp
sub
ret
or
xor
jl
out
mov
jmp
sbb
mov
outsl
test
push
cmp
mov
popa
cvtpi2ps
cmc
imul
outsl
cs
stos
lea
jle
dec
nop
mov
cmpsb
add
andl
insb
jb
daa
mov
cwtl
fwait
pop
aaa
xor
jnp
test
push
js
lods
and
jnp
add
ljmp
sbb
repnz
mov
push
xchg
cmpb
cli
test
mov
daa
xchg
add
jg
and
jns
in
mov
jnp
or
sbb
mov
mov
add
dec
pop
outsb
pop
gs
pop
mov
sbbl
jb
xchg
test
js
cmp
push
mov
sahf
sbb
das
dec
scas
clc
pusha
int3
enter
setp
mov
xchg
sbb
adc
sbb
push
movsl
call
jne
dec
jmp
pop
xor
scas
loopne
lds
push
mov
je
scas
push
into
fs
clc
movsl
call
cltd
sti
cwtl
sarl
push
out
arpl
sub
pop
addr16
mov
xchg
dec
jne
pop
je
mov
dec
dec
mov
cmpsl
inc
pop
add
mov
bound
rolb
mov
cli
adc
divb
lods
add
dec
jne
fidivl
push
pop
mov
jne
pop
xchg
add
sbb
call
hlt
pushf
inc
pop
aaa
dec
bound
mov
dec
push
lods
fstpt
fstpl
push
push
jb
pop
mov
push
jmp
jb
outsl
sbb
pop
mov
and
popa
call
xchg
inc
mov
jg
lcall
inc
xor
rcll
scas
adc
cld
shll
imul
fwait
insb
lds
jbe
dec
ljmp
push
inc
and
sbbl
push
push
loope
add
popa
dec
pushf
es
add
hlt
xchg
inc
push
nop
xor
hlt
iret
mov
or
mov
push
mov
js
arpl
mov
xor
fs
add
pop
mov
daa
adc
push
das
jo
sub
xchg
inc
scas
je
mov
or
dec
xor
jg
hlt
adc
jmp
insb
jecxz
dec
loope
adc
shll
leave
rcrb
pop
add
rcrl
jl
cwtl
lock
cmp
iret
sbb
mov
cmpl
out
push
jl
fs
adc
and
rcr
gs
std
xor
xchg
jnp
sub
int
pop
lret
sub
mov
ja
sbb
fidivl
iret
jmp
add
dec
push
inc
sub
shl
cmp
pop
push
pop
add
xchg
add
stos
out
daa
jne
loope
jae
xor
in
in
mov
rcrb
loopne
jle
ds
xchg
fnstenv
mov
gs
aad
out
insb
loop
jne
cmp
cltd
dec
dec
and
xor
data16
mov
movsb
lea
inc
stos
jmp
cmpsl
push
mov
imul
mov
test
pop
js
xchg
ds
mov
lods
test
adc
push
in
fisubrs
inc
repnz
gs
cmp
jnp
sbb
xchg
sbb
in
dec
mov
or
xor
out
or
mov
call
out
addr16
hlt
push
pushf
in
push
stos
ret
out
or
xlat
sbb
pusha
sub
hlt
dec
das
xchg
repz
pop
jp
ret
jge
into
mov
out
jecxz
in
jl
imul
nop
lcall
mov
mov
hlt
dec
xchg
inc
fistpl
jp
mov
sub
xor
cld
test
push
adc
inc
cmc
sbb
cmp
mov
mov
push
cwtl
test
sbb
lea
das
ds
lcall
add
mov
lcall
icebp
cmovne
jmp
sub
cmpsb
xor
jge
adc
adc
jmp
shrl
lods
cmpb
mov
mov
addr16
dec
aaa
push
int3
outsl
and
test
cli
add
fs
test
lcall
inc
mov
or
hlt
mov
test
dec
mov
int3
cmc
icebp
push
sub
inc
push
cmp
addr16
imul
lret
je
cmpsl
fwait
lods
mov
outsb
daa
cli
cmp
mov
scas
add
aam
mov
iret
cmp
mov
lods
in
scas
jp
xchg
mov
mov
push
lcall
pop
pushf
jge
pop
mov
fcmovnu
xor
xor
dec
cmc
movsb
jbe
add
jmp
inc
lods
add
movsl
jmp
and
movsl
je
ret
add
popf
push
mov
cmpl
mov
dec
outsl
notb
xor
inc
lret
and
jb
or
pop
cmp
adc
adc
cmp
mov
insl
stc
std
push
mov
add
sub
adc
js,pn
mov
pushf
and
aaa
jl
out
repz
ret
inc
out
jnp
cmpsb
pop
addr16
or
mov
xcrypt-cbc
cmpsl
aad
xor
xchg
rcll
xchg
adc
cmp
pop
lcall
clc
fsubs
addr16
sti
mov
sbb
cmp
jmp
mov
jge
dec
mov
mov
imul
push
jmp
cmp
jge
in
xor
fcompl
cmp
sbb
lods
loopne
or
test
and
or
mov
lds
popa
push
imul
lea
fldln2
test
jmp
lret
jge
xor
in
repz
lahf
stos
and
stos
mov
inc
push
test
xchg
pop
mov
cld
lods
jb
fadds
and
sub
mov
cmc
add
pop
mov
xchg
push
and
adc
or
cmpsb
push
paddq
jmp
inc
je
in
cmpsb
pop
push
and
fldt
adcb
dec
dec
inc
mov
hlt
mov
leave
stos
xor
mov
mov
mov
jg
pusha
test
insb
jne
xor
aam
lods
iret
rclb
insb
or
inc
movsl
jb
pusha
adc
leave
das
icebp
dec
push
cs
ret
out
push
pop
dec
xchg
popa
jne
addb
das
mov
xchg
mov
jp
mov
or
xchg
stos
and
mov
aaa
xchg
test
jmp
dec
mov
mov
out
mov
sarl
filds
adc
or
fdivl
mov
push
jp
shlb
sbb
mov
int3
pop
pop
scas
push
rcrb
pop
clc
dec
pop
cmp
sub
sbb
or
cld
mov
cmpsl
fcoml
lods
out
xlat
mov
jl
insb
daa
pop
pop
dec
pop
cmp
sub
sbb
or
cld
mov
cmpsl
fcoml
lods
out
xlat
mov
jl
in
daa
fcoml
dec
pop
mov
push
mov
mov
cmpsl
fcoml
lods
out
mov
jl
insb
daa
pop
pop
dec
pop
cmp
sub
sbb
or
cld
mov
or
int3
jg
sbb
sub
cmp
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
loope
popa
push
push
bound
mov
add
jae
gs
jl
fcom
loop
repnz
mov
mov
inc
popa
push
push
bound
xor
and
adc
add
ret
mov
shl
out
xchg
xchg
mov
popa
push
push
bound
xor
and
adc
add
icebp
ret
mov
movsb
pushf
rol
enter
out
lds
push
popa
and
mov
xor
jo
loop
fidivrs
xor
jbe
inc
in
inc
and
add
xor
cs
fwait
stos
je
test
push
sub
dec
xchg
pop
leave
cltd
sbb
hlt
push
pusha
xchg
pop
mov
mov
dec
stos
fcompl
ret
xchg
ds
adc
les
iret
popa
inc
jno
lods
and
add
shl
ds
sub
push
xchg
bnd
xlat
mov
add
sub
adc
xor
sbb
leave
adcb
push
mov
popa
inc
fcmovnu
les
dec
jmp
mov
movsb
xchg
dec
or
nop
mov
popa
push
push
bound
xor
and
adc
add
icebp
ret
shl
shl
andb
add
and
xor
inc
push
inc
fs
cltd
mov
lret
mov
imul
aad
shl
xlat
cs
and
inc
inc
push
adc
sbb
cmpsl
mov
cli
out
add
sahf
out
add
xor
popa
or
and
adc
add
icebp
ret
shl
shl
andb
jno
popa
push
push
bound
xor
and
adc
add
icebp
ret
shl
shl
andb
jno
fs
or
add
dec
dec
pusha
scas
sub
inc
or
lock
fwait
cltd
and
xchg
jmp
push
push
xor
movsb
stos
pop
xchg
or
decb
xor
add
das
mov
les
push
add
mov
mov
sbb
cwtl
xor
hlt
xor
outsl
dec
mov
cld
lock
in
dec
test
cltd
stos
pop
dec
ret
movsl
insb
inc
arpl
adc
sbb
mov
fwait
shrl
cs
cwtl
push
mov
mov
scas
out
sbb
inc
mov
jg
scas
push
inc
stos
jge
dec
jns
js
int
sub
cmp
in
sti
iret
in
add
addr16
outsl
aas
dec
loop
lret
dec
mov
rcrl
push
mov
push
ret
inc
mov
fmuls
lods
jl
sub
adc
adc
lahf
nop
nop
push
cmc
pop
stos
xchg
adc
sbb
push
lods
mov
mov
and
je
aad
aam
mov
popl
mov
mov
roll
pop
pop
jbe
cmp
xor
in
and
inc
icebp
ss
shlb
push
icebp
mov
xor
jnp
aaa
lahf
mov
push
mov
mov
mov
mov
cltd
jl
mov
mov
js
lcall
inc
sub
add
add
mov
mov
xchg
mov
xchg
pusha
sub
jl
cmp
and
adc
pop
je
fdivrs
inc
fnstsw
cwtl
addr16
inc
ror
xlat
call
mov
mov
inc
jbe
push
clc
fstpl
test
xor
push
mov
lods
enter
loop
jnp
outsl
cmpsb
pushf
cmp
test
movsb
push
int3
shr
or
and
inc
inc
lods
shrb
add
xchg
jb
mov
xor
sbb
push
and
sbb
out
push
sub
and
mov
xchg
ficomps
mov
cmp
or
insl
mov
jo
inc
dec
jp
imul
cmpsl
sub
mov
dec
nop
hlt
cmp
sub
pop
fwait
ja
sub
or
cltd
sbb
sub
and
pop
jge
sub
xor
lods
mov
stos
dec
icebp
je
aas
adc
int
jns
ret
push
lcall
insb
inc
add
stc
repz
mov
and
jle
in
mov
lods
mov
mov
xlat
jmp
adc
fwait
popa
loope
repz
xlat
sub
mov
xchg
jns
lahf
dec
fcmovnb
dec
sub
arpl
sahf
jne
in
nop
outsb
jno
xor
repnz
xor
inc
pop
cs
lcall
clc
and
xchg
repnz
jbe
mov
or
loop
cmpsb
pop
xor
mov
sbb
push
and
and
adc
sub
nop
mov
jb
push
lods
xchg
cltd
mov
dec
loope
fdivr
lret
push
ja
fiadds
ds
out
fsubr
xchg
or
jnp
push
clc
push
sub
mov
incl
imul
test
pop
sub
ror
outsl
jbe
dec
data16
aas
pop
mov
jp
in
outsl
pop
fstl
movw
xchg
dec
xchg
aad
adc
sbb
movsl
ds
jno
scas
insl
jmp
inc
mov
xchg
es
iret
jbe
rcrl
jns
hlt
lods
xchg
lock
sbb
lahf
iret
pop
jmp
add
je
js
xchg
mov
xchg
inc
dec
inc
xchg
adc
jp
inc
push
hlt
dec
pop
mov
mov
fcmovnb
push
jo
stos
or
lret
xchg
imul
xchg
mov
mov
jo
and
jns
sbb
lock
pushl
xor
cwtl
sbb
push
stos
sub
push
cmp
popa
scas
loopne
xchg
mov
sbb
add
sbb
ja
roll
sahf
shll
lods
xchg
sbb
push
mov
jmp
bound
notb
testb
sarl
loope
push
cmp
push
lea
mov
mov
jne
mov
cmp
fimull
mov
jae
mov
inc
sub
mov
mov
xchg
ja
test
mov
mov
jl
xor
idivb
jns
clc
mov
rorl
sub
jg
cltd
gs
xchg
into
sahf
gs
inc
jl
inc
in
lods
sub
jmp
adc
test
adc
and
mov
and
daa
mov
call
fdivs
loop
mov
popa
mov
mov
dec
jb
cmp
push
cmp
push
outsl
out
repnz
gs
mov
jae
xor
icebp
std
fcompl
loope
xlat
lea
sarb
xchg
push
dec
clc
orb
mov
sbb
xlat
scas
fs
aad
ljmp
imul
cmp
loope
inc
inc
push
or
add
mov
fistl
sbb
inc
mov
insb
negb
lds
les
inc
mov
shlb
jo
test
inc
loopne
push
push
xor
mov
rclb
gs
call
bound
pop
addr16
popa
pop
adc
test
pop
sbb
cs
inc
outsl
push
inc
out
inc
ds
scas
cltd
xchg
mov
mov
leave
xor
in
push
xor
cld
das
mov
enter
in
andl
sub
aaa
xlat
dec
ss
jmp
or
test
inc
rcll
flds
orl
sahf
adc
and
ljmp
pop
scas
xchg
stc
aam
shrb
out
push
push
pop
pop
xorb
sbb
mov
add
mov
movsl
add
sbb
loop
dec
insw
sahf
cmp
push
and
adc
mov
pop
cmp
sbb
inc
adc
cld
jbe
jmp
cmp
rolb
leave
es
ss
or
cli
xchg
pop
jp
incb
mov
mov
gs
push
movsb
xchg
mov
sub
lcall
mov
jbe
pop
lahf
jp
mov
xor
adc
movsl
js
xlat
and
add
std
mov
adc
add
sbb
xchg
add
and
xchg
shll
cwtl
les
mov
inc
or
mov
adc
popa
jl
rorb
into
cmpsl
out
jo
mov
adc
cmpsl
shrl
outsb
jno
push
push
xor
jne
mov
add
outsb
lock
sbb
fsubr
les
cltd
into
dec
notb
sti
and
test
dec
cld
push
mov
cld
mov
fsubs
test
pop
add
or
cmpb
arpl
daa
pop
push
fiadds
push
adc
pop
movsl
or
mov
sub
dec
mov
and
cld
mov
dec
or
dec
inc
adc
mov
add
icebp
shll
jmp
and
xor
pop
test
mov
aaa
mov
int
jns
jge
adc
mov
or
add
lock
imul
iret
sub
insl
mov
or
popa
outsl
add
iret
mov
push
jl
movsl
mov
aas
bnd
sbb
sub
out
jb
add
sbb
fcomi
scas
jmp
outsb
pop
and
mov
insl
mov
inc
and
je
cwtl
fs
push
aas
jle
out
mov
sahf
in
int
mov
mov
jmp
stos
add
pushf
cmpsb
mov
cmp
dec
adc
mov
pop
sbbl
pusha
add
cmp
jmp
out
test
and
repz
sub
push
clc
jmp
adc
adc
or
dec
insb
jle
dec
out
sti
movsl
xchg
test
cmp
or
jge
dec
popf
inc
push
adc
xchg
sahf
arpl
loop
add
fs
jne
nop
adc
and
sub
mov
fiaddl
xorl
pop
jp
pop
jge
inc
cmc
adc
ret
sarl
pop
sbb
outsl
dec
ja
repnz
or
int
es
lods
inc
lods
ret
xor
mov
cli
adc
push
lcall
sbb
push
mov
pop
mov
xchg
add
lahf
mov
daa
leave
inc
jp
inc
mov
negl
nop
out
mov
mov
cmp
addr16
push
add
push
enter
push
mov
fiaddl
pop
arpl
popf
pop
sti
lock
inc
or
jg
clc
mov
mov
adc
lds
and
sub
scas
adc
sbb
cld
mov
mov
pop
push
mov
pop
aam
mov
out
mov
jmp
push
pop
push
fisubrs
data16
fisttpll
mov
sbb
jno
cmp
mov
outsb
fwait
pop
xchg
cmpsb
movsb
movsb
fs
pop
jmp
or
push
xchg
push
cmpl
lea
cmp
dec
sarl
dec
sub
ss
ljmp
lods
push
subb
jmp
xorl
push
aam
cld
or
push
add
aaa
push
jp
clc
add
sub
loopne
cmp
ficoms
arpl
subl
out
xchg
stos
stos
mov
sbb
nop
push
jl
insb
icebp
ss
sub
pop
bound
clc
fwait
cmp
test
pop
jnp
jno
lea
sbb
push
push
inc
xchg
in
aas
jg
cwtl
mov
test
out
aas
pusha
stc
cltd
out
mov
xchg
mov
sub
and
adc
sbb
push
and
lcall
shll
push
out
mov
fiadds
push
mov
xlat
repz
jg
jbe
or
fs
lahf
add
cmp
jbe
movsl
sbb
aam
and
push
aas
mov
sbb
popa
rclb
xor
adc
sub
or
dec
lds
cli
sub
rolb
cmp
sub
xor
pop
dec
inc
jmp
push
xor
arpl
adc
pop
in
mov
sbb
ja
jle
dec
adc
push
dec
mov
xor
movsb
sbb
sub
push
jmp
adc
sarb
inc
adc
imul
gs
enter
add
loope
jne
out
mov
and
push
mov
out
add
icebp
cmp
mov
aam
push
sub
or
fxam
push
sub
sbb
inc
orb
jg
addb
daa
in
dec
dec
cltd
push
push
mov
add
iret
xchg
mov
xor
cld
cli
cmp
fsub
sub
sti
adc
shr
fistpl
stc
xor
out
xchg
fdivs
sbb
pop
dec
call
inc
in
jo
xchg
xor
out
aas
scas
lds
inc
outsl
cld
add
mov
sub
or
inc
adcb
pop
scas
jge
jmp
int
pop
or
imul
mov
test
jg
push
aaa
clc
push
cmp
in
mov
cli
cmp
test
rclb
or
or
jp
mov
inc
mov
test
ficoml
sbb
stos
fcompl
add
pop
stos
xchg
mov
clc
rolb
in
cmpb
mov
lods
mov
inc
cwtl
cmp
aad
mov
push
je
sarb
lahf
inc
outsl
inc
mov
cmp
push
cmp
hlt
push
add
mov
xchg
pop
std
loop
addr16
nop
mov
cltd
das
jecxz
push
repz
and
sarl
cmpsb
inc
push
fldenv
push
fimull
gs
sbb
sub
pop
inc
sbb
pop
clc
stos
jns
pop
push
jo
pop
or
jle
sti
add
mov
add
sti
hlt
dec
push
shr
jne
iret
out
push
ja
and
in
cld
sbb
or
or
dec
popl
mov
jns
lds
inc
inc
and
mov
dec
imul
mov
xchg
iret
pop
bound
dec
sub
mov
pop
stc
jge
rcrl
jae
fs
enter
lret
cmc
mov
mov
test
lea
fsubrl
mov
cld
aam
iret
fcoml
out
aad
data16
push
sub
lret
jecxz
mov
lds
shl
or
jb
mov
setp
push
xchg
pop
ja
xchg
dec
shl
dec
and
xchg
ss
xor
fcoml
cmp
pop
xchg
cmp
dec
gs
push
push
adc
cmc
push
mov
test
mov
out
xchg
dec
repnz
ljmp
cmp
push
push
jg
cmpsb
jnp
mov
mov
xchg
jns
jecxz
fwait
out
sti
scas
or
dec
pop
sub
xchg
lods
lea
sub
push
fadd
jne
sbb
pushf
jne
je
dec
sbb
into
mov
pop
stos
add
arpl
sarb
movsb
jmp
sar
mov
cmpsl
add
cmc
int3
inc
rorb
lcall
sbb
out
pusha
jbe
dec
mov
jg
sbb
rcll
js
shl
mov
fwait
pop
adc
cmp
jecxz
sub
push
xchg
push
sub
mov
fsts
and
or
pop
rolb
ficoms
adc
subl
int3
ret
lret
iret
cmp
loope
pop
xor
jne
jbe
and
cli
inc
mov
cli
cmpsl
fcomip
in
clc
nop
insl
and
mov
addb
dec
or
movsb
pop
mov
aad
outsb
push
mov
and
test
testl
pusha
retw
or
repz
or
pop
in
inc
call
stos
ja
and
cmpsl
insl
xor
xor
out
dec
mov
call
lods
mov
mov
fsubp
cmp
mov
push
jo
imul
jmp
sbb
sbb
and
insb
ret
dec
fldcw
mov
adc
in
aam
flds
dec
imul
insb
cmp
clc
cmpsb
xor
repz
imul
js
sbb
push
out
sbb
loop
loope
inc
int3
jno
push
cmp
scas
jnp
sbb
roll
sbb
cmp
jno
inc
and
fnsave
push
bound
int
and
xor
lock
or
sbb
fsubrl
rcrl
test
or
sbb
imul
loope
xchg
dec
push
adc
pop
cld
sahf
popf
scas
in
xchg
pop
jbe
push
stos
roll
fisubl
fildll
push
jecxz
fdivrl
mov
add
sbb
inc
sub
ds
cmp
aaa
mov
ljmp
xchg
test
mulb
and
aaa
adc
pop
mov
jecxz
pop
xor
mov
pop
sti
mov
sub
daa
scas
xchg
fldenv
fs
and
mov
cmp
push
jecxz
ror
mov
aam
push
outsb
rcrl
inc
lea
imul
je
dec
dec
fbld
xchg
mov
cmp
or
fwait
add
inc
repnz
rcrl
orb
pop
orb
mov
mov
jmp
das
jecxz
icebp
cwtl
sbb
or
data16
aam
pop
adc
jns
lock
fucomp
fdivs
mov
bound
je
adc
pop
dec
outsb
loope
inc
call
test
orl
and
cmp
data16
dec
andb
push
xchg
pop
mov
xor
ds
sbb
js
pop
xchg
data16
mov
mov
aaa
orb
cwtl
mov
das
or
and
fwait
addr16
jno
iret
outsl
das
jp
lds
in
mov
insl
nop
dec
xchg
mov
pushf
and
or
scas
jecxz
testl
push
in
add
add
int
sbb
pop
aaa
rclb
mov
mov
add
cmp
push
dec
jecxz
daa
or
cmc
dec
push
dec
mov
push
sahf
xchg
fisubs
mov
rclb
and
jno
xor
sbb
out
lock
test
int
inc
xchg
imul
stos
test
xor
imul
pusha
aad
or
jo
outsl
lock
ret
cmp
sub
leave
cmp
mov
sbb
lret
or
dec
pushf
dec
je
mov
int
sbb
sbb
out
sub
add
push
std
pop
rcrb
push
out
aaa
cmp
movsb
enter
inc
or
inc
in
lock
mov
xor
mov
fs
fildll
push
cmp
pop
cmp
adc
cmp
int3
cltd
ficoms
lods
and
cmp
test
loop
xor
mov
shll
add
nop
push
mov
lea
in
cwtl
mov
movsb
or
fcompl
das
mov
mov
mov
imul
cs
pop
push
call
out
pop
jns
subb
or
adc
test
repnz
lret
repz
push
adc
pop
or
mov
jl
cmp
mov
jl
xor
fstl
lods
mov
nop
and
int3
jo
mov
mov
dec
rcr
and
movsb
hlt
sahf
dec
movq
cli
xchg
mov
inc
xor
cmp
test
sub
pop
jae
mov
mov
js
jmp
repnz
adc
inc
aas
xchg
jmp
mov
aaa
and
sbb
inc
xor
cld
faddl
adc
das
out
sbb
stc
mov
movl
xor
inc
cwtl
les
pop
lods
jg
or
js
out
jle
or
dec
cmpsb
xor
jecxz
sub
xor
or
add
xor
mov
hlt
das
movsl
clc
test
jae
pop
and
or
pusha
cmp
mov
loop
adc
fprem
loopne
push
mov
lret
or
sbb
fnstsw
add
jg
push
test
mov
pop
in
movsb
fnstenv
mov
mov
fstl
es
sub
loop
jmp
xchg
add
mov
jmp
rclb
dec
xor
ret
jne
push
hlt
or
adc
add
mov
std
xchg
mov
pop
cmp
mov
loop
jp
mov
sbb
in
fstl
shlb
lock
gs
outsl
insl
jle
jle
jp
fmull
dec
dec
mov
popf
cltd
mov
adc
push
xor
and
rclb
xor
movsb
lahf
dec
adc
inc
loope
fcmovne
jge
inc
or
test
pop
imul
cwtl
inc
fs
add
sub
mov
call
dec
enter
fisubrl
sbb
adc
cwtl
xor
cwtl
incl
add
adc
cmp
xor
mov
les
push
push
outsl
pop
mov
add
mov
leave
stos
sbb
fldcw
push
loope
iret
jne
cs
inc
push
mov
mov
jb
jno
cmp
cmc
insb
and
mov
xchg
mov
icebp
mov
loope
or
dec
push
jle
popf
dec
stos
inc
mov
pop
dec
inc
sbb
fcmovu
dec
or
cmpsl
mov
jmp
lods
inc
lock
hlt
fadds
in
out
pop
mov
pop
mov
dec
frstor
or
push
push
in
push
pop
mov
and
out
cmp
pop
cs
and
rclb
lods
mov
jne
add
test
repnz
mov
fisubl
pop
and
push
sbb
pop
add
cs
push
cmpsl
fs
xchg
dec
xor
and
xlat
fldt
adc
mov
popf
shl
ret
insl
xchg
dec
out
pusha
and
test
loopne
js
cmpsb
xor
es
jno
ffreep
inc
mov
std
rcrl
scas
int3
xlat
jmp
xorl
or
aam
mov
cwtl
popl
sbb
or
js
push
sub
in
jmp
mov
mov
mov
mov
lahf
cmc
sub
sbb
loope
mov
sbb
dec
push
add
mulb
es
pushf
jnp
popa
and
inc
insl
jl
push
push
clc
pop
sbb
push
mov
in
sbb
cmp
int
aas
sahf
iret
mov
pop
add
mov
repnz
outsl
and
inc
pushf
out
xchg
ficompl
dec
aad
pop
ljmp
cmp
movsb
sbb
mov
push
dec
xor
push
lret
daa
das
push
jne
mov
pop
push
rcl
ja
or
inc
cmp
inc
ficompl
mov
cwtl
in
repz
sub
xchg
mov
sub
push
cs
xchg
daa
push
cmp
mov
sbb
imul
in
les
scas
sub
ret
jb
add
adc
and
xor
ret
shl
shl
andb
jno
popa
push
push
bound
xor
and
adc
add
icebp
ret
shl
shl
andb
jno
popa
push
push
bound
xor
and
adc
add
icebp
ret
shl
shl
andb
jo
pusha
push
push
bound
xor
and
adc
add
icebp
ret
jnp
roll
pop
jle
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
