add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
into
add
push
adc
ljmp
or
add
or
pop
add
add
add
add
add
fwait
add
add
add
add
add
add
jle
or
dec
add
add
sub
fwait
add
add
sbb
mov
add
add
mov
lods
add
addb
add
add
add
add
add
dec
add
add
mov
add
pop
add
add
add
jle
push
add
add
add
icebp
add
add
jle
adc
lock
add
scas
add
add
add
insl
add
jmp
lock
add
add
jle
adc
lock
add
and
adc
pusha
add
popa
add
add
add
rolb
xor
add
jle
add
lock
add
inc
add
add
adc
adc
add
add
add
aas
add
dec
add
push
add
movl
adc
xchg
add
test
add
test
and
adc
lods
add
add
adc
outsl
add
cltd
add
add
add
add
add
aad
lods
add
add
jae
adc
xor
dec
add
add
add
add
add
add
jns
popf
add
ret
add
add
test
insb
add
add
add
dec
add
adc
lods
add
popf
add
jle
sbb
outsl
add
add
add
pop
add
add
ret
add
stos
add
xor
add
add
add
add
add
faddl
dec
add
add
pop
add
add
adc
mov
int
inc
add
add
aas
add
add
mov
leave
add
adc
dec
add
add
add
add
push
add
and
pop
add
add
dec
add
add
add
add
add
add
xor
sbb
addl
mov
add
xor
add
and
adc
jns
stos
add
dec
add
add
mov
add
adc
adc
cltd
add
add
ret
add
rolb
adc
loopne
adc
xor
add
add
test
add
add
adc
xor
lods
add
add
add
stos
add
or
add
mov
add
add
add
add
add
add
ret
add
add
add
add
add
add
faddl
pop
add
add
ltr
sub
xor
jbe
aas
add
add
add
add
faddl
and
ret
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
jae
adc
push
add
add
add
dec
add
add
adc
or
add
add
add
add
and
pop
add
add
add
dec
add
add
mov
mov
add
cltd
add
ret
add
mov
cltd
add
add
add
add
and
cltd
add
jle
incb
lock
add
cltd
add
add
add
arpl
sub
outsb
add
add
dec
add
leave
add
add
add
add
add
add
add
add
add
add
lds
scas
out
lea
push
xor
jno
test
lods
sbb
cmp
mov
adcl
and
or
jg
int3
xor
push
jl
repz
cld
sub
or
mov
push
enter
insl
movb
stc
inc
and
repnz
fcom
xor
aam
fldenv
rcl
enter
mov
popa
jo
and
sbb
popf
xlat
into
pop
pushf
shrb
and
dec
and
jmp
push
ja
pop
xor
outsb
fwait
jp
xor
mov
enter
mov
imul
addr16
sub
push
scas
sub
ficoms
ds
icebp
shll
jle
insl
pop
adc
dec
les
jns
aaa
xor
fstpt
push
dec
cmp
or
dec
lock
sbb
in
xlat
fs
idivl
dec
std
xlat
je
movsb
pusha
mov
fsubs
jecxz
inc
test
pop
mov
jno
cld
inc
or
in
xor
rcl
mov
cld
fistps
std
rcll
sbbb
loop
dec
ja
inc
or
push
cs
aad
xchg
mov
ss
push
shrb
mov
je
stc
in
das
mov
rol
faddl
les
nop
out
xchg
jmp
mov
cmp
int3
inc
push
aam
and
lods
dec
movsb
push
sub
cmp
add
xor
jnp
mov
daa
xchg
or
push
push
mov
scas
lock
stos
mov
mov
jnp
xor
add
cwtl
sbb
pop
xchg
inc
mov
mov
ss
sbb
addr16
dec
xor
mov
cmp
jge
ret
loopne
movsl
in
movsb
jge
imul
lret
xor
popf
sub
push
ficoms
sbb
push
mov
add
mov
jmp
fistl
and
xor
js
jecxz
or
pop
decl
rolb
inc
mov
loope
push
cmc
pop
pushf
xlat
push
sub
aaa
test
popa
popf
adc
outsl
lods
cs
out
xchg
popf
and
adc
lods
or
mov
and
popf
jno
les
decl
int
stc
hlt
rorb
sbb
and
push
jge
fsubrl
shl
loopne
sub
ret
ficompl
nop
loop
jnp
or
pop
sub
aam
mov
shll
in
xchg
aad
jne
or
add
mov
negb
jae
movsb
add
push
dec
je
lahf
or
hlt
push
jo
xchg
adc
jg
sbb
push
int3
hlt
pop
adcl
inc
add
push
dec
and
cmp
ret
inc
xlat
loope
sub
outsl
inc
pop
xor
psadbw
into
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
adc
push
xor
jbe
outsb
xor
push
dec
ss
popa
mov
mov
adc
cmpsb
icebp
mov
inc
add
and
push
inc
push
jno
popa
ss
movb
xchg
xchg
xchg
icebp
in
mov
inc
repz
mov
push
and
outsl
es
ss
outsb
mov
idivb
aam
mov
inc
dec
or
or
push
roll
cld
dec
xor
pop
mov
out
mov
jae
inc
rcrl
adc
mov
movsb
mov
shr
and
jbe
cs
sub
pop
jnp
repz
jp
negb
out
push
inc
inc
inc
xchg
aaa
sbb
push
fcmovb
cmp
or
xchg
int
imul
scas
pop
inc
push
mov
cmpl
lock
loope
out
cmpsb
or
adc
mov
add
xor
mov
cmp
xorl
pop
in
cmp
rcrb
scas
jae
fwait
mov
mov
notb
pop
xchg
xchg
push
icebp
mov
mov
inc
push
push
xor
jbe
push
cmp
jno
ss
sbb
out
negb
cmpsb
loope
js
jae
inc
mulps
ds
push
add
mov
les
cwtl
movsb
test
pop
inc
fs
inc
inc
add
dec
and
test
idivb
fstps
cwtl
ret
mov
add
add
inc
push
jno
popa
ss
movb
roll
loope
adc
push
xor
jbe
push
inc
push
jno
popa
ss
movb
roll
loope
adc
pop
repz
xor
and
fdivrs
daa
sbb
pop
nop
rclb
pop
cld
and
push
pop
cmpsb
mov
dec
roll
cwtl
xor
and
jl
mov
xchg
int
or
outsl
mov
mov
jl
gs
jno
roll
movsl
ret
icebp
dec
icebp
aas
addr16
in
andl
cmpsl
addr16
repz
cmp
decl
jecxz
push
sbb
rcrb
ret
or
mov
das
pop
cmp
dec
sub
mov
cli
push
push
cld
or
push
add
inc
jge
push
imul
push
int3
test
lea
stc
cld
add
jle
nop
pop
ljmp
mov
xor
inc
xchg
pop
popf
adc
sub
leave
push
push
mov
cmp
xchg
dec
inc
jno
repz
mov
ret
inc
push
jae
inc
mov
insl
mov
or
and
das
mov
sub
les
or
out
clc
mov
sbb
adc
stos
lea
xchg
sub
jne
mov
xchg
sbb
adc
cwtl
dec
cmp
or
test
dec
scas
cmp
jle
vpor
enter
lds
jne
repz
xor
jno
add
shl
adc
push
add
daa
push
push
push
jl
out
mov
mov
pandn
mov
or
push
imul
rcrb
test
lret
ds
shl
repnz
inc
jae
push
out
lahf
pop
xchg
jmp
add
push
lock
push
and
jo
inc
sub
push
mov
int3
inc
pop
mov
mov
mov
sbb
adc
push
les
incl
jle
gs
or
ret
outsb
into
mov
ds
push
shlb
push
outsl
aam
addr16
sarl
mov
fwait
jbe
cld
jg
lock
rorb
pusha
fistps
imul
das
push
or
jl
out
insb
pop
mov
lret
icebp
testb
repz
js
and
cmp
mov
inc
popa
xchg
imul
or
repz
jecxz
ljmp
fdivl
shll
inc
or
mov
out
xchg
dec
jae
push
loope
mov
clc
cli
sub
jbe
rorl
xchg
pop
xchg
dec
outsl
in
sar
inc
inc
push
push
jle
lock
lcall
pusha
in
mov
sbb
fwait
mov
xor
adc
je
fldcw
flds
jecxz
mov
int3
sbb
aas
or
adc
mov
test
mov
xchg
pop
push
js
sub
add
add
cmp
pop
sbb
shll
lahf
aaa
sarl
rol
push
testb
fnstenv
fwait
daa
cmpsb
test
xchg
mov
aaa
mov
hlt
in
mov
push
pop
push
or
testl
sahf
mov
icebp
nop
int3
lret
mov
insl
push
orl
imul
mov
push
jl
out
scas
mov
stos
push
jl
add
adc
je
and
push
mov
xchg
das
cmovs
clc
mov
test
fdivs
and
mov
lcall
pop
cmp
cs
jl
mov
push
icebp
fmulp
push
push
test
pusha
and
sub
inc
sbb
push
xchg
jnp
xchg
xchg
cmpsl
cmpb
or
test
cmp
add
cwtl
sub
xchg
or
push
loop
mov
int
or
fisttpl
notb
loopne
jmp
mov
mov
dec
add
or
add
push
jle
mov
xor
jle
mov
stos
jns
push
and
idiv
and
or
lret
lds
cmp
cmp
lods
out
and
jb
outsb
cmp
lods
shll
xchg
and
outsl
sub
insl
pop
leave
mov
stos
dec
xor
fwait
xchg
inc
cltd
push
mov
sub
xchg
ljmp
sbb
gs
and
and
test
scas
or
push
or
popa
test
mov
lds
push
mov
xchg
adc
cmpsl
xchg
stos
push
out
out
jge
pop
iret
cmpl
xchg
xchg
sub
shll
jle
loop
and
int
int
and
jg
dec
mov
mov
leave
or
in
cmc
and
jb
cmp
lods
cmpsb
aaa
mov
out
adc
popf
mov
sub
dec
test
hlt
or
popf
push
sbb
sub
andb
jl
pop
sbb
scas
xor
lret
mov
jbe
xchg
xchg
ret
pop
clc
jmp
mov
or
hlt
pop
loope
and
push
xchg
ja
repnz
pop
jle
xchg
sub
pop
mov
inc
mov
add
mov
std
sbb
xchg
sbb
cmp
lret
add
loop
xchg
push
js
subl
xor
add
lock
in
addl
in
in
ljmp
gs
pcmpgtw
or
je
clc
pop
xchg
cmc
out
pop
cmp
ret
std
or
mov
popf
loope
stos
lcall
stos
ljmp
aaa
jl
fnstenv
push
dec
iret
jl
push
cmp
inc
mov
sbb
daa
and
cmpsl
fidivrs
stos
cmc
dec
popa
das
inc
mov
xchg
call
mov
loope
jae
jle
sbb
ret
pop
xchg
inc
cmpsl
in
push
mov
cmp
ljmp
sbb
test
shlb
mov
daa
test
int
pusha
out
aad
nop
adc
cmc
xor
ror
pop
fcoms
scas
push
add
movsl
test
mov
stos
jl
and
outsb
mov
cmp
and
je
js
or
aas
mov
loopne
repnz
sub
repz
push
cmp
stc
fs
pcmpgtb
xchg
js
in
jne
pop
or
mov
pop
mov
mov
loop
mov
xchg
xor
out
out
mov
jns
xchg
mov
or
shr
inc
sub
adc
jns
jecxz
add
adcb
cmp
cmp
pop
sti
out
pop
sbb
addr16
jno
lods
imul
jmp
out
mov
pop
or
dec
mov
dec
jle
and
loopne
add
push
stos
or
inc
loope
stos
jne
add
mov
shll
loopne
xchg
dec
andb
negb
or
loopne
or
mov
xchg
repz
pop
push
in
es
fldl
and
jl
pop
adc
fisubs
mov
dec
fsubr
jno
push
lods
jl
shrl
sarl
jae
mov
sub
push
jnp
cwtl
push
xorb
push
lea
fnsave
xor
sub
push
pop
push
add
adc
cwtl
and
pop
xlat
cmp
sub
dec
fisubrs
xlat
shll
adc
xchg
fmuls
sti
je
sbb
push
js
jg
imul
out
test
mov
repz
xchg
xchg
insb
sahf
je
or
fisttpl
mov
loop
ret
outsl
sbb
out
stc
sbb
aaa
and
add
aad
lds
js
icebp
inc
pop
xchg
and
hlt
hlt
mov
cli
dec
sbb
inc
jge
addl
lret
pushf
sahf
aam
hlt
aad
ds
cmp
sbb
mov
hlt
stos
test
test
sub
dec
rclb
and
push
fnsave
fldl
clc
cmp
lods
mov
mov
and
adc
xor
outsl
lea
in
jmp
push
hlt
inc
and
mov
scas
repnz
mov
sub
fnstcw
adc
jmp
movsl
imul
or
jmp
lret
lahf
push
mov
dec
mov
lds
mov
cmp
ja
add
inc
dec
cld
cltd
sbb
jbe
fldl
jb
cltd
inc
mov
cmc
dec
mov
add
lret
xor
dec
mov
test
jle
aas
ret
aaa
das
mov
mov
jo
mov
and
mov
or
mov
inc
lods
mov
mov
jae
mov
int
in
in
jmp
mov
dec
pusha
popf
aam
cmp
mov
lods
int3
int3
mov
push
sub
std
jle
xlat
add
inc
add
xor
inc
mov
outsb
xor
lret
inc
fst
test
jmp
loopne
shrb
jns
leave
rorl
jae
jae
lds
sahf
sar
insl
lret
les
cmp
lret
xchg
push
xchg
loop
in
es
dec
aas
sub
sub
and
sbb
sti
push
je
ret
jbe
fstpt
mov
lahf
imul
adc
fnstenv
test
mov
adc
sub
dec
push
out
cmc
push
xchg
inc
dec
cmp
bswap
push
ds
mov
nop
dec
inc
and
sbb
push
mov
pop
mov
cli
jge
shl
sbb
pop
mov
das
xor
dec
xchg
mov
dec
xchg
out
divb
insl
out
or
xchg
cld
xchg
into
inc
dec
lods
loop
int
push
push
movsl
jno
pop
add
inc
mov
or
outsl
or
aam
sar
push
mov
in
test
xchg
pop
dec
iret
fcmovb
and
pop
dec
push
jbe
out
push
fs
les
fdivl
repnz
pop
pop
cmp
fwait
ds
aaa
cmpsl
out
mov
mov
mov
sub
push
jecxz
stos
or
add
mov
mov
push
xchg
mov
cmp
lea
icebp
pop
in
or
mov
jns
push
lods
xchg
stos
pop
and
xchg
aaa
xor
cmpsl
js
ljmp
pop
in
xchg
jnp
cmp
mov
xor
dec
mov
out
aam
mov
loope
inc
add
cmp
inc
cltd
enter
dec
cmpsb
xlat
mov
jae
in
sbb
cmc
mov
mov
adc
inc
inc
push
scas
cld
adcl
adc
pop
mov
add
mov
xlat
pop
nop
outsb
lods
jns
mov
pop
and
cmp
dec
imul
xchg
or
inc
push
js
sub
fadds
pop
inc
mov
jno
mov
out
adc
int
out
dec
cltd
loopne
in
jecxz
ret
pop
test
out
mov
sar
cs
lret
mov
and
mov
das
loope
fcmovbe
fcmovu
cmp
jp
pop
push
cli
xchg
mov
das
stos
pop
lods
and
movl
out
outsl
mov
into
or
lock
ret
adc
shlb
fs
mov
arpl
imul
cmp
xor
push
add
cld
adc
mov
cmp
arpl
xor
mov
je
jecxz
mov
repz
fidivs
sub
add
adc
adc
inc
stc
mov
mov
stos
jecxz
in
inc
pop
and
jae
mov
inc
rorb
fcmovne
pop
adc
jb
cltd
mov
push
aad
leave
lret
insl
xor
cmp
xchg
or
in
out
add
dec
int3
orb
aas
arpl
aas
mov
inc
popa
data16
pushf
jae
out
sbb
xor
movsb
je
testl
stc
in
jle
sbb
fwait
lock
ret
out
imul
adc
xchg
icebp
loope
or
dec
xlat
mov
push
push
fsts
lret
cmpsb
jge
mov
mov
imul
inc
or
cmpsb
jns
ficoms
xchg
push
push
stos
mov
hlt
lcall
cmp
pop
in
mov
inc
sbb
bnd
xchg
pop
pop
push
or
loope
or
cli
cmp
inc
xchg
movsb
dec
int3
fidivrs
jae
xchg
scas
pusha
int
push
push
sbb
mov
loope
stos
insb
xor
rcll
loopne
or
xchg
incb
push
jae
xchg
cmp
dec
pop
aam
stos
dec
xchg
pop
cmp
cltd
stos
jns
adc
mov
into
jg
push
fidivl
pop
cmpsb
ss
ficomps
xor
add
dec
lods
pusha
or
jno
xor
push
inc
fdivrs
out
cwtl
lahf
adc
mov
or
mov
mov
sbb
insl
mov
sbb
imul
pop
mov
mov
lods
mull
es
sbb
test
aas
cmpb
in
mov
sub
lock
push
sub
mov
enter
ds
shll
inc
int
mov
pop
mov
add
xchg
mov
xchg
int
sbb
movsb
and
sub
mov
flds
jo
mov
mov
into
mov
and
jb
xchg
jl
bound
rcr
lcall
movsb
xchg
lea
jb
xor
lcall
mov
movsl
pop
inc
sub
loop
mov
js
adc
aaa
xchg
push
movsb
mov
int
lcall
stc
pusha
gs
mov
ss
outsb
std
cmpsl
jae
addr16
lahf
dec
jg
or
push
mov
pop
cld
fildll
jb
push
cmp
sub
movq
push
jmp
push
adc
mov
out
or
cmp
pop
popf
test
fimuls
mov
cltd
mov
jmp
pop
js
xchg
lret
pop
jb
jnp
sbb
add
movsl
push
daa
xchg
lds
adc
lock
fldl
add
rorb
mov
xor
push
mov
inc
or
push
and
xor
sub
pop
popa
test
add
pop
iret
cs
call
mov
adc
and
sbb
cmc
std
xor
rorl
int
jb
sahf
cmp
dec
mov
imul
lods
imulb
jl
adc
lea
testl
mov
jo
jp
mov
inc
jae
sub
fistl
arpl
insb
mov
fmull
pusha
pusha
das
subb
imul
lret
ljmp
cmp
or
rclb
inc
pop
sbb
push
out
push
sbb
loopne
adc
cmp
mov
mov
movsb
icebp
fdivr
movsb
sub
subl
inc
adc
xor
jbe
xor
jno
scas
rcr
movsb
push
std
sahf
pop
jge
je
test
mov
push
int3
xchg
push
pop
fucom
pop
add
inc
fsubr
cmp
sti
and
cld
sbb
mov
and
or
pop
inc
out
or
xchg
dec
pop
dec
or
mov
int3
in
sub
je
aaa
mov
pushf
inc
pop
lret
mov
fldcw
decl
pop
cmp
repnz
push
jno
xchg
inc
out
lcall
incl
xor
or
mov
push
mov
stos
xor
ljmp
adc
mov
jb
or
sbb
mov
pusha
push
xchg
aaa
pop
outsb
push
push
pop
out
add
or
inc
pop
mov
mov
movsb
pop
mov
push
mov
or
or
movsl
pop
bound
jno
add
in
andl
fdivl
lahf
pop
ret
test
ret
pop
mov
add
outsb
neg
dec
popa
std
sbb
loope
in
push
in
cmp
xor
or
and
imul
push
sbb
pop
insb
push
test
pop
cmc
and
bound
js
les
or
mov
pop
cwtl
push
lea
and
xchg
out
mov
enter
cmp
lea
aam
xor
mov
aas
icebp
shlw
jge
jnp
in
sbb
iret
xor
sbb
es
sub
aas
movsb
push
dec
jbe
or
stos
lret
sbbb
into
jns
out
sbb
aas
fbstp
faddl
sbb
push
add
inc
pusha
adc
stos
fmull
jo
sub
jnp
test
xlat
sbb
cmp
imull
dec
adc
sbb
test
pop
ret
in
inc
sbb
dec
test
jne
mov
mov
scas
and
insb
xor
subb
sub
mov
fs
cwtl
mov
jns
and
imul
fistpl
aaa
or
popa
sarb
lea
in
cmp
push
jne
out
sbb
mov
int
sar
out
mov
and
add
sub
mov
fcmovne
mov
xor
mov
xor
outsb
insl
add
push
dec
or
pop
inc
jnp
adc
push
add
dec
dec
mov
jns
pusha
add
add
dec
and
in
fiadds
aam
pusha
pop
cmc
gs
mov
es
adc
pop
lahf
jno
je
movsl
popa
cmpsb
mov
shl
cmp
addr16
push
mov
cwtl
sub
push
loope
mov
push
or
mov
xchg
jl
packssdw
cmp
sbb
shl
sub
and
mov
out
push
add
jp
push
aad
test
jge
push
jns
inc
aam
jnp
cwtl
sub
mov
in
or
sub
inc
insl
mov
imul
bound
cmpsb
negl
xor
cld
lods
push
inc
sbb
lds
in
mov
sub
jge
dec
out
loope
cmp
push
cmp
addl
fs
sub
aam
and
pop
test
pop
in
sti
imul
ja
lds
fists
popf
inc
in
jne
cmp
pop
push
xchg
xchg
mov
mov
insl
aad
loope
sub
pop
dec
lcall
fcoml
push
fiaddl
adc
xchg
leave
push
notb
fiaddl
sub
inc
push
lds
sarl
leave
mov
popf
inc
jo
mov
int3
fidivl
iret
stos
out
adc
gs
lahf
insl
xchg
sahf
inc
aas
enter
add
cwtl
mov
test
loopne
adc
scas
mov
mov
lahf
sub
scas
test
xchg
mov
sub
push
or
fiaddl
pop
mov
dec
dec
adcl
fisttpll
leave
sti
cmp
sbb
jbe
stos
add
repz
aaa
pushf
outsl
jno
jmp
vrsqrtps
mov
jns
aaa
cmp
jne
cmpsb
dec
jecxz
fwait
dec
mov
cld
sbbl
jnp
adc
xor
inc
cli
js
fcmove
outsl
shll
sbb
test
stos
adc
mov
dec
cmp
adc
call
mov
repz
pop
mov
insb
or
ljmp
xchg
arpl
ds
lret
incb
mov
cmp
shrl
push
mov
push
sbb
inc
sahf
loope
mov
xchg
jle
mov
enter
mov
inc
lods
mov
sub
xor
jle
mov
and
arpl
cmpsb
scas
mov
lods
xchg
mov
pop
scas
shll
aam
test
mov
fmull
mov
in
stos
pop
or
pop
es
stos
push
into
add
ret
mov
add
shrl
aaa
dec
dec
cmp
hlt
clc
sbbl
cmc
pop
out
cmp
and
pop
inc
cmp
aaa
fldt
push
jecxz
mov
mov
xor
pop
mov
loopne
iret
add
jmp
dec
push
and
pop
fcomip
fwait
push
insb
mov
or
lods
inc
jl
test
bound
imul
lcall
int3
pop
shl
push
mov
mov
pop
rolb
add
dec
pop
push
or
mov
nop
rcll
jb
arpl
mov
mov
mov
cmp
mov
jne
mov
pop
leave
or
jmp
sbb
pop
ljmp
insl
in
cwtl
mov
push
mov
xchg
pop
sbb
out
sub
mov
cmc
sar
cmpsb
xchg
pop
mov
xor
inc
iret
leave
sub
movsb
movsb
daa
jo
xor
leave
and
dec
ljmp
or
rol
jne
movsb
out
stos
ja
jle
jnp
or
ja
imul
cwtl
rol
push
jns
ret
xchg
bsf
std
pop
leave
pop
adc
les
scas
cltd
inc
add
ljmp
int
push
mov
int
push
and
iret
loope
sbb
and
xchg
or
popa
mov
sbb
ret
mov
mov
jne
notl
mov
or
repz
or
into
fdecstp
or
fcomps
insl
inc
xorl
fmuls
out
sub
aas
sahf
popf
popf
jecxz
pushf
filds
push
scas
aas
cld
adc
adc
mov
mov
cwtl
xor
jne
call
inc
push
aaa
insb
cs
dec
cmp
pop
int3
lret
dec
pop
lods
inc
cmp
rcrl
push
in
mov
dec
bound
push
stc
movsb
out
pop
call
ss
xor
ljmp
dec
add
cmp
paddw
fmuls
mov
xchg
xchg
mov
rorb
adcb
aad
rcl
mov
pop
push
gs
pop
pop
popa
sbb
decb
sub
jbe
push
inc
push
jno
popa
ss
movb
roll
loope
adc
push
xor
jbe
push
inc
push
jno
popa
ss
movb
roll
loope
adc
push
out
jbe
push
inc
xchg
jno
mov
inc
out
not
xchg
xchg
icebp
cmpsb
or
imul
push
push
push
push
jno
loope
xchg
jle
sbb
mov
imul
mov
fs
sbb
je
push
jnp
das
aam
iret
hlt
jmp
out
xchg
lahf
test
push
pop
inc
dec
je
outsl
adc
add
xor
and
aam
out
cmp
out
xchg
lock
push
int
dec
je
fs
adc
add
xor
and
aam
les
enter
lret
lret
pop
inc
and
or
cmp
test
fcompl
jne
cmp
xchg
add
cli
in
clc
pop
andl
shrb
cli
ljmp
sahf
xchg
dec
mov
pop
and
in
inc
dec
dec
adc
movsb
aam
scas
dec
or
bound
or
mov
add
xlat
adc
adc
lret
rcl
and
lahf
jns
ret
sahf
in
jo
push
cmpsb
cld
stos
dec
xor
scas
cmp
dec
xor
mov
cmp
sbb
xchg
stos
lahf
jl
xor
push
in
pop
lds
fildll
imull
mov
inc
mov
adc
add
xor
and
aam
les
hlt
out
in
xchg
mov
ja
mov
sub
inc
js
dec
pusha
push
push
gs
xchg
cltd
rorb
lock
sti
lock
lock
push
sbb
push
and
add
jo
cmp
push
and
mov
cltd
mov
mov
ret
fisubs
sbb
jnp
sysenter
aas
and
aam
iret
hlt
jmp
out
xchg
lahf
test
push
pop
inc
dec
je
outsl
adc
add
xor
and
aam
iret
hlt
jmp
out
xchg
lahf
test
push
pop
loope
iret
faddl
into
xchg
pop
data16
aam
test
cmc
shl
cwtl
mov
popf
loope
pop
xor
aaa
iret
in
and
sub
fnstenv
ret
pop
add
adc
mov
icebp
movsb
loope
push
sti
and
enter
cmc
xchg
and
jae
fisubrl
arpl
lret
decl
lods
xchg
pop
mov
or
mov
inc
les
or
loop
fmuls
arpl
mov
mov
repz
aam
xor
lahf
pop
jae
scas
jo
insb
xor
mov
leave
popa
xchg
cmp
shlb
xchg
popa
push
mov
mov
pop
xor
mov
insb
fidivl
lea
js
dec
add
cld
fsubs
and
imul
push
and
imul
stos
jb
test
fists
inc
hlt
xchg
cmc
add
dec
leave
decb
in
stos
addr16
mov
add
sbb
outsb
mov
push
sarb
jmp
lret
lea
or
jne
and
mov
outsl
fiaddl
xorl
mov
sahf
sti
pop
or
ja
test
push
xor
or
hlt
out
fwait
xchg
add
lcall
lds
int3
mov
es
aad
mov
xchg
mov
lea
pop
mov
test
cmp
or
aad
subl
pop
bound
push
stc
pop
mov
jns
cmpsb
imul
xchg
aad
addb
xor
jmp
ss
push
mov
jle
add
popa
movsb
xchg
xchg
lcall
imul
adc
shlb
fistpll
lahf
ja
stc
sub
sbb
and
add
jl
fs
imul
inc
scas
push
je
int
xchg
jo
ljmp
jo
sti
test
or
jb
jbe
int
pusha
test
jmp
lods
cmp
das
or
mov
inc
xor
loopne
repnz
add
cmpsb
inc
cmpb
xchg
xchg
mov
pop
adc
add
pop
mov
pop
rol
cmp
push
add
dec
and
xchg
pop
jmp
nop
sbb
ja
popa
hlt
inc
inc
dec
lock
insl
movsb
out
inc
sahf
xlat
jno
mov
inc
fisubrs
push
nop
insl
sti
aaa
push
popa
cmpsb
xchg
adc
mov
cmp
sahf
pop
sbb
shlb
cmp
pop
push
loope
mov
or
shlb
dec
test
sbb
xchg
pop
frndint
icebp
xchg
jb
movsb
mov
mov
xchg
dec
push
cld
push
mov
sbb
jne
inc
push
sbb
hlt
adc
addr16
mov
les
xchg
fcmovb
add
sub
jns
add
aaa
mov
repnz
inc
mov
in
xchg
stc
push
cmpsb
in
ss
mov
ficoms
out
out
sbb
je
mov
movsb
xor
lret
outsb
cltd
mov
inc
divb
xchg
lods
and
and
mov
loop
and
dec
lret
dec
shrl
jg
adc
push
push
add
cmc
push
jb
push
sbb
mov
adc
aaa
mov
add
popf
dec
cmp
movsb
pop
clc
cmp
cmp
push
loope
daa
call
dec
dec
xchg
subb
pop
movsb
mov
lods
xchg
test
pushf
shll
divb
and
sub
shr
sti
test
test
or
xchg
sub
test
test
mov
sub
or
xor
add
lds
repz
xchg
or
rcll
mov
std
lret
xor
popf
mov
movsb
cwtl
bound
out
test
out
xor
push
dec
ljmp
jle
push
movb
lcall
stc
jle
cmp
out
xchg
pop
dec
mov
xorb
popa
mov
mov
mov
shll
dec
int
add
sub
add
pop
mov
mov
xchg
std
test
and
pop
xchg
cmp
push
lds
sub
lea
lods
xchg
fdivs
push
je
or
ret
mov
std
ja
aam
es
pop
or
ljmp
test
or
icebp
stos
lret
mov
mov
jge
dec
test
outsb
mov
dec
mov
fnstsw
dec
loope
ret
sub
jne
aas
sbb
loop
mov
mov
xor
out
js
pop
jle
jecxz
jp
pushf
imul
dec
gs
fldz
mov
gs
mov
je
or
gs
pop
add
test
push
cli
fcoms
loopne
adc
adc
pop
clc
jo
pop
clc
add
ss
xchg
jle
jl
or
dec
jns
and
pop
jmp
adc
sub
dec
leave
arpl
mov
xor
clc
in
out
mov
nop
and
lea
mov
adc
cmpsl
xlat
sarl
push
gs
cwtl
mov
inc
add
inc
std
movsb
and
into
aad
adc
mov
xchg
push
lock
enter
loope
dec
or
sub
stc
push
in
inc
inc
mov
sub
subl
loopne
mov
fs
lock
sbb
cmp
cmp
pop
outsl
adc
adc
and
mov
mov
arpl
push
in
data16
aam
les
popa
mov
ljmp
and
or
add
call
outsl
xor
jle
mov
push
sbb
fbld
mov
flds
mov
cwtl
mov
jmp
sbb
clc
popf
mov
aad
xor
std
and
xor
xor
mov
std
push
loop
divl
scas
cmc
xchg
movsl
lret
jge
aas
xor
mov
lcall
xor
je
stos
outsl
and
es
sbb
adc
mov
xchg
ja
adc
subb
sbb
in
lret
adc
sti
adc
inc
jae
into
adc
mov
dec
cmc
jmp
push
adc
mov
lahf
sub
sbb
dec
out
xor
imul
xchg
sub
fisttps
xor
sahf
mov
mov
sbb
mov
and
enter
stos
pop
ljmp
mov
js
sbb
push
jo
mov
jl
test
mov
ss
cmpsb
ret
inc
outsl
push
movsl
push
cmp
push
add
test
cltd
imul
fdivrl
stc
dec
and
ficomps
scas
mov
push
jnp
dec
adcl
mov
sarb
popf
push
jecxz
push
or
dec
xchg
icebp
addr16
inc
pop
gs
cmpsl
and
sbb
lret
mov
inc
push
mov
xchg
inc
inc
cmp
sti
fwait
cltd
loope
mov
push
mov
leave
xor
cmc
pop
pop
inc
int3
cmpsb
std
pop
or
dec
enter
jb
js
scas
arpl
jo
cmp
fwait
jge
mov
popa
je
push
mov
clc
rorb
pop
mov
mov
cmpsl
cmc
sbb
fldl2t
push
pushf
mov
mov
fs
cmp
pop
imul
mov
cltd
jmp
lea
rcl
sarl
xchg
out
adc
inc
jbe
xchg
call
mov
adc
cltd
lea
jmp
sbb
fs
xchg
push
and
or
sahf
lods
xchg
sub
push
sti
sbb
lea
in
push
ret
arpl
xlat
outsl
adc
cld
movl
mov
mulb
xchg
ret
fidivl
adc
pop
or
jno
and
push
mov
dec
rolb
pop
lock
rcrl
jp
mov
lret
ljmp
ja
aad
jp
adc
mov
stc
sub
xlat
loopne
rcrl
pop
sub
aad
sub
out
out
faddl
mov
enter
test
fmul
mov
sbb
sahf
imul
data16
out
xchg
inc
jp
or
pop
dec
loop
repnz
dec
outsl
jbe
mov
xchg
xchg
rcl
jge
mov
gs
je
jno
ljmp
mov
cmp
out
mov
mov
shlb
pusha
inc
pop
cmp
cmc
dec
jg
jl
mov
das
inc
mov
and
adcb
or
bnd
rclw
or
dec
insl
pusha
pop
sub
sbb
pop
lods
mov
jne
jnp
rcr
push
sub
and
leave
adc
adc
fldcw
lea
jb
or
arpl
cmp
sbb
xchg
jnp
xchg
sub
or
dec
pop
mov
out
lret
decb
icebp
xchg
xlat
mov
cmpb
mov
int
adc
mov
mov
sub
or
subl
in
gs
scas
and
inc
inc
xchg
nop
and
in
movsl
mov
loopne
pusha
lret
enter
and
repz
bound
cmp
dec
mov
inc
mov
cli
push
sar
sahf
pop
or
push
dec
dec
and
cmp
adc
aaa
lea
push
out
clc
sarl
cs
pop
aam
mov
dec
push
jl
mov
sti
dec
lret
mov
mov
test
out
or
xor
shlb
nop
enter
mov
jmp
add
loope
je
or
add
push
inc
push
test
mov
mov
pop
daa
inc
mov
or
mov
icebp
loope
les
cmp
fwait
dec
test
mov
ret
add
mulb
fldenv
mov
jmp
cwtl
insl
test
js
add
and
xor
je
int
cld
stc
dec
inc
out
gs
daa
jb
jge
movsb
repz
loop
sbb
adcb
fidivrl
sbb
es
add
inc
je
jb
fs
stos
lods
or
scas
lcall
imul
cld
lret
jl
sub
xchg
jge
add
call
push
mov
lcall
dec
divb
out
add
dec
push
imull
jo
adc
lret
push
push
fidivl
xor
insl
rolb
sbb
sub
jmp
mov
lock
xchg
mov
clc
cs
mov
movsb
rcrb
adc
jecxz
addr16
ss
in
ja
sahf
lcall
cmp
cmp
in
insl
stos
addr16
or
ljmp
mov
dec
sbb
out
enter
jmp
push
popl
xor
xorl
adc
mov
fwait
sbb
arpl
fs
add
aam
xchg
subb
adc
in
inc
repz
push
imul
data16
inc
mov
dec
pop
aam
lahf
pop
adc
movsl
out
jl
sub
mov
and
inc
adc
mov
sub
movsl
and
and
mov
aad
ficompl
iret
dec
cwtl
fwait
jg
xchg
mov
les
out
pop
lds
sarl
xor
test
mov
ret
cmp
mov
add
add
xor
roll
xchg
xchg
add
push
scas
dec
inc
aaa
mov
sbb
es
imul
xor
loop
mov
mov
mov
sub
jns
xor
div
loop
jmp
mov
stc
stc
out
dec
sub
test
pop
cld
jae
daa
push
jp
mov
testl
jo
xchg
xchg
int
dec
fstps
dec
add
pop
jge
push
lret
in
mov
and
xor
push
and
cltd
loopne
sub
or
sti
out
mov
adc
insl
sahf
xor
xor
cltd
or
ret
cs
fiaddl
adc
or
or
or
mov
stos
xor
add
fists
adc
inc
js
cmpsb
mov
cmc
inc
jmp
pop
or
imul
adc
mov
sub
push
divl
sarl
pop
sbb
cld
popf
push
data16
roll
and
xor
inc
pop
sub
stc
cwtl
jl
int3
mov
adcl
call
in
lods
xor
push
push
nop
dec
add
or
pushf
cld
ds
mov
mov
sub
test
adc
mov
mov
jns
mov
sub
push
inc
sarl
jg
jecxz
and
xor
and
or
lods
adc
sbb
lds
shl
pop
lcall
sbb
mul
push
test
loopne
ret
fiadds
pop
push
adc
mov
or
je
xchg
push
jae
and
imul
mov
fldl
imul
mov
leave
stos
mov
lret
jnp
nop
dec
cmovge
add
std
mov
frstor
inc
mov
cld
adc
mov
test
mov
insb
push
mov
jp
push
cwtl
repz
int
inc
movsl
mov
sbb
sbb
loop
lds
dec
movsl
adc
mov
cmp
xor
in
testb
lahf
fs
jge
inc
pushf
sub
jl
mov
gs
mov
inc
dec
test
jp
out
mov
popl
pop
dec
test
test
jnp
push
jbe
scas
int
lcall
leave
lret
into
rcll
mov
sub
cmpsl
and
dec
pushf
cwtl
insb
and
orb
push
xor
mov
or
pop
fwait
adc
push
jecxz
data16
test
sub
xchg
mov
shlb
lods
and
xchg
stc
lret
inc
outsl
cmp
sub
sbb
push
add
and
jge
loopne
mov
outsl
or
icebp
cwtl
stos
sub
xchg
mov
popf
mov
fadds
pushf
jmp
test
adc
sub
rcrb
push
rep
jns
mov
mov
jbe
sbb
mov
sub
das
jmp
scas
or
loope
xchg
fdiv
sub
rcrb
rcr
pusha
aas
addl
add
xchg
add
push
movsb
sbb
daa
jns
ret
mov
mov
lods
pop
scas
in
negb
aas
xchg
insl
inc
pop
pop
inc
xchg
inc
fisttpll
popf
sbb
xlat
pop
in
cmp
rol
jae
push
lds
pop
jne
adc
ljmp
icebp
icebp
and
push
and
push
push
dec
or
jg
xlat
ds
pop
outsb
icebp
mov
pop
cmpsl
add
cmc
out
loopne
sub
adc
outsb
push
lret
aad
in
dec
xor
dec
lock
out
xchg
push
mov
and
sbb
xor
xor
inc
std
lods
gs
scas
andb
xchg
cmpsb
cmp
mov
xchg
cmp
mov
mov
sbb
lret
mov
mov
xchg
inc
xor
push
push
sti
lods
aas
mov
addr16
test
fsubrs
xor
in
lfs
xor
test
test
cmc
add
aam
addr16
daa
and
jg
push
insl
data16
test
cwtl
test
mov
fwait
decb
lods
jnp
dec
dec
shlb
fs
xchg
xor
cmp
push
nop
loop
aaa
dec
sbb
into
jg
pop
jg
in
and
sbb
xor
pusha
xor
add
jae
inc
xchg
xor
scas
cmp
mov
rcrl
test
xchg
dec
in
movb
arpl
les
hlt
je
jl
mov
clc
cld
xchg
add
jns
jns
bound
lds
cmc
jb
dec
popf
xor
push
lret
or
mov
aam
ret
and
push
int3
fs
jb
inc
sbb
cmpsb
cmc
stos
mov
dec
sbb
fprem
insb
stos
or
popa
xlat
mov
jns
xor
dec
in
aam
inc
in
mov
ret
cmpb
add
xchg
inc
dec
mov
ret
push
push
sub
mov
stos
push
rcll
ss
mov
jns
xchg
pop
xor
je
adc
pop
fwait
fdivrl
pop
mov
ret
int
or
add
pop
addl
jno
sbb
xchg
or
scas
push
js
add
xchg
xor
testl
lea
and
and
fldenv
sub
lahf
mov
ret
daa
rcr
mov
insl
sub
mov
incb
shlb
push
fwait
daa
mov
jb
nop
xchg
outsb
ja
pop
sarb
psubb
dec
sub
in
push
dec
mov
mov
in
aas
outsb
mov
shlb
push
jno
push
or
xorl
add
or
test
and
adc
test
cmp
aas
sbb
push
jl
out
cmp
pop
scas
sbb
sbb
orl
sbb
leave
jecxz
int3
cli
pushl
loop
fyl2x
mov
outsl
dec
out
push
cld
push
inc
mov
cli
cmp
sub
dec
out
jmp
xchg
ret
adc
jle
mov
fcompl
jb
and
lcall
xchg
mov
mov
pop
jecxz
adc
aaa
icebp
pop
pushf
arpl
push
and
repz
mov
scas
jbe
fbld
popf
idivb
mov
cli
push
mov
or
cmp
dec
cmp
mov
dec
pop
or
mov
push
mov
gs
lahf
cmc
dec
push
sbb
rcl
in
jbe
push
daa
mov
lcall
add
jle
bswap
jmp
ljmp
pop
subl
sub
cmp
je
jg
sub
xchg
into
cld
jo
test
popa
mov
or
jne
jmp
and
pop
fs
les
adc
outsb
and
mov
pop
adc
imul
insl
fisubrl
sub
daa
jae
jbe
loop
stos
push
xchg
xor
adc
in
mov
add
or
inc
in
daa
xchg
pop
sub
aas
fstpt
or
inc
scas
xchg
push
fwait
mov
lea
dec
orb
std
daa
lock
repnz
xor
js
out
lods
xor
cmovb
pop
cmp
cmp
inc
inc
and
aad
into
daa
dec
aam
mov
jbe
xchg
mov
adc
xchg
pusha
shll
lcall
and
test
in
xchg
outsl
scas
or
dec
dec
push
lock
hlt
ds
das
repnz
add
cmpsl
push
push
mov
int3
outsl
mov
icebp
mov
mov
mov
mov
mov
popl
hlt
addr16
mov
js
in
mov
xor
dec
sbb
outsb
pop
sub
pop
xchg
iret
mov
pop
fstpt
cmpb
mov
mov
sbb
inc
push
int3
sbb
pop
insl
mov
inc
fisubs
jge
ret
mov
mov
mov
add
mov
mov
ljmp
push
nop
out
dec
xchg
fildl
cli
mov
mov
test
xchg
xchg
cmp
xchg
mov
sbb
movsl
push
dec
subl
push
adc
mov
pop
adc
lock
rol
and
loop
dec
sub
lret
xor
popa
inc
or
loope
jo
sbb
sahf
insb
aam
call
ret
shrb
or
pop
nop
sahf
les
into
jg
fwait
pop
and
shlb
sbb
adc
mov
cmp
sub
sub
mov
out
dec
and
jnp
gs
pop
xchg
and
movsb
iret
sahf
and
imul
idiv
rcrb
adc
cmp
dec
popf
mov
ja
mov
cmp
add
popf
sbb
xor
or
mov
add
push
test
inc
or
pop
scas
int3
jp
in
dec
and
pop
in
fisubrs
or
mov
gs
popf
repz
out
and
roll
cmc
pop
pop
dec
aaa
adc
sti
add
outsb
movsl
mov
jne
repz
pop
insl
into
bound
adc
adc
jae
hlt
dec
mov
sbb
sahf
push
jl
lcall
cmpsl
jp
sub
sbb
and
test
les
jp
repz
mov
push
fsubrl
xor
jg
scas
pop
or
stos
xor
flds
push
lock
or
or
scas
imul
gs
mov
outsb
dec
in
push
xchg
pop
xchg
in
mov
sbb
adc
xor
xor
sbb
lahf
scas
fistpl
aas
and
std
push
mov
int
xchg
nop
inc
jl
inc
pop
push
out
js
in
cli
jmp
iret
adc
pop
add
xor
and
aam
iret
hlt
jmp
out
xchg
lahf
test
push
pop
inc
dec
je
outsl
adc
add
xor
and
aam
iret
hlt
jmp
out
xchg
lahf
test
push
pop
inc
pop
je
outsl
adc
add
xor
and
aam
iret
hlt
jmp
out
xchg
lahf
test
push
pop
inc
dec
je
outsb
adc
add
xor
and
aam
les
jmp
cwtl
jecxz
or
dec
inc
pop
push
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
movsb
in
lcall
daa
in
inc
add
adc
sbb
sub
in
hlt
mov
mov
xor
add
adc
fs
or
sub
xchg
jmp
fwait
hlt
mov
mov
pop
push
fs
pop
push
pop
pop
cmp
mov
jmp
mov
scas
in
fcomps
mov
and
and
xchg
jle
les
out
dec
fisttpl
jnp
imul
xor
cwtl
dec
mov
jle
or
addl
out
sub
sub
es
push
pusha
mov
pop
and
jge
xchg
gs
aaa
mov
out
push
xchg
fiadds
xchg
mov
popf
mov
dec
aam
mov
out
xor
je
mov
sbb
xor
add
out
adc
fs
pop
stos
and
test
sbb
orb
imul
aam
add
les
arpl
dec
hlt
push
jle
orb
pop
cmpl
aam
in
hlt
mov
mov
xor
add
adc
sbb
cmp
fcmovnbe
mov
mov
fwait
ljmp
sub
ja
push
sbb
outsl
xor
dec
shlb
aad
sbb
xchg
test
push
cmp
adc
xchg
jle
popf
sub
lcall
mov
mov
xor
add
adc
sbb
cmp
in
hlt
mov
mov
xor
add
adc
sbb
cmp
fcmovnbe
jecxz
xchg
jmp
xor
leave
inc
es
push
cmp
cld
adc
cmp
mov
orb
pusha
pcmpgtw
repz
mov
loope
cmp
in
xchg
pop
aaa
repz
cmp
xor
cmp
shll
mov
mov
jmp
xchg
cmc
sbb
in
mov
push
xchg
cmpsb
push
jae
cld
and
popf
jbe
cmp
jnp
insl
rcrl
lods
popa
cs
in
pop
and
into
xor
adc
shrl
bound
fadd
in
push
xchg
push
inc
testb
repnz
sub
pushf
cmp
add
pop
ds
scas
lock
or
scas
pop
int3
pop
or
in
jmp
nop
loopne
cwtl
pop
sub
cmp
sbb
pusha
sub
je
int3
add
jg
adc
popa
bound
into
ljmp
mov
add
loopne
orl
jp
stc
jae
stc
mov
sub
cltd
and
sub
fdivl
out
aas
push
sbb
call
sti
es
call
cmp
bound
fs
or
out
push
lds
jb
out
jns
lods
sub
hlt
bound
stc
and
pop
sub
aas
ret
push
or
xchg
pop
rcrb
adc
out
lds
scas
lea
xchg
loop
xlat
hlt
dec
lds
mov
pop
add
xchg
mov
fcomi
std
mov
pop
ds
adc
xlat
mov
mov
stc
sub
scas
jmp
xchg
mov
mov
and
imul
mov
sbb
xor
pushf
clc
in
adcb
inc
mov
cmp
rorl
cwtl
dec
mov
rcrl
pusha
repnz
add
mov
and
inc
mov
loop
frstor
imul
pop
fwait
aaa
mov
cmp
test
movsb
das
test
sbb
mov
cs
lds
mov
push
aas
pop
repz
xchg
push
loopne
push
std
xlat
orb
mov
cmpsl
push
data16
popf
rolb
pop
mov
inc
dec
cmc
in
into
ljmp
push
scas
and
fdivs
pop
push
bound
push
adc
inc
lock
stc
shr
xchg
xchg
inc
gs
std
pop
into
and
rclb
push
repnz
ss
out
aas
jo
enter
cmpl
add
push
sbb
push
pop
xor
jbe
adc
mov
push
push
mov
push
mov
ds
lods
mov
xlat
sbb
out
xlat
pushf
pop
sbb
push
mov
shr
aas
insb
aas
pop
fld
inc
add
movsb
dec
sub
pop
dec
mov
int
test
movsb
les
pop
mov
loope
les
and
xor
jbe
fistl
xchg
xlat
add
call
cltd
imul
je
xchg
push
dec
mov
leave
jmp
jmp
xchg
insl
mov
mov
neg
pop
pop
mov
ss
hlt
xor
icebp
fs
js
mov
mov
std
leave
daa
cmp
sub
dec
in
in
fcoml
sbb
pop
cs
mov
and
mulb
jmp
daa
jae
dec
movsl
into
jno
xchg
popf
sbb
insl
or
push
dec
inc
sbb
add
jbe
and
and
and
inc
or
stos
xor
inc
xlat
xchg
jl
ljmp
aad
and
mov
pushf
ja
push
cwtl
push
dec
loop
mov
xor
dec
test
js
in
adc
jp
aaa
push
loop
adc
mov
jne
xchg
push
add
cli
pop
bound
xlat
mov
stc
cmp
sahf
pop
sub
xlat
inc
mov
in
mov
sbb
inc
sub
or
call
pop
pop
clc
popf
add
aas
daa
mov
aas
push
call
dec
outsb
ret
fbld
imul
jp
push
fistl
add
lods
stos
jp
jo
add
clc
mov
push
xlat
xor
jo
cmp
inc
pop
fldt
push
mov
cwtl
push
add
iret
fisubrs
sahf
push
leave
sub
int3
ficoms
xor
dec
cmpsb
xchg
jnp
call
dec
push
cmp
adc
test
jno
int3
hlt
jecxz
loope
sbb
jbe
minps
movsl
dec
push
sub
jecxz
cli
test
bound
xor
inc
xor
and
stc
int
dec
or
or
xchg
mov
xchg
jo
popf
and
test
lock
add
and
xchg
in
popa
xchg
insl
mov
sub
out
push
cmovns
mov
shll
mov
daa
or
fadd
test
and
ss
jns
jns
test
in
shlb
arpl
hlt
call
push
mov
xchg
mov
jle
push
jns
add
sbb
mov
add
pop
popf
stos
mov
fidivl
into
hlt
and
cmpb
sahf
jp
fstpt
popa
xor
out
sbb
data16
test
sub
aaa
cs
icebp
xor
clc
dec
aam
fsubrs
lahf
shl
pop
fsts
jne
sarl
ret
and
test
cld
cmpsb
testb
pusha
test
fwait
addl
inc
daa
mov
mov
add
mov
pop
psraw
int
or
adc
sbb
cmpl
cmp
cmp
mov
pop
pushf
xchg
aad
sahf
movsb
ljmp
cld
push
movl
cwtl
jecxz
cmc
add
in
loope
jp
fiadds
adc
lods
sub
out
arpl
jg
daa
aam
movsb
mov
xchg
fildl
sub
rcl
cmpsb
mov
loopne
pop
in
and
xchg
aaa
notb
lea
mov
mov
mov
pop
dec
aam
sar
push
lods
test
add
inc
inc
aam
insl
mov
and
xchg
push
and
orl
add
repnz
pop
in
xchg
push
inc
mov
sub
fwait
imul
inc
inc
incl
inc
pusha
mov
mov
pop
lea
or
call
testb
popf
stos
ljmp
outsb
pop
lds
push
or
shl
xor
sti
xchg
sbb
mov
add
movsb
sub
xchg
adc
and
mov
sbb
rcl
sbb
lcall
loop
mov
cli
sarb
push
inc
push
cmp
jo
push
pop
push
nop
lds
cmc
sbb
repnz
mov
sbbb
xor
cmp
fucomp
cmpsb
sbb
sbb
call
add
pop
pop
scas
cmpsb
jge
leave
lret
imul
bound
daa
xchg
mov
out
clc
mov
lret
out
dec
jns
out
jge
xlat
je
add
dec
test
add
pop
adcb
arpl
jp
push
inc
test
xor
sub
mov
cmc
cmpsl
rclb
imul
sarb
push
mov
mov
leave
jle
dec
push
sbb
shlb
mov
xor
std
jp
mov
jb
lods
mov
dec
cmpsl
fs
cs
shr
cmp
sbb
push
fiaddl
popl
push
insb
shl
mov
dec
ds
ret
ret
loop
test
xor
das
ret
pop
adc
dec
cmpb
xor
mov
fdiv
mov
add
cmp
ficomps
xchg
cmp
cmp
idivl
xlat
loope
push
xchg
pusha
scas
in
idivb
insl
int3
mov
xor
jge
das
push
repnz
or
shlb
sbb
mov
sbb
pop
or
pop
xchg
xchg
sahf
mov
mov
insl
mov
imul
mov
xchg
mov
jno
int3
jle
pop
pop
sub
lcall
out
in
nop
mov
inc
xor
shlb
mov
and
cmpsl
lea
mov
popa
and
adc
add
popa
rorl
addl
and
inc
das
mov
arpl
cli
jmp
in
xchg
adc
mov
dec
stos
fwait
sbb
sub
cld
mov
pop
inc
jne
jb
test
jecxz
and
jge
cli
sbb
xchg
scas
mov
shrb
bound
sbb
mov
mov
cs
cmpsl
stos
xchg
mov
sahf
mov
push
pop
outsl
out
sbb
inc
add
js
xchg
test
jne
jno
mov
inc
lods
xor
push
cmc
ret
cmc
scas
imul
jns
sub
enter
pop
aas
push
lahf
mov
into
jnp
iret
das
inc
pop
and
xchg
das
mov
pop
setge
int3
movsl
push
out
jmp
out
ret
outsb
xchg
push
fdivrs
and
in
jae
insb
sahf
inc
in
mov
jb
inc
in
cld
cltd
or
add
insl
dec
pop
sbb
and
mov
mov
inc
jns
iret
mul
sahf
movsb
pop
or
imulb
jle
je
xchg
fwait
sarb
cltd
cli
xor
push
lcall
cmpsb
aas
leave
into
sbb
cmp
or
inc
xor
adc
out
adc
sub
scas
xchg
adc
mov
pop
mov
mov
cmp
xchg
shll
nop
mov
rcrb
adc
cmp
test
dec
xor
ljmp
cltd
clc
cmpsb
test
push
jnp
add
inc
inc
mov
mov
jbe
mov
fs
test
and
fwait
mov
mov
pushl
fbstp
test
addr16
nop
fisttpl
mov
fdivrs
jne
das
inc
jge
add
and
int
jae
sub
loope
sbb
outsl
movsl
aam
push
sbb
mov
cmp
loop
jge
ja
aaa
out
pop
add
sub
jecxz
mov
fcomp
adc
std
js
ja
dec
sahf
or
mov
xorb
daa
jo
mov
sub
mov
es
add
andl
mov
sbb
jae,pn
std
sub
adc
cs
gs
jle
notb
fildl
sub
push
rorb
xor
jne
enter
leave
jbe
mov
dec
stos
fwait
jg
dec
dec
daa
add
sbb
dec
xlat
call
mov
xchg
sbb
fldt
loop
sbb
mov
fbstp
fcoml
dec
popa
mov
push
outsb
cmp
push
shll
dec
ret
in
in
sub
pop
xchg
push
lea
push
sahf
sub
or
negb
lret
push
gs
lahf
xor
mov
sub
pop
nop
rcrl
imul
das
mov
cmp
add
lcall
cmp
and
and
add
into
xor
sub
cwtl
data16
pop
mov
addr16
fwait
imul
imul
mov
sub
mov
cld
mov
addb
cmp
dec
push
or
xchg
sub
sbb
test
xor
push
push
xchg
sbb
push
sub
outsl
fldl
push
ret
shrb
xor
test
lahf
clc
mov
shlb
pop
or
ficoml
lret
jns
ffree
push
outsl
xchg
dec
out
cmp
fidivs
mov
push
fmuls
add
xchg
andl
out
lret
inc
add
mov
mov
and
scas
notl
jg
push
and
ret
negb
es
mov
icebp
ss
jno
and
or
xchg
jbe
dec
xchg
jb
or
cmp
aaa
pop
and
mov
pop
mov
jne
mov
xchg
lods
scas
insb
imul
jle
ret
test
sub
push
aam
pop
aaa
nop
icebp
push
in
pop
adc
iret
sbb
mov
hlt
push
jns
int3
xor
pusha
cli
adc
sub
xor
add
pop
cmc
dec
add
rclb
js
xchg
out
and
xchg
rcrl
pop
sahf
push
adc
es
in
popf
rorl
push
and
inc
or
daa
pop
dec
xchg
lahf
orb
xlat
push
jl
adc
add
rcrb
adc
shlb
scas
cld
push
lret
test
mov
lret
adc
adc
bnd
sbb
mov
shr
int
mov
popf
pop
or
pusha
dec
daa
dec
mov
dec
mov
lea
idivb
imul
mov
xor
adc
insl
xor
cltd
adc
ficompl
std
dec
cwtl
cmp
sub
pop
movsb
sti
imul
imul
xchg
mov
in
xor
or
fs
fwait
cwtl
mov
adc
jo
lret
add
rcll
mov
scas
aas
sbb
enter
out
fcmove
mov
sbb
pop
les
idivb
dec
fs
inc
shll
aaa
or
data16
xor
inc
jnp
test
rorl
daa
test
xchg
test
jno
push
mov
jmp
imul
lea
stos
cli
mov
add
dec
cwtl
xlat
pop
mov
imul
mov
psllw
insl
or
daa
xchg
stos
mov
xor
and
outsl
shll
add
fmul
xchg
jns
clc
mov
jns
in
iret
test
push
mov
add
xchg
imul
in
add
sbb
daa
mov
call
or
inc
mov
imul
add
outsl
cmpb
xor
pop
in
adc
icebp
add
pop
sub
mov
and
xchg
pop
ljmp
add
inc
fsubs
adc
jae
pop
mov
mov
lcall
cli
sahf
xor
lahf
mov
sub
push
fisubs
out
xchg
xor
sti
shlb
lods
mov
adc
mov
jae
ret
stc
cmp
inc
pop
fiadds
inc
inc
in
cmp
xor
sub
mov
mov
and
xchg
flds
movsb
repz
sub
cmp
pop
xor
sahf
mov
std
dec
lea
mov
and
or
push
sbb
movsl
push
pop
sub
jns
cwtl
inc
xor
shll
push
pop
sub
outsl
rorb
ret
inc
out
jae
mov
push
cltd
out
int3
sub
dec
test
and
xchg
lods
or
cmp
push
xor
movsl
mov
sbb
das
pushf
clc
test
dec
daa
movsb
enter
xor
xor
push
or
mov
in
shrb
bound
mov
movsb
push
mov
mov
mov
push
cwtl
lea
sbb
int3
sub
xchg
movq
outsl
rcrb
sbb
insl
add
cmpsb
add
push
iret
push
scas
sub
pushf
pop
jmp
je
repz
outsl
in
in
call
lock
mov
cs
sub
cmp
in
ja
xlat
andl
imul
bnd
or
add
fcomi
push
inc
inc
cli
gs
mov
xlat
ljmp
push
sub
test
adc
mov
adc
and
movsl
jp
lods
xchg
push
add
pop
leave
xchg
cltd
sub
rcr
lret
out
stos
subb
fld
xor
aam
int3
push
sbb
iret
and
sub
adc
add
popa
sub
cmp
xchg
aas
clc
loopne
subb
and
arpl
repz
popaw
rorl
mov
fldl
inc
and
xor
sbbl
cld
dec
dec
out
sub
jns
xorb
adc
add
addr16
pop
mov
fs
push
popf
arpl
xchg
mov
clc
sub
cmpsl
int3
rcrl
adc
scas
daa
xchg
dec
fcmovu
jmp
cld
pushl
cmp
ret
jle
js
and
stos
loopne
mov
xchg
aas
pop
jmp
pop
in
jmp
mov
lret
push
dec
inc
xchg
ljmp
arpl
pusha
pop
pusha
xchg
not
std
jge
cs
sbb
mov
mov
lds
or
pop
mov
test
ficoml
inc
jp
stos
cmpsl
cli
test
mov
dec
sub
inc
std
xchg
loop
add
dec
adc
sti
dec
loope
mov
and
jp
xor
jns
fcoml
sub
movsb
cmp
dec
xor
xorb
jl
sbb
push
fs
add
shrl
mov
add
push
ret
cmp
mov
fsts
andb
sarb
lret
xchg
lods
cmp
xchg
xor
jae
pop
mov
lods
cmpsb
std
cld
push
ja
jo
mov
test
int
enter
inc
jo
jmp
bound
jmp
outsl
mov
add
ret
push
mov
out
ja
push
aam
push
inc
sub
outsl
out
mov
mov
dec
scas
xor
divb
dec
sahf
push
into
adc
sub
aas
xchg
sysenter
jl
ret
add
pushl
xor
andb
out
inc
cmpb
or
jmp
cmp
arpl
dec
popf
and
jne
mov
or
cmp
sub
loopne
cltd
inc
pop
xchg
jg
es
clc
bound
cmp
mov
fsubl
adc
stos
jle
scas
insb
xchg
sbb
aam
iret
dec
test
ret
lods
sub
loope
iret
adc
pop
jae
sbb
int3
call
dec
mov
sbb
movsl
lcall
and
sub
arpl
xor
jmp
sub
sbb
dec
ret
into
test
vcmpss
mov
add
cli
mov
jno
mov
pop
adc
sarl
jle
sub
jp
addr16
rcrl
jg
int3
leave
add
dec
adc
push
aaa
or
mov
mov
add
scas
add
pusha
lds
mov
jno
lahf
lock
sub
fisubs
sbb
out
mov
and
cmp
outsl
push
shlb
mov
mov
push
mov
test
push
arpl
std
std
mov
or
pop
add
rcrl
mov
push
fwait
testb
pop
iret
mov
cld
rcl
test
les
pushf
push
push
pop
clc
gs
sbb
mov
decl
mov
xchg
jns
out
sbb
pushf
shrb
mov
sbb
je
mul
push
mov
lods
push
or
std
sbb
mov
mov
mov
inc
lret
jbe
mov
ds
or
push
lea
mov
lea
push
cld
sbb
loopne
cmpsb
imul
jo
mov
popf
bsf
and
inc
fstps
jae
fucomip
int
lods
lahf
cld
movsb
movsl
mov
lret
cmp
push
or
es
seta
pop
inc
ljmp
ret
push
inc
inc
shld
push
fwait
pop
shrl
jecxz
daa
mov
add
xchg
int3
shlb
push
lods
push
js
sbb
aas
inc
jno
dec
out
inc
incl
dec
jl
sbb
mov
les
test
sub
inc
lret
sub
or
sbb
mov
xchg
push
mov
cmpl
push
adc
test
push
mov
sbb
ja
ret
push
dec
adc
out
fstpt
call
mull
sti
mov
test
fidivs
lcall
adc
mov
jp
sub
aad
adc
lods
xchg
stos
lahf
out
mov
dec
jnp
inc
sbb
cli
daa
decb
cli
shll
ficompl
rcll
mov
sub
pop
xor
or
cmp
pop
jge
pop
pop
int3
movsl
testb
lahf
or
movsl
cmp
clc
dec
xor
inc
xlat
adc
test
pop
lods
push
lea
mov
jb
sub
sahf
mov
lahf
ret
pop
filds
mov
add
push
jo
sub
jmp
std
pop
jge
push
xor
cmp
cmp
fildll
jno
mov
mov
push
adc
out
add
inc
and
inc
mov
inc
aaa
mov
imul
nop
and
out
sub
in
ret
in
popf
int
inc
pusha
cmp
popf
mov
jno
add
loope
dec
int3
or
lods
repnz
mov
xorl
in
hlt
mov
mov
xor
add
adc
sbb
cmp
in
hlt
mov
mov
xor
add
adc
sbb
cmp
in
cmc
mov
mov
xor
add
adc
or
push
sub
xchg
jmp
fwait
hlt
mov
imul
lret
loope
jnp
sbb
xchg
cld
hlt
mov
out
sti
mov
data16
stos
xchg
mov
dec
jnp
pop
sub
cmp
or
sbb
jmp
sti
sti
lret
lret
fcmovnu
stos
stos
mov
mov
imul
inc
pop
pop
jmp
cmp
or
sbb
jmp
sti
cmp
stos
fwait
mov
test
daa
sub
sub
pop
jle
jne
mov
lahf
mov
bound
pop
or
mov
ret
mov
repz
pop
hlt
pop
push
mov
mov
mov
fs
xchg
incb
aam
cmp
xchg
push
mov
xchg
scas
sub
inc
into
inc
add
shrb
imul
movsl
jnp
inc
outsb
fistps
fsubr
jmp
sti
mov
mov
fwait
push
out
fwait
mov
xor
jnp,pt
mov
cs
sbb
sub
and
repnz
mov
orl
into
stos
es
js
les
pop
pop
sbb
or
dec
dec
push
sti
fwait
lcall
jae
jnp
mov
dec
out
jno
addr16
fcmovne
mov
mov
or
jnp
dec
dec
pop
sub
cmp
or
sbb
stos
jmp
xchg
mov
push
leave
out
cltd
fsubrl
push
or
and
sub
push
lods
sahf
mov
stos
stc
jmp
push
or
push
dec
sbb
sub
outsb
outsb
push
movsb
cmpsl
mov
out
mov
fwait
imul
dec
dec
pop
pop
sub
cmp
or
sbb
jmp
sti
sti
lret
lret
fcmovnu
stos
stos
mov
fwait
imul
dec
dec
pop
pop
sub
cmp
or
sbb
jmp
fisubrs
push
int3
leave
pop
cmp
ljmp
fsubrs
lods
scas
in
jecxz
je
add
adc
push
mov
repz
mov
mov
lds
cld
and
adc
xchg
and
and
mov
mov
pop
stos
mov
pop
imul
psubusb
shrl
cld
jmp
shll
adc
push
pop
pop
out
shrl
inc
outsb
push
ret
xchg
fs
jmp
rcr
dec
outsb
sbb
adc
shrl
sbb
imull
fisttpl
lret
xor
sbb
push
mov
push
imul
push
sbb
push
fs
cmp
rcrb
mov
or
push
inc
cld
stos
popf
test
ret
push
push
cwtl
enter
push
cltd
jg
adc
sub
push
jnp
xchg
xor
scas
or
push
andb
cmpsl
or
push
mov
mov
repz
add
mov
in
dec
inc
mov
int3
cmpsl
adc
and
xor
jle
int
cmp
xchg
ds
lea
xchg
mov
pop
or
mov
sahf
or
mov
fucomip
mov
xor
fstps
jecxz
or
add
movsb
in
inc
out
or
insb
cli
fs
cmp
and
imul
xchg
mov
xorl
mov
mov
pop
add
aaa
sub
cmp
adc
ret
aaa
cmp
shlb
les
out
test
xchg
sbb
lds
mov
adc
sbb
andl
and
nop
lahf
les
imul
dec
loopne
or
cmp
mov
push
pusha
adc
shrb
dec
push
notb
in
push
inc
pop
and
in
cmc
mulb
aaa
pusha
in
mov
xchg
shr
sti
cmc
cmp
add
movsl
jns
cmp
jmp
jo
jg
mov
adc
xchg
xchg
push
sbbb
fiadds
mov
lret
or
adc
adcb
bound
adcl
sub
stos
push
stos
adc
pop
pop
pop
sti
repnz
inc
std
lret
xor
shll
dec
cwtl
arpl
push
mov
jecxz
lret
pusha
sahf
fdivl
or
push
test
arpl
out
adc
clc
lods
ljmp
cmp
mov
out
xchg
cmp
clc
loope
sahf
or
push
rcll
inc
into
ljmp
imul
jo
push
imul
adc
adc
mov
inc
mov
popf
call
push
bound
xchg
loopne
ret
leave
fidivs
xchg
xchg
pop
xor
arpl
in
pop
mov
out
cs
xchg
popa
movsb
pop
mov
adc
out
mov
push
cmp
movsb
cli
mov
mov
ret
popf
xchg
cmp
xchg
aaa
xlat
pop
daa
mov
pop
or
fwait
adc
dec
mov
repnz
imul
pop
bound
inc
inc
outsb
icebp
add
pusha
inc
cltd
movsb
or
jno
inc
pop
sub
inc
sub
mov
aaa
fistpl
or
test
adc
xor
or
sbb
pop
filds
inc
sti
fdivrp
inc
mov
test
inc
add
das
mov
sbb
jmp
mulb
mov
aam
fmull
mov
adc
scas
jbe
fildl
jnp
inc
push
fwait
push
dec
stos
cmc
fs
cmpl
or
jmp
add
into
sbb
mov
xchg
sar
pop
dec
fldcw
test
xchg
ljmp
test
inc
push
ss
xor
xor
and
les
in
or
xor
ss
mov
into
fldl
dec
dec
sbb
xchg
movsb
add
or
add
lods
add
pop
iret
push
and
mov
imul
add
xchg
xlat
je
outsb
sbb
jns
shrl
xor
inc
insl
jecxz
sbb
or
rorl
out
subb
clc
cmc
mov
push
loopne
pusha
dec
mov
divb
loop
sub
pop
ficoml
sub
sub
cli
loop
push
bound
lock
loop
add
mov
cs
sbb
sbb
leave
lcall
lret
rorl
inc
les
xchg
negl
sub
out
repz
stos
mov
jae
sahf
mov
inc
lea
lods
push
ud1
mov
push
sub
bound
pmullw
jnp
out
add
sub
xor
cmpsb
dec
cmpsl
mov
adc
jge
xchg
mov
sbb
test
mov
adc
jbe
enter
daa
call
test
aam
inc
jbe
cs
dec
scas
xchg
test
lock
xlat
mov
xchg
xchg
call
out
fiaddl
dec
xchg
mov
xchg
out
cmp
xor
mov
out
lds
adc
add
jl
outsl
cmpsb
sub
dec
movsl
jbe
or
call
push
push
inc
icebp
xorb
idivl
lea
mov
lret
sub
mov
les
and
mov
or
lock
lds
or
stos
add
mov
mov
xchg
pop
stos
shrb
shlb
xchg
mov
inc
iret
leave
mov
jae
addr16
push
repnz
bound
mov
sub
inc
and
rclb
ds
sahf
or
adc
add
push
push
nop
sbb
adc
popf
je
mov
test
and
fiadds
rclb
cmp
add
cld
push
mov
xchg
inc
jle
test
xchg
gs
mov
xor
or
into
jp
mov
dec
or
mov
mov
pop
pushf
pop
jmp
jle
stc
mov
dec
sahf
push
mov
or
cmpsl
jmp
repz
jne
leave
mov
fwait
push
popf
into
test
and
jmp
sub
pop
add
jp
mov
xchg
and
pop
nop
popf
sbb
jnp
popf
push
mov
sbb
fwait
adc
test
or
mov
sarl
pusha
mov
xchg
cwtl
jg
pop
or
movsl
lds
cmp
in
cwtl
in
mov
or
sub
jne
pop
ret
lret
fbstp
loop
push
rcrb
sbb
adc
stc
push
out
aad
pusha
sbb
fidivrs
xchg
xchg
and
lret
jbe
jno
shrb
out
xchg
sub
mov
sar
sbbb
cwtl
fistpll
mov
xchg
daa
pop
bswap
dec
sbb
pop
sahf
cmp
loop
fimuls
cmpl
popa
lds
pop
ret
mov
pop
xlat
mov
add
hlt
iret
adc
cmp
fidivs
push
fiaddl
jmp
fisubrl
mov
shrb
mov
sahf
fcomi
inc
inc
xor
std
mov
inc
testl
mov
pop
hlt
sbbb
pop
out
dec
in
sub
and
clc
idiv
cld
mov
inc
int
jl
lea
sub
mov
xchg
cmc
in
js
cmpb
cltd
mov
jle
scas
pop
fcoml
inc
xchg
stos
mov
dec
or
andl
stos
in
mov
ret
lock
jmp
mov
cmp
adc
mov
pop
in
and
test
out
xchg
push
jb
and
sub
arpl
dec
pusha
popf
xor
ror
sub
add
xlat
sub
adc
adc
frstor
imul
pop
inc
les
fwait
testb
lret
fdivrs
and
push
jno
lret
shlb
sahf
cmc
popf
shll
mov
std
cmp
fistl
loope
pop
dec
xchg
fiaddl
aas
cwtl
xchg
mov
ds
mov
cmp
adc
sarl
mov
or
dec
cmp
ret
outsb
rcr
xchg
in
icebp
or
mov
jl
std
roll
gs
fdivs
xor
inc
in
xchg
mov
icebp
sub
adc
cmp
dec
and
aam
leave
pop
inc
cld
cmp
jno
xor
addb
jae
sbb
dec
sbb
pushf
pop
std
mov
mov
aas
jnp
push
lret
xor
bswap
push
mov
mull
rsm
or
or
mov
or
dec
inc
sub
jae
lahf
sub
or
xor
mov
jbe
pop
aad
or
fmul
pop
popa
xchg
mov
push
mov
sub
or
push
push
jne
and
jb
clc
rcll
add
xor
call
sbb
in
test
push
pop
mov
mov
xor
loopne
stc
sti
repnz
xor
jg
adc
aad
cmp
pop
push
repnz
mov
repnz
popf
mov
out
push
cld
sub
or
mov
cmp
mov
pushf
shlb
imulb
fwait
gs
test
pop
sbb
jns
test
ljmp
int3
negb
sub
pop
xchg
call
mov
and
outsl
jno
popf
inc
ret
in
jl
inc
pop
pop
jns
sub
mov
mov
arpl
push
jno
xor
fstl
jmp
loope
vpxor
or
sbb
lea
dec
idivl
loope
xor
loopne
outsl
dec
dec
mov
jne
mov
ds
push
rdtsc
push
testb
shrl
aaa
mov
cmp
and
pusha
mov
mov
and
and
cld
jl
scas
shlb
mov
movsl
mov
enter
push
sbb
xchg
jmp
xchg
cs
or
repnz
bound
pop
push
pop
adc
adcb
shrd
sub
insb
xchg
test
xchg
or
mov
fisubrl
xchg
mov
push
mov
jb
add
dec
cmp
sub
or
jne
outsb
xchg
pop
sub
mov
xchg
icebp
ja
inc
hlt
nop
mov
inc
in
mov
pushf
adc
mov
sbb
xor
and
inc
pop
mov
xchg
sub
outsb
int
inc
insb
adc
mov
sbb
lret
jmp
xchg
aaa
xchg
rcrl
ret
imul
pop
bnd
out
inc
xor
add
and
adc
jo
fbstp
push
sub
jecxz
mov
jle
jmp
stc
cwtl
xor
push
outsb
xchg
fildll
mov
mov
or
push
push
pop
rcl
inc
lds
or
push
sbb
dec
lahf
adc
out
das
iret
loope
das
mov
jmp
push
jbe
dec
mov
lahf
jne
and
push
jns
xchg
mulb
aad
push
xchg
jo
xchg
popf
cmp
mov
push
or
xor
lods
lret
xchg
xchg
les
or
int
xchg
push
dec
sbb
push
add
dec
ficoml
fmuls
lods
cmp
sub
hlt
pop
xchg
mov
dec
mov
push
push
and
cmp
cs
aad
scas
adc
xor
dec
leave
lea
fistpl
mov
or
push
stos
cmpsl
rcll
bound
cmpb
repnz
inc
cmp
pusha
adc
push
push
fnstsw
in
fildl
jae
mov
dec
add
sub
nop
aas
pushf
mov
stos
jbe
push
sbb
cs
pop
lahf
int
ljmp
mov
gs
cmpsl
xchg
int3
insb
inc
xchg
pop
sub
lock
pop
into
push
fisubrs
xchg
in
sahf
mov
aas
sbb
cmpl
lahf
outsl
add
rcrb
xor
mov
push
repz
mov
adc
or
add
ret
mov
hlt
bound
gs
ljmp
xchg
test
hlt
jae
sti
xor
adc
and
or
jns
insl
les
sbb
jbe
mov
mov
int3
lret
jnp
xchg
and
mov
mov
iret
fdivrl
out
inc
rclb
mov
or
dec
fdivrs
inc
cld
in
shrb
pop
testl
adc
and
lret
dec
mov
push
sti
mov
aas
inc
sub
in
xchg
inc
push
mov
mov
enter
push
scas
adc
push
subl
shlb
in
xor
sti
sbb
into
push
shrl
xor
or
jne
imul
das
fiaddl
pop
nop
mov
fs
mov
imul
jb
push
jne
les
xchg
test
dec
mov
adc
pusha
mov
test
jcxz
jg
imul
cmp
sub
or
pop
pop
and
adc
pushf
insl
add
pushf
inc
dec
adc
and
sbb
lock
xchg
push
mov
repz
cmp
mov
ja
ss
push
or
fnstsw
leave
dec
jo
std
sub
xor
hlt
movsb
clc
fimull
lret
inc
fsubl
stc
inc
and
test
mov
adc
pop
test
cmpsl
ja
sub
outsl
adc
popf
outsl
inc
dec
push
das
mov
sti
mov
xor
frstor
dec
cwtl
ss
pop
out
inc
add
fimull
add
push
xchg
insl
xchg
sub
adc
sub
xchg
sub
xlat
es
pop
insl
testl
cmp
add
ret
mov
adc
adc
cmp
movlps
mov
hlt
cmp
aas
idiv
cld
ret
arpl
lods
jmp
out
pusha
ret
sti
jae
outsl
mov
nop
add
xor
decb
andl
pop
into
stc
and
lret
cmp
pop
xchg
lret
mov
jb
das
pushf
push
fsub
rcrl
xor
inc
js
outsb
cmpsl
lea
imul
shll
out
jno
mov
test
das
xor
push
inc
insl
cmp
ret
ja
jbe
jae
loop
mov
nop
cmpsl
adcb
test
int
incb
mov
push
leave
std
out
mov
int3
mov
fmul
call
outsb
or
sub
clc
test
fdivrs
cmp
sbb
sbb
sub
outsb
aas
into
cs
cmpsb
mov
mov
scas
divb
sub
cmp
and
pop
fisubrl
loope
andb
push
push
lds
mov
jns
lret
jge
mov
les
int3
cltd
adc
popa
ret
aam
loop
das
sub
inc
aad
mov
mov
icebp
dec
mov
xlat
pusha
adc
movsl
mov
or
mov
mov
xlat
nop
xor
out
xor
cmp
add
jle
xor
or
cmpsl
and
mov
fldenv
shll
push
sbb
ljmp
mov
mov
shrb
repnz
data16
mov
stc
pop
lods
mov
data16
out
mov
pop
test
aas
imul
jno
clc
or
fcmovb
push
dec
pop
fdivl
inc
ja
mov
dec
xchg
sub
add
lds
push
es
mov
push
push
movsl
es
cli
xor
mov
loop
pushf
das
pop
call
xor
pushf
into
test
lcall
and
mov
je
sub
sbb
lock
fidivrl
ds
call
ds
pop
cmp
sub
jno
jecxz
jae
in
mov
push
cmp
sbb
frstor
jge
pop
adc
lock
and
sub
or
and
nop
and
push
jge
cli
and
pop
dec
jnp
mov
test
insb
and
push
cld
fwait
mov
push
xor
and
cmpsb
adc
mov
xchg
lods
fld
push
xchg
stos
loopne
outsb
insl
repnz
pushf
daa
push
mov
ror
sbb
les
cmpsl
push
sbb
lret
push
jle
mov
mov
rclb
insl
lds
adc
inc
cmp
fldenv
mov
mov
adc
dec
dec
loop
dec
lods
jb
push
adc
sbb
push
jae
push
mov
in
aas
mov
mov
daa
das
mov
jae
fs
ror
imull
std
push
add
out
int
fdivl
je
or
popf
dec
add
loop
xchg
pop
les
pop
sub
hlt
mov
ja
das
adc
out
and
mov
jbe
mov
xchg
or
adc
xor
xor
aam
cmpsb
clc
xchg
cli
push
sub
pop
adc
repz
fimuls
shl
cmp
cmp
repnz
insb
in
xor
pusha
call
pop
stc
js
jecxz
jecxz
lea
shrb
fsubl
xor
xchg
xor
xchg
dec
lret
xor
sub
dec
fidivs
mov
mov
fists
cmpsl
sahf
enter
mov
cmp
push
stos
mov
xchg
mov
lahf
dec
inc
jle
mov
jmp
xchg
mov
pop
jbe
adc
out
clc
mov
push
pop
ds
cmp
insb
dec
mov
or
cmp
push
adc
push
scas
mov
rcl
sub
add
es
sbb
mov
pop
pop
popf
mov
fistpl
icebp
nop
lcall
and
inc
mov
clc
add
imul
jns
pop
mov
hlt
aad
notl
enter
stc
xchg
sbb
add
mov
jb
inc
add
or
and
xchg
out
lock
ds
das
add
dec
ja
sbb
mov
lds
loop
pop
loope
xchg
ret
loop
insl
ret
push
push
jbe
pop
rclb
inc
lahf
mov
mov
outsb
into
jae
add
sub
and
push
insl
fwait
imul
les
aam
mov
outsl
hlt
icebp
xorb
imul
cltd
or
sub
leave
pushf
shlb
movsb
lods
mov
or
imul
push
out
xchg
out
ja
cmp
ret
mov
js
bound
call
cmp
xchg
ficoms
or
mov
push
mov
xchg
xor
mov
xchg
stc
push
iret
push
push
shll
jae
xchg
sarl
and
fisttpl
pop
lcall
and
jne
pushf
mov
cmp
repz
push
aad
mov
mov
cmpsl
int
int3
lret
jb
cmp
jbe
into
cmc
flds
in
dec
pop
in
call
gs
jge
hlt
cli
or
aas
shll
clc
fs
scas
jnp
das
fstpl
sub
cmp
insb
or
mov
roll
xorb
js
pop
loop
mov
mov
icebp
lods
popf
pop
roll
rcll
pop
shlb
rol
add
and
notb
add
jl
lds
subl
sub
inc
fcoml
cltd
addb
dec
sub
cli
lret
test
stc
dec
inc
dec
mov
jae
shll
outsb
sbb
test
lret
pop
inc
test
sbb
jle
pop
nop
ret
mov
mov
or
lds
pop
pop
mov
popf
imul
mov
push
jae
lods
das
push
add
sbb
enter
out
mov
outsb
cs
sbb
push
mov
jmp
or
imul
shlb
sub
test
mov
mov
add
sahf
xlat
div
clc
push
pop
test
jp
dec
outsl
mov
push
pop
adc
inc
xchg
add
fwait
loop
shll
les
add
daa
mov
lcall
mov
push
sub
ljmp
cmpsb
push
in
inc
lret
nop
jl
int
std
and
cmp
jbe
xchg
xchg
add
mov
mov
loopne
mov
xchg
mov
jbe
adc
adc
push
scas
pop
push
add
xchg
xorb
iret
or
shll
mov
pusha
outsb
fiadds
add
sbb
and
test
mov
mov
adc
add
dec
fistpll
dec
ret
cs
mov
adc
lahf
inc
jne
cmp
push
add
loopne
sbb
mov
add
sti
xchg
mov
out
pushf
jns
in
in
mov
jns
inc
sub
sbb
lods
pop
nop
lret
dec
pop
push
shrl
je
sbb
das
sbb
pushf
mov
mov
loopne
sbb
dec
inc
adc
outsb
daa
in
cmpsb
fcoml
std
ja
insb
xor
mov
fsubs
mov
loope
cli
pop
lock
cmc
cs
mov
gs
daa
dec
mov
push
outsb
loop
add
test
xor
dec
fidivrl
jns
roll
into
fcmovnu
stos
stos
mov
fwait
imul
dec
dec
pop
pop
sub
cmp
or
sbb
jmp
sti
sti
lret
lret
fcmovnu
stos
stos
mov
fwait
imul
dec
dec
pop
pop
sub
cmp
or
sbb
jmp
jnp
dec
rcr
fildll
stos
mov
fwait
imul
dec
dec
pop
push
sub
cmp
or
sbb
jmp
sti
pop
lret
das
fistpl
mov
fwait
pop
imul
pop
push
dec
inc
jnp
imul
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
pop
jne
and
inc
pop
popa
and
inc
sbb
in
aad
xchg
in
xchg
repnz
push
xor
xor
jb
mov
xchg
in
aad
shll
sbb
cmp
inc
pop
xor
gs
into
movsl
mov
out
rcll
adc
outsb
xor
repz
in
push
mov
jns
push
imul
xchg
mov
jge,pn
push
std
dec
add
and
test
lods
ficoml
dec
insl
test
mov
cs
xchg
jg
pusha
adc
or
push
scas
jo
push
xorb
add
dec
push
test
mov
fs
push
addr16
xor
mov
cli
lock
out
cmc
mov
call
inc
mov
jb
bound
mov
in
sub
loopne
xchg
or
loop
adc
fldenv
sbb
cmpb
hlt
pop
shll
push
add
adc
push
and
and
fwait
cmc
mov
mov
mov
movsl
loop
jmp
jno
ja
inc
adc
es
aas
fs
jo
jne
cltd
xchg
mov
mov
mov
xchg
xchg
loopne
xor
das
inc
push
xor
ss
cmp
push
jp
add
out
test
xchg
loopne
jmp
and
xor
cmp
and
xor
in
aad
shlb
add
and
inc
inc
xor
jb
xor
in
aad
shlb
add
jo
cmpsl
pop
xchg
insl
lock
fnclex
jnp
addl
xchg
leave
pushf
les
inc
loope
push
or
inc
lcall
xor
in
adc
ds
clc
call
xlat
jbe
jmp
punpcklbw
dec
xor
mov
lahf
sub
cmp
scas
inc
arpl
adc
pop
mov
sub
jb
xchg
sarl
insl
jns
xchg
pop
xor
push
scas
pushl
popa
xchg
cltd
or
roll
pushf
sbb
cld
and
mov
xchg
movsl
xor
cmp
sub
jno
pop
mov
mov
mov
imul
mov
out
add
xor
out
mov
aaa
push
mov
sbb
mov
and
test
cmc
inc
dec
addr16
or
xor
bound
ret
xchg
cmp
in
data16
xchg
and
sbb
jns
push
sub
jg
push
jg
adc
push
jp
add
lods
dec
repnz
adcl
pop
xor
daa
adc
pop
mov
push
inc
dec
push
mov
scas
call
ss
scas
stos
cltd
and
mov
outsb
pop
xor
jb
inc
xorl
out
sahf
sbb
call
pop
or
in
jo
push
call
aas
sarb
mov
pop
into
std
test
lds
sub
add
aaa
xchg
mov
xchg
lock
inc
daa
neg
std
mov
lret
jo
cmp
xchg
mov
and
dec
in
xchg
and
popf
outsb
je
sbb
pop
and
mov
fs
sub
mov
push
fbstp
popf
xor
dec
sti
rorl
xchg
or
ret
sbb
fbstp
push
fucomip
popa
cmp
int3
insl
addr16
cli
sub
xchg
stc
insl
push
push
jmp
mov
insl
jno
jbe
sub
call
pop
mov
push
ss
ficompl
or
jae
pop
adc
fcompl
lds
in
fdivl
ds
cmp
cmp
mov
aam
bts
popf
shlb
dec
xor
mull
xlat
sbb
or
mov
idivl
ret
js
jo
mov
xor
sbb
dec
inc
add
push
movsl
mov
test
fwait
mov
mov
je
jo
xor
jnp
scas
loopne
jl
dec
sbb
loopne
jns
outsl
gs
cmp
jnp
std
and
jnp
lock
mov
pop
clc
and
fpatan
pushf
inc
cmp
lret
add
push
sub
jo
mov
add
pop
cmp
sub
pop
pop
xchg
xchg
push
push
clc
push
add
ja
movsl
nop
repnz
in
imul
mov
jo
out
mov
sbb
test
mov
push
in
or
xchg
stos
incl
popa
pop
dec
and
sub
mov
push
loopne
stc
fldl
cld
lahf
jae
icebp
insb
icebp
sbb
pop
jb
pop
daa
je
and
loope
jmp
idivb
inc
les
push
add
xor
dec
stos
daa
fisubrs
les
sub
xchg
adc
inc
inc
mov
lods
lret
adcb
loope
jp
cmc
sub
dec
dec
sbb
push
nop
popa
and
adc
int
out
addr16
and
negl
sub
leave
hlt
jp
jno
cltd
mov
and
xchg
mov
or
scas
mov
xlat
leave
lret
insb
inc
jmp
fisttpl
stos
adc
xor
and
pop
dec
rclb
inc
add
ficompl
outsb
data16
movsb
fstpt
rcll
mov
xchg
pop
fidivs
loop
xor
pop
or
fs
scas
mov
lock
jl
stos
pushl
and
aam
cli
jnp
insl
ljmp
cmp
dec
inc
add
test
lock
clc
test
jmp
sbb
push
sbb
arpl
in
jg
jb
pop
jno
xor
cmp
mov
in
add
adcl
dec
outsl
scas
incb
pop
xor
sbb
or
xor
pushf
mov
repz
add
in
cltd
mov
test
mov
or
push
and
stc
fidivrl
sbb
in
jo
aaa
movsl
xor
test
cld
add
cmp
push
sbb
cmpsl
daa
mov
mov
mov
jmp
inc
insb
or
andl
aam
xor
lods
test
cmp
jmp
aam
fisttps
pop
sub
loop
pop
stc
push
jmp
outsb
movsl
mov
aam
leave
dec
mov
pop
std
cmp
fildll
mov
jmp
push
aas
shll
xchg
jle
add
push
mov
mov
dec
das
jl
xchg
mov
mov
adc
jno
mov
xchg
or
inc
dec
mov
jl
hlt
inc
cmp
pop
xor
lahf
shll
mov
or
ret
mov
fildll
dec
xchg
push
cs
shll
pop
cmp
pop
and
loop
out
xchg
or
pop
sahf
aas
cmpsb
js
inc
pop
add
rorb
mov
stc
loop,pt
xchg
mov
rcl
in
push
xor
data16
loop
ja
xchg
ficoml
dec
in
dec
out
dec
mov
out
fidivrl
pop
jp
sbb
test
mov
pop
add
jmp
push
dec
lock
stos
sti
dec
mov
iret
pop
bnd
nop
add
in
inc
dec
ja
and
and
cmp
mov
fdivl
rcrl
or
mov
pop
in
pop
mov
adc
sub
or
add
mov
and
pop
cmpsb
and
adcb
testb
push
or
cli
dec
pop
push
mov
jnp
ficoml
shl
lds
pop
loop
test
pop
popa
mov
fdivrs
xor
mov
addr16
cs
fistpl
addr16
imul
in
inc
aas
ja
dec
mov
stos
xchg
inc
dec
outsl
mov
in
pushf
push
mov
shll
pop
xor
repz
lret
push
jl
in
and
loope
dec
xchg
jnp
or
add
mov
push
pop
inc
outsl
mov
dec
fcomip
bound
cmp
mov
dec
mov
xlat
insb
cltd
jno
sbb
call
insb
daa
mov
adc
out
stos
inc
jae
or
push
mov
add
push
or
jnp
int3
out
xchg
int
ret
ja
dec
xchg
pop
imul
pop
sbb
out
cmpsl
repz
jae
xchg
add
or
pop
dec
xchg
int
rol
hlt
mov
push
jecxz
shrb
xchg
mov
jmp
adc
js
fdivrs
pop
sbb
xchg
in
roll
pop
fs
pusha
sbb
jge
pop
fdivl
dec
into
inc
sbb
cmpsb
sub
xchg
test
cmp
imull
push
cltd
dec
dec
and
mov
and
sahf
add
mov
pop
in
scas
cld
daa
movsb
jl
sub
negl
aas
daa
arpl
aad
inc
cld
and
mov
repz
pop
stos
sbb
adc
dec
pop
pop
ja
das
loopne
jae
pushf
xchg
test
or
jbe
movsb
stos
in
xchg
or
push
push
sub
cmp
pop
fstps
jae
or
jg
rclb
push
pop
and
sar
out
or
push
lret
pop
aas
in
sub
stos
int
push
adc
pop
dec
inc
cld
mov
xor
fisttpl
dec
pop
sahf
stos
popf
scas
insb
adc
cmpsb
cmp
rolb
and
and
lret
dec
sarb
orl
gs
xchg
sbb
add
pop
loopne
add
push
imul
pop
xchg
add
fildll
cmp
mov
fwait
mov
data16
ficoms
lret
insb
mov
jg
sub
fisttps
cld
push
xchg
jl
movsb
xchg
jo
or
nop
mov
in
or
aad
jp
out
sbb
dec
mov
mov
xchg
es
add
ja
jle
pusha
pop
adc
dec
int
outsl
dec
out
out
and
outsb
mov
pop
mov
sub
mov
push
mov
pop
jg
push
push
movsl
jmp
loopne
mov
call
push
gs
int3
leave
lds
fstpl
inc
arpl
sar
in
adc
ficompl
pop
sbb
stos
repnz
xorl
icebp
data16
je
icebp
pop
jg
xchg
es
sti
add
mov
leave
stc
mov
popf
in
lcall
cmp
aas
adc
mov
mov
clc
push
loopne
or
pop
sahf
lret
ret
sub
mov
jne
mov
sarl
cmc
or
push
push
mov
jp
xorl
add
jo
push
pushf
leave
xor
adc
pop
in
not
sbb
or
jbe
adc
int3
sti
stos
xchg
fnsave
jns
cmp
cmpsb
movaps
mov
and
inc
rolb
jmp
data16
and
pop
out
xchg
inc
mov
xchg
vpshufhw
mov
nop
push
fld
sahf
stos
ret
clc
mov
xchg
bound
add
xchg
je
negb
sub
test
ffree
sahf
test
push
pop
insb
lret
pop
adc
jne
ds
rcll
add
notb
inc
in
cmpsb
mov
cmpsb
xor
jp
and
jae
mov
mov
icebp
sbb
and
add
clc
xor
scas
test
fsubs
mov
xchg
mov
jbe
or
pop
test
jge
dec
and
jo
cmp
imul
push
xor
sub
pop
add
repnz
pop
into
add
inc
and
dec
jge
xchg
sub
sti
rorl
enter
lock
pop
lret
lcall
pop
dec
out
enter
out
mov
sub
push
test
into
insb
and
sbb
xchg
stc
push
mov
fwait
mov
addr16
dec
imul
rorl
pop
jp
mov
or
jmp
fldt
test
xchg
or
dec
scas
lock
mov
push
out
lcall
inc
test
loopne
js
icebp
push
sbb
in
or
cmp
insb
clc
mov
lock
xchg
stos
xchg
push
aaa
insl
mov
cltd
lcall
jns
test
loope
mov
stc
sbb
stos
imul
sahf
or
repnz
mov
arpl
sarb
popa
arpl
xor
daa
lds
cld
jo
call
test
out
js
jmp
incl
fwait
pop
and
nop
lret
out
jne
andl
push
leave
dec
iret
mull
insl
mov
xchg
jg
sub
hlt
cmp
out
scas
popa
xor
int3
push
ret
sarb
out
push
popf
ljmp
xchg
xlat
cmc
push
call
out
lcall
call
xchg
mov
inc
push
and
sbb
jne
outsb
sti
je
mov
test
jns
mov
icebp
sbb
out
and
push
rcrl
add
push
push
fsincos
daa
gs
lea
iret
hlt
mov
sub
push
inc
inc
pop
or
mov
bound
mov
sbb
xchg
fincstp
jl
imul
adc
mov
cmpsl
movsl
rcl
dec
xlat
cmp
hlt
push
les
icebp
ds
jns
adc
xchg
push
out
dec
pushf
repz
int
xchg
aad
mov
mov
sub
cmp
repnz
fiaddl
push
loopne
inc
fsubs
aas
repz
inc
jecxz
and
imul
xor
decb
je
xlat
or
pop
sti
pop
jecxz
xchg
adc
call
adc
pop
mov
mov
or
icebp
nop
enter
xchg
xor
mov
jge
mov
xchg
repz
mov
xlat
cmp
stos
xchg
push
mov
aam
test
mov
inc
jnp
stos
mov
mov
ja
shlb
jecxz
adc
fwait
arpl
lret
add
xchg
movsl
std
mov
fiaddl
fnstenv
cli
movsb
pushf
in
inc
nop
bound
lcall
gs
scas
jecxz
lods
inc
cltd
cs
data16
in
out
adc
insl
fmull
jns
push
dec
inc
lret
orl
pop
push
cmpsb
pop
push
xchg
mov
xchg
sti
in
mov
nop
or
dec
and
push
movb
cld
xchg
pop
jne
push
cltd
addr16
iret
mov
dec
inc
cmp
mov
xchg
adc
pop
push
jle
movsb
loopne
andl
inc
xchg
xor
cltd
sub
sub
divb
sub
rorl
lahf
cmp
pop
lahf
cli
or
push
lock
loope
nop
push
icebp
bound
repnz
clc
mov
dec
dec
in
add
add
loopne
mov
pop
mov
dec
les
andl
jl
xchg
sub
mull
xor
push
add
mov
mov
roll
lret
push
ficomps
jae
fwait
pushf
cmp
inc
test
xlat
cld
jno
or
test
xchg
or
mov
xor
lods
dec
add
xor
shrb
scas
repnz
loop
xchg
add
push
push
leave
bound
dec
xor
inc
push
shll
sub
out
mov
dec
xchg
jle
mov
je
add
push
sbb
cmpb
push
fildl
iret
das
mov
popa
xor
push
dec
sti
xor
or
add
rclb
rcll
test
pop
aad
test
shrl
add
pushf
sahf
hlt
jno
jb
shlb
je
std
fsubp
and
mov
and
repz
daa
add
in
jecxz
out
fimull
dec
inc
and
sub
mov
fwait
lods
stc
push
and
cmpb
sub
sub
cmp
pop
adc
sub
xchg
mov
jno
cli
xchg
enter
repnz
mov
mov
int3
loopne
pusha
mov
sub
rorl
and
push
testl
dec
mov
adc
and
push
outsl
ret
xchg
and
jnp
or
ss
stos
xor
cmp
pop
add
push
cmp
fcmovnb
or
addr16
lds
das
out
xchg
adc
xchg
mov
lret
jns
scas
mov
arpl
cmp
dec
dec
mov
sub
test
lret
push
push
stos
nop
push
xchg
add
lcall
ja
insl
push
idivl
jl
in
fwait
push
xchg
xchg
sub
out
xor
jbe
jp
push
divl
js
rcrb
jo
pop
in
xchg
icebp
xchg
aam
pop
lcall
sbb
and
fnstcw
lods
nop
jno
dec
or
aas
sbb
mov
mov
add
pusha
and
jmp
push
mov
aas
xchg
adc
and
dec
jno
mov
rcll
mov
push
lds
movsl
xchg
and
cmpsb
shlb
dec
ljmp
lods
decl
inc
cmp
aas
push
mov
in
jl
ljmp
xor
jecxz
adc
sbb
repnz
xor
ja
ljmp
es
insb
lahf
and
dec
mov
adc
push
mov
outsb
mov
insb
jmp
dec
lcall
add
adc
fstp
ret
sbb
adc
adc
jnp
adc
aad
mov
int
push
dec
daa
inc
fisttps
lea
sbbb
cmp
mov
mov
mov
mov
mov
es
out
and
mov
push
jae
sub
fiaddl
clc
dec
sub
push
adc
std
inc
adcl
add
loope
lret
mov
rolb
int
push
push
icebp
jg
adc
cmp
enter
shrb
orl
jae
fmuls
and
icebp
pop
icebp
pop
fwait
int3
xor
xchg
out
adc
dec
cmp
mov
xchg
xlat
jne
add
cs
out
adc
add
hlt
sub
fstsw
aam
insl
leave
mov
dec
mov
sbb
mov
aad
dec
sbb
call
loope
shll
movsl
inc
adc
mov
add
jo
sub
insb
outsl
push
rorb
adc
and
push
stos
enter
arpl
and
lds
cmp
pop
addr16
sbb
add
mov
sarb
jmp
in
fnsave
movsl
mov
mov
rcrb
js
loope
test
jbe
sbb
sbb
mov
cmp
push
fnstcw
rcl
into
or
adc
fcoml
pop
addb
out
mov
enter
push
lret
fwait
fs
mov
ss
xor
mov
test
ljmp
dec
fsubs
daa
dec
mov
pop
data16
mov
ds
test
lcall
int3
mov
jmp
mov
and
jmp
sbb
jle
inc
clc
xchg
mov
ja
cmp
imul
cmp
push
mov
xor
movsb
movl
mov
mov
out
mov
dec
jle
iret
fcom
faddl
and
mov
fdivrl
pop
fisttpl
out
orl
shlb
fwait
jmp
dec
lret
test
cmp
scas
push
xchg
jge
jns
pop
fisubrl
sub
out
insl
xchg
sbb
out
jmp
add
sub
and
dec
ret
dec
incb
inc
add
sbb
mov
mov
or
faddp
popa
inc
outsb
test
mov
xchg
dec
inc
ret
pop
test
xlat
jnp
loope
xchg
mov
imul
push
fs
jbe
xor
push
jae
loop
loopne
push
push
test
add
pop
cmp
mov
rolb
jmp
xchg
mov
lahf
mov
pop
stos
sar
fsubs
testl
cmpsb
je
ficompl
pop
adc
or
addr16
jbe
das
dec
cltd
xlat
adc
xchg
aad
sbb
sahf
push
aas
sbb
pusha
lret
add
and
jle,pt
dec
aam
cwtl
test
xor
mov
mov
xor
xor
push
cmp
loopne
and
je
test
repnz
push
mov
dec
rcr
jge
cmp
push
mov
scas
xchg
pop
les
insb
repnz
sarl
add
push
fnstsw
ss
inc
xorb
loopne
icebp
sbb
jmp
pop
or
sbb
or
add
xchg
add
add
loopne
add
push
jnp
push
jns
pop
fsubs
pop
push
inc
and
in
add
loop
mov
insl
cmp
mov
cmp
jns
js
je
cli
nop
jg
fldt
mov
jmp
scas
stc
mov
jecxz
push
mov
add
jmp
sarl
pop
into
push
ds
mov
mov
dec
leave
out
xchg
loope
sbb
pushw
lret
icebp
sti
jbe
outsb
idiv
mov
push
cmc
fwait
sub
sbb
pop
nop
jbe
pop
inc
jle
mov
aad
cltd
push
call
mov
pop
mov
pusha
push
jne
insl
pop
or
sub
xor
adc
lea
push
xchg
and
pop
adc
mov
mov
fs
sahf
test
dec
shrb
mov
pop
lods
jl
pop
sbb
xchg
bound
div
adcb
iret
adc
and
adc
inc
inc
push
jns
rol
fmulp
into
xchg
ss
mov
or
push
adc
shlb
jns
leave
push
imul
xor
and
imul
xchg
mov
imul
dec
fcmovnbe
and
daa
add
jge
mov
es
mov
mov
dec
inc
inc
mov
jl
pop
inc
inc
movsl
dec
lods
push
jae
lcall
into
xchg
cmp
jg
add
dec
xlat
sbb
and
and
std
jle
ficoms
aaa
rorl
sub
mov
jp
rcr
fsub
jp
scas
aam
pop
add
pop
mov
inc
out
mov
sbb
loop
jbe
lds
push
push
dec
mov
mov
ja
in
inc
mov
mov
sbb
or
adcb
xor
xor
jb
xor
in
aad
shlb
add
and
inc
inc
xor
jb
xor
in
aad
shlb
add
and
inc
inc
xor
jb
xor
in
aad
movsl
loop
ret
test
jne
gs
xor
xor
repnz
jge
insl
dec
or
mov
mov
pop
pop
sbb
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
push
rorl
cmp
mov
ret
mov
ljmp
jno
add
dec
xor
push
lcall
sbb
mov
inc
sbb
add
jno
add
adc
roll
mov
ret
xchg
shlb
stc
push
xor
dec
adc
bound
js
add
push
lcall
or
subb
xchg
push
subl
test
xchg
lret
xchg
xor
xor
jo
bound
scas
loop
sub
sub
fucomip
pop
sub
daa
inc
rorb
test
push
inc
lahf
add
aaa
xchg
dec
mov
lret
sarl
or
mov
push
dec
xchg
cmc
pusha
ficompl
mov
lock
cmp
imul
cltd
mov
xchg
and
xor
sub
jns
movsb
jp
xchg
cmp
je
popa
loopne
sub
ja
mov
das
cld
cmp
adc
and
rcrl
sbb
mov
inc
add
popa
and
add
pop
and
push
mov
xchg
mov
mov
movsb
out
aam
sub
jb
outsl
adc
sbb
pop
sahf
loop
mov
test
leave
xchg
arpl
sbb
imul
cs
out
sbb
ffreep
mov
lret
mov
inc
sbb
popa
cmp
add
dec
and
push
lcall
sbb
mov
inc
sbb
popa
cmp
add
dec
and
push
lcall
repnz
cld
sbb
data16
pop
stos
outsb
jno
pop
and
push
cmp
or
test
jge
lret
cs
jbe
cmp
loopne
mov
lahf
sbb
lahf
fwait
xchg
loop
mov
mov
adcb
inc
es
fildl
pop
sahf
mov
jb
jo
mov
jb
dec
pop
pop
lock
or
and
sub
scas
cmc
inc
imul
mov
repz
mov
jle
jge
adc
sbb
mov
pop
push
outsl
push
rcrl
mov
jg
out
sbb
imul
inc
pop
mov
xchg
mov
xchg
frstor
inc
and
scas
xor
fcmovnb
xchg
aas
jo
xchg
mov
shl
nop
mov
jb
jecxz
sbb
adcb
push
mov
sbb
sbb
cmp
dec
push
cmp
std
divl
and
pop
fnstsw
sbb
mov
cmpl
mov
scas
cmp
xchg
int3
out
incb
lods
mov
xor
and
jne
scas
xchg
push
enter
sub
roll
testl
jno
jl
xor
fildl
test
mov
aaa
addr16
sub
sbb
sub
cmp
ds
pop
dec
scas
cld
movsb
cmpsb
andb
mov
daa
out
movb
mov
js
ret
ljmp
lea
inc
cmp
jp
mov
or
test
and
out
jo
inc
repnz
cs
hlt
jo
incl
popf
shlb
test
aad
loope
mov
and
insb
cmp
data16
stc
jmp
popa
xlat
imul
mov
scas
ret
pop
addr16
pop
push
fcmovnbe
mov
out
movsl
xor
in
pop
jecxz
loopne
cmp
ret
jmp
dec
out
dec
stos
fildll
enter
pusha
les
in
mov
inc
sbb
pop
sbb
mov
sub
das
and
mov
sbb
adc
cmpl
repz
xchg
lods
sub
clc
jae
ja
fdiv
dec
imul
ja
fdivrl
and
mov
dec
jnp
jno
push
mov
shrl
lret
call
push
sbb
stos
mov
mov
cli
push
push
add
xlat
lret
jp
cmp
aaa
nop
mov
dec
push
xor
daa
addb
inc
mov
xorb
jae
mov
repnz
xor
and
pop
aad
pop
fld
bound
into
incb
add
sbb
loopne
aas
out
fcom
loope
pop
ja
or
xchg
push
sbb
mov
adc
punpckhwd
cwtl
mov
xor
lods
ss
loopne
lock
xor
mov
adc
add
push
sbb
ja
sti
in
stc
push
outsb
xor
adcl
jle
cmc
shll
push
imul
jb
pop
xorb
add
and
xchg
inc
inc
push
push
stc
fistps
mov
fnstenv
mov
shll
nop
push
xchg
lods
jg
inc
int3
and
pop
dec
sub
mov
mov
lret
sub
cmpb
imul
sub
pop
mov
sbb
rcr
in
mov
pop
cmpsl
loope
jmp
mov
daa
fldenv
imul
push
sbb
pushw
aam
shr
lahf
or
dec
or
pusha
dec
xor
cmpsl
adc
das
lds
inc
sub
gs
xor
enter
mov
inc
mov
add
aad
stc
rorl
cli
cmp
add
adc
lods
or
jg
or
lds
je
push
adc
mov
das
adc
cwtl
and
movsb
jle
insb
in
sub
outsl
dec
mov
push
cmp
xor
push
jl
mov
xchg
add
add
mov
mov
cmp
into
popa
in
hlt
frstor
fdivrl
ret
adc
adc
nop
stos
mov
add
mov
dec
mov
xor
jmp
xchg
test
fucomi
nop
mov
cmpl
mov
adcl
cmpsl
fsub
mov
inc
sahf
mov
pop
push
and
stos
insb
xor
jno
adc
sub
loopne
repnz
je
mov
es
aad
outsl
mov
jp
push
notb
icebp
xor
adc
popa
les
rcrb
jge
pop
je
sub
and
or
pop
fsubrl
mov
jp
dec
lret
push
out
xor
inc
mov
jbe
xchg
dec
out
mov
ret
stos
stos
sub
mov
ds
out
mov
test
sub
mov
mov
xchg
repnz
or
add
shlb
cld
cmp
popf
addr16
test
stos
xor
cmp
aas
and
out
pop
or
cmpsb
or
mov
fnstenv
inc
popf
xor
inc
push
stos
cli
adc
xor
fistpll
add
sbb
into
nop
cmc
lret
or
xor
jle
sahf
dec
nop
push
test
inc
jns
incb
sub
adc
mov
stc
jg
dec
pop
or
lds
test
xchg
repz
stc
pop
inc
ret
inc
in
jmp
lret
iret
inc
xchg
int3
sub
push
rcrl
and
pop
call
sub
lahf
xchg
sbb
arpl
in
lret
insl
cltd
add
imul
jb
hlt
adc
add
jnp
sub
dec
rorb
adc
and
fimuls
or
out
lea
push
ss
sub
lahf
jnp
sahf
daa
aam
popa
gs
or
jg,pn
push
rcll
and
adc
ljmp
xchg
jnp
mov
aad
push
and
xchg
xor
outsb
jnp
fcomps
cmp
adc
mov
out
flds
cmp
test
es
sbb
inc
inc
dec
int
cmc
or
les
add
les
movsl
mov
arpl
add
aaa
lcall
cs
shlb
sahf
loop
js
cmpsl
ljmp
and
popa
mov
inc
shlb
jle
mov
sbb
jae
sbb
inc
push
gs
call
jl
movsb
sbb
xchg
loope
mov
sbb
das
and
in
pop
adcl
and
es
pop
mov
push
mov
sub
sbb
and
addl
pop
sbb
jle
xchg
pop
mov
push
pop
push
dec
ss
or
adcl
xchg
cltd
and
sbb
ret
fwait
pop
ljmp
or
pushf
scas
or
lock
loope
fistpl
fdivs
push
dec
stc
mov
shll
and
pusha
mov
mov
mov
sub
sub
into
mov
adc
mov
pop
inc
jbe
mov
out
filds
jbe
cmp
dec
movl
cltd
push
dec
xchg
cwtl
test
roll
out
lods
stos
cld
in
mov
cmp
sub
fstpl
dec
xchg
cld
testl
or
mov
mov
ss
push
fcmovnu
js
es
test
and
and
out
xor
add
fdivr
rol
test
sbb
int
xchg
push
loop
add
sbb
adc
cli
cli
mov
mov
sbb
xchg
jge
sub
cmpsl
bound
popf
and
repz
mov
pushf
cmc
push
enter
xchg
int
notb
push
and
or
fwait
call
ljmp
push
sbb
dec
and
cmpsb
xchg
mov
sub
std
mov
test
test
popa
loope
outsl
js
push
orl
clc
aas
jecxz
dec
clc
nop
adcb
mov
inc
out
imul
and
sub
popf
push
rcr
lret
push
push
out
jmp
int
xchg
rcrb
sbb
xorb
jo
mov
mov
cli
lcall
jns
or
adc
ficoms
jg
mov
pop
and
sbb
in
popf
jae
out
xchg
jp
mov
mov
jb
push
dec
cmp
lock
sbbl
sub
add
and
push
mov
lea
int3
jg
and
push
lods
outsl
fcmovbe
stos
dec
clc
out
mov
cmp
xchg
in
mov
push
aaa
mov
cld
out
mov
mov
sub
fcoml
sbb
dec
sbb
shl
repz
orb
les
loop
repnz
cwtl
fwait
dec
add
lods
data16
adc
xor
lock
and
mov
stc
cmp
xchg
out
inc
out
adc
and
lods
loope
ret
imul
push
sbb
fistps
sbb
cmp
sbb
sbbl
into
push
push
lret
sbbb
pop
cli
pop
mov
in
mov
loopne
jns
repz
in
sarl
popa
enter
cltd
cltd
and
push
notl
add
adc
fsubrs
mov
out
dec
pop
fsubrs
xchg
fcmovb
iret
jb
jl
adc
fstps
add
in
movsl
xchg
fnstsw
dec
sbb
add
xor
mov
mov
repz
cmc
popf
aaa
lret
jnp
stos
dec
mov
imul
imul
addr16
cli
xchg
add
pop
and
dec
dec
mov
lret
pause
and
push
ret
and
test
ljmp
out
fmull
movsb
ficompl
push
in
mov
popf
aas
test
ret
shll
xor
push
xchg
xchg
pop
stos
addr16
and
das
xor
jbe
add
pop
mov
imul
and
xchg
adc
inc
cmp
daa
fldl
in
sahf
and
cltd
nop
lahf
scas
aaa
mov
lock
xor
xor
addb
popf
inc
adc
repz
xor
mov
loopne
in
lret
and
sbb
neg
dec
dec
mov
add
or
jbe
dec
add
inc
stos
enter
push
add
outsl
test
mov
sahf
je
pop
or
inc
loope
out
sbb
ja
dec
test
jmp
stos
xchg
lahf
fiadds
stos
popf
addr16
jl
stos
bound
mov
scas
push
dec
out
jo
push
adc
insb
out
push
add
adc
xor
lea
cmpsb
inc
arpl
mov
movsl
pusha
pop
xchg
mov
lea
shl
scas
pop
mov
xor
out
shrl
cmp
dec
pop
repz
and
repz
into
dec
cmc
cltd
jae
xchg
in
or
jmp
fistl
fcoml
cmpsl
jge
inc
and
cmp
or
xchg
hlt
add
mov
inc
dec
lods
jp
inc
out
pop
add
or
ljmp
cmp
sbb
sbb
sub
or
stos
dec
sbb
or
fsubr
jno
jae
inc
inc
jbe
push
jmp
add
add
cwtl
inc
mov
lret
sub
sub
movsb
or
jmp
frndint
outsb
or
stc
negl
fwait
sbb
inc
mov
sbb
std
dec
pushl
push
adc
mov
xchg
and
and
mov
rolb
jmp
dec
pop
shl
pusha
inc
jl
sub
adc
or
xor
push
addb
cmp
mov
pop
ret
bound
aas
push
push
je
mov
jmp
inc
stc
cvtps2pi
mov
or
push
fisttpl
jmp
aad
popf
mov
test
lcall
jae
cmc
sub
jno
jmp
lret
imul
out
rol
ds
hlt
push
call
je
jbe
jbe
ljmp
cmc
push
xlat
leave
ficompl
rcll
sub
aam
mov
std
cwtd
addr16
dec
pop
leave
push
pop
in
scas
stos
xorb
pop
repz
int
bound
andl
enter
dec
adc
inc
adc
rcl
call
outsb
push
push
insb
in
rol
subl
push
scas
gs
pop
imul
inc
cmp
jg
jne
jns
daa
xchg
subb
leave
leave
push
add
dec
int3
nop
inc
jecxz
mov
jge
cs
icebp
pop
imul
mov
popa
jmp
mov
in
sub
xor
movsl
clc
ret
xor
cmpsb
adc
dec
leave
inc
stos
fucomp
pusha
cli
push
inc
sbb
mov
xor
mov
xchg
fcmovbe
and
and
mov
ds
imul
ja
jae
sahf
jmp
mov
aaa
sbb
out
rol
mov
mov
fdivr
out
adc
xor
adc
test
fstpl
fisubs
cmp
cmp
sub
aad
repz
daa
mov
pop
cmc
nop
adc
mov
notl
jnp
mov
adc
fabs
sbb
sahf
shlb
add
pop
adc
pop
fnstsw
jle
jno
ret
and
sub
stc
xchg
adc
jmp
and
popf
mov
add
frstor
sbb
mov
push
aaa
ret
mov
repnz
jg
sub
mov
pop
jne
mov
jns
pop
jp
imul
push
xlat
scas
loopne
or
dec
cmp
xchg
in
fdivrl
adc
adc
jne
movnti
not
dec
lds
dec
xor
xchg
rep
fistl
xchg
test
lods
add
mov
imul
fnstenv
cld
pop
cmc
jle
and
nop
dec
aas
lcall
sub
int3
push
fwait
ret
add
sub
in
pop
into
dec
popa
mov
mov
rcrl
shll
stos
decl
sub
push
sub
jl
fstpl
push
movsl
or
shlb
xlat
xchg
subb
mov
mov
xchg
mov
jl
addr16
leave
lock
fadds
in
jne
and
incl
sub
push
popa
test
and
bound
jo
repz
xor
mov
enter
dec
jle
push
popf
mov
jbe
test
hlt
popf
in
jge
and
cmp
inc
dec
inc
int
or
flds
xor
rorb
lods
imul
cltd
adc
into
push
adc
jmp
xchg
adc
aaa
xchg
fs
lods
data16
rcr
lods
rcr
rolb
dec
inc
sbb
jne
sbb
or
andl
lds
lret
cmpsb
test
addl
lret
add
mov
adc
arpl
stos
mov
psrad
or
int3
mov
fs
inc
jae
div
lods
pop
push
daa
mov
xchg
mov
xorb
lea
scas
ljmp
sbb
push
lods
aaa
and
xor
and
adc
fsubr
jae
daa
xlat
outsb
dec
dec
sbb
jp
or
mov
cmp
xor
cli
pop
lea
lea
imul
mov
lds
and
dec
sbb
sarb
add
ret
push
jmp
mov
mov
add
inc
and
pop
shrb
loop
jno
loop
or
iret
pushf
mov
ja
orl
adc
and
xchg
cmpsb
jle
mov
out
mov
fcomps
bound
adcb
pop
jnp
mov
aam
sub
cltd
pop
enter
lods
ror
mov
inc
loop
incl
ja
jg
sbb
ss
jnp
fcoml
adc
fdivl
jecxz
push
inc
push
adc
pop
and
stc
push
lcall
mov
cmp
dec
pop
dec
or
jp
jmp
mov
insl
cmp
addr16
adcb
out
cmp
neg
sub
mov
into
and
aaa
sahf
jne
cmpsb
mov
xchg
xchg
push
and
out
in
loope
sbb
in
xchg
sub
sbb
gs
mov
sarl
sbbb
test
fwait
jnp
ja
mov
cmc
inc
lods
dec
xchg
xchg
push
push
les
cltd
mov
cmp
fldl
movsl
stc
fdivl
in
in
call
fsub
fdivr
cmpsb
movsb
out
mov
push
movsl
outsl
hlt
sub
cltd
push
sarl
mov
pushf
lahf
adc
inc
pop
call
sbb
sbb
push
push
stos
adc
cmpsl
js
mov
adc
ljmp
jmp
mov
inc
cld
mov
fildl
in
shll
loope
xor
decb
dec
pop
mov
fnstenv
xor
aaa
aaa
push
adc
std
outsb
push
dec
add
jbe
push
pop
mov
mov
add
jbe
test
push
mov
fisubs
inc
xchg
xchg
sub
or
pusha
xorb
jmp
xor
adcl
bound
jne
lds
mov
xlat
sahf
mov
addl
pop
shll
add
es
les
mov
cmpsb
xor
mov
ficompl
es
xchg
jno
fidivs
or
out
ljmp
aas
add
sti
pop
mov
lret
shl
adc
jno
xor
xor
pop
sub
xchg
pop
adc
and
jb
jns
ljmp
jnp
fnsave
pop
mov
xor
adc
inc
cmp
in
mov
lods
or
bound
or
icebp
dec
pop
fcomps
icebp
cmovb
popa
adc
jmp
fmulp
pop
sahf
inc
sahf
or
aas
ret
fcoml
push
push
sbb
jmp
enter
dec
es
cmp
jbe
and
fbld
xchg
sbb
inc
lcall
jle
sbb
add
nop
dec
and
dec
pop
dec
repnz
pusha
je
mov
jb
push
scas
push
cltd
jp
movsb
mov
loopne
outsb
mov
lods
pop
popa
mov
sub
inc
dec
sbb
adc
cmp
jbe
or
cld
pushf
sub
mov
pop
mov
clc
xor
lcall
pop
jp
sti
ficoml
in
mov
and
shlb
jp
mov
jmp
jnp
add
adc
jmp
inc
data16
leave
aas
dec
mov
mov
shll
mov
hlt
cmc
imull
mov
xor
sbb
rorl
std
inc
adcb
jae
lcall
out
enter
addr16
push
mov
push
adc
iret
in
lods
mov
divb
adc
jle
or
mov
xchg
stos
adcb
mov
test
adc
ja
outsl
mov
jo
push
rolb
mov
shrb
xor
pop
clc
mull
pop
dec
xor
out
aas
and
pop
pop
jo
mov
scas
cmp
popa
push
mov
loope
lds
ficoms
repz
pop
jmp
sub
jmp
sub
daa
leave
lret
inc
daa
fucomp
sub
mov
lods
out
adc
and
xor
add
call
in
in
ja
mov
pop
or
cmp
mov
xchg
push
and
iret
ret
jl
loope
in
push
inc
push
mov
dec
xor
scas
add
add
jmp
ds
sarb
in
dec
sub
sub
and
sub
jge
xchg
mov
out
jg
dec
add
add
rcrb
in
mov
and
nop
xchg
lret
xchg
mov
mov
loopne
inc
enter
pop
xorl
mov
sbb
mov
xor
cld
mov
pop
push
cs
pop
test
pop
pop
in
cwtl
in
sbb
notb
in
jp
push
push
stos
lds
lret
adc
push
inc
push
or
sbb
jnp
mov
insl
lcall
pop
add
dec
fs
mov
lret
mov
xor
sbb
jb
push
jle
dec
cli
mov
xchg
cmp
cmc
mov
andps
mov
lret
lds
push
lahf
lds
jno
jge
sub
or
cmpsb
inc
mov
cmp
mov
mov
adc
push
xor
add
jno
mov
add
out
in
push
imul
pop
xchg
test
test
enter
sarl
pop
insl
cld
aam
adc
and
pop
addr16
cmp
lahf
ja
mov
jp
int3
lods
repz
fimuls
jns
pop
jo
adc
shll
mov
sbb
or
mov
imul
fcoml
mov
stos
sbb
mov
inc
sbb
popa
cmp
add
dec
and
push
lcall
sbb
mov
inc
sbb
popa
cmp
add
dec
and
push
lcall
sbb
mov
inc
sbb
popa
cmp
add
dec
and
push
lcall
sbb
mov
inc
sbb
lret
cmp
jbe
cltd
mov
test
xchg
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
mov
lea
sahf
mov
and
cmp
popa
insl
jae
push
dec
push
pop
mov
lea
std
ror
movsl
xor
pop
sbb
inc
dec
push
pop
mov
lea
std
fxch
rcr
cmp
imul
push
cs
and
icebp
clc
add
push
cmpsl
into
lret
les
imul
pusha
add
decb
stc
shrl
js
lds
pop
sbb
std
sbb
jns
insl
popa
mov
dec
scas
or
lods
dec
mov
out
fwait
and
jne
dec
adc
cmp
popa
js
jge
enter
call
mov
push
dec
lock
cmpsl
shlb
stos
shlb
ret
out
std
sahf
insl
jno
lret
pop
icebp
fnstcw
push
gs
std
and
divl
repnz
cltd
jno,pt
mov
sub
popf
outsb
fstpl
in
repz
fidivrs
outsb
jl
inc
or
push
dec
push
lea
std
ror
fnstsw
sub
or
pop
dec
push
xor
test
in
xchg
mov
mov
push
pop
cmp
push
adc
xor
adc
enter
call
icebp
mov
movsb
cmpb
pop
push
js
add
jl
sbb
cmc
in
stc
clc
test
int
frstor
sub
adc
inc
dec
push
pop
mov
lea
std
ror
frstor
sub
adc
inc
dec
push
pop
mov
pusha
loop
lea
call
es
add
dec
jns
es
adc
fildl
outsl
pop
repnz
push
fs
inc
jbe
push
test
mov
pop
cmp
mov
data16
in
xchg
sbb
push
fsubl
fimuls
push
mov
sbb
mov
inc
aam
mov
mov
adc
sub
movsl
jle
popa
xor
mov
and
ja
adc
sbb
push
lods
jae
xchg
cmp
cltd
push
xor
dec
mov
insl
test
add
mov
cmp
ficomps
cltd
or
scas
inc
or
movsb
aaa
dec
fsts
or
add
imul
cmp
insb
arpl
out
std
inc
fld
mov
mov
test
dec
mov
dec
fcmove
mov
xlat
inc
shrb
inc
mov
test
xor
fxch
push
dec
or
sbb
outsl
out
insl
pop
jnp
push
mov
push
sbb
jg
sbb
mov
stc
lahf
jg
das
cmp
and
outsl
and
push
and
mov
mov
jbe
jge
xchg
in
push
and
cmp
movsl
adc
ret
notl
lds
pop
sbb
push
mov
inc
mov
xor
outsb
insb
push
dec
adc
pushf
pop
pushf
pop
leave
ficomps
jl
lock
pop
mov
mov
addl
pop
pop
pop
stos
lahf
loope
add
sbb
ja
fs
pop
mov
sbbl
movsl
adc
leave
cli
lret
test
xchg
pusha
in
sahf
sbbl
add
sub
jp
add
mov
mov
fnsave
inc
xchg
outsb
aad
cmc
push
test
test
xchg
jb
mov
scas
iret
adc
mov
and
add
pop
shlb
js
test
cmp
cmp
push
push
pop
sub
fsubrl
cmpsl
jle
lret
mov
ret
lock
rol
cmpsb
jle
add
inc
sub
mov
popf
enter
ljmp
ret
mov
ds
cmp
pushf
xor
mov
and
dec
leave
mov
and
ljmp
inc
and
mov
fwait
aam
icebp
dec
inc
notb
iret
out
cmp
addb
mov
in
jnp
cmp
incb
lods
push
scas
in
mov
and
cwtl
pusha
loopne
pushf
sbb
inc
cmp
sub
jbe
mov
sub
jle
es
fwait
adc
or
les
test
push
adc
fdivrs
rorb
mov
pusha
jno
or
sbb
shr
add
inc
lret
ror
aad
sahf
mov
push
je
xor
cmc
mov
ss
or
pushf
add
fwait
leave
xor
call
jecxz
aaa
xlat
sbb
rolb
push
aad
mov
cs
mov
out
cmp
sbb
adc
popf
pop
mov
cmpsb
and
hlt
mov
cmp
loop
out
sbb
xor
sti
xchg
push
sub
rolb
inc
imul
setne
mov
repnz
xchg
loop
jo
js
insb
sti
and
xor
cmpsb
jnp
test
fwait
and
xchg
sbb
fidivrs
iret
mov
in
mov
stos
incb
xchg
fucom
dec
or
ljmp
cmpsb
adc
ficoml
mov
mov
aad
dec
in
jae
add
in
jp
fnsave
insb
jne
sbbb
pop
lret
dec
pop
loope
add
cli
in
inc
mov
push
repz
xor
mov
push
and
pushf
ret
push
and
js
adc
or
jecxz
imul
sub
aam
dec
mov
ret
cwtl
xchg
fisubrs
int
cltd
mov
fidivrs
xchg
push
cmp
orl
aaa
and
mov
fwait
lds
sub
mov
test
sbb
xlat
dec
imul
mov
stos
adc
mov
push
sbb
pushf
movsb
mov
sub
lods
xor
testb
outsb
adc
sub
insb
jmp
jge
push
fidivrl
int3
test
fwait
aad
mov
and
pop
ret
lods
clc
fwait
mov
xor
mov
jle
scas
jle
sahf
mov
test
lock
xchg
mov
imul
fnstcw
fnstcw
aaa
mov
mov
test
fidivl
scas
aaa
xor
mov
aaa
test
push
in
je
std
daa
and
jmp
int
les
xor
push
xchg
dec
ljmp
mov
dec
ret
outsb
lcall
xor
addl
adc
fst
outsl
ficomps
jmp
lret
test
xchg
push
xchg
adc
jb
sub
daa
cs
xor
sbb
and
mov
outsl
lods
sti
aaa
push
mov
fdivrp
shrb
insb
in
pushf
arpl
cld
aam
into
cmpsl
mov
or
subl
aas
out
out
aas
mov
mov
mov
outsl
lods
xchg
int3
pop
call
pop
repnz
jns
sti
jl
popa
fs
cmp
jmp
dec
lret
repz
not
push
in
inc
jno
xor
mov
jp
cmp
lods
push
lret
int
fcompl
sbb
and
loopne
in
dec
scas
push
pop
xchg
xchg
mov
ja
mov
jecxz
popa
xchg
insl
inc
xchg
sti
sub
jno
fs
sbb
or
adc
dec
jl
insb
lret
xchg
lcall
pop
rol
outsl
insl
fcoms
inc
adc
lret
mov
in
jns
and
push
fildll
mov
loop
xchg
loopne
mov
push
out
loopne
mov
push
jl
aaa
inc
add
addb
dec
mov
mov
cmpsl
jno
cld
addr16
lods
imul
or
push
stos
outsb
test
mov
in
mov
mov
cmp
fiaddl
loop
jle
mov
popa
adc
or
cmc
cmp
xchg
repz
rol
out
xor
cltd
shl
clc
push
jo
or
lods
addr16
push
sbb
dec
push
xchg
bound
sbb
cmc
sbb
in
sbb
mov
rorl
dec
mov
cltd
cmc
pushf
lea
ret
insl
pop
cmp
cmp
fldl
xor
sbb
adc
inc
mov
fstps
scas
mov
psraw
mov
and
out
jo
cmpsl
mov
les
or
adc
fimull
mov
push
je
xor
lea
cmp
cmpsl
dec
mov
andl
repz
in
mov
es
xor
jl
les
cmp
das
out
std
lret
sub
in
inc
pusha
push
sub
lods
pop
dec
sahf
mov
pop
or
clc
mov
inc
push
shrl
push
add
icebp
test
adc
ja
cmpsb
cwtl
push
sub
inc
xchg
dec
outsl
lcall
int3
imul
jmp
iret
cmp
jge
jo
loop
and
or
add
ds
lock
push
into
movsb
cmpsl
push
jmp
inc
add
pop
arpl
std
gs
outsl
outsb
jge
mov
xchg
call
pusha
sbb
ss
adc
mov
pop
cmp
pop
sub
and
and
rcl
repz
int
lcall
cmp
out
inc
xchg
jb
repnz
pop
movsl
push
testb
adc
data16
and
aas
popl
fstl
mov
mov
push
push
or
jae
fistl
fs
pop
rcrb
mov
fmull
cmp
xchg
loop
les
dec
aad
adc
fimuls
nop
aam
lods
push
sti
aas
push
out
jnp
clc
ds
pop
adc
dec
test
inc
xor
ret
push
jp
minps
movsb
decl
movsb
sbb
mov
and
stc
popa
and
std
mov
jo
jge
mov
cld
cs
sub
ror
cmp
jno
cld
lods
xchg
add
lahf
push
test
ja
stos
push
adc
adc
add
jecxz
and
outsb
or
mov
or
data16
jl
push
ficoms
jae
scas
push
xchg
mov
aas
and
pop
jbe
cli
sbb
pop
pop
mov
lea
inc
fmulp
and
scas
je
xchg
xchg
jg
cld
outsb
ljmp
mov
out
ret
dec
popa
mov
mov
mov
aas
and
iret
sub
scas
mov
call
cld
and
aas
jecxz
xor
out
repz
adc
add
jp
inc
inc
loope
sbb
or
and
push
mov
jl
jb
mov
jb
repz
pushf
add
pop
fcom
into
popf
notb
pusha
adc
jbe
shl
adc
sub
in
inc
jno
pop
mov
xchg
fdiv
xchg
jp
aas
jmp
sbb
aaa
sub
popa
mov
aas
into
sub
cltd
jge
dec
fiadds
and
xor
and
push
pop
mov
fs
ja
jecxz
int3
pop
addb
sub
mov
xor
fbstp
mov
leave
lods
or
pop
cmpsl
data16
ja
dec
movsl
fs
repz
pusha
addl
arpl
cmp
push
mov
mov
into
lods
add
xchg
sbb
inc
outsb
sbbl
push
mov
es
mov
cmp
aaa
dec
icebp
push
add
adc
nop
push
mov
rorb
jle
inc
mov
mov
sub
fdivrs
pop
lds
and
sub
mov
push
sub
pop
repnz
xor
sub
ja
leave
enter
popf
rcrl
sbb
add
fcoml
pushf
mov
xchg
fstps
sbb
call
sbb
add
adc
push
pushf
xor
inc
push
stos
popa
fistl
xchg
ffree
lret
pop
or
sahf
aad
out
push
and
out
jno
inc
lcall
sub
xchg
nop
or
jnp
imul
lds
pusha
or
cmp
pop
in
fs
dec
orb
stos
loop
adcl
movb
push
mov
fnsave
mov
scas
adc
mov
jno
movsb
inc
push
dec
add
negb
dec
mov
inc
movsb
pop
push
subb
adc
push
repnz
test
out
fiaddl
push
pushf
fdivrp
std
or
adc
notl
dec
xchg
add
and
mov
jl
decl
cmp
cmc
icebp
or
mov
mov
push
dec
push
mov
enter
test
scas
ret
push
xor
pop
jb
nop
nop
test
dec
jno
adc
je
push
jp
outsb
mov
jge
or
out
es
addr16
pop
aad
jbe
lods
xlat
dec
mov
xchg
add
jo
mov
jno
jp
push
gs
and
rcrb
cwtl
mov
rep
inc
aad
add
dec
sbb
sti
dec
add
or
addr16
insl
sbb
mov
daa
xor
lods
inc
std
mov
loop
or
es
stos
mov
andl
lret
scas
sahf
hlt
bound
dec
jnp
icebp
mov
iret
pop
aad
inc
cmp
scas
and
addb
shl
inc
in
push
lidtl
lods
xchg
cbtw
sbb
les
fisttpl
std
or
sub
sub
mov
push
shl
test
out
xchg
mov
gs
mov
mov
lea
pusha
in
sub
lret
lret
push
adc
sub
dec
cmp
mov
cmp
shrb
pop
xor
xor
out
pop
pushf
roll
loope
cltd
mov
pop
outsb
lods
xchg
cmp
push
inc
stos
test
int3
test
iret
mov
and
xchg
ss
test
xor
pop
xchg
mov
or
xchg
dec
call
les
sti
inc
xor
push
pmulhw
jg
sbb
mov
xchg
pop
fidivs
inc
sub
sbb
ss
jno
jb
stos
ljmp
lock
loop
xchg
movsl
push
mov
sub
mov
pop
mov
and
or
push
xchg
in
jns
lcall
and
push
xchg
and
fwait
in
cld
or
inc
roll
js
jmp
in
add
and
rcll
lret
scas
mov
daa
fs
dec
lea
in
scas
int3
jnp
popa
xchg
scas
loope
ret
sbbb
pop
pop
add
je
les
adc
jb
into
gs
add
sbb
out
rol
imul
sbb
mov
fstpl
and
xor
test
or
adcl
adc
adc
jmp
loopne
test
outsl
lahf
inc
xchg
jg
pop
ja
outsb
jl
add
xchg
mov
pop
push
pop
stos
mov
mov
pop
cmp
mov
test
jo
std
loop
pop
and
or
and
les
loop
adc
das
adc
inc
ret
sub
es
lods
sbb
cmp
pop
push
xor
sub
int
test
insb
xchg
aaa
xchg
movaps
pop
push
cmp
cmc
pop
sub
gs
ror
insb
pop
jae
jl
scas
inc
rcl
jle
cmp
mulb
mov
xchg
add
mov
or
lea
and
fmul
sub
or
lods
add
sbb
pop
daa
fldl
sub
inc
enter
pop
fwait
push
mov
pop
out
clc
xorl
add
add
xchg
push
lcall
es
mov
shrb
stos
outsb
daa
push
jne
push
pop
dec
clc
dec
adc
fimuls
sub
adc
dec
ljmp
add
dec
popa
adc
cmp
cltd
dec
xor
cmpsb
xor
pop
clc
sbb
push
movb
inc
xchg
aas
imul
hlt
pop
mov
dec
mov
pop
mov
pop
jne
inc
insb
bound
cmp
lds
xchg
insl
insl
mov
lcall
sbb
mov
ja
pop
or
push
and
inc
ja
mov
or
loope
mov
sbb
out
jns
aas
pop
and
icebp
pop
push
mov
daa
inc
lret
cmp
int
nop
bound
out
pop
mov
out
mov
pop
and
mov
mov
cltd
int
clc
cmc
repnz
jae
adc
lea
add
mov
push
loop
lds
jnp
push
fiaddl
dec
or
mov
test
js
adc
std
movsl
xchg
aad
xchg
inc
cmp
popa
or
inc
icebp
cmp
rep
and
pop
cmp
das
inc
push
sbb
xchg
shlb
jecxz
mov
das
aaa
adc
pop
loopew
daa
dec
js
mov
es
mov
add
enter
mov
pop
sbb
push
cmp
std
jo
fisttpll
adc
or
sub
repnz
cmpsb
hlt
mov
icebp
cmp
pop
mov
dec
pop
xor
jnp
add
cmpsl
xor
pop
sub
fwait
ds
pop
mov
insb
pop
pop
lret
push
stos
cmpsb
out
adc
push
push
mov
cld
or
sbb
adcl
lret
mov
cmp
xchg
test
xchg
adc
mov
add
stc
out
adc
and
sbb
jbe
jp
les
adc
lret
aad
mov
mov
enter
cmc
sbb
cltd
push
sarb
mov
and
lret
dec
std
out
mov
dec
cltd
cs
mov
loop
mov
sbb
pop
jbe
lds
xor
andb
fcomps
xor
xchg
sub
hlt
sub
jmp
or
add
rorl
out
inc
rcrl
add
sahf
pop
xlat
js
adc
jmp
jnp
stc
aam
clc
fmuls
inc
adc
stc
out
add
lret
lea
add
cmp
in
push
sarl
lret
out
bound
rcrl
pushf
dec
inc
popa
fstpl
mov
mov
aaa
sub
cltd
shlb
jns
xchg
pop
mov
das
iret
cli
mov
mov
fldcw
push
mov
xchg
ljmp
adc
cmp
ds
sbb
fwait
pop
lahf
xchg
inc
lea
jl
andl
cmpsb
leave
shlb
push
in
jecxz
bound
outsl
fcmovnbe
outsl
inc
xchg
addr16
push
fs
outsb
jl
add
xor
loope
or
lock
dec
scas
adcl
fwait
mov
ret
mov
and
xchg
pop
outsb
xchg
ret
aaa
mov
and
xchg
inc
mov
pop
pop
inc
push
push
jl
jbe
enter
test
push
test
int
nop
scas
adc
gs
jg
mov
test
xor
xor
shlb
pushf
lods
add
add
in
xor
aam
and
jo
lret
sbb
xor
sub
insl
enter
and
mov
fstpl
iret
cmp
dec
insl
push
dec
or
iret
add
ret
lret
mov
lods
inc
into
int
xor
lret
sbb
or
adc
xchg
or
adc
add
out
mov
fidivl
inc
out
dec
mov
dec
decb
call
pop
xchg
add
ret
dec
inc
xor
xor
adc
ficoml
adc
aad
or
les
rcrb
or
into
jg
or
inc
inc
repz
add
jmp
dec
mov
das
mov
and
repnz
in
mov
push
add
out
pop
sub
xchg
and
cwtl
aad
insb
cmp
dec
imul
cld
xor
dec
push
push
lahf
sbb
jmp
subb
mov
mov
xor
xor
fld
insb
cmp
jne
mov
sbbb
out
aaa
subb
adc
mov
jo
mov
pop
cmp
dec
mov
and
orb
scas
test
fisubrl
sub
lock
inc
sub
int3
dec
pop
adc
dec
inc
mov
dec
jg
mov
sub
adc
cli
jge
mov
inc
and
and
mov
fwait
adc
xchg
add
sahf
jle
push
stc
inc
fucomi
mov
mov
insb
pop
lahf
ficoml
bound
push
jo
insl
or
mov
mov
mov
pop
xchg
dec
lret
stos
out
sbb
adc
mov
inc
push
sub
fidivrl
sbb
jns
push
inc
lret
popf
orl
lods
jmp
push
add
in
mov
mov
jo
pop
cld
aas
and
sbb
cmp
into
sbb
dec
bnd
mul
adc
mov
sbb
xor
cmc
fs
aaa
jp
test
outsb
fadds
cmp
aad
xlat
mov
outsb
push
popa
imul
jnp
push
divb
outsl
das
mov
inc
shrl
insb
inc
es
aas
or
mov
shrl
dec
idivb
sbb
inc
out
mov
dec
movsb
das
sahf
jmp
hlt
push
xor
pop
mov
rcll
imul
or
icebp
in
mov
xor
in
cmpsb
push
add
out
mov
lret
jle
clc
or
jg
and
lods
sarl
frstor
shll
cmp
cs
rclb
mov
mov
outsb
clc
movsb
jp
and
aas
cld
mov
xchg
ds
imul
mov
fbld
xchg
cmp
je
in
in
jecxz
loop
adc
shlb
inc
gs
jbe
or
add
pop
stos
test
iret
out
adc
push
fdivrl
sahf
adcl
arpl
aad
rcll
insl
je
jg
frstor
inc
lret
dec
dec
popf
cs
fdivrl
dec
xor
dec
sbb
pop
dec
negb
mov
sbb
jo
arpl
lods
into
jo
xor
push
bound
scas
fs
into
stos
fsubrs
add
push
xorl
jno
int
mov
insb
mov
xlat
sub
xchg
jg
inc
push
filds
cli
sub
cmp
imul
push
mov
dec
adc
aam
xor
pop
scas
jne
sbb
mov
repnz
std
xor
push
mov
cmp
shrb
stc
push
lret
xchg
mov
fisubl
sbb
popf
cs
lahf
jo
mov
icebp
std
ror
frstor
sub
adc
inc
dec
push
pop
mov
lea
std
ror
frstor
sub
adc
inc
dec
push
pop
mov
lea
std
ror
frstor
sub
adc
inc
dec
push
pop
mov
lea
std
inc
int
fstp
sub
adc
in
cmpb
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
and
repz
ret
roll
ljmp
outsb
push
jle
or
push
mov
jecxz
repz
ret
rorl
cmpl
inc
inc
jle
push
push
jp
add
adc
pop
ljmp
stos
sbbb
push
or
pop
es
inc
inc
pop
jno
jl
scas
incb
add
pusha
mov
ds
inc
cmc
push
aad
pop
mov
ret
jns
lret
popa
inc
test
lret
lea
inc
insl
scas
repz
sahf
jg
cwtl
out
lock
push
sub
cwtl
fidivl
mov
lods
icebp
xchg
push
mov
stos
orb
mov
lea
sbb
cmp
roll
and
cmp
cmpsl
jno
sbb
sti
mov
jge
std
and
and
dec
xchg
dec
sbb
xchg
cmp
add
pushw
sub
cmpsb
sbb
jle
mov
push
shrl
cs
out
ficoml
mov
addl
mov
pop
pusha
dec
outsb
cmp
sub
sbb
mov
cmpsb
nop
mov
mov
fcomip
das
or
jae
inc
pop
ss
jo
pop
insb
jns
into
mov
test
mov
int
jbe
pop
push
or
adc
push
jnp
pop
fs
mov
cmpsl
mov
mov
cmpl
outsb
inc
jle
push
and
xor
add
adc
jecxz
repz
ret
rorl
cmpl
outsb
inc
jle
push
and
xor
add
adc
jecxz
loopne
inc
mov
jo
and
in
dec
pop
pop
cmp
jg
push
fdiv
lret
int
bound
fistpll
jns
xor
push
in
sub
test
sahf
mov
lcall
dec
pop
add
dec
scas
movsl
add
and
dec
and
mov
nop
addr16
pop
lock
and
addr16
test
sbb
popf
dec
out
ss
enter
cmp
aaa
pop
imul
push
inc
lret
fucom
arpl
push
rorl
pop
rorb
push
outsb
pop
lea
shr
pop
loop
je
add
fucom
mov
icebp
cld
add
pop
push
pop
mov
cmc
testb
xchg
sub
xchg
mov
jbe,pn
movsl
push
cmc
sar
lea
mov
in
clc
mov
or
sub
cmp
fldz
and
rorb
xchg
xchg
mov
ficompl
mov
lahf
xchg
jno
cmp
jp
mov
iret
mov
ret
je
insl
adc
shrl
and
xor
dec
outsb
push
imul
mov
pop
inc
mov
sbb
sahf
cltd
lods
fists
inc
divps
icebp
mov
add
enter
mov
fcmovne
scas
loop
jo
and
iret
fstpl
mulb
inc
insl
xor
cltd
into
loope
outsl
popf
mov
mov
cmp
adc
xchg
sub
mov
jno
test
xchg
push
add
data16
scas
xchg
dec
lahf
push
pushf
xchg
popa
lret
int3
sti
mov
adc
sbb
jl
in
inc
sbb
mov
adc
cmp
jl
cli
icebp
cli
jmp
pop
aad
lock
dec
mov
jbe
inc
jb
cmp
test
sub
ficompl
and
ficoms
stc
inc
fldl2e
in
xor
jl
out
int
and
add
mov
fs
pop
shl
xchg
pushf
push
into
dec
mov
sahf
jge
stc
sti
push
adc
fs
dec
cwtl
mov
aad
jmp
out
mov
adc
add
imul
sbb
mov
stos
mov
gs
out
jo
jecxz
adc
es
arpl
test
xchg
push
and
mov
dec
lret
ret
xor
sub
jg
ds
add
jle
ljmp
enter
cld
mov
rcrb
cld
pop
ljmp
leave
push
adc
and
mov
repnz
fists
mov
sti
lcall
addr16
pop
push
pop
mov
mov
sub
xchg
idivl
add
mov
fadds
mov
jnp
mov
xor
sarb
divb
sub
call
mov
jg
cmp
pop
xor
push
mov
or
fiaddl
punpcklbw
pop
gs
push
and
or
inc
and
and
sbb
inc
xor
sbb
repz
lock
daa
lea
ret
shll
add
pop
ret
xchg
sub
mov
inc
cmp
aad
mov
mov
pop
xor
push
jp
in
int
imul
pusha
sbb
daa
mov
adc
xchg
push
punpcklbw
inc
mov
ljmp
dec
int
rclb
fwait
cmp
sahf
in
push
jmp
sub
stc
into
mov
imul
notb
out
repnz
fimull
sbb
sbb
mov
dec
bound
mov
inc
add
sub
add
adc
dec
xor
out
outsb
imul
loop
cs
sbb
les
aaa
imul
test
adc
pusha
leave
inc
jge
arpl
mov
push
cld
aas
mov
adc
jle
aaa
and
sbb
jo
pop
test
jae
pop
jl
inc
sub
lods
ret
mov
rcrl
test
mov
mov
lea
int3
shlb
mov
sarb
push
mov
sahf
sbb
rolb
push
adc
inc
xchg
cld
inc
aas
clc
and
jno
je
add
jae
push
ficompl
mov
add
fildl
es
fsubl
mov
sbb
pop
ror
bound
pop
mov
adc
push
push
sbb
sbb
les
adc
and
movsb
lret
iret
sub
push
insl
out
inc
idiv
aaa
mov
pop
pop
jg
jle
loopne
scas
cld
loop
iret
test
fcoms
bound
cld
cmp
add
pop
xor
ficoml
call
pop
cmp
jne
rcll
lret
push
popf
imul
cmp
push
or
sarb
loope
enter
push
ljmp
xchg
mov
pop
ja
dec
ret
out
adc
mov
mov
mov
mov
push
mov
xchg
or
push
hlt
jno
int
sbb
fldl
jno
shlb
pop
rclb
inc
push
das
adc
mov
or
repnz
sbb
stos
push
aaa
scas
sbb
pop
int3
seto
not
aad
push
push
inc
xchg
and
nop
movsl
add
int
dec
lahf
addr16
push
inc
loop
xor
scas
icebp
loopne
movsl
or
cmp
sar
js
ret
cmp
jge
cmp
xor
mov
jno
pop
cmp
sbb
jb
cmpsl
frstor
mov
sbb
imul
mov
mov
push
sub
push
leave
xor
mov
mov
dec
mov
out
call
sub
jno
add
sub
adc
pop
insl
mov
out
sub
dec
and
ficoms
cld
sahf
push
iret
das
lahf
add
sub
icebp
daa
sbb
mov
mov
clc
es
fndisi(8087
jl
pop
lods
outsl
or
mov
xchg
sbb
je
test
ret
push
pop
mov
xchg
and
out
mov
fnsave
out
rorl
popa
and
gs
inc
jmp
cmp
ss
pop
xchg
push
setg
imul
test
jp
jmp
mov
mov
dec
ja
mov
or
sub
aas
fwait
outsb
inc
pop
rcrl
or
xchg
dec
mov
pop
jns
push
xchg
movsl
aas
cmc
sbb
pop
pop
xchg
icebp
nop
or
inc
sbb
inc
jnp
imul
dec
iret
pushf
ljmp
aaa
fiadds
push
shl
cmpsb
xorb
push
mov
cli
arpl
pop
icebp
in
jns
sub
sbb
pusha
icebp
ja
fwait
sbb
lea
dec
inc
popa
iret
mov
aad
popf
cltd
sub
negl
jb
cmp
testl
add
and
lds
push
lret
mov
pushl
cmp
cmpsb
hlt
fsubr
push
inc
rorb
jmp
lret
inc
imul
movsb
dec
cltd
add
jno
jmp
jne
sbb
mov
xchg
or
pop
jge
mov
outsb
pop
or
xor
pop
mov
mov
inc
sub
aam
rolb
adc
push
shlb
sbb
mov
adc
pop
push
cmp
jbe
xchg
push
and
dec
cmp
push
mov
iret
aaa
adcl
scas
push
sub
ds
outsl
push
mov
xorl
mov
test
ljmp
and
idivb
lcall
clc
mov
and
aam
jno
jle
fsubrl
cmc
roll
cmp
pop
in
mov
outsb
lcall
pop
xor
xchg
xchg
sbb
call
sub
pop
pop
mov
lret
push
mov
xor
aam
scas
and
xor
push
int
add
add
mov
hlt
xchg
pop
sbb
sbb
arpl
inc
push
jge
mov
jns
cmp
xor
pop
dec
cmp
mov
cld
clc
ss
inc
repnz
mov
pop
sbb
sbb
ret
inc
xchg
cmp
sbb
cli
sub
sub
mov
out
xchg
and
inc
cmc
fcmovnb
pusha
scas
mov
mov
and
stos
xchg
add
lcall
popf
mov
jge
ds
lret
sbb
repz
jecxz
dec
sbb
push
lods
scas
call
xchg
std
mov
js
arpl
fs
ljmp
iret
std
int3
cmpb
jg
test
addr16
call
das
iret
xchg
sub
fadds
subl
clc
jle
mov
sbb
push
jo
mov
push
cmp
xchg
je
in
js
icebp
mov
mov
outsl
mov
out
inc
jl
lods
shrl
outsb
cmp
in
arpl
lcall
hlt
mov
xlat
imul
mov
movsl
cltd
sub
pop
or
cmpl
inc
dec
test
sbb
loopne
push
rorb
mov
and
mulb
xor
mov
cld
sub
imul
insl
clc
add
mov
cmc
loop
bound
mov
into
xchg
dec
scas
enter
aam
dec
jno
addr16
nop
into
sarb
cwtl
push
pop
or
pushf
cmp
push
push
lds
cwtl
das
test
push
popl
jecxz
or
inc
mov
xlat
iret
xchg
subl
ja
jno
mul
andb
enter
pop
out
lock
aaa
sub
xor
cmpb
jb
push
or
imulb
mov
inc
jecxz
jno
dec
jecxz
inc
lods
or
sbb
adcb
pop
shlb
pop
add
sahf
out
mov
daa
or
xor
mov
mov
adc
movsl
lret
sbb
push
mov
mov
ss
cmpsb
test
loopne
dec
les
push
cmp
imul
cmp
or
and
insl
mov
add
adc
scas
add
sbb
mov
push
addr16
pop
xlat
sbb
test
rcr
pop
adc
jne
out
cmc
xchg
xor
shll
out
std
lock
les
es
jnp
xor
out
push
lods
pop
divl
cmc
fsubr
jnp
push
dec
test
add
std
pop
push
loop
inc
call
xor
js
xor
xchg
lahf
stc
dec
scas
xchg
xor
sub
arpl
sbbl
or
push
aad
adc
xor
inc
out
push
adc
push
pop
ds
push
test
mov
sti
ds
sbb
jp
jp
mov
es
fisubs
xor
mov
sbb
enter
cwtl
into
dec
push
movl
cmp
adc
jbe
cmp
mov
add
out
inc
lock
outsb
lcall
dec
mov
xor
jno
xlat
frstor
mov
inc
pop
int3
out
stc
xor
test
popa
in
fwait
push
adc
stos
iret
xchg
xchg
negb
add
mov
mov
adc
mov
jns
leave
into
pop
jmp
mov
test
std
jo
xor
push
insl
xchg
xlat
out
xchg
add
push
xorl
mov
into
aam
scas
pop
xorb
call
jmp
or
in
ds
outsl
lds
add
cmc
jmp
or
loop
loopne
fcmovnb
and
out
andb
stos
aam
shrl
loopne
stos
push
xor
inc
pop
fsts
mov
and
and
dec
and
push
cmp
jb
xor
push
jge
jne
sub
jns
neg
call
push
mov
mov
push
mov
dec
pop
and
cmc
lods
sbb
test
fcompl
add
ds
clc
mov
out
inc
xchg
pusha
mov
inc
inc
loope
shlb
mov
sbb
test
fabs
xchg
push
ja
loope
fidivrs
jecxz
pop
cmp
out
testb
lock
cmp
pusha
adc
cs
xchg
inc
cli
popa
mov
sub
xor
sub
jp
ds
les
cmp
and
xlat
push
or
jno
inc
xchg
xor
and
loop
js
and
mov
ja
pop
jnp
sub
insb
outsl
jecxz
scas
inc
cmp
mov
sahf
imul
push
mov
adc
lahf
inc
in
cltd
jo
inc
pop
or
jae
cli
or
incb
call
data16
adc
lret
xor
sub
mov
test
movb
fwait
mov
push
push
mov
imul
jb
push
icebp
imul
mov
lret
loopne
mov
ja
dec
shll
cmpb
lds
das
test
rcrb
jo
gs
loop
xchg
sbb
setae
push
je
sbb
jle
sub
xor
mov
lods
jae
pop
loop
push
pushf
pop
mov
mov
xor
lret
mov
mov
pop
adc
scas
adcb
cmp
ljmp
push
mov
ds
dec
adc
rclb
push
xchg
mov
das
popf
inc
data16
jp
inc
mov
add
fsubl
xor
xchg
dec
pop
xchg
adc
repnz
cld
sbb
push
push
jmp
pop
fisttpl
mov
repz
xchg
sub
mov
insb
fcompl
mov
sbb
dec
pop
lods
mov
xor
and
pop
mov
mov
fbld
xchg
xor
loope
scas
xor
nop
outsl
adc
subl
or
xchg
aas
mov
ja
push
outsb
mov
lret
jne
in
sbb
gs
cmp
fstpl
or
adc
xchg
scas
xor
xchg
xor
stos
ret
imul
les
addr16
push
repnz
jae
orb
cmp
ret
addr16
xchg
mov
in
data16
in
and
scas
mov
pop
test
fadds
mov
icebp
mov
or
xchg
jmp
jmp
pop
dec
lock
fnstcw
xchg
in
cwtl
pop
cltd
mov
cwtl
xchg
sub
jnp
jbe
lods
mov
push
outsl
xor
jne
sbb
cmp
insb
push
out
mov
cli
mov
pop
push
pop
mov
mov
cmp
sub
ja
mov
push
pop
int
loop
mov
movsl
sbb
cmp
mov
popa
fsts
xor
xchg
int3
cmp
pop
mov
je
dec
frstor
in
cwtl
mul
movsl
mov
shlb
icebp
lret
std
push
xchg
js
inc
out
pop
jns
xor
outsb
pop
sbb
out
cli
enter
mov
push
mov
loope
jae
jbe
adc
and
lods
imul
imul
les
popa
sahf
bound
mov
mov
cld
mov
and
aas
xchg
test
je
lds
lock
xchg
sub
dec
adc
outsb
lea
les
mov
pop
addr16
rolb
push
sub
xor
add
rorl
pop
out
xor
sahf
movsb
shl
das
inc
mov
jg
sarl
sub
pusha
add
jae
mov
xlat
mov
out
push
mov
leave
pop
out
add
cmpsb
cld
int
cmp
lea
arpl
ja
pusha
sub
lds
jge
and
sbb
inc
in
shl
repnz
fbld
fmulp
fldcw
push
std
dec
sub
ret
loopne,pt
xor
xor
stc
sbb
outsl
xor
xor
inc
fsubs
mov
es
imul
adc
jno
inc
xchg
adc
pop
sub
pop
inc
cmpsl
dec
adc
rcrl
outsb
into
mul
inc
mov
and
test
roll
test
loop
or
xchg
or
dec
aas
and
fadds
cmp
dec
out
and
mov
xchg
fidivs
sahf
ss
cmp
push
lock
or
imul
imul
adc
lea
jl
rcrb
loopne
sbb
ret
rolb
push
int3
push
into
addr16
es
out
add
lock
fdivr
vfnmsub132ps
xor
mov
repz
dec
adc
push
sti
mov
adc
arpl
or
into
xor
sbb
es
sbb
out
es
jmp
jo
xor
pop
imul
adc
mov
ljmp
pop
adc
inc
cmp
pop
fnstcw
fidivrl
mov
cmp
sub
sbb
jbe
hlt
lock
cmp
mov
lock
mov
mov
dec
mov
add
sbb
adc
in
push
das
or
repnz
outsl
jnp
pushl
sub
iret
adcb
test
jl
pop
jl
rcl
cmpsb
cli
sti
ret
jg
dec
dec
jp
xor
stc
adc
adc
ret
sub
aad
pop
inc
cmp
call
pop
mov
mov
sbb
imul
xchg
scas
roll
stos
out
jle
jmp
pop
xchg
sbb
add
fistps
adc
pop
add
iret
and
jns
aaa
xor
aas
cmc
pop
mov
pop
cmpsb
clc
xchg
inc
push
xor
popf
aaa
dec
push
out
and
pop
pop
sbb
xchg
mov
adc
fisubrs
repz
pop
xor
ljmp
add
xchg
inc
sub
out
sub
shll
mov
pop
push
inc
flds
push
push
xchg
push
shll
mov
movsl
mov
jl
iret
mov
and
sti
ret
or
movl
sub
jae
push
inc
iret
jnp
inc
cmp
pop
inc
push
dec
jns
movsl
lcall
mov
sub
cmp
fs
push
adc
out
ret
loope
lea
out
xor
xor
imul
inc
xor
mov
fstpt
inc
jns
sar
mov
ficomps
mov
xchg
pop
dec
mulb
jne
outsb
and
aaa
mov
jmp
pop
xchg
add
out
or
in
lcall
cltd
jp
out
mov
xor
int3
push
mov
notb
mov
sub
push
insb
jmp
movsb
sub
xchg
sub
mov
iret
ret
push
lea
cmc
inc
sarb
xchg
xor
mov
push
pop
fadd
xor
xchg
insb
insl
fistpl
stos
mov
rol
inc
pop
cmc
mov
mov
bnd
fsub
sbbb
pop
jnp
xchg
mov
push
push
add
sub
ret
jge
icebp
cli
fisubl
mov
jb
repz
mov
icebp
lcall
jmp
dec
mov
mov
pop
andl
sbb
xor
jo
jp
inc
sbb
adc
int
mov
mov
ja
mov
sub
mov
mov
js
xor
loop
jne
inc
and
repz
jg
ss
aad
iret
dec
roll
sbb
pop
test
in
repz
imul
xor
daa
mov
ja
sbb
lahf
fidivs
cmp
push
or
add
sahf
icebp
ss
xchg
scas
stos
mov
cs
les
dec
and
hlt
pop
scas
mov
mov
movsb
mov
sub
push
inc
mov
es
inc
shrb
scas
cmp
mov
inc
push
push
and
mov
mov
out
outsl
jno
icebp
daa
sbb
mov
adc
jg
xor
cmp
push
lahf
push
pushf
fcoms
push
sub
dec
jl
and
les
enter
lds
jns
adc
enter
mov
sbb
call
and
mov
dec
adc
sbb
and
ss
adc
test
rorl
popf
push
mov
mov
ret
sub
mov
aad
sbb
icebp
xchg
adc
pop
cli
jp
aad
cld
xor
xchg
pop
mov
mov
dec
ret
and
clc
mov
jge
stc
sub
push
and
in
cmp
cmp
test
sbb
out
in
in
sbb
frstor
xor
pop
add
jecxz
stos
cmp
cmp
push
ja
mov
xor
fidivrl
arpl
out
insl
mov
into
push
out
mov
ror
enter
pop
or
cmp
les
cs
mov
stos
icebp
jle
dec
in
ficoms
mov
push
adc
imul
repz
loop
mov
mov
jae
inc
jle
push
and
xor
add
adc
jecxz
repz
ret
rorl
cmpl
outsb
inc
jle
push
and
xor
add
adc
jecxz
repz
rorl
cmpl
addr16
jp
push
and
xor
pop
push
pop
out
mull
rorl
cmpl
dec
arpl
and
stos
xchg
dec
sarl
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
