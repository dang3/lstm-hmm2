jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
jmp
cmpb
insl
sub
int
fs
inc
and
add
pop
add
push
add
add
or
popf
add
add
add
add
add
add
pop
add
or
and
mov
add
mov
add
push
add
mov
add
add
add
add
add
add
add
add
add
add
mov
add
movl
pop
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
mov
lock
add
add
add
sbb
imul
add
add
add
add
add
add
add
add
add
push
add
add
mov
mov
add
add
mov
add
add
add
add
addl
mov
add
add
lldt
add
mov
add
add
add
mov
add
add
add
mov
add
sbb
insl
add
add
add
add
add
add
arpl
push
add
xor
push
add
sub
add
xchg
add
lret
add
add
add
add
add
inc
add
add
mov
or
add
xchg
sub
add
add
mov
add
jo
or
inc
add
jae
roll
dec
add
add
add
add
add
add
add
push
pop
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
push
add
mov
add
add
add
add
xor
add
add
add
cmp
or
or
jecxz
addl
pop
add
add
add
add
add
lock
add
mov
add
add
add
add
add
add
add
lock
add
mov
add
test
add
add
and
xchg
add
or
add
add
mov
push
or
add
add
test
add
push
add
add
add
inc
add
add
push
add
add
add
or
or
pop
add
add
movsb
add
add
add
add
add
add
add
add
add
add
push
add
or
inc
add
add
add
push
add
add
mov
add
addl
mov
add
jecxz
adc
add
add
add
add
mov
add
add
add
add
add
add
add
add
gs
push
jmp
add
add
add
sbb
add
add
add
verr
mov
add
add
add
add
jae
nop
add
add
arpl
dec
add
add
add
add
es
dec
xchg
jne
ds
outsb
jb
lcall
in
xor
shlb
xor
lret
bound
in
mov
ret
inc
in
mov
sub
xchg
pop
inc
bound
push
or
push
test
push
filds
pop
mov
dec
std
jno
or
lret
rcrb
icebp
test
sbb
pop
mov
dec
mov
jno
jle
push
idivl
jno
push
mov
rcr
pop
stos
mov
fbstp
and
movl
out
and
mul
jecxz
mov
aam
mov
gs
cs
icebp
mov
xchg
fwait
inc
ret
mov
lcall
scas
xchg
sbb
test
icebp
fdiv
inc
lods
sub
subb
jae
pusha
adc
dec
jno
cmpsb
cmpsb
inc
lods
dec
pusha
xchg
mov
mov
mov
jp
ficompl
xchg
push
mov
add
pop
push
mov
inc
test
sbb
xor
jns
outsl
jo
test
add
push
aam
xorb
jns
ret
mov
push
inc
stos
popf
dec
jno
mov
int
push
inc
dec
outsb
add
in
outsb
mov
sub
sbb
or
jae
enter
lahf
cwtl
mov
sbb
pop
fcomp
lock
jg
lret
add
xchg
jecxz
or
jp
sti
rcl
add
stos
jae
sti
push
sbb
bound
sbb
or
push
loope
pop
je
fbstp
mov
add
imul
and
xchg
xlat
daa
jbe
sbb
mov
xorb
push
pop
mov
lcall
jno
mov
adc
mov
pop
xchg
loope
f2xm1
add
je
inc
jmp
inc
scas
and
hlt
jp
push
pop
jae
xlat
adc
sbbb
daa
pop
xlat
push
loop
or
int3
adc
jnp
pop
xchg
mov
pop
js
shrl
arpl
push
enter
or
sub
dec
jle
js
lea
cwtl
clc
jp
xchg
jle
dec
leave
int
scas
and
lret
push
stos
lock
das
dec
stc
xchg
es
push
xor
movsb
lret
aas
push
out
jnp
add
mov
mov
pusha
jmp
mov
mov
push
cmp
aas
lds
mov
push
jno
cltd
bound
adc
mov
sbb
xchg
stos
ficomps
enter
stos
call
flds
rcrb
sahf
xchg
pop
pushf
fidivrs
pop
adc
outsl
mov
mov
mov
stos
imulb
add
ds
mov
mov
icebp
jmp
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
inc
and
bound
jb
mov
jge
push
sub
sarb
and
repnz
mov
inc
and
bound
jb
add
jae
inc
xor
shlb
cld
xchg
addb
rcrl
dec
xor
push
sbb
jae
inc
xor
mov
mov
andb
movsb
sub
inc
bound
jbe
fsts
pushf
jecxz
cmc
push
inc
and
dec
imul
fmuls
cmp
pop
ret
and
sahf
sub
cmpsl
lret
cmpsl
flds
sti
dec
push
jl
xchg
repz
xor
aam
cs
mov
xchg
mov
jg
sbbb
mov
scas
inc
es
push
push
inc
std
bound
jae
dec
xor
xlat
inc
or
adc
mov
rcll
jecxz
int3
out
cld
xchg
push
std
call
ret
pop
adc
jecxz
add
pop
stos
mov
and
std
sub
clc
ror
cmp
cmp
mulb
mov
mov
dec
xor
jb
adc
inc
sub
mov
jmp
lcall
xchg
and
dec
pop
inc
push
push
jno
je
outsl
xor
ret
stos
xchg
rclb
mov
mov
mov
dec
xor
dec
add
and
and
jge
mov
loop
mov
addb
xchg
bound
pusha
push
data16
push
adc
inc
xor
mov
repnz
and
repz
and
bound
jb
add
jae
inc
xor
mov
repnz
and
repz
and
outsb
xchg
push
faddl
jg
cmpsl
imulb
test
inc
mov
xchg
push
dec
mov
mov
dec
lea
out
ss
mov
dec
jae
sub
lret
insl
negl
scas
xchg
xchg
cmp
pop
test
sbb
push
adc
rorb
add
adc
test
fyl2x
dec
jg
inc
adc
inc
mov
rcl
ss
nop
mov
push
adc
add
inc
pop
lds
xor
test
and
push
and
jecxz
pushf
lock
push
dec
inc
jns
jb
xchg
cmp
jns
add
mov
push
stc
sbb
push
or
cmp
xchg
cmpb
ds
std
mov
les
xor
mov
adc
sar
jg
out
sbb
mov
inc
inc
jb
adc
jb
or
test
aaa
sbb
mov
jg
lock
mov
outsl
add
inc
outsl
fiadds
cmp
push
in
push
sub
adc
xchg
xchg
cmpsl
sbb
ja
js
and
push
add
pusha
rolb
inc
stos
and
mov
orl
add
pxor
call
cmpb
test
inc
mov
movsl
lret
and
adc
xchg
push
lock
adc
stos
sub
shlb
fs
mov
xchg
xor
outsb
cld
push
outsl
xchg
pop
adc
add
rorl
mov
sar
inc
out
add
or
adc
add
jo
jmp
ficomps
lret
xchg
push
jp
leave
ret
mov
or
enter
insb
jge
sbb
rcll
stos
jb
sub
pop
loope
lret
jge
mov
scas
adc
movsl
inc
out
dec
ficomps
enter
dec
out
pop
les
aam
pop
aaa
les
lret
lock
add
and
add
gs
incl
jp
sbb
fdivs
and
sub
cmp
add
and
cmp
xchg
xchg
loopne
and
sbb
mov
incl
add
je
mov
jmp
adc
idiv
dec
cltd
adc
inc
test
cmpsl
scas
pusha
inc
bound
or
arpl
dec
push
pop
notl
aas
adc
sub
xchg
or
mov
dec
int
push
sub
repz
clc
and
inc
cmp
dec
sbb
movsl
jo
push
cmpsb
enter
mov
enter
in
sub
lock
xor
jo
scas
dec
jo
test
decl
loopne
pop
mov
push
dec
mov
push
adc
lea
je
aas
jp
inc
push
cmc
push
push
add
stos
stos
adc
xchg
mov
in
push
cmp
dec
test
lret
mov
mov
adc
repz
pop
sbb
js
in
outsb
insb
mov
loope
fwait
mov
add
test
or
inc
pop
or
mov
aas
mov
xchg
pop
test
enter
ja,pt
repz
xchg
sub
clc
xlat
iret
mov
lods
jb
data16
shl
stos
ds
into
repz
and
mov
push
pop
xor
adc
pop
aad
push
sub
xor
dec
mov
jns
jmp
cmpsl
and
adc
lods
lret
in
data16
mov
repnz
dec
ror
lret
push
pop
movsb
loope
sahf
and
xor
xor
xchg
mov
nop
ss
jnp
dec
gs
mov
daa
repz
loopne
cwtl
add
enter
out
cmp
pop
push
xchg
xor
push
cld
xor
stc
xor
pop
mov
push
xor
in
sub
cli
adc
jnp
bound
push
cmc
mov
sbb
mov
dec
mov
idivb
into
mov
pop
aaa
ficomps
test
fldt
sub
dec
or
das
sub
jecxz
jecxz
and
loope
sub
push
jecxz
and
out
cmp
or
and
popl
rol
inc
aad
es
sub
sbbb
repz
or
pop
das
les
add
lock
fstl
cmp
cmp
sbb
adc
cltd
leave
mov
sbb
mov
and
pushf
mov
xchg
das
dec
lock
or
lea
mov
adc
test
push
and
and
mov
into
mov
jbe
sbb
xor
and
adc
negb
mov
out
repnz
sti
das
in
mov
daa
sub
xor
adc
jne
xorl
pop
mov
ljmp
loope
mov
mov
loop
fldenv
punpckhwd
or
es
cwtl
out
mov
stos
std
or
movsl
pop
mov
jns
xor
xchg
je,pt
pusha
push
sahf
arpl
xlat
jle
jge
pop
out
mov
mov
mov
or
roll
inc
outsl
shrl
lds
jo
bound
xchg
movl
xor
cmp
mov
add
aad
inc
out
jns
testb
jbe
xchg
shl
cmpsb
ret
inc
push
sbbl
mov
push
rcl
lds
mov
fsubs
xor
leave
subb
das
mov
lea
cwtl
mov
mov
add
xchg
js
jnp
fisubrl
mov
pop
movsl
lret
and
sub
arpl
ljmp
push
push
iret
dec
ljmp
daa
roll
inc
and
mov
push
adc
call
cmp
mov
dec
mov
xchg
test
push
mov
mov
inc
xlat
pop
das
lahf
lcall
mov
add
ss
jmp
mov
sbb
in
add
cmp
xor
dec
push
mov
les
addb
push
loope
je
pop
mov
jl
in
mov
mov
fs
lock
shl
cmp
out
jl
sbbl
mov
ja
jp
cmp
pop
and
push
adc
out
aas
or
sub
jl
pusha
sbb
xchg
outsb
lea
in
sub
lret
mov
daa
add
ret
xchg
std
adc
mov
jge
xchg
sbb
mov
aam
inc
clc
insl
sub
pushf
dec
call
leave
loope
mov
sub
pop
mov
repz
int
dec
js
or
sbb
mov
fcmovnb
adc
add
arpl
orl
lock
mov
cmpsb
push
lgs
inc
shll
or
jg
mov
in
arpl
mov
bound
shll
mov
bound
stos
ja
push
out
adc
cmc
push
pop
add
sub
xlat
ret
pushf
jle
add
mov
xor
sbb
pop
and
out
shlb
dec
jmp
pop
xor
imul
dec
mov
ret
int
inc
push
pusha
and
lock
dec
dec
loop
fistpl
lret
aad
call
fucomi
cmp
leave
dec
mov
int3
sbb
cmp
mov
je
add
sbb
xchg
jnp
lret
and
sbb
aad
lret
pop
sub
sti
aad
sbb
pusha
xor
push
add
mov
sub
mov
adcb
xchg
push
ds
adc
mov
push
loop
das
imul
adc
movsl
mov
or
sahf
mov
cwtl
scas
xchg
xchg
cmpsl
movsb
je
xchg
or
xlat
mov
add
inc
scas
movsl
loopne
nop
jno
pop
jecxz
mov
or
testl
cmp
ljmp
andb
jp
xchg
mov
scas
sbb
sbb
mov
pop
pop
lds
arpl
mov
add
lods
ret
pop
jbe
pushl
xor
bound
add
sahf
lods
stc
pop
mov
ja
and
mov
js
jbe
outsb
les
repz
inc
pop
les
jp
sbb
jnp
jmp
sahf
nop
jle
adc
adc
xor
mov
sub
shlb
call
sub
xchg
enter
mov
jo
inc
push
test
sbb
imul
pop
xchg
lcall
mov
popa
pop
pop
push
cmpb
mov
dec
sub
xor
lcall
cli
mov
dec
call
xor
leave
sub
cmc
xor
fnstsw
iret
and
push
pop
sar
push
sub
sbb
into
in
xlat
mov
jnp
std
cmp
sbb
dec
lods
clc
in
jno
xor
mov
pop
mov
mov
push
insb
mov
mov
test
mov
xchg
dec
pop
xlat
jns
inc
and
clc
movsl
sahf
gs
insl
xorl
jb
mov
lret
repnz
stos
dec
movsb
and
xchg
mov
cwtl
icebp
test
stc
lret
mov
nop
das
mov
jne
sub
adc
es
sub
push
xchg
and
rolb
xchg
sbb
leave
inc
ss
bound
jo
cmp
out
push
hlt
cmp
cmp
pop
push
lcall
popa
xor
jl
scas
stos
adc
clc
inc
mov
jle
imul
in
mov
jg
sbb
out
enter
cmp
jg
xor
sub
rcrl
sub
jne
dec
nop
or
outsb
ret
xchg
iret
scas
rolb
icebp
or
cmp
push
mov
cmp
nop
jns
cmp
xchg
lods
popf
pop
testb
addr16
mov
ret
or
stos
xchg
pop
out
mov
sahf
mov
fsubrs
mov
add
and
add
and
mov
jl
pusha
inc
jp
dec
jecxz
and
dec
sbb
cmp
out
push
call
cmp
test
imul
sbb
sub
repnz
xchg
mov
mov
icebp
scas
xchg
mov
sbb
mov
inc
imull
sbb
mov
call
repz
xchg
mov
or
jmp
call
jno
sub
movsl
fnstenv
int3
pop
mov
pop
pusha
fsubr
pop
int3
push
mov
fisubrs
iret
iret
push
lcall
adc
arpl
fldl
rcll
popa
aam
leave
xor
or
and
mov
mov
stc
pop
jbe
lea
es
push
fsub
mov
dec
ds
cld
dec
enter
and
inc
cmpsl
inc
inc
cmpl
in
jp
repz
in
jne
not
outsb
adc
iret
push
adc
mov
inc
xchg
daa
push
cmc
out
lret
jne
push
xchg
jbe
notl
or
fnstcw
into
dec
lods
push
and
outsb
call
and
pop
daa
dec
inc
shll
subl
pop
push
mov
inc
or
lods
jbe
push
iret
dec
daa
cmp
stc
lea
mov
inc
mov
gs
pop
xchg
mov
ljmp
sbb
and
push
lret
mov
xor
mulb
sbb
loop
xchg
jle
and
popa
dec
ret
jno
jb
rol
mov
xchg
adc
lahf
sub
call
push
xlat
dec
jns
mov
push
stc
xchg
mov
cmp
mov
cmpsb
xchg
mov
popa
in
rclb
test
adc
xchg
push
jbe
lea
sbb
sub
std
ds
nop
int3
enter
inc
mov
iret
and
out
sbb
jns
addb
jo
stos
inc
jmp
cmpsl
push
dec
sub
test
sahf
stc
testl
lcall
out
dec
dec
fdivp
push
nop
mov
xchg
mov
or
sbb
xchg
sub
inc
sub
push
sub
cs
aas
andl
mov
and
inc
lret
fstl
dec
xor
lods
mov
mov
nop
std
sbb
pop
mov
xlat
xchg
jg
fsubl
aaa
insb
and
psadbw
cmpsb
add
je
jp
xor
cmp
mov
movsl
cmp
pusha
mov
lcall
fsubrs
fdivrl
in
push
imul
icebp
lock
mov
lods
repnz
pop
dec
xchg
inc
mov
cmpl
jecxz
mov
or
addr16
xor
subb
mov
cmp
adc
jl
lea
mov
sarl
add
daa
dec
pop
dec
sbb
test
clc
xor
adc
pusha
jbe
xor
or
dec
ror
sbbb
xchg
adc
ljmp
mov
sti
rcr
outsb
pop
inc
jo
das
push
and
insb
pop
lret
cmp
imulb
pop
fcmovu
or
jp
inc
xor
push
lock
push
lods
jnp
push
inc
stc
mov
xor
cmp
push
shll
sarl
jno
lcall
sbb
pop
lods
jnp
dec
loopne
xchg
divl
mov
daa
xchg
or
dec
or
or
sub
cmpsb
adc
jmp
cmp
stos
pop
btc
adc
lea
repz
roll
cmpxchg
ret
lahf
xchg
add
fsubrl
std
mov
pop
idivb
int3
pop
lret
xor
inc
fbld
xor
sbb
push
outsl
sti
jp
shlb
fwait
push
xor
sbb
and
push
loopne
adc
mov
add
in
in
ljmp
daa
imul
xlat
sbb
aaa
bound
aas
xchg
dec
and
mov
and
mov
inc
test
pop
lahf
ret
lods
dec
inc
push
fsubp
in
fwait
xchg
call
cli
into
dec
and
mov
cli
insb
mov
pop
addb
inc
push
stos
push
mov
jno
cmp
addr16
mov
push
test
sahf
cltd
inc
inc
sub
jge
ret
or
subl
mov
xrelease
mov
sub
stc
pop
mov
cmc
lret
shrl
inc
cld
cmc
adc
outsb
dec
push
sub
subb
int3
fs
push
xchg
and
loop
popf
mov
jno
fcmovbe
ss
dec
lahf
mov
lds
mov
pop
les
xchg
push
shll
lret
dec
jp
push
jl
int3
iret
flds
hlt
cmc
and
bound
cmp
jg
lahf
jne
sti
push
push
popf
stos
fildll
lods
fcmove
pop
push
fwait
enter
lret
shll
popa
fcomi
gs
ret
rorl
lahf
stos
pusha
int
aaa
lock
or
inc
mov
cmp
cmpsl
mov
add
cltd
and
inc
cwtl
test
cltd
hlt
leave
xor
ds
ret
sub
js
inc
and
divb
sbb
push
push
loopne
push
xchg
add
repz
fmuls
mov
mov
loop
jnp
loop
lret
dec
mov
popf
xlat
sbb
std
or
pop
or
jp
push
lret
loop
jg
movsb
push
add
ficompl
das
sbb
inc
push
mov
shrl
imul
fwait
push
mov
out
push
outsb
daa
mov
jns
add
imul
mov
or
sti
iret
push
movsb
pusha
xchg
mov
sbb
jge
and
jbe
rorb
xorb
sbb
aaa
inc
fsubrs
jns
shlb
in
adc
hlt
in
icebp
xor
pop
adc
and
lahf
lret
scas
push
sbb
iret
daa
pop
sbb
inc
fiaddl
push
ja
mov
sub
decl
dec
nop
mov
pop
fisubl
std
dec
icebp
jae
in
lcall
sarb
mov
lahf
aam
mov
and
jl
fisttpl
and
adc
arpl
xchg
mov
fdivl
push
dec
pushf
movsb
jl
and
cmp
cltd
aaa
sub
mov
and
xchg
movsb
mov
inc
ficompl
out
xchg
cmp
scas
jnp
adc
arpl
lods
fidivs
lods
scas
stos
jle
jle
push
sbb
mov
jnp
repz
mov
ds
out
rclb
jns
jl
cmp
bound
and
mov
adc
cmp
sahf
lret
pop
mov
lods
test
push
dec
push
dec
addr16
fsqrt
xchg
test
mov
pop
pop
cmp
dec
dec
sbb
or
movl
out
push
pop
and
mov
cmpsb
dec
popl
cltd
repz
jmp
idivl
xor
push
jp
cld
mov
test
lds
inc
test
pop
mov
inc
cmpl
imul
lock
adc
inc
sub
xchg
movsb
mov
push
push
aas
pusha
cltd
enter
dec
enter
popa
sti
sub
fdivr
jmp
test
inc
jecxz
xor
gs
dec
adc
repz
jb
icebp
sbb
out
ss
pop
test
push
stos
lahf
sbb
cld
and
sahf
ror
shlb
iret
inc
test
std
loope
cs
pop
loopne
mov
xor
sub
stos
mov
sbb
cmp
add
leave
lea
jo
jecxz
imul
mov
das
in
mov
and
scas
out
sahf
dec
ljmp
adc
fdivrl
shll
repz
xchg
mov
ret
lret
into
mov
popa
mov
out
pop
mov
outsl
mov
fimuls
pop
or
repz
popaw
stc
mov
popa
dec
xor
inc
push
push
dec
setg
and
pop
aaa
outsb
testb
pop
ljmp
addb
scas
ljmp
imul
idivb
or
stc
push
jecxz
push
loope
arpl
cmp
mov
or
test
into
pushf
sub
push
les
jge
add
mov
mov
mul
shl
jecxz
push
jo
lcall
movsl
addb
jns
mov
fcomip
icebp
mov
cmpsl
inc
ret
nop
jl
ds
mov
out
cmp
or
inc
int3
std
pusha
adc
push
mov
xadd
lods
and
stc
cmp
push
sahf
pop
outsb
xor
jno
mov
movl
insl
sahf
fadds
ljmp
sub
cmc
or
lock
mov
and
in
fs
jae
sbb
push
adc
test
mov
aas
push
rorb
scas
or
hlt
xor
jnp
mov
orl
or
push
sbb
push
push
repnz
enter
loope
mov
fwait
sub
inc
jp
adc
mov
xchg
leave
add
popa
pop
notb
stos
repnz
imulb
imul
mov
cmp
push
imul
adc
ret
jne
decb
insl
add
jo
xchg
loopne
mov
mov
mov
fists
sub
inc
adc
pop
sbb
mov
lret
sbb
mov
sub
movsb
jmp
outsl
or
insb
mov
loop
ss
scas
test
inc
mov
cmpsl
aaa
xchg
inc
ja
test
mov
lahf
fnsave
popa
dec
out
mov
sub
fs
and
lcall
outsb
out
xor
adcb
sbb
or
mov
cmp
mov
popa
imul
out
or
xchg
inc
lock
push
jg
jmp
dec
dec
mov
jno
cmpl
shlb
cmpsb
popa
adc
fwait
mulps
dec
fdiv
test
jne
dec
mov
hlt
pop
cmc
push
pop
movsb
call
aas
pop
adc
out
fisttps
incb
cs
es
imul
push
mov
dec
pop
or
jae
ficompl
loope
mov
loop
add
xlat
jmp
fsubrs
cli
loopew
jae
adc
pop
notl
cmp
inc
les
sbb
sbb
adc
sub
js
cmpsb
or
jle
jns
mov
xor
addl
xchg
sahf
lcall
jmp
into
or
loope
movsb
sbbb
cmp
add
std
add
icebp
in
or
add
jmp
pand
jp
or
sbb
mov
sub
and
les
test
ds
sahf
push
cltd
sub
fidivrl
pop
fs
insb
sbb
add
mov
fs
lret
mov
add
rcr
add
pop
add
lea
jbe
push
lahf
out
aas
adc
mov
cmpsl
mov
test
inc
sbb
mov
fists
call
or
jno
call
pop
cmpsb
xor
jb
add
jae
inc
xor
mov
repnz
and
repz
and
bound
jb
add
jae
inc
xor
mov
repnz
and
repz
and
bound
jb
add
jae
inc
xor
mov
repnz
and
repz
and
arpl
jb
add
jae
inc
mov
cmp
xor
cmc
imul
pop
cmp
sub
hlt
ficomps
out
sub
mov
mov
nop
jnp
mov
mov
cs
sti
stos
or
sbb
dec
sahf
xlat
scas
imul
bts
dec
movsb
push
fldt
stos
ds
jbe
sub
jl
cmp
test
clc
push
hlt
sbb
gs
insb
mov
lahf
sti
mov
pop
xchg
outsb
mov
je
xchg
mov
xor
sti
dec
aaa
push
push
sub
and
outsb
jno
xchg
sub
cmp
ret
subb
ljmp
fwait
xor
adc
cmpsb
int
lock
pop
push
jnp
jle
push
jmp
sub
jmp
lret
mov
or
adc
push
nop
mov
lret
ljmp
and
add
test
push
shl
into
js
mov
and
fcomp
mov
cmp
cli
xor
lret
inc
cmpsb
out
cmp
add
ja
push
sub
repz
mov
cs
jg
or
xor
out
scas
mov
sti
mov
dec
repz
out
and
ds
cmpsl
pop
lods
sbb
aas
lock
add
fimuls
fistps
sarb
scas
inc
stos
pop
lcall
lahf
push
out
sti
push
sub
or
outsb
into
push
fdivl
jno
inc
mov
mov
jnp
pop
sahf
pop
scas
imul
outsb
stos
jle
push
lret
push
fldt
jmp
sti
into
or
sbb
sub
cmp
imul
outsb
stos
jle
push
lret
push
fldt
jmp
sti
into
or
sub
ds
inc
shl
dec
daa
popf
sub
cmp
lret
cmpsb
in
cmp
enter
mov
arpl
xchg
cmc
cmp
ret
ret
sbb
nop
outsl
xor
xorb
ljmp
pop
out
add
and
mov
and
cwtl
mov
xchg
pop
adc
mov
xor
sbb
dec
mov
in
cltd
pushf
jno
push
hlt
cmp
dec
lcall
insl
cmp
xchg
and
lcall
sti
pop
in
mov
mov
mov
arpl
out
popa
push
sub
xchg
insb
scas
out
adc
insb
cmp
push
pop
loopne
xor
fwait
daa
rcll
pushf
rorb
xor
push
pop
cmpsb
mov
cld
jle
mov
cltd
jbe
loopne
add
sub
push
sti
adc
sbb
mov
pop
jge
cld
ret
mov
adc
repz
std
sub
test
sbb
push
dec
and
fs
notl
inc
aad
mov
loopne
stos
push
xchg
lret
pop
pop
bnd
stos
out
hlt
sti
mov
jno
dec
lods
dec
lock
xchg
fdivrl
lahf
mov
and
scas
xchg
mov
and
xchg
std
dec
add
inc
dec
pop
xor
xchg
sarb
push
or
fstps
jmp
push
inc
cmpsb
ret
mov
mov
ds
cli
sub
sub
enter
lds
adc
arpl
pusha
test
dec
mov
xor
clc
mov
jle
mov
rorl
lcall
les
fnstsw
sub
mov
push
insl
mov
out
sub
pop
insl
sub
xchg
cwtl
pop
movsl
push
shr
xchg
hlt
mov
pop
loop
aad
xor
xchg
cli
aaa
sbb
imul
lret
inc
ret
lock
xchg
lock
and
adc
fadd
shlb
mov
lahf
xor
mov
push
mov
out
inc
dec
sahf
cmp
jns
loope
mov
lock
rcr
hlt
xchg
xchg
test
test
mov
mov
int
adcl
sub
jne
jmp
aas
mov
movsl
and
or
mov
lods
push
sti
mov
jp
and
out
sbb
push
pop
mov
and
cmpsb
gs
out
mov
cltd
sub
sahf
add
sbb
xchg
or
pop
pop
add
add
rorl
mov
push
push
jl
das
pop
fildll
fnsave
in
jl
mov
inc
pop
sbb
je
add
loop
pop
mov
in
sbb
and
mov
jp
scas
je
push
sub
test
ret
mov
lds
inc
rcrl
mov
dec
les
xor
xlat
jne
pushf
lcall
sti
sbb
mov
fs
add
pop
xchg
mov
push
cmpsb
fimuls
lods
push
int
xchg
pop
adc
cmp
enter
out
pop
adc
xor
adc
sbb
stc
adcl
aaa
xor
loopne
sbb
fcompl
push
aad
adc
xor
je
stc
add
decl
mov
push
jl
cmp
adc
cmp
test
fldl2e
sbb
mov
mov
pop
mov
stos
xchg
cltd
cmp
inc
scas
or
cmp
push
cltd
cmpsb
or
jge
in
pop
pop
test
and
int3
mov
mov
jbe
push
mov
shll
cmp
push
inc
mov
xor
mov
xor
xorb
leave
outsl
popf
xorb
fistpl
leave
mov
es
bound
mov
lock
dec
sbb
mov
rorb
ret
scas
jmp
mov
in
mov
lcall
jno
cmpsl
push
jne
push
mov
dec
shll
jb
adc
mov
iret
xor
inc
ljmp
lea
xchg
xchg
je
mull
stos
push
xchg
repnz
pop
imul
mov
scas
mov
loopne
jmp
mov
lahf
je
jmp
ds
sbb
fdivs
add
pop
dec
pop
sub
daa
mov
pop
adc
mov
test
loop
jno
or
jmp
test
inc
dec
or
inc
inc
iret
lds
mov
pusha
push
sub
mulb
lea
call
or
aas
pop
lock
popa
test
cmp
xor
movsb
ds
gs
add
ds
test
ja
ljmp
dec
rcrl
mov
add
bound
inc
pop
or
rcrb
xchg
jae
and
pop
inc
pop
stos
pop
das
sahf
mov
sub
cwtl
je
arpl
cmc
pop
ja
cmp
jb
mov
dec
sbb
test
ljmp
push
pop
jnp
push
out
pop
imul
stos
leave
xchg
fs
push
mov
test
sbb
insb
sbb
les
push
sbb
jbe
sbb
repnz
lea
aam
ffreep
fistpll
pop
sbb
adc
inc
lret
inc
sub
insl
or
shll
pop
popa
scas
sbb
add
mov
or
loope
repz
ljmp
outsl
test
das
xchg
mov
divl
add
dec
dec
or
inc
movsl
or
lds
dec
mov
mov
push
scas
scas
shrl
loopne
pop
sub
push
mov
lcall
aam
pop
outsb
xchg
pop
pop
inc
repnz
aam
and
xor
mov
push
push
adc
sti
mov
cltd
rol
adc
sbb
ds
dec
test
jne
dec
mov
js
ret
dec
rol
rorb
xchg
repz
aad
push
pusha
aaa
inc
inc
in
movsl
subl
enter
adc
pop
inc
add
gs
xor
shrb
dec
mov
fsub
cmp
test
push
jnp
lret
mov
mov
mov
jp
xor
aaa
in
out
lret
es
xchg
jp
cmp
or
pop
shll
add
es
mov
xor
inc
or
les
pop
lahf
or
and
das
jle
pusha
dec
xor
mov
and
mov
leave
mov
addr16
sahf
fistl
les
dec
mov
pusha
adc
mov
or
lods
mov
in
dec
sbbl
fimuls
aam
xchg
xchg
jmp
outsl
and
lds
and
mov
fs
ret
movsl
add
ficoml
jg
out
push
cltd
nop
sub
jg
jae
arpl
push
add
mov
je
clc
jno
repnz
out
movsb
lock
inc
xchg
jge
add
stos
lock
jle
popf
adc
pop
xorl
nop
sbbb
jmp
leave
xchg
jo
gs
xor
jp
xor
cli
fistpl
sahf
cmp
lret
add
hlt
ficoms
mov
icebp
loope
pop
jp
out
movlps
sub
xlat
push
jp
into
bound
xor
lods
and
out
in
push
out
or
pop
or
cli
cwtl
jg
bound
fcoml
adc
sbb
pop
cmova
inc
and
xchg
mov
out
mov
rcrl
stos
jmp
es
add
mov
lds
bound
mov
pop
push
xchg
mov
jecxz
xchg
sbbb
mov
adc
int3
out
sub
sub
cmpl
push
stos
sub
scas
fst
sub
loope
push
mov
pop
jmp
inc
inc
inc
les
xor
arpl
imul
xor
dec
imul
jo
push
inc
cmp
out
adc
movsb
xorb
iret
push
sbb
xor
jge
shll
cmp
vpshaq
mov
int3
mov
mov
xchg
sub
aaa
inc
repz
jb
inc
std
add
pop
mov
out
andl
scas
mov
adc
push
int3
lret
xorl
xchg
xor
or
xor
xchg
push
dec
xchg
sbb
mov
out
neg
cmp
mov
adc
xchg
incb
insl
mov
nop
cmpsb
ss
xchg
lret
and
sbb
call
add
mov
mov
sub
dec
cmpsl
sbbl
add
gs
push
iret
pop
mov
mov
mov
or
pop
aad
inc
lds
jno
cmp
fnstsw
and
aam
in
dec
loopne
xor
cmp
xor
lea
fisubrl
xor
adc
stos
out
subb
xchg
addl
fidivrl
scas
xor
or
xor
inc
pop
not
lods
test
xor
cmc
pop
in
enter
js
lods
bound
pop
adc
fsubl
in
mov
fucomi
sbb
imul
aaa
leave
mov
mov
popa
adc
fisttpll
leave
or
lahf
or
rol
mov
nop
mov
test
mov
faddl
add
mov
mov
dec
cwtl
mov
lret
cmc
mov
pop
aas
ljmp
je
rolb
mov
rcr
jo
inc
or
add
in
push
xorl
leave
jne
ljmp
sub
out
rclb
pop
dec
xchg
cltd
mov
or
mov
cmp
aaa
adc
inc
or
sub
test
mov
or
jnp
jnp
or
inc
aas
scas
mov
sbb
call
push
jge
testb
fsubrl
int3
dec
shll
rorl
jno
aas
adc
mov
insl
xchg
xchg
jg
mov
mov
cli
push
jmp
outsl
lahf
jnp
jns
das
inc
rcll
cmp
sub
fstl
imul
pop
out
dec
mov
jl
mov
pmaxsw
dec
adc
movlps
mov
xchg
dec
mov
rolb
cwtl
push
jmp
sub
push
mov
xor
xchg
pop
xor
adc
pusha
sbb
push
repnz
test
dec
push
push
das
push
xchg
outsb
cmp
pop
adc
adc
jae
inc
mov
lcall
fists
cmp
mov
lcall
pusha
push
adc
sbb
jb
aad
out
push
fisubrs
adc
or
and
jl
add
sub
jb
jbe
jae
pop
mov
cmp
sbb
js
xor
push
rcr
push
rol
mov
dec
rcrl
iret
mov
ljmp
or
sub
stc
dec
mov
addr16
pop
push
cmc
stc
jge
mov
cs
xorl
divps
add
xchg
sub
mov
movsl
xchg
add
mov
or
mov
aaa
push
add
jle
outsl
ret
notl
arpl
test
out
pop
insb
sahf
lods
int3
dec
xor
or
lock
push
push
push
mov
lcall
push
and
sbb
xchg
push
cmp
mov
bound
cli
jbe
mov
pop
add
nop
lret
mov
mov
pop
test
dec
cld
cltd
xchg
or
je
mov
fcmovb
and
cmp
loope
jl
cmp
or
sahf
or
insb
xchg
fsts
dec
dec
stos
sub
stc
lock
pop
pushf
lods
out
test
push
lcall
iret
fistpll
test
push
fs
daa
mov
repz
out
outsl
je
dec
es
ret
jo
cli
jecxz
add
lods
dec
test
sub
xlat
mov
mov
add
in
jg
xor
mov
aad
sub
fcmovu
mov
nop
mull
push
loope
aas
xchg
stos
dec
stos
imull
faddl
add
lds
push
pop
iret
add
jmp
mov
int
jle
loope
xchg
push
dec
jmp
push
jbe
loope
cmp
js
bound
sub
jge
dec
popf
mov
ds
mov
ret
sbb
aam
mov
xchg
push
out
adc
cltd
aaa
movl
out
push
aam
in
je
or
cmc
inc
mov
sub
and
jle
enter
lret
aaa
sbb
popa
push
cmp
ret
xchg
cltd
add
dec
push
fnstcw
cmp
in
xchg
pushl
movl
fmull
popf
pop
push
pop
mov
xor
test
xor
dec
jle
dec
shlb
jb
adc
xchg
js
repnz
iret
xlat
xor
pop
sti
cmp
add
or
jecxz
xor
lods
sub
jae
in
mov
notb
into
dec
call
push
pop
jbe
push
adcl
mov
imul
fnsave
adc
pop
cli
fs
in
mov
push
inc
insl
shlb
jp
ficoms
insl
push
ud0
nop
mov
adc
fisttpl
int3
je
sub
mov
push
pop
jle
or
js
add
addr16
xchg
or
and
btr
xorl
adc
sub
and
pop
pop
xor
xchg
leave
cmp
fldl
loop
repnz
pop
jb
test
and
xor
fstpt
les
popa
outsb
addr16
shll
xorb
sub
adc
popa
clc
stos
mov
rcrb
mov
mov
shlb
stos
lahf
pop
roll
jo
xchg
ss
aaa
test
orb
imul
add
xchg
sbb
xchg
fwait
cmpsb
push
pop
mov
test
push
inc
hlt
fistpl
sbb
xor
es
pop
dec
test
cld
mov
fmulp
inc
pop
sbb
pop
add
xorb
pop
ja
xor
and
mov
insl
push
cli
scas
test
sub
add
ds
xor
fwait
push
out
in
jae
mov
jno
add
outsb
xor
inc
or
pop
jp
test
jbe
lret
lgs
inc
pop
mov
stc
inc
out
outsl
sub
cmp
or
stos
dec
fcomps
out
iret
aam
mov
sbb
dec
mov
fmull
fadd
dec
mov
mov
mov
jno
mov
push
in
xchg
pop
pop
sbb
jb
mov
rorb
arpl
adc
fdivrl
jae
outsb
out
cmc
push
orb
icebp
xchg
sub
xchg
fdivr
cmp
sub
jecxz
stos
jb
bound
scas
push
cmp
addr16
pushf
cmp
mov
pop
out
sbb
lds
sahf
cmp
cmpsb
test
sbb
je
or
dec
pop
fcomps
push
jle
cmp
stc
fnsave
jae
sbb
pop
adc
mov
push
push
mov
inc
mov
dec
mov
xor
xchg
jle
loope
mov
mov
and
mov
and
dec
inc
jno
clc
aas
push
lods
pop
dec
adcl
icebp
push
fs
imul
movsb
les
xchg
daa
gs
sbb
das
pop
sbb
cmp
lret
and
fistpll
out
dec
std
shrl
idiv
sbb
sub
mov
out
out
lret
in
xchg
icebp
xchg
push
xchg
mov
mov
lock
and
aam
mov
fs
leave
loop
nop
outsl
adc
pop
inc
fcmovnbe
lods
inc
xor
int3
jno
xchg
mov
lea
leave
std
loop
mov
sub
push
pusha
mov
icebp
mov
mov
js
lock
pop
add
xchg
dec
out
out
push
and
cmp
adc
xor
xchg
call
push
imul
dec
or
pop
add
xchg
mov
enter
enter
push
cli
xor
into
sub
dec
fwait
mov
cmc
jge
sub
das
mov
xlat
lahf
daa
mov
sub
mov
jno
je
arpl
jmp
mov
and
aaa
xchg
mov
rcpps
mov
scas
aas
dec
mov
icebp
or
mov
into
inc
lahf
jno
notl
nop
lods
inc
pop
mov
cwtl
test
jns
sbb
cmp
ss
ss
arpl
fbld
cltd
test
data16
mov
and
out
sbb
ret
or
fcmovne
jmp
cltd
add
push
insl
and
test
sbb
inc
mov
fldenv
les
jbe
sub
add
decl
mov
aaa
aam
adc
ret
adc
mov
testb
in
mov
xor
or
insl
in
push
cmp
das
pop
cld
ja
cmp
pop
adc
pop
xchg
roll
das
pop
test
cltd
insl
lds
sbb
xchg
push
xchg
repnz
shll
neg
daa
lock
aas
jnp
cld
scas
xorb
mov
rcl
notb
jp
sbb
int
sub
xor
inc
test
cmpsl
fimuls
dec
sbb
mov
cmp
faddl
xchg
add
or
pusha
and
jle
ror
xlat
xor
lret
loop
or
cmpsb
popl
pushf
add
movsb
cltd
fisubl
jno
push
xchg
arpl
xadd
imul
push
inc
sub
and
mov
pop
jmp
outsb
mov
divb
jb
push
mov
test
test
sbb
add
xchg
push
mov
fdivp
adc
int
shll
sbb
ljmp
sub
cmp
add
in
aam
xor
adc
sub
leave
cmpsb
mov
insb
imul
inc
fs
push
into
stc
bound
dec
push
sahf
push
xchg
loope
inc
arpl
pop
and
mov
push
mov
in
push
sub
xchg
dec
lds
jmp
dec
cmpsb
cld
xor
xchg
movsl
dec
out
shll
sbb
lock
add
les
fsubrl
je
sub
incb
test
and
push
mov
jge
js
sub
popa
ljmp
movsl
cmp
sti
sub
les
outsb
fildll
popf
pop
movsb
addb
insb
js
mov
int3
imul
test
push
xchg
xchg
ret
mov
sarw
sub
dec
sub
out
aaa
arpl
push
pcmpgtb
push
out
test
lock
lds
pop
inc
mov
and
neg
mov
pop
mov
xor
filds
cmpsl
fisttps
or
pop
sbb
loopne
fs
ret
nop
pop
lret
mov
cmc
data16
mov
jae
les
pop
xor
inc
cmpsb
arpl
mov
shll
cmpsl
xlat
dec
add
loope
cmc
or
dec
xchg
jae
push
jo
repnz
xlat
clc
lret
les
mov
push
mov
inc
add
negl
mov
rcrl
repnz
movsl
mov
add
test
jl
loopne,pt
adc
cmpsb
or
dec
mov
inc
pop
aad
repnz
neg
sub
imul
addl
jnp
popf
mov
push
imull
cmpsl
adc
in
loope
filds
xor
andl
and
xor
mov
dec
add
fiaddl
std
das
mov
out
lods
js
xor
cli
lea
insb
insb
pop
mov
add
jno
testl
repz
out
cmp
aad
push
or
mov
shlb
sbb
mov
test
inc
xor
mov
addr16
push
and
sbb
fsub
xchg
test
inc
xchg
xchg
push
movsl
fildll
xor
xchg
push
add
jmp
in
fsts
mov
adc
add
mov
pop
js
in
jmp
mov
ds
cli
adc
mov
std
sti
sbb
mov
bound
icebp
mov
jbe
and
xchg
out
pop
jmp
jmp
adc
xchg
jg
adc
rolb
ja
in
sub
int3
xchg
mull
lds
adc
add
inc
jb
pushf
jg
pop
adc
adc
mov
add
lret
jbe
gs
xchg
dec
in
cli
movsl
xchg
idivl
ja
roll
or
imul
dec
fwait
les
pop
sbb
pop
inc
test
adc
cmp
sbb
mov
std
lret
jp
hlt
sbb
out
int3
mov
insb
cltd
fstpl
iret
clc
inc
inc
loope
mov
int3
add
nop
adc
cwtl
js
cld
xchg
sub
icebp
outsb
sbb
cmp
mov
push
mov
pop
inc
mov
sub
mov
mov
dec
mov
mov
mov
jp
in
mov
imul
xor
test
jecxz
pop
jecxz
add
mov
stos
push
mov
mov
rcr
jge
ret
in
dec
out
and
xor
lahf
inc
sbb
dec
sahf
pop
scas
imul
outsb
stos
jle
push
lret
push
fldt
jmp
sti
into
or
sbb
sub
cmp
imul
outsb
stos
jle
push
lret
push
fldt
jmp
sti
into
or
push
mov
cmp
dec
sahf
repz
imul
push
pop
fwait
sahf
stos
jle
push
lret
push
fldt
lret
sti
fimull
sbbb
sub
cmp
jmp
jnp
je
xor
stos
jle
jns
xchg
and
adc
add
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
xchg
jg
dec
in
pop
andb
popf
das
ret
mov
dec
fistps
sub
jg
dec
in
pop
popf
das
lea
mov
out
dec
lcall
iret
scas
fistps
sub
jg
dec
cmc
pop
test
xchg
aas
movsl
pop
pop
out
inc
fcoml
mov
inc
call
lods
sbb
ss
sbbl
jno
mov
mov
icebp
scas
xor
cmp
idiv
adc
ficompl
jb
dec
pop
fs
sbb
mov
rorl
int
mov
das
pop
shll
mov
pop
mov
xchg
loop
dec
mov
or
data16
ds
lods
loope
adc
aas
cwtl
scas
pop
inc
jge
les
movsb
pop
cltd
ror
cmpsl
dec
mov
gs
mov
xor
mov
or
mov
aad
cmp
pop
pusha
pop
and
push
negl
xchg
mov
xorb
lret
sbb
mov
dec
cli
pop
lea
xchg
aas
mov
out
push
jmp
je
add
xor
scas
imul
stc
dec
loopne
mov
xchg
dec
decb
stos
add
pop
testb
or
sbb
inc
jecxz
shll
jnp
movsb
dec
xchg
pushf
sbb
dec
fldcw
aaa
cwtl
cmp
lea
mov
out
dec
jge
insl
fistps
sub
jg
dec
in
pop
popf
das
lea
mov
out
dec
jge
insl
fistps
sub
pop
movsb
mov
sbb
mov
cmp
jno
sbb
fistl
mov
cmp
adc
dec
andl
xor
stos
dec
mov
push
mov
dec
jecxz
ss
cltd
in
jle
inc
movsb
aad
mov
cwtl
mov
mov
pop
xchg
adc
mov
out
inc
and
xchg
test
bndldx
fstps
daa
and
data16
fwait
rolb
inc
cli
sub
js
jl
aas
jbe
fadd
sub
jns
mov
inc
ja
nop
sub
cmp
xor
mov
out
cmp
sub
sti
scas
pusha
and
jle
jge
movsl
frstor
push
jl
push
rcl
mov
ds
repnz
inc
fsub
add
pop
mov
popf
push
pop
out
arpl
dec
imul
cmp
jecxz
into
push
and
adc
adc
or
fldcw
cmc
out
ret
xchg
mov
adc
cmpsb
arpl
cli
sbb
and
je
dec
call
add
sbb
mulb
cmp
adc
test
hlt
ret
jge
pop
push
xor
or
loope
fimull
dec
mov
cs
test
arpl
inc
bound
adc
out
jnp
jbe
mov
movb
out
pushf
or
icebp
mov
mov
out
div
cmp
fistps
add
subl
test
add
xchg
lea
add
lea
push
cwtl
sarl
sbb
xor
mov
cmpl
mov
enter
ret
add
mov
insb
or
push
mov
fnstcw
lea
das
stos
outsb
ret
es
or
jb
jno
mov
orl
mov
cltd
ja
arpl
mov
push
mov
sbb
test
jg
ss
add
add
outsb
mov
dec
daa
cmp
mov
sahf
cmpsb
cmp
sti
push
pop
xchg
lds
ja
std
arpl
cmp
scas
push
inc
jg
inc
mov
xchg
in
pop
add
into
cmp
call
test
push
push
and
pop
hlt
mov
into
js
add
ljmp
ja
rcr
dec
scas
push
jnp
push
sti
jge
cmp
ljmp
icebp
jecxz
or
jg
jne
mov
sbb
jle
mov
inc
or
imul
lcall
mov
pop
push
push
push
rorl
jb
nop
sub
xchg
fdivl
int3
xchg
xor
outsb
lahf
sbb
and
gs
nop
mov
or
xchg
daa
lods
adc
dec
add
dec
sar
divb
mov
fidivs
and
xchg
push
roll
xchg
xchg
sub
inc
test
stos
shll
and
lods
cmc
fcoml
xchg
push
xchg
cmp
rclb
cmp
add
out
mov
adc
push
cmp
js
sti
xor
xor
mov
adc
pop
int3
fcomip
push
into
jb
cli
lcall
mov
in
loop
popf
imul
cli
aad
dec
daa
cli
or
pop
hlt
das
ds
push
lahf
fnstenv
xchg
or
pop
push
inc
xchg
cmpsl
pop
or
pop
lret
jmp
lcall
test
hlt
fldl
xor
into
sub
mov
in
loopne
jbe
cmp
and
or
cs
inc
cmp
lea
lcall
shl
les
add
pop
and
mov
mov
mov
xchg
enter
outsl
mov
popf
es
add
dec
cmp
hlt
xor
es
push
dec
into
arpl
dec
sub
or
es
mov
outsb
cmp
jp
mov
push
mov
push
sub
xor
loope
add
icebp
mov
in
jmp
dec
call
rcrl
incb
sbb
aam
fbld
sub
cs
push
into
cwtl
dec
fldt
or
rcrl
adc
das
xor
pop
xchg
aaa
push
sbbl
dec
xor
mov
fnsave
out
roll
cmp
nop
pop
mov
movsl
imul
loopne
jns
mov
roll
xchg
xchg
jecxz
jmp
dec
lods
dec
icebp
fnsave
in
fcoml
adc
cmpsl
pop
inc
fwait
mov
xchg
xchg
mov
bnd
mov
xor
xor
pop
cmp
stos
sbb
push
cmp
adc
add
mov
mov
iret
int3
lock
mov
cmp
dec
or
adc
inc
fidivrs
cmpsb
cmpl
lahf
lods
call
and
mov
dec
sahf
jle
aam
ds
fisttps
add
shll
repnz
repz
scas
cmc
adc
xchg
or
xchg
sub
clc
xchg
outsb
ja
jno
xor
ja
or
test
cmpsb
es
lds
cmp
sbb
gs
dec
gs
mov
aam
pop
jno
aas
lcall
cmc
mov
data16
fildl
mov
fimull
ret
sbb
jno
sbb
out
test
stos
xor
cmpsb
sbb
outsb
lahf
mov
call
cmp
xor
mov
rcl
cs
inc
ljmp
fsub
sti
cmpsb
cmp
mov
mov
xchg
mov
negl
mov
ljmp
mov
imulb
rcl
mov
mov
dec
pop
push
movsb
pop
sub
test
in
in
pop
dec
push
xor
push
add
dec
mov
fcoml
movsb
sbb
insl
mov
jecxz
not
push
cs
jae
push
enter
push
mov
mov
dec
sarl
loopne
shrl
or
dec
stos
push
push
inc
mov
cmpsl
scas
push
push
pop
rcr
mov
jb
clc
out
outsb
in
js
faddl
xor
push
jb
cld
out
jnp
roll
mov
push
inc
popf
loop
test
cmp
in
and
dec
push
push
jg
xabort
push
dec
sub
adc
pop
fbld
xorb
adc
sbb
arpl
or
cmc
pop
push
lock
test
rcrb
push
pop
aas
and
cmp
psraw
loop
cmpsb
xor
adc
addr16
mov
fists
or
pop
pop
pop
test
xchg
cmpsb
mov
fstpt
pop
ret
or
scas
hlt
stos
mov
inc
shll
loopne
mov
mulb
adc
mov
fs
sbb
adc
mov
fdiv
cmp
in
xor
xchg
scas
dec
dec
shrb
fstl
pop
out
inc
lahf
push
gs
jle
movsb
pop
in
or
cmp
push
or
fisubrl
xchg
sub
stos
test
mov
sub
ds
mov
std
ss
dec
or
pop
clc
cmp
ret
jne
int3
sarb
sub
jge
xor
xor
out
pop
mov
out
push
in
add
or
or
into
xchg
ud2
pop
xor
sbb
inc
sbb
dec
xor
mov
xor
pop
sub
xchg
and
or
fdivs
iret
sub
cmpsl
cmpsb
mov
test
xchg
out
insb
xlat
mov
cmc
sub
mov
sbb
pop
sti
loop
aam
scas
and
jbe
cmp
mov
imul
out
lahf
in
iret
xlat
idivb
int3
adc
adc
cmp
ljmp
ljmp
out
test
cli
jbe
ja
mov
and
mov
popf
cmp
in
jle
mov
paddsb
xchg
jne
mov
cwtl
dec
popa
inc
in
xchg
mov
mov
sub
mov
xor
inc
push
imul
iret
lock
pop
pop
loopne
mov
mov
xchg
add
orl
addr16
out
xor
repnz
dec
mov
fisttpll
xchg
arpl
adc
ja
cltd
and
fcmovnbe
xchg
push
add
mov
je
sub
add
mov
jns
cld
dec
xchg
pop
shrb
loopne
adc
leave
shlb
jg
push
push
dec
cmp
mov
push
and
cmp
sti
inc
out
sub
shl
fmull
cmp
insl
ljmp
cmp
or
dec
adc
out
xor
roll
add
and
es
jns
jnp
ja
aam
fmull
or
sub
cwtl
int
jg
push
andl
test
xor
je
test
cmc
push
dec
ret
sub
jle
bound
push
cmovne
not
jmp
mov
fnstenv
jge
jbe
pop
sub
gs
es
imull
loopne
push
aas
js
jl
inc
jp
mov
arpl
insl
out
xlat
out
mov
iret
mov
mov
cld
inc
lcall
add
pop
and
xchg
mov
fdivp
or
int
xor
push
and
int
or
push
xchg
insl
mov
fiaddl
mov
sub
sbbl
mov
ds
xor
scas
mov
jge
sbb
cs
fsubr
xor
or
movsb
pop
push
xor
ror
int
cmp
fisubrl
lret
mov
das
popa
mov
ds
adc
xor
xorl
pop
adc
filds
mov
cs
addr16
icebp
leave
jmp
out
pop
ja
inc
xor
xor
cmc
inc
xchg
or
repnz
cmp
mov
mov
adc
dec
aas
cmp
enter
and
inc
and
cmova
dec
mov
scas
xchg
mov
lret
imul
jae
scas
jnp
jbe
jecxz
dec
pop
dec
pop
cld
dec
jmp
cmp
out
mov
fisttps
out
jne
dec
mov
stc
cmp
repnz
scas
in
iret
data16
iret
adc
out
in
mov
ds
xor
sub
jp
jo
mov
in
in
and
push
movsl
inc
push
cltd
dec
fcomi
mov
xor
mov
mov
leave
outsb
sbb
jmp
test
dec
mov
mov
xchg
or
stos
push
cmp
leave
aaa
imul
push
mov
adc
sbb
jno
jp
cmp
push
mov
int
fistl
pop
repz
dec
jno
jae
loopne
jo
dec
enter
loope
adc
lods
mov
lods
out
jne
fistps
repz
fdivrl
bound
je
shrb
aas
out
scas
or
adcb
mov
aas
imul
jo
repz
mov
aaa
ss
ss
or
xchg
xor
push
mov
fs
and
add
dec
cmpsb
movsb
into
and
add
in
stc
movsb
insb
jae
pop
das
std
in
inc
repnz
stos
pushf
sbb
mov
int
mov
jns
cli
rcrb
pop
jbe
or
sbb
inc
mov
lock
cld
jne
notl
aaa
insl
xchg
xlat
out
test
mov
nop
push
stc
cmpsl
mov
xchg
aaa
and
shlb
sub
dec
insb
pop
mov
test
repz
pop
and
dec
loop
pop
cmpsb
adc
mov
cmpsb
mov
cmp
and
inc
xor
pop
cmc
mov
jp
xor
add
dec
and
mov
or
out
lock
jmp
int
add
in
fbld
pushf
fabs
jp
jb
lahf
mov
popf
and
adc
arpl
jbe
ret
cmp
pop
cmp
pop
inc
sbb
sub
out
xchg
idivb
imul
stc
cmpsb
bound
jp
cmp
aad
dec
hlt
or
call
xlat
and
ds
out
ljmp
jmp
mov
test
sub
jbe
jp
and
dec
ja
call
add
and
test
in
aad
imul
cmp
and
sub
mov
es
call
andb
loop
js
in
jnp
lret
mov
and
aam
sti
mov
cmp
mov
push
out
mov
sti
mov
cmp
push
insb
out
pop
or
sub
out
iret
loop
shrb
pop
je
fimuls
jp
jo
push
push
push
bound
xor
fbld
icebp
xchg
xchg
or
ret
ds
rcrl
mov
aad
pop
popa
push
cmpl
jb
sub
enter
jg
adc
test
inc
jno
cmpsl
mov
and
rclb
lret
or
testb
fst
rol
sub
popf
xlat
lods
ja
xchg
notl
lock
mov
mov
out
es
cli
inc
aaa
dec
mov
sub
dec
mov
dec
shrl
out
nop
imul
popa
movsb
add
jo
jnp
pop
xchg
xorl
fidivrs
xor
lds
loopne
or
ret
mov
test
pop
mov
adc
jb
sbb
icebp
popf
dec
pop
cli
hlt
sub
sub
xorb
adc
dec
cmpsb
ja
outsb
hlt
aas
mov
mov
or
xor
cs
mov
sbb
test
shrl
inc
arpl
add
pop
and
in
decb
movsl
add
jnp
lock
jl
cmc
jbe
adc
push
cltd
mov
cli
adc
dec
xchg
mov
sub
dec
cmp
mov
cmp
clc
mov
mov
mov
iret
fdiv
push
sub
mov
loopne
xchg
imul
cmp
dec
imul
test
cli
mov
lret
into
sub
in
jns
fdivrl
mov
ja
pop
ljmp
sub
popf
cmp
mov
into
inc
push
or
jle
stos
sbb
and
jbe
cltd
insl
fucomip
push
xchg
sub
jp
xor
lock
cli
or
xchg
rcll
sahf
jl
jg
add
int
jge
mov
loopne
mov
mov
mov
mov
xchg
fucomip
jo
push
cmp
testl
jae
cmp
aam
push
mov
and
stos
fisubl
xchg
add
xchg
out
push
shlb
inc
mov
push
inc
ret
fwait
sub
xlat
in
xchg
adc
fwait
add
in
jbe
jnp
lods
xchg
lret
sub
clc
push
add
ss
inc
mov
mov
jmp
mov
push
pop
xchg
andb
mov
paddd
scas
mov
test
and
cmc
pop
sbb
pop
test
pop
sarl
cmc
or
or
xchg
mov
mov
mov
arpl
adc
sbb
das
cmp
js
mov
test
call
out
jns
pusha
test
ds
int3
fdiv
sahf
cmpsl
mov
mov
pop
cli
push
aam
sub
mov
ja
mov
push
lods
xchg
int3
pop
das
dec
stos
cmp
dec
xchg
pop
mov
or
mov
pushf
rclb
mov
out
cmpsl
sub
loop
fildl
jno
in
int3
inc
int3
roll
push
lds
xchg
pop
pop
push
insl
lret
mov
movsl
fwait
xchg
sti
lds
ljmp
ds
out
sbb
js
inc
je
dec
xchg
shl
sbb
sub
mov
mov
imul
aam
xorl
xor
stc
cli
pop
dec
inc
pop
jnp
fsts
jl
pop
mov
pop
popa
clc
xor
insl
popf
cld
mov
and
sub
rcrb
mov
cs
stc
mov
dec
insb
inc
xor
and
jo
loope
fstps
jb
test
xchg
lahf
les
adc
add
xchg
test
loope
xor
stos
out
stos
or
pop
push
mov
mov
cmpb
je
jns
mov
push
std
loop
jle
xchg
sbb
test
ficomps
pushf
in
dec
push
xchg
push
jo
int
stos
add
xchg
lcall
roll
xchg
jno
data16
lret
fsubrs
inc
jle
out
into
test
in
add
cld
dec
pop
mov
dec
add
fucomip
dec
pop
sbb
sub
mov
or
cmp
icebp
or
aam
push
pop
dec
push
imull
rcrb
js
xor
fists
andb
xorl
jb
inc
cs
push
out
pop
mov
movsb
test
inc
cmp
push
cmp
shr
clc
push
ljmp
jnp
loopne
sahf
loopne
inc
and
neg
mov
xlat
mov
mov
imul
pusha
insb
jmp
adc
subb
les
ret
push
mov
je
orb
in
test
dec
fldl2t
mov
mov
fcomps
scas
icebp
add
adc
jle
cmp
push
fs
iret
jle
adc
push
pop
jge
test
mov
mov
outsl
xchg
iret
fptan
into
andb
inc
ja
lret
pop
mov
mov
loop
mov
fbstp
orb
xchg
pop
mov
cmp
cmp
outsb
out
inc
or
push
inc
and
dec
cmpsb
jbe
sbb
jmp
and
pop
mov
lods
in
xchg
sbb
rorl
das
pop
sbb
mov
jnp
sub
add
push
mov
out
lret
mov
inc
jecxz
daa
pop
dec
jge
jmp
inc
cli
scas
push
jns
or
rep
xor
adc
mov
arpl
xlat
add
int
xor
xchg
mov
into
imul
ds
loop
fwait
and
and
xchg
dec
push
dec
int3
push
jae
push
mov
mov
mov
push
mov
icebp
pop
adc
cmpsl
out
xchg
pop
imul
imull
ret
mov
jmp
js
push
xchg
pop
and
insl
movsl
pop
daa
pop
and
aam
mov
adc
push
jno
rcr
xor
jp
lock
xor
notb
mov
sub
pop
push
jne
and
sahf
inc
push
add
mov
cs
popa
dec
aad
mov
xchg
rcrl
out
xor
inc
cmp
test
jb
add
fcmovu
aad
movsb
add
sbb
jge
mov
mov
pop
add
jns
enter
ffree
sub
out
cmp
mov
adc
imul
adc
sbb
push
hlt
cli
and
in
xchg
pcmpgtd
int3
push
arpl
out
push
popf
stos
fs
sbb
mov
jae
inc
add
sbb
insl
repnz
test
ficomps
jg
sbb
and
aaa
mov
sub
jmp
push
jg
iret
pusha
xor
add
jno
sbbb
jmp
scas
data16
fucomip
loop
sahf
jnp
aam
mov
jl
pop
inc
add
mov
incl
lret
inc
shl
jp
and
leave
add
jno
xor
push
and
pushf
mov
pmulhuw
push
push
fdivrs
xor
dec
sbb
lock
cld
jmp
add
shlb
mov
call
insl
pop
cmp
cwtl
dec
outsl
cli
push
adc
push
fst
and
mov
xor
int3
clc
pop
dec
xchg
movsb
inc
sbb
sbb
por
jle
cmpsl
jae
cld
sub
cld
push
xchg
mov
xchg
or
in
dec
std
cmp
sub
orl
mov
dec
and
movntps
pusha
repz
dec
xchg
nop
push
mov
ja
pop
mov
pop
dec
sub
fwait
push
nop
and
jge
xlat
cmc
fmul
cmpsb
aas
arpl
push
xchg
adc
mov
push
xchg
dec
mov
sub
icebp
xchg
or
push
lret
test
push
subl
xor
push
push
dec
mov
in
add
lds
push
sub
inc
lods
inc
push
mov
mov
notl
out
inc
push
dec
pop
push
loopne
outsb
rolb
fistps
add
enter
aam
xor
push
xor
das
and
add
or
scas
es
mov
mov
test
fidivrs
xor
loop
stc
sbb
push
sbb
sbb
shll
and
hlt
mov
loop
mov
mov
mov
es
imul
imul
push
and
ljmp
push
dec
jg
xor
dec
in
pop
popf
das
lea
mov
out
dec
jge
insl
fistps
sub
jg
dec
in
pop
popf
das
lea
mov
out
dec
jge
insl
fistps
sub
jg
dec
in
pop
popf
das
lea
mov
out
dec
jns
insl
fistps
sbb
jmp
dec
in
pop
popf
das
lea
cmp
out
mov
xlat
iret
insl
test
daa
test
jo
pusha
cmpsb
les
lret
in
hlt
movsl
cmp
stc
dec
divb
jo
fs
fwait
or
xor
sti
aam
in
hlt
stos
test
sarb
jnp
gs
je
jbe
push
or
xor
fnstsw
dec
cld
sbb
mov
inc
pop
ja
sbb
addr16
jl
push
movsb
popl
push
popl
pop
pop
sahf
js
inc
pusha
shlb
cld
jle
dec
fldt
dec
out
lods
pop
repz
push
movsb
sti
hlt
inc
addr16
dec
out
mov
mov
scas
fs
dec
mov
xchg
int3
mov
xlat
pop
stos
and
lret
xchg
mov
push
mov
movsl
mov
mov
inc
jno
lcall
stos
test
rcrb
stos
pop
fwait
movsb
stc
cmpsb
cmp
xchg
push
fnsetpm(287
and
inc
push
sub
sbb
iret
lods
rcr
stos
mov
pop
int
push
cmp
ja
mov
cmp
mov
es
inc
xor
movsl
in
sub
ds
fwait
pop
mov
or
fcom
sti
lret
std
mov
stos
test
xchg
mov
dec
xchg
jge
insl
dec
sbb
or
jg,pt
cltd
les
xchg
lds
cli
rorl
sub
push
sbb
adc
push
push
jg
pop
pop
jmp
jae
mov
fcmovu
out
call
xor
add
jbe
je
adc
inc
pop
inc
cltd
enter
lcall
movsb
fwait
mov
inc
jnp
dec
fs
je
add
adc
and
xor
sti
aam
in
hlt
stos
test
mov
inc
jnp
dec
fs
je
add
adc
and
xor
les
arpl
mul
pminub
and
mov
and
xchg
in
add
enter
enter
jo
mov
lfs
mov
fiaddl
sub
mov
sub
push
push
movsl
jecxz
in
and
mov
popf
xor
xchg
lock
xchg
jns
test
ret
or
fsubs
jl
loope
sbb
pop
dec
imul
sti
push
ret
scas
loop
cmp
inc
in
adc
mov
xchg
int
mov
mov
or
cs
add
mov
pop
sbb
fistpll
popf
aam
and
xchg
mov
adcb
out
mov
test
mov
jecxz
ret
xchg
or
pop
or
and
addr16
xchg
cwtl
xchg
push
sub
and
ljmp
jb
xor
inc
aaa
in
fidivrs
jo
push
jae
aaa
push
jmp
mov
lahf
aas
pop
sub
push
sub
leave
xchg
jbe
pop
cmp
aaa
add
sarb
add
scas
mull
inc
mov
or
jns
lock
dec
adc
mov
lcall
andl
dec
mov
add
push
xchg
outsb
cmp
fisubrs
jl
cmpb
xchg
jae
gs
add
xchg
sbb
xchg
mov
add
lahf
stc
mov
pop
xor
daa
mov
mov
stc
shlb
loop
popf
das
push
js
dec
and
mov
push
sub
adc
rcrb
pushf
arpl
adc
cmp
xor
cmc
xor
mov
xchg
mov
adc
je
pop
in
pop
test
and
mov
xor
push
insb
pop
fidivrs
mov
ret
imul
push
lcall
into
or
loope
jmp
add
pop
test
mov
sahf
popf
pop
aam
loope
add
fstpt
fwait
mov
cmp
lahf
aaa
mov
cmp
sbb
adc
add
int
dec
cmp
out
mov
sbb
jo
call
cmc
pop
adc
insb
dec
out
push
mov
inc
sub
nop
leave
or
adc
fidivrl
ror
hlt
fs
arpl
int3
mov
xorl
sbb
adc
adc
push
xchg
jno
shrl
jecxz
xor
fisubrs
stos
and
dec
xor
outsl
ficomps
jno
orb
push
mov
cli
out
adc
jne
pop
out
insb
jno,pt
scas
aas
and
jl
mov
orl
xlat
mov
scas
inc
sub
jbe
mov
push
jmp
mov
incb
xchg
mov
or
inc
jnp
dec
enter
jp
dec
out
in
lods
insl
jg
lcall
repz
jb
jp
outsl
in
mov
test
pop
and
mov
fcoml
sub
jo
push
xor
ret
shlb
leave
pop
dec
cmpsb
dec
faddl
xor
outsb
lahf
gs
dec
mov
or
das
mov
enter
pop
push
push
push
xor
adc
cld
or
mov
xlat
fwait
or
fisubrl
mov
lret
fcmovne
stos
mov
test
divb
lahf
cmp
imul
ret
xchg
sbb
frstor
out
movsb
cli
mov
enter
ret
leave
cmp
std
mov
xchg
xchg
push
lea
sub
in
ja
rolb
and
lods
cli
or
rolb
push
ficompl
bound
xor
push
or
mov
xor
add
stc
mov
enter
jp
jg
repnz
cmp
mov
push
add
xchg
cld
icebp
insb
mov
in
mov
lcall
idivl
mov
cmpsl
mov
bound
jl
sub
daa
and
cmp
sub
cmp
and
mov
pop
orb
jg
sub
call
int
mov
cmpsl
xor
leave
jne
call
push
xchg
fldcw
out
test
push
xchg
and
sbb
lret
lret
pop
ret
cld
xlat
ja
pop
jg
ds
pop
dec
dec
aam
scas
aam
adc
push
cmpsb
xor
mov
pop
jo
pop
jae
pop
or
or
dec
add
clc
mov
out
or
push
fldenv
clc
mov
hlt
aad
subl
nop
js
scas
jp
cld
mov
mov
xchg
jmp
lea
jge
push
sarb
loope
adc
fwait
cmpsb
cmpsl
xor
mov
out
test
sti
xor
mov
inc
dec
xchg
push
mov
mov
push
inc
push
adc
add
shlb
fcmovnbe
shl
ds
iret
sar
int
dec
cmp
rcrl
jns
out
xor
arpl
xlat
or
push
jle
out
jmp
in
mov
scas
nop
adc
ljmp
xchg
in
xorl
adc
inc
ds
adc
or
or
add
jb
mov
or
out
sbb
push
and
and
js
push
scas
loop
insl
outsb
pushf
mov
push
sti
mov
dec
shrl
sbb
and
adc
dec
jne
lret
iret
dec
cmp
push
scas
ret
pop
sub
cli
dec
test
jnp
and
jecxz
xchg
insb
loop
jl
leave
adc
mov
test
xchg
sub
cmp
lea
sub
iret
add
mov
fbstp
jb
mov
mov
xor
out
std
int
movzwl
addl
cli
test
int
inc
mov
sarb
hlt
mov
or
sti
sahf
leave
sbb
cmp
mov
mov
adc
and
sub
push
insl
xor
or
sub
mov
mov
sub
fidivs
in
call
ss
and
push
pop
push
sbb
mov
cmp
sbb
ja
pop
xor
cmp
pop
test
dec
cmp
inc
nop
fistl
mov
sbb
sub
scas
rcrb
mov
add
push
mov
mov
daa
aam
xchg
add
into
sbb
sbb
mov
pop
std
mov
icebp
cmp
add
cmc
or
inc
js
or
sub
inc
pop
jmp
out
push
pop
insl
cmc
mov
in
mov
xchg
mov
scas
pop
sbb
mov
inc
repz
cmc
mov
jl
pop
imul
sbb
xor
xchg
jge
xchg
lods
mov
add
push
ja
inc
imul
test
mov
sbb
shrl
add
xor
test
sti
mov
jp
push
add
and
lea
lea
xor
mov
gs
test
jge
inc
push
dec
and
mov
lods
sub
cs
adc
xor
rclb
gs
inc
pop
sti
lods
nop
gs
inc
xor
mov
in
std
sbb
inc
cmpxchg
in
mov
mov
mov
enter
mov
cmp
xor
sahf
xchg
popf
sahf
mov
xchg
mov
sub
out
fisubrl
test
pop
mov
lahf
jge
push
sar
loopne
push
mov
repnz
sbb
and
pushf
push
mov
movsb
xor
jb
jae
ficompl
jecxz
js
mov
cltd
xor
les
ja
outsb
mov
pop
jl
xlat
sub
fs
xchg
add
inc
fcomp
push
daa
shrl
sub
jg
mov
stos
mov
mov
shrb
jns
fs
pop
rcl
jae
xchg
lods
into
leave
imull
and
ja
insb
and
mulb
cmp
sub
dec
outsl
cmpsl
pop
jbe
dec
repz
adc
inc
loopne
sub
sub
fucom
popa
dec
inc
pop
sarl
add
ja
sbb
pop
push
les
das
imul
pop
add
test
lea
jbe
xchg
imul
inc
lds
and
pop
fs
mov
lock
cmc
sahf
popa
adcb
xchg
cld
test
mov
dec
cmpsb
xchg
adc
in
sar
add
aas
push
cmp
testb
push
mov
mov
pop
mov
stc
test
sbb
lret
or
adc
cmp
enter
jmp
stos
aad
aam
fcoms
loopne
in
bswap
imul
dec
sbb
lds
sbb
jecxz
std
in
xchg
pusha
ds
inc
or
ficoml
rol
mov
sbb
scas
shlb
cmp
and
lock
lcall
adc
xchg
lahf
xlat
out
add
xlat
je
mov
dec
dec
aad
push
movsl
clc
adc
cld
nop
dec
add
inc
jle
and
or
rcr
fstpl
loope
mov
ss
xlat
loop
pop
shl
sahf
adcb
lret
mov
lret
sub
inc
loopw
dec
jp
iret
add
inc
test
arpl
mov
imul
sbbl
xor
cwtl
int3
sub
sti
shlb
mov
repnz
or
cmpsl
mov
das
mov
xchg
sub
xor
add
sbb
or
movsl
in
adc
xchg
mov
jbe
mov
adc
jecxz
arpl
int
cltd
xor
jge
in
jge
leave
mov
jmp
int
mov
add
rcrb
xlat
xchg
std
cli
mov
jge
add
jne
xor
sti
jle
adc
xor
dec
imul
sub
mov
xchg
in
out
or
mov
popf
cmp
pop
push
pusha
sbb
jge
add
out
outsl
sub
out
push
out
xchg
insl
mov
out
sbb
inc
pop
pop
pop
dec
iret
cmp
ljmp
and
xchg
jns
jp
mov
sahf
andb
mov
jno
imul
mov
mov
mov
and
jo
ss
repz
pop
push
and
loope
call
sbb
clc
jae
jns
xchg
scas
fnstcw
test
popf
jecxz
sub
xchg
xchg
mov
add
sub
loop
mov
jp
push
mov
lds
mov
and
add
mov
ljmp
rcrl
mov
in
dec
fdivs
xchg
adc
outsl
xor
adc
add
rorl
insl
push
arpl
rclb
insl
add
arpl
cli
pop
stos
jns
pop
jmp
call
sub
jne
mov
lahf
ficompl
pop
mov
jb
cmp
clc
jl
sub
mov
inc
pop
mov
mov
mov
out
sbb
pusha
xchg
lcall
sbb
lahf
pop
and
mov
xorb
xor
xor
pusha
jge
popa
addr16
fidivrs
jle
xchg
dec
or
loopne
inc
fisttpll
popf
cmc
xchg
add
add
xlat
data16
sub
aam
bound
jmp
ja
sbb
insl
ds
jecxz
movsb
mov
xlat
fs
xchg
sti
aas
mov
jp
pop
out
mov
inc
ss
push
aaa
jg
xor
pop
inc
xor
add
fs
pusha
inc
inc
or
stos
dec
lock
push
test
fcmovu
add
xchg
lahf
dec
sub
enter
xor
popa
lcall
mov
and
mov
and
and
ja
je
mov
fsubs
lds
jmp
mov
call
push
mov
add
cmp
cmpsl
cmpsb
jmp
cmc
mov
xchg
test
cmp
in
inc
sub
out
aaa
bound
test
in
dec
mov
bound
gs
in
or
iret
out
mov
mov
inc
cmp
cmp
dec
pop
sbb
scas
popf
sbb
mov
lcall
push
mov
inc
jg,pn
pop
mov
loop
call
mov
sub
mov
dec
in
in
or
xor
mov
xor
dec
push
fmul
or
cmp
stos
mov
add
lods
ds
mov
mov
pop
inc
aaa
sbb
add
into
jl
mov
daa
sbb
cmpl
and
xchg
or
fistpl
cmp
inc
and
sarb
mov
mov
fwait
adc
and
stc
jbe
or
cmp
inc
sub
out
and
arpl
jbe
pop
sbb
adc
cmpsb
mov
add
sbb
leave
mov
test
dec
dec
iret
cmp
inc
push
adc
pusha
test
sub
cli
stos
filds
arpl
call
popa
lods
mov
xchg
test
fabs
jl
adc
add
repnz
pop
adc
outsl
lret
cmpsl
dec
mov
xor
leave
out
push
mov
stos
dec
aad
movsl
dec
pushf
adc
int3
cmp
insl
add
insb
icebp
lods
add
push
push
jnp
sahf
imulb
lock
push
dec
add
jge
push
fisubrl
jne
dec
dec
xor
rcl
jnp
mov
mov
aas
adc
pushf
sub
gs
ret
jmp
mov
sub
out
ss
jae
inc
std
mov
ud1
movsb
call
pushw
sti
xchg
pop
mov
jmp
jg
xchg
mov
int3
in
xor
xor
cltd
loope
sbb
dec
pop
test
aaa
xlat
mov
negb
imul
xchg
jle
cmp
call
push
lods
mov
xchg
inc
lea
fldenv
jo
xlat
fisttps
sarl
cmpsl
outsl
stc
xor
lahf
dec
fdiv
push
lret
sub
aad
mov
rcl
leave
xor
push
mov
pop
push
or
jb
mov
negl
das
adc
cmpsl
int
sub
lret
pusha
push
inc
pop
jae
test
cld
aam
mov
sub
js
pop
cmp
mov
or
pusha
scas
test
or
jno
adc
sbb
fimuls
mov
outsl
mov
xor
sub
gs
mov
sub
mov
jge
push
lods
cmp
mov
cmpsb
sti
lret
sbb
pop
xor
jg
roll
or
xchg
sub
xchg
push
enter
xchg
pop
mov
push
push
push
add
cld
lahf
jb
in
rcl
in
inc
sbb
push
adc
fwait
cmp
or
ficompl
call
and
pop
xlat
pop
popf
dec
sbb
add
int3
ficoml
mov
sub
adc
push
push
mov
inc
sbb
pusha
pop
jp
mov
push
add
xchg
inc
ja
or
sbb
rcll
das
lods
xor
adc
fcomps
ss
sub
mov
sub
pop
cmp
pop
sub
lret
mov
xchg
scas
xor
xor
jmp
stc
mov
addb
add
rolb
popa
sbb
mov
lods
lods
call
popw
mov
sub
mov
pushf
mov
les
fs
pop
adc
arpl
in
push
mov
shlb
loop
pop
pop
clc
xlat
jmp
mov
or
mov
push
and
stos
adc
mov
xchg
das
or
ds
mov
inc
mov
mov
or
loop
cli
js
xor
ss
inc
sub
dec
std
sbb
fimuls
mov
mov
cmpsb
popf
pop
adc
pop
out
pop
aaa
mov
and
dec
pop
rcrb
daa
push
or
ret
mov
lock
sub
lret
outsl
out
mov
movsb
mov
sbb
in
lahf
cltd
sbb
aaa
add
push
cvtps2pd
dec
dec
jge
ljmp
sarb
jge
inc
ficoml
loopne
cmp
test
nop
mov
fs
dec
jg
lock
lahf
shl
dec
lock
rorb
nop
inc
mov
add
inc
mov
jmp
stos
push
shrl
dec
icebp
loopne
add
dec
xchg
cmp
loop
cs
xchg
mov
dec
mov
bound
xchg
pop
jae
push
ret
out
loope
test
in
mov
aam
int
orb
std
push
dec
xchg
imul
mov
rol
sbb
clc
and
into
jp
cmp
test
fs
int
test
sub
std
sbb
mov
jb
fsts
inc
sbb
cmp
adc
mov
or
xor
and
hlt
xor
stc
testl
mov
sub
xchg
lods
lret
add
loope
int3
shrb
sbb
cmpb
inc
mov
cmp
or
arpl
mulb
mov
pop
fisubrl
scas
sbb
lret
es
jg
push
movsl
out
fildll
test
mov
dec
jmp
jbe
push
xlat
xchg
jns
sbb
lods
adc
popf
mov
fstps
pop
jecxz
xor
icebp
xchg
fbld
inc
addr16
stos
shr
aam
sub
and
push
jbe
icebp
mov
and
jae
cmc
lret
enter
cs
or
repz
ret
lret
jl
add
mov
sbb
push
fdivl
dec
hlt
daa
addl
dec
add
test
jbe
jp
lcall
in
mov
push
jmp
fisubrl
push
jns
comiss
xor
inc
lea
js
ss
fs
enter
dec
mov
in
xchg
in
mov
mov
push
jge
and
fwait
pop
inc
mov
push
lea
jmp
pushf
ss
ss
in
jns
daa
std
das
ja
and
and
or
cli
repz
sbb
xchg
mov
scas
lds
adc
pushf
stc
out
adc
mov
cltd
pop
mov
in
sub
push
mov
cmpsl
sbb
add
add
pop
or
or
dec
sti
or
int
testb
xlat
popa
in
add
sbb
mov
push
sarl
lea
push
das
aaa
in
popa
jmp
push
mulb
and
test
add
fimuls
mov
adc
pop
jg
mov
sub
mov
push
inc
and
int3
test
or
cmp
fwait
mov
aad
and
sbb
jne
pushf
and
cmpsb
fsubr
adc
jae
and
mov
aam
push
adc
cmp
add
jbe
mov
fisubrs
stos
ds
pop
mov
jl
sbb
sub
sbb
xor
pop
push
cmp
popf
push
dec
test
aad
cld
push
stc
mov
call
mov
out
jp
push
cwtd
shlb
mov
cmp
rcrb
out
mov
clc
mov
sub
pop
push
mov
lcall
cmpsl
jbe
sbb
mov
adc
push
arpl
push
shl
mov
loope
and
out
rcrl
cmpsb
imul
or
test
pop
outsl
xchg
stc
pop
inc
adc
rcl
inc
push
dec
mov
out
gs
xor
mov
mov
lret
jp
adc
lock
mov
sbb
negb
mov
fldenv
shl
mov
ja
mov
xchg
xor
call
aam
lods
loop
cmp
pop
dec
xor
sub
hlt
test
mov
adc
push
adc
cwtl
sub
fwait
lret
jb
fimull
test
cmp
sub
imul
inc
cmpsb
pop
aaa
mov
stos
adcb
adc
push
loop
jbe
clc
lret
fiadds
push
imul
xor
cmp
inc
inc
mov
inc
out
sbb
test
lea
test
call
mov
mov
out
arpl
in
in
loop
shll
sahf
das
lods
mov
mov
sarb
push
mov
cmp
sti
rcr
loopne
sbb
cli
inc
lret
scas
xor
cwtl
cmp
rcrl
xor
rcrl
xor
add
sub
cmp
or
mov
inc
int3
mov
add
into
mov
adc
inc
lock
cmpl
pop
in
aad
cmpsl
nop
sub
gs
adc
lahf
pop
cmp
jnp
sub
cmp
shlb
into
sub
add
popa
inc
fidivs
test
je
fcomi
cmc
ret
inc
or
xor
aad
pop
jge
stc
popa
add
outsb
imul
cli
lods
sub
sub
fbstp
xor
inc
mov
inc
inc
mov
fidivrs
push
push
stos
sbb
int
out
stc
cmc
loop
imul
hlt
stos
test
mov
inc
jnp
dec
fs
je
add
adc
and
xor
sti
aam
in
hlt
stos
test
mov
inc
jnp
dec
fs
je
add
adc
and
xor
clc
aam
in
hlt
stos
test
mov
inc
jnp
inc
fs
jo
add
adc
and
xor
rcl
inc
loopne
hlt
stos
test
je
inc
test
loope
pop
add
imul
in
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
sub
adc
sbb
or
add
adc
aam
hlt
jmp
sti
jns
movsb
sbb
jnp
dec
and
sbb
in
fwait
hlt
sub
sbb
imul
dec
cs
push
stos
les
xchg
xlat
xchg
repnz
add
or
ja
mov
cmpsl
mov
sub
cmpsb
pop
pop
scas
pop
mov
jmp
mov
push
adc
mov
cmpsb
lret
push
cmp
sub
movsb
adc
cli
lret
pushf
das
push
stc
jnp
xor
loopne
push
in
rcl
outsl
stos
mov
pop
or
jo
jae
inc
cmp
sbb
outsb
and
in
mov
jne
icebp
cmc
adc
mov
enter
test
xor
jnp
enter
inc
out
orl
out
mov
neg
cmp
mov
nop
movsb
test
push
pop
xor
je
mov
mov
dec
pop
fsubp
enter
adc
je
add
adc
and
cmpsb
stos
les
enter
jp
mov
dec
cmp
jb
imul
jae
xchg
movsb
mov
xchg
ljmp
fisttpll
pop
adc
ja
imul
xor
pop
into
movsl
ljmp
lret
xchg
xchg
cmpsl
shrl
or
daa
dec
jnp
dec
and
xor
les
hlt
jmp
sti
xchg
lret
movsb
sbb
jnp
dec
and
xor
les
hlt
jmp
sti
xchg
lret
movsb
sbb
xchg
arpl
xchg
adc
cld
jb
xor
sbb
es
xchg
mov
notl
aam
lcall
sti
push
mov
ret
fnstenv
add
shl
xor
mov
cmp
mov
mov
ja
fstl
push
lret
ljmp
xor
inc
int
dec
jl
fs
ficompl
pusha
outsl
inc
loop
mov
jge
dec
mov
mov
loopne
outsl
imul
mov
das
sbb
ss
mov
dec
sbb
and
xchg
repz
cld
fnstcw
xor
cmp
dec
sub
sahf
and
mov
inc
pop
ret
cs
cmp
sbb
jns
xchg
jae
nop
std
add
lds
xchg
push
gs
add
and
icebp
cmp
je
std
imull
push
push
inc
in
stos
fwait
out
inc
xor
mov
cmp
cmpb
mov
xlat
pop
add
xchg
movlps
aad
stc
jmp
or
jecxz
mov
jecxz
out
popf
xchg
out
jns
lods
pop
std
mov
lock
and
and
inc
cli
or
sbb
movsl
ds
jno
xor
loope
scas
cmc
jmp
xor
xor
jb
leave
mov
into
dec
push
lret
xlat
aaa
test
lock
bswap
xor
inc
cmp
xor
xchg
mov
jge
out
adc
daa
cli
or
std
sarl
ret
call
sub
mov
add
xchg
add
fadd
add
push
push
add
nop
in
in
arpl
pop
cmp
jae
cmp
pop
mov
adc
inc
or
pop
xlat
ljmp
jae
cmp
leave
arpl
insb
scas
xchg
pop
cli
xor
xor
mov
push
inc
inc
popa
aam
or
mov
push
or
pusha
xlat
or
or
and
fbld
adc
mov
pop
sahf
test
sub
push
inc
cmpb
clc
out
fildl
stc
mov
lods
fistpl
dec
inc
test
dec
pusha
pop
dec
test
es
adc
shll
cmp
data16
outsb
cld
mov
pop
imul
mov
fistpl
mov
push
xchg
mov
xchg
dec
and
lds
inc
test
lods
dec
sahf
pop
xorb
aad
mov
clc
movsb
fldt
push
sahf
test
push
pop
inc
test
cmp
push
mov
js
shlb
dec
ja
xchg
and
mov
xchg
stos
ljmp
sbbb
call
sbb
lds
sub
aas
jne
mov
dec
dec
adc
pop
push
jo
mov
fimuls
or
gs
dec
mov
dec
jno
rorb
jle
mov
jge
pop
enter
inc
jnp
in
cwtd
mov
je
push
stos
jp
inc
leave
jge
or
jl
or
sub
or
popf
xlat
mov
repz
and
fiadds
sub
jns
push
mov
fmull
push
pop
cmp
xor
push
lea
push
scas
out
loop
push
mov
clc
xchg
imul
pop
daa
shll
adc
mov
push
mov
xor
pop
fsts
xchg
xchg
test
popa
dec
xchg
dec
es
in
add
cmp
sub
loope
test
mov
mov
adc
dec
cmp
pop
inc
xor
inc
ds
inc
mov
xchg
lcall
jle
lret
xor
sbb
pop
push
cwtl
cmpsb
lock
fs
inc
loope
movsl
cld
in
std
neg
cmp
inc
dec
popf
aas
or
xor
outsb
jne,pt
xchg
mov
jno
inc
sub
lret
jno
int
mov
iret
jmp
pop
or
cwtl
and
std
pop
fcomps
mov
xor
sbb
mov
xchg
inc
jg
aam
pop
aas
push
pusha
sbb
and
cwtl
xor
add
shlb
movsb
cmc
dec
sub
inc
pop
ret
aad
mov
xchg
sub
and
push
and
or
cmp
lock
imul
and
aam
push
cli
sbb
hlt
clc
pop
adc
sub
gs
std
mov
call
mov
cld
and
ret
out
pop
jo
test
sahf
cmc
shll
push
push
lret
xchg
and
or
and
cli
dec
jge
insb
adc
sti
cmp
or
outsb
cmp
fs
xor
aad
xchg
mov
sub
out
ret
jle
inc
mov
push
outsb
push
aam
push
lahf
in
addr16
in
pop
popa
jbe
mov
pop
scas
out
call
mov
enter
test
aas
xchg
mov
mov
dec
jo
fdivrp
int3
fs
dec
aaa
and
mov
loope
shrb
enter
idivl
cmp
loope
xchg
loopne
mov
jns
mov
clc
push
adc
lds
lods
jg
fdivl
sub
pop
daa
shrl
mov
push
cmpsb
dec
dec
push
cltd
jl
sbb
lea
negb
sbb
stos
pop
cltd
aas
push
stos
jp
imul
scas
int
sbb
pop
in
xchg
dec
clc
jp
imul
mov
pop
cltd
aaa
jmp
inc
cli
mov
dec
sbb
jge
pop
or
jp
lret
fistpl
clc
out
add
xchg
inc
idivl
push
dec
mov
mov
jge
pop
or
lock
xor
xlat
out
fisubs
xchg
sub
push
cmp
fldl
cwtl
iret
xchg
adc
xlat
adc
cmp
pop
mov
push
cli
mov
mov
in
jnp
mov
ret
std
daa
pop
push
inc
and
sbb
das
cmc
ret
and
hlt
cs
xchg
add
push
mov
clc
cmp
sbb
mov
xchg
inc
loopne
dec
dec
fwait
in
call
pop
in
pop
mov
xor
xor
or
and
rcrl
ret
push
iret
mov
push
push
xchg
or
mov
cmpsl
sbb
mov
xor
cmp
cmp
les
mov
fstpl
xchg
dec
push
sub
xor
dec
mov
push
cmp
or
mov
lcall
push
loopne
adc
scas
dec
mov
addr16
cmpsb
dec
test
inc
push
or
out
in
sahf
add
das
or
fisttpl
movl
filds
push
negb
in
mov
outsb
push
pushw
cld
adcl
ret
mov
jle
ret
sbb
fs
push
add
and
mov
out
sahf
icebp
push
dec
aas
lcall
xchg
push
outsb
mov
dec
add
xor
mov
sbb
out
sub
fadd
sbb
mov
mov
daa
outsl
push
pop
sbb
mov
ja
lret
mov
push
sarb
scas
jbe
mov
lea
rolb
ja
nop
pushf
mov
cmc
adc
mov
mov
popa
scas
insl
dec
xor
sbbl
xchg
sarl
mov
loop
xor
or
sti
mov
sub
fsts
fcoms
mov
scas
repnz
setno
pop
mov
mov
shlb
fabs
pop
mov
cmc
insl
push
mov
lea
mov
outsb
jecxz
addr16
aaa
mov
fnstcw
data16
popa
nop
outsb
shr
mov
push
cmp
cmp
ret
ret
fisubrl
mov
jae
pushf
dec
cmc
jmp
jge
push
pushf
stos
push
sbbb
fsts
loop
loope
iret
rcrl
dec
push
cli
jae
aas
cmp
mov
loopne
and
jne
addl
pop
mov
fnstcw
pop
leave
jg
push
out
xor
lahf
pushf
jno
jmp
pop
fwait
stos
pop
test
popa
scas
add
repnz
or
mov
int3
pop
andl
roll
int
iret
lea
daa
push
jno
movsl
in
xchg
push
mov
jmp
cli
daa
adc
lsl
xchg
dec
pushf
rol
decl
aad
push
rcrb
icebp
sbb
mov
fcoms
repnz
mov
cmpsl
mov
mov
out
mov
xchg
lock
popf
addb
out
fwait
sub
mov
cmp
jecxz
mov
jbe
pop
es
inc
cmp
pop
and
mov
mov
push
int3
xchg
out
add
dec
jp
call
xlat
aad
cmpsl
or
adc
mov
imul
ds
jge
nop
xchg
cmp
mov
mov
cmc
jmp
add
fwait
xchg
test
mov
cmp
fwait
aad
dec
xchg
xorl
fwait
dec
pop
fcoml
or
in
dec
dec
pop
negl
add
xor
cmp
or
mov
rclb
es
or
mov
loopne
mov
movsl
into
dec
push
loop
push
jae
or
test
lahf
xchg
insl
loopne
nop
iret
mov
lods
arpl
sbb
outsl
imull
inc
add
and
in
ds
jecxz
jne
adc
dec
jno
push
sbb
out
pop
jmp
jns
insb
cmp
and
lret
add
sbb
leave
faddp
aas
xlat
adc
iret
imul
sbb
insl
out
jb
clc
pop
xor
cmp
jns
adcl
pop
adc
inc
adc
and
xchg
sbb
popa
subl
ja
movsb
mov
dec
test
idivb
or
push
lea
stos
cwtl
sub
dec
das
push
mov
call
ss
popa
dec
out
lods
xor
jecxz
pop
testb
pop
xor
aaa
in
mov
sub
adc
xchg
ret
pop
sub
scas
mov
jns
pushf
xor
data16
int3
cmp
mov
stos
scas
and
test
cmp
je
test
jp
movsb
xchg
jbe
adc
push
xchg
aam
shlb
add
stos
in
faddl
mov
sub
decb
nop
in
and
fcoms
add
inc
adc
xor
or
dec
cmpsb
and
mov
fs
mov
cld
cmc
mov
push
adc
adc
fcompl
push
movsb
sub
sbb
xchg
into
subb
dec
out
cmp
mov
jg
mov
lret
xor
les
aad
and
mov
fcom
repnz
popa
pop
sbb
inc
popf
dec
jnp
push
js
ret
or
repz
xchg
insl
ja
ja
rol
into
push
imul
adc
cmp
push
into
pmulhw
dec
addl
movsl
fists
mov
shld
sbb
mov
sarb
push
inc
or
pop
fwait
ret
mov
inc
mov
repnz
push
push
out
pushf
xlat
loop
jno
mov
xchg
or
cmp
dec
dec
dec
jne
push
xchg
not
cmp
mov
loop
or
adc
gs
insl
or
inc
imul
xor
data16
pop
lods
fadds
bound
inc
frstor
jmp
stc
data16
xor
fwait
ljmp
call
mov
adc
fisubrl
rorl
test
sbb
pop
cmp
mov
mov
cltd
mov
pop
adc
imull
sti
push
lds
lods
sbb
fwait
xor
and
pusha
gs
dec
imul
aam
cmpl
mov
pop
or
inc
pop
in
adc
insb
inc
repnz
loop
fs
pop
xchg
lcall
sbb
je
and
sbb
lret
in
xchg
in
imul
push
lods
sub
testl
mov
pop
mov
notl
lods
add
adc
sbb
lods
roll
div
lock
mov
push
or
testl
xlat
inc
dec
pop
das
ret
push
add
mov
inc
push
mov
mov
xlat
or
sub
jnp
xor
cmp
pop
lret
neg
jbe
test
aas
pusha
adc
sub
aam
pop
in
mov
cmp
xchg
es
pop
and
xchg
mov
cmp
inc
ja
push
sti
das
or
popa
fists
cmpb
movsl
aam
or
repnz
in
cwtl
mov
cmpb
call
inc
pop
pop
xchg
clc
sbb
js
mov
mov
cmp
cs
scas
ds
push
clc
popa
fstl
lock
add
gs
lods
or
push
ja
popl
mov
lahf
xor
inc
and
push
jmp
push
adc
into
test
das
cmp
je
mov
mov
mov
test
push
mov
xchg
pop
and
pop
xor
and
sbb
xchg
mov
cmc
out
mov
shl
cmp
xor
pop
pop
jmp
aad
xor
pushf
mov
pop
mov
pop
fisttpl
push
cwtl
ja
mov
ret
fs
cmp
cmpsl
les
jg
test
or
jb
repz
mov
subl
jp
fdiv
dec
int3
imul
int
inc
push
rep
dec
ficomps
mov
gs
xchg
leave
sahf
arpl
xorb
and
jge
cmp
pusha
mov
out
mov
xchg
mov
xchg
jnp
insb
iret
pop
test
bnd
mov
sbb
inc
push
add
into
andb
in
aas
cmpsb
cmp
add
or
fcomps
pop
and
dec
mov
out
mov
cmpsb
dec
leave
out
movsb
xchg
fwait
aam
lods
xor
in
aaa
popa
and
mov
xor
mov
mov
xchg
push
test
fildl
movsl
into
adc
lcall
sub
aad
jle
dec
arpl
dec
leave
or
sbb
sub
jbe
cmp
or
mov
dec
movsl
movsl
shrl
or
hlt
jo
mov
xchg
std
adc
jae
sti
fcoms
sarb
push
xchg
imul
test
aad
insb
out
xor
fisubrs
pop
pop
cmpsl
sbb
adc
ja
in
xchg
pop
push
and
jne
cmp
lea
or
jo
cmc
inc
jecxz
sar
pop
mov
inc
mov
in
push
add
test
daa
sub
rcrb
iret
mov
fwait
xchg
loopne
jp
xchg
shl
popl
out
xor
pushf
ret
cmc
dec
popl
bound
ficoml
adc
add
or
and
imul
bound
inc
cmpb
pop
adc
inc
aad
lds
nop
pop
inc
lods
ljmp
je
pop
call
mov
mov
lcall
mov
ret
insb
cmp
xchg
xchg
fisubrs
fwait
add
rcrb
pop
fs
clc
mov
and
jo
loope
push
sub
jns
mov
sbb
into
mov
mov
dec
add
fcoml
sbb
push
rol
lret
cmpsb
inc
fstpt
insl
and
lock
imul
in
movsl
jne
mov
out
popf
cmp
jbe
xor
adc
cltd
mov
je
shlb
pop
in
mov
mov
nop
mov
mov
pop
push
mov
sahf
jmp
and
lods
jge
xchg
dec
lahf
std
jge
stos
sub
sbb
mov
in
pop
fildl
jecxz
in
loopne
pop
xor
and
mov
adc
movsl
in
std
mov
cld
fistpll
pusha
cli
bound
daa
mov
enter
lods
sti
cmp
cwtl
and
test
rorw
mov
inc
xchg
dec
movsl
loope
rcl
in
test
in
push
mov
xor
loopne
lea
andb
jbe
leave
mov
jbe
hlt
xchg
lods
lahf
mov
mov
stos
lcall
andb
xchg
rclb
xchg
adc
mov
push
aam
add
or
das
lock
mov
pop
outsb
into
in
ret
jmp
and
jne
jbe
jbe
nop
mov
sahf
inc
xor
cmpsb
mov
inc
or
dec
lods
jge
scas
or
ret
jge
iret
fldl
mov
xor
lea
jnp
imul
add
aaa
inc
add
mov
push
push
aam
mov
insl
and
and
mov
ds
int
repnz
cli
stos
mov
cmpsl
mov
int
dec
mov
jo
cmpsl
push
mov
pop
test
jne
add
leave
call
out
pop
xchg
andl
dec
xchg
mov
imul
shll
adc
pushf
data16
sbb
pusha
insl
mov
add
imulb
or
inc
xchg
popa
sbb
mov
daa
pop
movsb
sbb
gs
jb
adc
lahf
lods
dec
cs
mov
pusha
sub
mov
mov
jo
in
mov
jecxz
inc
jmp
mov
sarb
jg
jne
push
mov
les
cmc
mov
pop
enter
or
and
mov
jnp
sbb
fsubr
and
int3
aas
jo
lds
cmc
lcall
push
pop
ficompl
cld
in
mov
stos
cs
jge
jle
add
fcomp
je
fcmovb
mov
pop
es
sti
adc
mov
mov
inc
insb
loopne
add
and
bound
mov
xchg
cmp
mov
mov
es
dec
not
out
sbbl
inc
adc
pop
push
mov
push
sbb
test
xchg
lods
add
adc
mov
adc
adc
sub
in
cmc
cmc
call
sti
imul
lret
cs
or
pop
data16
arpl
mov
pop
iret
cltd
push
fcoml
fbstp
test
fwait
test
das
in
cmp
dec
inc
lods
sub
push
and
mov
xor
mov
scas
dec
clc
stc
jne
aas
shll
push
adc
out
and
scas
pop
or
mov
mov
gs
fldt
inc
add
xchg
jecxz
jmp
mov
xchg
sbb
nopl
pop
cld
xchg
lods
push
scas
popf
or
arpl
jge
mov
aam
jbe
adc
pop
in
xchg
idivl
test
enter
add
test
movsb
stos
jp
push
test
xchg
add
lcall
lret
mov
rcll
sbb
imul
fnstcw
adc
sub
sub
sub
stc
xchg
clc
sub
push
or
cltd
add
pop
outsl
cmp
je
sub
loopne
sbb
fwait
xor
addb
xchg
xchg
sbb
out
fdivl
cltd
and
shll
cmp
jb
xchg
insb
jg
mov
hlt
mov
mov
cwtl
mov
sbb
dec
mov
loop
xchg
div
dec
push
mov
xor
lahf
icebp
and
testl
inc
gs
scas
aas
daa
sti
pop
shr
inc
je
sbbb
mov
sub
push
sub
cmpsl
push
push
sarb
pop
in
andl
bound
addb
inc
sahf
mov
xchg
loopne
jmp
xchg
popf
adc
nop
jle
mov
scas
xor
xchg
dec
or
and
mov
inc
pop
movsb
in
test
sbb
fsub
inc
loop
and
dec
push
mov
mov
and
push
mov
movsl
mov
push
fmull
xor
loop
mov
stos
icebp
das
and
pop
pop
add
bound
enter
sbb
mulb
dec
cwtl
jecxz
sbb
clc
inc
push
lahf
cmp
pop
xor
sahf
pop
stc
xor
arpl
hlt
rclb
inc
mov
mov
enter
add
mov
insb
adc
cmp
adc
sbb
test
jns
lret
dec
ja
pop
lods
aad
jnp
xchg
mov
jae
dec
call
cmp
push
pop
jecxz
cmp
stos
push
xor
fcmovu
loope
stos
adc
loopne
cli
scas
pop
insl
jnp
push
and
jno
adc
jb
fwait
cwtl
mov
xor
lcall
push
push
jnp
pop
aam
arpl
jle
lret
adc
shlb
and
es
mov
inc
mov
add
push
and
shlb
ficomps
xchg
push
mulb
rcl
jl
outsl
data16
push
hlt
xlat
mov
push
inc
jmp
or
je
add
adc
and
xor
les
hlt
jmp
sti
xchg
lret
movsb
sbb
jnp
dec
and
xor
les
hlt
jmp
sti
xchg
lret
movsb
jl
jo
add
jg
and
xor
lds
std
jmp
sti
xchg
lret
lods
fistl
mov
sbb
add
adc
movsb
pop
hlt
stos
cmp
sbbl
stos
int3
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
imul
dec
push
pop
inc
and
dec
jle
push
add
repnz
loop
rcr
ret
mov
subb
bound
pop
inc
sub
cmp
or
sbb
jmp
sti
or
fcmovnb
stos
mov
mov
imul
dec
push
pop
inc
sub
cmp
or
sbb
jmp
fsub
mov
test
sbbb
sbb
and
insb
shl
nop
push
and
roll
sub
faddl
and
loop
xor
mov
notl
inc
push
sbb
xor
mov
rcll
adc
jle
jmp
out
push
pmaxsw
stos
mov
bound
insl
fwait
or
pop
loope
sahf
pop
inc
inc
xor
and
sbb
sbb
jbe
sub
mov
popf
into
xlat
cmpsb
mov
testl
repz
sub
cmp
insl
fwait
xorps
sbbl
inc
mov
scas
addr16
lods
xchg
ret
dec
cmpsl
call
subl
pop
inc
sub
cmp
or
sbb
jmp
sti
loop
rcr
ret
mov
jmp
sbb
sbb
and
push
fwait
xchg
sahf
xchg
mov
sar
shr
nop
jmp
sbb
push
sbb
dec
jp
inc
dec
gs
add
mov
lods
pop
rcr
leave
loop
icebp
rorb
jnp
or
xor
and
adc
add
repnz
loop
rcr
ret
mov
subb
bound
pop
inc
sub
cmp
or
sbb
jmp
sti
loop
rcr
ret
mov
subb
sub
loopne
add
adc
movsl
lret
adc
std
xchg
and
iret
repz
cmp
jne
pushl
test
adc
scas
mov
shlb
dec
stc
stos
les
jle
sbb
xlat
test
popa
fwait
arpl
xor
sub
repz
jmp
xchg
sbb
pop
xor
adc
adc
inc
sbbb
cmp
lods
into
shll
pop
mov
push
sub
insl
push
loope
cmp
mov
lahf
jno
pop
filds
into
adcl
cltd
insb
aam
cmpsb
js
stos
adc
mov
insl
nop
push
push
mov
jbe
sti
insl
fcomp
cs
lea
test
stos
popf
ror
jecxz
sbb
inc
test
push
or
jo
mov
or
lods
mov
and
cmp
adc
adc
ja
fistl
mov
shll
adc
mov
lret
jl
xor
push
mov
cmp
loopne
seto
cmp
add
cltd
leave
repnz
and
fimuls
jg
pop
lods
andl
pop
push
cmpb
divb
pop
jle
insl
push
aad
or
and
dec
movsl
push
sub
fildll
negl
mov
into
aam
fisubrl
or
cmp
push
xlat
dec
aas
sub
lret
and
jb
fstps
neg
clc
insb
adc
popf
int
cltd
adc
add
orl
cmp
inc
push
decb
mov
cmpl
je
ret
out
pop
insb
and
sub
movsl
aam
pop
data16
fcomi
sbb
cmp
scas
xchg
xchg
push
push
ds
insb
cltd
test
inc
jo
push
mov
jb
fisttps
or
repz
cmpb
xchg
repnz
mov
mov
cmp
mov
inc
xchg
js
jge
hlt
dec
pop
lahf
adc
fistpll
xchg
push
movsl
cmp
or
or
es
loop
mov
pop
imul
sbbb
call
or
sub
jmp
pushf
jae
fsts
mov
xchg
push
addl
pushf
ja
or
clc
sub
mov
pop
or
in
out
mov
sbb
sbb
add
out
lods
dec
mov
fs
rorb
in
or
sbb
dec
fists
push
lret
icebp
dec
rcrl
stos
xor
popf
jb
xor
lret
data16
jne
test
xchg
scas
enter
jmp
mov
xor
jb
sti
dec
xchg
lcall
mov
nop
jmp
xchg
push
mov
jp
lea
fnstcw
repz
mov
and
sarb
movsb
inc
and
mov
xor
shll
and
xchg
pop
aad
push
loopne
xchg
push
lret
mov
aas
rorb
pop
or
xchg
push
jle
adc
jmp
push
add
lock
int3
and
gs
dec
jbe
or
in
stos
xchg
aas
out
rcll
add
xchg
xor
xor
fnstsw
add
jmp
jg
popf
inc
xlat
lock
test
sarb
dec
xchg
add
fcmovu
lea
xchg
add
add
xchg
insl
lcall
pop
call
push
fs
push
xchg
ljmp
addr16
test
xchg
adc
cmp
push
insl
popa
cmp
int3
pop
adc
ljmp
jne
cmp
shrb
sbb
rcrb
xor
int
push
lret
fldt
and
int
sub
ret
push
lods
out
add
mov
loopne
cld
out
sbb
mov
rcrb
jnp
and
orl
dec
xchg
ss
mov
out
aad
shrl
insl
lds
xor
sub
cltd
pop
nop
cwtl
sub
in
sub
movsb
and
es
cli
addl
out
sub
mov
pop
loop
push
cld
std
dec
pop
out
jo
mov
and
sbb
and
mov
xchg
jl
fcoms
and
mov
sub
sub
xchg
leave
cld
dec
sub
addl
add
cmpsb
inc
lods
jnp
cmpl
int
jg
sub
fcomps
mov
xor
jbe
ljmp
das
scas
push
mov
hlt
sub
shrl
xor
rcrb
iret
and
cmpsl
in
adc
cmp
adc
push
jmp
xchg
or
and
ss
cltd
mov
nop
rorl
push
negl
push
loope
repz
mov
and
sub
adc
add
ret
sti
iret
push
das
jl
rcrb
insl
pop
dec
add
es
shll
lcall
fidivl
cli
jns
inc
pop
pop
out
inc
pusha
faddl
fildl
or
ret
jnp,pt
bswap
cmpsb
fldenv
mov
push
test
mov
test
sahf
cmpsl
and
lods
call
addr16
pop
divl
xchg
push
sub
andl
or
pop
cmpsb
and
jle
jl
jmp
mov
ja
jno
xlat
jne
or
bound
mov
xor
movsl
in
mov
inc
inc
notb
les
fsubp
int3
and
loop
inc
pop
rorl
and
paddsb
dec
adc
pop
mov
jne
push
and
add
in
scas
je
sbb
repnz
xor
out
dec
mov
xchg
into
push
sbb
dec
jo
add
gs
and
xor
jp
ret
rcll
jle
daa
lret
cmp
jecxz
sti
adc
adc
leave
lcall
icebp
adc
test
sbb
sbbb
lods
mov
mov
test
or
hlt
lahf
inc
shl
push
xor
add
fldcw
movb
mov
xor
es
mov
mov
repnz
sbb
xor
cwtl
scas
xor
out
int
or
mov
or
mov
mov
sub
push
pushf
adc
push
push
sub
idivl
push
je
mov
aaa
pop
adc
stos
xor
push
fs
scas
jg
dec
out
jp
int3
mov
stc
mov
xor
ret
jge
jmp
dec
adcb
testb
lahf
push
dec
dec
pop
and
adcl
mov
and
adc
dec
sub
popf
sti
repnz
popa
shll
mov
daa
mov
jb
lock
cltd
loope
mov
or
push
fdivs
fnstsw
das
sbb
lods
call
sahf
lcall
xchg
pop
xor
repnz
and
adc
mov
loope
data16
dec
leave
push
cmp
fs
cmp
jo
outsb
lods
sti
push
jle
adc
das
mov
pop
inc
mov
sbb
lods
jb
fldcw
mov
push
jecxz
out
mov
or
jmp
dec
xor
mov
fsubs
mov
aad
das
xchg
inc
adc
int3
jae
out
fisttpll
add
xchg
out
fdivrs
lret
push
scas
adc
jmp
xorl
mov
fdivrl
cli
cmp
xchg
adc
push
mov
repnz
push
mov
nop
aad
les
pop
subl
mov
mov
jns
jg
adc
insb
push
in
imul
call
push
inc
mov
nop
fiaddl
jae
imulb
mov
scas
in
test
mov
adc
es
mov
jge
mov
sub
dec
dec
pop
mov
adc
ljmp
in
in
out
dec
hlt
test
or
sti
mov
add
lods
cmpsl
xorl
add
lods
mov
rolb
out
filds
add
inc
pop
adc
dec
or
jecxz,pn
jmp
ljmp
or
test
or
xor
sub
xchg
loopne
fisttpl
pop
sahf
mov
mov
sub
in
sbb
clc
out
cmc
sub
lret
push
jle
test
je
jns
mov
jno
mov
sahf
in
es
aad
daa
jo
xchg
jp
inc
or
jnp
mov
gs
and
xor
pop
xor
push
cmc
and
stc
adcb
xchg
mov
pop
dec
loope
das
mov
arpl
xor
or
clc
adc
fsub
je
stos
stos
je
lahf
je
dec
push
loop
cli
and
movsl
mov
ficomps
sti
jg
cmp
aas
mov
lahf
js
jbe
lahf
inc
sub
or
rorb
jno
mov
jbe
push
sbb
daa
loopne
fcomp
jp
dec
sbb
shr
test
jbe
shll
mov
test
iret
jle
out
adc
adc
lock
jg
loopne
pushf
jecxz
fadds
mov
or
mov
data16
mov
xchg
push
clc
les
mov
addr16
jl
int3
std
adc
add
adc
loop
iret
add
cs
push
outsl
fldenv
cli
xchg
jbe
test
js
rcll
stos
cmp
pop
cmp
arpl
cmpsl
sarb
std
lret
mov
fcoms
dec
sub
jge
cmp
fucomp
fisttps
dec
push
inc
sub
nop
push
dec
xchg
popa
dec
adc
jae
mov
push
cmp
sub
addr16
out
xor
mov
roll
das
push
cmp
testb
mov
fcomip
sahf
loopne
divb
into
and
les
mov
push
jnp
dec
aaa
inc
mov
loop
sbb
jge
lds
or
pop
test
out
xchg
ja
mov
jns
dec
adc
mov
xchg
add
sbb
sbb
sub
sub
les
out
arpl
mov
mov
or
aaa
sbb
ljmp
scas
ljmp
test
add
ret
push
mov
and
and
sbb
push
insb
adc
adc
and
call
xchg
sub
movsl
push
and
jg
and
inc
push
xchg
push
es
adc
push
test
test
xchg
sub
jl
jo
lods
out
out
inc
lods
push
bound
cltd
js
pop
mov
sub
inc
or
mov
cmp
lea
xchg
lcall
mov
aam
popa
cmp
inc
mov
mov
inc
sub
aaa
mov
jbe
fisubs
push
xor
pop
mov
aaa
dec
lods
popa
jge
mov
imul
enter
testb
xlat
cmpsl
xchg
stos
fnsave
dec
push
push
cmpsb
mov
sbb
and
inc
ds
sub
cmp
xor
jmp
scas
test
fwait
leave
mov
rcr
inc
add
cmp
mov
ss
stos
mov
lea
jns
pop
fstl
test
lret
pop
inc
idivb
jnp
mov
xorl
fldl
arpl
pop
mov
loop
inc
dec
jle
and
bound
xor
sbbb
jecxz
cmp
mov
pop
xor
jecxz
in
inc
mov
cmp
or
sbb
in
mov
out
jbe
das
dec
out
dec
iret
ss
xchg
clc
pop
push
push
xchg
sbb
cwtl
sbb
xor
mov
mov
std
dec
cmpsl
call
inc
arpl
test
lahf
mov
jns
push
repnz
dec
mov
pusha
lahf
sbb
stos
xchg
cmp
out
arpl
addr16
mov
loopne
mov
xchg
sub
andb
sbb
jbe
mov
mov
adc
jno
mov
pushf
sub
inc
jno
xor
insb
insb
lahf
mov
sbb
stos
push
mov
mov
dec
in
ss
sahf
mov
sub
mov
insb
cmp
cmp
xchg
fnsetpm(287
inc
dec
xchg
mov
cmpsb
cmc
xchg
jl
lahf
adc
outsb
in
inc
sbb
add
imul
jl
aam
jecxz
sbb
jg
inc
jbe
fistpll
xchg
les
lock
xor
push
cld
je
int3
fildl
pusha
add
adc
test
fidivs
push
add
push
scas
jne
pop
nop
aad
xchg
pop
pop
js
pop
cs
mov
mov
push
test
das
inc
into
cmp
adc
enter
inc
dec
insl
aas
sbb
es
in
mov
mov
fldcw
inc
dec
cmp
or
and
or
mov
fwait
or
fisubs
int
sub
mov
inc
or
mov
jno
mov
fst
cmp
jbe
adc
cwtl
std
cmpsb
cmp
ds
iret
or
xlat
add
mov
aaa
insb
lahf
mov
mov
cmp
pop
jo
lahf
mov
jnp
jp
in
dec
inc
rcr
xchg
add
xor
sahf
sub
jp
jl
add
lahf
scas
mov
out
call
pop
inc
cmpsb
mov
fsubrs
sti
jbe
cld
push
lcall
or
cmp
inc
dec
arpl
mov
and
out
mov
es
sbb
imul
push
scas
pop
mov
cmp
fs
sarb
jecxz
inc
xor
push
fldenv
push
test
mul
or
jnp
cmp
mov
mov
jecxz
stos
popa
mov
ss
mov
in
dec
hlt
icebp
inc
xchg
mov
out
insl
pushf
and
mov
adc
cltd
xor
mov
std
insb
out
loope
in
std
aam
sub
cmp
pop
lods
push
dec
or
cld
gs
insl
cli
lods
add
jo
sub
dec
popa
jae
pop
xchg
mov
inc
bound
push
jg
pop
fnstenv
cwtl
sub
test
aam
stos
loop
xchg
mov
or
std
mov
jg
imul
pushw
dec
ljmp
or
cmp
mov
sarl
adc
cmpb
mov
mov
jmp
ja
push
outsl
adc
mov
lea
push
stos
lret
mov
inc
les
adc
push
mov
out
mov
sub
cwtl
dec
jae
daa
cmp
or
mov
xlat
jmp
push
xlat
stos
call
sbb
jp
push
xor
fisubl
push
mov
inc
movl
or
aaa
pop
xor
push
dec
xchg
and
in
push
dec
imul
out
xchg
cmpsb
pusha
shll
inc
ljmp
dec
cmp
push
inc
js
mov
das
add
sub
xchg
mov
push
cmc
sarb
mov
mov
pop
dec
mov
and
test
js
pop
in
std
xor
cltd
pop
cmp
mov
inc
jne
daa
sbb
cmp
fiaddl
sub
cltd
adc
addb
out
and
paddsw
mov
outsb
neg
je
mov
and
inc
aam
cmp
or
dec
jg
loop
sbb
add
fistl
and
push
pushf
pop
ja
sarl
stos
aad
mov
sub
adc
fsubrl
xor
ss
jecxz
mov
insl
pop
test
xchg
dec
push
loopne
add
fstl
cmp
xor
dec
fucomi
push
push
inc
mov
push
pushf
add
inc
iret
adc
and
jo
pop
sbb
jecxz
sub
or
pop
add
rclb
ss
repnz
test
and
adc
std
jbe
pop
pushl
bound
mov
and
sub
mov
pop
and
mov
nop
aas
inc
mov
add
mov
cld
rcrb
mov
in
and
pop
addr16
inc
jbe
jp
shlb
jb
pop
sub
adc
adc
sbb
jno
or
mov
lcall
shr
inc
jmp
mov
fxam
mov
and
gs
insl
sbb
fninit
leave
add
mov
bound
jns
fcmovb
add
frstor
sbb
lods
inc
add
andnps
test
dec
jbe
inc
cmp
movsb
mov
pushf
popa
jg
pop
call
pop
in
mov
cltd
in
out
lock
lahf
jmp
movsb
sahf
cwtl
dec
xchg
pop
out
cli
lock
inc
je
outsl
xchg
mov
mov
int3
je
jl
jae
or
inc
in
lcall
loope
and
mov
insl
pop
imul
mov
cmp
lock
subl
and
mov
cmpsl
adc
sub
push
enter
ja
hlt
and
jne
sub
pop
cmp
loop
jle
inc
sbb
cmp
stc
int
push
inc
sub
jns
sub
stos
das
into
mov
cmc
cmpsl
cmp
stos
inc
outsb
dec
mov
push
adc
inc
xchg
sti
movsb
jl
stos
or
sub
mov
inc
pop
cmp
dec
xchg
stos
pop
jmp
adc
iret
sbb
mov
stos
dec
rorl
inc
jecxz
lock
adc
mov
adc
in
out
pop
add
cli
pop
adc
jbe
pop
in
sub
shll
xchg
xchg
dec
jnp
fcomi
cmp
sahf
iret
in
clc
dec
arpl
adc
popf
mov
pop
outsb
aad
xchg
ja
movsb
sub
add
sahf
gs
outsl
dec
inc
push
pushf
rol
xchg
cmp
jmp
inc
jbe
out
jbe
aam
add
mov
or
push
fisubl
or
aad
sahf
inc
or
inc
insb
in
xchg
inc
adc
xlat
dec
enter
inc
sbbl
adc
add
add
jbe
dec
imul
hlt
mov
xchg
fiadds
call
mov
rorl
jo
sbb
sbb
addr16
aad
jno
sar
mov
add
out
iret
shrl
cmp
push
mov
inc
fwait
imul
mov
dec
cmp
je
sbb
xchg
push
sub
data16
aas
mov
hlt
jb
dec
jg
in
dec
ret
popf
leave
sub
xor
dec
jg
pop
adc
aaa
jmp
add
sbb
mov
dec
inc
dec
cmp
fidivrs
add
out
or
popf
in
push
stc
in
mov
cs
adc
jge
xchg
xchg
icebp
mov
in
dec
cld
ljmp
mov
cwtl
mov
flds
iret
add
mov
adc
jb
push
push
pop
or
or
lea
sbb
cmpsl
add
into
int
adc
xorb
or
frstor
js
xchg
and
sarl
rorb
xchg
rcl
test
pusha
popf
icebp
fildl
pop
ret
adc
jbe
test
or
xchg
fildl
je
inc
jbe
push
sbb
mov
sbb
push
rclb
jge
popf
mov
mov
int
mov
jp
test
call
leave
mov
punpckhbw
psraw
or
fistpl
push
stos
iret
xor
daa
loope
in
rorb
push
dec
pusha
xchg
int3
lds
outsl
test
pop
lcall
fcoms
out
cmc
jae
inc
xor
xchg
cltd
mov
mov
sbb
inc
insb
fsubs
sbb
mov
cmpsb
adc
push
imul
sbb
mov
pop
push
je
inc
cmpsb
sbbl
mov
or
cmp
imull
xor
add
mov
and
hlt
mov
mov
or
cmp
dec
jne
xor
push
pushf
mov
out
or
dec
sbb
jecxz
ljmp
jmp
or
and
xchg
mov
notl
dec
out
movsl
adc
add
idivl
scas
ja
pushf
cwtl
and
btc
push
shll
add
add
dec
popf
in
cli
inc
lea
and
cmovnp
popa
xchg
xchg
lods
jns
ret
mov
sub
scas
push
sub
push
lret
xor
mov
jnp
xchg
flds
fdivrl
pop
mov
mov
inc
add
dec
cmp
daa
lock
addr16
imul
cmp
inc
sbb
and
mov
sbb
xor
shrl
loope
lcall
test
shlb
push
inc
mov
pushf
or
pop
cwtl
dec
aam
sbb
push
cli
in
test
cld
ds
pop
roll
xchg
mov
std
sti
lret
arpl
pop
aad
sahf
daa
jo
jae
mov
fstl
push
mov
xor
fiaddl
adcb
jmp
cmp
push
and
add
daa
push
add
fsubl
push
pop
inc
sub
cmp
or
sbb
jmp
sti
loop
rcr
ret
mov
subb
bound
pop
inc
sub
cmp
or
sbb
jmp
sti
loop
rcr
ret
mov
subb
loop
rcrb
sub
cmp
ljmp
ret
mov
subb
bound
pop
inc
sub
cmp
mov
fwait
add
add
popa
rcr
mov
cmp
pop
jae
arpl
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
jl
insb
pop
pop
outsl
dec
jg
cs
jno
pusha
imul
fdivr
int3
std
mov
mov
insb
pop
pop
outsl
dec
jg
cvttps2pi
sbb
or
cld
int
fildll
in
lods
dec
pushf
scas
mov
pop
ja
data16
sub
sbb
or
cld
sub
in
lcall
sar
loop
xor
sbb
hlt
jl
sub
xchg
mov
ds
ss
adc
lahf
test
adc
in
adc
push
test
test
mov
dec
ret
decl
inc
or
repnz
les
bound
pop
popa
pop
loop
cld
dec
xchg
and
jp
lahf
and
mov
sub
dec
cmp
cmp
loop
fs
cld
and
ljmp
and
sbb
xchg
daa
jecxz
jg
ds
inc
adc
int3
stos
inc
pushl
out
adc
inc
addl
sbb
mov
xor
xchg
and
mov
sbb
ljmp
insb
dec
pop
jg
gs
sub
sbb
or
cld
xlat
in
fdiv
int3
out
xchg
lods
mov
add
jle
pop
gs
inc
dec
push
mov
mov
scas
fcom
jg
push
pop
or
sub
jl
sub
cltd
mov
mov
fscale
clc
lock
ret
mov
adc
push
dec
or
sub
sbb
or
cld
iret
in
out
int3
mov
scas
mov
pop
outsl
dec
jg
cvttps2pi
sbb
or
cld
iret
in
out
int3
mov
scas
mov
out
push
xchg
imul
ja
pop
add
les
outsl
sub
pop
cmp
fiadds
or
arpl
out
das
xchg
cmp
roll
arpl
adc
dec
test
cmpsl
inc
and
xlat
das
es
mov
push
jne
inc
cmpsl
mov
insb
out
outsl
dec
daa
cmpsb
std
fsts
mov
push
mov
imul
notb
inc
cltd
cmc
push
cmpsl
add
mov
mov
jmp
push
ret
xchg
subb
rorl
sub
fisubs
cld
or
sbb
xor
into
xchg
sbb
jne
enter
fisttps
xor
aas
mov
clc
fidivs
inc
je
add
add
loopne
iret
push
fisubs
mov
mov
inc
out
rorl
das
cmp
mov
push
jge
fbstp
mov
and
lds
cmp
mov
into
pushl
push
xor
xor
cmp
push
push
xchg
mov
jecxz
je
ret
imul
xor
negb
lcall
dec
lock
pop
pop
dec
fildl
mov
stos
ja
mov
sub
push
mov
xchg
icebp
push
and
ds
movsb
test
push
mov
mov
data16
fs
fcomps
add
int
inc
xchg
cmc
cmp
dec
jle
dec
adc
and
out
mov
mov
or
push
int
mulb
mov
sub
inc
scas
pop
sub
jo
pop
dec
jno
mov
push
xor
xor
cmpsb
ja
popa
mov
fists
xor
mov
xadd
popf
nop
loope
in
shlb
lock
test
loopne
data16
dec
pop
daa
addr16
dec
daa
popf
sbb
cli
int3
xor
int
jne
notl
in
dec
mov
imul
inc
dec
jbe
test
dec
les
lret
icebp
fists
cmp
fiaddl
rolb
lahf
jbe
cmp
lds
imul
ljmp
inc
orb
add
test
lret
mov
add
pop
stc
lcall
and
sub
dec
in
int
dec
inc
add
jns
push
or
cli
xor
shl
mov
push
cwtl
sar
je
adc
jo
push
out
jo
lahf
ljmp
aad
cltd
repz
add
repz
shrl
into
pusha
cwtl
shl
bound
hlt
adc
mov
cmp
test
outsl
cld
sbb
shll
fdivrs
and
sbb
and
mov
icebp
fsts
ret
pop
pusha
or
and
testl
repz
mov
and
jne
rcrl
xchg
insl
mov
insl
and
dec
add
popf
cmp
dec
out
xlat
add
fs
in
int3
jne
das
push
and
out
loopne
test
cwtl
pop
shll
sub
mov
leave
popa
fisttpl
inc
jns
inc
divl
xor
push
imul
sbb
cwtl
pushf
adc
out
movaps
sub
adc
xor
repz
xchg
out
mov
mov
xchg
ds
adc
roll
sti
push
clc
jmp
xchg
and
loope
aas
test
leave
scas
xchg
jb
lods
bound
or
mov
fisttpll
mov
or
scas
mov
mov
pop
mov
push
xor
sub
xchg
cmpsl
or
xchg
int
pop
mov
xor
pop
mov
push
icebp
ja
mov
sbb
and
jecxz
arpl
in
jae
xor
popl
mov
lock
jl
sub
pop
cmp
xor
sti
push
daa
pop
es
orl
hlt
sub
popf
sub
test
mov
bound
stos
and
repz
xor
jb
and
or
popa
or
out
es
stos
sbb
int3
popa
mov
push
in
aaa
fcomps
mov
xchg
push
cwtl
int3
xchg
stc
mov
inc
test
in
dec
xor
xchg
ss
es
cltd
fdivp
in
push
jg
pop
mov
inc
jae
leave
cmp
sub
addr16
push
mov
jecxz
lret
sub
mov
xchg
ret
pusha
not
jmp
lock
pop
sbb
test
or
cmpb
mov
inc
mov
adcl
aam
dec
ror
cs
andb
or
or
pop
imulb
les
push
mov
inc
jne
inc
sti
add
repz
adc
les
call
dec
out
fsubrs
push
or
cmpsb
rcl
ret
cmp
data16
out
out
cmp
mov
add
push
stos
in
jae
mov
leave
dec
push
cwtl
pop
sub
fidivrl
lods
movsb
jp
cmp
idivb
or
mov
or
mov
movsb
jecxz
enter
or
push
imul
clc
xchg
xchg
imul
mov
xchg
lret
lea
pushf
fisttpl
push
fistpll
jo
rcrb
push
movsb
orb
popa
xor
mov
mov
pop
ds
xchg
ljmp
icebp
fisubrl
cmpsb
mov
data16
rcr
enter
sbb
mov
cs
sti
daa
and
adc
std
dec
in
cmpsb
movsb
fidivrl
jmp
xor
or
adc
mov
add
pushl
aaa
lds
jmp
repz
sbb
xchg
jl
xor
adc
jle
call
sub
mov
cmp
repnz
setbe
icebp
or
add
adc
fstl
mov
pusha
jg
sbb
dec
insl
out
addr16
pop
imul
inc
jl
idiv
mov
movsb
push
fiadds
jg
mov
js
das
add
sub
sbb
cmpsl
popa
jle
pusha
repz
dec
out
push
int3
rorb
mov
mov
adc
pop
pop
inc
mov
mov
bound
xchg
or
icebp
scas
enter
clc
lods
js
add
sub
jns
cmp
jge
rcrb
jnp
cmp
xchg
push
sbb
dec
idiv
std
orb
test
cmpsl
mov
pop
ljmp
sub
leave
pop
bound
add
or
and
stc
mov
dec
iret
jne
imul
dec
add
dec
and
jmp
std
push
sub
mov
js
cmp
in
jae
mov
jl
inc
pop
adc
int3
cmpsb
scas
jl
inc
inc
test
or
popa
jl
mov
lock
cltd
dec
orl
push
jg
faddl
mov
inc
push
xchg
pop
cmp
dec
mov
push
divb
mov
cltd
mov
dec
ja
loop
xchg
cli
jle
fisubrs
push
repnz
ljmp
imul
mov
ja
imul
aad
in
inc
sahf
and
sub
cmp
stc
pop
idivb
icebp
and
jmp
inc
imul
dec
cmp
insb
push
pause
shll
lcall
lods
xor
add
xchg
cld
push
lock
mov
mov
je
fistpll
insl
push
aas
sbb
push
jl
mov
repz
fs
push
sbb
xor
pop
jmp
mov
sti
adc
push
jecxz
out
loope
aam
push
mov
adc
or
xchg
add
sbb
fbld
popf
mov
xor
inc
xor
cltd
or
scas
lds
xor
cmp
into
fcompl
call
add
or
inc
ljmp
mov
jae
sbb
decb
cmp
pop
mov
lods
xor
outsl
lods
in
push
push
sbb
lret
push
fucomip
mov
fwait
clc
push
or
fwait
repz
push
pop
subb
in
bound
push
repz
inc
in
leave
xchg
mov
sbb
mov
imul
mov
addb
movsb
xchg
and
pop
push
in
adc
repz
sti
mov
adc
cmc
xor
cli
xchg
add
hlt
xchg
shll
dec
mov
jbe
adc
adc
movsl
add
push
lcall
sbb
pop
push
rcrl
cmc
sub
push
rcrl
fisubrl
cmpsl
push
sub
imul
pop
mov
movsl
js
fstpl
iret
jle
push
rolb
push
arpl
adc
mov
pop
rorb
cmp
outsl
push
dec
sbb
leave
loop
clc
out
push
and
out
push
dec
or
js
jo
leave
adc
scas
mov
and
out
cli
and
ret
mov
rcrb
data16
xchg
mov
adc
cmp
mov
inc
inc
jne
fcomps
call
outsb
daa
cltd
and
dec
and
inc
mov
rcll
mov
jne
mov
xlat
xchg
and
adc
imul
jae
es
shr
xor
sub
icebp
adcb
push
and
dec
addr16
inc
lahf
outsl
cwtl
xchg
xchg
hlt
pushf
xchg
and
scas
mov
and
dec
pushf
std
pop
xor
cmp
in
stos
call
in
lahf
sub
jp
pusha
scas
scas
mov
or
insl
cmp
dec
jp
push
out
inc
fwait
mov
xor
icebp
adc
stc
aad
or
push
mov
or
cmc
mov
inc
fsubs
test
and
imul
add
cld
iret
jae
repz
jp
jns
adc
test
outsb
lahf
and
imul
xchg
movsb
lret
cld
jg
xor
aaa
testl
mov
and
fistpll
in
les
pushl
and
dec
cmpsl
mov
repz
fsub
mov
loop
xlat
popa
dec
out
xor
sbb
xchg
xchg
ja
in
jecxz
cltd
mov
inc
sar
and
int
cs
inc
test
jle
xchg
out
test
mov
push
orb
adc
and
dec
mov
test
jg
lds
cmp
js
inc
ficomps
jg
dec
je
sbb
addr16
fsts
inc
mov
insb
scas
das
or
dec
mov
lret
adc
cmc
pushf
fsubrs
sbb
sbb
sahf
pusha
out
pop
xchg
outsl
dec
hlt
clc
cmpsl
sub
popa
scas
inc
dec
fmul
jo
hlt
out
xor
jae
mov
mov
and
and
or
mov
pop
jbe
mov
and
inc
outsl
int
jg
mov
movsl
inc
sbb
pushf
testb
sub
mov
stc
imul
pop
inc
sub
xchg
and
sbb
push
shr
inc
jns
repnz
inc
testb
cmpsl
fmuls
daa
fists
popa
data16
enter
xor
lahf
jg
mov
or
adc
mov
std
movsl
es
sbb
clc
or
aad
in
int
cwtl
scas
lea
ja
and
mov
push
cmp
jmp
cmp
cmc
loope
jle
in
pop
pop
loope
cwtl
movsl
test
dec
imul
jb
lods
sbb
cld
ficoms
faddp
mov
pop
and
inc
cli
jb
lea
sub
mov
inc
lock
or
fstl
pop
jns
arpl
pop
stos
push
mov
fisubl
cmp
cmp
push
and
xchg
jno
dec
jmp
adcl
fimull
leave
ds
dec
pop
outsl
jl
ret
push
cwtl
dec
js
fs
movsb
mov
insb
pop
xlat
mov
push
das
int
xorb
es
dec
inc
out
xchg
dec
fnstcw
inc
mov
dec
push
inc
adc
push
repz
lret
push
xchg
or
inc
or
aas
mov
cmpsl
inc
and
mov
mov
cwtl
test
cmp
int
lods
push
mov
int3
sub
lods
add
cmp
scas
inc
xchg
scas
enter
arpl
shl
xor
pop
lahf
out
ret
or
jge
xor
je
in
pop
repnz
sub
nop
cmp
test
or
push
js
imul
cmc
je
lcall
aaa
ss
int3
and
lock
or
xor
or
outsl
pop
scas
cmc
subl
xor
aaa
adc
enter
jg
or
aad
leave
fildl
push
xor
scas
lret
in
popl
xchg
loop
pop
outsb
orl
inc
pop
lret
stos
cmp
icebp
addr16
xor
test
mulb
mov
mov
sbbl
mov
push
sub
and
add
ds
in
pop
sbb
pop
xlat
int
mov
adc
lods
cmp
mov
shll
mov
add
test
outsb
out
test
call
push
pop
in
cmp
cmp
imul
inc
jmp
xchg
push
mov
inc
inc
movsl
inc
dec
push
mov
int3
mov
popf
adc
jbe
and
sti
fidivrs
shl
pop
insb
dec
repnz
imul
push
mov
clc
lods
jne
adc
addb
stc
or
xchg
mov
outsb
sub
push
lret
imul
adc
xor
sbb
mov
ffreep
bound
xor
push
icebp
aaa
jmp
scas
sub
bound
pop
push
or
mov
fucomi
xchg
and
outsl
and
scas
pop
jmp
pop
out
mov
ja
xchg
rcl
scas
cmpsb
stos
mov
push
pop
fwait
outsb
int3
push
sub
test
cld
inc
cmp
inc
inc
fimull
test
icebp
fs
mov
inc
pop
xchg
incb
iret
clc
xor
or
cmp
cmp
mov
lods
xchg
cmp
add
mov
pop
into
adc
sub
xchg
sub
dec
push
in
xchg
xchg
rcr
loop
add
outsb
add
xchg
adc
imul
cmp
testb
mov
popa
enter
mov
nop
fdivrl
jecxz
outsl
shlb
push
test
or
push
sub
mov
addb
jae
movsl
fidivrl
shl
adc
shl
mov
enter
lods
repz
adc
mov
add
pop
dec
test
popa
lahf
ret
pusha
add
push
or
pop
jp
push
pop
ret
andb
pop
xor
mov
dec
in
int
repz
mov
dec
loopne
cmp
xor
or
xchg
mov
das
and
neg
dec
cmc
sti
mov
push
cmp
fldl
iret
add
fwait
sbb
test
movsl
fiaddl
and
hlt
xor
push
sar
push
leave
pop
mov
lds
sub
dec
ljmp
lea
in
sarb
ret
fsubrs
jg
jge
mov
in
add
add
adc
jne
cmpsl
fldcw
inc
push
xchg
sti
in
mov
xchg
pop
or
ja
add
mov
and
mov
push
dec
inc
popa
dec
cmp
jne
jns
rorb
lcall
mov
xchg
or
jb
shr
out
add
sub
adc
outsb
scas
das
in
xchg
sub
iret
clc
add
in
aas
loope
inc
push
stos
je
xchg
sbb
loope
mov
or
mov
xchg
data16
idivl
loope
repnz
sbb
jmp
push
mov
insb
or
imul
popa
xchg
xlat
icebp
jbe
and
loopne
adc
int
or
in
and
dec
rcrl
jmp
sub
inc
shl
jg
jns
shll
les
push
stc
ljmp
fadd
adc
aaa
xchg
xor
and
hlt
dec
sahf
sbb
lods
cmp
leave
pop
lret
push
mov
cmp
js
pop
inc
xchg
dec
mov
adc
and
pop
sbb
stos
loop
inc
jo
adc
sub
test
or
dec
leave
xchg
jae
xchg
nop
enter
and
xchg
jge
mov
pushf
mov
lea
jl
add
sub
pop
ds
test
lahf
f2xm1
push
xor
fwait
xor
fdivp
pop
cmp
inc
mov
fwait
xchg
lret
lahf
ficomps
mov
pop
lahf
into
aad
mov
arpl
and
into
lock
mov
ja
and
addl
outsl
fisubs
pop
or
push
pop
ljmp
ja
pop
data16
loope
mov
mov
outsb
lahf
les
clc
mov
out
adc
fmull
jo
pop
add
pop
ss
lret
jo
outsl
jne
js
test
sbb
aaa
mov
lret
negl
lahf
repz
es
stos
jo
mov
jb
cmp
cmc
jmp
fcoml
pop
fdivrs
cmp
es
rolb
aas
mov
out
aad
or
push
sbb
jne
into
test
in
mov
pop
dec
sub
mov
xor
fadds
call
aas
push
inc
mov
xor
and
mov
sbb
mov
sub
scas
jle
loop
mov
mov
mov
push
xor
mov
fisubrs
jecxz
add
sbb
mov
fwait
xchg
push
xor
shrl
or
pop
push
popf
jecxz
fcmovnbe
cmc
mov
insl
scas
int3
jae
sbb
add
mul
insb
and
dec
insb
out
add
js
mov
pop
lds
stc
int
loope
dec
mov
in
mov
and
aaa
sbb
pop
popf
inc
loopne
push
xchg
enter
pusha
cmp
xchg
jb
pop
shll
loopne
aas
addr16
in
popa
fldt
or
call
adc
jnp
dec
lods
jmp
pop
add
fcomi
test
mov
stos
inc
inc
cs
sti
mov
movsb
test
lds
inc
enter
cmp
dec
pop
imul
in
xchg
and
test
lret
data16
nop
stos
mov
pop
sar
out
pushf
adc
xchg
dec
mov
rorb
mov
add
stc
push
outsb
pusha
mov
shlb
mov
lds
mov
sbb
inc
mov
fs
pop
push
and
xchg
lcall
rclb
cs
out
in
xchg
imul
pop
dec
test
in
andb
cmpsb
cwtl
fstenv
shr
and
mov
cmpl
cld
ja
jb
jg
loop
add
jle
enter
hlt
push
pop
lock
lods
xchg
jp
outsb
pop
or
xchg
sbb
mov
out
test
clc
xchg
cli
in
in
out
xchg
lea
sbb
out
push
mov
and
subl
shlb
shrb
push
outsb
and
mov
lods
ds
xchg
xchg
pop
pop
test
fildl
xor
movsb
pop
sbb
xor
iret
inc
stos
lret
add
dec
loope
jns
mov
mov
fidivrs
mov
imul
jb
jp
mov
mov
repnz
jno
xor
xchg
jo
inc
pushf
jmp
jae
inc
test
xchg
enter
or
xlat
pop
push
into
mov
pop
jmp
sbb
dec
xchg
int3
mov
test
sub
and
adc
bnd
in
xchg
test
sub
stc
das
movsl
mov
imul
add
in
shll
out
xchg
jmp
data16
mov
jp
stos
jae
adc
pushf
push
cli
lock
and
and
pop
lds
int3
push
push
adc
dec
mov
jb,pn
lea
cmp
stc
mov
inc
xchg
jge
jmp
cli
xchg
outsb
pop
out
stos
sub
jge
push
inc
loope
adc
push
dec
dec
jecxz
out
ljmp
push
xchg
push
test
lods
sbb
push
mov
or
dec
cmpsl
cmp
stos
push
sub
shll
sub
xchg
push
jg
mov
push
add
lods
mov
incb
dec
sarb
pop
jg
or
push
stos
pop
jecxz
faddp
jnp
iret
inc
stos
mov
cld
aas
repz
mov
fbld
jp
push
imul
inc
jle
push
cmpb
dec
adc
imulb
lods
into
sarl
les
sti
cmp
cld
mov
dec
xchg
outsb
ljmp
rcll
sub
cmc
xchg
mov
sbb
adc
sahf
jmp
and
add
dec
sub
inc
jp
jbe
loop
fisubl
cmp
mov
mov
fucomi
mov
fs
sbb
jg
loope
mov
cmp
stos
mov
pop
outsb
mov
loop
clc
or
push
imul
jmp
add
js
mov
in
cli
incl
shlb
orb
sub
sbb
or
cld
iret
in
out
int3
mov
scas
mov
pop
outsl
dec
jg
cvttps2pi
sbb
or
cld
iret
in
out
int3
mov
scas
mov
pop
outsl
dec
jg
cvttps2pi
sbb
or
cld
iret
in
out
int3
mov
scas
mov
pop
outsl
dec
jg
cvttps2pi
sbb
or
cld
iret
in
jne
out
int3
mov
pop
and
arpl
inc
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
adc
xchg
mov
cmp
adc
scas
adc
inc
out
push
mov
subb
mov
outsb
sarb
dec
repnz
add
xor
into
jb
subb
mov
outsb
sarb
dec
repnz
add
push
sahf
and
fdivp
cs
dec
out
push
repnz
test
mov
xorl
leave
dec
jmp
stc
pop
xlat
es
jle
pop
repz
xchg
fldl
ja
in
fidivrs
mov
jne
into
mov
pop
cmp
jb
cmp
imul
inc
je
int
cld
out
xchg
int
xor
filds
xchg
aas
orb
or
outsl
outsb
add
aam
and
popa
mov
xor
jg
insl
ret
cmpsl
jecxz
outsb
fiaddl
push
addr16
adc
cmp
jp
xchg
sub
aaa
imul
sbb
test
std
push
les
adc
arpl
jae
xchg
mov
outsb
sarb
dec
repnz
add
xor
into
jb
testb
into
dec
cld
pop
addl
xchg
cs
mov
lock
cmovl
mov
push
cli
dec
cmpsl
or
pop
push
jmp
rcrb
push
repnz
insl
mov
jle
dec
sarl
addl
jle
dec
repnz
add
xor
into
jb
subb
mov
outsb
sarb
dec
repnz
add
xor
into
jb
subb
sub
cld
loopne
mov
lock
xlat
sbb
rcr
inc
mov
push
xchg
xchg
roll
adc
test
xchg
jbe
mov
or
movsb
loop
cmc
jp
mov
xor
int3
stos
icebp
nop
repnz
fisubl
xor
jne
jo
lea
jl
push
xor
xchg
jne
data16
testl
repz
sub
pusha
fsub
out
adc
mov
push
jp
xor
jno
loope
out
push
gs
push
fmull
sub
adc
mov
xchg
inc
lret
push
outsb
dec
hlt
adc
jnp
mov
sbb
push
mov
jl
scas
and
mov
mov
adc
shl
lcall
mov
paddusb
sbb
jmp
stos
and
dec
mov
fistpl
mov
sub
ja
imul
lret
arpl
push
enter
mov
int3
test
into
xchg
cmp
and
sbb
cs
mov
xor
xchg
or
adc
insl
and
cmc
sub
loope
jmp
jle
mov
push
push
pop
jp
jecxz
cmp
sbb
mov
sbb
and
daa
pushf
stos
loope
mov
das
ljmp
mov
pop
jns
add
outsb
push
or
sub
mov
adc
std
imul
mov
sbb
fidivrl
divb
lods
movsl
jbe
push
or
daa
pop
stc
cs
jb
stc
jne
mov
sbb
pop
pop
sub
xchg
and
ja
dec
dec
push
repnz
sub
or
add
mov
inc
pop
inc
in
fwait
mov
fisubrl
xchg
xchg
loop
dec
mov
lock
loope
inc
push
and
cmp
fldl
inc
out
jne
mov
movsb
dec
and
mov
add
cmp
add
test
pop
cli
enter
jg
int
adc
xor
xorb
mov
out
or
mov
call
dec
mov
into
mov
test
lret
cmp
cli
pop
das
jb
mov
xorb
sbb
cwtl
xor
gs
leave
ljmp
popf
dec
insl
cmp
lods
scas
stos
ja
xor
jecxz
mov
inc
iret
add
push
dec
mov
lret
test
adc
push
arpl
stos
fchs
push
fdivrl
push
inc
hlt
xchg
mov
repz
dec
pop
test
insb
mov
cs
or
xor
mov
and
clc
push
imul
add
xchg
aas
jnp
add
cwtl
lock
ror
dec
dec
xchg
mov
lods
sahf
dec
ror
add
xchg
adc
mov
lock
push
pop
test
iret
cmpsb
std
std
test
pop
lods
xchg
xchg
les
xchg
popf
in
ja
insl
adc
sub
push
mov
ds
xor
jle
mov
jbe
int
addr16
pushf
sub
jae
mov
cmp
sbb
es
jno
into
pop
and
ret
mov
cmp
test
loopne
jae
ljmp
ja
fs
rcl
je
push
mov
lods
lock
std
fadds
popf
or
sub
lods
ljmp
sub
cmp
mov
mov
and
mov
out
stos
cmpsb
and
cwtl
jne
mov
jbe
lods
fdivrp
sbb
xchg
cmc
and
or
pop
jmp
je
cmp
cli
jmp
push
fucom
loop
and
push
mov
add
dec
xchg
sbb
xor
daa
test
push
mov
cmp
mov
sub
call
cli
and
pop
xchg
es
in
into
ss
addr16
push
pop
inc
add
cmpsb
ljmp
std
int3
add
push
push
jg
out
sub
sub
xor
push
sub
sahf
mov
xor
sub
sub
adc
jmp
imul
mov
xchg
push
cli
out
aad
sub
and
je
jns
dec
sbb
in
and
pop
mov
and
pop
lods
inc
loop
dec
cmp
je,pn
jp
test
rorb
jecxz
add
sbb
or
jmp
mov
xor
andl
cmp
mov
and
fistps
sub
adc
xor
pop
jne
or
or
cmp
imulb
jge
xchg
xorb
push
inc
xor
adc
jae
decl
xor
outsl
je
jge
and
dec
jae
repz
adc
sti
xchg
aam
popa
imul
dec
jge
push
aaa
lods
add
xchg
jae
arpl
iret
xor
xchg
mov
rcll
mull
imul
jne
aam
xchg
xchg
jnp
jb
je
int3
pop
mov
mov
and
inc
jle
out
push
fsubrs
xchg
add
xor
shrl
or
test
mov
out
repnz
jmp
lahf
mov
in
fisubs
outsl
mov
notb
mov
pop
pop
mov
mov
loop
cmpsb
ret
fisttpll
jmp
lcall
ja
out
fsubp
mov
fisttpl
mov
pop
ret
mov
stos
xchg
sbb
adc
inc
inc
xchg
ljmp
mov
dec
cltd
xor
lds
pusha
inc
push
fnstenv
mov
add
fs
xor
push
pusha
aad
jbe
dec
jge
shrd
cwtl
ja
mov
pop
mov
pop
movsb
pop
and
jg
add
mov
add
cmc
cmpsl
clc
addb
lcall
mov
mov
adc
sbb
jae
shll
ljmp
inc
pop
mov
xchg
push
pop
std
jae
enter
in
shll
and
and
sub
push
mov
cmp
ret
add
std
mov
inc
and
leave
shl
xor
aaa
test
or
adc
pop
mov
push
mov
test
push
cmp
mov
shll
adc
lret
stos
xchg
cltd
popf
fnstsw
imul
inc
sahf
sbb
dec
inc
shll
mov
sbb
fcomp
fiaddl
rcl
int3
inc
mov
outsb
push
pop
je
pop
popf
or
or
scas
inc
adc
inc
cmp
inc
mov
jne
mov
int3
pop
push
fists
fnstsw
jge
pushf
pop
shll
negb
pusha
ret
sub
gs
test
xchg
rclb
stos
ljmp
insl
scas
mov
dec
fildl
jl
insl
inc
lea
lret
fdivs
sub
mov
scas
dec
js
data16
mov
adc
cmp
in
mov
movsl
xchg
icebp
iret
xchg
fdivrs
or
dec
inc
sbb
stc
in
inc
sarl
xor
push
leave
mov
push
movsl
mov
inc
inc
jle
rcl
push
cmp
sbb
in
out
or
ret
push
bound
lds
jnp
sub
inc
sahf
loop
nop
mov
mov
iret
sbb
int
fdivl
push
lret
fsubrl
ljmp
arpl
push
xor
jae
sub
addr16
in
dec
dec
mov
or
pushf
mull
pop
adc
dec
mov
push
inc
adc
lods
push
outsb
leave
sbb
jns
and
or
sbb
stos
popa
out
xor
adc
mov
popf
leave
mov
in
add
icebp
jmp
add
je
mov
fistpll
lods
jl
decb
xor
arpl
popa
pop
shlb
mov
push
rolb
pop
or
sbb
cmc
stc
push
insb
dec
adc
xchg
test
mov
lret
pop
mov
push
push
repnz
repz
cmp
test
fidivrl
aam
icebp
lea
add
mov
inc
lahf
test
xor
in
dec
repz
mov
test
enter
pop
mov
fdiv
jae
loopne
clc
sub
fdivl
lret
jl
adc
aad
shl
push
data16
movsb
into
enter
mov
or
push
inc
jbe
add
cmp
cmpsb
cmc
scas
add
cmp
inc
fnstenv
repz
sbb
test
xchg
pop
cmp
xor
mov
iret
fisubs
sub
loop
test
or
jle
add
pop
pop
inc
in
sbb
push
jo
dec
mov
push
repnz
ss
cmpsl
inc
lds
test
lret
cmp
dec
movb
popf
pop
enter
dec
jo
add
ret
xor
je
push
pop
jmp
imul
dec
pop
loopne
fildll
mov
dec
shl
pop
mov
mov
jb
push
fisubrs
lods
dec
andl
pop
inc
les
pop
jecxz
xor
sahf
push
stos
stos
xchg
lahf
lock
test
mov
xor
inc
pop
cmc
lds
leave
loope
ret
xchg
rcll
jae
xchg
mov
outsb
lds
outsb
jp
jae
movsb
sub
inc
xor
inc
pop
fldcw
aas
test
mov
jp
sbb
or
lret
adc
stc
outsl
jle
mov
jp
xchg
xchg
enter
out
lret
or
test
push
dec
addr16
test
cmp
and
outsl
nop
out
dec
enter
sbb
cmp
mov
jge
inc
jno
xchg
mov
push
lahf
iret
lds
repz
xlat
jb
push
jmp
jne,pt
clc
lahf
pop
test
push
aaa
and
jg
in
pusha
shr
ds
outsl
dec
test
movsb
xor
insl
mov
repnz
cmp
sub
pushf
out
add
popl
cmp
pop
inc
dec
xchg
push
xchg
and
insb
xor
lds
cs
lea
movl
jge
das
mov
mov
mov
mov
cld
and
shll
pop
inc
out
stos
sbbb
in
fidivrl
sahf
and
loopne
inc
stos
mov
repnz
sbb
push
and
cs
dec
adc
push
jecxz
rcr
flds
cmpsb
inc
pop
rorb
pop
sbb
sub
mov
sbb
adc
sbb
pop
sub
xor
sub
es
ret
and
mov
mov
sbb
jno
repnz
add
sub
mov
aas
lcall
andb
fsts
xchg
adc
out
pop
pop
fcoms
cs
cmpsb
in
jg
fninit
loope
aad
mov
mov
lds
push
sbb
mov
shl
dec
int3
out
cld
pop
aas
and
lods
out
or
lds
out
push
and
lret
mov
mov
and
lea
lds
jge
adc
mov
pop
outsl
arpl
cltd
mov
jae
inc
xchg
adc
sub
int
dec
orb
inc
mov
add
out
lcall
fdivs
sbb
mov
and
inc
and
fidivrs
mov
xchg
adc
push
add
xor
xor
push
jne
sub
ficomps
push
lock
ljmp
jbe
je
pusha
pusha
lock
push
jge
insb
pop
std
cmp
aad
cmp
icebp
mov
roll
leave
in
leave
mov
daa
fcoms
sbb
ja
mov
fmul
in
into
andl
xor
cmc
movsb
sbb
ja
enter
sar
mov
mov
in
dec
dec
xchg
scas
xchg
or
cmp
fldt
out
outsl
out
pop
cmpsl
sbb
mov
test
cwtl
inc
pop
shrl
mov
jp
outsb
rcrl
frstor
pop
ror
ret
mov
stc
fidivrs
jns
jne
stc
les
ret
inc
mov
mov
fwait
jns
or
lock
mov
mov
mov
cmp
sub
and
jle
out
cmp
loope
mov
daa
cmp
push
pop
pop
dec
sarb
mov
cmpsb
mov
int3
inc
fsubrl
insl
iret
jae
fisttpll
push
xchg
das
jge
or
mov
xchg
pop
pop
rorb
out
sbb
adc
inc
outsb
jae
sub
shrb
clc
mov
mov
or
scas
loop
insb
negl
idivb
pop
lea
sub
lea
sub
bound
cwtl
push
lock
orl
jno
aaa
sbb
out
lcall
mov
xor
sbb
rolb
jae
cmp
jo
xor
inc
xchg
xor
in
mov
fwait
and
jnp
and
cmpsb
testl
loop
aam
push
int
stos
pop
or
into
aam
mov
mov
push
clc
sub
fabs
push
push
enter
sbb
cltd
sarb
mov
adc
js
in
cmpsb
out
dec
mov
gs
xorb
addl
repz
dec
inc
cmp
xor
sbbl
jns
scas
das
adc
stc
xchg
test
test
dec
ss
loop
mov
fsubrs
notb
xchg
out
inc
dec
xchg
mov
frstpm(287
jmp
in
and
jo
clc
push
test
sbb
dec
das
cmp
cmpb
cmp
cli
sub
sbbl
lods
jno
or
and
push
add
xor
or
scas
jbe
fists
out
iret
stc
inc
mov
leave
mov
iret
enter
push
cmpl
adc
cmp
jae
rorb
mov
mov
dec
aaa
ret
mov
addr16
jne
rcll
ffree
loop
out
xchg
mov
sub
incl
in
mov
mov
adc
ret
stc
jbe
cmpsl
xorl
pop
jbe
or
jle
inc
mov
dec
jmp
stc
xor
test
pushf
xor
mov
gs
gs
pop
sub
xlat
push
jno
mov
add
sub
mov
movsb
xchg
mov
stos
lret
sub
push
in
in
call
jle
icebp
or
xor
xor
popa
arpl
jne
mov
mov
or
sbb
outsl
cmc
mov
cmp
test
pop
lods
lods
push
jge
sub
jne
xor
push
dec
and
iret
movsl
lods
or
shll
add
jno
out
divb
shrl
cmpb
xchg
sbb
xor
rcrl
test
xor
call
test
lds
stc
or
inc
sbb
and
mov
sbb
inc
call
adc
adc
and
pop
bound
fisubl
mov
xchg
push
pop
stc
or
ss
mov
cmpsb
cmpsb
sub
pop
ds
ss
xor
xor
push
ret
lds
sub
pop
data16
sbb
addr16
adc
in
mov
push
mov
push
jbe
je
out
inc
and
dec
jne
outsl
es
lea
mov
je
push
lods
inc
push
inc
hlt
enter
aad
mov
jno
mov
fsubrp
mov
inc
pop
das
xchg
push
cmpsl
adc
ss
rcll
in
in
sub
loope
fmull
adc
mov
jb
adc
sbbb
cmpsl
sar
mov
sbb
dec
sahf
push
mov
mov
and
js
and
cmpsb
mov
out
in
push
test
mov
cmpsb
and
lods
lds
adc
sub
adc
and
xchg
and
in
shlb
mov
lods
fadds
push
push
and
inc
ffreep
testb
pop
mov
loopne
mov
cmp
pop
fmull
mov
xchg
mov
js
xchg
pop
mov
jb
jae
inc
insl
inc
dec
pop
inc
leave
hlt
mov
xor
push
inc
inc
test
test
cltd
gs
add
xchg
jnp,pt
xchg
pop
sub
ss
lcall
jne
out
daa
in
sub
bound
push
jl
dec
aad
lahf
lds
mov
push
stos
jno
fsubrl
push
in
push
xor
xor
aaa
pushf
pushf
dec
int3
and
popa
and
mov
xor
xchg
xchg
push
dec
lcall
mov
pop
inc
jno
or
vaddps
popf
ret
or
fcompl
pop
pushf
out
aam
mov
andb
lret
dec
dec
mov
push
movsb
loope
int
sbb
popf
and
mov
pop
push
pusha
adc
push
push
mov
xor
xchg
aam
dec
mov
leave
adc
dec
jecxz
mov
or
pushf
test
bound
xchg
into
rcll
inc
aad
dec
xchg
adc
loopne
cli
ret
rcl
xchg
es
sbb
jp
imul
or
fsubp
jne
cmpsl
xchg
out
push
popf
pushf
pop
fnsave
rorb
mov
inc
push
cmc
lret
popf
hlt
in
sub
arpl
mov
int
es
mov
out
lods
fs
sar
fisubrs
popl
jnp
adc
or
add
shl
mov
fdivl
jb
aam
mov
faddp
or
lea
in
and
mov
test
aam
test
pop
fildl
mov
adc
cltd
jne
loopne
push
stos
push
mov
faddp
pusha
aaa
imulb
popf
mov
testl
data16
push
or
push
cmpsl
lahf
cwtl
mov
popf
dec
push
js
cltd
and
xchg
iret
loopne
dec
imull
adc
int
and
xchg
dec
sub
or
push
stos
rolb
push
jbe
pop
imul
mov
js
pop
push
lret
dec
cltd
sbb
and
mov
xchg
fimull
mov
mov
pop
out
cmp
lds
jb
push
pop
lods
mov
ret
dec
scas
xor
cltd
pop
mov
dec
cmpsl
dec
mov
cld
jnp
stos
bound
js
ud0
or
imul
sbb
addb
sub
jmp
arpl
kxnorb
insb
mov
add
push
loope
inc
call
xor
add
xchg
pop
lods
adc
xchg
adc
mov
xor
mov
mull
out
xchg
sub
lea
popl
arpl
or
and
and
pop
repz
dec
les
ljmp
xor
and
add
mov
dec
jo
movsb
bound
outsl
sub
mov
loope
inc
mov
inc
cs
fbld
push
js
lcall
test
add
mov
inc
push
xchg
call
jge
dec
adc
je
stos
mov
in
daa
dec
movsl
pop
rep
or
inc
into
stos
pop
adcb
pop
cltd
aas
mov
vmwrite
movb
iret
lea
xchg
jns
xor
rcrb
das
cmpsl
iret
sti
mov
dec
in
mov
xchg
push
imul
cmpsb
cmp
outsb
mov
adc
mov
stc
adc
scas
or
sti
cmp
or
xlat
add
sub
or
mov
cmp
mov
lods
les
sbb
je
jne
insb
ja
mov
les
xchg
xor
pushf
mov
int
pop
dec
ja
jno
jnp
repnz
mov
dec
clc
stc
lods
pop
stos
fdivs
xor
sbb
adc
jmp
adc
fdivrl
dec
sub
out
ljmp
mov
and
arpl
out
mov
addl
pop
mov
popa
fs
dec
and
mov
and
lock
sub
aam
xchg
pop
ja
dec
pop
jp
or
add
mov
gs
cmp
sbb
inc
add
les
or
popa
ds
lds
fdivs
add
lea
loopne
push
cld
clc
js
rorl
in
sarb
mov
test
inc
jae
addr16
sbb
popf
adc
dec
xchg
popa
cld
sarb
mov
jmp
loope
lods
mov
jle
adc
push
inc
mov
xor
jae
adc
fnstenv
add
scas
inc
add
jmp
clc
cmpsb
and
sub
and
leave
fidivl
sahf
std
xchg
out
inc
ljmp
ljmp
test
push
add
mov
js
jb
push
inc
mov
xor
lahf
out
fiadds
out
jmp
fs
xchg
add
ja
cs
aaa
lea
int
inc
test
test
ret
cmc
xor
sbb
popa
mov
mov
push
sub
mov
dec
jge
in
pop
inc
stos
xchg
shl
in
lahf
call
xor
ret
push
and
mov
addr16
dec
push
mov
jbe
scas
repz
sbb
in
push
mov
adc
or
fcomps
push
xor
aas
cwtl
push
push
jle
jne
sub
adc
adc
ds
lss
ret
jle
dec
repnz
add
xor
into
jb
subb
mov
outsb
sarb
dec
repnz
add
xor
into
jb
subb
mov
outsb
sarb
dec
repnz
add
xor
into
jae
subl
mov
outsb
sar
loop
repnz
mov
fiaddl
popf
xor
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
