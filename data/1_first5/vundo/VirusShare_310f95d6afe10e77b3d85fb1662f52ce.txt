jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
push
call
inc
jo
sub
dec
dec
xor
push
pop
add
add
or
add
xor
icebp
add
pop
add
filds
push
add
add
add
add
add
add
add
add
add
add
icebp
add
push
cmp
dec
add
add
xchg
add
add
add
add
adc
add
add
add
xor
cmp
icebp
add
add
add
add
add
push
outsl
add
add
add
in
add
add
add
add
add
add
add
add
add
movb
add
add
add
and
adc
add
les
in
icebp
add
cwtl
add
add
add
push
pop
add
add
add
add
add
add
add
add
roll
icebp
add
add
add
add
add
add
add
jb
enter
aaa
add
add
mov
add
push
add
add
add
incl
mov
icebp
add
add
add
add
icebp
add
sbb
addb
add
add
add
xor
cmp
icebp
add
push
add
add
add
icebp
add
add
add
add
imul
daa
add
add
adc
add
add
add
add
add
add
add
jnp
jl
cmp
add
add
add
add
adc
add
adc
add
add
add
adc
add
add
add
add
push
flds
add
lea
pop
add
insl
add
add
icebp
add
add
add
add
pop
add
add
add
add
dec
add
add
add
add
add
cmp
sbb
cltd
add
push
add
push
icebp
add
adc
add
add
add
add
add
add
add
add
inc
add
jl
icebp
add
sub
imul
icebp
add
add
flds
mov
add
lea
add
add
add
adc
add
add
add
add
add
icebp
add
add
sub
adc
add
add
icebp
add
add
add
push
add
sbb
inc
add
add
add
icebp
add
add
add
lock
add
add
add
test
int
lcall
add
addr16
add
sub
les
adc
add
add
add
add
add
add
add
adc
add
lock
add
add
cmp
jae
sbb
sbb
add
int
dec
add
add
add
add
add
add
icebp
add
add
lea
or
add
popl
jl
pop
add
add
add
add
add
pop
add
add
lock
add
add
add
add
add
add
add
add
icebp
add
inc
add
add
add
icebp
add
add
xor
cmp
icebp
add
add
add
jl
sbb
icebp
add
add
add
add
mov
add
add
mov
xor
icebp
add
sub
leave
add
add
lret
add
add
adc
ja
jl
and
cwtl
add
add
add
add
pop
add
push
add
add
add
add
add
add
sti
jp
mov
push
je
je
jo
jl
push
mov
mov
fsts
xor
add
je
rorl
pop
sbb
int3
pushf
xor
ja
add
fidivs
subb
and
add
and
rcll
in
adc
daa
jg
rclb
dec
scas
push
sub
sbb
dec
aas
jae
push
mov
jecxz
and
fbld
cli
fstp
or
mov
fsubl
bound
jp
jbe
hlt
or
fbld
insl
sub
xor
arpl
jecxz
icebp
inc
out
rol
xchg
sub
daa
fistpll
cli
add
xchg
cmp
repnz
imul
add
mov
int
and
lea
out
int
rcrb
mov
in
cs
sub
lret
add
adc
lahf
mov
mov
xchg
jecxz
lahf
inc
inc
xchg
int
lock
loop
and
mov
divb
into
aam
ja
cs
call
mov
jp
loopne
enter
pop
aas
push
adc
xchg
test
push
add
add
mov
lahf
out
popf
fcoms
mov
jno
out
adc
cmp
ficompl
clc
enter
mov
jecxz
icebp
and
cmc
add
jb
scas
push
ret
movsl
inc
test
push
adc
movsl
imul
xchg
xchg
mov
test
jbe
loop
and
out
popf
fucom
cmp
fldcw
mov
cmp
xchg
cli
xor
aas
mov
icebp
mov
fucomp
imul
rorb
cmp
xor
cmpsb
and
sbb
pop
or
mov
lret
xchg
dec
xchg
cmp
pop
cmpsb
icebp
push
push
xchg
test
jg
fsubrs
mov
test
loopne
push
lret
xchg
pop
test
shlb
jg
sbb
jmp
imul
mov
lret
and
push
icebp
popf
in
sub
js
and
jne
imul
mov
jmp
sbb
adc
push
and
arpl
stc
jl
imul
xor
cmpsl
rcrb
mov
mov
lock
addr16
xchg
pop
pushf
mov
inc
popf
and
add
insl
dec
stc
lret
insb
xlat
scas
ljmp
insb
jge
inc
fisubl
pop
mov
and
lcall
mov
and
dec
sti
adc
inc
xorl
popf
sti
movl
aad
sbb
push
cmp
pop
mov
mov
dec
xlat
mov
jge
into
cmp
sub
cwtl
sar
sbb
push
movsl
dec
inc
dec
add
aam
lea
xchg
mov
pop
cmpsb
inc
arpl
imulb
fiaddl
pusha
push
or
in
mov
mov
jp
pop
and
cld
mov
inc
sarl
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
xchg
aaa
pop
daa
dec
in
sbb
adc
cmp
jecxz
call
movb
out
pop
js
push
push
cmp
ja
addr16
clc
xchg
shlb
test
cwtl
out
pop
fiadds
scas
aaa
ret
push
or
ja
cmp
lret
mov
scas
into
xlat
ljmp
jnp
ja
fdivl
rorl
leave
push
jae
pop
mov
pusha
push
movsb
mov
jnp
stos
inc
sub
mov
sub
adc
loop
js
out
daa
sub
call
pop
lds
add
push
aam
sar
call
xlat
clc
loope
pop
imul
dec
sarb
push
push
sub
sbb
jge
or
lods
xchg
and
ljmp
mov
or
ja
addr16
fcomi
mov
test
scas
mov
out
xchg
xchg
mov
ja
fisttpl
stos
push
mov
mov
je
loop
hlt
pop
dec
aaa
sub
dec
push
cmp
ja
addr16
cmpsl
hlt
xlat
test
inc
testl
imul
insl
add
mov
ret
stos
mov
in
xchg
loope
ds
cs
sub
xor
jp
jno
cmp
cltd
ljmp
divl
popa
or
mov
and
je
sub
or
call
xlat
mov
out
pop
js
push
push
cmp
ja
or
call
xlat
mov
out
pop
js
ds
pop
gs
xchg
push
mov
push
cwtl
dec
pop
and
xchg
outsb
pop
inc
cmpsb
sub
das
daa
repnz
mov
idivl
xor
push
jae
mov
push
or
sub
jns
adc
subb
add
je
faddl
push
add
lock
hlt
xor
mov
int
jp
add
aaa
arpl
mov
xchg
shlb
pop
and
push
cwtl
jecxz
sub
mov
clc
gs
xor
sbb
test
dec
lcall
xchg
insl
pushf
cmp
mov
mov
mov
xchg
add
ret
mov
testl
test
lods
fistl
push
push
sahf
mov
cmpsb
ljmp
and
inc
out
call
loop
dec
and
dec
cltd
cltd
icebp
xchg
sahf
and
cmp
xchg
and
sahf
adc
sub
rcrb
sub
leave
aad
and
add
mov
aam
outsb
je
jp
mov
stos
addr16
test
data16
data16
in
push
int3
shl
mov
stos
shlb
mov
push
in
pop
loope
and
loopne
std
cmp
popa
notl
pop
bnd
and
add
xor
iret
mov
xor
pop
mov
ret
pusha
push
stc
cmp
jne
ret
cmc
testl
mov
in
cmp
inc
in
mov
cwtl
mov
mov
adc
or
insb
and
data16
push
jo
pop
adc
mov
rclb
pusha
inc
imull
pop
xor
add
ds
outsb
jg
jo
lret
into
dec
adc
mov
dec
sbb
roll
jns
setle
movsl
pop
pop
scas
out
mov
sbb
and
popa
ljmp
dec
leave
gs
mov
sbb
fistps
add
ja
fsts
pusha
scas
subl
jle
sub
lea
cmp
mov
cmpsb
hlt
bound
movsb
sub
xor
sub
adc
outsl
and
les
sbb
pop
es
insb
and
sbb
jo
cmp
lret
pop
mov
mov
pop
ds
and
mov
or
aaa
daa
and
arpl
out
nop
add
add
push
in
mov
push
jecxz
dec
in
lahf
add
xchg
out
cmp
jbe
lods
sahf
sub
jnp
cltd
cmp
add
ljmp
addb
scas
popa
pop
adc
popf
xchg
inc
dec
stc
xchg
sbb
xor
popaw
and
mov
jbe
adc
push
and
pop
sbb
out
push
mov
xlat
or
je
sub
shl
jb
pop
lret
adc
pushf
jnp,pt
lods
xchg
pop
dec
and
inc
sti
pop
mov
outsb
dec
lret
cwtl
es
cmp
stc
adc
in
xchg
dec
xchg
cli
jg
adc
fistl
arpl
inc
mov
enter
daa
xchg
in
inc
icebp
in
arpl
xlat
jnp
adc
dec
arpl
fnsave
addr16
dec
cli
popa
enter
mov
scas
in
fisubrs
mov
xchg
jmp
adc
sub
add
aaa
mov
cwtl
or
mov
dec
adc
pop
xor
js
fisubrs
jne
xchg
jnp
pop
ss
sub
sbb
testl
inc
fcoml
roll
test
and
outsb
dec
sarl
jnp
adc
jnp
test
ja
push
and
pop
int
add
test
sbb
in
loope
ljmp
aaa
push
cmp
pop
push
mov
add
lahf
out
ret
arpl
fidivrs
test
mul
jecxz
pop
imul
push
jne
adc
sub
je
lahf
outsb
jnp
and
out
cltd
out
sahf
iret
nop
mov
movsb
fistpl
cs
sub
test
add
andb
mov
mov
xor
cmc
xchg
jbe
push
sahf
aaa
add
dec
add
xor
adc
cmc
push
in
jmp
rcrb
iret
adc
pop
aad
push
repnz
pop
fdivl
gs
dec
fsubs
jle
call
movsb
ja
jecxz
push
cmp
lcall
int3
addr16
sub
adcl
loope
push
cmpsl
sub
pop
out
pop
and
push
xchg
xchg
xor
popa
pop
dec
jg
inc
fildl
in
push
cli
xchg
movsb
push
ds
lahf
sub
in
out
inc
out
jp
in
call
jb
mov
aas
push
push
test
xchg
jmp
test
fsubs
mov
xor
aam
mov
outsl
repnz
arpl
push
je
dec
ret
sbb
in
push
push
int3
sbb
ss
or
inc
nop
loope
ja
or
nop
cmp
ss
out
or
push
mov
dec
repz
jge
cmp
pop
or
or
xchg
shll
inc
inc
mov
int
aad
orl
sbb
mov
cmpsl
stos
divl
sub
push
je
xlat
mov
out
jecxz
movsb
lret
inc
fildl
aas
push
add
pop
mov
xor
fsubrl
xor
clc
pop
push
popf
daa
pop
ret
sti
add
and
and
xor
stos
mov
xchg
push
imul
int3
inc
stos
jecxz
jne
out
cltd
and
mov
filds
scas
and
js
mov
ja
ss
mov
and
leave
testb
jae
inc
lret
sti
mov
les
push
in
mov
dec
push
nop
jnp
cmp
sub
ljmp
rolb
or
stos
rcl
pop
arpl
mov
xor
sarl
push
shrb
sbbb
lods
cmp
scas
dec
jg
stc
into
xor
arpl
xchg
adc
jbe
push
dec
jne
out
cmp
push
outsb
add
xor
jmp
ljmp
sbb
xchg
inc
jmp
pop
xchg
mov
xchg
popa
js
adc
mov
and
jns
push
stos
ret
cmp
or
jb
ficoml
push
cmp
inc
or
cld
sbb
das
cmp
dec
jns
mov
clc
decb
push
mov
and
cmp
mov
out
lcall
mov
or
xchg
or
repnz
mov
inc
movb
bound
in
or
cmp
cmp
and
adcl
iret
fwait
cld
cmp
loop,pt
dec
or
cld
sub
xlat
cld
mov
inc
insl
push
fisttpl
xchg
jg
mov
rcll
loopne
shrl
xor
int
add
out
xor
add
cmp
xor
jge
repnz
mov
shll
cmpb
and
test
xchg
mov
into
in
or
enter
fsubrp
sub
enter
jnp
iret
inc
popa
dec
dec
cmp
pop
int
pop
adc
daa
jmp
ret
sub
or
or
loop
mov
mov
ss
icebp
sti
popa
or
adc
std
scas
scas
fdivrl
push
int
mov
movsl
xchg
xor
cmp
cmp
jle
mov
jp
arpl
mov
jp
mov
je
mov
dec
jb
sub
jno
pusha
aad
cld
push
push
push
std
sub
out
jecxz
daa
stos
lcall
icebp
pop
sbb
add
and
xor
xchg
xchg
fistpll
jp
and
push
add
sbb
xor
clc
pop
nop
notl
cmp
pop
shlb
xor
push
adc
push
xor
fsubs
xchg
sbb
jp
int3
rorl
mov
sbb
rclb
mov
add
mov
in
cwtl
pop
push
cli
imul
cmpsb
xchg
mov
cmpsl
jae
sub
icebp
jo
scas
mov
add
pop
mov
xchg
negl
cmpsl
xor
sbbl
sar
out
orl
or
pop
dec
lcall
jp
mov
nop
sbbl
out
pop
lret
pushf
xchg
sbb
jle
cmp
test
push
jne
clc
sbb
xor
pop
push
lret
push
jmp
in
out
outsl
add
push
call
addr16
mov
pusha
shlb
orb
aas
shlb
repz
enter
xchg
sarb
ret
aas
lock
dec
movsb
enter
xor
jecxz
push
es
or
int3
push
lahf
adc
outsl
pop
pop
or
add
dec
sub
mov
fsubrs
imul
outsb
ss
sbb
mov
mov
jl
fidivrl
xchg
add
lret
or
mulb
ja
jl
aaa
lret
push
sbb
pop
mov
aas
pop
les
push
je
out
mov
xchg
shll
pushf
adc
mov
testb
mov
cli
pminub
std
ret
adcb
out
cmp
jmp
in
add
bound
cmpsl
mov
popf
sub
in
in
xor
popl
push
cmpsl
adc
sub
mov
movsb
data16
dec
movl
sub
xor
out
mov
popf
outsl
js
cmpb
add
xor
lods
sub
addr16
pushf
ds
cmpl
mul
cmpsl
lods
imul
or
subb
or
call
sarb
cmp
inc
in
jns
mov
aaa
inc
cmp
inc
rclb
mov
stos
or
sar
inc
cmpl
mov
imul
movsl
inc
fstl
pop
out
imul
sub
sbb
data16
loope
adc
int3
xchg
test
lahf
in
sub
iret
or
inc
fstpl
mov
popa
jne
mov
or
shll
push
xor
cmp
lods
cmp
ljmp
cltd
sub
or
pop
xor
sub
mov
adc
cmc
mov
dec
inc
aas
idivl
pop
mov
call
push
cmp
fiadds
adc
xor
xchg
cld
and
ret
in
sbb
mov
jle,pt
stc
movsb
scas
cmc
sbb
nop
xor
cld
fsts
das
cmp
xor
add
pop
fisttps
bound
mov
push
xchg
or
cmp
divb
fs
ss
ret
sbb
xor
movzwl
mov
dec
push
push
je
push
test
hlt
gs
adc
jmp
repnz
rcl
mov
cs
pop
sub
xchg
lock
stc
notb
stos
mov
sti
shrl
pop
repnz
cmpsl
mov
outsb
jl
popw
push
insl
xor
jae
sahf
mov
push
dec
mov
fdivrs
xchg
or
fsubrp
mov
shlb
mov
or
jo
fisttps
out
enter
jp
sbb
hlt
mov
and
adc
sbb
sbb
int3
jb
out
mov
xchg
mov
xchg
shlb
xchg
and
cmc
fsubrs
jbe
push
insl
xchg
fistpl
and
iret
cwtl
jge
mov
int3
jl
test
push
inc
mov
fs
lock
pxor
cmp
ss
pushf
sub
sbb
int3
inc
or
out
sbb
mov
cltd
fadd
xor
insb
push
dec
or
dec
cmpl
and
test
sbbb
int3
aam
out
adc
push
lods
mov
fnsave
sub
mov
mov
xlat
dec
jns
mov
fimuls
cld
sbb
popf
sub
lods
cmpsb
mov
add
xchg
test
cmp
push
clc
and
enter
fnstcw
repnz
shrl
stos
and
hlt
push
mov
outsb
push
aaa
imul
int
cs
push
loope
cmp
pop
cltd
push
adc
sub
outsb
shrb
bound
add
or
dec
dec
pusha
rorb
mov
notb
cmp
adc
mov
inc
nop
pop
fdivrs
mov
ja
inc
fisubrl
nop
lods
and
lock
pop
adc
js
fs
and
jp
push
mov
cltd
cmpsb
push
arpl
push
scas
jae
pop
pop
or
psubq
out
push
mov
pop
xchg
jle
sbb
lods
loopne
mov
dec
outsb
mov
mov
dec
push
cld
push
test
popl
add
dec
adc
outsl
sub
or
cmp
loope
sahf
pop
xor
mov
dec
out
out
jmp
popl
sub
adc
movsl
popa
stc
cli
sub
mov
adc
mov
cmp
xchg
jg
dec
mov
sub
jle
cmc
movsb
popa
cmpsb
lods
sahf
cltd
mov
mov
int3
lahf
cmp
sub
push
nop
fst
mov
fs
int3
daa
inc
fsts
xchg
fsubr
movsb
in
mov
add
pop
jo,pt
loop
inc
cmp
xor
out
int3
fdivl
xchg
adcb
insb
jl
pop
and
pusha
or
int3
xchg
sbb
sahf
jg
sub
out
fsubrs
leave
movsl
leave
jecxz
cli
push
pusha
dec
push
jl
and
loop
dec
xlat
mov
or
div
mov
js
pop
out
or
jo
fistl
dec
xchg
mov
inc
or
inc
mov
imul
mov
and
push
push
inc
jae
call
mov
inc
into
shrl
nop
mov
mov
xorl
cmp
mov
out
mov
jo
mov
xchg
ss
xchg
dec
mov
out
and
add
mov
insb
jae
loope
mov
int
movsb
mov
or
rorl
jae
push
xchg
and
repz
ds
mov
or
into
xchg
test
fs
ret
mov
dec
add
ja
inc
movsb
rcr
push
aad
pop
inc
jp
or
xchg
jns
mov
pop
mov
imul
clc
test
and
dec
daa
cld
xlat
test
or
cmp
in
sbb
push
mov
jns
mov
lea
xor
iret
push
xchg
xchg
adc
add
clc
lret
push
jb
rcll
sbb
mov
jmp
xchg
xlat
or
push
push
xor
xor
sbb
dec
xchg
jg
test
out
push
mov
push
and
insl
clc
fxch
inc
xchg
fucom
sbb
call
cld
js
or
push
jg
fimull
mov
aam
in
sub
popf
imul
or
jl
in
jns
mov
pusha
push
out
stc
inc
mov
or
mov
adc
aaa
mov
shll
fucomip
lahf
adc
mov
fidivrs
lret
fwait
sarb
popa
cmc
cmp
mov
ljmp
adc
cltd
je
ljmp
in
out
sub
lret
sbb
adc
mov
mov
lret
les
call
aaa
les
xchg
push
jae
gs
mov
add
dec
inc
repnz
loop
popl
sub
push
adc
out
push
and
scas
mov
jge
mov
daa
and
mov
sbbb
mov
xor
mov
jecxz
repz
sbb
xor
push
inc
mov
xlat
loopne
mov
aad
popa
mov
popa
int
cmp
sbb
mov
mov
gs
mov
pop
ret
sbb
loop
enter
fsubrl
in
push
call
mov
daa
xchg
add
xlat
int
or
jo
mov
gs
xchg
or
push
sbb
fstpt
cmp
push
rorb
int3
adc
or
call
pop
inc
loopne
ja
cmp
pop
mov
aas
jl
jne
xchg
lods
xchg
cmp
fstl
int3
shll
sti
mul
pop
mov
call
sarl
scas
inc
stc
cmp
leave
cld
daa
inc
out
mov
rol
jge
cli
mov
jne
outsb
call
pop
insb
inc
mov
mov
rol
xchg
outsl
jp
lods
adc
xor
xor
mov
sub
add
icebp
jmp
fcoml
mov
jns
pop
in
loopne
mov
ficoml
cltd
clc
xchg
jo
sbb
xor
aam
subl
insl
jb
cmpsb
out
das
mov
or
adc
xchg
add
and
xchg
or
rorl
stos
stos
fimull
ja
cmp
pop
add
push
std
mov
xlat
xor
and
mov
sti
ds
sti
push
stc
cmp
xchg
cmpsb
mov
pop
or
mov
mov
loop
adc
xchg
mov
out
fsubrl
mov
sub
jge
test
mov
test
leave
xor
and
test
push
ret
mov
pop
inc
or
into
add
iret
in
loope
cltd
inc
sub
mov
push
dec
mov
mov
insl
repnz
cmc
mov
lret
insb
leave
mov
cmpsl
scas
sbb
mov
dec
or
lods
mov
clc
pop
add
pop
icebp
xchg
push
mov
inc
pop
shlb
sti
cmpsl
mov
dec
mov
lcall
and
xchg
ss
cmp
test
sbb
mov
scas
jle
mov
mov
jl
cld
mulb
repnz
cwtl
sbbl
xor
and
xor
enter
xchg
stos
mov
mov
scas
mov
in
or
negl
out
lret
cmp
pop
xchg
inc
pop
pop
mov
sbb
repz
jmp
xchg
dec
enter
gs
sub
pop
push
lcall
fildl
inc
lods
or
out
cmp
fisttpl
sbb
lea
sbb
shrl
cmpsl
sub
negl
adc
xor
ret
jp
mov
ficoms
jg
dec
sbb
cmp
fnstcw
icebp
adc
rolb
test
push
scas
fadd
pushf
and
ljmp
xchg
fxam
ret
nop
inc
test
fnsave
xor
arpl
xchg
xor
dec
lret
arpl
ret
jg
or
dec
jge
xchg
xchg
cmc
incb
jns
jne
out
js
cmp
pop
insb
jmp
ss
mov
movsl
stos
mov
mov
fnstcw
cld
mov
jecxz
ss
cmpsl
push
scas
test
shll
push
mov
fbld
insl
ljmp
sbb
cs
lea
mov
call
out
xlat
and
pop
stc
mov
jmp
sarl
inc
mov
and
fstl
es
jb
dec
loope
scas
mov
mov
in
pop
das
jecxz
add
ja
les
lretw
mov
clc
jae
neg
cs
inc
ds
nop
pop
cli
jge
cwtl
inc
cmpsb
pop
fdivrl
jbe
add
movsb
out
or
cmp
pop
std
les
xchg
xchg
jns
enter
fwait
mov
test
inc
fstpt
jg
xor
xchg
popa
jp
pop
stc
adc
sub
ja
push
pop
and
imul
repnz
lcall
push
sbb
aaa
icebp
add
dec
imul
icebp
in
jle
inc
mov
pop
adc
add
cmpsb
sub
adc
adcb
xor
add
out
cmpsb
jae
xchg
sbb
pushl
mov
mov
adc
adc
cmpsl
xchg
gs
pop
mov
add
cs
aam
cmpsb
out
std
dec
jbe
push
stos
and
sub
cmpsb
xor
jne
dec
cmpsl
pop
sbb
cmpsl
lret
es
cmp
ds
jmp
and
inc
mov
repz
test
repz
mov
lahf
popf
sub
iret
cmp
fcmovb
push
idiv
out
inc
repz
lds
mov
stc
dec
sbb
ret
jbe
inc
sbbl
adc
daa
clc
sbb
push
cmp
push
inc
xchg
js
into
lret
stc
addl
in
push
inc
ret
mov
out
jnp
sub
movsl
push
or
adc
out
jecxz
mov
iret
test
negl
ja
jecxz
pop
mov
mov
adc
loope
push
and
scas
pop
icebp
insb
fistps
jecxz
nop
add
hlt
xchg
scas
pop
daa
dec
push
cmp
ja
or
call
xlat
mov
out
pop
js
push
push
cmp
ja
or
call
xlat
mov
out
pop
jl
data16
inc
daa
dec
push
cmp
ja
or
in
mov
cmpsl
rcl
test
xchg
out
push
pushf
push
mov
mov
inc
sub
addr16
inc
sbb
rorb
loopne
lock
mov
jbe,pt
daa
aaa
js
imul
fisubrl
xchg
xchg
out
mov
mov
inc
push
push
cs
push
pop
push
outsb
es
faddp
sahf
add
test
mov
mov
pop
sahf
push
test
clc
outsl
pop
pop
push
push
inc
xchg
and
fcomip
out
movl
aas
push
dec
std
iret
push
jge
mov
loop
mov
stos
pop
iret
in
add
dec
pop
push
out
mov
push
lea
mov
push
notb
dec
add
outsl
cmpsb
jae
pop
mov
mov
push
sbb
fcmove
inc
popa
push
push
pop
inc
jae
xchg
push
xchg
sbb
push
push
push
imul
mov
leave
fwait
xchg
int
mov
aad
imul
jle
mov
cltd
xchg
mov
fucomp
sub
aaa
dec
dec
into
push
mov
ficomps
mov
dec
push
mov
data16
mov
jmp
xchg
scas
repz
jecxz
pop
out
cmpsb
cmp
jbe
insb
dec
push
sbb
outsb
aas
das
jl
or
jbe
mov
sub
and
push
push
ja
push
sub
dec
pop
pop
out
scas
fildll
cmpsl
jmp
lds
ds
push
imul
aas
and
inc
or
mov
xchg
shlb
fwait
lret
jl
sub
add
push
push
outsb
es
mov
sahf
scas
out
test
ficoms
push
inc
push
push
cs
push
pop
push
outsb
es
mov
sahf
scas
out
test
ficoms
push
inc
fcmovbe
xchg
add
aas
sahf
movsb
das
addr16
inc
outsb
jl
add
add
jp
int
in
jmp
movsl
aas
pop
add
jnp,pt
cmpsb
mov
push
je
sbb
loope
adc
mov
dec
cmp
xor
aaa
and
lcall
inc
xchg
push
cmp
mov
in
push
jge
cmp
test
jo
aaa
out
dec
dec
inc
out
jbe
fwait
test
scas
repz
sbb
pop
les
or
xchg
fisubl
mov
mov
icebp
cmp
clc
xor
lea
adc
jbe
test
cwtl
in
cld
xchg
inc
pop
mov
int
cwtl
repz
addr16
ljmp
enter
xor
aam
andl
leave
jp
clc
int
lods
or
mov
ljmp
std
sub
mov
scas
cmp
adc
aas
rcrb
cs
fidivs
pusha
jmp
adc
mov
xchg
int
pop
jo
lret
mov
adc
movsb
inc
pop
ror
cwtl
sub
out
movsl
xchg
push
or
add
out
push
mov
fimull
scas
pop
and
outsl
xor
out
add
stos
fs
sbb
int
mov
shlb
cmc
cmp
js
inc
cwtl
and
cmp
or
jmp
repnz
in
cmc
shrl
pop
loop
es
push
loopne
popa
add
stos
negb
adc
imul
add
cmpsl
movsb
inc
xchg
and
mov
fnstcw
mov
dec
push
sub
imul
mov
les
jecxz
int3
arpl
add
rclb
sub
rcll
jp
inc
sub
pop
inc
xor
lods
gs
xchg
addr16
push
data16
xor
push
jnp
or
lods
inc
pop
xor
lcall
lds
push
sbb
stc
mov
mov
cmp
dec
sbb
faddl
xchg
cli
and
cmc
gs
fs
or
lock
or
and
out
dec
ljmp
pushf
mov
add
sub
loopne
rorl
repnz
push
movsl
ja
cmpsl
insb
dec
imul
jae
xor
ret
fildll
xor
mov
xor
test
int3
enter
sub
pop
mov
sbb
inc
mov
insl
mull
xor
cmp
out
les
orb
in
and
lret
pop
xchg
xlat
jnp
cwtl
cmp
and
loope,pn
sbb
aad
xor
xchg
mov
pop
fs
movsl
add
into
jge
xchg
andb
inc
scas
imul
xchg
mov
loope
push
cmpsb
dec
lret
xchg
clc
dec
orl
push
in
mov
inc
sbb
ret
adc
pusha
fdivl
int
mov
fldz
fidivrl
sub
xchg
sti
jge
mov
test
cmp
dec
mov
lock
inc
sub
cmp
dec
in
addr16
inc
xchg
xor
xchg
xchg
xor
jl
bound
cmp
xchg
call
xorb
pop
push
inc
add
pop
stc
fbstp
sbb
popf
cmpsb
int3
lock
cmp
push
and
bound
or
xchg
cld
pop
sbbl
ds
shrb
loopne
jne
sti
cltd
pop
lods
and
fidivl
cli
and
jno
mov
sbb
sbb
loopne
jecxz
dec
subb
loopne
push
xlat
or
daa
movsb
leave
jns
pop
xor
or
sub
mov
mov
fwait
in
ret
jb
mov
stos
aas
je
ljmp
fisttps
cmp
inc
cmc
jne
mov
out
out
dec
filds
jae
negl
and
clc
pushf
push
movsb
mov
jecxz,pn
mull
dec
fidivrs
mov
out
mov
mov
xchg
dec
cmp
xor
adc
pop
test
sub
cmpsb
sbb
stos
jg
pop
pop
popa
inc
sub
add
mov
mov
js
test
mov
arpl
add
xchg
jg
adc
rolb
adc
xor
pop
dec
cld
dec
push
add
add
jecxz
mov
inc
xlat
cmp
sbb
adc
dec
pusha
scas
or
sbb
jp
gs
outsb
mov
ret
cmp
add
xchg
repz
add
mov
sub
out
lret
adc
je
push
mov
and
mov
jns
add
adc
add
xchg
mov
add
mov
cmc
pop
jae
repz
imul
aam
pop
mov
xchg
jecxz
push
arpl
into
stos
pop
popa
pushf
and
movb
std
mov
jne
pusha
cld
dec
dec
aas
or
inc
jge
and
fsubp
xor
lahf
xchg
xor
adc
loop
cmp
mov
pop
pop
shlb
fiaddl
es
rcl
and
mov
pop
std
jp
mov
cmp
pop
lret
in
sarb
mov
pop
inc
xor
xchg
add
ret
sbb
fdivs
cs
inc
pop
pop
rcl
and
xor
dec
jb,pt
mov
push
bsr
rclb
sub
fisubrs
fsubr
mov
add
dec
test
insl
pop
loope
add
jmp
or
and
push
or
or
mov
jge
cmpsl
xor
add
in
gs
inc
fimuls
inc
lret
out
ret
lods
into
inc
outsb
xchg
rcll
jnp
lret
sub
test
pop
andb
pop
inc
out
ret
push
mov
sbb
and
leave
push
dec
test
ljmp
js
cmp
pusha
add
in
fisubrl
xor
stos
insl
jns
xchg
mov
jmp
in
sarb
mov
test
in
imul
aas
mov
in
cmp
mov
fxch
mov
lret
jnp
mov
mov
add
cltd
mov
dec
mov
dec
fistps
inc
imul
mov
lcall
aam
sbb
push
scas
ret
insl
jnp
mov
mov
bound
cmp
lods
mov
in
dec
aad
push
cwtl
movsl
push
push
pop
cli
push
adc
add
icebp
adc
aam
xor
xor
insl
xlat
lret
lods
mov
xchg
adc
aam
dec
or
jns
mulb
sub
pop
sub
and
jnp
inc
push
mov
loopne
cmp
sub
mov
jno
jecxz
dec
jo
adc
std
pop
xor
add
fiaddl
out
cmp
mov
mov
xchg
cmp
dec
mov
clc
sbb
les
sbb
push
test
push
cmp
inc
xchg
clc
dec
adc
pop
cmpsb
adc
and
cwtl
xor
push
push
dec
sbb
mov
cmpsb
mov
shlb
sub
push
mov
pop
jmp
push
cmp
and
outsl
je
xchg
call
adc
jecxz
adc
inc
loop
jno
or
movsl
js
add
inc
lret
push
sbb
cmpsl
js
rcl
lds
pop
out
xchg
fmull
dec
imul
arpl
sahf
jns
adc
test
and
das
leave
sahf
inc
jb
pop
sub
ds
lcall
inc
sub
xchg
fnstcw
cmp
jl
out
xlat
or
jo
fs
mov
ss
dec
test
cmp
outsb
and
fadd
adc
icebp
in
jg
cmc
cli
inc
stos
and
js
call
aam
cmpl
popf
xor
dec
cltd
aad
divb
mov
hlt
dec
jb
push
adc
xlat
pop
dec
jb
fsubl
fsts
sbbb
pushf
ja
nop
dec
dec
dec
push
and
adc
jl
adc
mov
xchg
jnp
lahf
test
push
jmp
shll
dec
enter
aam
movsb
fsubr
fwait
or
jmp
shrb
mov
inc
outsl
push
jp
cmp
inc
ja
xchg
int3
lods
pop
lods
in
mov
jnp
xor
dec
cmpsb
and
cmp
push
repz
mov
mov
repnz
dec
xchg
xchg
ljmp
xor
push
mov
sub
mov
rcr
cmpsl
fcoml
sbb
push
out
push
jno
ja
mov
addl
ss
jg
xchg
xor
ud2
push
cmp
mov
sub
or
sbb
xor
scas
push
jmp
cld
testl
push
xor
pop
mov
push
ja
sub
cmpsl
jns
cmp
and
xlat
mov
fwait
int
or
sub
daa
insb
sub
sahf
jge
ret
and
jg
test
std
mov
test
imul
sub
and
in
in
in
out
cli
push
pop
lods
lds
in
and
or
sbb
adc
lds
cmpsb
call
mov
mov
cmp
xor
cmp
repnz
mov
mov
shlb
sub
shlb
dec
std
xor
mov
xorl
popa
dec
add
out
mov
aas
push
add
pop
cmp
fldenv
mov
jmp
mov
mov
sub
es
popf
lods
aad
pop
pop
leave
dec
repz
mov
cs
repz
xchg
xlat
cmp
movsl
xchg
push
dec
call
cmpsb
adc
ja
pushf
cmp
sbb
insl
loop
mov
xor
mov
or
inc
sarl
sbb
lods
and
push
roll
inc
sbb
fsubl
in
stc
xor
ret
mov
in
js
daa
aad
rorl
dec
mov
cmp
fisubrs
adc
jp
stc
fs
adc
pop
outsl
mov
js
add
jl
and
mov
and
sbb
out
push
test
fsubl
in
stos
push
mov
add
cmpb
push
sub
add
fsub
xor
or
rorl
push
inc
fwait
or
andb
xor
outsb
imul
xchg
cmc
ror
push
cltd
push
mov
pop
or
aam
inc
jl
shl
dec
ds
adc
mov
xchg
int3
sbb
mov
jecxz
mov
mov
pop
insb
jl
scas
out
nop
and
ds
arpl
shrb
jns
push
push
pop
mov
roll
mov
in
pop
pop
hlt
gs
subb
and
lret
mov
sbb
inc
repnz
sbb
push
inc
mov
sub
pop
or
js
aas
sahf
dec
push
cmp
sub
popf
xchg
test
leave
dec
add
fidivrs
sbb
cmpsb
popf
xlat
fmull
mov
push
and
aaa
out
mov
xchg
jecxz
popa
or
add
je
js
lret
and
sub
push
pushf
ss
cwtl
imul
aad
push
aas
jmp
jns
adcb
adc
in
ret
cmpsl
adc
sti
es
jno
dec
and
imul
push
imul
ds
stos
imul
int
or
and
das
and
mov
out
xor
enter
push
das
imul
adc
and
and
mulb
push
cwtl
out
and
pop
inc
outsb
stos
xor
stos
or
mov
lods
mov
jmp
aas
and
scas
fdivr
outsl
out
cmp
cmp
inc
jl
pop
fisubrl
xchg
punpcklwd
sub
dec
mov
xchg
fwait
pop
jg
jmp
push
lods
xchg
inc
shl
mov
daa
popa
sarb
jno
mov
xor
mov
cwtl
fmull
sbb
mov
mov
push
cld
xor
xor
inc
mov
dec
inc
mov
inc
add
int3
and
mov
jnp
scas
inc
jmp
sbb
mov
fwait
cmp
jle
add
sbb
adc
shlb
aam
enter
aas
test
xor
jae
test
sub
mov
cmpsl
sub
ds
adc
jp
xchg
out
pop
popf
xor
lahf
lret
lret
push
jge
add
fwait
hlt
push
cmpb
fistl
iret
dec
lock
sti
mov
xor
sbb
loopne
lock
mov
pop
mov
je
gs
sbb
and
ljmp
or
xchg
mov
sbb
xchg
push
sbb
push
wrmsr
xor
sub
iret
inc
and
push
cmp
push
xchg
ja
dec
loop
std
cmpsb
adc
push
jno
mov
mov
data16
add
add
jge
in
push
out
arpl
xchg
push
je
sti
rcrb
mov
cs
mov
add
jecxz
pop
loop
jmp
push
mov
sti
sbb
imul
lock
sbb
xlat
ljmp
roll
mov
xchg
in
sarb
rcll
or
pop
xchg
sub
andb
dec
mov
nop
xor
test
sub
test
scas
insl
test
pop
xchg
mov
add
sahf
mov
ja
in
mov
sub
or
xlat
dec
lods
xlat
lahf
xor
xchg
xchg
sbb
xorb
or
pop
es
loope
loop
addr16
lcall
aad
add
loope
fbstp
out
push
imul
lret
or
mov
mov
dec
adc
xor
stos
repnz
movsl
inc
xchg
adc
mov
lds
test
mov
mov
aad
test
lds
cmpsb
int3
addr16
int
ds
popf
imul
insl
jbe
std
negl
in
or
ds
lahf
sub
ret
repnz
cmc
and
mov
jecxz
mov
fcmovu
pop
or
in
je
rorb
fwait
xchg
mov
or
and
outsb
rorb
mov
cli
stos
sub
push
jp
dec
inc
mov
int3
dec
push
loopne
imul
adc
jne
and
jo
jbe
mov
cmp
mov
mov
into
lret
pop
jge
mov
mov
add
fdiv
lcall
jp
iret
and
adc
incb
ljmp
ljmp
cmp
nop
int3
adc
or
in
push
loopne
or
mov
xchg
pop
add
std
push
aam
jle
pop
lret
xor
ds
mov
jae
mov
pop
movsl
sarl
into
cmp
cmpsb
std
inc
iret
aad
sbb
adc
xor
mov
adcl
ljmp
mov
inc
orl
inc
clc
mov
sti
dec
aas
push
mov
ret
pop
pop
rorl
jne
dec
rcr
dec
and
jbe
pushf
sub
xor
or
cs
ja
xchg
add
dec
sarl
push
in
mov
mov
popa
push
lds
lods
adc
cmp
dec
sub
dec
cmp
imul
nop
and
mov
bound
fldl
xchg
jbe
jecxz
int
aam
out
and
push
andb
insl
loopne
inc
jno
inc
daa
mov
adc
int
push
cwtl
xchg
pop
pusha
jns
pusha
xchg
orl
fcmovb
adcl
stc
rol
lea
mov
rcl
in
insl
mov
out
add
push
aaa
mov
push
test
mov
sbb
cli
test
mov
pop
lock
or
fnstcw
push
or
aad
dec
lahf
inc
out
jns
or
sarl
lahf
repz
aad
lds
jns
lods
sar
xor
jb
cmp
mov
or
ror
add
shll
and
cld
xlat
xorl
dec
stos
pop
and
outsb
pop
jg
fldl
mov
jmp
aad
dec
pusha
jmp
out
mov
hlt
dec
out
sub
sti
pop
sbb
cmpsb
sbb
insl
arpl
stc
sbb
jmp
mov
sbb
dec
lods
sbb
pop
out
clc
pop
dec
inc
pop
in
mov
push
insb
into
and
movsl
mov
repz
enter
dec
jne
dec
xchg
in
jo
push
pop
xchg
cmp
fists
xchg
sbb
shr
xor
add
push
sub
xor
out
rorl
pop
cmp
jo
cltd
les
xbegin
dec
imul
jns
scas
out
mov
jmp
jp
outsl
cmp
or
inc
lods
adc
stos
pop
pushl
sub
call
inc
pusha
cli
adc
lea
aad
and
addb
movsl
or
aad
mov
popa
flds
mov
cmp
cltd
fcmovnb
push
fs
loope,pn
jb
add
dec
sbb
cmp
test
mov
mov
jge
mov
and
out
xchg
mov
ss
dec
and
rcrb
loop
inc
movd
pop
in
mov
js
ds
arpl
mov
sti
xor
inc
add
mov
xchg
mov
cmc
addb
imul
or
movsl
ficoms
pop
push
and
inc
pop
mov
dec
data16
jmp
cmp
jle
xchg
sti
je
sub
inc
cmpsb
or
add
lret
adcb
fldl
das
loop
daa
aam
inc
or
fldl
rorb
aaa
fidivrl
dec
push
add
fisubl
and
jae
cmp
gs
add
or
lods
xor
dec
in
cmpsb
nop
or
mov
addr16
in
int
lahf
pushf
data16
push
adc
cmpb
lods
addl
sahf
hlt
sub
cld
faddl
cmc
and
mov
mov
xchg
push
aaa
mov
xor
and
mov
jmp
dec
inc
sbb
shll
lds
dec
or
dec
cmp
das
test
adc
inc
inc
shlb
sub
inc
lea
sub
cmpsl
test
push
daa
or
cmpb
dec
data16
sub
mov
into
fldl
inc
in
fdivrl
dec
mov
out
push
xor
ljmp
mov
adc
mov
out
cmp
xor
or
dec
out
inc
cmpl
in
and
std
push
inc
xor
shrb
pop
add
repnz
rorl
scas
enter
mov
adc
inc
imul
pop
xchg
movsb
mov
add
sub
dec
daa
fsubl
dec
rcl
sbb
xchg
dec
add
mov
xor
xchg
lea
repnz
xchg
dec
scas
xor
lahf
xchg
inc
mov
imull
adc
pop
pop
bound
sbb
cwtl
out
pop
enter
add
lods
xchg
cltd
xor
aaa
xchg
push
push
sahf
inc
lret
mov
fsts
sarl
add
in
add
psraw
mov
mov
jno
js
repz
shrb
push
stos
adc
scas
mov
scas
das
int
insl
mov
insl
pop
daa
in
in
pop
jo
dec
xor
outsl
lret
sub
lahf
sub
leave
sub
cltd
fadd
mov
ss
jmp
pop
mov
xchg
xor
sbb
inc
fwait
mov
or
jae
cmp
hlt
fdiv
adc
cwtl
jne
dec
notl
gs
pop
cld
adc
jmp
push
sti
sub
adc
fstps
sbb
in
inc
sub
xchg
cmpsl
or
fbstp
adc
rorb
outsl
or
adcb
pop
jae
pop
ret
inc
add
insl
xchg
sahf
gs
sahf
mov
leave
cmp
shl
sbb
add
push
shrb
outsb
sub
inc
pop
or
inc
nop
in
jnp
cltd
or
das
adc
mov
shll
or
ja
xlat
xchg
dec
and
mov
ja
mov
in
add
inc
mov
loope
incl
pop
push
imul
cmp
js
jb
inc
pop
shlb
mov
jecxz
sub
push
stos
fsts
inc
outsb
fs
mov
push
sahf
jp
inc
mov
sub
push
int
mov
jo
nop
hlt
xor
in
lea
addb
inc
clc
sahf
in
dec
rorl
and
jno
pushf
add
aam
and
lods
out
lcall
add
sbb
push
push
int3
push
inc
test
push
xchg
sti
fcoml
aad
test
jbe
cmpl
stc
int
mov
push
and
stc
loop
aas
and
sbb
insb
outsl
mov
jp
hlt
mov
push
inc
pop
inc
data16
xorb
mov
mov
or
or
movsb
add
loop
inc
or
mov
dec
fs
add
fcomps
adc
test
orb
ret
jge
les
mov
arpl
loopne
subl
clc
lcall
mov
pop
push
outsb
es
mov
sahf
scas
out
test
ficoms
push
inc
push
push
cs
push
pop
push
outsb
es
mov
sahf
scas
out
test
ficoms
push
inc
sbb
jbe
push
pop
push
outsb
es
mov
sahf
cmpsl
out
test
cmpsl
into
mov
inc
xor
pushw
jbe
push
dec
push
outsb
es
ss
popa
jl
out
cmpl
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
movsb
add
adc
and
xor
inc
loope
cmp
outsb
mov
ret
push
loop
bnd
and
xor
bound
repnz
das
rcrb
mov
notl
and
xor
bound
xchg
xor
cmp
insl
nop
repnz
out
dec
xchg
dec
mov
mov
mov
xchg
lcall
rcrb
ljmp
fiadds
jns
push
lods
outsb
fs
xor
mov
jns
repnz
mov
xchg
aad
pop
lock
scas
orl
insl
push
bound
adc
xchg
ds
inc
xor
in
mov
pop
pop
adc
mov
sbb
adc
xchg
outsb
inc
mov
icebp
jbe
xchg
lds
dec
jb
shrb
cs
sbb
out
in
xchg
inc
inc
lret
add
and
xchg
xor
dec
mov
xlat
ds
ds
adc
and
xor
bound
xchg
inc
mov
rcrb
loop
fwait
lea
adc
cs
push
pushf
sub
and
out
out
lret
push
mov
imul
and
inc
lret
ss
outsb
out
ret
cmp
pop
mov
push
mov
mov
inc
scas
push
sahf
bound
xchg
pop
mov
rcrb
loop
repnz
out
adc
and
xor
bound
xchg
pop
mov
rcrb
loop
repnz
sub
jne
mov
mov
nop
aad
inc
add
je
lahf
mov
ss
iret
ss
lret
cmp
repz
js
jne
loope
in
scas
ffreep
aad
test
jle
push
mov
shll
jno
push
mov
daa
xchg
push
out
add
cli
pop
mov
pop
arpl
cmpsb
jge
test
jns
pop
adc
inc
stos
sbb
jns
push
push
fidivs
js
pop
jnp
pop
inc
cmp
push
cmp
mov
cmpsl
adc
mov
cmp
dec
fldcw
ss
add
fisttpll
rcr
sbb
pop
ret
mov
add
and
sub
mov
cltd
xchg
inc
ss
shll
sbb
fs
push
inc
inc
hlt
cmc
cmp
lret
mov
dec
fnstenv
in
mov
inc
cmpsl
sti
jg
sahf
push
cwtl
sub
inc
ds
push
dec
rcrl
ret
mov
lret
test
sub
dec
popf
dec
and
call
fwait
mov
sub
cmp
pop
jmp
test
xchg
ds
lods
pop
xor
in
cmp
stos
mov
lret
sub
imul
mov
int3
xchg
aad
popf
mov
and
xor
loop
std
sahf
clc
stos
aad
ds
out
lock
pop
pop
rcr
mov
lahf
mov
and
push
pop
inc
mov
mov
sbb
xor
ret
push
sti
dec
mov
pop
rolb
dec
lcall
push
inc
scas
sbb
addr16
cli
into
or
cmp
xchg
xchg
inc
pop
push
mov
fbld
jmp
outsl
loope
pop
pop
adc
adc
jle
mov
andl
mov
push
push
call
rorb
inc
adc
lock
add
add
out
jnp
mov
adc
lahf
cmp
pop
pop
stc
mov
mov
mov
iret
ret
dec
das
sub
mov
rep
sbb
clc
out
fists
inc
jae
or
nop
and
xor
cmp
jae
push
pushw
sbb
lret
push
jne
fisubrs
repnz
push
jno
mov
and
adc
mov
mov
sub
sub
scas
pop
jle
jg
push
insb
inc
lea
aaa
xchg
sub
sbb
inc
repz
pop
mov
mov
and
adc
fsubl
xor
out
js
rcll
fwait
out
fdivl
inc
xor
jnp
ret
cmp
iret
mov
negb
mov
fnstenv
adc
adc
and
cmp
inc
inc
mov
mov
xor
rorb
inc
dec
in
aam
clc
xchg
andl
xor
cs
in
test
insb
mov
mov
imull
push
xchg
ret
push
test
cmp
and
arpl
aas
dec
dec
mov
ret
mov
push
jo
jbe
call
sub
imul
stos
fs
cmp
lods
lods
push
jo
pop
mov
sub
lods
shlb
inc
test
mov
pop
pop
jnp
les
movsl
mov
fnstenv
jbe
aam
sub
push
cs
stos
xchg
dec
outsl
jmp
bound
or
adc
test
cmpsl
scas
fucomi
jnp
add
add
sub
mov
push
add
mov
sbb
mov
loope
aam
ja
js
daa
mov
mov
sub
sub
cli
daa
in
cmp
insb
pop
mov
std
push
push
add
mov
mov
cli
push
scas
ljmp
and
pushl
insb
pop
bound
lret
or
jmp
pop
mov
sub
jge
push
into
pushf
ror
xchg
outsl
dec
sahf
and
jle
fstl
or
or
xor
je
cmpl
adc
jmp
push
mov
cmc
xlat
add
stos
idivl
add
cmp
jmp
movsl
mov
or
pop
pop
cs
mov
icebp
sti
subl
jne
xchg
nop
js
or
mov
movsl
or
iret
mov
int
in
test
push
pop
or
sbb
fdivl
mov
add
lock
jecxz
push
pusha
mov
or
mov
stos
fisubs
lds
outsl
mov
flds
imulb
sub
dec
and
and
push
jns
leave
js
or
or
rcrl
push
cmpsl
cld
sub
lcall
fadd
fisubs
push
nop
push
lahf
dec
push
mov
das
xchg
cmpsl
data16
cmp
push
popa
out
imul
arpl
sub
mov
repnz
fildl
inc
fdivrl
inc
leave
repnz
fsub
mov
ret
lcall
push
inc
mov
cld
fdiv
lret
pop
insb
or
pop
jge
push
xor
nop
sub
fstpl
mov
inc
jge
stos
mov
mov
les
push
jle
sub
adc
xchg
andl
sbb
int
push
pusha
xchg
push
xchg
mov
adc
jmp
jne
pop
inc
or
xchg
push
cmpsl
nop
adc
sbb
xor
jg
sub
cmpsb
dec
inc
mov
pushf
mov
pop
lds
loop
jp
sub
ficoml
divb
ds
push
popa
addr16
loope
aad
cltd
inc
jecxz
lret
iret
movsb
call
mov
mov
inc
ja
push
shlb
pop
out
out
popa
mov
lahf
pop
popa
iret
jae
pop
jno
mov
jbe
cld
jno
and
xchg
or
jg
jge
add
movsb
dec
mov
push
jb
sbb
push
cld
push
repz
adc
pop
and
bound
mov
mov
adc
xchg
mov
inc
cmp
sbb
repz
sub
sub
mov
loope
jmp
in
repz
rclb
dec
dec
push
lds
sbb
enter
arpl
fildl
dec
shll
aaa
dec
adc
sbb
loopne
cmp
out
jne
mov
cmp
dec
testb
pop
stos
movsb
inc
xor
out
int3
sub
testl
dec
lea
sub
mov
add
cmp
mov
or
inc
lcall
int3
sub
out
lahf
push
lcall
aad
ljmp
outsb
mov
rcrl
lret
lcall
pushf
cli
shl
sub
dec
inc
cld
jno
mov
dec
jo
sub
or
pop
mov
cld
or
movnti
mov
xor
dec
pop
nop
add
mov
mov
sbb
mov
cmc
dec
add
lea
cmp
ds
jo
fsubp
jg
xor
rcl
addl
in
icebp
lea
es
ds
xchg
add
lahf
push
or
mov
cmp
mov
push
hlt
fists
push
fwait
cmpsb
inc
shlb
and
test
add
cmp
pop
mov
lahf
jo
jecxz
test
inc
int3
fs
out
push
fisubs
loopne
cld
stc
xchg
adc
cld
inc
pusha
ljmp
pusha
push
adc
popf
ret
sub
mov
push
jl
aad
adc
rorb
mov
icebp
arpl
push
xchg
into
sub
and
xchg
mov
lds
jge
insb
sbb
push
mov
sub
mov
sbb
sbb
and
movsb
out
add
mov
mov
dec
and
xchg
adc
lcall
or
les
daa
mov
rcrb
cmp
fidivrs
inc
jmp
mov
pop
xchg
cs
add
push
mov
mov
test
push
mov
mov
sub
dec
or
cmpb
sarl
sahf
or
jle
dec
ret
adc
enter
push
push
aas
push
call
call
or
cmp
cmp
loopne
cmpsl
test
or
cmp
mov
add
fidivrs
je
jg
test
and
mov
jg
in
sarl
fisubl
push
jmp
lock
sub
or
and
jp
ror
inc
bound
cmp
xor
out
rolb
cmpsl
mov
std
pop
enter
mov
pop
lds
push
push
jb
cmp
push
daa
ret
int3
inc
push
and
movsb
xchg
fmull
jecxz
dec
jbe
inc
xchg
outsl
push
pushf
aad
xchg
ror
and
inc
subb
mov
cmp
repz
ss
test
xor
mov
insb
outsb
into
cltd
and
out
fldl
mov
and
sub
or
and
xchg
outsl
cmp
hlt
sbb
sbb
adc
mov
lahf
inc
sbb
out
popf
sub
lcall
dec
push
jle
mov
or
imul
nop
jbe
mov
in
ret
xchg
in
test
std
push
jge
cmp
js
rolb
xor
sti
es
lcall
ljmp
cmp
test
test
movsl
mov
pop
scas
test
cmp
mov
rclb
sbb
add
loopne
lahf
icebp
cmp
adcl
mov
jle
add
repnz
movsb
mov
cmpsb
lods
add
idivb
sbb
inc
and
idiv
mov
push
pop
shll
test
mov
es
int
pop
add
or
push
movsl
jbe
jle
insb
shl
cmp
jge
pop
out
cmp
mov
sub
sbb
loope
lds
stos
arpl
mov
outsb
leave
mov
mov
fstpl
mov
sti
dec
adc
fwait
pop
cmc
sbb
inc
inc
push
in
sti
xchg
mov
out
jle
jnp
int
jp
loope
xor
int3
mov
xchg
insb
cwtl
inc
icebp
cmpsb
popa
xor
or
cltd
xchg
in
fs
dec
pusha
jb
in
stos
lods
repnz
and
cld
sbb
mov
adc
dec
out
ss
jne
and
pushl
fstpt
cld
rclb
addr16
faddl
push
in
pop
scas
mov
pop
inc
and
xchg
mov
xchg
das
insl
sbb
pop
mov
icebp
lret
pop
sub
or
mov
sbb
add
negb
fldt
cmp
scas
sarb
test
pushf
sbb
inc
icebp
fcompl
arpl
mov
push
enter
mov
or
movsl
rcll
mov
divl
dec
sbb
enter
out
adc
xchg
pop
push
mov
pop
and
dec
xor
push
cmpsb
fistps
mov
sub
inc
xor
cli
std
pop
or
add
cmp
add
addl
add
inc
out
mov
pop
lcall
scas
repz
push
pop
xlat
ret
cs
daa
sub
daa
inc
cltd
or
out
in
inc
gs
mov
cmp
sbb
in
pop
push
js
mov
out
ffreep
pop
cmp
iret
out
pop
push
or
or
sub
mov
popf
cmp
arpl
lock
scas
and
pop
jns
int3
add
pop
mov
xchg
push
push
adc
movsb
mov
or
pop
rcrb
fisttps
sbb
popl
loope
fimuls
and
push
rorl
xchg
xor
inc
and
xchg
mov
clc
fmuls
shll
fwait
xlat
lock
addl
add
loopne
in
pop
hlt
subl
add
xchg
adc
dec
cmp
movsb
xchg
cli
push
push
cltd
jle
push
or
jno
dec
xor
push
and
sub
icebp
jne
roll
jmp
bound
fwait
cld
jp
cmpsb
in
push
and
jbe
out
cmp
pop
std
mov
ret
add
pop
adc
sahf
push
int
mov
xor
into
pop
lea
xlat
bound
rorl
subl
push
dec
std
icebp
sti
jmp
lahf
xorl
aam
sub
rcll
roll
loope
enter
movsl
rcl
jb
push
cli
mov
ret
lcall
mov
pop
push
subb
lret
pop
mov
notb
dec
aas
inc
pop
pop
mov
mov
sub
in
push
pop
ss
pop
stos
xor
imul
adc
fnstsw
jae
ljmp
ja
sbb
lods
ffreep
cld
sub
ret
sbb
xchg
pop
jmp
sbb
mov
fcmovnb
jge
mov
or
xor
in
scas
xorl
popf
cmp
dec
add
imul
jg
mov
imul
movsb
ds
or
or
inc
daa
pop
pop
ss
adc
cmp
das
repz
and
cmp
aad
fidivs
test
ret
aas
mov
cmc
push
fldt
out
shll
pusha
xor
mov
fldl
xchg
dec
iret
push
jg
mov
xlat
sahf
fs
nop
sub
mov
add
xchg
pop
aas
lret
add
push
repz
lret
or
bound
mov
mov
cli
cmp
stc
mov
and
add
dec
jns
xchg
inc
xor
inc
cwtl
loope
pop
jecxz
std
sti
push
mov
xor
inc
inc
push
dec
lahf
jo
dec
adc
add
fcmovnb
push
into
mov
pop
dec
data16
push
or
mov
in
int3
cmp
ds
scas
and
mov
pop
scas
testl
call
cs
adcl
outsl
sub
insw
inc
jbe
ss
icebp
push
xlat
lcall
fiaddl
inc
mov
xor
int3
ja
pop
adc
stos
and
add
in
and
and
int3
dec
adc
adc
pop
adc
add
mov
setno
ja
pop
inc
js
sub
out
inc
in
jo
mov
popf
test
ret
jg
mov
add
jp
shrl
push
pop
lock
push
dec
mov
pop
ljmp
mov
mov
inc
pop
test
inc
jg
sub
cs
test
cwtl
rcl
mov
rorl
stc
inc
xchg
xchg
lds
out
or
adc
iret
cmpsb
nop
dec
mov
sti
mov
mov
movsl
pop
sbb
jbe
mov
test
je
jge
jb
push
fisubl
sbb
inc
inc
push
leave
dec
cmpsb
fs
mov
mov
stc
rcrb
into
inc
icebp
sub
lret
mov
lahf
push
fstps
sti
popf
data16
xor
fadds
mov
jge
pop
mov
dec
lret
sub
add
divl
mov
xor
xchg
push
idivb
fadd
xchg
lcall
ljmp
xchg
mov
jns
cli
push
cmp
xchg
mov
xchg
adc
inc
xchg
adc
ret
imul
iret
daa
aad
mov
mov
inc
mov
rol
loopne
aam
inc
mov
imul
out
and
je
mov
test
clc
mov
sbb
filds
dec
aam
jmp
cmpsl
js
inc
imul
test
mov
rclb
sub
mov
clc
push
cmpsb
lcall
repz
pop
repnz
sub
in
lcall
psrld
inc
dec
inc
cltd
in
movsb
and
loop
xor
or
ljmp
jg
clc
in
ss
mov
inc
xlat
hlt
adc
jno
jg
test
or
test
mov
stos
jb
lods
push
dec
pop
inc
xor
jnp
adc
iret
std
out
and
roll
std
dec
cld
sbb
inc
sbb
fnstsw
lahf
dec
sti
adc
xchg
or
xchg
imul
or
push
fisubs
cli
add
mov
sbb
pop
aas
sub
cmp
cmpsb
data16
sub
std
mov
pop
xchg
jmp
dec
lods
add
inc
sti
mov
inc
sub
dec
or
imul
pop
jge
sahf
loope
iret
dec
lods
inc
xor
push
out
mov
orb
mov
jo
mov
lcall
hlt
inc
and
xchg
stc
cmc
rep
test
andb
jne
gs
sbb
gs
pop
mov
bound
or
stos
xor
mov
jbe
jge
jmp
sbb
es
mov
clc
cmpsb
fnstsw
test
shlb
popf
fcmovne
mov
dec
jl
sbb
int
jge
int
jge
std
faddl
sbb
jmp
rorb
and
cwtl
shlb
lods
pushf
xchg
xchg
push
jl
inc
pusha
pushl
stos
jns
cltd
mov
sarl
jbe
xchg
adc
jb
sub
xor
imul
xchg
in
fmulp
mov
mov
mov
jp
or
daa
and
fnstsw
fwait
sbb
sub
popa
mov
orl
lods
js
sub
out
xchg
sub
fstpt
sub
pushf
add
mov
rcrb
jb
aad
jmp
cltd
and
cwtl
mov
les
mov
mov
xor
jg
adc
icebp
push
arpl
neg
int
cmc
dec
inc
lahf
sbb
dec
sbb
pcmpgtb
ljmp
mov
repnz
nop
hlt
lods
push
xor
filds
cmc
jo
test
iret
add
mov
pop
enter
fyl2xp1
mov
sbb
jns
mov
push
jp
jmp
cmp
jae
lods
inc
push
fs
mov
mov
jle
jno
pop
loop
into
popa
outsb
repnz
jns
insb
xor
cmpsb
push
cmpsb
loope
out
push
add
jg
fildll
xchg
shr
arpl
mov
sbb
sbb
pop
icebp
inc
popf
pop
stc
xlat
test
ja
clc
pop
ret
gs
xor
inc
in
psrad
incl
cwtl
pop
add
subl
out
and
mov
mov
rorl
mov
mov
sbb
test
mov
add
fidivrl
cld
add
mov
or
jge
rolb
xchg
pop
stos
loopne
push
sub
fldcw
push
jmp
pop
rolb
jnp
jo
pop
ljmp
lds
ficoms
stos
movsb
add
mov
adc
pop
push
pop
mov
rcrb
scas
outsb
and
mov
inc
les
add
hlt
lds
scas
inc
insb
adc
fwait
ja
jns
ret
push
inc
pop
dec
fimull
test
test
data16
loope
das
lods
push
ds
leave
mov
xlat
sub
test
sub
jmp
cld
popf
movsl
mov
nop
jmp
jg
mov
xor
aaa
rolb
sbb
rcr
dec
xchg
xor
into
or
jp
mov
popf
jmp
xchg
js
pop
sub
pop
call
cmp
xor
jp
cld
add
inc
adc
leave
mov
jo
mov
mov
jmp
sbb
stos
xchg
cmp
xchg
sub
mov
mov
ja
mov
mov
cmpsb
dec
cmc
mov
sub
inc
sbb
aam
mov
fwait
sbb
testb
mov
cmp
and
rclb
cmp
addb
xor
in
mov
aad
negl
push
adc
jns
test
jmp
cltd
loope
nop
adc
imul
inc
sub
jno
inc
jbe
scas
mov
imul
push
dec
dec
scas
ret
adc
test
cmovge
sbb
gs
pop
in
imulb
xchg
mov
mov
jne
xor
xchg
sbb
movsl
push
pop
sub
add
xor
icebp
idiv
lret
sub
cmp
test
fxch
adc
push
imul
sbb
je
leave
xor
jp
insl
cmp
stc
jl
xchg
ror
xor
sti
jne
fldenv
add
fnsave
lahf
loopne
js
jmp
dec
out
js
div
bound
lahf
lea
add
lret
lock
mov
xchg
xchg
outsl
or
mov
pop
jmp
imul
sbb
aas
stos
or
dec
and
adc
enter
jmp
movsl
aad
xchg
fcoml
xchg
out
icebp
dec
mov
or
add
or
jmp
pop
stos
int3
clc
adcl
out
mov
jns
mov
lret
xor
add
jb
scas
es
shlb
inc
jne
loop
or
movsl
sub
mov
dec
pushf
int3
fnstcw
out
mov
clc
test
into
xor
bound
xchg
pop
mov
rcrb
loop
repnz
out
adc
and
xor
bound
xchg
pop
mov
rcrb
loop
repnz
out
xchg
fisubs
scas
rcrb
add
pop
mov
sub
push
loop
repnz
adc
and
xor
bound
jb
adcb
dec
dec
cmpsb
sub
lods
adc
in
fwait
das
mov
cmpsl
orl
mov
sarb
repnz
loop
adc
in
push
cld
push
int3
jb
push
sub
cmp
or
sbb
insb
mov
pop
loop
or
in
dec
cld
pop
int3
push
js
xchg
pop
mov
insb
popf
movzbl
xorb
mov
inc
jecxz
stos
andl
push
in
pop
iret
push
mov
mov
movsb
or
inc
mov
popa
jb
and
mov
lea
repnz
pop
cmp
or
imul
fldcw
imul
xchg
sub
insl
ja
jnp
repnz
cmpsl
lods
dec
fwait
std
dec
int
jno
push
add
push
fsub
fdivl
jl
dec
jecxz
cmp
jl
mov
xlat
bnd
popa
push
adc
push
or
dec
xchg
sbb
cld
shlb
in
inc
jbe
lret
fdivs
push
cli
jns
cld
dec
jbe
mov
das
and
add
pushf
and
push
cld
inc
int3
jb
jnp
xchg
cmp
or
sbb
insb
lret
dec
call
fbstp
push
fiaddl
push
xchg
and
std
pop
cmpb
ljmp
mov
jnp
imul
fisttpll
push
mov
mov
cltd
push
pop
out
out
xlat
sbb
fwait
mov
ss
lret
adc
test
jb
bound
cmp
or
sbb
insb
sarb
repnz
loop
adc
in
push
cld
inc
int3
jb
bound
cmp
or
sbb
insb
sarb
repnz
loop
adc
adc
mov
and
std
scas
shl
imul
cmp
xor
ljmp
fwait
lds
adc
negl
daa
aad
cmpsb
mov
call
xor
mov
cwtl
inc
lcall
push
mov
or
lock
movsb
xor
scas
mov
fs
cmpb
jge
sbb
movw
dec
or
sub
mov
iret
push
and
push
movsb
fistpll
enter
inc
jp
dec
lea
push
in
mov
repz
loope
call
pop
xor
sbb
and
std
xchg
mov
popa
push
mov
gs
out
shrb
sbb
or
mov
or
pop
aas
mov
jl
push
push
mov
jmp
mov
pop
adc
pushf
fdivs
or
sub
in
add
dec
test
pop
mov
leave
loopne
dec
mov
mov
in
dec
popa
stc
stc
jecxz
and
add
mov
and
mov
mov
adc
mov
jo
fcomps
xchg
aad
cs
cmp
sub
mov
test
movsl
add
push
sub
cltd
add
xor
jo
std
das
les
mov
push
es
iret
push
repz
nop
leave
xor
and
jle
std
add
sarb
dec
lods
pop
mov
push
cmpsl
mov
in
xor
inc
push
jne
lods
mov
int3
fwait
testl
fldt
data16
jmp
imul
add
inc
movsl
jbe
xchg
dec
xchg
add
cmpsl
push
test
mov
jle
cmp
xchg
int3
inc
aad
mov
sub
mov
adc
call
lret
push
push
pop
xor
inc
pushf
movsb
ret
lods
aas
add
or
xor
addl
dec
cmp
mov
jnp
stos
add
loope
push
mov
mov
into
xor
test
mov
jns
mov
int
cmpsb
inc
pop
mov
jae
cmp
jns
dec
dec
xchg
mov
lds
mov
dec
dec
xchg
out
outsb
ret
in
es
insb
sub
dec
rol
and
scas
mov
test
andl
lret
vpmacswd
sub
push
inc
dec
call
push
adc
inc
add
into
sub
adc
mov
cmpsb
xor
outsb
jmp
rcll
and
fsubrs
sub
sub
sub
int3
push
call
ljmp
popa
mov
aam
clc
aas
cld
inc
dec
ljmp
add
cmp
addr16
push
cwtl
sub
lret
mov
mov
orl
inc
cmpsl
test
repz
daa
mov
imul
jmp
cmp
sub
mov
cmp
pop
fstps
les
enter
fdivrp
loope
cmc
popa
ror
pop
mov
dec
fsts
addl
fwait
push
ljmp
push
mov
xchg
xor
jecxz
and
jb
fisubrl
int
stos
lods
mov
inc
sbb
std
std
jmp
lock
idiv
dec
loopne
dec
cmp
fisubs
inc
sbb
and
das
add
cmp
aaa
gs
jno
rcrl
inc
jp
and
mov
loop
ljmp
pop
fwait
loopne
sub
and
cli
or
fnstsw
loop
mov
lods
cmpb
lahf
movsl
loope
arpl
add
jo
js
test
add
call
push
int3
add
gs
xchg
push
je
mov
and
outsl
pop
iret
push
stc
dec
xchg
mov
push
xchg
into
or
push
pop
clc
mull
cmpsl
pop
sbb
jle
std
clc
lods
shrd
cmpsb
data16
add
push
mov
pop
xor
mov
lock
outsl
ja
inc
sarl
pop
push
mov
enter
je
sbb
sub
pop
add
stc
dec
mov
xchg
jmp
pop
lock
mov
icebp
xchg
cwtl
cmp
add
jne
push
lahf
hlt
lret
mov
sarl
stos
gs
adc
or
scas
dec
pop
xor
lret
add
cltd
xchg
add
out
imul
dec
and
nop
mov
pop
xor
ja
into
sarl
cmpb
cmp
fisubrs
adc
cs
inc
mov
inc
mov
xchg
jae
mov
pop
xchg
inc
ds
out
xor
xor
push
mov
sbb
pop
jno
loope
imul
popf
push
xchg
inc
aaa
sti
add
stos
push
and
lcall
and
popf
in
std
imul
sbb
fistl
jg
test
mov
lods
cltd
out
or
add
and
mov
imul
icebp
sar
je
in
or
push
iret
inc
in
icebp
lret
stc
xchg
mov
rcll
test
jmp
dec
popa
cmpsb
ss
mov
jne
lret
cmp
aam
icebp
adc
jecxz
scas
inc
push
jle
jb
scas
lahf
bnd
rcll
cwtl
dec
push
repnz
adc
shlb
add
xchg
inc
hlt
xor
aam
mov
and
popa
sub
inc
sbb
lods
in
xchg
shrl
incl
je
xchg
dec
or
imulb
jbe
iret
xor
jecxz
pop
shll
sub
push
mov
les
lods
push
int3
xchg
push
push
mov
sbb
mov
mov
push
adc
fmul
cmp
jnp
arpl
mov
bound
shlb
adc
inc
nop
jmp
fmuls
inc
xorb
mov
fs
inc
pop
dec
rol
mov
mov
lds
fmulp
adc
sbb
mov
and
dec
unpckhps
or
mov
rcrb
sub
aad
jmp
call
es
cmp
mov
or
repz
push
adc
xor
std
iret
clc
aad
outsb
mov
xor
sbb
shlb
push
std
jne
mov
addr16
adc
addr16
scas
outsl
dec
bound
dec
fwait
lsl
mov
sbb
iret
imul
xor
adc
divl
iret
inc
mov
mov
mov
fists
adc
mov
cmp
pop
push
pop
add
shrl
inc
or
jecxz
pop
cmp
inc
mov
push
mov
stos
adc
and
add
inc
popa
pop
and
mov
jnp
sub
xchg
add
mov
dec
xor
mov
xchg
fildll
orl
in
xor
fisubrl
jmp
cmp
push
repz
jo
jns
stos
add
push
or
mov
jae
shlb
repnz
outsl
push
add
xor
stos
popl
mov
or
jecxz
addb
test
mov
stos
mov
ret
xor
subb
aad
shll
test
fbld
int
xor
pusha
inc
sub
aas
jno
mov
pop
or
dec
push
cmpsb
lret
fistl
mov
fldl
fs
lret
lock
or
sub
je
push
divb
sbb
push
adc
and
mov
cmp
jmp
mov
js
or
jp
sar
insl
mov
pop
scas
inc
pop
sbb
xlat
movl
mov
xor
aam
rorb
jo
xor
push
shr
cmp
or
push
mov
mov
or
ljmp
add
adc
inc
sbb
mov
dec
mov
adc
xor
mov
lea
xor
fldlg2
scas
dec
leave
inc
popf
enter
lret
js
pop
std
mov
lods
lods
cmp
outsb
jg
xor
scas
add
push
cmp
mov
stc
or
inc
fidivrs
sub
stos
add
sahf
mov
xchg
sub
jg
xor
mov
push
test
jns
les
lret
std
mov
aaa
test
fbld
cwtl
mov
mov
into
push
bound
lds
inc
jl
and
pop
pop
and
adcb
arpl
loope
ljmp
xchg
adc
sbb
pushf
xchg
je
ja
and
and
mov
nop
jge
in
lahf
jnp
out
leave
pusha
dec
ret
mov
test
sbbb
fdiv
add
lret
inc
pop
xchg
pop
enter
dec
sbb
int3
mov
cmp
shr
fisubrs
or
les
aam
das
push
insl
sbb
push
mov
mov
and
push
ljmp
cmc
mov
loop
push
dec
dec
sub
push
xor
jg
jns
test
xchg
pop
mov
cmp
and
mov
pop
loopne
and
loopne
iret
int3
mov
sub
hlt
mov
divb
ret
cmp
dec
push
lret
mulb
stc
mov
aam
scas
adc
inc
lahf
test
and
ret
jg
adc
xor
fcomps
cli
mov
lds
in
pushf
cmp
int3
add
andb
mov
push
paddusw
sarb
mov
dec
mov
sub
sub
out
pop
cmp
lret
cmp
inc
stc
xchg
push
in
push
sub
jne
and
mov
into
xor
mov
mov
add
mov
xor
mov
mov
mov
bound
and
cmp
mov
adc
ljmp
int3
mov
lds
rcrl
hlt
ret
test
jb
mov
clc
pop
imul
out
push
adc
mov
popa
push
push
int
movsl
add
xor
pusha
xchg
sub
mov
in
mov
adc
mov
dec
aas
ret
mov
adc
outsl
add
iret
out
and
in
inc
mov
adc
sub
inc
dec
popa
mov
adc
xchg
ljmp
push
push
dec
es
ret
mov
jo
adc
aad
xor
jbe
imul
jbe
dec
fs
imul
xchg
adc
mov
jmp
push
frstor
lods
pop
xor
dec
sbb
mov
pop
adc
dec
data16
fsubrp
ret
dec
mov
xchg
pushf
repz
adc
push
test
arpl
xor
into
jp
adc
push
sahf
cmc
in
jne
nop
push
je
lea
inc
xchg
andl
jae
inc
dec
pop
inc
and
add
movsl
je
mov
cmp
ja
cmp
pop
and
faddl
aam
xorb
and
fcoml
cmpsb
lahf
aad
les
mov
cmp
push
pop
push
test
int
mull
shl
push
xor
pop
enter
mov
push
mov
pop
mov
cmp
hlt
pop
fs
arpl
stos
orl
insb
sbb
call
out
mov
repnz
in
xor
inc
xchg
pop
push
scas
xchg
movsl
mov
dec
insl
stc
out
orb
mov
cmpsl
adc
adc
movsl
mov
push
xor
lods
push
and
sbb
pop
push
pop
shl
cmp
inc
mov
scas
std
movsl
xchg
dec
jb
cmpsb
sbb
scas
fldenv
rolb
in
cmpsl
push
push
mov
lcall
fsts
mov
jnp
mov
cmp
jno
mov
cmp
sbb
leave
xor
frstor
xor
pop
push
fbstp
push
or
jne
fidivrl
push
xor
cli
repnz
xchg
mov
mov
mov
sbb
pop
les
fsubrl
push
sbb
out
pop
mov
mov
aas
mov
add
pop
cmpsl
pop
adc
mov
inc
adc
fists
mov
bound
mov
sub
pushf
mov
mov
and
pop
add
ja
mov
call
xchg
dec
ja
popa
int
sbb
mov
movsl
pusha
mov
pop
ja
dec
inc
ror
inc
movsl
mov
pushf
js
jg
into
sub
xor
inc
nop
add
js
outsl
mov
movsb
outsb
jno
imulb
jge
outsl
rorl
cmp
scas
cld
out
or
addr16
mov
test
lock
jae
adc
xlat
adc
movsl
sub
mov
sub
out
xchg
dec
dec
dec
mov
jb
push
push
jg
xchg
daa
test
and
bound
int3
cmp
in
fs
jge
jl
loop
lock
pushf
orl
mov
inc
dec
inc
cmp
mov
adcb
jae
arpl
mov
xchg
je
aas
pop
cmp
nop
and
push
xor
inc
aaa
int
and
cmpsb
movsb
add
fisubs
push
daa
sbb
jne
ret
mov
cmpl
sbb
dec
div
sub
cmpsl
lods
popf
push
adc
dec
push
adc
rorb
repz
mov
jns
or
rclb
mov
cmp
pop
jle
je
das
adc
ficoms
xor
xor
jmp
jge
or
rcl
cld
add
test
push
jge
mov
ret
inc
mov
pushf
inc
inc
xor
inc
push
das
inc
inc
int
imul
inc
lea
xchg
push
mov
sti
jle
leave
push
push
push
cmp
add
daa
arpl
push
in
int
xchg
fcoml
sti
aam
and
cmp
aam
xchg
movb
push
fwait
push
dec
addl
fwait
sub
dec
or
adc
or
jnp
mov
ret
mov
mov
jae
ljmp
outsb
jmp
adc
lds
add
cmpsb
int
lock
call
ds
addb
gs
pop
lret
loop
inc
mov
scas
fcmovu
in
dec
pop
fcomip
into
cmpsl
push
xor
lods
std
add
mov
pop
push
call
dec
dec
mov
dec
jno
mov
test
xchg
adc
pop
mov
or
enter
leave
in
testb
add
std
inc
adc
and
xchg
out
or
sahf
xchg
push
jmp
arpl
int
mov
loop
mov
xchg
or
mov
shrl
aad
mov
inc
pop
mov
into
cmp
pop
mov
sar
repz
adc
cmp
ds
xor
or
fisubrs
add
insl
test
jne
sub
pusha
pop
lods
adc
sbb
lret
push
mov
test
lods
cmpsb
sbb
rol
xor
push
and
fisubrl
xchg
sub
test
xlat
jecxz
fistps
jmp
outsb
orb
imul
into
mov
inc
les
push
je
xchg
xor
mov
sub
movsb
cmpsl
mov
add
mov
pushf
cmpsl
scas
shl
sub
push
jg
mov
shll
xlat
jle
out
lcall
sti
rol
fwait
cmp
dec
jae
icebp
pushf
ffreep
stos
add
sbb
push
jg
inc
add
mov
mov
jle
push
leave
add
dec
cmp
sbb
add
arpl
jp
mov
jecxz
inc
inc
mov
loop
lcall
inc
and
or
cmc
cmp
mov
es
dec
mov
xchg
xchg
lahf
and
or
out
mov
cltd
jo
bound
out
cmp
loope
push
scas
insb
idiv
iret
xchg
push
in
cmc
clc
mov
mov
mov
jo
fs
inc
xor
jnp
cld
outsb
mov
lahf
xchg
sub
adc
pop
hlt
loop
mov
insl
aad
mov
dec
xchg
pop
add
sub
insl
out
shrl
mov
add
fisttps
sub
jle
std
cmp
ror
xor
pop
shll
leave
xlat
stc
mov
or
adc
sarb
push
out
imul
xchg
aaa
hlt
adc
int3
fwait
mov
push
jne
cmp
mulb
cwtl
data16
xor
testb
test
je
iret
shr
add
gs
sahf
cld
mov
xchg
mov
clc
lret
jmp
lods
ret
mov
outsb
insb
insl
xchg
xchg
pop
jecxz
out
mov
out
pop
addr16
pusha
push
mov
xlat
mov
mov
add
mov
cmp
in
mov
sbbb
jb
loope
mov
imul
pop
dec
les
push
push
push
inc
out
fsub
cmpsb
scas
ljmp
aas
sti
mov
in
add
inc
lahf
shll
jmp
sti
and
adc
loope
push
mov
mov
aad
lea
dec
fadd
idivb
push
add
xchg
adc
fadds
push
fcmove
mov
les
mov
adc
adc
cmp
mov
pop
sahf
in
stc
ficomps
and
pop
xlat
xchg
mov
dec
cmp
in
cli
sbb
adc
out
dec
pop
mov
cmp
or
fistpl
xchg
stos
mov
or
jnp
xchg
sub
cmp
push
sub
pusha
mov
push
adcb
sub
pop
rorl
adc
int
clc
out
pop
ss
lea
push
js
inc
cwtl
xorb
in
fs
or
cld
and
stos
sbb
mov
adc
js
xchg
mov
push
sbb
adc
lcall
mov
mov
adc
daa
pop
cli
xchg
addr16
dec
sub
pushf
divl
xchg
sbb
test
cmp
adc
fldt
adc
aas
lret
mov
je
xchg
mov
sub
test
and
cmp
mov
outsl
arpl
mov
dec
xor
xor
fdiv
jne
repz
std
rcr
inc
mov
cmpsl
xchg
xchg
into
mov
in
sbb
fsts
mov
xor
cmp
movsl
xchg
lea
int3
xor
cmp
cmp
repz
aas
out
adcl
jmp
xchg
jmp
mov
adc
pop
fisttpl
inc
lods
pop
nop
xlat
pop
or
xor
push
xor
ljmp
je
fdiv
lcall
sub
adc
inc
ficompl
adc
cmpsl
pop
xchg
sub
xchg
aad
repz
inc
testl
xchg
sbb
stos
pushf
outsl
out
frstor
pusha
data16
fwait
fwait
test
mov
adc
les
push
fcmovnb
xor
inc
jg
xchg
sbb
pushf
pop
mov
ficompl
aaa
push
gs
das
or
shlb
popa
scas
cmpsl
in
pushw
mov
jl
and
sbb
pop
hlt
mov
ret
sub
push
xor
pop
or
or
sarw
mov
mov
sbb
les
sahf
into
adc
fdiv
hlt
scas
lock
mov
sub
mov
cmp
jmp
lea
pop
sub
fists
js
push
outsl
aas
aad
push
xchg
cmp
lods
movsl
mov
and
mov
mov
addr16
clc
cmpsl
inc
icebp
sbb
out
imul
push
lods
insl
out
pop
mov
cmp
xchg
xchg
ljmp
leave
lcall
cld
leave
cmp
push
or
adc
adc
adcb
fs
in
js
xchg
inc
sub
sub
inc
mov
lock
mov
xor
ja
movsl
daa
mov
sub
out
shrl
and
adc
out
add
jbe
shl
outsb
push
dec
xchg
lret
xlat
ret
sbb
sahf
xchg
and
inc
outsl
or
jle
stc
outsl
mov
adc
mov
stos
jno
enter
sbb
xor
lret
mov
sbb
xor
shlb
add
enter
mov
nop
imul
inc
pop
shl
sub
rol
in
imul
pop
push
std
mov
inc
rcrl
sbbl
clc
mov
inc
in
cltd
pop
bound
sbb
sbb
push
mov
xchg
or
out
mov
in
fisttpl
movsl
sub
jnp
or
nop
xchg
jle
jecxz
or
cmp
stc
sbb
hlt
int
xchg
mov
inc
mov
pop
out
sbbb
jb
cmp
cld
insb
decb
movsb
mov
mov
shlb
add
fwait
pop
addb
pextrw
mov
mov
push
push
dec
icebp
push
decl
pop
xorl
mov
pushf
and
push
cld
inc
int3
jb
bound
cmp
or
sbb
insb
sarb
repnz
loop
adc
in
push
cld
inc
int3
jb
bound
cmp
or
sbb
insb
sarb
repnz
loop
adc
in
push
std
inc
int3
jb
bound
mov
cmpsb
insb
sarb
negb
push
mov
and
push
cld
inc
dec
jb
mov
cmpsb
mov
aad
pop
hlt
mov
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
inc
mov
jae
into
enter
popa
cmp
jecxz
repnz
addl
mov
inc
push
push
arpl
jne
add
xor
jecxz
repz
inc
ljmp
inc
xlat
push
push
arpl
jae
add
adc
and
xor
mov
cld
cld
rcr
mov
inc
aaa
cmp
pop
and
xor
in
mov
daa
xor
repnz
jmp
into
fadds
mov
cld
add
jmp
loopne,pt
test
xchg
push
hlt
movsb
cmp
inc
pop
push
fs
pop
mov
sub
ret
dec
xchg
push
out
xchg
gs
inc
test
or
int
add
xor
dec
cmp
sbb
test
push
dec
xchg
mov
ss
pop
and
push
mov
xchg
test
data16
xchg
repz
dec
mov
je
dec
roll
scas
gs
xchg
lds
mov
roll
xor
loope
jg
add
xor
jecxz
repz
mov
pop
daa
push
or
sbb
jno
jp
dec
xor
xorl
sub
loope
in
aam
add
adc
add
push
add
es
dec
popa
pop
cmpsb
mov
repz
adc
fxch
fisubs
adc
or
pop
push
dec
popa
adc
ret
jecxz
repz
addl
mov
inc
push
push
arpl
jne
add
xor
jecxz
repz
addl
mov
inc
jbe
inc
pop
pop
std
pushf
mov
jge
sbb
jbe
test
shrb
jnp
push
xchg
mov
out
hlt
mov
xchg
xchg
push
cmp
dec
fcoms
inc
mov
adc
insl
add
pushf
test
inc
dec
xlat
call
mov
lret
sbb
int
push
ret
jb
fists
lods
movsb
outsl
push
imul
aam
inc
pop
mov
sbb
inc
mov
out
cmp
mov
mov
test
ja
mov
insb
xorl
jo
stos
pop
cs
adc
shrb
push
jmp
inc
leave
je
push
dec
jge
loopne
sbb
and
fadds
and
mov
shr
sbb
push
cld
shll
pop
mov
out
mov
imul
sbb
jnp
cwtl
push
pusha
cmovbe
gs
fstps
enter
sub
clc
ret
push
xchg
sbb
mov
mov
sbb
out
out
xor
mov
adc
fldcw
dec
or
cmp
repz
stos
repnz
call
and
push
push
inc
jns
xchg
cmp
cmpsl
xor
addl
inc
hlt
int
leave
fdivrs
std
cmp
or
rcll
jne
sbb
adc
xor
cmc
jne
sahf
test
jae
cli
push
lock
add
mov
rcl
fisubrs
rcrl
daa
and
iret
insl
mov
lahf
jb
adc
sub
xchg
cmpsl
nop
daa
aaa
cwtl
jb
iret
sbb
push
xor
push
xchg
notl
mov
icebp
scas
pop
arpl
fs
or
or
fiadds
lock
je
mov
pop
mov
mov
mov
jae
mov
xorl
sbb
mov
sahf
aam
gs
adc
pop
xor
int
mov
xor
shr
lds
pop
movsb
aaa
mov
xor
lret
lcall
jns
xor
cmp
inc
sahf
addl
rclb
push
fs
and
ja
test
mov
jnp
out
and
adc
lock
fdivr
ljmp
push
addr16
andb
mov
pop
xor
xlat
mov
xor
aad
mov
and
jmp
push
pop
mov
fs
je
mov
test
cmp
xchg
int
ss
scas
jno
pop
sbb
and
pop
add
nop
loope
sbb
cmpsl
add
sahf
data16
sbb
subb
jle
jp
cltd
hlt
xlat
std
mov
nop
mov
pushf
rol
out
dec
mov
cmp
cs
add
adc
scas
test
shlb
or
add
push
inc
aad
les
in
and
iret
jne
and
rolb
mov
stc
stos
mov
les
push
jmp
mov
daa
xchg
fs
out
push
sbb
loopne
cmpsl
mov
shlb
or
mov
dec
cld
sti
inc
je
mov
lds
mov
movsb
mov
adc
test
arpl
out
cmc
out
mov
xchg
xor
andb
cltd
lods
sub
loope
dec
pop
mov
enter
out
stos
pop
insb
dec
sbb
lret
movsb
lock
add
es
dec
jge
add
ds
and
cmp
mov
sbbl
js
in
movsb
les
ja
inc
mov
loop
sub
push
testb
mov
adc
xchg
repz
aam
iret
jne
or
mov
xor
test
rol
xor
div
pushf
cmpsb
popf
sub
mov
pop
aam
xchg
wrmsr
or
nop
sub
inc
inc
xor
ds
pop
inc
jl
xchg
std
icebp
and
cmp
or
shl
dec
push
icebp
and
or
hlt
leave
lret
add
sahf
gs
jno
mov
or
sbb
pcmpgtb
jo
rcrb
faddl
shl
push
push
dec
imul
xor
mov
roll
mov
mov
cmp
pop
add
data16
clc
dec
dec
lea
or
jle
mov
dec
mov
movsl
cmpsl
dec
mov
lods
stos
in
das
aaa
fdivl
adc
sbb
ds
out
sub
pop
int
imul
call
xchg
xchg
in
ljmp
push
lods
scas
cwtl
loopne
stos
mov
aas
sti
and
and
add
cwtl
shrl
dec
mov
mov
push
in
mov
ret
inc
rcll
dec
jge
stc
sub
jbe
fisubl
out
mov
xchg
nop
cmp
test
mov
imul
mov
xchg
pop
jmp
lods
out
fidivs
or
loop
in
out
sbb
xor
jg
jns
fnstcw
push
pushf
inc
jge
jg
nop
jg
xor
jo
out
int
push
sti
lcall
in
insb
mov
or
mov
stc
add
cwtl
push
cld
int3
pushf
or
subl
push
pop
add
cmp
push
adc
cmp
aas
inc
lcall
jecxz
add
push
xor
clc
inc
push
dec
and
test
ds
hlt
and
ds
push
or
push
lret
stc
lock
cltd
push
push
dec
add
inc
ds
and
movsb
jg
sub
inc
lds
adc
cmpb
rcrl
lea
dec
dec
mov
daa
fnstenv
push
or
xor
cmp
mov
inc
dec
push
jns
pop
scas
add
aas
and
mov
lods
shlb
es
lahf
cmp
rorb
cwtl
pop
cmpsl
push
gs
inc
loope
leave
shll
pop
imul
sub
push
div
test
and
add
ret
pop
mov
and
add
lods
xchg
lret
mov
sbb
js
int
je
push
mov
aas
jge
je
adc
stos
rcll
adc
std
pop
or
push
or
mov
push
pop
out
xor
pop
pop
movsb
test
sub
outsl
int
sbb
repnz
in
sbbl
xchg
hlt
ss
mov
cli
mov
iret
add
scas
jb
decb
xlat
lcall
insb
out
aaa
dec
push
add
ficomps
test
mov
fildl
xor
ret
adc
mov
xchg
push
push
out
fwait
lds
ds
jl
fwait
pop
jae
mov
lcall
sbb
ds
mov
sub
lcall
mov
adc
mov
mov
xor
push
or
pop
cli
jb
dec
imul
dec
jg
cmp
loop
xor
lcall
or
or
mov
push
cmp
mov
stos
jbe
cltd
je
mov
mov
jge
aas
in
aas
sahf
fisttps
lahf
xor
pop
push
jecxz
insb
cmp
cmp
push
fsubl
pop
jg
mov
fstps
ja
dec
sahf
add
sub
ja
cmpsl
sbb
in
dec
jmp
cmp
fstps
mov
jp
cld
loop
hlt
filds
xchg
loopne
es
jns
mov
mov
add
dec
sbb
mov
in
mov
sub
jmp
daa
sub
xadd
shlb
push
lret
jecxz
or
cltd
iret
pusha
xchg
in
dec
inc
adc
lret
mov
stos
mov
fdivrl
jl
add
into
lds
xchg
idivb
xchg
or
int3
enter
dec
ljmp
das
add
push
xor
fcoml
movsb
or
nop
pop
scas
or
js
inc
loop
pop
sbb
xor
repnz
sbbl
fcmovbe
xor
cmp
push
pop
mov
lret
das
stc
mov
push
fsts
movsl
into
ret
iret
in
xchg
fwait
in
jb
insl
xor
cltd
hlt
sti
lods
mov
cmpb
dec
sub
pop
mov
push
lahf
cmp
and
andl
sti
fcomps
shrl
addr16
pop
and
iret
mov
out
xor
mov
cwtl
out
lahf
dec
insb
inc
mov
lret
or
nop
xor
xchg
out
inc
add
and
aas
loope
jno
mov
xor
imul
test
repz
mov
or
jmp
stos
xchg
xchg
pop
mov
leave
push
xor
cltd
mov
in
sub
nop
mov
out
add
andl
icebp
dec
jp
hlt
cwtl
jmp
int
dec
shlb
fildl
sbb
nop
rcll
stc
inc
dec
pop
stos
xor
mov
out
push
mov
dec
push
mov
xor
mov
lods
cmpb
pop
stos
js
sub
lea
adc
xor
xchg
cmpsb
sbb
out
mov
fwait
xchg
flds
or
mov
push
mov
push
sbb
fcmovnbe
jns
jns
pop
stc
lret
cmp
in
xor
in
enter
test
pop
jae
out
or
test
mov
jle
mov
imul
shll
lcall
fldt
out
subb
or
jle
xor
dec
dec
mov
testb
mov
shll
cmp
or
pop
push
xor
in
mov
out
popf
sbb
dec
jmp
inc
cmpsb
cmp
jo
cmpl
push
imul
pop
cmpsb
or
test
push
jbe
mov
test
out
or
sbb
das
aas
popf
jne
sahf
push
movsb
pushf
pusha
and
jmp
sarb
push
leave
sub
push
mov
pmaddwd
sahf
and
jno
pop
rcll
out
inc
outsb
and
sub
pop
push
clc
ss
push
xor
xorl
shr
fwait
inc
pop
ret
or
aas
mov
dec
dec
je
hlt
mov
fsubl
cmp
xor
mov
pop
fs
xor
push
xchg
dec
iret
popf
and
stos
cmp
push
cmp
push
lahf
push
cltd
push
outsb
pop
incb
xlat
es
xchg
sub
jmp
jmp
or
ljmp
fisubrs
mov
xchg
sarb
in
xor
test
in
mov
sbb
xlat
push
add
stos
pop
xor
out
push
mov
insb
xor
daa
gs
loopne
pop
das
dec
jl
sbb
scas
jbe
xchg
int3
push
inc
test
pop
insl
iret
enter
jecxz
insb
pop
xchg
jle
stos
push
ljmp
test
shlb
pop
push
nop
insl
iret
popf
xor
out
idivl
xchg
and
xorb
pop
cld
test
arpl
gs
push
and
in
ret
mov
jns
add
jne
mov
jmp
nop
jns
jbe
pop
popa
sub
movsb
inc
cmp
in
jns
imul
xlat
clc
mov
into
xor
mov
pop
negl
mov
clc
in
xlat
jbe
mov
imul
xchg
mov
cmc
or
and
push
cmp
sbb
outsl
or
movsb
jl
push
shrb
pop
popf
mov
mov
or
mov
dec
mov
int
rcl
repnz
fisttpl
fwait
mov
rol
mov
cld
and
movsb
cmc
mov
and
adc
cmp
pop
push
xchg
mov
mov
mov
push
in
mov
sub
repnz
cmp
dec
stos
xor
stos
cmp
bound
jnp
pop
mov
mov
add
sub
es
dec
pop
adc
icebp
add
call
xor
jg
push
inc
xor
scas
cmp
scas
sub
ficoml
sahf
mov
icebp
jecxz
mov
orb
pop
xor
fidivs
inc
mov
insb
push
out
mov
aad
mov
inc
jle
push
in
pusha
lock
aas
xor
mov
mov
leave
ds
xchg
push
das
ret
adc
div
rclb
movsb
clc
and
in
fs
and
pop
gs
sub
stos
sub
dec
add
dec
sbbb
jge
adc
jg
jo
xchg
stos
push
push
data16
fnstcw
sub
push
in
dec
xchg
mov
es
scas
test
pop
xor
sbbl
popf
push
xchg
sbb
paddb
enter
sbb
sti
xchg
xor
js
push
add
lea
imul
sub
in
dec
push
cmp
pop
mov
jns
js
mov
xlat
jp
insb
inc
mov
add
jbe
mov
push
mov
arpl
rolb
lods
out
scas
mov
je
mov
push
mov
ss
mov
mov
out
pop
sub
lds
jg
fld1
into
in
out
int
inc
push
mov
insl
cmp
add
nop
insl
negb
jae
lds
or
pop
mov
cmp
push
sub
push
and
jne
xor
dec
mov
and
test
pop
movsl
xchg
shlb
stos
xlat
cmp
imul
push
mov
arpl
xor
in
mov
faddp
je
leave
pop
ja
fcmovbe
xchg
cmp
adc
inc
rcl
lds
jmp
inc
lea
cld
jmp
pusha
jno
push
mov
repz
icebp
jno
fs
fwait
pop
sar
pop
addb
add
pop
test
or
push
and
dec
sub
cltd
enter
push
shl
push
jb
pop
movsb
xor
mov
cs
xor
push
leave
pop
fisttps
fsubs
dec
xorl
push
jo
ds
mov
clc
iret
inc
in
scas
out
clc
test
inc
jae
jno
xlat
daa
sub
sub
push
out
in
or
cmp
loopne
outsb
mov
sbb
push
arpl
enter
and
cmp
fcoms
push
or
xor
xor
fdivrl
fisubs
fwait
xchg
mov
call
lcall
jnp
mov
adc
aad
stos
adc
cld
idivb
jnp
dec
rcll
loope
adc
cli
ss
test
in
ja
loope
xchg
cmp
xchg
repz
out
mov
sbb
inc
aad
adc
repnz
adc
enter
lock
and
or
adc
push
inc
push
pop
pop
mov
loop
scas
js
popf
mov
xchg
adc
jae
or
cltd
and
jae
push
rclb
movsb
int3
xlat
int
pushf
insb
out
jne
push
mov
inc
pop
daa
test
hlt
dec
dec
jle
dec
daa
jne
mov
lret
mov
jmp
pop
clc
sub
or
inc
pushf
mov
sub
fmuls
mov
push
aaa
pop
lret
add
and
adc
out
sahf
push
enter
dec
lret
sbb
fldt
inc
scas
sbb
push
ljmp
mov
lods
adc
push
push
xor
mov
mov
mov
mov
stc
aad
sbb
daa
push
mov
in
jbe
pop
mov
ds
into
xchg
imul
nop
jnp
add
jp
jno
and
inc
test
cmp
add
mov
fnstcw
and
lods
lret
lods
sbb
jge
jle
cs
scas
pop
push
xchg
pop
mov
add
scas
add
loop
mov
push
jno
ret
xchg
gs
outsb
inc
pop
sub
aad
cs
rcrl
cld
pop
testb
fisttps
popf
aam
jbe
call
cltd
xchg
fdivs
mov
sub
ja
mov
xchg
call
outsl
test
shrb
pop
addr16
insb
dec
test
scas
xor
fmull
pop
pop
push
push
jmp
cmp
inc
out
fisubl
inc
sbb
sbb
mov
pop
ljmp
mov
popf
xchg
push
popf
xchg
mov
addl
cmpsl
xor
adc
inc
push
inc
rolb
ret
sahf
mov
fnstenv
sbb
sbb
and
sub
enter
jbe
mov
sbb
jmp
ret
xchg
jbe
adc
inc
mov
mov
outsb
and
sbb
push
fldl
sbb
in
jae
lcall
inc
inc
and
or
pop
lods
notb
xor
jne
aad
add
or
mov
sbb
xor
inc
seta
ja
cmp
pop
add
sbb
cmp
jl
sub
lret
dec
jb
and
outsb
loopne
ret
movsb
sbb
push
movsl
fistpll
lret
xor
rolb
push
sub
push
pop
icebp
pop
xor
mov
mov
js
jp
mov
pop
cmc
and
and
mov
jle
imul
pop
mov
adc
sub
push
in
dec
or
das
mov
cmp
sarl
push
test
xor
xchg
or
and
add
gs
cmp
or
lret
xor
push
push
sarb
jns
xor
pop
arpl
sub
jl
pop
jne
out
repnz
lods
out
adc
rcr
mov
mov
loopne
int
scas
pop
call
shufps
ljmp
and
jne
cmp
out
shlb
imul
mov
mov
adc
test
mov
mov
adc
add
pop
jle
scas
sar
sahf
push
shll
stos
iret
jecxz,pn
pusha
subl
je
xchg
mov
mov
shlb
lea
pop
inc
shrb
inc
inc
dec
scas
lcall
notb
leave
cmova
mov
dec
push
sub
int3
movsb
out
fistps
xor
stc
fsubrs
jecxz
aaa
mov
das
sub
push
jns
int3
jmp
cmp
mov
jge
outsl
sahf
test
add
ret
cmpl
cmp
xchg
mov
jno
sarb
js
mov
inc
js
pushf
dec
ret
sahf
or
insb
rsqrtps
stos
mov
push
inc
loope
mov
jge
pop
jmp
add
adc
pop
mov
dec
or
add
pop
push
mov
cmp
jg
and
gs
pop
xor
cld
cli
in
je
mov
je
sbb
aad
icebp
scas
shl
fstpt
xchg
cmpsl
jbe
es
cmp
pusha
jo
fnstenv
test
jae
mov
add
bound
outsb
in
pop
inc
mov
xor
sti
nop
adc
mov
std
cmp
fwait
out
arpl
xor
push
pop
enter
and
insl
cmpsl
and
mov
sub
nopl
push
inc
push
dec
pop
mov
lret
lods
xor
repnz
and
int
adc
jno
push
push
sbb
xor
lret
adc
push
pop
scas
int3
and
adc
xor
enter
mov
loop
cmp
movsb
repnz
mov
add
add
ss
ficoms
inc
enter
out
push
test
push
add
ja
xor
xchg
cmp
and
cmp
adc
xchg
xchg
iret
mov
lods
mov
xchg
test
lds
pop
or
in
jmp
pop
enter
sbb
in
sbbb
imul
pusha
or
pop
mov
inc
das
xor
fldcw
fmull
hlt
shlb
and
mov
push
inc
jnp
rcrb
popf
add
pusha
push
adc
mov
jne
cmp
adc
push
sbbb
outsl
in
mov
ficoms
stos
inc
push
es
or
jb
xchg
test
iret
cltd
adc
mov
cmp
lods
fimuls
push
cld
push
rcrl
push
mov
ljmp
ja
ret
dec
or
add
mov
rorl
lret
daa
lret
sub
xchg
sub
lea
dec
xor
movsb
mull
cmp
fiadds
or
mov
pop
sbb
daa
xchg
xor
fiadds
test
iret
xor
push
cmp
lods
push
shl
mov
sbb
jp,pt
add
sbb
mov
icebp
or
add
or
loopne
inc
dec
dec
int
pop
dec
outsl
ljmp
es
add
lea
mov
imul
adc
mov
cwtl
adc
inc
mov
jb
dec
aas
out
lock
lds
push
loope
hlt
cmc
je
jo
mov
mov
and
mov
add
cmp
xchg
loopne
mov
add
ljmp
add
test
aad
xchg
sbbb
mov
scas
push
shrb
in
orb
jp
or
loope
cltd
pushf
arpl
jbe
int
bound
jae
add
xor
jecxz
repz
addl
mov
inc
push
push
arpl
jne
add
xor
jecxz
repz
addl
mov
inc
rcrl
addl
xor
jecxz
repz
addl
mov
inc
push
push
arpl
je
add
xor
dec
in
xor
jecxz
rcrl
dec
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
idivb
or
sub
add
mov
inc
mov
fcoml
sub
sbb
or
jl
insb
xchg
pop
test
lods
xor
inc
mov
and
int3
dec
cmp
sub
sbb
or
jl
insb
mov
adc
and
mov
test
loopne
mov
scas
scas
xor
enter
and
add
push
or
and
inc
addl
int3
rcrb
addr16
sub
pusha
jl
in
popf
pop
mov
and
inc
cltd
inc
dec
and
and
int
ret
lea
dec
jge
jl
mov
sbb
gs
lret
mov
or
pop
icebp
dec
jl
xchg
push
mov
out
push
pusha
add
in
fisttpll
pushf
or
cmp
mov
outsl
push
mov
inc
inc
popa
mov
mov
leave
push
int3
scas
cmp
sub
sbb
or
jl
insb
xchg
pop
and
ljmp
cld
das
in
daa
faddl
jmp
adc
sub
jne
lds
repnz
inc
xchg
dec
xchg
jl
pusha
test
cmpsl
sbb
pop
fcompl
rolb
rorb
aaa
rclb
loopne
xchg
dec
cmpl
cltd
insb
mov
push
movsl
insb
xchg
pop
test
lods
push
pushf
inc
mov
faddl
sub
sbb
or
jl
insb
xchg
pop
test
lods
push
pushf
inc
mov
faddl
cmp
out
add
cmpsl
sbb
push
jmp
ss
jg
popf
test
rcr
sub
jae
sahf
cli
insl
cmp
mov
or
repnz
lods
fwait
dec
int3
sbb
push
xor
stos
push
sub
lods
or
sbb
xor
xchg
xchg
dec
out
adc
push
adc
in
sbb
cmc
int3
xchg
dec
push
fcomps
mov
mov
stos
push
push
aas
xchg
sbb
xor
cmpsl
cmp
xchg
mov
cltd
mov
push
adc
dec
xchg
outsb
mov
mov
arpl
jb,pt
subb
repnz
pop
inc
aas
sbb
xchg
aad
fwait
mov
add
push
daa
mov
push
pop
subl
cmp
daa
out
mov
out
pop
mov
cmpsb
outsb
iret
cltd
in
and
mov
dec
add
addr16
pop
xor
out
xchg
testb
inc
add
mov
xchg
adc
dec
cli
cmp
fwait
cmpsb
xchg
lods
and
aad
mov
xor
clc
dec
test
jae
mov
xor
dec
andl
jl
sbb
cmp
dec
les
push
test
add
cmc
lods
and
mov
push
jle
dec
mov
push
scas
cld
loopne
loope
lahf
rolb
aad
sbb
fnstsw
lods
insb
inc
outsb
sbb
stos
mov
dec
orl
or
loop
mov
jg
push
pop
je
mov
out
mov
pusha
sbb
mov
sbb
orb
js
gs
popa
push
mov
cwtl
in
dec
push
in
jl,pt
add
insl
aam
push
mov
test
add
fcoms
inc
jl
out
mov
popl
arpl
xchg
pop
adc
in
scas
jge
xlat
test
jmp
es
adc
in
lret
cmp
inc
pop
jmp
call
cmp
push
cld
iret
dec
jp
push
lret
push
mov
je
sbb
aaa
mov
add
jl
jne
xchg
jns
into
sbb
jecxz
push
lahf
adc
sub
movb
aaa
faddl
pushf
rclb
lea
stos
add
insb
leave
xchg
lcall
lahf
xchg
add
ret
pop
fwait
sbb
push
test
xor
mov
sub
xor
and
and
or
sbb
lods
push
roll
cmc
jnp
add
sti
mov
jb
dec
roll
add
aas
gs
ret
stos
dec
sub
add
or
push
insb
mov
sbb
xor
add
xchg
jmp
adc
cmpsl
mov
imulb
test
outsl
or
push
cli
xor
pop
adc
cmp
mov
add
lock
dec
push
out
aas
insb
shl
mov
divl
inc
pushf
fwait
ja
jg
mov
and
lods
or
inc
and
enter
nop
mov
push
sbb
lea
aaa
mov
cli
in
das
movl
pushf
push
xchg
scas
jmp
repnz
inc
lahf
xchg
inc
pusha
cmc
xor
xchg
mov
xchg
lock
pop
decb
popa
lea
inc
push
mov
sbb
enter
mov
mov
test
add
les
xchg
push
jne
push
adc
rorb
push
inc
sub
pop
sbb
add
sti
and
shll
mov
jge
dec
mov
loop
inc
sarb
jecxz
lret
mov
cmp
lods
adc
xchg
mov
adcl
ficoml
dec
push
push
int3
insb
xor
ja
fisttpll
int
add
icebp
into
enter
lret
icebp
jg
movsb
clc
push
push
frstor
jno
cwtl
ds
push
inc
sbbl
mov
dec
xchg
push
sub
fdiv
and
push
ret
mov
fsubrl
or
outsb
aam
jle
pop
jno
mov
es
inc
or
cmp
imul
mull
xor
lods
sbb
push
adc
repz
inc
cmc
cmp
popa
jecxz
cld
shll
aam
ret
shrl
pop
and
push
outsb
jo
insl
nop
ret
mov
popa
mov
insl
xchg
jne
sub
daa
add
out
cmp
rcrl
aam
mov
xor
sbbb
or
push
addr16
fldl
pop
pop
xchg
stos
repz
add
or
dec
outsb
xor
jg
rcrb
sbb
xchg
xchg
add
stos
mov
mov
and
and
or
mov
xchg
inc
cmp
popa
ljmp
push
pop
ret
sub
je
fcmovnu
mov
cmp
adc
rcl
popa
jb
fcmovnbe
inc
push
lock
push
add
pushf
rcr
pop
enter
cmp
mov
xor
lock
cld
test
mov
jnp
inc
rcl
or
aad
sub
subb
aam
sub
pop
lds
jmp
int
pop
test
std
sub
adc
and
mov
sahf
cli
sub
sub
leave
lea
fisubl
das
subb
lahf
insb
xchg
or
ljmp
outsb
push
outsl
ret
sti
scas
pop
andb
sarb
pop
ja
roll
jg
push
in
mov
mov
out
ds
mov
mov
jp
cmpsl
std
imul
xor
xchg
clc
adcl
lcall
pusha
aaa
test
sbb
out
mov
sbb
sbb
push
fucom
pop
add
xchg
out
lock
push
push
inc
jmp
add
fisttpll
mov
cs
les
jg
lock
mov
push
jg
arpl
sahf
dec
inc
xchg
sbb
jae
xor
xchg
sahf
mov
mov
pop
push
push
enter
lret
scas
lods
sarb
mov
ljmp
pop
add
cli
mov
lret
pop
jnp
fwait
sub
or
jbe
mov
add
mov
fistl
sbb
es
xchg
mov
xor
jl
mov
cmc
push
sbb
sahf
mov
call
dec
imul
scas
cmp
cmp
cltd
leave
xchg
mov
pusha
aas
add
dec
push
sub
cmp
lahf
push
sbb
clc
jno
data16
test
hlt
jns
andb
jo
or
pushf
mov
push
into
and
into
add
arpl
xor
add
dec
pop
jo,pn
jbe
xchg
mov
cmp
lock
loop
dec
jp
scas
fwait
lahf
push
sbb
cmpsl
adc
pop
rclb
pushf
mov
and
lret
subl
test
inc
movsb
call
xchg
repz
xchg
shl
int3
loop
lea
push
jnp
test
test
xor
or
mov
sbb
xchg
lret
jns
mov
sub
mov
sub
lret
outsb
add
push
jle
inc
inc
and
xor
out
mov
fsubrs
ret
mov
adc
hlt
aas
call
mov
lahf
pop
push
dec
sbb
inc
cs
lods
rcrb
ja
jb
movsl
enter
push
in
mulb
je
jmp
push
pop
jnp
test
testb
add
sbb
loop
mov
or
mov
inc
sub
ret
mov
into
jns
mov
or
fistpl
les
shlb
in
rcr
imul
and
lods
pusha
xchg
pop
inc
fnstcw
int3
mov
cmp
xor
stos
cmp
mov
add
cmp
pop
xor
insb
or
ficomps
and
outsl
push
int
jb
shlb
aam
sahf
jb
and
inc
sbb
mov
mov
andl
push
and
push
call
out
xorl
ret
arpl
and
pop
aam
push
or
daa
mov
cltd
add
and
push
xor
lods
add
mov
mov
mov
or
out
xchg
push
in
aad
aad
push
jne
mov
lea
mov
jns
outsl
push
push
call
mov
adc
je
cltd
pop
mov
pop
jns
nop
scas
pusha
clc
sbb
adc
sbb
pop
pushf
mov
xor
out
leave
or
mov
mov
stos
fimuls
pop
inc
icebp
add
sub
fsubrs
jmp
mov
cmp
pop
adc
mov
imul
xchg
cmp
adc
jae
mov
xchg
aam
in
pcmpgtw
push
mov
fisubs
mov
xchg
jns
and
pop
adcl
mov
sbb
iret
loope
add
ss
es
or
test
shrl
sub
and
mov
inc
push
sbb
gs
out
ret
cmp
stos
xor
xchg
mov
cmp
add
pop
sub
xor
lods
mov
pop
aaa
cli
inc
push
lret
push
nop
ds
sub
mov
leave
xor
jecxz
mov
mov
mov
imul
mov
xchg
xorb
jne
jo
jbe
pop
das
jo
jbe
sahf
in
xor
push
mov
aas
fsts
clc
fs
iret
xchg
mov
scas
jno
pop
sub
nop
mov
lahf
mov
mov
dec
xchg
mov
inc
mov
sbb
dec
movsb
in
mov
in
xchg
adc
sbb
out
sub
imul
jp
pop
push
cmp
int
loopne
sub
pop
pusha
std
pop
xchg
mov
inc
cmp
jg
mov
dec
add
mov
int3
mov
push
fwait
or
sbb
and
pushl
outsb
jbe
shrl
or
or
mov
fwait
or
mov
jno
push
or
lods
sbb
cmp
sbb
add
pop
nop
outsl
out
cltd
mov
orb
jnp
xchg
not
ret
dec
push
in
pop
xchg
dec
cmpl
mov
dec
jg
test
loop
cmc
fnstcw
out
cmpsb
div
sub
and
jne
mov
insl
daa
cmpb
xorl
in
stos
in
pusha
pop
inc
and
and
xchg
int3
mul
and
xor
push
lods
and
xchg
cli
push
pushf
cmp
and
adc
adc
je
push
xchg
rcll
mov
repz
into
dec
push
xchg
into
push
pop
xchg
cltd
testl
and
sub
ds
loopne
int
icebp
movsb
cmp
dec
push
addr16
arpl
mov
jecxz
dec
mov
gs
mov
xchg
imul
js
inc
hlt
imulb
enter
jo
fldenv
or
ret
dec
xlat
pop
aam
in
out
dec
fstps
stos
gs
repnz
cmp
mov
rcr
sub
and
das
push
and
arpl
cs
mov
out
and
les
daa
and
cmp
inc
aas
adc
decb
adc
dec
arpl
cltd
push
dec
test
or
mov
pop
stc
int3
aaa
into
sbb
lds
call
jb
testb
dec
xchg
jle
pop
std
jnp
inc
stos
dec
jmp
cmp
repz
fidivl
sub
daa
push
daa
fmull
pop
pop
rolb
dec
fiadds
lock
test
and
inc
test
mov
xchg
mov
fimuls
sbb
cmp
mov
stos
enter
inc
movsb
jbe
pop
ret
sbb
roll
lret
push
loopne
mov
aas
dec
dec
jl
mov
inc
push
mov
jb
lret
out
push
jae
loope
xor
outsb
rolb
mov
fsubs
data16
mov
jne
xor
lods
in
mov
or
stos
mov
je
arpl
subb
xchg
sub
pusha
and
imul
adc
fldenv
nop
in
dec
test
dec
add
push
js
pop
sbb
mov
scas
fbld
mov
jno
dec
xor
inc
and
and
dec
subb
aam
push
mov
daa
cld
pusha
mov
lock
imul
xchg
adc
clc
fcmovne
into
test
jge
bnd
sbb
push
add
inc
pcmpgtd
in
std
lods
in
repnz
repnz
and
push
sarb
pop
in
pusha
jb
mov
lcall
pop
inc
decb
pop
pop
mov
ds
push
dec
mov
mov
push
cmp
add
test
pop
sub
cwtl
push
adc
neg
std
mov
inc
sahf
in
add
loop
cld
cmpsl
dec
cmpsl
adc
xchg
imul
hlt
adc
xchg
sbb
mov
aas
sti
dec
inc
push
movsl
loopne
mov
mov
or
lock
sub
mov
push
mov
inc
pop
orl
aas
pop
fstp
icebp
push
xor
push
sbb
addr16
pop
sub
mov
and
and
cmp
nop
rcrb
cmc
movsb
push
mov
ret
cli
test
and
in
cmpsl
mov
push
xchg
stos
sub
mov
mov
push
lods
cmpsb
pop
push
inc
lcall
test
or
inc
jmp
and
sub
test
iret
enter
or
in
sub
pop
imul
outsl
ss
fmul
arpl
push
sub
inc
aaa
out
pop
lret
mov
mov
mov
adc
movsl
push
addr16
addr16
mov
pushf
ds
push
sbb
adc
cmpsb
sbb
jmp
inc
aas
ret
mov
jo
daa
sbb
or
pop
xor
sub
or
pop
inc
and
pop
gs
je
movsb
sahf
push
bound
ret
pop
in
lods
mov
mov
aam
fldenv
sbb
aad
dec
pop
mov
out
pop
aad
dec
sub
mov
xchg
adc
or
or
int
mov
fstps
cmpsl
fists
aam
aas
add
outsl
movsl
je
push
cmp
sarb
insb
cmp
and
push
sbb
loopne
decl
mov
push
or
push
scas
sub
aad
inc
inc
and
cmc
rcrl
jge
sub
fwait
or
dec
mov
jg
movsl
inc
in
leave
fucom
push
stc
xchg
sub
imul
std
outsl
inc
cltd
lret
fldenv
mov
gs
insl
addl
sub
jb
sahf
mov
add
mov
jns
add
test
push
and
les
ljmp
lods
sbb
cmpsl
dec
dec
push
xor
and
ljmp
xor
fstpt
add
sub
movsb
jno
sub
jmp
mov
inc
xchg
inc
lret
loopne
arpl
imul
xchg
push
dec
sub
test
jle
push
add
xor
add
out
fs
push
rorl
stc
cs
sbb
fwait
and
pop
sahf
imul
adc
jb
ret
test
das
or
mov
inc
lret
stos
rcrb
and
push
sbb
mov
xchg
jmp
divb
sahf
ljmp
sub
in
das
inc
cmpsl
js
ffree
shll
roll
and
rcr
jnp
sarl
popl
cltd
xor
or
mov
xchg
xchg
sbb
sub
movsb
push
inc
cmp
and
leave
add
cmp
or
sar
rorb
lcall
fs
sbb
sbb
mov
clc
jb
inc
stc
lods
rcll
cmp
les
into
test
push
dec
cmp
popf
pop
jnp
repnz
jb
lcall
xchg
adc
idiv
xor
push
push
pop
sub
testl
xchg
and
mov
loopne
ret
arpl
xchg
sti
push
add
ljmp
jle
cmp
pop
or
sti
add
pop
inc
mov
in
data16
jg
movsl
mov
adcb
mov
cmp
mov
cwtl
lods
push
mov
xor
mov
mov
mov
xor
push
mov
stos
and
jae
xchg
ss
mov
sub
cwtl
cmpsl
lds
cmp
test
arpl
lret
out
push
inc
cmc
ret
mov
sti
sahf
lods
rclb
lcall
add
fldenv
repz
sbb
cmp
popf
pusha
cld
mov
dec
test
adc
jecxz
leave
mov
mov
push
loope
arpl
out
icebp
aaa
iret
xor
pop
scas
xlat
fisubs
outsb
jb
inc
pop
push
add
es
pop
mov
in
push
bound
or
xor
jecxz
cli
sbb
out
inc
push
ret
push
pop
mov
scas
jecxz
stos
mov
sti
lds
ja
fmulp
mov
int
sbbl
mov
mov
pop
pop
jle
imul
jg
push
dec
fisubrl
jp
cmp
xchg
js
push
mov
hlt
xchg
outsb
add
cmp
push
xor
cmpsl
mov
jle
lret
aas
xor
xor
and
pop
jle
ret
sbb
sbb
sub
loope
cmp
add
sub
mov
sbbl
loopne
out
sub
xor
mov
int
push
std
stc
add
pushf
dec
xchg
popf
lods
cmpsb
inc
loopne
test
push
mov
fildll
test
sarb
aam
mov
test
push
push
and
or
and
jge
jo
add
leave
pop
in
xchg
push
loopne
add
mov
push
cltd
cmc
mov
cmpsl
mov
sub
call
jle
xor
lret
int3
insb
test
adc
mov
mov
jl
in
adc
and
stc
scas
fcoms
ret
lods
inc
mov
adc
pop
jne
loope
inc
out
cmp
stc
xor
out
shr
insb
push
rcrl
out
dec
rcll
mov
and
xchg
mov
fisubrl
or
imulb
std
faddl
mov
dec
xor
daa
push
mov
dec
loop
imul
clc
nop
push
es
and
jo
mov
sub
das
push
in
pop
push
stos
xor
pop
loope
add
lea
jmp
push
and
fdivl
cmp
adc
sarl
push
or
or
call
rcrb
loopne
push
pushf
sbbb
repz
fs
xchg
das
xor
daa
addl
xor
dec
jmp
add
int
adc
jno
jae
sbb
or
sbb
das
jle
mov
std
mov
into
call
dec
sub
ret
scas
add
rcl
shlb
scas
mov
pop
or
out
int3
hlt
cli
stos
push
or
ret
lahf
lds
and
fistps
mov
xlat
sarb
nop
rcl
stos
push
xchg
xchg
mov
mov
hlt
scas
loop
ds
mov
adc
divb
cwtl
js
xor
out
lret
jge
pop
sub
inc
inc
cmp
lahf
sub
mov
pop
jmp
sub
decb
shl
inc
jnp
cmp
push
aaa
fmull
mov
cmp
and
fisubs
out
or
lock
mov
int
jl
std
das
inc
test
pusha
mov
gs
in
dec
call
xchg
pop
cmp
mov
add
mov
mov
ljmp
icebp
or
inc
or
dec
gs
es
fwait
stc
leave
mov
sbb
mov
mov
jl
or
jnp
stos
imul
aaa
lcall
movsb
push
pusha
push
pop
hlt
xor
jae
jae
orb
inc
push
mov
jp
xlat
call
sbb
push
pop
add
int3
aas
mov
data16
mov
adc
add
sub
rcll
arpl
mov
out
push
mov
xchg
or
pop
imull
movsl
ss
adc
sub
and
lahf
pop
inc
lea
hlt
push
ret
cs
xchg
das
pop
mov
push
mov
dec
insb
in
sbb
insb
into
jns
cmp
das
dec
dec
aad
fwait
loope
sub
adc
inc
push
popa
out
xchg
sbbl
lret
mov
fs
and
and
mov
mov
fisttpl
xchg
and
addb
pop
mov
pop
faddl
jo
lods
stos
dec
mov
sahf
add
ret
jle
lods
inc
jle
cld
popl
adc
adc
ds
sub
cltd
cmp
mull
lahf
cmp
in
mov
movsb
in
mov
and
xchg
sub
push
push
mov
add
mov
das
mov
lcall
repz
cmc
mov
jl
push
into
jg
sti
mov
mov
call
adc
jae
mov
inc
xchg
add
int3
xchg
jp
sub
cld
mov
jbe
fsubrp
jbe
das
nop
mov
or
jl
insb
xchg
pop
test
lods
push
pushf
inc
mov
faddl
sub
sbb
or
jl
insb
xchg
pop
test
lods
push
pushf
inc
mov
faddl
sub
sbb
or
xchg
pop
inc
dec
jne
lods
movsl
pushf
inc
mov
fsubr
int3
loope
mov
or
faddl
push
lcall
adc
and
xor
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
in
and
xor
add
adc
arpl
push
sub
push
insl
sbb
mov
sub
ds
sbb
in
and
xor
add
adc
pushf
aaa
jl
jl
dec
adcl
xchg
or
sbb
cmc
and
xor
add
adc
inc
pushf
push
jne
pop
xchg
adc
and
sub
push
scas
push
cmpsl
dec
movsl
test
inc
int3
push
stos
ja
fdivrs
ljmp
fldenv
cmp
push
insl
and
and
mov
fsubr
mov
dec
mov
mov
test
adc
add
aas
rcrb
mov
cmp
shrl
sbb
sbb
in
scas
in
daa
add
arpl
mov
pop
jge
jns
mov
adc
loop
int
std
cmp
push
jmp
insb
push
insb
pop
mov
xchg
aam
cmp
rep
or
add
sbb
mov
stc
jg
xchg
fistl
testl
and
add
adc
inc
test
mov
inc
xchg
xor
and
push
ret
andb
dec
test
and
pushf
es
rclb
stos
aas
sarl
loop
xchg
pop
mov
mov
mov
dec
popf
pop
mov
and
das
sbb
dec
in
shrb
fs
js
mov
popa
mov
push
mov
push
insb
mov
pop
xchg
sub
cmp
or
sbb
in
and
xor
add
adc
pushf
push
insb
mov
pop
xchg
sub
cmp
or
sbb
in
and
sbb
scas
aad
xchg
mov
cmpsb
pop
sub
into
in
mov
cmp
adcl
cwtl
mov
int
push
ds
lock
xchg
arpl
and
mov
push
push
dec
das
frstor
ret
push
lea
movsl
stc
add
sub
out
pop
sbb
inc
dec
and
jp
sbb
roll
ljmp
inc
mov
push
xor
pop
xchg
jns
dec
test
or
ds
push
cmp
stos
push
jp
fistpll
inc
test
xor
xor
xor
outsb
cwtl
es
mov
mov
cmp
jp
xlat
jnp
jno
jmp
xor
jge
lock
aas
pop
test
idivb
mov
fwait
rcrb
shlb
jle
mov
dec
imul
out
adc
pop
and
or
std
lret
out
jo
jno
xchg
and
mov
xor
add
dec
faddl
lcall
pop
out
push
xchg
addr16
or
orl
inc
jns
outsb
fidivl
add
mov
jnp
push
adc
pop
mov
jle
lret
dec
icebp
stos
enter
stos
cltd
push
inc
in
dec
mov
push
cwtl
inc
xor
subl
cmpsb
popf
cmp
iret
pop
mov
lock
mov
push
dec
push
push
fidivrs
pop
call
inc
ficomps
and
jbe
popa
aad
iret
or
mov
insb
pop
call
ljmp
sbb
xchg
adc
adc
jle
adc
cmp
adc
inc
jns
shrl
imul
aad
xor
ret
cmp
stc
test
mov
or
sbb
das
lods
dec
mov
dec
sahf
call
or
cld
insl
mov
mov
sarb
sti
jns
or
mov
jo
dec
outsl
mov
lcall
je
insb
out
movsb
xchg
orb
push
xor
inc
ja
jmp
add
ficoml
lods
mov
jl
std
xchg
mov
fucompp
and
fldenv
outsl
rep
xor
repz
lods
sub
fisubrs
movsb
fwait
mov
pop
pop
sarb
les
pop
das
sti
testb
mov
lods
lds
mov
or
jecxz
push
add
loop
lds
aaa
pop
lret
xchg
push
dec
mov
dec
mov
int
out
jecxz
or
test
shll
mov
roll
pop
push
fs
dec
insl
imul
xchg
shl
imul
or
movsb
fidivrl
pop
add
mov
popl
inc
rclb
out
stos
xchg
xchg
rolb
cmp
pop
push
dec
ficoml
and
fdivl
xchg
cmpsl
pop
mov
sub
pop
cltd
push
mov
cs
mov
repz
gs
es
add
ret
ss
mov
push
jle
loop
testl
sbb
iret
movd
rcll
push
frstor
push
stos
lock
add
sub
mov
cwtl
inc
and
xor
push
xor
mov
icebp
mov
roll
ret
add
out
jmp
push
imul
cmpsb
push
or
icebp
movsb
cld
fisubs
xor
ret
mov
xchg
push
pop
std
push
ret
xchg
jnp
inc
rorl
lahf
jo
add
mov
subb
sub
mov
dec
inc
mov
jp
sub
and
pop
xor
cmp
mov
cmp
scas
pop
rcrb
add
pop
cmpl
pop
cmp
scas
mov
push
sub
and
inc
sub
inc
pop
xchg
xor
fs
bndstx
das
jle
mov
stc
aad
sbb
and
pop
lret
cmp
and
xchg
fstpt
insb
adc
lcall
outsl
xchg
loop
dec
dec
mov
rcrl
or
xchg
adc
add
pop
adc
add
ja
lcall
aad
xchg
jnp
in
and
call
mov
jne
int
testl
aam
ds
mov
sub
dec
mov
jno
dec
es
lea
adc
adc
clc
push
fiaddl
test
popa
les
add
nop
dec
jle
aaa
jno
popa
add
decl
xor
nop
push
push
xlat
and
sbb
xchg
fwait
push
inc
xchg
cmp
lcall
rolb
sbb
popf
ds
push
inc
mov
xor
imul
setp
pushf
test
testb
ds
dec
xor
ss
xchg
mov
jle
push
pop
dec
mov
sub
popa
cli
and
aaa
cld
inc
jno
nop
jb
pop
jmp
mov
mov
add
mov
mov
mov
jno
into
push
test
cwtl
jb
inc
add
rorl
jb
xor
sub
and
adc
pop
jne
stos
repnz
and
loopne
adc
adc
imul
jnp
lahf
push
popa
sti
roll
cmp
xchg
aaa
out
aaa
adc
pushf
mov
pusha
sub
mov
daa
adc
rcrl
dec
out
popf
mov
add
xorl
cmp
rclb
push
cli
xchg
movsb
adc
cmp
push
mov
in
shrl
in
sbb
xor
not
xor
fstl
fcmovne
iret
xor
cs
fwait
or
cmp
and
out
mov
mov
pop
fidivl
fbld
pushf
inc
dec
pushf
mov
xor
subb
jp
repz
sti
lcall
shr
add
leave
int3
enter
scas
fadds
mov
inc
adc
mov
push
sbb
jno
or
adc
adc
js
dec
mov
mov
insl
inc
in
xchg
pop
jg
fmuls
cmc
movsl
xor
adc
mov
into
mov
in
in
daa
rclb
testb
dec
and
daa
mov
inc
mov
push
push
xor
sbb
pop
pop
hlt
ret
out
es
loope
push
data16
mov
or
loopne
sub
cmp
mov
jle
mov
ud0
pop
filds
fucomip
es
push
xor
mov
xor
and
nop
mov
or
stos
xor
arpl
clc
inc
stc
adc
addr16
test
in
mov
imul
jno
jp
repz
cwtl
mov
xlat
nop
add
cmp
push
jne
iret
rdmsr
stos
sub
xor
pop
lahf
sbb
das
mov
sbb
out
dec
mov
loopne
sub
int
push
fisubl
outsl
cli
xor
aam
popa
push
xor
bound
cmp
xor
mov
pop
pop
cwtl
inc
dec
adc
test
ljmp
jg
mov
mov
sub
adc
out
mov
cmpsb
sub
dec
sbb
dec
cmp
mov
icebp
into
jo
jle
cmp
push
scas
shlb
repnz
in
test
jb
dec
jmp
dec
idivb
sbb
shl
adc
out
pop
push
test
xchg
jp
fisubrl
into
lds
andl
adc
shlb
call
hlt
xor
test
das
rcll
dec
push
mov
adc
bound
in
jbe,pn
and
movsl
sbb
xchg
fs
cmp
pop
addr16
push
insl
add
mov
fbld
enter
imul
jle
arpl
int3
loope
fwait
aad
dec
dec
cmp
add
dec
inc
push
mov
push
jecxz
bound
xchg
pop
cs
out
leave
loop
out
loopne
sbb
ret
sub
inc
icebp
jns
js
lds
sub
int3
lcall
or
mov
pop
int
aaa
add
adc
mov
inc
mov
mov
rorl
ffree
xor
add
in
repz
adc
ds
dec
sub
and
push
lcall
movsb
rolb
shlb
bound
mov
mov
repz
cmpsb
mov
sub
stos
mov
mov
out
cwtl
bound
inc
sub
xor
jo
xor
in
push
aas
sub
xchg
psllq
idivl
push
lods
mov
aad
mov
pusha
jbe
jmp
addr16
xchg
mov
inc
dec
pop
adc
jmp
rcll
sub
data16
lods
bound
mov
lcall
je
jmp
cld
adc
xchg
sahf
jbe
cli
xor
cmpsb
or
jno
fimull
fldt
mov
pop
mov
arpl
dec
repz
pop
rcll
cmp
lahf
mov
pop
movsl
movsb
lea
fidivrl
movsb
in
adc
jbe
scas
out
in
jp
or
cmp
out
pop
out
in
pop
xchg
and
inc
movups
in
pop
mov
divl
push
or
fistpl
mov
out
fcoms
pop
rorb
or
movsb
mov
jo
lods
jne
inc
loopne
adc
pop
test
stos
dec
outsb
jg
fwait
ret
lret
mov
mov
dec
lcall
call
and
sub
cmpsl
mov
push
scas
sub
iret
sahf
das
je
cld
mov
and
aad
mov
outsb
loop
arpl
leave
jns
pop
and
fwait
add
hlt
js
push
mov
xor
xchg
xchg
or
xor
rorb
mov
add
jns
inc
int3
mov
iret
push
xor
sub
jbe
sarw
aas
in
push
cs
mov
out
pop
xorl
lret
shrl
xchg
sbb
sbb
int
add
and
mov
cmpl
fwait
jmp
leave
and
push
xor
scas
scas
sbb
dec
mov
imull
imul
push
xor
addr16
repnz
lahf
ja
mov
aad
in
or
sub
inc
mov
and
dec
arpl
insl
test
mov
dec
dec
mov
mov
mov
add
push
dec
mov
in
xlat
mov
jge
stos
mov
outsb
gs
push
scas
call
aaa
cmc
xchg
push
or
lret
adc
loope
ret
add
shrb
pop
data16
push
outsb
fildll
pop
daa
dec
fidivs
enter
xor
jp
repnz
inc
inc
movsl
and
mov
or
jae
adc
mov
add
shlb
push
push
xor
push
scas
out
imul
xchg
sbb
js
and
jge
shlb
call
xor
xchg
push
sti
mov
jnp
jns
mov
mov
sub
adc
nop
xchg
shlb
imul
mov
sub
notl
sbb
pop
mov
dec
imul
jne
aam
shl
rclb
pop
int
adc
mov
mov
inc
jle
xchg
pop
jno,pt
fcomps
out
mov
into
repz
aaa
out
out
pop
push
sbb
ss
mov
and
jp
repz
cld
jae
sub
mov
add
sbb
mov
es
mov
mov
inc
jecxz
and
push
sub
inc
add
sarb
fsts
sub
lcall
pusha
cmp
cmp
pop
lock
aaa
inc
shlb
or
xchg
add
fisubrl
add
js
jecxz
mov
ja
mov
sub
jl
mov
push
inc
xor
stos
rcl
divb
add
push
mov
xchg
ds
push
cmp
call
mov
fisttps
sub
rorb
sbb
mov
fwait
adc
add
jne
and
push
aam
inc
aam
imul
bound
notb
test
xor
loope
aaa
pushf
cmpsb
jge
addl
stc
push
push
push
and
outsl
lret
lcall
stc
xor
sbb
push
adc
mov
mov
jge
sub
cmp
movsb
mov
sar
pop
mov
test
in
and
mov
push
ljmp
notl
mov
fiadds
pusha
xor
shrl
xchg
mov
sub
bound
xchg
cltd
mov
rcl
std
das
mov
pop
std
push
mov
pushf
dec
sbb
mov
aas
sahf
movsb
scas
cltd
scas
in
arpl
sub
out
xor
pop
mov
pop
pushf
mov
lock
or
mov
lahf
push
adc
mov
imul
inc
outsl
add
stos
pop
pop
jns
xor
cmp
mov
inc
dec
adc
adc
aas
notb
mov
fcoms
cmc
pop
arpl
jo
pop
add
push
jne
pop
mov
pop
stc
std
jae
aaa
imul
or
inc
mov
lret
cmpsl
xchg
repz
popf
pop
mov
add
cltd
xchg
push
add
xlat
dec
aad
or
xchg
mov
sbb
jge
js
sahf
int3
or
xor
inc
jo
orb
fwait
or
subl
dec
pop
or
test
test
jb
daa
push
into
outsl
clc
add
cmpsb
test
inc
and
addr16
std
loope
mov
adc
xchg
fidivs
cmp
push
mov
xchg
or
movsl
sbb
rcll
scas
fildll
xor
sahf
pop
and
pusha
sub
test
jns
mov
push
xchg
sbb
mov
add
mov
jnp
and
jne
jne
aas
andb
insb
jae
xchg
fisubl
sahf
gs
adc
inc
js
xlat
mov
loopne
and
jmp
mov
jp
je
adc
push
push
jecxz
dec
dec
adc
sbb
cmp
in
dec
enter
and
lret
in
mov
rclb
int3
jo
sbb
mov
inc
rolb
push
cmpsl
dec
xchg
call
sbb
sub
jo
mov
ss
in
dec
into
lret
fisttpl
mov
add
in
fld
stos
jecxz
sbb
scas
jb
mov
scas
fiaddl
test
mov
cmpsb
fcmovnb
sbb
pop
sahf
scas
xchg
inc
in
xor
push
shrb
in
ffree
jne
in
push
mov
mov
stc
sub
shlb
sub
rclb
mov
cmp
cmp
mov
push
mov
jl
popa
jne
in
inc
dec
int
xchg
pop
push
ds
cwtl
cmp
and
sub
dec
cli
fdivrl
stos
clc
inc
jb
je,pt
xor
pop
js
xchg
sarl
popf
jns
xchg
scas
xchg
pop
rorl
add
mov
xchg
sub
add
lahf
xor
sbb
push
pop
sbb
lods
lahf
out
insb
fisubrs
jge
arpl
pop
out
test
push
push
jp
sub
mov
fistpll
stc
mov
add
lds
jecxz
in
fimull
jl
jge
xor
pusha
sbb
cmp
call
js
jno
xor
pop
inc
adc
loop
add
repz
stc
sub
push
scas
imul
or
mov
xchg
inc
rcrl
std
outsl
test
xchg
adc
lds
mov
and
mov
ds
faddl
dec
lahf
addr16
inc
adc
adc
bound
scas
push
mov
inc
out
mov
push
je
jmp
push
add
popl
sub
sub
jbe
sbb
fwait
jmp
mov
jge
sub
sbb
lahf
sub
sbb
ret
sarl
adc
jle
sbb
repz
iret
push
push
divb
daa
sahf
jge
nop
lods
pushf
insl
mov
add
cmp
inc
testl
adc
add
jmp
movsl
push
mov
cmp
dec
inc
faddl
xlat
pop
sub
adc
aaa
cmp
ja
adc
inc
and
mov
jbe
pop
ret
add
stc
inc
jbe
das
push
mov
adc
movsl
jge
negl
add
xor
add
or
mov
jmp
js
inc
in
add
jmp
scas
lods
push
mov
fisubs
inc
mov
sbb
or
and
in
add
xor
arpl
adc
pop
inc
push
loope
in
mov
mov
push
cwtl
mov
jns
jmp
sub
cmp
ljmp
cli
lahf
dec
xchg
add
pop
adc
shll
sbb
xchg
add
lock
inc
movsl
jbe
push
stc
add
or
cli
pop
ret
ljmp
mov
shrb
jo
or
push
and
mov
push
jo
mov
hlt
dec
adc
rol
sbb
push
adc
xchg
and
sarl
push
repnz
sbb
inc
jmp
ret
sar
lods
inc
hlt
shr
mov
cmp
jb
or
imulb
sahf
pop
fisttpll
push
xchg
rorl
cmp
sahf
out
leave
testl
stos
iret
cwtl
inc
pop
mov
mov
jo
sbb
mov
push
push
push
stc
lcall
and
decl
call
out
popa
cwtl
movb
test
adc
xor
cld
pop
test
adc
push
aad
dec
out
mov
stos
cwtl
in
lea
outsl
sbb
or
ja
dec
lds
into
lods
inc
push
outsb
adc
push
orl
sbb
test
push
lret
and
pop
dec
data16
xchg
mov
in
cmc
xorb
dec
ret
lods
stos
xchg
decl
sbb
aam
data16
lret
pop
mov
fstpt
xchg
or
stos
xchg
jo
xlat
or
or
daa
add
pop
mov
adcb
xchg
daa
jecxz
pop
addr16
cmpsb
sub
mov
mov
loop
jge
lahf
cmp
mov
sub
or
cltd
dec
insl
jg
aas
lahf
test
xor
xchg
add
pop
jge
out
xor
ret
push
push
aas
pop
mov
adc
fstl
add
dec
shl
xchg
fidivrl
pop
sbb
push
aad
cs
jg
mov
int
mov
adc
dec
jns
dec
cmp
add
rclb
push
imul
loop
jecxz
jg
mov
jge
sbb
pushw
push
sub
mov
push
lods
cmpsl
jbe
push
aam
add
repz
dec
or
push
mov
pop
movsb
adc
fs
das
cmp
xor
imul
sti
gs
pop
add
xlat
into
lcall
adc
fnstcw
mov
lods
imul
ds
lods
ljmp
cmp
leave
shlb
push
lret
mov
out
add
test
jno
jg
fwait
push
dec
bound
mov
mov
sbb
sub
sbb
out
jmp
mov
leave
pop
lods
xchg
add
mov
push
movsb
and
or
pusha
adc
dec
in
push
hlt
jle
pop
pop
das
jp
xor
mov
adc
insl
push
mov
add
xchg
inc
xchg
stos
cmpl
push
dec
dec
mov
nop
fimuls
pop
mov
push
arpl
and
xor
sbb
push
std
fbstp
push
inc
and
test
push
stc
shll
fsts
test
xchg
lcall
sbb
fldl
sub
pop
movsb
lcall
push
mov
std
rcll
push
out
adc
shl
cmp
mov
cmp
mov
call
rcl
popa
push
and
mov
jmp
cli
insl
stos
dec
add
je
rclb
sub
mov
lret
jg
mov
out
xorl
test
lds
mov
hlt
inc
call
clc
mov
insb
push
inc
mov
cmp
cmpsl
imul
scas
push
insl
and
imul
fsubrs
int3
clc
into
ljmp
cli
insb
pusha
dec
pop
fsubs
pop
gs
and
fcomps
push
xchg
dec
mov
fsubrs
adc
loopne
bound
inc
idiv
dec
xchg
fimull
out
ret
xor
add
adc
jl
push
test
fistl
sar
dec
call
das
mov
out
int
push
or
sub
push
cmp
xor
mov
jmp
sahf
andl
mov
cmp
popf
and
adc
mov
sti
pop
inc
adc
fwait
adcb
xchg
jecxz
mov
stos
inc
loope
movsl
lret
xor
jbe
jmp
aam
lods
inc
cltd
xor
dec
cmp
ficomps
pop
cmp
pop
cmpsb
mov
xor
and
add
sahf
xor
add
adc
pushf
push
insb
mov
pop
xchg
sub
cmp
or
sbb
in
and
xor
add
adc
pushf
push
insb
mov
pop
xchg
sub
cmp
or
sbb
in
and
xor
add
adc
pushf
push
insb
mov
pop
xchg
sub
cmp
shr
and
xor
add
adc
inc
sbb
xchg
mov
pop
in
push
or
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
stc
fucomip
iret
fcos
leave
out
mov
fldlg2
cld
lahf
in
scas
jns
imul
pop
sub
sbb
or
stc
fucomip
iret
fcos
leave
out
mov
mov
imul
jae
nopl
or
stc
fucomip
iret
fcos
leave
out
mov
mov
imul
dec
pop
push
push
addr16
mov
jmp
out
stc
mov
jb
mov
mov
pop
mov
cmp
xchg
mov
jo
mov
sub
inc
push
lahf
sub
movsl
sub
aam
int3
or
pop
cmp
sbb
idivl
fbld
adc
mov
cli
jns
add
cmpsb
and
cltd
or
xchg
mov
xlat
dec
mov
addr16
push
jns
jns
aam
outsl
pop
pop
inc
icebp
sbb
popf
lahf
mov
icebp
bound
pop
mov
vpshlw
dec
add
mov
sub
stc
aas
sbb
push
pop
roll
out
sub
data16
ljmp
or
add
aas
popa
cmp
dec
out
mov
mov
imul
pop
sub
sbb
or
fildl
out
aad
loopne
cld
stc
enter
insl
dec
cmp
and
push
inc
pop
popa
cli
mov
lods
out
push
mov
sbb
imul
sub
or
push
imul
nop
fwait
lea
mov
mov
imul
pop
sub
sbb
or
stc
fucomip
iret
fcos
leave
out
mov
mov
imul
pop
sub
sbb
or
stc
fisttps
adc
sub
in
test
mov
imul
mov
xor
lock
ljmp
sub
sbb
add
ret
test
inc
adc
mov
or
dec
lcall
inc
pop
es
addl
mov
into
roll
pop
cltd
dec
cmpsl
pop
lea
adc
outsl
push
adc
fisubrs
dec
or
cwtl
mov
adcb
mov
add
rclb
mov
sbb
es
incl
cmpsl
mov
repz
push
mov
xor
ljmp
iret
xchg
add
push
test
push
into
dec
push
xor
ret
inc
rsqrtps
mov
test
int
xorl
jge
and
stos
imul
pusha
pop
inc
lods
and
dec
jmp
jecxz
push
mov
push
mov
mov
inc
or
fmuls
nop
in
insl
push
mov
and
adc
cmp
pushf
leave
mov
ljmp
jge
addr16
lock
popf
pop
or
fistps
insl
dec
cmp
cmp
push
out
adc
mov
mov
dec
pop
mov
inc
andb
jae
out
aaa
xchg
and
jmp
push
idivl
cwtl
dec
jp
add
stc
sub
sub
outsb
push
hlt
adc
ret
fs
inc
or
pop
inc
pop
fdivl
jae
mov
loopne
xor
add
fldenv
nop
mov
jge
pushf
add
mov
js
add
mov
call
imul
cmpsl
fsubrl
aaa
pusha
jecxz
movl
int
xor
imul
not
imul
dec
shrl
xor
pop
rclb
ret
jae
cmpsl
mov
pop
xchg
movsl
das
adc
rcrb
imul
inc
rol
aaa
inc
fwait
jne
jb
out
mov
int3
push
jp
ljmp
test
add
scas
push
xor
lods
mov
xchg
xchg
cmpb
fs
push
ja
cld
push
inc
cmp
adc
movsl
jb
hlt
in
rcl
rolb
pushf
nop
les
out
inc
lcall
cli
int
xor
test
insl
or
add
scas
enter
gs
add
sti
adc
xor
enter
vcvtdq2pd
adc
mov
push
movsb
sub
xorb
jmp
std
lods
testb
in
or
pop
dec
push
test
jno
lods
data16
push
cmc
aas
lahf
fcmovnb
xor
push
les
mov
stos
jge
and
sbb
dec
loope
test
test
mov
int
mov
xor
shlb
imulb
sbb
testl
test
sbb
enter
test
ljmp
pop
iret
insl
fmul
or
aaa
fmull
pop
iret
xchg
cltd
fsubrs
nop
xchg
mov
and
mov
jmp
sbb
push
push
rclb
cli
ds
arpl
subl
and
mov
push
mov
cli
aaa
sbb
and
idivl
insl
jg
add
xor
shrb
nop
dec
icebp
out
push
push
xor
push
out
xlat
jo
in
mov
repz
xor
movsb
ret
pushf
into
xchg
std
xlat
iret
inc
xchg
ss
insl
leave
rolb
push
scas
cmp
ljmp
jae
adc
in
adc
mov
aas
jnp
fwait
testb
push
cmc
mov
mov
push
addl
push
mov
and
sarb
dec
cmp
sarb
push
movsb
jmp
jle
push
pop
int
adc
push
pop
loopnew
mov
stc
nop
fwait
test
imul
and
sbb
pop
lea
call
xchg
sub
icebp
xor
mov
jl
aam
mov
sub
and
lock
mov
add
jns
jae
xchg
mov
loope
sub
adc
sub
loop
adc
mov
pop
dec
pop
inc
repnz
loopne
sub
xchg
je
cmpsl
inc
sub
push
sahf
jge
fwait
rcr
sbb
enter
sub
jp
test
xchg
pop
jns
mov
add
xor
push
cmp
test
call
aam
clc
xor
pop
out
fildl
jae
insl
scas
test
sbb
cwtl
sub
jbe
rep
xor
mov
les
jmp
stos
das
fwait
decb
pop
adc
cmc
sub
clc
call
ja
insl
insl
mov
popa
xor
adc
loop
sti
adc
xchg
jl
mov
xor
and
mov
jns
aas
cvtps2pd
and
xchg
cmc
loop
pushf
imulb
in
xchg
pushf
inc
ljmp
mov
hlt
xchg
jno
arpl
cmpsl
dec
sbb
xor
and
adcl
xchg
rcrl
xor
orb
shlb
pop
lds
sub
dec
add
insb
jae
and
push
mov
xchg
ds
fmull
xchg
fstpl
notl
pusha
adc
cld
adc
mov
ficoms
insl
in
sub
pop
out
mov
hlt
mov
je
aas
adc
jle
xchg
cli
fdivr
out
mov
jmp
mov
xchg
mov
fsubrs
or
ret
insb
in
loopne
popa
ds
cmpl
xlat
or
cmp
and
subl
inc
bound
jg
push
sub
mov
addr16
loope
or
xchg
rclb
sbb
adc
loop
mov
roll
mov
gs
jne
aad
xlat
dec
movsb
cmp
scas
scas
add
insl
pop
dec
sbb
pop
mov
push
sbb
sub
in
aam
lahf
fcmovnbe
sub
pop
mov
and
add
ffreep
dec
aam
imul
or
cmc
xor
sbb
hlt
dec
scas
adc
pop
insb
push
mov
in
xchg
loopne
sbb
std
jo
sbb
pop
mov
pop
mov
xchg
mov
or
sub
clc
cwtl
pushf
daa
loope
mov
iret
loop
and
mov
jno
cmp
loopne
pop
cmp
clc
loope
divl
xor
adc
xchg
xchg
adc
pop
cmpsl
movsb
ss
push
test
ja
push
fidivl
push
jmp
leave
int
inc
rcl
mov
jo
test
lea
adc
xor
jl
pop
inc
or
stos
pop
fnsave
gs
dec
test
les
jge
ljmp
lods
mov
out
jl
xor
stc
test
push
dec
adc
shl
add
sbb
lds
adc
cltd
popf
out
ror
pop
imul
loope
in
sub
out
dec
ljmp
sbb
mov
inc
sub
jb
xor
mov
mov
cli
dec
cs
jle
mov
pop
ret
sub
add
pop
outsb
adc
inc
out
stos
sbb
xor
cmpsb
lret
xchg
scas
pop
or
sub
test
mov
enter
mov
xchg
aam
outsb
insb
outsl
xchg
mov
xchg
in
lahf
out
aaa
mov
mov
jl
or
loope
adc
test
jae
das
daa
cmp
ret
sti
rcrb
cmpsb
subl
cli
mov
mov
jae
adc
mov
leave
scas
dec
cmp
fldl
imul
jge
xchg
lods
jo
enter
xchg
clc
xchg
rcr
add
add
into
add
push
push
add
mov
cmp
addr16
ret
cwtl
mov
into
xchg
es
popa
push
int
inc
dec
fidivrl
lds
shrb
mov
lods
in
cmpsb
jnp
mov
and
cmpl
or
xchg
dec
pushf
mov
imul
notl
push
add
fdivrs
push
rorl
not
inc
in
inc
jae
jo
shl
sti
push
cmpsb
cmc
jp
arpl
aam
mov
insl
inc
xchg
cmc
push
or
mov
outsl
or
pushf
or
jno
sarb
aad
ds
pop
aam
xchg
and
push
push
out
push
je
inc
lret
std
in
fisubl
sub
mov
mov
and
sahf
adc
or
mov
add
fstp
aam
add
add
push
mov
int
imul
mov
je
mov
sahf
les
jns
pop
es
add
mov
adc
je
out
push
fidivrs
addr16
out
lods
jl
aaa
notb
mov
cmpb
add
hlt
push
fmuls
add
out
inc
sub
mov
mov
pop
pop
rcrb
das
jnp
inc
rcr
and
sti
jo
popa
adc
or
push
nop
mov
xchg
shrb
jecxz
outsb
pushf
sub
andl
jae
fistps
jb
mov
add
mov
cmp
or
xchg
mov
mov
cmp
mov
cmp
lret
jge
inc
jmp
xor
jl
arpl
lcall
mov
lds
cmc
add
cltd
xlat
packssdw
cmp
pop
xchg
push
xlat
mov
sbb
imul
sub
xchg
frstor
jns
jmp
sub
or
les
rcll
cwtl
fs
and
xchg
add
ljmp
in
cs
cld
push
xchg
mov
and
adc
lods
add
lock
loopne
cmpb
pop
mulb
mov
jns
cli
movsb
add
adc
aam
xchg
shr
in
dec
jnp
enter
pop
jg
shll
jmp
aam
aad
iret
mov
push
dec
orl
mulb
pop
shrb
inc
stos
leave
pop
cmp
lds
push
clc
popa
inc
xor
or
xor
int
iret
inc
inc
jle
movsl
mov
add
loopne
xor
int3
push
lahf
lock
filds
pop
xchg
ds
inc
sub
mov
sub
in
addr16
jmp
mov
frstor
dec
rcr
test
stos
aaa
pop
popa
sbbl
js
outsl
xlat
sub
pop
mov
test
dec
aas
pop
seto
dec
lcall
fs
cwtl
xor
push
enter
pop
adc
cs
and
and
aaa
cltd
and
sbb
out
inc
jecxz
sbb
aad
gs
push
inc
addb
fcmovnbe
jmp
stc
in
lcall
xor
pop
and
rorb
bswap
inc
xchg
sbb
daa
push
pop
sub
ds
stos
xor
jecxz
xchg
cmp
shrl
rcrb
lahf
mov
jns,pn
rcr
fs
pop
clc
bound
jl
mov
addr16
jge
leave
inc
lods
aas
out
in
out
sbb
dec
lcall
add
gs
sub
add
sbbl
mov
or
inc
mov
out
roll
or
js
testl
cmpsb
nop
mov
imul
sti
daa
sub
in
les
mov
dec
push
std
rclb
lods
notl
iret
pop
pop
out
xor
maxps
pushf
xlat
jne
mov
cltd
movsl
sbb
test
cmp
jb
jmp
cli
aam
lock
gs
das
jle
fsubs
bound
movl
jp
pushl
cld
adc
mov
mov
xchg
adc
push
in
loop
fs
jmp
pop
xchg
inc
scas
movsl
mov
std
dec
and
scas
pop
jns
es
mov
cmp
das
cmp
outsb
jl
scas
hlt
lea
jge
fs
rcr
mov
push
add
notl
sbb
mov
aad
adc
cmp
pop
inc
mov
cs
gs
jb
dec
sub
pop
mov
popa
xchg
jns
push
pop
outsb
stos
jae
inc
push
sbb
mov
dec
imul
pushf
loopne
pop
lods
or
push
neg
int
pop
xchg
clc
cmpsb
cmp
out
and
lods
stos
ret
or
mov
mov
jg
test
rcll
push
hlt
repnz
sub
or
negl
pusha
in
mov
or
push
push
xor
xor
testb
das
sub
inc
add
jnp
stos
xchg
dec
mov
and
xor
pop
sbb
das
xacquire
aaa
and
or
dec
inc
shlb
rclb
push
mov
ret
dec
aas
insl
cmpsb
pop
mov
cmp
inc
test
mov
das
popa
push
in
xlat
mov
mov
mov
insl
in
sbb
ret
jle
es
das
push
scas
mov
xchg
jbe
stos
mov
sub
dec
clc
roll
int
jo
nop
and
shlb
sbb
mov
dec
out
cmpsl
je
xlat
mov
cmp
mov
les
popf
xchg
jne
pusha
pop
hlt
sbb
iret
loope
rorb
pop
dec
jbe
mov
setp
mov
icebp
and
inc
add
mov
ja
dec
faddl
sahf
xchg
sbbb
lea
and
aad
xor
addr16
je
add
mov
mov
mov
cmpsl
popa
out
cmpsl
add
pop
mov
iret
ss
fcoms
test
push
aad
dec
dec
popa
es
xor
and
mov
inc
lock
hlt
mov
push
dec
cmp
jl
jo
xchg
xor
push
xor
test
sub
insb
push
or
or
in
and
andb
cltd
mov
pop
sub
std
pop
jae
jecxz
les
pop
inc
rcrb
lock
int
shll
xchg
push
xlat
add
lret
rolb
nop
jg
cli
mov
inc
mov
pop
xchg
cmp
push
aas
sub
in
call
mov
cmp
push
insl
add
or
xchg
xor
ficomps
mov
mov
out
idivl
mov
and
stos
fs
cmp
movsl
loopne
dec
jne
les
xchg
jnp
in
push
dec
cmpsb
jbe
das
xchg
jmp
mov
imul
test
mov
push
data16
cld
cmpsb
test
ja
xor
mov
sbb
insl
sarb
je
cwtl
fs
add
xor
lods
les
mov
mov
and
mov
xor
mov
lds
or
add
mov
rcll
inc
push
mov
bound
dec
out
jo
jl
mov
xchg
mov
lea
cmpsb
mov
fwait
jecxz
sti
ret
popa
pop
xor
pop
mov
lcall
inc
mov
xchg
or
fcompl
outsb
pushf
pop
test
or
sbb
xchg
cmc
scas
rorl
mov
dec
xor
push
inc
sbb
addl
cmp
pop
push
lret
mov
jg
vpshld
dec
outsb
daa
cmc
xor
mov
mov
pusha
lahf
movsb
int
jns
jno
not
inc
es
or
cltd
repnz
inc
stos
cmovs
lahf
stc
sub
ja
sub
or
fidivs
dec
out
xor
sub
insb
data16
aas
out
movsb
imul
push
sbb
lret
andb
dec
pop
loop
xchg
nop
inc
test
push
xchg
mov
xor
in
les
mov
fidivl
jae
andnps
sub
xchg
int
jno
jo
mov
leave
test
inc
mov
enter
mov
loope
xchg
arpl
adcl
outsl
and
lcall
and
das
xor
stos
inc
fisttpll
cmp
out
out
cmp
push
test
je
repz
jle
cwtl
cmp
ja
rcrl
mov
inc
hlt
sahf
inc
les
insl
in
arpl
loop
fucomp
les
mov
je
jg
push
dec
add
push
verr
dec
add
and
outsl
cmp
or
addr16
jae
pop
or
fadd
pusha
cmc
in
aad
push
xor
clc
push
cs
fcompl
frstor
cmp
mov
int
pop
cld
ret
xor
mov
cmpsb
imul
cmpl
stc
jne
cmc
push
notb
push
movsl
mov
and
lahf
mov
stos
test
mov
jbe
dec
lods
cld
cwtl
out
cmp
push
scas
xor
stc
vmaxss
dec
or
repz
xchg
push
sub
mov
bound
jo
in
sbb
or
sti
xchg
cmpsl
inc
cmpl
aas
mov
xor
mov
test
fs
cmp
and
mov
jne
les
call
adc
inc
inc
aas
inc
js
or
push
cmpb
mov
push
fimull
sub
xchg
inc
scas
outsl
inc
inc
lret
inc
jg
mov
stos
mov
cmp
xchg
cmpsl
repnz
add
or
adc
cmp
fdivrp
sbb
mov
daa
inc
call
push
jno
test
lcall
repnz
inc
imul
inc
mov
and
gs
adc
pop
dec
or
stos
dec
testb
clc
stc
inc
lret
in
adc
mov
in
mov
hlt
push
lds
push
xor
add
fcoml
adc
sub
sti
pop
mov
fnstcw
sahf
xchg
fwait
into
out
loop
aaa
xor
add
fisttps
or
lds
mov
popa
cmpsl
push
int3
in
test
repz
xchg
pop
xchg
and
sahf
les
enter
cmp
lcall
enter
cltd
roll
fs
subl
popa
gs
ljmp
mov
cmp
call
and
cmp
xchg
ret
add
add
lock
push
xchg
adc
jns
sub
test
sub
lods
sub
jmp
das
inc
or
subb
cmpsb
dec
ljmp
out
fists
jmp
pop
fwait
mov
sub
mov
cli
sbb
push
add
jne
jae
test
fldl
push
jb
scas
arpl
insb
mov
out
into
pop
lds
std
pop
mov
loop
rorb
test
movsl
int
ds
or
fnstsw
add
sbb
shl
call
insl
adc
inc
cmp
push
jbe
cmp
jmp
mov
gs
jge
dec
xchg
out
sbb
mov
pusha
xchg
aad
add
sub
cmpl
xchg
mov
fcomip
lret
xor
sbb
adc
sbb
cmp
cmp
cmp
mov
mov
adc
leave
xchg
sti
int3
inc
mov
mov
jp
fmull
mov
loope
dec
bound
test
out
pop
test
lods
xor
push
or
std
cmp
sub
sahf
lret
call
outsl
leave
lods
mov
cmp
sub
xor
inc
sub
out
push
add
into
mov
cmp
fisttps
push
popa
fisttpll
ss
mov
dec
cmpsl
aam
pop
loop
or
sahf
mov
imul
mov
shrl
test
loope
loopne
cmc
push
or
cmp
push
andb
add
or
jge
pop
dec
pop
add
movsl
or
popf
xor
adc
jne
in
push
pusha
xstore-rng
cmpsl
int
pop
mov
jae
popf
sbb
aas
mov
fsts
xchg
or
lcall
jo
push
mov
add
sahf
sbbl
maskmovdqu
mull
mov
out
inc
imul
in
fcmove
xor
fstps
jle
leave
sti
out
popf
xor
leave
mov
sbb
jns
clc
dec
xchg
jecxz
lods
inc
sbb
jbe
cmpsb
ret
sbb
adc
push
cmp
into
and
xor
mov
int
aas
in
pop
lahf
or
mov
fyl2xp1
cmpsb
loop
jg
xchg
in
stos
in
leave
dec
mov
pop
cmp
jp
mov
jle
int3
xchg
mov
inc
into
mov
cmp
ss
jle
push
dec
pusha
mov
loop
dec
daa
xchg
outsb
mov
and
xor
rolb
jecxz
fistpl
inc
cmpsb
cld
dec
imul
stc
sbb
and
bound
mov
sub
and
adc
push
cld
add
xchg
cs
test
jecxz
fs
and
xor
cltd
lahf
xchg
sbb
repnz
loop
mov
mov
shrl
mov
or
daa
std
jge
push
loop
cmp
mov
leave
fmuls
mov
leave
xchg
lock
inc
xor
loopne
adc
icebp
fisubs
into
scas
dec
dec
mov
cmp
or
jb
popf
mov
ss
and
add
orl
add
icebp
iret
cli
lea
sub
xchg
cs
nop
cwtl
mov
sbb
jge
cld
push
iret
loope
test
push
loope
leave
out
mov
mov
imul
pop
sub
sbb
or
stc
fucomip
iret
fcos
leave
out
mov
mov
imul
pop
sub
sbb
or
stc
fucomip
iret
fcos
leave
out
mov
mov
imul
pop
sub
sbb
or
stc
fucomip
iret
fcos
leave
out
mov
mov
imul
dec
xchg
mov
ror
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
