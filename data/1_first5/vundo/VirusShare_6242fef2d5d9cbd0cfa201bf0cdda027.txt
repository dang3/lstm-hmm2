std
push
pushl
add
add
les
fcomps
rolb
inc
and
add
push
das
mov
or
dec
jae
ret
push
outsl
decl
or
jge
add
jne
xor
push
push
pop
or
mov
std
mov
sub
adc
adc
dec
and
jmp
sbb
pop
ret
mov
mov
aaa
or
inc
or
pop
push
push
cmp
cltd
insb
mov
push
aaa
mov
mov
add
ret
or
or
lea
rolb
xor
aas
negb
push
dec
dec
or
mov
sti
fmul
xor
mov
pop
sbb
push
lcall
pop
pop
and
pop
jl
out
fbstp
push
add
inc
adc
test
pop
imul
sahf
jne
sbb
inc
add
mov
xor
push
add
pop
inc
nop
or
add
add
cmp
cmp
push
add
and
pop
or
inc
in
pop
pop
leave
ret
inc
add
in
xor
call
xchg
pop
sub
push
push
push
lea
push
outsb
mov
push
push
mov
mov
das
mov
test
mov
lods
push
xor
ljmp
sub
imul
test
and
jae
out
and
sbb
fs
sub
in
jnp
inc
cmpl
je
xor
out
sub
les
mov
dec
sbb
add
inc
cmp
inc
mov
adc
add
clc
inc
mov
mov
or
out
outsb
arpl
jle
or
lods
pop
push
and
pop
cmp
daa
pop
or
sub
sub
xchg
mov
xor
cwtl
loope
sahf
outsl
sbb
testb
mov
and
orb
pop
lcall
fadds
pop
mov
add
jg
sub
push
in
push
lret
sbb
pop
clc
mov
jle
cwtl
push
sti
clc
mov
mov
inc
fs
dec
pop
outsb
or
jecxz
push
pop
push
ds
cmp
negb
jnp
jno
adc
div
jae
andl
jmp
and
xor
push
mov
dec
scas
add
mov
mov
outsb
mov
je
sarb
lods
sbb
jnp
incb
adc
xor
shll
jl
jp
nop
xchg
pushf
hlt
or
cmp
outsb
inc
add
rcll
sbb
or
enter
pop
xchg
push
jmp
and
out
push
popa
jmp
mov
add
adc
popa
fstpt
jl
repz
cmp
cmp
and
je
and
jle
ja
je
push
push
jmp
push
xchg
mov
and
inc
jo
mov
sub
adc
push
fstps
mov
mov
into
adc
mov
loope
js
or
xlat
inc
mov
jle
sbb
xor
popf
lods
mov
push
push
insb
pusha
into
mov
loope
repz
pop
mov
cmp
and
pop
inc
aas
insl
or
pop
add
jnp
mov
mov
and
addr16
push
test
fcmovb
insl
jecxz
gs
call
shlb
fstcw
loopne
push
inc
add
in
loopne
in
ja
outsb
push
dec
cmp
sub
fcoml
cmp
push
call
jl
sbb
or
mov
push
or
sbb
sbb
popa
loope
push
pop
xor
lods
shlb
es
sub
jbe
push
or
and
cwtl
or
gs
shlb
jge
loop
ja
push
dec
lret
mov
imul
jmp
subb
mov
jl
adc
push
andl
add
insb
fstps
dec
or
push
insl
mov
inc
pop
daa
add
xor
mov
jl
arpl
lock
cld
jge
fs
ss
jmp
neg
mov
xchg
je
inc
fstl
cltd
lods
fadds
sub
push
loop
push
sbb
cmp
lock
adc
xchg
lock
adc
in
jns
outsb
outsl
mov
and
aaa
pushf
jecxz
int3
aam
leave
sbb
test
aam
lea
rcll
enter
inc
loopne
iret
enter
call
notl
bound
test
call
xchg
add
inc
inc
mov
mov
in
xchg
cmp
sub
push
sub
in
std
pop
or
jecxz
int
int3
ss
inc
sub
jnp
test
adc
pop
dec
out
cs
push
repz
inc
push
adc
int3
jmp
cmp
or
sbb
push
dec
incb
and
add
pushl
jae
js
sarb
pop
ret
push
adc
mov
pop
push
in
fcmovnu
sti
add
and
jbe
jbe
push
dec
movzwl
lea
jne
or
jb
or
push
arpl
or
mov
add
adc
push
out
aad
adc
add
inc
and
cmpsb
mov
mov
xor
xchg
fs
ss
test
or
adc
outsl
mov
adc
push
call
add
push
cmpl
push
and
mov
pop
fildl
jmp
nop
add
into
sub
inc
push
jg
inc
pusha
jl
adc
jg
mov
sbb
clc
hlt
mov
xor
dec
adc
cmp
lock
mov
sti
pop
fiaddl
ret
add
push
add
adc
lock
push
push
pushl
cli
movsb
xor
or
lock
test
jg
mov
mov
mov
sbb
sbb
testl
jnp
mov
fcomi
push
jne
sub
loopne
xor
imul
ds
je
mov
decl
mov
pop
mov
pop
mov
cmp
fcoml
cmp
mov
cmp
jne
movsb
incb
add
xor
ret
or
jbe
mov
inc
add
fsubrl
add
push
test
lea
bound
data16
xchg
dec
dec
pop
subl
cmp
mov
imul
jmp
call
jp
mov
mov
xor
push
push
cmp
mov
inc
in
negb
sub
dec
clc
pushf
rcrl
jne
scas
cmp
jge
xchg
outsl
dec
mov
adc
adc
xor
insl
sbb
mov
cmpsb
push
push
mov
sbb
mov
shll
cmp
jge
ja
xor
ja
pop
ficoms
mov
pop
lcall
je
test
negl
arpl
out
add
cmc
orl
dec
mov
movl
jo
xor
push
jno
je
lahf
mov
push
and
push
arpl
jl
push
jno
dec
stos
dec
xor
adc
div
jecxz
mov
pop
sub
jmp
mov
push
add
subl
int3
dec
jb
mov
cmpl
adc
pop
je
push
enter
shrl
jp
cmpl
dec
hlt
jg
ljmp
dec
push
pop
incl
sub
sar
mov
add
in
mov
mov
or
cld
mov
or
mov
sub
movsl
cmp
or
jmp
das
xor
lock
or
push
cs
sbb
jb
sbb
inc
adc
test
mov
out
out
push
adc
or
pop
add
adc
push
inc
push
mov
xor
ss
aaa
or
push
hlt
jle
jle
push
sbb
or
adc
mov
or
jmp
inc
or
mov
dec
dec
ret
ret
or
push
and
fistl
stc
sub
mov
jl
push
daa
out
push
loopne
iret
sbb
or
or
testl
pop
outsb
loop
sub
add
repnz
fistl
cld
inc
mov
mov
adc
adc
inc
decl
adc
gs
pop
scas
push
mov
cmp
icebp
xor
mov
mov
test
cwtl
pop
adc
sbb
push
lea
mov
push
nop
cmp
xor
ds
sub
or
sub
or
jge
aas
movb
sub
adc
inc
cli
ss
or
xor
xlat
je
adc
add
jbe,pt
dec
xchg
push
sbb
dec
jl
shll
or
idivb
or
and
clc
cwtl
mov
lcall
repnz
jnp
adc
shl
jns
dec
out
shrl
movsb
jae
adc
fists
dec
fcoms
pop
xor
mov
or
push
mov
add
iret
imul
rorb
jge
push
xor
adc
fiaddl
sahf
pop
insb
cmp
into
mov
push
push
and
add
push
and
mov
inc
fwait
js
xor
jmp
ficoms
addr16
cmp
ja
cmpsl
call
cmp
pop
arpl
xchg
pop
fstl
jbe
push
mov
mov
jge
add
and
loope
sub
jg
cli
mov
mov
cmpsb
lods
fdivrs
into
mov
adc
sub
cmp
sub
jl
daa
push
jne
lock
cltd
mov
or
xor
pop
adc
stos
or
adc
push
dec
sbb
jne
push
xorb
push
and
mov
adc
imul
iret
insb
mov
sbb
push
pop
hlt
adc
or
mov
mov
popf
in
push
adc
sti
es
pop
lock
jmp
lahf
sahf
sbb
mov
mov
sar
xchg
cmp
pop
adc
lea
popa
leave
fsubl
ud0
and
sahf
mov
pop
pop
push
shll
push
sahf
lock
fistl
ficompl
xchg
pop
or
push
pop
loop
push
imul
inc
or
rcl
sbb
add
xorb
lock
ret
ljmp
or
adc
add
and
fld
sub
pop
nop
xchg
cmpsl
add
cmp
roll
cmp
xchg
pop
jb
ficoml
nop
call
movsb
sbb
leave
out
sbb
push
adc
jecxz
mov
lret
ss
pop
xchg
inc
cmp
imul
lods
sbb
mov
popa
in
rcll
sub
mov
js
mov
add
not
sub
dec
push
pop
movsb
cmpsl
cmp
pause
or
pop
stos
and
push
jbe
cmp
and
ret
outsb
in
sub
es
xor
jl
aas
xor
lea
push
push
pusha
repnz
pop
adc
mov
pop
xlat
cli
push
dec
mov
imul
and
push
ret
sub
lea
ret
insb
fimull
add
shl
loopne
dec
test
push
es
nop
or
mov
ror
ret
inc
lock
fld
mov
push
sbb
mov
daa
or
lock
mov
push
shr
aas
lds
cmp
push
iret
sbb
add
inc
jg,pn
mov
bound
or
dec
ret
sbb
mov
lret
lock
lods
out
push
cmp
je
jle
jl
jnp
push
push
jne
push
push
xor
push
xorl
ret
ret
jmp
fsubp
inc
movsb
movsl
aaa
push
cmp
inc
cmp
icebp
subl
data16
rorl
adc
mov
call
shlb
ret
jg
fwait
lahf
or
mov
pop
rolb
fstps
pop
lock
popf
je
movl
or
cmpb
test
mov
inc
mov
jb
inc
xchg
dec
cwtl
pop
pushf
popa
enter
mov
jle
cmp
lods
jg
xorb
mov
cmp
enter
xchg
mov
mov
inc
mov
mov
mov
mov
xchg
outsb
outsl
mov
xor
out
mov
out
push
dec
jo
mov
jmp
sbb
lods
je
mov
sbb
jb
inc
cmp
jb
repz
push
lea
icebp
rol
push
rcrb
adc
insb
push
push
push
sbb
mov
push
sbb
or
insl
addr16
mov
sub
add
cmp
adc
lea
push
jae
cmp
push
cli
lret
sbb
imull
in
mov
inc
pop
adc
add
push
mov
idivb
jne
push
iret
std
mov
lds
xor
or
adc
or
and
lret
inc
xchg
pop
cmp
je
sbb
leave
adc
mov
mov
mov
and
or
daa
xor
jl
adc
daa
lds
jbe
ss
sbbb
in
loop
add
adc
popf
push
pop
adc
jae
cmp
cli
mov
mov
push
idiv
xchg
sbb
loop
or
mov
and
adc
pop
cmovl
in
movsb
das
sub
jne
xor
ret
fldl
add
leave
pusha
vpsubusw
add
mov
or
fadd
nop
push
xor
sub
in
sub
enter
fsubrl
mov
or
sti
ret
cmpsb
sbb
or
or
test
or
mov
test
cmp
mov
mov
push
sbb
cmp
pop
and
cld
pop
dec
pop
lahf
or
and
xlat
or
cld
mov
pop
insb
mov
lret
cmpsb
gs
ja
iret
fdivs
or
sbb
jnp
dec
mov
push
je
inc
jns
push
notb
mov
inc
inc
js
inc
pop
pop
nop
add
inc
test
mov
into
add
adc
and
push
mov
xor
pop
jle
push
cld
push
push
xlat
cmpsl
mov
movsl
out
adc
stc
xor
adcb
xor
pop
pop
push
cmc
inc
dec
fsubs
les
lock
sbb
mov
test
insl
push
add
fs
push
sbb
jne
adc
in
pushf
fsubl
imull
jnp
leave
ss
adc
push
or
sub
lret
and
hlt
jbe
push
fdiv
push
in
pop
xchg
mov
cli
mov
add
aam
xor
lcall
sub
rcrb
insb
mov
dec
add
push
mov
fstps
sub
test
and
cmp
inc
and
push
ret
outsb
xchg
jl
push
cmp
je
or
sbb
je
in
ret
inc
std
rorl
lea
mov
or
or
add
jl
pop
arpl
mov
or
lret
push
mov
xchg
test
push
dec
aas
jp
xorb
push
sub
repnz
add
or
fsubl
sub
test
or
popa
rolb
das
or
push
inc
jle
or
sub
mov
adc
dec
rcrl
add
xor
lahf
rol
cmpsl
or
push
add
mov
lds
mov
or
dec
pop
sbb
push
and
ss
into
clc
and
mov
pop
mov
sbb
xchg
mov
pop
mov
lret
jo
ss
and
jp
push
stos
add
or
outsl
cmp
xchg
dec
xor
lea
lea
sar
add
pop
lock
pop
mov
cmp
or
add
pusha
sub
cmpb
jne
push
sbb
sbb
or
int3
add
cmp
shll
sti
sub
or
push
out
insb
adc
in
pop
inc
cmp
fdivs
sub
adc
and
cwtl
add
stc
loopne
xchg
xchg
push
or
push
sub
or
js
popa
jl
clc
dec
insl
jo
mov
fcom
cmp
mov
adc
xor
fsts
cmc
cld
mov
dec
loopne
xor
fmul
mov
popf
movsb
mov
jp
or
mov
pop
and
push
mov
fistpl
and
mulps
mov
lea
push
rcll
inc
push
or
pop
pop
mov
add
dec
or
test
mov
xor
or
xchg
mov
mov
dec
xchg
sbb
xchg
in
fidivl
jl
cmp
pop
clc
fcompl
mov
mov
cmc
sbb
pop
adc
clc
add
pop
and
mov
mov
mov
lret
mov
sub
dec
je
add
les
jb
leave
and
sbb
clc
xchg
xorl
mov
cs
mov
incl
mov
out
lea
repz
adc
add
aad
sbb
scas
mov
outsl
bnd
into
pop
push
xchg
inc
ss
iret
mov
add
out
or
ud0
loopne
or
or
roll
push
outsl
syscall
or
and
out
or
and
add
sbb
and
pushf
pusha
pop
mov
ss
or
in
and
test
aas
packsswb
pop
inc
addb
loop
mov
or
dec
or
int
mov
mov
adc
lock
jo
mov
aam
test
mov
xchg
bound
mov
adc
aad
sub
add
scas
push
sbb
add
and
or
xchg
clc
out
mov
xchg
in
inc
sbb
push
outsb
jge
rorb
add
or
jecxz
pop
push
dec
clc
das
setne
dec
and
dec
mov
out
cld
adc
icebp
cmp
and
or
jo
rolb
adc
stos
movmskps
sete
enter
lods
push
clc
lock
cmp
iret
pop
int3
jge
mov
es
and
inc
pop
les
pop
jb
xor
dec
or
jecxz
or
stc
inc
or
add
aad
cld
pop
xchg
cs
jne
jae
cltd
and
add
sar
add
popf
movsl
das
mov
add
mov
sbb
test
lods
pop
sbb
iret
sbb
sbb
and
ret
or
shr
push
adc
fnstsw
dec
jne
jle
subb
pop
dec
insl
lods
mov
dec
mov
pop
sbb
jmp
pop
rcrb
adc
pusha
and
adc
jmp
mov
inc
mov
push
in
pop
push
fsubs
ret
lret
lods
in
in
les
mov
in
in
jbe
mov
jmp
arpl
inc
or
and
cs
outsb
add
push
out
jo
xchg
and
sub
mov
cmc
adc
mov
pop
lret
mov
dec
test
adc
push
sbbl
je
mov
mov
lock
cmp
add
mov
inc
lcall
cmp
aam
incl
pop
pusha
dec
out
mov
ret
jbe
pop
sub
pop
lods
pop
mulb
rcrb
mov
xchg
je
movsb
push
add
dec
lock
sub
push
push
mov
xchg
andb
jmp
xchg
add
jmp
sub
inc
push
adc
xor
dec
in
and
mov
orb
sahf
sub
sbb
mov
nop
cwtl
jae
into
into
pop
aad
push
sub
push
lds
dec
pop
xchg
fwait
push
imul
gs
out
adc
je
and
into
cmp
jb
or
jl
lret
or
loopne
fwait
jbe
jae
xchg
and
push
sub
mov
cmp
jbe
cmpl
inc
or
pop
and
mov
jbe
mov
pop
cli
inc
je
jne
jmp
mov
push
or
lea
call
add
sbb
or
fistl
popf
fdivrs
clc
jb
fists
shrl
mov
imul
sub
lock
jnp
adcb
mov
mov
test
pop
ficoml
je
pop
xor
bound
pushl
push
jne
rcll
int3
ret
sahf
gs
jb
pop
cmp
or
or
into
xchg
leave
jle
xor
ljmp
or
sub
icebp
push
add
jns
xchg
sub
sahf
pop
add
fsubr
adc
aas
shrb
xor
insl
sub
cmp
aad
push
sub
inc
sub
and
mov
mov
in
add
push
fstpl
sub
push
push
push
and
dec
push
or
cmp
fcomps
inc
loopne
fmuls
push
or
outsb
in
aaa
sbb
inc
jne
aas
or
and
es
ss
sbb
int
idiv
js
mov
push
push
icebp
mov
fiadds
es
js
loope
rolb
adc
bound
gs
mov
inc
adc
test
add
cmpsl
sahf
fs
adc
dec
or
ds
movsl
data16
add
jmp
cli
xchg
inc
aam
sbb
pop
jbe
jecxz
test
push
clc
add
xor
sbb
sbb
and
enter
enter
andl
loop
dec
push
es
xchg
sub
in
je
enter
in
jmp
add
repnz
lock
cmc
pop
ljmp
adc
loopne,pn
add
push
aaa
fdivs
and
xor
add
lods
mov
movsl
mov
jne
push
xchg
je
in
lahf
in
fnstcw
push
mov
aas
push
add
iret
add
or
add
cld
sbb
and
pushf
test
fisttpll
mov
into
push
add
and
aad
inc
in
in
push
sbb
xor
xchg
push
push
nop
and
dec
mov
nop
mov
xchg
xchg
imul
or
pop
sub
xorb
bound
mov
pop
push
pop
or
sbbb
and
pop
adc
imul
add
sub
ds
inc
cwtl
lea
iret
and
mov
aam
fcmovbe
leave
add
cmp
call
mov
stc
fisubrl
push
jle
xchg
pop
mov
sbb
jmp
and
test
out
fcompl
nop
cmpsb
pop
mov
shr
push
xor
inc
or
inc
xorl
lea
cltd
nop
lea
into
push
mov
or
push
scas
push
cwtl
xchg
xchg
or
mov
xor
enter
adc
adc
loopne
clc
inc
fsin
add
dec
sbb
mov
mov
add
add
popa
or
hlt
dec
push
hlt
imul
into
adc
scas
jbe
push
and
ret
int3
xchg
cwtl
cltd
sbb
nop
loopne
cli
dec
nop
sbb
cltd
jmp
enter
and
mov
rorb
pop
xchg
or
rclb
sbb
inc
push
stc
push
test
xor
sti
sub
das
xor
dec
addl
push
mov
sbbb
cmp
jle
xchg
cmpsl
rcrb
cmpsl
sar
jne
fsubrs
cmpsl
cld
lock
repnz
adc
loop
and
jl
push
xchg
mov
or
bound
xor
jae
sti
cmp
xchg
mov
clc
loope
adc
or
inc
jnp
popf
mov
jo
add
mov
adc
les
pusha
orb
xor
add
lds
fsubs
aam
jae
inc
stc
sbb
adc
xor
js
sbb
jl
cs
mov
out
sti
mov
inc
add
and
stos
or
and
mov
adc
scas
cmp
jmp
and
into
pop
add
lock
mov
jmp
nop
xchg
ss
jbe
push
jmp
sbb
sbb
jbe
push
jmp
mov
add
enter
ds
xchg
xor
ror
fcomps
or
push
add
dec
shll
or
push
dec
loop
add
lods
and
in
xchg
xorps
leave
and
lea
mov
push
stos
inc
inc
pusha
test
fs
loop
aad
data16
enter
cmp
inc
insb
pop
pop
outsl
nop
cmp
data16
mov
lea
push
add
sub
jne
dec
test
push
js
rcl
cmpb
call
movzwl
jge
cmp
mov
push
movsl
mov
or
je
inc
outsb
adc
nop
stos
sbb
mov
or
add
je
dec
orb
adc
outsl
sbb
jp
mov
sbb
cmp
call
ljmp
adc
push
movsb
push
mov
out
or
or
sbb
inc
sbb
push
adc
sub
and
mov
push
inc
and
jmp
outsb
sbb
cld
movl
test
and
adc
lea
dec
adcb
cld
daa
add
notb
jbe
pop
out
and
test
push
in
mov
pop
idivb
add
sbb
iret
das
mov
xchg
inc
and
pop
call
call
rolb
pop
xorl
xor
pop
cltd
or
inc
scas
adcl
roll
loope
loop
mov
mov
hlt
rclb
and
test
push
sbb
nop
imul
sub
xchg
scas
cmp
or
aas
ret
jne
testb
es
mov
bndldx
adc
testl
cmc
push
push
and
mov
imull
les
mov
jnp
rcll
in
push
push
cs
cmp
popf
js
or
pop
lds
rol
or
and
loop
jge
fbstp
or
cltd
push
add
inc
mov
adc
pop
add
xor
inc
xchg
insl
mov
mov
icebp
in
mov
inc
adc
adc
ds
sbb
push
and
push
imul
cmp
or
pop
ficompl
pop
jne
mov
cmpsl
outsl
sub
in
push
push
cmp
pop
mov
jmp
roll
pop
lea
sub
inc
sti
sbb
mov
cmp
add
add
or
xchg
es
pop
pop
mov
add
add
loop,pn
jo
or
dec
add
xchg
imul
cmp
or
mov
jno
adc
jno
xchg
in
mov
sbb
clc
inc
je
or
cmpsl
mov
jmp
mov
adc
in
adc
sbb
insl
mov
cmpsb
and
ss
xor
and
inc
mov
test
dec
add
and
mov
movl
add
add
push
jg
negb
mov
xor
shlb
out
dec
inc
sub
fwait
popa
mov
call
pop
mov
pusha
mov
lea
inc
cmp
mov
sbb
push
mov
mov
out
xchg
fs
lods
mov
or
mov
fs
data16
mov
les
outsb
add
cltd
mov
stc
arpl
cmp
jl
cmpl
push
adc
rorl
xchg
cwtl
lret
push
adc
icebp
fdivl
movsl
in
cmp
or
jo
adc
or
adc
jg
arpl
adc
sbb
dec
pop
or
inc
cmp
push
adc
cmc
adc
cmpw
clc
je
lahf
or
xor
pop
shrl
pop
or
shlb
mov
mov
pop
sub
add
sub
pop
inc
inc
mov
mov
cmp
adc
push
pop
inc
hlt
xorb
and
lret
imul
xchg
jge
adcl
adc
cwtl
mul
lret
mov
and
call
movsl
cmp
xor
mov
add
sub
je
pusha
mov
fbld
lea
repz
out
sbb
add
and
xorl
and
add
adc
int
addr16
mov
cmp
je
dec
inc
dec
and
add
add
and
es
push
xchg
pop
popl
and
jae
jb
or
or
xorl
adc
sub
or
xor
pop
sahf
push
loop
or
or
or
or
cwtl
push
push
and
leave
add
jg
dec
push
adc
pop
adc
imul
adc
adc
and
pop
adc
int
or
add
adc
jns
ret
adc
dec
jmp
cltd
adc
add
push
or
es
pop
pop
mov
sbb
sbb
movsb
cmp
sbb
int
or
add
sbb
popf
dec
sbb
out
add
je
sub
sbb
mov
sub
sbb
sbb
pusha
push
push
adc
je
inc
sbbl
mov
and
ret
sub
cmp
jae
add
addl
xchg
jmp
fistpl
push
xchg
inc
xchg
fs
push
in
jno
repnz
lcall
rol
lea
sbb
pop
rcl
in
in
xor
dec
shl
out
out
adc
out
jbe
leave
lret
out
sub
je
call
sub
jmp
dec
jmp
ja
orl
sahf
push
out
in
in
in
rorb
in
and
and
leave
add
out
out
adc
popf
dec
jge
mov
enter
pop
lock
adc
xor
repnz
pushf
inc
lcall
mov
repnz
hlt
push
pusha
int
add
cmc
cmc
and
pushf
dec
jg
notb
ret
leave
pop
negl
idivl
rorb
sahf
std
clc
clc
clc
dec
or
stc
dec
and
enter
cli
iret
out
rcrb
cld
inc
mov
je
cld
sub
and
ss
std
sbb
test
adc
add
test
xchg
mov
leave
lret
lea
ss
mov
rorl
rorb
push
adc
jecxz
roll
lea
dec
and
leave
fsub
in
push
and
adc
jnp
mov
out
jb
jmp
outsb
call
mov
push
sub
mov
and
enter
jmp
sub
add
xchg
inc
leave
mov
push
pop
sahf
push
js
out
out
out
ret
rorb
sub
cli
push
cli
nop
in
test
cmpsb
enter
dec
sar
cmp
nop
push
stc
stc
jns
popa
sub
adc
imul
dec
xor
add
stc
sub
pusha
xchg
lret
sti
sti
dec
add
popf
dec
mov
fnstenv
pusha
fcoms
pushf
cmp
lods
dec
xlat
dec
adc
add
nop
dec
pop
push
mov
or
nop
loop
outsb
icebp
mull
sub
divl
popa
leave
scas
idivl
mov
adc
and
out
out
dec
bound
sub
mull
testl
cmp
sub
testb
mov
out
out
cmp
imul
inc
imulb
in
jb
testb
mov
out
repnz
dec
pop
popa
cmp
dec
dec
xchg
cmc
jae
mov
cmpsl
mov
dec
cmc
div
popf
or
xor
rcrb
clc
clc
ret
add
hlt
stc
xor
dec
xchg
out
mov
xchg
inc
pop
cmp
xchg
push
jne
push
hlt
jbe
cmpsb
mov
das
data16
xchg
cltd
out
lods
xor
hlt
idivl
push
jo
test
sti
dec
xor
add
push
jle
xchg
inc
xchg
in
test
repz
jb
imul
scas
repz
push
imul
in
jns
adc
in
repz
and
sub
push
mov
bnd
and
repnz
cmpsb
mov
xchg
mov
xor
jp
sbb
add
inc
dec
popa
dec
push
loope
mov
icebp
cmp
jnp
jne
jns
xchg
icebp
jb
and
xchg
inc
push
icebp
push
aad
jns
sub
cmc
cmc
jb
jns
jp
icebp
jecxz
and
ret
cmp
mov
popf
lock
stc
xchg
cmp
push
jne
xchg
sbb
cmp
xor
scas
gs
ret
lock
adc
dec
popf
xchg
fldl
mov
jo
fcomps
push
sub
jae
ret
inc
inc
ds
pop
inc
pop
push
add
int
andl
dec
and
ret
add
mov
leave
mov
mov
pop
jbe
push
out
leave
push
testb
sahf
inc
and
jne
cmp
test
sub
mov
pop
insl
ret
mov
mov
lcall
sbb
sub
in
pop
inc
mov
ja
cltd
aas
cmpsb
imul
inc
call
pop
lcall
inc
mov
inc
lret
dec
das
cmp
int3
jae
lods
lds
xor
cmp
out
mov
cmp
jne
outsb
lock
pop
mov
push
add
stos
adc
xorb
pop
adc
cli
jb
push
dec
or
jnp
sar
jp
adc
sub
jae
dec
and
fucomip
lods
shlb
jl
mov
mov
cmp
adc
lock
xchg
mov
rorl
add
push
aaa
sub
fdivr
lods
neg
pop
sbb
pop
inc
pop
jae
xchg
ss
imul
clc
dec
push
push
mov
pop
push
pop
inc
lea
repz
clc
mov
pop
test
sub
hlt
ja
add
push
jne
push
aad
loopne
push
rorl
pop
sub
inc
incl
fadds
rcrl
or
pop
das
sbb
jbe
orl
mov
inc
inc
or
add
mov
lcall
scas
icebp
pop
stos
mov
out
and
add
xor
icebp
inc
push
dec
imul
cmp
insl
in
pop
or
xor
cmp
je
or
andb
push
or
ja
test
pop
push
push
clc
mov
cli
fs
cli
into
mov
mov
insl
cld
mov
jmp
pop
pop
xchg
or
push
js
cli
jge
adc
push
shrb
sarb
add
js
mov
jno
mov
loopne
bound
jge
mov
sbb
mov
push
hlt
je
jecxz
inc
rclb
ljmp
pop
in
popa
sbb
sbbb
frstor
push
jbe
pop
mov
aaa
jbe
cmp
adc
leave
sbb
cmp
loope
sbb
sbb
jmp
lahf
add
arpl
jecxz
inc
fsubrs
pop
cmp
and
movsb
orb
jne
mov
add
mull
test
push
rclb
sahf
mov
mov
push
mov
sahf
stos
inc
dec
add
push
adc
int3
loop
in
cs
pop
jg
mov
push
sbb
adc
pop
lods
jecxz
das
and
pop
xchg
xor
mov
mov
inc
int3
push
inc
dec
int
jp
inc
or
jle
cltd
sbb
mov
and
insb
jmp
push
adc
jo
add
adc
or
and
sub
adc
lods
popf
push
adc
xchg
dec
pop
push
pusha
scas
cld
mov
mov
mov
insl
test
sahf
in
inc
bound
and
pop
jo
fsubrp
sub
inc
mov
cld
dec
loop
rclb
cmp
ja
dec
add
add
and
rclb
jg
jge
sti
jg
frstor
inc
xchg
mov
cmp
ja
cmp
jbe
nop
push
insl
ss
pop
push
and
mov
push
insl
cwtl
scas
jae
add
or
jne
sub
jmp
cmp
es
or
jbe
inc
and
stos
aad
push
cmp
xor
jbe
adc
dec
add
mov
insb
push
mov
test
sarl
fucomp
test
mov
sbb
cwtl
lret
shrb
inc
rorl
in
inc
cmp
dec
push
xor
test
mov
sbbl
xchg
add
sti
andl
mov
mov
scas
fnstenv
add
das
lea
mov
cmp
inc
mov
lea
push
and
andl
pusha
sub
loopne
inc
xlat
push
add
into
fs
push
mov
add
int3
std
adc
push
movl
mov
daa
cmp
enter
jmp
cmpsb
add
cmc
inc
mov
test
jl
inc
out
xchg
inc
pop
xlat
push
lods
or
pop
out
mov
scas
int3
sbb
push
xor
dec
fstps
stc
cmp
jne
push
add
add
insb
xchg
jle
cmp
je
add
das
xor
xchg
cmp
jmp
jae
adc
sbb
insl
mov
sbb
push
mov
adc
je
imul
addb
in
push
pop
ljmp
jmp
mov
and
xchg
je
pop
pop
and
mov
add
or
inc
jle
setge
dec
dec
and
popa
sbb
adc
pop
shr
or
xchg
ja
mov
xchg
or
jno
mov
pusha
xor
test
fs
mov
bound
push
xor
orl
pop
cmc
dec
sahf
loopne
das
cmpl
addr16
loop
call
arpl
mov
jno
fs
jae
pop
mov
pop
dec
adc
fwait
sbb
add
sti
mov
or
lea
jns
pop
out
imulb
or
add
orl
notl
cmpsb
ds
or
pop
push
jmp
pop
sub
fcoml
or
add
or
push
pop
imul
cli
sub
push
cmpl
loop
call
mov
xor
cmp
jb
neg
sub
or
mov
sub
lock
mov
scas
rol
or
cmpsb
adc
and
jmp
stos
pop
or
jno
mov
or
xor
roll
int3
iret
mov
add
incl
mov
movsb
and
add
add
jbe
fbstp
ret
test
out
out
outsb
fildl
cmp
test
inc
test
fcmovu
adc
pop
je
int
inc
jmp
dec
mov
pop
ret
or
std
add
insl
outsl
or
test
testb
cs
mov
sbb
enter
xor
sbb
mov
or
xor
sar
iret
push
add
ret
adc
jne
lea
mov
mov
sub
add
les
mov
xor
out
fisubl
mov
je
jmp
xor
mov
mov
or
add
lahf
invd
jmp
std
and
xor
adc
outsb
enter
and
pushf
xor
push
jns
or
add
jmp
std
jmp
adc
xor
pushf
pop
sbb
mov
push
ljmp
xorl
loope
arpl
xchg
daa
test
fxch
into
push
movb
or
inc
mov
or
add
xor
adc
call
mov
add
xorb
push
push
cmp
lods
pop
jle
jl
js
stos
je
dec
jo
lods
in
insl
jb
and
js
push
and
or
or
orb
inc
jo
cmc
orl
mov
add
cmp
sbb
sbb
les
call
mov
pop
cmp
jae
xchg
mov
mov
sub
aaa
rorb
mov
enter
fnsave
rcll
rolb
int3
adc
mov
cmp
negb
jge
outsl
arpl
seto
xchg
ret
adc
push
mov
mov
pop
or
and
pusha
insb
mov
mov
mov
pop
std
movb
pop
jmp
jmp
sub
cld
std
add
xchg
mov
das
mov
mov
push
enter
jo
dec
cmp
add
test
add
push
mov
lods
xchg
jmp
mov
gs
mov
or
test
shlb
loop
pop
fisttpl
aad
mov
imul
sub
in
lret
fsubrl
arpl
movsl
fwait
ret
sub
and
adc
jecxz
mov
or
std
inc
ja
mov
sahf
add
cmp
call
cmp
and
xor
cli
mov
dec
jne
insb
add
push
mov
rol
mov
ret
xor
or
aad
int3
insl
fcom
xchg
pusha
lods
loope
int
mov
inc
xlat
pop
jl
push
int3
xor
inc
test
mov
outsb
scas
js
out
sub
lea
enter
in
outsl
ds
ja
mov
icebp
mov
mov
xacquire
sbb
test
call
xchg
push
fisubrs
sbb
sub
inc
push
popa
fnstcw
push
mov
rcll
adc
sub
aam
jmp
adc
or
sub
or
cwtl
add
negb
mov
lock
mov
test
jne
int
js
rcrb
je
adc
xchg
nop
jmp
mov
xor
pop
jmp
xorl
xchg
test
test
and
outsl
lods
popa
orb
daa
add
xchg
xchg
cwtl
fst
and
push
cmp
cli
pop
fadds
jl
jg
cmp
movsb
mov
icebp
lods
push
loope
mov
add
pop
aad
sub
push
loopne
mov
stos
adc
ljmp
ss
push
adc
sbb
or
and
pop
fisubrl
adc
and
rorl
sub
dec
push
jbe
stos
call
push
mov
mov
pop
inc
inc
cli
dec
mov
lret
adc
in
pop
clc
mov
adc
hlt
into
jnp
adc
jb
fwait
rcll
dec
push
push
mov
mov
jo
adc
hlt
push
dec
dec
sbb
adc
mov
or
sahf
aas
jge
mov
or
cmp
lods
fisttpl
push
mov
rclb
inc
inc
mov
je
inc
mov
jne
sub
das
ror
sarb
arpl
data16
sub
test
aam
xor
fnsave
fwait
mov
je
prefetch
hlt
adcb
and
lods
pusha
jmp
pop
pop
jae
adc
mov
sub
xor
out
push
jl
inc
mov
aam
xchg
xor
int3
lock
enter
loopne
test
mov
int
dec
lahf
pop
sub
xor
pop
pop
jecxz
cld
das
inc
sbb
push
daa
fmull
cmova
js
push
sub
inc
out
jae
xchg
addr16
call
cmp
inc
sar
adc
mov
mov
jbe
mov
inc
sub
popa
xor
fdivl
xlat
mov
sub
sar
pop
mov
push
adc
add
fmuls
jbe
mov
push
mov
fldt
inc
fdivrs
pop
add
pop
arpl
sub
cs
scas
pop
xor
jo
or
and
add
lock
iret
pop
dec
jg
ja
cmp
int
cmpb
out
mov
insl
adc
mov
push
test
sub
lea
emms
and
rclb
jle
mov
mov
push
add
mov
repz
cmp
jl
addl
mov
aam
cmp
mov
mov
shll
test
rclb
cmp
jns
or
and
pop
popa
cmp
jbe
fsubs
lds
adc
mov
cmp
lcall
pop
cwtl
and
push
dec
jl
cmp
out
sbb
outsl
andl
subl
sbb
jb
outsb
xlat
shrb
je
int
or
clc
insb
sub
pop
jmp
sbb
mov
int
and
lret
rcrl
loopne
jnp
or
jecxz
bound
pop
inc
jmp
jle
fistpll
jmp
xor
cmp
or
mov
lock
sub
mov
bound
push
push
sub
mov
push
mov
loop
insb
cmp
dec
ss
cmc
cmpsb
xor
jl
push
cmp
pop
push
push
dec
push
sub
sub
sbb
mov
dec
pop
push
bound
std
xchg
cli
in
xchg
jo
mov
outsl
test
outsb
rclb
jns
pop
xchg
cs
pop
insb
jbe
ret
or
sub
add
adc
adc
daa
int3
jbe
ret
and
push
push
adc
das
push
push
sbb
imulb
es
xor
sub
add
push
daa
ljmp
or
int
push
fsts
shrb
sub
fisubrl
fisttpl
cmc
call
mulps
stos
xor
add
out
pop
das
lret
xchg
add
sbb
adc
push
mov
push
cmpsl
add
adc
inc
sub
iret
xor
add
test
mov
outsb
imul
xor
xchg
bound
clc
mov
lods
subl
pop
inc
mov
pop
inc
xchg
lods
sub
clc
out
xlat
sahf
mov
pop
je
mov
inc
mov
or
into
mov
lods
nop
adcb
or
push
mov
mov
repnz
cmpw
insl
loopne
sub
jp
pop
or
jl
and
data16
sbb
jb
dec
push
push
or
jnp
pop
adc
mov
sbb
jecxz
adc
mov
jno
orb
stc
scas
iret
pop
pop
fnsave
cmp
je
cwtl
push
lret
push
jmp
cmpsl
and
or
dec
or
push
push
addl
cmpl
test
inc
add
add
ja
aaa
xlat
ds
daa
nop
jae
mov
or
filds
hlt
leave
inc
or
pop
shlb
adc
adc
sti
mov
ficomps
in
pop
mov
shlb
adc
sbb
push
inc
pop
pop
sti
insl
add
dec
and
push
sub
lcall
fisubrl
js
push
pop
push
es
jmp
nop
jne
mov
ret
imul
push
dec
sub
mov
push
mov
scas
leave
imul
push
insl
stos
ret
xchg
loopne
insl
scas
mov
arpl
sub
xlat
dec
or
mov
xor
sbb
in
xor
mov
shlb
aad
ja
roll
fimuls
push
sti
roll
pop
fs
loopne
fnclex
orl
fadd
push
add
fisttpl
out
insb
add
rcrl
xor
sahf
xchg
clc
mov
scas
mov
ret
jmp
mov
push
cli
pop
pop
rcll
adc
nop
xchg
adcb
loope
mov
sub
add
cmp
jbe
ljmp
add
cmpsb
outsb
adcl
and
pop
pop
loopne
aam
xor
dec
jecxz
test
inc
adc
or
push
std
jb
rep
jmp
imul
add
sbb
and
add
sbb
pop
js
lea
push
nop
add
std
aaa
mov
and
sbb
mov
fdivs
push
or
pop
sub
sub
int3
add
and
add
iret
jbe
and
cmpsb
jmp
add
inc
cmp
mov
and
mov
mov
lcall
in
lock
rclb
add
insb
xor
testl
mov
inc
hlt
nop
mov
ss
adc
and
sub
mov
test
jb
cld
ja
add
fldcw
mov
dec
push
rorl
sub
mov
or
cmp
stc
fstpl
add
outsl
push
out
add
add
in
add
add
je
stos
out
sub
mov
daa
and
sub
push
mov
push
mov
outsb
xorl
imul
imul
cmpsb
imul
out
xor
add
adc
sbb
cmp
ret
scas
mov
mov
xchg
ret
adc
cld
fisubrs
xchg
push
stc
test
sub
inc
insb
aam
movsl
fdiv
jle
dec
and
imul
adc
pop
mov
insb
xor
add
loopne
out
stc
fcoml
sarb
int3
data16
popf
enter
cmp
mov
in
push
inc
xor
jle
fwait
imul
sbb
xchg
lcall
lods
pop
add
rol
xchg
stos
adc
or
pop
mov
inc
mov
mov
lret
cmp
or
ja
sub
pop
push
lea
xor
xor
mov
push
push
add
loopne
jp
pusha
loope
rcll
push
add
dec
fcmovnu
fsubrs
sub
in
pop
adc
push
shll
jae
xchg
fwait
or
outsb
or
pop
cmpsl
and
stos
mov
or
pop
out
fsubl
cld
or
cs
inc
ja
add
cmp
rolb
push
test
bound
stos
add
cld
das
mov
and
adc
or
jae
mov
push
xchg
xor
xchg
inc
xchg
shr
lds
imul
jecxz
ret
pop
mov
mov
or
cmp
outsb
les
and
pop
cmp
push
insb
push
mov
adc
add
ret
jne
in
mov
test
ret
inc
add
mov
inc
out
aas
pop
push
sub
pop
add
push
out
mov
xchg
mov
sbb
jle
mov
stos
inc
xor
lds
or
or
shl
test
mov
add
or
aaa
xor
push
add
testb
je
fs
mov
mov
add
test
add
push
xchg
movsb
dec
aad
mov
cmp
cmc
cmp
jnp
mov
mov
clc
adc
jle
or
mov
jl
repnz
mov
sbb
jg
dec
jg
movsbl
fmuls
jmp
add
add
mov
jne
je
push
jle
cmp
jl
fildl
cmp
loopne
dec
in
aas
sbb
cmc
enter
sti
mov
adc
push
push
pop
pushl
push
dec
jmp
data16
push
mov
adc
sbb
xchg
inc
jno
pop
xor
in
jne
dec
dec
sub
mov
pop
popa
jecxz
add
rorl
cmpl
xor
adc
add
pop
and
and
add
push
mov
rorb
sub
add
ds
clc
sub
mov
cmp
or
mov
icebp
add
jno
push
pushf
mov
test
cmp
setne
in
sbb
xchg
in
mov
sub
fbstp
shll
or
add
add
lods
mov
or
adc
sbbb
aas
add
jle
cmpsl
sbb
cmc
not
add
lea
fstpt
xor
lcall
xchg
sbb
xor
add
test
or
sub
fsubr
add
fidivs
xor
add
mov
bswap
sti
lret
ret
dec
loop
das
fs
xchg
fisttps
out
or
xor
orb
shrl
inc
or
in
sub
add
mov
mov
push
xchg
cld
cli
mov
mov
les
into
add
icebp
fcomp
mov
fstps
sbb
jnp
mov
adc
push
adc
fmull
and
push
push
popa
loop
xchg
mov
outsl
mov
pushf
adc
mov
out
cmp
pushf
cmpl
jne
mov
cmp
add
lock
add
cmp
lret
jbe
adcl
rolb
mov
jno
and
cmp
insb
ljmp
je
dec
push
adc
out
inc
leave
mov
cld
push
sahf
pop
fildl
ror
jmp
repz
jle
jle
cmp
jno
cmp
and
push
sahf
loopne
pop
jne
push
sbb
pop
icebp
mov
dec
adc
sbb
push
testb
xor
mov
jnp
fisttpl
test
cmp
insl
xchg
int
or
or
test
adc
inc
js
cmp
dec
push
test
cld
jbe
mov
outsb
in
rcrb
and
repnz
adc
sbb
popa
loope
inc
sbb
dec
or
or
arpl
inc
cmp
mov
pop
je
inc
cmpb
ja
jge
pop
lock
jg
add
test
das
aad
jl
or
pushf
cmp
push
cmp
sbbb
inc
and
mov
jmp
aaa
add
push
in
sbb
mov
push
sarb
inc
pop
add
pop
jmp
inc
mov
xchg
mov
leave
mov
test
stos
add
sbbb
and
pop
adc
cld
xor
pop
fs
mov
icebp
fisttps
pop
dec
jne
push
lea
cmp
in
push
test
sbb
or
sahf
inc
cltd
dec
shrb
sbb
inc
push
mov
jbe
jge
xchg
jne
push
cmpsb
dec
rcll
and
pushl
out
mov
push
clc
fs
ret
mov
and
in
inc
jae
sub
pop
leave
jno
pop
hlt
cmp
mov
inc
mov
push
outsl
adc
sbb
cmpb
lea
fidivrl
dec
pop
cmp
je
cs
and
addb
cmp
in
adc
int
lods
loopne
adc
sub
inc
inc
inc
pop
clc
test
lods
lret
add
push
mov
cmp
push
jae
push
cmp
jl
fstpt
iret
mov
add
inc
dec
hlt
cli
push
or
jne
lea
testb
add
addr16
add
sbbl
inc
addr16
pop
hlt
sbbb
pop
jg
test
pop
pop
mov
cmp
push
cmp
dec
add
incl
jl
enter
jge
pop
mov
mov
mov
mov
pop
mov
pop
sbb
adc
daa
incl
and
cmp
xchg
jo
adc
imul
or
xor
mov
sub
es
insl
cmpb
sub
int
or
jl
or
ret
and
test
jb
pop
js
pop
add
sbb
inc
dec
add
adc
sbb
mov
adc
push
rolb
mov
pop
rolb
hlt
xlat
xor
aam
xor
les
mov
daa
jecxz
mov
jle
add
jbe
mov
xchg
rcrl
cmp
jae
shll
outsb
lret
popl
popf
add
inc
ljmp
push
das
roll
adc
inc
xor
add
nop
push
in
lods
sub
sbb
add
and
js
test
call
or
cld
gs
hlt
cmpsb
sbb
jo
xor
imul
xchg
or
push
add
push
aad
jge
or
sub
fistpl
in
mov
and
sti
pop
decb
sbbb
push
inc
nop
les
lods
add
sub
popf
and
jnp
cmc
shrb
and
sbb
inc
loop
int
or
clc
mov
dec
lret
fs
mov
sub
add
dec
ja
and
push
xor
addr16
and
fiadds
scas
adc
lock
xor
adc
xlat
je
cmp
adc
pop
sar
and
cmp
jb
testb
and
testb
sbb
data16
push
mov
mov
jecxz
fstl
cwtl
imul
and
into
mov
cmp
call
fistpll
sub
pop
adc
daa
push
sub
or
cmp
push
negl
push
subb
shl
jmp
pop
sbb
js
sbb
and
sub
mov
jnp
and
inc
lock
push
sbb
push
sub
add
mov
sbb
rcrb
sahf
sahf
xchg
push
pushf
rorl
cs
or
pop
lods
jo
push
idivb
add
add
enter
push
pop
push
int
mov
sbb
mov
jns
js
and
cltd
sbbl
push
pop
stc
push
jne
addb
jb
in
push
jg
pop
inc
dec
mov
or
in
and
inc
es
inc
pop
pop
or
mov
daa
or
call
mov
mov
paddb
jo
xchg
dec
cmpb
or
dec
cmp
mov
xor
das
jg
xchg
and
sub
insl
sub
inc
insb
pusha
movsl
fistpl
xor
xor
out
sahf
stos
pop
lcall
lds
test
or
popa
sub
mov
cmp
cld
add
xor
shlb
or
inc
pop
pop
adc
addr16
adc
and
cmpb
add
clc
leave
inc
and
inc
es
jne
sub
fs
es
inc
in
jo
es
pop
cmp
adcl
ljmp
enter
sub
movsl
sub
insb
xchg
pusha
adc
insb
and
testl
cmp
jge
mov
inc
stos
cmp
hlt
ss
and
xchg
xchg
je
xchg
jne
dec
dec
mov
sahf
push
or
cmpsb
add
adc
hlt
and
jg
push
or
lds
test
push
out
test
adc
ja
pop
sti
xor
clc
push
imul
push
cmp
cmp
dec
je
loopne
fdivs
pop
sbb
cmp
mov
adc
mov
sub
jl
and
aad
pop
jge
inc
or
cmp
sub
mov
cmp
mov
add
insb
xchg
adc
pop
jbe
imul
mov
subb
adc
fs
jg
push
dec
mov
test
xor
push
xchg
mov
sub
adc
js
push
adc
shrb
jecxz
pusha
xchg
xchg
or
add
addr16
dec
subb
dec
mov
cmp
cmp
xor
out
testb
mov
fcoms
jle
in
mov
adc
int
fstpl
cs
aam
daa
cmp
mov
add
inc
mov
dec
inc
xchg
and
test
xchg
add
gs
inc
test
nop
gs
test
out
test
cmp
sbb
xchg
add
dec
xchg
xchg
xchg
xchg
pop
sahf
and
xchg
xchg
mov
packuswb
test
jne
ret
dec
add
and
mov
adc
dec
lret
aaa
int3
push
mov
test
insl
xchg
mov
dec
inc
cmp
add
and
jnp
cmp
inc
repnz
xchg
shll
xchg
or
inc
jne
jle
jl
jae
mov
pop
notl
lods
fstpt
or
pop
orb
lea
pop
sbb
clc
dec
cmp
sahf
add
lods
lock
adc
pop
jge
dec
jne
xor
jns
outsl
insb
lods
lods
aad
add
test
push
cli
add
add
add
insb
add
or
scas
push
cmc
inc
aam
push
mov
dec
and
stos
jnp
call
and
or
push
or
inc
pusha
push
dec
outsb
pop
mov
ds
jmp
mov
pusha
adc
clc
movsl
add
inc
or
lret
je
cmpl
ljmp
dec
push
mov
fwait
xchg
lahf
inc
inc
cmpl
pop
lock
sub
push
data16
mov
sbb
jg
sbb
add
test
sub
mov
adc
cmpsb
ds
test
mov
add
inc
inc
inc
inc
clc
aam
fcoml
popa
inc
inc
fmul
cwtl
mov
cmp
mov
movaps
mov
mov
xchg
in
mov
insl
cmp
je
fldcw
leave
stc
mov
add
push
pop
mov
orl
out
out
push
mov
and
jl
mov
data16
ja
inc
ret
and
jo
int
sub
ja
nop
jb
mov
push
sar
pop
fbld
stos
pop
imull
sub
std
mov
cmp
les
test
push
jbe
mov
gs
dec
add
je
add
pop
or
sub
je
or
push
push
dec
das
or
or
in
add
mov
enter
test
leave
sub
xchg
imul
test
jge
adc
mov
into
xor
xchg
lret
or
mov
jb
flds
pop
es
popf
sbbl
or
cmp
hlt
cld
inc
jns
mov
push
sbb
xor
pop
inc
aam
pop
mov
insb
sbb
sub
sbb
push
lret
xorl
add
xchg
xchg
and
xor
mov
popf
movsl
in
jmp
enter
cmp
nop
or
pop
pushf
sub
lret
outsl
cmc
jne
js
int3
jb
loope
xlat
cmp
adc
mov
add
out
shrb
mov
adc
gs
das
add
push
push
xlat
mov
je
sbb
je
pop
add
xchg
or
movb
or
inc
pop
cmp
insb
cld
add
cmp
icebp
lock
aas
jecxz
cmp
push
cmp
das
roll
loop
cmp
mov
sbb
popa
and
subl
and
and
xlat
jbe
add
or
outsb
arpl
test
mov
xor
popa
iret
cmc
sub
int3
inc
incb
inc
inc
mov
cmp
jl
xchg
adc
mov
into
adc
rolb
testb
jb
xlat
lret
fwait
repz
push
jl
mov
lcall
je
mov
adc
push
movb
mov
pop
or
cmc
movsl
mov
adc
mov
addr16
add
and
mov
in
lea
jb
cmp
push
test
or
xor
jg
sahf
add
cltd
sub
sbb
into
ret
subb
or
inc
mov
inc
aaa
jo
add
add
lock
addr16
jmp
and
je
test
sbb
subb
ds
fs
pop
sub
pop
mov
mov
aam
add
xor
leave
leavew
dec
orb
or
js
cli
mov
icebp
sti
push
std
push
subb
addr16
cli
push
loope
dec
jne
pop
addr16
xchg
jecxz
arpl
jmp
cmp
jle
xorl
jle
jg
pop
adc
push
daa
mov
xor
daa
xor
mov
js
or
ds
outsl
jnp
or
xchg
sbb
or
jp
mov
in
ret
fsub
xchg
daa
adc
sbb
mov
pop
inc
jp
and
dec
nop
mov
push
push
das
int3
xor
divb
sbb
and
rolb
int3
ss
aam
inc
rcll
xchg
lret
fdivrs
mov
mov
push
data16
mull
decl
cmp
add
and
add
pop
js
cltd
adc
push
xor
or
and
rcr
sub
out
jns
xchg
push
dec
add
inc
pop
dec
cmp
dec
out
je
or
je
fimuls
sbb
push
jmp
ja
cltd
jmp
les
add
sub
push
sbb
mov
jl
jae
neg
adc
fdivs
fdivs
scas
fimull
popa
cmp
pop
jge
and
pop
es
adc
or
jne
and
sub
or
mov
or
out
add
je
mov
insl
mov
push
push
dec
neg
add
mov
test
ret
nop
inc
clc
jl
add
push
dec
jmp
loopne
decb
scas
dec
sub
inc
sahf
jne
pop
daa
dec
push
lahf
je
mov
mov
std
into
cmpb
je
push
add
in
in
pop
lock
mov
lock
dec
adc
add
inc
inc
inc
popf
repz
sar
rcr
pushaw
std
les
xchg
jge
sub
cltd
cli
push
jmp
adc
sub
push
test
dec
inc
nop
outsl
inc
and
pop
fsubrl
aam
int3
sub
sub
inc
mov
jecxz
loopne
pop
xor
push
xchg
into
push
and
outsb
sbb
push
pop
jne
js
mov
or
mov
inc
push
cmp
daa
inc
lea
jne
sarb
sbb
push
call
jbe
pushf
push
push
sbb
mov
xchg
pushf
test
xchg
fiadds
mov
cmpsb
daa
sub
add
adc
sbb
mov
clc
jl
cmp
add
cmpl
jp
push
insb
pop
or
movl
ss
xor
imulb
imul
lahf
mov
xlat
push
add
into
inc
add
dec
and
insl
adcb
push
mov
sub
mov
je
adc
sbb
inc
shrb
push
js
je
out
pushf
push
pop
hlt
xchg
pop
mov
inc
mov
out
test
and
push
loopne
adc
sub
movl
inc
out
or
pop
add
adc
ljmp
arpl
mov
mov
call
lods
in
test
leave
jae
test
adc
popf
xor
jb
sarb
cmp
insb
push
xor
push
jmp
nop
xchg
loopne
scas
dec
mov
flds
xchg
in
je
add
cmp
and
ljmp
enter
mov
rorb
mov
scas
add
lock
pop
or
mov
int3
push
xor
or
inc
mov
frstor
xchg
mov
loopne
repz
xor
je
inc
pusha
adc
xchg
mov
sub
pop
push
adc
add
dec
pop
adc
or
xchg
mov
add
push
shlb
and
jb
pop
leave
mov
sub
dec
pop
or
rcl
rolb
inc
jb
inc
pushf
outsl
aas
add
xchg
mov
adc
cli
add
pop
or
pop
pop
or
jg
add
lret
ljmp
pushf
in
cwtd
adc
or
leave
and
push
jmp
pushf
mov
les
push
add
pushl
lcall
ret
out
in
shll
lea
cmp
cltd
mov
call
and
pop
sahf
xchg
test
ret
call
insb
add
ret
jb
xor
enter
and
xor
enter
cmp
in
pop
sahf
jge
jg
enter
jg
fmulp
mov
sbb
insl
and
inc
ljmp
repnz
incl
jns
mov
mul
aam
sbb
push
cld
inc
mov
dec
stc
xchg
sub
mov
xchg
call
mov
push
in
in
imul
mov
repnz
aam
push
lods
enter
in
cmp
xor
lods
rclb
cltd
add
call
in
pop
enter
ret
and
rol
leave
sbbb
rorb
insb
xchg
dec
in
nop
and
cmpsb
dec
cs
xchg
dec
push
mov
mov
inc
xor
mov
ja
pop
dec
add
xlat
cmp
outsl
mov
cmc
shrb
xchg
cmpsb
mov
add
sbb
insb
sbb
mov
add
mov
imul
lods
or
jge
push
repnz
pop
mov
adc
xor
add
call
or
adc
or
movsl
dec
dec
or
adc
fisttps
dec
stos
push
inc
or
pop
les
or
xor
std
sbb
and
inc
push
inc
sbb
jae
and
leave
jmp
sbb
jns
mov
sarb
push
push
es
popa
inc
lock
dec
mov
push
and
test
or
and
adc
mov
mov
ficomps
std
wbinvd
add
inc
xor
ds
aad
les
jge
add
pop
jmp
aad
ja
dec
xchg
nop
or
adc
cld
cmp
repz
pusha
jo
mov
decb
adc
push
add
into
adc
sub
sbb
push
fidivrl
incl
hlt
cmp
lcall
inc
mov
add
or
lret
inc
lock
out
fidivs
jge
xor
rep
sbb
cs
lahf
mov
mov
lock
add
xchg
rclb
aam
xor
push
mov
dec
or
mov
lods
sbb
mov
je
aam
jne
mov
negb
xor
cmp
sbb
nop
mov
jbe
mov
mov
add
mov
push
pushf
pop
cli
cwtl
and
push
popf
pushf
fldt
pop
sub
je
push
popf
aaa
mov
in
aam
divl
adc
clc
pop
notl
mov
push
mov
xchg
pop
mov
inc
imul
jo
out
or
inc
lcall
xor
mov
fadd
loopne
mov
divl
rcrb
test
or
fldt
jge
or
sub
shl
push
or
lea
fucomi
divl
lret
icebp
stc
adcl
shl
in
xor
or
loope
mov
mov
je
add
add
pop
xchg
mov
test
cmp
sti
jns
aaa
dec
mov
pop
adc
xchg
pop
or
imul
dec
in
ds
cld
sub
lods
and
mov
dec
js
cmp
mov
adc
or
adc
adc
test
lret
inc
sbb
jge
stos
mov
or
jle
jg
insb
add
ret
loope
or
lea
stos
add
inc
or
into
mov
decl
inc
dec
jne
lea
adc
push
adc
add
es
andb
pusha
mov
clc
push
sti
mov
in
cmp
pop
aad
repz
mov
cmp
or
lea
inc
sarl
push
sub
fsts
shrb
inc
and
add
mov
inc
sub
fistpl
push
jns
add
stc
sub
mov
mov
into
and
es
xor
jmp
popf
cmp
stos
fcmovb
andb
mov
aad
mov
push
orb
mov
add
loope
cmp
dec
mov
outsl
in
movb
inc
ja
scas
xor
mov
leave
sub
mov
testl
cmp
ja
gs
roll
ret
jae
ljmp
adc
sub
iret
jb
or
or
rolb
mov
addl
inc
cmpl
mov
out
xor
enter
loopne
aad
and
cmp
xor
sbb
jb
insb
push
mov
xorl
mov
pop
mov
cmpsl
sbb
mov
daa
inc
and
inc
xchg
add
fcmovu
jno
gs
sbb
push
jge
ret
add
ds
andl
jmp
and
fildl
std
jne
fs
push
cld
add
inc
add
jmp
cmp
int3
cmc
je
clc
sub
cmp
bound
popa
mov
lahf
loopne
and
popa
jmp
aaa
imull
mov
lea
dec
shlb
lock
or
and
or
ss
bound
scas
insb
call
xchg
int3
xor
addr16
adc
movsb
add
sub
rolb
cli
das
xor
or
push
call
jge
adc
jne
mov
test
insl
and
and
ljmp
leave
xor
adc
lea
pop
subb
ds
lock
mov
cmp
clc
jbe
ret
movsl
add
inc
inc
clc
jne
mov
inc
mov
and
sub
add
fdivrp
inc
and
push
mov
ja
lea
mov
inc
mov
xor
inc
dec
xchg
mov
and
rcrb
mov
mov
shll
mov
sahf
xor
inc
push
mov
xor
dec
add
stc
and
xorb
push
xchg
adc
jmp
cmp
jecxz
repnz
xor
mov
adc
mov
decl
xlat
fsubl
and
out
mov
out
out
hlt
sub
sub
push
and
add
hlt
dec
scas
test
adc
adc
mov
sti
repz
and
cmp
mov
loopne
rolb
aad
xchg
dec
inc
push
dec
adc
push
mov
push
in
mov
or
icebp
xlat
std
jo
add
ljmp
nop
lret
xchg
cltd
loope
sahf
in
pushf
pop
or
loope
push
inc
clc
add
jo
mov
inc
gs
push
nop
push
call
arpl
dec
sbb
mov
test
jmp
add
pop
movsb
lret
test
mov
mov
and
cmc
xlat
mov
stos
out
xor
jmp
andl
addr16
push
xor
add
or
or
mov
adc
xlat
sti
mov
mov
inc
hlt
fistl
outsl
xor
mov
rcrb
pop
or
mov
mov
add
push
ss
sti
inc
and
or
cmp
shrl
rolb
sub
mov
movsb
pop
jbe
sub
adc
or
add
pop
mov
div
les
inc
popa
mov
sub
insl
pushl
jae
push
popa
imul
ja
push
sub
xor
or
sbb
pop
and
mov
mov
es
dec
xor
ret
mov
cmp
push
or
mov
fs
cmp
lea
jnp
cli
mov
or
sbb
lds
imul
mov
adc
pop
push
mov
lcall
subb
xor
mov
sub
cmp
sbb
add
iret
pusha
pop
repnz
sbbb
or
cmp
imul
lock
and
mov
jo
jo
ja
cs
insb
mov
shrl
test
adc
fimuls
sbb
or
xchg
fs
adc
sub
and
icebp
dec
int3
jne
push
push
and
fs
mov
je
cmp
add
adc
stc
test
dec
dec
int3
add
cmp
jle
pop
push
cmp
sub
lret
jne
pop
push
testb
cmp
lods
xor
das
inc
push
sbb
cmpsb
movsb
adc
int3
or
dec
and
push
stos
and
lds
or
push
cmpsb
jge
orb
adc
and
inc
jle
push
push
add
negl
aaa
lea
mov
dec
adc
jo
lcall
fwait
ja
push
push
add
pop
adc
and
sbb
xor
hlt
push
adc
mov
xor
inc
rclb
jecxz
je
push
xor
and
xchg
xchg
test
pmuludq
fnstcw
or
je
dec
sbb
and
ss
or
rol
pushl
mov
icebp
cmp
push
pusha
fwait
cmp
hlt
cmp
je
movl
jne
and
push
sub
pop
mov
lods
push
arpl
outsl
jbe
mov
mov
jne
push
jmp
mov
shll
inc
mov
nop
mov
pop
cmp
push
mov
sbb
mov
sbb
xor
sbb
roll
cli
in
divb
aaa
cmp
fildl
adc
mov
adc
mov
rcll
sbb
push
push
in
dec
xlat
fmull
bnd
push
repnz
or
loopne
cmp
adc
ffree
pop
jne
adc
xbegin
xchg
in
mov
or
push
in
inc
jno
mov
out
mov
test
lods
mov
pop
or
mov
ficomps
mulb
sub
and
lcall
bound
cmp
inc
sbb
xchg
adc
lea
lcall
movsb
pop
xchg
add
or
mov
push
mov
add
pop
nop
ljmp
adc
xchg
bound
inc
es
or
aaa
lcall
sbb
mov
add
add
add
out
or
pop
adcb
mov
xchg
jg
clc
mov
movb
mov
cmp
movb
jo
cmpsl
ljmp
add
out
cmp
nop
sub
xor
inc
pushf
adc
sub
jb
test
jb
fwait
jae
outsl
cltd
xchg
shrb
cmp
xchg
jo
shlb
or
inc
pushf
sbb
mov
push
sub
add
aad
xchg
jle
jo
je
xchg
aad
jns
push
sbb
pushl
push
bound
jnp
push
adc
cmp
jl
pop
pushl
out
das
fmul
sbb
pop
or
adc
and
add
jo
or
cmpl
lods
in
or
mov
push
ficompl
push
add
cwtl
or
mov
cmc
and
shlb
and
add
sbb
push
int3
adc
adc
rcll
add
je
dec
adc
aaa
vxorps
aas
mov
nop
jl
sub
xchg
mov
jne
push
pop
out
sahf
or
cwtl
push
pushl
sbb
or
andl
loop
jbe
jge
xor
insb
jno
arpl
mov
xor
cmp
pusha
push
mov
outsb
push
push
shlb
adc
push
push
add
adc
das
jne
or
or
stos
add
sub
gs
ffreep
or
xchg
xchg
dec
mov
cmp
fcmove
or
pop
xchg
adc
add
push
add
or
loop
fisubrs
adc
enter
call
or
bound
ljmp
jb
adc
dec
xor
aas
add
cld
shr
hlt
loopne
jl
imul
add
mov
fistpl
inc
sub
xor
mov
faddl
inc
jo
push
ja
mov
or
ret
sar
dec
cmp
jbe
push
in
add
pop
push
inc
mov
sub
jae
mov
shr
lea
not
and
decb
jne
andb
jmp
dec
loopne
pushf
mov
fstpl
pop
add
push
cmpsb
pop
add
add
pop
adc
pop
add
push
or
mov
jne
sbb
xchg
mov
jecxz
push
stos
fucomi
or
movups
sti
add
mov
insl
sbb
jl
pop
cmp
inc
fiadds
sub
fwait
xor
cmp
mov
pop
jno
jno
mov
sti
pop
mov
shr
not
and
das
lock
popa
jne
xchg
xor
dec
loopne
mov
lods
sbb
aas
inc
in
add
scas
dec
testb
pop
cmpsb
stos
xchg
or
jmp
andl
pop
push
les
sbbb
lea
mov
and
pop
addr16
add
loopne
ret
pusha
mov
dec
paddd
mov
inc
and
dec
outsl
call
fistl
or
sbbb
mov
sub
push
and
arpl
mov
or
cli
lods
push
inc
xor
mov
or
sub
repz
mov
cmp
jecxz
sub
movsl
test
sub
jp
pop
loop
dec
or
outsl
push
aaa
pop
xor
push
sub
or
push
adcb
popa
fbld
andl
inc
or
and
cmpb
xchg
adc
int3
gs
popf
push
mov
fidivl
pop
adc
adc
pushf
mov
adc
out
sub
cmp
in
xchg
dec
adc
popf
cmp
cmpl
sub
add
sub
insl
or
shll
pop
mov
fs
push
pusha
jmp
lock
xor
add
pusha
sub
out
xchg
mov
addl
adc
sub
inc
xchg
or
fildl
cmp
stos
and
jne
mov
mov
cmp
inc
stos
std
shr
fwait
orl
fcmovbe
loopne
cld
ljmp
inc
adcl
or
lahf
mov
lods
aad
les
sahf
jno
in
hlt
dec
rcrb
add
inc
mov
rcr
jno
lds
mov
add
sub
dec
cld
test
xlat
mov
movsl
sti
inc
mov
std
mov
mov
jo
push
lods
or
das
sub
ja
arpl
outsl
icebp
inc
jmp
dec
mov
testl
push
mov
pop
out
idivl
cld
lock
push
add
sub
or
xchg
dec
jne
mov
cmc
pop
mov
jp
mov
jl
xchg
inc
fs
inc
add
fdivr
mov
mov
clc
test
stos
mov
add
outsl
mov
or
bound
data16
in
or
ja
xchg
data16
xlat
sub
and
pop
rcll
shr
mov
dec
cld
xor
icebp
in
outsb
pusha
fisttpl
pop
adc
into
jle
inc
inc
push
je
inc
fnstenv
rcrb
cmp
stc
add
pop
pop
mov
push
pop
or
mov
sub
stc
sbb
sti
leave
xor
pop
add
sbb
nop
je
jecxz
dec
or
mov
mov
or
add
add
mov
or
xor
mov
out
and
mov
inc
pop
mov
mov
pop
xchg
lods
lods
add
dec
pop
in
xchg
gs
push
pop
adc
or
sbb
iret
je
pop
imul
jmp
sbb
and
push
out
or
mov
mov
frndint
fists
cmp
adc
ds
push
outsl
mov
inc
lret
outsl
js
mov
dec
ss
xor
test
cmp
sar
pop
test
rcl
sbbb
xchg
or
push
dec
jo
fwait
addr16
je
outsl
push
add
enter
push
insb
fisttpl
cmp
insl
outsl
ja
ja
dec
xlat
or
mov
mov
hlt
rolb
fstpt
pop
out
push
xchg
push
push
repnz
clts
decb
into
mov
out
cmp
setns
and
pop
sbb
push
dec
je
mov
sbb
aaa
xor
dec
loopne
push
ss
mov
clc
rcll
loope
arpl
push
dec
orl
or
imul
das
pop
dec
mov
enter
idiv
in
vmovhpd
cmp
adc
decb
xlat
jne
add
add
add
jg
pop
and
or
dec
outsl
fnstenv
jmp
jnp
add
lock
or
xor
mov
add
fcoms
ret
pusha
test
add
push
adc
mov
mov
cmp
in
inc
mov
scas
frstor
mov
jb
adc
or
loop
and
popl
jne
jno
dec
pop
mov
loopne
cmp
push
pop
dec
scas
aaa
stc
add
out
stc
dec
int
je
inc
fs
jp
jbe
or
pop
aaa
leave
inc
test
and
sbb
cld
or
div
push
out
inc
inc
lds
enter
dec
add
dec
lea
cmpsl
movsl
jge
iret
sub
jae
out
and
mov
xchg
pcmpeqw
xor
fwait
pop
in
clc
and
jmp
cmp
mov
into
in
xor
and
and
xchg
gs
or
jns
loope
ficompl
jg
insl
cmpsl
fsts
add
adcl
mov
and
mov
out
or
movsb
cld
or
pop
inc
divl
or
xlat
and
in
push
mov
dec
sbb
hlt
adc
jne
add
xlat
adc
mov
inc
push
lea
ds
or
dec
mov
jnp
inc
sub
arpl
jno
cmp
or
addl
test
mov
cmp
inc
add
xorl
ficomps
shlb
add
lods
nop
cwtl
mov
jne
call
add
xlat
int
and
rorb
push
in
dec
push
shlb
jge
dec
rcr
jg
int3
les
lcall
pop
lds
movsl
add
push
inc
jp
out
mov
loopne
lds
nop
enter
das
and
or
in
xor
test
push
jo
je
jo
int
loopne
or
in
ljmp
inc
push
add
rclw
pop
mov
iret
daa
sub
dec
inc
mov
cmp
add
loopne
xor
mov
in
or
push
mov
add
and
mov
inc
or
insb
adc
call
mov
pop
mov
ret
xchg
or
popf
addr16
mov
fcomp
js
pop
dec
adc
cltd
fmull
test
or
out
add
aas
jb
jnp
adcb
je
or
and
les
cmp
or
dec
mov
in
add
push
push
mov
into
popa
mov
jmp
repz
pop
fs
insb
fisttpl
leave
push
adc
test
jmp
jae
loope
psubq
je
push
nop
test
jmp
add
push
imul
cli
pop
cltd
pusha
pop
xor
test
enter
add
fdivrl
add
sbb
pop
clc
shlb
add
xchg
sub
js
push
and
enter
xchg
addb
push
inc
sbb
sbb
je
fistpl
mov
jb
add
xorl
pop
mov
out
pop
add
adc
lea
lock
or
add
or
insb
cli
data16
pusha
push
pop
inc
sbb
insb
testl
add
mov
mov
mov
inc
ja
sbb
xorb
mov
sub
cmp
adc
cmp
cmp
lock
stos
inc
fs
sub
cld
xchg
inc
adc
xchg
mov
stos
sti
aad
testb
and
adc
add
mov
push
xchg
sub
mov
sbb
fcmovnu
dec
sti
rcrl
in
out
xor
jbe
loop
dec
mov
or
mov
mov
enter
pop
ja
mov
cmp
or
or
movsl
leave
out
insl
or
cmp
xlat
mov
adc
shl
icebp
mov
sub
pop
cmp
insb
sar
mov
shr
rcr
shr
rcr
or
outsb
mov
jbe
fs
stos
jnp
out
jb
cmp
ja
pop
cmp
xor
xorb
dec
dec
xchg
ret
adc
inc
daa
pusha
mov
in
iret
jbe
push
pop
insl
cmp
push
rorb
les
or
push
sbb
mov
negl
jle
push
and
add
loopne
imul
or
inc
mov
add
call
jbe
pop
mov
jbe
cmp
negl
push
push
add
popa
push
dec
and
inc
inc
push
test
cmp
adc
stos
and
int3
insl
adc
lret
push
or
mov
xor
xchg
ds
rcrb
mov
jb
lods
pusha
inc
mov
clc
mov
dec
js
pop
jo
rcll
adc
inc
je
add
lock
add
pop
inc
jno
ror
mov
cmp
dec
loope
xchg
xchg
sub
xor
inc
inc
dec
lods
enter
push
cld
adcb
inc
fistpll
inc
pop
push
adc
imul
fisubl
mov
rorl
mov
adc
jmp
movb
push
in
mov
js
addl
or
mov
cmp
inc
ja
inc
mov
xor
push
pop
into
inc
or
pop
push
mov
pop
mov
sti
mov
sub
jl
mov
loopne
sub
push
divb
mov
add
xchg
outsl
and
xor
fldl
popa
mov
xchg
pshufb
ret
loop
push
jl
push
and
sub
or
rorb
or
insl
cltd
sbb
dec
pop
fists
mov
jg
rorl
or
xchg
xchg
mov
add
in
shl
add
lods
clc
push
mov
sbb
inc
or
pop
mov
leave
inc
or
pop
fcomps
push
jl
cmp
jge
xor
inc
adc
orb
mov
dec
cmpl
or
dec
mov
cmc
bound
push
mov
inc
xchg
insl
jl
push
fwait
xor
test
inc
inc
inc
cwtl
fstl
in
add
or
je
xchg
pop
daa
movl
in
sti
add
mov
jno
sub
iret
adc
out
inc
xor
pop
xor
mov
fbstp
lea
sub
inc
or
adc
loopne
inc
test
lcall
je
std
add
inc
jl
push
sbb
add
inc
pop
xchg
mov
shl
lret
push
cmp
je
inc
adc
lods
lea
pushf
bound
jne
faddl
sub
in
mov
inc
fdivrl
push
jmp
xor
stos
std
cmp
ds
outsl
clc
adc
pop
push
dec
push
push
push
mov
cmp
repz
lds
mov
or
enter
add
inc
pop
pop
aam
dec
jle
mov
jmp
and
push
daa
push
inc
out
adc
ja
repnz
mov
lea
pop
insb
and
jbe
faddl
cld
mov
inc
adc
cmp
stos
shl
out
mov
inc
mov
mov
ret
push
inc
jb
das
lret
push
mov
push
mov
outsl
mov
data16
add
outsb
test
je
outsl
lea
cmp
hlt
add
jne
mov
adc
inc
movsl
mov
jmp
cmp
mov
and
dec
jmp
sbb
shlb
popf
sub
add
xchg
fsubrs
inc
and
lods
xor
pop
push
fldt
or
or
xlat
sub
insl
adc
dec
jl
pop
jle
outsb
insb
ret
xor
lret
ret
je
mov
mov
dec
je
test
sub
mov
imul
cmp
jmp
sbb
jbe
push
inc
cs
cmp
pop
add
scas
les
xor
adc
push
sub
adc
int3
dec
mov
into
insb
js
add
dec
cmp
orb
mov
and
xchg
jbe
cmc
mov
mov
dec
inc
pop
fstpt
sbb
dec
push
and
mov
inc
ss
jge
push
roll
lea
clc
mov
jae
movsl
adc
pusha
jmp
out
testl
add
sub
jne,pt
test
push
push
inc
dec
mov
add
lea
fdivrl
jno
mov
lea
test
push
xchg
pop
adc
sbb
and
push
pop
xor
std
outsb
push
pop
mov
clc
addl
inc
dec
mov
clc
adc
and
inc
or
push
repnz
shll
push
sub
push
sbb
push
or
mov
mov
add
andb
jo,pt
into
int
mov
push
xchg
and
mov
lds
jne
movsb
call
rolb
mov
mov
inc
push
int3
xchg
imul
sub
jae
clc
adc
lock
in
scas
or
xor
or
or
push
jp
jl
dec
sub
mov
jae
mov
rol
repnz
fidivrs
jb
daa
and
test
or
push
pop
push
scas
stos
lock
pushf
push
cmp
cmp
jg
fisttpl
rorl
cmp
shrl
ret
jae
and
mov
sbb
add
pop
or
xor
addl
add
push
fisubrs
scas
clc
sbb
xchg
push
mov
push
pop
test
mov
xchg
jnp
jmp
ljmp
leave
or
cmp
push
lock
addr16
nop
cmp
jl
test
add
fs
ret
clc
or
inc
subl
cmp
cmp
xchg
test
cmp
push
stc
cs
adc
sahf
lahf
xchg
cmp
xchg
jbe
add
pop
xchg
and
in
or
arpl
fs
cmp
add
pop
lahf
mov
push
sbb
add
shlb
inc
lret
sbbb
mov
mov
outsb
or
mov
jp
jmp
push
rolb
adc
in
lock
inc
sub
lods
cmp
nop
daa
lock
mov
mov
cmc
pop
mov
mov
repz
adc
lock
push
mov
pop
test
leave
jnp
nop
cmp
rcrb
mov
nop
mov
mov
test
sbb
dec
mov
fildl
js
insl
lods
cmp
test
push
pushf
pop
test
fistpl
pop
lods
ja
inc
sub
div
lcall
nop
or
xchg
xor
sub
out
test
sub
xchg
orb
int3
daa
cs
adc
push
lods
pushf
sub
insl
and
out
or
fistl
pusha
mov
fcompl
push
push
push
sub
outsb
adc
sar
add
orb
addr16
sub
sbb
sub
imul
mov
jp
cmp
push
repnz
xor
lea
sub
pop
icebp
or
int3
push
ljmp
or
jmp
push
and
xor
sub
push
loop
push
ret
mov
mov
inc
mov
outsl
or
add
repnz
or
cltd
jo
loope
xor
and
mov
mov
xchg
pop
dec
adc
and
mov
xor
sbb
sub
fimuls
jne
push
mov
stc
cmp
sarb
ljmp
out
mov
jo
and
out
push
adc
mov
gs
gs
push
sbb
or
mov
adc
pusha
add
mov
add
lahf
jnp
push
std
add
cmpl
mov
cs
icebp
dec
sbb
mov
push
outsl
insl
and
enter
mov
fiaddl
jg
jno
xor
das
sbb
sbb
jbe
dec
pop
cmp
jb
mov
adc
jb
inc
jnp
mov
icebp
sub
jb
fwait
int3
dec
push
inc
pop
cmp
lret
rcl
and
or
inc
sar
adc
push
mov
push
jb
sarl
xchg
sub
or
mov
shr
mov
mov
les
movb
sbb
cli
divl
dec
mov
and
adc
adc
pop
push
and
rcll
or
sbb
sub
push
lock
mov
pop
loopne
or
int
push
das
add
in
aad
lcall
mov
and
push
pop
and
addb
addb
add
sub
movsb
inc
push
sbb
jmp
mov
push
pop
lret
dec
push
push
jmp
sahf
addb
or
incl
push
inc
mov
mov
rorl
or
dec
pop
pop
pusha
xchg
or
jle
lea
xchg
dec
adc
insl
pop
inc
pop
inc
cmc
add
mov
das
sbb
inc
sbb
fldcw
out
mov
dec
adc
je
mov
cmp
pop
jne
lock
loop
dec
mov
inc
mov
idiv
hlt
out
push
pop
pop
sbb
fnstsw
test
jp
nop
dec
push
fbstp
jo
loopne
jnp
sbb
std
pop
pop
ret
adc
mov
add
iret
clc
adc
or
aam
out
add
inc
pop
dec
push
dec
push
jle
mov
loope
mov
roll
push
push
add
loope
pop
adc
pop
xchg
aad
adc
and
inc
xchg
pop
adc
jp
inc
adc
jne
negl
xchg
cwtl
mov
push
add
in
fmul
cmp
add
jecxz
jnp
jle
mov
insb
lahf
insl
pop
ja
inc
and
mov
jo
push
adc
lret
push
cmpl
mov
clc
add
jo
xlat
sbb
test
push
movb
lea
sub
test
adc
sbbb
xor
mov
xor
lock
icebp
data16
add
sub
add
add
push
in
lar
lea
call
pop
movb
lods
loop
add
inc
imull
or
dec
jns
neg
adc
cltd
push
sahf
scas
mov
pop
testl
inc
add
push
mov
mov
lea
adc
sub
test
adc
mov
andb
rolb
mov
sub
or
les
test
sbb
xor
and
or
ds
js
ss
jge
pop
sub
push
iret
jne
or
into
dec
mov
push
pop
sbb
sbb
rclb
enter
dec
les
in
add
pop
jmp
lret
push
mov
fistps
popf
mov
pop
inc
and
enter
fs
int
and
fsubr
xor
pop
in
incl
aas
arpl
push
mov
push
add
sub
popa
mov
in
xor
mov
je
in
in
subb
adc
rorb
xchg
insb
sub
add
add
je
lahf
lock
shl
push
adcb
jmp
and
push
scas
loop
push
or
add
aaa
cmp
scas
sar
sbb
mov
fstps
push
lret
add
in
sub
add
xchg
push
pop
dec
and
add
sbb
sahf
outsb
mov
pop
dec
cmp
sbb
and
add
mov
adc
push
adc
mov
enter
push
clc
push
mov
movsl
dec
push
inc
neg
sbb
mov
loopne
add
jg
ret
daa
lods
cmp
or
and
repz
push
out
pushf
adc
imul
or
xor
movsb
add
mov
add
imul
sub
or
cmp
in
insb
sub
jbe
push
stos
das
dec
nop
adc
mov
aam
mov
mov
loop
out
cmp
adc
fmull
cmp
add
and
add
aam
or
and
xchg
arpl
ret
jge
or
mov
push
mov
push
clc
pop
xor
jmp
sub
stos
sbb
inc
pop
mov
xor
out
or
push
add
and
sbb
adc
out
and
mov
stos
adc
push
and
add
push
js
dec
mov
xlat
sbb
pop
test
and
and
cmp
js
jg
sbb
jbe
sub
or
push
fdivl
ficoml
and
rol
push
inc
cmp
shll
aad
sbb
enter
xor
cmp
loop
add
shlb
inc
fs
lcall
or
or
mov
adc
xchg
adc
jae
or
cmp
sub
int
pusha
jae
rcl
fisubs
outsb
aad
std
mov
sbb
push
cmp
mov
xor
rcll
xor
ja
add
xchg
or
fimuls
and
les
mov
lret
inc
adc
sbb
sbb
call
dec
cmc
imul
rclb
push
fidivs
push
lds
sbb
adc
cmp
push
insl
dec
inc
loopne
aad
add
push
lret
nop
rolb
dec
adc
cmp
xor
xor
mov
jo
inc
mov
or
mov
sahf
xchg
shl
jne
cmp
ds
and
dec
aam
in
rorb
insl
cmp
push
sub
dec
fmuls
add
and
push
mov
jmp
add
cmp
pushf
sar
jl
lods
clc
push
aad
sub
or
push
arpl
stc
mov
and
outsl
jno
mov
mov
sbb
adc
rorb
push
jp
popl
pop
add
sbb
bnd
push
sub
daa
and
push
mov
in
in
je
and
xor
daa
fnstcw
sbb
negl
push
inc
add
sbb
enter
mov
sbb
mov
cmp
subb
mov
test
or
push
sbb
adc
inc
stos
scas
inc
fcomps
cs
add
fnstsw
addr16
iret
outsb
hlt
lret
pop
or
call
mov
dec
pop
jnp
add
pop
clc
add
ss
addr16
inc
loopne
cmp
stos
mov
shll
orb
inc
fisttpl
cs
aad
and
daa
popa
push
scas
sub
cli
adc
mov
xchg
jnp
push
mov
push
sahf
inc
mov
mov
mov
call
adc
int
imul
cmp
jb
bound
sbb
imul
fwait
dec
dec
cmp
mov
dec
dec
dec
mov
push
mov
mov
fs
and
jge
or
dec
adc
loop
push
add
or
lcall
xor
ds
adc
mov
gs
and
test
xchg
pop
mov
insb
mov
popa
add
cmp
aad
int3
andl
shr
push
gs
mov
insb
cmpsl
ss
add
addb
pop
jmp
and
adc
out
aas
push
fwait
popa
mov
leave
cld
clc
inc
imul
sub
fwait
dec
mov
outsl
push
add
add
and
outsb
ss
jg
jg
outsl
inc
adc
push
jbe
jle
cwtl
aaa
dec
mov
outsl
ja
jo
mov
out
and
mov
jbe
cmpsl
sbb
hlt
pop
add
fisttpl
shrb
jo
sub
inc
push
pop
mov
inc
rorb
adc
pop
jg
iret
js
orb
icebp
ja
push
adc
rcll
add
ret
shll
icebp
xchg
add
sub
cmp
loopne
mov
sub
push
cmp
jne
ja
mov
jb
adc
or
sbb
add
adc
ret
inc
cmp
popa
fsubr
sbb
testl
rep
mov
add
hlt
nop
and
add
add
sarl
pop
add
ja
sbbl
xorb
pop
xor
in
sbb
fisubl
push
rolb
loopne
dec
jne
and
cmp
les
shr
scas
sbb
mov
int
cmpsb
xchg
sub
push
xor
pop
rorb
sarb
in
sbbb
popa
or
add
out
scas
enter
or
push
sub
in
dec
call
ret
pop
and
adc
sub
inc
gs
adc
mov
xchg
sbb
push
push
mov
push
xchg
popa
popa
mov
lods
pop
sbb
push
adc
inc
push
mov
mov
add
mov
push
push
push
out
xor
push
sub
pop
cmpsb
loop
sbb
mov
push
dec
cld
loop
inc
xchg
mov
push
sub
and
lea
mov
testl
mov
shlb
popa
adcl
mov
subl
pushl
lods
mov
je
sub
jge
or
mov
lds
inc
mov
inc
mov
mov
jo
inc
mov
adcb
lcall
xorl
push
pop
test
mov
rorl
in
cmpsb
push
mov
mov
or
inc
sahf
imul
addr16
or
les
adc
adc
insl
les
push
cmp
lods
or
pop
adc
lods
add
dec
test
jge
gs
add
fdivrl
sub
shl
and
js
push
pop
jmp
add
rorb
mov
repnz
and
insb
push
repz
pop
ja
test
rolb
mov
imul
aam
mov
sbb
aam
xor
imul
push
pop
jl
insb
mov
sub
sahf
loop
je
jmp
push
rcrb
jo
add
mov
mov
mov
xor
add
inc
and
inc
aas
pop
xchg
or
or
mov
sbb
out
mov
in
adc
push
loopne
dec
orb
pop
orl
lods
imul
mov
arpl
sub
imul
icebp
insl
sub
sub
pop
xor
test
mov
cmp
clc
dec
jns
daa
jno
test
shll
sub
push
gs
test
test
out
out
cmp
pop
and
fcmovnbe
sti
pop
sub
sti
add
rolb
not
test
ret
cmp
inc
sarb
adc
movsl
sub
add
icebp
mov
test
movl
nop
push
lea
inc
cmp
lods
sub
cmp
test
in
push
and
sbb
pushl
ret
and
jne
cmp
fldt
cld
test
adc
adc
xor
fmuls
jecxz
adc
in
jbe
jbe
adc
test
fildl
xchg
add
mov
sub
jo
out
stc
or
push
mov
js
mov
filds
xor
push
hlt
mov
and
mov
jmp
inc
cld
mov
pop
sbb
cld
jge
lea
lret
add
cmp
ret
insl
insb
movsl
mov
movb
xor
idivb
insl
iret
inc
decl
adc
icebp
fstpl
imul
lea
push
stos
pusha
scas
add
cmp
add
xor
cmp
mov
sbb
jl
vmovaps
mov
add
cmp
jl
test
adc
cmpb
adcl
fcmovnb
or
sub
jecxz
int
inc
iret
or
xor
push
decb
in
int
add
add
movzwl
mov
add
ss
mov
ja
out
test
lds
push
call
and
pop
cmp
fiadds
push
out
add
je
aam
sub
mov
sub
push
push
push
jmp
cmp
cmp
stos
sti
divb
adc
mov
or
sbb
sbb
lret
mov
test
adc
push
dec
pop
push
fldl
filds
sbb
sub
cmc
mov
xchg
sbb
inc
cmp
mov
jl
push
lahf
movb
inc
fimull
lea
mov
fpatan
lock
fadds
fcoms
pop
ret
lea
and
adc
sbb
adc
test
cmp
dec
fwait
imul
ror
sbbl
adc
pop
enter
fs
pop
cwtl
lret
loopne
inc
inc
push
sub
call
or
inc
inc
push
cmp
cmpsl
fxch
push
adc
fistpll
pop
leave
sub
add
nop
or
aas
shl
ror
fidivrs
cmpsl
dec
stc
neg
dec
mov
add
int
jnp
push
ret
add
adc
cmp
roll
test
mov
bound
mov
lock
aad
inc
cld
push
sub
xlat
sar
les
sbb
jb
inc
fs
out
pop
inc
pop
push
sub
int3
xor
cmp
je
mov
xchg
clc
imulb
cmp
jmp
test
popa
rol
mov
add
or
adcl
and
xor
ret
loope
adc
movsl
iret
shrb
insb
jne
orl
lds
outsl
mov
sbb
je
rcrl
sbb
and
lcall
or
mov
xor
shrl
mov
leave
pop
inc
inc
sbb
or
lds
fs
jno
icebp
and
push
push
cmp
gs
adc
mov
icebp
push
push
adc
lock
inc
sar
pop
loopne
orl
movl
add
pushf
imul
insl
mov
mov
rolb
pop
inc
sbb
loop
popa
push
cmp
sbb
or
sbb
inc
adc
in
test
inc
add
inc
scas
fstl
adc
loopne
aam
push
inc
push
or
pop
cmpsl
add
mov
sub
sbb
push
lods
fisttpl
dec
push
les
and
adc
ret
jle
sbb
xor
sbb
push
jb
mov
sub
and
out
fwait
stc
mov
pop
and
mov
ret
cli
push
adc
push
pop
and
rorl
pop
xor
inc
cmp
outsb
call
into
xchg
ret
push
fadds
add
or
push
test
in
lea
sub
cmpsb
fistpll
and
into
sub
adc
lock
dec
or
or
push
sbb
or
mov
xchg
aad
push
sub
shlb
inc
mov
and
xchg
int
xor
leave
neg
js
pop
cmp
push
jg
call
dec
adc
cmp
mov
adc
fmuls
mov
adc
movsb
cs
mov
push
mov
add
leave
adc
inc
or
push
sub
aaa
xor
add
pop
inc
mov
scas
mov
adc
sbb
lcall
orps
outsl
sub
add
mov
and
cmp
mov
aaa
mov
dec
test
add
pop
cmpsb
pop
cwtl
cli
out
ss
jb
clc
adc
lret
out
add
lcall
cmp
jle
sbb
adc
mov
push
loop
cli
ret
imul
in
lret
add
jl
callw
mov
js
cs
xlat
sbb
push
add
or
inc
mov
mov
in
pop
mov
hlt
or
add
xchg
push
rcrb
in
add
cmp
jne
pop
push
push
mov
jb
add
es
mov
xor
mov
pushf
pop
and
inc
mov
es
clc
mov
adc
jg
in
inc
mov
fdiv
pop
imul
ret
push
push
in
adc
popa
das
sub
xchg
cmp
jb
cmp
mov
ficoms
orb
andb
inc
movsb
clc
aam
iret
andl
pushf
cmp
ficomps
xchg
imul
popa
lea
sub
clc
repnz
movsl
jns
dec
int3
adc
adc
push
push
pop
or
ffreep
mov
sub
pop
add
jmp
inc
hlt
lret
sub
xchg
adc
or
cmp
jbe
dec
sub
sbb
adc
or
or
fidivl
lret
addr16
xchg
rolb
xor
or
clc
repnz
sbbl
dec
rorb
mov
pop
shr
xor
pop
aaa
adc
in
das
iret
add
add
add
and
jb
pop
sbb
adc
and
movd
mov
push
add
movsb
ret
je
push
and
fcompl
push
cmpsl
into
push
mull
push
lock
imul
inc
pop
or
and
sbb
jo
sub
jne
mov
shlb
mov
jmp
adc
orb
arpl
and
sub
mov
cmpsb
cmp
cwtl
or
shl
repz
xor
lea
nop
or
add
stos
add
maskmovq
divl
les
push
and
cwtl
subl
pop
or
sbb
adc
ss
fs
roll
pop
and
nop
inc
push
sbb
xor
add
roll
sahf
xchg
les
inc
inc
pop
push
sbb
dec
push
push
sbb
pop
sbbb
inc
push
fs
sbb
js
push
xchg
fs
or
or
leave
nop
xchg
cwtl
pushf
pop
jb
and
shll
stc
xchg
cmc
mov
fbstp
mov
and
add
cmp
fcoms
stos
mov
ss
jle
or
inc
enter
adc
dec
adc
mov
dec
sbb
or
fcomps
leave
enter
scas
xchg
xchg
and
inc
movsl
xchg
inc
sbb
mov
sbb
inc
dec
jne
out
sbb
inc
sbb
sbb
and
mov
add
add
pop
dec
add
cmp
or
ret
pop
add
lock
jmp
and
sub
or
mov
and
dec
adc
out
push
cwtl
adc
jmp
cmpsl
shll
cmp
mov
push
xor
mov
sbb
mov
ret
aam
insl
stos
cmp
jmp
push
or
dec
aaa
rcrb
mov
out
mov
xor
push
mov
pop
cld
scas
dec
add
add
es
fisttps
shll
clc
or
jp
jo
lret
stc
sbbb
stos
or
push
pop
mov
lcall
inc
mov
pop
add
push
mov
xor
hlt
add
adc
inc
lods
adc
aad
fsubs
push
test
push
test
or
sub
aas
pusha
mov
mov
jne
subb
je
or
add
inc
push
adc
aad
sub
jp
sar
add
adc
cmpsl
pop
inc
cmp
jle
sbb
ss
nopl
je
sub
cmp
fsubl
inc
or
pushl
nop
inc
sbbb
push
adc
lret
fucom
je
popa
ss
aas
in
ljmp
lods
jg
pop
int3
sub
sub
push
and
xchg
pop
fidivs
ret
jmp
in
mov
aam
negb
pop
xor
dec
ja
xor
jne
insl
pop
push
and
add
rorl
sbb
mov
and
mov
sahf
nop
or
cmp
push
ret
cmp
incl
lds
push
stc
das
inc
inc
outsb
push
fadds
inc
xorl
das
inc
pop
in
jns
shrl
or
inc
add
add
cmp
orb
icebp
imul
add
lods
mov
orb
pop
movl
add
cmp
shll
adc
mov
pop
or
or
nop
pop
add
lcall
fs
cmp
loopne
cmp
idivl
aad
add
mov
or
dec
push
push
iret
mov
add
lahf
push
dec
stc
call
or
sbb
dec
and
or
push
out
or
push
or
cli
or
or
out
adc
push
ret
orb
loopne
test
inc
test
mov
pop
adc
int
or
rep
mov
and
mov
fsubr
add
ja
adc
dec
xchg
test
rcll
rol
inc
fs
adc
or
jg
add
cmp
jge
ss
push
pop
mov
fsubr
fisttpl
or
add
push
add
aad
pop
mov
fs
stos
movsl
fmuls
scas
mov
in
ss
cwtl
insb
xchg
push
or
or
mov
sbb
dec
xchg
movsb
mov
les
bound
leave
fcoms
sbb
mov
mov
sub
lcall
adc
add
int3
push
bound
sbb
sbb
mov
mov
xchg
pushf
xor
cmp
adc
test
sti
add
ret
sti
dec
cmp
mov
cmp
pop
test
pop
test
jg
test
in
repz
push
push
notl
xlat
loop
testb
sbb
std
jmp
push
sub
push
cwtl
xor
call
add
jl
or
xor
xchg
lds
pusha
cld
pop
jns
pop
adc
inc
andl
push
mov
cmp
jle
std
adc
cmpsl
pop
jmp
adc
push
dec
or
fcoms
mov
ljmp
hlt
mov
test
jne
pop
inc
les
in
adc
push
sub
mov
cld
jno
add
add
fdivl
dec
mov
add
repnz
loope
out
add
out
std
or
je
inc
cmp
popf
cld
pop
or
inc
cmp
lods
cmp
and
adc
adcb
mov
adc
cmp
iret
sbb
lcall
mov
lods
dec
shrb
or
xchg
dec
cltd
add
sub
aam
mov
inc
xchg
faddl
inc
pop
push
or
and
or
out
in
or
adc
pushf
inc
adc
in
sub
pop
sub
or
pop
call
test
sbb
mov
int
call
sbb
addl
repnz
sub
sbb
bound
adc
inc
or
jns
repz
sub
fcmovu
pop
add
jbe
sahf
je
or
jle
ja
and
in
ja
pop
mov
cmpsb
jle
mov
xchg
mov
leave
inc
sti
push
out
fsubrl
sbb
jmp
adc
aas
xor
cmpb
je
mov
rolb
imul
popf
add
adc
lret
push
dec
adc
incb
push
mov
in
sub
insb
pop
rorl
inc
mov
push
cmp
or
insb
inc
ficoms
push
or
sbb
cmp
sub
jg
and
mov
test
mov
pop
add
pop
dec
jnp
sbb
stc
mov
arpl
ja
jg
shl
or
or
shl
insl
sub
or
mov
push
insl
pop
mov
flds
rol
jmp
or
add
add
out
or
test
je
push
or
mov
mov
mov
inc
movsl
sahf
jecxz
adc
mov
pop
repz
mov
push
sbb
lea
cld
movsl
movsl
movsw
adc
jbe
and
mov
inc
mov
movswl
insb
rcl
adc
and
or
adc
loopne
les
in
test
inc
inc
adc
scas
std
neg
neg
sbb
adc
push
sbb
mov
xchg
outsb
adc
sbb
sbb
jb
icebp
dec
mov
and
pushf
sbb
sbb
sub
in
adc
fnstcw
mov
sbb
adc
cmp
enter
les
adc
dec
jns
mov
mov
pop
pop
pop
leave
int3
cmp
jae
add
icebp
mov
lea
lods
rcl
ljmp
loope
cmp
mov
loopne
nop
mov
dec
adc
ss
and
idiv
lock
je
les
je
and
rcrb
xor
mov
mov
sbb
pop
jge
or
movsl
or
std
add
push
jo
lea
in
pusha
cmp
mul
mov
inc
dec
push
rolb
or
add
pop
js
sbb
sahf
push
sub
or
jmp
je
xchg
sbb
or
orl
pop
mov
pop
add
adc
mov
jmp
dec
sub
in
dec
out
hlt
jmp
add
jmp
divb
mov
cmp
lcall
adc
and
movsb
dec
and
or
sub
sbb
and
test
mov
pushf
shll
rolb
scas
or
push
jmp
daa
add
mov
testb
sbb
pop
push
xor
add
bndldx
mov
in
rol
pop
mov
or
inc
pop
or
in
lea
loope
xchg
lcall
xchg
inc
xor
cmp
dec
xor
add
loope
test
sbb
cmp
andb
push
clc
movsb
mov
push
dec
xor
mov
cltd
push
add
adc
sub
push
gs
sub
push
addr16
sbb
les
and
xchg
daa
push
push
test
cs
push
jl
daa
into
mov
mov
pop
or
pop
mov
pop
pop
push
sub
test
stos
dec
mov
aaa
or
sahf
sbb
jecxz
mov
rcrl
jae
pop
pusha
andl
pop
jb
cmp
je
pop
out
sbb
push
pop
les
test
lret
mov
cli
loope
test
adc
push
idiv
adc
sub
outsl
push
inc
push
add
in
adc
pushl
leave
mov
arpl
add
xchg
sidtl
mov
add
insl
add
mov
mov
sub
or
scas
push
hlt
in
ret
cmp
jns
leave
std
mov
scas
icebp
adc
lret
cmp
pop
inc
pop
in
dec
add
pop
outsl
outsb
push
inc
arpl
mov
add
or
andl
fildll
pop
pop
lock
add
xor
or
sub
add
push
xor
jge
mov
cmp
test
cmp
or
jg
pop
cld
dec
dec
outsl
aaa
stos
mov
test
das
cmp
adc
xchg
pcmpeqb
mov
mov
sbb
adc
inc
jmp
lret
fsubs
xor
loopne
mov
cmpsl
ret
popa
mov
iret
dec
add
mov
or
pop
les
sbb
xchg
adc
xchg
loope
add
popl
orb
sbb
inc
inc
xor
push
dec
and
xchg
dec
add
add
fadds
dec
mov
adcl
cs
xchg
sub
pop
mov
lods
sbb
mov
mov
adc
and
dec
sahf
or
test
xchg
fistpl
scas
in
outsb
inc
cmpsb
ret
push
jbe
mov
test
aad
mov
add
or
lsl
fnstsw
rorb
mov
add
push
and
xlat
test
mov
imul
mov
andb
cld
cmp
xor
jge
push
stc
test
lds
mov
test
mov
mov
pop
xor
and
xchg
lods
adc
lret
andb
cmpsb
dec
cwtl
add
pop
sbb
adc
mov
push
mov
lds
pop
inc
xor
pop
sti
jbe
pusha
inc
adc
outsb
pop
les
sub
mov
or
xchg
mov
adc
adc
loope
hlt
dec
sbb
and
adc
inc
mov
ret
or
mov
imul
and
arpl
mov
mov
dec
add
mov
addb
cltd
push
mov
add
xchg
enter
insl
sub
inc
popf
or
lea
clc
movl
or
sub
subl
aam
cmp
test
and
pop
mov
cltd
cmp
sub
xor
fsubs
mov
js
cmp
adc
divb
and
adc
adc
lea
hlt
clc
mov
mov
lret
push
inc
cwtl
lret
or
xchg
add
inc
mov
jmp
fisubrl
mov
jmp
ja
sbb
loope
xchg
ror
shlb
mov
inc
imul
push
fidivl
push
cmp
jbe
push
add
sbb
popa
and
mov
mov
iret
mov
mov
dec
cli
fsubrl
mov
jne
std
stos
mov
adc
rolb
or
arpl
mov
adc
adc
mov
movups
inc
sbb
push
in
sarl
lcall
pusha
rorb
sbb
xor
fs
dec
push
fsub
dec
dec
push
cwtl
loopne
add
adc
add
inc
pop
dec
add
dec
or
flds
adc
push
xorb
mov
loopne
add
push
syscall
jmp
aas
and
push
test
cmp
push
push
daa
sbb
fsubrl
pop
cmovo
add
sbb
and
mov
jle
pop
cmove
adc
sub
push
mov
dec
insl
loopne
or
inc
movsl
pop
add
roll
or
cltd
sar
fucomi
jg
add
inc
lea
pop
dec
pop
sub
inc
shl
jmp
jo
or
lret
loop
mov
test
subl
in
test
jmp
push
ss
and
pop
and
push
push
data16
loopne
ret
adc
lea
xor
repnz
push
ret
shrl
add
and
ja,pn
jnp
sbb
and
add
cmp
jb
sub
jae
rorl
js
mov
jecxz
rcll
xchg
lods
lahf
and
in
leave
pop
mov
jbe
mov
call
push
sub
or
stos
and
aam
fcoms
inc
mov
in
sub
sbb
or
repz
sbb
push
inc
push
pop
dec
xor
push
cmp
xchg
and
mov
mov
mov
xlat
adc
out
test
push
jle
jne
shl
adc
and
adc
and
mov
xchg
pop
adc
mov
fs
or
add
push
lcall
push
lods
jb
push
jbe
or
jp
adc
pusha
stos
data16
lods
mov
dec
xchg
stos
mov
and
mov
xor
in
xrelease
mov
fnstenv
andl
loope
push
lea
mov
dec
jns
mov
in
rolb
sub
and
jo
push
test
cmp
sbb
cwtl
cmp
add
sub
adc
fs
mov
jo
fistpll
mov
loopne
jns
adc
cmpsb
pop
into
out
push
push
add
jl
pop
sub
into
pop
out
adc
adc
mov
test
sub
popa
jge
pop
inc
js
cmp
push
shl
fstpl
fistpl
js
fstps
leave
add
or
mov
flds
pop
or
push
hlt
xchg
adc
stc
and
or
adc
inc
push
jge
leave
add
push
jge
cmp
dec
push
pop
sbb
add
test
jl
adc
push
inc
sahf
xchg
mov
fs
or
pusha
inc
shlb
or
idivl
xchg
imul
or
lret
mov
inc
cwtl
add
mov
pushf
mov
int3
jne
or
mov
aam
push
and
mov
pop
mov
or
dec
or
stos
inc
jmp
mov
push
inc
xchg
or
xchg
sub
fists
das
pop
mov
xor
or
sub
jmp
mov
mov
push
cmp
or
decb
je
dec
dec
mov
fmuls
lock
jmp
insl
mov
sub
les
push
jbe
push
add
lods
cmp
outsl
push
mov
je
lret
inc
jle
mov
cmp
jle
cmp
or
sub
pop
mov
or
add
push
fstps
jge
fs
jbe
pop
sub
data16
ja
ret
and
jmp
cmp
jg
inc
std
adc
mov
jae
inc
mov
ret
mov
xchg
sub
or
jge
inc
jne
rcrl
ja
cmp
insb
or
int
add
movsb
imul
mulb
mov
ss
adc
cmp
faddl
outsb
push
hlt
dec
lea
add
adc
xor
out
xchg
push
pop
and
mov
xor
testb
or
mov
pop
adc
ret
sub
divb
mov
stos
push
fldt
jmp
mov
inc
push
je
mov
call
mov
sbb
pop
nop
mov
jg
mov
mov
testl
testl
fidivs
sbb
dec
pop
push
sbb
or
push
aad
sub
jle
outsb
ja
push
sbb
and
adc
in
pop
in
rolb
jg
jecxz
ficompl
emms
pushf
jmp
sub
pop
mov
jo
rcrb
icebp
cltd
and
mov
ret
jbe
cmpb
hlt
and
sbb
and
popf
pushf
sti
fwait
orb
push
cwtl
jge
neg
add
fstps
pop
or
push
cmp
cmp
cmp
xlat
inc
xor
or
fcmovnu
jmp
ret
in
adc
mov
aas
push
mov
adc
insl
dec
push
jne
push
or
or
and
std
mov
lods
add
pop
mov
inc
popf
or
and
into
mov
loop
cmp
jb
mov
pushf
mov
jl
lea
clc
dec
or
pusha
and
xor
fsubrs
into
mov
mov
ret
out
fildl
cld
dec
lahf
adc
rcr
faddl
and
iret
jae
out
data16
ja
sub
ja
pop
enter
idiv
mov
inc
testl
jne
testb
jne
aam
and
in
into
jne
inc
or
cmp
imul
adc
xor
jp
add
orb
pop
arpl
fdivrs
pop
clc
imul
mov
sti
push
lea
dec
movsb
lea
mov
mov
movsb
mov
add
cmc
pop
inc
cltd
lea
cmp
cmpsb
lock
repz
ja
push
mov
cmp
subl
lcall
dec
push
pushf
adc
decl
jg
add
mov
sarl
test
js
inc
lods
adc
pop
repnz
gs
push
stos
pop
sub
add
or
shr
or
sub
fistpl
xor
add
adc
or
mov
loop
lock
divb
cmpsl
add
fidivrl
fcom
insl
fmull
clc
pop
shl
adc
xchg
aam
roll
movsl
das
ss
add
sbb
or
aam
aam
add
shll
int
xor
pushf
lea
xchg
sub
loope
or
imul
das
fidivs
jbe
pop
push
pop
dec
rcl
push
jmp
ficompl
sub
in
xchg
jb
leave
mov
subb
sbbb
enter
xorb
jmp
pop
or
fadd
push
nop
xchg
mov
mov
popa
pop
pusha
push
pop
push
xlat
test
insl
mov
xchg
sar
and
lea
mov
jmp
push
insb
add
cmp
int3
pop
mov
inc
jne
push
lret
jmp
pusha
lods
xor
xchg
xchg
add
testb
pop
push
add
or
leave
add
lods
rorb
inc
or
mov
add
lcall
add
xor
movsl
imul
roll
sub
sbbl
and
add
scas
pushf
lret
data16
out
enter
icebp
movb
add
lcall
aad
xlat
or
imul
aas
andb
inc
add
sbb
movb
jmp
add
jbe
addr16
jne
subl
push
mov
jp
jge
xchg
mov
mov
and
adc
add
sub
adc
push
add
adc
adc
sub
mov
mov
or
subl
fucomip
push
js
pushf
shr
mov
cmp
inc
jmp
xor
sub
test
arpl
mov
je
mov
jmp
sub
push
cmpb
fldcw
adc
mov
or
cmp
mov
dec
lea
sar
and
or
add
rcl
push
mov
ljmp
xor
mov
arpl
or
lret
ret
sar
out
mov
or
mov
cmp
jp
and
jb
lock
dec
popa
rolb
hlt
mov
jle
or
add
adc
das
mov
or
mov
xor
push
fcmovnbe
pop
outsb
cmpb
pop
or
bound
daa
into
lods
xchg
in
pop
mov
inc
push
clc
ja
pop
jl
ss
and
sub
add
nop
out
gs
call
pop
insb
ljmp
or
mov
jo
mov
and
insb
xchg
out
mov
mov
rolb
push
mov
push
xchg
sbb
xlat
dec
and
shlb
sub
add
mov
enter
push
sbb
ds
movsb
sbb
movsb
inc
push
xchg
rcrb
ds
lret
mov
test
rorb
pop
fstpt
mov
rclb
add
mov
cmpsl
jg
aam
sbb
add
shr
es
pop
ud2
ret
xor
jg
add
inc
push
mov
rolb
lock
into
aas
mov
cmpsl
sbb
and
sbb
or
mov
shl
jmp
cmpsl
add
flds
data16
sahf
lock
xchg
xchg
div
cli
cli
inc
and
iret
xor
div
adc
inc
push
aam
daa
sbb
loopne
mov
in
mov
jnp
lret
mov
inc
lret
or
sbb
test
lock
cmc
leave
mov
fidivl
fstps
mov
bound
in
push
sbb
jl
cmp
xor
inc
mov
outsl
xor
dec
pop
push
sub
scas
repnz
loopne
sub
xchg
add
jge
rorb
mov
adc
add
aaa
lret
cwtl
enter
adc
xor
mov
xchg
icebp
popf
outsb
ja
enter
and
sbb
jno
call
test
addr16
mov
jge
test
insb
sub
xchg
or
mov
or
lret
sbb
cmp
flds
mov
fsubs
xor
lods
lods
dec
cmp
rclb
mov
sarb
idiv
mov
ret
mov
divb
sbb
test
cmp
pushf
lock
enter
out
or
jge
les
jb
inc
lock
push
sbb
dec
mov
movsb
jne
mov
pop
enter
loopne
mov
aam
sbb
push
mov
adc
not
push
cli
add
xchg
lods
sub
and
pop
imul
mov
setnp
dec
je
ljmp
adc
cmp
mov
out
movsl
roll
cmp
adc
or
pop
test
dec
loopne
fisttpl
pop
or
xor
sub
sarl
mov
xor
fidivs
mov
sub
xor
xor
xor
xor
leave
fsubr
mov
pop
add
adc
sahf
mov
mov
ja
fdiv
ss
jge
or
ret
pop
push
mov
lock
adc
sub
outsl
fwait
pop
orb
sbb
push
enter
ja
or
lea
or
test
leave
inc
ljmp
loopne
rolb
sbb
inc
daa
enter
mov
mov
shlb
jns
or
leave
bound
jne
aaa
cli
push
push
sbb
shll
push
pop
xor
addr16
fadds
stos
sub
cs
dec
dec
mov
dec
cmp
jge
inc
jmp
inc
mov
push
mov
movb
dec
cmp
jae
repz
aaa
dec
cmp
inc
and
fadds
and
mov
jo
test
xor
dec
pop
lcall
into
adc
push
inc
ret
and
add
inc
nop
test
add
inc
mov
test
fldl
or
add
sahf
in
pop
add
add
add
test
subl
pop
out
jbe
mov
je
push
pop
sub
or
mov
sub
push
or
or
push
xor
xor
je
sub
push
or
push
lods
pop
push
add
adc
adc
ret
mov
push
mov
cltd
addr16
mov
sub
push
cwtl
dec
or
jnp
rcrl
test
pop
test
aam
mov
lcall
inc
aad
push
cmp
mov
pop
and
pop
pop
pop
lods
xor
pop
popa
sti
data16
scas
shll
xchg
xor
ret
or
or
loope
fnstcw
push
xor
imul
adc
in
sahf
in
lret
or
add
pop
sahf
and
push
push
or
mov
mov
js
inc
repz
cmp
outsl
mov
adc
xlat
daa
cs
nop
mov
loopne
mov
sbb
add
stos
mov
and
rclb
ljmp
add
sbb
push
scas
sub
call
mov
add
fstl
dec
cld
cld
shlb
pushf
pushf
mov
aad
jnp
xchg
mov
add
jnp
jo
sub
xchg
ds
subl
add
pop
test
or
or
adc
test
cmpb
pop
xlat
jne
sbb
lea
sbb
inc
mov
lret
into
into
into
mov
aad
mov
sub
sub
or
lds
dec
sub
call
not
push
or
jmp
fcoml
adc
push
je
out
sbb
or
imul
hlt
xor
addb
test
cltd
xchg
out
add
or
ret
adc
lahf
ror
add
sub
leave
jb
je
and
andl
or
rcr
xor
sub
sahf
jmp
movsl
bound
sub
dec
inc
loopne
leave
shlb
stos
push
jne
add
adc
and
adc
inc
je
mov
xchg
mov
orb
cwtl
mov
adc
add
mov
sub
inc
divb
add
push
je
into
push
rorl
cmp
cmp
stos
mov
lea
pop
push
test
push
push
inc
or
cmp
mov
adc
lods
xchg
idiv
pop
xor
xor
clc
pop
cltd
xor
out
inc
mov
aad
cmpsb
clc
add
push
inc
mov
movsb
adcb
add
sbb
movsb
sbb
add
lret
test
push
out
sbbb
inc
push
adc
adc
xor
or
ja
lcall
inc
push
inc
popa
ja
sbb
rclb
pop
leave
add
add
mov
or
je
sti
outsl
mov
inc
mov
mov
mull
or
mov
je
jmp
mov
push
cmp
ja
add
cmp
or
cmp
adc
dec
fwait
mov
dec
add
fnstenv
aam
in
pop
pop
pop
sbb
mov
pop
push
ficoml
call
pop
mov
add
adc
inc
aam
xchg
mov
adc
sub
xor
mov
jmp
adc
sbb
rcrl
inc
adc
out
in
inc
loope
shlb
fcmovb
jmp
and
out
js
lods
je
pop
inc
xlat
xor
push
push
xor
cmp
xor
in
fists
pop
cmp
sbb
adc
dec
adc
fildl
pop
movsl
sbb
out
add
xor
outsb
adc
scas
stos
adc
cmp
and
test
imul
xchg
inc
or
pop
mov
cmpsb
aas
mov
pop
insl
repnz
popf
cli
mov
mov
or
fimuls
push
or
in
fs
adc
mov
mov
ror
stc
andb
inc
cmp
and
lock
lret
mov
fucomip
es
shll
or
cli
aam
sub
sti
mov
mov
incl
orb
cmpl
or
in
test
add
incl
out
pusha
test
push
f2xm1
ret
add
mov
test
or
rcl
dec
lcall
adc
sub
mov
std
je
mulb
addr16
or
loop
orb
jne
outsl
sub
dec
add
adc
and
ret
jmp
push
mov
push
and
imul
cmp
test
adc
push
sub
ficoml
xor
push
dec
push
add
sub
bound
mov
or
add
and
pop
cmp
inc
and
loopne
dec
mov
cmp
ret
movsb
push
fidivl
fst
jmp
or
and
pushf
cmp
sbb
cmp
test
sbb
cmp
roll
mov
and
push
sbb
inc
inc
and
sub
pop
rolb
push
add
je
or
popf
cmp
inc
xor
movsl
aad
ss
xchg
adc
mov
add
xor
cmp
inc
jb
add
fimull
daa
sub
cwtl
cmp
push
pop
andb
bound
push
adc
inc
xchg
push
inc
shll
mov
test
aaa
cmp
outsb
movlps
lahf
xor
inc
sarb
xor
jne
clc
jne
cmp
jne
mov
mov
mov
cmp
or
rorb
outsb
mov
push
orl
sbbl
mov
lock
in
pop
push
dec
sub
loopne
jo
xchg
jecxz
inc
add
loop
addb
cmp
jne
pop
jno
and
aad
andl
int
xor
pop
inc
jno
cmp
or
push
popf
adc
pop
data16
sub
mov
inc
xor
pop
pop
xchg
add
push
je
dec
int
push
movsl
and
jecxz
adc
xlat
mov
ja
adc
dec
loopne
push
mov
jmp
push
pop
adc
jp
out
outsl
adc
pop
dec
jne
inc
cmp
sub
rcrl
jl
push
fiaddl
jle
pop
rorb
push
jnp
push
dec
or
add
add
inc
dec
mov
mov
ret
roll
push
mov
mov
cmp
jb
mov
jge
push
testl
inc
dec
pop
or
lcall
cmp
xchg
mov
das
movb
push
lock
pop
call
dec
xchg
dec
std
in
inc
call
repnz
jle
pushf
in
mov
adc
and
in
outsl
int3
push
inc
jl
mov
sub
xchg
insl
pop
pushf
and
in
dec
push
jnp
push
loope
shll
add
insl
scas
add
nop
call
rol
xchg
push
add
inc
fs
mov
sbb
subl
or
fdivl
or
loopne
lock
jge
pusha
pop
ficompl
push
sbb
daa
iret
testw
inc
mov
jle
mov
nop
outsl
mov
xor
outsl
mov
sbb
imul
bound
and
or
enter
push
in
mov
shrl
and
mov
xchg
mov
sub
push
xchg
cmp
fdivl
jns
filds
mov
stc
jl
stos
jne
lods
and
cmp
pop
or
xor
ud2
xor
std
mov
pop
gs
je
jge
mov
push
add
inc
add
inc
add
inc
mov
fildl
dec
dec
adc
jb
aaa
pop
sub
jae
popaw
adc
add
xor
ja
jae
ss
int
add
pop
push
pop
or
outsl
scas
jmp
outsl
subps
jo
insb
or
out
jb
inc
dec
cmp
scas
sub
pop
pop
jo
andl
xchg
ja
popa
jae
adc
inc
xchg
xor
lcall
fwait
insb
pop
push
gs
imul
jbe
out
mov
add
outsl
ja
and
imul
pop
ja
jb
jb
push
add
add
mov
add
push
xor
addb
add
in
ret
push
sbb
push
sbb
sub
inc
outsb
xchg
add
sub
lret
rclb
mov
mov
dec
flds
sbb
imul
aad
ja
adc
jmp
xchg
add
movlps
shlb
jmp
imul
mov
sbb
add
fdivrp
mov
sbb
test
sbb
mov
xor
xor
pop
arpl
push
jbe
mov
int
xchg
mov
gs
xchg
and
cmp
arpl
pop
xor
inc
jb
dec
jo
jo
jo
mov
outsl
mov
aaa
jns
cmp
xor
inc
gs
pusha
outsl
loope
insl
pop
popa
imul
pop
fs
lods
fwait
pop
sbb
jne
inc
aaa
dec
adc
push
xchg
jae
bound
inc
outsb
jns
and
into
outsl
jne
add
imul
xchg
arpl
mov
decl
xor
and
dec
push
dec
inc
add
add
lods
insl
fistl
or
mov
inc
sbb
repz
jg
out
scas
jnp
add
xor
jb
je
aas
or
cmp
movsb
popa
je
imul
sarl
pop
inc
add
mov
jne
test
push
dec
out
mov
sbb
adc
or
jne
push
or
xor
movsl
mov
dec
push
pop
scas
push
jnp
aaa
jmp
push
cmp
or
scas
xor
xor
xor
sub
mov
inc
or
jecxz
jns
insl
mov
sbb
adc
sbb
aas
popl
fs
insb
inc
jo
dec
outsb
or
sar
inc
leave
push
dec
inc
push
push
inc
push
inc
pop
dec
imul
pop
push
fisubrs
xchg
out
jae
dec
push
pop
inc
sbb
outsb
je
jnp
outsb
xchg
in
pop
outsl
outsb
sbb
inc
pop
jecxz
icebp
imul
sti
and
andb
jae
arpl
push
insl
and
outsb
icebp
lcall
and
imul
inc
inc
push
inc
and
je
loopne
popf
int
pop
and
lds
xor
inc
add
and
dec
popa
jae
cmp
xchg
push
cmp
xchg
icebp
data16
xchg
add
mov
mov
jae
lret
mov
pop
cmp
cmp
dec
inc
sub
mov
aas
je
fs
jns
cmp
sub
cmp
out
mov
add
jmp
imul
lods
and
ret
data16
sbb
ret
mov
jae
inc
dec
dec
inc
inc
sub
sub
roll
add
and
insl
mov
fbld
dec
dec
push
dec
mov
ret
lahf
inc
push
insl
add
sub
sub
push
sub
sub
popa
sbb
cmp
gs
pop
jae
fs
lock
fldt
jo
xchg
push
lcall
sbb
add
int
cwtl
arpl
jo
adc
xlat
push
push
lods
addr16
in
shrl
es
cmpsl
jne
fldt
pop
ds
outsl
arpl
popa
dec
mov
cmp
pop
sub
sub
inc
jne
mov
mov
mov
push
popa
scas
pop
mov
pop
test
lods
inc
in
in
push
insl
pop
test
int
or
sbb
cmp
inc
cmpsl
out
ja
shll
dec
cmp
cmp
sub
mov
in
lahf
mov
popa
mov
fwait
and
insl
sbb
shrb
or
adc
jnp
jb
pop
pcmpgtd
xor
cmp
repz
je
mov
aaa
xor
inc
out
fisttps
jne
ficomps
adc
cmpsb
cmp
leave
mov
ud2
orl
imul
pop
pop
jo
pop
popa
mov
outsl
xor
xor
scas
insl
xchg
inc
and
das
gs
outsl
sub
shlb
sbb
sbb
mov
add
jne
insb
mov
mov
aas
notb
fwait
cs
jne
mov
push
inc
xchg
jns
jae
lea
filds
push
mov
ret
jne
pop
addr16
lods
sub
int
jb
shll
jns
popa
inc
aaa
xor
pop
mov
lods
outsl
adc
sub
mov
jns
popl
sbbb
mov
mov
popa
push
lret
push
leave
std
xchg
and
neg
or
in
pop
inc
idivb
imul
adc
sti
fsubp
cmp
movsl
jbe
jp
dec
or
fdiv
adc
insb
pop
and
or
sti
pop
inc
dec
popa
addr16
imul
xor
mov
sbb
test
push
mov
sbb
nop
push
inc
addr16
push
loope
inc
jg
mov
dec
sbbl
mov
xor
sti
pop
testl
or
jp
movsb
xchg
inc
ret
jno
ret
inc
js
daa
sub
addr16
out
insb
sub
push
or
xlat
int
rorb
aad
sub
push
stc
insl
cmpl
outsl
outsl
push
sahf
push
adc
imul
pop
or
mov
inc
ja
add
sub
sbb
test
jmp
ret
addl
sbb
fsubp
mov
add
call
xor
out
adc
adc
dec
sbb
subl
outsl
test
jmp
dec
popa
pop
arpl
jae
jae
sub
sub
cmp
adc
sub
pop
insb
mov
jnp
sbb
xor
inc
jo
mov
xchg
dec
and
cmp
scas
outsl
scas
sbb
fwait
cmc
stos
scas
jecxz
cmc
add
fldt
mov
push
or
jecxz
jecxz
and
mov
push
fs
xlat
rcrb
test
subl
mov
lods
fs
and
xor
je
dec
sbb
hlt
dec
and
nop
cmp
jmp
push
or
jae
lods
and
mov
cmp
cmp
sub
out
aad
xor
adcl
in
aaa
sbb
jns,pn
push
jbe
or
inc
dec
flds
pusha
daa
cmpsl
daa
cmp
ja
pusha
sbb
xor
xchg
push
and
dec
fwait
insb
lock
adc
sti
jns
flds
sbb
loope
sbb
das
or
fcomps
imul
push
add
pop
sub
or
add
jnp
jp
gs
int
and
cmpl
cmp
cmp
aad
gs
pop
jae
cs
jecxz
add
loope
dec
inc
dec
or
je
or
test
jb
fldenv
cmp
jbe
and
or
test
jecxz
test
imul
mov
lret
and
shrb
jnp
inc
and
jecxz
test
or
mov
lds
call
pop
cmpsl
inc
adc
iret
sbb
inc
arpl
jg
add
test
andb
addr16
inc
mov
dec
or
aaa
jae
and
mov
or
test
stos
sarl
push
mov
push
cmc
lds
mov
dec
in
mov
test
add
adc
dec
sub
das
jecxz
lret
popf
jp
sbb
mov
or
mov
stos
bound
push
ret
daa
push
xor
add
jnp
jnp
ja
inc
xchg
push
jne
in
in
int
and
ss
add
add
incb
dec
mov
adc
sub
cmp
or
scas
int
adc
dec
jno
loop
xor
adc
mov
rcll
xchg
adc
clc
push
or
cmp
rclb
cmpl
push
dec
shll
sahf
fsubr
aaa
int3
push
outsb
addr16
cmp
pop
jae
addl
mov
lret
add
out
adc
les
pop
loopne
inc
mov
or
mov
pop
jl
jo
jmp
ja
gs
gs
add
arpl
gs
outsl
sub
mov
cmovnp
xchg
test
test
add
dec
fistpll
xchg
cmp
inc
insb
jae
jb
gs
push
rolb
push
popa
insb
jne
inc
inc
call
cmp
nop
jg
adcl
outsb
outsl
ja
jg
popa
xchg
add
add
push
pop
or
or
or
push
ud0
call
adc
adc
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
pushl
xor
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
loop
and
push
push
push
push
push
sbb
pop
in
mov
popa
bound
addr16
imul
or
jae
jne
ja
xchg
addr16
jg
inc
daa
cmp
or
push
jb
gs
insl
or
dec
xor
dec
pop
inc
add
jne
int3
push
jmp
sub
or
push
adc
add
dec
ss
inc
jnp
inc
adc
or
pop
add
xor
or
adc
cvtpi2ps
jo
dec
and
jae
mov
adc
je
insl
xchg
push
adc
sar
mov
je
push
inc
and
bound
jb
and
das
push
xor
push
cmp
or
gs
pusha
scas
mov
je
xor
imul
sbb
sub
daa
insl
stc
add
or
insb
lods
insl
and
lahf
xor
mov
dec
fmull
mov
insl
int
bound
jae
insl
bound
and
mov
gs
in
push
addr16
ja
mov
gs
cmp
bound
xorl
and
mov
lahf
scas
jmp
gs
push
mov
ret
outsl
pop
push
ds
sub
movsl
test
pop
fisubrl
daa
sub
arpl
sahf
sub
cmpsl
popa
xchg
outsb
push
arpl
mov
inc
sbb
add
aam
outsw
dec
dec
popa
imul
pop
cmp
jo
mov
outsl
jbe
push
xchg
add
das
xor
jnp
daa
dec
gs
mov
inc
fcomps
lret
fidivrs
xchg
imul
cli
mulb
addb
mulb
aaa
jecxz
jo
cmp
pop
push
aaa
ss
fs
out
xor
ret
adc
mov
and
mov
pop
xor
sub
das
pop
push
fsubl
pop
xor
imul
lods
loope
push
xchg
sbb
jo
aaa
nop
push
push
xor
popf
and
or
aaa
insl
jbe
push
jle
add
insl
mov
xor
mov
cs
repnz
and
mov
push
je
jo
or
dec
in
out
sbb
inc
ja
repnz
enter
xor
into
push
int
adc
sub
addr16
jae
xor
xchg
cmp
xorb
cmc
inc
faddp
add
push
sti
xor
inc
sub
lar
aaa
imul
sub
stc
add
cs
fbld
jne
lods
pusha
push
gs
xor
cmpsb
and
out
or
add
int
or
add
lea
orb
mov
nop
xchg
xchg
addl
add
sub
add
add
mov
addl
incl
adc
or
push
pop
incl
push
dec
inc
dec
sahf
mov
out
sti
pop
pop
scas
and
bound
sbb
add
insb
xchg
and
gs
jbe
mov
inc
push
imul
popl
and
pop
pop
lret
push
into
adc
test
add
push
jns
inc
xor
and
pusha
or
aam
mov
test
clc
outsl
fs
mov
outsl
cwtl
adc
jno
pushf
jo
js
mov
lods
pusha
and
jg
fldcw
sub
xor
jb
jns
xchg
es
and
pushf
inc
and
fs
sbb
xchg
dec
gs
sub
setae
daa
cmpsb
inc
or
clc
insb
inc
sti
loope
arpl
pop
pop
sub
jae
push
pop
sbb
pusha
ss
jb
imul
inc
pop
out
ja
mov
sbb
arpl
dec
and
mov
push
dec
jnp
dec
add
je
mov
xor
outsb
lock
sub
hlt
pop
ss
js
ds
pusha
xor
aas
jp
pop
xchg
mov
test
je
xchg
or
adc
lret
push
dec
jb
dec
aas
add
popa
fisubrs
int
fdivs
adc
test
xor
dec
lods
pop
je
lock
sbb
bound
sbb
or
add
jle
es
cmp
or
add
sub
and
and
out
xor
jle
loopne
int
cmp
add
cmp
pop
aas
add
sub
or
out
cltd
out
cmp
sub
sti
js
sbb
cmpsl
cmpsl
and
cmp
mov
mov
outsb
sub
fst
loope
push
or
imul
jo
ss
sub
lods
adc
or
and
xor
fimull
out
negb
call
testl
sub
insb
in
add
xor
in
int3
shlb
xchg
mov
addr16
je
shll
pushf
jl
pop
andb
je
jo
lcall
push
push
dec
imul
imul
imul
cmpsb
imul
clc
shll
call
dec
loopne
fmul
sarb
xchg
mov
lcall
aam
movsl
imul
xor
imul
mov
dec
shll
cwtl
jl
xor
lcall
pushf
js
fdivs
push
dec
addr16
loopnew
sub
jo
and
or
sub
or
add
fldt
hlt
add
push
add
add
add
sub
cmp
pop
or
repz
jne
xchg
push
push
pop
dec
and
add
pusha
push
xor
or
adc
pop
add
add
add
addb
addb
addb
sti
out
add
adcb
sub
mov
push
and
fs
push
adc
insl
lods
jae
sbb
or
add
add
jo
add
ja
sbbb
mov
xchg
sub
enter
adc
adc
and
adc
add
and
pop
dec
add
push
add
add
add
add
inc
and
aaa
sub
add
fwait
nop
lret
sbb
add
out
xor
enter
add
call
arpl
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
rol
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
mov
icebp
cld
std
pushl
nop
mov
ret
jg
sub
add
push
jg
dec
cmp
data16
insl
cmp
dec
mov
or
add
das
das
or
push
dec
add
xchg
aaa
adc
outsl
jbe
shl
push
and
push
xchg
adc
aam
cmovno
jae
dec
inc
movsl
sbb
ss
dec
add
test
imul
ja
push
pop
inc
bound
and
fidivrs
popa
outsb
or
push
push
dec
out
mov
aaa
jns
aas
cmp
jne
jnp
and
sbb
mov
imul
push
iret
push
dec
push
jl
push
jne
dec
outsl
out
mov
push
jne
inc
cmp
adc
fidivrs
daa
and
xor
fcoms
mov
pop
clc
outsl
pop
push
jae
cmp
and
dec
or
push
inc
arpl
adc
adc
inc
mov
push
cmpsl
inc
outsl
js
push
push
inc
push
xor
lds
shll
outsb
xchg
jp
mov
pushf
jae
xchg
popf
pop
repnz
xor
pushf
stc
add
push
or
add
sbb
sub
leave
mov
xor
push
dec
inc
dec
pop
dec
dec
inc
add
enter
push
inc
dec
push
push
and
fidivrl
add
daa
lcall
nop
lods
in
out
push
ret
daa
flds
decl
fs
sub
sbb
add
push
add
push
xor
into
xchg
dec
and
movups
popa
leave
xor
dec
rcrl
pop
je
cmp
cmp
add
add
mov
nop
popf
sub
and
push
add
in
mov
inc
into
aaa
add
push
fwait
insb
orl
add
and
fmull
fsts
arpl
leave
incl
jnp
test
es
and
inc
in
int3
or
repz
idivl
mov
xchg
repz
addr16
out
test
jl
dec
add
pop
sbb
cmpsb
adc
pop
jg
pop
jl
push
ss
mov
aaa
lret
pusha
ja
test
mov
and
xchg
shlb
and
mov
or
dec
or
shlb
out
ret
insb
fs
push
cld
adc
sub
pop
and
inc
movl
aas
add
or
mov
adc
xor
xor
add
pop
and
iret
out
add
cmp
stc
sub
jle
and
xchg
xchg
cmp
cmp
cmp
je
sub
nop
imul
addr16
notb
sub
xchg
or
scas
xor
cmp
and
pusha
adc
rcrb
movsb
rcrl
or
jnp
rclb
push
decb
aam
mov
xor
push
dec
in
in
in
add
push
adcb
pop
xor
xor
sbb
fs
mov
sub
cmp
aad
pop
push
mov
out
idivl
push
xchg
pop
outsl
movsb
rolb
lock
mov
mov
cmp
jb
add
leave
jae
adcl
and
mov
aaa
fsubrs
je
pop
sub
xor
add
lahf
add
test
ja
add
jo
and
xor
insb
rcrb
jg
or
jg
dec
jle
daa
sub
cmc
mov
mov
sub
loop
imul
sub
mov
pop
mov
xchg
sbb
stos
ljmp
pop
pop
mov
aas
enter
sub
adc
out
pop
or
or
mov
xor
ss
das
xor
out
out
aad
das
adc
pop
loop
pop
jmp
fs
icebp
outsb
pop
mov
add
pop
rolb
int3
dec
fs
and
or
jnp
dec
and
push
sarl
loopew
repnz
xor
jnp
add
pushf
add
scas
cmp
add
ja
hlt
jg
cs
inc
push
inc
inc
popa
lea
inc
pop
mov
jne
push
dec
outsb
sbb
add
sbb
push
shlb
insb
inc
inc
pop
fdivs
dec
aaa
inc
cmp
push
nop
cmp
sbbb
stos
xchg
mov
push
lret
push
mov
push
mov
test
sbb
imul
imulb
sub
xor
gs
jno
add
sti
in
test
popf
cmp
cs
pusha
jno
addr16
idiv
cmpl
outsb
insb
or
jo,pt
and
and
fstl
fbstp
das
xor
cmpsb
mov
inc
sub
shll
fadd
lods
dec
shll
sub
cmpsb
imul
pushf
sbbb
fs
sub
pop
call
enter
cmp
pop
lock
test
dec
jae
lcall
lods
cs
shll
pop
xor
fsubrs
cmpsb
imul
push
clc
shrb
cs
xor
push
in
int3
pop
lods
xchg
cmpsb
imul
notl
add
shlb
push
clc
lcall
js
xor
call
lcall
in
movsl
imul
xor
push
cld
fdivs
dec
shll
and
push
lock
cmpsb
imul
or
enter
xor
mov
sbb
hlt
lcall
nop
je
xor
cmpsb
imul
les
dec
shll
mov
add
adc
rcrl
add
cld
lock
xor
shll
lods
xchg
mov
je
pop
push
out
xor
dec
xor
or
cld
into
and
in
rcrb
adc
cmp
jnp
pop
je
pop
or
cmp
mov
add
xchg
push
sbb
mov
adc
inc
fs
push
setnp
jp
sbb
lcall
mov
cwtl
daa
xor
and
push
add
add
add
shll
or
orb
or
or
or
neg
sbb
push
cmp
xorps
adc
add
pusha
cmpl
xor
enter
xor
fsubs
push
pop
push
pop
pop
xor
pusha
cmpl
insl
stos
and
das
dec
rcrl
das
xorb
pusha
xorl
shlb
or
sahf
enter
mov
orl
xlat
fwait
mov
loope
pop
xor
add
and
mov
dec
push
in
incl
das
add
cltd
inc
cmpsb
adc
and
or
or
je
adc
adc
push
add
and
xor
stc
in
test
or
andb
fcomip
repz
addr16
mov
cld
inc
jle
cmp
das
shll
inc
pusha
sbbl
frstor
mov
iret
mov
in
call
iret
push
jle
push
add
pop
pop
fcmove
in
scas
in
fidivl
rcr
fsubp
stc
cmp
jle
push
inc
cmp
inc
mov
repz
add
add
popa
sub
stos
and
pop
int
das
jo
arpl
dec
loope
outsb
mov
aas
subb
jmp
gs
subb
add
cltd
add
adc
mov
pop
sbb
adc
data16
repnz
or
fmull
mov
sbb
leave
xchg
daa
fs
adc
repnz
sbb
or
arpl
sbb
xchg
daa
dec
pushf
sbb
push
push
pop
dec
push
jns
lock
and
in
daa
or
pusha
cld
jp
cld
or
fcoms
orb
testb
jmp
xor
jnp
pop
add
stc
mov
ja
add
and
mov
cmp
call
and
xchg
dec
pop
js
add
outsb
mov
outsb
js
jae
and
add
jl
xor
shll
jo
push
rcrl
inc
cmp
dec
shll
adc
cs
shll
or
ja
imul
dec
imull
sarb
movsb
cwtl
mov
dec
js
pop
or
and
cs
xor
ret
jb
inc
cs
push
xor
add
dec
push
push
push
push
mov
or
adc
mov
decl
mov
inc
add
sysexit
push
andb
daa
sbbl
repz
add
imul
fwait
cmpsb
jmp
adc
xor
insl
xor
xchg
and
push
ja
inc
into
lcall
das
add
jb
cmpxchg
mov
add
cli
or
or
ret
mov
in
and
adc
iret
aas
stc
and
sbb
into
sbb
rorl
jmp
lock
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
ljmp
scas
sahf
inc
stc
mov
adc
mov
decl
js
inc
outsl
inc
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
ljmp
jbe
int3
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
idiv
jmp
dec
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
incl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
decl
pop
mov
and
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
lods
std
decb
and
add
sti
aas
jno
or
fbld
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
call
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
cmp
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
aas
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
and
movsl
jmp
cmp
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
call
arpl
cmp
mov
cmp
xlat
cmp
mov
decl
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
call
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
mov
std
orl
sub
enter
fmuls
jae
dec
leave
jp
inc
xor
scas
add
add
push
inc
sub
or
add
insb
add
add
pop
cs
add
dec
inc
xor
or
push
add
add
pop
push
outsl
insb
jne
or
nop
sub
lahf
dec
gs
jne
js
cmp
outsb
cmp
xlat
xor
xor
and
mov
insb
jae
or
xchg
mov
into
outsl
push
gs
scas
pop
addb
dec
jnp
insb
xchg
das
jns
fs
imul
das
inc
js
arpl
xor
lods
sbb
es
push
push
movsb
push
jg
mull
arpl
or
fsubrs
and
je
dec
outsl
fs
add
add
insl
jae
data16
and
sub
inc
sahf
jbe
dec
or
inc
gs
push
jns
stos
mov
arpl
fidivl
inc
adc
imul
out
fstpl
xor
insl
or
mov
adcl
dec
leave
jo
push
adcl
push
sbb
mov
push
push
push
push
inc
adc
mov
fs
insl
jg
ret
pop
mov
sub
or
outsl
dec
cmp
je
mov
pop
arpl
ret
addl
fisttpll
pop
inc
das
jae
or
pop
ret
rcr
pushfw
inc
pop
gs
cmp
mov
mov
dec
mov
dec
or
arpl
push
jo
out
mov
xor
and
mov
out
sbb
mov
push
xor
fs
int
pop
mov
sub
popa
cmp
jo
cld
call
adc
sti
and
xor
test
sub
xor
cmovne
aam
inc
mov
dec
dec
jbe
add
xorl
mov
sbb
outsl
jns
pop
jmp
es
jge
or
je
push
outsb
ja
add
xlat
sbb
mov
insl
iret
and
or
andb
insb
test
lods
adc
outsl
fs
mov
rcll
ficompl
scas
dec
jae
or
push
ret
rclb
sub
ds
fs
push
movl
or
test
ja
sbb
or
pop
dec
inc
dec
or
cmp
inc
pushf
push
popa
test
jl
inc
dec
xor
or
push
dec
out
scas
or
int3
jo
xchg
adc
dec
and
test
fwait
mov
bound
xchg
call
addr16
icebp
add
inc
mov
pop
das
push
insl
pushf
adcw
add
mov
dec
gs
push
mov
and
mov
sbb
and
mov
and
jnp
jae
push
nopl
or
mov
dec
push
dec
jo
jl
roll
sub
push
sub
or
inc
dec
jle
insl
dec
out
aam
cmpsl
adc
fldcw
fwait
sub
or
popf
mov
xor
push
mov
fldenv
dec
or
dec
adc
idivb
jo
pusha
out
push
add
or
cmpsl
fsts
ja
jae
insl
jmp
fldt
and
ja
pushf
or
jne
ja
and
and
jae
dec
clc
inc
loopne
push
fisubrl
or
push
push
and
adc
adc
outsb
lcall
mov
pop
or
lds
or
pop
pusha
ljmp
in
cmp
adc
and
or
sbb
push
and
adc
or
push
call
push
add
or
or
and
inc
or
and
jae
adc
inc
and
cmp
or
sub
out
decb
push
inc
jne
dec
daa
sub
inc
xor
lock
add
push
adc
push
call
filds
or
lock
sbb
adc
or
or
pop
adc
neg
out
and
sbb
adc
adc
or
or
push
xchg
call
or
or
adc
inc
insl
push
cmp
push
cltd
push
inc
xor
pop
std
jbe
mov
jg
das
add
add
push
cltd
and
push
or
mov
or
pop
and
sbb
and
adc
sbb
adc
syscall
push
sbb
sbb
sub
sbb
or
movlps
lock
add
or
in
outsl
dec
xor
sub
pop
or
adc
adc
xchg
outsl
jg
jb
push
adc
cmp
push
add
push
dec
imull
sbb
std
call
push
sbb
adc
aas
adc
adc
adc
sub
and
or
incl
adc
adc
sub
cs
xor
in
decl
or
pop
pop
adc
sbb
xor
push
adc
sbb
sbb
das
mov
lcall
sbb
lock
push
lock
xchg
push
stos
call
dec
imul
js
add
int3
pop
ja
das
xor
mov
add
pushl
add
push
adc
and
adc
incb
adc
mov
add
push
push
jns
add
push
inc
lret
push
sub
ret
or
sbb
jp
mov
add
in
jg
or
adc
or
pop
and
push
dec
push
add
or
pop
push
and
xor
mov
aas
push
adc
or
cltd
and
lock
stc
add
pushf
push
jg
sbb
daa
or
call
push
or
pop
sbb
or
sti
mov
push
push
push
push
sysret
or
push
sub
stos
fcmovnu
fdivrl
jp
or
or
add
add
mov
add
orl
add
push
or
insl
sub
sbb
or
or
mov
mov
nop
and
lock
xor
push
jle
lret
lock
lock
add
dec
adc
sbb
inc
andl
push
imulb
in
clc
pop
push
sbb
or
cmp
adc
int3
inc
or
sbb
jo
dec
fistps
ljmp
or
adc
or
pop
sbb
mov
sub
and
sub
dec
dec
popw
adc
sub
or
xor
cld
jle
lock
or
or
jmp
lods
jge
xchg
or
loopne
pop
sbb
push
xchg
and
add
fildl
adc
inc
sub
rorb
pusha
sub
sbb
or
pop
push
enter
add
in
dec
decl
cmp
roll
je
or
pop
or
dec
pop
dec
in
add
sbb
adc
inc
or
or
and
or
sub
lea
mov
cwtl
pop
adc
aaa
add
jg
andb
xor
inc
or
sbb
adc
and
and
psignd
mov
push
jne
mov
or
std
jbe
or
aaa
dec
adc
sbb
and
push
shlb
stc
ss
lods
loope
ss
add
sub
adc
outsl
lods
nop
pop
cmp
push
or
or
mov
imul
xchg
and
add
dec
or
push
push
mov
xchg
inc
lock
xchg
and
or
sbb
arpl
mov
mov
lock
pop
lock
loopne
xor
inc
pop
popf
inc
mov
mov
jge
sub
adc
pushf
and
ret
clc
push
adc
and
inc
and
dec
dec
stos
or
pushw
xor
adc
and
add
rolb
sbb
call
orb
xor
add
das
push
inc
add
outsl
aad
adc
sbb
mov
push
mov
jle
jns
inc
sbb
sbb
in
test
in
fcomip
lock
add
sbb
push
adc
sbb
or
push
femms
bound
out
inc
jmp
and
ljmp
ret
dec
xchg
test
push
lock
pop
lock
or
cmp
pop
mov
aaa
outsb
adc
sbb
add
add
lock
sub
mov
add
pop
adc
or
xor
cmp
aaa
push
add
pop
sbb
push
fbld
loopne
sbb
incl
or
orb
add
pop
xchg
cmp
fmuls
adc
jecxz
test
sbb
out
movsb
sbb
jl
enter
fiaddl
fdivrl
lock
or
mov
stos
fldl
push
add
insb
fldcw
adc
or
sub
xor
outsb
arpl
scas
and
mov
cwtl
stc
sbb
or
or
jae
or
add
and
and
add
pop
adc
xor
sbb
sbb
fidivrs
and
or
or
lock
sbb
cwtl
add
jbe
pusha
add
mov
in
add
in
repnz
adc
cmp
sub
or
push
xchg
xchg
adcl
add
adc
mov
add
inc
cli
pop
stos
ficoms
add
and
add
cmp
xor
add
ss
cmp
add
or
push
add
pop
adc
add
dec
add
cmp
adc
push
xor
inc
jge
fs
mov
lock
add
rorb
or
movsl
cmpsl
sub
push
cs
push
add
add
push
jb,pn
aad
data16
push
loop
pop
fadds
add
es
push
shlb
xchg
rorb
outsl
dec
jae
arpl
mov
dec
add
mov
cld
sbb
mov
gs
inc
mov
and
add
add
movd
and
add
incl
add
cmpb
jne
pusha
mov
lea
push
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
