out
rolb
sbb
add
add
add
xor
and
out
jne
jp
jg
mov
mov
add
leave
sub
int
mov
inc
push
adc
clc
or
mov
add
mov
fwait
outsl
xor
gs
ss
push
imul
sbb
sarl
incl
inc
add
push
jns
add
incl
push
aaa
jb
inc
mov
movl
add
inc
mov
add
jmp
pop
and
incl
inc
mov
call
push
inc
outsl
push
mov
insw
dec
mov
jne
fiaddl
jle
dec
dec
add
imul
dec
insl
or
pop
add
in
mov
je
shl
pop
loope
incb
lret
mov
adc
imul
pop
lock
dec
add
mov
mov
jg
pop
cwtl
cmp
inc
jl
inc
jmp
dec
dec
dec
push
mov
add
xor
orb
mov
imul
add
cld
cmpsl
stc
call
call
inc
sub
mov
dec
sub
mov
decb
mov
push
mov
roll
dec
inc
mov
add
push
lds
pusha
ljmp
fbstp
je
dec
push
inc
inc
mov
sub
mov
mov
lock
jae
push
dec
pop
cmpl
cmp
add
cmp
dec
mov
bound
jns
cs
inc
push
sbb
jno
pushf
incl
outsl
xor
push
push
dec
sub
data16
roll
fistl
sbb
enter
mov
lcall
outsl
rcrl
clc
xor
push
and
clc
clc
add
dec
lahf
xchg
aaa
jmp
dec
xor
add
mov
jo
dec
adc
test
mov
push
inc
dec
mov
aad
cli
addr16
pop
es
aas
jnp
outsb
add
test
push
dec
or
add
jmp
mov
pop
std
daa
add
dec
mov
push
lret
cmp
xchg
loopne
pusha
pop
ret
out
xor
aaa
adc
push
shll
inc
in
jo
scas
push
push
inc
mov
push
je
sbb
imul
int
push
ss
and
jb
fs
cli
inc
fcoms
mov
imul
jae
xor
out
mov
sub
popa
push
dec
mov
pop
adc
dec
arpl
mov
and
das
imul
repz
ret
xchg
dec
inc
js
sbb
fmuls
aaa
insb
cld
sub
add
shl
cmp
les
dec
cmp
mov
stos
add
inc
outsl
xchg
add
movsl
fistpll
sbb
mov
loopne
ret
cmp
mov
add
jno
push
xor
icebp
inc
filds
aaa
aaa
jns
inc
mov
imul
ret
and
or
hlt
inc
push
jp
push
aaa
add
test
jne
mov
fs
jnp
outsb
mov
xor
ret
adc
ja
dec
inc
add
cwtl
incl
jne
mov
dec
mov
jmp
xchg
xlat
jne
dec
pushl
pop
arpl
inc
pop
mov
push
inc
sub
push
mov
inc
in
aas
mov
and
dec
inc
imul
shr
orb
dec
push
ljmp
dec
aaa
pop
xlat
add
mov
jo
push
pop
jbe
add
movl
addr16
arpl
loopne
fbld
inc
loopne
jbe
jbe
or
mov
mov
inc
pop
les
xor
dec
mov
sbb
mov
jmp
jl
bound
mov
dec
stc
add
jo
sahf
mov
out
lods
les
outsl
arpl
lock
jge
mov
xor
adc
ss
inc
inc
inc
nop
pop
decl
jl
jae
inc
je
add
inc
inc
inc
push
mov
pop
lahf
add
inc
data16
rcrl
xor
mov
jb
xor
das
adc
dec
outsl
inc
push
sub
stos
push
inc
adc
push
test
push
xor
out
les
sbb
add
mov
lahf
dec
jbe
xchg
js
js
add
inc
mov
addb
mov
inc
clc
pop
scas
loopne
cld
stc
ret
inc
mov
sti
xor
inc
dec
pop
dec
cld
ret
xor
mov
rcll
out
add
jo
or
lock
aaa
cmp
insb
lock
or
mov
mov
add
xor
or
loope
ja
mov
push
outsb
cmp
jns
inc
outsb
inc
aaa
dec
cmpb
leave
xchg
cli
add
or
sbb
imul
in
js
incl
xor
or
jl
cmp
bound
push
inc
push
shr
popa
les
test
test
std
adc
scas
rorb
fmull
inc
stos
adc
adc
sub
cmp
cwtl
out
dec
outsb
outsb
mov
fldenv
jns
push
inc
mov
pusha
push
dec
jge
mov
xchg
xor
jne
xor
cmp
mov
mov
mov
dec
add
ja
jne
ret
inc
push
add
jae
pop
push
stos
cli
das
clc
jae
aaa
mov
mov
add
mov
sub
inc
arpl
inc
push
dec
adc
hlt
adc
add
ret
jns
ja
adc
rcrb
clc
leave
ret
mov
add
popf
cmp
inc
mov
popf
cltd
decl
adc
outsb
mov
dec
add
add
dec
fdivrp
stos
ss
ret
add
inc
mov
add
mov
dec
outsb
inc
bound
lock
shll
dec
push
mov
and
sub
je
cli
jmp
fisttpl
imul
or
ja
add
rorl
and
push
ret
add
dec
mov
out
je
push
enter
dec
jo
sarb
push
ret
ss
fldl
sbb
pop
jb
mov
and
mov
push
push
lock
dec
ja
insl
add
dec
aaa
addr16
shlb
push
bsf
push
gs
lret
outsb
push
push
inc
add
shll
lods
lods
mov
nop
aas
or
in
nop
xchg
cld
sub
lock
adc
es
push
jns
push
je
push
fwait
sbb
jne
lcall
shll
imul
sahf
imul
inc
imul
cmpsb
inc
sub
sbb
ja
push
cmp
xchg
out
repz
push
pop
imul
cmpsl
inc
call
enter
adc
push
rolb
imul
cltd
adcb
sub
imul
cmpsl
and
xchg
lret
sbb
mulb
insl
add
or
daa
pop
movsl
nop
popa
xchg
ret
test
dec
lock
adc
inc
jae
and
imul
add
ja
pushf
jl
jge
mov
mov
add
mov
inc
cmp
cmp
movsl
rcrb
cmp
mov
jnp
sub
enter
jne
imul
cmp
add
rol
mov
pop
adc
arpl
cltd
or
cmp
adc
imul
mov
lcall
inc
add
push
rol
push
aad
and
sbb
and
aad
mov
in
inc
adc
cmp
ja
dec
mov
test
xchg
arpl
mov
mov
jb
mov
pop
sbb
add
pop
test
je
and
jbe
pop
stc
lea
sbb
cmp
adc
xlat
sub
adc
and
and
and
lret
adc
push
push
sbb
int
pop
rcll
pushl
popa
adc
outsb
dec
jb
jecxz
add
sub
push
push
enter
outsl
nop
and
imul
jbe
add
into
jns
xor
cmpl
xchg
ss
add
movl
dec
xchg
jno
xchg
xor
enter
and
addl
add
inc
jnp
xor
push
loopne
sbb
add
and
repz
pop
aad
addr16
push
mov
rcll
add
mov
mov
push
xor
jo
xchg
nop
sbb
add
add
pop
xor
mov
push
mov
mov
add
scas
mov
das
adc
sub
in
mov
mov
sbb
jl
push
xor
mov
subb
fs
imul
inc
es
mov
jecxz
or
imul
lods
xchg
sub
stc
mov
sub
daa
imul
cwtl
cmovp
bound
and
add
xor
inc
in
or
repnz
cmp
xor
rcrl
lea
jbe
push
add
in
in
dec
sahf
sbb
pusha
inc
add
movb
dec
mov
pop
mov
mov
and
xchg
dec
and
and
and
in
cltd
pop
xchg
test
repnz
cwtl
inc
push
lcall
arpl
jle
mov
adc
stos
add
and
xor
popa
mov
or
or
cmpsl
xchg
sbb
mov
int3
and
or
add
jmp
lahf
cmpsl
inc
inc
push
bound
pop
xchg
sbbl
jecxz
orb
jno
notl
lea
test
jge
jnp
imul
into
rcll
lahf
cltd
and
repnz
lds
aam
clc
lahf
dec
test
cmpsb
dec
insl
ret
imul
add
das
iret
mov
enter
mov
mov
mov
sbb
js
ja
test
mov
and
pop
pop
cmp
sbb
pop
push
andl
xchg
scas
add
shl
xor
jns
adc
xchg
inc
jb
mov
jmp
cld
push
lods
add
push
adcb
dec
les
mov
and
jb
sbb
xor
xchg
mov
adc
mov
mov
and
icebp
inc
arpl
test
jecxz
imul
nop
dec
inc
sbb
push
bound
arpl
ret
shlb
add
iret
aad
mov
cltd
pusha
popa
ds
xor
mov
cs
test
and
popf
dec
fbstp
jno
call
es
jo
lds
xor
xchg
cmp
push
das
xor
scas
adc
or
lcall
dec
mov
pop
sbb
insl
sahf
and
sti
dec
xor
lfs
jo
adc
sbb
jno
xor
mov
mov
mov
xor
sub
lds
arpl
add
stc
sub
xor
adc
xlat
nop
pop
xor
aas
and
jno
jne
lcall
jl
dec
leave
aam
inc
sub
push
xor
dec
popa
fwait
and
xchg
jmp
ds
pop
and
movsl
mov
test
push
sbb
scas
jne
add
mov
sub
or
pop
sub
xor
push
cli
nop
mov
pop
cwtl
adcb
ret
xor
test
test
test
push
lods
inc
adc
mov
loopne
add
bound
xchg
pop
cwtl
addb
jns
or
xor
sub
inc
jb
push
test
mov
sbbl
loope
out
shlb
scas
xor
jmp
sbb
add
repnz
fs
orl
jne
mov
test
sbb
sbb
dec
leave
in
adc
pop
sbb
xchg
xor
dec
sub
push
add
shll
sahf
mov
sub
mov
xchg
xchg
pop
sub
aam
jmp
cmp
sub
add
outsb
xor
inc
roll
aas
test
xor
pop
xor
pop
cmpb
push
pusha
push
inc
cmpsb
aad
xchg
xor
jae
pop
pop
repnz
xor
scas
in
dec
dec
xor
inc
xor
clc
add
loopne
and
lcall
loop
push
mov
scas
mov
call
imul
add
imul
loopne
inc
mov
jne
sbb
dec
push
pop
xchg
pop
mov
shlb
push
insl
mov
test
mov
repnz
add
jns
and
out
je
lock
inc
shl
mov
and
es
fwait
je
inc
aaa
out
push
dec
sbb
or
cmp
dec
popa
push
in
mov
cmpsl
rcll
push
jb
mov
fld
xor
push
movl
les
fwait
adc
test
jmp
ds
mov
loope
sbb
pop
repz
push
orb
imul
loope
or
lea
add
push
sbb
test
popf
imul
mov
mov
and
xchg
lcall
insl
xor
cmpsb
bound
imul
or
cs
xchg
shl
shll
push
jno
movsl
scas
test
mov
and
lahf
cld
cmpsl
pusha
push
add
adc
jecxz,pn
rclb
mov
push
or
sub
ret
int
scas
roll
inc
jmp
rclb
pop
adc
cwtl
sbbb
push
popa
mov
xchg
add
pop
inc
leave
jno
pop
pop
and
pop
loopne
xor
mov
subl
cltd
lea
sub
out
push
hlt
and
sub
push
xchg
xor
shrb
xor
stc
imull
test
pop
cmpsl
fldcw
and
mov
jb
add
xchg
sub
xchg
and
inc
enter
push
mov
jmp
xchg
pop
cmp
adc
mov
inc
aad
push
mov
dec
push
or
sahf
or
popf
mov
sub
add
jne
aad
mov
fstpl
mov
xchg
pop
adc
mov
add
push
xchg
inc
or
inc
xor
movsb
pop
scas
xor
inc
xor
inc
adc
out
xchg
dec
outsb
push
lahf
inc
aaa
mov
adc
xchg
jbe
xchg
mov
add
sub
sub
xor
push
vsqrtss
mov
mov
and
adc
dec
sbb
xchg
les
sub
movsb
push
gs
and
mov
mov
movsb
push
shrb
aad
scas
push
ret
push
add
repnz
inc
je
pop
sbb
mov
sbb
or
ja
aaa
jnp
test
adc
inc
push
push
lds
aas
sub
in
mov
std
js
pop
pusha
and
je
aad
dec
or
aaa
mov
test
sub
xchg
and
pop
jb
pop
rclb
pop
movsl
mov
dec
fucomi
push
inc
add
xchg
stos
roll
stc
mov
add
push
push
xchg
loop
andl
pop
push
fucomi
add
es
cmp
ret
out
jne
and
xchg
pop
hlt
imull
dec
push
in
cmc
icebp
in
sbb
mov
adc
nop
xchg
inc
or
nop
or
test
mov
shlb
cmp
cwtl
test
jecxz
mov
ss
in
mov
pop
or
and
negb
leave
daa
add
push
add
andl
sub
jg
into
cwtl
test
add
and
sbb
ror
fs
sub
and
enter
and
push
or
gs
dec
pop
xor
adc
fs
in
mov
arpl
push
xor
mov
mov
pop
mov
int
andl
add
push
and
mov
add
lock
scas
mov
aaa
mov
push
adc
fwait
pop
sbb
ret
jo
dec
testl
daa
paddusw
or
fwait
decl
movsl
adc
fimull
lcall
push
or
or
pushf
lea
call
into
addl
add
and
adc
jmp
ja
addr16
mov
pusha
jne
dec
and
jmp
out
inc
les
xchg
xor
lret
out
cmp
mov
rolb
sbb
add
cmp
adc
adc
test
iret
and
add
jb
into
inc
popa
mov
pop
pop
and
movsb
inc
imul
sarb
aaa
addr16
or
jbe
addr16
jmp
inc
mov
mov
push
push
fdivr
add
movsb
mov
push
or
mov
stos
rclb
rol
sahf
or
repnz
test
sbb
mov
add
add
or
mov
sbb
pop
loope
add
call
or
mov
xchg
and
lret
cmp
es
test
lods
or
pop
adc
cltd
repz
pop
xchg
movq
and
inc
lds
mov
cltd
and
jle
dec
shr
push
loopne
adc
adc
insl
lcall
xor
and
arpl
push
and
and
lds
out
cld
jo
mov
dec
or
xor
or
push
adc
push
sub
inc
cmp
dec
inc
and
inc
pop
xor
xchg
or
ret
loope
stos
inc
inc
lds
je
xor
divl
adc
adc
cmp
add
push
xchg
cmp
inc
adc
push
ret
sbb
xchg
dec
xor
lcall
push
sub
and
movsl
add
fwait
inc
je
movsb
je
test
mov
adc
ret
fildl
sbb
pop
mov
mov
add
xchg
jmp
push
loope
mov
pop
movsb
add
fs
andl
inc
mov
cwtl
mov
pop
dec
cmp
xchg
fiadds
pop
mov
push
loop
inc
ret
push
int
or
mov
pop
out
xor
mov
mov
xchg
and
nop
inc
sahf
addl
bound
push
jecxz
jle
push
es
stos
enter
cmp
addr16
and
bound
jecxz
test
cmp
jae
cmc
shlb
adc
mov
and
mov
add
int
fs
adc
lods
fists
xchg
rcl
imul
cwtl
stos
test
xchg
pushf
fistl
fbstp
dec
shl
add
add
push
pusha
cmpsb
or
jnp
inc
andb
push
push
lds
sub
adc
adc
loop
push
jne
and
cwtl
mov
out
xchg
cs
aas
in
out
add
arpl
mov
popf
push
mov
mov
es
in
push
stos
inc
loopne
lds
pusha
cmp
push
sub
cmpsb
or
imul
enter
add
scas
and
clc
ss
rcll
add
push
fildl
in
arpl
dec
inc
aad
sarb
or
sub
adc
xor
inc
js
jmp
mov
and
cmpb
movsl
cmp
dec
dec
pop
insb
mov
test
loop
xchg
dec
cmp
mov
mov
cmpsb
and
add
adc
mov
stos
loopne
popf
sbb
jne
sub
inc
mov
stos
add
cmp
pop
mov
test
cmp
sbb
mov
bound
int3
filds
cmp
pop
xchg
sbb
in
lods
mov
stos
lock
jno
dec
mov
cmp
xchg
and
adc
fbstp
xor
jno
add
test
lea
and
cmpl
cs
mov
mov
push
imul
popa
or
mov
into
xchg
dec
iret
test
stc
add
and
adc
and
push
and
loopne
jge
stos
or
cwtl
mov
dec
or
jne
mov
call
imul
mov
pop
pop
leave
xor
fimull
fwait
or
imull
pop
mov
bound
and
outsb
sbb
mov
stos
cwtl
mov
ljmp
test
stos
push
add
cmp
lds
push
ja
sub
add
shrb
jno
add
or
imul
ficompl
inc
subl
add
and
cwtl
mov
out
mov
ss
xor
ljmp
inc
cmp
loope
cmp
dec
pusha
sub
push
sbb
sub
adcl
rcll
mov
push
and
mov
xchg
xor
mov
pop
fdivs
sub
or
inc
sbb
cltd
lea
mov
stos
mov
or
mov
push
inc
shlb
rolb
add
bound
fiaddl
out
add
push
lods
xor
sbb
mov
inc
mov
or
inc
mov
fs
xor
mov
inc
or
inc
mov
xchg
dec
ljmp
ret
cmp
mov
mov
nop
iret
push
leave
mov
xchg
loopne
negl
inc
outsl
imul
or
cmp
dec
adc
xor
fidivs
pop
inc
push
push
adc
and
fisttpll
pop
lcall
push
adc
or
push
xchg
mov
test
xchg
xor
adcl
pop
dec
mov
push
sub
jne
add
insl
mov
add
sub
aam
fs
inc
enter
and
shlb
test
iret
dec
cmp
or
mov
adc
adc
push
out
push
movsl
mov
xorb
push
dec
xor
mov
cmpsb
xorb
or
mov
xchg
xchg
fiaddl
dec
aam
and
dec
in
in
cmpsb
dec
hlt
push
aaa
imul
add
orb
or
cmp
les
es
fildl
gs
andb
add
inc
daa
sub
push
push
push
pop
mov
test
pop
aam
push
push
inc
lcall
xchg
xlat
imul
mov
xchg
inc
push
and
sbb
or
jecxz
sub
cmp
adc
nop
jo
loope
mov
insb
xor
rcrb
ret
mov
xor
rolb
inc
jl
add
sbb
je
cwtl
loopne
cs
cltd
mov
stos
stos
add
mov
adc
sbbb
shl
stc
addb
and
in
xchg
push
mov
gs
lcall
iret
dec
fwait
mov
inc
xor
inc
jnp
inc
xor
icebp
clc
ja
pop
adc
push
add
xchg
mov
and
fnstcw
addb
adc
or
add
adc
sbbb
or
mov
push
and
dec
xlat
fsubs
xchg
dec
xor
and
rclb
adc
xchg
mov
mov
pop
xor
adc
push
inc
rcl
inc
imul
or
daa
icebp
cmp
ds
loop
push
or
add
and
gs
cmp
rcll
rsqrtps
in
lret
bound
push
xor
dec
adc
lea
and
or
loop
mov
rorl
bound
dec
add
mov
xlat
pop
dec
xor
pop
xor
pop
add
adc
test
or
xor
shlb
bound
cmp
jle
bound
mov
sub
test
jno
jae
xor
je
int3
pop
jge
xchg
xor
repnz
scas
jae
pop
nop
cmpsl
inc
push
lret
cld
push
int
inc
mov
arpl
outsb
mov
cmp
shlb
loope
xor
gs
lds
dec
aaa
dec
and
aad
stos
loopne
push
inc
fstpt
lock
or
adcl
xchg
push
das
bound
jecxz
andb
mov
ret
jecxz
mov
mov
push
inc
dec
test
push
and
nop
outsb
pusha
lods
popf
cltd
data16
inc
lods
movb
sbb
push
imul
imul
adc
iret
prefetch
push
or
popa
push
sbb
dec
js
mov
test
clts
add
adc
pusha
fadds
add
sub
callw
dec
add
jo
imul
jg
or
jae
xchg
sbb
rolb
mov
imul
mov
popa
lods
mov
shll
inc
pop
aam
imul
aad
mov
andl
push
push
insl
xorl
inc
push
rolb
adc
cs
leave
push
loopne
add
icebp
pop
sbb
or
ret
or
lcall
mov
cmp
push
jmp
and
cmpsb
add
aad
sub
es
add
cmpsl
aad
sub
out
sub
push
mov
inc
jmp
jne
repz
fidivs
add
lret
cmpsb
xchg
add
and
push
jae
mov
xor
lret
inc
xchg
pop
push
sbb
push
or
movsl
lea
mov
cld
inc
cmc
inc
or
cmp
je
cmpb
sbb
push
adc
es
in
sub
push
pop
enter
or
xchg
out
add
mov
mov
xchg
add
loopne
popa
std
sbbb
add
sub
sub
xchg
and
or
cmp
pop
inc
push
sbb
pop
lods
mov
xchg
mov
sub
xor
and
adc
cltd
out
lret
sbb
push
rorl
adc
movsb
inc
and
je
sbb
and
aad
or
xor
roll
sub
in
push
and
adc
aaa
into
xchg
mov
push
std
pop
test
adc
xchg
stc
insl
enter
fs
lea
or
cmp
cs
lahf
rorb
jns
imul
out
xor
inc
push
cmp
std
pop
and
and
scas
ret
dec
xor
dec
rorb
mov
pop
jno
add
cwtl
mov
test
movsl
inc
xchg
lods
loopne
xor
xor
xchg
add
jae
shl
fwait
sbb
xchg
mov
mov
cmc
add
sbb
inc
leave
in
inc
and
add
test
push
xor
push
dec
aas
js
lahf
je
lea
repz
push
or
fwait
pop
push
xor
mov
or
push
shrl
rorl
or
add
pop
and
add
mov
jno
and
adc
inc
sbb
push
cmpsb
sub
cmp
push
xchg
sbb
nop
sbb
scas
jnp
or
cmpsl
test
inc
adc
adc
mov
push
mov
mov
nop
push
push
push
lret
les
cmc
cmpl
movntps
mov
jecxz
sub
sbbb
adc
mov
dec
sub
inc
and
dec
test
loopne
scas
or
push
cmpsb
stos
or
dec
test
insb
shrl
lahf
mov
movsb
inc
daa
test
pusha
xor
int3
lods
mov
adc
and
shlb
roll
in
pop
cltd
adc
shlb
orl
xor
jns
mov
add
nop
cmpsb
push
loopne
cmp
cmp
in
pusha
or
pop
mov
or
hlt
rolb
enter
mov
sub
andb
push
push
cltd
in
test
pop
xlat
mov
ds
xchg
add
add
adc
dec
les
xor
xor
pop
dec
add
or
mov
and
pmaddwd
pop
cmpsl
mov
xor
or
dec
pushf
orl
ffreep
add
mov
and
dec
adcb
popa
xchg
xchg
adc
scas
xor
adc
or
jno
mov
jmp
adc
stos
mov
arpl
push
dec
incb
loope
and
add
sbb
jge
pop
aad
je
mov
cwtl
nop
cltd
mov
inc
cmpsl
insl
cmpsb
adc
push
mov
stc
adcb
cltd
and
mov
fwait
or
sub
jbe
shll
mov
and
scas
mov
jo
and
shrb
iret
or
or
leave
add
popf
push
or
and
add
push
push
jl
mov
andl
lods
inc
sbb
xor
cs
jns
fidivl
mov
push
push
jg
push
cwtl
call
or
je
sbb
jo
adc
mov
insb
loope
add
push
jne
push
jbe
loope
and
cmp
sub
mov
lea
add
movsb
or
adc
adc
xchg
mov
aam
mov
inc
jno
add
xchg
adc
add
and
pop
push
pop
cld
and
std
add
xorl
leave
add
jo
leave
jne
dec
subb
cwtl
sub
inc
mov
cmp
clc
aad
sub
mov
arpl
das
cwtl
xor
dec
les
test
xchg
jnp
test
sbb
push
aam
pop
imul
subl
int3
enter
pop
jne
add
or
xchg
in
fmuls
cmpsb
lcall
add
jnp
push
sub
pop
pop
out
dec
or
je
jne
add
jo
testb
jp
push
icebp
clc
mov
inc
in
mov
or
inc
sahf
sub
ret
lahf
or
or
leave
roll
or
dec
xor
xchg
mov
fld
or
dec
gs
stos
lds
mov
jo
outsl
pop
gs
or
push
jo
push
mov
sbbb
mov
dec
or
add
push
fldl
dec
jae
rclb
popa
inc
jb
test
adc
dec
rcrl
les
add
aad
into
leave
scas
xor
jge
pop
push
add
cli
pop
pop
mov
add
adc
inc
xchg
pop
je
mov
out
shrb
add
lret
stos
mov
test
inc
adc
movsb
mov
ss
int
inc
mov
add
jno
sub
imul
inc
cmp
push
mov
dec
mov
inc
aad
aas
testl
mov
loopne
and
jo
mov
rolb
or
xchg
pop
and
xchg
mov
cmp
push
aad
sub
xchg
xchg
cwtl
mov
add
movsb
cmp
in
and
or
push
jmp
loope
les
leave
jbe
jmp
jno
push
mov
lahf
in
inc
shrb
add
xchg
cwtl
jno
adc
mov
jo
xchg
lds
push
arpl
mov
rolb
add
mov
xlat
xor
add
lret
inc
xchg
movsb
or
popf
addr16
push
mov
mov
enter
mov
pop
insb
subb
mov
rolb
es
lds
mov
loope
mov
shlb
xor
test
test
inc
aas
jbe
pop
cmp
stc
popa
push
insl
jecxz
into
mov
sbb
adc
cwtl
inc
daa
jns
push
and
lcall
inc
add
sbb
cwtl
push
adc
jno
fistpl
jno
lods
or
lea
fwait
and
cmp
stos
daa
add
and
jmp
cmp
or
dec
mov
add
dec
cmpsl
xchg
mov
jb
sub
xchg
int
test
call
nop
xlat
sbb
and
addb
mov
lret
adc
mov
inc
cmp
aaa
xchg
inc
pusha
addr16
shll
add
orl
add
cmp
or
out
movb
cmp
mov
or
adcl
xchg
dec
dec
jno
inc
out
out
or
and
cmp
mov
ffree
stos
in
stc
bound
push
sbb
add
sub
mov
psadbw
add
jge
sbb
daa
xor
adc
dec
lcall
cmp
or
lea
sub
jmp
jno
push
add
xorb
push
and
loopne
inc
in
xchg
push
std
ret
frstor
sbb
iret
and
test
inc
xorl
sub
or
imul
inc
sbb
cs
pushw
add
sbb
call
popf
inc
in
sub
jecxz
leave
push
inc
or
and
lods
imul
inc
rorb
das
roll
inc
xchg
sti
add
or
ljmp
test
mov
icebp
mov
and
mov
or
cltd
mov
inc
pusha
and
mov
or
movsb
xor
dec
jne
outsl
outsl
inc
and
adc
adc
les
test
in
incl
fcomip
movsl
dec
ljmp
xchg
xchg
sbb
xchg
pop
mov
xor
test
adc
scas
sub
lods
sub
or
ljmp
push
outsl
sahf
lods
pop
adc
cmp
dec
dec
icebp
mov
xor
sub
mov
dec
inc
pop
adc
xchg
push
lcall
popa
inc
inc
adc
into
aam
jae
xor
repz
test
mov
cli
nop
std
test
sbbl
bound
in
rolb
inc
xchg
subl
mov
push
and
or
mov
mov
pusha
add
test
mov
adc
dec
jo
add
mull
fsub
test
push
cmpsb
dec
cmp
loop
sbb
iret
jbe
shrb
pop
add
lds
mov
jns
push
adc
and
es
push
and
push
dec
xchg
fidivl
or
push
mov
adc
dec
mov
push
orb
shll
adc
xchg
out
lock
lods
ss
fildll
leave
dec
dec
frstor
xchg
sub
or
add
adc
or
push
mov
or
add
in
bound
push
arpl
push
xor
add
mov
adc
xor
pop
je
enter
inc
inc
aam
mov
push
or
repz
shrb
xchg
sbb
lock
mov
adc
sub
or
xor
mov
add
xor
add
rcll
loopne
jo
inc
cmpsl
mov
pop
and
or
mov
imul
or
push
shll
lcall
adc
push
or
add
jge
roll
push
mov
and
mov
xchg
ss
rorl
pop
ljmp
fstpl
mov
jne
pushf
test
inc
sub
jp
es
xchg
scas
movsb
fcoms
mov
or
cmp
or
mov
xor
roll
clc
stos
movsb
jns
jae
imul
sbb
jnp
test
mov
inc
ret
inc
daa
or
xchg
sub
and
sarl
imul
and
inc
mov
inc
cs
xor
add
fnsave
mov
arpl
push
rorb
jnp
sbb
sbb
push
mov
jns
push
xor
sub
or
nop
std
addb
shrb
cmp
stc
test
cmp
sub
cmp
jle
xchg
jl
mov
data16
lcall
lock
push
xor
and
cmp
pop
push
sti
add
and
test
push
push
push
or
sarl
mov
shll
jnp
jbe
inc
loope
or
inc
aam
adcb
dec
loopne
adc
inc
dec
rclb
push
data16
pop
jne
mov
jno
std
cmp
shlb
or
mov
shrb
and
add
xorps
adc
test
in
scas
rcr
jb
and
add
nop
popl
out
test
inc
sahf
arpl
inc
and
push
shr
cmpsb
cwtl
jae
nop
popa
inc
pop
adc
and
stos
movb
jns
imul
push
imul
inc
xchg
inc
cmp
push
and
stc
adc
add
pop
sbb
or
loopne
jle
inc
dec
sbb
dec
xchg
cs
pop
xor
sbb
xlat
push
jo
push
push
pop
and
push
subb
loope
call
pop
xchg
push
dec
inc
xor
adcb
and
movsb
iret
sti
ljmp
jbe
mov
stos
xchg
repnz
cmpsb
lcall
xchg
and
dec
adc
add
jo
ds
cltd
xor
scas
andb
cs
call
test
push
sbb
popa
sub
es
xchg
mov
jo
inc
push
addl
jnp
add
jmp
ja
sbb
cltd
inc
xchg
or
inc
sbb
and
push
and
jns
and
push
lods
and
add
add
mov
ljmp
cld
out
dec
js
push
push
or
add
pop
roll
popf
int
roll
lock
insl
orb
add
adc
cmp
rol
aad
imul
les
inc
repnz
cmp
mov
je
add
loopne
cwtl
xchg
push
pop
push
aam
add
cmpsl
test
or
dec
nop
add
mov
and
pusha
movsb
stos
ret
push
lods
movsl
cmpsb
test
sbb
push
sub
mov
ret
es
xlat
jmp
sahf
and
out
xchg
test
push
pop
xchg
xor
lods
addl
test
mov
aad
mov
arpl
stos
and
xchg
iret
fwait
or
xorb
movb
adc
dec
dec
pop
add
push
mov
cmp
lea
cs
sub
jo
lret
dec
loopne
add
add
loope
sbb
mov
jecxz
add
jo
xor
dec
pop
jl
inc
mov
add
test
mov
cs
out
jmp
lods
xchg
mov
xchg
add
jnp
popf
add
mov
rorl
adc
fadds
and
mov
push
push
inc
shrb
adc
in
in
jge
sbb
into
les
cmpsl
ja
inc
xchg
adc
les
subl
pop
push
jae
lock
mov
and
sarl
loopne
xchg
adc
add
fstps
inc
add
mov
jmp
mov
dec
cs
test
or
arpl
or
std
or
movsb
inc
mov
jae
and
or
adc
je
popf
sub
adc
jo
jno
call
adc
add
lods
jno
push
mov
lahf
clc
jne
es
add
push
int3
ret
mov
xor
sbb
lds
in
mov
loope
fistl
adc
jo
shrb
jbe
test
add
add
nop
dec
add
aam
xlat
add
inc
mov
cmpsb
sbb
jo
pop
xchg
je
rcl
and
add
pop
sub
out
sub
lahf
sbb
sub
pop
push
mov
leave
and
xchg
test
inc
je
test
xor
mov
add
flds
inc
inc
enter
lds
cld
or
mov
loop
or
adc
push
add
push
push
lea
sbb
jo
xchg
pop
sub
pop
inc
jno
xchg
xchg
jb
pop
ror
sti
push
and
adc
stos
jecxz
push
stos
xchg
aaa
pop
test
add
push
imul
mov
cwtl
cmp
xor
insb
add
sub
test
popa
push
dec
cmp
sbbb
sub
add
imul
jo
or
jmp
inc
les
xchg
rclb
sbb
inc
add
pusha
push
pusha
add
mov
sbb
ret
in
push
inc
push
pop
imul
sub
test
test
add
and
outsb
arpl
stos
sbb
add
testb
pop
adcb
and
cmp
das
add
mov
in
xor
fcoml
sub
lea
add
pop
inc
lahf
pop
lods
jg
adc
stos
sbb
add
es
dec
inc
test
xchg
or
inc
shrb
mov
popa
push
and
in
out
pusha
jecxz
pusha
test
inc
ljmp
bound
fcmovb
or
int
pop
cwtl
adcb
inc
inc
cmp
xchg
pop
rcll
ret
repnz
mov
jo
pop
and
hlt
mov
inc
jmp
leave
jae
pop
jo
push
and
rorb
lahf
lods
stos
fbld
outsb
sbb
lods
test
pop
pop
cmp
xor
dec
xor
nop
mov
outsb
jmp
sbb
mov
loope
addb
mov
jo
jns
jo
adc
rcrb
lea
sbb
and
add
xor
pop
popf
sbb
addr16
sbb
or
pop
dec
add
das
repnz
mov
call
adc
out
test
fisubl
pop
push
pop
les
nop
lret
imul
cltd
and
push
test
movsl
mov
test
test
dec
add
jecxz
and
push
inc
sbb
movb
std
fsub
sub
sbb
sbb
dec
push
mov
jl
push
xchg
sbb
add
or
jmp
cltd
rcl
mov
nop
mov
push
enter
adc
add
dec
cld
subb
dec
add
cmp
add
add
test
paddd
loop
xchg
js
pop
shrb
jge
movsl
dec
ds
mov
dec
test
push
adc
cmp
xchg
pop
movsl
adc
push
inc
test
push
or
loopne
ret
repz
cmp
aad
sub
and
js
pop
mov
pop
lods
push
cmp
test
inc
push
roll
xchg
je
leave
jecxz
loope
pusha
sbb
dec
loopne
push
cmp
xlat
add
xor
adc
sub
pop
add
push
fldcw
jge
cs
push
ss
movsb
pop
mov
clc
roll
or
subb
cmp
dec
sub
pop
ja
inc
xor
cwtl
mov
je
enter
xorl
or
push
jp
push
dec
xchg
push
push
add
push
sub
sbb
addb
jne
outsb
loope
inc
leave
sarb
xor
and
inc
pop
pop
cmp
xchg
cmp
pop
sbb
pop
xor
or
and
pop
and
sbb
pop
leave
pop
outsl
roll
arpl
add
int3
dec
call
cmc
add
nop
push
roll
test
add
adc
jno
leave
sarl
jb
fmuls
add
jge
push
and
scas
je
mov
pop
xor
cwtl
or
rolb
push
and
cltd
sub
in
and
cld
in
and
ja
and
xchg
adc
or
loope
or
mov
movsb
push
sbb
rclb
dec
mov
jne
or
shrb
je
inc
aaa
popa
lret
ljmp
aad
xchg
pop
repnz
and
xor
ja
xchg
das
and
das
xchg
movsl
imul
outsb
loop
jge
push
xor
orl
cmp
jle
sbb
mov
mov
jno
cmc
mov
popa
in
rol
adc
popa
add
add
xchg
in
jns
stos
and
sbb
ret
in
xor
or
sub
xchg
lea
fcmovb
mov
fsubs
mov
inc
sahf
or
lcall
xchg
dec
push
and
rolb
fs
push
lahf
push
sub
mov
aad
or
add
and
mov
leave
stos
adc
or
sbb
or
cs
mov
lock
push
push
lods
xor
test
push
sbb
call
pop
add
sub
mov
or
or
push
and
fistps
or
dec
inc
sbb
loope
sbbb
repz
shrb
imul
mov
mov
je
outsb
je
jno
test
push
loope
dec
inc
mov
data16
outsb
jnp
push
sub
mov
out
pop
cs
test
cli
mov
fisubrl
stos
lea
and
std
push
test
mov
jbe
inc
and
ja
loopne
sub
mov
data16
test
xchg
and
adc
and
or
loopne
add
or
pop
pop
push
mov
sbb
push
repz
adc
mov
popf
cmc
movsb
ret
pop
adc
testb
sub
imul
and
or
push
and
sbb
jno
sti
sub
sbb
iret
pop
add
ret
mov
subl
push
push
rorl
inc
sub
sub
fs
mov
jmp
test
call
sbb
das
xor
push
popa
stos
sbb
sub
pop
leave
push
movb
push
les
push
and
mov
aad
or
arpl
lcall
inc
out
popf
sub
add
mov
mov
inc
xchg
movsb
and
or
scas
mov
les
mov
std
bound
jmp
cmpsb
pop
ret
add
repnz
or
sbbb
enter
adc
movsb
call
or
xor
jmp
mov
mov
push
jmp
inc
inc
loope
or
mov
lds
adc
and
test
sbb
sub
xchg
sub
mov
inc
jns
push
or
out
aam
movsb
nop
sbb
in
mov
roll
or
rorb
jp
jae
jmp
test
lea
shl
add
and
dec
popf
xchg
pop
adc
aam
push
or
stos
movsb
inc
adc
inc
sahf
mov
mov
stos
push
xchg
and
cmp
fstpt
push
mov
and
cmp
add
mov
adc
in
mov
add
inc
dec
pop
add
lea
daa
xchg
mov
hlt
adc
adc
cmp
xchg
and
mov
in
dec
or
inc
xor
dec
jmp
adc
lcall
movsb
psubw
int
add
iret
iret
lods
cmp
push
push
int
sub
sub
pusha
add
hlt
fsubr
xchg
fcos
push
cmp
adc
or
xor
add
and
pop
add
adc
lock
popa
stc
sbb
stc
or
js
and
adc
and
dec
sahf
repz
les
outsb
sbb
push
stos
mov
pop
adc
sbb
pop
lret
imul
outsl
cmpsl
sbb
or
push
dec
aad
xchg
aas
cltd
adc
insl
mov
dec
jp
sbb
jbe
je
jne
es
sub
mov
call
xor
sahf
push
or
dec
or
inc
imul
push
push
inc
inc
dec
pop
add
pop
pop
mov
xchg
sti
mov
adc
or
cmp
cmp
and
dec
cmp
mov
int
mov
xor
test
ret
jl
push
dec
adc
jae
aas
xor
add
lcall
dec
and
adc
inc
mov
and
jo
or
and
outsb
inc
pop
add
jbe
insl
icebp
cmp
jecxz
jb
jecxz
gs
or
sub
and
xor
adc
dec
adc
push
sahf
imul
xor
fidivrl
mov
sbb
inc
mov
repz
lods
or
or
movsb
push
add
cli
lret
dec
scas
mov
push
sarl
jnp
loopne
adc
adc
ret
cmp
mov
lea
sbb
mov
xchg
in
scas
inc
and
push
push
movsb
adc
add
mov
push
adc
inc
adc
lds
pop
push
push
mov
mov
cwtl
out
or
roll
enter
and
pop
leave
test
imul
push
push
arpl
bound
loope
pop
sbb
inc
mov
test
add
in
cmpsb
push
add
les
jne
jae
xor
mov
sbb
mov
mov
arpl
add
sub
andl
xchg
aam
sbb
xor
test
stos
push
jbe
adc
sbb
mov
add
inc
popa
stos
or
cwtl
rolb
mov
add
pop
data16
jmp
lret
ds
xor
jne
into
pop
push
push
aad
sub
adc
lock
cli
fs
adc
cmp
stos
icebp
and
xor
jmp
add
std
jbe
mov
mov
call
sub
out
andl
clc
ds
add
dec
andl
inc
jbe
mov
xchg
inc
out
fbld
mov
pop
ret
aam
data16
push
push
imul
and
sub
xor
inc
add
xchg
push
fildll
sub
stc
sub
or
adc
stos
inc
sbb
lret
adc
popf
shlb
dec
add
push
pop
inc
jo
cs
movb
adc
push
add
mov
stos
enter
xor
loopne
push
loopne
push
add
test
and
subl
sub
jo
repnz
sbb
test
sbb
ret
xchg
pusha
mov
lods
mov
stos
pop
imul
cmp
mov
mov
pop
jbe
rol
inc
jno
in
jecxz
adc
jmp
insl
add
rdtsc
lahf
xor
dec
adc
aad
sbb
lea
inc
sahf
inc
pop
fnstenv
dec
dec
cmpl
inc
rcrl
mov
or
fstps
and
outsl
jo
loope
fldt
scas
cltd
popf
in
xor
mov
sbb
insb
call
pop
cli
add
sbb
mov
inc
aad
push
xchg
and
jle
and
test
and
scas
add
sub
adc
mov
movsb
imul
and
xchg
jl
or
pop
les
dec
and
pop
xchg
adc
bound
repz
dec
jmp
xchg
dec
int3
js
add
inc
repnz
inc
enter
add
lock
sub
xor
pop
xchg
mov
imul
and
push
call
or
mov
daa
mov
shlb
inc
fstpt
lods
jmp
or
leave
jae
imul
fldt
jmp
in
inc
gs
mov
sub
xorl
xor
inc
int3
add
test
sbb
sbb
xchg
scas
rcrb
fldl
pop
sti
add
pop
jb
sub
add
testb
inc
xor
lock
adc
pushf
jns
mul
add
andb
mov
cwtl
jecxz
test
or
stc
test
sub
cmp
test
sub
or
movnti
push
push
cmp
aad
ffree
adc
fstps
dec
std
das
fistl
cmp
test
call
and
lcall
ret
mov
mov
bound
movsl
fistpll
std
inc
lcall
gs
jecxz
mov
pop
dec
es
cs
mov
xor
popa
bound
in
test
sbb
jl
and
xchg
adc
xor
mov
mov
insl
nop
sbb
jmp
nop
xchg
adc
rcl
dec
sti
cmp
mov
rclb
xchg
cmpsb
pushf
xor
push
jo
clc
std
addr16
adc
mov
adc
inc
add
shl
jecxz
sub
dec
add
pusha
pop
dec
adcl
mov
sbb
imul
les
pop
icebp
sbb
add
jmp
or
jo
cli
das
outsl
enter
push
pop
push
fwait
adc
push
popl
xchg
mov
dec
xor
jle
and
inc
xchg
es
pop
cmc
cmc
cmp
ret
loop
xor
mov
fcmovnbe
sbb
inc
pusha
insl
push
push
xchg
inc
out
mov
adc
lea
push
xchg
pop
cld
pusha
mov
mov
and
mov
xor
and
cmp
push
mov
icebp
cmpsl
pusha
mov
jmp
lret
mov
iret
lea
and
or
inc
inc
or
jg,pt
or
adc
mov
and
and
sub
cmpsb
mov
mov
add
movsb
dec
leave
repz
jl
pop
out
sbb
or
sti
shrl
push
test
xor
push
or
adc
push
pop
xchg
rcrl
sbb
rorb
or
dec
or
xor
jae
xor
loopne
pop
lcall
xchg
xchg
push
dec
mov
aaa
xchg
iret
ja
fcmovu
sbb
adc
and
add
sbb
cmp
inc
repnz
adc
add
test
scas
inc
dec
dec
cmpsl
in
mov
cmp
xor
mov
and
out
addb
mov
jne
movswl
add
inc
adc
push
dec
dec
pop
adc
call
aam
shlb
arpl
call
xchg
out
aam
jmp
push
xchg
xor
cmp
call
adc
mov
int
lds
loopne
xorl
hlt
jmp
xor
cmp
mov
cs
cmp
outsb
sbb
cmp
xor
aam
and
stos
pushf
imul
stos
imul
push
xchg
loope
mov
leave
add
stos
vrcpss
sbbl
cld
shlb
test
and
shll
pop
cmp
sub
lods
jmp
or
dec
mov
mov
sub
test
or
adc
cmp
adc
shlb
ljmp
add
jb
popa
xchg
or
daa
ljmp
fbld
dec
or
add
pop
pop
aam
push
or
stos
bound
pop
cli
daa
insb
add
setno
dec
lds
test
lcall
jb
cmp
imul
or
add
jae
adc
inc
adc
cmpsb
cmp
mov
cmp
adc
push
sub
pop
add
xchg
push
scas
push
idivl
jmp
roll
xor
push
or
sbb
xor
push
sub
shlb
fidivl
jnp
mov
and
lea
js
xchg
inc
das
icebp
add
adc
pop
pop
sub
test
push
andl
test
rcrl
pop
xchg
push
add
push
in
jo
jns
pushl
mov
clc
mov
and
mov
mov
xlat
in
xchg
mov
sbb
or
and
movsb
dec
dec
and
jo
rcll
pop
mov
and
xchg
and
out
mov
add
orb
xchg
and
mov
mov
and
dec
imul
lea
aad
xor
inc
sti
cmp
sbb
idivl
cs
pop
adc
and
daa
sub
jecxz
shr
xchg
pop
pop
inc
jb
xchg
jle
mov
push
adc
das
inc
ljmp
in
pop
loopne
rolb
in
std
or
and
adc
jge
adc
pusha
push
or
add
mov
jne
scas
mov
iret
pop
inc
fdivl
mov
and
aaa
dec
jmp
aad
add
add
adc
adc
or
mov
and
xchg
xorb
mov
and
daa
in
movl
inc
inc
mov
sarl
adc
movsl
dec
sbb
test
rclb
gs
add
or
mov
dec
and
in
shlb
pushf
popa
clc
lods
mov
sbb
cmpsb
stos
lahf
or
push
fimuls
mov
add
loope
icebp
out
xor
pop
insl
bound
xchg
cmp
jae
and
les
and
push
xchg
pop
loop
test
push
sub
scas
enter
and
lds
arpl
sar
jmp
outsl
pop
and
cmpsw
xor
insl
js
pop
loop
addr16
xchg
pop
addb
addl
pop
call
lods
rep
lods
and
je
add
enter
pushf
inc
cmpsl
stos
mov
push
adc
mov
inc
add
out
int
xor
mov
inc
push
std
cwtl
add
jo
lret
mov
roll
dec
popa
and
add
test
ret
inc
rcpps
push
decl
xchg
daa
or
aaa
xchg
xor
nop
mov
adc
fldl
orb
mov
inc
inc
insl
add
sbb
jo
test
pop
cmp
push
xchg
jno
dec
inc
movsl
cmc
push
add
adcb
lods
or
jae
add
scas
ffree
bound
rorb
sbb
mov
fildl
enter
inc
pop
mov
lock
cwtl
loopne
inc
pop
int
scas
and
sbb
cmp
add
shlb
cmp
in
mov
out
xchg
mov
es
shlb
andl
scas
pop
imull
shll
dec
aam
lcall
sub
loop
dec
xor
xchg
jb
shlb
imul
stos
inc
outsb
dec
fadd
add
mov
mov
movsb
pop
jo
dec
dec
popa
das
gs
gs
jp
or
fnstenv
bnd
push
outsl
cmp
iret
push
aad
arpl
icebp
test
dec
pop
inc
add
cmp
enter
sbb
push
imul
mov
and
push
or
rcll
mov
loop
test
cwtl
mov
loope
add
lahf
testl
addl
mov
adc
iret
xor
mov
push
daa
mov
int
nop
lret
nop
mov
pop
add
push
jg
mov
lods
xor
inc
push
dec
aaa
xor
pop
push
inc
and
rcll
or
imul
and
addl
dec
inc
push
jecxz
dec
stc
lock
mov
adc
mov
sbb
loope
xor
stc
mov
imul
fld
ds
in
ss
mov
aam
cmp
sub
cmp
shrl
and
add
inc
mov
aad
in
mov
xlat
push
andl
inc
pop
jne
or
xor
dec
mov
dec
mov
into
mov
mov
stos
xchg
inc
mov
pop
out
adc
cmpl
dec
arpl
inc
pop
movsl
rcll
mov
test
mov
shlb
xor
nop
push
sub
dec
test
lods
adc
fsubrl
xchg
adc
loope
popa
mov
fsubrs
aas
add
mov
test
loopne
inc
cmpsl
push
jl
push
cmp
cwtl
inc
xor
adc
jb
mov
xchg
push
add
or
sbb
add
add
xor
addb
mov
subl
xor
addl
inc
push
jmp
test
add
lret
sbb
stc
add
pusha
sbb
or
pop
ret
push
andl
lds
sub
add
cli
push
loopne
test
adc
mov
or
orb
mov
leave
lret
pop
push
add
shrl
jo
sub
pusha
shl
imul
and
cmp
adc
inc
jno
adcl
push
xor
sub
in
push
xor
sbb
mov
adc
loop
shll
inc
loopne
dec
cmp
xlat
sbb
mov
icebp
push
ljmp
test
cwtl
cmp
in
mov
sub
je
pop
iret
aam
je
cmp
and
scas
mov
mov
inc
add
cmp
loope
xor
stos
jg
das
xor
jnp
enter
ret
mov
or
jnp
cwtl
or
stc
lcall
sbb
dec
mov
xchg
sbb
cltd
pop
and
dec
cld
adc
sbb
popa
push
dec
mov
mov
mov
or
mov
incb
add
daa
mov
and
scas
cmpl
std
in
les
push
ret
nop
outsb
inc
sub
xchg
inc
mov
sbb
pop
stos
outsl
inc
cmpsb
in
or
sbbl
mov
or
out
test
pop
adc
shll
and
test
lds
xchg
xor
ss
in
and
inc
xchg
rorb
and
cltd
xor
cwtl
icebp
cmpsl
jbe
pop
rolb
aam
popa
lret
dec
push
and
pop
adc
or
mov
add
mov
mov
and
and
loop
ffree
inc
andl
xor
inc
push
movsl
dec
jp
outsl
insl
xchg
dec
or
mov
ss
lcall
mov
test
or
push
sbb
lea
xor
mov
ret
movsl
arpl
xor
xor
xchg
cmp
aad
xchg
leave
mov
mov
movsb
shrb
push
adc
cs
leave
lods
ss
add
daa
cmc
mov
test
ljmp
lcall
cwtl
inc
push
push
add
in
or
es
add
adc
cmp
jns
loopne
adc
or
and
add
dec
leave
pop
and
inc
push
sti
ljmp
dec
mov
jo
sarb
add
and
push
cmp
add
stc
pcmpeqw
pop
or
mov
xor
rolb
mov
stos
pop
pop
xchg
jl
inc
inc
dec
mov
call
inc
loopne
addl
cmpsl
test
xchg
jne
and
sbb
push
stos
loop
or
xor
popf
nop
pop
pop
rcrl
and
enter
and
imul
push
cmpsb
lcall
inc
and
lods
jmp
fists
gs
xchg
cmp
inc
adc
aaa
adcl
into
inc
test
xor
dec
adc
jge
and
inc
adc
fbld
or
iret
cli
stos
xor
pop
aaa
push
sbb
or
push
ljmp
insb
ljmp
or
sbb
leave
jbe
fs
jmp
orb
mov
mov
enter
and
and
push
fisubrl
mov
shrl
push
xchg
sub
mov
pop
mov
inc
or
push
subl
pop
andb
sub
movsb
adc
xchg
jns
xchg
push
inc
loopne
push
or
jb
mov
and
or
push
mov
and
sub
insl
insb
imul
jnp
or
aad
or
pushf
cmp
inc
cltd
mov
and
cld
test
imul
xor
in
cwtl
push
jne
jae
lcall
lahf
rorb
adc
pop
ret
bound
movsb
xchg
add
pandn
test
xor
fldt
rcrl
cmp
outsb
and
sub
cwtl
xor
or
lods
push
adc
pop
mov
stos
imul
mov
sub
jno
pop
push
push
cmp
add
out
inc
inc
push
fldl
inc
in
push
mov
in
jmp
sbb
fistl
dec
sbb
push
popa
push
inc
xor
clc
rorl
and
xor
and
mov
pop
and
testb
add
sbb
inc
sbb
inc
dec
add
shrl
addl
sahf
lcall
adc
and
push
pop
cmp
mov
jbe
cld
sbb
dec
test
test
push
adc
sub
and
or
sbb
pop
pop
inc
push
shll
inc
pop
inc
ds
add
movsb
xor
sub
push
mov
test
sbb
imul
test
pop
rcrb
jmp
add
mov
push
inc
mov
pop
or
xchg
sbb
lods
mov
sbbl
or
adc
stc
cmpsb
in
mov
cmpsb
rolb
mov
enter
mov
in
rolb
mov
jecxz
aad
dec
sub
cs
add
dec
add
inc
dec
inc
cmpsl
cs
push
inc
mov
push
add
stos
andb
lds
insb
test
test
je
roll
movsb
pop
cmp
incb
pop
adc
add
add
adc
xor
testl
in
mov
sbb
inc
test
fnstsw
sbb
rclb
push
sbb
mov
stc
je
scas
dec
mov
popf
iret
jae
in
or
cld
and
nop
jns
jecxz
add
imul
jb
push
sti
push
mov
and
mov
mov
inc
xor
test
or
stos
mov
push
out
pop
push
sbb
lahf
mov
leave
paddusw
das
push
stos
push
mov
pop
push
push
mov
mov
or
in
imul
sbb
imul
sub
adc
adc
push
cmpsl
xchg
test
sub
jne
sbb
dec
scas
dec
mov
stos
gs
dec
mov
dec
std
mov
test
int
pop
test
in
and
jo
sub
push
mov
xor
sbb
jo
inc
stc
pop
sarb
test
push
jmp
adc
sub
jg
arpl
test
sub
stos
sub
sbb
aad
mov
jge
jno
xchg
pop
dec
leave
fs
mov
cld
repnz
mov
push
push
cld
push
pop
rclb
add
and
sbb
cltd
mov
pop
adc
xor
or
sbb
adc
sub
or
aad
arpl
xchg
sub
popa
mov
call
mov
mov
push
sbbl
loop
lock
add
fidivrl
jg
aam
or
movsb
xchg
pop
sbb
mov
and
jne
dec
lds
pop
cmp
shll
sub
push
push
adc
iret
xchg
dec
loope
mov
jbe
sbb
negb
xor
mov
mov
mov
xchg
test
popa
dec
insb
loope
stos
adc
cmp
ret
xchg
jbe
stc
mov
dec
stos
lods
out
ljmp
out
test
adc
mov
push
dec
add
push
orb
pushl
gs
rolb
clc
sub
mov
sbb
mov
or
cmp
dec
dec
xor
and
and
fbld
mov
inc
popf
loope
sbb
adc
jns
inc
ljmp
mov
pop
xor
subl
sub
call
and
adc
jns
mov
jmp
in
sub
pop
fwait
pushf
mov
stc
xchg
es
andb
mov
add
jp
sbb
sbbb
or
push
or
adcb
je
or
and
and
mov
pop
pop
sahf
imul
aas
test
mov
and
mov
jne
jmp
lret
pop
es
or
and
adc
push
push
push
sub
or
and
test
outsb
adc
in
and
mov
les
sub
or
adc
push
mov
mov
xchg
loope
mov
shlb
inc
xor
loope
loope
bswap
and
cmpsl
popa
or
mov
and
lahf
push
leave
add
or
dec
push
mov
mov
and
mov
stos
sti
pop
ret
fsubrp
pop
fadds
add
add
adc
out
mov
sbb
sbb
imul
xor
sarl
mov
mov
add
mov
sub
jb
sbb
daa
nop
das
pop
loopne
mov
mov
daa
cmp
lds
imul
cmpsb
dec
inc
stc
mov
ret
dec
mov
cltd
mov
push
mov
xor
mov
add
addl
xor
loopne
les
adc
shrl
das
xchg
jns
or
cmpsb
add
mov
sbb
push
pop
cmc
or
dec
add
xchg
shl
and
xor
lcall
cmp
dec
inc
add
xchg
or
mov
popa
cmpsb
or
dec
cmp
popf
xor
imul
inc
inc
test
cmp
test
stos
jnp
lock
sub
jae
inc
cld
push
nop
outsl
adc
or
in
rorl
sbb
and
les
faddl
leave
loop
nop
inc
pop
push
sti
cltd
sub
jae
cmc
lcall
test
jbe
or
and
and
stos
rdtsc
nop
cmp
mov
add
ss
call
pusha
and
jp
adc
cmpsb
fwait
sbb
leave
add
rclb
push
stc
shlb
or
pop
nop
cmpsl
cmp
stos
test
in
cmc
jo
nop
mov
in
xchg
les
push
addl
pop
and
and
and
mov
test
mov
flds
jg
or
test
push
push
jp
test
mov
in
inc
or
adc
push
and
inc
push
xor
xor
orb
pop
inc
and
mov
dec
sti
xchg
add
sbb
pusha
dec
movsl
call
js
mov
cs
repz
push
xchg
cmp
imul
scas
add
add
dec
mov
cmp
add
xor
das
dec
add
es
dec
mov
jo
bound
xchg
xor
nop
push
cmp
nop
pop
mov
or
sub
icebp
push
push
xor
dec
mov
or
loop
test
addl
sub
adc
pop
jmp
dec
out
mov
inc
push
xor
data16
daa
test
lahf
inc
sbb
add
adc
daa
push
dec
sub
roll
stos
mov
in
sbb
leave
roll
or
add
ficomps
ret
iret
inc
mov
push
mov
adc
imul
mov
and
orl
jl
lds
push
gs
adc
pop
pop
push
xor
mov
push
call
decl
int3
aam
inc
push
es
unpcklps
and
push
ret
fildl
sub
sub
ret
jb
pop
arpl
repnz
mov
fisttpl
test
pop
icebp
inc
data16
inc
adc
clc
repz
pusha
loope
and
dec
or
mov
dec
cmp
pop
lds
sub
mov
and
cmpsb
and
scas
sbb
pop
and
movsl
sub
lods
scas
ja
and
inc
or
xchg
mov
mov
orb
jne
das
sub
xchg
cmpsl
and
pop
rorb
cmpsb
or
pop
popf
push
mov
add
les
sbb
mov
xchg
call
push
loop
xor
stc
or
xchg
and
cs
daa
xchg
add
and
add
rorb
dec
xor
movsb
or
enter
add
push
pop
jne
scas
nop
ja
insl
or
nop
push
xchg
int3
adc
and
call
ret
inc
jmp
mov
jno
rcrb
lds
test
sub
bound
cmp
pop
and
adc
pop
pop
push
sub
and
push
sbb
adc
pop
fstl
add
or
adc
pop
movsb
sub
cs
cmpsl
test
ret
or
add
add
dec
push
cmpsb
or
in
dec
outsl
add
adc
lcall
lods
jb
xor
add
mov
mov
dec
push
cmp
add
loop
xchg
adc
dec
lea
dec
xor
mov
mull
push
push
dec
adc
inc
xor
push
test
jo
push
test
adc
shrl
gs
sbb
add
add
xor
rcl
mov
push
lea
mov
stos
adc
shlb
adc
adc
jne
adc
call
or
and
adc
inc
insl
std
into
xchg
xchg
or
shrb
test
push
repnz
rolb
mov
ljmp
jae
and
and
dec
sub
repz
repnz
sbb
add
jbe
int
andb
dec
sbb
push
sub
push
call
popl
test
add
in
add
lahf
aad
cmp
jns
sub
inc
add
inc
xor
adc
dec
jae
popf
pop
cmp
sub
add
lret
push
enter
adc
lock
cmp
ficomps
push
mov
add
leave
mov
addl
or
mov
lea
test
add
add
xchg
aam
jmp
lds
push
push
bound
xor
xor
pop
sub
es
in
pop
popa
add
lock
xor
mov
pop
mov
arpl
xchg
mov
xchg
xchg
mov
push
push
mull
xor
cmpsl
mov
sbb
loope
add
add
test
inc
movsb
and
dec
sub
popa
sub
adc
xor
adc
or
xchg
inc
and
aaa
leave
in
in
lcall
aas
test
repz
xor
test
xchg
mov
and
inc
leave
mov
leave
lock
or
fcmovnb
shrb
jno
sti
jg
adcb
popa
ljmp
pusha
add
or
nop
dec
or
stos
jmp
out
mov
lea
das
pop
mov
fwait
pop
gs
sub
mov
je
fmuls
subl
sbb
xor
or
movsb
mov
lea
jmp
loope
or
movsb
outsl
out
stos
movsb
stos
sub
data16
stos
sarl
inc
dec
loopne
push
repnz
xchg
mov
mov
cmpsl
or
test
aam
jo
pop
add
xchg
sbb
adc
mov
fstp
jecxz
push
sbb
sub
add
jnp
mov
adc
aas
mov
add
mov
push
add
lcall
or
add
popf
add
inc
push
or
test
inc
jno
or
xorl
mov
mov
and
push
mov
je
lock
repnz
loop
jo
cmp
lret
jo
mov
pusha
mov
aas
orl
pop
pop
jle
lods
sub
addr16
popa
mov
push
cmpsl
inc
je
sub
xor
and
mov
and
stos
mov
pop
mov
inc
xor
dec
sub
mov
push
ja
sbb
xchg
shlb
jb
add
loop
xor
sub
or
adc
jae
inc
gs
adc
shrl
repnz
push
shrb
cmp
scas
leave
sbb
call
loope
pop
movsb
pop
scas
loopne
pusha
test
repnz
movsb
mov
pop
mov
inc
ret
mov
jo
push
sbb
mov
dec
mov
mov
movsb
clc
sbb
adc
inc
mov
push
inc
adc
and
test
inc
mov
hlt
adc
xchg
mov
enter
dec
movsb
dec
pop
xor
add
inc
int3
xor
test
repz
lcall
dec
or
jno
sbb
dec
inc
imul
and
test
stos
adc
inc
push
aam
push
cmpsb
bound
test
ds
add
test
push
test
mov
nop
and
into
inc
and
inc
dec
cwtl
test
shll
mov
mov
inc
jo
ds
aam
sub
mov
pop
inc
push
mov
das
das
sub
inc
pop
sub
add
cs
add
sub
xor
and
in
sarl
std
or
cmp
dec
sbb
shrl
test
test
mov
mov
jae
xchg
cmp
bound
lods
or
adc
dec
adc
ljmp
movsl
sub
loopne
test
imul
cmpsl
push
ljmp
les
push
push
push
sbb
push
sbb
fisttpl
add
pushf
cwtl
lea
push
push
and
push
cmp
cmp
push
jl
pop
sbb
jo
sbb
xor
insl
dec
sbb
add
cs
push
lods
les
mov
test
add
iret
jecxz
dec
lcall
js
and
xor
pop
sbb
inc
mov
jns
subl
shlb
bound
cmp
push
xchg
stos
stos
push
cmp
ret
jo
cmp
adc
ret
stos
fnstsw
mov
xor
sbb
add
stos
mov
add
addb
jae
jo
push
or
add
sub
ja
movsl
add
mov
push
fbstp
xchg
sbb
push
adc
ret
and
push
and
mov
cwtl
jo
inc
mov
adc
push
mov
and
push
sub
or
pop
fldt
inc
repnz
mov
add
test
test
push
rclb
inc
xchg
dec
or
jo
jmp
dec
xchg
dec
gs
in
xor
mov
inc
imul
adc
flds
inc
dec
and
sub
dec
test
sub
cmpsl
stos
dec
arpl
jmp
add
pop
push
pop
les
shll
dec
add
adc
pop
dec
push
insb
sbb
fwait
loopne
xor
mov
dec
faddp
inc
mov
cli
roll
pop
sbbl
das
pusha
xor
sbb
push
add
nop
push
rclb
das
inc
add
cmpb
mov
xor
and
dec
cmp
nop
js
daa
cmpsb
xchg
data16
jo
test
inc
mov
or
xor
jmp
jno
jo
pop
xor
aaa
push
dec
rorl
xchg
test
sbb
xchg
cwtl
sbb
in
add
pop
add
push
aas
je
cmpsl
mov
push
xor
movsl
inc
and
inc
movsl
jb
sub
adc
ds
jns
xchg
mov
jmp
push
xchg
xchg
mov
adc
cmp
xor
movsl
sub
mov
push
xchg
jne
dec
int
inc
push
cltd
pop
mov
and
push
mov
push
push
insl
jmp
cmpsl
add
sahf
inc
mov
scas
enter
cwtl
mov
push
add
adc
or
and
jo
and
nop
pop
mov
divl
jne
dec
xor
inc
xor
scas
hlt
scas
mov
mov
xor
or
xchg
rcr
push
lea
inc
adc
mov
lahf
jecxz
xchg
adc
ret
pop
enter
shlb
outsb
xchg
and
nop
cmc
mov
adc
or
out
dec
dec
lds
mov
push
jne
pop
push
dec
or
lods
and
xor
add
adc
mov
pop
jecxz
repz
ds
les
add
dec
adc
mov
aas
dec
addb
dec
sub
pop
add
add
inc
or
les
push
add
mov
sub
xchg
xchg
adc
or
inc
xor
mov
popf
mov
add
je
popa
push
push
jo
dec
xor
xchg
adc
or
push
pushf
xchg
pusha
push
clc
loopne
pop
fstpt
dec
push
insl
lds
filds
mov
imul
or
xor
iret
jo
push
xchg
rcrl
add
stc
inc
xor
cmc
xor
divl
add
mov
xor
repz
stos
pop
jo
inc
cmpsb
push
mov
and
lods
or
sbb
adc
loope
xor
or
inc
add
mov
dec
pop
les
std
or
fucomp
inc
and
rcll
insb
dec
rclb
jl
mov
decb
mov
int
jno
mov
or
inc
fildl
or
xor
aad
inc
xor
daa
fwait
jo
add
rclb
sbb
sub
or
or
inc
lea
dec
in
push
dec
or
arpl
orl
mov
inc
pop
fisttpll
aas
insb
orb
in
dec
mov
mov
and
adcl
int
jne
mov
adc
pusha
nop
jg
and
cli
fidivrs
xor
cmovae
loop
je
pop
dec
inc
push
xchg
jmp
mov
and
xchg
xor
mov
call
pusha
rolb
sti
sub
adc
call
add
test
push
test
push
push
pop
push
mov
mov
decl
lret
rcll
pop
add
shll
sub
dec
aaa
sub
or
outsb
pop
lret
int
push
adc
sahf
mov
sub
add
fsts
xlat
mov
shrl
pop
sbb
mov
imul
jl
dec
sub
bound
xchg
popa
pushf
add
add
cmp
push
cmp
in
imul
mov
add
or
inc
sub
in
imul
xchg
mov
mov
test
add
push
jno
mov
in
add
adc
adc
mov
mov
sti
xor
adc
popf
inc
sbb
mov
jnp
test
mov
add
sub
loope
iret
push
or
add
loopne
or
xlat
mov
es
aad
bound
jno
imul
daa
dec
inc
xorb
add
sbb
andl
cs
push
mov
mov
xor
inc
xchg
es
add
addr16
cmpsb
mov
add
add
loope
sbb
xor
pop
lods
xor
lahf
mov
mov
and
push
jne
add
loopne
or
mov
movsb
ljmp
inc
cmpb
jnp
adc
mov
add
adc
pop
test
stos
or
adc
sbb
and
imul
je
cmp
cmp
push
sbb
scas
mov
sub
push
mov
add
push
mov
mov
mov
mov
insl
dec
inc
dec
in
shll
push
test
mov
and
cmp
inc
push
pop
daa
push
xorb
sahf
repz
dec
and
inc
aaa
xchg
test
pop
push
lcall
nop
pop
xchg
push
inc
loope
inc
cmp
jp
sbb
dec
inc
mov
mov
es
push
jne
sub
loope
pop
push
movsb
and
aad
aam
inc
or
or
mul
repz
dec
or
pop
cmp
subb
jle
pop
shl
ret
sahf
rorl
push
cmpsb
jo
mov
addb
push
inc
pop
mov
inc
mov
fsts
call
xor
and
arpl
mov
push
mov
and
mov
loop
test
pop
and
pop
jno
enter
cmp
icebp
adc
insb
or
addl
push
leave
repz
fisttpl
xor
adc
add
jae
jmp
out
enter
pop
push
jecxz
mov
cld
testb
es
push
mov
mov
sbb
or
shrl
or
dec
push
cmp
sbb
sub
lock
and
adc
nop
push
int3
push
es
movsl
adc
mov
loopne
jmp
or
pop
popl
bound
popa
call
mov
mov
xchg
push
jp
xchg
and
and
stc
shl
or
push
insb
pop
and
sub
ret
add
dec
loope
fbld
jno
bound
sub
pop
insl
rolb
jg
sbb
in
mov
sbb
int
mov
mov
xchg
inc
adc
mov
push
aas
adc
push
xor
popa
pop
rclb
data16
shlb
and
xor
fdivrs
mov
pop
sbb
add
and
push
xchg
in
inc
add
push
xor
xchg
shl
inc
mov
loope
add
dec
cli
pusha
sub
inc
imul
lds
pop
lcall
les
imul
loopne
je
addl
jmp
push
gs
test
fwait
iret
lds
cmpsb
or
call
mov
mov
cli
jno
popa
xorb
dec
mov
cmpsb
cmp
cmpsb
add
push
jnp
lret
push
test
sbb
add
call
add
or
pop
test
xchg
adc
rorb
fildl
sbb
push
xchg
jo
mov
mov
cmpl
sub
add
repz
mov
push
test
push
jmp
imul
push
pop
sbbl
mov
push
pop
sub
adc
inc
popf
xchg
jle
mov
mov
pop
jne
repz
pop
movsb
nop
and
dec
pop
loopne
call
mov
jge
xchg
int
test
jne
sub
les
xorl
jp
pop
bnd
push
add
pop
adc
add
loopne
loop
imul
jp
or
cli
movsb
and
mov
xor
cs
xor
sbb
popl
inc
sbb
cltd
adc
popf
adc
jne
pop
es
adc
imul
add
and
repnz
xor
movsl
test
mov
inc
insb
or
pop
adc
inc
jno
jns
or
cmp
stc
lcall
loop
cs
iret
push
dec
cmpsl
popa
mov
dec
dec
iret
add
pop
adc
sbb
add
fs
test
and
test
test
dec
dec
push
pop
or
stos
sbb
cmpsl
xchg
xor
jne
gs
adc
es
push
test
sarl
xchg
ret
adc
jnp
inc
ret
inc
iret
fldenv
daa
cmp
scas
testb
add
jo
das
mov
cmpb
lcall
mov
sbb
pop
adc
pop
je
shll
loope
mov
sti
lcall
addr16
mov
sbb
add
jge
jno
sub
cmpb
push
je
rorb
and
enter
adc
xchg
inc
mov
adc
movsl
adc
mov
dec
xchg
adc
icebp
inc
xor
popa
mov
mov
mulb
mov
enter
add
add
mov
or
or
rclb
inc
and
push
lds
test
lret
xor
shr
aad
stc
loope,pn
xchg
cmpsb
movsl
sbb
mov
mov
lods
sbbl
lret
add
pop
adc
nop
test
adc
mov
nop
mov
roll
push
notl
and
sub
nop
adcb
and
xor
pop
sub
inc
mov
mov
lea
and
inc
lods
cmp
jge
inc
adc
lds
jge
mov
push
andl
movsl
lods
pushf
nop
addr16
pop
sbb
ljmp
push
cmpsb
mov
stos
cld
aam
out
popa
xchg
outsl
pusha
add
xor
or
in
pop
pop
xor
and
mov
icebp
fldl
dec
xchg
push
dec
adc
imul
push
rorb
fldl
test
ret
or
sbb
push
sbb
dec
call
dec
call
push
inc
cmp
xchg
leave
jb
es
xor
test
lods
mov
push
sub
pop
fldenv
ret
push
cmp
add
ret
adc
bound
test
xchg
xor
add
pop
inc
add
test
add
int3
stc
xor
or
or
inc
or
imul
scas
ds
xchg
cmp
inc
test
mov
adc
sbb
adc
icebp
mov
popa
or
add
add
mov
push
or
adc
loope
push
test
test
inc
push
insb
mov
add
pop
inc
jno
call
or
jne
or
xchg
xchg
adc
in
movsl
push
and
in
and
mov
push
repz
add
or
inc
and
imul
xchg
lods
jb
movsb
add
mov
mov
or
js
cmp
and
sbb
mov
xchg
test
es
call
cmp
push
lcall
push
and
inc
push
cmp
mov
pop
add
popa
popa
dec
sahf
repz
and
inc
gs
sahf
dec
push
sub
and
std
jg
sub
pop
and
xor
mov
cwtl
sbb
adc
imull
push
bound
mov
and
mov
and
pusha
add
or
movsb
cmp
or
loope
sbb
jo
and
mov
sbb
add
movsb
fs
adc
adc
inc
daa
inc
mov
test
int
cwtl
or
sub
add
xor
mov
or
mov
orb
gs
in
int3
sbb
rolb
cltd
mov
lock
aad
mov
stos
je
jg
adc
xchg
fbstp
adc
push
push
xor
orb
add
sub
push
inc
mov
add
shrb
dec
or
out
mov
pop
in
xor
add
add
mov
adc
xchg
outsb
movsl
sub
pop
xchg
jno
xor
cwtl
add
inc
xor
push
shll
repnz
in
pop
and
sbbl
or
loope
popf
andl
jnp
gs
and
sbb
or
int
sub
xchg
mov
fucomp
and
jmp
xchg
test
mov
es
imul
push
xchg
cmpsb
sub
push
and
rcll
adc
adc
test
stos
sub
lcall
hlt
add
sub
pop
aad
repz
mov
jbe
adc
stc
sub
push
and
mov
or
shrl
test
or
mov
mov
xor
push
pusha
or
loopne
pop
outsb
xor
add
or
popa
mov
fimull
imul
sarl
jno
jmp
mov
or
roll
nop
push
xchg
adcl
pop
aas
ret
call
dec
mov
jmp
xchg
mov
cmp
test
and
loop
fs
and
or
orb
mov
jmp
out
arpl
or
enter
xor
jge
dec
stos
scas
inc
lds
push
pop
cmp
adc
and
adc
adc
xchg
add
sub
cmp
mov
sub
add
sub
imul
repnz
xor
push
stc
les
sbb
daa
movsl
or
es
dec
or
repnz
cwtl
mov
and
sbb
xor
sub
pop
and
in
xor
and
or
adc
sti
adc
xor
push
push
mov
jl
pop
add
push
inc
ja
mov
add
sti
shll
andl
repnz
pop
add
scas
nop
or
sarl
add
cmpsl
xor
lock
pusha
xor
lret
rolb
mov
addb
mov
adc
imul
xchg
or
xchg
push
lahf
sbb
dec
arpl
bound
sbb
loopne
mov
or
lds
jecxz
xor
jle
orb
sub
cltd
imul
or
lods
orl
xor
je
jo
daa
cmp
sbb
push
add
mov
xchg
hlt
adc
push
lea
gs
xchg
bound
test
mov
pop
push
and
jb
call
inc
adc
xchg
cmp
stos
adc
or
rclb
cwtl
push
cmp
pop
push
test
ret
jge
inc
fstpl
nop
jb
imul
add
idiv
loop
movsb
orl
inc
sub
xchg
or
jp
dec
nop
stos
push
add
dec
xacquire
adc
daa
adc
jo
into
pop
add
adc
adc
jo
imul
imul
popf
fiadds
mov
shr
lret
sbb
adc
inc
add
push
sub
bound
sub
dec
cmpsb
or
xor
pop
inc
cltd
rolb
mov
push
and
inc
adcl
rolb
test
xchg
sbb
jbe,pn
fbld
sti
frstor
pop
nop
mov
test
pop
mov
cmpsl
xor
test
add
and
imul
cmp
mov
jns
adc
push
xor
dec
inc
add
stos
iret
adc
test
sbb
and
add
sub
inc
in
lds
inc
jo
int
rorl
jbe
adc
sbb
mov
ja,pn
and
movb
or
add
mov
mov
pop
fnstcw
push
cmpb
cmpsl
rcl
adc
aas
mov
xor
jne
frstor
push
push
int3
lds
and
adc
pop
dec
popl
outsb
sbb
int3
cmp
cmp
xchg
lds
adc
pop
and
pop
jmp
and
mov
cmpb
out
xchg
sub
xor
dec
int
stos
or
fisubl
push
popf
stc
or
loop
mov
sbb
leave
das
hlt
mov
test
add
push
add
pop
sub
adc
mov
cmp
adc
mov
and
sbb
adc
sub
test
cmpsb
mov
orb
dec
push
mov
sub
xchg
add
jp
pop
mov
test
add
repz
push
dec
push
popa
and
add
jmp
sbb
les
or
push
scas
outsb
cmp
sbbl
push
call
lcall
push
fdivrl
je
das
ret
out
and
adcb
lds
push
and
loope
cmpsb
dec
xor
add
add
push
arpl
cmp
inc
cmp
test
jno
fldl
aad
mov
jno
cmpsb
mov
pop
or
mov
loop
gs
push
dec
add
add
test
push
adc
sbb
jno
shrb
int3
ret
in
jmp
or
arpl
sbb
adc
add
pop
pop
lcall
jg
sbb
in
cmpsl
test
testl
les
scas
sbb
cmp
andb
std
push
dec
popa
or
sub
or
imul
cmpsb
mov
in
mov
sbb
and
xor
add
addb
iret
adc
mov
ljmp
sub
adcl
ret
jno
mov
fxrstor
test
dec
cmp
and
jb
pop
in
inc
add
inc
mov
sbb
pop
push
xor
add
sub
rcrl
leave
push
sub
ffreep
push
pushf
rcrb
inc
inc
dec
xchg
adc
test
aaa
add
dec
adc
or
test
add
dec
fisubl
daa
and
jo
adcl
ficoms
adc
leave
pop
mov
mov
pop
and
addr16
repnz
add
pop
fcoms
or
dec
inc
push
in
add
cmc
js
or
xlat
and
add
xor
fists
sub
xor
ds
jmp
xor
cmpsl
dec
mov
push
loopne
push
daa
lret
iret
sbb
sbb
mov
sbb
xor
push
repnz
call
stos
mov
pop
leave
fs
sbb
adc
jo
sub
xchg
xchg
xchg
je
adc
add
sub
cmp
outsl
imul
sub
pop
mov
call
lahf
rclb
adc
mov
dec
shrl
dec
or
push
lcall
sbb
mov
adc
jo
pop
pop
leave
or
mov
cmp
xor
test
dec
dec
adc
loop,pn
rcrb
mov
stc
push
and
add
je
or
adc
ret
enter
jns
and
pop
push
ljmp
and
sub
dec
sbb
fwait
cs
push
sbb
and
sbb
call
jmp
lret
xchg
outsl
inc
popf
out
sahf
imul
mov
inc
adc
mov
scas
repnz
add
dec
pop
adc
call
mov
mov
mov
add
push
pushf
xchg
mov
jle
loopne,pn
xor
out
sbb
popf
es
and
test
cmp
andl
cmpsb
ljmp
and
push
push
mov
imul
mov
or
pop
ret
inc
sahf
and
adc
xchg
pop
cwtl
add
adc
jl
adc
les
pop
push
movsb
in
insl
bound
dec
cmovns
adc
or
or
pusha
sub
mov
test
sbb
push
adcb
aas
mov
ljmp
push
add
stc
add
lods
dec
sub
stos
dec
aam
mov
cmpsl
dec
sbb
add
jmp
jae
jo
rclb
and
int3
mov
add
sub
inc
and
lock
scas
mov
or
loopne
dec
jge
inc
mov
iret
movsl
clc
mov
xor
add
enter
push
mov
inc
mov
jno
xchg
rcpps
mov
ljmp
jbe
sub
or
add
out
lds
test
inc
inc
add
rcrl
jns
dec
inc
inc
and
cmp
dec
pop
and
and
or
sub
jmp
stos
orl
cmp
xchg
in
push
xlat
iret
cs
mov
sbb
jae
addb
mov
or
push
mov
pop
ds
mov
and
sahf
xchg
lea
xchg
mov
inc
mov
dec
decl
and
pusha
nop
or
lahf
mov
aaa
or
arpl
call
outsl
push
inc
and
sbb
popa
insb
sub
jne
pop
inc
push
sub
dec
jo
jae
adc
add
pop
add
mov
xor
and
popf
jl
les
add
inc
pop
push
lods
orb
or
sbbb
add
xchg
or
sub
lods
sub
fadds
xor
xchg
pop
jle
sbb
xor
mov
imul
inc
dec
loopne
xor
xor
out
scas
pop
jo
mov
mov
sbb
mov
in
xor
daa
or
in
and
pushf
sbb
nop
sbb
or
adc
cmp
and
or
add
popa
add
and
mov
xor
adc
clc
sti
aas
or
and
test
jmp
stos
mov
pop
sbb
sub
add
outsb
or
jno
mov
scas
add
and
pop
xor
aaa
adc
xchg
int
es
add
push
sahf
enter
addb
jb
ret
out
mov
or
mov
sub
mov
andb
popa
rclb
adc
mov
test
cmpsl
andb
or
addl
aam
loop
pusha
arpl
sbb
cmovbe
sarl
add
push
shrl
sub
je
jns
test
inc
mov
jl
mov
mov
int3
or
leave
mov
test
test
adc
sub
movsl
inc
cmp
pop
jno
jb
mov
sbb
cmpsb
adc
ljmp
push
loope
cmp
rorb
es
or
out
fwait
adc
inc
movsb
adc
sub
cmc
mov
adc
add
mov
adcb
inc
jp
lcall
mov
push
dec
loopne
aaa
hlt
mov
push
add
push
and
lea
dec
lds
xor
lret
sub
fs
xchg
ljmp
sbb
jecxz,pt
xchg
mov
jno
icebp
and
cs
lea
or
or
lods
bound
inc
and
je
sbb
mov
jl
imul
call
fisttps
jl
orb
inc
and
push
dec
adc
add
and
push
mov
jp
insl
fs
sbb
or
les
mov
add
xchg
mov
aad
inc
and
shrb
jge
dec
es
aad
jnp
aas
or
dec
repnz
or
mov
inc
or
ret
cmpl
jo
test
xor
sub
rorb
adc
push
dec
pop
sti
mov
loope
push
std
aad
xchg
sub
jne
addl
bound
and
push
addl
add
or
aas
push
and
imul
pop
pop
and
sbb
xor
leave
movsb
push
pop
xchg
mov
mov
or
pop
push
loope
pop
push
xor
in
imul
dec
or
stos
dec
or
push
inc
call
scas
mov
inc
cmp
roll
mov
rolb
cmp
mov
test
add
dec
ret
add
lods
mov
xchg
pop
adc
ret
mov
push
adc
inc
inc
add
inc
or
pop
mov
inc
sahf
inc
test
sbb
jge
push
add
sub
hlt
sub
or
push
push
and
xor
leave
iret
add
and
add
xor
sbb
in
arpl
popa
adc
jmp
dec
xchg
loope
dec
xor
or
dec
movsl
call
jg
adcb
stos
in
call
mov
sub
scas
aad
dec
push
sbb
in
add
or
scas
add
popa
lret
mov
cltd
cmp
mov
je
and
mov
test
sarl
jno
adc
push
sahf
and
cmp
aaa
clc
inc
cmpsl
and
cmc
inc
mov
negl
jmp
ds
pusha
or
sbbl
mov
mov
or
stos
or
rcrb
loopne
popa
enter
jb
loop
and
or
add
push
sbb
loopne
jns
add
loop
rorl
mov
jno
lahf
les
bound
pop
bound
call
out
pop
push
adc
pop
pushf
cwtl
mov
cltd
imulb
or
lret
aam
sbb
lea
inc
pop
push
or
insb
gs
and
out
add
add
fstp
and
repnz
in
sub
shrb
rorb
scas
fs
mov
add
ret
mov
adc
test
les
jmp
adc
aam
repnz
dec
sbb
xor
in
add
loopne
adcb
dec
daa
cmp
mov
iret
sahf
add
add
add
es
and
aam
mov
jae
cmp
adc
or
inc
mov
pop
movsl
xchg
hlt
adc
movsl
xor
test
push
jl
pushf
mov
dec
sbb
jecxz
sbb
repz
pop
and
mov
mov
roll
cmpsb
or
mov
and
sbb
in
or
mov
inc
sbb
mov
lea
out
lea
bound
bound
inc
and
inc
test
adc
or
dec
call
mov
and
push
enter
cmc
nop
js
inc
xor
aas
pop
xchg
push
call
xor
inc
inc
cltd
fisttpl
and
inc
sub
xor
mov
cli
mov
inc
or
cmp
jmp
lea
or
jo
pop
jbe
or
xor
xchg
aam
add
xchg
cvtpi2ps
sbb
pop
or
shll
imul
mov
icebp
stos
lret
dec
outsl
add
rorl
push
and
stos
pop
mov
xchg
pop
sbb
push
aaa
xchg
movsl
adc
xchg
mov
andl
cmp
movb
popf
stc
rol
pop
mov
xor
mov
add
testl
inc
je
pop
cltd
push
adc
stos
dec
or
aas
or
or
adc
iret
mov
xlat
mov
push
sbb
push
xchg
int
push
xor
xor
subl
ficoml
adc
mov
push
mov
or
pop
xchg
jl
inc
dec
mov
imul
push
shrb
cmpsl
push
sub
ret
xor
out
stos
and
daa
mov
aam
and
cmp
inc
jmp
adc
mov
mov
adc
inc
out
dec
pop
aam
loop
ja
xchg
mov
dec
imul
inc
pop
test
push
sub
inc
xor
or
and
or
daa
sub
push
cltd
mov
adc
adc
or
adc
insb
std
xchg
mov
push
ret
dec
inc
add
test
or
push
test
push
jo
cmp
aaa
mov
xor
dec
adc
cwtl
popa
popa
rolb
dec
or
test
ja
add
and
mov
inc
xchg
loope
lret
add
les
popf
stos
adc
mov
or
and
sbb
mov
sub
jns
push
add
in
mov
xchg
fwait
inc
inc
cmpsb
add
insl
rcr
adc
and
stos
les
pop
sbb
mov
test
sbbb
push
fildll
les
dec
cmp
xchg
cs
add
lds
add
jno
sub
dec
shlb
fdiv
imul
or
or
mov
test
loopne
outsl
nop
push
jo
xor
cmp
popf
and
cmp
push
or
rorl
cld
popf
cwtl
sbb
sub
push
add
sub
rcl
xchg
jmp
mov
fisubl
arpl
sub
in
ret
jb
mov
xor
loope
or
in
imul
cmp
push
pop
xor
cli
in
scas
or
mov
les
jge
inc
and
dec
cmp
mov
and
ret
stc
jmp
scas
pop
rclb
dec
movsl
shlb
jo
adc
jne
int
or
scas
aaa
pop
adc
push
xchg
push
cmp
repnz
add
cmp
add
rorb
jge
xchg
test
lods
add
add
cmc
lds
adc
outsb
pop
test
test
mov
shlb
cmpb
pop
cwtl
inc
mov
cmp
xchg
daa
dec
ret
pop
inc
dec
jbe
clc
das
imul
jecxz
sbb
in
or
in
or
dec
and
ret
lret
jmp
pop
adc
sbb
sub
nop
int3
movsl
repnz
xor
inc
push
add
xor
fsubl
push
jbe
jmp
stos
jne
loope
adc
lahf
xchg
xor
imul
outsb
push
add
jb
xchg
add
and
ljmp
adc
push
mov
in
je
cmp
and
pop
loopne
inc
imul
or
add
xor
jl
add
or
fisttpll
arpl
inc
push
mov
adc
adc
push
loopne
or
dec
mov
mov
add
test
pop
ljmp
adc
dec
mov
pop
mov
sbb
jns
mov
dec
dec
sbb
lcall
loopne
scas
cmpl
pop
pop
xor
xor
pop
jne
jbe
add
dec
adc
adc
xchg
andl
addb
cmpb
iret
inc
es
pop
push
add
addl
or
sub
or
das
lods
jnp
xor
and
adc
nop
push
xlat
test
cld
add
scas
mov
mov
add
mov
sbb
pop
jno
orl
cmpsb
and
add
pusha
jmp
iret
stc
add
lods
mov
xchg
and
push
aam
inc
bound
or
cmc
enter
add
add
inc
shrb
pusha
nop
out
sbb
andl
lcall
sbbl
inc
je
fsubrl
sub
jns
push
push
popa
mov
imul
push
sbb
sti
rorl
mov
lret
leave
repz
xor
push
sti
das
pop
je
and
daa
popa
add
adc
and
dec
add
or
gs
jne
fwait
lock
xchg
xchg
mov
add
pop
push
enter
shrb
shrl
mov
popa
std
cmpsb
xchg
movsl
and
jmp
outsb
pop
imul
movsb
icebp
sahf
and
test
cwtl
mov
repnz
and
mov
movsb
jo
jae
ret
imull
and
push
jbe
xor
outsl
mov
xchg
aad
and
mov
fs
mov
ja
jo
imul
adc
xor
les
xchg
pushf
cmp
mov
call
mov
add
sbb
pop
and
push
imul
push
jecxz
movsb
roll
jnp
jae
mov
pop
push
inc
dec
add
mov
dec
mov
adc
add
stc
inc
push
sbb
les
sbb
xchg
push
cltd
les
es
jo
cmp
xchg
icebp
das
sub
xchg
in
arpl
cmp
sahf
cmpsb
push
dec
daa
mov
cmp
mov
popa
lds
sbb
inc
mov
outsl
add
push
dec
adc
mov
sbb
mov
aad
test
or
or
push
inc
imul
les
jmp
test
add
pop
adc
cmp
add
rcrb
dec
sub
mov
jae
push
add
mov
push
mov
add
mov
mov
mov
repnz
or
adc
fs
mov
or
pop
inc
andl
ss
mov
adcb
dec
inc
sub
inc
or
arpl
push
sub
sub
inc
inc
test
push
lds
sub
icebp
mov
push
inc
push
loopne
mov
inc
mov
xchg
out
mov
lods
dec
mov
lds
jno
jno
ds
jmpw
dec
adc
and
xlat
push
pop
xor
mov
lds
test
push
loopne
movsl
dec
and
add
inc
sub
inc
and
ret
fucomp
push
aam
repz
insl
fisttpll
aas
push
and
mov
mov
es
movsb
push
sbb
clc
add
int
mov
mov
inc
dec
inc
sub
popa
mov
movsb
sbb
adc
cld
hlt
jmp
icebp
add
add
fmull
dec
jb
mov
aas
mov
add
mov
mov
sub
push
push
sub
inc
inc
sbb
or
test
adc
dec
dec
test
cs
cltd
dec
adc
jle
push
les
adc
daa
cmpsb
add
adc
or
subb
mov
sbb
imul
stos
cmpsl
sub
mov
xchg
daa
loop
push
xor
shrb
pop
leave
bound
in
lods
inc
leave
pop
in
mov
or
add
push
clc
stos
jne
push
frstor
imul
bound
push
or
and
pushf
push
or
sbb
aas
fwait
or
jnp
sub
insb
sbb
cmpsb
pushl
rorb
dec
and
sub
pop
js
aad
cmpsb
shll
fistps
xchg
mov
test
loope
push
clc
mov
je
lods
mov
es
loopne
push
push
cs
dec
cmp
enter
mov
test
mov
cmpsb
shll
and
push
ss
jecxz
adc
dec
push
or
call
test
or
pop
jae
mov
insl
sbb
aas
in
and
jg
xlat
adc
and
je
inc
cmc
push
mov
mov
aaa
push
mov
sub
loope
jno
sbb
addl
adc
sub
push
inc
push
inc
cltd
push
jno
xor
xchg
sbb
and
ltr
mov
push
fs
dec
push
sti
mov
out
xor
push
sub
push
test
fdivrl
jl
or
inc
cmpsb
or
mov
lods
sbb
lcall
aaa
xor
imul
loope
mov
addr16
mov
fmuls
addl
or
mov
pop
dec
pop
ret
jp
stos
fadds
ljmp
mov
cmp
jnp
inc
xor
test
test
out
cmp
arpl
pop
andb
xlat
mov
dec
pop
sub
loop
es
imul
inc
add
cmp
xlat
xor
xor
sub
mov
rorb
nopl
fisubrs
inc
jmp
imul
and
scas
or
ss
and
idivl
cwtl
push
push
pop
inc
dec
push
cli
pop
inc
push
add
xor
mov
neg
mov
out
aam
mov
mov
jmp
roll
cmp
std
xchg
jno
sub
sub
fwait
repnz
add
adc
lods
push
les
mov
push
cmp
loop,pn
movsl
jmp
add
aam
in
xor
add
mov
dec
clc
cwtl
add
stc
adc
push
jo
add
sbb
mov
popa
jge
mov
sar
lock
add
hlt
pushf
push
fadd
adc
fs
rol
cmp
push
dec
call
adc
das
or
mov
mov
pop
mov
mov
and
mov
insl
and
inc
xchg
cmp
jne
xor
cmp
dec
push
mov
mov
mov
sub
aaa
loopne
incb
in
call
inc
movsl
inc
inc
gs
pop
sbb
out
sub
mov
icebp
add
mov
mov
aam
dec
jae
loopne
mov
and
adc
xlat
xlat
adc
lds
lods
mov
aam
rorl
jo
pop
fstpl
xchg
notl
push
mov
sub
adc
push
add
sahf
push
int3
mov
callw
pop
je
pop
adc
and
clc
test
cwtl
cmc
jnp
add
les
gs
sbb
test
xchg
and
test
pop
jl
xchg
xchg
sub
jae
dec
test
into
int
fwait
xchg
sbb
fwait
adc
sbb
popa
pop
rolb
int
sub
xor
cmp
and
mov
add
test
icebp
sbb
dec
and
lea
repz
cmp
dec
push
ss
adc
xor
loope
ljmp
mov
mov
mov
or
or
xchg
daa
xor
les
jl
lods
popf
dec
repz
lret
popa
mov
jle
ret
or
cmpb
lods
mov
cmp
and
pushw
adc
mov
pusha
jle
cli
outsl
xor
adc
pop
mov
adc
loop
jnp
and
in
sbb
ret
xor
sbb
push
stc
dec
call
xchg
sub
jno
pop
movsl
and
cli
cwtl
mov
lods
aam
inc
sbb
into
cmp
lods
jno
mov
add
mov
sbb
jns
enter
stos
mov
xor
rorl
or
xor
aaa
hlt
and
movaps
movl
push
pusha
mov
cmpsb
in
pop
orl
ss
pop
andl
xor
sub
xchg
jo
leave
add
lcall
and
loope
pop
test
dec
cwtl
jl
test
jns
mov
and
enter
pop
idiv
mov
test
mov
stos
nop
outsb
daa
addl
repz
imul
xor
rorl
iret
adcl
ret
test
push
sahf
gs
les
adc
call
and
push
push
cmpsb
push
outsl
dec
add
addb
aad
jae
add
push
mov
xchg
fnop
sub
jg
pop
cmp
notl
mov
xchg
and
sbb
js
and
mov
jb
cli
fadd
testb
jbe
sub
and
push
add
dec
push
push
pop
roll
in
adc
clc
jmp
cld
xchg
push
pop
inc
and
dec
mov
jge
push
shl
or
das
pop
jge
ret
push
push
mov
ljmp
test
leave
pop
aad
andb
inc
stos
rclb
add
dec
sarb
call
dec
inc
imul
jns
sbb
icebp
lods
add
bound
inc
xor
push
or
xor
mov
call
xor
cwtl
and
cmp
loopne
and
inc
and
lcall
cmp
das
and
or
xchg
push
adc
ja
in
or
jmp
cld
mov
sbb
inc
repnz
clc
imul
dec
jns
inc
imul
jb
sub
sub
popf
mov
imulb
rol
std
and
adc
icebp
dec
xchg
movl
push
add
adc
xchg
mov
bound
jo
dec
push
xor
push
mov
les
mov
dec
les
lods
test
jns
add
cmovp
ss
cli
loopne
shlb
push
fs
stos
test
xchg
sbb
addr16
adc
cmp
sbb
imul
inc
add
es
jnp
inc
add
mov
jge
hlt
les
push
pop
xor
jno
push
mov
mov
pop
mov
dec
mov
and
push
mov
and
xor
mov
pop
mov
cmpsl
lahf
cmp
xor
ja
add
add
xor
cwtl
inc
push
or
xchg
sbb
add
movb
sub
push
lods
imul
scas
mov
sub
sub
mov
xchg
stos
adc
dec
xor
push
jg
rcl
enter
fcoml
cmp
mov
in
cmpl
dec
aas
and
lods
push
cld
jmp
out
mov
mov
xor
jecxz
xadd
or
and
bound
sbb
mov
out
mov
sub
je
bound
dec
add
adc
cmc
sub
mov
shll
shr
stc
nop
jo
jns
shl
loope
popaw
xchg
stos
pusha
rol
sub
fwait
xor
and
fstps
dec
movsl
sbb
adc
mov
fs
sbb
or
xor
out
or
mov
iret
shrb
jge
push
or
xchg
mov
pop
xor
or
mov
push
ljmp
inc
inc
jnp
test
in
cmc
or
inc
clc
cmp
aas
sahf
xchg
clc
jle
arpl
andnps
or
push
push
adc
je
stos
cmp
add
push
enter
jp
and
push
cmc
cmp
je
jae
sbb
sbb
pop
push
push
pop
push
andl
rclb
lock
inc
dec
or
pop
add
cmpsb
pusha
push
push
int3
push
arpl
push
sub
clc
push
imul
dec
xorl
sbb
jle
js
es
mov
xor
cmp
test
mov
xchg
cmp
add
lock
lea
out
push
addr16
cmp
or
mov
pop
sbb
js
xchg
jne
test
rorb
imul
adc
sbb
sub
lret
stc
jg
movsl
or
cs
ror
rorb
cmpsl
xchg
movhps
cs
mov
mov
mov
stos
and
and
loop
mov
cmpsl
std
mov
cmp
lea
imul
lret
add
cmc
incl
push
adc
jae
mov
fisubrs
ret
lahf
fisttpl
push
xor
addl
test
in
rcll
push
sub
rcr
and
mov
into
and
addl
push
shlb
fldcw
shr
dec
pop
adcl
movsb
fwait
je
adc
push
imul
outsb
negl
bound
xorl
sbbb
ret
movsl
lret
loopne
pop
int
jmp
sbb
xchg
mov
popf
ror
pop
adc
push
es
dec
xchg
sbb
push
fs
in
pop
test
lcall
jp
xchg
scas
pusha
mov
or
int3
test
push
aaa
imul
sbb
and
in
stos
or
xchg
add
addb
mov
jbe
sbb
add
add
xchg
cmp
jg
xlat
movsl
mov
xlat
clc
sub
mov
push
mov
in
xchg
fcoms
inc
stos
test
add
inc
pop
xor
dec
adc
mov
xor
pop
and
dec
push
lret
sbb
fsts
xor
shrl
dec
nop
shrb
xchg
mov
das
push
pop
andl
orb
call
out
std
mov
ds
bound
fisubrs
aam
sahf
add
repnz
shlb
mov
incb
push
and
hlt
mov
dec
cwtl
mov
in
mov
ret
movups
call
jne
push
sbb
aad
js
sbb
cs
shrb
shll
push
or
pop
push
adc
out
hlt
add
jo
test
push
inc
mov
sbb
addb
and
icebp
jmp
int3
push
pop
adc
dec
inc
xchg
inc
aaa
or
pop
inc
je
jne
test
andl
push
sub
inc
xchg
xchg
stos
jmp
dec
and
into
or
push
sub
in
pop
dec
mov
fstps
mov
sbb
out
iret
sbb
dec
adc
punpckhdq
and
imul
push
daa
orb
out
in
sbb
cld
jl
mov
es
sbb
mov
cmpsb
add
sub
push
and
les
xor
lods
not
push
cmpsb
out
and
daa
mov
and
push
xchg
dec
dec
and
cmpsl
mov
ret
jo
sub
xchg
aad
and
or
push
sub
cltd
scas
fisubrl
xor
sbb
xor
adc
ret
cltd
xchg
xchg
inc
sbb
and
dec
or
or
adc
and
push
mov
xchg
or
and
and
jle
add
or
inc
fisubl
in
xor
cmp
xchg
pop
pop
aaa
inc
or
or
pop
add
lcall
and
xor
imul
xor
jbe
jp
xor
rolb
adc
adc
ds
out
xchg
sub
dec
dec
hlt
jno
inc
adc
cltd
aam
jmp
push
adc
sbb
or
jnp
mov
lds
dec
xchg
out
subl
mov
dec
js
or
inc
cmp
dec
jmp
movsb
je
divl
ficompl
and
js
mov
xchg
push
mov
jg,pn
jmp
test
mov
jno
inc
push
or
pop
push
cmp
imul
aaa
xor
jg
add
bound
icebp
ret
mov
mov
dec
mov
inc
in
add
shlb
js
xchg
lahf
sahf
push
test
loop
adc
adc
cs
cmp
js
and
fcoml
ljmp
scas
jp
gs
push
andl
adc
jae
lds
inc
add
adc
dec
leave
insl
cli
incl
subl
xor
or
xchg
loopw
jg
repnz
mov
xor
inc
outsb
dec
add
outsl
scas
in
mov
cmp
aad
lods
push
sbb
lret
mov
jb
dec
add
sbb
leave
mov
jge
shlb
and
das
pop
push
push
cmpsl
repz
pop
iret
mov
sbb
sub
xor
mov
fabs
mov
push
xchg
aam
jne
jo
add
mov
repnz
mov
mov
inc
sahf
mov
ljmp
push
notb
jl,pt
shlb
add
push
das
lret
adc
inc
or
add
mov
mov
push
dec
mov
dec
fsubl
xchg
mov
push
lea
movsl
pop
mov
jae
mov
sbb
loopne
insb
jmp
repnz
jae
clc
pop
adc
jns
pop
adcl
decl
sub
ret
pop
cltd
arpl
push
xchg
inc
cmp
push
jmp
je
inc
mov
sub
add
movsl
and
dec
dec
popf
cmp
outsb
out
out
dec
push
push
call
andl
call
test
lgs
out
dec
icebp
adcl
insl
es
mov
sbbb
push
xchg
adc
notb
cmp
gs
inc
mov
dec
test
std
pop
fwait
jne
iret
iret
mov
rclb
stos
mov
inc
sbb
aam
jo
dec
call
dec
dec
jo
pop
dec
cmp
dec
test
subl
pop
fdivl
insl
inc
popa
inc
push
loopne
test
jno
mov
fmull
loope
mov
pop
add
sub
inc
pop
mov
cltd
inc
add
sbb
inc
js
and
or
mov
mov
and
xchg
clc
out
jmp
sub
mov
sub
push
aam
fs
xchg
mov
inc
notl
negb
test
sbb
aaa
push
inc
ljmp
call
xchg
inc
sbb
ret
sahf
aad
and
in
push
add
adc
mov
dec
lds
and
insl
adcb
add
dec
pushf
sub
or
or
inc
sarl
adc
pop
addb
push
dec
out
xlat
or
push
inc
cmovne
cmc
sbb
and
add
add
mov
in
faddl
loope
add
adc
dec
mov
sahf
adc
adc
pop
pushf
fisubrl
ret
scas
outsl
mov
dec
add
or
jecxz
dec
out
lahf
or
inc
movsb
adc
and
movsb
adc
inc
add
adc
dec
test
push
stos
xchg
cmc
fsubrl
arpl
lock
mov
das
or
cli
arpl
add
test
rcll
int3
int3
rclb
xchg
mov
mov
rorb
xchg
sub
cs
call
dec
dec
sarl
bound
dec
pushf
movsb
add
fwait
and
movsl
jne
shll
xchg
imull
ja
xor
dec
test
ljmp
mov
jns
int3
mov
jmp
adc
push
mov
and
rolb
push
mov
scas
dec
lcall
cmpsb
cmpsb
nop
call
cmpsl
xor
xor
outsl
mov
adc
xor
inc
daa
jle
xor
or
jno
inc
scas
cmp
jg
push
push
popf
out
cmpsl
cmp
jnp
test
mov
test
jge
insb
pop
xchg
xchg
and
cmp
push
lock
lods
and
xlat
cld
inc
pop
sub
inc
sub
dec
test
jmp
add
stos
outsb
sub
fadds
lcall
shll
cmpsb
stc
popa
or
stos
inc
sub
mov
xor
inc
xchg
adc
stos
popa
bound
inc
sahf
rcrl
inc
pop
test
lret
mov
insl
ss
jl
out
sbb
push
cld
stos
rcll
mov
xchg
adc
in
imul
in
pop
dec
mov
decb
sti
mov
pusha
aas
and
mov
inc
cmc
mov
das
jb
or
jmp
inc
pop
jl
call
es
hlt
inc
sub
cmp
jno
mov
inc
push
fmuls
mov
je
adc
xor
add
mull
js
jmp
dec
cltd
xchg
aam
sub
sbb
push
or
insl
lock
dec
sbb
jmp
adc
in
aam
or
add
sub
xchg
or
clc
movsb
mov
sbb
sbb
mov
and
loope
test
andb
rcrb
or
cli
fnsave
clc
ret
ds
pushf
adc
hlt
mov
push
xor
rcr
std
and
push
add
je
lea
push
xchg
jg
mov
mov
aad
xchg
jbe
push
xchg
iret
outsb
sbb
cli
rcrb
and
dec
or
int
lcall
mov
stc
add
push
popa
imul
mov
dec
ss
and
inc
pop
pop
aam
mov
pusha
pop
aam
xor
cmpb
rcll
loop
push
sub
data16
add
shlb
fistps
test
jo
test
rolb
test
bound
aam
jl
daa
mov
jge
movsl
xor
mov
scas
sub
and
lock
into
push
pusha
cmp
adc
adc
xchg
cwtl
push
mov
jne
jb
and
sub
lods
inc
dec
add
stos
jmp
xchg
sub
test
xchg
mov
or
pop
gs
es
jne
pusha
rcl
push
stos
pop
lcall
pushf
imul
push
dec
mov
lock
mov
pop
or
xlat
inc
je
xor
insl
mov
adc
cld
inc
cwtl
orb
and
dec
leave
movsl
rorl
mov
aaa
dec
loopne
mov
les
adc
mov
insb
jp
mov
les
add
popa
and
call
jne
mov
and
xchg
leave
jmp
mov
jno
jl
xor
sub
ljmp
sub
fisubs
lcall
or
jg
repz
sti
sub
out
xchg
repz
sbb
push
push
test
pop
ds
or
and
ljmp
jo
scas
push
movsl
sub
inc
out
test
xchg
mov
call
test
cwtl
lea
ljmp
jl,pn
cmp
or
push
mov
push
add
lock
jb
dec
adc
inc
fldlg2
dec
adc
xor
mov
cmpl
leave
add
aas
shlb
add
or
aam
mov
xchg
push
mov
inc
or
rorb
test
nop
in
lcall
adc
adc
adc
outsb
scas
sub
loop
jo
push
push
pushf
clc
add
cli
movsb
lahf
or
das
sbb
or
mov
jno
pop
pop
adc
ficomps
cmp
dec
mov
ljmp
mov
sbb
jae
inc
xchg
out
inc
icebp
negl
add
xchg
call
movsl
rclb
test
sbb
xchg
cmp
insl
mov
ljmp
cmp
fs
sarb
jmp
mov
add
sub
je
mov
mov
mov
aas
aaa
int
jg
sbb
jae
mov
dec
shrl
xor
or
pop
nop
ret
call
decl
push
aam
pop
mov
subb
push
stos
cmpb
dec
out
jecxz
jecxz
sbb
adc
sub
faddl
mov
push
shl
sbb
inc
mov
dec
adc
jmp
iret
into
pop
bound
lds
or
sahf
sbb
push
mov
pusha
pop
and
jmp
out
ret
out
addl
pop
mov
dec
push
and
rol
in
xchg
sub
add
jo
push
push
ret
imul
jecxz
adc
int3
adc
xchg
push
push
gs
jmp
ja
jg
sbb
or
push
fwait
push
pop
fisubrs
add
shrb
insb
cs
fisttpll
xor
les
repz
je
sbb
test
pop
or
sar
lcall
in
sahf
js
xchg
and
sbb
jmp
push
mov
jo
lret
xchg
arpl
jge
mov
add
testl
dec
enter
sysret
cmp
and
cli
incl
or
lcall
pop
call
add
mov
push
add
sub
sub
jmp
cmpl
cmp
inc
lahf
add
imul
icebp
xor
mov
add
das
icebp
je
sub
sbb
add
xor
loope
fdecstp
js
and
or
pop
dec
sub
loope
dec
mov
out
mov
sub
push
xchg
and
sbb
shrd
sub
mov
sahf
add
arpl
out
mov
and
arpl
cmp
sar
mov
cmp
mov
xor
inc
add
aad
cmpsl
sti
push
mov
cmp
rorb
jl
jg
mov
push
call
sbb
daa
mov
adc
sub
add
xchg
push
xor
sub
in
lock
sbb
mov
sub
and
adc
sbb
ss
or
sbb
jo
mov
ljmp
stos
xor
adc
cmp
mov
sub
je
push
dec
cmp
push
leave
xchg
nop
dec
inc
in
imul
test
sbb
aaa
adc
push
mov
lret
push
out
push
xchg
push
sbb
cwtl
hlt
lock
ret
sub
xor
dec
icebp
add
pop
push
ret
adc
cmp
insl
pop
xchg
xlat
push
popf
fsubs
adcl
add
shrb
clc
fbld
or
les
inc
loop
cmp
pop
lods
icebp
mov
sbb
hlt
mov
push
test
incl
adc
and
sub
out
lcall
nop
dec
bound
add
cmp
xchg
loope,pn
adc
pop
mov
imul
int3
ret
push
lods
mov
xchg
sbb
fisubl
sbb
xchg
rol
mov
pusha
add
cmp
lds
mov
ds
sbbl
xor
jae
sbb
and
cmpb
rcrl
int
mov
pop
lock
or
divb
inc
dec
pop
pusha
xchg
pop
loop
pushf
sub
ret
orb
lock
shr
or
jmp
dec
jns
nop
repz
cmp
mov
aad
call
pcmpeqb
cwtl
fiaddl
icebp
push
push
and
dec
leave
and
movsb
xor
aad
jbe
xchg
test
xor
out
dec
jp
pop
push
push
ret
push
jns
fidivrl
mov
xchg
jo
iret
inc
mov
jg
xor
mov
out
mov
ljmp
rcll
pop
fmulp
push
in
rorb
rorl
js
rclb
ret
nop
sbb
scas
pop
push
jne
aaa
arpl
test
call
adc
or
je
xchg
nop
dec
mov
xor
fcomps
adc
xor
imul
mov
xor
test
jle
sarb
jmp
sub
mov
insl
jne
repz
int
or
dec
fnstcw
sub
pop
mov
mov
mov
dec
in
insb
inc
imul
test
ja
push
filds
in
sbb
loope
mov
ret
add
iret
mov
mov
std
popf
outsl
push
cmp
jle
test
push
sahf
ret
sbb
mov
jae
imul
inc
xor
int
sbb
push
mov
add
push
pop
dec
mov
sub
jle
incl
dec
vsqrtpd
pop
adc
inc
rolb
out
cli
hlt
aas
jae
dec
popa
iret
fs
clc
sub
push
test
jle
insl
addr16
outsl
int3
adc
nop
xor
mov
push
xchg
xor
or
add
flds
push
mov
inc
mov
shrl
imul
or
push
fsincos
or
cmp
xchg
fs
and
movsb
pushf
inc
mov
add
pop
rcll
push
rol
jg
mov
imul
mov
aam
mov
out
dec
push
sub
outsb
imul
sbb
bound
adc
loope
mov
mov
jne
and
dec
and
jg
jmp
dec
data16
ljmp
inc
push
push
dec
cmp
cmp
pop
lock
xor
mov
dec
loop
inc
jb
add
dec
and
aam
jo
add
ret
out
mov
test
hlt
sbb
and
sbb
and
dec
hlt
addb
add
test
test
fcomi
jne
adc
mov
rorb
outsl
jo
imul
jle
and
and
imul
xor
pop
adc
addl
fisubl
and
inc
jns
cmp
aam
gs
leave
xchg
in
sub
push
push
cmp
push
aad
fsubl
jge
inc
dec
leave
popa
adc
jo
xor
test
std
clc
or
jb
je
jbe
js
jp
inc
dec
mov
je
iret
add
rorb
mov
loopne
es
mov
cmp
pop
cmp
cmc
adcb
movsl
inc
fistpll
sbb
das
call
sahf
pop
add
in
push
mov
dec
es
out
test
ds
mov
xor
pop
cmp
shlb
add
test
adc
jp
sub
adc
out
inc
jmp
mov
xor
cmc
or
fs
adc
cmpsl
sti
je
loope
scas
cmpsl
or
add
xchg
xor
out
mov
mov
into
push
insl
cli
jecxz
out
repz
cmp
lock
or
stc
decl
jle
dec
test
push
inc
dec
out
mov
lahf
sahf
shl
mov
mov
xchg
or
jg
cmp
cmp
lahf
call
ret
dec
leave
fisttps
add
mov
xor
or
xlat
adc
xchg
sbb
xor
ja
push
or
aas
shrl
imul
sub
push
xor
inc
lcall
nop
dec
stc
sbb
xbegin
int3
push
shll
stos
adc
pop
inc
daa
mov
mov
cmp
jg
push
popf
ret
pop
jno
sub
jmp
xchg
mov
je
xchg
out
push
out
lcall
in
and
add
hlt
sub
mov
mov
popf
bound
push
xor
pop
mov
sub
inc
adc
cmp
sbb
push
shrl
inc
mov
mov
xor
xor
addr16
sahf
call
lahf
and
iret
inc
add
sbb
jmp
test
push
call
popa
out
addb
cmpsb
fmuls
pusha
inc
movsb
call
imul
inc
dec
xor
xchg
inc
dec
loop
push
cmpsb
imul
repz
pop
movsl
and
xchg
adc
mov
loop
jb
rorl
xchg
clc
rcll
and
add
xor
fstpt
hlt
loop
pop
sub
adc
cs
xor
ljmp
nop
add
ja
and
cmpsl
cli
arpl
loope
sarb
arpl
xchg
cs
dec
xchg
sub
test
out
in
jp
cwtl
jo
stos
and
sub
xor
and
mov
dec
shll
add
nop
jno
movsb
mov
cmc
call
mov
sbb
sub
je
cs
pop
pusha
sub
bswap
imul
and
rorl
cmp
in
jb
sbb
mov
mov
add
sbbl
popf
stos
push
std
dec
mov
adc
popa
mov
jmp
xor
or
add
xchg
js
filds
jns
pusha
jl
and
sub
iret
xchg
ret
xor
lret
ret
sub
dec
sbb
cltd
adc
pop
or
seto
test
or
sub
cmpsb
adc
cs
add
and
push
popa
sub
xor
repz
and
or
push
mov
sbb
adc
xor
ljmp
and
sysenter
lea
rclb
test
sti
inc
and
push
test
test
inc
hlt
orl
cmpsl
lock
xchg
int3
add
cmp
mov
push
jmp
cmpsb
push
dec
jne
xor
or
xchg
cmp
add
and
in
push
add
jns
cmpsl
jo
lods
cmp
cmp
aaa
test
push
xchg
push
add
xchg
sbb
add
mov
or
or
add
aad
push
and
or
add
mov
pop
jo
and
adc
in
lcall
and
aam
dec
pop
mov
or
or
cs
cli
mov
scas
pop
mov
or
xchg
leave
mov
sub
or
pushf
in
scas
mov
pop
pushf
cmp
pop
pop
dec
sbb
lret
test
adc
subb
andl
or
sbb
adc
inc
mov
mov
dec
jp
adc
enter
pop
xor
ja
xor
xchg
popa
add
inc
rcrl
inc
mov
or
movsb
jo
es
and
sub
data16
cmpsb
adc
je
int
inc
rolb
iret
cmc
je
cmpsl
mov
and
les
lcall
and
xor
cmp
mov
adc
loop
mov
stc
aad
xor
push
dec
ret
jecxz
scas
mov
add
aam
pop
popf
daa
test
inc
leave
adc
push
and
xor
mov
jno
xor
ja
inc
xor
cs
sar
test
int
mov
mov
or
dec
movsl
call
fldcw
and
pop
lcall
inc
mov
std
or
cld
pop
fwait
add
in
dec
or
sub
add
xor
mov
push
je
loope
pop
push
inc
adc
je
pop
cwtl
or
stc
inc
and
pop
xor
fcom
popa
cmp
xor
outsb
xor
push
mov
test
or
inc
enter
dec
lcall
shll
mov
cmp
mov
mov
inc
sub
adc
and
or
xchg
cmp
mov
xor
jo
cmp
inc
and
outsb
int
stc
xor
adc
inc
sbb
and
inc
repnz
add
loop
mov
leave
loopne
sbb
pop
popa
or
cmpl
adc
mov
test
xchg
push
ds
xor
ja
add
jecxz
lahf
mov
adcl
or
movsl
push
and
ja
mov
inc
sub
pop
cmp
cmp
es
cltd
mov
cmp
push
adc
cmp
push
push
leave
dec
mov
jbe
adc
pop
leave
xor
and
push
orb
push
leave
arpl
and
int
lahf
das
cld
rclb
cmp
mov
or
cmpsl
mov
loop,pn
cs
imul
cmp
cwtl
int
inc
mov
adc
push
sbb
dec
or
pop
fcoms
jb
pushf
xor
and
addl
adc
add
pop
add
sbb
fmul
mov
mov
iret
pop
sub
sbb
inc
ror
xor
sub
pop
add
mov
and
mov
lds
loopne
imul
pop
mov
leave
xchg
dec
mov
or
or
or
xor
and
push
stc
nop
mov
stos
sub
lea
xor
dec
aad
xchg
cmp
xor
mov
pop
mov
jge
in
fstps
jns
enter
outsl
andb
pop
test
dec
scas
sbb
pop
push
cmp
inc
iret
push
roll
xchg
leave
aas
imul
sbb
pop
sti
push
inc
pusha
loop
fisubs
pop
bnd
lods
loope
mov
or
inc
mov
xchg
ja
xor
test
cmp
movsb
jns
adc
loopne
jno
movsb
mov
adc
push
sti
push
add
in
into
add
push
inc
mov
sbb
cmp
addl
pop
add
or
jns
test
ror
imul
sub
ret
adc
xlat
inc
inc
mov
push
pop
dec
push
pop
cwtl
stos
ret
subl
imul
stc
add
in
push
push
adc
aas
sbb
mov
mov
sbb
and
add
pop
lods
rorl
loopne
je
add
push
adc
and
push
xchg
pop
sbb
xor
pop
adc
adc
mov
inc
xchg
jae
mov
jo
stc
movsl
es
sub
fisubs
adc
mov
test
dec
sub
clc
in
ficoml
test
sub
loop
adc
cmpsb
or
mov
lcall
inc
add
adc
in
int
dec
sub
jp
mov
xor
inc
iret
dec
pushf
ret
dec
inc
sti
pop
sbb
add
mov
subl
cs
xchg
pop
sub
stos
andb
mov
sbb
adcb
adc
mov
cmp
dec
push
lods
inc
inc
sbb
dec
and
push
scas
sub
adc
push
ror
sbbb
inc
dec
push
inc
sbb
or
or
sub
aam
xchg
mov
jecxz
in
inc
daa
mul
sub
mov
xor
sub
sbb
fisttps
outsb
mov
dec
jae
rol
add
loop
inc
and
rcrb
sbb
sbb
movzbl
adc
andb
and
push
xor
lea
xchg
out
cwtl
xor
xchg
xchg
rcll
movsl
xlat
sti
sub
add
xlat
cmp
pop
dec
pop
in
sub
cmp
movsb
icebp
mov
gs
mov
jae
outsb
loope
scas
or
dec
bound
pop
sub
pop
or
mov
sbb
daa
add
add
inc
subb
in
repz
xchg
and
inc
xchg
inc
add
dec
inc
push
fnstcw
mov
mov
ss
xor
arpl
imul
or
loope
pop
inc
add
subb
inc
add
sbb
pusha
ret
in
mov
xchg
das
scas
xchg
movb
nop
or
sti
sub
std
adc
mov
sub
sbb
mov
mov
xor
push
lea
lock
adc
test
sub
pop
dec
repz
inc
xor
outsb
subl
cltd
nop
leave
cmpsb
test
jge
in
mov
sti
cmp
and
or
aad
je
inc
mov
lds
sbb
rcll
push
fwait
xchg
adcl
cmp
jecxz
js
repnz
inc
movsb
inc
test
inc
jmp
mov
sbb
int
sub
sub
cmp
or
sbb
or
ret
out
dec
push
inc
push
ret
dec
jmp
xor
roll
subl
mov
inc
dec
lcall
or
push
das
cmp
sbb
mulb
into
jge
daa
and
les
push
add
call
dec
in
cs
mov
sub
or
leave
cmp
mov
pusha
bound
push
xorl
sbb
mov
ret
mov
loopne
adc
mov
call
rorb
daa
push
push
inc
or
leave
dec
pop
xor
mov
add
addr16
jmp
or
dec
outsl
sub
lods
call
push
rcrl
mov
sbb
rcl
lds
sub
dec
in
mov
jg
loopne
or
and
std
add
xchg
dec
sub
push
out
loop
pop
push
pop
mov
mov
imul
into
add
sub
fiaddl
xchg
ljmp
daa
andb
in
dec
xchg
test
mov
sbb
lcall
iret
adc
sub
mov
addl
pop
insb
negl
xor
mov
fwait
and
shlb
or
popa
shrl
xchg
cmp
adc
ss
imul
sbb
mov
xor
je
loope
mov
mov
adc
dec
pusha
bound
and
hlt
and
test
cmc
aam
mov
sbb
inc
mov
mov
and
jo
xchg
push
pop
xor
push
xchg
sub
xor
lret
push
insl
bound
dec
xchg
dec
push
mov
gs
sub
xchg
rorl
cltd
ss
and
daa
or
dec
cmp
out
lds
xchg
std
push
push
rolb
and
add
insl
test
stos
sahf
aaa
dec
sahf
mov
enter
dec
cmp
pop
and
fwait
adc
add
arpl
popf
iret
add
pop
subl
insl
pop
fisttps
xadd
inc
loope
add
inc
aam
sub
lods
mov
and
add
add
or
jbe
cmp
enter
inc
push
loope
aad
xor
in
mov
jo
inc
leave
cmp
enter
and
mov
in
inc
mov
ret
add
mov
or
ljmp
scas
pop
stos
aas
inc
add
adc
pop
mov
xor
add
fldl
test
cmc
das
add
dec
jge
les
sarl
ucomiss
in
test
das
sub
push
jb
insb
les
cld
dec
mov
xor
das
mov
stc
inc
adc
jno
ja
and
add
xchg
dec
pusha
or
sbb
cs
out
sarb
sub
adc
and
xchg
push
xchg
mov
cmp
nop
out
pop
mov
mov
push
mov
js
sub
lcall
sbb
push
push
cmp
push
or
and
push
movsl
es
or
scas
and
sub
xchg
shlb
fwait
dec
adc
jnp
push
sub
popa
jl
mov
dec
leave
std
jp
ljmp
andl
out
xchg
je
repnz
cwtl
ljmp
adc
pop
cmpsl
and
adc
movsb
jmp
adc
nop
test
jl
inc
iret
push
icebp
arpl
sbb
mov
test
jne
xchg
push
lea
push
mov
pop
dec
je
mov
dec
cwtl
pusha
rolb
push
inc
gs
shll
insb
xor
ja
add
stos
sbb
mov
cmpsl
test
sbbb
loope
push
sbb
push
jo
add
gs
sbb
or
dec
pop
adc
cltd
in
add
add
into
push
adc
cltd
mov
push
je
sub
mov
mov
test
jne
fisttpl
xor
inc
mov
dec
or
inc
push
xchg
leave
cmp
sbb
movsb
and
pop
into
into
and
cwtl
add
mov
xlat
cmp
push
loopne
scas
fcomps
jns
add
jno
jae
addl
pop
shlb
sbb
mov
stos
mov
gs
pop
adc
mov
or
adc
push
add
cmp
mov
insb
mov
cmp
loop
pop
sub
incl
daa
test
sub
inc
mov
fildl
mov
inc
sub
add
addb
shll
ficompl
cs
push
cld
xorl
xchg
xor
jb
jo
test
insb
and
lahf
inc
cltd
stc
cmp
sbb
mov
mov
or
sbb
and
bound
jae
sbb
rorl
cmc
mov
je
jmp
imul
vmovupd
adc
mov
jae
addr16
in
cwtl
inc
aad
shlb
in
jne
sub
adc
jmp
imul
loopne
dec
cwtl
pusha
add
jb
push
je
xor
test
xor
gs
test
loop
jl
and
add
jmp
rcrb
insb
cmp
dec
mov
xchg
or
mov
pop
push
movsb
sub
or
or
sbb
sub
divl
mov
es
in
mov
dec
jne
add
adc
mov
cmp
jo
xor
dec
push
test
inc
and
outsl
jp
push
adc
jae
push
and
cmp
inc
xchg
popf
mov
data16
adc
adc
jle
push
pop
loop
insl
cld
mov
jecxz
insb
mov
loope
iret
dec
out
inc
pop
add
popf
sbb
pop
mov
pop
flds
and
mov
add
movsb
stos
pop
rol
adc
dec
mov
add
dec
pop
adc
jno
push
dec
push
push
and
mov
push
sub
lds
add
and
fimull
lds
push
inc
xchg
pusha
push
mov
xorb
pushl
lds
les
sub
addr16
inc
and
push
subb
pop
add
lods
push
rcrb
adc
mov
daa
mov
push
les
xor
scas
or
inc
dec
mov
cmp
test
lods
sub
jne
cmp
cwtl
incl
pop
adc
xor
movb
mov
xchg
push
add
and
add
cmp
sub
add
nop
pop
add
jns
or
push
mov
or
stos
adc
in
leave
lcall
mov
and
cmp
test
stos
or
ret
mov
lahf
push
add
sbb
xlat
inc
push
add
shll
aad
mov
test
mov
or
pop
sbb
rclb
cwtl
mov
imul
daa
lcall
pop
push
pop
or
sbb
dec
add
les
in
dec
xor
push
add
add
pop
dec
adc
stc
or
jmp
xchg
sti
and
add
push
pop
stos
mov
jb
imul
or
rolb
mov
mov
fs
push
shrl
mov
inc
jmp
add
cmpsb
add
xor
pop
inc
loopne
sarb
jae
adc
xor
dec
rorl
add
and
and
sbb
jbe
repnz
xor
fmull
es
cwtl
nop
inc
pop
jnp
push
xor
sbb
mov
repnz
std
in
xchg
rclb
imul
mov
in
sbbl
and
test
adc
daa
orb
cs
push
and
mov
sbb
and
cmpl
dec
data16
xor
call
xor
adc
adc
scas
sub
xchg
jno
mov
or
dec
cmpsl
dec
push
mov
mov
mov
add
pop
sbb
sbb
popa
sub
jo
loope
mov
mov
rclb
ficompl
mov
jno
adc
popf
cmp
adc
adc
mov
mov
xor
data16
mov
loope
fadds
repz
xchg
dec
adc
lds
je
sub
scas
loop
frstpm(287
pop
popa
or
rorl
stos
repz
add
test
add
scas
call
adc
loop
cwtl
push
in
fisttps
push
jp
dec
popa
ret
inc
cmpsl
push
test
insb
sti
or
jno
cmpsl
test
aaa
nop
cmp
dec
insl
mov
js
adc
roll
sbb
shll
and
pshufw
mov
pop
je
mov
dec
inc
sahf
or
pop
jo
cmp
test
lret
into
and
mov
out
stos
xchg
jb
xor
jae
fbstp
cmp
syscall
divb
xchg
lds
aaa
xor
rorb
ds
je
outsb
fldenv
lahf
in
add
sub
add
xor
mov
imul
xor
les
xor
xor
adc
iret
shlb
sbb
fstl
add
inc
xor
pop
pop
cmp
jmp
mov
insb
sub
jno
adcb
pop
cmp
xor
sub
sub
and
iret
xor
dec
cmp
imul
test
and
sbb
in
mov
popf
cld
roll
dec
dec
mov
mov
or
dec
add
xor
scas
inc
lcall
jno
pop
xor
sbb
insl
je
stos
jmp
cmp
cmp
add
mov
jb
and
out
lock
add
sbb
ret
xor
and
sbb
pop
sub
add
cs
adc
inc
mov
jb
test
dec
adc
iret
dec
stos
jno
pop
daa
push
pop
dec
fnstcw
adc
out
dec
cli
cmp
or
rorl
xchg
out
dec
mov
xor
test
aaa
and
sub
xor
test
pop
loope
daa
sbb
jb
sub
mov
negb
ja
dec
sub
xor
sbb
lcall
sbb
cwtl
es
adc
sub
rcll
cmp
inc
mov
inc
mov
andl
lea
inc
xchg
add
adc
mov
sub
out
iret
cld
add
add
mov
xor
mov
inc
out
leave
push
mov
xor
dec
popl
adc
pop
fadd
push
aad
scas
adc
arpl
leave
lea
dec
fimull
stos
inc
push
xchg
out
inc
pop
fiaddl
push
outsl
mov
fisubs
notl
movsb
sub
add
mov
popa
inc
push
sahf
clc
aaa
jno
push
test
loope
dec
push
and
sub
cmp
or
pop
mov
xchg
shll
dec
jae
and
enter
adc
push
xor
insb
ljmp
popa
lcall
loopne
xchg
lods
nop
leave
push
mov
mov
pop
cmp
mov
cmp
adc
adc
sub
fdivl
pop
cmpsb
rorb
mov
mov
aad
add
movb
cmpsb
andl
push
or
pop
add
xchg
inc
jg
repz
test
push
xlat
xor
inc
loope
ret
inc
push
decb
sbb
sub
cmp
int
jno
cwtl
loop
push
dec
mov
icebp
mov
js
mov
and
mov
cmp
xor
lds
pusha
sqrtps
clc
mov
push
cltd
shlb
imul
xorb
dec
push
cwtl
dec
adc
pusha
xchg
fsubl
shl
inc
cs
pop
or
push
ja
sbb
dec
mov
sub
in
push
jne
loope
int
cmp
stc
insb
test
add
fwait
out
dec
or
sub
mov
add
xlat
inc
inc
loope
call
gs
or
inc
sub
sbb
pop
movsl
jmp
jno
outsl
mov
frstor
adc
insb
aam
cwtl
rcrb
fwait
add
xchg
adc
cmp
cs
mov
sub
bound
mov
adc
movsl
inc
orl
mov
jle
sub
lods
leave
xor
push
ljmp
sbb
mov
std
jmp
mov
or
mov
mov
mov
pop
adc
dec
and
xor
pop
int
sub
scas
test
or
sbb
scas
xchg
jno
or
pop
call
andl
mov
adc
jae
mov
test
cltd
or
add
movsb
cmp
repz
jp
adc
pop
or
add
popf
rolb
movsl
xor
cmp
inc
pop
outsl
push
jo
adc
test
mov
sbb
push
test
mov
inc
xchg
lods
scas
pushf
mov
jl
fsub
rolb
adc
imul
xor
add
jecxz
dec
in
inc
sbb
and
ljmp
gs
inc
mov
xor
enter
pop
inc
inc
push
push
movl
push
mov
push
daa
mov
cmp
mov
or
pop
inc
or
add
sub
pop
pop
sub
jns,pn
das
xchg
rcl
test
iret
sbb
inc
or
jne
dec
fadd
add
insl
pop
fisubl
ret
mov
mov
cmc
pop
inc
aad
add
leave
cmpl
add
ds
fistpl
mov
je
sahf
out
imul
icebp
mov
sub
imul
stc
repnz
mov
add
scas
outsl
orl
orb
andb
sbb
shl
pop
jae
mov
out
test
or
pop
movsb
and
xor
dec
xor
pop
rep
test
push
aam
out
add
cld
testl
jp
iret
outsl
test
outsl
dec
gs
push
pop
sbb
or
sub
sub
push
es
sahf
sbb
shlb
mov
jmp
fidivrs
addr16
pusha
or
pop
inc
inc
xor
push
mov
push
lds
mov
ret
les
repnz
nop
pop
push
cwtl
call
add
sti
test
mov
insl
cmp
xor
pop
pop
std
push
add
nop
mov
push
jno
mov
adc
outsl
dec
mov
in
std
sub
cmp
loope
pop
xor
subb
pop
fldenv
add
lea
subl
cmp
or
push
dec
xchg
sbb
sbb
jb
sub
lret
add
push
cmp
mov
and
rclb
sbb
push
and
jge
xchg
cs
push
adc
add
shrb
push
push
add
pop
mov
dec
les
or
xchg
cmp
cmpsl
popf
mov
es
loope
add
jno
adc
jbe
and
xor
sbbb
push
adc
aam
cltd
mov
aaa
insb
xchg
bound
subb
inc
jne
das
jns,pt
pusha
psllw
dec
lcall
mov
mov
adc
stos
pop
mov
popa
decl
mov
rorb
and
xor
test
xchg
sbb
mov
adc
out
or
xchg
xorl
or
jae
add
push
dec
movsb
and
xor
sub
subl
test
cmp
subb
pop
jecxz
repz
repnz
popa
mov
mov
les
jmp
sbb
mov
push
add
push
imul
and
addb
les
jecxz
inc
xor
inc
inc
add
xor
aas
dec
dec
sbb
lahf
test
adc
movsb
addl
icebp
or
pop
test
mov
clc
inc
push
mov
mov
in
scas
xlat
popa
push
inc
add
push
aam
sub
stc
add
shlb
adc
clc
shlb
sbb
dec
xor
mov
scas
add
pop
adc
adcb
in
mov
dec
mov
push
xchg
popf
sub
cmp
jns
inc
pop
orb
adc
sbb
xchg
cmp
cwtl
mov
dec
and
jmp
mov
mov
or
lds
jmp
adc
aam
sub
mov
rolb
rol
jge
jnp
add
rcll
sub
insb
faddp
or
call
fnstcw
mov
and
lds
ret
js
xor
daa
or
clc
ret
or
roll
stc
enter
sahf
lret
jmp
sbb
or
sub
mov
adc
push
xor
sbb
cmp
repnz
sub
add
sbb
and
sbb
xchg
movups
aad
jno
in
sub
in
ret
add
sbb
mov
mov
mov
sbb
xchg
test
sbb
push
push
mov
and
sbb
dec
insl
sub
in
jae
or
lahf
add
xor
xor
outsl
pop
das
sub
or
dec
repz
movb
sub
test
adc
pop
jmp
xchg
adc
dec
aaa
rcrb
je
into
sbb
inc
mov
mov
pop
and
or
rorl
or
sub
rcll
ret
sbb
inc
push
mov
fnsave
cmc
and
xchg
xor
jne
sti
push
xor
popa
add
repz
in
stos
or
test
or
xor
test
and
sbb
je
and
lret
jl
adc
add
xor
mov
adc
xor
dec
addl
add
jo
stos
add
insl
add
sahf
sbb
or
scas
enter
leave
sbbb
rorl
sub
cmp
fdivrl
mov
xchg
and
fisubrl
push
lret
in
jno
add
inc
xor
jnp
jl
shlb
add
xchg
adc
dec
sbb
inc
subb
add
push
sbb
add
inc
push
outsb
or
cmp
push
movaps
add
bound
js
repz
sarl
jo
fs
test
inc
cli
aad
jge
dec
add
push
push
add
adcl
push
pusha
or
adc
scas
sbbb
aaa
subb
xchg
jo
popa
stos
inc
scas
lea
notb
pop
fimull
dec
jns
push
fnstcw
lcall
cmpsb
xchg
cmp
cltd
push
sub
jecxz
fbld
iret
add
mov
les
and
push
push
xchg
fs
mov
test
in
adc
loopne
jge
sbb
movsb
sub
mov
mov
mov
dec
mov
sbb
fsubrs
xchg
idivl
inc
inc
push
add
pop
xchg
rclb
mov
add
jg
mov
jle
push
add
adcb
scas
je
and
jns
mov
pop
adc
sub
mov
adc
lods
mov
mov
rclb
popf
push
repnz
test
imul
push
addr16
add
sbb
aam
or
nop
push
dec
pop
adc
scas
cmp
fnstcw
je
inc
mov
bound
cmp
bound
outsb
cltd
cmp
mov
lock
daa
pop
cwtl
dec
xor
and
or
call
test
add
rolb
xor
daa
test
rclb
sbb
faddl
adc
jns
stos
es
sbb
loope
pop
dec
aam
pop
cmpsb
ljmp
xor
or
adc
inc
add
dec
jne
adc
push
popa
xor
scas
adc
repz
jg
adc
pop
add
scas
push
xor
mov
xchg
jp
test
mov
repz
cmp
mov
xor
pop
dec
xorb
repnz
jp
shlb
or
cmp
dec
pop
xlat
clc
mov
pop
and
xor
add
mov
mov
or
fstpt
movsb
pop
mov
mov
loopne
mov
add
dec
pop
push
add
shlb
xor
push
imul
loopne
cmp
aaa
scas
and
and
mov
ss
dec
gs
fadd
test
push
outsb
ret
xlat
xchg
push
rorb
push
stos
imul
mov
push
dec
out
jnp
call
mov
or
adc
jne
test
push
clc
es
add
movsb
stos
fucomip
sbb
sub
and
or
dec
cmp
cmc
mov
rorb
jnp
adc
add
pop
leave
lock
inc
pusha
sbb
jl
push
mov
clc
das
call
and
in
inc
int
jo
arpl
push
and
and
out
lea
inc
sti
lcall
inc
mov
imul
in
mov
rcrb
dec
je
cmp
cmp
jns
xchg
jno
sbb
sbb
jle
push
add
adc
xchg
jne
scas
mov
push
shl
orb
fisubl
insl
cltd
movsb
xchg
dec
jp
aam
jmp
lock
out
incb
mov
pop
loopne
push
leave
pop
xor
cmpsb
jo
dec
out
add
add
stos
sbb
bound
hlt
aas
dec
pop
imul
mov
dec
les
clc
pusha
movsb
jno
cld
test
jns
inc
cmp
gs
or
aas
clc
enter
shll
add
fidivs
cwtl
push
cmp
popa
adc
aam
add
sbb
add
pop
or
jne
test
sti
das
lock
dec
mov
mov
nop
cmp
shl
jbe
imul
test
mov
push
pop
dec
lods
and
jmp
pshufw
or
enter
push
ja
dec
add
xchg
or
dec
inc
movsl
loop
push
mov
and
push
aad
cmp
add
pop
inc
mov
mov
jecxz
xor
mov
in
or
stc
xor
fnstcw
ret
add
adc
fcomps
stos
xor
mov
outsl
mov
or
lods
mov
adc
xchg
lods
call
iret
adc
inc
stos
and
sbb
jge
xchg
loopne
stos
mov
push
cmp
jb
or
sub
ljmp
mov
shrb
hlt
movsl
mov
dec
dec
or
mov
bound
lods
pop
leave
push
mov
scas
sbb
mov
mov
and
stos
cmp
xor
sub
sbb
arpl
test
mov
mov
repnz
and
add
adc
mov
mov
jne
cmpsb
lret
sbb
pop
bound
pop
push
sbb
aas
xchg
sub
push
inc
push
push
sub
iret
xor
jae
push
xchg
mov
jne
shrl
shll
and
rcll
dec
dec
hlt
mov
adc
mov
iret
or
jecxz
jb
sub
add
icebp
daa
mov
sbb
popa
lahf
xchg
outsb
sub
adc
int3
cmp
fnstsw
lea
sbb
inc
and
xchg
or
fdivl
shl
or
or
sti
adc
push
dec
sbb
stos
bound
mov
cmpl
sub
adc
das
jns
lds
rolb
ret
mov
inc
xor
movsl
loope
cmp
mov
xorb
les
add
add
adc
xor
xor
pop
stc
nop
dec
or
pop
popl
jmp
dec
popa
cmp
push
orb
cwtl
out
sbb
push
jge
test
mov
adc
sub
cltd
or
jbe
mov
das
lods
mov
iret
and
and
call
sub
nop
fdivl
push
add
movsl
cmp
xlat
add
test
adc
cmp
loope
xor
dec
mov
dec
and
or
insb
or
movsb
push
mov
or
prefetchw
or
xlat
cmc
ds
inc
pop
and
jb
push
loopne
xchg
inc
jnp
mov
movsl
inc
inc
or
mov
sbbl
push
ret
pusha
stos
sbb
nop
sbb
test
pushf
mov
adc
add
int3
jne
push
pusha
lods
pop
imull
inc
imul
sbb
inc
cmp
movsl
push
xor
or
shlb
and
int
cmpsb
or
sub
xor
test
mov
jmp
rolb
add
push
fs
and
test
call
shrl
sbbl
dec
rclb
mov
add
js
pop
dec
rolb
add
fstps
push
aaa
mov
outsb
add
ljmp
sbb
mov
inc
add
mov
and
sbbb
scas
call
loop
add
add
insb
xor
jb
dec
ret
jl
cltd
sbb
mov
mov
orl
xor
test
mov
cltd
aaa
pop
and
add
inc
adc
mov
add
sub
xor
into
dec
hlt
les
or
push
lods
popa
sub
test
aaa
lock
jne
jl
adc
pusha
add
inc
inc
cmp
je
ret
add
leave
cmpsb
and
movsb
nop
enterw
add
in
scas
and
test
ss
das
push
insb
sbb
or
xor
add
xor
xlat
and
pop
add
mov
jmp
xchg
clc
push
fsts
pop
out
dec
bound
sub
add
iret
jge
add
xchg
inc
popl
sbb
xor
push
mov
jae
push
jmp
adc
mov
jle
mov
mov
or
sbb
add
nop
push
lods
daa
lea
or
inc
lods
mov
sub
add
add
jne
shrb
orb
push
sbb
or
in
cmp
sub
mov
xor
sbb
in
sbb
xchg
je
pop
xor
push
and
imul
add
loopne
rol
inc
fsubl
fldt
inc
jno
icebp
or
cld
shrb
scas
and
and
movsl
mov
cmpl
sbb
mov
movsb
add
les
fwait
and
fmulp
inc
pop
add
and
add
les
popa
mov
and
aam
dec
or
push
js
sub
les
sbb
test
das
ret
or
lock
imul
pop
lea
xchg
test
xor
xor
jg
fiadds
sub
inc
mov
cmpb
sbbb
adc
rolb
leave
push
ret
jb
xor
fabs
xor
lcall
dec
scas
stos
add
pusha
das
dec
push
dec
and
sbb
or
push
cmc
mov
pop
and
dec
dec
pop
push
adc
xor
subl
ret
scas
push
mov
sbb
xor
push
mov
mov
cwtl
testl
pop
cld
jns
push
adc
das
push
outsb
dec
out
ljmp
mov
ret
inc
xor
aam
jnp
and
push
scas
push
mov
leave
test
inc
push
dec
aaa
push
push
cli
cwtl
inc
push
insl
and
enter
ret
push
push
inc
cmp
movsb
rcll
loopne
push
push
cmp
cmpl
imul
add
mov
dec
xchg
rolb
xchg
mov
adc
lret
push
dec
aam
test
dec
adc
outsl
ficoms
or
or
adc
xor
in
inc
xor
or
push
push
rcll
sbb
mov
mov
sbb
inc
loopew
sbb
push
out
mov
pusha
pop
adc
loope
aas
shrl
sub
js
mov
xchg
push
movsl
xorb
push
inc
cli
push
fldcw
inc
or
lods
jecxz
mov
mov
sub
sbb
popf
lea
xor
or
and
jmp
sbb
or
mov
sbb
add
dec
scas
jle
jne
test
loope
jg
push
int
sbb
adc
orb
or
mov
inc
push
cmpsl
mov
pop
pop
aam
push
mov
ljmp
jp
inc
and
jne
mov
imul
adc
clc
cmp
mov
cli
test
loope
in
and
pop
loope
dec
stc
mov
cs
add
icebp
jne
repnz
and
pop
wbinvd
or
push
test
cmpsb
ss
or
in
lahf
inc
cwtl
stos
je
push
test
loope
jns
pop
femms
loop
cmpsl
daa
and
test
dec
pop
mov
push
es
and
loop
imul
adc
lret
inc
add
add
mov
jns
dec
bound
inc
inc
or
xchg
add
or
inc
cmpsl
movsb
push
out
jb
or
adc
or
push
cli
and
sbb
jmp
pop
adc
into
pop
mov
sbbb
xchg
push
dec
arpl
dec
fldcw
mov
or
xchg
test
push
adc
jo
sti
andl
pop
iret
mov
mov
test
xor
mov
loope
aam
inc
mov
stos
xor
ja
lock
and
or
and
inc
mov
in
stos
cmpsb
mov
cmpsl
mov
dec
mov
mov
xor
leave
adc
rolb
cld
ret
mov
xor
mov
cli
and
lds
pop
sub
and
bound
and
rclb
or
lcall
test
push
mov
cmp
mov
fisubl
xor
insl
add
adc
es
xor
shrb
xchg
add
pop
push
cmp
mov
or
adc
lcall
ljmp
xchg
add
push
in
mov
mov
leave
or
stc
les
lret
pop
or
adc
loopne
lcall
and
es
pop
sub
xlat
adc
pop
or
in
push
push
test
setle
push
test
xor
xor
shlb
inc
sub
inc
sbb
pop
int
add
and
mov
loope
jnp
shlb
arpl
adc
iret
mov
jmp
aaa
pop
test
inc
pop
movsl
xor
push
add
aas
and
insl
or
mov
std
mov
sbbl
push
add
push
inc
int3
daa
xchg
inc
xor
rclb
cmp
add
and
mov
imul
adc
roll
test
push
sub
movb
lahf
dec
fcoml
add
sub
xlat
fcoms
xor
aaa
daa
repz
les
test
nop
jb
and
imul
mov
add
cmp
sbb
adc
les
icebp
or
lds
push
int3
mov
rcll
lea
cltd
movsl
add
pop
imul
jecxz
les
mov
cmpsl
jg
push
push
js
aas
lahf
add
xchg
add
pusha
jns
dec
or
je
scas
nop
or
in
imul
and
push
fstpl
mov
sbb
push
ljmp
push
push
mov
repnz
add
test
push
outsl
or
mov
pop
inc
test
iret
pop
pop
pop
adc
aam
inc
xchg
pop
xchg
es
stc
jmp
dec
dec
add
xor
sbb
ss
test
and
push
mov
shll
daa
je
add
imul
adc
push
lea
mov
jo
bound
loope
les
inc
sub
mov
test
inc
mov
add
push
jb
dec
xorb
stos
dec
ss
cmc
insb
mov
jle
sub
test
adc
mov
or
xchg
ja
dec
inc
sbb
nop
and
js
xor
and
dec
out
lahf
out
push
aad
loopne
cs
push
xchg
imul
sbb
xlat
mov
cmpsl
out
sub
sbb
cmc
fs
inc
add
lcall
push
add
les
and
xchg
mov
inc
sub
and
arpl
lods
inc
push
addl
mov
dec
and
jge
movl
lods
adc
push
mov
and
xlat
cmp
sbbl
or
or
xor
pop
xchg
daa
pusha
jmp
daa
or
daa
dec
adc
loope
aas
aad
jge
call
push
xor
jecxz
stos
inc
daa
mov
int
add
or
hlt
ret
orl
push
add
push
push
and
das
lahf
xchg
sub
xor
add
out
mov
cli
xchg
and
lea
mov
xor
adc
insl
loop
data16
push
push
sbb
jmp
xchg
adc
push
mov
mov
add
rclb
push
stc
add
gs
roll
push
xchg
mov
xchg
repnz
stos
popf
rcrl
pop
push
or
inc
leave
loopne
pop
sahf
add
mov
mov
pop
cwtl
lcall
aad
mov
lock
xchg
xor
add
add
adc
sub
test
fidivrl
xchg
and
adc
sub
cmpsl
add
push
mov
sub
pop
les
test
inc
add
and
inc
loop
lcall
or
sub
lcall
push
adc
out
push
in
and
add
and
push
xor
jnp
mov
imul
jle
sbbb
adcb
dec
or
cmp
xchg
and
xor
popf
call
out
test
lds
add
mov
mov
sbb
jle
mov
jl
cli
inc
mov
or
les
fadds
or
es
bound
jno
adc
add
dec
clc
add
mull
and
xor
add
or
adc
inc
std
daa
ret
insl
or
push
xchg
out
inc
or
mov
cltd
gs
inc
daa
xor
sbb
aas
jecxz
and
leave
test
mov
pusha
mov
lea
shll
jns
pop
test
xor
and
aaa
add
jmp
jp
inc
add
sbb
aad
roll
add
shlb
mov
add
push
flds
shr
dec
and
inc
mov
mov
add
sbb
add
out
clc
test
cmp
addl
mov
cmp
xor
mov
sub
pop
xchg
in
imul
and
lods
inc
xor
pop
add
bound
dec
pop
mov
fnstenv
stos
push
jne
dec
test
push
mov
testb
pop
outsb
adc
fs
and
mov
call
dec
or
xchg
das
mov
nop
and
out
push
add
inc
repnz
sbb
inc
fsubs
pop
cmpsb
cmp
or
lcall
lds
sub
jecxz
and
ss
ds
inc
stc
add
sub
decl
inc
andb
xchg
cs
jp
add
rolb
leave
jae
sub
mov
int
and
sbb
push
add
xor
push
push
icebp
mov
add
pop
xchg
inc
xor
movsl
add
cwtl
shll
cmpsl
jecxz
dec
arpl
lods
cmpsl
outsb
fs
pop
in
nop
test
adc
test
mov
push
mov
sbb
dec
les
sbb
in
xchg
inc
daa
xlat
or
test
push
pop
in
mov
jmp
lea
hlt
dec
rol
dec
push
push
jo
jnp
adc
adc
xor
sbb
adc
test
mov
or
sbb
insl
scas
test
addl
adc
je
cmp
add
dec
popa
sbb
aaa
movsl
stos
add
adc
jl
push
std
xorl
and
mov
test
mov
nop
jecxz
push
movsb
dec
testb
pop
in
hlt
xor
cmpsb
cmp
xor
dec
movsl
cmp
pushf
push
andl
pop
jg
pop
mov
stos
xor
adc
push
push
iret
lds
push
inc
test
cmp
gs
ret
pop
jb
or
dec
dec
sbb
xor
add
inc
fstpl
loopne
mov
jnp
push
dec
mov
inc
test
sub
sbb
pop
imul
andps
push
xlat
push
or
mov
dec
adc
aam
add
or
test
out
lock
xchg
mov
inc
push
lcall
sub
je
xor
adc
xor
push
or
add
inc
pusha
add
xor
aad
mov
xchg
call
stos
xor
push
inc
add
xchg
out
or
rolb
imul
inc
jno
mov
lea
lret
fcoms
rorb
and
imul
rclb
sahf
sub
lods
pop
pop
adc
jne
ds
add
add
leave
xchg
xor
push
jnp
cmpsb
push
test
xchg
mov
xlat
cmp
add
sub
sub
lods
loope
gs
cmp
pushf
mov
popf
les
test
popa
dec
mov
jne
pop
push
jmp
adcb
sbbb
arpl
xor
adc
add
xlat
push
dec
aas
add
inc
sbb
gs
sub
xor
cmp
jne
cltd
sbb
add
pushf
out
mov
outsb
jmp
loope
subl
orl
adc
jns
test
nop
inc
cmp
dec
ret
dec
xor
push
daa
or
push
xor
lods
push
stos
xchg
dec
xor
or
push
test
or
xchg
scas
jmp
pop
push
shlb
pop
adc
gs
inc
or
push
inc
push
inc
xor
xchg
test
jne
test
enter
dec
lcall
cld
rorb
lds
movsl
add
sub
adc
add
addl
inc
rcpps
and
cmc
rorb
sub
lods
nop
paddusb
add
andb
inc
and
add
dec
cmpsb
in
aaa
sbb
xor
jo
and
pop
lcall
mov
push
xor
mov
inc
in
pop
add
subb
mov
sbb
add
push
dec
repz
in
xchg
popa
lods
or
mov
mov
pandn
ffreep
mov
test
cwtl
js
and
sub
xchg
cmp
sbb
adc
sbb
xorl
enter
xlat
mov
push
adc
sub
daa
push
inc
or
imul
dec
mov
push
or
imul
add
push
daa
ja
mov
adc
pop
jb
mull
scas
or
aam
add
test
popa
out
inc
and
and
or
sti
pop
enter
sub
mov
icebp
in
dec
jne
ret
imul
mov
mov
jo
repnz
lock
data16
test
sub
sbb
cmp
push
aas
lds
aaa
cs
xchg
dec
xchg
and
xor
rolb
push
jb
test
sub
pusha
xor
vcvtsi2sd
xor
stos
outsb
jno
inc
push
int
adc
cmpsb
add
arpl
mov
add
int3
bound
clc
ljmp
pusha
popa
and
xor
sub
cmp
test
add
inc
dec
lcall
add
sbb
sbb
lret
pop
sbb
and
xchg
sbbl
dec
mov
and
pop
int3
rclb
shrl
loope
cmp
shl
mov
adc
rolb
popf
jno
ret
repz
pop
cmp
aaa
stos
xchg
ret
inc
iret
sbb
dec
push
incl
unpckhps
bound
dec
pop
dec
push
pop
push
push
xor
adc
cmp
push
or
sub
iret
sub
les
clc
xchg
stos
sarb
pop
lea
add
sbb
add
cwtl
sbb
ljmp
xor
or
cmp
movsl
jae
add
shlb
or
testb
sub
hlt
sti
sahf
adc
sub
shlb
inc
inc
rsm
aad
pop
pop
stos
push
mov
add
jb
adc
or
fwait
mov
sub
ds
and
jmp
and
sub
sub
dec
xor
mov
jo
sub
xchg
add
push
jmp
movsb
fildl
mov
jne
jno
add
cmp
faddl
or
ret
dec
lds
imul
jl
and
push
icebp
in
adc
xchg
sbb
jb
jecxz
pop
les
inc
sbb
and
add
mov
push
jae
fmull
nop
dec
outsb
ret
test
pop
push
push
cwtl
cmp
or
pop
jle
cmp
dec
pop
or
sub
pop
jb
lahf
jne
or
dec
inc
and
xor
test
data16
iret
popf
inc
xchg
adcb
inc
adc
pop
or
push
hlt
pop
imul
mov
inc
rcll
hlt
dec
xchg
sbb
ret
popf
bound
xor
ftst
dec
outsl
fwait
movb
mov
dec
xor
jne
adc
xor
mov
js
add
mov
ljmp
stos
jecxz
mov
add
sahf
imul
test
enter
leave
sbb
mov
and
jg
inc
add
push
inc
mov
jo
mov
ficoml
jmp
jg
mov
dec
push
and
push
add
movsl
xchg
cmp
xor
sbb
ds
xchg
lea
scas
cmp
add
outsl
sbb
cs
and
cmpl
mov
lods
push
lahf
cwtl
or
ja
or
sti
cltd
mov
inc
movsl
add
mov
push
adc
addl
inc
inc
mov
ret
inc
jo
or
mov
dec
or
xchg
fstl
push
and
maxps
xor
adcb
cli
mov
or
imul
cmp
mov
fldl
push
stc
lds
ss
push
andl
lret
mov
mov
loop
andb
loop
sub
adc
add
inc
or
mov
movsb
or
lahf
test
xchg
mov
xor
push
insl
mov
jmp
or
call
loope
test
push
shlb
xor
sbb
insb
jecxz
scas
mov
jno
dec
mov
test
test
adc
fdivs
pop
mov
faddp
fwait
inc
mov
je
push
in
inc
and
dec
dec
xor
mov
mov
dec
push
push
sarl
mov
sbbl
gs
push
add
iret
insl
ret
pusha
lods
fst
dec
push
loope
fstpt
push
cmpsb
out
push
dec
lahf
cmp
xor
test
add
call
inc
add
xor
js
xor
cmp
jne
loop
dec
add
lcall
or
call
adc
sbb
cmp
add
push
loope
imul
adc
pushf
scas
shrb
add
adc
and
stos
dec
test
mov
imul
xchg
pop
add
shll
pop
ret
inc
nop
dec
movsl
mov
push
out
mov
sbb
aaa
xor
bound
rorb
inc
sbbb
xor
and
call
dec
and
xor
leave
orl
add
push
or
ljmp
jo
int
pop
dec
inc
insb
je
je
dec
je
mov
cs
adc
loope
or
add
int
lcall
shrb
test
xchg
in
push
aaa
lods
lock
repnz
mov
jmp
pop
es
add
or
push
sbb
mov
fildll
loope
cmpl
inc
testb
pop
jl
sub
mov
ret
xor
dec
lcall
jb
movsb
and
rclb
mov
pop
add
pusha
mov
enter
popa
jl
push
mov
inc
lcall
xchg
dec
mov
adc
dec
movb
cmp
xorl
ret
inc
mov
inc
or
push
pop
or
or
test
add
xlat
sub
int3
inc
inc
pop
movsb
xor
lea
scas
loop
sub
in
or
sti
jl
cmp
cmp
lcall
mov
loope
pop
and
scas
or
jae
or
jle
push
xchg
je
cmp
mov
bound
push
add
sub
push
mov
add
push
je
adc
xchg
mov
mov
inc
cmp
sub
rolb
mov
rol
inc
test
pusha
es
lds
popa
xchg
cmp
sets
mov
jge
test
jmp
inc
push
push
mov
sbb
push
or
imull
mov
loopne
fcmovbe
sub
push
movsb
or
cmpsb
sarl
jmp
mov
inc
jle
or
xor
sbb
mov
jnp
push
dec
push
add
cmp
jge
or
and
scas
pop
add
xchg
jp
xchg
jge
jmp
mov
lock
decb
sbb
jno
fs
and
popf
mov
addl
popaw
imul
in
mov
addl
pop
push
xchg
cmp
push
and
inc
push
xor
scas
test
dec
aad
daa
nop
iret
xchg
dec
pop
sbb
inc
movsb
orl
push
lret
mov
in
sub
dec
lea
call
and
shr
xchg
inc
movsb
ja
aaa
sub
es
inc
lods
or
cmp
movsb
stos
inc
repz
dec
push
stos
or
dec
push
lret
pop
sbb
sbb
mov
dec
or
test
pusha
sbb
dec
int
in
mov
adc
stos
or
push
outsb
clc
xchg
sbb
out
movsl
pop
popf
cmp
stc
std
enter
xor
pop
shlb
lea
movsb
pop
mov
into
je
add
testb
pushf
call
ret
pop
jp
ret
add
mov
pop
push
adc
cmp
add
pop
and
adc
test
mov
jnp
mov
rolb
or
push
shrl
fildll
or
mov
or
fisttpl
inc
or
mov
and
mov
jnp
pop
pop
rolb
jmp
js,pn
aad
ret
repnz
mov
or
sub
push
mov
add
jno
or
cmp
push
and
sub
orb
hlt
pusha
orb
lods
jb
push
mov
pushf
leave
jp
rclb
adc
cmc
cwtl
test
dec
jg
mov
xor
jmp
imul
iret
data16
gs
aad
xchg
mov
xlat
stc
or
aaa
dec
push
dec
jae
sub
push
or
pop
jne
int
xchg
test
inc
imul
cmp
imull
lcall
dec
nop
ds
cmpsb
stos
mov
pop
nop
xor
add
add
cmp
inc
ret
cwtl
sub
pop
mov
mov
cltd
cmp
pop
ret
sub
adc
imul
cltd
add
mov
fnstsw
pop
dec
loop
push
fwait
adc
push
jp
lret
iret
fsubs
push
and
add
fadd
adc
lea
xor
imul
repz
xchg
arpl
and
stc
xorb
xor
or
in
adc
int
pop
nop
and
cs
ljmp
test
push
das
adc
xchg
rcl
fistl
pop
sbb
sub
hlt
lods
movsb
add
pop
pop
xchg
add
push
pusha
repz
jo
mov
adc
test
add
add
inc
arpl
xor
xor
jl
test
adc
inc
leave
inc
cmp
jmp
inc
addr16
xchg
sub
adc
push
inc
push
dec
jmp
add
enter
inc
pop
push
gs
jne
xchg
cwtl
sub
sub
and
inc
inc
and
push
or
dec
xchg
jno
push
movl
jae
inc
xor
add
icebp
inc
sbb
mov
lea
mov
mov
and
pop
dec
les
test
add
rcll
and
movsb
xor
push
or
cmp
aas
icebp
adc
cltd
push
inc
mov
out
rclb
push
jo
rolb
push
test
xchg
je
loope
add
rclb
fisubl
leave
inc
out
clc
imul
cmp
inc
and
mov
and
mov
or
add
xlat
mov
add
sbb
cmp
mov
jp
nop
push
sub
lds
xlat
dec
inc
test
pop
test
sub
jns
imul
xchg
xor
mov
shrb
or
xchg
push
in
inc
int3
aam
dec
aad
inc
pop
xchg
rcrb
add
add
subl
rcll
or
les
inc
dec
aas
mov
stc
sbb
pop
mov
aas
xchg
lea
cwtl
mov
pop
sysexit
popf
cmpsl
push
enter
or
inc
leave
adc
mov
rol
imul
int3
adc
push
mov
stos
jno
xchg
out
push
gs
mov
aaa
mov
repnz
jecxz
call
pop
rorl
add
test
xchg
add
jo
add
or
stc
mov
inc
hlt
in
or
orb
les
je
pop
sub
out
mov
loopne
add
pop
push
pop
scas
aas
xor
add
mov
movsb
orl
and
jo
or
fcoml
push
jmp
aas
and
shll
xor
mov
loope
adc
lods
or
jmp
sbb
add
add
rcll
cmp
dec
mov
test
call
sub
bound
xchg
cmpl
dec
sub
leave
push
xchg
lcall
test
or
push
aas
cld
add
cwtl
addb
mov
add
xchg
mov
inc
or
jmp
xlat
lea
sahf
imul
inc
dec
stos
mov
pushf
mov
hlt
or
adc
pop
and
and
push
dec
pop
push
xchg
sarb
leave
mov
roll
or
add
push
enter
push
jnp
sbb
adc
xchg
faddl
pop
pushl
jns
ret
test
mov
xlat
ss
inc
adc
inc
adc
push
jbe
inc
sub
xor
adc
cwtl
cmp
pop
or
ljmp
inc
sbb
mov
ja
and
add
mov
mov
cmpb
adc
adc
push
dec
adc
jae
fistpl
mov
push
loop
xchg
mov
test
mov
test
out
jno
mov
movsl
jne
mov
adc
ret
sbb
stos
push
dec
jnp
sub
loopne
xchg
sub
aad
pusha
or
leave
add
pop
mov
xchg
adc
dec
add
nopl
jmp
sbb
fistpl
pop
jg
loopne
sub
mov
lcall
popa
fldl
mov
stos
adc
orl
cmp
dec
push
add
push
sbb
inc
mov
sub
test
imul
mov
cmpsb
ret
inc
sbb
xor
sub
add
pop
pushf
loop
dec
ffree
jo
or
rcll
mov
adc
shrl
dec
push
sbb
sub
mov
xor
int
mov
add
or
push
xchg
and
aad
add
push
pop
jle
dec
or
jg
mov
push
pop
filds
push
mov
inc
lods
in
adc
cmp
daa
jns
push
push
inc
pop
bswap
mov
pop
insb
mov
stos
rolb
lods
mov
adc
ret
sub
xchg
addb
sbb
imul
adc
mov
lcall
mov
xor
dec
loopne
iret
call
or
inc
jne
push
sbb
mov
inc
in
xor
or
adc
adc
nop
inc
pushf
cmp
jo
orl
sbb
rolb
sbb
mov
in
sahf
mov
jge
test
stc
jp
push
pop
loop
push
mul
hlt
mov
cmpsl
jmp
fcoml
mov
xor
pop
dec
ss
mov
xchg
addl
imul
popf
xor
add
cmp
test
mov
pop
mov
stos
add
or
daa
sub
stos
test
rol
mov
bound
pop
sar
test
mov
pop
and
nop
or
jno
sub
mov
mov
jl
push
xchg
adc
aas
ret
adc
xchg
inc
mov
pop
adcb
add
mov
push
and
push
sub
mov
or
add
mov
sbb
mov
mov
pusha
inc
pop
and
dec
popf
clc
inc
mov
lcall
mov
xor
xor
or
pop
xchg
adc
ljmp
sub
popa
jno
or
add
or
pop
sbb
cmpsb
pop
enter
xor
cmpsb
sbb
loope
jo
push
fwait
sbb
les
nop
dec
fnstenv
sbb
mov
mov
outsl
mov
inc
dec
adc
sbb
and
cmc
push
mov
dec
adc
aaa
test
and
jne
mov
int3
ljmp
or
ret
jmp
or
aad
mov
aam
dec
mov
add
pop
and
sahf
and
fists
mov
sbb
dec
sahf
jns
scas
cmp
scas
dec
dec
adc
add
pop
sbb
je
lds
add
push
or
mov
dec
push
cmp
and
and
mov
or
insl
mov
loop,pn
lea
add
xor
sbb
les
outsb
pushf
bound
aaa
cmp
cmp
cmp
sub
pop
je
adc
adc
xor
hlt
int3
fsubrp
imul
inc
inc
xchg
dec
push
mov
push
sub
or
sbb
incl
popa
shlb
les
mov
sti
mov
cmp
add
sbb
es
adc
mov
or
mov
out
neg
sahf
mov
add
push
mov
add
mov
xorl
mov
push
negl
adc
fs
test
fs
fnstcw
ljmp
mov
movsl
xchg
stos
xchg
jg
idivb
mov
pushl
push
xchg
out
add
adc
or
idivl
imul
out
or
insl
or
mov
popa
stos
lret
movaps
test
lahf
pushf
mov
mov
dec
mov
xchg
push
iret
addr16
lcall
ret
push
sub
jg
fildll
rorl
enter
lods
out
lods
mov
lock
cs
mov
mull
aam
rcll
xor
lret
data16
jecxz
adc
notb
adc
negl
bound
bound
cli
scas
out
mov
jle
push
movzbl
mov
loopne
push
dec
dec
mov
cmp
loopne
jb
pop
push
in
aas
xchg
cmp
push
test
clc
stc
mov
mov
fiaddl
fs
push
jb
iret
adc
bound
mov
adc
and
inc
cmpsb
sub
mov
movsl
std
fs
sub
and
in
jl
out
sbb
nop
pop
mov
xchg
jmp
xchg
inc
push
cltd
push
ljmp
adc
push
sub
inc
lahf
jmp
inc
and
pop
loope
loope
inc
xor
mov
in
jecxz
loop
icebp
fildl
iret
out
add
xchg
out
cwtl
out
fwait
cmpsb
mov
mov
mov
inc
bound
adc
mov
jg
andl
jle
jge
jl
push
test
inc
rol
sbb
insl
ss
shrb
push
jns
cmpsl
cmp
mov
xchg
mov
push
jns
dec
mov
in
nop
lret
mov
pushf
lret
dec
mov
jge
adc
mov
mov
mov
mov
movsb
repnz
popl
dec
in
mov
pusha
fsubs
xchg
xchg
or
fnstcw
ficoml
aas
fs
mov
push
bound
jmp
sub
add
add
cmpsl
cs
outsl
outsl
mov
loopne
pop
out
push
cmp
lcall
in
daa
mov
sahf
stc
mov
scas
adc
push
sti
dec
cmp
aas
std
out
add
scas
aas
sar
mulb
pop
lcall
outsb
adc
add
enter
jp
mov
out
mov
int
xorb
push
aaa
out
xor
stos
aaa
mov
in
outsl
adc
xor
mov
fisttpl
divl
sub
and
lods
std
cmpsb
cmp
mov
in
cs
add
cs
fidivrl
jo
cmp
imul
add
pop
lret
jp
das
and
xchg
mov
jg
stos
push
out
fwait
ljmp
push
fimuls
and
incl
cmp
imul
add
inc
push
jne
aaa
shlb
jnp
add
xor
sbb
pop
mov
stos
push
pop
sbb
fldt
pop
mov
call
xlat
pusha
inc
xchg
out
dec
rorb
repz
and
jge
xor
jecxz
mov
xchg
out
mov
pop
and
lods
stc
test
nop
fcmovnb
mov
movsb
mov
lahf
sti
mov
ficoms
xchg
xor
fs
push
sub
mov
cmpsl
mov
xchg
out
pop
in
sub
add
inc
add
stos
movd
mov
mov
in
dec
dec
xor
insb
push
ljmp
cmp
mov
add
mov
jmp
cmp
in
sbb
sub
pop
jg
sub
and
imul
mov
sub
cmpsb
sub
fsubl
shll
push
out
or
jl
xor
adc
mov
xchg
and
pop
xchg
call
scas
ljmp
sub
jge
add
cmp
incl
mov
sbb
insl
test
fucomip
or
das
enter
and
ficomps
pop
ja
daa
pop
mov
and
repz
lock
sub
xchg
imul
fldln2
mov
pop
clc
mov
and
fwait
xor
pop
das
testb
sub
sub
daa
pop
jecxz
in
add
mov
mov
sub
add
mov
pop
xchg
push
dec
ret
ds
xor
je
xchg
inc
pop
stos
jp
aam
mov
hlt
ljmp
stc
pop
sub
fnstsw
pop
clc
out
insb
shr
lcall
jecxz
or
xor
jmp
mov
pop
inc
outsl
lcall
stos
out
push
xor
test
cs
adc
pop
adc
mov
subl
ret
mov
jecxz
add
pop
push
in
mov
inc
dec
inc
fdivl
mov
adc
test
xchg
out
lcall
sub
inc
repnz
cli
mov
mov
stos
mov
mov
aam
jecxz
lods
jne
int
jle
movsb
jmp
push
dec
sbb
sbb
loopne
jmp
decl
mov
pop
jecxz
aas
insb
pop
adc
out
clc
inc
in
scas
push
push
sahf
jmp
jmp
cwtl
sub
imull
out
fistl
mov
popf
push
aam
lcall
out
test
sti
mov
mov
fs
sbb
mov
add
mov
mov
lock
leave
fs
pop
adc
fs
or
outsl
fs
fcoml
aam
lcall
loope
jle
loopne
cltd
jmp
push
add
cs
mov
mov
in
insb
wrmsr
das
clc
test
adc
aam
lcall
xor
push
sbb
push
mov
mov
lods
cmp
shlb
roll
sub
mov
clc
out
add
inc
mov
mov
jecxz
hlt
incl
sbb
call
jecxz
cs
in
in
movsb
repz
add
push
or
sbb
dec
scas
add
lret
sub
lcall
movsb
inc
jmp
inc
pop
adc
stc
daa
in
lock
sarb
out
rclb
scas
or
repnz
pop
stos
leave
adc
test
pop
sti
rcll
push
inc
into
out
subl
jb
mov
in
xchg
lods
mov
insl
cmpb
out
dec
cld
insl
sub
sbb
in
sub
inc
lcall
fs
inc
cmp
and
sti
movsl
in
lcall
fiadds
inc
fldt
cs
sbb
sbb
mov
andb
jmp
jmp
popl
lcall
pop
outsl
inc
sbb
leave
fdivl
inc
pop
push
inc
inc
das
pop
ss
cmp
es
push
leave
lahf
loopne
or
flds
xchg
mov
cmp
mov
cmp
aam
pop
pop
mov
fsubr
sub
ret
pushf
js
push
jmp
dec
xchg
inc
inc
push
push
jmp
popa
les
push
jb
movsl
aad
pop
xor
dec
inc
add
in
lods
mov
movsl
ds
push
shrl
es
inc
insl
stos
in
out
jle
cmpsl
push
or
out
loopne
stos
call
out
xchg
sub
pop
out
outsl
adc
xchg
sub
sub
aad
stos
clc
push
sbbl
insl
sub
out
mov
or
daa
roll
dec
lds
int
stos
in
in
cmp
or
test
xor
fistl
push
fsubl
inc
push
add
cmp
pop
pop
and
jmp
xchg
lret
movl
repz
pushl
inc
push
fs
pop
loopne
daa
fs
pop
pop
mov
xchg
fdivl
sbb
mov
xchg
add
jg
out
repz
and
sub
adc
add
or
shl
cli
int3
outsl
std
add
push
jmp
out
cld
add
ljmp
mov
in
out
mov
mov
outsl
sahf
out
mov
incl
mov
push
cmc
repnz
jnp
pop
shll
sti
mov
mov
out
mov
repnz
out
out
cmpsb
out
idivl
decl
mov
jge
loop
lods
cli
push
mul
mov
jle
mov
xchg
jg
jo
addl
dec
cmpsl
neg
in
fidivrl
cs
out
inc
out
notb
in
repnz
fiadds
movsl
mov
pushl
push
out
cli
out
out
out
jbe
std
fldcw
jbe
mov
jmp
cmpsl
out
mov
pop
mov
sti
mov
ljmp
cmp
testl
call
mov
mov
mov
sbb
std
push
scas
jecxz
fiadds
cli
incl
push
dec
ds
dec
in
mov
jbe
lcall
cs
mov
out
push
mov
push
mov
cmp
jmp
out
aaa
int
and
jecxz
jmp
out
mov
push
mull
pop
out
fstp
sbb
mov
cli
es
push
pop
in
lods
clc
pop
movsl
loop
xchg
mov
aaa
adc
out
fiadds
data16
push
cmp
pop
loop
push
mov
ljmp
jecxz
scas
push
out
cs
pop
mov
mov
xlat
push
push
mov
rep
jg
xchg
push
jle
lods
pop
jbe
out
sub
scas
imul
dec
cmpsl
out
out
std
cli
pop
pusha
or
add
idiv
mov
icebp
insb
cmpsl
repnz
mov
pushf
loopne
pop
sahf
lods
cld
cmc
inc
into
cmpsb
sub
jecxz
cmpsb
scas
out
testl
jecxz
test
jecxz
push
out
data16
push
sbb
pop
fdivrp
push
mulb
sbb
imulb
idiv
mul
pop
lods
scas
jbe
push
pop
loope
push
mov
mov
ret
mov
mov
mov
push
lea
div
into
es
in
sahf
push
repz
push
mov
ja
icebp
sahf
dec
std
xchg
mov
inc
xchg
idiv
pop
out
dec
push
cmpl
mov
aas
jecxz
incl
mov
push
mov
shr
ret
dec
negl
jmp
lahf
inc
cmc
lock
ja
ljmp
lock
ljmp
cmc
jl
mov
out
mov
sahf
xchg
rol
push
push
dec
ds
jae
push
pop
cli
dec
ss
decl
mov
roll
push
push
cmc
out
dec
lods
test
decl
arpl
fldt
dec
xlat
out
test
push
sub
jo
cs
jmp
sbb
aam
xor
stos
cwtl
pusha
add
inc
pop
pop
dec
decl
pop
and
iret
mov
push
sbb
rorb
daa
movsb
xchg
push
daa
je
adc
pop
data16
jo
sub
lcall
xchg
pop
jnp
adc
xor
lahf
mov
sbbl
or
or
popa
pop
shlb
pushl
push
add
std
sbb
jp
sahf
mov
adc
call
fmull
in
sbb
xchg
fisubs
or
fistpll
dec
shrb
sbb
shll
fmuls
push
adc
sub
inc
adc
sub
cmp
and
inc
add
jae
push
jmp
push
imul
push
jo
arpl
imul
inc
jnp
jb
popa
inc
inc
imul
inc
imul
in
outsl
jb
and
es
gs
jne
and
push
push
neg
mov
subb
adcb
inc
outsl
outsb
fs
in
imul
fs
outsl
jo
mov
cltd
iret
fimull
rclb
dec
dec
popa
dec
outsb
data16
data16
insl
popa
pop
mov
push
insl
rclb
add
mov
imul
gs
sub
push
sub
in
sbb
fs
gs
or
and
addb
jns
inc
sbb
popa
jne
push
xor
inc
outsb
jne
insb
jo
pop
icebp
jae
push
insb
inc
sub
push
fcomip
dec
jne
jo
sub
bound
jge
sbb
sbb
push
fidivs
push
je
fstl
or
pop
imul
popa
imul
or
bound
shl
jo
mov
sbbl
and
dec
imul
mov
or
xchg
or
xchg
adc
leave
ss
jnp
popa
in
shrb
jns
dec
jl
ret
inc
xchg
pop
pop
push
lods
jbe
jae
cmpsl
loope
and
js
adc
or
dec
gs
in
nop
jecxz
mov
xor
mov
push
shll
adc
es
jne
sub
mov
addr16
addr16
push
dec
dec
enter
push
insl
dec
push
and
or
push
mov
insb
or
add
inc
gs
scas
pop
insb
adc
xor
push
push
adc
gs
sbb
sbb
movsl
lock
and
pop
lret
xchg
rcrl
fsubs
xor
push
outsb
out
push
or
imul
jo
sub
pop
subb
loope
add
inc
inc
jg
pop
pushf
arpl
loopne
pop
jne
mov
outsb
and
mov
lcall
arpl
bound
dec
insl
jnp
mov
pop
push
push
je
jbe
push
jb
popf
insb
jno
push
aas
mov
push
arpl
outsb
inc
jne
add
out
fsubl
outsl
jbe
jbe
das
in
and
xchg
or
adc
lds
pop
iret
cmp
int3
xor
bound
sahf
push
mov
hlt
fadd
or
mov
inc
inc
push
mov
ja
cbtw
hlt
xor
push
adc
into
add
add
addl
xorl
sbb
pop
push
xor
and
jae
sysexit
pusha
jno
push
gs
mov
add
sbb
push
mov
mov
jb
jg
outsl
jae
gs
dec
mov
dec
cmp
inc
mov
xchg
imul
data16
divl
xor
jo
mov
xorb
fwait
and
mov
ret
insl
jo
dec
dec
inc
push
cmp
fs
cld
add
imul
pop
rcrl
jle
fldl
cmp
xor
sub
mov
inc
or
daa
mov
sti
push
fs
jns
xor
mov
subb
xor
negb
ja
cmp
jo
je
add
push
sub
bound
aas
mov
push
je
push
fmuls
dec
icebp
jns
les
jo
imul
adc
or
sbb
mov
push
push
jae
push
push
loope
cli
cmp
pop
orb
inc
mov
pop
pop
lahf
push
outsl
ja
xor
sub
add
mov
push
fs
sbbl
movsb
sbb
repnz
mov
jl
mov
les
push
and
inc
pop
popa
and
push
jo
bound
frstor
add
test
mov
test
add
nop
xorb
xchg
shrb
push
jbe
sbb
popa
ja
inc
push
fld
pop
jg
inc
jae
and
jns
and
pop
mov
lahf
ja,pn
push
adcl
cmova
hlt
push
mov
xor
and
out
pop
xor
rolb
out
lret
ljmp
int
inc
data16
out
jbe
adc
test
inc
shll
fs
pop
jns
inc
mov
jae
dec
inc
dec
daa
dec
push
or
or
loope
pop
arpl
push
ja
adc
jb
mov
lods
pusha
push
sbb
jae
jo
ret
es
pusha
pop
sbb
popa
fidivrs
pop
pop
test
cmp
mov
jp
jl
js
push
xorl
loope
sbb
jae
jne
xchg
add
add
das
or
pop
add
push
xor
loopne
sbb
je
stos
ss
rcrl
dec
adc
in
insb
into
or
cmp
cmp
sbb
cmp
push
imul
push
sub
pop
insl
fwait
mov
insb
mov
mov
ficompl
dec
sub
mov
sbb
mov
testb
cmpsl
rorb
enter
mov
fstl
fsubrl
mov
out
inc
pop
and
cs
cs
addr16
mov
jb
arpl
inc
lret
cld
aas
stc
call
add
dec
add
add
add
add
add
add
sbb
cmpsb
pop
fld
add
add
add
pop
pushf
add
ja
ret
jns
xchg
sbb
push
cmp
pop
pusha
prefetch
nop
push
enter
in
sub
or
jns,pn
jl
inc
push
add
add
inc
lcall
xor
dec
sbb
dec
js
arpl
ds
add
dec
inc
jns
daa
rol
or
dec
pop
adc
fiadds
in
inc
cs
sahf
dec
sahf
add
jo
add
ret
roll
or
jbe
aaa
in
sbb
dec
xchg
and
add
adc
mov
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
