jmp
mov
add
xchg
fiaddl
add
cs
es
mov
push
push
push
push
or
add
xor
push
call
mov
jg
shrb
clc
mov
xor
sub
mov
inc
add
cmp
jmp
pop
jmp
jmp
mov
push
movl
add
or
rolb
test
pushl
mov
xor
sub
ror
mov
xor
jne
cmp
sti
inc
or
je
push
pop
pop
inc
cmc
je
lods
inc
xchg
fdivs
shlb
cli
repz
sub
jmp
inc
jl
sub
xorl
outsl
jle
xor
into
je
and
repz
insl
sbb
fildl
jne
add
add
mov
call
leave
ret
push
out
pop
lock
xchg
sbb
add
gs
adc
ss
xor
inc
ret
outsb
addr16
mov
pusha
incl
sbb
dec
ret
cmp
in
iret
ror
jle
int3
push
pushl
xor
and
mov
sub
push
dec
in
outsb
outsl
outsl
mov
xor
push
mov
fwait
mov
inc
clc
lea
mov
mov
cmpsl
std
or
pop
push
ret
int3
add
pop
and
push
push
mov
jae
xor
cmp
loopne
add
or
ljmp
add
adc
dec
add
iret
xor
dec
add
pop
jnp
mov
pop
push
sub
inc
add
jne
or
mov
incl
and
lea
mov
and
lea
mov
dec
xchg
lea
mov
cmp
push
mov
mov
inc
sti
out
push
test
in
add
dec
mov
jne
cmpb
or
repnz
cwtl
sbb
pop
pop
add
ret
jns
adc
inc
jmp
adc
cmpl
jne
cmpl
lods
jge
and
push
lock
push
jnp
sbb
push
push
clc
xor
or
test
sbb
out
subb
or
adc
aad
enter
xchg
pushf
dec
adc
dec
or
push
jg
mov
or
jmp
iret
loop
icebp
decb
test
mov
popf
sbb
pop
dec
mov
fnstsw
scas
mov
adc
pop
push
mov
jle
std
pop
pop
ret
cmpw
mov
sbb
push
inc
or
ss
mov
jg
push
jbe
xor
cmp
rorl
inc
xor
mov
nop
push
inc
out
sbb
mov
mov
mov
sarl
sbb
or
in
mov
pop
add
adc
pop
adc
jl
xchg
jne
push
adc
inc
fwait
cmpsb
imul
mov
in
cmpsb
jle
out
jg
push
mov
cmp
je
sbbl
fdivrl
push
rol
pop
push
fcomps
jge
add
mov
or
sbb
es
mull
push
pop
decb
push
cmp
sbb
and
jl
enter
mov
xor
push
jge
push
mov
sbb
mov
lahf
daa
adc
mov
dec
or
aas
mov
or
or
pop
push
pop
lock
movzwl
jmp
push
pop
push
push
push
fldenv
add
in
jge
lods
mov
popa
or
or
jmp
jp
mov
or
ret
mov
adc
aam
jecxz
add
es
fstpt
in
adc
loop
cltd
sbb
add
cmp
int
add
ret
sbb
hlt
jp
adc
mov
push
in
push
jne
xor
xor
je
sti
xor
dec
and
sbb
cmp
xor
cli
adc
bnd
lea
sahf
mov
stos
add
sbb
in
out
rclb
inc
jae
or
jmp
fs
std
jnp
mov
pop
ret
lods
add
inc
add
adc
mov
fmuls
enter
aas
jno
mov
call
pusha
sar
insl
jo
pop
inc
mov
arpl
stos
decb
pushl
add
sub
add
loop
ljmp
xor
xor
xor
lock
filds
icebp
into
out
cmp
mov
out
dec
push
pop
cwtl
pop
outsb
fwait
push
and
push
pop
pushf
jbe
jns
insb
push
push
and
rorl
aad
adc
lahf
xchg
cli
cmp
ljmp
mov
add
cmpl
lods
push
insl
xor
sete
pop
cmp
enter
out
mov
shll
mov
sbb
mov
loope
mov
cld
add
cmp
jb
ret
sar
shrb
jb
sarb
stc
add
push
add
sub
gs
and
jae
inc
divb
rolb
pop
xchg
inc
or
cmpsl
cmp
or
inc
and
call
loopne
jmp
mov
in
lret
and
aam
ret
mov
popa
mov
cld
rorb
ret
arpl
push
rcl
add
js
add
rol
lret
adc
and
cmp
and
cmp
inc
cltd
cmp
das
ret
lcall
sub
shlb
lock
push
sar
shrb
push
and
jge
cmpsb
push
push
sub
or
pop
jae
push
ret
mov
pop
and
cli
jmp
sbb
pop
outsl
cmpsb
idiv
push
mov
jmp
mov
jo
mov
jb
pop
jg
add
jmp
or
mov
test
mov
rorl
jmp
cmc
push
and
idivl
into
jne
xchg
and
mov
push
mov
pop
dec
mov
cmp
je
mov
lcall
jo
jne
fisttpl
daa
fdivl
cmp
xor
shlb
mov
mov
and
or
lret
sarb
mov
and
clc
mov
or
pop
jae
push
jb
cmpl
xor
or
cmpsl
or
add
sub
adc
mov
mov
sbb
test
sbb
sbb
cwtl
lods
clc
out
mov
jne
lods
sub
inc
sbb
loopne
in
adc
add
cmp
jb
cmpl
outsb
mov
mov
inc
leave
cmp
je
push
pop
pop
jmp
jle
loopne
push
mov
push
add
mov
push
sbb
cwtl
sub
jecxz
or
cmp
shr
adc
in
jl
lock
and
add
sbb
sti
jbe
stos
mov
or
pop
and
lret
out
add
and
xor
pop
push
push
and
or
push
fimuls
mov
fstpl
push
cmp
cmp
bound
add
ja
push
push
fisubrs
lds
pop
je
jne
mov
jmp
pop
mov
add
sbb
pop
or
xchg
fsubr
arpl
cmp
subb
mov
cmp
sub
pop
mov
jecxz
movb
mov
daa
shlb
mov
add
out
ret
andps
xchg
sub
inc
rcll
jbe
sbb
cmp
push
cmp
movsb
sahf
push
push
pop
sub
lar
adc
or
sarb
loopne
push
push
sub
pushl
sbb
inc
push
test
or
in
inc
daa
push
jmp
push
sahf
cmp
es
cld
cmp
je
cmp
and
in
test
push
lea
push
adc
xor
js
lock
adc
add
in
pop
jne
adc
add
ss
add
sbb
test
add
mov
call
jge
mov
push
cmp
je
mov
imul
add
add
cmp
jb
lock
out
imul
ret
jae
xor
add
shll
test
cmp
or
test
push
jne
sti
pop
adc
push
nop
cmp
jne
pusha
or
in
pusha
inc
and
fisubrs
mov
dec
or
adc
or
mov
dec
data16
cmp
jge
imul
mov
andl
in
or
cmp
and
sarl
clc
fwait
add
mov
cmp
jne
movl
xlat
test
nop
and
orl
push
test
cmp
sbb
cs
popl
push
cmp
pusha
jnp
jbe
call
pop
mov
jmp
leave
push
sbb
lock
mov
push
inc
pusha
or
push
leave
ret
pusha
decl
cmp
mov
xor
pop
adc
mov
cmp
ja
mov
aad
test
mov
and
xor
adc
rcll
stc
movzbl
sub
ljmp
jmp
push
pop
inc
bound
cmc
pop
mov
xor
subb
lret
scas
sbb
inc
repz
add
inc
in
psrad
mov
cmp
lea
cld
lods
add
push
inc
xchg
xor
mov
cmp
or
dec
pusha
lret
adcl
inc
popa
or
orb
push
std
imul
scas
push
pop
cmp
push
pop
je
push
push
push
dec
std
pop
and
push
add
cmc
cmp
jne
incl
xor
mov
and
lea
push
ret
jae
dec
mov
hlt
shlb
adc
adc
cmp
push
loop
repnz
movl
iret
or
or
mov
cmp
fdivl
mov
insb
rolb
cmp
pop
popa
jnp
xchg
push
or
mov
inc
mov
push
ret
push
inc
xchg
adc
jge
mov
mov
inc
incl
mov
je
jle
mov
test
add
xchg
add
inc
sub
cltd
fadds
js
pop
rcrl
cmp
sub
dec
jmp
sbb
ss
inc
inc
xchg
inc
addl
cmp
mov
inc
pop
je
pop
es
sub
loope
fcomi
je
fadds
cmp
or
xchg
mov
mov
sub
adc
add
sbb
icebp
js
les
cli
movb
loop
cmp
pusha
inc
mov
je
leave
or
add
into
inc
add
std
push
inc
dec
adc
cmp
sub
push
jnp
ficoml
push
andl
add
pop
sub
or
movsb
inc
push
pusha
aad
mov
movsl
inc
das
mov
sbb
mov
jne
mov
cmp
lea
lea
orb
in
es
jo
cmp
cld
hlt
jecxz
rcrl
pushl
cmp
out
lea
cmp
jb
lods
inc
push
shl
xor
lock
sub
fstl
sti
add
push
push
orl
loopne
xor
seto
xorb
clc
movsl
push
mov
cmp
ret
push
pop
jne
inc
push
sub
call
stos
sbb
clc
movsl
jmp
fstl
add
js
mov
mov
push
mov
test
add
fistl
dec
cmp
imul
sbb
or
mov
sarl
sub
push
sar
inc
push
push
adc
ja
cmp
call
arpl
out
lret
fs
adc
fcmovbe
cmp
inc
sub
adc
inc
pop
add
cmp
push
incb
pop
cmp
mov
mov
jo
cli
pop
jmp
and
or
lock
aas
jmp
jne
test
adc
mov
sub
test
sbb
push
push
inc
lds
sbb
inc
push
pop
push
xor
pop
faddl
add
add
outsl
sbb
push
pushf
xor
add
or
or
or
fwait
or
push
and
cmp
outsb
push
rol
inc
or
loopne
fsubl
mov
jp
into
mov
mov
je
adc
lea
and
jbe
mov
jl
mov
sbb
insl
pop
sbb
sbb
push
mov
fsub
pop
cmpsb
enter
add
cld
add
and
je
pusha
and
jmp
clc
push
and
adc
cmp
jb
call
xor
insl
sarb
jg
popf
jmp
adc
fldcw
jle
add
mov
pop
fisubrl
stos
mov
mov
test
cs
jne
push
push
pop
mov
cmp
xor
clc
add
rcrb
shl
add
pusha
mov
ror
inc
add
mov
push
js
and
fmul
les
hlt
inc
adcl
rorl
push
repz
jl
or
sub
cmp
sbb
push
pop
jmp
inc
dec
testl
rorb
aas
sbbb
push
aaa
xor
ds
mov
add
jmp
adc
jne
fchs
push
lock
je
and
movl
jl
dec
cmpsl
pop
loope
pop
repnz
xor
ret
push
test
arpl
test
je
rorb
xor
outsl
push
jne
mov
pushf
rolb
cmpsb
clc
xchg
loopne
inc
or
cmp
pop
jle
loop
icebp
das
hlt
jmp
push
push
push
mov
add
mov
sbb
sbb
push
push
lods
incb
push
pushf
sub
fdivs
jmp
fwait
mov
inc
clc
jns
xor
int
inc
xor
and
ret
and
pop
push
cmp
xor
jmp
mov
and
stc
neg
add
xor
push
ret
mov
jbe
adc
jne
cmp
mov
pop
in
cld
xor
popf
xchg
dec
xor
push
push
stos
insl
in
push
fs
sbb
ss
cmpsb
dec
and
imul
mov
or
aas
push
jmp
cmp
jo
cmp
push
pop
leave
jnp
xor
or
inc
pop
js
mov
mov
or
das
mov
pushl
sbb
mov
leave
sub
insb
inc
outsl
cmpsl
cld
push
movb
add
jle
mov
push
cmpsl
loop
jno
cld
or
insb
sub
out
imul
sub
insb
xchg
cmp
call
or
adc
push
push
inc
clc
pop
cld
and
sub
dec
repnz
dec
push
push
push
shlb
int3
cmp
dec
sbb
mov
adc
dec
dec
jl
stos
pop
dec
enter
push
std
pop
loop
rcl
sarb
add
push
dec
inc
jle
testl
jle
ljmp
mov
xchg
sbb
cmp
dec
lock
lds
pop
cmp
test
push
sbb
push
pop
push
movsl
mov
adc
daa
inc
jbe
pop
mov
cli
pop
cmp
jle
insb
jle
sahf
or
aas
add
cmp
je
popa
push
dec
cmp
sar
inc
pop
or
ljmp
jne
jmp
int3
sub
xor
adc
fs
nop
bt
lret
in
or
cmpsb
inc
jne
mov
inc
dec
sbb
sti
or
push
adc
add
add
mov
mov
jno
daa
pop
jo
dec
cmc
ja
push
mov
test
add
mov
ja
sub
outsb
out
lods
int
mov
or
pop
movsl
push
sub
pop
pop
fidivrl
gs
push
hlt
cmp
dec
mov
inc
enter
hlt
xchg
pop
pop
out
add
cld
xchg
into
bound
je
or
inc
andw
or
or
add
sbb
movsb
leave
add
or
xor
lret
cmp
mov
imul
imul
stos
push
lods
and
movsb
pop
in
and
adc
add
push
movsb
or
test
scas
stos
lret
adc
icebp
fucomip
add
leave
push
push
mov
cmp
clc
std
aaa
popa
sub
or
shlb
push
cmpsb
inc
jmp
xor
imul
push
jl
int
cmp
dec
lock
inc
hlt
xor
and
rorl
dec
mov
or
ja
loopne
or
dec
div
push
rcrl
sbb
in
sub
sbb
into
adc
adc
hlt
pop
pop
xor
mov
or
or
cld
cmpsb
and
out
hlt
pushf
popl
sbb
adc
add
and
lea
mov
out
fisubrs
jp
push
add
mov
adc
clc
sarb
jo
out
mov
mov
jmp
pusha
mov
cmp
or
jp
push
mov
jbe
cmp
mov
into
ret
imul
fisttpl
sub
dec
push
in
adc
je
rorb
mov
icebp
pop
inc
or
movl
sub
add
push
pop
push
pop
lock
mov
push
push
das
inc
pusha
adc
out
lea
mov
popa
or
and
cmpl
push
cmp
or
fimull
and
or
jl
faddp
push
adcl
add
mov
aad
jg
push
loope
mov
cmpl
xorb
or
push
or
push
or
mov
mov
mov
mov
dec
or
decl
or
push
push
pop
pop
pop
pop
pop
cmp
or
out
mov
adc
add
ret
repnz
inc
push
ds
pop
mov
idivb
jg
cmpl
add
pusha
adc
dec
cmp
add
test
jno
in
rorl
xor
jl
rorb
push
push
mov
sbb
mov
adc
incl
aaa
mov
call
insl
andl
pop
add
cmp
mov
pop
cmp
push
push
xchg
jne
push
aas
out
cmp
pop
ja
mov
xor
push
lods
mov
cwtl
je
jge
lock
inc
xorl
incl
or
add
jmp
push
dec
rolb
cmpsl
pop
test
shld
pop
mov
jbe
cltd
push
push
cmpsl
int3
clc
mov
sub
sub
push
lods
andb
or
mov
ds
and
mov
add
or
pop
scas
enter
pop
mov
jne
push
and
adc
sub
mov
mov
icebp
inc
push
mov
lea
stos
cs
jne
lds
movsb
shrl
jb
mov
subb
mov
inc
je
xchg
mov
insb
mov
xchg
pop
jo
inc
insb
gs
sbb
push
lods
mov
ja
sub
mov
dec
mov
push
stos
jmp
push
mov
in
mov
cmp
mov
or
push
pop
andb
mov
shl
and
dec
push
jmp
adc
aaa
data16
in
or
add
or
das
mov
lret
add
xlat
sbb
or
mov
ljmp
pop
jmp
mov
add
mov
cmp
cmpsl
sbb
jb
lea
push
adc
push
pop
xchg
xor
mov
aas
jmp
push
pop
cmp
sbb
and
add
ret
movsl
out
jle
sub
push
mov
push
pop
nop
loopne,pn
jmp
icebp
mov
sbb
pushl
icebp
jl
es
fimuls
add
rclb
ret
js
aaa
mov
cmc
pop
jae
mov
f2xm1
jae
mov
add
cmp
jb
dec
adc
test
pop
lea
sub
lods
pop
sbbb
cmp
pop
lods
pop
fistps
or
out
pop
mov
push
push
xor
sbb
dec
stos
lods
mov
std
scas
push
inc
cs
cltd
in
out
je
mov
ljmp
cmpsl
shlb
mov
pop
inc
dec
xchg
sbb
or
push
stos
pop
and
mov
pop
dec
jno
mov
mov
loopne
test
push
cmp
mov
jb
xchg
out
repz
nop
or
sbb
push
clc
push
cmp
cmp
imul
add
cmp
ds
add
mov
jae
inc
fcmovb
xchg
or
and
test
add
loopne
or
je
mov
out
fbld
sub
je
push
or
add
les
adc
loope
cld
out
and
or
pushl
rolb
ret
mov
xchg
and
cmp
fistpll
xchg
sub
je
or
je
dec
je
jnp
or
sub
pop
and
xchg
xchg
push
mov
shrl
push
or
sbbb
loopne
xchg
rcr
cmp
jne
mov
addb
or
push
in
add
shrb
or
jne
mov
push
outsl
aam
inc
pusha
jne,pn
sbb
inc
fs
mov
add
sub
adc
jbe
or
sbb
jge
test
add
inc
adc
or
jmp
jmp
aaa
je
icebp
and
fs
call
addl
mov
insb
push
in
loopne
mov
add
xor
pusha
sub
adc
sub
and
adc
imul
or
inc
loop
adc
inc
sub
lds
xchg
mov
cmc
mov
push
sbb
sahf
repnz
sub
add
shlb
push
adc
filds
mov
mov
call
dec
adc
jmp
lret
xchg
mov
fmul
cmp
rcll
cmp
jge
pop
scas
or
xor
nop
add
push
in
xchg
mov
in
inc
sbb
std
adc
and
ret
push
jle
imul
gs
or
lret
repnz
lock
sbb
jne
shl
adc
test
and
or
out
fsubrs
arpl
lret
pop
sbb
clc
jb
data16
or
andb
stos
hlt
ret
jo
popa
jge
add
cwtl
imul
imul
push
icebp
je
mov
sub
push
or
jmp
jns
or
dec
jno
mov
push
loopne
push
cmp
loopne
pop
sahf
je
jg
sbb
or
adc
xlat
testb
fstpl
add
or
cmp
lock
or
inc
lods
insl
mov
adc
mov
xor
jg
ret
andl
or
je
mov
outsb
cmp
cmpsb
jne
inc
cmp
mov
adc
sahf
pop
shr
inc
add
adc
add
rcl
inc
jl
add
nop
ja
push
pop
mov
pop
mov
dec
dec
pop
add
mov
cmp
mov
jmp
lcall
icebp
mov
cmp
or
jne
je
mov
mov
inc
inc
cmp
je
int3
int3
mov
and
faddl
pop
mov
icebp
jmp
jecxz
sar
outsb
iret
decb
adc
dec
cwtl
adc
or
adc
sub
or
aad
push
push
jmp
mov
rcll
fisttpl
jp
inc
adc
imul
dec
sar
dec
outsb
out
jns
faddl
mov
pusha
sbb
push
sub
push
mov
pop
lods
sub
cmp
ret
cmpb
inc
loopne
push
add
dec
pop
repnz
dec
and
pop
or
movsb
and
add
jle
rolb
pop
add
scas
add
cld
pop
adc
in
and
aad
bound
jmp
lea
lret
sub
outsb
jb
and
cld
or
adc
das
addr16
xor
shll
ret
ret
es
xor
fstpt
pushf
add
stc
add
or
jne
mov
cli
sbb
ret
enter
mov
push
lods
movb
bound
dec
arpl
mov
mov
mov
or
dec
add
push
cmp
inc
adc
test
jne
cmp
mov
xor
add
aas
push
mov
cs
testb
scas
or
fsubrs
add
add
mov
and
les
mov
out
and
xor
mov
mov
mov
test
jne
mov
clc
cmp
add
lods
push
push
loope
inc
adc
cwtl
inc
adcb
adc
popa
jo
push
jns
popl
gs
sub
sub
sub
je
or
imul
add
adc
or
pop
mov
mov
push
add
sbb
push
inc
mov
mov
lods
imul
adc
outsl
test
sub
mov
mov
inc
dec
jne
lea
into
or
mov
mov
inc
dec
es
addr16
jecxz
sti
sbb
sub
xlat
aaa
cwtl
loopne
push
hlt
test
aam
inc
adc
mov
test
out
adc
inc
cmp
jb
mov
mov
movb
pop
mov
enter
enter
inc
push
lea
lock
add
jnp,pt
inc
fsubs
or
cwtl
enter
push
ja
out
push
dec
sbb
sub
push
cmp
dec
pop
mov
inc
add
pop
dec
add
adc
cmp
jbe
or
push
sbb
cmpsl
jmp
and
je
or
mov
pop
or
test
mov
xchg
xchg
mov
leave
sub
xorb
push
sub
and
mov
call
add
jmp
cmp
push
and
and
xor
push
inc
cmp
jb
mov
pop
sub
pushf
add
and
clc
mov
sbb
push
sarb
pop
mov
stos
and
mov
cli
mov
cmp
push
mov
push
mov
mov
pop
insb
push
je
subb
mov
hlt
xchg
sub
popa
and
sub
leave
add
add
pushl
enter
je
jmp
push
std
fwait
negb
fdivs
inc
jmp
sub
mov
lock
jmp
ja
mov
pop
ds
pop
pop
adc
aas
inc
push
mov
push
or
ret
push
push
cs
jge
push
ret
jne
mov
inc
out
add
lods
shll
test
mov
mov
xchg
cli
shlb
lock
out
pop
mov
mov
insl
imul
and
out
cmp
shlb
jp
popf
sub
lea
push
push
out
stos
call
cmp
mov
jae
jbe
lock
mov
test
mov
ret
inc
incl
clc
stc
bound
leave
xor
shlb
das
jmp
mov
sub
jge
pusha
loopne
mov
cmp
inc
cmp
clc
jbe
and
xor
sbb
data16
xor
add
jb
mov
std
push
push
pop
movl
push
mov
fdivr
mov
push
mov
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
outsb
mov
je
add
divb
sub
mov
pushl
xor
jo
mov
outsl
rorl
inc
dec
jne
mov
test
aam
in
or
jmp
cmp
scas
outsb
fld
cld
repnz
mov
in
adc
inc
inc
lds
push
xchg
fsubrl
cs
mov
mov
lret
or
sub
push
and
xchg
jle
dec
fadds
inc
add
cmpsl
add
and
adcl
das
inc
xor
insb
aas
cmpsb
scas
fldl
cmp
adc
andb
push
mov
out
add
dec
adc
add
pusha
shll
mov
mov
loopne
mov
rcl
clc
add
int3
mov
inc
shrb
mov
call
or
mov
add
dec
jmp
stos
xchg
int
ss
pushf
out
inc
insl
out
and
sbb
or
jg
jle
xor
fwait
addb
and
sti
imul
inc
xchg
push
mov
mov
cmp
add
adc
xor
add
sub
pop
pusha
xchg
and
pop
and
outsb
fldenv
push
aas
push
lret
cmpsl
jle
adc
cmp
orl
enter
jmp
jae
cwtl
mov
mov
adc
in
push
mov
test
dec
mov
inc
pop
jmp
stos
rol
jg
into
decl
js
jne
cmp
sbb
rolb
call
cmp
sub
sbb
jne
cmpsb
jg
jge
jl
adc
mov
test
sub
orb
cs
push
push
mov
sub
or
add
call
push
loop
add
lret
lock
enter
clc
jb
fwait
mov
and
in
xor
pushf
push
pop
and
and
dec
pop
pop
mov
sub
sub
jecxz
shr
and
lock
outsl
sar
or
inc
jmp
sub
add
loopne
add
xor
cltd
inc
ds
les
dec
fadds
lahf
js
es
sub
and
pop
imul
add
add
mov
int3
lea
dec
add
lret
movl
imul
mov
or
push
push
mov
sahf
jo
mov
mov
call
cmp
in
lock
cmp
repz
clc
clc
cld
cld
lea
in
add
add
sbb
out
fsubr
and
push
fildl
pop
sti
and
xor
push
inc
and
dec
scas
mov
into
jl
cld
or
sub
or
push
inc
neg
adc
add
sub
xchg
daa
stc
sub
jnp
gs
inc
pop
nop
fs
mov
mov
fcmovne
rcr
add
out
add
mov
mov
inc
push
fisubl
add
push
fmull
pop
add
outsl
bound
mov
or
jns
out
push
adc
and
xor
out
icebp
inc
inc
aaa
sbb
sbb
jns
out
adc
adc
or
jns
out
or
add
iret
jnp
and
pusha
or
js
dec
push
xchg
mov
push
add
add
outsl
pop
mov
sarl
pop
sub
ret
mov
pushl
jne
or
in
sbb
add
sti
cmp
jne
sub
fcoml
or
adc
jne
adc
sbb
shl
add
ret
xchg
data16
mov
cld
rcr
xchg
imulb
add
push
sahf
lret
mov
fdivrs
pusha
addl
xchg
mov
cld
push
je
cmp
es
dec
sti
push
rcrb
jne
sbb
sti
add
push
int3
xor
xor
mov
sbb
jno
aad
inc
sub
call
cmpsl
and
mov
addl
mov
aam
pop
cmp
lret
test
push
jne
push
and
aaa
out
push
lea
pop
out
xchg
lock
cld
or
or
cmp
call
sbb
pop
bound
dec
jne
lods
je
sbb
jg
xchg
je
lret
xlat
imul
sbb
mov
jp
in
sbb
pop
cmpl
jnp
cwtl
or
ret
adc
fsub
loopne
shll
cltd
or
adc
pop
xor
sbb
adcb
sub
das
js
sar
aaa
dec
xor
xor
divl
cmpsl
lock
cmp
xchg
sbb
push
pop
or
sahf
nop
inc
scas
pusha
add
je
subb
jo
and
or
call
lea
inc
loope
insb
mov
xchg
add
std
cmp
jmp
pop
daa
mov
movb
or
sbb
stos
sbb
pop
push
aad
and
cmp
dec
in
mov
hlt
push
imul
mov
push
or
scas
mov
add
or
push
push
cmc
adc
jb
pop
adc
add
sub
orb
adc
outsb
sub
adc
jns
add
shr
mov
imul
inc
push
lods
rcrb
clc
push
dec
scas
insl
jg
adc
jne
sbb
mov
mov
mov
or
mov
mov
ret
je
cli
add
cmp
jbe
push
xor
jle
or
push
and
pushl
mov
shr
lea
not
and
decb
jne
add
sbb
sbb
mov
in
lea
xor
adc
add
cld
add
jecxz
in
hlt
mov
push
or
or
cmpl
clc
and
pop
hlt
xor
stos
dec
jne
and
sti
add
mov
mov
pop
cmp
jbe
mov
mov
imul
andb
cmp
aaa
add
scas
jno
jno
cmp
cmp
and
out
not
and
add
aaa
sub
jmp
lea
das
mov
xor
push
jle
pop
dec
add
shlb
mov
jmp
mov
test
fimuls
test
cld
out
pop
lock
mov
pop
or
cmpsb
sarb
mov
sar
cmp
inc
mov
jge
jle
js
loope
xchg
cmpsl
push
or
pop
sbb
inc
dec
or
jmp
dec
adc
push
mov
inc
cli
inc
mov
add
mov
mov
cmp
jecxz
je
add
test
push
adc
push
add
loop
inc
adc
and
loope
add
scas
jp
push
call
aas
cmp
mov
push
or
andl
add
decb
adc
sub
add
and
shr
orb
and
jl
leave
jecxz
add
enter
mov
lea
outsl
push
or
mov
test
add
or
mov
jg
mov
aam
xor
mov
add
imul
and
pusha
adc
test
call
or
gs
cmp
mov
cmc
negb
les
or
mov
je
push
xchg
and
dec
lcall
insl
pop
or
pushl
push
fucomi
fwait
orl
mov
incl
xor
add
loope
scas
test
xor
call
rolb
mov
imul
xchg
mov
add
adc
dec
jne
add
sti
sahf
adc
cmp
repnz
add
mov
push
dec
clc
jb
xchg
add
cli
int3
cld
ja
ret
jg
iret
shr
lea
inc
orl
orl
lock
push
out
sub
fnstsw
inc
cld
lock
call
dec
jne
movsl
test
push
and
shlb
dec
rorl
sahf
inc
pop
mov
pop
iret
mov
mov
jge
das
push
in
test
push
mov
jne
or
roll
mov
ljmp
xchg
pop
mov
xchg
or
outsb
dec
cmp
jge
xlat
sub
add
shr
push
add
xor
cld
and
dec
cmp
pop
mov
and
lods
and
push
jle
testb
test
fsts
stc
shll
cmp
push
push
xchg
pop
mov
pop
mov
inc
cmp
add
xbegin
fiaddl
es
add
cmp
fimuls
sub
mov
add
cs
jg
jns
and
into
add
gs
add
or
roll
xchg
sar
dec
cmp
mov
cld
aad
int3
pop
xchg
lea
clc
pop
jg
or
sbbb
pop
repz
rcll
adc
pop
push
inc
sub
adc
jo
jmp
add
jmp
aaa
jo
xchg
push
test
adc
cld
insb
xor
pop
lea
adc
cld
mov
pushf
mov
data16
clc
js
dec
cmp
lgs
ret
lea
mov
dec
xor
mov
cld
push
sar
dec
cmp
xor
mov
pusha
andl
fisubs
cmp
dec
mov
in
cwtl
dec
je
push
mov
ret
fisttps
cltd
dec
push
inc
pop
sbb
fbstp
cmp
dec
adc
out
sbb
mov
adc
dec
lea
mov
outsb
sub
jns
jbe
sahf
xchg
stos
lods
push
bswap
lret
incb
bswap
mov
out
cmp
cmovnp
jns
dec
push
ss
mov
mov
inc
mov
mov
adc
push
inc
sub
xor
push
dec
or
int
push
push
jge
or
shr
cmp
or
xor
clc
pop
mov
jecxz
jmp
mov
clc
mov
and
decb
xlat
jne
add
cmp
cli
or
xchg
add
fimuls
inc
fnstenv
xchg
fnstenv
jmp
or
sub
testb
push
lock
or
arpl
adc
dec
popf
sarb
sub
jo
loope
jno
xchg
fadds
mov
cmp
mov
in
sbb
cli
fidivs
fdiv
ret
mov
dec
pop
iret
jne
push
insl
dec
mov
dec
popa
and
pushl
xchg
subb
out
out
clc
insl
out
mov
mov
and
jne
mov
push
pop
outsb
js
or
leave
inc
push
pushf
mov
sub
push
and
icebp
cmp
pop
sub
mov
sub
dec
jb
sbb
int3
iret
dec
testb
inc
hlt
cmp
lret
pop
mov
mov
pcmpeqw
in
in
or
sub
pushf
xor
jbe
mov
pop
cmp
jge
pop
dec
bound
dec
push
and
inc
clc
into
sub
jns
enter
jp
dec
js
imul
or
pause
mov
das
pop
das
or
mov
add
icebp
out
or
inc
jp
or
pop
inc
or
cmp
mov
mov
dec
ja
outsb
or
js
nop
scas
sahf
aad
shrl
xchg
mov
push
jne,pt
cmp
pop
push
xchg
mov
mov
inc
add
es
sub
cmp
or
je
jno
and
push
loop
int3
jbe
inc
pop
inc
add
mov
call
xchg
mov
and
movsl
pushf
sbb
or
dec
sbb
inc
mov
test
cmpsb
jg
cmp
push
add
mov
inc
lret
cli
add
xor
flds
add
shll
xchg
jmp
enter
or
cmp
push
rep
sbb
in
mov
dec
ljmp
std
mov
adc
clc
lock
xchg
sarb
imul
add
test
cmp
push
push
movsb
adc
or
xor
xor
jne
ss
cmp
adc
sub
rcr
jae
or
or
dec
push
lret
popa
dec
add
pop
in
sub
cmpl
xorl
adc
push
sub
ret
push
push
mov
rorb
mov
shll
jmp
xor
add
push
pop
adc
dec
cmp
ja
sbb
inc
cmp
jp
leave
adc
sub
pop
ja
fisttpl
or
inc
mov
or
jo
dec
mov
push
lret
add
pop
clc
pop
shr
inc
and
add
and
and
bound
cmp
fdivr
cmp
add
lods
clc
fistpll
pop
mov
push
xor
pop
div
mov
aas
or
cli
add
repnz
sbb
les
sbb
test
sbb
xor
andl
fdivp
aaa
rcrb
mov
fbstp
push
xlat
aam
and
cmp
add
addr16
xchg
loop
shll
pop
testl
sbb
imul
dec
adc
pusha
jnp
pop
sbb
dec
mov
dec
push
cltd
jnp
cmp
push
pop
or
push
cmp
je
movl
leave
adc
xorl
jp
inc
pop
push
fcoms
or
test
push
push
add
jmp
insb
insb
shlb
adc
xchg
sbb
bound
adc
inc
dec
or
dec
jno
cmp
inc
orl
push
int3
push
dec
ficoms
mov
in
subl
xor
fstpt
addr16
cmp
insl
push
sbb
push
fcompl
hlt
je
sahf
in
popa
js
ret
push
sub
mul
mov
dec
ljmp
enter
cld
pop
cld
cmp
je
movl
addr16
call
fsubs
outsl
xchg
sbb
hlt
jecxz
popa
xor
and
lock
ds
inc
and
or
pop
neg
sbb
and
jl
mov
xchg
push
jecxz
add
in
xchg
adc
sbb
divl
or
inc
sbb
add
lea
mov
nop
sbb
xor
add
sbb
and
xlat
or
and
push
sbb
jno
loope
push
cwtl
aad
mov
es
or
jne
fmulp
inc
push
int
jb
stos
push
ret
sbb
out
add
in
iret
add
add
add
movsl
xor
gs
sbb
adc
xor
or
stos
add
jmp
adc
jg
xor
inc
and
ds
mov
or
jmp
in
jno
xor
push
inc
xor
aam
lock
loope
lea
jmp
sbb
push
xchg
mov
xchg
sbb
push
mov
xchg
inc
cmp
faddl
sbbb
adc
cltd
inc
cmp
cld
faddl
sbb
pushf
push
or
hlt
push
in
adc
or
and
les
pop
dec
bound
popa
adc
mov
gs
js
fbstp
push
les
dec
mov
jae
inc
loop
sbb
lahf
dec
call
cmp
pop
pop
mov
or
pop
mov
dec
jmp
mov
jmp
loop
and
bound
push
fistps
push
push
insb
outsb
sbb
jne
loop
nop
inc
clc
and
push
push
rcl
pop
mov
pusha
lock
je
gs
mov
lock
jmp
fisttpll
cmc
or
inc
pop
add
xor
popa
nop
loopne
iretw
jbe
push
pop
xor
div
test
sbb
jne
gs
jg
inc
jnp
push
test
scas
xchg
imul
xchg
notl
mov
cmp
imul
cmp
loopne
aaa
fcomi
aad
dec
mov
mov
inc
mov
cmp
xor
push
jae
jne
push
lock
dec
cmp
sbb
pop
fwait
jo
jle
nop
loopne
or
adc
test
test
pop
mov
or
mov
outsl
cmpsb
add
cmp
testl
leave
in
push
ja
loope
or
adc
and
stos
cli
xchg
xchg
inc
fadd
popa
xor
inc
mov
rcrl
or
sahf
out
dec
push
push
gs
pop
dec
and
add
xchg
xor
inc
cld
dec
mov
sbb
add
and
lahf
pushf
jnp
lods
out
adc
jne
es
push
shrl
push
hlt
pop
inc
jns
add
loopne
jmp
fcompl
sbb
xor
add
cmp
stos
stos
adc
xchg
add
jo
lret
mov
xchg
sub
push
sub
and
shll
insl
push
jmp
ja
mov
dec
orl
push
jmp
mov
push
das
push
rcrb
pop
sbb
icebp
push
lods
cmpsb
push
sbb
and
xchg
add
push
imul
and
rcr
and
jmp
fwait
add
movq
push
dec
adc
push
and
xor
push
dec
and
push
jg
idiv
jl
outsl
inc
or
jbe
jle
xor
jl
addr16
jg
jg
jo
mov
pop
dec
loopne
lea
mov
add
or
cmp
cltd
mov
or
fdivr
into
xor
sub
and
or
sub
mov
or
push
jae
ljmp
into
jg,pt
dec
call
sub
out
push
movsl
sub
sub
ja
imul
sub
mov
add
sub
clc
in
sbb
rep
push
jmp
bound
scas
sbb
xchg
in
in
lcall
jp
in
sub
or
sub
push
push
ret
sbb
out
xchg
mov
add
pop
cmc
test
std
dec
test
mov
cmp
xchg
mulb
test
push
or
adc
dec
dec
outsb
mov
sbb
sub
dec
dec
dec
xor
cmp
cmpsb
push
dec
cmp
inc
and
in
in
inc
cmovs
mov
add
cmp
fs
cmp
je
jl
and
jge
sbb
mov
dec
xor
leave
cwtl
pushf
mov
and
push
sub
lcall
push
dec
mov
lret
mov
shll
call
imul
sbbb
test
adc
dec
xor
sub
sub
and
test
xor
js
dec
xor
push
jge
inc
xchg
insl
add
add
jb
jg
sub
add
stos
add
jmp
push
jo
in
cmp
cmpsb
stc
xor
mov
pop
daa
pusha
imul
lahf
mov
test
cmpl
lea
xchg
add
mov
scas
repnz
in
addr16
aas
push
sbb
sub
push
clc
addr16
test
test
iret
repz
push
dec
add
repz
cmp
mov
push
jmp
mov
mov
lret
and
imul
pop
nop
xor
pop
push
subb
or
push
pop
mov
mov
push
faddl
in
jnp
out
hlt
cld
add
pop
push
mov
bound
ds
or
push
dec
pop
push
add
or
xchg
add
stos
and
or
dec
out
shr
je
ret
nop
jno
adc
and
push
test
mov
cmp
pop
sbb
add
ret
or
push
jg
and
or
adc
lret
jno
sub
inc
push
add
inc
dec
jo
push
mov
rol
rep
jb
neg
inc
or
cmp
lock
imull
jp
rclb
add
enter
movsb
xchg
sbb
call
jnp
lea
mov
ja
push
sub
shll
nop
test
in
pop
adc
jg
mov
mov
movb
pop
jmp
xor
push
clc
fimull
pop
add
inc
xchg
scas
jo
add
mov
push
push
pushf
lea
add
sbb
add
lock
sbb
in
push
and
cmpb
in
lods
add
pop
xchg
add
fcomps
mov
rcrl
jecxz,pt
or
out
dec
sub
inc
movsl
imul
int
pop
out
sub
jo
adc
je
lock
or
add
add
add
or
pop
jmp
gs
cwtl
cmp
fdivs
inc
or
inc
fsubrl
and
aam
push
rcrb
dec
int3
xor
add
je
cmp
in
mov
in
je
cmpl
mov
push
add
inc
rcrb
movl
push
cmp
jg
pop
inc
sbb
std
cmp
jle
cmp
ss
scas
push
inc
ds
je
sub
add
lods
xchg
mov
push
ret
pop
pop
das
mov
iret
out
in
in
fdivs
call
lods
in
push
jne
or
push
popf
pop
jg
int3
jae
or
adc
jbe
jnp
cmp
jp
jmp
lcall
and
insb
dec
pop
shlb
mov
je
push
adc
sub
jge
je
inc
push
dec
sub
push
jp
ret
mov
addl
mov
dec
mov
cli
lea
dec
sbb
xchg
xchg
xor
test
mov
sub
mov
and
push
inc
gs
je
cmp
sbbb
sub
jne
cltd
xchg
in
inc
add
inc
test
mov
xor
mov
pushf
pop
sub
je
push
popf
outsb
mov
rorb
pop
xchg
and
data16
pop
divl
je
mov
or
inc
mov
cld
repnz
xor
int
or
outsl
test
or
and
insl
pop
or
popa
mov
pop
add
shlb
enter
cmp
jl
enter
inc
xchg
js
pop
or
and
sub
or
jmp
sub
pop
jge
xor
sub
pop
add
and
mov
add
popf
hlt
outsb
inc
push
cld
shlb
adc
or
jl
outsl
ljmp
lods
push
mov
cli
and
hlt
sti
jle
cmpl
push
in
push
les
xor
inc
jl
xorl
xchg
fnsave
add
inc
and
stos
cmp
pop
inc
jmp
cmp
jne
addl
jmp
pop
fstl
sub
sub
test
push
test
and
aaa
ss
mov
dec
or
repnz
jg
mov
cmp
je
cmp
and
out
fsubrl
adc
add
das
sub
add
lds
dec
xorb
mov
adc
test
or
pop
sahf
or
mov
jmp
dec
add
lret
addb
in
sti
jmp
sub
add
and
adc
sbb
lock
sub
sahf
cmp
jbe
sbb
dec
cmp
sbb
or
xlat
enter
in
jge
ss
pop
add
scas
pop
adc
loop
aas
jp
cld
out
mov
jne
test
ds
push
add
addl
clc
pop
les
jne
jbe
cmp
mov
jl
adc
call
mov
and
movb
mov
test
jge
jmp
inc
xor
pop
pop
adc
roll
rclb
stos
cwtl
push
jne
push
jecxz
push
int
ja
pop
ret
pop
rcrl
ret
or
je
sarb
mov
mov
mov
inc
es
lret
call
in
cmp
jb
cmp
ja
add
sarb
out
adc
cmp
jne
shrl
xor
xor
adc
mov
neg
fstl
xor
pop
add
shl
sub
or
mov
adc
or
mov
dec
pop
rcr
je
mov
mull
lsl
popf
jns
shr
inc
push
pop
push
push
inc
shr
rcr
shr
rcr
ss
pop
jne
div
pop
dec
adc
inc
mul
idiv
fstpl
push
cmp
or
cmp
or
xor
and
or
fistl
or
fcmovb
sbb
inc
mov
ror
lret
pop
ret
fcmovb
lods
aas
leave
xor
xor
mov
loope
push
or
neg
pop
dec
in
adc
add
pop
jge
lea
insl
and
inc
lcall
add
rcrb
je
push
iret
int
xor
or
push
pop
shlb
cmp
outsl
jp
or
mov
push
adc
fnstsw
outsb
mov
stc
xor
add
inc
test
xor
mov
mov
jne
and
aam
push
add
and
or
cld
mov
ss
out
mov
out
and
lcall
jmp
pop
addr16
pop
sbb
add
or
and
subb
add
and
xor
mov
shl
ficomps
inc
outsl
outsb
incl
jb
js
je
jb
arpl
jae
insl
jae
gs
inc
sti
ljmp
jb
outsb
je
insl
and
cmp
or
cld
push
dec
dec
push
push
and
inc
std
xor
dec
add
inc
and
push
xor
xor
mov
mov
popa
jo
insb
imul
popa
jae
insl
popa
fs
mov
mov
gs
jo
and
insb
outsl
es
push
lock
popa
mull
popa
jb
and
cs
int
mov
jns
or
xorb
outsb
je
into
insb
mov
mov
jne
pop
xor
insl
and
insl
test
adc
outsb
es
lock
cs
aas
xor
outsl
or
dec
shlb
push
jo
xchg
insl
les
out
insl
idivl
fs
xchg
and
jbe
dec
mov
mov
popa
add
or
sarb
and
jne
push
and
je
loopne
adcl
jae,pt
add
imul
pop
test
lcall
insb
fcoms
sbb
decb
das
add
inc
lock
cmp
arpl
shll
mov
jge
clc
add
inc
xchg
dec
popa
imul
out
xor
int3
or
sub
sbb
push
lcall
ret
in
popa
pop
xor
add
mull
push
push
mov
sbb
cmpsb
cmp
sbbb
xor
shll
pop
add
add
add
add
dec
pop
adc
ja
outsl
outsl
ss
jl
jae
fs
jo
cli
jbe
add
inc
inc
mov
mov
cmp
and
mov
mov
lds
call
jle
outsl
push
or
arpl
jmp
lcall
xchg
push
inc
aaa
adc
push
mov
or
das
mov
dec
imul
mov
stos
jmp
shlb
push
aas
push
push
leave
nop
and
lds
shrb
call
push
cltd
cmp
xorl
or
insb
popa
and
and
pop
pop
adcb
push
cmp
addr16
popf
mov
xor
fdivl
andb
pusha
sbb
je
test
call
dec
jb
subl
push
imul
xchg
add
pop
dec
jmp
in
push
lods
fldl
add
pop
sub
inc
dec
imul
outsb
ds
gs
dec
and
imul
dec
cmp
js
push
addl
je
inc
outsb
inc
push
push
lret
jg
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
gs
js
shlb
insb
jae
push
rcpps
push
jnp
in
cmp
inc
inc
insb
cmp
out
adc
add
mov
je
inc
popa
outsl
mov
call
outsl
push
pop
imul
fldl
xlat
fsubrs
add
notl
cmpsb
push
je
dec
lds
push
dec
bound
dec
mov
loopne
cwtl
addr16
sbb
jbe
ficompl
daa
pop
lea
add
mulb
outsl
js
push
push
loopne
add
add
incl
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
mov
daa
sub
sub
sub
cs
loopne
xor
cmp
cmp
ds
fwait
cli
incl
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
mov
pop
pop
pop
pop
pop
pop
pop
pop
pusha
xor
incw
push
insb
insl
inc
jo
jb
jne
ja
jns
jnp
and
add
jge
jg
in
or
xchg
and
dec
add
test
xchg
add
mov
add
xchg
and
mov
push
add
add
sbb
add
mov
ja
dec
pop
stos
incl
adc
push
add
pop
mov
pusha
inc
shr
and
jmp
addl
mov
call
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
pushl
mov
mov
mov
mov
ret
enter
int3
int
iret
call
rcl
rcl
aad
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
stos
add
push
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
push
mov
adc
and
push
inc
add
test
test
jmp
add
mov
decl
jmp
insl
insl
cmp
add
in
jne
and
adc
add
das
das
movsb
les
adc
push
dec
push
inc
pop
inc
outsb
dec
mov
push
push
dec
outsl
jbe
testb
ficoml
sub
addr16
in
fstpl
push
dec
jne
xchg
outsb
gs
data16
cld
repz
imul
bound
push
inc
out
mov
into
mov
jae
cmp
jg
int3
frstor
mov
xor
std
adc
jae
push
gs
sbb
insl
mov
outsb
and
jbe
out
pop
dec
inc
ds
adc
jo
ja
xor
dec
pop
pop
add
xor
and
cmp
sbb
dec
pop
data16
outsb
ret
nop
loope
xor
movsb
xorb
pop
sub
add
adc
adc
inc
add
psubusb
mov
int
push
jbe
aas
xorb
ss
data16
pop
clc
adc
xchg
dec
enter
fstl
shl
mov
in
movsbl
aas
mov
and
cwtl
and
cmp
test
sub
pop
and
dec
insl
dec
push
das
into
push
das
dec
enter
xor
mov
in
test
sub
stc
ss
add
ss
inc
cmp
jbe
addb
inc
aas
mov
loop
dec
dec
dec
pop
mov
movsb
pop
addr16
int3
popa
ret
and
jle
sbb
call
sbb
xor
add
ror
add
ror
or
pop
sti
lcall
sub
xor
sub
and
push
rcr
in
incl
rol
sub
stos
inc
cmp
test
pushl
push
je
lcall
xchg
pop
aaa
push
ret
fistpll
push
ret
ret
pusha
and
pusha
in
pushf
es
add
fdivrl
imul
test
call
and
xchg
dec
outsl
andl
sub
mov
xchg
call
push
sbb
pop
movsl
dec
sbb
mov
inc
mov
fidivrs
xchg
aam
stos
and
andl
or
pop
add
jmp
inc
in
mov
xchg
lds
dec
outsb
mov
or
sti
int
imul
add
ljmp
mov
pusha
dec
add
inc
jns
inc
or
in
rorl
jo
jg
or
das
or
adc
dec
pop
repz
in
dec
rclb
ret
jne
pop
or
andl
pop
and
cs
out
and
push
or
in
add
ror
xor
xchg
mov
cld
mov
loop
mov
call
int3
sub
jo
and
mov
sar
inc
divb
pop
dec
xchg
mov
lcall
xor
or
cli
insb
sub
adc
pop
adc
movsl
adc
xchg
loope
pushl
mov
sub
iret
jecxz
roll
aaa
sub
pushl
inc
mov
xor
stc
loop
push
out
mov
pusha
inc
sti
bound
dec
les
or
push
mov
sub
mov
scas
mov
jg
inc
lcall
and
lods
in
lods
pop
pop
aas
and
mov
cmp
lfs
mov
aaa
and
lcall
mov
scas
arpl
outsb
adc
inc
lods
pxor
scas
pop
mov
inc
mov
cli
adc
gs
outsl
ja
mov
and
mov
je
lods
mov
call
dec
sub
add
sahf
jns
sahf
movsb
outsl
push
cmpsb
iret
loopne
outsl
pop
mov
jbe
in
pop
mov
iret
gs
divl
dec
push
mov
jg
popa
jg
xchg
push
dec
jmp
data16
mov
imul
test
roll
pusha
ss
xor
inc
or
fldenv
lea
nop
adc
mov
adc
cmpl
daa
ret
mov
aaa
inc
cmpsl
pop
lods
sub
call
jle
inc
aad
jp
jnp
dec
xchg
inc
pop
dec
sbb
push
pusha
push
lods
xchg
jecxz
vpcmpgtw
int3
sub
clc
mov
dec
or
sbb
pop
fisubs
or
scas
pop
jg
mov
adc
hlt
jbe
sahf
ljmp
add
cltd
inc
jg
incl
and
push
orb
je
jecxz
lcall
inc
fiaddl
xor
push
push
xrelease
pop
lret
iret
in
cmp
mov
jg
and
pop
movsb
pop
dec
and
pop
jnp
fwait
sub
mov
jns
jo
pushl
mov
dec
pop
fldl
cmc
icebp
xchg
dec
push
mov
pop
fbld
dec
xchg
std
sbbb
ret
shll
xor
xchg
outsl
sbb
orb
call
jb
xchg
int
sarb
jge
aaa
fsubl
mov
into
sbb
lcall
cmpsb
dec
mov
pop
xchg
out
gs
add
addr16
jmp
sub
and
adc
xor
jle
fnstsw
xor
lcall
add
jle
push
scas
insb
jl
cmp
lret
jae
push
mov
lods
test
call
xor
roll
push
mov
push
adc
rcll
mov
outsl
les
adc
cmp
cmp
sub
rol
adc
jo
pop
sbb
push
ficomps
in
cld
push
add
adc
push
repnz
ljmp
mov
jns
mov
jno
std
adc
das
ljmp
push
shr
enter
call
cli
sub
sti
mov
ds
es
pop
push
les
andl
jmp
es
out
ss
cmp
scas
ret
ret
sbb
inc
adc
jnp
xchg
call
adc
dec
pop
addr16
ljmp
adc
outsl
push
jecxz
lcall
inc
int3
jne
lcall
xchg
push
fsubl
popa
dec
mov
pop
jnp
pop
xor
or
jmp
jno
decl
mov
sub
sti
test
mov
pop
mov
cld
test
xchg
das
cli
pop
addb
mov
insl
pop
inc
xchg
lods
sbb
jecxz
call
dec
adc
mov
dec
jp
jbe
inc
daa
cltd
or
out
and
sbb
rclb
push
mov
push
and
fisubrs
dec
divb
sub
lods
pop
push
idiv
jg
lcall
jbe
sub
inc
inc
cli
jmp
xor
inc
cmpsl
mov
ljmp
ret
xchg
xor
movsb
dec
fisttpll
movsw
xchg
repnz
pushl
jmp
imul
ret
inc
imul
sbb
mov
add
push
repz
jbe
decl
push
cmpsl
mov
ficoms
enter
cmpsb
inc
enter
shlb
cmp
inc
xchg
dec
fistpll
fcomip
cli
dec
out
adc
movsb
sbb
push
cmp
add
jl
xchg
or
xor
pop
loopne
xor
std
insb
dec
mov
mov
push
cltd
sub
cmp
xchg
dec
fisttpl
xchg
lods
jl
and
outsb
in
mov
fbstp
fwait
aam
sbbb
scas
pop
adc
cmp
sti
data16
int3
pop
inc
add
xor
fdivr
fwait
incl
inc
cmp
adc
adc
cmpb
in
sbb
jg
inc
mov
fidivrl
cmp
incl
iret
fimull
sar
mov
in
cmp
cmp
sbb
shrb
pop
in
call
xchg
mov
ret
push
sub
cmp
mov
std
sti
scas
pop
leave
dec
mov
cmpsb
mov
jmp
cmp
lock
push
mov
adc
decl
pop
xchg
ss
push
push
and
and
out
push
test
push
enter
insl
outsb
movsl
ja
stos
jg
lcall
test
xchg
jg
fs
add
lds
out
and
inc
pushf
scas
decl
lock
xor
fs
pop
mov
inc
ss
mov
clc
inc
jnp
ljmp
rolb
hlt
cmp
jp
inc
pusha
das
dec
rcll
inc
or
lds
les
pop
push
subb
out
jmp
xchg
xorl
ljmp
shr
loop
xor
shlb
cli
xor
push
lods
icebp
cltd
inc
cmc
insb
call
data16
pushf
mov
mov
sbb
leave
iret
fwait
stc
push
inc
dec
sub
aaa
push
jns
jb
mov
hlt
addr16
pop
mov
dec
dec
bound
or
cmp
test
loop
cmc
jl
push
cli
lcall
push
insb
mov
lahf
icebp
pop
aad
or
in
inc
jmp
mov
call
pop
into
cmpsl
pop
xchg
mov
cs
testb
jne
lcall
test
pushf
enter
pop
push
loop
lds
push
cmp
sbb
push
jg
cltd
lret
inc
mov
mov
setl
idivl
fwait
mov
xchg
lods
sarl
incl
lods
mov
mov
ds
cmpsb
mov
fwait
or
std
xor
nop
push
dec
mov
jecxz
xchg
imul
cmpsl
dec
inc
adc
sub
vcomisd
pusha
inc
mov
mov
ljmp
fsub
stos
pushl
shl
and
adc
aam
add
sub
jp
dec
mov
ret
xchg
jae
out
jmp
test
and
mov
fs
push
mov
xchg
pop
fwait
or
pop
addr16
pusha
xchg
sub
or
jp
mov
push
faddp
bound
aam
leave
ds
mov
fdiv
mov
mov
push
adc
call
dec
cmp
and
inc
pop
xor
and
jecxz
das
xlat
les
clc
jle
jge
stos
cmp
cltd
fldl
and
fstpt
jae
insb
jno
pushl
dec
shl
pop
push
xchg
mov
xchg
xor
int3
sbb
dec
cmp
ljmp
push
or
pop
or
insl
out
shll
in
lods
arpl
xor
leave
lcall
jp
cltd
cmp
rcl
mov
movsl
aam
dec
xchg
xchg
fdivr
pop
and
incl
xchg
xchg
in
xchg
mov
enter
and
mov
pop
push
sbb
jmp
xor
push
push
pop
sti
xchg
mov
and
dec
push
rclb
loop
lret
icebp
adc
jl
decl
idivb
cmp
and
sarb
mov
xchg
popa
loope
in
lret
jne
inc
fldl
call
pop
cmp
lea
jbe
sub
lock
jbe
or
xchg
xor
jg
jl
inc
les
xor
popl
push
int3
or
or
lcall
repnz
into
loop
push
push
pop
jno
pop
mov
jge
mov
mov
add
cmpsb
incl
mov
lock
xchg
rol
gs
cwtl
dec
or
ljmp
pop
mov
sti
sbb
and
lcall
ljmp
push
push
nop
dec
je
mov
out
vcvtdq2pd
cli
dec
fs
pushl
mov
cli
push
cmp
fiadds
xchg
cmp
jae
mov
out
cli
sbb
mov
inc
decl
enter
inc
or
mov
sbb
popa
or
popa
pushf
or
xor
scas
push
pop
xchg
push
loop
xchg
movl
push
mov
aam
push
shl
ja
ds
lcall
jno
pushl
cld
jg
push
js
mov
sub
fisttpl
pop
aad
mov
cli
jmp
or
test
fstpl
loopne
cwtl
fstpl
sti
and
cmpb
out
jb
fiaddl
xor
hlt
cltd
jmp
popa
shlb
fmuls
inc
sub
jne
adc
incl
add
mov
jge
xor
decb
mov
and
out
in
jmp
push
movsl
decl
fcompl
sub
and
movsl
mov
lcall
add
add
stos
data16
movsl
scas
sahf
sti
imul
pop
movsl
pop
dec
cmp
pushl
jno
icebp
lods
jae
pop
jno
and
aad
addr16
inc
push
sub
jo
ficoml
mov
sub
stc
fildl
xor
xor
pop
dec
push
mov
adc
inc
adc
addr16
test
icebp
aam
imulb
jno
xor
jg
stos
insl
clc
lret
cmp
aaa
mov
jns
xchg
clc
insb
scas
das
ret
push
xor
pop
fldl
decl
ljmp
out
or
or
adc
lods
outsl
iret
hlt
stos
mov
clc
xlat
xchg
call
pop
movsb
lcall
gs
jle
incl
aas
and
xor
imulb
roll
cmc
mov
ss
xor
adc
or
jl
push
arpl
rorl
mov
icebp
out
dec
movsl
fsubrs
scas
fs
je
addb
or
xor
cmpsl
sar
call
push
cld
inc
pushf
sbb
fwait
lahf
pop
scas
sbb
xchg
or
jbe
cmpsl
pop
shl
jg
dec
popf
adc
jae
push
fbstp
call
jmp
test
push
mov
jl
rorb
frstor
ljmp
daa
cmp
iret
jmp
fwait
sti
jb
cmp
mov
rolb
pushl
sbb
jp
jmp
mov
xlat
pop
mov
cmp
sbb
cs
decl
sub
adc
loop
cmc
jns
fnstcw
test
cmc
sub
or
ljmp
push
es
enter
or
mov
int3
mov
push
imul
sub
out
jae
dec
sarl
inc
mov
mov
stos
out
movsl
repnz
jae
subl
dec
lea
pop
xor
xor
aas
dec
loop
out
fdiv
or
jmp
jle
ret
jb
shll
pop
icebp
cld
daa
movsl
int
inc
movsb
push
ret
ret
and
scas
mov
dec
sbb
clc
sbb
dec
jns
scas
add
outsl
pop
inc
dec
push
push
int
mov
mov
ljmp
sbb
push
mov
repnz
fldt
cmp
mov
subl
xor
jge
jne
addr16
xchg
call
repnz
xchg
mov
xchg
pop
call
imul
lods
cs
jecxz
dec
ss
out
jne
adc
or
and
xor
lahf
or
xor
jo
pop
push
test
stos
dec
decl
push
xchg
mov
mov
hlt
sbb
xor
call
ljmp
and
andb
inc
clc
pop
int
ljmp
mov
loopne
and
bound
xor
loope
pushl
pop
sub
add
scas
rcll
xchg
in
cld
repz
push
inc
sub
sub
sahf
push
mov
scas
jl
xor
jmp
movsb
mov
sbb
sbb
mov
mov
es
test
daa
fsts
xor
lcall
or
xchg
push
and
sub
sarl
add
sub
jecxz
fadds
mov
mov
into
aad
cltd
dec
lahf
aam
mov
inc
adc
mov
clc
jg
repnz
mov
mov
cmpl
cmp
xchg
call
std
adc
or
sub
xchg
jp
lldt
and
loop
enter
fmull
fs
mov
test
cmp
jnp
jmp
movsl
out
mov
stc
into
pop
in
inc
loopne
inc
in
mov
xor
imul
stc
rep
xchg
add
jmp
stos
add
sub
adc
stos
cmc
push
mov
xor
pop
mov
fs
pop
in
repz
add
add
fnstenv
shlb
cmpsb
and
mov
jmp
ret
call
les
inc
enter
lret
je
gs
mov
mov
push
inc
ljmp
sub
dec
lods
jl
aas
jo
aas
jg
fisubrl
dec
imul
mov
pushl
xchg
out
push
lahf
ret
popf
jb
shl
lahf
aaa
outsb
xor
daa
push
and
mov
loopne
sub
std
cwtl
jo
push
and
icebp
ds
pop
cmp
push
loope
jg
sbb
iret
imul
sub
lahf
das
cmp
lea
sub
add
push
push
or
les
pop
inc
aad
and
mov
xor
cwtl
dec
cmpxchg
icebp
mov
sub
mov
icebp
ljmp
rclb
out
inc
jb
pop
pop
out
sahf
pop
jnp
xlat
mov
call
rcrb
aam
and
push
xlat
mov
sub
jb
mov
stc
jns
lds
test
sahf
lods
push
mov
insl
push
lods
cmp
rclb
cmp
in
call
ss
cltd
lretw
pop
pop
pop
dec
fwait
in
icebp
mov
mov
pushf
in
mov
outsb
dec
jae
add
push
mov
adc
call
loopne
shr
sbb
lahf
xlat
out
addl
ljmp
movsb
std
fstpt
je
mov
cmc
loop
rol
fdivl
dec
movsl
xchg
mov
pop
pop
inc
dec
add
cmp
lahf
lods
das
jnp
aaa
rcr
rol
movsl
pop
repnz
and
mov
add
test
xor
add
pop
cld
inc
mov
stos
shl
cs
and
or
xchg
dec
pcmpgtb
lcall
dec
or
cmp
repz
sub
xchg
rorl
push
mov
mov
shll
mov
mov
jg
call
xchg
subb
jle
aam
push
aas
mov
pop
jp
ret
cmpsb
outsl
pushl
xchg
adc
xor
js
ljmp
mov
rep
test
pushl
sbb
rep
or
inc
ss
pop
jmp
xor
jmp
fcoml
divb
xor
adc
call
mov
aad
repz
sub
jns
cld
jo
push
push
mov
stos
ljmp
out
mov
xor
dec
stos
ficoml
outsb
mov
js
lcall
xlat
push
xchg
lcall
jmp
fdivr
lds
decl
adc
fldenv
bound
fiadds
out
sbb
dec
dec
mov
in
ret
stc
es
testb
jp
test
cmp
jle
decl
jns
frstor
sbb
push
aas
leave
mov
dec
scas
mov
pop
mov
ljmp
cwtl
into
stos
jae
jg
daa
cmp
mov
ret
sbb
stc
xor
loop
xlat
idiv
inc
aaa
adc
inc
movsb
pop
out
xchg
inc
lahf
and
and
pusha
mov
int3
in
dec
mov
pushf
int3
mov
roll
gs
sub
sub
lret
movsl
jmp
push
and
fdivrl
pop
call
dec
sbb
pop
outsl
movsb
xor
clc
adc
pop
ljmp
call
jmp
dec
movsl
pop
dec
xor
and
adc
imul
add
add
jecxz
inc
lcall
lods
and
sbb
cmp
js
mov
cmp
or
ds
xchg
cmp
dec
add
aad
dec
sbb
dec
fnsave
cmp
pop
imul
mov
clc
lods
out
fldcw
mov
int
sbb
das
mov
push
cmpsl
fsts
lods
xchg
lcall
inc
loopne
mov
mov
jo
mov
sbb
push
loope
or
jmp
in
add
ljmp
cmpsb
or
movsb
dec
xor
adc
or
call
dec
out
lds
mov
outsb
and
sarl
repz
call
sbb
inc
nop
jne
add
decl
movsb
and
dec
jl
jecxz
pop
mov
rol
cmp
xor
js
ud0
dec
incl
rclb
mov
cmpsl
sti
adc
ljmp
mov
mov
mov
sbb
shrl
idivl
sbb
xchg
pushf
aas
call
aaa
scas
movsl
xchg
iret
pop
push
lods
xchg
jns
insb
cli
inc
sub
fsubp
mov
enter
mov
adc
mov
dec
orl
mov
ljmp
or
stos
js
pop
aas
and
ljmp
jmp
and
jle
es
mov
pop
or
jmp
or
es
mov
arpl
adc
dec
mov
dec
xchg
stos
inc
call
pop
ficoms
mov
ljmp
mov
dec
dec
std
leave
icebp
mov
inc
jecxz
inc
sbb
idiv
call
cmp
and
sbb
pop
lods
jbe
outsl
xchg
popf
rcrb
addr16
cltd
sub
js
pop
movsl
add
pushf
inc
test
faddp
int3
shl
ljmp
pushf
cltd
inc
xchg
stos
lea
dec
out
je
jge
ja
int3
sub
addb
aaa
or
lods
adc
jmp
and
movsl
dec
adc
jae
xchg
adcb
cmpsl
rol
bound
addr16
leave
sub
ljmp
jmp
sbb
cmp
imul
xchg
xchg
fidivl
stc
xchg
shll
jg
sub
mov
cmpsl
adc
in
jge
int
cltd
pusha
push
in
or
sub
rol
or
push
out
std
jo
jne
cmp
or
mov
stos
jb
hlt
adc
sub
mov
subb
jnp
clc
les
mov
out
fidivs
test
add
xchg
add
jae
jp
lcall
xchg
ja
imul
cld
cmp
add
mov
daa
movsb
fwait
push
enter
sbb
cltd
lods
push
test
sub
sahf
das
xchg
movsb
out
dec
xchg
mov
sub
mov
sbb
test
jnp
push
cmp
push
rcr
incl
push
jae
stos
mov
rclb
shrb
rcr
ja
jecxz
mov
subb
decl
inc
insb
jne
cmp
or
std
sub
xor
outsl
mov
xlat
mov
inc
pop
fwait
xchg
xchg
and
outsb
push
push
out
repnz
mov
push
mov
push
nop
cwtl
adc
xchg
mov
shlb
clc
jmp
add
loopne
and
notl
pop
std
push
cmp
repz
ret
ret
sbb
fistpll
pop
dec
xchg
xlat
clc
out
lret
jns
cmpsb
push
mov
xchg
xchg
and
shlb
incl
out
inc
push
cmpsl
sub
jo
push
xchg
sbb
mov
mov
xchg
push
push
lods
mov
or
dec
sub
leave
mov
adc
push
iret
mov
cs
decl
add
cmpsb
fldt
out
loope
inc
xor
jle
adc
sub
jmp
cld
and
fidivl
inc
test
fwait
daa
xor
aaa
ret
dec
mov
test
loopne
inc
enter
or
adcl
stos
stc
jmp
lret
testb
cmp
inc
mov
fnstsw
xchg
inc
xchg
push
push
fwait
or
lods
fbld
mov
and
orb
mov
ljmp
sub
ss
loope
xchg
pop
and
pop
loope
std
data16
mov
loope
pushl
and
mov
push
and
aam
pop
mov
ljmp
mov
shlb
mov
outsl
into
xchg
jge
add
pop
pop
jno
jne
ljmp
out
and
and
and
push
insl
xchg
mov
jnp
inc
sbb
out
scas
lcall
sub
ret
mov
out
jbe
sti
clc
xor
dec
lock
call
jmp
leave
cwtl
adc
sbb
stc
pop
icebp
add
jge
sbb
inc
fstpt
stc
pop
lcall
mov
sbb
adc
in
vandnpd
xor
add
fcmovb
mov
mov
clc
push
xchg
mov
lea
add
iret
sbb
mov
xchg
ljmp
jg
cmc
aam
and
scas
sub
pop
movsb
out
cli
incl
and
pushf
mulb
int3
cli
push
cmpsb
cmp
jne
xor
push
mov
lcall
xchg
lods
mov
and
dec
stos
add
ficompl
imul
dec
shrl
aas
jecxz
out
imul
pusha
inc
clc
mov
addr16
out
dec
out
push
push
inc
pop
js
daa
mov
dec
sahf
inc
out
cld
ds
cmp
xor
xchg
scas
or
call
test
xor
idivb
lods
fsubr
mov
clc
pop
mov
popa
add
mov
aam
cmpsb
jae
jbe
dec
imul
cmp
cmp
xor
inc
xor
mov
pushl
test
mov
mov
hlt
shrb
ficomps
movsb
cmp
mov
scas
call
inc
fldl
or
xchg
repnz
andb
push
out
aad
mov
sahf
aam
ljmp
imul
or
addr16
into
sbb
fisttpll
testb
jmp
and
aad
jae
push
or
mov
sbb
cmp
mov
ljmp
mov
test
fiaddl
sar
enter
stc
add
dec
sbb
loop
scas
test
fwait
sti
jmp
pop
lods
push
jle
add
dec
clc
sbb
dec
mov
loope
jge
cmc
jmp
repnz
jmp
inc
xchg
add
sarl
rcll
mov
or
sahf
fcomip
mov
and
xor
aam
mov
dec
insl
movsl
sbb
inc
jecxz
lds
or
in
dec
fists
and
add
fdivrs
repz
into
call
cs
pushl
out
mov
push
mov
push
add
std
testb
push
xor
stos
inc
dec
sti
sbb
lcall
mov
mov
pop
jo
cld
mov
jecxz
push
in
mov
daa
push
add
stos
sbb
decl
lock
jle
push
loopne
dec
sahf
add
leave
stc
xor
inc
jle
pop
dec
sti
popf
stos
ljmp
mov
sub
cmpsb
scas
sbb
dec
or
sar
lcall
movsb
rcrl
movsl
rclb
in
lods
mov
and
mov
mov
cmp
cmp
pop
adc
mov
pushl
or
int3
jmp
stos
repnz
xchg
movsl
push
cmp
cmpl
lcall
mov
add
add
cmp
lret
test
stos
loope
xchg
cwtl
cmp
mov
pushl
movsb
and
xchg
pusha
out
push
in
mov
repz
pop
push
addr16
jmp
jp
ficoml
das
mov
aas
inc
shl
mov
or
dec
sub
loope
dec
cli
jmp
xor
sub
aas
popa
nop
shrb
cmpsl
shl
push
stc
lret
mov
andb
pushl
mov
inc
mov
lea
push
push
pop
dec
call
loop
iret
xchg
aaa
xchg
decl
sarb
mov
orb
es
xor
cltd
sbb
xchg
jne
decl
rcrb
fdivl
mov
sahf
xchg
sbb
inc
cmp
inc
mov
pushf
xor
lcall
inc
sbb
lea
sub
jle
adc
sti
call
iret
dec
popa
mov
add
mov
push
cmp
or
xchg
incb
add
lcall
je
leave
mov
pop
outsl
cmp
fistps
mov
sub
rclb
jb
lcall
or
mov
subb
mov
jg
in
mov
mulb
mov
lcall
call
cmp
push
lods
mov
sbb
sbb
int3
push
in
repz
xor
mov
xor
faddl
int
mov
mov
jmp
jnp
cmpsb
loope
inc
jge
test
stos
divb
cwtl
sbb
push
scas
mov
add
sar
push
sbb
sub
test
or
sahf
movl
aas
je
ss
or
mov
jg
sahf
in
outsb
xchg
aad
mov
mov
adcl
jg
call
lock
es
or
dec
in
leave
inc
addr16
andl
test
out
cmp
out
shll
in
jbe
cmp
fmuls
cmp
pop
xchg
js
pop
mov
mov
xor
icebp
pop
hlt
lods
pop
fdivr
fistl
xor
and
add
push
jbe
pop
loop
mov
repnz
daa
iret
mov
add
pusha
test
pushl
rorb
xchg
adc
sub
dec
pop
xchg
sub
es
dec
pop
cmp
ljmp
push
fwait
xor
mov
fildl
sub
dec
out
pop
lock
into
jg
lahf
and
fsubrs
xchg
xor
sbbl
dec
ljmp
or
lcall
sub
mov
outsl
das
xor
push
cs
mov
pop
mov
out
ljmp
cli
xchg
dec
je
add
sub
divps
xchg
call
shrl
mov
jmp
and
fstp
cmp
enter
fimuls
adc
xor
movsl
mov
jg
test
adc
aas
mov
lds
mov
into
out
xchg
scas
stos
ja
mov
pop
sahf
push
xchg
lahf
dec
mov
jg
jb
pop
or
incl
mov
in
out
in
xchg
xchg
into
clc
fistps
lcall
addr16
dec
les
cmp
std
and
and
fs
pop
dec
test
or
push
lcall
add
jge
sti
sbbl
fidivs
sahf
mov
push
cmp
inc
leave
pushl
pop
mov
or
negl
mov
add
cmp
fbstp
test
cmp
in
cwtl
sub
push
mov
icebp
cmp
push
adc
enter
mov
jle
xlat
lea
int
mov
call
mov
aaa
cs
sbb
jbe
xchg
cli
xor
mov
push
popa
mov
mov
incl
xor
cmp
or
push
pop
in
in
lcall
incl
fdivrs
lods
rorl
fwait
ja
cwtl
clc
jae
inc
stos
dec
sarb
ret
mov
rol
mov
fdivs
pop
sar
scas
clc
insb
stos
pop
loope
and
lcall
fldenv
mov
adc
rcr
test
or
fsubs
rcll
inc
lea
pop
xor
das
lock
lcall
dec
cli
sbb
push
sub
int
sub
jbe
aam
je
xchg
add
decl
js
in
mov
jecxz
addr16
fldt
lcall
pushf
int3
mov
pop
bound
insl
jp
adc
inc
ljmp
and
sti
jp
ret
pop
or
sbb
push
push
cmp
daa
imul
dec
mov
adc
xor
cltd
ss
jo
lcall
adc
les
push
cmp
ficoml
mov
aad
and
cmp
pushl
popf
fdiv
jno
xlat
add
test
sub
test
insl
js
inc
mov
in
cltd
jg
sbb
nop
xor
push
mov
lret
inc
cmp
fsubrl
mov
sti
adc
in
sub
cs
xchg
ljmp
sbb
out
lahf
sbb
mov
push
xchg
in
ret
rorl
mov
ljmp
dec
mov
repnz
add
ja
mov
xor
add
outsb
mov
xchg
call
mov
out
pop
stos
dec
push
push
pushf
mov
jns
cmp
dec
loope
jb
xchg
and
es
dec
in
jno
repz
fcomip
ljmp
xor
jmp
lret
ja
in
xor
sbb
lret
ljmp
insb
gs
ljmp
jecxz
sbb
popf
dec
xlat
mov
call
std
popf
dec
cmp
call
ss
push
jp
add
sbb
int3
mov
loope
lock
jb
call
dec
enter
js
cmpsb
stc
mov
dec
out
adc
call
and
incl
mov
out
push
dec
jge
sbb
pop
daa
in
out
mov
mov
xchg
arpl
xchg
aam
inc
dec
jmp
mov
popf
sbb
jg
and
notb
pop
mov
les
sbbb
and
jg
scas
cmpsb
pop
in
prefetcht0
scas
sbb
mov
lret
pop
mov
incl
mov
lret
into
shll
stos
xor
jg
push
push
jmp
lcall
repz
add
jns
cli
and
push
fdivrs
idivb
pushl
addr16
outsb
push
mov
xor
inc
inc
test
incl
cmpsb
fsubrs
inc
pop
xor
shlb
call
mov
flds
iret
or
mov
mov
jl
jb
sar
lcall
push
std
dec
xchg
xchg
xchg
stos
mov
imul
out
pop
xor
mov
pop
mov
cmp
push
mov
nop
addr16
add
push
mov
mov
and
push
push
cmpsb
pop
in
aas
imul
test
pusha
repnz
dec
adc
or
pop
pushl
sahf
inc
int3
xchg
bound
jecxz
and
popa
insb
sbb
shlb
push
lret
pop
or
dec
sbb
push
pop
cmc
jmp
xchg
or
cmp
dec
lcall
movsb
fcmovnu
ss
mov
and
fcomip
in
and
leave
xor
jns
lret
lea
jo
mov
dec
insb
xlat
out
xchg
and
ret
add
repz
jecxz
and
jg
popf
imul
jle
xchg
cmp
out
or
add
pop
pop
and
into
jno
add
das
cli
ljmp
test
xchg
lret
pop
adc
inc
dec
cmpl
xchg
adc
mov
incl
mov
cmp
stos
call
dec
test
add
mov
jb
mov
ja
mov
sbb
and
lock
out
fs
enter
sti
xor
test
sub
addr16
insl
decl
mov
inc
mov
imul
je
add
and
mov
jmp
adc
push
jno
shll
sbb
lret
inc
int3
sti
add
mov
stos
incl
fdivrs
and
push
sub
sbb
aaa
out
sub
pusha
sub
ljmp
add
int3
fbstp
mov
add
mov
mov
call
mov
test
sub
data16
xchg
dec
bound
cmp
aas
adc
sahf
push
lcall
rolb
add
xchg
pushf
fs
jl
sbb
mov
mov
call
xchg
insb
insl
mov
dec
in
mov
adc
out
ret
roll
jae
sub
jmp
mov
bnd
push
mov
out
or
sub
stos
pushf
push
dec
dec
js
adc
lods
and
jg
mov
jmp
test
jb
outsl
push
pop
mov
insb
jmp
test
out
or
adc
add
xchg
sub
cmp
bound
sbb
inc
cmp
add
fcomip
decl
push
popa
in
dec
sbbl
or
inc
xor
daa
mov
imul
mov
hlt
out
imul
push
add
hlt
pop
cmpsb
xor
call
push
push
sahf
mov
inc
lcall
pop
sbb
pop
stos
sbb
jno
mov
inc
jmp
xor
xorl
sub
fbld
dec
mov
jg
jmp
test
cltd
mov
in
out
sub
icebp
jns
lods
mov
xchg
jmp
shll
sarl
jae
hlt
pop
push
cmp
add
outsb
xchg
mov
bound
lcall
loope
mov
push
int3
lock
jmp
fs
mov
lcall
or
inc
sbb
sbb
inc
pop
int
dec
cmc
je
sbb
pop
nop
push
cmp
xor
mov
push
jmp
push
and
fwait
stos
sbb
push
push
fldt
dec
sbb
push
das
call
jp
ficompl
test
mov
push
mov
xchg
cmp
ja
lcall
inc
and
inc
lea
add
jno
je
loop
jmp
repz
jns
ljmp
cmp
mov
xor
out
jg
sub
mov
jmp
imul
mov
adc
xor
mov
lahf
or
push
das
idivl
repz
repnz
inc
int3
adc
inc
jno
and
ds
into
mov
inc
add
or
cmp
ljmp
stc
xchg
cmp
repz
add
jne
lret
leave
enter
lcall
fs
ss
pop
or
xchg
imul
sub
outsb
dec
dec
inc
dec
lods
push
movsb
jmp
pop
pop
into
cli
shrl
cmp
clc
mov
ljmp
ljmp
inc
and
roll
mov
stos
dec
shlb
adc
sbb
cmp
add
int
pop
sbb
in
sbb
gs
ror
sti
decl
cmp
fstps
fwait
xor
out
xor
cmp
jp
in
jg
sbb
pop
sbb
mov
mov
imul
lret
jmp
out
push
loopne
lcall
in
shlb
sub
jecxz
jl
sbb
jmp
pop
int
fistpll
cmpsb
incl
fildl
rcrl
subb
dec
mov
push
repnz
cmpsl
call
pushl
cld
incl
jecxz
dec
std
mov
jo
mov
xchg
ror
push
sar
mov
pushl
fs
lods
out
in
cli
test
mov
fsubrl
sbb
xchg
stos
adc
ja
jmp
lret
mov
shlb
pop
sbb
pop
jno
push
test
mov
or
decl
enter
loopne
lahf
xor
shll
mov
aam
outsl
data16
iret
jne
test
push
inc
xor
test
fnsave
xor
sub
jmp
and
ljmp
test
popa
cli
fdivp
or
outsb
hlt
mov
push
test
pop
flds
cmp
ret
addb
inc
js
jmp
jo
xchg
out
scas
fbstp
call
inc
push
pop
pop
idivb
mov
dec
pop
pop
sub
loop
and
das
decl
add
jmp
push
imul
sub
dec
cmpsb
sbb
and
sar
pushl
adc
add
jle
cmp
call
jb
sahf
int
lcall
incl
mov
pop
hlt
lahf
add
data16
push
stc
mov
cmp
xchg
sub
ljmp
xchg
imul
in
dec
test
inc
cmp
push
stos
fwait
mov
cmp
arpl
mov
fisttpl
sub
scas
sub
mov
push
xchg
iret
shlb
mov
dec
adc
mov
xor
lahf
inc
lcall
js
push
insb
xor
or
add
or
out
stos
imul
inc
cld
lcall
sahf
xor
fcompl
out
push
dec
cwtl
pop
jnp
pop
js
loop
jg
incl
mov
daa
in
and
insl
mov
sub
pop
jae
jb
pusha
jb
inc
xchg
cmp
call
ror
jl
enter
mov
xchg
sbb
bound
mov
in
xchg
addl
jle
lcall
adc
mov
push
cld
fmuls
movsl
pusha
or
pop
cltd
and
cld
fiadds
loope
jle
cmp
imul
movsb
fwait
sbb
hlt
pop
cmc
es
dec
jg
jg
jno
rclb
push
fisubrs
hlt
dec
mov
pushf
mov
dec
push
fstpl
decl
pop
lods
stc
xchg
lcall
mov
xchg
inc
aam
cmp
mov
imul
push
dec
decl
lcall
cs
jns
jp
and
iret
add
cltd
sub
js
incl
pushl
xchg
pop
nop
mov
and
arpl
mov
pop
xchg
mov
jmp
jnp
fcompl
xor
mov
and
jmp
rcl
dec
int3
jnp
addb
jnp
call
jp
dec
cmc
inc
push
subl
cmc
inc
add
and
sbb
sbb
adc
xor
repnz
and
cmpb
lcall
or
int3
sbb
js
mov
sub
fcmovnbe
xchg
xchg
inc
add
jno
xchg
dec
sub
negb
lods
adc
or
jae
pusha
dec
jge
xchg
pop
cmp
lcall
push
xor
push
fldcw
push
pop
dec
ss
lret
addr16
dec
add
xlat
es
incl
cmpsb
push
test
pop
push
adc
pmaxsw
push
cwtl
call
sub
jg
call
cmp
pop
fcmovu
xchg
push
stos
loopne
xchg
stos
out
and
hlt
jo
or
mov
ficoml
jbe
mov
mov
dec
aad
cmp
jge
pop
out
sbb
jmp
pushf
fistl
cli
or
mov
adc
xlat
rol
xchg
test
std
ds
pop
shrl
push
fsub
jmp
lahf
and
daa
cmp
add
std
jg
frstor
push
pop
test
push
std
enter
int3
icebp
mulb
xor
adc
sbb
fdivrs
scas
jl
sarl
popf
stos
xchg
adc
das
or
scas
movsb
jo
mov
xor
call
push
sbb
push
imul
pusha
pop
loope
fwait
loopne
lea
mov
js
cmp
into
lret
pushl
arpl
jl
out
mov
add
sbb
mov
mov
mov
ljmp
cld
into
push
inc
sub
push
mov
cmp
mov
and
fidivrs
je
or
dec
mov
xchg
jmp
xchg
std
out
ss
pop
data16
divl
pop
std
movsb
clc
mov
rcr
jmp
add
jbe
xchg
cli
int3
ljmp
pop
sub
adc
adc
inc
lret
jae
adc
mov
incl
push
pop
call
cmp
popf
pop
mov
aas
push
jnp
jno
leave
insb
pop
cs
cs
call
fbstp
pop
repz
into
adc
int
dec
bound
clc
das
add
xchg
mov
sub
repz
les
jmp
pop
test
cmpsb
fsubrl
xchg
xchg
mov
mov
sub
das
mull
mov
sub
pop
push
std
jmp
gs
mov
xchg
das
lret
cltd
in
call
lods
in
inc
ja
mov
decl
outsl
out
stc
jl
xor
stc
and
jmp
int
jmp
and
enter
xor
call
hlt
sbb
std
jecxz
enter
xchg
sti
mov
jmp
nop
fbstp
push
xchg
pop
rorb
inc
shrl
and
sub
pusha
arpl
adc
xchg
mov
repz
lcall
xchg
mov
jp
jge
cli
sub
mov
lock
test
mov
xchg
jp
sub
ss
mov
pop
std
xchg
pusha
lahf
pop
jmp
clc
call
jnp
fnstcw
aam
movsb
stc
push
jae
and
dec
push
in
inc
sbb
ljmp
loop
cmp
in
lret
jmp
cmpl
addb
paddsw
decl
jnp
xor
xchg
into
out
and
out
inc
adcl
jns
mov
in
jmp
fisubrl
jae
lahf
and
cs
push
dec
aam
loope
jecxz
dec
decl
incb
adc
lods
sbb
sub
pop
mov
lock
movsb
xor
lret
lcall
lods
gs
mov
xor
shrb
cmp
test
in
call
cmpsb
dec
insl
je
sbb
sbb
je
rorb
popf
pop
sub
sbbl
inc
pop
or
or
mov
shl
cmpsb
fcmovbe
pop
cmp
jne
jl
lock
xor
inc
sbb
ljmp
call
add
sub
xchg
ret
dec
lock
stos
pusha
cld
lcall
hlt
or
inc
push
rcll
push
das
push
cmp
sbb
pop
add
adc
das
dec
into
inc
cmp
insb
inc
mov
push
pop
sbb
lea
fs
sub
pop
jg
mov
mov
push
add
jmp
test
or
stos
mov
ljmp
fists
dec
push
sub
mov
push
adc
hlt
sub
std
or
add
pop
outsl
cmp
roll
adc
mov
pop
std
pop
dec
lea
fsubs
scas
fbstp
mov
icebp
cmpsl
es
mov
dec
out
push
xchg
cmp
lret
sub
shr
mov
mov
pushl
xor
cwtl
push
aad
lret
cmpb
rorl
inc
mov
jl
fcomip
les
fmuls
scas
jo
fwait
cltd
xor
cmc
sub
jp
lcall
mul
inc
jae
pop
cmp
std
lock
test
pusha
xlat
test
jnp
iret
addr16
scas
mov
push
inc
inc
sub
push
arpl
ficoml
pop
pop
popa
xor
sbb
xchg
fincstp
dec
or
sub
mov
sub
cmp
sbb
stos
pushf
fnstenv
sbb
jp
stc
mov
jmp
addr16
shl
dec
loope
add
adc
neg
test
jbe
outsl
mov
outsl
cmp
decl
aam
dec
imul
xor
fisttpll
inc
jns
lea
ljmp
pop
outsb
sub
lock
stos
mov
xchg
pusha
in
ret
icebp
pop
shl
movsb
adc
xchg
jb
pusha
add
pop
lcall
clc
adc
sub
mov
push
imul
pop
fstpl
xchg
cmc
lods
arpl
incl
or
xor
mov
frstor
icebp
rorb
mov
push
add
mov
int
mov
subb
dec
cmpsl
movsl
pop
lcall
add
push
xchg
jo
loopne
jb
out
mov
cmp
push
rcr
adc
pop
push
loopne
lds
add
dec
sbbb
sbb
popf
call
or
dec
scas
hlt
lock
or
add
in
imul
call
jle
scas
cld
dec
adc
ret
sbb
xor
repnz
push
adc
test
jmp
scas
movsl
arpl
jne
dec
or
ret
nop
xor
xchg
xchg
mov
mov
add
les
and
and
xor
adc
adc
and
push
sbb
roll
sbb
jmp
and
xor
fcmove
ljmp
test
jp
stos
addr16
mov
nop
cmp
into
int
loop
xchg
sub
lods
add
std
mov
jo
jo
mov
or
add
ja
pop
fcomi
jp
test
ret
dec
xchg
dec
mov
sbb
mov
mov
and
push
jle
mov
cmp
lcall
and
pop
scas
das
outsb
pop
scas
mov
jl
xlat
xchg
cwtl
mov
lods
test
dec
fisubrs
cld
push
jbe
repz
fists
mov
in
push
inc
subl
scas
cs
jmp
mov
loopne
or
jge
in
and
jmp
fbld
xlat
or
pushl
mov
cmpsl
push
fnstsw
xor
daa
xor
std
mov
cld
dec
cltd
dec
ljmp
jns
lret
aaa
test
mov
and
test
insl
inc
xchg
int
jg
cmpsb
ljmp
add
test
push
pop
xchg
inc
lret
and
ja
fcomip
dec
lahf
test
testb
inc
jo
cs
jle
push
push
cli
incl
xor
fcoms
sahf
outsb
pop
mov
lock
mov
outsl
and
xor
test
add
call
fisttpl
je
outsb
fmull
jmp
popa
xor
jecxz
lds
xchg
or
xchg
int3
testb
pop
adc
fsub
sbb
jg
fistl
repnz
and
cmp
daa
add
mov
cs
ffreep
out
lods
outsl
loop
mov
insb
mov
jno
push
cld
jmp
inc
sub
cmc
cmpsl
iret
sub
gs
lret
ss
andl
sahf
xchg
cmp
adc
ljmp
mov
mov
sbb
stos
mov
dec
pop
cld
add
adc
xor
jecxz
in
pop
jg
adc
std
add
outsl
jns
test
test
cmc
cmpsb
fsubr
das
shlb
ret
fists
loopne
inc
jmp
mov
addl
incl
jno
pop
stos
inc
stc
sbbl
pushf
push
mov
push
stos
out
pop
lahf
out
mov
scas
mov
dec
fcoml
andl
in
and
int3
addr16
push
jb
pusha
sar
js
mov
mov
out
mov
outsl
add
les
mov
pusha
xchg
icebp
pop
jl
fildl
push
in
rcll
rclb
jne
pop
jb
xor
inc
adc
ret
addb
cltd
fwait
ds
adc
sti
mov
incl
jb
add
pushf
popf
data16
or
stos
aaa
sub
iret
sbb
add
cli
ds
stos
std
aam
inc
pop
sahf
in
sahf
movb
mov
push
sub
cwtl
xor
adc
clc
xchg
incb
ds
pop
mov
ljmp
jecxz
test
cmpsb
out
out
scas
or
lret
cltd
mov
dec
adc
mov
in
hlt
jno
push
push
lret
insl
mov
es
or
or
mov
vcvtpd2dqy
lods
jno
xchg
sub
rcll
decl
adc
dec
repnz
fdivs
jle
fimuls
movsb
jl
jp
adc
mov
stos
loop
ljmp
add
sub
mov
rcrb
imul
jbe
ficoml
jno
sub
ljmp
stc
sub
test
sbb
jecxz
xchg
int
jno
ljmp
adc
cmc
lcall
dec
and
shll
ss
push
sbb
sub
mov
nop
cmp
decl
inc
stos
jns
repnz
push
cmp
mov
test
dec
jmp
or
outsl
lret
lcall
lcall
les
pop
into
sarl
aam
lcall
decl
cld
aam
xchg
mov
in
int
sbb
and
jno
rcrl
cmc
decl
cmp
mov
push
jb
push
push
loopne
out
sbb
insl
call
xor
push
dec
sbb
add
mov
push
ja
incl
push
mul
cwtl
ficoms
mov
and
aad
dec
or
cmpsl
jb
rol
fildl
outsl
xor
lock
rclb
xchg
push
mov
dec
push
xchg
jmp
jp
xor
xchg
js
lods
aad
inc
mov
adc
or
scas
lahf
ja
call
lcall
pop
repnz
mov
jne
push
and
decl
popa
and
jns
aad
int3
xor
jge
inc
repnz
das
rcrl
sbb
dec
push
mov
lcall
cltd
jg
sbbb
cmpsb
idivb
rorb
repnz
adc
outsl
pushl
mov
ret
je
inc
aad
insb
pop
fimuls
lds
or
and
ljmp
pmaxub
cwtl
or
inc
stc
mov
adc
div
add
lahf
icebp
repz
lret
ljmp
testl
popf
and
ja
iret
xlat
lea
notb
or
or
mov
mov
mov
pop
cld
sbb
inc
pop
cmp
mov
repz
std
mov
pushf
mov
jge
lock
push
ret
jle
jbe
scas
mov
pushl
mov
inc
xor
dec
push
mov
jge
sbb
mov
push
es
mov
incl
je
or
cmpb
std
xor
roll
ss
xchg
jae
sti
jbe
in
imul
sbb
dec
outsb
xor
jo
fwait
test
jae
push
clc
xor
pop
push
lods
pop
out
mov
mov
jo
ss
add
sub
dec
mov
pushl
ficoms
arpl
mov
loop
shll
sbb
bound
decl
xchg
jmp
mov
add
xchg
fiaddl
add
cs
es
mov
push
push
push
push
or
add
xor
push
call
mov
jg
shrb
clc
mov
xor
sub
mov
inc
add
cmp
jmp
pop
jmp
jmp
mov
push
movl
add
or
rolb
test
pushl
mov
xor
sub
ror
mov
xor
jne
cmp
sti
inc
or
je
push
pop
pop
inc
cmc
je
lods
inc
xchg
fdivs
shlb
cli
repz
sub
jmp
inc
jl
sub
xorl
outsl
jle
xor
into
je
and
repz
insl
sbb
fildl
jne
add
add
mov
call
leave
ret
push
out
pop
lock
xchg
sbb
add
gs
adc
ss
xor
inc
ret
outsb
addr16
mov
pusha
incl
sbb
dec
ret
cmp
in
iret
ror
jle
int3
push
pushl
xor
and
mov
sub
push
dec
in
outsb
outsl
outsl
mov
xor
push
mov
fwait
mov
inc
clc
lea
mov
mov
cmpsl
std
or
pop
push
ret
int3
add
pop
and
push
push
mov
jae
xor
cmp
loopne
add
or
ljmp
add
adc
dec
add
iret
xor
dec
add
pop
jnp
mov
pop
push
sub
inc
add
jne
or
mov
incl
and
lea
mov
and
lea
mov
dec
xchg
lea
mov
cmp
push
mov
mov
inc
sti
out
push
test
in
add
dec
mov
jne
cmpb
or
repnz
cwtl
sbb
pop
pop
add
ret
jns
adc
inc
jmp
adc
cmpl
jne
cmpl
lods
jge
and
push
lock
push
jnp
sbb
push
push
clc
xor
or
test
sbb
out
subb
or
adc
aad
enter
xchg
pushf
dec
adc
dec
or
push
jg
mov
or
jmp
iret
loop
icebp
decb
test
mov
popf
sbb
pop
dec
mov
fnstsw
scas
mov
adc
pop
push
mov
jle
std
pop
pop
ret
cmpw
mov
sbb
push
inc
or
ss
mov
jg
push
jbe
xor
cmp
rorl
inc
xor
mov
nop
push
inc
out
sbb
mov
mov
mov
sarl
sbb
or
in
mov
pop
add
adc
pop
adc
jl
xchg
jne
push
adc
inc
fwait
cmpsb
imul
mov
in
cmpsb
jle
out
jg
push
mov
cmp
je
sbbl
fdivrl
push
rol
pop
push
fcomps
jge
add
mov
or
sbb
es
mull
push
pop
decb
push
cmp
sbb
and
jl
enter
mov
xor
push
jge
push
mov
sbb
mov
lahf
daa
adc
mov
dec
or
aas
mov
or
or
pop
push
pop
lock
movzwl
jmp
push
pop
push
push
push
fldenv
add
in
jge
lods
mov
popa
or
or
jmp
jp
mov
or
ret
mov
adc
aam
jecxz
add
es
fstpt
in
adc
loop
cltd
sbb
add
cmp
int
add
ret
sbb
hlt
jp
adc
mov
push
in
push
jne
xor
xor
je
sti
xor
dec
and
sbb
cmp
xor
cli
adc
bnd
lea
sahf
mov
stos
add
sbb
in
out
rclb
inc
jae
or
jmp
fs
std
jnp
mov
pop
ret
lods
add
inc
add
adc
mov
fmuls
enter
aas
jno
mov
call
pusha
sar
insl
jo
pop
inc
mov
arpl
stos
decb
pushl
add
sub
add
loop
ljmp
xor
xor
xor
lock
filds
icebp
into
out
cmp
mov
out
dec
push
pop
cwtl
pop
outsb
fwait
push
and
push
pop
pushf
jbe
jns
insb
push
push
and
rorl
aad
adc
lahf
xchg
cli
cmp
ljmp
mov
add
cmpl
lods
push
insl
xor
sete
pop
cmp
enter
out
mov
shll
mov
sbb
mov
loope
mov
cld
add
cmp
jb
ret
sar
shrb
jb
sarb
stc
add
push
add
sub
gs
and
jae
inc
divb
rolb
pop
xchg
inc
or
cmpsl
cmp
or
inc
and
call
loopne
jmp
mov
in
lret
and
aam
ret
mov
popa
mov
cld
rorb
ret
arpl
push
rcl
add
js
add
rol
lret
adc
and
cmp
and
cmp
inc
cltd
cmp
das
ret
lcall
sub
shlb
lock
push
sar
shrb
push
and
jge
cmpsb
push
push
sub
or
pop
jae
push
ret
mov
pop
and
cli
jmp
sbb
pop
outsl
cmpsb
idiv
push
mov
jmp
mov
jo
mov
jb
pop
jg
add
jmp
or
mov
test
mov
rorl
jmp
cmc
push
and
idivl
into
jne
xchg
and
mov
push
mov
pop
dec
mov
cmp
je
mov
lcall
jo
jne
fisttpl
daa
fdivl
cmp
xor
shlb
mov
mov
and
or
lret
sarb
mov
and
clc
mov
or
pop
jae
push
jb
cmpl
xor
or
cmpsl
or
add
sub
adc
mov
mov
sbb
test
sbb
sbb
cwtl
lods
clc
out
mov
jne
lods
sub
inc
sbb
loopne
in
adc
add
cmp
jb
cmpl
outsb
mov
mov
inc
leave
cmp
je
push
pop
pop
jmp
jle
loopne
push
mov
push
add
mov
push
sbb
cwtl
sub
jecxz
or
cmp
shr
adc
in
jl
lock
and
add
sbb
sti
jbe
stos
mov
or
pop
and
lret
out
add
and
xor
pop
push
push
and
or
push
fimuls
mov
fstpl
push
cmp
cmp
bound
add
ja
push
push
fisubrs
lds
pop
je
jne
mov
jmp
pop
mov
add
sbb
pop
or
xchg
fsubr
arpl
cmp
subb
mov
cmp
sub
pop
mov
jecxz
movb
mov
daa
shlb
mov
add
out
ret
andps
xchg
sub
inc
rcll
jbe
sbb
cmp
push
cmp
movsb
sahf
push
push
pop
sub
lar
adc
or
sarb
loopne
push
push
sub
pushl
sbb
inc
push
test
or
in
inc
daa
push
jmp
push
sahf
cmp
es
cld
cmp
je
cmp
and
in
test
push
lea
push
adc
xor
js
lock
adc
add
in
pop
jne
adc
add
ss
add
sbb
test
add
mov
call
jge
mov
push
cmp
je
mov
imul
add
add
cmp
jb
lock
out
imul
ret
jae
xor
add
shll
test
cmp
or
test
push
jne
sti
pop
adc
push
nop
cmp
jne
pusha
or
in
pusha
inc
and
fisubrs
mov
dec
or
adc
or
mov
dec
data16
cmp
jge
imul
mov
andl
in
or
cmp
and
sarl
clc
fwait
add
mov
cmp
jne
movl
xlat
test
nop
and
orl
push
test
cmp
sbb
cs
popl
push
cmp
pusha
jnp
jbe
call
pop
mov
jmp
leave
push
sbb
lock
mov
push
inc
pusha
or
push
leave
ret
pusha
decl
cmp
mov
xor
pop
adc
mov
cmp
ja
mov
aad
test
mov
and
xor
adc
rcll
stc
movzbl
sub
ljmp
jmp
push
pop
inc
bound
cmc
pop
mov
xor
subb
lret
scas
sbb
inc
repz
add
inc
in
psrad
mov
cmp
lea
cld
lods
add
push
inc
xchg
xor
mov
cmp
or
dec
pusha
lret
adcl
inc
popa
or
orb
push
std
imul
scas
push
pop
cmp
push
pop
je
push
push
push
dec
std
pop
and
push
add
cmc
cmp
jne
incl
xor
mov
and
lea
push
ret
jae
dec
mov
hlt
shlb
adc
adc
cmp
push
loop
repnz
movl
iret
or
or
mov
cmp
fdivl
mov
insb
rolb
cmp
pop
popa
jnp
xchg
push
or
mov
inc
mov
push
ret
push
inc
xchg
adc
jge
mov
mov
inc
incl
mov
je
jle
mov
test
add
xchg
add
inc
sub
cltd
fadds
js
pop
rcrl
cmp
sub
dec
jmp
sbb
ss
inc
inc
xchg
inc
addl
cmp
mov
inc
pop
je
pop
es
sub
loope
fcomi
je
fadds
cmp
or
xchg
mov
mov
sub
adc
add
sbb
icebp
js
les
cli
movb
loop
cmp
pusha
inc
mov
je
leave
or
add
into
inc
add
std
push
inc
dec
adc
cmp
sub
push
jnp
ficoml
push
andl
add
pop
sub
or
movsb
inc
push
pusha
aad
mov
movsl
inc
das
mov
sbb
mov
jne
mov
cmp
lea
lea
orb
in
es
jo
cmp
cld
hlt
jecxz
rcrl
pushl
cmp
out
lea
cmp
jb
lods
inc
push
shl
xor
lock
sub
fstl
sti
add
push
push
orl
loopne
xor
seto
xorb
clc
movsl
push
mov
cmp
ret
push
pop
jne
inc
push
sub
call
stos
sbb
clc
movsl
jmp
fstl
add
js
mov
mov
push
mov
test
add
fistl
dec
cmp
imul
sbb
or
mov
sarl
sub
push
sar
inc
push
push
adc
ja
cmp
call
arpl
out
lret
fs
adc
fcmovbe
cmp
inc
sub
adc
inc
pop
add
cmp
push
incb
pop
cmp
mov
mov
jo
cli
pop
jmp
and
or
lock
aas
jmp
jne
test
adc
mov
sub
test
sbb
push
push
inc
lds
sbb
inc
push
pop
push
xor
pop
faddl
add
add
outsl
sbb
push
pushf
xor
add
or
or
or
fwait
or
push
and
cmp
outsb
push
rol
inc
or
loopne
fsubl
mov
jp
into
mov
mov
je
adc
lea
and
jbe
mov
jl
mov
sbb
insl
pop
sbb
sbb
push
mov
fsub
pop
cmpsb
enter
add
cld
add
and
je
pusha
and
jmp
clc
push
and
adc
cmp
jb
call
xor
insl
sarb
jg
popf
jmp
adc
fldcw
jle
add
mov
pop
fisubrl
stos
mov
mov
test
cs
jne
push
push
pop
mov
cmp
xor
clc
add
rcrb
shl
add
pusha
mov
ror
inc
add
mov
push
js
and
fmul
les
hlt
inc
adcl
rorl
push
repz
jl
or
sub
cmp
sbb
push
pop
jmp
inc
dec
testl
rorb
aas
sbbb
push
aaa
xor
ds
mov
add
jmp
adc
jne
fchs
push
lock
je
and
movl
jl
dec
cmpsl
pop
loope
pop
repnz
xor
ret
push
test
arpl
test
je
rorb
xor
outsl
push
jne
mov
pushf
rolb
cmpsb
clc
xchg
loopne
inc
or
cmp
pop
jle
loop
icebp
das
hlt
jmp
push
push
push
mov
add
mov
sbb
sbb
push
push
lods
incb
push
pushf
sub
fdivs
jmp
fwait
mov
inc
clc
jns
xor
int
inc
xor
and
ret
and
pop
push
cmp
xor
jmp
mov
and
stc
neg
add
xor
push
ret
mov
jbe
adc
jne
cmp
mov
pop
in
cld
xor
popf
xchg
dec
xor
push
push
stos
insl
in
push
fs
sbb
ss
cmpsb
dec
and
imul
mov
or
aas
push
jmp
cmp
jo
cmp
push
pop
leave
jnp
xor
or
inc
pop
js
mov
mov
or
das
mov
pushl
sbb
mov
leave
sub
insb
inc
outsl
cmpsl
cld
push
movb
add
jle
mov
push
cmpsl
loop
jno
cld
or
insb
sub
out
imul
sub
insb
xchg
cmp
call
or
adc
push
push
inc
clc
pop
cld
and
sub
dec
repnz
dec
push
push
push
shlb
int3
cmp
dec
sbb
mov
adc
dec
dec
jl
stos
pop
dec
enter
push
std
pop
loop
rcl
sarb
add
push
dec
inc
jle
testl
jle
ljmp
mov
xchg
sbb
cmp
dec
lock
lds
pop
cmp
test
push
sbb
push
pop
push
movsl
mov
adc
daa
inc
jbe
pop
mov
cli
pop
cmp
jle
insb
jle
sahf
or
aas
add
cmp
je
popa
push
dec
cmp
sar
inc
pop
or
ljmp
jne
jmp
int3
sub
xor
adc
fs
nop
bt
lret
in
or
cmpsb
inc
jne
mov
inc
dec
sbb
sti
or
push
adc
add
add
mov
mov
jno
daa
pop
jo
dec
cmc
ja
push
mov
test
add
mov
ja
sub
outsb
out
lods
int
mov
or
pop
movsl
push
sub
pop
pop
fidivrl
gs
push
hlt
cmp
dec
mov
inc
enter
hlt
xchg
pop
pop
out
add
cld
xchg
into
bound
je
or
inc
andw
or
or
add
sbb
movsb
leave
add
or
xor
lret
cmp
mov
imul
imul
stos
push
lods
and
movsb
pop
in
and
adc
add
push
movsb
or
test
scas
stos
lret
adc
icebp
fucomip
add
leave
push
push
mov
cmp
clc
std
aaa
popa
sub
or
shlb
push
cmpsb
inc
jmp
xor
imul
push
jl
int
cmp
dec
lock
inc
hlt
xor
and
rorl
dec
mov
or
ja
loopne
or
dec
div
push
rcrl
sbb
in
sub
sbb
into
adc
adc
hlt
pop
pop
xor
mov
or
or
cld
cmpsb
and
out
hlt
pushf
popl
sbb
adc
add
and
lea
mov
out
fisubrs
jp
push
add
mov
adc
clc
sarb
jo
out
mov
mov
jmp
pusha
mov
cmp
or
jp
push
mov
jbe
cmp
mov
into
ret
imul
fisttpl
sub
dec
push
in
adc
je
rorb
mov
icebp
pop
inc
or
movl
sub
add
push
pop
push
pop
lock
mov
push
push
das
inc
pusha
adc
out
lea
mov
popa
or
and
cmpl
push
cmp
or
fimull
and
or
jl
faddp
push
adcl
add
mov
aad
jg
push
loope
mov
cmpl
xorb
or
push
or
push
or
mov
mov
mov
mov
dec
or
decl
or
push
push
pop
pop
pop
pop
pop
cmp
or
out
mov
adc
add
ret
repnz
inc
push
ds
pop
mov
idivb
jg
cmpl
add
pusha
adc
dec
cmp
add
test
jno
in
rorl
xor
jl
rorb
push
push
mov
sbb
mov
adc
incl
aaa
mov
call
insl
andl
pop
add
cmp
mov
pop
cmp
push
push
xchg
jne
push
aas
out
cmp
pop
ja
mov
xor
push
lods
mov
cwtl
je
jge
lock
inc
xorl
incl
or
add
jmp
push
dec
rolb
cmpsl
pop
test
shld
pop
mov
jbe
cltd
push
push
cmpsl
int3
clc
mov
sub
sub
push
lods
andb
or
mov
ds
and
mov
add
or
pop
scas
enter
pop
mov
jne
push
and
adc
sub
mov
mov
icebp
inc
push
mov
lea
stos
cs
jne
lds
movsb
shrl
jb
mov
subb
mov
inc
je
xchg
mov
insb
mov
xchg
pop
jo
inc
insb
gs
sbb
push
lods
mov
ja
sub
mov
dec
mov
push
stos
jmp
push
mov
in
mov
cmp
mov
or
push
pop
andb
mov
shl
and
dec
push
jmp
adc
aaa
data16
in
or
add
or
das
mov
lret
add
xlat
sbb
or
mov
ljmp
pop
jmp
mov
add
mov
cmp
cmpsl
sbb
jb
lea
push
adc
push
pop
xchg
xor
mov
aas
jmp
push
pop
cmp
sbb
and
add
ret
movsl
out
jle
sub
push
mov
push
pop
nop
loopne,pn
jmp
icebp
mov
sbb
pushl
icebp
jl
es
fimuls
add
rclb
ret
js
aaa
mov
cmc
pop
jae
mov
f2xm1
jae
mov
add
cmp
jb
dec
adc
test
pop
lea
sub
lods
pop
sbbb
cmp
pop
lods
pop
fistps
or
out
pop
mov
push
push
xor
sbb
dec
stos
lods
mov
std
scas
push
inc
cs
cltd
in
out
je
mov
ljmp
cmpsl
shlb
mov
pop
inc
dec
xchg
sbb
or
push
stos
pop
and
mov
pop
dec
jno
mov
mov
loopne
test
push
cmp
mov
jb
xchg
out
repz
nop
or
sbb
push
clc
push
cmp
cmp
imul
add
cmp
ds
add
mov
jae
inc
fcmovb
xchg
or
and
test
add
loopne
or
je
mov
out
fbld
sub
je
push
or
add
les
adc
loope
cld
out
and
or
pushl
rolb
ret
mov
xchg
and
cmp
fistpll
xchg
sub
je
or
je
dec
je
jnp
or
sub
pop
and
xchg
xchg
push
mov
shrl
push
or
sbbb
loopne
xchg
rcr
cmp
jne
mov
addb
or
push
in
add
shrb
or
jne
mov
push
outsl
aam
inc
pusha
jne,pn
sbb
inc
fs
mov
add
sub
adc
jbe
or
sbb
jge
test
add
inc
adc
or
jmp
jmp
aaa
je
icebp
and
fs
call
addl
mov
insb
push
in
loopne
mov
add
xor
pusha
sub
adc
sub
and
adc
imul
or
inc
loop
adc
inc
sub
lds
xchg
mov
cmc
mov
push
sbb
sahf
repnz
sub
add
shlb
push
adc
filds
mov
mov
call
dec
adc
jmp
lret
xchg
mov
fmul
cmp
rcll
cmp
jge
pop
scas
or
xor
nop
add
push
in
xchg
mov
in
inc
sbb
std
adc
and
ret
push
jle
imul
gs
or
lret
repnz
lock
sbb
jne
shl
adc
test
and
or
out
fsubrs
arpl
lret
pop
sbb
clc
jb
data16
or
andb
stos
hlt
ret
jo
popa
jge
add
cwtl
imul
imul
push
icebp
je
mov
sub
push
or
jmp
jns
or
dec
jno
mov
push
loopne
push
cmp
loopne
pop
sahf
je
jg
sbb
or
adc
xlat
testb
fstpl
add
or
cmp
lock
or
inc
lods
insl
mov
adc
mov
xor
jg
ret
andl
or
je
mov
outsb
cmp
cmpsb
jne
inc
cmp
mov
adc
sahf
pop
shr
inc
add
adc
add
rcl
inc
jl
add
nop
ja
push
pop
mov
pop
mov
dec
dec
pop
add
mov
cmp
mov
jmp
lcall
icebp
mov
cmp
or
jne
je
mov
mov
inc
inc
cmp
je
int3
int3
mov
and
faddl
pop
mov
icebp
jmp
jecxz
sar
outsb
iret
decb
adc
dec
cwtl
adc
or
adc
sub
or
aad
push
push
jmp
mov
rcll
fisttpl
jp
inc
adc
imul
dec
sar
dec
outsb
out
jns
faddl
mov
pusha
sbb
push
sub
push
mov
pop
lods
sub
cmp
ret
cmpb
inc
loopne
push
add
dec
pop
repnz
dec
and
pop
or
movsb
and
add
jle
rolb
pop
add
scas
add
cld
pop
adc
in
and
aad
bound
jmp
lea
lret
sub
outsb
jb
and
cld
or
adc
das
addr16
xor
shll
ret
ret
es
xor
fstpt
pushf
add
stc
add
or
jne
mov
cli
sbb
ret
enter
mov
push
lods
movb
bound
dec
arpl
mov
mov
mov
or
dec
add
push
cmp
inc
adc
test
jne
cmp
mov
xor
add
aas
push
mov
cs
testb
scas
or
fsubrs
add
add
mov
and
les
mov
out
and
xor
mov
mov
mov
test
jne
mov
clc
cmp
add
lods
push
push
loope
inc
adc
cwtl
inc
adcb
adc
popa
jo
push
jns
popl
gs
sub
sub
sub
je
or
imul
add
adc
or
pop
mov
mov
push
add
sbb
push
inc
mov
mov
lods
imul
adc
outsl
test
sub
mov
mov
inc
dec
jne
lea
into
or
mov
mov
inc
dec
es
addr16
jecxz
sti
sbb
sub
xlat
aaa
cwtl
loopne
push
hlt
test
aam
inc
adc
mov
test
out
adc
inc
cmp
jb
mov
mov
movb
pop
mov
enter
enter
inc
push
lea
lock
add
jnp,pt
inc
fsubs
or
cwtl
enter
push
ja
out
push
dec
sbb
sub
push
cmp
dec
pop
mov
inc
add
pop
dec
add
adc
cmp
jbe
or
push
sbb
cmpsl
jmp
and
je
or
mov
pop
or
test
mov
xchg
xchg
mov
leave
sub
xorb
push
sub
and
mov
call
add
jmp
cmp
push
and
and
xor
push
inc
cmp
jb
mov
pop
sub
pushf
add
and
clc
mov
sbb
push
sarb
pop
mov
stos
and
mov
cli
mov
cmp
push
mov
push
mov
mov
pop
insb
push
je
subb
mov
hlt
xchg
sub
popa
and
sub
leave
add
add
pushl
enter
je
jmp
push
std
fwait
negb
fdivs
inc
jmp
sub
mov
lock
jmp
ja
mov
pop
ds
pop
pop
adc
aas
inc
push
mov
push
or
ret
push
push
cs
jge
push
ret
jne
mov
inc
out
add
lods
shll
test
mov
mov
xchg
cli
shlb
lock
out
pop
mov
mov
insl
imul
and
out
cmp
shlb
jp
popf
sub
lea
push
push
out
stos
call
cmp
mov
jae
jbe
lock
mov
test
mov
ret
inc
incl
clc
stc
bound
leave
xor
shlb
das
jmp
mov
sub
jge
pusha
loopne
mov
cmp
inc
cmp
clc
jbe
and
xor
sbb
data16
xor
add
jb
mov
std
push
push
pop
movl
push
mov
fdivr
mov
push
mov
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
outsb
mov
je
add
divb
sub
mov
pushl
xor
jo
mov
outsl
rorl
inc
dec
jne
mov
test
aam
in
or
jmp
cmp
scas
outsb
fld
cld
repnz
mov
in
adc
inc
inc
lds
push
xchg
fsubrl
cs
mov
mov
lret
or
sub
push
and
xchg
jle
dec
fadds
inc
add
cmpsl
add
and
adcl
das
inc
xor
insb
aas
cmpsb
scas
fldl
cmp
adc
andb
push
mov
out
add
dec
adc
add
pusha
shll
mov
mov
loopne
mov
rcl
clc
add
int3
mov
inc
shrb
mov
call
or
mov
add
dec
jmp
stos
xchg
int
ss
pushf
out
inc
insl
out
and
sbb
or
jg
jle
xor
fwait
addb
and
sti
imul
inc
xchg
push
mov
mov
cmp
add
adc
xor
add
sub
pop
pusha
xchg
and
pop
and
outsb
fldenv
push
aas
push
lret
cmpsl
jle
adc
cmp
orl
enter
jmp
jae
cwtl
mov
mov
adc
in
push
mov
test
dec
mov
inc
pop
jmp
stos
rol
jg
into
decl
js
jne
cmp
sbb
rolb
call
cmp
sub
sbb
jne
cmpsb
jg
jge
jl
adc
mov
test
sub
orb
cs
push
push
mov
sub
or
add
call
push
loop
add
lret
lock
enter
clc
jb
fwait
mov
and
in
xor
pushf
push
pop
and
and
dec
pop
pop
mov
sub
sub
jecxz
shr
and
lock
outsl
sar
or
inc
jmp
sub
add
loopne
add
xor
cltd
inc
ds
les
dec
fadds
lahf
js
es
sub
and
pop
imul
add
add
mov
int3
lea
dec
add
lret
movl
imul
mov
or
push
push
mov
sahf
jo
mov
mov
call
cmp
in
lock
cmp
repz
clc
clc
cld
cld
lea
in
add
add
sbb
out
fsubr
and
push
fildl
pop
sti
and
xor
push
inc
and
dec
scas
mov
into
jl
cld
or
sub
or
push
inc
neg
adc
add
sub
xchg
daa
stc
sub
jnp
gs
inc
pop
nop
fs
mov
mov
fcmovne
rcr
add
out
add
mov
mov
inc
push
fisubl
add
push
fmull
pop
add
outsl
bound
mov
or
jns
out
push
adc
and
xor
out
icebp
inc
inc
aaa
sbb
sbb
jns
out
adc
adc
or
jns
out
or
add
iret
jnp
and
pusha
or
js
dec
push
xchg
mov
push
add
add
outsl
pop
mov
sarl
pop
sub
ret
mov
pushl
jne
or
in
sbb
add
sti
cmp
jne
sub
fcoml
or
adc
jne
adc
sbb
shl
add
ret
xchg
data16
mov
cld
rcr
xchg
imulb
add
push
sahf
lret
mov
fdivrs
pusha
addl
xchg
mov
cld
push
je
cmp
es
dec
sti
push
rcrb
jne
sbb
sti
add
push
int3
xor
xor
mov
sbb
jno
aad
inc
sub
call
cmpsl
and
mov
addl
mov
aam
pop
cmp
lret
test
push
jne
push
and
aaa
out
push
lea
pop
out
xchg
lock
cld
or
or
cmp
call
sbb
pop
bound
dec
jne
lods
je
sbb
jg
xchg
je
lret
xlat
imul
sbb
mov
jp
in
sbb
pop
cmpl
jnp
cwtl
or
ret
adc
fsub
loopne
shll
cltd
or
adc
pop
xor
sbb
adcb
sub
das
js
sar
aaa
dec
xor
xor
divl
cmpsl
lock
cmp
xchg
sbb
push
pop
or
sahf
nop
inc
scas
pusha
add
je
subb
jo
and
or
call
lea
inc
loope
insb
mov
xchg
add
std
cmp
jmp
pop
daa
mov
movb
or
sbb
stos
sbb
pop
push
aad
and
cmp
dec
in
mov
hlt
push
imul
mov
push
or
scas
mov
add
or
push
push
cmc
adc
jb
pop
adc
add
sub
orb
adc
outsb
sub
adc
jns
add
shr
mov
imul
inc
push
lods
rcrb
clc
push
dec
scas
insl
jg
adc
jne
sbb
mov
mov
mov
or
mov
mov
ret
je
cli
add
cmp
jbe
push
xor
jle
or
push
and
pushl
mov
shr
lea
not
and
decb
jne
add
sbb
sbb
mov
in
lea
xor
adc
add
cld
add
jecxz
in
hlt
mov
push
or
or
cmpl
clc
and
pop
hlt
xor
stos
dec
jne
and
sti
add
mov
mov
pop
cmp
jbe
mov
mov
imul
andb
cmp
aaa
add
scas
jno
jno
cmp
cmp
and
out
not
and
add
aaa
sub
jmp
lea
das
mov
xor
push
jle
pop
dec
add
shlb
mov
jmp
mov
test
fimuls
test
cld
out
pop
lock
mov
pop
or
cmpsb
sarb
mov
sar
cmp
inc
mov
jge
jle
js
loope
xchg
cmpsl
push
or
pop
sbb
inc
dec
or
jmp
dec
adc
push
mov
inc
cli
inc
mov
add
mov
mov
cmp
jecxz
je
add
test
push
adc
push
add
loop
inc
adc
and
loope
add
scas
jp
push
call
aas
cmp
mov
push
or
andl
add
decb
adc
sub
add
and
shr
orb
and
jl
leave
jecxz
add
enter
mov
lea
outsl
push
or
mov
test
add
or
mov
jg
mov
aam
xor
mov
add
imul
and
pusha
adc
test
call
or
gs
cmp
mov
cmc
negb
les
or
mov
je
push
xchg
and
dec
lcall
insl
pop
or
pushl
push
fucomi
fwait
orl
mov
incl
xor
add
loope
scas
test
xor
call
rolb
mov
imul
xchg
mov
add
adc
dec
jne
add
sti
sahf
adc
cmp
repnz
add
mov
push
dec
clc
jb
xchg
add
cli
int3
cld
ja
ret
jg
iret
shr
lea
inc
orl
orl
lock
push
out
sub
fnstsw
inc
cld
lock
call
dec
jne
movsl
test
push
and
shlb
dec
rorl
sahf
inc
pop
mov
pop
iret
mov
mov
jge
das
push
in
test
push
mov
jne
or
roll
mov
ljmp
xchg
pop
mov
xchg
or
outsb
dec
cmp
jge
xlat
sub
add
shr
push
add
xor
cld
and
dec
cmp
pop
mov
and
lods
and
push
jle
testb
test
fsts
stc
shll
cmp
push
push
xchg
pop
mov
pop
mov
inc
cmp
add
xbegin
fiaddl
es
add
cmp
fimuls
sub
mov
add
cs
jg
jns
and
into
add
gs
add
or
roll
xchg
sar
dec
cmp
mov
cld
aad
int3
pop
xchg
lea
clc
pop
jg
or
sbbb
pop
repz
rcll
adc
pop
push
inc
sub
adc
jo
jmp
add
jmp
aaa
jo
xchg
push
test
adc
cld
insb
xor
pop
lea
adc
cld
mov
pushf
mov
data16
clc
js
dec
cmp
lgs
ret
lea
mov
dec
xor
mov
cld
push
sar
dec
cmp
xor
mov
pusha
andl
fisubs
cmp
dec
mov
in
cwtl
dec
je
push
mov
ret
fisttps
cltd
dec
push
inc
pop
sbb
fbstp
cmp
dec
adc
out
sbb
mov
adc
dec
lea
mov
outsb
sub
jns
jbe
sahf
xchg
stos
lods
push
bswap
lret
incb
bswap
mov
out
cmp
cmovnp
jns
dec
push
ss
mov
mov
inc
mov
mov
adc
push
inc
sub
xor
push
dec
or
int
push
push
jge
or
shr
cmp
or
xor
clc
pop
mov
jecxz
jmp
mov
clc
mov
and
decb
xlat
jne
add
cmp
cli
or
xchg
add
fimuls
inc
fnstenv
xchg
fnstenv
jmp
or
sub
testb
push
lock
or
arpl
adc
dec
popf
sarb
sub
jo
loope
jno
xchg
fadds
mov
cmp
mov
in
sbb
cli
fidivs
fdiv
ret
mov
dec
pop
iret
jne
push
insl
dec
mov
dec
popa
and
pushl
xchg
subb
out
out
clc
insl
out
mov
mov
and
jne
mov
push
pop
outsb
js
or
leave
inc
push
pushf
mov
sub
push
and
icebp
cmp
pop
sub
mov
sub
dec
jb
sbb
int3
iret
dec
testb
inc
hlt
cmp
lret
pop
mov
mov
pcmpeqw
in
in
or
sub
pushf
xor
jbe
mov
pop
cmp
jge
pop
dec
bound
dec
push
and
inc
clc
into
sub
jns
enter
jp
dec
js
imul
or
pause
mov
das
pop
das
or
mov
add
icebp
out
or
inc
jp
or
pop
inc
or
cmp
mov
mov
dec
ja
outsb
or
js
nop
scas
sahf
aad
shrl
xchg
mov
push
jne,pt
cmp
pop
push
xchg
mov
mov
inc
add
es
sub
cmp
or
je
jno
and
push
loop
int3
jbe
inc
pop
inc
add
mov
call
xchg
mov
and
movsl
pushf
sbb
or
dec
sbb
inc
mov
test
cmpsb
jg
cmp
push
add
mov
inc
lret
cli
add
xor
flds
add
shll
xchg
jmp
enter
or
cmp
push
rep
sbb
in
mov
dec
ljmp
std
mov
adc
clc
lock
xchg
sarb
imul
add
test
cmp
push
push
movsb
adc
or
xor
xor
jne
ss
cmp
adc
sub
rcr
jae
or
or
dec
push
lret
popa
dec
add
pop
in
sub
cmpl
xorl
adc
push
sub
ret
push
push
mov
rorb
mov
shll
jmp
xor
add
push
pop
adc
dec
cmp
ja
sbb
inc
cmp
jp
leave
adc
sub
pop
ja
fisttpl
or
inc
mov
or
jo
dec
mov
push
lret
add
pop
clc
pop
shr
inc
and
add
and
and
bound
cmp
fdivr
cmp
add
lods
clc
fistpll
pop
mov
push
xor
pop
div
mov
aas
or
cli
add
repnz
sbb
les
sbb
test
sbb
xor
andl
fdivp
aaa
rcrb
mov
fbstp
push
xlat
aam
and
cmp
add
addr16
xchg
loop
shll
pop
testl
sbb
imul
dec
adc
pusha
jnp
pop
sbb
dec
mov
dec
push
cltd
jnp
cmp
push
pop
or
push
cmp
je
movl
leave
adc
xorl
jp
inc
pop
push
fcoms
or
test
push
push
add
jmp
insb
insb
shlb
adc
xchg
sbb
bound
adc
inc
dec
or
dec
jno
cmp
inc
orl
push
int3
push
dec
ficoms
mov
in
subl
xor
fstpt
addr16
cmp
insl
push
sbb
push
fcompl
hlt
je
sahf
in
popa
js
ret
push
sub
mul
mov
dec
ljmp
enter
cld
pop
cld
cmp
je
movl
addr16
call
fsubs
outsl
xchg
sbb
hlt
jecxz
popa
xor
and
lock
ds
inc
and
or
pop
neg
sbb
and
jl
mov
xchg
push
jecxz
add
in
xchg
adc
sbb
divl
or
inc
sbb
add
lea
mov
nop
sbb
xor
add
sbb
and
xlat
or
and
push
sbb
jno
loope
push
cwtl
aad
mov
es
or
jne
fmulp
inc
push
int
jb
stos
push
ret
sbb
out
add
in
iret
add
add
add
movsl
xor
gs
sbb
adc
xor
or
stos
add
jmp
adc
jg
xor
inc
and
ds
mov
or
jmp
in
jno
xor
push
inc
xor
aam
lock
loope
lea
jmp
sbb
push
xchg
mov
xchg
sbb
push
mov
xchg
inc
cmp
faddl
sbbb
adc
cltd
inc
cmp
cld
faddl
sbb
pushf
push
or
hlt
push
in
adc
or
and
les
pop
dec
bound
popa
adc
mov
gs
js
fbstp
push
les
dec
mov
jae
inc
loop
sbb
lahf
dec
call
cmp
pop
pop
mov
or
pop
mov
dec
jmp
mov
jmp
loop
and
bound
push
fistps
push
push
insb
outsb
sbb
jne
loop
nop
inc
clc
and
push
push
rcl
pop
mov
pusha
lock
je
gs
mov
lock
jmp
fisttpll
cmc
or
inc
pop
add
xor
popa
nop
loopne
iretw
jbe
push
pop
xor
div
test
sbb
jne
gs
jg
inc
jnp
push
test
scas
xchg
imul
xchg
notl
mov
cmp
imul
cmp
loopne
aaa
fcomi
aad
dec
mov
mov
inc
mov
cmp
xor
push
jae
jne
push
lock
dec
cmp
sbb
pop
fwait
jo
jle
nop
loopne
or
adc
test
test
pop
mov
or
mov
outsl
cmpsb
add
cmp
testl
leave
in
push
ja
loope
or
adc
and
stos
cli
xchg
xchg
inc
fadd
popa
xor
inc
mov
rcrl
or
sahf
out
dec
push
push
gs
pop
dec
and
add
xchg
xor
inc
cld
dec
mov
sbb
add
and
lahf
pushf
jnp
lods
out
adc
jne
es
push
shrl
push
hlt
pop
inc
jns
add
loopne
jmp
fcompl
sbb
xor
add
cmp
stos
stos
adc
xchg
add
jo
lret
mov
xchg
sub
push
sub
and
shll
insl
push
jmp
ja
mov
dec
orl
push
jmp
mov
push
das
push
rcrb
pop
sbb
icebp
push
lods
cmpsb
push
sbb
and
xchg
add
push
imul
and
rcr
and
jmp
fwait
add
movq
push
dec
adc
push
and
xor
push
dec
and
push
jg
idiv
jl
outsl
inc
or
jbe
jle
xor
jl
addr16
jg
jg
jo
mov
pop
dec
loopne
lea
mov
add
or
cmp
cltd
mov
or
fdivr
into
xor
sub
and
or
sub
mov
or
push
jae
ljmp
into
jg,pt
dec
call
sub
out
push
movsl
sub
sub
ja
imul
sub
mov
add
sub
clc
in
sbb
rep
push
jmp
bound
scas
sbb
xchg
in
in
lcall
jp
in
sub
or
sub
push
push
ret
sbb
out
xchg
mov
add
pop
cmc
test
std
dec
test
mov
cmp
xchg
mulb
test
push
or
adc
dec
dec
outsb
mov
sbb
sub
dec
dec
dec
xor
cmp
cmpsb
push
dec
cmp
inc
and
in
in
inc
cmovs
mov
add
cmp
fs
cmp
je
jl
and
jge
sbb
mov
dec
xor
leave
cwtl
pushf
mov
and
push
sub
lcall
push
dec
mov
lret
mov
shll
call
imul
sbbb
test
adc
dec
xor
sub
sub
and
test
xor
js
dec
xor
push
jge
inc
xchg
insl
add
add
jb
jg
sub
add
stos
add
jmp
push
jo
in
cmp
cmpsb
stc
xor
mov
pop
daa
pusha
imul
lahf
mov
test
cmpl
lea
xchg
add
mov
scas
repnz
in
addr16
aas
push
sbb
sub
push
clc
addr16
test
test
iret
repz
push
dec
add
repz
cmp
mov
push
jmp
mov
mov
lret
and
imul
pop
nop
xor
pop
push
subb
or
push
pop
mov
mov
push
faddl
in
jnp
out
hlt
cld
add
pop
push
mov
bound
ds
or
push
dec
pop
push
add
or
xchg
add
stos
and
or
dec
out
shr
je
ret
nop
jno
adc
and
push
test
mov
cmp
pop
sbb
add
ret
or
push
jg
and
or
adc
lret
jno
sub
inc
push
add
inc
dec
jo
push
mov
rol
rep
jb
neg
inc
or
cmp
lock
imull
jp
rclb
add
enter
movsb
xchg
sbb
call
jnp
lea
mov
ja
push
sub
shll
nop
test
in
pop
adc
jg
mov
mov
movb
pop
jmp
xor
push
clc
fimull
pop
add
inc
xchg
scas
jo
add
mov
push
push
pushf
lea
add
sbb
add
lock
sbb
in
push
and
cmpb
in
lods
add
pop
xchg
add
fcomps
mov
rcrl
jecxz,pt
or
out
dec
sub
inc
movsl
imul
int
pop
out
sub
jo
adc
je
lock
or
add
add
add
or
pop
jmp
gs
cwtl
cmp
fdivs
inc
or
inc
fsubrl
and
aam
push
rcrb
dec
int3
xor
add
je
cmp
in
mov
in
je
cmpl
mov
push
add
inc
rcrb
movl
push
cmp
jg
pop
inc
sbb
std
cmp
jle
cmp
ss
scas
push
inc
ds
je
sub
add
lods
xchg
mov
push
ret
pop
pop
das
mov
iret
out
in
in
fdivs
call
lods
in
push
jne
or
push
popf
pop
jg
int3
jae
or
adc
jbe
jnp
cmp
jp
jmp
lcall
and
insb
dec
pop
shlb
mov
je
push
adc
sub
jge
je
inc
push
dec
sub
push
jp
ret
mov
addl
mov
dec
mov
cli
lea
dec
sbb
xchg
xchg
xor
test
mov
sub
mov
and
push
inc
gs
je
cmp
sbbb
sub
jne
cltd
xchg
in
inc
add
inc
test
mov
xor
mov
pushf
pop
sub
je
push
popf
outsb
mov
rorb
pop
xchg
and
data16
pop
divl
je
mov
or
inc
mov
cld
repnz
xor
int
or
outsl
test
or
and
insl
pop
or
popa
mov
pop
add
shlb
enter
cmp
jl
enter
inc
xchg
js
pop
or
and
sub
or
jmp
sub
pop
jge
xor
sub
pop
add
and
mov
add
popf
hlt
outsb
inc
push
cld
shlb
adc
or
jl
outsl
ljmp
lods
push
mov
cli
and
hlt
sti
jle
cmpl
push
in
push
les
xor
inc
jl
xorl
xchg
fnsave
add
inc
and
stos
cmp
pop
inc
jmp
cmp
jne
addl
jmp
pop
fstl
sub
sub
test
push
test
and
aaa
ss
mov
dec
or
repnz
jg
mov
cmp
je
cmp
and
out
fsubrl
adc
add
das
sub
add
lds
dec
xorb
mov
adc
test
or
pop
sahf
or
mov
jmp
dec
add
lret
addb
in
sti
jmp
sub
add
and
adc
sbb
lock
sub
sahf
cmp
jbe
sbb
dec
cmp
sbb
or
xlat
enter
in
jge
ss
pop
add
scas
pop
adc
loop
aas
jp
cld
out
mov
jne
test
ds
push
add
addl
clc
pop
les
jne
jbe
cmp
mov
jl
adc
call
mov
and
movb
mov
test
jge
jmp
inc
xor
pop
pop
adc
roll
rclb
stos
cwtl
push
jne
push
jecxz
push
int
ja
pop
ret
pop
rcrl
ret
or
je
sarb
mov
mov
mov
inc
es
lret
call
in
cmp
jb
cmp
ja
add
sarb
out
adc
cmp
jne
shrl
xor
xor
adc
mov
neg
fstl
xor
pop
add
shl
sub
or
mov
adc
or
mov
dec
pop
rcr
je
mov
mull
lsl
popf
jns
shr
inc
push
pop
push
push
inc
shr
rcr
shr
rcr
ss
pop
jne
div
pop
dec
adc
inc
mul
idiv
fstpl
push
cmp
or
cmp
or
xor
and
or
fistl
or
fcmovb
sbb
inc
mov
ror
lret
pop
ret
fcmovb
lods
aas
leave
xor
xor
mov
loope
push
or
neg
pop
dec
in
adc
add
pop
jge
lea
insl
and
inc
lcall
add
rcrb
je
push
iret
int
xor
or
push
pop
shlb
cmp
outsl
jp
or
mov
push
adc
fnstsw
outsb
mov
stc
xor
add
inc
test
xor
mov
mov
jne
and
aam
push
add
and
or
cld
mov
ss
out
mov
out
and
lcall
jmp
pop
addr16
pop
sbb
add
or
and
subb
add
and
xor
mov
shl
ficomps
inc
outsl
outsb
incl
jb
js
je
jb
arpl
jae
insl
jae
gs
inc
sti
ljmp
jb
outsb
je
insl
and
cmp
or
cld
push
dec
dec
push
push
and
inc
std
xor
dec
add
inc
and
push
xor
xor
mov
mov
popa
jo
insb
imul
popa
jae
insl
popa
fs
mov
mov
gs
jo
and
insb
outsl
es
push
lock
popa
mull
popa
jb
and
cs
int
mov
jns
or
xorb
outsb
je
into
insb
mov
mov
jne
pop
xor
insl
and
insl
test
adc
outsb
es
lock
cs
aas
xor
outsl
or
dec
shlb
push
jo
xchg
insl
les
out
insl
idivl
fs
xchg
and
jbe
dec
mov
mov
popa
add
or
sarb
and
jne
push
and
je
loopne
adcl
jae,pt
add
imul
pop
test
lcall
insb
fcoms
sbb
decb
das
add
inc
lock
cmp
arpl
shll
mov
jge
clc
add
inc
xchg
dec
popa
imul
out
xor
int3
or
sub
sbb
push
lcall
ret
in
popa
pop
xor
add
mull
push
push
mov
sbb
cmpsb
cmp
sbbb
xor
shll
pop
add
add
add
add
dec
pop
adc
ja
outsl
outsl
ss
jl
jae
fs
jo
cli
jbe
add
inc
inc
mov
mov
cmp
and
mov
mov
lds
call
jle
outsl
push
or
arpl
jmp
lcall
xchg
push
inc
aaa
adc
push
mov
or
das
mov
dec
imul
mov
stos
jmp
shlb
push
aas
push
push
leave
nop
and
lds
shrb
call
push
cltd
cmp
xorl
or
insb
popa
and
and
pop
pop
adcb
push
cmp
addr16
popf
mov
xor
fdivl
andb
pusha
sbb
je
test
call
dec
jb
subl
push
imul
xchg
add
pop
dec
jmp
in
push
lods
fldl
add
pop
sub
inc
dec
imul
outsb
ds
gs
dec
and
imul
dec
cmp
js
push
addl
je
inc
outsb
inc
push
push
lret
jg
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
gs
js
shlb
insb
jae
push
rcpps
push
jnp
in
cmp
inc
inc
insb
cmp
out
adc
add
mov
je
inc
popa
outsl
mov
call
outsl
push
pop
imul
fldl
xlat
fsubrs
add
notl
cmpsb
push
je
dec
lds
push
dec
bound
dec
mov
loopne
cwtl
addr16
sbb
jbe
ficompl
daa
pop
lea
add
mulb
outsl
js
push
push
loopne
add
add
incl
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
mov
daa
sub
sub
sub
cs
loopne
xor
cmp
cmp
ds
fwait
cli
incl
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
mov
pop
pop
pop
pop
pop
pop
pop
pop
pusha
xor
incw
push
insb
insl
inc
jo
jb
jne
ja
jns
jnp
and
add
jge
jg
in
or
xchg
and
dec
add
test
xchg
add
mov
add
xchg
and
mov
push
add
add
sbb
add
mov
ja
dec
pop
stos
incl
adc
push
add
pop
mov
pusha
inc
shr
and
jmp
addl
mov
call
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
pushl
mov
mov
mov
mov
ret
enter
int3
int
iret
call
rcl
rcl
aad
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
stos
add
push
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
push
mov
adc
and
push
inc
add
test
test
jmp
add
mov
decl
jmp
insl
insl
cmp
add
in
jne
and
adc
add
das
das
movsb
les
adc
push
dec
push
inc
pop
inc
outsb
dec
mov
push
push
dec
outsl
jbe
testb
ficoml
sub
addr16
in
fstpl
push
dec
jne
xchg
outsb
gs
data16
cld
repz
imul
bound
push
inc
out
mov
into
mov
jae
cmp
jg
int3
frstor
mov
xor
std
adc
jae
push
gs
sbb
insl
mov
outsb
and
jbe
out
pop
dec
inc
ds
adc
jo
ja
xor
dec
pop
pop
add
xor
and
cmp
sbb
dec
pop
data16
outsb
ret
nop
loope
xor
movsb
xorb
pop
sub
add
adc
adc
inc
add
psubusb
mov
int
push
jbe
aas
xorb
ss
data16
pop
clc
adc
xchg
dec
enter
fstl
shl
mov
in
movsbl
aas
mov
and
cwtl
and
cmp
test
sub
pop
and
dec
insl
dec
push
das
into
push
das
dec
enter
xor
mov
in
test
sub
stc
ss
add
ss
inc
cmp
jbe
addb
inc
aas
mov
loop
dec
dec
dec
pop
mov
movsb
pop
addr16
int3
popa
ret
and
jle
sbb
call
sbb
xor
add
ror
add
ror
or
pop
sti
lcall
sub
xor
sub
and
push
rcr
in
incl
rol
sub
stos
inc
cmp
test
pushl
push
je
lcall
xchg
pop
aaa
push
ret
fistpll
push
ret
ret
pusha
and
pusha
in
pushf
es
add
fdivrl
imul
test
call
and
xchg
dec
outsl
andl
sub
mov
xchg
call
push
sbb
pop
movsl
dec
sbb
mov
inc
mov
fidivrs
xchg
aam
stos
and
andl
or
pop
add
jmp
inc
in
mov
xchg
lds
dec
outsb
mov
or
sti
int
imul
add
ljmp
mov
pusha
dec
add
inc
jns
inc
or
in
rorl
jo
jg
or
das
or
adc
dec
pop
repz
in
dec
rclb
ret
jne
pop
or
andl
pop
and
cs
out
and
push
or
in
add
ror
xor
xchg
mov
cld
mov
loop
mov
call
int3
sub
jo
and
mov
sar
inc
divb
pop
dec
xchg
mov
lcall
xor
or
cli
insb
sub
adc
pop
adc
movsl
adc
xchg
loope
pushl
mov
sub
iret
jecxz
roll
aaa
sub
pushl
inc
mov
xor
stc
loop
push
out
mov
pusha
inc
sti
bound
dec
les
or
push
mov
sub
mov
scas
mov
jg
inc
lcall
and
lods
in
lods
pop
pop
aas
and
mov
cmp
lfs
mov
aaa
and
lcall
mov
scas
arpl
outsb
adc
inc
lods
pxor
scas
pop
mov
inc
mov
cli
adc
gs
outsl
ja
mov
and
mov
je
lods
mov
call
dec
sub
add
sahf
jns
sahf
movsb
outsl
push
cmpsb
iret
loopne
outsl
pop
mov
jbe
in
pop
mov
iret
gs
divl
dec
push
mov
jg
popa
jg
xchg
push
dec
jmp
data16
mov
imul
test
roll
pusha
ss
xor
inc
or
fldenv
lea
nop
adc
mov
adc
cmpl
daa
ret
mov
aaa
inc
cmpsl
pop
lods
sub
call
jle
inc
aad
jp
jnp
dec
xchg
inc
pop
dec
sbb
push
pusha
push
lods
xchg
jecxz
vpcmpgtw
int3
sub
clc
mov
dec
or
sbb
pop
fisubs
or
scas
pop
jg
mov
adc
hlt
jbe
sahf
ljmp
add
cltd
inc
jg
incl
and
push
orb
je
jecxz
lcall
inc
fiaddl
xor
push
push
xrelease
pop
lret
iret
in
cmp
mov
jg
and
pop
movsb
pop
dec
and
pop
jnp
fwait
sub
mov
jns
jo
pushl
mov
dec
pop
fldl
cmc
icebp
xchg
dec
push
mov
pop
fbld
dec
xchg
std
sbbb
ret
shll
xor
xchg
outsl
sbb
orb
call
jb
xchg
int
sarb
jge
aaa
fsubl
mov
into
sbb
lcall
cmpsb
dec
mov
pop
xchg
out
gs
add
addr16
jmp
sub
and
adc
xor
jle
fnstsw
xor
lcall
add
jle
push
scas
insb
jl
cmp
lret
jae
push
mov
lods
test
call
xor
roll
push
mov
push
adc
rcll
mov
outsl
les
adc
cmp
cmp
sub
rol
adc
jo
pop
sbb
push
ficomps
in
cld
push
add
adc
push
repnz
ljmp
mov
jns
mov
jno
std
adc
das
ljmp
push
shr
enter
call
cli
sub
sti
mov
ds
es
pop
push
les
andl
jmp
es
out
ss
cmp
scas
ret
ret
sbb
inc
adc
jnp
xchg
call
adc
dec
pop
addr16
ljmp
adc
outsl
push
jecxz
lcall
inc
int3
jne
lcall
xchg
push
fsubl
popa
dec
mov
pop
jnp
pop
xor
or
jmp
jno
decl
mov
sub
sti
test
mov
pop
mov
cld
test
xchg
das
cli
pop
addb
mov
insl
pop
inc
xchg
lods
sbb
jecxz
call
dec
adc
mov
dec
jp
jbe
inc
daa
cltd
or
out
and
sbb
rclb
push
mov
push
and
fisubrs
dec
divb
sub
lods
pop
push
idiv
jg
lcall
jbe
sub
inc
inc
cli
jmp
xor
inc
cmpsl
mov
ljmp
ret
xchg
xor
movsb
dec
fisttpll
movsw
xchg
repnz
pushl
jmp
imul
ret
inc
imul
sbb
mov
add
push
repz
jbe
decl
push
cmpsl
mov
ficoms
enter
cmpsb
inc
enter
shlb
cmp
inc
xchg
dec
fistpll
fcomip
cli
dec
out
adc
movsb
sbb
push
cmp
add
jl
xchg
or
xor
pop
loopne
xor
std
insb
dec
mov
mov
push
cltd
sub
cmp
xchg
dec
fisttpl
xchg
lods
jl
and
outsb
in
mov
fbstp
fwait
aam
sbbb
scas
pop
adc
cmp
sti
data16
int3
pop
inc
add
xor
fdivr
fwait
incl
inc
cmp
adc
adc
cmpb
in
sbb
jg
inc
mov
fidivrl
cmp
incl
iret
fimull
sar
mov
in
cmp
cmp
sbb
shrb
pop
in
call
xchg
mov
ret
push
sub
cmp
mov
std
sti
scas
pop
leave
dec
mov
cmpsb
mov
jmp
cmp
lock
push
mov
adc
decl
pop
xchg
ss
push
push
and
and
out
push
test
push
enter
insl
outsb
movsl
ja
stos
jg
lcall
test
xchg
jg
fs
add
lds
out
and
inc
pushf
scas
decl
lock
xor
fs
pop
mov
inc
ss
mov
clc
inc
jnp
ljmp
rolb
hlt
cmp
jp
inc
pusha
das
dec
rcll
inc
or
lds
les
pop
push
subb
out
jmp
xchg
xorl
ljmp
shr
loop
xor
shlb
cli
xor
push
lods
icebp
cltd
inc
cmc
insb
call
data16
pushf
mov
mov
sbb
leave
iret
fwait
stc
push
inc
dec
sub
aaa
push
jns
jb
mov
hlt
addr16
pop
mov
dec
dec
bound
or
cmp
test
loop
cmc
jl
push
cli
lcall
push
insb
mov
lahf
icebp
pop
aad
or
in
inc
jmp
mov
call
pop
into
cmpsl
pop
xchg
mov
cs
testb
jne
lcall
test
pushf
enter
pop
push
loop
lds
push
cmp
sbb
push
jg
cltd
lret
inc
mov
mov
setl
idivl
fwait
mov
xchg
lods
sarl
incl
lods
mov
mov
ds
cmpsb
mov
fwait
or
std
xor
nop
push
dec
mov
jecxz
xchg
imul
cmpsl
dec
inc
adc
sub
vcomisd
pusha
inc
mov
mov
ljmp
fsub
stos
pushl
shl
and
adc
aam
add
sub
jp
dec
mov
ret
xchg
jae
out
jmp
test
and
mov
fs
push
mov
xchg
pop
fwait
or
pop
addr16
pusha
xchg
sub
or
jp
mov
push
faddp
bound
aam
leave
ds
mov
fdiv
mov
mov
push
adc
call
dec
cmp
and
inc
pop
xor
and
jecxz
das
xlat
les
clc
jle
jge
stos
cmp
cltd
fldl
and
fstpt
jae
insb
jno
pushl
dec
shl
pop
push
xchg
mov
xchg
xor
int3
sbb
dec
cmp
ljmp
push
or
pop
or
insl
out
shll
in
lods
arpl
xor
leave
lcall
jp
cltd
cmp
rcl
mov
movsl
aam
dec
xchg
xchg
fdivr
pop
and
incl
xchg
xchg
in
xchg
mov
enter
and
mov
pop
push
sbb
jmp
xor
push
push
pop
sti
xchg
mov
and
dec
push
rclb
loop
lret
icebp
adc
jl
decl
idivb
cmp
and
sarb
mov
xchg
popa
loope
in
lret
jne
inc
fldl
call
pop
cmp
lea
jbe
sub
lock
jbe
or
xchg
xor
jg
jl
inc
les
xor
popl
push
int3
or
or
lcall
repnz
into
loop
push
push
pop
jno
pop
mov
jge
mov
mov
add
cmpsb
incl
mov
lock
xchg
rol
gs
cwtl
dec
or
ljmp
pop
mov
sti
sbb
and
lcall
ljmp
push
push
nop
dec
je
mov
out
vcvtdq2pd
cli
dec
fs
pushl
mov
cli
push
cmp
fiadds
xchg
cmp
jae
mov
out
cli
sbb
mov
inc
decl
enter
inc
or
mov
sbb
popa
or
popa
pushf
or
xor
scas
push
pop
xchg
push
loop
xchg
movl
push
mov
aam
push
shl
ja
ds
lcall
jno
pushl
cld
jg
push
js
mov
sub
fisttpl
pop
aad
mov
cli
jmp
or
test
fstpl
loopne
cwtl
fstpl
sti
and
cmpb
out
jb
fiaddl
xor
hlt
cltd
jmp
popa
shlb
fmuls
inc
sub
jne
adc
incl
add
mov
jge
xor
decb
mov
and
out
in
jmp
push
movsl
decl
fcompl
sub
and
movsl
mov
lcall
add
add
stos
data16
movsl
scas
sahf
sti
imul
pop
movsl
pop
dec
cmp
pushl
jno
icebp
lods
jae
pop
jno
and
aad
addr16
inc
push
sub
jo
ficoml
mov
sub
stc
fildl
xor
xor
pop
dec
push
mov
adc
inc
adc
addr16
test
icebp
aam
imulb
jno
xor
jg
stos
insl
clc
lret
cmp
aaa
mov
jns
xchg
clc
insb
scas
das
ret
push
xor
pop
fldl
decl
ljmp
out
or
or
adc
lods
outsl
iret
hlt
stos
mov
clc
xlat
xchg
call
pop
movsb
lcall
gs
jle
incl
aas
and
xor
imulb
roll
cmc
mov
ss
xor
adc
or
jl
push
arpl
rorl
mov
icebp
out
dec
movsl
fsubrs
scas
fs
je
addb
or
xor
cmpsl
sar
call
push
cld
inc
pushf
sbb
fwait
lahf
pop
scas
sbb
xchg
or
jbe
cmpsl
pop
shl
jg
dec
popf
adc
jae
push
fbstp
call
jmp
test
push
mov
jl
rorb
frstor
ljmp
daa
cmp
iret
jmp
fwait
sti
jb
cmp
mov
rolb
pushl
sbb
jp
jmp
mov
xlat
pop
mov
cmp
sbb
cs
decl
sub
adc
loop
cmc
jns
fnstcw
test
cmc
sub
or
ljmp
push
es
enter
or
mov
int3
mov
push
imul
sub
out
jae
dec
sarl
inc
mov
mov
stos
out
movsl
repnz
jae
subl
dec
lea
pop
xor
xor
aas
dec
loop
out
fdiv
or
jmp
jle
ret
jb
shll
pop
icebp
cld
daa
movsl
int
inc
movsb
push
ret
ret
and
scas
mov
dec
sbb
clc
sbb
dec
jns
scas
add
outsl
pop
inc
dec
push
push
int
mov
mov
ljmp
sbb
push
mov
repnz
fldt
cmp
mov
subl
xor
jge
jne
addr16
xchg
call
repnz
xchg
mov
xchg
pop
call
imul
lods
cs
jecxz
dec
ss
out
jne
adc
or
and
xor
lahf
or
xor
jo
pop
push
test
stos
dec
decl
push
xchg
mov
mov
hlt
sbb
xor
call
ljmp
and
andb
inc
clc
pop
int
ljmp
mov
loopne
and
bound
xor
loope
pushl
pop
sub
add
scas
rcll
xchg
in
cld
repz
push
inc
sub
sub
sahf
push
mov
scas
jl
xor
jmp
movsb
mov
sbb
sbb
mov
mov
es
test
daa
fsts
xor
lcall
or
xchg
push
and
sub
sarl
add
sub
jecxz
fadds
mov
mov
into
aad
cltd
dec
lahf
aam
mov
inc
adc
mov
clc
jg
repnz
mov
mov
cmpl
cmp
xchg
call
std
adc
or
sub
xchg
jp
lldt
and
loop
enter
fmull
fs
mov
test
cmp
jnp
jmp
movsl
out
mov
stc
into
pop
in
inc
loopne
inc
in
mov
xor
imul
stc
rep
xchg
add
jmp
stos
add
sub
adc
stos
cmc
push
mov
xor
pop
mov
fs
pop
in
repz
add
add
fnstenv
shlb
cmpsb
and
mov
jmp
ret
call
les
inc
enter
lret
je
gs
mov
mov
push
inc
ljmp
sub
dec
lods
jl
aas
jo
aas
jg
fisubrl
dec
imul
mov
pushl
xchg
out
push
lahf
ret
popf
jb
shl
lahf
aaa
outsb
xor
daa
push
and
mov
loopne
sub
std
cwtl
jo
push
and
icebp
ds
pop
cmp
push
loope
jg
sbb
iret
imul
sub
lahf
das
cmp
lea
sub
add
push
push
or
les
pop
inc
aad
and
mov
xor
cwtl
dec
cmpxchg
icebp
mov
sub
mov
icebp
ljmp
rclb
out
inc
jb
pop
pop
out
sahf
pop
jnp
xlat
mov
call
rcrb
aam
and
push
xlat
mov
sub
jb
mov
stc
jns
lds
test
sahf
lods
push
mov
insl
push
lods
cmp
rclb
cmp
in
call
ss
cltd
lretw
pop
pop
pop
dec
fwait
in
icebp
mov
mov
pushf
in
mov
outsb
dec
jae
add
push
mov
adc
call
loopne
shr
sbb
lahf
xlat
out
addl
ljmp
movsb
std
fstpt
je
mov
cmc
loop
rol
fdivl
dec
movsl
xchg
mov
pop
pop
inc
dec
add
cmp
lahf
lods
das
jnp
aaa
rcr
rol
movsl
pop
repnz
and
mov
add
test
xor
add
pop
cld
inc
mov
stos
shl
cs
and
or
xchg
dec
pcmpgtb
lcall
dec
or
cmp
repz
sub
xchg
rorl
push
mov
mov
shll
mov
mov
jg
call
xchg
subb
jle
aam
push
aas
mov
pop
jp
ret
cmpsb
outsl
pushl
xchg
adc
xor
js
ljmp
mov
rep
test
pushl
sbb
rep
or
inc
ss
pop
jmp
xor
jmp
fcoml
divb
xor
adc
call
mov
aad
repz
sub
jns
cld
jo
push
push
mov
stos
ljmp
out
mov
xor
dec
stos
ficoml
outsb
mov
js
lcall
xlat
push
xchg
lcall
jmp
fdivr
lds
decl
adc
fldenv
bound
fiadds
out
sbb
dec
dec
mov
in
ret
stc
es
testb
jp
test
cmp
jle
decl
jns
frstor
sbb
push
aas
leave
mov
dec
scas
mov
pop
mov
ljmp
cwtl
into
stos
jae
jg
daa
cmp
mov
ret
sbb
stc
xor
loop
xlat
idiv
inc
aaa
adc
inc
movsb
pop
out
xchg
inc
lahf
and
and
pusha
mov
int3
in
dec
mov
pushf
int3
mov
roll
gs
sub
sub
lret
movsl
jmp
push
and
fdivrl
pop
call
dec
sbb
pop
outsl
movsb
xor
clc
adc
pop
ljmp
call
jmp
dec
movsl
pop
dec
xor
and
adc
imul
add
add
jecxz
inc
lcall
lods
and
sbb
cmp
js
mov
cmp
or
ds
xchg
cmp
dec
add
aad
dec
sbb
dec
fnsave
cmp
pop
imul
mov
clc
lods
out
fldcw
mov
int
sbb
das
mov
push
cmpsl
fsts
lods
xchg
lcall
inc
loopne
mov
mov
jo
mov
sbb
push
loope
or
jmp
in
add
ljmp
cmpsb
or
movsb
dec
xor
adc
or
call
dec
out
lds
mov
outsb
and
sarl
repz
call
sbb
inc
nop
jne
add
decl
movsb
and
dec
jl
jecxz
pop
mov
rol
cmp
xor
js
ud0
dec
incl
rclb
mov
cmpsl
sti
adc
ljmp
mov
mov
mov
sbb
shrl
idivl
sbb
xchg
pushf
aas
call
aaa
scas
movsl
xchg
iret
pop
push
lods
xchg
jns
insb
cli
inc
sub
fsubp
mov
enter
mov
adc
mov
dec
orl
mov
ljmp
or
stos
js
pop
aas
and
ljmp
jmp
and
jle
es
mov
pop
or
jmp
or
es
mov
arpl
adc
dec
mov
dec
xchg
stos
inc
call
pop
ficoms
mov
ljmp
mov
dec
dec
std
leave
icebp
mov
inc
jecxz
inc
sbb
idiv
call
cmp
and
sbb
pop
lods
jbe
outsl
xchg
popf
rcrb
addr16
cltd
sub
js
pop
movsl
add
pushf
inc
test
faddp
int3
shl
ljmp
pushf
cltd
inc
xchg
stos
lea
dec
out
je
jge
ja
int3
sub
addb
aaa
or
lods
adc
jmp
and
movsl
dec
adc
jae
xchg
adcb
cmpsl
rol
bound
addr16
leave
sub
ljmp
jmp
sbb
cmp
imul
xchg
xchg
fidivl
stc
xchg
shll
jg
sub
mov
cmpsl
adc
in
jge
int
cltd
pusha
push
in
or
sub
rol
or
push
out
std
jo
jne
cmp
or
mov
stos
jb
hlt
adc
sub
mov
subb
jnp
clc
les
mov
out
fidivs
test
add
xchg
add
jae
jp
lcall
xchg
ja
imul
cld
cmp
add
mov
daa
movsb
fwait
push
enter
sbb
cltd
lods
push
test
sub
sahf
das
xchg
movsb
out
dec
xchg
mov
sub
mov
sbb
test
jnp
push
cmp
push
rcr
incl
push
jae
stos
mov
rclb
shrb
rcr
ja
jecxz
mov
subb
decl
inc
insb
jne
cmp
or
std
sub
xor
outsl
mov
xlat
mov
inc
pop
fwait
xchg
xchg
and
outsb
push
push
out
repnz
mov
push
mov
push
nop
cwtl
adc
xchg
mov
shlb
clc
jmp
add
loopne
and
notl
pop
std
push
cmp
repz
ret
ret
sbb
fistpll
pop
dec
xchg
xlat
clc
out
lret
jns
cmpsb
push
mov
xchg
xchg
and
shlb
incl
out
inc
push
cmpsl
sub
jo
push
xchg
sbb
mov
mov
xchg
push
push
lods
mov
or
dec
sub
leave
mov
adc
push
iret
mov
cs
decl
add
cmpsb
fldt
out
loope
inc
xor
jle
adc
sub
jmp
cld
and
fidivl
inc
test
fwait
daa
xor
aaa
ret
dec
mov
test
loopne
inc
enter
or
adcl
stos
stc
jmp
lret
testb
cmp
inc
mov
fnstsw
xchg
inc
xchg
push
push
fwait
or
lods
fbld
mov
and
orb
mov
ljmp
sub
ss
loope
xchg
pop
and
pop
loope
std
data16
mov
loope
pushl
and
mov
push
and
aam
pop
mov
ljmp
mov
shlb
mov
outsl
into
xchg
jge
add
pop
pop
jno
jne
ljmp
out
and
and
and
push
insl
xchg
mov
jnp
inc
sbb
out
scas
lcall
sub
ret
mov
out
jbe
sti
clc
xor
dec
lock
call
jmp
leave
cwtl
adc
sbb
stc
pop
icebp
add
jge
sbb
inc
fstpt
stc
pop
lcall
mov
sbb
adc
in
vandnpd
xor
add
fcmovb
mov
mov
clc
push
xchg
mov
lea
add
iret
sbb
mov
xchg
ljmp
jg
cmc
aam
and
scas
sub
pop
movsb
out
cli
incl
and
pushf
mulb
int3
cli
push
cmpsb
cmp
jne
xor
push
mov
lcall
xchg
lods
mov
and
dec
stos
add
ficompl
imul
dec
shrl
aas
jecxz
out
imul
pusha
inc
clc
mov
addr16
out
dec
out
push
push
inc
pop
js
daa
mov
dec
sahf
inc
out
cld
ds
cmp
xor
xchg
scas
or
call
test
xor
idivb
lods
fsubr
mov
clc
pop
mov
popa
add
mov
aam
cmpsb
jae
jbe
dec
imul
cmp
cmp
xor
inc
xor
mov
pushl
test
mov
mov
hlt
shrb
ficomps
movsb
cmp
mov
scas
call
inc
fldl
or
xchg
repnz
andb
push
out
aad
mov
sahf
aam
ljmp
imul
or
addr16
into
sbb
fisttpll
testb
jmp
and
aad
jae
push
or
mov
sbb
cmp
mov
ljmp
mov
test
fiaddl
sar
enter
stc
add
dec
sbb
loop
scas
test
fwait
sti
jmp
pop
lods
push
jle
add
dec
clc
sbb
dec
mov
loope
jge
cmc
jmp
repnz
jmp
inc
xchg
add
sarl
rcll
mov
or
sahf
fcomip
mov
and
xor
aam
mov
dec
insl
movsl
sbb
inc
jecxz
lds
or
in
dec
fists
and
add
fdivrs
repz
into
call
cs
pushl
out
mov
push
mov
push
add
std
testb
push
xor
stos
inc
dec
sti
sbb
lcall
mov
mov
pop
jo
cld
mov
jecxz
push
in
mov
daa
push
add
stos
sbb
decl
lock
jle
push
loopne
dec
sahf
add
leave
stc
xor
inc
jle
pop
dec
sti
popf
stos
ljmp
mov
sub
cmpsb
scas
sbb
dec
or
sar
lcall
movsb
rcrl
movsl
rclb
in
lods
mov
and
mov
mov
cmp
cmp
pop
adc
mov
pushl
or
int3
jmp
stos
repnz
xchg
movsl
push
cmp
cmpl
lcall
mov
add
add
cmp
lret
test
stos
loope
xchg
cwtl
cmp
mov
pushl
movsb
and
xchg
pusha
out
push
in
mov
repz
pop
push
addr16
jmp
jp
ficoml
das
mov
aas
inc
shl
mov
or
dec
sub
loope
dec
cli
jmp
xor
sub
aas
popa
nop
shrb
cmpsl
shl
push
stc
lret
mov
andb
pushl
mov
inc
mov
lea
push
push
pop
dec
call
loop
iret
xchg
aaa
xchg
decl
sarb
mov
orb
es
xor
cltd
sbb
xchg
jne
decl
rcrb
fdivl
mov
sahf
xchg
sbb
inc
cmp
inc
mov
pushf
xor
lcall
inc
sbb
lea
sub
jle
adc
sti
call
iret
dec
popa
mov
add
mov
push
cmp
or
xchg
incb
add
lcall
je
leave
mov
pop
outsl
cmp
fistps
mov
sub
rclb
jb
lcall
or
mov
subb
mov
jg
in
mov
mulb
mov
lcall
call
cmp
push
lods
mov
sbb
sbb
int3
push
in
repz
xor
mov
xor
faddl
int
mov
mov
jmp
jnp
cmpsb
loope
inc
jge
test
stos
divb
cwtl
sbb
push
scas
mov
add
sar
push
sbb
sub
test
or
sahf
movl
aas
je
ss
or
mov
jg
sahf
in
outsb
xchg
aad
mov
mov
adcl
jg
call
lock
es
or
dec
in
leave
inc
addr16
andl
test
out
cmp
out
shll
in
jbe
cmp
fmuls
cmp
pop
xchg
js
pop
mov
mov
xor
icebp
pop
hlt
lods
pop
fdivr
fistl
xor
and
add
push
jbe
pop
loop
mov
repnz
daa
iret
mov
add
pusha
test
pushl
rorb
xchg
adc
sub
dec
pop
xchg
sub
es
dec
pop
cmp
ljmp
push
fwait
xor
mov
fildl
sub
dec
out
pop
lock
into
jg
lahf
and
fsubrs
xchg
xor
sbbl
dec
ljmp
or
lcall
sub
mov
outsl
das
xor
push
cs
mov
pop
mov
out
ljmp
cli
xchg
dec
je
add
sub
divps
xchg
call
shrl
mov
jmp
and
fstp
cmp
enter
fimuls
adc
xor
movsl
mov
jg
test
adc
aas
mov
lds
mov
into
out
xchg
scas
stos
ja
mov
pop
sahf
push
xchg
lahf
dec
mov
jg
jb
pop
or
incl
mov
in
out
in
xchg
xchg
into
clc
fistps
lcall
addr16
dec
les
cmp
std
and
and
fs
pop
dec
test
or
push
lcall
add
jge
sti
sbbl
fidivs
sahf
mov
push
cmp
inc
leave
pushl
pop
mov
or
negl
mov
add
cmp
fbstp
test
cmp
in
cwtl
sub
push
mov
icebp
cmp
push
adc
enter
mov
jle
xlat
lea
int
mov
call
mov
aaa
cs
sbb
jbe
xchg
cli
xor
mov
push
popa
mov
mov
incl
xor
cmp
or
push
pop
in
in
lcall
incl
fdivrs
lods
rorl
fwait
ja
cwtl
clc
jae
inc
stos
dec
sarb
ret
mov
rol
mov
fdivs
pop
sar
scas
clc
insb
stos
pop
loope
and
lcall
fldenv
mov
adc
rcr
test
or
fsubs
rcll
inc
lea
pop
xor
das
lock
lcall
dec
cli
sbb
push
sub
int
sub
jbe
aam
je
xchg
add
decl
js
in
mov
jecxz
addr16
fldt
lcall
pushf
int3
mov
pop
bound
insl
jp
adc
inc
ljmp
and
sti
jp
ret
pop
or
sbb
push
push
cmp
daa
imul
dec
mov
adc
xor
cltd
ss
jo
lcall
adc
les
push
cmp
ficoml
mov
aad
and
cmp
pushl
popf
fdiv
jno
xlat
add
test
sub
test
insl
js
inc
mov
in
cltd
jg
sbb
nop
xor
push
mov
lret
inc
cmp
fsubrl
mov
sti
adc
in
sub
cs
xchg
ljmp
sbb
out
lahf
sbb
mov
push
xchg
in
ret
rorl
mov
ljmp
dec
mov
repnz
add
ja
mov
xor
add
outsb
mov
xchg
call
mov
out
pop
stos
dec
push
push
pushf
mov
jns
cmp
dec
loope
jb
xchg
and
es
dec
in
jno
repz
fcomip
ljmp
xor
jmp
lret
ja
in
xor
sbb
lret
ljmp
insb
gs
ljmp
jecxz
sbb
popf
dec
xlat
mov
call
std
popf
dec
cmp
call
ss
push
jp
add
sbb
int3
mov
loope
lock
jb
call
dec
enter
js
cmpsb
stc
mov
dec
out
adc
call
and
incl
mov
out
push
dec
jge
sbb
pop
daa
in
out
mov
mov
xchg
arpl
xchg
aam
inc
dec
jmp
mov
popf
sbb
jg
and
notb
pop
mov
les
sbbb
and
jg
scas
cmpsb
pop
in
prefetcht0
scas
sbb
mov
lret
pop
mov
incl
mov
lret
into
shll
stos
xor
jg
push
push
jmp
lcall
repz
add
jns
cli
and
push
fdivrs
idivb
pushl
addr16
outsb
push
mov
xor
inc
inc
test
incl
cmpsb
fsubrs
inc
pop
xor
shlb
call
mov
flds
iret
or
mov
mov
jl
jb
sar
lcall
push
std
dec
xchg
xchg
xchg
stos
mov
imul
out
pop
xor
mov
pop
mov
cmp
push
mov
nop
addr16
add
push
mov
mov
and
push
push
cmpsb
pop
in
aas
imul
test
pusha
repnz
dec
adc
or
pop
pushl
sahf
inc
int3
xchg
bound
jecxz
and
popa
insb
sbb
shlb
push
lret
pop
or
dec
sbb
push
pop
cmc
jmp
xchg
or
cmp
dec
lcall
movsb
fcmovnu
ss
mov
and
fcomip
in
and
leave
xor
jns
lret
lea
jo
mov
dec
insb
xlat
out
xchg
and
ret
add
repz
jecxz
and
jg
popf
imul
jle
xchg
cmp
out
or
add
pop
pop
and
into
jno
add
das
cli
ljmp
test
xchg
lret
pop
adc
inc
dec
cmpl
xchg
adc
mov
incl
mov
cmp
stos
call
dec
test
add
mov
jb
mov
ja
mov
sbb
and
lock
out
fs
enter
sti
xor
test
sub
addr16
insl
decl
mov
inc
mov
imul
je
add
and
mov
jmp
adc
push
jno
shll
sbb
lret
inc
int3
sti
add
mov
stos
incl
fdivrs
and
push
sub
sbb
aaa
out
sub
pusha
sub
ljmp
add
int3
fbstp
mov
add
mov
mov
call
mov
test
sub
data16
xchg
dec
bound
cmp
aas
adc
sahf
push
lcall
rolb
add
xchg
pushf
fs
jl
sbb
mov
mov
call
xchg
insb
insl
mov
dec
in
mov
adc
out
ret
roll
jae
sub
jmp
mov
bnd
push
mov
out
or
sub
stos
pushf
push
dec
dec
js
adc
lods
and
jg
mov
jmp
test
jb
outsl
push
pop
mov
insb
jmp
test
out
or
adc
add
xchg
sub
cmp
bound
sbb
inc
cmp
add
fcomip
decl
push
popa
in
dec
sbbl
or
inc
xor
daa
mov
imul
mov
hlt
out
imul
push
add
hlt
pop
cmpsb
xor
call
push
push
sahf
mov
inc
lcall
pop
sbb
pop
stos
sbb
jno
mov
inc
jmp
xor
xorl
sub
fbld
dec
mov
jg
jmp
test
cltd
mov
in
out
sub
icebp
jns
lods
mov
xchg
jmp
shll
sarl
jae
hlt
pop
push
cmp
add
outsb
xchg
mov
bound
lcall
loope
mov
push
int3
lock
jmp
fs
mov
lcall
or
inc
sbb
sbb
inc
pop
int
dec
cmc
je
sbb
pop
nop
push
cmp
xor
mov
push
jmp
push
and
fwait
stos
sbb
push
push
fldt
dec
sbb
push
das
call
jp
ficompl
test
mov
push
mov
xchg
cmp
ja
lcall
inc
and
inc
lea
add
jno
je
loop
jmp
repz
jns
ljmp
cmp
mov
xor
out
jg
sub
mov
jmp
imul
mov
adc
xor
mov
lahf
or
push
das
idivl
repz
repnz
inc
int3
adc
inc
jno
and
ds
into
mov
inc
add
or
cmp
ljmp
stc
xchg
cmp
repz
add
jne
lret
leave
enter
lcall
fs
ss
pop
or
xchg
imul
sub
outsb
dec
dec
inc
dec
lods
push
movsb
jmp
pop
pop
into
cli
shrl
cmp
clc
mov
ljmp
ljmp
inc
and
roll
mov
stos
dec
shlb
adc
sbb
cmp
add
int
pop
sbb
in
sbb
gs
ror
sti
decl
cmp
fstps
fwait
xor
out
xor
cmp
jp
in
jg
sbb
pop
sbb
mov
mov
imul
lret
jmp
out
push
loopne
lcall
in
shlb
sub
jecxz
jl
sbb
jmp
pop
int
fistpll
cmpsb
incl
fildl
rcrl
subb
dec
mov
push
repnz
cmpsl
call
pushl
cld
incl
jecxz
dec
std
mov
jo
mov
xchg
ror
push
sar
mov
pushl
fs
lods
out
in
cli
test
mov
fsubrl
sbb
xchg
stos
adc
ja
jmp
lret
mov
shlb
pop
sbb
pop
jno
push
test
mov
or
decl
enter
loopne
lahf
xor
shll
mov
aam
outsl
data16
iret
jne
test
push
inc
xor
test
fnsave
xor
sub
jmp
and
ljmp
test
popa
cli
fdivp
or
outsb
hlt
mov
push
test
pop
flds
cmp
ret
addb
inc
js
jmp
jo
xchg
out
scas
fbstp
call
inc
push
pop
pop
idivb
mov
dec
pop
pop
sub
loop
and
das
decl
add
jmp
push
imul
sub
dec
cmpsb
sbb
and
sar
pushl
adc
add
jle
cmp
call
jb
sahf
int
lcall
incl
mov
pop
hlt
lahf
add
data16
push
stc
mov
cmp
xchg
sub
ljmp
xchg
imul
in
dec
test
inc
cmp
push
stos
fwait
mov
cmp
arpl
mov
fisttpl
sub
scas
sub
mov
push
xchg
iret
shlb
mov
dec
adc
mov
xor
lahf
inc
lcall
js
push
insb
xor
or
add
or
out
stos
imul
inc
cld
lcall
sahf
xor
fcompl
out
push
dec
cwtl
pop
jnp
pop
js
loop
jg
incl
mov
daa
in
and
insl
mov
sub
pop
jae
jb
pusha
jb
inc
xchg
cmp
call
ror
jl
enter
mov
xchg
sbb
bound
mov
in
xchg
addl
jle
lcall
adc
mov
push
cld
fmuls
movsl
pusha
or
pop
cltd
and
cld
fiadds
loope
jle
cmp
imul
movsb
fwait
sbb
hlt
pop
cmc
es
dec
jg
jg
jno
rclb
push
fisubrs
hlt
dec
mov
pushf
mov
dec
push
fstpl
decl
pop
lods
stc
xchg
lcall
mov
xchg
inc
aam
cmp
mov
imul
push
dec
decl
lcall
cs
jns
jp
and
iret
add
cltd
sub
js
incl
pushl
xchg
pop
nop
mov
and
arpl
mov
pop
xchg
mov
jmp
jnp
fcompl
xor
mov
and
jmp
rcl
dec
int3
jnp
addb
jnp
call
jp
dec
cmc
inc
push
subl
cmc
inc
add
and
sbb
sbb
adc
xor
repnz
and
cmpb
lcall
or
int3
sbb
js
mov
sub
fcmovnbe
xchg
xchg
inc
add
jno
xchg
dec
sub
negb
lods
adc
or
jae
pusha
dec
jge
xchg
pop
cmp
lcall
push
xor
push
fldcw
push
pop
dec
ss
lret
addr16
dec
add
xlat
es
incl
cmpsb
push
test
pop
push
adc
pmaxsw
push
cwtl
call
sub
jg
call
cmp
pop
fcmovu
xchg
push
stos
loopne
xchg
stos
out
and
hlt
jo
or
mov
ficoml
jbe
mov
mov
dec
aad
cmp
jge
pop
out
sbb
jmp
pushf
fistl
cli
or
mov
adc
xlat
rol
xchg
test
std
ds
pop
shrl
push
fsub
jmp
lahf
and
daa
cmp
add
std
jg
frstor
push
pop
test
push
std
enter
int3
icebp
mulb
xor
adc
sbb
fdivrs
scas
jl
sarl
popf
stos
xchg
adc
das
or
scas
movsb
jo
mov
xor
call
push
sbb
push
imul
pusha
pop
loope
fwait
loopne
lea
mov
js
cmp
into
lret
pushl
arpl
jl
out
mov
add
sbb
mov
mov
mov
ljmp
cld
into
push
inc
sub
push
mov
cmp
mov
and
fidivrs
je
or
dec
mov
xchg
jmp
xchg
std
out
ss
pop
data16
divl
pop
std
movsb
clc
mov
rcr
jmp
add
jbe
xchg
cli
int3
ljmp
pop
sub
adc
adc
inc
lret
jae
adc
mov
incl
push
pop
call
cmp
popf
pop
mov
aas
push
jnp
jno
leave
insb
pop
cs
cs
call
fbstp
pop
repz
into
adc
int
dec
bound
clc
das
add
xchg
mov
sub
repz
les
jmp
pop
test
cmpsb
fsubrl
xchg
xchg
mov
mov
sub
das
mull
mov
sub
pop
push
std
jmp
gs
mov
xchg
das
lret
cltd
in
call
lods
in
inc
ja
mov
decl
outsl
out
stc
jl
xor
stc
and
jmp
int
jmp
and
enter
xor
call
hlt
sbb
std
jecxz
enter
xchg
sti
mov
jmp
nop
fbstp
push
xchg
pop
rorb
inc
shrl
and
sub
pusha
arpl
adc
xchg
mov
repz
lcall
xchg
mov
jp
jge
cli
sub
mov
lock
test
mov
xchg
jp
sub
ss
mov
pop
std
xchg
pusha
lahf
pop
jmp
clc
call
jnp
fnstcw
aam
movsb
stc
push
jae
and
dec
push
in
inc
sbb
ljmp
loop
cmp
in
lret
jmp
cmpl
addb
paddsw
decl
jnp
xor
xchg
into
out
and
out
inc
adcl
jns
mov
in
jmp
fisubrl
jae
lahf
and
cs
push
dec
aam
loope
jecxz
dec
decl
incb
adc
lods
sbb
sub
pop
mov
lock
movsb
xor
lret
lcall
lods
gs
mov
xor
shrb
cmp
test
in
call
cmpsb
dec
insl
je
sbb
sbb
je
rorb
popf
pop
sub
sbbl
inc
pop
or
or
mov
shl
cmpsb
fcmovbe
pop
cmp
jne
jl
lock
xor
inc
sbb
ljmp
call
add
sub
xchg
ret
dec
lock
stos
pusha
cld
lcall
hlt
or
inc
push
rcll
push
das
push
cmp
sbb
pop
add
adc
das
dec
into
inc
cmp
insb
inc
mov
push
pop
sbb
lea
fs
sub
pop
jg
mov
mov
push
add
jmp
test
or
stos
mov
ljmp
fists
dec
push
sub
mov
push
adc
hlt
sub
std
or
add
pop
outsl
cmp
roll
adc
mov
pop
std
pop
dec
lea
fsubs
scas
fbstp
mov
icebp
cmpsl
es
mov
dec
out
push
xchg
cmp
lret
sub
shr
mov
mov
pushl
xor
cwtl
push
aad
lret
cmpb
rorl
inc
mov
jl
fcomip
les
fmuls
scas
jo
fwait
cltd
xor
cmc
sub
jp
lcall
mul
inc
jae
pop
cmp
std
lock
test
pusha
xlat
test
jnp
iret
addr16
scas
mov
push
inc
inc
sub
push
arpl
ficoml
pop
pop
popa
xor
sbb
xchg
fincstp
dec
or
sub
mov
sub
cmp
sbb
stos
pushf
fnstenv
sbb
jp
stc
mov
jmp
addr16
shl
dec
loope
add
adc
neg
test
jbe
outsl
mov
outsl
cmp
decl
aam
dec
imul
xor
fisttpll
inc
jns
lea
ljmp
pop
outsb
sub
lock
stos
mov
xchg
pusha
in
ret
icebp
pop
shl
movsb
adc
xchg
jb
pusha
add
pop
lcall
clc
adc
sub
mov
push
imul
pop
fstpl
xchg
cmc
lods
arpl
incl
or
xor
mov
frstor
icebp
rorb
mov
push
add
mov
int
mov
subb
dec
cmpsl
movsl
pop
lcall
add
push
xchg
jo
loopne
jb
out
mov
cmp
push
rcr
adc
pop
push
loopne
lds
add
dec
sbbb
sbb
popf
call
or
dec
scas
hlt
lock
or
add
in
imul
call
jle
scas
cld
dec
adc
ret
sbb
xor
repnz
push
adc
test
jmp
scas
movsl
arpl
jne
dec
or
ret
nop
xor
xchg
xchg
mov
mov
add
les
and
and
xor
adc
adc
and
push
sbb
roll
sbb
jmp
and
xor
fcmove
ljmp
test
jp
stos
addr16
mov
nop
cmp
into
int
loop
xchg
sub
lods
add
std
mov
jo
jo
mov
or
add
ja
pop
fcomi
jp
test
ret
dec
xchg
dec
mov
sbb
mov
mov
and
push
jle
mov
cmp
lcall
and
pop
scas
das
outsb
pop
scas
mov
jl
xlat
xchg
cwtl
mov
lods
test
dec
fisubrs
cld
push
jbe
repz
fists
mov
in
push
inc
subl
scas
cs
jmp
mov
loopne
or
jge
in
and
jmp
fbld
xlat
or
pushl
mov
cmpsl
push
fnstsw
xor
daa
xor
std
mov
cld
dec
cltd
dec
ljmp
jns
lret
aaa
test
mov
and
test
insl
inc
xchg
int
jg
cmpsb
ljmp
add
test
push
pop
xchg
inc
lret
and
ja
fcomip
dec
lahf
test
testb
inc
jo
cs
jle
push
push
cli
incl
xor
fcoms
sahf
outsb
pop
mov
lock
mov
outsl
and
xor
test
add
call
fisttpl
je
outsb
fmull
jmp
popa
xor
jecxz
lds
xchg
or
xchg
int3
testb
pop
adc
fsub
sbb
jg
fistl
repnz
and
cmp
daa
add
mov
cs
ffreep
out
lods
outsl
loop
mov
insb
mov
jno
push
cld
jmp
inc
sub
cmc
cmpsl
iret
sub
gs
lret
ss
andl
sahf
xchg
cmp
adc
ljmp
mov
mov
sbb
stos
mov
dec
pop
cld
add
adc
xor
jecxz
in
pop
jg
adc
std
add
outsl
jns
test
test
cmc
cmpsb
fsubr
das
shlb
ret
fists
loopne
inc
jmp
mov
addl
incl
jno
pop
stos
inc
stc
sbbl
pushf
push
mov
push
stos
out
pop
lahf
out
mov
scas
mov
dec
fcoml
andl
in
and
int3
addr16
push
jb
pusha
sar
js
mov
mov
out
mov
outsl
add
les
mov
pusha
xchg
icebp
pop
jl
fildl
push
in
rcll
rclb
jne
pop
jb
xor
inc
adc
ret
addb
cltd
fwait
ds
adc
sti
mov
incl
jb
add
pushf
popf
data16
or
stos
aaa
sub
iret
sbb
add
cli
ds
stos
std
aam
inc
pop
sahf
in
sahf
movb
mov
push
sub
cwtl
xor
adc
clc
xchg
incb
ds
pop
mov
ljmp
jecxz
test
cmpsb
out
out
scas
or
lret
cltd
mov
dec
adc
mov
in
hlt
jno
push
push
lret
insl
mov
es
or
or
mov
vcvtpd2dqy
lods
jno
xchg
sub
rcll
decl
adc
dec
repnz
fdivs
jle
fimuls
movsb
jl
jp
adc
mov
stos
loop
ljmp
add
sub
mov
rcrb
imul
jbe
ficoml
jno
sub
ljmp
stc
sub
test
sbb
jecxz
xchg
int
jno
ljmp
adc
cmc
lcall
dec
and
shll
ss
push
sbb
sub
mov
nop
cmp
decl
inc
stos
jns
repnz
push
cmp
mov
test
dec
jmp
or
outsl
lret
lcall
lcall
les
pop
into
sarl
aam
lcall
decl
cld
aam
xchg
mov
in
int
sbb
and
jno
rcrl
cmc
decl
cmp
mov
push
jb
push
push
loopne
out
sbb
insl
call
xor
push
dec
sbb
add
mov
push
ja
incl
push
mul
cwtl
ficoms
mov
and
aad
dec
or
cmpsl
jb
rol
fildl
outsl
xor
lock
rclb
xchg
push
mov
dec
push
xchg
jmp
jp
xor
xchg
js
lods
aad
inc
mov
adc
or
scas
lahf
ja
call
lcall
pop
repnz
mov
jne
push
and
decl
popa
and
jns
aad
int3
xor
jge
inc
repnz
das
rcrl
sbb
dec
push
mov
lcall
cltd
jg
sbbb
cmpsb
idivb
rorb
repnz
adc
outsl
pushl
mov
ret
je
inc
aad
insb
pop
fimuls
lds
or
and
ljmp
pmaxub
cwtl
or
inc
stc
mov
adc
div
add
lahf
icebp
repz
lret
ljmp
testl
popf
and
ja
iret
xlat
lea
notb
or
or
mov
mov
mov
pop
cld
sbb
inc
pop
cmp
mov
repz
std
mov
pushf
mov
jge
lock
push
ret
jle
jbe
scas
mov
pushl
mov
inc
xor
dec
push
mov
jge
sbb
mov
push
es
mov
incl
je
or
cmpb
std
xor
roll
ss
xchg
jae
sti
jbe
in
imul
sbb
dec
outsb
xor
jo
fwait
test
jae
push
clc
xor
pop
push
lods
pop
out
mov
mov
jo
ss
add
sub
dec
mov
pushl
ficoms
arpl
mov
loop
shll
sbb
bound
decl
xchg
adc
pop
andb
xchg
mov
sub
inc
jle
incb
adc
call
bound
xor
push
adc
push
cs
and
sbb
dec
jb
push
sbb
adc
cli
xchg
mov
fwait
int3
scas
jle
push
cmp
test
inc
jmp
mov
imul
sbb
fnstsw
clc
lret
nop
mov
in
mov
xchg
sub
cmp
mov
mov
stos
in
jl
dec
xchg
out
cld
xchg
decl
xchg
addb
sbb
mov
idivl
dec
inc
push
xchg
sti
notb
jl
inc
pushl
xor
jecxz
xchg
inc
or
xchg
je
cwtl
add
lahf
out
loope
cmpsb
lret
ljmp
dec
cmc
mov
or
sbb
or
pop
jmp
mov
dec
loope
push
in
cltd
mov
data16
fcomip
ljmp
lret
arpl
jnp
loop
push
jecxz
inc
inc
mov
in
mov
push
addr16
lods
call
lret
adc
dec
lods
sbb
mov
xor
inc
dec
push
pop
repz
pop
adc
jg
out
mov
stc
cmc
test
pop
push
mov
mov
jecxz
std
ljmp
pop
rol
lahf
pop
pushl
mov
lds
mov
xor
mov
jno
xchg
fisttpl
cmp
lret
jle
dec
mov
mul
jno
out
imul
sbb
add
sarb
lods
and
mov
loopne
in
pushf
sub
incl
pop
imul
mov
daa
mov
add
cmp
loop
jno
ds
push
std
fidivs
popa
jge
jg
xor
pop
in
push
add
popf
outsb
jg
into
int3
call
xchg
ja
iret
cmp
mov
lcall
clc
je
cmp
pushl
push
mov
scas
stc
divb
mov
out
loop
arpl
xchg
loope
xchg
incl
and
pop
push
dec
test
in
imul
xor
adc
stos
cmp
mov
fwait
rorl
dec
int3
cmp
cltd
jge
popa
adc
inc
adc
jg
bound
lods
hlt
dec
rolb
push
out
in
jmp
sahf
leave
mov
jns
jecxz
dec
dec
dec
cwtl
jbe
jbe
inc
in
int3
sub
ljmp
jo
mov
mov
sub
arpl
ret
ja
hlt
ljmp
push
jne
jg
inc
cmp
mov
pop
xchg
mov
popf
lock
adc
sub
mov
xchg
pop
stos
dec
mov
xor
test
lea
dec
arpl
decl
repz
adc
popa
pop
or
lock
add
cld
pop
mov
in
iret
lods
mov
lcall
cmpsl
loope
movsb
mov
nop
pop
movsb
sub
cmpsb
out
sbb
shlb
push
cmc
lock
loop
add
jns
mov
ret
int3
imul
jg
add
rorb
in
addr16
loope
and
js
pop
out
mov
lods
pop
push
pop
repz
or
aaa
cld
sbb
sub
repnz
ret
sbb
lahf
adc
fdivrp
push
sbb
inc
pop
xchg
and
mov
xchg
add
ljmp
cli
sbbb
sarl
push
cs
inc
mov
test
jmp
or
leave
ljmp
adc
xor
sub
lcall
pop
jp
jl
cmp
mov
in
sub
jns
xlat
pop
imul
push
std
call
pop
push
pop
fsubrl
lea
push
cmp
fucomip
jp
xchg
lret
inc
out
sbb
aas
or
push
mov
popa
ret
mov
decl
stc
and
dec
popf
pop
and
or
mov
push
jbe
pop
jo
das
pop
cmp
aad
gs
cmp
in
jg
negl
jbe
fnstcw
sub
dec
cs
ret
iret
xor
test
mov
xor
mov
jno
ret
imul
cld
pop
out
clc
fisttpl
inc
movsb
fidivrl
xor
mov
or
adc
push
xor
sub
jp
adc
xchg
inc
pop
mov
xchg
add
out
dec
fdivl
shlb
out
in
jmp
mov
mov
js
in
push
mov
jle
int3
push
pop
push
shll
loopne
cld
decl
mov
test
int
enter
addl
incl
scas
es
loope
jnp
push
add
xor
xor
lret
pop
jmp
add
pop
mov
fwait
stos
loop
je
inc
xor
fnstenv
push
cld
xor
mov
orb
inc
fcmovu
in
lds
xor
scas
mov
imul
adc
test
scas
pop
fists
int3
movsb
pop
sbb
push
mov
lock
fists
aam
js
mov
cs
call
pop
jne
mov
scas
out
jb
leave
inc
cli
add
or
or
out
call
pop
nop
iret
mov
ja
mov
sti
dec
push
mov
xor
loop
arpl
decl
dec
sti
mov
out
mov
push
fnstsw
or
mov
or
jmp
hlt
fdivl
sub
xchg
test
loopne
shrl
cmp
icebp
test
or
pushl
dec
mov
xchg
xor
dec
jae
or
lea
js
incl
sub
test
popf
dec
push
sahf
insb
lcall
adc
jmp
shrb
fnstcw
mov
push
lea
nop
mov
lahf
leave
int3
pushf
or
ljmp
push
aas
cmpsl
or
cmp
call
fwait
ret
dec
jmp
cmpsl
stc
or
outsl
sub
push
jmp
rclb
mov
call
jmp
aad
in
sbb
cli
out
lret
and
cltd
xchg
mov
dec
aad
push
ljmp
fwait
popf
cmpsl
push
fildl
mov
mov
jo
jbe
repnz
jae
sbb
lcall
test
mov
mov
mov
mov
call
dec
leave
dec
and
bound
shll
sbb
adc
ficomps
mov
lcall
jns
push
inc
rclb
movsl
std
scas
fdivr
inc
mov
jecxz
lret
jne
rclb
call
add
incl
inc
rorl
inc
adc
bound
xchg
arpl
inc
stos
xchg
stc
popf
lret
insb
inc
mov
xor
mov
popf
xchg
in
into
add
xchg
popf
or
aam
push
push
push
movsb
dec
lock
ljmp
mov
jo
sub
dec
dec
pop
jmp
inc
mov
sar
xchg
fwait
scas
cli
push
push
or
loop
out
mov
inc
jmp
dec
dec
ljmp
arpl
mov
testl
inc
mov
dec
mov
inc
dec
pop
dec
enter
mov
inc
xor
movsb
daa
push
adcl
mov
mov
or
ror
sbb
jno
pop
cmc
enter
or
push
mov
lock
stos
xchg
mov
xor
or
fdivr
jmp
ret
cs
out
mov
inc
or
push
je
jmp
pop
cmp
out
mov
inc
mov
jo
scas
loope
scas
clc
ljmp
ds
scas
xchg
jle
mov
mov
push
inc
jp
repnz
jp
jne
loopne
push
mov
inc
sbb
in
adc
pop
jl
or
adc
push
fwait
cmpsb
mov
rclb
lds
ret
xor
rcrl
andb
cmp
add
cmp
scas
sqrtpd
jle
push
lret
xchg
jp
push
jns
pushf
out
sbb
jge
jmp
push
mov
xchg
push
mov
int
call
push
loopne
ds
call
pop
int3
mov
dec
inc
popa
bound
sbb
or
in
mov
sahf
imul
pop
popa
jmp
xor
in
out
xor
movsb
sahf
pop
push
sbb
in
out
lcall
adc
xchg
call
popl
push
stos
pushf
dec
jecxz
xchg
sbb
push
jae
lds
fwait
push
out
sahf
cmp
xchg
icebp
pop
call
cltd
in
mov
cmpb
and
mov
outsl
clc
and
jl
call
ljmp
lcall
lods
mov
sbb
movsb
ret
or
inc
call
push
jle
cmp
mov
fsubp
movsb
mov
in
ds
fmuls
test
mov
pop
scas
adc
shlb
es
inc
dec
pop
stc
mov
cmp
sub
xlat
mov
in
and
cmpsb
out
sbb
push
pop
cli
test
out
cwtl
clc
jb
sub
fisubrl
and
ljmp
dec
pop
and
sar
std
es
jno
fsub
adc
mov
mov
pop
lds
test
xchg
dec
in
jg
inc
adc
fsts
add
imul
jl
pop
jbe
jae
in
push
ljmp
mov
sub
cmp
arpl
jno
dec
in
fisubs
mov
pop
adc
pushl
dec
leave
test
test
jo
bound
mov
mov
xchg
jmp
out
dec
xchg
dec
xchg
fs
adc
lds
mov
push
mov
mov
call
jae
inc
mov
rcll
sbb
push
cmpsl
repnz
sbb
pop
mov
jmp
dec
xlat
and
or
pop
lea
sub
xchg
icebp
xchg
cld
ljmp
call
ljmp
dec
dec
test
sahf
aad
ret
mov
lea
pop
mov
jmp
test
lcall
inc
xchg
ljmp
int3
pop
outsb
out
jbe
xor
fadd
cli
loope
dec
mov
cmp
xchg
enter
or
cmp
insb
clc
int
pusha
int3
sbb
lcall
pusha
sahf
movsl
mov
adc
lods
jl
push
xor
jns
nop
push
sub
jnp
outsb
pop
mov
mov
jo
push
outsl
pop
jb
xchg
insl
mov
dec
scas
and
sti
adc
shlb
adc
sbbb
xor
aad
inc
icebp
inc
add
jmp
stos
arpl
or
aad
dec
mov
outsb
pop
mov
cli
xchg
daa
lret
sbb
es
jmp
addr16
lods
or
cmp
rorb
or
das
push
js
xchg
in
jno
dec
lds
in
dec
fdivrs
xlat
imul
fadd
or
xor
push
push
jle
out
imul
lock
fists
lret
jae
jmp
arpl
or
repz
push
inc
fmul
je
je
mov
scas
inc
fwait
pop
aas
dec
aas
adc
dec
loope
les
sbb
sub
mov
jmp
std
jg
incl
sbb
stos
inc
call
pop
push
test
incl
mov
hlt
pushf
roll
ss
test
jg
dec
sub
icebp
sub
call
ret
dec
add
cmp
adc
sub
test
movsl
dec
mov
xor
mov
dec
out
loopne
cmp
icebp
mov
addb
sbb
imul
cmc
jg
notb
sub
and
je
lods
fbld
jnp
aaa
ljmp
mov
popf
push
loop
xchg
cld
push
cs
pop
es
xor
outsl
add
sahf
add
rol
mov
movsb
fucomi
jns
inc
push
cmp
call
xlat
mov
adc
jecxz
add
adc
add
bound
dec
or
lcall
fists
in
add
push
inc
mov
lmsw
pop
testb
cs
dec
imul
lock
dec
cli
cmp
loop
data16
inc
cmp
cwtl
sbb
call
mov
mov
dec
and
dec
rorb
xor
lods
dec
rcr
incl
inc
sub
mov
push
xor
jg
das
in
fcomp
bound
scas
sub
and
movsl
jo,pn
push
roll
in
sbb
out
testb
pop
loope
or
arpl
adc
rcrl
movsl
pop
sarl
gs
jne
and
mov
pop
pop
rcrb
dec
adc
movb
or
paddw
loop
ud0
call
add
aad
pop
mov
hlt
inc
cmpsl
add
pop
jbe
pusha
jo
push
mov
ljmp
or
push
popa
fidivl
adc
dec
jae
push
jne
mov
push
lcall
mov
dec
xor
and
sti
fdivl
cli
mov
inc
inc
adc
lcall
cmp
sahf
jbe
cmp
xchg
test
mov
mov
cmp
jg
sub
outsb
pop
pop
icebp
inc
cmp
add
sti
fistpll
dec
push
add
addr16
ljmp
loopne
test
or
jle
repnz
and
cld
in
clc
inc
add
mov
add
pushl
lock
xor
mov
jp
out
leave
mov
lea
push
outsb
xor
imulb
cmc
mov
jno
push
jge
idiv
mov
add
shlb
mov
push
lret
ret
hlt
insb
iret
inc
pushf
out
clc
mov
repnz
in
mov
mov
xchg
jb
jo
push
data16
fs
pop
loopne
push
mov
push
jmp
xchg
scas
or
in
bound
mov
ret
cltd
pop
cli
lods
fcmovbe
sbb
into
pop
insl
out
fdivrl
add
nop
pop
jp
push
decl
fmuls
mov
add
out
xor
sbbb
lahf
icebp
add
mov
loopne
sti
and
pop
xchg
inc
lods
cmpl
or
xchg
mov
outsl
pop
rolb
lcall
inc
test
xchg
outsb
add
js
scas
xchg
jne
test
popf
adc
incl
aam
pop
jp
push
push
jae
mov
and
xchg
scas
sbb
je
loope
xchg
inc
cli
shll
xchg
ret
cmc
xchg
insb
adc
ret
lahf
push
mov
xlat
sub
mov
loope
pop
cmp
icebp
rcr
mov
sub
test
and
sarb
pushf
in
fildll
mov
in
add
pushl
pop
leave
mov
pop
mov
dec
push
mov
pushl
mov
push
and
decl
adc
sub
sub
ds
adc
out
adc
repz
cli
or
jecxz
in
cmp
sbb
fistpl
xchg
mov
aas
aas
pop
movsb
ljmp
jo
in
mov
mov
rcrl
sub
pushl
loopne
sub
inc
aas
push
jp
insb
push
fimuls
ret
fmull
cmovge
push
insl
fcompl
cltd
inc
pop
lods
sub
orl
xchg
xchg
jmp
hlt
incl
jecxz
pop
push
clc
into
xchg
fists
mov
movsb
fildll
repz
and
jp
popa
out
in
pop
sbb
adcb
ljmp
xor
xchg
push
aam
fs
jmp
dec
ficoml
aas
xor
adc
xor
bound
fwait
dec
add
jbe
mov
lcall
movsl
imul
out
or
decb
loop
in
and
lret
das
or
scas
cli
decl
push
xchg
movsl
mov
or
sub
sub
incl
adc
sub
xchg
sbb
xchg
cmp
mov
in
jg
dec
mov
add
fisttps
insb
int3
sub
push
sbb
and
outsl
cli
decl
rcl
xchg
add
out
scas
or
and
shl
mov
mov
xchg
inc
dec
call
jmp
and
pop
cli
mov
mov
inc
rcrl
mov
jb
jmp
jns
addr16
shrb
mov
in
dec
lea
mov
dec
cmp
sbb
test
decl
js
add
popf
pop
loop
jae
gs
mov
add
in
push
cmp
dec
popa
js
add
ficompl
xor
jg
stc
add
stos
bound
in
mov
call
cli
mov
bound
cmp
xchg
add
xor
inc
ljmp
iret
and
test
scas
popf
insl
loopne
les
inc
out
dec
idiv
lcall
xchg
mov
sbb
mov
sub
lahf
andl
jns
call
mov
insb
jne
stc
data16
mov
adc
push
mov
lcall
inc
xchg
mov
or
enter
mov
test
std
mov
into
imul
and
xchg
cmc
sub
push
mov
mov
clc
and
addl
rcrl
pusha
pusha
pushl
std
lcall
outsl
xor
jecxz
mov
mov
inc
pop
leave
sbb
lcall
pushl
sub
dec
jb
pusha
jle
in
sbb
ret
decb
push
cld
jmp
sbb
inc
xor
mov
xlat
xchg
pop
push
test
dec
data16
pushf
js
out
nop
imul
repz
mov
xchg
jge
sub
icebp
aad
stos
ljmp
lea
sub
stos
jno
cmc
rorb
stos
je,pn
or
jg
inc
xchg
or
ljmp
call
jae
imul
jno
and
adc
data16
pushf
or
jg
loop
in
sub
ret
push
and
add
cld
dec
mov
inc
push
sbb
jg
or
popf
lea
inc
aad
repnz
jg
enter
mov
mov
hlt
push
andb
sub
dec
pop
es
lcall
fsts
mov
in
sub
sbb
sub
shr
mov
mov
mov
popf
sub
pop
push
xor
sbb
mov
adc
inc
cmp
sbb
fisubrs
insl
sub
scas
pop
std
jns
ret
jmp
and
xchg
add
pop
int3
fbld
push
xor
stc
es
int
mov
incl
cmp
push
jg
into
fcompl
aad
repz
lret
jl
cld
jmp
dec
fnstenv
cmp
jb
or
dec
mov
ret
mov
push
out
xorb
or
jno
dec
pop
dec
mov
call
in
mov
ljmp
push
pusha
dec
pop
sti
ret
and
jmp
repz
mov
jmp
addb
cmpsb
xchg
jae
cwtl
dec
sbb
ss
jge
aaa
testb
adc
push
ss
and
or
pop
sub
add
pop
repz
lods
or
jae
cmp
push
test
mov
test
jnp
sbbl
cld
je
loopne
jbe
pop
xchg
clc
mov
call
rcrb
cmp
push
inc
aad
fmul
fidivrl
sbb
pushl
jo
pushl
ja
int
mov
mov
inc
and
add
mov
jmp
mov
in
cmp
mov
insl
pushf
adc
jns
add
add
call
bound
gs
iret
stos
je
movsb
jecxz
dec
jbe
sbb
lret
mov
decl
fidivl
mov
inc
push
push
jle
pusha
icebp
cmp
cmc
fld
cmp
add
insb
or
sub
lds
sti
loop
test
xor
cltd
pop
decl
mov
call
jnp
mov
mov
lret
cmpl
decl
test
jecxz
inc
dec
sub
jnp
push
inc
mov
mov
lcall
call
outsb
dec
add
inc
loopne
sahf
push
mov
js
xchg
inc
inc
or
push
jmp
xchg
clc
pushf
icebp
mov
push
call
mov
mov
ljmp
repnz
xchg
xchg
sub
mov
test
imul
movsb
or
push
mov
clc
sbb
cli
push
insl
inc
push
xor
cmpsl
xor
stos
es
js
jmp
sbb
insl
outsl
push
jb
lret
fisubl
cmc
or
sub
mov
xor
pushl
sbb
das
sbb
jle
push
add
fs
mov
jle
fiaddl
inc
pop
adc
lahf
push
sub
push
outsl
flds
or
hlt
jg
push
pop
das
and
jg
and
ret
xor
mul
mov
mov
cmc
mov
outsl
mov
xchg
insb
popf
mov
scas
stc
shlb
addr16
inc
cs
ficompl
repz
mov
in
push
cmovg
dec
xor
fldcw
in
push
xor
mov
incl
pop
dec
mov
clc
push
loopne
fimuls
gs
pop
lret
inc
cmp
call
faddl
imul
xchg
mov
xchg
jmp
dec
sub
call
hlt
scas
add
in
fwait
add
divl
push
push
inc
lahf
cltd
mov
fwait
xor
decl
lds
cmp
mov
mov
pushf
and
inc
iret
hlt
lahf
xchg
in
sub
jmp
xchg
dec
sbb
je
jbe
xchg
frstor
cmpsb
ja
ret
cli
inc
lock
int
fistps
xor
lods
jne,pn
subb
push
adc
fwait
dec
test
nop
inc
and
jmp
mov
js
sti
stos
or
inc
nop
ret
sahf
cmpsl
adc
nop
lds
call
ds
lock
iret
ret
stos
sysret
ja
jbe
das
rorb
cmpsb
inc
jno
popf
push
stc
lcall
out
pop
sub
shrb
into
inc
cli
mov
je
aam
loope
insb
divl
lock
insl
dec
or
jecxz
hlt
lods
xor
xchg
clc
outsb
jge
fldcw
inc
cmp
push
ja
xor
cmp
mov
ret
mov
xorl
mov
scas
clc
call
lcall
and
ja
adc
pop
inc
push
sub
adc
mov
int3
mov
jge
xchg
mov
cmpsl
sarb
dec
out
mov
icebp
jg
stos
dec
sbb
arpl
imul
push
jbe
mov
into
jg
decl
shrl
xchg
cmpsl
jge
aaa
mov
leave
in
xchg
xor
sub
clc
mov
xor
sub
or
mov
repnz
ljmp
cmpsb
mov
in
cmp
dec
and
dec
inc
mov
sbb
xor
cmp
ljmp
or
stos
mov
sub
test
lcall
cmp
in
call
loopne
xor
lods
mov
out
leave
mov
pushf
stos
scas
inc
pop
cmp
enter
shll
cmp
pushl
shlb
inc
push
jge
arpl
mov
cmpsl
mov
divl
iret
cs
aas
movl
pushf
push
push
fisubrs
dec
mov
push
leave
pop
lods
aam
pop
int3
filds
decl
and
inc
cmp
in
jne
bound
stos
or
mull
jge
popf
shlb
in
push
cmp
adc
pushf
das
in
fbstp
adc
lods
out
dec
mov
arpl
jecxz
pop
cmc
cmp
xchg
lods
mov
push
loopne
lahf
popa
dec
incl
xchg
scas
xor
jb
xchg
fiadds
mov
pop
xchg
mov
mov
jg
pusha
inc
fistps
jl
mov
dec
imul
xor
movl
test
xchg
pop
jg
incl
test
sbb
pop
ret
add
mov
mov
jmp
iret
inc
xchg
lods
dec
fstpl
push
jns
cli
pop
mov
dec
inc
icebp
mov
and
cld
dec
insl
cmp
or
out
nop
jbe
sbb
aad
bound
jae
ret
aad
pop
jl
incl
imul
mov
pop
repnz
xchg
mov
jno
sarl
add
rorb
lcall
pop
out
and
jecxz
push
test
push
ficomps
aas
pop
idivb
std
jmp
ds
mov
push
xchg
mov
cmpsl
mov
jle
sti
outsb
cmp
mov
fwait
leave
dec
pop
inc
push
mov
loop
adc
sbb
lods
pop
inc
incl
jns
jl
into
fdivr
cmp
int3
shlb
dec
popf
ror
cwtl
in
xor
cmpsl
pop
dec
pusha
mov
pop
fildl
mov
ss
dec
das
aas
mov
lock
jns
pmullw
sarb
mov
adc
das
ret
prefetchnta
lea
cmp
and
outsl
fdivl
pushl
subl
subl
lret
dec
ss
sub
rcrb
cmp
mov
add
stos
sbb
cmp
cld
sub
sub
hlt
cmp
pusha
push
pushl
in
aas
lcall
fnstsw
jo
stos
and
dec
pop
insl
pop
adc
insb
stos
sub
mov
mov
adcb
mov
cli
shr
loope
mov
cmp
out
pop
test
inc
mov
push
mov
popa
lahf
sti
hlt
push
mov
mov
add
call
adc
xor
rolb
mov
jb
pop
mov
dec
mov
pop
add
js
mov
dec
pop
fcom
sub
decl
sbb
mov
jmp
clc
aas
pusha
cmp
and
pop
decl
lret
inc
mov
aam
test
jl
orb
cltd
adc
sbb
cmp
arpl
push
mov
lret
and
adc
mov
jns
cld
push
sbb
jmp
mov
std
mov
xor
dec
jecxz
nop
mov
popa
cmpsl
cmp
ljmp
mov
shrl
or
imul
ja
lds
mov
dec
inc
mov
mov
cmpsl
pop
jmp
xchg
int3
hlt
arpl
int3
adc
loope
or
rcll
rolb
lcall
clc
mov
mov
daa
sub
push
popa
popa
pcmpgtw
call
decl
pusha
dec
mov
mov
sub
cmpsb
rclb
add
decl
int3
out
mov
lock
je
icebp
pop
arpl
fmul
jp
test
jmp
imul
sbb
or
or
and
dec
mov
dec
ljmp
mov
scas
sub
pop
ljmp
popa
or
dec
sub
dec
scas
jmp
jg
dec
inc
out
push
cld
sbb
outsb
jbe,pn
aas
sbb
cmp
push
jmp
add
jge
jp
inc
sti
xchg
es
hlt
mov
stos
sar
push
mov
xor
pusha
sbb
fsub
in
out
mov
dec
or
mov
es
decl
test
clc
out
xor
mov
das
xor
pop
or
add
lds
je
mov
sbb
test
lcall
mov
call
cmp
sub
pop
cld
pusha
fxam
jnp
test
adc
and
rorb
push
xchg
sbb
cmpb
les
or
mov
sar
fstpl
jbe
or
and
fwait
insb
dec
fnsave
sbbl
test
lcall
xor
loopne
pusha
adc
sbb
xchg
and
notb
pop
jmp
xor
inc
lock
hlt
sbb
jp
pop
jmp
jmp
popf
arpl
mov
aas
movsl
cltd
sub
mov
sbb
sub
lods
cltd
lcall
int
mov
clc
ret
mov
adc
hlt
inc
mov
idivl
call
lods
call
fsubs
and
repz
out
bnd
shll
adc
test
or
lcall
push
xor
inc
jmp
scas
sti
rcr
push
fisubrs
sbb
mov
lcall
mov
sub
mov
out
notb
in
enter
js
mov
lcall
xor
sbb
ss
sbb
je
fsubl
nop
popa
ljmp
dec
cld
in
sbb
rorl
or
add
pop
test
jmp
mov
ljmp
and
fwait
mov
lods
sbb
bound
decl
push
jbe
test
add
xchg
push
push
stos
in
push
mov
je
xor
lcall
test
pop
xor
or
out
mov
ret
pop
decl
inc
stos
or
mov
in
std
or
lods
adc
mov
or
scas
jmp
sbb
mov
and
xchg
pop
cmp
repnz
incl
push
and
xchg
jae
pushl
scas
insb
push
rcl
xchg
incl
jns
in
mov
inc
pop
mov
mov
add
rol
mov
dec
loop
sti
jmp
bound
pop
push
add
lahf
fninit
bound
lods
or
add
ljmp
cmp
or
rorl
mov
and
xlat
and
mov
xor
nop
das
sub
call
cli
fmull
loope
sub
mov
adc
rcrb
cmp
jle
mov
call
nop
or
push
mov
sbbb
push
inc
ret
xchg
fwait
es
lahf
jmp
mov
jnp
shll
ret
mov
mov
rcrb
jg
fistl
aaa
pop
lahf
cwtl
push
or
add
mov
mov
popf
ljmp
push
aad
mov
ret
insl
popa
into
push
sbb
pop
fs
xchg
popf
test
or
incb
add
sbb
arpl
mov
ljmp
mov
mov
xlat
insl
pop
push
mov
push
dec
mov
jno
icebp
hlt
dec
or
imul
in
mov
ficomps
mov
xor
test
ljmp
push
je
dec
dec
stc
addl
push
mov
cmp
cmp
std
fnstcw
iret
iret
push
in
and
cli
add
loop
sbb
adc
jmp
xchg
divb
mov
rcrl
test
ss
cmpsl
sbb
lock
movsb
out
inc
sti
stos
decl
add
movl
in
mov
les
call
inc
cli
iret
push
cmp
dec
jle
xchg
insl
lds
xor
dec
clc
pop
bound
decl
ss
mov
sti
push
or
mov
int3
outsb
sub
jo
jg
add
cmp
dec
jmp
or
and
mov
xchg
adc
add
leave
sti
mov
aaa
sub
mov
mov
scas
imul
sub
sub
pop
call
xlat
or
lret
lods
pop
jo
arpl
inc
fsts
out
lcall
adc
jae
enter
ljmp
loope
pop
bound
and
mov
decl
fists
pop
je
sub
adc
ljmp
js
ljmp
mov
adc
sub
out
mov
in
jns
jecxz
mov
enter
cld
pop
idiv
jmp
fildl
mov
cmp
push
imul
jo
add
filds
sub
popf
test
ja
ljmp
inc
and
addr16
mov
lds
lds
sarl
jg
jmp
sub
jno
mov
ficoml
push
mov
lds
incl
xor
popw
adc
test
js
icebp
pop
scas
mov
out
aas
and
inc
into
or
loop
and
inc
imul
inc
and
in
pushl
adc
mov
cmp
push
pop
pop
add
push
out
mov
popa
call
and
jbe
jg
sti
sub
jnp
lea
incl
push
or
pop
loop
mov
insl
dec
mov
test
sarb
jmp
mov
rcrl
xchg
mov
inc
scas
mov
mov
std
decl
jno
loop
pop
int
adc
xor
cmc
shrb
cmc
jmp
pop
adc
out
mov
nop
sarl
jne
xchg
loope
sub
mov
imul
int3
pusha
sti
arpl
cltd
fstl
pop
or
insb
jle
or
fpatan
mov
push
jecxz
or
popf
add
pop
repz
fst
dec
dec
rcrb
int3
je
sbb
je
and
lcall
pop
dec
mov
gs
mov
aas
and
mov
xchg
dec
jp
lcall
jmp
ja
inc
xchg
pusha
inc
out
out
in
xchg
pop
jbe
fwait
dec
and
pushl
mov
mov
mov
cmp
js
or
and
int
call
push
pop
mov
cld
das
xchg
cmp
outsl
cwtl
arpl
les
xchg
and
cld
call
or
popf
dec
das
iret
fsubrl
inc
or
push
aaa
jno
sbb
dec
imul
ljmp
into
js
dec
into
into
cmp
cmp
lret
adc
xchg
lahf
in
out
adc
mov
xor
fiadds
inc
cs
adc
ljmp
jg
insl
mov
inc
xchg
int
mov
mov
xor
fldt
and
cmpsb
jmp
data16
addr16
sbb
mov
or
fstpt
and
aas
jle
out
repz
cmp
mov
ljmp
rclb
cmp
das
and
mov
lock
push
mov
lcall
and
in
ds
inc
sbb
cmp
add
stos
outsb
inc
adc
pushl
dec
xorl
inc
sbb
movl
lods
js
std
jne
decb
test
loopne
cmp
test
or
add
sbb
cli
clc
mov
mov
and
daa
scas
jmp
mov
push
cmp
clc
daa
test
or
call
in
ss
mov
lahf
mov
xchg
movsl
pop
mov
inc
pusha
adc
inc
push
mov
xor
jmp
cmp
jbe
mov
cmp
lcall
ljmp
inc
pusha
popf
mov
inc
sbb
xor
jl
sbb
xchg
sbb
lds
or
bound
jp
sahf
pushf
mov
aam
sbb
popa
push
push
movsl
mov
mov
jmp
scas
shlb
jb
call
lcall
and
cltd
sub
jmp
cmpsl
mov
adc
sbb
dec
nop
mov
stos
cmp
sbb
shlb
lods
daa
mov
sbb
adc
add
xor
mov
popf
rcrb
dec
inc
fs
dec
loop
sbb
aam
stos
incl
fnsave
sub
xor
int
adc
cmc
outsl
xor
jp
incl
sub
addl
jge
or
mov
pop
add
jmp
in
push
mov
sub
or
dec
jb
xchg
or
das
call
lahf
aas
dec
cld
lock
push
inc
leave
push
mov
arpl
test
gs
jp
jecxz
aad
cltd
out
clc
out
clc
cmp
cmp
or
mov
loop
mov
or
jg
ljmp
inc
lret
lods
mov
cld
inc
insl
mov
mov
shlb
add
mov
add
pushl
mov
mov
push
mov
es
mov
add
fcmovu
sbbl
push
repnz
in
cltd
into
int3
mov
decl
xchg
aad
jle
xor
inc
aas
scas
pop
outsl
loopne
jae
jns
out
lods
lods
jmp
mov
idivb
mov
aad
test
loopne
imul
decl
jle
cmpsb
pop
movl
sub
jbe
xor
mov
jo
lret
cmpsl
mov
jge
mov
mov
popf
mov
mull
call
lcall
cmp
xchg
inc
lods
into
lods
fnsave
repnz
or
pop
es
pushl
lahf
cmc
std
negl
jns
cmc
add
sbb
mov
jb
dec
dec
sbb
pop
mov
out
cli
clc
cmpsl
fs
in
lret
jbe
fisttps
jno
rclb
cmc
push
push
lahf
faddl
lcall
jmp
xchg
subb
shll
insl
xlat
test
lahf
cmp
fistps
mov
and
cwtl
lds
lcall
cs
test
push
rcll
xchg
mov
ljmp
pop
std
decl
inc
jbe
push
ret
adc
out
loop
and
fidivrs
adcb
adc
jmp
add
jae
mov
jbe
out
rcrl
pop
inc
mov
cltd
add
incl
mov
sbb
nop
ficoms
je
pop
mov
out
sub
jg
out
pop
pop
in
pop
test
stos
sub
and
xchg
inc
ds
bound
inc
test
insb
insl
cmc
cmc
pop
lock
add
push
push
lret
js
ljmp
push
fbld
xchg
int3
add
jecxz
data16
fldenv
jbe
push
pop
mov
mov
ljmp
dec
fwait
xchg
leave
jno
push
inc
push
imull
enter
sbb
push
add
pop
pop
sbb
dec
test
inc
and
pop
xchg
lret
test
mov
push
insl
hlt
test
scas
loope
lret
arpl
ljmp
mov
sub
in
xchg
gs
xor
push
xlat
sbb
addl
xchg
jg
add
mov
mov
push
adc
test
mov
mov
inc
ss
adc
sbb
repnz
sbb
inc
leave
ljmp
icebp
push
add
rcrl
mov
out
inc
test
ror
aam
cmpsb
and
js
add
pop
and
fsubl
pushf
xor
sub
test
dec
mov
push
push
sub
sarl
jmp
cmp
adc
push
mov
lcall
mov
adc
mov
fcmovnbe
ja
out
fwait
repnz
mov
movsl
iret
jnp
cwtl
leave
cmp
jge
mov
sbbl
mov
pop
jl
mov
repnz
iret
stc
iret
inc
sbb
orl
pop
pop
inc
imul
jnp
push
sti
sti
adc
test
arpl
scas
movsb
pop
jmp
sahf
in
lock
push
mov
out
push
call
sub
pop
cltd
push
mov
add
inc
insl
jns
xlat
pop
jp
xor
fsubs
jecxz
adcb
iret
mov
xor
pushl
lods
ljmp
push
inc
sarb
xchg
xchg
mov
fmul
pop
dec
lock
incl
xlat
lods
push
scas
lret
and
push
repnz
nop
jp
scas
mov
adc
std
mov
addr16
mov
movsb
pop
call
mov
hlt
xchg
jnp
xor
out
mov
incl
cli
int3
les
xchg
out
scas
push
push
cmc
sarb
neg
push
in
je
call
dec
mov
pop
dec
xor
xor
jbe
bound
test
push
cmp
jbe
ljmp
sub
jns
sub
sub
out
jno
pop
stos
fsubl
sbb
leave
mov
decl
ss
rorb
sub
xchg
push
or
int
or
arpl
imul
ljmp
dec
andl
inc
mov
out
mov
les
je
ds
pushl
xchg
mov
cmp
push
or
cmp
lea
popa
sbb
push
out
mov
movsb
jb
das
icebp
inc
ljmp
or
push
xor
int3
jge
sbb
imull
incl
cmpl
mov
sub
inc
jle
dec
loop
cmpsb
div
fcmovnbe
out
fdivrl
xor
lcall
ljmp
jecxz
mov
mov
xchg
lods
lret
sbb
pop
xor
jo
les
cmc
in
inc
cli
inc
shrb
or
mov
jle
ret
pop
js
test
lods
call
loopne
mov
lds
out
cmp
mov
stos
imul
inc
pop
imull
sub
push
aaa
cmpsb
push
xlat
inc
sub
es
xchg
mov
call
outsl
pop
or
and
test
add
xchg
ss
test
add
jg
call
xchg
cli
andb
add
loopne
adc
insb
ja
ret
je
decl
mov
test
dec
stc
pop
push
cmp
mov
test
cmp
ljmp
fsub
push
mov
adc
lret
and
hlt
push
icebp
jne
outsl
imul
incl
ror
fildl
or
adcl
cmp
loop
jne
iret
fisubrl
mov
call
mov
pop
add
cmpsl
insb
scas
dec
arpl
adc
ret
outsl
jne
jl
cmp
mov
and
sbb
sub
jmp
push
push
cmp
cld
cmp
mov
xchg
lahf
std
ljmp
js
leave
xor
into
push
lods
loop
mov
adc
or
pop
add
push
mov
enter
movsb
seto
cs
insb
je
incl
call
and
inc
fisubrl
lds
and
pop
fdivl
test
test
mov
xlat
outsl
push
jmp
divb
cmp
mov
les
int3
inc
je
decl
jle
mov
hlt
adc
inc
outsl
jp
jns
cmp
mov
ficoms
inc
sar
decl
sbb
jo
and
xchg
pop
outsb
shrb
sub
xor
sub
cmc
lcall
add
ret
xchg
fstl
cmp
and
icebp
ja
stos
mov
ljmp
shll
sbb
js
xchg
pusha
push
mov
and
gs
pushl
dec
fwait
sbb
mul
xchg
or
mov
pop
addr16
scas
mov
movsb
adc
inc
sti
sub
mov
dec
jge
loope
xlat
shrb
stos
outsl
jge
xchg
dec
dec
jnp
incl
cld
into
add
test
mov
fs
data16
cmp
jg
pushl
push
ja
xor
test
std
roll
in
outsb
cwtl
shll
movsb
push
lea
mov
jb
sub
inc
sub
xchg
fcoml
mov
jle
test
inc
dec
jecxz
pushl
stc
loop
or
jmp
fsubrs
xor
sbb
dec
decl
dec
sahf
repnz
mov
sub
fisttpl
clc
pushl
sub
mov
add
mov
popa
pop
add
pushl
movsb
xor
jmp
push
std
or
outsb
jnp
shlb
rol
dec
lcall
sahf
push
mov
xorl
call
test
stc
mov
sbb
scas
mov
sub
mov
push
outsb
sub
push
push
fdivl
mov
vphaddwq
lcall
cmp
aad
cmp
scas
mov
popf
sub
pop
push
xchg
roll
aad
stos
clc
pop
sub
and
jecxz
pop
xchg
incb
jo
pop
out
jb
cmp
mov
les
jae
icebp
push
mov
repnz
sahf
int3
ds
pop
push
mov
call
pusha
ret
mov
xchg
stos
and
add
fnstsw
das
cli
cld
rolb
in
popa
pop
mov
mov
cmpsb
jecxz
test
push
cmp
xor
cli
xchg
jmp
outsb
xor
xchg
pop
xor
inc
pop
xchg
hlt
push
ds
xor
dec
incl
roll
xchg
xchg
movsb
lahf
loope
xchg
clc
cltd
addr16
jle
add
inc
fst
push
dec
jb
stos
jg
test
int3
jecxz
scas
xchg
jnp
call
lcall
in
in
movsl
or
push
inc
repnz
mov
or
add
inc
leave
xchg
test
shlb
xor
and
dec
fldt
sti
mov
pop
pop
xchg
jbe
mov
call
and
mov
shrb
mov
jno
add
lcall
or
mov
xchg
dec
imul
lock
mov
and
movsl
cwtl
cmpsb
imul
loop
outsb
call
mov
push
lahf
insb
inc
aas
or
in
or
mov
popf
vpsubd
sbb
incl
sbb
fs
jmp
imul
ljmp
xchg
sbb
sbb
mov
nop
lahf
leave
jl
push
adc
std
call
fidivrl
jnp
add
cli
mov
and
xchg
mov
pop
mov
sub
lcall
adc
push
nop
loope
jecxz
test
sub
das
add
push
pop
jg
std
push
mov
jmp
repnz
mov
dec
push
jns
and
lcall
leave
lret
rclb
jge
outsl
sbb
aam
sahf
push
or
outsl
cld
dec
add
popa
cs
xchg
pop
mov
jb
movsl
out
cwtl
lock
clc
jg
cmp
test
jg
fisubs
pop
rcll
inc
outsb
mov
mov
add
call
test
pop
insl
xor
jmp
mov
add
out
lret
fcoms
jns
paddusw
mov
xor
cld
popf
negl
jl
stos
inc
into
out
mov
jbe
leave
jg
mov
jp
pusha
loopne
scas
jns
pop
mov
push
push
push
xchg
pop
adc
dec
icebp
icebp
out
out
clc
jmp
and
or
and
fidivl
push
fbstp
ss
xchg
dec
adc
or
xchg
cli
cmp
ds
mov
xor
adc
lret
test
sub
inc
mov
les
jmp
push
popf
and
daa
int
inc
das
loop
push
addr16
decl
movsbl
cmpb
mov
or
dec
cs
addr16
lcall
out
stc
jbe
je
sub
sub
mov
loopne
mov
xor
xchg
jmp
es
and
pusha
rcl
pop
jecxz
mov
movsl
mull
insb
cmp
and
mov
xchg
lret
shlb
mov
out
add
mov
cmp
push
jecxz
cmc
addb
jnp
pop
in
enter
xchg
iret
js
sub
outsb
decl
lcall
sbb
adc
pop
pop
pusha
mov
mov
jp
mov
sbb
mov
push
fidivs
adc
cmp
push
cmpsb
imul
mov
ja
inc
mov
mov
or
std
pop
leave
inc
shrb
out
pop
sub
call
mov
movb
stc
sbb
jge
sub
pop
lret
push
insl
cli
dec
pop
xchg
cwtl
dec
sbb
push
jmp
arpl
loope
push
fsubrl
mov
adc
xor
repz
call
sbb
mov
in
lcall
xor
lods
or
push
and
iret
inc
mov
aas
pushl
and
or
dec
inc
addr16
leave
cmp
lret
mov
mov
out
clc
int3
ja
rcl
sbb
jmp
sarb
jb
cmp
pop
daa
push
ja
in
std
icebp
pop
push
jne,pn
mul
xchg
push
adc
adc
loop
mov
ror
rol
idivl
lahf
mov
mov
add
cmp
mov
pop
in
stos
xor
cmovs
cmp
rclb
jae
or
or
fwait
fwait
movsb
push
es
popf
mov
dec
in
mov
fs
or
decb
mov
popa
sarl
or
cli
ljmp
pop
fwait
lds
sbb
push
mov
mov
xchg
out
movsl
inc
add
xchg
push
pop
inc
fistl
pushf
push
and
sbb
mov
cmp
adc
in
mov
push
sbb
push
dec
decl
dec
rorb
lcall
fildl
aaa
jl
pop
shl
les
inc
mov
cmp
adc
je
xchg
adc
aad
mov
adc
pushl
lcall
test
repz
imul
jecxz
stc
stos
cmpsl
rolb
cmp
cld
jmp
cmp
xor
xchg
fstp
mov
cmp
and
push
dec
rcrb
cmpl
mov
and
mov
dec
xchg
cmp
jns
cmc
lcall
jb
inc
mov
int3
es
into
scas
jmp
add
fbld
cmpsb
push
jns
push
mov
dec
xlat
sub
jno
ret
mov
leave
inc
ret
fdivrp
decl
adcb
sahf
inc
int3
fwait
pop
push
sbb
inc
or
mov
push
adc
xchg
and
dec
pop
fs
pop
dec
ja
jg
call
pop
cmp
lahf
add
test
push
testb
jmp
mov
es
mov
add
mov
push
pushf
sub
sti
idivb
cwtl
cmc
out
ret
push
aas
int3
stc
mov
stos
mov
mov
mov
lret
mov
add
iret
hlt
mov
es
aaa
add
enter
push
or
ljmp
or
icebp
iret
and
pusha
fisttpll
shrb
pop
insl
push
dec
jno
loop
hlt
imul
sbb
cmpsl
sbb
clc
decl
xchg
mov
xchg
jnp
cli
mov
cmp
mov
mov
leave
scas
cmc
pop
lock
call
sub
cwtl
sbb
sbb
inc
int
inc
adcl
pop
mov
outsl
ljmp
jo
dec
sbb
push
jecxz
stos
mov
dec
push
out
decl
shl
test
int3
loop
data16
imul
sar
fiaddl
sbb
dec
test
add
fcompl
data16
jnp
sbb
imull
je
or
jmp
mov
push
xlat
sti
iret
ret
aad
mov
les
dec
inc
sub
out
aas
and
mov
lcall
add
push
movsl
insb
jle
dec
shlb
jp
negl
bound
lods
jno
out
dec
popf
sahf
add
cmpsl
in
and
jmp
mov
test
sbb
pop
aas
lcall
sahf
les
leave
inc
fidivrs
lods
das
inc
outsl
mov
mov
add
lea
ja
call
shll
fchs
push
pop
test
mov
or
in
test
jmp
mov
scas
cli
arpl
jns
pop
push
push
int3
push
mov
adc
mov
daa
movsl
cmp
jle
mov
mov
push
mov
stc
es
pop
std
and
sar
cld
ljmp
and
or
cmpsb
mov
mov
jae
popa
and
out
dec
rcl
jmp
jmp
sub
shlb
dec
sbb
adc
jb
lds
ret
jmp
pop
or
pop
dec
cmc
int
inc
cmp
or
jb
mov
jns
sarl
fwait
inc
mov
inc
aaa
in
inc
sbbb
inc
add
add
insl
pop
sbb
sub
and
dec
sbb
jnp
mov
hlt
adc
stos
outsl
out
mov
test
sub
incl
rorl
outsb
pop
int
adcl
in
lret
push
mov
incl
loop
sbb
sarl
inc
mov
ja
adc
cmp
and
decb
andb
jb
scas
mov
inc
xchg
ja
cmpsb
cmp
mov
and
xchg
add
mov
popf
and
xor
out
incl
in
pop
mov
dec
sbbb
incl
arpl
rolb
ljmp
sub
or
sbb
shlb
out
push
mov
push
int3
xor
xchg
mov
sub
fistpl
hlt
mov
lret
inc
jle
rcrl
call
nop
inc
add
int
mov
shl
sub
cli
inc
js
imul
dec
mov
dec
dec
mov
sub
shrl
jbe
jecxz
test
lods
fs
add
stos
and
jmp
int3
cmp
lods
inc
jmp
lods
outsb
bound
jb
ret
sbb
jns,pn
add
stc
or
and
jmp
lods
cmp
adc
mov
dec
or
add
fidivs
test
lock
or
xor
jmp
je
in
in
xchg
pop
out
sbb
jmp
push
cs
add
clc
inc
xchg
jmp
jg
fwait
jo
out
mov
cld
ja
jle
js
or
jge
enter
adcb
dec
push
iret
inc
in
inc
or
sub
jle
mov
fsubrs
arpl
and
incl
movsl
nop
sub
popf
test
xchg
movsl
es
lea
pop
repz
imul
decl
sar
pop
leave
scas
inc
add
jne
cmp
in
xlat
jnp
jg
loop
xchg
dec
push
lcall
cmpb
cmp
xorl
incl
fcmovne
cld
test
lods
insl
cmp
push
leave
int
leave
add
loope
dec
mov
xor
aas
cmp
pushl
cld
sahf
clc
add
loop
testb
pop
push
add
sub
push
xor
pushl
jp
mov
xchg
adc
out
or
loop
jne
cmp
popa
sbb
jmp
lock
sub
xlat
ret
dec
fnstcw
ja
mov
inc
xchg
ss
call
in
scas
repnz
pop
bnd
test
mov
or
sub
sub
incl
mov
insb
bound
mov
imul
in
sbb
jmp
dec
pop
loope
pop
fidivl
cwtl
repz
add
nop
or
call
jno
mov
mov
incl
jbe
loop
push
gs
data16
test
mov
jg
ljmp
cmpsb
mov
xchg
xchg
ljmp
ljmp
js
fsubr
ljmp
mov
popa
repz
and
nop
pop
add
pop
in
call
decl
aad
inc
repnz
in
inc
sarb
es
pop
imul
fadds
jge
cli
fwait
or
daa
lret
sbb
pop
jo
jge
clc
pop
jns
decl
xchg
sbb
mov
pop
cmc
sub
push
mov
fistps
dec
push
lcall
cmpsl
push
dec
mov
subb
dec
and
pop
mov
push
rclb
lcall
jmp
pushf
loop
sub
popf
shll
stos
pop
fidivrl
jns
mov
xlat
and
dec
or
scas
mov
xchg
lcall
flds
mov
jle
fldl
dec
xchg
and
jg
mov
push
mov
xor
pop
ljmp
orb
sbb
adc
xchg
mov
call
aam
mov
mov
jg
jge
popa
xor
fsubl
fbld
sbb
test
jle
aam
mov
jne
mov
das
notb
push
popf
lahf
bound
cs
mov
stos
stos
ljmp
decl
inc
push
add
pushl
sti
pop
aam
mov
xchg
arpl
cmpsl
repz
or
adcb
enter
decl
sahf
and
lcall
iret
lahf
mov
mov
stos
push
sub
nop
pushl
cld
xchg
xor
sub
dec
push
repnz
lods
xor
sub
jmp
inc
lahf
pop
add
adc
sbb
and
push
lock
lea
call
insb
mov
pop
test
mov
scas
push
mov
cwtl
mov
lahf
in
jle
mov
jnp
iret
and
xor
push
aas
jp
inc
nop
sbb
int3
and
xchg
jp
insl
lods
sub
daa
xchg
imul
inc
ds
je
jge
jmp
or
lcall
sbb
shrl
inc
and
push
shll
shrl
mov
mov
addb
and
incl
in
dec
scas
pop
repz
sahf
loopne
and
push
sub
adc
mov
inc
in
add
sub
jmp
push
dec
sbb
xor
pushf
add
inc
and
mov
shlb
xor
shll
xchg
jl
rolb
fwait
add
lcall
call
fistps
out
rorb
aaa
imul
cmpsl
push
jns
fsubrs
jp
xor
add
jns
es
sub
loopne
jno
mov
push
scas
dec
or
xchg
cli
mov
gs
mov
into
or
jbe
adc
pop
pushl
ret
pop
and
add
mov
or
mov
decl
out
sbb
lds
mov
out
or
nop
push
int
add
sub
rcrb
in
mov
incl
aam
mov
iret
hlt
rcrb
pop
jo
or
cmp
mov
jne
dec
inc
test
decl
mov
aam
mov
test
mov
je
jg
ss
fildl
ljmp
xor
sar
xchg
outsb
incb
stos
xor
pop
js
mov
enter
jmp
pop
cmp
mov
push
cmpb
and
pushf
dec
lds
mov
rcl
ljmp
arpl
cmpsl
sub
pop
bnd
sbb
inc
bound
cmp
cmpsl
int3
or
dec
stc
sbb
das
in
jo
rcl
ljmp
sahf
loop
cmp
xor
lret
imull
sbb
jne
enter
leave
cmpsb
mov
inc
test
jmp
or
dec
lcall
and
testb
scas
mov
hlt
dec
addl
loop
dec
or
decl
jl
jbe
lahf
std
and
or
or
daa
push
jl
fmull
cmp
xor
pop
idivb
cmp
pop
lock
lahf
xor
in
fnstsw
xchg
clc
or
scas
in
iret
cs
jg
mov
xchg
mov
outsl
ss
xchg
pop
test
fdivr
iret
cli
mov
mov
std
out
lds
adc
jp
dec
daa
pop
fidivrs
out
mov
xchg
adc
jle
xchg
dec
test
push
jb
jg
fsubr
fnstenv
add
mov
sub
push
fs
and
adc
push
sar
call
das
bound
rclb
fs
xchg
js
fmull
sub
xor
fidivs
ljmp
mov
pop
mov
sbb
adc
leave
sbb
xor
xor
cmp
hlt
pop
cmp
stos
dec
cld
push
pop
and
ficomps
dec
outsl
movsb
mov
push
pop
lods
sbb
decb
into
dec
add
and
adc
aam
movsl
mov
repz
je
out
and
pop
jp
and
mov
and
shll
adc
jp,pt
cmp
xlat
mov
mov
hlt
cld
jns
cmp
popa
pop
mov
repz
mov
lds
std
jl
jnp
movsl
cmpsb
lods
rolb
inc
lods
sub
inc
add
out
addr16
sbb
loop
incb
adc
ficoml
test
mov
lcall
sub
fcoml
shl
jg
xorb
sahf
mov
xor
push
and
jecxz
dec
sbbb
ljmp
int
fidivrl
fs
js
xchg
mov
or
xchg
and
jg
cld
insl
sub
inc
inc
outsb
sub
push
mov
sbb
lock
cmpsb
loopne
and
lret
adc
pushl
cs
sarb
mov
push
dec
dec
fmulp
outsb
dec
mov
inc
dec
lea
icebp
hlt
sub
xor
mov
call
adc
jp
mov
test
test
push
and
outsl
xor
and
ljmp
adc
test
cltd
fdivrl
data16
hlt
xchg
sbb
mov
sub
lret
daa
incl
sub
adcl
xor
popa
push
pop
test
mov
shrb
outsb
jne
xchg
lock
fcmovne
adc
jmp
jmp
push
ljmp
jno
andb
fwait
in
idivl
cwtl
dec
mov
sbb
decl
mov
roll
dec
into
dec
cmp
add
adc
mov
xor
enter
clc
jmp
add
stos
pop
push
sbb
call
je
mov
dec
inc
sti
and
in
sti
sub
mov
sub
arpl
mov
pushf
xchg
daa
shrl
scas
ljmp
pop
cmpsb
adc
sbb
mov
rorl
shrd
mov
aaa
xchg
xchg
push
sbb
stc
je
out
cmp
into
imul
lcall
push
jnp
add
jne
and
int
xchg
fs
jl
scas
push
repz
mov
aaa
cld
lcall
adc
ret
imul
or
loope
std
sahf
popf
enter
push
shlb
adc
outsl
test
pop
push
out
xchg
incb
lcall
int
fsubrl
adc
loopne
push
xchg
orl
inc
test
inc
dec
call
sub
add
lods
fbld
in
cmp
pop
insl
xchg
xor
pop
pushf
clc
or
call
inc
xchg
fcmovnbe
jns
call
aam
mov
push
ljmp
popf
bound
xor
jbe
aam
lea
imul
popf
and
inc
pop
mov
mov
incl
gs
pusha
dec
out
add
and
mov
adc
mov
ljmp
scas
cmp
fwait
dec
push
pop
and
sbb
sbb
stc
lock
lahf
arpl
lcall
scas
xchg
or
sub
nop
xor
dec
cmpsl
mov
pop
lods
sar
jbe
scas
dec
sbb
lcall
pop
mov
add
push
sbb
repnz
jge
jo
subl
inc
jbe
add
mov
lcall
mov
or
ret
mov
push
fidivs
stos
incl
cltd
cmp
scas
xchg
cmp
xchg
js
popf
dec
and
in
cld
push
pop
sub
or
or
adc
movsb
sub
sub
xchg
outsl
push
bound
icebp
xchg
insl
hlt
push
sbb
ljmp
jne
and
test
mov
cmpsl
mov
mov
dec
mov
call
inc
dec
dec
add
arpl
xchg
ds
jmp
jb
out
int3
mov
aas
push
jb
sbb
mov
decl
es
test
mov
and
inc
mov
mov
fsubrs
int3
inc
xor
decl
jnp
inc
and
or
cmp
arpl
nop
sti
subb
call
fs
shll
fbstp
push
test
xchg
into
or
jge
rcll
iret
cmp
in
ret
mov
xor
mov
sbb
dec
call
jg
movsl
out
test
int
inc
xchg
push
pop
sub
jae
inc
sbb
clc
jg
jns
dec
mov
mov
cli
jmp
push
push
jmp
xor
sarb
jge
int3
cmpsl
nop
push
into
in
pop
lock
mov
es
std
arpl
pop
ds
push
mov
mov
lret
mov
dec
pop
jp
mov
push
cld
and
call
sbb
ljmp
clc
fs
frstor
sahf
arpl
cmpsl
fs
mov
in
test
lcall
in
push
ljmp
jmp
sbb
imul
int
pusha
pop
dec
aas
sub
mov
nop
sti
sub
fidivl
ljmp
cltd
xchg
mov
arpl
xor
pop
pop
popa
fnsave
movsb
push
arpl
jnp
push
push
sbb
add
cmp
leave
inc
mov
xchg
push
pop
mov
xchg
mov
pop
mov
call
push
pushf
dec
cmpsl
dec
sbb
hlt
or
lock
jbe
jg
mov
daa
enter
hlt
mov
mov
aam
push
push
addl
mov
jge
mov
clc
dec
outsl
sbb
mov
xor
mov
sub
incl
adc
sbb
mov
aas
jno
cmp
lret
sahf
sti
mov
inc
cmp
pushl
push
xor
imul
repz
lds
push
ljmp
pop
xchg
pop
ja
inc
push
iret
jae
jmp
ds
fdivs
jmp
sub
sbb
and
push
aad
arpl
add
call
mov
cmpsl
lcall
ljmp
nop
outsl
xchg
andl
sub
mov
movsb
and
and
dec
jno
mov
fnsave
data16
ja
aas
sahf
call
popf
data16
sub
in
mov
fsqrt
cltd
cmp
add
call
mov
test
and
mov
leave
sahf
or
ljmp
mov
adc
mov
insb
pop
xchg
in
pop
ljmp
lahf
lcall
xchg
incl
pushf
xor
and
lods
push
hlt
lret
call
aam
cwtl
not
stos
push
ds
ds
adc
dec
or
fidivl
sub
dec
insb
jns
inc
adc
mov
ret
mov
pop
hlt
inc
js
jge
mulb
sub
daa
push
mov
aam
arpl
test
incl
call
lods
mov
xor
pusha
orl
fwait
push
insb
aas
xor
ljmp
aad
xchg
xchg
inc
leave
addr16
iret
nop
mov
dec
push
sbb
push
aad
sub
sbb
fisttpll
jp
sarb
mov
inc
adc
or
xchg
sti
lods
fstl
xchg
and
pop
dec
ficomps
jb
jp
jmp
lcall
mov
mov
nop
sbb
andl
mov
repz
push
push
push
and
lcall
xor
pop
getsec
shrl
bnd
ljmp
es
dec
out
pop
adc
sbb
jno
xchg
loope
mov
in
cmp
jmp
adcl
testb
movsl
outsb
inc
movsl
push
sbb
push
mov
push
pop
ljmp
clc
mov
pop
aam
xor
cmp
mov
imul
popf
sar
add
in
mov
sbb
lods
sahf
jo
in
sub
adc
das
sahf
fadds
call
hlt
xchg
or
push
data16
rcrl
pop
divl
movsb
int
fcmove
cmp
jmp
dec
ss
jg
ljmp
jbe
xchg
cwtl
bound
pop
lcall
push
cmpsb
cmp
ljmp
negb
imul
out
inc
jnp
xchg
ljmp
fiadds
mov
jmp
adc
fistl
adc
fbld
sbb
push
mov
jns
mov
test
push
or
mov
fsubrl
push
aaa
fistps
xchg
dec
or
or
sbb
jmp
shll
ss
mov
out
push
into
pop
mov
mov
push
pop
adc
sub
cmp
or
jg
jmp
sti
xchg
mov
mov
bound
lcall
inc
rol
jp
jg
pushl
fcoml
xor
mov
dec
jo
fsubrs
or
mov
fistl
inc
movsb
or
mov
addr16
and
push
jb
jb
sbb
or
jg
mov
mov
fcomps
decl
dec
or
leave
mov
shlb
fdivrl
mov
push
fwait
cmp
fs
fisttps
cmp
adc
dec
pop
dec
fidivrs
insb
pop
xchg
cmp
inc
mov
cs
mov
mov
pop
ror
push
pop
mov
and
or
jmp
je
add
testl
test
mov
movsb
dec
aaa
mov
push
in
nop
fs
repz
jg
or
dec
fld
cmpsb
xlat
loope
jns
in
test
stos
push
fwait
inc
xchg
fdivl
cmp
mov
push
or
inc
sub
add
push
lcall
test
pop
aam
xchg
pushl
decl
adc
rclb
jbe
dec
fimuls
jae
fdivr
mov
ljmp
stos
adc
call
pop
inc
push
aad
inc
jge
loopne
or
fwait
icebp
xchg
mov
ds
jmp
cmc
sbb
test
sbb
pop
mov
cltd
outsb
cwtl
and
int
add
out
dec
fimull
movsl
dec
lds
and
ja
adc
add
push
sbb
imul
jmp
sbb
jecxz
testl
cs
cmp
sbb
push
xor
or
push
loop
or
pop
sub
rcll
daa
inc
adc
add
or
and
ljmp
push
jne
or
inc
or
aad
xor
in
pop
lods
mov
add
test
sbb
cld
je
rcrb
dec
dec
and
in
push
loopne
scas
test
cmovno
push
dec
movsl
lods
push
sub
sahf
or
movsl
push
inc
mov
cli
sub
pushf
inc
xor
mov
mov
or
fldenv
clc
adc
pop
mov
sbb
gs
andb
sub
aam
mov
xchg
dec
xchg
xlat
lods
insb
xor
out
in
pop
je
cmp
ret
flds
repnz
xor
dec
ljmp
fs
pop
js
ret
push
adc
mulb
push
stos
push
loopne
fs
decl
and
mov
xor
decl
or
mov
pop
hlt
decl
add
mov
jge
std
insl
push
jae
lcall
ljmp
xor
mov
in
add
sar
call
mov
leave
je
inc
xchg
clc
adc
xchg
jae
test
pop
cli
sbb
dec
outsl
cli
jmp
rcr
ja
jg
and
popf
sbb
add
ljmp
sub
fwait
or
push
mov
popf
and
inc
out
fdivs
mov
rorl
or
pop
pop
mov
sahf
xor
in
pop
pop
or
jg
cli
push
lret
movsb
push
ljmp
jmp
and
dec
push
hlt
pop
pop
dec
add
scas
add
int3
xchg
mov
test
rcrl
mov
int
jle
repz
or
mov
mov
aaa
scas
mov
aaa
mov
jno
cmp
mov
jo
jecxz
ss
int3
add
lcall
and
ds
addr16
mov
jb
inc
inc
lcall
and
decl
imul
sti
dec
lret
ja
pop
fcmovnb
popf
inc
mov
xor
incl
dec
push
xchg
jnp
shr
cwtl
maskmovq
testl
dec
lahf
xchg
inc
cli
add
incl
cltd
dec
cmovb
cs
pop
jae
and
mov
pop
pop
aaa
dec
and
ljmp
xor
or
cmp
or
ljmp
cmpsl
cmp
inc
ficomps
mov
mov
and
scas
adc
fstpl
lock
lds
scas
clc
dec
addr16
xchg
sub
mov
mov
fdivl
sub
mov
test
out
cmp
cmp
arpl
cltd
and
add
mov
shlb
jnp
pop
lods
xor
mov
clc
mov
test
out
push
sbb
cld
fwait
cmc
inc
pop
insb
push
cld
cmp
inc
mov
movsb
decl
subl
cmp
mov
or
mov
test
push
push
sahf
push
leave
incl
mov
lods
fdivrl
mov
mov
pop
std
lcall
sahf
or
mov
clc
sti
popa
pushf
jne
sub
and
mov
or
mov
adc
jae
adc
jno
or
or
sar
inc
es
iret
popa
das
jmp
sbb
mov
jno
cmpsl
inc
mov
cmp
jmp
scas
sub
int3
jecxz
mov
into
mov
iret
adc
fdiv
sbb
mov
and
ljmp
aad
loop
ret
and
cmp
mov
push
mov
pushf
fidivrl
lahf
movsl
push
popa
in
xchg
fsts
mov
xor
fwait
daa
ljmp
jae
jbe
cld
mov
mov
scas
push
stos
mov
dec
xchg
lcall
shrl
lahf
mov
or
ret
mov
jg
cmc
mov
pop
lock
push
mov
and
notb
sbb
lea
pushl
mov
ror
and
jmp
sbb
mov
xor
cmp
push
push
sahf
in
fsubrl
cmp
idivl
adc
arpl
sahf
jbe
lods
call
cs
mov
pushf
repnz
sbb
in
shrl
dec
call
jmp
and
mov
push
jns
adc
mov
mov
leave
push
scas
or
ljmp
repnz
dec
sub
shlb
andl
fsubl
cmp
call
movsb
pop
inc
mov
dec
hlt
insb
scas
pop
or
add
cmp
pushl
fwait
les
jmp
out
lock
pop
add
outsl
add
mov
push
inc
lahf
cmp
loop
iret
ja
in
add
adc
lcall
mov
hlt
push
dec
cmp
cmp
int3
fsubl
adc
sbb
decl
jno
cltd
imul
and
jge
ficompl
fidivrl
add
fwait
jmp
cmpsb
dec
mov
sbb
inc
add
and
lods
pop
add
out
inc
idivl
jmp
xor
xchg
sub
mov
cltd
lods
pop
call
out
xor
cmpsl
decl
jmp
clc
cmpsb
test
mov
xor
test
and
or
pop
ds
lcall
ficomps
sbb
xchg
push
fsubrs
xor
scas
xor
daa
fsubr
stc
push
rcll
in
sarb
push
notb
lods
lret
pop
adc
int
push
dec
std
mov
sti
clc
sarl
out
ds
add
ficoms
clc
in
xchg
xchg
xchg
repz
out
rclb
jge
ljmp
lods
add
mov
jmp
lret
mov
repz
or
sbbb
dec
stos
fisubl
gs
je
rorl
out
test
icebp
ss
movsl
movsl
std
push
mov
adc
jg
dec
jecxz
xchg
pop
lcall
pusha
fwait
es
es
jmp
call
stos
xchg
and
adc
outsl
lods
aaa
xlat
add
push
or
insb
dec
lahf
sub
call
inc
addl
mov
sbb
addr16
stos
inc
pop
lock
mov
pop
mov
pop
call
cld
in
divb
xchg
sub
cs
das
xchg
lcall
ror
xchg
dec
aaa
std
decl
mov
outsl
xchg
pop
out
pusha
loope
dec
xchg
dec
and
cmpsb
movsb
in
ss
in
mov
mov
push
aam
push
xor
fbstp
scas
fwait
add
adc
pop
push
jmp
jmp
bound
lahf
xor
mov
lods
shll
inc
mov
sbb
aam
mov
ljmp
int
rolb
mov
std
jae
adc
stc
insb
ret
inc
cmpsb
mov
push
dec
int
xor
sarl
mull
dec
inc
jns
stos
movsl
je
or
call
pop
inc
stos
adc
mov
hlt
pop
repz
leave
insb
xchg
icebp
or
fwait
mov
sti
add
clc
int
mov
sbbb
pushl
push
push
std
xchg
jp
pop
xchg
push
sub
iret
jb
jp
fdivr
add
addr16
incl
fbstp
imul
xlat
jl
sbb
sbb
add
jg
mov
push
push
pop
pusha
sub
push
adc
mov
cmp
jmp
jnp
mov
cmp
mov
or
js
lret
mov
jle
adc
mov
xchg
dec
cmpsb
lret
or
lret
jle
test
jb,pn
hlt
outsb
insb
test
mov
into
add
jg
cmpsl
daa
lcall
mov
xor
push
xchg
fnstsw
roll
mov
loope
sbb
leave
insl
or
ds
cltd
rolb
inc
mov
mov
mov
mov
pop
pop
mov
decl
lret
lretw
int3
mov
insl
outsl
repnz
negb
imul
sbb
mov
jmp
mov
xor
push
xor
xchg
lahf
lret
or
jo
pop
cmp
loopne
add
test
mov
adc
adc
sbb
outsb
fbld
scas
ljmp
movl
sbb
xchg
lea
push
loope
hlt
pop
inc
sbb
movsl
and
mov
cmp
loopne
imul
or
test
aaa
xor
pop
mov
mov
xchg
mov
mov
stos
call
ljmp
jno
in
dec
test
and
es
push
mov
int
xchg
clc
outsl
pushl
ljmp
out
adc
push
cmpsb
cs
mov
mov
cmp
divb
incl
out
jno
push
xor
ja
test
stos
inc
test
iret
lahf
fstps
and
stos
fdivp
scas
aam
mov
jle
fnstcw
rcll
les
aad
adc
fwait
lcall
jo
xchg
nop
mov
call
dec
mov
lods
xchg
in
pop
lcall
xor
or
xor
push
loope
push
cs
mov
xchg
mov
in
push
pop
cs
xchg
inc
jg
decl
push
mov
xor
movsb
jge
mov
enter
jb
movsb
fdivp
pushl
rol
and
dec
mov
sub
cmp
cli
loope
dec
dec
jg
out
jo
pusha
out
scas
cltd
add
aam
xchg
push
and
ljmp
mov
cmpsl
fdivrs
pop
or
hlt
jmp
push
cmp
aad
jg
push
adc
push
xchg
rcl
mov
fildll
cmp
jecxz
add
or
sub
jg
ljmp
xorl
xor
push
add
clc
aad
pop
mov
dec
cs
push
or
ficompl
in
adc
rcl
add
call
stos
add
push
or
das
adc
cld
mov
loop
dec
adc
cmc
iret
leave
imul
shrl
arpl
in
add
repnz
mov
xchg
adc
lcall
xor
std
jmp
xlat
push
inc
jnp
or
sub
addr16
mov
sbb
dec
cld
pushl
sub
mov
sbb
pop
mulb
dec
sub
test
dec
sbb
popf
call
sahf
push
sub
fidivs
aad
incb
sub
mov
jns
inc
stc
dec
mov
out
imul
mov
fmuls
shl
bnd
int
xchg
lds
incl
int
gs
push
movsb
ljmp
sbb
es
rolb
imul
push
and
pop
jno
jne
push
cltd
mov
pop
repnz
xor
add
call
sbb
test
test
inc
fmuls
cmpsl
fisttpll
xchg
pop
jne
cwtl
lret
mov
aas
sar
cmp
push
ds
xor
jl
or
out
fldl
ljmp
pop
cmpsb
sub
aam
xchg
sub
jmp
aam
mov
jg
xchg
cmp
and
push
aas
xor
mov
cmpsb
mov
ljmp
dec
ret
ds
jecxz
cmpsb
push
sbb
sbb
mov
lret
pushf
in
adc
sahf
inc
repnz
xorb
into
xchg
inc
fisubs
cmp
adc
outsb
das
and
push
test
inc
add
cmp
das
cmp
jne
nop
cwtl
fs
sub
testl
pushl
dec
fcomip
shl
jp
push
or
daa
mov
mov
repz
pop
pushf
fcomip
jmp
icebp
ja
and
lahf
sahf
fwait
shll
xor
es
ror
inc
cmp
call
push
pop
fsubl
fwait
sub
pop
sbb
les
inc
mov
jge
mov
std
push
fdivrl
leave
or
pushf
xor
xchg
popa
test
lcall
mov
mov
aad
aad
mov
clc
call
cmpsb
stos
mov
decl
inc
xchg
lret
lret
jp
lock
xchg
and
xchg
call
and
negl
sbb
inc
stos
shll
xchg
addb
sbb
jmp
lret
jle
dec
popa
into
rclb
cwtl
sarb
pop
push
nop
pop
cmpsb
xchg
jecxz
fs
decl
dec
mov
ss
popf
pop
mulb
add
xchg
or
cmp
bound
lcall
fs
adc
mov
dec
adc
push
fmuls
sub
fs
mov
lret
scas
cs
test
mov
and
xchg
add
dec
mov
adc
mov
scas
push
mov
test
jno
xchg
pop
call
lea
ud0
cmp
xor
and
lcall
mov
int
or
in
add
xchg
pusha
repnz
dec
xchg
sub
decl
ljmp
adc
decb
lcall
das
or
shlb
lcall
mov
push
cmc
imulb
loop
add
nop
out
cmpsb
or
mov
lcall
ret
dec
into
jo
sar
mov
lcall
arpl
or
add
rcrl
stos
inc
mov
lret
sar
xor
add
movlps
pusha
mov
pushl
mov
mov
cmc
adc
and
push
or
outsl
hlt
cmp
dec
mov
mov
aas
jbe
hlt
lahf
xlat
jl
aaa
lock
pop
inc
add
in
or
cmp
mov
dec
cmp
add
addr16
inc
je
scas
adc
ljmp
push
mov
cmp
add
mov
bound
pop
ljmp
sar
testb
push
decb
sbb
clc
lds
mov
cmc
or
pop
cmpsb
push
dec
cmovne
dec
mov
sbb
pushl
aaa
sub
or
fs
iret
dec
insl
shlb
xor
incl
xor
out
imul
pop
es
jg
pushf
cmc
inc
scas
sbb
pop
jle
push
inc
lods
jns
aas
ja
ret
mov
data16
decl
ljmp
cmp
addr16
icebp
jp
or
and
sub
js
push
popa
in
lods
test
dec
mov
bound
arpl
jno
cmp
or
mov
divb
xor
in
adc
pop
int
fwait
fcmove
adc
and
push
xor
or
sti
rol
int3
jo
jmp
clc
dec
or
out
out
and
cmc
enter
mov
repnz
jg
les
jmp
sbb
into
lock
dec
fnstsw
jb
test
lds
xchg
dec
dec
imul
inc
loopne
push
jg
stos
push
mov
push
cwtl
ljmp
sbb
adc
push
jo
xor
daa
cmpsl
insb
dec
mov
dec
mov
mov
dec
dec
dec
sbb
pop
pop
out
fwait
pop
fistps
lods
rcr
adc
outsl
jg
hlt
stc
fdivrl
or
xor
sub
mov
jmp
cmc
cli
rclb
xchg
jp
pop
fstps
xchg
stc
push
mov
ja
cmp
rolb
jle
mov
mov
ds
sti
mov
in
sbb
push
cld
call
dec
sbb
xlat
sbb
jp
sahf
pusha
andb
jg
xor
inc
dec
cli
or
xor
sbb
adc
clc
int3
ss
push
xor
rcrb
mov
push
fsubl
out
mov
jmp
cli
xlat
mov
sub
in
sbb
push
decl
adc
fisubrs
xlat
fbld
call
dec
lds
pop
lods
cmp
loop
push
test
bound
fwait
sbb
sub
inc
xor
call
jmp
ja
imul
push
xor
xor
or
mov
mov
cmp
int3
repnz
pushl
mov
jg
pushf
or
mov
movsb
test
mov
lcall
mov
xchg
pop
ljmp
inc
insb
cs
jmp
mov
decb
jno
iret
pop
cltd
hlt
fisubrl
cmpsb
xor
les
incl
xor
std
je
add
insb
inc
cwtl
insb
mov
inc
fnsetpm(287
and
scas
cli
mov
mov
ss
sub
jae
scas
pusha
divb
stos
js
jae
fwait
je
in
dec
push
fs
data16
fcmovnbe
aaa
inc
icebp
movsb
daa
repnz
imul
lcall
sub
pop
movntq
out
mov
mov
aaa
dec
dec
adc
std
rorb
decl
js
orl
push
cwtl
je
loopne
js
call
test
xchg
push
test
xchg
cltd
fwait
in
adc
mov
mov
add
decl
mov
jg
adc
imul
ja
iret
mov
mov
insb
call
mov
sub
or
cmp
mull
pop
xchg
cmp
lcall
mov
cmp
xchg
xchg
mov
pop
jmp
xor
push
cld
push
xchg
je
ficompl
mov
and
push
and
dec
add
ss
call
hlt
ljmp
lret
subl
vpunpcklqdq
push
or
add
adc
push
out
rorl
stos
or
push
arpl
adc
insl
fiaddl
les
adc
ljmp
adc
mov
pop
or
loope
adc
mov
aam
inc
ficompl
xchg
int3
mov
adc
xor
lcall
xchg
sub
mov
ret
aad
jb
lock
lret
jle
out
lret
pop
divl
loope
push
mov
addr16
or
out
loopne
sbbb
inc
cltd
test
mov
incl
xchg
jae
andl
sbb
movsb
shrl
mov
xchg
dec
imul
jno
xor
decl
push
cmpsl
or
outsl
push
cltd
rcr
pop
imul
mov
ljmp
ret
pop
lock
movsb
mov
inc
adc
sbbb
stc
lcall
dec
cmpsl
test
cli
sub
sub
dec
adc
jle
ficompl
cmpsb
mov
in
pop
pushl
out
cmc
mov
mov
lret
outsb
cmpsb
cmp
in
ret
addb
mov
in
inc
out
mov
decl
xor
jno
ljmp
lcall
lds
xchg
adc
add
xor
ljmp
pushl
das
xor
adc
jnp
out
lret
jb
imul
subl
and
int
inc
jb
lods
mov
mov
push
daa
sbb
mov
mov
adc
jmp
add
add
cwtl
out
sbb
add
dec
jb
push
rcrb
int3
cmp
incl
enter
push
or
xor
push
push
jns
sbb
mov
jg
mov
fmul
mov
testb
and
add
xchg
pop
push
xchg
and
cmp
push
shlb
add
outsl
sub
adc
mov
ljmp
mov
loope
push
insb
into
addr16
imul
mov
rclb
and
cmp
leave
add
inc
xor
jae
adc
repz
rol
sbb
push
mov
cli
mov
jns
loope
and
add
es
jle
xchg
push
mov
jne
cmp
dec
pop
test
cmp
pop
and
push
cwtl
sbb
iret
addr16
and
cmp
lds
enter
test
fisttps
xor
push
xchg
test
dec
daa
and
test
jmp
aad
add
das
push
scas
pop
adcl
psubd
test
jecxz
enter
incl
cmp
fwait
mov
out
hlt
cld
inc
xchg
icebp
inc
push
xor
adc
nop
jle
filds
in
mov
insb
add
std
mov
mov
rorl
les
sub
xor
aas
pop
in
or
cmc
xlat
or
xor
outsl
jno
pop
add
dec
mov
mov
fiadds
xor
sbb
leave
mov
inc
add
cmc
ror
aas
fwait
cmc
ljmp
std
jg
movsb
mov
push
in
movsl
jg
fimull
inc
call
aas
jl
and
pop
pop
jb
cmc
daa
and
pop
pop
xchg
cltd
adc
lea
pop
mov
call
xorl
or
jbe
cld
xchg
xchg
push
out
jmp
dec
inc
lea
idiv
jmp
shl
test
bound
cmpsb
adc
pusha
jno
fbstp
jg
inc
into
mov
stc
push
sub
stos
pop
sbb
mov
lea
addl
inc
dec
je
mov
push
push
imul
sbb
mov
ret
fisubrl
xor
mov
inc
sti
xchg
mov
imul
movsl
pop
ds
push
mov
adc
jecxz
inc
call
paddsw
sub
jg
mov
fnstcw
mov
loopne
out
adc
mov
cmp
test
jo
andl
mov
cmp
sbb
fdivs
sbb
and
flds
jg
addr16
jmp
and
in
inc
jge
repz
xchg
jbe
xchg
out
dec
mov
cmp
xchg
pop
scas
push
ljmp
clc
dec
cmp
idivl
mov
mov
fst
imul
je
in
lcall
xorb
loope
fiadds
mov
insl
and
mov
cmp
mov
aaa
or
fcmovne
mov
adc
lret
jge
xor
popf
sub
cmp
sbb
push
fistl
loop
mov
sarb
stos
push
fs
dec
lea
ljmp
push
aam
loopne
xlat
adc
lock
decl
daa
lahf
loop
or
pushf
je
imul
leave
adc
outsb
lret
add
sub
ret
scas
cld
pushl
cmp
inc
and
adc
xchg
js
popf
or
into
cld
lcall
ljmp
clc
scas
mov
mov
jae
notb
mov
fcomip
incl
cmpsb
mov
fisttpll
enter
or
xchg
sbb
ret
and
ljmp
js
push
pop
cltd
pop
adc
jge
pop
lods
data16
dec
in
movsb
xchg
ljmp
jo
cs
cwtl
pusha
mov
xlat
scas
gs
flds
decb
sti
cmp
sahf
inc
mov
push
popl
sub
cmp
adc
sahf
jge
pop
or
aad
cld
outsb
les
pushl
mov
jg
icebp
das
daa
out
pop
iret
or
mov
mov
add
mov
xchg
jmp
mov
test
int
movl
sbb
jg
decl
insl
sbb
sub
and
loop
xor
out
push
cmp
adc
mov
add
xor
test
fcoms
test
cmpb
xchg
mov
incl
mov
sbb
popa
andl
test
inc
push
or
sbb
sub
ljmp
push
mov
fidivrl
das
push
mov
push
popf
icebp
jl
dec
stc
shld
aad
decl
packsswb
inc
or
jp
leave
repz
orb
leave
mov
call
pop
ss
in
cmp
pop
pop
xor
psubb
pop
dec
lock
mov
repnz
cmpsl
scas
shlb
in
insb
pop
sbb
mov
push
test
cmc
mov
mov
inc
add
aas
pusha
and
pop
rolb
rolb
mov
incl
sahf
movsb
mov
dec
mov
and
mov
mov
cwtl
and
push
cld
call
cltd
jp
mov
dec
out
push
dec
lcall
mov
fsubrp
pop
and
cmp
daa
notb
into
jno
fidivs
pop
loopne
mov
aad
pop
and
stos
mov
dec
test
xor
mov
lcall
repz
pushf
cli
jle
fwait
lods
dec
stos
cmp
cmp
push
pop
adc
call
arpl
fisttpl
sbb
adc
and
repz
xor
xor
ljmp
inc
mov
iret
lods
push
das
xchg
pop
mov
jnp
mov
xchg
dec
rorb
lcall
pop
in
bound
stos
es
sbb
sbb
fcomi
popf
inc
rolb
gs
pushl
icebp
fcomip
or
push
lock
inc
inc
lret
jg
or
popf
adc
mulb
aas
and
lcall
mov
dec
das
rorb
xor
sbb
lods
iret
les
out
xchg
lahf
and
dec
enter
imul
movsl
add
iret
imul
inc
jge
pushl
data16
adc
test
sub
inc
push
insl
push
sub
enter
shlb
movsb
sbb
dec
loopne
add
cmp
or
rorl
pop
xchg
insb
mov
cmp
icebp
cmp
inc
enter
cli
pop
add
add
addr16
sti
adc
mov
jecxz
push
das
mov
scas
lods
pop
mov
push
mov
jmp
call
aam
xchg
or
adc
ret
jg
and
jnp
inc
std
pop
daa
leave
adc
mov
call
add
push
lds
sub
jg
mov
fs
cmp
lret
icebp
aad
sub
aas
pop
push
scas
in
sbb
pushl
xchg
xor
add
mov
sbb
es
sbb
xchg
fdivrp
mov
aam
pushl
fs
fildl
sahf
sbb
sahf
stc
rep
mov
lret
jg
mov
repnz
mov
push
cmpb
nop
add
pop
pop
cli
pushf
jo
inc
ret
and
incl
lds
popa
nop
lods
add
mov
ljmp
sbbl
xchg
fldl2e
ja
pop
push
cmp
mov
iret
insl
jmp
adc
incl
cltd
je
pop
xor
jp
push
push
mov
sub
bound
dec
push
or
es
in
jmp
xchg
ljmp
hlt
jle
push
lds
lret
mov
push
mov
jmp
pop
lds
imulb
mov
fwait
mov
pop
aaa
jge
add
rcrl
mov
loopne
incl
orl
pop
sub
es
nop
sub
inc
mov
jae
adc
frstor
mov
insl
xor
nop
adc
ljmp
adc
xor
dec
in
push
add
jno
push
push
mov
inc
push
jae
push
mov
pop
popa
cmp
mov
mov
rol
jg
fs
loop
pop
into
sbb
dec
fldenv
inc
jbe
incl
or
inc
jp
dec
inc
cmpb
pop
xlat
push
pushl
cmp
lods
ret
mov
popf
mov
in
pop
xchg
jle
divl
js
sub
outsl
cli
incl
ss
lods
mov
add
xor
mov
xor
decl
popa
pop
pop
lea
pushf
in
mov
leave
inc
xor
adc
cmp
ljmp
hlt
sti
jmpw
int
fisttpl
in
addr16
cmp
jle
frstor
cmp
jp
scas
cmp
inc
ret
jnp
mov
mov
push
mov
aam
cwtl
mov
or
mov
pop
mov
mov
dec
and
push
inc
ds
mov
mov
pop
popf
mov
popf
out
jmp
pop
pop
jmp
bound
add
lods
jo
test
ja
xor
ret
out
cmpsl
nop
pushf
lahf
lock
jg
fbstp
mov
movsl
pusha
lock
adc
jae
or
sbb
xchg
test
orl
cmc
push
mov
fwait
push
sub
and
push
add
jmp
out
jbe
add
mov
fstl
outsb
or
js
fists
sbb
lahf
mov
jmp
or
jl
call
cld
cmc
push
fcoml
aas
fisubs
push
ljmp
call
inc
jg
push
mov
loope
cli
xchg
mov
cmovs
sbb
xor
jle
push
and
popf
sbb
daa
cmc
mov
mov
xchg
call
std
mov
cmp
sub
imul
shll
xchg
jb
incl
sbb
sub
mov
push
or
shlb
or
mov
lods
fwait
add
movsl
bound
inc
push
jae
enter
test
shll
mov
xchg
xchg
cs
rcll
mov
test
out
ret
mov
in
dec
ljmp
mov
fwait
in
and
bound
xchg
jbe
pop
dec
pop
clc
into
pop
xor
pushf
sbb
mov
xchg
add
jg
std
mov
adc
and
fldl
mov
lcall
and
rcrl
add
ja
orl
or
cmpsb
pop
ds
mov
fcomip
in
sbb
outsl
popf
xor
popa
dec
lods
inc
inc
hlt
incl
movl
loop
inc
rcl
pop
push
popf
dec
or
mov
cmpsl
mov
lcall
sub
or
popf
adc
ds
push
sbb
adc
jmp
lcall
and
mov
adc
imul
push
sbb
ret
cld
mov
push
xor
xlat
in
decl
mov
pop
adc
adc
lock
add
add
jecxz
fcos
call
add
cmp
in
jne
fwait
daa
cld
cmp
out
out
cmp
sbb
loopne
dec
hlt
cmp
lcall
cmp
rorb
sahf
push
andb
je
ljmp
nop
pop
xchg
leave
outsl
sub
dec
mov
mov
outsl
clc
jl
cmp
fcomp
loopne
push
out
adc
in
sbb
sahf
pop
std
mov
scas
lcall
or
lahf
jo
inc
push
ljmp
mov
cmp
jge
incl
jnp
call
mov
in
and
mov
xchg
ljmp
xor
pushf
pusha
jp
subb
aas
push
jne
insb
jecxz
dec
out
loop
fucomi
sar
pop
loopne
leave
xor
xor
adc
push
mov
push
xor
adc
adc
xchg
or
fildl
stos
mov
clc
inc
sub
mov
inc
lret
outsl
dec
add
ljmp
sarb
cltd
xchg
xchg
xchg
xchg
mov
and
mov
inc
jne
lcall
xchg
pop
addr16
iret
outsb
ret
mov
and
jp
and
repnz
pop
aas
mov
push
inc
addb
inc
push
mov
out
sbb
sti
cmpsl
lret
xor
or
dec
sbb
ljmp
fsts
or
cmovle
cld
mov
incl
pop
je
jnp
out
mov
sub
push
mov
pop
pop
ret
mov
fs
hlt
jmp
cmpsb
incb
ret
jecxz
mov
cwtl
shrb
add
faddl
mov
movsl
int3
jmp
sub
ja
in
add
icebp
imull
mov
lea
cld
jmp
or
cltd
pop
xor
xor
cmc
sub
gs
mov
ljmp
mov
xorb
cmp
dec
pop
and
shlb
sbb
mov
push
incl
outsl
adc
adc
inc
jae
clc
pop
cmp
sarb
jmp
mov
rcr
incl
push
repnz
loopne
xchg
dec
leave
mov
jle
aaa
inc
neg
insb
dec
cltd
insb
test
movl
shll
int
inc
or
mov
or
push
pop
fiaddl
push
sbb
fisubl
incl
int
mov
leave
push
lcall
test
pusha
hlt
insl
cwtl
hlt
sub
ja
jl
and
clc
pusha
jne
mov
ja
sub
incl
xlat
aam
cli
adc
rclb
xchg
fcoms
mov
mov
jg
incl
out
xor
jb
sbb
jo
cs
mov
add
dec
sahf
or
mov
mov
jo
fs
stc
iret
sbb
decl
sub
fsubrs
push
fcomi
mov
mov
dec
decl
pop
sub
jno
pop
lods
scas
jg
sub
inc
add
je
mov
jmp
lods
xchg
fdiv
mov
push
subb
lahf
neg
jns
and
mov
outsb
dec
es
mov
test
mov
mov
jne
pop
sar
lcall
jle
mov
mov
pusha
fucomp
push
add
mov
hlt
cs
jle
mov
call
lret
cmp
loopne
sahf
cwtl
test
xchg
cs
jnp
push
mov
add
sar
cmp
add
push
xor
in
outsb
sbb
gs
lcall
mov
out
add
dec
sbb
inc
xchg
sbb
out
out
adc
mov
ljmp
xor
pusha
sub
popf
mov
rcl
stc
jb
lods
incl
jno
insb
mov
push
sbb
mov
cs
int3
jp
outsl
sub
jb
dec
cld
les
in
mov
push
imul
ljmp
push
mov
imulb
mov
dec
fs
icebp
xchg
jbe
mov
loopne
adc
or
movsb
aas
mov
adc
fst
out
jg
in
pxor
jle
jne
ss
xor
ljmp
push
xor
mov
inc
inc
frstor
stos
outsb
jo
jnp
pop
setg
popa
mov
jl
cmp
pusha
jl
and
add
cvtdq2ps
dec
and
call
mov
and
jg
cli
or
ss
inc
movsb
push
scas
es
decl
jnp
leave
mov
les
rclb
sahf
aad
sub
inc
rorb
clc
incl
pushf
mov
mov
push
pop
inc
jle
jae
mov
ljmp
das
xchg
repnz
xchg
mov
divb
js
and
adc
call
cld
insb
adc
jmp
dec
mov
jbe
pop
enter
gs
sarl
repz
add
pop
out
int3
std
xor
push
fists
sbb
dec
jmp
call
dec
dec
ret
push
add
jle
dec
mov
mov
sub
in
mov
push
inc
out
pop
jmp
loope
push
pop
jne
in
sub
adc
aam
mov
shrl
pusha
mov
hlt
pop
je
jp
into
jmp
mov
inc
add
lret
mov
or
cld
lret
fmull
jecxz
sbb
lods
mov
mov
movsb
mov
pop
jnp
pop
ss
inc
rolb
ret
mov
jno
add
js
ljmp
popa
mov
cmpsl
mov
mov
ret
out
insb
push
mov
fcos
decl
sbb
mov
js
outsl
and
fs
jns
adc
fwait
aaa
adc
incl
aaa
pop
add
fsubr
jmp
xchg
inc
jg
adc
xchg
mov
mov
or
incl
pop
popa
sub
add
mov
hlt
sbb
adc
popa
pop
pop
push
inc
icebp
jmp
decl
jle
push
cmp
pop
add
dec
out
xchg
adc
or
mov
sub
sbb
ds
pushl
jle
mov
mov
loope
fbstp
lea
push
popa
xchg
cmp
jmp
xor
inc
jb
xchg
jo
sbb
jmp
pop
cmpsl
mov
and
and
fdivs
cltd
and
rcll
dec
mov
roll
jno
mov
decb
pop
idivb
inc
in
jmp
aam
cld
outsl
jmp
pop
and
je
into
xchg
hlt
orl
dec
jmp
mov
rorl
sbb
add
or
jg
in
mov
xor
scas
fwait
popa
shrl
and
push
lret
imul
loopne
jmp
dec
int3
fiaddl
es
dec
lds
popa
mov
dec
jno
int3
and
testb
xor
inc
jecxz
xchg
inc
es
mulb
mov
adc
push
outsb
leave
out
imul
fisttpl
movb
sarb
mov
mov
cwtl
lret
incl
cmp
push
xchg
cmc
shl
mov
push
outsl
imul
ja
or
push
std
push
ret
addb
push
movl
into
repz
lahf
in
xchg
popf
mov
push
shlb
gs
jl
push
out
lahf
inc
jnp
lea
cli
xchg
fildll
inc
pop
dec
imul
neg
mov
out
ja
pushl
mov
into
xor
pop
leave
xlat
pop
cmc
jmp
test
call
cmpb
xchg
pusha
out
xor
aas
cmp
fwait
adc
ret
data16
cmpsb
ret
push
call
scas
jle
aaa
jmp
cli
push
ror
out
mov
dec
sub
fs
call
int3
mov
out
cli
rorb
std
push
mov
movsb
sub
xor
pushf
sub
decl
mov
add
jg
adc
or
orb
sbb
into
lock
fisubrl
rclb
ljmp
xor
aad
in
xchg
sbb
repz
in
push
push
cld
pushf
xor
decl
lock
rorl
outsb
or
sub
int3
int3
cmp
incl
jl
add
nop
cmc
mov
sub
lret
dec
xor
mov
lcall
rorl
xchg
adc
xchg
pop
aad
mov
jg
imul
stos
inc
lahf
mov
scas
addr16
xchg
out
addr16
and
out
ja
ljmp
mov
shrb
sysenter
add
int3
adcb
cmc
xor
dec
xor
sbb
popa
jnp
inc
push
insb
add
sub
pushf
push
stc
movsl
mov
push
jbe
jns
imul
clc
fisubl
scas
inc
test
das
cmp
mov
das
decl
and
lcall
pusha
cltd
pop
jns
push
imul
pop
aam
lret
adc
and
jns
pop
dec
cmp
mov
cmp
jmp
xorl
add
jle
pushl
jle
sbb
lods
sbb
aam
cmp
and
pop
jmp
ss
lock
shl
cmpsb
out
mov
adc
push
das
out
adc
jecxz
or
push
sbb
add
mov
and
push
decl
mov
or
cmp
lret
xlat
mov
lods
test
stc
pushl
pop
add
jb
iret
inc
inc
pop
ljmp
pushf
lret
push
push
or
cltd
decl
add
dec
scas
addl
mov
js
fdivp
insb
jmp
sbb
repz
push
shl
push
cmp
shlb
mov
mov
scas
pop
mov
arpl
add
adcb
sub
xor
fsubl
in
push
jmp
jmp
pop
or
insl
mov
and
dec
jae
test
incl
test
das
pop
sbb
out
into
xchg
out
in
push
jl
shll
jae
and
hlt
decl
lcall
add
adc
xchg
fiaddl
inc
and
mov
dec
push
pusha
outsl
sbb
ffreep
adc
nop
dec
sub
lods
or
lcall
ljmp
mov
push
daa
lods
sarb
mov
dec
aaa
insb
xor
int
incl
jne
fcmovu
mov
jns
jnp
out
sahf
xor
inc
cltd
call
int
mov
call
mov
jb
andb
jge
nop
sub
fisttps
jne
xchg
icebp
jg
xor
in
jg
mov
mov
rol
clc
fptan
dec
cmp
nop
mov
call
xchg
mov
mov
add
cmc
stos
inc
push
inc
sub
xorl
lret
mov
imul
pushl
scas
sbb
mov
push
repnz
scas
mov
aas
inc
rorb
and
push
sub
frstor
ret
test
adc
cmpsl
mov
xchg
out
push
cmpsb
mov
adc
cmp
and
jg
mov
mov
dec
dec
xchg
mov
mov
ror
es
mov
int3
or
jns
push
add
js
ss
call
or
mov
decl
inc
nop
ds
adc
mov
ret
mov
orl
incl
cmpsb
dec
cmp
jle
fwait
xchg
ja
call
sub
adc
shlb
popa
pop
push
and
clc
push
pop
enter
pop
pusha
mov
dec
sbb
insl
mov
decl
cs
cmp
sbb
mov
jg
out
sbb
stos
jo
mov
aaa
imul
lcall
mov
sbb
cmp
nop
mov
sbb
mov
inc
add
repnz
pop
out
lcall
mov
sbb
sbb
shrb
mov
jp
mov
out
xchg
fcomip
inc
sbb
jae
data16
mov
imul
jne
cmp
les
sbb
cmpsb
ljmp
jnp
sub
mov
cmpsl
push
dec
adc
ljmp
shrb
loop
test
cmc
xor
test
out
jp
mov
pop
cs
call
and
xor
mov
mov
mov
lods
mov
inc
xor
inc
scas
pop
adc
pushl
mov
in
not
push
scas
add
lods
loop
outsl
sub
push
add
out
inc
inc
subb
aas
mov
shlb
rolb
jo
jmp
pop
jns
jae
jl
roll
decl
cltd
jbe
pop
nop
sub
xor
mov
loopne
fimull
scas
pop
push
cmpsb
xorl
enter
pop
out
pop
cli
mov
cmp
push
movsb
repnz
scas
sbb
push
push
cld
push
call
iret
jg
push
jns
sbbb
push
in
xchg
shlb
push
cmp
mov
mov
insb
sub
call
aad
jl
out
mov
aas
dec
xchg
pop
and
pop
mov
ret
test
stos
xchg
inc
aas
mov
out
sub
mov
mov
int
imul
mov
pop
aas
jne
xor
mov
bound
add
mov
in
xchg
cmp
and
ja
popf
stos
mov
cli
pushf
adc
pop
cmp
insb
adc
rolb
movsb
sti
xchg
ljmp
outsl
push
mov
or
or
loope
test
mov
jmp
dec
lds
in
jecxz
out
adc
lock
mov
mov
mov
xchg
cltd
mov
imull
mov
inc
push
mov
dec
in
lcall
loop
inc
xchg
arpl
mov
mov
stc
popa
test
adc
xor
xchg
enter
fistpl
cmp
cs
push
sti
call
les
daa
xchg
loopne
cmovo
testb
cmpsl
jg
stos
mov
push
mov
lods
loope
int3
cli
xchg
hlt
fwait
aas
jo
mov
decl
daa
clc
push
pop
sti
adc
and
push
bound
inc
pusha
rorl
inc
pop
pop
push
adc
shrl
pop
mov
mov
cmp
jmp
and
mov
test
pop
movsl
xchg
ds
ljmp
popf
fisubs
mov
lahf
popa
cmpsl
pop
stos
jmp
pop
sub
xchg
pop
test
pushl
mov
lahf
push
and
sub
mov
jno
out
mov
adc
adc
fsubl
test
xchg
das
jmp
adc
mov
jecxz
mov
add
shlb
lds
out
lea
movsl
inc
jnp
stos
mov
repnz
cmp
popa
aad
cmp
dec
fs
inc
in
pusha
mov
and
cwtl
jp
jmp
in
mov
xor
enter
mov
enter
push
jo
jmp
lcall
aaa
jae
inc
neg
dec
push
popf
js
hlt
cmp
scas
cmpsl
mov
popf
push
mov
mov
sub
rclb
aas
jp
fld
outsb
inc
pop
jg
mov
decl
adc
cmc
pop
or
mov
jne
xchg
sarb
sub
mov
int
mov
cld
popa
jp
and
pushl
test
in
test
push
call
mov
or
mov
adc
jge
sub
pushl
pop
ss
insl
jne
shlb
jl
loopne
insl
xor
mov
pop
cld
call
push
rorl
dec
add
jbe
bound
sarb
std
pushl
jecxz
mov
xchg
jae
pop
paddd
lret
and
sti
jns
call
je
push
movsb
inc
jnp
out
mov
cmp
inc
mov
xchg
pusha
inc
lret
fisttpll
push
cwtl
cmpsl
testb
dec
jg
icebp
scas
inc
test
jno
mov
cmp
arpl
xchg
sbb
fcomps
cmc
adc
jle
pop
lds
inc
in
incl
es
popf
xor
movsl
jmp
ret
movsl
data16
inc
push
aad
add
aas
pop
cmp
and
xlat
jle
dec
sub
mov
or
divb
dec
ja
mov
int
xchg
xchg
xchg
jne
mov
clc
ja
xchg
mov
fcomip
call
or
cmp
or
popa
cltd
or
cmpsl
dec
rcll
inc
rol
or
lock
cltd
lods
mov
jmp
adc
repnz
xchg
xor
mov
inc
fdivr
cmpsb
push
mov
imul
cwtl
std
dec
pop
les
imul
adc
mov
popa
nop
fsubrl
cli
cwtl
int
inc
inc
out
push
adc
int
incl
cwtl
xor
adc
aaa
xor
or
add
test
fs
cmp
mov
daa
aas
call
pusha
cmpl
out
xchg
inc
iret
jmp
shll
jg
mov
or
stos
xchg
mov
sub
pop
jecxz
mov
incl
xchg
test
cli
pop
ss
xor
test
jmp
into
pop
movsb
add
cmp
jno
jae
call
jp,pt
out
mov
cwtl
sbb
in
out
pushf
adc
pop
daa
cwtl
adc
sbb
decl
mov
repz
mov
lds
int3
pop
jmp
lods
mov
pop
dec
pop
int3
sub
orb
push
dec
adc
cld
xor
jmp
pop
xor
or
cmp
xchg
pop
or
xchg
cmc
dec
or
data16
imul
lods
out
clc
lock
jp
int3
cwtl
mov
movsb
ret
push
mov
out
clc
leave
or
call
xor
mov
lahf
xchg
scas
ja
sbb
fdivrl
hlt
mov
fs
ror
jbe
roll
or
pusha
scas
xor
lock
adc
call
loopne
add
dec
or
and
ja
fildl
pushl
std
lret
packuswb
out
inc
pop
or
fiaddl
out
les
ret
lods
adc
mov
push
pushl
fdivrl
xchg
in
dec
sti
or
mov
xor
lret
jg
push
and
xor
pop
jnp
jae
cmc
xchg
loope
sbb
jo
rol
fdivrs
fdivr
cmp
scas
fisttpll
and
inc
pop
addb
in
sub
jg
pushl
and
cmpsb
push
mov
fadds
lods
xor
outsb
int3
xchg
ficoms
inc
mov
aaa
cld
push
push
pop
mov
cmpsb
xchg
iret
and
mov
dec
or
es
jmp
fiaddl
pop
push
insb
mov
fbld
jb
pushf
dec
std
std
xchg
mov
pushl
dec
push
sbb
aad
roll
sbb
and
push
subl
lds
outsl
and
dec
movsl
dec
adc
add
int3
lret
sbb
decl
out
jae
add
add
mov
mov
ljmp
or
das
clc
decl
das
mov
aam
mov
jp
adc
mov
cmp
fnstcw
dec
pushf
push
dec
and
aad
mov
mov
in
adc
jl
sarb
fs
lock
decl
int
in
mov
jo
jmp
inc
cmp
es
popf
incl
push
adc
fdivr
xchg
fisttpll
call
les
sub
inc
xor
out
mov
pop
dec
inc
ja
cmp
cmp
cwtl
push
fld
mov
cltd
push
insb
fs
ror
shlb
call
pushl
sub
clc
fimull
lock
mov
mov
fistpl
iret
xor
jmp
imul
push
jb
push
sbb
pop
sub
add
push
sbb
lock
jmp
add
test
mov
test
out
fs
mov
ljmp
int3
int3
jg
jo
push
gs
jmp
xchg
repz
int3
adc
xchg
inc
aaa
addr16
stc
xchg
ljmp
pop
mov
xor
shrb
arpl
push
and
nop
mov
dec
es
insl
cmp
leave
pop
mov
rcrl
int3
and
js
rolb
push
mov
pop
std
mov
leave
mov
fdivrl
jbe
in
ljmp
stos
cltd
xlat
push
push
nop
scas
pop
nop
test
jl
xor
ret
xchg
pop
xor
sahf
negb
out
pop
or
cmp
popf
rcrl
mov
fisubs
xchg
out
fcomip
subl
mov
xchg
dec
rorl
loopne
mov
sub
pop
clc
paddw
cwtl
and
add
adc
enter
pop
orl
lcall
cmp
jp
in
jmp
pop
pop
mov
cmp
stos
pop
push
std
sbb
mov
loopne
adc
dec
add
clc
loop
aam
call
cmp
xchg
xor
adc
ss
bound
das
pop
shrl
dec
gs
sahf
ljmp
mov
sbb
stc
enter
repz
imul
sarl
xchg
mov
xor
mov
movsl
pop
call
xchg
iret
xor
cmp
fists
pop
aam
lret
jmp
adc
out
decl
dec
sbb
jle
xchg
lock
dec
inc
xchg
sbb
pop
ljmp
cmpl
pushf
mov
jg
lock
jmp
and
or
adc
dec
xchg
xchg
jle
stc
dec
mov
cld
popf
lea
push
pop
dec
aaa
cmp
or
xor
pushl
sti
fcmovnb
and
sub
mov
pop
pop
in
std
mov
js
ss
es
cmp
ljmp
fsubrl
call
shrl
sbb
dec
mov
jno
inc
push
fdivrp
call
jne
sbb
adcl
xchg
in
push
push
xor
inc
notl
inc
js
ret
bts
adc
lods
dec
stos
divl
dec
push
int
dec
jno
mov
out
add
insb
loope
cld
mov
jecxz
or
xor
or
sub
adc
mov
mov
sbb
mov
pusha
sbb
add
mov
xor
push
scas
clc
cwtl
inc
fstl
and
das
push
mov
push
int
pop
add
bound
cld
cmpsl
push
adc
lods
loopne
jmp
pop
mov
xchg
dec
test
bound
lret
jmp
or
cmc
stos
in
mov
mov
add
aam
dec
pop
inc
in
leave
mov
fstpt
dec
shll
xchg
decl
mov
add
ret
clc
dec
fildll
push
sbb
decl
mov
leave
imul
push
lret
mov
dec
cld
movsl
out
and
daa
mov
adc
in
pushf
sti
mov
push
mov
scas
add
repnz
sbb
aad
adc
inc
jb
mov
xchg
leave
cmc
rolb
push
test
xor
decl
les
sub
test
and
pop
mov
stos
outsb
jns
lock
mov
cmp
popa
sahf
xor
pop
mov
or
pushl
mov
push
shll
cmc
enter
ficoms
inc
lcall
incl
mov
mov
ljmp
cs
mov
out
cli
cmp
shrb
enter
fs
hlt
lcall
or
adc
stc
add
sbb
pop
gs
inc
gs
mov
lret
nop
xlat
push
xchg
test
xchg
pop
repnz
ljmp
ret
inc
fsubrs
fidivrl
sbb
out
and
jnp
insb
filds
jno
inc
and
mov
jmp
sbb
pop
add
or
cmc
loopew
xor
cmp
mov
jmp
mov
ret
stos
push
sbbb
out
ljmp
ja
lea
enter
lret
imul
pop
xor
stc
xor
ja
loope
ja
cmp
rcrl
sbb
dec
jne
aaa
adc
lcall
inc
call
mov
xlat
sbbl
enter
enter
fbld
scas
out
fbstp
jo
inc
stos
sbb
inc
jp
sbb
repnz
push
iret
jmp
mov
mov
lea
push
cmp
incl
sub
add
leave
gs
movsb
fwait
aad
pop
add
mov
pop
xchg
jmp
cmpsl
push
xchg
dec
mov
nop
mov
pop
js
nop
mov
sti
jne
insb
adc
out
in
in
adc
ret
out
adc
cli
rorl
push
stc
dec
repz
clc
mov
clc
cmp
outsb
jne
sub
fs
and
push
lock
and
sbb
rcll
xor
in
sub
add
inc
sbb
mov
call
cmc
push
mov
push
cld
dec
movsl
cmp
mov
das
ja
cmp
incl
ficomps
cltd
andb
lds
push
in
cs
fidivrl
in
sub
sti
call
fpatan
inc
stos
inc
das
data16
lret
pushf
or
mov
test
add
jecxz
call
mov
addr16
lods
fsubp
cwtl
out
scas
mov
add
lea
out
fstpl
dec
out
lret
shl
push
lahf
push
add
je
cli
mov
cmp
adcb
push
xchg
insb
and
mov
call
xchg
and
insl
dec
or
jno
iret
insl
out
icebp
xchg
sub
inc
push
fmul
add
out
call
inc
push
ja
inc
ffreep
insl
adc
fisubl
repnz
loope
pause
outsl
lods
mov
popa
mov
ljmp
movsb
decb
sarb
pop
out
jle
pop
rcr
call
or
pop
mov
fcomip
decl
nop
mov
sub
cmp
and
push
mov
dec
mov
cld
clc
push
in
sbb
mov
iret
repnz
mov
sub
incl
fxch
adc
test
arpl
sar
jne
xlat
fistps
ror
dec
sbb
sbbl
jnp
arpl
xchg
fdivr
jbe
pop
jge
adc
cs
mov
je
mov
fs
adcb
add
push
and
push
sahf
outsb
repnz
pushf
dec
cmp
jae
xchg
inc
push
add
mov
movb
pop
in
dec
gs
inc
fildl
ficoms
cs
cmpsl
mov
jg
call
lahf
sbb
pop
and
sti
adc
dec
cmp
pop
pop
jmp
mov
and
lcall
push
and
jmp
mov
je
fisttps
pop
test
xor
enter
pop
mov
jg
sub
out
or
pushaw
fcoml
lret
cwtl
into
int
xor
pop
fcmovu
loop,pn
out
cli
adc
outsb
mov
add
sbb
and
pop
or
subb
clc
insb
mov
cmp
lods
mov
out
add
sbb
cmpsb
inc
out
repz
mov
loopne
mov
and
adc
dec
rolb
inc
test
leave
fldcw
popf
and
in
mov
movsb
stos
xchg
movsl
cmpsl
ljmp
mov
cmp
arpl
das
cmp
rol
xchg
loopne,pn
rclb
ljmp
shll
mov
into
inc
ret
cld
mov
add
les
mov
decl
aad
je
and
sbb
shrb
in
xor
jp
or
repz
mov
cltd
jne
inc
mov
roll
fstpl
mov
sbb
nop
jg
jmp
sub
lods
xor
sub
mov
test
mov
fcom
xchg
push
lock
incl
int
repz
adc
pop
jmp
pop
push
mov
fmul
push
sahf
out
xchg
test
adc
cli
mov
cltd
jecxz
add
add
or
incl
jmp
mov
inc
xchg
jo
push
push
test
andl
out
icebp
cmp
es
icebp
or
cmpb
or
popf
notl
repz
in
fistpll
mov
push
push
bound
push
mov
into
add
js
mov
inc
lcall
xlat
lret
mov
jmp
ja
fcoms
pop
ljmp
stos
sahf
jb
aam
push
cmpsb
test
sbb
sti
mov
neg
rolb
or
int
in
sbb
in
icebp
dec
fisttpl
loop
cld
aaa
jae
pushl
mov
fprem
insl
ffreep
aad
sub
or
data16
sbb
gs
sbb
aam
lea
incl
leave
jg
lahf
int
es
dec
and
xor
call
ja
imul
in
ret
cmp
jl
mov
pusha
addb
test
mov
in
loope
pop
into
cmpsl
shlb
sbb
nop
decl
mov
xchg
push
lods
movsb
lcall
iretw
into
add
loopne
cmp
mov
cmp
repnz
jp
mov
mov
adc
ja
add
daa
es
popl
fsubrs
ret
addr16
in
cmp
pusha
jg
push
jae
js
icebp
jmp
fcmovne
pop
es
stos
lods
cmp
push
xchg
mov
cmp
cmp
leave
push
cmp
or
inc
dec
inc
push
les
jne
ret
jl
or
test
cmpsb
andb
and
ljmp
dec
cmpsb
or
cmp
decl
jecxz
push
xchg
test
adc
test
lea
divl
sar
fnstcw
popf
mov
mov
dec
test
dec
pop
addr16
das
stos
data16
push
decl
sbb
mov
outsb
xor
cmpsl
cltd
sbb
repz
jle
jnp
adc
or
enter
cld
ljmp
sub
call
out
clc
inc
idivl
pop
aam
aad
inc
xor
sub
inc
cltd
jg
es
roll
addr16
data16
add
decl
out
sti
fwait
call
jbe
jg
fidivrl
sub
dec
stos
ljmp
lods
rclb
cltd
das
inc
in
and
or
gs
decl
lret
mov
inc
lods
mov
push
inc
lret
sub
sbb
jb
cmp
hlt
rcrb
mov
hlt
mov
pushl
add
push
add
cs
add
lret
mov
ljmp
or
test
imul
sahf
pop
daa
scas
stos
int
mov
jns
cmpsb
incl
pop
dec
cmc
jp
test
add
or
sbb
sub
pushl
in
or
inc
shrb
rorl
sbb
mov
add
enter
or
or
dec
xchg
jb
xchg
in
and
mov
add
mov
fcomip
ljmp
mov
xchg
fnsave
mov
decl
push
ret
aad
push
call
cltd
and
cmp
inc
jae
xor
pop
push
jbe
dec
in
mov
lea
sbb
ljmp
jecxz
push
lret
flds
fs
pop
test
xchg
cwtl
fnstcw
jmp
loop
jecxz
or
sbb
in
sub
xor
popf
cs
test
lcall
call
loopne
inc
sahf
outsb
mov
out
jmp
fsincos
sbb
adc
call
loopne
repz
fsubrl
es
mov
rcrl
sbb
bound
sti
or
xchg
sbb
out
mov
xchg
jg
pop
dec
xor
adc
enter
xor
xor
mov
pushl
mov
dec
inc
mov
lahf
and
test
in
jg
sbb
push
dec
adc
jbe
repz
scas
fnstsw
mov
adc
add
jmp
xchg
int
mov
cld
dec
rcrl
gs
sub
fs
sbb
arpl
je
cmp
incl
mov
addr16
movsl
inc
aaa
cs
popa
xchg
add
pusha
mov
bound
ljmp
test
or
test
fs
mov
imul
out
cli
jmp
and
adc
sbb
subb
sub
sbb
mov
hlt
mov
ret
sub
cmp
cmpsl
mov
les
or
mov
dec
sahf
sub
dec
mov
ljmp
mov
fwait
mov
lods
sbb
jle
xchg
mov
push
pushl
pop
outsb
inc
adc
push
stos
pop
jge
sbb
jmp
pop
mov
js
xchg
je
insl
push
inc
xchg
sub
jb
mov
sahf
int3
xor
call
add
mov
cmp
into
ds
insb
push
cmp
dec
sub
sub
inc
bound
lea
dec
mov
and
movsl
jmp
cld
mov
mov
mov
fdivl
insb
inc
out
inc
arpl
movsl
pop
or
dec
xchg
jg
repnz
movsb
rcrb
pop
imul
cmc
roll
lahf
addr16
sub
dec
mov
jmp
or
jg
inc
sub
inc
xchg
sub
pushf
mov
jmp
or
inc
and
out
mov
outsb
dec
repz
fnsave
lods
inc
insb
stc
lahf
sbb
ret
ljmp
push
addl
xor
repz
pop
out
std
pop
fstps
dec
pushf
and
cs
lahf
cmpb
sub
insb
add
bnd
ljmp
sub
push
mov
incl
lret
mov
loopne
push
ret
enter
mov
in
fcmove
push
adcb
lcall
imull
sub
push
into
push
fs
mov
jl
adc
jg
adcl
push
sahf
ret
or
ds
add
loopne
incl
jmp
adc
and
pop
repnz
push
mov
test
outsl
scas
aaa
std
incl
jo
jae
push
rcr
add
repnz
or
nop
shll
cmp
fisubrs
rcrl
andb
xor
outsl
add
xchg
sub
adc
sahf
pop
inc
or
fdiv
sar
jmp
pop
cli
add
or
bound
in
cltd
sub
pop
dec
inc
jg
scas
pop
xor
jg
xchg
sbb
adc
and
xor
incl
sbb
lret
icebp
push
je
je
arpl
cmpl
cmpl
test
lea
push
sub
pushl
arpl
adc
loope
cmc
pop
cmpb
fdivs
dec
nop
inc
xchg
mov
mov
aas
insb
cli
int3
dec
mov
xor
xorb
adc
sar
jmp
add
cmp
cltd
mov
mov
xchg
sbb
push
out
fwait
jmp
ret
movsb
and
adc
mov
xor
popf
sarl
loopne
pop
out
push
stos
mov
push
out
scas
sbb
cmp
es
sbb
jb
mov
inc
fmull
loopne
pushl
std
incl
jnp
ds
inc
lock
adc
add
call
mov
inc
pop
adc
cmc
jp
add
xchg
imul
sub
mov
call
push
xchg
xchg
cmp
data16
cmp
xchg
push
icebp
lahf
mov
movsl
aas
out
sbb
iret
fidivrs
mov
adc
mov
sbb
dec
inc
imul
in
shlb
xchg
push
inc
xchg
movsl
cmp
stc
push
adc
jb
mov
dec
hlt
cmpsl
pop
jmp
cli
dec
sub
in
addb
mov
sti
mull
ror
cmp
push
scas
adc
out
loop
pop
fsubrs
pop
inc
push
aas
jp
jle
mov
fnstenv
es
dec
lods
adc
cltd
cmp
pop
pop
mov
jnp
or
int3
mov
out
lds
in
add
aas
icebp
push
push
jbe
outsb
arpl
pop
sahf
es
popa
int
fucomi
sub
mov
mov
dec
ljmp
mov
shrl
aas
nop
aad
jno
xorl
cmp
push
inc
xor
arpl
stc
mov
testl
sbb
out
mov
fdivrs
dec
in
insl
adc
in
mov
adcb
call
insb
xchg
out
out
cltd
sti
outsl
and
inc
popa
lcall
inc
repnz
add
nop
add
mov
nop
mov
sub
imul
add
jmp
sti
out
cwtl
fisubl
mov
jmp
sbb
repz
clc
aas
cli
outsb
mov
cld
lcall
push
pop
cmc
mov
ret
xchg
cmp
inc
mov
jg
push
aas
in
cltd
pop
adc
pop
lcall
inc
dec
call
or
sub
ljmp
popf
int
out
pop
or
inc
and
int3
lret
icebp
pusha
cmp
xchg
fldenv
pop
das
popa
adc
lcall
and
push
hlt
cli
lcall
daa
push
jecxz
pop
dec
cmp
ss
lods
aaa
xchg
pusha
xchg
icebp
std
push
xchg
mov
in
xchg
pop
pop
mov
incl
jge
pop
xlat
push
jne
add
cld
cmpsl
stos
fisttps
fwait
orl
dec
push
mov
push
clc
dec
nop
lahf
out
cmp
mov
mov
adc
mov
cmp
sti
and
jle
nop
adc
jb
sub
or
adc
cld
neg
dec
and
push
dec
add
xor
mov
fimull
test
decl
iret
insl
and
jae
mov
dec
test
jns
sub
mov
sub
adc
jg
dec
outsl
inc
data16
cmpsb
mov
push
faddl
sbb
pop
lock
lods
jae
test
sbb
mov
pop
rcrb
pop
add
test
jmp
jecxz
or
jp
int
dec
push
stos
and
int3
call
add
aad
outsb
stc
sbb
mov
adc
pushl
ret
jns
fs
loope
repz
push
cmp
sub
cltd
push
mov
and
inc
out
add
fcoml
cmp
sti
les
push
out
cli
fldt
sub
es
xchg
icebp
and
and
xchg
or
test
push
jg
jg
push
loope
je
bound
popa
aaa
jmp
addb
aaa
clc
lea
xchg
and
inc
imul
push
inc
jge
pop
addb
inc
data16
mov
rol
xchg
fsubl
lods
rcll
inc
loopne
sahf
xor
in
jmp
inc
enter
data16
jmp
ljmp
or
xchg
push
ret
pop
cmp
xchg
rol
push
ljmp
mov
jns
scas
mov
mov
pop
push
loop
clc
popa
mov
aaa
mov
fdivl
pushl
mov
fisttps
or
mov
std
and
lcall
inc
rcrb
cld
mov
and
incl
mov
cs
pop
inc
cmp
jbe
mov
or
or
or
pop
loopne
push
icebp
ret
shrb
icebp
sub
lcall
xchg
fptan
pop
and
movsl
fldl2t
out
clc
inc
aad
adc
xchg
insl
lock
cmp
cmp
xchg
jp
pop
sub
or
cmpsl
test
imul
sbb
push
dec
mov
jg
test
mov
jecxz
rclb
mov
std
repnz
inc
dec
sar
jp
push
imul
mov
sub
mov
lret
adc
and
add
lcall
fldt
aad
scas
fmulp
jbe
adc
cmp
fwait
jmp
sbb
popa
xorl
xor
les
cmp
call
adc
mov
jl
or
xor
out
shr
fidivrl
jno
in
movsl
and
mov
call
fcmovnbe
cmpsb
cmp
ja
insl
jae
adc
xor
clc
adc
push
fistpl
lcall
pop
jo
adc
int3
jmp
aas
fstenv
subl
jo
cmp
int3
shrb
cmp
addr16
fildl
ljmp
sbb
popf
mov
scas
xor
push
or
imul
cmp
or
stc
jno
pop
push
es
js
xor
mov
sub
mov
lcall
loopne
lods
push
mov
rol
in
or
pop
mov
xchg
aas
out
test
sbb
and
xlat
xchg
mov
filds
mov
cmc
insb
push
jg
pushl
pop
lret
adc
lds
mov
repz
push
push
popa
cs
decl
jae
and
call
enter
xchg
faddl
in
mov
pop
adc
jmp
pop
scas
cmpl
cwtl
push
mov
mov
aam
dec
push
out
dec
out
decl
cmpsb
imul
das
sti
sub
loop
jl
cmp
pushl
inc
insl
stos
ret
pop
negl
gs
in
add
arpl
daa
push
push
mov
jmp
mov
jg
fucom
arpl
cmp
scas
std
sbb
push
stc
adc
testl
xchg
lods
repnz
stos
popa
xchg
and
cmp
scas
bound
ljmp
cmpsb
jp
inc
das
mov
sub
xor
sbb
jae
dec
fcoml
pop
jno
jne
incl
repnz
leave
mov
rolb
daa
lods
arpl
lcall
or
sub
lods
push
pop
sub
fiadds
mov
mov
pop
xor
jge
xor
lret
jbe
popa
jne
out
xchg
out
in
shrb
cmc
in
cli
xor
mov
jp
xchg
loop
es
dec
dec
add
fucomip
mov
push
jg
mov
inc
aas
inc
rcll
sub
clc
xchg
imul
push
add
mov
mov
inc
cwtl
and
or
xlat
dec
mov
xor
outsb
test
pop
add
xchg
movsb
decl
inc
aad
andl
mull
push
imul
xlat
dec
xchg
mov
jmp
aaa
test
imul
in
jmp
push
pop
mov
add
xchg
or
lcall
loop
int3
out
lcall
dec
repnz
incb
mov
incl
dec
mov
mov
orl
jb
push
push
mov
jae
add
incl
nop
fcoml
xchg
cmpsl
fistpll
shr
mov
xchg
xor
orl
loopne
int3
dec
sub
lds
push
xor
outsb
call
lcall
mov
inc
jo
mov
arpl
and
and
push
stc
add
jmp
mov
mov
test
lret
ss
xchg
cmp
cmpsl
lock
cmpsb
call
ret
stos
lahf
sub
xor
jp
stos
rorb
clc
pushl
lock
les
xor
leave
or
dec
inc
mov
push
enter
scas
mov
lea
sub
ja
mov
ljmp
push
imul
adc
decl
scas
test
push
jl
cmpsb
aaa
sub
enter
jnp
and
mov
das
mov
lock
aaa
cmp
jo
add
cs
push
mov
in
push
mov
inc
xchg
jno
push
cmpsl
xchg
sar
lret
sbb
push
jbe
por
or
lods
leave
pop
call
cwtl
cwtl
sbb
and
mov
mov
call
cmp
mov
lds
test
pop
jecxz
setno
ds
andl
pushl
xor
xor
je
fstpl
ret
cld
ret
in
icebp
add
lcall
in
mov
push
insb
inc
mov
gs
sti
out
imul
jae
push
ljmp
ljmp
aas
aas
xor
push
jbe
adc
sub
xor
popf
cmp
test
ss
cld
add
lcall
pop
jp
cltd
mov
or
shll
sub
clc
jmp
mov
xor
pop
in
lret
rolb
push
shrb
pop
jo
push
stc
adc
mov
inc
mov
faddp
add
or
loop
das
sar
aaa
ja
sbb
sub
and
rorl
lods
leave
lcall
int3
pop
mov
push
ds
mov
inc
jno
cmc
arpl
and
lcall
and
jg
mov
pop
fistl
push
xor
inc
stos
xchg
mov
push
cli
fdivrp
incl
jnp
in
mov
adc
sub
lds
mov
cmp
sbb
xchg
decl
fnstsw
xchg
lock
cwtl
int3
jg
jp
dec
inc
or
fcomps
std
call
add
push
mov
mov
ss
sbb
pop
test
call
sarb
pushl
in
sbb
pop
push
jb
sbb
mov
fmull
or
call
sbb
mov
dec
cltd
fwait
dec
inc
rcll
es
mov
xchg
adc
mov
push
incl
loope
mov
roll
push
ljmp
push
std
xchg
out
jecxz
incl
and
call
or
and
xchg
mov
pop
shrb
adc
rolb
aad
das
fcoms
out
call
fwait
jae
or
inc
sub
sub
repz
push
sub
test
mov
cltd
shll
mov
pushl
or
jb
or
push
mov
adc
icebp
mov
sar
decl
sub
add
mov
fisttps
lret
mov
pop
cmp
call
sub
into
imul
jae
pop
int3
pop
inc
xlat
or
xor
sbb
imul
int3
stos
incl
add
mov
xor
jg
shl
cli
sbb
add
mov
lods
lret
rorl
popf
jl
vmovdqu
pushl
pop
outsb
int3
mov
inc
in
ljmp
and
dec
cmovno
dec
dec
scas
outsb
dec
lcall
adc
lahf
sub
cmpsb
mov
mov
addr16
jns
inc
leave
jns
std
mov
inc
fildll
incl
mov
insl
and
sub
cmpsw
pop
jbe
outsl
sub
and
addl
jns
lock
decl
cmc
into
js
jl
push
popf
xor
fistpl
add
orl
add
mov
mov
pop
mov
adc
xchg
orb
idiv
jnp
and
lahf
lret
inc
mov
fcoms
dec
jmp
or
xchg
sahf
pushl
lret
and
aas
inc
dec
mov
fstpt
sbb
mov
xchg
cmp
mov
insl
mov
mov
lcall
xchg
inc
push
push
add
xor
mov
lods
xor
pop
inc
sub
mov
push
jb
test
xchg
ret
jmp
or
leave
hlt
out
fnsave
arpl
xchg
mov
aaa
jge
movsl
adc
loopne
pushl
xor
adc
mov
cmpsb
stc
push
es
pop
lods
jle
jmp
and
adc
dec
adc
cmpsb
insl
mov
cs
add
clc
push
cmp
push
inc
and
incl
scas
out
push
dec
sub
scas
sbb
stc
push
andb
movsl
popf
fistl
sub
cmp
jno
cmpsl
pop
hlt
inc
jge
push
cmp
pop
outsl
js
subb
hlt
negb
scas
push
das
lcall
adc
cld
xor
lods
iret
or
push
repnz
mov
sti
test
outsl
clc
lcall
jnp
add
test
cmpsb
push
out
sbb
movsl
test
scas
popf
outsb
inc
mov
adc
or
jmp
subl
fdivs
repz
rcl
and
ret
ja
arpl
inc
jmp
incl
jecxz
ljmp
mov
adc
mov
testb
ret
mov
and
int
lock
inc
and
mov
cltd
dec
or
or
sub
sbb
test
scas
pop
and
adc
adc
push
popa
pop
cmc
addl
out
js
add
in
lds
dec
mov
jns
stos
fisubrs
aad
mov
lcall
call
mov
cmpsl
pop
adc
inc
pop
cmp
jno
add
and
sbb
push
loop
sti
aas
inc
lahf
imul
jg
add
and
stos
dec
decl
iret
movsl
test
stos
sbb
or
mov
add
dec
insb
jae
imul
mov
inc
xchg
shlb
push
loopne
sbbl
lret
xchg
mov
xchg
notl
orl
ret
push
mov
dec
ret
inc
scas
nop
dec
xor
incl
mov
mov
add
aas
idivl
shll
push
push
lahf
sarb
lcall
jns
fsubr
pop
adc
shll
mov
pop
add
inc
cli
xchg
ljmp
imul
jle,pn
lds
rol
sbb
adc
sbb
sub
cmp
call
out
pop
pop
loop
xor
sub
in
fidivrs
fwait
pop
sbb
xor
cmp
pop
aam
iret
lcall
ds
lahf
les
push
xchg
and
push
loope
shll
and
add
cli
adc
jecxz
lahf
movsl
inc
aad
test
insl
daa
xchg
sub
pushl
jae
imul
pop
mov
jbe
jno
sahf
scas
pop
adc
dec
int
sbb
cmp
cmp
push
jle
adc
inc
fisubs
shlb
sub
push
sub
pop
mov
jmp
jbe
sbb
xor
push
jae
dec
repnz
movsl
icebp
xchg
mov
hlt
ljmp
dec
dec
push
adc
sbb
out
mov
into
and
fcompl
fcomip
decl
and
loope
cld
jp
jge
sbb
inc
xor
inc
mov
call
inc
subl
adc
mov
dec
mov
jne
mulps
jg
dec
push
decl
test
scas
pop
int
mov
clc
aaa
and
frstor
xor
dec
push
lods
stos
or
add
cmp
clc
xchg
repz
jno
pand
mov
jbe
fcomps
or
loop
lret
pop
stc
pop
lret
cmpsb
repz
aaa
stos
cmp
shll
sub
ds
aad
mov
mov
sbbl
test
dec
data16
mov
adc
add
push
jle
clc
adc
mov
inc
jecxz
out
clc
mov
hlt
push
push
jl
mov
popa
loopne
or
xchg
xchg
cmp
ljmp
jge
and
push
cmp
ret
stos
bound
pushl
sarb
and
sub
or
fdivs
mov
inc
lods
push
adc
gs
push
stc
lods
add
mov
xchg
popa
add
fidivl
jbe
inc
adcl
jmp
xor
loopne
push
adc
out
mov
js
sbb
loope
jmp
imul
popf
mov
icebp
rol
jmp
xchg
das
cld
mov
jl
jecxz
sti
sub
jae
xor
adc
dec
daa
sub
mov
ja
mov
add
mov
jo
jns
lcall
jno
out
ja
daa
pop
popf
jg
push
inc
shrl
sahf
cld
lret
or
daa
jmp
xor
inc
leave
dec
stos
mov
jge
test
pop
aad
cmp
scas
cli
lcall
mov
jnp
ljmp
cs
jle
or
cmp
pop
sar
imulb
ror
cmp
dec
xor
inc
mov
lret
add
cld
outsl
repz
fldcw
adc
sub
add
add
scas
push
iret
xor
mov
jmp
scas
or
jne
jbe
push
test
sub
test
data16
fcomip
mov
xchg
out
out
add
or
loopne
cld
mov
fcomp
xchg
sar
lcall
or
out
xchg
cmp
cwtl
jecxz
pop
enter
fstl
mov
ret
xchg
mov
decl
sub
ljmp
and
hlt
loop
cmc
sub
cmpsl
push
out
ljmp
dec
mov
mov
jle
push
stos
pop
inc
xor
dec
repz
cmp
lahf
movsb
ljmp
clc
jnp
stos
setl
mov
jae
test
decl
imull
ss
es
and
or
or
movsb
mov
fisubrl
in
aaa
dec
cmp
jmp
xchg
js
mov
or
mov
or
or
adc
repnz
sub
xlat
adc
sub
and
stos
das
or
mov
inc
inc
pop
daa
pop
or
mov
pop
add
mov
jg
push
and
jl
jb
xlat
addl
mov
jg
sarb
inc
loope
add
clc
jge
xor
jmp
es
in
incl
inc
mov
add
dec
dec
out
push
insl
xor
sub
jnp
mov
cwtl
cld
nop
inc
mov
pop
insl
push
dec
popa
ror
adc
popa
test
cmp
mov
addr16
push
scas
dec
faddl
lret
adc
ret
and
jnp
out
pushf
ret
push
fdivrs
xchg
shrl
lea
outsb
adc
jns
outsl
je
aad
and
clc
aas
cmp
cmp
xor
mulb
adc
add
lods
push
cli
push
in
incl
jecxz
inc
sti
cmpsl
pop
add
cmpsb
inc
icebp
pushf
mov
stos
sub
mov
cld
out
mov
test
xchg
or
dec
jmp
and
call
pushl
mov
lahf
imul
in
push
ds
icebp
mov
incl
or
aam
ljmp
jg
xchg
cmp
jno
scas
lcall
ljmp
cltd
pop
ja
loopne
insl
fists
mov
mov
insl
xchg
scas
adc
stos
insb
push
rcll
inc
sarl
pop
mov
jg
dec
sbb
ss
adc
pop
jae
rcll
loop
mov
nop
jb
mov
popa
int3
fcoms
pop
fidivl
xor
pushl
jl
fnstenv
rolb
in
lock
or
neg
cmc
mov
xchg
imul
aaa
ljmp
adc
push
mov
mov
rcll
cmp
and
rorb
mov
mov
outsb
outsl
adc
or
xchg
stos
lret
pop
cmc
decl
cli
sub
sbb
xchg
fcompl
push
ja
data16
mov
add
es
imul
call
cld
cwtl
jl
std
mov
nop
ret
cmp
mov
int3
cli
mov
push
cli
adc
fisttpll
icebp
xchg
out
push
inc
sbb
das
adc
scas
push
xchg
pop
call
cmpsb
inc
inc
mov
xor
lcall
test
mov
rorl
pop
mov
add
mov
xchg
pop
decl
enter
repz
bound
sub
ljmp
call
jb
add
clc
pop
insb
xlat
fs
pop
adc
and
movsl
sbb
sub
fcoms
out
arpl
data16
and
dec
mov
cmc
mov
pop
jmp
repz
ja
sarl
loopne
xor
call
sub
sub
pop
or
sub
rorl
sbb
ds
repz
leave
push
fidivl
ljmp
mov
add
cld
call
push
cs
int
cwtl
pop
xabort
adc
add
aam
call
xchg
dec
shl
iret
add
icebp
inc
cmp
and
test
lret
jp
dec
pop
adc
dec
xor
sbb
sbb
fwait
dec
in
xchg
and
lods
std
in
paddusw
out
cmp
push
daa
ss
shll
sub
scas
outsb
cmp
and
stc
dec
sarb
inc
les
push
sbb
jae
lea
mov
daa
add
xor
jg
incl
out
mov
test
lock
jae
xchg
jae
mov
xor
cld
mov
sbb
fldcw
cli
mov
fs
jp
out
xchg
push
sub
gs
rcl
mov
or
mov
sub
popa
push
pop
icebp
jmp
ret
loopne
jg
bound
push
inc
mov
pop
xor
push
adc
fistl
js
pop
sbb
out
mov
pop
imul
push
jmp
sub
lcall
cmp
jns
sbb
mov
sbb
loopne
data16
not
pushl
cwtl
imul
xchg
cmp
mov
add
sbb
xlat
or
mov
mov
shl
incl
cld
lods
push
jecxz
inc
adc
xchg
test
or
je
sub
pushl
ljmp
aas
cs
pop
call
pusha
and
sub
jmp
pop
sti
mov
fs
fwait
leave
xor
sbb
aas
add
mov
jecxz
decl
mov
mov
ljmp
mov
cmp
cmp
mov
or
sub
scas
cs
test
jl
lcall
ret
inc
fnsave
orb
inc
loop
cltd
lahf
mov
loopne
mov
ljmp
fs
clc
sbb
stc
out
inc
sbb
mov
mov
fs
cmp
jg
ljmp
jge
stc
cmp
add
push
fldl
adc
cmp
jmp
or
mov
add
xchg
add
inc
pop
in
rcrb
icebp
push
int
or
pushl
mov
pop
les
icebp
out
cmc
cld
fimuls
cwtl
mov
fsqrt
je
xor
ret
ja
fistpll
ja
push
js
mov
dec
adc
dec
jle
pop
hlt
call
inc
xchg
cld
aam
cwtl
imul
or
or
fcompp
bound
xor
out
and
pop
pop
dec
jnp
pop
test
movsb
sub
lcall
jmp
or
mov
fsubrl
sarl
push
mov
cli
xchg
inc
iret
jne
mov
inc
pop
std
jmp
das
jo
cmp
mov
push
pop
pop
rolb
push
adc
decl
pop
aam
test
dec
ror
rorl
fwait
int3
pop
dec
sarb
gs
jg
decb
test
hlt
jg
inc
xor
out
xchg
ljmp
sub
mov
dec
mov
scas
sub
adc
fs
ljmp
pop
inc
test
call
bound
shll
sub
out
add
inc
loopne
lcall
mov
mov
sbb
jge
movsb
ja
adc
adc
jg
ljmp
ljmp
xor
mov
sub
les
ljmp
lcall
inc
jl
sbb
pop
xlat
mov
in
pop
decl
push
dec
enter
stc
xor
js
dec
sub
mov
lcall
dec
mov
xchg
dec
ljmp
sbb
sbb
andl
adc
sarl
jmp
push
pop
pop
je
xor
stos
ret
test
jg
jg
xor
sti
jbe
lea
ljmp
pushl
std
rcr
jb
and
sbb
jecxz
sbb
out
mov
mov
stos
data16
fldenv
call
or
xor
fildll
push
fmuls
popa
push
cld
push
sub
pop
xor
dec
mov
inc
pushl
dec
and
jmp
sbb
adc
and
xor
stc
add
push
movsb
js
xchg
sahf
mov
lock
lcall
data16
call
mov
scas
mov
mov
mov
mov
in
stc
mov
jae
lret
test
xor
jg
std
xor
adc
xchg
pop
cmp
dec
mov
stc
or
ss
loop
ljmp
ds
ljmp
dec
xlat
or
sub
ljmp
cmp
sti
jno
jg
add
ret
inc
test
lret
les
mov
gs
push
sarl
adc
mov
jb
das
and
addr16
push
sbb
xchg
mov
jmp
cmpb
enter
jns
inc
sub
add
enter
aam
icebp
jmp
xor
lock
stos
mov
sub
inc
xor
xlat
mov
outsl
or
jmp
scas
xchg
pusha
mov
push
cld
test
ss
push
mov
aam
mov
test
in
jno
sub
pop
aas
inc
xchg
insb
and
cltd
pop
loop
ljmp
mov
ja
cli
adc
lret
lods
mov
mov
pop
or
call
into
and
xor
xor
pop
incb
dec
pop
add
clc
aad
or
jge,pt
mov
andb
push
imul
mov
cmp
push
je
ljmp
jno
outsl
out
adc
mov
arpl
mov
push
mov
push
xor
hlt
lock
ja
mov
notl
sbb
subb
ret
fildll
lcall
sbb
xchg
clc
xchg
ja
stos
ds
inc
mov
inc
aaa
dec
sub
mov
jge
aaa
ret
push
negb
in
mov
jmp
push
es
dec
fldenv
insb
popa
inc
inc
int
jge
jge
or
mov
jae
xchg
xchg
pop
in
pop
sub
loop
mov
idivb
pushl
dec
sbb
enter
imul
sub
ds
in
xchg
sub
cli
js
add
adc
mov
mov
outsl
les
xchg
pushl
mov
fcomi
cmpsl
scas
or
fwait
stos
daa
stos
jo
xchg
jno
popf
or
ljmp
dec
fists
mov
ficompl
inc
in
xchg
push
divl
leave
dec
insl
test
xchg
scas
outsl
clc
js
pop
shrl
jb
push
lret
lea
sbb
jbe
in
xor
cmp
fcomp
addr16
fs
out
cld
jbe
mov
mov
out
mov
and
iret
inc
in
iret
and
out
inc
iret
push
xor
fsubs
icebp
add
cmp
pop
push
fwait
and
dec
frstor
push
adcl
add
mov
adc
xorl
inc
mov
or
inc
stos
mov
jae
jmp
xor
dec
sbb
mov
cmp
pushf
neg
scas
iret
hlt
movsb
jo
cli
fldt
test
dec
fmuls
imul
xlat
shl
and
push
div
rol
pop
mov
or
mov
mov
pushl
push
stos
in
cli
cltd
cmp
and
mov
bound
loope
data16
mov
nop
scas
popf
andb
jmp
fildl
nop
cmp
cmp
sahf
loope
sbb
orb
pop
jmp
je
ljmp
xchg
push
cmpsl
lret
psrad
inc
mov
andb
cmp
loop
aaa
out
sub
xchg
and
inc
out
adc
mov
jmp
xor
in
push
mov
les
pushf
fnstsw
jge
fdivp
incl
fistl
ljmp
fsubs
adc
xchg
mov
clc
mov
cmp
push
adc
cli
mov
xor
decl
scas
pop
inc
jle
in
cmc
sub
ficoml
ljmp
mov
imul
repz
jg
mov
mov
movsl
cli
dec
jns
lcall
fcomip
sbb
test
iret
dec
dec
loop
pop
movsb
mov
scas
loope
out
out
inc
in
jae
mov
push
push
int3
sbb
movsb
mov
mov
or
call
or
lcall
lahf
mov
jmp
ds
mov
and
test
sbb
pushl
push
pop
pushl
add
ret
xchg
pop
js
subl
mov
fcos
pushl
subb
mov
fstl
cmp
shll
xor
cwtl
mov
dec
push
pop
cmp
jns
sub
ds
ret
pushl
mov
insl
aam
shll
mov
and
pop
adc
and
jg
inc
pop
loope
mov
push
cmpsl
cmp
or
and
int
sbb
xor
ljmp
and
mov
ja
addr16
test
subb
fdivrs
out
cli
into
inc
int
mov
cmc
cld
inc
adc
inc
js
xor
dec
ss
mov
jno
call
fisubrl
adc
std
out
jp
jne
ss
cmpsl
movsl
pop
push
xchg
test
jmp
cli
in
push
call
dec
inc
add
cli
arpl
test
pop
mov
popa
push
pop
xchg
push
lcall
incl
enter
mov
and
out
outsb
test
xchg
cld
inc
callw
or
inc
adc
adc
sbb
call
mov
push
fcomip
push
insl
mov
cmc
jle
ret
jge
sub
sbb
je
jb
loop
lcall
sub
mov
push
rcll
cmp
xor
pushl
cld
lcall
jbe
cmp
shll
movsl
loope
xchg
dec
in
cltd
mov
out
cli
call
mov
repnz
add
lret
int3
rorb
ja
decl
stos
pop
pop
add
xchg
cmp
and
xlat
cmp
aas
jecxz
dec
ljmp
fwait
dec
inc
test
cld
daa
decl
xor
cmp
fs
aad
shll
int3
stc
adc
mov
in
sbb
or
stos
sbb
mov
insb
xchg
xchg
enter
jmp
cmp
fsubs
dec
outsb
lahf
xchg
mov
push
cmp
lahf
inc
movsl
mov
inc
nop
or
jg
shrl
mov
rclb
imul
and
test
or
int
subl
loope
movsl
pop
mov
jg
dec
das
sahf
push
adc
add
adc
inc
test
icebp
js,pn
pop
cltd
repnz
ljmp
decl
inc
adc
shl
pop
adc
and
fadd
loope
int3
jg
pushl
mov
shlb
gs
lret
int
popa
pop
incl
cld
cmpxchg
dec
jle
inc
inc
testl
clc
push
test
fisttpl
or
aad
mov
or
nop
sti
mov
insb
ja
and
int3
xor
pushl
mov
jp
andl
jo
or
push
jg
call
hlt
into
jnp
mov
mov
adc
lcall
cltd
inc
pop
loop
mov
out
addb
pushf
arpl
or
lods
mov
decl
loop
insl
or
xchg
xor
cmpsl
jns
push
cmpsb
int3
popa
cmp
mov
jmp
or
jb
xchg
xor
in
or
addb
movsl
ret
fstps
cmp
decl
xor
cli
cmovne
fcoms
fistl
mov
int
push
xor
out
and
popf
gs
test
test
cmp
call
jnp
jge
add
sub
or
outsl
xor
loopne
or
sar
incl
dec
icebp
mov
pop
dec
stos
pop
pop
xchg
xor
pop
add
fisubl
lods
aaa
cld
decl
test
scas
call
scas
out
int3
cmp
inc
incb
pop
icebp
lcall
xor
xor
xor
shll
add
addr16
incl
shll
pop
mov
popa
cmpsb
test
xor
sub
cltd
in
xor
push
inc
add
push
inc
jb
push
fidivrl
lcall
dec
lea
dec
jb
shlb
mov
push
pop
xchg
dec
and
iret
pop
icebp
cmp
cwtl
mov
sub
lret
jo
fwait
xchg
jmp
xchg
hlt
pop
shlb
mull
jnp
or
push
jmp
pop
dec
lods
xchg
push
mov
add
cmp
repz
inc
pushf
ljmp
cld
jp
add
xor
lds
daa
fcoms
test
cmpsl
mov
push
idiv
incl
repnz
xchg
sbb
leave
cmp
cmpsl
cmp
sbb
sbb
ret
icebp
mov
int
jae
inc
mov
inc
pop
and
loop
pop
lea
cmpsb
movaps
testl
jne
mov
mov
add
stos
jecxz
les
test
jg
ljmp
sbb
movsb
mov
lea
mov
push
jp
sarb
imulb
inc
loopne
and
lahf
jg
sahf
mov
lock
push
icebp
mov
bound
iret
pop
jo
add
sub
in
gs
jae
adc
sub
mov
pushf
mov
int3
jle
fldenv
xor
xchg
mov
scas
sub
jl
inc
jmp
shll
sub
sarb
repz
jecxz
shrb
xchg
push
pop
mov
repnz
sub
mov
xchg
mov
aad
add
adc
dec
xorl
in
cli
adc
insl
mov
and
insl
mov
test
cmp
lods
stc
cs
jns
mov
push
cmp
mov
mull
orb
add
adc
mov
in
movb
clc
lret
lret
shll
arpl
pop
push
and
add
pop
pop
pop
repz
xchg
pushl
test
int
mov
jge
xorb
stc
mov
mov
cli
cmp
dec
data16
inc
loop
mov
push
in
dec
cmp
pushf
pop
sub
jmp
jno
icebp
lret
cmp
std
aas
push
rcl
and
out
and
sbb
leave
cld
shlb
dec
xchg
jae
mov
xchg
out
mov
mov
inc
mov
std
loope
push
and
clc
movsl
pop
jne
jmp
outsl
es
ljmp
add
mov
cmpsb
pop
push
mov
ja
or
call
cmpsb
jae
andl
push
dec
mov
dec
stos
fsubl
xchg
jne
cmp
punpckhwd
or
aas
mov
or
or
push
and
lock
cwtl
push
in
sbb
add
pop
ljmp
pop
out
lods
xor
jmp
ds
dec
addr16
test
mov
or
ret
mov
push
mov
call
dec
cmp
inc
xchg
insb
mov
mov
add
pop
jns
mov
std
pushl
mov
xor
push
pop
or
insb
xchg
mov
jle
loopne
popa
leave
xchg
dec
call
and
shl
inc
fisubrs
callw
xchg
add
mov
out
ret
mov
jmp
mov
mov
inc
enter
push
clc
sbb
je
push
adc
jns
dec
loopne
lcall
cltd
aaa
and
pop
sarb
sti
xchg
stc
add
push
outsl
cli
insl
lea
fisubrs
push
jmp
lcall
cld
addb
mov
sbb
out
pop
mov
pushl
adcb
aam
pushf
mov
jnp
xchg
inc
pushf
adc
xor
or
decl
push
shrw
jge
pop
mov
cmp
call
dec
sbb
idiv
mov
subl
mov
push
cmpsb
xchg
lods
sbb
ret
das
add
adc
in
mov
push
jmp
jae
int
ret
xor
lret
test
mov
push
gs
mov
dec
imul
insl
xchg
mov
aam
imul
in
test
repz
ljmp
in
cmp
sarb
xchg
into
js
mov
out
lods
pushl
iret
adcl
addr16
nop
push
ja
jl
out
or
jl
fsubs
xchg
out
jg
ja
fs
outsb
call
negb
unpcklps
loope
mov
pop
lcall
test
push
iret
cmp
lahf
out
add
cmp
incl
push
into
add
mov
fwait
push
inc
popa
insl
mov
jle
fstpl
xchg
xchg
lods
lret
in
xchg
fwait
divl
or
call
ds
das
loope
fidivrs
mov
cmp
or
cmp
pop
mov
push
in
dec
stos
mov
sub
imul
pusha
gs
inc
push
test
fimull
incl
pop
push
idivb
cltd
xlat
repz
cmp
mov
push
pop
mov
cmp
jmp
fcomip
ljmp
and
mov
shl
repz
inc
or
xchg
sub
sub
les
std
jecxz
push
jns
popf
mov
cld
inc
nop
jmp
sarl
or
aas
pop
jecxz
adc
jecxz
leave
or
xchg
push
lcall
hlt
mov
dec
test
es
inc
mov
adc
sub
inc
lock
pushl
cld
push
jno
hlt
add
xorl
mov
test
jmp
movsl
ficoml
sub
or
inc
cmp
ffree
mov
das
shr
sub
insb
sarl
inc
lahf
int
jmp
outsb
cmp
dec
out
ja
and
mov
or
jns
mov
xor
out
xchg
decl
inc
mov
jae
add
rcrb
movsb
mov
mov
push
mov
fstpt
je
jo
aas
lret
in
cmp
add
xlat
xor
fsubrl
leave
sbb
in
call
mov
sub
push
in
fs
sub
in
sbb
sub
bound
lcall
lcall
cld
imul
and
pop
or
adc
xor
fimuls
mov
int
call
out
out
fimuls
xchg
pushf
ds
jmp
mov
loop
pop
pushl
push
fidivl
lods
fwait
out
ud2
mov
outsl
jnp
cltd
push
jl
xchg
xor
stc
out
sti
roll
mov
cld
arpl
popa
mov
cwtl
mov
inc
or
fdivl
movsl
scas
sbb
mov
std
js
cmp
mov
iret
mov
addl
sbb
loope
mov
lcall
movsl
lcall
xor
repz
movsl
cmp
inc
pop
sub
in
pop
imul
test
es
adc
dec
push
subl
xchg
mov
mov
or
push
push
jb
pop
add
cs
pushl
and
pop
scas
std
mov
adc
jnp
xchg
mov
lret
xor
rorb
inc
jl
ss
add
mov
pop
adc
in
lahf
cld
xchg
push
cs
out
mov
incl
cmp
in
aaa
aad
in
leave
popa
jae
daa
ljmp
mov
ror
repnz
cmp
pushl
mov
and
cmp
insl
mov
jbe
int3
pop
cmc
cli
dec
ficoml
arpl
sub
in
sbb
std
out
xchg
mov
pop
loope
scas
xchg
push
jl
mov
jmp
xchg
mov
les
cmc
bound
mov
loope
mov
lea
cltd
cmp
mov
push
insl
fiadds
or
lds
xchg
jmp
inc
int3
movl
int
jg
cmc
aam
push
shrl
out
dec
push
ljmp
ret
ljmp
jbe
rcrl
es
mov
add
mov
jg
repnz
cs
incl
jb
fld
xchg
mov
and
insl
xor
subl
add
test
mov
jne
xchg
data16
lock
je
sti
lcall
out
test
mov
imul
leave
lock
jg
push
xor
and
lcall
fisubl
mov
mov
pusha
push
shlb
daa
lcall
sar
xchg
sbb
scas
aad
push
enter
faddl
jo
mov
enter
ds
rcl
fsubl
cmpsb
into
xchg
loope
adc
inc
adc
mov
mov
or
mov
lcall
cltd
lret
movb
push
cmp
adc
lea
ljmp
xor
lcall
sub
outsb
rorl
inc
mov
shrl
mov
sbb
and
jbe
sti
cli
testl
lcall
shrb
or
sub
shl
insb
jge
popf
daa
sbb
aas
dec
adc
jns
sar
ljmp
mov
mov
dec
leave
shlb
and
inc
movsl
mov
xor
jns
cmpb
jp
jns
and
fdiv
adc
push
clc
decl
xchg
sub
popa
push
loop
int3
outsb
mov
fst
test
incl
lahf
in
dec
dec
jge
lcall
inc
lods
stos
hlt
loop
mov
push
push
jae
adc
out
out
dec
mov
jns
lcall
jl
mov
incl
mul
add
sbb
shlb
jp
mov
mov
test
popf
idivl
cli
mov
mov
movl
stos
add
push
mov
rolb
and
lahf
repz
jno
and
xchg
lock
mov
inc
xor
sub
test
call
imul
xorl
xchg
xchg
inc
xchg
lods
mov
iret
sub
repz
incl
sbb
push
out
sbb
mov
cmpsl
mov
xor
call
je
cli
popf
dec
mov
mov
mov
inc
push
push
or
call
test
adc
int3
sub
outsb
add
fs
pop
stc
sub
mov
push
mov
mov
aaa
aaa
lahf
pusha
nop
daa
push
lahf
mov
std
push
push
icebp
cmp
mov
int3
nop
jmp
add
cmp
ret
mov
lods
add
or
ljmp
inc
jp
pop
insl
outsb
pop
enter
inc
jp
mov
jle
hlt
mov
mov
xor
mov
push
test
aam
rcr
jmp
xor
pop
inc
popa
xchg
aaa
xlat
loopne
sub
jecxz
cmp
cld
incl
mov
leave
addr16
pushw
lods
push
mov
cs
cli
call
inc
add
inc
scas
mov
test
inc
jb
xchg
inc
adc
inc
cmp
mov
dec
inc
sti
jp
in
int3
fdivs
mov
add
aaa
cld
ljmp
dec
test
inc
pop
adc
bound
jnp
adc
imul
sub
stos
hlt
jmp
shrb
hlt
incl
stos
scas
dec
xchg
jecxz
or
jp
orb
bound
fs
in
pusha
pop
decl
addr16
mov
lahf
rol
and
xor
xor
jo
or
imul
xchg
cmp
dec
je
dec
mov
xor
xchg
push
mov
std
lcall
data16
out
lret
bound
mov
into
sub
ljmp
ljmp
mov
push
enter
mov
divl
aas
sub
shl
ret
fcomps
dec
pop
sub
lcall
sahf
test
arpl
sbb
int3
jns
addr16
clc
jno
test
decl
movsl
ljmp
test
inc
xor
call
cmp
jb
decl
and
shl
ss
icebp
loope
leave
int3
cmp
pop
mov
pop
cmp
jg
incl
adc
cwtl
addr16
rdmsr
in
and
pop
shr
jo
push
jmp
int3
xor
pushf
nop
in
xchg
pusha
xchg
and
sbb
out
out
add
push
lods
inc
push
scas
push
or
lret
adc
pop
dec
dec
lods
imul
mov
in
mov
call
in
push
adc
jp
adc
dec
add
cli
or
push
ret
call
adc
cli
xchg
mov
clc
fcomp
nop
add
out
js
data16
mov
push
lea
cmc
clc
cmp
imul
pop
sbb
add
arpl
stc
jmp
repz
mov
mov
fbld
jne
popa
mov
add
mov
in
mov
sub
incl
nop
inc
out
in
mov
adc
mov
cwtl
add
stos
xchg
in
pop
jns
push
jo
fucom
dec
cmp
leave
and
fucom
cmp
cmp
cmp
insb
xchg
xchg
mov
fsts
mov
or
push
stc
push
jae
push
gs
pop
sub
pushl
pop
clc
add
cwtl
int3
xchg
sbb
jnp
outsb
cmp
xchg
push
cmp
push
xor
test
int3
dec
fwait
inc
and
push
sub
imul
ljmp
pop
jae
mov
arpl
bswap
cmp
lret
mov
dec
pop
loope
setbe
jnp
pop
cwtl
push
fiadds
imul
lea
push
ficoml
mov
push
inc
push
xlat
fwait
inc
mov
fcoms
fs
lea
psubsb
add
push
inc
cmpsb
cmp
xorb
das
clc
jmp
fs
pop
fwait
mov
into
xchg
jae
and
xor
sbb
jge
push
shlb
aaa
inc
jecxz
pop
adc
mov
cli
adc
fs
rcr
sahf
jo
int
cmpsb
inc
jp
data16
les
loope
adc
cmp
and
aas
mov
xchg
pushl
mov
loope
adc
popa
mov
jge
mov
js
cltd
cli
fmuls
decl
rclb
stc
aad
js
xor
mov
out
push
pushf
inc
mov
inc
pop
mov
jmp
add
lcall
mov
inc
in
out
sbb
jb
lock
cs
incl
xchg
sbb
mov
dec
adc
imul
jp
xchg
dec
mov
or
mov
jmp
mov
xchg
or
cmp
jmp
rcrb
cmpsl
mov
lcall
ljmp
inc
cmpsl
cltd
das
jle
xor
jno
cmp
outsb
xchg
dec
or
into
outsl
cli
decl
idivb
adc
adc
pop
shl
dec
push
adc
int3
inc
ljmp
pop
rorb
and
adc
inc
je
repnz
decl
ds
fimull
push
xor
mov
mov
je
inc
out
fidivrl
decl
mov
insl
cmp
xor
adc
fcoms
rcll
loope
popa
jmp
shlb
imul
adc
push
inc
fsts
mov
add
add
test
aad
incl
mov
and
cmpsb
cli
cltd
rorl
xor
jg
cmp
push
jo
dec
xor
mov
mov
lret
mov
in
jg
dec
jmp
popf
push
fisubl
nop
and
cli
xchg
insb
or
add
pusha
mov
mov
lret
xchg
call
call
stos
das
mov
js
xor
lcall
or
lret
stos
incb
jae
adc
shll
in
push
sub
push
xor
in
mov
inc
idivb
pushf
call
sub
divb
insb
shr
rcr
mov
pop
cld
ljmp
out
push
add
dec
xchg
jl
or
sub
jp
push
add
ss
and
lcall
lods
es
arpl
scas
sbb
jmp
cli
addr16
and
gs
xor
cmp
mov
clc
cld
aad
pop
pop
mov
cmp
call
ret
gs
adc
call
les
pop
repnz
inc
lods
idiv
mov
jp
jle
mov
movsb
push
xor
add
aaa
and
loope
loop
pushl
adc
xchg
sub
movq
cltd
out
or
jbe
int3
cltd
cld
movsb
fsubl
andb
decl
inc
fwait
sar
stos
adc
cmc
cmp
pop
jge
push
mov
and
mov
test
decl
jb
pushf
cs
jnp
fxch
mov
repnz
push
mov
inc
fwait
xor
ds
sbb
pop
jne
je
jl
and
or
jg
or
jmp
insl
cmp
hlt
sub
cltd
cwtl
adc
mov
mov
ljmp
call
mov
mov
lods
jl
add
mov
enter
das
push
stos
mov
stc
xchg
ljmp
cltd
out
inc
out
add
mov
cmp
lret
mov
sti
test
test
sbb
inc
je
mov
popf
mov
ljmp
cmp
insl
enter
push
xchg
jne
iret
jbe
mov
test
jg
jb
xor
inc
jmp
pop
fsubrs
imul
outsl
inc
imul
mov
data16
dec
push
imul
decl
movsl
mov
shrb
test
clc
fisttpl
ljmp
push
mov
pop
jne
sub
jp
sub
call
rolb
adcl
pop
adc
mov
dec
xor
std
fcmovnbe
push
test
lret
add
xor
and
loope
mov
mov
xor
dec
insb
sbb
pop
sbb
shr
or
test
insl
dec
pop
mov
aad
or
jnp
cli
decl
jmp
into
test
aam
mov
inc
mov
mov
outsl
test
loope
sbb
in
mov
fs
cmpsl
inc
sbb
pusha
pop
mov
jmp
push
or
sub
push
stc
out
add
mov
hlt
push
xor
shlb
je
adc
or
gs
adc
out
jb
xor
decl
push
mov
rorl
imul
xor
lret
sahf
movsl
outsl
pop
out
sub
lcall
pop
test
mov
loope
mov
icebp
xor
pop
movsb
decl
mov
sbb
add
loop
les
adc
xchg
xchg
jl
mov
lock
sti
xor
rcl
add
shrb
xchg
cmp
mov
sub
sbb
ret
in
lds
in
stos
inc
jns
imul
sbb
outsb
mov
incl
or
andb
sbb
cltd
pop
in
decl
mov
cmp
icebp
jns
jg
cld
cmp
test
lret
lock
insb
ret
repnz
popf
outsl
andb
divl
sbb
cs
mov
jnp
in
push
test
mov
xor
dec
js
mov
decl
shl
pusha
cltd
inc
fistpl
sbb
jbe
push
mov
out
sub
cmp
mov
fisttps
push
xor
push
and
hlt
insl
cli
decl
inc
jg
in
and
mov
ds
add
cmp
ljmp
and
pop
adc
xchg
and
push
out
outsb
lcall
push
or
adc
repnz
inc
jae
aad
data16
dec
notb
cmp
ja
mov
cmpb
scas
inc
jno
scas
jg
rcl
insb
pop
fwait
in
test
inc
pop
xchg
xor
adcb
dec
arpl
cmp
mov
xchg
jbe
data16
cld
cmpsb
push
jmp
movsl
dec
push
mulb
ja
hlt
arpl
es
jle
mov
inc
loopne
out
mov
incl
mov
mov
or
in
push
and
imul
add
push
push
fs
jmp
imull
push
xchg
test
out
mov
mov
add
add
mov
test
aam
scas
push
int
jb
mov
out
add
add
decl
shl
jae
mov
mov
mulb
and
fwait
stos
testb
fwait
jb
jl
dec
arpl
jge
pop
lahf
add
call
mov
mov
adc
bound
push
lahf
repz
jnp
xchg
inc
ja
pop
out
test
mov
jecxz
xor
push
incl
out
icebp
or
dec
xchg
push
cmp
cmpsb
jge
jle
sahf
jle
mov
fmuls
push
mov
add
insl
loope
cmpb
pushf
stos
stc
ljmp
jp
in
mov
dec
pushf
adc
pushf
outsl
loop
push
call
arpl
ljmp
push
out
mov
inc
add
adc
fidivl
lock
jmp
dec
add
push
jnp
push
xlat
pop
test
fisubs
int3
call
inc
xorl
andb
je
imul
mov
jmp
cmc
js
clc
lds
jns
movsb
and
ljmp
xchg
push
push
ret
xchg
psrld
das
push
mov
ljmp
mov
ret
cld
pop
call
rorl
jno
data16
addr16
or
andb
lea
or
inc
mov
add
inc
mov
ud0
ljmp
cmc
repnz
cmpl
jae
fldcw
xchg
inc
jae
jnp
call
lods
and
push
and
push
jb
xchg
out
insb
sbb
fiadds
fwait
cmpb
dec
push
imul
ds
pop
nop
into
incl
fdivr
add
icebp
in
mov
push
in
cmc
mov
cs
es
mov
pop
adc
cmp
mov
enter
jg
adc
arpl
ljmp
mov
mov
out
rcll
shll
push
mov
pop
hlt
repz
push
leave
lcall
adc
cwtl
pop
inc
jns
out
pushl
xchg
fs
push
push
stc
fdivs
in
in
ficomps
push
mov
in
in
xchg
xor
cmp
push
jge
nop
ljmp
mov
push
stos
leave
sbb
jge
js
shlb
enter
call
les
add
test
movsl
pop
notb
mov
pop
pop
jmp
repnz
fcomip
jmp
dec
jno
or
push
add
sarl
nop
mov
push
ss
arpl
sbb
cmp
pop
inc
jbe
ljmp
js
cs
clc
adc
mov
jae
jbe
and
loop
inc
add
incl
dec
sbb
in
adc
lahf
mov
xor
adc
decl
bound
mov
mov
test
ljmp
pop
cmpsb
repz
shrb
xchg
es
call
out
cmp
lcall
sbb
dec
test
fnstsw
pop
inc
lods
pop
xchg
gs
dec
push
insb
dec
sbb
outsl
adc
mov
stos
mov
sub
mov
mov
movsb
xorb
mov
xlat
mov
jbe
loopne
mov
dec
xor
jmp
out
hlt
movsb
add
std
test
loopne
cltd
or
mov
fcomps
fcos
pushl
ret
jo
arpl
mov
adc
scas
push
cmp
bound
sbb
in
jmp
clc
xor
jns
jne
scas
xlat
xchg
icebp
shl
mov
ljmp
cmc
fucomp
and
fiaddl
cli
sbb
and
jnp
inc
xor
in
fidivrl
dec
mov
mov
dec
test
divl
inc
lahf
cmc
inc
scas
stc
out
mov
xor
cmp
jg
pop
sub
or
xchg
or
or
andl
mov
pop
stos
fisubrl
push
sbb
call
sub
mov
sub
rorl
mov
xchg
push
test
xchg
mov
jo
outsb
call
pusha
push
push
pop
adc
mov
fs
xor
jo
lret
decl
ret
fbstp
loope
and
mov
icebp
hlt
xor
push
dec
inc
lahf
jb
test
clc
popf
pop
push
mov
push
dec
jle
or
pop
add
aad
imul
pop
or
jmp
cmp
stos
sub
int
loope
push
dec
push
inc
or
test
bswap
jmp
and
iret
stos
int
jge
ljmp
outsb
xlat
and
ljmp
dec
adc
fiadds
mov
aad
sub
lcall
mov
scas
fnstcw
and
in
xlat
dec
fnstsw
push
ss
xchg
adc
test
imulb
sub
rcrl
cmc
mov
mov
xor
test
test
jl
pop
mov
xorb
fistl
pop
outsl
clc
lcall
add
iret
pop
fstpt
aaa
outsb
pop
mov
dec
xchg
decl
jl
push
cs
jecxz
ret
sub
push
sub
add
pop
lds
jae
arpl
decl
mov
loopne
lret
int3
push
fsts
insl
adc
incl
fisubs
insb
add
xlat
rsqrtps
mov
sbb
call
data16
rcrl
cmp
rorl
cmp
hlt
mov
or
jecxz
adc
push
incl
mov
ror
movsb
ret
dec
loopne
popa
mov
int3
push
xchg
push
incl
sub
xor
cmpl
push
cmp
xchg
dec
and
sub
lcall
loope
xchg
jnp
jge
loope
xchg
push
notl
out
mov
je
nop
decl
jg
loopne
dec
add
jb
dec
aas
adc
fsubrs
push
mov
shll
mov
iret
out
leave
fadd
xchg
call
out
decb
jbe
mov
retw
sub
inc
aaa
rcll
sbb
fisttps
and
push
pop
or
fldt
jp
push
call
push
push
or
pusha
xchg
ljmp
dec
out
or
fwait
sti
sub
push
fidivs
dec
adcb
test
jp
imul
ljmp
lock
mov
outsb
in
out
xor
iret
ret
push
fmulp
cmp
pop
and
mov
lcall
clc
pop
mov
dec
in
jmp
aam
out
movd
gs
cmp
push
pushl
sbb
in
popa
sub
jge
fmulp
pop
lds
imul
in
add
xor
sbb
movsb
iret
adc
mov
lcall
push
call
cmpsl
cmc
stos
out
jno
ret
add
and
out
and
mov
pushl
fstpl
adc
and
incl
push
sti
mov
in
push
sub
iret
cld
cmp
out
inc
mov
pop
pop
test
test
xchg
rclb
rorl
incl
push
sub
xor
mov
mov
addr16
add
imul
enter
mov
mov
mov
push
jo
mov
rorb
fdivr
mov
lcall
push
and
sti
sbb
inc
lea
inc
adc
shlb
ljmp
fwait
outsl
pop
test
je
out
pop
nop
mov
loopne
mov
sbb
decl
dec
jne
cmpsl
cltd
jecxz
push
dec
xchg
mov
add
mov
sti
xor
mov
decl
mov
insb
mov
ds
cld
ds
in
pop
ja
and
xchg
pop
in
cli
loopne
lret
pop
cmp
jg
out
or
pop
out
cmp
pop
shrl
testb
mov
sahf
cmp
mov
mov
repz
iret
sbb
mov
mov
cmp
mov
shl
mov
jge
das
clc
and
or
movsl
incl
aad
xor
mov
out
xchg
lahf
add
lcall
add
inc
and
xor
add
and
lock
lret
push
adc
lcall
cmp
lds
scas
lret
sbb
xchg
sbb
les
jg
inc
scas
pop
jmp
dec
hlt
in
movl
or
pop
lock
fisubs
nop
cmpsl
lret
rorb
cwtl
mov
arpl
sbb
loop
in
xchg
xchg
cmp
aad
add
adcb
mov
lcall
mov
hlt
or
add
ljmp
test
ret
xlat
push
adc
add
mov
mov
pop
js
xchg
lcall
pop
push
jecxz
std
sub
xchg
xchg
mov
in
pop
cwtl
loopne
insb
in
mov
out
cli
ljmp
cmpsl
adc
mov
sbb
test
leave
nop
mov
ljmp
inc
jmp
sbb
sahf
mov
jle
aaa
pop
icebp
sub
insb
call
sbb
subl
nop
xchg
xchg
adc
std
cmpsb
sub
cmp
xorl
loop
adc
sub
icebp
mov
xor
cmp
cs
into
push
xchg
xor
and
stc
add
mov
inc
add
scas
jnp
nop
push
rclb
mov
and
dec
sti
pop
cltd
ljmp
push
ja
or
sbbl
aam
jo
fadd
sbb
ljmp
lea
pop
xor
xchg
mov
xchg
push
jbe
pushl
mov
ret
sub
mov
push
fidivl
outsl
shll
inc
fs
jno
cwtl
pusha
add
add
jmp
jle
jl
mov
addr16
adc
or
dec
outsb
xchg
lods
cmp
or
pop
sahf
inc
add
sub
mov
lods
xor
push
je
dec
clc
idivb
inc
add
test
or
and
dec
inc
mov
dec
call
lcall
out
xchg
leave
push
push
addl
dec
lahf
jp
push
les
clc
adcl
in
sbb
cmp
cmp
and
ljmp
jbe
adc
ljmp
idivl
test
cld
and
add
sahf
xchg
sti
movsb
jnp
sbb
cld
pushl
imul
rolb
push
add
mov
jmp
add
jbe
enterw
xorl
jle
pop
insl
adc
push
daa
bound
mov
mov
push
push
xor
cld
cmp
push
je
insl
or
and
sub
movsb
mov
dec
and
inc
sbb
aam
or
jl
std
push
cmp
sbb
ret
lret
idivb
inc
cld
fcom
jne
outsb
dec
icebp
cs
movsb
mov
mov
dec
mov
sahf
and
gs
scas
daa
sti
int3
xor
sub
rolb
cmpsb
jb
sub
lcall
das
aam
ds
repnz
cwtl
mov
mov
aam
sbb
xchg
pusha
sub
ror
ja
xor
test
or
or
test
incl
adc
rcll
int3
jno,pt
add
incl
test
lea
fstps
movsl
sti
mov
pop
mov
mov
dec
jns
sbb
es
aas
push
mov
sbbb
adc
push
loop
cmp
mov
out
lea
push
add
loopne
aas
dec
cmp
idivb
sbb
call
test
sub
sbb
inc
imul
jbe
leave
pop
lcall
xor
subl
push
dec
rcll
push
sbb
sbb
adc
ret
jmp
incl
xor
mov
cmpb
inc
loopne
fs
int
sarl
sub
sti
outsb
aaa
stos
jg
fcoms
xor
imul
pop
test
mov
sbb
incl
mov
outsl
cltd
jnp
or
mov
in
stc
lea
test
int3
lds
push
sub
mov
test
mov
add
jno
ljmp
push
clc
push
rorl
cmp
dec
mov
ja
and
mov
sbb
jae
adc
and
push
adc
cmp
movsb
fistpl
xchg
xlat
dec
aad
mov
push
mov
jp
aad
lock
movsb
imul
jmp
fildll
icebp
ljmp
sbb
jge
add
cld
int3
pusha
xchg
mov
sbb
push
pusha
and
aaa
mulb
movsl
int
pop
sahf
xor
scas
nop
stos
out
and
fildll
in
jb
loopne
cmpsl
test
inc
cmp
xchg
cli
cld
mov
cmp
fmuls
push
mov
adc
mov
or
or
popf
lret
push
sbb
cmpsb
cltd
mov
stos
inc
call
stos
aam
addr16
mov
jo
stc
xor
adc
lcall
rcr
js
testl
push
mov
shl
xor
or
mov
pushf
emms
fists
push
fcoms
lds
rolb
fdiv
xor
movsb
div
inc
pop
in
in
push
xor
xor
sub
flds
mov
fidivl
and
pop
inc
adcb
into
in
mov
cld
lcall
push
pop
js
adcb
rcll
lret
pop
inc
push
into
add
scas
adc
mov
mov
or
stc
or
out
mov
ljmp
clc
lcall
mov
and
negl
dec
pop
dec
aaa
cmp
xchg
test
pushl
orb
dec
sbb
push
test
sarl
xchg
lcall
loop
icebp
test
mov
mov
sbb
movl
mov
pop
in
imul
mov
cmp
jp
stos
inc
adc
xchg
pusha
aad
scas
cli
js
out
inc
pop
and
dec
mov
pop
pushf
dec
popf
punpckhdq
and
xlat
icebp
xor
jmp
jmp
out
roll
ljmp
dec
or
std
push
add
jmp
sbb
mov
popf
xchg
call
push
push
mov
dec
cli
dec
pop
stc
out
xchg
sub
sub
pushl
lea
xlat
add
test
xchg
hlt
mov
ds
incb
pushl
or
jae
pop
and
ja
outsb
js
or
mov
jg
and
jg
sub
rorl
mov
fsubrl
int3
ss
adc
sbb
icebp
daa
pop
jbe
aaa
inc
loope
ljmp
mov
mov
movsl
cmp
int3
out
ljmp
inc
add
lcall
je
mov
add
ficomps
xchg
pusha
pop
jnp
sti
sbb
cmpb
xchg
ljmp
mov
xor
adc
or
dec
scas
outsl
xchg
out
pop
cltd
cmpsl
add
pop
inc
mov
cmp
add
adc
dec
xor
enter
imul
cmc
je
xor
and
or
and
movsb
call
mov
sub
and
pop
sahf
push
mov
add
mov
sbb
cmp
cmp
scas
outsb
cs
gs
call
incl
xor
pusha
movsl
pushf
dec
cmp
inc
lods
add
mov
int
ljmp
add
out
data16
into
and
add
xor
and
inc
jb
into
and
inc
xor
test
bound
imul
cmp
xor
jb
mov
in
jecxz
pushl
lods
cltd
sub
lret
push
mov
jge
in
xor
add
xor
decl
inc
jp
outsl
cmp
mov
lahf
aam
pusha
mov
clc
movsl
cmpsb
inc
mov
jnp
sahf
jecxz
rorb
incl
stos
movsl
sahf
xchg
pop
sub
cwtl
movsl
cmpl
insl
inc
jne
sbb
nop
repz
insl
sbb
out
jmp
lret
lret
xor
cmp
mov
adc
arpl
fcmovnbe
dec
repnz
incl
dec
cwtl
les
daa
lret
popf
sarb
aaa
iret
and
hlt
bound
test
fisubrs
ds
imul
repnz
mov
aaa
insb
pop
stc
dec
sub
lret
xor
lea
ljmp
call
mov
andb
mov
pop
xchg
out
lock
mov
mov
in
mulb
hlt
add
xor
inc
cwtl
or
inc
stos
adc
jb
das
insb
push
aam
pushf
pushl
cmp
arpl
shll
aam
jae
jbe
out
jo
addr16
jmp
push
xorb
stos
mov
movsl
adc
ja
push
stc
addr16
bnd
es
ss
xchg
adcb
incl
les
in
or
test
cli
imul
adc
cmc
mov
notl
mov
aam
jmp
cmpsl
sbb
xchg
in
inc
jne
sahf
fisttpl
movsb
std
dec
xchg
shll
decl
fwait
cmp
call
shl
and
test
fwait
mov
jno
xor
push
out
decl
push
add
std
andl
aaa
cmp
and
pop
std
lcall
mov
arpl
jmp
mov
jb
mov
ljmp
inc
sbb
mov
das
or
int
cmpsb
or
cld
incl
or
imul
pop
adc
inc
aas
mov
xchg
fcomip
pushl
dec
cmpsb
mov
push
sahf
int3
add
sub
daa
jae
pushf
out
and
push
dec
mov
mov
cmpsl
in
clc
andl
sub
push
jnp
xchg
es
mov
movsb
incl
movl
or
int
xchg
mov
mov
incl
pop
cmp
clc
add
pop
xchg
shlb
push
xor
or
rorl
xchg
xchg
push
ljmp
pop
hlt
dec
aad
cmp
mov
clc
jne
sbb
or
inc
mov
push
xchg
pop
mov
mov
andb
jb
dec
ljmp
fcomip
daa
fsubrl
ljmp
jmp
pusha
into
mov
popf
lcall
decl
xchg
pop
cli
lods
mov
cmc
jge
arpl
in
jmp
lret
fsubs
inc
pusha
outsb
jg
sub
out
mov
and
mov
scas
jb
icebp
out
or
gs
fcos
incl
jno
test
mov
call
cld
and
dec
push
xor
popa
add
loop
cld
push
xorl
lea
or
push
mov
jbe
movsl
sub
lcall
jo
aad
insl
repz
sub
dec
fldl2e
push
jmp
sbb
jg
call
in
add
lods
mov
push
mov
rclb
and
js
pop
aad
idivl
adc
fcomps
out
sbb
loope
fbld
sbb
inc
leave
dec
call
movb
movsb
stc
dec
xchg
mov
inc
sar
fiadds
hlt
push
add
out
lods
out
or
fisubl
sub
inc
xchg
fldl
stos
stc
mov
add
ljmp
fisubrs
aad
jns
inc
push
mov
decl
iret
jno
and
loop
sahf
adc
dec
pop
xchg
sarl
and
stc
lock
xor
incl
jns
ret
inc
jge
cmp
pop
cmp
pop
or
int3
lahf
aad
insb
mov
ja
pcmpeqw
decl
outsl
out
out
ja
pushf
lret
popf
ljmp
inc
mov
jge
aas
cmpsb
mov
pushl
jnp
pop
mov
loop
pop
mov
jb
add
sbb
pop
sarb
jns
mov
xlat
jnp
rorb
lret
sti
loop
mov
lock
imul
fcomip
outsb
xchg
and
outsb
mov
lock
shl
push
jp
sub
mov
cmp
nop
das
and
lahf
enter
mov
stos
sbbb
fnstenv
cmp
lcall
mov
daa
fmulp
jmp
mov
clc
fcomp
push
inc
mov
mov
cltd
pop
sbb
adc
push
popf
js
lods
pop
ret
jge
pop
pop
nop
stos
xor
hlt
cli
sbb
or
aaa
loopne
push
jne
ss
rclb
cmp
ret
enter
sahf
xor
and
jns
les
cmp
aaa
mov
push
mov
add
pop
enter
clc
fildll
sub
int
sub
mov
and
dec
je
lcall
imulb
mov
and
cmovne
movsb
cmp
mov
int3
inc
jg
incl
stos
aaa
das
out
cld
mov
gs
js
cmp
fcompl
cld
test
sub
jmp
out
xchg
je
dec
mov
cmp
mov
inc
or
lock
push
movsb
inc
repnz
dec
inc
imul
and
jnp
xor
movsl
jns
xlat
out
add
ret
jnp
and
aas
lahf
pop
mov
popf
les
add
movsb
ds
out
sub
popf
nop
mov
dec
and
decl
test
adc
mov
rcr
dec
pushf
jmp
sti
cs
sub
add
call
into
jo
add
cmpsl
push
cmc
mov
mov
jbe
in
in
and
cwtl
in
testb
xchg
xchg
inc
loopne
mov
jb
cld
sbb
and
cmp
call
insb
lret
push
fldl
adc
call
sub
lods
xchg
or
mov
pushl
pop
xchg
dec
cwtl
inc
cmc
cltd
fdivp
jne
pusha
inc
sbb
int3
lret
cmp
push
jmp
decl
js
mov
loopne
frstor
mov
mov
and
mov
sub
mov
xor
cld
enter
push
mov
xchg
sar
lcall
push
cmpsl
xor
fcmovnu
stos
in
sub
xchg
pop
pop
scas
sub
scas
mov
jb
push
dec
mov
xor
cmp
incl
rorl
js
xchg
lock
jl
xchg
mov
cs
fmull
xor
fbld
dec
cltd
rcl
xor
punpckhwd
jle
lcall
push
sub
jg
call
popf
cli
mov
stc
insl
and
test
add
clc
sub
repz
call
inc
mov
ucomiss
clc
add
inc
lahf
pushf
cmp
mov
call
mov
cmpsl
cmp
mov
lods
icebp
cmp
jp
push
xchg
mov
inc
and
push
and
mov
std
jmp
mov
out
outsb
mov
repnz
gs
adc
in
pop
cmp
lods
inc
nop
jb
sahf
dec
negb
dec
sahf
or
pop
scas
iret
mov
lret
jnp,pt
ss
das
test
adc
jns
and
push
xchg
or
cmp
imul
dec
jg
clc
push
xor
sbb
hlt
sti
loope
subl
jbe
inc
ja
lcall
mov
addl
inc
adc
movsl
icebp
push
lock
loope
aam
data16
dec
out
dec
fisubrl
lcall
lcall
push
dec
push
mov
es
inc
jp
in
pop
cmp
test
mov
xor
cmp
rcr
xchg
fwait
cwtl
out
in
xor
pop
loopne
outsl
mov
ljmp
icebp
sbb
and
xor
shl
and
fcomip
adc
mov
sbbb
xchg
outsl
rorb
and
xchg
mov
jmp
es
mov
andl
addr16
imul
decl
jne
cmc
lock
je
scas
cli
or
icebp
out
fucom
push
jnp
js
sbb
scas
enter
xchg
insl
fldcw
jae
and
cmp
pop
add
pop
dec
ds
and
imul
fisttpl
jecxz
mov
test
jg
cmpsb
mov
jmp
aaa
dec
fcmovbe
cmp
cmp
out
and
lds
mov
mov
mov
fdivl
sub
mov
sbb
push
dec
mov
and
shlb
xchg
movsl
mov
lret
mov
push
pop
mov
adc
sahf
cmp
mov
jo
inc
fmull
push
cwtl
in
or
adc
inc
stos
jo
or
and
aaa
mov
and
or
push
push
xor
clc
addr16
pushl
jl
lods
xor
leave
fs
fs
insl
push
mov
int
add
in
aam
xlat
call
dec
dec
xor
insl
fdivrs
jecxz
ret
mov
imul
js
enter
mov
mov
sar
decl
int3
mov
bswap
push
sbb
std
aaa
pop
mov
push
loope
mov
out
std
loopne
test
lcall
ja
ljmp
fmuls
push
add
mov
dec
mov
nop
cmp
mov
inc
testl
test
xchg
in
or
push
add
jne
jnp
jg
es
in
cmp
sub
das
clc
push
adc
push
les
cmp
dec
sub
cld
jmp
out
mov
and
xlat
adcb
lret
push
xchg
cmp
adc
mov
call
xchg
ja
sub
adc
scas
push
push
sbb
fnstcw
xchg
and
fsin
mov
pop
mov
cmp
iret
pusha
mov
bound
or
mov
sub
xchg
repnz
cmp
call
loopne
cmpl
sti
xchg
enter
push
jno
xchg
pushl
adc
jae
mov
call
jg
inc
dec
imul
or
std
call
cmpsb
sahf
in
jno
addb
cmpsl
cvtdq2ps
xor
ja
iret
pushf
fucom
imul
push
clc
pop
in
mov
mov
xor
and
call
cld
xchg
cmpsl
mov
loopne
bound
rorb
pop
inc
xchg
add
adc
lock
dec
add
jg
pushl
sbb
sti
int3
push
xlat
subl
push
dec
outsl
test
fmull
jge
push
decl
iret
std
adc
jno
movsl
ss
das
mov
mov
jb
jp
adc
sti
outsl
clc
lcall
xor
divl
lock
popf
lahf
mov
nop
sub
mov
jns
lods
lahf
fstps
shr
push
iret
and
push
scas
or
rolb
cmp
out
mov
cmpsl
ret
enter
fs
or
xchg
dec
mov
outsl
sahf
stos
xchg
fbstp
call
jle
popa
ret
stos
xchg
outsl
or
add
jnp
and
xlat
cmp
lcall
sbb
pushl
mov
dec
xchg
lock
cmpb
fimull
scas
call
add
jg
sbb
incl
pop
shlb
lcall
xor
mov
lret
push
mov
add
ss
pop
jmp
in
push
loopne
mov
repz
data16
test
cmpl
add
inc
arpl
incl
ss
mov
inc
push
std
xor
lcall
adc
decl
push
hlt
fnstcw
je
and
xchg
inc
xchg
ss
xchg
test
scas
mov
cmpsb
or
je
ret
rol
fdivrp
mov
ljmp
je
sub
clc
cmpsl
xchg
ret
stc
xor
cwtl
pop
and
xor
sar
stos
popf
pop
hlt
incl
xchg
pop
insl
movsl
pop
scas
sarb
movsb
inc
insb
cli
lahf
jp
enter
pop
popa
adc
xchg
dec
mov
mov
mov
push
pop
sub
test
push
dec
mov
sbb
xchg
jns
cmp
mov
stos
test
sti
jle
cs
dec
inc
adc
pop
hlt
imul
scas
and
push
loope
push
push
ds
aaa
xor
decl
mov
out
sahf
js
jg
stos
addl
pop
lcall
mov
mov
xchg
mov
outsb
enter
jl
push
xor
loop
mov
dec
sbb
popa
or
adc
or
jmp
pushf
enter
jne
inc
call
jns
dec
sbb
jmp
mov
jo
aas
je
iret
cmp
xor
add
mov
das
test
mov
mov
enter
xor
dec
cwtl
xchg
mov
out
jb
in
xchg
xor
movsl
jae
dec
sbb
jno
or
mov
sbb
out
popf
clc
stos
ds
cmp
xlat
or
stos
mov
mov
xor
xor
cltd
and
sbb
into
mov
pushl
mov
mov
pop
add
sub
sub
adc
sub
push
mov
or
pop
push
ds
int3
outsl
xor
mov
lret
sbb
addr16
jmp
or
mov
test
and
int3
mov
repnz
jb
adc
push
jmp
cwtl
jmp
pop
xchg
int3
or
repz
pop
dec
neg
call
js
jmp
incl
sub
test
push
mov
es
mov
and
push
bound
push
addr16
mov
decl
xchg
add
push
gs
cwtl
sub
add
xchg
fs
leave
mov
daa
or
call
lcall
outsb
dec
xchg
sub
aad
fistps
adc
push
insl
push
inc
push
shlb
std
outsl
jmp
bound
fcmovu
into
stos
mov
dec
fldl
jnp
ss
fwait
scas
clc
dec
cmp
negb
push
addr16
out
aas
inc
push
mov
push
idivb
push
mull
daa
push
dec
jno
rcrl
sub
sbb
xchg
shrl
adc
pushl
xor
mov
insl
sti
push
popf
xor
mov
outsb
dec
mov
push
and
inc
push
decl
sub
scas
adc
daa
daa
mov
and
dec
fisttpll
les
inc
xor
mov
shlb
sub
and
mov
push
add
sti
pushl
cltd
cli
movl
jg
add
adc
push
add
scas
idiv
jg
jg
inc
or
gs
pop
lds
xor
adc
push
pop
sahf
jbe
ror
pushl
push
imul
sbb
fnstsw
repnz
in
pushf
push
out
ss
inc
mov
push
data16
popl
stos
mov
pushl
jns
cmp
cmp
rcl
imul
xchg
cmp
pop
and
mov
xchg
xor
pop
out
or
cmpsl
out
push
dec
pop
imul
call
loop
mov
mov
pop
movsl
mov
lock
bound
jmp
incl
arpl
std
out
sti
je
cwtl
fs
sub
lock
out
rcl
js
and
mov
das
pop
cmc
add
mov
dec
loope
jmp
mov
sub
xchg
call
inc
lock
cmp
and
cs
int
push
mov
aas
cmpl
out
cli
inc
sub
ss
fdivrs
jecxz
hlt
push
and
mov
sbb
incl
js
xchg
ljmp
sub
or
test
shr
ljmp
xchg
xchg
adc
std
in
fwait
xchg
stos
mov
cltd
clc
pushf
mov
mov
pop
rclb
pop
mov
add
call
add
or
dec
lea
call
or
jg
xchg
add
jmp
add
cmc
cmp
xor
mov
cmp
cmp
add
inc
cltd
or
push
jbe
daa
xchg
inc
mov
mov
push
jbe
push
std
imul
out
inc
incl
jge
fwait
pop
inc
imul
out
dec
lea
mov
lods
or
pop
icebp
outsl
xchg
scas
jmp
cmp
ja
push
cmp
bound
add
gs
or
incl
decb
aas
push
sbb
and
movsl
nop
adc
repnz
or
jmp
fdivrl
sbb
stos
xor
inc
adcb
out
in
std
sub
adc
enter
jmp
out
imul
popf
xor
orl
jns
push
xor
shll
cmp
js
jp
fs
fwait
cld
mov
sbbb
mov
je
or
dec
push
ja
ljmp
iret
xchg
iret
loopne
aam
mov
jp
lahf
push
jg
sbb
xchg
xor
daa
dec
int
cmp
movsl
lods
loopne
loop
loopne
out
cli
push
gs
sub
and
bound
xchg
aaa
js
stc
cltd
cmpsb
xchg
lcall
or
out
jle
lods
test
mov
push
test
lret
and
imul
sbb
xchg
int3
xchg
addr16
xchg
xor
pop
or
push
inc
push
xchg
mov
in
mov
insb
aaa
jne
incl
mov
pusha
je
add
adc
jnp
mov
push
scas
sbb
orb
sub
add
into
pop
jp
inc
insb
push
jmp
negl
xchg
fs
xorb
incl
fs
pop
test
jne
jae
sbb
add
push
das
xchg
sbb
push
int3
imul
mov
xor
shrl
pop
orl
out
scas
cmp
dec
ljmp
sahf
cmp
push
std
mull
cmp
mov
clc
and
fldt
int
sbb
add
push
jno
adc
bound
inc
mov
orb
pushl
jle
incl
cmp
bound
or
mov
xor
iret
pop
test
inc
mov
lods
pop
pusha
inc
outsb
cltd
test
repz
pop
fnstenv
mov
add
sahf
pop
inc
jo
inc
lock
dec
mov
cmp
xor
roll
cwtl
jb
or
aam
ror
cli
fdivs
mov
inc
sbb
ret
sub
cmpsl
xor
cmc
lcall
shl
xchg
sub
xchg
mov
cs
mov
sbb
clc
and
js
push
sub
test
outsb
lcall
or
mov
dec
jp
sub
test
imul
push
inc
sahf
imul
fdivl
loope
mov
pushl
sbb
movb
push
and
jg
push
in
stos
imul
nop
roll
jne
push
fld
inc
push
adc
jecxz
inc
inc
add
and
scas
int
sti
sub
faddp
aad
push
mov
dec
enter
pop
cld
mov
call
lret
in
jb
hlt
shrb
aaa
cltd
sub
call
insb
or
call
call
cmp
repnz
pop
lods
mov
fmull
jns
xchg
xor
pushl
jecxz
pop
hlt
pop
cli
pop
mov
stos
shrl
ldmxcsr
mov
loope
daa
push
and
hlt
jg
pushl
data16
push
adc
loope
add
ljmp
sbb
cld
decl
jle
sub
aaa
repnz
icebp
lcall
cld
mov
lods
pop
jb
push
jg
das
cwtl
cmp
cmp
ret
loope
mov
xchg
inc
pushf
sbb
fdiv
cmp
das
shrb
jmp
stos
popf
jp
daa
fisubs
lcall
pop
jo
jnp
ret
fnstenv
xorb
sub
andl
scas
into
fs
pusha
dec
adc
push
push
sub
xchg
rorl
mov
aas
decl
pop
clc
out
in
mov
and
adc
jmp
pop
mov
hlt
or
in
mov
arpl
outsb
mov
icebp
inc
push
decl
sbb
pop
out
cmp
sub
sbb
popa
or
decl
bound
cmpsl
loopne
xchg
mov
mov
xchg
ret
inc
sbb
adc
pop
std
ljmp
insb
jecxz
xchg
push
movsl
faddp
mov
and
addr16
pushf
add
cs
pushl
add
nop
insl
fstpl
movsl
sti
xchg
or
sub
sub
mov
push
iret
shll
mov
out
mov
sti
adc
cmpsb
in
mov
in
incl
fsubrl
jle
dec
pushf
rcl
shlb
or
or
adc
sub
lods
mov
les
inc
pushf
test
repz
xchg
lret
sub
dec
add
scas
jnp
fs
push
mov
fdivs
xchg
stc
pop
pop
stc
cwtl
mov
jbe
jo
pushl
jne
xor
out
dec
jmp
repz
scas
add
mov
ja
std
movsl
loop
mov
es
inc
and
shlw
decl
lcall
or
arpl
pmaxub
inc
scas
scas
jp
jne
jo
rcrl
ljmp
hlt
cmp
inc
xlat
test
pop
out
andb
lock
sub
inc
inc
orl
and
push
nop
sbb
aaa
mov
pop
sarl
add
xor
inc
aam
mov
out
fisttps
lcall
cld
dec
fnstcw
cmp
or
xchg
repz
ljmp
cmpsb
sub
scas
dec
pop
adc
adc
lcall
imul
pop
js
sub
ja
fisttpll
push
and
xchg
je
xchg
leave
dec
mov
cwtl
push
and
test
xchg
adc
sar
decl
imul
pop
adc
icebp
jg
mov
insl
jns
cli
lods
cmp
inc
fisubrl
js
xor
mov
push
in
push
fsubr
leave
sbb
cmpsb
insl
pop
push
jno
cwtl
js
mov
cli
decb
mov
aas
dec
mov
stc
mov
adc
xor
mov
jmp
sahf
arpl
insb
push
ds
mov
lea
lds
mov
add
sbb
dec
fisubrs
adc
xchg
dec
daa
mov
mov
nop
fwait
jo
lret
mov
test
inc
fldt
and
xchg
cld
sbb
dec
push
or
je
jns
dec
pop
lcall
les
movl
sub
or
add
data16
adc
insb
rclb
mov
pushl
int3
imulb
pop
or
push
cmp
jmp
popf
sub
jle
jmp
repnz
jecxz
les
mov
call
mov
push
xor
push
sub
and
incl
xor
inc
mov
mov
repz
ret
fidivl
scas
jl
fwait
mov
xlat
inc
mov
inc
fiaddl
jno
or
inc
mov
xor
pop
loopne
out
lea
aam
and
mov
out
lods
cmpsl
fisttpll
call
out
fisubl
pop
sbb
aam
cmp
pop
out
xlat
je
sarl
inc
lahf
sbb
aad
cli
lcall
test
dec
push
and
lock
or
ds
leave
arpl
xchg
jg
lcall
xor
xchg
or
mov
push
jno
jo
sbb
ljmp
dec
ljmp
push
dec
cli
inc
and
mov
mov
mov
incl
lods
les
add
adc
dec
cmp
pushf
test
or
mov
ljmp
jmp
jmp
sarb
in
sbb
inc
call
add
jns
das
fwait
decl
imul
fsub
jnp
movsb
movsb
dec
sbb
add
nop
push
mov
daa
or
ret
clc
repnz
push
and
xchg
fsubs
cmc
call
pop
pushf
fildl
cmpsb
inc
insb
pmuludq
cmp
fdivr
jmp
lret
sbb
sbb
ja
push
lds
in
js
xchg
movsl
lock
xchg
add
mov
add
push
out
mov
and
jecxz
jb
cld
jbe
add
ret
shlb
mov
jmp
out
fs
cmp
hlt
dec
adc
out
mov
pop
mov
jmp
dec
lods
fadd
repnz
decl
cmpps
jmp
pop
or
fisubs
dec
xor
dec
mov
dec
std
ljmp
sub
movsl
cmpsb
aas
mov
js
aam
std
xchg
adc
xor
ljmp
sbb
int3
dec
imul
out
add
test
addr16
mov
arpl
sbb
cmp
sub
jmp
pushl
jge
add
shl
fnstsw
das
rcll
aas
add
pop
adc
or
mov
cmp
pop
neg
fwait
sub
inc
sbb
jnp
adc
dec
in
notb
pop
repnz
in
popf
dec
jp
pushf
xchg
cvtps2pd
dec
in
add
cmpsb
popa
out
push
imul
test
jg
loopne
push
xchg
inc
push
jbe
fwait
enter
fsubrl
adc
rcr
daa
mov
mov
jg
dec
mov
xor
sahf
inc
outsb
popa
incl
mov
or
shl
clc
pop
pop
sbb
jge
clc
mov
pushf
fisttps
mov
sub
incl
lcall
mov
outsl
mov
nop
test
stos
arpl
or
mov
movsb
ret
cmp
jmp
or
sub
outsb
xor
jns
imul
test
in
sahf
lods
jecxz
je
loope
jecxz
push
call
ds
add
jae
lahf
icebp
test
les
popa
dec
jg
ljmp
cmp
or
cmc
pop
mov
aad
int3
push
fiaddl
clc
pushl
filds
push
mov
inc
test
mov
dec
stos
jne
incl
cwtl
repz
stos
int
xor
xor
std
mov
aad
push
movsl
test
inc
pop
push
jne
sub
dec
xchg
sbbl
push
ficompl
pop
loope
xchg
aaa
std
jg
xor
mov
xor
jne
mov
mov
adc
push
mov
jmp
cmp
push
jp
jecxz
or
lret
jmp
ret
or
fsubp
mov
imul
jmp
xor
mov
mov
fistl
rcr
mov
std
adc
cmpsl
adcb
clc
fstp
push
jmp
sbb
pop
movsb
xchg
test
sbb
xchg
cltd
incl
mov
fidivrl
fs
cwtl
xchg
cmp
movsb
call
cmp
decl
es
mov
loop
jg
dec
dec
sbb
sbb
shll
loope
cltd
adc
mov
scas
into
and
ds
adcb
add
jge
arpl
add
pop
xor
call
loop
mov
aaa
xchg
dec
enter
jmp
pop
cli
aad
int
arpl
pop
cmc
lret
ljmp
mov
push
mov
dec
scas
and
adcb
or
test
cmp
decl
sti
mov
adc
mov
mov
push
sysenter
data16
xchg
or
pop
dec
loop
es
into
popf
fldl2t
pop
jbe
outsb
nopl
add
pop
xor
adc
mov
xchg
sub
xor
pop
xchg
pushl
push
lret
inc
mov
or
scas
sarb
and
lcall
push
sub
mov
aaa
push
sub
sahf
and
insl
xchg
mov
rcl
outsl
ljmp
mov
addb
pop
fsubr
jne
lea
mov
aas
jne
mov
xchg
sub
inc
dec
insb
push
jae
pop
and
movsb
lea
iret
sti
fcom
das
mov
adc
stos
cmpsb
popf
jo
lea
jnp
pop
push
ljmp
dec
adc
out
cmpsb
jo
dec
sbb
mov
sti
bound
cli
dec
sbb
int
in
leave
incl
outsb
xchg
or
xchg
sub
gs
repnz
lret
lcall
movsb
adc
xchg
add
loope
lods
cmp
push
xchg
xor
xchg
pop
aad
cmp
xor
aaa
jmp
lods
jecxz
ljmp
mov
test
cltd
call
xchg
push
pop
insl
rorl
lods
adc
cmp
in
mov
enter
stos
sbb
add
incl
sti
or
pop
mov
push
cli
outsl
mov
mov
jg
sarb
xor
dec
outsl
cmp
sub
ljmp
adc
movsb
out
jg
dec
cmp
mov
jae
test
dec
scas
icebp
rorb
movsl
mov
pushl
pushf
fdivrl
sarb
scas
jle
sti
enter
scas
pop
or
push
and
mov
bound
ja
nop
pop
scas
mov
sbbl
adc
das
cmpl
jnp
popf
xor
xor
adc
mov
mov
daa
mov
lods
iret
or
incl
inc
jns
ljmp
mov
aaa
dec
adc
and
ljmp
in
imul
mov
dec
lods
xor
ds
fstpl
cmp
dec
mov
jecxz
jno
pop
push
nop
or
daa
sbb
test
loopne
decl
or
enter
popf
in
push
jnp
sbb
jmp
inc
test
fs
push
decl
bound
push
dec
xchg
fwait
xor
dec
in
decl
fisttps
movsl
add
call
fildll
inc
cwtl
mov
imul
adc
out
pop
push
xor
mov
sbb
ds
mov
xorb
call
inc
fisubs
stos
notb
adc
outsb
adc
push
in
lcall
inc
addl
hlt
xchg
rclb
dec
insl
adc
fiadds
in
nop
ljmp
fucom
fldcw
lods
inc
mov
sbb
cmp
sbb
in
popa
lods
push
aam
aas
call
dec
sub
push
pop
addr16
or
mov
mov
das
mov
push
jge
outsl
push
jecxz
cli
inc
push
pop
hlt
ljmp
mov
lods
xor
pop
cmp
xchg
or
cli
mov
jmp
stos
aaa
cmp
push
scas
inc
xor
push
pushf
pop
imul
gs
jmp
pop
fstps
xorl
cmp
mov
call
insl
test
lea
mov
test
ljmp
hlt
cld
mov
xchg
orl
test
ljmp
movsb
lcall
xlat
jmp
imul
cmp
xchg
sbb
sbb
nop
call
sti
lea
mov
aaa
fisubrl
ljmp
in
push
incl
out
fildll
test
push
xor
imul
xchg
aad
add
push
ret
sub
inc
mov
and
clc
leave
sbb
adc
mov
movsb
repz
scas
outsb
test
lret
sbb
ds
mov
push
hlt
jo
addr16
add
pop
ja
xor
mov
push
or
lahf
call
push
push
xlat
cli
push
inc
popa
dec
pop
dec
jl
ljmp
mov
push
sub
ja
lcall
fs
add
das
and
xchg
and
outsb
dec
fsubrs
insl
jmp
ljmp
mov
popf
jmp
jmp
or
mov
jb
mov
scas
cli
jmp
xor
mov
adc
loope
icebp
push
movsb
mov
outsl
cli
lcall
insb
ljmp
jl
jno
cmc
xchg
inc
insb
pop
aas
mov
call
stos
ljmp
lock
jno
loope
shll
pop
mov
call
jmp
sbb
mov
mov
push
xchg
pop
pop
sbb
cmp
aas
loop
pusha
iret
push
test
scas
xchg
mov
xchg
imul
dec
js
lods
repz
mov
xchg
jb
ljmp
stos
gs
sub
clc
dec
xor
popa
push
adc
enter
lcall
mov
mov
mov
lea
push
rol
lods
push
shlb
dec
loop
xor
or
int
mov
jo
cwtl
pop
pop
pop
xchg
mov
and
or
call
jecxz
repz
rcr
inc
wrmsr
xor
push
mov
xchg
add
movb
inc
inc
insb
pop
push
pop
push
fidivrl
ljmp
incl
inc
cmp
fisttpl
das
jnp
sub
dec
rolb
fstps
cltd
cmpl
mov
inc
xor
out
pop
sbb
out
test
cli
subb
mov
inc
xor
aam
icebp
es
pushl
imul
shll
add
daa
data16
loope
fimull
insb
dec
jle
jmp
push
xor
std
jo
push
cld
decl
jno
cwtl
mov
pop
or
lcall
mov
mov
xor
decl
cmpsb
fnstcw
jbe
mov
adcl
adc
and
xchg
adcb
xlat
lret
jns
lods
mov
decl
add
mov
and
fidivl
sub
sti
ds
mov
aaa
jne
inc
enter
ljmp
dec
fst
jmp
or
das
adc
fsub
shrb
inc
mov
push
ret
ljmp
call
mov
pop
imul
jmp
mov
pop
sti
imul
ljmp
pushf
inc
scas
cltd
fstps
ficoml
ljmp
in
fwait
addr16
sub
sti
inc
lcall
xor
bound
inc
hlt
ret
pop
loope
lds
rclb
push
out
ljmp
cmp
lock
pop
xchg
add
sbbb
lods
loope
insl
jmp
adc
mov
fcompl
jns
mov
sbb
push
shl
jbe
imull
scas
rorb
sbb
xor
push
stos
decl
ret
jno
add
cmpsl
dec
inc
mov
dec
xor
inc
addl
dec
lahf
das
popa
adc
and
adc
jne
cltd
pop
filds
jmp
mull
leave
pop
xlat
dec
imul
or
add
loop
std
ja
jge
mov
sbb
adc
sub
jg
nop
xchg
outsl
adc
dec
mov
sbb
adc
lret
mov
out
mov
outsl
mov
xchg
jg
rcr
xchg
or
rcll
ljmp
mov
popa
icebp
call
inc
jle
dec
dec
pop
orps
cmp
xchg
cmp
testl
xchg
pop
xchg
lahf
push
fisubrl
test
cmp
aaa
mov
xor
call
sbb
adc
dec
int
mov
aam
inc
pop
cmp
pop
xor
sub
mov
inc
jne
das
push
push
mov
xchg
mov
lahf
jmp
push
jl
dec
inc
rol
push
lea
icebp
ja
test
outsl
lods
mov
mov
call
incl
popa
cmp
jns
xorl
mov
je
push
clc
xchg
or
dec
incl
push
mov
pop
pop
andb
rcrl
and
cmp
adc
xchg
lcall
out
dec
aam
lds
inc
sbb
fdivs
aam
sub
stos
sub
daa
call
inc
push
fdivrp
lcall
loopne
xchg
call
xchg
out
mov
in
add
cltd
mov
mov
dec
cmc
and
shrb
lock
incl
jo
mov
push
or
xchg
lret
sahf
lods
push
orb
or
sbb
dec
rorl
loopne
in
push
in
popf
mov
inc
sub
lods
adc
lock
punpcklwd
inc
dec
decl
xlat
xor
push
outsl
and
ljmp
sub
cmpsb
ret
in
aam
jnp
xchg
popa
push
pop
adc
movsl
and
push
int
lret
adc
hlt
inc
xor
mov
dec
int3
sub
out
add
add
push
out
sbb
sub
addr16
out
cmpsb
jecxz
fldl
in
push
fsubs
outsl
pop
bound
inc
lea
cmpsl
inc
fisubrs
dec
lea
push
jns
lods
js
or
loope
and
out
stos
xlat
pushl
add
cmp
mov
and
xor
lods
dec
call
inc
sar
addr16
jg
mov
jae
hlt
mov
fldenv
enter
aaa
sbb
sti
cli
cmp
in
push
sub
decl
push
in
pop
testb
mov
sbb
ficompl
fwait
xor
cmpb
gs
pushl
cld
call
sbbb
out
xchg
lods
jl
outsb
and
popa
pop
inc
and
stos
dec
add
ljmp
inc
adc
popa
jb
cmp
outsb
testl
sbb
inc
xchg
cli
pushl
dec
mov
push
mulb
ljmp
sbb
sub
push
push
in
ret
pusha
out
cmp
clc
mov
call
rcl
pop
pop
add
lahf
mov
aad
pop
sub
inc
xchg
lea
xchg
das
cli
ljmp
iret
xchg
adc
sbb
fdivrs
inc
mov
mov
into
sbb
fildll
mov
inc
roll
ret
div
decl
lret
jo
xor
mov
push
daa
push
mov
or
shrl
pop
add
inc
in
or
pop
inc
push
pop
push
sub
adc
into
fwait
mov
repnz
in
lds
lret
mov
lahf
mov
lock
mov
add
insl
mov
jbe
jg
jg
loopne
sub
push
mulb
test
add
and
lret
nop
shrb
vmovdqa
mov
fcoms
jp
mov
mov
stc
or
lcall
mov
sahf
sbb
scas
stos
daa
loopne
int
pop
inc
dec
cs
call
ljmp
popf
or
orl
xor
mov
jmp
cmc
push
cld
lcall
jmp
scas
pop
mov
mov
stos
loopne
lea
lcall
pop
sub
sbb
xor
xor
fwait
jle
dec
mov
adc
xlat
push
xchg
sbb
roll
inc
inc
inc
jp
stos
jle
dec
jle
pusha
out
pop
imul
dec
and
and
pushl
lods
repz
cmp
loopne
push
imull
adc
outsb
mov
mov
jmp
push
roll
sub
or
movsl
sbb
sbb
push
in
xchg
jg
decb
mov
inc
rol
pop
xlat
in
lahf
bound
scas
push
mov
js
popf
in
mov
mov
xor
iret
xor
pop
imul
sub
dec
pop
scas
out
xor
cmp
sub
incl
sarl
das
cmp
push
add
pop
cmp
sub
push
xchg
mov
sbb
insb
clc
dec
pop
int
dec
nop
xchg
bound
pop
xor
push
mov
add
lock
sub
push
lcall
xchg
sarb
pop
js
mov
mov
jmp
cmp
pushf
cli
mov
cmpsb
outsl
in
cmp
ljmp
dec
int3
or
dec
and
cmp
lods
mov
pop
push
and
insl
mov
cmp
imul
pop
and
mov
cmp
push
or
cmp
mov
call
in
out
sub
fwait
aas
into
lret
xchg
aad
cmp
cwtl
aam
sbb
mov
lcall
mov
add
cmp
std
gs
xor
sbbb
adc
cltd
daa
inc
incl
fwait
lods
adc
or
int3
sbb
mov
lcall
mov
test
out
outsl
pop
lods
je
mov
shl
lret
js
popa
jae
stos
cli
decl
pop
fcompl
cli
push
or
mov
outsb
and
ret
das
mov
inc
push
sti
push
push
fwait
xor
add
movsb
xchg
lods
movsl
sbb
xor
and
push
cs
cli
push
mov
fisttpll
mov
mov
or
add
mov
fisttps
mov
cmp
lret
and
int
fidivl
or
xor
call
push
ret
adcb
je
add
dec
lret
mov
pop
lds
jmp
decl
inc
cmp
adc
clc
xlat
fldt
cmp
mov
sub
lock
pushl
pop
mov
fists
dec
push
cmp
mov
int3
jge
loope
fwait
mov
dec
imul
outsb
xor
fsubl
repnz
dec
sbb
mov
jle
lds
daa
mov
adc
iret
push
dec
mov
dec
insb
xor
in
jl
sahf
jge
add
push
push
adc
imul
decl
dec
loopne
ss
aas
fdivr
mov
mov
or
and
das
lods
cli
out
cmpsb
xlat
mov
cli
loop
xor
xor
pushl
xor
mov
pop
out
incl
out
popa
aad
mov
add
lret
add
pop
jo
inc
cmp
repnz
js
incl
mov
or
push
cmpsb
stos
mov
or
inc
jle
lcall
xorl
nop
dec
je
out
dec
push
or
daa
fistpl
fcomi
and
shrb
cmc
call
inc
das
es
xchg
mov
pop
repz
repnz
mov
lcall
push
pop
aad
in
sub
push
mov
pop
test
sbb
fnstenv
pushl
aam
push
pop
ja
movsl
xchg
imul
int3
fidivs
out
add
sub
xor
insl
call
lret
stos
add
dec
cmpb
icebp
sbb
sbb
cmp
xor
ljmp
inc
stos
fistl
popa
adc
insb
add
out
mov
std
jne
xchg
decl
sbb
mov
pop
push
cmp
sbb
mov
jg
hlt
dec
xor
movsl
mov
adc
lods
ret
es
out
xor
cmp
cmp
jl
pop
dec
sbbl
cmpsl
sbb
xor
gs
pusha
push
adc
jmp
loope
push
stos
sub
fs
lods
mov
jnp
push
or
pushl
dec
cld
jbe
pushf
fstl
cmp
stc
fsubl
sti
stc
shr
imul
leave
mov
push
jo
fnstcw
popa
idivl
imul
in
lret
fs
repz
push
enter
sbb
leave
jae
mov
ja
xor
inc
adc
int
call
lcall
jp
dec
sub
mov
or
or
xchg
call
push
inc
jbe
shlb
mov
jg
jnp
pop
push
inc
int3
xor
les
lds
jmp
ljmp
and
sbb
push
inc
in
xor
inc
jae
push
push
lret
push
out
xchg
cmpsl
pop
pop
loopne
mov
inc
in
jbe
ljmp
pop
les
je
push
out
xor
incl
pop
loop
mov
push
outsl
fcoml
addr16
xchg
movsl
cmp
push
sub
rolb
cld
lcall
ret
hlt
loope
enter
mov
into
dec
repz
out
call
pop
incb
lds
fs
in
lahf
sbb
ret
pop
addb
gs
decl
aam
dec
mov
mov
in
xchg
imul
jg
lea
mov
call
roll
pop
mov
addb
xor
push
cmpsl
or
sbbb
inc
cmp
or
idivl
push
xor
lcall
sub
fildll
outsl
jge
popf
popa
mov
rclb
xchg
jl
fbstp
fldenv
or
fistps
lds
cli
idivb
int
shr
cmpsl
or
les
mov
push
mov
in
cmc
cmp
mov
sub
in
push
outsl
inc
fdivr
insb
pushf
jge
mov
flds
mov
sahf
adc
jne
nop
pop
ret
in
mov
mov
add
adc
lret
pop
lahf
jo
pop
sub
call
fcomps
lret
jl
mov
and
jo
inc
jmp
mov
xchg
xor
popa
mov
add
aad
mov
xor
jmp
lret
ss
outsb
testl
cld
xchg
mov
das
cmp
dec
push
jae
push
mov
lcall
sbb
fists
aad
jb
jb
testl
mov
xorl
pop
test
fcoms
jmp
movsl
inc
add
jg
add
repz
cmp
mov
adc
leave
imul
mov
pushf
sbb
ds
and
mov
aad
inc
pusha
sub
arpl
lahf
negl
decl
jle
loop
dec
add
roll
fcompl
mov
out
movsl
movsl
mov
jmp
dec
mov
mov
mov
add
stos
dec
and
cltd
shrb
mov
jno
or
incl
sbbl
ljmp
inc
add
push
test
pop
lods
add
movsb
push
iret
call
jmp
fisubrs
clc
ljmp
insl
adc
xchg
sub
xor
mov
loopne
bound
outsl
imul
inc
mov
or
cmp
into
xor
add
push
scas
lds
push
xor
out
movsl
popa
iret
nop
sbb
sar
push
std
ljmp
push
std
add
inc
xchg
push
fdivrp
incl
sbb
mov
dec
xchg
jmp
test
xchg
insl
cwtl
scas
push
mov
std
pushl
icebp
daa
out
adc
jl
fwait
dec
mov
jmp
enter
ds
pop
sbb
sbb
fimull
in
inc
inc
popf
cmpl
decl
mov
jne
mov
inc
xchg
cmp
cmpb
jmp
iret
leave
fadd
or
inc
mov
inc
pop
das
into
xlat
ret
in
or
shlb
call
cmc
and
fisubl
insb
leave
nop
and
xorl
shr
jecxz
and
outsl
in
repz
call
fldt
fstpt
mov
in
jnp
cld
mov
or
mov
cli
ljmp
jne
pop
push
xor
outsl
scas
sahf
rorb
mov
xchg
int3
arpl
jp
cli
xor
push
fisttpl
and
dec
data16
cld
mov
fsubl
out
out
inc
and
ficoms
repnz
mov
pop
test
push
sar
fmull
pop
xchg
mov
and
sbb
mov
das
push
and
mov
rorl
or
jmp
xorl
xlat
call
movsb
dec
out
leave
inc
shll
ret
push
sub
fnsave
push
cmpl
hlt
call
aad
pushf
outsb
fcoml
fwait
adc
cmp
lock
cmp
adc
lret
cwtl
in
test
mov
xchg
and
mov
jecxz
sub
push
je
loop
das
xlat
lcall
cli
cld
dec
inc
pop
cld
mov
pop
mov
cmp
jb
dec
xchg
dec
mov
pop
in
loop
jg
mov
lret
insl
push
or
rcrl
cmpsb
es
lret
add
ja
and
cmp
sub
incl
imul
mov
xchg
aad
adc
jmp
stos
sbb
in
jo
inc
call
and
icebp
stos
dec
sahf
test
adc
ja
xchg
or
jp
mov
lds
pushl
icebp
fstl
int
out
in
test
jnp
test
dec
stos
and
hlt
rorb
mov
insl
sqrtps
mov
fcomps
pop
sahf
mov
xchg
dec
popa
sbbl
pushl
cltd
lret
add
loope
cmpsl
adc
push
sub
bound
lret
aas
insl
xchg
scas
frstor
insb
jmp
loop
ljmp
ljmp
and
popf
enter
sub
inc
test
mov
pop
sbb
je
nop
lcall
ljmp
sub
aam
loope
je
jmp
pop
faddp
add
pop
flds
fdivrp
dec
ja
inc
inc
mov
in
test
sub
pop
sbb
fwait
das
xchg
hlt
movsb
in
pushl
inc
movsb
lods
cwtl
xchg
adc
jnp
pop
pop
cwtl
mov
addr16
push
mov
cld
cmp
lcall
mov
cli
push
scas
push
out
loop
jecxz
fwait
mov
sub
add
std
not
enter
pop
out
scas
fcmove
and
push
leave
add
sbb
in
loope
fimuls
jmp
cli
in
clc
lcall
jae
cli
inc
jge
fnstenv
adc
mov
jae
decl
and
mov
mov
adc
sarl
and
fisubl
jg
ljmp
clc
adcb
pushf
je
pushf
add
xor
pop
jnp
push
sbb
mov
or
jp,pn
int
loop
out
jp
pop
in
popa
mov
call
mov
icebp
xor
xchg
loopne
pop
stos
jmp
movsb
cmpsb
and
sub
decl
fisubrl
push
pop
mov
hlt
inc
int3
xor
out
lock
mov
sbb
lcall
out
mov
pop
fbld
jle
sbb
out
mov
into
das
pop
loope
f2xm1
push
test
in
add
in
loopne
imul
xchg
pushl
scas
jl
dec
xchg
pop
cwtl
addl
push
nop
or
ljmp
xchg
decl
jg
stc
sbb
push
dec
es
add
cmp
fnsave
or
fcomip
sbb
test
fisubrl
xchg
orb
push
jne
add
pop
icebp
decl
repnz
jae
and
xor
push
jecxz
lea
ljmp
jmp
xchg
pop
stos
mov
stc
dec
loop
scas
orb
xor
call
ljmp
pop
sub
jo
popf
sub
push
push
mov
mov
jnp
jbe
jge
shl
sub
js
loopne
mov
mov
xchg
mov
mov
ja
ret
imul
sbbl
call
movsb
aam
nop
cmp
pop
mov
xchg
dec
nop
in
gs
int3
add
sub
push
adc
clc
ljmp
in
pop
pop
scas
lds
js
stos
sub
sti
mov
xchg
addr16
pushl
lret
fisubs
clc
sbb
jo
push
les
push
dec
bnd
pop
ljmp
push
jns
sarb
stc
add
push
clc
dec
jns
inc
lcall
hlt
loop
lock
call
and
pop
mov
push
mov
cmp
ljmp
dec
lea
aad
loopne
int3
and
ret
or
cli
in
in
ret
jg
mov
scas
push
inc
stos
adc
pop
arpl
lcall
fildll
dec
lods
and
push
shrb
sbb
push
push
xchg
cmpl
pop
andb
pop
rcll
ret
arpl
outsb
mov
incl
dec
push
push
test
jo
xchg
addr16
mov
adc
scas
pop
into
mov
call
repnz
and
inc
adc
in
mov
jle
insb
mov
rcrl
mov
mov
or
cmp
mov
into
pop
or
lret
jmp
in
push
lds
xlat
sarl
dec
nop
imul
sbb
sbb
cli
decl
sbb
sbb
jle
aaa
sbb
pop
push
mov
adc
cltd
jns
dec
pushl
std
out
outsb
dec
gs
or
sti
and
mov
lret
cmp
in
sbb
pushl
cmp
push
pop
or
ja
jge
div
pop
adc
xchg
in
cmpl
stos
cmp
nop
xchg
jne
rcl
std
call
leave
jo
out
cmpl
mov
leave
lock
or
loop
mov
mov
bound
push
pop
ret
out
fst
ja
leave
dec
jp
cmp
jg
jg
jae
sbb
movl
ljmp
pop
ljmp
ja
push
ja
xlat
test
sub
ljmp
lret
enter
jns
mov
mov
pop
inc
push
mov
lcall
adc
fnstcw
cld
sahf
daa
xor
inc
sahf
mov
push
cmp
xchg
xchg
repnz
shrl
arpl
inc
mov
shll
cmpsb
in
ret
xchg
ja
cmc
sub
ror
jmp
sbb
inc
and
jmp
outsl
sub
pop
test
or
pusha
jmp
jns
push
imul
sahf
mov
or
xchg
xchg
pop
or
call
sbb
push
sub
call
jns
mov
mov
fldt
mov
adcl
lcall
test
movsb
dec
shl
inc
push
fdiv
pop
fbld
jmp
nop
out
js
aaa
lahf
lret
int
loop
test
mov
or
sbb
insb
or
pop
out
sub
mov
add
add
out
pop
sti
outsl
jp
sahf
jnp
or
push
cwtl
loop
sar
inc
mov
mov
pop
jae
xor
cmp
test
xchg
mov
jle
sti
jne
adc
sahf
gs
jae
aaa
in
xchg
ss
sub
cld
ret
int3
sub
out
call
inc
and
dec
sub
sub
inc
sti
or
mov
xor
lcall
icebp
pop
add
mov
xchg
cli
aam
mov
in
sbb
mov
mov
std
jmp
xor
mov
jg
mov
out
cmpl
sbb
jo
lds
and
sbb
hlt
pop
dec
pmulhw
pop
lock
sub
or
push
pop
cmp
mov
aam
stos
cltd
or
push
sbb
jg
and
rclb
add
addr16
inc
mov
lea
mov
pop
imul
mov
adc
stos
fcomip
stos
ljmp
pushl
insl
inc
ret
lock
in
pusha
lock
push
scas
sub
ss
jno
and
sahf
and
mov
jmp
mov
fadds
mov
outsl
movsb
cs
mov
idivb
into
pop
leave
fldcw
cli
inc
cmpsb
xchg
xlat
jne
dec
leave
inc
push
adc
nop
pusha
inc
inc
aam
fldenv
lcall
call
mov
repz
aas
mov
jo
lahf
push
mov
lcall
mov
stc
arpl
movsl
iret
and
test
lcall
fucomi
dec
jae
adc
sub
mov
or
push
das
lock
test
push
pop
sbbl
push
addr16
call
mov
data16
push
adc
xchg
jnp
inc
pop
xchg
xor
and
fcoms
mov
decl
mov
movq
adc
mov
adc
xor
mov
inc
inc
xchg
adc
pop
dec
insb
add
and
mov
cmp
int
loope
scas
cli
ljmp
cmp
dec
lret
aas
mov
imul
fwait
stos
jmp
or
decl
or
dec
dec
or
adc
sbb
sbb
add
inc
sub
jns
xor
idiv
jmp
inc
gs
sahf
xor
or
movsb
movsl
imul
and
pushl
xchg
mov
ljmp
dec
xor
add
addr16
pushl
lock
lahf
lcall
popf
and
jne
push
or
in
dec
out
clc
call
mov
in
add
testb
test
inc
pop
push
loop
push
pushf
insl
mov
cmp
dec
pushl
repz
test
out
loop
nop
aas
es
mov
mov
incl
std
sbb
orb
shlb
jb
mov
scas
adc
mov
subb
dec
repnz
fistpll
iret
iret
xchg
ret
into
repz
andl
push
popa
popf
jle
lcall
les
mov
mov
nop
scas
and
xor
and
test
dec
iret
hlt
cmpsb
pop
add
iret
jns
push
ljmp
movsl
dec
pop
aam
adc
mov
pushl
push
jo
stos
int
jecxz
add
icebp
add
sub
mov
xchg
dec
mov
pop
cmp
cmp
adc
mov
push
icebp
lods
sub
lcall
dec
push
lahf
sarl
inc
loopne
pop
or
ljmp
mov
jae
mov
outsb
dec
xor
hlt
int
jb
dec
sub
mov
int3
adc
add
loop
mov
and
jnp
ds
jmp
loop
mov
in
adc
xchg
filds
push
fisubrs
movsl
insb
cmpsl
incl
xchg
pop
cmp
ret
add
mov
movsl
sbb
into
push
pop
and
xchg
lcall
in
lret
aas
gs
adc
and
push
out
mov
shlb
xor
stc
leave
or
mov
inc
cltd
jno
jo
cmp
fbld
push
nop
mov
stc
pop
mov
jne
add
incl
roll
in
cs
adc
inc
fwait
mov
cs
cmpsb
pushl
and
lea
push
mov
inc
cmpl
adc
pop
lret
int3
in
sar
lcall
test
adc
cmp
push
gs
adc
leave
sahf
inc
lcall
stos
das
add
leave
pop
adc
lret
add
mov
gs
pop
outsl
sbb
mov
andl
in
fisubrl
push
sub
mov
mov
pushl
icebp
jb
shrb
aam
data16
add
mov
ljmp
std
jb
pusha
aad
fisttpl
loope
movsb
call
cmp
jle
push
arpl
cmc
call
push
mov
loop
ret
fmulp
push
xchg
loop
xlat
repz
lret
scas
cli
ljmp
or
lahf
cmpsb
mov
scas
push
jl
popa
in
pushl
pushf
xlat
adc
mov
mov
pop
jne
rcrl
mov
cltd
fwait
lds
icebp
decl
jae
mov
je
lret
fadd
and
gs
xor
lahf
testb
in
sbb
jnp
inc
jg
cwtl
sub
fisttpl
xchg
mov
xchg
sahf
xor
lcall
vpminsw
xlat
pusha
xchg
pop
pushf
inc
mov
cld
sbb
push
shlb
fsubrl
jae
fwait
test
push
fcomip
push
iret
pop
cli
cli
addl
insl
inc
shl
frstor
decl
in
insb
mov
pusha
cmp
enter
add
sarl
sbb
popf
and
inc
lea
pop
bswap
xor
and
and
aas
sbb
mov
bound
inc
mov
je
addb
mov
and
call
cld
mov
xlat
mov
cmc
sub
mov
mov
cmp
ja
fwait
xchg
pop
in
xchg
cwtl
pop
or
decl
pusha
fdivl
pop
je,pn
adc
sar
ror
lcall
sub
scas
rcl
adc
mov
sbb
sbb
pop
xchg
jp
insb
mov
in
fcompl
mov
push
jmp
jp
fwait
cmpl
movsb
inc
push
or
cmp
aaa
pop
inc
jecxz
iretw
mov
jmp
mov
loope
xchg
loope
jl
push
jp
or
mov
cmp
cmp
pushl
aad
enter
pusha
inc
test
shrl
jb
mov
mov
lcall
jo
lcall
push
addl
push
cltd
out
clc
stos
test
icebp
adc
sub
ljmp
push
imul
xlat
sahf
xchg
add
adc
inc
inc
xchg
sub
ljmp
sub
xchg
push
xor
mov
xchg
and
mov
mov
dec
xchg
push
sbb
dec
adc
cmp
ret
aam
mov
mov
push
push
cli
fldt
js
dec
or
inc
push
incl
movsb
pusha
cs
fbstp
lret
xchg
cmpsb
rorl
jnp
lcall
lcall
cmp
sub
icebp
inc
stc
and
dec
leave
sahf
mov
xor
call
imul
lret
xor
dec
clc
or
daa
repz
sub
jmp
clc
add
push
mov
lret
shlb
loop
rorl
nop
mov
das
jle
cld
incl
cmp
scas
roll
mov
cmp
dec
mov
gs
ljmp
aaa
movsb
pop
fsub
out
pushw
fstl
add
scas
cmp
mov
jmp
jge
imul
aad
cs
iret
xchg
popa
dec
mov
push
dec
out
push
scas
adc
mov
call
jno
xor
cmpb
cmp
sub
lcall
arpl
lea
repnz
mov
xor
jge
icebp
das
sub
scas
call
idivb
xchg
and
arpl
inc
inc
mov
call
push
xorb
cld
cmp
pop
jns
fistpl
inc
mov
adc
or
loop
mov
mov
scas
std
push
subl
roll
xchg
add
and
mov
pusha
repz
pop
in
data16
ljmp
cmp
push
loope
push
pop
sbb
cmc
and
mov
cli
call
push
loop
mov
dec
sbb
bound
call
adc
or
inc
sbb
cld
push
dec
push
aad
pop
scas
xor
mov
mov
cld
lcall
rcrb
scas
loop
cmc
ljmp
lcall
push
cltd
rorl
movsb
scas
add
xor
inc
pusha
ljmp
arpl
push
fcoml
sub
ljmp
xor
adc
test
jbe
mov
push
add
js
es
incl
mov
inc
into
fwait
hlt
aaa
fimull
loope
cmc
sub
fsub
push
int
bnd
or
pop
dec
mov
je
and
fcmovb
sub
hlt
stos
pop
push
add
mov
es
sub
aas
sbb
das
cli
loop
lahf
inc
push
mov
fisubrs
jle
add
mov
decl
and
push
mov
lret
pop
mov
clc
bound
mov
ljmp
out
sbb
push
jecxz
mov
sbb
lret
dec
sub
jg
ljmp
adc
push
dec
jo
push
fnstcw
les
push
mov
ss
ds
cltd
clc
lret
dec
mov
test
bound
jnp
decl
iret
movsl
mov
xchg
cmp
add
xor
mov
sub
sar
jnp
lret
add
loop
pushl
fidivrs
daa
sahf
push
aas
xchg
ror
aaa
enter
ds
mov
pop
loopne
dec
mov
lret
sub
pusha
outsl
scas
dec
push
scas
movsb
mov
cmp
cmp
mov
pop
outsl
shlb
adc
lcall
stos
or
incl
mov
adc
cmc
test
cmp
sbb
inc
and
jecxz
ss
add
lcall
xchg
fs
xchg
imul
arpl
cmpsl
inc
dec
mov
iret
mov
ljmp
mov
cld
mov
or
xor
xchg
dec
dec
push
in
fcompl
int3
fmuls
clc
out
sub
push
xchg
mov
outsb
push
clc
aam
test
ljmp
incl
icebp
push
jge
mov
ret
adc
push
push
mov
loopne
push
lock
inc
dec
lcall
mov
pop
stc
lret
lds
subl
stc
sbb
pop
jo
mov
or
jae
xor
fmull
jns
in
out
cli
incl
jge
inc
push
lea
sub
sbb
sub
scas
cli
pushl
xchg
mov
add
lods
dec
daa
and
fidivl
pop
sbb
ret
icebp
pop
call
mov
and
adc
mov
mov
decl
push
push
fimull
inc
ljmp
pop
mov
enter
jno
pop
push
pop
sub
loopne
repnz
sbb
mov
jb
dec
xchg
out
mov
jnp
mov
std
shr
xor
test
pop
loopne
jns
pop
mov
lcall
in
lea
out
xchg
pop
xchg
inc
fadds
lret
cmp
adc
or
pop
gs
and
and
fbld
adc
dec
sar
jmp
adc
icebp
mov
cwtl
scas
outsb
pop
xor
sahf
cmp
jbe
add
popf
mov
xchg
mov
sahf
inc
clc
adc
sbb
xchg
sub
cwtl
shlb
call
inc
xor
fucomip
adc
scas
movsb
and
js
ficoml
push
mov
fildll
loop
jg
fsubrp
arpl
cwtl
test
dec
ss
stos
insb
fs
ljmp
or
add
rcrl
jl
or
push
notl
and
pushf
jecxz
mov
das
incl
adc
lock
and
popf
sub
pop
mov
lods
cmp
ljmp
in
cmp
hlt
jo
xchg
insb
push
xor
shl
test
xchg
push
stc
or
sar
pop
incl
add
scas
insl
ror
mov
inc
xlat
push
mov
mov
jno
cwtl
push
leave
jecxz
or
pop
fsubs
mov
mov
cmp
xchg
dec
or
or
lcall
cmpsl
cli
and
cmp
sub
test
stc
xor
jns
imul
push
ljmp
dec
xor
adc
fistps
or
add
fisubrs
incl
jl
mov
out
movsb
sbb
stc
daa
std
add
in
out
stos
xchg
scas
or
lock
incl
mov
mov
out
xor
sahf
ljmp
shrb
jb
mov
sub
loope
insl
je
xchg
mov
pushl
je
ficomps
aas
mov
imul
popa
das
add
data16
mov
imulb
adc
out
jg
lock
repz
outsb
ljmp
adc
xor
divl
sbb
jge
mov
cmpsb
bound
push
pop
sbb
scas
push
mov
xchg
jg
ficomps
js
adc
stc
pusha
jp
rorb
mov
fsubl
mov
mov
jbe
ljmp
xor
push
ljmp
stos
nop
cmp
lret
dec
push
mov
adc
jmp
or
fildll
jmp
rorl
out
add
mov
pop
cmpsb
inc
test
rorb
movsb
jo
lcall
mov
add
outsl
add
fmull
mov
push
subb
mov
stos
in
push
mov
push
or
cmp
cmpsl
sbb
stos
push
test
out
lcall
out
inc
out
inc
mov
pusha
in
bound
inc
addr16
lret
mov
loop
insb
jl
aas
and
and
adc
inc
inc
mov
lcall
and
fwait
out
sar
stos
dec
mov
or
xchg
dec
push
dec
pusha
fisttpl
and
pop
mov
enterw
pushf
jge
xor
ja
jmp
mov
in
data16
lods
dec
push
sbb
pop
add
jnp
mov
lcall
mov
mov
int3
mov
push
js
adc
or
fwait
dec
xchg
and
and
or
adc
daa
clc
jmp
stos
push
add
jecxz
out
inc
pusha
in
mov
arpl
stos
pop
or
ljmp
ljmp
int
fldcw
mov
inc
lods
aaa
xchg
data16
xchg
lret
lcall
fstpt
dec
in
cmpb
int
filds
jae
repz
sarb
jns
loop
jmp
xchg
mov
sub
lods
push
xchg
pop
push
outsb
outsb
stos
push
sbb
les
orb
mov
cmpsb
add
ficomps
lcall
push
pusha
push
jp
movsb
stos
push
push
xchg
pop
add
lods
aad
shrb
lcall
or
mov
jmp
pop
clc
jge
dec
icebp
jle
je
mov
cmc
ja
sbb
call
mov
rorb
sti
mov
mov
and
sbb
imul
movsb
jg
inc
mov
rcrb
jne
test
sub
rcrl
fiadds
bnd
aaa
ja
inc
pop
adc
add
ss
sbb
lcall
decl
mov
inc
add
jmp
cmpsb
inc
push
in
xchg
inc
outsb
dec
push
int
jb
pushl
call
ret
in
lahf
pusha
mov
mov
daa
cmp
jae
out
insb
mov
sbb
cld
adc
sub
jbe
mov
ss
inc
cli
add
mov
rcll
and
fdiv
push
add
decl
xor
int3
outsl
mov
pop
cli
sbb
sbb
xor
into
mov
scas
int
lods
mov
pop
add
adc
sti
sbb
pop
ja
js
mov
je
insb
cmp
jnp
jo
sub
insl
icebp
hlt
mov
sub
xchg
add
fstpl
lods
inc
pop
rclb
adc
cmp
pop
or
jl
scas
pop
test
xor
decl
mov
mov
into
fmull
mov
xor
fldcw
repnz
jmp
mov
mov
add
dec
push
dec
test
dec
shl
mov
bound
xchg
xor
dec
pop
int3
sbb
mov
xchg
or
lcall
test
gs
mov
pop
push
test
sbb
xor
ljmp
rcrb
jo
adc
and
adc
out
out
pop
add
mov
insl
decl
arpl
call
push
pop
xor
lahf
jge
addr16
es
ljmp
test
push
sub
xor
test
jg
pushl
or
inc
stc
negl
mov
jbe
fsubrs
rorl
xchg
adcl
pushl
loop
fs
jl
xchg
push
mov
push
lods
pop
das
ljmp
pushl
jl
mov
mov
mov
pop
add
ljmp
mov
fbstp
inc
ljmp
mov
sub
xor
mov
xlat
ds
jnp
dec
lock
push
pusha
mov
sub
sub
test
dec
adc
dec
pop
push
or
andb
pop
xor
adc
sbb
pop
out
ljmp
lsl
shlb
pop
jecxz
mov
add
xor
pusha
mov
pop
std
aas
inc
sti
pop
mov
cmp
subl
xchg
xor
test
sub
inc
sub
pop
xor
add
or
cmp
cmp
dec
or
lds
cmpsb
ljmp
out
call
adc
test
scas
syscall
fisttpl
adc
test
cld
sub
fstpl
aaa
idivb
sbb
sbb
cmp
or
pusha
mov
and
dec
scas
dec
repnz
mov
popa
cmpsb
xchg
mov
inc
and
mov
inc
pop
cmc
jp
imul
xchg
test
lcall
push
bound
mov
stc
ljmp
xchg
adc
arpl
cmpsb
scas
imul
les
push
outsl
notb
call
sub
stc
fdivrs
sbb
add
js
pop
test
inc
mov
hlt
cmp
ljmp
dec
cmp
inc
push
out
adc
imul
xchg
mov
cmp
enter
inc
and
sub
inc
and
mov
mov
nop
repnz
cmpsl
jns
xchg
add
in
pop
pop
out
inc
scas
sbb
mov
test
in
aas
cmp
push
xor
repnz
call
stc
dec
fisubs
inc
or
aas
mov
xchg
and
fldt
in
scas
sub
cmpsb
adc
pusha
pushf
push
decl
jecxz
std
adc
clc
aas
push
xchg
imul
push
cmp
mov
out
xchg
out
push
inc
roll
mov
cmp
in
push
cltd
enter
in
test
mov
mov
xchg
or
sbbl
shrl
ret
ljmp
jecxz
arpl
add
push
xor
iret
adc
lahf
enter
pop
and
mov
xchg
lds
sbb
adc
imul
mov
decl
sbb
mov
popa
lret
fimuls
sbb
loope
pshufw
scas
pop
outsl
sbb
mov
xor
insl
xor
shr
add
pop
sub
pop
ljmp
sar
dec
insl
incb
xchg
cmp
ret
jg
mov
pop
sub
in
mov
jmp
push
out
inc
or
mov
loopne
loopne
cmp
pop
int3
ja
addr16
outsb
inc
scas
pusha
sti
jl
lcall
dec
notb
daa
cmp
or
insb
or
mov
xlat
movntps
pop
int3
jmp
das
lds
xchg
scas
in
add
push
hlt
xor
adc
test
fdivr
loopne
imul
fadds
xor
call
nop
jecxz
pop
mov
fs
or
mov
pop
sbb
ljmp
clc
aas
and
push
rolb
imul
dec
sub
lcall
test
lea
jp
cwtl
sahf
nop
xchg
or
test
shll
push
cmp
call
adcl
mov
adc
add
inc
gs
dec
fistpll
imul
push
dec
sub
adc
push
cmc
mov
ret
in
fidivs
cmp
cli
sub
sbb
pushl
or
jmp
mov
mov
dec
push
sbb
call
loopne
add
mov
adc
outsl
call
pop
push
shl
icebp
cmpsl
sahf
jno
les
call
sbb
sti
das
mov
or
popf
ljmp
xchg
imul
jne
xchg
ljmp
movsl
xchg
sbb
ljmp
xchg
and
mov
inc
xchg
lea
jo
movsb
fcomip
lcall
mov
bound
mov
jae
sub
xor
test
loopne
pushl
inc
jmp
ficoms
dec
loop
or
sahf
jne
loopne
mov
aaa
jne
decl
inc
lret
aad
stos
lods
cwtl
ficoms
stc
push
xchg
repz
push
jno
adc
lahf
pushl
cld
pushl
pop
mov
mov
push
mov
mov
and
pop
fisttpll
dec
lcall
adc
inc
pop
test
xor
fnstcw
mov
sub
sub
ret
add
jg
ljmp
out
mov
mov
outsb
test
mov
sub
sub
cmc
pushl
sbb
dec
cli
pop
sahf
or
mov
xor
push
xchg
inc
inc
fimuls
decl
pop
and
and
fildl
sub
lcall
lret
decl
cmp
mov
popf
and
inc
out
popa
inc
cs
in
outsb
loope
loope
ljmp
xchg
movsl
fnstenv
mov
mov
sti
sub
lcall
sub
cmpsb
movsb
mov
out
clc
push
jp
push
das
pop
lahf
adc
adcl
repz
add
subl
cld
cmp
js
inc
fmull
cmp
repz
mov
jb
xchg
jnp
test
mov
incl
jb
pushf
add
arpl
mov
push
std
and
stos
cwtl
pop
mov
fbld
mov
xchg
cmpsl
aas
pop
rol
test
incl
xor
or
rclb
pushl
push
cmp
or
test
rorl
ds
inc
dec
mov
out
mov
jmp
ds
pusha
scas
cld
inc
psubq
adc
push
inc
daa
xchg
rclb
or
jge
je
xchg
iret
decl
lret
repnz
shl
sti
adc
icebp
lahf
lcall
cmpb
mov
movsb
lds
iret
ljmp
adc
incl
daa
mov
xchg
in
sub
dec
jae
lock
int
push
dec
and
lock
jmp
xchg
xchg
pop
jl
test
fisttpl
cltd
outsl
ja
mov
dec
lods
jle
outsl
lods
decl
dec
fists
push
mov
adc
sbb
add
push
ljmp
and
rorb
sbb
add
jmp
adc
inc
or
pushf
or
xor
shrl
fisttpll
incl
cmp
dec
inc
push
rcll
aad
in
ss
lea
call
into
fdivp
mov
xor
dec
ret
je
pop
lcall
ljmp
cmp
xor
xchg
sub
xlat
cmp
outsl
dec
cwtl
pusha
inc
inc
fsts
mov
ljmp
mov
clc
divb
fcmovnb
cld
add
sub
mov
sahf
push
add
jmp
sub
xchg
sub
cmp
mov
pop
decl
cmpsb
sub
mov
call
sub
lahf
mov
xor
dec
rep
pusha
call
cmp
psubd
lahf
mov
ljmp
lret
xor
es
mov
xchg
adc
in
sbb
mov
call
rol
sti
mov
or
out
arpl
xor
cmp
mov
cmp
test
sbb
push
rclb
cs
sub
jmp
clc
arpl
cmp
xchg
stc
icebp
data16
xor
mov
out
jmp
pushf
mov
mov
incl
vcmpss
jle
mov
test
fwait
movsb
mov
push
daa
mov
lcall
dec
sub
jmp
std
xchg
cmp
xchg
scas
dec
sbb
decb
data16
insb
jae
call
cmc
cwtl
jecxz
in
shlb
mov
cmp
xor
mov
pusha
inc
jg
add
loopne
cmpsb
ss
mov
popf
stc
dec
stc
jnp
cmp
sbbl
cwtl
lock
add
shrl
push
notb
jmp
inc
inc
xchg
mov
xchg
incl
decl
sub
out
add
jge
inc
push
sti
jb
cltd
fdivl
mov
icebp
stos
lcall
pop
mov
xor
negl
cli
inc
and
add
xor
mov
sarl
int
jmp
out
or
shlb
pop
pusha
adc
push
adc
push
rol
jae
icebp
ljmp
sub
mov
pop
xlat
stos
and
sahf
pop
es
call
std
outsl
popa
out
xor
and
pop
mov
test
pop
incl
mov
or
mov
lret
and
lcall
cs
mov
in
ja
mov
lret
cmc
xchg
jl
js
lcall
nop
jp
int3
mov
int3
insl
lcall
pop
inc
xor
mov
pushl
or
sub
adc
lea
xor
sar
mov
and
lret
xchg
mov
add
sbb
sbb
dec
mov
lret
leave
and
std
xchg
adc
into
jb
xchg
or
sub
lcall
movsl
cmp
test
mov
js
mov
js,pt
dec
or
lea
loop
dec
not
sbb
or
mov
dec
rcrb
push
fdivrl
ds
xor
cmp
es
inc
int3
mov
or
inc
mov
rolb
pop
push
dec
cld
sub
enter
aas
cld
sbb
jne
pusha
sub
iret
hlt
xchg
dec
rcr
ljmp
xor
push
stos
es
mov
inc
pop
fdivrl
pop
dec
cmp
pusha
mov
mov
and
push
fcomp
push
test
mov
pusha
xchg
insb
sbb
cmp
mov
repnz
shll
fsts
push
cmp
and
in
mov
mov
sbb
mov
or
int3
jbe
shlb
push
xchg
xlat
into
cmp
mov
sub
gs
mov
test
into
adc
sbb
jg
pop
cld
pusha
inc
inc
outsl
mov
ss
sbb
and
push
int
mulb
mov
fs
ret
and
dec
pop
push
push
push
jmp
push
sub
xchg
sbb
sti
call
fadd
dec
repnz
cmpsl
push
mov
in
mov
mov
jo
add
ljmp
adc
lcall
push
jae
sub
in
jl
stos
push
xor
push
pop
xchg
inc
xlat
inc
movsb
dec
testb
jae
jnp
cmc
mov
adc
stos
fldlg2
mov
mov
pop
fisubl
lret
iret
js
stos
mov
sarl
and
call
sbb
mov
jb
bound
aam
push
ljmp
call
ret
mov
int3
add
jmp
cmp
lock
xchg
cmp
decb
popa
repz
fisttpll
and
aam
cld
cli
sbb
push
jo
cmpsb
jl
push
shlb
pushf
popa
pop
mov
ja
pushl
add
aad
sti
push
push
push
fstpl
lret
cli
fnstsw
mov
loope
jp
call
call
sub
ja
mov
test
jnp
fdivr
shl
jl
pusha
inc
mov
lcall
mov
or
mov
fildll
rorb
ret
xor
xchg
pop
aam
sub
adc
std
call
adc
pop
mov
xchg
or
call
add
ljmp
lret
rcll
sub
jnp
xchg
fimuls
cmpsl
cmp
jl
xchg
inc
cmp
or
nop
aas
ljmp
cmc
fs
test
pop
dec
xchg
stos
cs
ljmp
or
mov
iret
ljmp
icebp
sbb
loop
out
out
adc
icebp
add
jne
sahf
fucomip
icebp
call
std
lock
or
je
cwtl
daa
shll
xchg
dec
repz
cmp
push
or
fs
adc
fwait
lods
clc
in
mov
cld
and
insb
xchg
dec
mov
inc
push
decb
add
push
daa
sahf
mov
les
mov
repz
or
call
movsb
insl
in
jae
xchg
test
ljmp
rorb
clc
mov
insb
js
movsl
mov
and
test
jg
lock
pushl
mov
mov
sub
fiadds
scas
sahf
test
add
pop
xchg
lcall
aaa
mov
lods
push
push
xchg
cmp
cmpsl
push
cmp
stos
aad
sub
into
enter
cmpsl
incl
icebp
sub
mov
scas
je
bound
xchg
inc
xor
stos
lock
push
sbb
fiadds
mov
rorb
xchg
cmpsb
rolb
fisttps
je
int3
daa
mov
insl
or
sbb
aaa
cmpsb
mov
mov
inc
sub
push
decl
icebp
addr16
test
or
ja
cmp
cs
jmp
test
fistpl
ljmp
gs
adc
pusha
mov
out
mov
mov
jge
pop
addr16
push
out
jg
push
incl
int
fsubrl
mov
add
xchg
cmp
sbb
inc
fsubrs
mov
inc
xchg
and
push
fisubrl
sub
pusha
cmp
call
popf
aas
push
add
and
in
jge
adc
mov
leave
mov
addr16
mov
mov
mov
mul
xchg
test
pop
xchg
jg
pushl
repz
js
rol
mov
addr16
cmpsb
sub
les
pop
sbb
call
int
enter
push
lds
mov
pop
ljmp
inc
fidivrl
ljmp
clc
dec
dec
add
rol
arpl
inc
mov
cmp
clc
pusha
stc
insl
lea
pop
lcall
dec
jl
sbbb
fimuls
jecxz
mov
clc
adcb
cmp
push
out
les
xor
dec
lahf
cli
icebp
sahf
popa
fs
adc
sbb
cmc
je
filds
jle
orl
pop
int3
pusha
xor
ljmp
popf
adc
arpl
xchg
movsb
testb
scas
enter
out
add
dec
or
cmp
popf
jbe
or
pop
js
jecxz
mov
adc
inc
pop
test
loopne
jg
in
testb
leave
mov
cmpl
dec
repnz
int
lods
mov
jae
mov
mov
rcrl
loop
rol
shlb
mov
dec
lods
data16
jg
and
imul
adc
stos
xchg
aaa
std
ljmp
push
xchg
aam
or
je
es
ljmp
or
pop
je
sar
testl
mov
mov
adc
decl
push
dec
jo
scas
fldcw
or
dec
in
jne
ret
scas
fldl
rcrl
je
xorb
adc
movsb
xchg
outsl
cmp
movsb
scas
hlt
cli
and
sub
mov
dec
loop
pop
outsb
jo
pop
xchg
mov
or
push
popa
cmp
sbb
adc
push
pop
xchg
sub
dec
in
mov
orb
mov
or
ds
mov
push
jmp
call
push
imul
shlb
mov
adc
pop
push
inc
mov
jmp
ljmp
sbb
sbb
xchg
cs
mov
ljmp
or
sub
jmp
aaa
scas
ja
inc
lds
push
adc
cmc
fcompl
rclb
jmp
rorb
cmp
arpl
sbb
and
test
cltd
stc
xor
loope
incb
pusha
inc
outsb
mov
lcall
mov
cld
mov
and
mov
mov
incl
aam
clc
sub
xor
lea
cmp
xchg
clc
xchg
cmpsb
call
add
imul
icebp
pop
leave
mov
xor
test
mov
push
dec
pop
in
negb
jae
mov
jns
fsubrp
mov
fisubrl
mov
js
mov
std
ljmp
nop
push
jnp
xor
jecxz
mov
inc
or
stc
xor
jmp
lret
sbb
sub
test
mov
add
mov
fnsave
push
push
out
xchg
push
and
ss
push
cs
fucom
mov
mov
inc
insb
aaa
inc
jo
cs
lcall
cmp
pop
jnp
stc
inc
cli
push
cmp
scas
xchg
in
push
mov
bound
mov
xlat
adc
jmp
and
shrl
mov
test
push
roll
fisubs
mov
fisubrs
iret
hlt
shrl
xchg
ret
jg
clc
push
in
mov
pop
cwtl
xor
mov
pusha
pop
flds
fcomip
jmp
sti
mov
insl
lret
rolb
xchg
jae
movsl
inc
imul
repz
mov
mov
sahf
jnp
adc
add
ds
incl
cs
cmpsb
addr16
cmpsl
xchg
cmp
sub
and
cmp
adc
sbb
mov
orb
enter
icebp
sbb
cmp
aam
push
xor
lea
mov
inc
push
mov
fisttps
insl
and
mov
mov
mov
jecxz
jg
rclb
sti
inc
dec
sahf
xchg
call
mov
pushl
jg
inc
mov
int
outsl
daa
jae
xlat
mov
pop
nop
ljmp
mov
hlt
mov
mov
xchg
inc
ljmp
sbb
xor
fdivl
fucom
mov
inc
or
fsub
cwtl
arpl
lcall
sub
call
sub
adcb
jg
inc
jecxz
jge
test
sub
cmpsl
test
clc
push
inc
add
imul
dec
push
dec
or
push
mov
cld
lcall
add
push
int3
pop
imul
jno
mov
add
jno
rcrb
jmp
lea
mov
mov
add
or
scas
sbb
push
aad
les
xchg
add
xchg
mov
ss
cmp
cld
dec
cmp
addr16
fadd
xchg
jae
dec
pop
iret
jecxz
push
lock
enter
xor
int3
pushl
sahf
in
test
jecxz
icebp
std
add
movsl
adc
call
pop
sbb
pop
stc
sub
jmp
xor
or
adc
xor
adc
xchg
fucomip
mov
pop
jns
and
push
fnsave
lock
lock
popf
cmpsb
js
jb
insb
sbb
decl
cmp
and
repz
pop
in
add
movsl
pop
loop
ljmp
xchg
cmp
xor
add
inc
fwait
fwait
cmp
or
pop
xor
leave
mov
movsb
jmp
mov
mov
adc
add
sbb
enter
pusha
jmp
and
call
insl
inc
jecxz
ficompl
movsb
cmpsl
cmp
shll
fdivrp
xchg
aam
imul
sti
cmp
dec
mov
pop
inc
into
lret
fbld
xchg
mov
or
mov
cmpb
or
sub
insb
lcall
incl
sbb
pop
pusha
mov
divb
xchg
mov
stc
pop
inc
mov
dec
fistpll
push
cmpsl
and
jb
cld
cmpsb
xchg
mov
jae
push
sub
mov
pushl
cwtl
mov
jbe
popa
mov
addr16
push
pop
add
sbb
pop
aaa
into
jmp
inc
push
mov
fsubl
loope
push
add
fildll
fmuls
pop
js
call
test
xor
xchg
sub
dec
jmp
push
imul
add
xchg
dec
jmp
dec
or
mov
lret
std
loop
mov
decl
nop
xchg
iret
push
in
adc
jl
adcb
call
je
or
daa
add
dec
push
mov
rcl
and
punpckhbw
sbb
mov
cwtl
xor
cli
das
aad
mov
pop
fisubs
mov
inc
jg
pop
dec
pushf
mov
add
stos
add
inc
cwtl
cltd
sarl
sub
lahf
dec
addl
enter
mov
fs
cmp
jg
lret
and
aad
mov
pop
push
mov
test
lock
pop
sar
aaa
push
mov
icebp
push
rclb
cmp
clc
cld
mov
aaa
inc
fistpll
lcall
popa
or
xchg
inc
jg
jmp
mov
daa
push
mov
xchg
enter
push
or
mov
imul
decl
lods
mov
xchg
jecxz
cmp
push
pusha
std
pop
inc
jmp
rcrb
dec
leave
xlat
lret
cmp
aad
test
or
push
int3
loop
das
cli
ljmp
jb
sbb
sub
lcall
lods
pop
cld
push
pusha
mov
div
gs
scas
mov
call
repnz
sti
adc
icebp
adc
sbb
cli
out
ss
mov
pushf
mov
mov
out
loope
cmp
incl
idivl
mov
dec
xchg
pop
adc
lahf
es
loop
prefetch
test
push
repz
lcall
test
ja
and
aas
mov
dec
shrl
mov
mov
mov
call
std
es
push
adc
jg
pop
pop
inc
pop
gs
mov
incl
jno
mov
sub
pushl
lds
stc
inc
clc
vxorps
fbstp
mov
or
mov
insl
mov
test
and
out
aam
js
fwait
and
xchg
lods
lret
mov
add
sub
mov
pop
sbb
pushf
cmp
fadds
pop
jg
fwait
aad
lods
loopne
push
push
out
or
dec
lock
pop
jnp
pop
out
sub
jl
adc
imul
xchg
jmp
lods
ss
pop
adc
js
pusha
and
sti
lea
popf
jg
pop
es
ficompl
jl
xor
push
cmp
ljmp
scas
xchg
push
test
out
in
cmp
mov
or
mov
lcall
ljmp
ret
and
sub
lret
sahf
inc
and
xchg
inc
or
push
popa
inc
sub
and
incl
push
dec
loope
shrb
xor
xchg
adc
pop
cltd
mov
pop
das
das
xor
inc
pop
cmp
testl
jne
mov
adc
pusha
lea
pop
aaa
cmp
inc
xchg
sbb
pushl
ja
or
xor
lds
or
pop
mov
xchg
inc
xlat
icebp
pop
xchg
test
add
sahf
push
push
push
mov
jmp
jo
add
pushl
xor
mov
cwtl
xchg
loope
xor
lock
das
movsb
xor
incl
mov
xchg
and
jnp
or
xlat
int
aaa
int
mov
in
enter
rclb
mov
fdivs
stos
ss
addr16
in
lock
ret
sub
mov
daa
cs
mov
test
pop
push
pushf
insl
leave
push
imul
mov
or
jbe
inc
lcall
mov
adc
and
movsl
xor
movb
jae
lds
add
ja
sbb
xchg
or
movsl
in
dec
mov
mov
jne
mov
sub
mov
cli
jl
pop
mov
lods
jmp
incb
cld
test
loope
pop
outsl
fildll
push
ja
mov
jp
cmp
xlat
mov
adc
xor
ljmp
inc
mov
mov
mov
loop
sbb
ja
mov
fistpll
sti
cmc
adc
lds
fisubrl
fisubs
jp
lret
je
mov
cmpsl
pusha
gs
push
pop
cmc
aam
cmp
mov
pushf
ds
push
inc
and
push
xchg
fcompl
pushf
pop
outsb
mov
xchg
jl
fsubrs
pushl
insb
js
rorl
push
jae
in
jnp
outsb
mov
and
jg
ss
sub
xchg
cltd
fs
in
loope
subb
fcomip
incl
test
mov
inc
adc
ds
call
pop
or
shrb
push
xor
jbe
out
mov
iret
add
movsl
jle
sti
xorl
dec
ljmp
shll
fbld
sti
push
inc
roll
sarl
jmp
insb
mov
xchg
lea
mov
adc
lods
les
ds
in
inc
mov
inc
cltd
jmp
mov
je
out
fcoml
jecxz
mov
sbb
ljmp
cmp
in
xchg
cmp
iret
nop
or
xor
out
cli
jmp
push
xor
sub
xorl
and
jg
sbbb
xchg
adc
fmull
call
jmp
xor
xchg
decl
fcmove
ret
xchg
xor
in
pop
popa
xor
outsl
dec
sbb
jmp
cmpl
mov
leave
test
xor
push
cmp
pushl
adc
stos
lahf
shll
roll
test
cld
shlb
andb
jmp
and
xchg
cmp
ss
or
aad
xchg
ja
mov
cmp
cmp
jge
fadds
stos
fwait
ret
sbbl
cmc
ljmp
bound
mov
sub
in
push
mov
call
adc
in
test
mov
fbstp
pop
int
aad
pop
jmp
cmpsb
xchg
ja
jo
out
xchg
xchg
sbb
clc
inc
inc
test
clc
add
jle
in
pop
sarl
in
cld
flds
add
outsl
loop
imul
cmp
mov
pushl
incl
adc
and
int3
jp
lret
adc
or
jge
add
xchg
out
pop
or
test
inc
repz
jl
out
js
mov
pop
jg
call
shlb
call
xchg
dec
lret
fadds
add
nop
in
ljmp
adc
popa
iret
ljmp
js
clc
xchg
pop
mov
test
mov
incl
cwtl
inc
add
and
dec
ficomps
int3
movsb
pushf
inc
mov
pop
ss
mov
ret
adcb
xor
lret
dec
xor
fbstp
xchg
jp
xchg
setge
das
jno
shrb
pushf
mov
call
add
sub
popa
filds
test
lret
push
push
repz
in
pop
je
xlat
fnsave
mov
jmp
jo
sbb
xorl
pusha
push
mov
mov
xchg
fcmovnb
imul
out
mov
dec
out
xor
repnz
cmpsb
int3
pop
int
inc
adc
push
std
dec
movsb
cmp
xor
aad
jae
pushf
add
jno
or
cmp
pop
lock
mov
into
js
outsl
std
adc
or
pop
fs
jl
aas
stc
xchg
int
adc
icebp
pop
int3
push
repnz
out
gs
ja
push
inc
cmp
fdivr
call
sub
jnp
aam
rclb
cmp
jo
out
mov
pushl
sub
out
lahf
jne
mov
mov
jno
xchg
or
cmpsl
int3
jae
xor
lahf
mov
add
jmp
and
mov
inc
xchg
orb
stos
call
out
adc
adc
push
adc
xchg
adc
jp
jg
mov
ljmp
pop
or
adc
cltd
repz
and
fnstsw
jbe
dec
jne
scas
movsb
iret
sub
call
std
mov
shl
pop
dec
add
test
ss
cltd
shl
pop
in
dec
sub
xchg
outsl
cli
or
lret
jae
mov
outsl
mov
xchg
incl
push
int3
xor
test
idiv
push
testb
xchg
inc
mov
jns
cmp
jge
dec
cmpsb
ja
rcr
sub
movsl
cli
mov
sub
xchg
mov
sub
andb
xor
sar
ljmp
xchg
imul
int3
cmp
inc
xchg
sub
dec
lods
mov
mov
jg
testb
xor
add
lcall
std
xchg
jmp
pushf
or
fwait
mov
adc
push
test
loop
or
pusha
mov
dec
push
mov
out
inc
jae
std
push
outsb
imul
das
mov
bound
or
jg
pushl
xor
pop
fstps
idivl
pop
mov
add
cmp
ficomps
adc
aas
loop
stos
aas
push
and
lcall
rcrl
mov
les
push
incl
fs
and
push
sbb
cs
rorl
cld
popf
gs
push
pop
std
or
sti
scas
out
push
add
pop
sub
jg
outsb
scas
out
mov
movsl
mov
sub
jmp
inc
out
sub
imul
xor
pop
inc
movsl
xchg
fldenv
mov
mov
sbb
cmpsl
mov
lcall
push
into
scas
jg
cmc
xchg
xchg
mov
emms
jns
fcomip
dec
fs
out
push
lods
pushf
pushf
pop
push
mov
pushf
jge
pushf
add
lret
fwait
aam
jmp
movsl
scas
sbb
imul
outsl
mov
push
lods
mov
and
and
and
cmp
mov
loop
pop
aam
mov
xor
data16
mov
mov
imul
ljmp
ret
mov
push
sbb
stos
mov
xor
cld
jo
imul
cmpsl
push
inc
pop
sbb
inc
adcl
sbb
jecxz
je
jg
push
push
dec
xor
jg
push
test
xchg
dec
add
mov
mov
js
mov
std
neg
call
cmp
jecxz
and
push
xor
inc
cmp
and
sub
jbe
testb
fildl
out
xchg
out
leave
js
jno
pop
fs
cmp
in
mov
rcll
mov
mov
add
sbb
ret
mov
xlat
sbb
mov
outsl
imul
test
in
jl
push
dec
icebp
lcall
fistl
mov
loop
mov
ret
test
fbstp
enter
into
push
dec
pop
jae
sarl
shl
rcrl
inc
pop
mov
ja
in
or
inc
lret
xor
lods
ds
cli
cmp
leave
mov
call
inc
inc
lcall
and
xchg
iret
push
das
jp
scas
mov
filds
clc
push
pushl
sub
out
sub
in
sti
adc
sahf
xor
mov
cltd
pushl
mov
out
push
shll
mov
in
inc
mov
ret
decl
push
clc
jae
xchg
pavgb
fcmovnbe
xchg
repz
loop
stos
hlt
inc
mov
jg
add
stos
jl
scas
cmp
arpl
insb
sub
sbb
scas
cmp
in
loopne
daa
xorl
repz
out
mov
ljmp
daa
xlat
hlt
cmpsl
and
fs
mov
xchg
xlat
subl
lcall
mov
mov
fsubrl
gs
xor
mov
decl
int
filds
dec
adc
imul
xchg
xchg
in
test
dec
add
decl
enter
addb
sbb
sbb
pop
inc
jo
je
ljmp
aaa
shrl
push
adc
sbb
mov
lea
sub
shrl
cld
ljmp
sub
loopne
lods
sahf
scas
test
xchg
into
dec
xchg
jp
mov
push
inc
fsubp
push
jge
pop
sbbl
movsl
pop
and
daa
mov
scas
inc
dec
cli
pop
dec
lss
mov
movsl
adc
decl
cs
aad
mov
leave
cmpsb
lahf
and
cmp
xchg
jge
fstl
es
mov
or
sbb
ljmp
out
pushf
cli
push
int3
movsl
lahf
cltd
cmovb
xor
jp
stos
xor
jb
pushl
cwtl
out
sar
je
fwait
pusha
out
js
mov
cs
ficomps
sbb
jp
ds
jg
mov
lods
mov
sbb
sbb
add
test
jnp
jg
stos
fiaddl
adc
stos
xlat
std
dec
scas
cli
jl
jb
adc
push
ret
pop
mov
jnp
mov
js
or
dec
popl
in
sub
dec
jle
iret
mov
aam
les
cmp
dec
cld
or
jnp
mov
in
pop
mov
xchg
sub
out
push
dec
add
adc
jne
mov
mov
ss
mov
leave
pop
cmpsb
xor
xchg
aas
iret
outsb
das
or
sar
dec
lock
xor
insl
fs
pushf
addr16
inc
fdivr
fisubs
jl
mov
popa
shll
nop
decl
nop
pop
jnp
repz
test
sar
jmp
mov
ljmp
js
sbb
scas
or
add
into
jno
iret
call
aad
push
into
dec
ror
mov
ljmp
xor
xchg
imul
sbb
push
js
jg
adc
xchg
jbe
daa
fiadds
xor
dec
imul
xor
adc
push
jo
lock
and
shl
pop
pop
cmc
filds
shlb
sbb
sti
mov
pop
decl
arpl
inc
inc
mov
fcom
call
push
ljmp
sbb
andb
decl
test
pop
xchg
or
stc
test
movsl
add
aaa
mov
test
jmp
push
push
cltd
xor
jns
stc
rcr
xchg
imul
cmp
shll
push
jmp
ss
pop
fadd
stc
xor
push
or
mov
popf
in
das
cmp
pop
inc
out
jnp
pushf
dec
mov
xchg
add
mov
clc
mov
lock
aas
mov
mov
nop
in
ror
cmp
xchg
fcomip
incl
loop
dec
out
adc
mov
push
movsb
addl
rorl
mov
push
adc
push
shrl
jge
jmp
cmc
sbb
pop
lret
lock
inc
xchg
xor
stos
pop
das
ds
or
pop
xor
pop
cmpsb
call
sbb
mov
or
loopne
dec
mov
or
fstl
loop
shrb
jge
mov
insb
mov
cmp
jmp
movsl
xlat
mov
ds
jge
push
mov
pop
outsb
sbb
mov
aad
inc
int
shl
dec
gs
or
in
ljmp
mov
pop
adc
or
mov
push
movsl
sub
test
lcall
cmpl
and
pop
xchg
addr16
adc
sbb
jb
incl
dec
fidivs
in
cmp
inc
imul
loope
shlb
lcall
incl
inc
jmp
push
cmp
cwtl
mov
xor
xchg
jmp
lret
test
or
shlb
mov
sub
inc
inc
mov
adc
lcall
and
aad
mov
mov
in
iret
sbb
les
ja
out
lods
mov
call
lret
or
sbb
xchg
iret
ficomps
inc
add
sbb
in
inc
popf
xchg
jg
mov
clc
or
lahf
dec
cmc
daa
dec
cmp
adc
sub
sbb
cld
in
xchg
inc
aam
lret
mov
cld
call
pop
or
sub
arpl
idivb
inc
xor
incl
call
repnz
xor
jecxz
jnp
popf
inc
out
lds
aas
cmpsb
cmc
insl
cli
fsubs
scas
decl
jge
icebp
mov
add
pop
xchg
mov
sbb
ds
daa
dec
cmc
push
call
loopne
mov
fdivr
inc
aad
lret
xchg
cmp
subl
or
std
inc
dec
cltd
mulb
mov
lods
dec
test
leave
xor
fldenv
sti
cs
cmp
lcall
out
pop
and
lret
sub
or
into
cmovnp
call
mov
test
and
loop
cltd
out
add
test
fistps
cmp
imul
mov
movsl
xadd
push
shl
in
out
mov
dec
inc
call
mov
sbb
push
hlt
dec
mov
push
mov
or
jmp
and
xchg
leave
pusha
int3
jg
push
cltd
jp
adc
xchg
out
mov
dec
imul
idivb
dec
fidivl
insl
shrb
lods
mov
scas
lret
call
cmp
pop
popf
icebp
lcall
sarb
sub
mov
aaa
ret
add
sub
mov
mov
call
ljmp
ds
lahf
sarb
add
sbb
ljmp
fwait
mov
mov
xchg
xchg
vmovups
inc
push
xchg
xchg
pushl
jp
sbb
xchg
sub
andb
mov
loopne
int
les
jl
mov
mov
cmpsl
outsb
cmp
push
sub
pop
or
or
pop
xor
decl
xchg
shlb
add
lret
movsl
rcll
and
mov
decl
jnp
lock
xor
jl
inc
test
movsb
js
cmpsb
stos
and
lods
mov
call
jae
and
pop
cmp
sarl
sub
lret
ljmp
popf
test
sbb
push
sub
mov
pushf
imul
inc
loope
rcrb
incl
dec
or
scas
push
popa
repnz
xorb
loop
jmp
sti
je
fcmovnb
cs
shrl
pop
stos
pop
cmp
xor
cld
jecxz
hlt
cmp
pushl
jmp
test
cmpsb
or
push
int3
xchg
xor
mov
in
test
ljmp
push
pop
popa
addb
call
aam
sahf
xchg
repz
adc
jp
mov
ret
ret
jmp
inc
sbb
bound
add
adc
push
dec
lock
repnz
jg
mov
pusha
out
decb
cmovne
loope
mov
lret
es
lock
cwtl
mov
jle
aad
pusha
lret
push
movsl
aam
loop
jne
mov
shl
mov
fwait
and
sub
push
ljmp
test
mov
test
mov
add
test
subb
lcall
push
pop
adc
jae
lods
jo
lahf
mov
and
jle
add
lcall
pop
lds
repnz
sbb
jmp
loope
xchg
pushl
dec
test
jg
fstps
movsl
jecxz
push
es
not
insl
push
cmp
fs
lcall
std
sub
les
inc
lret
and
hlt
mov
xchg
mov
scas
sub
lods
outsl
cld
mov
cmp
loop
dec
jmp
mov
cmp
jle
pop
cmpsl
mov
mov
insb
jb
call
push
mov
aam
jne
cld
pushw
insb
push
out
enter
adc
fidivrs
fisttps
incl
jns
mov
cmp
lret
and
cmc
mov
mov
sub
adcl
add
lahf
pop
jecxz
clc
bound
push
fldenv
fisubs
stos
adc
mov
pop
mov
pushl
out
aad
stc
pushl
insl
xchg
add
loop
mov
cmp
dec
in
ficoml
jne
popf
add
jmp
pushf
fcmovne
jecxz
gs
cs
mov
int
mov
and
sub
mov
rorl
push
repz
push
popf
ljmp
adc
movsb
mov
arpl
mov
cltd
insl
cmp
incl
es
test
incl
pop
push
sti
fcmovnbe
repz
movsl
push
lock
sub
cwtl
fbstp
push
mov
dec
daa
mov
sbb
jmp
test
ljmp
popf
pop
add
stos
decl
mov
push
js
adcb
outsl
test
jmp
xlat
fucomip
fwait
push
xor
mov
jmp
inc
test
add
pop
cld
cmp
vmwrite
mov
test
aad
jl
xor
jg
xor
lret
mov
sub
or
test
int
mull
jmp
jmp
rorb
pop
mov
iret
xchg
xchg
mov
stos
mov
mov
push
repnz
cmp
call
aas
sub
sti
fnsave
jg
into
push
adc
in
dec
out
ljmp
and
mov
pop
mov
xchg
jg
aam
repz
daa
std
or
cmp
or
push
sbb
add
inc
neg
or
adc
lods
pusha
cwtl
jmp
xchg
stos
clc
shrl
add
jmp
leave
pop
sub
leave
mov
jns
mov
out
verr
add
lcall
add
push
popa
xchg
sub
adc
jae
movsb
adc
pop
int
mov
dec
push
clc
jmp
xor
inc
std
pop
fs
push
out
jge
xor
sti
rcrb
ss
lcall
jle
out
xchg
stos
mov
js
movsb
jnp
in
xchg
jo
mov
mov
sar
jg
inc
cltd
aaa
pop
inc
negl
xchg
xor
jg
test
mov
pusha
lcall
cmp
xchg
inc
dec
aas
dec
ja
push
xchg
jle
lea
push
shr
jmp
mov
xchg
cmp
push
aad
or
mov
cmp
dec
pop
and
lret
add
call
dec
into
lahf
es
mov
outsb
popf
add
xor
lcall
int
int3
std
pusha
pusha
sub
test
push
jns
popf
decl
dec
int3
sbb
push
jo
repnz
jge
xor
stos
in
es
ljmp
sbb
dec
mov
sub
push
mov
pop
lret
inc
jne
ret
shlb
mov
test
jg
dec
pop
aam
dec
mov
adc
sub
repnz
fisttps
divl
sbb
sbb
jg
adc
xor
jmp
push
outsl
fldl
mov
inc
ficomps
mov
push
pop
xor
push
incl
jmp
clc
xor
aaa
or
mov
push
pop
xchg
push
add
mov
mov
pop
adcb
xchg
fiaddl
incl
sub
cmp
push
sete
cwtl
push
inc
aaa
cltd
or
mov
lods
sub
xchg
mov
iret
pop
xlat
mov
stos
and
repnz
dec
xchg
xchg
aad
inc
mov
jno
cmc
mov
fsubs
movsb
push
cmp
mov
outsb
and
mov
out
imul
aad
push
ljmp
ljmp
imul
ja
mov
or
dec
daa
sub
push
cmc
not
fcmovnbe
insl
dec
lcall
push
xchg
fwait
push
daa
das
movl
das
and
lea
rolb
call
cwtl
sbbl
jbe
cmpsb
pop
hlt
je
push
aam
pop
mov
movsl
ss
jb
xor
decl
fdivs
lock
mov
out
fcmovu
das
mov
test
arpl
lcall
xor
add
nop
pop
or
jne
jg
mov
inc
lahf
jb
mov
sub
call
cltd
loopne
es
lods
jmp
pop
cwtl
sbb
xlat
or
mov
ss
pop
inc
add
mov
loop
jmp
roll
decl
dec
pop
out
push
mov
pop
xor
scas
gs
notb
mov
nop
mov
xchg
gs
lcall
sub
sub
mov
add
out
add
scas
push
insb
aam
xor
inc
and
gs
mov
sti
das
pop
and
sub
cs
loopne
push
test
lcall
cld
pop
push
dec
andb
int3
into
addr16
int
shlb
push
test
incl
js
popa
add
pop
sub
aam
pop
push
lods
sbbl
sub
outsl
and
and
clc
popa
mov
pushf
addb
cmp
push
and
fstps
ds
sub
push
test
ljmp
xor
push
jl
mov
adc
cwtl
out
xchg
movsl
jno
dec
cli
sbb
es
cs
lcall
lret
push
lahf
and
into
aam
inc
jne
pop
or
cli
adc
sbb
adc
dec
xchg
push
lods
jge
xor
fwait
mov
mov
sub
mov
dec
fistl
cmp
lcall
into
mov
scas
push
and
into
xor
mov
lods
outsl
clc
jmp
xchg
adc
pop
dec
pop
popf
xchg
fs
mov
jo
push
add
adc
decl
fbstp
mov
lret
movsl
lret
jne
rolb
and
dec
mov
lcall
ja
movsb
rcrl
xor
sarb
dec
imul
ljmp
sbb
bound
mov
push
sar
ljmp
movsb
sub
xchg
adc
push
lods
nop
and
jle
fstl
mov
mov
cwtl
std
push
ljmp
decl
dec
jge
push
inc
xchg
and
sbb
mov
push
push
and
sti
mov
ja
sar
and
out
xlat
movsb
and
outsl
jle
add
pushl
repz
mov
nop
cs
inc
movsl
fdivr
lcall
xchg
push
fdivrs
ljmp
push
sub
ljmp
dec
xchg
inc
iret
and
clc
loop
pop
adc
cmpsl
push
or
cmc
outsb
or
mov
xor
inc
in
decl
test
nop
jne
in
stos
out
add
fdivl
add
test
and
dec
stc
fisubs
sbb
mov
scas
add
int3
jecxz
into
or
nop
movsl
inc
push
rorl
fst
lds
cmp
adc
imul
add
add
call
and
scas
in
fdivl
pop
stos
repz
ret
pop
sbb
mov
jg
sub
pop
pop
in
and
pushl
push
xchg
mov
aas
out
jno
jno
jmp
xchg
push
andb
jmp
xchg
sbb
fsubrl
arpl
xor
lcall
icebp
xchg
aaa
pop
ss
inc
mov
jecxz
sub
add
sub
stos
incl
sbb
dec
inc
fists
ds
jge
mov
stos
fisubl
mov
incl
sbb
dec
fwait
rolb
jl
mov
fs
imul
call
aaa
cmp
nop
jp
fldl
or
mov
ljmp
mov
in
dec
xorl
mov
ud2
xor
sub
lcall
scas
cmpsb
stc
cli
frstor
test
fcoml
je
popa
or
dec
push
incl
call
ljmp
mov
xchg
ja
js
inc
and
int3
sub
imul
xor
ljmp
mov
push
pop
test
mov
test
push
gs
cmpl
call
pop
mov
insl
or
adc
mov
pop
mov
xor
mov
clc
decl
in
and
faddl
or
jb
or
xor
in
scas
ljmp
pop
hlt
sbb
inc
or
aas
inc
lret
inc
push
mov
adc
decl
jge
adc
pushf
xchg
jecxz
mov
sbb
push
pop
in
pop
xchg
inc
es
incl
dec
inc
subl
hlt
or
adc
xchg
sahf
cs
mov
inc
idiv
js
add
mov
pushf
sub
cmpl
cmpsb
adc
pushl
in
push
mov
pop
mov
pop
scas
insl
or
cmp
inc
mov
addr16
or
enter
shlb
cmc
in
fld
push
subb
data16
clc
ret
nop
ret
jle
cli
test
mov
push
mov
sub
imull
xor
or
imul
fstl
fisttpll
decb
cld
xchg
sbb
inc
mov
lods
cmp
jo
les
pop
jmp
jmp
or
push
mov
into
pop
xor
xor
lret
lods
jb
xchg
cmp
jmp
pavgw
jo
mov
decb
fisubl
outsb
jae
pop
dec
jns
adcb
incl
repnz
call
jmp
lods
add
in
pop
fnstsw
cmp
mov
push
mov
adc
sub
inc
add
push
cmc
push
sbb
incl
cwtl
popa
rcrl
fldenv
pop
daa
or
jmp
xchg
xchg
popa
out
fidivl
mov
inc
cli
aas
push
xor
test
jge
jmp
sub
inc
in
or
jp
rcrl
adc
outsl
sbb
jae
inc
xchg
sbb
adc
call
mov
add
add
test
pop
aas
jno
push
jae
lea
mov
push
dec
push
scas
insb
movsl
push
mov
fsts
int3
fcoml
cltd
push
int
sar
dec
fildll
sbb
sbbl
movsl
sbb
shll
stc
add
cmp
call
loopne
xor
pop
daa
scas
cmp
int
mov
cmp
pushl
insb
mov
add
imul
or
dec
adcb
sbb
pushl
mov
mov
pop
add
cli
ja
add
mov
mov
test
hlt
jmp
and
mov
andl
cld
add
ror
std
decl
sbb
dec
aam
mov
jo
mov
fidivrl
dec
cs
pushl
lock
sub
rcrb
mov
ljmp
lea
cli
call
jmp
loope
cmp
dec
je
into
xor
xchg
mov
xchg
cltd
jecxz
pop
repnz
mov
jl
inc
jns
fiadds
sbb
mov
aad
lcall
mov
cltd
aas
out
ljmp
push
cmpsl
out
movsl
mov
or
dec
setno
fwait
and
cmp
or
mov
mov
decl
jle
ds
sar
add
cmpsl
add
adc
inc
sub
lods
leave
or
cld
stc
sarb
mov
add
idivl
sbb
xchg
es
decl
pushf
pop
cmp
clc
push
ret
jmp
inc
enter
shlb
fisttpl
outsl
dec
sbb
ss
mov
lds
jmp
pop
nop
dec
xchg
inc
pusha
sub
std
nop
sbb
std
call
push
xor
arpl
sub
sbb
jecxz
call
rcrl
lcall
dec
or
and
dec
fwait
divb
jmp
loope
pop
cmp
paddq
dec
push
insb
rorb
pusha
jl
inc
pop
cmp
cld
test
cld
mov
int
cmp
adc
je
pushl
sarw
push
jecxz
jno
fs
imul
cmp
jne
lock
pushl
xlat
sub
dec
sti
js
cmp
cmp
mov
pushaw
add
fcomip
pop
insb
cmp
out
fwait
sub
pop
lds
gs
or
mov
decl
cltd
pop
mov
daa
xor
pushf
fwait
mov
push
hlt
sbb
jne
pop
inc
lcall
lcall
shlb
add
int3
xchg
jo
adc
popf
fimuls
leave
std
mov
es
push
cltd
sbb
inc
js
push
xchg
pop
mov
cli
iret
cmpb
jmp
incl
addr16
jns
jecxz
jp
in
aas
lret
mov
cmc
and
shrl
xor
jp
xor
lds
in
push
push
outsl
or
mov
jmp
xchg
ret
and
cmp
push
xchg
cmp
cli
or
cmp
rorb
mov
call
stos
xchg
jns
mov
outsl
imul
out
fwait
inc
xor
mov
pushl
fldcw
dec
mov
adc
mov
sbb
push
ljmp
lock
lods
push
ds
inc
movsl
dec
and
jo
xor
and
ljmp
js
jmp
mov
pop
into
mov
and
int
mov
xor
fcos
call
lds
xor
lods
mov
xchg
mov
icebp
xor
add
addr16
inc
cmp
call
lcall
shrb
xchg
scas
outsb
xchg
xorl
ljmp
scas
adc
in
add
rolb
std
mov
ljmp
cwtl
insb
adc
or
lods
enter
call
pop
sti
sub
testl
out
out
sub
push
adc
ja
dec
adc
jnp
inc
and
inc
movsl
jl
test
mov
push
pop
sub
insl
repnz
pop
adcb
push
jno
push
incl
lods
sub
mov
pop
mov
out
lret
aaa
xor
or
pop
imul
lahf
notb
mov
cld
xchg
shll
fnstsw
cmp
out
dec
cmc
xor
ss
lock
into
adcb
mov
rol
and
dec
push
in
aaa
imul
jle
hlt
gs
icebp
call
loopne
in
in
add
xchg
or
fildl
addr16
mov
jmp
cmp
imul
fisubl
test
sti
jb
int3
cld
push
int3
jae
decl
scas
mov
out
push
and
push
cmp
mov
xlat
sbb
int
cmc
fs
fsubrl
sub
in
aam
lea
paddsb
adc
mov
sub
mov
decl
inc
add
inc
push
int
mov
sub
and
mov
dec
mov
sar
pop
outsl
decl
add
fildll
push
cmpsb
or
and
inc
mov
pop
adc
pushl
cli
adc
or
xor
dec
test
mov
rcl
mov
xchg
cld
mov
out
mov
ljmp
lods
dec
mov
inc
stc
push
pushf
mov
loop
popa
xchg
push
dec
adc
xchg
out
mov
rcll
repz
outsl
inc
je
outsb
imul
or
xor
mov
lds
inc
fwait
pop
sub
lock
mov
std
jmp
xor
pusha
jb
scas
pop
pushf
push
dec
cltd
addr16
sti
lret
lods
sbb
push
mov
jg
push
ss
mov
daa
decl
inc
pusha
dec
sub
ljmp
push
or
push
jbe
jae
adc
ja
bound
sub
or
adc
cld
incl
jns
pop
jecxz
clc
lea
cld
cmp
les
adc
lret
xchg
outsl
andl
and
or
pop
sti
scas
sub
cmc
mov
das
mov
pop
mov
pop
icebp
dec
adc
call
lods
pop
sbb
fwait
pusha
aas
mov
sbb
cld
push
out
or
or
mov
mov
lods
cwtl
xchg
xor
ret
stc
cli
icebp
inc
xchg
dec
mov
mov
decl
mov
aaa
jp
popa
inc
jb
pop
mov
cwtl
clc
sub
adc
lcall
in
cli
sub
cld
scas
mov
sub
ljmp
mov
fs
mov
push
cmp
mov
sub
iret
sbb
popf
pop
cwtl
xor
nop
in
mov
lock
mov
and
das
and
popf
ljmp
adc
rolb
cli
shll
push
int3
sub
xchg
ljmp
push
fstl
loop
cmpsl
xchg
loope
xchg
loop
sbb
xchg
loopne
push
out
xchg
xchg
arpl
ret
jne
cld
sbb
push
into
add
pushl
dec
gs
inc
mov
ss
pop
bound
push
pop
notl
jne
lahf
mov
call
lods
sub
dec
adc
inc
mov
inc
pop
mov
out
out
mov
daa
loop
cli
jg
sub
sbb
sbb
ja
aam
add
mov
and
fs
or
loope
fs
lahf
decl
stos
jb
or
insb
into
insb
pushf
in
add
cwtl
xchg
sub
cwtl
out
icebp
ljmp
icebp
push
jmp
jmp
xor
add
cmpb
stos
dec
das
add
push
xor
push
std
pushl
arpl
outsb
xlat
sub
hlt
mov
add
jb
idiv
dec
sub
xor
cld
adc
iret
sbb
test
dec
stos
add
adc
jp
lock
lcall
adc
inc
out
cmp
mov
mov
push
fidivl
call
jo
aam
push
loopne
out
jnp
cs
push
mov
loopne
es
fsin
dec
aaa
add
jmp
mov
xor
push
xchg
jg
xchg
add
stos
push
mov
lds
ljmp
xorb
stos
push
rorb
lea
bound
outsl
sub
xor
popa
int3
cmp
adc
xor
xor
sub
lcall
ss
inc
mov
jmp
mov
sub
in
dec
cmp
sbb
push
jae
and
sub
cmp
movsb
je
leave
push
dec
dec
loope
jg
and
and
mov
std
jno
orl
lcall
pop
push
mov
testl
rcrb
jbe
insb
add
push
and
out
xor
adc
inc
test
loop
outsb
movsb
bound
pop
dec
js
bound
pop
fwait
cmp
pushl
xor
sbb
fwait
xlat
and
outsl
mov
mov
aaa
mov
popa
roll
jmp
or
les
shl
sub
imul
sbb
inc
inc
jne
pop
jg
jno
lods
cmp
repz
das
push
sbbl
roll
testl
dec
jg
int
adc
cmp
sahf
sbb
sbb
xchg
adc
outsb
xor
arpl
incl
push
sbb
gs
pop
lahf
repnz
mov
dec
jbe
pop
outsl
inc
xchg
cmpb
mov
jmp
add
mov
jp
dec
mov
xor
xchg
adc
add
sbb
cltd
enter
js
sub
test
push
jp
jg
ja
int3
sahf
and
lea
mov
mov
call
mov
pop
dec
jnp
jmp
stos
int3
out
out
cli
ljmp
ss
insl
dec
dec
inc
ds
clc
imul
jp
jmp
mov
fsubs
shrl
iret
push
jne
pusha
mov
xor
jge
aaa
filds
xchg
push
fildl
pop
rcll
dec
mov
jbe
jl
xchg
jne
test
cmc
jb
js
mov
stos
lds
popf
and
in
decl
enter
scas
ljmp
fs
addps
jbe
lock
fildll
or
adc
push
jnp
iret
cmp
mov
rol
cmp
mov
and
xchg
mov
mov
sbb
ds
mov
fldcw
stos
clc
decl
gs
mov
sub
pusha
aam
pop
fcmovbe
ljmp
int3
xchg
lods
cmpsl
out
push
xor
test
inc
leave
mov
call
out
pop
jb
jne
pop
shlb
shl
lcall
popa
pop
test
xor
pushl
dec
imul
je
cmp
mov
mov
xor
rorb
mov
stos
inc
in
xor
inc
xor
sbb
pop
aas
pop
movsl
pop
xlat
sarl
call
pop
movsl
mov
sub
xchg
jno
dec
das
das
jg
jne
mov
or
dec
or
cmc
xchg
vmwrite
shl
stos
and
jo
jg
and
inc
mov
add
jmp
cli
inc
rolb
jg
call
push
or
aas
and
mov
xor
and
rcl
out
daa
sub
jmp
rcll
sbb
or
imul
and
ss
cmp
mov
incl
es
icebp
push
mov
mov
dec
xchg
adc
fwait
js
data16
fldt
or
or
xor
imul
push
mov
push
inc
fsubr
aam
push
repnz
mov
insl
sub
ret
int
push
or
or
decl
fldenv
test
aas
mov
pop
clc
icebp
mov
test
xor
mov
out
popa
sub
lcall
stos
arpl
sub
adc
hlt
xor
sbb
test
mov
jne
pop
lcall
movsb
hlt
shl
mov
lret
das
dec
outsl
adcb
push
das
fdivr
call
cld
push
mov
arpl
out
mov
and
jo
add
pushl
adc
icebp
and
jnp
scas
in
ja
xchg
fsubrs
adc
jmp
cs
fidivrl
cmc
pop
andl
push
lahf
sbbb
pop
xor
jp
in
out
es
adc
movsb
es
mov
push
xchg
mov
jmp
mov
sbb
ljmp
aam
dec
and
jle
in
scas
scas
scas
mov
add
test
mov
aad
push
into
popa
nop
mov
inc
push
push
inc
jle
and
push
add
pushf
push
push
or
cli
xor
mov
loope
leave
outsb
cmp
adc
cmp
cld
das
jp
xor
xor
mov
mov
filds
addr16
dec
inc
jmp
hlt
mov
sar
cmp
jp
sbb
sbb
push
in
mov
xchg
pop
or
xor
mov
mov
sub
pop
outsl
pop
and
ret
repz
push
stos
sbb
stos
jno
loopne
stc
ss
cmc
pop
dec
pop
popa
adc
scas
jne
shlb
xor
sarl
mov
cmp
ljmp
iret
mov
stc
mov
ljmp
dec
adc
dec
in
dec
sar
popw
mov
fdivrl
mov
or
loope
jmp
stc
pop
xchg
cmp
inc
loopne
xchg
jge
cmpsl
xor
movb
lods
lea
push
push
or
sub
mov
jle
and
push
mov
in
dec
mov
xchg
aam
mov
jmp
mov
xor
orb
fs
mov
pop
lods
pop
lret
push
sbb
insl
loopne
inc
outsl
das
cli
call
je
mov
shrb
jmp
or
incl
xor
shrb
pusha
pushf
mov
dec
lods
cltd
xchg
lcall
shl
je
stos
sbb
fcomps
jae
mov
cld
rorb
cmp
int3
orb
fsubs
das
pusha
stc
movsl
cli
jnp
push
pushf
inc
aas
sti
xor
add
push
lods
fisubs
in
mov
lds
in
cmpsb
enter
xchg
bound
call
jl
imul
push
jno
ret
push
cmp
addr16
aad
not
fs
jge
adc
push
orb
push
outsb
xor
mov
sub
xchg
outsl
in
inc
mov
scas
js
adc
stos
xchg
jae
inc
fwait
lcall
dec
and
dec
sub
imul
jne
fwait
shr
cltd
sub
cli
call
jno
dec
cltd
test
sub
in
or
mov
call
repnz
aad
mov
mov
clc
ret
ffreep
jo
outsb
push
push
decl
xor
pop
push
push
imul
test
ret
movsl
out
pop
repnz
cmp
push
rol
mov
das
xchg
mov
cmp
push
call
cmpsb
in
pop
les
cld
das
cmpsl
push
and
out
mov
hlt
mov
mov
lea
and
xchg
dec
inc
in
cmp
cld
jl
test
dec
cmc
out
xor
mov
pop
cs
mov
push
lcall
jmp
cwtl
out
bound
add
dec
sahf
decl
fstpt
out
jecxz
test
dec
subb
data16
ja
mov
jbe
xor
cmp
mov
pop
mov
repz
fisttpll
dec
dec
add
mov
jg
mov
push
jns
dec
inc
outsb
loopne
jecxz
aas
out
inc
test
call
ja
fdivs
or
mov
ja
add
scas
in
in
lret
push
mov
and
in
aad
test
pop
scas
cli
ljmp
cmp
dec
testb
dec
sub
dec
inc
mov
push
xchg
and
out
cli
ljmp
push
call
insl
mov
lods
pop
out
jae
cmp
mov
sub
imul
sbb
dec
pop
stos
inc
negl
add
bound
das
sar
mov
movsl
fnsave
sbb
mov
daa
xor
cmc
call
dec
or
mov
popa
xor
or
push
inc
int3
es
insb
pushl
dec
rolb
pop
jb
ljmp
cwtl
or
sbb
cld
xchg
out
sahf
lahf
xor
add
into
lahf
arpl
int3
pop
push
jg
lahf
add
enter
jnp
pop
in
inc
inc
adc
dec
into
jge
mov
lods
dec
cltd
inc
mov
sub
andb
push
pop
xchg
pcmpgtw
xchg
cmc
cmp
fisttps
fdivrp
jg
icebp
stc
push
mov
loopne
in
int3
lock
xor
or
ljmp
arpl
push
dec
push
adc
jbe
out
loop
in
or
inc
xor
in
clc
and
ljmp
pop
mov
push
into
or
cmp
lahf
scas
repnz
into
es
pop
or
dec
xchg
fiadds
dec
sbb
mov
div
cmp
lcall
out
ljmp
testl
sub
jae
in
inc
add
js
pop
xor
add
xchg
mov
dec
nop
push
fnsave
roll
cld
loopne
insl
jp
std
mov
sar
loopne
lcall
push
stos
cmc
out
mov
xchg
xchg
loope
ja
pop
dec
orl
mov
xchg
repnz
mov
dec
mov
dec
fiaddl
mov
sub
push
lods
push
or
mov
dec
push
dec
aaa
call
inc
inc
mov
xor
aad
jbe
pop
mov
and
push
fistl
dec
lahf
ljmp
sahf
ficomps
imul
popa
mov
mov
repz
int
loope
jo
mov
jae
aad
jmp
fsubrs
adc
inc
xchg
or
jmp
enter
lcall
ljmp
push
jmp
lret
pusha
and
xor
jbe
fwait
pop
mov
sbb
jg
mov
ret
dec
mov
sarl
rorb
cmp
popl
test
arpl
cld
call
sbb
pop
icebp
cmp
test
scas
inc
jle
sarb
add
loope
inc
dec
loop
push
ja
cltd
pop
or
sti
daa
or
sbb
xchg
push
test
sahf
pop
pop
testl
and
imul
cmp
push
je
loopne
mov
mov
test
adc
fs
mov
test
pop
or
ljmp
ja
ret
fcomip
jg
stos
cs
pop
dec
stc
cmpb
pop
in
aaa
xchg
adc
dec
add
test
movsb
push
test
pop
cli
scas
cmp
js
pusha
dec
xor
addr16
adc
out
jg
incl
mov
and
lcall
mov
cs
pushl
mov
mov
rcll
cmp
mov
loope
mov
cmpsb
add
out
mov
sbb
push
xor
dec
xor
daa
push
pop
scas
jnp
jbe
punpckhbw
cmp
fisttps
mov
pop
stos
mov
inc
pop
sub
mov
mov
adc
inc
xor
hlt
mov
cmp
sbb
out
lods
pop
xchg
in
dec
in
inc
int3
cmpb
mov
decl
in
cmpsl
pop
mov
je
movl
jmp
jg
out
sub
and
imul
jmp
frstor
or
cmpsb
jne
pop
icebp
lcall
adc
ret
fisubrl
dec
jb
ljmp
sub
call
cmp
mov
int3
jbe
les
jp
inc
mov
mov
movsb
popa
rcll
xor
lods
jns
filds
add
ljmp
repz
pop
push
lds
shr
mov
fs
ja
movsb
daa
jnp
pop
or
pushl
xor
jecxz
movsb
add
mov
test
xor
lcall
mov
out
xor
or
sub
push
daa
lcall
nop
push
addb
std
dec
rcrl
mov
xchg
ja
inc
cmpsb
out
nop
jae
add
lcall
pop
je
mov
cmp
lds
inc
mov
sub
push
inc
test
inc
std
cmp
ja
div
cmpsl
dec
movb
sub
out
adc
sbb
ljmp
sub
inc
fdivs
outsb
or
sub
popa
inc
jp
jmp
clc
flds
cltd
push
lcall
dec
mov
xor
aas
into
mov
cmp
incl
push
fstpl
out
push
xor
inc
add
push
adc
mov
jg
inc
sub
mov
jne
cmc
sbb
and
das
cltd
adc
cs
out
xchg
lret
cmpsl
pop
outsl
xchg
into
stos
jnp
scas
shll
or
out
hlt
lea
inc
data16
popa
aad
clc
movsl
std
mov
jmp
cmp
jae
punpckldq
cltd
jae
stos
jge
clc
pop
mov
es
jmp
test
hlt
jle
push
jle
pushf
pop
clc
lods
inc
adc
sub
inc
sub
ss
pop
sbb
aad
std
lcall
call
scas
lret
or
data16
mov
mov
mov
jg
imul
push
addb
inc
lret
mov
pop
inc
sti
mov
push
scas
imul
fisttps
adc
dec
push
sbb
lcall
outsl
xchg
dec
fwait
repnz
cmp
jmp
clc
sti
xor
xor
push
mov
sahf
rol
mov
or
ret
pop
dec
es
ljmp
ret
lea
cmp
aas
les
shll
loope
pop
jns
push
push
inc
fdivrp
scas
clc
in
xor
jno
mov
adc
mov
mov
ljmp
xchg
data16
clc
and
les
fcmovu
mov
jb
mov
addr16
push
jne
jo
jns
mov
pop
cltd
lds
jns
mov
testb
les
insl
in
cmc
ljmp
mov
les
push
or
mov
ficompl
in
xor
pushl
jle
add
call
ret
or
jl
lcall
cmc
inc
adc
xchg
mov
pushf
fwait
int3
cmp
or
jg
jae
push
jnp
xchg
xchg
std
inc
jl
leave
pop
add
cld
mov
aam
jo
push
mov
xchg
mov
push
cld
call
add
dec
mov
stc
mov
jns
push
push
sbb
jo
nop
ljmp
js
sub
shl
mov
push
imul
je
push
stos
mov
jmp
cmp
pop
sub
ss
call
push
push
add
cltd
xor
dec
dec
push
sarb
adc
leave
push
es
stc
out
stos
pop
stos
lcall
cld
xchg
push
adc
pop
add
pop
xchg
pop
pop
fisubs
ficoms
incl
sbb
mov
das
dec
xchg
jmp
shlb
in
pop
xchg
pop
cmpsl
leave
dec
xchg
outsl
jg
call
lcall
xchg
test
orl
fsubrp
and
ljmp
or
mov
cmp
lcall
jmp
mov
adc
rol
lods
loope
adc
cld
jno
int3
or
xor
bound
out
lods
movsb
loopne
lcall
test
pop
dec
movsl
rcrb
pop
stos
arpl
xlat
add
sub
or
push
jg
cmp
jle
adc
and
out
xor
addl
jmp
movsl
mov
push
rcrl
pop
stc
jg
cltd
jnp
ljmp
xchg
adc
xchg
dec
rorb
insb
push
outsl
dec
sbb
push
icebp
mov
sub
repnz
out
fsubs
jnp
fmull
jae
jne
stos
insb
mov
insl
inc
jmp
shlb
fwait
mov
jg
shlb
aam
lea
push
repnz
mov
xchg
jp
mov
push
xor
mov
xchg
scas
jmp
jg
dec
mov
ja
aas
jl
and
cltd
xor
inc
or
xor
ljmp
outsl
push
jo
dec
xchg
ret
clc
sub
in
or
or
xor
jne
mov
mov
incl
lret
dec
push
in
ret
lea
dec
stos
sub
decl
xor
inc
test
test
push
pop
inc
mov
sarb
add
sbb
jmp
mov
and
add
cwtl
dec
mov
inc
stc
pushf
or
sahf
and
daa
inc
push
inc
jno
mov
inc
dec
ret
xchg
pushl
or
and
mov
jae
inc
jl
inc
sti
jns
or
loopne
call
clc
daa
fiaddl
xchg
mov
mov
ds
out
lea
in
mov
pushf
push
or
test
push
add
or
pop
int
push
fwait
insb
shlb
push
ljmp
cmpl
xchg
in
or
adc
mov
or
cmp
test
adc
test
jl
enter
xchg
add
add
cs
pop
sub
and
lcall
or
into
xor
pop
and
inc
insl
jg
jg
lcall
xlat
push
lods
jno
mov
xchg
inc
es
mov
insl
sub
sbb
scas
jns
out
mov
aaa
dec
mov
jns
xchg
and
aas
sub
xchg
sub
int3
sbb
stos
xchg
test
inc
sti
mov
cwtl
sbb
js
or
pop
sbb
sub
ret
fsubl
pushl
push
cmp
pop
bound
movb
ret
incb
call
nop
sar
stos
jns
aaa
cld
ljmp
aam
cli
int3
mov
or
andl
mov
jmp
jmp
call
decl
mov
jmp
mov
clc
adc
addr16
ljmp
into
jno
loopne
pop
pop
movsl
nop
adc
or
adc
decb
mov
mov
sbb
cld
test
or
sub
out
mov
adc
pop
pop
outsb
insb
sbb
add
inc
pop
icebp
dec
cs
and
mov
and
lods
loopne
fiaddl
jne
in
incl
pushl
gs
stc
xchg
fwait
adc
pop
add
xor
mov
pop
outsb
leave
fcomip
in
dec
cmp
lret
bound
dec
test
les
push
jns
push
jle
call
fists
mov
es
loope
jo
out
test
rcll
sub
inc
ficoms
int3
call
enter
mov
jge
fdivp
dec
jp
rcrl
dec
adc
jg
ds
xor
xor
fs
pop
sub
orl
fbld
push
pop
jb
and
mov
jg
sbb
jle
int
jp
cmpsl
notb
mov
in
xor
dec
jno
in
push
sub
nop
push
ficomps
jne
jmp
sahf
cmp
adc
adc
mov
push
shrb
xchg
and
dec
pop
enter
ret
ss
pusha
gs
jp
imul
fsub
cmp
sbb
stc
sti
cltd
xchg
xlat
or
jp
aas
cmpsb
jle
leave
ljmp
mov
add
adc
js
rorl
out
das
fimull
and
mov
decl
pop
adc
test
adc
int3
push
mov
mov
call
lock
into
loope
inc
adc
stos
cmp
in
into
adc
jmp
sub
cld
incl
cmpsb
adc
es
add
dec
pop
lods
mov
push
jg
dec
cmp
iret
aas
xchg
test
adc
adc
ja
cmpsl
mov
jecxz
icebp
neg
adc
push
incl
dec
iret
xor
out
in
jae
test
in
lods
andl
fnstenv
outsb
lods
ds
mov
imul
and
roll
fs
jns
push
pop
shlb
xchg
xor
sahf
clc
cmp
lods
dec
mov
ret
sub
testb
dec
ret
pushf
adc
inc
jg
cmpsl
call
ds
push
jecxz
scas
test
das
or
or
sahf
sub
sub
dec
movsb
mov
pushl
push
movsb
inc
dec
cmp
xchg
sub
mov
jp
mov
inc
sub
nop
fimull
sbb
xor
repnz
and
pushl
cmp
scas
mov
mov
push
adc
and
xor
cmp
jno
movsb
mov
sbb
cmc
lcall
pusha
push
leave
xor
lret
inc
dec
pop
mov
xchg
cwtl
and
out
cli
lcall
sub
shl
push
lcall
sahf
push
pusha
in
imul
sbb
movsl
mov
aam
enter
xchg
fcoms
cwtl
mov
mov
jb
mov
cwtl
mov
bound
sub
rol
fcoms
orb
lcall
push
pop
dec
mov
pop
pop
add
jb
shll
ss
ds
imul
idiv
pushl
sbb
sub
into
jns,pn
dec
adc
lock
out
lea
and
lret
adc
ljmp
xchg
cmp
jl
push
sbb
add
mov
movsb
and
pop
out
inc
out
jae
and
sub
cmp
scas
adc
pop
mov
andb
clc
mov
push
and
lods
cmp
call
pop
xor
dec
dec
mov
leave
and
or
adc
lcall
repz
andl
cmp
bound
cmc
mov
filds
xchg
jb
pop
imul
in
sbb
cld
les
add
jle
xchg
or
incl
jmp
test
es
addr16
movsl
jne
mov
out
lret
lret
std
push
ja
pushl
mov
mov
adc
and
incb
mov
sub
int
lahf
dec
mov
mov
dec
dec
pop
jl
push
scas
ljmp
and
stos
lods
mov
jg
aad
incl
or
lret
inc
mov
jl
ret
mov
outsb
ret
push
fistpl
add
xor
cmpsl
pop
xchg
fisttpl
sbb
in
pop
cmp
sahf
xor
je
inc
or
adc
mov
inc
les
jg
pusha
inc
push
jp
das
or
mov
aam
clc
incl
lock
repnz
and
mov
cmpsb
call
fcomp
call
mov
mov
push
sti
or
adc
ss
pop
repnz
std
or
sbb
fldt
pop
ret
rorb
iret
mov
loope
pop
hlt
pushl
mov
das
ss
test
xchg
lret
test
dec
insb
dec
pop
addb
popf
in
or
shlb
xchg
mov
sarl
mov
pop
cltd
test
insl
icebp
sahf
push
jmp
jmp
cmp
mov
and
pop
add
push
movsl
mul
cmp
mov
pop
ljmp
push
fsubs
fwait
clc
sahf
inc
lret
and
je
mov
lahf
and
call
and
enter
std
pop
xlat
sub
test
loope
inc
mov
sub
jb
loope
pushl
mov
cmp
mov
cs
or
xchg
in
cmp
hlt
push
cmpsl
cmpsb
adc
arpl
push
jo
cwtl
and
call
ljmp
add
sub
jmp
dec
fsubp
xchg
add
in
call
fstps
pop
cli
pop
mov
loop
push
mov
insl
or
mov
lcall
dec
push
out
jl
out
xchg
test
jle
stos
mov
sub
or
aad
jg,pt
or
aam
gs
int
jbe
mov
repnz
mov
incl
lret
jp
xchg
and
add
fisttpll
in
adc
inc
outsl
dec
imul
pop
ds
jmp
in
fldcw
mov
and
sub
push
fsts
es
call
mov
cli
pusha
jno
rolb
cmp
mov
push
lock
sub
outsb
stos
test
out
clc
dec
xchg
cli
movsl
mov
push
std
push
es
and
adc
into
into
and
dec
add
lcall
mov
mov
sub
je
leave
cmc
cli
or
out
mov
sub
pop
addr16
iret
roll
dec
std
inc
das
jge
mov
decl
adc
push
pop
mov
cltd
repnz
out
cmpsl
mov
stos
inc
lcall
scas
cli
pop
incl
popf
pop
andl
sahf
mov
insl
aam
push
arpl
addr16
adc
cld
inc
jno
std
cmpsb
dec
mov
fnstsw
nop
je
pop
inc
mov
ja
push
cld
pushl
cs
sbb
jbe
scas
mov
mov
sbb
insb
sar
lret
fistpl
cmp
jg
jo
aad
ret
mov
data16
ss
sub
xorb
xor
fbld
les
out
mov
gs
xor
cltd
mov
repnz
xchg
push
bound
jmp
ljmp
mov
pop
inc
dec
movsb
and
imul
cmp
pushl
or
dec
cmp
ret
inc
mov
das
jg
shlb
dec
roll
call
fisubs
outsl
pop
clc
or
pop
pop
push
fs
repz
gs
mov
mov
inc
mov
loopne
mov
pop
cmp
test
mov
shl
add
inc
or
lcall
push
cmpsb
cmp
and
nop
cmp
bound
enter
iret
jecxz
addl
aas
or
cmp
xchg
mov
push
adc
and
dec
shrl
loopne
lock
jmp
les
inc
mov
adc
call
dec
ret
pop
mov
jbe
jge
cmovno
push
dec
pushf
jg
jnp
std
lods
popf
stos
pop
adc
mov
je
mov
push
jb
sbb
pushl
filds
lock
jne
stos
enter
mov
xchg
jnp
mov
jmp
ret
es
test
and
loopne
shll
xlat
pop
xlat
or
inc
pop
sarb
inc
or
das
decl
xchg
orb
jmp
repnz
mov
add
sbb
jl
add
das
iret
aam
sub
decl
mov
push
jae
fwait
cmp
sub
push
pop
incl
test
out
sub
xchg
adc
xor
ljmp
cmpsl
daa
leave
ret
mov
cmp
mov
sbbl
lret
mov
jg
jmp
sbb
les
stc
mov
jg
inc
outsb
lahf
cli
mov
sub
stc
sub
pushl
cmp
mov
fisttpll
stc
jne
adc
popf
fstpl
jmp
or
insb
je
js
push
ljmp
xor
mov
rolb
jp
stos
mov
sahf
pop
mov
stos
cmp
ljmp
inc
sbbb
jp
pop
or
movsb
dec
add
adc
adc
fists
ficoml
jp
stc
sbb
jbe
mov
push
daa
push
jp
mov
sahf
inc
in
jecxz
mov
test
ror
ja
les
inc
adc
ss
mov
push
mov
lods
lods
cwtl
frstor
cmpsb
sbb
pushf
sbb
sbb
call
je
das
push
lock
repz
movsb
movsl
adc
fldenv
mov
fstl
mov
mov
inc
scas
and
xor
into
insl
lods
jp
jmp
or
daa
sarl
adc
mov
xchg
loope
or
or
and
mov
push
mov
push
dec
jl
pop
insb
jo
jbe
loop
mov
decl
mov
out
bnd
aam
dec
out
inc
add
and
inc
fnsave
xchg
call
stos
mov
iret
inc
addr16
fstpt
scas
pop
mov
mov
mov
or
and
incl
pop
ja
stos
xchg
pop
inc
mov
cmpsl
cmpsb
movsb
ss
mov
movq
or
lcall
xchg
push
ret
sarb
push
daa
in
and
pushl
add
and
xchg
inc
rcrb
sbb
ja
lcall
call
faddl
leave
jne
cmc
popf
stos
push
lods
and
out
call
inc
and
mov
in
icebp
outsb
rcr
or
sub
ds
popa
pop
sahf
mov
lcall
lcall
cmp
dec
ret
shlw
ljmp
push
mov
std
fcoml
jge
cmp
sbb
cmc
xchg
and
call
mov
push
enter
nop
int
ror
xor
ds
cli
incl
pop
stos
cltd
pop
test
fdivl
pusha
enter
repz
mov
xchg
lret
je
hlt
mov
fmull
outsb
aas
pushl
ret
js
test
into
mov
stos
idivl
or
shlb
je
rcrb
addr16
dec
and
shrl
push
in
add
jno
mov
lea
add
lea
incl
mov
jle
in
lods
mov
mov
dec
lods
jg
aad
push
lds
and
loop
cli
setbe
dec
or
popf
cltd
decl
jp
adc
mov
fsubrs
js
pop
sbb
push
add
jg
cmc
inc
jae
mov
in
and
xchg
sbb
test
sub
mov
cmp
dec
xchg
add
imull
jl
push
adc
pop
js
mov
out
cmp
clc
mov
decl
dec
ss
jnp
mov
sahf
sar
lcallw
fsubrl
cmp
pop
push
sub
add
call
cmp
mov
scas
scas
loopne
cmp
loop
jp
cmp
loope
mov
nop
add
pop
mov
sub
imul
fsubrs
jecxz
roll
scas
cli
lcall
jecxz
or
jne
pushf
out
xor
add
aas
cmp
mov
add
cmp
test
out
gs
push
or
jmp
loop
repz
imull
mov
loop
xchg
dec
xchg
xchg
xchg
add
mov
roll
dec
andb
pop
jo
jbe
xchg
fisubrs
fsubr
shr
ficoml
xor
inc
cmp
mov
add
add
inc
sub
ljmp
sti
ret
fldenv
pop
rolb
mov
sub
pop
mov
push
jmp
sub
and
push
fs
mov
repnz
pop
sub
pop
fmul
lret
or
fwait
dec
add
mov
fs
push
xor
sbb
mov
and
mov
add
sti
fnop
adc
fdivs
movsb
inc
int3
lret
mov
aas
mov
clc
int3
dec
aas
lods
push
fs
ret
rorl
bound
and
push
xchg
ret
inc
jg
push
rcrl
or
xorl
fsub
ror
push
pushw
iret
push
pop
fistps
or
call
std
mov
scas
lret
mov
sub
pop
les
ror
scas
cli
pushl
inc
adc
pop
push
xchg
mov
sbb
fs
hlt
call
ret
in
cli
mov
jp
in
mov
ret
lcall
je
fsubrs
push
cmpsb
jns
mov
cmpsl
into
push
jmp
negl
dec
sarb
pop
jo
es
dec
sbb
call
add
lods
mov
out
mov
jl
call
lret
mov
mov
sbb
insl
add
call
dec
outsl
dec
popl
pop
and
cmpsl
sub
lret
cld
sar
cmp
fiaddl
mov
outsb
aam
incl
cli
sahf
scas
xor
cmp
xchg
pop
xor
sti
jae
in
push
pop
xchg
gs
adc
inc
out
dec
sub
jmp
stos
pop
jno
and
jb
jb
sbb
out
mov
xor
mov
ja
stos
inc
std
incl
in
mov
aam
fs
in
aad
ljmp
xor
ret
push
cmpsb
out
fcmove
and
push
jg
test
std
dec
out
sub
repz
mov
push
dec
jbe
jge
stos
mov
test
pushl
fsts
inc
in
push
jg
cmp
mov
and
js
mov
dec
in
incl
and
cmp
cmp
sbb
cmp
fwait
mov
test
xor
jmp
clc
jp
pushl
outsb
mov
jmp
mov
jae
call
dec
pusha
xor
clc
mov
xchg
stos
sbb
ljmp
inc
sub
test
pop
test
pop
stc
pop
jmp
imul
idivb
jg
pushl
es
rclb
xor
or
push
movsb
loop
popa
mov
insl
cmpsb
inc
lock
test
xor
loope
mov
aad
out
cmp
push
push
bound
add
test
mov
mov
cmpb
sub
fdivl
hlt
scas
call
push
scas
inc
mov
popa
mov
int3
cmp
ret
jmp
jle
dec
fadds
sub
mov
lods
jg
adc
pop
fadds
pop
dec
fbstp
cmp
xor
mov
sub
sub
adcl
stos
cmc
sub
stos
ljmp
movsb
cmpsb
inc
scas
in
pushf
js
xchg
pusha
stos
mov
push
outsl
cltd
mov
add
pop
cld
call
pushl
xchg
movsb
enter
fdivp
mov
pop
out
xor
ret
pop
filds
mov
pop
push
inc
lcall
push
push
nop
pop
lret
sbb
js
fs
cwtl
inc
shlb
jmp
push
call
icebp
sbb
pop
pop
mov
adc
arpl
xchg
add
pushl
cld
sti
lock
lahf
pop
and
pop
push
lret
ret
lods
jne
push
adc
ljmp
inc
mov
mov
sbb
clc
dec
cs
sbb
mov
mov
lock
pop
sbb
setge
clc
fs
jmp
add
movsl
test
dec
or
add
mov
sbb
push
mov
repz
incl
adc
mov
shlb
xor
xchg
andb
and
xchg
inc
pop
adc
icebp
ljmp
aam
test
popaw
mov
test
test
ljmp
jo
jo
lahf
push
and
jae
xchg
jae
addr16
testb
jmp
imul
cltd
ja
sub
das
pusha
shrb
call
rcrl
popa
jnp
mov
xchg
inc
push
or
and
jmp
stos
mov
mov
cmp
cs
aam
stc
cmp
adc
xlat
fld
inc
popf
or
dec
sbb
jns
dec
sbb
sbb
std
mov
dec
xlat
sbb
dec
pop
into
jle
and
xlat
outsl
or
fcomip
pop
cwtl
pop
iret
jp
dec
imul
jg
ljmp
jmp
jg
lcall
loopne
std
xlat
inc
adc
fcmovnb
scas
dec
loope
mov
fdivl
mov
adc
cmpsb
inc
call
std
push
fsubl
je
push
das
inc
cmpsb
sub
push
incl
lds
mov
mov
imul
cli
call
mov
hlt
xchg
stos
popa
pop
incl
jge
or
sub
fstl
testb
cmp
mov
add
cld
cmp
xchg
push
pop
ret
mov
inc
and
xor
roll
cmp
call
daa
clc
into
jo
scas
add
push
dec
sbb
mov
sbb
jae
test
outsl
pushl
adc
cmp
jb
out
or
sub
in
inc
sbb
add
in
nop
ljmp
lcall
out
mov
inc
mov
leave
jecxz
xchg
sbb
or
jmp
lods
push
scas
jge
xchg
mov
jne
jo
or
mov
jmp
xchg
jle
cs
sbb
dec
std
sub
dec
sub
xchg
push
push
xor
xor
jmp
pop
adc
inc
inc
push
sbb
rorl
mov
mov
and
lds
dec
jns
push
push
sub
pop
pop
es
data16
mov
lods
jbe
fmuls
push
stos
cld
jmp
sbb
int3
stos
mov
sub
or
cmp
jmp
in
ficompl
pushl
push
jb
mov
mov
cmp
adc
movsl
lret
cltd
mov
call
pop
dec
mov
cmp
add
and
seta
stc
push
repnz
cwtl
imul
pusha
and
call
mov
add
cmp
sub
mov
fiaddl
mov
jl
inc
inc
or
mov
ljmp
outsb
and
loopne
inc
ret
popf
sahf
jle
loopne
nop
fsubs
out
ja
mov
es
jg
test
je
or
adc
cmpsb
stos
push
push
paddd
mov
scas
movsl
mov
sub
mov
push
nopl
ja
addl
xchg
les
jns
pop
repz
mov
or
cld
mov
pop
int
push
xchg
in
pop
dec
sbb
sarl
test
jecxz
loop
addr16
hlt
std
sbb
sbb
add
test
scas
add
sub
ljmp
push
pop
adc
lret
fdivrs
mov
addr16
push
lret
inc
lock
xorb
sbb
xor
icebp
rcll
jp
jmp
pop
notb
das
mov
jb
xor
sbb
add
xor
call
cmp
cmp
aad
mov
fwait
xchg
jecxz
and
sarl
sub
mov
test
jns
int
mov
mov
add
xor
ss
adc
incl
jnp
lods
leave
movsb
sbb
sub
imul
insl
inc
insl
fisubl
lret
pop
popa
jae,pt
out
sti
fnstsw
hlt
addb
adc
in
cwtl
lret
xor
out
xchg
hlt
mov
decl
adc
psraw
adc
add
movsb
mov
scas
js
fwait
xor
cmp
pop
loopne
testb
in
cmpsb
pop
sbb
test
jae
repz
inc
push
mov
bound
outsb
lea
mov
neg
jecxz
orb
xorb
clc
inc
nop
scas
imul
cmp
in
jo
imulb
jmp
mov
std
jbe
test
inc
xor
mov
push
xchg
out
leave
cmpsl
int3
add
xchg
jecxz
add
jmp
pop
int
movsb
push
jns
pop
pop
inc
pop
lea
imul
mov
mov
leave
sbb
or
mov
lret
sbb
jb
imul
xlat
xchg
scas
adc
mov
cmp
fsubl
bnd
arpl
lods
cmpsl
dec
cmpsl
inc
mov
pop
stos
mov
mov
jmp
incl
lds
push
movsb
scas
cs
inc
adc
imul
aas
or
fwait
cmp
lds
lcall
outsb
push
mov
xchg
push
pop
movsb
sti
inc
xlat
loop
enter
cli
or
les
ljmp
ret
es
mov
icebp
jb
pop
xor
or
lcall
jg
cmpsl
sbbl
push
adcb
push
xor
dec
and
cmp
lcall
xor
mov
mov
mov
in
mov
lea
gs
cmp
scas
clc
pushl
sbb
dec
in
pop
pop
dec
aaa
es
cwtl
jg
inc
mov
dec
loop
xor
loope
pop
dec
hlt
shrb
iret
cmpsl
xor
mov
jmp
fwait
pop
scas
jbe
pop
xchg
iret
inc
inc
pop
add
test
insb
jnp
lods
or
dec
imul
out
cmp
pop
mov
inc
gs
sarb
and
inc
mov
adc
movsl
repz
lds
scas
push
loopne
xor
aad
pop
push
pop
aaa
les
mov
lcall
mov
xor
dec
sbb
pushf
movsb
gs
lcall
call
mov
rorb
cmpsb
cmpsl
ljmp
push
inc
rcrb
add
jmp
std
imul
les
ljmp
or
pop
call
push
cmp
sti
sti
lahf
fcomp
loopne
cmp
mov
adc
lret
pop
mov
decl
dec
hlt
fmuls
adc
je
push
out
add
fstp
fwait
imul
lea
leave
adc
lcall
lret
mov
lock
icebp
inc
scas
xor
mov
sbb
push
and
xor
dec
stos
mov
ljmp
or
lcall
dec
stos
cmp
dec
mov
fcmovne
mov
lcall
nop
decl
inc
adc
push
sbb
cmp
movsb
data16
shll
or
jg
cmp
stos
mov
fwait
push
or
jecxz
lods
adc
sarb
pop
sub
decl
jg
outsb
push
or
adc
arpl
pop
pop
lahf
sub
imulb
ds
adc
add
sbb
xchg
xor
in
adc
mov
js
nop
fs
inc
adc
je
mov
ljmp
jmp
test
add
add
dec
pop
clc
insb
popl
xchg
and
cli
inc
sbb
mov
insl
sbb
inc
repz
pop
xchg
mov
xor
call
mov
imul
jo
jle
dec
mull
arpl
lcall
decl
add
dec
xor
dec
jp
scas
add
fisttpll
int3
xchg
mov
arpl
push
mov
cmpsl
pop
add
ljmp
dec
or
out
aaa
add
out
cmp
lods
clc
call
pop
inc
push
push
adc
adcl
lcall
pop
ss
lret
nop
push
push
pop
push
sahf
shll
xchg
rolb
aaa
lea
jg
in
hlt
mov
inc
test
mov
ds
add
xchg
test
sbb
cmp
stos
incl
add
jl
add
add
ja
mov
pusha
xor
push
push
adc
in
mov
sti
mov
lea
jns
xchg
xlat
adc
and
cmp
fwait
iret
je,pt
jp
xlat
stc
das
shl
push
xlat
and
dec
pop
add
aam
mov
mov
mov
cmp
push
xor
xchg
jge
lea
jecxz
jge
and
stos
movl
push
or
mov
lret
loopne
sbb
movsb
sbb
leave
out
dec
adc
inc
mov
call
dec
push
ds
fistpll
push
cmpsb
ja
push
push
mov
xor
cmpsb
push
shll
xor
mov
pop
iret
cs
push
scas
clc
mov
xor
xchg
cmp
mov
push
push
jae
bound
lret
sarl
clc
call
sbb
decl
test
out
sahf
fs
jbe
xorl
out
cltd
xor
jmp
or
jmp
xchg
inc
loope
int3
cli
pop
mov
xchg
dec
xchg
test
sbb
lods
xchg
pushl
xlat
and
bound
or
and
out
fidivrs
fistpll
sti
fcoms
lods
sarl
dec
push
popa
pop
and
incl
outsl
inc
dec
loop
movsb
ror
mov
and
mov
testl
mov
sahf
xor
pusha
xor
and
incb
mov
sbb
jp
lcall
xchg
inc
pop
loope
ss
mov
insl
shlb
push
fidivrs
sub
ret
jg
adc
mov
cmp
mov
pop
lock
cmp
jns
cmp
xchg
je
push
or
push
ja
clc
decl
loopne
mov
cmp
pusha
xchg
add
mov
popf
insl
fildl
pusha
push
cmp
popa
xlat
fs
jle
sbb
repnz
jmp
sbb
push
add
xor
ljmp
push
aas
mov
adc
imulb
dec
or
jmp
push
ficompl
push
adc
mulb
xor
mov
repz
stos
test
iret
adc
js
cmp
xor
test
add
in
int3
sub
sbb
mov
sub
sbb
and
jg
jg
cmc
mov
push
cltd
mov
lods
jmp
aaa
outsl
pop
sbb
mov
lods
mov
decl
das
push
loopne
icebp
mov
sub
hlt
and
push
push
cmpsl
lcall
cld
popf
mov
aad
lcall
adc
sbb
pop
nop
push
repnz
sahf
add
iret
sbb
dec
xor
jns
xor
push
push
test
outsl
mov
sbb
pop
outsl
xchg
adc
mov
push
ror
jns
bound
mov
call
psubusw
pop
popf
mov
and
mov
test
lret
stos
xchg
mov
out
sub
or
inc
sbb
std
push
data16
pushl
mov
dec
xor
and
incb
fidivrs
popf
ljmp
mov
or
jp
daa
and
aas
ret
test
xchg
fwait
and
in
xor
mov
shrb
mov
decl
mov
ss
das
dec
pop
add
adc
sbb
jb
ret
push
jmp
stc
dec
stos
mov
mov
cmp
shrl
cmp
pushl
icebp
pop
pusha
inc
or
mov
hlt
xor
insb
jmp
js
xchg
lret
push
popf
ja
out
clc
jl
mov
iret
cmova
daa
test
ret
pop
lcall
jg
mov
es
push
add
sbb
cld
out
clc
scas
add
scas
rorb
jmp
int3
scas
pop
fisttps
xorb
push
push
loop
js
aaa
jno
mov
xorb
int
iret
loopne
jae
gs
mov
mov
out
push
fsubl
pop
push
pop
mov
push
lahf
insl
xor
icebp
inc
fs
outsl
push
pop
scas
xchg
sarl
rclb
sub
decl
jno
push
xor
aam
cmpsb
rcrl
xchg
incl
mov
cmc
mov
test
cmp
mov
cld
xor
aad
bnd
cltd
mov
es
pop
int3
add
jge
mov
push
cs
ss
push
std
mov
sub
mov
ljmp
rolb
push
add
mov
dec
mov
cld
add
mov
mov
mov
pusha
stc
call
lea
sbb
in
cmpsl
mov
sbb
test
test
test
push
mov
cmp
in
roll
push
xor
dec
in
fs
ljmp
shll
push
pminsw
js
adc
xchg
mov
mov
pop
dec
lcall
jecxz
push
mov
xchg
mov
je
in
add
jno
xor
xchg
aam
push
les
cmp
xchg
int
in
push
sub
stos
push
inc
and
std
data16
jg
in
andb
mov
mov
inc
ljmp
pop
lock
jg
das
dec
push
or
cmp
cli
ja
jns
mov
sbb
dec
aam
aad
movsb
fwait
xor
inc
xchg
test
dec
rorb
test
ds
and
decl
sub
xchg
push
test
xchg
sub
cmp
jle
rolb
jle
mov
adc
mov
into
push
fs
sbb
xchg
push
and
mov
pop
shll
fwait
push
pushf
pop
or
fidivrl
fnstcw
cmp
jle
rorl
xor
out
jg
cmpsb
repnz
lods
cltd
aad
xchg
fidivrl
sbb
pushl
inc
jno
jne
adc
les
andb
test
mul
or
sar
decl
sahf
adc
xchg
add
mov
sbb
xchg
add
or
mov
pop
out
or
shl
imul
mov
add
xor
add
subb
xchg
jae
data16
jg
add
push
push
lcall
leave
sub
in
daa
or
cli
clc
incl
mov
mov
sub
push
hlt
ljmp
cmc
xchg
ds
dec
push
xchg
pop
mov
inc
lods
xor
shrb
test
sbb
iret
decl
imul
mov
push
xchg
jb
pop
xchg
shll
cmp
ds
push
jge
fldlg2
mov
scas
dec
ret
push
clc
stos
fucomi
and
stc
js
and
incl
push
lcall
in
test
jbe
xchg
mov
sub
mov
push
rorl
xchg
insl
bound
jmp
repz
and
sti
pop
or
notb
scas
dec
aaa
scas
cmc
decl
pop
mov
out
ja
or
je
xor
jne
gs
leave
pushf
pushf
lods
hlt
push
and
mov
or
call
dec
inc
mov
fimull
pop
cmp
mov
sub
jbe
pop
movsb
inc
mov
into
add
in
icebp
dec
mov
ljmp
shlb
cltd
and
ret
sar
adc
mov
xchg
add
lcall
repz
jmp
cli
add
jno
cbtw
out
cli
js
and
pushf
push
cmp
jo
cmp
and
mov
ds
cmp
xor
sub
mov
and
add
cmc
ljmp
ret
les
push
cmpsl
lods
push
stc
push
adc
add
cmp
andl
fucomi
fidivrl
cli
decl
or
push
push
xor
add
clc
call
insb
push
cld
or
jecxz
out
inc
out
out
push
sbb
jo
sub
cltd
arpl
xchg
jo
cmpsl
jmp
enter
int
mov
jge
test
mov
inc
jle
xor
pop
sti
mov
lcall
and
ss
mov
add
outsb
or
aas
cmp
stos
loope
cmpsl
jo
aam
fisubrs
shlb
aad
mov
jbe
iret
xor
es
cmp
in
fimull
mov
mov
jb
fstpl
inc
pushl
clc
es
xchg
outsb
cmp
sti
mov
ret
inc
dec
xchg
jle
test
aas
jns
out
stos
push
lcall
popa
addl
push
xchg
xlat
jecxz
cmp
mov
ljmp
cmp
cmp
mov
mov
test
mov
inc
pop
inc
loop
cmp
lds
testl
xchg
aas
inc
jae
adc
sub
scas
cli
dec
jecxz
jo
ljmp
jo
sub
cmpsb
sbb
loopne
jmp
inc
sbb
popa
insb
es
inc
inc
push
inc
fwait
in
adc
fucomip
call
hlt
jmp
mov
sbb
scas
aad
lods
dec
jle
mov
decl
outsb
xchg
push
push
adcl
push
cmc
adc
jle
jl
xor
xor
or
ss
in
jmp
push
rorb
pop
sbb
lock
sub
cs
dec
pushf
mov
gs
std
test
aaa
insb
sub
jle
fisttpll
js
enter
push
movsb
iret
lcall
xor
push
notb
jno
adc
dec
or
nop
aam
pop
sub
jmp
repnz
jb
ja
mov
lcall
sbb
shrb
add
jg
pop
cmp
inc
adc
mov
mov
jg
test
inc
xlat
add
pop
shll
shll
or
sarb
pop
imul
andl
call
jmp
mov
sub
adc
xchg
leave
mov
cmpsl
ds
and
mov
or
ss
sti
scas
std
cmpl
lock
ljmp
mov
test
mov
aad
pop
imul
test
outsb
hlt
les
mov
out
pop
push
jecxz
push
mov
jle
sbb
pop
xchg
mov
ret
out
dec
pop
xor
rorl
shl
rorl
orl
adc
jno
cmpsb
inc
daa
jo
jbe
cmp
dec
dec
aad
jo
cmp
mov
cmp
enter
aad
incl
push
and
popf
sbb
push
hlt
mov
push
xchg
out
cld
shr
or
lcall
es
sub
push
mov
push
ror
aas
pop
cmpsb
jae
fcmovu
mov
cmp
icebp
inc
xchg
bound
sbb
fisubrl
mov
inc
test
fcmovu
xchg
test
test
cmp
and
or
sub
pushl
les
pop
sbb
push
or
jmp
sarl
fistl
decl
js
jae
test
notb
scas
jbe
fwait
cmpb
sub
push
jle
add
in
std
jge
xor
shrl
xchg
lock
lret
sbb
ja
aad
pushl
jnp
sahf
mov
lahf
cmp
pop
jle
or
es
sbbl
out
mov
push
decl
lds
and
lods
sbb
outsb
adc
insl
andb
push
enter
jmp
jg
iret
movsb
sbb
adc
cltd
inc
insb
cwtl
fsubs
xchg
jge
cld
pop
and
outsl
jle
fstl
scas
clc
jg
fsubl
imul
or
dec
sahf
add
xchg
xor
aaa
mov
cs
bound
fmul
cmp
mov
pop
xchg
sar
lcall
xor
or
dec
push
sti
cmp
mov
adc
sub
xor
pop
cmc
jg
add
jp
or
es
mov
mull
pop
sbb
mov
int
fistl
mov
jg
aaa
pop
lret
or
lds
fsts
outsl
mov
sbb
sub
mov
cltd
lods
mov
stos
mov
mov
pop
cmp
ret
xchg
add
popf
in
out
mov
dec
in
add
sub
cli
jnp
push
inc
push
mov
stos
mov
inc
loop
subl
push
call
jle
xchg
ret
call
rol
mov
and
xchg
rol
int
data16
pop
and
addr16
andb
insb
in
cs
sbb
dec
outsl
clc
mov
pop
cmp
push
adc
inc
scas
mov
clc
jmp
clc
or
loope
jl
into
fimuls
push
lock
incl
sbb
imul
mov
mov
lcall
mov
dec
push
test
cmpsb
xchg
fisttps
ljmp
loop
adc
xchg
into
sahf
add
rolb
push
arpl
cld
sub
out
gs
mov
pop
xor
fnstsw
fwait
mov
push
push
and
outsl
clc
in
or
cmpl
nop
jb
jle
mov
dec
mov
jmp
add
rclb
xor
movb
mov
jmp
mov
adc
dec
xchg
aas
ficoml
inc
inc
jl
mov
cmp
outsb
push
loope
inc
into
dec
sbb
xchg
lcall
inc
lret
fcmovbe
lods
leave
xchg
adc
or
cs
cmp
or
or
decl
pop
lods
sbbb
ficoms
out
call
mov
jbe
les
movsl
lcall
decl
cmp
push
and
and
insl
mov
mov
jb
leave
sbbl
dec
test
xchg
ja
add
ljmp
pushl
jp
call
sbb
xor
mov
lods
aam
pop
inc
shrl
jmp
push
lock
push
or
jecxz
ss
pop
or
nop
push
mov
gs
mov
mov
jle
in
std
pushl
loopne
pop
mov
sub
pop
dec
dec
es
or
fidivl
lods
loopne
inc
jne
or
call
int3
in
cmc
mov
mov
test
jae
pop
loope
mov
loope
add
add
scas
cmp
xor
or
inc
lods
filds
add
into
or
xchg
cltd
cmpl
filds
mov
inc
mov
shl
in
mov
inc
and
adc
pushl
mov
xchg
outsb
add
dec
mov
adc
sbb
sti
pop
sbb
js
iret
aam
incl
cmpsl
ljmp
lret
sti
and
out
jno
lret
fs
mov
decl
or
mov
test
mov
inc
enter
xor
mov
movsl
dec
sbb
rcr
pushf
cmp
and
add
popf
mov
xchg
fcomip
mov
insb
xchg
xchg
adc
outsb
mov
inc
inc
sub
mov
fcomps
inc
sbb
and
out
cli
std
push
daa
adc
mov
lock
cmpsl
dec
pop
inc
sbb
mov
adc
iret
stc
or
dec
or
push
leave
clc
lcall
mov
inc
enter
sti
mov
or
aas
mov
ja
sub
fimull
movsl
jecxz
inc
add
mov
dec
popf
into
pop
dec
clc
filds
lods
fnstenv
bswap
enter
subl
mov
addb
fisttps
ds
pop
push
push
xchg
gs
aas
add
sbb
bound
in
adc
out
push
pushf
hlt
fbld
cmp
add
sbb
sub
push
mov
icebp
divl
lcall
jno
ss
push
iret
inc
and
subb
pop
ss
es
xor
lcall
ljmp
in
cmpsl
test
addr16
daa
jbe
jo
mov
outsl
dec
js
test
jnp
neg
and
decl
out
or
repz
insl
test
adc
cmp
cld
popf
or
jnp
sub
ljmp
cmp
push
pop
jns
xor
jl
div
imul
dec
jne
int3
fs
les
fiaddl
and
push
enter
fistpl
nop
or
fdivrl
rolb
cmp
cmpsb
rol
imul
addb
xchg
mov
mov
scas
in
leave
pop
inc
mov
cld
ja
shll
sbb
or
sbb
and
icebp
mov
fstsw
repz
mov
es
sub
pop
jbe
rorb
mov
jg
push
or
push
pop
sar
push
inc
dec
add
test
jp
incl
xlat
pusha
lods
sub
xchg
adc
pop
pop
jle
xchg
inc
fldcw
lcall
sub
shll
test
test
jb
scas
or
mov
movsb
lock
push
adc
pushf
sbb
inc
jmp
add
pusha
cmpsl
ss
jecxz
icebp
push
sti
inc
nop
into
adc
imul
mov
stc
fwait
inc
aaa
in
push
adc
fdiv
sub
sarl
mov
mov
sbb
decl
repz
insb
sar
enter
out
push
xchg
xchg
and
push
decl
xor
lods
cmp
jl
in
pop
xchg
sub
lahf
mov
push
andb
mov
fbld
enter
es
inc
arpl
jmp
jg
jbe
insb
sub
nop
cli
mov
inc
ret
mov
xor
or
mov
cmpsb
call
sub
into
loope
fcomip
mov
je
sbb
leave
push
cmpsl
inc
adc
mov
sbb
hlt
ret
test
sub
in
cmp
ljmp
inc
fdivr
xor
jecxz
mov
cmp
and
lcall
out
subb
mov
pusha
or
inc
push
fcoms
add
jmp
jmp
stc
ret
mov
pminub
fcoml
mov
arpl
addb
ljmp
in
aaa
lock
sub
cmp
xlat
lods
dec
fisubrs
and
idiv
call
arpl
xorl
cmp
cmp
loop
xchg
lds
decl
push
push
stos
popf
mov
subb
fcomps
sub
pushl
inc
sbb
bound
repnz
adc
lods
divl
in
cmc
mov
and
push
aas
iret
or
add
out
jmp
inc
nop
andl
cmp
dec
fwait
pop
test
dec
push
lret
push
push
negb
out
pop
sahf
subl
xor
mov
inc
jmp
and
mov
fadds
neg
shlb
lds
jbe
adc
bound
testb
out
mov
imul
jne
hlt
out
cli
and
dec
xor
data16
clc
popf
cmpsb
call
cmpsl
mov
push
fistpll
ljmp
cmp
adc
loop
jg
pushl
xchg
aad
loop
fmulp
rorl
bound
sahf
popa
cmp
mov
cmp
jmp
das
es
call
push
or
jecxz
bound
mov
and
and
mov
sahf
test
mov
std
pushl
mov
mov
adc
fcos
push
idivl
jno
dec
das
inc
sbb
lcall
outsl
psllq
pusha
xlat
aas
arpl
jne
dec
mov
or
hlt
movsl
xchg
xchg
pop
and
mov
pushl
adc
and
ret
je
dec
inc
in
push
lock
dec
adc
sbb
push
test
aam
dec
neg
mov
ja
movsl
rcrl
mov
mov
jns
fidivrl
cld
mov
hlt
mov
rclb
jmp
repnz
sbb
mov
incl
ret
out
test
pop
repnz
sbbb
sbbb
pop
cmp
in
mov
push
pop
push
add
mov
mov
imul
push
insl
adc
xor
dec
int3
pop
in
sub
ljmp
dec
int
out
cltd
loop
gs
adc
ds
aas
xchg
cld
sub
xchg
fcomip
sti
mov
movsb
popf
das
pop
stos
xchg
movsb
mov
inc
lcall
mov
xor
in
mov
push
mov
push
jl
std
in
mov
decl
sub
lods
mov
mov
sub
adc
push
sub
jb
aas
stos
mov
insb
sbb
ja
pushl
loop
out
adc
gs
adc
mov
ret
test
and
decl
pop
jnp
push
jnp
xor
imulb
xlat
mov
jg
pop
int
mov
jb
lret
inc
mov
lea
pop
test
cmp
decl
cwtl
mov
xchg
cld
int3
cmc
mov
add
jg
push
fmull
mov
xchg
adc
test
je
insb
and
sti
mov
inc
ljmp
ja
sub
test
adc
imul
inc
das
add
fsubrl
sbbb
dec
add
inc
movsl
int
mov
dec
aaa
std
jnp
dec
mov
mov
add
cmp
cmp
jb
jo
imul
sub
sub
mov
idivl
sub
lret
jg
cli
cmc
inc
xchg
jb
out
push
or
cmp
fidivl
sti
mov
and
and
mov
loope
or
xchg
adc
or
insl
dec
push
call
mov
int
icebp
aad
rcl
cmpsb
call
dec
cld
icebp
mov
loop
pushf
and
and
addb
cli
test
not
cmpsl
wbinvd
cld
out
xchg
incl
or
stos
test
lock
shll
cmp
and
pop
pushl
mov
lds
fmul
int
mov
scas
cmp
or
jmp
imul
hlt
sub
lcall
decl
jp
outsl
scas
in
int3
outsb
ds
shlb
xor
enter
jge
ljmp
and
or
add
jnp
pop
inc
push
inc
pop
js
imul
test
pushl
ret
add
xlat
jecxz
shlb
es
sub
aas
pusha
shlb
and
mov
stc
outsl
popa
jb
inc
test
inc
dec
dec
mov
imul
pop
shlb
call
hlt
ficomps
jg
mov
outsb
dec
imul
jo
pop
lcall
jg
jbe
lret
mov
mov
ret
ds
lock
frstor
mov
stc
test
movsb
orb
pop
into
mov
sbb
mov
incl
inc
mov
int
imul
cmp
xor
push
cmp
xchg
lcall
mov
mov
sub
cmp
dec
push
sbb
pop
rolb
pop
test
daa
enter
fldl
lock
inc
divps
stos
push
adc
lock
mov
cld
jmp
or
jbe
and
add
add
das
mov
js
sti
mov
lcall
pushl
cwtl
mov
cltd
negb
sbb
push
mov
into
jo
fs
mov
dec
pop
pop
sbb
xchg
push
test
cmp
out
repnz
adc
sbb
xchg
dec
stos
add
cmp
insl
jbe
lcall
nop
out
mov
loope
fiaddl
push
shr
or
decl
divb
xchg
cs
cmp
sahf
mov
testl
outsl
sbb
subb
pushl
lds
jecxz
aad
mov
and
sbb
inc
repz
test
sub
call
cmp
lock
mov
sbb
enter
inc
out
outsl
je
xchg
fld
call
mov
aad
cmp
insb
dec
sbb
push
dec
loop
call
push
or
jae
rolb
cmpsb
xchg
stos
mov
jb,pn
pop
pop
sbb
mov
icebp
cwtl
mov
mov
test
push
mov
push
jmp
pushl
inc
setle
repz
lcall
xchg
ss
mov
maxps
push
add
in
fdivrp
decl
test
rorl
jo
mov
mov
je
mov
jne
pop
sub
push
hlt
aaa
cmpl
ja
sub
in
test
aam
push
jbe
xor
lea
jmp
icebp
xchg
testl
incl
cld
nop
shlb
sbb
mov
cld
adc
sub
sarb
fsubs
pop
push
mov
in
movsl
jmp
cmp
pop
push
jns
or
xchg
mov
pop
rorb
push
jmp
dec
outsb
add
or
jb
outsb
loop
xchg
sbb
pop
ds
dec
cmp
pop
test
sub
incl
jecxz
adc
lods
xlat
push
shr
rcrl
jecxz
xchg
dec
mov
xchg
jbe
dec
outsl
mov
xor
dec
shlb
pop
jmp
dec
clc
and
or
inc
jge
movsl
xlat
lret
rcr
dec
sbb
and
jg
sti
sub
lahf
cmp
and
pop
repz
int3
daa
lds
das
cli
jg
rcr
xor
sti
pop
lret
mov
iret
jecxz
movsb
xchg
mov
call
popa
shrb
xchg
lods
xchg
inc
mov
pushf
je
das
or
and
adc
cmp
jge
int
or
ljmp
loop
dec
and
mov
nop
cmc
scas
sldt
repnz
xor
shlb
out
call
cmpsb
and
aaa
or
push
mov
mov
mov
daa
cmp
das
adc
lods
jae
xor
cld
mov
rcrb
adc
or
incl
loopne
dec
shll
dec
and
sarb
lea
xchg
pusha
and
mov
jg
shll
repz
xor
enter
pop
into
lret
xchg
lcall
insb
std
sbb
jl
jmp
addr16
enter
outsl
cli
ljmp
cli
stos
push
popf
mov
insl
adc
or
and
mov
xchg
adc
mov
popf
fbstp
lret
jecxz
sbb
jmp
xchg
pop
adcb
mov
inc
aad
mov
std
das
mov
cmpsl
push
dec
xor
jmp
inc
push
push
aad
sub
ret
lods
mov
das
mov
out
cwtl
stc
lock
icebp
seta
pop
inc
add
sbb
in
mov
mov
xor
pop
jle
mov
add
add
xor
mov
loope
sar
sbb
jno
jg
inc
lea
ss
cmpb
sar
hlt
data16
in
pop
mov
inc
filds
sbb
and
mov
fbld
shrb
lods
xor
aaa
je
pop
inc
lret
dec
subl
pushl
outsl
fisttps
insb
imul
mov
mov
pop
dec
fiadds
or
decl
or
daa
cmpl
add
xor
cmpsl
cmp
fmul
or
pushl
xchg
test
lret
fwait
xchg
pusha
sbb
and
cmpl
leave
jnp
cwtl
or
outsl
dec
add
cmpsl
shlb
out
icebp
mov
jae
lock
and
sbb
das
jg
pop
cmc
addr16
mov
sbb
imul
sbb
xchg
ret
dec
dec
pushf
fld
add
scas
fdivr
xchg
cmpsb
loope
xchg
call
int3
ljmp
repz
sub
xor
fmul
fsubl
jb
das
adc
call
lods
sbb
sub
inc
int
pusha
lcall
nop
adc
outsb
and
and
out
fadds
dec
inc
je
mov
pop
push
mov
dec
cli
enter
fs
test
push
sbb
adc
add
or
rcrl
fistl
cltd
bound
aad
clc
incl
dec
push
lods
fists
popa
scas
fmuls
iret
xor
enter
iret
in
out
repnz
dec
ret
sahf
mov
jg
pushl
cmc
out
push
inc
adc
movsb
int3
je
add
mov
inc
add
mov
jmp
jbe
and
sub
xlat
mov
mov
mov
pop
push
lcall
pop
mov
mov
add
jb
imul
xlat
xchg
stos
inc
or
mov
fincstp
dec
push
xor
ja
jae
jl
dec
cmpl
dec
ret
imul
mov
dec
jno
sahf
cmp
jns
xchg
add
add
lcall
lods
sub
push
cmc
mov
hlt
sbb
push
outsl
jle
push
mov
ja
adc
mov
push
ja
sbb
lds
in
or
sbb
hlt
lcall
out
cwtl
lock
cli
add
mov
nop
out
push
cs
cmp
pop
jecxz
ljmp
outsb
jb
movsb
mov
pop
mov
push
jge
mov
jb
in
cli
roll
mov
mov
add
mov
loopne
pop
cmpsl
pop
xor
subl
jg
sub
xchg
ret
cmp
cwtl
sub
pop
pop
nop
push
aam
enter
mov
mov
incl
push
popf
fdivrl
inc
not
xchg
stos
cmp
cmp
or
add
pop
push
xchg
pop
push
into
sbb
jmp
xchg
js
mov
jno
das
loope
pop
sbb
dec
push
std
adc
cmpsb
push
jne
xor
decl
sarl
mov
insl
mov
inc
pushf
mov
inc
std
sub
gs
incl
add
sahf
fiadds
xchg
repz
push
jp
cmpb
rolb
out
outsl
push
out
pop
mov
int3
call
imul
rorb
ds
dec
in
mov
stos
and
int3
adc
loop
mov
fisubrl
aas
sbb
idiv
pushl
xchg
shr
mov
xor
add
shr
xor
fwait
mov
ss
push
lret
xor
testb
jbe
push
xchg
xchg
loop
xchg
jle
dec
jle
cmp
pop
adc
push
faddl
cmp
add
mov
jle
jmp
cmp
xchg
mov
outsb
cwtl
fbld
jp
int3
sar
dec
xchg
or
cmp
in
xor
pop
scas
cmc
dec
pop
out
test
push
ja
ret
loope
stos
cmp
decl
jne
push
cli
xchg
pop
push
xchg
or
pop
addb
lcall
jmp
cwtl
into
mov
mov
sub
bound
push
xchg
add
sub
push
int3
clc
jl
cmp
jo
test
mov
adc
movsb
pop
pop
push
adc
xchg
cmp
jecxz
push
add
pushl
outsb
js
or
pop
push
stos
mov
ret
aad
loop
out
insb
jb
inc
dec
stos
mov
inc
test
sbb
sarl
pop
push
jo
mov
pop
mov
das
sub
sbb
cld
add
mov
pushf
push
lret
aas
decl
jb
cmp
sbb
or
dec
sub
out
popf
sbb
decl
js
mov
mov
inc
push
int3
mov
dec
xchg
imul
ljmp
pop
pop
pop
pop
adc
cmp
insb
push
jecxz
cmp
repnz
mov
stos
in
fisubl
ret
xor
or
inc
mov
ljmp
pushl
mov
jmp
xchg
js
pushf
jae
xchg
fdivl
enter
pop
or
pushl
pop
push
das
idivb
mov
push
sti
mov
outsl
mov
test
subb
pushl
jecxz
pop
add
mov
jbe
and
inc
fiaddl
adc
fdivs
aaa
jl
rol
push
mov
icebp
push
or
adc
inc
rorl
test
mov
cmpsl
and
push
ja
arpl
lcall
subl
cmp
push
mov
call
inc
mul
sub
insb
cmpsb
fiaddl
lods
jmp
rclb
imul
or
jns
lea
mov
xchg
cld
xchg
xchg
mov
pusha
inc
or
push
in
or
lods
dec
mov
add
mov
dec
notl
mov
mov
test
sub
nop
cmp
stos
add
xchg
ret
push
lock
es
stos
ret
adc
movsb
adc
cli
idivb
lods
jle
in
cmc
adc
aas
lea
test
call
push
cmpsb
dec
sahf
test
lock
call
pop
js
sub
pop
mov
fisttps
mov
sbb
xor
fucomp
xchg
pusha
xchg
mov
mov
decl
subl
pop
out
sub
pushf
loope
adc
in
daa
lea
call
push
pop
push
push
out
xchg
inc
je
mov
cmp
add
cmpsl
pop
mov
sti
dec
fdivr
incl
push
jp
add
pusha
rolb
jae
ljmp
jmp
jecxz
xor
ljmp
add
mov
les
dec
lret
sub
incl
mov
mov
xchg
nopl
cld
pushf
push
test
stos
pop
into
rorl
call
lret
clc
repz
inc
sbb
lcall
inc
mulb
ret
scas
mov
les
lcall
push
sbb
out
sahf
dec
add
or
dec
jge
cmp
test
faddl
into
xor
dec
mov
cmp
mov
ds
hlt
out
inc
or
pushl
add
ds
ljmp
mov
push
xchg
cltd
xlat
fmull
mov
xor
mov
clc
cs
add
add
scas
test
jp
xchg
mov
mov
pop
into
dec
pop
sub
pop
xor
shrl
xchg
mov
jg
inc
jmp
cwtl
xor
inc
jae
lods
add
inc
aas
and
push
jb
sub
ja
mov
mov
cmpsb
push
decl
movsl
in
int
sub
xchg
push
insl
aam
stc
jnp
mov
les
add
push
ja
mov
fnstsw
data16
jae
push
aas
mov
fsub
bound
adc
mov
jmp
call
pop
inc
mov
cld
mov
dec
mov
sub
insl
loopne
push
mov
push
jne
subl
decl
nop
jae
sbb
dec
clc
or
test
faddl
pop
bound
xchg
jg
stc
mov
fidivs
rcr
fisttpll
nop
xlat
lcall
add
cmp
add
lods
push
stc
jecxz
or
sub
xchg
push
hlt
fdivrl
dec
loopne
add
call
lds
xchg
dec
adc
enter
push
mov
xor
inc
clc
fcmovnb
sbb
push
cli
mov
cmpsb
mov
adc
decl
and
je
int3
jp
out
jmp
mov
xor
bound
cli
rcrb
int3
xor
sar
pushl
xchg
scas
loopne
and
sbb
cmp
in
movsl
jae
push
inc
xor
repnz
decl
adcl
lds
sbb
and
jae
fldl
and
and
jmp
aas
in
inc
xchg
jge
push
cmp
mov
sbb
add
sub
iret
and
fsubs
mov
movsb
push
mov
pop
xchg
pop
ljmp
push
xchg
jg
pop
push
fstpl
addr16
aad
push
cmp
xchg
sub
std
jmp
out
inc
pop
or
jle
ss
add
inc
jmp
mov
idiv
inc
sbb
cmp
mov
jmp
add
cmp
inc
cmp
int3
fcmovb
or
decl
jp
mov
xchg
sub
and
data16
cli
mov
not
lods
jb
cmp
sub
aaa
cld
out
shlb
sbb
sub
imul
pop
mov
sti
mov
into
pop
lock
pop
in
sbb
adc
mov
addr16
cmc
mov
decl
in
xchg
call
xchg
jle
xchg
sub
mov
jg
xchg
andb
xor
xchg
cmp
adc
jge
xor
sti
pushf
stos
hlt
jge
decb
je
pop
mov
mov
adc
aaa
orl
jnp
cmpsl
xchg
aaa
pop
clc
jge
jnp
or
cwtl
xchg
or
gs
jo
cmp
ljmp
out
lock
out
icebp
or
movsl
mov
mov
xchg
xchg
or
or
jg
test
leave
fiaddl
imul
test
xchg
out
clc
jmp
or
dec
lret
std
int
push
pushf
jmp
add
repnz
cmp
imull
dec
movsl
push
add
jbe
cli
cld
and
xchg
sub
mov
or
mov
xor
inc
enter
arpl
sub
mov
ds
out
data16
sahf
mov
inc
inc
inc
mov
sub
ss
mov
loop
bound
in
push
mov
addr16
and
push
pop
xor
ljmp
outsl
mov
cmp
xor
sarl
shlb
cli
dec
push
loopne
iret
loopne
pushl
loopne
data16
mov
mov
add
loopne
cs
test
adc
call
push
pop
mov
insb
pop
xchg
lahf
addb
mov
cmp
subl
pop
shl
fstpl
mov
inc
or
pop
loopne
decl
mov
mov
add
xlat
push
xchg
jns
shrb
call
scas
pop
sub
sub
xor
inc
and
xor
push
out
add
call
hlt
outsb
push
xchg
mov
sub
push
clc
jbe
adc
nop
cli
lcall
inc
or
cmc
dec
je
cmpsl
imul
mov
ret
pushl
pop
dec
enter
inc
mov
lahf
shl
dec
inc
cld
in
push
and
mov
out
js
mov
aad
jmp
cwtl
push
and
and
lret
clc
in
stos
inc
mov
aam
add
xchg
sbb
fsubl
sub
lcall
fcoms
mov
fmul
je
or
mov
sub
or
xchg
lcall
imul
clc
inc
dec
aaa
pop
sbb
push
fstl
jge
mov
ljmp
mov
mov
mov
js
mov
out
mov
loopne
fsubl
subb
rcrl
mov
or
dec
mov
mov
cmp
jecxz
clc
decl
mov
cmp
mov
outsb
scas
and
adc
je
bound
je
pushl
inc
push
ss
pop
pop
fldenv
xchg
pusha
pop
and
dec
xchg
lds
jmp
bound
dec
sbb
test
jb
xchg
fisubrl
call
or
sub
mov
in
call
outsl
cli
dec
dec
nopl
push
imul
pop
mov
jne
cwtl
sub
mov
push
aaa
jmp
jecxz
cmp
xchg
stc
mov
rorl
xor
cld
dec
repz
sahf
test
mov
jb
jl
insl
mov
and
daa
das
cmp
xchg
movsl
fdivs
call
lods
pop
pop
and
cltd
or
ret
sbb
daa
adc
aad
jp
xchg
jecxz
and
jg
push
jnp
popf
fdivrs
add
mov
in
xchg
incl
add
adc
in
movsb
lcall
stos
fdiv
lcall
leave
add
sarl
jno
dec
xrelease
fcomip
mov
test
fnstcw
xchg
scas
arpl
jnp
push
incl
movsl
pop
sbb
xchg
add
addb
ds
enter
test
decl
push
push
mov
mov
das
jl
inc
movsb
jg
out
jns
andl
or
add
js
cwtl
lods
repz
ret
lds
cmpsl
leave
cld
jnp
or
jmp
js
sub
mov
push
mov
in
xor
fcoms
jg
aam
nop
or
testl
sahf
and
sub
or
sub
fcoms
jmp
in
mull
mov
jmp
addr16
adc
mov
test
ljmp
lock
lea
cmp
into
cmp
push
bound
in
mov
or
je
add
call
sti
pushf
cmp
scas
dec
rcr
into
sar
or
call
in
hlt
movsl
dec
add
orb
adc
xor
nop
popf
mov
cld
hlt
sub
decl
xor
hlt
jmp
and
mov
fisttpll
cmp
inc
jmp
mov
in
pushf
or
sbb
adc
sarb
add
cld
fcomip
jmp
push
in
outsb
cli
lds
and
push
in
xchg
mov
mov
sbb
hlt
ja
sarb
sub
in
in
inc
and
call
push
das
insl
jno
cmp
mov
add
lret
push
mov
call
dec
addr16
mov
sti
loopne
insb
adc
and
adc
jle
jns
sahf
lcall
dec
mov
cmc
push
ficomps
jbe
and
or
dec
cs
dec
fcoms
ljmp
out
movsl
mov
mov
lcall
cli
inc
sub
sbb
cmpsl
inc
mov
lcall
sbb
cmc
pop
inc
test
subl
pop
push
inc
push
or
push
pushl
jl
out
in
jbe
cwtl
dec
mov
jg
pushl
pop
and
dec
clc
das
and
ja
mov
fstps
call
cmpsb
push
push
jmp
push
sbb
dec
push
sub
out
and
xchg
pusha
mov
fcomip
jp
add
mov
sbb
clc
cli
mov
repz
push
mov
sti
add
xor
cmp
sub
xor
inc
mov
into
mov
or
or
dec
mov
stos
rorb
or
inc
push
nop
sahf
loopne
add
xchg
loopne
and
pushl
xchg
lret
shlb
lods
out
pop
mov
inc
enter
sarb
loopne
sub
stc
push
imul
inc
push
int3
lock
mov
mov
dec
jbe
inc
nop
aad
ret
lcall
push
jb
sub
lahf
popa
sti
fstl
jp
popa
and
clc
or
icebp
rol
push
add
test
inc
clc
jg
decl
add
insl
nop
mov
in
mov
inc
fwait
lock
lret
jae
outsl
pop
mov
mov
iret
ss
push
lock
push
mov
xor
xlat
push
subb
test
lcall
fdivs
inc
lcall
mov
dec
mov
mov
xchg
imul
add
sub
scas
cmp
mov
push
xor
xchg
das
inc
dec
jp
push
push
decl
orb
mov
push
aad
jae
dec
xor
and
test
jns
jecxz
xchg
jne
decl
inc
and
test
adc
add
mov
addl
into
fwait
ds
cs
incl
mov
xor
jb
xchg
imul
mov
xchg
insl
mov
pusha
arpl
pxor
lcall
push
jg
sbb
bound
ja
cmc
mov
movlps
push
roll
lods
fnsave
mov
pushf
pop
inc
sti
sub
sub
lcall
or
adc
rorb
les
and
loopne
scas
addr16
jl
lock
push
and
xlat
lea
cmpsl
pop
xor
fstps
fidivs
lock
adc
mov
lcall
lret
mov
ja
mov
inc
in
xchg
mov
xor
into
lods
dec
inc
mov
sbb
mov
mov
sub
popa
repnz
icebp
or
mov
jp
out
ljmp
hlt
jge
cmp
cmp
dec
add
stos
mov
js
out
lret
sub
incl
add
inc
fildl
shrl
ret
jmp
jo
std
jo
outsb
aaa
clc
xchg
sbb
push
sub
pop
outsb
cmp
mov
leave
pop
lds
push
xor
mov
mov
xlat
stos
xor
pop
dec
jg
mov
add
adc
sahf
cmp
lret
cmp
fisttpl
mov
add
call
push
push
rcrl
or
dec
jmp
pop
adcl
push
xchg
ja
stos
mov
pop
pushl
push
xlat
jp
pushf
mov
push
dec
je
mov
cmp
call
repz
into
adc
sub
test
cs
push
add
jmp
push
jnp
sub
mov
insl
push
push
jge
xor
mov
test
rcl
stc
mov
xadd
cmc
jnp
xchg
pushl
dec
insl
aad
subl
dec
cmp
dec
int3
inc
lret
mov
mov
ljmp
mov
repz
fucomi
jle
pop
cmp
ret
in
xor
outsl
fcmovu
pop
cwtl
int
inc
adc
fwait
imul
into
or
dec
sub
in
imul
mov
pushl
js
cmpsb
sub
cmpsb
dec
lea
pop
sbb
push
test
push
enter
jecxz
cld
jnp
xlat
aam
cmp
jecxz
and
test
mov
jae
mov
loop
inc
in
ljmp
cwtl
mov
repnz
pop
sub
mov
lcall
jecxz
aam
or
lahf
mov
inc
in
dec
mov
mov
in
popa
jl
push
jmp
data16
dec
inc
rorb
jecxz
sbb
or
sub
sbb
incl
es
jmp
mov
mov
jg
or
mov
mov
xlat
in
and
sti
addr16
jo
call
cmpsb
lock
inc
cmp
in
dec
clc
jns
cmp
test
mov
js
cmp
push
and
cmp
outsb
test
cld
jp
stos
mov
inc
addl
ja
loopne
sahf
push
cmp
jge
incl
test
int3
pop
daa
jne
xor
sarl
loop
xor
mov
cmp
lret
dec
lcall
adc
imulb
sub
or
cmpl
in
xor
mov
cli
jg
call
lret
or
int3
xchg
jbe
dec
faddp
aaa
add
pusha
ret
fcomip
clc
xchg
xchg
push
sbb
cmpsl
xor
outsb
and
add
sahf
sahf
vcvtpd2ps
jl
mov
jge
xchg
dec
fdiv
inc
nop
push
lock
mov
ja
mov
out
mov
xchg
das
adc
or
in
lcall
lods
sbb
lcall
mov
mov
scas
test
dec
jmp
sbb
adc
decl
repnz
stc
sub
aad
fstps
data16
dec
jno
mov
in
sbb
xorl
loope
loop
mov
imul
outsb
ljmp
jbe
addl
pop
cmc
jmp
mov
ret
filds
rol
sub
push
out
dec
int
rcrb
mov
mov
jp
sar
mul
jle
je
pop
out
mov
and
jl
xor
sbb
jno
adc
lret
xchg
mov
or
addb
aaa
jg
lcall
push
ficomps
jo
push
cmp
cmp
ds
arpl
jns
ljmp
clc
or
out
cmc
mulps
rcrl
or
jg
mov
xchg
imul
jl
insl
test
in
and
clc
fwait
cli
jl
add
dec
je
mov
sbb
mulb
add
mov
je
xor
sbb
and
sbbl
jmp
dec
into
sbb
js
fdivrs
xor
pop
rcr
add
aas
push
imulb
filds
les
or
leave
push
pop
jmp
dec
aas
ret
fmul
sbb
jp
mov
bound
push
ja
sub
adc
push
jmp
inc
fucomip
cmpsl
mov
sub
jmp
mov
call
mov
aas
sub
dec
mov
cmpsb
mov
leave
and
lcall
enter
enter
ss
sar
fcomip
loope
and
pop
and
or
insb
pop
das
pushf
jbe
mov
xor
pop
icebp
decl
mov
mov
dec
mov
jno
fsubp
testl
jb
movsb
cmp
inc
mov
xchg
add
push
inc
movsb
loop
shll
jp
dec
aaa
inc
cli
lcall
ror
or
and
mov
mov
mov
sbb
mov
mov
ds
push
popa
enter
cld
ljmp
adc
jo
xor
jecxz
out
mov
aad
jecxz
mov
mov
mov
xor
stos
rcl
stc
sbb
decl
mov
mov
stc
stos
pop
xor
cld
loop
dec
sub
cmp
sub
call
xor
test
push
outsl
mov
std
pushl
push
and
adc
mov
xchg
out
jmp
push
scas
call
mulb
or
or
sub
cltd
out
clc
mov
or
pop
add
mov
sub
mov
mov
mov
or
sbb
mov
out
sub
in
ljmp
outsl
jns
ds
jle
dec
dec
stos
xor
xchg
dec
cvtps2pi
pop
loopne
jg
incl
test
test
push
sarl
xchg
dec
outsl
rorl
pop
push
mov
in
mov
ficomps
mov
pop
xor
test
jae
jbe
sar
pushl
or
xchg
pop
aaa
adc
shll
stos
sarb
pop
jle
cmp
fsubrs
cmp
decl
ds
fldl
decb
test
pusha
sbb
ret
add
les
lods
aaa
push
or
jl
lods
mul
idivb
decl
or
out
xor
mov
imulb
shl
and
dec
into
lea
decl
jg
push
inc
dec
lods
outsl
pop
stos
cmp
leave
outsb
pushl
mov
sbb
jmp
int
sbb
insl
sbb
cwtl
cs
add
mov
and
pushl
ja
arpl
mov
rcl
ss
scas
cld
mov
cli
xlat
ljmp
neg
jne
push
test
or
dec
in
lds
icebp
lods
sub
push
insb
jge
lret
mov
out
jmp
xor
pop
sti
push
mov
xchg
jecxz
ds
leave
inc
sub
repnz
lcall
aam
in
sarl
push
mov
pop
sti
xchg
push
fldcw
xlat
mov
mov
jno
xchg
sub
clc
mov
aad
stc
or
pop
pop
and
xor
sbb
mov
nop
adc
not
dec
ja
jmp
adc
call
fdivrp
rolb
andb
sahf
sbb
cli
sti
dec
and
sbb
mov
pop
sub
mov
imul
nop
and
ljmp
sub
add
inc
inc
in
ret
test
pop
cmp
lahf
adc
jge
test
and
call
int
loope
cmp
push
js
pushl
mov
xor
dec
dec
xor
mov
repnz
sub
mov
jno
mov
pslld
and
les
fwait
or
and
leave
adc
push
in
rol
dec
adc
jmp
add
sbb
add
outsl
das
es
sub
cmpl
jle
sbb
insb
das
cmpl
dec
outsl
shl
push
mov
or
loopne
xor
lret
pop
icebp
cli
inc
lcall
adc
incl
fldl
pop
pop
test
loope
xchg
pop
xchg
ret
xchg
std
jo
add
cmp
movsl
mov
jb
rcrl
arpl
das
test
mov
int3
or
inc
push
cmpsb
stos
push
mov
shll
cmp
xchg
call
lcall
aas
mov
mov
add
jecxz
xchg
ljmp
aam
mov
mov
aas
addr16
and
pop
mov
out
loope
inc
ljmp
hlt
xor
xor
adcb
push
add
push
out
pop
mov
int
fwait
out
lcall
rol
or
outsl
xchg
jno
inc
fs
enter
ljmp
xchg
mov
into
rol
popf
xor
ljmp
lret
sub
xor
pop
mov
out
add
nop
filds
lea
jb
call
int3
lret
xor
lcall
fistl
insl
sub
ficompl
cmp
mov
fwait
jnp
lcall
push
push
push
loopne
jecxz
movsb
xchg
push
fadds
jg
ljmp
inc
dec
jbe
ljmp
inc
fwait
pop
mov
dec
xchg
or
mov
add
fiadds
cmpsb
inc
nop
notb
push
out
dec
mov
mov
insb
jbe
divl
es
insl
pushf
mov
dec
in
or
inc
inc
das
fisttpl
or
ljmp
test
dec
push
mov
cmp
stos
mov
insl
scas
stos
inc
fcomip
cld
cmp
fwait
push
loopne
ss
xchg
cli
test
add
lcall
decl
pop
leave
int
push
adc
roll
outsb
aad
xor
add
inc
ljmp
lock
popa
cld
inc
loop,pt
imul
insl
stos
mov
clc
out
clc
lcall
xchg
push
pop
fs
repnz
scas
cmp
scas
jp
test
and
daa
notb
icebp
add
xchg
or
xchg
decl
xor
popf
repnz
inc
jbe
jne
or
jo
jl
ds
insb
lock
fucomp
mov
xchg
addr16
cmp
and
xor
stc
and
push
fistpll
imul
out
mov
or
daa
js
repz
sub
fldt
das
xchg
inc
movsb
cmp
jno
jb
add
call
sub
mov
lods
cmpsb
outsb
popa
ror
fnstcw
lret
or
test
bnd
jb
sub
mov
dec
imul
sbb
cmp
xchg
iret
pop
add
decl
popf
ss
dec
mov
sbb
jbe
cmpsb
js
jnp
cmp
sub
jae
ljmp
xlat
sbb
inc
mov
les
sbb
cmp
mov
mov
mov
mov
push
add
push
pop
adc
je
decl
and
jl
loopne
jb
xor
pop
push
gs
movsl
sbb
cmp
ljmp
and
adc
lods
xchg
cmp
adc
push
push
push
adc
inc
cmc
sbb
jecxz
dec
lods
mov
inc
mov
or
dec
aad
ds
jmp
inc
jnp
negb
or
mov
enter
push
ljmp
incl
ret
pop
addb
mov
cmp
or
gs
insb
shlb
jg
decl
fidivs
xor
ja
movsb
repnz
jo
inc
incl
cmovp
xchg
ljmp
cli
std
sbb
iret
test
test
int
jmp
aam
xchg
rorl
push
mov
add
adc
lock
xor
fisubl
lods
adc
fisttps
sub
cwtl
pop
adc
dec
xchg
or
xchg
xchg
cmp
js
scas
test
lahf
cmc
ljmp
dec
lods
orb
sub
dec
sbb
dec
jns
subl
sbbb
lds
pushl
aad
and
loope
mov
push
add
push
mov
lcall
push
jb
movsb
jmp
icebp
mov
mov
mov
aaa
fstpt
jmp
cmpsl
popa
adc
mov
es
xor
push
fstl
jge
mov
call
test
push
sbbb
fidivl
push
adc
pop
ret
cltd
outsb
xchg
fisttpll
or
mov
decl
lock
ljmp
xor
xchg
sub
sbb
adc
or
adc
mov
notl
and
adc
mov
inc
inc
mov
pop
les
sbb
in
pusha
inc
cmpsl
pop
xchg
push
mov
dec
xor
enter
scas
pusha
leave
inc
push
int
inc
jecxz
mov
pop
incl
jmp
ss
mov
ja
test
cld
cmp
and
and
decl
inc
xor
push
lret
mov
pop
std
sub
sbb
das
adc
xchg
fsub
jmp
movsl
in
jecxz
cmp
int3
mov
pop
out
mov
mov
mov
mov
jmp
xor
mov
aaa
sbbb
jbe
xchg
jae
jo
in
xor
js
call
sub
movsb
test
std
xchg
xor
pop
pop
rcrl
push
addr16
test
cld
lcall
gs
xor
push
xchg
dec
add
repz
pop
or
adc
mov
sub
pop
int
or
sbb
fwait
mov
sub
lds
mov
mov
insb
das
jo
pushl
in
outsl
adc
jecxz
mov
sub
lods
push
testb
ds
xor
xlat
jp
push
shl
pushl
in
xchg
cmp
lods
jmp
mov
adc
lea
or
push
and
ljmp
cmp
push
mov
test
lds
jns
shlb
jbe
in
frstor
cmp
cld
jmp
popf
cmp
cmp
enter
mov
mov
out
std
jg
push
sub
or
and
xor
or
mov
pop
shlb
xchg
and
loopne
enter
add
into
dec
pop
mull
sbb
mov
jg
cmp
mov
test
sub
cmp
mov
cmp
push
outsl
xor
pushl
xchg
jg
mov
fcompl
xchg
lods
mov
sarl
xor
and
lcall
and
mov
pop
nop
lea
jbe
sbb
decl
push
dec
pushf
add
stos
adc
movsb
mov
cmp
aas
imul
and
ds
cmp
push
cmp
mov
jmp
mov
jecxz
xor
lods
xchg
daa
mov
xor
adc
inc
sti
lods
mov
iret
dec
mov
push
jae
out
stos
dec
aaa
movsb
mov
xor
rcll
lcall
jnp
movsl
scas
xchg
add
ljmp
xchg
lret
aam
cmp
or
popa
mov
adc
stc
pop
mov
clc
mov
imul
call
jno
insb
lds
push
and
in
outsl
test
scas
imul
shrb
xchg
jmp
push
xchg
pushf
out
call
fcoml
xchg
pop
and
mov
cwtl
sahf
dec
sbb
cmp
addl
pop
jmp
and
mov
popf
lcall
xchg
out
pop
and
js
jbe
xchg
mov
lahf
clc
jg
jmp
outsl
aam
loope
push
add
loopne
rorb
je
xor
jne
divl
ljmp
jl
in
push
outsb
dec
xchg
jb
sbb
movsb
jno
rcrb
dec
sbb
or
test
and
xchg
inc
jecxz
out
and
pop
lcall
inc
clc
jge
mov
std
jg
test
pop
sbb
pusha
add
sub
mov
and
lcall
mov
stos
adc
ja
xor
loopne
jg
cmp
mov
sbb
add
lods
pusha
aaa
mov
pop
mov
dec
pop
and
decl
inc
les
lods
rcrl
lea
sub
iretw
xor
pop
pop
nop
mov
pop
lcall
sub
cmp
call
cld
cmpsb
adc
mov
push
push
add
scas
insb
inc
and
ss
inc
add
jmp
xchg
sbb
lea
in
mov
cwtl
ds
jg
mov
add
xchg
imul
imul
sub
jmp
cwtl
add
je
cmp
sub
cmp
mov
xor
cmpsb
or
jge
jle
lea
loope
push
aam
fsubl
inc
push
test
jae
cld
repz
lcall
mov
outsb
arpl
fcoms
xchg
mov
incl
daa
sbb
es
in
in
xlat
xor
mov
adc
adc
mov
mov
fs
pop
stos
cmc
js
mov
data16
sub
pusha
jae
call
std
daa
std
sub
add
data16
add
leave
or
frstor
xchg
jle
incl
loop
mov
and
sub
pop
repz
loopne
and
pop
cs
mov
out
xchg
pop
repnz
fbld
jbe
es
inc
dec
and
sahf
lea
pushf
ljmp
inc
lods
add
jmp
cli
push
cmp
in
mov
and
test
mov
js
jne
jo
and
cld
pop
sar
jmp
cmc
or
and
aam
cmpsb
scas
ljmp
push
fcmovne
sbb
mov
call
inc
rcrl
test
xchg
xor
mov
pop
fdivr
xchg
ja
fsts
push
sar
sbb
xchg
xlat
xchg
pop
or
clc
lods
lock
mov
inc
ljmp
and
rcrl
mov
cmp
add
jmp
adc
js
adc
fstps
jbe
shlb
mov
in
fimuls
call
pop
jae
and
xor
push
dec
mov
sbb
lcall
andl
or
fcos
jmp
xor
cmp
mov
cmp
cmp
fiaddl
aas
in
xor
call
mov
pushf
mov
dec
xchg
add
mov
icebp
mov
sbb
ja
push
inc
and
jge
outsl
jp
movsl
loop
cmp
mov
pusha
adc
pop
outsl
xor
std
mov
pop
inc
sbb
lcall
sub
push
stos
in
cli
mov
cmp
push
xor
ja
fistps
sbb
jecxz
lods
or
call
sub
mov
bound
loop
cld
lret
mov
pop
sbb
jmp
dec
cli
add
mov
shl
in
cltd
mov
xchg
fsubrl
insb
lcall
jo
orb
rcl
cmp
push
lret
jp
xor
xchg
add
jo
decl
mov
xor
ljmp
sarl
idivl
mov
lahf
dec
pause
add
mov
cmp
popf
mov
mov
fimull
dec
in
cmp
or
add
xchg
pop
adc
or
mov
mov
jp
push
cmp
andl
xchg
xor
ljmp
sub
xchg
cmp
jae
loope
fs
js
into
cmp
jp
insb
push
jg
sbb
enter
popa
lock
mov
or
push
mov
or
adc
sti
adc
push
pop
les
mov
in
fbstp
mov
mov
sub
cmpsl
pop
inc
mov
ljmp
lret
jb
cmpsl
cs
pop
or
sarl
insl
push
popl
stc
popf
jp
iret
pop
xchg
hlt
jl
ljmp
insb
mov
lock
fidivrs
rorb
jle
movsb
loope
je
cmovns
jmp
jnp
mov
inc
push
add
push
std
xor
or
cmp
inc
mov
icebp
dec
pop
jp
ljmp
clc
xchg
je
shlb
xor
or
adc
aas
stc
les
sub
jp
jnp
jns
outsb
icebp
lock
sbb
pushl
xchg
lret
xor
clc
or
jge
in
es
cmp
push
das
pop
xor
xchg
add
in
push
jg
mov
fs
dec
mov
mov
scas
xchg
xchg
scas
daa
out
decl
adc
pop
in
in
or
stos
mov
mov
inc
call
and
adc
push
sbb
jg
pop
fsubrp
movsl
adc
les
inc
fldenv
jne
inc
in
or
decl
rcrl
cmp
insl
in
gs
fadds
insl
and
pop
popf
outsb
lea
mov
insl
add
stos
mov
rol
lods
out
hlt
lahf
sbb
jbe
fimuls
lock
ret
mov
dec
je
push
or
decl
mov
mov
mov
xchg
mov
pop
inc
xchg
sbb
xor
mov
push
cmpl
mov
rcrb
in
pop
jae
repz
addl
cmpsb
add
sti
pop
daa
pop
loope
icebp
out
sahf
loop
xchg
ret
mov
mov
inc
add
xor
fistpl
push
ja
cld
sub
sar
incl
in
mov
fs
iret
ret
test
dec
inc
xor
nop
xchg
out
out
leave
cli
arpl
jl
dec
mov
dec
mov
inc
cwtl
push
orb
pop
ja
sti
incl
stc
jl
push
sub
lahf
inc
test
scas
xor
outsl
pushf
and
add
cwtl
push
popa
jmp
scas
xchg
push
pushl
jmp
xchg
test
mov
adc
pop
cmp
pusha
pop
push
insl
gs
pushl
or
push
mov
sbb
mov
loop
in
mov
mov
adc
jl
jg
lea
add
mov
pop
sbb
dec
pop
int
cmp
cmp
dec
je
jno
lahf
push
xlat
test
roll
push
movsl
ss
iret
or
mov
push
add
flds
cmp
jmp
push
icebp
and
lcall
fists
inc
in
aam
mov
inc
js
pusha
out
daa
mov
inc
in
add
fadds
sbb
addr16
decl
jle
inc
and
jns
cmp
insb
and
mov
mov
adc
cmp
lcall
scas
mov
jmp
in
sahf
jmp
mov
push
jecxz
mov
clc
repz
movsb
decl
lcall
mov
add
ret
and
pop
dec
push
pushl
jecxz
or
orl
sbb
in
push
sub
call
sbbb
mov
lds
adc
aaa
arpl
and
int
pop
jmp
mov
repnz
call
dec
cmp
add
into
jl
out
and
cmpsl
mov
ret
mov
out
test
push
jb
or
jns
ret
test
mov
das
lcall
lcall
test
mov
xchg
add
insl
inc
rclb
jle
sub
push
push
xchg
lcall
stos
pushf
aad
mov
mov
jmp
jle
out
cli
ljmp
pop
mov
out
xor
stc
les
out
arpl
dec
aad
pop
repnz
xchg
lea
sub
jg
mov
insb
aad
scas
dec
mov
imulb
jl
clc
mov
inc
dec
adc
sub
xchg
and
pop
outsb
mov
pop
ljmp
ret
les
xchg
pop
cs
lods
mov
rcrb
sub
push
xor
cmp
xor
cli
outsl
scas
push
mov
mov
cmp
pop
sar
mov
insl
jmp
sbb
lock
xor
mov
movsb
cmpb
cld
adc
pushl
jns
adc
dec
adc
mov
std
or
jns
mov
sbb
dec
sti
jecxz
incl
addr16
icebp
cmpsl
adc
xchg
sub
mov
lret
pop
lcall
adcl
jnp
mov
sub
mov
fs
xchg
in
lret
jl
aas
dec
mov
ffree
cmpl
loopne
js
ja
pop
push
mov
xor
pslld
fwait
clc
pushl
or
data16
sti
cli
rclb
jp
mov
lret
stos
lcall
decl
mov
outsb
or
jbe
clc
data16
jno
lods
leave
xor
adc
cwtl
in
sarb
jne
inc
push
imul
ljmp
inc
and
ficoms
popf
je
pop
scas
dec
cmp
jle
loope
sub
inc
cltd
ljmp
xor
push
dec
fcomps
push
fimuls
adc
fsubs
mov
sar
pushf
or
mov
mov
das
outsb
inc
popf
mov
popa
add
push
stc
inc
dec
hlt
jno
jp
xor
jg
test
in
dec
into
lods
test
pushf
lods
push
mov
mov
pop
pop
sub
adc
add
mov
pusha
add
lock
xchg
fnstcw
lods
jb
dec
nop
cli
mov
hlt
enter
push
call
add
rcrl
jo
movsl
adc
jmp
cs
sub
into
icebp
jb
sti
and
and
ficomps
jmp
adc
outsl
clc
lcall
mul
pop
or
xchg
sbb
loopne
xchg
cmp
int
cmp
dec
cmp
sbb
mov
and
and
in
stos
push
in
and
es
fisubrl
loope
mov
mov
or
incl
jbe
mov
cld
out
stc
add
das
fbld
pop
mov
scas
xchg
call
add
inc
cs
call
jo
gs
mov
sbb
xchg
scas
fsubl
shll
lcall
lods
in
adc
incl
leave
fwait
mov
popa
push
jmp
cmovnp
loopne
mov
popa
cmp
sahf
fs
jg
gs
shlb
push
add
js
scas
mov
xchg
add
jg
sbb
fldt
jg
jb
aas
pop
outsl
movsb
popa
xor
call
loopne
sub
mov
subl
aad
or
das
and
scas
cli
pushl
lret
pusha
adc
shlb
jecxz
lods
mov
inc
add
and
jmp
movsl
cltd
aas
js
jl
push
jno
add
mov
shll
lods
fistpll
cltd
ja
mov
lods
shrb
cmp
cmp
out
push
fsubl
jg
push
pop
jne
and
aam
lcall
das
and
adc
jp
cmp
pop
cmp
inc
pop
out
movsl
mov
insb
inc
btr
ljmp
shl
mov
mov
mov
mov
incl
mov
test
loop
cmpsl
xchg
ja
mov
cltd
push
and
rolb
pushl
dec
inc
data16
mov
mov
fiadds
call
into
or
mov
inc
stos
jg
push
loope
js
insb
inc
leave
insl
incb
pushl
int
dec
mov
in
sbb
aaa
mov
dec
std
andl
mov
test
mov
insb
es
fucom
or
daa
ljmp
cmc
fcmovnb
andl
mov
out
stos
inc
inc
pop
or
dec
jmp
insb
call
imul
sbb
and
pop
dec
out
cmp
or
mov
inc
imull
ja
in
and
bswap
stos
and
fadd
inc
dec
mov
mov
outsl
push
cmp
incl
mov
movsb
lcall
aam
mov
sbb
daa
hlt
jmp
insb
loopne
and
loopne
scas
aad
sbb
pushl
pop
je
gs
jge
xchg
mov
sub
jno
push
stos
mov
lock
xor
inc
fs
fstp
call
sub
cmp
insb
out
push
inc
or
cmpb
mov
cmpb
cmc
adc
mov
ljmp
sub
and
xor
scas
aas
sub
mov
mulb
incl
push
dec
ret
and
mov
pushf
scas
jp
bound
loopne
imul
add
xor
sub
call
xor
fwait
stc
fnstcw
ret
out
je
xchg
cmpsl
int3
mov
jnp
push
push
imul
lods
std
aas
inc
cmc
mov
inc
pop
les
jbe
daa
out
bound
testb
icebp
out
andb
add
mov
lcall
aas
push
mov
mov
and
jle
push
rolb
pop
pop
jle
jle
sub
fistl
out
hlt
pop
pop
push
lds
movsl
imul
sbb
in
cmp
dec
adc
pop
adc
jge
jmp
ror
pop
mov
mov
test
adc
in
pop
dec
int3
decl
mov
jno
dec
pop
pop
jl
cmpsb
movsl
mov
lods
mov
or
xor
decl
ds
mov
stc
push
test
sti
adc
arpl
xchg
sub
aad
movsl
stos
cld
push
adc
repnz
push
out
and
push
xchg
cli
jmp
jp
fwait
es
pop
cmpsl
lret
mov
rcll
xchg
pusha
sbb
gs
xchg
dec
mov
adc
lcall
loope
iret
icebp
mov
jge
outsb
push
movsb
inc
jns
push
cld
ljmp
bound
add
mov
mov
fldt
pusha
ss
into
xlat
clc
xor
cmp
mov
lret
add
mov
dec
lods
lcall
outsb
inc
jno
mov
cmp
imul
push
xchg
xor
popa
jmp
push
loop
inc
adc
int
adc
jno
pushf
int3
ja
aad
in
xor
idivl
inc
jo
jle
sbb
adc
scas
loopne
sub
mov
sub
mov
xorb
mov
aad
sub
mov
das
enter
xor
xchg
mov
mov
lcall
sahf
lods
dec
popf
in
xlat
or
bound
out
sub
pop
push
pop
leave
jp
aas
ret
fcomip
lcall
mov
addb
pop
fcmovu
push
add
inc
lea
jmp
subb
and
int3
lods
mov
push
lahf
jno,pt
sbb
dec
push
adc
inc
mov
dec
inc
jmp
sub
arpl
pop
mov
ljmp
fcom
add
sub
mov
ds
lret
mov
sub
call
test
jp
stc
xchg
fstl
xorb
vpsrad
jecxz
out
clc
loope
mov
loop
jmp
mov
mov
or
jns
ss
fidivs
ficompl
int
mov
in
adc
call
adc
or
stos
sub
ljmp
js
pop
add
mov
leave
mov
adc
mov
or
or
das
pop
jnp
jg
lods
sbb
and
cmpsb
or
dec
adc
mov
je
and
sbb
or
es
into
sbb
jno
pop
sub
nop
add
pop
leave
nop
mov
hlt
jmp
sbb
gs
lret
inc
into
xchg
xchg
out
es
pop
inc
inc
add
lcall
and
jnp
es
adc
mov
inc
nop
jmp
mov
add
dec
mov
jp
push
and
ljmp
sarb
cmc
pop
inc
cwtl
inc
xchg
push
jg
int3
or
cmp
mov
and
xchg
pop
jae,pt
cmp
xor
out
jmp
jnp
dec
and
fisubrs
lcall
pop
mov
fwait
loopne
sub
add
ljmp
ljmp
scas
mov
xchg
lahf
imul
and
ficomps
lcall
rclb
es
push
push
adc
insl
mov
cmp
adcl
decl
out
or
subl
rorb
idivb
pop
cld
and
mov
push
pop
dec
pop
es
or
outsl
pop
mov
pop
test
test
ljmp
arpl
cmp
emms
dec
mov
aas
sbb
inc
addr16
mov
mov
jg
je
repnz
pop
loop
les
inc
push
sahf
push
aas
or
xor
push
jecxz
mov
ljmp
test
leave
cmpsb
test
lcall
mov
popf
cmpsl
add
loope
std
jg
and
fcmovnu
add
mov
imul
jne
popa
mov
rcll
js
jae,pn
inc
cwtl
ds
pop
jbe
js
push
not
shrl
lcall
xor
push
pop
adc
sbb
dec
sub
cmpsb
add
popl
ljmp
adc
push
popf
cmp
jmp
or
push
jge
in
out
sub
hlt
dec
pop
jge
jecxz
std
cmp
add
xor
stos
mov
dec
and
jmp
and
xchg
inc
add
mov
in
lds
xchg
lcall
ljmp
aaa
push
or
cmp
pushf
dec
push
mov
xor
cltd
jle
mov
outsl
mov
xchg
push
add
pushl
mov
inc
insl
clc
lds
sbb
popf
ret
shrb
sub
cmpsl
movsl
sub
mov
jge
push
insl
lods
push
fisubrl
ljmp
fwait
aam
decl
test
pop
stos
lret
and
rcrl
jo
xor
sbb
fnsave
jmp
push
rorb
lds
dec
std
fldenv
lahf
adcb
andl
pushl
inc
xchg
dec
cmc
jb
nop
mov
loope
stos
and
xchg
lods
addr16
or
stos
mov
cmp
push
es
cmpsb
icebp
mov
negl
push
xchg
aad
call
mov
or
sti
insb
fdivrs
sbb
cmp
adc
ljmp
push
add
and
in
test
insl
xor
scas
stc
push
leave
stos
iret
xchg
push
out
in
sar
pushl
xor
mov
scas
jle
loope
enter
arpl
mov
pop
dec
loopne
push
xor
aas
adc
and
push
and
xor
xchg
push
or
loopne
mov
scas
inc
push
mov
pushf
xchg
ja
mov
ljmp
out
lret
data16
fnstsw
aad
outsb
cltd
push
rclb
aam
ret
pushl
or
push
in
loop
lods
shr
jmp
push
lea
lret
jl
lcall
mov
xor
fsubl
cs
ret
es
ficoml
or
pop
pop
aaa
adc
decl
hlt
aam
mov
lcall
cld
adc
paddsw
ja
dec
push
ds
fildll
pop
imulb
sub
dec
pxor
mov
data16
mov
inc
ss
inc
adc
testl
scas
aad
shr
rorb
lcall
aam
stos
loope
into
imul
cmpsl
fcoms
or
test
pushl
lahf
movsl
jle
jmp
gs
xlat
push
xchg
push
inc
imul
pop
push
rcrl
push
ficoml
cs
cmpl
xor
or
repz
mov
cld
jmp
stc
fcompl
insb
mov
push
ret
aam
jbe
stos
movsl
fistpll
pop
xor
idiv
mov
jae
pop
and
rcrl
decl
in
xor
repz
and
mov
ret
popa
inc
pop
negb
push
loopne
sub
pop
nop
stos
xchg
mov
and
insb
or
push
mov
insl
lds
or
int
addl
xchg
sub
mov
outsl
xor
lcall
loope
in
aas
test
repz
and
mov
sbbl
dec
pop
sbb
or
jecxz
sbb
fadds
lcall
jl
nop
sbb
icebp
lahf
fidivs
leave
pop
aaa
fwait
js
add
mov
incl
jg
pop
and
inc
sbb
push
dec
dec
or
xor
scas
cwtl
xchg
adc
jg
ljmp
jb
mov
les
add
data16
sbb
mov
sbb
icebp
push
icebp
bound
dec
cmpsl
repnz
out
sub
addr16
decl
push
cld
stc
dec
pop
mov
cs
arpl
mov
push
lret
ljmp
xchg
push
ret
les
xor
fmul
scas
cmp
sub
jg
jg
outsb
cmp
in
sbb
mov
sub
add
popf
bound
iret
adc
stos
adc
inc
pushw
stc
out
out
int3
xchg
sub
jp
mov
mov
in
jg
sahf
mov
mov
out
jne
jp
jmp
std
add
call
push
sbb
inc
or
add
scas
and
dec
xor
adc
outsl
jb
jg
incl
sbb
and
and
cmp
xchg
add
and
mov
filds
add
inc
mov
mov
sub
cmpsb
das
sar
pushl
sti
sti
fcmovnbe
adc
outsb
push
mov
aaa
sti
test
iret
or
mov
or
ss
sub
cld
testb
les
inc
inc
mov
call
call
adc
adc
mov
dec
call
lock
call
daa
mov
nop
jl
xchg
push
cmp
aas
lret
cmpsl
ja
aam
add
sbb
mov
push
add
jg
call
or
rorl
popa
cmpsb
mov
add
xorb
inc
call
jmp
in
incl
cmp
loopne
or
mov
xchg
repnz
mov
les
lcall
sub
adc
sbb
sbb
xchg
mov
lods
inc
pop
stos
jl
sbb
mov
ja
lods
xchg
mov
xchg
insl
test
aas
and
dec
fisubl
stc
xchg
xchg
dec
fwait
out
fmuls
into
or
je
add
test
or
push
imul
out
and
popa
xor
lock
sahf
stos
ret
dec
pop
cli
decl
aam
xor
xor
push
in
stos
mov
ffree
js
icebp
mov
popf
xchg
arpl
ljmp
xchg
stc
xchg
push
jp
jo
shll
in
and
js
sbb
out
xchg
jp
push
test
sub
enter
and
in
cmp
sti
and
test
pushl
or
mov
fwait
outsb
sbb
pop
mov
dec
xchg
inc
mov
sub
movsb
fcompl
bound
ficomps
dec
imul
loope
std
cmp
sti
jae
mov
xchg
fcmovbe
ljmp
out
adc
rorl
ss
call
into
and
pushl
out
jne
stc
lods
jae
mov
sbb
fldenv
clc
xchg
ja
fcomps
ficomps
call
out
stos
cmp
mov
out
jecxz
lods
mov
test
jl
in
push
pop
jp
incl
jp
jge
shrl
push
pop
dec
jne
sbb
inc
lret
popw
mov
or
ljmp
add
adc
mov
es
das
in
xchg
dec
jmp
mov
xlat
push
mov
xor
jmp
xor
cltd
fs
stc
xchg
aaa
ds
push
gs
enter
ds
add
xor
add
cmp
cmpsb
addl
jle
pushl
pop
ret
lahf
dec
fisubs
jns
insl
lods
or
arpl
out
lret
std
jmp
jae
xor
ret
fnstenv
sbb
int3
es
fnstenv
stos
push
ss
ja
ljmp
bound
fwait
imul
xchg
and
sub
ljmp
pop
inc
fsubrl
push
loop
fcmovb
add
sahf
mov
aaa
jb
push
mov
sbbl
aad
cmpsl
test
scas
adc
inc
cmc
fbld
or
mov
movsb
jmp
cmp
xchg
mov
hlt
xchg
mov
mov
shrb
pop
xchg
je
incl
adc
adc
add
mov
push
out
lahf
adc
sbb
aad
and
in
daa
dec
and
jg
lods
pop
xchg
and
xchg
outsb
push
mov
xchg
or
mov
cltd
pop
movsl
mov
jmp
in
or
xchg
jge
test
lcall
add
pop
addb
out
and
jle
sbb
jg
incl
xor
ja
repnz
push
inc
xchg
cmp
fldl
and
pop
ficoml
pop
pop
xor
mov
and
mov
test
xor
cmp
ljmp
mov
int3
outsl
push
addl
sysenter
pop
cmpsl
sub
mov
and
pushl
xor
sub
fadd
pslld
stc
pop
mov
ljmp
add
sub
popf
gs
sub
icebp
jg
cmp
and
fs
popf
push
loopne
outsl
xchg
cmp
cmp
add
fists
call
lods
sahf
mov
aad
dec
ret
xchg
cld
mov
lock
scas
clc
incl
xor
pop
fildl
add
mov
lock
cmp
sub
add
mov
push
incb
pop
xorl
pusha
aam
adc
mov
lea
pop
pop
ss
or
sbb
shr
push
xchg
sub
and
cmp
std
pushl
inc
je
mov
lahf
jmp
div
test
pop
sbbb
call
ja
adc
xlat
xor
xchg
push
sbb
add
sub
push
xchg
mov
xchg
jg
scas
lret
out
pusha
jge
mov
repz
fwait
pop
inc
roll
push
xor
and
cld
push
push
lods
int
rcll
adc
arpl
adc
pushl
cwtl
sbb
fdivp
inc
mov
push
jo
sbb
leave
movsl
cld
jmp
ret
mov
jecxz
adcl
lock
or
push
ljmp
add
lods
push
adc
dec
pop
xor
lcall
or
and
xchg
mov
push
pop
stos
or
mov
mov
pushl
dec
pop
addl
or
jmp
xlat
mov
or
pushl
ret
adc
int3
mov
cs
lods
std
pop
push
pop
and
dec
mov
je
inc
cmp
lret
jl
xor
outsb
aaa
ret
dec
xor
jmp
in
jecxz
mov
xchg
std
adc
and
fimuls
push
mov
adc
call
adc
call
jne
ja
jg
mov
mov
mov
ljmp
out
clc
nop
lret
add
gs
adcb
mov
xchg
cli
jae
imull
loopne
lcall
ds
fcomip
das
shrb
out
xchg
das
daa
pop
push
push
bound
jecxz
clc
jmp
call
mov
push
rol
mov
xor
aaa
insb
decl
and
or
movsb
ss
xchg
xor
stc
push
test
push
cmp
pop
fs
test
mov
fs
or
or
jmp
sbb
mov
ss
cs
out
or
sbb
mov
data16
icebp
sahf
jbe
andb
fsubl
push
movb
movsb
mov
lcall
sbb
call
dec
repz
add
adc
out
pop
cmc
and
sbb
fildl
pop
or
sbb
xlat
jb
fidivs
lret
and
mov
push
std
aaa
in
xchg
inc
aad
scas
lods
cli
push
xchg
dec
adc
and
pop
test
cmc
out
cli
cmp
orb
xor
movsl
adc
push
inc
xor
decl
lods
inc
jmp
mov
pushf
loopne
das
jg
stos
and
pushf
imul
mov
popa
fwait
dec
inc
lea
lahf
cmc
sbbl
fwait
xor
or
mov
cmp
test
lcall
ljmp
in
stos
outsb
inc
out
mov
add
xor
pop
daa
lods
cmp
rcrl
cmp
dec
clc
clc
sar
ret
shr
mov
add
xor
imul
ljmp
or
xor
xchg
es
jg
and
mov
sbb
add
xlat
je
mov
push
lret
imul
sub
xchg
scas
nop
hlt
pushl
mov
fsubrs
sub
and
jmp
hlt
xor
pop
dec
rorl
daa
popf
bound
sub
dec
in
aas
in
sub
or
push
add
lods
mov
test
int
pop
es
cs
decl
filds
push
mov
fistps
mov
xchg
xor
out
jle
and
mov
int
int3
insb
fildll
push
mov
mov
adc
mov
dec
cmovb
imul
jge
or
cld
decl
mov
pop
xchg
mov
loopne
xor
add
cmp
or
aad
mov
pop
stc
push
cs
inc
inc
xor
int
andb
xor
jg
jge
js
mov
in
bound
xor
addr16
cmpsl
cmp
xor
daa
outsl
pop
push
out
jmp
add
xchg
js
add
pop
and
jne
jl
push
ret
jmp
nop
pop
xchg
mov
int3
add
and
mov
jns
hlt
inc
loop
jb
call
loope
dec
cmpl
ss
xor
cli
repnz
jg
mov
push
adc
imul
ljmp
xor
fnstenv
fsts
sbb
push
cwtl
lahf
xchg
outsb
rcrb
pushf
rcll
outsl
test
ljmp
negb
add
mov
jnp
xor
or
sub
cmp
mov
sbb
xchg
jbe
and
movsl
sti
jl
xchg
rcrb
push
pop
jo
adc
xorb
mov
jle
sbb
dec
loopne
add
sti
or
dec
cwtl
lcall
inc
add
movsl
xor
dec
dec
xchg
or
jne
filds
and
call
sbb
push
mov
imul
enter
repz
mov
dec
into
sub
js
cmp
cmp
fcompl
jg
pop
adc
mov
ljmp
clc
push
scas
outsb
pushf
into
sbb
xchg
inc
jg
sub
test
divb
lcall
or
sbb
imul
push
incl
faddl
adc
ljmp
ljmp
push
daa
cwtl
jnp
and
mov
jnp
mov
mov
xchg
inc
jg
call
add
jae
xchg
ror
stc
and
bound
and
cmpsl
mov
in
ljmp
gs
cmpsl
xchg
fbstp
jl
xchg
jle
imul
cmc
sbb
pop
and
shll
or
push
pop
int
jns
add
inc
gs
push
inc
add
sub
or
cli
lcall
in
xchg
cmp
das
loope
rorb
mov
decb
mov
inc
lods
push
pop
clc
das
lret
cmp
cmp
xchg
push
sub
je
inc
es
sbb
out
adc
imul
mov
je
frstor
jmp
ret
mov
test
lcall
mov
cmp
pushf
mov
lret
gs
xchg
ret
iret
stc
pop
jnp
std
mov
push
aad
dec
mov
mov
xor
lods
cmp
dec
repnz
jle
enter
test
and
jg
cmc
lcall
push
xchg
mov
dec
jnp
and
sar
dec
jno
repz
mov
inc
movsb
fsubs
sahf
enter
test
or
mov
sub
sub
std
push
lock
xchg
test
mov
imul
lods
movsb
pop
pop
lcall
fldln2
or
inc
cli
xorl
out
inc
imul
test
add
adc
stos
cs
jne
jg
cmp
lcall
movsl
pop
cmp
in
in
xchg
pop
inc
arpl
das
xor
mov
add
fsubrp
mov
mulb
inc
cmp
rorb
pusha
cmpsl
add
cmc
scas
cli
jmp
mov
push
pop
sbb
loopne
xchg
adc
cmp
das
and
clc
xor
jbe
cmpsb
in
push
mov
push
pop
gs
fwait
xor
in
pop
bound
sbb
in
xlat
or
mov
sti
stos
fwait
dec
js
mov
rcl
and
mov
xor
sub
lds
lret
lret
ja
add
and
or
arpl
popa
aas
clc
std
into
cmp
movsl
fs
mov
aas
pop
jns
pop
lcall
dec
insb
cmpb
jmp
out
mov
lret
fsubs
xor
incl
loop
dec
inc
jecxz
pop
mov
mov
imul
xchg
and
rcrl
decl
cmpb
js
faddl
lods
cmp
das
push
inc
sar
jbe
add
mov
sbb
mov
addr16
fiaddl
sbb
mov
mov
sbb
rcl
outsl
push
xchg
call
jmp
mov
call
repnz
aad
imul
lret
dec
add
aaa
pop
or
nop
fwait
jecxz
or
shl
sbb
jo
xor
ds
mov
pop
push
data16
xchg
push
dec
pop
in
test
insl
js
lret
negb
aad
out
out
and
outsb
mov
cld
mov
add
add
push
addr16
je
loopne
loopne
xchg
mov
pop
out
clc
mov
mov
fidivrs
jae
adc
popf
dec
dec
and
push
ljmp
call
fwait
test
inc
fwait
bnd
or
adc
inc
decl
sbbb
jmp
sbb
iret
or
incl
jnp
cltd
mov
and
xchg
dec
push
out
ret
aas
adc
jbe
and
ljmp
in
mov
iret
das
adc
mov
cmp
ftst
hlt
outsb
jo
je
adc
test
gs
or
test
dec
xorl
adc
pushf
fdivr
scas
sub
dec
test
jge
pop
lcall
adc
shll
push
pop
leave
cmp
add
ljmp
out
jl
subl
daa
nop
imul
aas
int3
imul
sbb
in
in
mov
pop
adc
push
sahf
xchg
xlat
popa
mov
mov
xchg
xlat
cmp
std
jo
adc
dec
xor
jp
mov
fsts
loopne
cmpsb
inc
not
pushl
shlb
pop
push
stc
in
outsb
xchg
mov
pop
and
jl
lea
call
jmp
dec
andl
mov
gs
mov
in
dec
inc
imul
push
rclb
divl
cld
add
and
inc
ficompl
shl
cmp
inc
sbb
jg
incl
test
mov
pop
adc
pop
xchg
mov
ds
adc
sbb
jg
jb
out
or
add
cmp
es
std
lret
cmp
lahf
xchg
fistpll
icebp
sub
xchg
lods
cmp
push
out
cmp
popf
idiv
ljmp
cmp
shll
andb
leave
daa
divl
iret
pushf
push
dec
sub
jmp
daa
shlb
fistpl
ljmp
decl
out
push
frstor
xchg
aaa
or
test
lret
xchg
in
rcr
out
add
cmpsl
ljmp
mov
mov
jmp
sbb
lods
rolb
sbb
call
push
lcall
stc
out
pushf
mov
cmpsl
cmpsl
bswap
xchg
cli
inc
pop
jo
jo
test
mov
ljmp
adc
add
mov
shlb
cmp
jecxz
loopne
adc
incl
out
sub
inc
iret
fcmovne
push
inc
dec
out
xchg
ljmp
or
call
inc
mov
dec
repz
mov
sbb
dec
test
push
sahf
jl
lret
sub
pop
sahf
jo
call
jl
push
pop
out
stos
aaa
push
mov
pop
cld
push
add
jmp
call
aam
adc
nop
push
test
pop
mov
fcmove
sbb
popa
mov
lock
dec
jg
inc
cli
in
sbb
decl
add
mov
test
and
mov
mov
xchg
shrb
xor
lcall
push
pushf
mov
nop
shrb
cmp
jo
js
or
sub
mov
shrb
xchg
cmp
cmp
cmp
test
mov
dec
mov
sti
push
hlt
clc
pop
cmp
notb
lcall
push
ljmp
dec
cwtl
jl
add
decl
adc
les
jb,pn
into
vmovlpd
ljmp
pop
jnp
nop
pop
lock
mov
adc
es
mov
lods
push
inc
addr16
lods
lcall
call
mov
cmp
or
lock
shrb
push
into
jmp
popa
jl
loopne
inc
lods
or
frstor
inc
jg
or
imull
inc
les
incl
push
test
scas
mov
cltd
es
scas
or
out
cld
sbb
add
mov
inc
xchg
loopne
dec
loope
xchg
add
dec
pop
aam
loop
add
xchg
insb
pop
and
std
sbb
xchg
int3
inc
jl
call
ret
imul
xor
insb
mov
fnstenv
pop
idiv
aam
icebp
dec
fisubs
loopne
roll
cmp
adc
inc
sub
xchg
out
inc
fadds
fimull
jnp
inc
jns
jg,pt
aam
movsb
mov
ja
hlt
add
xchg
xor
and
add
mov
push
nopl
inc
in
mov
mov
pop
xchg
in
xchg
mov
add
mov
xchg
jmp
dec
jg
pop
and
or
push
push
aaa
fcmovu
xchg
sbb
lahf
dec
mov
stos
mov
push
xchg
idivb
mov
lock
push
and
mov
jne
mov
mov
sahf
out
and
and
dec
in
push
out
test
shrl
adc
call
decl
das
add
loope
aaa
adc
cltd
pop
jo
pusha
push
popa
cmp
sti
mov
jmp
insl
jo
pusha
xchg
rcl
mov
jnp
lods
lea
fistl
push
cld
mov
test
mov
adc
xchg
sahf
or
decl
push
scas
and
test
mov
ss
jmp
decl
xor
das
bound
xor
loope
or
movsl
push
ret
pop
inc
xor
jnp
test
cmpsl
xor
dec
rolb
nop
xchg
jl
dec
gs
fadds
lcall
pop
ret
add
cs
sub
andb
jns
lret
jp
cmc
call
pop
fcoms
xor
mov
inc
mov
pop
pop
add
fildll
cmp
jecxz
mov
cmpb
shll
cmp
mov
fwait
loopne
shlb
out
lcall
arpl
das
pop
clc
call
scas
dec
and
arpl
shlb
xchg
pop
mov
sbb
cmp
pop
mov
mov
pop
movsb
mov
ljmp
mov
adc
je
pop
mov
ljmp
pushl
in
sbb
arpl
es
cmp
sti
outsl
inc
mov
cmp
xor
icebp
cs
inc
dec
aas
cmpsb
je
xor
mov
pop
pushf
scas
incl
pushl
cmp
mov
or
mov
xchg
or
not
pusha
jmp
stos
push
xor
outsl
or
mov
jp
adc
jl
call
mov
decl
repnz
add
jnp,pn
push
xor
hlt
adc
in
inc
iret
jnp
movsb
or
scas
push
jp
pusha
aam
sub
add
mov
aaa
dec
outsb
scas
jnp
mov
clc
insb
jg
outsl
ja
fstps
xchg
sbb
push
push
dec
into
pushf
mov
aam
xchg
int3
add
sbb
jmp
xchg
pop
push
inc
andl
rolb
cmp
sbb
testl
and
pop
sbb
cmp
jle
pusha
jo
jae
adc
jge
lret
adc
inc
pop
jo
pushl
jmp
cmc
data16
mov
int3
lret
mov
sub
and
loope
mov
pop
mov
jge
divl
push
sti
and
mov
jp
stos
xchg
and
call
rol
dec
and
scas
lahf
data16
cmp
in
add
pusha
cli
outsl
push
in
fsubrs
ljmp
push
jae
lods
orb
adc
ss
push
test
dec
push
inc
negl
int3
cs
jbe
adc
jl
and
das
stos
adc
arpl
xlat
inc
cwtl
test
bound
fistpl
mov
in
push
or
int
aam
ret
test
inc
lret
iret
mov
cmp
pop
push
cli
add
mov
arpl
mov
mov
xchg
adc
in
sarb
dec
inc
decl
test
ret
dec
pop
je
mov
add
cwtl
lcall
jl
adc
cwtl
shl
xchg
push
int3
push
adc
cmp
xor
pushl
lock
push
mov
data16
call
popf
add
push
jle
ret
in
lahf
popf
sti
test
pushl
dec
es
ja
jo
jnp
mov
mov
stos
idivb
dec
fwait
xchg
mov
std
incl
push
int
sbb
aad
cmpsb
sub
jne,pn
rorl
pop
jmp
mov
aam
add
xor
test
sbb
das
xor
lock
aaa
adc
jnp
dec
sub
jno
fwait
jne
cmc
fiadds
and
es
jle
movsl
cli
les
pop
ja
mov
xchg
lret
mov
test
jae
cmovns
mov
jg
and
jno
mov
pop
push
scas
outsl
imul
std
inc
pop
sub
dec
incl
movsl
add
dec
sub
in
in
inc
mov
das
addr16
lods
cmp
inc
jmp
fbld
dec
les
test
mov
movsb
add
mov
icebp
jmp
das
xor
inc
mov
fildll
or
mov
lcall
clc
ss
cmpsb
mov
fsubrl
dec
mov
in
mov
mov
inc
dec
sar
decl
jb
int3
int
sbb
shlb
pop
loop
mov
jg
jg
out
push
push
mov
pushf
cmc
pop
jb
push
dec
rclb
lea
incl
jns
cmp
aaa
push
loopne
ret
outsl
add
and
rorl
cli
pop
dec
fstpt
int
adc
insl
dec
push
dec
fidivrs
fcoml
ret
cmpl
test
cwtl
lods
lret
insl
xor
sar
cmp
sbb
pop
cli
lea
mov
mov
mov
mov
adc
xor
pushf
adc
push
mov
jp
mov
int
sub
jae
mov
je
pop
push
out
fnstsw
push
mov
stos
dec
das
or
and
out
dec
ds
into
push
divb
mov
das
sbb
bound
xchg
daa
jns
push
xor
imul
pop
pop
adc
in
in
dec
mov
daa
xor
jne
stc
aas
mov
push
or
inc
cmp
jg
mov
cmp
cltd
and
mov
shrb
daa
xchg
inc
lcall
xor
loop
mov
out
dec
loop
dec
push
aam
push
and
cmp
xor
loope
adc
mov
cmp
call
mov
jae
dec
add
lods
leave
xchg
jmp
xor
xor
call
lahf
sbb
decb
xchg
xor
test
gs
mov
iret
xor
jmp
xchg
pushl
loop
and
lods
jae
fisttps
xchg
inc
xchg
and
fnstenv
xor
jmp
mov
cmp
or
arpl
pushf
xchg
cld
and
jo
xchg
or
pop
ljmp
mov
sbb
inc
out
push
in
sti
lods
fnsave
or
lcall
loopne
aas
sub
mov
jecxz
push
fistl
pop
xchg
stc
add
mov
cmp
lahf
jmp
xchg
pop
mov
cmp
xchg
jmp
das
sub
mov
add
movsb
inc
adc
inc
add
or
call
jl
push
cmp
cmp
daa
jp
hlt
imul
fmull
test
sbb
xchg
js
dec
jnp
lock
pushl
mov
mov
stos
aas
mov
out
mov
inc
je
mov
mov
js
add
mov
clc
mov
and
pushl
xchg
sub
add
cmpsb
pop
push
in
cmp
mov
sbb
rcrb
xor
lods
nop
cli
clc
incl
faddl
repnz
sbb
out
pushf
test
jmp
or
add
pop
cli
mov
ljmp
bound
out
cmpl
or
stos
fisubrs
loop
and
pushl
jns
ret
pop
mov
dec
imul
mov
movsl
push
lock
cmp
push
imul
mov
xchg
aas
or
pop
into
out
push
and
fmul
sarl
decl
cmp
ss
dec
loopne
xchg
loopne
std
sub
adc
ss
mov
iret
arpl
push
imul
repnz
xlat
dec
lahf
shlb
fsubrp
insl
mov
pop
xchg
mov
pop
cmc
fisttpll
jecxz
in
call
ds
shlb
loop
lock
call
cli
test
addb
push
fdivr
daa
dec
psubd
dec
dec
rcll
xor
and
scas
push
push
xchg
xchg
and
sbb
ljmp
ds
mov
cld
mov
mov
jae
sub
jg
ljmp
mov
xchg
lcall
sub
pop
subl
sbb
cmpl
clc
adcb
ds
test
movsl
add
push
inc
fisubrl
dec
pushl
jmp
push
or
mov
xlat
jge
outsb
in
shrb
lahf
add
lcall
jl
and
push
and
or
push
xor
dec
mov
xor
mov
clc
fwait
scas
lock
les
lret
mov
popf
or
jmp
mov
aam
xor
rol
shll
fnsave
out
or
incl
mov
pop
xchg
sbb
pop
jmp
int3
cmpsb
jecxz
xchg
sub
fildll
addb
mov
or
incl
mov
icebp
lock
aaa
into
sarl
mov
out
fimull
shl
cmc
adc
dec
cmp
mov
lret
xor
jmp
rcrl
lret
das
outsb
cli
insb
push
aad
mov
push
je
mov
leave
ljmp
mov
cs
fnstsw
nop
xchg
inc
push
scas
push
lods
pop
mov
mov
mov
dec
shll
cmpl
jns
das
mov
lcall
push
add
ljmp
ret
inc
xlat
aaa
rcll
into
ret
pop
push
mov
xchg
xor
inc
mov
sbb
xchg
inc
ljmp
cltd
stos
cli
push
insl
loop
stos
fbstp
cmc
mov
fldcw
outsl
cmp
push
aaa
jecxz
sbb
xchg
sbb
xchg
jnp
shl
ret
inc
shll
stos
popf
cmp
sbb
cmp
test
push
xchg
and
sti
sub
sub
pop
push
test
icebp
mov
cld
fildll
andl
pop
and
es
sub
or
jle
in
stc
ljmp
jbe
mov
shlb
lret
pop
mov
add
mov
sarb
test
xchg
mov
add
rorl
xor
inc
cmpsb
jl
sahf
mov
ret
push
stos
mov
push
lret
inc
jbe
fldenv
pop
repz
push
cwtl
jg
push
push
mov
mov
subb
nop
sahf
add
into
scas
cmp
data16
xlat
incl
ljmp
pushf
and
pop
push
arpl
lahf
cmp
clc
call
inc
movsb
popa
or
pop
mov
pop
mov
dec
add
lds
sub
ret
inc
add
test
jecxz
in
das
or
mov
loopne
xor
cmc
jb
mov
loopne
stos
push
and
stos
lock
ljmp
clc
out
movsl
sub
pop
xor
fimull
hlt
inc
dec
inc
or
add
scas
dec
pop
push
push
add
sbb
pop
or
inc
push
xchg
cltd
incl
add
test
mov
in
testl
mov
add
lcall
push
push
adc
test
sub
fs
sbb
stos
jno
lahf
sahf
call
rcrb
mov
lods
dec
rol
cmp
aaa
mov
mov
sti
mov
icebp
ljmp
hlt
mov
mov
and
or
lcall
and
xchg
dec
mov
decl
sub
iret
cmpsl
call
lods
std
xchg
push
xchg
pushl
sahf
aaa
aas
mov
mov
jg
or
mov
inc
leave
jns
pop
mov
das
call
jmp
sub
and
cld
int
or
push
shlb
lcall
mov
dec
das
or
cmp
leave
pop
and
ret
push
lcall
add
sahf
lods
mov
cltd
mov
sbb
jecxz
loop
and
jmp
inc
arpl
lods
lcall
xor
sbb
sti
cmp
pop
mov
shlb
sub
lcall
pop
jns
fs
leave
and
out
xor
out
incb
sbb
lcall
cmp
and
dec
sub
lds
in
mov
push
je
jle
cld
push
xchg
pop
mov
push
daa
xchg
and
ja
ds
mov
pop
add
pop
lods
clc
pop
sar
cmpsb
fwait
adc
xorb
xor
ljmp
and
sti
icebp
outsb
push
rcr
inc
mov
sub
and
inc
jge
pop
xchg
and
inc
pop
std
scas
ljmp
add
pop
in
les
cmp
sbb
cmpsb
sbb
es
push
out
pop
xchg
insb
inc
test
aam
mov
cli
das
mov
out
aam
and
js
pop
mov
scas
dec
adc
cmp
popf
popf
ss
lahf
std
push
adc
pushf
add
mov
fsubs
push
mov
inc
ret
jmp
insb
jg
dec
mov
sahf
adc
jmp
icebp
adcb
popa
mov
ljmp
xchg
pop
mov
mov
sub
push
adcb
mov
dec
xor
xor
jecxz
fdivs
mov
jp
mov
xchg
lods
js
fists
push
out
or
jmp
in
xchg
add
mov
movsb
push
ds
jg
in
fmuls
pop
fs
jbe
pushf
jmp
mov
lock
pop
pop
jg
jmp
xor
sbb
push
mov
das
popa
mov
cltd
xchg
xchg
jae
mov
mov
cli
sbb
cmpb
sbb
repz
or
sbb
lcall
decb
lock
sahf
dec
sti
pop
push
push
lock
ret
scas
data16
jg
dec
imul
adc
pop
fnstenv
mov
adc
mov
mov
lcall
add
int3
divl
add
mov
je
addr16
xor
fistpl
adc
xor
lea
inc
jmp
loop
jbe
push
pusha
fildl
and
xchg
iret
and
loopne
jg
jmp
ret
xchg
jae
aam
push
mov
daa
jo
adc
adc
jns
ds
add
lret
outsl
arpl
gs
mov
sbb
add
jmp
jae
jp
movsl
in
pop
lods
sub
jbe
push
lret
iret
and
inc
ljmp
or
lcall
call
addr16
sub
sbbl
push
pop
loopne
outsl
add
mov
jp
xchg
imul
mov
push
je
inc
sbb
ficompl
dec
cmp
movsb
lea
push
lret
cltd
mov
and
addb
lcall
mov
xchg
out
xchg
mov
popf
inc
sbbl
mov
pop
icebp
dec
inc
mov
inc
and
push
in
rolb
loopne
mov
inc
jbe
jg
pushl
inc
lea
xor
fstpt
jne
les
ljmp
rclb
and
sar
js
arpl
add
in
mov
fiaddl
cmp
in
xor
mov
mov
push
into
or
data16
cmpsl
das
sub
jp
test
bnd
pushl
fisubrl
aam
insb
push
xchg
push
jp
mov
in
adc
sbb
clc
fldt
cmp
imull
call
and
ljmp
adc
sti
stos
in
rorb
lahf
and
sbb
rcrl
mov
push
xor
jmp
mov
addb
and
fcompl
lcall
movsb
sbb
lcall
sti
mov
xor
mov
cltd
loopne
subl
mov
fisubl
loope
decl
mov
movsb
repnz
add
jns
outsl
jns
rolb
inc
rcl
cli
enter
lcall
jle
mov
xchg
mov
dec
inc
bswap
adc
cmp
es
ficoml
sbb
lea
int3
aad
push
mov
mov
dec
sub
sar
aaa
outsb
xchg
pop
test
icebp
cmp
cmc
adc
fidivs
repz
incl
aaa
jo
mov
mov
mov
or
loop
es
lcall
jmp
test
and
bound
mov
sub
repz
clc
incl
repz
sbb
ljmp
mov
repz
ljmp
call
or
cmp
dec
inc
xor
dec
xchg
xchg
subb
sub
push
mov
outsl
pop
js
xchg
xchg
cs
add
xchg
add
js
push
bound
or
jg
cmpsl
xor
mov
adc
or
subb
pop
movsl
movsb
orl
jo
jl
js
fmul
or
rorl
jmp
lods
bound
dec
test
mov
gs
push
icebp
out
xchg
ds
call
fldl
mov
sbb
ret
js
xor
pusha
ja
mov
outsb
fsubl
stc
clc
jmp
xlat
les
aaa
add
xor
pop
inc
push
push
mov
out
incl
adc
popf
xor
mov
pop
inc
xchg
clc
scas
rolb
xor
inc
outsl
sub
mov
subl
and
pop
or
jae
lret
push
ret
aam
aam
cmp
cli
inc
and
cs
add
aam
inc
fldenv
or
pusha
popf
movsl
cld
insb
xchg
inc
inc
dec
std
lcall
aaa
movsb
rcll
push
adc
repnz
push
fidivrs
push
pushf
adc
call
into
test
fcoml
es
inc
xchg
inc
out
and
or
bound
pop
in
shl
loopne
fisttpl
xchg
mov
mov
cwtl
pushl
xor
mov
cld
add
sbb
into
add
outsb
lods
scas
xchg
lcall
fwait
mov
fsubl
arpl
jecxz
mov
jnp
cmp
or
in
clc
mov
cmp
adc
popf
nop
or
aas
push
fcoml
test
das
dec
imul
sub
out
pusha
pop
shll
jnp
imul
sub
in
sub
and
jg
cld
sbb
sbb
iret
adc
notb
xchg
mov
lea
stos
pop
mov
xor
insb
in
dec
xchg
xorb
inc
pusha
arpl
ljmp
fs
scas
push
lahf
adc
jl
sub
jg
je
hlt
sub
xchg
int
mov
pop
cltd
pop
jg
mov
jmp
cmc
and
and
adc
fiaddl
lock
lcall
jmp
lahf
cmpsl
icebp
add
xchg
dec
aam
mov
cmpsb
xor
adc
or
les
pop
cmp
inc
xchg
mov
sub
inc
subl
mov
fucomi
add
icebp
jg
into
push
add
mov
sbb
mov
inc
fsin
pop
mov
jns
push
push
jle
xchg
lds
call
ficompl
mov
cli
jmp
dec
popf
inc
cmp
sub
data16
dec
je
xlat
mov
dec
dec
and
inc
jae
add
or
xchg
outsb
push
dec
shr
ss
jmp
cmp
lods
int3
pushf
cmp
jmp
pop
jecxz
or
in
pushl
mov
or
push
mov
mov
cmp
call
jns
jns
xor
pop
xor
sbb
xchg
dec
lret
enter
sbb
incl
ret
xchg
icebp
xlat
test
stos
fists
pop
sub
sub
mov
cmp
ffreep
dec
mov
adc
cs
add
dec
mov
into
cmpsl
jae
jne
add
incl
dec
and
cli
xchg
xchg
dec
icebp
jp
jle
push
outsl
adc
ss
int
jmp
mov
outsl
outsl
inc
enter
add
jbe
push
xor
fdivrl
jecxz
mov
ds
enter
or
addb
add
pop
pop
sbb
cld
aaa
std
decl
push
orb
push
add
in
jb
and
push
icebp
push
in
push
imul
xor
cmp
push
movsb
fbstp
fists
xchg
xchg
call
lcall
or
cwtl
mov
push
or
push
mov
stos
cmp
and
add
sbb
aas
mov
jmp
decl
pusha
imulb
subb
xor
mov
in
addb
sar
push
or
jp
lcall
out
dec
test
pop
aad
push
in
mull
cmp
mov
arpl
sub
mov
jmp
repnz
dec
xor
into
nop
test
movl
arpl
hlt
dec
add
lcall
xor
daa
mov
fisubrl
xchg
loopne
stos
cmp
inc
call
shll
jmp
xor
inc
outsl
sbb
adc
lahf
sub
fbstp
je
shl
imul
cmc
stos
lods
mov
pushl
or
mov
or
std
loopne
mov
incb
xor
push
xor
lcall
inc
fbstp
mov
push
jmp
mov
in
ljmp
jl
stos
lahf
mov
lods
jg
and
movsb
sti
lahf
idivl
cmp
dec
mov
ljmp
push
cmp
mov
mulb
ja
inc
ds
ds
inc
pusha
jae
push
call
adc
ljmp
sbb
inc
lret
cld
lods
leave
inc
mov
push
sbb
repnz
mov
out
cmp
dec
imul
mov
jnp
jl
negl
jne
imulb
aad
incl
push
daa
push
push
push
xor
cs
in
mov
and
cltd
xor
mov
sbb
test
call
inc
pop
mov
std
mov
sub
ljmp
inc
cmp
cmpsb
dec
outsb
mov
adcl
push
testl
lods
adc
jle
sbb
fs
sbb
and
pop
adc
pop
stc
mov
in
mov
ljmp
sub
test
aad
mov
lret
xchg
fdivl
xchg
or
ja
xchg
pop
pop
ss
push
das
fld
idivb
xor
mov
push
or
jno
push
mov
pushl
mov
inc
rclb
clc
loop
ss
in
lcall
stos
pop
pop
movsb
pop
mov
add
call
jecxz
dec
cmc
xor
dec
xor
jnp
push
sbb
mov
xchg
inc
insb
adc
and
lods
cmp
dec
test
mov
fcomip
das
ljmp
push
jae
cwtl
dec
into
push
lcall
jg
cmp
dec
imul
cmp
test
jns
mov
adc
cli
add
push
pushl
loope
inc
cmp
cmp
enter
cwtl
fwait
sbb
cmp
pusha
xchg
inc
sbb
dec
les
call
push
push
dec
mov
or
outsb
cmp
lcall
repz
xchg
push
enter
mov
hlt
rcr
insl
xlat
movsb
push
jl
lahf
and
mov
nop
jb
push
test
mov
lock
nop
adc
sti
jmp
popf
xor
imul
push
fistl
int3
or
inc
inc
jg
lret
clc
or
mov
xor
pop
std
mov
leave
cmp
call
sar
decl
push
scas
xor
in
fcomi
aad
fistpll
jl
fisttpl
push
inc
rol
sub
decl
jae
js
xchg
add
lods
out
data16
lcall
ljmp
scas
ss
test
bound
pop
xor
adc
aad
push
mov
push
jecxz
mov
mov
dec
fs
dec
icebp
sarw
and
pop
mov
loope
mov
pop
loop
and
adc
push
mov
fbstp
push
push
pop
sbb
mov
xchg
ljmp
push
xchg
lahf
adc
inc
pushf
das
jno
mov
mov
jae
decl
sar
jne
mov
push
outsl
ja
daa
sti
out
add
sbb
push
cld
outsl
and
dec
xchg
and
xchg
adc
test
lcall
repnz
sub
push
mov
cld
fistps
dec
push
mov
adc
sub
and
shrb
adc
dec
repnz
pushf
jns
pop
lods
sub
sbb
in
pop
xchg
xor
stos
cmpsl
inc
nop
or
lcall
jnp
sbb
add
and
xor
fs
jo
xchg
out
scas
filds
je
sbb
incl
adc
mov
push
push
mov
or
jo
dec
xchg
mov
in
outsl
nop
mov
sbb
sbb
inc
fsubl
std
mov
xchg
dec
das
xor
pushl
inc
xor
int3
jne
insb
movsb
xlat
jecxz
sar
decl
or
hlt
pop
sbb
inc
push
int3
jo
mov
xor
or
fdivrp
cmp
xor
mov
dec
loope
cltd
into
rcrb
sbb
fisubl
movaps
jge
mov
mov
xor
jb
es
sub
popa
mov
nop
cwtl
xchg
lahf
lods
cmp
jmp
cmp
sub
jne
js
mov
loop
mov
mov
movsb
mov
mov
pop
fisttps
imul
decl
shrl
sub
arpl
inc
mov
test
js
jg
bnd
xor
cmp
bound
push
mov
in
ret
cmc
clc
mov
pushl
imul
sbb
lahf
repnz
cmp
push
mov
aam
ljmp
hlt
ret
into
xor
sub
cmp
cmpsb
mov
gs
popa
incl
mov
dec
addr16
xlat
pop
mov
add
insb
pop
inc
mov
lcall
lea
rcll
mov
fmull
xchg
loopne
adc
les
call
fcomps
incl
xchg
fdivrp
lret
jnp
inc
fisttpll
mov
hlt
fsubs
sar
decl
aam
icebp
cld
pop
lea
mov
mov
pop
jmp
movsl
dec
mov
int3
mov
and
les
call
enter
test
mov
repz
mov
mov
pop
je
test
jo
cld
dec
and
mov
loop
xor
push
or
push
pop
test
sub
dec
lcall
add
cld
in
push
fisubrl
jle
ss
sbb
jnp
cmpsl
pop
loop
mov
push
je
dec
adc
adc
in
dec
mov
loop
sub
add
xchg
mov
hlt
loop
sub
jmp
cld
push
loopne
outsb
in
je
or
lret
add
and
jbe
cld
lds
rcrl
push
je
scas
cwtl
jns
xor
dec
aaa
dec
or
xchg
repnz
and
cmp
or
arpl
shlb
cmp
xchg
ljmp
loope
enter
sbb
fldl
push
cmp
jp
jg
dec
icebp
imul
movsl
jle
inc
add
popf
dec
stos
aad
jno
pusha
mov
fdivrs
jbe
cmp
shrb
lcall
and
jg
pop
dec
fadds
test
pushf
xchg
mov
ss
into
cmp
incl
mov
fst
nop
cmp
mov
cld
adc
sub
icebp
dec
xor
loope
xor
bound
and
adc
jge
adc
mov
jge
xor
out
in
inc
adc
loope
sub
ljmp
cmpsl
movsb
ret
jg
xchg
mov
enter
xor
inc
imulb
sub
lcall
adc
out
fisubrs
test
mov
outsb
lret
dec
xchg
xchg
mov
loope
xchg
add
jmp
outsb
push
mov
and
rorb
scas
mov
or
cmp
mov
ljmp
jbe
iret
jmp
adc
test
jmp
in
aas
xchg
cmpsb
jecxz
mov
in
sbb
xor
dec
cmp
push
insl
into
and
cmp
inc
cmpsb
push
mov
sbb
fnstcw
imul
jge
outsl
loopne
jo
xlat
sbb
nop
es
faddl
or
xchg
call
fs
es
mov
cmpsl
mov
xchg
jno
orb
and
test
test
call
fsubrl
and
scas
ds
pop
xor
inc
push
xchg
mov
pop
jno
xchg
xor
mov
rol
lods
dec
dec
xor
ljmp
jo
cmpsb
sub
fildll
notl
dec
jnp
clc
pop
std
sbb
lock
mov
dec
inc
rcrl
and
mov
add
bound
movsb
sub
mov
cmpsl
incl
idivb
bound
xor
outsl
pop
dec
imul
adc
jmp
jo
add
xor
jnp
xor
jno
dec
mov
cmc
xchg
mov
test
in
xchg
into
stc
std
xchg
ja
repz
fst
stc
pop
or
sub
mov
std
aam
decl
imul
aad
add
add
dec
push
loope
lret
add
pop
icebp
lcall
sbbl
adc
adc
aad
push
pop
adc
pop
insb
pushl
iret
daa
mov
out
mov
xor
scas
cmp
mov
inc
jmp
decl
dec
fiaddl
xchg
test
inc
jp
lock
loop
jg
jg
push
ss
std
sbb
sarl
pop
jge
mov
decl
ret
xchg
ljmp
repnz
test
sahf
or
cld
outsb
xchg
jne
ret
ljmp
push
pushf
push
in
sub
bound
mov
adc
mov
pop
mov
gs
xor
jb
jo
bound
leave
adc
fld
pop
pop
or
xchg
push
aad
shll
push
in
lds
xchg
adc
or
jmp
and
mov
mov
stos
mov
rclb
sub
dec
loopne
sub
test
daa
sub
call
push
jg
jmp
mov
leave
sub
add
test
adc
mov
cmp
and
jae
jo
jg
lods
js
sar
ljmp
gs
mov
jne
or
stos
cmc
xchg
adc
push
mov
call
mov
mov
call
mov
pop
call
call
and
add
cmp
mov
fwait
shll
sarl
inc
int
shrb
aaa
lcall
outsb
insb
pop
inc
pop
test
rcr
mov
xlat
popa
push
test
mov
adc
xor
inc
add
leave
cltd
in
xorl
pop
and
push
or
pushl
sub
enter
test
mov
sahf
pop
cmp
mov
test
test
in
mov
test
aas
push
pop
mov
lds
fbld
call
fs
subb
pop
fidivrl
cs
test
xor
testb
dec
sbb
ret
cmpsb
aaa
sahf
out
test
into
ljmp
fildll
decb
incl
into
cmp
inc
xor
daa
test
mov
pop
jno
pop
add
xchg
loop
incl
cld
jmp
sub
sbb
pop
push
shlb
add
jns
cmp
bound
sbb
mov
gs
repnz
pop
pop
pop
push
ljmp
in
adc
mov
xor
sahf
cmp
push
shll
push
mov
clc
ljmp
inc
orb
cmp
js
mov
std
cmp
ljmp
push
adc
test
xchg
lods
int
cld
push
sbb
call
bound
and
int3
inc
fistpll
pop
push
cltd
pop
js
and
inc
cld
sub
mov
rorl
decl
sub
mov
xchg
ljmp
pop
sub
ljmp
test
jg
add
mov
pop
enter
or
mov
lret
pmaxsw
xchg
in
ja
rorb
push
xor
lea
orl
ljmp
mov
push
stos
adc
shll
imul
push
insl
je
mov
sub
adc
ljmp
cmp
xor
inc
into
mov
inc
jo
out
ljmp
call
xchg
mov
or
out
xlat
aad
jno
jo
sti
ds
sbb
or
cli
push
dec
stos
dec
or
fistps
cld
rcrb
jg
xchg
test
outsb
cmpsl
and
into
cwtl
out
jnp
mov
orb
ljmp
dec
push
xchg
mov
into
mov
xchg
fdivl
sti
pushl
orb
xchg
jnp
jmp
or
pop
adc
addb
loop
xlat
incl
in
mov
sbb
ljmp
mov
call
sub
xor
lods
mov
jge
jmp
ljmp
das
mov
push
xchg
xlat
incl
dec
into
addr16
jl
daa
daa
mov
mov
pop
mov
in
aad
xor
sbb
loope
mov
push
fisubl
scas
inc
pop
loop
loop
pop
jne
cmp
incl
jle
push
jb
orb
push
inc
dec
orb
je
incl
or
test
in
scas
imul
push
jg
gs
mov
aad
arpl
add
adc
cld
fistl
fwait
sub
sbb
cmp
mov
push
lcall
xor
mov
or
cld
adc
loope
sbb
jge
jns
stos
js,pt
add
imul
loope
shlb
es
pop
and
sarb
push
in
je
int
lea
popf
mov
in
popf
xor
sbb
push
mov
lcall
clc
mov
add
push
add
push
in
sub
or
decl
dec
pop
movsl
xor
loopne
lahf
fstpl
ss
call
repnz
pop
decl
out
loop
xor
aaa
adc
and
loop
xor
call
std
cmp
es
sub
mov
imul
ret
fbld
jl
in
jge
negb
and
mov
or
mov
pop
ja
push
sbb
or
jnp
mov
inc
mov
notb
movl
or
loope
inc
mov
xor
xlat
mov
jne
aaa
int
iret
popf
cwtl
xchg
imul
mov
xor
faddl
sub
in
mov
jg
fidivrl
and
push
sbb
cmpsl
inc
jl
incl
jb
cmpsb
pop
lret
or
push
add
xorl
fcomip
inc
ljmp
xor
rcll
lea
lods
jo
icebp
ss
sti
mov
mulps
cmp
dec
inc
test
xor
aam
call
ljmp
add
cld
xchg
notb
les
jg
call
xor
das
inc
push
adc
je
xor
add
pop
cmp
adc
pop
xchg
jg
jno
lahf
push
push
and
ret
adc
pusha
pop
push
push
ret
jmp
loope
adc
or
out
adc
mov
push
pop
cmpsb
add
lcall
faddl
push
mov
push
or
jge
jmp
or
les
sar
ds
dec
data16
loope
stc
mov
inc
pop
ljmp
lock
loope
mov
repnz
dec
loop
inc
mov
movsl
pop
in
inc
scas
test
insb
xlat
push
fs
add
test
mov
jbe
push
std
lcall
and
bound
sarl
into
xchg
jmp
decl
pop
aam
cltd
fwait
cld
jnp
sub
int
mov
sar
pop
shrb
adc
pop
mov
std
stos
shrb
adc
lcall
mov
js
xchg
push
mov
clc
aad
push
mov
cli
aaa
or
lahf
imul
hlt
sub
out
mov
scas
or
test
mov
and
dec
aad
mov
fwait
inc
sbb
incl
ss
fisttpll
mov
cmp
cmp
sbb
pop
jmp
mov
xchg
int3
dec
mov
fdivl
lock
pop
add
pop
aaa
js
hlt
adc
stos
cmp
pushl
in
out
fisttpl
imul
test
xor
xchg
mov
sub
ljmp
jg
jl
sahf
lcall
dec
outsb
outsl
sbb
movsb
and
cli
outsl
lcall
sti
outsb
jl
xor
sub
cmp
mov
xchg
jo
scas
mov
jmp
movsl
jecxz
test
and
popa
lea
decl
jo
iret
hlt
imul
movsl
adc
pusha
movsb
sub
push
iret
jecxz
pushl
or
fsts
push
dec
nop
in
mov
adc
xchg
sub
sub
rorb
js
daa
je
cmp
cmp
push
dec
sub
jg
mov
jp
insb
cli
push
insb
lret
pusha
lret
or
mov
inc
add
pushl
add
adc
or
test
pop
decl
pop
insl
mov
pop
call
cltd
sbb
push
adc
pushf
mov
sahf
dec
addr16
xchg
aaa
inc
nop
lcall
xor
adc
add
inc
xchg
iret
pop
sub
ljmp
test
and
insl
jne
push
pusha
stc
adc
adcb
mov
sbb
jg
decl
adc
jnp
add
cmp
popf
repnz
jmp
test
out
rcl
call
ret
pop
mov
xorl
bound
push
lea
xchg
jg
aam
cli
ljmp
in
sub
adc
mov
xlat
flds
and
xorb
jae
call
dec
js
fdiv
mov
mov
test
rcr
and
arpl
call
xor
cmp
inc
xor
enter
es
js
incl
jl
cli
push
mov
nop
fadd
adc
js
sub
fcom
fcomip
inc
mov
aam
mulb
fisubrs
push
call
sub
lcall
scas
in
aas
cmp
cmp
fiadds
je
pop
out
and
push
out
cmpsb
ret
cmp
mov
cmp
adc
in
call
adc
enter
lcall
icebp
sbb
dec
test
xchg
mov
jmp
sarl
jbe
ja
push
cmc
and
jle
popa
cmp
mov
int
lcall
mov
stos
push
mov
or
mov
jle
and
dec
mov
ljmp
pop
or
mov
stc
pop
or
loop
ljmp
jecxz
sahf
test
in
add
decl
roll
sbb
xchg
pop
sub
lahf
mov
push
leave
cmp
rorl
int
sub
xor
or
and
xchg
or
lcall
das
xchg
movsl
ds
and
sub
adc
mov
pop
inc
mov
xchg
cmpsl
loop
xlat
dec
and
xor
std
xor
jnp
lcall
in
in
push
sub
or
dec
mov
xchg
movsb
and
inc
repnz
xchg
fs
pop
or
jb
pop
sbb
mov
and
js
cltd
or
ljmp
xor
lods
sub
add
dec
jg
in
xor
adc
out
scas
jnp
pushf
fwait
sar
mov
or
push
or
movsb
mov
mov
jne
outsl
xchg
sub
jecxz
jbe
mov
int
push
ljmp
jmp
xchg
shr
push
cmp
rcl
cld
scas
inc
lods
gs
enter
adc
or
pop
add
daa
dec
in
repz
imul
sub
aam
inc
inc
mov
stos
fsubrs
xchg
and
scas
lods
mov
ror
dec
cmp
movsl
test
add
and
lods
cwtl
mov
xchg
call
mov
mull
int3
xchg
and
or
mov
cmc
xor
xchg
add
decl
iret
add
js
test
mov
lods
test
aad
dec
inc
xchg
iret
lcall
sub
pop
lret
test
pop
int
or
inc
push
push
xor
fdivrl
ja
ljmp
into
scas
out
imull
xchg
push
sbb
push
mov
stos
repz
pushl
decb
mov
in
cmc
insl
push
imul
pop
inc
incl
ja
mov
movsb
lcall
mov
xchg
mov
stos
sbb
inc
shlb
scas
add
add
sub
loope
mov
xorl
repz
cmc
mov
test
lret
out
ret
add
pop
mov
pop
outsb
popa
mov
pushl
scas
cmp
sub
fldcw
ljmp
out
out
jmp
cmp
cmp
js
push
syscall
pop
out
mov
fisttpll
push
pusha
push
pusha
subb
out
clc
jmp
push
inc
mov
or
xchg
push
and
lea
cmp
sar
out
mov
jp
push
clc
cmp
ret
lret
ljmp
ja
dec
clc
push
push
push
stos
sub
fimull
ljmp
xor
jecxz
cld
fildl
mov
shl
mov
mov
cld
push
mov
lock
in
xchg
and
aaa
cmp
cmp
push
stos
cld
fs
add
dec
mov
cs
scas
mov
movsb
fcmovnbe
xor
enter
ja
incl
adc
icebp
shrl
popf
outsl
outsl
dec
lock
inc
add
mov
decl
lds
xor
call
mov
xchg
jle
clc
lods
pop
imul
inc
stos
call
repz
out
idiv
mov
adc
or
mov
push
sbb
pop
jmp
sahf
cmpsb
xor
push
pop
pop
push
adc
ja
enter
add
decl
cmc
mov
popf
shl
lea
sti
jl
ficoms
cmpsl
pop
bnd
xlat
cld
shll
pop
test
pushl
xor
xchg
cmp
shrl
orb
jae
jle
cld
mov
js
xchg
push
clc
sti
fdivs
nop
lods
dec
stos
sbb
pop
jno
add
loope
xorb
les
outsb
sub
cmp
jb
jl
insb
dec
cld
mov
popa
cs
pushl
adc
push
mov
cmc
out
or
into
popa
mov
idivl
rcrb
icebp
dec
lcall
aaa
sub
mov
fcoms
mov
clc
push
push
jns
mov
cmc
out
jae
cmp
in
dec
into
add
call
and
pop
mov
imul
insl
test
pushl
fildll
xchg
leave
and
pop
jge
iret
adc
xchg
jo
inc
sub
pop
outsl
adc
call
mov
mov
push
iret
inc
sub
hlt
and
push
xchg
jecxz
adc
int
cld
add
jo
lea
int
shrb
and
call
push
rcl
sbb
int
lea
and
insl
insl
sbb
insl
jmp
jl
pop
bound
incb
fnstenv
fistps
mov
push
scas
js
cmp
xor
or
mov
aam
sub
jmp
xchg
test
mov
push
lods
rcrl
jmp
inc
bound
mov
rcrl
aaa
ljmp
mov
outsl
jecxz
jo
out
fs
out
fs
inc
sub
int3
add
addr16
inc
dec
fisttps
xor
int3
roll
and
fs
stos
pop
loopne
sbb
mov
mov
out
cli
lock
jne
ljmp
data16
and
inc
dec
decl
movsb
xchg
ficoms
inc
mov
push
ret
mov
mov
inc
push
out
jg
out
mov
pushw
ss
xor
js
scas
dec
mov
mov
and
into
incl
push
mov
int
mov
xor
mov
push
xor
insl
dec
pusha
push
add
roll
pop
jg
jle
pop
frstor
test
xchg
ljmp
out
mov
pushf
or
jg
aad
enter
add
addr16
sub
and
and
adc
into
or
mov
sbb
or
inc
dec
xor
mov
mov
test
sbb
dec
jo
sub
jg
jg
mov
sub
aaa
call
push
mov
sub
jb
jmp
stos
daa
adc
ljmp
sti
pop
add
enter
jle
or
sti
cli
decl
add
pand
negb
fstl
out
loop
pop
cmpsb
mov
leave
lods
xor
or
insb
and
fdivl
inc
das
cli
incl
stos
xor
int
lahf
pusha
aam
cmp
arpl
mov
mov
loope
cld
mov
mov
jge
das
ljmp
jb
pop
ficoml
dec
sbb
inc
sbb
fucomp
lret
sub
jbe
sysenter
inc
jecxz
cli
sub
data16
in
push
rol
and
jecxz
outsl
insl
add
out
or
lods
test
scas
clc
push
sbb
mov
popf
pop
nop
out
or
dec
dec
add
int
push
xor
mov
jg
daa
lcall
loopne
in
xchg
int
addb
inc
adc
push
js
add
mov
cmp
repnz
cli
push
scas
pop
unpckhps
mov
sbb
sbb
les
pop
lret
or
or
dec
sahf
bound
cmp
mov
aam
cmpsb
popa
add
addl
leave
adcl
push
dec
inc
clc
push
js
or
push
stc
xchg
outsl
lock
add
sti
in
ja
iret
ja
jnp
mov
mov
lods
xchg
jbe
pop
dec
loope
test
mov
lahf
clc
lea
add
mov
ret
jno
outsl
scas
nop
jle
mov
fbld
and
adc
arpl
leave
jns
push
daa
repz
ljmp
scas
mov
call
mov
mov
notb
mov
fstpt
or
call
loopne
gs
xor
jl
xchg
nop
scas
cli
sub
pop
inc
pop
jg
decl
pop
in
jnp
mov
and
pop
scas
push
adc
orl
incl
sub
jle
pushw
sbb
scas
ja
or
lcall
cmp
lds
sub
push
or
cmpsb
arpl
push
loopne
pushl
lock
movsb
or
inc
xchg
icebp
or
addr16
ljmp
ret
loopne
xchg
test
xor
pop
sarl
or
and
mov
sub
cwtl
ja
sub
push
outsb
dec
stos
jl
sbbb
popf
out
adc
das
shlb
insb
fisubrl
xchg
fs
pusha
xchg
and
add
inc
and
jg
sub
dec
dec
dec
dec
jbe
test
call
nop
cmpsl
dec
sbbl
aaa
test
icebp
sub
pop
cmp
and
repz
jmp
insl
push
fists
inc
stos
cmc
xchg
pop
ret
mov
out
sub
xor
xchg
fistpll
mov
mov
decl
mov
push
idivl
push
clc
mov
orb
pushl
movsb
or
push
dec
sbb
xchg
dec
ret
push
fidivs
sahf
iret
mov
scas
andl
lcall
gs
cltd
repnz
outsb
jne
orb
push
sub
imul
jbe
jle
stc
pushl
xlat
add
xchg
cmp
pop
or
and
mov
lods
fimuls
divb
aad
jbe
shlb
jl
push
in
sbbb
sbb
pop
cld
stc
mov
push
cmp
into
pop
cmp
sbb
decl
adc
pop
jnp
testl
fwait
outsb
or
in
rcr
aam
incl
xor
push
fwait
dec
enter
and
push
imul
push
cld
pushl
jnp
fsubrs
mov
daa
xchg
mov
iret
inc
sub
dec
cmpsb
mov
dec
jmp
incl
in
int3
or
ret
fwait
jns
jno
and
hlt
outsb
imul
stc
cmpsb
in
and
repnz
and
test
pop
andb
ljmp
push
or
push
mov
jns
jne
lahf
mov
xor
je
ret
ja
or
dec
mov
jmp
lods
dec
nop
fisttpl
dec
stos
sub
xchg
push
add
xlat
pop
add
mov
and
ja
dec
mov
das
and
hlt
push
idivl
lcall
fldt
stos
clc
das
xchg
pop
adc
mov
dec
enter
scas
mov
sbb
mov
sbb
pop
or
incl
xchg
and
cmp
pop
dec
in
inc
cli
call
cli
mov
mov
mov
repz
das
or
jge
repnz
call
jne
repz
decl
cmpsl
in
sbb
fldl2t
push
pop
mov
ss
dec
es
lcall
mov
mov
or
add
dec
dec
or
and
fistpll
ds
pusha
xchg
inc
pop
nop
shlb
je
cmpsb
lods
sti
pushl
clc
add
stos
outsb
aam
bswap
pop
jle
dec
lea
lea
out
out
ja
jg
mov
shrb
and
pushf
pop
xor
and
push
rol
mov
enter
stc
lahf
hlt
xor
test
add
out
add
dec
adc
ret
dec
aaa
sbb
lds
cmp
fcoms
or
add
sub
popf
lcall
jecxz
mov
sub
jae
adcl
ret
out
lret
sub
cs
push
sub
cmpsb
out
jmp
mov
int3
sbb
mov
dec
adcb
mov
imul
xchg
mov
enter
dec
jg
rcll
xor
aas
sarb
jecxz
sub
addb
add
mov
and
mov
decl
xchg
inc
mov
aam
ljmp
cmp
sub
data16
xchg
fwait
test
jecxz
ja
pop
jge
stc
adc
es
add
lcall
adc
loop
dec
sub
repz
jge
add
sahf
arpl
subl
add
incl
cmp
and
mov
fadds
push
dec
mov
aad
mov
and
lock
and
or
inc
ljmp
mov
mov
xchg
testb
popf
ret
pop
pop
lds
cmp
jg
iret
out
xor
fcoms
pop
xchg
call
mov
dec
lcall
push
and
icebp
jge
push
cltd
mov
dec
dec
bound
incl
sbb
sub
shl
pop
add
stos
push
xlat
xchg
into
inc
mov
gs
jbe
push
negl
fdivl
clc
or
lret
cmp
inc
aaa
and
ljmp
aam
arpl
inc
mov
adc
sbb
scas
imul
adc
incl
test
es
aad
xor
cmp
inc
mov
jecxz
ljmp
and
or
or
xchg
lcall
ja
lock
lcall
push
and
pop
fwait
push
subb
stos
sti
out
loop
popf
inc
mov
pop
pusha
dec
ret
cmp
fnsave
xor
xchg
scas
jecxz
push
loope
es
dec
pusha
sbb
jns
insl
fs
insb
sti
push
add
sti
lcall
inc
xor
xchg
mov
push
pop
test
pop
jno
pop
xchg
pushw
push
sub
or
mov
leave
mov
adc
mov
mov
imul
and
mov
out
arpl
xor
incl
testl
dec
jmp
mov
mov
push
nop
std
pop
jge
popf
adc
out
inc
mov
add
std
insl
adc
adc
ljmp
loopne
leave
jmp
loope
jle
and
popa
out
or
xor
dec
or
push
jmp
sahf
aam
mov
mov
stos
enter
pop
outsl
jp
jg
and
ss
lods
jnp
pop
xchg
hlt
or
es
pushl
mov
testb
mov
es
mov
jns
fsubs
int
lods
push
scas
push
mov
clc
mov
fcmovb
gs
cmp
ljmp
jns
dec
mov
or
cli
js
shlb
mov
ret
test
das
cmpsb
ljmp
add
imul
push
mov
call
cmp
adc
sarl
pop
or
mov
mov
xchg
jbe
and
decl
sub
mov
fucomip
mov
fsts
call
push
insl
jb
inc
nop
add
push
dec
add
sub
cld
ljmp
cmc
outsl
insb
cmpsl
movb
pop
and
xor
aas
jae
fwait
xchg
push
fdivr
call
lcall
int3
call
mov
cmp
lahf
cltd
fisubrl
ljmp
cmp
jecxz
fldt
cmpsb
fbstp
and
lcall
test
inc
movaps
push
jmp
stos
pop
xlat
mulb
pop
dec
fiadds
ja
test
out
cmp
jl
icebp
inc
xor
jne
jg
icebp
jp
int
mov
out
or
lret
push
lcall
movsb
jbe
dec
dec
out
jno
jb
jl
mov
and
inc
pushl
sbb
cmpsl
or
fwait
test
insl
shl
hlt
repz
cmp
cmp
mov
data16
push
mov
ljmp
or
push
mov
or
repnz
in
add
mov
int3
xor
add
enter
lcall
ss
out
out
into
add
or
mov
in
or
scas
lcall
ljmp
cld
loope
dec
movsb
aam
mov
mov
in
sbb
and
cmpsb
mov
xlat
ljmp
jno
jmp
adc
das
adc
ljmp
push
sbb
xor
icebp
out
cltd
mov
push
lods
and
clc
jle
lock
ja
outsl
mov
add
fwait
call
popa
loop
inc
lahf
dec
stos
push
repnz
pop
dec
lret
cmpsb
shrl
out
xor
jecxz
jns
lret
xchg
jmp
xor
in
or
inc
adc
jmp
cmpl
lcall
mov
mov
jp
sbb
mov
jo
movsl
xor
or
int
push
fwait
adc
or
clc
jmp
fistpll
lea
dec
fmulp
xchg
jg
sub
lret
gs
xlat
push
inc
pushf
and
incl
sbb
pop
adc
pop
or
jle
daa
mov
fbld
js
adc
outsb
mov
shll
pop
jg
nop
push
xor
rcl
lcall
mov
ljmp
mov
sub
pop
cs
scas
cwtl
lock
shll
xchg
movsb
lcall
loop
pusha
cmp
mov
jle
inc
inc
aaa
or
pop
xor
mov
gs
jp
xor
outsb
jnp
repnz
movb
mov
ljmp
mov
dec
push
insl
mov
sbb
icebp
pop
xchg
lret
mov
cwtl
test
mov
inc
sbb
sbb
stos
insb
add
cmpsl
pop
in
xlat
outsb
je
xchg
dec
stos
cmp
mov
and
and
aam
jp
jmp
gs
pop
rcll
add
sub
or
ljmp
fiaddl
xchg
popf
in
or
repnz
jle
mov
outsl
clc
fisttpl
push
push
push
cmpsb
movsl
jnp
scas
arpl
movsb
mov
imul
fs
iret
sahf
push
mov
and
lret
insl
xor
mov
stos
adc
mov
xchg
rcll
jle
pop
mov
inc
mov
pop
sbb
lock
incl
ret
or
enter
inc
shll
adcb
insl
mov
inc
mov
addl
pop
lock
jle
repnz
insb
cmp
push
outsb
mov
rol
pop
jmp
scas
mov
sbbb
sbb
xchg
pop
mov
xorl
iret
rolb
stc
push
jns
adc
jae
ja
pop
xchg
ret
sub
pop
push
or
xor
pushf
jb
mov
ss
daa
mov
mov
stc
mov
dec
sub
lcall
mov
jmp
fsubl
adc
scas
jmp
dec
fadd
iret
les
mov
push
loop
sbb
and
movl
aam
xor
cs
dec
fcomps
decl
fwait
clc
mov
gs
pop
cs
cmp
push
cmp
xor
add
test
loope
push
pop
jl
mov
push
mov
repnz
cmp
and
arpl
ret
jb
or
push
and
int3
mov
mov
pop
inc
push
jp
inc
push
mov
dec
inc
dec
aas
sub
pushf
leave
xchg
or
sub
jb
in
fs
stos
cli
mov
std
aam
repz
push
mov
dec
mov
movsb
dec
jmp
push
hlt
sub
lahf
xor
lods
in
pusha
mov
sbb
push
aaa
and
aaa
sbb
les
lods
add
jns
stc
xchg
fwait
mov
inc
cmp
dec
enter
fldl
mov
iret
jp
jg
mov
add
int
mov
and
lods
push
sbb
aas
loop
cmpsb
decl
fistpll
loope
mov
into
or
mov
and
sub
lock
cmp
adc
repnz
cmp
ss
rcll
mov
movl
testl
dec
aas
std
push
push
cmp
jmp
xor
icebp
adc
lods
out
pushf
mov
pop
ret
arpl
inc
pushl
loopne
cmpsl
test
pop
mov
and
xchg
fadds
stc
jmp
mov
dec
outsl
and
ljmp
stc
mov
cltd
fwait
adc
or
out
lcall
andb
sub
jg
push
aam
or
sbb
lods
imul
mov
stc
decb
inc
fwait
lahf
push
jmp
lds
pop
adc
cmp
adc
mov
jl
sbb
cltd
xchg
lahf
mov
pop
mov
jb
cld
xchg
adc
xchg
in
mov
jmp
addr16
fwait
aas
mov
push
inc
lods
outsb
movsl
stos
pop
inc
mov
outsb
enter
ret
cmp
xchg
push
adc
mov
inc
addr16
sti
mov
inc
cmc
cwtl
aad
or
lcall
shr
xor
sbb
jp
push
sbb
pusha
dec
leave
push
ss
pushf
fldenv
testb
stos
lahf
adc
movsl
adc
mov
arpl
or
mov
test
out
cmpb
mov
mov
mov
and
add
je
jb
cs
dec
out
add
mov
out
fldt
pushl
stos
lods
test
xor
icebp
mov
out
push
imul
mov
ljmp
push
sbb
push
pop
movsl
adc
push
es
lea
sub
insb
rclb
cmp
sub
loopne
cmp
xchg
cld
cmpsb
sti
mov
adc
icebp
leave
stos
call
xor
lds
adc
jg
sub
dec
fwait
aam
inc
xchg
mov
ljmp
decb
xor
inc
adc
push
lahf
dec
adc
fwait
mov
and
std
xor
mov
push
mov
dec
adc
mov
dec
push
mov
fs
movsb
or
fisttps
dec
push
sub
jne
xlat
cld
mov
adc
sub
sar
cwtl
cmp
mov
imul
stos
test
loopne
pushl
insl
stos
call
mov
push
push
mov
paddusb
mov
mov
out
clc
nop
scas
push
aaa
sub
sub
stc
mov
sti
push
rorb
fsubl
fwait
decl
xchg
dec
sub
inc
mov
cld
stos
mov
cltd
cmpsl
sbb
sar
ljmp
fisttpl
gs
test
addr16
out
cmc
and
pop
push
nop
mov
fcmovnb
arpl
popa
add
idiv
jmp
pop
mov
subl
movsb
pop
stos
push
and
fimull
lret
mov
clc
dec
les
gs
push
fists
inc
insl
sar
ljmp
cwtl
push
fsubl
dec
mov
adc
xchg
int3
movsb
mov
decl
gs
popa
adc
mov
fcoms
loopne
movsl
lahf
xor
or
pushl
inc
fnstcw
test
push
mov
xchg
int
or
mov
adc
sti
aad
sar
jl
push
imul
movsb
add
jg
std
push
mov
outsb
add
jmp
nop
cmp
dec
mov
daa
cltd
lahf
inc
xor
fsubs
imul
xchg
pop
and
decl
fsubp
add
mov
fcomip
inc
sbb
ljmp
repz
rcrl
call
cld
pushl
lahf
push
in
out
add
cltd
es
aam
vpmacssww
scas
movsl
bound
adc
cmp
push
fs
or
push
shrl
push
mov
jp
cmp
or
imul
mov
push
xchg
gs
jmp
lcall
sarb
jge
dec
mov
jb
add
ljmp
js
stos
adc
call
fmuls
sti
xor
pavgw
xchg
xchg
ror
lods
push
inc
dec
mov
ljmp
lret
sbb
int3
push
loope
repz
add
andb
cwtl
outsb
jb
jg
incl
lock
xlat
inc
pusha
data16
push
pop
lea
ja
out
fdivl
or
lahf
push
cmpsl
mov
hlt
cmc
cmp
cmp
out
jns
aad
sahf
mov
loopne
insl
jae
pop
jns
xchg
clc
sbb
jmp
dec
cmp
out
xchg
cmp
pop
jne
test
sti
scas
out
adc
ljmp
bswap
das
push
in
repz
xchg
movsb
cmp
sbb
shl
cmc
sub
cld
call
mov
ret
cltd
add
mov
inc
push
test
inc
push
sbb
ret
jg
add
jg
aad
outsb
stos
repz
pop
cmp
aas
mov
jns
mov
adc
mov
xchg
or
int
lcall
push
lods
xchg
sbb
cmp
cli
rcrl
cli
dec
inc
inc
js
or
or
mov
cld
cli
sti
addb
std
mov
ds
sbb
jp
and
pushl
mov
pop
mov
pop
sbb
subb
and
jl
mov
int
sub
and
das
rcrb
mov
push
notb
push
das
popa
pop
mov
decl
lods
mov
iret
sbb
jl
sub
insl
lahf
xor
ljmp
movsb
add
jnp
fmull
mov
add
mov
jo
lcall
mov
lods
shll
ja
icebp
sbb
pop
sub
sbb
push
fwait
das
sar
mov
jno
xchg
xchg
popa
jmpw
or
in
pusha
loope
push
lret
ljmp
or
test
jmp
push
push
dec
stos
mov
mov
mov
movsb
jb
mov
pushl
cwtl
and
inc
aad
js
push
sti
call
aaa
pop
shll
outsl
js
mov
in
ja
jmp
popa
push
in
fwait
ds
call
lds
fbld
xchg
out
cwtl
scas
xchg
sbbb
ljmp
data16
dec
clc
or
mov
adc
mov
fisttps
jmp
lret
cli
popf
xor
movsl
dec
mov
cmpsb
push
cld
mov
inc
jno
fmuls
stc
push
adc
jmp
pusha
adc
aam
inc
hlt
pop
lret
je
and
das
mov
enter
push
jb
mov
add
add
rcll
push
out
sub
mov
fcom
and
mov
cmp
stc
mov
movsl
iret
adc
mov
int
or
pop
xchg
aas
pop
cmp
mov
mov
jl
dec
int3
cltd
out
pop
dec
mov
lcall
pop
cld
jmp
popf
mov
cmp
xchg
icebp
stos
mov
mov
mov
ljmp
push
popa
inc
sti
push
xlat
or
push
dec
jne
std
cmp
pushl
sub
pop
pop
stos
mov
push
pop
and
roll
cmp
or
incl
sbb
pop
or
mov
outsl
inc
cwtl
adc
adc
loope
xchg
push
xor
jmp
mov
jns
pop
testb
dec
dec
lea
inc
outsl
push
add
test
jg
jp
lcall
xlat
inc
ret
fucom
push
jl
out
cld
xor
mov
into
adc
xchg
das
sar
mov
imul
testb
pop
orl
adc
jmp
lahf
cmpsb
mov
xchg
ljmp
push
add
mov
cmp
rcl
icebp
inc
mov
and
out
or
loop
jb
shlb
movsb
mov
mov
push
dec
jp
inc
lods
jmp
lcall
lcall
int3
xorl
mov
sbb
pushl
das
xchg
std
pop
loopne
shl
xor
xor
cs
fcmovnu
cs
pushl
outsb
pop
imul
xor
das
and
jbe
jne
imul
cmpsb
test
out
je
jae
mov
sub
adc
pushl
movsb
mov
jbe
icebp
aas
jo
mov
add
xor
push
iret
fsubrs
xorb
xchg
jmp
inc
mov
jle
dec
push
and
iret
inc
xor
lcall
ret
icebp
push
iret
enter
pop
stc
sbb
idivl
scas
incb
inc
sub
mov
das
mov
in
roll
sbb
movb
xor
jcxz
xorb
cli
jne
xchg
mov
xchg
lcall
jle
mov
mov
mov
in
push
call
mov
shlb
rcrb
mov
add
out
adc
mov
popa
inc
and
repnz
test
fcompl
mov
or
popa
movsl
test
incl
in
xchg
xor
jecxz
popa
shll
or
mov
pushl
mov
in
jo
xor
les
jns
dec
sub
fwait
push
insb
or
negb
or
loope
push
cld
jmp
cli
mov
mov
xchg
cld
add
pop
mov
cmovnp
ret
cmp
test
lods
jle
xor
fs
popf
lea
jno
stc
loopne
cld
pushl
mov
movb
mov
or
sti
imul
das
clc
call
aam
xor
rcr
add
xchg
sbb
add
mov
inc
ret
enter
pushl
stos
push
or
sar
push
outsl
rcrw
dec
mov
stos
mov
sbb
lock
das
outsl
pop
jecxz
adc
dec
pop
shll
popf
dec
push
inc
xchg
pushl
mov
mov
xchg
int3
sub
mov
js
mov
les
ret
push
or
sbb
push
mov
shl
push
clc
jmp
or
push
jo
ss
call
cld
mov
push
test
dec
ffreep
push
jp
pop
rorl
imul
fdivr
pushl
xchg
or
nop
jae
enter
and
repz
imul
jnp
rcrl
xor
mov
push
int3
fstpt
pusha
pop
stc
out
and
sub
test
cmp
ljmp
xor
jno
jecxz
loopne
cmp
clc
xchg
sarl
inc
sti
xchg
inc
add
lcall
sbb
jae
leave
icebp
sbb
cli
sub
and
or
jg
fsubs
cwtl
out
jns
jp
push
fcmovbe
sbb
and
sub
jmp
mov
fistpl
pop
mov
sub
out
into
dec
cmp
xor
and
and
cld
mov
call
mov
xorl
loopne
xchg
cmp
sub
dec
loop
lods
aad
pushl
cld
out
jle
in
in
fidivrs
test
aad
fiaddl
mov
push
aas
xchg
int
cld
jg
lea
pop
jb
xchg
cli
mov
pop
push
sarb
jg
shlb
push
push
out
ja
lock
push
inc
push
jo
arpl
inc
mov
cmpsb
pop
push
push
sub
adc
call
js
sub
scas
xchg
mov
mov
int
rcl
repnz
jg
inc
jle
scas
lahf
sub
cmp
lcall
hlt
mov
adcl
insl
test
jno
stc
outsl
mov
lock
xor
ljmp
push
ss
in
or
sbb
dec
inc
pusha
popf
mov
jno
fistpl
mov
mov
enter
xor
sub
mov
pop
mov
inc
cld
incl
fbstp
je
aas
lods
lret
in
lahf
jno
out
mov
loope
sbb
pushl
fdivs
push
xor
pop
cltd
adc
cmp
fdivrl
arpl
xor
adc
sbb
call
mov
add
sub
in
hlt
lods
adc
cmp
push
sbb
jbe
dec
push
rcrb
cmc
jge
inc
mov
mov
leave
ljmp
jo
mov
fs
dec
test
sub
inc
outsb
hlt
xor
bound
rcr
or
into
sub
dec
sahf
mov
iret
adc
fs
in
in
mov
icebp
in
pop
movl
jne
ljmp
pop
inc
fwait
or
push
je
mov
push
adc
lcall
dec
mov
sub
lcall
clc
scas
inc
lret
lret
dec
das
mov
cmpsb
cmc
push
test
icebp
ljmp
jp
addl
adc
jg
ljmp
fwait
ret
jae
hlt
jns
push
incl
insb
xchg
add
add
xchg
and
xchg
xlat
cmp
iret
je
jl
cmp
dec
ljmp
sarb
sub
daa
shlb
stc
cmp
pusha
sub
jg
adc
aad
lds
decl
pop
ja
mov
mov
sbbb
xor
clc
adc
lcall
dec
lods
and
aaa
test
test
jno
pop
lret
flds
cld
pop
dec
pop
jp
xor
jl
inc
cwtl
cmp
sbb
xlat
dec
int3
mov
inc
sbb
add
xchg
xchg
sti
xchg
lcall
adc
ja
movsl
loopne
js
mov
xlat
mov
addr16
inc
cmpsb
jmp
movsl
cmp
jecxz
es
jmp
es
in
mov
mov
fildll
pop
pop
leave
jecxz
push
inc
jge
sti
mov
imul
outsl
dec
xchg
push
mov
fisubrl
es
shlb
idivb
xchg
out
add
lahf
cmp
adc
pop
ret
pushl
or
push
mov
insb
aad
add
pop
sbb
add
out
fstps
sub
aaa
imul
js
aad
add
add
dec
xchg
cltd
push
mov
cmp
dec
jge
push
push
nop
cmp
push
xor
std
pop
xchg
pusha
mov
in
pop
decl
arpl
out
outsb
cmp
arpl
das
std
inc
push
mov
lods
call
jp
in
mov
mov
dec
jmp
jle
push
inc
rcl
sbb
jne
push
mov
inc
xchg
fdivrp
lcall
mov
mov
and
pusha
lock
sbb
addb
mov
lcall
jo
dec
and
adc
popf
subb
xchg
jmp
mov
mov
jg
mov
insl
fisubs
push
cmpb
fwait
lret
mov
sarb
aaa
cld
dec
fiadds
mov
loopne
mov
adc
jb
ja
ret
je
jle
sub
cmp
lcall
xchg
stos
lea
test
jl
mov
inc
and
cmpb
lods
mulb
sub
adc
arpl
mov
ljmp
sbb
into
lcall
dec
add
xchg
pop
fnstsw
ds
sbb
dec
push
jp
fmuls
shlb
or
ljmp
pop
insl
dec
fsub
hlt
pop
dec
mov
daa
pop
lret
hlt
call
pop
cmpb
or
jmp
repz
xchg
out
out
cmpsb
mov
xlat
aad
cltd
sbb
decl
out
aam
jl
sti
pop
into
jmp
mov
inc
mov
int
mov
incl
or
cmpsb
add
push
adc
cmp
sub
idiv
cmp
jecxz
xchg
and
jg
ljmp
push
aas
fsubl
dec
idivl
push
rorl
decl
roll
lock
enter
in
stos
idiv
mov
scas
adc
sbb
mov
js
call
out
jmp
mov
ss
cli
test
leave
leave
add
add
outsl
sbb
add
lcall
arpl
cmp
adc
dec
jbe
nop
mov
mov
lahf
clc
mov
dec
inc
aas
mov
add
push
in
js
push
in
aad
xor
fcos
outsl
fdiv
push
sbb
js
add
xchg
scas
xchg
repnz
stc
icebp
adc
loopne
pop
cld
ret
adc
xchg
mov
insb
push
mov
adc
ds
push
adc
test
mov
fimuls
std
cmp
inc
dec
push
xchg
rclb
jmp
mov
pop
fstpl
or
pusha
sbb
movsl
pop
mov
jp
addb
mov
test
incl
fs
out
push
cli
xchg
ss
sti
aas
xor
pop
xlat
pop
sti
lret
sbb
jecxz
ljmp
or
mov
and
mov
incl
fs
and
arpl
dec
pushf
lods
in
test
sbb
mov
xlat
out
outsb
dec
scas
or
pop
pop
push
testl
push
ret
rcrb
pop
add
shl
and
incl
add
sahf
je
xor
subl
shr
repz
cld
jle
xchg
pop
jl
push
cmpsl
out
xchg
popa
inc
pusha
pushf
je
in
sub
xchg
ljmp
xor
cmp
aas
xchg
mov
aas
in
movsl
sub
lcall
repz
jne
push
pop
jmp
inc
sti
je
add
jnp
pop
xchg
dec
ja
call
add
add
daa
popf
jg
lret
fcmovnu
jmp
decl
add
jae
cmpsl
ss
xor
aad
push
cli
fbld
sbb
lods
add
shll
cmp
mov
push
outsb
insl
sbb
mov
adc
cltd
xchg
adc
add
sub
pop
inc
stc
into
jns
lock
ljmp
cld
push
and
rcl
es
pop
mov
fldenv
cmp
cmp
call
clc
mov
dec
ljmp
cmpb
push
stos
imul
ds
lret
xor
xchg
ret
mov
test
idivb
popf
inc
cmc
into
sbb
pop
decl
decb
mov
dec
subb
sub
and
mov
push
xchg
adc
sti
lods
data16
pop
xor
push
cmpsl
mov
push
aad
sub
cmp
sub
pop
mov
ds
ljmp
das
cmp
cmp
xchg
jle
inc
nop
dec
movsb
in
mov
rorl
decl
shlb
xchg
scas
add
inc
add
mov
test
xchg
push
enter
pop
push
out
incl
ljmp
pop
outsb
xor
pop
lock
sti
cmp
loop
lods
xor
ljmp
mov
jecxz
je
loope
dec
loopne
imul
call
iret
push
mov
sub
push
mov
jl
jecxz
jb
nop
adc
incl
push
jnp
inc
inc
mov
test
sbb
adc
inc
jnp
out
push
mov
aam
lods
or
in
call
cli
data16
mov
jg
cmp
push
ljmp
cli
xchg
pusha
cmpsb
push
sub
mov
call
fs
outsl
xchg
jbe
decl
cltd
loope
mov
mov
out
lds
pop
mov
sbb
es
decl
aam
aas
cwtl
mov
fstpl
stos
pushf
xor
mov
lock
ljmp
nop
mov
and
js
or
cld
mov
pop
push
repnz
fdivrp
xchg
data16
incl
insb
data16
out
xor
cmp
sar
pop
xchg
mov
cld
ljmp
loop
pop
xor
cld
jns
fdivr
adc
xchg
out
jg
or
push
sti
push
push
lcall
nop
cmpsb
ret
sub
call
nop
clc
inc
std
aad
out
or
jecxz
daa
push
clc
add
mov
cwtl
dec
push
out
push
fists
mov
mov
sbb
lea
call
std
incl
or
cs
inc
xchg
bound
xchg
into
dec
out
sbb
mov
or
movsb
testb
incl
push
cmp
add
in
mov
stos
mov
inc
shrb
jns
fbld
push
cmpsb
pushf
push
out
xchg
inc
jbe
test
mov
fs
xchg
test
decl
sub
repnz
insl
jo
loopne
nop
imul
test
scas
cli
jmp
cltd
jnp
mov
imul
nop
mull
fldenv
add
loop
imul
mov
ljmp
daa
push
pop
and
sti
jnp
xchg
test
hlt
dec
adc
cwtl
xchg
cmpsl
dec
es
inc
popa
jbe
es
aaa
stos
in
cmp
shll
sbb
or
lcall
loopne
push
mov
push
repnz
cmp
push
enter
push
decl
insb
cmp
scas
mov
pop
mov
lret
adc
inc
cld
xchg
bound
daa
sahf
fidivl
or
out
sub
mov
pop
sub
scas
dec
or
sar
lcall
and
jo
iret
mull
imulb
xchg
cltd
jecxz
mov
ljmp
jg
pop
inc
addl
movsb
fsubrl
incl
std
arpl
mov
scas
push
push
mov
aad
ss
xor
sbb
jg
xchg
sbb
or
repz
mov
adc
or
mov
dec
out
mov
cld
or
imulb
jmp
xor
orb
or
mov
fsubr
inc
pop
add
add
mov
and
rorb
push
push
test
jg
jmp
into
daa
add
sub
out
push
rcll
xor
pop
jno
mov
mov
and
lcall
lahf
push
ret
adc
mov
push
idivl
or
xlat
and
add
inc
xchg
mov
lock
jecxz
inc
daa
sbb
mov
sub
call
enter
imull
scas
leave
pop
int
inc
mov
jbe
call
in
adc
mov
push
in
inc
shrl
fcoms
test
mov
ffreep
sub
popf
xchg
inc
fsubr
push
cs
aam
fucomi
aaa
or
pushl
mov
xor
sub
subb
mov
nop
outsl
stos
cli
incl
frstor
or
ret
inc
cltd
mov
call
test
pop
mov
mov
out
jmp
fucomi
int
push
decl
cmp
shll
adc
push
clc
loope
js
mov
sbb
in
sbb
in
shlb
mov
cmp
clc
test
xor
loopne
and
jmp
mov
adc
jb
insl
mov
call
int
sti
mov
mov
adc
or
std
setle
jmp
fiaddl
sbb
dec
jle
mov
inc
xchg
movsb
xchg
test
hlt
pop
push
out
clc
ljmp
sub
xchg
inc
mov
rclb
mov
test
cmpsb
hlt
shll
mov
insl
into
mov
mov
sub
xchg
sub
cmp
nop
popa
std
data16
and
and
int
sub
ljmp
iret
loopne
das
jne
aam
push
mov
out
sbb
mov
push
sahf
mov
jge
jecxz
ret
dec
nop
cmp
stos
push
sbb
inc
jge
add
inc
and
sub
ds
out
add
xchg
xor
mov
in
dec
popa
mov
mov
pop
movsb
out
xchg
fdivs
or
fdivrs
fldcw
pop
pop
pop
push
cmc
call
adc
fcmovb
out
sbbl
insb
shll
ret
sar
fistpll
stos
arpl
fisubl
dec
repnz
mov
sar
pop
std
jg
stos
xchg
inc
pop
mov
flds
or
cmp
xchg
cs
add
push
pop
cmp
adc
stos
xor
add
sub
negl
loope
pushl
std
incl
lods
aaa
push
cwtl
cltd
iret
imul
cli
mov
or
incl
jecxz
std
cltd
mov
and
mov
mulb
rcll
loope
out
jo
clc
mov
insl
sbb
call
push
xchg
aas
cmp
stc
lret
pop
sub
arpl
xchg
mov
cmpsb
mov
or
jmp
pop
cmp
or
or
sub
xchg
mov
adc
scas
mov
push
aaa
fildl
sub
xchg
xchg
shlb
jmp
add
add
pop
add
mov
dec
xlat
cmpsb
stos
cwtl
shlb
push
mov
push
jmp
mov
adc
nop
iret
mov
sti
adc
mov
in
dec
adc
add
mov
int3
pop
aad
xchg
fcompl
idiv
inc
push
ljmp
jne
popa
add
inc
icebp
mov
aas
pop
cwtl
das
movsb
xlat
and
cld
cmp
lcall
loope
cmc
jno
and
add
pop
dec
out
and
xchg
jae
js
std
pushl
decl
std
inc
xchg
and
dec
cmp
loopne
xor
fisttps
push
lods
daa
sti
lret
adc
and
lcall
loopne
pop
mov
lock
push
jbe
popa
js
cwtl
mov
pop
decl
inc
sub
xchg
gs
shlb
inc
lods
or
ljmp
adc
sub
jg
or
jns
cltd
jmp
int
std
sub
sub
lds
pushl
mov
outsl
cmpb
gs
rcrb
int
das
mov
faddl
inc
sbb
dec
pop
popa
fcomip
mov
aam
subb
or
das
cltd
outsl
lcall
fdivp
popf
in
aaa
aam
inc
and
cmp
pop
fsubl
gs
decl
jae
ljmp
loope
dec
les
push
popf
pop
pop
scas
jp
into
ljmp
xchg
lahf
add
aas
leave
or
das
sub
mov
cwtl
fs
inc
fcomip
or
jo
jo
and
imul
and
aam
aad
dec
jmp
jp
fnstsw
xchg
mov
js
cmp
jbe
xchg
xlat
shll
ljmp
xchg
loope
call
fisubs
and
into
xor
mov
in
push
call
fbstp
stos
nop
and
call
xlat
ljmp
inc
mov
mull
int
data16
cmp
inc
cmp
insl
ja
sbb
lcall
mov
sarl
xlat
imul
add
fs
cld
icebp
cmp
cld
or
mov
imul
jmp
cmp
sub
in
and
pusha
xor
mov
mov
pushf
pop
sub
and
dec
mov
dec
dec
dec
pop
mul
push
push
add
call
out
xor
mov
jg
ret
sub
add
outsl
mov
jae
ljmp
loopne
fnstsw
and
xchg
cmp
mov
das
insl
push
mov
adc
push
inc
ret
je
jbe
jecxz
sbb
icebp
mov
jmp
adc
call
xorl
sub
jns
push
imul
aam
cld
jmp
inc
lds
rclb
jle,pt
xchg
lret
repnz
fisubrs
lahf
jg
pushf
pop
mov
leave
adc
push
cltd
lods
push
test
aad
sar
jle
ret
pusha
out
cmc
hlt
dec
lahf
pushl
das
ret
jg
dec
test
mov
mov
cmp
test
xchg
dec
lods
pop
mov
sub
jg
dec
push
fcmovnu
data16
jmp
outsb
fistpl
nop
call
ret
aad
push
pop
xor
jg
sub
inc
aaa
cmpsb
mov
ret
jmp
out
pusha
test
pop
cld
and
das
cli
out
adcb
pushf
test
shl
ljmp
adc
jbe
es
cld
mov
enter
inc
mov
sub
lret
push
out
fucomip
pop
cmp
es
les
mov
mov
xor
lea
aad
aam
scas
jbe
inc
loopne
test
idiv
dec
adc
jno
or
push
fiaddl
cmpsl
sti
mov
in
pop
jge
vunpckhps
adc
decl
fiadds
sub
xchg
bound
daa
movl
incl
decl
or
rcll
aad
adc
int
mov
leave
ljmp
sbb
mov
push
fimull
xchg
stos
enter
mov
jg
add
jo
dec
out
lahf
xlat
sbb
jge
mov
loop
into
aaa
fdivrs
bswap
imul
cs
pop
movsb
pop
fdiv
insl
pop
int
mov
bound
jge
jl
jg
frstor
xor
and
xchg
mov
repz
adc
decb
lods
mov
and
ds
dec
sub
xchg
inc
outsl
clc
jbe
push
pop
insl
out
repnz
xchg
mov
lcall
aad
or
lods
fcomip
cli
aaa
jne
sahf
mov
shlb
call
sbb
or
cli
push
push
adc
scas
out
adc
ss
decl
mov
push
and
clc
or
fisubl
push
cs
ljmp
adcb
push
adc
lds
in
les
outsb
jg
jge
push
lods
aad
jle
dec
push
lcall
loop
or
mov
cltd
sub
cmp
jmp
call
es
xor
mov
inc
jg
adc
push
lods
sub
test
icebp
xor
stos
popf
sub
ljmp
pusha
cs
pop
arpl
imulb
inc
pop
stc
es
addl
sbb
imul
lahf
decl
lock
ljmp
mov
cmp
pop
rcl
call
adc
incl
mov
sbb
pusha
jbe
gs
or
aas
mov
testl
cmpsl
inc
mov
insl
inc
dec
and
and
push
das
icebp
mov
fstpt
and
clc
dec
xchg
or
lods
mov
jg
jno
add
sbb
xor
xchg
sub
stc
aas
decl
xlat
insl
dec
add
pop
sbb
jp
je
adcb
scas
inc
add
incl
ja
addb
cmpb
pop
jecxz
sti
std
jg
mov
mulb
mov
or
mov
fisttps
js
sbb
ss
stc
push
pop
dec
std
and
xchg
inc
add
jmp
mov
movsl
lods
sbb
aam
sahf
xchg
dec
arpl
fbld
mov
adc
and
cld
cltd
cmp
inc
pop
stos
and
sub
push
sub
dec
out
pusha
cli
lret
mov
mov
xlat
mov
xor
sbb
pushl
fwait
bound
rcrb
dec
lea
jmp
inc
push
add
mov
jmp
movsl
mov
dec
mov
cmp
ja
pop
idiv
dec
negl
xor
decl
out
popf
inc
in
xor
imul
jae
inc
mov
and
outsb
test
pushl
cmp
mov
cmp
xchg
stos
lahf
ret
xchg
push
jno
or
inc
call
mov
adc
xor
lahf
movsl
adc
jae
adc
imul
lret
int3
insb
pop
stos
or
ficompl
lahf
push
xchg
testl
mov
sbb
adc
sbb
aam
pop
rclb
out
ljmp
sub
scas
scas
mov
mov
xchg
je
lods
mov
leave
xchg
stos
xchg
lock
sbb
les
cwtl
and
sbb
outsl
cmpsb
cmp
or
pusha
mov
daa
push
bound
outsl
cmc
inc
lods
ljmp
subl
fistps
lcall
jl
enter
push
adc
mov
fisubrl
lret
mov
lods
push
pop
mov
test
icebp
stos
xchg
add
repnz
xchg
mov
jle
insl
repnz
xlat
test
aaa
push
jg
outsl
lds
add
rcrl
push
xchg
add
cmp
andb
popf
es
repz
mov
or
lcall
out
xor
adc
sub
jle
shll
mov
xlat
mov
ljmp
lock
adc
fmull
xor
fbld
or
roll
xchg
and
rolb
out
cmc
and
nop
lods
jae
sbb
roll
sbbl
cmpb
fadds
push
test
sarb
inc
inc
push
decl
in
test
ds
int3
sbb
pop
cmc
decl
ficoml
xor
sub
jge
mov
cld
loope
ret
pop
imul
pop
sbb
idiv
mov
sub
push
mov
xor
and
pop
sar
incl
cld
ja
jg
inc
xchg
mov
jmp
decl
inc
adc
mov
pop
dec
dec
clc
fldt
clc
incl
cmc
cmpl
pop
mov
jge
mov
ret
ret
das
clc
out
fs
dec
shrl
dec
mov
push
jp
adc
out
sti
adc
dec
cmc
call
loopne
loop
ret
shll
xchg
frstor
jecxz
fbstp
cmp
sti
xor
outsl
cmpsl
or
add
mov
jmp
outsb
test
sbb
sub
aas
mov
mov
or
jae
fisubrl
push
push
loope
push
loope
jo
mov
mov
pop
stos
cmc
frstor
mov
fwait
cmp
push
insb
push
leave
xor
gs
mov
inc
mov
add
add
pop
int3
dec
in
or
incl
sbb
mov
xor
aad
ljmp
in
push
mov
imul
mov
push
push
mov
je
add
mov
add
in
int
test
adc
into
push
push
ljmp
add
xchg
sbb
into
pop
pop
fistl
pop
mov
iret
hlt
rcr
test
decb
jp
jle
push
hlt
test
mov
add
es
inc
ds
add
shlb
shr
adc
cli
jb,pt
lock
mov
xchg
mov
subb
fmuls
imul
xor
adc
lcall
jb
cmp
and
icebp
fcoms
gs
fistpll
push
push
pushf
sahf
sti
pushf
add
ret
call
lea
pop
cmpsb
push
lock
pop
imul
stos
hlt
int
jmp
lcall
adc
cmpsl
out
push
xorb
movsb
out
test
mov
sbb
rol
mov
fwait
sar
xchg
cmp
hlt
add
mov
fisubrl
inc
ret
pop
pusha
pop
mov
cmp
out
mov
faddl
adc
sub
cmp
scas
and
jo
xchg
fcoms
sbb
mov
push
sti
and
imul
mov
and
incl
mov
cmp
inc
and
movsb
jmp
sarb
loop
pop
mov
icebp
call
inc
cmp
cltd
inc
int3
aaa
adc
xchg
sub
test
mov
int3
mov
add
fbld
imul
loopne
orl
test
test
fwait
push
mov
or
ja
imul
insb
fistpll
sub
aad
pop
dec
sbbl
xor
decl
iret
int3
dec
ror
add
pop
dec
inc
int3
insl
fsub
movsb
cmp
sti
xchg
test
or
mov
sti
aad
ljmp
and
lods
movsl
and
inc
fwait
push
aas
in
leave
sub
hlt
pushl
pop
mov
movswl
int3
mov
xchg
ss
mov
and
push
pop
adc
pushl
or
xchg
xchg
push
dec
lcall
fwait
jg
jns
and
ljmp
es
xor
jg
outsb
sub
jb
jl
dec
mov
pop
stos
inc
pusha
shl
pop
push
and
pop
insl
or
cli
sub
ficompl
sub
fcomps
lods
enter
xlat
pop
jle
ss
xchg
mov
sahf
dec
xchg
ret
xor
xchg
outsl
pop
iret
push
clc
das
cli
mov
sbb
fisttps
pushf
xlat
hlt
rolb
sub
add
mov
leave
out
xor
repnz
xchg
roll
testl
or
dec
mov
or
add
mov
mov
incl
cmc
icebp
fidivl
das
xchg
and
cwtl
stc
sub
insb
lret
sub
mov
xor
pusha
mov
jecxz
sbb
gs
popa
or
mov
xchg
and
lods
test
pop
mov
ja
mov
int3
jle
adc
jg
xchg
cmpl
mov
dec
loopne
cmp
jno
pop
sub
lcall
mov
mov
add
push
jle
push
xor
aam
repz
pushl
mov
shll
xor
jb
dec
inc
std
mov
test
ds
popa
mov
inc
std
push
enter
stc
cmpsb
ret
lret
cli
adc
jecxz
js
scas
clc
pop
iret
ret
or
std
cwtl
insl
shl
push
mov
mov
call
into
mov
push
cs
out
push
jmp
push
inc
pop
jnp
je
pop
push
push
enter
mov
push
addb
sbb
lds
add
orb
inc
scas
add
mov
inc
jmp
jl
jle
inc
pop
jp
inc
dec
xor
scas
push
mov
lods
ss
insl
jl
das
inc
outsb
pop
aaa
addb
jmp
xchg
sub
imul
sahf
mul
lcall
or
mov
mov
stos
cmp
stos
hlt
je
fnstenv
mov
call
push
les
fsubrs
jg
daa
xchg
xlat
pop
or
jmp
xchg
and
jnp
add
jmp
add
pop
jo
and
and
cld
rolb
push
dec
jmp
mov
mov
push
fcompl
dec
jg
xchg
xor
or
fdivr
jmp
nop
xchg
testb
add
hlt
test
xchg
enter
jl
ret
aas
mov
inc
sbb
decl
push
jbe
repz
jmp
out
enter
fsubrp
setl
add
or
imul
or
cmpsb
sahf
and
nop
and
jmp
js
push
sub
fisttpl
out
push
aaa
push
mov
call
jg
jno
scas
push
mov
sub
popf
jo
int3
ret
cs
sahf
jo
rorb
outsl
rcll
cwtl
add
ljmp
stos
push
aaa
bound
icebp
jmp
or
std
stos
test
mov
mov
std
sub
in
add
and
outsb
ja
adc
aad
outsl
das
ud2
rorb
xor
lahf
mov
incl
ja
fmuls
outsb
jg
notl
pop
push
or
addr16
call
std
jl
push
dec
enter
xor
jg
mov
inc
jns
sti
or
xor
rorl
pop
cld
lcall
and
push
xchg
test
aas
jo
pop
and
mov
sub
inc
fmull
bswap
icebp
ficompl
dec
lcall
int
movsb
dec
add
sbb
ljmp
sbb
andl
mov
out
cmp
sub
incl
jle
fnsave
arpl
test
adc
cmp
mov
fistl
lock
xlat
inc
movsb
outsb
int3
jl
mov
fsubs
fs
add
fwait
adcb
aad
jp
dec
xchg
in
jne
call
or
mov
mov
fdivrl
cli
pop
push
or
mov
das
lret
xor
faddl
cmp
push
dec
out
unpckhps
aas
dec
inc
and
and
pop
xchg
out
and
ljmp
pop
mov
aas
lock
add
pop
lahf
sar
jmp
add
jle
fisubrs
in
imul
imul
call
decl
sub
and
fcoml
mov
ror
add
pusha
call
ret
shlb
xchg
loop
mov
rcll
push
lcall
fadds
xor
sbb
pushf
push
sbb
mov
sub
jmp
xor
fmul
jno
pushf
cli
fmull
jbe
test
or
mov
pushf
inc
add
iret
fidivl
sar
pushl
or
push
adc
and
jnp
sub
xor
add
out
sbb
jo
push
inc
movsb
mov
decl
jmp
xor
dec
scas
js
add
lret
jmp
xor
fidivrs
fdiv
je
imul
mov
pop
mov
fnsave
cli
pop
cmp
sarb
fsubrs
or
pushl
mov
cmp
dec
iret
mov
cmp
ds
inc
out
mov
fisubl
add
jg
cmp
jge
cmp
jae
pop
popf
xor
pop
scas
lret
push
push
in
ds
mov
xor
lods
add
cmp
enter
xchg
jb
push
int3
jg,pt
stos
ret
jmp
test
pop
fisubrl
pop
ficoms
mov
fstps
call
cli
mov
int3
mov
dec
call
call
mov
negl
mov
test
lods
ret
scas
cmp
jmp
and
incb
repnz
or
lea
cli
mov
popa
cmp
loope
dec
dec
pushl
nop
and
dec
aas
jne
adc
dec
jns
rcrb
cltd
push
adc
jno
lcall
ret
in
or
inc
in
adc
pushf
dec
jnp
les
mov
mov
icebp
fsts
loope
add
xchg
jge
push
cld
cmp
lods
jne
mov
pop
add
sub
mov
sbb
insl
and
jae
jb
scas
mov
call
cmc
mov
xor
in
mov
xor
frstor
movl
out
fildll
decl
push
sti
xchg
xlat
nop
loopne
add
adc
mov
ja
or
jle
push
ljmp
je
inc
hlt
mov
cli
add
inc
xor
rorl
in
mov
call
divl
mov
sub
mov
stos
xchg
rol
mov
insb
aam
nop
iret
xor
fsub
data16
jmp
add
out
movsl
rcr
mov
daa
jp
fwait
push
pop
out
mov
fcomip
iret
pop
xchg
imul
cs
mov
out
mov
mov
cmc
xchg
add
push
lea
xor
outsl
add
loop
popa
ret
cli
add
scas
xchg
incl
adc
dec
mov
daa
je
sti
jp
testb
fsubrl
sub
pop
scas
jno
jmp
add
mov
cmp
sahf
es
pusha
das
xchg
add
mov
cmc
pop
dec
sub
pop
lock
sbb
inc
xchg
test
out
ja
mov
std
cmp
fstl
push
lds
inc
scas
cmp
push
sbbl
imul
popa
push
lods
arpl
dec
call
cmp
pushf
xchg
mov
mov
lcall
cmp
lcall
cmpsb
cmp
adc
jnp
xlat
and
lock
inc
ror
jns
xchg
outsb
fcompl
mov
cmp
push
jmp
adc
cmp
add
adc
lahf
pop
inc
ja
dec
and
add
aas
adc
xchg
dec
dec
push
add
xchg
xor
dec
test
mov
call
cmp
push
push
mov
arpl
pop
es
cmpsb
inc
pop
mov
pushl
mov
out
jo
push
cld
push
rcll
test
test
ds
int3
rclb
mov
inc
jl
mov
mov
roll
xor
stc
shll
adc
addr16
sarb
incb
test
cwtl
push
add
pusha
sub
repnz
rorl
lock
cmp
cmpsl
enter
mov
jg
mov
adc
test
sub
jno
mov
lret
mov
pushl
mulb
mov
mov
sub
xchg
leave
es
addr16
xchg
and
fbstp
ret
pushl
xchg
aaa
sbb
add
xor
mov
pop
mov
mov
dec
enter
pop
aaa
std
pushl
inc
std
push
dec
rcl
es
dec
call
scas
in
pop
xlat
mov
cmp
stos
int
add
push
and
leave
faddl
cmpb
dec
sar
adc
sbb
addl
pop
faddl
ja
xor
lds
leave
mov
ret
cmpsl
mov
adc
xorb
jne
and
nop
imul
fidivs
out
xchg
icebp
fisubrs
dec
ret
insb
pop
cmp
incl
dec
aaa
fstpt
sub
sahf
mov
pop
aam
mov
push
int
and
or
mov
int3
roll
pop
pop
fs
into
pop
and
cmp
pop
jno
fwait
inc
mov
jge
ljmp
cmp
cli
aam
jae
outsl
roll
and
int
jge
outsb
enter
ds
sub
mov
insl
sbbb
addr16
inc
mov
movsb
push
push
lock
add
lret
in
out
cli
lcall
push
add
mov
lahf
loope
test
ret
outsb
push
jge
ret
das
cli
pop
mov
adc
cmp
lods
call
xchg
xor
sar
cmp
subl
call
test
sbb
xchg
cmpsl
xchg
lds
and
movsb
out
pop
jmp
push
fists
push
hlt
outsb
xchg
lea
and
or
jmp
jge
je
pop
int3
mov
je
jns
inc
adc
and
scas
xor
push
cltd
and
incl
mov
adc
imulb
sbb
xchg
in
push
stos
mov
mov
cltd
sub
sbb
dec
xor
lret
cmp
fsqrt
bound
movsb
xorb
adc
addl
pop
push
jns
xchg
and
fbld
cs
arpl
out
mov
adc
inc
rcr
fldenv
ljmp
mov
jno
js
jo
push
in
pushf
push
inc
hlt
jo
mov
jp
outsl
rcrb
and
push
repz
out
jae
dec
pop
movsb
mov
push
call
inc
mov
negl
cmp
mov
dec
mov
fwait
push
pop
inc
imul
mov
push
jmp
mov
xor
mov
cld
lods
push
mov
jne
movsl
sub
out
not
decl
inc
shlb
out
mov
push
jbe
mov
subb
das
shlb
pop
inc
call
push
jle
jmp
mov
movsl
sub
sub
add
in
or
pushf
mov
and
loopne
add
lcall
sarb
cmp
fbld
adc
fiadds
enter
addb
xchg
test
adc
or
xchg
inc
push
fcmove
pop
test
mov
sbb
pop
mov
test
imul
add
mov
cmp
jmp
dec
setle
bound
push
lret
std
inc
jl
hlt
xchg
push
xor
or
decl
pushf
fsub
mov
popf
mov
push
mov
adc
mov
cmp
scas
mov
ljmp
bound
add
or
or
incl
sub
fsub
dec
pop
or
pop
push
pop
sbb
cmp
dec
and
sbb
mov
xor
clc
jmp
cmpsl
mov
sub
push
je
stc
in
pushf
outsb
push
aas
js
push
insl
in
xor
mov
xchg
insl
dec
mov
cmpb
movsl
shrl
push
push
cmp
sbb
mov
decl
jl
xchg
push
lahf
adc
sub
pop
xor
sub
push
mov
decl
mov
push
mov
mov
cmp
cltd
mov
push
sub
scas
mov
rorl
jecxz
push
cld
rcrl
mov
cld
sbbl
movsb
push
push
mov
std
out
decl
daa
fdivl
into
mov
mov
lcall
das
in
leave
jb
xlat
je
and
dec
cmpb
jecxz
popf
stos
les
popa
mov
ljmp
push
clc
inc
cmp
xchg
lea
and
or
cs
ljmp
lea
es
pop
out
call
rclb
lods
jae
stos
and
call
jp
add
std
fs
dec
iret
sar
decl
mov
loopne
pop
addr16
pop
mov
pop
aam
adc
sbb
adc
lret
fadds
dec
ds
mov
hlt
test
xor
out
ds
mov
mov
clc
jg
sbb
inc
xor
fldt
int3
sub
dec
or
lea
and
test
movsb
mov
sub
inc
lahf
inc
leave
fbstp
pushf
mov
xor
bswap
push
mov
xchg
test
jle
stc
fimull
daa
xchg
pop
and
jg
mov
scas
in
enter
mov
jge
dec
cmp
popl
add
out
fcmovu
mov
or
in
add
loop
fwait
mov
movsb
push
cmp
lods
loop
sbb
sub
in
jmp
jle
sahf
jb
insb
movsb
lahf
ja
fisubrl
or
and
dec
cmp
testl
xor
cmp
sti
inc
push
push
les
sub
mov
cli
ljmp
pop
fwait
loop
push
inc
das
call
dec
std
pop
jae
stos
jb
xor
pusha
cli
test
jmp
sub
xor
lods
clc
icebp
xor
push
dec
test
jmp
push
adc
rorl
xor
loope
cmc
pushaw
and
insb
notb
mov
lock
test
scas
sub
and
leave
inc
jle
lods
and
inc
xchg
stos
dec
mov
out
outsl
pop
dec
enter
sbb
int
rolb
ljmp
clc
incl
mov
sbbl
lret
mov
mov
mov
xchg
call
sbb
insb
mov
incb
cmp
subb
pushl
inc
mov
dec
jmp
dec
repz
jns
xchg
dec
mov
pop
push
call
out
test
and
add
xor
adc
fimuls
and
ljmp
mov
rorw
xor
roll
and
and
jle
mov
dec
loope
inc
push
dec
movsb
ret
ficoml
jmp
add
loop
neg
cli
out
fldcw
outsb
xlat
mov
lahf
sbb
xor
popa
cmp
mov
call
mov
xor
adc
dec
fisttpl
dec
jl
dec
addr16
mov
cmpsb
ljmp
mov
push
ret
push
cmp
adc
call
add
movl
xor
inc
xor
lahf
push
push
push
dec
dec
out
out
repz
test
call
mov
icebp
call
jmp
mov
sub
ljmp
fisubrs
cmp
movsl
xor
pop
sbb
ljmp
test
pop
cmp
cmp
mov
xchg
cmp
fldl
cmp
out
cli
mov
push
or
pop
push
push
sbb
or
add
jo
mov
sbb
dec
add
add
shll
mov
sub
nop
subb
sahf
jnp
mov
mov
and
mov
out
mov
push
push
xchg
test
xchg
push
jp
cmp
xchg
fidivrl
jo
dec
mov
roll
adc
js
lds
pop
test
push
pushl
push
or
inc
push
fldcw
in
push
test
mov
xchg
icebp
jo
xchg
pushl
pop
bound
push
and
movsl
movsl
or
fmuls
xor
mov
and
mov
pop
and
add
push
test
aam
scas
lds
imull
cmp
cmp
decl
js
jo
push
andb
gs
and
pop
sbb
push
mov
into
repnz
lods
mov
rcr
jg
add
cmp
pusha
sbb
fiaddl
cmc
test
popf
xchg
adc
push
jns
xchg
and
fstpl
aam
push
pop
lock
decl
movsl
fisttps
rorb
mov
cmp
sarb
lods
lret
into
rorb
rcrl
aam
movsl
xor
stos
add
xchg
or
jle
shr
vmovntps
mov
incl
les
dec
mov
push
mov
push
outsb
jnp
sarl
adc
addr16
aaa
nop
lret
loope
ljmp
outsb
icebp
bound
push
cmp
out
jmp
and
push
dec
and
lcall
sub
sub
cmp
pop
xchg
jo
sub
loopne
lcall
lret
das
inc
lea
fcoml
aas
scas
cs
mov
pushf
xor
xchg
jmp
cmpsb
adc
ds
fwait
shlb
sub
inc
cmp
cmpsb
push
lahf
adc
into
clc
add
pop
cmpsb
xchg
cmp
into
dec
xchg
add
cmp
and
push
lds
jo
scas
clc
outsl
clc
pop
ss
sbb
fstpt
incb
lret
pop
call
mov
into
pusha
cwtl
mov
mov
rclb
push
scas
notb
mov
xchg
decl
pop
xchg
cmpsb
pop
cmp
mov
shrl
mov
repz
dec
or
pushl
inc
sub
inc
add
loop
add
mov
sahf
stc
sub
pop
dec
jno
dec
or
pop
cltd
andb
mov
ret
and
jmp
fndisi(8087
lock
std
je
das
ret
subl
outsb
shrb
ret
push
pusha
cld
stos
inc
mov
mov
stc
loopne
dec
push
test
xchg
incl
inc
jne
data16
rcr
adc
mov
pop
adc
or
dec
cmpsb
imul
orl
adc
and
jle
xlat
ja
loope
js
mov
sub
push
dec
xchg
sahf
mov
decl
stos
dec
jbe
sbb
or
lcall
pop
mov
sub
jne
cwtl
iret
das
decl
cmp
sbb
lret
mov
sahf
pusha
data16
mov
sbb
pop
shll
call
popa
add
mov
xchg
inc
adc
adc
dec
xor
mov
pop
popf
sub
push
sbb
daa
xchg
dec
sub
lcall
test
or
and
sarb
bound
out
jae
int
add
xor
mov
or
stc
lock
addr16
lret
xchg
fbstp
or
daa
inc
decl
adc
cwtl
mov
xchg
add
pop
or
pop
aam
ljmp
shll
cld
adc
js
pop
nop
scas
mov
mov
ljmp
dec
mov
pusha
fistpll
push
outsl
in
pop
test
divb
int
mov
add
pop
push
jmp
xlat
jbe
or
push
cmp
dec
inc
inc
cmpsb
xchg
push
stos
jne
and
cmpsb
mov
xor
add
int3
icebp
xchg
push
lret
repz
std
clc
mov
cmp
call
and
cwtl
xchg
insl
pushl
in
xor
and
dec
mov
pusha
or
cmpsl
fs
add
or
jnp
in
mov
pop
cmc
cmp
clc
and
in
mov
cli
sbb
sbb
sbb
daa
rolb
mov
or
xchg
pop
clc
outsl
push
jg
lcall
mov
xchg
sbbl
test
imul
ja
jecxz
lcall
mov
punpckhwd
aaa
les
inc
xchg
out
xchg
sub
bound
lcall
repnz
int
arpl
mov
push
adcb
shll
pop
stos
adcl
dec
ret
in
sub
dec
js
inc
lcall
in
push
sbb
mov
ljmp
jecxz
subb
mov
xor
mov
inc
rcl
orb
dec
ds
cmp
incl
ljmp
push
std
dec
mov
mov
push
in
outsl
sub
aam
pop
imul
lods
push
mov
test
jecxz
xchg
outsl
dec
iret
adc
fisubl
jg
inc
sarl
test
mov
pop
push
push
jo
xchg
mov
or
lret
imul
cmp
lret
xor
dec
pop
inc
xchg
sub
imul
call
cmpsb
jae
inc
xor
push
pop
scas
aas
cmpsl
cli
out
cs
push
repnz
stc
in
xchg
adc
cmp
xchg
jae
inc
cmp
fsubrl
lret
inc
ja
push
in
and
add
inc
lock
jbe
xchg
subb
aas
call
inc
sbb
xor
mov
mov
mov
lcall
and
fidivrs
push
pop
mov
xchg
dec
mov
stc
push
push
adc
mov
sarb
imul
inc
inc
mov
test
lock
adcb
ds
push
dec
dec
arpl
incl
jo
push
je
jle
inc
mov
mov
and
cmp
incl
rcrb
sub
mov
testl
cmp
add
imull
xorb
dec
test
ds
jmp
cwtl
stos
xlat
insl
push
iret
and
and
je
lcall
sbb
pop
sbb
pushf
sbb
pushl
aas
push
sbb
lods
sbb
clc
pop
mov
adc
lcall
loop
call
or
xchg
sahf
xor
xor
test
jnp
int3
pushl
cld
movsb
adc
imulb
mov
mov
push
out
push
popf
cltd
in
pop
into
mov
into
outsl
icebp
inc
sub
out
jecxz
je
mov
arpl
pop
lcall
call
inc
mov
repz
mov
dec
sbb
xchg
fcos
stos
inc
loope
xor
push
sub
mov
std
sbb
lcall
loop
mov
sub
in
in
fldt
push
push
insb
pop
sbb
test
lcall
dec
sub
shl
cmc
xchg
fidivrl
xchg
icebp
arpl
pop
dec
pop
in
sbb
jnp
into
mov
sbb
xor
add
je
sbb
daa
nop
xchg
cmp
pop
fdivrs
cld
inc
lahf
push
adc
mov
incl
xor
lods
das
sbb
imul
ds
mov
cmp
imul
or
mov
addb
add
movsl
data16
and
js
unpckhps
pop
jns
cli
mov
sbb
mov
or
jp
aam
xchg
xchg
repz
xchg
ljmp
outsl
xor
mov
or
mov
sub
mov
das
enter
sar
jmp
mov
and
fbstp
sub
mov
jp
pop
call
pop
lret
jle
test
int3
pop
lock
pop
js
movsb
mov
jmp
mov
lcall
push
xchg
icebp
mov
dec
sub
or
mov
orb
or
and
fwait
adc
inc
mov
test
jno
mov
jmp
jbe
cmp
push
fildll
arpl
cld
out
inc
fisubs
jg
add
iret
loope
adc
lcall
sbb
mov
fcom
jle
and
xor
bound
sub
in
pop
xchg
mov
push
inc
and
popa
inc
and
pop
lods
mov
xchg
aas
push
test
push
rolb
mov
dec
pop
in
cmpb
pop
repz
mov
cwtl
dec
mov
lret
scas
mov
fistpl
loope
jg
lock
out
lods
mov
insl
jmp
push
out
lock
pop
mov
pop
or
test
je
sub
movsb
dec
lcall
lret
imul
and
iret
cmpsb
das
rorl
adc
cli
call
fbstp
inc
xor
fmuls
adc
jp
jmp
xchg
imul
mov
ljmp
loopne
call
lock
mov
lcall
add
cwtl
cmp
dec
mov
dec
pop
data16
pushf
adc
xlat
and
ret
sarl
rorl
les
lahf
stos
and
cmp
mov
jecxz
movl
ret
stos
jecxz
iret
cld
xor
and
mov
jecxz,pt
sbb
xchg
dec
imul
push
xchg
nop
aas
mov
cli
mov
add
dec
cwtl
dec
and
adc
mov
fists
push
xchg
mov
mov
clc
test
popf
add
sub
rcr
fs
ljmp
mov
adc
popa
dec
mov
adc
mov
jle
out
dec
lcall
dec
scas
dec
fcmovnb
mov
imul
xchg
pushf
xor
push
inc
in
mov
jge
push
xor
push
aad
dec
out
loopne
dec
inc
jno
sahf
xchg
xchg
pop
dec
pop
pop
scas
xchg
stos
mov
sub
in
mov
ljmp
cwtl
jge
mov
push
aad
movsb
pop
scas
js
imul
or
add
clc
lods
cld
mov
leave
out
stc
iret
pop
or
insb
divl
movl
scas
mov
scas
cmp
push
repnz
jbe
mov
add
xor
out
xor
push
xor
mov
push
data16
sbb
test
out
pop
and
xchg
lock
adc
fcmovbe
imul
xor
in
mov
jg
mov
mov
dec
jns
pusha
addr16
fcmovbe
mov
leave
jp
ret
xor
ljmp
xchg
lods
lods
jbe
push
dec
xchg
insb
mov
ret
add
sbb
mov
popf
push
lahf
jno
fildl
add
shll
add
dec
push
clc
inc
popa
dec
sub
mov
in
loopne
out
mov
cli
bound
imul
xor
jle
xor
add
scas
mov
outsl
push
or
dec
push
cs
cmc
push
daa
inc
test
or
push
fdivl
hlt
mov
hlt
push
rcl
outsl
cld
lcall
pop
pop
lods
cwtl
scas
mov
cmp
jb
mov
andl
ud0
mov
icebp
add
repnz
jl
sbb
push
pop
ret
mov
cltd
sub
and
in
push
pop
pop
xchg
mov
je
sti
lret
jb
enter
ljmp
cwtl
push
push
or
outsb
test
sbb
rcl
mov
mov
cmp
mov
cld
cmp
ds
pop
cmp
add
stos
aas
xor
pop
out
call
out
decl
jmp
cwtl
js
std
push
call
in
fdiv
popf
or
mov
imul
cmp
pusha
add
ja
mov
add
adc
into
sub
lods
inc
stos
cmp
sbb
shrl
dec
pop
add
pop
sbb
lds
mov
jnp
movzbl
and
sahf
inc
pop
push
cmp
ljmp
xchg
xlat
fidivrs
add
sub
dec
aaa
popa
mov
mov
pop
mov
pushl
fwait
lods
int3
rorl
jg
cmc
mov
aaa
mov
repz
cmp
ljmp
jle
jg
lret
imul
or
mov
mov
out
mov
gs
aam
std
icebp
cli
mov
and
lock
call
lods
scas
jnp
stos
adc
jp
mov
sahf
jb
add
adc
push
ja
inc
test
sub
rcrb
jmp
pop
cmp
ja
movsl
scas
mov
cmp
stc
mov
leave
inc
scas
adc
popf
mov
push
push
sub
ds
jl
add
imul
stc
dec
fidivs
add
add
cwtl
mov
sub
decl
and
mov
aad
insl
mov
jge
fnstsw
jmp
mov
cmp
jns
mov
shll
lret
pop
dec
ljmp
pop
xchg
scas
cmp
mov
mov
decl
add
js
mov
mov
jl
jmp
adc
shlb
mov
ss
push
mov
xor
rcrb
dec
decl
sub
dec
ljmp
std
data16
je
jge
add
cmp
ds
incl
push
movl
adc
mov
inc
sbb
add
mov
out
lcall
fmuls
mov
insl
mov
out
adc
fldenv
cmp
testl
lcall
jne
pop
sbb
mov
add
inc
cmc
call
pop
sbbb
push
mov
mov
decl
cmp
or
inc
addb
jge
xchg
std
adc
addr16
pushl
std
dec
clc
mov
ret
xchg
pop
sbb
pushf
adc
sub
fcmovnb
pop
fsubrl
mov
cld
fs
or
pop
sbb
pop
xor
mov
shl
imul
lahf
inc
std
xchg
dec
adc
mov
sti
mov
xchg
sbb
cmpsb
shl
fsubrs
pop
cltd
loope
xchg
mov
pop
call
push
lcall
shrl
faddl
daa
out
mov
mov
or
push
jecxz
dec
pop
add
mov
mov
icebp
cli
ss
cmp
out
mov
imul
push
addr16
pop
stos
mov
aad
mov
ds
sbb
clc
test
jno
into
jmp
incl
jge
in
into
pop
dec
mov
stos
decl
ljmp
pop
dec
jp
mov
out
cmp
pop
ljmp
fildll
mov
movsl
and
mov
cli
sti
push
movsl
fistpl
cmp
cmpsl
insb
mov
mov
push
inc
hlt
dec
xchg
adc
jmp
jecxz
pop
std
shrl
and
ds
cmp
mov
cmp
aas
cmp
mov
sub
xchg
popa
pusha
mov
es
dec
mov
mov
repnz
sbb
popf
add
fimull
sub
pop
dec
jg
mov
dec
decl
mov
sti
dec
jle
sbbb
jns
movsl
int3
in
arpl
call
inc
test
sahf
fisttpl
call
aas
xchg
aam
scas
and
jg
sbb
jbe
jle
push
or
pop
fbld
stos
sbb
pop
aaa
or
aam
jg
or
inc
popl
dec
adc
sbb
and
jecxz
sti
hlt
ljmp
jo
or
mov
mov
out
in
cmc
pop
je
into
push
dec
mov
fbld
or
incl
sub
mov
jecxz
mov
pop
push
test
sti
cmp
fldt
xlat
jbe
stc
jecxz
sub
gs
arpl
incl
rcr
lcall
sbb
push
inc
std
xlat
inc
int3
cmpl
ljmp
subb
fmuls
or
xor
jmp
decl
push
lods
scas
rorb
cmp
cmc
fwait
dec
jae
loope
rcll
jg
xor
dec
mov
fildll
sbb
ljmp
xlat
int3
cmp
sub
fsubrs
and
repnz
push
inc
jns
into
mull
in
iret
jp
pop
pushl
inc
nop
push
pop
xor
fnsave
in
out
pop
sbb
lock
dec
cmovbe
mulb
xor
mov
lea
inc
int3
inc
mov
mov
lret
cmp
pop
adc
out
ret
cmc
fcmovnb
imul
call
out
jmp
xchg
pop
mov
shrl
mov
pop
mov
jmp
sub
jmp
dec
stos
ja
inc
test
mov
in
xchg
push
fstp
jae
xor
cmp
jg
push
push
cmpsb
filds
repnz
in
cs
lea
lret
mov
dec
add
fildll
call
test
addb
jle
mov
xchg
or
adc
scas
push
les
jle
ds
sbb
cwtl
iret
lret
or
lcall
insl
push
xchg
leave
xlat
add
shlb
mov
adc
ljmp
lcall
data16
and
push
arpl
ret
dec
or
repz
xchg
jnp
mov
mov
jmp
sub
mov
fistpl
cli
push
xchg
push
xchg
arpl
repz
inc
ja
xor
mov
pop
psrad
adc
xchg
xorl
mov
sti
into
test
rolb
xchg
adc
ja
shr
adc
aaa
in
icebp
mov
sbb
ss
cmpsb
test
int
add
xor
sbb
das
das
aas
lret
and
pushl
dec
jecxz
loope
pop
neg
pusha
cltd
jo
cmp
mov
dec
adc
mov
hlt
decl
mov
and
mov
pusha
ret
iret
incl
jl
cld
cmp
aas
dec
int
xor
mov
pop
ret
nop
add
jge
ljmp
push
lcall
jo,pn
mov
xor
rcr
cmp
mov
divb
popf
out
shrb
lret
sbb
dec
arpl
inc
outsb
mov
mov
les
xchg
inc
repz
bound
pop
cmpb
push
jnp
insb
fcmovb
ljmp
int3
pop
or
xor
xor
insl
pop
inc
fidivrs
loopne
sub
add
mov
mov
push
xor
sbb
lahf
sahf
out
mov
sub
in
insb
or
aaa
pop
call
nop
movsb
lahf
data16
sub
lret
inc
inc
mov
leave
ljmp
aam
sub
repz
es
stos
daa
dec
mov
pop
push
daa
jg
ret
jmp
push
cltd
xor
dec
inc
shlb
shr
adc
cmpsb
lcall
rcll
fwait
ret
ret
jg
jmp
imul
in
test
cmc
mov
lret
ljmp
and
int
mov
fidivrl
insb
add
jmp
add
js
out
je
mov
sbb
aaa
mov
cmp
mulw
and
inc
mov
inc
push
or
call
call
adc
lods
push
test
decl
aam
imul
inc
jb
mov
dec
in
or
jmp
jae
jno
movsl
fdivrp
ljmp
sub
fiaddl
popf
loope
adc
fwait
push
push
push
jecxz
incl
clc
loopne
mov
xor
ret
mov
adc
sbb
push
inc
imul
mov
sbb
imul
roll
pushl
jae
outsl
leave
bound
mov
xor
cmpsb
jbe
pushl
add
jae
outsb
mov
xor
push
mov
add
push
inc
rolb
cld
divb
test
xlat
dec
xchg
jne
jp
popa
push
aas
lret
fiadds
cltd
inc
popa
clc
cmp
mov
xchg
test
inc
cmpsb
inc
mov
mov
ljmp
push
shl
nop
mov
jge
out
std
adc
sbb
pushl
mov
sti
cmp
fwait
xor
sub
inc
mov
pop
lods
por
pop
mov
aam
stos
jnp
ds
xchg
loope
fwait
loop
js
add
loop
push
adc
lcall
call
mov
pop
inc
sub
inc
cmp
jns
cmp
xor
sbb
xorl
jecxz
cmp
cmp
jecxz
mov
lahf
aaa
test
add
or
fldt
lcall
mov
adc
je
or
or
mov
popf
out
and
sbb
sub
sub
push
inc
xchg
clc
jge
pmulhw
xchg
test
mov
jne
mov
popa
jne
sti
aas
fxch
fcoms
pop
lret
pop
push
call
xor
movsb
scas
inc
xchg
js
add
sti
movsl
push
out
inc
aaa
in
dec
push
arpl
and
push
lods
xchg
iret
call
adc
lods
repnz
cs
cmpsb
lods
into
pop
mov
rcl
movsl
je
mov
pop
sbb
mov
jae,pn
negb
scas
hlt
mov
add
jl
hlt
cmp
cld
js
sbb
jp
and
mov
call
nop
ja
in
and
sub
clc
fldt
mov
in
cmp
pushf
and
mov
inc
lock
out
out
cmpsb
cmp
pusha
adc
scas
popa
dec
daa
add
and
icebp
pop
jb
stos
pushl
jmp
leave
dec
int3
stos
dec
push
adc
jge
les
lds
jae
mov
xchg
int
aas
hlt
dec
and
xchg
and
xor
or
cmp
repz
stos
and
or
es
mov
cmp
lods
shlb
js
lcall
jg
cmc
es
dec
repnz
shrl
add
dec
mov
sbbb
jp
icebp
subl
cmp
enter
out
mov
push
push
adc
or
push
inc
sbb
xor
dec
cmp
jmp
std
adc
out
push
into
jecxz
int3
clc
adc
push
jge
xlat
push
shll
aad
das
cli
lcall
mov
or
push
arpl
lret
fs
outsb
add
inc
pop
lock
lcall
in
addr16
lock
xor
sub
in
sbb
jg
pop
lahf
sbbb
inc
fisttps
cwtl
or
decl
js
adc
test
or
push
dec
hlt
xchg
jne
lcall
aam
mov
ss
push
pop
ja
js
pop
es
shlb
ret
push
incl
lods
lret
inc
push
xor
aaa
leave
out
and
loopne
or
mov
pop
cmp
jns
andl
icebp
dec
sbb
xchg
mov
es
bound
loope
into
mov
call
f2xm1
mov
cmpsb
imul
mov
fcmovbe
jns
insb
enter
shll
add
incl
subb
repnz
or
inc
jb
je
and
sti
test
jbe
jmp
cli
jecxz
sub
xchg
xchg
inc
inc
test
roll
mov
repz
sub
fimuls
adc
incl
mov
loop
add
rcll
clc
mov
loopne
jl
mov
mov
ljmp
jbe
push
int3
mov
sbb
add
loope
decl
and
arpl
dec
scas
and
mov
shr
pop
dec
mov
mov
mov
lahf
xchg
cmpsb
icebp
outsl
js
mov
and
cmp
lcall
jmp
xor
xchg
push
jnp
jb
xor
cmp
test
push
lcall
into
mov
jmp
ss
popa
imulb
gs
push
xchg
enter
iret
sub
movsl
shll
nop
push
daa
lcall
or
pop
push
aam
pop
jne
mov
adc
dec
and
jno
jg
repz
inc
aad
fst
pop
adc
lcall
and
jecxz
cmp
inc
aad
and
call
adcb
fmull
fdivp
cmpsl
shll
push
fsubrl
adc
loop
inc
out
jmp
shrl
gs
pushf
cld
push
jle
cltd
xor
cmp
test
rorb
mov
cld
cmpsl
movsl
arpl
mov
outsb
in
scas
mov
ret
in
sbb
pushl
mov
aam
into
adc
lahf
mov
jecxz
jns
pusha
popa
insl
scas
inc
mov
sahf
in
call
outsb
mov
pushf
mov
xchg
mov
push
push
add
les
push
pop
cmc
jmp
out
lods
or
cmc
pusha
loopne
scas
je
fsubr
rolb
and
sti
inc
or
push
sahf
sbb
add
mov
in
test
fs
push
fs
stos
push
or
hlt
int3
and
mov
aas
xchg
jecxz
ficoms
incl
ficoml
sarb
jecxz
sbb
int3
xor
setae
sub
jb
outsb
movsl
orb
cmp
pushf
repz
mov
pop
les
decl
pop
shlb
incl
fldt
dec
and
add
jl
loop
lea
lret
movsb
aaa
incl
jno
insl
sarb
inc
xchg
leave
fs
addr16
push
mov
cld
aaa
mov
call
loopne
mov
dec
adc
dec
sbb
push
mov
ljmp
jne
lret
clc
out
cmc
jbe
in
shrl
sub
lcall
mov
mov
cld
shl
daa
insl
jp
jge
mov
xchg
mov
fcoml
lahf
pop
call
sahf
test
inc
xor
push
xchg
mov
scas
clc
cmp
int3
arpl
gs
std
lcall
bound
push
cld
loop
pop
jle
inc
cli
call
popl
xor
and
cmpsl
aam
xlat
or
rcrl
sub
daa
cli
mov
push
call
or
mov
mov
fcmovne
inc
cmpsl
in
push
dec
repz
ss
push
push
sbb
stos
dec
jle
xlat
xchg
daa
sahf
mov
dec
mov
shrl
mov
jl
ja
adc
push
lods
divb
ljmp
jge
add
mov
std
cltd
lahf
jg
insl
int
test
hlt
ret
das
and
popf
pushl
std
lcall
rol
fcmovu
stos
or
and
nop
sti
scas
fisttps
xchg
mov
jno
aaa
xchg
clc
enter
mov
gs
mov
js
xchg
cmc
incl
xor
add
xchg
mov
push
push
ljmp
cs
push
loope
test
push
in
pop
pop
fnstenv
les
push
mov
mov
push
aad
mov
jns
and
add
ja
std
hlt
sub
jmp
push
xchg
cmp
or
pop
pop
lret
jecxz
int3
mov
mov
mov
daa
popf
outsb
sarb
mov
mov
imull
aaa
mov
cmpsb
sbbl
lret
fisttpll
les
jl
mov
sbb
adc
push
lea
das
shrb
inc
cmpsb
inc
inc
lock
pop
addl
xor
inc
pop
sar
lcall
clc
mov
mov
data16
or
mov
adc
push
xchg
ret
mov
jns
lods
sub
incl
loopne
sbb
jae
in
aas
pop
push
cmp
add
int3
jb
call
pushl
jl
sbb
in
sbbl
mov
mov
incl
xor
fisubrs
sbb
hlt
adc
lods
push
jae
bound
cmp
pushl
loopne
dec
ficoms
pop
jmp
enter
jmp
lods
notb
and
pusha
prefetch
cld
jns
dec
xor
flds
iret
pop
repz
into
jecxz
sti
push
clc
cs
lods
fs
hlt
jnp
jb
movsb
jmp
pop
popa
sbbl
mov
ret
aas
stc
and
pop
xchg
call
push
inc
cmp
js
adc
aaa
cmp
loop
adc
insl
pop
inc
cmc
inc
int3
sbb
in
out
push
dec
sbb
movsb
insl
sti
push
cwtl
and
or
inc
sbb
in
mov
dec
sub
pop
jns
outsb
mov
dec
sahf
fiaddl
mov
lcall
rol
pop
inc
sub
mov
cltd
and
mov
sahf
sar
pushl
sub
cmp
mov
mov
mov
inc
int3
bound
adc
std
mov
mov
out
hlt
mov
inc
add
cli
leave
add
call
cmp
mov
mov
es
pushl
leave
xchg
add
push
and
cmp
pop
jo
clc
je
fisubl
lods
add
decl
shr
gs
in
push
ja
push
cmp
pop
cmpb
jge
hlt
mov
incl
jne
data16
or
loop
loop
pop
push
movsb
mov
dec
lds
push
je
test
jmp
and
shl
sub
or
je
lret
push
gs
cwtl
or
lcall
push
mov
sbb
jae
adc
push
dec
rol
jno
ljmp
cmpsb
subb
lret
inc
rep
lods
adc
add
lcall
stc
std
icebp
jl
out
cmpsb
add
mov
push
pop
cmc
test
mov
enter
fwait
test
mov
js
dec
data16
call
notl
adc
outsb
jge
in
jecxz
mov
sahf
out
insb
sbb
popa
lea
decl
inc
jbe
pop
lahf
mov
fld
or
xchg
or
adc
mov
pop
jmp
aas
mov
mov
push
push
push
inc
test
push
jb
cwtl
clc
lods
cmp
int
repnz
hlt
mov
add
fs
push
mov
dec
jbe
adc
add
incl
in
cli
sahf
out
stos
movsl
sub
sub
into
sub
lods
jg
call
loope
mov
xchg
es
push
or
mov
pushl
jns
adc
inc
push
loop
or
jg
in
xchg
into
jge
lret
mov
jmp
cmpb
push
xchg
sub
xor
mov
leave
cwtl
jbe
fwait
sti
fimull
in
cmp
decl
mulb
call
fisubrl
js
add
or
mov
xlat
in
incl
and
xor
xor
jne
imulb
mov
inc
cld
add
push
push
fwait
xchg
fsubs
mov
inc
jg
scas
call
lea
mov
sti
dec
adc
popa
fsubl
into
inc
or
jmp
cld
inc
shlb
fistps
out
ficompl
jg
mov
fwait
adc
jge
aaa
sar
cld
arpl
in
fidivrs
outsb
mov
arpl
fwait
push
fiadds
int
lcall
scas
xchg
imul
in
add
out
outsl
cmp
cmovg
call
xlat
add
sub
mov
and
insl
daa
mov
dec
cli
enter
push
inc
add
lcall
mov
mov
fidivl
inc
pop
adc
adc
xor
cltd
aad
ljmp
loopne
push
outsb
es
fsts
loop
jp
sbb
xchg
xchg
hlt
jg
ficoml
mov
icebp
mov
inc
push
mov
cmp
aam
stc
outsb
scas
sti
jp
decl
fnstenv
fistpll
test
pop
dec
and
data16
call
mov
xor
mov
cmc
inc
cltd
lods
lods
dec
jg
ret
pop
xor
xchg
jae
cmp
adc
ret
jle
push
js
pop
out
push
fsub
repnz
mov
xchg
aaa
jnp
push
pop
test
mov
pop
lods
cmp
xorb
inc
rorl
and
sbb
notl
pand
lds
sbb
sbb
push
decl
mov
rolb
psrld
inc
mov
cmp
mov
fwait
xorl
and
push
dec
cmp
test
xor
sbb
call
imul
cmpsl
sub
pop
shll
xor
lea
int
incl
loopne
cmp
ret
icebp
stos
add
xchg
mov
lods
cmp
pop
decl
movsl
jnp
js
shll
jno
cmp
xor
lea
incl
out
cmpsl
outsb
add
sahf
jno
test
fwait
cmp
xor
data16
mov
inc
xchg
mov
incl
xchg
xor
cmp
aam
pop
stos
scas
pop
mov
call
daa
test
jle
mov
or
fucomip
in
int
jg
adc
jl
sub
stc
inc
adc
jle
and
lods
mov
mov
rorl
mov
lcall
push
je
repz
sbb
scas
dec
xchg
int
ret
in
test
cmp
sti
pop
cmc
pushl
xchg
pop
pop
lock
cmp
lahf
push
out
push
adc
sbb
or
jg
loope
dec
mov
mov
les
xchg
fists
pop
or
lods
sub
lock
adc
mov
sahf
xchg
pop
sbbb
jmp
cmp
rclb
aaa
std
ljmp
dec
push
neg
test
gs
rclb
jg
cs
icebp
imul
jge
mov
inc
push
lcall
loop
add
sub
cmp
xor
cltd
mov
decl
iret
xor
cmp
add
add
outsl
push
push
pop
push
popf
std
inc
add
outsl
movsl
sub
test
dec
test
adc
inc
loopne
sahf
fiaddl
push
push
loopne
dec
mov
pushl
insl
in
test
sbb
rcrb
mov
stos
out
or
mov
movsl
xor
das
fdivl
mov
rcrb
xor
daa
insb
xchg
cmp
pop
mov
test
push
std
out
addb
adc
adc
dec
stc
in
pop
add
stc
imul
insb
mov
sbb
repnz
sub
ljmp
add
xchg
push
test
ror
ret
push
adc
adc
jmp
push
fnstsw
or
mov
add
fstpt
xchg
push
and
incl
jmp
insl
xchg
ret
in
insb
jne
and
adc
and
repnz
nop
sub
test
lcall
add
mov
stc
call
sub
ljmp
cmc
enter
stc
nop
mov
push
mov
addr16
xor
mov
jg
pushl
mov
xchg
sub
xor
or
out
adc
jp
mov
jae
jp
aas
aaa
aas
jecxz
mov
xlat
es
scas
jnp
jo
imul
js
dec
arpl
xor
pop
pushl
jl
mov
repnz
mov
or
or
jbe
add
jge
lea
xor
sub
mov
xor
subb
dec
and
xchg
in
dec
fs
mov
cmp
mov
imul
or
xchg
cs
aam
test
sub
dec
mov
clc
jmp
aad
sbb
dec
sub
cli
fcompl
nop
or
daa
cmp
in
jge
lcall
sub
hlt
pop
orl
mov
cmp
pushl
pop
or
andb
dec
push
jno
mov
jb
or
fs
out
jnp
push
xor
or
adc
and
pop
cmp
outsb
cli
jmp
xor
dec
push
push
inc
call
xor
out
inc
movsb
add
ljmp
adc
insb
dec
or
add
mov
lret
enter
stos
xchg
xchg
mov
filds
leave
lds
or
jg
lock
adc
cli
ss
ror
jecxz
or
imul
push
hlt
js
adc
dec
cltd
push
fmull
cld
and
xchg
lods
mov
pusha
iret
sbb
mov
out
xchg
movsl
jmp
push
fsubrs
enter
stos
lahf
stc
clc
sub
sar
jecxz
fidivrl
push
push
mov
in
jns
jle
xorl
sti
ret
sub
mov
ja
test
jl
fldl
out
pop
sub
jge
jp
dec
in
sbb
sub
xchg
cli
pusha
mov
incl
icebp
push
out
call
loopne
sbb
push
inc
call
scas
pop
daa
rcl
inc
mov
inc
inc
xchg
in
cwtl
pop
xchg
scas
lret
clc
ljmp
loope
push
sbb
lea
sar
icebp
movsl
ds
jecxz
xchg
push
outsl
lods
xchg
inc
sahf
or
jg
xchg
pop
fstp
jo
imul
movsl
cmp
enter
sub
add
pop
jmp
pushl
ret
jae
aam
push
mov
push
mov
arpl
test
mov
repnz
out
decl
adc
push
cmp
push
cmp
leave
xchg
cmp
push
xlat
xor
pushl
jmp
dec
bound
mov
push
mov
mov
jl
push
movsl
xor
imul
scas
jmp
adc
out
sub
jle
ljmp
rcrl
sub
jmp
sahf
push
inc
mov
jle
lahf
rorl
sbb
mov
jmp
jge
xorb
imul
mov
jecxz
data16
ljmp
or
push
jmp
js
xchg
ds
movsb
movsb
cmc
in
jmp
out
inc
mov
ljmp
in
mov
sbb
and
mov
mov
rorl
adc
inc
fistpl
xor
sub
xchg
pop
mov
sbb
mov
incl
mov
jb
inc
insb
cmp
scas
pusha
or
mov
test
std
mov
pop
andl
imul
add
xor
js
jbe
ror
fbstp
fscale
xor
out
push
jg
sub
ss
lds
ret
mov
pop
mov
out
pop
lcall
pop
pop
in
dec
mov
add
pushl
xchg
lcall
inc
cmp
sahf
inc
cmp
lahf
jecxz
int3
mov
add
scas
xchg
jns
and
fcomip
jg
push
rorb
aaa
sub
mov
sarb
xor
pop
mov
fisttps
jmp
or
std
int3
loop
outsl
bound
jmp
rcrb
jecxz
adc
jnp
mov
jo
sub
add
into
insl
add
clc
jmp
scas
mov
xchg
in
rcrl
pop
js
cld
ss
mov
shlb
xchg
subl
mov
sbb
decl
push
mov
or
daa
sub
call
outsl
test
fdivrl
pushl
ljmp
push
in
sbb
jb
stos
pop
inc
pop
push
jo
fcomip
jno
je
ljmp
or
or
jg
lods
mov
lahf
dec
push
and
into
incl
rorl
adc
popa
sub
dec
negb
sbb
inc
sbb
rorb
fsubrp
jp
fidivl
bound
out
xor
es
pushl
mov
inc
hlt
jge
pop
push
xor
mov
in
sahf
pop
cwtl
outsl
cmp
incl
jp
adc
mov
insb
sbb
test
xchg
sub
sub
add
ljmp
xchg
hlt
jno
lds
fisubrl
idivb
inc
xor
je
loop
xchg
dec
sti
push
out
adc
lea
pop
loope
rolb
movsl
mov
lea
in
jmp
mov
ds
outsb
adc
push
xchg
cmpsl
fwait
jne
mov
daa
jle
xchg
add
pop
in
dec
mov
fst
inc
jge
add
dec
dec
int
sub
orl
mov
cmp
rol
push
fists
jb
push
push
lret
sbbl
sub
arpl
call
imul
insl
in
push
lret
sti
add
jnp
cmp
pop
clc
lock
lcall
rclb
stos
cmc
fisttps
mov
mov
mov
pop
sbb
xchg
cs
hlt
decl
and
les
shlb
sbb
and
incl
mov
fnstsw
fidivs
cmc
decl
insb
scas
sub
dec
inc
xor
mov
imul
xor
xchg
imul
xchg
stos
cli
dec
xchg
fbld
adc
int3
adc
imul
push
ljmp
cmp
out
pop
in
add
fistl
jmp
or
and
addl
fadds
mov
dec
xchg
mov
mov
lock
cmc
xor
push
imul
std
xchg
ljmp
adc
fcompl
or
fdiv
lcall
divb
mov
rcr
fcmovnbe
decb
xor
incl
outsb
dec
mov
sub
leave
ror
sub
jl
rolb
fcomip
pop
es
inc
push
mov
push
popf
daa
aam
stos
dec
enter
jns
or
ja
ds
aas
sarb
adc
outsb
loop
pop
fldcw
cmp
inc
dec
xlat
jb
push
test
xchg
jno
ljmp
and
mov
fldcw
mov
aas
or
movsb
dec
sbb
repnz
jg
mov
enter
pop
aaa
inc
stos
jne
rolb
mov
mov
rol
pop
pop
ljmp
inc
sbb
push
and
push
mov
push
xor
cs
std
outsb
mov
out
aam
movsb
cmp
cmp
test
adc
dec
mov
mov
mov
ja
jp
rorb
mov
add
rcrb
adc
push
xchg
mov
sti
jmp
and
in
insb
pusha
push
pusha
lea
sub
inc
mov
sbb
xchg
dec
sub
enter
jg
sarl
in
and
jb
lret
pop
cltd
and
jecxz
lods
call
das
inc
pop
iret
lcall
aam
xchg
out
dec
push
xor
mov
adc
xor
adc
mov
xchg
jmp
push
mov
push
neg
shl
jb
pop
ds
sti
mov
decl
cmp
aaa
sarb
int3
sub
pop
daa
jae
push
stos
sub
mov
repnz
pop
and
jns
mov
jae
lcall
mov
jne
and
outsb
lcall
dec
test
xchg
mov
movsl
mov
stc
lock
movsb
das
mov
daa
cmc
frstor
inc
push
pushf
cmp
or
sbb
lcall
aad
icebp
xchg
jp
in
dec
sub
xchg
xchg
adc
jecxz
add
call
loope
fldcw
push
lods
sbb
xchg
xor
pop
pop
push
mov
jne
ja
ljmp
clc
sbb
dec
fucomp
int
popa
jb
xchg
jno
mov
je
shll
mov
les
out
popa
jno
cmpsl
clc
addl
add
lahf
jns
push
fcoms
lcall
and
ror
test
mov
mov
jge
int3
mov
dec
testb
scas
or
add
and
xor
and
test
test
cmp
jns
icebp
outsb
out
jnp
icebp
cmp
fsts
adc
inc
loope
pusha
loop
jl
cwtl
adc
loope
pop
nop
lcall
mov
enter
xchg
xchg
push
clc
xor
jl
mov
decl
inc
lcall
pop
push
cmp
dec
xchg
into
push
sbb
pop
sub
jle
fdivl
cwtl
jle
pusha
cmp
xchg
test
sub
push
fisubrs
ss
dec
clc
pushl
adc
clc
or
mov
cld
incl
add
cmpsl
push
fwait
sbb
cmpsb
inc
nop
ret
incl
adcl
adc
inc
cwtl
push
sub
pop
jbe
jb
mov
cmc
mov
cld
mov
lahf
popa
das
insb
sub
stos
stos
daa
sbb
sub
bound
incl
push
inc
xlat
sbb
mov
add
cltd
cvtdq2ps
idiv
pushl
movsl
xor
mov
add
mov
push
cmp
mov
and
pop
insb
ret
shlb
jg
test
sti
mov
shrl
adc
in
xlat
jp
ss
ljmp
clc
incl
cmovl
push
push
push
decl
test
push
cmp
aam
mov
jg
sar
jge
repnz
test
call
xchg
push
testl
movsb
cwtl
cmp
mov
out
movsb
call
inc
repz
insl
xchg
dec
jg
jge
cld
mov
into
xchg
cmpsb
pop
cmp
xor
fs
icebp
mov
pop
xorl
dec
pop
mov
jp
xchg
ljmp
pop
pushf
pop
test
sti
subb
fisubrl
cmp
orl
mov
pop
je
ds
adc
jp
xor
dec
scas
mov
sbbb
mov
mov
andb
cmp
outsb
add
jb
out
lcall
and
mov
pop
push
movsb
jg
jb
cmpb
mov
dec
rolb
jo
push
xor
dec
xchg
mull
cmpsb
lret
xor
pop
dec
jno
mov
pop
pop
test
mov
sbb
jmp
cmp
gs
stos
dec
movsl
incl
inc
xor
movb
sub
mov
inc
lcall
and
incb
or
std
mov
add
cmpsb
sub
scas
and
ljmp
pop
fdivrs
test
cmp
xchg
or
mov
out
mov
jg
pop
sub
lods
mov
aam
adc
jb
insl
pop
dec
add
popf
jb
xor
mov
call
mov
js
aam
out
imul
mov
pop
xor
decl
pop
mov
je
frstor
pop
cmp
cmp
or
lret
decl
enter
and
enter
or
mov
iret
or
ja
pusha
push
lcall
xchg
out
insb
mov
inc
fs
mov
lret
int3
loop
into
xlat
xor
arpl
incl
mov
jmp
mov
push
pop
rolb
jmp
jo
push
xor
fwait
and
nop
daa
pmaxub
stc
dec
xchg
dec
dec
mov
cmpl
incl
cmpl
adcl
mov
inc
xchg
pop
addr16
mov
and
mov
mov
and
pop
and
out
mov
jns
push
pop
push
dec
mov
test
add
ret
mov
ss
lcall
pop
push
sub
push
cs
sbb
adc
push
jo
roll
push
fdivrp
mov
push
inc
insb
ficoml
mov
push
in
icebp
xchg
lcall
mull
sub
mov
pop
and
mov
incl
pop
push
cmpsb
addr16
and
push
shlb
push
outsb
ss
mov
adc
ljmp
decb
xchg
int3
sar
push
and
movsb
xor
popa
sahf
push
test
xchg
movsl
clc
jmp
inc
sbb
movsl
outsl
call
in
fbstp
add
in
incl
mov
xchg
and
jb
xor
sahf
nop
repnz
imul
les
loope
push
push
test
decl
mov
test
in
adc
inc
mov
ds
shrl
jmp
mov
adc
pop
xchg
aam
lcall
lods
insl
add
inc
cld
les
sbb
and
mov
mov
xor
das
sar
sub
mov
aaa
sbbb
jle
stos
push
fisttps
push
jg
fcomip
in
mov
andl
icebp
std
mov
inc
mov
scas
cmp
loope
adc
cmp
push
mov
rcrb
fs
jo
movsl
pushl
ss
pop
jbe
push
jmp
call
jns
aaa
std
fadds
add
jbe
sahf
add
jae
pop
mov
xchg
jb
jmp
popf
cmp
pop
lods
test
mov
push
lds
add
dec
pop
movsb
sbb
addb
call
pop
neg
icebp
icebp
xchg
sub
adc
jmp
iret
lahf
stc
daa
pushf
in
inc
daa
filds
sbb
mov
xchg
xor
aad
icebp
mov
mov
xchg
mov
sbb
in
das
dec
or
or
cld
dec
test
test
or
cmp
push
ret
sbb
mov
test
pop
sub
js
jg
jecxz
jb
cli
sbb
fwait
ss
out
ret
pusha
push
mov
fidivl
xor
xor
shrl
xchg
and
dec
cmpsl
test
xor
cli
jo
into
inc
aas
sub
cmc
or
cmp
push
decl
stc
dec
and
or
test
test
xor
sbb
sbb
fildll
pushl
cmp
inc
push
arpl
pop
xorb
scas
mov
lods
loopne
jbe
jg
pop
pop
mov
or
jle
lods
lss
push
repnz
xor
pop
aas
jns
inc
mov
test
notb
cmp
ljmp
addl
xchg
xor
jbe
call
jb
mov
push
and
push
or
in
negb
add
repz
mov
mov
mov
xlat
sub
add
arpl
sub
data16
pushl
in
pusha
icebp
mov
cmp
das
cmp
outsl
gs
scas
adc
incl
imul
in
scas
mov
or
fcoml
into
lea
xchg
xor
addr16
jbe
lahf
xor
xchg
call
outsl
jno
lea
repnz
clc
cmp
pop
sbb
hlt
jnp
pop
scas
jmp
push
adc
decl
in
jbe
out
mov
insl
push
lret
mulb
xor
mov
jmp
mov
mov
das
pop
shll
enter
xchg
xchg
call
mov
int3
mov
jns
inc
pushf
call
xor
stos
jg
dec
push
in
mov
addl
adc
in
out
mov
notl
outsb
inc
outsb
ljmp
repnz
lods
push
or
shlb
cli
push
ret
arpl
dec
cli
jmp
scas
or
push
in
dec
lods
sub
cli
xchg
shrl
shr
ljmp
gs
or
outsl
mov
mov
xchg
cmc
xchg
iret
subb
leave
pop
les
xchg
ljmp
sbb
fmull
icebp
xor
and
inc
add
lods
shl
clc
stos
push
loopne
mov
sbb
ja
mov
add
pop
mov
xor
xchg
scas
dec
mov
xchg
sbb
cmc
shl
stc
lock
lahf
insb
andl
movsl
imul
jmp
xor
push
mov
pushf
xor
mov
lret
rclb
sub
lcall
out
jmp
flds
je
fsubrs
inc
mov
and
mov
rcrl
call
test
dec
stos
lods
lods
outsl
pop
mov
lods
cmp
or
in
or
fdivl
adc
out
push
mov
dec
gs
lret
jb
push
iret
mov
pop
lods
aad
shrl
dec
push
mov
out
push
jge
push
mov
aad
pop
call
pushl
loope
xor
dec
mov
pop
or
inc
lock
dec
push
add
pop
imul
decl
jb
rcr
add
cld
jnp
push
mov
clc
xchg
push
and
into
inc
out
dec
add
pop
call
mov
bound
in
add
decl
add
or
jmp
fcoms
lret
sti
loop
aaa
aad
cmp
jle
cltd
push
jb
push
cmp
sub
mov
jne
outsl
jle
imul
jnp
dec
push
sub
aaa
push
fstl
hlt
fadds
mov
dec
les
or
call
jmp
xor
cmpsl
pop
sub
and
inc
notb
jo
lahf
test
pop
xor
aaa
mov
js
test
adc
and
das
and
dec
test
stos
adc
pusha
out
cmp
cs
in
push
jl
jp
movsb
lahf
loop
inc
out
lret
aas
cmp
or
popl
shl
and
js
push
xchg
mov
push
dec
push
sub
mov
cmovns
xchg
aam
loopne
ss
insb
and
call
rol
outsb
cld
enter
rclb
test
rorl
int3
adc
popa
or
ud0
jmp
lock
sub
push
iret
mov
sbb
push
imul
popa
adc
stos
mov
mov
cltd
sub
pop
call
int3
insl
adc
incl
pusha
mov
mov
loopne
sub
mov
filds
loope
popa
fnstsw
xchg
jmp
loopne
add
or
xchg
cmpsl
icebp
dec
mov
jmp
loopw
xchg
call
sub
insb
inc
or
jl
add
adc
je
jmp
sbb
mov
in
repz
mov
rorl
dec
repz
pop
decl
push
mov
adc
aam
and
mov
add
mov
sar
cmp
ret
dec
jbe
shlb
stos
and
pushl
js
cmp
pop
cltd
shr
daa
sub
xchg
test
mov
jmp
add
clc
adc
xchg
mov
xchg
push
mov
push
dec
pusha
cmp
outsb
sar
pop
cmp
and
mov
aas
inc
sbb
aas
mov
addb
adc
bound
jbe
sub
cmp
jg
outsb
sbb
lods
out
outsb
dec
add
mov
adc
dec
mov
int
mov
mov
clc
inc
mov
jl
mov
xchg
js
push
call
lock
fisttpll
jmp
mov
loop
sub
dec
cmp
mov
imulb
jge
dec
jno
pop
std
lcall
xchg
cmp
shll
daa
jb
dec
sub
push
fbstp
inc
stc
jle
lea
or
xor
or
push
and
movsl
test
mov
inc
sbb
loop
mov
xchg
jle
fwait
add
jns
lahf
fwait
in
int3
test
shlb
mov
sbb
in
insl
orl
jg
mov
xchg
inc
sti
idivl
and
ja
push
pop
pop
inc
je
mulb
xchg
test
push
test
xor
loopne
push
dec
lock
cwtl
rclb
fstps
add
jmp
repz
mov
mov
jns
std
mov
cli
sti
icebp
push
push
pop
xor
clc
in
cld
push
lds
clc
mov
jb
dec
xchg
adc
cmp
and
arpl
mov
push
push
sub
inc
inc
je
mov
decl
mov
iret
in
or
out
mov
jno
mov
cmp
scas
pop
xorb
adcb
movsb
js
fdivs
push
js
je
jle
aas
push
ds
roll
push
rcl
mov
inc
push
fwait
or
sbb
mov
fsubrl
lcall
movsb
jo
test
stos
loope
imul
sbb
mov
mov
call
jmp
mov
fstpl
or
lods
aas
fwait
xor
loopne
push
jae
sti
ror
jp
jecxz
lock
jmp
lea
repz
roll
imul
push
mov
jno
adc
popf
mov
mov
xor
movsb
scas
or
sub
inc
push
cmpsb
outsb
and
mov
cmpsl
or
jno
jmp
push
mov
mov
add
enter
out
push
pop
mov
pop
notb
adc
adc
ljmp
out
pop
jge
aam
jno
cld
loop
or
cmpsb
push
and
jno
jnp
mov
jmp
ja
inc
sub
out
stos
out
ljmp
lea
std
add
mov
cld
incl
mov
pushl
fisubrs
add
bound
fnstsw
ja
call
mov
push
vaddss
jmp
sbb
stos
cmc
int3
lcall
mov
hlt
test
push
sbb
insb
adc
adc
dec
or
movsb
repnz
mov
and
addr16
dec
ljmp
cmp
and
or
pushf
xchg
sbb
xchg
scas
scas
adc
data16
or
mov
push
cmp
int3
ljmp
test
aad
push
cmp
jo
adc
lea
mov
mov
jne
imul
xchg
int
stc
inc
xchg
bnd
pop
mov
aas
adc
fildl
scas
test
push
jle
mov
pushl
arpl
fdivrl
and
sbbl
out
out
pop
lock
call
push
push
cld
mov
popa
sub
dec
lea
clc
sbb
cmp
rcl
fcmovnb
push
pushl
dec
mov
notl
mov
into
cs
push
jp
repnz
mov
pop
repnz
sub
xor
lret
fnstenv
sarb
adcl
push
mov
xor
sub
sub
call
outsb
xor
outsl
out
int3
xchg
cmpsl
sub
mov
and
mov
outsl
gs
icebp
and
xor
cmp
jg
jns
jmp
scas
push
xor
inc
xchg
xchg
mov
mov
mov
jmp
lds
imul
mov
or
pop
inc
enter
sub
out
xchg
lret
inc
dec
clc
call
pop
mov
adc
mov
push
aas
sub
faddp
ljmp
mov
jmp
sub
movsb
push
jo
loop
mov
js
or
std
decl
mov
jle
mov
and
repnz
sub
mov
adc
sahf
jmp
in
jge
sbbl
dec
shlb
or
cmpb
xchg
rolb
ret
mov
hlt
cmpb
pop
cmp
dec
popf
fmulp
loope
das
or
ljmp
fwait
in
dec
xchg
fstps
fldt
inc
cmp
lods
jae
jmp
cwtl
fidivrl
subb
add
dec
mov
mov
scas
push
pusha
pop
fiadds
adc
icebp
cmc
scas
cmc
and
mov
test
push
cmp
hlt
mov
roll
push
not
ss
stos
ljmp
inc
aam
rorl
pop
ret
ret
aaa
jecxz
call
push
lods
sub
call
in
pmaxub
xchg
into
adc
inc
jb
pop
cmp
loopne
xlat
cmp
out
and
mov
push
int3
xor
incl
stos
dec
sub
xor
arpl
das
scas
das
sarl
pushl
ss
mov
jecxz
in
lahf
icebp
cmp
iret
jmp
lret
leave
pop
lea
lea
call
mov
into
jne
xor
push
pop
jecxz,pn
test
aas
lcall
jg
mov
xor
cmc
push
and
aam
addr16
inc
nop
jmp
incl
rorl
cmpsl
pop
cmpb
cmp
mov
rorb
xchg
test
xchg
jns
dec
xchg
fcomip
jmp
xor
pushf
movsl
lahf
mov
xchg
push
jae
xor
cmc
loope
clc
outsb
inc
ljmp
pop
and
push
mov
fcomip
outsl
inc
icebp
into
subb
inc
outsl
fsubrp
lock
push
cld
inc
repnz
rol
sbb
psubusw
cmp
jmp
loop
inc
or
mov
mov
and
mov
add
fsubrs
dec
call
test
subps
subb
fists
cwtl
jge
jg
leave
gs
inc
mov
insb
stc
fwait
add
push
and
cmp
cmp
lds
ljmp
mov
lret
pop
ds
xchg
pop
enter
jg
dec
arpl
cmp
adc
push
inc
mov
xchg
and
push
bound
cld
mov
xor
xor
lret
fdiv
dec
dec
xchg
sbb
sub
int
aas
dec
lcall
adc
push
fmuls
mov
ljmp
and
jp
cmc
fists
add
daa
fs
mov
jmp
lret
cmp
cmp
mov
mov
sbb
cmc
mov
mov
xchg
nop
pushl
clc
nop
shrb
fiadds
lcall
fwait
adc
dec
loope
stos
and
outsl
clc
push
jmp
jb
fnsave
push
sub
stos
or
clc
ljmp
xor
loopne
cmpsl
push
es
adc
push
mov
and
pushl
xchg
and
inc
rolb
and
mov
into
jg
push
pop
mov
or
or
dec
dec
mov
sub
fucomip
fstps
or
fnstsw
rcrl
xchg
stc
pop
xchg
adc
push
jge
loop
shrb
je
xor
or
jle
sub
mov
fs
sub
lods
or
sbb
int3
mov
fsts
fsubl
js
out
cmp
cwtl
dec
sbb
cmpsb
pushf
dec
pop
lcall
add
push
pushfw
lret
rcll
insb
cs
add
lret
imull
movsl
push
xor
add
test
js
xor
fwait
outsb
inc
pop
inc
xchg
xor
and
mov
jp
and
cmp
shll
lcall
jg
mov
hlt
cli
add
lods
xchg
popf
test
insl
js
and
stc
movsl
in
sbb
sahf
cs
inc
adc
mov
shl
test
ds
mov
cmp
pushl
pushf
and
fsubrs
push
cmp
xchg
lea
jbe
fwait
adc
and
mov
out
lcall
cld
popa
or
jne
push
test
negb
gs
stos
cmpsb
lahf
aaa
xchg
or
pop
sub
xchg
lock
aaa
pop
dec
sub
sbb
mov
das
mov
xor
jl
incb
loop
ljmp
mov
add
mov
call
adc
call
inc
bound
lds
or
mov
fnstcw
xlat
jo
lahf
shl
cli
sbb
cmpb
aaa
pop
xchg
mov
daa
or
in
in
repz
call
lcall
out
mov
jnp
jns
ja
push
outsb
cmp
mov
ds
push
hlt
sti
add
adc
shlb
js
aam
clc
das
shlb
cmp
fs
mov
xchg
push
hlt
fisubs
push
mov
mov
dec
xchg
movsl
test
icebp
mov
mov
stc
es
jle
xchg
dec
loop
push
into
xchg
test
sub
stc
mov
or
lret
in
adc
sub
das
inc
lds
dec
scas
mov
cmp
in
addl
decl
pop
scas
inc
les
dec
nop
push
xorb
pop
insl
mov
in
adcb
pushl
inc
gs
es
loopne
test
insb
mov
add
mov
loope
lcall
ljmp
mov
inc
sbb
lcall
and
mov
rolb
jmp
imul
or
and
sub
inc
sti
and
aam
pop
fsubs
mov
fstpl
mov
and
and
adc
lcall
out
adc
addr16
xchg
divps
stc
lods
dec
push
repnz
inc
jbe
and
push
push
daa
add
push
in
scas
into
jp
push
ret
add
test
inc
inc
out
ret
les
ljmp
stos
dec
aad
xor
mov
push
adc
mov
mov
outsb
pop
int3
or
insl
fcomip
rorb
mov
out
rorl
cmp
or
fildll
out
or
xchg
gs
leave
dec
test
std
xorl
sar
cld
call
fiaddl
xor
out
pop
inc
dec
icebp
xrelease
add
loope
scas
movsb
icebp
sub
outsb
add
popfw
xchg
bound
pop
test
sub
arpl
popf
mov
sbbb
fisttpl
outsb
xor
xor
mov
std
das
push
jbe
leave
mov
rcr
jno
sub
add
pop
mov
or
in
test
cmc
cmp
mov
test
stos
sbb
sbb
dec
stc
fildll
dec
lods
lcall
repnz
inc
sbb
or
jno
inc
sub
icebp
aam
mov
fs
inc
ds
mov
sub
mov
dec
mov
sbbb
push
call
sahf
or
cmpsl
xor
mov
pop
out
push
sbb
sbb
jns
jmp
call
push
dec
mov
and
popl
jl
gs
sbb
add
push
xchg
add
popf
iret
es
or
mov
call
sub
add
adc
stos
mov
fmuls
push
insl
jmp
push
les
dec
cld
lock
mov
mov
dec
lcall
pop
lods
mov
and
jg
rcll
cmp
lods
ret
and
fcmove
decl
xor
notb
mov
fcomp
push
adc
pop
push
incl
add
cld
ljmp
fcompl
lock
cltd
mov
std
scas
and
out
iret
sar
aaa
mov
fimull
jle
out
icebp
or
mov
jg
xchg
cli
push
mov
adc
xor
lds
repz
xor
lcall
movsl
sbb
bound
cwtl
les
fidivs
cmpsb
lcall
lret
pop
adc
jp
stos
jmp
scas
xchg
mov
movsb
add
pop
xlat
outsb
repnz
in
les
push
repnz
lcall
out
xchg
ss
xchg
push
jp
pop
mov
sti
jg
clc
jmp
pop
jecxz
in
fildll
outsb
xchg
mov
xchg
mov
pop
arpl
outsl
ds
mov
cmp
push
out
in
jge
lods
in
stos
cli
das
cli
stos
rclb
mov
mov
mov
ljmp
sbb
xchg
icebp
mov
aam
sub
ljmp
mov
fcmove
add
or
push
sbb
aam
sahf
xchg
pushf
pop
lahf
out
cs
repz
xor
ficoml
mov
insl
pop
addr16
in
mov
ljmp
and
dec
pop
and
mov
xchg
ja
lods
fisttps
mov
mov
or
mov
vmovdqa
adcb
int
shlb
mov
xor
in
push
aad
insl
mov
into
xchg
cltd
call
push
mov
dec
fs
movsl
cmp
sub
push
sti
pusha
mov
mov
lcall
pop
movb
in
nop
or
inc
cmp
clc
cmp
mov
jle
ljmp
call
ret
sbb
cmp
jno,pt
sub
mov
sar
pusha
jne
mov
xlat
cmp
decl
shrb
dec
mov
and
stc
xor
imul
jge
iret
cld
pushl
mov
addr16
hlt
mov
cmpsl
movsb
cmp
jmp
out
and
jg
inc
xchg
inc
notb
adc
out
or
aaa
jmp
jmp
shrb
jecxz
fiadds
xchg
adc
jmp
mov
fbld
movsl
js
add
mov
xlat
ljmp
dec
mov
mov
jp
mov
outsw
or
push
iret
dec
jbe
int3
lret
lret
push
cld
decl
xor
cwtl
adc
sub
data16
call
jbe
loopne
sub
call
ret
push
insl
adc
dec
cmp
loop
outsl
cmp
pushl
pop
inc
loope
pop
sub
push
mov
mov
xor
std
sbb
cmc
pop
fs
push
xor
lret
sahf
jg
pusha
shl
test
sub
xor
mov
push
cmc
icebp
and
in
clc
ljmp
loop
push
xor
dec
push
xor
fdivrl
gs
mov
xor
lcall
adc
fcmovbe
or
movsl
jns
repz
movl
das
loope
jecxz
lcall
pusha
sub
test
add
test
sahf
mov
push
sti
jo
out
pop
pusha
pushl
orb
call
imul
jg
movb
add
stc
xor
pop
fwait
fwait
ljmp
sbbb
sbb
adc
or
clc
je
push
jecxz
cmpsl
ja
mov
push
ret
sub
jmp
gs
mov
or
fdivl
fmull
and
loop
push
fdivrp
scas
cli
decl
push
ret
lods
push
sbb
cmp
cs
jb
and
mov
push
fimuls
orb
cmp
movsb
jl
or
ljmp
mov
add
pop
out
repnz
jmp
loope
xor
cmp
clc
or
cmc
jmp
and
mov
mov
movsl
and
fwait
fst
sub
test
out
cmp
cmp
push
nop
test
aam
mov
mov
sub
les
jno
ss
cmpb
inc
test
aaa
mov
scas
xchg
xchg
dec
mov
sti
test
out
movsb
lock
arpl
mov
movsb
popa
inc
xchg
pop
xor
gs
sub
jp
aad
pop
jmp
imul
jnp
push
js
call
loope
insb
cmp
loopne
jle
mov
ret
xor
add
gs
adc
dec
jecxz
hlt
ds
decl
addr16
in
daa
or
fwait
xchg
shll
xlat
mov
cmc
xor
fldl
call
ljmp
or
push
in
dec
sbb
mov
xorl
scas
cmp
icebp
cmp
jg
mov
lcall
jns
int3
mov
cli
mov
pop
es
ds
and
push
lods
mov
insl
cld
jmp
popa
jecxz
adc
jl
xchg
les
cmp
arpl
pop
mov
mov
jb
push
mov
daa
xchg
mov
into
cmp
jg
jmp
xchg
andl
or
insb
cmpl
pushl
mov
xchg
push
insb
cmp
test
and
xchg
arpl
scas
cli
outsl
xchg
loopne
outsb
xchg
jae
sbb
js
aad
popa
faddp
cmp
jg
pop
sub
jge
jns
scas
leave
mov
arpl
jmp
fnstenv
jo
fisubrl
and
jae
sub
and
add
faddl
inc
mov
dec
add
mov
sbb
inc
fcomps
js
push
or
out
or
or
iret
repz
adc
or
jns
iret
adc
test
movsb
sbb
sbb
sbb
iret
sarl
push
les
pusha
imul
and
andb
cmp
pause
cmpl
repz
push
cld
pop
decl
pop
lock
push
add
leave
jae
xchg
lea
mov
nop
xchg
out
jb
xchg
xchg
add
pop
inc
bnd
js
incl
orb
and
popa
jb
iret
insl
insl
cmpb
mov
pop
outsb
lret
aas
fwait
leave
repz
add
push
push
add
repz
push
sbb
daa
iret
push
or
or
lods
pop
jb
or
or
mov
imul
daa
adc
adc
xchg
xchg
fisttpl
xor
push
addr16
das
push
xorps
loopne
insb
das
insl
push
and
pop
jo
jns
push
pop
andb
jo
mov
test
xchg
fcmovne
leave
repz
in
adcb
xlat
sarb
or
pop
inc
pop
test
add
sbb
in
add
mov
and
mov
and
sbb
pop
inc
jbe
stos
adc
add
add
dec
mov
lods
pusha
cmpb
cmpsb
fisttps
mov
and
jle
test
shll
mov
decb
inc
add
mov
iret
mov
in
sbb
in
call
adc
jle
mov
fidivrl
xor
fcomp
loopne
movsb
adc
fnstenv
jle
mov
inc
fidivs
add
push
adc
inc
test
scas
xor
mov
jle
shld
xor
add
xlat
push
stos
psubusb
int3
jns
out
enter
mov
jnp
out
pushf
nop
mov
js
iret
repz
jo
push
repz
pop
pop
push
push
leave
repz
dec
inc
cmp
sub
out
fisubs
push
sbb
add
nop
lock
repz
loopne
sarb
or
cs
stos
jge
push
or
stos
pop
jg
and
jbe
xorb
sub
icebp
cs
push
push
in
cmp
pusha
mov
mov
pop
push
sahf
out
fidivrs
push
pop
js
mov
ds
repz
adc
xor
add
cmp
pop
ja
mov
iret
jecxz
shl
xchg
dec
das
push
dec
arpl
nop
stos
lcall
add
mov
xchg
lahf
inc
add
add
sbb
xchg
testb
add
cmp
sbb
adc
incl
adc
add
incl
and
js
ja
mov
mov
or
push
mov
mov
inc
push
sbbb
and
insl
iret
outsb
sbb
xor
pop
adc
jae
xor
pop
adc
sti
mov
sbb
outsb
sti
aas
sti
aaa
mov
jae
jnp
mov
sbb
mov
inc
jo
mov
sti
mov
inc
jnp
mov
mov
cltd
inc
add
mov
or
jne
adc
mov
cmp
sbb
lahf
imul
mov
sbb
sbb
fistpl
xor
jo
pop
jnp
inc
xchg
add
push
add
cmp
add
or
cmp
pop
xchg
sbb
push
pop
push
jg
in
in
pop
sbb
adc
seto
push
sbb
insl
push
sbb
xchg
and
pop
sti
xchg
adc
test
xchg
sbb
xchg
sbb
inc
push
push
jbe
sbb
cltd
cmp
adc
add
jmp
lock
rorb
add
loop
jae
pop
pop
data16
inc
mov
mov
dec
pop
orb
loopne
cwtl
negl
push
aas
push
jg
lcall
lcall
ljmp
adc
add
and
adc
call
and
dec
int3
int3
xor
hlt
cs
lcall
push
in
clc
jmp
ds
pop
call
and
mov
cmp
shll
pop
call
iret
pop
ret
and
mov
fnstcw
pop
insl
idiv
rcrb
cmp
jg
out
mov
or
and
cmp
pop
rcrl
cld
pop
jg
bound
push
xchg
add
or
add
movsl
pop
bound
cmp
cmp
sti
cld
cmp
sbbl
jge
inc
sub
pop
pushl
hlt
iret
rorl
filds
clc
lock
ret
faddl
jns
addb
rorb
rolb
mov
pop
cmpsb
pop
mov
in
addb
jb
cmp
cld
inc
pop
js
ja
addb
mov
pop
js
xchg
dec
xchg
lcall
clc
lcall
and
ja
decl
cmp
lcall
push
mov
dec
lock
pop
cmp
lcall
lock
xchg
gs
decl
loopne
inc
jbe
add
xchg
notb
cmp
jnp
ja
flds
pushl
cmpb
test
aas
and
mov
emms
sbb
scas
add
sbb
das
pop
dec
mov
inc
cmp
inc
pop
inc
lcall
imul
pop
inc
pop
inc
js
pop
lea
popa
push
shlb
jns
inc
testb
push
add
loopne
adc
incl
pop
sbb
sbb
sub
movb
mov
jl
pop
lods
pop
push
add
loopne
js
loopne
jg
lock
jmp
call
adc
pop
mov
inc
decl
add
aas
add
inc
add
pop
call
mov
inc
dec
push
hlt
sbb
pop
pushl
jbe
outsb
pushw
adc
dec
hlt
dec
incb
jbe
fwait
hlt
test
pop
and
push
pop
jbe
adc
mov
out
ss
pop
inc
pop
pusha
pop
add
and
fildl
pop
pop
jb
and
lock
inc
pop
add
pop
ljmp
loop
add
pop
sbb
lret
inc
add
add
mov
testl
les
xchg
decl
ja
or
xchg
ss
jl
lcall
push
mov
jl
inc
je
inc
lcall
add
cs
sarl
movl
test
jl
pop
xorb
flds
push
rorb
ljmp
mov
push
incl
out
adc
sbb
lcall
jl
fidivl
jl
sbb
cli
aaa
or
jge
xchg
pop
pop
jl
scas
add
sti
out
mov
mov
sbbb
or
sti
pop
int3
pop
daa
pop
fbld
les
jl
xchg
ss
cmp
ja
popa
cld
pop
ja
mov
jnp
mov
add
mov
adc
or
ret
aas
movups
mov
add
sbb
add
scas
adc
add
inc
push
inc
adc
or
push
nop
push
sti
add
adcl
loop
sti
adc
xorl
aas
push
push
aas
mov
cmpl
testb
aas
sti
mov
pop
mov
push
sti
aas
sti
aas
adc
int3
sti
aas
mov
sti
sti
aas
sti
movsl
jge
in
aas
mov
aas
xor
jo
aas
add
adc
or
aas
arpl
sub
mov
mov
out
jnp
or
inc
pop
xor
aas
xlat
pop
lea
pop
adc
aas
stc
sbb
add
jae
or
dec
icebp
push
adc
add
iret
rcll
push
cmp
or
ss
push
imul
mov
push
incl
pop
xchg
enter
clc
jo
ja
mov
nop
jo
xchg
jo
es
jo
inc
and
or
incl
fiadds
cwtl
add
orb
data16
dec
pushl
inc
add
test
cmp
add
xchg
cmp
cltd
nop
cmp
xor
fstpl
adcb
inc
adc
in
mov
jge
sbb
fcmovu
mov
jp
roll
cltd
push
shl
mov
inc
add
cltd
fdivrs
mov
inc
pop
mov
jge
idivl
cmp
jp
or
add
cmp
inc
sbb
aam
jmp
fisubrs
popl
or
add
int3
jg
aas
push
pop
push
mov
mov
loopne
xorb
add
sub
and
jae
cmpsb
push
loopne
decl
and
dec
repnz
jg
jo
div
lock
push
shrl
decl
mov
testl
leave
pop
push
sti
and
decl
add
jo
aas
sti
int3
jo
jp
call
js
aas
mov
xchg
inc
fildll
decl
lret
add
add
mov
ds
jmp
push
and
add
xor
lock
xor
xchg
js
insb
mov
sub
xchg
aas
or
sbb
insl
mov
aas
or
ja
inc
adc
mov
add
maskmovq
mull
mov
rcr
inc
ds
sbb
aas
in
insb
repnz
aas
and
rcrb
cmpb
pop
test
or
and
jmp
out
stos
jno
faddl
xlat
sahf
xchg
mov
push
shl
out
inc
clc
cld
inc
add
in
cmp
and
inc
add
out
decl
jno
push
and
jl
add
rolb
or
enter
pop
push
js
sbb
test
pop
incl
ss
xlat
cmp
incl
mov
adc
push
call
decl
outsb
mov
aas
lcall
negl
insb
add
aas
mov
push
or
push
add
aas
orl
jge
cmp
aas
clc
xorl
mov
paddsb
cld
aas
mov
cmp
clc
int3
mov
loopne
lods
jg
pop
or
out
xor
bound
mov
pop
inc
adc
push
clc
lods
testb
insb
push
dec
lods
inc
lcall
add
add
pusha
in
incl
stos
push
or
aam
repz
add
pop
and
add
jg
dec
pop
ret
decl
shrb
add
push
shll
add
mov
mov
repnz
lret
xchg
dec
jnp
int3
les
loope
mov
data16
ljmp
cmp
mov
outsl
sarl
aas
push
cltd
jg
movsl
sub
aas
lcall
sahf
lahf
ds
ficomps
aaa
xor
cltd
xchg
xchg
xor
jnp
daa
fcomp
push
pushl
pop
mov
mov
fbld
int3
outsl
icebp
scas
sbb
mov
testl
es
je
jnp
fs
mov
insl
pop
fwait
cld
mov
mov
mov
aas
add
add
push
popf
ja
mov
sti
jno
fstl
inc
mov
mov
inc
out
xchg
mov
dec
push
incl
mov
push
out
adc
shl
add
sub
and
or
xchg
jp
or
add
jae
mov
adc
jb
frstor
mov
daa
mov
mov
inc
shlb
js
add
mov
cmp
add
mov
cmp
mov
pop
mov
mov
ds
arpl
xor
jae
xor
push
mov
mov
add
ret
ss
sbb
add
fwait
mov
pop
aad
mov
aas
add
cmp
sbb
in
outsl
and
mov
cltd
aas
movsb
add
in
ds
aas
sbb
xchg
jl
pop
pop
cltd
cltd
cwtl
mov
rcrb
mov
mov
sbb
fimull
pop
add
pop
out
insl
les
orb
in
dec
insl
cmp
sub
sub
add
adc
lcall
mov
pop
jae
insb
inc
pop
mov
rorb
sarl
aaa
rclb
into
jb
loopne
ljmp
nop
add
add
jg
loopne
fidivrl
add
add
int3
inc
add
lods
leave
addl
insl
add
repz
inc
ds
ds
mov
js
addl
or
outsl
add
mov
dec
inc
lcall
pop
adcl
aas
aaa
aaa
aaa
xor
int3
or
out
add
aas
sarb
inc
movsl
notb
aas
inc
in
int3
fcomi
test
ret
add
mov
mov
out
xor
inc
or
or
inc
aas
mov
sub
int3
or
inc
inc
fsubrs
int3
jle
add
inc
les
add
fldcw
sub
add
scas
sbb
xchg
inc
aaa
or
inc
dec
test
push
pop
inc
rorb
add
xor
inc
lahf
and
dec
inc
roll
dec
pop
and
cmp
dec
lahf
jg
push
add
mov
add
pop
push
scas
push
add
or
int3
sbb
loope
push
xor
sbb
add
pop
aas
push
loop
cmp
fistpl
aas
fiadds
mov
add
jo
mov
sbb
add
mov
pop
add
pusha
add
js
loopne
in
or
pop
add
cmp
cmp
inc
add
scas
aas
nop
push
cld
add
adc
addl
imul
mov
jmp
or
mov
jge
mov
negl
inc
jg,pn
sbbb
ffree
push
aas
or
jg
mov
pusha
mov
mov
jmp
addr16
mov
pop
xchg
add
ret
push
loopne
push
ss
add
cmp
dec
push
loopne
lock
mov
add
adc
pop
sbb
pop
mov
int3
int3
les
pop
and
sub
cmp
dec
inc
add
nop
lods
rcrb
pop
lcall
cmp
pop
add
test
pop
ljmp
lock
or
lcall
and
movsb
insb
add
adc
push
jg
imul
pop
in
cmpb
add
lcall
subb
filds
or
sbbl
imul
or
aas
and
mov
push
cmp
shll
dec
mov
or
addb
pop
xchg
add
push
xor
add
les
or
mov
add
jp
fdivrs
imull
icebp
repz
jo
test
imul
dec
inc
add
ja
lahf
lcall
adc
pop
js
decl
fsubrs
decl
pusha
clc
cmp
add
pushl
cmp
outsb
push
movsl
lcall
fwait
jecxz
enter
jnp
jbe
adc
aaa
lcall
cmp
stos
jg
cmp
pop
clc
mov
inc
imul
mov
mov
jge
fisttpl
negl
insl
arpl
inc
cmp
adc
inc
mov
stos
dec
loop
inc
cmp
pop
dec
mov
inc
jg
fs
pop
push
sub
incl
adc
adc
cmc
sub
and
mov
mov
fisubrs
lcall
add
pop
ret
loopne
lcall
es
aad
pop
adc
incl
jmp
aas
rolb
sbb
pop
and
xchg
and
lock
adc
insb
sbbl
nop
add
xor
out
sarl
or
fs
fadds
xchg
sbb
in
cmp
cmpb
jg
mov
rclb
outsl
mov
ret
jge
pop
adc
sarl
mov
adc
pop
sarb
sti
nop
jmp
pop
mov
pop
inc
rcrb
or
sbb
pop
cltd
out
or
and
jle
std
lahf
push
inc
std
testl
push
lock
outsb
pusha
inc
cwtl
inc
fsubl
jg
mov
cwtl
jnp
addl
sti
out
add
mov
inc
add
jg
std
std
mov
xchg
push
imul
iret
repz
incl
add
sbb
add
add
and
add
dec
ficompl
cmp
add
sub
pop
addb
and
pop
jnp
adc
and
xor
pop
insb
aaa
mov
outsb
insb
mov
or
icebp
push
sbb
pop
ss
push
adc
add
outsb
or
sbb
fdivs
push
fbstp
sbb
ficomps
out
sub
pop
std
in
xor
or
xchg
xchg
stos
cmp
mov
and
pushf
and
xchg
dec
sti
insb
add
sbb
aas
orb
add
sbb
sbb
mov
leave
movsl
pop
sbb
insl
pop
jnp
js
and
sbb
mov
and
popa
adc
pop
adc
jg
rolb
daa
cmp
sbb
push
cmp
pusha
movsb
mov
shlb
iret
aas
std
sbb
sti
out
fisubl
out
push
add
cmpsl
rcrl
iret
xor
push
and
je
std
push
stos
pop
jae
cltd
push
add
repnz
sti
push
xor
icebp
testb
lds
xchg
lock
add
mov
add
push
push
mov
outsb
in
inc
mov
in
cmc
icebp
ret
dec
icebp
scas
add
fstp
add
jnp
int
outsl
lea
fildll
cmpsb
fucomi
add
jmp
add
sar
mov
add
aad
frstor
fsubr
add
rcl
add
rcl
ds
fstpt
lcall
fldcw
std
in
add
rcl
add
int
add
fisubs
decl
mov
loop,pt
es
filds
push
shr
add
lret
inc
int
stos
in
out
leave
leave
push
lret
jecxz
lret
push
sub
fisttps
into
mov
push
or
jbe
addb
rol
insl
rol
ret
insb
or
les
je
jecxz
imul
add
ret
out
clc
lret
mov
insl
pop
sub
jle
fiaddl
into
test
loopne
fcmovb
adc
add
mov
call
rorl
fbld
jmp
cs
mov
xchg
push
mov
push
mov
mov
addr16
adc
pop
xor
outsl
add
lods
mov
sarb
mov
mov
mov
mov
add
clc
dec
leave
pop
pop
lods
scas
add
movsl
idiv
dec
inc
incl
lea
pusha
stos
mov
mov
add
lahf
stc
add
or
insb
mov
inc
and
push
mov
outsb
movsl
lcall
sahf
scas
cmpsl
test
pop
cmpsb
movl
inc
movsl
pop
or
mov
mov
dec
rorl
shlw
ss
int3
pop
mov
sbb
cmpsb
pop
mov
dec
movsb
ret
add
xchg
mov
lahf
fdivp
mov
mov
mov
inc
push
shrl
insb
lcall
testb
xor
push
loopne
outsl
pop
lahf
es
mov
insl
clc
or
adc
xchg
add
mov
cltd
mov
cmp
xchg
mov
pushf
jbe
xchg
push
pusha
shll
hlt
lods
push
mov
mov
int3
popf
sahf
loop
sar
push
xchg
push
adcl
add
xchg
push
test
jge
push
mov
jp
xchg
pushf
out
mov
aaa
mov
cld
idivb
mov
add
mov
sahf
mov
dec
fnstenv
sbb
dec
sub
cld
mov
mov
ds
bound
sbb
lods
and
add
cwtl
add
aam
pusha
inc
roll
mov
xchg
jl
test
les
xchg
sbb
xchg
movl
mov
mov
add
inc
mov
sbb
test
xorb
sbbb
or
jl
xchg
mov
js
insl
rcrl
popl
jl
or
push
mov
out
jp
xor
pop
lock
lea
jns
adc
ret
jno
or
dec
inc
jp
test
data16
mov
sti
imul
jb
mov
xchg
es
pop
or
out
dec
push
cmp
insl
jle
popa
mov
ror
fisubrs
pop
sahf
pop
pop
xchg
add
pop
mov
aas
pop
ss
mov
add
aaa
pop
aad
dec
scas
dec
dec
dec
dec
push
pop
dec
popa
dec
inc
pop
inc
sti
out
dec
pop
inc
cmp
push
add
or
inc
int3
pop
outsl
out
arpl
and
push
inc
icebp
push
mov
add
xchg
negl
out
outsl
or
mov
idiv
arpl
adc
ljmp
roll
daa
ss
arpl
mov
repz
loope
pusha
xchg
cmp
inc
cmp
aas
repz
leave
fcmovnu
pusha
int3
xor
pop
add
mov
rcl
pusha
fwait
xor
xor
add
je
sti
jnp
sbb
add
fcmove
xchg
in
cmpb
xchg
xchg
jle
repz
push
jg
scas
mov
mov
mov
in
xor
sahf
xchg
idiv
fldt
idiv
gs
out
std
fidivrl
add
push
in
xor
xchg
xchg
das
pop
dec
push
pop
or
stc
sub
test
xchg
jg
das
jl
inc
iret
ja
pop
popa
adc
add
fisubrl
mov
lret
out
idiv
xor
das
cmp
outsb
pop
pop
outsb
shl
jmp
xchg
add
lods
imul
cmp
adc
sarl
or
dec
push
pop
das
jns
xchg
out
popa
nop
lock
fistpll
pop
pop
pop
cmp
jl
ss
pop
arpl
xchg
stos
jmp
pusha
and
adc
arpl
pop
xchg
ficompl
outsb
xor
xchg
int3
movsb
push
cmp
sub
sti
repz
and
pop
inc
sub
data16
sar
fistps
cmpsl
push
dec
mov
cmp
xor
mov
cmp
cmp
pop
data16
and
pop
dec
dec
js
xor
inc
dec
inc
stos
lds
and
ss
fwait
and
pop
adc
sub
aas
push
std
js
pop
nop
pop
jns
xchg
push
dec
sbb
dec
pusha
mov
mov
jl
cmp
pop
pop
int
xor
or
das
je
sbb
fistpll
movsl
mov
cmpsb
fstp
xlat
pop
xor
push
int3
pop
jg
div
out
pusha
dec
sub
adc
add
add
test
les
incl
xchg
mov
lahf
mov
cmp
ss
stos
in
jle
vpaddsw
xchg
mov
fidivrs
lock
fs
and
in
rolb
sub
loopne
pop
mov
mov
xchg
dec
mov
mov
or
mov
xor
sbb
sub
rcrl
cmp
fsubrp
add
sbb
mov
push
push
xlat
ja
push
add
bound
sub
xor
sub
xchg
insl
nop
fstpt
adcb
pop
clc
clc
clc
mov
ljmp
dec
mov
ds
fdivr
cmp
lret
mov
fucomp
in
add
cli
pop
popa
mov
call
and
xchg
adc
pop
bound
imul
add
fildl
pop
push
movsl
fdivp
arpl
or
cld
aas
popa
push
jp
bound
xorb
push
test
arpl
push
out
fildll
or
adc
push
pop
pop
ljmp
pop
test
adc
paddd
adc
add
or
pop
jle
mov
or
jbe
addr16
pop
gs
imul
sbb
cmpsl
sub
cltd
dec
insb
add
clc
outsl
lods
lea
xchg
jg
jo
stos
cmp
mov
bound
pop
or
cltd
pop
add
pop
insb
pop
dec
add
pop
imull
mulb
in
cmp
pushf
bound
add
jp
ret
pop
sub
jnp
mov
add
mov
pop
mov
mov
jp
pop
pop
or
cmp
das
mov
mov
bound
das
xor
std
fstpl
add
dec
aam
push
xor
push
adc
arpl
pop
ja
sub
es
push
pop
bound
stos
inc
dec
fisubrs
insl
dec
xor
dec
xor
mov
cmp
jl
std
fwait
fwait
mov
add
pop
mov
pop
add
mov
dec
xor
adc
pop
mov
sub
sbb
mov
call
scas
xchg
jno
sub
addr16
idiv
inc
inc
cmp
and
pop
xorl
mov
adc
push
push
daa
sub
rcl
add
mov
cmp
dec
pop
xchg
leave
mov
inc
decl
icebp
sbb
jb
loopne
rcrb
pop
add
movsl
jmp
paddb
dec
imul
add
int
push
adc
sahf
mov
or
sysret
add
jb
dec
pop
jg
inc
xorl
mov
add
das
orb
mov
ja
lock
sub
incl
leave
xchg
pop
cld
pop
and
enter
orb
dec
cld
dec
jae
movsb
push
pop
dec
mov
mov
xchg
push
xchg
cmc
es
dec
xchg
sti
ret
add
hlt
call
in
mov
mov
lock
lds
outsb
out
cs
jbe
in
neg
imulb
add
loop
jmp
add
ds
cs
add
neg
add
mov
movsl
xchg
jmp
fcmovnu
add
fadd
cs
jmp
fidivrl
sti
inc
push
in
roll
aam
push
add
fisttpl
pushf
add
pop
lock
xlat
sti
add
ror
add
push
insb
in
loop
int3
cmpsb
jecxz
add
jmp
add
sar
add
fists
idivb
xor
ss
add
mov
add
fidivs
sti
fisttpl
mov
xlat
inc
faddl
mov
aam
mov
repnz
ret
pop
outsl
fwait
pop
ret
ret
loop
enter
rcr
add
stc
add
or
mov
lods
loopne
push
xchg
out
sarb
mov
mov
mov
jmp
push
ret
push
rcr
lret
out
das
clc
outsl
cs
add
clc
shll
mov
inc
aam
mov
sbb
lahf
mov
add
mov
data16
loopne
inc
mov
xchg
in
mov
add
mov
inc
mov
add
mov
inc
sub
lock
or
ret
sahf
in
fistpll
push
mov
dec
lret
or
add
mov
scas
incb
ss
scas
add
scas
lcall
fwait
add
mov
pop
lods
pop
into
xchg
loop
pop
scas
scas
cli
les
cmpsl
stos
jbe
ret
or
lds
mov
cli
test
adc
lods
xchg
shlb
int3
or
mov
mov
adc
fcmovbe
adc
outsb
dec
movsl
mov
dec
dec
mov
mov
mov
mov
mov
push
lods
mov
es
jl
pop
insb
out
mov
mov
in
fdivs
popf
hlt
mov
outsb
sahf
mov
scas
fs
mov
inc
cltd
push
sbb
mov
scas
fwait
ds
mov
in
insb
add
sbb
insl
ret
xchg
fsubl
cmpl
push
xchg
xchg
mov
sbb
add
dec
jbe
aaa
add
xchg
test
pusha
jle
pop
lea
popf
scas
fwait
cs
mov
subb
stos
xchg
outsb
jecxz
out
adc
bound
cmpsb
jns
dec
les
push
cmpsb
nop
nop
out
mov
mov
std
sbbb
mov
iret
xchg
mov
push
pop
scas
leave
mov
out
jne
scas
es
mov
push
ds
enter
xchg
data16
add
and
add
push
test
xchg
scas
mov
outsb
aas
jg
pop
ret
test
addb
ljmp
cli
shll
xchg
push
jg
clc
in
cmp
add
push
lahf
jg
add
movsl
or
pop
test
cs
ja
dec
jge
or
xchg
push
shll
insl
clc
inc
das
addb
jo
ss
leave
outsb
pop
xorl
lea
mov
lods
ss
into
imul
outsb
inc
xchg
outsb
push
lds
iret
subl
lahf
mov
add
push
add
add
pop
mov
lcall
aad
xchg
jmp
notb
adc
hlt
stc
pop
sub
sub
mov
hlt
hlt
mov
arpl
inc
pop
repnz
fucomp
jmp
push
test
std
ret
fstp
jo
loop
imul
scas
scas
cmpsb
mov
cltd
lea
ret
jmp
add
add
mov
cmpsb
lret
mov
push
das
sarb
mov
mov
sbb
xor
aas
dec
lods
std
dec
xor
jnp
out
add
or
push
mov
jmp
adc
add
xchg
jge
and
scas
js
test
push
addr16
fbld
dec
push
test
jecxz
inc
and
jnp
xchg
xlat
js
js
mov
push
dec
lock
inc
cmp
jbe
outsb
aaa
jecxz
and
pop
movsb
cmp
fcom
js
ljmp
rcr
stos
ds
jbe
dec
filds
aam
pop
or
push
xchg
js
in
ljmp
leave
cmpsb
mov
cmp
jno
cmp
add
xor
repnz
ljmp
cmp
rdtsc
das
dec
call
cmp
enter
scas
scas
icebp
div
repz
and
mov
mov
sbb
cltd
enter
je
icebp
cli
cli
std
aas
mov
or
out
outsl
lahf
inc
ds
daa
adc
add
repnz
sti
pop
loopne
ja
fcomps
sub
mov
aaa
mov
sarl
or
lret
in
ja
or
add
push
dec
lock
jge
mov
lcall
ja
pusha
inc
ja
test
mov
mov
jno
push
jnp
jle
jb
test
aas
imul
dec
add
pushf
sarb
bound
push
inc
sahf
fstpt
push
gs
mov
sub
xor
fnstcw
inc
pop
cmp
and
in
mov
add
and
cmp
cmp
add
mov
loopne
inc
pop
xorl
ficoml
sub
inc
sarb
pop
pop
xchg
mov
jp
sbb
mov
jg
push
cltd
fdivrp
and
xchg
xchg
dec
pop
push
push
rcrl
dec
and
cmovl
jnp
jnp
lods
out
cmc
cmp
pop
inc
push
dec
fmull
mov
or
ret
stos
jg
pop
lock
iret
and
movsb
fwait
ds
xor
jbe
mov
loopne
xor
push
cld
xor
mov
dec
adc
lea
cmp
je
popa
outsl
jo
add
mov
pop
cmp
inc
lods
nop
xchg
mov
mov
mov
mov
lea
cs
rcll
movsl
fwait
lcall
pushf
decl
loopne
add
push
mov
lahf
add
mov
add
test
std
inc
mov
lods
stos
add
test
scas
add
mov
shll
aaa
pushl
add
mov
mov
add
leave
push
xchg
lret
lcall
popf
cmpl
add
rolb
stos
jmp
aaa
call
add
mov
or
in
aad
xor
repz
sbb
adc
iret
lcall
add
jbe
faddl
sbb
mov
filds
insb
rcr
insb
ss
add
lods
loope
and
mov
ss
xchg
loope
mov
aaa
mov
or
ss
adc
call
sti
fwait
lods
push
ret
push
mov
or
jmp
movsb
in
mov
fildll
leave
cmp
out
add
out
add
lock
icebp
add
aaa
lcall
add
js
add
or
adc
fdivr
push
mov
add
gs
push
or
cmp
xchg
sti
add
or
stos
mov
push
test
or
repz
outsb
ss
cmc
ja
ljmp
add
fmuls
adc
inc
test
push
jg
xchg
add
and
add
adc
and
or
add
or
xor
and
or
incl
or
and
pop
pop
outsb
fs
and
or
adc
dec
sbb
push
insb
push
jg
pop
arpl
sbb
xor
dec
aas
push
sub
arpl
cmp
daa
out
out
push
cmp
mov
cmp
das
cmp
insl
dec
sub
inc
push
mov
out
sub
gs
push
and
push
cs
adc
es
pop
std
neg
sti
pop
push
push
imul
sbb
jg
or
clc
aas
add
inc
loopne
mov
stos
outsb
cli
test
addb
clc
add
and
mov
push
mov
std
add
add
xor
push
lods
std
xor
pop
movsb
loopne
addl
outsl
xchg
xor
inc
int
add
mov
push
pusha
inc
inc
or
and
push
add
adc
add
inc
add
cmp
or
push
xor
sub
and
rcrb
jg
adc
add
dec
and
sub
push
inc
sub
insl
push
pop
bound
and
and
push
sub
es
stos
andb
popl
pop
incl
into
dec
sub
xor
sbbb
dec
xor
mov
sbb
mov
xchg
addr16
scas
inc
dec
xor
and
or
dec
xor
and
dec
xor
mov
jp
outsl
imul
mov
fld
mov
cmc
inc
daa
sbb
and
mov
sbb
adc
and
xor
and
sub
je
push
mov
in
incl
outsl
fs
scas
push
cs
jbe
fs
cmp
pop
jns
jb
mov
lods
push
icebp
icebp
push
in
in
dec
mov
jp
dec
hlt
mov
clc
jg
pop
mov
inc
sub
fs
sub
daa
and
and
adc
xorl
xor
pop
dec
sub
lcall
jae
aaa
fldt
push
push
jle
test
lock
push
loopne
loope
ds
lret
jns
dec
mov
sbb
cmp
mov
push
pop
dec
sub
or
shll
ja
in
std
inc
cs
and
push
dec
mov
mov
je
jns
jno
out
ljmp
lods
frndint
std
rcl
jmp
rcl
pop
out
into
int
rcll
lds
mov
jno
inc
repnz
adc
scas
sbb
pop
pop
loope
push
fwait
ds
push
pop
sbbl
inc
pop
push
into
inc
call
push
js
dec
mov
test
incl
pushl
jg
je
jl
push
lods
xchg
xchg
jmp
ret
ret
jmp
ret
fildll
xchg
int
sarb
push
mov
push
ljmp
inc
out
cmp
adc
stos
scas
addl
pop
call
xor
sahf
pop
jle
adcl
inc
mov
and
das
push
hlt
pop
push
sub
pop
mov
dec
test
mov
lock
jl
mov
incl
js
lea
push
std
push
pop
mov
call
mov
push
push
fdivrs
mov
xlat
scas
scas
call
lods
lods
mov
mov
dec
inc
aas
out
push
int3
aas
and
pop
jns
xor
inc
push
ds
and
sub
icebp
jno
es
bswap
shrb
pop
mull
adc
mov
and
sar
inc
daa
sbb
frstor
nop
jg
decl
cmpl
cwtl
cwtl
inc
leave
lret
sahf
mov
popl
dec
out
sahf
aaa
js
in
shll
cmpsb
push
iret
scas
pop
pushl
insl
jae
sahf
sahf
pushf
pushf
mov
arpl
aas
es
jg
mov
xor
push
push
xor
cmp
out
jecxz
jg
inc
dec
sub
dec
das
and
pop
inc
nop
sar
sbb
mov
xor
jno
jnp
jmp
test
rcrl
call
pushl
add
lcall
cs
mov
adc
pop
cmp
dec
xchg
xchg
sahf
mov
in
xchg
movl
das
lret
sahf
mov
fwait
sbbb
push
and
xchg
xchg
inc
sub
mov
sbb
xchg
push
xchg
out
sbb
icebp
push
mov
sbb
inc
push
imul
inc
push
xchg
rcll
ds
mov
dec
sbb
jmp
aaa
sub
dec
sub
cmp
lods
mov
test
mov
lahf
inc
shr
or
popf
xchg
mov
adc
lods
lcall
js
call
inc
cwtl
mov
idiv
inc
stos
call
outsl
fucomi
mov
lahf
lahf
xchg
xchg
push
xchg
xchg
movswl
fistpll
nop
nop
cs
xchg
jge
push
stc
dec
mov
jecxz
hlt
incl
out
dec
dec
jmp
dec
dec
in
jno
inc
in
bound
call
push
das
es
pop
pusha
cli
fildll
cmp
and
nop
inc
jle
and
jne
ljmp
in
cmp
cmp
scas
lea
jmp
mov
mov
or
stos
mov
decl
adc
xor
sbb
inc
cld
fadd
xor
jg
xchg
cli
cld
incl
call
jne
decb
fwait
fwait
inc
dec
xchg
enter
jge
lea
sbbb
pop
push
test
mov
daa
ds
mov
push
mov
pop
jbe
test
loope
mov
fs
cld
ljmp
cmc
inc
push
fstpt
and
mov
inc
sbb
sub
xor
sub
das
rclb
xchg
inc
xchg
nop
mov
mov
mov
div
lock
scas
push
lods
mov
movsb
push
mov
ret
or
adc
jle
shrl
mov
and
xchg
incb
pop
push
lcall
jle
lcall
xchg
inc
add
insl
mov
push
rolb
adcb
mov
aad
out
leave
enter
out
enter
add
push
xchg
movl
sbb
jle
dec
clc
cmp
adc
add
push
insl
push
and
push
xor
adc
jns
pop
lds
mov
inc
cs
idiv
addb
icebp
or
jmp
scas
xchg
pop
rcrb
sbb
add
std
jmp
add
push
push
jmp
rorb
jle
mov
subl
scas
scas
add
jb
mov
cs
pop
fadds
cmpsl
cmpsb
jbe
fnstcw
push
sti
lock
ja
sahf
mov
cltd
xchg
lock
push
ss
imul
xor
jecxz
sbb
ds
ljmp
shlb
lcall
testb
test
decl
test
jle
adc
fwait
int
mov
jge
lods
es
cld
push
mov
mov
add
cmp
stos
roll
es
inc
xlat
insb
push
incb
inc
enter
sarl
aam
fisttpl
fcmove
iret
cmp
popa
or
mov
push
jecxz
fdivr
int
je
jge
sahf
rcrb
sub
pop
ss
insl
insb
std
inc
sub
roll
dec
sub
loop
jne
dec
daa
daa
or
pop
lret
std
not
dec
into
add
out
decl
mov
cmpsl
fsubrl
jle
fwait
adc
sbb
mov
cltd
testb
push
mov
repnz
push
stc
lret
js
xlat
mov
fs
jo
xchg
std
je,pn
cs
mov
aad
into
fstp
fcmovnb
scas
push
rcll
cmp
shl
jle
push
lret
sahf
daa
int
add
lods
jbe
push
pop
je
aad
jnp,pn
dec
icebp
inc
xchg
add
push
adc
inc
lret
cmpsb
cmpsb
push
lret
ret
mov
add
or
jle
movsb
cli
negb
aaa
and
mov
and
leave
inc
decl
add
or
int3
aas
mov
out
pop
sbb
cld
xor
jg
ja
mov
pop
jbe
jle
push
push
add
out
fldenv
rcrl
xchg
pop
int3
push
pop
iret
rcll
push
fisubrs
mov
lahf
outsl
outsb
stc
pushfw
inc
sub
inc
pop
into
dec
push
insb
int
int3
out
movsb
mov
ret
inc
push
mov
jle
lods
push
mov
jo
pop
jbe
mov
ret
push
je
xchg
mov
or
jo
jecxz
lret
rcl
mov
in
pop
push
fidivrs
mov
js
mov
and
rcl
push
out
daa
mov
ds
loopne
jle
fimull
rolb
push
faddp
dec
int
int3
or
outsb
pop
iret
mov
stos
stos
mov
mov
orl
xor
lahf
jnp
lods
lds
sahf
int
jle
out
incl
roll
stos
mov
mov
xchg
clc
outsl
mov
inc
cs
jle
les
mov
jmp
mov
int3
cli
inc
jg
gs
stos
out
lods
lods
mov
dec
push
or
push
or
mov
or
in
out
jmp
call
mov
outsl
ja
pop
mov
push
int3
xchg
xchg
push
nop
nop
int
mov
mov
sar
les
test
push
int3
push
pop
imulb
and
das
dec
bound
fcmove
stos
int
push
push
insb
adc
jne
jbe
add
jle
out
cmpsb
popa
ret
mov
or
xor
cmpsb
sub
sahf
or
push
inc
mov
rclb
pop
ret
shl
data16
mov
ja
ds
and
outsb
mov
nop
cli
cmp
out
lock
jg
int
cmp
mov
ss
jo
andb
out
idivb
cs
ds
push
ss
icebp
push
xor
sub
hlt
loopne
push
iret
sbb
sub
push
testb
push
xor
mov
dec
ret
movhps
div
insl
iret
xchg
add
inc
incl
pop
into
add
divl
jl
call
and
mov
mov
push
mov
insl
inc
loopne
out
jle
jle
and
jecxz
xchg
enter
into
xchg
insb
pop
int
fidivs
mov
pop
push
movsb
push
ss
pop
orw
add
std
push
ret
decb
jl
inc
push
adc
mov
roll
aad
inc
fdivrs
dec
outsl
xchg
pop
push
mov
push
int
add
cli
int3
ss
aam
dec
cmp
ljmp
pop
loopne
insb
mov
test
adc
cmp
or
orl
repz
inc
iret
outsb
int
into
mov
ljmp
clc
nop
imul
insb
jbe
ljmpw
pop
push
mov
pushl
daa
inc
push
cmp
pop
jg
stos
fstp
jb
or
push
lret
call
or
insl
rorl
mov
push
mov
fsts
jp
push
push
aaa
call
push
xor
test
std
out
jnp
cmp
es
adc
sub
xor
cmp
mov
push
cmp
mov
sbb
scas
clc
ret
cld
rclb
in
cmpsb
pop
cwtl
outsb
movb
ret
mov
cmpsb
pop
pop
push
pusha
pusha
out
jns
popa
popa
dec
lret
scas
push
push
aas
xor
cmp
sub
sub
cs
pop
jg
sbb
shll
inc
fidivrl
f2xm1
aad
cmpb
sub
push
mov
push
xor
cwtl
insl
aaa
imul
scas
xlat
jmp
add
fidivs
bound
ds
jbe
sahf
das
push
ficoms
lcall
cmp
daa
cmp
or
xchg
pop
fildll
push
jo
or
ss
sti
mov
pop
out
shlb
mov
data16
inc
popa
mov
pop
pop
ficoms
push
push
fimuls
movsb
clc
aas
jecxz
pop
pop
pushl
sbb
sbb
pop
cmp
sbb
inc
or
cli
pop
bnd
and
fldz
cmp
scas
push
int
movsb
das
fildl
and
adc
push
xchg
aad
jp
or
mov
in
and
bound
push
xchg
stc
inc
xchg
int3
ja
insb
out
sbb
pop
dec
loop
sti
jg
data16
js
std
xor
sbb
xor
sub
les
push
out
clc
cs
or
ss
xchg
mov
cs
test
jmp
flds
test
and
hlt
lds
ds
imul
pop
pop
inc
dec
jg
adc
clc
incl
jbe
xor
dec
pop
cmp
xor
aaa
pop
insl
test
loopne
mov
xchg
ret
push
fsubrl
insb
cld
push
outsl
jmp
sti
roll
jle
inc
sbb
pusha
push
ja
add
lcall
xchg
fsubrs
xchg
es
mov
dec
in
and
test
xor
ss
aas
cli
pusha
pop
pop
adc
mov
mulb
push
scas
sub
cs
xor
push
pop
push
mov
xchg
mov
inc
shlb
push
aad
mov
std
fwait
pop
xchg
shlb
pop
cli
push
xor
loop
push
push
add
roll
stos
jo
cmp
xor
pop
adc
jl
cmpsb
andb
dec
insb
mov
fwait
in
inc
mov
test
dec
in
push
push
test
mov
adc
sbb
cmp
add
or
clc
and
xor
cs
sub
jb
push
aad
mov
insb
lahf
outsl
mov
mov
xor
mov
mov
std
xchg
int
mov
cmp
pop
mov
roll
clc
mov
fcompl
push
lret
ja
lcall
in
clc
push
push
stos
xchg
inc
cmp
jg
push
std
xchg
push
lahf
xor
mov
hlt
push
mov
adc
into
sbb
dec
jno
mov
mov
aas
cmpsl
mov
or
jg
imul
cmp
aam
push
sbb
es
xor
jns
fwait
int
mov
inc
inc
jnp
fidivs
inc
mov
aad
pop
sarl
inc
mov
cmc
mov
mov
outsl
sahf
mov
test
insb
outsb
jbe
push
rorl
insb
pop
cmp
xor
add
popl
jmp
decl
mov
int
loop
cs
int
outsl
cli
out
addr16
dec
or
push
std
xchg
aad
sub
ljmp
pop
call
enter
fstpl
inc
nop
dec
jge
int
push
rorb
push
push
rorb
fldenv
dec
mov
push
add
sahf
cmp
test
xchg
cltd
pusha
gs
ss
and
jmp
sub
xchg
sbb
mov
dec
scas
jge
push
mov
push
cld
icebp
test
cmpsb
loope
sub
ljmp
mov
mov
cmp
in
clc
jg
or
mov
out
mov
push
fldcw
data16
push
ret
push
lds
mov
mov
pop
lds
mov
rol
xchg
mov
incl
data16
push
decl
mov
inc
daa
sbb
add
adc
pusha
push
push
movsl
sub
stc
iret
aaa
xchg
mov
jnp
mov
daa
inc
push
inc
dec
mov
inc
test
sub
cs
stos
xchg
sti
xchg
mov
outsl
addr16
pop
push
leave
pop
lret
mov
lret
cs
clc
loopne
xchg
ret
sarl
imul
adc
mov
cli
pop
push
xchg
mov
fwait
int
lcall
mov
js
lret
pop
leave
pusha
repnz
mov
into
push
insl
outsb
pop
iret
testb
into
push
int
arpl
cmp
inc
lock
imul
sbb
adc
es
std
add
cmpsb
cmpsb
mov
scas
mov
jb
insb
ss
int
imul
aam
in
xor
jns
aam
shll
lds
shll
int
daa
lret
jle
fbstp
fwait
xchg
leave
jg
out
and
dec
inc
sub
adc
call
adc
mov
aam
popf
mov
jbe
scas
gs
outsl
js
addr16
push
xlat
jl
jg
addb
flds
jp
fistl
push
rcr
xchg
xchg
lods
cmpb
dec
inc
jg
call
test
xchg
aas
fmul
lret
xchg
cwtl
cli
enter
cmp
xchg
insl
xlat
jnp
faddl
out
sahf
int
mov
lea
mov
fisttpll
jb
or
jbe
aam
mov
popf
push
xor
std
movups
sub
fwait
imul
or
push
ja
pop
fildl
fisttpll
xchg
xchg
push
loopne
out
enter
xchg
cs
scas
faddl
xlat
pop
std
rolb
insl
out
inc
or
decl
and
cmp
loopne
incl
mov
stos
stos
cwtl
rol
enter
mov
jb
shl
ja
fistps
loope
pop
out
push
jmpw
mov
sahf
dec
out
shrl
ss
popl
jg
test
xchg
xor
xchg
xor
push
inc
mov
ja
adc
mov
mov
ret
rol
mov
mov
popf
mov
outsl
jmp
push
out
stos
mov
and
stos
push
out
lods
in
test
mov
fwait
lds
hlt
enter
incl
push
fmull
es
inc
aaa
cs
dec
or
jo
jle
cwtl
cwtl
sbb
cmpsb
mov
mov
mov
pop
adc
jp
fidivrl
in
fldcw
iret
dec
lock
push
repz
mov
mov
in
mov
repnz
out
stos
in
movsl
decl
loopne
and
push
mov
push
inc
rorl
ss
dec
xor
outsb
pop
inc
xor
insl
insl
mov
sub
test
push
loope
lods
movsb
push
fstpt
not
xorb
jmp
sti
pusha
fldz
cmpsl
idivl
mov
rorb
mov
ljmp
out
xchg
ds
addb
and
ds
jmp
ljmp
stos
sahf
jle
mulb
cmpsl
loope
nop
push
push
loopne
cmc
lock
ss
mov
lret
enter
pop
xchg
ret
inc
jmp
jne
xchg
add
mov
mov
sahf
push
or
call
movsb
cmc
cmc
pushl
ss
jbe
mov
outsb
fwait
mov
mov
mov
insl
mov
test
ljmp
icebp
les
push
std
rcrl
icebp
jmp
loop
aam
das
rorb
dec
xor
mov
jo
pop
push
orb
xchg
xchg
xchg
jge
enter
xlat
xlat
lock
ljmp
push
lret
mov
sahf
scas
fisubs
rep
mov
addb
mov
push
insl
rorl
xlat
shrl
lock
cld
inc
pop
pusha
and
into
int
orl
mov
outsb
test
das
and
adc
lidtl
int
pop
pushl
lret
nop
mov
mov
int3
rol
xlat
cmp
outsb
fcomip
lds
mov
inc
mov
sbbb
into
test
mov
xchg
sar
xchg
mov
cmp
imul
xor
mov
arpl
inc
mov
adc
mov
mov
mov
mov
daa
loopne
sahf
addl
lret
sahf
mov
sub
lods
xchg
js
push
xchg
mov
out
pop
inc
es
mov
push
add
sbb
icebp
movsl
mov
mov
pop
faddp
lret
fxch
jle
xchg
lock
pop
push
cld
mov
sbbl
inc
sub
sub
xor
ds
pushf
mov
mov
test
cltd
fisubrl
aas
dec
mov
jbe
add
es
daa
lock
out
pop
enter
cld
clc
arpl
push
and
and
pop
enter
add
add
out
add
push
push
and
dec
das
and
dec
xor
push
test
sahf
xor
push
adc
push
push
cmovle
dec
add
outsb
popa
jbe
push
ficoms
gs
cmp
scas
mov
dec
xor
cwtl
dec
inc
pop
or
loopne
fidivs
aaa
sub
sub
test
aaa
idiv
pop
push
sbb
jg
xchg
cmp
dec
popf
mov
decl
es
lahf
or
dec
xor
xorps
xor
sbb
fcomp
mov
imul
xor
cld
and
sbbb
stos
add
addb
outsb
fdivp
shrl
in
fbstp
xchg
jbe
testl
fistpll
and
pop
ret
dec
xor
sbb
ret
mov
adc
daa
testl
pushl
inc
jle
push
ret
jge
jp
jb
call
into
int3
int3
pop
xlat
jae
shl
mov
mov
pmaxub
ret
mov
sub
dec
sbb
inc
sub
push
or
pop
addb
inc
loope
cld
outsl
mov
and
inc
out
mov
aam
addl
ja
out
call
ja
push
and
xlat
fidivl
pop
test
test
pop
ret
hlt
cmp
adc
inc
daa
sbb
sar
pop
xor
pop
xor
or
xor
or
sub
addl
inc
cmpsb
or
aas
outsl
or
push
dec
xor
push
outsb
push
mov
lock
xchg
and
fcomip
mov
mov
lahf
negl
insl
mov
outsl
push
inc
out
push
mov
adc
dec
xor
sbb
inc
es
test
clc
cmp
and
and
mov
dec
xlat
mov
aaa
sub
xchg
je
jmp
popf
push
fwait
push
add
call
call
xor
ljmp
bswap
sub
ss
inc
inc
pop
mov
push
in
movb
xor
mov
inc
daa
sbb
out
dec
inc
jb
inc
jg
outsb
mov
pop
lods
jl
adc
add
imull
test
inc
push
decl
pop
test
decl
push
or
jle
packssdw
inc
cmpsb
into
push
push
or
leave
mov
add
scas
push
call
xor
popf
cmp
mov
es
cwtl
jno
sti
js
dec
cmc
push
xlat
das
adc
xor
out
and
iret
ds
sub
pop
dec
scas
dec
and
lds
mov
mov
aas
sahf
andl
rcll
push
addl
mov
int3
stc
pop
or
sbb
jbe
lret
bound
mov
inc
mov
fdivs
outsb
add
leave
stos
stos
ja
or
or
pop
cli
and
stos
and
icebp
inc
and
dec
sbb
push
stos
add
call
lcall
mov
sbb
or
adc
jle
addr16
pop
lahf
add
and
mov
xchg
test
int3
push
not
mov
adc
mov
or
inc
jle
mov
mov
jae
std
push
ficoml
inc
xor
sahf
lret
test
cli
mov
cmpsb
pop
push
pop
aam
xchg
push
jb
pop
decl
xchg
push
adc
stos
add
fbld
dec
fdivrp
call
mov
sub
xchg
rolb
and
lods
data16
sbb
ds
jle
cmp
push
out
inc
subl
popf
push
xor
es
cmpsb
mov
addb
pop
je
xchg
xchg
sbb
imul
cmpsl
rol
push
push
jmp
or
es
inc
mov
lret
fnstcw
es
andl
ret
testb
es
or
push
ds
notb
into
mov
cmc
pushl
pop
out
dec
testb
mov
incb
enter
cmpsb
push
adc
sbb
mov
rolb
test
push
inc
jo
inc
mov
xlat
pop
shr
mov
xbegin
and
xchg
popf
sub
or
in
flds
push
cmpsb
jle
sub
dec
nop
ds
cmp
enter
dec
inc
rorb
sub
test
cmp
sbb
or
lcall
dec
mov
sub
inc
mov
push
push
adc
andl
sbb
jo
movb
adcl
xchg
push
fcmovnb
jecxz,pn
adc
adc
inc
add
push
rorb
sahf
xlat
ret
dec
inc
mov
daa
loopne
push
cmp
xor
cmp
add
nop
stc
sbb
incl
ja
call
insb
jae
jl
insl
in
cld
iret
filds
sarb
loopne
inc
add
mull
dec
or
out
sub
push
stos
mov
mov
mov
ds
mov
nop
out
nop
inc
push
inc
cmpsb
sbb
jle
pushl
out
outsl
outsb
cmpsb
popf
lcall
xor
cmp
aaa
or
mov
es
xor
insl
fcomps
pushf
fimuls
xchg
sbb
sbbl
outsb
icebp
push
lods
mov
out
cmp
ss
call
push
sub
fnstenv
je
mov
movsl
or
mov
push
or
fs
andb
es
push
bound
decb
lock
out
insb
push
cmp
loop
xor
imul
or
pop
inc
cmp
push
mov
xor
into
es
and
into
aad
jbe
enter
scas
push
xchg
jle
and
push
loope
shll
sbb
sbb
sub
cs
das
cs
int3
nop
je
test
js
in
sub
or
sbb
inc
cmpsb
push
xor
push
lods
out
fucomip
test
push
mov
jo
dec
inc
notb
lock
xchg
ret
into
ret
xchg
pop
cmp
incb
push
xorl
out
scas
xchg
dec
pusha
xchg
out
xor
push
out
jno
lods
fmul
lods
shl
lods
xlat
incb
std
mov
inc
push
mov
stos
mov
dec
outsb
out
push
mov
mov
aaa
push
mov
mov
push
dec
test
sahf
jmp
into
xchg
mov
movsb
cmpl
test
adc
mov
pusha
movsb
lret
mov
jmp
pop
outsb
cld
jp
lock
cs
lock
push
cmp
mov
xchg
push
jo
pop
cmp
rcrb
fildl
adc
mov
mov
cmp
jle
fistl
xchg
ss
dec
int
push
call
jg
cmp
lret
sbb
adc
push
cmp
sbb
stos
dec
cmpsb
lret
incl
mov
dec
mov
mov
sub
inc
pop
mov
sbb
test
out
movsb
or
adc
es
pusha
pop
aas
lds
or
push
mov
dec
inc
mov
ret
or
insl
add
mov
daa
and
dec
push
mov
pop
movsl
into
cli
mov
loopne
pop
daa
lret
add
dec
pop
int3
gs
out
pop
push
ret
mov
xor
push
adc
push
xchg
mov
movsb
outsl
mov
mov
dec
jnp
aas
orb
add
jo
or
loopne
push
outsb
sbb
jle
adc
mov
xlat
jmp
mov
fwait
or
fnstcw
out
add
add
jp
fildl
rclb
subl
and
pop
es
mov
divb
fcompl
jmp
mov
sti
loop
inc
push
mov
out
jle
das
adcb
xchg
fcomip
mov
orb
ljmp
fsubrs
lods
dec
push
in
sti
jmp
cmpsb
xchg
xchg
cmp
rol
ljmp
cmpb
mov
popf
out
in
add
mov
jmp
lahf
out
push
loopne
call
pushf
popl
fistpl
cmc
push
cmp
xor
in
and
fwait
pushf
jg
in
push
xor
out
xchg
xlat
outsb
repnz
repz
sahf
xchg
out
inc
xchg
push
jge
fs
add
out
pusha
xchg
pop
inc
cmp
lods
loop
mov
int
xlat
shr
mov
iret
pop
and
inc
scas
in
scas
or
cli
rolb
add
das
fwait
mov
mov
mov
je
call
sub
das
sub
xchg
mov
push
adc
icebp
mov
mov
adcl
push
in
jecxz
repz
js
sub
ret
test
stc
ret
es
mov
sub
cmpsb
jp
pop
ficoms
pop
mov
pop
inc
xor
movsl
stos
dec
mov
ror
int3
lock
mov
ljmp
push
or
mov
push
stos
nop
push
push
insl
push
leave
mov
outsb
lcall
push
les
inc
ds
xor
push
push
cmp
adc
aaa
xchg
sbb
fwait
pushl
mov
lods
inc
les
cmpsb
movsb
mov
ret
lods
scas
stc
lds
push
fisubrs
jg
aaa
sub
movsl
jbe
sti
pop
in
mov
xor
sub
subl
pop
inc
add
lahf
lahf
pop
ret
scas
scas
and
test
xchg
popa
mov
xchg
mov
adc
std
jmp
lahf
stc
mov
addl
insb
sbb
aaa
xor
adc
subb
insb
outsl
adc
push
into
inc
repnz
enter
sbb
scas
add
or
and
inc
sub
loopne
jg
mov
and
dec
aaa
sub
cmp
adc
cmp
xor
addb
push
add
fldcw
jmp
pop
add
cs
push
sub
push
aaa
sub
jmp
mov
shrb
pop
inc
aaa
xchg
pop
inc
cmp
pop
cmp
xor
fimull
mov
add
mov
jbe
dec
xor
push
jb
inc
outsb
push
aaa
aam
xchg
lcall
outsl
call
decb
cmp
in
pop
daa
fcomps
xor
pop
inc
cmp
sub
inc
mov
adc
inc
push
dec
mov
pop
dec
add
xor
sub
jo
inc
mov
jo
mov
mov
call
das
out
inc
mov
and
pop
inc
xor
pop
ficoms
or
jbe
leave
mov
push
dec
stos
cltd
sahf
jg
outsb
call
pop
push
andl
lcall
dec
sti
add
outsl
sti
push
mov
les
std
pop
outsb
and
push
sbb
push
mov
nop
or
decl
sbb
decb
out
push
decl
outsl
and
sarl
and
and
dec
or
notrack
xchg
enter
sbb
sahf
pushl
fwait
cmpsb
push
mov
inc
sub
enter
nop
sbb
xchg
and
fdivp
jg
sbbl
push
mov
push
fdivrp
hlt
aas
xchg
es
dec
cmp
sbb
push
xor
into
pushl
aam
adc
cmpsb
adc
inc
incl
push
adc
decl
lcall
std
jg
aam
call
ljmp
popa
out
aas
dec
popa
inc
cmp
adc
dec
and
dec
mov
mov
hlt
fcoml
adc
inc
lcall
and
lcall
or
dec
mov
insl
movsb
ss
adc
ss
or
mov
ja
cld
or
dec
or
ss
ljmp
sub
divb
mov
dec
dec
pop
sub
cmp
add
add
fisubs
scas
pop
mov
inc
pushl
ss
scas
ljmp
jg
jae
inc
xchg
loop
dec
dec
inc
dec
gs
xor
ss
daa
xor
test
pop
movsb
push
test
incl
nop
sub
decl
test
inc
mov
stos
xor
aas
pop
aas
sbb
push
xchg
and
mov
adc
insb
call
adc
xor
xor
outsb
cld
jg
hlt
pop
pushl
dec
insl
xor
inc
adc
outsb
inc
sub
pop
es
je
je
dec
incl
mov
xchg
aad
fists
data16
decl
push
test
lcall
pop
or
outsb
pushf
movsb
xor
ret
dec
sbb
inc
idiv
out
pop
subl
aam
jns
int3
jb
fucomip
popa
rcr
dec
mov
fiaddl
add
mov
pop
jno
insb
dec
or
jle
inc
add
test
adc
cmpsl
push
mov
iret
out
cld
add
mov
add
fiadds
scas
std
and
xor
push
push
adc
imul
add
adc
push
adc
and
cmpsb
cmp
and
push
and
addl
std
mov
add
sub
insl
insl
popa
lods
imul
xchg
or
xor
cli
ja
add
push
gs
pop
fisubl
repnz
movsl
adcl
pop
js
sbb
shlb
push
push
je
push
outsb
ja
scas
cltd
mov
push
ret
data16
mov
mov
inc
lock
sbb
fs
dec
jbe
idivb
xchg
push
jb
push
pop
gs
xor
cmp
insl
pop
outsl
inc
enter
pop
push
jnp
insb
push
jae
pop
das
pop
lock
les
ljmp
push
outsl
dec
sub
fwait
xchg
inc
jns
jecxz
or
or
cs
movsl
push
filds
ja
inc
in
dec
inc
xchg
xchg
ja
jns
test
je
sbb
dec
sub
ret
inc
fiadds
xchg
sbb
sub
mov
les
or
pop
xor
in
cmp
xchg
xor
pop
gs
mov
xor
jns
inc
pop
push
nop
insl
jcxz
out
jne
jns
push
and
mov
rcrb
pop
in
cmp
out
insl
jns
ficoms
or
sbb
mov
out
pop
jg
xchg
cmp
jae
cs
push
push
cwtl
jae
int
push
jbe
inc
push
sub
or
sub
push
rcl
and
sti
mov
or
push
scas
adc
mov
dec
adc
cmp
mov
mov
pushf
inc
and
push
dec
xchg
push
gs
jmp
sbb
adc
mov
scas
out
fwait
mov
inc
dec
pop
enter
mov
jae
mov
lahf
inc
pop
push
aas
push
inc
jbe
pop
jb
add
add
add
add
add
iret
cmp
lret
rolb
dec
adc
push
mov
pop
mov
mov
imul
ficoms
add
out
mov
lcall
pop
sub
clc
fiadds
gs
hlt
arpl
cmpsb
add
popf
aam
sbb
jb
pop
mov
push
test
sbb
jge
dec
enter
cs
adc
cmpsl
dec
mov
sahf
dec
sbb
jae
in
out
pushf
xchg
xchg
add
sbb
dec
xchg
and
inc
add
add
inc
and
add
add
adc
mov
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
add
add
inc
add
