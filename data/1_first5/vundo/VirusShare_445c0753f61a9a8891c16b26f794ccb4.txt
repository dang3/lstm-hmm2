test
ljmp
insb
icebp
stc
jle
mov
mov
lahf
jmp
cs
mov
mov
dec
push
add
cmp
add
add
cli
push
cld
or
stc
ja
movsl
dec
insl
out
repz
inc
cmp
push
push
sub
jmp
dec
lea
dec
stos
cmp
adc
mov
fmuls
pop
ds
sti
lds
out
mov
push
dec
or
mov
movl
xchg
pop
arpl
inc
int3
fwait
mov
inc
mov
inc
out
cltd
pushf
push
or
repnz
sbb
popa
enter
in
jne
xchg
ljmp
nopl
out
sub
dec
mov
cli
jae
xchg
xor
add
jl
xchg
sbb
std
clc
lcall
sbb
xchg
xchg
movsl
shl
mov
ret
sbbl
push
sub
stos
mov
and
es
call
inc
sub
rorl
pop
pop
es
nop
cmpsl
outsb
adc
ds
dec
mov
mov
mov
sub
jno
mov
pop
or
push
decb
sub
mov
dec
lods
xor
dec
pop
mov
pop
pop
push
xchg
loope
rorl
mov
and
in
stos
jecxz
rclb
jg
cwtl
stc
shl
push
jo
and
push
xor
ficoms
sub
enter
push
sub
cmp
movaps
rorb
mov
mov
push
movsb
into
fldl
pop
jb
scas
imul
mov
add
cli
mov
jp
dec
aaa
sub
xor
jp
popa
rcrl
inc
sub
sub
mov
pop
pop
pushf
stos
popa
inc
adc
int3
cmpsb
mov
inc
push
lahf
add
gs
xor
xor
adc
mov
cmp
testb
aam
ja
dec
mov
je
sarb
mov
mov
call
mov
addr16
sahf
cltd
ljmp
push
test
fnstsw
pop
or
dec
or
pop
enter
cmpsl
int
outsb
inc
scas
inc
sbb
and
aam
jae
push
cwtl
add
xchg
push
fwait
adc
dec
sub
jb
adc
js
jns
fnstenv
imul
iret
pop
push
shlb
repnz
daa
mov
fstpt
mov
mov
stos
mov
cmp
loope
rcrb
push
jg
aaa
adc
mov
add
push
decb
call
mov
outsl
out
sbb
and
or
pop
jb
pop
icebp
outsl
mov
sbb
loope
xchg
dec
sbb
sar
clc
push
adc
int3
mov
dec
add
adc
xor
mov
add
mov
mov
jo
sarb
push
dec
xchg
push
adc
aas
sar
shl
pusha
cmp
adc
in
int3
xchg
sbbb
shrb
push
cmp
jl
loop
lahf
jp
aam
js
popa
jne
sahf
jae
cmpl
dec
ljmp
lret
jae
mov
push
xor
cmp
cmp
hlt
mov
xchg
mov
sbb
sub
fbstp
sub
testb
or
fwait
cmp
add
into
fldt
in
pop
jo
mov
aas
adc
and
outsb
pop
push
or
inc
sbb
stos
or
dec
xchg
jb
inc
mov
and
idiv
icebp
in
adc
xchg
xor
jle
jp
xor
add
mov
sbb
loope
xor
loope
sub
movsl
push
add
ret
xchg
scas
movsb
nop
sbb
adc
mov
jae
inc
sub
inc
xchg
repnz
cmpl
and
dec
and
bound
cltd
xchg
cs
sbb
ret
fsts
jns
or
add
cltd
xchg
pop
lock
push
or
xchg
aas
cmc
add
lret
sbb
lock
rorl
push
dec
mov
and
jnp
adc
gs
pop
cmpsl
imul
mov
jne
clc
cli
cmpsb
mov
add
push
xchg
xchg
xlat
lcall
std
repz
push
pushf
incl
dec
in
mov
jle
xor
jno
xor
push
rcrl
frstor
and
fwait
jno
mov
add
sbb
mov
ficoml
shr
out
ss
jmp
jecxz
int
add
mov
mov
push
cmpsb
scas
int
mov
cltd
xchg
add
mov
pop
dec
lea
and
fcomp
mov
shrb
lods
fmul
arpl
cmp
jb
mov
sub
lret
push
sbb
inc
sarb
dec
pop
popl
lcall
push
fbstp
rcll
inc
sarb
lcall
fisubrl
sbb
arpl
daa
andl
pop
push
repz
and
stc
mov
in
inc
push
icebp
loope
mov
jne
ret
mov
pop
mov
sbb
fwait
aam
call
lock
pushf
cmp
je
ljmp
cmpsl
std
rep
dec
push
mov
es
enter
clc
sub
push
fadds
int3
mov
movsl
xor
mov
mov
fnsave
push
xorb
or
int
or
rol
aaa
jno
jbe
stos
dec
xchg
dec
in
push
xor
leave
xchg
test
insl
pusha
js
add
cmp
mov
fists
arpl
nop
popa
aaa
xchg
loope
mov
add
lds
xchg
add
lahf
jmp
mov
lcall
outsl
fisttpl
movsl
and
jmp
stos
mov
test
mov
xchg
mov
xchg
jae
js
sub
jbe
mov
icebp
and
loop
stos
dec
inc
ss
out
pusha
cmp
cwtl
in
test
aad
cwtl
stos
inc
mov
outsl
mov
cli
mov
mov
and
jge
sar
sub
cmpsb
subl
lea
dec
pushf
les
and
ljmp
adc
cmp
and
mov
cmp
cld
nop
and
mov
xchg
add
cli
call
lahf
stos
call
call
ljmp
ljmp
repnz
data16
xchg
fucomp
loopne
sub
and
in
jge
adc
cmp
mov
icebp
lret
enter
icebp
adc
xor
insb
push
xchg
jecxz
mov
sbb
mov
lcall
xchg
fnstsw
clc
enter
loope
sbb
aad
or
mov
jecxz
pop
lret
lods
fcmove
inc
sbb
or
cld
mov
shl
rep
mov
push
xchg
imul
mov
mov
insb
nop
repnz
xor
inc
gs
adc
sbb
add
pop
ss
sub
decb
cmpsl
js
jne
stc
xor
das
push
test
pop
daa
and
xor
ljmp
repz
mov
aad
out
mov
ret
pop
add
mov
out
es
jne
mov
cmc
arpl
sbb
pop
or
outsb
mov
mov
clc
jge
xchg
sbb
fidivl
sub
out
fs
cmp
cmp
pop
pushf
ret
out
shll
in
adc
int
loopne
inc
fs
add
test
pop
negl
imul
out
mov
xchg
cmpsb
push
xchg
shll
outsl
pushf
and
xchg
fs
cmp
push
dec
mov
jne
jle
adc
push
xor
xor
push
xchg
sbb
fwait
movsl
adc
shlb
incb
xor
xorl
xchg
movsl
mov
add
leave
push
xchg
mov
inc
mov
iret
add
jne
movsl
xchg
xor
stc
cmp
fdivrs
outsl
stos
mov
imul
cmp
add
jno
sub
mov
pop
jno
xchg
mov
pop
cs
xor
jl
inc
xchg
xor
aad
popf
sub
fstpl
jge
repz
insb
and
push
sbb
loop
test
sbb
or
das
arpl
iret
lods
sub
arpl
sti
in
or
and
cmp
or
les
insl
xchg
jne
push
pusha
and
sbb
cmp
loop
movb
cmp
mov
aas
add
fildll
xchg
mov
mov
push
mulb
loop
fldln2
dec
jae
mov
gs
loop
sbb
mov
push
into
roll
mov
daa
imul
in
sbb
stos
push
fbld
test
mov
mov
dec
imul
out
ljmp
fsubrs
xor
int3
out
adc
inc
sub
into
rorl
and
mov
scas
daa
call
pop
mulb
lods
insb
loop
cmp
or
inc
nop
lock
shlb
cld
cmp
xor
stos
xor
imul
dec
insl
in
inc
inc
inc
dec
sbb
mov
fdivr
aad
push
xor
addr16
fs
js
subl
sbb
jbe
push
mov
clc
lods
sbb
inc
xchg
into
sti
call
push
inc
dec
and
jmp
test
dec
jmp
inc
imul
fcoml
lea
orb
orl
xor
add
jno
jb
icebp
lock
cmp
bound
and
dec
fldenv
rcrl
ja
inc
push
adc
push
in
test
and
lret
popf
shrb
ret
jnp
cmp
cmpsb
pop
add
adc
adc
or
out
out
loop
xor
testl
push
cmpsl
outsl
leave
out
cmp
or
cli
into
add
pop
pop
mov
cmp
loope
jns
and
add
je
jl
arpl
mov
cmp
push
pop
int3
xchg
sub
arpl
xchg
fadds
cmpsl
cld
xchg
into
adc
mov
mov
push
rclb
sub
dec
jns
mov
xorb
xchg
imul
lcall
fcmovne
lahf
jle
fwait
push
push
push
ss
sub
fs
lea
imul
inc
std
mov
loopne
adc
cmpsb
imul
pusha
or
pop
out
mov
aaa
mov
addb
dec
inc
sbb
dec
add
push
xchg
cld
cli
push
js
push
jno
lods
andb
pop
mov
scas
rcr
xor
rcrb
push
inc
sbb
in
or
adc
adc
movl
xlat
xchg
and
test
xchg
iret
stos
test
test
cmovae
shrb
or
icebp
or
test
in
cmp
adc
faddp
out
pop
sub
mov
and
in
leave
loop
pop
jae
xlat
adc
sbb
mov
mov
subb
sarl
push
xchg
push
popa
dec
mov
pop
mov
dec
outsl
test
ret
pop
rolb
lret
pop
or
ret
in
rclb
je
push
iret
lods
dec
into
fists
nop
cmp
movsb
xlat
ffree
insb
lahf
insl
mov
in
jmp
aad
enter
sti
test
push
in
cmp
add
pop
dec
cmp
sbb
dec
adc
into
jp
inc
mov
jle
pop
ficoms
sub
jnp
sahf
iret
in
dec
cld
sbb
jns
mov
cmp
push
dec
in
sarb
dec
push
adc
jmp
inc
push
aad
push
cwtl
movsb
lret
ljmp
or
rcll
lods
fsubr
test
cmp
lods
cmpsl
leave
das
mov
xor
push
fstpl
sahf
out
sub
jo
or
inc
outsb
pop
in
pushf
mov
hlt
pop
xchg
lret
xchg
cli
lock
sbb
in
mov
hlt
les
bound
adc
std
movsb
scas
fcomps
add
mov
mov
out
xor
insb
or
jne
and
cltd
push
cmp
jmp
sbb
es
inc
stos
mov
fldl
jle
ret
pop
leave
lret
mov
scas
mov
mov
xchg
loop
fnsave
or
and
movsb
mov
daa
pop
xchg
dec
add
dec
jo
push
icebp
gs
iret
adc
sub
push
add
jae
jle
iret
push
sub
mov
pushf
dec
or
jp
lock
bound
mov
aad
cmp
icebp
jno
mov
aad
mov
pop
cmpsl
in
pop
jo
push
dec
add
ret
lcall
dec
push
fwait
xor
mov
and
ret
lret
into
push
subb
mov
xchg
leave
popa
xchg
mov
rorb
jle
and
dec
pop
inc
inc
and
rclb
fcompl
mov
cmpsl
jp
jp
jle
mov
push
out
scas
in
stc
fsubr
dec
mov
sbb
shrb
push
iret
sub
mov
ret
je
clc
push
sbb
mov
cs
gs
jecxz
push
and
ljmp
bound
insl
push
inc
lsl
lret
daa
test
xor
pop
je
mov
mov
hlt
jae
clc
jle
pop
call
adc
push
jns
cmp
mov
cli
test
mov
fwait
mov
mov
jb
std
sub
call
mov
clc
lahf
out
rorb
or
jg
js
ret
or
mov
jb
shrl
daa
mov
inc
mov
lock
mov
dec
imul
sbb
add
sub
mov
jne
sub
mov
cld
adc
sbb
lret
rcrb
bound
inc
push
push
jp
mov
sti
mov
scas
add
sbb
adc
ja
xlat
out
nop
xchg
lock
cmp
mov
clc
stos
xlat
lods
and
mov
xchg
push
push
fcomi
inc
mov
cmp
test
cmp
add
xchg
push
es
push
loopne
adc
test
stc
and
push
test
sub
cwtl
xor
xor
cmp
lea
cli
aas
stos
je
jecxz
sbb
mov
push
notl
lock
push
rcr
push
mov
lret
xor
jge
dec
icebp
int
fmuls
adc
mov
jg
mov
sbb
pop
test
movsb
sub
jnp
cmpsl
aam
outsl
fdivr
imul
mov
stc
xchg
repnz
in
dec
out
iret
sub
xchg
sti
ret
mov
jne
out
adc
insb
cmc
push
cmpsb
push
out
imul
fisubs
mov
mov
mov
xchg
xor
rolb
fildl
stc
lret
arpl
sub
mov
call
xchg
jge
nop
aaa
bswap
testl
lea
push
sub
mov
frstor
fcmovne
aaa
cltd
mov
push
fnsave
or
lds
push
lods
sub
std
add
push
sub
xchg
mov
clc
or
add
or
int
jge
cwtl
lock
xchg
push
mov
lcall
adc
flds
lahf
test
insl
cmp
push
repz
mov
fldenv
in
xchg
mov
int3
xorb
and
adc
inc
push
test
push
push
fstpt
or
int
xor
pop
fmul
sti
lock
mov
dec
jp
mov
jl
lret
bound
inc
push
cs
stos
jns
lds
sub
fldl
jns
mov
imul
sub
xor
or
fnstenv
lret
inc
ds
les
mov
movsb
cmp
data16
lea
test
xor
cwtl
cmpsl
and
aaa
sub
push
inc
xchg
or
lea
cmp
into
lcall
push
jb
xchg
insl
lods
sub
mov
push
mov
lds
mov
or
hlt
jmp
bound
shl
pop
mov
and
cld
sbb
dec
test
cmp
sbb
mov
out
lock
insl
pop
ljmp
mull
test
shll
ret
push
adc
or
hlt
ret
inc
jae
kxorb
lahf
mov
in
push
xchg
icebp
sti
lahf
shrb
dec
lcall
cld
dec
sbb
mov
lcall
mov
push
add
shlb
mov
jo
sub
gs
adc
jl
adc
pop
leave
ljmp
loopne
pop
mov
or
hlt
add
push
push
loop
xchg
in
jns
push
sub
xor
xchg
mov
cmp
adc
aaa
mov
mov
pop
cltd
call
xor
das
cmp
lods
lret
int
ds
movsb
xor
or
cwtl
mov
mov
arpl
mov
cld
jecxz
movsb
test
dec
addl
mov
lcall
xor
test
lods
scas
lea
leave
lds
and
mov
imulb
sbb
mov
loope
cmpb
push
xchg
mov
sbb
lock
inc
lods
ss
enter
jmp
dec
fnsave
push
add
notl
dec
dec
cmp
sub
push
cmp
and
sbb
pop
clc
data16
fisubs
dec
sbb
sarb
rcl
push
inc
test
insl
mov
in
xchg
dec
pop
and
imul
enter
outsl
lods
stc
ret
dec
in
adc
pop
fstps
sub
rorb
sbb
into
loop
mov
sbb
xchg
test
into
call
mov
mov
cld
filds
popa
add
repz
or
ror
mov
imul
outsl
outsl
addr16
cs
mov
inc
test
jb
mov
clc
sbb
ret
mov
xor
sub
push
jo
std
dec
push
loopne
dec
cmp
dec
mov
rcrb
mov
out
pushf
pop
push
inc
hlt
mov
cltd
dec
mov
pop
jmp
enter
pusha
or
inc
xchg
jge
add
jbe
cmp
adc
mov
and
mov
pusha
jle
sbb
stc
xlat
sbb
stos
shll
aam
inc
call
scas
or
xor
repnz
std
inc
sti
orl
shr
or
push
sbb
jae
cmpsl
lods
jecxz
or
inc
sub
mov
add
in
subl
inc
mov
negl
ljmp
pop
mov
jg
jp
inc
data16
shrb
lcall
stos
jo
addb
cs
fiadds
loopne
rcll
or
jno
ds
xor
lods
adc
fnstsw
bound
sbb
repnz
lahf
jae
push
stos
inc
mov
mov
fwait
dec
inc
shrl
iret
push
fwait
cmc
lock
inc
lcall
repnz
ds
shr
ljmp
mov
add
mov
iret
cmc
mov
pop
and
inc
pop
dec
mov
mov
inc
iret
cmp
lods
or
out
and
cmp
outsb
outsl
cmc
jecxz
cmpsl
inc
js
mov
pop
int
sti
add
inc
cmp
sub
into
sbb
fwait
mov
in
dec
stos
jl
jl
jne
dec
inc
and
pusha
pop
pop
int
mov
xchg
loop
aas
mov
jne
and
cmp
push
sbb
test
pop
andb
sub
in
in
inc
xor
cwtl
xchg
and
fmuls
mov
clc
sub
xchg
insb
or
pop
pop
mov
pop
adc
jbe
jo
and
mov
jne
add
cmp
cmp
pop
shll
roll
mov
mov
adc
add
mov
push
js
sbb
jecxz
lret
enter
out
cmp
add
jmp
pop
add
outsl
sti
push
cmp
loop
add
stos
jle
dec
mov
fstl
sbb
fidivrs
leave
into
and
lret
sbb
sbb
adc
cmpb
xchg
jp
add
cmc
xor
mov
test
and
outsb
add
jo
popa
or
sbb
jbe
in
fcmovnb
adc
icebp
and
xor
lret
out
xlat
roll
add
aad
into
add
mov
xchg
lret
out
or
push
sbb
sbb
and
sub
in
fisubrs
test
pusha
jae
inc
adc
stc
mov
cwtl
nop
lock
cld
iret
add
das
les
pop
iret
scas
test
data16
inc
sti
dec
xchg
iret
test
filds
jo
fdivrs
ljmp
lret
dec
jl
jno
lea
add
ja
cmp
lahf
mov
std
dec
hlt
inc
test
cld
dec
test
adc
or
cmpsb
xor
dec
lock
push
imul
pop
xchg
mov
sar
inc
cmpsb
mov
rcr
je
push
cmp
sbbl
adcb
insb
sbb
dec
mov
out
outsl
sub
stos
in
loop
test
cmp
scas
push
xchg
lahf
inc
lods
pop
in
lcall
scas
pop
mov
iret
fmull
mov
lods
out
xorl
jne
lds
xor
out
int
and
add
pop
xchg
loop
int3
cmp
fistpl
das
xlat
les
je
outsl
pop
add
js
xor
jmp
push
sub
push
mov
mov
test
das
fisttpl
mov
out
popa
mov
inc
jnp
sub
clc
gs
adc
or
cld
mov
imul
repz
call
sbb
test
jmp
les
pop
je
sbb
jne
push
cmc
movsl
dec
in
aas
mov
and
cmp
lods
sti
sub
iret
push
add
into
and
xchg
ret
iret
jnp
push
mov
dec
or
rol
shll
jg
mov
mov
test
fimuls
xor
es
stos
jo
es
pop
fcmovnu
or
cmp
sbb
push
das
ret
pop
js
pop
icebp
test
mov
mov
sbb
fnsave
mov
ret
xchg
inc
lds
divl
lea
mov
and
or
les
into
push
fidivl
xor
mov
pusha
outsl
in
inc
push
enter
daa
sbb
push
jb
cli
xor
adcb
lods
ja
cli
sub
fistpll
sbb
mov
push
mov
lods
decl
pop
sbb
je
mov
or
mov
loope
rol
sbb
jge
pop
test
xchg
mov
xlat
test
cmp
sub
xor
stos
jmp
xchg
out
lret
fldcw
push
sub
sahf
in
aaa
ret
fbld
mov
cltd
sbb
lret
cld
mov
mov
cli
out
and
les
pop
loope
imul
popa
stos
push
pop
cmpsb
pop
nopl
xchg
jl
sub
cmc
arpl
push
ror
gs
inc
roll
push
ficoml
iret
js
aaa
xchg
aam
cmp
lds
leave
inc
mov
enter
mov
lock
add
ret
xor
inc
lock
fiadds
bound
and
scas
mov
dec
stc
cmpsl
int3
out
sub
int3
add
cld
push
jge
addr16
inc
cmp
pop
or
jmp
adc
add
mov
je
sbb
and
int3
jl
mov
pusha
leave
mov
shrb
arpl
pushf
ficompl
mov
xchg
out
fs
xchg
xor
xor
movsb
addl
xchg
rclb
shll
inc
pop
pushf
ds
xlat
xchg
mov
nop
push
or
mov
movsb
xor
nop
or
scas
ret
dec
jecxz
adcl
xchg
pop
shlb
or
jbe
or
adc
int
mov
enter
dec
dec
in
loop
out
mov
jae
add
imul
in
push
shr
hlt
and
or
out
fnstcw
cmpsl
insl
pop
or
xchg
clc
add
mov
pop
fisttpll
lcall
or
dec
mov
cs
mov
mov
pop
fstp
aas
scas
lods
lds
and
pop
xor
sarb
adc
xor
aaa
dec
push
fwait
movsb
mov
lret
xchg
mov
divb
movl
inc
pop
sbb
lahf
dec
outsl
jle
xchg
sbb
icebp
loopne
mov
outsb
jnp
movsl
pushf
aad
hlt
aas
sar
add
mov
fistpl
orb
mov
sub
fisttpll
mov
fisubrl
dec
fistpll
movsl
mov
push
mov
cmpl
xchg
dec
call
inc
repnz
jmp
mov
mov
loopne
es
mov
out
pop
mov
repz
clc
inc
inc
enter
iret
repnz
push
sub
xchg
imul
add
psubb
popa
cmp
das
dec
fistl
test
dec
mov
popf
mov
add
pop
inc
packsswb
insb
dec
popa
outsl
dec
inc
addr16
pop
iret
jbe
int3
stos
dec
xor
mov
mov
jb
push
test
in
in
arpl
xor
push
push
cli
scas
imul
pop
jae
xor
fisubs
stos
aaa
jge
repz
syscall
mov
dec
mov
gs
and
xor
jmp
cmpsl
dec
mov
rclb
adc
in
lret
dec
push
cmpsl
andb
cmp
out
jae
jne
push
or
jg
addr16
inc
movsb
push
arpl
arpl
fmull
cmp
pop
add
pop
icebp
ret
lret
insl
push
fcmovnbe
addl
stos
ret
mov
and
movsb
mov
leave
lahf
xor
jno
push
mov
sbb
inc
fsubrl
repnz
sbb
bound
dec
js
rorb
jae
out
push
out
mov
mov
mov
xor
pop
cmp
dec
add
movsl
add
jg
cmp
out
dec
adc
cmp
push
imul
mov
adc
mov
cmp
in
cmpsw
mov
mov
jne
ret
jbe
mov
stos
popf
jb
push
jne
add
aad
std
jl
lods
fldt
pop
mov
sub
mov
out
das
mov
pop
add
cmpsb
je
sbb
call
lret
push
movb
mov
push
ss
andb
sub
mov
pop
ljmp
add
loop
insb
mov
loop
scas
fstl
mov
adc
xchg
add
push
sbb
xor
mov
scas
lock
xlat
xchg
scas
and
repnz
mov
mov
sub
rcrb
and
popf
pushf
fimuls
push
popf
mov
pop
imul
repnz
aas
adc
sahf
sbb
dec
sub
ja
aad
or
mov
enter
push
mov
cmp
hlt
lret
loopne
jecxz
ret
sbb
or
or
cmp
out
jns
pop
mov
sbb
repnz
adc
xchg
and
sti
mov
test
stos
lods
xchg
repnz
addr16
xor
adc
movsl
mov
in
aaa
push
ret
sbbb
and
mov
sub
sub
mov
fdivp
jecxz
ja
test
xlat
mov
cmpsb
adc
loope
popa
repnz
inc
sub
pop
dec
pop
sbb
adc
es
adc
mov
adc
cltd
ljmp
add
xor
bound
and
jae
inc
adc
mov
call
in
sub
out
lock
or
aam
push
push
decl
popa
adc
enter
out
jecxz
aas
cltd
int
sbb
inc
jae
inc
fnstsw
pop
pop
out
pop
aaa
movsl
cs
shl
xchg
jge
out
jnp
cmpsb
jg
mov
stc
cmp
hlt
test
dec
movhps
mov
rcll
cs
cmp
sbb
mov
and
out
aam
imul
in
dec
and
mov
cmp
je
dec
test
repz
addl
add
mov
test
mov
jle
pushf
jne
push
ja
xor
push
jmp
inc
and
cltd
add
mov
lods
ja
sub
fidivrl
pop
loopne
sbb
sub
pusha
icebp
push
mov
outsb
xlat
ds
cmp
adc
dec
jae
std
push
jb
push
xchg
xchg
dec
fisubrs
fdiv
xchg
sub
mov
sub
arpl
and
in
pop
xchg
lahf
aas
and
sub
icebp
or
lods
loopne
xchg
shlb
testl
imul
inc
je
lods
scas
xor
int
cmp
lahf
repnz
and
sub
mov
clc
cmp
jb
pop
aam
mov
mov
in
push
inc
testb
jmp
cmp
ja
adc
lret
mov
dec
dec
xchg
mov
jp
dec
neg
into
mull
and
cld
fs
lret
jo
fs
sahf
push
scas
xor
pop
and
fisubrl
sarl
out
ret
std
stos
mov
dec
mov
fwait
cmc
dec
mov
sub
aas
popf
xchg
sahf
xchg
popf
fdivp
in
push
or
das
ss
inc
rcrl
adc
call
cmp
xor
dec
mov
in
inc
mov
aaa
xor
sub
cmp
pop
add
and
xchg
jnp
movsb
or
std
add
out
and
xchg
shrl
or
inc
bound
sub
jmp
push
adc
add
inc
fwait
inc
pop
outsl
cmp
pop
into
fs
movaps
js
mov
push
ljmp
mov
mov
xchg
iret
jmp
leave
aam
or
sbbb
jnp
and
xchg
movsb
inc
jle
xchg
stc
jbe
addr16
add
and
je
movsl
arpl
in
cld
xchg
fidivrs
push
scas
adc
ss
mov
test
add
mov
out
fidivl
fisubl
jle
mov
fsubrl
jge
stc
rorb
pop
xor
test
or
xchg
jl
cwtl
ror
jb
lock
imul
fldcw
test
mov
sub
xlat
mov
ds
pop
mov
scas
outsl
mov
and
inc
fstps
inc
mov
test
loop
mov
and
lea
inc
ss
aaa
jle
lahf
gs
jecxz
xchg
ds
jge
pop
push
mov
xchg
dec
cmpsl
adc
mov
sbb
stos
js
inc
pop
adc
pop
inc
pop
sub
push
jge
shlb
xlat
cmp
xor
stos
out
std
in
divl
subb
enter
and
orl
mov
push
popa
jl
add
mov
push
mov
push
in
xor
bound
cmp
outsb
jle
push
frstor
jno
push
adc
mov
in
push
or
mov
lcall
cli
test
mov
dec
or
mov
xor
mov
out
adc
les
mov
inc
test
push
lahf
fdivrs
in
fadds
sti
repz
push
inc
das
pop
insb
jo
jb
push
in
data16
inc
bnd
mov
cmc
cmp
popa
shrb
adc
cmpsb
mov
inc
ret
ljmp
into
inc
mov
sub
iret
lock
dec
test
cmp
ret
fidivrs
mov
cmp
lods
inc
js
out
jb
hlt
or
ret
iret
inc
dec
and
mov
adcb
jp
std
repnz
mov
loopne
hlt
mov
jno
aaa
mov
movsb
jle
repz
push
pop
sub
push
fdiv
pushf
gs
movsb
inc
inc
and
testb
xlat
or
out
inc
or
add
sbb
xchg
shlb
popf
xchg
das
xchg
test
jle
in
mov
jg
xor
add
dec
js
mov
lcall
dec
and
inc
xchg
dec
jecxz
fs
cwtl
and
jl
xor
pop
popa
mov
shll
and
jno
or
and
imul
and
jb
mov
push
and
aam
jl
adc
shrl
inc
imul
and
jnp
movb
cmp
dec
test
add
cs
push
loopne
into
data16
in
imul
mov
orl
mov
je
imul
or
std
div
js
jl
je
pop
sahf
divl
mov
add
pop
lea
xor
jecxz
bound
jae
in
dec
inc
sub
and
push
push
sub
cmc
icebp
jno
inc
jl
sbb
movsb
cwtl
bound
insl
jp
out
pop
adc
xor
les
xchg
inc
andb
and
inc
jne
mov
out
sub
movsb
lds
sub
movsl
mov
lds
test
add
sbb
mov
jb
and
dec
and
xor
outsb
xchg
dec
movsl
lods
xor
hlt
stc
jge
cvtdq2ps
or
clc
fsubrl
jns
int
or
and
push
es
pop
fimuls
jge
and
sub
cmc
cmpsl
fwait
or
and
inc
aam
push
cwtl
mov
sub
lds
and
jae
aaa
xchg
mov
jp
add
loop
js
jae
test
pusha
das
out
push
sub
or
push
ljmp
fstpl
cmp
jmp
sbb
mov
inc
dec
imul
xor
jns
ret
addr16
mov
loope
jge
int3
nop
inc
lods
gs
sbb
shr
pop
xchg
loopne
and
std
in
bound
dec
pop
jnp
iret
mov
int
add
aas
inc
cmpsl
sub
das
sbbb
outsb
lods
add
mov
pop
pop
mov
pop
icebp
sbb
gs
pop
mov
cmp
pop
sbb
pop
shll
and
pop
cmp
fwait
loope
jge
ds
sub
adc
xor
xchg
fsts
pop
inc
adc
dec
xchg
xlat
out
arpl
sbb
adc
cmp
or
inc
and
or
lret
jge
xor
and
paddq
clc
mov
inc
jnp
jl
movnti
insb
mov
push
mov
jo
ss
sbb
push
sbb
scas
int3
fdivrl
mul
or
push
sbb
mov
adc
popf
ret
push
aaa
out
dec
adc
xor
xor
orb
jmp
ljmp
cwtl
fwait
outsb
inc
int3
incb
cmp
jbe
inc
adc
jbe
or
aad
inc
andl
xor
inc
add
mov
jmp
cmp
push
push
pop
idivl
mov
and
addb
movsl
xchg
call
in
adc
jp
fiaddl
dec
dec
or
inc
js
scas
shl
mov
sbb
fwait
inc
cmp
mov
fsubrp
cmp
ds
aam
lret
repz
in
add
jo
jno
dec
inc
in
popf
push
popfw
fsts
insb
out
lds
fmull
in
ds
mov
cmp
call
fidivs
and
aas
lcall
icebp
das
push
decl
aad
cmpb
daa
push
dec
fiaddl
popf
out
addr16
test
pop
shl
aas
cmp
sub
cmp
jmp
and
aam
sbb
and
in
inc
outsl
shll
jno
dec
inc
in
popf
push
popfw
fsts
insb
out
lds
fmull
in
ds
mov
cmp
call
fidivs
and
aas
lcall
icebp
das
push
decl
aad
cmpb
daa
push
dec
fiaddl
popf
out
addr16
test
pop
shl
aas
cmp
sub
cmp
jmp
and
aam
sbb
and
in
inc
outsl
shll
jno
dec
inc
in
popf
push
popfw
fsts
insb
out
lds
fmull
in
ds
mov
cmp
call
fidivs
and
aas
lcall
icebp
das
push
decl
aad
cmpb
daa
push
dec
fiaddl
popf
out
addr16
test
pop
shl
aas
cmp
sub
.byte
dec
push
jmp
call
mov
mov
jmp
je
push
push
jmp
push
jmp
mov
lea
sub
jmp
jne
add
mov
pop
ret
nop
nop
nop
nop
nop
je
subl
lea
jmp
jne
mov
mov
push
jmp
mov
movzwl
or
mov
and
jmp
push
mov
push
jmp
mov
xor
mov
jmp
add
mov
popa
jmp
nop
nop
nop
nop
nop
cltd
pop
mov
idiv
jmp
call
test
pop
jmp
mov
mov
mov
jmp
add
add
jmp
call
mov
pop
leave
jmp
mov
xor
mov
jmp
je
jmp
add
lea
jmp
jne
mov
lea
push
jmp
add
mov
add
sub
add
jmp
nop
nop
nop
mov
mov
test
lea
jmp
mov
mov
add
jmp
pop
test
pop
jmp
nop
nop
nop
nop
nop
nop
push
push
jmp
push
push
addl
call
jmp
nop
nop
nop
jmp
nop
nop
nop
nop
push
push
jmp
or
mov
jmp
and
mov
jmp
call
push
pop
ret
nop
nop
nop
nop
nop
push
jmp
jne
jmp
push
push
subl
push
subl
pushl
jmp
call
pushl
lea
jmp
push
push
push
pop
push
subl
jmp
mov
jmp
push
jmp
nop
nop
nop
lea
jmp
nop
push
jmp
push
mov
jmp
sub
mov
sub
jmp
call
push
pop
ret
nop
nop
nop
nop
nop
pushl
jmp
xor
jmp
push
pop
cmpl
jmp
or
mov
push
shr
jmp
mov
push
mov
mov
jmp
addl
push
xorl
push
xorl
jmp
add
pusha
call
jmp
call
jmp
mov
xor
test
je
jmp
push
call
push
pop
cmp
jmp
shr
test
jle
jmp
call
call
mov
jmp
test
jne
jmp
xor
mov
mov
jmp
mov
xor
mov
jmp
call
test
jmp
push
pop
cmp
jne
and
jmp
push
subl
pushl
push
jmp
mov
test
jmp
ret
nop
nop
nop
nop
nop
nop
lea
jmp
nop
push
or
mov
push
mov
jmp
andl
lea
jmp
push
push
mov
jmp
call
push
pop
ret
nop
nop
nop
nop
nop
mov
jmp
mov
movzbl
sub
add
jmp
push
subl
jmp
push
jmp
nop
nop
nop
nop
nop
nop
push
jmp
pop
jmp
sub
mov
andl
push
jmp
push
and
mov
sub
add
jmp
mov
mov
movl
mov
jmp
add
lea
jmp
nop
nop
cmpl
jne
push
pop
cmpb
jmp
push
add
push
pop
cmpl
je
jmp
pushl
jmp
pushl
call
jmp
push
xorl
call
push
pop
cmp
jmp
nop
nop
nop
nop
push
xor
mov
push
jmp
mov
xor
jmp
mov
jne
jmp
test
jne
jmp
mov
and
mov
jmp
and
mov
add
shr
and
jmp
mov
jmp
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
sub
mov
jmp
and
incl
jmp
push
mov
call
jmp
mov
mov
xor
jmp
lea
push
lea
jmp
incl
push
lea
jmp
mov
je
mov
jmp
test
jne
push
pop
cmp
jmp
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
addb
adc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
pop
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
pop
add
jl
add
nop
pop
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
or
adc
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
or
adc
add
mov
or
adc
or
adc
or
adc
or
adc
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
add
add
ret
nop
nop
nop
nop
nop
jle
mov
jmp
lea
push
jmp
mov
test
jmp
call
test
je
jmp
je
jmp
push
pop
cmpl
jne
push
pop
cmpl
jmp
decl
jmp
mov
test
jle
mov
jmp
call
test
pop
jmp
jne
jmp
sub
sub
sub
add
jmp
lea
push
je
jmp
test
jmp
je
mov
test
je
nop
nop
nop
nop
nop
mov
mov
mov
jmp
add
push
pop
cmpl
jne
jmp
mov
jne
sub
decl
jmp
call
test
jmp
je
movzwl
jmp
mov
jmp
jne
mov
jmp
pop
je
push
addl
jmp
add
jmp
jmp
mov
testb
je
jmp
pop
pop
push
pop
nop
nop
nop
nop
nop
pop
leave
ret
nop
nop
nop
nop
nop
test
jle
add
mov
jmp
push
pop
jmp
add
push
pushl
call
jmp
mov
push
addl
push
subl
jmp
test
jmp
and
pushl
add
jmp
add
add
dec
jmp
pop
jmp
je
mov
jmp
push
subl
call
test
jmp
jne
mov
test
jmp
lea
push
call
jmp
jle
or
mov
shl
shr
jmp
sub
pop
lea
jne
jmp
add
add
jmp
jmp
mov
je
lea
jmp
add
push
pop
cmpl
jne
push
jmp
push
push
addl
pushl
jmp
or
xor
add
jmp
mov
jmp
dec
jne
jmp
test
je
xor
mov
sub
jmp
pop
jmp
push
call
jmp
pop
jmp
mov
mov
jmp
jmp
pop
pop
pop
pop
jmp
pushl
mov
sub
pushl
jmp
andb
incl
jmp
jmp
pop
ret
and
jmp
nop
nop
nop
nop
nop
push
jmp
pop
pop
leave
ret
nop
nop
nop
nop
nop
push
call
jmp
mov
push
pop
jmp
pushl
push
call
jmp
movzbl
incl
or
mov
and
nop
nop
nop
nop
nop
add
sub
add
shr
jmp
push
pushl
push
jmp
je
jmp
call
add
push
addl
push
addl
nop
nop
nop
nop
nop
pushl
jmp
test
jmp
call
jmp
je
mov
and
mov
jmp
push
pop
cmpl
jne
jmp
sub
mov
nop
nop
nop
nop
nop
mov
incl
dec
jne
jmp
push
pop
cmpl
je
jmp
jmp
jmp
mov
mov
push
jmp
push
pop
cmpl
jne
nop
nop
nop
nop
nop
push
pop
cmpl
je
mov
and
jmp
pop
jmp
call
test
jmp
lea
add
push
jmp
pop
jne
push
pop
cmp
jne
jmp
push
subl
jmp
lea
jmp
pushl
push
jmp
push
call
nop
nop
nop
nop
nop
test
jmp
call
mov
test
je
jmp
pop
jmp
pushl
jmp
je
mov
jmp
add
pushl
push
jmp
and
mov
sub
mov
mov
jmp
push
call
add
add
jmp
incl
jmp
testl
lea
jne
call
nop
nop
nop
nop
nop
push
pop
pop
jmp
dec
jne
jmp
jmp
pop
jmp
sub
jmp
nop
nop
nop
nop
nop
sub
jmp
pop
leave
nop
nop
nop
nop
nop
ret
and
jmp
nop
nop
nop
nop
nop
sub
add
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
shl
movzbl
add
nop
nop
nop
nop
nop
incl
xor
mov
lea
push
nop
nop
nop
nop
nop
call
push
pop
cmp
pop
nop
nop
nop
nop
nop
jb
sub
add
nop
nop
nop
nop
nop
push
pop
cmp
nop
nop
nop
nop
nop
jb
add
push
pop
cmp
nop
nop
nop
nop
nop
jae
add
add
test
nop
nop
nop
nop
nop
je
nop
nop
nop
nop
nop
mov
add
mov
sub
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
mov
incl
nop
nop
nop
nop
nop
dec
jne
nop
nop
nop
nop
nop
mov
jmp
mov
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
mov
mov
nop
nop
nop
nop
nop
incl
nop
nop
nop
nop
nop
incl
nop
nop
nop
nop
nop
push
pop
push
pop
cmpl
je
nop
nop
nop
nop
nop
mov
pop
nop
nop
nop
nop
nop
sub
nop
nop
nop
nop
nop
pop
pop
leave
ret
nop
nop
nop
nop
nop
add
add
add
rclb
add
mov
add
add
adc
add
adc
add
adc
add
add
dec
adc
add
add
add
adc
add
add
add
add
lock
add
add
insb
adc
add
adc
add
adc
add
adc
add
adc
add
add
rclb
add
mov
add
add
adc
add
adc
add
adc
add
add
dec
adc
add
add
add
adc
add
add
add
add
ret
outsl
popa
fs
imul
add
add
je
jb
arpl
fs
jae
add
mov
je
popa
insb
inc
jb
add
je
popa
insb
inc
insb
insb
outsl
arpl
add
add
jb
jne
insb
push
jb
je
arpl
dec
inc
push
dec
inc
dec
xor
cs
insb
add
or
inc
imul
push
imul
jae
cld
add
je
jne
jae
jb
outsl
jae
add
inc
push
outsb
jne
je
insl
add
inc
push
xor
cs
insb
add
sub
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
inc
add
test
dec
imul
inc
inc
dec
xor
cs
insb
add
mov
adc
addr16
pop
push
add
add
add
add
add
add
loope
test
add
pusha
add
add
add
mov
add
add
add
xor
lahf
inc
das
add
add
add
add
add
fldcw
jno
xchg
xor
add
loopne
addb
add
add
add
mov
xor
add
lock
add
add
push
out
in
xor
add
fsubrs
push
scas
adc
ja
pop
push
add
add
pop
add
add
ja
pop
push
ret
sub
pop
fsubrs
cld
add
add
add
add
nop
std
add
fadds
add
mov
sbb
pushl
mov
cmp
xor
cmp
loop
out
or
mov
jmp
cmp
cmp
cmp
cmp
pop
ss
stos
aaa
mov
add
lds
cs
aaa
lret
xor
xor
aaa
imul
xor
loop
out
in
xor
xor
lcall
xor
cmp
xor
xor
xor
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pusha
cmp
insb
cmp
je
xchg
cmp
cmp
cmp
cmp
cmp
or
or
adc
pop
cmp
cmp
insb
cmp
add
add
add
add
pop
dec
addb
ja
jno
push
fs
pop
sub
push
orb
cmp
inc
je
insl
cmp
popa
sub
es
pop
dec
adc
and
and
mov
pop
sub
sub
fdivrp
.byte
pusha
