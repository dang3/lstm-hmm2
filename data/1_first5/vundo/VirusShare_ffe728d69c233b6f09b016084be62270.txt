push
call
push
push
push
push
push
or
add
xor
push
call
mov
ljmp
inc
and
mov
sub
mov
mov
and
push
pop
sub
mov
shl
mov
shrl
mov
xor
xor
mov
inc
add
cmp
rcrb
rcr
lcall
add
jmp
ret
push
mov
push
movl
add
std
decl
inc
test
je
movzbl
add
mov
shl
rcll
inc
ja
add
mov
inc
cmp
or
push
pushf
sti
in
lret
je
jle
fwait
dec
pusha
fdivl
pop
je
cmp
xchg
xorl
ror
aaa
mov
hlt
outsl
pop
je
jl
mov
sbb
or
out
je
mov
adc
dec
sbb
je
subl
cmp
incl
test
ret
push
push
data16
fistpll
xor
gs
adc
pop
jmp
xor
inc
ret
mov
orl
lcall
jbe
outsl
ret
xor
push
or
int3
push
sbb
mov
mov
loope
push
lea
loopne
sahf
ret
jp
shlb
add
mov
jg
mov
mov
leave
push
ret
push
inc
xor
pop
inc
xor
mov
sub
jle
cld
mov
jp
testl
stos
fisubrl
ja
xchg
mov
jae
ret
add
pop
sub
jp
or
je
cmp
lock
lea
push
pop
pop
push
push
lea
xor
xor
mov
stos
xor
rcrb
scas
xor
js
xor
add
dec
push
sbb
or
fidivrl
orb
bound
sbb
add
jmp
mov
mov
dec
add
mov
push
movsl
decl
pop
fmuls
and
mov
mov
sbb
mov
push
sbb
ret
cmpl
add
or
or
push
lds
fs
push
std
loope
xor
loop
hlt
mov
jp
out
insl
clc
mov
or
add
aam
push
or
mov
out
jg
xor
mov
je
into
add
ret
adc
jg
adc
cmp
cmpl
mov
add
cmpl
push
mov
mov
cmp
or
out
clc
loopne
add
daa
cmpl
jb
mov
sub
push
cmpl
loop
popf
xchg
add
rorl
add
shlb
add
or
sbb
adc
mov
sti
or
pop
mov
bound
push
adc
mov
ja
or
adc
hlt
pop
inc
push
setb
mov
or
or
or
mov
pop
or
cmp
je
push
popf
mov
gs
mov
adc
or
addr16
loopne,pt
inc
mov
inc
shr
push
pop
cmp
push
xlat
add
cmp
jne
push
push
or
jno
jmp
sbb
or
ret
dec
fcoml
movsl
out
push
cmp
lahf
lcall
add
comiss
jle
gs
scas
loope
jb
push
add
add
adc
loope
loopne
jne
cmp
in
hlt
shl
inc
sub
fcoms
rcll
add
push
push
xchg
shr
push
xor
jbe
jle
and
pop
cs
and
roll
jo
xor
or
mov
dec
jl,pn
lcall
add
sbb
mov
popl
ret
jmp
mov
jne
mov
sbb
mov
push
or
call
push
ret
inc
sarb
or
pop
loopne
and
lret
or
ret
add
cmpsb
sbb
and
clc
sbb
add
or
add
sub
push
add
mov
pusha
stos
mov
sub
push
push
fistps
stc
cmpsb
lret
inc
cld
cmpl
je
decl
xlat
jbe
clc
or
mov
clc
cmp
clc
mov
hlt
imul
out
lock
pop
mov
jle
cmp
sbb
mov
jl
cs
push
push
cmp
inc
mov
pusha
jb
jge
add
sbb
int3
je
dec
in
cmp
pop
cmp
aas
test
roll
and
ss
or
jg
inc
jo
fldenv
xchg
mov
add
bndstx
fiadds
jb
mov
rcr
pusha
sar
cmp
jae
testb
jne
fs
or
jle
or
add
leave
mov
jle
lea
dec
subl
std
call
hlt
push
jne
push
pop
cmp
jg
mov
dec
test
jl
or
xchg
lods
mov
inc
cmp
mov
mov
jle
data16
imul
mov
divl
sub
jle
xchg
pusha
or
rorl
jp
fdiv
pop
cwtl
mov
adc
jne
mov
hlt
push
jge
cmp
push
inc
mov
rcr
sbb
leave
dec
push
lea
inc
cmp
loopne
or
cli
pop
sar
or
std
push
jo
inc
ret
push
je
push
in
adc
sub
push
call
or
jnp
test
mov
loopne
popa
rcrl
mov
or
pop
mov
icebp
jae
hlt
aas
mov
jp
add
roll
cmc
idivl
divl
and
push
sbb
mov
jg
cmp
pop
jae
push
movsb
pop
sarb
scas
and
push
fs
cmp
dec
in
xor
or
push
xor
out
cmp
cmp
mov
sub
mov
outsb
call
pop
imull
mov
shr
mov
mov
ja
dec
mov
sbb
mov
push
in
adc
adc
dec
mov
inc
and
push
stos
cmp
add
push
add
add
dec
or
cmp
fwait
nop
add
inc
sbb
das
push
lea
xchg
std
out
mov
push
lea
push
mov
loop
inc
push
call
pop
inc
jnp
mov
mov
shl
cmp
mov
xor
test
fs
jne
idivb
or
and
lret
stc
cld
or
out
mov
pop
sbb
push
call
cmp
sub
idivl
clc
cmp
pop
pop
pop
lea
mov
sbb
mov
cmp
pushf
and
pop
jbe
sbb
push
mov
clc
push
push
pop
adc
pushl
cld
arpl
sbb
mov
xchg
testl
mov
push
fbstp
push
sub
fistpl
push
ret
and
je
das
mov
pop
push
adc
je
pop
cmp
mov
lea
fnstsw
sbb
lds
shll
or
and
je
cmp
mov
sbb
sub
mov
mov
adc
mov
cmp
je
lea
add
mov
push
scas
mov
sbb
xor
add
mov
enter
add
and
rcrb
pop
or
add
jne
andl
sbb
and
mov
xchg
or
adc
adc
pop
or
lret
aaa
or
push
jns
sahf
or
ret
jg
jp
cld
negb
or
jne
mov
and
rorb
in
mov
je
andl
xchg
cmpsb
xor
lret
dec
xchg
test
lea
popl
adc
jp
rcll
push
js
xorb
push
push
pop
pop
push
fadds
cmp
fs
call
xchg
loop
ret
cmp
mov
lds
sahf
hlt
ljmp
sbb
or
push
cmp
ja
test
jg
shrl
test
cmp
jne
sar
sete
mov
movzbl
fincstp
sub
popl
inc
inc
jmp
push
pop
inc
bound
mov
cmc
pop
ss
fstpt
sbb
mov
mov
imulb
cmp
outsb
inc
push
lds
clc
add
jne
mov
add
fsubrs
aas
cmp
pushf
cmp
addr16
sbb
test
sub
call
filds
pop
cmp
pop
pop
je
push
leave
or
add
cmp
jne
ljmp
xchg
xlat
lret
mov
fsub
pop
ds
xchg
jbe
pop
mov
dec
call
ljmp
xchg
push
cmp
push
mov
hlt
movl
test
push
cmp
lock
cmp
inc
mov
mov
jmp
incl
bound
mov
outsl
mov
or
inc
testb
or
sbb
loope
call
mov
xor
cmp
jmp
or
jne
cmp
movb
cmp
ljmp
jl
orb
jmp
xor
js
sbb
add
inc
pop
stos
outsb
jo
jmp
inc
inc
inc
pop
je
cmp
test
pop
in
mulb
rcll
nop
dec
add
roll
aaa
je
dec
cld
insb
xchg
shr
adc
or
push
int3
repz
dec
outsl
aam
cmp
je
rcrb
lods
shl
sbbb
roll
into
inc
fs
setge
inc
outsb
xor
testb
push
aaa
cmp
and
xor
push
fldl
jl
pop
cwtl
sbb
pop
xlat
fsubrs
rcr
push
stos
mov
add
mov
mov
add
loope
movsb
pop
and
fdivs
mov
incb
mov
lea
mov
mov
xorl
add
mov
aaa
xchg
inc
and
ds
xor
dec
push
lods
push
pop
mov
fnstsw
and
push
pop
jmp
pop
add
notb
lds
in
push
pop
jne
xlat
mov
mov
push
rolb
push
inc
loope
dec
push
mov
clc
js
mov
mov
hlt
fcmovnbe
push
jne,pt
adc
imul
push
dec
fstp
push
push
add
adc
jne
or
push
mov
outsl
add
push
sar
insb
push
adc
xor
adc
jle
call
into
or
fldt
fidivs
in
call
push
sbb
lahf
inc
pop
lahf
or
dec
ret
jmp
push
adc
push
cmp
and
and
inc
mov
dec
adc
pop
je
inc
cmp
sti
or
lock
push
sbb
frstor
cld
and
test
mov
orl
iret
loopne
inc
push
or
ficoml
pop
mov
enter
lcall
sbb
outsl
sub
push
add
add
add
loopne
shll
lea
mov
and
out
arpl
fistps
push
lea
add
push
mov
or
cmp
in
and
test
nop
or
push
lidtl
xchg
adc
outsl
sub
mov
shlb
dec
add
fwait
jmp
or
jne
repnz
clc
push
jg
cwtl
mov
test
pop
and
testl
dec
add
inc
add
adc
mov
lea
cmpl
dec
pop
lock
add
cs
pop
jmp
ret
dec
neg
sbb
call
cmc
mov
insb
jmp
pop
cs
mov
int
and
ds
mov
mov
prefetchnta
pop
adc
pop
pushl
jmp
or
jl
pushl
pop
test
or
push
in
inc
sbb
mov
push
popa
movl
pop
scas
lahf
insb
or
es
je
sbb
call
repz
jmp
mov
xor
xchg
push
test
mov
add
add
lods
pop
push
xchg
cmp
add
loop
rclb
orb
lock
in
mul
dec
out
mov
push
aas
icebp
and
jbe
mov
int3
add
scas
xor
mov
xchg
mov
mov
and
test
dec
fisubrl
into
dec
in
sub
sbb
mov
push
pop
sub
mov
loopne
and
mov
cwtl
dec
dec
ret
jae
mov
sbb
add
push
push
sub
pop
add
subl
pop
ret
xchg
add
pop
arpl
pop
mov
sub
hlt
dec
outsl
mov
jo
int
xchg
mov
push
pop
adc
and
ljmp
sbb
sbb
in
pop
or
pop
fnstcw
and
insl
push
mov
cmpsb
xchg
xor
mov
xor
in
je
push
je
push
sub
subl
pop
or
push
inc
mov
and
out
clc
or
or
add
mov
mov
inc
sbb
lock
out
add
sahf
dec
adc
jmp
push
xor
adc
mov
and
fsubs
push
mov
and
mov
or
sub
pusha
sub
add
push
das
mov
lea
mov
rcll
mov
cmp
test
out
add
add
mov
pushl
ret
test
call
int
call
test
je
and
push
or
mov
jmp
lea
jmp
or
jmp
std
jmp
jecxz
outsl
scas
cld
enter
mov
shlb
out
std
mov
movl
mov
xlat
in
jge
cmp
mov
bound
divb
ret
divl
ffree
jo
pop
ret
adc
inc
inc
mov
fildl
add
sub
sbb
jle
push
mov
mov
cmp
fsubl
xor
xchg
mov
jmp
daa
mov
bound
mov
mov
add
sub
sub
das
push
jne
cmp
mov
outsb
dec
jne
and
push
inc
insb
das
push
icebp
aaa
sub
in
loopne
pop
ljmp
jmp
sub
ljmp
fs
and
out
and
in
dec
push
push
add
sub
or
jbe
or
les
sbb
pop
lret
repz
add
pop
out
scas
or
mov
ljmp
ja
imul
push
andl
and
sahf
or
dec
std
xchg
jns
cmp
fimull
or
rol
inc
in
inc
std
cld
jo
xchg
dec
mov
pop
or
push
xchg
into
movsl
add
cmp
mov
sbb
movzbl
mov
pop
test
adc
sub
clc
cmp
jo
rcrb
xchg
lock
icebp
jmp
mov
je
or
mov
add
jns
test
or
outsl
xor
fdiv
iret
jnp
fldt
pop
and
ds
test
add
push
dec
out
inc
xor
mov
pushl
add
aas
js
jl
test
test
jb
mov
inc
xchg
movb
lea
push
in
sti
jecxz
push
or
shll
enter
mov
idivl
lret
and
rep
inc
mov
inc
or
cs
pop
pop
in
cmp
xchg
in
fisttpll
lahf
pusha
push
add
push
fnsave
jecxz
movl
ds
pop
repnz
das
or
sub
sbb
dec
test
andb
pop
cld
adc
push
xorb
mov
outsb
fisttps
xor
je
and
paddusb
cmp
mov
pop
jbe
clc
inc
jb
or
adc
enter
test
in
outsl
mov
adc
jp
push
cmp
and
loopne
dec
push
cmp
fisubrs
pushf
lods
cwtl
add
sbb
mov
xor
add
cmp
mov
add
rcll
jl
sub
sub
js
cld
jne
mov
cmc
lock
and
cmp
arpl
rcrl
cli
repz
push
mov
or
mov
out
je
add
inc
cmp
sub
jmp
or
int
sar
incl
jge
mov
ljmp
out
ret
dec
out
mov
cmp
mov
paddsb
cld
push
rolb
lea
loopne
sar
shl
mov
stos
lea
repz
mov
jo
pop
jbe
mov
fmuls
xchg
outsb
sbb
nop
scas
inc
es
inc
pop
mov
incl
add
movb
ret
movsb
loopne
out
lock
lret
clc
rcrl
inc
push
adc
pop
add
fbld
jbe
inc
inc
cmpb
lock
push
ds
xor
inc
cmp
mov
mov
cmp
cwtl
dec
daa
in
sub
jmp
cmp
jmp
dec
je
push
leave
or
mov
push
mov
pop
ficomps
ret
rolb
and
xor
push
in
push
ret
push
icebp
inc
fdivs
or
ljmp
outsl
push
in
push
je
push
adc
or
sbb
jo
mov
neg
ret
pop
jge
adc
jl
ja
hlt
lods
les
push
pop
sub
and
add
push
or
addl
cltd
jbe
lock
mov
call
sbb
jae
dec
or
push
fimuls
xor
ficoms
cmpb
insb
pop
fisubrs
sbb
stos
mov
idiv
or
lock
roll
cmp
jbe
cmp
xor
cmpb
dec
and
cmp
jb
rep
jmp
cmp
jmp
add
enter
sub
pop
in
nop
push
inc
shlb
cld
push
and
fnstenv
push
mov
mov
mov
or
lods
adc
inc
mov
mov
movsb
shlb
dec
add
add
nop
inc
add
add
mov
cmpb
repz
push
in
inc
in
sahf
out
call
out
sahf
out
hlt
hlt
clc
clc
pusha
add
add
repz
add
sbb
jmp
sbb
pop
pop
mov
imul
and
fsubs
and
lea
adcb
pop
and
std
xchg
or
cld
out
dec
xor
clc
das
gs
stc
sub
into
jnp
pop
nop
pop
push
addb
fiaddl
movsb
mov
int3
jl
mov
add
sahf
inc
push
out
push
and
dec
dec
mov
mov
addr16
add
lcall
mov
push
add
or
sahf
out
push
adc
and
aas
xor
sbb
sbb
adc
sahf
out
adc
adc
or
out
or
loop
fimuls
pop
or
jo
xor
push
movsb
aaa
push
add
pop
mov
adc
ja
stos
dec
punpckhbw
xor
daa
js
leave
dec
andl
dec
or
mov
sub
jecxz
sub
nop
jnp
inc
ret
mov
mov
mov
mov
add
subl
stos
rol
adc
ljmp
mov
outsl
push
mov
sub
cld
shr
lock
jnp
dec
lea
mov
push
dec
mov
adc
mov
xor
push
cld
or
sub
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
movsl
push
orb
push
and
lret
cld
call
jmp
dec
add
shll
pop
mov
add
lret
std
sbb
sbb
dec
loopne
pushf
mov
add
pop
add
push
dec
pop
adc
mov
roll
dec
mov
push
or
aas
cwtl
imul
aam
pop
clc
and
cmc
lcall
sub
bound
mov
xor
lret
cmp
jbe
fnstcw
imul
andb
cmp
je
shlb
mov
cmp
rcrl
cmpsl
add
not
and
add
jl
xor
sbb
pop
xor
cltd
jle
pop
dec
test
je
xor
add
and
jmp
pop
xchg
lods
or
je
mov
lock
mov
pop
or
pop
ss
dec
pusha
mov
mov
imul
loope
inc
mov
jge
jle
xchg
ret
sti
or
cmpsl
push
or
pop
mov
inc
dec
or
jmp
dec
adc
push
mov
or
push
stos
push
fdivs
mov
test
cmpsl
dec
idiv
push
fmull
aas
mov
sbb
and
loope
add
scas
jp
push
call
div
in
gs
gs
push
or
lahf
cmp
mov
add
decb
adc
cli
mov
pusha
add
and
imul
jo
mov
adc
cmc
lds
jge
leave
mov
loopne
loopne
add
push
inc
adcb
push
dec
popa
das
adc
mov
mov
mov
jbe
clc
ret
or
xchg
stos
fwait
push
mov
pop
adc
or
cmp
jne
add
sbb
push
outsl
push
adc
mov
jle
pop
ret
sub
stos
push
pop
arpl
inc
mov
and
or
xor
jo
jne
out
mov
jmp
push
push
dec
imul
add
jbe
in
add
adc
jmp
orl
mov
incl
lret
xchg
cmp
mov
test
xchg
fcom
loopne
dec
stc
ljmp
rcrb
call
inc
clc
pop
mov
add
xor
jne
add
cltd
cmpsl
bound
or
subb
add
and
fmull
loop
jg
ja
fsubrs
iret
shr
lea
inc
orl
orl
sub
pusha
adc
out
inc
inc
cld
lock
fnsave
push
add
sub
sbb
xlat
rorb
xchg
and
out
cmp
mov
fs
inc
sub
mov
adcb
rcrb
jl
jl
inc
jne
or
xlat
cmp
shlb
add
test
or
adc
jge
xlat
sub
movsb
stc
add
adc
add
cmp
or
pop
in
mov
and
jb
mov
fwait
pop
lret
inc
add
xchg
mov
cmp
sar
dec
cmp
add
push
xchg
pop
push
mov
mov
inc
cmp
push
mov
es
int
pop
nop
cmp
nop
inc
jae
test
lcall
pusha
pop
pop
jns
and
into
add
push
sub
pop
adc
mov
aas
mov
cld
jmp
hlt
lea
or
leave
loop
jg
or
cwtl
pop
dec
pop
pop
jns
cmpsl
imul
and
shl
ss
aaa
xchg
jne
pop
test
fstl
jae
roll
inc
insb
xor
mov
repnz
and
mov
shrb
mov
jnp
cmp
inc
dec
insb
pop
xor
xor
mov
push
sar
dec
cmp
xor
add
add
movsl
pop
divb
add
loope
fiaddl
cld
xor
cmp
fwait
inc
ds
dec
je
filds
cmp
push
scas
dec
push
flds
je
add
fbstp
mov
add
adc
adc
fimull
or
dec
lea
mov
or
ret
ret
mov
mov
cmp
pause
shrl
pop
mov
cmp
lret
xor
jns
popa
leave
xor
rolb
fs
cmp
lock
mov
xor
push
cmp
icebp
out
clc
and
jge
or
shr
sbb
jle
xor
nop
xor
shr
cld
mov
sti
fmul
hlt
cmp
jmp
dec
test
imul
cmp
dec
and
or
jne
ret
adc
push
adc
jb
push
jne
mov
jmp
inc
or
jl
mov
je
inc
or
cli
incl
sbb
mov
jg
jno
mov
lea
fildll
fcomps
and
or
mov
jne
mov
fisttps
out
mov
je
dec
jnp
pop
push
imul
into
jne
lret
push
pop
ljmp
push
pop
jmp
cmpl
cmpl
sahf
push
vmread
andl
xor
or
jo
and
fdivr
push
fisubs
je
push
sbb
je
shr
add
and
cmp
incb
sub
leave
cwtl
cli
push
test
or
sub
imul
fsubs
negl
pusha
in
test
inc
dec
pop
cmp
sbb
test
cmp
mov
and
mov
push
pcmpeqw
in
adc
ja
and
jmp
test
mov
into
inc
cltd
pop
mov
lods
outsb
cs
dec
push
and
imul
ret
fs
inc
mov
or
das
pop
popa
mov
jge
or
subb
cmp
or
mov
or
pop
mov
adc
mov
out
or
scas
mov
mov
push
addr16
popf
adc
lock
frstor
sub
sbb
jns
pop
sahf
mov
cmp
pop
fnsave
mov
pop
sahf
lea
mov
ljmp
add
xor
xchg
js
sub
push
and
sbb
fisubl
and
push
cmpsl
shrb
clc
or
xchg
arpl
lock
clc
test
and
pop
lock
fwait
adc
xor
je
push
mov
dec
mov
mov
push
push
pop
jmp
insb
xchg
cmp
movsb
add
fistps
mov
int
je
xchg
push
ffreep
xor
xchg
cltd
ss
mov
mov
je
push
xor
loopne
xchg
push
xor
test
dec
mov
jne
or
iret
adc
mov
pop
int3
pop
pop
xchg
mov
mov
and
movsl
mov
sub
or
push
jmp
mov
jno
add
mov
adc
jne
push
loopne
clc
push
inc
mov
daa
in
adc
pushf
jp
push
cwtl
xchg
fsts
nop
inc
hlt
xor
into
sub
xor
add
push
sbb
push
pop
fwait
lock
mov
cmp
add
inc
sub
cmp
je
add
adc
pop
shlb
test
das
add
icebp
fcmovnbe
mov
mov
fdivs
js
movsb
aam
adc
iret
jae
pop
push
sub
loopne
adc
pop
jne
or
push
les
add
setge
mov
mull
mov
or
jbe
and
pop
xchg
xor
fsubrs
push
or
or
inc
sub
add
xor
add
push
push
mov
out
pop
insb
push
or
js
mov
push
daa
outsl
dec
fmul
push
cmp
sub
push
push
push
cmc
or
jno
push
push
push
push
or
loopne
xor
nop
xor
loop
mov
dec
cmp
jle
add
mov
cmp
pop
inc
cmp
ret
in
add
jmp
sub
add
mov
push
scas
neg
add
push
aam
xlat
pop
roll
jle
inc
inc
rcrl
enter
xchg
and
rorl
add
adc
mov
sub
sahf
mov
add
insb
cmp
add
mov
jne
mov
daa
xor
mov
fsub
jno
jg
inc
adc
sbb
push
in
or
cmp
sub
lods
testb
jbe
mov
mov
arpl
repz
add
dec
out
or
add
dec
xlat
xorb
addr16
aaa
testb
je
les
mov
fcoms
scas
mov
add
jne
jb
sub
inc
lcall
loopne
push
cmp
fwait
loopne
pop
movsl
mov
push
out
fildl
roll
mov
add
jmp
pop
add
push
push
xlat
push
mov
cmp
je
or
lock
ficompl
fcomps
mov
or
cmp
cmp
sbb
js
xor
repnz
jno
cwtl
xchg
aad
mov
lret
aam
push
jno
cmp
cmpsb
je
jno
test
popa
cld
adc
push
out
cld
int3
jmp
outsl
insl
test
jne
mov
or
rcrb
xor
cmp
and
push
or
push
push
adc
add
fdivl
mov
jmp
lea
push
dec
and
sti
or
ficomps
mulb
test
add
adc
cmpsb
inc
mov
push
jns
dec
add
mov
outsl
mov
imul
or
inc
sbb
ficomps
lea
sub
stos
out
sbb
nop
stos
idivb
xor
inc
or
in
pushf
push
scas
push
fs
push
push
movsb
mov
fs
sahf
inc
cmc
mov
loop
mov
or
cmp
stos
mov
lcall
sbb
dec
sub
dec
fdivrs
mov
lock
mov
fldcw
jl
icebp
aad
mull
dec
je
iret
fcom
pop
push
push
sub
mov
mov
mov
loopne
push
sbb
inc
popl
insl
mov
mov
loopne
push
mov
sbb
add
fimuls
sbb
sbb
inc
mov
int
jno
into
les
push
adc
dec
sbb
adc
fimuls
or
mov
xchg
xchg
testb
dec
add
mov
sbbb
out
push
add
adc
jnp
lret
lret
sbb
mov
push
jb
es
inc
mov
in
or
xchg
iret
repz
call
enter
rolb
pop
orl
jmp
inc
nop
push
lds
test
cmp
adc
inc
lods
inc
pop
nop
mov
push
loopne
or
and
add
inc
sahf
out
insb
je
dec
shl
test
popa
add
or
push
rclb
rolb
inc
mov
jle
or
push
lcall
or
mov
cmp
xor
ss
test
push
je
sub
pop
jmp
jnp
cmp
or
out
cmovl
stos
jl
dec
ljmp
add
jmp
mov
jge
push
push
adc
test
cli
push
mov
outsl
dec
or
jno
pop
into
in
sbb
mov
sbbb
adc
mov
insb
mov
pop
dec
shlb
mov
cmp
inc
fistpl
pop
mov
mov
and
dec
rclb
fiaddl
test
rclb
insl
sti
cmp
sub
jne
movsb
enter
mov
jle
sbb
aaa
push
adc
adc
clc
cmp
push
les
jne
push
push
in
mov
pushf
or
les
divl
mov
fsubrl
add
push
pop
aas
or
pushl
fistl
mov
xchg
fcomps
daa
cmp
icebp
push
inc
mov
cld
mov
mov
cmpl
je
push
test
or
pop
add
inc
data16
int3
jmp
pusha
mov
sbb
xchg
es
addb
push
test
lock
in
dec
push
dec
es
cs
test
aaa
pop
scas
jo
push
mov
add
mov
pop
xchg
mov
adcl
stos
in
icebp
jecxz
mov
jecxz
jno
add
mov
rcrb
sub
ja
fsubl
mov
les
jbe
cmpb
and
not
and
sub
pop
dec
fsubs
out
add
imul
add
cmp
bnd
add
lret
cmp
mov
out
mov
aam
lods
and
add
test
je
testb
fdivs
je
xchg
jae
xor
xchg
cmp
jae
push
test
sar
xchg
pop
ret
add
pop
into
mov
dec
mov
fs
mov
loopne
rcrb
icebp
cmp
add
test
push
xor
and
fidivrs
into
mov
ja
xlat
jne
movsb
lods
hlt
xchg
jecxz
sbb
movsb
mov
std
jne
or
scas
dec
lret
and
xor
ret
push
dec
ret
jmp
movzbl
push
push
cmp
xchg
mov
icebp
sbb
inc
shrb
dec
loopne
or
jne
pop
dec
adc
jl
or
jg
push
adc
xor
jbe
testl
add
inc
jmp
or
pop
jne
adc
fadds
xchg
dec
sar
repnz
stos
mov
shr
inc
nop
push
das
xor
mov
int3
pop
pop
mov
mov
pop
or
cld
fiadds
bound
sbb
mov
xchg
mov
jne
clc
or
rclb
push
add
mov
dec
cmp
and
add
out
les
xchg
fdivr
adc
enter
inc
adc
sub
loope
and
negb
mull
add
or
shrl
jo
pop
adc
or
or
pop
cli
stc
or
addr16
testb
pop
je
push
or
cld
movsb
dec
rorl
cmpsb
sbb
std
add
add
insl
movsl
dec
dec
or
pop
or
ret
inc
or
push
pusha
mov
jmp
mov
add
sub
stos
movsb
push
and
push
pop
push
adc
lcall
outsl
jb
js
je
jb
arpl
jae
sar
ljmp
arpl
gs
insb
add
outsb
je
insl
and
jb
imulb
fimuls
dec
push
push
and
repnz
dec
dec
inc
add
inc
and
mov
add
xor
cmp
sub
jae
popa
jo
insb
imul
mov
mov
outsl
je
shlb
jne
imul
popa
arpl
data16
jbe
add
jae
outsl
sub
movsb
std
or
jae
pop
cs
inc
push
and
or
gs
jae
mov
sbb
push
shll
jbe
fcmovnu
jae
sbb
xor
and
imul
loopne
insl
mov
inc
cs
int
movsl
roll
popa
bound
pop
jnp
imul
stos
test
jbe
mov
or
push
mov
hlt
gs
outsl
ja
jno
outsl
or
or
push
lock
in
jo
insb
jbe
xchg
jne
mov
dec
arpl
inc
jg
mov
xor
or
lds
xor
out
outsl
jo
mov
fcomps
fs
push
cmp
dec
arpl
lock
insl
jne
pop
and
fs
arpl
mov
imul
push
subl
jbe
in
pop
cmp
cli
xor
and
cmpsb
out
adc
loopne
xor
outsb
into
xorl
adc
xor
xchg
push
and
mov
push
cmp
addr16
jae
sbb
scas
xor
fdivrl
fsubrl
sbb
je
and
jle
lcall
inc
sub
mov
dec
imul
pop
sub
inc
add
ds
pop
lret
outsb
iret
cmp
add
cmp
and
popa
dec
xor
imul
outsb
add
and
pop
aam
inc
gs
ret
push
xor
fs
je
das
push
cmpsb
loope
or
push
dec
jae
stos
adc
add
push
in
subb
fisubl
pop
lea
mov
outsl
js
jne
xor
xor
cmp
cmp
scas
xchg
enter
bound
push
xchg
xchg
dec
bound
fs
mov
das
cli
inc
jo
cmp
sti
testb
js
pop
stos
push
or
and
cmp
jge
lret
sbbl
test
jne
ds
je
mov
mov
jl
adc
test
addb
scas
nop
test
mov
jns
shl
sbb
adc
or
or
sbbb
and
addb
popaw
imul
pop
add
add
dec
insb
add
or
xchg
and
dec
add
test
xchg
add
mov
add
xchg
and
mov
push
add
add
sbb
add
mov
ja
dec
pop
stos
incl
adc
push
add
pop
mov
pusha
inc
shr
and
das
addb
add
push
out
fldlg2
pop
pop
inc
or
and
popa
dec
rolb
inc
mov
inc
ror
mov
mov
outsb
add
mov
mov
push
mov
mov
dec
pop
and
cmp
pusha
cmp
sub
lret
jg
dec
inc
inc
aas
add
ds
popf
dec
insb
lds
or
or
jmp
rcrl
xor
cmp
cmp
push
jl
lods
cmp
mov
js
inc
lock
pusha
orl
roll
out
add
add
lds
loopne
adc
mov
ljmp
aas
xchg
lcall
xchg
dec
sbb
dec
pop
pop
adc
adc
decl
sti
jne
mov
rorb
sbb
lock
out
popf
inc
in
mov
je
pop
dec
ljmp
fnstcw
push
push
dec
or
lods
in
bnd
mov
iret
lods
cmp
pushl
jns
jo
adc
in
mov
pop
mov
in
sar
ljmp
cli
sbb
xorl
setno
stos
adc
push
or
add
fcomps
add
sub
frstor
ljmp
jbe
icebp
ja
pop
add
decl
in
lahf
outsl
adc
cmp
sbb
pushf
faddp
sub
pop
cmc
push
sub
cwtl
jmp
test
xchg
in
cmp
fwait
mov
xlat
cmp
stos
lods
icebp
mov
jge
xchg
call
xorb
mov
stos
cli
sahf
sbb
xchg
mov
int
cmc
xchg
mov
mov
std
or
push
outsb
add
out
ds
lock
add
test
aad
jmp
enter
inc
push
clc
mov
sbb
or
inc
cwtl
cwtl
fsubs
pop
lcall
decl
jp
call
add
jns
push
or
leave
dec
xor
popa
push
inc
xor
clc
mov
jp
jne
aaa
push
int3
mov
loope
lods
cmpsl
leave
sarb
adc
pop
ljmp
pop
sub
pop
and
daa
icebp
lods
xchg
dec
xor
cmp
call
pop
adc
in
mov
bound
xchg
sub
mov
test
mov
iret
jnp
push
or
lcall
jg
test
loope
dec
mov
fisttpl
movsl
in
pop
in
inc
inc
xchg
andb
imul
jne
imul
in
inc
filds
inc
jbe
mov
add
push
jle
cltd
and
xchg
ret
and
ljmp
and
rcll
bound
in
ds
mov
pushf
push
vmwrite
cltd
inc
call
xchg
or
jb
sarb
and
or
jecxz
loop
call
cld
adc
cmp
add
in
aam
push
dec
test
lcall
cwtl
lret
decl
sarl
out
lock
adc
mov
and
inc
hlt
shlb
test
jecxz
dec
xchg
pop
aaa
sub
jmp
iret
out
lret
sbb
insl
cltd
and
push
push
hlt
xor
fdivp
enter
push
adc
inc
sahf
ljmp
add
pop
jecxz
xor
in
clc
jmp
aaa
sbb
mov
dec
fdivl
dec
subl
push
xor
push
dec
cmc
push
ret
pop
aaa
sahf
les
push
push
sub
decl
enter
mov
mov
mov
xor
jno
adc
das
scas
sub
pop
mov
inc
and
and
fidivs
hlt
std
sarl
sahf
add
pusha
cld
lcall
clc
lock
repnz
or
fisubs
sub
shll
mov
mov
push
lods
mov
std
lods
push
call
adc
and
xorl
jg
test
loopne
decl
data16
ficoml
jne
pop
out
push
leave
xchg
pop
or
adc
loopne
dec
cwtl
cmpsl
add
jmp
xchg
shrl
das
outsl
sti
rol
jbe
fwait
xor
decl
push
sub
xchg
bnd
test
sub
rcrl
pop
sub
movsl
pushl
dec
jbe
mov
sti
stos
add
dec
xchg
sbb
mov
sahf
cmp
ret
jle
or
or
call
push
cmp
mov
dec
mov
add
pop
shrl
and
sar
jns
mov
rolb
and
negb
lea
add
cwtl
xor
ljmp
and
inc
or
pop
out
cmp
stos
cmp
mov
sbb
lret
call
and
insl
sbb
jo
jo
mov
add
loopne
dec
mov
push
idiv
call
icebp
popf
cltd
mov
loope
daa
cmpsl
lret
adc
cmp
scas
or
std
xor
sbb
loop
iret
fistps
mov
scas
xor
mov
call
xchg
aam
xchg
mov
pop
cs
call
fld
jnp
push
in
pop
test
cli
xor
add
in
rorb
cmp
mov
lcall
pusha
test
loop
hlt
xchg
xor
adc
mov
icebp
shlb
call
mov
pop
push
outsl
lret
xchg
mov
pusha
fs
xor
xchg
mov
jp
cmpsb
negl
adc
mov
mov
xor
xchg
xor
call
push
jbe
lods
out
mov
call
push
stos
add
outsb
push
and
add
scas
gs
call
fisubs
pop
pop
mov
mov
sti
mov
fists
push
hlt
inc
fbld
out
cmp
xor
xchg
loop
xchg
inc
out
cltd
pop
jl,pn
push
ficoml
call
leave
or
pop
xchg
bound
enter
mov
jno
mov
add
fwait
pushl
popf
push
out
sub
push
mov
or
les
scas
dec
stos
imul
and
mov
mov
or
and
jo
sub
mov
test
in
and
fcoml
jbe
nop
ljmp
rcll
and
decl
lcall
xchg
iret
lcall
pop
sbb
inc
sbb
inc
into
xchg
xchg
movsl
test
cmpsl
int3
mov
adc
shr
push
lret
dec
rcl
test
pushl
sub
mov
push
push
and
sahf
cmp
aas
pop
or
cmc
cmp
adc
js
add
mov
mov
push
mov
adc
push
fstpt
or
and
call
popa
or
xor
insb
fucom
xchg
cmp
pop
imul
mov
sbb
jmp
inc
cmp
fs
pop
clc
pop
mov
dec
push
cmp
incl
mov
outsl
cmp
pop
pop
aaa
arpl
pop
add
call
mov
into
out
int3
cmovge
daa
mov
jne
adc
push
xchg
jge
iret
push
popa
sub
mov
scas
dec
aaa
adc
adc
lcall
mov
cli
aas
nop
call
outsl
jecxz
fs
test
lcall
ret
popa
jmp
mov
push
fisttpl
pop
js
movsl
fwait
fwait
inc
add
aas
push
fisttpll
jns
add
int3
lcall
scas
clc
pop
sub
cmp
xchg
mov
arpl
push
dec
cld
pushl
stos
hlt
mov
mov
js
mov
fabs
stos
jb
lods
insb
mov
pushl
les
movsl
cwtl
mov
pop
lds
push
sub
xchg
mov
cs
movsl
loope
pop
lock
lcall
out
lea
jmp
inc
xorb
addr16
cltd
jmp
jl
xor
inc
das
sub
stc
dec
cltd
pop
cmp
stc
inc
mov
je
lock
gs
or
ljmp
cld
fsub
iret
mov
push
call
lret
add
lods
lahf
cmp
stc
popa
or
stos
jg
in
sbb
mov
adc
lcall
cmpsb
jnp
dec
out
clc
call
adc
cmpsb
in
stos
cmpsb
aad
fildl
pop
in
and
xchg
mov
movsb
cmc
repz
xor
push
leave
outsb
push
jnp
inc
aad
xor
adc
ljmp
xor
fimuls
shr
xchg
fldenv
popa
mov
adc
jo
jmp
ds
outsb
xchg
push
xor
adc
push
adc
jecxz
push
call
push
call
inc
inc
pushw
push
xor
inc
mov
pop
into
pop
push
subb
aaa
out
dec
cmp
push
testl
mov
pop
cmc
call
add
push
adc
sarl
mov
lret
fwait
popf
stos
stc
sbb
test
jge
fwait
or
rclb
adc
xchg
je
ja
sbb
mov
add
cmp
out
rolb
test
adc
ja
incl
add
mov
jg
jmp
cmc
das
movsl
scas
aam
dec
cmp
jp
aas
xchg
jo
cmc
call
mov
shl
xor
lret
fstpl
lods
push
pop
lahf
push
js
pushf
in
out
outsl
push
and
cmpsb
imul
gs
mov
es
jo
xchg
call
cmp
clc
mov
mov
inc
dec
pop
add
xchg
in
lcall
int
cmc
jmp
out
icebp
bound
sahf
mov
test
push
daa
es
jg
pop
pop
incb
and
cmpsb
cli
arpl
mov
mov
dec
dec
sbb
fstps
pop
adc
mov
cs
xor
aaa
and
call
repz
inc
jp
cmpl
jbe
iret
adc
push
add
jp
call
mov
out
cs
fs
andl
or
adc
pop
lahf
lret
pushl
xor
cmp
nop
dec
into
inc
pop
shlb
push
xor
xchg
mov
cmp
dec
imul
mov
mov
or
decl
cmp
in
pop
sti
sbb
xor
pushf
and
loope
mov
jp
loop
pushl
in
adc
repnz
out
insl
jecxz
sahf
adc
dec
push
ret
lret
jp
iret
movsb
outsl
push
sbb
out
enter
ljmp
and
cmp
or
je
jg
inc
push
out
or
faddl
fstpt
cmp
arpl
push
add
sbb
dec
push
enter
mov
lock
std
cmpsl
and
jmp
clc
dec
es
jnp
xchg
ja
dec
jg
call
loopne
sbb
imulb
inc
int3
ds
mov
fstpt
add
pushl
mov
mov
inc
jl
mov
adc
push
test
jg
mov
push
or
outsb
inc
scas
cmp
hlt
mov
movsl
lahf
imul
loope
loopne
aaa
lods
xor
pushl
jns
jae
mov
jl
dec
rcl
xor
adc
xchg
fstpt
pop
andl
fcmovne
cmp
les
loope
lahf
fmul
mov
sarb
jmp
inc
test
insb
lods
out
sti
cwtl
lret
xchg
or
insb
lock
jno
lcall
xchg
push
add
ljmp
jmp
add
sbb
fcompl
fsubl
xchg
push
bnd
mov
aad
clc
pushl
xchg
cwtl
out
cmp
dec
ja
test
bswap
ljmp
sarb
pop
test
and
jl
loopne
push
jno
fcmovnb
xchg
or
out
sbb
shll
cmp
pop
roll
mov
lods
call
jmp
je
out
xchg
outsb
jno
xor
lahf
adcl
ss
jmp
jge
sub
out
jne
pop
ret
jns
sub
loopne
cmp
dec
cli
js
push
jns,pt
sar
ds
int
mov
je
dec
int
pop
sbb
push
pop
ss
cmp
push
add
mov
mov
lahf
inc
mov
xchg
cmp
call
mov
jo
popa
stos
mov
sti
xlat
push
dec
and
call
addr16
jl
in
lods
out
jle
jmp
sti
push
lods
mov
sbb
jb
loop
cwtl
repnz
call
loopne
inc
push
inc
bound
mov
in
sbb
add
ljmp
fs
pop
push
subl
and
dec
icebp
fcoml
movsb
filds
mov
fcomip
pushl
adc
subb
cmp
neg
gs
and
push
rolb
lcall
dec
sub
jae
mov
mov
adc
jle
lods
push
sub
mov
idivl
push
dec
jae
pop
std
pushl
jle
jle
aas
jmp
hlt
mov
sub
imul
add
jmp
sub
popa
shll
lret
lret
xchg
mov
xlat
out
cs
jg
add
call
outsl
or
push
dec
fildll
sub
push
xor
decl
jns
jmp
sarb
cmp
cld
pushl
jo
mov
enter
sub
mov
adc
cmpsb
mov
fcomip
add
inc
ret
decl
aaa
pop
shrb
dec
enter
dec
rcl
pushl
fldl
arpl
pop
add
lret
jecxz
inc
push
iret
dec
adcl
ds
mov
in
xchg
push
xchg
std
push
lock
cli
es
repz
jo
lret
push
cmp
es
daa
je
jne
stos
mov
or
iret
xchg
lahf
adc
loop
fimull
sarl
xchg
sbb
sub
loopne
test
pusha
sti
mov
out
jbe
iret
mov
dec
pushf
bound
dec
fwait
cmp
sarb
cmpsl
sub
jp
push
data16
aad
je
jecxz
ljmp
jno
out
pop
lahf
ret
fistpll
xor
ja
sti
cmp
imul
push
jb
lods
fnstcw
xor
jge
pop
cwtl
incl
fs
mov
int3
enter
lods
aam
lods
mov
test
mov
dec
pop
sub
sub
in
popf
out
repnz
xchg
arpl
mov
aas
jmp
or
inc
xchg
inc
popf
addl
bound
and
stos
cltd
cmp
pop
mov
xor
out
inc
cs
aam
das
xchg
call
push
test
or
cli
pop
in
mov
arpl
rcrb
dec
popa
fimull
scas
negb
in
dec
push
add
jp
mov
and
push
pushf
mov
incl
fmull
aaa
call
or
movsl
mov
ret
mov
incl
mov
subl
jg
jp
mov
jnp
test
mov
int3
or
add
dec
test
and
mov
xor
inc
leave
fdivrp
mov
mov
lock
push
pop
push
into
repnz
push
repz
sub
jnp
ja
jbe
call
test
cld
stos
pop
inc
aam
xor
mov
mov
xor
mov
or
cltd
bound
lret
or
mov
xor
fwait
incl
jge
jp
dec
pop
sbb
in
mov
sub
sub
adc
bound
xchg
pop
std
pushl
dec
int
rcrb
sbb
in
pop
es
loopne
arpl
adc
pop
or
rol
mov
mov
mov
lcall
loope
addl
cmp
cmp
push
cmp
cmp
mov
pop
movsl
inc
cmp
adc
jnp
sarl
cmp
loopne
incl
in
repz
js
sub
cli
je
ss
mov
psubsw
pop
jle
ss
fidivs
xchg
mul
mov
loop
inc
lahf
in
arpl
je
jmp
lds
mov
int3
popf
lods
dec
aas
aam
clc
lret
mov
sbb
fwait
pop
insb
pop
mov
mov
cmp
lahf
orb
daa
call
pop
push
std
ljmp
sbb
inc
out
int3
jns
cmp
mov
jp
sbb
jmp
push
lret
fnstsw
dec
ss
xor
das
outsl
jb
arpl
cmc
out
jnp
incl
adc
mov
jo
jae
or
fs
mov
mov
xchg
mov
adc
jg
ljmp
sub
jnp
pop
jns
pop
lods
icebp
inc
adc
mov
mov
xor
jmp
in
das
push
movsb
out
lds
cmp
xlat
movsl
jp
popa
sbb
rcll
scas
cmp
push
adc
jge
pop
enter
call
mov
out
clc
outsl
in
xchg
ljmp
xor
imulb
roll
adc
jp
decl
jne
inc
les
fmull
sub
out
repnz
shl
xor
add
mov
jmp
fcoms
es
mov
cmc
mov
lret
incl
sub
push
ja
xor
ss
ficomps
jl
sbb
ljmp
mov
outsb
repnz
pop
pushl
jmp
cmp
sub
sbb
push
lea
in
cmp
mov
stc
je
and
mov
push
push
and
push
lods
dec
test
imul
fbld
lea
pop
outsl
or
ds
xor
jae
mov
aam
add
mov
outsb
jne
pop
int3
in
pushl
jge
xor
xchg
dec
fnstsw
xor
cmpsl
fld
dec
push
adc
cld
fwait
decl
je
fimuls
shlb
cmc
mov
adc
pop
cmp
pushl
jne
sub
xchg
jo
jb
rcr
xchg
lret
xchg
pop
jp
cltd
jne
push
call
mov
inc
imul
pushf
leave
jle
adc
lcall
sbb
outsl
mov
mov
loopne
adc
pop
mov
xor
test
call
adcl
mov
add
pop
cmc
inc
popf
inc
movsb
xlat
add
decb
call
adc
inc
popl
out
mov
xchg
out
movsl
mov
cld
hlt
mov
mov
dec
jmp
fcomip
pushl
jae
out
jl
sbb
inc
push
shrb
stc
push
stc
mov
jae
jecxz
jmp
mov
or
popf
sbb
in
push
in
lea
push
inc
mov
lret
jle
decl
movl
ffreep
push
xchg
rorb
repnz
jo
data16
inc
shll
adc
bound
dec
out
out
incl
xchg
xor
inc
mov
arpl
or
or
rclb
outsb
pop
cmp
lea
incl
sub
nop
xchg
je
aam
es
pusha
sbb
xchg
insl
inc
sahf
push
ja
cmp
pushf
icebp
incl
cmp
jp
dec
sub
inc
int
inc
xchg
xor
int
test
imul
ljmp
das
dec
in
mov
push
adc
rorl
cs
mov
imul
fisttps
pop
sbb
sub
vaddss
lock
jle
add
pop
pop
clc
ja
push
out
or
scas
xchg
notl
inc
cmp
outsl
lret
adc
lret
out
pop
scas
daa
shrb
outsl
int
and
fsubl
test
jmp
das
inc
aas
jmp
clc
inc
mov
js
lods
xchg
sub
mov
jae
or
mov
mov
mov
pop
mov
sub
mov
fmulp
aad
into
test
repnz
loope
pop
xchg
jmp
xchg
cltd
mov
icebp
cwtl
cwtl
push
and
imul
jmp
mov
or
gs
push
ja
adc
nop
js
push
lret
loope
mov
incl
mov
jle
stc
lea
rclb
pop
insl
ss
push
xchg
out
xlat
stc
int3
iret
js
dec
in
sub
imul
flds
xor
out
cli
lcall
pop
int3
lock
arpl
dec
popf
or
ja
and
enter
js
lods
ret
mov
push
mov
pop
cmp
lock
xor
negb
mov
jg
loop
std
mov
pop
xchg
mov
mov
inc
cmc
inc
pop
into
aas
decl
mov
jle
push
pop
xor
imul
hlt
mov
jno
or
decl
jae
sbb
gs
cmp
sbb
sarb
shr
mov
mov
sub
sbb
gs
decl
mov
and
out
sahf
sub
push
inc
rcrb
jae
sub
frstor
sbb
xor
call
loopne
mov
jae
repz
pop
lcall
cmp
mov
and
pushl
outsl
popa
cli
sti
mov
stos
cs
lds
mov
push
adc
andl
jae
sub
lcall
stos
sub
mov
pop
xor
loopne
cmpsb
xchg
insl
cmp
mov
mov
mov
lcall
pop
push
dec
or
jmp
adc
jbe
add
bound
lcall
ds
mov
sub
mov
or
add
xlat
xor
jg
inc
aad
mov
push
xchg
imul
and
sbb
mov
fwait
sub
dec
lea
loopne
lods
call
fs
outsb
add
jp
cmp
addr16
andl
jb
mov
test
cwtl
dec
aad
and
or
mov
sub
add
cli
call
adc
lds
fbld
cmp
pop
cmc
push
sbb
inc
decl
pop
lcall
jnp
push
repnz
jns,pt
adc
decl
je
xchg
sub
and
pop
or
add
incl
add
outsb
jge
cmp
loopne
in
popa
inc
shll
inc
pop
ficoms
and
decl
popa
sbb
jns
es
push
pop
out
insb
push
pop
cmp
add
notl
push
jecxz
mov
or
push
arpl
sub
stos
shrb
adc
sub
mov
pushf
and
xchg
dec
shrb
out
sub
or
and
pop
int
fwait
out
call
cltd
push
add
int
sbb
add
jae
scas
inc
sub
negl
mov
push
and
or
test
mov
cmp
int3
ret
fs
incl
jmp
sbb
pushf
mov
cltd
dec
jb
fcomps
rcrb
in
jmp
xchg
mov
loop
aas
ret
cmp
aaa
lods
and
xchg
lcall
cmp
mov
outsl
push
adc
addb
and
decl
arpl
jecxz
leave
test
scas
leave
or
scas
adc
and
xor
jecxz
mov
clc
decl
push
fsubrl
add
dec
stc
mov
adc
pop
sub
and
xchg
ljmp
pop
jg
jmp
cmp
out
mov
jg
dec
cmp
out
cmpsb
fidivrs
lcall
sbb
xor
ret
enter
es
and
mov
mov
lcall
inc
movsb
mov
test
push
rcll
pop
outsl
sub
int3
call
xrelease
movsl
shl
jp
pop
fwait
push
dec
adc
sbb
inc
icebp
push
or
decl
sti
lret
mov
call
or
jle
popa
dec
cli
jl
scas
add
into
xchg
mov
xor
dec
dec
dec
imul
add
aas
loopne
push
icebp
out
push
mov
dec
ret
inc
xchg
aam
inc
ret
das
rcll
hlt
mov
decl
popf
ss
sbb
or
ja
jmp
dec
enter
pop
enter
dec
dec
jl,pn
iret
enter
cmp
incl
xor
clc
push
push
jae
cs
negl
jecxz
mov
call
xchg
inc
scas
orb
data16
sub
xor
mov
in
push
jp
inc
xchg
insb
or
sbb
sub
add
inc
mov
jle
stos
jmp
out
andb
daa
mov
subb
dec
fs
sbb
adc
fs
inc
es
insb
mov
cmpsb
push
stc
push
addl
sbb
dec
pop
push
stc
xor
cli
mov
inc
push
or
or
lods
jne
and
push
and
ds
mov
pushl
and
ljmp
mov
test
inc
out
pop
adc
mov
lock
mov
mov
scas
or
xor
fs
or
xchg
dec
mov
incl
mov
push
cltd
int3
cmc
and
outsb
stos
and
push
fst
jecxz
call
or
jmp
out
incb
pop
inc
dec
mov
jp
pushf
call
sar
cmpb
dec
push
stos
sahf
mov
outsl
std
xor
ret
mov
push
mov
add
repz
and
mov
mov
adc
call
lods
pop
jb
popa
cmpsb
or
xchg
call
sbb
xchg
popa
mov
xor
call
adc
mov
repz
fisubs
mov
call
std
push
xchg
push
jnp
and
or
dec
sub
subl
test
pushl
mov
out
mov
ret
xorl
or
push
test
fimuls
sbb
popf
pusha
sbb
incl
clc
adc
mov
xor
lods
inc
sti
cmp
ljmp
push
leave
dec
sbb
call
fisttps
jp
sub
xchg
fucom
pop
jg
cmp
ud0
sub
inc
mov
sub
adc
sub
jno
imul
call
fisubl
loopne
popf
fstl
sahf
test
cld
js
out
mov
lcall
scas
fwait
in
mov
mov
add
inc
dec
push
adc
jle
add
mov
faddl
lret
insb
mov
js
dec
jl
mov
xlat
push
xchg
out
pop
cld
decl
test
lahf
push
punpcklbw
loop
add
sahf
xlat
inc
mov
testl
pushl
test
sub
int
dec
push
pop
mov
or
mov
push
pop
mov
call
mov
adc
inc
in
inc
cmpsb
lret
mov
pop
pusha
dec
ja
lods
scas
ja
pushl
dec
push
hlt
fisubl
sbbb
fstpt
lret
xchg
nop
pop
repnz
add
sub
incl
or
cld
xor
fisubrl
ret
sub
shlb
sar
jmp
and
bound
rclb
and
jg
inc
xchg
repz
test
add
test
ja
mov
test
ds
adc
ret
icebp
ljmp
pop
test
rcrb
cli
dec
imul
mov
loopne
mov
push
stos
ret
loop
xorb
sub
dec
jmp
call
push
sub
push
pop
or
adc
test
in
rorb
aam
and
pushl
std
adc
fwait
jmp
xor
lods
stc
aaa
imul
or
lods
mov
call
fdivp
sahf
adc
out
imul
and
jl
imul
incl
jnp
cltd
and
mov
rcll
push
or
add
scas
sahf
mov
pushl
inc
imul
lods
add
jl,pt
aaa
pop
sub
cltd
jg
ss
flds
adc
aas
fstp
add
ljmp
test
out
jo
mov
pop
or
std
mov
int
pushf
mov
add
push
mov
add
inc
add
push
lods
test
test
pushf
sub
jmp
xor
test
push
in
dec
scas
xor
rcll
xchg
jmp
das
idivl
pop
std
decl
das
enter
int
cli
lcall
cmp
lods
aas
mov
shrb
ret
filds
cmp
leave
add
aad
stc
aam
pop
and
iret
pandn
ljmp
cmpsb
push
cmp
add
mov
stc
mov
jmp
mov
jne
ss
incl
cmp
adc
jmp
mov
shlb
push
mov
xor
mov
dec
shr
sbb
pushl
lcall
fdivrs
test
mov
icebp
es
jmp
pop
mov
mov
addr16
fdivl
cmp
js
mov
jge
jne
ficoms
cli
push
xchg
jl
and
add
sbb
fisubrl
inc
test
in
pusha
pop
pop
lock
outsb
or
ljmp
test
test
les
dec
adc
movsl
inc
ds
mov
pop
xchg
jmp
outsl
cmp
scas
or
sub
sarb
inc
enter
dec
mov
mov
call
imul
mov
add
ret
sub
pop
jo
pushl
nop
jge
jmp
fucomi
call
pop
nop
add
aam
movsb
inc
sbb
incl
mov
or
test
lret
pop
mov
cmpsl
pusha
scas
popa
repz
cmp
mov
cmp
xorb
adc
and
xchg
sbb
shll
add
sbb
in
out
mov
repnz
scas
cs
dec
and
cmp
scas
pusha
ljmp
push
cli
or
shll
push
test
pop
test
pop
xchg
pop
adc
and
pushl
xchg
mov
fsts
ss
sbb
pushf
dec
pop
jnp
mov
push
push
test
mov
lcall
push
jge
sub
push
adcl
pop
sbb
adc
repnz
mov
das
mov
in
dec
pop
mov
add
mov
shrb
insl
mov
insb
fcos
jmp
add
or
jmp
adc
and
cmp
cmp
call
pusha
stos
pop
xor
add
pop
dec
je
adc
pop
dec
outsb
cwtl
xchg
mov
lahf
push
lret
inc
js
dec
in
jb
enter
icebp
std
lret
mov
in
jo
imul
test
mov
pop
enter
loope
data16
cmc
mov
incl
add
cmpsl
inc
push
jmp
call
or
fdiv
callw
clc
pushl
bswap
in
ja
sub
and
sub
xchg
sahf
insl
xor
icebp
das
rcrb
arpl
adc
dec
mov
leave
ret
aam
cmp
addr16
dec
lret
je
or
xor
lcall
xlat
mov
sub
dec
jle
fs
rcrb
cmpb
inc
cmp
movsl
fs
lcall
call
push
not
xor
dec
dec
lret
js
cltd
jg
shr
xor
sbb
mov
fisubl
js
out
lret
mov
pusha
push
push
mov
push
in
das
mov
je
jb
movsl
into
xchg
std
xchg
pop
das
int
bound
sbb
cld
mov
int3
testb
pop
lahf
xor
cmpsl
adc
ljmp
mov
adc
and
xlat
in
test
scas
leave
call
xor
stos
add
xlat
mov
shll
inc
ljmp
or
int3
movb
xor
fidivl
xchg
lcall
jno
xchg
shlb
xor
mov
fwait
mov
and
outsb
dec
ja
mov
outsl
sub
stc
inc
test
repz
xchg
sub
popa
lods
pop
inc
push
stos
repnz
or
add
movsb
push
cld
ljmp
loope
mov
pop
lahf
mov
xor
lds
or
adc
push
aam
lcall
pop
int
xor
mov
insb
bound
incl
ror
sbb
mov
add
and
adcl
cmp
cmp
aam
ret
ljmp
sarb
and
dec
mov
adc
jle
lcall
ljmp
lea
pop
push
mov
cmp
or
call
and
addr16
shrb
mov
test
push
or
aam
push
movsb
mov
incl
pop
dec
xchg
pushl
push
sub
jmp
xlat
into
aas
dec
cmp
and
push
sbb
shll
adc
addr16
sarl
and
pusha
adcl
lcall
xchg
imul
inc
cwtl
sbb
jecxz
sar
sbbl
jmp
jecxz
jo
mov
dec
negl
in
pop
stos
mov
cmp
mov
push
jmp
xchg
loope
repnz
aad
mov
mov
jl
xchg
test
in
lcall
add
test
mov
loopne
jb
xor
add
xchg
fcomip
aaa
pop
mov
sub
sbb
dec
or
js
mov
cmp
pushl
movsb
push
jns
mov
or
push
mov
out
aam
in
add
pushl
leave
aaa
aam
xlat
and
inc
iret
loopne
sub
push
rcrb
push
adc
in
into
lcall
les
pop
cmp
adc
push
lret
ret
popf
mov
nop
mov
mov
faddl
lds
jle
pop
in
lods
inc
lcall
pusha
lock
adc
sbb
cmp
ljmp
push
adc
and
enter
insl
add
cmp
mov
adc
das
mov
icebp
fwait
mov
push
lahf
les
sbb
jg
cs
fldl
sbb
insl
pop
aaa
xlat
hlt
pusha
sub
add
jmp
in
inc
push
cmc
and
and
andl
jge
sbb
inc
jb
cwtl
add
icebp
push
call
cmp
jbe
out
scas
xor
sub
push
xor
into
mov
insb
mov
int3
test
push
hlt
fists
loopne
sbb
loop
sub
pushf
and
std
cmp
pushf
fs
das
xor
pusha
stos
cmpsl
xor
push
push
and
sub
inc
shrl
cmp
push
les
stos
fsub
pop
inc
sub
aad
mov
mov
lods
push
cmp
mov
scas
mov
lahf
call
mov
nop
gs
add
cmp
fcmovbe
inc
ss
and
mov
xchg
pop
popa
decb
lods
dec
sub
jecxz
ljmp
ret
xor
fildl
add
pushf
in
and
test
and
jg
out
push
inc
inc
sub
push
aam
rcr
mov
fs
cmp
fstpl
incl
cld
aad
ljmp
gs
and
push
mov
sbb
decl
xchg
rolb
cli
xchg
int
xchg
cmpsb
mov
or
sub
fimuls
mov
jmp
jg
rorl
sub
xor
add
inc
dec
xchg
lcall
inc
mull
aam
lcall
out
sub
fs
bound
xchg
pop
jne
add
jns,pt
ja
ljmp
pop
cli
mov
imul
std
outsb
dec
mov
fildl
sub
pop
call
mov
cmp
pop
xor
idivl
cmp
inc
aaa
int
mov
insl
ret
leave
sbb
icebp
mov
inc
lock
sub
call
pop
and
mov
mov
push
and
mov
cld
sti
je
inc
sub
pushl
xor
add
jmp
frstor
xchg
mov
sbb
cmp
ljmp
icebp
dec
jno
stc
mov
xchg
jnp
cli
call
push
mov
jb
xchg
xchg
add
lret
incl
repz
pushl
and
outsl
shrb
into
scas
inc
push
xchg
stos
dec
jp
lcall
ljmp
xchg
pop
sub
arpl
or
push
jns
and
fwait
scas
js
add
outsb
xor
arpl
lock
or
cmpsb
cmp
push
mov
push
out
or
lcall
xchg
cld
xlat
test
mov
adc
lea
adcb
or
bound
sub
jb
ljmp
pop
push
sub
outsl
aaa
mov
sbb
popa
fcmovb
mov
popf
fmul
outsl
ret
mov
add
incl
inc
xlat
loopne
cmpsl
lods
or
xchg
pop
in
ljmp
adc
aaa
jb
shr
mov
pushl
stc
ds
jae
jl
int3
adcl
dec
outsb
daa
rorl
push
inc
lcall
dec
stos
aad
or
jge
cmp
popf
nop
loopne
mov
adc
repnz
sar
test
lret
std
std
mov
fistpll
ret
xchg
mov
mov
pop
mov
lcall
mov
dec
loop
adc
mov
mov
mov
sbb
pop
mov
gs
fdivrp
xor
fmul
das
cmpsb
or
clc
cwtl
pop
xchg
fisubrl
jo
idivl
adc
pop
dec
cmp
jne
or
mov
and
inc
add
dec
pop
push
icebp
push
pop
jl
mov
decl
xchg
dec
testl
in
and
sbb
mov
inc
ljmp
pop
cmp
call
xor
add
cmc
ja,pt
aam
out
shll
cli
ficoml
pop
incl
inc
inc
xor
movb
scas
loop
inc
addr16
decl
mov
int3
jl
mov
pop
and
faddp
mov
sub
mov
pushl
mov
jl
xchg
scas
cld
sub
pop
popa
arpl
mov
jnp
je
push
adc
lcall
mov
imulb
daa
push
sbb
adc
push
outsl
out
jle
mov
call
fildll
sub
and
arpl
xlat
jb
into
inc
xlat
vsubss
push
sti
fadds
gs
test
inc
sbb
mov
and
adc
sbb
incl
mov
lods
lahf
fsts
cld
pop
movsl
loop
insl
iret
fldpi
lcall
decl
or
dec
sub
jae
mov
aad
je
loopne
mov
cli
xor
pop
cmp
dec
dec
mov
into
enter
xchg
arpl
fst
movsb
rolb
pop
and
or
xchg
lds
fmull
mov
or
add
xor
cmp
push
xor
sbb
push
popa
call
mov
jbe
sub
hlt
inc
scas
ss
and
insl
push
decl
cmc
xor
cld
fisttps
xorl
scas
rclb
xchg
sti
pop
mov
lahf
adc
mov
leave
mov
jmp
pushf
sub
dec
shll
add
pushf
loopne
sub
out
jno
cmp
ljmp
ds
insb
pop
int
jl
test
fwait
movsb
xor
xchg
jmp
cmpl
repz
ljmp
sbb
int
push
mov
jne
cld
cmp
cmp
push
xor
push
mov
or
lea
jno
lea
or
cmc
jg
dec
ljmp
out
sub
lods
fimull
iret
hlt
ret
lcall
enter
lahf
ljmp
dec
mov
mov
jbe
inc
jg
jp
bound
out
mov
pop
mov
adc
divb
mov
lcall
xor
sbb
sbb
sahf
es
sbb
mov
out
lcall
dec
js
into
mov
imul
cmp
sub
or
inc
xor
push
ss
pop
adc
test
jmp
or
sarl
mov
pop
or
jmp
push
xchg
out
cld
pushl
sub
inc
mov
push
push
sub
sbbb
cmp
pop
fbstp
jbe
adc
or
add
pop
icebp
call
mov
lcall
mov
push
cmp
mov
inc
lcall
pushl
inc
mov
mov
xorb
shrb
cmp
movsl
mov
jbe
out
sbb
sbb
push
jl
je
fildl
out
lds
mov
mov
sahf
mov
jp
ret
add
js
inc
or
pop
cmp
call
mov
loope
push
test
push
cmp
jp
fcomip
call
sti
pushf
pop
stos
icebp
mov
aaa
mov
pop
in
add
lcall
shrl
mov
mov
ss
xchg
xchg
dec
fcmovne
jnp
inc
sbb
adc
repz
lret
gs
or
cmpsl
add
add
sub
ljmp
and
gs
push
test
or
sbb
add
icebp
jmp
inc
jle
ds
fcoml
jb
cli
shlb
xor
fs
mov
or
les
repnz
xor
outsb
pop
fsub
test
insb
inc
pop
insb
decl
mov
cld
jb
jne
add
jp
repnz
adc
fs
mov
xchg
out
cs
dec
jo
jo
mov
mov
dec
or
xchg
dec
cmp
aam
jo
xchg
pop
movsb
sti
cmp
sbb
fbstp
call
hlt
lods
cmp
xchg
jmp
inc
nop
mov
add
sub
lods
xor
cmp
incl
in
inc
mov
lret
sbb
push
xor
insl
mov
bound
push
bound
mov
or
leave
sub
sub
mov
xor
std
or
jb
cmp
adc
pushl
mov
adc
fdivr
adc
inc
testl
mov
cmp
test
and
sub
repz
lock
push
pushl
notb
jle
dec
cli
lea
ret
and
inc
push
cmpsl
or
inc
or
xchg
and
icebp
mov
andl
push
adcl
incl
rorl
movsl
cpuid
cmpsb
rolb
cmp
and
and
jge
xor
jnp
jmp
lcall
fwait
mov
lahf
sbb
xchg
cltd
iret
add
or
jmp
pop
icebp
push
push
fadd
daa
cwtl
add
mov
pop
in
xchg
filds
xor
jo
cld
iret
push
sub
jp
pop
lock
decl
notb
outsb
or
jle
iret
mov
inc
lret
cmp
inc
cmp
call
bnd
adc
jmp
push
repnz
rcll
rorl
lret
inc
out
pusha
cmc
cmp
cld
decl
pop
mov
xor
aam
pop
and
mov
lcall
inc
rcll
xchg
int
mov
scas
pop
pop
push
ss
mov
insb
ret
mov
repnz
or
jmp
data16
mov
out
mov
aaa
jbe
sti
inc
cmp
outsb
or
sbb
decl
jo
xor
dec
enter
es
jae
mov
add
and
dec
aad
fistl
and
call
or
jmp
push
mov
xor
mov
sub
data16
sub
pop
pop
out
js
mov
cli
push
std
mov
fwait
jp
jmp
cmp
fstps
inc
push
incl
push
push
cmp
xchg
mov
test
cmp
fdivrs
mov
xor
xchg
push
mov
mov
mov
outsb
xchg
test
arpl
mov
decl
pop
add
stos
ja
push
dec
test
aaa
xlat
in
inc
roll
lcall
ficomps
into
fimuls
mov
es
sub
sbb
daa
movsb
pop
pop
call
loopne
inc
push
push
sbb
rcrl
adc
lahf
loop
pmovmskb
add
pushl
nop
push
ret
cmp
jp
into
lods
cmp
inc
cltd
in
mov
ficomps
or
fistpl
sti
inc
mov
cmpsl
push
xor
push
lret
cmp
mov
stc
cwtl
jecxz
in
shl
ret
jo
mov
dec
ljmp
ficoms
jns
dec
push
pop
out
jns
inc
jb
movb
add
mov
sub
ficomps
jp
lods
pop
lahf
xchg
rclb
jbe
stos
out
xor
xor
loope
popf
push
scas
ljmp
pop
rcrb
mov
xchg
jge
and
loope
mov
jae
dec
pop
pushf
pop
fdivrp
sbb
aaa
loop
roll
pop
xor
dec
adc
lock
call
mov
loop
shlb
outsl
bnd
xchg
scas
mov
aam
lahf
lcall
inc
xchg
aas
outsl
sbb
mov
rolb
popa
rcll
in
fwait
mov
sbb
jmp
int3
ds
aaa
fcomi
jge
jecxz
dec
les
shlb
in
xchg
hlt
push
fadd
popa
stos
loope
decl
push
pop
lret
mov
add
out
jae
rorl
fcos
mov
nop
and
dec
mov
test
scas
xchg
mov
pop
stos
inc
call
outsb
xor
lret
test
add
hlt
and
clc
int3
sub
xchg
insb
lcall
lcall
jae
mov
iret
pop
cmpl
or
cwtl
mov
call
xor
xchg
iret
push
mov
sbb
push
frstor
adc
mov
push
shlb
pop
daa
ret
push
mov
icebp
mov
jle
inc
add
pop
jle
or
mov
mov
adc
call
mov
mov
jno
xlat
ss
xor
pop
fs
sahf
dec
jo
inc
ljmp
jae
mov
test
sub
jge
push
shl
cmpsl
idivl
ljmp
pop
jns
sub
rcrb
mov
mov
mov
pushl
mov
pop
mov
int3
stos
xchg
out
fsts
mov
shl
lds
pushl
cld
cmp
ja
xchg
ja
sbb
movsb
mov
or
sub
ljmp
cld
jp
notb
mov
sbb
int
fistpll
ret
sarb
loopne
call
add
vdivsd
adc
dec
mov
int3
outsb
call
insb
adc
sub
fs
call
loopne
jp
and
out
es
cmp
paddb
mov
sub
jmp
subl
pusha
cld
rcrl
loopne
xor
std
pusha
or
jbe
mov
pop
fwait
xorb
pushl
fimull
daa
pop
add
movb
xchg
lods
hlt
inc
and
pop
mov
sti
and
mov
jl
aam
mov
push
popa
push
jge
imul
outsl
stos
fistpll
ret
xchg
adc
pop
xchg
sbb
sahf
xor
sti
test
or
mov
out
pop
mov
sbb
sahf
fdivl
jecxz
nop
or
and
pop
cmp
decb
dec
aam
outsb
adc
dec
stc
mov
jnp
jbe
imul
mov
psubd
pop
repnz
or
in
mov
cli
aam
outsl
cmp
imul
stc
sub
movsl
dec
rcr
inc
cld
js
jg
jo
sarl
aas
insl
scas
pop
lret
scas
inc
pop
push
add
notl
es
pushl
test
jb
lahf
adc
push
mov
xor
dec
lock
xchg
hlt
push
incl
dec
inc
adc
das
cmp
jnp
jmp
push
mov
add
cmp
incl
sub
int
inc
xchg
loop
mov
pushf
mov
mov
outsl
xchg
ud0
scas
pushl
mov
sub
pushf
popa
or
out
add
push
add
decl
xor
jns
stc
das
add
mov
ljmp
dec
pushf
sbb
and
sahf
push
rorl
xchg
sbb
add
xor
push
outsl
in
rcl
cli
test
aaa
mov
mov
push
cmp
ljmp
cmpsb
cmp
lods
cmp
and
jle
mov
cmp
fcomip
call
push
xor
pop
pop
push
cmp
lret
push
dec
push
stos
jns
shr
xor
ljmp
pop
and
shll
iret
mov
mov
decl
loopne
xchg
or
push
popa
xor
and
or
fs
testl
leave
pop
cmc
sub
mov
cld
push
cmpl
jne
adc
incl
add
andl
adc
cli
shll
ja
pop
ss
call
mov
add
push
and
dec
or
pushf
repnz
xchg
ljmp
call
into
mov
fadds
and
mov
mov
test
adc
imul
cmc
push
fisubs
bound
push
fstl
andl
ljmp
pop
sbb
pop
cli
mov
mov
push
outsb
in
pusha
insl
jmp
mov
or
nop
out
push
and
jb
sub
mov
dec
push
popa
jp
lds
cmp
ljmp
loopne
push
jns
out
fbstp
sbb
xor
call
lock
sbb
loop
inc
mov
cld
mov
push
mov
lcall
or
stos
inc
test
push
lods
ja
test
stos
mov
sbb
sub
loopne
sbb
sbb
decl
add
fs
dec
in
popl
xchg
shrl
jne
mov
push
addb
dec
bound
cs
xchg
scas
movsl
mov
sbb
xchg
aaa
mov
int3
mov
incl
les
mov
mov
fstpt
or
xchg
push
aas
nop
mov
fcomip
lcall
and
xchg
pop
sahf
and
or
sub
jmp
lcall
mov
and
scas
pop
popa
jmp
push
adc
stos
xchg
pushf
outsl
sub
mov
lods
mov
cld
call
xchg
or
xor
cmpsl
adc
into
les
mov
or
mov
xor
imul
inc
test
arpl
bound
jg
inc
pop
push
in
pushf
into
sbb
into
lock
cmp
ss
or
sar
xlat
jno
xchg
pop
scas
sti
mov
and
or
in
cmpsl
and
lods
cld
loopne
push
test
or
fisubrs
xchg
mov
xchg
adc
or
adc
dec
jnp
adc
mov
pop
cmp
lods
add
adc
inc
mov
xchg
jg
sahf
loop
pop
xlat
jp
add
repz
mov
fbstp
out
mov
data16
in
jg
dec
ffreep
ja
inc
push
and
fwait
clc
mov
fcomps
jnp
aam
pop
mov
ljmp
pop
pushf
test
leave
and
nop
lods
notl
aaa
pop
adc
test
fs
mov
aad
mov
push
stos
test
pusha
xchg
das
sub
jo
ret
out
in
scas
mov
decl
mulb
arpl
cmp
jbe
mov
fs
add
xchg
push
push
inc
mov
dec
stos
jge
cmp
inc
mov
push
xchg
daa
add
xchg
ja
dec
jmp
pop
xchg
jg
pushf
imul
out
call
roll
stos
or
inc
or
daa
test
in
dec
jbe
ret
daa
stc
mov
into
and
incl
js
popf
test
xor
jl
jecxz
inc
loope
and
adc
mov
xorb
rcrb
test
ficoml
sub
sti
sub
decl
rorb
int
loopne
fadds
aas
fmuls
lcall
cmp
pushf
jns
filds
mov
repz
adc
cli
loopne
negb
loope
enter
iret
and
inc
dec
push
call
mov
sub
fmull
ja
cld
incl
cmpb
xchg
sub
pop
inc
push
pop
pushf
pop
or
cmp
jmp
adc
mov
shll
pop
mov
mov
pop
mov
call
or
inc
mov
inc
fisubl
in
cli
mov
incl
cmpsb
dec
out
movsb
or
std
fbld
mov
dec
icebp
push
push
test
ljmp
outsb
inc
xchg
and
ret
add
inc
xor
jae
movsb
dec
mov
stc
sahf
outsb
test
cli
dec
stos
mov
gs
hlt
add
pop
xchg
int3
push
mov
cmp
and
lock
mov
and
mov
jo
fidivs
lods
and
mov
lahf
lcall
lret
roll
nop
std
loop
or
testl
dec
daa
filds
push
push
mov
add
cmp
ljmp
ss
repnz
mov
push
xchg
dec
ja
and
jg
or
xor
push
push
fdivl
ds
cmp
ljmp
sarl
cwtl
paddsw
sar
lret
push
mov
nop
xor
jb
pushl
gs
xor
arpl
dec
out
movsb
popl
xorl
fisubs
ljmp
gs
sbb
sahf
sub
xchg
leave
je
cmpsb
clc
pop
imul
mov
mov
cmpb
int
xchg
pop
arpl
sub
aad
ljmp
dec
push
push
adc
mov
inc
cmpsb
loopne
outsb
dec
js
lahf
mov
push
lock
jmp
and
enter
inc
repz
pop
rcl
out
or
call
je
aam
out
test
int
cmp
call
or
pop
inc
divb
add
ljmp
dec
xlat
lahf
daa
inc
std
lret
push
pop
in
dec
inc
add
incw
adc
jl
int
mov
push
mov
xchg
leave
and
das
incl
mov
push
push
pushf
cwtl
flds
xor
int
dec
icebp
jo
shr
sub
pushf
mov
decl
and
andl
stos
lods
mov
test
divb
adc
push
xor
pushl
mov
inc
or
sub
cmpsl
in
mov
push
xchg
sar
call
movsl
mov
arpl
pop
fld
add
outsb
fistps
gs
lods
jo
xor
jmp
das
fadds
movsl
outsl
adc
dec
lock
xchg
imul
aad
mov
adc
jg
fcomip
cwtl
mov
mov
cmp
jbe
data16
sub
lcall
inc
inc
jmp
xchg
add
push
adc
movsb
lods
mov
add
mov
push
lods
rorb
loopne
stos
addr16
int3
xchg
mov
xor
fisttpll
fcomip
nop
pop
ljmp
out
leave
add
cmpsb
xchg
mov
lret
sub
pushl
call
cmp
cltd
sbb
or
xchg
ret
mov
mov
jmp
pop
int3
sahf
sbb
lcall
ret
in
lret
pop
mov
adc
insb
adc
decl
jb
sarl
lcall
aad
sahf
inc
lahf
add
add
aas
mov
insb
sbb
jno
push
sbb
adc
in
or
call
jb
jae
push
pop
sbb
in
out
lcall
gs
fists
sar
decl
stc
mov
sbb
xorl
inc
mov
mov
loopne
pop
negl
lahf
inc
lahf
sbb
into
imul
fmul
hlt
xchg
test
xorb
mov
jns
pushf
dec
mov
mov
adc
in
loop
jbe
icebp
push
aas
cld
pop
xchg
fldl
call
add
loop
sahf
add
lcall
pop
xor
dec
xchg
push
mov
push
adc
push
pop
or
mov
xchg
push
mov
out
push
incl
cli
sbb
notb
dec
lret
test
or
xchg
xor
ljmp
cltd
mov
seto
sbb
sti
hlt
cltd
and
cmpsb
nop
mov
pop
out
lcall
xchg
or
testb
into
or
ret
jle
and
cmp
daa
xor
cwtl
aaa
xchg
sub
cmovno
lods
push
add
decl
ffreep
call
fcoml
out
mov
daa
scas
cmp
nop
fldcw
stos
sbb
stc
fwait
lret
cli
scas
addb
adc
es
repnz
enter
or
jns
ss
push
imul
mov
clc
es
sub
cmpsb
aad
jl
or
int
call
data16
pop
sbb
and
mov
faddl
mov
lods
test
call
adc
inc
nop
mov
lcall
inc
push
jo
dec
mov
pop
push
std
sbb
and
cld
loopne
aad
push
out
xchg
jns
decl
dec
pop
lcall
add
sub
call
int3
fs
jle
add
xor
pop
dec
xchg
xchg
clc
ret
xor
cmp
inc
or
lcall
jmp
sbb
mov
leave
dec
fistl
sbb
call
mov
lea
push
xchg
addr16
or
addr16
enter
mov
stos
sub
int
adc
das
dec
cmpsl
jbe
je
mov
jns
push
popf
xchg
out
mov
icebp
sbb
rol
cmc
in
out
dec
dec
push
mov
pushl
rcrb
or
jae
pop
lret
add
movsb
or
cld
lret
mull
mov
aaa
std
decl
cwtl
addr16
aas
cltd
roll
add
insb
imul
xor
xor
dec
dec
test
pusha
jmp
and
repnz
aaa
or
jmp
mov
out
inc
xor
scas
imul
aaa
sbb
loop
mov
movb
pop
xor
fiadds
movsb
push
out
out
test
dec
mov
mov
pop
mov
and
imul
push
jnp
arpl
test
decl
pop
cltd
jns
lcall
lcall
push
ret
cwtl
ljmp
xchg
fcmovnbe
mov
clc
outsb
mov
cmp
xchg
lret
and
mov
ficoml
pushl
in
sub
mov
jb
es
push
movsl
mov
test
push
into
insl
sbbb
cld
decl
adc
adc
das
sahf
imulb
mov
inc
or
mov
mov
pushl
mov
mov
fwait
push
sbbb
push
xchg
pop
jg
push
pop
inc
xrelease
ja
adc
sbb
cmp
and
push
sub
add
mov
lock
push
jno
cld
add
lcall
jp
pusha
mov
or
and
lahf
add
clc
sbb
push
mov
clc
xchg
mov
incl
pop
rorl
cmp
imul
push
inc
cmp
add
xchg
ljmp
mov
cmp
fisubrl
lcall
sbb
cmpsb
cwtl
stc
ds
and
es
icebp
in
push
icebp
sub
fwait
in
out
shlb
rcl
jb
inc
outsl
xor
inc
lock
lods
mov
push
push
decl
push
xchg
push
and
movsl
fs
addr16
ret
and
cmp
mov
adc
outsb
stc
cmpsb
and
aam
pop
add
push
xor
shrb
daa
hlt
sub
loop
and
pushl
out
sti
scas
arpl
xor
test
push
or
or
adc
aas
or
mov
sub
outsl
xchg
mov
movsl
pop
sub
daa
jg
movsl
sub
pop
aad
pop
in
jmp
pushl
jo
das
adc
andb
call
lods
mov
mov
outsl
inc
mov
std
icebp
mov
dec
fisttpl
sti
enter
mov
popf
jns
das
push
std
fildll
adcl
and
out
testl
fists
mov
push
sub
imul
scas
loope
inc
push
jmp
sub
fs
call
stc
in
out
fistpll
lret
sbb
call
fsubrs
jp
push
int3
fistpll
lods
lret
pop
inc
jbe
push
nopl
outsb
dec
mov
gs
cmp
mov
jo
and
mov
ljmp
outsb
push
jmp
test
subl
pop
mov
stos
call
pop
mov
fnstsw
pushf
xor
out
adc
inc
ja
mov
mov
mov
clc
cmpsb
jmp
mov
xchg
jg
jp
aam
cmpsl
fs
pushf
adc
mov
mov
movsl
mov
sbb
mov
jb
mov
cli
cmp
cmp
mov
test
sub
ss
ja
sti
xlat
mov
or
cmp
mov
jge
sahf
adc
cmp
xor
push
test
lret
aaa
inc
inc
bound
movsl
adc
fildll
push
in
inc
and
orb
dec
lahf
push
and
or
mull
jnp
mov
dec
aam
sbb
inc
push
adc
jmp
sbb
sbb
mov
mov
cwtl
les
pushl
xlat
cmpsb
and
das
push
jb
sbb
xor
sar
cli
lcall
int
movl
popa
jns
adc
ficompl
cmpsl
in
or
ljmp
mov
cmpsl
or
or
fldl
std
test
mov
lods
xchg
movsl
add
dec
jg
arpl
loop
and
sub
pop
aam
jg
fs
int
add
inc
pop
stos
add
call
adc
jbe
sbb
stos
mov
sahf
test
pop
jecxz
inc
fadds
ljmp
mov
leave
in
mov
mov
lret
cld
popa
movsl
mov
jg
mov
out
fcmove
jecxz
adc
ja
pop
fucomi
sub
cld
insb
cli
and
std
xorl
cwtl
jl
xor
jmp
jg
adc
inc
pop
or
dec
in
scas
and
push
repnz
add
call
std
mov
pop
pop
push
ja
movsb
jl
dec
std
mov
test
inc
push
call
fistpll
xor
repnz
or
adc
ret
pop
mov
insl
out
sub
push
js
loope
popf
jbe
xchg
push
ja
scas
adc
fwait
push
in
subb
gs
inc
fsubrl
mov
jl
xor
push
cmp
mov
push
or
icebp
call
lcall
clc
push
cmp
inc
add
movsb
adc
dec
xchg
jb
xchg
push
pop
int3
scas
test
lock
dec
es
stos
dec
lcall
les
mov
cmpsl
aaa
push
mov
addr16
cltd
dec
repnz
jnp
push
and
pop
sbb
mov
dec
gs
mov
pop
notb
lcall
ret
jecxz
xchg
dec
add
push
movsb
imul
xchg
xor
out
inc
cmp
pop
add
add
iret
out
mov
js
inc
mov
scas
cmpsl
popa
adc
xor
sub
xor
mov
sbb
test
mov
mulb
daa
das
inc
lcall
icebp
pop
hlt
insl
push
or
cmpsb
aas
add
and
push
xchg
movsb
jo
inc
mov
and
inc
xor
sub
mov
das
push
fs
shl
sub
mov
into
fdivrs
inc
lcall
leave
rcr
pushf
xor
mov
insl
pop
pop
cs
insb
sub
xchg
ljmp
inc
sahf
and
adc
insb
fimull
xlat
pop
leave
mov
and
mov
es
pushl
pop
hlt
mov
adc
sarl
out
inc
jo
jge
jecxz
std
clc
mov
cmp
cld
sahf
fnstenv
xor
inc
and
push
clc
mov
adc
cs
lods
fiaddl
cli
int3
daa
movq
xchg
xchg
loop
mov
mov
je
incb
fcmovnbe
pop
lds
xor
push
bound
mov
aaa
jg
out
pushl
mul
inc
mov
fsub
fld
push
shlb
les
or
jb
xchg
insl
setb
cwtl
ljmp
xchg
stos
adc
in
repz
cwtl
ja
mov
lcall
inc
testb
mov
stc
adc
adc
inc
sub
push
sbb
loopne
ret
jmp
sbb
adc
into
js
jge
adc
ret
repnz
enter
cmp
jo
jg
lea
adcl
mov
lock
dec
adc
inc
je
cmp
dec
lcall
mov
xor
popa
jbe
int3
inc
sar
lcall
les
add
pop
ljmp
outsb
mov
imul
pushf
je
push
pop
and
pop
shrl
ljmp
xchg
hlt
sbb
inc
mov
push
sub
pop
push
sub
lcall
cld
mov
or
and
pushf
mov
iret
rcl
aas
mov
mov
stos
in
and
xchg
sbb
fdivl
in
xchg
dec
pop
and
clc
jmp
je
adc
sub
test
lret
lea
dec
sbb
mov
xchg
mov
shl
jmp
lods
pop
int
and
xor
ja
jns
mov
mov
decl
popf
dec
pop
fadds
mov
int
push
adc
inc
loop
cld
add
fwait
in
es
out
lcall
or
int3
dec
jno
xchg
add
mov
mov
dec
lret
repz
jbe
leave
leave
push
call
cld
int3
mov
inc
mov
clc
cmp
ljmp
cmpsl
lock
dec
lea
pusha
call
jnp
or
jmp
cmpsb
mov
daa
imul
xor
test
xor
sbb
ds
lods
sbb
and
fildl
inc
popf
pop
add
pop
test
addl
sub
mov
loope
push
pusha
int3
fcomps
ret
fldt
add
sahf
clc
pop
jmp
adc
call
pop
xchg
pop
es
incl
add
inc
mov
add
leave
push
and
out
icebp
les
aam
jo
jg
mov
add
stos
fimull
inc
xor
mov
pop
mov
push
push
inc
mov
push
inc
cmp
imul
xor
sub
arpl
loopne
pushl
pop
mov
pop
ror
imul
popf
ja
dec
push
mov
jmp
xchg
cs
push
outsl
outsl
lret
adcb
cwtl
popf
lds
arpl
sti
jb
mov
jmp
dec
je
pop
push
pop
push
rcr
inc
mov
cmpb
or
clc
movsl
std
jge
lahf
jns
push
mov
or
call
scas
push
in
lret
dec
outsl
sbb
sbb
sub
pop
and
fbld
dec
add
sarb
pushl
in
sbb
mov
loopne
jecxz
ds
ja
incl
cld
fwait
pop
clc
nop
rolb
sbb
jno
das
push
mov
hlt
fstl
loop
cwtl
mov
nop
clc
or
mov
push
aam
push
nop
enter
data16
outsb
into
jmp
incl
xor
push
rcrl
sub
mov
stos
sub
inc
addl
jecxz
data16
into
adc
call
push
mov
cmc
mov
dec
jecxz
cmpsl
mov
push
mov
in
mov
pop
adc
fdivrs
int3
push
stos
mov
fwait
pop
ucomiss
push
fdivl
fcomip
lcall
lock
mov
mov
js
mov
mov
fcomip
movsl
cmp
push
pusha
sti
and
shrl
dec
std
pusha
sub
dec
cmc
xor
push
fmulp
push
rcr
pop
jp
jmp
pop
hlt
or
adc
jmp
aad
mov
outsl
pop
ja
xlat
jbe
jo
pop
mov
adcl
mov
cmp
xor
ds
rclb
mov
dec
enter
decl
mov
fcompl
and
xchg
fs
fisubrs
jne
xlat
mov
push
sti
cmc
lret
loopne
or
incl
pop
sti
js
sbb
push
fsub
inc
push
lock
hlt
sub
sub
jnp
fidivl
lcall
cmpsl
out
cmpsb
data16
push
ffree
stos
rol
cli
loope
mov
fstl
pushl
fisttpll
adc
fmuls
popf
popf
test
sahf
nop
inc
jbe
lock
cmp
movsb
data16
mov
movsb
adc
jle
cmp
imul
bound
mov
scas
mov
stos
mov
icebp
lock
int
push
push
jb
loope
sub
test
call
and
xchg
mov
sbb
sbb
popf
leave
xchg
mov
pushf
xlat
stos
loopne
rorb
mov
cmp
lock
decl
sbb
add
aaa
sbb
movsl
jo
mov
xor
decl
cmp
fisttpll
repnz
dec
pop
or
cmp
and
sub
jg
cld
inc
mov
mov
sahf
jbe
and
ljmp
test
shl
xor
mov
dec
fbstp
es
cmp
inc
pop
insb
cld
es
mov
rcll
orb
out
loope
sub
aad
mov
roll
mov
inc
xchg
xor
scas
scas
rcl
scas
mov
dec
test
inc
ds
out
mov
cmpsb
push
stos
sar
jmp
mov
jnp
aaa
dec
idivb
clc
fwait
insl
fwait
sbb
mov
in
loop
jg
jle
pop
mov
sti
sub
fcoms
mov
sbb
jl
push
out
mov
pushl
movsl
idiv
jne
mov
daa
addr16
cmpsl
pop
mov
jne
idivb
jg
decl
sub
cmp
xchg
xchg
pop
xor
push
mov
push
add
cs
sub
outsb
and
enter
sub
xor
inc
cmpsb
fs
pushl
add
jp
jmp
dec
fiaddl
imul
lds
and
ljmp
mov
andl
sub
cmp
int3
lahf
mov
cld
sbb
lea
testb
outsb
xchg
iret
js
or
loope
leave
addb
mov
incl
sub
sbb
test
jmp
push
or
push
ss
mov
aad
call
call
jno
arpl
outsl
mov
cmp
sub
mov
call
add
fidivrs
stos
ljmp
fisubrs
inc
jmp
mov
shrb
loop
loop
lret
clc
push
add
pop
inc
sbb
mov
or
sub
outsl
ret
mov
rcrl
andb
popf
pusha
pop
mov
xor
incl
imul
adc
xlat
cltd
aaa
pop
lea
lahf
aam
add
jg
pop
jmp
dec
loop
sbb
dec
inc
fsubs
out
enter
idiv
mov
sbb
jmp
lea
pop
hlt
decl
inc
or
adc
inc
xor
mov
in
add
dec
mov
aad
jmp
push
ss
decl
pop
push
pop
xor
iret
pop
fidivrl
mov
mov
mov
jmp
mov
leave
push
cmp
std
cli
dec
mov
mov
iret
push
data16
mov
push
ja
jb
lods
adc
decl
xchg
fxam
adc
jle
mov
outsl
sti
or
xchg
fsubrs
es
pop
and
inc
decl
push
test
and
shrl
inc
stc
xor
sub
pop
call
push
xchg
mov
sarl
in
pop
inc
push
sub
lods
scas
ret
and
pushl
lcall
jne
and
sbb
leave
inc
push
mov
fnstenv
fildll
call
call
lahf
sbb
xor
das
push
hlt
adc
je
fmull
lods
mov
inc
fidivrl
ljmp
call
orb
fcmovnbe
test
mov
aaa
jmp
xor
fcmovnb
cltd
shll
neg
jle
mov
es
aam
jbe
dec
sub
call
stos
out
ljmp
rcrl
cmp
mov
cmp
lcall
decl
fisubl
aas
test
inc
rcrb
repz
sahf
ret
incl
dec
inc
xor
pop
jns
cltd
mov
lret
xor
stc
inc
push
mov
cli
sbb
push
ja
stc
call
dec
in
xchg
jl
into
in
mov
mov
in
insl
scas
dec
add
add
sarl
movsb
stos
pop
xor
ljmp
add
push
inc
clc
push
lahf
lret
xchg
test
out
push
inc
adc
xlat
jle
jmp
jmp
and
cmp
lret
jno
stc
add
ljmp
lock
jl
fs
add
movb
cmp
out
insl
ljmp
add
cli
imul
xor
es
out
imul
xlat
sbb
push
sub
inc
pop
mov
or
or
scas
outsb
aas
xchg
jae
xchg
lock
lods
call
je
call
std
decl
xchg
fbstp
sbb
sahf
js
jecxz
or
pop
jg
call
mov
dec
lahf
stos
out
xor
stos
inc
mov
pop
ja
ret
notl
pushl
test
mov
push
xchg
test
push
adc
andb
pop
xchg
mov
mov
cli
xlat
movsl
jbe
xchg
arpl
dec
mov
mov
xor
jne
out
jmp
push
out
sahf
cmp
std
pop
arpl
movl
cltd
aam
decl
call
xchg
insl
push
mov
cmp
adc
xchg
ret
repnz
xchg
clc
ljmp
shll
dec
ret
pop
in
sub
push
inc
in
cmp
pushf
arpl
mov
inc
inc
ljmp
cmp
test
out
push
lahf
in
movsl
add
adcl
mov
repz
aam
mov
push
movsb
or
jg
jmp
bound
test
mov
js
cmp
and
fisubs
xchg
lods
std
xor
ror
pop
lds
daa
mov
sbb
jp
dec
insl
pop
mov
pushl
cltd
lods
arpl
mov
scas
mov
mov
and
ljmp
sbb
mov
jmp
ljmp
out
xchg
or
sbb
mov
or
es
pop
shrb
aaa
dec
pusha
sbb
xor
enter
dec
repz
ljmp
scas
lods
fcoms
cmp
inc
loop
jle
sub
outsl
ss
in
mov
mov
mov
xor
push
out
dec
mov
xor
or
pop
and
mov
das
mov
push
shrb
out
mov
lret
into
mov
xlat
or
pushl
testl
icebp
mov
imull
mov
les
xor
push
mov
aaa
jle
inc
adc
les
dec
add
mov
incl
in
jge
sbb
cwtl
adc
push
xchg
call
or
dec
jp
mov
mov
and
leave
lret
jl
sub
aad
movsb
lret
jg
mov
ljmp
sbb
dec
sub
add
fbld
push
cmp
sub
push
adc
push
pop
cwtl
arpl
xchg
call
js
mov
ja
cwtl
and
incl
jno
data16
adc
inc
aaa
pop
mov
add
decl
jmp
das
cmpsb
or
push
shrb
movsb
add
xlat
sbb
and
call
out
cmp
test
sbb
les
enter
das
aam
sub
mov
adc
loopne
ss
xchg
pop
xchg
arpl
mov
push
jle
fisubrl
cmp
jmp
std
pop
sub
and
lret
add
xchg
insb
pop
dec
push
repz
ret
clc
fidivs
bound
add
cmc
inc
movsl
das
cmp
pop
ret
sbb
jb
mov
add
repz
out
fimuls
add
cmpsb
mov
cmp
mov
inc
jb
cmpsl
lods
pop
lods
pop
cmpsb
sbb
scas
push
dec
daa
addb
jmp
aam
fcomip
decl
dec
inc
scas
add
scas
pop
xor
gs
pushf
adc
bound
decl
pop
out
test
adc
xchg
or
loop
imul
pop
stos
mov
ljmp
mov
inc
div
xchg
adc
inc
adc
cltd
xchg
sbb
adc
lret
mov
pushl
mov
or
sub
divl
jnp
lods
push
dec
iret
lcall
ror
out
push
lcall
test
insb
scas
fdivl
sbb
pushl
out
jns
adc
outsb
sub
dec
mov
xchg
leave
mov
iret
int
sti
push
lret
call
rcr
or
mov
sbb
mov
aam
push
sbb
mov
bound
test
das
sar
push
dec
add
mov
out
push
mov
jg
in
adc
cld
fcmove
popf
jmp
pop
aam
sahf
out
and
or
scas
jbe
jge
sbb
pushl
in
mov
inc
test
addr16
arpl
dec
and
incl
loopne
in
popf
mov
cmp
xor
mov
and
imul
jnp
decl
add
lea
and
inc
aad
sbb
sbbb
bound
sahf
and
lcall
test
sbb
push
fcompl
and
iret
fcmovnb
clc
ret
leave
fsubrl
fildl
ljmp
mov
fyl2x
das
out
jae
or
xor
xchg
sub
mov
call
push
mov
lret
notb
out
dec
or
or
mov
out
and
adc
lods
fstp
addr16
or
mov
pop
decl
loop
movsb
testl
or
inc
insb
adc
sub
stos
loope
or
jg
jge
scas
push
adc
cmc
mov
inc
xor
inc
adc
clc
mov
jb
push
ja
call
in
add
fisubrl
mov
scas
clc
fildll
hlt
sub
je
divb
test
shrb
scas
fisttps
jns
ja
in
out
nop
in
loop
fistpl
inc
xchg
or
roll
cmp
lock
pop
xchg
fmull
pop
inc
xchg
mov
mov
addr16
inc
push
mov
call
jg
dec
xor
aam
sarl
pop
into
data16
add
and
sub
pushl
add
push
add
mov
mov
jg
mov
mov
mov
leave
mov
decl
or
icebp
mov
lret
test
push
or
or
lcall
jecxz
mov
jp
adc
jecxz
gs
ds
lcall
jbe
mov
mov
mov
xor
mov
push
fs
test
inc
loope
pop
pop
mov
stos
ror
dec
jno
pop
arpl
mov
jbe
xchg
mov
push
push
insl
ljmp
cmp
lods
xchg
inc
xor
das
cmc
cmpsl
cmp
into
cmc
ss
add
jecxz
jmp
add
push
push
or
mov
add
mov
pop
sbb
outsb
enter
or
loop
or
sub
xor
out
cli
decl
jecxz
cli
fdivl
movsb
cld
push
aas
fists
mov
decl
inc
xor
int3
mov
and
test
stos
push
adc
sub
decb
fwait
mov
adc
ljmp
shll
test
mov
mov
xchg
int
dec
ljmp
faddl
xchg
stos
js
push
ss
cli
neg
rolb
imul
lock
sbb
inc
inc
sub
dec
imul
mov
jmp
xor
sti
rorb
sbb
push
mov
jns
mov
cld
xchg
std
or
push
push
in
jmp
sub
xchg
pop
test
xchg
jmp
dec
cs
dec
mov
rcll
es
mov
fistpl
cmp
movsl
cmp
aad
incl
mov
cs
dec
jb
loope
and
addr16
fcomps
inc
add
call
ds
aas
lea
jns
lahf
cmp
xchg
in
mov
mov
faddl
imul
push
ds
add
fbstp
aam
repz
adc
call
jb
or
mov
fldl
repnz
jl
mov
xor
lcall
lahf
jne
jae
ret
int3
ror
lds
movsl
pop
icebp
imul
mov
mov
cwtl
lea
mov
push
rcr
lds
stos
push
xchg
ja
es
pushl
mov
and
cltd
jae
xchg
int
addl
cmp
test
sub
arpl
and
fwait
or
ljmp
push
xchg
ficoms
int3
fiadds
pop
lds
js
add
xchg
not
sbb
pusha
push
xchg
icebp
mov
fisttps
ljmp
testl
xchg
jo
insb
pop
sub
inc
cltd
test
lea
push
and
or
xchg
sub
inc
data16
jmp
and
push
inc
add
insb
push
jmp
mov
jg
push
mov
les
pop
add
or
test
cli
incl
enter
lret
and
into
push
sub
mov
jp
sarb
and
cmpsl
bound
ret
cmp
or
arpl
lock
decl
in
je
ss
outsl
push
mov
xchg
repnz
out
pop
push
enter
andl
and
adc
arpl
mov
xor
clc
mov
ja
test
ljmp
ljmp
or
cmp
jg
jecxz
fwait
or
push
lods
icebp
add
mov
xor
push
jns
jmp
jge
inc
sub
add
addr16
std
lock
xor
sahf
xchg
sbb
or
xor
ljmp
ja
jb
cmp
mov
subl
or
ficoml
aaa
jne
jbe
inc
cld
cmp
ret
lret
xchg
push
lcall
nop
stc
lea
cmp
sti
lret
lea
sbbl
out
cmp
icebp
lahf
pop
mov
dec
movsb
xchg
subl
push
repz
add
int
fcomip
call
lahf
cmpsl
inc
jnp
inc
aad
iret
push
xor
jnp
enter
mov
loop
or
xchg
cli
pop
ret
fwait
dec
sub
decl
xchg
je
adc
inc
mov
and
ret
stos
cmp
cld
fistl
movsl
and
jg
mov
aas
mov
into
sbbl
call
mov
sbbl
push
rolb
mov
or
incl
add
xchg
mov
mov
sub
xchg
adc
sbb
loopne
ljmp
sbb
xlat
cli
fnsave
xchg
dec
or
sbb
inc
adc
nop
test
aaa
cmpsb
pop
sbb
lahf
js
hlt
push
je
mov
jb
mov
push
jl
subl
gs
sbb
and
aaa
loopne
jne
dec
imul
jne
ljmp
add
lret
flds
or
adc
xor
jmp
loop
scas
fcmovu
pop
mov
enter
xchg
adc
lcall
xor
add
fstl
inc
movsb
push
mov
jg
sbb
scas
clc
pop
outsl
dec
adc
shrb
lcall
xchg
mov
scas
ljmp
jbe
mov
ljmp
pop
std
lds
sbb
push
ret
shlb
lcall
sbbb
xchg
lcall
lods
push
iret
in
cltd
scas
jmp
mov
scas
clc
scas
cli
in
test
aaa
push
test
cmp
cmp
and
icebp
fisubl
xor
in
std
imul
fwait
adc
add
test
rcrb
or
xchg
test
jp
call
aas
test
fldcw
out
mull
push
mov
dec
cs
fistps
jno
pushf
dec
mov
daa
test
pop
sbb
inc
pop
pop
inc
jg
mov
cmp
fs
subb
dec
xchg
rcll
test
jno
popa
sub
fimuls
test
push
lret
dec
in
pop
mov
cmp
and
add
jg
push
and
sti
cmp
fidivrl
jbe
mov
fucomi
push
pop
pop
sbb
sbb
leave
jne
roll
push
adc
dec
lock
aas
std
popf
lods
add
cmp
fwait
ror
xorl
push
cld
out
mov
out
popa
cmpsl
mov
dec
std
stos
pop
lret
idiv
jmp
adc
rcrl
negl
leave
es
pop
cmp
and
mov
fcoml
pop
cs
xchg
ljmp
cmc
sub
mov
push
jecxz
aaa
sti
and
xor
mov
dec
sub
lret
or
pushl
in
and
cmc
inc
lods
jns
mov
mov
xchg
push
test
jle
cs
mov
call
xor
xor
clc
clc
push
lock
cwtl
fsubr
adc
decl
mov
aaa
mov
mov
scas
pop
sub
mov
inc
mov
repz
adc
pop
pushf
setns
mov
ret
js
sub
imul
sub
inc
les
lahf
mov
and
adcb
cmpsb
add
pop
insb
ret
inc
jmp
xchg
jbe
loopne
lcall
push
mov
mov
mov
mov
cmp
aas
push
gs
jmp
mov
or
dec
or
nop
sar
mov
pop
sahf
mov
dec
sahf
cmc
add
mov
pop
popf
inc
xchg
mov
pmullw
movsl
nop
in
xchg
out
sti
lret
scas
shll
pop
mov
subl
pushf
jmp
jns
incl
sahf
cmp
push
mov
jecxz
iret
mov
lret
movsb
repnz
std
and
add
pop
gs
repz
jb
and
daa
shlb
out
jb
mov
sahf
add
sbb
decl
lret
and
loope
in
add
add
cs
fcomps
cmp
push
cld
lcall
test
jle
enter
out
xor
jbe
ffreep
adc
pop
or
rcl
sarl
cld
cmpsl
dec
pop
cld
inc
and
sub
idiv
decl
adc
cmc
dec
lds
ljmp
adc
cmc
mov
xor
call
jb
out
jp
xchg
mov
pop
repnz
add
inc
lods
dec
and
mov
test
or
shl
rclb
clc
fucomi
mov
pop
fmuls
jmp
stos
enter
jns
repnz
inc
ja
add
and
push
and
incl
or
jp
punpcklwd
movsb
in
jmp
xchg
dec
or
mov
pop
call
loopne
aas
data16
push
lods
out
hlt
pop
push
sahf
adc
sbb
xlat
into
iret
sub
jmp
sbbb
push
mov
insb
xchg
repz
mov
je
push
je
pop
adc
sbb
aam
dec
jo
and
test
push
lret
pop
popf
insl
imul
aaa
mov
lock
jg
loop
lret
sbb
pop
aaa
scas
mov
mov
mov
outsl
in
adc
fmuls
push
push
xor
cli
pop
jns
fdivrl
xchg
test
mov
jne
pop
and
stos
and
aad
jle
negb
push
popf
out
jge
loope
or
sbb
adc
std
lahf
or
mov
outsl
cmc
arpl
dec
mov
incl
fsubs
loopne
jb
pop
xchg
dec
int
call
jmp
mov
shrb
pop
dec
mov
mov
in
adc
or
adc
loop
popf
dec
sub
dec
xor
mov
fistpl
inc
jae
mov
pop
cmp
jl
xor
xorl
in
mov
mov
repnz
xchg
xor
js
cmp
inc
and
loopne
jp
push
outsl
mov
inc
ficompl
cmp
mov
cmp
or
push
mov
daa
xchg
fiadds
xchg
push
pushf
jp
xor
int3
loopne
lahf
das
cmp
and
decl
jg
jo
dec
loope
sub
lret
pop
mov
js
or
div
ljmp
lock
mov
int
ret
mov
sbb
sbb
fbstp
xchg
and
data16
or
mov
loopne
call
cmpsb
pop
decl
sub
or
pop
cmpsl
or
cmp
mov
sbb
lret
sub
repnz
jecxz
repnz
add
inc
jl
xchg
lods
and
dec
repz
push
out
lock
addr16
stos
ja
or
ljmp
jecxz
stos
push
movsb
out
in
es
out
or
cld
cltd
in
xchg
push
jmp
in
and
pop
imul
ja
je
sub
sbb
scas
jge
or
stc
dec
mov
ljmp
xchg
xor
jne
aaa
cli
pushf
das
cli
lods
and
mov
jg
and
stc
outsb
push
lods
sahf
pop
sti
cld
out
repnz
cs
jge
cmp
pop
clc
dec
loope
jg
sub
addr16
in
adc
jl
sub
ret
sub
mov
mov
lock
pop
dec
ss
mov
mov
clc
ljmp
call
into
cwtl
mov
addr16
push
dec
icebp
es
ljmp
inc
lcall
cmpsl
loopne
sub
int3
jg
pop
push
xor
mov
sbb
jmp
add
pop
aam
dec
and
xchg
dec
xchg
adc
cld
stos
ljmp
sar
mov
lock
xchg
lahf
push
es
jns
sub
mov
cmp
pop
scas
xor
xchg
xor
push
shlb
cmp
mov
push
leave
jp
fwait
das
or
fs
mov
inc
and
adc
ljmp
lods
sub
xor
shlb
push
incl
inc
inc
inc
pop
or
mov
sub
rcr
mov
adc
fs
cmp
ljmp
ljmp
push
adc
pop
xor
pop
out
xchg
mov
aaa
int3
nop
xchg
sbb
stos
sbb
cmpsb
scas
jae
or
lods
mov
pop
imul
call
inc
pop
xchg
rcrb
data16
cmp
xor
js
pop
sbb
mov
sbb
js
jmp
pusha
add
mov
mov
stos
gs
push
sub
jmp
and
decl
bound
into
cmc
mov
adc
xchg
fwait
adc
lret
sbbl
cmp
sahf
icebp
add
sahf
pushf
imul
jnp
cmp
cmp
pop
push
aaa
and
jg
aas
sarl
stc
push
jns
sti
in
sbb
mov
or
inc
imull
lcall
push
inc
jae
enter
test
daa
fdivl
jle
scas
pop
lods
mov
in
and
jmp
add
xor
mov
xchg
cmp
xor
cmp
outsl
cld
movsb
xor
lret
je
out
ljmp
mov
jb
adc
das
es
ss
sub
xor
lds
lcall
fidivrl
mov
push
cld
pop
je
dec
test
std
sub
punpckldq
test
test
in
jnp
sti
and
inc
add
sub
inc
push
in
mov
cmp
ds
mov
mov
aaa
mov
ljmp
lea
or
adc
jo
ljmp
and
cmp
sbb
lahf
dec
shrb
pop
sbb
mov
sbb
imul
mov
dec
sub
cli
jnp
shr
aaa
inc
testl
mov
mov
lods
push
sar
fstpt
cs
shrl
push
push
cwtl
fisubl
sub
ja
out
fcomip
or
lret
mov
xchg
movsl
xor
call
lcall
jmp
fcom
loopne
fsubrl
add
in
dec
adc
out
jnp
enter
cmp
mov
jnp
jp
icebp
aaa
xchg
loope
rcll
mov
mov
loope
push
jg
test
out
div
adc
dec
insb
adc
adc
std
cmc
xchg
pop
aaa
rcr
enter
dec
dec
fistps
inc
out
cs
inc
sti
lcall
xchg
shll
mov
mov
mov
inc
outsb
inc
mov
jp
push
add
cltd
add
mov
pop
ljmp
inc
inc
dec
fmuls
push
push
sub
pop
inc
push
mov
ljmp
imul
lcall
mov
fisubrl
xchg
aam
push
fsub
dec
popa
dec
and
ja
lods
loopne
leave
mov
jle
loopw,pt
test
ret
faddp
jae
in
loop
ret
in
aaa
lahf
dec
jnp
adc
stos
lcall
push
inc
popa
mov
xor
dec
sbb
fxch
sub
push
or
ret
cmc
mov
lret
add
stc
in
and
out
xor
scas
data16
mov
push
jle
mov
out
push
xchg
xchg
xchg
push
ficompl
sub
mov
nop
pop
add
push
insl
bound
fadds
stc
pushf
mov
jmp
mov
in
dec
sub
cmpsl
jge
cmp
mov
sbb
cmp
enter
sbbb
xorb
mov
jge
daa
pushf
icebp
or
cld
xor
xchg
inc
jmp
adc
rcrb
mov
jmp
sbb
sub
das
bound
lods
popa
fdivrl
sbb
lcall
and
ret
in
divps
ja
sahf
jbe
rcrb
sub
incl
and
sar
xchg
add
lods
repz
pop
or
xor
pop
pop
dec
mov
movsb
sbb
call
mov
out
pop
dec
lock
add
push
xchg
stos
lahf
cmp
mov
push
gs
push
inc
sub
loopne
mov
mov
add
push
pop
adc
sbb
jb
pop
inc
call
std
hlt
or
in
push
xchg
cmp
pop
mov
icebp
lea
mov
mov
int
xor
add
mov
push
push
outsb
mov
shrl
ljmp
inc
push
int3
popf
pop
sar
mov
test
mov
mov
sub
push
lcall
pop
icebp
push
fists
pop
pop
loopne
stos
and
aad
movsl
inc
pushf
add
xor
repz
mov
scas
decl
lret
xchg
loopne
insb
push
cmp
jmp
filds
ds
stc
popa
mov
ljmp
push
cld
fcomps
sbb
sbb
imul
push
sub
push
lcall
and
jp
adc
adc
push
adc
pop
lds
pusha
push
pop
pop
jnp
fcomip
mov
inc
jno
and
mov
pop
loopne
sub
pop
mov
call
sbb
xor
push
out
pop
cli
rclb
lods
mov
cmp
dec
or
loopne
dec
into
xor
stos
std
dec
repnz
jne
clc
jecxz
fs
insb
push
sub
mov
dec
stos
int
mov
leave
nop
jae
cmp
cmp
xchg
addr16
xchg
cltd
add
fdivs
xor
jmp
fcmovb
mov
adc
ret
div
xlat
push
test
cli
imul
lret
mov
movsl
ljmp
and
loop
mov
xor
sbb
or
repz
sub
sub
incl
push
loop
inc
sub
sahf
inc
push
jbe
and
xchg
sub
mov
call
and
cld
addr16
mov
push
jmp
mov
out
je
xchg
in
lcall
jbe
mov
or
adc
sbb
es
add
ds
bound
jge
push
add
mov
mov
stc
cmp
leave
push
pushf
pop
push
mov
lahf
push
pop
mov
mov
dec
xor
jp
incl
das
mov
mov
hlt
ds
mov
mov
movsl
cmp
pop
testb
mov
push
xchg
dec
fcoms
add
in
mov
mov
add
insb
jecxz
call
shll
cmp
je
aad
lea
xchg
dec
adc
cli
jp
decl
js
push
xchg
xorl
mov
lods
dec
jbe
or
xor
xchg
and
call
adc
cwtl
ficoml
mov
aad
mov
mov
test
lcall
jmp
icebp
dec
je
and
or
jl
enter
ds
orb
shlb
inc
fcoms
fs
lret
cmp
add
cmp
lock
xchg
je
jecxz
cli
call
xchg
ja
pusha
pop
mov
xor
xchg
sub
dec
and
cmp
incl
aam
aam
enter
jnp
mov
mov
jg
sbb
and
stos
loopne
fcmovnb
jp
mov
lds
adc
call
scas
push
daa
add
mov
jns
inc
daa
push
in
adc
inc
loope
jp
push
push
adc
jbe
mov
dec
push
je
out
xlat
push
into
add
dec
test
xchg
jb
loop
decl
lods
jg
xchg
aas
adc
adc
pop
leave
clc
push
dec
fisubl
pop
pop
xchg
out
incl
xlat
mov
lret
repnz
jge
sti
mov
lahf
or
ljmp
fldt
test
je
pop
push
fs
aaa
push
cmp
pminub
pop
cmc
cmp
je,pn
cmpsb
adc
xchg
adc
xor
pop
cmp
imull
adc
ljmp
push
or
scas
call
insl
cltd
cmp
fdivrs
loope
das
dec
dec
decb
sar
cmpsb
dec
xchg
mov
mov
jmp
daa
inc
out
adc
dec
fisubrs
jg
call
lcall
cmp
jge
scas
mov
dec
xchg
push
test
aaa
jg
test
lret
fsubrl
fneni(8087
pop
sub
cmp
ret
lcall
lahf
adc
clc
pop
xchg
inc
cmpsb
xor
lcall
lcall
adc
hlt
sbb
inc
or
pop
shl
aas
loop
ds
or
xor
nop
repnz
pop
inc
test
shll
cmp
and
pushf
jp
mov
andb
inc
sbb
jg
test
divb
cmc
or
pop
testl
pushf
mov
movsl
loope
jnp
pop
loopne
adc
and
adc
pop
aaa
xor
test
cmpsb
jmp
int
push
add
pop
pusha
fiadds
scas
push
xchg
sahf
and
ljmp
xchg
xchg
std
lds
jno
inc
icebp
nop
lock
xor
mov
into
fsincos
xor
pop
lcall
sub
add
fisubrl
aaa
out
insl
into
xor
arpl
xchg
dec
push
mov
push
push
mov
inc
mov
mov
cmp
pushl
jno
js
push
outsl
mov
cmpsb
inc
data16
fists
jge
mov
das
fcomp
mov
mov
sbb
adc
push
mov
mov
test
jno
lock
pushl
pop
sub
xchg
arpl
jecxz
push
or
sub
pushf
in
imul
pop
dec
mov
adc
cli
push
mov
cmc
ds
outsl
cmpsl
sbb
sbb
sbb
mov
int3
outsl
clc
ljmp
aad
jmp
xor
xchg
mov
and
popf
sahf
add
mov
lcall
popa
std
pop
insl
pop
adc
pop
adc
clc
scas
ds
lahf
imul
hlt
fimull
jne
xchg
xchg
push
push
pop
lock
dec
jbe
rol
fbstp
pop
data16
sub
call
in
lea
pop
pop
xchg
mov
nop
and
sub
nop
inc
aaa
inc
xchg
rcr
movl
incl
or
adc
and
ja
dec
popf
mov
test
sub
incl
mov
cmp
jb
lds
adc
cmpsb
and
mov
ret
xor
jecxz
call
clc
mov
xchg
insl
call
jp
insl
test
jae
mov
jl
pop
sbb
push
add
push
jge
inc
pop
dec
out
shlb
gs
pusha
and
cld
dec
scas
clc
jmp
dec
or
pop
iret
adc
push
sub
movsb
pushl
sbb
mov
push
jbe
testb
lods
ret
dec
jl
pop
nop
ljmp
ss
mov
inc
sbb
in
xchg
mov
fcomp
pop
decl
push
ss
push
pop
sarl
icebp
aaa
lahf
add
jl
dec
shlb
mov
cld
lcall
popa
xor
sbb
mov
and
call
push
cwtl
push
adc
adc
loopne
lds
fimuls
lock
in
flds
call
push
mov
lret
fists
aas
lds
and
nop
scas
xor
dec
lock
decl
jle
pop
test
cmp
mov
mov
and
popl
mov
jp
xor
jb
mov
bound
out
call
ja
push
inc
repz
and
or
push
aad
xchg
and
jnp
call
mov
mov
pop
xchg
mov
adc
adc
ja
ljmp
xor
mov
fcmovne
dec
pop
adc
cltd
fimull
pop
rorb
xor
cmp
js
arpl
jb
and
lods
sbb
and
repnz
inc
push
xchg
adc
clc
in
das
push
dec
pop
sbb
fildl
aaa
inc
and
sub
movsl
cmpb
ficoml
mov
jp
movsb
pop
popa
in
dec
push
xor
push
nop
sub
cmp
insl
lahf
dec
decl
mov
mov
or
int3
adc
xor
inc
das
and
mov
fistpll
jne
repz
sub
mov
test
rcr
adc
or
pushl
loope
and
push
jb
loopne
inc
xor
push
sub
mov
ljmp
sub
dec
out
fwait
sub
sar
fdivr
mov
ljmp
push
cmp
jbe
xor
inc
mov
rorb
das
fildll
mov
sbb
cmp
lods
jle
ret
call
add
jnp
in
sbb
aas
pop
aaa
divb
push
jbe
loopne
jmp
lcall
loopne
sbb
lcall
xor
into
sub
ds
push
stc
pop
bound
fisttpll
int3
sub
pop
testl
jmp
mov
fstpl
sbb
push
data16
ret
xchg
fst
pop
cmp
dec
xchg
out
and
xor
aam
stos
icebp
cmp
dec
les
and
inc
loope
jne
push
aas
je
jno
imul
popf
aad
es
outsl
loope
or
inc
mov
sbb
cmp
or
xor
lcall
dec
inc
outsl
fisubrl
aaa
push
ljmp
lret
daa
pushf
fisubrs
lcall
jmp
mov
mov
xchg
dec
mov
jmp
lahf
xor
sbb
fsubs
xchg
pop
aad
mov
mov
enter
addl
sbb
out
scas
sar
jmp
test
pop
and
out
push
sub
mov
decl
call
xchg
sbb
pushf
pop
cmp
push
pop
xchg
aas
incl
inc
xlat
aam
ljmp
inc
mov
je
xchg
stc
add
decl
or
xor
push
cmp
test
xor
jmp
inc
mov
mov
mov
aad
scas
jl
sarb
mov
out
inc
movsb
mov
cmp
xlat
mulb
out
js
imul
push
insl
sbb
mov
add
push
sti
mov
js
test
js
xchg
lcall
adc
das
cmp
adc
lcall
pop
adc
in
mov
push
sarb
popf
sbbb
cld
push
xchg
shrl
aaa
cld
xor
or
enter
arpl
xchg
cmpsb
cmp
loop
inc
push
incl
outsb
frstor
mov
test
hlt
dec
sbb
lods
xor
rcl
xchg
jp
aam
jmp
xchg
lcall
dec
jae
outsl
psubsb
sub
imul
decl
push
inc
lods
lahf
mov
loopne
mov
add
call
xor
pushl
cld
jg
pusha
ss
sahf
sbbl
repnz
or
xchg
push
or
mov
fs
mov
xchg
scas
mov
in
pop
xchg
inc
outsb
bound
out
cmpsb
cld
call
mov
add
repnz
or
push
jp
outsb
fstp
and
fisubrl
pop
cld
decl
cld
xchg
int
inc
adc
std
sbb
popa
xchg
pop
filds
jmp
cmc
mov
mov
cmp
inc
lds
add
or
mov
ljmp
shrl
jge
jl
js
jo
jl
pop
scas
outsl
mov
decl
mov
ret
outsl
ljmp
cmp
cwtl
ss
les
decl
jns
dec
add
mov
xchg
in
push
nop
sbb
bound
lock
lds
mov
sbb
dec
arpl
mov
jl
frstor
or
sbb
loop
jmp
into
add
cmpsb
jne
mov
dec
jmp
mov
mov
and
mov
pushf
movsl
pop
insl
aas
test
leave
adc
xor
lret
daa
dec
out
xor
stos
sar
push
jnp
jmp
and
or
out
notl
test
adc
jg
adc
pop
cli
pop
roll
fcoml
js
jo
pop
xchg
mov
clc
jmp
inc
push
mov
pop
into
push
cwtl
mov
clc
add
in
outsl
xor
jmp
jecxz
pushl
lods
pushf
jns
mov
mov
and
call
or
add
incl
xchg
stos
pop
popf
add
int3
xor
add
icebp
mov
and
pop
out
imull
dec
adc
mov
ljmp
fdiv
pop
jge
cmp
mov
add
push
jae
mov
cltd
in
test
mov
out
int
int3
xchg
andb
test
push
enter
inc
jbe
add
xorl
push
push
mov
jg
std
push
repz
xchg
cmpsl
mov
jae
repz
repz
loop
jno
jne
ja
incl
cs
inc
sbb
sub
inc
sub
cmp
sub
mov
push
lcall
or
jecxz
mov
ss
stos
jo
fisubrs
pop
xchg
inc
shlb
daa
jg
sub
leave
fcoml
xchg
in
sarb
sbb
adc
test
mov
adc
pop
out
aaa
xlat
imul
inc
mov
or
jg
lcall
popf
and
shl
cmp
mov
adc
xor
or
pop
mov
lcall
cld
adc
cmp
jp,pn
cmp
pop
dec
rcl
push
inc
lea
ljmp
jecxz
fisttpl
dec
mov
in
popa
jae
es
cmp
mov
jg
incl
push
add
or
lahf
rol
addr16
mov
mov
jmp
into
jle
xlat
xor
mov
pop
pop
cmc
and
sti
push
mov
fists
jg
pop
xlat
cmp
data16
mov
or
pop
mov
mov
sub
jmp
decl
in
in
mov
les
fdivrs
dec
pop
lods
fstpt
inc
mov
xor
call
push
mov
aad
mov
clc
pushl
fstl
jge
jmp
test
push
sub
jle
pop
frstor
or
jbe
cmpsb
mov
in
ja
add
mov
push
jns
jl
mov
stc
ljmp
pop
push
sub
jno
mov
dec
or
movsb
in
mov
dec
fcmovu
pop
shl
lret
sbb
lahf
sub
cmpsb
cli
ret
jb
ljmp
jmp
mov
jbe
mov
mov
inc
outsl
popl
mov
jnp
loopne
mov
incl
mov
jnp
testl
iret
mov
lret
pop
jb
lods
cmpsl
js
jecxz
movsl
out
cmp
call
push
les
pop
iret
lods
sbb
addb
and
pop
lds
hlt
cltd
pushl
fs
loop
ficoml
mov
hlt
jl
push
or
push
jg
test
jmp
insl
adc
mov
idiv
andl
in
adc
lock
sahf
fcomip
incl
jb
mov
icebp
jmp
addr16
repz
and
addr16
aam
and
pop
push
jae
and
int3
sub
push
mov
cli
pop
jb
iret
scas
sar
pushl
ret
lods
inc
rol
push
mov
mov
rcrl
subl
decl
sbb
push
test
nop
pop
xchg
in
imul
pushl
push
aad
inc
sub
or
in
inc
dec
sub
xlat
out
rcr
push
mov
clc
lcall
in
cmpsb
repnz
pop
pushf
js
pop
test
jge
out
call
out
pop
jne
cld
inc
mov
call
ficompl
jmp
aaa
adc
hlt
push
rol
bound
push
repnz
lcall
fcomip
jmp
xchg
xor
jmp
lret
xchg
call
inc
fcomip
jb
dec
cmpsl
lahf
push
push
jecxz
pop
adc
push
hlt
jnp
push
mov
int
lahf
sbb
inc
stos
outsb
je
decl
push
adc
pushf
pop
lock
mov
and
add
shrl
push
pop
push
jmp
xchg
mov
ljmp
cmpsl
mov
inc
xchg
lock
mov
outsb
stos
nop
xchg
jecxz
fldt
pop
xchg
aad
in
ljmp
leave
or
fisubrl
sahf
mov
stc
out
or
jge
scas
jbe
push
add
dec
mov
pop
push
roll
ret
inc
jg
push
shr
into
sbb
cld
lcall
idivl
sub
in
push
call
push
push
push
push
push
or
add
xor
push
call
mov
ljmp
inc
and
mov
sub
mov
mov
and
push
pop
sub
mov
shl
mov
shrl
mov
xor
xor
mov
inc
add
cmp
rcrb
rcr
lcall
add
jmp
ret
push
mov
push
movl
add
std
decl
inc
test
je
movzbl
add
mov
shl
rcll
inc
ja
add
mov
inc
cmp
or
push
pushf
sti
in
lret
je
jle
fwait
dec
pusha
fdivl
pop
je
cmp
xchg
xorl
ror
aaa
mov
hlt
outsl
pop
je
jl
mov
sbb
or
out
je
mov
adc
dec
sbb
je
subl
cmp
incl
test
ret
push
push
data16
fistpll
xor
gs
adc
pop
jmp
xor
inc
ret
mov
orl
lcall
jbe
outsl
ret
xor
push
or
int3
push
sbb
mov
mov
loope
push
lea
loopne
sahf
ret
jp
shlb
add
mov
jg
mov
mov
leave
push
ret
push
inc
xor
pop
inc
xor
mov
sub
jle
cld
mov
jp
testl
stos
fisubrl
ja
xchg
mov
jae
ret
add
pop
sub
jp
or
je
cmp
lock
lea
push
pop
pop
push
push
lea
xor
xor
mov
stos
xor
rcrb
scas
xor
js
xor
add
dec
push
sbb
or
fidivrl
orb
bound
sbb
add
jmp
mov
mov
dec
add
mov
push
movsl
decl
pop
fmuls
and
mov
mov
sbb
mov
push
sbb
ret
cmpl
add
or
or
push
lds
fs
push
std
loope
xor
loop
hlt
mov
jp
out
insl
clc
mov
or
add
aam
push
or
mov
out
jg
xor
mov
je
into
add
ret
adc
jg
adc
cmp
cmpl
mov
add
cmpl
push
mov
mov
cmp
or
out
clc
loopne
add
daa
cmpl
jb
mov
sub
push
cmpl
loop
popf
xchg
add
rorl
add
shlb
add
or
sbb
adc
mov
sti
or
pop
mov
bound
push
adc
mov
ja
or
adc
hlt
pop
inc
push
setb
mov
or
or
or
mov
pop
or
cmp
je
push
popf
mov
gs
mov
adc
or
addr16
loopne,pt
inc
mov
inc
shr
push
pop
cmp
push
xlat
add
cmp
jne
push
push
or
jno
jmp
sbb
or
ret
dec
fcoml
movsl
out
push
cmp
lahf
lcall
add
comiss
jle
gs
scas
loope
jb
push
add
add
adc
loope
loopne
jne
cmp
in
hlt
shl
inc
sub
fcoms
rcll
add
push
push
xchg
shr
push
xor
jbe
jle
and
pop
cs
and
roll
jo
xor
or
mov
dec
jl,pn
lcall
add
sbb
mov
popl
ret
jmp
mov
jne
mov
sbb
mov
push
or
call
push
ret
inc
sarb
or
pop
loopne
and
lret
or
ret
add
cmpsb
sbb
and
clc
sbb
add
or
add
sub
push
add
mov
pusha
stos
mov
sub
push
push
fistps
stc
cmpsb
lret
inc
cld
cmpl
je
decl
xlat
jbe
clc
or
mov
clc
cmp
clc
mov
hlt
imul
out
lock
pop
mov
jle
cmp
sbb
mov
jl
cs
push
push
cmp
inc
mov
pusha
jb
jge
add
sbb
int3
je
dec
in
cmp
pop
cmp
aas
test
roll
and
ss
or
jg
inc
jo
fldenv
xchg
mov
add
bndstx
fiadds
jb
mov
rcr
pusha
sar
cmp
jae
testb
jne
fs
or
jle
or
add
leave
mov
jle
lea
dec
subl
std
call
hlt
push
jne
push
pop
cmp
jg
mov
dec
test
jl
or
xchg
lods
mov
inc
cmp
mov
mov
jle
data16
imul
mov
divl
sub
jle
xchg
pusha
or
rorl
jp
fdiv
pop
cwtl
mov
adc
jne
mov
hlt
push
jge
cmp
push
inc
mov
rcr
sbb
leave
dec
push
lea
inc
cmp
loopne
or
cli
pop
sar
or
std
push
jo
inc
ret
push
je
push
in
adc
sub
push
call
or
jnp
test
mov
loopne
popa
rcrl
mov
or
pop
mov
icebp
jae
hlt
aas
mov
jp
add
roll
cmc
idivl
divl
and
push
sbb
mov
jg
cmp
pop
jae
push
movsb
pop
sarb
scas
and
push
fs
cmp
dec
in
xor
or
push
xor
out
cmp
cmp
mov
sub
mov
outsb
call
pop
imull
mov
shr
mov
mov
ja
dec
mov
sbb
mov
push
in
adc
adc
dec
mov
inc
and
push
stos
cmp
add
push
add
add
dec
or
cmp
fwait
nop
add
inc
sbb
das
push
lea
xchg
std
out
mov
push
lea
push
mov
loop
inc
push
call
pop
inc
jnp
mov
mov
shl
cmp
mov
xor
test
fs
jne
idivb
or
and
lret
stc
cld
or
out
mov
pop
sbb
push
call
cmp
sub
idivl
clc
cmp
pop
pop
pop
lea
mov
sbb
mov
cmp
pushf
and
pop
jbe
sbb
push
mov
clc
push
push
pop
adc
pushl
cld
arpl
sbb
mov
xchg
testl
mov
push
fbstp
push
sub
fistpl
push
ret
and
je
das
mov
pop
push
adc
je
pop
cmp
mov
lea
fnstsw
sbb
lds
shll
or
and
je
cmp
mov
sbb
sub
mov
mov
adc
mov
cmp
je
lea
add
mov
push
scas
mov
sbb
xor
add
mov
enter
add
and
rcrb
pop
or
add
jne
andl
sbb
and
mov
xchg
or
adc
adc
pop
or
lret
aaa
or
push
jns
sahf
or
ret
jg
jp
cld
negb
or
jne
mov
and
rorb
in
mov
je
andl
xchg
cmpsb
xor
lret
dec
xchg
test
lea
popl
adc
jp
rcll
push
js
xorb
push
push
pop
pop
push
fadds
cmp
fs
call
xchg
loop
ret
cmp
mov
lds
sahf
hlt
ljmp
sbb
or
push
cmp
ja
test
jg
shrl
test
cmp
jne
sar
sete
mov
movzbl
fincstp
sub
popl
inc
inc
jmp
push
pop
inc
bound
mov
cmc
pop
ss
fstpt
sbb
mov
mov
imulb
cmp
outsb
inc
push
lds
clc
add
jne
mov
add
fsubrs
aas
cmp
pushf
cmp
addr16
sbb
test
sub
call
filds
pop
cmp
pop
pop
je
push
leave
or
add
cmp
jne
ljmp
xchg
xlat
lret
mov
fsub
pop
ds
xchg
jbe
pop
mov
dec
call
ljmp
xchg
push
cmp
push
mov
hlt
movl
test
push
cmp
lock
cmp
inc
mov
mov
jmp
incl
bound
mov
outsl
mov
or
inc
testb
or
sbb
loope
call
mov
xor
cmp
jmp
or
jne
cmp
movb
cmp
ljmp
jl
orb
jmp
xor
js
sbb
add
inc
pop
stos
outsb
jo
jmp
inc
inc
inc
pop
je
cmp
test
pop
in
mulb
rcll
nop
dec
add
roll
aaa
je
dec
cld
insb
xchg
shr
adc
or
push
int3
repz
dec
outsl
aam
cmp
je
rcrb
lods
shl
sbbb
roll
into
inc
fs
setge
inc
outsb
xor
testb
push
aaa
cmp
and
xor
push
fldl
jl
pop
cwtl
sbb
pop
xlat
fsubrs
rcr
push
stos
mov
add
mov
mov
add
loope
movsb
pop
and
fdivs
mov
incb
mov
lea
mov
mov
xorl
add
mov
aaa
xchg
inc
and
ds
xor
dec
push
lods
push
pop
mov
fnstsw
and
push
pop
jmp
pop
add
notb
lds
in
push
pop
jne
xlat
mov
mov
push
rolb
push
inc
loope
dec
push
mov
clc
js
mov
mov
hlt
fcmovnbe
push
jne,pt
adc
imul
push
dec
fstp
push
push
add
adc
jne
or
push
mov
outsl
add
push
sar
insb
push
adc
xor
adc
jle
call
into
or
fldt
fidivs
in
call
push
sbb
lahf
inc
pop
lahf
or
dec
ret
jmp
push
adc
push
cmp
and
and
inc
mov
dec
adc
pop
je
inc
cmp
sti
or
lock
push
sbb
frstor
cld
and
test
mov
orl
iret
loopne
inc
push
or
ficoml
pop
mov
enter
lcall
sbb
outsl
sub
push
add
add
add
loopne
shll
lea
mov
and
out
arpl
fistps
push
lea
add
push
mov
or
cmp
in
and
test
nop
or
push
lidtl
xchg
adc
outsl
sub
mov
shlb
dec
add
fwait
jmp
or
jne
repnz
clc
push
jg
cwtl
mov
test
pop
and
testl
dec
add
inc
add
adc
mov
lea
cmpl
dec
pop
lock
add
cs
pop
jmp
ret
dec
neg
sbb
call
cmc
mov
insb
jmp
pop
cs
mov
int
and
ds
mov
mov
prefetchnta
pop
adc
pop
pushl
jmp
or
jl
pushl
pop
test
or
push
in
inc
sbb
mov
push
popa
movl
pop
scas
lahf
insb
or
es
je
sbb
call
repz
jmp
mov
xor
xchg
push
test
mov
add
add
lods
pop
push
xchg
cmp
add
loop
rclb
orb
lock
in
mul
dec
out
mov
push
aas
icebp
and
jbe
mov
int3
add
scas
xor
mov
xchg
mov
mov
and
test
dec
fisubrl
into
dec
in
sub
sbb
mov
push
pop
sub
mov
loopne
and
mov
cwtl
dec
dec
ret
jae
mov
sbb
add
push
push
sub
pop
add
subl
pop
ret
xchg
add
pop
arpl
pop
mov
sub
hlt
dec
outsl
mov
jo
int
xchg
mov
push
pop
adc
and
ljmp
sbb
sbb
in
pop
or
pop
fnstcw
and
insl
push
mov
cmpsb
xchg
xor
mov
xor
in
je
push
je
push
sub
subl
pop
or
push
inc
mov
and
out
clc
or
or
add
mov
mov
inc
sbb
lock
out
add
sahf
dec
adc
jmp
push
xor
adc
mov
and
fsubs
push
mov
and
mov
or
sub
pusha
sub
add
push
das
mov
lea
mov
rcll
mov
cmp
test
out
add
add
mov
pushl
ret
test
call
int
call
test
je
and
push
or
mov
jmp
lea
jmp
or
jmp
std
jmp
jecxz
outsl
scas
cld
enter
mov
shlb
out
std
mov
movl
mov
xlat
in
jge
cmp
mov
bound
divb
ret
divl
ffree
jo
pop
ret
adc
inc
inc
mov
fildl
add
sub
sbb
jle
push
mov
mov
cmp
fsubl
xor
xchg
mov
jmp
daa
mov
bound
mov
mov
add
sub
sub
das
push
jne
cmp
mov
outsb
dec
jne
and
push
inc
insb
das
push
icebp
aaa
sub
in
loopne
pop
ljmp
jmp
sub
ljmp
fs
and
out
and
in
dec
push
push
add
sub
or
jbe
or
les
sbb
pop
lret
repz
add
pop
out
scas
or
mov
ljmp
ja
imul
push
andl
and
sahf
or
dec
std
xchg
jns
cmp
fimull
or
rol
inc
in
inc
std
cld
jo
xchg
dec
mov
pop
or
push
xchg
into
movsl
add
cmp
mov
sbb
movzbl
mov
pop
test
adc
sub
clc
cmp
jo
rcrb
xchg
lock
icebp
jmp
mov
je
or
mov
add
jns
test
or
outsl
xor
fdiv
iret
jnp
fldt
pop
and
ds
test
add
push
dec
out
inc
xor
mov
pushl
add
aas
js
jl
test
test
jb
mov
inc
xchg
movb
lea
push
in
sti
jecxz
push
or
shll
enter
mov
idivl
lret
and
rep
inc
mov
inc
or
cs
pop
pop
in
cmp
xchg
in
fisttpll
lahf
pusha
push
add
push
fnsave
jecxz
movl
ds
pop
repnz
das
or
sub
sbb
dec
test
andb
pop
cld
adc
push
xorb
mov
outsb
fisttps
xor
je
and
paddusb
cmp
mov
pop
jbe
clc
inc
jb
or
adc
enter
test
in
outsl
mov
adc
jp
push
cmp
and
loopne
dec
push
cmp
fisubrs
pushf
lods
cwtl
add
sbb
mov
xor
add
cmp
mov
add
rcll
jl
sub
sub
js
cld
jne
mov
cmc
lock
and
cmp
arpl
rcrl
cli
repz
push
mov
or
mov
out
je
add
inc
cmp
sub
jmp
or
int
sar
incl
jge
mov
ljmp
out
ret
dec
out
mov
cmp
mov
paddsb
cld
push
rolb
lea
loopne
sar
shl
mov
stos
lea
repz
mov
jo
pop
jbe
mov
fmuls
xchg
outsb
sbb
nop
scas
inc
es
inc
pop
mov
incl
add
movb
ret
movsb
loopne
out
lock
lret
clc
rcrl
inc
push
adc
pop
add
fbld
jbe
inc
inc
cmpb
lock
push
ds
xor
inc
cmp
mov
mov
cmp
cwtl
dec
daa
in
sub
jmp
cmp
jmp
dec
je
push
leave
or
mov
push
mov
pop
ficomps
ret
rolb
and
xor
push
in
push
ret
push
icebp
inc
fdivs
or
ljmp
outsl
push
in
push
je
push
adc
or
sbb
jo
mov
neg
ret
pop
jge
adc
jl
ja
hlt
lods
les
push
pop
sub
and
add
push
or
addl
cltd
jbe
lock
mov
call
sbb
jae
dec
or
push
fimuls
xor
ficoms
cmpb
insb
pop
fisubrs
sbb
stos
mov
idiv
or
lock
roll
cmp
jbe
cmp
xor
cmpb
dec
and
cmp
jb
rep
jmp
cmp
jmp
add
enter
sub
pop
in
nop
push
inc
shlb
cld
push
and
fnstenv
push
mov
mov
mov
or
lods
adc
inc
mov
mov
movsb
shlb
dec
add
add
nop
inc
add
add
mov
cmpb
repz
push
in
inc
in
sahf
out
call
out
sahf
out
hlt
hlt
clc
clc
pusha
add
add
repz
add
sbb
jmp
sbb
pop
pop
mov
imul
and
fsubs
and
lea
adcb
pop
and
std
xchg
or
cld
out
dec
xor
clc
das
gs
stc
sub
into
jnp
pop
nop
pop
push
addb
fiaddl
movsb
mov
int3
jl
mov
add
sahf
inc
push
out
push
and
dec
dec
mov
mov
addr16
add
lcall
mov
push
add
or
sahf
out
push
adc
and
aas
xor
sbb
sbb
adc
sahf
out
adc
adc
or
out
or
loop
fimuls
pop
or
jo
xor
push
movsb
aaa
push
add
pop
mov
adc
ja
stos
dec
punpckhbw
xor
daa
js
leave
dec
andl
dec
or
mov
sub
jecxz
sub
nop
jnp
inc
ret
mov
mov
mov
mov
add
subl
stos
rol
adc
ljmp
mov
outsl
push
mov
sub
cld
shr
lock
jnp
dec
lea
mov
push
dec
mov
adc
mov
xor
push
cld
or
sub
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
movsl
push
orb
push
and
lret
cld
call
jmp
dec
add
shll
pop
mov
add
lret
std
sbb
sbb
dec
loopne
pushf
mov
add
pop
add
push
dec
pop
adc
mov
roll
dec
mov
push
or
aas
cwtl
imul
aam
pop
clc
and
cmc
lcall
sub
bound
mov
xor
lret
cmp
jbe
fnstcw
imul
andb
cmp
je
shlb
mov
cmp
rcrl
cmpsl
add
not
and
add
jl
xor
sbb
pop
xor
cltd
jle
pop
dec
test
je
xor
add
and
jmp
pop
xchg
lods
or
je
mov
lock
mov
pop
or
pop
ss
dec
pusha
mov
mov
imul
loope
inc
mov
jge
jle
xchg
ret
sti
or
cmpsl
push
or
pop
mov
inc
dec
or
jmp
dec
adc
push
mov
or
push
stos
push
fdivs
mov
test
cmpsl
dec
idiv
push
fmull
aas
mov
sbb
and
loope
add
scas
jp
push
call
div
in
gs
gs
push
or
lahf
cmp
mov
add
decb
adc
cli
mov
pusha
add
and
imul
jo
mov
adc
cmc
lds
jge
leave
mov
loopne
loopne
add
push
inc
adcb
push
dec
popa
das
adc
mov
mov
mov
jbe
clc
ret
or
xchg
stos
fwait
push
mov
pop
adc
or
cmp
jne
add
sbb
push
outsl
push
adc
mov
jle
pop
ret
sub
stos
push
pop
arpl
inc
mov
and
or
xor
jo
jne
out
mov
jmp
push
push
dec
imul
add
jbe
in
add
adc
jmp
orl
mov
incl
lret
xchg
cmp
mov
test
xchg
fcom
loopne
dec
stc
ljmp
rcrb
call
inc
clc
pop
mov
add
xor
jne
add
cltd
cmpsl
bound
or
subb
add
and
fmull
loop
jg
ja
fsubrs
iret
shr
lea
inc
orl
orl
sub
pusha
adc
out
inc
inc
cld
lock
fnsave
push
add
sub
sbb
xlat
rorb
xchg
and
out
cmp
mov
fs
inc
sub
mov
adcb
rcrb
jl
jl
inc
jne
or
xlat
cmp
shlb
add
test
or
adc
jge
xlat
sub
movsb
stc
add
adc
add
cmp
or
pop
in
mov
and
jb
mov
fwait
pop
lret
inc
add
xchg
mov
cmp
sar
dec
cmp
add
push
xchg
pop
push
mov
mov
inc
cmp
push
mov
es
int
pop
nop
cmp
nop
inc
jae
test
lcall
pusha
pop
pop
jns
and
into
add
push
sub
pop
adc
mov
aas
mov
cld
jmp
hlt
lea
or
leave
loop
jg
or
cwtl
pop
dec
pop
pop
jns
cmpsl
imul
and
shl
ss
aaa
xchg
jne
pop
test
fstl
jae
roll
inc
insb
xor
mov
repnz
and
mov
shrb
mov
jnp
cmp
inc
dec
insb
pop
xor
xor
mov
push
sar
dec
cmp
xor
add
add
movsl
pop
divb
add
loope
fiaddl
cld
xor
cmp
fwait
inc
ds
dec
je
filds
cmp
push
scas
dec
push
flds
je
add
fbstp
mov
add
adc
adc
fimull
or
dec
lea
mov
or
ret
ret
mov
mov
cmp
pause
shrl
pop
mov
cmp
lret
xor
jns
popa
leave
xor
rolb
fs
cmp
lock
mov
xor
push
cmp
icebp
out
clc
and
jge
or
shr
sbb
jle
xor
nop
xor
shr
cld
mov
sti
fmul
hlt
cmp
jmp
dec
test
imul
cmp
dec
and
or
jne
ret
adc
push
adc
jb
push
jne
mov
jmp
inc
or
jl
mov
je
inc
or
cli
incl
sbb
mov
jg
jno
mov
lea
fildll
fcomps
and
or
mov
jne
mov
fisttps
out
mov
je
dec
jnp
pop
push
imul
into
jne
lret
push
pop
ljmp
push
pop
jmp
cmpl
cmpl
sahf
push
vmread
andl
xor
or
jo
and
fdivr
push
fisubs
je
push
sbb
je
shr
add
and
cmp
incb
sub
leave
cwtl
cli
push
test
or
sub
imul
fsubs
negl
pusha
in
test
inc
dec
pop
cmp
sbb
test
cmp
mov
and
mov
push
pcmpeqw
in
adc
ja
and
jmp
test
mov
into
inc
cltd
pop
mov
lods
outsb
cs
dec
push
and
imul
ret
fs
inc
mov
or
das
pop
popa
mov
jge
or
subb
cmp
or
mov
or
pop
mov
adc
mov
out
or
scas
mov
mov
push
addr16
popf
adc
lock
frstor
sub
sbb
jns
pop
sahf
mov
cmp
pop
fnsave
mov
pop
sahf
lea
mov
ljmp
add
xor
xchg
js
sub
push
and
sbb
fisubl
and
push
cmpsl
shrb
clc
or
xchg
arpl
lock
clc
test
and
pop
lock
fwait
adc
xor
je
push
mov
dec
mov
mov
push
push
pop
jmp
insb
xchg
cmp
movsb
add
fistps
mov
int
je
xchg
push
ffreep
xor
xchg
cltd
ss
mov
mov
je
push
xor
loopne
xchg
push
xor
test
dec
mov
jne
or
iret
adc
mov
pop
int3
pop
pop
xchg
mov
mov
and
movsl
mov
sub
or
push
jmp
mov
jno
add
mov
adc
jne
push
loopne
clc
push
inc
mov
daa
in
adc
pushf
jp
push
cwtl
xchg
fsts
nop
inc
hlt
xor
into
sub
xor
add
push
sbb
push
pop
fwait
lock
mov
cmp
add
inc
sub
cmp
je
add
adc
pop
shlb
test
das
add
icebp
fcmovnbe
mov
mov
fdivs
js
movsb
aam
adc
iret
jae
pop
push
sub
loopne
adc
pop
jne
or
push
les
add
setge
mov
mull
mov
or
jbe
and
pop
xchg
xor
fsubrs
push
or
or
inc
sub
add
xor
add
push
push
mov
out
pop
insb
push
or
js
mov
push
daa
outsl
dec
fmul
push
cmp
sub
push
push
push
cmc
or
jno
push
push
push
push
or
loopne
xor
nop
xor
loop
mov
dec
cmp
jle
add
mov
cmp
pop
inc
cmp
ret
in
add
jmp
sub
add
mov
push
scas
neg
add
push
aam
xlat
pop
roll
jle
inc
inc
rcrl
enter
xchg
and
rorl
add
adc
mov
sub
sahf
mov
add
insb
cmp
add
mov
jne
mov
daa
xor
mov
fsub
jno
jg
inc
adc
sbb
push
in
or
cmp
sub
lods
testb
jbe
mov
mov
arpl
repz
add
dec
out
or
add
dec
xlat
xorb
addr16
aaa
testb
je
les
mov
fcoms
scas
mov
add
jne
jb
sub
inc
lcall
loopne
push
cmp
fwait
loopne
pop
movsl
mov
push
out
fildl
roll
mov
add
jmp
pop
add
push
push
xlat
push
mov
cmp
je
or
lock
ficompl
fcomps
mov
or
cmp
cmp
sbb
js
xor
repnz
jno
cwtl
xchg
aad
mov
lret
aam
push
jno
cmp
cmpsb
je
jno
test
popa
cld
adc
push
out
cld
int3
jmp
outsl
insl
test
jne
mov
or
rcrb
xor
cmp
and
push
or
push
push
adc
add
fdivl
mov
jmp
lea
push
dec
and
sti
or
ficomps
mulb
test
add
adc
cmpsb
inc
mov
push
jns
dec
add
mov
outsl
mov
imul
or
inc
sbb
ficomps
lea
sub
stos
out
sbb
nop
stos
idivb
xor
inc
or
in
pushf
push
scas
push
fs
push
push
movsb
mov
fs
sahf
inc
cmc
mov
loop
mov
or
cmp
stos
mov
lcall
sbb
dec
sub
dec
fdivrs
mov
lock
mov
fldcw
jl
icebp
aad
mull
dec
je
iret
fcom
pop
push
push
sub
mov
mov
mov
loopne
push
sbb
inc
popl
insl
mov
mov
loopne
push
mov
sbb
add
fimuls
sbb
sbb
inc
mov
int
jno
into
les
push
adc
dec
sbb
adc
fimuls
or
mov
xchg
xchg
testb
dec
add
mov
sbbb
out
push
add
adc
jnp
lret
lret
sbb
mov
push
jb
es
inc
mov
in
or
xchg
iret
repz
call
enter
rolb
pop
orl
jmp
inc
nop
push
lds
test
cmp
adc
inc
lods
inc
pop
nop
mov
push
loopne
or
and
add
inc
sahf
out
insb
je
dec
shl
test
popa
add
or
push
rclb
rolb
inc
mov
jle
or
push
lcall
or
mov
cmp
xor
ss
test
push
je
sub
pop
jmp
jnp
cmp
or
out
cmovl
stos
jl
dec
ljmp
add
jmp
mov
jge
push
push
adc
test
cli
push
mov
outsl
dec
or
jno
pop
into
in
sbb
mov
sbbb
adc
mov
insb
mov
pop
dec
shlb
mov
cmp
inc
fistpl
pop
mov
mov
and
dec
rclb
fiaddl
test
rclb
insl
sti
cmp
sub
jne
movsb
enter
mov
jle
sbb
aaa
push
adc
adc
clc
cmp
push
les
jne
push
push
in
mov
pushf
or
les
divl
mov
fsubrl
add
push
pop
aas
or
pushl
fistl
mov
xchg
fcomps
daa
cmp
icebp
push
inc
mov
cld
mov
mov
cmpl
je
push
test
or
pop
add
inc
data16
int3
jmp
pusha
mov
sbb
xchg
es
addb
push
test
lock
in
dec
push
dec
es
cs
test
aaa
pop
scas
jo
push
mov
add
mov
pop
xchg
mov
adcl
stos
in
icebp
jecxz
mov
jecxz
jno
add
mov
rcrb
sub
ja
fsubl
mov
les
jbe
cmpb
and
not
and
sub
pop
dec
fsubs
out
add
imul
add
cmp
bnd
add
lret
cmp
mov
out
mov
aam
lods
and
add
test
je
testb
fdivs
je
xchg
jae
xor
xchg
cmp
jae
push
test
sar
xchg
pop
ret
add
pop
into
mov
dec
mov
fs
mov
loopne
rcrb
icebp
cmp
add
test
push
xor
and
fidivrs
into
mov
ja
xlat
jne
movsb
lods
hlt
xchg
jecxz
sbb
movsb
mov
std
jne
or
scas
dec
lret
and
xor
ret
push
dec
ret
jmp
movzbl
push
push
cmp
xchg
mov
icebp
sbb
inc
shrb
dec
loopne
or
jne
pop
dec
adc
jl
or
jg
push
adc
xor
jbe
testl
add
inc
jmp
or
pop
jne
adc
fadds
xchg
dec
sar
repnz
stos
mov
shr
inc
nop
push
das
xor
mov
int3
pop
pop
mov
mov
pop
or
cld
fiadds
bound
sbb
mov
xchg
mov
jne
clc
or
rclb
push
add
mov
dec
cmp
and
add
out
les
xchg
fdivr
adc
enter
inc
adc
sub
loope
and
negb
mull
add
or
shrl
jo
pop
adc
or
or
pop
cli
stc
or
addr16
testb
pop
je
push
or
cld
movsb
dec
rorl
cmpsb
sbb
std
add
add
insl
movsl
dec
dec
or
pop
or
ret
inc
or
push
pusha
mov
jmp
mov
add
sub
stos
movsb
push
and
push
pop
push
adc
lcall
outsl
jb
js
je
jb
arpl
jae
sar
ljmp
arpl
gs
insb
add
outsb
je
insl
and
jb
imulb
fimuls
dec
push
push
and
repnz
dec
dec
inc
add
inc
and
mov
add
xor
cmp
sub
jae
popa
jo
insb
imul
mov
mov
outsl
je
shlb
jne
imul
popa
arpl
data16
jbe
add
jae
outsl
sub
movsb
std
or
jae
pop
cs
inc
push
and
or
gs
jae
mov
sbb
push
shll
jbe
fcmovnu
jae
sbb
xor
and
imul
loopne
insl
mov
inc
cs
int
movsl
roll
popa
bound
pop
jnp
imul
stos
test
jbe
mov
or
push
mov
hlt
gs
outsl
ja
jno
outsl
or
or
push
lock
in
jo
insb
jbe
xchg
jne
mov
dec
arpl
inc
jg
mov
xor
or
lds
xor
out
outsl
jo
mov
fcomps
fs
push
cmp
dec
arpl
lock
insl
jne
pop
and
fs
arpl
mov
imul
push
subl
jbe
in
pop
cmp
cli
xor
and
cmpsb
out
adc
loopne
xor
outsb
into
xorl
adc
xor
xchg
push
and
mov
push
cmp
addr16
jae
sbb
scas
xor
fdivrl
fsubrl
sbb
je
and
jle
lcall
inc
sub
mov
dec
imul
pop
sub
inc
add
ds
pop
lret
outsb
iret
cmp
add
cmp
and
popa
dec
xor
imul
outsb
add
and
pop
aam
inc
gs
ret
push
xor
fs
je
das
push
cmpsb
loope
or
push
dec
jae
stos
adc
add
push
in
subb
fisubl
pop
lea
mov
outsl
js
jne
xor
xor
cmp
cmp
scas
xchg
enter
bound
push
xchg
xchg
dec
bound
fs
mov
das
cli
inc
jo
cmp
sti
testb
js
pop
stos
push
or
and
cmp
jge
lret
sbbl
test
jne
ds
je
mov
mov
jl
adc
test
addb
scas
nop
test
mov
jns
shl
sbb
adc
or
or
sbbb
and
addb
popaw
imul
pop
add
add
dec
insb
add
or
xchg
and
dec
add
test
xchg
add
mov
add
xchg
and
mov
push
add
add
sbb
add
mov
ja
dec
pop
stos
incl
adc
push
add
pop
mov
pusha
inc
shr
and
das
addb
add
push
out
fldlg2
pop
pop
inc
or
and
popa
dec
rolb
inc
mov
inc
ror
mov
mov
outsb
add
mov
mov
push
mov
mov
dec
pop
and
cmp
pusha
cmp
sub
lret
jg
dec
inc
inc
aas
add
ds
popf
dec
insb
lds
or
or
jmp
rcrl
xor
cmp
cmp
push
jl
lods
cmp
mov
js
inc
lock
pusha
orl
roll
out
add
add
lds
loopne
adc
mov
ljmp
aas
xchg
lcall
xchg
dec
sbb
dec
pop
pop
adc
adc
decl
sti
jne
mov
rorb
sbb
lock
out
popf
inc
in
mov
je
pop
dec
ljmp
fnstcw
push
push
dec
or
lods
in
bnd
mov
iret
lods
cmp
pushl
jns
jo
adc
in
mov
pop
mov
in
sar
ljmp
cli
sbb
xorl
setno
stos
adc
push
or
add
fcomps
add
sub
frstor
ljmp
jbe
icebp
ja
pop
add
decl
in
lahf
outsl
adc
cmp
sbb
pushf
faddp
sub
pop
cmc
push
sub
cwtl
jmp
test
xchg
in
cmp
fwait
mov
xlat
cmp
stos
lods
icebp
mov
jge
xchg
call
xorb
mov
stos
cli
sahf
sbb
xchg
mov
int
cmc
xchg
mov
mov
std
or
push
outsb
add
out
ds
lock
add
test
aad
jmp
enter
inc
push
clc
mov
sbb
or
inc
cwtl
cwtl
fsubs
pop
lcall
decl
jp
call
add
jns
push
or
leave
dec
xor
popa
push
inc
xor
clc
mov
jp
jne
aaa
push
int3
mov
loope
lods
cmpsl
leave
sarb
adc
pop
ljmp
pop
sub
pop
and
daa
icebp
lods
xchg
dec
xor
cmp
call
pop
adc
in
mov
bound
xchg
sub
mov
test
mov
iret
jnp
push
or
lcall
jg
test
loope
dec
mov
fisttpl
movsl
in
pop
in
inc
inc
xchg
andb
imul
jne
imul
in
inc
filds
inc
jbe
mov
add
push
jle
cltd
and
xchg
ret
and
ljmp
and
rcll
bound
in
ds
mov
pushf
push
vmwrite
cltd
inc
call
xchg
or
jb
sarb
and
or
jecxz
loop
call
cld
adc
cmp
add
in
aam
push
dec
test
lcall
cwtl
lret
decl
sarl
out
lock
adc
mov
and
inc
hlt
shlb
test
jecxz
dec
xchg
pop
aaa
sub
jmp
iret
out
lret
sbb
insl
cltd
and
push
push
hlt
xor
fdivp
enter
push
adc
inc
sahf
ljmp
add
pop
jecxz
xor
in
clc
jmp
aaa
sbb
mov
dec
fdivl
dec
subl
push
xor
push
dec
cmc
push
ret
pop
aaa
sahf
les
push
push
sub
decl
enter
mov
mov
mov
xor
jno
adc
das
scas
sub
pop
mov
inc
and
and
fidivs
hlt
std
sarl
sahf
add
pusha
cld
lcall
clc
lock
repnz
or
fisubs
sub
shll
mov
mov
push
lods
mov
std
lods
push
call
adc
and
xorl
jg
test
loopne
decl
data16
ficoml
jne
pop
out
push
leave
xchg
pop
or
adc
loopne
dec
cwtl
cmpsl
add
jmp
xchg
shrl
das
outsl
sti
rol
jbe
fwait
xor
decl
push
sub
xchg
bnd
test
sub
rcrl
pop
sub
movsl
pushl
dec
jbe
mov
sti
stos
add
dec
xchg
sbb
mov
sahf
cmp
ret
jle
or
or
call
push
cmp
mov
dec
mov
add
pop
shrl
and
sar
jns
mov
rolb
and
negb
lea
add
cwtl
xor
ljmp
and
inc
or
pop
out
cmp
stos
cmp
mov
sbb
lret
call
and
insl
sbb
jo
jo
mov
add
loopne
dec
mov
push
idiv
call
icebp
popf
cltd
mov
loope
daa
cmpsl
lret
adc
cmp
scas
or
std
xor
sbb
loop
iret
fistps
mov
scas
xor
mov
call
xchg
aam
xchg
mov
pop
cs
call
fld
jnp
push
in
pop
test
cli
xor
add
in
rorb
cmp
mov
lcall
pusha
test
loop
hlt
xchg
xor
adc
mov
icebp
shlb
call
mov
pop
push
outsl
lret
xchg
mov
pusha
fs
xor
xchg
mov
jp
cmpsb
negl
adc
mov
mov
xor
xchg
xor
call
push
jbe
lods
out
mov
call
push
stos
add
outsb
push
and
add
scas
gs
call
fisubs
pop
pop
mov
mov
sti
mov
fists
push
hlt
inc
fbld
out
cmp
xor
xchg
loop
xchg
inc
out
cltd
pop
jl,pn
push
ficoml
call
leave
or
pop
xchg
bound
enter
mov
jno
mov
add
fwait
pushl
popf
push
out
sub
push
mov
or
les
scas
dec
stos
imul
and
mov
mov
or
and
jo
sub
mov
test
in
and
fcoml
jbe
nop
ljmp
rcll
and
decl
lcall
xchg
iret
lcall
pop
sbb
inc
sbb
inc
into
xchg
xchg
movsl
test
cmpsl
int3
mov
adc
shr
push
lret
dec
rcl
test
pushl
sub
mov
push
push
and
sahf
cmp
aas
pop
or
cmc
cmp
adc
js
add
mov
mov
push
mov
adc
push
fstpt
or
and
call
popa
or
xor
insb
fucom
xchg
cmp
pop
imul
mov
sbb
jmp
inc
cmp
fs
pop
clc
pop
mov
dec
push
cmp
incl
mov
outsl
cmp
pop
pop
aaa
arpl
pop
add
call
mov
into
out
int3
cmovge
daa
mov
jne
adc
push
xchg
jge
iret
push
popa
sub
mov
scas
dec
aaa
adc
adc
lcall
mov
cli
aas
nop
call
outsl
jecxz
fs
test
lcall
ret
popa
jmp
mov
push
fisttpl
pop
js
movsl
fwait
fwait
inc
add
aas
push
fisttpll
jns
add
int3
lcall
scas
clc
pop
sub
cmp
xchg
mov
arpl
push
dec
cld
pushl
stos
hlt
mov
mov
js
mov
fabs
stos
jb
lods
insb
mov
pushl
les
movsl
cwtl
mov
pop
lds
push
sub
xchg
mov
cs
movsl
loope
pop
lock
lcall
out
lea
jmp
inc
xorb
addr16
cltd
jmp
jl
xor
inc
das
sub
stc
dec
cltd
pop
cmp
stc
inc
mov
je
lock
gs
or
ljmp
cld
fsub
iret
mov
push
call
lret
add
lods
lahf
cmp
stc
popa
or
stos
jg
in
sbb
mov
adc
lcall
cmpsb
jnp
dec
out
clc
call
adc
cmpsb
in
stos
cmpsb
aad
fildl
pop
in
and
xchg
mov
movsb
cmc
repz
xor
push
leave
outsb
push
jnp
inc
aad
xor
adc
ljmp
xor
fimuls
shr
xchg
fldenv
popa
mov
adc
jo
jmp
ds
outsb
xchg
push
xor
adc
push
adc
jecxz
push
call
push
call
inc
inc
pushw
push
xor
inc
mov
pop
into
pop
push
subb
aaa
out
dec
cmp
push
testl
mov
pop
cmc
call
add
push
adc
sarl
mov
lret
fwait
popf
stos
stc
sbb
test
jge
fwait
or
rclb
adc
xchg
je
ja
sbb
mov
add
cmp
out
rolb
test
adc
ja
incl
add
mov
jg
jmp
cmc
das
movsl
scas
aam
dec
cmp
jp
aas
xchg
jo
cmc
call
mov
shl
xor
lret
fstpl
lods
push
pop
lahf
push
js
pushf
in
out
outsl
push
and
cmpsb
imul
gs
mov
es
jo
xchg
call
cmp
clc
mov
mov
inc
dec
pop
add
xchg
in
lcall
int
cmc
jmp
out
icebp
bound
sahf
mov
test
push
daa
es
jg
pop
pop
incb
and
cmpsb
cli
arpl
mov
mov
dec
dec
sbb
fstps
pop
adc
mov
cs
xor
aaa
and
call
repz
inc
jp
cmpl
jbe
iret
adc
push
add
jp
call
mov
out
cs
fs
andl
or
adc
pop
lahf
lret
pushl
xor
cmp
nop
dec
into
inc
pop
shlb
push
xor
xchg
mov
cmp
dec
imul
mov
mov
or
decl
cmp
in
pop
sti
sbb
xor
pushf
and
loope
mov
jp
loop
pushl
in
adc
repnz
out
insl
jecxz
sahf
adc
dec
push
ret
lret
jp
iret
movsb
outsl
push
sbb
out
enter
ljmp
and
cmp
or
je
jg
inc
push
out
or
faddl
fstpt
cmp
arpl
push
add
sbb
dec
push
enter
mov
lock
std
cmpsl
and
jmp
clc
dec
es
jnp
xchg
ja
dec
jg
call
loopne
sbb
imulb
inc
int3
ds
mov
fstpt
add
pushl
mov
mov
inc
jl
mov
adc
push
test
jg
mov
push
or
outsb
inc
scas
cmp
hlt
mov
movsl
lahf
imul
loope
loopne
aaa
lods
xor
pushl
jns
jae
mov
jl
dec
rcl
xor
adc
xchg
fstpt
pop
andl
fcmovne
cmp
les
loope
lahf
fmul
mov
sarb
jmp
inc
test
insb
lods
out
sti
cwtl
lret
xchg
or
insb
lock
jno
lcall
xchg
push
add
ljmp
jmp
add
sbb
fcompl
fsubl
xchg
push
bnd
mov
aad
clc
pushl
xchg
cwtl
out
cmp
dec
ja
test
bswap
ljmp
sarb
pop
test
and
jl
loopne
push
jno
fcmovnb
xchg
or
out
sbb
shll
cmp
pop
roll
mov
lods
call
jmp
je
out
xchg
outsb
jno
xor
lahf
adcl
ss
jmp
jge
sub
out
jne
pop
ret
jns
sub
loopne
cmp
dec
cli
js
push
jns,pt
sar
ds
int
mov
je
dec
int
pop
sbb
push
pop
ss
cmp
push
add
mov
mov
lahf
inc
mov
xchg
cmp
call
mov
jo
popa
stos
mov
sti
xlat
push
dec
and
call
addr16
jl
in
lods
out
jle
jmp
sti
push
lods
mov
sbb
jb
loop
cwtl
repnz
call
loopne
inc
push
inc
bound
mov
in
sbb
add
ljmp
fs
pop
push
subl
and
dec
icebp
fcoml
movsb
filds
mov
fcomip
pushl
adc
subb
cmp
neg
gs
and
push
rolb
lcall
dec
sub
jae
mov
mov
adc
jle
lods
push
sub
mov
idivl
push
dec
jae
pop
std
pushl
jle
jle
aas
jmp
hlt
mov
sub
imul
add
jmp
sub
popa
shll
lret
lret
xchg
mov
xlat
out
cs
jg
add
call
outsl
or
push
dec
fildll
sub
push
xor
decl
jns
jmp
sarb
cmp
cld
pushl
jo
mov
enter
sub
mov
adc
cmpsb
mov
fcomip
add
inc
ret
decl
aaa
pop
shrb
dec
enter
dec
rcl
pushl
fldl
arpl
pop
add
lret
jecxz
inc
push
iret
dec
adcl
ds
mov
in
xchg
push
xchg
std
push
lock
cli
es
repz
jo
lret
push
cmp
es
daa
je
jne
stos
mov
or
iret
xchg
lahf
adc
loop
fimull
sarl
xchg
sbb
sub
loopne
test
pusha
sti
mov
out
jbe
iret
mov
dec
pushf
bound
dec
fwait
cmp
sarb
cmpsl
sub
jp
push
data16
aad
je
jecxz
ljmp
jno
out
pop
lahf
ret
fistpll
xor
ja
sti
cmp
imul
push
jb
lods
fnstcw
xor
jge
pop
cwtl
incl
fs
mov
int3
enter
lods
aam
lods
mov
test
mov
dec
pop
sub
sub
in
popf
out
repnz
xchg
arpl
mov
aas
jmp
or
inc
xchg
inc
popf
addl
bound
and
stos
cltd
cmp
pop
mov
xor
out
inc
cs
aam
das
xchg
call
push
test
or
cli
pop
in
mov
arpl
rcrb
dec
popa
fimull
scas
negb
in
dec
push
add
jp
mov
and
push
pushf
mov
incl
fmull
aaa
call
or
movsl
mov
ret
mov
incl
mov
subl
jg
jp
mov
jnp
test
mov
int3
or
add
dec
test
and
mov
xor
inc
leave
fdivrp
mov
mov
lock
push
pop
push
into
repnz
push
repz
sub
jnp
ja
jbe
call
test
cld
stos
pop
inc
aam
xor
mov
mov
xor
mov
or
cltd
bound
lret
or
mov
xor
fwait
incl
jge
jp
dec
pop
sbb
in
mov
sub
sub
adc
bound
xchg
pop
std
pushl
dec
int
rcrb
sbb
in
pop
es
loopne
arpl
adc
pop
or
rol
mov
mov
mov
lcall
loope
addl
cmp
cmp
push
cmp
cmp
mov
pop
movsl
inc
cmp
adc
jnp
sarl
cmp
loopne
incl
in
repz
js
sub
cli
je
ss
mov
psubsw
pop
jle
ss
fidivs
xchg
mul
mov
loop
inc
lahf
in
arpl
je
jmp
lds
mov
int3
popf
lods
dec
aas
aam
clc
lret
mov
sbb
fwait
pop
insb
pop
mov
mov
cmp
lahf
orb
daa
call
pop
push
std
ljmp
sbb
inc
out
int3
jns
cmp
mov
jp
sbb
jmp
push
lret
fnstsw
dec
ss
xor
das
outsl
jb
arpl
cmc
out
jnp
incl
adc
mov
jo
jae
or
fs
mov
mov
xchg
mov
adc
jg
ljmp
sub
jnp
pop
jns
pop
lods
icebp
inc
adc
mov
mov
xor
jmp
in
das
push
movsb
out
lds
cmp
xlat
movsl
jp
popa
sbb
rcll
scas
cmp
push
adc
jge
pop
enter
call
mov
out
clc
outsl
in
xchg
ljmp
xor
imulb
roll
adc
jp
decl
jne
inc
les
fmull
sub
out
repnz
shl
xor
add
mov
jmp
fcoms
es
mov
cmc
mov
lret
incl
sub
push
ja
xor
ss
ficomps
jl
sbb
ljmp
mov
outsb
repnz
pop
pushl
jmp
cmp
sub
sbb
push
lea
in
cmp
mov
stc
je
and
mov
push
push
and
push
lods
dec
test
imul
fbld
lea
pop
outsl
or
ds
xor
jae
mov
aam
add
mov
outsb
jne
pop
int3
in
pushl
jge
xor
xchg
dec
fnstsw
xor
cmpsl
fld
dec
push
adc
cld
fwait
decl
je
fimuls
shlb
cmc
mov
adc
pop
cmp
pushl
jne
sub
xchg
jo
jb
rcr
xchg
lret
xchg
pop
jp
cltd
jne
push
call
mov
inc
imul
pushf
leave
jle
adc
lcall
sbb
outsl
mov
mov
loopne
adc
pop
mov
xor
test
call
adcl
mov
add
pop
cmc
inc
popf
inc
movsb
xlat
add
decb
call
adc
inc
popl
out
mov
xchg
out
movsl
mov
cld
hlt
mov
mov
dec
jmp
fcomip
pushl
jae
out
jl
sbb
inc
push
shrb
stc
push
stc
mov
jae
jecxz
jmp
mov
or
popf
sbb
in
push
in
lea
push
inc
mov
lret
jle
decl
movl
ffreep
push
xchg
rorb
repnz
jo
data16
inc
shll
adc
bound
dec
out
out
incl
xchg
xor
inc
mov
arpl
or
or
rclb
outsb
pop
cmp
lea
incl
sub
nop
xchg
je
aam
es
pusha
sbb
xchg
insl
inc
sahf
push
ja
cmp
pushf
icebp
incl
cmp
jp
dec
sub
inc
int
inc
xchg
xor
int
test
imul
ljmp
das
dec
in
mov
push
adc
rorl
cs
mov
imul
fisttps
pop
sbb
sub
vaddss
lock
jle
add
pop
pop
clc
ja
push
out
or
scas
xchg
notl
inc
cmp
outsl
lret
adc
lret
out
pop
scas
daa
shrb
outsl
int
and
fsubl
test
jmp
das
inc
aas
jmp
clc
inc
mov
js
lods
xchg
sub
mov
jae
or
mov
mov
mov
pop
mov
sub
mov
fmulp
aad
into
test
repnz
loope
pop
xchg
jmp
xchg
cltd
mov
icebp
cwtl
cwtl
push
and
imul
jmp
mov
or
gs
push
ja
adc
nop
js
push
lret
loope
mov
incl
mov
jle
stc
lea
rclb
pop
insl
ss
push
xchg
out
xlat
stc
int3
iret
js
dec
in
sub
imul
flds
xor
out
cli
lcall
pop
int3
lock
arpl
dec
popf
or
ja
and
enter
js
lods
ret
mov
push
mov
pop
cmp
lock
xor
negb
mov
jg
loop
std
mov
pop
xchg
mov
mov
inc
cmc
inc
pop
into
aas
decl
mov
jle
push
pop
xor
imul
hlt
mov
jno
or
decl
jae
sbb
gs
cmp
sbb
sarb
shr
mov
mov
sub
sbb
gs
decl
mov
and
out
sahf
sub
push
inc
rcrb
jae
sub
frstor
sbb
xor
call
loopne
mov
jae
repz
pop
lcall
cmp
mov
and
pushl
outsl
popa
cli
sti
mov
stos
cs
lds
mov
push
adc
andl
jae
sub
lcall
stos
sub
mov
pop
xor
loopne
cmpsb
xchg
insl
cmp
mov
mov
mov
lcall
pop
push
dec
or
jmp
adc
jbe
add
bound
lcall
ds
mov
sub
mov
or
add
xlat
xor
jg
inc
aad
mov
push
xchg
imul
and
sbb
mov
fwait
sub
dec
lea
loopne
lods
call
fs
outsb
add
jp
cmp
addr16
andl
jb
mov
test
cwtl
dec
aad
and
or
mov
sub
add
cli
call
adc
lds
fbld
cmp
pop
cmc
push
sbb
inc
decl
pop
lcall
jnp
push
repnz
jns,pt
adc
decl
je
xchg
sub
and
pop
or
add
incl
add
outsb
jge
cmp
loopne
in
popa
inc
shll
inc
pop
ficoms
and
decl
popa
sbb
jns
es
push
pop
out
insb
push
pop
cmp
add
notl
push
jecxz
mov
or
push
arpl
sub
stos
shrb
adc
sub
mov
pushf
and
xchg
dec
shrb
out
sub
or
and
pop
int
fwait
out
call
cltd
push
add
int
sbb
add
jae
scas
inc
sub
negl
mov
push
and
or
test
mov
cmp
int3
ret
fs
incl
jmp
sbb
pushf
mov
cltd
dec
jb
fcomps
rcrb
in
jmp
xchg
mov
loop
aas
ret
cmp
aaa
lods
and
xchg
lcall
cmp
mov
outsl
push
adc
addb
and
decl
arpl
jecxz
leave
test
scas
leave
or
scas
adc
and
xor
jecxz
mov
clc
decl
push
fsubrl
add
dec
stc
mov
adc
pop
sub
and
xchg
ljmp
pop
jg
jmp
cmp
out
mov
jg
dec
cmp
out
cmpsb
fidivrs
lcall
sbb
xor
ret
enter
es
and
mov
mov
lcall
inc
movsb
mov
test
push
rcll
pop
outsl
sub
int3
call
xrelease
movsl
shl
jp
pop
fwait
push
dec
adc
sbb
inc
icebp
push
or
decl
sti
lret
mov
call
or
jle
popa
dec
cli
jl
scas
add
into
xchg
mov
xor
dec
dec
dec
imul
add
aas
loopne
push
icebp
out
push
mov
dec
ret
inc
xchg
aam
inc
ret
das
rcll
hlt
mov
decl
popf
ss
sbb
or
ja
jmp
dec
enter
pop
enter
dec
dec
jl,pn
iret
enter
cmp
incl
xor
clc
push
push
jae
cs
negl
jecxz
mov
call
xchg
inc
scas
orb
data16
sub
xor
mov
in
push
jp
inc
xchg
insb
or
sbb
sub
add
inc
mov
jle
stos
jmp
out
andb
daa
mov
subb
dec
fs
sbb
adc
fs
inc
es
insb
mov
cmpsb
push
stc
push
addl
sbb
dec
pop
push
stc
xor
cli
mov
inc
push
or
or
lods
jne
and
push
and
ds
mov
pushl
and
ljmp
mov
test
inc
out
pop
adc
mov
lock
mov
mov
scas
or
xor
fs
or
xchg
dec
mov
incl
mov
push
cltd
int3
cmc
and
outsb
stos
and
push
fst
jecxz
call
or
jmp
out
incb
pop
inc
dec
mov
jp
pushf
call
sar
cmpb
dec
push
stos
sahf
mov
outsl
std
xor
ret
mov
push
mov
add
repz
and
mov
mov
adc
call
lods
pop
jb
popa
cmpsb
or
xchg
call
sbb
xchg
popa
mov
xor
call
adc
mov
repz
fisubs
mov
call
std
push
xchg
push
jnp
and
or
dec
sub
subl
test
pushl
mov
out
mov
ret
xorl
or
push
test
fimuls
sbb
popf
pusha
sbb
incl
clc
adc
mov
xor
lods
inc
sti
cmp
ljmp
push
leave
dec
sbb
call
fisttps
jp
sub
xchg
fucom
pop
jg
cmp
ud0
sub
inc
mov
sub
adc
sub
jno
imul
call
fisubl
loopne
popf
fstl
sahf
test
cld
js
out
mov
lcall
scas
fwait
in
mov
mov
add
inc
dec
push
adc
jle
add
mov
faddl
lret
insb
mov
js
dec
jl
mov
xlat
push
xchg
out
pop
cld
decl
test
lahf
push
punpcklbw
loop
add
sahf
xlat
inc
mov
testl
pushl
test
sub
int
dec
push
pop
mov
or
mov
push
pop
mov
call
mov
adc
inc
in
inc
cmpsb
lret
mov
pop
pusha
dec
ja
lods
scas
ja
pushl
dec
push
hlt
fisubl
sbbb
fstpt
lret
xchg
nop
pop
repnz
add
sub
incl
or
cld
xor
fisubrl
ret
sub
shlb
sar
jmp
and
bound
rclb
and
jg
inc
xchg
repz
test
add
test
ja
mov
test
ds
adc
ret
icebp
ljmp
pop
test
rcrb
cli
dec
imul
mov
loopne
mov
push
stos
ret
loop
xorb
sub
dec
jmp
call
push
sub
push
pop
or
adc
test
in
rorb
aam
and
pushl
std
adc
fwait
jmp
xor
lods
stc
aaa
imul
or
lods
mov
call
fdivp
sahf
adc
out
imul
and
jl
imul
incl
jnp
cltd
and
mov
rcll
push
or
add
scas
sahf
mov
pushl
inc
imul
lods
add
jl,pt
aaa
pop
sub
cltd
jg
ss
flds
adc
aas
fstp
add
ljmp
test
out
jo
mov
pop
or
std
mov
int
pushf
mov
add
push
mov
add
inc
add
push
lods
test
test
pushf
sub
jmp
xor
test
push
in
dec
scas
xor
rcll
xchg
jmp
das
idivl
pop
std
decl
das
enter
int
cli
lcall
cmp
lods
aas
mov
shrb
ret
filds
cmp
leave
add
aad
stc
aam
pop
and
iret
pandn
ljmp
cmpsb
push
cmp
add
mov
stc
mov
jmp
mov
jne
ss
incl
cmp
adc
jmp
mov
shlb
push
mov
xor
mov
dec
shr
sbb
pushl
lcall
fdivrs
test
mov
icebp
es
jmp
pop
mov
mov
addr16
fdivl
cmp
js
mov
jge
jne
ficoms
cli
push
xchg
jl
and
add
sbb
fisubrl
inc
test
in
pusha
pop
pop
lock
outsb
or
ljmp
test
test
les
dec
adc
movsl
inc
ds
mov
pop
xchg
jmp
outsl
cmp
scas
or
sub
sarb
inc
enter
dec
mov
mov
call
imul
mov
add
ret
sub
pop
jo
pushl
nop
jge
jmp
fucomi
call
pop
nop
add
aam
movsb
inc
sbb
incl
mov
or
test
lret
pop
mov
cmpsl
pusha
scas
popa
repz
cmp
mov
cmp
xorb
adc
and
xchg
sbb
shll
add
sbb
in
out
mov
repnz
scas
cs
dec
and
cmp
scas
pusha
ljmp
push
cli
or
shll
push
test
pop
test
pop
xchg
pop
adc
and
pushl
xchg
mov
fsts
ss
sbb
pushf
dec
pop
jnp
mov
push
push
test
mov
lcall
push
jge
sub
push
adcl
pop
sbb
adc
repnz
mov
das
mov
in
dec
pop
mov
add
mov
shrb
insl
mov
insb
fcos
jmp
add
or
jmp
adc
and
cmp
cmp
call
pusha
stos
pop
xor
add
pop
dec
je
adc
pop
dec
outsb
cwtl
xchg
mov
lahf
push
lret
inc
js
dec
in
jb
enter
icebp
std
lret
mov
in
jo
imul
test
mov
pop
enter
loope
data16
cmc
mov
incl
add
cmpsl
inc
push
jmp
call
or
fdiv
callw
clc
pushl
bswap
in
ja
sub
and
sub
xchg
sahf
insl
xor
icebp
das
rcrb
arpl
adc
dec
mov
leave
ret
aam
cmp
addr16
dec
lret
je
or
xor
lcall
xlat
mov
sub
dec
jle
fs
rcrb
cmpb
inc
cmp
movsl
fs
lcall
call
push
not
xor
dec
dec
lret
js
cltd
jg
shr
xor
sbb
mov
fisubl
js
out
lret
mov
pusha
push
push
mov
push
in
das
mov
je
jb
movsl
into
xchg
std
xchg
pop
das
int
bound
sbb
cld
mov
int3
testb
pop
lahf
xor
cmpsl
adc
ljmp
mov
adc
and
xlat
in
test
scas
leave
call
xor
stos
add
xlat
mov
shll
inc
ljmp
or
int3
movb
xor
fidivl
xchg
lcall
jno
xchg
shlb
xor
mov
fwait
mov
and
outsb
dec
ja
mov
outsl
sub
stc
inc
test
repz
xchg
sub
popa
lods
pop
inc
push
stos
repnz
or
add
movsb
push
cld
ljmp
loope
mov
pop
lahf
mov
xor
lds
or
adc
push
aam
lcall
pop
int
xor
mov
insb
bound
incl
ror
sbb
mov
add
and
adcl
cmp
cmp
aam
ret
ljmp
sarb
and
dec
mov
adc
jle
lcall
ljmp
lea
pop
push
mov
cmp
or
call
and
addr16
shrb
mov
test
push
or
aam
push
movsb
mov
incl
pop
dec
xchg
pushl
push
sub
jmp
xlat
into
aas
dec
cmp
and
push
sbb
shll
adc
addr16
sarl
and
pusha
adcl
lcall
xchg
imul
inc
cwtl
sbb
jecxz
sar
sbbl
jmp
jecxz
jo
mov
dec
negl
in
pop
stos
mov
cmp
mov
push
jmp
xchg
loope
repnz
aad
mov
mov
jl
xchg
test
in
lcall
add
test
mov
loopne
jb
xor
add
xchg
fcomip
aaa
pop
mov
sub
sbb
dec
or
js
mov
cmp
pushl
movsb
push
jns
mov
or
push
mov
out
aam
in
add
pushl
leave
aaa
aam
xlat
and
inc
iret
loopne
sub
push
rcrb
push
adc
in
into
lcall
les
pop
cmp
adc
push
lret
ret
popf
mov
nop
mov
mov
faddl
lds
jle
pop
in
lods
inc
lcall
pusha
lock
adc
sbb
cmp
ljmp
push
adc
and
enter
insl
add
cmp
mov
adc
das
mov
icebp
fwait
mov
push
lahf
les
sbb
jg
cs
fldl
sbb
insl
pop
aaa
xlat
hlt
pusha
sub
add
jmp
in
inc
push
cmc
and
and
andl
jge
sbb
inc
jb
cwtl
add
icebp
push
call
cmp
jbe
out
scas
xor
sub
push
xor
into
mov
insb
mov
int3
test
push
hlt
fists
loopne
sbb
loop
sub
pushf
and
std
cmp
pushf
fs
das
xor
pusha
stos
cmpsl
xor
push
push
and
sub
inc
shrl
cmp
push
les
stos
fsub
pop
inc
sub
aad
mov
mov
lods
push
cmp
mov
scas
mov
lahf
call
mov
nop
gs
add
cmp
fcmovbe
inc
ss
and
mov
xchg
pop
popa
decb
lods
dec
sub
jecxz
ljmp
ret
xor
fildl
add
pushf
in
and
test
and
jg
out
push
inc
inc
sub
push
aam
rcr
mov
fs
cmp
fstpl
incl
cld
aad
ljmp
gs
and
push
mov
sbb
decl
xchg
rolb
cli
xchg
int
xchg
cmpsb
mov
or
sub
fimuls
mov
jmp
jg
rorl
sub
xor
add
inc
dec
xchg
lcall
inc
mull
aam
lcall
out
sub
fs
bound
xchg
pop
jne
add
jns,pt
ja
ljmp
pop
cli
mov
imul
std
outsb
dec
mov
fildl
sub
pop
call
mov
cmp
pop
xor
idivl
cmp
inc
aaa
int
mov
insl
ret
leave
sbb
icebp
mov
inc
lock
sub
call
pop
and
mov
mov
push
and
mov
cld
sti
je
inc
sub
pushl
xor
add
jmp
frstor
xchg
mov
sbb
cmp
ljmp
icebp
dec
jno
stc
mov
xchg
jnp
cli
call
push
mov
jb
xchg
xchg
add
lret
incl
repz
pushl
and
outsl
shrb
into
scas
inc
push
xchg
stos
dec
jp
lcall
ljmp
xchg
pop
sub
arpl
or
push
jns
and
fwait
scas
js
add
outsb
xor
arpl
lock
or
cmpsb
cmp
push
mov
push
out
or
lcall
xchg
cld
xlat
test
mov
adc
lea
adcb
or
bound
sub
jb
ljmp
pop
push
sub
outsl
aaa
mov
sbb
popa
fcmovb
mov
popf
fmul
outsl
ret
mov
add
incl
inc
xlat
loopne
cmpsl
lods
or
xchg
pop
in
ljmp
adc
aaa
jb
shr
mov
pushl
stc
ds
jae
jl
int3
adcl
dec
outsb
daa
rorl
push
inc
lcall
dec
stos
aad
or
jge
cmp
popf
nop
loopne
mov
adc
repnz
sar
test
lret
std
std
mov
fistpll
ret
xchg
mov
mov
pop
mov
lcall
mov
dec
loop
adc
mov
mov
mov
sbb
pop
mov
gs
fdivrp
xor
fmul
das
cmpsb
or
clc
cwtl
pop
xchg
fisubrl
jo
idivl
adc
pop
dec
cmp
jne
or
mov
and
inc
add
dec
pop
push
icebp
push
pop
jl
mov
decl
xchg
dec
testl
in
and
sbb
mov
inc
ljmp
pop
cmp
call
xor
add
cmc
ja,pt
aam
out
shll
cli
ficoml
pop
incl
inc
inc
xor
movb
scas
loop
inc
addr16
decl
mov
int3
jl
mov
pop
and
faddp
mov
sub
mov
pushl
mov
jl
xchg
scas
cld
sub
pop
popa
arpl
mov
jnp
je
push
adc
lcall
mov
imulb
daa
push
sbb
adc
push
outsl
out
jle
mov
call
fildll
sub
and
arpl
xlat
jb
into
inc
xlat
vsubss
push
sti
fadds
gs
test
inc
sbb
mov
and
adc
sbb
incl
mov
lods
lahf
fsts
cld
pop
movsl
loop
insl
iret
fldpi
lcall
decl
or
dec
sub
jae
mov
aad
je
loopne
mov
cli
xor
pop
cmp
dec
dec
mov
into
enter
xchg
arpl
fst
movsb
rolb
pop
and
or
xchg
lds
fmull
mov
or
add
xor
cmp
push
xor
sbb
push
popa
call
mov
jbe
sub
hlt
inc
scas
ss
and
insl
push
decl
cmc
xor
cld
fisttps
xorl
scas
rclb
xchg
sti
pop
mov
lahf
adc
mov
leave
mov
jmp
pushf
sub
dec
shll
add
pushf
loopne
sub
out
jno
cmp
ljmp
ds
insb
pop
int
jl
test
fwait
movsb
xor
xchg
jmp
cmpl
repz
ljmp
sbb
int
push
mov
jne
cld
cmp
cmp
push
xor
push
mov
or
lea
jno
lea
or
cmc
jg
dec
ljmp
out
sub
lods
fimull
iret
hlt
ret
lcall
enter
lahf
ljmp
dec
mov
mov
jbe
inc
jg
jp
bound
out
mov
pop
mov
adc
divb
mov
lcall
xor
sbb
sbb
sahf
es
sbb
mov
out
lcall
dec
js
into
mov
imul
cmp
sub
or
inc
xor
push
ss
pop
adc
test
jmp
or
sarl
mov
pop
or
jmp
push
xchg
out
cld
pushl
sub
inc
mov
push
push
sub
sbbb
cmp
pop
fbstp
jbe
adc
or
add
pop
icebp
call
mov
lcall
mov
push
cmp
mov
inc
lcall
pushl
inc
mov
mov
xorb
shrb
cmp
movsl
mov
jbe
out
sbb
sbb
push
jl
je
fildl
out
lds
mov
mov
sahf
mov
jp
ret
add
js
inc
or
pop
cmp
call
mov
loope
push
test
push
cmp
jp
fcomip
call
sti
pushf
pop
stos
icebp
mov
aaa
mov
pop
in
add
lcall
shrl
mov
mov
ss
xchg
xchg
dec
fcmovne
jnp
inc
sbb
adc
repz
lret
gs
or
cmpsl
add
add
sub
ljmp
and
gs
push
test
or
sbb
add
icebp
jmp
inc
jle
ds
fcoml
jb
cli
shlb
xor
fs
mov
or
les
repnz
xor
outsb
pop
fsub
test
insb
inc
pop
insb
decl
mov
cld
jb
jne
add
jp
repnz
adc
fs
mov
xchg
out
cs
dec
jo
jo
mov
mov
dec
or
xchg
dec
cmp
aam
jo
xchg
pop
movsb
sti
cmp
sbb
fbstp
call
hlt
lods
cmp
xchg
jmp
inc
nop
mov
add
sub
lods
xor
cmp
incl
in
inc
mov
lret
sbb
push
xor
insl
mov
bound
push
bound
mov
or
leave
sub
sub
mov
xor
std
or
jb
cmp
adc
pushl
mov
adc
fdivr
adc
inc
testl
mov
cmp
test
and
sub
repz
lock
push
pushl
notb
jle
dec
cli
lea
ret
and
inc
push
cmpsl
or
inc
or
xchg
and
icebp
mov
andl
push
adcl
incl
rorl
movsl
cpuid
cmpsb
rolb
cmp
and
and
jge
xor
jnp
jmp
lcall
fwait
mov
lahf
sbb
xchg
cltd
iret
add
or
jmp
pop
icebp
push
push
fadd
daa
cwtl
add
mov
pop
in
xchg
filds
xor
jo
cld
iret
push
sub
jp
pop
lock
decl
notb
outsb
or
jle
iret
mov
inc
lret
cmp
inc
cmp
call
bnd
adc
jmp
push
repnz
rcll
rorl
lret
inc
out
pusha
cmc
cmp
cld
decl
pop
mov
xor
aam
pop
and
mov
lcall
inc
rcll
xchg
int
mov
scas
pop
pop
push
ss
mov
insb
ret
mov
repnz
or
jmp
data16
mov
out
mov
aaa
jbe
sti
inc
cmp
outsb
or
sbb
decl
jo
xor
dec
enter
es
jae
mov
add
and
dec
aad
fistl
and
call
or
jmp
push
mov
xor
mov
sub
data16
sub
pop
pop
out
js
mov
cli
push
std
mov
fwait
jp
jmp
cmp
fstps
inc
push
incl
push
push
cmp
xchg
mov
test
cmp
fdivrs
mov
xor
xchg
push
mov
mov
mov
outsb
xchg
test
arpl
mov
decl
pop
add
stos
ja
push
dec
test
aaa
xlat
in
inc
roll
lcall
ficomps
into
fimuls
mov
es
sub
sbb
daa
movsb
pop
pop
call
loopne
inc
push
push
sbb
rcrl
adc
lahf
loop
pmovmskb
add
pushl
nop
push
ret
cmp
jp
into
lods
cmp
inc
cltd
in
mov
ficomps
or
fistpl
sti
inc
mov
cmpsl
push
xor
push
lret
cmp
mov
stc
cwtl
jecxz
in
shl
ret
jo
mov
dec
ljmp
ficoms
jns
dec
push
pop
out
jns
inc
jb
movb
add
mov
sub
ficomps
jp
lods
pop
lahf
xchg
rclb
jbe
stos
out
xor
xor
loope
popf
push
scas
ljmp
pop
rcrb
mov
xchg
jge
and
loope
mov
jae
dec
pop
pushf
pop
fdivrp
sbb
aaa
loop
roll
pop
xor
dec
adc
lock
call
mov
loop
shlb
outsl
bnd
xchg
scas
mov
aam
lahf
lcall
inc
xchg
aas
outsl
sbb
mov
rolb
popa
rcll
in
fwait
mov
sbb
jmp
int3
ds
aaa
fcomi
jge
jecxz
dec
les
shlb
in
xchg
hlt
push
fadd
popa
stos
loope
decl
push
pop
lret
mov
add
out
jae
rorl
fcos
mov
nop
and
dec
mov
test
scas
xchg
mov
pop
stos
inc
call
outsb
xor
lret
test
add
hlt
and
clc
int3
sub
xchg
insb
lcall
lcall
jae
mov
iret
pop
cmpl
or
cwtl
mov
call
xor
xchg
iret
push
mov
sbb
push
frstor
adc
mov
push
shlb
pop
daa
ret
push
mov
icebp
mov
jle
inc
add
pop
jle
or
mov
mov
adc
call
mov
mov
jno
xlat
ss
xor
pop
fs
sahf
dec
jo
inc
ljmp
jae
mov
test
sub
jge
push
shl
cmpsl
idivl
ljmp
pop
jns
sub
rcrb
mov
mov
mov
pushl
mov
pop
mov
int3
stos
xchg
out
fsts
mov
shl
lds
pushl
cld
cmp
ja
xchg
ja
sbb
movsb
mov
or
sub
ljmp
cld
jp
notb
mov
sbb
int
fistpll
ret
sarb
loopne
call
add
vdivsd
adc
dec
mov
int3
outsb
call
insb
adc
sub
fs
call
loopne
jp
and
out
es
cmp
paddb
mov
sub
jmp
subl
pusha
cld
rcrl
loopne
xor
std
pusha
or
jbe
mov
pop
fwait
xorb
pushl
fimull
daa
pop
add
movb
xchg
lods
hlt
inc
and
pop
mov
sti
and
mov
jl
aam
mov
push
popa
push
jge
imul
outsl
stos
fistpll
ret
xchg
adc
pop
xchg
sbb
sahf
xor
sti
test
or
mov
out
pop
mov
sbb
sahf
fdivl
jecxz
nop
or
and
pop
cmp
decb
dec
aam
outsb
adc
dec
stc
mov
jnp
jbe
imul
mov
psubd
pop
repnz
or
in
mov
cli
aam
outsl
cmp
imul
stc
sub
movsl
dec
rcr
inc
cld
js
jg
jo
sarl
aas
insl
scas
pop
lret
scas
inc
pop
push
add
notl
es
pushl
test
jb
lahf
adc
push
mov
xor
dec
lock
xchg
hlt
push
incl
dec
inc
adc
das
cmp
jnp
jmp
push
mov
add
cmp
incl
sub
int
inc
xchg
loop
mov
pushf
mov
mov
outsl
xchg
ud0
scas
pushl
mov
sub
pushf
popa
or
out
add
push
add
decl
xor
jns
stc
das
add
mov
ljmp
dec
pushf
sbb
and
sahf
push
rorl
xchg
sbb
add
xor
push
outsl
in
rcl
cli
test
aaa
mov
mov
push
cmp
ljmp
cmpsb
cmp
lods
cmp
and
jle
mov
cmp
fcomip
call
push
xor
pop
pop
push
cmp
lret
push
dec
push
stos
jns
shr
xor
ljmp
pop
and
shll
iret
mov
mov
decl
loopne
xchg
or
push
popa
xor
and
or
fs
testl
leave
pop
cmc
sub
mov
cld
push
cmpl
jne
adc
incl
add
andl
adc
cli
shll
ja
pop
ss
call
mov
add
push
and
dec
or
pushf
repnz
xchg
ljmp
call
into
mov
fadds
and
mov
mov
test
adc
imul
cmc
push
fisubs
bound
push
fstl
andl
ljmp
pop
sbb
pop
cli
mov
mov
push
outsb
in
pusha
insl
jmp
mov
or
nop
out
push
and
jb
sub
mov
dec
push
popa
jp
lds
cmp
ljmp
loopne
push
jns
out
fbstp
sbb
xor
call
lock
sbb
loop
inc
mov
cld
mov
push
mov
lcall
or
stos
inc
test
push
lods
ja
test
stos
mov
sbb
sub
loopne
sbb
sbb
decl
add
fs
dec
in
popl
xchg
shrl
jne
mov
push
addb
dec
bound
cs
xchg
scas
movsl
mov
sbb
xchg
aaa
mov
int3
mov
incl
les
mov
mov
fstpt
or
xchg
push
aas
nop
mov
fcomip
lcall
and
xchg
pop
sahf
and
or
sub
jmp
lcall
mov
and
scas
pop
popa
jmp
push
adc
stos
xchg
pushf
outsl
sub
mov
lods
mov
cld
call
xchg
or
xor
cmpsl
adc
into
les
mov
or
mov
xor
imul
inc
test
arpl
bound
jg
inc
pop
push
in
pushf
into
sbb
into
lock
cmp
ss
or
sar
xlat
jno
xchg
pop
scas
sti
mov
and
or
in
cmpsl
and
lods
cld
loopne
push
test
or
fisubrs
xchg
mov
xchg
adc
or
adc
dec
jnp
adc
mov
pop
cmp
lods
add
adc
inc
mov
xchg
jg
sahf
loop
pop
xlat
jp
add
repz
mov
fbstp
out
mov
data16
in
jg
dec
ffreep
ja
inc
push
and
fwait
clc
mov
fcomps
jnp
aam
pop
mov
ljmp
pop
pushf
test
leave
and
nop
lods
notl
aaa
pop
adc
test
fs
mov
aad
mov
push
stos
test
pusha
xchg
das
sub
jo
ret
out
in
scas
mov
decl
mulb
arpl
cmp
jbe
mov
fs
add
xchg
push
push
inc
mov
dec
stos
jge
cmp
inc
mov
push
xchg
daa
add
xchg
ja
dec
jmp
pop
xchg
jg
pushf
imul
out
call
roll
stos
or
inc
or
daa
test
in
dec
jbe
ret
daa
stc
mov
into
and
incl
js
popf
test
xor
jl
jecxz
inc
loope
and
adc
mov
xorb
rcrb
test
ficoml
sub
sti
sub
decl
rorb
int
loopne
fadds
aas
fmuls
lcall
cmp
pushf
jns
filds
mov
repz
adc
cli
loopne
negb
loope
enter
iret
and
inc
dec
push
call
mov
sub
fmull
ja
cld
incl
cmpb
xchg
sub
pop
inc
push
pop
pushf
pop
or
cmp
jmp
adc
mov
shll
pop
mov
mov
pop
mov
call
or
inc
mov
inc
fisubl
in
cli
mov
incl
cmpsb
dec
out
movsb
or
std
fbld
mov
dec
icebp
push
push
test
ljmp
outsb
inc
xchg
and
ret
add
inc
xor
jae
movsb
dec
mov
stc
sahf
outsb
test
cli
dec
stos
mov
gs
hlt
add
pop
xchg
int3
push
mov
cmp
and
lock
mov
and
mov
jo
fidivs
lods
and
mov
lahf
lcall
lret
roll
nop
std
loop
or
testl
dec
daa
filds
push
push
mov
add
cmp
ljmp
ss
repnz
mov
push
xchg
dec
ja
and
jg
or
xor
push
push
fdivl
ds
cmp
ljmp
sarl
cwtl
paddsw
sar
lret
push
mov
nop
xor
jb
pushl
gs
xor
arpl
dec
out
movsb
popl
xorl
fisubs
ljmp
gs
sbb
sahf
sub
xchg
leave
je
cmpsb
clc
pop
imul
mov
mov
cmpb
int
xchg
pop
arpl
sub
aad
ljmp
dec
push
push
adc
mov
inc
cmpsb
loopne
outsb
dec
js
lahf
mov
push
lock
jmp
and
enter
inc
repz
pop
rcl
out
or
call
je
aam
out
test
int
cmp
call
or
pop
inc
divb
add
ljmp
dec
xlat
lahf
daa
inc
std
lret
push
pop
in
dec
inc
add
incw
adc
jl
int
mov
push
mov
xchg
leave
and
das
incl
mov
push
push
pushf
cwtl
flds
xor
int
dec
icebp
jo
shr
sub
pushf
mov
decl
and
andl
stos
lods
mov
test
divb
adc
push
xor
pushl
mov
inc
or
sub
cmpsl
in
mov
push
xchg
sar
call
movsl
mov
arpl
pop
fld
add
outsb
fistps
gs
lods
jo
xor
jmp
das
fadds
movsl
outsl
adc
dec
lock
xchg
imul
aad
mov
adc
jg
fcomip
cwtl
mov
mov
cmp
jbe
data16
sub
lcall
inc
inc
jmp
xchg
add
push
adc
movsb
lods
mov
add
mov
push
lods
rorb
loopne
stos
addr16
int3
xchg
mov
xor
fisttpll
fcomip
nop
pop
ljmp
out
leave
add
cmpsb
xchg
mov
lret
sub
pushl
call
cmp
cltd
sbb
or
xchg
ret
mov
mov
jmp
pop
int3
sahf
sbb
lcall
ret
in
lret
pop
mov
adc
insb
adc
decl
jb
sarl
lcall
aad
sahf
inc
lahf
add
add
aas
mov
insb
sbb
jno
push
sbb
adc
in
or
call
jb
jae
push
pop
sbb
in
out
lcall
gs
fists
sar
decl
stc
mov
sbb
xorl
inc
mov
mov
loopne
pop
negl
lahf
inc
lahf
sbb
into
imul
fmul
hlt
xchg
test
xorb
mov
jns
pushf
dec
mov
mov
adc
in
loop
jbe
icebp
push
aas
cld
pop
xchg
fldl
call
add
loop
sahf
add
lcall
pop
xor
dec
xchg
push
mov
push
adc
push
pop
or
mov
xchg
push
mov
out
push
incl
cli
sbb
notb
dec
lret
test
or
xchg
xor
ljmp
cltd
mov
seto
sbb
sti
hlt
cltd
and
cmpsb
nop
mov
pop
out
lcall
xchg
or
testb
into
or
ret
jle
and
cmp
daa
xor
cwtl
aaa
xchg
sub
cmovno
lods
push
add
decl
ffreep
call
fcoml
out
mov
daa
scas
cmp
nop
fldcw
stos
sbb
stc
fwait
lret
cli
scas
addb
adc
es
repnz
enter
or
jns
ss
push
imul
mov
clc
es
sub
cmpsb
aad
jl
or
int
call
data16
pop
sbb
and
mov
faddl
mov
lods
test
call
adc
inc
nop
mov
lcall
inc
push
jo
dec
mov
pop
push
std
sbb
and
cld
loopne
aad
push
out
xchg
jns
decl
dec
pop
lcall
add
sub
call
int3
fs
jle
add
xor
pop
dec
xchg
xchg
clc
ret
xor
cmp
inc
or
lcall
jmp
sbb
mov
leave
dec
fistl
sbb
call
mov
lea
push
xchg
addr16
or
addr16
enter
mov
stos
sub
int
adc
das
dec
cmpsl
jbe
je
mov
jns
push
popf
xchg
out
mov
icebp
sbb
rol
cmc
in
out
dec
dec
push
mov
pushl
rcrb
or
jae
pop
lret
add
movsb
or
cld
lret
mull
mov
aaa
std
decl
cwtl
addr16
aas
cltd
roll
add
insb
imul
xor
xor
dec
dec
test
pusha
jmp
and
repnz
aaa
or
jmp
mov
out
inc
xor
scas
imul
aaa
sbb
loop
mov
movb
pop
xor
fiadds
movsb
push
out
out
test
dec
mov
mov
pop
mov
and
imul
push
jnp
arpl
test
decl
pop
cltd
jns
lcall
lcall
push
ret
cwtl
ljmp
xchg
fcmovnbe
mov
clc
outsb
mov
cmp
xchg
lret
and
mov
ficoml
pushl
in
sub
mov
jb
es
push
movsl
mov
test
push
into
insl
sbbb
cld
decl
adc
adc
das
sahf
imulb
mov
inc
or
mov
mov
pushl
mov
mov
fwait
push
sbbb
push
xchg
pop
jg
push
pop
inc
xrelease
ja
adc
sbb
cmp
and
push
sub
add
mov
lock
push
jno
cld
add
lcall
jp
pusha
mov
or
and
lahf
add
clc
sbb
push
mov
clc
xchg
mov
incl
pop
rorl
cmp
imul
push
inc
cmp
add
xchg
ljmp
mov
cmp
fisubrl
lcall
sbb
cmpsb
cwtl
stc
ds
and
es
icebp
in
push
icebp
sub
fwait
in
out
shlb
rcl
jb
inc
outsl
xor
inc
lock
lods
mov
push
push
decl
push
xchg
push
and
movsl
fs
addr16
ret
and
cmp
mov
adc
outsb
stc
cmpsb
and
aam
pop
add
push
xor
shrb
daa
hlt
sub
loop
and
pushl
out
sti
scas
arpl
xor
test
push
or
or
adc
aas
or
mov
sub
outsl
xchg
mov
movsl
pop
sub
daa
jg
movsl
sub
pop
aad
pop
in
jmp
pushl
jo
das
adc
andb
call
lods
mov
mov
outsl
inc
mov
std
icebp
mov
dec
fisttpl
sti
enter
mov
popf
jns
das
push
std
fildll
adcl
and
out
testl
fists
mov
push
sub
imul
scas
loope
inc
push
jmp
sub
fs
call
stc
in
out
fistpll
lret
sbb
call
fsubrs
jp
push
int3
fistpll
lods
lret
pop
inc
jbe
push
nopl
outsb
dec
mov
gs
cmp
mov
jo
and
mov
ljmp
outsb
push
jmp
test
subl
pop
mov
stos
call
pop
mov
fnstsw
pushf
xor
out
adc
inc
ja
mov
mov
mov
clc
cmpsb
jmp
mov
xchg
jg
jp
aam
cmpsl
fs
pushf
adc
mov
mov
movsl
mov
sbb
mov
jb
mov
cli
cmp
cmp
mov
test
sub
ss
ja
sti
xlat
mov
or
cmp
mov
jge
sahf
adc
cmp
xor
push
test
lret
aaa
inc
inc
bound
movsl
adc
fildll
push
in
inc
and
orb
dec
lahf
push
and
or
mull
jnp
mov
dec
aam
sbb
inc
push
adc
jmp
sbb
sbb
mov
mov
cwtl
les
pushl
xlat
cmpsb
and
das
push
jb
sbb
xor
sar
cli
lcall
int
movl
popa
jns
adc
ficompl
cmpsl
in
or
ljmp
mov
cmpsl
or
or
fldl
std
test
mov
lods
xchg
movsl
add
dec
jg
arpl
loop
and
sub
pop
aam
jg
fs
int
add
inc
pop
stos
add
call
adc
jbe
sbb
stos
mov
sahf
test
pop
jecxz
inc
fadds
ljmp
mov
leave
in
mov
mov
lret
cld
popa
movsl
mov
jg
mov
out
fcmove
jecxz
adc
ja
pop
fucomi
sub
cld
insb
cli
and
std
xorl
cwtl
jl
xor
jmp
jg
adc
inc
pop
or
dec
in
scas
and
push
repnz
add
call
std
mov
pop
pop
push
ja
movsb
jl
dec
std
mov
test
inc
push
call
fistpll
xor
repnz
or
adc
ret
pop
mov
insl
out
sub
push
js
loope
popf
jbe
xchg
push
ja
scas
adc
fwait
push
in
subb
gs
inc
fsubrl
mov
jl
xor
push
cmp
mov
push
or
icebp
call
lcall
clc
push
cmp
inc
add
movsb
adc
dec
xchg
jb
xchg
push
pop
int3
scas
test
lock
dec
es
stos
dec
lcall
les
mov
cmpsl
aaa
push
mov
addr16
cltd
dec
repnz
jnp
push
and
pop
sbb
mov
dec
gs
mov
pop
notb
lcall
ret
jecxz
xchg
dec
add
push
movsb
imul
xchg
xor
out
inc
cmp
pop
add
add
iret
out
mov
js
inc
mov
scas
cmpsl
popa
adc
xor
sub
xor
mov
sbb
test
mov
mulb
daa
das
inc
lcall
icebp
pop
hlt
insl
push
or
cmpsb
aas
add
and
push
xchg
movsb
jo
inc
mov
and
inc
xor
sub
mov
das
push
fs
shl
sub
mov
into
fdivrs
inc
lcall
leave
rcr
pushf
xor
mov
insl
pop
pop
cs
insb
sub
xchg
ljmp
inc
sahf
and
adc
insb
fimull
xlat
pop
leave
mov
and
mov
es
pushl
pop
hlt
mov
adc
sarl
out
inc
jo
jge
jecxz
std
clc
mov
cmp
cld
sahf
fnstenv
xor
inc
and
push
clc
mov
adc
cs
lods
fiaddl
cli
int3
daa
movq
xchg
xchg
loop
mov
mov
je
incb
fcmovnbe
pop
lds
xor
push
bound
mov
aaa
jg
out
pushl
mul
inc
mov
fsub
fld
push
shlb
les
or
jb
xchg
insl
setb
cwtl
ljmp
xchg
stos
adc
in
repz
cwtl
ja
mov
lcall
inc
testb
mov
stc
adc
adc
inc
sub
push
sbb
loopne
ret
jmp
sbb
adc
into
js
jge
adc
ret
repnz
enter
cmp
jo
jg
lea
adcl
mov
lock
dec
adc
inc
je
cmp
dec
lcall
mov
xor
popa
jbe
int3
inc
sar
lcall
les
add
pop
ljmp
outsb
mov
imul
pushf
je
push
pop
and
pop
shrl
ljmp
xchg
hlt
sbb
inc
mov
push
sub
pop
push
sub
lcall
cld
mov
or
and
pushf
mov
iret
rcl
aas
mov
mov
stos
in
and
xchg
sbb
fdivl
in
xchg
dec
pop
and
clc
jmp
je
adc
sub
test
lret
lea
dec
sbb
mov
xchg
mov
shl
jmp
lods
pop
int
and
xor
ja
jns
mov
mov
decl
popf
dec
pop
fadds
mov
int
push
adc
inc
loop
cld
add
fwait
in
es
out
lcall
or
int3
dec
jno
xchg
add
mov
mov
dec
lret
repz
jbe
leave
leave
push
call
cld
int3
mov
inc
mov
clc
cmp
ljmp
cmpsl
lock
dec
lea
pusha
call
jnp
or
jmp
cmpsb
mov
daa
imul
xor
test
xor
sbb
ds
lods
sbb
and
fildl
inc
popf
pop
add
pop
test
addl
sub
mov
loope
push
pusha
int3
fcomps
ret
fldt
add
sahf
clc
pop
jmp
adc
call
pop
xchg
pop
es
incl
add
inc
mov
add
leave
push
and
out
icebp
les
aam
jo
jg
mov
add
stos
fimull
inc
xor
mov
pop
mov
push
push
inc
mov
push
inc
cmp
imul
xor
sub
arpl
loopne
pushl
pop
mov
pop
ror
imul
popf
ja
dec
push
mov
jmp
xchg
cs
push
outsl
outsl
lret
adcb
cwtl
popf
lds
arpl
sti
jb
mov
jmp
dec
je
pop
push
pop
push
rcr
inc
mov
cmpb
or
clc
movsl
std
jge
lahf
jns
push
mov
or
call
scas
push
in
lret
dec
outsl
sbb
sbb
sub
pop
and
fbld
dec
add
sarb
pushl
in
sbb
mov
loopne
jecxz
ds
ja
incl
cld
fwait
pop
clc
nop
rolb
sbb
jno
das
push
mov
hlt
fstl
loop
cwtl
mov
nop
clc
or
mov
push
aam
push
nop
enter
data16
outsb
into
jmp
incl
xor
push
rcrl
sub
mov
stos
sub
inc
addl
jecxz
data16
into
adc
call
push
mov
cmc
mov
dec
jecxz
cmpsl
mov
push
mov
in
mov
pop
adc
fdivrs
int3
push
stos
mov
fwait
pop
ucomiss
push
fdivl
fcomip
lcall
lock
mov
mov
js
mov
mov
fcomip
movsl
cmp
push
pusha
sti
and
shrl
dec
std
pusha
sub
dec
cmc
xor
push
fmulp
push
rcr
pop
jp
jmp
pop
hlt
or
adc
jmp
aad
mov
outsl
pop
ja
xlat
jbe
jo
pop
mov
adcl
mov
cmp
xor
ds
rclb
mov
dec
enter
decl
mov
fcompl
and
xchg
fs
fisubrs
jne
xlat
mov
push
sti
cmc
lret
loopne
or
incl
pop
sti
js
sbb
push
fsub
inc
push
lock
hlt
sub
sub
jnp
fidivl
lcall
cmpsl
out
cmpsb
data16
push
ffree
stos
rol
cli
loope
mov
fstl
pushl
fisttpll
adc
fmuls
popf
popf
test
sahf
nop
inc
jbe
lock
cmp
movsb
data16
mov
movsb
adc
jle
cmp
imul
bound
mov
scas
mov
stos
mov
icebp
lock
int
push
push
jb
loope
sub
test
call
and
xchg
mov
sbb
sbb
popf
leave
xchg
mov
pushf
xlat
stos
loopne
rorb
mov
cmp
lock
decl
sbb
add
aaa
sbb
movsl
jo
mov
xor
decl
cmp
fisttpll
repnz
dec
pop
or
cmp
and
sub
jg
cld
inc
mov
mov
sahf
jbe
and
ljmp
test
shl
xor
mov
dec
fbstp
es
cmp
inc
pop
insb
cld
es
mov
rcll
orb
out
loope
sub
aad
mov
roll
mov
inc
xchg
xor
scas
scas
rcl
scas
mov
dec
test
inc
ds
out
mov
cmpsb
push
stos
sar
jmp
mov
jnp
aaa
dec
idivb
clc
fwait
insl
fwait
sbb
mov
in
loop
jg
jle
pop
mov
sti
sub
fcoms
mov
sbb
jl
push
out
mov
pushl
movsl
idiv
jne
mov
daa
addr16
cmpsl
pop
mov
jne
idivb
jg
decl
sub
cmp
xchg
xchg
pop
xor
push
mov
push
add
cs
sub
outsb
and
enter
sub
xor
inc
cmpsb
fs
pushl
add
jp
jmp
dec
fiaddl
imul
lds
and
ljmp
mov
andl
sub
cmp
int3
lahf
mov
cld
sbb
lea
testb
outsb
xchg
iret
js
or
loope
leave
addb
mov
incl
sub
sbb
test
jmp
push
or
push
ss
mov
aad
call
call
jno
arpl
outsl
mov
cmp
sub
mov
call
add
fidivrs
stos
ljmp
fisubrs
inc
jmp
mov
shrb
loop
loop
lret
clc
push
add
pop
inc
sbb
mov
or
sub
outsl
ret
mov
rcrl
andb
popf
pusha
pop
mov
xor
incl
imul
adc
xlat
cltd
aaa
pop
lea
lahf
aam
add
jg
pop
jmp
dec
loop
sbb
dec
inc
fsubs
out
enter
idiv
mov
sbb
jmp
lea
pop
hlt
decl
inc
or
adc
inc
xor
mov
in
add
dec
mov
aad
jmp
push
ss
decl
pop
push
pop
xor
iret
pop
fidivrl
mov
mov
mov
jmp
mov
leave
push
cmp
std
cli
dec
mov
mov
iret
push
data16
mov
push
ja
jb
lods
adc
decl
xchg
fxam
adc
jle
mov
outsl
sti
or
xchg
fsubrs
es
pop
and
inc
decl
push
test
and
shrl
inc
stc
xor
sub
pop
call
push
xchg
mov
sarl
in
pop
inc
push
sub
lods
scas
ret
and
pushl
lcall
jne
and
sbb
leave
inc
push
mov
fnstenv
fildll
call
call
lahf
sbb
xor
das
push
hlt
adc
je
fmull
lods
mov
inc
fidivrl
ljmp
call
orb
fcmovnbe
test
mov
aaa
jmp
xor
fcmovnb
cltd
shll
neg
jle
mov
es
aam
jbe
dec
sub
call
stos
out
ljmp
rcrl
cmp
mov
cmp
lcall
decl
fisubl
aas
test
inc
rcrb
repz
sahf
ret
incl
dec
inc
xor
pop
jns
cltd
mov
lret
xor
stc
inc
push
mov
cli
sbb
push
ja
stc
call
dec
in
xchg
jl
into
in
mov
mov
in
insl
scas
dec
add
add
sarl
movsb
stos
pop
xor
ljmp
add
push
inc
clc
push
lahf
lret
xchg
test
out
push
inc
adc
xlat
jle
jmp
jmp
and
cmp
lret
jno
stc
add
ljmp
lock
jl
fs
add
movb
cmp
out
insl
ljmp
add
cli
imul
xor
es
out
imul
xlat
sbb
push
sub
inc
pop
mov
or
or
scas
outsb
aas
xchg
jae
xchg
lock
lods
call
je
call
std
decl
xchg
fbstp
sbb
sahf
js
jecxz
or
pop
jg
call
mov
dec
lahf
stos
out
xor
stos
inc
mov
pop
ja
ret
notl
pushl
test
mov
push
xchg
test
push
adc
andb
pop
xchg
mov
mov
cli
xlat
movsl
jbe
xchg
arpl
dec
mov
mov
xor
jne
out
jmp
push
out
sahf
cmp
std
pop
arpl
movl
cltd
aam
decl
call
xchg
insl
push
mov
cmp
adc
xchg
ret
repnz
xchg
clc
ljmp
shll
dec
ret
pop
in
sub
push
inc
in
cmp
pushf
arpl
mov
inc
inc
ljmp
cmp
test
out
push
lahf
in
movsl
add
adcl
mov
repz
aam
mov
push
movsb
or
jg
jmp
bound
test
mov
js
cmp
and
fisubs
xchg
lods
std
xor
ror
pop
lds
daa
mov
sbb
jp
dec
insl
pop
mov
pushl
cltd
lods
arpl
mov
scas
mov
mov
and
ljmp
sbb
mov
jmp
ljmp
out
xchg
or
sbb
mov
or
es
pop
shrb
aaa
dec
pusha
sbb
xor
enter
dec
repz
ljmp
scas
lods
fcoms
cmp
inc
loop
jle
sub
outsl
ss
in
mov
mov
mov
xor
push
out
dec
mov
xor
or
pop
and
mov
das
mov
push
shrb
out
mov
lret
into
mov
xlat
or
pushl
testl
icebp
mov
imull
mov
les
xor
push
mov
aaa
jle
inc
adc
les
dec
add
mov
incl
in
jge
sbb
cwtl
adc
push
xchg
call
or
dec
jp
mov
mov
and
leave
lret
jl
sub
aad
movsb
lret
jg
mov
ljmp
sbb
dec
sub
add
fbld
push
cmp
sub
push
adc
push
pop
cwtl
arpl
xchg
call
js
mov
ja
cwtl
and
incl
jno
data16
adc
inc
aaa
pop
mov
add
decl
jmp
das
cmpsb
or
push
shrb
movsb
add
xlat
sbb
and
call
out
cmp
test
sbb
les
enter
das
aam
sub
mov
adc
loopne
ss
xchg
pop
xchg
arpl
mov
push
jle
fisubrl
cmp
jmp
std
pop
sub
and
lret
add
xchg
insb
pop
dec
push
repz
ret
clc
fidivs
bound
add
cmc
inc
movsl
das
cmp
pop
ret
sbb
jb
mov
add
repz
out
fimuls
add
cmpsb
mov
cmp
mov
inc
jb
cmpsl
lods
pop
lods
pop
cmpsb
sbb
scas
push
dec
daa
addb
jmp
aam
fcomip
decl
dec
inc
scas
add
scas
pop
xor
gs
pushf
adc
bound
decl
pop
out
test
adc
xchg
or
loop
imul
pop
stos
mov
ljmp
mov
inc
div
xchg
adc
inc
adc
cltd
xchg
sbb
adc
lret
mov
pushl
mov
or
sub
divl
jnp
lods
push
dec
iret
lcall
ror
out
push
lcall
test
insb
scas
fdivl
sbb
pushl
out
jns
adc
outsb
sub
dec
mov
xchg
leave
mov
iret
int
sti
push
lret
call
rcr
or
mov
sbb
mov
aam
push
sbb
mov
bound
test
das
sar
push
dec
add
mov
out
push
mov
jg
in
adc
cld
fcmove
popf
jmp
pop
aam
sahf
out
and
or
scas
jbe
jge
sbb
pushl
in
mov
inc
test
addr16
arpl
dec
and
incl
loopne
in
popf
mov
cmp
xor
mov
and
imul
jnp
decl
add
lea
and
inc
aad
sbb
sbbb
bound
sahf
and
lcall
test
sbb
push
fcompl
and
iret
fcmovnb
clc
ret
leave
fsubrl
fildl
ljmp
mov
fyl2x
das
out
jae
or
xor
xchg
sub
mov
call
push
mov
lret
notb
out
dec
or
or
mov
out
and
adc
lods
fstp
addr16
or
mov
pop
decl
loop
movsb
testl
or
inc
insb
adc
sub
stos
loope
or
jg
jge
scas
push
adc
cmc
mov
inc
xor
inc
adc
clc
mov
jb
push
ja
call
in
add
fisubrl
mov
scas
clc
fildll
hlt
sub
je
divb
test
shrb
scas
fisttps
jns
ja
in
out
nop
in
loop
fistpl
inc
xchg
or
roll
cmp
lock
pop
xchg
fmull
pop
inc
xchg
mov
mov
addr16
inc
push
mov
call
jg
dec
xor
aam
sarl
pop
into
data16
add
and
sub
pushl
add
push
add
mov
mov
jg
mov
mov
mov
leave
mov
decl
or
icebp
mov
lret
test
push
or
or
lcall
jecxz
mov
jp
adc
jecxz
gs
ds
lcall
jbe
mov
mov
mov
xor
mov
push
fs
test
inc
loope
pop
pop
mov
stos
ror
dec
jno
pop
arpl
mov
jbe
xchg
mov
push
push
insl
ljmp
cmp
lods
xchg
inc
xor
das
cmc
cmpsl
cmp
into
cmc
ss
add
jecxz
jmp
add
push
push
or
mov
add
mov
pop
sbb
outsb
enter
or
loop
or
sub
xor
out
cli
decl
jecxz
cli
fdivl
movsb
cld
push
aas
fists
mov
decl
inc
xor
int3
mov
and
test
stos
push
adc
sub
decb
fwait
mov
adc
ljmp
shll
test
mov
mov
xchg
int
dec
ljmp
faddl
xchg
stos
js
push
ss
cli
neg
rolb
imul
lock
sbb
inc
inc
sub
dec
imul
mov
jmp
xor
sti
rorb
sbb
push
mov
jns
mov
cld
xchg
std
or
push
push
in
jmp
sub
xchg
pop
test
xchg
jmp
dec
cs
dec
mov
rcll
es
mov
fistpl
cmp
movsl
cmp
aad
incl
mov
cs
dec
jb
loope
and
addr16
fcomps
inc
add
call
ds
aas
lea
jns
lahf
cmp
xchg
in
mov
mov
faddl
imul
push
ds
add
fbstp
aam
repz
adc
call
jb
or
mov
fldl
repnz
jl
mov
xor
lcall
lahf
jne
jae
ret
int3
ror
lds
movsl
pop
icebp
imul
mov
mov
cwtl
lea
mov
push
rcr
lds
stos
push
xchg
ja
es
pushl
mov
and
cltd
jae
xchg
int
addl
cmp
test
sub
arpl
and
fwait
or
ljmp
push
xchg
ficoms
int3
fiadds
pop
lds
js
add
xchg
not
sbb
pusha
push
xchg
icebp
mov
fisttps
ljmp
testl
xchg
jo
insb
pop
sub
inc
cltd
test
lea
push
and
or
xchg
sub
inc
data16
jmp
and
push
inc
add
insb
push
jmp
mov
jg
push
mov
les
pop
add
or
test
cli
incl
enter
lret
and
into
push
sub
mov
jp
sarb
and
cmpsl
bound
ret
cmp
or
arpl
lock
decl
in
je
ss
outsl
push
mov
xchg
repnz
out
pop
push
enter
andl
and
adc
arpl
mov
xor
clc
mov
ja
test
ljmp
ljmp
or
cmp
jg
jecxz
fwait
or
push
lods
icebp
add
mov
xor
push
jns
jmp
jge
inc
sub
add
addr16
std
lock
xor
sahf
xchg
sbb
or
xor
ljmp
ja
jb
cmp
mov
subl
or
ficoml
aaa
jne
jbe
inc
cld
cmp
ret
lret
xchg
push
lcall
nop
stc
lea
cmp
sti
lret
lea
sbbl
out
cmp
icebp
lahf
pop
mov
dec
movsb
xchg
subl
push
repz
add
int
fcomip
call
lahf
cmpsl
inc
jnp
inc
aad
iret
push
xor
jnp
enter
mov
loop
or
xchg
cli
pop
ret
fwait
dec
sub
decl
xchg
je
adc
inc
mov
and
ret
stos
cmp
cld
fistl
movsl
and
jg
mov
aas
mov
into
sbbl
call
mov
sbbl
push
rolb
mov
or
incl
add
xchg
mov
mov
sub
xchg
adc
sbb
loopne
ljmp
sbb
xlat
cli
fnsave
xchg
dec
or
sbb
inc
adc
nop
test
aaa
cmpsb
pop
sbb
lahf
js
hlt
push
je
mov
jb
mov
push
jl
subl
gs
sbb
and
aaa
loopne
jne
dec
imul
jne
ljmp
add
lret
flds
or
adc
xor
jmp
loop
scas
fcmovu
pop
mov
enter
xchg
adc
lcall
xor
add
fstl
inc
movsb
push
mov
jg
sbb
scas
clc
pop
outsl
dec
adc
shrb
lcall
xchg
mov
scas
ljmp
jbe
mov
ljmp
pop
std
lds
sbb
push
ret
shlb
lcall
sbbb
xchg
lcall
lods
push
iret
in
cltd
scas
jmp
mov
scas
clc
scas
cli
in
test
aaa
push
test
cmp
cmp
and
icebp
fisubl
xor
in
std
imul
fwait
adc
add
test
rcrb
or
xchg
test
jp
call
aas
test
fldcw
out
mull
push
mov
dec
cs
fistps
jno
pushf
dec
mov
daa
test
pop
sbb
inc
pop
pop
inc
jg
mov
cmp
fs
subb
dec
xchg
rcll
test
jno
popa
sub
fimuls
test
push
lret
dec
in
pop
mov
cmp
and
add
jg
push
and
sti
cmp
fidivrl
jbe
mov
fucomi
push
pop
pop
sbb
sbb
leave
jne
roll
push
adc
dec
lock
aas
std
popf
lods
add
cmp
fwait
ror
xorl
push
cld
out
mov
out
popa
cmpsl
mov
dec
std
stos
pop
lret
idiv
jmp
adc
rcrl
negl
leave
es
pop
cmp
and
mov
fcoml
pop
cs
xchg
ljmp
cmc
sub
mov
push
jecxz
aaa
sti
and
xor
mov
dec
sub
lret
or
pushl
in
and
cmc
inc
lods
jns
mov
mov
xchg
push
test
jle
cs
mov
call
xor
xor
clc
clc
push
lock
cwtl
fsubr
adc
decl
mov
aaa
mov
mov
scas
pop
sub
mov
inc
mov
repz
adc
pop
pushf
setns
mov
ret
js
sub
imul
sub
inc
les
lahf
mov
and
adcb
cmpsb
add
pop
insb
ret
inc
jmp
xchg
jbe
loopne
lcall
push
mov
mov
mov
mov
cmp
aas
push
gs
jmp
mov
or
dec
or
nop
sar
mov
pop
sahf
mov
dec
sahf
cmc
add
mov
pop
popf
inc
xchg
mov
pmullw
movsl
nop
in
xchg
out
sti
lret
scas
shll
pop
mov
subl
pushf
jmp
jns
incl
sahf
cmp
push
mov
jecxz
iret
mov
lret
movsb
repnz
std
and
add
pop
gs
repz
jb
and
daa
shlb
out
jb
mov
sahf
add
sbb
decl
lret
and
loope
in
add
add
cs
fcomps
cmp
push
cld
lcall
test
jle
enter
out
xor
jbe
ffreep
adc
pop
or
rcl
sarl
cld
cmpsl
dec
pop
cld
inc
and
sub
idiv
decl
adc
cmc
dec
lds
ljmp
adc
cmc
mov
xor
call
jb
out
jp
xchg
mov
pop
repnz
add
inc
lods
dec
and
mov
test
or
shl
rclb
clc
fucomi
mov
pop
fmuls
jmp
stos
enter
jns
repnz
inc
ja
add
and
push
and
incl
or
jp
punpcklwd
movsb
in
jmp
xchg
dec
or
mov
pop
call
loopne
aas
data16
push
lods
out
hlt
pop
push
sahf
adc
sbb
xlat
into
iret
sub
jmp
sbbb
push
mov
insb
xchg
repz
mov
je
push
je
pop
adc
sbb
aam
dec
jo
and
test
push
lret
pop
popf
insl
imul
aaa
mov
lock
jg
loop
lret
sbb
pop
aaa
scas
mov
mov
mov
outsl
in
adc
fmuls
push
push
xor
cli
pop
jns
fdivrl
xchg
test
mov
jne
pop
and
stos
and
aad
jle
negb
push
popf
out
jge
loope
or
sbb
adc
std
lahf
or
mov
outsl
cmc
arpl
dec
mov
incl
fsubs
loopne
jb
pop
xchg
dec
int
call
jmp
mov
shrb
pop
dec
mov
mov
in
adc
or
adc
loop
popf
dec
sub
dec
xor
mov
fistpl
inc
jae
mov
pop
cmp
jl
xor
xorl
in
mov
mov
repnz
xchg
xor
js
cmp
inc
and
loopne
jp
push
outsl
mov
inc
ficompl
cmp
mov
cmp
or
push
mov
daa
xchg
fiadds
xchg
push
pushf
jp
xor
int3
loopne
lahf
das
cmp
and
decl
jg
jo
dec
loope
sub
lret
pop
mov
js
or
div
ljmp
lock
mov
int
ret
mov
sbb
sbb
fbstp
xchg
and
data16
or
mov
loopne
call
cmpsb
pop
decl
sub
or
pop
cmpsl
or
cmp
mov
sbb
lret
sub
repnz
jecxz
repnz
add
inc
jl
xchg
lods
and
dec
repz
push
out
lock
addr16
stos
ja
or
ljmp
jecxz
stos
push
movsb
out
in
es
out
or
cld
cltd
in
xchg
push
jmp
in
and
pop
imul
ja
je
sub
sbb
scas
jge
or
stc
dec
mov
ljmp
xchg
xor
jne
aaa
cli
pushf
das
cli
lods
and
mov
jg
and
stc
outsb
push
lods
sahf
pop
sti
cld
out
repnz
cs
jge
cmp
pop
clc
dec
loope
jg
sub
addr16
in
adc
jl
sub
ret
sub
mov
mov
lock
pop
dec
ss
mov
mov
clc
ljmp
call
into
cwtl
mov
addr16
push
dec
icebp
es
ljmp
inc
lcall
cmpsl
loopne
sub
int3
jg
pop
push
xor
mov
sbb
jmp
add
pop
aam
dec
and
xchg
dec
xchg
adc
cld
stos
ljmp
sar
mov
lock
xchg
lahf
push
es
jns
sub
mov
cmp
pop
scas
xor
xchg
xor
push
shlb
cmp
mov
push
leave
jp
fwait
das
or
fs
mov
inc
and
adc
ljmp
lods
sub
xor
shlb
push
incl
inc
inc
inc
pop
or
mov
sub
rcr
mov
adc
fs
cmp
ljmp
ljmp
push
adc
pop
xor
pop
out
xchg
mov
aaa
int3
nop
xchg
sbb
stos
sbb
cmpsb
scas
jae
or
lods
mov
pop
imul
call
inc
pop
xchg
rcrb
data16
cmp
xor
js
pop
sbb
mov
sbb
js
jmp
pusha
add
mov
mov
stos
gs
push
sub
jmp
and
decl
bound
into
cmc
mov
adc
xchg
fwait
adc
lret
sbbl
cmp
sahf
icebp
add
sahf
pushf
imul
jnp
cmp
cmp
pop
push
aaa
and
jg
aas
sarl
stc
push
jns
sti
in
sbb
mov
or
inc
imull
lcall
push
inc
jae
enter
test
daa
fdivl
jle
scas
pop
lods
mov
in
and
jmp
add
xor
mov
xchg
cmp
xor
cmp
outsl
cld
movsb
xor
lret
je
out
ljmp
mov
jb
adc
das
es
ss
sub
xor
lds
lcall
fidivrl
mov
push
cld
pop
je
dec
test
std
sub
punpckldq
test
test
in
jnp
sti
and
inc
add
sub
inc
push
in
mov
cmp
ds
mov
mov
aaa
mov
ljmp
lea
or
adc
jo
ljmp
and
cmp
sbb
lahf
dec
shrb
pop
sbb
mov
sbb
imul
mov
dec
sub
cli
jnp
shr
aaa
inc
testl
mov
mov
lods
push
sar
fstpt
cs
shrl
push
push
cwtl
fisubl
sub
ja
out
fcomip
or
lret
mov
xchg
movsl
xor
call
lcall
jmp
fcom
loopne
fsubrl
add
in
dec
adc
out
jnp
enter
cmp
mov
jnp
jp
icebp
aaa
xchg
loope
rcll
mov
mov
loope
push
jg
test
out
div
adc
dec
insb
adc
adc
std
cmc
xchg
pop
aaa
rcr
enter
dec
dec
fistps
inc
out
cs
inc
sti
lcall
xchg
shll
mov
mov
mov
inc
outsb
inc
mov
jp
push
add
cltd
add
mov
pop
ljmp
inc
inc
dec
fmuls
push
push
sub
pop
inc
push
mov
ljmp
imul
lcall
mov
fisubrl
xchg
aam
push
fsub
dec
popa
dec
and
ja
lods
loopne
leave
mov
jle
loopw,pt
test
ret
faddp
jae
in
loop
ret
in
aaa
lahf
dec
jnp
adc
stos
lcall
push
inc
popa
mov
xor
dec
sbb
fxch
sub
push
or
ret
cmc
mov
lret
add
stc
in
and
out
xor
scas
data16
mov
push
jle
mov
out
push
xchg
xchg
xchg
push
ficompl
sub
mov
nop
pop
add
push
insl
bound
fadds
stc
pushf
mov
jmp
mov
in
dec
sub
cmpsl
jge
cmp
mov
sbb
cmp
enter
sbbb
xorb
mov
jge
daa
pushf
icebp
or
cld
xor
xchg
inc
jmp
adc
rcrb
mov
jmp
sbb
sub
das
bound
lods
popa
fdivrl
sbb
lcall
and
ret
in
divps
ja
sahf
jbe
rcrb
sub
incl
and
sar
xchg
add
lods
repz
pop
or
xor
pop
pop
dec
mov
movsb
sbb
call
mov
out
pop
dec
lock
add
push
xchg
stos
lahf
cmp
mov
push
gs
push
inc
sub
loopne
mov
mov
add
push
pop
adc
sbb
jb
pop
inc
call
std
hlt
or
in
push
xchg
cmp
pop
mov
icebp
lea
mov
mov
int
xor
add
mov
push
push
outsb
mov
shrl
ljmp
inc
push
int3
popf
pop
sar
mov
test
mov
mov
sub
push
lcall
pop
icebp
push
fists
pop
pop
loopne
stos
and
aad
movsl
inc
pushf
add
xor
repz
mov
scas
decl
lret
xchg
loopne
insb
push
cmp
jmp
filds
ds
stc
popa
mov
ljmp
push
cld
fcomps
sbb
sbb
imul
push
sub
push
lcall
and
jp
adc
adc
push
adc
pop
lds
pusha
push
pop
pop
jnp
fcomip
mov
inc
jno
and
mov
pop
loopne
sub
pop
mov
call
sbb
xor
push
out
pop
cli
rclb
lods
mov
cmp
dec
or
loopne
dec
into
xor
stos
std
dec
repnz
jne
clc
jecxz
fs
insb
push
sub
mov
dec
stos
int
mov
leave
nop
jae
cmp
cmp
xchg
addr16
xchg
cltd
add
fdivs
xor
jmp
fcmovb
mov
adc
ret
div
xlat
push
test
cli
imul
lret
mov
movsl
ljmp
and
loop
mov
xor
sbb
or
repz
sub
sub
incl
push
loop
inc
sub
sahf
inc
push
jbe
and
xchg
sub
mov
call
and
cld
addr16
mov
push
jmp
mov
out
je
xchg
in
lcall
jbe
mov
or
adc
sbb
es
add
ds
bound
jge
push
add
mov
mov
stc
cmp
leave
push
pushf
pop
push
mov
lahf
push
pop
mov
mov
dec
xor
jp
incl
das
mov
mov
hlt
ds
mov
mov
movsl
cmp
pop
testb
mov
push
xchg
dec
fcoms
add
in
mov
mov
add
insb
jecxz
call
shll
cmp
je
aad
lea
xchg
dec
adc
cli
jp
decl
js
push
xchg
xorl
mov
lods
dec
jbe
or
xor
xchg
and
call
adc
cwtl
ficoml
mov
aad
mov
mov
test
lcall
jmp
icebp
dec
je
and
or
jl
enter
ds
orb
shlb
inc
fcoms
fs
lret
cmp
add
cmp
lock
xchg
je
jecxz
cli
call
xchg
ja
pusha
pop
mov
xor
xchg
sub
dec
and
cmp
incl
aam
aam
enter
jnp
mov
mov
jg
sbb
and
stos
loopne
fcmovnb
jp
mov
lds
adc
call
scas
push
daa
add
mov
jns
inc
daa
push
in
adc
inc
loope
jp
push
push
adc
jbe
mov
dec
push
je
out
xlat
push
into
add
dec
test
xchg
jb
loop
decl
lods
jg
xchg
aas
adc
adc
pop
leave
clc
push
dec
fisubl
pop
pop
xchg
out
incl
xlat
mov
lret
repnz
jge
sti
mov
lahf
or
ljmp
fldt
test
je
pop
push
fs
aaa
push
cmp
pminub
pop
cmc
cmp
je,pn
cmpsb
adc
xchg
adc
xor
pop
cmp
imull
adc
ljmp
push
or
scas
call
insl
cltd
cmp
fdivrs
loope
das
dec
dec
decb
sar
cmpsb
dec
xchg
mov
mov
jmp
daa
inc
out
adc
dec
fisubrs
jg
call
lcall
cmp
jge
scas
mov
dec
xchg
push
test
aaa
jg
test
lret
fsubrl
fneni(8087
pop
sub
cmp
ret
lcall
lahf
adc
clc
pop
xchg
inc
cmpsb
xor
lcall
lcall
adc
hlt
sbb
inc
or
pop
shl
aas
loop
ds
or
xor
nop
repnz
pop
inc
test
shll
cmp
and
pushf
jp
mov
andb
inc
sbb
jg
test
divb
cmc
or
pop
testl
pushf
mov
movsl
loope
jnp
pop
loopne
adc
and
adc
pop
aaa
xor
test
cmpsb
jmp
int
push
add
pop
pusha
fiadds
scas
push
xchg
sahf
and
ljmp
xchg
xchg
std
lds
jno
inc
icebp
nop
lock
xor
mov
into
fsincos
xor
pop
lcall
sub
add
fisubrl
aaa
out
insl
into
xor
arpl
xchg
dec
push
mov
push
push
mov
inc
mov
mov
cmp
pushl
jno
js
push
outsl
mov
cmpsb
inc
data16
fists
jge
mov
das
fcomp
mov
mov
sbb
adc
push
mov
mov
test
jno
lock
pushl
pop
sub
xchg
arpl
jecxz
push
or
sub
pushf
in
imul
pop
dec
mov
adc
cli
push
mov
cmc
ds
outsl
cmpsl
sbb
sbb
sbb
mov
int3
outsl
clc
ljmp
aad
jmp
xor
xchg
mov
and
popf
sahf
add
mov
lcall
popa
std
pop
insl
pop
adc
pop
adc
clc
scas
ds
lahf
imul
hlt
fimull
jne
xchg
xchg
push
push
pop
lock
dec
jbe
rol
fbstp
pop
data16
sub
call
in
lea
pop
pop
xchg
mov
nop
and
sub
nop
inc
aaa
inc
xchg
rcr
movl
incl
or
adc
and
ja
dec
popf
mov
test
sub
incl
mov
cmp
jb
lds
adc
cmpsb
and
mov
ret
xor
jecxz
call
clc
mov
xchg
insl
call
jp
insl
test
jae
mov
jl
pop
sbb
push
add
push
jge
inc
pop
dec
out
shlb
gs
pusha
and
cld
dec
scas
clc
jmp
dec
or
pop
iret
adc
push
sub
movsb
pushl
sbb
mov
push
jbe
testb
lods
ret
dec
jl
pop
nop
ljmp
ss
mov
inc
sbb
in
xchg
mov
fcomp
pop
decl
push
ss
push
pop
sarl
icebp
aaa
lahf
add
jl
dec
shlb
mov
cld
lcall
popa
xor
sbb
mov
and
call
push
cwtl
push
adc
adc
loopne
lds
fimuls
lock
in
flds
call
push
mov
lret
fists
aas
lds
and
nop
scas
xor
dec
lock
decl
jle
pop
test
cmp
mov
mov
and
popl
mov
jp
xor
jb
mov
bound
out
call
ja
push
inc
repz
and
or
push
aad
xchg
and
jnp
call
mov
mov
pop
xchg
mov
adc
adc
ja
ljmp
xor
mov
fcmovne
dec
pop
adc
cltd
fimull
pop
rorb
xor
cmp
js
arpl
jb
and
lods
sbb
and
repnz
inc
push
xchg
adc
clc
in
das
push
dec
pop
sbb
fildl
aaa
inc
and
sub
movsl
cmpb
ficoml
mov
jp
movsb
pop
popa
in
dec
push
xor
push
nop
sub
cmp
insl
lahf
dec
decl
mov
mov
or
int3
adc
xor
inc
das
and
mov
fistpll
jne
repz
sub
mov
test
rcr
adc
or
pushl
loope
and
push
jb
loopne
inc
xor
push
sub
mov
ljmp
sub
dec
out
fwait
sub
sar
fdivr
mov
ljmp
push
cmp
jbe
xor
inc
mov
rorb
das
fildll
mov
sbb
cmp
lods
jle
ret
call
add
jnp
in
sbb
aas
pop
aaa
divb
push
jbe
loopne
jmp
lcall
loopne
sbb
lcall
xor
into
sub
ds
push
stc
pop
bound
fisttpll
int3
sub
pop
testl
jmp
mov
fstpl
sbb
push
data16
ret
xchg
fst
pop
cmp
dec
xchg
out
and
xor
aam
stos
icebp
cmp
dec
les
and
inc
loope
jne
push
aas
je
jno
imul
popf
aad
es
outsl
loope
or
inc
mov
sbb
cmp
or
xor
lcall
dec
inc
outsl
fisubrl
aaa
push
ljmp
lret
daa
pushf
fisubrs
lcall
jmp
mov
mov
xchg
dec
mov
jmp
lahf
xor
sbb
fsubs
xchg
pop
aad
mov
mov
enter
addl
sbb
out
scas
sar
jmp
test
pop
and
out
push
sub
mov
decl
call
xchg
sbb
pushf
pop
cmp
push
pop
xchg
aas
incl
inc
xlat
aam
ljmp
inc
mov
je
xchg
stc
add
decl
or
xor
push
cmp
test
xor
jmp
inc
mov
mov
mov
aad
scas
jl
sarb
mov
out
inc
movsb
mov
cmp
xlat
mulb
out
js
imul
push
insl
sbb
mov
add
push
sti
mov
js
test
js
xchg
lcall
adc
das
cmp
adc
lcall
pop
adc
in
mov
push
sarb
popf
sbbb
cld
push
xchg
shrl
aaa
cld
xor
or
enter
arpl
xchg
cmpsb
cmp
loop
inc
push
incl
outsb
frstor
mov
test
hlt
dec
sbb
lods
xor
rcl
xchg
jp
aam
jmp
xchg
lcall
dec
jae
outsl
psubsb
sub
imul
decl
push
inc
lods
lahf
mov
loopne
mov
add
call
xor
pushl
cld
jg
pusha
ss
sahf
sbbl
repnz
or
xchg
push
or
mov
fs
mov
xchg
scas
mov
in
pop
xchg
inc
outsb
bound
out
cmpsb
cld
call
mov
add
repnz
or
push
jp
outsb
fstp
and
fisubrl
pop
cld
decl
cld
xchg
int
inc
adc
std
sbb
popa
xchg
pop
filds
jmp
cmc
mov
mov
cmp
inc
lds
add
or
mov
ljmp
shrl
jge
jl
js
jo
jl
pop
scas
outsl
mov
decl
mov
ret
outsl
ljmp
cmp
cwtl
ss
les
decl
jns
dec
add
mov
xchg
in
push
nop
sbb
bound
lock
lds
mov
sbb
dec
arpl
mov
jl
frstor
or
sbb
loop
jmp
into
add
cmpsb
jne
mov
dec
jmp
mov
mov
and
mov
pushf
movsl
pop
insl
aas
test
leave
adc
xor
lret
daa
dec
out
xor
stos
sar
push
jnp
jmp
and
or
out
notl
test
adc
jg
adc
pop
cli
pop
roll
fcoml
js
jo
pop
xchg
mov
clc
jmp
inc
push
mov
pop
into
push
cwtl
mov
clc
add
in
outsl
xor
jmp
jecxz
pushl
lods
pushf
jns
mov
mov
and
call
or
add
incl
xchg
stos
pop
popf
add
int3
xor
add
icebp
mov
and
pop
out
imull
dec
adc
mov
ljmp
fdiv
pop
jge
cmp
mov
add
push
jae
mov
cltd
in
test
mov
out
int
int3
xchg
andb
test
push
enter
inc
jbe
add
xorl
push
push
mov
jg
std
push
repz
xchg
cmpsl
mov
jae
repz
repz
loop
jno
jne
ja
incl
cs
inc
sbb
sub
inc
sub
cmp
sub
mov
push
lcall
or
jecxz
mov
ss
stos
jo
fisubrs
pop
xchg
inc
shlb
daa
jg
sub
leave
fcoml
xchg
in
sarb
sbb
adc
test
mov
adc
pop
out
aaa
xlat
imul
inc
mov
or
jg
lcall
popf
and
shl
cmp
mov
adc
xor
or
pop
mov
lcall
cld
adc
cmp
jp,pn
cmp
pop
dec
rcl
push
inc
lea
ljmp
jecxz
fisttpl
dec
mov
in
popa
jae
es
cmp
mov
jg
incl
push
add
or
lahf
rol
addr16
mov
mov
jmp
into
jle
xlat
xor
mov
pop
pop
cmc
and
sti
push
mov
fists
jg
pop
xlat
cmp
data16
mov
or
pop
mov
mov
sub
jmp
decl
in
in
mov
les
fdivrs
dec
pop
lods
fstpt
inc
mov
xor
call
push
mov
aad
mov
clc
pushl
fstl
jge
jmp
test
push
sub
jle
pop
frstor
or
jbe
cmpsb
mov
in
ja
add
mov
push
jns
jl
mov
stc
ljmp
pop
push
sub
jno
mov
dec
or
movsb
in
mov
dec
fcmovu
pop
shl
lret
sbb
lahf
sub
cmpsb
cli
ret
jb
ljmp
jmp
mov
jbe
mov
mov
inc
outsl
popl
mov
jnp
loopne
mov
incl
mov
jnp
testl
iret
mov
lret
pop
jb
lods
cmpsl
js
jecxz
movsl
out
cmp
call
push
les
pop
iret
lods
sbb
addb
and
pop
lds
hlt
cltd
pushl
fs
loop
ficoml
mov
hlt
jl
push
or
push
jg
test
jmp
insl
adc
mov
idiv
andl
in
adc
lock
sahf
fcomip
incl
jb
mov
icebp
jmp
addr16
repz
and
addr16
aam
and
pop
push
jae
and
int3
sub
push
mov
cli
pop
jb
iret
scas
sar
pushl
ret
lods
inc
rol
push
mov
mov
rcrl
subl
decl
sbb
push
test
nop
pop
xchg
in
imul
pushl
push
aad
inc
sub
or
in
inc
dec
sub
xlat
out
rcr
push
mov
clc
lcall
in
cmpsb
repnz
pop
pushf
js
pop
test
jge
out
call
out
pop
jne
cld
inc
mov
call
ficompl
jmp
aaa
adc
hlt
push
rol
bound
push
repnz
lcall
fcomip
jmp
xchg
xor
jmp
lret
xchg
call
inc
fcomip
jb
dec
cmpsl
lahf
push
push
jecxz
pop
adc
push
hlt
jnp
push
mov
int
lahf
sbb
inc
stos
outsb
je
decl
push
adc
pushf
pop
lock
mov
and
add
shrl
push
pop
push
jmp
xchg
mov
ljmp
cmpsl
mov
inc
xchg
lock
mov
outsb
stos
nop
xchg
jecxz
fldt
pop
xchg
aad
in
ljmp
leave
or
fisubrl
sahf
mov
stc
out
or
jge
scas
jbe
push
add
dec
mov
pop
push
roll
ret
inc
jg
push
shr
into
sbb
cld
lcall
idivl
sub
in
xchg
push
scas
xor
imul
sub
inc
pushl
xlat
jb
lret
jno
sbb
jecxz
inc
shll
mov
mov
cmp
add
fstpl
xor
rcl
adc
mov
sbb
mov
mov
xchg
lahf
sub
sub
call
cmp
cmpsb
inc
push
test
add
out
jmp
ljmp
xchg
fsubrp
jl
push
pop
daa
icebp
xchg
arpl
arpl
push
jns
dec
bound
in
adc
and
jmp
mov
dec
das
mov
mov
fcmovu
cmp
mov
push
ljmp
pop
mov
inc
and
dec
data16
ss
gs
jb
je
sbb
lcall
xchg
and
mov
arpl
cmp
sub
popa
shlb
ljmp
clc
dec
sub
add
mov
aam
mov
rcrb
les
call
lds
xchg
ds
cmp
arpl
inc
dec
imul
int
ja
inc
sub
inc
repnz
pop
lods
dec
xchg
jmp
adc
jg
ret
xchg
inc
stos
jl
in
aas
xor
cld
xor
lahf
roll
mov
jae
cmp
lods
sub
xchg
stos
xchg
shrl
cmp
add
dec
iret
add
xchg
pop
and
fimull
pushl
dec
imul
xchg
out
adc
cmpsl
leave
sbb
xchg
fnstcw
call
loopne
mov
cmp
int
sub
in
jge
aaa
push
aam
int
jnp
mov
cmc
imul
xchg
lret
pop
divl
lcall
xor
jb,pn
push
jp
outsl
and
dec
add
cmp
decl
clc
mov
or
adc
sbb
push
mov
mov
push
or
aas
push
cltd
jle
stos
fisttps
add
lods
sub
push
jb
jle
sub
jmp
pop
repnz
sbb
adc
call
aaa
jno
adc
xor
addr16
in
aam
mov
lds
stc
jns
cs
push
cld
call
std
mov
ret
leave
aad
mov
imul
push
mov
incl
sbb
ja
fldt
bound
out
loop
jbe
push
sbb
or
sbb
insb
and
lret
popa
jle
out
es
divl
imul
mov
lods
inc
add
push
cwtl
dec
hlt
sahf
add
pushf
sbb
pop
outsb
sub
ud0
fcomip
cmp
mov
mov
mov
testb
push
mov
insb
sbbb
mov
incl
xchg
scas
arpl
dec
enter
data16
cwtl
xor
call
cli
mov
jmp
jmp
xchg
xlat
jle
xchg
repnz
pop
sbb
inc
mov
lret
lret
inc
xchg
arpl
ljmp
adc
bound
aaa
mov
std
insl
mov
push
pop
out
or
pushl
test
clc
jp
xchg
mov
sbb
shll
inc
push
insb
test
sahf
xor
mov
std
jne
mov
push
adc
push
add
push
and
pop
add
or
pushl
add
add
mov
xchg
mov
out
enter
cmp
stos
jae
mov
call
roll
roll
mov
or
data16
and
cmp
dec
cltd
incb
scas
fisubrs
jmp
fwait
xlat
push
sub
insl
sbb
jb
iret
xor
mov
pop
mov
mov
jg
int3
sbb
dec
lock
pop
jmp
out
std
xacquire
lret
xor
xchg
ljmp
jmp
or
xor
dec
int3
cmp
js
jb
rcl
adc
ljmp
or
push
push
jp
lea
aas
add
pop
stc
add
fisubrl
aaa
cmp
adc
rcrb
div
sahf
push
fwait
out
insb
stos
and
jmp
ljmp
js
inc
into
std
dec
cmp
xchg
hlt
out
insb
lea
out
notb
call
inc
je
inc
pusha
arpl
loopne
pop
xlat
nop
add
mov
mov
call
pop
cmc
push
push
xor
dec
mov
incl
jo
sahf
inc
pop
add
mov
pop
cltd
pop
and
rol
gs
sub
mov
push
insb
or
les
or
call
mov
mov
adc
les
dec
xchg
lret
pop
cmc
mov
mov
lods
pusha
mov
add
lcall
xor
xor
mov
mov
cmp
sub
pop
movsb
fiaddl
notl
nopl
aam
jno
je
xchg
mov
in
std
out
push
mov
mov
mov
dec
xchg
adc
mov
push
jmp
mov
lods
stc
sub
mov
pop
call
sub
or
dec
push
inc
adc
mov
outsb
cltd
mov
sub
push
clc
aad
mov
lcall
push
out
push
fimuls
mov
jmp
add
shr
nop
rcrb
daa
cmp
lock
pop
hlt
insl
cmc
into
push
stos
test
sarb
rcr
dec
mov
je
in
out
jo
dec
loopne
xchg
pop
imul
jae
push
inc
add
mov
jmp
scas
ret
ja
mov
cmp
ljmp
inc
jns
lret
mov
dec
out
out
cli
pushl
xor
pop
xor
int
repnz
int3
inc
push
rolb
out
cli
call
mov
mov
cmpsl
sub
push
sub
lcall
fnsetpm(287
imul
outsb
mov
shr
dec
pop
adc
dec
or
dec
cmc
mov
inc
xchg
cmp
xor
call
loope
mov
das
pop
cs
dec
bound
enter
mov
mov
into
test
outsl
mov
cld
jg
add
jmp
mov
and
mov
in
and
ja
ljmp
std
enter
mov
mov
dec
aaa
cld
cmp
push
dec
scas
movsb
mov
push
mov
test
mov
incl
push
or
insb
inc
mov
pop
bound
scas
lea
out
in
fildl
frstor
aas
stos
orb
rcrl
call
arpl
insb
dec
adc
jo
push
lcall
test
push
pushf
lock
mov
push
jnp,pn
sub
lret
test
aad
jnp
aam
pushl
cltd
inc
cmpsl
add
icebp
jns
fsubs
iret
test
aaa
das
pop
mov
jg
jmp
push
gs
jg
inc
aaa
int
std
xchg
in
adc
xchg
pop
add
jg
jne
mov
scas
ror
sbb
add
cmp
ljmp
ret
mov
pop
jnp
pop
iret
sub
js
dec
repnz
shl
ret
inc
inc
cmp
push
dec
cltd
gs
incl
cwtl
xchg
and
outsb
cmpsb
and
xchg
stos
mov
gs
dec
pop
push
fcmovne
or
cltd
sub
frstor
mov
cmp
lcall
xchg
sbb
mov
xchg
pop
cld
decl
jmp
dec
xor
xor
rolb
xchg
xchg
jg
mov
sub
rcrl
fsubr
xchg
inc
sbb
push
pop
xor
popf
shll
jmp
mov
pop
pop
jb
cmp
jp
adc
sub
dec
loopne
dec
mov
cwtl
dec
mov
jg
ret
mov
cld
cmp
add
jne
pop
loopne
mov
call
adc
sub
add
pop
lock
mov
push
std
jmp
iret
inc
sbb
subb
cmpsl
pusha
or
xchg
and
ljmp
icebp
xchg
and
dec
xor
stos
fnsave
das
cmp
mov
mov
add
aam
iret
cmpl
sbb
call
gs
and
insb
in
fisttps
pop
test
popf
xor
ss
fcomip
push
repnz
sub
mov
out
fcoml
adc
inc
inc
fsubs
jo
jg
pop
or
cwtl
cli
inc
jne
jp
lret
xchg
jno
pusha
imul
in
dec
shll
dec
adc
jb
jg
cld
es
add
jae
inc
loope
stos
push
fsts
inc
push
scas
shl
enter
sub
jecxz
ret
call
jne
outsb
sub
mov
fisttpl
adc
add
pop
insb
sar
mov
in
pop
shr
pop
mov
push
jo
and
or
cltd
leave
mov
and
mov
ljmp
dec
inc
movsb
mov
shr
stos
adc
dec
add
call
cmpsb
mov
sub
jge
decl
adc
mov
dec
mov
dec
ret
stos
lods
sbb
jbe
mov
ljmp
imul
or
rorl
ljmp
mov
push
pop
mov
add
pushl
loope
ljmp
das
jno
push
ljmp
loop
xchg
pop
cld
or
lds
inc
ja
gs
add
xchg
jg
movups
insb
dec
fsubrl
mov
adc
xor
mov
push
ljmp
scas
inc
mov
fsubrl
lds
int
push
push
jb
dec
pop
jns
call
insl
jl
push
jns
mov
xor
in
jb
jg
incl
add
inc
lock
push
mov
or
ljmp
icebp
inc
lcall
mull
xchg
mov
movsl
dec
pop
cmp
mov
pop
loop
mov
lcall
ljmp
aad
xor
inc
pop
push
scas
sbb
push
addl
cli
jns
int
jmp
jmp
push
jle
js
jns
addr16
cs
jnp
push
hlt
aas
adc
xchg
arpl
mov
decl
in
add
sbb
jns
mov
fs
mov
push
sub
sub
call
mov
das
adc
addr16
cli
jno
pushf
pop
add
mov
clc
add
mov
pop
xchg
push
and
mov
mov
mov
decl
test
daa
mov
mov
les
add
jp
or
icebp
push
push
out
or
hlt
dec
loope
cwtl
cmp
mov
push
dec
mov
mov
daa
aad
mov
push
shl
inc
xchg
xchg
adc
stc
mov
mov
imul
mov
mov
mov
and
fcom
addr16
dec
decl
xchg
movsb
xlat
push
sbb
inc
sbb
push
fbld
push
jmp
call
int3
add
sbb
sub
push
mov
cmp
pushf
int
out
out
adc
incl
xlat
jg
pop
call
out
dec
and
mov
jo
push
sbb
ret
lret
or
ljmp
and
ficoms
movsb
push
adc
cmp
sar
in
inc
clc
cmp
mov
out
pop
cwtl
push
fldcw
or
jg
movsb
sbb
push
or
adc
mov
cmc
cmpsl
jecxz
pop
pop
cs
test
fcomip
shrl
rolb
mov
inc
ja
inc
cmp
or
loope
ljmp
in
roll
pop
push
mov
xchg
or
sar
pushl
ficompl
sahf
icebp
adc
ljmp
fbld
imul
ds
pushl
insl
in
pop
repnz
int
sub
push
enter
sbb
cmp
out
jb
jo
sbb
out
push
mov
mov
test
mov
mov
mov
bound
jecxz
loop
push
stc
and
imul
fadd
push
int
jns
ljmp
push
test
imul
mov
or
imul
decl
cwtl
lods
cmp
dec
testb
cmpb
jecxz
repnz
insl
and
and
ljmp
aam
inc
xchg
fcoml
mov
push
out
cmpsb
dec
sub
or
jbe
ljmp
xor
mov
mov
imul
push
stos
int3
lods
ljmp
adc
loop
arpl
es
adc
popf
sub
imul
pop
imul
rcrl
shlb
lods
outsb
aad
jae
in
cmp
adc
incl
cmpsl
xchg
add
data16
push
push
pop
adcb
es
out
movsl
lock
add
xorb
lds
lcall
mov
or
xor
pushl
jge
cmp
dec
popf
jl
popa
mov
push
and
push
xor
xchg
add
inc
and
ljmp
cli
bound
fdivl
push
test
sub
outsl
xchg
mov
mov
mov
es
sub
add
hlt
fsubs
lods
mov
leave
std
incl
sub
out
int3
lret
js
mov
loopne
mov
mulb
bound
gs
pushl
cmp
adc
cmp
cld
jle
cmp
sbb
or
popa
iret
aaa
out
arpl
sub
add
push
sbb
pop
inc
in
cltd
and
dec
jecxz
xlat
lahf
mov
and
push
aaa
test
cld
decb
cltd
pop
mov
lods
mov
mov
jno
xchg
cmp
into
popa
dec
pop
cmp
xchg
jp
mov
std
sbbb
xor
and
dec
dec
mov
mov
and
jns
stc
pop
push
pusha
push
mov
fs
lea
add
mov
pushl
adc
cwtl
jecxz
xchg
stos
cmpsl
cmp
fwait
adc
loopne
loope
add
jbe
jg
mov
xor
in
pop
and
cmpsb
sub
std
push
adc
rcr
movsl
pop
loopne
incl
repz
cld
push
push
push
mov
sarl
sub
insl
mov
jge
cwtd
stos
jg
push
jmp
add
or
cmpsl
jg
aam
add
test
mov
sbb
popa
arpl
std
xchg
loop
xlat
lcall
testl
cmpsl
xchg
js
outsl
cmp
ret
imul
ret
pop
mov
testl
pop
rol
xchg
decl
cmp
fstl
pushf
in
bound
or
jle
lret
sub
adc
imul
mov
mov
call
out
out
inc
rcrb
orl
cmp
xor
xchg
xchg
in
decl
out
sbb
push
jns
sub
in
jbe
aam
lcall
call
loopne
jbe
int3
cmp
adc
dec
mov
xchg
sub
cmp
push
push
and
bnd
idiv
xor
push
dec
push
cmp
inc
movsl
sub
sbb
push
adc
ss
inc
jnp
pop
jmp
sub
xchg
aas
mov
ds
mov
iret
fldenv
imulb
push
sbb
fcomip
cltd
cmp
clc
sbb
test
les
cmpsl
push
xor
add
push
out
mov
loop
test
and
rclb
push
push
ja
outsl
and
das
cli
decl
jge
xchg
sub
ret
fdiv
shl
cmp
fcmove
out
fbld
loop
scas
or
adc
int
fs
jg
cs
jg
pushl
adc
push
mov
lahf
rorl
stos
inc
cs
testl
mov
jbe
lods
push
movsb
mov
inc
std
xchg
sbb
push
mov
jmp
ljmp
lret
xlat
std
adc
pusha
sub
movsl
inc
mov
mov
aaa
rcr
idivb
ljmp
push
xor
mov
popf
xorb
fcmovb
mov
gs
push
sbb
dec
pop
rcr
hlt
jg
or
adc
outsb
cs
push
aaa
cmp
mov
jg
outsb
lahf
frstor
es
sahf
push
push
xchg
push
in
push
ljmp
sub
ljmp
fsubrp
adc
lock
js
pop
xchg
das
fwait
outsl
in
bound
incl
dec
xchg
cs
mov
js
dec
and
sti
std
xchg
or
mov
push
xlat
jno
decl
ret
mov
cmpsl
jo
dec
mov
or
mov
pop
sbbb
jns
clc
scas
push
inc
sbb
enter
add
mov
out
adc
jmp
push
into
das
lret
add
test
jp
fwait
xchg
js
mov
in
jae
fistl
data16
loop
mov
push
sbb
sbb
gs
shl
lods
inc
add
jmp
cmpsw
jecxz
xor
cltd
xchg
es
cmp
add
sub
xlat
scas
movsb
sub
incl
out
pop
bound
adc
bound
icebp
movsb
insb
call
mov
mov
ret
mov
sbb
and
lcall
mov
and
mov
outsl
cli
repz
and
data16
and
sarl
cmp
lcall
push
icebp
mov
out
scas
fsubs
inc
leave
push
out
pop
and
or
call
cs
pushf
pusha
or
lcall
and
push
pop
and
roll
pop
xchg
sar
loope
and
fiaddl
jl
or
jbe
iret
dec
stos
lcall
imul
mov
movsl
ljmp
or
adc
sbb
cltd
push
dec
sbb
pop
hlt
incl
jno
xor
push
sub
or
cwtl
mov
ljmp
pop
mov
fisubl
mov
sub
and
inc
and
jno
nop
xchg
aas
rcrb
xor
sti
inc
mov
subl
jmp
cmpsb
cmpsb
lahf
loope
jg
mov
fidivrs
jg
pop
stos
stc
push
xchg
xor
repz
shl
call
popf
out
repnz
and
in
fcoms
leave
push
pop
jno
sub
xchg
sub
loop
fsubrs
sbb
sbb
add
in
cmp
xchg
dec
aam
shlb
mov
cld
inc
mov
inc
nop
and
adc
mov
pushf
test
push
cmp
push
out
mov
fidivrs
cmp
inc
and
fstpt
shrl
and
mov
cmp
ret
mov
sub
jecxz
jl
mov
popf
jge
bound
dec
xchg
push
cmp
lcall
test
es
jp
pop
pusha
hlt
dec
icebp
fisttpl
ret
inc
xor
xor
push
shlb
lcall
imul
mov
lret
es
jl
clc
sub
and
dec
incl
cld
dec
fcomps
les
dec
sbb
pop
inc
loop
idivl
sahf
test
out
push
idiv
in
lcall
ljmp
in
jle
ret
dec
xchg
jae
mov
sbb
sbb
pop
xchg
mov
jne
sar
push
mov
aas
dec
pushf
in
aaa
std
movsl
fimull
mov
dec
insb
jno
aam
jae
filds
lcall
inc
inc
lret
xor
movsb
loopne
add
or
push
jns
movsb
jb
mov
jb
mov
ljmp
pop
ljmp
jo
les
fcmovb
jle
out
movsl
stos
mov
jg
cli
out
push
push
inc
add
sbb
sub
hlt
lcall
lcall
icebp
add
inc
int3
out
and
pusha
addr16
xor
adc
pop
test
incl
cld
or
cmpsl
or
mov
dec
addr16
sbb
aas
xor
dec
mov
ljmp
rclb
push
inc
push
cltd
decl
popa
cld
sub
fmull
sub
xor
push
xor
jp
ljmp
lcall
dec
pop
ss
std
and
ljmp
push
push
fdivs
push
loop
je
fldl2e
adc
lret
daa
and
std
incl
dec
int
ret
mov
jo
inc
aas
inc
adc
jns
jle
dec
dec
xchg
mov
pop
js
call
or
lock
push
inc
ss
xchg
ss
fsubrs
mov
sub
decl
orb
cld
mov
cli
or
dec
ja
cmp
lahf
rcrl
mov
ljmp
sbb
test
rorb
in
push
inc
adc
push
scas
in
inc
push
insl
out
jge
test
popf
add
leave
das
enter
imul
in
in
xchg
jmp
xchg
loopne
lret
push
xchg
ret
icebp
jb
icebp
add
push
pop
mov
adc
fcmovnb
ret
jmp
call
inc
xor
je
cmp
outsl
xchg
jnp
push
sbb
fidivrs
mov
je
fidivl
rcrl
push
or
popa
add
pushf
fdivp
aad
addr16
decl
push
dec
mov
xchg
scas
icebp
pusha
pop
clc
cmp
mov
inc
or
inc
enter
decl
fwait
popa
mov
xchg
jno
stc
push
rol
dec
rol
dec
pusha
mov
push
dec
dec
push
cld
jae
fbstp
lcall
addl
jns
daa
out
stc
lock
pusha
and
or
sbb
stos
sti
cmp
or
lds
stos
adc
or
je
jbe
in
mov
cmp
test
call
mov
adc
jns
jle
sarb
fdivp
cmpsb
and
xlat
push
inc
push
jecxz
add
lcall
mov
jmp
out
outsb
jmp
clc
pop
adc
xor
movsl
out
push
mov
xor
jecxz
sub
push
iret
pop
test
pop
mov
incl
push
ret
jp
cmp
jb
js
jno
in
mov
decl
jbe
mov
jle
leave
jp
adc
cli
mov
ret
inc
lcall
mov
inc
inc
fwait
push
mov
xor
scas
cli
dec
inc
push
flds
ljmp
mov
leave
adc
pop
bound
arpl
xor
mov
inc
addr16
insl
mov
sub
xor
push
add
ljmp
xchg
sbb
sub
lcall
or
in
sub
icebp
sbb
mov
in
pop
mov
cli
repz
cwtl
loope
inc
lcall
push
gs
aad
jle
push
mov
cmp
jae
loopne
cmpsb
je
push
ljmp
push
ds
imul
rorl
dec
aas
xchg
or
dec
cmp
decl
and
pop
imul
jmp
cmc
repz
pop
testb
fs
call
das
jle
hlt
lock
sbb
jp
enter
pop
sub
jmp
pop
adc
ret
fnstsw
mov
or
inc
sub
xchg
jecxz
pop
push
cld
jg
gs
cli
ret
xchg
popf
or
or
jae
mov
or
fbld
jnp
stos
mov
xchg
outsl
push
andl
call
or
jle
cltd
mov
mov
cmpsl
aas
mov
js
call
sti
insl
or
xor
pop
xor
in
dec
test
jmp
jmp
arpl
stos
ret
or
in
or
ss
dec
or
je
int3
insl
mov
cltd
aas
nop
mov
daa
mov
cld
sub
fbstp
incl
fnsave
scas
xor
add
lock
jecxz
hlt
push
mov
sub
pop
push
sbb
loopne
out
aas
lcall
aam
mov
fisubl
add
std
popf
pop
fcomip
ljmp
js
mov
xor
pop
lahf
adc
push
nop
jg
incl
imul
inc
mov
repnz
imul
xchg
test
outsl
das
clc
call
jb
or
hlt
push
shlb
jne
out
or
sti
ljmp
cmp
inc
adc
leave
fcom
notb
mov
cmp
xchg
lahf
jns
cmp
in
xchg
jae
pop
dec
mov
push
pop
mov
sub
inc
inc
divps
ds
xchg
fs
push
mov
inc
mov
mov
stc
cltd
sbb
fists
dec
shl
dec
xor
mov
mov
adc
and
jbe
pop
mov
hlt
sbb
decl
pop
adc
pop
loopne
movsl
int
cmp
mov
lea
ljmp
xlat
cmc
pop
add
cs
pop
jb
inc
xor
mov
int3
pop
push
shrl
mov
cwtl
ljmp
push
xor
fwait
jp
mov
test
fisubs
movsl
mov
stos
out
call
cld
lock
jle
dec
push
xchg
ficoms
add
xchg
mov
shlb
mov
dec
sub
xor
insb
loope
loop
aad
dec
xor
adc
rolb
pop
ljmp
ds
cwtl
fs
dec
push
xchg
mov
ljmp
lods
or
aas
clc
pushl
jg
inc
cmp
jp
test
ds
xor
into
mov
inc
adc
xchg
call
push
stos
cmc
call
ret
in
push
sbb
into
scas
pop
mov
jmp
bswap
lret
inc
sbb
jbe
sub
jo
cmp
cmp
aaa
mov
incl
sbb
dec
imul
dec
stos
mov
add
sub
mov
cmp
mov
clc
inc
loopne
jl
mov
add
dec
aas
cmp
sub
fwait
lahf
decl
cmp
push
std
xchg
sarl
cs
cmp
pop
movsl
mov
call
cmc
clc
pop
push
and
jae
mov
mov
sub
outsb
dec
adc
pop
outsl
pop
add
fisubs
mov
sub
int
hlt
arpl
sub
add
or
inc
clc
fists
push
inc
lods
je
xchg
sbb
ficoms
mov
out
out
scas
push
mov
push
cld
xor
popl
ja
push
fsubp
je
sub
pushl
sub
xlat
jae
addr16
add
push
and
mov
pusha
adc
pop
mov
std
aad
dec
sbb
je
pop
hlt
aad
les
ljmp
insl
insb
pop
xchg
cmp
add
jp
lds
nop
das
pop
decb
xlat
mov
out
ljmp
dec
ja
push
xor
xor
push
lret
dec
aaa
mov
dec
addr16
aas
into
jecxz
pop
popa
jle
push
mov
pop
jb
nop
push
lods
or
in
jmp
ljmp
xchg
aad
mov
outsb
fadd
mov
test
lahf
cld
lcall
mov
cmp
scas
imul
jmp
pop
push
pop
push
arpl
in
push
inc
and
and
jmp
add
dec
jg
xor
in
data16
mov
test
add
fwait
nop
mov
xorl
sub
jmp
repz
incb
int
into
sbb
inc
pop
and
pop
sub
adc
lret
and
pop
cmp
and
lahf
pop
add
mov
inc
rclb
loopne
stos
and
sub
jmp
inc
aaa
push
inc
lods
sub
hlt
dec
pop
add
xchg
add
data16
mov
in
cltd
adc
adc
out
or
cld
clc
in
adc
lahf
dec
sti
scas
dec
ljmp
add
cmp
mov
sub
xchg
cmp
and
divl
call
cmc
outsl
decl
xlat
push
cmpsl
or
lock
push
push
fidivrl
sbb
pop
jg
inc
std
aas
mov
clc
mov
or
notl
mov
int3
dec
cs
mov
push
cmp
loop
and
dec
cltd
sbb
ljmp
movsl
fdivl
mov
sbb
push
pop
icebp
xchg
imul
sub
cmp
hlt
mov
sbb
mov
frstor
aaa
pmaxsw
jmp
insl
repnz
lods
enter
inc
cli
cmp
dec
int3
xchg
pop
test
rcrl
pop
decl
std
je
or
insb
rclb
pop
xor
sbb
jo
ljmp
ja
das
lods
out
call
call
insl
rcr
insb
mov
mov
jge
xchg
cmp
divl
and
push
fs
in
pop
cmp
lret
fimull
addr16
subl
and
out
pop
lret
dec
pop
orb
in
pop
out
clc
incl
jno
xor
gs
mov
aas
notb
jno
rclb
xor
mull
jae
outsl
sbb
jge
xor
es
dec
rorb
ljmp
mov
mov
outsb
leave
fwait
imull
mov
mov
pop
lcall
clc
xchg
and
lcall
sbb
cwtl
cmp
inc
push
dec
lock
dec
ljmp
jle
push
pusha
xor
inc
out
push
nop
mov
mov
stc
sbb
in
xor
pop
nop
pop
cs
popa
daa
std
inc
std
jmp
adc
dec
adc
adc
imul
or
dec
jp
add
xchg
sbb
pop
push
mov
push
mov
mov
fcomps
sub
pop
icebp
call
out
cwtl
ds
sbb
loop
cmpsl
sbb
inc
pop
pop
and
sbb
dec
call
mov
scas
test
mov
fs
jbe
pusha
xchg
add
mov
mov
mov
jbe
xor
mov
sbb
outsb
aad
frndint
jo
incl
ja
in
aad
xchg
addl
push
out
mov
testb
xchg
sbb
mov
cltd
mov
cmp
mov
repnz
cltd
xchg
jnp
es
mov
sahf
jg
sti
sbb
jb
mov
es
nop
sbb
xor
push
outsl
out
jg
in
push
mov
stc
loop
or
dec
mov
mov
jae
xchg
pop
test
sub
and
and
test
mov
push
ljmp
mov
stc
rorl
rcll
orl
and
jne
jmp
cltd
or
dec
ret
mov
ret
dec
xchg
jg
cld
out
cli
pushf
ds
sub
add
fbld
mov
cmc
xchg
lea
ljmp
stos
cs
sub
push
adc
or
push
cmpsb
or
jno
sahf
decl
adc
dec
movsl
das
shlb
test
xor
movsl
scas
mov
mov
mov
js
jmp
mov
pusha
pop
jmp
lods
push
mov
xchg
roll
sbb
aaa
mov
les
ljmp
daa
dec
call
mov
loope
cmp
add
or
inc
and
call
stos
das
fs
push
lcall
movsb
or
pop
idivb
jmp
out
fcoml
test
push
adc
aaa
or
idivl
call
scas
fimull
cmp
out
or
pop
add
adc
dec
pusha
nop
xchg
sub
jae
das
stc
mov
int
idiv
jmp
jbe
sti
pushf
xor
jle
das
mov
adc
mov
loope
push
ljmp
out
xchg
dec
cmp
mov
cli
cmp
shl
mov
mov
sub
mov
pop
inc
mov
xor
mov
pushl
adc
mov
rolb
mov
test
movsb
arpl
mov
loope
pop
ss
pushl
std
rolb
push
int
sbb
mov
sbb
push
js
aad
out
push
je
jge
mov
push
jae
ds
mov
icebp
add
imull
decl
lods
or
or
rcl
popa
cwtl
lea
ret
inc
mov
ret
jmp
mov
cmp
fcompl
repnz
test
and
out
lret
aas
das
xor
in
cld
push
clc
decl
stos
lcall
pop
lods
push
pusha
jnp
or
scas
cli
push
cld
mov
mov
loope,pt
fsub
mov
pop
test
jne
scas
jmp
lods
in
cwtl
mulb
pop
mov
fnsetpm(287
pusha
cmp
inc
sbb
cmp
sub
leave
popa
lcall
pushf
cmp
arpl
lahf
sub
popf
pusha
mov
sarb
mov
mov
inc
std
inc
imul
shrl
lea
lods
shll
mov
dec
xor
movsl
in
cmp
pushl
lret
call
sbb
stc
or
sbb
mov
cmpsl
xor
sbb
fdivs
push
in
cmp
pusha
push
nop
lock
sub
mov
out
fistl
pop
fucomip
push
fyl2xp1
movsl
jmp
iret
pop
in
inc
jp
mov
out
je
imul
aas
mov
rcrl
xchg
mov
mov
and
mov
push
sub
test
cmp
cmp
aad
dec
dec
mov
sbb
cmp
decl
enter
stos
leave
xchg
fmulp
jne
push
in
outsb
pop
and
dec
xchg
in
incl
push
cmpsb
dec
imul
pop
scas
imulb
sbb
cs
out
xchg
mov
and
incl
loopne
cmp
pop
test
enter
sub
and
add
pushl
inc
int
xor
xlat
mov
mov
or
pop
jle
cld
mov
call
cmpsb
sub
push
jle
mov
add
pop
sbb
fwait
inc
cld
dec
add
sbb
pop
incl
pop
cld
int3
les
mov
pushf
xchg
loope
fsts
aad
mov
sub
decl
out
or
pushf
call
test
pushf
insb
adc
fldl
cmp
ja
mov
popa
sar
test
daa
add
inc
jmp
test
repz
call
mov
in
aam
push
sahf
ss
pop
push
lret
ret
push
push
jle
cmp
in
decl
pushl
cmc
pop
push
repz
pop
inc
stc
jp
or
inc
or
push
ja
mov
sub
inc
in
inc
mov
ljmp
dec
mov
pop
roll
adc
sub
inc
pop
scas
xchg
xor
stos
jp
cmpsl
ljmp
xchg
vphaddubd
xor
jle
cmp
cld
lahf
setbe
jb
mov
std
call
push
xchg
cld
dec
jno
movsl
addr16
jbe
popf
add
jl
jmp
dec
sub
or
arpl
stc
xchg
hlt
and
push
cltd
mov
inc
xchg
push
sub
ret
cli
xchg
sarb
ret
imul
hlt
xchg
cs
ret
xor
fwait
mov
subb
mov
cli
and
in
or
arpl
dec
aas
or
jmp
into
in
pop
cmc
push
shrl
addr16
cld
fwait
adc
fbstp
outsl
fiaddl
pop
push
js
sbb
mov
jae
test
push
out
test
loop
sub
mov
lret
pusha
cmp
push
push
fwait
mov
lcall
xor
aam
xor
fstl
test
sarl
rorl
mov
lods
jns
aad
adc
xchg
sbb
fistpll
mov
sbb
pop
or
ljmp
xor
lock
je
popf
dec
push
mov
inc
out
adc
lods
cld
cmp
and
jnp
and
hlt
adc
jmp
pusha
or
jbe
mov
int3
pop
and
decl
outsb
stc
sbb
popa
xchg
into
mov
and
xchg
mov
and
mov
add
jmp
mov
jns
or
and
sbb
ja
pop
es
jbe
jne
sbb
fsts
mov
sub
xor
lds
int3
fildl
pop
stc
mov
out
shr
fwait
jns
pop
fwait
mov
xor
mov
sbb
cmpl
xchg
jne
fdivl
mov
repnz
dec
ljmp
pushl
fimull
push
lods
pop
ret
pop
jo
cs
ljmp
js
movsl
nop
xor
mov
fsubrs
lret
movsl
xor
and
mov
jmp
jg
popa
dec
es
and
cwtl
xchg
jle
stos
out
out
clc
cmp
inc
sahf
shl
cmp
and
mov
test
jecxz
lods
imul
jge
adc
int
popf
popf
and
mov
lret
sub
clc
and
pushf
popl
pushl
std
repnz
sar
addl
data16
inc
inc
and
jno
xor
ljmp
out
fnstsw
sbb
ret
movsb
flds
loop
xlat
cmp
pop
lods
loop
repz
jmp
std
inc
int3
xadd
test
aad
pushf
dec
sub
cltd
adc
xchg
adc
decl
fldenv
out
test
gs
push
les
pop
pop
arpl
xchg
cmp
cmp
std
ljmp
add
lahf
or
dec
insl
iret
cmc
mov
gs
jle
clc
decl
imul
push
xchg
jo
mov
pop
adc
and
dec
les
outsb
lahf
test
inc
lock
or
push
iret
jno
aaa
fucomp
adc
stos
fimull
xor
bound
sbb
fnstcw
lds
sarl
pop
mov
inc
inc
ja
xorl
and
xchg
out
jb
mov
lahf
sbb
mov
push
sbb
mov
sahf
jge
pop
sbb
dec
xchg
sub
cmp
test
mov
jne
sbbb
movsb
adc
pop
mov
add
jmp
lock
jmp
es
jnp
adc
enter
add
imul
lcall
scas
or
in
or
pop
jmp
sar
add
jp
pop
outsb
xchg
jl
repnz
add
out
mov
mov
leave
repnz
mov
int
inc
sbb
in
shrd
mov
idiv
call
lods
popf
fwait
and
scas
cmpb
mov
rcr
xor
cwtl
mov
mov
dec
pushl
aam
cmp
jl
sar
adc
rcrb
inc
cmp
test
jmp
sbb
add
dec
out
pushf
mov
sub
push
call
mov
lahf
add
fs
popl
aaa
xor
sub
inc
xchg
push
inc
pop
test
cwtl
and
sbb
inc
inc
mov
ret
and
movsb
cmp
dec
addb
sbb
jmp
pop
js,pn
push
mov
jo,pn
adc
into
out
mov
jmp
fs
ljmp
mov
xor
stos
mov
in
ljmp
mov
adc
nop
mov
and
mov
in
xchg
inc
int3
iret
xchg
and
mov
ljmp
sub
adc
sub
cmp
fdiv
push
ljmp
pop
inc
and
dec
arpl
ja
fldt
xor
inc
cmp
out
or
shll
aas
add
ret
into
push
test
dec
xchg
mov
add
call
inc
popf
daa
fwait
sub
pop
pop
cmpsl
fwait
mov
add
dec
jns
ljmp
fcoml
push
stos
sbb
or
movsb
in
or
adc
decl
insl
adc
push
out
into
push
aaa
repnz
scas
sarl
iret
scas
mov
adc
jle
xchg
fwait
xchg
imull
xor
ljmp
xchg
lret
loope
push
xlat
leave
inc
mov
add
dec
push
into
mov
decl
push
ja
gs
jge
out
push
pop
jae
inc
inc
sub
mov
incl
add
mov
fdivs
cmp
xchg
push
cmp
pop
test
xchg
imul
cs
fs
fcmovne
adc
std
ljmp
lock
sub
and
jecxz
pop
jmp
mov
out
cmp
ljmp
cli
pop
enter
xchg
mov
ds
outsb
add
lods
jne
or
and
ljmp
hlt
jge
and
or
das
movsl
fcompl
and
mov
ret
mov
and
insb
mov
add
flds
pop
fidivrs
or
icebp
mov
or
jmp
in
sub
push
push
cmp
xchg
fwait
inc
js
push
inc
mov
add
mov
adc
xor
push
cwtl
and
mov
jns
hlt
sarb
fdivrs
mov
jmp
cmp
or
jle
das
ja
aad
aad
mov
or
pop
scas
incl
mov
and
add
jne
add
fwait
xor
xor
mov
fwait
js
out
jg
mov
out
imulb
mov
xchg
xchg
in
roll
stos
or
jmp
arpl
adc
push
std
cmp
lret
ja
dec
push
mov
mov
outsl
clc
mov
sub
adc
sbbl
clc
ss
call
jecxz
lahf
adc
lret
fistpll
pusha
leavew
cs
jbe
mov
cmp
pushl
test
push
push
es
idivl
stc
mov
clc
aad
pop
stos
and
lcall
add
lret
or
adc
mov
lcall
or
push
lret
add
loope
mov
push
sbb
pop
ret
mov
jns
pop
mov
dec
mov
and
aad
jg
cmp
pop
jns
inc
fldl
cs
rcl
and
ret
js
pushl
jl
xchg
aam
push
xorb
mov
cmpsl
into
cwtl
inc
and
in
jmp
mul
push
std
mul
daa
fs
arpl
call
inc
out
call
lock
xchg
sub
xchg
mov
lea
cmp
je
sti
in
sub
roll
or
jno
xchg
or
rol
or
shlb
sbbb
fcos
stos
pusha
js
jl
or
andl
jb
out
pop
icebp
xor
insb
cld
decl
std
repz
and
in
stos
sub
add
call
mov
mov
movsl
clc
test
push
jge
sub
xchg
decl
cmp
outsl
test
int3
es
mov
cmpb
sti
jbe
or
sbb
sub
lcall
lea
and
fsubs
and
and
xor
int
sbb
mov
jmp
adc
rol
sbb
push
and
je
lods
lcall
out
movsl
mov
decl
or
test
ljmp
sub
jnp
testl
mov
decl
repz
xor
or
jmp
or
jmp
ljmp
inc
mov
cmp
jge
aas
xchg
xchg
aad
ja
xlat
jmp
and
mov
mov
xlat
mov
subb
es
push
jmp
add
xchg
pop
ljmp
xchg
cmpsb
ficomps
jecxz
sub
sub
call
call
mov
es
mov
pop
adc
fwait
aam
mov
test
rclb
pop
xchg
cmp
pop
inc
xchg
jmp
jnp
mov
jbe
push
and
cmc
mov
aas
xchg
pop
in
push
dec
icebp
lcall
jmp
xor
js
insl
rorb
into
shll
jmp
xchg
mov
pushl
test
ret
ret
xchg
js
or
fisubs
push
stos
jge
aas
dec
xor
cmpsb
incl
xchg
mov
pop
xlat
imul
adc
test
cmp
lods
mov
sub
lcall
fstpt
data16
pop
in
out
mul
pop
mov
lea
not
popa
dec
cmp
cmp
lcall
push
mov
add
xlat
mov
jnp
testb
icebp
lcall
mov
sub
fsubr
pusha
fwait
mov
call
sub
dec
mov
sub
pop
ret
push
push
loope
xor
xchg
and
inc
inc
js
addl
aaa
and
or
dec
push
es
das
mov
cmp
test
adc
jp
iret
lcall
pop
sub
or
fidivrs
fs
test
imul
bts
mov
and
mov
cmp
pop
rcrl
sub
call
xchg
addr16
test
insb
sub
xor
dec
push
inc
in
xor
lahf
pop
int
rolb
movsl
and
decl
inc
sahf
iret
push
ss
adc
icebp
out
fldl
lods
rcr
loopne
stos
mov
ljmp
cmpsl
xchg
sub
scas
push
pop
dec
xchg
xor
mov
dec
fnsave
jge
cmp
pop
and
mov
pop
pop
cld
pop
ret
jge
pop
mov
sti
clc
xlat
inc
pop
or
ret
pop
in
push
das
test
mov
cmp
dec
sbb
jmp
jp
in
push
push
or
out
hlt
xchg
je
sub
ret
and
mov
mov
and
inc
cli
adc
test
jmp
popa
cmpsl
in
jbe
mov
mov
add
rorb
mov
cld
mov
faddl
mov
xor
outsb
lea
push
repnz
mov
aam
jo
lds
test
sub
mov
cmp
jmp
adc
cmc
pop
jle
dec
pop
jno
repz
lret
add
aad
clc
sbb
jmp
jb
sbb
sbb
add
mov
or
mov
fwait
inc
mov
cld
decl
out
xor
push
stos
sub
cli
push
dec
pop
inc
and
push
cmp
repz
pop
js
fistl
sbb
lahf
addr16
xor
bound
decl
mov
fdivrp
dec
testl
pop
xor
push
push
in
mov
rcl
nop
les
pop
xor
sub
and
xchg
dec
and
sbb
in
ljmp
ja
clc
pushl
inc
cmpsb
sub
fidivrl
adc
cmp
push
mov
in
into
xchg
xor
fwait
jmp
sahf
xor
popa
dec
fwait
jae
mov
push
dec
jbe
add
decl
pushf
jle
in
mov
clc
rcll
mov
sbb
jge
call
jne
pop
push
subb
jmp
sub
testl
cmp
outsl
inc
mov
clc
rolb
shrl
pop
cmp
sbb
xor
ljmp
inc
in
ficoms
mov
pushl
call
ret
jnp
ljmp
cli
add
int3
inc
lea
bound
dec
mov
pop
xor
decl
mov
bswap
data16
xchg
cmovs
sub
ss
test
ljmp
push
test
inc
scas
cld
leave
dec
into
lods
rol
ljmp
in
leave
mov
xor
jmp
mov
fcmovu
push
sub
in
cld
jno
push
test
mov
ret
loopne
fcmovbe
mov
jae
out
mov
in
mov
dec
cmp
or
lock
fdivrp
jmp
pop
lret
xor
sub
iret
xchg
add
add
xorl
nop
repz
lahf
call
andb
rorb
rol
fnstcw
js
cmp
out
test
ljmp
insb
insl
dec
cmp
aaa
xchg
xor
pop
adc
push
xchg
dec
xor
sub
movsl
jg
arpl
mov
mov
sbb
xor
cld
jp
test
loop
mov
loope
aas
pop
add
mov
cli
loop
pop
movsb
lret
jmp
push
jbe
incl
mov
jmp
out
imul
aas
pop
daa
jl
cmpsb
jg
inc
decl
ljmp
or
sub
popf
lods
int3
and
iret
dec
adc
inc
sub
ret
jmp
mov
test
ret
mov
repnz
mov
ret
cmp
outsl
imul
jecxz
inc
test
sbb
sbb
pushl
leave
in
push
mov
pop
sti
mov
pop
sub
sbb
aaa
sub
sbb
mov
xchg
hlt
cwtl
cmpsb
test
sbb
clc
ljmp
inc
sub
add
aad
dec
fmull
scas
movsb
scas
std
sbb
inc
sbb
int
jecxz
push
xchg
jg
push
cmpsl
pusha
sub
dec
in
ret
bound
loop
loopne
call
es
loop
lcall
mov
xchg
bound
ljmp
enter
and
xor
dec
imul
sub
stc
scas
push
lcall
lods
fwait
sub
adc
stc
xor
sbbl
fcoms
cmp
ljmp
fdivr
pushf
mov
jae
mov
jo
ja
sbb
cmovnp
lds
fnstcw
push
xchg
push
push
jmp
shlb
add
sub
pop
sub
mov
mov
repnz
xchg
pushf
ror
js
loope
jns
mov
push
lcall
inc
enter
mov
jo
add
jmp
rep
sbb
idiv
pushl
xchg
lret
test
push
pop
out
sbb
and
dec
stos
test
popf
insl
add
decl
mov
cmp
pusha
dec
insb
adc
rolb
call
and
ljmp
std
dec
mov
and
daa
jno
movsl
mov
test
push
ret
stos
in
je
pusha
call
lcall
aad
aas
or
inc
imul
int
es
decl
pushf
inc
adcl
shr
xor
fisttps
shl
idivl
jg
mov
das
mov
ss
push
jl
adc
mov
aaa
movsb
incl
jecxz
loope
pop
andl
lods
xchg
ret
cwtl
add
mov
cmc
push
sbb
incl
inc
xchg
cmp
loopne
out
enter
dec
shrl
push
lods
sbb
popa
mov
or
mov
adc
or
xor
mov
out
ja
lods
xor
repz
lcall
fwait
adc
mov
inc
mov
out
xchg
xor
adc
push
mov
push
int
fs
inc
dec
popa
pop
pop
pusha
lods
lds
lret
cmpsb
and
or
cmpsl
lcall
aas
dec
cmp
in
popa
push
sbb
mov
cmp
imul
inc
xlat
aaa
cld
inc
rcrl
rep
adc
add
xchg
mov
jg
mov
cmpsl
mov
mov
scas
sarl
sub
push
inc
add
jns
push
testl
push
sub
xchg
outsl
and
mov
mov
push
fsubl
inc
incl
jbe
call
pop
cmp
pop
into
jnp
or
xor
clc
mov
arpl
pop
jecxz
dec
jo
jae
mov
call
cmpsl
aaa
shrl
inc
xchg
out
add
xchg
pop
bnd
adc
add
stc
mov
mov
xor
inc
xchg
je
jns
push
test
add
incl
mov
dec
cmpsl
sub
vpunpcklbw
jae
xchg
aaa
cld
pushl
lret
sbb
sbb
add
sti
push
mov
pop
jb
push
das
inc
in
arpl
or
lods
into
cmpsl
and
movsl
lods
stos
call
inc
std
or
fcomp
push
cmp
mov
cmp
loopne
jmp
mov
inc
lods
pop
lret
sbb
fsubrs
ds
mov
rorl
mov
popa
clc
imul
mov
push
mov
fwait
jp
jp
in
xchg
pop
xor
nop
les
add
movl
or
cmpsl
dec
jg
fisubs
inc
hlt
and
add
pop
sub
das
shlb
mov
push
addr16
std
out
repnz
mov
mov
lcall
imul
mov
xchg
sbb
jmp
mov
xchg
add
ljmp
mov
insl
mov
in
ljmp
ret
arpl
dec
mov
pop
inc
sahf
jecxz
or
adcb
je
in
hlt
arpl
mov
fadd
cmpsl
into
sbb
dec
vsqrtss
lcall
iret
inc
int
and
adc
and
test
out
das
cmp
in
outsl
dec
cli
sti
outsb
jle
incl
ret
push
xor
out
cmp
lods
add
mov
adc
mov
adc
adc
push
xor
jae
push
fisubl
loop
jae
ss
xchg
mov
lret
aas
lret
dec
movsl
orl
mov
mov
roll
loop
repnz
fwait
pushf
jmp
jns
add
lret
mov
js
dec
sbb
mov
pushf
jo
inc
push
pop
mov
incl
inc
dec
push
and
cmp
or
je
xor
mov
xor
jecxz
mov
or
jg
xchg
int
out
cmc
xchg
call
cmp
fstpl
in
cld
dec
pusha
jecxz
mov
lret
adc
ljmp
inc
lcall
adc
mov
sarb
add
pop
popf
repnz
push
mov
test
inc
fwait
add
dec
sahf
push
inc
inc
jb
pop
repz
sub
in
aaa
cld
or
dec
inc
lods
sub
ss
lcall
in
outsb
call
pop
xor
sti
clc
push
xor
dec
cmc
push
sbb
add
mov
jle
das
in
jne
jno
or
adcb
pop
shl
out
or
call
mov
mov
loopne
int
jl
in
push
roll
dec
mov
pop
mov
sahf
sub
in
mov
jmp
jmp
sub
xorl
pop
adc
cmpsb
ljmp
loope
cld
xchg
in
push
mov
xchg
xchg
sbb
lcall
inc
lret
and
fisttps
sbb
sbb
repnz
scas
leave
sbb
into
ret
data16
xor
push
and
sbb
ss
es
inc
ret
pop
add
push
lods
push
pop
clc
dec
jecxz
dec
ds
iret
sub
xor
cwtl
test
mov
adc
popf
inc
decl
dec
push
pop
cmp
mov
hlt
xchg
loop
fstl
pop
jbe
mov
incl
lock
scas
test
adc
push
jb
sbbl
sub
and
cwtl
jbe
push
mov
jmp
enter
cmc
fld
xchg
dec
adc
mov
or
push
xchg
in
or
dec
sti
call
pop
xor
fistps
pop
jl
setg
xor
or
jg
rcrl
jnp
mov
call
subb
push
lock
inc
mov
test
dec
mov
call
inc
stos
sbb
mov
push
lcall
xchg
arpl
dec
jb
jne
xchg
mov
js
int3
ret
in
dec
cmc
test
cli
aad
stc
pop
xor
inc
testb
cmp
jmp
mov
inc
mov
pop
xchg
outsl
clc
rcrb
stos
inc
inc
das
or
jmp
negb
bound
test
push
cmp
imul
loopne
call
or
adc
mov
push
dec
pop
insb
aaa
cmp
cmc
jns
idivl
iret
pusha
push
subl
add
loopne
cmp
cmp
insl
das
mov
pushl
fs
pop
ja
out
addr16
cmp
push
cmpsl
pop
or
pop
pop
mov
test
jg
jmp
out
mov
hlt
pop
add
sub
lock
adc
mov
scas
les
mov
push
or
fwait
jno
andl
xlat
fistpll
ret
movsb
xor
xchg
loopne
nop
aam
xchg
pop
push
stos
pop
or
incl
ja
js,pn
and
mov
sbb
test
popa
neg
lods
pushl
jo
and
ja
int3
dec
dec
out
mov
and
adc
cmp
call
ss
mov
pop
movsb
sub
int
andb
sbb
cltd
call
cmp
jmp
cli
mov
jne
stos
adcb
add
loopne
pop
push
inc
and
jmp
push
xchg
insl
sub
sub
xor
ret
jb
popa
mov
and
imull
xchg
mov
jmp
pop
enter
add
adc
cmp
dec
adc
ja
fcomps
mov
jmp
xor
mov
insl
lcall
movsl
sarl
push
jae
push
jg
das
sbb
stos
jne
imul
add
ljmp
aad
pushl
push
cmp
inc
cmpsb
xor
cld
bound
or
aaa
jne
mov
and
sbb
movsl
outsb
aas
pop
pop
int3
scas
test
enter
fistl
mov
flds
mov
lock
ret
cmpl
sub
stc
xor
in
test
call
in
mov
cmpsb
enter
cmp
stos
push
cmp
jno
inc
incl
subl
cwtl
loope
add
add
movsl
xchg
cmp
push
andl
xorb
cmc
repnz
jl
les
jl
mov
incl
sbb
pop
iret
mov
pop
cwtl
push
or
in
shl
or
in
ja
mov
lret
jno
pop
xchg
into
stc
cmp
mov
loop
jmp
ret
stos
test
and
gs
sbb
aad
cmp
xor
lcall
pop
xchg
push
mov
cmovbe
adc
aam
lret
push
repz
pop
lret
nop
insl
in
mov
call
xor
scas
lcall
push
fidivl
test
push
and
out
push
push
shlb
mov
jecxz
into
in
sti
bound
cmp
mov
cmp
push
aam
cmp
test
jmp
ds
sarb
mov
dec
add
call
movl
and
into
mov
fildll
mov
cmp
movsb
dec
mov
call
push
inc
jl,pt
sbb
loop
daa
pop
lahf
inc
sahf
sbb
dec
cmp
mov
jmp
sub
das
sar
bound
xchg
clc
ret
ja
xchg
fistps
gs
call
jne
jmp
jge
mov
mov
push
andb
je
scas
sub
bound
out
and
add
jns
sti
fld
imul
fnstsw
pop
mov
cmp
adc
ljmp
stc
cmp
data16
adc
mov
dec
jae
sub
in
mov
and
jg
std
shl
jle
inc
inc
outsl
fwait
ss
loope
movsb
cmp
jmp
fcomip
cmpsb
es
int3
mov
xlat
adcl
mov
pop
jmp
sbb
xchg
jmp
sub
test
aam
ret
scas
pushl
clc
aas
lcall
cld
in
es
jmp
mov
cli
loope
cmc
or
jns
or
adc
jbe
add
std
imul
test
ret
fidivrs
je
cmp
cwtl
and
mov
in
pop
add
or
xor
or
cmp
jl
mov
icebp
xchg
lock
decl
mov
leave
aaa
data16
adc
fimuls
cli
inc
cmpsb
add
or
jns
and
and
inc
mov
cs
push
add
add
mov
pop
insl
cltd
pop
cmpsb
pop
add
sub
jns
push
push
xlat
jp
popa
shrl
repz
shll
insl
dec
arpl
or
dec
ret
ljmp
test
arpl
fldpi
sti
lock
lods
or
mov
lock
out
cmp
xor
mov
das
push
mov
xchg
pop
xchg
or
stos
push
stos
cmp
mov
mov
add
ja
add
cltd
lcall
decl
out
cmp
and
inc
sub
mov
icebp
decl
popa
inc
fucomip
fdivp
aas
pop
into
cmp
add
pop
and
adc
mov
lcall
push
and
adc
dec
cmpsl
or
jle
pcmpgtw
out
mov
xor
sub
sub
shll
in
jnp
pop
mov
jg
add
inc
fnsave
mov
add
ljmp
incl
clc
es
or
jmp
dec
in
jmp
repz
pop
adc
lcall
mov
sub
cs
outsl
mov
movsl
cmc
cmpsb
and
inc
lahf
mov
jmp
repz
xor
mov
lea
in
push
sbb
out
aaa
scas
into
das
mov
incl
fdivr
aaa
adc
inc
mov
inc
clc
leave
fsubl
jno
ss
jmp
lock
adcb
sbb
mov
mulb
loop
mov
pushl
lcall
xchg
icebp
shll
push
pcmpgtb
mov
pop
je
mov
dec
vpackssdw
and
std
pop
daa
sbb
ja
cmp
ficoms
jns
push
xchg
sub
or
lcall
fs
cmpsb
push
into
movsb
loope
push
roll
int
lods
js
pop
sub
call
orl
out
lret
dec
fwait
test
dec
mov
call
hlt
xor
andl
popf
in
test
push
leave
aam
out
inc
push
into
lcall
into
test
mov
push
lretw
popf
adc
fldcw
movsl
add
sbb
dec
and
jmp
insb
cmpsl
push
add
nop
xor
mov
mov
xchg
jno
pushl
xchg
sub
add
mov
cmc
sahf
pop
call
pop
je
push
cmpsb
shl
call
lds
stc
test
xchg
adc
push
cmp
shll
cmp
int3
test
lcall
lods
dec
call
mov
dec
mov
fmuls
add
and
mov
mov
in
scas
lret
push
pop
mov
lret
inc
jne
mov
dec
les
jmp
adc
jp
push
and
test
mov
jge
mov
outsl
clc
jmp
add
sbb
sbb
mov
cmp
xlat
js
call
push
mov
cmp
cmc
pop
movsb
idivl
mov
jb
sbb
xor
add
xchg
scas
lcall
pop
push
loopne
leave
add
sbb
mov
movsb
test
lcall
lcall
mov
movsb
xlat
mov
xor
out
mov
mov
jecxz
sbb
lock
jmp
cmp
mov
add
mov
push
sub
push
inc
pop
mov
call
xlat
ret
aad
pop
insb
mov
jge
es
push
test
xchg
ljmp
testb
subb
cwtl
jb
xor
incb
decl
hlt
leave
inc
xlat
fsubr
lret
dec
add
mov
mov
dec
jae
dec
or
dec
jo
pushw
and
out
mov
xchg
or
xor
and
loope
lcall
sbb
jp
pop
jecxz
jg
lds
incl
iret
sub
pushf
add
inc
push
dec
cli
cmp
aaa
push
cs
cmp
call
gs
cwtl
or
xchg
mov
aaa
xor
aaa
outsb
sar
decl
lock
std
sbb
outsb
fidivl
inc
dec
lcall
cwtl
cwtl
push
int
jge
ret
push
dec
jbe
sar
xor
nop
jae
jnp
jmp
ficomps
xchg
xor
es
loopne
adc
daa
hlt
jnp
adc
mov
add
xchg
fwait
call
mov
test
pop
jnp
mov
ss
jno
add
decl
mov
cs
pop
test
sub
push
xlat
and
test
repnz
push
in
addr16
jno
incl
inc
mov
addb
jne
mov
stos
int3
bound
stos
enter
and
and
mov
push
mov
pop
jmp
push
push
pop
imul
adc
sbb
push
add
sub
cmp
push
sbb
mov
adc
iret
std
decl
mov
xchg
stos
jle
outsl
push
arpl
mov
decl
jge
loop
sub
pop
mov
clc
popa
push
insl
hlt
sbb
pop
lock
roll
jp
xchg
lcall
fnstcw
lods
jae
out
add
lcall
fs
mov
xor
test
jecxz
rorb
decl
jmp
jp
and
push
cmp
cmpsb
in
mov
sub
cmp
dec
test
jmp
mov
mov
int3
sub
xor
movb
mov
mov
fs
divl
sub
stc
fnsave
mov
cmpsb
repnz
inc
mov
out
jne
fs
xchg
jbe
popa
sub
inc
inc
pusha
dec
xor
or
cmp
push
pop
rcrb
and
inc
dec
xor
sub
add
push
sub
add
xor
test
lcall
lds
jmp
ljmp
mov
sbb
out
mov
lcall
lock
movsl
mov
pop
or
xchg
jge
cli
xchg
out
pop
xchg
pop
push
xor
push
xchg
cs
jle
repz
sub
jnp
adc
fisubrs
dec
or
xchg
cmp
mov
call
das
test
fmull
mov
rcrl
mov
dec
cmp
mov
inc
rcrl
mov
cwtl
pop
push
mov
mov
cpuid
jge
adc
pushl
movsb
mov
jne
cs
push
dec
in
scas
dec
mov
jge
xor
out
mov
mov
xchg
js
ret
sbb
ds
pusha
jecxz
fwait
jg
dec
inc
xor
mov
stos
lock
dec
mov
std
ljmp
pop
mov
pop
sbb
and
in
add
lcall
mov
mov
sub
jle
jecxz
or
in
mov
sbb
cmp
mov
cmpsl
test
or
add
fwait
mov
or
and
xchg
lcall
ljmp
test
call
xchg
adc
jle
ljmp
mov
ja
mov
push
add
ja
outsb
pop
scas
or
jmp
xchg
popf
ja
or
ljmp
lock
addr16
sbb
int3
fmuls
insl
sbb
cmp
and
cmpsb
ljmp
or
push
push
mov
and
gs
pop
xorl
ret
aad
fisttpll
lcall
jmp
pusha
mov
cltd
xchg
cmp
mov
cmp
je
add
test
movsl
jecxz
xorb
aam
dec
cmp
outsl
add
mov
add
jecxz
cld
jg
push
les
ss
lret
sbb
ljmp
sarb
enter
ret
dec
mov
pusha
mov
inc
mov
cmpsl
mov
xorb
mov
jmp
pop
mov
ljmp
inc
ljmp
push
sti
andb
and
decl
pop
xchg
pop
fdivl
pop
or
push
push
inc
arpl
adc
jns
adcb
mov
ljmp
enter
pushf
xchg
xchg
nop
xor
stos
mov
mov
cmpsb
jbe
sub
sub
jmp
push
xchg
pop
pop
xchg
jo
inc
loopne
pop
fsub
pop
jns
repnz
incl
ljmp
test
sub
iret
icebp
lds
lret
insl
ret
dec
iret
mov
incl
mov
add
jg
clc
outsl
push
dec
aaa
jp
stos
and
mov
jge
pop
sahf
xor
sar
pushl
test
fmull
jg
scas
mov
cmpsb
ret
sbb
daa
rorl
sub
add
fiadds
push
cld
mov
incl
loopne
push
adc
cmpsb
xchg
sub
insl
add
add
sbb
call
call
mov
jae
sub
cwtl
cld
jae
push
stos
andl
xchg
sbb
das
jg
jg
andb
das
ret
mov
jmp
cmc
push
out
das
icebp
cltd
mov
push
fcmovne
out
inc
inc
and
push
in
push
xor
out
lods
insl
in
incl
into
in
pop
lock
pusha
adc
cltd
jae
cmp
std
xlat
add
test
push
jne
call
sub
adc
mov
repz
les
xor
pop
out
xor
ljmp
mov
mov
sub
mov
mov
adc
aas
outsl
xchg
aam
jmp
fcompl
mov
pop
inc
fildl
sbb
mov
and
push
inc
insl
jle
xchg
or
shll
push
add
daa
dec
clc
repnz
shl
incl
mov
push
inc
dec
incl
enter
cs
outsl
inc
hlt
mov
sbb
out
lret
lcall
js
sti
jmp
js
out
or
add
push
xlat
les
cmp
mov
add
lods
mov
incl
and
std
cli
pop
mov
mov
xlat
dec
push
pop
cmp
xor
cmp
daa
or
sub
sbb
std
sti
dec
pop
scas
shll
fstps
insl
inc
xchg
out
mov
cmp
lret
inc
xchg
jl
in
push
int3
adc
test
push
mov
call
test
adc
out
aam
mov
mov
jno
sbb
and
incl
mov
push
lahf
repz
jle
cs
inc
nop
movsb
jo
mov
pop
outsl
mov
adc
xor
incl
adcl
dec
sahf
rcll
jbe
fsub
lods
mov
inc
cwtl
call
adc
stc
decl
sbb
inc
cli
out
xchg
sti
sti
out
jns
insb
pop
xor
mov
pop
ss
movsb
decl
dec
jns
push
out
jg
jae
js
addb
mull
pop
push
les
fsin
cmp
gs
lock
stos
scas
push
pop
enter
cmpsl
das
pop
stos
call
mov
mov
mov
jecxz
push
cld
ljmp
cmp
jb
mov
and
fidivrl
lret
lock
incl
and
adc
fldl
mov
inc
inc
adc
push
sub
mov
cltd
sub
scas
es
lcall
repz
sub
adc
add
addb
xchg
test
inc
push
lock
incl
popl
jmp
lret
fimuls
fnstsw
cld
out
adc
incl
dec
ret
dec
xor
pop
cltd
dec
lods
neg
inc
shll
lods
lret
pushl
jnp
ds
lret
les
int3
cmp
push
jg
adc
aam
or
scas
clc
mov
and
mov
mov
jo
xor
mov
pop
mov
stc
popf
rorl
mov
mov
mov
aad
stos
add
lods
js
or
or
imul
call
lock
scas
movsl
inc
es
xchg
push
push
mov
fcoms
sbb
push
into
and
call
in
outsb
int
dec
rcrl
out
mov
mov
pop
nop
test
fistpll
cmp
or
mov
adc
xchg
and
loope
nop
push
in
sub
orb
jg
mov
dec
sbb
sbb
sahf
pop
mov
ljmp
je
pushl
sub
mov
aaa
mov
mov
mov
add
adc
lcall
ret
adc
bound
sbb
lods
inc
mov
sbb
mov
ja
cwtl
sub
or
lock
mov
push
outsl
xor
jne
aam
mov
mov
fwait
cmc
jge
inc
sub
xorl
aas
movsl
and
jno
into
scas
repz
sub
xor
jge
inc
jp
es
push
adc
repnz
rorl
add
cmpsl
cli
in
add
push
cmp
sub
call
lret
mov
mov
pop
mov
xchg
and
or
lcall
insl
pushf
pop
cmc
sub
cmp
cmp
test
cli
stos
jmp
insb
sarb
pushl
or
pushf
lea
dec
pop
inc
daa
in
jo
repnz
xor
aas
jge
inc
adc
dec
addl
jmp
dec
or
and
jb
stos
jl
loopne
jb
in
lahf
pop
pop
in
dec
lods
out
sub
jnp
or
mov
loopne
out
out
ucomiss
pop
les
rcr
jmp
xchg
mov
pushl
pop
popf
inc
fcmovnu
js
in
push
mov
test
ficoml
jno
sub
leave
jmp
or
mov
out
mov
lcall
mov
addr16
mov
fs
adcb
push
pop
icebp
mov
lds
fsts
mov
jns
push
test
jg
decl
dec
mov
and
fcoms
add
test
cmp
addr16
inc
jge
ret
add
loopne
gs
call
pop
je
mov
fildll
cmp
decl
push
aaa
lcall
imul
cmp
mov
aas
sbb
mov
ljmp
xchg
mov
pop
imul
dec
push
lret
add
push
inc
ljmp
in
es
adc
fmuls
fcmovnb
dec
int
xor
cs
loopne
int
aam
call
jle
int3
sbb
outsl
pop
cmp
lods
xor
test
sub
jg
push
shlb
lds
adc
adc
lcall
fcmovnu
jg
sub
pushl
jns
testl
sub
dec
test
call
sbb
add
mov
jg
or
enter
lea
xchg
shr
mov
dec
popl
push
pushl
fdivl
adc
xchg
push
andb
aam
int3
sub
fildll
sub
cld
xchg
ret
lret
inc
jb
into
out
mov
xchg
insb
testb
icebp
adc
das
cli
jmp
loopne
lret
movsl
pop
push
adc
testl
sbb
lcall
std
sbb
imul
jge
scas
push
cltd
pop
inc
mov
and
es
dec
incl
inc
pop
in
ds
jl
ljmp
push
jg
push
add
push
shlb
jmp
jge
popa
sub
mov
inc
xchg
adc
mov
pushf
jg
ret
add
sbb
shl
xchg
sub
jmp
adc
aas
push
jecxz
or
mov
pop
mov
ljmp
sub
pushl
and
dec
inc
dec
jb
sbb
inc
cli
jle
iret
add
cmp
push
mov
ljmp
call
mov
jmp
xor
inc
fcompl
inc
add
sar
ljmp
hlt
mov
sbb
xor
sbb
out
fs
jmp
mov
pop
inc
out
ret
scas
aas
mov
fcomi
cmp
pop
cmp
push
dec
add
push
daa
lods
fwait
scas
adc
pusha
inc
pop
jg
inc
lea
decl
jno
sti
jg
inc
negb
cwtl
inc
aam
jbe
iret
rcl
stos
popa
sbbl
cli
sub
push
clc
sbb
jb
sbb
mov
fdivs
xlat
xchg
sub
jmp
push
push
push
data16
fs
pusha
scas
sti
jge
es
pop
mov
pushf
cmp
in
jne
pusha
in
cmp
mov
lcall
call
cmp
ror
stos
movsb
rorl
in
lcall
ja
fistpl
sub
dec
scas
fbld
in
cmpsl
add
inc
fdiv
in
adc
pop
call
jle
lea
inc
pop
lods
sbb
mov
faddp
shl
pop
adc
cld
dec
test
mov
mov
lahf
inc
daa
icebp
cli
mov
les
pop
xchg
cmpsb
adc
inc
xorb
adc
mov
sbb
scas
fs
and
add
inc
ljmp
jle
ljmp
std
lcall
aam
ljmp
movsb
jp
outsl
clc
incl
cmp
pop
test
lret
ja
mov
lods
inc
in
adc
hlt
dec
add
xchg
leave
xchg
push
enter
mov
aad
arpl
dec
imul
mov
js
mov
or
cmp
jge
push
movsb
icebp
adc
fwait
push
xchg
gs
mov
es
push
jl
adc
inc
pop
cmp
pop
mov
pop
repz
xchg
out
sub
bound
jno
icebp
ds
lcall
push
stos
stos
jmp
mov
in
rcl
and
or
out
add
rclb
inc
jge
shlb
push
mov
movsl
fwait
lds
add
fimuls
xor
or
mov
cmp
fwait
mov
lret
mov
push
imul
into
push
mov
scas
cli
jae
aaa
rorb
aas
inc
push
dec
lret
push
je
call
push
mov
adc
mov
cmp
loope
dec
call
cmp
fsub
mov
lock
fidivrs
ja
rcll
jae
ss
mov
arpl
call
add
lds
pop
inc
adc
movsb
pop
mov
pop
movsb
push
stos
pop
push
sub
js
sub
incl
lds
insb
cmp
jno
pop
neg
call
inc
pop
sbb
fisubrs
loopne
mov
inc
or
or
arpl
sbb
call
pop
push
dec
dec
push
in
std
sbb
gs
movsb
push
test
fdivr
jg
xor
cli
imul
and
or
cmp
add
gs
fs
shll
sahf
cmc
pop
pop
fstps
cwtl
imul
jmp
sub
cs
insb
cld
adc
into
or
cmpsb
ja
pusha
lcall
aaa
pusha
xor
push
cmp
push
lcall
mov
subb
and
leave
jecxz
push
jae,pn
leave
pop
xorb
pop
iret
mov
incl
mov
rcr
fdivl
xor
xlat
sbb
sbb
out
imul
cli
pop
xchg
int3
inc
popf
add
push
subb
lock
test
ds
sahf
jns
iret
push
inc
out
sub
dec
movsl
pop
loopne
inc
add
incl
js
loop
jne
cld
fs
xchg
fisttpll
adc
mov
pushl
clc
pop
push
mov
jl
cmpsl
call
xor
jl
push
arpl
addl
arpl
dec
jmp
cmp
jae
imulb
adc
push
dec
pop
movsl
lods
xchg
call
mov
inc
leave
insb
popa
or
dec
std
xor
cmc
lea
xor
shr
lret
call
leave
dec
pop
loopne
jnp
nop
faddl
ret
mov
xor
test
dec
mov
mov
decl
sub
sahf
lahf
popf
mov
in
add
dec
cwtl
repnz
or
and
pushl
stc
jle
sbb
mov
jmp
sub
pop
xor
daa
jnp
cmp
jmp
pop
mov
dec
pusha
and
push
sbb
fwait
inc
lods
int3
push
out
sub
xchg
jmp
mov
mov
push
push
out
or
or
mov
out
ret
push
cmp
inc
jmp
je
mov
cltd
push
out
adc
and
fildl
mov
adc
push
fld
pop
xlat
mov
std
cmpsl
inc
shrb
es
inc
mov
popf
out
fsub
push
decl
hlt
stos
dec
icebp
adc
add
xchg
bound
shlb
ret
xlat
sbbl
ljmp
aaa
jle
xchg
inc
stc
mov
in
bound
les
sub
ljmp
scas
cmpsb
enter
jle
fcom
fnstcw
cmp
call
imul
add
incl
addb
add
and
and
or
xorl
mov
jg
outsl
xchg
nop
mov
out
daa
int3
pop
mov
mov
pop
pushl
cld
fucomp
push
sub
sbb
mov
aam
inc
mov
or
pushf
int3
mov
xorb
test
insb
aam
loopne
popa
pop
loop
mov
cmpsl
lcall
incl
frstor
and
pushf
push
jle
stos
orb
in
xor
add
cmp
xchg
std
sub
aaa
rclb
cld
jg
mov
leave
mov
adc
mov
gs
testb
scas
lret
test
pop
sti
sub
and
decl
mov
loop
or
addr16
inc
setle
movsb
mov
xor
inc
jg
mov
cltd
repz
addl
das
cli
xor
data16
push
add
sbb
lret
cld
adc
les
mov
lret
es
not
sub
mov
or
push
add
call
mov
sbbb
sub
push
adc
lods
enter
ljmp
call
jl
dec
sbbl
pop
jne
ret
mov
stc
jo
testb
jmp
test
stos
lock
ljmp
and
popf
leave
out
sub
jno
inc
adc
cmp
jb
cmpsl
jne
ljmp
pop
inc
faddl
bound
push
fs
or
stc
in
call
cmp
jmp
pop
push
popa
xchg
mov
dec
ret
dec
lods
mov
mul
or
out
lcall
mov
jge
jle
mov
gs
movsb
mov
mov
scas
jmp
lcall
push
fcoml
inc
out
sbb
shlb
adc
lret
jae
int
fcoms
ljmp
xor
jnp
xchg
jnp
cmp
fldt
aad
iret
add
mov
jg
mov
movsb
fldt
cmpsl
and
push
je
xor
xchg
xor
jmp
rolb
lea
mov
popf
cmc
push
lret
push
inc
xchg
icebp
cmp
call
roll
repz
and
or
ret
dec
jae
xchg
test
out
xlat
dec
into
and
sbb
les
repz
jo
aaa
jl
je
ds
incl
or
adc
mov
sub
outsl
popa
lret
xchg
js
lds
pop
mov
mov
dec
das
test
push
ror
out
aas
inc
repz
sahf
dec
aas
nop
incl
cld
aas
popf
mov
and
and
loop
push
xchg
xor
mov
decl
jmp
dec
mov
test
sti
dec
and
jp
add
jbe
mov
divb
jmp
mull
aam
dec
lret
xchg
or
mov
add
call
push
js
loopne
inc
orb
mov
dec
fcoml
adcl
jmp
stos
repz
insb
add
out
push
push
in
adc
sbb
ljmp
push
aaa
inc
pop
jnp
cmp
mov
or
push
dec
jecxz
mov
cmpsb
adc
inc
test
and
mov
in
mov
mov
gs
bound
jmp
ror
es
sarl
mov
sub
stos
and
fisubs
pop
aaa
std
push
and
add
sub
sub
mov
arpl
mov
sub
call
int
jp
push
xor
out
sahf
sub
out
shrl
dec
xlat
shr
ret
mov
std
aaa
xchg
icebp
bound
jns
pop
nop
add
orl
sbb
sbb
mov
jmp
mov
fwait
int3
cld
or
xchg
in
xor
and
ds
cmp
mov
xchg
lret
popa
push
mov
pusha
out
es
idivl
inc
fsubrl
addr16
pop
imul
pop
xor
ljmp
adcl
pop
call
notl
testl
inc
hlt
sbb
outsb
jno
call
fwait
sub
shlb
dec
scas
sub
mov
xor
lods
jg
fcompl
push
jne
push
test
stos
xchg
inc
outsb
in
push
es
cmpsl
rorl
or
sub
out
rcll
pushf
xor
add
adc
mov
jl
idivb
push
fmulp
mov
mov
loope
dec
icebp
lcall
decl
into
inc
insl
and
mov
rcrl
pushl
aas
jb
jle
add
sbb
sub
adcl
mov
pop
pop
call
mov
mov
pop
xchg
xchg
push
incb
imul
lcall
push
lahf
adc
lock
out
aas
pusha
push
pop
jmp
and
sbb
sub
dec
sahf
adc
pop
mov
cli
aad
cltd
mov
nop
dec
xchg
outsb
mov
or
add
pop
jg
test
out
pop
loope
push
mov
imul
clc
fbstp
stc
adc
cmpsb
and
call
cmpsl
cli
mov
incl
sub
lret
xchg
xchg
sarb
mov
inc
push
ds
es
jne
call
pop
testb
push
data16
in
xchg
mov
ljmp
adc
mov
adc
and
and
jno
xchg
mov
jg
jg
sbb
sub
xchg
jl
js
rolb
push
test
and
jmp
bound
inc
xor
add
aam
and
ja
fmull
std
push
mov
push
fstpt
inc
dec
or
mov
stos
pushf
xor
in
jmp
mov
dec
fs
mov
mov
sbb
or
pop
push
lcall
scas
jnp
and
sub
sbb
nop
cmp
lcall
inc
mov
into
aam
cwtl
das
mov
jp
mov
fimuls
call
xchg
pop
xor
or
jne,pn
mov
sub
adc
jge
inc
ljmp
jg
out
cli
push
mov
push
pop
mov
adc
enter
dec
jl
inc
aam
lcall
mov
xchg
xor
jbe
je
mov
incl
sbb
insl
pop
and
loope
bound
jo
in
pushl
es
testl
jns
jo
dec
adc
adc
fs
fucomip
cli
mov
cmpl
fmull
scas
and
ja
add
dec
popf
sbb
call
mov
pop
addr16
add
clc
add
jle
jbe
hlt
pop
xor
imul
test
call
inc
ret
xor
pop
jnp
insl
sub
int3
xor
xor
inc
push
jl
loopne
jg
aad
out
test
xchg
adc
mov
test
mov
jns
out
cmp
test
insl
mov
lret
jg
dec
add
sbb
daa
fnstcw
mov
and
std
and
aaa
cmp
jg
icebp
cli
xchg
neg
andb
imul
aas
adc
sbb
pop
inc
dec
and
xorb
cmp
push
inc
dec
xchg
aas
stos
ljmp
movsb
mov
loop
les
aam
gs
lcall
addb
aas
xor
push
xor
sub
cmp
bound
xchg
js
std
mov
xlat
rorl
push
sbb
mov
andb
inc
inc
xlat
decl
inc
jo
or
jo
loopne
or
jg
loopne
mov
cwtl
sub
out
pop
inc
push
rorb
sbb
sub
fsubr
sahf
aad
jge
cli
xchg
test
lds
outsb
sub
outsl
clc
ljmp
gs
lods
dec
mov
cld
mov
nop
popf
pushl
and
xchg
fadds
fcmovnbe
gs
fldt
jmp
adc
jnp
mov
fsubs
xor
or
push
sbb
cmp
xor
lahf
jb
pop
aas
pop
rol
test
call
loopne
cmovp
mov
push
cmp
je
xchg
add
lea
incl
xor
push
sbb
movsl
sbb
test
in
sahf
mov
mov
ljmp
test
cltd
cwtl
push
pop
cmc
sub
and
les
push
ljmp
mov
fisttpll
pop
mov
out
cmp
push
lods
mov
stos
imul
cmpsb
testl
popf
xchg
fbld
pop
sbb
rcl
push
xchg
dec
jecxz
cmc
call
call
and
test
call
push
dec
dec
out
cmpl
loopne
jns
gs
jmp
stc
ljmp
xor
push
mov
movsl
clc
popf
cmp
faddl
repz
paddd
mov
fcomip
hlt
lock
enter
push
cmpsb
push
stc
outsl
dec
cmpsl
mov
cltd
ljmp
outsb
and
or
loopne
push
cmp
out
or
or
jmp
adc
cwtl
fwait
and
jnp
inc
cmp
shll
mov
int3
shlb
pop
test
pop
pop
push
push
or
pop
cmp
outsb
push
adc
jno
fdivl
dec
pop
inc
outsl
ss
popa
dec
mov
xchg
inc
sbb
xorl
cmp
and
cwtl
cmp
incl
lea
repz
push
das
jnp
in
sarl
xchg
cwtl
mov
or
cs
cmp
pushl
rol
push
mov
mov
inc
xchg
jns
mov
jne
dec
mov
ss
stc
sbb
lods
jmp
and
sub
test
rcr
bound
jmp
sbb
mov
and
das
mov
xchg
push
or
stc
in
push
dec
adc
into
mov
insl
cltd
in
push
dec
dec
insl
xor
insl
shr
mov
adc
addr16
xchg
or
fistl
pop
int
cmp
outsb
sbb
shll
dec
ljmp
xchg
jo
mov
lret
cmc
pop
pusha
lock
fsubrl
mov
and
lcall
popa
and
jg
ljmp
lods
inc
into
xor
fs
gs
fs
mov
lcall
lahf
dec
add
add
enter
and
push
dec
dec
lret
add
add
call
xchg
and
pop
cmpsl
aas
push
inc
mov
sti
cmpsl
add
dec
pushf
add
decl
repz
jg
movsb
in
test
adc
xor
xchg
mov
sbb
push
aad
ja
or
mov
mov
pop
loop
loop
pushl
inc
mov
mov
dec
rorb
divb
pop
ss
out
je
cld
mov
ds
cmp
loop
push
xor
push
or
stos
arpl
or
ret
push
ljmp
xor
dec
mov
xchg
jmp
mov
mov
sub
or
and
push
outsb
popa
jl
pop
call
adc
jne
cltd
sbb
jne
icebp
cmpsb
test
stc
jbe
pop
jle
int
sub
fs
mov
inc
mov
test
js
xor
rorl
add
lcall
or
scas
jno
nop
push
fsub
or
pop
jg
sbb
mov
loop
cli
xchg
push
and
mov
add
popf
dec
fcmovb
add
mov
mov
push
stc
push
fistps
shrl
jg
shrb
dec
push
popa
inc
sub
push
sti
pop
sub
and
pushl
fwait
sub
fisubrs
ds
jmp
enter
ficoml
or
ljmp
and
lahf
sbb
ds
and
jbe
adc
xchg
lahf
pop
fcomip
out
cli
mov
in
xchg
pop
test
test
mov
and
in
push
std
decl
ljmp
push
mov
add
mov
push
lock
aas
imul
xchg
aad
inc
xorb
in
mov
mov
out
rcr
mov
xchg
out
pop
or
and
shrl
mov
scas
add
ljmp
xor
mov
nop
test
inc
inc
es
ljmp
call
add
aad
jo
mov
test
cmp
push
pop
iret
jecxz
aam
es
dec
cli
incl
mov
xor
cld
adc
or
jmp
push
out
mov
pop
aam
sub
mov
cmp
mov
jmp
repnz
je
push
loope
roll
pusha
mov
int
cli
pop
repz
cmp
mov
jecxz
gs
inc
add
gs
sbb
sti
out
repz
jmp
in
mov
dec
out
inc
add
insl
enter
jle
mov
jl
cmp
incl
lods
into
push
push
out
sbb
repz
js
add
pop
xchg
ror
sub
cmp
call
xchg
or
fildl
pop
leave
bound
push
cwtl
or
add
and
les
test
mov
call
push
mov
cs
add
mov
and
and
fwait
cwtl
sti
mov
xor
add
sub
shrb
rolb
sub
jge
decl
outsl
cmp
mulb
push
and
insb
out
cmpsb
push
mov
test
jbe
in
js
aad
fucomip
xor
pop
pop
sarb
add
inc
mov
out
sbb
lret
int3
pushl
add
and
ret
xchg
xchg
std
and
mov
fsubrs
and
lahf
loope
mov
mov
jmp
mov
clc
lock
jge
test
mov
xchg
hlt
out
mov
cmp
mov
mov
cltd
xchg
pop
xchg
xor
xchg
mov
mov
lcall
inc
cli
cmp
loop
xchg
sbb
lock
rorb
mov
shlb
decl
in
xor
jno
add
data16
ror
insl
jmp
add
call
sbb
mov
xor
cmc
adc
subl
pop
cmp
jg
push
loop
jae
mov
dec
pop
shl
jl
icebp
cwtl
inc
int3
push
push
mov
inc
clc
adc
call
rol
inc
xchg
aad
push
lea
fldenv
mov
jo
jecxz
pop
xchg
pop
pop
sti
mov
js
and
cld
insl
mov
mov
pop
cmc
test
std
jnp
jmp
fdivrs
pop
aad
mov
jle
and
in
jg
xchg
pop
es
ret
jns
ret
sub
adc
in
push
mov
cwtl
push
pop
and
inc
mov
rcr
pop
mov
adc
pop
and
insb
and
les
push
stos
rcr
fsts
pop
inc
loopne
test
jmp
push
sbb
ror
or
call
dec
data16
je
jmp
mov
jmp
cmp
mov
pop
enter
ffreep
xchg
add
fiadds
xor
enter
int
jmp
sub
or
loope
rol
xchg
pushl
dec
and
aas
push
into
mov
mov
int
xchg
repz
inc
clc
hlt
push
in
inc
cmp
frstor
outsl
aam
mov
fbstp
sub
jns
jl
mov
sub
fisubl
pushl
loope
mov
fdivrl
mov
test
jbe
in
mov
push
jp
mov
or
mov
push
in
add
js
sub
xchg
out
jp
cmp
movsb
inc
sbb
cwtl
lds
loope
push
repnz
push
xor
loopne
movsl
loope
add
xchg
iret
inc
rol
call
jp
in
mov
sub
gs
mov
inc
inc
pop
mov
xchg
lret
arpl
pop
mov
sbb
outsb
mov
insb
push
lcall
pop
int
sbb
xor
xchg
loopne
add
insl
cmp
lock
pop
lea
call
xchg
popa
dec
mov
hlt
or
xor
jecxz
mov
and
inc
jae
jecxz
out
loope
or
mov
test
mov
lods
icebp
dec
jb
movsl
addb
xor
jno
push
adc
incl
push
aaa
push
sahf
iret
xlat
jo
mov
jae
dec
scas
mov
jns
fnstsw
sti
data16
sahf
pop
ljmp
loop
jae
mov
movsb
jbe
cwtl
rcl
inc
jbe
sub
pop
or
mov
xor
nop
cwtl
push
add
and
pop
lret
jmp
test
pop
int3
push
cmpsb
enter
or
mov
sbb
mov
sbb
iret
push
mov
jl
in
fadds
xchg
movsl
in
xor
add
cmp
adc
fmull
mov
lea
mov
xor
pop
dec
xchg
outsl
sar
pushl
adc
jecxz
mov
mov
add
lret
add
pushl
outsl
and
clc
push
push
fildll
jo
iret
pop
xchg
fstpt
call
jmp
jns
divl
pop
stos
jb
lcall
push
lods
jbe
leave
js
dec
mov
mov
jae
daa
xchg
lea
in
xor
dec
mov
mov
mov
add
ds
adc
lods
lahf
adc
lods
xor
xchg
push
dec
mov
jno
jg
scas
mov
arpl
int
out
push
es
mov
pop
jg
pop
std
sahf
mov
std
decl
xor
cmp
mov
push
pop
cmpsb
xchg
mov
ret
adc
loopne
jmp
rcrl
jo
syscall
sbb
movb
in
push
ret
and
xor
push
sbb
into
mov
inc
jns
outsb
and
divl
inc
fcmovnu
adc
stos
and
jg
xlat
divl
push
jecxz
jmp
xchg
insb
dec
pop
popa
loopne
jmp
rcr
sbb
and
fildll
inc
fsubl
sbb
cmp
es
mov
fs
jg
fdivrs
mov
add
fidivrs
sub
ljmp
inc
hlt
push
arpl
jo
mov
jnp
pop
jmp
xchg
test
mov
push
test
push
je
into
pop
adc
mov
cmp
mov
imul
sarl
and
push
cmp
dec
and
aad
or
mov
mov
pavgw
mov
jmp
adc
adc
cmc
das
mov
shrb
frstor
movsl
mov
pushl
stos
movsl
inc
out
jne
jb
fisttpll
push
cli
int3
fnstsw
insl
xor
sar
lods
outsb
mov
sub
fucomi
add
adc
shlb
imul
outsl
xor
leave
sub
icebp
xlat
pop
pusha
xor
push
and
fisttpl
cs
sbb
ffree
clc
jnp
jnp
pop
jnp
and
mov
inc
arpl
mov
sub
cmp
aaa
cld
decl
add
std
inc
and
cmp
sub
out
push
xor
pushl
push
sahf
mov
inc
and
cmpsl
clc
out
cmpsl
out
jnp
add
in
xlat
incl
pop
add
test
pop
data16
sub
nop
sub
push
pop
sbb
aad
cs
push
in
aad
shll
push
jae
cs
sbb
lcall
dec
jcxz
stos
mov
sbb
shlb
out
std
xor
push
lcall
xchg
add
insb
xor
jae
call
popf
or
sub
fsubl
fwait
cmp
mov
jo
jo
jo
das
out
xchg
rorl
in
pop
fstpl
pop
mov
call
decl
sbbb
rol
loope
push
mov
cltd
fidivrs
xor
lret
push
mov
pushl
pusha
fdivs
xor
dec
lret
fstpt
inc
push
push
scas
inc
bound
lods
incl
sbbl
mov
dec
test
jg
push
idivl
scas
idivl
inc
cli
lret
nop
movsl
xor
dec
jmp
push
daa
mov
pusha
mov
negl
dec
lea
sti
js
test
or
fistps
lret
sbb
xchg
adc
jecxz
je
rclb
ljmp
inc
loope
std
push
mov
sub
lock
test
lret
and
icebp
pop
fdivr
decl
jl
sub
imul
xor
jae
in
xchg
push
test
clc
xor
into
mov
and
out
fidivrl
sub
dec
scas
or
or
orb
push
pop
xchg
xor
jnp
sbb
jnp
popa
jae
push
es
lcall
pop
insb
jge
add
inc
adc
inc
imul
enter
xor
add
cmp
ftst
add
ret
pushf
mov
dec
test
sub
enter
push
cmpsl
loopne
mov
pushl
dec
sbb
mov
jmp
repz
mov
xorb
add
f2xm1
xor
jp
fistpl
sti
paddw
call
pop
ret
lods
push
cmp
sub
mov
fsubl
mov
test
cli
mov
hlt
xor
mov
out
sub
call
test
cmpl
xchg
movsl
mul
rorl
fs
or
pop
inc
add
incl
pushf
in
adc
dec
xchg
push
loope
rcrl
add
mov
pop
xor
adc
jmp
std
cmp
incl
notl
sub
imul
out
xorb
icebp
mov
jmp
add
inc
notb
mov
cmpsb
in
mov
cmp
mov
mov
xchg
jge
add
into
and
into
fcoms
aas
mov
pop
nop
xor
ret
cmp
decl
xchg
popl
pop
and
add
movsb
cld
inc
movsb
ds
sub
dec
jecxz
jmp
and
cli
jp
cmp
mov
stos
mov
mov
pop
and
adc
jg
adc
or
mov
notl
jb
sbb
ja
repz
outsb
adc
mov
decl
mov
xchg
cmpsl
aaa
cs
shl
mov
pusha
jmp
adc
iret
iret
dec
and
inc
cli
shrb
jb
add
in
aas
or
fistl
mov
jecxz
inc
sub
jne
dec
pop
jp
xor
push
jp
cs
hlt
fimull
movsl
cltd
addl
adcb
add
scas
clc
loop
sti
movsl
icebp
mov
rolb
clc
jle
rcr
push
and
lock
jmp
and
pop
sub
mov
ds
xchg
and
xorb
mov
push
mov
cs
jmp
push
add
xchg
notb
nop
adc
xor
fnsave
pop
add
dec
add
call
push
push
mov
sbbl
xor
clc
out
das
lods
jmp
fsts
mov
sarl
inc
xchg
incl
jg
scas
test
enter
fs
stos
popf
out
es
fbstp
and
push
pop
mov
dec
or
lahf
sbb
mov
sub
mov
cld
xchg
lods
push
divl
ror
jg
lock
fldt
mov
push
outsl
mov
es
enter
call
xor
sbbb
repz
mov
lea
loope
test
fsubs
pop
push
js
ja
or
xchg
into
mov
push
dec
xor
pushf
push
jl
dec
or
sbbb
xlat
cli
jae
rdmsr
sub
mov
call
icebp
cwtl
xchg
pusha
ret
loopne
sahf
mov
and
and
divl
xchg
jns,pn
std
daa
and
add
std
lahf
jo
loop
adc
mov
loop
jb
jo
clc
int3
sbb
sahf
decl
or
ljmp
fs
imull
push
xlat
push
decl
jne
inc
adc
jbe
es
popa
in
call
sub
lret
ret
andb
jecxz
ret
in
xor
or
pushl
cwtl
sub
cld
pushf
sbb
daa
inc
jmp
sahf
add
xor
inc
xchg
aaa
adc
jg
lcall
mov
mov
cmc
fidivrs
insb
push
sbb
cli
ljmp
divb
lcall
inc
out
mov
xor
mov
outsl
clc
pushl
sbb
push
aad
rcrl
movsl
mov
mov
add
xchg
adc
lahf
adc
cmp
imul
adc
cmp
fldl
iret
popa
push
or
sub
push
into
in
add
call
bound
and
in
popa
or
push
cmp
mov
sbb
push
inc
fs
inc
jecxz
aaa
mov
imul
fstpl
repz
mov
lods
xchg
sti
dec
dec
cmp
lock
mov
in
call
aaa
aad
incl
jbe
cmp
out
sub
sub
imul
ja
lcall
jmp
xor
jp
xor
popf
aad
and
addl
sbb
jns
add
roll
pop
sahf
call
sti
into
lahf
notb
ds
divl
pop
lcall
xor
and
orl
sbb
pop
push
jmp
push
cmp
sub
out
jmp
hlt
pop
cs
lcall
add
call
or
bound
push
hlt
mov
xchg
pushf
add
mov
jmp
sub
and
ljmp
arpl
ret
sbb
push
xchg
popf
movsb
mov
jmp
inc
xor
sarb
imul
push
jbe
lds
mov
stos
add
enter
jmp
ret
ret
sbb
into
push
and
fbld
pop
repz
mov
pop
sub
fmulp
mov
mov
dec
cmp
loop
lahf
mov
mov
inc
xor
int
fsts
incb
setns
inc
cmp
cmpsb
scas
xchg
xor
into
push
mov
aas
hlt
mov
xchg
mov
pop
push
mov
sbb
pop
jns
inc
iret
cmp
jmp
mov
imul
mov
iret
cmp
mov
cmp
cld
fwait
jo
incl
sti
aam
daa
int3
pop
fxch
push
lds
jae
test
rcl
ljmp
push
nop
popf
mov
movsb
xor
pop
mov
loop
jo
and
inc
pop
push
mov
jb
fisubl
jle
push
mov
dec
sarb
sbbl
stos
dec
imul
pushl
cmp
jp
push
ja
push
push
or
xorb
lcall
mov
xor
push
pop
cmp
lcall
mov
fcmovnu
jb
pop
stc
mov
sbb
clc
cs
fists
mov
dec
mov
or
orb
mov
lock
add
push
sub
shll
jmp
test
pop
sub
push
and
add
test
jbe
lea
nop
call
decb
sbb
xor
arpl
sarl
outsl
dec
cmp
pushl
mov
rol
mov
sub
xor
and
in
or
shl
incl
pop
in
xchg
jg
xchg
lods
aad
cmp
cmpsb
push
dec
imul
add
xchg
sbb
mov
sbb
cmp
shrb
addr16
loopne
pushl
fisubrl
mov
push
dec
or
pop
push
inc
daa
lods
sub
cmp
cmp
adc
fstl
jnp
jmp
jbe
inc
es
xchg
jo
movsb
mov
es
imul
mov
pop
arpl
es
pop
sub
ret
or
lcall
es
aam
mov
mov
pop
cld
pop
adc
jmp
das
push
xchg
gs
sub
rcrb
pop
fwait
test
mov
je
ss
and
imul
xor
addb
add
mov
repnz
pop
in
or
mov
dec
lcall
pop
push
cmp
push
fildll
mov
jg
xchg
test
inc
mov
incl
lds
rol
shlb
push
push
rorb
cs
ss
cmc
lods
sub
movsl
sbb
iret
mov
test
out
roll
dec
lods
pop
pop
push
adcb
in
add
div
push
repnz
dec
loope
cld
lock
in
sti
xor
inc
mov
decl
and
lret
mov
ret
pop
jne
in
sti
sbb
call
cmp
call
ljmp
mov
mov
scas
cmp
add
dec
sbb
arpl
leave
test
mov
fdivrl
mov
inc
test
xchg
cmpsl
popf
out
pop
out
int3
js
shrb
lcall
jae
cwtl
dec
cmp
and
test
das
adc
mov
mov
fcoml
mov
xchg
and
fidivl
int3
dec
sub
sub
popf
sbb
out
mov
adc
lds
in
stos
sbb
in
bound
xor
pop
add
pushl
xchg
mov
xchg
ds
mov
mov
lcall
es
test
jp
bound
hlt
sub
xor
xor
inc
lock
ljmp
pop
lock
jb
insb
scas
mov
roll
movsl
bound
push
int
dec
cmpsb
add
mov
sti
sarb
ret
adc
test
bound
jnp
sub
dec
incl
mov
xchg
pop
hlt
fldenv
jno
ds
imul
and
punpckhdq
jp
or
mov
push
cmp
lcall
test
in
dec
pushf
rorb
mov
mov
pusha
jne
movsb
inc
arpl
add
insb
pop
stos
rorl
cs
and
cld
fcomps
dec
xchg
pushl
push
or
orb
jp
lret
mov
push
mov
mov
movsb
test
clc
mov
and
pusha
je
sti
loop
add
repnz
push
test
lock
jmp
aas
push
mov
xchg
leave
scas
pop
leave
loope
pop
clc
pop
test
sbb
incl
sti
mov
repnz
cs
sbb
test
mov
lret
mov
decl
xor
sbb
adcb
add
rorb
mov
pop
mov
sahf
test
pop
decl
subl
push
jbe
sbb
mov
mov
mov
call
std
mov
xlat
aad
js
lahf
enter
mov
fadd
rorl
ret
mov
push
cmp
nop
rcr
dec
mov
push
xchg
sahf
dec
or
in
push
pop
dec
int3
call
jecxz
repz
ret
aas
inc
mov
jne
adc
lahf
jnp
mov
stc
and
push
stos
jbe
setge
inc
out
push
xchg
hlt
andl
inc
mov
incl
mov
mov
and
cmc
or
push
mov
gs
bound
dec
loopne
mov
stc
or
sbb
lret
adc
std
sub
sub
decl
in
bound
daa
mov
daa
test
jb
inc
cli
jg
pop
and
adc
lret
push
lret
pushf
fcom
or
add
call
hlt
and
pushf
fidivrs
sbb
hlt
mov
loopne
in
push
mov
xchg
mov
repz
pushl
mov
hlt
sahf
fstpt
pop
cmp
xchg
push
xchg
sbb
leave
outsb
mov
sbb
mov
lods
and
cmc
roll
outsb
jno
push
fstpl
jno
mov
jecxz
std
or
mov
cwtl
and
fildll
aam
mov
setle
and
fwait
das
call
aad
call
in
mov
inc
movsl
arpl
shr
adc
stos
push
repnz
call
jmp
and
jns
mov
loope
lods
test
mov
nop
cltd
sub
and
lcall
into
push
mov
outsl
imul
or
pop
or
add
in
aad
sar
cmp
popl
adc
clc
cmp
and
in
push
insl
pop
pop
clc
movsb
clc
jmp
sti
inc
stc
lock
push
adc
test
mov
pop
test
cmp
clc
decl
lcall
sbb
scas
fcompl
test
incl
mov
fwait
and
jnp
mov
pop
rcl
or
push
push
test
push
cltd
adc
ret
mov
lds
in
pop
cmpsl
pusha
sub
aaa
icebp
lcall
sub
mov
cmp
jne
fdivs
neg
dec
into
dec
add
leave
ljmp
call
pop
shl
pop
loope
fcoms
jbe
pop
rcll
dec
lret
and
repnz
lcall
mov
push
lock
dec
fists
gs
and
xchg
int
movsl
mov
loop
call
insb
popf
xchg
sbbb
or
imull
std
pop
xchg
mov
nop
loopne
push
pusha
mov
in
push
mov
and
sub
adcl
or
jnp
lea
jmp
mov
bound
and
out
pop
or
and
jb
push
jg
pushl
sbb
les
sub
je
mov
mov
xor
ljmp
fnsave
aad
aad
mov
add
cmp
fistpll
fsubs
jecxz
mov
sahf
mov
and
iret
xchg
pusha
fldl2e
dec
push
cs
iret
pop
and
stos
in
cmp
pop
lret
xor
aam
inc
mov
ret
and
fisttps
mov
or
fnstenv
xchg
xlat
push
fists
test
or
stos
mov
call
sub
mov
xchg
push
notb
mov
aad
repz
scas
push
inc
nop
pop
imul
cld
cld
cmp
adc
jne
adc
add
mov
ljmp
mov
jge
xchg
das
or
es
lds
and
pusha
jmp
adc
loop
call
jl
jle
sahf
cmp
stos
repz
mov
push
data16
arpl
inc
mov
or
mov
popa
jb
cs
cmp
inc
testb
sub
decb
call
mov
dec
xchg
or
jo
fs
mov
inc
cmpsb
addr16
pop
or
push
aas
xchg
fs
inc
int3
inc
loop
cmp
pushf
push
ljmp
dec
enter
loopne
int
push
loopne
xchg
adc
add
adc
pop
inc
out
scas
nop
lock
or
inc
in
and
push
cmc
mov
call
bound
cmc
testb
and
shl
xor
mov
idiv
aam
mov
cmp
mov
ljmp
and
mov
and
push
leave
mov
and
movsl
lcall
jnp
and
jmp
fidivrs
clc
xor
pop
adc
push
ljmp
xlat
call
insb
clc
and
pop
movsb
xor
inc
leave
adc
jmp
js
fld
and
cmc
jp
mov
mov
xlat
xor
or
pop
cmpsl
mov
es
pushl
and
and
call
cmpsl
fmuls
jge
jne
dec
lret
scas
push
sahf
jno
sub
inc
mov
jmp
loope
sti
pop
movsl
mov
or
cmp
ljmp
mov
in
jbe
repz
incb
push
jno
shll
push
cmp
mov
xchg
outsl
mov
sub
into
xchg
sahf
dec
push
push
shll
and
repz
xchg
scas
xchg
sbb
call
stos
push
mov
push
lods
jno
mov
ja
aas
jae
pop
andb
js
push
cmp
dec
or
fimull
test
iret
cmpsl
clc
add
lret
lcall
stc
leave
adc
mov
xchg
cmpsl
mov
ret
pop
pushf
or
adc
loope,pt
ljmp
nop
or
mov
int3
xor
jb
sbb
incl
mov
fnsave
mov
sub
add
xor
mov
das
xchg
mov
decl
sbb
das
mov
push
fcoms
mov
xchg
adc
push
int
out
les
data16
call
mov
insb
ror
shll
clc
sbb
sub
ds
loopne
cmp
call
cmp
or
pop
mov
test
in
push
stos
or
rcrl
and
mov
call
in
frstor
push
in
lock
fsubrl
jo
fdivrl
iret
fsts
pop
xchg
cld
ljmp
push
sub
in
dec
bound
inc
sub
cmp
lcall
ret
push
popa
xor
lock
cmp
nop
mov
and
out
add
mov
lcall
push
push
mov
push
jbe
loopne
inc
loopne
cs
pop
dec
repnz
mov
push
ljmp
sub
and
lods
cmp
xor
sarl
inc
jo
aas
dec
ret
jnp
jmp
or
popf
loope
dec
push
jmp
jmp
fwait
cmp
shlb
cld
and
xchg
xchg
ret
int3
out
fistpl
xchg
pop
mov
cli
mov
popa
adc
popf
xor
daa
aam
sub
cmp
out
stc
add
in
adc
incl
lahf
push
rorb
rorl
xlat
sub
das
sarb
add
dec
lea
add
out
lret
xchg
cmpsb
loopne
sahf
mov
mov
out
sbb
les
enter
push
lcall
push
enter
mov
add
int3
movsl
adc
dec
aam
jns
jmp
lcall
sub
cmp
sahf
popf
cltd
je
loope
test
xchg
pop
lret
stc
dec
aad
mov
push
je
sbb
ret
loope
test
aas
mov
dec
cmp
ss
into
sar
ljmp
fs
mov
push
mov
push
mov
adc
xor
adc
decl
rcll
inc
rcrl
mov
and
outsb
mov
test
sub
ja
jp
lcall
push
push
inc
hlt
mov
jno
push
ss
gs
cs
mov
cmp
sub
stc
push
push
jle
sub
hlt
nop
loop
into
jne
sub
jmp
push
jg
into
roll
xor
mov
mov
xor
call
repnz
xchg
cmc
xchg
shl
cs
and
add
insl
xor
adc
ret
mov
enter
push
stos
push
and
dec
push
ret
ja
and
orb
mov
or
jnp
xchg
or
xor
cmp
shl
aas
pop
mov
loopne
pop
push
push
in
or
decl
test
mul
jge
dec
out
ljmp
ret
mov
sahf
mov
enter
ja
rcrl
jno
lcall
mov
push
push
sub
add
and
pop
enter
inc
push
xchg
sub
loope,pn
cmp
push
pop
aaa
or
adc
mov
dec
inc
xchg
lods
ja
rorl
jg
fdivl
mov
mov
jae
inc
mov
sahf
mov
sbb
lcall
sbb
popf
add
adc
test
jmp
and
movsb
das
fs
inc
push
incl
dec
mov
dec
mov
test
dec
int3
iret
ret
mov
sbb
lcall
xor
es
ret
pusha
int3
fs
cmpl
mov
fcmovnu
sti
dec
movsb
adc
pop
xor
add
jmp
hlt
in
fldl
das
mov
cmp
cld
jg
or
stos
sub
mov
fcomps
xlat
push
inc
mov
insb
jnp
nop
pop
dec
loop
push
lcall
mov
adc
out
cli
pushl
pop
xchg
xor
xchg
lds
stos
sahf
data16
icebp
jle
ret
sbb
or
sub
adc
shlb
outsl
add
subb
dec
adc
sbb
test
sub
enter
mov
jmp
shl
leave
cli
xor
mov
decl
fs
push
mov
mov
hlt
leave
push
jp
call
sbb
aas
add
sahf
push
mov
mov
dec
lods
std
stos
addr16
dec
jecxz
call
lcall
ljmp
mov
cmp
test
fcom
or
pop
push
cmp
cld
or
mov
incl
fistps
xchg
mov
push
getsec
les
jne
pop
in
xchg
jns
insl
dec
testb
mov
lcall
jecxz
sar
cmp
xchg
mov
decl
jbe
sahf
scas
into
mov
jg
lock
std
and
mov
cmp
pop
inc
cld
mov
int
inc
push
movsb
mov
or
add
cmp
mov
lea
scas
cli
ljmp
fldt
xchg
mov
or
movsb
mov
pop
xlat
mov
sbb
push
sti
lcall
adc
or
daa
in
mov
out
clc
jg
insb
cmp
pop
cmp
mov
int
out
or
add
pushl
jg
or
mov
sub
lcall
repnz
mov
mov
test
mov
in
inc
hlt
mov
mov
jae
inc
sub
into
test
pushl
inc
icebp
pop
or
sbb
jno
or
xor
mov
test
decl
std
mov
std
movsl
push
popf
cmpsb
jle
movsb
mov
test
pop
cmpsb
jl
icebp
mov
lods
push
rcrb
out
mov
push
cmpl
mov
push
mov
fisubs
add
mov
in
adc
cld
mov
inc
imul
bound
outsl
lock
call
lret
ja
aam
shlb
ret
test
lcall
dec
lcall
in
sub
pop
pop
push
cmp
pop
dec
jmp
lcall
sub
push
push
xchg
repnz
cmc
mov
mov
popa
pop
in
sbb
jp
popa
adc
ja
stos
inc
es
gs
sbbb
fidivl
jne
nop
aaa
idiv
incl
lea
inc
mov
pop
cmp
pop
loop
xorb
jns
add
les
fistl
and
or
push
dec
push
jb
add
jmp
mov
fs
or
dec
pop
cmp
adc
lock
daa
and
mov
incl
dec
in
jecxz
pop
movsl
nop
sarl
jecxz
dec
jl
jne
repnz
decl
dec
out
aam
out
inc
pop
mov
insl
dec
jmp
cltd
in
imul
sbb
push
rcr
test
arpl
scas
subb
or
pusha
fimuls
daa
or
mov
decl
and
sbb
fimuls
xchg
bsr
push
movsb
sub
mov
mov
imul
dec
mov
test
sarb
mov
adc
test
pop
into
xchg
dec
add
mov
dec
stos
adc
or
lret
fcoml
jne
rcrl
adc
cmp
fucomi
es
pop
dec
ljmp
fwait
xchg
lds
enter
pop
jb
pop
cwtl
inc
mov
dec
jl
int
cmp
ficompl
mov
pop
fdivl
int3
insl
fcmovbe
scas
pop
push
mov
jg
mov
hlt
xor
xor
andb
mov
push
xor
dec
mov
popf
pop
pushf
fldl
jle
cmp
jle
ljmp
lea
call
inc
lock
mov
cmp
sub
xor
cmp
jmp
ja
es
push
mov
fstps
arpl
pop
das
fdivs
pop
mov
dec
sbb
ja
jmp
les
pop
lret
push
movsl
lods
fdivrl
sahf
push
mov
push
cld
loop
jae
negb
lods
xlat
int
ds
cmpsb
or
inc
add
dec
enter
or
enter
xchg
mov
aas
rorl
decb
sahf
pop
scas
lods
inc
lret
insl
es
ret
add
push
movsl
jp
inc
sub
jg
nop
loop
sbb
cmp
mov
in
out
sub
mov
sub
rorb
cli
mov
push
test
adc
lret
adc
adc
cmp
pop
add
jne
pop
mov
icebp
adc
push
mov
mov
scas
pop
xchg
push
or
sub
orb
decl
decl
scas
sub
out
push
outsl
test
lret
cmp
and
pop
sub
int
lret
mov
outsb
xlat
pusha
xor
push
sub
xor
lods
inc
dec
pop
pop
pop
insl
jmp
dec
or
push
out
std
mov
in
pop
mov
push
sub
mov
sub
push
push
sub
addr16
mov
and
imul
aaa
pop
out
bound
jbe
lcall
nop
push
xchg
mov
jge
cmp
mov
cmc
jp
jns
leave
ret
dec
rclb
shlb
fadds
mov
in
das
das
mov
insb
push
test
ljmp
aam
fildll
inc
loopne
push
pop
fucomip
cwtl
pop
push
sub
push
sar
jg
mov
shrb
mov
lret
mov
rcll
dec
mov
push
je
xchg
ljmp
mov
push
cmp
fnsave
mov
push
cli
adc
pop
ss
pop
mov
push
inc
in
ljmp
push
scas
sarb
add
ror
mov
stos
cmp
jecxz
cli
mov
lcall
mov
shlb
add
adc
jecxz
add
mov
incl
test
sub
adc
mov
cmp
ja
add
add
das
sar
ss
fs
push
movl
or
jg
mov
or
jae
sub
inc
inc
xchg
jnp
jp
and
daa
adc
ljmp
je
jge
jne
push
fwait
pop
js
leave
fsubrp
js
push
mov
push
decl
push
into
inc
lock
push
movsb
je
jns
mov
cmp
imul
out
push
stos
push
sbb
or
fs
insb
add
arpl
pushf
adcl
inc
ljmp
xor
test
sub
xchg
mov
stos
jns
dec
fiaddl
test
repz
dec
xlat
dec
jmp
jl
sti
int
pop
sub
dec
nop
pusha
addr16
call
sub
ror
call
push
aad
and
adc
test
cltd
jno
pop
sbb
out
cli
decl
or
mov
in
fdivrl
push
fldcw
ret
lcall
fistpll
subb
rolb
or
shlb
mov
add
mov
fistpll
sub
insb
dec
and
cmp
dec
mov
aad
out
cld
adc
mov
call
xchg
dec
dec
jae,pt
cltd
cmp
jo
and
mov
add
cmc
cs
xchg
mov
lock
cwtl
and
sti
enter
inc
ljmp
and
or
jl
xchg
frstor
jo
gs
add
std
ljmp
lcall
cld
mov
xor
shlb
adc
ja
cli
call
aaa
push
test
inc
in
and
js
and
mov
jae
ljmp
fiaddl
fdivrs
cmp
mov
jo
mov
fisttps
lahf
lods
jae
call
call
lcall
mov
fidivrl
and
lods
das
in
jge
notb
dec
ljmp
xor
popa
sub
or
push
jns
mov
sahf
and
jge
and
decl
cmc
filds
inc
or
fbld
jmp
icebp
add
cmpl
jle
cmp
lds
sub
mov
jmp
cmpsb
cli
dec
shll
es
lahf
mov
xchg
in
gs
mov
jmp
mov
fucom
xchg
mov
repz
jmp
pushf
iret
add
loop
xor
ss
call
pop
dec
shlb
xchg
daa
stc
pop
add
mov
xor
outsl
pop
and
and
stos
jg
lcall
movsb
pop
daa
call
rclb
sub
lcall
pop
icebp
iret
push
jns
inc
nop
dec
or
adc
in
jp
adc
stos
incl
test
lcall
mov
sahf
jnp
popa
lcall
jnp
in
add
and
pop
rcrb
xchg
mov
or
pop
dec
mov
adc
ljmp
mov
daa
jne
rorl
ret
xchg
lock
mov
xchg
and
ljmp
insl
cmp
mov
pop
enter
sbb
push
fwait
dec
add
fcomip
pushl
mov
pop
mov
xor
adc
out
movsl
or
repz
and
scas
push
pop
mov
incl
sub
inc
test
rcrl
mov
fadd
dec
faddl
sti
and
lea
sbb
movsl
adc
push
mov
jmp
mov
incl
je
stos
movb
jl
xor
ret
in
stc
daa
jb
fldt
std
ljmp
adc
int
sub
call
jl
pop
mov
out
mov
call
out
stc
jne
iret
pop
and
push
in
add
cmp
xor
gs
pushl
rcl
in
dec
lock
popa
das
stos
mov
adc
inc
lahf
cmp
adc
cltd
sbb
jmp
mov
sti
mov
data16
jg
daa
xor
cli
cmpsl
dec
cmp
mov
in
out
jg
lcall
inc
or
or
mov
fiadds
sbb
sub
decl
loopne
dec
sub
fs
mov
iret
ret
test
jge
push
push
mov
cli
mov
bound
xchg
shrb
dec
or
mov
pushl
xlat
call
enter
mov
test
xor
decl
mov
inc
loope
lods
lock
dec
dec
adc
add
and
pop
adc
xor
jno
push
hlt
cmpsl
scas
jmp
lcall
pushl
ds
addr16
ja
cmpsb
out
cli
pushl
xchg
adc
ficoml
lea
inc
loop
xchg
into
hlt
dec
fistl
push
jmp
loop
dec
push
es
cld
push
pop
mov
out
aaa
inc
adc
xchg
inc
mov
in
incl
jns
dec
das
in
mov
mov
push
add
gs
mov
push
mov
push
ja
push
leave
and
inc
stos
pushl
cmp
cmp
jge
push
mov
std
jp
or
jge
lods
pusha
out
movsb
pop
fidivrl
lods
lcall
fmull
inc
out
push
in
insl
xor
stos
and
lret
ljmp
in
stos
push
stos
aas
xchg
sbb
cwtl
pop
sub
jae
loopne
sub
jg
mov
int
shrl
ljmp
popa
movntq
mov
mov
mov
scas
or
call
sbb
movsb
add
les
mov
cmp
aaa
pop
jb
lret
dec
movsl
inc
dec
stos
decl
ficomps
sahf
int3
sbb
push
imulb
adc
push
clc
sub
push
decl
ret
mov
add
je
addl
pop
lret
cmpsb
decl
jbe
xor
pop
jle
mov
push
push
push
dec
jo
outsb
daa
pop
stc
mov
aas
inc
in
mov
sahf
push
xchg
lea
pop
push
mov
mov
sbb
cwtl
loopne
gs
sub
sti
add
jmp
stos
test
and
fs
mov
dec
jb
lds
mov
mov
call
aaa
sub
dec
lret
mov
jge
test
outsb
sbb
jno
das
sbb
icebp
sub
outsl
stos
insl
pushl
das
sti
or
fld
and
push
pop
pop
adc
mov
or
sbb
mov
int
xor
icebp
rorl
lret
adc
fdivr
decl
xor
cmp
mov
test
nop
lea
lock
inc
lcall
or
daa
rcl
scas
call
lea
xchg
xchg
mov
call
rcr
clc
mov
sub
gs
or
decl
mov
loop
push
sti
sub
icebp
ret
push
mov
push
fwait
cwtl
imul
adc
or
ljmp
popa
lods
clc
adc
divl
sub
shlb
adc
incb
xor
jmp
jnp
mov
fmull
cmp
inc
xorl
sbb
ljmp
inc
xchg
dec
sbb
jns
call
mov
pop
fwait
cltd
das
js
mov
addr16
push
shl
push
test
outsb
int3
pop
push
stc
fs
lret
loope
into
cs
xchg
out
fadds
sub
js
add
add
dec
pop
dec
or
ja
jb
and
test
push
dec
incl
stos
push
dec
sar
lds
fdivrs
inc
pop
xchg
decl
mov
pop
mov
sti
insl
jno
dec
and
out
or
imul
ljmp
cmp
std
cltd
or
and
call
or
push
mov
movsl
push
out
dec
push
xor
gs
js
xchg
mov
adcl
push
test
inc
aaa
ljmp
add
add
pop
jns
leave
mov
jl
xor
mov
cmc
aas
mov
dec
sahf
inc
sbb
outsl
clc
lret
fwait
mov
fwait
movhps
add
sahf
faddp
dec
ret
xchg
jl
jmp
add
mov
pop
add
sahf
loope
ljmp
ja
int3
or
jle
incl
cld
inc
cmpsb
pop
mov
in
push
aaa
adc
mov
lahf
push
lcall
mov
mov
mov
cmp
outsl
pop
adc
or
jmp
hlt
xor
lcall
into
cwtl
mov
fdivrl
iret
stc
mov
popf
mov
clc
and
decl
pusha
lcall
js
stc
mov
pop
into
outsb
push
loopne
and
call
pop
inc
mov
xchg
iret
or
xor
push
pushl
sub
fsubs
xchg
mov
sub
movsb
lret
out
lods
icebp
fs
repnz
mov
stos
push
sub
aaa
lock
lds
xchg
iret
das
add
cmp
icebp
dec
insb
movsb
inc
out
push
mov
mov
dec
sahf
es
cmp
loope
jns
into
dec
mov
clc
cltd
pop
add
jo
xor
jno
ja
add
fsubrs
mov
idivb
shll
sti
out
inc
test
and
lods
push
jo
push
fucomip
pop
cmc
decl
cs
enter
sub
imul
jp
popf
dec
mov
lcall
jb
sbb
inc
pop
and
mov
pop
mov
rol
je
into
std
lods
clc
pop
std
mov
push
std
dec
or
lods
xchg
icebp
pop
cmp
shrb
ret
int
cmp
fnstenv
pop
sub
popf
mov
pushl
pop
test
out
pushf
into
push
xchg
xchg
mov
insb
out
sub
push
ljmp
cs
cs
aam
sets
mov
mov
in
push
aas
sbb
mov
xchg
scas
and
xchg
hlt
jmp
push
mov
push
add
jecxz
inc
mov
js
cmp
lcall
dec
jno
mov
mov
pop
push
outsb
imul
mov
ljmp
fld
insb
pop
dec
es
lods
jl
ud0
out
mov
pop
inc
and
test
and
mov
push
fcomip
incl
in
sahf
adc
or
sub
sbb
inc
adc
jecxz
out
mov
xor
ljmp
push
dec
ss
push
mov
lcall
mov
scas
fisubs
sbb
fsts
lahf
fnstenv
push
fnsave
xor
fsts
in
jmp
mov
mov
scas
jp
fwait
jle
jb
fs
sub
jmp
sub
mov
lock
repz
ret
lods
rclb
clc
clc
out
jp
lcall
xor
cli
cmp
pop
mov
xchg
decl
cs
loope
decb
stos
ds
lods
pop
clc
lock
gs
mov
sbb
dec
sub
scas
and
push
leave
xchg
stc
pop
inc
repz
push
cmp
or
jmp
add
xorb
movsb
sub
clc
cmp
inc
lcall
imul
insl
cmp
sbb
ja
push
sub
mov
fcomip
jl
add
fsubrs
inc
pop
adc
pop
shrl
hlt
ficoml
lcall
jo
jnp,pt
push
pmulhuw
outsb
adc
lds
mov
or
cmp
les
outsb
ljmp
scas
cmp
jae
or
andl
mov
popa
jae
xor
push
push
add
lds
rorl
into
in
testb
lcall
ljmp
sbb
adcb
push
pop
jbe
lock
into
sbb
push
pusha
cltd
mov
lret
sahf
add
xor
or
into
out
push
xrelease
test
sbb
roll
cmp
mov
mov
call
inc
lahf
sar
sbb
mov
jnp
xlat
mov
int3
or
mov
push
lds
lea
adc
test
call
cmp
das
add
popf
lods
into
test
inc
xchg
mov
jbe
fwait
nop
dec
xchg
call
mov
pop
jmp
test
shlb
test
jge
mov
pusha
inc
ret
stc
cmc
incl
cld
cmp
std
in
and
jp
lea
sub
xor
roll
or
pusha
xlat
cwtl
mov
xchg
cs
icebp
jmp
hlt
mov
test
mov
pop
lods
movsb
lods
push
jns
cwtl
xchg
fwait
xchg
ss
add
push
jbe
dec
mov
add
cmpsl
mov
sti
outsb
push
pop
dec
xchg
cmp
inc
xlat
push
adc
mov
and
jmp
add
inc
push
pop
push
nop
or
into
int
pushl
fdivrl
dec
pop
mov
inc
or
mov
sti
data16
sahf
cmp
jmp
lds
aam
ds
loope
and
dec
ficompl
mov
in
xchg
dec
sub
je
and
outsl
adc
cmpb
mov
adc
xchg
test
add
lods
cmp
in
enter
in
ror
std
inc
pop
imul
imul
xchg
mov
ds
les
lret
into
sub
pushl
pushf
imul
shl
in
lock
int
outsb
add
push
mov
jg
jmp
insl
in
push
leave
add
jae
mov
mov
fptan
jg
xchg
mov
pop
fstpt
mov
data16
rol
xchg
mov
cmc
adc
cltd
and
xchg
sub
jge
das
sbb
dec
sub
sar
dec
mov
aad
push
mov
je
sbb
incl
out
cltd
mov
jmp
repz
mov
inc
lods
pusha
add
push
frstpm(287
sub
sub
imul
rcr
jbe
sub
or
decl
cmpsl
lock
sar
shrl
dec
into
ds
jnp
popa
fstpl
pushl
jns
sti
pop
je
push
adc
xor
dec
outsb
push
mov
mov
xor
call
lret
cmpsb
imul
cvtps2pi
fldcw
lods
push
push
lcall
sbbl
fdivrp
decl
xchg
mov
in
xor
push
dec
mov
mov
mov
aam
inc
inc
aaa
imul
incl
xorps
or
lret
daa
or
jns
mov
imul
pop
and
sti
cmc
outsb
pop
in
lret
cs
clc
imul
add
repz
insl
mov
or
push
clc
gs
xchg
xor
fs
insb
adc
daa
shl
aas
mov
in
push
aaa
loop
aas
aaa
fiadds
nopl
jge,pn
pop
jg
jg
outsb
movsb
daa
inc
call
sub
in
xorb
in
and
out
std
xchg
add
pop
jae
adc
add
jmp
xchg
adc
jle
mov
mov
mov
adc
pop
insl
movsb
and
lcall
adc
and
jno
movsb
sbb
sarb
nop
inc
pop
ljmp
jmp
pop
fcom
pop
mov
aad
daa
out
inc
fstpt
dec
insl
push
stos
pusha
std
mov
lret
test
push
icebp
push
adc
jnp
fidivs
xchg
xor
lea
fs
and
push
cmp
psubd
jmp
push
subl
roll
mov
pop
push
repnz
or
add
fildl
ljmp
mov
lahf
adc
pop
mov
sub
pop
pop
int3
in
jnp
test
lcall
xchg
xor
adc
push
adc
scas
and
sub
incl
popa
inc
outsb
cs
fldenv
adc
or
mov
inc
out
dec
pop
push
andl
sbbl
xor
call
inc
push
je
test
aaa
pop
push
cmp
mov
icebp
inc
mov
cmp
push
push
je
hlt
daa
jo
or
test
cmp
add
jmp
dec
repnz
and
mov
or
or
movsb
add
jg
mov
imul
outsb
out
mov
dec
mull
out
push
cmpsl
mov
cwtl
mov
nop
loope
adc
in
push
in
add
lcall
ljmp
rorb
or
fimull
lcall
cmpsl
cmc
xchg
xchg
dec
loope
clc
xorb
dec
mov
sbb
lods
mov
push
out
sub
jo
sbb
fnstsw
stc
decl
mul
notb
test
out
mov
shlb
repnz
mov
decl
aas
inc
and
bound
jb
cmp
mov
fsub
sub
push
or
mov
xor
sub
mov
mov
pop
imul
sub
iret
repnz
jns
in
push
ret
mov
pusha
adc
imul
cmp
fadds
enter
pushl
das
mov
push
ds
inc
push
pop
sub
push
cmp
int
addb
outsb
loope
mov
call
shll
cmpb
inc
leave
push
sub
add
insl
pop
and
enter
cmp
call
lds
xchg
arpl
jbe
and
push
shlb
inc
out
push
popf
lcall
mov
mov
jnp
or
sbb
adc
inc
pop
and
pushf
mov
jmp
lret
or
inc
cmpsb
xor
fsubl
js
fstp
stos
incl
pushf
hlt
cmp
sbb
ljmp
pop
cmc
movsb
das
das
cld
fdivrl
push
mov
cwtl
adc
ss
push
cld
jmp
mov
jae
into
mov
imul
aas
bound
xor
mov
jg
std
lcall
mov
sarb
pop
and
pop
adc
fimuls
lcall
out
rcrb
testb
add
loopne
pop
lds
push
dec
and
jmp
leave
xchg
push
stos
test
insb
add
inc
stc
and
repnz
mov
testb
sbb
ss
sbb
fdivrs
mov
inc
inc
add
pop
lcall
aas
into
decl
jg
or
das
xchg
mov
xchg
ror
sbb
in
jae
ss
lock
ljmp
clc
stc
pop
xor
or
inc
fistpl
lret
bound
sahf
dec
loope
xchg
and
incl
cld
mov
orl
jecxz
ror
xchg
sti
pop
cmc
outsl
clc
pop
adc
cmpsl
sbb
pop
push
cmpsl
add
fwait
or
mov
ljmp
mov
aam
mov
outsl
test
add
movsl
jle
imull
filds
imul
push
adc
inc
rorb
xchg
push
adc
jg
sbb
push
shrl
stc
jl
hlt
int
jnp
test
pop
adc
and
push
fidivrs
mov
call
cmp
push
nop
pop
jne
sub
add
std
jns
notb
out
sti
jmp
nop
and
or
imul
mov
adc
pusha
loope
jecxz
mov
jmp
mov
adc
ret
push
sbb
frstor
dec
mov
les
jmp
outsb
mov
loop
inc
sbbb
jg
out
mov
in
cmpsb
push
or
ret
xorl
pop
out
jbe
es
xor
cmp
jg
adc
mov
sbb
pop
jg
sub
dec
cmpsb
vmovddup
cmc
cmp
sbb
popa
fcmovnu
in
jnp
dec
push
call
gs
stos
inc
mov
popa
loope
cmp
mov
dec
cmc
sbb
ljmp
fdivrl
lcall
fcompl
sarb
sbb
add
in
andb
jmp
hlt
push
inc
rorb
sbb
pushf
addr16
aam
cmpl
push
nop
incl
ret
push
mov
fbstp
pushl
into
arpl
dec
or
roll
lea
mov
push
push
popa
pop
cmp
ljmp
decl
mov
xchg
out
bound
rcr
and
imull
mov
ljmp
mov
fistl
cld
and
es
into
jge
fildll
in
add
jbe
sub
dec
aam
lock
sahf
std
pushf
mov
jl
mov
xchg
stc
sub
mov
imul
ds
jg
loop
clc
or
adc
dec
mov
jp
pushf
in
addr16
ud0
mov
daa
push
lcall
push
daa
cmc
add
push
xlat
bound
adc
idivb
decl
pop
or
movsl
sub
add
cmp
adc
ljmp
or
out
pop
and
pop
mov
pop
sub
pushl
add
subl
lods
cmp
dec
mov
pop
int
add
imul
shll
cmp
add
mov
lcall
lods
adcb
mov
and
add
sahf
test
adc
sbb
ljmp
sub
dec
push
aam
mov
fsubl
xor
push
cmpsb
and
lcall
aaa
cwtl
popf
sti
xor
loope
loope
sbb
popf
in
fsts
lret
dec
je
xchg
popf
stos
ss
ljmp
xchg
sbb
adc
fucomi
sub
jne
mov
std
out
pusha
push
lock
test
jmp
stc
fdivl
es
push
out
xchg
in
addl
mov
repnz
out
push
jg
in
jb
add
inc
cmp
mov
stc
aas
int
testb
call
pop
int
push
fisubrl
loope
jo
lds
out
inc
push
fwait
sub
push
test
jno
jbe
sbb
testb
sbb
xchg
imul
iret
mov
inc
outsl
or
jnp
inc
ret
fimuls
dec
adcb
push
sub
add
je
mov
jg
sub
sbb
std
mov
fistl
mov
cli
test
in
in
icebp
lea
inc
subb
cs
sbb
sti
sub
test
fildll
js
fiaddl
call
xchg
aaa
cltd
out
cld
mov
push
outsl
add
ljmp
out
js
mov
dec
cmpsb
cmp
ljmp
pusha
cwtl
repnz
loop
jge
inc
xor
xorb
icebp
mov
cld
push
loop
cmp
mov
mov
pop
jecxz
arpl
clc
adc
xchg
mov
inc
ljmp
out
popa
xchg
lock
aad
cmp
dec
xchg
bound
sub
xor
rolb
mov
sub
incl
add
lahf
pop
andl
xchg
cmp
fistpll
dec
or
int3
inc
dec
data16
incb
pop
dec
int3
stos
leave
jp
pop
push
fdivp
int
std
lcall
inc
ret
pushf
pop
jge
enter
sub
outsl
jno
lds
pshufw
lock
mov
sbb
lea
aaa
idiv
lods
popa
jne
sar
or
decl
jae
pop
inc
call
push
cmp
pop
sahf
out
and
cld
popf
scas
xchg
cltd
call
out
jl
sbb
pop
clc
orb
fstl
hlt
push
or
add
loopne
dec
imul
push
lcall
lock
dec
xor
loop
jae
imul
pushl
cmp
adc
inc
and
lret
cmp
mov
ds
fnstcw
and
jae
cli
fbld
mov
push
pop
push
cld
or
push
iret
xchg
ret
jp
ss
fcmovu
leave
out
decl
fwait
adc
scas
int
ss
push
jb
or
and
mov
int
in
decl
jnp
test
sub
rclb
add
sbb
popa
fists
incl
fs
mov
negb
pop
mov
lcall
pop
dec
sbb
or
add
inc
add
call
js
pushl
and
mov
loop
pop
jnp
push
jae
je
or
inc
fiadds
outsl
xor
lcall
cltd
hlt
sub
repnz
clc
mov
std
incl
cs
dec
xchg
jg
adc
mov
mov
jle
mov
mov
ror
das
push
inc
pop
push
lds
sbb
push
add
outsl
mov
bound
pusha
jns
loopne
sub
mov
lcall
cmc
xchg
jle
inc
aam
mov
fs
push
sub
fisttpl
adc
push
fistpll
jmp
cmp
cld
in
es
push
xor
lods
xor
mov
fldl
push
pushl
mov
js
sbb
mov
xchg
jp
lea
adc
xchg
call
pop
dec
add
and
jb
aaa
scas
push
push
xchg
dec
jo
sarl
add
mov
shll
push
in
mov
sbb
pop
adc
imul
cwtl
incl
dec
adc
cmp
les
push
jl
rorb
xor
jns
div
jg
dec
lds
int3
xor
ficomps
sub
fidivs
adc
jge
add
mov
pop
shl
pop
lret
aas
aad
mov
les
xchg
mov
rcl
fbstp
lcall
icebp
sbb
mov
shll
cmpsb
mov
pop
cmp
mov
stos
sbb
push
jne
jns
xchg
outsb
cmp
incl
into
push
xchg
add
push
mov
sbb
mov
jmp
xor
ds
divl
mov
push
push
xchg
loope
mov
int3
mov
or
dec
hlt
add
stos
loopne
sqrtps
xchg
push
mov
jmp
mov
jmp
ljmp
mov
js
test
pop
xor
cli
push
test
pop
sbb
ljmp
mov
mov
push
mov
dec
dec
push
movsl
cmp
dec
jg,pn
pop
es
lock
jl
mov
adc
idivl
adc
xorl
adc
mov
stos
mov
sbb
mov
pop
jle
stos
push
mov
call
imul
mov
push
out
mov
loopne
inc
mov
adc
fldcw
push
loopne
or
addr16
rcrb
movsb
std
dec
pushf
rcrl
call
cs
push
and
mov
jbe
inc
mov
jg
test
cmp
mov
lods
ss
cld
or
jb
sbb
roll
insb
imul
jg
in
mov
or
lods
inc
notl
mov
aam
stc
sub
sti
test
cmc
subl
in
gs
idivb
loope
repz
or
cs
jno
decl
call
and
push
mov
adc
xchg
add
dec
ret
arpl
iret
cmp
pushl
push
xchg
push
imul
cwtl
push
push
rclb
jmp
sahf
movl
hlt
jl
sbb
adc
sub
cmp
jnp
xchg
in
and
xchg
hlt
call
loopne
movsl
imul
aam
ja
sbb
adc
stos
in
dec
fistps
xchg
xor
enter
pop
add
lahf
rolb
adc
and
imul
jp
out
inc
mov
push
mov
jo
insb
sbb
sub
call
lods
add
pop
dec
lds
inc
and
in
add
testl
pushl
or
dec
lods
xor
movsb
inc
lret
andb
das
and
aas
stos
fwait
loope
les
out
fcomip
decl
sbb
jbe
pop
jecxz
jbe
icebp
xor
mov
imul
inc
push
shll
lods
ret
lahf
push
sbb
mov
pop
flds
decl
in
or
inc
and
ljmp
jb
push
loop
icebp
lret
or
js
and
icebp
ret
push
out
scas
cmp
push
mov
incl
scas
pop
jp
mov
push
cmpsb
scas
leave
mov
cwtl
outsb
push
insb
fnstenv
mov
ljmp
add
pop
pop
pop
dec
and
dec
ret
xchg
and
into
lcall
dec
negl
and
jno
xchg
cmp
ja
jg
add
aad
js
pushl
xor
int3
dec
dec
mov
imul
or
mov
push
lcall
sub
aaa
test
lcall
sub
mov
mov
insl
ds
push
imul
sub
pop
jns
pop
repnz
inc
fdiv
lret
cmp
test
lcall
sbb
sub
push
in
ret
jo
jne
xor
js
sbb
out
cmpsb
add
decl
jecxz
lods
sub
cltd
sbb
mov
or
mov
lret
icebp
xlat
sub
cli
jg
shrb
jmp
pusha
and
mov
data16
stc
xor
js
arpl
decl
les
in
lret
cmp
sub
jns
sti
mov
lret
cld
aas
scas
cmp
es
dec
push
push
in
inc
dec
sbb
mov
jae
sub
push
pop
subl
aad
lock
pop
mov
or
jno
and
sbb
scas
xchg
cmp
ret
cmp
outsb
cmp
daa
pop
cmp
cltd
xchg
lcall
int3
leave
push
sahf
sbb
scas
mov
cmp
loop
inc
mov
mov
jg
outsl
pop
dec
aam
adc
push
ss
fsubs
adc
out
push
test
add
push
inc
inc
xor
sub
xor
push
imul
ja
jg
cmp
dec
test
xchg
fsubl
mov
add
fsubr
dec
mov
jmp
jne
xor
test
xchg
jmp
mov
xchg
int
sbb
mov
clc
jmp
mov
sbb
les
ficompl
dec
and
mov
das
xchg
jl
push
add
sar
or
dec
sbb
in
jo
sub
cmp
fnstenv
mov
cmp
cs
push
sbb
push
xor
push
fdivrp
call
mov
mov
cld
cmp
lret
leave
lahf
gs
repnz
xchg
dec
cmp
pushl
xchg
mov
mov
push
sbb
incb
xchg
sbb
mov
jmp
mov
inc
jo
call
andb
out
cmp
stc
lods
les
movsl
push
movsl
adc
push
jge
lcall
xchg
push
dec
adc
inc
or
push
mov
into
cmp
sarl
sbb
jmp
pop
mov
jmp
lret
sbb
mov
pop
lahf
adc
imul
out
sahf
popf
sti
mov
mov
jmp
sub
sbb
fcmovnbe
adc
push
and
and
jg
clc
lcall
test
adc
sub
lret
lods
and
scas
stos
iret
out
cli
and
ljmp
cmc
push
leave
iret
inc
orl
shlb
mov
test
mov
cltd
pop
icebp
jle
call
adc
sub
repnz
stc
scas
popf
mov
dec
lretw
or
sahf
int
incl
jg
out
xchg
jae
fiadds
xor
icebp
xor
lcall
push
movl
outsl
or
mov
call
push
mov
xchg
jnp
mov
loop
jae
mov
jae
imul
ja
push
mov
or
pop
push
sub
sbb
pop
filds
inc
push
inc
or
leave
xchg
dec
jmp
incl
data16
cmp
add
mov
mov
roll
incl
sti
and
in
jns
out
lahf
aam
cs
jb
sbb
jmp
fisubrs
adc
cld
in
test
int
addr16
lcall
push
dec
popl
repnz
cmp
xor
jg
into
mov
scas
mov
aam
or
mov
dec
lret
cwtl
jg
test
push
xor
xor
cmp
mov
test
arpl
push
das
xor
lcall
roll
negb
or
xor
loope
push
inc
lahf
or
and
push
sbb
ljmp
jo
push
push
inc
cwtl
xlat
dec
and
pop
lret
push
xchg
and
adc
sbb
mov
mov
mov
jle
bound
inc
popa
out
sbb
in
mov
add
fldcw
sarb
in
ds
jle
jecxz
out
jecxz
pushl
sbb
sarl
inc
push
cmp
mov
dec
fincstp
or
dec
adc
dec
cmp
mov
incl
test
add
push
adc
jge
cmp
jae
xorl
decl
push
mov
xchg
add
mov
dec
and
les
inc
int3
dec
imul
imul
idiv
adc
shl
lret
mov
push
test
adc
push
cld
sub
mov
cwtl
outsb
addr16
mov
decl
out
adc
xor
mov
fnstsw
and
mov
incl
adc
fsubl
aaa
test
repnz
daa
jo
add
out
out
decl
jae
mov
pop
cld
or
loopne
aas
dec
jo
lahf
jo
mov
rcrb
loopne
pushl
push
add
pop
inc
std
and
test
pop
cmc
cli
aaa
inc
xor
mov
aaa
or
ja
inc
int3
dec
or
mov
in
inc
cwtl
xchg
cmpsl
cmp
and
out
pop
xor
movsb
mov
lret
dec
cmc
lret
lret
shr
push
nop
dec
inc
pop
icebp
in
sbb
incb
xor
icebp
movsb
add
fstpt
adc
loop
outsb
rcr
mov
movsb
xchg
fcompl
faddl
cld
decl
loope
ljmp
lock
adc
loop
cld
call
jecxz
sbb
outsb
andl
fdivrl
inc
or
out
in
lcall
fdivr
cmp
pushl
inc
inc
fldcw
mov
add
and
cmp
call
mov
xor
fstps
push
stc
pop
popa
pusha
mov
xorl
sub
jo
and
ljmp
push
pop
and
imul
daa
push
mov
pushl
lock
mov
add
mov
repnz
bound
scas
xchg
mov
ljmp
ja
jp
adc
cmp
push
adc
mov
jge
daa
mov
es
outsl
sbb
out
or
dec
cmp
inc
pop
mov
fsubl
cmp
call
push
push
enter
rorl
ret
pop
enter
pop
mov
mov
call
mov
out
adc
mov
xchg
aaa
mov
and
cld
incl
pop
xchg
clc
xchg
mov
clc
cwtl
movsl
movsb
lret
fistpl
inc
mov
shll
dec
test
call
jb
adc
outsb
int
loopne
shlb
enter
add
pmulhuw
rep
pop
std
jmp
mov
cmp
jae
lock
xor
hlt
push
dec
cmpl
dec
call
jbe
dec
das
xchg
mov
sbb
popa
pinsrw
mov
jbe
incl
inc
rcl
es
or
pop
int
sti
pop
cmpsl
inc
mov
xchg
mov
jno
mov
je
and
dec
icebp
fsts
mov
xor
lret
jns
test
pushl
hlt
enter
jl
aas
push
and
mov
lcall
dec
movq
fcomip
lcall
mov
or
and
push
and
adc
jge
mov
adc
mov
push
cld
push
cli
pop
lahf
mov
subb
jns
dec
or
pop
sub
fwait
dec
inc
dec
sar
jmp
leave
cltd
in
cwtl
shll
mov
int
sbb
xor
and
addb
cld
stos
loop
cmp
xor
daa
outsb
mov
daa
daa
add
push
xchg
inc
arpl
sub
sub
fs
stc
mov
icebp
aam
push
push
xor
sub
or
xor
roll
dec
decl
call
ret
cmp
sub
mov
jmp
ja
clc
xorb
shlb
ret
aas
mul
xchg
and
mov
adc
out
sbb
push
jg
leave
insb
fidivrs
imul
push
fiadds
lcall
mov
jne
cmp
pop
mov
push
cld
jg
mov
jae
stc
adc
enter
not
pop
jmp
stos
mov
movsl
sub
pushl
xchg
cmc
iret
movsb
stos
in
mov
dec
fs
pop
jb
xchg
out
and
jno
out
lahf
jmp
inc
addl
cltd
fs
sbb
mov
mov
in
loope
jle
andb
xor
lcall
fsubs
sahf
pop
icebp
pushf
adc
or
push
add
and
push
jg
or
dec
adc
push
add
adc
scas
cmpsl
mov
fcoms
mov
or
cld
push
jg
jp
aam
sub
sub
fstpl
decb
popf
cmp
jg
add
pushl
pop
clc
jmp
adc
mov
sub
movb
decl
mov
xchg
ljmp
inc
sbb
or
jno
int
jecxz
pop
and
mov
popf
xchg
mov
pop
loopne
jmp
sbb
pop
pusha
pop
sarl
movsb
call
or
imul
dec
mov
mov
loope
sbb
and
add
pop
pop
es
jp
call
mov
sbb
inc
pushf
mov
jmp
les
into
out
xchg
push
mov
mov
jl
lock
push
les
mov
adc
mov
movsb
pop
jmp
dec
jl
fisttps
fs
dec
in
mov
xchg
add
mov
cmp
jbe
loopne
call
adc
sar
int
push
mov
pop
push
je
ss
fs
repz
decl
add
imul
in
jnp
movsb
push
xchg
shrl
lret
jne
lcall
or
lahf
pop
lret
mov
mov
enter
enter
jmp
fsts
mov
lds
repnz
adcb
lcall
or
scas
push
ja
xchg
hlt
mov
cmpsb
xlat
and
out
cmp
dec
sbb
mov
mov
ja
or
adc
push
out
insb
aad
xchg
mov
es
popa
jle
mov
out
int
lcall
push
loop
mov
xchg
dec
pop
movsb
add
sub
mov
jmp
pushl
pushl
mov
jg
jecxz
jo
inc
and
xor
cld
pop
loop
sti
call
aam
pusha
mov
and
mulb
push
int
sub
call
fiaddl
fwait
jmp
aaa
xor
pop
stos
xor
dec
test
pop
sti
pop
ja
lret
cmp
add
decl
shll
mov
iret
jmp
les
inc
data16
mov
jmp
xorb
push
bound
add
push
push
sbb
sub
out
ds
jg
sbb
ret
stos
inc
roll
add
jb
iret
jns
cmc
mov
lcall
jmp
add
mov
xchg
mov
jae
lcall
push
xchg
add
inc
cmp
push
xor
lcall
movsl
lcall
cmp
adc
fstpl
cwtl
mov
cmpsl
aad
push
lcall
cmp
dec
add
cmc
inc
xor
je
xlat
xchg
cli
lods
pop
push
es
inc
push
xor
incl
std
push
push
xor
lock
xchg
fisubrl
add
addb
ss
ljmp
sub
jbe
shll
xlat
lods
out
or
cmp
movsl
nop
cmpsb
mov
adc
pushl
sub
insl
fdivl
sarb
mov
dec
jp
sub
mov
add
sub
call
call
stos
jg
sbb
or
pop
mov
stos
in
mov
test
lret
lcall
mov
mov
repz
call
js
cmp
lods
or
hlt
push
add
or
sahf
and
pop
push
lcall
lcall
xchg
jo
xor
js
inc
push
fwait
mov
and
cltd
jg
mov
ds
inc
mov
push
mov
mov
call
loope
mulb
jg
cmp
rolb
repz
add
push
repnz
jmp
dec
mov
dec
dec
mov
es
cmp
imul
pushl
loopne
xor
cli
jbe
xchg
cltd
push
pop
lods
or
repnz
repnz
cli
sub
incl
cmpb
stos
mov
xchg
iret
jo
movsl
pop
subl
out
movsb
mov
mov
adc
lcall
jbe
fimull
enter
dec
pop
fwait
daa
outsb
addr16
dec
sub
pop
leave
loopne
out
scas
sbb
jmp
xchg
daa
jmp
outsb
jmp
js
adc
outsl
mov
jg
add
jbe
mov
pushl
mov
gs
mov
inc
and
fldcw
mov
sub
dec
cld
repz
lcall
popf
xchg
pusha
decb
sbb
das
hlt
jg
jns
leave
xor
mov
add
pop
mov
decl
popa
push
daa
test
fwait
jecxz
loopne
or
cmp
jno
imul
lcall
out
push
mov
dec
fidivrl
stos
aam
ror
addr16
mov
sbb
ljmp
fdivs
test
cmpsb
insb
sti
pop
xchg
arpl
push
mov
push
push
shlb
popa
pop
outsl
int
sbb
pop
loopne
idiv
inc
xor
movsl
sub
adc
fdivrl
movsb
mov
jmp
icebp
les
aas
in
das
push
mov
cld
mov
push
pop
pop
adc
pushl
cmp
inc
jg
insl
sub
and
adcl
daa
loop
call
scas
mov
jp
cmc
in
push
int3
jmp
cmp
imulb
mov
fsubs
sub
test
add
pop
cmpsl
push
fs
sub
mov
sarb
ljmp
push
test
push
mov
into
pop
repz
push
lock
fistpll
stos
pop
outsb
mov
js
inc
dec
or
pop
icebp
pop
mov
jno
das
jns
lcall
lcall
and
clc
xchg
insb
lods
xchg
push
test
and
push
ret
fnstcw
ljmp
cmpsb
imul
mov
cmpsb
and
cmpsb
dec
lods
pop
push
fdivr
lcall
pop
or
jae
mov
call
stos
mov
inc
rcrl
in
push
lcall
outsb
jae
in
push
and
xchg
scas
lahf
push
in
in
push
shrb
pop
mov
cmpsb
push
push
push
mov
add
cmpsl
cld
xor
or
and
shll
call
insl
inc
test
test
mov
leave
sub
shrb
dec
incl
movsl
test
cltd
mov
or
jl
mov
fidivl
mov
call
cmpsl
xorb
pop
enter
incb
clc
stc
ljmp
pop
or
and
arpl
lcall
add
jnp
not
adc
bound
pushl
leave
lcall
fcmovnb
push
push
cli
sub
xchg
mov
mov
test
test
push
roll
sbb
lock
ljmp
call
pop
nop
adc
dec
push
cmp
mov
outsl
xorb
pushl
mov
sbb
pop
xchg
pop
sbb
mov
lods
jmp
repnz
cmp
mov
jle
mov
loopne
lret
mov
pop
mov
sbb
inc
cwtl
fildll
xchg
pop
or
decl
jl
push
adc
mov
or
xorl
sub
inc
add
push
dec
andl
push
jg
loop
rcll
fstpt
mov
test
lahf
pop
pcmpgtd
jle
lds
aaa
inc
test
add
outsl
pop
dec
push
xor
ror
daa
hlt
sbb
sbb
test
inc
cmp
in
les
jmp
and
jnp
rcll
stos
xlat
int
lods
test
iret
sahf
adc
pop
movsb
pop
ret
mov
lock
xchg
jecxz
mov
add
inc
dec
and
jo
jl
call
sar
incl
lea
push
cmp
xchg
sub
dec
jnp
fwait
lods
mov
stc
fistl
adc
and
cltd
mov
imull
mov
jne
addb
mov
xchg
movsb
in
cli
lcall
in
into
mov
mov
cmp
hlt
jne
push
sbb
out
repnz
push
inc
xchg
nop
xor
add
enter
ror
mov
cmp
loope
push
push
mov
mov
jg
or
aaa
mov
xchg
lock
sub
lret
in
pusha
or
lcall
sub
inc
and
call
ljmp
and
mov
jne
mov
ss
mov
call
xchg
stos
lret
in
fldenv
ds
jbe
subb
enterw
call
or
mov
fidivs
cmpsb
roll
fidivrs
mov
shl
cmp
testb
int
sbb
jb
cmp
xchg
dec
loope
xchg
add
and
incl
insb
repnz
icebp
out
cmp
fsts
pop
arpl
inc
adcl
sbb
lcall
popf
dec
int3
gs
push
and
mov
stc
cmp
lods
fimull
xchg
mov
nop
lcall
in
shrl
pusha
or
stc
icebp
cli
xchg
adc
pop
mov
repz
jmp
xchg
repz
loop
dec
cmp
jl
test
scas
mov
adc
mov
stos
dec
xchg
xchg
inc
pop
adc
pop
cmp
incl
mov
sub
add
loopne
mov
jns
nop
mov
nop
sub
inc
es
inc
pop
out
divl
xor
mov
mov
ljmp
cmp
xor
loopne
fmuls
int3
pop
mov
push
add
in
outsl
aas
stos
mov
cmpsl
leave
cmp
push
inc
in
out
add
lret
inc
dec
loop
lcall
in
mov
orb
fs
cmp
fwait
ljmp
lods
clc
sbb
call
pop
xchg
test
enter
add
mov
jnp
sahf
mov
testl
incl
in
cmp
fmull
fcoml
push
cmp
lcall
mov
pusha
jp
push
addb
xor
je
iret
rcl
jnp
jecxz
out
clc
push
push
add
repnz
sbb
sar
sub
idivb
adc
jo
inc
nop
decl
data16
mov
push
lods
cs
sub
int
sti
imul
movsb
cltd
cmpsl
jmp
jecxz
sarb
daa
ss
daa
adc
nop
adc
jmp
jp
pop
and
aam
push
ds
pop
ljmp
and
cmp
call
aam
jle
cmp
push
pop
call
mov
cmp
lret
mov
cmpsl
incb
inc
decl
or
sbb
ja
xor
mov
lcall
sub
std
in
mov
das
xchg
fisttps
dec
dec
sub
pushf
out
jmp
lcall
xlat
test
fsubl
cmpsb
adc
sub
add
jae
andb
insl
add
scas
out
incl
incl
in
push
jg
push
loopne
push
mov
inc
mov
incl
mov
pop
push
or
cli
mov
xor
pop
mov
call
sub
jbe
mov
add
pop
mov
imul
dec
test
mov
mov
mov
cmp
rorb
and
mov
bound
jmp
loope,pt
xor
inc
add
xor
mov
call
mov
popf
sub
ljmp
cmp
mov
outsb
xor
ret
pushf
jno
aad
dec
leave
sar
lcall
sub
lods
xor
in
mov
sbb
mov
lcall
pushl
adc
and
xor
stos
aad
dec
mov
sarb
dec
ljmp
mov
sub
inc
popf
cwtl
out
adc
mov
pop
outsl
ret
std
aas
or
jne
cli
mov
arpl
dec
out
or
loope
sarl
xchg
cmc
imul
decl
inc
and
mov
jmp
pop
fwait
jno
push
push
jl
lock
sbb
stos
cwtl
jl
or
incl
hlt
xor
jmp
nop
lds
adc
insb
pop
out
clc
lcall
fs
dec
inc
cmp
sahf
lds
jmp
and
lea
ljmp
inc
outsb
addl
pop
js
icebp
mov
cmpsb
out
jecxz
sub
aad
imul
cmp
inc
shlb
int
cmp
mov
mov
ret
jns
pushl
cmpsb
cli
mov
test
loope
mov
xchg
jo
rorb
cld
int
das
sar
jle
dec
fsubs
sub
popf
aas
dec
inc
aas
inc
xor
lcall
scas
inc
dec
xor
lret
sbb
pop
sbbl
sub
ret
in
clc
inc
in
in
cs
leave
xchg
mov
jge
aaa
pusha
nop
lea
inc
or
mov
sbb
push
std
or
in
jecxz
cmp
mov
in
xor
sub
xor
fs
mov
sub
push
mov
pushl
sbb
test
jae
outsb
es
jns
cmp
xchg
gs
push
decl
push
nop
inc
fmull
in
dec
xlat
test
add
pop
push
cli
inc
xchg
add
and
inc
cmp
addr16
sahf
imul
sahf
aaa
addb
ljmp
push
imul
sahf
sbb
mov
inc
out
into
mov
cmp
xchg
pop
fisubs
mov
clc
cmp
loop
ret
insl
mov
xor
jg
jns
sti
add
std
cmpsb
call
loop
sub
mov
cmp
push
rcrb
or
mov
push
rolb
aaa
inc
aaa
insl
into
jnp
pop
pop
loope
dec
in
ljmp
btc
pop
mov
pop
dec
xchg
dec
cvtps2pi
xor
loopne
add
stc
push
mov
cld
xor
cmp
or
mov
stos
bound
xor
mov
in
call
es
jg
cltd
cld
add
push
ficomps
pop
push
xor
pop
xchg
outsl
scas
inc
js
jp
pop
and
push
shll
and
add
pop
xchg
fbld
mov
xor
out
cli
jmp
sub
stc
or
shll
push
mov
imul
lcall
sbb
pop
lods
out
leave
mov
add
sub
or
xchg
xchg
das
decl
popa
rcll
mov
ss
jo
lcall
dec
punpckldq
adc
fcmove
dec
cmovb
jp
aam
or
idiv
decl
les
push
sarl
adc
rcr
enter
xor
adc
xchg
jmp
orb
inc
pop
xor
mov
nop
lret
add
mov
mov
cmp
jmp
xchg
fidivl
icebp
in
adc
mov
or
mov
jl
inc
inc
cmp
lock
ljmp
popa
lahf
or
xchg
int
sub
add
jb
and
sub
aad
xor
js
cmp
insl
enter
inc
fimull
lods
lds
xchg
fldcw
mov
mov
sbb
xchg
cmp
incl
sbb
mov
jo
out
push
insb
mov
movsl
or
pop
sbb
movsb
jae
mov
std
repnz
add
sub
or
stc
xchg
cmpsl
push
sbb
imul
call
imul
imul
loop
lret
push
in
adcb
pop
jg
test
insb
out
push
out
popf
cmp
push
cmpsb
outsl
rorb
incl
sub
aas
cwtl
lds
setb
icebp
dec
sbbl
fldt
outsb
roll
out
incl
xor
mov
jns
aad
fwait
mov
pushl
pop
adc
and
in
push
xor
push
mov
adc
adcb
mov
push
call
jbe
jle
out
out
dec
mov
mov
in
mov
jecxz
pop
hlt
out
mov
shl
mov
mov
cmp
and
ljmp
icebp
cmp
cli
aaa
imul
adc
pop
ds
push
adc
adc
mov
mov
in
out
outsl
bound
lds
mov
mov
add
fstl
leave
jnp
fstps
ja
clc
stos
lds
push
add
fndisi(8087
and
or
mov
xchg
dec
les
add
lods
mov
int
std
jne
dec
adc
movl
jmp
fstpl
push
fcomps
fwait
sub
out
loope
push
push
nop
decl
in
mov
hlt
jl
daa
ss
mov
mov
dec
inc
data16
aaa
jl
jge
cmp
pop
mov
mov
fdivl
pop
mov
sub
iret
mov
adc
ljmp
dec
aas
aas
fwait
lcall
lcall
inc
lcall
int3
xchg
push
mov
pop
pop
cmp
aas
cmp
push
mov
and
xor
mov
mov
outsl
sub
mov
jnp
mov
jb
test
je
decl
add
add
jge
aas
xchg
or
lret
xchg
mov
mov
ljmp
rolb
adcb
push
mov
cli
xlat
and
scas
stos
inc
jb
out
inc
dec
xchg
pop
pushl
adc
aaa
fwait
ljmp
xchg
mov
cmpsb
xchg
push
sub
push
outsl
sbb
push
lret
inc
ljmp
cmp
sub
adc
cmp
popa
in
cmpsl
lock
or
test
out
pop
inc
mov
mov
jns
mov
jnp
cli
mov
pop
add
cmp
sub
cmp
pushl
push
lods
jno
dec
scas
daa
sbb
or
rorl
pushl
cmpsl
inc
aad
repnz
sahf
inc
jle
xor
flds
sbb
jecxz
imul
dec
sbb
dec
xor
mov
ljmp
popa
and
and
ljmp
jbe
rcll
cmp
pop
cwtl
cmp
cwtl
push
mov
mov
mov
pop
ret
jg
incl
es
inc
and
xor
aas
ss
sbb
lret
cmpsl
inc
inc
xchg
jno
xor
fadds
add
pushl
adc
cwtl
pop
js
icebp
nop
das
push
lods
xor
jg
xorb
lods
rclb
adc
xchg
dec
cmc
lds
xor
call
jg
lcall
and
inc
test
mov
sbb
mov
sbb
pop
imul
push
aam
shll
jno
das
and
jmp
sahf
clc
mov
adc
ljmp
decl
sub
repnz
jmp
ljmp
pop
inc
cmp
mov
test
test
daa
test
mov
cmp
fsubl
push
scas
in
lcall
push
lock
xchg
ficomps
sbb
push
rorb
insb
mov
pop
jb
push
cmpl
cmpsb
cwtl
dec
adc
mov
add
and
aad
pop
sub
pop
jle
xor
lcall
fmull
cs
pop
loop
int
inc
inc
scas
popa
test
jmp
mov
mov
outsl
xchg
cmp
pushl
jno
and
loopne
gs
fistpll
xor
mov
daa
repz
adc
push
jg
lret
xchg
aad
sbb
movsb
bound
jnp
add
mov
pop
and
pop
gs
jmp
mov
outsb
scas
mov
push
pusha
enter
mov
or
in
in
push
xor
fisttpl
lock
cld
add
sub
jecxz
xor
enter
jl
jmp
add
lock
jno
clc
pop
jg
jmp
scas
cld
scas
jne
cwtl
gs
mov
dec
je
mov
and
xchg
cmpsl
pop
push
cmp
mov
mov
loope
movsb
push
pop
decl
out
inc
inc
pop
mov
xor
and
sub
fcomip
or
mov
sarl
jno
mov
push
je
stos
push
cmpsb
scas
mov
incl
div
jle
sbb
shlb
testl
ljmp
fiaddl
jo
jl
movmskps
inc
stos
aam
dec
mov
push
fwait
fs
jg
pop
outsb
pop
hlt
outsl
lods
pop
mov
or
fistps
fimull
add
popf
roll
daa
lock
mov
inc
and
cmp
ljmp
sbb
xor
xchg
aad
push
dec
lcall
call
xor
inc
jle
call
add
xchg
test
pusha
push
mov
or
cmp
repnz
mov
cmp
xchg
mov
cli
out
push
dec
add
jmp
aas
scas
mov
rolb
mov
rclb
mov
sarl
push
test
mov
incl
sbb
inc
pop
fnstcw
mov
hlt
insl
xor
pop
imul
mov
incl
and
add
sbb
jb
jg
aas
add
popf
pushf
sbb
mov
mov
out
ret
ret
jecxz
xor
and
jmp
xchg
mov
sti
sub
dec
jmp
or
lods
mov
sub
or
jns
cmp
cltd
les
in
decl
cmp
sbb
mov
incl
lods
test
dec
inc
add
loope
lea
add
cmp
adc
decl
or
mov
cmp
xchg
mov
mov
push
or
mov
or
push
inc
fcomip
out
dec
inc
cli
and
jmp
jne
inc
icebp
or
jl
jl
pop
rcrb
dec
lret
hlt
ficoms
mov
repz
hlt
cld
push
jg
sbb
ss
ljmp
faddl
and
rclb
fmul
push
lcall
insl
in
push
inc
lods
xor
pop
jmp
in
lea
sahf
mov
and
sub
imul
decb
loop
or
std
jmp
fs
xchg
clc
dec
adc
add
pushf
pop
icebp
adc
es
dec
aam
lods
loope
sub
mov
sub
outsb
xchg
adc
sahf
inc
pop
popf
in
cwtl
inc
mov
pusha
pop
loop
xor
pop
push
mov
mov
out
ror
in
xchg
out
out
repnz
test
stos
jno
mov
xchg
mov
cltd
jp
repz
jg
and
mov
jge,pn
push
ss
mov
jae
cmp
mov
je
lcall
lock
fdiv
dec
mov
mov
mov
lea
sbb
fs
mov
lcall
xchg
stc
cmc
push
cmp
dec
movsb
sub
xor
inc
add
sti
lds
push
rcrb
dec
adc
dec
push
std
lret
xchg
pop
xor
sub
lds
inc
xor
or
mov
mov
adc
dec
sbb
pop
push
mov
dec
ret
insl
sahf
and
ja
mov
scas
mov
push
test
mov
lock
inc
fld
jno
pop
lcall
cltd
inc
add
jg
inc
clc
sti
pusha
incb
pop
add
test
cwtl
jb
pop
mov
negb
push
add
lret
xor
lret
adc
ljmp
xchg
lahf
out
jns
jecxz
jns
lds
xor
and
lret
std
add
incl
lret
in
data16
leave
push
cmp
or
fs
mov
rclb
sbb
jg
sbb
mov
inc
and
xchg
jbe
mov
nop
inc
sub
mov
ljmp
or
mov
mov
adc
sub
mov
pop
imul
inc
mov
mov
cmc
ljmp
push
leave
shll
xorb
incl
scas
fdivrp
ljmp
ljmp
jb
pop
cmc
lods
lea
pop
jmp
fldcw
rorl
or
push
xchg
shrl
in
jmp
insl
push
insb
ljmp
pop
in
jge
mov
pop
ljmp
pop
iret
push
ret
repnz
fadds
clc
scas
pusha
xchg
hlt
daa
ds
push
lret
in
inc
inc
dec
add
in
aam
sbb
call
inc
and
sti
lret
add
push
mov
std
daa
mov
pop
ffreep
mov
lcall
mov
jle
jle
mov
dec
outsl
sub
mull
mov
ljmp
decl
sub
mov
adc
sub
sub
mov
or
mov
adc
mov
cmp
adc
in
stos
ja
std
and
and
dec
in
incl
cld
jmp
repz
dec
and
clc
mov
push
sbb
pop
xor
add
mov
mov
xchg
fdivrl
hlt
xchg
scas
jecxz
and
loopne
setp
cmp
lcall
loopne
inc
fiaddl
out
dec
pop
int
shlb
leave
pop
mov
xlat
inc
mov
push
sbb
call
add
xlat
fnsave
adc
push
mov
cmp
sub
mov
push
xchg
cmpsb
incb
mov
jmp
mov
cmp
dec
dec
outsb
xor
xchg
frstor
iret
mov
mov
pusha
hlt
push
xor
xchg
inc
dec
sub
sub
mov
arpl
pushl
cmpsl
adc
dec
xchg
jge
mov
cmp
push
xchg
xor
cli
in
cmpsl
addb
mov
push
ret
aam
jae
lahf
xor
dec
jmp
aam
inc
jl
push
paddusw
pop
mov
xchg
lret
cmpsb
mov
out
jge
cli
sbb
lcall
mov
test
push
push
pushl
iret
cmp
jno
and
test
rorl
xchg
xlat
bound
xor
jecxz
movsb
outsl
ret
cmpsb
ljmp
cmpl
xchg
flds
fimuls
neg
push
outsb
mov
sub
xchg
pop
push
jae
in
scas
cltd
mov
cmp
lahf
stos
fnstenv
cmp
aas
in
mov
xchg
arpl
jno
popa
loop
push
das
test
mov
inc
dec
insl
out
cli
push
push
sub
ss
and
jae
std
les
and
push
aad
loopne
cwtl
pop
mov
xchg
scas
sub
aas
add
and
and
int3
add
jmp
int
and
out
dec
shll
in
adc
adc
sub
sbb
mov
cmp
lcall
adc
or
pop
dec
push
adc
adc
dec
xchg
leave
out
iret
jmp
out
cmc
mov
inc
pop
dec
in
es
and
sub
pop
cmp
xchg
testl
addr16
sti
sub
lret
cltd
sbb
xchg
inc
xchg
dec
inc
loopne
push
or
push
jle
jo
xchg
shl
fdivr
fcomip
jbe
inc
or
clc
loop
pop
in
fldl
and
es
movsl
daa
jle
lcall
jb
pop
test
ja
mov
pop
mov
dec
mov
testl
sub
decl
das
out
mov
es
and
mov
sub
push
movsl
not
call
cmp
jmp
fwait
adc
cltd
lcall
ss
pop
sti
add
pop
aaa
fdivr
lcall
sub
sub
adc
dec
pop
push
lret
std
clc
fwait
movsl
movsl
cld
aas
jmp
clc
jmp
adc
and
andb
mov
in
cmpsl
dec
and
xchg
ljmp
out
push
and
arpl
lret
or
popf
in
push
push
jg
cmp
push
std
outsb
sbb
lock
adc
cmp
inc
in
xchg
jno
xchg
fsubrs
in
rolb
fadds
mov
xor
inc
mov
cld
ja
sti
and
pop
xor
xchg
mov
mov
sub
call
std
jmp
test
ss
pop
sti
xor
mov
sbb
sub
pop
push
push
lods
or
add
fildll
push
shll
stos
ffreep
xor
or
jge
add
xchg
fcomps
mov
decl
push
xor
xor
testl
loope
sti
imull
jmp
aam
push
adc
push
sti
jb
decb
xchg
pushl
mov
mov
cmp
adc
aaa
insl
pop
in
xchg
pop
inc
sub
and
jg
aaa
xchg
and
or
xchg
pop
addr16
into
dec
pop
jp
std
out
pop
sbb
out
mov
call
stc
dec
and
cmpsb
fimuls
stc
fs
or
jmp
xchg
ljmp
dec
jge
sub
out
inc
sbb
enter
jp
lret
iret
fildll
add
jne
xchg
mov
je
fmull
adc
mov
andb
je
filds
lea
repz
shll
add
sbb
jmp
xor
lret
in
inc
push
cmc
mov
mov
mov
jmp
pop
push
lock
xchg
cli
into
cmp
subb
xor
sub
pop
inc
push
call
enter
jecxz
inc
dec
inc
test
iret
jecxz
nop
pop
xchg
lods
lret
insb
sti
lahf
xlat
xor
jle
dec
sbb
xor
pop
push
and
sbb
and
movsb
nop
fisubrl
sarb
pop
stos
add
incl
pusha
pop
xor
push
lcall
and
lret
rcrb
pushl
fidivs
data16
lea
int
adc
fcom
aam
in
cld
cmpsb
jg
push
insl
dec
mov
aas
flds
sahf
ss
rorl
call
call
popa
and
fmuls
adc
sub
adc
stos
loopne
mov
mov
sarb
xchg
lret
xor
or
and
sub
lret
jl
or
imul
inc
daa
inc
ljmp
mov
cmpsl
pushl
cmpsl
sbb
xchg
inc
shrb
push
cmp
mov
adc
call
adc
inc
inc
xor
and
jmp
fimuls
decl
sub
cli
loop
push
sahf
nop
cmpsl
outsl
shrb
test
xchg
out
leave
xchg
iret
cvttps2pi
into
ret
pusha
jo
gs
push
cmp
pop
sbb
mov
mov
scas
dec
jecxz
inc
cmp
or
mov
inc
dec
xlat
sbb
jmp
jne
jg
lea
add
scas
and
imul
jg
fsts
ja
push
mov
mov
dec
nop
cli
or
jno
lock
mov
lcall
push
inc
scas
push
rclb
cmpb
std
push
add
jg
decl
out
loope
xchg
adc
fiadds
jb
sub
cmp
jmp
dec
loop
jmp
lods
into
andl
sub
cmp
cmp
push
pop
leave
ljmp
dec
fcompl
mov
pop
aad
add
sub
jg
inc
movsl
loopne
in
insb
pop
xor
movsl
nop
push
addr16
jbe
popf
push
in
xchg
out
call
cmp
lret
scas
aas
incl
or
ficoml
pop
test
shrl
sub
xchg
adc
pushl
movd
adc
mov
scas
mov
fidivrs
lods
cmp
mov
notl
decl
xor
fnstcw
mov
ljmp
incl
inc
or
adc
and
shlb
out
mov
js
jl
xchg
call
jns
pop
adc
data16
add
imull
mov
push
mov
imul
sbb
adc
or
push
ror
sbb
pop
adc
ret
hlt
push
inc
cmp
pop
lock
popf
or
xor
imul
daa
int3
arpl
in
xchg
push
fmul
sub
fcomip
call
lahf
adc
jo
pop
stos
mov
pop
aaa
add
fadds
rclb
sbb
stc
insl
fists
je
adc
ss
pop
dec
add
dec
inc
or
xchg
movsl
xor
adc
mov
jmp
jno
jno
pop
fcmovnb
mov
pushl
daa
cltd
stc
into
jns
sbb
and
sub
mov
rcl
xchg
cli
ljmp
mov
je
sbb
in
and
jp
add
arpl
outsl
clc
decl
xchg
jne
push
mov
fnstenv
cltd
and
jmp
fs
jmp
sbb
xchg
pop
adc
add
xlat
add
test
xor
test
mov
fldl
inc
mov
adc
fcomip
ljmp
ss
scas
movsl
add
ja
mov
stos
outsl
xchg
pop
int
push
movswl
pushl
outsl
cld
mov
add
rep
sub
pop
shlb
inc
das
jmp
ror
or
mov
xlat
pop
sub
push
cmp
mov
je
mov
mov
clc
push
gs
xor
sti
das
xchg
mov
fs
jecxz
push
add
stos
and
jp
fidivs
mov
dec
or
cmp
fxch
in
sar
inc
dec
or
mov
cmpsl
cmp
fwait
sub
dec
push
cli
iret
xlat
pushf
pop
out
clc
sbb
sub
decl
push
subps
mov
adc
add
pusha
xor
pop
hlt
jmp
mov
adc
int
add
sub
mov
add
push
jno
xchg
clc
outsb
mov
iret
stc
and
cld
cmp
mov
push
aas
pop
outsb
push
shll
sub
sub
fnstenv
scas
std
lods
lock
mov
mov
cld
stc
arpl
iret
leave
add
push
iret
and
fbld
ds
int
jecxz
inc
jnp
mov
cmp
and
daa
shlb
pop
in
dec
dec
dec
xchg
fwait
push
cld
jle
or
jmp
mov
push
in
mov
xchg
jns
leave
push
adc
xchg
pop
jmp
cwtl
mov
and
mov
sub
dec
xchg
and
mov
xchg
sub
inc
jle
fnstenv
mov
dec
addl
mov
shrd
jg
or
jmp
or
mov
adc
dec
jecxz
aam
fcompl
jno
mov
xchg
ficompl
decl
int
das
fmull
mov
mov
push
pmuludq
inc
lods
pop
shlb
test
ljmp
xor
mov
push
ds
inc
sub
cmc
sti
push
test
cli
das
xchg
mov
xor
mov
call
nop
insl
das
jle
stos
rorl
xor
mov
jmp
pop
in
rorb
mov
cmpsb
cmp
out
inc
jbe
mov
sub
dec
push
and
icebp
stc
cmp
pop
sbb
jmp
insl
imul
mov
decl
cmp
dec
jmp
lock
cwtl
adc
pushf
outsb
mov
in
enter
mov
cli
push
fisubs
push
adc
repnz
push
lret
test
decl
and
aaa
mov
sbb
xor
add
xor
arpl
jp
pop
fst
pop
mov
sub
ljmp
sub
inc
push
mov
mov
and
lods
imul
daa
pushf
movsb
cmp
decl
lret
jl
sbb
rclb
jmp
jo
dec
call
mov
mov
pop
enter
mov
push
aas
pop
out
sti
sub
std
test
test
xchg
test
shll
inc
ljmp
lret
loop
addr16
xchg
dec
insl
scas
bound
std
jp
jne
outsl
pusha
in
lret
shll
test
mov
mov
je
add
out
and
inc
dec
stc
cmp
or
in
xchg
decl
lock
inc
mov
int3
in
fdivs
dec
sub
sbb
movsl
xor
decl
insl
adc
mov
ret
mov
inc
mov
mov
mov
cs
sbb
pushl
fiadds
fcmovb
pop
sub
sub
xchg
jno
or
mov
cli
pushl
pushf
jnp
data16
fsubrl
lret
outsb
inc
mov
xor
movsl
mull
cmpsl
and
xor
incb
ret
push
dec
stc
out
dec
pop
gs
movsb
sbb
ljmp
pushf
push
push
arpl
or
sub
gs
test
jne
mov
popf
popa
fdivrs
jmp
popf
mov
cmc
jne
sbb
mov
add
sbb
clc
lret
fadd
into
adc
subl
mulb
sti
lahf
shlb
pusha
incl
dec
les
jmp
testb
mov
jns
sbb
scas
clc
or
lods
mov
call
das
xor
or
gs
inc
xchg
ljmp
add
mov
idivl
xchg
fistl
mov
jb
mov
jl
je
lock
add
jb
out
pop
test
daa
mov
mov
incl
adc
fnsave
mov
mov
scas
stos
xor
cmp
jmp
push
es
jne
adc
scas
test
and
mov
mov
out
cld
inc
iret
jb
inc
out
decl
popa
mov
fidivrs
dec
mov
mov
fsubs
fs
dec
lcall
push
aad
js
mov
xchg
mov
xchg
or
mov
pop
rorb
push
ror
sti
or
lahf
out
cmp
js
enter
jg
and
int
pop
pop
and
push
jle
jmp
mov
decl
xor
in
and
hlt
fisttpl
xor
dec
sbb
imul
jp
xchg
jg
rorl
nop
cwtl
scas
adc
dec
cmp
jmp
lods
push
dec
sub
or
stos
sarb
test
adc
jmp
es
add
mov
cmp
sub
add
jg
jle
xor
and
iret
sbb
movsb
std
ficoml
adc
fcomip
test
push
imul
mov
lcall
andl
add
sub
mov
inc
jge
aam
negb
sar
aaa
jo
test
scas
adc
xor
mov
mov
pushl
outsb
inc
shlb
jnp
cmp
test
sub
aas
xchg
cld
mov
push
std
call
and
loopne
push
pop
inc
xchg
loopne
loope
adcb
clc
decl
cmp
insl
push
lds
jmp
push
push
and
fldcw
call
xchg
jp,pt
subb
xor
das
movsb
jnp
or
push
pushl
adc
push
pop
pop
fchs
cmpsb
xor
push
mov
fists
pushf
mov
or
jns
inc
sarl
mov
xor
and
mov
add
sbb
pop
lcall
or
roll
jne
sub
loope
sti
or
xchg
and
int3
push
sub
jge
jle
and
lret
aaa
sbbb
stos
shlb
jmp
mov
cmp
scas
aam
test
mov
cmp
mov
sub
xor
jmp
jl
in
lock
daa
lea
call
sti
sahf
add
cld
mov
push
mov
insb
pop
incl
in
xor
mov
add
xlat
lcall
mov
cld
imul
sbb
test
jmp
pop
sbb
icebp
push
and
stos
and
sbbb
cmp
mov
jl
xchg
lcall
pop
leave
mov
cltd
cmc
or
cmp
ljmp
ljmp
pop
adc
sbb
and
fmull
cmp
add
jb
fcomip
out
lret
dec
jb
xchg
lods
mov
cmp
xchg
push
adc
mov
jmp
add
stc
sub
shll
inc
cs
cltd
mov
notl
insb
jmp
ja
aaa
jmp
enter
popf
push
jmp
clc
in
adc
clc
push
jmp
pop
jg
xor
sub
idivl
enter
cwtl
add
push
mov
ljmp
cmp
xor
adc
sub
aaa
adc
pop
jge
sbb
daa
call
shr
cmp
or
pop
mov
filds
jcxz
xor
add
xor
jg
ds
inc
loopne
xchg
loopw
sbb
inc
mov
mov
imul
jbe
jg
incl
push
sbb
and
ret
lock
or
stos
in
jp
xor
call
setno
inc
and
insl
xor
mov
pop
scas
and
cmc
fwait
mov
fdivr
mov
test
fcomip
decl
jae
jne
xor
out
push
mov
jne
rorb
xchg
mov
jmp
mov
in
lods
insl
dec
insl
dec
pop
xor
sahf
es
ret
rcll
lcall
inc
sbb
xor
aaa
push
add
je
or
pop
pusha
ss
xor
jecxz
sub
cld
pushl
jbe
scas
mov
or
in
out
lcall
loop
xor
adc
dec
jo
loop
je
sub
addr16
mov
fistpll
and
lods
test
push
es
inc
aad
push
call
sbb
inc
and
or
sbb
cmc
ss
push
ret
push
ljmp
lcall
in
jg
out
xchg
data16
aad
add
daa
fidivrl
adc
test
fadd
dec
pop
pushf
and
call
mulb
cmp
jl
pop
test
bound
lcall
stc
dec
cmp
loopne
lods
inc
fmulp
cmp
aad
or
jmp
push
enter
mov
xchg
dec
xor
mov
lret
push
outsb
int3
mov
das
pop
test
xchg
pop
lods
sub
data16
call
les
inc
lret
repz
mov
add
push
inc
std
mov
and
xor
lods
jns
into
add
or
push
mov
jle
or
ljmp
pop
int3
jnp
mov
ss
test
xor
data16
jmp
rolb
call
or
mov
das
cli
mov
sbb
adc
adc
mov
loopne
xchg
sbb
ret
jmp
cmpsl
andb
fcmovnu
lret
dec
sbb
adc
xchg
insb
insb
mov
lea
fld1
loopne
mov
sti
push
mov
add
sub
outsb
bndldx
enter
decl
aaa
dec
imul
mov
in
mov
popa
adc
icebp
mov
pop
xchg
decb
mov
aaa
out
xor
dec
out
stos
movsb
scas
call
int
ss
or
push
cs
gs
repz
jb
mov
in
adc
xchg
inc
out
sub
pushf
cmp
add
fwait
jns
sbb
incl
rol
cmpsb
jmp
sbb
cwtl
stos
push
fs
incl
xor
imulb
addl
mov
jge
xchg
add
mov
jnp
xchg
jns
pop
mov
mov
push
out
movsb
cmp
push
int
xor
dec
mov
lcall
rcl
repz
mov
push
sahf
imul
fdiv
mov
dec
sbb
pushl
std
jmp
add
or
icebp
nop
sbb
in
adc
cwtl
nop
mov
mov
in
pop
stos
fs
test
inc
icebp
or
xor
andl
jae
and
add
or
ja
incl
into
jbe
adc
js,pt
adc
das
and
popa
or
sub
pushl
ret
jno
cmp
push
aad
aas
sub
mov
mov
ret
mov
data16
cmp
add
cmp
push
pusha
or
jne
push
daa
push
stc
fmuls
or
test
ljmp
das
mov
xchg
jb
or
xchg
fdivrl
push
movsb
jo
ja
cli
push
add
loop
sbb
cmp
add
lcall
add
pop
push
fwait
jg
jne
out
mov
mov
int3
add
jo
imul
decl
adc
push
xor
sub
in
int
xchg
imul
into
in
cwtl
xor
xlat
mov
stos
pushl
pop
mov
int
jns
push
dec
jb
mov
lods
insb
mull
sbb
inc
cli
or
cltd
fmuls
and
insl
test
hlt
ffreep
bound
call
pop
pop
je
pop
mov
cmp
std
pop
mov
mov
mov
inc
divl
dec
lret
xchg
and
daa
out
ljmp
rolb
scas
rclb
imul
movsl
sbb
cmp
pop
inc
subb
cmpsl
mov
popf
adc
xchg
lock
adc
jns
test
sbb
jg
adc
cld
aaa
push
in
rorl
shll
lods
call
rorb
fdecstp
incl
bound
je
mov
shrl
push
cmp
in
xchg
scas
lcall
mov
or
dec
insb
movsb
cltd
hlt
stc
inc
and
subl
imul
adc
lret
push
mov
sub
mov
push
pop
test
jmp
mov
sub
lods
call
mov
call
mov
pushl
scas
popa
sbb
xchg
mov
jne
cmpsb
in
aaa
lds
mov
mov
jmp
sahf
es
sub
call
movsl
xchg
cmpsb
aad
inc
in
jno
lahf
pop
pop
test
inc
pop
xchg
incl
inc
add
out
out
or
js
inc
out
ret
pop
push
sbb
add
xlat
pop
pushl
sub
adc
jg,pn
jg
insb
and
outsl
xchg
rol
das
mov
inc
mov
incb
rol
and
xor
pop
cs
xor
les
ja
ss
fwait
stos
lock
cmp
or
cmp
in
inc
cs
lcall
pop
mov
imul
cmp
shl
rorl
pop
fsubrs
ja
ss
lock
sti
shrl
in
mov
jl
rcll
shrl
mov
ljmp
mov
pusha
inc
cld
arpl
fcoml
int
and
pop
loope
fidivs
or
aaa
fisubs
sub
sub
aas
lods
jle
mov
daa
mov
sbb
scas
int
adc
sbb
mov
lock
pop
add
mov
xor
stc
dec
inc
or
mov
movsl
in
jge
add
int3
call
jno
sarl
inc
pop
inc
scas
cmp
mov
bound
aad
addr16
jmp
adc
mov
pop
arpl
lret
mov
push
jbe
fwait
push
add
inc
xor
decl
cmpsl
paddsw
in
mov
pop
push
pop
sub
nop
push
mov
ds
scas
mov
push
adc
pushf
fidivrs
push
pushl
mov
sub
inc
mov
adcl
adc
xor
decl
into
pop
icebp
or
xor
xchg
xchg
es
pusha
jecxz
mov
and
mov
andl
pop
lods
arpl
in
mov
xlat
test
dec
clc
push
add
inc
mov
inc
cmp
incl
jg
jo
or
inc
mov
pop
enter
dec
imul
xchg
out
lods
xorb
pop
and
xchg
sub
sbb
cmp
adc
int3
loope
xchg
mov
xchg
lods
and
push
xchg
mov
jle
cmp
repnz
jg
fwait
negb
std
scas
loopne
jg
int3
push
imull
icebp
ljmp
aaa
js
div
jne
xlat
imul
or
pop
insb
jb
int3
xchg
mov
mov
sar
jmp
jae
movsl
cli
test
mov
mov
mov
push
dec
std
out
add
cmp
jae
xchg
lea
mov
shrl
sbb
loop
jge
je
sbb
pushl
and
lret
sub
jbe
xor
xchg
js
jno
rol
pop
cmp
pop
jae
enter
aaa
fidivrl
dec
mov
push
cltd
ficoml
lods
mov
fidivrl
subl
jp
cmpsb
pusha
push
xchg
mov
and
cmp
loopne
jnp
sub
cmp
ds
xchg
or
std
std
mov
in
js
jno
outsl
les
call
cmp
pushfw
int3
adc
push
push
push
dec
pushl
ljmp
cwtl
inc
or
rorl
mov
clc
cld
cmp
outsl
imul
adc
jp
lret
in
sub
lds
dec
mov
jmp
cltd
leave
mov
mov
addr16
stc
test
testb
jecxz
das
clc
cmpsb
pushl
ror
mov
jnp
loop
lods
test
call
test
insb
mov
fildll
jmp
add
sub
cmp
pushl
call
ret
sub
jne
cltd
shrl
repnz
jb
outsb
je
std
pushl
icebp
out
ja
das
lret
add
and
scas
adc
or
das
rcr
js
sub
xchg
fcmove
pop
pop
sub
push
into
repnz
dec
call
insl
mov
mov
in
cmc
add
sbb
pop
imul
aam
cmp
lea
flds
popf
bound
sbb
subb
xor
mov
test
add
mov
call
add
pop
pop
sahf
scas
jae
movsl
adc
lcall
add
cwtl
mov
fidivrl
push
loope
mov
push
push
pop
cwtl
fdivs
cmp
jmp
xor
push
les
popa
jbe
sbb
mov
xor
push
sbb
jg
lcall
pop
imul
in
das
aam
aaa
xchg
lret
loopne
imul
mov
incl
xchg
or
push
shl
cmp
cli
mov
push
addr16
incl
inc
and
out
pop
mov
test
daa
data16
pop
mov
sahf
xlat
lret
lcall
hlt
lods
lcall
fidivrl
cmpsb
cwtl
mov
ljmp
jmp
mov
jns
pusha
mov
mov
cmpsb
fs
cmp
and
outsb
mov
cli
mov
dec
add
fiaddl
or
push
jecxz
lcall
fs
jp
bound
pop
push
jo
ljmp
fistpll
ljmp
xchg
imul
addr16
sub
popa
mov
lcall
popf
sbb
movsb
or
xor
dec
in
mov
xor
adc
sbb
lcall
mov
add
cmpsl
push
call
loope
into
sbb
in
mov
mov
mov
ljmp
sub
xor
xchg
mov
sbb
xor
push
add
fxtract
fistpl
enter
xchg
pop
daa
sub
sbb
call
jp
unpckhps
sub
fwait
pop
dec
das
xor
test
jnp
ja
les
pop
jbe
lcall
ljmp
add
aad
cmp
mov
push
in
jg
ss
das
repnz
roll
gs
and
pushl
not
fmuls
inc
lret
mov
pop
aam
fldl
sti
ret
dec
pop
imul
jg
notb
mov
jo
dec
push
jbe
and
out
mov
cmp
iret
xor
cmp
mov
shlb
or
and
xor
jbe
lcall
cs
imulb
movsl
out
lret
cwtl
mov
pop
pop
das
out
cmp
ja
fcomip
jmp
or
mov
jle
cltd
sub
mov
in
adc
lds
scas
aad
or
test
inc
loop
jge
jnp
xchg
das
jmp
cmp
call
shrl
inc
lret
pop
imul
lcall
ss
andl
jae
jb
cmp
adc
loope
mov
fcomip
jae
push
inc
or
sahf
fwait
xchg
push
subb
ret
pop
jno
inc
sbb
decl
rolb
nop
int
outsl
fmull
mov
in
push
fidivrs
call
push
test
aad
inc
iret
jno
jae
or
xchg
rcll
mov
orl
outsl
push
and
bound
decl
and
jle
add
js
mov
mov
sti
push
ret
mov
ds
inc
loopne
pop
add
fldcw
stos
jmp
ffreep
xlat
fidivl
pop
jle
negl
cmpsl
pop
xor
pop
jge
push
add
dec
push
dec
sahf
in
mul
push
xor
lods
mov
jno
pushf
aad
mov
inc
mov
mov
imul
sbb
movsl
imul
int
dec
and
cs
addr16
call
movb
scas
mov
push
mov
inc
cmc
pusha
andl
sbb
inc
test
lcall
dec
mov
je
flds
xchg
jmp
lcall
out
lret
mov
sub
aam
sbb
shrl
mov
hlt
push
jg
push
adc
xor
test
ret
int3
popf
inc
pop
jl
lcall
push
sbb
pop
xor
in
js
pusha
fisubrs
mov
call
push
icebp
add
jnp
rcrb
xor
cmp
pop
test
add
decl
mov
test
int3
roll
sub
lods
data16
fidivs
fsts
inc
sar
pop
pop
outsl
dec
mov
push
les
outsl
aas
jge
jecxz
test
lcall
sub
xor
mov
xchg
and
cmp
addr16
mov
fcoms
sub
mov
mov
in
int
popf
call
jmp
out
jo
xadd
lea
fiadds
testl
call
cmc
jnp
fstps
adc
sub
jb
pop
xchg
enter
aaa
clc
mov
scas
xchg
mov
jbe
je
leave
cmp
mov
out
adc
jne
mov
jmp
ret
xchg
lret
mov
and
and
add
es
xor
jg
sub
outsl
hlt
mov
es
push
and
push
fdivrl
push
and
stos
cs
movsb
mov
call
loopne
lret
and
gs
sbb
imul
lea
jmp
cmp
cmp
mov
test
xor
pop
sub
dec
or
das
out
ljmp
lea
pushf
cmpsb
aam
cmpsb
dec
inc
lahf
xchg
jmp
ds
sbb
mov
cmpsb
jnp
mov
push
popf
inc
call
mov
pop
lcall
mov
rorb
inc
sub
cmp
test
push
std
sbb
mov
fwait
push
dec
xor
cmpsl
shl
jg
call
icebp
dec
inc
jecxz
lcall
xchg
jl
push
mov
push
andl
clc
decl
out
and
movsb
sub
sahf
js
add
xchg
xor
out
sub
incl
xchg
dec
cmp
and
or
int
test
test
daa
popf
jno
movsb
push
and
jmp
xor
pusha
mov
out
gs
xchg
scas
test
or
and
mov
fistps
into
movsb
fnsave
cmp
shlb
jns
bound
cmpsl
and
fmull
jmp
aaa
in
pop
insb
andb
adc
rclb
icebp
ss
jp
je
sbb
mov
ss
sti
sub
cmp
stos
bound
ret
jg
jmp
xlat
repz
mov
dec
in
in
aam
loope
in
cmp
cli
decl
mov
add
cmc
dec
rcrl
dec
mov
out
jge
push
sub
xchg
dec
adc
pusha
inc
scas
js
sti
cmp
mov
inc
sbb
outsb
popf
movsl
inc
ret
call
mov
jmp
mov
and
std
cmp
add
mov
incl
jae
mov
mov
sbb
shrb
jbe
shll
mov
rcr
push
mov
mov
cli
ljmp
iret
jmp
xor
aas
mov
clc
and
and
out
xchg
bound
pop
out
or
sub
cwtl
daa
cmp
push
xchg
mov
xlat
or
add
push
lods
add
bound
jecxz
std
jg
jb
sahf
das
and
stos
cld
pop
jmp
mov
push
cmp
xchg
dec
test
inc
lahf
mov
dec
xor
xor
incl
loope
ret
jo
js
insl
test
lahf
mov
sbb
incl
rcll
xchg
pusha
std
fs
mov
mov
movsl
andb
jmp
add
jnp
ret
mov
je
jp
cmp
sbbl
ljmp
mov
jo
das
shll
mov
push
push
jp
ja
jmp
cs
out
lods
mov
jo
nop
jecxz
or
shrl
das
sub
iret
dec
cmp
test
push
xchg
push
cmpsb
pop
push
cmpsl
and
nop
fisubrl
std
inc
mov
inc
add
pop
rorl
cs
decl
adc
shlb
and
mov
and
mov
xchg
dec
jmp
in
or
outsl
in
mov
and
mov
mov
shlb
ljmp
inc
loopne
or
cld
popf
arpl
pop
sahf
dec
jmp
arpl
outsl
outsb
mov
pop
inc
movsl
cmp
dec
dec
inc
and
mov
out
mov
pushl
xlat
and
mov
stos
repz
lock
loopne
arpl
jno
outsb
xchg
mov
lcall
movsb
or
test
cli
mov
add
orl
int3
push
mov
shrb
jns
xor
and
lods
shll
repnz
ja
inc
movsb
dec
insl
fstl
sbb
mov
call
aad
into
in
fisubrl
fdivr
lcall
mov
nop
xchg
cmp
sbb
sub
fdivr
dec
lds
sbb
jge
push
stc
sub
addl
adc
sbb
pop
lock
dec
mov
test
pop
sub
jg
shl
outsb
inc
mov
jbe
incl
mov
sbb
xchg
pop
imul
adc
jae
shl
fisttpll
dec
fwait
and
inc
sbb
loop
push
lock
xchg
dec
jg
pop
sub
out
pop
outsb
lods
cmpsl
outsb
ds
cs
dec
lods
fdivr
sub
popf
or
out
inc
mov
sbb
fcoms
add
cmp
jecxz
enter
out
test
fucomi
ljmp
jo
in
incl
xor
push
fistpll
fcom
out
shl
sub
jmp
sar
pop
cmp
leave
mov
aam
scas
rcrb
xor
out
add
ljmp
ffreep
inc
xor
mov
adc
fildll
arpl
xor
call
repnz
mov
xor
push
sbb
mov
mov
inc
sbb
and
fstpt
xor
lods
sub
push
xchg
les
sbb
clc
pop
cmp
dec
adc
mov
cmp
ds
aaa
mov
cmc
push
ja
repz
test
ljmp
cli
arpl
jge
int3
scas
daa
jb,pt
loope
mov
pop
pop
add
fwait
cmp
pushl
scas
test
out
lds
inc
pop
fisubrs
int3
adc
or
lcall
mov
aad
daa
leave
out
push
cmpsb
sbb
hlt
jae
out
repnz
lcall
sti
pop
sbb
negl
xchg
or
imul
jns
popa
pop
mov
push
sar
lcall
cli
or
mov
inc
jae
xor
add
jmp
lahf
push
inc
in
out
mov
xchg
mov
outsb
cmpsb
aas
sub
les
int
add
mov
pop
lods
dec
push
lods
cmp
mov
cmc
mov
xlat
push
sub
cmp
jmp
jnp
jg
call
sbb
push
int3
push
dec
mov
mov
cltd
in
imul
add
mov
cli
incl
mov
sub
stos
dec
lcall
loopne,pn
mov
enter
push
fdivrl
call
jnp
push
popl
dec
or
jp
xor
and
mov
shll
jle
add
adc
add
jge
lock
add
inc
loop
push
sub
cmpsl
mov
bound
ficoml
scas
fbstp
xor
jecxz
pop
loop
mov
int
dec
push
loop
jge
dec
clc
and
and
ljmp
and
xor
pop
or
sub
add
lcall
push
adc
inc
insb
push
inc
cld
inc
lcall
mov
push
rcr
sub
jmp
lret
lret
orl
and
int
add
mov
inc
imul
outsl
and
cmp
mov
cmpsb
test
pop
outsl
in
sar
incl
dec
sbb
add
adc
jns
sub
hlt
mov
mov
lahf
mov
icebp
fimull
ret
bound
pop
push
cli
mov
lahf
daa
test
scas
and
cmp
daa
mov
ljmp
das
or
test
aas
jl
adcb
mov
lcall
int
mov
int
mov
mov
repz
cmc
inc
adc
jnp
cmpl
sar
inc
and
js
js
xchg
sub
mov
scas
push
adc
fst
call
and
add
dec
fisttpl
mov
jmp
out
clc
popf
jno
add
insb
xchg
cmp
outsl
test
sub
ret
inc
fdivl
cmc
jg
hlt
inc
or
fsubrl
jbe
xchg
dec
fmull
jmp
adc
jnp
mov
jb
xor
push
sbb
xor
hlt
test
data16
xor
xchg
mov
push
ljmp
pop
iret
aas
or
incl
pop
pop
in
loop
lds
mov
decl
pusha
out
jb
inc
pop
shlb
in
test
cwtl
andb
outsl
call
pop
xchg
or
aam
pop
popl
mov
ret
inc
outsl
jmp
jmp
fisttpll
pop
mov
ss
js
insl
ret
cmpsl
lahf
test
lcall
popa
je
mov
add
fistps
rorb
jmp
ljmp
je
addr16
sub
lcall
sub
ret
jecxz
aam
jbe
sarl
add
and
mov
push
sbb
xchg
xor
sub
mov
incl
push
shl
in
pop
ss
test
xchg
xor
dec
mov
xor
push
test
jmp
dec
dec
loope
sub
add
mov
push
fnstenv
fisubrl
jb
push
push
mov
xor
adcb
ret
movsb
sarb
cltd
and
add
inc
scas
xchg
push
mov
ja
jmp
andl
shll
scas
cmp
out
clc
or
cltd
rclb
pop
jnp
adc
stos
or
jg
cmp
cmpl
pop
mov
jb
cmp
xchg
inc
sub
mov
jmp
cmp
cmpsb
das
sar
cltd
cmp
mov
mov
call
ret
inc
imul
inc
insl
dec
dec
jae
mov
iret
sub
xchg
adc
inc
jb
or
xchg
push
std
call
gs
or
push
aam
and
ds
push
aam
xor
pop
icebp
fs
xchg
xchg
inc
push
in
leave
stos
cmpsl
push
popa
adc
das
aaa
mov
mov
leave
push
xor
subl
mov
movsb
ljmp
push
sti
insl
test
fldcw
ss
mov
xor
mov
xchg
fists
jg
and
outsb
sub
bound
inc
mov
mov
pop
sbb
lahf
and
push
pop
dec
lret
mov
ret
pop
xchg
pushl
fsubs
adc
adc
mov
add
sbb
out
pop
icebp
movsb
fiadds
jmp
pop
and
pop
jb
aas
bound
mov
and
movsb
mov
cwtl
imul
fstpt
jo
decl
out
js
xor
jbe
gs
lock
ret
je
mov
decl
cltd
in
xchg
xor
or
sahf
aaa
orl
pusha
loopne
call
sub
cmp
lea
pop
mov
enter
lock
call
scas
std
ds
mov
xlat
pop
aaa
aas
repz
pushf
gs
std
stos
xchg
arpl
in
outsl
cli
lcall
jecxz
push
mov
and
repnz
mov
shll
and
ljmp
fildl
xor
sub
inc
dec
and
cmc
dec
xchg
ja
dec
push
sub
scas
test
jo
lret
mov
pop
int
pop
cltd
cmp
shll
mov
push
adc
outsl
mov
dec
cmp
push
pop
push
aaa
nop
adc
mov
das
clc
jl
adc
cmpsl
jmp
test
out
imul
mov
sub
hlt
sub
push
ljmp
mov
out
xor
daa
pop
mov
adc
repnz
sbb
cmp
adc
xchg
xchg
push
adc
fstpt
clc
xor
push
decl
fisttpl
add
mov
lea
mov
mov
ds
xchg
movsb
ljmp
std
and
adc
sar
addb
cmp
cli
data16
add
push
outsb
push
sub
jg
inc
outsl
incl
movsl
add
push
cld
adc
jne
popf
adc
jmp
or
stc
sub
jno
loope
nop
pusha
pop
mov
jg
ret
jae
sbb
scas
dec
sahf
xlat
jne
out
cmp
imul
psrld
lods
cmc
jmp
push
je
outsb
daa
adc
add
sbbl
dec
hlt
sbb
and
addl
pop
mov
mov
inc
mov
pop
nop
rol
iret
push
inc
sub
cmp
decl
fiadds
and
dec
ret
cmpsb
add
mov
mov
jg
call
xchg
ret
test
mov
push
push
or
lcall
sbb
jge
cmc
jg
loopne
pop
push
jge
loop
stc
push
lds
je
imul
hlt
mov
icebp
cli
fs
cmp
fs
fsubp
mov
out
inc
scas
aad
repnz
lcall
push
push
pop
and
dec
push
or
cmpsl
xchg
sahf
push
mov
mov
rcrl
shll
push
jg
pop
bound
inc
dec
imul
jmp
lea
push
jecxz
sub
dec
push
outsb
loop
addr16
icebp
or
jmp
decl
dec
sbb
bound
in
push
and
cmpsl
or
inc
push
sub
push
mov
pushl
lret
in
xchg
loopne
int
mov
bound
cmp
and
repnz
in
inc
fimull
pop
outsb
lcall
pop
jae
ret
pop
ss
xchg
in
fwait
mov
incl
cmp
pop
jo
mov
mov
in
mov
adc
loopne
cmpb
into
jo
insb
movsl
jecxz
shll
loop
mov
mov
pop
pop
lcall
lods
mov
xchg
out
stos
or
out
leave
je
push
stc
jp
and
lahf
pop
cli
mov
inc
out
pushl
xor
test
mov
jmp
gs
cmp
out
mov
mov
adc
dec
mov
test
gs
mov
pop
repz
push
test
outsl
clc
ljmp
cld
outsb
jg
lds
sbb
jmp
sbb
cmp
in
xchg
out
rorb
mov
xchg
dec
sub
mov
out
clc
ffreep
icebp
hlt
movsl
mov
adc
xor
mov
mov
sbb
or
cmp
lcall
rcrb
jle
sub
push
repnz
or
push
popf
adc
int
inc
call
mov
lret
mov
lret
mov
fistps
int
mov
adcb
push
incl
cld
incl
lock
ss
or
rcrb
cmp
addr16
pushl
cltd
out
mov
jp
mov
mov
push
xchg
dec
faddl
dec
movsl
sahf
fucomip
les
mov
scas
cmp
jo
inc
sub
mov
out
mov
lcall
jmp
ljmp
and
ljmp
cmp
jl
sub
inc
xor
push
dec
pushf
cmp
and
call
outsb
mov
outsb
stc
xchg
out
test
mov
jnp
jmp
push
push
stc
xchg
jg
pop
inc
js
cmp
push
pop
cmpsb
sbb
xor
scas
jecxz
in
mov
popa
loop
fmul
xchg
sbb
out
mov
mov
enter
pop
fisttpl
and
pop
xor
pushl
rol
mov
in
xchg
pop
xor
add
mov
test
in
sub
jl
adcl
stc
cmpsl
pusha
int
cmp
jnp
call
loop
jb
cs
into
ja
or
jns
inc
or
icebp
repnz
push
out
pusha
pop
or
mov
ljmp
or
out
cltd
jmp
fsubrl
out
adcb
ret
shlb
mov
aam
lds
clc
out
push
out
rcl
sub
mov
push
arpl
call
and
jg
pop
mov
popf
inc
add
adc
mov
aad
lahf
out
pop
pop
call
stos
adc
xchg
sarl
xchg
mov
cwtl
das
imull
loopne
fcomip
addr16
jmp
push
push
mov
pop
clc
enter
or
push
xchg
jmp
fisubs
cmc
lcall
sbb
adc
and
call
push
daa
dec
adc
jne
imul
pusha
cmp
and
or
mov
dec
sti
push
xor
addb
xchg
aas
cs
xchg
cmp
cli
inc
hlt
jle
lcall
arpl
imul
mov
cmp
cmp
mov
and
or
decl
jmp
mov
sub
xchg
les
xor
dec
fdivs
add
xor
cmp
in
stc
es
fwait
mov
jp
inc
and
test
add
cmp
lcall
jno
ret
fcmovu
stos
jge
push
movsl
and
pop
and
ljmp
loop
mov
leave
xchg
fs
lods
rol
test
shlb
ja
out
mov
in
push
nop
outsl
sbbb
subb
fldenv
adc
pushl
in
es
iret
rorb
add
jo
mov
out
fdivp
mov
push
aaa
adc
or
sbbb
popa
shl
lcall
sub
cltd
push
pop
leave
cmpsb
or
lcall
add
or
aaa
jnp
cmpsb
cli
pop
fistpll
add
mov
popa
mov
pop
hlt
decl
mov
fwait
mov
push
cmp
outsl
mov
je
scas
pop
mov
dec
popa
shlb
ds
or
push
mov
mov
or
pop
stc
jmp
sub
aad
dec
into
dec
mov
fistpll
lcall
xchg
or
jmp
aam
mov
mov
out
int
dec
loop
ret
incl
cmp
jns
push
jp
xchg
sbb
mov
enter
or
cltd
outsb
dec
mov
incl
cld
imul
dec
push
xor
leave
loope
pop
testb
inc
dec
and
adc
jmp
loope
bound
popf
add
cmp
inc
mov
sub
mov
jg
ds
ficompl
mov
in
xor
adc
ret
faddl
call
dec
xor
cmp
gs
mov
divb
scas
push
push
xchg
mov
cli
decl
xchg
mov
test
mov
jg
enter
fiadds
ljmp
divb
cmpl
das
sbb
popf
jnp
push
out
sbb
sbb
mov
mov
sub
shlb
je
and
mov
pusha
daa
test
call
loopne
arpl
sbb
les
adc
call
xor
push
flds
in
sbb
pop
jmp
mov
out
inc
mov
test
pushl
int
je
sbb
push
mov
lods
sbb
and
sar
push
mov
call
sahf
push
stos
pop
cmp
cmp
cmpl
rorb
and
in
ret
stc
push
push
mov
iret
fwait
iret
mov
dec
mov
sub
inc
ficoms
and
add
push
div
imul
mov
call
movb
pop
std
leave
test
xor
sub
push
cld
cs
pushl
mov
mov
jns
inc
mov
dec
pop
popf
lahf
add
lods
mov
mov
into
push
popf
or
push
pop
and
push
ja
fs
lods
insl
cmp
cmc
xor
or
loope
mov
loopne
popf
daa
sahf
ljmp
mov
or
ret
pop
imul
cli
std
xchg
xor
xor
int
pop
out
inc
inc
adc
loop
incb
sub
jne
inc
add
push
cwtl
test
push
mov
stos
iret
jge
jl
or
adc
mov
jle
push
insl
mov
push
frstor
imul
decl
gs
jb
dec
mov
inc
es
pop
or
push
decl
decb
movsb
test
jecxz
out
mov
xor
xchg
jmp
or
movsl
outsl
decl
jno
cmp
and
inc
mov
incl
mov
shr
jmp
pop
pushf
add
and
adcb
and
dec
pushf
pop
adc
cmpsl
clc
popl
filds
mov
cld
incl
sub
mov
jmp
and
lcall
cwtl
jns
dec
xor
mov
cmp
inc
negl
fcoml
sbb
sbb
sti
mov
or
jle
fists
inc
fidivrl
scas
dec
fidivrs
dec
cmp
push
jmp
icebp
imul
incl
xchg
lahf
cmpsl
hlt
negb
test
lds
cmp
inc
lahf
fwait
xchg
mov
lea
mov
mov
enter
push
out
dec
je
std
inc
xchg
mov
dec
sub
mov
mov
test
aad
push
push
fisubrs
add
popa
lret
xor
iret
jecxz
lods
mov
call
sbb
shlb
or
stos
adc
pushf
ret
icebp
pop
ds
out
inc
std
fsubl
pop
jbe
push
stos
cmpsl
lods
dec
sbb
lds
push
stc
hlt
add
sbb
jno
sbb
adc
push
mov
ds
inc
mov
jae
push
mov
dec
arpl
roll
incl
sub
inc
insb
aad
dec
sub
in
fistps
add
cld
lcall
mov
sbb
mov
sbb
xchg
ja
push
fsub
push
sahf
vsubss
decl
jne
and
jecxz
pusha
idivl
movsb
loope
push
lods
int
push
cmpsb
push
lods
pop
mov
cmp
fdivrp
pushl
test
jmp
and
in
add
and
mov
call
mov
jmp
aad
test
lret
sbb
int3
mov
mov
xor
mov
in
jmp
out
cmp
dec
in
sub
stos
cmp
fwait
pop
cmpsl
scas
pusha
or
xor
dec
les
mov
mov
popw
bound
loope
ds
les
movsl
adc
cmp
call
mull
std
das
aaa
ljmp
aas
cltd
imul
jp
pop
dec
hlt
test
repnz
mov
adc
pop
cmc
pop
cmpsl
xchg
jle
test
jmp
aaa
iret
jl
push
xchg
clc
ljmp
push
pop
jle
or
aam
and
dec
dec
pusha
jbe
push
pushl
pop
movsl
ja
lahf
sbb
call
daa
sbb
jns
iret
adc
sub
clc
repz
loope
inc
push
outsb
rcrl
dec
inc
push
scas
pop
scas
stos
adc
push
xchg
add
pop
std
decl
bound
cli
mov
and
sub
je
and
push
cmp
cmp
mov
dec
and
jno
push
data16
xchg
jle
inc
sub
mov
ss
cmpsb
iret
mov
call
das
jbe
or
shll
mov
scas
rcrl
mov
xchg
mov
jecxz
and
jmp
repz
sub
dec
and
mov
mov
movsl
dec
enter
cmc
cli
loopne
icebp
sbb
sub
pushl
lea
and
iret
cli
imul
mov
mov
jmp
jns
jl
mov
adc
sbb
push
dec
or
icebp
xor
xchg
cmp
ss
enter
das
sar
push
mov
push
outsl
scas
fisubrl
ret
fs
jl
jp
lcall
loop
jmp
mov
out
jle
mov
movsl
cmp
mov
mov
and
sub
xchg
cli
ret
fstps
lcall
pop
push
add
rcll
sub
pop
dec
addr16
imul
xor
das
jmp
in
sub
fs
cs
movsb
int3
jmp
test
movsl
add
fdiv
push
or
inc
lock
lcall
out
icebp
scas
ret
fimull
mov
in
popf
test
mov
inc
or
jnp
jns
gs
pop
xor
or
adc
ds
lcall
mov
test
sti
test
outsl
mov
push
int3
lret
sti
xchg
decb
scas
in
lcall
and
xorb
push
paddb
adc
in
mov
mov
push
fisttpl
xchg
cmpb
filds
cli
or
daa
data16
jmp
mov
sbb
int3
add
xchg
scas
hlt
push
and
int3
jle
decl
lods
mov
xchg
or
jb
aad
cltd
adc
jnp
and
pushl
or
pop
rolb
cwtl
xchg
inc
pop
xor
cmp
test
gs
mov
ja
call
and
adc
movsb
mov
ljmp
mov
incl
mov
mov
rclb
ficoms
xor
aas
test
push
loop
sbb
sbb
lcall
mov
xlat
lahf
scas
sub
jne
sahf
jp
insl
push
test
decl
int
push
xor
mov
inc
sbb
cmp
dec
dec
add
pop
cmpsb
mov
mull
and
fxch
push
jl
xchg
dec
in
push
fdivl
inc
pusha
aad
dec
adcb
decl
jge
inc
fadd
into
and
cmp
pushf
xchg
jl
and
xchg
test
bound
add
mov
inc
cmc
out
xor
popf
push
test
cli
out
les
sarl
pushl
pop
pop
mov
inc
sbb
jmp
iret
stos
nop
dec
sub
out
add
data16
pop
push
pop
icebp
pushl
sbb
mov
push
neg
add
cltd
xchg
mov
inc
adc
mov
cmp
adc
jg
and
dec
lods
aas
add
dec
pop
push
std
daa
add
inc
in
scas
push
add
mov
cwtl
mov
adc
ja
notb
call
xchg
mov
xor
test
inc
xchg
sub
jp
xor
and
lcall
lods
daa
je
xchg
xchg
aad
cltd
out
into
popa
es
popa
lods
test
decl
jno
cmp
pop
push
sub
cmpsb
les
repnz
inc
cmp
pop
jmp
dec
lret
daa
pminub
sbb
fcmove
out
int3
enter
mov
or
out
jecxz
cmp
push
adcb
outsl
cltd
fdivrl
pushl
je
xor
movsl
loop
jne
cltd
sub
outsb
and
pop
pushf
cmc
xchg
inc
movsb
fs
ljmp
lds
andl
aas
aaa
add
dec
sahf
push
mov
dec
cmpsl
jmp
jbe
ret
sub
aad
sti
loopne
jbe
rclb
out
in
imul
incl
pop
and
fmuls
sbb
lahf
mov
cmp
xlat
xor
jmp
jle
adc
jnp
adc
pop
les
icebp
js
movsl
mov
add
mov
lds
push
lods
sbb
add
lods
pop
sbb
xchg
pop
mov
pushl
enter
icebp
pop
mov
cmp
pop
add
dec
test
sbb
sti
inc
incl
sbb
pop
and
outsb
xend
ja
call
cmp
lret
mov
sub
imulb
mov
shll
js
into
adc
sahf
stos
clc
jmp
sbb
dec
jno
push
rol
mov
sub
popf
or
inc
jg
pushf
bound
cli
mov
cld
mov
mov
pop
xor
sbb
enter
rolb
lcall
sub
jnp
pop
add
out
dec
xor
in
sub
shll
lods
pusha
add
jmp
add
sbb
inc
push
dec
fwait
push
loopne
in
out
sbb
push
mov
or
push
mov
lcall
push
fs
mov
push
push
or
push
aad
loope
sub
cwtl
lods
mov
lcall
lds
call
shll
mov
gs
out
push
pushl
idivb
es
lcall
mov
jp
stc
pop
inc
lods
xchg
mov
clc
mov
cmp
es
sub
pop
mov
mov
outsl
xchg
stos
test
and
jo
decl
fwait
xchg
ss
fwait
test
pop
fdivrs
dec
nop
les
jmp
xchg
popf
jg
jmp
pop
jl
pop
sbb
loopne
inc
xlat
shr
gs
xchg
sub
push
sub
cltd
pop
push
das
pusha
jmp
mov
movsb
test
mov
or
or
or
pushl
das
or
loopne
pop
push
pop
jnp
push
push
cmpsb
shrb
sub
or
pushl
ficompl
int
cmpl
sub
and
nop
dec
mov
mov
in
jbe
fbstp
rclb
cmp
pop
xchg
int3
imul
test
pop
hlt
jmp
idiv
xchg
mov
cmpsb
jo
addr16
pop
out
sbb
add
ja
and
ljmp
pop
pop
inc
push
pop
stos
cmp
in
not
jp
insb
dec
lret
mov
sti
into
pushf
or
stos
jle
pop
movsl
shll
aam
out
cs
imull
mov
incl
cmpsb
cmp
mov
mov
mov
cld
bound
scas
aas
js
mov
sub
push
pushl
and
xor
int3
adcb
sti
or
dec
in
and
xor
ret
outsl
fsubr
addl
xorb
ja
outsb
inc
jge
mov
imul
fsubrl
imul
cmc
sbb
int
dec
sub
adc
ljmp
sbb
mov
hlt
and
fsubrp
dec
aam
cmp
mov
mov
xchg
or
cmp
lods
insl
sbb
jnp
mov
icebp
incl
psubsb
insb
push
ljmp
inc
xchg
in
bound
jno
mov
dec
jnp
adc
movsl
insb
adc
cli
dec
add
pushf
ret
stos
cmc
decl
lock
xchg
cmpb
add
movsb
fsubs
shr
decb
fs
mov
push
inc
pop
test
jo
mov
cmp
sub
push
xor
cmp
ja
add
fldenv
mov
fcomip
decl
jb
mov
sbb
out
jae
and
test
cmp
cmpsl
incl
lods
lods
aaa
repnz
sbbb
stos
faddp
adcb
jle
xor
jo
mov
or
xchg
pop
xor
cmp
sub
and
test
sbb
inc
push
mov
in
sub
mov
sub
or
popa
lcall
clc
fists
in
stos
xchg
aaa
out
inc
mov
loop
mov
jb
jmp
leave
jne
incl
in
mov
inc
ds
xchg
sbb
aaa
cld
pop
js
out
roll
imul
jg
lods
popa
mov
sbb
imul
dec
pop
sub
fstpt
std
pop
add
xchg
push
loopne
and
arpl
call
dec
js
dec
pop
aam
es
adc
out
adc
dec
or
sub
pop
hlt
decl
stc
push
mov
je
lret
add
in
fsubs
stos
fdivr
call
xor
jle
lret
adc
push
jo
stos
cli
icebp
and
and
filds
fcomps
sbb
sarl
sub
dec
jnp
mov
or
int3
xor
in
jp
lcall
and
in
push
and
stc
fwait
cmp
aaa
icebp
push
scas
ret
mov
dec
pop
scas
fistl
inc
xlat
jle
xchg
cli
insb
xchg
aaa
int3
and
xor
sahf
push
jmp
lret
lock
jmp
mov
push
or
hlt
pusha
imul
std
je
sbb
pop
clc
cltd
ret
filds
fmull
in
adc
sub
mov
inc
xchg
mov
incl
lods
clc
dec
test
jl
fidivrl
lret
incl
fdivrs
jno
cmp
xchg
aad
lcall
xchg
iret
jnp
mov
mov
dec
inc
inc
adc
subl
cmp
jmp
bndstx
jl,pt
cli
test
and
jg
loope
lcall
fmull
xor
adc
cvtps2pd
fimull
sub
shll
dec
fcos
mov
cli
jle
test
cld
xchg
aas
cmp
dec
mov
lea
out
je
pushl
fiadds
xchg
scas
sbb
push
pusha
mov
mov
outsb
sub
mov
mov
xchg
jp
and
setnp
add
add
cmp
xchg
xor
call
lcall
test
lods
fwait
xlat
lcall
movsl
incl
fs
fcmovb
cld
cmp
lods
ret
cli
mov
pushf
cld
mull
cmp
lcall
jbe
jbe
ror
push
xor
out
ret
push
inc
fcmovne
pop
ljmp
jecxz
jb
sub
sbb
repnz
pop
test
mov
lods
out
movsb
cmp
test
decl
je
imul
sub
xchg
mov
ret
sub
xchg
mov
inc
icebp
incl
out
xor
xlat
iret
aas
popa
mov
lock
mov
movsb
xor
stc
sub
or
decl
push
inc
cld
dec
hlt
mov
ret
hlt
out
pop
sbb
jae
js
mov
popf
sub
xlat
out
hlt
push
jo
pop
mov
loop
cmpb
call
mov
or
cwtl
insl
fadds
test
imul
movsb
leave
xor
in
xchg
lcall
addr16
std
nop
faddl
test
popa
sbb
popf
or
js
movsb
rorb
fisubrs
int
enter
push
in
inc
inc
cmp
scas
ds
sbb
loopne
lcall
in
mov
pop
imul
pusha
icebp
test
scas
repnz
cmp
cmp
insl
cli
out
mov
out
call
mov
outsl
mov
add
add
out
sbb
dec
push
sahf
negb
fimuls
cmp
pop
mov
mov
imul
xor
push
shl
test
dec
mov
ljmp
mov
push
sti
ds
adcl
ljmp
and
push
push
ret
xlat
orl
ljmp
mov
and
pop
mov
mov
or
mov
lret
lea
mov
das
jge
inc
sbb
jecxz
push
aam
add
jle
jge
mov
add
mov
jecxz
inc
xor
cmc
lcall
ret
in
in
sahf
popf
and
je
xchg
cmpsl
dec
test
or
fisttps
cmp
jne
cmpb
aas
xor
jb
ficomps
sarl
lret
testl
pushl
mov
mov
cmc
ja
dec
mov
lock
jp
sub
loop
jmp
sub
jmp
mov
jbe
mov
adc
add
test
ljmp
aad
cltd
adc
mov
test
cmc
test
dec
mov
cld
call
fimuls
insl
xchg
cmp
pop
jl
lret
sub
mov
mov
call
xchg
sbbl
push
aas
cmp
push
mov
shrb
adc
jg
insb
outsb
repz
dec
lods
cld
add
lahf
lret
push
push
iret
sbb
out
dec
fs
testb
lcall
jl
mov
outsb
xor
jp
std
push
push
mov
inc
imul
pushl
clc
and
sbb
imul
mov
xchg
enter
ljmp
inc
dec
push
mov
sub
clc
mov
jge
lods
dec
and
sbb
push
push
or
dec
jmp
mov
cltd
pop
and
push
ret
into
mov
and
xorl
movsb
test
leave
adc
mov
adc
push
add
mov
pop
xchg
and
fdivs
loope
fdivl
add
outsb
lret
adc
mov
mov
std
mov
leave
inc
sub
pop
dec
mov
sbb
dec
insl
mov
int
mov
mov
popf
pop
xchg
ret
int
push
dec
pushf
xor
push
mov
call
mov
dec
vmaxpd
sbb
mov
dec
stc
cmpsb
loop
popa
xchg
or
pushl
pop
je
and
cs
hlt
dec
jbe
jl
test
call
cltd
shlb
pop
addl
push
faddp
jmp
stos
add
jo
cmp
jns
xchg
cmp
add
inc
iret
hlt
fdivrl
push
xchg
fstpt
cmp
int3
aam
push
pop
mov
adc
jno
add
lock
daa
push
mov
ljmp
xor
push
add
cltd
test
jg
pushl
sar
in
out
rcrl
mov
lods
cmp
inc
lret
jge
push
jmp
adcl
pop
outsl
xacquire
mov
adc
lcall
mov
push
divl
push
and
clc
ljmp
test
mov
icebp
sub
or
ss
out
push
imul
aad
pusha
arpl
sbb
jbe
fldenv
or
movsb
fistl
in
mov
decl
into
stc
or
dec
loopne
loopne
pop
out
pop
cmc
jmp
sti
aad
xchg
scas
mov
sbb
xchg
ret
push
das
lcall
decb
pop
lcall
mov
and
sbb
mov
and
sub
sub
mov
push
mov
lcall
jmp
pop
or
pop
sbb
ja
push
in
inc
jbe
stc
or
fmuls
mov
incl
ret
lock
lcall
sub
das
xchg
scas
fisttpl
jg
rorb
scas
mov
jbe
fcos
call
dec
or
out
pusha
push
out
fidivrl
dec
stc
push
cmp
ror
mov
jge
decl
or
jle
imul
sbb
push
and
scas
insb
pop
call
sbb
iret
push
cmc
inc
repz
into
mov
and
jg
dec
cmp
lds
mov
mov
fstpt
xor
ljmp
sbb
mov
rcll
xchg
js
xchg
sub
mov
pop
pop
inc
mov
inc
clc
lret
dec
or
out
dec
cltd
push
loop
movsb
insl
mov
xorb
fld
xchg
divb
std
jle
int3
repnz
dec
xchg
dec
adc
sbb
leave
mov
lcall
lock
loope
adc
cmp
cmp
pop
incl
sub
xchg
and
mov
dec
jmp
mov
jge
ljmp
sahf
sbb
pop
jo
dec
push
dec
imul
cmp
mov
sub
and
movsl
in
sub
shll
imul
cmp
pop
or
dec
stos
negl
adc
jmp
add
std
in
cmp
mov
loope
pusha
sbb
aaa
push
out
pop
fsubl
pop
incl
inc
mov
cli
pop
and
pop
sbb
xchg
iret
and
enter
pop
mov
adc
aam
call
insb
movsl
pop
cmpsb
ja
push
fdivs
dec
ss
jg
out
outsb
pop
pusha
or
ret
cltd
jecxz
fsubr
sarl
stc
jle
std
incl
test
ret
xchg
push
or
test
dec
out
sbb
inc
in
dec
insb
push
jmp
sub
orl
mov
xor
push
mov
add
outsl
clc
inc
push
repnz
mov
loopne
enter
fldenv
cmp
dec
mov
repnz
cmp
test
add
jge
ljmp
add
dec
icebp
stc
and
enter
mov
test
jg
xchg
adc
ror
inc
cmp
arpl
cmp
movl
call
xchg
ljmp
mov
pop
pextrw
mov
push
sub
cli
incl
mov
inc
sub
lock
add
jl
cmp
test
incl
gs
and
cwtl
sahf
adc
xchg
pop
mov
dec
xchg
clc
dec
mov
call
sub
in
sar
popl
push
adc
insl
leave
mov
fistpll
mov
pushf
cmp
cltd
testl
test
sub
jg
lods
jg
push
fld
outsl
xor
xchg
pop
outsl
in
mov
mov
leave
jg
mov
imulb
push
aam
and
movsb
int
pusha
jae
pushl
pop
int3
add
insl
stos
push
adc
movsb
adc
push
inc
test
orb
nop
xor
jmp
sahf
push
or
mov
sbb
mov
add
lcall
add
dec
push
dec
or
add
mov
mov
ss
jne
xor
xorb
scas
xor
je
mov
test
mov
xorb
and
jbe
inc
mov
lcall
xor
sub
mov
adc
shrb
cwtl
jb
sub
sub
clc
sub
add
sub
sar
lcall
push
cmpsl
inc
clc
pusha
jo
lret
dec
mov
or
or
cmc
pusha
sub
lds
pop
mov
cld
lcall
cmc
lea
aad
adc
out
pop
popa
imul
rcl
add
dec
lret
push
dec
shlb
hlt
xchg
xchg
icebp
cmp
pusha
mov
mov
dec
mov
jo
xor
pop
sti
xor
ja
je
push
inc
dec
inc
cmp
xor
pop
push
push
jno
call
ret
dec
lret
sbb
sahf
push
ljmp
sti
fiaddl
jne
jecxz
int
ljmp
xchg
xor
fwait
in
sbb
sti
je
cmpsb
dec
mov
ret
and
xorb
and
loop
jo
in
nop
mov
leave
stos
push
push
add
flds
es
ljmp
lods
mov
ds
sbb
arpl
adc
and
jg
dec
scas
inc
jecxz
icebp
and
mov
jns
icebp
inc
scas
push
xor
xor
std
decl
cmp
sub
or
idiv
lret
inc
repz
push
cwtl
stos
aaa
cld
jmp
xchg
mov
popa
pop
inc
xlat
or
in
call
ljmp
out
sbb
xor
fnstsw
ret
mov
xchg
jo
stos
mov
push
insb
and
shr
pop
sub
call
cli
sub
push
xlat
or
pop
lods
lock
mov
pushl
sub
rsqrtps
test
or
pop
cmpsb
pusha
sub
dec
call
iret
into
adc
add
and
jmp
dec
fs
in
mov
cmp
mov
push
call
loope
out
push
push
popf
cmc
xor
xor
outsl
mov
pop
loopne
stc
pop
scas
mov
mov
xlat
pushl
std
jecxz
clc
imul
inc
in
stos
or
mov
mov
mov
push
imul
es
push
lods
rclb
or
sbb
push
add
call
out
add
and
fadds
insl
xchg
and
push
lods
sbb
hlt
xor
incl
cld
dec
lea
dec
xor
or
test
insb
hlt
stos
inc
xchg
mov
push
mov
je
sarl
mov
pushf
loope
pop
inc
mull
mov
jge
shll
inc
sarb
jl
jmp
inc
add
loop
fists
test
lcall
and
test
dec
inc
lret
call
mov
je
add
jnp
inc
pop
xchg
jo
stc
sub
mov
shll
in
je
imul
call
lea
inc
and
inc
mov
add
cmp
jl
ret
xor
jmp
rorb
or
or
xor
ret
mov
xorb
jb
mov
paddsb
decl
aad
sbbb
outsl
gs
adc
in
ss
mov
lahf
sbb
xchg
test
out
lahf
pop
daa
clc
idiv
stc
push
sbb
jnp
push
and
adc
and
push
aas
jle
gs
adc
mov
decl
push
ret
inc
imul
and
lods
sbb
mov
fcomps
and
mov
call
dec
xchg
out
mov
fs
mov
scas
cmp
jle
lea
dec
mov
call
push
mov
lea
fucomi
in
xchg
mov
mov
fstps
sbb
sub
out
jo
jmp
xchg
or
push
hlt
add
adc
test
lods
or
cmp
insl
xor
into
inc
lods
out
mov
pop
dec
je
outsb
sub
xchg
ljmp
ljmp
stc
dec
push
out
mov
outsb
xor
dec
inc
pusha
sub
ljmp
jmp
xor
cltd
inc
fsubrs
cmp
xor
stos
dec
mov
cmc
mov
dec
int
mov
cld
pop
add
fcomps
add
sarb
test
dec
add
or
xchg
call
bound
je
push
aam
mov
dec
xor
jo
cltd
cld
jbe
popa
push
pop
push
inc
sbb
jg
add
stos
loope
mov
movsb
pop
or
repnz
xchg
ja
sbb
jle
mov
xor
cmp
pushl
jp
mov
lcall
jp
pop
mov
push
or
jg
mov
push
popl
mov
or
out
add
imull
adc
mov
repz
lcall
mov
ja
cwtl
adc
lret
gs
cmpsb
pop
jge
fwait
stc
or
push
mov
stos
jmp
mov
loopne
mov
aad
and
dec
int3
lret
cmp
and
pop
fildll
ljmp
or
pusha
mov
mov
cld
jl
out
in
and
or
mov
mov
ljmp
cmc
inc
inc
inc
bound
stos
add
jl
and
inc
mov
ret
out
clc
decl
test
add
dec
and
cs
jge
aas
loop
jle
lods
aam
incl
ret
pop
dec
dec
div
cmpsl
jb
dec
shl
movsl
mov
mov
mov
decl
sbb
testb
das
mov
fmull
mov
rolb
call
std
and
mov
movsb
scas
mov
xchg
inc
das
fwait
inc
sarb
adc
decl
stos
sub
mov
adc
mov
aaa
pushl
dec
leave
adc
enter
dec
fisttpl
insl
out
adc
add
test
movsb
lret
fimuls
sar
lcall
push
cli
aam
fs
inc
out
std
decb
je
dec
mov
xchg
fisubs
sub
and
fnstsw
jmp
mov
cmp
repnz
pop
sbb
fisubrl
sub
mov
inc
pop
mov
js
ss
cltd
js
cmc
or
cmpsb
or
mov
or
ficompl
js
xlat
movsb
inc
fiadds
push
jbe
stos
imul
lcall
push
mov
out
lret
fneni(8087
daa
ret
jle
mov
setp
or
mov
cmp
fsubrl
insl
cmp
out
cmc
lods
jg
cmp
push
push
jns
enter
jnp
cld
lcall
fnstcw
and
jmp
inc
hlt
cwtl
xchg
or
mov
outsb
push
stos
pop
cmp
push
stos
sahf
pushf
popa
nop
scas
mov
sub
call
cmp
dec
and
sbb
incl
mov
ds
mov
mov
cld
sahf
or
cmp
mov
adc
cld
and
xchg
dec
jmp
or
clc
mov
scas
jbe
xor
in
lret
mov
push
mov
lods
push
decl
add
leave
push
ret
add
lea
lods
dec
lods
add
test
xchg
jno
jmp
int3
test
jl
xchg
test
cwtl
fs
push
nop
insl
movsb
or
sarl
jg
mov
repnz
enter
or
inc
int3
cs
decl
mov
xchg
push
cmpsb
dec
bound
leave
dec
loopne
stos
inc
jp
push
or
inc
push
popa
icebp
and
adc
out
data16
enter
aaa
mov
out
clc
jmp
es
ljmp
mov
jae
or
fimuls
push
or
sbb
call
mov
mov
adc
mov
xchg
scas
daa
pop
fxch
out
repnz
jne
in
cli
lcall
cli
clc
mov
push
mov
inc
pmulhw
push
inc
jnp
push
shlb
call
xchg
dec
js
xorl
out
shr
pop
adc
or
mov
mov
mov
or
inc
add
stos
xchg
pop
cmp
pop
jnp
call
push
lcall
push
enter
and
and
lcall
push
mov
xor
sar
mov
cmp
insb
nopl
and
sub
adc
push
jp
inc
icebp
sub
cmp
inc
int3
inc
lds
lcall
fwait
test
xchg
scas
xchg
and
fs
popf
jbe
psubusb
stos
adc
lret
int3
mov
lods
push
lcallw
je
sahf
stos
lods
jl
shll
pushl
std
jnp
xor
enter
popf
mov
jmp
lahf
cmp
setno
pushl
ror
pop
popa
test
hlt
xlat
pop
push
and
in
sbb
sbb
sbb
rcr
aas
mov
mov
call
in
jns
mov
repz
mov
loope
fsubl
dec
jb
pop
pop
std
sub
cmpl
jp
mov
es
lcall
adc
push
adc
mov
test
jg
dec
dec
icebp
jae
cwtl
xchg
adc
dec
mov
incl
add
frstor
lahf
adc
xor
mov
js
incl
lods
call
cmp
or
xchg
out
fisubrl
hlt
addr16
jne
dec
mov
pop
imul
pop
cmp
push
call
sub
leave
hlt
nop
mov
bound
iret
hlt
sbb
mov
movsb
pop
or
int3
mov
fldl
jae
mov
or
sbb
mov
sahf
sbbb
jb
xchg
or
fdivs
dec
adc
sub
call
in
jb
cmp
int3
ljmp
in
pop
dec
xchg
aas
add
adc
jo
lahf
ds
push
test
sub
ss
sub
dec
adc
mov
and
xchg
mov
data16
push
fsubs
push
lret
cmpb
decl
xchg
in
push
pop
inc
les
mov
jmp
mov
mov
xchg
jmp
fdivrl
je
xchg
dec
or
mov
popa
jmp
push
hlt
enter
fisttpl
incl
aad
lahf
push
pushf
rcll
mov
stos
or
jmp
xchg
cwtl
push
lret
loopne
cmp
jns
xor
jecxz
fidivrs
popa
addb
pop
ljmp
pushl
int
or
and
ss
adc
mov
pop
or
test
inc
ja
sbb
inc
lcall
lods
adc
inc
sbb
or
jge
mov
lods
arpl
xor
add
pop
add
lcall
gs
mov
inc
stos
fs
out
cli
lods
adc
clc
mov
pop
sub
inc
and
sub
push
jns
lahf
cmp
pop
ljmp
cmpsl
xchg
push
inc
jl
push
xchg
filds
xchg
pop
jo
loop
adc
xchg
ss
incl
aam
ds
inc
and
lea
stc
pop
mov
cmp
int
adc
push
in
imul
or
outsl
ljmp
cli
jmp
in
lods
and
lret
je
loope
imul
inc
imul
inc
jb
cmpsb
cwtl
add
addr16
movb
mov
xchg
mov
pop
cmp
inc
mov
pop
pop
mov
jmp
cmpsl
lahf
repz
jae
ja
xchg
add
sbb
incl
std
jmp
dec
jne
pushf
fmull
lds
in
push
push
pushf
aas
clc
in
scas
cmc
outsb
xor
incl
lock
pop
jl
sbb
inc
test
aas
call
push
jnp
out
cmpsb
hlt
mov
pop
in
insl
jecxz
add
loop
loopne
decl
shlb
inc
sub
cmpsl
ret
repnz
movsl
pusha
shrd
jmp
and
cld
shrl
pop
in
sbb
int3
push
or
loope
jo
pop
call
das
into
and
fdivs
movsl
xchg
or
dec
filds
lods
inc
ljmp
lcall
dec
jp
pop
ja
scas
data16
fwait
loopne
adc
mov
scas
clc
xchg
cmc
out
int
inc
sub
adc
lea
push
testl
lea
sar
rol
mov
fidivl
loope
gs
frstor
cmpsb
inc
into
or
insl
lret
subb
stos
scas
jns
lcall
sarb
idivb
fimull
hlt
push
lods
mov
mov
cmpsb
sbb
lcall
push
shll
and
aaa
out
mov
jb
js
pop
add
mov
hlt
test
dec
dec
cmp
movsb
stos
lahf
sbb
call
leave
cmp
seto
stos
push
push
mov
ds
out
dec
aas
mov
iret
mov
outsb
cli
imul
pushl
add
out
ja
pusha
repnz
in
or
lcall
lcall
fs
jmp
icebp
push
jnp
mov
fcomip
cmp
pop
sub
inc
lahf
push
dec
xchg
out
xchg
popa
mov
mulb
in
lcall
ret
seta
push
dec
aad
in
add
addb
adc
sbb
jmp
jmp
push
pop
arpl
in
lret
fisubs
fldcw
cmc
push
shlb
mov
sbb
int
in
in
push
sbb
aam
mov
cmp
sbb
in
mov
fwait
push
cmpsb
int
inc
sub
xlat
clc
dec
jmp
roll
decl
faddl
arpl
pop
in
mov
pop
mov
jle
andb
push
sar
fcomip
xchg
clc
mov
lock
imul
or
push
lods
sub
push
jns
in
jle
mov
lods
xor
xor
call
outsl
aad
ss
mov
jg
and
pusha
jae
roll
loopne
xchg
and
adc
mov
and
repz
faddl
inc
loope
cli
lods
insl
cld
outsl
ret
push
sar
scas
es
ret
loop
mov
adc
cmp
fs
jge
ljmp
aas
lods
gs
xchg
pop
xchg
in
and
popa
daa
jl
and
add
mov
ljmp
xchg
xchg
jne
loope
jecxz
jmp
add
dec
sbb
mov
pop
addl
call
mov
ret
fwait
or
ds
xchg
xchg
stos
cwtl
int3
xchg
cli
fwait
and
incl
cmp
adc
inc
fs
lods
add
pop
add
cmpsl
es
push
addb
add
call
mov
out
lret
adc
mov
add
std
cmp
mov
push
mov
jle
mov
aas
jns
mov
pushl
in
push
int
fwait
xor
negl
mov
ret
mov
int3
mov
cmpsl
xchg
cmp
jmp
add
and
dec
mov
pop
cltd
pmulhw
je
sub
lods
add
xlat
xor
incl
in
pop
mov
cli
stos
data16
std
pop
and
xlat
rcrb
cs
xor
outsl
clc
fmul
lret
mov
cli
fistl
std
jno
pushf
subl
dec
sbb
clc
jae
insb
mov
pop
add
cmp
shl
insl
and
jb
inc
fdivs
in
test
adc
adc
call
mov
adc
pop
and
scas
test
pop
jge
inc
mov
inc
call
xor
sub
aad
fdiv
sub
aaa
push
ljmp
mov
call
cli
pop
repnz
mov
mov
cmp
xorb
incl
mov
lea
sbb
xor
mov
ss
pushl
mov
cmp
push
pop
inc
les
dec
fildll
jg
mov
pusha
dec
dec
cmp
mov
mov
adc
in
arpl
sub
mov
fiaddl
inc
dec
push
jae
icebp
and
adc
pushl
sbb
int
and
ds
push
xchg
jecxz
adc
mov
shrl
ljmp
lcall
lcall
cmp
fwait
or
inc
int3
cmp
in
and
lea
ds
je
mov
sarb
fimuls
xor
nop
mov
ss
jg
std
enter
xorl
addl
sbb
inc
mov
mov
lret
lds
pop
scas
pop
mov
lock
enter
mov
xor
call
dec
pop
movsl
stos
nop
jle
mov
insl
and
and
jae
bound
or
ljmp
jl
insb
or
mov
inc
and
mov
xchg
pop
add
loop
mov
decl
lock
fmuls
fsubrl
mov
push
add
mov
pop
fdivr
mov
mov
ljmp
adc
pushf
cli
mov
orl
jg
ljmp
xchg
loop
hlt
scas
scas
push
test
pop
push
es
into
mov
ljmp
mov
xor
pushf
mov
pop
cmc
hlt
and
inc
mov
sub
mov
add
mov
adc
adc
mov
jnp
loop
and
mov
xor
push
insl
xor
fadd
jne
popa
imul
cmp
aaa
scas
pop
add
fsubr
insl
mov
decl
or
lret
xor
ds
xor
cs
jns
hlt
jmp
ljmp
push
and
xchg
stc
push
and
dec
lods
imul
outsl
lods
dec
sarb
scas
dec
shl
movsb
push
add
sar
sub
mov
fisttpll
push
push
cltd
adc
add
lods
insb
int3
das
ljmp
adc
push
jae
cmp
in
jns
sbb
pop
push
scas
out
and
sub
jmp
insl
or
jns
in
movsb
mov
sub
sti
adc
enter
repz
and
nop
enter
sar
inc
mov
daa
and
fld
sub
repz
je
mov
mov
sub
ret
lcall
pop
lret
repnz
sbbb
adc
movsb
push
mov
or
mov
je
adc
mov
cmp
jp
or
pushf
js
fcos
lcall
in
sar
movsb
cmpsl
mov
into
pop
xorb
inc
sbb
lret
jne
dec
andl
fcomip
out
ljmp
sub
xor
push
lret
xchg
call
mov
mov
jno
dec
add
and
stos
int3
jo
dec
push
imul
std
stc
xchg
xor
xchg
jl
mov
lds
out
enter
call
mov
stos
mov
add
shlb
lds
pop
fcmovb
int
sbb
lret
jns
sbb
sahf
repz
or
mov
pop
xchg
fldt
inc
sti
insb
jbe
sbbl
or
ljmp
xchg
push
and
std
xchg
cmp
jns
pop
ja
rcrb
mov
add
xor
push
cmc
jnp
outsl
cmpsb
cli
cmc
lods
sti
lds
test
add
cmp
add
rolb
fidivs
jmp
pop
gs
add
sbb
mov
xchg
rolb
mov
xlat
mov
jae
fxch
or
sahf
scas
clc
sub
and
mov
in
cltd
jp
pushl
std
test
test
ljmp
mov
bound
repz
cmp
popa
movsb
dec
popf
mov
aaa
fidivrs
cmp
push
lcall
dec
dec
mov
or
or
std
fsubs
cmp
les
mov
int3
mov
inc
mov
jle
negl
jb
in
aaa
cmp
xchg
stos
jns
call
pop
loopne
in
jmp
or
push
cmp
inc
aad
pushl
test
adc
pop
popl
push
mov
pop
leave
aam
into
mul
jge
pop
jno
xor
call
js
xchg
mov
sub
into
and
add
icebp
ja
pop
cld
decl
mov
push
ss
test
test
cmp
add
jle
mov
push
fsts
pop
or
out
imul
fsub
cmc
dec
sti
mov
jbe
fnsave
js
fcmovnu
pop
cwtl
fucom
fisubl
icebp
xlat
jmp
and
push
das
jp
or
incl
jbe
add
cmp
js
inc
add
xor
lea
push
or
pop
jl
clc
jmp
shll
cmp
bound
aaa
sub
icebp
rcrl
aas
xchg
mov
pop
loop
adc
mov
sub
movsl
testb
mov
xchg
xor
sti
arpl
lods
imul
xchg
inc
out
add
inc
insb
mov
add
lcall
add
adcl
loop
ljmp
lds
mov
lret
and
lret
ret
sahf
fdivrs
sub
outsl
sub
dec
cmp
call
adc
push
dec
pop
dec
cmp
in
leave
test
xchg
or
fisubrl
cmp
shr
push
and
mov
ljmp
adc
ljmp
fwait
insb
out
mov
roll
ljmp
lret
fwait
adc
inc
jg
movsb
mov
cmp
xor
popa
dec
xchg
mov
adc
ja
ds
jp
scas
rorl
loop
ja
inc
iret
aam
lods
fldt
mov
add
xchg
lock
pop
xor
nop
out
ljmp
ljmp
push
xor
add
fisttpl
scas
fistpll
fs
ret
sbb
sar
call
jg
jbe
sub
push
cmp
and
je
aaa
pop
mov
repnz
ljmp
or
cmp
xor
xchg
dec
idivl
dec
xor
lret
scas
mov
lcall
and
and
xor
movb
fucomip
cmpsl
cmp
push
push
mov
decl
inc
cmc
test
jns
stos
std
icebp
lock
xchg
mov
and
jmp
sbb
jbe
jbe
mov
mov
jmp
mov
sbb
jbe
xchg
clc
in
inc
dec
imul
stos
stos
stc
add
shlb
test
sti
test
sti
sub
mov
dec
pushl
sbb
std
fiadds
adc
xchg
push
in
jb
pop
xor
imul
pushl
stc
mov
scas
jge
out
pand
pop
jge
xlat
add
loopne
inc
xchg
or
mov
outsb
inc
or
and
xor
xchg
pushl
test
xor
dec
cltd
mov
cwtl
push
fstps
mov
pop
mov
adc
mov
pushl
jmp
loope
cmpb
jne
fdivs
adc
outsl
cli
incl
ret
cmpsb
sbb
inc
xchg
loop
ret
ja
call
mov
fmulp
mov
sbb
add
add
pop
jmp
push
incl
scas
push
ja
inc
outsl
fwait
jl
mov
js
lods
inc
mov
call
dec
push
fadds
mov
call
dec
psllq
or
adc
call
out
dec
sbb
inc
lods
adc
mov
add
xlat
xchg
fisubrl
sub
mov
decl
and
cli
mov
lods
push
xchg
sbb
les
pushf
inc
fs
and
call
inc
mov
inc
ret
adc
loope
xchg
lret
repnz
add
mov
pop
inc
icebp
loopne
xchg
incb
imull
lea
add
ret
lcall
loopne
xor
ss
sub
frstor
or
je
pop
ja
mov
mov
les
xor
lcall
les
push
fisubs
sub
aaa
cmc
roll
popf
sub
loope
mov
shlb
mov
xchg
add
ja
adc
fidivrs
pop
leave
scas
cld
mov
mov
test
pop
push
ljmp
pop
add
jle
fcmovb
fwait
out
fistps
inc
adc
sbb
ljmp
fiadds
jns
jle
js
stos
cli
std
jns
or
jl
add
cmp
jg
xchg
imul
out
mov
pop
popf
sbb
hlt
lock
pop
lret
and
jg
add
addr16
aad
arpl
push
push
test
rclb
enter
cmpsl
scas
cmp
cmp
xchg
cmp
jl
ret
add
mov
push
sbb
push
pushl
push
loopne
nop
cmp
das
xor
fistl
cmp
stc
push
or
mov
mov
pop
sub
fimull
add
xchg
cmpl
mov
lcall
inc
add
sarl
icebp
dec
test
imul
jne
xor
movsl
jg
mov
incl
insl
pop
cld
push
jg
cwtl
cmpsl
xor
lret
ljmp
sub
shlb
rolb
fidivrl
push
cwtl
dec
cld
decl
add
fimuls
cmp
aas
stc
or
addr16
rorb
loopne
sub
push
inc
jo
xor
jg
mov
adc
cmp
dec
subb
push
mov
ja
filds
je
movsb
dec
insb
or
push
mov
jnp
lret
sub
add
mov
testb
xchg
mov
es
mov
icebp
rol
jge
cmp
aam
sub
scas
jns
mov
pushl
fmuls
push
jb
int
cwtl
lcall
in
jno
mov
lock
mov
iret
mov
cmp
mov
add
xchg
pop
sub
or
jle
cmp
das
mov
xchg
insl
rorb
mov
cmp
sub
decl
lcall
and
add
ss
aas
inc
imul
call
and
adc
out
pop
outsb
pop
mov
icebp
pop
xchg
in
push
jo
inc
cld
scas
loopne,pn
lcall
icebp
and
jae
lcall
fcoml
xor
add
xorb
mov
xchg
jg
ret
call
shr
jle
mov
loop
mov
inc
dec
mov
daa
mov
xorl
push
cmp
add
sbb
xlat
mov
jo
lcall
jge
testb
pop
add
xchg
xor
mov
xor
dec
cmp
fwait
mov
jmp
pusha
xchg
cs
sbb
push
decb
pushl
std
jne
jo
adc
rcrl
rorb
daa
xor
fcomip
call
xor
pop
or
mov
fistpl
mov
jmp
sbb
jg
lahf
mov
decl
jb
test
inc
aaa
xchg
enter
jle
rol
sbb
jo
gs
xchg
ss
push
cmpsb
mov
pop
scas
mov
mov
cmpsb
mov
add
out
bound
movsl
fucomp
xchg
and
push
xchg
pop
hlt
dec
incl
cld
push
pop
jl
push
fsubrl
insb
sub
dec
mov
push
push
lahf
adc
mov
out
mov
sbb
sbb
test
insb
fstpl
lcall
bound
in
cli
sbb
in
loope
notl
xchg
adc
pop
xchg
idivb
decl
test
daa
cmpsb
ret
je
das
jae
mov
push
int3
push
cld
fisttpl
dec
ljmp
add
xchg
push
jg
mov
js
dec
nop
mov
test
decl
lock
test
ja
filds
mov
jnp
jns
mov
sub
incl
push
nop
inc
or
sub
int3
jp
test
scas
jae
ret
ljmp
sar
frstor
push
lcall
sbb
push
mov
xchg
lcall
outsl
mov
in
jb
lock
and
and
pop
test
test
aaa
adc
incl
shlb
dec
mov
clc
sub
ret
hlt
out
mov
xor
daa
cmp
decl
les
cmpsb
fidivrs
mov
je
js
lods
int
lret
sub
fbld
cmpsb
push
outsb
shl
sbb
mov
sub
pushl
jge
loope
out
in
cwtl
mov
dec
lea
mov
rcrb
call
jo
jl
ljmp
test
imul
scas
add
popf
adc
dec
push
and
add
cmp
push
pop
icebp
decl
dec
jle
xor
xor
xor
outsl
xor
jnp
outsl
clc
fstl
mov
rolb
cltd
iret
sbb
cld
cmp
mov
pushf
sbb
incl
jmp
jnp
push
push
insl
push
xchg
movsl
push
pop
xor
jbe
pop
inc
int3
cld
js
lcall
inc
cld
movsb
or
popa
mov
aas
mov
push
dec
push
cwtl
call
lret
js
mov
mov
fiaddl
js
mov
iret
fwait
jge
adc
cmp
call
pusha
sbbb
mov
out
adc
fisttpl
push
jmp
pop
pop
in
add
pushl
movsb
test
inc
mov
mov
ret
xor
movsb
cmpb
lret
pop
lods
sub
sbb
insl
sbb
and
xor
xor
push
ljmp
aam
dec
jle
jno
dec
lock
xchg
push
xchg
icebp
dec
cmp
mov
lcall
je
push
jne
insb
pop
jae
daa
lods
pop
ffreep
dec
icebp
lock
cmc
mov
lcall
mov
cmp
mov
aas
mov
xchg
pop
and
decl
outsl
pop
insb
daa
xchg
shrl
in
pop
cmp
aam
dec
cld
imul
jns
loope
mov
repz
xor
testb
jp,pt
loope
inc
daa
lods
lock
pushl
ss
jl
push
test
aas
cmpsl
add
insb
push
dec
mov
test
pop
cwtl
clc
xchg
cmp
mov
les
es
incl
pop
inc
or
mov
pop
sub
les
sbb
jg
mov
jge
pop
std
ficoml
add
test
incl
and
add
mov
in
adc
xchg
pop
popf
ljmp
fsubrl
xchg
pop
push
sar
decl
and
sub
jno
cmp
jmp
lods
mov
xor
jg
jne
xorl
ss
sbb
rolb
jecxz
adc
fistps
sbb
xchg
lret
xchg
ss
pop
lahf
stc
mov
adc
push
sbbb
jmp
xor
filds
inc
xor
lahf
rcll
orl
jo
sbbl
jge
outsb
mov
test
cld
pop
out
mov
push
sbb
push
dec
enter
idivb
xor
mov
lcall
sbb
in
mov
in
push
pushl
sub
dec
lret
addb
push
fwait
insb
loopne
addr16
mov
sbb
sub
call
push
and
test
adc
cmp
push
movl
xor
into
xchg
add
std
ja
jae
xlat
jle
sbb
pop
cmc
lret
dec
mov
in
sub
jg
or
out
pop
adc
mov
mov
testl
xchg
imul
pop
aaa
aas
xchg
out
icebp
lret
setg
mov
sub
xchg
sti
or
jb
out
mov
leave
inc
cmp
cmp
fdivs
add
mov
or
sub
cli
loop
ljmp
into
mov
lret
xor
and
cltd
hlt
and
scas
mov
cli
mov
lahf
mov
in
fisttps
ret
imul
mov
or
scas
dec
imul
jo
rorb
repnz
addl
lock
lcall
mov
into
sub
and
xchg
insb
rcrl
call
pop
pop
cmpsl
dec
mov
mov
fcomps
test
call
push
jg
jns
ss
adc
aam
pop
ja
icebp
jne
lcall
lds
cmp
ljmp
mov
sbb
scas
popf
shlb
adc
cmp
mov
outsl
adc
add
enter
addb
mov
or
cmc
int
in
ficoml
sub
rorb
into
lcall
pop
int
cmpb
insb
xchg
xchg
mov
sbb
sbb
jl
pop
jb
ljmp
clc
sahf
cli
bound
xchg
pop
rcr
pop
fs
dec
les
push
insl
fwait
lcall
mov
sbb
mov
lea
pop
std
sub
rcrb
cltd
dec
jl
shlb
inc
mov
sub
sbb
jmp
add
call
divb
outsb
cmp
jns
push
cld
push
ret
or
mov
cmp
sahf
idiv
decl
xchg
mov
pusha
push
sti
jmp
loop
dec
cli
jae
ficoms
arpl
bound
pushl
test
lret
stos
insl
and
dec
cmp
lds
incl
das
pop
fdivrl
jp
out
push
bound
adc
pop
sbb
and
hlt
scas
xchg
cs
add
lcall
ja
sti
aas
inc
push
enter
sub
mov
stc
testl
and
sbb
ficompl
lds
jg
mov
hlt
dec
insb
sarl
push
into
inc
mov
lcall
lahf
sti
fs
call
inc
push
imul
out
xor
pusha
xchg
lods
cmp
lret
mov
pop
cmp
stos
mov
or
xor
jno
add
ja
sub
ret
in
or
push
out
fcomip
xchg
rcrb
jmp
mov
cmp
fsubrs
outsl
mov
nop
jg
hlt
int
daa
in
pop
pusha
scas
pop
dec
dec
loope
stos
fsubrs
sub
lcall
mov
xlat
cmp
fldt
lods
mov
or
jg
cmc
call
pop
sub
lret
test
jp
jns
outsb
lods
add
ljmp
adc
mov
or
in
push
sbb
loopne
fisubrs
mov
mov
or
mov
mov
stos
fstpt
mov
mov
data16
and
addl
cs
inc
sbb
adc
out
mov
call
dec
sbb
std
xor
je
xor
adc
cmp
cmp
pushl
cmp
rcrb
fildll
test
repz
cmp
cmp
xor
enter
loop
cmp
pushl
add
dec
sbb
pop
cld
in
and
in
dec
jg
cmp
xchg
xchg
adc
pushl
fistpl
out
push
mov
stos
pusha
dec
fcomi
cmp
ds
inc
jmp
inc
dec
incl
pop
fs
in
lods
mov
or
adc
jg
rolb
push
repz
rorl
test
imul
in
daa
or
mov
sub
call
sbbb
ror
insb
mov
in
add
xor
fs
and
jbe
dec
adc
jge
ljmp
in
bound
sub
mov
lods
pop
add
outsb
sbb
cmp
mov
outsb
stos
pushl
push
loope
cmp
dec
ret
shr
movsl
clc
pop
outsb
xor
loopne
inc
pushf
dec
jge
jnp
jae
push
cld
mov
fsubrs
mov
xchg
out
mov
pushf
sbb
scas
or
jg
and
mov
adc
ret
push
icebp
ret
xchg
inc
pushl
pop
int
movsb
lea
ret
loopne
mov
and
lock
mov
ljmp
jmp
lock
jae
adc
xchg
mov
mov
lret
mov
call
sub
jge
rclb
imul
out
mov
es
cmpsb
sti
xor
out
fnsave
jne
pop
add
fwait
xor
or
jp
aaa
leave
mov
outsb
mov
shrb
xchg
imul
sbb
fsub
mov
cld
inc
jg
pop
mov
lcall
sbb
call
stc
jmp
aam
daa
insb
lcall
aaa
in
sub
sahf
outsl
sbb
incl
jbe
int
pushf
ret
test
lret
addr16
pushf
push
lret
enter
mov
test
scas
push
enter
sub
mov
mov
and
ret
xor
incl
xor
imul
and
repz
pusha
in
adc
sub
pushl
add
addr16
out
sub
add
test
or
jb
idiv
jg
stos
in
inc
rorb
bound
insl
mov
xchg
std
dec
jle
ds
scas
dec
dec
push
xorb
or
xor
inc
cmp
pushl
das
std
rcll
test
push
jp
adc
gs
in
incl
inc
xchg
mov
roll
aad
sbb
dec
xchg
mov
lcall
dec
loopne
loop
clc
out
aam
push
scas
or
incl
jns
mov
jecxz
roll
popl
mov
push
lret
fadds
mov
dec
push
sbbl
popf
push
bound
dec
push
or
pop
aam
mov
hlt
aas
jg
push
imul
add
out
daa
inc
cmp
push
fcomps
dec
movsb
jecxz
loop
pop
jle,pt
add
cltd
jmp
cmpsb
mov
sbb
call
push
xchg
pop
add
pop
mov
cs
clc
outsl
and
jle
enter
lcall
push
or
pop
mov
or
sub
sbb
ss
mov
decl
inc
mov
mov
popa
add
xchg
daa
popf
push
icebp
dec
pushl
rorb
in
rorb
or
out
push
mov
std
mov
push
lret
cli
decl
pop
xchg
mov
xchg
out
mov
cmp
cmc
sub
clc
sub
xchg
addr16
inc
push
ljmp
ja
fadds
movsb
leavew
loop
divl
out
jno
imul
inc
call
jg
incl
pusha
call
enter
movsl
ret
xchg
arpl
xchg
and
ljmp
sub
hlt
into
or
mov
lds
or
dec
pop
ds
inc
ret
loop
push
inc
ds
not
es
lcall
dec
cmp
insb
jno
popa
addl
pop
in
flds
test
cmc
iret
fisubrs
popa
xchg
ret
rcl
push
mov
add
imul
clc
jo
movsb
mov
repz
adc
pushl
ja
inc
icebp
jnp
shll
out
decl
xchg
push
shlb
xor
lea
inc
outsl
jg
test
hlt
sbb
mov
pop
add
and
in
cmp
in
mov
iret
xor
repz
cld
arpl
rcll
cmp
aaa
mov
pop
pop
clc
add
fists
test
stos
pop
aad
cltd
sub
ljmp
movsl
gs
dec
test
inc
mov
loope
fiadds
dec
pushf
add
and
gs
gs
sbb
sbb
xchg
cmpsb
pop
lahf
cmp
mov
scas
scas
nop
xor
les
test
fiaddl
popa
dec
mov
mov
mov
add
std
xor
ret
sbb
popa
out
jae
into
jne
mov
sub
fsubs
add
pop
insb
nop
lods
ljmp
ret
repnz
mov
pop
pop
movsb
add
push
and
cmc
mov
pop
inc
clc
adc
jbe
repz
mov
nop
ucomiss
loope
xchg
icebp
call
mov
aaa
xchg
test
jns
ja
roll
insb
addr16
fdiv
test
mov
jns
test
or
cmpb
sbb
imul
orb
sbb
xchg
adc
cmpsl
jp
stos
or
mov
xchg
out
in
jb
in
ret
xchg
mov
ljmp
push
ret
out
mov
outsb
xor
add
pop
xor
in
xchg
leave
inc
jmp
imul
adc
lret
movsb
jp
mov
mov
in
jg
jno
push
jle
mov
push
inc
in
pop
int3
sub
fcoml
ja
out
testb
fldt
out
stc
jmp
and
inc
mov
cmp
lcall
cmc
jnp
xor
mov
aaa
aad
mov
inc
sub
addr16
lcall
mov
cmpsl
add
inc
push
adc
ljmp
jg
inc
ss
outsl
test
pop
mov
mov
push
mov
inc
cmp
push
lcall
rcll
dec
mov
sub
pusha
mull
dec
out
and
test
test
call
lods
jno
xor
in
sbb
xor
mov
xchg
dec
int3
loop
enter
mov
ret
jg
pushl
mov
pop
jb
sub
in
sar
subb
stos
pusha
mov
inc
dec
das
xchg
cmc
add
decl
cmp
je
cli
mov
cmp
add
dec
inc
es
mov
or
call
outsb
lea
lret
lods
faddl
cmc
mov
dec
lods
imul
push
shlb
jbe
pop
out
rcll
test
ljmp
test
sub
adc
pop
pop
js
push
pop
add
out
ja
sbb
pop
test
jle
arpl
cwtl
cmpsl
mov
inc
cmc
xchg
mov
pop
fwait
lret
inc
out
and
xor
into
lahf
push
and
out
mov
pop
xor
ljmp
fsubs
push
cmp
clc
test
int3
mov
aam
pushf
incl
pop
adc
pop
dec
xchg
mov
cld
push
jge
into
sbb
cltd
scas
adc
rol
daa
add
pushl
movsb
adc
fnstsw
inc
mov
and
sub
fstl
inc
in
ljmp
push
inc
dec
cmpsl
insb
mov
test
icebp
mov
jns
cmp
les
xlat
push
inc
dec
pop
pop
sub
aad
arpl
in
into
cs
syscall
loopne
call
mov
xor
push
ljmp
push
insb
cmpsb
adc
sti
in
mov
mov
loopne
and
repnz
in
pop
jb
inc
ret
insb
pushl
jecxz
inc
stc
cmp
adc
rcrb
mov
decl
out
lret
or
sub
dec
stos
addr16
sub
incl
mov
xor
aas
mov
jge
and
shlb
xlat
hlt
sbb
iret
test
rol
add
pushl
mov
jle
mov
or
mov
testb
dec
and
fwait
decl
jg
inc
andl
lea
popf
lea
ret
cmp
ljmp
add
mov
insb
lret
pusha
jno
daa
divb
or
aas
movsl
clc
lcall
incl
xor
add
je
mov
ljmp
jb
sub
pushl
idiv
or
in
inc
dec
push
adc
xor
xchg
sub
xchg
loop
int3
push
mov
in
mov
nop
imull
sub
aaa
roll
icebp
lds
push
xlat
sbb
std
ljmp
sahf
cmp
xchg
into
jge
ds
decl
fcmovbe
mov
icebp
or
lods
adc
mov
fildl
mov
sub
xor
jg
cmc
jno
push
push
sbb
outsl
push
jns
pop
pop
jne
dec
insb
xor
mov
or
bound
rorl
ret
and
test
test
lock
decl
shlb
cs
test
loop
jne
pusha
out
xor
xchg
lret
adc
pop
pop
nop
lret
jl
movsl
enter
dec
jmp
pop
pop
lret
push
aam
decl
and
jno
pop
decb
insl
fisubs
test
outsl
rcrl
ud0
ljmp
js
xor
mov
rolb
and
aaa
pop
jmp
sti
cmpb
cld
cmpsb
test
pushl
jmp
mov
fldl
sbb
jne
push
stos
pop
jae
cmp
push
ljmp
test
or
bound
test
pop
std
pop
lcall
dec
cli
cld
aam
mov
bound
adc
xchg
lods
sahf
mov
mov
lcall
sbb
in
cwtl
sub
sbb
and
repnz
pop
mov
push
pop
and
mov
add
loope
adcl
or
enter
jo
das
and
fisubrs
test
sbb
mov
jecxz
push
pop
jne
sub
dec
enter
aas
dec
mov
mov
jg
inc
clc
pushf
std
out
push
xor
jp
loopne
imul
cmp
pop
mov
xchg
ret
xchg
push
jle
pop
adc
imul
rorb
in
sbb
dec
rolb
sub
fwait
and
outsb
sub
lds
push
cmpsl
pop
mov
outsl
adc
cli
inc
mov
int
inc
jae
mov
in
inc
stc
dec
mov
cmp
pushf
pop
mov
repz
cmp
arpl
incl
sbb
mov
push
mov
std
xor
mov
push
or
cld
xor
mov
bound
stos
ljmp
call
pop
inc
mov
push
mov
cmpsb
test
mov
and
ja
add
adc
xor
and
hlt
add
outsb
sahf
mov
ja
fs
dec
clc
or
outsl
jae
inc
mov
push
add
incl
lea
push
jl
mov
inc
dec
mov
dec
sbb
mov
incl
lahf
sub
mov
imul
roll
sub
dec
call
loopne
jge
fadds
cwtl
movsb
xchg
daa
cmpsl
fldl
sbb
in
incl
push
popa
out
push
jnp
jb
mov
xchg
insb
xchg
test
fs
jg
jmp
push
test
lock
pop
pushf
mov
mov
push
add
push
sbb
add
incl
mov
inc
jl
push
pop
cmc
out
sub
xchg
pop
js
mov
xor
data16
leave
pop
movsb
stc
std
push
int3
xor
aad
mov
jbe
inc
sub
stos
cmp
and
push
pop
or
lcall
mov
jecxz
xlat
mov
ja
mov
cli
and
insb
fneni(8087
mov
mov
incb
hlt
les
pop
cmc
sahf
push
outsl
and
fstpl
mov
push
and
lcall
push
in
or
jb
jle
lods
or
xlat
popf
jle
mov
cmp
sti
sub
lret
nop
mov
pop
jmp
cmp
mov
lock
adc
rcrl
icebp
incl
mov
lret
test
and
cmc
je
jo
and
sti
lcall
ret
outsl
movsl
mov
add
jle
fnstcw
fsubp
cmp
sbb
pushl
dec
test
push
or
je
adc
int
push
or
mov
arpl
or
faddl
dec
rcrb
jne
jno
ja
pop
pop
data16
mov
add
decl
fidivrs
pop
add
arpl
pop
sbb
aad
cld
mov
push
jg
dec
ss
sbb
xor
add
cmp
in
cs
test
ljmp
sar
cld
ret
cli
mov
and
cmp
cs
mov
push
and
mov
mov
mov
cmc
pop
bound
jp
jb
lcall
cmp
cli
fisttpl
xor
test
nop
out
adc
hlt
test
and
pushl
mov
andl
jmp
push
icebp
push
xor
dec
push
mov
clc
jg
push
xchg
inc
mov
mov
or
xchg
dec
outsl
aam
fs
movsb
and
or
lock
ljmp
inc
mov
loope
sub
mov
push
mov
xchg
adc
pushl
jle
out
ffreep
xor
mov
xor
jae
mov
popf
aam
push
aas
jle
jno
cmp
dec
add
jg
pop
sub
test
xchg
push
ror
jns
jge
adc
repnz
cs
clc
incl
mov
int3
xchg
inc
decl
pusha
roll
and
lock
xchg
sub
hlt
out
dec
orb
dec
int3
ss
testl
cmp
inc
hlt
mov
jne
or
sbb
mov
ret
sbb
cmp
bound
daa
and
dec
and
mov
ficomps
pushl
fdivs
sbb
or
ficomps
add
repz
call
dec
jbe
psadbw
mov
push
fimull
ficompl
jnp
es
orl
stos
cmp
iret
test
xchg
and
mov
mov
in
cmpsb
lea
ds
call
pushl
cmp
in
iret
mov
repz
fucomp
pop
ljmp
fiadds
lock
dec
xchg
sbb
and
stos
dec
push
mov
xchg
jmp
fwait
data16
xor
sbb
rcll
push
sub
idivl
jp
inc
es
call
sar
mov
clc
cli
xchg
movsl
cmp
mov
mov
add
push
xchg
loopne
push
mov
sub
in
scas
mov
jecxz
incl
fwait
jae
lock
and
add
mov
out
ljmp
shl
pop
add
lret
decl
or
repz
pop
pop
out
jle
std
push
inc
mov
mov
lcall
jns
mov
mov
fidivrl
jns
jne
imul
inc
mov
mov
shll
insb
mov
sahf
push
xor
cmp
mov
call
std
dec
mov
insl
inc
jns
cmp
mov
cmp
aas
push
scas
jle
mov
repz
push
and
mov
loop
adc
cmp
std
call
mov
xlat
mov
dec
cmpb
or
sarl
adc
in
mov
stc
inc
jg
and
push
mov
cli
sub
push
cltd
ficoml
jecxz
jg
mov
or
adc
adc
fiaddl
out
mov
xor
shlb
pusha
imul
mov
jg
cmc
adc
outsb
lods
inc
sub
sahf
lock
sub
pushf
inc
pushl
pop
push
sbb
dec
add
and
cli
repnz
or
movsb
sub
ljmp
psrlw
subb
sub
and
mov
call
jecxz
inc
hlt
or
inc
or
xchg
outsl
movsb
test
adc
js
push
cld
ret
push
jmp
insb
enter
sbb
add
or
jp
div
pop
andl
out
clc
dec
push
es
sbb
fbstp
or
imul
sbb
call
in
fs
pop
insl
push
ret
outsb
das
ret
xchg
sbb
jne
push
call
inc
push
mov
cmp
lds
out
pop
fxam
cld
add
sbb
xchg
shll
push
adc
stos
stc
andb
outsl
cwtl
xlat
push
in
push
lock
fwait
add
add
aam
call
ja
ret
sbb
xchg
test
fildl
es
jne
or
jo
pushl
cmovs
inc
dec
mov
pop
pop
in
inc
xor
jno
clc
stos
inc
jle
xor
mov
mov
jno
jmp
divl
sbb
sbb
sar
decl
mov
test
adc
test
lods
pop
push
mov
inc
lcall
adc
aam
leave
movsb
mov
lret
xchg
stos
mov
rorl
hlt
sub
push
xchg
dec
add
cmpsb
pop
xor
js
adc
fsubl
adc
pop
xchg
mov
call
jg
pop
test
xchg
mov
mov
mov
orl
xlat
push
decl
inc
push
sbb
adc
jns
or
mov
cmc
movsb
loope
xchg
cld
jns
fcomip
out
std
sub
loopne
dec
scas
cwtl
pop
xlat
es
xor
sbb
add
sar
pushl
xor
push
pop
call
imulb
push
xor
xor
enter
mov
jg
scas
add
push
xchg
and
andb
scas
inc
dec
fistl
jg
and
xchg
xchg
sbb
pop
fs
mov
jnp
adc
clc
cld
incl
les
mov
jecxz
pushf
xlat
gs
dec
add
push
std
jle
mov
mov
ret
fldenv
add
ss
pop
aas
push
pop
nop
mov
decl
dec
jno
into
sub
cmp
rcll
out
cli
mov
adc
fnstsw
andb
test
sbb
cli
es
jg
inc
dec
pop
adc
add
inc
add
out
call
test
pusha
sbb
mov
adc
in
sub
cwtl
stos
inc
push
les
imul
test
jle
dec
xor
jnp
cli
adc
mov
adc
hlt
mov
cwtl
cmpsl
push
mov
fwait
push
insl
stos
mov
movsl
and
stos
lret
or
popf
icebp
xchg
hlt
adc
push
mov
lahf
mov
jbe
ret
test
mov
jo
inc
loop
faddl
jmp
aam
mov
or
in
jge
mov
in
aam
in
xorl
mov
xor
in
mov
dec
pushl
push
xor
es
out
add
gs
out
jo
mov
xchg
xchg
fidivrl
jmp
and
and
mov
sbb
lret
mov
adc
stos
inc
pop
decl
dec
push
dec
mov
repz
sbb
stos
and
sbb
ret
outsb
mov
and
icebp
or
test
clc
mov
xorb
jne
push
and
icebp
inc
xchg
enter
push
pop
into
push
lcall
sbb
in
add
cmpsb
loope
push
imul
repz
out
orb
sbb
pop
xor
mov
addr16
movsb
bound
xor
xor
push
jmp
stos
xlat
inc
pop
enter
movl
loop
inc
test
push
or
clc
insw
fs
incl
ret
xor
enter
ljmp
jmp
outsl
mov
sbb
rcrl
orl
xor
mov
cmp
ja
ljmp
push
inc
mov
data16
jg
sar
incl
xchg
mov
data16
scas
lods
pusha
push
stos
xchg
pushf
jecxz
dec
sarl
cmc
call
cmp
ljmp
dec
or
pop
inc
pminsw
ljmp
scas
xor
push
and
jge
push
pop
lcall
xchg
decl
out
sub
fnstenv
sub
subb
shr
imul
mov
push
je
dec
jmp
inc
jecxz
pop
sahf
mov
mov
popa
xchg
or
jbe
les
push
adc
out
decb
dec
cmp
and
push
mov
out
mov
add
addb
rcrb
call
pushf
pusha
xchg
push
scas
rol
out
dec
sub
push
pop
repz
xchg
aas
cld
incl
in
push
cltd
jle
push
repz
out
pop
cltd
sub
or
add
cs
mov
lea
mov
int3
into
dec
pop
movsb
adc
and
aas
pop
addr16
and
sbb
or
mov
fwait
mov
mov
das
mov
test
flds
lret
mov
test
incl
lods
xchg
int
xor
cmc
std
fwait
add
sbb
jmp
das
cli
mov
dec
mov
dec
stos
mov
cmp
ss
lahf
ljmp
jae
pop
xchg
aas
xchg
push
jmp
pop
fwait
divl
movsb
mov
jmp
scas
add
notl
ficoml
rcl
dec
sbb
test
inc
jmp
sub
sub
roll
lret
mov
mov
sub
mov
test
push
inc
pop
sub
out
dec
adc
repz
add
arpl
daa
rcrb
lret
sub
call
popf
jne
enter
push
add
vunpcklps
adc
mov
sub
adc
out
jae
lods
and
enter
or
out
out
mov
incl
mov
test
out
push
xchg
das
cmc
addr16
and
out
dec
xchg
repnz
pop
imul
lcall
popa
xor
cmp
push
ss
out
sbb
mov
out
xlat
inc
xchg
lcall
push
cmpsb
mov
fwait
outsb
int3
mulb
xchg
cli
xchg
dec
xor
push
js
cmpsb
lcall
cwtl
cs
fsub
leave
sub
xchg
pop
push
hlt
leave
jne
inc
out
dec
andl
xchg
mov
in
lds
in
xchg
icebp
stos
mov
mov
mov
push
add
std
incl
scas
test
jp
pop
pop
dec
in
setne
aaa
mov
xor
xchg
pop
sbbb
hlt
and
jne
pop
fs
loopne
jmp
ret
push
sbb
fwait
push
stc
sub
enter
sub
loope
decl
pushl
scas
enter
loope
mov
stc
push
xchg
and
cld
int3
lods
mov
mov
sahf
dec
popf
mov
mov
pop
mov
pop
push
fcmovbe
and
aaa
push
xchg
jns
pushl
movsb
cmp
xchg
sub
jmp
divb
std
or
or
ja
sbb
cmp
leave
pop
dec
push
insl
shl
or
pop
mov
stos
and
inc
lds
jmp
aam
mulb
sti
mov
outsb
xchg
movsb
jns
and
ljmp
cli
mov
dec
dec
out
sbbb
imul
adc
ret
adc
mov
icebp
xchg
jb
sub
push
add
hlt
test
mov
xor
out
mov
jo
aas
pop
lods
sbb
popf
inc
dec
in
mov
out
movsb
pop
mov
addr16
add
ljmp
inc
dec
push
mov
decl
xchg
mov
sbb
xchg
ljmp
pop
pop
out
fldl
lahf
jb
dec
loopne
incl
xlat
arpl
inc
add
adc
je
or
sbb
cmp
mov
std
test
dec
push
mov
inc
push
std
out
xchg
mov
cmp
loope
cmp
nop
or
cmc
testl
mov
and
mov
mov
mov
and
out
jnp
push
or
testb
mov
iret
jp
or
loope
loop
add
cli
jle
add
jl
mov
xchg
pop
incl
outsl
mov
lahf
xchg
mov
sbb
decl
mov
add
jp
push
jb
xchg
sub
cmp
outsb
inc
xor
sbb
movsbl
clc
in
mov
pop
push
push
cwtl
inc
sahf
or
data16
or
loopne
movsb
loope
xor
pusha
pop
pop
push
mov
scas
cmp
xchg
inc
pushl
int
dec
add
mov
jmp
popa
push
in
stos
icebp
xchg
jnp
lods
shrb
addb
and
push
je
es
cmp
adc
sarb
xorb
mov
pop
pusha
push
jp
mov
jmp
fcompl
mov
cmpsl
sti
dec
inc
outsb
inc
xor
sbb
cmp
ljmp
js
sub
adcb
mov
outsb
push
mov
lock
movsl
adc
ret
outsb
pop
les
decl
aas
ret
lock
adc
dec
pushf
pop
lahf
or
aas
insl
nop
push
xchg
iret
std
sub
ss
cmp
cmp
sbb
pop
icebp
push
pop
fstpl
insb
das
imul
cmpl
dec
jmp
mov
loop
cwtl
dec
xor
scas
mov
icebp
mov
lea
rorb
out
jno
xchg
lcall
clc
test
shrb
icebp
fdivs
cli
mov
idiv
cmp
dec
cld
xchg
pop
scas
cltd
push
push
inc
xor
stos
rclb
inc
xlat
or
incl
add
je
nop
dec
push
pushf
sub
and
or
andl
mov
jg
xchg
fwait
adc
pop
xor
inc
mov
leave
enter
add
std
cld
call
std
dec
test
dec
shlb
jns
popf
or
lret
mov
ljmp
add
fs
jae
fwait
xchg
aaa
out
mov
call
or
jns
xchg
adc
xor
jl
lcall
cmp
mov
sub
pop
cltd
sub
xchg
inc
push
push
scas
call
std
arpl
mov
push
fistpll
jne
adc
ret
lret
mov
lock
lea
pop
inc
testl
and
imul
jg
sbb
jg
jmp
push
cmp
fs
mov
fwait
mov
call
icebp
lds
leave
movl
inc
pushf
sbb
mov
adc
pop
mov
bnd
dec
js
sub
in
es
sub
xor
test
lahf
mov
test
xor
fimull
fcomip
adc
sub
jae
test
call
sarl
mov
inc
sbb
add
fisttpl
push
inc
aaa
fwait
cld
xchg
push
lds
cwtl
pop
xor
jge
aas
cmc
call
lods
in
andb
rcll
sub
popf
ss
cltd
clc
and
mov
add
push
xor
shll
inc
and
jne
aas
push
jmp
inc
int
int3
lock
mov
push
add
lea
or
aam
inc
xchg
push
repnz
loop
cli
xchg
xchg
sub
mov
add
or
mov
jb
mov
and
xchg
xchg
jo
mov
out
adc
mov
cli
cs
rcr
mov
arpl
push
mov
xchg
xchg
sahf
jns
subl
fldcw
bound
dec
add
adc
jecxz
and
sub
push
fdivl
dec
call
arpl
fildll
arpl
sub
jl
rorl
dec
inc
cmc
fsub
ljmp
rclb
cmp
mov
pop
clc
pop
mov
pop
outsb
shr
push
adc
incb
mov
mov
cmp
cmp
xchg
insl
fisttps
adc
ds
dec
test
push
mov
clc
movsl
shlb
enter
adc
cmp
int3
cmove
add
iret
mov
adc
fsts
dec
cli
test
mov
lcall
divl
cwtl
push
lods
cmp
jge
cmp
push
sub
adc
clc
sbb
mov
xlat
rorl
lret
mov
cli
xlat
jmp
cmp
rorl
inc
adc
push
sub
loope
sbb
jmp
adc
nop
sahf
pop
pop
add
add
repnz
lods
push
mov
or
loopne
adc
or
mov
xor
imul
sbb
add
dec
pop
loopne
mov
fiaddl
cmp
test
test
xor
mov
cltd
pop
sub
jg
call
aaa
sub
push
jbe
pop
dec
call
or
pop
mov
decl
pop
nop
jp
aad
mov
jbe
test
out
pop
fists
sahf
js
loop
pushf
push
xorb
xchg
add
roll
scas
popa
push
jmp
mov
repnz
push
call
stos
push
loop
enter
popa
aam
mov
jg
mov
ljmp
jle
bound
adc
push
sahf
loopne
dec
xchg
shrb
lcall
bound
dec
ds
pusha
jns
and
mov
outsl
mov
push
xchg
mov
jmp
push
mov
or
mov
dec
xchg
scas
or
aaa
pop
mov
jecxz
fcmovnu
sub
ljmp
dec
add
test
xchg
ja
in
out
je
daa
push
outsb
adc
add
cmpsl
add
cs
decl
sbb
rorl
ss
and
stos
pcmpeqw
sub
pushl
mov
cmp
sbb
cwtl
dec
add
inc
sbb
rolb
data16
pushl
sbb
jb
sbb
pop
lods
dec
jno
test
add
cli
sahf
nop
insb
iret
inc
add
loopne
pushl
outsb
repnz
jno
add
mov
sbb
sbb
mov
out
jnp
test
insb
fidivs
push
out
decl
into
add
xchg
xor
xchg
sub
aam
ljmp
mov
push
mov
dec
in
push
inc
xor
pop
sti
adc
repnz
lret
pop
subb
mov
sbb
sub
idivl
sti
es
pop
lcall
or
ljmp
xchg
sbb
xchg
push
out
jecxz
sahf
fninit
lds
mov
sub
rcr
jmp
imul
lds
xchg
lods
fwait
add
or
push
insl
fisttps
xchg
scas
in
xor
mov
decl
jge
ja
test
xlat
repz
and
rol
into
idivb
decl
xorl
cmpsb
loopne
push
das
mov
ljmp
jo
int3
and
lea
insb
pop
push
jmp
push
mov
push
call
std
cld
xchg
test
cmc
lods
lcall
push
into
or
mov
jmp
dec
test
and
dec
cmpsl
dec
add
test
cld
lock
add
jne
call
pushf
test
loopne
dec
insb
xor
add
mov
lret
inc
lcall
icebp
jecxz
test
das
push
insl
lret
mov
rorl
push
mov
inc
mov
mov
ret
rcrb
cmp
call
stos
push
lods
test
jg
fs
fdivp
enter
ret
lea
dec
cmp
popa
dec
sar
inc
cld
shlb
std
and
cmp
je
dec
ficompl
jbe
xlat
cmp
pushl
mov
int
cmp
js
mov
cwtl
rorl
ljmp
lcall
adc
jo
sbb
arpl
outsl
mov
push
or
mov
clc
clc
ljmp
movsl
adc
push
adc
das
in
jecxz
popa
stos
aas
push
push
mov
rcrb
cltd
pop
incl
aam
jns
iret
addr16
ljmp
ds
fstl
push
add
lcall
std
or
mov
pusha
nop
aas
ja
clc
inc
xor
pop
jp
mov
push
mov
push
stos
mov
jmp
xchg
add
aad
mov
mov
into
and
sbbl
push
push
popa
loop
pop
jg
test
and
dec
dec
ret
xor
xchg
mov
int3
nop
xchg
data16
incl
adc
sub
mov
mov
out
push
mov
leave
loopne
jns
pushl
leave
inc
bound
pop
mov
pop
lahf
adc
fsts
out
repz
mov
lcall
cmp
arpl
xchg
cmp
inc
pop
aaa
and
add
fdivrp
push
in
mov
lea
mov
enter
std
jg
mov
inc
movsl
sub
insl
and
sub
inc
adc
inc
loopne
call
mov
mov
cmp
faddl
jge
hlt
inc
pusha
insl
rcrb
call
fbstp
or
stos
lahf
in
mov
inc
lret
xor
sbbl
pushl
jg
sub
mov
sub
jb
or
in
push
or
dec
inc
sub
cli
xchg
mov
enter
cmpb
pop
arpl
call
ret
cmp
xor
mov
mov
jmp
mov
pop
call
pop
inc
sti
push
xchg
mov
mov
fwait
lret
xchg
jmp
popf
sub
aam
sbb
mov
jg
pop
and
hlt
mov
mov
fsubs
xor
add
loop
xor
mov
mov
mov
or
adc
iret
out
or
int3
fisubrs
rorb
clc
jmp
mov
sub
loope
and
xchg
ss
cmp
test
mov
fbld
sbb
lcall
adc
fsts
jne
popa
decl
jl
int3
out
sbb
pop
jl
pop
fcomi
mov
jmp
sbb
jge
add
cmpsl
push
pusha
inc
adc
cmpsl
jge
gs
pop
shll
ljmp
aad
mov
or
dec
shlb
cmp
insl
lock
cmp
mov
dec
push
aas
data16
insb
sub
lret
pop
movsl
mov
fdiv
pushf
std
out
outsl
adc
call
add
stc
outsl
adc
rcrl
add
jbe
mov
imul
stc
cmp
sbb
js
jnp
pop
pushl
rcr
xor
pop
popa
add
inc
pop
jno
stc
and
adc
pop
pop
test
jmp
sbb
rcll
mov
or
repz
mov
ljmp
inc
dec
filds
adc
mov
leave
ljmp
pop
mov
ljmp
gs
xchg
in
hlt
pop
test
jmp
test
fs
pop
sar
lcall
mov
lock
and
push
jp
sbb
out
push
out
icebp
pop
pop
shr
adc
cs
mov
ljmp
add
mov
xlat
push
mov
sbb
fisttpl
xor
lcall
es
notb
popa
push
lea
pop
push
sub
xchg
fisttpll
or
push
fprem
incl
dec
cmp
popa
popa
stc
aaa
scas
push
stc
mov
ljmp
sbb
outsl
call
xchg
or
and
icebp
inc
shrl
mov
push
push
lcall
stos
daa
xorb
jnp
push
ss
dec
daa
daa
jns
testl
lret
dec
xor
push
int3
and
mov
ljmp
ret
cmp
xchg
test
faddl
push
subb
lcall
jg
ficoms
gs
and
repnz
mov
fstpt
lahf
fdiv
cmp
ror
inc
dec
in
push
stos
dec
cltd
jne
lods
mov
jne
sub
lret
xchg
cmp
call
and
push
push
xchg
cmp
loopne
add
shlb
and
sub
fists
mov
mov
out
loopne
adc
mov
pop
nop
fldt
xor
loope
add
or
std
dec
ljmp
lcall
stos
or
dec
sbb
jns
repnz
das
pop
icebp
imull
adc
jne
sbb
ret
xchg
sub
mov
leave
shlb
decl
jg
jno
pop
adc
test
adc
mov
sub
xor
jnp
pusha
daa
call
push
dec
lods
cwtl
ficoml
clc
je
insb
stos
cmp
outsb
int
decl
inc
xchg
addr16
pop
add
mov
icebp
cmp
xchg
cmpsb
cli
rorl
popf
rcll
incl
rcrb
aad
incl
pop
ja
sbb
sbb
lahf
xchg
adc
jp
xchg
sbb
cs
rol
jnp
push
dec
jle
mov
decl
xor
push
fadds
shrl
pusha
out
imul
jge
sub
movsl
adc
dec
jg
pushl
pusha
movd
fldt
sahf
push
nop
and
jmp
mov
jns
and
ret
inc
movsl
mov
jmp
shr
leave
insb
push
jae
push
mov
xchg
push
push
push
decl
out
lods
xchg
repnz
adcb
or
push
out
test
sbb
outsb
add
sarb
cmp
jne
lock
pop
outsb
lcall
ljmp
dec
dec
push
mov
popa
mul
add
mov
add
pop
jo
dec
jg
shrl
lret
push
jl
and
push
iret
int3
dec
scas
jg
sub
inc
frstor
inc
pop
dec
mov
sub
adc
scas
xchg
mov
add
or
insl
lods
mov
dec
jecxz
out
xor
mov
decl
stos
aam
mov
popf
xor
aam
clc
fdivl
sahf
inc
push
cli
xor
pushf
inc
ljmp
mov
dec
loop
push
mov
push
cmp
mov
aam
jmp
lcall
inc
lret
inc
repz
or
inc
call
xchg
and
movsl
xor
scas
xchg
lcall
cmpsb
js
mov
and
or
divb
test
mov
cltd
jecxz
roll
lcall
fistps
jmp
pop
mov
test
pop
pusha
movsl
std
call
test
incl
xor
lahf
mov
cmp
outsb
jns
subb
nop
stos
mov
lock
cli
incl
and
jge
je
das
adc
mov
leave
cmp
mov
scas
pusha
addr16
adc
mov
popf
xlat
dec
das
lcall
insb
mov
adc
pop
mov
ret
clc
lods
sub
and
add
sbbb
and
push
ficomps
lds
or
add
add
rcr
incl
std
orb
jo
mov
sub
lods
add
fwait
outsl
sub
test
mov
andb
ja
dec
jo
and
xor
das
add
ljmp
jl
jmp
lods
mov
test
sub
aas
int3
add
roll
mov
push
pop
clc
jg
jmp
adc
xchg
imul
loopne
push
mov
outsl
xor
add
xchg
jo
std
mov
or
add
push
inc
cmp
dec
dec
repnz
daa
test
push
je
lret
add
icebp
xor
pop
incl
and
dec
stos
xchg
roll
cmp
add
adc
fcompl
in
pop
fs
push
aas
mov
adc
aam
out
js
ds
fwait
mov
pop
dec
hlt
pushf
adc
jl
mov
lcall
adc
imul
jns
mov
jle
xor
addr16
in
xchg
fstps
fcomip
add
push
xor
jae
mov
pushf
imul
pop
xchg
leave
jp
pop
sub
inc
xor
out
dec
sub
xchg
push
add
cmp
negl
mov
cld
rclb
xor
stos
cltd
stc
lock
jecxz
in
ja
out
je
inc
pushl
jg
ds
ljmp
fmul
test
cmp
mov
push
jmp
adc
aas
xchg
clc
sub
mov
out
roll
aas
call
and
xchg
add
les
and
in
scas
mov
dec
pop
or
sub
call
aam
jecxz
xor
sahf
adc
ss
pop
std
pushl
jmp
mov
ljmp
push
mov
in
cmpsb
adc
incl
enter
or
pop
xchg
xchg
fs
mov
cmp
jmp
inc
adc
pushl
push
into
mov
movl
and
les
add
mov
inc
stos
inc
stos
cmpsb
icebp
in
add
xchg
lcall
test
pop
xor
mov
push
rorb
shrb
cmp
jbe
push
je
decl
push
movsb
fdivr
jns
insb
int
sbb
xchg
push
xchg
dec
or
push
jns
and
jg
pushl
movsb
mov
mov
push
add
cmp
enter
ljmp
lret
adcb
sub
xchg
pop
int3
sub
rol
stos
rorl
movsl
sbb
out
inc
sbbl
hlt
cs
xor
rolb
or
incl
icebp
loopne
insb
imul
addl
stos
mov
es
mov
jmp
js
icebp
jecxz
bound
cld
adc
pop
lods
movsb
jmp
xor
lds
js
push
or
push
nop
sahf
movsb
cli
sub
sub
scas
pushf
jns
push
std
decl
jl
push
int3
in
loopne
lcall
push
popf
push
es
pop
pushl
add
dec
in
repnz
int3
repz
or
into
mov
dec
pop
addl
incl
andl
sbb
sub
add
mov
dec
and
pop
sub
shlb
mov
loopne
test
xor
ljmp
push
sub
notl
addl
or
test
mov
cmp
call
lds
jbe
mov
push
add
sbb
sub
sar
or
ss
decl
lds
jmp
dec
loope
xor
adc
daa
sbb
jg
xorb
mov
fildll
lret
jae
ljmp
cmp
in
sub
test
jb
ds
scas
mov
sbbb
xor
xchg
inc
dec
inc
fs
xor
mov
ret
outsl
leave
incl
ljmp
stos
cld
inc
out
mov
mov
push
push
cmp
cmpsl
mov
add
add
jp
in
test
dec
xchg
fcmovb
shlb
les
cmp
jl
jnp
mov
sbb
jo
and
mov
push
mov
ljmp
outsb
outsl
xchg
push
aad
mov
mov
or
sub
test
dec
lods
incl
outsb
clc
out
push
leave
mov
jge
subb
mov
add
fwait
enter
leave
cmp
sub
xor
or
xor
push
pop
cmp
xchg
inc
mov
sub
aam
and
and
cwtl
dec
imul
outsl
int3
xchg
lock
pushl
call
repnz
call
adcb
decb
jg
or
test
mov
mov
popf
rolb
pop
push
or
sub
cmpsb
inc
sbb
xchg
mov
out
mov
dec
shl
jge
fst
pop
mov
lret
ret
lcall
aad
pop
mov
iret
cld
inc
int
sbb
dec
addl
xor
loope
inc
xchg
leave
xchg
es
imul
xor
sbb
scas
hlt
inc
fwait
xchg
mov
or
add
movb
xchg
jo,pt
push
in
test
fcmovbe
out
mov
xor
cmp
jg
pop
fdivs
imul
cwtl
pop
inc
jne
arpl
dec
pusha
es
popa
xor
bound
pop
cmp
cmp
test
jns
xchg
pop
mov
jo
xchg
cmp
nop
les
mov
decl
cmc
pop
dec
mov
rorb
lods
xchg
xchg
sub
xchg
inc
lods
iret
xor
cmp
incl
mov
xchg
cwtl
ret
or
pusha
out
cld
loop
add
jbe
mov
push
cmp
adc
ljmp
lock
jmp
fsubrs
fdiv
cmpb
nop
incl
and
xor
mov
repnz
mov
loope
clc
faddl
xor
mov
push
pusha
xor
xchg
in
repnz
and
fsubl
jno
cltd
add
test
cwtl
xchg
iret
and
ljmp
push
pop
movsl
sub
es
jnp
sbb
fistpl
dec
rcrb
mov
jg
ljmp
call
and
adc
frstor
aam
sahf
cld
lret
lods
xchg
insl
hlt
cmp
fsubs
or
push
and
lock
sbb
jg
jmp
cltd
jae
imul
adcl
hlt
dec
pop
es
cmpsb
adc
mov
jle
fwait
mov
das
loope
pusha
pop
mov
decl
inc
mov
cmp
jp
hlt
cmc
or
push
adc
stc
loop
cld
or
lcall
mov
ja
ja
aad
jns
cli
or
je
stos
mov
xchg
call
repz
or
es
cmp
call
mov
pop
or
ljmp
gs
hlt
test
cmp
sahf
pushf
je
sub
mov
imul
ljmp
adc
addr16
add
cmp
in
mov
loop
call
int3
mov
imul
decl
cmp
push
pusha
test
test
inc
pop
xchg
pop
stc
in
das
sbb
adc
pop
icebp
add
sbb
jmp
fisttps
fdivs
xchg
cmp
mov
ljmp
add
arpl
rcr
inc
mov
movsl
pop
jle
mov
add
fmull
sub
pop
jno
ja
call
jl
leave
lahf
loopne
cmp
je
arpl
lock
fdivrp
incl
add
inc
movsb
iret
lds
or
outsb
aaa
inc
fbld
jmp
in
loopne
mov
sbb
scas
cmc
hlt
movsb
in
push
cwtl
clc
retw
sub
popf
pop
sub
std
lahf
sti
repz
xchg
xor
pop
movups
movsl
and
les
lret
call
sti
push
mov
fs
iret
mov
pop
pop
push
test
negb
int
mov
push
ljmp
repnz
out
mov
in
xchg
mov
sbbb
mov
dec
aam
dec
jg
in
in
ljmp
add
mov
dec
xor
fs
out
out
fildll
lcall
lods
add
shll
out
rcrl
mov
jns
sub
xchg
jmp
jl
sarl
int
or
or
pop
lods
mov
mov
int
cli
js
mov
pop
adc
sub
xchg
popf
xchg
cmp
xlat
sbb
jne
push
loopne
decl
xchg
add
sbb
inc
add
bound
inc
aas
addr16
aad
push
scas
pushf
test
scas
mov
jnp
pop
mov
incl
xchg
fidivs
stos
push
stos
out
push
xchg
sub
repnz
dec
out
cli
pop
bound
xchg
push
cmpsb
les
sti
xchg
insb
mov
fucom
adc
adc
sub
cmp
stc
mov
adc
jle
jge
push
xlat
mov
fstl
sub
incl
test
mov
cwtl
and
iret
cli
xchg
mov
fildll
dec
xor
popl
rcrl
inc
adcb
decl
mov
cmp
repz
pop
addr16
rcll
xchg
jae
mov
inc
jbe
jmp
or
push
out
loope
and
mov
pop
call
lea
clc
ljmp
dec
clc
mov
and
int3
pinsrw
lock
daa
mov
sub
or
dec
movl
jg
dec
imul
fstps
shlb
jmp
ss
xlat
test
jl
inc
push
sbb
inc
test
stos
cmpb
sbb
cmc
cld
out
xchg
jp
push
ret
mov
lods
adc
orb
incl
and
rolb
pop
aas
xor
fiadds
xchg
test
mov
pop
cld
ljmp
daa
mov
or
adc
or
mov
ljmp
loope
adc
xchg
cmp
inc
aas
sub
icebp
into
dec
dec
jmp
add
pushl
jmp
mov
loope
and
or
daa
push
jg
arpl
aad
lcall
ljmp
jle
lock
mov
fsubrl
add
jbe
je
gs
lock
lods
arpl
in
enter
jmp
xchg
dec
iret
inc
rcl
push
sbb
pop
pop
mov
sub
inc
or
mov
push
lcall
sti
xor
jbe
addr16
jae
xchg
xor
sbb
or
decl
lret
out
push
jb
sti
jne
sub
sahf
sbb
inc
jmp
out
lret
lcall
repnz
movsl
notb
jnp
xor
xor
xor
mov
es
xchg
pop
pushl
std
jmp
adc
cmp
pop
icebp
je
scas
lret
in
pop
push
xchg
fcompl
out
cld
mov
lods
jmp
rcrl
adc
inc
in
dec
jb
cmp
mov
mov
inc
rcl
mov
jg
jbe
mov
loopne
movsb
jg
cmp
adc
stc
insl
lret
mov
push
decl
inc
cwtl
out
test
cmc
push
sbbl
mov
sti
inc
incl
jo
iret
test
ret
mov
or
pop
cmp
out
decl
lock
pop
je
jecxz
mov
loopne
ljmp
rorl
cld
shll
xor
ds
pushf
pushf
into
mov
jle
frstor
testb
mov
mov
xchg
cmpsl
sbb
fisttps
sbb
sub
dec
ret
xchg
pop
mov
lcall
and
inc
cmp
lahf
ds
jle
cld
push
cltd
add
inc
cmp
mov
lods
addl
inc
ret
sub
adc
decl
test
mov
jp
mov
cwtl
aas
mov
add
imul
je
out
lahf
adc
inc
mov
pop
insl
int
mov
cli
aas
scas
repnz
out
cli
pushl
push
mov
or
sub
mov
popf
jb
sbb
cwtl
inc
xchg
popf
ss
aaa
ljmp
or
test
sbb
pop
or
mov
fwait
cli
in
pop
outsl
fwait
sbb
mov
dec
xor
arpl
pop
in
mov
and
dec
shll
ljmp
nop
add
les
push
aam
gs
call
call
hlt
jnp
sbb
leave
fcoml
in
adc
xchg
dec
jmp
lods
mov
lods
push
popa
ljmp
mov
and
sbb
outsb
dec
xor
adc
loopne
sub
decl
cmp
mov
jo
insb
xor
xchg
xor
dec
ljmp
insl
or
and
xchg
gs
test
cs
fimuls
div
pop
inc
mov
jl
flds
adc
stc
aad
dec
and
push
insb
sub
jg
ss
push
das
mov
inc
mov
fadds
sbb
xor
ljmp
lcall
mov
inc
adc
loopne
inc
notl
leave
jecxz
out
incl
mov
jbe
out
sbb
mov
cmc
popa
out
int
rcll
xor
cli
pushl
and
test
movsb
and
add
mov
or
pcmpgtw
or
stos
enter
and
sbb
cmp
fbstp
mov
call
fimull
mov
lods
in
gs
mov
jecxz
sbb
xchg
push
sbbb
jmp
add
jle
fistps
xlat
pusha
sahf
and
std
fldl
push
or
stos
mov
idivb
cmc
jg
int
xchg
mov
jg
pop
mov
dec
aas
addl
out
clc
shrb
stc
icebp
xor
sbb
or
popa
dec
xchg
icebp
out
jnp
add
ljmp
xchg
shrb
and
rclb
popa
mov
mov
add
cmp
lods
pushf
mov
push
icebp
ja
test
pop
pop
movsb
jo
fsubrp
stc
gs
xchg
pop
mov
xlat
addr16
lcall
lods
push
xor
lret
das
jg
je
xchg
dec
push
xchg
mov
stos
jmp
dec
fisttpll
xorb
add
scas
fwait
xchg
imul
ljmp
sbb
xor
test
sbbb
dec
iret
cs
test
jo
cmc
xor
sbb
or
push
mov
mov
cld
mov
test
dec
and
outsl
add
jno
fiaddl
mov
adc
fisttpl
outsb
ret
test
in
rorl
cmc
cmc
pop
fiadds
dec
pop
pusha
sbb
jle
fbld
inc
cmp
cmpl
fs
into
cmp
pop
jne,pn
sub
cmc
rcr
ljmp
xchg
xchg
lods
or
sub
mov
aaa
sbb
push
idivl
enter
mov
sbb
push
lock
inc
inc
and
add
bound
fs
jg
les
mov
in
xor
mov
in
ds
push
jne
scas
mov
or
call
mov
push
dec
inc
out
xchg
in
in
push
jmp
dec
lret
sbb
gs
out
adc
xorb
je
jo
outsb
cmp
pushl
mov
sub
dec
test
test
adc
mov
decb
sub
and
call
test
inc
cmp
dec
jle
outsb
clc
cli
jg
push
addb
in
dec
xor
pushl
push
cs
jge
gs
pop
sti
lret
scas
xchg
mov
jg
mov
arpl
pop
es
pusha
insb
cwtl
and
iret
jb
ljmp
sub
std
test
mov
jle
jg
pop
and
addl
stos
leave
arpl
scas
cmpsb
movsb
push
das
jnp
das
fcoml
mov
das
add
jg
push
jmp
orl
out
push
iret
cmp
pop
outsb
pop
xchg
sbb
cmp
enter
aad
jae
mov
leave
lahf
xchg
adc
xchg
stos
aas
push
incl
lods
jmp
fistl
push
mov
jl
ljmp
sub
mov
data16
inc
lcall
js
hlt
lcall
insl
rorb
push
cmc
test
xor
aam
cli
push
scas
lret
aad
lock
mov
outsb
inc
add
cld
lcall
out
lret
cmp
aaa
xchg
sbb
inc
mov
push
ljmp
ret
ds
rolb
sub
adc
decl
pop
loop
stos
orb
lret
pop
jno
mov
xor
lcall
jns
pop
decl
lock
inc
bound
jmp
jg
aas
add
adc
lcall
mov
dec
and
movl
adc
or
mov
insb
mov
decl
and
outsb
jl
pop
mov
pop
fistpl
sbb
push
aam
call
cld
jmp
iret
xlat
mov
lret
aad
bound
pop
imulb
jb
test
decl
pop
mov
inc
dec
push
sbb
inc
hlt
push
jb
sub
imul
vmaxsd
cld
int
sti
or
movsl
sbb
cmp
loope
jmp
pop
mov
mov
clc
and
aaa
loope
mov
mov
mov
mov
mov
movsb
les
enter
dec
mov
jmp
pop
cli
xor
xchg
lret
xchg
inc
or
test
jb
jo
sub
mov
mov
jo
cld
push
fldt
jmp
sub
lret
push
test
ljmp
push
js
mov
clc
cmp
adc
jae
and
sbb
clc
call
pop
enter
pop
out
popa
ljmp
cmc
movsl
or
xlat
hlt
jg
cwtl
mov
arpl
inc
sarb
jmp
xlat
and
fucomip
mov
xor
push
xchg
lret
dec
sub
lods
add
movsl
dec
jge
sbb
mov
pop
push
cltd
jne
movsl
data16
lds
mov
or
mov
or
call
jle
mov
es
sti
sub
push
pushf
cmp
or
add
test
jge
addl
adc
ljmp
mov
xchg
cmp
cmp
dec
cmpsb
jg
out
subl
jbe
adc
scas
fsubrp
out
clc
ljmp
scas
push
push
sub
mov
mov
ljmp
shrl
sti
jne
xlat
push
loope
shrl
jge
add
pushl
or
xchg
cmc
push
rep
mov
test
sub
or
adc
divl
xchg
pop
leave
jp
cmp
dec
sbb
loop
or
cli
dec
sti
inc
jo
movsl
inc
cmp
and
ret
outsl
loope
mov
mov
push
pop
xchg
inc
pop
outsl
in
int3
shll
cs
cltd
lret
enter
push
mov
ret
leave
aaa
inc
andl
lock
cmp
xor
jmp
test
rcll
cmp
movsl
pop
nop
les
test
or
fidivrl
jb
dec
int3
shrb
jecxz
jp
sub
call
arpl
iret
loopne
sbb
decl
cmp
xchg
push
test
pop
jo
call
sub
decl
mov
pop
add
adc
in
sahf
repnz
ja
rcrb
mov
dec
loop
jmp
sbb
outsl
fisubs
leave
adc
and
leave
out
mov
pusha
sbb
pushl
push
and
daa
xchg
sahf
jno
push
in
dec
aam
mov
inc
in
pop
jl
psubusb
mov
sbb
stos
test
mov
mov
test
sub
in
xchg
jnp
mov
movsl
sub
je
clc
call
dec
and
test
sti
mov
jp
dec
mov
test
ds
call
and
ret
cmp
dec
fs
inc
popa
pop
fwait
dec
lret
cs
adc
push
lret
and
fidivs
andl
add
cli
in
decl
jg
enter
push
arpl
mov
add
cltd
sbb
mov
enter
sub
ljmp
xor
fimull
adc
leave
fs
xor
ljmp
test
jae
clc
ljmp
out
add
pop
das
push
movsb
xorb
xor
sub
ljmp
les
fwait
arpl
ljmp
fwait
scas
dec
jmp
pop
mov
call
xchg
push
cmp
push
and
push
iret
movsl
or
fists
sti
jae
dec
or
lcall
sub
mov
outsl
jbe
scas
les
fdivs
loopne
xchg
dec
call
loopne
mov
inc
cmpsb
sub
js
les
sub
hlt
mov
nop
and
jmp
pop
pop
mov
dec
xor
xchg
mov
cmpsl
aas
jo
pop
pop
arpl
fcoms
jmp
push
ret
sbb
sub
xorl
imul
insb
pusha
dec
outsb
incl
js
stos
shlb
xor
and
mov
jl
sbb
inc
push
loope
scas
shrb
jl
adc
mov
js
push
in
mov
pushl
outsl
inc
jns
adc
push
dec
sbb
cmc
fildl
das
push
sub
sbb
shr
dec
sar
scas
mov
ljmp
test
push
aas
hlt
out
clc
add
rolb
and
enter
adc
adc
in
jg
pop
push
leave
popa
inc
cmp
fwait
adc
fcompl
sahf
mov
das
adc
ljmp
in
scas
fwait
xchg
adc
arpl
jg
dec
push
dec
enter
jns
sub
or
call
ret
lret
loop
dec
and
lea
incl
aad
cmp
test
pusha
sub
jne
dec
aaa
jbe
ljmp
out
lods
inc
movsb
cmp
out
imul
repz
xchg
pushl
std
aaa
fimull
jb
enter
fdivrs
sub
sbbl
ret
adc
push
out
jns
scas
shrl
movlhps
stos
xchg
inc
loope
outsl
xor
mov
call
pushl
ror
stos
sbb
cmpsl
pop
jecxz
xor
movsl
imul
jae
xor
sub
fsubrs
mov
cld
incl
testl
repnz
xor
adc
ljmp
cmpsb
rcl
sahf
cmp
xorb
mov
stos
jg
aam
rol
cli
clc
fstl
cltd
out
or
push
aad
mov
pop
lock
cli
hlt
pop
daa
mov
push
inc
jno
add
addr16
in
cld
cmc
mov
test
jns
lret
ljmp
mov
lahf
cmpsl
lret
dec
sbb
mov
nop
cmp
and
push
cmc
mov
jmp
aad
loopne
pop
adc
push
add
imulb
ret
mov
mov
or
pop
mov
das
cli
out
cmp
push
xor
jns
fidivrl
push
dec
lods
dec
lea
js
dec
xor
pop
inc
sbb
xor
jecxz
xchg
mov
call
mov
push
sbb
stc
test
sbb
inc
push
int
imul
xchg
mov
shlb
cltd
test
jle,pn
dec
loop
outsb
gs
push
or
cli
mov
scas
test
inc
cmp
ja
cli
ljmp
adc
shlb
mov
sar
cmp
add
cmp
roll
cmp
dec
cmp
fs
les
or
dec
mov
xchg
pop
scas
mov
jmp
inc
mov
adc
imul
mov
cmp
mov
xchg
adc
jnp
add
jge
into
inc
push
sar
icebp
pop
icebp
lcall
sbb
pop
adc
jle
sub
movsb
jns
jns
testb
jmp
sbb
insl
mull
daa
pop
out
std
shrb
adc
mulb
test
dec
sbb
push
jge
or
push
and
test
dec
and
inc
out
rcrb
cmpsl
sbb
incl
cld
ljmp
js
ror
sarb
pusha
repnz
mov
mov
call
sub
jecxz
stc
pop
add
add
std
aam
jne,pn
push
imul
jg
ljmp
mov
cmp
xchg
and
dec
xchg
popf
dec
int
shl
clc
push
insl
call
loopne
jnp
in
cmp
push
addr16
add
dec
out
addl
movsb
xor
jg
dec
mov
fmull
lds
movl
jge
fcomps
das
movsl
xor
jmp
push
or
lods
pop
mov
movl
pop
iret
ret
hlt
adc
sbb
incl
mov
flds
adc
fisttpll
inc
or
pushl
std
inc
mov
shlb
aad
jmp
mov
stos
ljmp
inc
jo
or
imul
dec
in
sahf
xor
xchg
das
mov
mov
dec
push
fadds
test
jno
inc
xor
jns
sbb
mov
dec
mov
push
ljmp
sub
ja
pop
xor
cs
dec
pop
push
add
incl
nop
popf
cli
push
fildll
xchg
dec
or
inc
dec
xchg
test
test
adcl
mov
sub
mov
push
and
dec
jb
sbb
add
xor
es
shl
mov
call
loopne
sub
testl
std
pop
xlat
jb
inc
call
jle
lods
mov
jmp
out
mov
fldl
stos
jecxz
jecxz
sbbb
inc
and
add
xchg
and
jle
adc
mov
cmpsb
fdivp
fsubl
adc
pop
xchg
stos
xchg
mov
cmpsb
add
sti
fwait
imul
mov
mov
pop
neg
pop
xor
cs
mov
pop
stc
stc
add
jmp
js
je
test
iret
mov
aaa
sub
ja
aaa
outsb
fidivs
jg
fcomps
xchg
ret
xchg
adc
punpcklbw
std
jno
and
push
scas
inc
loope
jmp
pop
rorb
jbe
dec
lods
cmp
mov
out
inc
mov
pop
push
mov
push
cmpsb
dec
arpl
arpl
incl
out
jns
in
adc
push
in
flds
jo
cmc
xchg
jle
test
sub
mov
movsl
cltd
mov
mov
push
mov
incl
cltd
jl
js
inc
test
cld
icebp
or
pushf
mov
adc
lcall
out
mov
xchg
xchg
push
jns
sbb
ljmp
cmp
daa
sbb
lock
mov
repnz
hlt
sbb
std
push
add
and
stos
testl
outsb
xchg
shll
push
jb
inc
sti
mov
push
mov
fwait
jmp
inc
lret
imul
push
lea
fnsave
cs
adc
ljmp
jle
loopne
lea
fistpll
sbb
popl
scas
fnstsw
negl
jnp
shr
popf
out
jmp
out
stos
rcrb
sbb
mov
push
mov
jno
pop
imul
test
fs
inc
ja
jl
lock
popf
lea
dec
int
sub
mov
cmp
sbb
adc
push
movsb
mov
sar
decl
subb
gs
fildll
mov
mov
fistl
incl
sbb
adcl
leave
xchg
test
scas
push
add
mov
rolb
fidivrl
mov
cmp
cltd
xchg
out
cli
mov
lods
clc
movsl
int3
inc
xchg
mov
repnz
das
fcoml
and
or
sub
fistpll
or
aaa
shl
xchg
rol
or
cli
cmp
cmp
nop
lods
daa
and
sbb
inc
clc
xchg
cmp
aas
pop
mov
out
lods
jle
lret
enter
dec
dec
dec
jnp
je
jbe
mov
ljmp
jecxz
sbb
dec
add
in
or
int
psadbw
call
mov
aam
imul
mov
pop
pop
cmp
jg
call
stc
out
inc
outsb
lock
jbe
popa
xorl
push
mov
pop
cld
inc
adc
jmp
pop
cmpsb
out
ret
movsl
and
jp
or
pop
addr16
or
jle
nop
loopne
mov
push
or
mov
jne
iret
gs
push
test
cmp
push
loop
or
ret
push
daa
inc
or
jp
sti
pushf
pop
insl
mov
sbb
into
in
ja
push
loopne
mov
sbb
sub
rorb
jae
jl
cli
decl
mov
add
or
sbbb
pusha
je
inc
subb
add
adc
jl
iret
sbb
inc
testb
jg
pushf
xchg
sub
insl
pop
rorl
hlt
lcall
add
les
fistps
adc
jb
ret
fdivrl
clc
and
inc
adc
in
fwait
adc
dec
sbb
in
jb
jg
dec
jl
cmp
ljmp
add
in
mov
mov
jo
xor
dec
sub
mov
cmpsb
daa
and
sbbb
lcall
pop
loop
lahf
out
and
imul
inc
xor
stos
xor
std
fwait
stc
scas
cli
inc
js
mov
dec
call
aad
inc
add
or
test
push
inc
push
adc
pushl
cwtl
insb
shll
push
cltd
sub
jns
repz
xchg
loopne
xor
jp
add
es
iret
add
iret
jge
iret
popa
sub
push
or
shrb
push
xchg
xor
dec
xchg
subps
ljmp
loop
dec
push
int3
jp
mov
lret
dec
mov
inc
arpl
sahf
ja
rcll
pop
dec
decl
int
fucomi
xor
adc
or
xor
add
addr16
lcall
incl
jle
sahf
imul
js
and
or
imul
pushl
repnz
leave
mov
cli
xchg
dec
fidivrs
inc
shl
push
adc
mov
sbb
push
ds
cmp
mov
idiv
das
cli
test
lock
mov
jb
sub
lahf
aam
call
add
repnz
xchg
mov
and
incl
les
idivl
jmp
fsubl
jg
mov
call
or
push
or
idivl
cmp
xorb
sbb
push
pop
imul
fcomip
out
loope
xchg
je
push
shlb
xchg
mov
cmpsb
pop
stc
jbe
das
xlat
mov
pushl
push
pop
mov
lds
dec
or
jno
mov
pop
sti
cmpsb
lock
or
cli
cs
mov
faddp
inc
fbstp
or
mov
mov
inc
sbb
mov
xor
pop
push
pushl
and
subl
jne
cld
lock
pop
cmp
push
pusha
fisttps
and
lcall
mov
push
push
sarl
es
cs
push
and
bound
data16
mov
jmp
xchg
pop
lods
mov
in
imul
adc
xor
lcall
push
jne
xchg
ficompl
jmp
es
test
ret
xchg
aam
pop
lcall
fadd
fs
lret
cmp
inc
xchg
mov
dec
mov
jmp
or
outsl
lods
mov
add
iret
and
add
lcall
inc
add
hlt
adc
addr16
pop
cmpsb
cmc
mov
cwtl
mov
inc
mov
popa
pop
xchg
cwtl
ret
call
lret
setnp
popa
pop
jb
mov
jecxz
cmp
mov
ror
jge
sub
sarl
push
cmc
mov
jl
sbb
and
push
add
dec
cmp
inc
pop
call
clc
cmp
add
push
mov
jae
jg
inc
push
cmp
incl
sarb
cmpsl
jae
add
push
mov
aaa
fcomip
pop
mov
incl
pop
dec
adc
faddl
jmp
adc
js
test
xorb
decl
in
cmpsb
inc
and
pop
sahf
xchg
dec
aaa
cmpl
cltd
pop
mov
insl
aad
test
mov
or
pop
pop
lds
aaa
ds
test
cld
sub
out
sbb
sbb
add
nop
push
dec
sarb
pusha
mov
mov
push
ljmp
cmp
inc
sub
pop
mulb
fldcw
inc
pop
mov
xchg
mov
push
adc
repnz
pop
mov
sbbl
decl
pushf
test
sub
push
jb
xor
rcrb
shrl
lcall
jns
push
jg
sbb
xchg
in
mov
ja
stos
inc
jle
movsl
push
mov
stos
sub
decl
mov
movsb
sbb
ss
push
sub
nop
mov
cmp
mov
add
dec
lods
cmp
ds
fs
ror
ja
je
pop
lods
xchg
test
pushl
jmp
or
sbb
es
lock
cmp
aaa
sbb
inc
and
sub
and
outsb
sbb
mov
incl
xchg
mov
push
sahf
sbb
out
dec
cs
mov
pop
cld
lret
std
mov
xchg
xor
xchg
adc
repz
into
dec
repz
xchg
nop
mov
inc
enter
fcmovnu
cmp
in
popf
push
add
adc
insb
scas
inc
ja
ds
repnz
addr16
mov
lcall
pushf
adc
push
lcall
stos
imul
ret
dec
jbe
inc
cmp
cwtl
adc
mov
arpl
popa
mov
push
decl
mov
push
dec
out
cmpsb
dec
loop
pop
push
insb
add
add
and
ret
movsb
testl
push
cmp
mov
jo
lahf
loope
push
scas
mov
jmp
mov
lret
push
pop
xchg
sub
sbb
push
sub
call
roll
bound
adc
loop
or
daa
xchg
pushf
clc
out
xchg
cmp
xchg
xchg
icebp
sahf
test
cmc
pop
cmovl
cwtl
cld
fbld
sbbb
int3
xchg
outsb
ss
cmpsb
push
out
mov
daa
cmpsl
sbb
iret
dec
sbb
pop
subb
cmc
popa
add
ds
xchg
mov
dec
arpl
fsubp
mov
ljmp
jns
idivl
push
jle
inc
add
mov
lock
loope
fistps
sahf
stos
aad
mov
out
mov
inc
and
cvtpi2ps
jo
pushl
insb
notb
stos
imul
outsl
hlt
cmp
cmpsb
mov
mov
jnp
mov
ret
jmp
push
mov
pop
mov
adc
dec
dec
inc
adc
loopne
jl
or
adc
mov
fld
decl
xchg
xchg
shrl
notb
mov
xchg
adc
ljmp
adc
cmp
dec
fbld
repz
inc
imul
lea
adc
rclb
js
mov
sub
push
adc
cmpsb
test
ret
add
fiadds
xor
cwtl
sbb
shl
movb
gs
fsubrl
push
mov
jmp
add
jnp
in
fdecstp
xor
cmp
lock
imul
in
in
sti
inc
pop
mov
sub
clc
inc
jmp
adc
push
push
mov
sbb
pushl
int
xor
gs
in
xchg
subl
test
adcb
and
sti
cltd
sbb
loop
ret
shl
and
xor
sub
sub
sti
fisubrs
jg
sub
repnz
popf
loopne
and
jg
or
cwtl
cld
clc
in
sub
mov
addr16
push
add
jnp
and
pop
outsb
xchg
sbb
or
jl
aas
fstp
mov
sub
in
and
lret
and
scas
push
and
pop
add
pushl
mov
arpl
loop
mov
out
xchg
addl
fucomp
mov
mov
lock
ljmp
outsb
and
xor
and
cs
movsb
aam
mov
mov
adc
lcall
pop
fcomi
mov
addr16
fiaddl
inc
dec
scas
and
pushl
inc
push
inc
xchg
pop
and
or
loop
adc
lcall
xchg
shlb
dec
lock
cmpsb
lret
loope
adc
mov
add
sub
incl
cmpsb
push
leave
lret
div
pop
dec
leave
fcoms
out
cwtl
pop
ret
loope
mov
sub
xchg
pop
call
pop
or
pushl
gs
inc
pusha
aaa
sub
sarl
sub
pop
ficomps
imul
push
sbb
call
fs
lahf
push
xorb
jno
sarl
icebp
rclb
mov
out
xchg
popa
sub
in
stos
mov
scas
pop
sbb
jb
mov
xchg
cwtl
iret
stos
nop
fisubl
pushl
adc
sbb
xchg
hlt
clc
addr16
shll
iret
sub
jne
rcrl
ljmp
scas
in
mov
inc
mov
in
loope
out
rolb
repnz
pushl
sahf
xor
xchg
and
push
daa
aam
or
inc
into
xorl
cli
add
or
incl
jp
mov
dec
xchg
nop
inc
ss
popf
add
repz
pushl
mov
aad
negl
out
into
fcompl
lcall
cld
mov
out
mov
lcall
movsl
sbb
shr
pop
aad
repz
pop
sahf
imulb
aam
jg
rep
cmp
call
sahf
dec
push
push
ja
jle
call
fimull
mov
repnz
sub
cmp
movsl
push
jl
in
xor
jmp
mov
push
rcrl
insb
cltd
out
dec
gs
or
fldt
cli
jmp
lcall
xor
push
pop
rcl
mov
lock
js
cmpsb
cmp
mov
popa
loopne
xchg
cmp
pushf
test
mov
or
or
ljmp
das
dec
mov
mov
inc
push
xchg
inc
mov
mov
xchg
mov
inc
jmp
pushl
cli
and
mov
movsb
mov
lret
pop
lret
ficoms
sti
add
adc
mov
mov
inc
pop
push
mov
pushl
pushf
or
out
adc
add
lahf
rcr
fldt
mov
dec
jae
sbb
jl
dec
mov
jecxz
xor
int3
cmp
mov
daa
xor
fbld
lock
in
sub
out
rcl
cld
push
sbb
jle
or
decl
lods
jne
mov
or
sub
loop
jmp
sbb
inc
mov
imul
out
js
mov
incl
jno
fs
cmpsl
fisttpll
scas
addl
xor
lahf
sbb
call
cmpsl
in
outsl
incl
and
lret
pushf
mov
popf
cld
shlw
lret
pop
xlat
lcall
call
fadds
pop
mov
popa
aas
sbb
mov
out
imul
inc
and
xorb
mov
pop
es
jge
in
stc
fwait
test
pushl
mov
fmuls
imul
clc
dec
movsb
popa
push
sarl
lret
pop
cmpl
pushl
or
pop
add
and
addr16
sbb
pop
out
dec
mov
jmp
stos
pop
mov
pop
sub
aaa
js
add
sub
jbe
jo
inc
call
mov
sbb
mov
je
dec
push
xchg
xchg
cltd
cmpsb
push
subl
pop
jecxz
out
incl
ja
pop
stc
mov
cmp
pop
sub
andb
lcall
jae
push
jg
test
jle
imul
mov
orb
push
pop
pop
icebp
pushl
xor
adc
ja
shll
in
pushf
xchg
push
jmp
loop
and
add
fdivr
cmpsb
push
in
cmpsb
clc
imulb
ret
cld
push
mov
pop
or
or
ss
cltd
jg
call
jmp
sbb
ror
add
mov
outsl
pushl
call
mov
ror
int3
mov
xchg
and
jg
call
adc
jbe
or
idiv
sahf
in
fisubrl
pop
lea
rol
gs
cmp
mov
adc
fisubrs
popf
mov
rorl
out
push
cmp
out
std
flds
pop
in
jecxz
and
xor
idivb
std
mov
stc
jbe
ret
clc
fiaddl
pushl
and
lcall
testb
fcmovu
adc
fstpt
mov
repz
in
scas
jb
sub
test
mov
idivb
push
lock
pop
repz
dec
jl
cmc
outsb
push
into
icebp
jmp
aad
jl
les
mov
out
js
call
xor
mov
add
fwait
les
hlt
jmp
adc
loope
adc
fdivrl
outsb
and
lcall
cli
cmp
xchg
mov
cmp
fists
test
push
popa
jle
test
aaa
enter
dec
mov
inc
xchg
out
adc
pop
mov
enter
fdivrs
xchg
pop
pop
movsl
aam
sbbb
incl
or
pop
jo
sbbb
cli
jle
xor
mov
push
int
int
mov
add
jl
mov
out
inc
add
xor
adc
jmp
jo
inc
movsb
cld
mov
pop
enter
ljmp
imul
call
cmp
push
stc
mov
jl
outsb
inc
xor
mov
cmp
sub
int
mov
push
dec
addl
sbb
pop
push
jg
ljmp
in
pop
adc
shlb
or
mov
decl
sub
xchg
sub
add
mov
insl
or
sbb
movsb
ja
xchg
jp
jp
inc
popf
xorb
xchg
add
xchg
mov
sub
pushl
scas
xor
std
push
mov
subl
lahf
inc
jae
mov
int
int
fsubrl
lods
call
and
sbb
stc
xchg
nop
repz
fucomi
inc
cmp
clc
mov
xchg
outsl
rclb
pop
inc
sbb
out
incl
cmp
sub
sbb
pop
enter
test
andl
adc
sbb
cmc
popa
and
jg
cmp
mov
and
jns
xchg
xor
jecxz
push
mov
fimull
dec
sub
in
cmpsb
mov
cs
jmp
fiaddl
jp
es
in
mov
sub
jae
call
orl
lret
mov
popa
psubw
lock
sahf
mov
call
std
mov
push
add
or
sbb
mov
daa
xlat
movsb
enter
lcall
cld
enter
sbb
adc
decb
mov
sbb
jmp
mov
xor
loop
and
lds
std
mov
dec
or
pushl
test
ss
cmp
stos
test
test
sti
jo
imul
std
ds
into
or
push
or
call
add
fsubrs
decb
ljmp
fistpll
mov
aaa
cwtl
ljmp
std
orb
cld
call
stos
push
mov
dec
pop
mov
das
lret
mov
mov
fistpll
add
lcall
in
ljmp
sbb
add
mov
cltd
shlb
cmp
mov
ret
pop
sti
jg
xor
stc
xchg
loop
cmp
push
xlat
pop
int
bnd
sub
sbb
mov
mov
decl
mov
adc
lds
adc
cld
xchg
adc
call
fisttps
bound
popf
popa
mov
sbb
fprem1
sbbl
das
mov
cmc
add
pop
cmpsl
xchg
loopne
fildll
stc
or
std
inc
mov
add
xchg
out
inc
jp
add
jg
cwtl
shrl
stos
xor
jl
sbb
add
sahf
pop
rcll
mov
cmp
adc
mov
scas
adc
pop
xor
pop
inc
inc
sbb
mov
xchg
mov
inc
or
and
mov
lea
mov
fwait
clc
ret
jmp
jo
incb
scas
xchg
call
sub
daa
mov
ljmp
sbb
mov
arpl
addr16
stos
enter
and
push
mov
jo
add
cs
fcomip
call
jp
cmpsb
pop
and
mov
insl
cmp
lahf
xor
mov
incl
pop
mov
in
inc
jne
jg
pop
mov
cmp
call
shlb
dec
xchg
bound
nop
jmp
jl
add
lock
jb
mov
or
and
fs
notb
test
dec
into
rcll
ljmp
enter
les
sbb
call
mov
inc
repz
addr16
or
aad
sub
cmp
mov
mov
lcall
call
in
cmp
fcoms
jl
movsb
push
mov
fstps
inc
sub
sbb
sub
fcomip
imul
into
dec
div
mov
dec
xchg
adc
sbb
sbb
mov
mov
pusha
outsl
push
jmp
popa
push
adc
pushl
jmp
out
add
jmp
loopne
cmpsl
lds
hlt
aas
dec
leave
add
inc
pop
fwait
ljmp
adc
jg
xor
adc
arpl
and
out
jle
mov
lcall
mov
out
faddp
mov
pushf
jns
popa
mov
dec
rcr
adc
fwait
mov
jo
cmp
pop
ljmp
mov
int3
and
outsl
call
test
mov
or
fdivrs
dec
out
sub
and
xlat
xchg
stos
add
orb
ljmp
das
dec
imul
rol
aad
scas
ret
or
aam
mov
dec
push
movb
andb
mov
je
mov
adc
cwtl
push
mov
test
jge
loopne
jmp
fdivs
mov
xor
out
pop
scas
sub
nop
mov
lahf
out
shrl
andl
mov
ret
sahf
mov
pop
adc
orb
cli
xchg
push
pop
mov
pop
inc
and
leave
and
sub
dec
cld
pop
mov
cmp
push
lret
xchg
insb
fnsave
aam
fucom
bound
and
pushl
fcmovnb
into
sahf
arpl
outsl
out
in
inc
add
push
jp
ss
push
std
ljmp
dec
mov
and
xchg
mov
push
aaa
shll
fsubrp
jbe
pushl
jmp
ds
fistps
nop
jmp
adc
icebp
mov
mov
push
adc
fstl
mov
cmp
insl
xor
add
pusha
mov
cltd
dec
cmp
or
push
enter
cmc
pop
clc
mov
data16
mov
jle
sbb
sbb
inc
repz
inc
fisttpl
imul
and
inc
dec
dec
js
pusha
jnp
enter
cmp
mov
fldl
jecxz
fcmove
mull
lcall
std
dec
and
sub
xchg
rorl
mov
jae
push
jmp
daa
inc
inc
fcmovnb
or
aam
ljmp
mov
sub
bound
in
mov
lods
push
jb
and
and
cmpb
ja
call
jbe
sub
popf
xlat
into
dec
lahf
sbb
in
pop
in
in
test
inc
loopne
inc
gs
incl
add
ljmp
add
in
gs
bound
mov
loopne
mov
mov
out
int
and
adc
popa
popa
lcall
jmp
decb
adc
add
fs
test
push
pop
out
inc
jle
jecxz
incl
xor
push
rolb
mov
enter
mul
pop
and
dec
jmp
loope
in
mov
pop
sbb
adc
mov
inc
rcrb
decl
cld
clc
lea
pusha
hlt
xchg
jb
lahf
push
ja
xchg
jg
scas
xchg
jmp
dec
sbb
clc
incl
cmp
xchg
xchg
and
push
dec
adc
aam
dec
jne
lea
sahf
ljmp
inc
outsb
inc
pop
out
pop
cmp
ds
sarl
sub
gs
jno
scas
pushl
xchg
xchg
inc
jg
fidivl
aad
gs
fs
and
xchg
sub
xor
and
ret
xchg
sub
jmp
mov
fdivrp
dec
push
add
mul
jo
pop
rcrb
test
mov
jecxz
sti
xchg
mov
fldenv
rcrl
loope
fbld
sub
push
dec
and
dec
inc
push
decl
in
or
mov
adc
repz
push
mov
cwtl
xor
xor
mov
out
rcrl
cmc
pop
imul
dec
and
pop
pop
test
mov
and
dec
dec
mov
hlt
call
test
rorl
test
jb
inc
je
stc
scas
ficoms
adc
test
adc
int
iret
lahf
sarb
incl
in
insb
ror
sub
outsb
nop
movsb
dec
jmp
lcall
sbb
dec
lret
out
iret
les
push
pop
jbe
cli
call
outsb
in
lcall
fcom
icebp
dec
xchg
or
and
dec
popf
xchg
sub
aam
mov
sar
call
iret
sbb
aad
push
push
aam
cs
mov
aad
fs
push
cld
jmp
repnz
and
jmp
jne
sub
jle
sub
mov
cmp
jg
movsb
call
xchg
in
and
jle
pop
mov
imul
push
call
cmp
cltd
xor
clc
cltd
dec
dec
fcomi
cmp
xor
mov
xor
mov
incl
xor
das
out
xor
insb
pop
outsb
outsl
fistps
aad
lcall
xchg
jno
add
rclb
inc
mov
xchg
or
loop
jnp
cmp
cmp
pop
in
imul
rorl
jmp
jmp
pop
insb
dec
roll
ror
jg
xchg
jg
mov
in
lods
xchg
ret
or
in
add
repnz
out
aad
idiv
das
sarb
repz
mov
and
rcrl
popf
and
adc
stos
jl
mov
js
or
fcmovu
sbb
or
mov
popf
lcall
xchg
ljmp
pop
xchg
dec
bound
or
or
imul
decl
cmpsb
jns
and
and
outsb
add
popa
aam
pushf
push
lcall
aam
dec
std
inc
mov
sbb
in
sahf
mov
push
or
mov
into
cmp
clc
sbb
call
loope
inc
leave
roll
mov
mov
imulb
dec
mov
jmp
test
mov
push
lock
mov
orl
ficompl
ljmp
inc
data16
fadd
mov
mov
jnp
ljmp
fs
rolb
lds
subb
dec
xchg
sahf
pop
repnz
cmp
out
add
imul
mov
push
sarl
loopne
jmp
and
sbb
ljmp
lcall
mov
mov
sbb
jb
and
fstpt
test
or
in
mov
mov
or
rcll
cld
loop
sub
xlat
lock
inc
stos
ljmp
dec
jmp
rorb
mov
dec
lcall
sub
dec
imul
imul
mov
adc
mov
inc
or
and
decb
rolb
lcall
cs
repnz
in
addr16
popf
jbe
add
mov
inc
mov
lock
add
jp
mov
loop
cmp
xchg
fwait
sbb
and
data16
fisttps
cmp
fdivl
cmp
cmp
and
xor
mov
iret
sub
idivl
xchg
iret
repz
mov
sub
pop
std
decl
sbb
pop
enter
in
mov
je
dec
aas
sbb
ljmp
shlb
jp
and
xchg
addr16
dec
add
push
inc
mov
test
push
sub
jmp
popa
popf
adc
mov
mov
and
xchg
fiadds
sar
out
pushf
scas
jbe
jo
stc
daa
xchg
push
addr16
fs
mov
std
mov
fildll
push
mov
jle
decl
jmp
mov
out
scas
dec
add
scas
outsl
xchg
lock
push
ret
test
sub
mov
dec
cmpsl
mov
push
callw
jg
push
push
ljmp
pushf
sub
ljmp
movsb
xor
cli
cmp
addr16
push
adc
pushl
rol
je
test
or
mov
pop
sbb
insl
and
push
or
jg
inc
lret
dec
sbb
jl,pt
in
rclb
cltd
outsl
xor
mov
and
arpl
jo
lock
xchg
fsub
in
xor
cmp
push
mov
adc
mov
dec
xchg
pop
or
adc
dec
mov
mov
call
shr
mov
cmc
inc
pop
jmp
call
out
push
inc
mov
adc
jmp
mov
bound
xchg
ds
ret
js
arpl
stos
insb
push
xor
xor
sub
stos
imul
je
pop
pop
ljmp
cli
andl
in
mov
lods
mov
pop
enter
insb
sbb
sti
mov
jecxz
lds
adc
mov
data16
mov
xchg
ljmp
dec
loope
ljmp
test
pop
int
not
cmp
es
mov
jbe
jmp
and
dec
popa
dec
shll
or
std
dec
cmp
push
cmp
sub
in
xchg
stos
sub
xor
jg
pushl
movsl
and
pop
sbb
mov
pop
das
ja
bound
adc
pop
mov
iret
ljmp
push
xchg
ret
mov
or
jmp
fdivrp
dec
ror
dec
fdivl
int3
cwtl
cmp
ret
push
in
adc
mov
js
call
pushl
inc
fisubrs
lods
test
xchg
aaa
mov
fst
xchg
mov
fisubl
mov
push
lock
pushl
jnp
lock
push
inc
add
push
jecxz
mov
ret
decl
xchg
dec
jb
jae
or
in
xchg
fildl
jmp
sub
out
pusha
roll
inc
sub
testb
mov
mov
nop
ficoms
daa
ret
inc
pop
cli
test
push
mov
dec
sbb
and
jb
loop
xor
mov
das
fidivl
iret
stc
jne
shufps
fistl
push
je
daa
int3
mov
decl
push
push
cli
aam
or
std
insl
sub
mov
fs
movsb
jns
sbbb
push
mov
mov
inc
push
xchg
in
adc
in
shrl
repz
sahf
shl
mov
jl
out
cmp
mov
or
jne
mov
xor
xlat
sar
add
adc
hlt
mov
dec
and
inc
mov
dec
in
jns
mov
cmpsb
mov
inc
xchg
sti
lods
fptan
mov
lock
mov
out
and
loopne
mov
nop
jbe
out
fldl
cmp
test
dec
mov
jno
xchg
fidivs
mov
push
mov
jg
iret
or
aas
lock
jne
enter
movsb
cmpsl
pop
adc
mov
xor
leave
or
ret
sub
pop
mov
push
iret
imul
adc
sub
sbb
mov
outsl
mov
lahf
mov
movsl
sub
rorl
sub
scas
sbb
push
pop
imul
clc
pop
mov
push
movsl
push
lret
push
dec
mov
lea
test
das
fsub
jle
ret
incl
push
mov
sub
repz
dec
test
lods
ja
imul
xchg
xchg
sbb
mov
pop
mov
insl
popf
test
lcall
xchg
cmp
cli
add
test
mov
and
stos
aam
outsb
cmp
clc
pushl
lock
mov
cmpsl
push
lret
or
pop
jnp
push
sub
sub
pusha
sbb
and
jb
test
mov
call
push
data16
mov
in
mov
cwtl
fs
dec
mov
xor
lret
sub
inc
cmp
decl
fistpl
imul
enter
add
call
xorl
pushl
cli
aas
cmp
adc
dec
aam
aad
inc
fwait
loop
sbb
add
push
outsb
jp
sub
mov
and
ljmp
out
and
xchg
in
cmp
ficomps
in
ret
dec
jge
into
dec
xor
push
neg
fsub
out
imul
pop
push
lret
gs
mov
mov
sar
xchg
dec
adc
mov
add
incl
pop
mov
jl
xor
stos
clc
in
fisubrs
dec
mov
xorl
mov
call
xchg
pop
pop
xchg
pusha
push
jae
lcall
sub
je
stc
xor
stos
add
clc
jmp
filds
cmpsb
jl
mov
fs
jle
pop
pushf
and
push
mov
andl
sub
rcrl
xchg
nop
inc
incl
jmp
cmp
inc
inc
mov
imul
push
xchg
out
jg
std
inc
cmp
add
addr16
jo
ret
fidivl
ret
mov
mov
dec
out
in
jp
push
repnz
jg
ret
call
jb
jns
pop
les
outsb
pop
xlat
mov
enter
fldt
cmc
jo
out
pop
xchg
mov
push
in
dec
std
inc
pop
cmpsb
inc
mov
adc
inc
xor
jle
push
jl
decl
add
and
lods
test
pop
adc
jae
jp
call
aad
sbb
rcrl
adc
out
jb
popa
lcall
jmp
mov
jl
and
int3
and
or
je
lds
loop
decl
shll
xlat
imul
cmp
mov
fs
das
mov
or
out
inc
decl
xor
fmul
add
mov
lea
and
mov
add
cmpsl
cmp
lcall
xor
repnz
dec
mov
xchg
data16
pop
add
cmp
ljmp
xchg
imul
cmp
rclb
les
sub
mov
ljmp
in
push
rcrl
sub
or
stc
and
test
cmpsb
dec
fcomip
mov
iret
jmp
daa
add
dec
lret
stos
mov
add
dec
aaa
cmpsb
testb
xor
xchg
ss
cmp
jne
lock
mov
mov
xor
jo
outsl
inc
jno
mov
lret
or
lret
adc
fadds
enter
outsl
mov
scas
sbb
dec
cmp
pushl
pusha
mov
pop
imul
out
mov
jbe
subb
stc
jmp
es
pop
roll
adc
adc
add
sahf
stos
mov
sbb
lcall
xor
pusha
xchg
insb
pop
or
stos
je
loopne
mov
pushl
out
scas
out
add
test
jbe
inc
adc
faddl
shlb
flds
inc
cmpsl
sahf
adc
fdivs
dec
test
fs
ja
sub
test
int3
insb
add
jnp
sbb
leave
int3
outsl
hlt
je
cmp
sbb
out
je
cmc
shrl
mov
add
mov
scas
dec
lock
lret
in
ljmp
mov
insl
cwtl
icebp
in
inc
cmpsl
fstl
push
inc
lahf
mov
lea
lret
pop
shrl
ljmp
xor
and
pusha
mov
push
jmp
lock
lcall
cmp
sub
int3
sbb
pushf
add
std
sub
dec
cmpl
cld
call
and
es
enter
sub
fnstcw
insl
push
pop
mov
std
xchg
iret
and
sti
jp
lods
xchg
rol
dec
lret
xchg
stc
mov
outsl
nop
pop
hlt
loopne
xor
adc
int
cmp
mov
and
jmp
lret
cmp
mov
arpl
jmp
andb
add
pop
loope
mov
ljmp
sbb
fstpt
xchg
push
push
in
out
scas
cmp
push
jmp
gs
dec
push
xchg
rorb
movsb
rcr
jo
pop
cmp
mov
inc
paddd
ljmp
stc
sbb
int3
cmp
xchg
out
and
cmp
jmpw
add
pop
dec
mov
repnz
xor
xchg
mov
scas
neg
mov
pop
mov
jmp
je
adc
or
daa
imul
pop
dec
push
mov
mov
decl
jle
call
gs
sbb
push
push
mov
outsb
idiv
mov
and
xchg
in
jg
movsb
xchg
and
mov
repnz
and
clc
lcall
fldl2e
lret
in
dec
test
movsb
sbb
xor
inc
lods
ret
jns
lahf
hlt
add
xchg
cmp
ljmp
push
repz
push
cmp
inc
out
pop
xor
rclb
jmp
loop
aas
mov
cmpsl
sub
lock
dec
inc
dec
push
pop
inc
cmc
stc
sbb
ljmp
jne
ds
stos
rolb
cwtl
cmp
mov
and
jmp
stc
les
mov
decl
and
and
sbb
jg
mov
repz
jae
pop
in
lds
cs
xchg
cli
aaa
cmp
mov
ja
aad
ljmp
mov
out
push
add
mov
testl
fidivl
decl
push
cmp
dec
cmpsl
adc
add
sahf
pop
sarl
mov
mov
jae
jg
and
lods
cmpsb
ja
pop
push
insb
ljmp
js
xchg
rcrb
out
incl
xchg
jne
in
xchg
add
pop
out
shrb
imul
mov
test
decl
cmp
das
aas
cmpl
pushf
lods
ljmp
out
ret
mov
lods
cld
add
loopne
mov
ret
push
cld
pop
push
out
fisttpll
test
xchg
push
add
cmp
push
mov
inc
ret
xor
jmp
nop
jb
push
leave
adc
lret
pusha
jle
ljmp
cli
sub
repz
dec
daa
iret
xchg
imul
test
lea
out
lock
mov
icebp
or
je
cmp
ret
cmpsl
push
fisubl
mov
xor
push
inc
fsubl
mov
fisttpl
cmpsb
mov
out
scas
or
ljmp
dec
xor
pop
inc
aaa
or
jle
dec
ljmp
or
jb
mov
cmc
fsubrs
sbb
push
out
lret
push
fwait
mov
or
imul
dec
sub
aam
rcrb
inc
and
xor
call
pop
pushf
push
xchg
repnz
lock
push
add
repz
lcall
subl
and
mov
dec
fdivrl
or
decl
sbb
fs
in
lds
pop
cs
inc
daa
xlat
xchg
js
xchg
ja
lods
js
jmp
mov
mov
xchg
leave
movsl
adc
lcall
xor
mov
push
test
adc
adc
xor
add
or
mov
xchg
call
aad
pop
das
ret
ja
in
nop
loopne
push
jle
cmc
pushl
cli
add
jae
mov
js
adc
mov
xchg
jnp
mov
mov
movsl
pop
ss
sub
ficompl
adc
lcall
add
scas
add
cld
push
push
cmp
pop
loop
mov
or
xor
mov
jmp
push
add
sub
jb
lahf
adcl
scas
iret
or
lcall
ret
add
les
sbb
pop
adc
out
int
pushf
sbb
sub
outsb
cmp
xor
jmp
jmp
lcall
jge
cs
jl
gs
jae
mov
cmp
jg
inc
jno
jg
cmpsb
add
movsb
ret
add
mov
mov
addr16
sub
inc
add
mov
hlt
dec
sub
dec
jne
out
inc
sbbb
mov
pushf
decl
push
clc
lret
rorb
mov
cmc
jmp
mov
fwait
inc
sub
fucomp
ret
jne
out
mov
mov
adc
mov
add
decl
movb
pushf
imul
push
xchg
adc
stos
mov
cmpsb
inc
push
pusha
and
cmp
test
pop
sbb
sbbb
aas
push
call
mov
push
push
test
les
mov
mov
fistps
loopne
ljmp
ljmp
push
aam
andb
cltd
mov
scas
imul
rorl
ficomps
out
adc
decb
inc
inc
push
fsubs
lahf
mov
push
mov
shrl
mov
out
aas
in
test
pushl
mov
test
jg
cltd
stos
mov
test
inc
out
fwait
popf
push
sub
adc
and
cmpsb
push
mov
ret
fwait
mov
mov
sar
incl
dec
jae
inc
fwait
jle
fxsave
sub
std
incl
je
xchg
repz
pop
adc
push
ficomps
cmp
mov
leave
jbe
cld
or
push
in
mov
cmp
pushl
clc
fdivl
pusha
dec
hlt
leave
icebp
fwait
inc
jb
push
bound
jg
xchg
push
dec
add
jmp
jmp
mov
fists
test
sbb
popf
outsb
flds
add
pop
jge
and
add
jbe
sub
mov
idivl
jg
mov
ljmp
ss
dec
out
mov
inc
lret
stc
push
or
and
sbb
xor
gs
inc
pop
cld
filds
pop
setno
call
cmp
scas
push
arpl
push
mov
sbb
stc
stos
int
scas
pop
les
pop
push
gs
decl
jbe
inc
mov
sbb
out
imul
push
mov
inc
insb
mov
jne
jg
test
testl
arpl
lcall
jb
lcall
add
or
adc
mov
sub
lcall
es
sbb
cmp
call
ja
stc
push
sbb
add
sbb
fdivp
xchg
or
lcall
leave
insl
xchg
int
and
cwtl
adc
ja
test
cld
xchg
pusha
xor
xor
std
mov
fdivl
xor
aas
aam
inc
push
fs
mov
shlb
daa
lahf
mov
mov
scas
jmp
repnz
dec
push
add
jg
bound
xorl
mov
push
sbb
xchg
push
push
lds
loop
add
and
inc
xor
je
mov
imul
fsubrl
into
or
scas
mov
jnp
lcall
cmp
out
insb
out
testl
fdiv
imulb
repnz
mov
inc
lret
ja
jmp
add
cmp
cmp
sub
mov
mov
dec
pop
push
jb
out
leave
mov
add
in
jmp
xchg
subb
cmp
pushl
jno
xor
gs
or
daa
dec
inc
sbb
sub
dec
loopne
pop
mov
sbb
push
dec
and
mov
adc
lock
decl
or
lret
jl
mov
jae
cmp
sbb
decl
ss
xchg
imul
dec
out
lods
imul
roll
mov
outsb
rolb
sub
lahf
mov
loopne
fwait
imul
or
pushl
movsb
or
lret
jne
arpl
ds
fwait
in
mov
out
push
in
cmp
push
push
mov
pushl
jnp
mov
push
into
mov
outsb
sub
ret
jns
pop
enter
cwtl
popf
leave
push
mov
cmc
out
int3
push
mov
ret
sahf
aas
insl
push
xor
mov
xchg
jno
int3
sti
jmp
mov
test
outsl
jno
das
dec
xchg
out
int3
cmp
mov
fisttps
pop
adc
mov
sarl
loopne
clc
pop
jbe
inc
add
mov
outsb
es
mov
cmpsb
test
cmp
pop
jmp
jmp
mov
test
jp
jae
lea
ret
nop
js
je
mov
pop
push
ljmp
sbb
scas
cli
jecxz
hlt
adc
ret
add
push
int3
orb
jmp
pop
aad
orl
inc
psrlw
lea
out
ljmp
test
pushl
mov
lds
lret
xchg
or
sub
cmc
sub
loope
pop
loopne
mov
xor
test
mov
cli
mov
mov
jp
stos
and
xchg
dec
adc
cs
test
cld
out
adc
jbe
nop
scas
mov
sub
sub
jle
imul
leave
add
push
jmp
and
inc
cmp
mull
hlt
cltd
pop
loop
cmp
dec
dec
or
mov
repnz
inc
dec
or
xor
ljmp
ss
jne
push
pop
ljmp
mov
adc
data16
and
call
lcall
aam
scas
jno
daa
dec
out
outsb
pop
incb
fadd
hlt
xor
cmp
mov
jl
inc
bound
xor
jo
loop
lods
mov
lahf
inc
aas
xchg
movl
in
pop
mov
mov
and
repnz
call
inc
scas
add
mov
mov
bound
pop
lahf
out
push
mov
inc
repz
xor
xchg
mov
andl
push
inc
test
scas
fsubs
and
adc
fbld
decl
nop
pop
insb
jle
or
lahf
call
decl
and
scas
insl
stos
pop
sub
push
inc
out
movsl
call
jmp
stos
out
sbb
sub
in
icebp
lcall
iret
fnsave
push
clc
ljmp
jae
out
jecxz
adc
rclb
decl
xchg
jo
loop
cmp
mov
cmp
dec
das
pop
sub
and
incl
orl
xchg
jo
jl
mov
repz
xchg
int
ds
pusha
xor
cwtl
cmpsb
ljmp
outsl
pop
in
mov
stc
adc
mov
sub
aaa
sbb
aad
ljmp
mov
inc
and
or
fists
cld
clc
mov
or
dec
sub
jg
imul
dec
hlt
in
xor
cmp
xchg
adc
adc
sar
lcall
mov
mov
fsub
and
addr16
mov
into
daa
stos
icebp
jmp
shll
scas
xchg
in
jne
sub
mov
aas
sub
mov
fbstp
push
aam
enter
adc
cmp
jae
mov
or
push
push
fcos
sub
call
pop
jb
push
and
imul
fucom
pop
sub
ljmp
hlt
or
cmp
rclb
lds
ljmp
insb
or
jo
push
jmp
lods
pushf
xor
jo
xchg
das
lods
jae
xchg
sub
add
dec
jmp
lods
ret
int3
repnz
ss
cmp
mov
mov
test
dec
mov
shrb
push
and
jbe
pushl
adc
test
add
cli
push
mov
jno
clc
push
in
lea
push
pushl
jg
pop
or
inc
add
xor
jp
iret
adc
dec
adcb
push
adc
imul
lcall
lods
rclb
jno
call
xchg
mov
sub
xchg
lods
or
decl
insb
repnz
push
mov
ficoml
pop
push
adc
ljmp
or
adc
notb
inc
dec
cli
mov
in
decl
popa
int
int
or
roll
sti
add
adc
mov
stc
lret
ljmp
in
out
decl
les
cmpsb
pushf
mov
xchg
leave
jo
mov
mov
dec
or
insb
push
xlat
lcall
jp
into
jo
bound
lcall
mov
sub
push
add
xchg
nop
mov
mov
cmp
bound
sar
pushl
mov
sbb
sub
jl
mov
sbb
arpl
xchg
sbb
fisttpl
pop
pushf
jo
jecxz
or
xchg
pop
mov
xchg
movsl
and
icebp
cmpsb
and
movb
jnp
adc
xor
xchg
hlt
dec
iret
leave
aad
xor
sahf
fld
ja
jl
repz
lcall
jne
mov
or
in
xor
xor
jns
ds
pop
sar
push
cmp
and
sbb
lcall
xchg
outsb
shll
ds
push
daa
test
mov
imul
pop
jg
leave
or
or
inc
outsb
lock
out
insl
sahf
test
es
int
jmp
fldcw
leave
mov
adc
mov
adc
popf
testl
shld
lret
idiv
inc
jnp
and
pop
sbb
pop
rcrl
imul
mov
dec
popf
cld
cmp
dec
les
iret
mov
fdivl
cltd
xchg
shrl
outsl
std
leave
in
cmp
cmpsl
in
inc
mov
cli
decl
sub
mov
std
push
js
pop
movsl
sbb
push
mov
push
push
ljmp
clc
or
inc
pop
mov
ljmp
rcr
lret
push
repz
push
mov
sbb
xchg
ffreep
pusha
dec
push
imul
rcll
adc
pop
and
push
sbb
sub
cmc
fbld
cmp
sbb
incl
xchg
or
jb
les
xorl
dec
imul
cs
lahf
push
pop
test
mov
incl
cs
cmp
test
sub
mov
insb
sbb
jg
mov
and
push
mov
movsl
lret
pop
sbb
or
inc
lahf
lcall
arpl
dec
push
dec
iret
push
mov
dec
cmp
lcall
rorb
or
andl
adc
sarb
pop
add
rclb
jne
push
dec
ljmp
mov
cmpsb
lret
push
add
aas
mov
sub
arpl
pop
orl
sbb
lds
scas
popf
mov
add
sub
xor
xchg
sbb
push
inc
and
add
sar
jbe
ret
ficoms
test
add
mov
mov
sub
xchg
mov
ja
in
out
sahf
int
jl
lcall
dec
in
enter
push
mov
jg
in
fwait
arpl
pushl
add
call
push
popf
pop
or
mov
andl
xchg
ss
jmp
xchg
call
mov
loop
adc
inc
icebp
stos
in
mov
push
push
rcl
aam
in
leave
jg
jg
into
add
jbe
filds
sub
add
outsb
mov
movsb
repnz
arpl
pop
add
incl
lcall
pop
mov
xchg
ljmp
pop
sarb
aaa
cld
decl
gs
pop
cli
xchg
gs
xchg
sub
aad
outsb
pop
pop
xchg
jle
mov
incl
outsl
mov
arpl
cmp
mov
cmc
fnstsw
repz
mov
or
pop
fstpl
es
sbb
cs
decl
aam
into
sbb
sti
xorb
jle
mov
adc
cmp
sbb
in
xchg
mov
xor
xchg
dec
out
push
mov
mov
jb
clc
cmp
push
call
arpl
imul
lods
dec
sub
shrb
incl
jmp
aad
fstps
push
sub
test
xlat
cmpsl
jecxz
test
call
and
add
xlat
pop
sub
push
jbe
mov
ljmp
or
inc
sbb
dec
scas
shll
mov
das
adc
call
inc
xor
es
fnstsw
xchg
inc
repz
add
mov
lods
ljmp
mov
into
lods
pushf
pop
les
in
mov
leave
in
add
incl
jo
inc
int
rdtsc
scas
adc
fwait
and
dec
and
mov
adc
js,pt
xlat
aaa
cld
jp
add
sub
xor
loopne
test
jo
enter
fmulp
pop
pop
mov
xchg
push
or
dec
or
jbe
inc
jp
push
pushl
jbe
adc
add
push
cmp
or
sahf
xchg
mov
xchg
out
fwait
popf
inc
test
lahf
fildl
or
stos
adc
cmp
pop
nop
dec
sbb
call
subl
outsl
dec
inc
or
sub
call
insb
dec
test
mov
inc
sar
fnsetpm(287
cwtl
cli
inc
popl
mov
lahf
cmp
leave
das
add
pushl
mov
and
addb
lods
add
cwtl
movsb
testb
ja
or
ss
and
iret
iret
lret
add
adc
add
and
mov
dec
jb
jns
sbb
and
jmp
dec
xchg
pcmpgtw
xchg
or
xor
repz
mov
cli
aaa
xlat
out
je
lcall
or
stc
mov
scas
out
popa
test
pusha
xchg
movsl
xchg
xchg
cmp
incl
data16
dec
leave
cld
cmp
mov
pop
in
bound
dec
push
iret
inc
add
ficompl
dec
movsb
movsb
stos
mov
add
out
xchg
outsl
jecxz
sub
xchg
cmp
jmp
xchg
add
loopne
icebp
jns
push
inc
dec
and
mov
stos
and
mov
lcall
sbb
cmpsl
mov
pop
cld
ret
out
flds
pop
ss
in
cmp
xchg
rcrb
lock
lcall
mov
int
fdivs
adc
mov
adc
out
es
jp
add
loop
xchg
xor
fsub
or
and
mov
cmpsl
push
outsl
add
nop
cld
sbbl
test
lret
xchg
mov
nop
jo
out
push
cmc
stos
in
lcall
xchg
cmp
je
pop
and
outsl
mov
jns
mov
pop
xor
clc
mov
sub
dec
ss
adc
add
xor
cwtl
out
ljmp
push
cmp
jnp
in
loop
bound
xor
jo
mov
mov
lods
pop
loope
call
popf
mov
mov
xchg
dec
xchg
jns
test
mov
and
cs
pushl
and
xchg
xor
cmp
shrl
incl
pop
mov
push
lahf
lods
and
push
jae
adc
pop
push
lock
in
es
outsb
jg
pushl
push
cmpsl
jae
cmp
js
xchg
sub
bound
outsl
or
andb
mov
mov
scas
cltd
and
leave
sub
jb
inc
incl
xchg
jnp
jge
push
mov
cmpsb
out
in
sbb
movlps
push
popf
aas
leave
jae
jg
cwtl
dec
push
mov
xor
sbb
arpl
adc
mov
lcall
cmp
pop
ja
xchg
and
jge
mov
call
shrb
cmp
add
add
inc
imul
pop
sti
movsb
lcall
jmp
loop
sbb
dec
adc
jle
xchg
cmpsb
arpl
cltd
psrlw
pop
sbb
loope
outsb
fcmovnu
xchg
lds
mov
ljmp
les
lods
ret
imul
stos
sbb
out
xlat
in
push
scas
dec
lock
mov
jmp
adc
movsb
xchg
iret
nop
divl
mov
in
mov
xchg
mov
movsl
push
jle
sub
dec
xor
incl
lret
aas
pop
inc
into
cmp
mov
jmp
leave
xchg
popf
jecxz
sub
addb
lret
fmuls
xchg
jbe
rol
std
ljmp
push
mov
or
jg
fisubrs
or
jl
out
loope
jge
std
pop
jg
jae
xor
lret
push
xor
sbb
sub
sub
jmp
add
stc
cmp
cmp
adc
xor
push
enter
fmul
sti
lods
imul
pop
pop
push
shll
mov
mov
jbe
mov
sarb
mov
jno
pop
add
lcall
jg
call
sbb
aam
push
cmp
cld
test
sbb
jecxz
push
mov
cmp
mov
mov
sub
xchg
stos
pop
into
shlb
aad
jae
cs
incl
push
out
push
mov
or
xchg
rcrl
lahf
out
negl
movsl
mov
jl
movsl
ljmp
push
nop
dec
and
xchg
fcoml
lods
push
jno
sub
or
in
std
pushl
jmp
adcl
cmpsl
jmp
inc
mov
je
loop
scas
jl
mov
incl
pop
xchg
ljmp
dec
xchg
mov
xchg
pop
aad
adc
dec
cmp
pop
adcb
jle
dec
add
push
sahf
das
cmp
sbb
pushl
pop
xchg
jecxz
mov
movsl
orb
ror
mov
jmp
out
lcall
pop
int3
mov
push
or
jns
mov
adc
jl
jns
inc
push
or
in
mov
mov
jp
xlat
mov
mov
sbb
adc
dec
rclb
lods
sbb
daa
movsl
orl
jmp
lcall
jp
and
out
mov
push
andb
cmpsb
adc
pusha
aaa
dec
push
pushf
mov
das
sarb
leave
mov
ljmp
push
loope
xorl
cs
cmp
push
mov
lcall
ret
mov
rcrb
repnz
in
adc
lcall
sbb
cmp
dec
decl
adc
into
xchg
and
int
sbb
add
lock
call
neg
jg
mov
aas
lret
cmc
xchg
push
jmp
adc
and
pop
push
cmp
movsl
data16
leave
cmpl
push
sbb
mov
dec
insb
mov
cwtl
lret
call
movsl
dec
mov
jle
cmp
stc
push
fidivrs
cli
xchg
test
add
inc
xchg
sbb
adc
sub
decl
cmp
subb
jo
mov
inc
shrb
jmp
in
xorb
inc
cmpsb
pushl
push
insl
pop
andl
icebp
sbb
xlat
and
gs
xor
stos
ljmp
decl
jnp
sti
nop
sbb
scas
aad
imul
xchg
jl
dec
dec
mov
jle
sub
pushl
push
cmp
jge
push
test
mov
mov
mov
popa
push
movsb
fstpl
and
pop
xchg
push
mov
jmp
incl
fisttps
add
cmp
mov
jno
cmpsb
mov
or
inc
test
pop
inc
stos
or
inc
shr
and
xor
popf
xchg
push
stos
in
loope
cld
dec
imul
push
nop
jns
scas
push
push
xlat
inc
pop
roll
test
aaa
jbe
lcall
inc
pop
push
imul
inc
lock
sbb
mov
and
rcll
mov
push
sbb
ds
das
rcrl
push
cmpsl
das
cwtl
mov
pusha
or
ss
and
mov
pushl
rolb
lahf
imul
jns
in
out
insb
xchg
push
add
adc
call
push
ds
ljmp
mov
push
and
xor
stos
jbe
cld
push
test
icebp
or
inc
out
iret
jl
jb
ljmp
cli
fs
je
decl
jl
pusha
add
int
es
call
movsb
mov
push
test
add
leave
inc
fadd
dec
bound
cmp
stos
mov
push
inc
pop
xlat
cmpsb
in
xor
mov
ljmp
enter
das
test
cmp
les
mov
ljmp
sahf
shlb
loope
je
dec
dec
dec
jge
ljmp
enter
in
and
jns
cmpsl
in
or
sub
mov
cmpsl
mov
jae
adc
daa
loope
enter
fmuls
pushl
dec
jnp
add
sub
push
cld
sbb
dec
mov
stos
xchg
and
mov
andl
adc
mov
pop
mov
cmpsb
mov
sbb
loopne
mov
dec
or
mov
es
lds
arpl
outsb
and
dec
ljmp
sarb
push
pop
jg,pt
ret
jecxz
rcr
cmpsl
pop
int
lea
incl
frstor
push
ret
adc
sub
cmp
gs
test
adc
decl
bound
add
sbb
mov
fdivr
sti
xchg
fcoml
outsl
daa
jae
pusha
adc
lcall
int3
mov
cmp
sub
add
sbb
lcall
sub
push
jo
outsb
fwait
dec
decl
lods
or
mov
adc
popf
inc
inc
mov
ret
icebp
loopne
movsl
rclb
hlt
aaa
cld
jae
xchg
push
pop
hlt
es
jo
pop
push
sub
sti
fcompl
shrb
push
fcom
lds
push
shr
jno
xorb
sub
pop
pop
mov
add
sub
call
sbb
frstor
and
and
jnp
or
xchg
cmpl
outsl
and
insb
inc
inc
mov
sub
fidivs
mov
cmp
repz
bound
repz
lods
jbe
lret
lods
xor
call
jmp
dec
divl
andl
xchg
inc
movsl
pop
fcomps
and
cmp
cs
repz
mov
call
xor
lea
xor
mov
mov
loopne
data16
xchg
popa
fdivrl
inc
sub
mov
push
jecxz
xchg
cwtl
cmp
ljmp
decl
rcl
mov
add
inc
pop
mov
call
adc
iret
sbb
jo
jb
cmp
dec
jns
test
pop
mov
jg
or
pop
sub
call
jnp
adc
cld
or
add
pop
fsubr
adc
mov
inc
sbb
xor
fisubrl
in
pop
aaa
adc
or
mov
scas
cli
fimuls
adc
pop
jb
push
cwtl
inc
js
push
gs
inc
dec
mov
mov
lcall
inc
push
aad
nop
imul
push
and
xlat
and
adc
pop
pop
pop
ja
incl
pop
dec
bound
rclb
stc
fcmovu
sahf
mov
xchg
enter
push
je
or
dec
insb
add
lahf
lock
fisttps
xchg
push
outsb
push
hlt
je
lods
mov
dec
loop
popa
mov
nop
and
movsl
mov
clc
fcomip
ljmp
mov
jmp
loopne
lret
addr16
adc
sahf
mov
aas
incl
mov
ret
js
in
jns
push
sub
fnsave
inc
lock
mov
jmp
push
jge
sahf
lret
out
pusha
std
push
lcall
js
adc
mov
mov
movsb
jns
sub
insl
add
mov
xchg
dec
jecxz
inc
mov
invd
mov
cmc
arpl
pop
gs
das
clc
cmp
shrb
xchg
gs
lock
movsb
mov
adc
rclb
push
fiaddl
mov
cmp
arpl
daa
int
or
mov
call
inc
mov
loope
jnp
fdivp
pop
ret
sar
push
jg
cmp
sbb
cld
jae
xchg
ficoms
ss
lret
pop
inc
outsl
jmp
cmp
sbb
out
jmp
cwtl
std
inc
cmpsl
test
mov
loop
cmpsb
imull
xchg
nop
outsl
mov
push
outsl
jmp
insb
push
les
aad
in
in
jnp
adc
iret
lock
dec
xchg
mov
dec
cmp
test
sub
jo
dec
gs
rorb
rcrb
inc
pop
cmc
out
lods
cmp
cmp
or
dec
lods
pop
xorb
jnp
xchg
xchg
and
sbb
xorl
in
jl
mov
xor
adc
popa
out
rcrb
movsb
pop
dec
jmp
testl
loop
pop
mov
xchg
add
adc
or
mov
sahf
jmp
pushl
lock
jg
jmp
xlat
add
mov
mov
enter
mov
test
or
adc
inc
mov
xor
mov
call
jmp
sub
lea
ret
push
push
cmp
addr16
fcomip
jmp
arpl
cmp
sub
xchg
addl
dec
mov
clc
ljmp
sbb
daa
mov
movsb
adc
fimull
loop
imulb
aaa
mov
ja
ss
add
jnp
movsb
mov
add
sub
jg
rcll
mov
and
mov
cld
addl
lea
mov
cld
jmp
jno
enter
dec
jg
push
sbb
shll
idiv
jmp
fbstp
aad
inc
fisubs
lods
adc
dec
imul
cmp
scas
xchg
sahf
inc
hlt
scas
jp
fwait
mov
cwtl
push
mov
test
inc
sub
push
orl
call
push
ror
xchg
push
arpl
lods
sti
pop
pop
cli
mov
call
cmc
jmp
lcall
mov
stos
daa
mov
in
sti
stc
cmp
jbe
ljmp
dec
mov
mov
pusha
dec
orb
sub
filds
mov
imul
clc
jmp
fstpt
pushl
cwtl
nop
cmpsb
das
sub
loop
in
sbb
add
xor
or
inc
scas
call
sub
push
mov
jne
mov
sbb
jmp
lea
mov
sbb
int3
pushf
xor
pop
push
loopne
out
hlt
inc
cwtl
jae
hlt
in
shlb
add
aaa
sti
push
out
inc
sbb
loopne
sub
js
mov
lock
ljmp
out
daa
test
inc
nop
negb
jo
cmpsb
push
clc
arpl
mov
jle
cmp
ljmp
decb
pop
movsl
pop
test
imul
adc
test
pushl
incl
shlb
lds
loop
inc
or
imulb
call
xchg
icebp
out
popa
or
negb
flds
add
mov
ljmp
or
lahf
pop
pop
rol
cs
mov
into
pushf
sbb
mov
stos
ret
push
mov
mov
xchg
leave
mov
rcrb
shl
std
and
or
sbb
addb
push
mov
xchg
cli
hlt
push
sbb
mov
pushl
mov
gs
inc
mov
add
repnz
push
dec
push
fbld
incl
jnp
or
jns
hlt
mov
lods
jo
hlt
jmp
jge
dec
dec
jl
pop
int
std
pop
mov
or
in
popa
aas
pop
call
out
push
xchg
cli
fldt
lcall
shrl
sub
push
icebp
in
xor
pushl
mov
mov
iret
mov
dec
mov
cmpsb
gs
dec
and
call
call
fwait
sbb
mov
iret
add
aam
jb
and
scas
ret
pushl
lahf
sahf
js
push
in
cmp
cmp
push
dec
lahf
adc
pusha
scas
inc
pop
xchg
xchg
cmc
pushl
rcrb
mov
mov
lahf
lcall
mov
int
jo
int
gs
sbb
shrl
ret
test
jne
xor
fcomip
or
and
call
stos
pop
adc
adc
jns
lcall
ds
aas
pop
mov
ret
ja
aas
jae
cmpl
aad
lret
cmp
mov
add
lcall
push
pop
test
sbb
mov
sarb
inc
push
imul
aam
dec
pop
cmp
test
and
pusha
int
fs
xlat
stos
enter
mov
dec
jo
incl
inc
add
sub
sub
adc
std
pop
imul
inc
push
into
xor
clc
aam
xchg
xchg
dec
out
daa
add
pop
mov
sub
cld
cmc
fcomip
jmp
cmp
mov
in
call
sub
inc
xchg
mov
jg
sub
ds
mov
js
and
out
add
aas
and
push
mov
insb
inc
adc
mov
repnz
divb
mov
inc
call
adc
lret
arpl
cmpsb
mov
ljmp
or
cltd
in
test
call
push
test
enter
movsb
stos
test
lahf
pop
inc
mov
incl
cmp
loope
lods
data16
lret
dec
in
jbe
xchg
iret
ficompl
lcall
mov
cmc
inc
loop
stos
cwtl
and
mov
jo
sbb
xchg
call
push
subb
xchg
jns
gs
stos
fidivrl
xchg
cmp
add
sahf
es
ljmp
jb,pt
pop
in
add
cmp
jns
sahf
pop
mov
loop
jp
pop
cmp
sbb
js
add
cld
fwait
pop
sbb
pop
mov
ljmp
fmul
lret
cmp
xchg
ja
decl
or
test
xchg
cmp
lods
jmp
out
cli
sub
pushf
mov
or
push
push
jl
rcll
out
or
mov
shrl
dec
ret
loope
daa
stos
push
pop
lea
adc
gs
pop
add
decl
sbb
lret
es
cs
xor
int3
pop
xchg
fcomip
ja
aad
inc
push
add
add
cmp
ret
decl
or
clc
pop
into
inc
roll
enter
jge
sbb
jns
call
jnp
sti
aaa
sbb
sbb
dec
jp
add
push
push
out
xor
xor
xchg
lcall
imul
repnz
or
fs
imul
inc
cwtl
lock
imul
push
sahf
or
incl
nop
adc
fwait
inc
or
lds
or
adc
addr16
hlt
push
loop
ljmp
jmp
push
xor
pushl
lods
flds
or
dec
lret
imul
sti
call
subl
int3
lahf
mov
cmp
jo
leave
push
rcll
dec
inc
lods
cmp
sub
mov
call
shlb
add
loope
adc
repnz
mov
sub
mov
mov
and
rclb
sub
jae
xchg
pop
mov
push
mov
push
xchg
in
cmp
jmp
loope
xchg
mov
mov
leave
jge
movsb
jmp
ljmp
loopne
and
mov
fwait
inc
std
pop
icebp
fadds
pusha
adc
push
and
lods
inc
xchg
ja
pushl
xchg
js
aam
addr16
push
es
scas
xor
mov
sub
decl
xor
shl
push
xchg
mov
inc
mov
xor
cmp
jg
jg
imul
data16
in
enter
and
pop
dec
je
push
incl
mov
sti
mov
or
ret
fmuls
adc
cmpsb
add
decb
sbb
loopne
ljmp
scas
gs
sar
pop
and
lods
jecxz
data16
mov
test
mov
xor
shlb
lcall
mov
fmuls
add
or
test
cmp
insb
lock
jmp
ljmp
sub
mov
sub
les
mov
sub
clc
pop
call
mov
mov
mov
mov
adc
test
lds
fwait
lcall
cmp
jp
das
mov
ljmp
xor
add
mov
dec
jae
cmc
xchg
dec
xchg
in
and
xchg
movsb
sbb
stos
mov
fidivs
sbb
decl
add
xchg
pop
sub
push
cs
mov
outsl
jle
icebp
or
clc
pushl
mov
ja
movsl
pop
push
addr16
iret
pop
jno
pop
pusha
push
sub
jmp
jb
fisttps
inc
sub
and
lcall
xor
cmp
adc
mov
loopne
ljmp
aas
fmull
push
mov
push
jmp
imul
inc
mov
dec
mov
fwait
mov
adc
mov
inc
ret
jns
movsl
aad
fdivr
xchg
mov
sar
int3
pushf
ja
fdiv
push
js
outsb
add
jecxz
inc
imul
cmp
into
push
adc
scas
sub
lods
int3
orb
ljmp
sti
sbb
outsb
inc
fiadds
mov
mov
mov
mov
add
leave
sub
stos
in
ljmp
push
rcrb
jno
push
cmp
out
out
and
jns
inc
push
cmp
mov
aaa
andb
pusha
movsb
hlt
pop
nop
rcrb
sbb
dec
stc
leavew
je
je
cmp
dec
dec
or
inc
pop
add
push
add
roll
in
ljmp
push
lods
cmpsb
sbb
jb
int
push
roll
mov
mov
ljmp
enter
and
add
sbb
dec
pop
xchg
cs
push
sbb
incl
adc
mov
or
imul
aas
sbb
pop
insb
cvtpi2ps
jmp
push
or
jle,pn
ljmp
xor
ret
pusha
leave
push
mov
pushl
cld
dec
push
insl
dec
movsl
stos
cmp
cmp
inc
int3
rclb
shlb
clc
xchg
push
aam
fldl
jns
inc
loope
fwait
adc
sbb
fdivrs
jecxz
popf
xchg
or
aas
push
and
dec
push
mov
mov
aad
ret
nop/reserved
mov
jle
and
jno
ds
sbb
rclb
rol
pushl
xor
cwtl
icebp
aad
dec
stc
push
inc
arpl
outsb
push
cmpsl
in
popa
loop
and
push
out
std
scas
addb
pop
fildll
cmp
pop
sbb
adc
sbb
scas
push
je
or
lcall
cmc
scas
xchg
xchg
adc
xchg
sub
mov
test
pushf
lods
shl
imul
mov
add
call
std
add
add
xor
test
repnz
mov
out
xor
ret
push
dec
mov
lock
mov
sbb
jne
imul
inc
push
lcall
ds
xor
cltd
xchg
xchg
sahf
mov
and
cmp
inc
fnstsw
add
out
pop
adc
mov
jae
test
cmpsb
sbb
pushl
mov
push
add
out
sar
jb
jecxz
xchg
inc
add
xor
incl
in
mov
int
sub
xlat
dec
fisubrs
adc
jle
mov
jmp
movsl
inc
out
int
sbb
push
xorl
lcall
fidivs
sbb
in
sbb
or
or
pop
loopne
repz
je
xor
incl
inc
mov
stos
testl
dec
or
pop
fldt
and
cld
ljmp
mov
cmp
imul
jns
jle
mov
adc
pop
insb
push
sahf
add
mov
jno
adc
mov
out
or
jnp
addr16
jb
push
sarl
stos
jmp
jo
mov
outsb
repnz
xor
add
sti
test
mov
mov
stos
mov
imul
cwtl
dec
jmp
lods
add
out
cmp
mov
cmpsb
repnz
lods
das
into
mov
punpcklwd
scas
adc
pushl
loopne
pop
pushf
push
xorb
xor
movsb
ret
rclb
pop
scas
in
stos
std
imul
add
pushl
xchg
inc
in
sub
xchg
mov
add
jbe
out
incl
dec
cmp
fimull
xor
mov
xchg
push
shrl
subl
leave
lods
pop
add
push
in
inc
add
call
ret
lcall
lock
sti
sarb
sub
fcomip
ljmp
fcoms
daa
adc
imul
data16
lret
jmp
shll
inc
int3
inc
adc
repnz
jmp
rcrl
dec
repz
pop
pop
jg
lcall
adc
in
mov
xlat
sub
pushf
out
stos
push
imul
jecxz
rorb
std
scas
int
fdivrp
mov
sti
clc
aaa
adc
bound
dec
sbb
lcall
out
loop
fbstp
xchg
pop
adc
pushf
or
outsb
cmpsb
dec
xor
or
and
mov
sub
inc
pop
push
push
mov
and
adc
fwait
sbb
and
outsb
dec
jmp
xor
negl
fsub
iret
lods
test
ljmp
mov
fdivs
repnz
push
mov
mov
pop
sub
add
xchg
nop
and
out
pop
lock
fcomi
out
out
mov
insb
std
loope
push
and
outsb
rolb
mov
xor
out
clc
push
adc
fsubl
dec
add
loopne
test
dec
lock
pop
jle
mov
mov
into
in
mov
imul
push
xchg
adc
js
imul
out
adc
jge
neg
das
rolb
jno
sahf
push
mov
adc
add
inc
fldt
fs
mov
js
dec
iret
mov
scas
push
int3
into
dec
aaa
jns
iret
push
mov
decl
in
iret
cmpsl
gs
gs
sub
std
dec
xchg
pusha
jo
repnz
mov
mov
pusha
negl
movsl
jae
mov
mov
xor
cmpsl
mov
lds
sbb
push
xchg
and
lahf
stos
testb
andl
enter
xor
call
xor
jge
adc
imul
cmp
jae
call
and
xchg
jg
decl
jo
push
fs
int
and
push
or
incl
cld
sbbb
and
clc
test
ljmp
fildll
mov
push
outsb
cmc
ja
leave
mov
xchg
aaa
cmp
rcrl
inc
mov
lcall
xchg
insb
push
mov
mov
lock
aam
xchg
ljmp
adcl
ss
mov
in
out
arpl
mov
jmp
fldt
mov
hlt
and
pop
call
fdivr
jg
shlb
sbb
js
mov
or
cmp
dec
add
sub
pop
ss
shrb
sbb
xlat
sbb
adc
loope
int3
test
push
mov
sub
lret
pop
ret
push
in
test
mov
push
inc
out
add
loopne
dec
pop
xor
cmc
filds
inc
in
into
loop
cld
mov
push
fcmovnu
aam
jne
hlt
cwtl
mov
ljmp
out
jge
dec
sub
fsubl
outsb
push
shl
mov
scas
mov
movsl
fldl
xchg
mov
mov
xchg
dec
cltd
lret
xchg
sbb
jo
sbb
jb
mov
popf
inc
sbb
pushl
test
ljmp
mov
mov
or
incl
adc
sahf
mov
loop
rcll
js
push
bound
mov
adc
out
dec
adc
push
xchg
push
sbb
std
inc
cs
movsb
sub
aaa
int
jle
ror
fcomps
hlt
scas
pop
ljmp
adc
das
fisttps
lcall
add
and
sub
pop
jmp
push
hlt
hlt
imul
fwait
dec
add
int3
mov
mov
inc
popw
sub
dec
jmp
inc
roll
pop
jb
pushl
fsubrs
push
in
imul
push
cmp
jg
jle
push
bound
adc
bndstx
adc
call
add
sbb
dec
ljmp
mov
jo
jbe
fwait
std
jg
enter
data16
push
mov
jmp
test
cmp
ljmp
add
jo
jp
nop
aaa
mov
xor
in
and
lcall
int
inc
push
notl
stos
les
xchg
addr16
fsubrs
push
push
xor
or
sbb
outsl
push
mov
mov
xor
arpl
sar
mov
cmp
jbe
out
xor
insl
mov
fbstp
rorb
xlat
fimuls
std
mov
xor
pushf
scas
inc
jmp
inc
sbb
or
mov
es
cmpsl
add
jnp
adc
nop
jp
xchg
data16
add
lret
jno
jno
out
es
push
imul
clc
jmp
out
imul
sahf
add
fsub
cmp
ficompl
xor
mov
jmp
ljmp
in
in
std
pop
and
mov
and
push
xor
sbbl
jge
add
ljmp
jne
add
jp
push
pop
and
fucomi
sub
popa
pop
inc
jnp
mov
sub
ss
pushl
js
data16
mov
rcll
xchg
mov
out
add
loope
lea
ljmp
ljmp
sub
enter
call
pop
inc
sbb
fists
icebp
ja
loop
mul
or
scas
jl
mull
fisttps
sub
orb
cmp
inc
inc
add
jns
lea
xor
lods
lcall
jo
lods
out
xor
mov
xor
ljmp
mov
push
or
lcall
std
fwait
pop
adc
sti
xchg
dec
psrld
ljmp
test
cmp
xlat
mov
fldl
mov
outsb
aaa
and
aad
inc
cld
daa
dec
ja
out
inc
fisubs
and
xor
iret
xacquire
ret
hlt
fstpl
inc
push
incl
dec
fs
fstps
push
adc
lcallw
imul
jbe
int3
imul
bound
jbe,pt
adc
sbb
adc
popf
je
pop
test
sub
sub
ljmp
imul
add
pop
jle
mov
int
aam
dec
scas
icebp
dec
sub
addb
aas
cmp
shrl
or
mov
cmp
or
mov
scas
ljmp
test
xchg
cli
aad
enter
push
mov
cmp
clc
fmull
dec
jmp
push
sbb
sbb
pushl
push
jmp
push
sti
fs
lcall
testl
push
mov
inc
add
andl
pop
sub
mov
jecxz
rcl
pushl
lock
mov
xchg
cwtl
fsubrs
in
lret
dec
adc
cli
sub
xor
lcall
arpl
mov
in
movsl
jl
xchg
ret
inc
ret
sbb
push
xor
decl
das
jnp
es
sbb
mov
sub
sarl
sbb
push
leave
fnstcw
and
les
sub
pop
insl
jnp
sbb
loope
fistpll
incl
sarb
fldpi
inc
xor
es
ficomps
sub
in
pop
iret
sbb
hlt
rclb
lock
and
sbb
into
in
push
add
xchg
scas
inc
mov
les
push
mov
sub
cmp
xor
pop
jbe
dec
out
comiss
or
in
xor
in
incl
xor
lahf
dec
add
or
jno
leave
out
sbb
jp
loope
xor
les
mov
jp
sub
sarb
push
rcrb
sub
rol
ljmp
iret
mov
pop
int3
adc
sub
and
pop
stos
imul
jg
loop
dec
and
adc
adc
inc
cmp
lcall
fbstp
inc
mov
or
adc
loopne
out
pop
adc
incl
fildll
ds
insb
out
sar
scas
rcrb
andl
push
jmp
inc
iret
and
mov
and
gs
mov
jmp
js
das
cmp
adcl
and
jge
adc
call
movsl
imul
jno
je
xor
xlat
mov
orb
push
ret
dec
loop
push
cmp
push
push
xchg
out
sbb
fildll
mov
stos
add
dec
push
mov
rorl
sub
jmp
rorl
shll
into
pop
ficompl
movsl
jge
push
mov
ficompl
decl
scas
jmp
mov
xchg
adc
cli
and
shl
pop
fiadds
mov
xchg
dec
fbld
cli
or
imul
pushl
jle
xor
mov
sbb
pop
jnp
pop
jns
add
jl
fisubrs
daa
out
mov
ds
cmpsl
cmp
int
mov
xchg
push
jg
mov
jl
call
mov
insb
enter
or
mov
mov
adc
and
mov
mov
stc
je
jge
enter
das
ffreep
dec
fdivl
icebp
insb
sbb
cltd
pop
stos
xchg
pop
inc
addl
subl
pop
pop
cmp
push
call
mov
xor
jo
pushf
daa
or
popf
sbb
stc
jno
insl
incl
adc
insb
or
loopne
outsl
inc
daa
lods
mov
sbb
outsl
pop
fstl
push
mov
shll
test
dec
mov
mov
nop
aaa
sti
jg
cmp
in
repnz
nop
aad
shll
dec
xchg
popf
filds
repnz
push
adc
imul
lret
out
xchg
jae
outsb
mov
sbb
out
fsubl
pushl
pop
add
jecxz
dec
push
xor
dec
xchg
out
call
jbe
outsl
fdivl
pop
out
js
movsb
dec
dec
mov
sub
push
cmpsb
sbb
jo
test
subb
xchg
add
push
ljmp
ret
loopne
je
push
shlb
insb
xchg
mov
loope
scas
adc
lret
push
ret
xchg
add
and
out
add
sbb
ljmp
push
jne
rclb
or
ss
lcall
mov
mov
movb
xchg
pop
jae
fs
outsl
pop
jno
mov
sbb
ret
pop
inc
mov
fst
dec
push
xorl
xlat
jecxz
incl
cmp
pop
enter
insb
scas
mov
inc
pushf
outsb
in
dec
jmp
mov
cld
ds
std
test
fadd
in
cmp
mov
jmp
push
ja
in
bnd
iret
pop
scas
inc
imul
add
das
decl
mov
pop
fwait
jno
jbe
sub
dec
inc
push
in
dec
or
xor
loop
mov
jl
inc
mov
push
mov
and
pop
pop
out
pop
insl
nop
mov
stos
or
aas
ljmp
or
pop
xchg
gs
xchg
adc
test
xlat
mov
pop
fstps
cmp
or
xchg
pop
adc
lds
inc
push
push
add
jmp
fiaddl
popa
loope
mov
sbb
sarb
incl
sub
imul
shrl
push
jecxz
jns
dec
stos
cmpsb
add
loopne
dec
cmp
push
jmp
mov
mov
pusha
lret
lcall
and
add
shrl
lahf
cmp
aaa
mov
inc
in
and
pop
add
notl
sbb
pushl
outsl
fucomip
pop
jp
dec
adc
jl
out
or
dec
pushf
sbb
jg
daa
andl
jo
pop
sbb
sub
xchg
mov
cmp
xchg
mov
jne
xor
loopne
into
sub
jnp
xor
test
or
das
clc
pushl
add
mov
dec
push
imul
cmp
addr16
lock
add
decl
sbb
pop
loopne
pusha
dec
sarl
cmp
icebp
pushl
cmpb
mov
repz
sub
ljmp
hlt
pop
jno
push
fs
inc
and
aaa
rcll
jl
mov
xchg
addr16
cwtl
dec
mov
sub
daa
adc
std
jmp
jmp
or
add
jo
out
jae
dec
repz
and
sbbb
jmp
inc
and
jg
fcmovu
cmp
mov
jne
leave
pop
outsl
mov
push
cwtl
inc
mov
pop
popa
mov
aaa
stc
xor
cmp
in
mov
dec
mov
jecxz
outsl
in
jo
xor
jge
mov
mov
and
xchg
xor
xchg
and
inc
insl
lret
xor
jno
pushl
inc
int3
fbstp
icebp
lcall
lods
mov
loop
fdivs
pop
xor
mov
sbb
rorb
mov
push
nop
dec
outsl
dec
out
cmp
fidivs
ljmp
xchg
pusha
and
fs
les
jle
xor
rorb
xchg
and
mov
sti
jnp
xlat
jno
testb
bound
and
ljmp
cmpsb
sbb
pushl
or
sarl
icebp
push
sbb
cltd
scas
xorl
push
icebp
pop
jg
sub
or
xchg
sub
pushf
sbb
push
out
cli
decl
lock
adc
inc
scas
dec
or
bound
dec
aas
adc
or
fcomip
fidivrl
pop
pop
pop
pop
sub
enter
xchg
xchg
push
in
mov
pop
jmp
pop
jbe
stc
cmp
jo
cmp
int3
lahf
popa
mov
ja
lahf
inc
adc
push
jmp
inc
sub
in
fiadds
mov
jae
or
mov
xchg
mov
adc
push
lock
hlt
lcall
mov
sbb
andb
push
fld
push
hlt
adc
mov
xchg
and
out
lods
leave
mov
mov
arpl
jmp
bound
int
les
push
jge
mov
sub
pop
test
fcmove
xchg
mov
cld
imul
cmp
clc
add
dec
les
js
mov
dec
ss
lds
mov
icebp
and
jns
pop
fistpl
jecxz
insb
insb
mov
lret
icebp
lcall
scas
adc
add
aas
cmp
pop
and
cmp
push
in
jg
mov
pop
lahf
mov
andb
mov
jmp
inc
rorb
jle
add
or
cmpsl
mov
sub
adc
xor
sub
adc
mov
mov
andl
mov
cmp
and
call
push
stos
fdivrl
out
cli
dec
rcrb
decl
cmp
out
shr
jbe
testl
incl
fadds
sbb
pop
mov
push
sbb
pop
jmp
push
int
xor
mov
inc
jecxz
ljmp
mov
adc
daa
push
leave
sarb
xor
inc
xor
dec
out
call
xchg
ljmp
rclb
sahf
shrb
js
adc
sti
sub
stc
xor
jmp
enter
fcomps
dec
fcoml
pop
mov
shrb
mov
jb
inc
insl
int3
xchg
pop
dec
mov
jo
mov
cli
ljmp
loopne
and
clc
popf
and
fdivrl
fistps
clc
sti
sub
pop
pushl
aaa
loopne
icebp
mov
addb
dec
inc
jnp
mov
gs
mov
cld
lcall
cmc
xchg
mov
shlb
xorb
gs
pop
fnstenv
pushl
pop
cmp
mov
jne
enter
xor
pop
int3
adc
or
dec
add
adc
popf
xchg
add
jl
sbb
jmp
popa
shll
ljmp
cmp
rcrb
pop
loop
int3
sub
cmpsb
mov
or
push
stos
leave
popf
push
push
push
dec
jo
cld
push
ror
xchg
sti
andl
pushf
cltd
popf
and
sbb
jb
mov
popf
cmp
or
sub
sbb
add
filds
cmp
pusha
ret
push
sbb
jo
ljmp
and
in
insb
pop
mov
pop
mov
mov
dec
adc
outsl
cmpsl
jge
sbb
incl
pop
sbb
fiadds
cwtd
testb
ret
sbb
mov
divl
cmpsl
sbb
xchg
dec
add
push
flds
fcmovnu
adc
and
dec
fwait
mov
pop
cld
ret
mov
push
call
pop
sub
faddl
inc
xchg
push
incl
ret
xor
dec
and
ficoms
lods
lods
out
lcall
call
cmp
jnp
xor
pop
das
fstpl
je
jmp
jmp
scas
out
xchg
xor
fwait
xchg
rol
dec
jg
daa
adc
fsubs
xchg
pusha
fwait
xchg
mov
jecxz
mov
sbb
add
daa
adc
scas
in
lcall
lcall
xchg
inc
pop
lods
dec
sbb
lds
xchg
out
mov
adc
lret
imul
dec
lcall
lea
sub
lods
rclb
sahf
adc
into
push
and
in
or
pushl
jo
pop
xchg
xchg
pop
jecxz
scas
cmpsb
or
jae
xchg
mov
push
jmp
lcall
or
and
or
stos
shr
or
js
xchg
dec
jns
repnz
sub
jg
and
mov
and
cmc
int3
cld
aas
xor
inc
cmpsb
push
cmp
fdivr
mov
mov
xlat
xor
and
incl
sbb
and
fstps
lock
sbb
or
push
cmp
lcall
lds
sti
jle
je
cmp
mov
ret
pop
dec
into
cmp
cld
lcall
das
leave
sbb
and
dec
lods
shl
mov
lret
stos
xorl
mov
sbb
adc
les
pushl
movsb
and
push
mov
mov
lcall
shlb
mov
cld
mov
arpl
aad
mov
inc
fisubrl
adc
cld
inc
dec
mov
scas
push
pop
popa
mov
jns
adc
xchg
cmc
hlt
loop
addl
mov
stos
dec
imull
dec
adc
add
cmc
jecxz
or
dec
xchg
mov
fsubr
cmc
jmp
or
sbb
sbb
loop
scas
sarb
mov
xchg
cmpsb
pop
jg
lock
shll
xchg
inc
pop
jle
xchg
cmp
xchg
or
mov
in
hlt
dec
cmp
mov
imul
push
fldenv
subl
lods
divl
decl
cld
sbb
mov
cltd
stc
xchg
push
mov
and
aam
ret
sbbl
or
fimuls
cmp
pop
sub
sub
or
jns
out
cltd
imul
mov
test
ret
xchg
mov
lret
jle
inc
cld
stos
in
push
jmp
push
ret
mov
xchg
pop
aas
adc
test
pop
out
fisubrl
insb
jg
testb
popa
mov
es
and
jecxz
dec
xchg
xchg
outsl
push
jb
call
adcl
call
xor
sub
addb
jne
std
fldt
and
push
mov
clc
incl
pop
adc
in
daa
mov
insl
mov
hlt
dec
mov
mov
cmp
jne
mov
cmp
popa
and
ljmp
or
call
dec
jne
ret
pop
iret
or
push
loop
jns
mov
cli
out
in
or
sti
cmp
adc
pand
cmpsb
jle
incl
mov
xchg
and
mov
ret
mov
test
iret
lods
add
dec
xorl
mov
ljmp
rorb
movsl
add
pop
ror
sbb
inc
pushf
scas
pop
lahf
popf
daa
icebp
or
or
sahf
jnp
inc
ss
gs
adc
dec
mov
xchg
mov
call
sbb
pushf
jo
iret
dec
inc
jp
testb
out
fcmovnb
adc
fdivr
mov
repz
lock
mov
push
xchg
xchg
test
and
push
lret
mov
pushl
push
inc
fisubrl
in
jp
dec
rol
and
inc
inc
jle
lock
ljmp
loopne
out
notb
xor
push
rcrl
incl
mov
and
xchg
fiadds
fucomi
xchg
inc
sbb
xchg
add
mov
xor
js
add
lds
mov
pushl
pop
ljmp
xchg
in
jb
jle
mov
mov
in
and
push
scas
xor
inc
push
rclb
std
fbld
push
ljmp
psubq
fsts
adc
add
incl
out
jno
dec
sub
mov
xchg
jecxz
mov
mov
cmc
pushl
sbb
ss
add
push
and
adc
and
test
mov
decl
insl
loop
inc
fnstsw
mov
or
jns
mov
aaa
lock
pop
pushf
repz
scas
ljmp
jae
push
push
inc
cmp
sub
lret
adcb
ljmp
ret
arpl
data16
add
fstp
out
aaa
push
sbb
ljmp
add
mov
addr16
adc
mov
decl
divl
out
scas
ret
mov
add
lret
cmp
aad
decl
in
pop
or
pop
imul
aad
jge
push
and
daa
pushf
cmc
push
jl
push
out
call
push
notl
xchg
mov
scas
jno
test
xor
sub
jb
sar
jg
jno
xor
push
loopne
xor
pop
push
mov
mov
fcmove
jnp
pop
mov
adc
jg
lcall
xchg
xchg
movsl
push
mov
cmc
sar
xor
in
cmpsb
call
pop
sahf
out
stc
bound
rcl
adc
lcall
mov
clc
push
jo
out
lods
sub
or
mov
sti
cltd
movsl
aad
lds
jmp
pushf
mov
jmp
je
mov
stos
pop
nop
data16
push
mov
fwait
rolb
add
pushl
inc
or
insl
in
xchg
mov
jb
fcomps
out
cli
sbb
dec
fcmovu
inc
aam
pop
mov
clc
repz
mov
pop
mov
dec
jecxz
outsb
jmp
mov
inc
loopne
imul
popa
inc
xor
mov
xchg
push
pop
mov
cmpsl
test
pop
add
ret
and
outsb
aas
aas
mov
mov
es
fs
jmp
lret
xchg
jne
jns
mov
int
sub
sub
push
mov
fisttps
mov
movsl
loope
mov
jne
adc
adc
mov
in
inc
repnz
cmc
lret
mov
pusha
out
test
mov
cmp
xor
aas
fistps
les
mov
pop
js
lret
mov
out
and
ljmp
cmp
rclb
pop
sbb
pop
and
aaa
dec
mov
jo
sub
xor
push
movsl
arpl
pop
negb
mov
cmp
xchg
add
movaps
cmpsb
mov
cmpb
call
iret
sbb
jp
shlb
mov
add
imul
and
into
mov
xor
fnstenv
push
pop
or
mov
int3
push
push
notb
loope
mov
push
push
push
clc
aas
scas
add
dec
sbb
sti
push
add
popa
xor
dec
inc
or
mov
sti
push
dec
int3
fsubrl
andb
and
xchg
jg
push
lret
sub
test
jmp
or
push
xor
fcomip
xor
push
aas
mov
dec
push
sbb
outsb
lret
sub
mov
call
pop
cmp
inc
aam
adc
inc
and
cmp
idiv
jmp
loop
sbb
xchg
mov
jb
jno
push
shr
cmp
adc
push
roll
decl
or
push
push
sbb
xor
mov
sub
repz
pushl
inc
sub
lea
jo
jg
test
add
cltd
mov
mov
decl
int
mov
xor
in
lea
xchg
sbb
shl
inc
mov
call
and
mov
push
divl
jne
and
pushf
cmp
pushl
ret
mov
leave
fldl
xor
call
lock
stc
pop
inc
pop
cmpsl
mov
and
mov
mov
idivb
inc
sbb
pop
loopne
and
mov
xor
push
or
inc
mov
and
xor
fisttps
in
call
cmp
and
rcll
into
popf
push
loope
xor
ljmp
pop
imul
xor
or
mov
pop
push
rcrl
and
mov
lea
inc
jle
test
rcrb
adc
adc
lcall
iret
subl
and
stc
ds
xchg
adc
call
rcrb
cmc
sub
pop
xchg
mov
mov
jl
mov
ljmp
adc
push
stc
lahf
xor
hlt
dec
sar
and
cmp
cmc
or
out
and
addr16
jno
and
lods
push
decb
dec
lock
and
mov
call
out
incl
pop
xor
cmp
rcl
mov
mov
clc
mov
mov
icebp
ljmp
push
icebp
or
push
negb
adc
pusha
stos
js
daa
std
or
imul
andb
and
leave
adc
imul
lock
aas
xor
push
lret
enter
sbb
xchg
mov
pop
mov
jns
jmp
cmp
dec
icebp
xchg
jo
and
xor
cld
xchg
cltd
cmpb
mov
decl
rorb
mov
aas
in
ss
or
in
ja
xchg
out
rclb
pop
push
jg
ljmp
fstpt
das
loope
popf
shrb
adc
pop
dec
clc
push
mov
adc
mov
and
cwtl
ss
sbb
call
add
sbb
cld
inc
xchg
fstpl
out
push
addr16
insb
daa
daa
mov
roll
ljmp
test
mov
dec
cmpl
out
repnz
aam
jp
jnp
push
std
outsb
jns
les
mov
jbe
popa
pushf
add
mov
add
xor
lods
xchg
cmp
test
push
lods
ljmp
adc
sbb
push
jle
adc
outsb
dec
out
aas
sbb
call
cmp
test
adc
jae
xorb
jmp
rep
inc
lahf
cmp
or
jle
inc
pop
out
jmp
stc
cmp
imul
lret
stos
ljmp
and
lcall
cmp
adc
subl
cmp
sbb
xor
cmp
call
out
mov
sub
mov
and
and
mov
add
or
and
adc
lcall
xchg
jp
adc
xchg
cltd
aaa
push
nop
scas
push
icebp
mov
loop
incl
stos
jmp
fwait
int3
mov
push
decl
popf
sti
sahf
or
xlat
sbb
int
pushf
and
mov
sbb
loopne
rorl
in
mov
aam
push
aam
lcall
mov
mov
xor
pop
sbb
enter
daa
mov
pop
sub
lcall
ret
jb
lret
lcall
icebp
lods
and
adc
frstor
lods
pusha
mov
pushl
decl
repz
ret
movsl
mov
loope
repz
jmp
addl
mov
xorb
xor
iret
jg
add
stc
cmp
pop
mov
inc
adc
pop
push
fistps
popa
les
iret
fbld
movsb
mov
in
fld
gs
pop
aam
mov
cmp
jo
outsb
xchg
add
xor
pushl
aad
jae
adc
and
dec
mov
mov
int3
shrb
test
add
std
js
jmp
aam
xchg
out
mov
mov
movsl
pop
xor
stos
inc
mov
jg
leave
adc
call
or
stc
cmc
mov
cli
mov
ja
mov
ss
in
pop
adc
inc
adc
lcall
cmpsl
inc
jge
jmp
mov
repnz
mov
imul
scas
lds
and
aaa
push
pop
ds
push
stc
add
std
divb
into
cmc
sbb
jne
dec
sbb
xor
pop
cmp
dec
sub
mov
inc
cltd
mov
mov
cs
lcall
and
mov
pop
fwait
outsb
lahf
lods
mov
mov
jnp
sti
mov
jp
mov
adc
inc
or
mov
test
fsubl
mov
hlt
loopne
enter
adc
lods
xor
aaa
jmp
add
push
cmpsb
aam
ret
lock
or
xchg
xor
cmpl
gs
clc
or
call
mov
mov
mov
test
fidivrl
fidivrl
jg
incl
adc
mov
enter
pop
dec
mov
mov
inc
ret
lcall
in
test
mov
pop
cltd
jo
adc
mov
xchg
sbbl
cmpsl
mov
inc
dec
cmp
sub
mov
roll
imul
fwait
inc
sbb
insb
movsl
dec
sub
in
imul
lock
add
fmul
lret
mov
push
cs
pop
js
std
push
test
fwait
cltd
xor
xchg
jge
call
pusha
sarb
mov
xor
nop
push
lods
into
pop
xor
pop
pop
push
fs
scas
mov
ret
cld
in
lock
ficoms
clc
incl
sti
mov
shlb
shll
xor
or
out
ljmp
je
call
inc
sub
outsb
out
inc
cmp
hlt
call
adc
std
fmuls
jmp
imul
lcall
adc
rorl
cmpsl
mov
mov
jns
push
loop
cmpsb
jg
mov
popf
mulb
mov
xor
ja
in
ret
dec
sti
jo
fwait
or
loope
mov
movsb
rcll
inc
xchg
jns
scas
adcb
subl
mov
fstl
pushl
dec
mov
jmp
cmc
sbbb
leave
enter
jne
mov
jg
sub
push
cs
ret
inc
movsl
cld
mov
fsubrl
or
rcrb
sbb
cmp
clc
in
fistpl
frndint
push
movsb
pushf
jg
ljmp
cmpsb
or
lds
adc
xchg
and
dec
cli
xchg
push
mov
jp
incl
inc
sbbb
sbb
pushf
cwtl
inc
or
stc
outsl
xchg
call
incl
pop
or
clc
test
and
xor
xchg
test
daa
roll
scas
call
adc
jb
adc
cltd
jmp
and
sub
iret
outsl
daa
test
or
test
adc
jmp
daa
mov
pop
out
dec
loopne
cltd
push
fimuls
jbe
xchg
xchg
in
add
int
idiv
jmp
shrl
clc
jg
push
inc
lret
mov
add
jmp
les
imul
mov
adc
movsl
cmp
sbb
jge
mov
lea
push
hlt
out
ss
pop
in
jg
mov
sub
and
cmpsl
sbb
insb
inc
jno
pop
xor
sub
in
out
cli
lcall
jne
jmp
daa
dec
das
jo
adc
divl
incl
adc
arpl
and
mov
inc
aaa
mov
cmp
mov
adc
xchg
mov
add
pop
cmp
in
pusha
addr16
sti
add
jg
lcall
pop
fcmovu
mov
sub
pop
rcrl
sub
insb
ds
pop
lods
iret
aas
sarb
lods
xchg
shll
data16
scas
clc
ljmp
stos
cmpsb
cmp
dec
pop
js
movsl
jae
xor
adc
je
test
or
jne
push
lcall
lods
sub
xor
mov
jmp
jl
stos
popa
repnz
adc
cmpsl
pop
in
mov
popa
stos
pop
repz
dec
mov
out
ja
inc
push
xchg
repnz
nop
cmpsl
mov
cmpsb
js
dec
in
cmp
jmp
sub
mov
mov
outsb
aam
icebp
mov
sbb
dec
lods
push
dec
adc
outsl
mov
incl
xchg
and
cmpb
push
das
negl
fwait
mov
jge
dec
jg
xchg
ret
push
lcall
lods
aad
pop
shrb
sbb
and
scas
clc
imul
fisttpll
push
xor
popa
flds
pushf
cmp
ljmp
decl
scas
out
jbe
mov
sti
dec
jg
sub
jne
rcrb
push
pushl
les
mov
jae
jno
cmp
lods
xor
or
decl
sub
lret
in
jle
pop
addb
sub
movb
das
out
jmp
sub
dec
cmpl
sub
data16
ja
xor
incl
lret
adc
pop
ret
lds
sbb
add
sub
and
lcall
adcb
lock
cmpsb
ret
sub
fwait
cmp
popf
pop
decl
xlat
out
xor
inc
into
negl
loope
leave
cmp
xor
cli
mov
and
iret
mov
cmp
pop
jmp
aam
jp
cmc
xor
mov
sbb
daa
cmpsb
roll
enter
ljmp
and
leave
lock
inc
xor
ss
test
cwtl
jecxz
ljmp
jo
cmp
jbe
adc
or
cmc
int3
cmpsl
push
fdivrl
add
lcall
or
mov
pop
sbbb
mov
dec
sbb
mov
lret
jge
incl
cld
decl
adc
shll
push
jns
add
xor
and
jp
ret
adc
cli
shrl
gs
int
pop
int3
cmp
push
pushl
xchg
loop
mov
inc
push
and
xor
scas
push
xorb
inc
jg
adc
inc
xchg
or
imul
jno
jecxz
sahf
push
mov
mov
jg
push
cmpb
push
cmpb
add
ret
sub
sahf
mov
dec
gs
fisttps
pushl
dec
xchg
mov
xchg
adc
shll
push
xchg
incl
leave
stc
mov
mov
add
mov
iret
lret
loop
call
cmp
cmp
cltd
rolb
scas
push
cltd
ds
mov
mov
outsl
mov
insb
stos
incl
jmp
arpl
aaa
daa
and
in
pop
xchg
mov
icebp
pushl
clc
sarb
push
adc
int3
sbb
int
mov
pop
or
ljmp
lret
lret
dec
popa
cmpsb
sub
dec
out
lods
and
call
push
ja
out
jp
mov
loop
fldt
adc
mov
pop
xchg
jmp
jno
call
sti
jge
xchg
and
and
fiaddl
sub
loop
in
fisubs
pop
imul
pushl
dec
add
cs
out
or
mov
popa
stos
xchg
push
fwait
jle
and
daa
inc
daa
pop
adc
pop
mov
lcall
xchg
aad
in
mov
mov
cmp
xchg
ret
jg
jnp
lds
dec
iret
fnclex
into
xor
pop
cmp
sbb
call
ss
int3
hlt
cmp
push
push
or
push
add
cmp
nop
roll
sbb
lock
xchg
inc
js
pop
add
aaa
imull
sar
call
mov
xchg
gs
test
jae
testb
jg
jb
xor
mov
and
xor
outsl
or
jmp
addr16
aam
push
rcr
jae
and
shl
xchg
push
push
repz
mov
inc
push
out
xchg
mov
cltd
in
lods
xchg
adc
in
jae
xchg
xchg
enter
repnz
incl
mulb
sub
repnz
and
sbb
mov
cmp
lock
jl
pop
in
jle
scas
xor
pop
into
sahf
scas
push
mov
mov
hlt
mov
dec
test
cld
jno
xor
and
test
insl
fldt
lock
test
xor
cltd
mov
add
pushl
inc
push
fisubl
xlat
push
sbb
inc
add
jne
xchg
loopne
incl
pop
dec
scas
push
jns
hlt
shll
out
push
or
or
ljmp
dec
mov
push
lret
ret
icebp
lock
lcall
push
mov
in
mov
sti
jg
sbb
fidivrl
xchg
in
xchg
mov
pop
mov
pushl
mov
add
push
outsb
cmp
mov
mov
cmc
sbb
mov
call
fmull
rcl
or
fs
sbbb
mov
nop
add
jge
adc
out
mov
xlat
es
sbbl
mov
out
ljmp
adc
xchg
cli
add
insl
rcl
mov
pop
outsl
pop
cmc
mull
lods
call
mov
cmp
fidivl
cmp
mov
inc
add
push
xchg
adc
push
mov
sub
push
in
xorb
add
pop
dec
push
push
in
adc
or
ss
aas
fisubrl
loope
push
repnz
cmp
sub
or
inc
popf
inc
outsl
dec
push
in
ret
das
cli
stc
jnp
fs
out
inc
xchg
cmp
testl
scas
cli
out
adc
lcall
stos
es
mov
jne
or
push
loop
stc
rorb
lahf
lods
inc
movsb
mov
and
xor
test
add
shll
mov
add
in
and
sub
popf
dec
inc
pushl
fdivs
sub
je
mov
or
xor
call
movsb
mov
push
lcall
ljmp
cmp
fldt
adc
or
jmp
stos
into
movsb
iret
sbb
lods
lods
cmp
adc
mov
sub
leave
cmp
xchg
insl
ja
sbb
jg
jmp
insl
out
xor
push
xchg
add
daa
out
xchg
push
or
cwtl
add
jg
pop
mov
adc
jge
test
aad
xchg
in
loope
xor
pushl
push
jge,pt
leave
push
adc
stc
lcall
in
test
mov
jbe
sbb
inc
mov
int
add
jge
sbbb
xor
sub
stos
adcl
push
and
mov
jno
sahf
lods
les
std
cmp
jnp
decl
lcall
stos
inc
stos
outsl
mov
inc
repnz
jle
test
std
mov
decl
inc
push
sbb
in
push
jb,pt
adc
fsts
xor
test
cmp
pusha
dec
fisttps
add
and
or
arpl
jae
mov
test
mov
je
shl
lret
sub
loope
call
cmp
lods
inc
ja
cmp
ja
ljmp
jbe
jl
mov
stos
int
cli
cmpsb
jno
pushf
sarb
inc
sti
ud0
call
cwtl
sub
jecxz
shll
or
das
movsb
push
push
sub
push
jb
pusha
mov
ret
call
xor
popf
mov
inc
lds
cmp
fistl
decl
test
or
mov
push
and
ja
imul
das
fdivl
pusha
xchg
lea
push
inc
out
stos
movsb
lcall
push
push
sbb
or
push
in
popf
sub
pop
cmp
dec
sub
xchg
mov
incl
sbb
jmp
clc
outsl
lods
and
sub
pop
inc
scas
cld
cmc
call
in
sub
adc
stos
xchg
cmp
mov
aas
push
inc
scas
dec
xchg
cmpsb
dec
hlt
pop
pop
popf
sar
jg
ljmp
push
ja
testb
push
mov
std
and
jl
or
push
xchg
decl
pop
mov
inc
xchg
cmp
fsubs
pop
dec
ljmp
mov
js
jmp
adc
mov
push
bound
xlat
gs
sub
lods
pop
and
andb
rol
stos
mov
sbb
xchg
dec
roll
shll
add
mov
lcall
aaa
out
cmovnp
mov
sbb
pusha
decb
adc
sbb
int
rorl
clc
inc
test
mov
push
mov
arpl
repz
test
mov
daa
mov
pushf
das
sar
or
sahf
pop
mov
ds
inc
pop
pop
jl
int3
movsb
scas
jecxz
adc
icebp
xchg
inc
push
inc
data16
hlt
xor
add
mov
jecxz
addb
popf
pop
lahf
repnz
lret
add
and
mov
mov
decl
imul
shrb
pop
mov
cmp
ret
pushl
sub
nop
stos
lahf
jne
rorb
out
lret
in
bound
inc
shl
cmp
cli
cmp
mov
xchg
popa
xor
mov
mov
je
into
cmp
stc
cmp
call
or
aaa
and
push
loop
ds
or
xlat
mov
sub
jnp
ljmp
jno
cmp
xchg
aaa
jns
mov
je
xor
adc
push
stos
jns
add
jmp
xor
xchg
add
cwtl
push
mov
ljmp
add
mov
or
enter
or
jg
pushl
xchg
add
sub
jg
in
sub
xchg
mov
aam
pop
push
movsb
pop
mov
mov
mov
call
hlt
sub
ffreep
pop
mov
pusha
mov
inc
addr16
decl
mov
loopne,pn
lahf
std
or
repz
out
std
test
ljmp
xchg
xor
sub
or
mov
jns
xlat
inc
jne
imul
lret
sbb
lds
mov
cmpl
popf
jecxz
push
xchg
ja
es
aaa
std
inc
xchg
xchg
js
mov
lea
in
in
lods
pushl
push
sbb
movsb
shlb
test
pop
cmp
mov
sbb
jo
mov
xlat
xchg
mov
xor
mov
cmp
jne
fistpl
jmp
jns
mov
subl
mov
sahf
shrb
push
inc
or
xor
sbb
call
sbbb
fistps
fs
xor
sub
insl
jp
push
xchg
xchg
inc
sbb
ds
out
pusha
sub
or
xchg
ss
xchg
sub
ss
push
sarb
fcomip
jmp
daa
setb
push
lret
cmpsb
idivb
xchg
outsl
rcl
loop
inc
mov
aaa
std
adc
mov
pusha
inc
mov
or
loop
cld
ljmp
out
les
push
mov
mov
mov
jns
andl
pushf
aad
popa
aas
mov
popa
fnstcw
push
push
lock
mov
jl
adc
pushl
sarb
aas
push
clc
mov
pop
rorb
clc
cmp
jne
jp
ret
rorl
jmp
clc
mov
call
lcall
jge
hlt
xchg
mov
xor
or
loope
adc
pop
mov
push
incl
out
cld
movl
push
je
or
xor
ljmp
and
pushl
enter
in
outsb
sub
lret
data16
mov
scas
movsb
xor
mov
sbb
stos
adc
loop
adc
xchg
jge
sub
cltd
in
mov
ds
adcl
outsl
out
in
std
lcall
dec
data16
bound
mov
pop
cmp
and
decl
cmp
cwtl
push
ljmp
mov
dec
fidivl
sbb
mov
mov
out
rcrl
push
in
shrl
lods
dec
cmc
shl
test
jb
ljmp
inc
push
mov
mov
test
addl
xchg
mov
cmp
stc
lods
cmp
cmpsl
mov
cmp
out
inc
cmc
mov
push
movsl
sbb
mov
add
es
sbb
pop
push
decl
aaa
push
aad
push
pop
mov
in
and
or
js
mov
out
repnz
stos
cmp
cmp
sbb
dec
mov
fwait
mov
fimull
adc
fdivp
or
rorl
or
es
leave
lcall
xchg
decl
test
add
testb
aam
sub
sbb
addr16
jg
or
movsl
mov
in
mov
cltd
xchg
adc
sar
jbe
sbb
or
les
xor
fcomp
mov
ljmp
cmp
sub
xchg
add
shr
bswap
xor
ja
scas
mov
popf
stos
ljmp
into
push
mov
int
das
inc
and
ljmp
rcll
std
mov
arpl
adc
mov
jmp
lds
cmp
rorl
or
pushl
xlat
outsb
inc
sub
aam
adc
lock
add
ret
xor
call
ficoms
sub
dec
sbb
scas
fsubrl
dec
sub
xchg
mov
jmp
out
mov
or
leave
mov
push
iret
dec
cmpsl
rcl
loop
mov
stc
lahf
mov
aaa
rol
decl
jmp
jne
stc
mov
inc
inc
jg
dec
imul
adc
and
and
and
sbb
pop
aaa
in
xor
call
pusha
icebp
stos
out
loopne
stc
dec
sahf
dec
fstpt
das
cmpsb
pop
sbb
ret
lcall
sub
inc
js
outsb
add
ljmp
mov
add
or
push
cmp
sub
in
fcoms
call
inc
inc
shll
decl
cmpsb
inc
xchg
out
in
fmuls
popa
icebp
subl
xchg
int
cld
pop
or
xor
test
push
jne
pop
loope
shl
cmp
push
in
xorb
cmp
push
push
stc
push
mov
push
sub
dec
es
arpl
xchg
jle
jne
ror
ds
xchg
mov
movsb
out
mov
std
sbb
lds
loopne
jg
jg
in
movl
mov
push
mov
and
aas
enter
call
nop
leave
push
push
and
xor
mov
mov
out
mov
or
call
cld
aad
or
mov
lahf
xchg
ss
mov
sbb
lret
icebp
or
sub
call
test
outsb
mov
cld
dec
inc
test
ret
push
jp
pushf
and
popf
xor
mov
in
dec
cmpsb
call
and
mov
out
add
mov
idivb
mov
add
cmpb
ljmp
cmpsl
inc
mov
inc
jmp
mov
cmc
mov
add
fwait
stc
sbb
js
stc
push
test
mov
pop
sbb
cld
inc
jne
in
xchg
xchg
addb
outsb
cli
incl
insl
popf
mov
ljmp
add
rclb
orb
sub
bound
outsl
jl
adc
cli
aad
jp
hlt
mov
je
test
ja
jmp
pushf
xor
addr16
sbb
cwtl
negb
mov
movsl
faddl
lret
mov
sub
fstl
pop
inc
ret
or
dec
mov
mov
or
sub
int3
push
pop
cmc
sub
stos
imul
lock
cli
cld
mov
and
into
stos
rcr
mov
adc
nop
jns
sti
pop
or
adc
out
mov
enter
fmuls
pop
mov
ljmp
inc
xchg
test
adc
in
sub
stc
ds
xor
or
adc
push
popa
int
shlb
leave
xchg
mov
dec
arpl
addb
out
push
push
cld
imul
repz
or
pop
mov
notb
jae
loop
mov
orl
mov
inc
les
call
mov
mov
mov
add
sbb
and
fiadds
push
push
or
cld
addr16
outsb
mov
jge
roll
jecxz
addr16
jg
ljmp
push
out
mov
sbb
jmp
js
xchg
imul
lret
stos
icebp
gs
mov
nop
push
or
fcomip
jmp
add
mov
leave
pop
mov
mov
js
cmpsb
rclb
hlt
sub
jae
cmp
mov
push
lods
jmp
cmp
pop
jno
nop
fsubrs
mov
lret
pop
mov
pusha
stc
in
sbb
push
pop
out
sbb
jcxz
add
push
aas
mov
dec
lret
pop
cmp
add
in
xor
je
cmp
pop
or
and
push
in
xlat
ds
repz
jmp
cltd
in
sbbb
push
jp
dec
mov
adc
pop
aas
repz
inc
mov
loop
cmp
jg
in
inc
sub
xor
sub
fcompl
das
test
cmp
das
push
jo
enter
mov
push
mov
int3
jmp
xor
pop
mov
ljmp
sbb
dec
cltd
add
xchg
sbb
lret
dec
scas
mov
sar
adc
outsl
mov
cmp
jl
mov
pop
loop
pusha
or
data16
and
pop
into
mov
mov
lods
ljmp
ljmp
xor
imul
jg
xor
mov
dec
dec
xor
int
ret
lods
sahf
mov
imul
popa
mov
jo
lret
mov
addr16
stos
subb
std
ljmp
sub
cmp
and
arpl
cmpsb
int3
dec
hlt
mov
lods
mov
ljmp
sbb
xchg
pop
pusha
enter
xor
dec
xchg
movsl
lock
push
sahf
mov
imul
push
xor
push
aam
nop
ret
pushl
mov
stos
xor
mov
jge
dec
push
jo
gs
mov
lcall
stc
gs
movsb
push
data16
adc
sub
xor
cmp
mov
hlt
in
mov
je
jle
les
adc
mov
cmp
mov
fwait
mov
loope
in
push
into
xchg
rolb
in
pop
and
jp
pop
loopne
pop
push
call
mov
lcall
in
or
dec
bound
push
jae
fsubrs
mov
push
mov
xchg
mov
aaa
stc
fildll
enter
jmp
in
repz
out
cs
push
fidivs
jo
pop
push
pop
cmp
inc
daa
push
les
sahf
inc
inc
jecxz
adc
nop
fistpl
add
mov
cli
lcall
shlb
adc
lret
sub
and
mov
xchg
xor
adc
pushl
sbb
pop
and
mov
xor
mov
icebp
push
xchg
mov
adc
clc
push
lahf
push
mov
lret
cmp
pop
lcall
daa
jp
outsl
push
insb
push
sbb
fs
leave
mov
dec
sbb
out
clc
arpl
cli
push
iret
dec
fwait
and
dec
scas
scas
leave
xor
decl
push
cmp
inc
mov
and
mull
inc
shrb
mov
js
mov
pushl
loop
adc
ja
jbe
mov
rorb
add
lds
fdivp
push
push
add
dec
aas
fisubl
int3
cmc
pop
and
pop
loopne
mov
stc
sti
jo
mov
jge
jp
cmpsb
jmp
and
cmp
lret
aaa
mov
mov
aas
dec
test
js
or
int
nop
orl
lcall
insb
pop
or
sub
cli
mov
addb
adc
out
popa
lret
mov
ss
ljmp
mov
sti
jp
int
jmp
addr16
sti
push
inc
jbe
cmp
out
xor
cltd
pop
stos
cs
xor
pusha
adc
or
add
mov
outsb
fsubr
pop
sti
sbb
lcall
xlat
mov
cli
dec
dec
cmp
sub
clc
pusha
cmp
dec
std
dec
popa
sbb
xor
dec
dec
out
push
test
push
bound
aas
push
or
mov
xor
cmp
sbb
cmp
clc
ljmp
loop
shl
adc
out
xchg
popf
pop
add
bswap
das
jl
xor
lcall
mov
dec
xor
xor
dec
xchg
xchg
popa
cmp
mov
out
fwait
clc
popa
pop
dec
xor
sub
cs
decl
daa
adc
pop
mov
pop
inc
ret
or
xchg
outsb
cmp
mov
hlt
xchg
xchg
pop
loopne
adc
push
sbb
inc
decl
jle
mov
jo
mov
test
sub
xchg
mov
pop
test
mov
sub
pop
mov
popa
push
stos
or
mov
imul
xchg
jp
in
and
mov
dec
mov
pop
mov
imul
ds
sarb
leave
push
xchg
shll
sub
xor
nop
lcall
cmp
mov
fcmovnbe
pusha
cmp
bound
aam
cli
mov
xor
shll
stos
jae
mov
lcall
in
dec
lds
mov
stc
and
xor
add
inc
aam
sub
ljmp
cli
pop
out
or
or
das
cmpsb
jecxz
jbe
jl
pop
cmpl
mov
ja
sti
jmp
xchg
out
in
inc
inc
cmp
mov
aaa
add
mov
jle
xor
int
daa
out
xchg
nop
gs
fnstsw
popf
js
jecxz
push
jae
lods
std
scas
pop
outsl
inc
cmp
or
dec
jne
je
sti
xchg
sub
push
and
or
dec
ror
mov
jg
pop
cmp
daa
out
mov
into
les
mov
scas
roll
dec
jae
mov
xchg
rclb
inc
xchg
mov
ljmp
xchg
push
sub
sub
mov
or
and
ss
push
mov
jmp
mov
pop
mov
mov
arpl
xchg
call
repz
sub
lcall
sub
arpl
mov
dec
push
clc
decl
push
nop
fstl
inc
or
add
std
jle
ret
dec
xchg
mov
and
out
mov
lcall
cmp
and
cmc
ud1
push
pushf
aaa
sbb
ljmp
ss
ret
fdivrl
jmp
addr16
fldcw
insl
std
pushl
popf
enter
push
fstl
push
lret
je
dec
push
sub
ficoml
icebp
in
movsl
or
ret
mov
ss
loope
lods
rcrl
dec
xchg
cmpsl
pop
lcall
add
popf
pop
jb
cmp
or
xlat
adc
int3
fcmovnu
cmp
adc
cmp
pop
incl
mov
xchg
xor
cmpsb
dec
xor
mov
jle
loop
sbb
mov
in
std
loop
mov
jg
sub
cmpsl
std
jecxz
roll
jp
xchg
inc
mov
js
hlt
push
fmuls
xchg
ret
inc
dec
push
aad
pop
inc
outsb
pop
sub
inc
pop
pop
arpl
sub
cltd
aam
aas
add
mov
pop
mov
push
inc
shll
adc
jl
inc
mov
rorb
mov
xchg
ljmp
or
clc
jo
stc
jp
das
fs
sbb
dec
xchg
mov
jg
mov
call
jge
adc
pop
addr16
mov
mov
pop
and
xor
cli
xchg
aam
stos
pop
mov
pop
adc
in
sbb
add
inc
les
ljmp
rorl
stos
ret
jmp
inc
cmp
mov
add
xchg
mov
adc
rcr
pop
push
xchg
push
sbb
arpl
outsl
mov
xorb
mov
jl
mov
jne
lcall
jg
inc
or
inc
pop
dec
scas
pop
dec
mov
xchg
cmp
xor
xchg
add
call
mov
es
xchg
jns
dec
ja
cmp
jmp
push
aam
jo
pusha
push
hlt
or
or
test
jno
jecxz
sbb
mov
add
ljmp
mov
push
xchg
enter
sub
dec
cmp
out
jb,pt
or
sub
notl
dec
xor
mov
gs
imul
lods
xchg
dec
aas
loope
arpl
lahf
gs
push
xchg
lret
cmp
imul
divl
mov
out
push
lock
push
mov
dec
push
clc
hlt
mov
pushl
ljmp
jmp
push
dec
mov
push
sub
xor
jno
incl
adc
pop
shl
and
xor
jae
mov
pop
hlt
mov
mov
xchg
rcr
dec
mov
dec
xlat
imul
call
fimull
and
and
stos
adc
sbb
mov
xchg
bound
call
cmc
sbbl
cmpsb
pop
fistps
mov
imul
arpl
sub
ret
enter
stos
mov
pushf
push
enter
pushl
out
pop
cmpsb
xchg
fdivrl
clc
inc
mov
or
subl
inc
pop
decl
lock
xchg
lret
aas
xor
push
std
jb
sti
cmpsl
pusha
mov
xor
cld
sub
sbb
in
sbb
lods
in
xchg
push
addr16
lcall
pushf
mov
sbb
data16
jmp
or
jns
mov
xor
mov
fwait
jecxz
push
jl
inc
inc
jbe
jnp
call
ss
lret
dec
sub
cmp
ret
push
jmp
mov
mov
mov
or
adc
jmp
mov
pushl
adc
fdivl
mov
adc
dec
cmp
enter
push
mov
inc
into
dec
lcall
push
adc
fdivr
call
dec
push
loopne
pop
xor
lds
add
dec
dec
mov
jmp
addr16
add
xor
mov
cmp
idivl
sub
das
ficoml
inc
add
decl
lret
mov
test
sbb
out
mov
push
mov
fcomi
incl
out
pop
fdivrl
bound
and
scas
sub
aam
testb
std
mov
dec
push
xor
cmp
mov
popf
incl
or
or
mov
test
mov
divl
inc
mov
stc
xchg
or
iret
fidivrl
push
addr16
dec
sahf
push
popa
lahf
mov
repz
cld
push
adc
push
sbb
push
jmp
mov
cs
jb
fsubp
scas
ljmp
cli
mov
pop
nop
rclb
notb
inc
popa
gs
lret
mov
jecxz
jle
test
lahf
sub
out
outsl
and
ljmp
sbb
iret
fwait
icebp
xor
mov
popf
mov
sbb
sbb
call
jno
mov
ja
xchg
movsl
and
pop
mov
fs
lods
adc
jmp
jecxz
aaa
sub
jmp
gs
inc
push
inc
mov
xor
std
js
ljmp
push
xchg
das
fildl
jb
nop
sub
and
or
mov
jmp
mov
xor
sbb
dec
jno
popa
xor
imul
jg
hlt
lods
and
dec
and
and
fs
adc
mov
dec
xchg
inc
andl
leave
mov
roll
and
inc
mov
sahf
jge
xor
inc
stc
into
pusha
push
mov
xor
sub
cmp
adc
sbb
add
push
test
push
ficompl
faddp
test
stos
sub
xor
adc
add
sti
adc
addr16
mov
int3
ja
out
pusha
jg
imull
adc
cmp
movsl
hlt
add
cmpsl
xor
lahf
fldenv
lds
test
jns
sub
cld
sbb
mov
lea
mov
xchg
dec
int
inc
scas
cwtl
rcll
call
test
mov
xchg
int3
jp
dec
imul
test
mov
mov
or
sti
leave
es
jmp
clc
mov
mov
push
add
jnp
and
call
gs
loopne
pop
add
imul
iret
mov
cmp
je
icebp
decl
fistpl
mov
sub
mov
add
adc
push
mov
jg
sbb
adc
test
out
mov
add
test
pushf
lock
out
movsl
mov
outsl
cmp
pusha
sbb
clc
jg
cmp
push
mov
je
mov
lods
jno
jp
mov
xchg
data16
sbb
push
xchg
adc
sbb
and
sbbb
inc
pop
and
jl
or
ror
wbinvd
dec
cli
leave
xchg
sbb
call
inc
push
jg
pop
into
mov
dec
add
xlat
outsb
inc
mov
out
ret
aaa
popa
jbe
movsl
pushl
fdiv
fsts
cmp
xchg
cmpsl
pop
mov
cmp
outsl
popf
lcall
mov
mov
enter
xor
mov
inc
fstps
dec
gs
push
cmp
cmc
outsb
jg
sbb
into
mov
daa
repz
shl
or
jmp
add
add
loopne
mov
mov
mov
sahf
popa
jb
sub
jmp
mov
imul
movsb
pop
pop
iret
dec
bound
maxps
rcl
xor
jge
cmp
pop
js
jno
icebp
dec
inc
pusha
xchg
into
fistps
add
scas
add
fbld
repz
adc
mov
mov
das
pop
sbb
sbb
or
call
sbb
mov
insb
dec
inc
movsb
into
mov
into
add
lods
cwtl
mov
repz
incl
movsl
popf
icebp
dec
pop
push
fiaddl
jp
movsb
jmp
adc
pop
push
jecxz
movsb
mov
push
rclb
adc
rorl
lods
mov
cmp
xor
pushf
and
call
adc
cwtl
pop
ret
or
push
cli
cltd
mov
int
mov
incl
add
cmp
jns
xchg
cmp
xchg
out
xor
fisttpl
cmp
mov
xor
xchg
mov
jle
mov
sub
cmpb
in
enter
decl
out
int
cmp
loop
mov
ss
or
scas
mov
push
jp
addr16
fcomip
jmp
dec
xor
push
lods
mov
inc
dec
xor
fistpll
daa
push
push
lock
stos
adc
je
jbe
test
incl
adc
es
hlt
in
pminub
fidivl
pop
add
mov
fnstsw
leave
add
pushl
lods
xchg
sbb
in
cs
xor
inc
mov
lock
and
shl
inc
negl
scas
mov
push
jle
inc
scas
in
stc
ret
loop
jo
mov
repnz
pushl
hlt
cli
cs
enter
call
addr16
int
mov
mov
leave
in
push
lret
push
sub
pushl
dec
call
xlat
pop
or
xchg
call
outsl
jl
push
mov
push
and
out
popa
cmp
lock
push
icebp
pushl
sub
idivl
cli
and
push
push
cmp
sbb
ljmp
sbb
lret
stos
mov
ja
mov
or
loop
scas
and
cmpsl
lock
insl
mov
mov
rol
sbb
xor
or
xchg
push
or
bound
outsb
xchg
lcall
decl
sbb
xorl
adc
and
sub
jnp
ljmp
call
outsb
nop
pop
inc
sub
add
adc
xchg
pushf
js
or
lcall
push
or
fnstcw
loopne
xor
mov
jns
aam
aas
ljmp
and
ljmp
lcall
inc
or
aam
pushf
xchg
testb
pop
pusha
and
cmpb
addr16
add
scas
jmp
push
in
xchg
pop
dec
sub
add
mov
es
mov
pop
jno
add
call
sub
add
add
pusha
inc
in
mov
pop
inc
inc
out
lcall
jmp
lret
cmp
fldenv
cmp
or
inc
mov
clc
mov
mov
lock
add
fs
mov
fidivrl
aaa
sbb
dec
popf
nop
jnp
fsts
push
cmpb
cmc
decl
subb
push
leave
sub
pushl
and
fsubl
call
lds
jns
mov
mov
mov
jmp
icebp
call
mov
jne
js
jae
scas
sub
mov
mov
dec
fildll
push
call
mov
xchg
push
andb
and
aas
dec
sbb
jge
push
inc
lcall
mov
inc
mov
cmc
add
pushf
in
xchg
stc
sti
mov
jge
mov
fadds
pop
cmpb
nop
jnp
test
loopne
mov
repnz
cmpl
mov
push
enter
cld
imull
add
and
cmp
push
call
jp
push
in
dec
pop
sub
xor
jp
pop
lcall
jo
popa
and
pop
fimull
jae
dec
mov
push
movsb
insl
pop
ret
mov
xor
mov
push
cltd
mov
loopne
insb
test
add
incl
test
mov
mov
mov
push
mov
and
leave
push
cmc
pop
cmp
testb
fstl
loop
imul
or
cmpsl
stos
sub
inc
pop
dec
cld
sti
es
pushl
incl
movsb
push
insl
fdivrl
test
pop
test
push
enter
stos
inc
and
andl
leave
xchg
jle
push
dec
loop
dec
sub
cmc
push
scas
lock
cmp
push
sbb
ljmp
je
cwtl
loopne
test
inc
or
or
add
bound
incl
add
fs
lret
xor
negb
out
call
cmp
in
xchg
fistpl
scas
xlat
xchg
push
int3
iret
arpl
stos
out
jle
in
and
scas
scas
xorl
ljmp
std
or
push
dec
out
push
mov
adc
mov
xchg
cmp
ljmp
sahf
ret
inc
xchg
jmp
jae
ffreep
cmp
sbb
mov
lock
mov
loopne
cmp
lock
cli
xor
pop
cmp
stos
lcall
pop
push
test
sbb
orb
inc
inc
ds
mov
ljmp
rolb
out
fwait
push
and
scas
or
xor
pushl
loopne
test
adc
xor
mov
addb
adc
jb
call
add
sbb
pusha
repz
adc
decl
mov
and
mov
pusha
dec
repz
pop
aam
mov
cmp
push
jecxz
imul
pushf
test
test
jp
in
xor
push
mov
into
loope
mov
rorb
sub
add
popa
clc
push
jmp
les
cmp
or
cmp
jg
push
pop
ret
pushl
push
out
aaa
movsb
popf
aam
xor
ret
add
and
scas
rolb
subl
push
daa
push
push
ljmp
mov
sub
and
ljmp
mov
push
popa
imul
sub
xlat
outsb
jb
add
shl
cltd
insb
dec
dec
cld
pop
jnp
mov
aas
xchg
les
ja
lods
add
adc
loopne
jmp
xlat
int3
inc
jg
or
notl
int
mov
sbb
add
repz
jmp
es
push
inc
inc
fsubrp
stos
sbb
mov
fnsave
mov
dec
push
sbbl
incl
imul
es
jb
cmp
mov
call
jg
test
push
inc
add
mov
dec
je,pt
call
mov
addb
inc
cmp
repz
std
aam
dec
sbb
dec
pushl
bound
cmp
imul
test
jecxz
cmp
std
decl
insl
loop
hlt
and
xchg
xchg
fadds
cmp
loopne
pop
push
mov
addr16
cmp
loop
pop
scas
clc
pushl
hlt
xorb
add
pop
test
pop
push
hlt
clc
stos
mov
adc
mov
xor
push
xor
incl
sbb
push
mov
scas
outsl
pushf
pop
movsb
pop
mov
test
sahf
int3
jmp
ljmp
push
imul
or
push
stos
xchg
into
clc
jg
and
jns
add
ljmp
decl
xor
mov
jg
pop
push
fst
or
sti
dec
push
add
pushl
hlt
mov
pop
adc
scas
or
ljmp
hlt
call
cmp
xor
push
xchg
xchg
test
outsl
movsb
adc
adc
mov
cmpsb
mov
xchg
cmp
dec
fadd
in
push
cmp
dec
movsl
int
sub
jb
mov
iret
jns
decl
lock
adc
adc
adc
push
das
sub
out
in
fcoms
mov
outsl
mov
or
mov
mov
decl
scas
xchg
js
dec
push
adc
cmpsl
daa
movsl
popf
jl
pop
out
push
cmp
add
lcall
sub
sub
jle
mov
jae
push
stos
mov
cmpb
incl
sbb
cmp
jl
cltd
int
cmp
cmp
loope
jns
xlat
mov
out
ljmp
sbb
add
xchg
jnp
add
jle
inc
in
das
inc
and
into
adc
lret
add
pop
std
decl
cmp
imul
sahf
aam
clc
rorb
pop
fists
mov
xor
cli
or
pop
dec
mov
fdivl
mov
adc
ljmp
lret
lret
dec
in
pop
ss
xchg
xchg
inc
xor
xor
pop
mov
push
push
icebp
sub
mov
ret
ljmp
loopne
xchg
in
hlt
icebp
or
test
je
inc
int3
mov
icebp
adc
cmp
pushl
mov
out
divl
add
jno
sub
ja
ret
lock
js
push
adc
in
adc
pusha
or
mov
mov
sbb
cltd
es
push
and
jnp
hlt
pop
jmp
loop
xor
outsb
add
jmp
or
out
or
das
rolb
loope
mov
dec
add
jmp
xchg
push
mov
or
lahf
jns
lret
mov
add
mov
mov
cmp
lods
test
movl
adc
cmp
add
arpl
popa
stc
mov
fbstp
cs
ljmp
imul
or
ljmp
pushl
lahf
add
jp
js
jno
mov
lea
cmp
add
jl
ljmp
jns
stos
jb
je
mov
push
cmpsb
addb
dec
test
call
pop
insb
ljmp
frstor
loopne
data16
cmp
dec
rolb
in
push
push
ljmp
lock
stos
cmpsl
xor
or
lcall
repz
or
pop
es
dec
cwtl
cmc
sbb
mov
dec
jmp
int3
cmp
cld
inc
sbb
push
shlb
pushl
loope
jg
ljmp
bound
aad
jg
cmp
mov
dec
xor
incl
out
push
mov
mov
sbb
inc
out
sbb
pop
jg
lds
rolb
adc
jbe
nop
mov
icebp
orl
arpl
in
ret
xchg
jg
in
ret
add
xorb
xchg
mov
ret
cwtl
push
lock
or
daa
dec
lds
out
sbb
and
std
mov
mov
dec
popf
adc
lods
nop
mov
dec
xor
call
cmc
or
xor
mov
rolb
xor
lcall
stos
dec
mov
aam
popf
jle
imul
call
gs
dec
mov
inc
subl
jmp
ret
std
stc
push
xchg
scas
lods
enter
jo
cmc
jno
cli
pop
jne
lods
stos
cs
xor
fidivl
jg
das
aam
pop
sbb
in
shrb
jmp
pop
idiv
fwait
inc
cld
and
insb
dec
adc
inc
or
fsts
jl
mov
orb
in
push
dec
push
shll
xchg
cs
bound
clc
ljmp
and
inc
imul
sub
and
rol
aaa
push
xchg
ljmp
cmp
inc
inc
xor
ja
int3
push
rolb
clc
cmp
jnp
mov
add
scas
insb
movsb
cli
decl
gs
addl
andb
xor
jo
jecxz
out
dec
aad
push
xchg
inc
xor
scas
jecxz
stc
repnz
pusha
xor
fisubs
vmaxsd
aad
jno
inc
aam
add
jg
nop
mov
inc
xchg
int
pop
ja
imul
js
out
lret
int
cld
push
mov
xchg
inc
sbb
cmp
aad
pop
push
dec
loope
outsb
cmpsl
call
out
outsl
in
jg
or
push
mov
ret
mov
lock
ljmp
sar
adc
lds
fcmove
ret
jl
or
addr16
insl
mov
mov
lea
repz
jp
test
jmp
repz
ss
adc
std
pop
loope
imul
lea
sbb
push
nop
pop
adc
andb
jg
lods
incl
xchg
or
in
sub
and
outsl
cli
pushl
xchg
test
xorb
popa
outsb
test
nop
jb
cld
and
jmp
bound
testb
in
stos
je
jge
mov
cld
mov
inc
jp
dec
fistpll
lcall
jl
sub
xchg
imul
xor
mov
mov
shlb
sbb
mov
insl
or
add
sub
das
sti
lret
leave
xchg
cmp
jg
dec
fwait
cmp
ficomps
mov
fs
jmp
sbb
lods
jnp
push
aad
orb
inc
add
cwtl
out
mov
incl
out
mov
cltd
xchg
push
add
push
das
outsb
jns
cmpsb
call
mov
fdivr
out
pop
sbb
sbb
sub
dec
push
sbb
enter
loope
cli
lret
cwtl
push
sbbl
fmulp
add
mov
sub
and
inc
push
sub
cwtl
jmp
jle
cmp
sub
fstenv
adc
fsin
lahf
cmp
jne
popl
jg
ljmp
das
fucomip
adc
iret
fbstp
fisubs
fsubl
fdivrs
push
jge
sbb
or
jno
aas
fistpl
push
aam
inc
idiv
mov
or
sbb
out
cmp
or
jge
les
clc
xchg
jge
jmp
aaa
inc
mov
or
nop
cwtl
inc
lcall
out
outsb
fsub
push
lods
decl
ja
aad
jl
js
mov
fs
push
add
repnz
stos
call
repz
iret
push
mov
mov
inc
dec
push
adc
mov
pop
jns
xor
ljmp
lock
push
push
mov
xor
rcrb
aaa
jg
cmp
jmp
mov
add
pushf
cld
in
shrl
das
mov
dec
sar
add
pop
inc
add
add
jl
loop
inc
fcomi
enter
stos
jg
cmc
lahf
arpl
mov
insl
mov
jmp
out
adc
in
adc
mov
inc
push
bound
loopne
clc
cs
sbb
cltd
pop
in
inc
fsubs
jns
jg
mov
mov
out
out
pmaddwd
dec
movb
ljmp
mov
shl
js
adc
aaa
pop
arpl
incl
fnsave
xchg
pop
fisttpll
xchg
jg
pop
loopne
pop
es
add
ljmp
mov
jb
dec
adc
jmp
sbb
lea
pop
decl
xchg
mov
iret
or
clc
push
pushf
mov
lret
fsubs
mov
mov
add
outsl
mov
mov
lret
sub
jg
sub
psrad
out
push
push
or
mov
js
iret
inc
ljmp
pop
leave
lret
add
stc
loope
push
adc
or
adc
xchg
pop
call
iret
pusha
xor
cwtl
add
arpl
pop
sbb
ljmp
repz
lcall
and
xchg
ja
fwait
cld
mov
fisubl
inc
mov
dec
xchg
push
xorl
ret
popa
jle
pop
push
xchg
arpl
add
aas
or
cmp
popa
aaa
xor
mull
movb
push
mov
add
pop
es
mov
pop
mov
fsts
ljmp
sar
fiadds
lahf
pop
jecxz
cmp
push
je
add
mov
jmp
icebp
sub
xchg
jge
movsl
loop
sbb
pop
xchg
fiaddl
mov
xchg
jno
xchg
and
pushf
insb
dec
xchg
dec
jo
pushl
fs
test
dec
or
mov
lcall
fistl
decl
push
lret
jns
cmc
pushf
lret
mov
into
cmp
test
inc
repnz
jg
std
add
push
sarl
add
pushf
jp
jns
mov
sar
pushl
out
repnz
dec
mov
ljmp
sub
or
stos
dec
std
das
mov
jg
sbb
js,pt
and
mov
add
push
stos
ret
sarb
or
enter
popf
in
push
dec
js
enter
mov
or
jno
xchg
sub
or
xchg
sbb
mov
mov
push
cmp
outsl
mov
ret
arpl
arpl
push
negb
pushf
movsb
ss
gs
push
or
cmp
inc
jmp
adc
push
pushl
jmp
movsb
sti
adc
jb
mov
mov
jno
sub
adc
cmpsb
dec
je
inc
subl
dec
cmp
test
xchg
lea
dec
mov
scas
jle
inc
outsb
cmp
ret
sub
lahf
sub
mov
cld
incl
js
mov
leave
cmc
jo
pop
fcompl
ljmp
push
out
cmp
add
sub
ljmp
or
add
ljmp
lcall
dec
daa
xchg
int3
mov
mov
push
xor
pop
js
inc
loopne
add
std
jp
push
mov
outsb
push
sbb
or
jo
cli
ds
and
push
decl
mov
xor
int
insb
je
popf
mov
mov
lcall
mov
fdivs
jns
jp
subb
inc
movaps
decl
mov
sbb
and
not
repnz
push
popf
sbb
loop
insl
mov
sti
xchg
insb
cwtl
out
jne
sub
xlat
mov
sub
push
stos
sbb
fiadds
das
lock
push
shl
faddl
xor
jmp
cwtl
std
mov
or
dec
cmpsb
leave
xchg
jp
or
sbb
movntq
sbb
adc
outsl
fdivrl
lcall
xchg
push
sarb
dec
xchg
mov
jbe
repz
jbe
dec
pop
loopne
pushl
cli
cmp
add
sahf
push
in
movsb
and
pop
cmp
or
stos
cmc
mov
fincstp
out
cmpsl
ret
inc
addl
repnz
repnz
decl
jns
icebp
mov
dec
loope
mov
cmp
push
jae
jns
push
test
arpl
ljmp
decl
cmp
cmp
repnz
cmp
jns
cli
lds
xchg
sbb
call
or
lcall
mov
or
or
sbb
clc
pop
push
in
xchg
cmp
cld
jge
mov
mov
rcll
fcomip
mov
dec
adc
dec
in
pop
jbe
sub
inc
subl
call
and
add
sub
cmpsl
in
mov
jp
jge
mov
ja
sbb
lcall
inc
stos
and
xor
cmp
ret
jp
popa
ret
mov
or
mov
int
pop
roll
and
fsubrp
dec
dec
dec
in
es
mov
add
fnstsw
mov
repz
push
xchg
mov
push
dec
out
sub
jo
jbe
or
pushf
or
aad
popf
into
push
ds
xor
cmpsb
incl
cld
mov
xchg
sbb
mov
cmp
jg
call
pop
and
mov
mov
shl
rolb
cmp
loopne
jns
mov
lock
std
test
jmp
adc
ljmp
rdmsr
push
imul
insl
push
and
pop
arpl
push
pop
jg
ret
dec
repz
into
call
or
mov
notl
xor
lret
xchg
enter
mov
mov
shll
aad
movsl
outsb
mov
mov
mov
mov
and
dec
push
sti
fnstcw
mov
les
stc
into
mov
ja
cmp
sar
xchg
outsl
push
or
mov
scas
mov
fldcw
mov
fbstp
sbb
jp
jmp
popa
jmp
test
push
nop
sbb
inc
out
mov
xchg
jg
ret
cmp
lea
adc
imul
lods
jg
ljmp
jg
bound
xchg
gs
pop
test
fnstcw
lret
adc
push
ret
incl
pop
cmp
add
lea
inc
jge
idivb
loopne
lock
aaa
andl
scas
jmp
imul
lds
jle
sbb
add
cld
cmpsb
xor
repnz
dec
sbb
or
jmp
daa
sbb
jbe
cmp
jne
nop
sub
outsb
inc
or
data16
fcoml
inc
loopne
xor
add
inc
leave
pushf
popf
sub
cld
or
cmp
pop
adc
outsb
sub
sub
addl
or
leave
mov
mov
ds
xor
jmp
jg
xchg
fucomi
lcall
mov
call
and
lret
enter
mov
iret
nop
pushl
push
sub
cmpsl
rclb
mov
scas
test
inc
incl
or
bound
mov
roll
popa
sbb
das
add
js
inc
push
fs
jl
adcl
xchg
repz
std
pop
std
cmp
popf
mov
test
xchg
subl
jl
fistl
pusha
push
shll
pop
jg
sbb
sbb
sub
jg
and
das
jae
adc
lahf
in
popa
jae
incl
push
cmpsb
mov
test
push
dec
das
pop
sarb
or
imul
test
aad
lcall
aad
je
dec
cmp
xor
push
lea
cwtl
mull
xor
lods
mull
rcll
sarb
mov
cmc
xchg
call
call
pop
ljmp
and
hlt
dec
pop
sbb
andl
dec
ret
imul
gs
data16
sar
pop
movsl
push
divb
push
adc
sbb
jle
cmp
int3
rcpps
adc
sub
pop
mov
pushl
adc
fisubl
mov
dec
ret
rorb
mov
bound
ljmp
sub
shrl
xor
cmpsl
es
fists
cld
jno
dec
dec
test
scas
sub
mov
test
jp
pop
call
ss
fnstenv
stos
fdivrp
cmp
pop
aam
std
push
sti
or
cmp
add
je
jae
outsb
dec
fbstp
adc
gs
mov
call
jmp
test
mov
sbb
mov
push
xchg
into
xchg
and
mov
xchg
push
xor
push
adcb
pushl
out
sbb
cmp
sbb
and
xor
hlt
lods
mov
aaa
cld
movsb
and
fisttps
fstp
ret
test
jmp
push
cld
dec
rcrb
sbb
andb
bound
call
sbb
cmp
stos
in
fmul
bound
or
test
insl
mov
push
in
mov
jo
outsb
std
sub
insb
and
cmp
cwtl
cli
mov
fisubrl
or
sbb
mov
mov
push
in
sarb
ja
xchg
ss
jmp
cmp
fimull
pop
mov
mov
mov
xor
movzwl
cld
pop
mov
xchg
lds
or
fsts
or
cmp
xchg
outsb
and
fistps
test
test
push
cwtl
arpl
and
lds
shll
dec
or
sub
mov
mov
inc
loop
loop
fbstp
add
add
je
daa
mov
pop
adc
sbb
sbb
std
xor
in
or
ljmp
imul
fisttps
mov
pop
fnstenv
and
sub
add
jmp
lret
pop
ret
stos
xchg
sbb
pop
mov
add
decl
popf
scas
call
sahf
xor
mov
popa
js
fld
xor
mov
outsb
jecxz
pop
adc
jg
cmp
jb
xor
cmpsb
aaa
mov
stos
pushf
jge
fadd
scas
fidivrl
adc
pop
das
sar
incl
mov
fimuls
out
shl
jecxz
pop
stos
cld
adc
sub
rcll
push
xor
decl
divb
add
ret
sbb
or
push
in
in
xchg
xor
push
ja
xor
xchg
ret
or
into
in
add
into
fcoms
sar
cmp
push
mov
cmpsl
xor
xor
pop
scas
out
inc
mov
jg
mov
inc
cltd
inc
add
call
jns
int
mov
inc
add
xor
test
ja
or
inc
lret
push
ds
sub
cmp
pushf
lret
les
dec
ficoml
jnp
data16
cmp
inc
lds
ficomps
xor
fwait
hlt
adc
mov
fldcw
add
aaa
mov
daa
decl
adc
xor
lret
adc
or
idivb
jp
sbb
pop
pop
xchg
mov
xor
pop
mov
das
mov
lock
mov
sbb
xchg
fwait
mov
pushl
mov
es
outsl
jg
inc
ja
shl
imul
cmp
mov
popf
jo
mov
clc
call
movsl
rorl
pop
cmp
in
jno
cmpsl
or
repz
scas
and
mov
rcl
das
add
popa
cltd
adc
mov
out
adc
psllw
call
sub
dec
xchg
add
js
int3
xchg
out
clc
clc
incl
mov
pop
sbb
pop
lds
out
or
test
out
cmp
lret
decl
push
and
lret
int3
xor
xchg
pushf
repz
popf
out
jbe
cmc
jbe
mov
out
out
mov
or
pusha
jecxz
jnp
not
or
ljmp
stos
imul
xor
inc
dec
inc
dec
enter
mov
adc
mov
pusha
jb
dec
clc
push
stos
ja
stos
lea
mov
stc
lea
ret
cmp
push
push
jge
sub
cmp
incl
or
shrb
sar
or
fsts
xchg
mov
scas
lds
outsb
sbbl
nop
adc
aam
lahf
pop
je
inc
pushf
jg
jle
lods
inc
cs
in
pop
stc
test
arpl
sti
mov
push
mov
mov
inc
xchg
push
sub
push
fwait
call
xor
jne
mov
xor
jg
jns
dec
mov
and
daa
dec
sti
jl
jle
out
pop
outsl
xchg
cmp
mov
jae
fucomp
ss
stos
adc
loop
repz
mov
jg
lahf
cmc
dec
jno
xchg
xlat
loop
dec
ljmp
mov
lea
in
mov
cmp
rcrl
cmp
adc
jg
mov
adc
les
push
jno
repnz
scas
sub
fdivrl
mov
mov
xchg
insl
inc
decl
sahf
or
and
jne
fwait
adc
pop
adc
mov
ds
setae
jg
out
mov
dec
mov
test
and
xor
inc
sub
incl
add
and
adc
sbb
out
xor
jmp
or
jg
fdivr
decl
addr16
mov
rcrb
movsb
clc
flds
subl
xor
xorl
or
mov
mov
and
xchg
add
dec
testl
test
mov
es
ds
pop
lcall
dec
ljmp
dec
add
pop
fidivrs
adc
xchg
and
push
dec
mov
pop
adc
add
es
js
adc
stc
aas
xchg
test
ljmp
sub
or
into
movsb
adc
lods
aas
mov
fldcw
mov
call
mov
cltd
int3
sbb
push
dec
sbbl
cmpsb
jbe
lret
mov
xor
ret
cs
or
fldt
pop
dec
lods
dec
arpl
clc
test
incl
jo
movsl
test
aad
push
and
in
jo
mov
add
cmp
push
jne
adc
shlb
push
icebp
push
or
adc
cmp
push
lret
mov
pop
push
popa
mov
or
add
add
push
cmpsl
fcmovb
nopl
xchg
jp
push
or
mov
jne
sub
cs
cltd
dec
outsl
scas
cmpsb
pop
pop
fcomip
xor
insb
cmp
pop
in
sub
stos
dec
push
rclb
jns
imul
xor
lds
cmp
loopne
lcall
jecxz
inc
xor
or
adc
loopne
ljmp
andb
adc
insb
or
aaa
lcall
leave
cmp
cmp
inc
push
mov
std
dec
push
leave
mov
sbb
sbbb
mov
jle
mov
jge
or
jmp
push
pop
jg
inc
cmp
pop
lcall
loopne
cmp
stos
imul
push
or
incl
mov
mov
push
mov
xchg
push
mov
imul
jnp
fdivrs
mov
dec
outsb
idiv
jge
add
adc
pop
sub
sub
mov
aad
subl
aad
sbb
push
push
cmp
adc
pop
ficoml
pushf
nop
das
push
mov
out
or
sub
ljmp
cmp
xlat
push
lods
imul
das
call
mov
push
pop
clc
or
push
loope
movsb
ds
fcomps
les
daa
scas
xchg
jmp
cmp
lock
add
enter
lcall
inc
mov
push
aaa
dec
ljmp
push
pop
lret
adc
jle
outsb
push
fisubrl
jg
in
insl
mov
xchg
mov
les
out
sbb
and
jmp
push
sbb
lods
ret
bound
cli
cmp
jmp
xchg
filds
int3
popa
xlat
repz
inc
xor
dec
xchg
sbb
mov
cmp
inc
mulb
inc
pop
fcomip
decl
and
or
dec
mov
mov
pop
cmp
mov
cmp
movsb
lock
ds
pop
leave
aad
data16
ljmp
call
mov
mov
jo
sti
jecxz
pop
lahf
loope
in
xchg
pushl
dec
dec
shll
xor
pop
cmp
push
xchg
xchg
sbbl
jnp
pop
pop
repz
jns
push
sbb
stc
mov
jnp
jns
mov
out
mulb
hlt
pop
inc
xchg
popa
call
jp
mov
jmp
rcrb
mov
mov
sbb
adc
cld
push
ljmp
shl
fsub
insl
loopne
xor
jne
dec
dec
adc
mov
rcll
adcl
cld
push
inc
dec
mov
xchg
push
sbb
fwait
in
lcall
mov
inc
mov
decl
sarl
insl
cmp
test
cmc
push
and
fnstsw
push
ss
shlb
ljmp
pop
xchg
roll
and
test
xor
and
in
test
lcall
imul
xchg
inc
out
inc
test
fistpll
rolb
pop
xor
ja
sbb
arpl
mov
xchg
nop
movsb
and
mov
sub
decl
fsts
xchg
pushf
lock
xchg
pop
repnz
mov
jg
mov
scas
daa
inc
mov
mov
fsubr
hlt
xchg
mov
test
aas
data16
pop
hlt
mov
fsts
test
std
mov
jmp
fxch
mov
ljmp
and
std
xchg
sti
es
sbb
cmp
in
int3
scas
mov
pop
xchg
lock
inc
push
lcall
out
xor
jno
lret
cld
test
pop
lock
lcall
in
xchg
inc
mov
int
mov
and
fwait
and
icebp
fwait
cmp
popf
jae
out
in
cli
arpl
ljmp
rcrl
xor
pop
mov
sub
popf
sub
adc
jmp
push
scas
add
insl
cmpsb
test
xchg
test
shrb
inc
sbb
clc
dec
pop
and
and
sub
xchg
lds
jae
orl
xchg
cmc
call
nop
mov
aas
bound
sbb
call
mov
cmp
loop
sbb
bound
mov
mov
fdivr
cltd
testb
adc
push
mov
testb
mov
xlat
mov
decl
jne
popf
enter
cmp
in
lods
mov
fisttpl
adcb
push
pop
adc
and
mov
pop
add
add
xchg
lret
push
fsts
loope
int
aas
xchg
dec
call
bound
mov
negl
jb
or
cmp
hlt
ljmp
call
call
shrl
jecxz
in
push
repz
cmp
stc
add
ja
adc
push
push
lahf
inc
into
dec
repz
cwtl
mov
mov
sub
incl
jns
aad
fmulp
arpl
jge
ds
cmp
incl
mov
stc
push
jl
test
aam
inc
dec
outsl
ffree
ljmp
xchg
adc
mov
xchg
fwait
jno
loopne
dec
cmpsb
ficomps
cmp
scas
add
call
push
shll
pop
xchg
icebp
cmp
mov
sub
jb
insl
stc
ljmp
popf
jl
lds
push
js
add
out
pop
lods
mov
xchg
sbb
cmpsb
jl
dec
inc
mov
cmpsw
xchg
push
dec
mov
subb
aas
push
jmp
test
lcall
mov
mov
cld
gs
in
jge
jecxz
mov
in
jo
mov
arpl
lcall
xor
jmp
xchg
mov
dec
insb
inc
stc
xchg
mov
mov
int3
ret
in
bound
shll
loop
push
xchg
sub
inc
push
dec
inc
lds
idivb
xor
stos
pusha
mov
or
xchg
loop
into
pop
mov
sar
mov
popa
mov
mov
mov
outsl
inc
xor
sub
jno
jbe
sbb
pushl
ret
inc
inc
xchg
data16
push
fldl
test
or
mov
mov
xchg
out
andb
fwait
or
lcall
les
lret
cs
cli
sub
xchg
xchg
or
pop
hlt
ljmp
pop
std
jg
popa
je
daa
or
or
ss
pop
cld
test
fldt
in
pop
sar
lcall
inc
cmp
out
dec
sub
mov
arpl
lock
out
test
sbb
stos
jp
add
mov
dec
cmp
xchg
mov
jmp
inc
mov
and
push
pop
sub
jno
in
in
cs
daa
addb
ja
ret
ret
jb
mov
aas
dec
pop
lret
clc
incl
pop
xor
jns
mov
cwtl
das
and
jne
sub
div
mov
jae
fcomps
push
xor
dec
idivb
test
mov
call
js
ja
mov
call
inc
les
stc
inc
mov
loop
inc
mov
mov
clc
add
pop
notl
xchg
push
ljmp
jno
out
mov
dec
rorb
pushf
add
xchg
divb
ljmp
insb
jb
or
in
fsubl
jge
rolb
jecxz
xor
and
decl
adc
popl
sub
mov
popf
adc
lcall
iret
daa
cmp
sub
or
add
inc
insb
xlat
stos
push
ret
mov
insl
in
cltd
jo
lcall
in
aad
test
mov
jp
cld
cli
lahf
xor
mov
inc
jl
mov
pop
pushf
push
test
adc
pushl
jae
pop
ja
push
push
loope
xchg
pop
pop
pusha
adc
mov
fdivrl
int3
lods
sub
call
sub
inc
jae
push
sti
mov
and
fcomip
jp
ljmp
mov
or
add
jle
mov
push
aad
pop
std
pushl
cli
mov
or
fiadds
sub
shrb
sub
dec
sub
decl
mov
daa
inc
pop
adc
int3
sahf
fwait
mov
outsl
push
mov
imul
lahf
sub
xor
sbb
adc
jp
sbb
nop
fsubr
icebp
in
pop
inc
mov
mov
movsb
addr16
stos
inc
clc
cmp
iret
jo
jge
out
mov
jl
shll
and
call
mov
in
sbb
push
imul
xchg
mov
jecxz
call
test
mov
mov
imul
sarb
cmp
filds
stos
pushl
lods
in
jg
insb
and
mov
decb
aaa
sub
push
mov
cld
lret
add
pusha
cs
pushf
xchg
lret
ja
rcrl
rol
dec
and
aam
push
ljmp
mov
dec
das
gs
shll
xchg
out
push
pushf
dec
inc
aad
test
fisttps
call
inc
sbb
sti
dec
cmpsb
ret
jecxz
mov
push
cmpsl
or
and
or
repnz
into
loopne
and
sub
xor
mov
jbe
mov
sub
xchg
scas
push
dec
jecxz
nop
scas
fildll
push
jo
cmp
jl
sti
icebp
js
lcall
xor
jmp
or
jecxz
jae
lcall
cmpsb
leave
xor
mov
xor
jp
daa
sahf
pop
sbb
dec
push
and
loope
add
outsl
inc
ret
jge
xor
scas
lret
cwtl
bound
scas
xor
pop
mov
sub
mov
push
cmp
gs
sub
aas
jmp
xchg
and
adc
cli
sbb
push
in
push
sar
mov
or
frstor
adc
xchg
pop
lock
call
cmp
ret
inc
push
lahf
push
test
divb
incl
mov
dec
dec
jmp
xchg
xchg
nop
xlat
das
pop
shlb
inc
or
popf
enter
stc
pop
fdivp
ss
repnz
cli
ja
jp
cs
jmp
in
mov
mov
mov
cmpsl
mov
jmp
fsubrs
push
cmpsl
cmp
sbb
incl
adcl
ja
mov
mov
adcb
mov
push
xchg
xor
sbb
icebp
lret
xchg
in
mov
ret
push
xchg
push
cmpsb
mov
mov
lcall
mov
pop
popa
movsl
stos
sarb
cld
cmpsl
cli
mov
mov
aaa
mov
das
xor
shlb
out
add
scas
dec
jge
nop
mov
mov
jmp
dec
mov
cltd
mov
hlt
jae
jnp
hlt
out
das
lcall
pop
cmp
or
xchg
or
cmpsb
sahf
pop
adc
add
decl
pop
xor
pop
les
mov
cmpb
out
xchg
sub
jne
inc
test
sub
mov
stos
pushl
repnz
std
mov
lds
sub
mov
cmp
and
xor
xchg
fneni(8087
sti
sbb
mov
add
call
mov
dec
incb
pusha
call
or
test
sbb
divb
aaa
xorl
mov
sub
stos
mov
test
scas
mov
cmp
repz
cmpl
push
mov
adc
pusha
sti
adc
mov
jg
xlat
xchg
inc
out
lcall
push
loope
in
test
pushl
push
test
cmpsl
idivl
jp
xor
add
jg
lret
repnz
or
cmp
jecxz
sub
in
imul
xchg
or
pushl
dec
add
std
pushl
mov
scas
and
icebp
push
dec
mov
sti
push
ja
repz
int3
jbe
hlt
call
adc
pop
jno
xchg
cmp
push
sbb
cli
pop
lret
mov
sbb
mov
xchg
dec
inc
in
mov
jbe
push
cli
decl
mov
rcll
adc
mov
cmc
std
popa
fsubrl
hlt
push
jp
sarl
pop
cld
test
jno
test
nop
adc
je
mov
iret
ret
cld
jl
push
fs
lcall
push
enter
out
lcall
or
cmp
popf
pop
je
clc
stos
mov
lcall
sbb
pushf
outsb
jmp
in
imulb
inc
inc
push
pop
orl
dec
addr16
pushf
or
test
pusha
add
xorb
sbb
add
mov
dec
out
mov
popf
arpl
loope
inc
decb
aaa
movsb
jmp
decl
cs
adcb
shlb
jle
add
mov
or
cs
iret
scas
dec
mov
jp
shr
lcall
call
push
popa
inc
into
mov
lock
ds
pop
mov
and
pop
popl
and
or
aam
pushl
lods
sub
pop
ds
fisubrl
sbb
push
jmp
gs
adcb
sbb
jmp
jmp
push
xchg
outsl
sarl
outsl
fdivp
nop
test
gs
sbb
pop
inc
in
aaa
mov
gs
inc
popf
dec
and
add
adc
lea
clc
jb,pt
jmp
jb
fbstp
adc
jge
adc
sub
or
ljmp
pop
mov
dec
ja
sub
loopne
iret
cmpl
xor
sar
sbb
add
cmpsl
aaa
jno
pop
sub
cwtl
pop
cli
dec
nop
adc
les
call
push
pushf
rolb
loopne
mov
cmp
rcr
stos
das
incl
and
pop
cmp
mov
cs
pusha
lret
ja
xorb
adc
lods
imul
repnz
mov
lcall
scas
arpl
test
mov
xor
insb
jl
mov
mov
push
leave
repz
orb
xchg
push
mov
iret
lea
inc
mov
xor
mov
pop
mov
daa
dec
mov
inc
or
in
push
sub
outsb
add
fdivs
int
mov
test
pushl
and
out
adc
dec
xchg
test
dec
jbe
xchg
jbe
cltd
dec
cli
mov
pop
ss
xlat
dec
fsubs
xchg
call
push
push
insl
inc
int3
rcrl
and
hlt
outsb
lret
bound
lret
mov
pop
sbb
lea
sub
push
jae
and
jno
lcall
jmp
test
and
mov
js
xor
adc
pop
inc
shrb
jl
xchg
cmpsl
stos
repz
ja
clc
icebp
enter
filds
rcrb
adc
loop
incl
movsl
mov
adc
hlt
les
pop
adc
sbb
mov
push
repnz
movsb
cmc
imul
xchg
ret
mov
push
add
sar
test
push
inc
andb
dec
xor
mov
push
mov
add
or
arpl
stos
sbb
ja
adc
xor
or
call
sub
mov
xor
push
mov
sub
xor
push
pushl
divl
insb
sti
pop
sub
movsb
cmp
es
jmp
xor
mov
mov
pop
xchg
jo
pusha
fnstsw
aas
jmp
cmp
sub
add
andl
ret
out
cmpsb
sar
mov
movsb
adc
mov
and
imull
cmpsb
sub
jp
xchg
jns
fidivrs
decl
test
rcrl
outsl
int
inc
xabort
and
xor
adc
pushl
inc
sbb
inc
pop
or
mov
es
add
cmpsb
fsubrp
fcomip
ljmp
dec
jae
pop
jecxz
adc
mov
sub
jo
cmp
pushl
cmp
mov
testl
xor
insl
enter
mov
pop
fwait
stos
aaa
ljmp
add
sbb
and
or
fsub
nop
sub
data16
andl
mov
xor
test
mov
mov
mov
lock
incl
shlb
test
out
cmp
rclb
out
mov
loop
inc
and
dec
int
dec
sub
je
dec
xor
data16
pop
mov
fistpll
adc
xor
out
mov
cmpsl
aam
jb
insl
mov
xchg
popa
xchg
addr16
es
decl
mov
adc
and
ljmp
cld
out
xchg
imul
inc
loop
or
pushl
add
push
inc
out
ret
sbb
or
cmp
add
lods
loop
add
adc
cmp
ljmp
repnz
daa
cmp
jne
or
inc
movsb
jno
int
loopne
jnp
jbe
test
repnz
cli
inc
clc
call
cli
aas
and
add
and
mov
cmp
imul
outsl
orl
push
daa
pop
decl
inc
test
aam
and
shlb
add
sub
dec
adc
je
decl
repnz
push
xor
popl
int
xchg
xchg
stos
push
jno
std
inc
outsl
sub
sub
cmp
push
xor
cli
into
mov
rcll
bound
decl
push
test
pop
push
jae
int3
mul
subb
fwait
out
xchg
bound
and
push
cld
or
add
inc
pop
cltd
movsb
test
repnz
fcoms
push
xchg
add
mov
andl
lcall
sub
sbb
dec
repnz
dec
je
add
mov
mov
fisttpl
push
or
mov
cs
repz
xorb
pop
jbe
cmp
decl
and
outsl
pop
cmpl
pop
stos
iret
cs
jbe
xchg
mov
adc
cmp
outsl
mov
mov
loop
lods
xchg
lahf
scas
out
sub
popa
adc
mov
jo
jnp
pushl
rcrb
mov
xor
lahf
mov
std
decb
lds
sar
leave
sbb
xchg
lods
inc
das
es
mov
pushl
insb
mov
or
xchg
mov
and
in
aam
xlat
loope
xchg
sub
add
lcall
push
movsb
mov
js
nop
add
notl
mov
dec
push
or
aaa
jl
xor
js
mov
mov
add
aaa
add
movsl
shlb
stc
mov
hlt
jecxz
add
pop
pusha
mov
insl
add
and
out
adc
push
mov
xor
cmp
je
lret
pop
xchg
imul
cli
adc
xchg
sub
mov
lcall
leave
adc
pop
adc
pop
cmp
ljmp
ror
or
xchg
adc
and
dec
jmp
das
rcrl
mov
lods
add
push
std
sbb
scas
and
nop
mov
adc
dec
inc
pop
dec
loop
mov
pop
lea
xchg
push
fwait
outsl
popa
pop
sub
push
pop
test
sbb
shlb
lods
les
jmp
sbb
xor
imul
adc
out
adc
imul
lcall
add
xor
lea
add
add
sub
jmp
call
jae
mov
mov
xor
orl
mov
nop
incl
scas
nop
lahf
ret
or
mov
int3
ret
xchg
mov
sub
jae
popf
mov
popf
xchg
push
cmp
scas
dec
pop
dec
mov
or
add
jns
test
popf
cltd
xchg
lret
mov
xchg
enter
andb
mov
mov
adc
stos
stos
xchg
mov
jp
das
bound
pop
mov
pop
loopne
dec
jmp
lahf
jbe
add
les
ds
mov
lret
xchg
call
dec
mov
add
pop
and
xor
jle
sar
fists
leave
add
push
push
je
sub
pop
mov
inc
dec
stos
rol
pop
xchg
in
or
inc
test
lcall
idivl
rcrb
loop
xlat
in
lahf
stos
lret
adc
mov
cmp
push
stos
ds
jmp
push
mov
jecxz
pop
enter
sub
je
xchg
clc
push
aam
pop
inc
push
push
shl
sub
cli
jmp
ficompl
into
loope
aam
test
lret
mov
mov
test
loopne
pushl
shrb
sbb
jnp
sbb
jo
or
std
sar
lcall
mov
fcoml
int3
cwtl
dec
or
jo
or
lahf
sti
leave
rolb
call
jg
pushf
daa
inc
push
mull
adc
ss
mov
cmp
mov
adc
jns
loopne
cmp
inc
jle
or
js
and
mov
cld
arpl
pop
push
pop
dec
outsb
adc
testb
scas
jp
lcall
cld
cmpl
sbb
pushf
insb
out
pop
dec
cmp
jno
andb
lods
test
filds
je
inc
inc
cmc
cmp
rcll
shl
cmc
ljmp
push
adc
lahf
pop
out
out
in
pop
call
enter
sahf
jns
fbld
mov
shll
dec
mov
testb
mulb
mov
call
insl
mov
adc
les
sub
sahf
push
and
in
xchg
stos
stc
and
roll
cli
or
jp
mov
add
xor
pushl
enter
pop
lahf
cmp
leave
incb
mov
idivl
xor
sub
cmp
sub
es
add
push
xor
jecxz
mov
push
decl
in
fld
push
dec
mov
pop
jae
mov
jmp
std
mov
cli
xchg
rolb
arpl
out
pop
lret
xor
call
sti
leave
or
push
je
sti
sbb
xchg
aam
nop
jb
imul
pop
xor
scas
incl
cmpsb
les
cmp
fcomp
jne
hlt
xor
stos
into
popa
add
in
out
mov
sbb
loope
pop
clc
je
mov
mov
decl
jp
inc
add
popl
jns
repz
out
jp
mov
add
rclb
jp
ljmp
jmp
mov
movsb
sub
icebp
pop
mov
mov
cmp
sbb
pop
sbb
xchg
test
jle
cli
xchg
mov
gs
cmp
lcall
jmp
jb
sub
mov
clc
or
ds
jnp
ds
xchg
icebp
pop
insb
push
push
lock
shl
lock
push
mov
xchg
shlb
push
pop
pop
shll
or
pop
sub
imul
lret
mov
push
fs
adc
jg
decb
jb
bound
movsb
xchg
push
mov
pushl
jle
xor
inc
pop
movsl
sar
repz
int3
test
test
icebp
jg
push
or
stc
jg
subl
xchg
scas
mov
cld
cld
adc
incl
fisubrl
jp
lret
sbb
mov
insl
sbb
push
mov
xlat
cwtl
xor
jle
or
call
test
sbb
pop
ja
aaa
les
xchg
xchg
das
clc
decl
rcll
cli
sub
adc
sbb
scas
lock
xor
call
jns
stos
sub
mov
mov
popa
stc
dec
sbb
sbb
mov
add
push
insb
in
clc
add
xchg
push
out
pop
sbb
mov
mov
paddusw
pushl
push
jge
insl
jecxz
push
inc
mov
xchg
lds
movsb
pushf
or
ficompl
pop
pop
js
push
pop
jne
cli
stos
push
fs
fwait
outsl
or
or
add
int
in
lock
sub
pop
mov
scas
testb
jbe
mov
push
adc
xchg
inc
dec
dec
idiv
lcall
js
xchg
inc
popf
cmp
sbb
cmpsb
loopne
inc
cmp
loop
push
mov
decl
dec
pmaddwd
mov
in
fimuls
jne
adc
jmp
sti
add
add
aam
pop
mov
fwait
sbb
aam
sar
ja
imul
sti
xor
mov
je
lock
imul
mov
and
jg
push
mov
pop
test
mov
dec
add
adc
fcomip
fdivl
popf
rclb
lret
pop
insb
push
xchg
xor
pop
mov
and
sub
arpl
mov
add
ret
add
xor
cli
push
mov
cld
ljmp
js
jecxz
bound
mov
jbe
ds
xchg
add
in
pop
sbb
imul
jg
and
lods
push
out
std
lea
jle
into
iret
jbe
les
xchg
outsl
or
mov
jg
lock
sub
in
in
cld
popf
lds
testb
jbe
or
aad
je
xchg
pop
inc
dec
lret
xchg
repz
or
xor
pop
add
adc
inc
jp
push
jo
sbb
mov
xlat
jmp
sub
cmp
subl
xchg
rcl
add
incl
sub
pop
mov
dec
fcmovnbe
ror
lods
xor
mov
lcall
fimuls
lcall
outsl
mov
out
fbstp
in
xchg
cli
jecxz
dec
aaa
aad
sbb
popa
jne
dec
in
dec
sar
decl
fisubl
mov
js
leave
push
cli
or
mov
add
pop
cmp
lcall
push
pop
in
lock
pop
jns
xchg
adc
pop
push
jb
push
push
pusha
jmp
lcall
decl
sub
pop
cmpsb
aad
pop
and
mov
repnz
mov
fcoms
lcall
pop
mov
pop
pop
dec
jnp
mov
xlat
xchg
dec
dec
push
test
and
pop
or
and
lcall
daa
pop
adc
lret
data16
sahf
mov
iret
in
je
cwtl
pop
enter
dec
pop
fnstsw
popf
push
mov
or
mov
sahf
outsb
clc
iret
out
daa
loope
pushl
pushl
or
cltd
mov
test
hlt
add
repz
mov
in
dec
movsl
adc
mov
and
and
je
negl
dec
push
out
push
push
mov
sub
das
fcomip
call
cmpsb
cmp
mov
out
inc
xchg
xor
mov
inc
lret
mov
jg
js
and
jno
and
mov
xchg
daa
dec
mov
mov
mov
push
aas
cmp
rolb
adc
movsb
xor
popa
aad
jecxz
ret
jne
pushl
inc
loope
cmp
test
cs
fcomip
dec
add
xchg
sub
fdivr
call
adc
and
imul
addr16
fsubrs
out
lods
cmp
pop
aad
fildll
mov
adc
ljmp
call
or
lds
push
mov
lret
xor
push
mov
add
mov
adc
lds
push
dec
cmp
xchg
mov
pop
stos
popa
jns
dec
xchg
and
pushf
clc
and
shlb
je
adc
incl
push
push
loopne
insl
mov
in
adc
mov
adc
add
incl
pushf
loop
push
sarb
mov
std
jne
push
rolb
and
xchg
push
or
xlat
fbld
lods
popf
fisubrs
pop
out
or
dec
add
pushl
ret
data16
popa
inc
test
mov
mov
push
and
cli
jb
pop
hlt
mov
pop
int3
lds
daa
add
mov
hlt
pop
lock
bound
xchg
sbb
pop
lahf
mov
fistl
mov
ljmp
bound
push
inc
jns
in
shll
pop
sbb
jmp
sbb
ja
mov
loope
and
jg
and
aaa
jne
dec
push
adc
or
pop
mov
shlb
lret
adc
inc
or
fcompl
or
imul
mov
mov
inc
out
ljmp
adc
xchg
in
jecxz
and
idivl
shl
cmp
mov
cmpsb
push
xchg
fcmove
mov
int
pop
gs
mov
fwait
shrl
lods
lods
cli
mov
lcall
aad
sbb
push
push
rcrl
mov
mov
pop
icebp
scas
push
call
stc
stc
test
jo
sbb
ds
call
dec
dec
cmpsl
mov
enter
out
adc
mov
mov
push
test
ljmp
nop
cmp
es
xor
andl
add
jns
in
jp
lcall
jbe,pn
push
aas
cmpsl
dec
mov
pop
pop
jno
cmp
out
push
jns
add
ljmp
mov
mov
fldcw
inc
pop
fwait
mov
std
cmp
decl
inc
cmp
out
sub
pop
push
and
adc
mov
decl
into
popa
pop
test
and
add
sub
nop
cmp
adc
lods
sar
decl
lods
loopne
mov
pop
lock
ss
in
fisubl
cmp
push
xchg
push
dec
inc
push
mov
movsl
pop
nop
sub
cmp
cltd
cs
mov
cltd
lods
rcl
xchg
push
jg
mov
movsb
xchg
outsb
sub
out
aaa
sub
jo
aaa
out
pop
test
call
subb
rorl
mov
cmp
sbb
push
ljmp
mulb
inc
push
mov
popa
xor
aaa
inc
add
pop
mov
lea
adc
aas
adc
call
repnz
xchg
adc
cmc
mov
repz
push
and
push
lcall
aas
or
jne
jl
push
or
loope
popf
mov
addb
call
adc
push
push
and
gs
sbb
aam
pushl
cmp
fldt
jl
sub
fistpll
js
xlat
cmpsl
lock
xchg
dec
fldl
jmp
dec
sahf
pop
push
mov
sub
movsl
mov
xchg
gs
outsl
xor
in
out
jp
cltd
movsl
sub
fbstp
shll
xor
fisubs
inc
xor
test
jno
aad
cmp
dec
call
ret
inc
inc
sub
push
mov
jle
std
jne
sahf
jbe
jle
into
in
xchg
movsl
mov
sbb
inc
stos
mov
xchg
into
push
add
inc
ret
mov
add
ljmp
rcrb
outsl
xor
xchg
ret
adc
add
add
incl
jno
jno
lcall
stos
cmp
loopne
int
xchg
cmpsl
pop
imul
cs
shlb
dec
or
stos
aas
mov
mov
lcall
decl
rcrb
mov
sub
xchg
sbb
stos
ss
mov
sbb
imul
jl
push
fdivrl
mov
fwait
mov
inc
mov
testb
inc
fisubl
pop
push
pushf
cwtl
dec
clc
fdivrs
inc
leave
repnz
adc
pop
jmp
add
add
outsl
add
push
aam
xor
repnz
mov
mov
inc
push
sbb
dec
pop
cmc
mov
xchg
lret
idivl
pop
xchg
out
push
ret
jl
lcall
jg
incl
iret
adc
test
adc
stos
mov
mov
mov
mov
imul
lea
leave
cmp
cs
mov
les
cmc
fwait
push
out
sbb
icebp
notb
arpl
insl
imulb
aam
inc
jmp
arpl
call
es
outsb
inc
push
push
dec
dec
sub
std
pop
lods
icebp
rorb
jg
sbb
rcrl
or
mov
hlt
inc
imulb
ret
lods
xor
dec
sub
xor
je
cld
cmpsl
lods
sbb
and
les
sub
jns
dec
push
cmc
mov
sub
insb
mov
push
pop
cmp
mov
pusha
push
cld
dec
imul
fistps
ret
stc
in
pop
xchg
push
mov
ljmp
sti
cltd
pop
fs
loope
lods
pop
sub
xchg
out
pushf
dec
sub
decl
cmp
dec
adc
outsl
mov
fsubp
mov
or
mov
pop
test
lock
jo
lock
lcall
jl
clc
in
stc
enter
jns
dec
in
stos
xchg
int
pop
sub
int3
cmc
push
or
aam
movsb
cltd
push
pop
into
jo
mov
nop
pop
dec
sbb
nop
sar
in
add
xor
xchg
fxsave
xchg
test
push
fldt
dec
mov
cld
jmp
mov
insl
inc
mov
out
mov
retw
add
call
int
js
lods
popf
popf
lea
and
cwtl
sub
mov
cwtl
push
iret
mov
aas
cwtl
into
addr16
xchg
push
movsl
mov
push
ret
or
sub
popa
pushl
mov
adc
je
movsl
jns
mov
xor
cmp
cld
int3
ljmp
loopne
adc
clc
add
xchg
aam
mov
call
pop
adc
ljmp
test
test
ljmp
jmp
imul
sub
icebp
jnp
ljmp
mov
adc
scas
jb
add
ret
lret
outsl
xchg
pop
mov
sahf
or
in
inc
mov
cmp
and
cmp
fnsave
push
pusha
adc
inc
add
mov
das
stos
fidivs
rclb
popa
xor
cltd
test
cmp
jmp
mov
imul
pop
mov
xchg
ljmp
xchg
int
add
sbb
lods
cmp
xchg
mov
call
enter
ljmp
decl
add
mov
cld
mov
xchg
push
iret
xor
add
js
xchg
test
clc
push
push
pop
mov
imul
add
or
in
xchg
xor
out
outsb
cmp
adc
add
lcall
arpl
in
mov
mov
pushl
and
mov
stos
and
mov
fbld
loope
adc
mov
or
call
cld
dec
cmp
push
fmull
mov
add
push
adc
mov
pop
call
and
lcall
dec
lock
test
jo
pop
lcall
int
and
cmp
push
inc
repnz
inc
rcll
shll
xchg
xor
pop
adc
push
push
mov
lods
cld
mov
push
popa
push
xlat
or
and
out
mov
mov
and
add
outsl
notb
xchg
pop
insb
dec
ret
filds
outsb
movsb
in
insb
jmp
shl
je
pop
sar
call
dec
or
add
outsl
pushl
lods
test
jge
clc
inc
shl
popf
lcall
cs
fbstp
pop
dec
call
repz
jp
imul
data16
mov
cmp
lds
mov
pop
dec
mov
fnstenv
mov
and
clc
mov
push
aad
es
repnz
test
lock
pushf
int
ss
adc
in
ret
in
lcall
lock
ds
xor
in
clc
or
pop
call
pop
subl
jmp
inc
rcrb
jo
mov
adc
aas
mov
aas
mov
stc
mov
jmp
mov
jno
cmp
repz
mov
clc
bound
lcall
sahf
scas
cmp
mov
mov
movsb
xor
and
and
mull
push
arpl
decl
mov
adc
push
mov
popf
ja
jp
dec
jp
xchg
imul
mov
xchg
cmp
xorb
in
dec
lret
cld
sbb
sbb
and
fstpl
lcall
xlat
sbb
xor
nop
outsb
sbb
out
jge
cltd
psadbw
cltd
pop
jle
mov
dec
or
add
or
aad
jnp
xor
mov
inc
inc
mov
nop
xchg
gs
arpl
jns
jecxz
call
mov
push
mov
mov
mov
push
lcall
sahf
cmp
pop
add
popa
mov
cmp
ljmp
rcrl
jo
hlt
cmp
jmp
dec
cltd
push
or
decl
adc
imul
mov
jg
add
add
ds
inc
je
mov
pop
lock
jbe
fidivrl
xlat
push
enter
enter
jae
popa
or
testl
fistl
push
or
pop
xchg
push
arpl
lahf
js
pop
pop
jae
jne
cmp
shlb
pushl
icebp
mov
shrb
pop
xor
bound
iret
pop
dec
mov
mov
mov
fxch
jno
lret
out
out
faddl
int
cmp
test
pop
sbb
and
rorl
sub
scas
sub
in
and
fists
gs
dec
mov
jg
mov
dec
std
sbb
dec
lahf
xor
sahf
dec
and
or
mov
mov
adc
push
fstpl
popf
dec
pop
scas
stc
iret
mov
cmp
mov
cld
mov
fwait
push
push
or
fldt
rcr
and
sar
ljmp
xlat
mov
imull
sbb
fld1
dec
mov
jg
repnz
jmp
pop
sub
incb
inc
lret
adc
pushf
cmc
pop
xchg
rorl
jmp
sub
adc
or
call
xlat
ja
xchg
add
mov
push
das
pop
enter
in
pop
or
iret
mov
ljmp
mov
enter
in
pop
jle
jecxz
jns
pop
jle
scas
popf
out
outsl
rsm
fsubrs
icebp
xor
push
enter
adc
add
bound
cmp
leave
push
dec
je
sbb
jmp
je
jnp
std
add
jnp
enter
aas
adc
mov
cmp
pop
jb
and
inc
and
and
adc
jnp
scas
aas
call
fs
imul
xor
jo
sub
aaa
cwtl
andb
jnp
xchg
jge
in
dec
dec
sbb
jp
xlat
jnp
add
add
call
sub
lods
fbstp
pop
lock
dec
add
scas
aaa
aad
in
push
leave
or
push
mov
negl
pushf
xor
jmp
ja
test
xchg
mov
push
push
add
push
mov
xor
push
sub
lock
ljmp
scas
mov
add
add
ja
enter
icebp
lahf
cs
ljmp
pop
mov
shrl
cltd
adc
insb
in
fcmovnb
das
arpl
dec
arpl
clc
lcall
insl
stos
outsl
xor
mov
in
push
push
es
rorb
cld
ljmp
fdivrl
lea
mov
xorb
xchg
popa
dec
movsl
sub
ss
flds
into
mov
pop
aaa
outsb
divl
mov
push
incl
adc
test
dec
fsubl
jle
lock
push
ror
ret
popf
cmpsb
cld
in
movb
mov
push
xchg
jg
insl
mov
stos
movsb
fildll
xchg
jo
xchg
int
stos
sahf
jl
xchg
sti
mov
pop
push
add
test
in
decl
enter
test
adc
or
or
xchg
repnz
push
dec
shrl
dec
daa
and
sahf
das
cltd
push
pop
and
jg
les
jl
pop
lcall
adc
xor
add
mulb
inc
dec
jno
in
fdivrs
test
push
or
lcall
sbb
dec
arpl
jns
scas
xor
or
mov
hlt
mov
sbb
push
cmp
sbb
das
sub
roll
pushf
fiadds
sub
push
iret
push
jno
push
repz
les
xchg
inc
jno
add
icebp
clc
sbb
leave
lret
sub
sar
push
dec
add
mov
sub
or
lock
cmpb
push
andb
ja
insb
ja
add
mov
into
scas
jmp
mov
sub
mov
mov
repz
inc
mov
xor
cmp
popa
pop
pop
ret
sub
cli
pushl
dec
jecxz
out
test
jns
movb
shrb
dec
out
iret
sbb
pop
xor
movsl
push
data16
out
push
das
dec
dec
clc
ret
cmp
out
cmp
decl
jmp
sub
inc
jo
iret
mulb
fsubr
pop
repz
mov
pop
ret
inc
pop
cmp
scas
cmp
dec
and
lods
push
shrb
call
and
ljmp
xor
sub
outsb
mov
pop
dec
lcall
lods
in
jns
repz
out
ja
mov
mov
push
pop
sbb
push
call
inc
dec
and
mov
jb
in
cli
push
push
stos
insb
movsl
insl
push
mov
dec
and
imul
mov
xchg
and
sub
jg
adc
mov
nop
and
jp
sub
stos
fdivp
sbb
sbb
xchg
cltd
cmp
mov
ffreep
mov
icebp
inc
xor
adc
inc
xorb
stc
in
bound
incl
or
es
cmp
jno
pusha
lock
and
mov
mov
mov
lods
add
inc
add
decl
adcl
insl
loope
popa
ljmp
sbb
test
add
orl
sub
aaa
std
dec
insb
repz
cmp
int3
dec
push
rol
mov
mov
or
stos
adc
nop
into
adc
in
ds
and
pushl
mov
idiv
cmpsl
cld
inc
jno
std
pop
add
les
scas
iret
ljmp
data16
call
incb
dec
adc
leave
mov
pop
insb
adcb
dec
sub
ret
mov
incl
xchg
sbb
jns
rorb
jecxz
lds
out
ljmp
add
js
mov
sub
dec
jmp
and
dec
jmp
cmc
push
sahf
scas
cmp
or
incl
mov
orl
push
mov
xorl
scas
icebp
sahf
xlat
jmp
sbb
out
dec
incl
sub
ret
divl
dec
or
jno
lcall
in
lahf
pop
clc
or
iret
incl
and
mov
xchg
mov
lret
dec
in
inc
pop
outsl
ja
inc
fsub
mov
jmp
mov
inc
and
imul
mov
clc
jmp
in
sbb
push
pop
mov
mov
decl
in
sub
mov
es
cmp
add
xchg
inc
sbb
pop
loop
jp
aad
clc
ljmp
test
loop
arpl
cmpsb
adc
mov
stc
pusha
mov
and
push
xor
inc
test
lcall
das
jge
das
add
pop
cmp
test
data16
dec
std
repz
mov
fsubs
mov
sar
jmp
cli
test
rcrb
scas
addl
pusha
sbb
jg
in
cmc
mov
mov
arpl
loop
or
sarl
pushl
cmp
add
push
lret
add
sahf
cwtl
mov
sub
push
xchg
pop
cmc
pushl
mov
xchg
mov
and
cld
inc
dec
dec
test
push
mov
sti
mov
fistl
sbb
add
andl
fwait
pop
mov
inc
jae
icebp
inc
mov
cmp
xchg
mov
add
xchg
into
pop
jno
mov
jle
decl
sbb
ljmp
cwtl
mov
dec
inc
sbb
in
test
sahf
out
mov
push
mov
add
pop
xchg
xchg
ret
push
leave
lcall
add
push
xor
scas
fsubs
fiaddl
ret
dec
xchg
cmp
sub
fcomp
or
pop
dec
iret
fistps
loope
pushl
xchg
shll
cmpsb
fld
sub
mov
jno
out
xchg
ja
dec
test
mov
pop
sub
jl
xor
mov
mov
std
decl
std
push
mov
in
in
mov
or
les
pop
cwtl
call
or
leave
inc
lods
push
and
cmp
inc
fistpl
mov
xchg
out
push
jne
notl
decl
cmp
sbbb
iret
mov
nop
pushf
ljmp
add
jmp
dec
dec
jecxz
xchg
cmpsl
pop
inc
pop
push
cmpsb
outsl
rolb
push
dec
adc
sbb
cwtl
std
filds
mov
push
fildll
ja
ja
stos
push
mov
push
arpl
sub
dec
cmp
call
xor
push
add
cmp
js
fs
fsubrs
or
je
outsl
adcl
incl
mov
dec
sub
pop
in
negb
fisubrs
ficomps
push
xchg
enter
outsl
fsts
rclb
fisttpl
mov
mov
mov
sbb
in
inc
jl
xor
mov
test
mov
fsubrp
testl
sbb
mov
sub
mov
or
and
dec
add
pop
sahf
stc
jmp
cmpsl
sbb
add
mov
push
call
pop
and
push
ss
sbb
ret
sti
popf
cli
inc
cmpsb
iret
xlat
inc
movsb
int
adc
gs
decl
rolb
pushf
and
add
dec
lock
lahf
jne
lcall
cli
call
test
movsl
or
jle
ja
fs
loopne
fdivrp
mov
mov
xchg
xor
lret
xlat
dec
cs
push
adc
xchg
push
push
inc
mov
aaa
jg
leave
inc
rcll
je
jge
fiadds
mov
stc
pop
pushf
clc
push
mov
gs
jg
adc
lock
inc
pop
stc
adc
call
rcr
xor
ret
xchg
jne
sub
test
decl
loopne
jo
sbb
jno
mov
ljmp
xchg
cmp
data16
push
mov
or
sbb
push
in
push
cmp
mov
cmc
out
xchg
repz
clc
in
aad
fsubs
ljmp
sub
xor
ficoms
jl
fidivs
call
and
stc
lret
mov
stos
into
je
imul
clc
jae
popf
xchg
xchg
cwtl
jp
fwait
add
daa
sbb
xchg
xchg
loopne
jmp
loopne
int3
cltd
shrl
jg
test
pop
into
cli
push
mov
push
lock
std
ljmp
lea
cmc
adc
sub
dec
adc
push
mov
push
and
orl
jo
test
xchg
push
mov
jl
cmp
inc
xchg
or
add
dec
daa
jbe
into
inc
fcomi
fisubs
clc
scas
xchg
jg
fcos
decl
shld
outsb
dec
mov
outsl
jb,pn
aam
into
loop
enter
call
jl
imul
cmp
pop
mov
xchg
dec
popa
lret
adc
pop
call
push
lret
test
mov
rol
add
sbb
roll
data16
adc
pushl
jno
jmp
xchg
rorl
arpl
daa
and
notl
jns
push
xchg
jnp
cmp
lcall
std
bound
dec
outsl
ja
xchg
pop
or
cmpsl
aas
imul
mov
aas
jp
cmp
and
dec
mov
cmp
or
bound
fsubl
fiaddl
inc
sub
call
adc
mov
loope
vmovhps
jecxz
pop
pop
jp
test
cmp
mov
outsl
imul
jnp
sub
inc
nop
pop
test
or
pop
adc
or
decl
lods
mov
stc
scas
lea
cmp
icebp
jmp
xor
fwait
inc
jge
mov
dec
test
xchg
scas
xchg
xor
jmp
cmp
hlt
imul
in
mov
and
cmp
fst
ljmp
xor
nop
out
push
dec
mov
jp
js
mov
and
cmp
mov
lods
rcll
ss
xchg
jnp
sub
and
cmp
jnp
jg
stos
cli
sbb
data16
ljmp
inc
xor
xchg
xchg
sti
aaa
push
std
fadd
rcll
test
popa
lea
pop
xor
pop
nop
int3
das
cmpsl
lcall
jl
pop
test
shll
add
lret
repz
fwait
mov
insl
xor
cmp
dec
fstl
ljmp
daa
loop
out
and
mov
je
pop
jg
xlat
mov
and
incl
pop
sti
orb
mov
adc
mov
ror
js
fwait
lcall
test
inc
insl
pushf
mov
jp
push
sbb
sub
lcall
inc
or
cmp
cmp
xor
mov
out
fucomi
and
xor
add
mov
pusha
inc
jecxz
dec
xchg
bound
ja
cli
jg
cltd
push
inc
bound
xor
cltd
daa
ret
inc
loopne
seta
add
in
cmpsb
add
jl
mov
leave
clc
ljmp
fdivs
jnp
or
dec
sub
xlat
dec
mov
or
push
aad
add
sar
pushl
std
ret
stc
pop
mov
pop
inc
test
jno
out
insb
les
xchg
or
std
jmp
xor
xchg
cmp
stc
and
push
jl
xlat
cmpsl
mov
jb
repz
xchg
lock
mov
cmp
dec
and
pop
xor
push
sub
call
test
call
fs
xor
imul
inc
jg
pop
mov
xchg
dec
subl
std
jg
ljmp
or
mov
adc
mov
call
lock
jmp
icebp
ret
shrb
les
or
arpl
mov
cmp
mov
std
in
inc
lcall
mov
mov
adc
ljmp
add
clc
pushf
pop
pop
mov
je
xchg
jne
outsl
inc
rorb
imul
jns
imul
dec
js
sbb
stc
adc
mov
pop
and
push
sbbb
stc
sbb
pop
loop
sar
lcall
movsb
add
mov
inc
pop
ret
test
pushl
mov
sbb
pop
shll
mov
xor
and
lock
call
sub
pushf
subb
xor
aaa
movsb
xchg
mov
push
jnp
or
mov
out
fs
push
xchg
stc
int
or
xchg
scas
sbb
jmp
arpl
push
sbb
test
and
push
into
sbbb
adc
call
ss
enter
sbb
je
in
push
mov
mov
and
add
inc
add
adc
xchg
cld
mov
push
add
add
push
iret
repz
or
push
or
or
push
adc
adc
xor
out
push
adc
push
sbb
test
dec
sbb
cmpsl
stc
cmp
in
push
sbb
sahf
out
push
jns
jp
push
cld
sub
sahf
out
push
incl
add
in
popf
sbb
cs
nop
mov
xchg
xchg
sbb
repz
pop
or
sbbb
scas
out
out
add
add
movsb
jo
cmpb
aas
cmpsb
fisttps
mov
stc
sbbl
mov
int3
pop
push
outsl
cmp
cmp
mov
sbb
in
out
adc
mov
mov
ficompl
dec
leave
mov
mov
xor
fcomp
loopne
jb
jle
fcomi
cmp
add
lea
pop
decb
adc
add
push
add
int
or
rol
add
aas
bound
jg
pop
push
aam
pusha
mov
adc
cltd
in
arpl
inc
repz
fisttpl
jns
iret
or
mov
rolb
outsl
cvtdq2ps
outsl
push
adc
add
inc
daa
iret
add
hlt
mov
mov
and
pop
addr16
popf
out
out
or
add
rolb
out
popf
cltd
adcb
adc
jnp
or
ja
mov
lahf
pop
mov
jnp
nop
add
xchg
or
or
notb
or
ss
xor
sbb
cs
push
jp
push
enter
xchg
lret
nop
push
mov
inc
out
adc
and
mov
stos
adc
decl
or
mov
mov
push
add
popf
or
inc
aas
repz
push
add
push
xor
push
dec
pop
jle
and
push
jae
mov
push
or
or
adc
cld
sahf
or
add
mov
add
cltd
call
out
dec
or
adc
push
into
jle
sbb
add
inc
out
in
imul
or
or
lcall
mov
in
dec
mov
out
pop
sbb
push
push
xchg
addr16
xchg
push
push
mov
jmp
push
sbb
pop
inc
add
mov
sbb
add
push
push
push
inc
das
push
dec
dec
push
sti
pop
fstpt
xchg
xchg
xor
inc
push
stos
in
jle
fsubl
dec
add
inc
arpl
adc
xchg
sbbl
inc
lock
rdpmc
push
push
add
fwait
imul
aaa
xlat
push
into
outsl
or
pop
pop
insl
pop
pop
and
add
push
addr16
out
jb
or
add
sbb
jp
mov
dec
sbb
dec
cmpsl
or
into
xchg
push
adc
push
push
pop
push
insl
mov
inc
add
dec
or
cmpsb
fwait
loop
nop
jl
push
inc
or
push
repnz
push
mov
add
les
push
inc
lahf
sbbl
mov
pinsrw
or
or
mov
sti
cmp
adc
iret
adc
add
cmp
cld
iret
add
pop
pusha
push
cmp
push
int3
aas
xchg
xlat
jl
or
push
and
fucomp
clc
mov
cld
push
int3
and
sbb
add
testb
cld
sbb
inc
xchg
loopne
pusha
mov
pop
aas
xor
loopne
pop
cmp
xchg
aaa
or
cmpsb
mov
sbb
cmp
imul
clc
push
pop
push
pop
lcall
fiaddl
mov
inc
mov
out
pusha
orb
and
add
pop
push
add
adc
in
mov
pop
sbb
addr16
adc
adc
mov
std
xor
or
add
fisttpl
ja
sub
jno
mov
mov
xchg
in
pushf
cmp
imul
ret
jmp
imul
pop
push
mov
or
shrl
ret
push
xor
pop
ss
pop
xchg
pop
cli
or
fcmovnbe
aaa
cwtl
pusha
pop
sub
jo
or
push
ja
pop
add
fwait
xchg
or
mov
add
imul
push
outsl
jae
cmp
xchg
gs
xlat
push
shlb
jg
add
sub
rcl
dec
pop
add
inc
scas
or
xchg
lahf
inc
jle
clc
or
cld
decl
jae
xor
das
sbb
cmpsl
dec
decl
ret
or
rorl
mov
add
sub
or
sbb
fcom
push
cs
mov
inc
pop
inc
push
aas
lods
shll
aaa
cmpsl
aam
shrl
nopl
push
fsubrs
mov
push
mov
int3
push
lods
inc
and
es
xchg
mov
imul
push
ja
outsb
movsb
xchg
push
ja
push
sbb
cmp
or
in
je
addr16
or
aas
mulb
cmp
and
dec
xchg
jecxz
jo
cs
and
fisttpl
in
pushf
pop
ja
push
pop
sbb
js
mov
cltd
test
cmp
push
out
sahf
xor
dec
stos
in
call
scas
stc
pushf
mov
das
or
ja
pcmpgtb
or
jo
add
xchg
jmp
add
js
arpl
andl
mov
lods
push
out
fidivs
arpl
shrl
add
pop
data16
mov
or
mov
sub
mov
notb
xor
pop
ds
shr
incl
sbb
pop
dec
jg
inc
add
inc
iret
add
mov
inc
mov
pop
out
push
ljmp
push
push
push
inc
inc
add
sub
repnz
insb
push
inc
inc
add
and
add
sub
xchg
mov
jg
or
lcall
cmp
xcrypt-ofb
cmpsl
sub
shll
push
sbb
mov
xor
sbb
jo
int3
push
or
mov
fnstsw
or
iret
sbb
iret
insl
popf
cmpsl
stc
sub
push
sbb
mov
sbb
or
data16
ja
dec
in
fdivs
imul
cmp
or
adc
adc
or
mov
adc
jnp
adc
push
jns
push
inc
or
insl
loopne
inc
or
jnp
jg
out
push
lret
sbb
pop
testl
xor
lods
incl
or
xchg
dec
testl
sbb
sub
cmc
addl
xor
lock
hlt
pop
add
push
sbb
in
fiadds
inc
pop
mov
call
imul
out
and
push
test
jg
jg
fldenv
push
fcompl
inc
ret
cmpb
or
push
dec
inc
or
sbb
popf
push
inc
jbe
mov
pop
ret
adc
push
adc
xchg
cmc
inc
aas
pop
fcoml
xchg
sbb
or
push
cmc
or
popa
in
fisubrl
add
xchg
adc
xor
inc
push
jle
cmp
add
adc
dec
push
adcl
cmc
push
andl
inc
and
or
ds
or
xchg
adc
add
int
push
pop
cmpsl
testb
ja
dec
sub
or
ret
push
pop
push
xor
sbb
adc
mov
sub
adc
xchg
movsb
sub
cmp
dec
adc
sbb
dec
xchg
mov
pop
or
movsb
imul
or
andb
or
inc
dec
push
fdivrl
inc
or
sahf
lea
hlt
or
fidivrs
jl
jno
mov
sub
xor
lahf
mov
addr16
push
lahf
sahf
xchg
daa
lahf
fs
es
push
add
fucomi
jl
sbb
inc
xchg
pop
pop
pop
jo
loopne
hlt
sbb
dec
dec
pushl
dec
cmc
cmc
cwtl
add
xor
and
andps
pusha
xchg
dec
xchg
dec
push
add
sbb
and
add
repnz
push
cwtl
fldenv
inc
mov
es
push
or
adc
adc
and
sarb
shl
push
xor
divl
imul
mov
cmp
cmp
inc
popa
add
add
dec
js
jecxz
push
sbb
outsl
xor
arpl
idivb
adc
xor
repnz
notb
dec
notl
ficomps
call
outsl
mov
lock
push
push
mov
jae
sbb
pop
dec
mov
push
jg
inc
jg
inc
hlt
insl
rcll
mov
xchg
pop
mul
push
or
dec
sbb
add
xchg
xchg
push
or
add
sbb
out
adc
sub
jnp
mov
sbb
push
or
in
cmp
cmpsl
xor
sbb
ja
cs
mov
sbb
outsl
jnp
into
shrb
pop
inc
sbb
pop
sbb
xchg
and
lock
das
sahf
cmpsl
or
negl
and
dec
addr16
push
lock
add
das
idivl
out
jae
das
and
and
or
pop
and
push
sub
test
lock
push
sbb
sub
testl
sbb
pop
imulb
daa
push
daa
sbb
mov
mov
sbb
sub
daa
add
fcompl
cs
jp
fwait
lock
pop
fwait
dec
lock
dec
adc
es
sub
imull
jp
ljmp
xor
jae
xor
dec
push
jns
cs
repnz
cmpsl
mov
push
ss
divl
adc
pop
es
iret
or
adc
arpl
cmp
cmp
and
sbb
out
push
cmp
inc
or
ds
push
cltd
popf
or
testl
rcl
dec
or
movsl
adc
push
std
and
ficoml
add
inc
xchg
or
dec
pushf
inc
dec
arpl
cmpsl
pop
jecxz
sub
negl
dec
xchg
push
inc
dec
and
xchg
pop
es
test
push
mov
dec
pop
test
mov
test
adc
add
cs
adcb
or
fisubs
xchg
or
push
xchg
push
fmuls
sbb
insl
jl
push
ja
or
xchg
mov
cmpsb
pop
jg
ja
sbbb
cltd
scas
cltd
in
scas
pop
pop
pop
adc
jg
test
and
push
ja
mov
or
jg
outsl
and
or
lock
mov
insb
data16
mov
add
stc
jne
mov
or
daa
jo
push
ja
mov
and
lahf
push
ret
outsb
jg
outsb
fwait
pop
xlat
test
xchg
or
pop
in
or
add
add
mov
jg
push
and
out
mov
arpl
xchg
rolb
dec
mov
sbb
mov
mov
mov
fs
enter
jg
sbb
ltr
add
lods
jb
mov
pusha
lcall
and
xchg
pop
js
dec
ja
adc
xchg
pusha
bsf
push
lret
mov
push
div
out
insb
jbe
xchg
or
or
pop
imul
and
data16
xor
into
xchg
jo
clc
fs
or
outsl
and
pop
jo
dec
jo
sbb
push
jg
push
lahf
adc
std
imul
and
jo
adc
mov
adc
jbe
js
adc
add
adc
push
imul
negl
dec
push
sarl
sahf
out
or
testl
mov
sbb
push
mov
outsl
ja
iret
or
sbb
push
ucomiss
add
add
loopne
sbbb
push
test
pop
inc
push
adc
jo
dec
and
mov
and
adc
daa
roll
test
push
mov
incl
adc
inc
notl
dec
fprem1
hlt
sbb
xor
in
inc
cli
sbb
inc
xorb
add
or
in
dec
mov
pop
jp
adc
pusha
fwait
jmp
call
add
mov
cmp
or
sbb
cmpsl
mov
repz
cmp
pop
je
inc
push
mov
jb
push
push
xchg
or
fcmovnbe
insl
das
mov
xchg
and
adc
sti
mov
adc
mov
mov
and
testl
cltd
dec
xlat
cld
sbb
inc
sbb
out
push
sti
outsb
fnsetpm(287
push
inc
sbb
push
or
sbb
and
push
je
fs
jbe
cs
add
push
jb
sub
pop
in
pop
push
inc
pusha
sub
pop
lahf
cmc
lock
add
fcmovnu
mov
andl
fistps
fmulp
sti
push
mov
and
cmc
jmp
jecxz
bound
hlt
dec
movsl
stos
add
push
push
lret
not
insb
fbld
or
inc
ret
daa
mov
mov
hlt
maskmovq
divl
dec
xcrypt-ctr
cmpsl
fsubrl
out
daa
sbb
push
add
daa
adc
jne
fwait
or
jne
mov
adc
adc
push
push
fwait
add
jae
sbb
sbb
xorb
and
inc
clc
test
mov
dec
imul
lahf
and
jmp
fstps
and
jg
sbb
incl
das
aam
sbb
outsb
movq
or
movb
sbb
divl
sub
subb
pop
js
sbb
xor
aas
fidivrs
push
pushl
sbb
repz
fidivrl
lea
jo
cmp
hlt
inc
outsb
stos
push
inc
or
pop
bound
insb
ds
push
xchg
mov
adc
push
pushf
cmp
data16
and
bound
sbb
daa
das
mov
pop
push
cmp
sti
pushf
or
lcall
lret
xor
or
adcb
inc
pop
mov
popf
sbb
dec
out
push
sub
ja
fstpt
cmpsl
adc
jg
and
push
or
inc
sar
or
dec
inc
add
mov
or
mov
push
add
inc
push
and
inc
leave
ret
int
adc
push
push
or
ret
sbb
out
dec
inc
xor
pop
sub
inc
dec
ja
scas
popf
in
int
inc
inc
add
add
in
push
push
jp
pushw
jns
or
pop
in
js
push
fimuls
rolb
jno
jbe
lock
inc
sub
adcl
sub
push
loopne
testl
cmp
or
xchg
fneni(8087
pop
jo
or
or
jb
lret
push
add
mov
ret
add
xchg
dec
mov
loope
orl
pop
push
jmp
icebp
jbe
aaa
jbe
jecxz
outsl
arpl
or
add
mov
mov
xor
inc
arpl
fidivs
dec
sbb
sbb
sbb
jl
push
pop
add
mov
fwait
pusha
jnp
and
xchg
xchg
out
jmp
and
pop
and
lret
or
rclb
pop
sbb
pop
dec
adc
in
dec
xchg
pop
ja
add
mov
xor
lret
popa
jae
rolb
into
frstor
mov
dec
or
cs
cmpsb
add
and
xchg
lret
jg
sbb
je
jnp
out
inc
jnp
rolb
sub
sbb
push
cmp
fwait
mov
inc
pop
cmp
or
add
sbb
iret
xor
inc
dec
inc
ja
xor
addr16
or
inc
ja
repz
repnz
xor
push
jmp
cmp
push
inc
sub
add
cmp
and
out
aad
sub
push
aam
sub
jne
leave
pop
jle
pop
cmp
lret
out
es
pop
cmp
pop
cmp
test
inc
or
pop
inc
mov
cmp
bound
aaa
and
push
and
jns
inc
and
push
push
int
pop
in
inc
aam
data16
fbld
aaa
push
mov
aaa
push
dec
push
das
push
stos
mov
inc
or
xlat
insb
xor
lahf
mov
ja
jle
inc
addl
xor
inc
jo
jge
test
xor
mov
sub
push
fstl
and
push
sbb
fs
ret
into
adc
test
mov
xchg
push
inc
in
xor
xchg
push
add
jg
or
out
or
in
inc
adc
or
or
outsb
test
es
or
adc
adc
push
in
adc
pop
popa
adc
push
inc
or
jle
push
loope
xlat
inc
push
add
inc
out
lret
push
mov
loopne
adc
ret
mul
adc
fcoms
or
adc
sub
adcl
mov
push
xor
cmpsb
sub
push
push
cmp
and
dec
in
test
cmp
push
test
or
ret
adc
out
dec
int
xlat
sub
and
lods
out
test
fsubrl
in
push
scas
jecxz
imull
inc
loopne
or
xchg
sub
mov
or
or
xchg
xlat
push
clc
push
test
push
and
test
cmpsw
outsb
mov
mov
add
adc
push
push
in
gs
clc
pop
out
push
add
ret
adc
pop
mov
push
loopne
sub
cs
inc
pop
inc
neg
out
outsl
adc
pop
gs
push
rcr
es
ret
mov
dec
cmp
add
cmp
push
enter
add
cmp
push
rcll
or
add
cmp
inc
cli
lret
test
adc
out
nop
or
or
movsb
push
lret
xchg
dec
mov
cmp
out
cmpsb
out
out
fisttpll
push
fildl
add
push
push
in
adc
xchg
jle
or
in
ret
xlat
mov
add
jmp
mov
iret
push
movsl
jae
fimuls
add
dec
inc
repnz
or
add
or
pop
add
scas
sub
stos
push
int
sbb
or
cmpsl
push
cmp
scas
shlb
add
loope
sub
add
push
repnz
or
leave
pop
cmpsl
out
or
push
stos
movsb
sarb
leave
xchg
scas
cltd
adc
cmp
or
or
mov
jo
dec
push
pop
ss
cmp
sub
or
and
dec
or
outsb
ret
sub
xchg
stos
mov
inc
adc
adc
fldenv
pop
push
or
mov
dec
sub
ficompl
or
add
fldt
push
addb
cs
stos
inc
adc
scas
stos
inc
mov
mov
adc
inc
dec
test
pop
pop
enter
push
popa
stos
jae
push
inc
in
pusha
xchg
loopne
jnp
xchg
sbb
outsb
inc
and
orl
push
rorb
add
adc
xchg
or
dec
orb
push
inc
bound
mov
lock
inc
or
add
add
mov
dec
and
dec
cli
mov
ja,pn
pop
xlat
rclb
dec
push
cwtl
dec
das
sub
cmpsl
pusha
sbb
xor
pop
cmp
in
enter
and
inc
ret
pop
inc
es
fisttpl
push
pop
and
mov
pop
sahf
push
and
push
and
mov
and
push
and
cs
inc
push
dec
and
repnz
fidivl
and
dec
push
cmp
pop
loopne
pop
pop
or
dec
add
fwait
cwtl
jge
test
push
push
mov
adc
push
or
dec
sbb
add
loope
adc
cmc
jae
popa
js
ja
jae
push
lods
adc
repz
sbb
and
movq
and
loope
push
call
push
test
fbstp
fisttpl
jo
jp
xlat
jb
es
push
adc
sbb
or
cwtl
lret
outsl
push
add
cwtl
test
bound
mov
and
adc
rorb
mov
das
cmp
arpl
or
shll
mov
sub
loope
cmpsl
and
sahf
xchg
lock
test
mov
dec
and
pop
out
test
lret
call
add
jns
push
xchg
sbb
cwtl
loopne
out
xlat
pop
stos
push
fsubs
and
push
das
sbb
ret
mull
adc
xor
dec
cmp
sti
and
pop
add
ret
fistpl
adc
pop
mov
or
dec
and
cmp
xlat
and
mov
sub
jbe
test
adc
test
cmp
push
stos
lock
jnp
loopne
or
or
add
mov
push
loopne
pop
jo
adc
sbb
or
pop
cs
lock
adc
push
repz
push
add
sub
dec
ja
popa
push
clc
cltd
push
ja
ret
add
adc
ud1
or
cmp
mov
loope
dec
ljmp
loopne
aaa
adc
push
outsl
pop
inc
dec
xchg
inc
sub
int3
movsb
fists
jae
push
subb
jo
inc
out
loop
cmpsl
arpl
lock
push
lret
adc
rorb
sbb
jp
and
sub
mov
aas
cmp
out
or
push
icebp
push
lock
fstpt
popa
xchg
jo
jecxz
rorl
jnp
rcll
mov
push
arpl
stos
jo
and
push
and
lock
or
inc
cmp
scas
or
sbb
xor
inc
or
test
aas
es
mov
nop
add
test
mov
dec
addr16
ja
sub
in
sub
subl
dec
daa
popa
push
add
daa
addl
or
mov
dec
stos
sub
lcall
inc
or
imul
je
push
in
add
push
aaa
adc
out
jo
dec
stos
ret
or
faddl
popf
xor
push
jo
xchg
lock
adc
dec
fisubs
inc
inc
inc
es
inc
pop
mov
pop
out
or
add
or
add
or
push
in
add
flds
push
mov
cli
ficoms
adc
loop
popa
dec
cli
and
out
xor
sub
or
adc
sbb
or
or
dec
xor
and
push
push
rcl
push
test
faddl
mov
jnp
push
inc
pushw
nop
add
sub
xlat
pop
pop
ret
iret
ret
or
add
jecxz
add
rcr
add
repz
pop
push
movb
jae
add
pop
push
jae
xor
test
xor
outsl
mov
pop
push
adc
adc
pop
add
adc
and
push
sbb
cmp
or
inc
lds
scas
or
inc
xor
mov
mov
outsb
add
inc
scas
imul
xor
ljmp
cmp
xlat
and
and
mov
and
les
in
addr16
pop
mov
incl
inc
mov
outsl
cli
push
test
pusha
or
push
push
ja
add
dec
and
mov
andb
stos
imul
es
push
inc
in
aaa
adc
das
je
fiadds
push
ja
data16
fs
sub
xor
add
add
or
mov
or
cmc
inc
mov
mov
push
xor
and
fnsave
lock
fwait
int
dec
add
add
add
push
add
data16
insb
add
add
add
add
add
add
add
add
add
cmp
cmp
cmp
dec
add
insb
ss
dec
add
pop
add
gs
int
mov
data16
outsb
add
js
repz
add
xchg
push
pusha
pusha
add
pusha
ljmp
mov
into
incl
jg
lret
cmp
push
data16
int
jnp
mov
add
add
add
jbe
out
sahf
repz
mov
outsb
jbe
int
imul
roll
roll
xlat
add
insb
ss
out
icebp
add
add
add
sbb
push
cmpb
lock
dec
movsb
mov
shr
dec
sbb
add
dec
add
dec
mov
pop
repnz
cs
sbb
inc
or
dec
add
add
mov
add
add
inc
add
test
sbb
dec
sbb
out
int
add
xor
pop
pop
adc
xlat
add
pop
adc
adc
sti
ret
or
adc
or
mov
bound
or
mov
rcrl
add
js
popa
mov
shl
xor
mov
mov
stos
arpl
in
adc
adc
cmp
std
jecxz
inc
adc
add
add
xor
push
jo
push
stos
fsubrs
mov
pop
lahf
aas
adc
insl
xchg
ret
orb
dec
inc
push
or
jbe
inc
or
in
mov
push
adc
xchg
out
into
pop
and
inc
inc
xchg
xchg
and
idivl
push
mov
insl
push
pop
inc
roll
pop
or
jnp
bound
xlat
dec
lcall
adc
xchg
adc
inc
adc
sub
push
push
aas
movsb
and
push
out
or
pop
mov
add
lods
in
ret
and
dec
mov
das
out
ficoms
jecxz
pop
add
xchg
and
dec
dec
out
mov
rcrb
and
test
add
aaa
sahf
in
jb
push
push
sbb
sbb
sbb
and
cmp
scas
sbb
fdivl
xchg
mov
or
shll
push
sbb
dec
add
mov
add
test
femms
sbb
or
push
sti
adc
add
negl
shll
sbbl
adc
adc
add
push
or
inc
test
clc
adc
push
pop
andb
mov
sub
or
or
das
inc
or
je
or
or
movzbl
aaa
dec
sbb
sbb
sbb
sub
sbb
adc
adc
xor
dec
push
repnz
dec
xor
or
add
push
and
lahf
adc
fwait
iret
mov
push
or
or
adc
dec
andb
jns
dec
and
sub
mov
sbb
je
faddl
or
jg
lcall
inc
inc
add
fnstsw
and
jno
cmp
fbstp
sub
fildll
add
daa
push
jno
aaa
mov
pop
xor
fbstp
ffree
dec
scas
daa
daa
fildll
je
out
add
daa
sbb
jp
cmp
pop
add
mov
push
ss
je
sub
ffreep
out
loop
sub
fbstp
and
pop
inc
or
stos
sbbb
sub
out
mov
das
cmp
xchg
xlat
inc
test
inc
dec
cmpsb
iret
or
sbb
andl
xor
shl
stos
mov
sbb
aam
dec
xor
adc
xchg
or
dec
dec
or
and
dec
leave
add
mov
and
scas
sub
lahf
dec
or
bound
stos
nop
dec
dec
sti
test
dec
out
inc
xchg
jo
fwait
dec
mov
push
xor
aad
and
leave
xchg
dec
dec
dec
pop
enter
xchg
xor
dec
orl
sub
dec
outsl
or
test
andl
in
sbb
cltd
nop
and
es
push
dec
dec
inc
add
and
dec
push
dec
and
fs
dec
or
inc
mov
dec
push
dec
xor
push
dec
addr16
orb
dec
mov
inc
or
addr16
inc
and
or
push
jl
loopne
add
cmp
scas
addb
adc
add
and
push
and
sub
xor
add
inc
cmp
addr16
dec
jnp
test
sbb
repz
repz
add
mov
repz
mov
into
repz
and
and
push
orb
sar
sub
xchg
sub
ljmp
push
push
inc
add
add
push
add
add
mov
add
push
jbe
fnsave
pop
jae
out
ja
push
jnp
in
push
jp
jae
adcl
cmpsb
mov
pushf
orl
cs
xor
pop
nop
inc
jo
mov
add
shl
shll
push
movsl
mov
sysret
test
adc
or
cmp
insw
sub
repz
xchg
pushf
cltd
dec
add
test
ja
mov
ss
outsb
cltd
mov
mov
outsl
mov
movsl
mov
lahf
jne
insl
fstpt
xchg
push
movsl
mov
jns
mov
and
sbbb
arpl
lods
arpl
imul
outsb
lods
push
mov
sahf
test
jge
mov
cs
mov
mov
in
fidivrl
add
lods
pushw
lods
lcall
mov
mov
stc
jbe
pop
lods
push
scas
mov
push
mov
fcomip
in
push
push
mov
pop
test
add
dec
lcall
xchg
rolb
insl
movsl
rolb
outsl
movsl
fidivl
loop
xchg
rorb
roll
mov
divb
push
mov
negb
push
ja
out
add
push
jle
icebp
cs
loopne
outsb
mov
push
mov
test
incl
xchg
jmp
lcall
es
into
pushf
imull
pop
shll
into
xchg
push
lods
jle
lods
push
lods
iret
stos
jl
add
mov
mov
insb
out
cmp
movsl
rorl
push
mov
test
fsubp
mov
lret
int3
sarb
rcr
add
push
out
mov
push
out
notl
testl
je
jmp
out
fdivp
dec
mov
mov
into
cmp
mov
push
mov
lods
repnz
mov
rcr
add
cmp
int
rol
push
add
push
into
add
xor
add
into
inc
push
mov
lcall
fisubrs
call
fimuls
fsubp
push
push
push
mov
out
out
out
pop
jns
imulb
testl
mull
xor
cmp
incl
out
into
insb
out
mov
xchg
out
out
pop
add
negl
into
incl
out
out
div
fsubrp
aas
jg
ror
rcl
lret
lret
roll
add
add
rcrb
lret
mov
or
ss
pop
rolb
jnp
xlat
adc
xor
sbb
mov
adc
lret
add
add
or
pop
fcmovnu
add
add
cmovb
push
stos
mov
jno
lret
std
lcall
sar
adc
inc
sbb
sbb
stc
adc
lock
pop
in
test
or
or
negb
pop
add
and
lret
dec
adc
shrl
xchg
or
adc
daa
push
outsb
push
mov
add
add
add
push
push
add
lret
mov
mov
loopne
jo
add
xor
repnz
insb
jnp
decb
mov
push
inc
add
or
sahf
cmp
pop
std
fdivrl
sub
pop
inc
mov
xchg
adc
in
enter
add
mov
mov
jo
add
pop
or
xor
and
jo
add
lds
pop
lret
xchg
pop
push
pop
aad
cmp
add
sub
adc
pop
insb
mull
add
and
mov
popf
add
dec
push
or
xlat
or
out
push
pop
add
push
pop
jo,pt
xchg
lock
ds
sbb
cmp
jo
es
xchg
imul
rcl
xor
lret
xlat
int3
insb
mov
mov
dec
add
cmpsb
lret
jbe
fisttpll
loopne
add
cs
xor
cmp
jo
mov
outsb
add
enter
imulb
add
and
nop
or
enter
mov
mov
pop
test
push
sub
or
pop
mov
mov
jae
or
sub
sub
das
add
jo
shrb
push
in
mov
push
mov
testb
add
insb
xchg
jle
add
xor
cmpsb
lcall
sbb
push
decb
cs
jns
xor
add
sub
add
sub
sub
fidivrs
cmp
sbb
cs
stos
popf
andl
add
pop
enter
sbb
or
add
rcl
xor
cs
stc
insb
imul
add
sub
sbb
sub
xorb
and
imul
pusha
mov
sub
inc
xchg
add
push
aas
push
sub
pop
push
adc
xor
pusha
mov
or
testb
pop
xor
adc
sub
and
and
cmp
add
push
mov
in
test
outsb
push
hlt
stc
add
in
std
cmp
sbb
sti
or
ljmp
sbb
add
sbb
test
fcmovb
or
ds
or
mov
add
pop
lcall
and
cmp
add
add
adc
out
xor
cmp
es
or
push
es
fcmovb
add
call
ror
out
pushl
or
sti
inc
sub
stos
sub
mov
popa
and
adc
add
mov
sbb
mov
add
ds
or
push
cmp
enter
movsb
push
mov
in
les
push
jno
cwtl
or
push
adc
cs
repz
sub
and
fwait
push
loopne
sub
and
push
xor
jecxz
clc
ret
xlat
or
add
ds
or
sbb
and
adc
inc
enter
sbb
or
add
test
push
das
sub
inc
or
imul
xor
cmp
dec
sbb
adc
loop
sub
pop
xor
ret
sbb
pop
add
or
stos
push
inc
xchg
dec
sti
push
pop
and
pop
push
jbe
adc
xchg
push
mov
add
andl
loopne
bnd
sbb
sbb
push
cmp
and
add
test
push
stos
push
sysret
ret
in
nop
jne
sbb
aaa
stos
or
je
lods
xor
sub
cmp
push
stos
and
pop
push
sbb
adc
fildl
xor
or
xlat
jns
jo
dec
or
imul
and
dec
pusha
outsb
add
push
mov
enter
or
cmp
add
aad
fisttpll
adc
test
add
pop
adc
sub
xor
or
sub
ret
xlat
inc
mov
cmpsb
add
and
adc
iret
xchg
pop
enter
and
sub
stos
inc
sbb
push
push
movsl
ret
shll
roll
ss
dec
xchg
imul
shlb
dec
stos
xor
lcall
pop
sub
and
pop
sub
rcr
sarl
sbb
lock
das
inc
aaa
adc
les
fnstsw
addb
sub
popa
mov
sbb
push
sbb
arpl
bound
mov
inc
or
and
pop
mov
pusha
cmp
push
and
and
add
shll
sarb
cmpsl
adc
movsl
inc
inc
movsl
rol
pop
sbb
push
cmp
cmp
and
rcll
ja
cmp
ljmp
shll
adc
adc
or
cmpsl
mov
sahf
in
cld
sbb
ret
ret
fcoms
bound
cmp
push
mov
rorl
rcrl
notb
dec
and
shrl
adc
sub
mov
xor
mov
in
enter
out
xlat
jo
ja
sub
push
roll
jb
mov
daa
rorl
bound
daa
pop
or
add
mov
movsb
inc
or
push
dec
adc
xchg
push
fdivl
lock
hlt
add
sub
sbb
add
rol
rclb
and
adc
rcpps
add
push
sbb
mov
ror
insb
lock
cmp
or
fsubs
mov
sub
fstpt
pop
jbe
lret
lret
and
div
jo
xchg
pop
push
gs
outsb
pop
and
cmc
rorb
and
out
add
sub
lret
pop
push
or
jge
jns
in
xor
dec
outsb
mov
sbb
sbb
adc
or
mov
sub
call
push
sub
outsl
cmp
test
sub
idivb
ror
scas
mov
or
outsl
or
pop
sbb
sub
mov
xor
shl
add
add
add
scas
add
in
dec
push
sub
add
jge
add
push
fdivrl
push
stos
add
jge
mov
sbb
add
sub
sub
mov
pop
adc
xchg
test
cmp
push
pop
dec
jmp
int3
adc
push
hlt
cmp
sub
leave
or
mov
fdivl
xor
xor
sub
pop
add
outsb
jb
adc
xchg
sub
fcompl
ds
adc
adc
push
or
fwait
int
push
fsubrs
add
mov
nop
jge
pushf
add
add
imul
add
sbb
push
ss
xor
push
jo
cltd
inc
xchg
daa
cmp
rcl
xorb
sub
daa
lret
sti
pop
pop
daa
jge
pop
pop
int3
iret
add
or
mov
pop
leave
xor
adc
out
shrl
add
pop
sbb
adc
ds
int3
cs
subl
lret
add
jp
jp
mov
adc
rorb
lds
push
iret
enter
jl
mov
leave
add
cs
mov
repz
daa
push
and
or
pop
sahf
add
adc
pop
clc
rorb
into
call
xor
pop
or
inc
push
mov
xchg
psraw
roll
xor
not
cmp
add
add
and
jl
nopl
add
and
add
mov
cmp
add
movsb
lret
addb
clc
sbb
mov
and
inc
and
popf
fnstcw
adc
lret
pop
xor
and
or
shrb
or
pop
lret
add
ds
add
push
lods
imul
push
sub
clc
adc
das
push
std
cmp
sub
js
movb
or
cmc
pop
push
jl
loop
or
and
adc
jns
push
paddsw
pop
sbb
pop
and
pop
adc
rolb
add
and
loop
clc
or
scas
dec
pop
subl
imul
adcb
push
aaa
roll
xlat
push
lods
adc
xor
adc
pop
mov
xor
out
test
push
adc
mov
rorb
psubw
adc
xchg
add
inc
sbb
xor
dec
jae
ja
push
jne
pop
add
pop
idivb
jl
cmp
lret
inc
jl
pop
call
pop
sbb
push
cs
inc
imul
lret
push
incb
or
push
aaa
dec
or
push
hlt
mov
push
lds
inc
movsb
sub
sub
jne
idivb
std
jbe
js
xor
or
add
jne
pop
push
adc
out
inc
push
pop
outsl
pop
push
es
aad
mov
pushf
in
dec
xor
inc
or
pop
add
add
mov
adc
inc
add
adc
jl
jbe
ja
pop
mov
add
jne
xor
mov
push
mov
fisubrl
and
aad
add
je
ret
add
mov
mov
rcll
adc
inc
inc
fnstcw
clc
push
mov
pop
mulb
sub
add
fwait
adc
add
dec
pop
mov
and
sub
sbb
pop
push
lret
or
xchg
in
inc
pop
sbb
cs
stc
jne
or
hlt
and
jge,pn
clc
or
rcrb
jge
push
cs
lds
sub
sub
xchg
xor
or
inc
inc
sar
adc
push
outsl
adc
adc
sub
fidivl
push
adc
fisttpll
adc
das
cmp
xchg
mov
sub
and
pop
iret
sub
hlt
mov
cmp
xchg
mov
push
or
add
into
push
fnstcw
shll
pop
hlt
add
jo
mov
out
xlat
wbinvd
adc
rcll
sbb
popf
dec
sbb
sub
adc
push
test
je
repnz
repnz
fstps
adc
add
test
mov
dec
pop
push
sbb
cmp
adc
pop
fcmovnbe
push
hlt
push
or
roll
push
adc
sti
and
push
pop
add
sub
push
sbb
sub
mov
and
lret
or
insl
repz
or
into
and
scas
repz
outsl
addl
fldenv
jae
dec
fsubrs
jle
cs
jo
xor
and
cmp
divl
scas
fisttpl
pop
or
idiv
jo
and
stos
repz
xchg
popf
mov
adc
mov
aaa
xor
add
pop
aaa
sub
sub
push
push
repnz
push
shlb
pop
clc
or
movntq
insb
or
inc
cld
pop
outsb
mov
mov
cmp
add
and
jae
pop
mov
or
ror
adc
imul
sbb
sbb
push
or
add
or
add
or
inc
cs
fdivrp
testb
or
xor
mov
sub
add
jb
mov
je
push
cmc
cmp
adc
push
shll
pop
sub
sub
push
push
or
add
push
and
outsb
or
or
adc
sbb
mov
fstpl
jno
add
add
pop
out
sbb
aad
daa
dec
push
out
or
adc
loopne
mov
add
in
filds
inc
adc
pop
add
add
adc
and
lea
test
cld
fidivs
jnp
or
and
add
lods
roll
sbb
aaa
fnstcw
sar
add
add
inc
pop
pop
fildl
xor
add
push
xchg
adc
aaa
sub
fs
mov
or
mov
xchg
stc
or
push
fsincos
xchg
decb
stos
idiv
movl
mov
push
and
add
mov
or
ret
jo
or
mov
mov
or
mov
and
mov
inc
inc
pop
fimull
or
data16
dec
jmp
push
and
inc
add
jo
add
ja
push
imull
inc
inc
push
inc
add
push
mov
or
or
or
test
and
add
bound
std
ljmp
pop
and
mov
fcompl
mov
push
add
pop
or
sub
int
and
adc
fiadds
outsb
insl
jnp
add
add
scas
and
test
and
divl
mov
pop
inc
inc
inc
inc
inc
pop
lcall
loopne
fsubrs
inc
add
push
lret
and
ret
lds
ret
sti
adc
or
jb
sub
mov
pop
mov
push
repz
inc
fiadds
inc
or
jo
push
stos
jo
mov
add
pop
mov
or
sub
into
aaa
add
xchg
or
xchg
clc
shll
hlt
lea
fstpt
mov
andb
sahf
pusha
push
push
pop
ret
fisttpll
pusha
bound
pop
cs
dec
adc
arpl
incl
and
xor
xchg
or
cs
pusha
mov
pop
add
sahf
mov
or
lret
pop
jnp
inc
rcrb
pusha
pop
or
jne
add
adc
lcall
pop
dec
xchg
ficoms
and
popf
bound
popf
imull
sbb
cmp
aaa
mov
sub
cs
or
sub
int
fiaddl
inc
sbb
and
sbb
pop
pop
and
jnp
pusha
mov
mov
mov
or
out
cmc
imul
cli
inc
imulb
testl
add
push
push
mov
push
pop
pop
and
bswap
mov
add
out
push
or
idiv
cli
and
add
fcmovnu
cs
lea
xchg
mov
or
pop
xchg
pop
cmpsb
push
pop
pop
add
mov
loope
les
repnz
mov
inc
add
repnz
bnd
dec
daa
into
mov
push
cmpsl
mov
sbb
lods
jle
sub
out
sub
jno
or
out
psrld
mov
and
add
lret
sti
inc
push
in
xor
fdivl
or
and
daa
testb
mov
push
mov
push
and
or
jo
adc
fucomi
inc
inc
mov
lcall
or
fidivs
out
das
push
add
cmp
pop
or
imul
pop
std
loopne
add
sub
mov
pop
push
negb
and
jp
inc
adc
add
cmp
sbb
sbb
lahf
out
add
mov
jg
xor
scas
ds
sbb
push
adc
mov
outsb
inc
add
repz
cmp
add
add
mov
add
ss
pop
push
adc
mov
add
fisttps
std
sub
and
push
add
dec
fistpl
int3
pop
jb
ss
lahf
push
insb
dec
push
add
dec
or
or
mov
inc
stos
and
lods
mov
popa
dec
adc
mov
push
lret
dec
dec
push
dec
push
dec
wrmsr
add
inc
dec
sbb
jge
sub
rolb
sbb
inc
das
outsl
outsl
in
mov
jns
add
fldl
jnp
aas
cmp
or
mov
es
ret
sarb
sbb
push
pop
jnp
pop
jno
cmp
gs
subb
out
mov
fldt
jne
dec
inc
xchg
dec
push
cmp
rclb
adc
fisttpl
sub
dec
pop
rcl
sti
xchg
mov
testl
add
faddl
pop
movzbl
fcmovu
or
aas
aas
cmp
ret
sti
scas
dec
dec
or
dec
adc
jae
jp
adc
add
pop
add
jle
and
aas
adc
ss
gs
pop
fidivs
add
dec
mov
into
xor
dec
mov
mov
roll
cmp
add
stc
lods
adc
mov
cmp
sub
dec
mov
and
dec
jnp
pop
inc
or
mov
cmp
imul
ficomps
add
adc
add
dec
and
push
add
xor
pop
testb
and
mov
mov
sbb
imull
push
arpl
add
daa
sub
and
mov
dec
addb
imul
add
rcr
adc
add
inc
mov
push
or
mov
add
xor
mov
lods
insl
bound
jmp
cmpl
fisubl
xor
xchg
mov
outsl
imul
and
es
mov
push
push
and
add
mov
mov
pop
adc
mov
sbb
pop
dec
fbstp
pop
xor
in
xor
mov
sbb
in
add
or
clc
sbb
mov
adc
insl
and
xor
xchg
fildll
in
jge
cmp
sbb
sbb
sbb
add
rclb
leave
les
mov
idiv
sbb
mov
pmaxub
cwtl
in
std
sarl
mov
mov
scas
push
fidivl
push
sbb
xor
mov
push
xor
stos
mov
xchg
xchg
lea
hlt
sbb
test
addb
pop
lock
push
mov
pop
pushf
mov
jge
mov
mov
pusha
gs
push
jl
int3
rol
lods
add
or
and
into
aam
out
add
out
cwtl
xchg
xchg
push
cwtl
or
or
movsb
popa
or
sbb
cmpsl
loopne
enter
mov
jmp
push
dec
xor
sbb
outsb
divb
lcall
mov
jecxz
iret
push
adcb
lea
mov
dec
dec
mov
xchg
and
jae
popf
pushf
pushf
push
mov
hlt
clc
in
pop
insb
scas
and
adc
or
mov
int3
xchg
mov
push
arpl
push
add
rcrb
mov
or
mov
repnz
mov
push
pop
pop
adc
xchg
add
mov
scas
int3
cmpsb
adc
mov
cmpsb
push
jb
mov
sbb
ficoml
sbb
adc
and
testb
rorb
mov
dec
hlt
fsubs
mov
mov
add
test
sbb
out
push
mov
popf
push
and
sbb
mov
mov
syscall
or
out
adc
mov
repnz
fwait
push
mov
out
cmp
jo
sub
add
xchg
daa
cmp
negl
dec
into
int3
cmpsl
dec
dec
pop
arpl
or
sub
push
push
scas
lock
dec
fwait
movsl
and
lret
and
add
and
jne
push
push
insb
fwait
xor
jg
imul
leave
cmpsb
pushl
out
or
push
sbbb
sbb
fidivrs
sbb
push
clc
mov
scas
in
mov
sub
add
and
stos
xchg
sbbl
mov
xor
sbb
xor
sub
in
xlat
aad
shrb
loopne
push
into
sbb
sbb
add
sbb
cltd
and
bound
mov
add
adc
and
or
clc
testb
call
out
into
lods
or
sbb
or
mov
sbb
roll
andl
push
add
fwait
add
xor
pop
fiadds
cmp
out
ljmp
faddp
push
pop
mov
in
imul
xor
sbb
sbb
sub
and
orb
or
nop
mov
add
ss
adc
in
add
pop
int
shll
fldlg2
out
ljmp
cwtl
stc
ja
pop
dec
xor
push
fistpl
cld
push
add
pop
and
cmp
dec
shll
sub
adc
jle
and
lcall
jp
pushf
pusha
ficomps
lea
orl
decl
mov
xorb
cmp
mov
jl
ret
xchg
mov
mov
out
out
jmp
ljmp
adc
push
and
adc
int
pop
or
push
push
addr16
lret
push
mov
insl
cmp
xchg
jg
aaa
cmp
lcall
mov
mov
test
incl
mov
mov
sbb
xchg
pop
in
jmp
ljmp
mov
rclw
adc
call
fsubs
clc
mov
pop
or
fadd
and
add
or
push
inc
dec
cmp
add
push
mov
aas
je
loopne
inc
mov
push
cwtl
xor
cltd
cltd
mov
or
jg
popl
xchg
cltd
dec
xor
xor
ljmp
sahf
popf
xchg
mov
add
adc
div
out
add
fadd
ds
add
lret
insl
imul
hlt
push
sbb
mov
jl
mull
shrl
add
push
test
mov
sbb
push
cmp
jnp
into
leave
cmpsl
xor
into
adc
jle
mov
stc
or
sub
add
loopne
lds
sbb
sbbb
cmpsb
nop
test
pop
cmp
sub
out
xchg
sub
mov
std
or
mov
loopne
leave
outsl
pop
sub
adc
add
add
adc
ja
jae
or
adc
sbb
pop
push
outsl
cmp
or
pop
aas
and
xlat
cmp
xor
push
fwait
repnz
xor
in
pop
adc
sub
push
int3
mov
cmp
ja
ss
inc
xchg
stc
xlat
into
lods
and
jp
xor
ja
push
or
imul
cmp
aas
cmpsb
sarl
cmp
orb
out
mov
cmpsb
rorl
test
push
ss
jp
loopne
push
sub
push
notb
je
out
inc
stc
xor
adc
das
fcmovnu
sbb
dec
test
jp
and
es
popf
fcompl
jle
mov
jmp
sarb
inc
imul
out
out
icebp
xchg
scas
stos
imul
or
xor
add
or
add
add
adc
outsl
imul
incb
push
push
or
mov
adc
jge
jns
icebp
push
je
dec
jnp
popa
push
scas
out
add
mov
add
dec
dec
icebp
dec
out
fisubs
loope
aas
push
xor
sbb
outsb
jb
mov
in
faddl
inc
mov
mov
jbe
cmp
out
mov
sbb
loope
mov
dec
xor
sbb
sbb
push
dec
push
xor
addr16
mull
icebp
imul
dec
or
inc
jae
or
loop
scas
xor
sbb
adcl
mov
pop
pop
mov
mov
or
add
adc
inc
jl
fmul
sub
push
xorb
std
mov
xchg
adc
in
std
push
push
or
or
add
mov
insl
xor
les
sbb
adc
rclb
add
stos
jle
pop
sbb
insl
adc
mov
dec
pop
push
fildl
cs
inc
or
lcall
inc
sbbb
inc
lods
mov
xor
pop
inc
adc
mov
mov
aaa
add
cmp
or
lock
cmp
mov
xchg
pop
mov
xchg
inc
sbb
negb
push
add
or
lock
test
add
or
pop
or
scas
std
aaa
add
pop
and
fs
pushf
lahf
inc
mov
xchg
and
mov
add
popa
cmp
adc
sbb
loop
cmp
xor
or
jnp
mov
pushf
hlt
xchg
jnp
cmpsb
dec
mov
or
fstl
je
cmp
and
ss
push
or
scas
or
lods
mov
add
add
push
sbb
sub
or
out
ret
fidivrs
fwait
add
add
fcmovnu
aas
mov
mov
lea
mov
daa
or
push
mov
dec
les
push
or
mov
xchg
xchg
mov
mov
mov
subl
out
loopne
mov
cmp
or
cltd
data16
lods
xchg
adc
cltd
sbb
xor
cmp
ret
out
mov
ss
jb
aam
fiaddl
xchg
into
pop
mov
sbb
push
mov
mov
sbb
rcrl
xchg
sbb
test
fldcw
je
ret
or
mov
rcll
adc
and
dec
add
mov
mov
add
daa
push
and
xchg
cmp
xor
push
addb
inc
adc
or
imul
xchg
loop
add
mov
das
sbb
push
mov
loopne
jne
pop
or
cltd
mov
ljmp
adc
mov
mov
xchg
imull
out
aaa
sbb
add
das
jnp
push
add
adc
pop
das
es
pop
or
pop
or
or
inc
inc
lcall
adcb
sub
push
mov
fdivrs
cmpsb
mov
or
add
shl
fistl
mov
sbb
push
arpl
and
outsl
outsb
pop
decb
xchg
push
xor
or
inc
rcrl
data16
mov
fstpt
out
mov
es
and
inc
fcmovbe
or
or
pop
lea
jg
cmp
and
test
mov
daa
fidivs
mov
mov
xchg
sti
push
xor
or
jbe
add
arpl
pop
mov
add
cmp
mov
inc
andl
and
hlt
jge
sbb
sub
cmp
or
and
sub
int3
add
add
sbb
insl
rolb
andl
or
inc
adc
inc
and
sbb
ds
add
hlt
sub
insb
jp
mov
leave
sbb
insl
insl
and
aaa
inc
and
gs
and
cmp
fs
gs
inc
or
and
xorb
sbb
addr16
xchg
xor
fistl
push
je
push
outsb
ja
fs
je
ljmp
push
push
jne
jb
and
sarl
add
add
xor
outsb
pop
pusha
sub
jb
je
inc
imul
dec
popa
insl
cmp
sbb
add
xchg
mov
mov
test
inc
adc
lea
mov
adc
mov
test
fs
lret
outsl
dec
test
jns
xchg
ficoms
push
int3
inc
push
movsl
je
shll
cs
ja
dec
sarb
dec
cmp
cmp
data16
push
sbb
xor
fildl
arpl
inc
xchg
or
lods
insl
jg
nop
arpl
dec
inc
dec
adc
lea
adc
out
imul
imul
clc
pop
orb
mov
push
mov
fldt
fs
popa
in
push
jns
subb
jae
adc
js
pop
push
dec
out
push
xor
movb
pop
jbe
xchg
pop
dec
inc
pop
popa
xchg
mov
aas
dec
in
popa
mov
mov
push
cwtl
fwait
xor
push
inc
dec
add
add
aaa
jno
loopne
sidtl
add
cmp
dec
xchg
add
pop
popa
insl
ss
mov
mov
pop
aas
add
cmp
cld
pop
fmuls
add
pusha
add
xor
mov
inc
and
pop
sub
pop
and
push
enter
bnd
sbb
add
movsb
pop
adc
sub
jb
cmp
mov
adcb
dec
inc
imul
dec
dec
clc
in
add
sbb
push
rcrb
imul
rolb
or
inc
add
and
xchg
and
add
test
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
add
add
push
inc
add
pop
inc
add
