xchg
lret
in
call
add
jnp
je
out
xor
adc
fbstp
push
pop
sti
cs
lret
in
into
fwait
lods
inc
fisubs
fldt
std
pop
and
mov
push
mov
ret
outsb
cmp
xchg
lret
in
sub
cmp
sbb
call
xor
and
xchg
gs
repz
lret
in
cmpsl
dec
repnz
testb
call
add
je
adc
push
call
out
pusha
adc
push
adc
or
sbb
das
or
push
jnp
push
sbb
dec
sub
outsl
neg
jnp
add
fsubr
int
popa
pusha
jb
mov
ss
mov
nop
or
neg
sub
add
neg
fsts
add
addr16
int
or
adc
mov
add
push
out
adc
lret
or
outsw
mulb
add
add
das
out
popa
mov
data16
les
mov
sbb
js
out
dec
pop
inc
pop
pop
pusha
and
mov
pop
push
and
mov
mov
ja
mov
pop
xor
arpl
shlw
rol
adc
or
fldlg2
pop
sbb
mov
sbb
js
repz
fsts
fiadds
testl
mov
shll
xchg
dec
pop
sbb
filds
js
insl
leave
jl
fsubrs
jmp
adc
or
insb
cmpsl
and
ss
xchg
int3
addb
xor
fnstcw
adc
adc
int
xchg
in
xchg
call
in
sub
cmpsl
xchg
aam
pusha
out
int
sub
ja
pop
insb
ss
cmp
in
fidivl
jae
pusha
insb
ret
rcrb
popa
push
pop
ret
mov
pop
push
testl
fwait
adc
fldlg2
adc
mov
lcall
bound
pop
or
pop
mov
mov
sahf
sbb
xor
adc
pop
scas
jns
data16
ficoms
add
sbb
mov
xor
adcb
fsts
dec
push
adc
fmuls
int
pop
dec
pop
ret
and
sbb
mov
sbbl
int
sbb
xchg
cmpsl
fs
popa
pop
js
add
or
xor
out
push
call
add
notl
insb
dec
xor
xorb
and
pusha
cmp
scas
adc
divb
mov
popa
or
in
pop
add
xchg
jecxz
stc
and
dec
std
xor
xchg
popa
or
bound
addl
cmp
dec
insb
dec
adc
pop
sub
jo
jno
test
fcomps
lods
pusha
sub
push
rorl
test
mov
xor
push
mov
adc
mov
xor
imul
jmp
test
in
mov
fwait
jno
or
mov
int
and
lds
outsl
aaa
das
and
ss
lcall
retw
or
jo
cmc
ficoms
pop
leave
js
insb
xchg
add
xor
das
sbb
mov
data16
sbbl
mov
int3
xchg
nop
adc
leave
and
ror
lcall
dec
ret
xor
and
call
subb
repz
shll
test
cli
or
mov
cmp
dec
xchg
dec
inc
mov
sub
or
shll
jg
mov
xor
or
dec
inc
xor
xor
in
daa
sub
int
icebp
push
xchg
mov
insb
mov
mov
add
sbb
sbb
push
data16
rcrl
popa
dec
or
push
pop
jo
pop
xor
data16
mov
es
or
insb
insl
pop
push
jl
and
in
dec
ret
xchg
fmull
ret
jp
sub
and
sbb
mov
nop
lret
dec
or
rcrl
cmp
add
pusha
mov
jne
push
adc
jl
fsts
dec
int3
pusha
adc
fisubrs
push
lods
ss
add
add
xor
push
insl
mov
dec
or
inc
pop
xor
sub
and
sub
xchg
cli
popa
or
pop
dec
and
mov
and
insb
stos
and
mov
clc
sbb
out
and
es
movsl
push
insb
xchg
mov
lods
xchg
jns
ret
and
fldcw
pop
rcr
xor
jmp
pop
scas
xor
sbb
sbb
loop
dec
push
lds
inc
rol
sub
or
fimuls
sbb
jno
xchg
mov
adc
out
cmpsl
mov
ss
jae
adc
xor
ret
andb
icebp
aaa
xchg
xchg
push
jecxz
sub
mov
sbb
and
push
test
sub
mov
and
test
adc
icebp
inc
sbb
mov
into
das
adc
int3
pop
mov
dec
and
xor
test
dec
subl
loopne
pop
push
push
stos
mov
fcmovu
sub
sub
fcomps
push
ret
popf
test
xor
fwait
test
lds
add
mov
ret
fwait
and
ret
xchg
lds
dec
add
sbb
or
jecxz
sub
ret
inc
aad
adcb
pop
loopne
ror
sbb
pop
sbb
xor
int
inc
push
enter
aad
dec
ret
outsl
adc
add
pusha
ret
jl
rolw
dec
and
cmp
addr16
outsw
enter
add
xchg
cmc
inc
and
popa
inc
or
incl
adcl
adc
xchg
or
jmp
xchg
jno
sbb
movsb
push
xchg
add
mov
and
xchg
or
pushf
xor
xchg
adc
dec
popa
lret
push
sub
push
int3
xchg
imul
or
inc
fsubrs
mov
fs
dec
push
es
arpl
adc
shrb
nop
cmpsl
ret
es
xchg
into
mov
stos
jns
dec
js
and
fdivs
xor
or
pop
add
jg
dec
cmp
mov
xchg
xor
push
mov
sub
cli
mov
add
adc
and
shlb
imul
or
mov
cwtl
fnsave
push
rclb
notb
add
les
flds
inc
and
mov
mov
and
dec
sbb
and
mov
dec
sbb
xchg
xor
adc
jnp
pop
mov
jp
sbb
cltd
dec
cltd
es
mov
iret
mov
jnp
test
jg
xor
cmpb
mov
add
pop
add
mov
ret
and
jg
and
mov
or
inc
cmp
ret
inc
push
sbb
jp
sbb
xor
movsb
xor
pop
lods
inc
mov
rcrb
mov
xchg
cs
pop
pusha
xchg
and
jns
xchg
and
js
jle
xor
push
inc
mov
mov
push
pusha
dec
sub
sbb
sub
lcall
packssdw
gs
dec
and
sbb
or
leave
xchg
les
and
sbb
xchg
nop
jmp
add
arpl
fwait
and
push
mov
push
daa
sbb
mov
push
arpl
lret
pusha
inc
rorl
or
adc
repnz
and
dec
xor
inc
fadds
into
pop
sbb
lds
xchg
les
fadds
add
dec
lcall
inc
je
int3
xchg
shr
sub
dec
push
shlb
xchg
nop
dec
push
xor
xchg
es
mov
leave
and
add
dec
inc
or
pop
leave
jp
or
jp
arpl
jnp
popa
xor
std
jns
arpl
xchg
imul
mov
adc
or
in
lds
xchg
push
push
mov
jecxz
pop
push
inc
push
or
nop
pop
jg
push
shll
jbe
fwait
and
outsl
pop
lock
shrl
bound
pop
inc
add
pop
push
lret
lcall
xor
mov
xor
xchg
adc
sbb
fs
lret
shrb
mov
aaa
movsb
lret
pop
and
pop
jne
mov
hlt
fisttpl
mov
outsl
add
call
xchg
pop
add
sub
pop
inc
push
int
lcall
or
xchg
mov
or
aad
inc
sub
jae
lods
iret
pop
inc
mov
xchg
inc
pop
das
sub
xchg
sub
test
imul
into
lret
fldcw
xor
mov
test
dec
mov
adc
sbb
mov
xchg
and
pusha
pusha
ret
xchg
shlb
lods
pop
cmpsl
cmc
jp
stos
pop
pop
lret
ss
mov
or
pop
aas
int
sub
add
or
shlb
movsb
aaa
test
cmpsb
sub
ret
lods
dec
mov
faddp
sbbb
add
dec
adc
mov
jle
adc
dec
adc
andb
sub
or
shlb
push
mov
cld
sub
int
adc
clc
adc
sbb
flds
icebp
test
lock
cmp
nop
or
sub
fldt
fwait
xor
test
ds
in
fwait
mov
and
sbb
test
adc
dec
xor
mov
movsb
pop
adc
and
fwait
sub
cmpsb
cwtl
int
loopne
in
add
mov
and
add
or
leave
and
sbb
daa
js
pusha
les
fwait
int
xor
and
rclb
and
or
sbb
mov
mov
mov
adc
fwait
or
popa
dec
dec
pop
push
movsl
sub
mov
add
mov
fcoms
dec
add
jmp
imul
mov
dec
ss
stos
fbstp
and
test
in
mov
xchg
xor
dec
dec
mov
mov
int
and
sub
sbb
xlat
dec
mov
mov
pop
pop
xchg
sbb
into
mov
and
dec
fcoms
lea
xchg
push
or
dec
dec
add
ja
imul
pop
jns
les
fwait
mov
inc
push
adc
cmp
push
xor
mov
or
push
scas
imul
adc
ljmp
xor
pop
push
faddl
fnstenv
insb
or
lahf
cld
gs
nop
lcall
lods
sbbb
adc
insb
sbb
bound
xor
xor
int3
pop
sbb
adc
xchg
or
cmc
dec
pop
nop
lods
pusha
je
hlt
xchg
les
cmp
enter
sbb
stos
adc
insb
inc
subl
xor
pop
rcll
popa
xor
mov
leave
or
adc
pop
push
or
fwait
adc
mov
adc
cmp
inc
pop
cld
nop
lods
es
outsb
scas
iret
add
mov
frstor
pop
mov
popa
int3
pop
cltd
add
sub
imul
add
je
inc
outsl
and
push
int
xchg
add
sub
dec
ss
push
push
push
pop
pusha
dec
or
fwait
xor
movsb
and
call
cwtl
inc
loop
sub
addr16
adc
sahf
test
cltd
pop
push
inc
mov
jb
adc
test
test
inc
jge
sub
and
les
sbb
sub
or
dec
bound
mov
xor
push
dec
xchg
mov
in
sbb
inc
shl
inc
nop
xchg
pop
cmp
fdivs
xor
adc
and
cmp
cmp
sub
out
or
mulb
imul
xchg
mov
xchg
inc
xor
push
leave
push
lock
insl
adc
and
dec
sbb
xor
add
mov
cmp
or
xor
xchg
push
jb
rorl
in
xor
fstpt
xchg
xchg
mov
incl
push
jecxz
xorb
rcrb
sbb
add
inc
into
es
mov
iret
and
xchg
add
add
lret
xchg
push
ds
sub
dec
test
pusha
xchg
fildl
add
and
mov
mov
xor
or
seta
insb
fsubrs
pop
push
rcrl
pop
and
and
popf
and
andb
mov
popa
fld1
jns
fsubs
loop
nop
xchg
add
sub
and
and
dec
test
and
sbb
xchg
pusha
call
xchg
xchg
add
xchg
aad
or
daa
ds
xchg
and
popa
mov
xor
int
xchg
add
test
sbb
fwait
or
cwtl
mov
dec
push
loop
mov
orb
fwait
xor
fs
data16
in
bnd
es
xchg
push
mov
xor
or
and
pop
mov
mov
nop
mov
test
test
dec
arpl
sarl
mov
adc
int3
pop
fsubrs
mov
xor
rolb
xchg
andb
int
and
mov
mov
or
adc
jae
add
mov
pop
sti
sub
mov
inc
adc
xor
mov
inc
add
insl
mov
inc
dec
bound
leave
push
arpl
lea
call
and
adc
mov
ret
xchg
and
and
pop
adc
or
lods
popa
xor
adc
imul
push
add
pop
mov
dec
orb
sub
mov
mov
and
pop
mov
stos
lret
dec
pop
push
xor
and
and
aad
mov
mov
adc
sub
and
dec
mov
scas
scas
movsb
and
gs
mov
mov
xor
pop
daa
stos
mov
lret
shr
test
insb
push
ret
rcll
xchg
shlb
sub
mov
xorb
adc
mov
and
cmc
lretw
add
pop
in
add
lds
pop
pop
outsl
filds
fwait
xchg
inc
adc
test
sub
pop
dec
lcall
xor
xorb
cwtl
mov
lods
and
arpl
fwait
xchg
cmp
icebp
xor
push
outsb
pusha
cmp
mov
lahf
dec
int3
xchg
pop
mov
add
xor
mov
pop
sub
fcoml
movsb
and
push
sbb
sub
and
and
call
inc
int
lea
add
xor
pusha
sub
bound
sbb
xor
inc
lret
mov
mov
andl
dec
adcl
jns
ficoms
xchg
mov
adc
sbb
add
xchg
shrl
pop
xchg
xchg
inc
inc
adc
mov
adc
add
lods
xchg
mov
test
ljmp
adc
cmp
pop
push
pop
add
jecxz
imul
mov
sub
xlat
mov
shlb
fidivrs
or
nop
cwtl
xor
repz
hlt
xchg
xor
repz
pop
push
mov
sbb
add
pop
lods
ret
inc
xor
push
mov
xchg
test
roll
test
pop
fwait
mov
int3
cmpsb
pop
push
nop
movsb
inc
push
push
dec
rclb
cmp
popa
shrb
lret
mov
xor
out
pop
sub
xchg
bound
or
mov
xor
sbb
pop
adc
sub
add
or
aam
cwtl
adc
clc
add
xchg
fildl
sub
sti
movsb
addl
fwait
sub
dec
xor
mov
inc
jbe
lock
xor
push
popa
test
movsl
xchg
lods
and
leave
or
cld
dec
pusha
flds
movsb
popa
xchg
cmp
inc
aad
xchg
xor
xchg
shlb
rclb
mov
pop
jnp
mov
and
pop
data16
add
std
lods
gs
xor
pop
scas
cltd
xor
mov
push
mov
xchg
aaa
sbb
jb
fcoms
sub
nop
dec
push
shl
sub
jge
test
mov
ss
sub
subl
xor
xchg
inc
test
orb
in
popf
je
leavew
es
xchg
sbb
and
mov
push
push
adc
pop
loop
daa
mov
xchg
enter
pop
push
lret
je
stos
lret
data16
mov
add
pop
fstps
and
test
cmp
sahf
xchg
rcr
adc
lods
jmp
sub
ss
sbb
add
rolb
xor
gs
lret
push
enter
incl
add
pushl
pop
dec
jmp
adc
outsb
jae
inc
inc
mov
imulb
mov
mov
mov
pop
pop
add
cli
mov
enter
rorl
push
gs
add
jmp
sti
mov
add
jns
or
pop
and
out
in
aaa
outsb
xor
mov
sub
arpl
jns
jbe
mov
ret
xor
sar
or
push
popa
imul
fistps
sub
pop
or
dec
lahf
testb
lcall
gs
push
ss
inc
sbb
ja
adc
jge
ljmp
inc
jns
in
dec
xor
mov
inc
popa
jb
inc
imul
and
negl
add
mov
mov
push
pop
loop
sbb
and
incl
or
and
sbb
or
or
cmp
pop
repnz
js
cwtl
mov
out
les
adc
dec
cmp
je
inc
cmp
cld
lcall
inc
mov
std
cmovs
push
jns
cltd
cld
call
adc
popf
call
ds
scas
or
dec
push
sub
xor
add
adc
clc
add
sub
and
fsts
dec
or
push
loope
adc
pushl
or
jge
or
sbb
cwtl
and
add
xor
mov
jo
xchg
and
dec
or
xor
sti
jg
call
xchg
call
dec
sub
mov
sbb
scas
adc
mov
mov
pop
dec
or
fs
push
dec
sarl
or
sub
cmp
pop
push
add
inc
pop
ret
pop
shlb
and
jae
push
sub
pop
sbb
clc
sti
fcmovne
ss
sub
mov
mov
and
or
test
mov
movsl
inc
inc
jb
and
jle
and
sub
stos
je
push
je
callw
inc
push
call
jmp
call
or
andl
loope
sbb
jo
fstps
jno
adc
or
push
fidivrl
push
outsl
push
cmp
je
inc
popa
add
adc
push
mov
jo
mov
or
xlat
or
sbb
jmp
jge
mov
and
jbe
cld
jne
shll
roll
jnp
idiv
fbld
clc
gs
iret
jne
cmp
adc
das
and
adc
jbe
adc
call
mov
pop
xlat
push
ljmp
in
fdivs
jmp
test
scas
rcl
je
daa
jne
inc
xchg
lods
or
test
incl
mov
jne
rcrl
push
lea
inc
jl
test
pushl
ja
je
adc
mov
adc
pop
adc
jle
sbb
push
mov
push
sub
dec
inc
idivb
mov
bound
clc
jg
decl
jne
pop
dec
sub
push
test
and
ret
xor
mov
lcall
xor
adc
or
push
cwtl
or
mov
and
xchg
incl
loopne
and
mov
loop
jmp
das
mov
inc
mov
icebp
outsl
fistpll
add
sub
pop
push
arpl
decl
mov
mov
aam
jecxz
lahf
ds
and
imul
in
in
in
inc
pop
push
ljmp
cmp
lds
dec
add
fcmovnu
incl
orb
mov
int3
ficoms
push
and
sti
fcomi
cmp
loop
popf
mov
mov
add
dec
je
inc
cmp
dec
ljmp
jl
or
adc
mov
int
sub
imul
cmp
adc
jmp
inc
insl
popa
scas
aaa
lock
sbb
jmp
xchg
shl
mov
sub
dec
lcall
inc
incl
push
lock
dec
xchg
addr16
cld
push
adc
sub
jmp
ret
cmp
and
jg
jg
mov
call
jbe
cs
cmp
adc
ljmp
clc
add
or
mov
add
leave
mov
mov
adc
add
xchg
sub
dec
call
add
into
mov
mov
int
lods
jne
jmp
xor
js
mov
jnp
call
or
sbb
xchg
std
pusha
sub
adc
insb
push
data16
push
jle
outsl
mov
jge
popa
xchg
and
insl
push
pop
mov
add
dec
mov
mov
jne,pt
mov
xchg
jge
mov
xchg
aad
mov
cmp
ss
imul
push
test
push
hlt
cmpsl
dec
inc
and
pop
das
stos
repz
xor
dec
push
sbb
inc
rorb
adc
mov
mov
or
and
out
cmp
or
pop
movsb
mov
pop
clc
push
fldenv
adc
bound
fdivr
decl
xor
leave
ljmp
xor
mov
jg
outsl
fbld
jne
sub
push
mov
in
mov
jnp
loope
adc
je
lahf
pop
call
adc
mov
in
cmc
fiadds
sarb
fisttpl
adc
mov
test
test
imul
mov
pop
pop
idiv
mov
mov
pop
xchg
lock
and
sub
xor
out
pushl
in
inc
push
add
adc
inc
xor
and
fmull
sub
jae
pop
jmp
shr
shrl
pop
inc
pop
dec
and
mov
jle
jnp
fcomip
imul
dec
dec
sahf
stos
and
and
or
xorl
inc
dec
push
pop
and
xor
mov
adc
or
push
jge
fs
fdiv
ja
inc
popl
xchg
rcrb
sti
jg
pop
fmul
in
mov
mov
sbbb
loope
pop
js
or
sub
dec
push
filds
sbb
lock
pop
out
adc
mov
cmp
mov
test
inc
cmc
pop
add
flds
icebp
loopne
sbb
xor
out
push
sarb
out
clc
push
call
mov
mov
mov
and
jg
call
aad
iret
cmpsl
call
mov
int
mov
decl
loope
pop
xchg
sbb
push
sbb
push
clc
decl
scas
daa
inc
xchg
dec
in
orb
into
pop
fs
push
js
outsl
pop
mov
and
or
mov
insl
or
loope
in
pop
dec
and
int3
insl
loopne
pop
add
pop
inc
bound
mov
fstps
and
cld
mov
and
sbb
add
and
add
sbb
cld
push
or
mov
mov
push
sbb
cmp
sti
jg
push
and
mov
enter
cmc
and
dec
into
lods
cli
inc
les
insl
add
inc
inc
les
jg
dec
daa
pop
jmp
ljmp
jne
orb
pop
call
ja
mov
push
lahf
scas
add
mov
cwtl
test
mov
push
cmp
inc
xchg
jns
sbb
imul
mov
inc
loope
rcr
adc
push
sub
testb
outsl
fisttps
dec
sbb
sbb
mov
cmp
inc
mov
mov
inc
sbb
decl
pop
cmc
jp
scas
and
fsubs
fs
fcmovnu
lods
mov
push
inc
mov
insl
inc
fcomps
sub
adc
adc
inc
aam
fildll
or
or
sbb
xor
cmovl
xchg
mov
notl
test
ja
in
jo
mov
leave
call
sbb
repnz
mov
pop
sub
mov
xor
mov
daa
fadds
adc
notb
std
xchg
sbb
out
cltd
and
outsb
sub
add
in
xchg
or
cld
fildl
shl
ret
push
and
pop
mov
or
sbb
xor
cltd
cmp
in
in
test
fidivrl
xchg
mov
paddq
jg
inc
sbbb
jmp
insb
or
in
and
cltd
xchg
lods
cmpsb
lcall
fldt
jne
pop
xor
data16
mov
pop
in
adc
xor
js
adc
jmp
test
sbb
adc
insb
test
andb
or
adc
and
into
jle
es
test
inc
iret
stc
xor
addl
pop
push
ffree
adc
jle
in
clc
ljmp
mov
scas
push
push
jbe
cld
lock
stc
xchg
jbe
pop
lret
or
lcall
inc
orb
or
mov
stc
jp
dec
and
xchg
push
mov
inc
pushf
repnz
xchg
add
mov
pusha
adc
out
call
arpl
or
mov
push
pushl
jmp
call
ror
sub
adc
imul
lock
sub
mov
inc
push
test
loopne
mov
icebp
call
mov
jge
pop
lret
shrl
rcr
mov
or
inc
xorb
mov
lock
mov
xchg
cli
das
xor
inc
loopne
xchg
xor
testb
out
lods
mov
movsb
jmp
push
xor
pop
pop
call
movsb
xchg
xor
cmc
dec
or
inc
and
add
clc
aaa
and
xor
loop
in
push
or
adc
fcmovnu
int
addb
and
cmpsb
xor
loope
adc
push
xchg
add
xchg
jmp
adc
icebp
ja
imul
idivb
cld
stos
xchg
gs
test
jne
pop
adc
test
hlt
mov
jo
outsl
shlb
loope
stc
mov
loopne
dec
je
stc
add
sub
or
lds
cmp
out
jmp
iret
fwait
add
mov
and
sub
jne
outsl
pusha
xlat
or
xor
adc
std
jbe
clc
fistl
sub
call
inc
outsb
test
cmc
mulb
call
pop
imul
xor
cmp
add
sub
pop
or
or
shl
int3
nop
sbb
dec
pop
mov
repnz
call
mov
aam
and
or
lret
adc
jl
loope
ret
mov
aam
cmpsb
movl
mov
jle
dec
and
and
sahf
xchg
mov
outsl
shrl
ret
movsb
inc
pop
inc
repz
jg
fists
inc
bound
xorb
or
jbe
shlb
ret
gs
inc
mov
sbb
jno
cmp
jg
das
shl
rolb
cmp
ret
stos
mov
dec
or
std
adc
cli
inc
test
pop
mov
inc
and
push
or
push
dec
les
xorb
ss
mov
call
and
sarl
aam
hlt
mov
or
clc
mov
and
rolb
daa
push
dec
dec
push
jne
das
mov
cmp
js
cmp
sbb
stos
fwait
jo,pn
test
iret
mov
addr16
pop
mov
iret
sbb
rcrl
repnz
je
ljmp
cli
or
xchg
or
aas
repz
inc
fldt
fidivrs
mov
push
dec
pop
jl
insl
imul
mov
inc
outsb
inc
dec
jl
shlb
add
push
xchg
out
xchg
and
jae
mov
adc
fsubrs
cmpsb
jl
pop
insb
and
or
iret
loop
lea
sar
ret
ret
push
int3
sbb
and
push
xchg
mov
shrb
pop
add
cmovg
incb
int3
push
mov
cmp
push
out
cmp
push
std
sbb
jb
jbe
leave
mov
sbb
or
rcl
pusha
ret
xchg
les
hlt
aaa
pop
mov
jbe
add
and
inc
es
pop
sub
jecxz
add
ljmp
popf
in
mov
jmp
push
push
and
sbb
adc
mov
loop
aaa
inc
dec
lods
sbb
lods
ljmp
adc
xor
gs
xor
xchg
add
mov
push
inc
mov
sub
lcall
mov
push
bound
addr16
jle
pop
outsl
outsl
das
hlt
scas
daa
inc
jo
xchg
ss
popf
dec
nop
outsb
out
mov
push
jo
sbb
in
xchg
leave
push
adc
in
jg
outsl
outsl
iret
ret
enter
add
xchg
inc
jnp
sarl
fwait
push
xor
ret
mov
pop
dec
into
lcall
outsl
bound
adc
lea
adc
lock
aas
pop
repnz
in
outsb
incl
add
cld
call
cmc
leave
xor
out
loop
icebp
or
xor
xor
and
fmull
rorb
add
sbb
mov
jg
pop
cmp
fsubrp
mov
popa
mov
pop
mov
in
sub
push
in
cltd
add
mov
add
dec
adc
adc
cmp
pop
inc
push
subps
jbe
push
notb
dec
std
and
adc
push
adc
enter
outsl
jbe
sub
push
pop
shlb
ss
aaa
cwtl
pop
je
pop
out
call
into
xchg
ffreep
dec
push
pop
mov
cs
pop
ss
test
add
adc
inc
xor
outsl
in
pop
les
and
mov
ret
out
push
ss
push
arpl
call
xor
hlt
fcmovne
xchg
stc
inc
stc
movsb
inc
roll
or
cmp
lea
data16
sbb
sub
inc
je
and
mov
mov
xorb
lret
rclb
cmp
pop
mov
cmc
mov
pop
dec
adc
cmp
out
add
push
sub
fwait
push
incl
push
push
ret
mov
je
jle
sbb
mov
mov
pop
mov
scas
jae
std
jmp
rcrb
clc
out
push
sub
mov
mov
add
add
dec
fcomi
xchg
sub
inc
aaa
add
cmp
fdiv
add
rolb
dec
push
sub
clc
push
push
data16
js
adc
dec
inc
xor
cmp
xlat
mov
sub
push
inc
das
and
mov
xor
push
outsl
data16
sub
adc
adc
mov
mov
aaa
sub
sar
ficoms
jo
jns
insb
push
and
mov
mov
lea
or
inc
or
shll
dec
popl
inc
dec
mov
inc
add
add
inc
inc
push
in
fldt
dec
mov
roll
dec
dec
data16
cwtl
pop
mov
adc
rorl
add
mov
lods
in
add
icebp
sti
pop
mov
mov
imull
mov
lock
fsts
inc
jo
dec
cvtdq2ps
test
fildl
pop
push
add
sbb
js
xchg
mov
or
insl
xchg
mov
pop
sarb
inc
and
mov
cs
dec
adc
fistpll
dec
push
stc
jmp
mov
mov
ret
mov
adc
ljmp
mov
mov
or
sarb
dec
adc
popa
fdiv
mov
outsl
gs
push
xchg
and
addb
inc
pop
dec
xor
dec
js
inc
jl
outsl
cld
out
insb
imul
fdivrl
push
outsb
add
dec
xor
push
mov
xor
addr16
movsb
push
dec
mov
in
add
je
cmc
inc
mov
movsb
push
fucomp
mov
push
push
bound
inc
arpl
sti
pop
mov
pop
xor
pop
mov
xchg
push
cmp
iret
pusha
jae
test
inc
popw
push
xor
pop
jmp
dec
mov
stos
mov
xchg
roll
fidivrl
xlat
cs
clc
inc
sbb
bound
sub
push
inc
dec
outsb
js
mov
bound
notb
jbe
scas
rcr
jp
mov
xor
popa
loope
sbb
inc
jne
ja
pop
repnz
scas
sbb
fimull
inc
div
mov
sbb
dec
mov
adcl
pop
imul
mov
imul
mov
lret
inc
mov
xor
das
push
mov
ja
aaa
out
aaa
outsl
or
mov
pop
xchg
clc
inc
push
movl
sub
push
jns
repnz
or
push
xor
mov
dec
je
jmp
and
lds
ljmp
inc
push
in
adc
shrb
loop
dec
js
inc
stc
jp
pop
mov
into
mov
jnp
aaa
aas
mov
inc
call
cmp
clc
push
fcompl
ret
imul
inc
jns
notb
mov
sub
dec
fs
icebp
xor
pop
fnstenv
lret
icebp
into
arpl
lahf
lock
pop
imul
add
shll
arpl
xor
imul
xor
in
adc
inc
sbb
in
dec
lods
jnp
push
dec
enter
adc
out
divl
inc
add
inc
cs
lret
sbb
test
mov
idivl
outsl
mov
insb
inc
icebp
xor
jmp
add
outsl
xor
push
push
mov
cmp
lcall
inc
mov
add
mov
dec
mov
or
inc
imul
mov
insl
mov
ret
dec
fcoms
cmp
outsl
push
outsl
addl
push
bound
mov
dec
imul
scas
repnz
jbe
pop
insb
jae
lods
inc
add
sbb
mov
adc
jb
inc
mov
push
fdivrl
fldt
dec
lret
adc
fsin
mov
sbb
dec
push
inc
dec
icebp
cli
push
call
sbb
insl
aaa
sti
dec
xchg
pandn
adc
sub
fistps
mov
add
inc
fs
push
add
pop
mov
cmp
mov
xchg
mov
ret
arpl
dec
xor
xor
mov
or
pop
lret
popa
push
insb
mov
jb
or
shll
negl
inc
jmp
sbbl
mov
je
fs
cmp
and
outsl
sub
ss
test
icebp
sbb
movsb
mull
rclb
dec
jae
mov
scas
pop
dec
stc
add
movb
xchg
or
out
xor
xor
xchg
jmp
jmp
jnp
push
push
mov
jae
mov
mov
mov
hlt
jge
inc
xor
pop
js
jbe
adc
neg
sbb
pop
jno
rcrl
dec
jo
cmp
lahf
jne
js
xor
out
jnp
mov
subb
push
pop
lea
je
push
mov
jmp
dec
jne
add
inc
cmp
sbb
xor
xor
fimuls
or
dec
sahf
jns
dec
stos
adc
jo
dec
mov
push
insb
ja
jno
xchg
imul
inc
into
insl
stos
aam
adc
scas
js
mov
xor
jb
enter
cld
cmp
mov
clc
call
rcrl
sbb
lods
mov
in
mov
pop
xor
inc
jns
insl
inc
add
xchg
je
ret
xor
inc
cmp
out
mov
xchg
jle
cmp
sbb
ss
push
jge
mov
out
jno
ja
fdiv
fisubrl
out
inc
dec
or
dec
icebp
movsl
outsl
mov
push
push
addr16
inc
movsl
jmp
inc
aaa
push
fs
or
sub
mov
inc
xor
aas
xor
mov
push
and
ret
cmp
aad
clc
dec
jl
icebp
inc
xchg
loope
xor
adcb
dec
pop
dec
inc
jbe
inc
pusha
fistpl
xor
ret
sti
ret
mov
stc
cmpsb
inc
sbb
mov
shlb
lods
out
fistpl
sbb
imull
ret
mov
mov
ds
mov
add
dec
dec
jg
dec
inc
mov
inc
ret
mov
jns
pop
mov
rcrb
ret
push
insb
jno
fcmovu
cld
scas
fisubrs
sti
out
mov
jbe
ret
or
push
inc
xor
fsubrs
xor
cmp
jne
fstps
outsl
sbb
cmp
imul
pop
repz
mov
xchg
stc
inc
cmp
in
cmp
out
dec
xchg
adc
notl
lret
inc
shll
or
push
push
lea
dec
mov
iret
adc
and
outsb
aaa
mov
adc
test
or
pop
shrb
push
pusha
add
or
add
jb
inc
ja
or
or
inc
push
jbe
push
inc
cmp
pop
into
xchg
mov
je
dec
mov
inc
test
je
test
pop
sbb
dec
outsb
xchg
mov
js
push
jp
push
jg
jge
push
push
push
mov
call
push
addr16
inc
sub
cwtl
fsubr
imul
fistpll
lret
lea
pop
dec
push
inc
pop
inc
fcomp
test
cmpsl
arpl
mov
dec
push
push
cmp
adc
xchg
int3
inc
repnz
pop
xor
cltd
inc
or
jl
shr
push
push
and
ss
dec
dec
dec
cmp
repz
lret
lods
aam
sbb
icebp
mov
dec
inc
sub
add
add
jp
lcall
jns
bound
sbb
imul
add
icebp
dec
fistpll
mov
pop
ss
and
push
push
test
mov
push
lds
cli
mov
ret
aas
fcmovbe
gs
sbb
dec
pop
push
push
xchg
add
add
bound
ret
es
loope
aaa
mov
insb
loopne
sub
stc
push
add
or
rorb
mov
adc
xchg
push
pop
outsl
dec
dec
add
mov
pusha
mov
loopne
mov
mov
ljmp
or
and
leave
or
push
popl
sbb
push
pushf
enter
loop
mov
xchg
gs
mov
call
pop
inc
xor
pop
adc
inc
push
jno
fcomps
out
jo
call
sub
push
inc
call
xor
dec
popa
xchg
std
inc
inc
pop
xlat
sbb
negb
outsb
divb
mov
adc
daa
stos
sub
adc
and
pop
cmp
pop
pop
sub
roll
and
test
jg
or
and
call
rclb
mov
push
mov
call
stc
cwtl
push
cltd
jle
mov
adc
test
mov
mov
aam
mov
add
call
and
sbb
mov
fstp
adc
mov
or
clc
test
fnstsw
add
sub
or
jl
cmp
sti
pushl
mov
xor
adc
fsubrs
mov
lcall
mov
and
inc
push
fcos
lods
std
lcall
and
sub
mov
adc
dec
data16
dec
adc
cld
pop
call
cmp
xchg
lds
dec
out
inc
dec
xor
pusha
shlb
push
mov
jg
call
repz
idiv
jg
dec
popf
pushf
adc
adc
cs
stos
xchg
jl
xor
inc
sahf
std
ljmp
sbb
cmpsb
mov
lods
call
inc
int
mov
push
js
mov
call
lea
shrb
jno
add
inc
mov
cmp
cmp
cmpsb
sub
mov
jbe
jmp
add
aam
int3
push
call
cmp
sub
sub
cmp
adc
jle
dec
rolb
fildll
decl
rorb
mov
dec
int3
pop
push
outsb
push
dec
and
jne
lock
aam
bound
xchg
dec
adc
incl
and
and
cmp
mov
jecxz
fabs
mov
mov
mov
out
pusha
adc
jno
and
scas
adc
loop
ret
js
shll
ljmp
popa
adc
and
bound
sub
sub
inc
push
lea
mov
cmpsl
push
je
test
jg
clc
call
imull
bound
dec
jb
or
or
ret
sbb
out
scas
xchg
adc
or
sbb
cmpsb
xor
dec
pop
lods
mov
jo
mov
pop
test
mov
lcall
incb
inc
nop
sub
ret
mov
leave
xchg
ret
lea
pop
aaa
jmp
imulb
mov
in
adc
adc
cld
or
or
push
enter
push
add
daa
imul
push
mov
sub
fnstsw
push
xchg
jb
jecxz
pushl
aas
imul
inc
jae
push
sub
lea
lcall
mov
mov
cmp
jg
out
fs
add
inc
insl
ficompl
pop
insb
mov
sub
dec
je
ror
test
jg
inc
inc
outsl
popa
push
push
es
pop
mov
fistps
mov
push
sarb
cltd
add
xor
data16
fdivr
popf
cmpl
xor
pop
jle
ror
mov
and
dec
adc
jae
cmp
in
ret
push
test
mov
in
jmp
fwait
pop
push
gs
mov
adc
push
outsb
test
shr
aad
mov
adc
jo
int
pop
xchg
jb
or
in
and
push
and
lcall
cmp
jl
and
rolb
lahf
sti
xor
or
leave
hlt
cli
lods
nop
call
inc
filds
dec
lods
shll
jbe
and
sar
lcall
and
mov
adc
cmc
imul
les
inc
dec
in
test
or
outsb
pop
adcl
xchg
sbb
or
sub
mov
mov
je
mov
sub
clc
and
pop
mov
addb
pop
les
call
hlt
fadds
test
jo
jo
lods
xor
je
rorl
enter
add
repnz
jg
or
loopne
or
repz
inc
daa
inc
pop
mov
orb
push
es
in
push
and
xchg
dec
xor
mov
sti
in
loope
and
jg
pop
clc
inc
je
cmpb
in
jmp
adc
mov
in
push
pop
test
add
dec
out
in
xchg
dec
ds
or
decl
push
hlt
add
cmc
movsl
nop
jecxz
push
and
dec
inc
pusha
outsl
pushl
cld
imulb
sbb
sbb
data16
xchg
les
out
das
insl
jb
inc
push
add
sbb
int
push
add
mov
jg
pop
adc
or
das
cmp
fbstp
std
mov
arpl
inc
shlb
into
mov
sti
call
jnp
imul
inc
jne
and
mov
inc
inc
xchg
popl
add
in
mov
mov
loop
jb
dec
cld
mov
mov
fbstp
cmp
cmp
dec
sbb
stos
das
sbb
push
xchg
mov
testl
add
bound
add
push
repnz
sub
dec
adc
adc
push
aaa
andl
pushl
inc
push
pop
add
push
mov
aaa
ljmp
add
mov
mulb
lock
mov
imul
mov
jmp
sub
shrl
adc
sbb
adc
cmpsl
or
adc
outsb
add
loopne
push
mov
out
mov
and
dec
fists
cmp
mov
inc
minps
fistps
mov
push
mov
cli
sub
cld
jg
call
mov
push
mov
push
inc
dec
dec
xchg
mov
xchg
sbb
mov
lea
icebp
cmp
fidivrs
and
and
andnps
in
fdivs
mov
jbe
insl
or
in
aad
jg
mov
orb
mov
incl
sar
sbb
addr16
sub
je
fistpll
arpl
pop
pop
cld
jbe
mov
mov
pop
outsb
std
jecxz
cld
xchg
inc
ss
dec
cmpsl
cld
xchg
xchg
je
push
imul
fdivr
dec
jle
icebp
decl
inc
adc
in
mov
fmull
jle
daa
nop
add
xor
test
aas
icebp
pushl
and
je
sbbl
mov
call
das
sub
outsl
add
and
lret
inc
jmp
insb
cmpsb
call
adc
ud0
cs
out
pop
and
call
or
aaa
lock
inc
lahf
add
mov
and
adc
push
fistpll
js
popa
mov
cmp
cltd
and
pop
cmp
xor
sub
add
fcomip
ret
dec
leave
popa
push
pop
sbb
call
outsl
data16
push
loopne
call
mov
lcall
push
adc
movsb
aam
stc
xor
pop
aas
push
dec
jne
xor
xchg
add
ret
or
sbb
sbb
mulb
add
inc
adc
shrl
or
leave
add
or
jg
das
mov
mov
inc
sub
roll
mov
outsb
mov
add
rolb
inc
sub
addl
iret
mov
mov
dec
or
dec
mov
outsl
jno
and
std
inc
test
jne
addr16
fdivr
pushl
mov
fsubl
adc
and
fcomi
lret
mov
mov
outsl
fisttps
loop
xor
std
int3
inc
icebp
sbb
std
outsl
decl
icebp
adc
iret
ret
mov
sub
and
test
xchg
ss
sbb
mov
pop
inc
inc
sub
inc
xchg
mov
and
mov
mov
pop
or
lods
jne
mov
pop
loopne
pop
mov
inc
imul
arpl
jbe
xor
bound
and
jbe
insb
push
jecxz
outsb
add
jnp
and
mov
jmp
jnp
cmp
leave
sbb
stc
mov
jne
xchg
sub
push
fidivrl
dec
adc
push
dec
orb
xchg
mov
popf
jo
mov
mov
imul
call
jbe
mov
sbb
mov
mov
adc
push
mov
and
cltd
addr16
mov
fwait
loope
cmc
jle
outsb
das
nop
xor
pop
stos
push
jbe
test
lods
loop
sub
xchg
mov
sti
fs
and
jmp
jmp
jmp
mov
pushf
inc
xor
cmpsb
inc
call
mov
push
or
lcall
aas
cmp
movsb
mov
mov
sbb
adcl
pop
xchg
mov
jns
sarb
xor
test
leave
jmp
mov
sub
dec
inc
push
jle
icebp
lcall
pop
mov
and
out
dec
sti
enter
sbb
shlb
cmp
xchg
cli
jae
lods
push
adc
pop
fcomip
xchg
outsb
push
adc
mov
push
push
and
cmp
pop
popa
mov
lahf
add
adcl
icebp
inc
outsl
cmpsb
adc
lods
push
pop
mov
pushl
ss
adc
push
or
das
imul
gs
sbb
call
cmp
sub
out
and
pop
add
pop
decb
mov
mov
sbb
div
push
jno
dec
leave
aas
insb
lea
xchg
mov
jecxz
loop
clc
call
cmp
push
xor
aas
adc
push
adc
sbb
cmp
push
adcb
clc
xor
aam
push
adc
pop
aaa
inc
enter
mov
jae
rorb
mov
and
cmp
jbe
test
or
dec
or
mov
cli
fistpl
adc
adc
sbb
arpl
call
push
je
lods
addb
dec
aaa
decl
lcall
sub
sub
ja
jmp
inc
jne
or
jnp
push
push
mov
aad
add
inc
gs
outsb
testl
fnstenv
mov
or
in
sub
inc
decl
adc
xor
add
xchg
test
fisttps
mov
xchg
daa
xchg
cli
mov
cld
xor
cmp
inc
dec
jmp
cmp
adc
dec
es
je
add
add
out
mov
jo
sbb
cmp
xchg
adc
je
inc
add
xor
std
fbstp
repnz
in
test
mov
mov
mov
push
outsl
mov
xchg
mov
sbb
and
loopne
mov
add
movsb
inc
cmpsl
pop
adc
dec
xor
mov
sub
jle
dec
es
fwait
ljmp
ret
pop
xor
jp
popf
xchg
push
mov
call
int3
push
ds
lahf
in
inc
mov
sbb
jo
push
aad
divl
xchg
ret
jg
mov
adc
push
lret
mov
fldt
sub
xor
filds
movsl
pop
std
call
data16
jge
filds
cltd
sar
das
mov
nop
jne
inc
mov
or
sub
jge
jp
repnz
js
decl
push
cwtl
in
sub
nop
pop
and
adc
test
pop
sbb
inc
dec
or
data16
push
sbb
fldl
xor
nop
std
pushl
xlat
fwait
out
xchg
inc
dec
stos
bound
clc
push
xchg
mov
or
aas
lcall
cmpsb
sbb
addb
push
aam
push
mov
outsl
inc
mov
int
incl
xchg
jb
mov
int
pop
jbe
xor
movsb
in
jp
hlt
movsl
arpl
mov
sub
pop
call
mov
rolb
or
lret
subl
dec
adc
icebp
xor
inc
add
popf
in
sub
loope
js
pop
dec
mov
xor
fs
loopne
lds
mov
std
adc
inc
aad
clc
mov
nop
and
and
jl
arpl
jecxz
mov
adc
inc
pop
mov
add
je
mov
cli
add
and
inc
sub
mov
lcall
inc
adc
cmp
ja
inc
sbb
lea
fucomip
inc
add
push
notb
push
repnz
mov
test
pop
and
push
inc
jmp
add
sar
push
sbb
cmpsb
mov
testl
out
dec
pop
mov
xchg
imul
cld
in
insl
scas
and
inc
pop
cs
gs
repz
cs
jge
push
shl
out
mov
jnp
decl
lods
lret
adc
in
push
mov
ret
adc
outsb
adc
push
std
icebp
and
pop
add
inc
cmc
pop
loopne
xor
call
xchg
xchg
lret
in
sbb
movsb
data16
das
cmp
fbstp
bound
or
jg
mov
ljmp
and
idivl
nop
sarl
jo
insl
call
hlt
sub
and
adc
cwtl
test
aam
lea
bound
lock
mov
sbb
aaa
or
add
mov
or
imul
fnstcw
xchg
xor
jp
jmp
icebp
ffreep
lods
mov
xchg
hlt
or
adc
inc
sti
cli
in
sar
jecxz
andb
addb
mov
mov
out
sub
add
and
insb
std
xchg
mov
push
jge
mov
or
mov
xlat
mov
jg
ss
fwait
pushf
fisttpll
jne
mov
rolb
adc
pop
sub
jp
cmc
mov
adc
imul
in
mov
cwtl
je
adc
pushl
mov
dec
xchg
mov
daa
push
aam
cmp
enter
dec
inc
das
jl
dec
sub
push
cmpsl
xchg
lea
sbb
mov
jmp
or
pushf
cltd
inc
jb
add
jns
loop
inc
ljmp
std
pop
or
or
push
jl
push
das
dec
fs
lcall
and
cwtl
push
xchg
pop
xchg
fnstenv
mov
dec
mov
xlat
jmp
or
sbb
xchg
mov
mov
mov
lcall
rorb
popa
lcallw
ss
les
cmp
pop
insl
cli
insl
or
or
add
pop
cmp
mov
in
adc
or
and
sub
xor
daa
inc
sub
ljmp
cltd
lahf
lret
std
mov
popa
inc
es
cmp
xchg
lea
enter
jb
out
jecxz
pop
ljmp
jo
sbb
imul
mov
js
mov
adc
push
and
add
ja
dec
daa
roll
jnp
rolb
pop
das
insb
pop
pop
sbb
jnp,pt
pop
pop
insl
daa
sub
pop
cld
mov
mov
cmp
repz
les
jno
pop
stos
cs
js
and
xchg
pop
cli
aaa
insl
add
dec
mov
js
dec
ds
mov
mov
cli
fcom
stc
or
fucomip
and
outsb
scas
jge
aaa
push
stos
cwtl
nop
outsb
add
pop
lahf
inc
call
in
ljmp
sub
fs
je
add
arpl
les
int
sbb
cmp
scas
adc
or
cmp
add
dec
mov
lock
fucom
push
mov
sbb
jmp
dec
std
jmp
call
adc
pop
inc
test
call
pop
std
ja
pop
xorb
das
mov
adc
push
and
or
lret
push
inc
das
fsubr
je
stos
or
mov
mov
push
adc
shll
nop
cltd
lret
dec
iret
push
mov
push
setg
test
xchg
cli
fistpll
jns
enter
push
push
test
sbb
mov
inc
sbb
imul
pop
fisubrl
loopne
aas
xor
adc
shlb
cmpsb
pop
pop
sbb
test
and
pop
test
xor
shlb
or
dec
cmp
add
fstpt
inc
push
je
or
insb
jns
or
pop
sbb
stos
in
or
pop
movsb
add
jbe
xchg
fsubrp
call
cwtl
or
pop
push
into
jl
fbld
pop
jbe
inc
xor
mov
test
das
push
or
in
call
xor
sub
dec
or
push
fstps
adc
jg
insl
out
and
cwtl
jae
adc
dec
push
in
std
sti
sbb
enter
adc
jae
add
inc
pop
pop
loope
xchg
jp
mov
mov
ja
sar
pushl
dec
cmp
or
lds
sti
cwtl
enter
pop
sbb
stc
and
jnp
decl
adc
mov
push
push
pop
pop
mov
push
jne
jge
pop
movsb
or
inc
outsl
push
fcmovnb
xor
cmp
push
mov
xor
or
or
sub
lds
mov
pop
mov
and
subl
mov
mov
filds
pop
pop
add
or
scas
out
sbb
sub
adc
mov
sbb
push
bound
in
je
sbb
mov
test
mov
cmpsb
mov
jl
movsl
xor
and
or
rclb
mov
leave
sarb
and
mov
or
sbb
outsl
das
stos
cwtl
mov
jo
push
jl
jbe
pushl
mov
popf
fs
xchg
or
cmp
cmp
lods
adc
cmp
mov
loop
cld
mov
adc
or
adc
test
lods
mov
jl
rolb
movsl
push
out
cs
ret
ja
outsl
xor
dec
or
test
ffreep
cld
add
add
mov
divps
rcrb
icebp
xchg
out
inc
jo
sbb
or
in
cmp
fadds
in
jge
and
inc
or
sbb
jbe
loope
jae
mov
insl
popa
add
and
sub
pop
mov
aaa
sub
lods
movl
push
push
sbb
jb
sbb
lea
loope
mov
daa
xor
sbb
popl
ja
mov
jecxz
lret
inc
dec
bound
test
and
dec
clc
jb
jecxz
ljmp
hlt
or
push
aaa
call
repz
push
xchg
movb
fcoml
mov
fistl
outsb
in
pop
je
push
call
rcl
jbe
outsl
pop
pushl
jns
orl
test
xor
les
int
je
pop
xor
pop
in
and
inc
mov
decl
add
xchg
pop
pop
mov
imul
jbe
jmp
je
aam
mov
imul
repnz
lods
ljmp
je
inc
push
pop
pop
add
push
gs
pop
pop
mov
inc
shrb
pop
xchg
pop
add
push
lret
xchg
icebp
cwtl
jg
adc
in
sahf
add
sbb
imul
imul
add
std
cmp
push
cmp
mov
icebp
xor
call
pop
push
adc
push
and
test
mov
push
adc
add
lret
je
xor
shlb
inc
pop
sub
jns
lods
fsubrs
pop
push
cmp
mov
push
xor
ljmp
mov
clc
mov
in
shr
and
mov
rorb
mov
nop
call
sub
dec
cld
pop
pop
jmp
pop
add
in
adc
sti
adc
or
mov
cs
ret
fimull
push
mov
xor
fisubs
stos
test
inc
inc
and
arpl
popf
adc
xor
dec
cld
call
xchg
jbe
outsb
in
bound
outsb
jle
push
xorb
cmp
scas
sub
inc
xor
fisttps
ds
pop
loopne
xchg
cld
dec
jbe
or
mov
cmp
mov
mov
xchg
inc
xor
or
addb
aas
or
mov
shll
push
ret
xchg
sbb
jl
add
sub
daa
std
int
sub
imul
das
loope
fidivrs
movsb
cmp
mov
jno
fwait
mov
or
jns
dec
das
fsubp
pushl
insl
pop
jo
lahf
hlt
mov
ljmp
rcrl
int3
lahf
dec
aam
pop
mov
mov
push
push
lock
push
mov
out
aas
fdivrs
rcrl
mov
inc
mov
cmp
scas
push
in
xchg
enter
adc
add
inc
enter
mov
fidivl
push
inc
sub
jb
clc
sbb
loopne
or
lods
push
pop
jg
and
add
and
loope
jo
cmc
aaa
outsb
and
xor
push
or
adc
bound
inc
shrl
loopne
cs
sbb
sbb
or
push
in
nop
mov
incl
jnp
mov
mov
xchg
mov
outsb
xor
dec
xchg
rorb
xorb
or
mov
pop
outsl
cld
sbb
ds
je
push
mov
sbb
test
cs
inc
xor
mov
mov
js
mov
lcall
pop
cs
pop
sbb
out
cmp
mov
call
in
enter
xor
bound
aas
sub
add
jb
pop
adc
inc
xchg
adc
lret
or
rcrl
add
jbe
pop
je
cwtl
lods
jg
in
sbb
lahf
and
xor
xchg
pop
ja
divb
outsl
insb
cmp
dec
icebp
in
pop
orb
cld
fcomip
dec
jmp
fistl
gs
mov
and
lock
mov
adc
insb
lock
mov
and
dec
lret
scas
mov
or
pop
cmp
lcall
mov
cs
repnz
cs
cli
pop
dec
stc
jl
adc
sbb
rol
sub
pushl
mov
jle
lcall
push
push
in
push
push
xchg
xchg
scas
cli
decl
ss
test
and
insl
and
push
sub
or
inc
jp
sub
sti
sub
jg
xchg
pop
and
cmp
and
pop
loopne
out
ss
roll
inc
mov
loopne
inc
cmp
lods
sbbl
mov
or
add
pop
jb
adc
mov
adc
inc
test
push
je
push
mov
pop
cmp
dec
and
data16
dec
iret
lcall
icebp
clc
jle
arpl
push
add
mov
ret
insb
sbb
aam
mov
jecxz
outsl
call
lret
and
push
mov
lret
xor
outsl
jl
lock
dec
pop
add
lret
mov
loope
addps
or
sub
add
lock
and
fdivl
sbb
mov
and
push
in
push
andb
mov
in
adc
jge
push
mov
mov
pop
and
lock
je
pop
jne
test
mov
mov
ljmp
mov
xchg
pushl
cmc
push
cmpb
add
es
es
pushf
imul
xor
cmp
mov
ja
mov
sub
cs
adcb
xchg
ljmp
cmpsl
xchg
dec
filds
cwtl
stc
dec
adc
add
mov
data16
inc
mov
daa
inc
fadds
add
jae
sbb
aam
add
or
push
in
popf
lods
sbb
cmp
clc
jae
outsl
in
mov
loop
pop
mov
dec
xlat
cmpsb
ja
lret
test
xchg
jmp
je
mov
inc
cs
or
mov
mov
or
mov
call
lock
push
testb
mov
std
sbb
cmpsl
push
add
cmpsl
ret
adc
jns
add
pop
cld
jo
and
inc
push
add
dec
in
decb
dec
cmp
ret
call
lahf
cmp
xchg
inc
shl
inc
mov
outsb
jl
push
adc
mov
dec
or
mov
arpl
pop
xchg
mov
xchg
lea
inc
std
je
jle
je
ja
add
aaa
adc
push
push
insb
mov
hlt
mov
movsb
and
pop
ret
xchg
mov
jge
pop
jmp
cmp
filds
jp
icebp
aad
sahf
inc
jp
incl
mov
fwait
jnp
mov
cmp
or
ret
inc
imul
idiv
decl
dec
hlt
push
and
sarl
mov
sub
dec
push
addl
push
and
outsl
xor
pop
jg
jo
and
push
dec
lret
mov
gs
loopne
and
cmpl
cmp
push
sbbl
adc
sub
jg
imul
les
out
dec
mov
popa
dec
or
push
push
leave
lahf
test
in
push
call
mov
int3
inc
mov
cmpsb
mov
rorl
fisubs
lods
fildll
lret
adc
in
sarb
and
bound
incl
or
js,pt
or
or
xchg
dec
fcomps
pop
call
or
mov
pop
cmp
mov
fwait
sub
jbe
ficoml
mov
imul
test
pop
jns
aas
sub
bound
shrl
aas
sbb
ret
push
or
shrb
jne
mov
and
xchg
xor
ret
push
jmp
dec
or
cmc
pushl
mov
adc
mov
call
or
jnp
or
inc
mov
and
inc
call
ret
xchg
push
sahf
inc
out
cwtl
std
mov
push
aaa
and
add
and
cmp
push
add
loopne
jne
push
pop
inc
jge
in
andl
in
fistpl
sahf
sub
out
pop
inc
mov
jae
and
cld
ffreep
cmpsl
mov
dec
mov
js
or
mov
mov
sub
testl
movups
test
and
fwait
xor
or
push
sub
or
inc
fucomp
mov
dec
lahf
mov
fistl
mov
sbb
adc
xor
or
ffreep
xchg
sub
push
adc
movsb
pop
stc
adc
insl
lock
push
je
adc
adc
xchg
das
mov
mov
xor
inc
mov
or
dec
and
lock
mov
fcmovnbe
fcompl
mov
mov
jge
outsb
ljmp
jp
add
hlt
sbb
xor
decl
dec
xor
push
inc
cltd
dec
ss
sbb
sbb
roll
sbb
push
and
mov
nop
lods
movsb
mov
outsb
cmp
lcall
nop
or
divb
xor
call
cmp
es
pop
mov
dec
ja
addr16
jbe
je
fisttps
push
ret
jno
mov
cmp
repz
mov
mov
pop
pop
add
or
push
xor
sub
pop
std
inc
add
or
push
jne
hlt
pop
insb
sub
xchg
psubb
fst
sub
mov
inc
mov
jle
fcmovnb
push
jbe
shlb
js
lock
lock
inc
pop
cli
mov
outsl
in
std
ret
ds
and
fwait
gs
inc
jg
test
lret
add
pop
js
out
adc
jne
test
jp
mov
mov
xchg
mov
ss
incl
cmp
add
ret
imul
clc
adc
adc
out
mov
jne
inc
or
adc
mov
dec
std
lds
outsb
xor
sbb
mov
xchg
fcmove
scas
or
add
sub
mov
jno
mov
inc
movsl
jne
mov
jbe
test
xchg
jp
lock
and
sbb
cld
xchg
fdivs
imul
shlb
ds
fdivs
pop
mov
lret
mov
lods
loop
gs
add
into
call
lret
sbb
or
cmp
mov
pop
xchg
into
add
mov
enter
pushl
dec
or
push
call
test
test
xor
gs
sub
iret
jae
or
sti
xor
ret
sbb
das
jns
pop
pop
mov
xor
add
mov
movsl
notb
jo
fmull
dec
and
gs
or
sub
mov
sub
adc
decl
ljmp
rorb
add
push
sub
add
cmp
data16
pop
dec
mov
mov
jo
and
out
xor
ja
call
mov
pop
jb
adc
push
sbb
insl
icebp
int
mov
push
imul
daa
push
mov
sub
imul
adc
std
push
call
pop
jbe
and
nop
mov
push
insl
test
lahf
lcall
fisttpl
and
fcoml
add
xchg
pop
sub
and
hlt
dec
rclb
hlt
fimull
fstps
push
and
in
pop
push
enter
nop
jnp
fwait
imul
xor
insb
cmp
mov
outsl
mov
mov
sbb
jge
pop
mov
stos
and
cmpsb
jno
fstpt
es
lea
or
adc
aad
jb
inc
add
adc
lea
into
dec
ja
mov
test
lock
out
push
outsl
adcb
push
inc
dec
or
push
ja
frstor
nop
dec
mov
push
and
and
outsl
loope
lock
aad
dec
inc
call
xor
cmp
pushf
ljmp
mov
outsb
push
pop
outsb
lock
mov
and
or
and
and
in
and
push
shlb
push
jo
fdivs
ja
add
insl
movsb
es
add
std
incl
int
mov
mov
mov
ja
inc
add
mov
jbe
sub
inc
leave
pop
cmp
xchg
imulb
test
jl
aam
clc
cmpb
imulb
add
pusha
fadd
push
dec
sbb
lea
addb
sahf
pushf
loope
cmp
mov
pop
ret
adc
mov
in
outsl
icebp
fistl
xchg
sub
push
add
bndldx
movsl
loopne
subb
jo
mov
mov
bound
or
mov
das
jne
cs
add
pop
push
jae
fs
das
rcr
adc
or
inc
cs
fadds
pop
enter
jmp
loope
call
mov
les
pop
dec
mov
shll
outsb
das
shrl
jae
int3
sbb
ja
xchg
std
test
xchg
inc
int3
lcall
out
inc
pop
and
or
pop
loopne
cmp
sahf
xchg
mov
xor
jg
loop
sub
push
inc
mov
jecxz
sub
pushl
add
sub
fstpt
adc
jne
in
pop
mov
mov
or
lock
or
jg
lret
xor
mov
and
movsb
lods
adc
out
add
or
pop
test
jmp
mov
or
xchg
xchg
sbb
icebp
add
inc
insb
jl
test
aas
inc
jae
jmp
sbb
adc
jo
call
das
and
lret
pop
dec
inc
adcb
into
push
sbb
dec
adc
or
int
shll
mov
pop
adc
jl
cltd
or
pushl
add
add
inc
add
int3
jl
repnz
out
fisttps
movsb
popa
lods
inc
add
mov
xchg
sbb
movsl
fcoml
adc
test
sbb
and
xchg
sbb
lods
lods
hlt
sbb
push
inc
lcall
lds
cwtl
aaa
xor
dec
insb
outsl
jno
push
dec
mov
sbb
lcall
mov
pusha
adc
in
add
fs
mov
in
or
mov
inc
out
dec
xchg
sbb
fisubl
lock
faddl
xchg
xor
mov
push
jecxz
cltd
ljmp
icebp
in
dec
enter
inc
push
testb
lds
xor
mov
repz
sub
adc
stos
adc
fcoms
or
pop
dec
mov
ljmp
jmp
loopne
js
fidivl
test
mov
mov
push
cmc
data16
sahf
es
push
sarb
leave
rcl
xchg
push
iret
add
test
shrb
test
aaa
and
sbb
lea
jmp
sar
dec
dec
push
scas
ss
iret
hlt
sbb
aaa
loope
mov
data16
loop
or
jns
test
outsl
scas
imul
mov
or
out
jg
cltd
adc
push
js
adc
mov
add
adc
add
not
shrl
pushl
rclb
jp
lret
daa
mov
stos
and
lret
adc
lea
ret
xlat
xor
aas
push
std
out
adc
inc
mov
sbb
mov
push
mov
mov
pop
dec
add
cld
jns
daa
jg
adc
addr16
jae
stos
ret
adc
insl
inc
outsl
fbld
mov
mov
fcmovnu
fs
inc
js
movsl
mov
cli
and
xchg
call
repz
stc
sahf
push
sahf
nop
clc
mov
gs
inc
rcr
cmp
pop
push
push
call
cmp
out
mov
sbb
push
ja
mov
pusha
out
push
mov
orb
mov
dec
test
xor
icebp
lcall
icebp
data16
inc
cli
push
ret
ds
dec
popa
or
mov
mov
jle
std
pop
test
je
inc
repnz
and
mov
lock
in
imul
dec
jo
or
dec
cmp
jo
data16
inc
push
sbb
fisubrl
sbb
cld
out
jbe
outsb
jmp
pop
xor
scas
dec
inc
xor
inc
sbb
movsb
test
ret
xchg
jmp
lahf
jo
mov
sub
and
pop
sbb
lock
loopne
inc
or
sub
push
clc
and
sbb
sbb
stc
mov
inc
and
jne
fistps
lcall
lock
testl
push
pop
idivb
jmp
mov
add
xchg
sti
mov
or
pop
inc
inc
push
lret
cmp
dec
mov
fstp
and
mov
out
cmp
mov
repnz
push
and
mov
clc
rorb
scas
cld
sub
pop
ljmp
jns
fs
adc
ss
or
repz
aaa
inc
cld
aaa
push
pushf
inc
or
not
jle
dec
add
in
pop
stos
rcrb
cli
lret
and
xchg
mov
add
rorb
mov
mov
lcall
in
add
ret
and
dec
insb
jne
popf
cmpsl
sarb
add
in
in
aas
int
ja
xor
test
push
and
adc
loope
outsb
xchg
rcrb
jg
and
cmp
lods
adc
xchg
leave
push
jbe
add
adc
lcall
in
jmp
int3
pop
stos
cmpl
movsl
sbb
mov
mov
mov
shll
mov
sbb
add
jg
dec
sarb
cltd
add
cmpsb
pop
sbbl
scas
mov
aam
ffreep
sub
in
push
out
in
mov
jno
clc
fists
daa
std
rorl
dec
sbb
dec
or
xor
jg
jo
adc
or
pop
xor
jmp
call
sahf
push
xor
push
mov
cli
mov
or
call
fbstp
fs
hlt
sqrtps
hlt
sub
ljmp
mov
or
push
insl
negl
and
pop
pop
fistps
pop
notl
or
xchg
enter
movsl
mov
or
add
add
lea
in
mov
adcl
icebp
push
in
jle
mov
mov
or
addr16
faddl
adc
adc
test
cld
decl
fisttps
in
dec
cs
test
sbb
push
stos
js
pop
cmp
loopne
or
and
adc
push
pop
femms
add
nop
pop
pushf
repz
xor
lds
mov
les
pop
adc
data16
push
jg
test
adc
jl
mov
mov
mov
push
or
out
mov
in
cmpsb
jmp
inc
dec
or
insl
cmpsl
jo
hlt
dec
into
mov
cmpsl
jnp
aaa
insl
push
pop
pop
add
out
loope
je
std
filds
and
pop
mov
int
inc
rorl
push
scas
dec
scas
or
filds
les
mov
jge
aam
je
dec
dec
adc
inc
add
jns
stos
inc
out
fadd
cmpsb
pusha
mov
mov
xor
pop
cld
and
jnp
rcrb
mov
sti
inc
xor
addl
das
push
push
je
push
jmp
imul
cmp
cs
or
fidivl
lea
cmp
jge
push
or
es
insb
or
icebp
fisttps
jp
movsb
pop
ficoms
fistps
inc
push
push
adc
mov
cmp
sbb
add
jp
sub
daa
sbb
dec
push
notb
call
in
jge
jp
push
std
xor
call
inc
sbb
dec
push
aas
inc
xchg
add
jge
movsl
fists
inc
pushf
push
add
mov
or
fbld
sbb
sbbl
dec
dec
inc
and
pop
push
jo
add
sbb
lahf
sti
or
cmp
daa
jnp
rcl
or
push
ljmp
cmp
fmull
scas
push
leave
fcmovne
mov
pop
and
dec
movups
je
mov
xlat
aas
icebp
cmp
jmp
xchg
rcrl
clc
mull
inc
test
shl
mov
pop
ret
mov
mov
push
jbe
mov
ljmp
clc
outsl
sbb
mov
es
sub
rol
fwait
jecxz
dec
add
mov
aaa
lock
jns
push
sahf
xor
rcl
movsl
mov
mov
in
dec
sbb
and
js
cmpsl
adc
jmp
and
xor
cmpsl
mov
push
rol
cmp
mov
push
cmp
insb
bound
sbb
sub
std
bound
add
or
pop
push
js
fwait
xchg
lock
push
fstpt
stc
scas
add
loopne
fcmovnb
cmpsb
fcmovne
ds
xor
or
cld
outsl
out
jg
hlt
sub
adc
roll
lock
cmp
dec
push
adc
stc
pop
repnz
fmull
aas
or
aam
lods
mov
fcomip
insb
dec
jae
daa
jl
sbbl
mov
sbb
mov
gs
aad
mov
jle
fsub
inc
fnstcw
jb
mov
jae
loopne
adc
jecxz
lahf
ljmp
test
jp
or
sub
cwtl
mov
cmp
xor
mov
jbe
push
push
out
aaa
jb
call
add
mov
push
cs
xchg
sub
add
push
shr
decl
in
jmp
enter
jle
aaa
or
in
pop
mov
sahf
mov
pop
adc
movsl
in
addr16
adc
dec
fbld
cs
mov
inc
or
jp
inc
ret
lahf
mov
test
aaa
xor
mov
hlt
xchg
add
cwtl
nop
dec
lods
inc
aaa
push
adcl
outsl
cmpsl
push
jmp
pop
inc
inc
pop
xlat
push
jae
mov
out
adc
lock
testb
sub
pop
mov
and
subl
jne
fcmovnu
mov
push
jg
sti
mov
or
call
push
add
sub
pushf
in
mov
mov
pop
and
sbb
inc
int3
pop
sbb
stos
mov
or
xchg
sbb
je
sti
call
xor
hlt
xchg
jno
hlt
mov
std
test
andl
sub
test
add
xor
into
xchg
dec
cwtl
pop
in
rcll
jb
pushf
mov
push
std
fistpll
cmpsl
pop
aam
add
and
fbstp
dec
cmp
mov
or
pop
call
jg
push
push
add
cwtl
cmp
call
push
mov
jnp
and
inc
fst
mov
popa
test
ja
mov
adc
add
mov
mov
jmp
test
outsl
int3
mov
jno
clc
out
rorl
adc
pop
inc
jle
sub
insl
pop
ljmp
cltd
mov
mov
test
inc
inc
sti
scas
and
mov
pop
shl
arpl
pop
push
mov
or
enter
push
fs
inc
fldl
add
and
outsl
xchg
orl
fs
sub
pop
pop
and
push
outsb
or
and
enter
pop
pusha
shll
cmc
xchg
subb
mov
jge
push
adc
jnp
xchg
aad
sbbb
loop
testb
xor
rcll
push
in
xor
clc
decl
insl
outsl
dec
sub
dec
xor
jle
mov
inc
rep
or
adc
sub
or
sbb
inc
push
and
sbb
push
mov
in
into
add
push
inc
sbb
mov
lods
jb
test
idivb
jg
out
ljmp
pop
lahf
jns
imul
adc
cvtdq2ps
lods
fstl
call
xchg
cld
fists
ljmp
add
mov
add
pop
insb
mov
int3
out
loopne
push
decl
pop
mov
clc
push
adc
ss
cs
orb
mov
std
incl
in
stc
mov
jmp
xchg
fistpll
push
ret
mov
or
mov
mov
int
and
dec
push
pop
push
push
mov
push
outsb
pop
cmp
je
filds
mov
add
jbe
inc
mov
idiv
inc
lret
cmc
pop
lock
imul
sub
inc
fistl
movsb
cmovo
cmp
loope
test
xchg
test
jo
sahf
sub
or
xchg
lods
push
inc
nop
jge
inc
jno
mov
dec
pop
rcll
sbb
pusha
push
aaa
mov
in
sbb
jns
or
in
mov
xchg
or
and
adc
add
mov
stos
decl
push
lods
arpl
dec
or
fistpl
and
push
sbb
insl
adc
or
adc
adc
jne
dec
ret
mov
fimull
dec
ds
lcall
push
and
in
or
ja
dec
js
sbb
or
cs
shll
or
sbb
pop
mov
xorb
cmp
mov
sub
loopne
aaa
or
push
insb
pusha
cmc
inc
push
and
call
cltd
sbbl
das
add
out
lcall
pop
xor
xchg
cwtl
iret
push
fimull
outsl
std
sbbl
inc
jb
call
sbb
icebp
fists
nop
jno
repz
ficoms
icebp
pop
mov
pop
bound
lret
loope
ljmp
cld
xchg
outsb
pushf
fs
lock
fwait
shrb
aaa
adc
cmpl
mov
sbb
push
push
lea
or
mov
loope
and
roll
xor
aad
jp
je
out
fisubrs
push
arpl
xchg
xor
dec
push
mov
dec
iret
xchg
repnz
cltd
inc
lods
js
rclb
push
push
push
aam
aaa
icebp
jg
adc
int3
push
dec
orl
sbb
adc
daa
fdiv
outsl
sarb
mov
dec
aad
mov
fadd
lea
subl
push
in
jg
xchg
push
adc
lret
mov
adc
les
mov
ss
or
mov
pop
add
cs
in
fs
or
clc
pop
cmp
jne
push
outsl
cmp
cmp
xlat
mov
xchg
mov
jns
call
fstpt
inc
lcall
je
adcb
inc
fildl
adc
rcll
icebp
mov
je
repnz
push
dec
lret
mov
push
in
decl
out
dec
sbb
lock
jne
mov
adcl
mov
add
out
stos
repz
mov
xor
outsl
dec
dec
xor
shr
loopne
call
mov
mov
sub
and
add
pop
imul
aaa
jge
call
push
dec
or
inc
int
test
jl
sub
mov
pop
jl
pop
lret
dec
leave
cmp
int
push
cld
inc
loop
sub
adc
fisttpll
sti
xchg
adc
mov
cmp
or
mov
jb
rorb
or
and
cs
call
in
mov
cmp
sub
jae
or
in
and
fucom
es
push
incl
jge
in
nop
fdivl
dec
xchg
mov
lcall
imul
sub
mov
sbb
sub
push
xor
jne
idivb
inc
pop
push
and
xor
xchg
das
repz
fildll
notb
int3
add
dec
xchg
sbb
in
loope
mov
xorb
xchg
push
push
subl
adc
and
pop
push
and
sarl
dec
sbb
cmp
mov
or
inc
mov
call
or
adc
ss
adc
sbb
jecxz
outsl
popa
fdivr
jg
fistl
mov
inc
inc
jbe
out
enter
push
lahf
sub
xchg
test
fucomi
sub
stc
cmp
enter
inc
jl
and
mov
cltd
out
call
inc
fiadds
or
js
mov
insl
ss
jbe
or
sbb
andb
xor
sbb
iret
jne
mov
fiaddl
push
mov
sbb
push
addr16
mov
les
out
push
ljmp
pop
cmp
xor
aaa
pusha
ret
pop
dec
xor
jbe
cmp
jb
xor
dec
fwait
sti
mov
adc
ds
inc
and
aad
rolb
in
pop
xchg
mov
loope
push
pop
jg
imul
push
cmp
adc
jecxz
add
mov
mov
fildl
ljmp
outsb
adc
dec
mov
std
outsl
fistpll
mov
mov
insb
sahf
cmp
or
mov
adc
pop
sub
mov
pop
jp
ret
dec
sub
inc
cld
scas
call
xlat
mov
mov
mov
cs
add
and
in
and
fxch
or
leave
or
cld
fwait
push
cmp
cmp
imul
push
nop
cmc
dec
xchg
mov
push
lcall
enter
ret
push
movsl
test
clc
imul
jmp
inc
test
push
jno
ljmp
xchg
jnp
movsl
adc
mov
pop
in
xor
jno
pop
pop
lret
xchg
inc
add
push
and
xchg
push
push
lea
sub
or
dec
cmp
push
call
jg
rclb
cmp
lds
decb
push
enter
mov
outsl
xor
call
xchg
dec
pop
xor
mov
mov
cmpsl
xchg
push
adc
add
in
cli
pop
sti
push
clc
mov
adc
das
mov
sub
jbe
subb
ja
sahf
mov
repnz
sbb
loope
mov
inc
jne
sbb
jecxz
movsb
cltd
push
xchg
or
mov
les
outsl
arpl
incb
xor
pop
lcall
shl
loopne,pn
popf
repnz
or
sbb
push
mov
hlt
sub
pop
or
cld
mov
inc
je
pop
mov
aam
stc
or
test
fs
dec
cmp
lods
xchg
icebp
testb
dec
mov
wrmsr
sbb
mov
inc
dec
shl
add
lahf
ss
xchg
aad
jbe
inc
push
ss
mov
gs
outsl
xchg
bound
movl
ret
rclb
or
movsb
out
pop
mov
cmpsb
sbb
dec
xchg
mov
or
mov
nop
outsb
mov
jmp
add
adc
les
stos
mov
lock
adc
cmp
js
ret
push
mov
jl
mov
push
pusha
inc
xchg
loop
mov
sti
cmp
sbb
aas
inc
in
and
push
sbb
adc
je
adc
jp
je
inc
inc
jmp
pop
mov
add
push
mov
sbb
cmpsb
outsl
lods
push
and
fcompl
sbb
loope
aaa
fidivrl
mov
or
inc
cmc
or
jg
or
cmp
and
sti
jg
and
or
or
inc
adc
xor
mov
cmc
bound
jo
sbb
lea
aaa
fdivrl
fwait
dec
shl
in
cmpsb
and
inc
mov
addl
adc
int
xchg
sbb
std
jp
fistps
ds
pop
nop
cmc
jnp
call
mov
push
xchg
enter
cld
pop
pop
ret
call
push
jl
mov
jne
pop
fadds
fsubrs
push
xor
push
mov
adc
je
movswl
dec
aaa
mov
push
push
test
popa
pop
call
dec
testb
test
and
push
mov
cli
mov
adc
mov
loopne
add
adc
sub
ret
inc
jo
mov
and
out
pusha
adc
mov
mov
and
in
sbb
into
out
fidivrl
ret
push
push
cmp
xchg
mov
and
add
cmpsb
imul
pop
push
inc
fldenv
mov
inc
jb
ljmp
mov
jae
mov
mov
sbb
cli
mov
shr
sub
push
clc
enter
scas
or
mov
adc
nop
adc
and
mov
dec
adc
fndisi(8087
decl
add
pusha
or
lret
push
jbe
mov
mov
jle
push
push
sbb
xor
adc
cltd
movsb
cmpsl
inc
lahf
dec
call
mov
fistps
cmc
jns
push
popf
mov
aas
or
push
adc
call
stos
repz
mov
pop
lds
es
mov
mov
pop
test
pop
or
int
pop
inc
jmp
in
repnz
daa
loopne
cld
adc
and
and
jle
ret
loop
cmp
xchg
out
out
adcb
ljmp
popa
cmpsb
dec
cmp
lods
pop
sbbb
insl
dec
jno
inc
enter
call
call
addr16
sarb
mov
and
push
mov
sbb
lea
ret
imul
js
inc
xchg
push
mov
push
es
fldenv
cmp
push
nop
or
add
sub
insb
xor
sub
adcb
jle
aam
sbb
mov
push
cmp
push
sub
push
shlb
imul
loope
or
clc
js
or
xchg
add
outsb
pop
or
inc
movb
rcrb
imul
ret
xchg
adc
push
mov
es
sbb
out
xlat
fmuls
add
mov
jb
inc
xor
bound
xchg
je
icebp
fbstp
mov
gs
cmp
int
push
and
cmpsl
sti
pop
mov
inc
negl
or
and
mov
mov
cltd
or
add
push
pop
add
jle
rol
imul
sbb
ss
int
pop
nop
popa
xlat
incl
push
mov
jge
pop
divl
rclb
das
mov
arpl
call
xchg
js
add
jb
mov
es
stc
jne
pop
inc
test
dec
jo
mov
je
and
pop
loopne
and
call
out
dec
inc
sbb
rcrl
mov
leave
and
dec
nop
add
sub
lahf
std
mov
mov
mov
adc
sbb
stc
add
push
jbe
or
jnp
nop
push
sbb
push
push
mov
fiadds
ds
pop
mov
jmp
inc
loopne
add
jle
cmp
mov
je
jg
pop
push
call
inc
inc
ret
movsl
xchg
das
data16
pop
mov
sub
push
cltd
pop
jb
shlb
or
sbb
icebp
adc
mov
jle
xchg
add
push
xchg
jnp
loop
sub
insl
push
das
in
inc
fistl
dec
rorb
sub
in
stos
in
aaa
pushf
out
push
or
jp
mov
cld
push
lock
or
or
xchg
rorl
lcall
or
mov
les
ret
xchg
xchg
out
popa
xor
mov
movsl
and
sub
xor
in
ss
pop
and
inc
stos
fs
xchg
int
packuswb
loope
out
outsl
js
xchg
push
push
or
jo
mov
or
pop
or
ret
mov
scas
push
xchg
ljmp
mov
mov
dec
mov
leave
pop
adc
adc
jg
xchg
call
ret
fmuls
repnz
cltd
outsb
push
notb
jge
cmp
test
call
aam
jb
adc
ss
sub
rcrb
loop
test
pop
and
aas
ljmp
stos
push
sub
clc
cwtl
adc
dec
test
mov
insb
mov
push
ljmp
mov
fistl
fiadds
test
mov
fs
add
jg
pop
jne
test
dec
les
adc
movsl
mov
cmp
das
sbb
ss
jg
cmpsb
ret
sub
lret
cmp
pop
jge
push
push
cwtl
and
shl
sbbb
sbb
mov
inc
and
mov
mov
sub
aaa
jno
push
and
pop
or
mov
dec
xchg
lock
push
inc
mov
nop
sbb
inc
repnz
and
std
dec
cmpsl
insl
and
mov
and
les
xor
xchg
inc
ret
scas
jbe
sti
pop
adc
into
jle
idivl
int
xor
mov
adc
xchg
jbe
aaa
jp
bound
movl
xor
push
sub
pop
mov
cli
push
in
mov
mov
mov
sbb
pop
sbb
adc
jle
pop
and
je
call
mov
stc
test
mov
and
sub
add
mov
inc
push
cmp
fisubrl
aaa
cmp
push
fnstsw
add
inc
hlt
adc
xor
rolb
mov
dec
or
loop
in
push
xor
orl
aad
out
leave
push
pushl
push
hlt
pushf
xor
or
std
movsl
dec
scas
inc
subb
or
pop
fdivr
cmp
lds
fistpll
cli
out
pop
sti
outsl
mov
or
pop
test
and
jg
aaa
mov
xorl
loopne
sub
sti
test
mov
adc
jp
andl
stc
fcompl
cli
divb
pop
test
push
inc
mov
mov
xchg
mov
dec
pop
data16
push
icebp
inc
daa
xchg
xchg
xor
ja
mov
pop
or
hlt
xchg
inc
mov
in
sar
aam
pop
lret
or
mov
inc
xchg
cld
mov
cmc
dec
in
ja
xor
sbb
xor
push
sbb
push
mov
orb
cs
mov
outsl
push
and
xor
hlt
nop
scas
sti
add
outsb
in
sub
call
aam
lock
push
xor
ss
out
mov
mov
sbb
sub
pusha
fisubrs
pop
mov
jbe
fwait
leave
xor
ja
stos
shlb
or
mov
outsl
stos
lret
inc
repnz
mov
pop
ficoms
lcall
or
add
popf
add
data16
int3
cmp
jp
mov
loopne
xor
insl
ret
and
js
test
bound
insl
add
clc
sbb
jmp
pop
push
mov
in
ret
xor
mov
lock
sbb
push
dec
cmp
cmpsb
mov
out
dec
jmp
push
lea
or
repnz
inc
imul
ret
push
les
xor
sahf
sbb
mov
pop
jbe
and
and
hlt
insb
jecxz
or
aam
into
mov
mov
or
xor
sub
push
call
loopne
push
push
loopne
fdivp
jns
mov
enter
sub
sbb
cmpsb
repnz
insb
inc
mov
mov
pop
test
add
sub
fcomp
mov
xor
mov
lods
das
pusha
and
or
daa
mov
fisttpll
mov
lret
mov
lahf
xchg
or
fsubl
xchg
insb
test
ret
in
cs
je
inc
js
push
and
push
decb
adc
push
jge
push
push
pop
or
subb
loop
or
xchg
out
mov
dec
sbb
outsb
xchg
popa
jnp
stos
mov
add
clc
inc
xchg
out
jp
inc
sub
push
jns
inc
xor
push
sbb
out
push
sub
dec
cmc
jbe
lahf
scas
cmp
sti
lods
add
jmp
mov
ret
mov
or
adc
int
pop
mov
outsb
xor
cwtl
xor
sbb
dec
ja
pop
outsb
xchg
adc
cmp
addr16
or
mov
mov
mov
inc
inc
mov
push
push
cmp
pop
shrb
push
lock
fimull
pusha
sub
or
adc
push
sub
je
cmpsb
or
mov
xor
in
aad
inc
sarl
xor
pusha
push
cmp
fisttpl
sbb
call
aad
insl
hlt
divb
shll
jle
hlt
add
push
or
mov
xor
add
pop
add
cmp
popaw
mov
mov
xor
mov
rcrl
adc
test
inc
mov
rorl
movsb
pusha
mov
ja
test
adc
in
xorl
lea
sbb
sbb
sbb
leave
add
mov
pop
xor
mov
jb
mov
outsl
jo
sarl
and
or
jne
repnz
js
fwait
dec
popa
cmp
adc
loope
inc
xchg
inc
sbb
fcoml
xor
pop
sub
hlt
push
adc
enter
mov
outsl
mov
mov
mov
or
xchg
js
pop
rcl
sub
inc
es
adc
repz
fdiv
fbstp
sarb
push
add
test
pop
cld
std
repz
mov
push
push
jmp
enter
push
pushf
mov
decb
rclb
imul
ljmp
std
adc
mov
je
jmp
fwait
jecxz
sbb
xor
or
sbb
cmp
inc
lcall
xchg
aam
jo
push
pushl
out
mov
in
stc
pushf
and
pop
clc
inc
std
mov
mov
inc
sub
mov
pop
push
or
or
sub
das
mov
mov
mov
in
xchg
add
rolb
cli
cltd
dec
lret
das
mov
in
pop
movsl
fistl
pop
and
push
lock
add
jmp
and
mov
lcall
orl
mov
jne
or
mov
pop
adc
ret
or
add
rorl
mov
arpl
loop
push
push
pop
stos
cld
stos
pop
lods
adc
add
or
inc
mov
push
ret
scas
stos
ret
xor
lret
mov
hlt
or
mov
inc
es
out
mov
icebp
mov
mov
xchg
cmpsb
mov
rcrb
or
bsf
sub
push
or
mull
mov
test
loope
fwait
jecxz
jp
sysenter
sub
xchg
loop
sub
push
or
js
sbb
push
push
mov
movsb
mov
mov
add
inc
sub
inc
insb
sub
pop
xor
jp
test
repz
jg
mov
cmp
xchg
adc
fadd
mov
cld
decb
les
stos
scas
ret
sbb
and
imul
jg
scas
mov
ret
stos
ret
ret
pop
shlb
outsb
mov
and
sub
dec
iret
mov
push
out
rclb
mov
inc
imul
dec
sub
pop
xor
push
aam
mov
adcl
jne
fdivs
sbb
popf
jmp
in
fldt
bound
jle
add
push
lcall
ja
out
push
cmpsl
ud2
pusha
pop
rclb
je
push
dec
sub
dec
ficomps
insb
lahf
ds
loop
std
or
andb
pop
xchg
mov
fucomp
pop
lods
sbb
mov
ret
sbb
std
stc
ret
adc
sbb
imul
pop
or
sub
push
sub
loopne
lret
outsb
fsubrs
jno
test
fsubl
add
outsl
les
sbb
jmp
cmp
pop
out
and
mov
cmp
fs
push
mov
inc
popf
adc
add
pushf
and
and
test
mov
mov
adc
mov
pop
fdiv
movsl
test
add
mov
fsubl
inc
out
daa
pop
stos
pop
pop
int3
lods
sub
inc
push
sub
out
mov
aaa
jo
cld
leave
hlt
out
fwait
cmp
cld
xor
je
mov
and
cmpsb
dec
push
aaa
icebp
loopne
fwait
cli
inc
push
sbb
cmp
sub
mov
call
jbe
mov
imulb
into
push
daa
xchg
or
sub
jecxz
lahf
std
and
xlat
outsb
and
mov
test
jl
jp
cli
pop
push
dec
test
je
mov
sub
xchg
xorl
pop
inc
mov
inc
in
pop
ficompl
sbb
aam
fistl
or
mov
lock
inc
and
pop
out
loopne
mov
dec
mov
cmc
mov
jo
xlat
mov
pop
mov
pop
mov
xor
sbb
inc
pop
icebp
into
std
shll
lcall
pop
loope
xchg
mov
mov
cmp
outsb
add
inc
sbb
andb
or
add
fadds
testb
decl
aam
repz
stos
xor
in
jno
xchg
mov
enter
push
in
outsb
mov
inc
inc
gs
mov
fidivl
mov
xor
ss
int3
jae
out
sbb
xor
dec
scas
test
jo
or
and
stos
push
push
mov
and
push
ret
inc
mov
push
push
and
and
fistps
sbb
cmp
out
pop
xor
je
and
jns
aad
mov
xchg
sub
ljmp
cmp
fstl
jg
pop
pop
addb
lret
call
aas
pop
test
cmovp
pop
dec
dec
test
dec
insl
leave
pop
inc
dec
imul
aaa
sub
repnz
fimuls
ret
outsl
fnstsw
sti
sub
push
or
mov
mov
pop
adc
fists
fsubrs
adc
fidivl
dec
add
cmp
mov
adc
dec
jl
repnz
cmpsl
push
mov
cltd
jbe
xor
xchg
adc
mov
in
js
in
mov
inc
sub
sti
adc
dec
in
xor
dec
insb
add
insl
lret
mov
pop
pop
sub
fimuls
jbe
ss
or
out
adc
mov
les
out
mov
or
and
sbb
nopl
or
rcr
scas
add
mov
adc
gs
stos
jecxz
cmc
popf
cld
dec
jl
lds
insl
nop
pop
xchg
cmp
dec
mov
mov
insb
out
and
xchg
ss
repz
stos
outsb
ret
jne
bnd
mov
cs
outsb
test
push
sbb
nop
hlt
das
mov
add
or
mov
mov
fstpt
jmp
lods
dec
inc
iret
jmp
cmpsb
push
fists
push
mov
xchg
dec
jp
adc
testb
rcrl
test
lock
pop
test
test
mov
stos
ljmp
movsb
fiadds
adc
add
mov
loop
test
jo
mov
jmp
aaa
pop
xchg
jle
inc
jp
hlt
scas
ljmp
dec
call
cmovnp
sbb
mov
outsl
jp
mov
mov
jnp
push
or
clc
call
or
insb
cmpl
or
into
sub
and
call
pop
xor
pop
cmp
cli
mov
out
pop
aam
mov
sub
test
add
sub
scas
adc
faddl
sti
daa
dec
jns
sub
outsl
pop
ljmp
not
jns
mov
cmp
add
cmp
icebp
or
cli
jmp
pop
adc
out
call
daa
cltd
inc
sbb
add
cmp
push
pop
test
imul
aas
sub
je
repz
dec
decb
xchg
int
lods
mov
xlat
sub
imul
inc
pop
inc
push
mov
addl
insb
push
push
sbb
mov
push
in
fdivrl
mov
inc
jo
or
sub
fwait
push
hlt
insl
push
mov
mov
or
std
in
pop
call
or
or
dec
push
pop
push
add
data16
xor
mov
fsqrt
inc
mov
fisubl
fwait
loopne
adc
mov
filds
xor
call
je
jg
ret
mov
adc
and
jp
ja
je
fcomps
jmp
add
ret
adc
jae
pmullw
jne
lock
mov
je,pn
dec
daa
aam
bound
sbb
jns
mov
add
sub
cmp
clc
add
push
sub
cmp
repz
mov
jo
orb
gs
aad
mov
jo
push
xor
mov
test
sbb
dec
loopne
mov
imul
inc
mov
inc
push
stos
cli
frstor
adc
sbb
or
fisubl
insb
cmp
lret
xchg
cs
cmp
pop
push
mov
fldt
clc
xchg
test
or
outsl
loop
mov
add
dec
sub
mov
hlt
adc
jne
popa
mov
test
mov
fiaddl
cmpsb
or
inc
filds
sti
ret
mov
dec
lret
xchg
pop
pusha
ret
add
jmp
ss
aam
movsl
outsb
cmpsb
pop
inc
jno
dec
aas
ret
and
xchg
mov
lods
cmovne
dec
mov
push
lahf
push
cmp
xor
ret
xor
mov
pop
addl
sbb
fucomip
aam
jne
sub
out
out
xchg
or
mov
xor
mov
loopne
cmove
pop
mov
aaa
mov
lock
movsl
xchg
out
cmpsl
jbe
pop
shll
call
cmp
jne
sbb
push
mov
outsl
fbld
cmp
sbb
fs
je
call
es
mov
or
ret
imul
pop
jo
pop
xor
out
mov
std
adc
add
filds
aam
or
jg
rcrl
or
test
fsts
xchg
fnsave
sub
inc
das
addr16
cmp
loop
fcmovne
aad
mov
pop
jl
inc
cmp
inc
dec
and
outsl
and
arpl
xchg
test
push
das
push
mov
inc
jp
jp
in
loope
loopne
daa
lock
jae
pop
or
insl
adc
and
xchg
incb
int
adc
inc
imul
mov
fidivrs
or
mov
test
xor
pop
lods
mov
pop
popa
mov
jmp
xor
incl
bound
add
jg
xchg
push
es
add
add
xchg
cmp
cmp
push
fsin
rcr
pop
dec
seto
and
movsb
adc
dec
xchg
dec
mov
adc
jno
rorb
pushf
cmp
jge
je
mov
aaa
or
and
and
push
add
arpl
pop
into
cmp
fcomps
sbb
fnstcw
push
sbb
or
iret
roll
popa
std
push
cmpsl
jmp
push
xchg
push
fcomps
adc
pop
jle
add
int3
cmpsl
xor
mov
ss
xor
pusha
xor
int3
dec
mov
sbb
sbb
neg
push
jmp
adc
mov
stc
dec
std
in
fldt
or
xor
jb
cmp
adc
jb
fldt
scas
sub
mov
xor
mov
sbb
sbb
out
jle
cltd
mov
sub
ret
pushw
jmp
pop
rcr
push
or
dec
cmp
in
or
or
pop
lcall
js
mov
sbb
jns
callw
or
loope
pop
pop
mov
mov
subl
push
adc
add
popa
dec
movsl
in
jo
aaa
ja
cmp
sbb
mov
aad
jle
roll
jge
mov
ret
cs
movsb
mov
popa
in
push
push
hlt
daa
fistps
pop
xor
orb
lret
xor
ja
loopne
xchg
mov
cmpsl
loop
cmp
sbb
cmpsl
mov
jo
adc
sti
add
adc
btc
adc
adc
out
jmp
ss
das
in
inc
je
inc
xlat
xchg
sbb
add
data16
xchg
ret
pop
mov
xchg
jmp
pop
add
ret
push
arpl
xchg
sbb
mov
icebp
inc
push
mov
inc
je
dec
cmp
jnp
incl
mov
ljmp
pop
subl
and
pushf
xchg
inc
jge
mov
stos
and
mov
mov
jnp
add
and
insl
mov
addr16
xchg
les
sbbb
cmp
daa
mov
sub
xor
push
divl
enter
sbb
push
nop
call
ss
arpl
aad
stos
fsincos
fldl
and
pop
addr16
and
and
cmp
and
out
xchg
pop
gs
mov
mov
data16
and
dec
sub
in
xchg
xor
lahf
js
aas
mov
out
pop
add
and
or
push
push
jne
jl
ja
jne
and
mov
xor
in
insb
mov
sbbl
mov
add
iret
adc
cmpl
mov
inc
adc
pushf
insb
mov
xor
mov
and
adc
in
in
in
loope
dec
fidivrs
gs
mov
push
pusha
mov
out
sub
stos
lcall
aaa
sub
adcl
push
clc
push
add
mov
cmpsl
cmpsb
push
pop
or
adc
xor
mov
cmc
orb
sbb
pushf
add
mov
and
std
int
dec
lret
xchg
mov
test
imul
sbb
push
push
mov
in
pop
mov
push
ss
repnz
sub
mov
sub
jg
fs
mov
orl
cltd
xchg
arpl
adc
mov
jg
ds
mov
lahf
xor
les
aaa
add
ret
xorl
pop
fcoms
in
jmp
and
std
pop
les
adc
jbe
movb
in
stos
ljmp
cmp
pop
sub
sub
call
outsl
icebp
push
sbb
mov
in
push
loop
roll
push
xor
mov
cmp
dec
push
push
xlat
shll
lock
cmpl
paddusb
push
mov
ds
and
sub
rcrb
inc
push
mov
lods
xlat
jmp
xor
fimull
scas
cwtl
or
mov
call
cmpsb
mov
mov
mov
xor
scas
or
push
daa
decl
sub
outsl
push
xor
fmull
mov
cwtl
popf
add
ss
or
pop
je
inc
lds
loop
movsl
in
xlat
scas
inc
adc
xor
shrb
mov
dec
pop
fsubrs
enter
outsb
sti
ja
mov
sbb
pop
sbb
push
pusha
adc
jno
mov
fsubs
shl
nop
push
xor
incl
xchg
or
adc
or
aaa
mov
cmp
pop
cli
fwait
xchg
mov
sbb
inc
enter
pop
mov
call
mov
je
xchg
jp
sar
mov
repnz
insl
sub
push
sbb
inc
ljmp
pop
push
mov
imul
or
dec
gs
adc
adc
jmp
adc
mov
dec
out
repnz
daa
or
out
out
jl
sub
pop
clc
or
mov
movsl
dec
mov
mov
dec
jnp
cli
jb
cmp
push
pop
sbb
imul
push
pop
xchg
xor
paddw
pop
mov
dec
pop
call
rcrl
dec
push
adc
sbb
mov
cwtl
in
adcl
lock
jg
mov
adc
pop
add
xor
push
push
scas
frstor
lea
pop
push
dec
mov
mov
xor
xchg
movsl
rcrb
cmp
mov
ret
sbb
mov
cltd
sti
mov
mov
sub
jae
hlt
enter
push
pop
std
bound
push
cs
jnp
std
inc
ljmp
jo
in
adc
push
pop
inc
fst
add
jge
xchg
clc
mov
arpl
out
inc
push
xor
test
cld
inc
and
mov
inc
push
add
rclb
movsl
ror
lods
dec
pop
call
mov
sub
cmp
outsb
jge
popf
xchg
jmp
jl
ret
and
cld
test
les
mov
cmp
ja
sti
mov
outsl
or
and
adc
repnz
cmp
mov
mov
pop
or
fiaddl
in
pop
adc
outsl
sbb
cld
dec
mov
mov
cmp
ret
and
xor
pop
sub
in
xor
cld
cmpb
call
aaa
addr16
and
shl
data16
push
rcrl
ffree
inc
sub
into
out
insb
sub
shl
push
mov
pop
mov
in
or
xor
mov
add
arpl
jle
shrl
sub
loopne
add
xor
iret
outsl
xchg
stos
aad
iret
lods
jne
sub
cld
das
inc
xchg
fcoml
or
rcrb
jge
jne
push
loopne
shlb
in
bnd
xor
mov
mov
inc
test
lret
bound
adcl
inc
sub
lcall
inc
mov
ss
les
lods
adc
sbb
dec
pushf
icebp
jb
xor
pop
or
lods
inc
popa
jae
test
cli
xchg
jns
hlt
jp
mov
mov
lock
sbb
outsb
mov
insb
and
or
ret
mov
ret
push
xchg
and
aaa
lret
jne
mov
icebp
mov
xor
test
dec
jno
cmp
xchg
fwait
xor
in
mov
sbb
mov
aad
aaa
outsl
cli
fsubr
test
lret
push
adc
gs
stos
or
lds
test
aad
xor
fmulp
pop
andl
add
dec
fs
nop
inc
mov
sbb
cmpsl
in
add
push
test
jns
adc
aaa
pop
mov
jmp
xor
mov
scas
jg
call
jns
mov
cltd
inc
shrb
mov
call
test
pop
test
das
pop
add
rcrb
pop
jle
int3
mov
add
mov
cltd
mov
pop
or
sbb
inc
stos
orl
cmpb
enter
mov
cmp
leave
addb
jnp
pop
icebp
lea
adc
sbb
sub
je
outsl
das
add
lret
lea
push
xor
mov
mov
test
xchg
in
js
or
jg
cmpsl
adc
pop
aad
dec
push
push
dec
mov
jmp
or
jecxz
subb
xchg
js
mov
push
popa
shll
test
sub
xchg
cs
pop
or
jne
leave
ret
add
fisttpl
jmp
call
test
in
stos
cmc
testb
pop
mov
push
or
mov
movsl
sti
stos
idiv
out
mov
int3
push
inc
cld
mov
ja
dec
fcmovnb
add
inc
popf
daa
mov
sti
movsl
ljmp
or
fstpl
cs
es
push
inc
cli
cmpsb
push
out
push
sahf
adc
and
ret
outsl
xor
push
inc
lret
mov
je
push
popa
add
adc
add
in
das
add
cmpsb
xor
cli
incl
or
pop
cmp
pop
pop
push
loopne
adc
xor
sub
ret
mov
or
and
jb
adc
mov
pusha
jl
daa
aam
cmpsb
mov
and
inc
jmp
or
dec
lds
in
aas
call
es
call
movsl
mov
repz
inc
addr16
imul
fildl
cli
lcall
xchg
ret
jmp
addr16
out
aaa
cmc
aaa
mov
add
pusha
jmp
adc
lock
int
jmp
aaa
idivb
loopne
xor
cmpsl
sub
outsb
nop
jne
mov
aas
or
sbbl
out
jbe
or
int3
inc
mov
or
xor
jo
push
push
dec
mov
imul
fisttps
push
pop
stos
loopne
lcall
push
sbb
clc
inc
ja
outsl
and
clc
frstor
xchg
mov
shrb
xor
cmp
jmp
les
pop
cmp
cmpsb
mov
inc
cmp
jo
fsubl
or
cmp
sbb
sbb
or
push
je
mov
mov
cmp
mov
scas
pop
push
out
daa
inc
and
pop
sub
dec
jge
iret
inc
mov
data16
or
add
negb
push
mov
push
mov
push
cmp
leave
clc
pusha
aaa
loopne
shll
cwtl
mov
sub
mov
das
pop
push
cs
add
call
mov
das
add
ret
mov
push
dec
hlt
mov
outsb
fs
sbb
and
add
ja
mov
xchg
ds
roll
xorl
shr
push
or
pushf
sar
sbbl
stc
or
shr
push
cli
xchg
push
sbb
pop
test
nop
adc
xchg
ljmp
xchg
pop
into
or
arpl
shr
mov
and
cmp
or
rorb
adc
jo,pt
add
or
mov
imul
or
loope
js
setle
push
fwait
xlat
cmp
xor
in
call
daa
loop
ljmp
lods
inc
call
jo
jbe
call
adc
inc
jnp
decb
outsl
pop
fisubrl
sub
push
lcall
int
in
stos
cwtl
xor
addb
out
fistpl
aad
shrl
daa
xor
cmpsl
testb
adc
and
gs
inc
or
push
jo
jne
inc
je
xor
or
lret
and
inc
ficoms
out
mov
ret
dec
dec
inc
test
ljmp
mov
out
adc
fsubl
fs
aaa
mov
dec
push
iret
and
test
test
jb
or
in
rcl
or
mov
fsts
jl
inc
or
cwtl
je
je
les
mov
or
mov
adc
rolb
outsl
push
in
push
bound
xchg
mov
mov
icebp
out
test
mov
xor
outsl
das
cmp
and
ret
push
lods
dec
shl
outsb
clc
pop
out
repnz
bound
or
add
mov
pop
in
push
clc
mov
mov
mov
orl
xchg
mov
hlt
pop
pop
jo
lea
ja
nop
lods
cld
xor
lea
sbb
clc
jge
mov
sbb
cmpsb
jmp
mov
into
icebp
fs
div
cs
or
sbb
cmp
add
sub
jo
dec
jne
fwait
sbb
stos
lret
pusha
clc
or
or
mov
mov
push
dec
add
adc
xchg
jbe
outsb
jp
pop
dec
and
mulb
cmc
fnstenv
dec
push
push
cmp
or
lds
mov
clc
lahf
lret
sbb
add
inc
xchg
and
jmp
fwait
mov
jno
mov
and
sbb
fwait
out
jmp
insb
clc
testb
repz
jp
jle
pop
cmc
cmp
stc
sbb
and
aas
js
fstpt
mov
sub
in
outsl
mov
cmc
push
data16
jg
pop
inc
je
and
imul
aaa
loop
rcll
mov
ljmp
xor
call
mov
push
repz
mov
int3
jg
outsb
xor
inc
and
popa
roll
inc
nop
sti
in
pop
insl
sub
lret
cmpsb
add
push
sbb
pushl
sub
sub
icebp
lea
dec
lds
insl
fs
cwtl
adc
popf
test
pop
mov
push
add
mov
testb
lods
rol
dec
loopne
hlt
push
mov
jl
push
pushf
or
pop
lods
call
sarb
lret
and
mov
jns
mov
test
push
cmpsb
adc
mov
cwtl
xchg
push
bound
and
nop
sbb
xchg
or
sbb
sub
int3
xchg
pop
jmp
and
dec
neg
mov
fdivr
es
xchg
ljmp
adc
add
dec
mov
loopne
decb
cmc
aam
and
xlat
push
xchg
call
push
mov
out
mov
mov
test
stc
data16
insl
or
sbb
xor
xchg
cmp
or
push
jl
arpl
xor
cmp
jg
inc
movsl
ficoml
scas
fst
mov
cwtl
lea
mov
push
or
cltd
and
aas
sub
ret
fsubs
jl
sub
jbe
xchg
lods
movd
pop
mov
sbb
mov
jge
movb
pop
js
gs
or
shr
andb
outsl
mov
or
popa
cmp
lock
aam
xor
and
popa
scas
xor
push
das
and
push
cmpsb
push
mov
mov
ss
scas
pop
divl
test
dec
cmp
xor
cmp
hlt
push
leave
addr16
fldt
xor
sub
lods
push
clc
popf
fnsave
js
shrb
add
cmp
xor
inc
sahf
mov
daa
or
je
cmp
or
dec
mov
sbb
adc
add
outsl
mov
sbb
repz
fwait
add
es
mov
shrb
daa
mov
or
mov
and
xor
fildll
pop
dec
orl
fbstp
sub
sti
cmp
bound
jno
pushl
stc
fldl
adc
jl
pop
stc
pop
ss
push
andb
cmp
and
inc
pop
ja
sub
push
sub
outsb
jne
lock
sti
and
loope
adc
jle
sbb
mov
je
inc
or
fisubs
enter
xchg
mov
pop
aaa
fisttpll
daa
mov
push
imul
ficoms
mov
shlb
scas
xor
or
sti
or
fsub
repz
push
mov
in
inc
cmpl
in
cmp
call
fmuls
fstpl
pop
scas
add
stc
add
pop
and
or
out
or
js
fistpl
xor
xchg
mov
push
setge
roll
inc
fbld
shr
negl
cmpsb
sbb
jae
repnz
xor
push
inc
in
sbb
gs
add
das
call
pop
dec
lcall
pop
sub
xor
dec
js
and
jg
cmp
ficomps
fcmove
call
lret
inc
dec
imul
ljmp
mov
mov
int
lds
lcall
int3
xchg
xor
push
adc
loop
and
dec
or
lods
and
mov
adc
xor
dec
out
ret
sbb
pop
mov
mov
stos
test
mov
push
inc
divb
or
push
pop
insb
loopne
mov
adc
cmp
fiaddl
andb
pop
jge
sbb
cltd
call
pop
jge
cmovs
inc
ja
popa
and
icebp
inc
inc
test
pop
subb
hlt
jg
pop
test
jp
push
sbb
ljmp
push
push
gs
push
push
sbb
mov
sbb
lret
imul
out
int
mov
psadbw
mov
addl
jmp
inc
xor
fistl
cs
les
out
and
or
jo
shlb
adc
icebp
loop
arpl
add
adc
sbb
xor
push
xlat
xchg
fs
push
adc
movsb
scas
xor
sbb
ss
into
shl
js
fstps
xor
mov
clc
and
pop
and
rep
pop
xor
int
and
or
enter
mov
mov
jle
xchg
mov
add
xor
cmp
out
mov
or
inc
pop
sbb
dec
mov
xlat
push
cld
push
fstl
in
sbb
imul
add
mov
loopne
out
xchg
mov
dec
mov
ds
popl
outsl
and
and
mov
jmp
pop
insb
lock
in
mov
xchg
mov
push
inc
xchg
lret
pop
push
inc
addl
decl
negb
sbb
mov
jmp
frstor
dec
in
mov
xlat
inc
inc
out
dec
jb
notb
jge
inc
pop
fsubr
pop
jp
int3
dec
aad
dec
dec
sub
cmpsl
inc
mov
repnz
lds
std
adc
mov
sbbb
ffree
fnsave
inc
jns
mov
movsl
xor
mov
push
sbb
mov
pop
ss
push
test
adc
pop
scas
outsb
pop
add
mov
lds
cmpsl
jns
gs
cmp
mov
xchg
pop
jl
dec
mov
inc
lods
inc
inc
add
shlb
es
loope
sbb
jl
or
sub
es
les
jge
icebp
fisubrl
sub
sub
fcomp
mov
jns
orb
push
jne
outsl
pop
push
int
inc
call
or
pop
clc
fistl
out
cmc
je
lcall
jmp
mov
inc
out
or
cmp
push
faddl
mov
push
sub
aad
fldl
out
sbb
jg
rcrb
shlb
cmp
in
mov
inc
ret
dec
sub
or
push
lock
or
lahf
pusha
js
mov
jge
xchg
ret
push
insb
push
and
pop
cmc
stos
mov
push
std
pop
jle
outsl
fistpll
sbb
dec
push
and
mov
adc
inc
add
mov
cmp
and
je
and
xlat
loope
ljmp
adc
mov
out
loopne
xorl
add
inc
fimuls
imul
mov
aad
aad
pop
mov
leave
mov
add
daa
pop
clc
out
mov
repz
dec
xor
adc
outsl
out
push
call
les
and
jne
sbb
iret
and
pop
mov
pop
xchg
js
std
add
jne
pop
outsl
lea
push
fists
shlb
mov
and
dec
lock
adc
sbb
ret
push
inc
push
inc
cs
push
jle
mov
fimull
adc
ret
adc
or
enter
arpl
sbb
mov
test
dec
mov
cli
jnp
cmp
xor
inc
fsubr
pop
push
sti
mov
lds
sti
jns
dec
xor
push
mov
aas
sbb
loope
mov
inc
jmp
pop
inc
nop
sbb
mov
jb
mov
lock
insl
bound
jmp
jae
outsl
or
sub
icebp
test
hlt
lret
add
mov
nop
lahf
mov
mov
aas
data16
ffreep
scas
mov
push
test
cmp
ret
into
add
add
jne
mov
jmp
or
push
lahf
adc
loop
mov
fs
out
mov
rcrb
in
out
call
push
jne
push
call
mov
or
inc
lods
mov
ljmp
lahf
sub
in
jmp
je
into
scas
fistl
inc
or
push
and
sub
popf
in
or
jmp
sub
jg
xor
std
movsl
xor
aam
mov
outsb
push
or
mov
inc
adcb
mov
adc
or
push
cmc
loop
pop
mov
jbe
popa
mov
mov
in
add
ret
sub
flds
push
adc
cmc
mov
mov
outsb
or
mov
inc
push
movsl
add
push
mov
and
xorb
add
and
and
inc
cmp
rcl
and
wrmsr
adc
loope
mov
aas
inc
pop
in
xlat
addr16
aad
push
inc
scas
inc
sbb
pop
fwait
outsb
fmuls
lods
or
bound
stc
push
gs
push
xchg
pop
jo
ss
or
ja
loopne
lods
outsl
lret
call
outsb
xchg
lods
xchg
lods
cld
inc
dec
call
scas
andl
push
cmpsl
mov
xor
stc
and
pushl
pop
or
pop
test
pop
dec
fisubrl
push
aaa
idivb
loopne
adc
or
adc
inc
fisubrs
test
fcmovnb
pop
aam
add
test
inc
jb
scas
jno
or
pop
je
lea
push
sti
repnz
outsl
out
dec
aaa
outsl
or
mov
mov
xchg
das
adc
jo
outsb
mov
dec
inc
and
mov
out
xchg
cmp
jne
or
lcall
inc
mov
dec
cwtl
add
in
mov
inc
jbe
or
sbb
sub
fisubrs
pop
sbb
ljmp
cmp
mov
dec
iretw
push
jne
imull
test
nop
pop
cmc
pusha
test
dec
in
insl
leave
push
mov
sti
mov
mov
fs
rcrb
sti
aaa
inc
inc
stos
mov
dec
jecxz
hlt
mov
mov
sahf
cmp
cmp
mov
insb
daa
add
sti
or
mov
jo
es
xlat
xchg
xor
and
jle
adc
push
test
xor
cmp
mov
jns
mov
jge
or
push
ja
ja
add
cmp
xchg
jnp
adc
jecxz
xchg
movsl
aaa
shr
test
data16
push
in
scas
rcl
mov
mov
test
aam
and
add
or
mov
rolb
cld
loop
loop
addl
sbb
fisttps
outsb
cmp
mov
je
cmpsl
xchg
dec
mov
scas
jo
mov
fdivl
or
aas
and
jl
push
rol
push
mov
pop
popa
mov
jg
xchg
je
out
repnz
pop
es
mov
or
pop
dec
pop
insb
cli
fisttpl
or
dec
sub
or
push
push
pop
adc
inc
cld
lret
jbe
out
mov
inc
or
ljmp
dec
call
je
adc
mov
or
ret
mov
jns
pop
ljmp
outsb
mov
mov
mov
pop
loopne
pop
or
inc
mov
into
je
mov
outsb
je
pop
ds
pop
mov
or
icebp
cmpsb
xchg
jne
and
fsubrp
jbe
fisttpl
push
mov
lea
pop
mov
cli
or
inc
jae
sub
push
and
add
pop
sbbb
mov
sti
sub
test
pop
inc
dec
loope
sbb
ljmp
xor
push
add
push
xlat
pop
jbe
cmc
mov
or
subb
sbb
movsl
xchg
repnz
mov
insl
dec
pop
push
movsb
subb
dec
sub
cmp
sbb
icebp
fildl
mov
mov
cmpsb
les
sti
mov
mov
and
loopne
mov
inc
aas
rcr
pop
xchg
pop
inc
dec
or
pop
mov
dec
stc
xchg
inc
mov
dec
cmp
adc
and
or
repnz
sbb
sub
cli
xchg
adc
dec
push
ret
dec
jo
ss
pusha
dec
imul
test
cmp
dec
out
fisubrl
mov
std
mov
and
jl
daa
fdivl
or
dec
adc
jp
fistps
test
push
call
call
adc
fs
cld
ja
xor
out
push
ljmp
inc
je
das
add
ror
push
inc
jl
dec
sbb
movsb
cmpsb
sbb
stos
outsb
add
xchg
pop
inc
sbb
outsb
insb
jmp
out
mov
cs
xchg
insb
jo
add
pop
dec
pop
iret
sub
inc
push
pop
inc
cmp
lods
fwait
in
aaa
idivl
sub
mov
xchg
lock
stc
mov
jge
cltd
outsb
fnsave
icebp
jns
mov
test
mov
mov
or
push
mov
ss
dec
imul
sbb
je
adc
pop
clc
shlb
imul
push
cmpsb
mov
sbb
push
jge
paddq
inc
sbbl
add
inc
xchg
pop
sbb
fcompl
push
addb
mov
or
out
sub
xchg
sub
jne
je
lods
push
out
orb
pusha
xchg
sar
int
js
repnz
inc
jle
dec
sbb
xorl
mov
mov
pop
test
aam
add
cld
add
dec
mov
mov
jle
add
bound
pop
jge
mov
jmp
test
mov
repz
dec
inc
fidivl
pop
nop
xor
dec
js
mov
or
scas
ja
cld
sahf
cli
adc
in
addb
mov
inc
fucomi
mov
lock
cli
jg
incl
or
aam
pusha
push
mov
scas
shlb
or
shlb
cli
or
rcrl
mov
adc
popf
adc
mov
and
adc
cltd
movsl
pushf
and
aam
nop
jmp
out
mov
cmp
add
bound
mov
cmp
add
or
andl
xlat
inc
or
call
or
cmc
outsl
and
imul
inc
jle
insl
add
push
xchg
mov
sbb
mov
stos
test
rolb
jge
pop
sub
adc
rolb
inc
pop
mov
adcl
adc
mov
or
xor
shll
int
mov
daa
sbbl
cmp
push
je
je
ja
mov
jo
fmuls
mov
add
lret
dec
xchg
pop
stos
loope
iret
and
clc
xor
sbb
sub
lret
xchg
je
insl
out
cmp
shll
loopne
pop
mov
sbb
or
in
ja
inc
or
je
in
adc
popa
lret
or
cltd
call
pop
loop
cmp
sbb
fs
push
and
push
aad
pop
outsl
or
mov
decb
xor
xor
jp
jbe
inc
cltd
push
test
add
fstp
mov
std
pushl
or
push
cmp
or
push
pop
cmp
sar
pusha
mov
lahf
pop
jb
dec
fisttpl
stos
imul
subb
jg
mov
mov
inc
out
inc
faddl
pop
adc
jle
adcb
push
lcall
pop
jae
add
mov
adc
jne
pop
jo
xchg
cs
and
sbb
call
enter
imul
rcrb
test
jmp
adc
mov
das
push
pop
push
ljmp
fwait
pusha
loope
enter
push
sti
or
dec
shlb
xchg
add
sbb
jmp
fnsave
mov
leave
pop
sub
xor
pcmpgtb
and
jbe
rcpps
lock
pop
inc
mov
cltd
mov
jae
mov
lods
fistpl
inc
cli
or
xor
cmp
imul
movsb
lcall
xor
sub
test
mov
fisubs
in
lcall
push
cmp
dec
and
xorl
fbstp
jo
stc
mov
repnz
loope
ljmp
inc
loopne
call
sub
test
sahf
js
rclb
pop
mov
push
pcmpeqw
mov
fsts
mov
mov
mov
sbb
xchg
and
adc
call
mov
std
mov
cli
shrb
xchg
subl
inc
mov
mov
xchg
mov
sbb
idivl
mov
mov
dec
fiaddl
push
cmp
aas
xlat
ss
mov
jmp
cwtl
mov
xor
addr16
add
idiv
jbe
scas
pop
sub
cmp
imul
fbstp
repz
xorl
enter
push
sub
jl
add
adc
jle
dec
xchg
cmp
arpl
daa
dec
dec
cmc
jg
mov
inc
subl
in
sbbb
or
out
fidivrl
mov
jmp
push
mov
pop
je
aas
inc
roll
test
fisttpl
add
test
dec
add
xor
push
mov
jecxz
insl
out
cmp
fdivrl
std
ret
inc
inc
dec
jae
cltd
mov
out
adc
pop
pop
outsl
or
fisubrl
jecxz
lock
cmpsl
cmp
imul
sbb
stos
test
or
push
cmc
call
std
sarl
ficomps
or
and
ja
std
or
call
xchg
add
jp
dec
ret
je
inc
mov
stc
mov
test
mov
loope
sub
in
sbb
dec
fstpt
mov
int
cmpsl
mov
xor
rcl
aad
pop
jle
ljmp
arpl
out
outsb
js
stc
sub
mov
mov
aas
push
in
xlat
mov
cmp
sbb
pop
test
aas
mov
jb
mov
jo
hlt
adc
or
mov
dec
adc
sbb
and
dec
test
imul
rep
add
adc
sub
or
adc
xchg
fisttpl
pop
rorl
or
jb
call
push
cs
mov
push
addl
fwait
or
call
inc
and
pop
int3
icebp
ljmp
adc
outsl
ja
rorb
popl
adc
das
xchg
mov
cwtl
aam
cmp
push
cmp
mov
xor
inc
cs
mov
or
pop
and
push
js
ss
adc
clc
sbb
pop
jo
dec
jl
xchg
push
mov
fmuls
sub
jl
outsb
add
adc
iret
jl
inc
dec
sbb
sub
mov
arpl
cmp
jne
or
jecxz
sbb
dec
std
loopne
pop
fidivrl
adcl
push
addr16
repz
dec
sub
les
adc
sub
das
outsb
jbe
sub
mov
inc
mov
mov
mov
mov
mov
in
add
jmp
out
loop
mov
imul
add
inc
sbb
add
or
dec
pusha
cmp
mov
mov
and
jmp
jne
xlat
sarl
fwait
dec
pusha
clc
mov
loop
and
adc
jns
jne
loop
sbb
or
add
sbb
mov
mov
adc
aas
mov
in
and
mov
enter
fstpt
and
xor
popf
sbb
push
pop
and
test
mov
inc
adc
dec
unpcklps
fnstsw
ds
les
fisubs
sbb
lock
and
add
mov
sahf
nop
and
mov
mov
out
sbb
or
sub
mov
repz
jp
inc
fldl
pmulhuw
jbe
pop
enter
jb
and
lock
fisubl
and
mov
add
fbld
pop
xchg
mov
out
add
shrb
add
adc
idivb
jne
mov
lods
enter
fdivrp
out
push
lods
jp
mov
sub
icebp
cli
faddl
call
fs
jl
setge
inc
mov
inc
fisubl
push
cmp
test
sub
icebp
cmp
out
xor
aad
add
loopne
not
inc
or
pop
mov
sub
lds
dec
cwtl
sub
gs
cmp
fmulp
mov
loope
cs
mov
adc
mov
mov
stos
inc
fwait
push
movsb
inc
ss
jb
mov
ljmp
inc
unpcklps
adc
addr16
jb
inc
aaa
mov
daa
adc
push
imul
aam
jae
insb
xchg
sbb
insl
push
and
lea
icebp
dec
ja
cmp
or
and
jo
jmp
cwtl
stos
add
adc
jmp
clc
loop
scas
jp
je
or
inc
lods
call
adc
inc
fimull
cmpsb
jmp
xchg
push
pop
dec
in
mov
xchg
mov
out
int3
inc
push
orl
and
sahf
xor
push
call
xor
xor
jns
cmp
notl
add
or
sbb
pop
or
fst
btr
ljmp
popa
aaa
xchg
jle
dec
mov
push
mov
mov
and
push
lods
dec
out
lea
shlb
jb
jmp
mov
popf
std
call
fs
pop
jge
sbb
cwtl
or
cmp
push
jnp
xor
leave
mov
sbb
xchg
jno
sub
mov
inc
pop
and
inc
cwtl
mov
inc
mov
aam
fsubrl
aad
xor
test
push
aam
dec
test
mov
push
xlat
lret
inc
dec
lret
stc
rorb
jo
fcmovb
cmp
jle
aad
and
xchg
je
push
xchg
test
xor
sbb
mov
clc
push
cmp
mov
jnp
push
mov
rep
jecxz
adc
or
sub
xchg
std
sbb
insl
xor
adc
add
mov
and
fs
imul
cmp
filds
imull
mov
cli
xchg
mov
jg
mov
mov
inc
seta
adc
lock
push
add
push
cld
dec
mov
mov
mov
hlt
lods
pop
aaa
pop
cltd
push
mov
xchg
xor
out
or
fisttps
pop
or
scas
mov
movsb
cwtl
into
inc
or
sbb
xor
cli
xchg
mov
cmp
adc
rclb
jecxz
unpckhps
or
mov
adc
add
adc
call
xchg
inc
daa
enter
imulb
xchg
test
jb
vmread
jmp
lret
push
mov
mov
js
js
into
push
sbb
sub
lcall
dec
jbe
xor
mov
push
daa
andl
inc
add
and
dec
scas
aam
addr16
fs
ja
stos
cmp
adc
pop
pop
lahf
outsb
pop
shlb
pusha
push
add
lahf
shll
sbb
adcb
dec
arpl
xor
testb
ja
enter
push
push
pop
jle
ret
mov
aam
out
icebp
mov
inc
icebp
gs
pop
adc
mov
push
and
inc
shrl
jns
nop
adc
ret
and
ds
inc
lcall
sbb
jbe
fisttpll
or
add
and
idivl
sbbb
idivl
mov
pop
lahf
dec
inc
add
mov
popf
ss
xchg
imul
stos
out
sbb
jbe
lea
es
ret
adc
pushf
fcmovu
mov
lret
shl
cmp
push
add
inc
jmp
lock
mov
ret
add
lea
cwtl
push
jno
bound
mov
cli
jo
int3
loop
cmp
dec
outsb
jg
pop
repnz
jmp
inc
shrb
or
cli
jae
sub
mov
pop
xorb
and
or
add
loop
pop
jle
divb
rclb
jg
jge
mov
xor
dec
add
addb
mov
js
add
sahf
clc
mov
add
push
popa
push
sub
lret
inc
arpl
push
mov
andl
in
and
insb
sbb
and
xchg
sti
jmp
xor
mov
mov
loopne,pn
push
std
fimuls
negb
add
pop
mov
pop
sbb
jmp
sub
adc
cmp
fsubrl
je
and
in
stc
bsr
pop
test
and
out
jno
jp
pop
out
sarl
call
mov
push
mov
sbb
mov
fidivrl
test
insb
mov
imul
lcall
push
sub
add
dec
and
xchg
scas
mov
jge
push
sbb
outsl
sub
dec
xchg
das
adc
sbb
test
xchg
es
mov
inc
xor
adcb
and
xchg
test
test
push
outsl
fildll
lret
test
or
lcall
sbb
ds
in
and
xor
insl
jp
shrb
or
lret
jmp
push
mov
insb
in
scas
sbb
adc
or
mov
dec
cltd
pop
shrl
inc
or
rol
ret
in
shr
pop
stos
or
lods
xchg
addr16
rorb
daa
icebp
outsb
adc
push
loop
sbb
dec
divl
loope
jmp
mov
mov
and
lods
divb
jae
test
ljmp
cmp
add
adc
adc
jp
mov
test
repnz
shlb
ljmp
mov
and
mov
sub
aad
bound
popa
scas
imul
adc
jecxz
rorb
jbe
sub
add
addb
in
out
sbb
lock
cld
cmp
adc
xor
mov
jmp
cltd
cwtl
or
fnstsw
cmp
test
popa
xchg
das
jno
and
lock
jno
dec
dec
pushf
lds
adc
cmp
imul
es
in
or
imul
sbb
sbb
data16
cli
and
pop
xchg
sbb
dec
add
mov
and
dec
std
cmp
hlt
push
adc
jbe
or
jg
inc
xchg
mov
xor
call
or
outsb
inc
rclb
in
sub
xchg
ficomps
cmp
scas
inc
popf
les
push
and
test
mov
jecxz
add
imul
add
outsl
xchg
adc
adc
lea
dec
push
lods
jo
insb
fucomi
push
xor
push
shl
in
sbb
push
mov
leave
sbb
inc
mov
hlt
js
mov
shlb
mov
jbe
popf
hlt
jge
in
push
cld
xchg
jbe
fbstp
arpl
xor
call
adc
das
inc
sahf
pop
rorb
cwtl
sbb
mov
inc
push
inc
cmc
andb
jbe
mov
inc
shrl
mov
test
push
cltd
lcall
mov
aaa
fcompl
push
notl
xchg
dec
mov
mov
in
fistpl
xor
mov
or
mov
cmp
jl,pn
cld
jne
mov
mov
xor
aas
imul
pop
fbld
adc
or
aaa
lcall
adc
shrb
jbe
jle
push
arpl
or
inc
aas
fimuls
std
lret
out
cs
adc
test
subb
loop
dec
jmp
or
dec
gs
xor
mov
adc
aas
adc
repnz
jl
cmp
pop
pop
in
inc
add
and
hlt
mov
or
and
scas
nop
adc
clc
fisubrs
aam
push
dec
cmp
addb
pushf
into
inc
and
fisttpl
filds
int
clc
js
pop
dec
hlt
sbbl
ljmp
mov
jle
cmpsb
cmpsb
loopne
push
inc
xchg
push
pop
cmp
adc
and
mov
int3
push
push
or
add
subb
shll
or
sarl
mov
and
lock
lock
sbb
lret
or
or
xor
loop
xor
lods
lds
push
ljmp
or
adc
jp
inc
or
sbb
or
inc
and
mov
add
fbld
loopne
inc
sbb
subb
add
xchg
push
leave
lea
sub
adc
rolb
dec
adc
ficoml
lret
xor
daa
je
sbb
invd
push
cmc
xchg
stos
clc
dec
xor
sub
das
outsl
mov
je
or
pop
adc
mov
or
push
fcmovnb
cmp
and
mov
loope
or
lds
aas
call
adc
js
or
aas
xchg
je
push
mov
loopne
pop
xchg
fucomi
sbb
jbe
clc
mov
js
adc
inc
fdiv
sub
sub
jl,pt
out
loopnew
sbb
addb
jbe
mov
dec
test
jae
loop
lds
push
jl
arpl
in
negb
ljmp
dec
inc
jl
inc
sbb
cmp
adc
mov
sub
ja
inc
adc
pop
jnp
and
incb
pop
ja
test
or
add
mov
or
sbb
jno
out
push
sub
sub
sub
add
ficomps
pusha
cltd
xor
cwtl
loop
cmp
mov
scas
je
inc
pop
sub
imul
imul
call
incl
mov
test
mov
xor
imul
cli
test
mov
stos
fwait
xchg
iret
mov
jo
adc
loope
out
inc
pop
and
jae
jbe
mov
test
sbb
fsubs
insb
or
in
inc
in
pop
and
nop
sti
cs
call
push
jge
fsubp
call
mov
mov
mov
das
scas
push
outsl
mov
push
lahf
cwtl
push
mov
adc
jns
and
jb
data16
or
cmpsl
popa
cmp
call
lods
and
pop
cmpsl
clc
xor
pop
jge
test
leave
call
outsl
xor
mov
and
sub
sbb
mov
call
iret
mov
shlb
lods
fwait
add
movsl
jmp
dec
movntps
or
xor
mov
push
je
and
and
jne
notb
jle
pop
lods
mov
js
sbb
bound
cmp
adc
jo
xchg
push
push
in
dec
pop
sub
pop
cmp
insb
inc
aam
mov
pop
xchg
fmull
and
mov
jg
xchg
xor
or
addl
adc
sub
sub
jp
jle
clc
sti
xchg
inc
xor
or
mov
addb
xor
or
jo
xor
push
add
xor
or
mov
movsl
dec
imul
sahf
sub
pop
imul
and
loopne
mov
repz
movsl
xor
adc
push
sub
lret
sarl
inc
iret
sub
es
inc
inc
mov
cld
lock
je
inc
arpl
in
xchg
jae
sub
dec
xlat
pop
icebp
mov
sub
dec
or
aam
and
sbb
je
mov
cmpsb
daa
mov
idivb
loop
pusha
inc
push
bswap
mov
pushf
incb
mov
cld
out
push
mov
add
fcomi
cmp
adc
and
jb
jns
loopne
js
adc
cltd
or
push
push
test
fmull
arpl
nop
jbe
ret
int3
adc
lods
sbb
faddl
out
sub
sarb
push
lock
ja
jecxz
pop
test
lods
lods
pusha
fisubrl
or
and
jmp
pop
imul
je
or
fdivr
pop
imul
jmp
xchg
add
clc
test
nop
xor
lcall
cmp
cmp
pop
test
lods
popa
test
adc
add
mov
aam
xor
int3
sbb
test
and
ljmp
xchg
mov
mov
pop
jne
inc
das
sti
std
and
clc
imul
push
pop
leave
in
outsl
pop
test
jg
push
testl
cmp
ffreep
enter
adc
adc
sub
je
insb
addr16
out
and
adc
or
inc
jb
sub
and
adc
jbe
inc
les
fcoms
or
push
push
add
rcll
jns
mov
or
sbb
mov
inc
imul
sbb
add
idiv
inc
inc
and
insl
test
push
inc
or
roll
and
or
dec
jl
dec
jbe
cli
in
xchg
mov
bound
xor
pop
or
lahf
dec
jo
mov
lahf
jl
and
adc
filds
xchg
dec
dec
pushf
int3
sub
dec
sbb
pop
push
ret
mov
dec
push
jbe
push
int3
movhlps
push
fmul
mov
aam
cwtl
out
lret
cmp
jl
push
mov
sbb
dec
cli
mov
push
int
rcll
pop
loopne
or
arpl
dec
push
fwait
je
es
sub
pop
sti
inc
fistl
roll
js
or
mov
stc
ret
xchg
jge
mov
dec
xor
pushf
lret
aam
cwtl
push
sbb
lret
inc
fldl
add
jg
repz
or
js
loopne
sbb
mov
mov
fs
or
add
hlt
add
and
sarb
sub
aam
dec
cli
push
jge
cld
pop
xchg
test
popf
nop
cmp
dec
jl
cltd
or
pop
mov
sbb
mov
scas
testl
inc
add
adc
pop
adc
push
cmp
jmp
sbb
je
aad
push
jl
cs
sub
in
dec
and
xor
cli
adc
lods
in
mov
sbb
jbe
pop
inc
test
sbb
fnsave
xchg
or
sub
imul
dec
jmp
push
jg
push
insb
lea
sbb
popf
push
xchg
scas
dec
adc
cli
mov
inc
push
jo
adc
ja
imul
add
test
fldt
adc
ss
jbe
or
xor
add
fs
frstor
mov
or
or
call
lock
mov
in
jmp
mov
test
jge
dec
push
ljmp
cmp
cmp
stc
dec
adc
test
and
or
ja
push
xor
ja
mov
mov
push
pop
lret
push
inc
mov
sbb
sub
out
pop
mov
mov
mov
cli
inc
push
xchg
daa
adc
add
adc
pushf
sbb
add
fs
test
dec
icebp
inc
xor
daa
je
ror
mov
push
mov
mov
mov
push
aas
inc
mov
xchg
adc
pop
adc
push
nop
adc
pusha
outsl
js
add
lcall
jb
sbb
xchg
aas
je
push
lret
mov
dec
xorb
sbb
pop
ret
dec
sbb
out
pop
and
mov
sbb
cmpsb
mov
pusha
nop
shlb
call
loopne
scas
imul
test
pop
push
cs
in
ss
sbb
mov
mov
jp
cmp
daa
call
mov
lods
loopne
lcall
xchg
sahf
call
add
add
rolb
mov
pushf
in
cmp
repnz
cs
mov
mov
cmpsl
fwait
jbe
add
pop
aaa
adc
aas
out
icebp
xchg
mov
xchg
dec
xor
xchg
icebp
testb
push
fwait
cld
pusha
mov
and
stos
cmc
in
leave
lock
dec
dec
subb
mov
cmp
dec
and
jg
inc
jecxz
ret
dec
sub
sbb
mov
std
arpl
ss
cmp
mov
cmp
adc
loop
addl
add
sti
jbe
push
xchg
jne
or
filds
mov
lcall
pop
inc
subl
mov
int
in
xchg
sub
outsl
stos
addb
call
adc
fbstp
mov
push
orl
in
sbb
jp
repz
or
fdivrl
inc
je
adc
incl
shll
xlat
loopne
add
lret
jne
inc
push
call
xchg
and
xor
out
pop
cli
stos
dec
inc
xor
test
pop
cmpb
out
adc
sbb
in
push
and
sub
negb
out
cmp
stos
inc
adc
mov
inc
sbb
jno
ss
test
dec
push
pushf
xchg
cs
mov
push
add
push
adc
push
mov
hlt
jecxz
ss
aas
lcall
loope
pop
repnz
fbld
call
std
dec
les
test
jle
inc
movsl
out
sbb
enter
fs
sbb
je
push
js
lea
add
jmp
aaa
flds
cmc
inc
mov
cmp
sbb
adc
cmp
push
ror
jae
sub
cltd
into
add
sbbl
mov
cmp
in
pushl
adc
adc
mov
cmp
jecxz
mov
inc
jecxz
pop
mov
lret
jbe
adc
sbb
test
data16
fiadds
mov
inc
icebp
or
push
shrl
mov
or
and
popf
mov
jo
loope
and
xchg
mov
sub
enter
push
loop
cld
in
jno
mov
mov
pushf
mov
mov
out
xchg
cmp
insl
aaa
ss
inc
pop
inc
pop
fiadds
xchg
cmp
ja
adc
test
xchg
je
push
adc
rclb
inc
mov
jnp
in
jno
push
push
jo
xchg
add
pop
pushf
or
push
sub
and
sti
and
bound
fcoml
add
adc
movsl
adc
cmpsb
notb
push
sbb
ret
jne
es
nop
cld
aaa
add
bound
rcrb
fldenv
test
orl
pop
js
lock
imul
mov
mov
jns
mov
and
mov
push
cmp
and
pop
jne
shll
and
mov
dec
cld
call
or
adc
xchg
les
fdivr
sub
fiaddl
sub
divb
or
bound
xchg
pop
imull
sub
iret
mov
mov
jmp
fdivrl
jle
push
icebp
sub
notb
aaa
fnstsw
mov
jp
dec
mull
xchg
inc
or
add
push
xor
es
cmp
push
mov
dec
mov
test
sbb
inc
mov
cmc
cmp
cld
hlt
xchg
int
daa
jns
sar
cwtl
call
fwait
mov
jl
call
les
lret
ljmp
mov
test
pop
and
jo
sub
or
int
aas
sarb
mov
add
imulb
sbb
mov
imul
pop
push
xchg
dec
pop
sbb
fistl
mov
xorb
jg
pop
xor
or
cwtl
push
dec
jns
mov
jb
call
sub
inc
dec
shl
xor
int3
push
pop
loopne
outsb
mov
rcr
andb
or
ret
sbb
xchg
and
sbb
addb
sub
or
mov
je
je
nop
or
pop
push
inc
loope
mov
test
fsubr
mov
out
sub
jo
pusha
jg
pushf
fmuls
je
mov
xchg
inc
mov
mov
xor
push
add
lret
mov
dec
dec
shl
fstl
inc
callw
lcall
or
in
shlb
daa
inc
pop
and
jno
xchg
jg
out
out
std
lea
and
or
push
xstore-rng
cmpsl
add
test
xor
add
jno
jecxz
push
mov
decl
call
mov
es
xor
in
mov
ret
test
fdivrp
jno
push
cs
adc
inc
test
or
dec
xor
je
cmp
xchg
sti
aas
push
adc
shlb
xchg
lock
jmp
repz
add
lahf
and
dec
or
jbe
pop
or
lret
mov
out
cmp
sub
ficomps
test
or
mov
inc
and
add
pop
adc
sub
add
jecxz,pt
test
xchg
mov
clc
inc
jmp
and
xchg
pop
lock
pop
mov
cmpsl
mov
aam
cwtl
pusha
fmuls
lds
push
sbb
decl
lods
aas
mov
call
je
jg
insl
jnp
not
in
incb
aas
and
push
fcomi
jbe
mov
push
rcll
push
sbb
pusha
and
shll
loopne
inc
fnsave
and
lea
fldl
inc
pop
sbb
or
or
idiv
fbld
icebp
stos
stc
or
mov
imul
loop
pushf
and
inc
inc
cmp
decl
cmp
ret
lods
and
mov
inc
pusha
add
sbb
push
nop
mov
mov
push
stc
mov
dec
es
cs
bound
mov
xchg
and
cli
cld
in
xchg
adc
in
psrad
xlat
mov
mov
push
inc
jno
mov
push
and
pop
ret
call
adc
cmp
xchg
xchg
fistpll
out
imul
xchg
mov
lcall
mul
push
push
xchg
or
jbe
out
adc
mov
or
ret
lea
dec
test
lret
pop
inc
jg
or
test
insb
jo
jnp
mov
addb
sbb
jbe
sub
cmp
mov
insb
mov
jns
loope
add
inc
mov
xchg
fucomp
popf
push
sti
push
xor
fmul
outsb
pop
stos
jne
ds
ror
jecxz
sbb
add
stc
xchg
push
jmp
inc
ja
imul
mov
cmp
dec
xor
cmpps
nop
lea
and
decb
cs
fisubs
dec
outsl
pop
dec
out
test
pop
cwtl
adc
stos
adc
adc
push
popa
add
hlt
sar
mov
or
call
in
das
hlt
adc
mov
ds
push
fmull
push
je
lods
jbe
in
mov
adc
cmp
inc
mov
sbbl
mov
fbld
cmp
jnp
dec
xor
or
pop
shl
push
dec
lods
sub
fadds
das
sub
mov
jno
or
fbstp
das
inc
loope
adc
or
add
les
cmpb
mov
andl
ficompl
jmp
adc
jg
push
xor
call
jle
mov
push
jb
imul
insl
lock
je
push
push
gs
dec
loopne
js
sub
pop
xor
insb
pusha
add
xchg
je
sub
nop
aam
je
js
add
mov
js
jo
mov
sahf
sbbl
mov
in
adc
ja
ret
sbb
or
pop
adc
nop
sbb
mov
cmpsl
std
fmull
outsl
push
dec
and
dec
imul
or
adc
adc
cmp
push
lret
xlat
rdpmc
iret
cmp
cs
rorl
testb
push
neg
jae
pop
cmp
dec
test
jns
insl
sbb
xlat
cmp
icebp
dec
and
xchg
sbb
cwtl
ret
pop
call
lock
cmp
xor
push
ja
pusha
sbbb
push
insb
pop
mov
loopne
movsl
push
dec
js
or
mov
pop
rcrl
iret
mov
dec
add
sub
bsr
inc
ja
mov
cmp
divps
hlt
mov
sbb
cmp
out
pop
push
insl
out
ljmp
xor
rcrl
push
out
arpl
xlat
sbb
pop
movsb
cs
je
and
sub
adc
pop
push
clc
ret
mov
add
das
sbbb
fcoms
in
ss
std
adc
xor
or
sarb
gs
out
cmp
pusha
add
push
outsb
mov
push
jmp
outsb
sub
jns
rclb
and
rcrl
pop
call
int
ljmp
cmp
add
and
xchg
in
rorl
dec
test
int
subl
or
and
sti
mov
cmp
orb
jl
pop
jp
in
cmp
hlt
sahf
cmp
or
out
pop
adc
jns
ret
inc
scas
mov
jg
sarb
test
push
aam
sbb
dec
push
cmp
and
xchg
xchg
lock
mov
enter
sbb
jecxz
mov
sub
pop
icebp
or
call
fwait
xor
push
adc
mov
into
mov
sub
movb
pop
pop
das
lds
sub
mov
mov
stos
push
cld
das
jno
inc
repnz
js
in
lods
shll
mov
int3
mov
jp
adc
rorb
push
in
mov
in
orl
fucomip
out
cmp
addr16
jbe
lahf
pop
loopne
ja
fcmovnbe
in
loopne
pusha
adc
enter
dec
leave
sbb
mov
mov
dec
xchg
mov
rsm
adc
mov
add
jbe
jbe
imul
int
add
rol
sbb
inc
mov
jle
iret
in
add
jg
mov
cmp
loope
pop
mov
repnz
in
dec
je
inc
movsl
cmc
popf
push
outsb
cmp
xor
addr16
mov
ja
mov
push
cmp
fldt
and
in
or
adc
adc
pop
lahf
xchg
nop
mov
push
pop
mov
adc
rcrb
add
call
incl
jmp
inc
push
inc
cmpsb
pop
xchg
cwtl
push
xlat
sahf
and
sbb
inc
fistpll
adc
enter
jbe
clc
inc
hlt
or
mov
sub
pop
rcrb
ficoms
mov
je
xchg
mov
add
cld
das
aad
sbb
xchg
pop
lods
sbb
mov
adc
dec
jne
or
es
lcall
mov
jge
xor
cmp
push
sbb
ljmp
shrl
and
xchg
mov
shrl
std
add
ss
ja
push
rcrb
pop
xchg
fdivr
fnstsw
jae
sub
jnp
loope
cmpsb
pop
cmp
push
dec
dec
dec
fistps
mov
inc
movl
cmpsb
fstp
sbb
dec
andl
aam
lcall
gs
loope
enter
xchg
xchg
sbb
imul
push
push
push
adc
xchg
cmp
ljmp
mov
inc
roll
xchg
inc
cs
dec
xchg
gs
stos
push
dec
adc
addl
mov
sbb
je
sbb
and
jne
xlat
outsl
lock
xchg
dec
sub
jge
pop
sti
aaa
cs
jne
repz
xor
push
aaa
push
fs
push
pop
jmp
gs
or
cld
mov
cld
mov
inc
jg
negb
fsts
scas
rcrl
mov
jp
outsb
clc
push
imul
out
and
pop
mov
add
clc
incl
dec
sbb
outsb
lods
push
pop
in
mov
xchg
imul
mov
cmp
or
inc
std
scas
jne
or
cltd
adc
stc
ss
jmp
test
mov
shll
packsswb
jnp
sub
movl
in
jne
addb
jno
les
dec
aas
stc
or
jle
push
lock
and
xor
ret
jg
xor
xchg
and
lea
sahf
xor
imul
out
loop
adc
cwtl
push
arpl
decb
sub
jnp
and
pop
mov
outsb
xchg
cmpsl
adc
cli
fists
sbb
pop
cs
cld
fmuls
xor
or
cmp
mov
add
and
mov
jle
outsl
jp
adc
jne
push
or
imul
es
mov
sahf
jnp
cmp
adc
push
cmc
xor
and
std
xlat
sbb
movsb
rclb
add
push
and
jno
inc
mov
loopne
or
stos
daa
push
sti
sub
ja
adc
mov
insl
and
adc
call
dec
stos
lock
aam
pop
shrb
daa
inc
push
jo
stos
dec
dec
roll
fucomip
out
out
addb
jl
xor
jmp
cmpl
xchg
adc
pop
jge
jns
aas
sbb
std
jmp
mov
push
inc
adc
ljmp
add
mov
aas
jo
out
fwait
aas
les
or
inc
ljmp
mov
xor
jo
leave
pop
fistps
test
xchg
and
fmuls
test
cmpsl
dec
aam
dec
xchg
fiadds
cltd
jl
je
pop
sub
ljmp
std
test
jns
cld
idivb
or
xlat
adc
cmp
mov
push
xchg
pusha
pop
cmpsb
testb
pop
adc
imul
or
or
stos
jno
loopne
pop
xor
push
pop
add
or
and
jb
and
mov
xchg
or
pop
ja
lods
pop
xchg
mov
call
cmp
xor
dec
add
mov
aaa
outsb
and
dec
call
mov
fwait
mov
sbb
cmpsb
js
push
enter
cs
push
pusha
imul
push
add
clc
ljmp
dec
pusha
pop
xor
and
mov
scas
push
lret
jle
cmp
dec
insl
and
xchg
and
adc
cmpb
in
mov
sbb
jl
mov
fidivl
cmp
loop
dec
pop
pop
mov
push
shrl
sbb
mov
xor
pop
sbbb
inc
sti
out
je
add
das
add
andl
repnz
push
rcrb
cmp
jno
fidivrl
lahf
push
pop
call
adc
mov
outsl
sub
dec
cmp
pop
xchg
aas
fcoms
into
rcrl
loope
xchg
sub
mov
orl
mov
aas
xor
jb
jge
enter
ja
pusha
clc
loope
push
out
pop
test
fidivrl
lahf
pushf
fisttpl
inc
sbb
adc
pop
je
popf
push
cwtl
cltd
dec
sbb
push
push
sbb
push
rcll
sub
jge
leave
pop
mov
xchg
adc
aad
test
mov
lret
orb
xlat
push
cmp
add
in
inc
xor
cmp
inc
fcmovu
jo
addl
je
stos
mov
mov
int3
in
pop
fldenv
or
ret
fnsetpm(287
fiadds
xor
outsb
sub
in
adc
and
xchg
xchg
adcl
insb
mov
test
jge
pop
jno
and
and
and
push
ja
mov
jl
sub
xchg
and
xchg
fwait
cmp
push
inc
push
pop
sbb
mov
loopne
mov
mov
es
adc
sub
xor
xchg
sbb
fwait
mov
test
xor
xchg
add
adc
xor
mov
xorb
adc
or
xchg
jno
cltd
out
mov
negl
jbe
mov
cmp
mov
push
ss
xchg
jg
jae
cmp
cmp
lock
push
mov
or
rcll
and
loop
dec
sti
jb
cld
in
cmp
push
add
mov
dec
pushf
pop
das
rcrb
nop
loopne
cmp
sbb
dec
jl
mov
popf
push
pop
inc
fwait
imul
enter
sbb
mov
je
leave
pop
xchg
mov
call
adc
xlat
test
sub
les
movsb
ss
in
ljmp
and
pusha
cli
rcll
les
repz
jmp
test
and
xchg
xchg
dec
fwait
push
ret
adc
jb
icebp
and
ljmp
mov
and
es
stos
sub
dec
sarl
xorb
les
push
cmp
xor
push
test
push
sbb
push
in
or
insl
andb
outsb
insb
push
divl
mov
cwtl
lock
int
aam
push
jl
and
or
ja
jmp
cmpsl
stos
add
and
jns
jbe
mov
push
fcmovu
faddl
cwtl
add
in
subb
add
mov
lock
lock
lods
bound
call
mov
mov
cmpl
dec
jb
lahf
mov
loopne
sbb
dec
push
and
adc
sub
daa
jl
cmp
ret
ret
sub
pop
stos
outsb
insb
and
cmp
dec
daa
ljmp
aaa
pushf
mov
bound
inc
push
fisubrl
fimull
sbb
fidivrs
xor
add
ret
push
repz
push
lret
push
push
push
scas
mov
mov
out
mov
aam
push
xchg
and
adc
pop
ret
pop
jge
adc
add
inc
inc
and
or
repnz
ds
jge
ret
jnp
jg
mov
outsl
sbb
ret
mov
or
cmpsb
ficoml
or
lea
cvtps2pi
out
push
ficoms
lea
scas
in
sub
sub
out
out
cmp
int3
adc
decl
std
lock
adc
cmp
xchg
xchg
ret
orb
and
daa
pushf
mov
imul
arpl
rclb
mov
imul
fisubrs
mov
mov
or
pop
icebp
and
xchg
mov
xorb
push
lods
rorb
addb
mul
add
cwtl
insl
pop
bound
inc
sub
rcrl
push
jp
loopne
sbb
insb
and
push
ret
pop
adc
add
sub
push
call
es
aas
sbb
cmp
roll
ss
stos
jno
fs
ja
and
adc
pop
por
je
sbb
adc
sahf
dec
jo
adc
es
dec
jl
jp
dec
mov
xchg
pop
pop
mov
push
or
or
in
pop
xchg
sub
push
add
lret
into
inc
or
loopne
add
adc
clc
lods
test
movb
jo
jle
rcll
push
adc
imul
imul
aaa
shrl
jo
mov
or
mov
and
jb
push
mov
jle
xor
and
inc
push
or
repz
pop
fsubl
rorl
add
or
mov
loop
ret
sbb
arpl
lds
out
push
ficompl
fdivrl
mov
cmp
add
imul
xchg
xchg
call
repz
mov
insl
mov
or
aaa
in
inc
pop
mov
push
sbb
outsb
pusha
sub
sub
sahf
inc
inc
cli
out
or
shll
popf
xchg
pop
in
push
clc
add
and
dec
test
out
mov
sub
sub
lahf
and
mov
jl
xsave
adc
inc
je
loopne
shl
outsl
in
outsb
aaa
and
ret
hlt
movsb
add
dec
jae
sbb
push
out
mov
and
push
mov
sub
dec
fwait
sti
adc
mov
sub
lods
and
dec
addl
or
xlat
mov
pop
loop
cmpsb
cld
fisttpll
sub
dec
insb
popf
sbb
loopne
mov
ljmp
mov
pop
jns
andb
ret
not
orl
inc
jo
sahf
test
xor
or
push
pop
mov
call
push
mov
mov
mov
mov
push
sub
lahf
repnz
mov
xor
aas
inc
dec
push
mov
idiv
call
aas
gs
enter
scas
int
icebp
jp
loope
inc
ljmp
jge
outsb
inc
cld
imul
es
out
sti
dec
lock
mov
ljmp
leave
inc
jmp
jns
sub
idiv
sbb
and
call
shlb
aas
in
ss
adc
push
jno
pop
mov
pop
lock
dec
outsb
push
add
jae
jnp
sub
jg
jmp
sbb
in
aas
cld
mov
dec
inc
cmpsb
mov
jl
es
pop
cmp
popa
cmpsb
dec
ljmp
ud2
notl
test
ret
push
mov
fcompl
sub
pusha
clc
insl
daa
aam
sub
push
mov
jmp
neg
ja
sar
add
or
lcall
push
inc
lea
cmp
jo
add
mov
je
addb
nop
dec
cmp
pop
lock
sub
push
xchg
sub
push
int
shrl
and
test
pusha
sub
aas
cmpl
add
je
inc
sub
dec
and
pop
and
jb
in
and
inc
or
in
mov
push
mov
mov
pop
mov
cwtl
enter
in
imulb
inc
clc
push
pop
adc
rcll
out
jne
shlb
adc
or
sbb
in
clc
push
lahf
cmp
push
mov
mov
cmp
adc
cld
jmp
popa
and
xchg
arpl
adc
clc
add
cli
out
outsb
clc
inc
adc
popa
xor
adc
fwait
and
mov
jmp
adc
iret
mov
notb
ljmp
mov
daa
mov
orb
adc
movsb
dec
arpl
aaa
push
pop
cli
adc
jae
fdivs
sbb
jmp
push
xor
call
in
and
je
sbb
xorl
fcoml
adc
fucomip
rorb
xor
mov
inc
mov
dec
mov
inc
mov
in
pop
dec
mov
sub
movsb
mov
xchg
pop
pop
test
jne
cmp
dec
mov
js
fldenv
xchg
xchg
out
mov
cmp
mov
inc
dec
adc
repz
pop
sub
rclb
jmp
addb
lret
add
pop
loope
out
and
fldl
or
add
add
push
in
bound
sbb
cld
stos
mov
movsb
lods
cmp
repnz
mov
sbb
rcr
or
punpckhbw
jo
dec
ss
sub
jno
ss
call
test
fadds
jge
je
inc
xchg
stos
pusha
push
test
movsb
jle
adc
xchg
pop
inc
pop
dec
mov
inc
pop
or
and
sub
loopne
push
push
sahf
mov
pop
or
sets
mov
and
lcall
sbb
call
iret
inc
loopne
xchg
pop
inc
or
add
pop
sub
jmp
insl
arpl
jl
ljmp
or
dec
or
enter
fs
mov
mov
fnstcw
cmpsl
clc
incb
cld
pop
cmp
decb
mov
fcmovne
shrb
lods
and
dec
jae
mov
pop
mov
adc
dec
mov
outsl
sbb
adc
hlt
jg
stos
lock
mov
ret
pop
sub
std
cmpsb
push
addr16
xor
mov
and
shll
pop
pusha
inc
pushf
aas
mov
pop
mov
adc
mov
sbb
mov
jmp
jne
push
insb
sbb
and
add
jg
jecxz
in
in
inc
xchg
test
inc
test
test
add
je
call
insl
jae
mov
xchg
das
mov
dec
pop
xlat
or
jg
cmc
roll
addr16
es
ret
test
pop
cli
popf
sub
push
test
addr16
xor
test
xchg
cmpsl
ljmp
subl
aam
sbb
pop
and
repz
pop
shr
or
push
clc
xor
mov
xchg
sbb
adc
push
mov
loop
in
dec
add
stos
add
scas
imul
jb
leave
sbb
fldt
popa
inc
sbb
jmp
mov
and
and
and
xor
fs
push
and
or
lods
call
stc
subl
ss
hlt
clc
sub
ret
out
jns
sarb
cwtl
test
shll
inc
add
sub
and
insl
cmp
jp
sarb
dec
xchg
inc
adc
test
jbe
lret
in
aas
andl
pop
jle
dec
cmp
out
inc
sti
lds
lahf
push
fldt
xchg
jne
push
cmpb
lock
dec
adc
pcmpeqw
aad
nop
data16
rcrl
ds
jae
add
das
dec
jno
push
push
adc
leave
xor
jae
fcmovnbe
loop
cltd
xor
cs
gs
sub
mov
fiadds
and
inc
pop
ljmp
rcrl
and
cs
or
inc
sbb
push
cmp
stos
add
faddl
or
jmp
mov
sub
je
nop
jae
mov
xor
pop
adc
jnp
xor
pusha
mov
test
je
sub
mov
adc
shll
add
std
out
movsl
jle
push
push
mov
dec
push
pop
sahf
pop
xchg
mov
mov
xchg
hlt
stos
roll
push
test
sub
jb
mov
pop
and
data16
testb
aas
adc
cmpsb
sub
ss
test
loop
mov
movsb
add
loop
pop
and
mov
mov
pop
mov
data16
test
xchg
stos
mov
ljmp
loope
inc
sti
adc
adc
mov
movsl
popa
jnp
lahf
outsb
xor
out
cs
daa
lcall
mov
adcl
mov
pusha
ds
cld
es
call
pop
pop
sub
pop
lret
jns
das
and
gs
incb
adc
cmp
sub
orl
lret
push
sbb
pcmpgtd
inc
les
mov
dec
xchg
pop
adc
sub
and
out
sti
or
adc
mov
push
cmp
xchg
and
push
cmp
and
mov
js
add
xor
xor
sub
fs
inc
cli
lahf
insl
aas
popf
jg
xor
or
or
push
daa
sub
mov
inc
add
cmp
cwtl
push
sub
mov
pop
add
sub
inc
lods
jg
test
push
test
movsl
sbb
xchg
push
dec
cmpl
aad
sbb
scas
mov
push
and
popf
pop
sbbb
aas
and
pop
scas
jle
add
cld
and
mov
mov
sub
ret
inc
jle
sahf
mov
mov
out
mov
mov
enter
mov
in
cmp
das
lock
dec
popf
dec
mov
pop
stc
inc
in
mov
push
and
inc
mov
movsb
xchg
sbb
and
jns
in
and
in
sahf
fdivs
pop
mov
stos
sbb
or
outsl
outsl
cld
shll
movsb
and
arpl
jp
jno
push
dec
jns
insl
loope
pop
ret
cmp
inc
ja
sbb
pop
pop
mov
std
jbe
push
push
mov
lea
push
push
sbb
loopne
xorl
mov
out
xor
jno
push
lahf
fbld
add
push
ret
pop
in
dec
mov
loop
hlt
jmp
cwtl
call
push
mov
adc
aas
outsb
clc
pusha
ja
dec
cmp
inc
pop
or
out
jo
jb
int3
jl
or
pop
push
jle
push
popf
mov
js
xlat
jg
and
shrb
pop
movsl
loope
rolb
push
sbb
pushf
mov
out
ret
pavgw
pop
sbb
jmp
cmp
lods
xor
add
repz
out
loopne
pop
movsl
xor
test
lcall
ret
inc
or
or
push
mov
sbb
sti
pop
adc
out
or
jmp
div
or
sub
fmull
adc
jnp
ret
enter
cmp
ds
rcrl
dec
pop
push
out
in
sbb
jo
pusha
pop
out
xlat
adc
push
sub
adc
mov
mov
pusha
je
sub
rcrl
xchg
incb
ja
popa
xor
ficoml
mov
inc
fcomip
xchg
xor
push
sub
dec
scas
inc
jmp
cmp
mov
push
ja
adc
pop
dec
pop
in
sahf
and
cmp
in
push
gs
inc
iret
ja
xor
je
xor
jbe
add
je
and
ljmp
ljmp
popf
enter
push
mov
pop
add
insl
rcrb
add
fistpll
int
jbe
and
imull
adc
arpl
push
je
js
sarl
sub
call
rcrl
sub
push
mov
shl
jle
and
xor
mov
jo
cmp
push
psubusb
outsb
mov
sub
popf
rcll
mov
xchg
pop
adc
mov
outsl
insl
lods
sub
or
out
ret
cmp
jl
loopne
dec
aad
sub
xchg
nop
arpl
idivb
mov
loop
pop
in
repz
push
push
push
sbb
insl
in
movsb
sub
adc
push
lock
test
xor
adc
and
dec
inc
insl
sub
std
mov
jl,pt
add
adc
jecxz
insl
and
mov
lcall
call
xor
scas
insb
push
js
cmp
lock
xor
stos
jp
xor
inc
sbb
test
jnp
jbe
push
jb
adc
shlb
ds
jg
pop
shrl
iret
insb
shlb
cmp
mov
xor
push
sbb
loopne
cs
inc
push
adc
add
mov
sub
sbb
mov
orb
cld
inc
stc
imul
test
adc
or
mov
mov
and
je
cmpsb
cmp
rolb
mov
xchg
xor
push
roll
mull
aam
outsl
cs
stos
push
sub
movsl
add
stos
fstpl
in
clc
push
mov
cmp
fdiv
or
add
cmp
dec
loop
imull
loopne
out
loope
cmp
mov
cld
mov
mov
repz
mov
test
aaa
ss
adc
sbb
push
add
cmpsb
testl
das
mov
add
mov
test
insb
addr16
or
push
test
fildll
inc
inc
or
jae
out
pushf
xchg
cmp
push
insb
out
in
sbb
cmp
ss
lcall
xchg
jp
stos
fs
jo
adc
cli
ds
mov
xor
sbb
add
sbb
mov
inc
std
dec
add
daa
jecxz
aam
sbb
dec
push
call
negl
loopne
fiaddl
ret
in
and
cmp
mov
and
cmp
jmp
xchg
test
push
pop
fstpt
fldt
hlt
fiadds
pop
repz
aam
mov
or
nop
mov
loop
push
cli
arpl
jmp
xor
loopne
mov
mov
inc
xlat
or
add
jle
xchg
in
mov
out
in
cltd
or
imul
inc
lock
loopne
or
dec
pop
push
repnz
mov
push
aas
stos
push
xor
push
test
ja
mov
jecxz
mov
cltd
jns
push
std
mov
lret
cmp
sbb
add
mov
test
xchg
inc
ljmp
lds
cli
xorl
mov
push
sarl
fimuls
add
add
lods
cmp
call
mov
cltd
mov
fcomip
dec
jbe
inc
push
enter
idivl
nop
jo
mov
mov
fdivl
add
push
mov
or
lea
fdivrl
test
sbb
cmp
scas
or
push
imul
xchg
lock
add
sub
lods
jae
in
inc
sbb
or
out
cmp
fisttpll
repnz
mov
cmp
fisttps
inc
push
leave
out
lds
ja
inc
adc
iret
pop
scas
push
neg
faddl
inc
add
sarb
sub
pop
xlat
or
fiadds
stc
test
arpl
sub
inc
ret
push
xchg
cmp
cmp
adc
xchg
testl
pop
icebp
mov
pop
call
lahf
push
aas
jne
iret
movsb
or
adc
fdivs
enter
push
aam
fnstsw
call
icebp
xor
mov
in
outsl
jecxz
pop
mov
repz
jo
aaa
add
aaa
xor
and
and
and
pop
cmp
jl
mov
fwait
jle
inc
jecxz,pn
push
xchg
int
jg
xorb
cs
out
cmp
movsb
std
fs
xor
or
mov
paddd
cs
push
mov
pop
xor
pop
imul
cmp
or
mov
out
mov
push
mov
mov
dec
jae
add
rorb
mov
push
mov
adc
mov
adc
mov
jle
and
pop
adc
sbb
or
jno
jb
test
out
dec
in
mov
fldt
repz
adc
jmp
adc
stos
pop
lahf
jnp
dec
outsl
ficompl
jae
cmc
pop
adc
push
add
or
in
loope
push
pavgw
gs
repz
enter
mov
mov
lods
movsl
int3
shrb
shll
pop
mov
addr16
mov
xor
push
xchg
lea
mov
mov
or
adc
scas
pop
jne
pop
divl
lahf
mov
xor
dec
pop
push
mov
sub
xlat
mov
push
adc
arpl
xchg
sbb
add
push
ss
push
jnp
loope
mov
dec
andb
jbe
dec
mov
mov
jb
addr16
ficomps
loop
adc
mov
mov
sbb
ljmp
loopne
dec
jo
or
inc
jg
fisubrs
lods
or
ret
mov
les
outsb
xor
jle
mov
xchg
cmc
add
inc
shrd
leave
je
add
sti
inc
dec
sbb
and
pop
sbb
in
das
push
or
divl
js
in
xchg
cmp
call
orl
jbe
sbb
cwtl
add
jnp
pusha
imul
xor
aam
add
hlt
mov
sbb
data16
ds
pop
pushf
call
mov
and
je
sbb
jnp
std
inc
mov
in
je
mov
push
cmpsb
and
mov
shll
sub
sbb
jb
loopne
lahf
sub
call
andb
pushl
scas
inc
roll
push
jb
ja
cmpl
les
test
mov
enter
int3
fmuls
lock
notb
lods
push
rol
lahf
xorb
mov
xchg
fcomp
and
es
loop
add
notb
ss
test
sbb
ljmp
dec
adc
ljmp
push
jecxz
fistps
enter
out
adc
in
xor
ljmp
push
fisttpl
or
xchg
movsb
outsl
fistpl
adc
pusha
and
mov
sub
sub
cmp
cmp
jl
mov
inc
fsub
sub
leave
cmc
cs
mov
pop
push
je
jne
xor
and
mov
pusha
add
lcall
sbb
mov
es
mov
push
jle
pushf
and
adc
pop
lock
stos
mov
and
call
ficomps
sub
or
add
mov
push
sub
fldenv
repnz
mov
orb
jbe
int3
jge
xor
pop
sub
insb
cld
mov
mov
dec
aam
cltd
pop
xor
jp
rcrl
jle
push
jnp
ss
cmp
xor
and
loopne
test
lret
insl
insl
dec
les
adc
mov
mov
xchg
dec
jle
push
xor
sbb
testl
lock
pop
jge
and
push
enter
sub
jmp
jmp
fiadds
or
pusha
adc
inc
lods
ret
dec
pop
test
ds
or
mov
mov
xor
ficompl
push
mov
xorb
push
std
or
or
xchg
jp
pop
and
xchg
jge
inc
enter
xor
cltd
js
dec
scas
in
sbb
and
pop
or
jnp
out
sub
xchg
mov
int
pop
add
and
lods
mov
add
enter
shlb
xchg
mov
adc
ss
xor
leave
xchg
cli
cltd
and
lret
sbb
pop
push
daa
js
outsb
sub
je
dec
inc
mov
shll
and
pop
out
cs
adc
popa
adc
inc
jno
adc
hlt
or
xor
mov
mov
ja
cmc
sbb
dec
dec
cmpsl
loopne
jnp
ret
add
xlat
mov
mov
arpl
pop
cmpb
xor
test
ljmp
inc
lock
mov
sar
les
xchg
or
mov
pop
out
pop
js
adc
ud2
add
adc
cmp
jne
adc
dec
jl
loopne
pop
sbb
aaa
cmp
mov
cltd
inc
mov
mov
jno
xchg
push
jp
sbb
lock
xchg
mov
or
lea
stos
xchg
add
inc
dec
or
xor
jg
push
hlt
bnd
adc
jg
sbb
repz
outsb
pop
mov
fsubs
push
pushf
loopne
fdivp
out
std
movb
jle
adc
int3
movsl
scas
push
or
cmp
lret
sbb
xchg
jle
js
push
outsl
sbb
in
and
clc
int
lods
cmp
fbstp
sbbl
fiadds
call
fstl
daa
mov
inc
popa
call
push
rcll
outsl
xchg
jg
andl
inc
xchg
push
xor
das
aaa
dec
mov
pop
into
pop
movsb
mov
aas
or
dec
sub
inc
mov
loope
cmp
sbb
pop
insb
and
cwtl
cmp
cmc
push
adc
adc
stos
push
jle
and
xor
cmpsl
aaa
inc
inc
mov
inc
pop
mov
popf
int3
sahf
cmp
mov
imul
push
push
in
mov
lcall
mov
add
fcom
negl
shl
jbe
in
mov
and
and
push
and
insl
test
adc
push
je
out
add
movl
sub
jl
sub
adcb
mov
hlt
or
mov
cwtl
pop
push
adc
inc
leave
cmc
xor
fwait
popf
cmp
adc
notb
je
or
lahf
xor
jne
cld
sub
das
push
in
sarb
fs
inc
jbe
into
mov
pop
xchg
sbb
test
je
xor
jns
xor
mov
loop
in
testb
pop
daa
pop
push
add
push
xchg
fs
in
sbbb
mov
mov
pop
cli
inc
arpl
cs
iret
add
cmp
jo
xlat
xchg
in
jle
jl
or
rclb
lret
inc
push
test
ffreep
sbb
call
je
call
ja
inc
jo
xchg
add
addl
dec
mov
sub
scas
mov
test
mov
jg
fmull
inc
out
js
loopne
xchg
sbb
dec
fidivrl
rcll
xchg
push
sub
xchg
les
jnp
sub
enter
inc
popa
call
je
mov
add
adc
in
call
mov
push
frstors
stc
decl
push
or
loop
and
sbbl
add
sbb
adcl
inc
cltd
shr
lret
mov
cmp
hlt
std
call
popf
lock
loope
add
daa
pusha
adc
and
mov
and
and
pop
and
lds
fisttpl
loopne
adc
cmpsb
jp
fsubrs
jnp
andl
push
addl
sub
sarl
test
sbb
or
in
sahf
and
mov
and
adc
dec
dec
jo
jmp
inc
xchg
xor
cs
icebp
xor
scas
lock
mov
jb
adc
outsl
rcrb
cmp
add
push
push
dec
push
inc
jecxz
pop
aaa
es
insl
adc
sbb
cmpsb
aaa
insl
sub
lcall
jmp
test
sub
add
mov
push
cmp
or
add
leave
push
je
rcll
mov
and
ja
or
cmp
sub
js
fimuls
sub
mov
or
mov
mov
jo
insb
add
data16
cli
call
adc
in
jg
add
dec
fbstp
enter
filds
insl
xor
fisubrl
fwait
or
popa
pop
rorl
lret
mov
cmp
data16
sub
push
inc
nop
scas
xlat
add
xchg
test
fisttpl
ljmp
ja
call
and
je
or
jmp
outsl
mov
in
sbb
fldl
scas
lcall
andl
cmp
xchg
xor
sbb
sbb
inc
dec
pop
popf
scas
xchg
imul
gs
sub
aad
sub
ja
test
xchg
fs
enter
sub
imul
in
cltd
lahf
je
xor
mov
mov
sub
xchg
clc
mov
lret
push
loopne
push
mov
push
jno
sub
jno
test
push
imulb
cmp
cmp
pop
jp
pop
jo
lods
xchg
push
cli
pop
rcrl
enter
mov
lods
dec
adc
jge
mov
mov
mov
inc
or
cwtl
adc
in
jp
jge
mov
pop
and
dec
ret
xchg
add
nop
mov
movsl
cmp
sbb
scas
and
mov
push
xor
mov
stos
mov
xlat
push
jne
fcmovb
add
ja
and
insb
xor
inc
cmp
add
pop
push
sub
nop
call
ret
jl
rcl
mov
dec
xor
out
or
std
push
push
cmp
scas
shrl
jl
pop
cmpb
call
jo
jbe
stos
xor
inc
aas
or
inc
testl
mov
cli
and
sbb
adc
push
imul
xor
cmp
dec
data16
xorl
in
dec
push
mov
mov
daa
test
arpl
mov
mov
mov
push
add
or
popl
inc
fistpll
out
test
and
pop
insl
xchg
mov
ja
mov
pop
dec
aaa
rclb
pusha
fnsave
stos
add
cwtl
mov
jg
and
sbb
sub
xor
stos
and
sbb
out
adc
xchg
adc
mov
clc
fs
jbe
mov
movsl
aad
pop
inc
cwtl
add
test
idiv
jns
dec
or
aas
icebp
es
mov
loopne
jp
pop
icebp
xchg
mov
xor
xor
test
mov
cmp
rcrb
sub
or
push
les
and
inc
pop
ficompl
outsl
je
clc
push
and
daa
lds
pusha
sub
pop
cmc
sbb
add
lahf
fisubrl
sbb
loope
sub
or
inc
and
add
movsl
sbb
imul
jge
pop
sbb
notl
cmp
pop
cmp
pop
cmpsb
sti
and
in
inc
push
adc
add
sub
icebp
call
mov
inc
mov
mov
mov
sub
lahf
pop
insl
out
jmp
cmp
cmp
and
cmp
xchg
out
outsl
mov
loopne
push
jae
js
and
mov
pop
rorl
ss
imull
insl
adc
adc
jecxz
jp
loopne
pop
xor
add
mov
cmpsb
xorb
push
xor
jmp
and
and
cmp
es
push
js
imul
dec
adc
mov
popf
xchg
fcomi
inc
mov
rcl
push
and
in
pop
sbb
or
idivb
cli
sbbl
insb
push
xor
and
repz
out
push
ja
push
popa
aas
and
add
aam
dec
iret
inc
cmp
or
push
cltd
pop
iret
ret
pop
outsl
dec
sbb
sbb
mov
dec
mov
jo
rolb
mov
and
xor
mov
fsubr
cmpsl
cmp
jmp
push
sbb
fs
rcrl
push
xor
mov
push
adc
dec
outsb
adc
int3
pop
jmp
mov
jge
addb
ret
dec
inc
pushf
lret
mov
xor
test
out
shll
pushf
ret
loope
or
mov
xchg
mov
popw
popf
into
enter
cld
dec
in
pop
xlat
fistl
dec
adc
or
inc
inc
mov
cmp
jp
lock
nop
xchg
add
in
sbb
fs
test
mov
aas
mov
dec
fidivs
pop
lods
push
scas
and
mov
shlb
add
inc
push
sbb
inc
into
mov
sub
dec
xchg
mov
cmp
or
pop
jo
cltd
dec
sti
push
mov
dec
scas
xorb
rcl
jo
push
jnp
and
scas
inc
outsb
mov
lods
jecxz
pop
cwtl
icebp
je
inc
jl
mov
loop
rcrl
xchg
or
pop
xchg
inc
xorl
les
mov
popf
xchg
or
les
dec
jge
rcll
or
xchg
jmp
sub
or
pop
jmp
mov
jecxz
je
shrl
call
icebp
shrb
jp
int
rcrl
xor
push
call
pop
ja
add
fistl
mov
jo
faddl
cwtl
aas
adcl
or
cltd
ffreep
mov
sbb
add
imulb
clc
cmp
jle
cs
insb
mov
inc
xor
sbb
inc
push
push
ret
add
fsubp
test
and
mov
adc
mov
mov
inc
push
in
jcxz
inc
cmc
mov
rorl
ljmp
adc
test
push
fwait
mov
lods
jo
mov
pop
pop
test
movsb
xor
and
add
add
jp
jo
jns
outsl
in
dec
push
mov
pop
sbb
dec
or
insb
or
mov
pop
jns
push
outsb
movsl
push
mov
loopne
loopne
orl
or
enter
or
loopne
and
lret
add
ret
jb
loopne
loope
jb
add
scas
dec
and
and
addr16
inc
lea
mov
sbb
mov
jae
dec
rcl
insl
jp
fisttpl
adc
xor
psraw
cwtl
push
pop
daa
push
sarl
pop
lock
pop
repz
or
dec
pop
xor
mov
mov
jno
adc
mov
mov
or
sbb
sbb
sub
test
pop
inc
ret
dec
lea
loope
fldl
adcl
divl
aas
inc
cld
ja
cli
or
push
and
ret
pop
mov
adc
pop
and
push
daa
or
jne
mov
mov
pop
sbbl
inc
jo
out
push
and
and
xchg
pop
mov
mov
insb
xchg
gs
fstpt
push
pop
xor
inc
std
push
jmp
ja
sub
mov
jns
aam
test
lret
scas
jno
add
jno
xchg
dec
mov
lea
mov
dec
or
push
pop
push
mov
insl
xor
lahf
or
test
xchg
aad
lahf
test
adc
mov
lret
dec
and
icebp
mov
mov
mov
pop
cld
lahf
cwtl
outsl
mov
outsb
out
xor
mov
cwtl
add
aad
fsubrs
jl
and
movsb
push
clc
push
sbb
pop
mov
inc
pop
sahf
popa
mov
pop
push
xor
ret
mov
test
aaa
cld
xor
dec
sbb
mov
insb
jo
test
out
nop
xor
in
xor
xor
cmp
adc
ljmp
sub
les
mov
pop
adc
inc
or
jp
pinsrw
adc
add
insl
add
lods
cmp
push
jle
paddd
shll
lcall
repnz
push
adc
xlat
insb
mov
adc
imul
adcl
xchg
jle
cmpsb
je
sub
inc
notb
fidivl
add
fimuls
cmpsb
mov
je
repz
scas
stos
orl
push
adc
jo
add
dec
fidivrs
cmpsl
xor
sbb
sub
aam
cmc
ret
shrl
dec
loop
and
xor
mov
js
into
adc
or
std
mov
ja
jge
cmp
and
cmp
call
cli
pop
call
dec
jns
xor
and
mov
imul
cmp
cmpsl
pop
test
inc
icebp
mov
sbb
mov
shlb
push
je
fdivp
das
das
jbe
fnsave
push
negb
xorl
inc
xor
insb
outsl
adc
mov
ret
lahf
cmc
stos
fildll
inc
jno
pop
movsl
mov
std
rorb
xchg
jmp
push
in
dec
xchg
fs
xor
stos
jb
and
outsl
dec
fstpt
dec
jne
lods
push
xor
outsb
add
xchg
jp
mov
inc
stos
xlat
aas
je
ret
pop
in
mov
mov
ret
pop
add
cli
jae
push
pop
xor
sub
or
cmp
add
call
imulb
mov
call
mov
push
jnp
inc
notl
pushf
int3
in
or
inc
pop
hlt
jo
jnp
and
mov
adc
dec
mov
fcompl
insb
adc
mov
sub
mov
loope
adc
pushl
push
mov
loopne
in
js
mul
test
xchg
xlat
or
sbb
cmp
std
or
mov
push
push
in
clc
jmp
popa
or
dec
mov
shlb
fdivrs
idivl
rorl
or
dec
call
xchg
imul
iret
inc
add
icebp
jns
push
aas
adc
mov
pop
pusha
mov
das
loopne
inc
aad
pop
sarl
fdivr
inc
inc
jl
xchg
lock
loop
fistl
or
push
xchg
and
or
inc
icebp
and
inc
sarw
clc
ret
sbb
les
xor
push
in
pop
hlt
filds
hlt
jno
clc
and
clc
sub
dec
dec
pop
or
mov
int3
inc
data16
cmpxchg
xchg
jl
push
sub
jge
or
outsb
xor
pop
mov
in
testb
ret
lods
xchg
and
cmp
pop
mov
je
mov
cwtl
repnz
aam
and
xchg
out
push
jbe
push
xor
mov
loopne
xlat
cmp
cwtl
sub
rolb
ss
std
insb
arpl
clc
mov
inc
mov
push
sbb
or
jmp
jbe
mov
stos
adcb
pop
cmp
cs
in
fs
mov
sarl
xchg
mov
adc
jae
mov
call
insl
mov
sbb
mov
cmp
out
testl
xchg
cmpsb
test
jecxz
rorl
je
jmp
popf
addb
or
testb
push
daa
mov
enter
stc
pop
mov
xchg
mov
stos
dec
xchg
adc
cmp
fisttpl
xor
je
sbb
jo
push
lods
and
popl
or
incl
int
call
add
lods
lods
mov
xor
fsubrp
ljmp
mov
adc
rcr
dec
arpl
ljmp
mov
dec
addb
test
sub
push
ret
test
xchg
inc
call
and
js
mov
pop
cmp
lret
pop
mov
mov
nopl
add
out
ss
fists
and
je
ret
mov
call
cmp
dec
mov
shrl
out
sti
pusha
mov
fidivrs
mov
jne
fwait
idiv
add
sub
sub
mov
mov
xor
xlat
inc
xor
mov
and
add
jo
mull
sbb
js
and
cmp
jne
or
lods
inc
stos
fistps
js
xchg
orl
aaa
sub
fisubs
adc
bound
jno
adc
fsubs
dec
scas
xlat
out
adc
pusha
sbb
pop
adc
dec
push
dec
pop
subl
enter
mov
mov
je
and
mov
mov
call
lock
xor
clc
add
lods
adc
std
lret
sbb
mov
in
nop
les
pop
dec
sub
dec
dec
xchg
push
push
scas
pop
pop
dec
insl
adc
add
addb
lock
adc
test
sbb
mov
jle
out
pop
jmp
mov
insl
or
arpl
pop
loope
mov
nop
adc
fcomip
fwait
inc
inc
je
mov
cmp
mov
or
push
add
fs
shll
movsb
jae
and
sahf
bound
testb
in
in
ret
and
jbe
mov
outsb
jmp
adc
jno
aaa
or
push
pop
xchg
add
inc
or
add
jnp
dec
cmpsb
inc
xchg
test
std
lods
mov
mov
adc
jnp
push
fiadds
sbb
rcrl
leave
decl
and
jne
mov
inc
int
pop
dec
inc
cmp
xor
jmp
xchg
je
lock
sar
or
mov
test
fbstp
sub
push
enter
inc
cltd
sbb
call
ds
push
cmpsb
inc
xchg
lcall
mov
adc
add
pop
push
mov
push
mov
add
sub
popa
call
jg
sub
and
jl
shll
das
xchg
insl
lods
scas
ja
sahf
pop
add
mov
pop
adc
inc
xchg
cli
inc
pop
ret
shr
jl
outsl
or
or
fldl
movb
sar
faddl
mov
in
cmp
xor
rolb
clc
psllq
js
xchg
ljmp
pop
cltd
or
fimull
pop
fidivrl
push
adc
je
jbe
xchg
sbb
mov
lods
dec
mov
test
or
sbb
lcall
in
mov
and
sbb
fildl
popf
sbb
xchg
adc
sahf
loope
and
push
outsb
cmp
inc
mov
ds
xor
push
jl
fstps
cld
into
clc
dec
js
aam
loope
pop
dec
in
lds
mov
cmp
andl
cmc
adc
jo
cmp
jmp
jbe
mov
sub
pusha
cli
loop,pn
pop
cmpb
cmp
push
cmpsl
dec
push
add
fidivl
ja
xchg
les
int3
test
std
fildl
cltd
or
in
cmp
adc
push
cmp
inc
push
dec
pop
lahf
add
sahf
sbb
fadd
add
es
cmp
repz
mov
fs
iret
lds
pop
inc
xor
adc
in
adc
or
adc
xor
cmp
push
mov
xchg
call
push
adc
dec
cld
pop
loopne
xor
or
jo
sub
sbb
sbb
push
sbb
loop
mull
mov
add
sub
cmp
faddl
pop
or
shrb
and
mov
mov
scas
xor
add
or
mov
movsl
outsb
sub
adc
sub
addl
std
call
pop
sbb
incb
xor
in
inc
popa
sub
lods
test
add
lods
push
faddl
inc
inc
mov
dec
sbb
jp
jecxz
and
shl
pop
xor
outsl
std
add
call
test
lds
mov
xchg
ljmp
push
fdivl
pushf
shlb
imul
jne
in
push
fs
lea
dec
addb
mov
loope
in
push
push
hlt
sarb
or
pushf
add
or
mov
incl
ja
repz
dec
aam
mov
test
jge
inc
or
mov
mov
fnstcw
je
rcl
pop
add
pop
call
mov
in
orb
push
jg
sub
and
cld
ja
aam
pop
xchg
or
xchg
push
sbb
or
adc
negl
popf
jns
xchg
or
cmp
push
mov
lea
mov
pop
add
pop
iret
mov
je
pop
push
test
and
divb
sbb
push
inc
push
push
adc
and
cmp
in
xor
imul
movsl
ret
jo
or
sbb
mov
mov
jmp
sub
int
roll
in
xor
js
xchg
and
rolb
mov
adc
dec
add
loop
idiv
or
or
fdiv
jno
lock
icebp
add
or
js
rclb
rcrl
lret
fildl
scas
mov
inc
mov
dec
dec
pusha
mov
es
sub
shll
push
inc
mov
xchg
out
inc
jno
sbb
mov
or
jmp
add
stos
add
push
sarl
adc
xchg
or
cmpsb
sbbb
adc
sbbl
mov
shr
fistl
mov
cmp
push
pop
cmc
popf
shlb
call
mov
mov
push
sti
out
mov
out
mov
adc
js
jne,pn
mov
sub
sub
lods
insb
dec
mov
sbb
cmpsb
push
adc
stc
aam
mov
xchg
aaa
mov
repz
xor
sub
pop
sti
ja
notb
add
cmpsl
xchg
sub
and
add
ss
fnstsw
fcoms
mov
adc
xchg
add
in
addr16
or
test
adc
hlt
add
adc
sahf
int
jns
add
stc
int3
mov
add
addr16
stc
adc
data16
je
push
add
in
adc
inc
call
test
mov
sbbl
jg
inc
sub
test
sub
and
and
lret
cli
push
or
incl
ss
int
nop
std
mov
add
idivb
pop
mov
push
pop
loop
mov
std
sbb
add
loope
fstpt
lret
pop
pop
inc
jmp
je
xor
test
popa
lahf
mov
xchg
leave
sbb
std
or
inc
icebp
cld
and
adc
inc
mov
mov
sbb
sub
cmpsb
lods
jmp
iret
push
xor
dec
jo
rcrl
push
outsb
xchg
bound
cmp
adcb
imul
cmp
int
lcall
mov
ficompl
or
call
sub
and
fs
sbb
cs
fcmovbe
xor
js
inc
or
fs
dec
orl
jg
stos
fcmovnu
xchg
mov
cwtl
ret
decl
pop
and
add
or
or
mov
xchg
das
sbbb
cmp
add
cmp
adc
inc
call
xchg
inc
pop
adc
bound
and
ja
sbb
fstl
xchg
inc
sbb
movsl
fistl
add
in
das
mov
loopne
or
pop
call
out
cmc
mov
inc
xchg
mov
or
scas
inc
in
adc
adc
and
xor
xlat
or
inc
das
pop
cwtl
fs
mov
adc
inc
pmullw
xor
hlt
inc
mov
cmp
push
cmp
push
push
call
data16
add
mov
lds
test
popf
jge
mov
xchg
stos
pop
add
push
adcl
adc
add
bound
mov
jecxz
lcall
sub
mov
stos
call
sbb
inc
lock
ret
cmp
addr16
and
or
pop
xchg
sbb
adc
cmp
test
in
adc
movsb
mov
inc
insl
jecxz
stos
mov
sbb
or
cmc
fldt
fstps
mov
out
pop
cmp
ss
push
add
adc
dec
ja
movsl
mov
mov
push
lds
mov
mov
inc
push
fs
pop
or
sbb
mov
ja
call
arpl
and
push
jae
shrl
mov
popf
mov
jl
call
aad
hlt
xor
leave
dec
sbb
pop
push
add
outsl
and
insb
mov
or
push
inc
lahf
lods
or
shrb
in
inc
xchg
and
jmp
loopne
sbb
jae
ljmp
lahf
cmp
sbb
sbbb
mov
xchg
sbb
mov
ret
mov
jmp
and
in
xchg
pusha
push
outsl
sahf
and
xchg
jne
jne
hlt
ret
leave
adc
gs
xchg
sbb
mov
sarb
xchg
ja
pop
stos
mov
push
dec
scas
bnd
mov
inc
rcl
cmp
adc
ss
rcl
inc
mov
sub
xor
adc
inc
lock
sub
adc
add
stos
adc
mov
lock
ds
shlb
iret
mov
cmp
sti
xchg
or
daa
inc
in
push
add
dec
lds
cli
pop
mov
scas
scas
sbb
push
mov
aad
jg
mov
push
shl
fisttpl
mov
test
push
mov
pop
jge
mov
adc
inc
icebp
int3
pop
mov
imul
jmp
lcall
and
daa
or
hlt
sbbb
pop
pop
in
fwait
jp
jmp
cs
les
inc
sbb
hlt
mov
push
scas
mov
inc
mov
faddl
dec
mov
mov
sub
fildll
ljmp
sbb
mov
mov
add
pminsw
push
scas
mov
fs
rcr
adc
or
cli
in
sub
xor
jne
jb
pusha
jae
push
mov
mov
cmp
xor
mov
cltd
mov
rcrb
ficompl
fiaddl
mov
dec
inc
movsb
sub
mov
leave
push
lret
jl
lds
xchg
jbe
push
or
push
adc
push
or
push
lahf
mov
cld
push
jp
ljmp
in
aad
ds
ja
or
adc
or
shl
mov
jp
adc
lock
push
push
or
out
pop
je
je
pop
mov
dec
sbb
stos
or
inc
mov
mov
mov
out
or
cmp
aad
popa
sti
push
sbb
mov
fstl
scas
popa
sub
daa
scas
push
dec
imul
mov
outsb
jecxz
mov
or
jmp
loopne
mov
mov
mov
push
cmovb
adc
mov
dec
mov
frstor
cmp
cli
xchg
orb
add
lods
sub
add
push
cmc
adc
movsb
and
lods
adc
and
das
movsb
imull
cmp
in
subl
dec
add
add
pop
jne
incb
jle
jp
stos
mov
je
adc
mov
mov
imul
lods
sbb
scas
inc
adc
cwtl
ficomps
push
out
sub
mov
sbb
fiadds
roll
mov
fistps
push
and
int3
mov
or
push
stos
push
test
dec
shrl
sbb
dec
push
xchg
dec
incl
inc
fs
popa
push
mov
mov
or
mov
js
cmpsl
push
movsl
mov
jle
jo
jmp
add
je
pop
mov
mov
movsl
in
adcl
mov
pop
orb
das
ja
pop
addb
mov
mov
mov
sahf
dec
xlat
stc
cmp
sub
cmpsl
fdivrl
xlat
lret
pop
stos
movsl
xlat
mulb
inc
test
test
popf
cmp
hlt
movsl
mov
pop
jge
jge
in
outsl
or
cmp
pop
clc
fistpl
lock
mov
imul
sub
lcall
mov
cmp
mov
or
or
in
mov
pop
dec
pop
inc
movsl
dec
pop
jg
or
cltd
out
stos
daa
jle
aad
dec
jge
adc
adc
adc
addb
xchg
or
hlt
inc
stos
pop
sbb
push
and
xchg
fs
into
push
adc
mov
or
test
jg
cmp
inc
mov
aaa
fs
pop
test
lahf
out
cmp
or
fisubs
rolb
xor
fadds
and
out
sti
loope
push
lret
push
fiadds
sub
aas
mov
mov
sbb
ja
gs
lds
sub
jp
mov
je
test
mov
pop
xlat
mov
or
popl
loopne
les
into
adc
clc
inc
xchg
lret
add
mov
add
ret
das
in
jp
aad
gs
fisubrl
push
test
and
movsb
daa
sarl
cmp
inc
dec
sahf
xor
pop
or
jecxz
push
or
xor
jns
aad
rcrl
pop
mov
outsb
aad
cmc
lret
fcoml
push
mov
je
ret
or
scas
bound
ret
jg
mov
out
push
push
adc
xor
cmp
bsf
add
and
or
movsb
xorl
outsl
sbb
call
push
mov
xor
ss
loope
jge
push
pop
mov
and
sbb
roll
pusha
lock
mov
or
loop,pn
jg
ret
inc
mov
xchg
pushf
and
adcl
cmp
icebp
mov
cmp
inc
cmp
ret
add
xlat
or
jne
aas
push
aam
nop
fs
sub
adc
gs
aad
test
outsb
pop
or
pushl
outsl
add
cmp
je
arpl
xchg
mov
pop
and
call
fcmovb
mov
enter
mov
jne
roll
and
or
loop
mov
xchg
das
cmp
mov
mov
inc
jns
push
dec
mov
sbb
mov
shrl
cmpsb
or
or
sarb
mov
push
cmc
and
or
sub
sbb
cmc
mov
sbb
xchg
cmp
stos
sbb
je
jle
fmuls
loope
lds
push
and
out
and
call
icebp
mov
or
mov
inc
pop
push
adc
and
jno
shlb
call
or
in
ds
sbb
loop
lods
shll
jl
nop
mov
jg
adc
push
sub
and
call
insl
inc
movsl
out
inc
mov
jne
aas
xchg
aam
push
out
inc
scas
shlb
lock
pop
outsb
punpckhdq
push
push
push
sub
sub
in
mov
int3
xchg
cmc
ljmp
jo
sbb
cmpsl
ds
mov
push
test
add
jp
mov
ret
lods
aas
pop
std
xchg
adc
and
pusha
insw
xorps
jecxz
xlat
push
inc
and
andl
mov
push
pop
push
add
outsb
cmp
push
popf
inc
imull
lods
pop
insb
adc
pop
fsub
ud0
lock
jo
ret
aad
aaa
pop
aas
sbb
sbb
lahf
mov
sbb
ret
out
call
ret
inc
outsl
xchg
test
jo
cmp
and
push
outsb
cmc
out
dec
pop
std
mov
push
sbb
fbstp
cmpsb
cli
add
add
fsub
push
cmp
mov
inc
lcall
and
sbb
daa
not
shll
sbb
idivl
dec
pop
out
ss
jp
gs
and
or
aam
aaa
xor
jae
cwtl
popf
sbbb
push
mov
jle
jmp
xor
imul
std
lcall
mov
inc
shlb
jae
push
bound
adc
clc
lods
or
fcompl
stc
mov
std
jmp
pusha
or
daa
push
popa
jns
jecxz
adc
push
push
or
scas
shl
dec
fstpl
adc
sbb
jae
arpl
xor
add
xchg
mov
aam
loop
adc
fcomp
and
adc
inc
push
mov
shll
push
sub
inc
xchg
aas
mov
test
addr16
jle
mov
mov
leave
lret
or
xchg
pop
inc
jecxz
cmp
inc
cmp
movsl
push
inc
cwtl
mov
inc
xor
push
sbb
rcrb
push
mov
jns
insl
out
mov
es
pop
rol
jb
outsb
jmp
pop
dec
xchg
push
mov
xorb
in
jo
je
push
icebp
adc
or
sbb
mov
leave
icebp
add
mov
je
push
mov
cmp
fwait
adc
out
and
decl
outsb
mov
adc
push
adc
cmp
push
insb
lock
sub
inc
inc
enter
cld
xchg
dec
adc
and
and
pop
fucom
sbb
cmp
fimull
sbb
nop/reserved
sahf
je
jg
inc
fisubs
push
xor
adc
or
hlt
fbld
std
or
adc
or
pop
add
inc
je
lock
repnz
xor
and
jne
jb
xor
add
inc
pop
and
and
loopne
push
ljmp
push
mov
mov
sbb
add
inc
mov
add
lods
loopne
mov
sub
mov
adc
movsbl
dec
test
ret
lahf
pop
mov
rorb
ret
outsl
insb
push
or
imul
stos
cld
and
scas
fiaddl
xor
add
xor
pusha
xor
or
cld
mov
push
cmc
aaa
shll
cmp
jp
fsubrl
add
jl
scas
add
rcrl
das
pop
imul
xorl
addl
sbb
fsubrs
adc
add
push
adc
pop
out
pop
stos
and
or
js
mov
mov
dec
sbb
pushf
adc
inc
hlt
dec
xor
stos
adc
mov
sbb
cs
mov
jbe
call
push
rorl
lcall
adc
and
push
jp
push
and
fists
sbb
lret
and
push
sub
stos
test
sub
push
inc
jb
leave
shrl
push
lcall
pop
xor
cli
out
and
enter
pop
push
cmp
or
adc
iret
sub
dec
push
cmp
dec
jmp
mov
jg
mov
xor
adc
popf
xchg
jo
push
mov
jle
or
test
lahf
call
sbb
pop
pop
push
je
sbb
add
divl
and
cmp
shlb
push
jmp
push
imulb
pusha
and
ljmp
enter
mov
loope
call
sbb
or
sbb
mov
xor
and
je
xor
jne
inc
xor
jbe
push
and
mov
test
dec
fdivs
invd
shlb
mov
dec
inc
jp
jne
cmp
inc
sti
mov
jne
popf
sbb
push
mov
mov
add
fstpl
pusha
pop
pop
loop
adc
mov
loop
dec
sar
outsl
jl
cld
inc
xor
sub
or
sub
or
push
or
scas
xchg
inc
stos
push
mov
jmp
popf
cld
push
mov
push
popf
jecxz
sub
jle
jbe
mov
dec
dec
aam
xor
xchg
enter
pop
adc
pusha
lock
push
shl
xor
dec
movsb
push
sub
inc
in
sbb
push
outsl
inc
inc
push
push
and
ss
shr
call
outsl
xor
mov
fldcw
mov
mov
mov
sub
cmpsb
adc
das
push
xchg
cmpsb
sub
mov
daa
pop
inc
imul
test
mov
insl
add
jle
pop
jg
adc
add
sub
xlat
and
cmp
mov
add
test
mov
xor
rcl
insl
pop
mov
iret
cwtl
mov
adc
pop
clc
adc
insl
push
mov
mov
pop
outsl
je
in
dec
xorb
sarl
xchg
test
push
loopne
scas
sub
mov
mov
pop
das
les
mov
cli
pop
pop
ss
jno
jno
dec
in
sbb
add
cmovb
jns
push
ljmp
dec
sbbb
pushf
je
fildll
loopne
bound
cli
fmull
nop
sbb
outsb
cs
sub
or
pop
scas
aaa
mov
sub
pop
je
push
lea
push
stos
lds
jae
out
sbb
mov
push
adc
in
lret
ret
or
lcall
loopne
or
filds
push
adc
or
incb
out
mov
push
rol
into
je
fbld
push
inc
in
outsl
mov
mov
sbb
xor
cmp
dec
sbbb
loop
or
icebp
or
push
movsl
sarl
fdivs
and
mov
imul
decb
das
xchg
adc
and
ja
adc
adc
mov
lods
mov
fcmovb
outsl
in
je
sbb
jmp
push
fists
in
cmp
shll
push
scas
rcl
and
sbbb
cmp
jg
lret
fsts
std
xchg
or
pusha
sub
movsl
sbb
jg
pop
shl
int3
and
push
loope
in
mov
xchg
push
and
pop
sbb
inc
adc
cld
cmp
and
lret
ljmp
les
jmp
fisttpl
push
pop
and
lods
sbb
pop
inc
mov
je
adc
insl
mov
push
testl
mov
lcall
arpl
adc
sub
or
adc
shll
incl
mov
push
cs
and
add
xchg
xor
repz
or
pop
test
stc
cmpsb
bound
xchg
loop
xchg
mov
jne
outsb
sbb
inc
dec
dec
into
cmpsb
push
negb
rcrb
mov
or
mov
sub
xchg
sbb
push
stos
xchg
lea
pop
stos
mov
sbb
cmpl
ja
pop
xor
scas
mov
fistpll
push
xchg
add
jmp
pop
mov
cmp
cmp
xchg
cmpsb
dec
mov
scas
out
sub
and
sub
cmpl
hlt
push
mov
add
fdivrp
outsb
sub
popa
and
jl
pop
lea
and
push
or
fimuls
popf
jo
imul
mov
xchg
fidivl
xchg
sbb
add
mov
xchg
scas
xchg
es
je
push
adc
push
sub
xchg
std
mov
cld
test
and
aam
jmp
push
test
fldt
and
into
ljmp
cli
xchg
jno
inc
fcompl
es
mov
inc
lock
jp
pop
jnp
ret
push
pop
pop
adc
ret
lods
loop
pop
mov
mov
push
and
cmpsb
sbb
adc
add
pop
or
sar
cmp
dec
incl
sbb
pop
sbb
and
outsl
adc
and
mov
mov
dec
enter
fstl
cmp
lret
fs
cwtl
jnp
xchg
jp
jbe
daa
sbb
outsb
insl
aas
mov
pop
and
push
jp
push
jo
xor
lods
hlt
fwait
sbb
call
mov
fcmove
pop
mov
add
cmp
adc
jmp
fidivrl
and
inc
push
jp
mov
or
mov
mov
outsl
lahf
scas
cli
aaa
aad
arpl
adc
ret
xor
jne
pop
cs
and
cwtl
mov
inc
sub
dec
roll
pop
call
sub
nop
push
add
mov
adc
inc
aad
nop
jns
inc
push
add
andb
mov
lods
or
jmp
leave
cmp
call
jp
out
movl
and
cmp
addr16
aaa
mov
int3
mov
insl
mov
jb
or
loope
pop
xchg
and
je
add
cmp
fcompl
fimuls
cmc
icebp
inc
dec
lea
and
add
mov
push
xlat
into
aam
in
add
cld
pop
inc
test
pop
and
xchg
movsl
mov
incb
fildl
out
sub
mov
popa
call
add
dec
pop
int3
pop
rorb
pushf
sub
xor
hlt
push
into
loope
pushf
call
test
lret
cmp
xlat
test
fmull
mov
push
push
jle
loope
and
inc
insb
pushf
stos
rclb
insl
mov
int
add
jbe
pop
sub
lods
jns
imul
jl
call
push
stc
or
loopne
adc
push
sahf
fwait
pop
jne
push
xor
sbbl
ljmp
rcl
out
call
fisubrl
insl
orl
into
jl
inc
ret
push
jp
xor
mov
mov
repz
xlat
and
push
xchg
mov
fcmovnu
lret
cmpsb
cmp
addr16
inc
pusha
push
mov
aas
ljmp
jl
sub
sub
and
inc
ljmp
cmp
push
sbb
mov
or
adc
add
mov
aam
jg
stos
rolb
xchg
pop
cmp
js
cs
sub
push
cmpsl
xchg
pop
mov
cmp
loop
loopne
ja
out
imul
cmpb
lods
xor
xor
push
test
pop
cli
push
lea
int3
jge
std
sub
stos
pop
adc
sbb
adc
jmp
ja
sbb
ror
sub
mov
test
pop
aam
in
pop
add
int
shlb
fidivrl
dec
shrb
and
aad
cmc
sbb
adc
adc
mov
lock
aad
mov
rorl
rolb
cwtl
data16
xor
add
mov
gs
sub
cld
mov
mov
adc
xor
push
pop
cmp
add
lods
cld
fildl
mov
in
aaa
cs
pop
mov
fstpl
mov
movsb
sbb
pop
push
aad
ret
jno
test
movsl
out
fbld
inc
loop
sub
inc
cmpsb
test
cmp
das
inc
dec
adc
in
push
jle
xchg
sub
ss
jo
xor
negl
pop
sti
aad
push
hlt
mov
add
aam
sub
insb
into
jg
lcall
imul
inc
cli
push
jg
fs
test
aam
mov
fdivl
sbb
movsb
mov
adc
subb
add
movsl
inc
cmpsb
sub
xor
push
pop
sub
dec
push
add
fsubl
jo
mov
mov
les
inc
loopne
dec
sar
pusha
mov
outsl
sbb
push
pusha
xchg
adc
decb
xchg
dec
iret
xor
es
sti
or
cmp
or
and
push
jle
mov
mov
and
mov
pop
lds
adc
jnp
jecxz
mov
cmp
cmp
mov
pusha
inc
lods
mov
outsb
mov
roll
imul
jmp
pop
cmp
or
test
xchg
adc
stc
sbbb
scas
mov
das
ja
dec
lcall
jecxz
aas
cmc
mov
sbb
dec
addr16
fistpll
and
mov
push
dec
push
inc
adcb
xchg
cmpsl
adc
cld
int
fists
and
and
shlb
and
mov
pop
in
push
mov
loopne
pop
stc
add
das
pop
stos
ljmp
cmpsb
sbb
pop
jp
pusha
mov
ret
iret
adc
mov
jne
jg
dec
daa
je
cmp
and
into
jne,pt
cmp
inc
cltd
inc
pop
sub
inc
lea
adc
cmpsb
inc
or
icebp
shlb
and
mov
sti
jp
cs
mov
mov
push
stos
andb
dec
adc
pop
dec
sbb
rclb
xor
pop
add
sbb
insl
xchg
push
pop
cmp
and
or
mov
adc
inc
adc
inc
rcll
je
daa
xchg
sbb
mov
mov
scas
add
fcomps
fs
sbb
add
shrl
pop
clc
jmp
dec
loopne
leave
dec
daa
push
and
fimuls
test
js
call
xchg
ljmp
add
sub
mov
in
in
and
test
lahf
push
xchg
mov
pop
sbb
cld
sarb
cmp
aaa
aam
aas
gs
sub
inc
cwtl
mov
sbb
fucomi
hlt
out
fadds
lock
sub
add
fisubrl
cmp
mov
mov
ljmp
orl
lcall
sub
ret
xchg
imul
cmp
cli
mov
or
sbb
mov
and
arpl
pop
rolb
xchg
or
lods
or
push
loopne
pop
fxch
scas
popa
outsl
or
mov
fisubs
jbe
call
ljmp
or
add
sbb
shrl
push
push
mov
sbb
sar
inc
cwtl
loopne
ljmp
leave
mov
push
bound
adc
clc
sbb
leave
pushf
adc
cld
pop
fcomps
je
fidivl
js
jg
cmp
lods
subl
xchg
push
cwtl
and
movsb
repnz
test
jge
mov
sbb
stos
and
mov
xor
shll
loop
call
or
subps
addr16
sti
sub
add
insl
clc
mov
cmp
sbb
sub
pop
jo
out
daa
imul
sti
xor
mov
adc
pop
push
add
push
mov
adc
lock
xor
lahf
lods
ds
jbe
in
and
pop
jne
fildl
inc
jne
pushf
inc
sub
sbb
add
adcl
xchg
or
inc
jmp
push
aad
xorl
sbb
mov
cvtps2pi
mov
xchg
mov
cs
inc
inc
clc
ss
push
jnp
rdpmc
jp
adc
pop
xchg
stos
sub
push
call
mov
sahf
aaa
lods
push
mov
push
mov
movsl
mov
movsl
fcomip
aaa
add
gs
scas
jne
adc
popf
inc
mov
push
fimuls
fdivs
mov
icebp
push
push
mov
push
sub
add
dec
out
loopne
mov
dec
push
outsb
and
popf
arpl
cli
sbb
cmp
cli
sbb
cmp
call
push
loope
hlt
xchg
lds
div
and
ja
jp
sbb
jecxz
nop
call
shr
jmp
inc
movsl
mov
ljmp
mov
mov
fdivrp
testb
or
adc
mov
push
fsts
add
jb
xlat
xor
or
shll
mov
jge
rcl
cmpl
in
test
cwtl
adc
daa
dec
push
mov
or
in
test
jb
loope
xor
sahf
sbb
hlt
push
or
pop
call
mov
xor
testl
test
adc
sub
mov
xor
sub
adc
in
dec
cmp
dec
jmp
push
mov
ss
scas
adc
mov
jb
xlat
inc
inc
cmp
scas
fistps
mov
and
or
mov
outsl
adc
or
movsb
faddl
out
bound
stos
pop
mov
fnsave
or
outsl
fnstcw
xchg
pop
nop
push
and
mov
rcrb
push
and
test
add
and
fnstcw
fstpt
adc
pop
dec
int3
or
and
cs
mov
push
jmp
outsb
mov
mov
in
fiaddl
test
mov
add
or
inc
pop
add
sbb
sub
imul
xor
sub
out
pop
xor
inc
mov
mov
jno
iret
test
ds
shrb
loop
inc
shl
mov
ss
cmc
std
loope
sbb
push
xchg
sarl
gs
bound
mov
mov
clc
mov
sbb
inc
sbb
jb
fbld
fidivrs
jae
sbb
daa
and
jae
inc
scas
ret
ljmp
fcmove
or
or
inc
icebp
inc
xorl
aaa
call
inc
loope
test
inc
cmp
stos
mov
adc
insl
mov
push
fistpl
mov
cmpb
fsubr
inc
inc
je
iret
fstp
cmp
and
popf
sub
mov
test
add
xor
inc
add
push
adc
sub
or
inc
adc
inc
fisubrl
pinsrw
inc
imul
or
mov
inc
loope
mov
hlt
add
mov
das
rcrb
xor
xor
xor
push
jb
inc
dec
xor
cs
dec
add
fcmovbe
mov
pop
clc
popf
push
pop
enter
into
or
jne
sti
jmp
mov
jno
aam
pop
fsubr
fcomip
sbb
lcall
bound
into
in
pop
out
mov
add
jge
dec
fisttpll
add
movsb
loop
popf
adc
xor
and
popf
pop
sub
or
cmc
mov
fwait
pop
xor
fldt
dec
mov
lea
popf
add
mov
mov
leave
jmp
mov
sub
shl
fildll
popf
sub
fnstenv
divb
popf
adc
jne
xchg
data16
insl
cld
cmc
ja
cmpsl
ja
xchg
or
cmpl
fs
push
mov
mov
sub
sub
int3
sbb
pushf
scas
out
xor
int
lret
test
stos
icebp
sub
leave
leave
stos
movsl
movsb
push
fsubs
in
fsub
fs
jbe
in
sti
int
sub
test
cmp
cmp
out
hlt
jmp
sti
or
inc
cmc
cmp
cmc
jmp
addl
mov
push
fsubl
sbb
inc
mov
or
es
lods
popf
jge
stc
jmp
or
icebp
cld
and
into
xchg
cli
out
pop
fstpt
imul
mov
mov
idiv
mov
mov
push
and
jbe
add
lret
test
into
idivb
lods
negl
lea
outsl
clc
pop
xor
mov
mov
xchg
aam
js
das
fcomip
xchg
push
pop
loope
xor
pushf
ret
in
leave
inc
pop
xchg
mov
or
push
fstpl
mov
cmpsb
nop
lods
sbb
fmulp
movsl
mov
inc
cmp
fmul
cltd
inc
cmp
jb
inc
xchg
inc
and
mov
push
sahf
pop
insb
dec
push
mov
rclb
cmpsb
pop
jmp
add
cmc
movsl
jmp
xchg
xchg
outsb
int3
negl
cli
into
xchg
stc
icebp
pop
push
fadd
filds
dec
dec
fcompp
fdivs
movsb
push
push
adc
movl
push
ljmp
pusha
jmp
pusha
jmp
or
fs
clc
xchg
out
sti
cli
mov
jmp
lock
aam
notl
push
sti
icebp
repnz
into
dec
repz
lahf
in
inc
in
in
in
lods
in
lahf
out
sub
ds
out
int3
jne
mov
cmp
fnstenv
or
adc
pushf
cmpsb
pop
or
bound
fsubrs
jbe
pop
loopne
aad
jne
pop
jge
xchg
sub
fbstp
pop
jno
sbb
aad
sahf
push
sti
in
mov
adc
fists
cltd
and
mov
int
dec
popf
fists
cli
jbe
frstor
call
enter
popf
lea
fldt
out
sahf
fnsave
cmp
and
cltd
push
nop
pop
mov
cmc
aad
int
pop
mov
push
xchg
cmc
ret
mov
push
sahf
or
fnsave
jecxz
push
lcall
mov
dec
sbb
into
jne
popa
fnstcw
dec
sahf
rorb
adc
shll
pushf
ds
mov
neg
mov
pop
imul
or
movsb
sbb
sbb
push
andl
add
xor
fcmovnu
jne
adc
xor
or
out
sbb
sub
fstpt
dec
cltd
lea
add
lea
int3
mov
sbb
lds
popf
aad
or
scas
mov
sub
push
lea
gs
cmp
fwait
shrb
pop
popa
jecxz
mov
test
xor
out
mov
jne
or
pusha
xor
sub
outsb
seto
lock
pusha
pop
cmp
repz
inc
outsl
sbb
jno
push
sbb
sbb
lahf
jnp
fbld
pusha
mov
xchg
inc
push
push
inc
into
shll
adc
imul
dec
fmul
mov
sti
dec
sahf
pop
int3
int
inc
ret
sbb
pop
ja
mov
inc
mov
imul
inc
inc
decw
je
pop
lahf
je
xlat
pushf
stos
jecxz
addr16
mov
fwait
xorb
mov
mov
into
xchg
sahf
pop
imul
push
cmp
aam
inc
lret
sahf
into
mov
inc
je
add
out
ss
mov
inc
scas
pop
into
push
cmp
mov
sti
xchg
movl
jmp
ljmp
sbb
repnz
aam
lea
xor
cltd
mov
iret
xchg
mov
pushf
lods
daa
ss
adc
add
dec
outsb
in
push
cltd
xchg
xor
aaa
loope
cmc
mov
mov
xchg
sbb
pushf
xchg
insb
jns
addr16
ja
adc
jl
hlt
scas
pushf
dec
mov
mov
ja
mov
adc
or
pushf
pop
and
lods
mov
xchg
and
mov
bound
daa
daa
daa
xor
shr
icebp
jmp
mov
in
add
stos
jno
das
into
fdivs
pushf
cmc
out
mov
loopne
mov
rcrl
push
gs
cmp
cmp
or
iret
cmp
pop
push
push
es
dec
sub
into
push
lret
dec
mov
and
les
mov
mov
in
fwait
daa
inc
negl
cmc
bnd
jmp
fcmovnbe
push
adcw
sub
xlat
or
mov
and
sub
cmp
push
pop
mov
hlt
popa
push
add
push
jae
adc
push
and
cmp
aas
mov
pop
enter
popa
into
cmpsb
fwait
lock
xchg
push
jmp
push
sbb
mov
jbe
jo
fucomi
test
jne
pop
mov
or
xchg
or
insb
mov
sub
cltd
pop
fwait
cltd
xor
bound
lock
sub
xchg
imul
popa
jne
nop
adc
push
pop
cltd
pop
outsl
scas
fwait
pop
xor
or
scas
xchg
imul
out
dec
out
sahf
loopne
cmp
std
mov
ss
mov
enter
sbb
jbe
pop
cwtl
xchg
sub
fnsave
xchg
sbb
mov
push
outsl
in
jl
or
int
mov
inc
fdivrs
cld
xchg
fnstcw
in
xlat
sub
fisubl
stos
sbbb
outsb
ret
or
lahf
fwait
cmp
outsl
add
sbb
bound
add
mov
sbb
sahf
cmpsb
lahf
pushf
mov
lahf
sub
filds
add
xor
xchg
ficoml
out
pusha
xchg
icebp
adcb
andl
fildl
mov
stos
cmpsb
outsl
sub
fildl
jge
adc
push
mov
or
fisttps
pop
push
iret
lods
add
push
scas
cli
imul
adc
call
mov
xchg
push
jmp
div
xchg
and
pop
pop
lcall
add
pop
cld
out
push
jge
sbb
aam
gs
mov
mov
and
add
xchg
jo
shlb
in
arpl
test
notl
pusha
xor
jno
xchg
xor
mov
xor
pop
jb
push
xchg
call
mov
sarb
pop
cmp
add
jbe
aaa
jp
sbb
pop
es
jecxz
xor
pxor
xchg
mov
xchg
and
inc
jo
popa
test
inc
sub
in
lods
sub
add
int3
mov
nop
mov
xchg
cmp
sub
fdivrs
pop
pushw
sub
pushf
mov
xchg
or
fisubl
sbbb
xlat
arpl
fisubrs
rcr
dec
adc
xor
or
or
adc
push
cs
arpl
xor
aaa
incb
push
mov
jne
xlat
xchg
dec
call
aaa
pop
daa
aas
adc
pop
pop
xorl
or
sbb
ret
pushl
cld
push
rcll
fwait
sbb
jg
aas
out
clc
jg
std
mov
sbb
lahf
jne
pop
out
imul
push
or
mov
std
fsubrl
pop
out
push
mov
rorb
std
pushl
xor
rorb
into
jge
out
scas
lds
popf
loopne
xchg
sbb
fistps
gs
inc
fmull
push
pop
cs
inc
push
insl
mov
fistpll
lahf
int
pop
mov
dec
pop
je
aaa
loop
aaa
inc
sub
out
outsl
pop
mov
mov
mov
cmp
bound
inc
push
adc
or
add
mov
add
nop
push
add
add
orl
adc
push
fmul
add
add
arpl
add
jns
and
ja
incl
inc
add
add
push
or
jae
add
sub
add
std
or
popa
add
scas
fwait
xor
jo
jb
or
xlat
jge
adc
add
dec
jnp
sbb
or
inc
jno
neg
pop
jb
sub
pop
sbb
pop
push
fnstcw
imul
or
lods
nop
insl
adc
xchg
dec
imul
arpl
outsl
push
fnstsw
lods
jbe
dec
sbb
sbb
pop
divl
jae
add
sbb
insl
and
jo
jnp
sbb
jne
xor
jns
jnp
xlat
daa
insb
das
dec
sbb
das
push
add
stc
out
cltd
popa
push
aas
push
fs
add
clc
es
filds
outsb
inc
clc
pop
inc
add
or
pop
cmp
icebp
cmp
push
pop
inc
jo
sbb
inc
inc
addl
jae
imul
popa
inc
daa
jb
inc
sbb
je
cmpxchg
jnp
addl
sar
mov
jae
punpckhwd
jmp
sub
fildl
sti
dec
jb
cmp
xor
dec
cwtl
popa
into
int3
add
jae
or
int
popa
pop
dec
repz
outsb
jns
aas
inc
xor
je
pop
aaa
dec
insb
insb
jns
cmp
sahf
sbb
addl
sbb
loope
push
outsb
out
or
push
pop
inc
je
aam
xor
fmuls
dec
popa
push
jne
pop
into
mov
sub
fadd
shl
jg
insb
lds
mov
into
pop
push
outsb
dec
out
mov
addr16
jmp
jmp
pop
and
icebp
dec
rorl
add
push
jae
ret
add
dec
xor
ret
jnp
outsl
xchg
adc
sahf
sbb
mov
imul
sti
sti
push
pop
iret
jg
jo
sti
fsubl
std
sbb
mov
imull
imul
cmp
fsubs
dec
daa
jb
cmp
dec
fisubs
dec
and
jo
outsl
pushl
sarb
xlat
push
pop
lods
arpl
fucom
inc
loope
dec
xor
es
jle
sub
sti
or
insb
arpl
dec
out
dec
push
js
pop
sbb
jnp
mov
push
imul
push
jmp
cmp
push
sbb
out
jmp
aas
push
and
dec
js
mov
inc
xchg
pop
outsl
add
insl
xlat
dec
mov
stos
push
mov
sub
dec
sbb
xor
pop
or
out
leave
jne
lahf
adc
jbe
xchg
das
or
jle
popf
lahf
popa
mov
jno
mov
adc
jecxz
daa
dec
mov
pop
loope,pt
loope
or
into
and
mov
in
sub
fadds
adc
inc
sub
push
push
xchg
mov
imul
mov
lods
out
andl
add
adcl
sbb
je
pop
mov
test
mov
mov
dec
cmp
inc
cmpsl
xorl
stc
mov
jns
outsb
movsb
loope
jp
xor
push
inc
outsb
dec
or
and
pop
out
mov
out
push
xor
lahf
xchg
mov
add
loope
cmpsl
cmp
adc
push
scas
imul
dec
cmp
stos
inc
add
dec
adc
decl
push
jecxz
or
or
popf
push
cmpb
or
aad
and
cmp
adc
cltd
popa
nop
and
daa
xor
and
test
push
imul
dec
cmp
aas
addl
push
sub
dec
mov
jno
pop
jne
int3
js
or
mov
ja
sub
inc
jne
or
addr16
xchg
jo
leave
fimuls
arpl
adc
inc
push
bound
push
out
loope
cmp
pop
imul
or
idivl
push
ret
pop
divl
or
sbb
sub
in
push
add
nop
pop
dec
fwait
inc
pop
aas
popf
inc
movsb
sbb
inc
dec
push
xor
and
push
arpl
sti
jnp
add
dec
test
sbb
lods
popa
pop
dec
and
das
call
sbb
dec
mov
pop
insb
je
mov
imul
mov
pop
imul
imul
leave
loopne
test
adc
sub
fldcw
mov
dec
mov
es
seto
cmpsl
dec
push
test
dec
es
loopne
fnstenv
xchg
push
sub
inc
dec
mov
fdivrl
dec
cmp
mov
movsl
jmp
icebp
lock
sub
dec
int
iret
je
jmp
sub
adc
pop
popl
push
pop
out
jno
sbb
roll
jnp
icebp
bound
aas
xchg
loope
cmp
cmp
dec
pop
dec
arpl
je
mov
sub
adc
je
adcl
jmp
fwait
xor
scas
stc
xchg
dec
inc
aaa
mov
cmp
mov
movsl
sbbl
arpl
adc
push
push
fwait
ja
cmp
mov
xor
int
repz
fstl
popf
cmpl
inc
leave
dec
jbe
out
and
bound
push
push
mov
and
cmp
xor
je
and
insb
jae
dec
rol
or
push
hlt
data16
ret
push
repz
nop
cli
jmp
adc
or
outsl
adc
add
pop
or
add
insl
and
ja
fisttps
test
jnp
push
lret
jnp
add
mov
pusha
mov
add
out
add
sbb
add
andb
imulb
push
lret
add
add
mov
xor
fstl
imul
cmp
jne
dec
fdivrs
mov
mov
dec
or
insl
and
mov
mov
sub
ret
pop
outsl
xor
xor
sub
out
pop
push
cli
add
add
push
ss
aaa
out
jle
push
add
jbe
mov
daa
pop
jbe
hlt
mov
dec
inc
inc
insl
ja
gs
jns
jnp
std
test
orl
stc
insb
pop
pop
jno
scas
in
inc
cmp
mov
pushf
add
enter
mov
dec
mov
js
rolb
sub
pop
xchg
cmp
ja
das
fs
das
dec
sub
ja
pusha
add
movsl
dec
cwtl
je
pop
inc
subl
mov
arpl
cld
mov
adc
pop
fidivrs
sub
fsubrs
ja
jecxz
xor
js
sbb
add
out
jp
call
add
xor
sti
lods
fs
sub
orl
dec
mov
mov
pop
and
jmp
and
bound
jb
or
and
sarl
inc
flds
orl
xchg
jge
sbbb
dec
jne
sub
pop
cmpb
aas
xor
scas
sti
insl
add
popa
xchg
icebp
xchg
sub
jle
inc
push
add
dec
outsl
jp
adc
cli
adc
movsl
push
ljmp
das
arpl
adc
mov
cmpsb
add
arpl
push
roll
sub
inc
lods
outsl
gs
adc
fcoms
sbb
lea
jnp
addl
jb
dec
xchg
std
mov
imul
addl
das
pop
pushf
xchg
cmp
inc
and
sub
cmp
xor
add
fcmovbe
mov
mull
popa
test
cmp
push
adc
or
inc
sti
dec
cmp
outsl
shr
add
add
sbb
mov
pop
or
pop
dec
push
daa
mov
jne
jns
push
popa
test
dec
pusha
aas
subl
mov
pop
and
ret
cmp
popf
stc
sub
and
and
add
out
pop
cmc
or
jnp
mov
mov
arpl
shrl
ds
jecxz
sub
into
xchg
enter
in
pop
fwait
xor
dec
xchg
movsl
add
out
add
notb
outsl
bsr
mov
adc
push
movb
jl
mov
ja
scas
sbb
aam
cmpsl
test
lea
fisubrs
loopne
pop
pop
mov
adc
add
shll
fsubs
lods
mov
out
or
dec
scas
xlat
fwait
sti
enter
add
inc
daa
dec
ret
jmp
mov
xor
pop
dec
ret
fcmovne
adc
or
or
out
shl
shlb
adc
leave
sbb
jmp
subl
pop
adc
lahf
arpl
mov
xchg
or
sub
dec
arpl
jecxz
hlt
push
mov
fwait
dec
outsl
sbb
mov
inc
sub
jbe
cmp
imul
imul
dec
js
sbb
push
int
negl
aaa
adc
or
enter
pop
in
add
ja
popf
push
js
rcll
iret
pop
xor
cmpsb
scas
push
adc
mov
pop
and
cmp
mov
test
aaa
mov
cmp
mov
sbb
pcmpgtb
js
scas
mov
sbb
fisttps
lods
cmp
pop
ljmp
xlat
das
in
adc
jg
outsl
pop
test
sub
jo
std
add
movsb
xchg
test
mov
xor
addr16
jmp
inc
and
ret
jno
mov
cmp
add
rolb
das
daa
das
or
outsb
mov
dec
pop
cltd
push
movl
push
je
adc
gs
add
jnp
pop
aaa
dec
mov
inc
jmp
mov
xor
add
inc
mov
aam
xchg
jno
sti
lahf
add
mov
jo
inc
lods
pop
inc
push
test
fbstp
js
jp
jnp
call
add
rcrb
lret
stos
mov
ja
mov
aad
jo
pop
push
mov
popa
inc
dec
data16
lock
stos
sub
sahf
inc
add
dec
xchg
xchg
popf
loopne
out
aas
push
shll
cld
aas
add
pop
pop
xor
mov
movsl
inc
adc
pop
mov
mov
and
mov
loope
stc
push
fidivrs
fnstsw
jg
outsl
dec
insb
stos
loope
mov
add
adc
mov
sub
mov
jns
je
call
jae
rol
dec
sbb
pop
ja
js
cmp
adc
fwait
and
jns
daa
pusha
orb
push
imul
mov
or
popf
inc
xor
cltd
mov
and
or
cmp
push
lret
loop
lods
fwait
adc
jl
pusha
mov
dec
cmpsl
sub
icebp
addb
roll
adc
inc
testl
sub
insb
or
mov
cmpl
cmp
or
adc
out
hlt
push
xor
inc
jae
inc
fstpl
and
lds
mov
lcall
jbe
popf
loop
mov
mov
mov
push
adc
add
sbb
ret
ss
shlb
inc
outsl
ljmp
dec
bound
aas
inc
push
popf
adc
popa
dec
inc
cmp
inc
pop
gs
sbb
js
adc
inc
fildll
jne
popa
out
sbb
adc
jg
push
xchg
ja
sub
sbbl
add
sbb
adc
and
dec
pop
adc
js
insb
push
mov
je
popf
and
fimuls
add
ret
popf
xchg
imul
das
cmp
addl
dec
xor
stos
sbb
fstps
adc
test
mov
dec
sbb
sub
fcomp
adc
lds
push
adc
push
and
adc
xchg
cltd
jp
frstor
sbb
xor
push
out
gs
xlat
jge
or
jbe
sbb
arpl
xor
aas
in
or
ja
pop
xor
out
sub
movhps
or
fdivrs
push
sub
pop
xlat
aas
dec
mov
fwait
push
cmpsl
test
cmp
insb
sbb
ja
push
aas
fsubs
pop
jo
xor
fbld
xchg
dec
je
imul
xchg
addr16
jge
xor
or
ja
sbb
and
inc
imul
xor
inc
xchg
mov
rorl
adc
inc
xor
and
cltd
nopl
jne
xor
shlb
sbb
push
lret
xor
shll
lret
inc
sbb
xor
fldcw
mov
andl
pop
lods
mov
jp
dec
jge
pop
adc
aaa
inc
pop
test
push
mov
and
xor
inc
jbe
add
sbb
xchg
leave
das
repz
jnp
cmp
nop
call
inc
sub
dec
popa
mov
aaa
loopew
fcomip
push
js
jmp
insl
rorl
sbb
dec
cmpsl
das
mov
imul
add
insb
movsb
push
mov
inc
sbb
dec
xchg
dec
stc
arpl
pop
xchg
ret
popa
dec
out
sbb
sahf
fidivs
addr16
sbb
add
inc
jmp
ret
xor
xchg
jns
sbb
xor
add
dec
sbb
imul
outsl
aas
xchg
loopne
or
dec
mov
add
popa
pop
pop
pop
int3
or
aad
pcmpgtb
push
pop
cltd
xchg
xor
ret
icebp
mov
popw
insl
xlat
mov
dec
pop
jne
xchg
mov
lds
mov
adc
inc
push
and
mov
push
int3
sbb
orb
push
icebp
pop
xor
ds
dec
add
das
fwait
add
sub
imul
inc
inc
xor
pop
push
pop
test
push
dec
negl
int
push
sahf
jle
outsl
fsts
orb
mov
mov
sub
sub
je
ss
adc
aaa
or
les
pop
pop
push
push
xor
pusha
ret
es
xor
dec
mulb
orb
mov
stos
outsw
neg
fs
ficomps
out
ss
ss
inc
sbb
or
adc
or
inc
push
data16
add
xor
int
cmp
insb
push
jo
loope
ret
or
sbb
scas
fdivrl
into
bound
je
add
ret
in
jns
xchg
int
or
sub
insb
lods
ficoml
shll
jnp
adc
push
add
aas
push
xor
fwait
mov
mov
and
jge
xor
in
mov
jecxz
fisttpl
push
je
xchg
outsw
gs
lret
or
add
mov
push
mov
lea
das
nop
add
push
gs
pop
mov
andb
js
pop
add
sbb
add
add
out
and
add
push
mov
xchg
add
xchg
mulb
testb
add
sub
xor
or
inc
inc
or
dec
add
sub
cmp
ss
jl
jge
pop
add
std
movsb
mov
dec
adc
xchg
add
jl
popa
dec
andl
fldcw
mov
inc
sub
sbb
dec
or
sbb
in
int
lods
ret
adc
or
adc
and
es
insb
adc
mov
inc
dec
bound
dec
js
pop
xchg
arpl
pop
in
adc
movsb
pop
sbb
mov
push
insb
push
push
xchg
decl
jl
mov
gs
gs
in
lcall
jae
dec
jne
gs
gs
je
jb
jne
dec
outsb
outsw
inc
adc
mov
jge
outsl
insl
jo
jb
popa
insl
gs
and
add
lret
push
imul
sbb
in
mov
inc
imul
jns
inc
jne
movd
add
popa
adc
gs
insb
sub
jo
outsb
in
arpl
ja
inc
js
je
jb
arpl
jae
dec
outsl
fs
outsl
mov
pushf
insb
je
inc
jns
push
outsl
push
in
xchg
pop
stc
imul
imul
mov
arpl
push
jne
outsl
outsb
bound
mov
and
fs
fs
push
jo
insb
jmp
into
dec
les
outsl
sub
gs
imul
addl
stc
jne
xchg
mov
mov
dec
push
adc
pop
divl
loopne
jo
dec
bound
jae
jnp
insl
dec
imul
packssdw
mov
or
jge
push
popa
test
divl
inc
outsb
movsb
rcr
xchg
xor
push
push
pop
mov
or
dec
lea
addr16
lods
lods
sub
push
repnz
jbe
lods
nop
fists
adc
mov
jb
das
cmp
pop
mov
je
dec
ja
mov
cmp
cmp
mov
xchg
lds
sub
adc
jae
addr16
xchg
dec
ja
incb
and
popa
push
inc
gs
xorb
les
or
cmpsb
insl
outsl
mov
insb
lods
xor
xchg
add
lea
inc
and
lret
jg
jg
add
add
inc
loopne
sidtl
add
pusha
scas
cmp
scas
add
das
inc
je
inc
or
or
insb
pop
jae
add
push
push
pop
cmp
addl
inc
imul
and
push
nop
shlb
insl
or
repnz
nop
jmp
and
xor
or
adc
mov
pop
jo
out
fiadds
fs
popa
or
add
add
adc
add
add
jb,pn
enter
idiv
add
add
dec
sarl
inc
or
scas
sbb
xor
loopne
jecxz
imul
cmpsb
in
xor
inc
movsb
imul
lods
add
mov
sbb
inc
add
add
add
add
nop
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
