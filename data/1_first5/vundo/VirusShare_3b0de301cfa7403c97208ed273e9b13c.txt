mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
lldt
in
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
push
call
mov
mov
movzbl
sub
je
incl
call
call
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
fimull
ljmp
into
cmpsl
ficompl
dec
adc
sbb
mov
outsb
sub
mov
sahf
cli
scas
ljmp
out
stos
rcrb
dec
push
jp
push
sbb
pop
cmp
jle
sub
pop
cli
xor
enter
xchg
mov
push
imul
jns
inc
sbb
std
sbb
rcr
push
insl
and
xchg
test
jo
insl
aad
xchg
adcl
lea
inc
lcall
add
icebp
loop
rcll
add
xor
mull
daa
jo
cmc
movsl
in
pop
push
push
out
rcrb
andl
cmp
jne
jecxz
stos
jae
mov
fwait
rcll
rol
xchg
mov
arpl
pop
inc
gs
stos
filds
and
pop
sub
loope
dec
and
dec
lds
xor
fistl
sub
sbb
clc
add
pop
sbb
subb
sbb
lret
mov
mov
push
dec
mov
sub
add
jb
mov
jbe
dec
mov
ret
ljmp
mov
fwait
cs
or
dec
xor
pop
pop
lods
enter
mov
xchg
int
outsl
sub
push
in
add
push
or
mov
ret
filds
stos
pop
push
dec
push
jp
push
sbb
pop
cmp
jle
mov
sahf
cli
scas
ljmp
out
stos
pop
push
dec
push
jp
push
sbb
pop
cmp
jle
mov
push
dec
test
pop
xchg
jo
jnp
xor
or
movsb
pop
mov
cmc
push
outsb
repnz
dec
and
movsl
lahf
pop
and
rorb
push
and
fidivl
jg
les
mov
pop
fidivrs
fists
shl
test
sub
and
shl
mov
pop
movb
pop
cmp
and
push
add
inc
jno
int3
mov
jp
and
ljmp
and
cmp
mov
dec
mov
movsl
mov
in
aam
jne
rcll
ja
inc
mov
pop
jg
stc
adc
pop
testl
mov
test
cmp
xchg
sub
push
push
popf
cld
adc
mov
jne
lahf
cwtl
std
stc
std
shl
pop
imul
test
in
jle
insl
add
and
mov
xor
pushf
mov
inc
mov
aam
inc
pop
loopne
jmp
cmp
rorl
push
js
mov
mov
and
lahf
rcrb
mov
jge
inc
cmpl
and
out
jae
pop
lret
daa
mov
adc
xchg
xchg
mov
inc
rcrb
and
cmp
bound
add
clc
pushf
add
push
ds
jmp
in
lods
ret
xor
add
cld
icebp
or
sub
stos
cmp
adc
loope
imul
mov
adc
dec
xor
or
mov
mov
dec
outsb
and
je
orl
int3
add
add
sub
ficoms
sarl
in
xor
sub
inc
dec
and
in
cld
mov
fwait
rcrb
pop
call
push
dec
or
bound
jnp
ret
push
fcomps
inc
fst
sub
xor
mov
xor
repnz
daa
imul
hlt
mov
fadds
xchg
lea
outsl
pop
jo
aam
lret
inc
call
mov
daa
jl
sub
mov
mov
add
test
test
divb
pop
cmp
mov
ja
mov
dec
gs
push
negb
ja
sarb
xchg
push
test
xlat
push
les
rcr
ss
mov
js
lret
xor
shr
dec
push
pop
xchg
push
mov
dec
pop
sub
out
and
adc
jnp
push
or
fnsave
in
adc
loopne
ret
jmp
sbb
mov
jmp
xchg
adc
imul
cwtl
xchg
jle
out
ret
daa
xchg
push
out
add
inc
ljmp
test
aad
adc
xlat
pop
test
bound
add
jl
mov
push
inc
jp
mov
imul
cmp
and
dec
stc
inc
je
addr16
jo
xlat
das
loope
cmpb
cmp
or
pop
cld
adc
lahf
mov
or
rcr
cs
je
fcoml
fidivl
mov
int
popa
test
cmpsb
sti
add
enter
in
add
lea
andb
insb
cli
pop
inc
jp
arpl
incl
push
dec
sub
scas
inc
inc
jle
add
mov
mov
hlt
lock
dec
out
popf
pop
insb
pop
imul
dec
scas
add
test
loopne
fld
pop
push
push
pop
pop
sbb
cmp
push
dec
cmp
stc
cld
xor
xor
mov
jg
add
popf
mov
mov
and
push
adc
movsl
pop
mov
mov
repnz
push
inc
pop
outsb
fists
int3
rcr
mov
fnstcw
cmp
lds
js
data16
xchg
sbb
out
add
mov
js
mov
and
sbb
dec
mov
shlb
test
lock
stc
xchg
ljmp
mov
mov
xchg
jb
adcl
cmc
lahf
shrb
mov
add
cmp
cmp
mov
mov
in
pop
push
push
mov
inc
test
jb,pn
fisubl
es
mov
sbb
mov
iret
aad
sti
das
sub
ds
shrb
ss
add
inc
fistpl
data16
mul
fstpt
insb
xchg
xchg
push
dec
cld
jno
xchg
nop
andl
div
xchg
push
inc
sbb
fwait
dec
in
xchg
xchg
daa
repz
test
jle
push
stos
test
xchg
insb
les
test
loop
push
mov
pop
ljmp
subb
sbb
inc
and
sub
dec
push
xchg
mov
das
je
lret
into
jb
sub
cmpsb
mov
pop
lret
pop
shrl
clc
pop
inc
and
imul
sbb
mov
ffree
sarl
xchg
and
push
xchg
jb
inc
pop
je
dec
test
sahf
push
add
add
lock
mov
bound
stos
xorb
cmp
sub
nop
xchg
sub
mov
andb
gs
xchg
sub
add
mov
jne
jle
imul
xchg
mov
push
inc
dec
or
pop
nop
shl
pop
sub
shlb
out
or
call
and
xchg
mov
inc
inc
xchg
mov
adc
data16
cmpsb
imul
sti
in
pop
insb
movsb
jp
hlt
mov
out
in
push
pop
in
push
lods
fucomp
mov
lea
mov
imul
mov
push
inc
clc
ret
xor
jp
repz
orl
mov
xor
jle
xor
sub
cmp
add
pop
push
cmp
repnz
or
inc
inc
sbbb
std
or
test
fs
das
and
add
mov
cmp
aas
lret
mov
pop
xchg
mov
adc
push
adc
jle
orb
cmpl
mov
lret
dec
fistl
sub
cs
cmc
sub
xor
adc
inc
pop
enter
lods
int3
lea
mov
push
push
popa
inc
popa
dec
dec
push
arpl
and
cmp
sti
jge
xor
or
dec
aam
mov
mov
notb
xor
push
add
movl
mov
inc
push
stc
pop
cmpsb
mov
inc
idivl
pop
daa
orb
pop
and
pusha
inc
loop
in
pop
inc
jo
arpl
push
out
jge
test
popa
inc
out
fisttpll
ret
stos
pop
fwait
adc
mov
mov
pop
cmp
cmp
aam
mov
sub
not
push
loop
dec
dec
jle
movsl
js
and
push
enter
add
lds
fildl
push
mov
imul
pop
dec
push
data16
mul
int
and
lret
fs
mov
sbb
sub
mov
aam
sbb
xchg
push
ja
sub
sub
xchg
cmpb
jl
movsl
cs
repz
fdivrs
lods
rorb
cmp
cli
loop
push
sbb
fidivrs
xchg
stos
pusha
lock
out
mov
cld
jl
addb
in
or
xor
sub
outsl
push
xchg
ret
sub
testl
inc
sub
mov
int3
cmp
incl
dec
sbb
stos
nop
add
inc
jmp
sbb
fsubp
stc
repnz
push
sub
or
scas
xchg
lcall
jmp
push
push
hlt
adc
mov
int
cmp
mov
lahf
jmp
hlt
and
pop
mov
arpl
xor
or
dec
int
test
test
xchg
shrb
mov
rcll
out
adc
popa
das
bound
sub
insb
mov
shrl
cmp
mov
sub
adc
add
xchg
inc
lea
shll
adc
sbb
mov
mov
or
cmp
call
mov
pop
mov
pop
enter
push
mov
mov
sbb
lcall
push
scas
shll
jp
in
repz
scas
icebp
jne
mov
sub
cmp
int
movsb
aas
inc
out
sub
shrl
scas
add
arpl
clc
leave
jle
sub
xor
lods
push
subl
mov
imul
mov
out
pop
xchg
xchg
repnz
add
dec
mov
in
xchg
fbstp
push
and
jb
adc
fcmovu
movsb
dec
es
inc
or
loope
jl
aam
xlat
gs
push
push
scas
xchg
andb
add
jle
and
push
cmpb
mov
loopne
cli
popa
cltd
mov
xchg
inc
or
cmp
mov
jp
or
cltd
dec
mov
mov
jg
subl
inc
jg
int
dec
mov
jmp
push
sti
cmpsl
cmp
in
inc
movsb
fcmovb
ljmp
jp
das
and
xchg
into
add
sub
and
xchg
mov
push
js
imul
cmp
test
imul
cmpsb
sub
xchg
or
pushf
fcmovnu
xchg
inc
ret
pop
mov
repnz
ljmp
shrl
or
loopne
fisubl
fxch
cmp
sar
mov
rorl
fdivr
jecxz
jle
mov
aas
aad
mov
inc
fwait
xchg
iret
or
xchg
inc
movsb
arpl
iret
jne
pop
jle
clc
dec
inc
pop
and
push
test
pop
jne
cmpsl
out
mov
sub
mov
pushf
mov
in
xchg
sbb
push
mov
jno
sbb
sahf
mov
outsb
testb
mov
ret
sbb
jmp
sbb
bound
sbb
shr
inc
es
stos
or
jno
adcb
mov
pop
xor
jbe
sub
xchg
or
jnp
dec
adc
mov
jmp
dec
in
leave
movsb
dec
in
jne
xchg
push
xchg
test
sbb
inc
fnop
jns
push
fldcw
fdivs
cmpsb
imul
lds
dec
shll
adc
jae
mov
sub
add
out
je
gs
hlt
mov
jbe
testl
sub
lahf
orb
xor
jne
fsub
lret
stc
cld
adc
push
add
in
cmp
out
mov
jl
insb
mov
je
adc
lret
in
mov
inc
jns
insb
mov
push
jb
mov
mov
lea
xor
jmp
mov
sbbb
mov
in
jbe
jnp
push
ljmp
lock
sbb
loop
sbb
adc
popa
inc
sub
aas
jae
push
ret
cli
adc
test
mov
xchg
or
cmpsl
rorb
sbb
dec
int3
mov
push
mov
sub
stc
jns
hlt
test
mov
mov
ljmp
aas
dec
add
into
or
jg
stos
data16
es
xchg
mov
dec
mov
cld
sub
push
pushf
push
mov
push
gs
imul
inc
pop
mov
add
mov
movsb
jbe
mov
enter
gs
pop
xlat
jns
outsl
ss
add
jo
pop
jo
mov
out
les
cmp
add
jmp
ret
push
pusha
push
and
imul
scas
dec
xchg
mov
push
mov
cmpsl
inc
hlt
cmovg
lahf
mov
mov
fsubp
push
inc
add
push
inc
dec
xor
orl
mov
call
dec
rorl
fwait
ret
fnstenv
repnz
hlt
pop
ds
frstpm(287
xchg
jns
jg
and
sbb
popa
sub
dec
inc
jnp
fldz
mov
lock
ds
pushf
std
mov
into
xchg
out
pusha
and
dec
jge
xchg
lds
and
xor
sub
lods
lcall
jg
lods
arpl
sbb
push
ret
inc
inc
pop
push
scas
mov
xor
sub
insl
clc
lcall
gs
cmp
cld
or
out
xor
pop
push
xorb
rcr
add
ss
adc
sarb
shl
adc
push
into
dec
lea
sahf
add
repnz
cmp
inc
mov
add
or
les
xorb
lret
je
and
aad
fnstsw
and
jle
jmp
loop
les
lea
repnz
xor
sti
mov
adc
dec
stos
jo
xlat
add
xor
xchg
pop
mov
pushf
repz
movaps
push
fmul
jb
movsb
rep
xchg
std
fwait
and
mov
out
fistps
sub
sbb
enter
lea
sub
push
insb
jae
out
mov
inc
loopne
enter
pushf
and
in
jno
idivl
inc
stos
mov
push
dec
jmp
mov
aaa
iret
add
pop
fisubs
aad
int3
jecxz
push
lea
push
test
cmc
mov
or
movsl
xchg
add
xor
mov
test
out
xor
sbb
orps
pop
icebp
lods
cwtl
mov
cltd
dec
lcall
adc
sub
loope
jb
cmc
pop
jge
sahf
jge
andl
std
xchg
iret
xchg
ljmp
jg
inc
aad
jg
hlt
pop
call
jno
out
dec
testb
adc
xchg
xor
jecxz
adc
shlb
pop
adcl
popa
add
sub
pop
andl
dec
push
addr16
sahf
pop
dec
test
sahf
les
pop
xor
sbb
call
popf
subl
cmp
scas
adc
mov
je
add
add
pop
pop
add
fst
mov
inc
dec
cmp
mov
out
dec
mov
inc
inc
add
scas
sbb
xor
ja
lret
dec
ficomps
loopne
or
imul
in
je
shrb
cmpb
inc
addl
in
jbe
test
push
out
stos
push
inc
insb
xchg
lods
cltd
retw
out
in
nop
mov
mov
addr16
iret
repnz
pop
fsubl
into
loopne
popf
out
lcall
inc
add
fsub
adc
gs
sub
add
repnz
dec
adc
cwtl
mov
mov
jnp
or
sbb
mov
hlt
and
mov
push
mov
mov
xor
ljmp
lcall
push
sti
inc
into
pop
xlat
dec
pop
adc
jno
cmp
jb
gs
xor
sub
or
ror
push
push
sub
fistl
adc
stc
cmpsb
loope
mulb
loopne
cmc
mov
pop
inc
xchg
add
add
push
in
loop
fldln2
xchg
push
mulb
adc
mov
xor
into
mov
into
leave
mov
cmpsb
push
and
lcall
test
pop
stos
mov
xlat
cmc
test
or
mov
popa
ficomps
inc
aam
jns
jb
sub
cmp
call
scas
test
loope
dec
xor
pop
sub
jmp
imul
jle
mov
cwtl
rolb
pop
loop
or
icebp
cltd
and
fisubrs
inc
lock
ret
shrb
mov
icebp
pop
and
in
and
jl
or
pop
insb
push
push
and
es
cld
adc
je
xor
das
jae
xchg
fidivrs
mov
out
pop
gs
repnz
aad
cmp
hlt
ret
jne
pop
jno
push
call
sub
mov
roll
jns
sub
jns
hlt
jge
cmpsl
ret
jmp
outsb
xchg
adc
sub
inc
cmpb
fcmove
popf
jae
mov
jns
rcll
inc
jne
nop
in
in
inc
or
and
fstps
int3
push
push
ret
shll
mov
xchg
or
fcmovb
jae
inc
pop
lea
inc
sbb
fldcw
divl
cmc
sub
fwait
sub
movsb
leave
push
xchg
dec
pusha
lcall
jg
mov
sbb
cli
mov
subl
int3
popa
mov
outsb
negl
dec
pop
js
mov
subb
and
mov
mov
lret
push
and
aaa
gs
mov
ljmp
ja
pop
pop
lods
sbb
rclb
and
mov
nop
mov
in
ret
lret
inc
lea
mov
mov
mov
mov
xor
into
and
cmpsb
mov
mov
xchg
adc
sbb
std
bound
sub
popf
xchg
mov
negb
out
mov
imul
sti
sarl
ret
sahf
test
dec
push
mov
loope
adc
lods
add
insb
fcmovnb
xchg
push
aaa
mov
orb
lods
mov
dec
dec
xor
inc
cmp
into
pop
sti
or
fdecstp
pop
lock
mov
std
push
ds
fwait
sbb
jl
xchg
test
stos
sahf
rcl
mov
push
push
dec
adc
xchg
xor
loop
in
int
fs
mov
stos
cmp
sub
loopne
iret
sub
lods
orl
push
cld
xchg
pop
mov
cmp
lret
paddw
ds
incl
repnz
cmp
sub
insl
jno
push
xchg
outsb
lahf
sti
mov
iret
es
lcall
outsb
dec
inc
loopne
ss
rcll
cltd
pop
mov
lds
iret
xchg
mov
dec
xor
pushf
scas
jmp
inc
lock
mov
and
sbb
in
mov
aas
in
sub
add
sbb
cmpsl
enter
add
add
mov
add
int3
xchg
je
jo
add
cltd
es
lret
pusha
in
xchg
ret
mov
jmp
mulb
jns
mov
pop
and
sbbb
rclb
pop
mov
cltd
mov
adc
cltd
pop
inc
dec
call
cmp
cmp
jg
inc
jmp
jo
dec
xchg
sbb
cmp
stos
mov
mov
mov
testl
aas
les
adc
xor
int3
cmc
in
gs
dec
xor
in
push
subl
pop
lret
push
sbb
std
leave
ja
shl
je
gs
rclb
pop
outsb
cwtl
mov
outsb
movsb
dec
xchg
mov
xor
sub
jmp
sub
sar
push
cltd
loopne
push
sbb
add
jl
popf
fistl
push
push
jbe
das
mov
jne
leave
xchg
jo
cwtl
add
pop
jecxz
mov
test
les
xchg
dec
outsb
les
lds
cmp
in
fstps
fdivrl
pop
mov
aam
cmpsb
out
insb
push
addr16
pop
and
int
push
xchg
pushf
out
sub
lcall
daa
movsl
aaa
jnp
pop
movsb
cmpsl
push
test
orb
gs
xchg
and
cmp
scas
push
ret
test
lods
fisubs
test
rcrl
icebp
mov
cmpsl
mov
movsb
xor
test
jnp
dec
stc
loop
push
xchg
pop
sahf
inc
xor
lock
and
mov
pop
in
mov
mov
xchg
cmp
or
mov
cmpsb
stc
xchg
jl
sarl
mov
or
push
lret
in
arpl
out
sbb
jg
jle
cmc
test
aam
sarl
and
push
fsubl
push
jnp
or
and
pop
movsb
adc
cmc
push
xchg
fimull
ret
and
imul
cld
push
addr16
rcrb
pop
xor
mov
xchg
xchg
add
pop
sti
nop
icebp
out
xchg
loope
xlat
addr16
nop
jne
adc
inc
fsubs
add
jecxz
hlt
or
nop
mul
mov
mov
nop
data16
push
cli
addr16
cmc
mov
leave
mov
xlat
cs
les
mov
adc
push
loope
icebp
cmp
aas
mov
mov
sub
xchg
call
cmp
add
enter
jbe
push
adc
jbe
jl
out
xchg
pop
mov
std
rolb
sbb
adc
movsl
loope
stos
sub
pushf
pop
mov
ret
fnsave
sbb
xchg
repz
pop
sub
repz
movsb
cmp
shrb
cli
jo
lods
inc
xor
mov
cltd
out
jmp
dec
cmp
sbb
rcll
cmp
test
ficoml
movsl
cmc
jo
ret
dec
paddsb
push
xchg
push
mov
xchg
cwtl
in
mov
cmp
mov
add
mov
cltd
xchg
push
mov
in
cmp
out
add
lcall
stos
jl
mov
push
adc
imul
ss
pushf
sub
repnz
or
sub
pop
dec
cmp
je
cmp
les
out
push
lret
in
and
sub
push
cs
xor
divb
jle
push
push
jnp
pop
lahf
into
or
xchg
push
icebp
mov
pop
mov
jl
cli
mov
int3
xchg
mov
test
sbb
push
push
jns
test
or
jne
adc
dec
inc
das
adc
dec
leave
cmc
xor
or
xchg
mov
js
addr16
jo
imulw
cmp
ja
jle
loop
pop
fcmovnbe
fisubrl
lret
jecxz
pop
push
xchg
ret
jg
stc
lods
clc
inc
xor
jnp
mov
pushf
mov
or
xchg
sti
loope
pop
leave
xchg
cmp
scas
lds
lods
sub
dec
dec
mov
pusha
sbb
or
sbb
rcrb
cmp
xchg
scas
repz
xor
jae
sub
xchg
rcll
js
push
pop
mov
pop
mov
sbb
popf
mov
loope
outsl
sbb
shl
adc
mov
leave
add
cmp
sub
push
ljmp
andl
dec
lods
lods
mov
push
icebp
fldt
mov
cltd
aam
jmp
test
mov
lods
mov
inc
or
add
cmpsb
movsb
mov
lds
pop
xchg
push
mov
pop
jnp
dec
lahf
mov
or
sbb
nop
adc
jp
stos
scas
popf
xchg
mov
sub
sub
data16
dec
mov
pop
ret
frstor
rol
orl
call
arpl
add
cld
dec
push
mov
add
push
mov
xor
call
push
dec
sub
outsl
enter
or
mov
push
fistpll
or
jnp
es
into
push
hlt
pop
xorl
mov
xor
lret
adc
lcall
pop
push
dec
push
jp
push
sbb
pop
cmp
jle
mov
sahf
cli
scas
ljmp
out
stos
pop
push
dec
push
jp
push
sbb
pop
cmp
jle
mov
nop
cli
mov
mov
mov
cmovp
jp
imul
dec
or
sub
lret
dec
ljmp
outsb
sub
movsl
icebp
mov
shrb
push
insl
andb
push
rolb
int3
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
or
lret
push
mov
push
lds
nop
push
jbe
pop
lock
test
nop
cmp
ljmp
add
xor
into
push
pop
orb
mov
repz
out
mov
adc
enter
mov
pop
mov
pop
ret
sbb
ljmp
mov
arpl
xor
loope
icebp
out
dec
jnp
pop
rcl
in
addl
inc
stc
es
and
inc
or
mov
inc
ljmp
add
or
jge
xchg
lock
push
decb
jbe
out
das
mov
jg
sbb
sbb
lret
add
xor
cmp
movsl
or
orb
shrb
cmp
mov
fwait
add
cmpb
repz
jae
nop
mov
or
in
in
sbb
nop
call
pop
cmp
outsb
loope
lock
add
cmc
mov
in
pusha
ficompl
add
mov
cmp
inc
loopne
mov
xor
push
fldt
gs
out
mull
pop
xchg
xor
aam
divl
xchg
fdivr
daa
mov
jno
dec
out
inc
idiv
adc
sbb
pop
cmc
push
aad
icebp
jg
stos
arpl
inc
adc
shrb
loopne
lock
subb
cmp
ljmp
add
xor
loopne
lock
subb
cmp
ljmp
dec
xchg
jno
ljmp
and
pop
mov
pop
jp
addr16
shl
cwtl
clc
stos
add
cmp
mov
icebp
popf
xchg
lret
adc
mov
xchg
jne
cs
mov
dec
fimull
add
sub
lret
call
hlt
test
lds
mov
aas
xor
xor
in
inc
stos
mov
mov
je
inc
cmc
sahf
sbb
les
lcall
addb
mov
fwait
in
out
movsb
mov
jo
je
mov
adc
stos
lret
push
out
leave
ret
jo
pop
out
dec
dec
add
fucom
daa
out
hlt
int
dec
mov
inc
sub
fstpt
pusha
or
xor
cmp
pop
jno
rol
jg
popa
xor
or
and
mov
aad
lock
ss
mov
cmpsl
sub
popf
jne
in
dec
repz
nop
mov
mov
pop
jmp
stc
sbb
mov
xor
jecxz
add
add
outsb
mov
loope
lds
jmp
xchg
leave
into
shl
push
mov
lcall
jno
mov
sub
push
cs
cmp
scas
dec
xor
loop
sahf
fldcw
push
push
cmpsl
mov
incl
out
xorl
in
scas
jo
movsl
jae
fcoms
and
xor
testb
in
xchg
inc
fiaddl
jno
jbe
leave
or
or
int3
adc
loope
fcmovbe
int
mov
shll
ljmp
add
and
out
lock
in
enter
push
mov
mov
movsb
arpl
jno
addr16
push
cmp
out
adc
xchg
pop
sub
pcmpeqd
cmpsl
cmp
sbbb
cmp
pop
bound
mov
mov
jle
je
mov
sub
jnp
cmpsl
cld
insl
fldl
mov
icebp
push
leave
or
pop
xchg
in
sahf
loope
int
inc
pusha
cmpsb
jecxz
push
xchg
jp
xchg
mov
ljmp
jbe
inc
push
ficoml
arpl
mov
rcr
insl
bound
dec
inc
hlt
out
jp
cmpsb
ss
and
xor
dec
adc
xor
je
pushf
out
add
cmp
and
bound
popa
daa
sub
mov
cmp
imul
mov
hlt
mov
adc
xchg
mov
loop
push
jbe
lahf
ss
sbb
dec
pop
mov
dec
lods
loopne
cld
vsqrtpd
sbb
or
ret
in
cs
jg
jl
lds
push
sahf
push
sub
cmp
lret
or
jnp
dec
mov
enter
ret
sub
cmp
imul
pusha
int
pop
sub
sub
and
test
rcrl
and
outsl
aad
xor
test
pushf
cli
mov
int
je
lods
mov
mov
scas
push
hlt
cmpsb
sbb
xorb
mov
mov
jmp
lahf
shll
jae
rclb
icebp
or
std
add
popf
push
cmp
inc
repz
push
out
mov
test
pusha
std
mov
loopne
or
or
sbb
mov
add
sahf
aaa
push
test
ret
pusha
dec
mov
xchg
mov
or
xor
cmp
adc
cmpsb
jb
lods
leave
inc
mov
shll
mov
sbb
and
cmp
out
xchg
cltd
cmp
sbb
invlpg
adc
imul
xchg
xor
xchg
xchg
pop
push
or
out
mov
jmp
cli
mov
lock
mov
xchg
jae
adcb
repz
call
pop
push
rorb
push
push
test
aas
lcall
mov
mov
jnp
sub
lock
repnz
sbb
mov
test
or
xchg
pop
imul
sti
push
and
add
ds
fdivrl
mov
nop
outsb
jecxz
std
fs
out
adcl
idiv
hlt
mov
inc
and
dec
incb
shrl
cmp
mov
ret
cs
repz
cmp
andb
xor
sbb
movsb
push
mov
xchg
jge
js
mov
dec
dec
and
pop
push
movsl
imul
mov
xor
mov
adc
sub
sbb
mov
jae
aad
es
add
stos
insl
repnz
das
xor
ds
push
pop
mul
ficoms
pusha
data16
or
dec
fidivrs
gs
inc
call
daa
test
lea
mov
daa
pushf
push
popa
aas
pop
in
add
dec
ret
jae
lret
jne
xorb
cmp
mov
mov
jnp
test
mov
jg
mov
xor
int
mov
jo
pop
enter
or
cli
dec
imul
aas
mov
adc
cmpsb
inc
sub
push
xlat
or
arpl
sub
jno
movsl
mov
and
adc
hlt
mov
sar
xor
flds
nop
mov
mov
imul
mov
test
push
jb
popa
push
mov
jecxz
test
into
dec
adc
push
jmp
pop
lahf
sbb
mov
ret
sub
cmp
cmpsl
xor
or
subb
and
insl
scas
mov
leave
or
or
rorl
mov
pop
xor
xor
imul
xchg
outsb
div
ficoml
push
mov
and
mov
sbb
xchg
out
jp
scas
mov
lods
iret
in
xor
out
addr16
divl
add
into
pop
mov
fnstenv
mov
dec
cmp
dec
cmp
ret
pop
cmp
or
call
and
icebp
mov
jge
sarb
push
add
adc
mov
aad
xor
lds
inc
out
ds
enter
pop
sub
ret
add
pushf
ljmp
jg
popf
test
loope
stos
mov
loopne
out
mov
outsl
sub
mov
ljmp
pop
dec
scas
les
jecxz
jge
out
cwtl
cmpsl
addr16
push
xchg
data16
sub
xchg
push
lret
shlb
imul
fcmovnu
mov
ss
xchg
lcall
inc
sub
pop
hlt
inc
std
adc
test
and
and
or
and
mov
pop
mov
push
adc
pop
cmp
xor
cmpsl
push
loopne
xchg
cmp
xorb
fwait
push
jbe
mov
in
pop
mov
adc
into
sub
out
mov
adc
sub
es
xor
xchg
mov
insb
xor
or
sub
jae
xlat
jge
jbe
enter
js
je
mov
jb
ficomps
dec
cmp
ror
push
fwait
pop
xor
add
cmpsl
sti
cmpsl
cmpb
popf
pop
sub
mov
aaa
int3
lret
pop
push
fcmovnbe
mov
inc
push
cmp
orb
xchg
cltd
mov
ss
mov
adc
inc
cli
add
jne
lret
cmp
loopne
xchg
add
repz
sub
insl
out
xor
fiadds
ret
pop
push
aad
insl
add
fsub
mov
jle
jle
mov
sub
pop
shlb
scas
mov
clc
pop
dec
dec
pop
push
divl
cmp
ja
paddsb
ja
lret
div
call
enter
arpl
aad
push
js
push
mov
or
addr16
cltd
into
adc
jge
cmpsl
je
inc
subl
movb
sbb
jmp
loopne
lcall
xchg
out
push
sahf
mov
ja
jl
jo
dec
ret
shll
lahf
addr16
xor
int3
lock
icebp
lea
leave
push
aaa
stos
pop
jp
test
dec
xchg
imul
xor
add
or
ret
and
push
test
push
jl
in
mov
push
mov
in
lea
push
push
add
push
fadds
sbb
shlb
movsb
push
sub
movsb
stos
push
fnstcw
call
cwtl
imul
ljmp
es
ret
xchg
sbb
outsb
sub
jge
mov
add
or
andl
adc
icebp
mov
add
int3
cmpsl
movl
add
push
insb
mov
shrb
fdivrs
outsb
jbe
push
and
sbb
pop
jno
inc
and
jnp
inc
in
and
in
push
outsl
push
cmp
adc
mov
aaa
mull
xchg
mov
enter
pop
jo
inc
jns
push
xchg
fwait
push
jp
cli
repnz
popw
xor
lret
fndisi(8087
arpl
fcoml
mov
in
sarl
inc
inc
push
inc
push
aaa
cmovo
mov
in
in
cmc
sbb
aad
push
icebp
and
les
pusha
jl
xchg
add
add
jns
and
and
lods
push
add
jecxz
dec
add
outsb
pusha
jo
xchg
sub
jbe
or
out
inc
loop
mov
dec
cltd
mov
dec
xor
dec
std
roll
mov
andl
cmpsb
add
mov
aas
add
jl
mov
dec
cmc
mov
out
bound
pushf
jmp
int
mov
movsl
cmp
jl
inc
das
lret
in
sub
jne
push
push
jnp
insl
cltd
mov
sti
jp
pop
push
call
out
xchg
pop
xor
xor
sahf
test
lret
mov
test
lahf
jo
or
cmp
roll
stc
mov
loopne
testb
or
fildl
dec
pushf
sub
stc
push
mov
mov
loopne
jge
cmp
sbb
adc
push
mov
xchg
std
hlt
and
hlt
lcall
rcll
pop
mov
leave
sbb
xchg
popf
int
clc
ficoms
sbb
jae
push
sar
mov
mov
inc
xchg
fmulp
movsl
cmpsl
mov
or
lcall
xchg
or
dec
fimuls
mov
popf
enter
outsl
jns
pusha
call
cmp
shll
fld
sub
jbe
xchg
aas
or
mov
mov
fcoms
xchg
repz
push
adc
repz
aam
mov
mov
and
adc
xchg
jle
shrb
call
je
les
bound
pop
xchg
inc
push
fisubrs
andl
adc
orl
mov
push
das
cmp
mov
dec
cmc
scas
fdivr
or
mul
fstcw
out
movsl
pop
jne
stos
mov
clc
ret
xor
inc
ss
add
mov
repz
and
sbb
xchg
outsb
rclb
jnp
mov
cmpsl
inc
data16
push
push
inc
mov
dec
pop
inc
fistps
loopne
out
pushl
dec
jmp
aas
push
add
cli
mov
outsb
call
sub
ljmp
jg
stc
repnz
fimull
jmp
pop
push
sub
inc
cs
pop
lds
sti
dec
cmc
cmp
lods
jb
jnp,pt
out
aad
sbb
jp
xor
dec
sbb
cmpl
pop
out
mov
jnp
jo
out
push
mov
sbb
cmp
stc
scas
cli
outsb
inc
sub
lcall
rorl
aam
lcall
mov
arpl
shrb
arpl
mov
loop
jnp
scas
pop
or
jp
push
scas
or
mov
data16
sbb
push
dec
lret
inc
loop
lret
mov
mov
shl
hlt
mov
cmp
aad
sbb
daa
mov
cltd
nop
pop
xor
xchg
and
and
dec
xchg
fldenv
adc
xlat
push
sbb
xchg
push
mov
and
pop
aas
rcl
mov
xchg
scas
icebp
pop
ret
xor
idiv
cmpsl
daa
ficoml
hlt
rcrb
xchg
push
xor
xchg
mov
ret
repz
scas
inc
inc
mov
cmc
cli
dec
cwtl
testl
adc
mov
mov
mov
enter
adc
add
pop
shll
push
fwait
mov
jae
sub
dec
dec
push
xorb
dec
mov
mov
pop
insb
cmpsb
pop
jae
cmp
shl
cmpl
mov
outsl
clc
jmp
lods
adc
mov
or
repnz
cmp
push
push
jmp
fdivl
es
sti
sahf
jge
fmul
inc
dec
push
jmp
xchg
lret
push
xor
cmpb
and
out
cmp
stos
pushf
ficoml
not
insl
mov
imul
or
jo
xchg
or
sub
test
push
sub
test
sbb
inc
mov
and
mov
pop
icebp
push
jo
inc
dec
adc
mov
push
pop
push
pop
lds
push
xchg
scas
jmp
int3
push
mov
clc
inc
jnp
sbb
enter
test
fiaddl
js
sahf
sarb
insb
lret
jecxz
cltd
sub
and
push
nop
add
and
pop
and
add
gs
or
data16
stos
lds
sbb
sbb
movsl
xchg
popa
mov
mov
dec
mov
stos
lret
push
repz
jbe
pop
stc
mov
stos
int
push
pop
inc
mov
frstor
lahf
dec
push
sbb
stos
pop
pop
sbb
mov
rcrb
pop
lret
xchg
cmpsl
adc
movb
mov
test
icebp
je
dec
daa
mov
cs
in
mov
adcl
xlat
stc
cli
mov
adc
stos
xorb
push
dec
jne
aas
adc
jnp
mov
dec
rol
push
or
dec
aad
push
lahf
fdivs
lods
addr16
sbb
imul
push
pop
imul
add
pop
out
stc
pop
inc
xchg
jne
test
or
icebp
daa
push
and
mov
mov
inc
xor
out
lahf
test
cmp
inc
ss
and
mov
bound
mov
lods
and
loope
mov
leave
xchg
movsl
mov
fisubl
pop
aam
in
or
clc
lahf
fstl
out
sti
and
fdivrs
iret
sub
std
jg
add
and
dec
pusha
xchg
lods
loop
fstpt
imul
nop
scas
jb
pop
adc
popf
adc
jnp
fdivp
shlb
xor
cmp
ret
dec
adc
dec
leave
inc
rorl
add
pop
mov
xchg
icebp
rorb
inc
xchg
push
mov
ljmp
insl
inc
mov
sub
mov
adc
out
outsb
bound
dec
pop
push
es
test
ja
pushf
or
jmp
jle
in
xor
inc
push
mov
ss
pop
push
adc
mov
cmc
lock
popa
inc
push
inc
notb
push
leave
mov
and
fwait
mov
jp
aam
mov
ljmp
sub
push
add
int
outsl
jbe
inc
adc
shl
lods
lahf
inc
movsl
dec
pop
push
iret
movsb
or
mov
arpl
pop
jecxz
xchg
mov
fbld
aaa
xor
sub
dec
popa
sbb
insl
outsb
pop
int
cs
ficoml
enter
lea
push
outsl
mov
push
or
adc
jo
sbb
shl
mov
pop
aad
jge
cmpsl
push
jge
xor
scas
xchg
mov
xor
lcall
mov
xor
mov
mov
jecxz
cmp
ret
int
xchg
sbb
lods
rorl
mov
mov
icebp
or
mov
mov
rcrl
mov
or
ja
and
push
lds
xchg
mov
push
cmp
in
push
int
push
fimuls
and
out
lods
jnp
and
mov
push
adc
fiadds
les
pop
sbb
pop
loopne
pop
cmpsl
mov
cli
dec
jg
jle
cmp
shr
std
xor
mov
or
pop
movb
pusha
popf
fwait
int3
icebp
cmp
arpl
xor
ficomps
adc
mov
push
fldt
divb
addl
or
bound
mov
pushw
in
loop
test
dec
les
cmp
xchg
push
idivl
and
in
cmp
outsl
push
aam
pop
and
aas
sti
ljmp
sarl
loop
dec
add
dec
sbb
rorl
clc
mov
data16
data16
sbbb
sbb
loop
cmpsl
push
insb
int3
daa
in
mov
xor
adc
ficomps
addr16
cltd
inc
test
jno
rolb
ffreep
ljmp
push
push
call
loopne
push
sbb
adc
sbb
pop
or
and
sbb
fidivrl
jb
sub
fwait
inc
jb
push
popa
push
loope
or
data16
sbbb
pop
cmc
jne
sub
cs
push
dec
scas
sub
cmpsl
sti
cmpsb
xchg
ss
inc
adc
xorb
shll
adc
sbbb
pop
cmpsl
fdivl
xlat
fdiv
jle
cld
lods
adc
fwait
stos
int
jmp
inc
in
inc
jo
lcall
pushf
lea
das
or
loop
cltd
in
sarb
pop
push
pop
cwtl
rep
or
cmp
pop
movsl
lock
stos
rcrb
lret
push
fdivl
cmpl
je
inc
cltd
cmp
and
mov
jp
sarl
lahf
js
loopne
sub
jne
cld
ret
repnz
push
mov
sub
jecxz
or
push
inc
fmul
mov
pop
lret
dec
sbb
arpl
sub
lds
jo
sti
push
mov
mov
push
push
push
mov
outsl
dec
decl
mov
loop
test
std
pop
imul
or
inc
ljmp
mov
dec
push
jae
jge
cmp
les
xchg
mov
fistpll
xchg
adc
inc
mov
push
cmp
mov
inc
stos
adc
mov
fisubl
cmp
inc
dec
iret
popa
stc
push
and
mov
fisubrl
mov
fcomps
bound
pop
mov
cs
sbbl
cmpsl
fs
jl
jmp
lcall
jbe
je
call
jle
bound
ja
xchg
mov
hlt
mov
add
add
xorb
in
addb
lahf
sbb
fnstsw
popf
or
dec
jno
jne
and
roll
sub
and
ja
mov
cmp
movsb
addr16
cmp
xor
pop
mov
sub
ds
and
cwtl
adc
int
sub
in
cmpsb
xlat
clc
shll
pop
or
test
jg
and
mov
insb
rolb
jnp
cmp
mov
mov
dec
pop
outsb
fs
call
xorl
test
pop
and
cs
cs
popa
cld
jbe
orb
dec
xor
nop
add
lea
lods
movsl
inc
popf
adc
jo
lcall
in
cmp
repz
lds
jp
cmp
mov
adc
pop
lret
loopne
je
mov
hlt
add
sub
andb
mov
lcall
pop
mov
mov
popa
add
and
inc
imul
cld
das
out
mov
mov
mov
stos
insb
cmpb
xchg
jo
fidivrs
sbb
out
jb
pop
stos
lret
push
and
repnz
jb
in
leave
jg
jb
icebp
mov
ss
mov
imul
pop
pop
fwait
ror
xchg
dec
sbb
push
jle
xchg
loop
sub
dec
jl
adc
fisttps
shll
inc
sbb
or
jo
jge
clc
rorb
xchg
movsb
cmova
cmp
inc
fsubrs
dec
xor
fidivl
xchg
fucom
jl
repz
jmp
in
adc
in
call
and
pop
mov
sbb
mov
jae
and
stos
fcmovu
repnz
popf
adc
or
xchg
aad
cld
scas
mov
sbb
pop
in
pop
test
mov
inc
scas
xor
subb
icebp
je
lret
mov
repz
mov
cltd
fldenv
cmpsb
in
int
or
dec
and
lcall
add
stos
int
xor
cmpsl
movsl
mov
and
xchg
sar
jo
fcmovnbe
adc
xor
push
sbb
sbb
dec
mov
dec
aam
cmc
xchg
shrl
in
vmwrite
lahf
push
cmp
sbb
xchg
push
fidivrl
in
sbbb
fisubs
mov
xchg
scas
lret
dec
lods
shrl
and
out
add
adc
vmulps
jmp
mov
and
mov
mov
pusha
push
mov
mov
cmpsl
push
push
lods
inc
fdivs
popf
repz
movsb
dec
movsl
or
xchg
outsl
xor
jmp
sarb
mov
push
pusha
clc
pop
idivb
les
jg
scas
int3
mov
out
sbb
push
jnp
in
daa
sqrtps
pop
test
test
mov
scas
pop
cmp
adc
shlb
and
lret
jg
pop
pop
scas
jge
bnd
inc
insb
add
andb
gs
or
dec
loop
ficoml
idivl
mov
jbe
jne
adc
pushf
mov
sarl
sbb
mov
out
xlat
imul
sub
idivb
pop
loop
mov
inc
sbb
vsqrtpd
or
push
push
je
add
lret
jnp
dec
cmpsl
xor
xor
inc
jae
pop
fwait
mov
fldl
stos
mov
push
std
adc
pushf
mov
mov
aas
cltd
jl
pop
push
adc
sub
lret
lea
pop
pop
rol
out
push
and
mov
lret
sub
sub
inc
cwtl
push
jge
ljmp
mov
xlat
pop
lahf
push
jle
mov
lea
cmp
or
mov
xchg
hlt
xor
js
loope
push
stc
rol
pop
mov
cmp
fiaddl
stos
adc
shrb
loopne
lock
subb
cmp
ljmp
add
xor
loopne
lock
subb
cmp
ljmp
add
xor
jmp
sub
sbb
jl
call
stos
add
shrb
dec
dec
lock
pop
cmc
dec
in
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
push
push
push
push
movl
movl
movb
call
andl
andl
push
mov
push
mov
movl
movb
movl
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
mov
movb
movb
call
mov
lea
push
movl
call
pop
pop
leave
ret
out
insl
outsl
jge
dec
dec
pop
test
imul
fxch
int
lods
scas
xor
insl
outsl
jge
dec
dec
pop
aas
sub
punpckhwd
loope
std
mov
fildll
popf
jg
outsl
fs
push
dec
inc
aas
xor
and
in
out
fidivrs
loop
leave
mov
and
adc
pop
cmp
cmp
jle
in
mov
leave
sahf
fidivs
jb
in
insl
loop
sub
ds
and
xchg
bnd
mov
adc
xchg
push
jecxz
jge
gs
icebp
outsb
push
push
jle
add
cmpsb
movsl
push
xchg
jp,pt
in
mov
and
or
sbb
lret
xor
jg
mov
sub
out
or
daa
push
pop
xchg
cld
cmp
call
pop
sub
in
daa
dec
pop
add
lcall
scas
lods
sbb
jo
xchg
lret
cmpsl
out
out
leave
dec
add
inc
and
test
fwait
and
insl
pop
push
dec
pop
aas
sub
in
out
in
aam
les
xchg
pushf
or
rdpmc
sub
cmp
pop
pop
popa
push
xchg
sbbb
leave
stos
mov
repnz
icebp
and
adc
ds
xor
dec
jae
jns
das
lods
cltd
sbbb
fstp
mov
or
jge
sub
jle
das
cmp
in
out
std
iret
fnstsw
lea
jge
dec
dec
pop
aas
sub
nop
in
out
std
iret
fnstsw
lea
outsb
ror
sbb
sar
mov
fadds
outsb
popa
jno
jne
mov
imul
cmp
xchg
ljmp
pop
dec
bound
pop
loop
scas
xchg
int3
imul
jo
pop
mov
pusha
int
jo
cmc
popf
insb
xor
imul
lods
fidivs
cmp
mov
add
add
mov
xor
stc
inc
lahf
xorl
jns
clc
je
insl
dec
inc
rorl
mov
sub
ret
daa
push
cs
in
sub
xor
xchg
in
shll
lods
cmp
inc
gs
fsubrs
push
or
insl
sbb
xchg
push
dec
mov
lods
js
mov
adc
in
fwait
adc
cmp
repnz
aad
lcall
loop
sub
std
pop
filds
loopne
movsl
adc
xor
xor
fmuls
dec
jmp
push
jmp
pop
loopne
leave
das
mov
pop
mov
push
xor
pop
in
imul
mov
dec
enter
sub
incl
mov
addb
das
pop
pop
out
mov
iret
xor
loop
and
inc
push
fcoml
cmp
push
mov
rclb
in
xor
add
push
lock
fbstp
add
add
cmp
pop
ret
push
jno
dec
lcall
scas
jae
lods
jbe
arpl
outsl
dec
ljmp
mov
xorb
cld
dec
clc
add
pushf
into
dec
dec
pop
imul
sbb
sub
adc
cld
lock
sub
pop
add
fsub
add
add
add
outsb
fimull
ljmp
dec
add
jo
sbbl
lcall
jno
fidivs
lret
pusha
add
lods
and
xchg
cli
ds
shrl
in
mov
mov
adcb
outsb
rcr
fstpt
out
in
pushf
add
cltd
xor
cmp
popa
pushf
xchg
pop
push
and
sbb
rol
lret
movsl
fnsave
pop
scas
jecxz
movb
cmc
scas
push
xchg
sbb
jecxz
sbb
sbb
mov
stos
mov
dec
push
jnp
add
or
xchg
lds
ja
xchg
sbb
andb
and
inc
std
sbb
xchg
pop
pop
push
pop
cmp
mov
jmp
xor
nop
loope
xor
popf
dec
clc
mov
mov
cmpl
fcmovnbe
aam
xchg
inc
loopne
testl
push
adc
rcll
lea
jecxz
loope
jbe
push
jb
scas
jno
movsb
push
mov
pop
xchg
lret
lea
lahf
fdiv
inc
cmp
pop
add
test
mov
mov
dec
mov
fstp
and
pop
insb
movsb
fldcw
push
inc
add
jmp
sti
aaa
je
rorb
and
ljmp
cmpsb
lock
jge
mov
pop
mov
lret
fldenv
aam
leave
cld
inc
mov
jo
ror
add
or
out
imul
sbb
sub
inc
imul
push
xchg
fcoms
sub
push
rcll
jnp
jmp
test
das
mov
out
cmp
ds
add
cmp
xor
jmp
in
and
cmp
sarb
je
dec
stos
sbb
and
mov
outsb
jnp
mov
cmp
pop
xchg
inc
or
xchg
imul
lahf
imul
and
sub
lret
push
xchg
sbb
lods
leave
push
incl
mov
and
push
js
arpl
push
out
cmp
pop
xchg
pop
imul
xchg
shrb
jle
cltd
add
cmp
in
mov
icebp
in
jns
shll
scas
cmpsl
xor
dec
inc
imul
in
imul
sub
or
fsubs
fs
dec
popl
in
push
mov
icebp
pop
test
test
add
ds
xor
xchg
jge
in
out
clc
adc
sbb
jg
push
lret
ret
mov
das
frstor
in
push
cld
leave
cli
ret
push
add
insl
loope
ss
fxch
lds
mov
jmp
dec
and
or
lock
xor
lock
shlb
xor
int
pop
inc
mov
mov
mov
mov
addl
bound
imull
enter
es
in
jno
mov
fwait
jae
or
clc
mov
out
int
movsl
mov
hlt
mov
mov
ljmp
sub
ss
xchg
pushf
add
aad
push
push
xchg
dec
mov
lahf
dec
jb
cmp
push
aam
push
adc
and
cmpsl
lret
ja
xlat
and
xor
lock
loopne
ljmp
mov
in
out
popf
sbb
int3
xchg
xor
xor
lods
jne
bound
and
xor
jge
jp
aam
and
hlt
xchg
inc
test
lahf
cltd
mov
xor
mov
jl
xchg
cwtl
adc
lods
nop
push
subb
testb
mov
cmc
mov
repnz
xor
push
out
mov
test
mov
retw
or
pushf
push
xchg
sub
lods
stc
push
jno
add
clc
stc
dec
inc
adc
lods
in
cmp
push
xchg
mov
cltd
mov
adc
pushf
xorb
loop
inc
push
mov
fdivrs
inc
lods
ret
insl
and
pop
sbb
mov
mov
sub
jbe
pusha
pop
dec
push
push
push
sbb
inc
nop
movsl
add
bound
jmp
pop
xor
sbbl
xor
in
pop
insb
std
scas
sub
sti
jnp
ret
aas
adc
arpl
sub
test
pop
jge
inc
rcrl
adc
lret
movsb
or
lea
rcll
mov
rolb
mov
aad
popf
lods
fwait
imull
js
dec
push
mov
mov
xor
aas
xchg
adc
sarl
xchg
stc
xchg
inc
inc
pop
imul
jno
push
sub
jle
mov
ret
jmp
ss
pop
sarl
xlat
or
clc
mov
rol
out
test
call
mov
cltd
test
shrl
in
add
rcr
sub
repz
sbb
push
cmp
mull
add
aaa
cmp
movsl
cmp
or
mov
pop
sub
das
adc
out
cmp
xchg
cmpsl
xor
pop
jg
pop
pusha
icebp
pop
xchg
pop
dec
lods
out
inc
lds
stos
xchg
mov
call
lock
cmp
clc
mov
xchg
lds
or
movsl
pop
mov
xlat
icebp
clc
xor
out
iret
lahf
loope
xchg
in
les
popa
and
sbb
xor
push
mov
das
cmc
jp
lock
negb
aad
sub
daa
sti
outsb
ljmp
mov
inc
push
sub
fwait
ljmp
jo
test
adc
add
stos
sub
lcall
xchg
test
sub
leave
xchg
cmc
mov
cltd
jmp
dec
lods
inc
inc
test
xchg
and
ficoms
push
lahf
fstps
and
xor
dec
cwtl
movsl
jl
and
dec
push
push
cmp
and
xchg
jbe
cld
mov
mov
icebp
lcall
js
add
add
inc
bound
sub
mov
cmc
ds
cmp
mov
inc
jbe
jno
mov
imul
dec
fbstp
dec
mov
mulb
dec
and
xlat
call
sarl
mov
andb
add
xor
hlt
pop
sub
sub
rorl
cltd
sbb
sti
push
sub
in
jbe
push
insl
fwait
push
mov
enter
js
inc
arpl
mov
scas
fmul
into
jge
lahf
mov
xor
mov
adc
imul
inc
mov
fbld
test
jp
call
pop
scas
ds
inc
dec
xchg
push
jmp
and
clc
xor
loop
dec
jmp
mov
xor
hlt
add
xor
adc
mov
lret
mov
addr16
jns
push
sbb
cmc
xabort
stos
xchg
push
mov
daa
inc
ds
imul
test
sbbl
sti
push
dec
jecxz
or
imul
sbb
lds
dec
cmp
addr16
lret
push
fs
data16
xchg
popa
shl
test
mov
fstl
das
jne
mov
and
pop
iret
inc
aad
sbb
cwtl
inc
mov
mov
cmp
out
out
adc
scas
pop
mov
push
add
data16
cmp
data16
pushf
mov
pop
jns
jo
lret
xor
or
pop
cmp
jge
sbb
jno
loope
xlat
nop
add
sbb
jbe
mov
jns
jmp
in
add
cmp
ljmp
insl
jmp
cmc
es
jmp
mov
stos
sahf
movsb
pop
sbb
sbb
xor
adc
int3
mov
adc
mov
gs
dec
jbe
dec
std
out
ja
insb
outsb
ss
sub
or
pop
inc
jno
or
ret
dec
inc
inc
aam
lods
imul
int3
sub
leave
cmp
aas
imul
lahf
orb
adc
insl
out
dec
pusha
stos
movsl
cmp
sub
xchg
xor
cmpsl
std
test
jge
int3
xchg
jb
rorb
lcall
dec
cmp
dec
push
jge
lea
loopne
fwait
adc
pushf
js
shlb
test
jg
pop
cld
and
stos
hlt
mov
mov
mov
insb
xor
jns
negb
lea
sub
mov
sbb
or
and
sub
aas
fdivs
xor
cmp
inc
or
loopne
inc
negb
push
jg
cmpsl
push
pop
xor
jmp
fnsave
pop
add
xchg
jge
inc
mov
push
shll
adc
dec
jno
mov
repz
adc
fstl
mov
and
push
addr16
loop
lcall
xor
mov
in
testl
jb
movsl
dec
push
cmpsl
lcall
out
repz
cmp
push
jbe
out
popf
add
add
dec
pop
shll
in
je
shll
mov
imul
data16
mov
mov
push
lock
popa
rorb
stos
aaa
or
jne
and
lret
aas
lret
pop
popf
or
mov
cmpsl
stc
push
dec
pop
xchg
adc
insl
xor
ds
repnz
pop
mov
push
orb
pop
jbe
data16
xchg
xchg
clc
test
adc
out
int3
xchg
ret
imul
jg
movsb
add
repnz
jecxz
scas
or
out
push
ja
sahf
rol
out
xor
scas
jl
push
or
adc
sub
push
mov
leave
cmpb
inc
cmp
adc
std
cmpsb
or
lea
idivb
mov
jp
outsl
insb
lods
sbb
sub
ss
ja
or
push
add
xor
xchg
mov
push
dec
jp
fadds
or
lods
cmc
jmp
and
gs
xchg
in
sub
pushf
xchg
es
roll
and
adc
into
cltd
lret
or
in
fnstcw
add
inc
mov
push
lret
pop
push
push
inc
ds
and
movsb
cmp
or
jbe
pop
fimull
push
xor
sbb
xchg
xchg
dec
pop
sub
rorb
or
ret
xchg
mov
pop
mov
mov
mov
stc
mov
fcom
pop
pop
and
repnz
insl
into
xchg
xor
adc
dec
inc
xchg
addr16
hlt
xor
cmp
and
outsb
adc
inc
cld
iret
push
fisttpll
test
mov
aam
jb
mov
cmpsl
aaa
movsl
cmpsb
out
pop
nop
pop
sbb
adc
sti
xor
loop
push
loope
fistpl
aad
jo
xchg
inc
testl
sahf
mov
dec
xchg
dec
out
stos
lret
push
pop
pop
aam
mov
jns
and
aas
lahf
pushf
push
fucomp
cmp
dec
lea
dec
sar
movsl
sti
lret
mov
push
cld
lods
jbe
lret
pop
jae
nop
addr16
and
and
dec
scas
dec
sbb
aam
negl
mov
addr16
ljmp
or
cmpsl
xchg
stc
fildl
imul
mov
push
out
add
repnz
js
jne
int
cmp
jmp
dec
mov
shll
call
test
mov
lret
sti
clc
in
aam
pusha
or
aas
and
mov
push
fbstp
je
push
loopne
out
sbb
dec
iret
fistpll
or
jns
cmc
push
jo
clc
sbb
bound
fs
push
out
xchg
inc
stc
or
dec
lret
or
xchg
add
or
adc
ljmp
addb
xchg
arpl
jmp
outsb
xchg
cli
xchg
mov
cmc
ret
xor
ja
cmpb
test
mov
jbe
inc
scas
xor
jmp
or
push
sbb
lahf
jg
fnstsw
mov
in
bound
js
mov
mov
sbb
sbb
cld
mov
cmp
xchg
xchg
bound
andl
mov
adc
add
outsl
cmp
fdivs
dec
mov
push
test
xchg
ljmp
add
sub
out
loopne
stc
clc
push
repz
lcall
out
jge
dec
mov
dec
shlb
or
push
imul
inc
xor
leave
and
adc
ljmp
jo
xchg
repz
mov
ja
mov
dec
xchg
std
mov
insl
sub
cmp
sub
orl
pop
call
pop
push
iret
insb
cli
insb
and
sbbb
xchg
outsl
in
push
lret
jbe
sti
shrl
push
aas
sbb
mov
push
mov
xor
lds
lret
sub
sbb
mov
mov
cmpsl
sarb
push
xchg
mov
pop
mov
out
xor
mov
std
enter
sbb
fsubs
add
push
bound
out
mov
add
sbb
loopne
jecxz
iret
or
mov
xchg
cmp
and
add
sbb
ja
add
movsb
mov
xchg
or
pushf
add
adc
cmp
nop
stos
jo
jp
leave
insl
xchg
adc
subl
xor
sbbb
decl
jmp
xor
xchg
mov
outsl
inc
gs
test
ljmp
xchg
les
push
add
movsl
loopne
daa
repz
add
clc
addr16
push
js
sub
dec
stos
push
jl
xchg
repz
imul
movsb
sahf
push
icebp
mov
xor
inc
inc
ret
jo
adc
jne
inc
ljmp
xchg
jno
in
add
pop
imul
inc
sub
pop
clc
loop
dec
pusha
mov
xor
addr16
fidivrl
std
sbbl
adc
imul
movsb
call
repnz
mov
movsl
iret
push
arpl
dec
fs
insl
repz
mov
xchg
imul
inc
jp
leave
jb
pop
in
push
adc
fnstcw
mov
push
mov
movsl
push
pop
push
xchg
cmpsb
sbb
or
push
out
sbb
lret
pop
sbb
inc
adc
jnp
xorb
pushf
mov
movsl
cmp
mov
or
pop
sbb
or
pop
xor
jle
mov
sub
sahf
out
stos
sub
or
fnstcw
repz
mov
sbb
push
xchg
add
imul
imul
cmp
fidivl
cmp
xor
outsl
or
int
sbb
rcrl
imul
push
push
or
xchg
es
xchg
or
or
jge
inc
adc
xchg
aad
adc
cmp
jmp
xor
addr16
pop
test
push
mov
and
push
add
ficoms
mov
stos
mov
sbb
adc
mov
add
mov
mov
fiaddl
pop
mov
filds
out
xchg
xchg
mov
in
mov
imul
mov
outsl
pop
push
adc
mov
jnp
xor
lds
pop
jmp
or
push
xchg
or
mov
mov
add
sub
int
fs
imul
cmpsl
lcall
ja
push
push
push
bound
xchg
sub
lcall
add
xchg
pop
inc
sub
jae
int
push
lea
call
es
scas
sbb
jge
ljmp
mov
mov
xchg
test
mov
or
inc
xor
outsb
adc
ss
scas
dec
and
add
aas
adc
js
xor
adc
push
lea
sbb
shrb
loop
shl
and
add
out
outsb
inc
scas
cltd
mov
stos
in
xor
lret
mov
lds
data16
pop
sbb
in
dec
lret
push
aaa
out
mov
ficomps
je
rol
mov
xchg
or
xchg
push
ror
and
and
mov
push
loop
lret
inc
stos
pop
add
out
mov
jae
pusha
xchg
mov
inc
test
jmp
adc
xor
or
xor
rcl
data16
jg
sbb
in
sub
mov
gs
fisubl
adc
push
jb
xor
add
add
fldcw
sti
sub
xchg
test
inc
dec
les
mov
adcb
lods
stos
aad
jl
xchg
pop
xchg
je
cli
adc
mov
cmp
testl
pop
cmp
out
addr16
into
je
lock
and
xor
adc
les
testl
mov
or
mov
loope
lds
cmpsl
imul
cmpsb
add
cmp
das
adc
sete
jl
movsl
jmp
arpl
sbbl
inc
xor
and
mov
inc
mov
cmpsb
push
mov
push
push
in
aaa
pop
inc
test
ret
ljmp
pop
xchg
ds
rol
xchg
jle
mov
pop
out
lods
sub
or
fnstsw
mov
mov
sbb
clc
adc
pop
push
outsb
inc
enter
adcb
pop
sub
ds
jge
push
push
fadd
hlt
push
or
fstpt
hlt
fwait
stc
cmc
aaa
mov
mov
push
ja
mov
lock
shlb
inc
mov
lods
rcll
mov
fmuls
mov
in
adc
fisubl
ret
insb
sbb
adc
jl
sub
je
or
xor
sahf
cld
in
imul
jge,pt
inc
push
ss
dec
xor
jae
xor
lahf
push
clc
stos
jno
cltd
imul
push
ret
lock
sbb
add
ja
inc
mov
mov
push
push
pop
xchg
push
ds
mov
inc
push
jb
pop
jp
dec
mov
sti
call
repz
in
aam
add
outsb
mov
pop
addr16
sub
jo
jmp
mov
dec
and
push
shlb
pop
out
xor
dec
sahf
out
adcb
push
icebp
mov
push
inc
add
mov
lds
push
es
mov
pop
cmp
dec
movsl
out
das
push
and
je
or
xlat
push
cmp
mov
ds
cmp
test
pop
and
dec
add
ljmp
cmp
xchg
int3
xor
mov
out
mov
inc
test
xchg
jp
les
inc
jae
int
cmp
inc
loopne
mov
adc
cwtl
cmpsl
sti
and
dec
popa
movsl
movsb
shl
adc
lods
ret
ficomps
adc
popa
and
adc
fistpll
pop
mov
lods
ss
aad
fwait
mov
cs
clc
fisubrs
cmpsl
rcrl
lret
push
iret
aam
and
fistpl
dec
sbb
data16
sub
xchg
and
sbb
out
pop
dec
xor
pusha
icebp
movsb
icebp
inc
sbb
andl
pop
inc
ja
jge
rcr
dec
push
rcrb
ds
xor
fs
push
sub
pop
mov
dec
mov
or
dec
enter
test
outsl
dec
push
sub
inc
push
mov
mov
pop
mov
data16
dec
scas
sbb
mov
jnp
cmp
leave
push
idiv
jge
mov
in
lret
cmp
mov
lret
mov
test
stc
cmp
jle
ret
xor
inc
in
leave
cmp
jge
fwait
ds
stc
sub
stos
nop
sbb
dec
jmp
repnz
xchg
insl
adc
loopne
fld
xchg
and
or
sub
mov
in
ds
mov
ja
mov
test
mov
movsb
test
cmpsl
mov
mov
in
or
inc
inc
iret
mov
jae
add
mov
fwait
lods
lahf
jg
or
stos
loopne
push
cld
fsubs
sub
cltd
lcall
sbb
rcll
push
out
sbb
xor
cld
push
lock
aas
dec
jl
fldt
outsl
aam
push
out
add
lret
imul
gs
and
testl
mov
mov
popa
pop
sub
jmp
xchg
int3
imul
leave
cmpsl
js
add
loopne
mov
sbb
arpl
mov
sbb
add
cmpsb
or
mov
arpl
jno
cwtl
jns
fsts
int3
imul
out
push
or
stos
xchg
adc
jge
loopne
push
sbb
loopne
adc
mov
lds
ljmp
lock
lret
cs
sub
cmp
sub
inc
movsb
lea
mov
fisubrs
jge
push
mov
int3
lcall
cmpl
and
dec
jbe
scas
lret
and
cltd
ja
mov
and
int
jle
dec
add
out
pop
mov
pop
je
push
sbb
fstpt
aad
in
adc
sahf
jno
push
icebp
int3
xchg
fyl2x
mov
ds
cmpsl
ss
adc
sti
add
mov
fsubrl
movsl
mov
jge
dec
dec
pop
aas
sub
nop
in
out
std
iret
fnstsw
lea
jge
dec
dec
pop
aas
sub
nop
in
out
std
iret
fnstsw
lea
jge
dec
dec
pop
aas
sub
nop
in
out
std
iret
fnstcw
mov
jns
dec
dec
pop
aas
sub
paddusw
in
out
push
jne
iret
stos
enter
pusha
bnd
int3
int3
int3
int3
int3
test
add
pop
cmpsl
adc
push
sub
sbb
dec
rcrl
and
adc
popa
stc
jno
inc
fsts
mov
sbb
dec
rcrl
and
adc
popa
stc
jno
inc
fsts
lahf
sbb
gs
sbb
cmp
aaa
shl
and
inc
mov
std
and
and
addb
sub
dec
pop
sbb
sub
jno
adc
push
cltd
stc
mov
dec
and
aam
mov
nop
xchg
and
push
rcl
stc
xor
out
imul
jge
ss
inc
inc
xchg
sub
dec
or
ret
pop
shrb
add
popa
dec
test
add
jae
xchg
mov
mov
push
mov
data16
mov
stc
mov
pushf
pop
shl
mov
jge
mov
sbb
pop
adcl
sub
jle
leave
mov
cmp
hlt
add
and
adc
popa
stc
jno
inc
fsts
mov
sbb
dec
rcrl
dec
int
loopne
lock
jmp
and
and
int
fmuls
out
popa
ljmp
jns
sub
mov
pusha
fdivrl
add
inc
jmp
mov
in
fisttpll
xlat
sbb
push
mov
mov
out
cmc
movsl
or
fsts
mov
sbb
dec
rcrl
and
adc
popa
stc
jno
inc
fsts
mov
sbb
dec
rcrl
and
pop
movsb
pop
mov
inc
lock
clc
in
xor
test
and
push
inc
scas
imul
mov
in
int
mov
xchg
xor
jno
jecxz
inc
pop
ret
ficoml
jmp
fnstcw
sub
jns
mov
das
ror
inc
mov
rclb
mov
or
shrl
xor
test
stos
pop
sti
out
inc
jmp
repnz
ret
dec
sub
cltd
std
cmp
sbb
sbb
lret
or
cld
ret
pushf
sub
ds
inc
mov
in
or
mov
cmp
nop
cmp
mov
repnz
push
pop
popf
and
cmpsb
jp
inc
inc
pop
or
mov
fisttpl
shl
cltd
in
rcrl
inc
push
ret
jns
test
loop
adc
iret
enter
jle
jae
lahf
std
pop
sbbb
xchg
xor
xchg
dec
sbb
push
pop
pusha
loopne
xchg
cli
pop
mov
scas
and
jg
jbe
lods
and
mov
push
cwtl
mov
xor
mov
pop
lea
and
dec
xchg
pop
cmp
out
popa
jl
imul
pusha
cmp
icebp
scas
pop
fcoml
mov
sahf
mov
sbb
icebp
jecxz
scas
in
aad
call
push
jns
sub
int3
aaa
ficompl
ficoml
fsubr
icebp
sub
fstpt
pop
pop
cmp
push
dec
xchg
leave
rolb
ljmp
add
mov
imul
cmpb
inc
jbe
ljmp
loop
xor
mov
xchg
fidivl
adc
and
lods
inc
leave
jmp
scas
sub
cs
stos
addr16
mov
sbb
inc
xor
cs
mov
cltd
sub
or
mov
sub
push
mov
sub
cltd
iret
jbe
and
in
into
mov
adc
jle
test
pop
idiv
mov
add
scas
inc
adc
icebp
jne
adc
xor
pop
into
xchg
sarl
nop
sbb
push
imul
push
inc
std
in
dec
push
aaa
sbb
pop
mov
adc
pop
in
das
xchg
stc
pop
pusha
addb
ds
outsl
lock
mov
push
fnstsw
xchg
mov
cli
mov
jmp
fcmovnu
fwait
cmpsl
jmp
push
xchg
jecxz
push
ja
jl
out
sarl
enter
or
hlt
xor
in
sub
push
dec
mov
sarb
loope
ret
mov
pop
xchg
adcb
lods
mov
or
dec
sub
jle
dec
xor
pop
sub
rclb
out
ss
pop
jae
stos
nop
pop
outsb
adc
arpl
mov
dec
add
popf
pushf
fldcw
add
add
out
mov
cmp
and
jp
mov
xchg
jno
into
pop
cmp
inc
jg
rcrb
inc
jmp
sti
pop
ds
iret
xchg
jecxz
fcoml
jge
nop
mov
nop
xchg
jge
inc
ds
pop
xchg
add
lret
lods
inc
xchg
jb
inc
fildll
xlat
jnp
lret
sbb
mov
popa
ljmp
stos
je
fiadds
popaw
sbb
inc
and
mov
sahf
out
jge
hlt
mov
cmp
mov
shl
and
popa
sti
pop
mov
xchg
movsb
cltd
in
shlb
xchg
push
sub
ret
adc
mov
sbb
sub
and
push
daa
mov
cmp
add
aam
cmp
cltd
stos
shr
cli
in
push
cmp
cmp
ret
hlt
inc
lcall
lods
mov
sbb
mov
pop
push
cmpl
insb
mov
sbb
inc
inc
add
arpl
mov
mov
and
or
mov
inc
ljmp
gs
push
xor
mov
mov
imul
and
mov
dec
adc
and
jae
fbld
js
mov
push
or
rorl
cmpsl
pop
lret
imul
and
lret
jmp
icebp
pop
mov
sub
pop
and
mov
rcll
push
loope
and
jecxz
xchg
jge
mov
and
cltd
loope
hlt
jmp
das
stos
aad
push
into
dec
push
adc
mov
xchg
mov
adc
mov
movsb
fwait
add
sbb
gs
jle
push
dec
sub
cmp
pop
and
lock
sub
aas
insb
adc
mov
scas
cmp
cmpsl
adc
mov
repz
repz
jo
mov
mov
lock
leave
or
pushf
dec
push
inc
cld
pushf
icebp
repnz
js
leave
mov
mov
jmp
adc
popf
outsb
pop
sub
movsl
out
fisttpll
sbb
shll
jmp
sbb
sbb
push
call
fucomi
sar
jnp
insb
fstl
scas
xchg
lret
mov
adc
call
jns
and
insl
push
xor
fisubrl
out
in
sub
fistl
sahf
adc
jmp
xlat
and
mov
pusha
insl
jecxz
repz
movl
aaa
lret
sbb
adcb
sub
xor
dec
scas
sub
cmp
imul
push
xchg
add
pop
or
mov
test
das
iret
and
or
out
outsl
pop
push
jne
add
xchg
loope
cltd
pop
nop
cmpsb
loope
ja,pt
mov
adc
add
mov
rcll
insl
xchg
aaa
sub
xchg
lea
mov
and
xchg
fmull
inc
pop
aad
add
outsb
scas
pop
jns
int3
or
rcr
dec
mov
or
dec
lret
dec
push
outsl
and
add
mov
pop
push
call
inc
xor
dec
and
mov
imul
int
test
mov
or
pusha
cmc
cmpsl
leave
mov
inc
xor
jae
inc
iret
or
and
cmp
imul
push
sti
or
fsubrs
mov
cmp
push
push
das
push
mov
lods
in
sbb
or
movsl
call
imulb
or
xor
mov
dec
in
sbb
push
dec
sbb
mov
stc
or
lret
push
mov
lods
mov
xor
repnz
or
mov
enter
cmpsb
mov
and
cltd
imul
test
loope
pop
cwtl
mov
movsb
push
into
mov
leave
sbb
add
cltd
sahf
fsub
cmp
ljmp
sub
pop
icebp
mov
sub
test
pop
cltd
xchg
mov
adc
jnp
roll
lock
dec
sbb
xor
add
or
into
fnstsw
test
adc
jl
mov
dec
xor
mov
xor
add
mov
js
inc
lahf
stos
imul
jbe
in
dec
shr
or
pop
push
daa
fiadds
clc
call
icebp
sub
push
mov
sub
dec
test
lret
or
cltd
arpl
loopw
outsl
jno
hlt
mov
mov
jl
xchg
push
push
mov
aad
cmp
pop
pop
push
sub
fst
testb
mov
and
aaa
shl
jne
fisubrl
out
stc
mov
dec
push
loope
andl
int3
stos
fdivs
cwtl
push
jge
jne
ss
xchg
and
jle
into
and
jmp
cmc
pop
rcrl
cmc
aaa
adc
xchg
inc
gs
xor
ficompl
inc
mov
aas
jg
adcl
and
dec
push
jge
inc
jecxz
cmp
add
ds
icebp
out
sbb
or
lret
mov
repz
mov
hlt
out
stos
insl
jp
push
scas
xchg
cmp
in
aas
jge
adc
int3
or
test
cltd
and
cmp
sti
shl
jmp
outsl
jae
rorb
js
sub
repz
xlat
in
pop
or
xor
sub
loopne
outsl
pop
adc
cmp
je
jl
aad
inc
sub
out
mov
mov
jbe
mov
adcl
je
shlb
testb
shrb
sarb
outsb
enter
out
shll
inc
roll
fld
sub
leave
arpl
cmp
push
sub
mov
into
mov
lcall
push
pop
dec
sub
jbe
inc
pop
shlb
bound
rclb
lods
pop
push
cmp
jge
mov
fsubr
lods
lret
shrl
mov
ljmp
lcall
adc
cmc
fstp
cli
sti
in
push
push
xor
cltd
imul
mov
call
mov
mov
push
sub
stos
scas
xlat
dec
clc
jmp
lock
xchg
mov
push
sub
mov
andb
or
stc
inc
iret
push
xchg
movsb
add
out
push
or
sub
pop
mov
fstpt
pop
out
add
notl
scas
xor
data16
scas
xchg
mov
pushl
add
pop
mulb
sub
xlat
mov
mov
arpl
test
inc
das
jl
or
cmpsl
mov
test
adc
jnp
jp
shr
mov
xor
outsb
adc
divb
sahf
sub
cmp
cmp
ja
movsb
mov
jnp
jno
scas
insl
push
pushf
jle
idiv
aas
das
ljmp
add
ds
inc
popa
hlt
popa
jmp
incb
pop
out
mov
pop
loope
sub
push
sbb
mov
fcoms
mov
gs
out
push
arpl
loopne
out
pop
jecxz
sub
cmpsb
cmp
dec
push
cltd
repnz
push
out
mov
subb
fwait
sub
rolb
mov
add
daa
fisttpl
cli
xchg
inc
mov
leave
inc
lahf
out
cmp
sub
lcall
inc
xchg
fs
or
ss
roll
jle,pt
loope
scas
cmpsl
add
or
add
shrb
jle
dec
push
dec
xchg
popa
int
adc
jl
stos
sbb
fwait
or
sbb
ficoml
in
icebp
mov
shlb
push
xor
jno
pop
fidivl
or
mov
jle
xchg
lea
cmp
pop
aas
pop
out
jmp
testl
test
dec
mov
push
lahf
jg
arpl
ss
pop
xlat
lret
or
jns
mov
imul
and
or
inc
lods
or
stc
and
or
push
xchg
xchg
jl
in
int3
sbb
cmp
shll
jmp
fidivrs
or
shll
into
fimuls
mov
jmp
inc
jecxz
adc
adc
sbb
fs
jp
add
test
bound
movsl
cmpsl
scas
repz
insb
sarb
jnp
jae
outsb
mov
bound
push
inc
push
cmpsl
dec
xchg
subb
push
xchg
cld
mov
out
mov
jmp
imul
test
cwtl
add
push
and
mov
lds
pop
scas
cmp
jp
repnz
sub
mov
in
xchg
popf
sub
adc
in
pop
xchg
jecxz
adc
pop
rcll
mov
ret
int
jmp
jle
pop
xchg
imul
lahf
mov
push
dec
push
xlat
fwait
dec
mov
gs
xor
pop
lret
sbb
mov
xchg
cmp
jae
sub
popf
nop
mov
mov
ljmp
add
fcmovne
jg
outsl
sbb
dec
in
push
pop
xchg
call
or
or
push
dec
cmp
stos
xor
jmp
pop
cmp
jae
pusha
cmp
xchg
xchg
dec
jmp
cmp
jmp
cmp
jle
pushf
dec
lods
or
jecxz
add
divb
stos
fnop
jno
fidivrs
dec
lret
mov
js
jns
pop
movsl
jmp
adc
fdiv
movsb
fildl
inc
test
pushf
and
rcll
pusha
scas
add
stos
jae
adc
je
sub
cs
sbb
mov
scas
adc
pop
aaa
xor
pop
mov
hlt
cmp
aas
push
xchg
xor
repnz
test
ret
les
loope
or
cmp
in
orb
fildll
fildl
mov
and
push
cmp
push
outsl
rorb
andb
insl
fidivl
xchg
push
fiaddl
ret
fdivl
pop
insl
scas
pop
xchg
in
sbb
stos
jp
xchg
push
in
push
out
push
repz
sbb
pop
push
pop
addr16
fisttps
dec
jno
daa
call
and
push
pop
jb
inc
sub
and
addr16
test
xchg
lock
adc
cmp
fnstsw
mov
xor
dec
ss
dec
outsb
xor
dec
push
jae
icebp
and
and
rolb
clc
std
push
sbb
mov
jne
pop
ret
or
or
sbb
dec
or
push
outsb
mov
ret
cld
lret
stos
insl
daa
push
push
hlt
fnstcw
or
stos
jbe
jg
out
add
int3
inc
adc
cmp
pop
cmp
jbe
fisubrl
daa
sbb
mov
mov
icebp
sbb
xor
pop
mov
or
push
xor
loopne
mov
bound
add
jbe
jb
dec
and
mov
je
shrb
xchg
inc
jno
test
das
and
arpl
and
jno
mov
xchg
mov
out
addr16
sub
jecxz
xchg
add
jo
scas
popa
sti
mov
cmpl
mov
addl
lds
fildll
rcl
dec
jge
dec
int3
ror
int
jb
ja
fdivrs
or
pop
movsl
mov
cltd
mov
xor
jno
mov
lods
mov
repz
push
out
loope
pop
push
dec
inc
ret
xor
xchg
inc
or
aam
jle
cmc
cwtl
inc
sub
push
out
insb
out
jle
cld
mov
fsubrl
sub
mov
sahf
jnp
std
cmp
std
out
iret
add
or
cwtl
mov
out
xor
mov
or
xor
cmp
sub
fcoms
insb
stos
pop
dec
inc
cltd
int3
loopne
das
inc
mov
jl
sub
inc
inc
pop
or
xor
push
fstpl
xchg
inc
mov
mov
mov
lret
mov
testb
into
std
in
push
leave
loop
xchg
enter
ss
out
cmp
xor
sub
mov
shr
fisttps
test
lods
push
lods
call
pop
mov
jge
xlat
jl
cmp
mov
inc
add
je
sbb
cltd
hlt
fiadds
sub
adc
aam
push
ficoml
sbb
subl
int
inc
jbe
jno
lock
jae
mov
xor
and
lret
rclb
and
rcll
insl
movsl
add
js
xchg
aaa
fimuls
ljmp
pop
lods
fsubl
cmc
mov
add
xchg
outsb
push
push
mov
repnz
mov
fiaddl
test
test
lret
cld
sub
push
mov
sub
fxch
cmpl
lret
push
cmp
or
loope
lret
out
rolb
cmpsb
mov
mov
js
enter
clc
loop
ss
stos
or
lahf
sbb
sub
aam
sbb
sbb
cmpsl
adc
and
pop
daa
sahf
aam
insl
add
std
inc
addl
je
scas
mov
arpl
add
nop
in
ret
daa
xor
hlt
lcall
sbb
mov
movsb
and
push
scas
jecxz
push
push
mov
movsb
in
sbb
fwait
pop
test
sub
xchg
arpl
roll
out
imul
ds
aam
mov
sub
or
jnp
adc
adc
lret
dec
push
jbe
out
nop
and
shrl
mov
das
mov
leave
push
cltd
pop
mov
sbb
rclb
les
sbb
push
jae
mov
scas
sti
adc
sbb
xor
jl
std
popl
shlb
xlat
into
xchg
in
jo
pushf
lods
lret
mov
test
and
outsb
in
cld
jp
adc
pop
push
xor
sbb
jmp
dec
mov
lahf
mov
inc
or
divl
mov
add
rorl
iret
jne
shrl
js
push
sbb
dec
fcom
adc
scas
cs
or
jge
popf
sbb
fimull
mov
and
addr16
push
dec
cmp
push
push
das
xor
push
mov
insb
test
aaa
shrb
punpcklbw
dec
sbb
out
sbb
inc
clc
adc
icebp
es
mov
aam
movsb
dec
sbb
ret
dec
jp
out
sbb
mov
insl
jns
xor
sbb
xor
movsl
cs
cld
mov
lret
cmpsl
cmp
inc
fucomp
inc
mov
mov
ret
data16
mov
or
xchg
pop
shrb
roll
fwait
xchg
cli
mov
and
pop
cltd
cmp
inc
mov
outsb
insb
scas
movl
aaa
xor
sti
ret
xlat
or
imul
imul
in
inc
push
or
stc
lret
cli
mov
out
cmp
mov
jp
xor
adc
push
mov
pop
in
fsubrs
cmpsb
shl
xor
xchg
fwait
shl
sub
jl
into
sbb
pusha
adc
mov
pop
dec
es
mov
in
and
test
stc
jmp
mov
and
pusha
adc
sahf
leave
sbb
es
cmpsb
add
xchg
mov
hlt
in
push
scas
mov
pop
cmp
mov
mov
outsl
lret
or
leave
sub
cmp
aaa
pop
sub
sbb
pop
out
mov
out
pop
lods
mov
sbb
das
xchg
push
xchg
and
lds
in
dec
loope
mov
ljmp
inc
fisubrl
jge
push
sbb
lret
or
je
outsl
sti
xchg
add
outsb
push
inc
sahf
push
adc
cmp
aas
sti
push
xchg
inc
pop
cmpsb
inc
divb
decb
sub
test
mov
push
pop
xlat
jle
push
pop
pop
jl
push
inc
popa
enter
adc
fwait
add
sub
es
loop
mov
data16
sbb
stc
repnz
divl
push
sti
jno
dec
dec
call
sbb
cmpsl
data16
data16
clc
or
jb
and
cmp
dec
mov
inc
aad
cmp
add
or
pop
and
inc
xchg
xchg
nop
call
les
rcr
rol
in
xor
adc
loop
repnz
loop
mov
insl
shrb
mov
jmp
out
sbb
fidivl
cmc
aam
or
mov
std
pop
addr16
test
clc
cmp
les
fidivrl
lods
mov
dec
jg
cmpsl
loop
xor
sbb
adc
lret
insb
mov
cmpsl
jl
sub
mov
cmpb
xchg
pop
xlat
xchg
or
icebp
pop
mov
bound
or
add
lea
pop
pop
ret
js
jae
dec
or
cmp
push
or
pop
cmp
repz
fdivrl
mov
dec
pop
and
xchg
jl
and
inc
lret
adc
mov
or
mov
lods
inc
je
stos
stos
sti
or
cs
jo
sub
mov
loop
and
inc
xlat
stos
sbb
add
hlt
mov
cmp
pop
add
popa
cmp
lods
mov
lock
jae
xlat
ljmp
inc
or
cmp
aas
mov
in
sub
aam
mov
cmp
xor
pop
adc
rorl
xor
jbe
sbb
jge
lods
sub
std
xor
mov
jge
jo
push
xchg
out
mov
sbb
sub
fmuls
pop
jmp
adc
sub
inc
jmp
leave
mov
xor
or
imul
xchg
xchg
iret
jo
push
popa
jnp
inc
cmpl
mov
hlt
call
pop
xor
and
test
insl
lahf
jecxz
movsb
lcall
aad
mov
jb
push
adc
push
fsub
or
jb
cmp
jecxz
mov
or
rorb
das
iret
mov
xchg
jne
jb
bnd
sbbl
cmp
or
neg
push
xchg
aas
repz
xchg
imul
push
mov
xor
mov
addr16
and
mov
in
in
jl
lea
fldcw
dec
push
out
mov
push
pop
cmp
nop
inc
in
and
xor
sbb
sub
xchg
dec
call
jge
xchg
inc
lret
lods
in
ss
sti
mov
divb
or
int
lret
mov
xchg
movsl
jl
mov
cmpsl
scas
push
shrb
sub
jp
jns
or
sub
pop
fiaddl
push
popa
mov
jne
jnp
rol
xchg
xchg
out
ja
dec
or
lret
jecxz
adcl
push
adc
xchg
sub
pop
daa
adc
aaa
dec
xor
cltd
xor
sti
aam
shl
sbb
cmp
pop
mov
ss
dec
mov
fdivrs
shl
shll
mov
and
lret
fimuls
filds
and
mov
insb
mov
adc
sbb
xor
fiaddl
inc
mov
flds
add
pushf
out
jecxz
jge
xchg
out
mov
xchg
xor
jge
nopl
stos
xchg
in
pop
clc
mov
test
cmp
sub
out
xlat
loop
dec
leave
in
sbb
mov
cmp
or
repnz
cmpsl
lods
dec
shll
mov
cmpsl
mov
push
mov
cmc
fstps
mov
push
sub
cmpsb
in
subb
push
mov
or
cmp
stos
stc
mov
lcall
aam
mov
stc
xor
xor
lock
pop
jno
sub
dec
sbb
loope
push
xor
cmp
scas
into
xor
fisubl
in
dec
out
and
ja
ds
cmp
rclb
bound
or
push
jmp
cmp
jnp
inc
jb
mov
push
push
push
scas
movsb
push
mov
cmp
fwait
adc
xor
push
and
sti
inc
dec
addr16
and
xor
popa
stc
jno
inc
fsts
mov
sbb
dec
rcrl
and
adc
popa
stc
jno
inc
fsts
mov
sbb
dec
rcrl
and
cltd
adc
stc
jno
inc
pop
push
sub
sbb
dec
rcrl
and
adc
leave
rcr
sub
sbb
imul
cs
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
mov
lret
xchg
lds
and
pop
add
cmp
push
sbb
mov
mov
lret
loope
rcrl
and
gs
add
cmp
push
pop
inc
or
fiaddl
stos
rcrl
and
ds
dec
sbb
inc
pop
push
mov
fwait
mov
loope
pop
inc
cmp
push
iret
cli
std
jno
fcoml
add
cmp
xor
ficompl
xchg
pushf
pop
test
mov
push
dec
mov
clc
pop
sub
lock
fisubrl
xor
imul
in
xor
mov
lret
icebp
stos
das
adc
xor
pushf
movsl
daa
sbb
in
xchg
aad
sti
pop
mov
mov
and
mov
mov
push
xchg
cltd
adc
or
and
cs
dec
push
cmovnp
dec
inc
dec
dec
das
pusha
in
push
push
sub
out
cli
mov
lret
loope
rcrl
and
pop
add
cmp
push
sbb
notl
in
popf
test
mov
sbb
pop
and
or
pop
or
sbb
call
mov
into
shr
rorl
cmp
pop
xor
pop
fdivs
subb
lcall
adc
dec
jno
popa
sub
inc
or
fiaddl
stos
rcrl
and
pop
add
cmp
push
sbb
mov
add
sub
lea
jbe
inc
movsb
adc
js
sub
mov
rorl
fsub
rcrl
arpl
movsb
cmpsl
lret
and
sub
adc
outsl
jno
insb
imull
fisubrl
pop
test
ret
fstps
sti
cmpsb
sbb
fwait
jo
mov
inc
and
mov
aad
or
adc
cmp
out
mov
jg
repz
pop
je
cmp
mov
popa
jb
and
imul
and
das
out
push
mov
dec
inc
mov
mov
call
sbb
xchg
mov
in
sub
std
jle
subl
test
fcmovu
jecxz,pn
pop
jae
fs
xchg
pop
sbb
add
sub
and
out
sbb
movsl
repz
push
stc
mov
push
push
mov
movsb
and
sub
cmpsb
loope
add
jbe
rcr
adc
cmp
xchg
ds
sbb
xlat
push
pop
bound
mov
xor
lea
iret
insb
fs
repz
outsb
sub
pop
dec
les
and
test
pop
ret
pop
jl
fisubrs
cmpsb
mov
jecxz
jne
ret
arpl
push
call
loop
cmpsb
je
pushf
notb
mov
mov
stc
gs
mov
mov
mov
gs
stos
pop
test
cmp
scas
test
or
shrb
test
imul
or
jl
jecxz
push
or
push
test
push
dec
sub
adc
mov
and
outsl
add
cmpsb
sbb
test
cmp
push
les
movsl
mov
out
mov
mov
fnstenv
stos
icebp
shr
mov
jno
inc
push
fisubs
inc
mov
data16
bswap
ret
scas
mov
pop
or
ljmp
mov
cld
fbld
and
fsubrl
loope
pop
outsb
pop
adc
popa
sub
jl
lret
pusha
sub
outsb
mov
xor
mull
lret
cwtl
push
and
mov
mov
xchg
xor
xchg
push
mov
mov
pop
cli
in
repz
xchg
clc
pop
push
jnp
int
sbb
test
inc
aam
push
and
outsl
js
pop
cmpsl
add
out
dec
scas
jo
or
addl
adcl
add
ret
jle
mov
inc
mov
int
pushf
cmp
call
mov
mov
mov
daa
ds
push
mov
aas
xor
and
push
out
and
outsb
out
pop
sarb
mov
inc
push
cld
fs
sbb
pusha
pop
push
call
pop
adc
dec
imul
jle
jnp
add
sbb
gs
lahf
mov
adc
jbe
ret
jo
lods
iret
sub
pop
mov
int
aad
jno
in
pusha
mov
fwait
push
push
imul
arpl
mov
adc
pop
clc
jo
jmp
jl
ja
cs
and
xorb
dec
mov
aad
in
cmp
add
sbb
add
cmp
lock
xchg
popf
loop
lcall
cmp
or
cmp
and
adc
add
sub
and
mov
pop
into
pop
and
ret
sbb
cmp
pop
inc
fs
out
dec
stos
out
leave
adc
je
test
cmpsl
aas
mov
js
mov
test
hlt
jb
pop
sarb
dec
subl
mov
pop
sbb
push
mov
insb
jb
aaa
hlt
add
and
aam
mov
lds
jb
test
insl
jnp
mov
jl
push
arpl
mov
cld
mov
lock
shrl
fucomip
cli
adc
repnz
inc
mov
rcll
in
xor
outsb
sub
lcall
sbb
or
xchg
scas
repnz
mov
ss
lods
in
jg
xor
mov
div
adc
mov
sbb
mov
lods
mov
aas
xor
rcll
lcall
movsl
dec
test
addr16
into
or
loop
js
mov
jae
add
push
rorb
mov
jle
cs
int3
negb
in
leave
test
mov
aad
and
adc
xor
add
int3
sbb
push
jl
sub
dec
aas
sub
inc
fistpll
mov
add
int
inc
int3
push
sbb
dec
pop
jge
into
jbe
adc
out
sub
arpl
sti
imul
mov
insl
jge
inc
ljmp
sbb
jg
jns
test
sbb
sbb
fwait
mov
dec
das
adc
cmp
insl
mov
adcb
adc
pop
ja
jno,pt
xchg
ljmp
lret
bnd
push
out
adc
sub
in
in
repnz
fmull
aaa
sahf
fstpt
xor
testl
push
pop
iret
jnp
adc
push
cmc
add
shll
je
xor
fistpl
mov
sbb
dec
mov
enter
jno
and
scas
test
ja
mov
dec
out
push
addr16
cli
mov
dec
sbb
mov
cli
pushf
mov
xchg
aam
jmp
and
loop
mov
pop
ljmp
xchg
add
test
cld
jg
data16
xor
and
pushl
inc
add
sar
addr16
dec
xor
sbb
sahf
jl
jecxz
fiaddl
aad
and
bound
xor
xchg
xchg
pop
out
add
mov
cmp
lock
ljmp
dec
mov
in
mov
insl
inc
insb
rorl
cs
pop
int
inc
fwait
xor
sahf
divl
inc
push
pop
xchg
lcall
sarl
or
je
loope
addr16
imul
jo
es
lret
std
loopne
pop
bound
push
arpl
jge
mov
mov
adc
ss
ss
xchg
dec
notl
call
out
dec
ss
xchg
gs
lret
pop
mov
pop
pop
inc
rcll
pop
jp
iret
jmp
or
mov
lcall
mov
insl
mov
insb
inc
xor
loop
jne
pop
sub
incb
daa
rclb
imul
xlat
sahf
stos
and
sti
dec
jecxz
nop
mov
ljmp
inc
repz
xor
mov
movsb
sbb
dec
mov
mov
mov
scas
cmp
mov
mov
sub
int3
pop
insl
fimull
and
add
fcomi
mov
out
push
push
stos
mov
cmp
int3
scas
mov
cmp
mov
mov
jb
inc
inc
pop
in
cli
bound
xor
fdiv
movsl
cmp
gs
and
or
and
add
fistl
mov
enter
icebp
mov
loopne
andb
mov
push
inc
fisubrl
pop
push
mov
cmpl
mov
mov
ret
int3
shll
push
push
cwtl
jo
xor
pusha
leave
ja
in
ds
outsl
negl
cmp
clc
mov
test
push
sbb
xor
xorl
push
mov
mov
lock
fcompl
lock
jno
call
mov
icebp
mov
into
cmc
inc
or
aad
adc
je
rcrl
lret
outsb
sti
pop
out
insl
push
divb
popf
ss
mov
and
sub
test
add
arpl
inc
call
das
dec
cmp
mov
mov
jbe
push
xor
repz
movsb
mov
loop
jl
test
dec
sub
lock
push
std
xchg
mov
shrb
je
fwait
and
lea
or
xorb
sub
push
cmp
orb
cwtl
mov
rolb
aas
hlt
adc
dec
push
aas
inc
fnstenv
mov
mov
clc
jge
das
xor
js
cmpsb
outsl
insb
push
inc
fsubs
add
cmp
or
xor
mov
or
jp
jl
ffree
test
mov
ss
cmc
rorb
test
aaa
sbb
popa
inc
lretw
scas
ds
iret
popf
push
adc
cmp
test
repz
stos
mov
mov
adc
jecxz
mov
nop
cmc
pop
loop
add
mov
jmp
push
or
or
outsl
insb
aas
push
mov
into
les
pop
push
mov
in
add
sahf
cmc
movsl
shrl
push
jmp
aam
or
jbe
mov
push
sbb
mov
jg
les
movsl
test
push
test
shl
push
fstps
jle
popf
pusha
adc
cmp
hlt
dec
push
xor
daa
jno
int
mov
aad
inc
dec
jge
fucomi
cld
movsl
bound
mov
outsb
lcall
arpl
cli
mov
mov
add
inc
sub
mov
jg
gs
lods
adc
pop
daa
mov
dec
cmp
push
mov
pop
cli
mov
ja
jbe
pop
pusha
shll
xchg
js
aas
mov
push
xchg
sbb
mov
imul
or
loopne
sbb
add
xor
mov
test
repz
sub
call
fmuls
xchg
fcmovb
jb
xchg
sub
or
rcl
popf
xchg
and
sar
push
cmpsb
es
filds
cmp
push
out
test
pushf
xchg
ljmp
test
inc
push
scas
dec
in
xor
punpckhdq
xchg
or
xlat
and
sahf
mov
daa
lods
mov
negb
shr
sbb
or
mov
test
int
pop
pop
pop
add
mov
pop
pop
pop
mov
repnz
bound
cld
sub
xchg
inc
jbe
xor
and
cwtl
xchg
fwait
adc
sahf
dec
jle,pn
xchg
mov
and
test
xor
sbb
mov
icebp
mov
or
sti
test
xor
roll
out
cmp
aam
jecxz
data16
lods
push
flds
icebp
jb
xchg
je
pop
nop
dec
fidivrs
cmp
xor
fmuls
movsb
adc
sub
test
sahf
adc
pusha
in
aad
and
ljmp
mov
repz
int3
into
test
insl
fidivs
fwait
mov
pop
inc
sub
mov
int
mov
aam
les
jns
mov
clc
push
adc
lahf
hlt
push
mov
aas
add
inc
adc
mov
int3
mov
jno
mov
std
adc
imul
xchg
sub
jnp
aam
dec
std
adc
cmp
arpl
xor
outsb
adc
cmp
arpl
sub
lret
adc
icebp
mov
xchg
sbb
lret
aas
mov
mov
dec
xchg
loop
mov
add
dec
shl
push
mov
std
les
cs
mov
and
rolb
ljmp
std
lds
mov
sahf
xchg
dec
lahf
or
cltd
jle
rorl
data16
cmp
cmpb
mov
inc
and
mov
das
xchg
push
add
fdivl
lea
fldcw
scas
mov
in
stos
jbe
in
mov
je
enter
in
jne
pop
mov
sti
sub
aam
cmp
aas
jle
imul
testb
arpl
inc
sahf
push
aam
popf
adc
jno
xchg
add
ss
pusha
stc
sbb
arpl
add
mov
lods
mov
lds
mov
push
sti
daa
bound
push
sub
push
clc
cwtl
mov
dec
stos
jns
sub
xor
xor
pusha
push
fwait
dec
mov
push
lods
xor
mov
loope
pop
mov
jne
lock
or
mov
jg
inc
in
fldenv
mov
jmp
add
jo
test
sbbb
add
mov
cltd
cmp
repz
add
xor
insl
outsb
pop
sub
push
mov
fs
das
daa
out
fcomi
pop
rolb
xchg
int
mov
and
fsub
push
push
das
daa
mov
add
jo
jg
push
loope
jns
jb
dec
movsl
and
push
sbb
pop
inc
or
sti
xchg
jb
xchg
mov
fistl
push
loope
in
lock
jb
dec
sub
inc
sub
pusha
in
or
xchg
push
cmp
sahf
mov
sbb
add
vmovshdup
add
mov
xor
mov
mov
sub
enter
lds
out
or
jno
jns
cld
push
scas
bound
mov
inc
pop
pop
jp
icebp
andl
les
jge
pop
or
adc
inc
stos
mov
push
cmp
repz
pushl
add
fidivl
push
cmpb
sbb
push
add
jnp
ret
inc
cmpsl
jge
stc
in
jecxz
les
jecxz
inc
lods
push
jg
jl
pop
xchg
in
dec
xor
cli
inc
sbb
jg
pusha
push
int3
mull
js
xchg
and
in
xor
insb
mov
rcl
pop
lcall
xchg
es
pop
jecxz
mov
push
orl
icebp
test
arpl
jl
lcall
inc
out
hlt
push
pop
dec
xchg
jae
cltd
arpl
jae
dec
xchg
cltd
insl
outsb
adc
adc
loop
mov
pop
inc
repnz
ret
push
das
push
cs
mov
pop
es
mov
push
mov
or
scas
popa
mov
cltd
adc
pop
sub
mov
movsl
imul
or
push
fsubr
cmpsb
add
push
fnstsw
and
sub
pushl
stos
addr16
jmp
loope
pop
and
push
lret
add
clc
sarl
push
rclb
jmp
jg
mov
xor
outsb
or
pop
jns
ss
jl
cltd
xchg
and
test
outsl
loop
xor
aad
sub
fcoms
arpl
mov
inc
aam
repz
cmpsb
insl
test
pop
test
std
mov
jbe
out
adc
sub
lock
push
aam
sbb
add
xchg
cmpsl
arpl
int3
movsl
aam
repnz
push
mov
cwtl
ss
loope
mov
pop
pop
mov
xchg
mov
jl
add
sti
mov
push
insl
add
dec
inc
and
insl
arpl
jb
in
inc
pop
dec
fcomp
testl
sub
stos
out
fdivrs
mov
ret
mov
sub
pop
imul
je
cmpsb
sbb
jnp
dec
mov
iret
add
in
jmp
inc
adc
test
out
je
mov
fwait
daa
rclb
xchg
xlat
cmp
xchg
lea
mov
push
lea
stos
xchg
adc
adc
or
dec
das
jl
xchg
nop
subb
mov
sbb
mov
or
inc
jecxz
cmp
ds
lods
sbb
fistl
inc
mov
jle
jmp
adc
inc
mov
nop
pop
inc
imulb
jb
cmpsl
or
mov
sbbb
sub
mov
stos
inc
or
mov
bound
int3
test
dec
jmp
scas
mov
fildll
ror
aaa
push
jo
lret
pop
jmp
pop
outsb
out
mov
jae
pop
ds
lret
lea
sar
out
loop
and
repz
jo
jg
outsl
in
std
or
into
push
xchg
xchg
mov
cs
ret
push
adcb
push
sub
out
insl
cmp
pusha
jge
cwtl
out
lcall
imul
je
fdivl
dec
ret
pusha
stc
fisubrl
pop
mov
out
popf
pop
push
je
mov
jl
xor
je
jb
es
jns
test
jnp
inc
push
fisttps
bound
inc
mov
mov
arpl
or
mov
test
xchg
mov
icebp
lods
jne
mov
pop
fs
push
sbbl
mov
adc
aad
push
xchg
push
xchg
lret
lahf
arpl
and
mov
gs
movsb
aaa
scas
repz
xchg
dec
xchg
pop
push
mov
inc
loopne
dec
and
lret
lods
dec
mov
push
repnz
push
fcomip
push
xchg
mov
mov
rorl
xlat
jae
or
inc
leave
mov
pop
jae
cmp
xlat
pop
push
mov
int
shrl
lcall
xor
xchg
popf
out
das
addr16
sbb
jp
cltd
jnp
daa
xchg
xchg
cmpsb
inc
popa
sub
cmpsl
repz
inc
or
sub
jge
jbe
repnz
ss
outsb
roll
scas
imul
mov
sub
dec
adc
in
xor
push
fisubrs
addr16
inc
mov
mov
test
cli
and
cmp
push
xchg
push
mov
imul
pusha
lods
pop
push
mov
ljmp
in
sub
and
xor
fisubrl
lock
xchg
mov
inc
sbb
pop
repz
daa
jl
je
sub
test
dec
repnz
push
xor
outsl
mov
lahf
jge
add
add
dec
int3
int
sbb
push
or
mov
bound
imull
popf
sub
jmp
pop
test
clc
mov
cwtl
pop
lret
and
mov
mov
int3
mov
mov
push
add
xorl
xor
adc
or
jns
ljmp
jno
add
pop
fucomp
jns
jg
push
xchg
cmc
jae
push
outsb
out
cmp
xor
scas
outsl
cld
cltd
ljmp
add
jno
imul
in
into
and
test
cs
imul
jnp
xor
and
push
inc
rcl
mov
mov
cltd
jmp
lret
insl
cmpsb
mov
daa
aaa
inc
sbb
jp
add
mov
stc
cmp
inc
es
sbb
stc
sbb
xchg
in
dec
sbb
mov
add
iret
mov
lret
aad
and
jecxz
jmp
in
lds
iret
ss
int3
dec
sub
insb
fistpl
out
xchg
add
add
adc
mov
and
dec
in
daa
xor
xor
fstpt
iret
rcll
mov
adc
mov
mov
jmp
jno
xchg
xor
shl
xchg
mov
cmpsb
jg
jno
int
popa
jl
adc
mov
insl
mov
scas
sub
push
cld
sbb
adc
fisubl
mov
sub
int3
xor
aas
cwtl
mov
jno
or
rolb
adc
out
popa
stos
ficomps
js,pt
nop
repz
dec
imul
popf
and
add
jl
pop
cmp
aaa
pusha
in
adc
or
or
sbb
dec
subl
das
jp
sub
sub
cmpsl
shr
mov
aam
in
sbb
and
hlt
hlt
pop
lods
stos
lret
sub
fnstsw
add
xchg
lods
add
mov
sbb
and
xchg
lods
das
inc
xlat
arpl
rcll
push
push
leave
cltd
sbb
inc
mov
jp
mov
pop
test
jbe
add
sub
ja
scas
mov
fsubrl
out
aas
xchg
pusha
push
dec
jns
pop
sarl
sbb
xchg
fsubs
push
xchg
pop
clc
jp
sarb
fmul
add
or
cmc
lcall
and
add
push
lcall
mov
or
pop
jmp
dec
or
mov
fmuls
sub
scas
sar
scas
pop
sahf
nop
mov
or
lret
aam
insl
pop
xor
and
cld
scas
mov
dec
sub
dec
inc
mov
out
mov
inc
adc
scas
xchg
sti
xchg
loope
imul
icebp
into
lcall
lret
inc
fwait
push
into
pop
jl
adc
out
iret
cwtl
loop
push
inc
test
inc
lock
and
mov
gs
shrb
repnz
cmp
repz
fistps
popf
lds
cmpsb
cs
stos
or
fscale
adc
pop
and
lds
ret
jecxz
push
imul
and
insb
inc
cs
cmp
in
mov
sbb
push
mov
cmp
jge
xorl
add
je
xlat
sub
aaa
pop
push
std
add
ret
mov
xchg
sub
ss
inc
jecxz
iret
mov
scas
leave
lock
jp
je
lret
leave
lret
ja
dec
push
and
stos
mov
sub
rcrb
jl
rclb
out
mov
inc
pusha
push
inc
fstps
jecxz
fnstsw
ljmp
push
mov
sbb
shl
jae,pn
ret
clc
cmp
jmp
aas
jmp
xlat
pop
push
sbb
cld
inc
sub
mov
jp
push
or
or
lock
std
xor
rol
insl
pop
repnz
rcll
dec
fistpl
sub
ja
sub
in
cltd
xor
adcb
xor
lret
addr16
jl
mov
enter
test
sti
cltd
push
push
mov
jbe
arpl
xchg
xchg
lods
pop
mov
rcll
jle
or
test
mov
jecxz
shrb
add
imulb
jg
pop
jae
push
push
fwait
test
lods
das
pop
pop
addr16
shrl
sub
add
xchg
cmp
xor
cli
or
into
xchg
pop
mov
or
add
xor
inc
dec
clc
pop
or
jbe
rorl
outsl
cmc
aam
jmp
jmp
aas
aam
mov
mov
jmp
push
aaa
iret
cmpsl
popa
les
sbb
out
mov
imul
mov
in
sbb
add
lea
push
int3
xor
jmp
and
adc
sbb
movsb
mov
pop
push
clc
mov
jle
ret
adc
cmpsb
inc
lods
cmp
push
adc
ds
jbe
test
inc
fldl
jbe
jns
or
pop
push
cmp
inc
mov
loopne
nop
out
mov
aam
gs
test
jmp
scas
add
fwait
jg
movsl
mov
xlat
push
cmp
adc
pop
fsubl
outsl
arpl
std
push
jle
mov
out
or
jae
lret
xor
or
adc
inc
sbb
das
movb
packsswb
into
xchg
or
bound
dec
movsl
jl
and
jp
cmp
les
mov
rcll
daa
sub
xor
outsb
divl
cmpsb
iret
or
fldenv
js
jp
mov
sbb
xor
jne
cmp
test
push
addl
outsb
outsl
andl
ret
mov
sbb
int
shll
faddl
pop
push
add
roll
jb
hlt
xchg
les
sahf
adc
dec
add
jnp,pn
pop
push
es
loope
rcrl
and
pop
add
cmp
push
sbb
mov
mov
lret
loope
rcrl
and
pop
add
cmp
push
sbb
mov
mov
lret
loope
rcrl
and
pop
add
cmp
push
sbb
mov
mov
lret
loope
rcrl
and
mov
mov
aad
in
cmc
int3
int3
int3
int3
int3
mov
dec
mov
sbbl
rcrl
cmpsb
sub
sbb
or
jl
outsb
mov
mov
dec
mov
sub
cmp
or
pusha
sub
sub
sbb
add
jl
pop
mov
movsl
push
xchg
pop
in
hlt
cmp
or
sbb
mov
add
add
sbb
aad
ret
xor
in
cmp
mov
add
in
insl
test
add
cmp
adc
fst
sub
mov
mov
mov
pop
mov
jne
and
pop
aas
and
push
sti
or
imul
mov
mov
mov
pusha
test
add
int
mov
sub
cmp
orb
and
adc
insb
aad
mov
cmp
cmp
ljmp
sti
insb
mov
push
in
dec
cmc
fistpl
sbb
sub
lock
add
pop
ret
stc
mov
int
test
jmp
mov
push
mov
sub
cmp
or
sbb
enter
test
mov
shrb
stc
dec
clc
pop
dec
mov
dec
int3
dec
cmp
inc
stc
outsl
lods
push
icebp
and
rorl
cld
pop
nop
inc
in
je
popa
lahf
jl
mov
dec
mov
sub
sub
fldcw
xor
cmp
cmp
fmull
int3
sbb
sub
sbb
or
jl
insb
mov
mov
dec
mov
sub
cmp
or
sbb
sub
sbb
or
jl
insb
mov
mov
movsl
lcall
pushl
adc
mov
jl
lahf
cmpsb
ja
enter
out
mov
add
sbb
scas
push
push
ja
mov
ljmp
and
sub
arpl
test
inc
vcvtdq2ps
shlb
je,pn
xchg
or
lret
outsl
das
push
pop
cwtl
pop
cmp
push
mov
push
test
pop
xorl
xchg
mov
test
mov
lret
lods
rcrl
insb
test
inc
or
jbe
adc
mov
test
dec
push
cld
adc
mov
stos
jge
lcall
pop
aad
push
ss
xchg
xor
push
add
out
xchg
call
dec
xor
push
shl
mov
and
xchg
shlb
popa
jp
xchg
cmp
add
jle
sti
dec
mov
xchg
inc
pushl
les
lcall
xor
dec
mov
xchg
mov
cmp
inc
mov
stc
ret
rcrl
xlat
in
in
push
mov
add
push
mov
ret
push
or
ljmp
out
push
aas
inc
in
cli
push
xor
repz
pop
pop
pusha
shrl
xor
sub
dec
les
add
fistps
mov
mov
stos
inc
sahf
cwtl
xchg
dec
lock
stc
fldpi
push
sub
imul
movsl
dec
jle
mov
lods
and
push
mov
imul
push
or
repz
lods
cmc
pop
pop
test
mov
test
imul
fs
mov
mov
outsb
jmp
push
aas
test
xchg
mov
adc
push
add
outsb
inc
sbb
je
aad
jns
scas
sub
test
dec
popf
arpl
sub
ja
test
cli
inc
fmuls
sub
movsl
shrl
xor
fiaddl
jns
mov
mov
xlat
mov
push
lds
fstpl
add
mov
cwtl
nop
mov
mov
adc
cmpsb
pushf
test
lock
dec
cmp
imul
bound
mov
mov
cwtl
sub
sub
xor
daa
jp
pop
sub
dec
cmp
imul
pop
loop
sub
mov
jle
stos
xor
enter
in
push
cmp
pop
hlt
fs
jne
outsl
and
adc
mov
loope
nop
mov
jne
ja
out
mov
cwtl
xchg
pop
lock
or
fstpl
push
movsb
pop
stc
enter
pop
jmp
and
imul
inc
pop
inc
cmp
mov
push
mov
add
mov
addr16
fs
dec
jns
mov
fbstp
mov
fstps
mov
push
mov
push
imul
nop
pop
cmc
dec
dec
pop
mov
mov
dec
ja
lahf
or
pop
inc
movsb
mov
bound
inc
cmp
sbb
sub
and
lahf
sub
mov
int
jo
sbb
int3
aaa
les
cmp
jp
mov
jl
popa
fiadds
pop
lret
ud0
cmpsl
int
dec
and
mov
std
imul
out
cwtl
popa
lods
lret
clc
mov
dec
orb
pop
in
add
inc
loopne
and
pop
jp
cmpsb
popf
push
imul
push
loope
mov
punpcklwd
data16
lds
scas
das
out
dec
cmp
sbb
mov
in
in
cmpsl
jne
cld
insl
cmp
dec
jnp
push
sub
and
or
nop
cmpsb
lods
pop
mov
pop
mov
fwait
cmpsb
xchg
xor
jp
lahf
imul
out
shrb
mov
sbb
aas
jg
mov
mov
pop
popf
pop
lea
push
adc
daa
fyl2xp1
jmp
xlat
loopne
loop
insb
pop
ljmp
jns
xchg
orl
aas
jmp
std
stos
xor
cmp
int3
ja
fistpll
fistpl
push
mov
push
sti
or
fnsave
mov
adc
stc
movsb
in
sub
cmpl
or
mov
mov
push
outsb
iret
push
sti
push
add
in
dec
sub
push
mov
test
and
into
movsl
xchg
mov
adc
sbb
pop
and
dec
cmpsl
push
aaa
mov
xchg
ljmp
cwtl
aad
mov
sti
aad
arpl
fmuls
clc
mov
dec
xor
stos
cmc
sbb
push
jne
push
mov
dec
mov
jb
inc
and
pop
sbb
sub
xor
les
jl
mov
mov
jnp
add
cmc
call
cmpb
cmp
mull
xchg
les
dec
mov
sti
aaa
add
cmp
xor
shrb
fs
lret
mov
or
ror
es
mov
sub
jmp
jae
repnz
dec
sbb
shll
scas
pop
pop
ret
js
out
pop
add
fcompl
cmp
int
inc
push
adc
mov
leave
and
jg
testl
imul
xor
push
data16
dec
out
fsubrl
mov
dec
pop
sub
and
sahf
int
je
clc
or
jo
sti
adc
repnz
add
out
add
dec
pop
mov
or
jp
cmc
xchg
movsl
movsb
mov
jmp
mov
mov
faddl
sbb
mov
cmp
inc
and
sahf
hlt
fadds
movsb
insb
js
xor
fisubl
mov
adc
lahf
dec
or
lret
add
mov
mov
cmpsl
es
or
xchg
lret
cli
push
aad
and
pop
data16
ss
cmp
aas
push
lea
cmpsb
mov
xor
movsl
and
call
lahf
repnz
shrb
bound
ja
xor
sub
mov
dec
fnstsw
or
ljmp
sub
mov
and
je
pusha
xchg
lock
test
adc
pop
xchg
or
std
jae
cmpsl
out
scas
push
xor
aaa
mov
jmp
in
and
push
mov
leave
hlt
mov
notl
flds
push
or
arpl
jl
int3
mov
subb
mov
or
cmp
fwait
sbb
push
ret
cmc
loope
popa
loope
imul
cmpsb
stc
adc
mov
push
mov
fwait
inc
ljmp
aam
cmpsb
mov
pop
and
ret
jg
cld
sbb
in
mov
mov
int3
ss
push
cmp
sub
sbbb
add
adc
ljmp
pop
cmpsl
jo
mov
push
andl
arpl
fiaddl
imul
ljmp
aad
stos
mov
movsl
jbe
rorl
jmp
xorl
pop
and
call
sub
xor
dec
stos
and
stos
fld
ret
jg
test
in
into
maxps
mov
and
out
in
cmpl
pop
pusha
popl
cli
inc
lret
adc
xorb
or
das
cmp
and
jp
ja
lcall
xchg
inc
add
and
sbb
or
dec
push
out
out
add
ja
je
data16
das
sbbb
out
loopne
xor
out
and
sahf
imul
xor
clc
popa
mov
aas
dec
mov
sar
mov
xor
mov
icebp
movsl
inc
lods
mov
shlb
add
std
ja
addr16
pop
sub
test
data16
lret
lock
rcr
inc
shrl
mov
inc
pop
arpl
fdivrs
pop
nop
cmp
das
xchg
cmc
jl
push
mov
stos
push
and
add
scas
jle
leave
dec
shll
addr16
add
pop
cmpsb
xor
movsb
test
fwait
xchg
mov
xchg
hlt
mov
or
mov
dec
std
fs
aas
jge
pop
jb
mov
and
lcall
sub
arpl
pop
push
popl
mov
in
sbb
out
sarl
shl
ficompl
adc
daa
mov
mov
aad
fistl
sub
push
mov
fsubrs
popa
test
sub
adc
repnz
jp
test
mov
or
sti
fcmovbe
mov
sub
and
mov
iret
dec
jbe
dec
push
pop
xor
lcall
mov
clc
sub
cmp
mov
mov
sub
sti
adc
push
and
adc
or
scas
mov
icebp
flds
imul
jmp
not
xchg
xlat
push
test
jp
jp
pushf
mov
jle
mov
mov
dec
cwtl
jae
pop
shr
leave
sub
mov
leave
fildl
sub
call
xchg
cld
sub
or
cmpsb
insb
daa
dec
cmpl
jge
inc
aad
mov
mov
out
shrb
pop
dec
int
push
ljmp
ja
mov
leave
sub
mov
and
push
nop
push
lock
mov
fildl
mov
xchg
pop
repnz
pop
je
sbb
pop
mov
inc
cmpsl
jb
jp
std
and
cmpsb
xor
andl
dec
leave
pusha
sub
pop
adc
mov
cli
lcall
dec
cmpsb
in
mov
rolb
leave
adc
testb
push
sub
jo
mov
fadds
pop
mov
inc
pop
mov
mov
inc
leave
cs
ljmp
mov
mov
or
outsb
sbb
inc
dec
iret
aaa
pop
das
cs
xchg
cmpb
subl
xchg
xor
lods
ss
cmc
xor
testl
add
sbbl
in
andb
jnp
xchg
fs
lds
sub
fsts
in
and
mov
not
fadd
add
xor
lea
pop
shl
fnstenv
jmp
mov
test
adc
add
jo
xchg
ja
sub
loopne
xlat
loop
dec
xchg
adc
cmpsb
loopne
add
adc
enter
gs
repz
scas
fmul
xor
cs
jle
push
subps
xor
mov
jge
ret
rcll
mov
jp
mov
lods
outsl
iret
mov
or
sbb
out
shll
cmpsb
lcall
dec
sub
xchg
xor
inc
aad
repnz
movsl
insl
adc
je
jl
lods
cld
add
lahf
pop
out
popf
daa
out
push
rcll
movsl
cmc
mov
jnp
test
pop
xlat
dec
sub
jb
movsb
pop
pop
cmpsl
sbb
mov
jmp
mov
inc
add
push
hlt
lods
cmp
pop
jnp
dec
mov
push
imul
adc
enter
psubb
jno
je
idivl
enter
pop
mov
pop
push
dec
ss
jle
popa
jns
adc
leave
mov
fnstsw
or
ja,pn
dec
xor
or
std
sbb
and
aam
sub
add
pusha
xor
sbb
xchg
dec
inc
adc
add
shrl
or
popf
adc
cmp
sub
add
stc
or
gs
movsb
rcr
icebp
xor
cltd
outsl
cmpsl
push
sub
dec
scas
test
insb
cwtl
mov
cld
fcomp
mov
mov
test
bnd
int
cmp
loopne
fnstcw
les
pop
nop
jnp
daa
std
and
xor
lock
outsb
movsb
jns
dec
xchg
pop
fwait
xchg
mov
mov
insb
and
in
lods
push
incl
outsb
jns
sub
xchg
clc
add
xor
pop
cmp
test
mov
xchg
mov
mov
es
ret
and
mov
and
lods
fsubr
xchg
jp
and
xor
push
scas
outsl
cmp
mov
jne
or
xchg
jae
in
cmp
jb
ret
test
addr16
dec
jg
es
or
ds
inc
orl
or
cmp
jno
addl
lock
pusha
call
imul
adc
addb
and
xorb
pop
push
and
sub
adc
imul
mov
data16
shll
fcoms
insb
inc
in
ret
xchg
sbb
sub
setbe
bound
fdivrp
cld
mov
inc
dec
jmp
xchg
iret
out
dec
xchg
xchg
mov
xchg
mov
sub
das
int3
leave
repz
pop
cmpsl
lret
cmp
xlat
xor
leave
pop
push
inc
fldcw
sbb
xchg
in
je
pop
jp
lods
in
mov
movb
push
mov
push
mov
or
sahf
push
dec
adc
dec
xlat
dec
pop
je
cmc
inc
pcmpgtd
fnsave
cmp
or
mov
adc
idivb
mov
jmp
enter
negl
divl
scas
daa
sbb
pop
lcall
aas
jne
in
mov
add
jmp
lret
dec
adcl
inc
mov
sbbb
orb
movsb
jnp
xchg
and
jge
int
push
fisttpl
xor
pop
xor
sbb
loop
mov
incb
movsl
push
xor
xchg
add
jg
mov
mov
jp
cmp
dec
xchg
mov
fcompl
lcall
cmp
cmp
lods
addr16
add
aas
aaa
mov
mov
insl
movsl
testl
arpl
inc
cld
xor
imul
jo
call
int3
pop
sbb
jp
arpl
add
stos
cld
lret
fadds
movsl
adc
cmp
jb
cmp
pop
dec
data16
push
ja
adc
sbb
leave
popa
sub
pop
mov
in
mov
out
into
mov
cld
jo,pn
jbe
cld
loop
dec
fwait
mov
test
hlt
mov
pushf
fimuls
or
mov
push
movsb
mov
xchg
jno
xor
adc
xchg
inc
in
mov
ret
and
call
add
push
jns
mov
ror
cld
fcomip
popa
out
enter
or
cmp
neg
fadd
sbb
out
hlt
mov
dec
aaa
jle
movsb
pop
popf
adc
lds
mov
mov
mov
jl
inc
xchg
nop
outsb
inc
aas
sarl
mov
ljmp
push
out
jae
in
aaa
inc
imul
icebp
lods
inc
inc
lea
jne
cmpl
or
repz
adc
out
clc
push
lahf
lcall
pop
push
aad
inc
int3
mov
xchg
stos
adc
fmul
das
adc
stos
cmc
in
pushf
scas
test
fucomi
mov
pop
pop
push
jb
mov
xchg
jmp
std
test
pop
mov
xchg
push
cmpsb
add
mov
pop
loope
sarb
mov
call
js
push
pop
in
movl
xchg
insl
fldln2
movsl
sbb
push
fisubl
jg
ds
add
adcb
xchg
fsts
mov
mov
out
mov
bound
sub
lahf
jp
popf
aaa
ljmp
call
or
rcrb
divl
sub
jp
ret
imul
aaa
or
sahf
or
adc
dec
fs
jecxz
test
jecxz
xor
dec
adcb
xchg
adc
cmp
mov
dec
jg
mov
into
rep
jo,pn
jbe
pop
inc
gs
cmpsl
inc
enter
dec
push
jle
test
imul
mov
lea
dec
les
ret
and
negb
mov
xchg
jnp
std
or
xor
xchg
js
jb
sti
xchg
sbb
rorb
xchg
sbb
mov
push
das
sbb
loope
ror
adc
testb
clc
xor
xor
data16
sub
cmp
popf
roll
ss
ds
lods
sbb
rcrl
and
mov
jl
xchg
push
xchg
in
cmp
lods
repz
push
cmpsb
imul
pop
inc
adc
rorl
dec
xor
mov
sarb
dec
push
mov
and
lock
dec
shlb
pop
aaa
or
into
cmp
mov
cmp
sub
popf
mov
mov
sbb
mov
or
imul
xchg
enter
xchg
jnp
jnp
daa
jno
jg
mov
mov
movsb
mov
aas
pop
xchg
sub
sarb
sarb
push
mov
subl
fstpl
in
pop
push
mov
mov
stos
sbb
and
inc
push
in
and
cmp
hlt
push
cmp
jnp
dec
mov
out
in
fmulp
std
xor
and
icebp
cmp
fisubs
xor
cmp
sub
pop
fs
inc
fs
fcomip
xor
in
in
mov
pop
cmovle
add
stos
or
inc
or
xchg
push
scas
and
movsl
int3
mov
pop
jnp
dec
cmp
push
imul
add
fnsetpm(287
lods
mov
push
ret
jbe
orb
mov
mov
cltd
pushf
xor
test
repz
nop
lret
fwait
pusha
roll
call
in
adc
inc
lret
inc
sub
cmc
push
stos
adc
mov
lahf
scas
rolb
stos
sbb
cmp
es
jb
xlat
mov
in
jg
mov
mov
stos
mov
enter
sbb
or
push
add
or
push
in
cmpsl
sbb
and
mov
testb
jg
and
daa
stos
xlat
lods
xor
dec
addb
sti
mov
inc
hlt
pop
aad
movsl
jle
jl
pop
or
xor
sub
jg
mov
lock
xor
repnz
push
mov
int
mov
nop
aas
js
mov
adc
into
sbb
hlt
pusha
jnp
pop
fdiv
adc
inc
or
mov
test
fimuls
mov
lcallw
lods
mov
in
mov
int3
mov
outsl
inc
ja
int
push
push
mov
mov
dec
jno
and
mov
pushf
call
mov
bound
mov
mov
cmc
pop
inc
inc
adc
jo
jge
and
mov
sbb
repnz
or
pop
rcll
test
cli
sbb
fildl
or
lods
lahf
adc
call
sbb
fnstsw
fdivl
bnd
lods
stc
ficompl
int
xchg
sbb
in
dec
mov
dec
je
movsl
cmp
add
in
test
jle
xchg
test
mov
ds
int
mov
sbbb
rcrl
into
or
daa
sbb
push
fs
lds
ljmp
dec
fsub
sub
cltd
cmp
jp
shrb
dec
dec
sbb
sub
pop
in
adc
es
daa
rcrl
xor
cmp
scas
ljmp
lds
lret
int3
ja
cmpsl
xor
cli
jno
lods
les
shlb
mov
hlt
sbb
lock
je
sub
jmp
cmp
cmpsb
xacquire
fstps
push
repz
cmpsb
dec
and
test
aas
inc
mov
scas
fcomp
outsb
fbstp
in
jno
cmp
call
lret
cmp
sarb
out
mov
cli
and
cmpsb
es
push
sub
and
push
add
inc
sarl
idiv
loop
mov
lds
imul
fwait
out
insb
mov
arpl
jmp
lods
sahf
jbe
xchg
rcrl
push
xchg
add
jne
mov
sarl
sbb
daa
inc
push
aad
pushf
jle
sub
data16
pushf
ds
xor
test
cltd
into
push
aam
jecxz
stos
and
pop
jle
mov
inc
xor
notl
aam
aam
imull
mov
mov
add
and
aam
pop
mov
add
push
out
cmpsl
cmpsb
sti
sub
into
test
mov
pop
xlat
stc
fstpt
jle
movsb
ret
xchg
ss
xchg
jle
sub
sub
push
xchg
clc
stos
xchg
inc
mov
xchg
lret
aam
jb
insb
mov
in
jns
fwait
aas
mov
add
mov
dec
int3
icebp
mov
xchg
or
gs
je
pusha
or
add
mov
shrl
int3
cmp
xchg
cmp
mov
mov
jno
push
xchg
lret
sub
xor
or
push
sbb
test
clc
sbb
ljmp
lahf
pop
lock
iret
sbb
sub
negl
sbb
sub
ljmp
and
and
mov
test
push
popf
add
daa
stos
outsb
mulb
repz
jmp
dec
inc
cltd
pop
imul
cwtl
jp
lret
mov
repz
jb
lcall
mov
pop
mov
rclb
lcall
sbb
popf
mov
jecxz
xchg
gs
test
fdivp
sbb
jns
call
pop
xchg
cmc
mov
dec
xchg
inc
jmp
bound
sbb
jecxz
xchg
daa
loop
push
cmc
sbb
sub
mov
push
inc
or
push
cmp
push
push
mov
push
jge
xchg
insb
jp
or
push
sbb
xor
dec
xlat
sub
add
icebp
mov
mov
push
bound
xorl
jecxz
call
iret
ljmp
mov
adc
sbb
js
xchg
lret
xchg
xor
loop
push
fstpt
jmp
sbb
or
cmpsl
push
xchg
jo
int
jns
scas
adc
std
sub
cld
shlb
pushfw
xchg
enter
jbe
add
roll
cmp
fstps
mov
pop
inc
pop
cmp
pop
pushf
in
frstor
jge
xchg
jo
dec
or
das
inc
aad
jbe
sbb
sub
sbb
xchg
and
les
sub
scas
pop
loope
stos
xchg
add
fwait
adc
cs
lods
mov
es
sete
loopne
rcll
cmpsb
add
sbb
das
ret
das
xchg
repz
inc
and
outsb
dec
or
push
mov
pop
jns
mov
sub
out
insb
test
mov
sub
cmp
or
sbb
sub
sbb
or
jl
insb
mov
mov
dec
mov
sub
cmp
or
sbb
sub
sbb
or
jl
insb
mov
mov
dec
mov
sub
cmp
or
sbb
sub
sbb
or
jl
insl
mov
mov
dec
mov
sub
cmp
sbb
call
or
or
in
mov
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
mov
movsb
and
hlt
mov
ljmp
xchg
add
je
fs
aad
movsb
and
hlt
jne
jmp
xor
and
jne
add
xor
fs
xchg
inc
lds
push
and
ljmp
pop
push
push
jl
popa
negb
mov
sbb
fidivl
in
push
lock
in
push
dec
out
popf
jae
pop
pop
dec
push
mov
xor
fs
pop
mov
add
pop
adc
push
cmc
xchg
std
clc
xchg
mov
cmp
push
aam
dec
dec
xor
and
setb
cmp
repz
add
add
fs
in
adc
int3
xor
or
or
xor
mov
sbb
inc
xchg
dec
and
orb
insb
and
dec
inc
adc
cmpsl
mov
push
inc
test
cmpsb
fs
les
dec
cmc
cmp
or
or
mov
popf
push
popf
stc
hlt
aaa
sbb
inc
out
xor
test
adc
gs
mov
int
fldcw
data16
stos
frstor
and
fwait
add
and
ja
jno
popa
in
push
lcall
stc
jo
fs
in
popf
sbb
sub
jbe
adc
jl
or
mov
scas
fsubs
cmc
inc
xlat
cmpsw
adc
gs
les
mov
movsl
adc
add
je
fs
aad
lds
test
aam
les
mov
movsl
adc
add
je
fs
aad
lds
inc
sub
in
mov
mov
ja
mov
shlb
pop
mov
rorl
cmc
rcrb
sub
not
addb
cltd
daa
pop
insb
and
lds
cmp
call
dec
int3
adc
and
sub
scas
mov
mov
loop
inc
or
adc
mov
test
arpl
mov
fldlg2
inc
movsl
inc
aaa
push
lea
mov
sbb
mov
rcrb
aam
call
inc
dec
inc
and
adc
cli
stos
xor
add
aam
popf
test
jns
arpl
add
inc
push
xor
ljmp
sti
or
sub
or
mov
push
cmp
push
dec
jno
inc
pop
adc
fmull
aad
mov
int
mov
jecxz
and
call
xor
pop
imul
and
push
dec
jg
xchg
sub
mov
cmp
lods
dec
sbb
mov
pop
lods
in
orb
push
xchg
mov
push
ja
es
clc
das
ficoml
imul
jecxz,pt
add
rcrb
ljmp
add
lcall
pop
mov
adc
in
jo
inc
xchg
add
jmp
jge
pop
mov
or
dec
pop
enter
add
fnstsw
sub
jne
mov
or
subb
fwait
push
mov
ret
pop
sbb
ret
mov
mov
cmp
inc
jp
push
xchg
repz
xchg
adc
sbb
xchg
xor
mov
xor
adc
incl
inc
mov
popa
sub
sbb
rorb
in
dec
inc
lds
scas
push
pop
xchg
cmpsb
je
insb
xchg
sar
pop
xor
pop
arpl
push
fstps
mov
fidivrs
push
push
daa
jle
lods
movsb
fistpl
mov
sub
pop
addr16
jmp
aaa
and
jl
int3
pop
pop
fs
insb
jmp
pop
add
jmp
outsb
mov
dec
mov
inc
arpl
and
insb
fwait
jg
lods
fcomi
cs
sbb
pusha
cmpb
and
xchg
daa
xchg
or
adc
ljmp
pop
xor
xchg
inc
mov
fxch
or
or
sub
cmp
adc
jae
ficompl
mov
daa
mov
inc
adc
shl
sub
add
ret
stos
out
cs
xchg
sub
sbb
cmpsl
mov
pushl
and
sahf
xchg
outsl
push
sbb
add
lcall
fcomip
lcall
add
or
div
or
inc
outsb
push
mov
std
stc
mov
into
je
push
cltd
xlat
addr16
mov
bnd
jmp
aaa
mov
cmpsb
outsl
jno
call
xchg
cwtl
shll
sbb
fcoml
mov
xchg
inc
sbb
pop
inc
jo
cmp
lock
cmpsb
insl
pusha
ja
xor
daa
lock
das
rclb
les
pop
inc
std
test
lea
daa
fcos
push
mov
imul
repz
pop
daa
popf
fldl
push
aad
dec
nop
inc
inc
fstpl
sbb
or
xor
xchg
cmp
mov
and
cmpsl
mov
lcall
lcall
iret
push
shll
in
data16
dec
stos
lock
add
lret
jle
xchg
pop
push
adc
push
fimull
pop
mov
lods
push
insb
add
cmpl
iret
bound
repnz
lret
popa
call
loop
pop
shll
xor
adc
add
xchg
mov
or
jno
shll
je
fs
dec
ret
and
jmp
jne
mov
xchg
cmc
mov
xchg
fisttpl
loop
jae
scas
xchg
fcmovnb
xchg
sub
lods
push
push
pop
aam
call
push
sbb
rcl
lcall
jnp
pop
dec
mov
imul
dec
push
in
adc
xor
jecxz
into
and
ljmp
sub
sub
fisttpl
inc
ficoml
push
imul
jl
and
int3
and
sbb
mov
or
ja
popf
add
inc
lock
in
inc
dec
add
mov
jecxz
pop
dec
icebp
or
add
or
xchg
push
adcl
inc
inc
leave
ljmp
out
inc
push
add
ret
pop
mov
cmp
jl
int
pop
inc
dec
mov
mov
add
cwtl
jo
ja
xor
sbb
adc
sahf
movsl
std
imul
sbb
pop
sarb
jo
inc
sub
lret
mov
test
mov
stos
aam
fwait
sbbl
jg
fcmovu
xchg
push
cmp
sub
jnp
ljmp
jl
pop
inc
repnz
adc
divb
pop
inc
pop
lcall
addl
xchg
in
imul
push
sar
mov
dec
les
scas
aad
inc
mov
mov
sbb
push
push
mov
mov
data16
in
and
mov
add
cmp
cmp
pop
sbb
test
int
into
hlt
sub
cmp
mov
dec
inc
cmpsl
mov
repz
or
cld
test
fwait
push
in
sbb
mov
or
scas
fdivrl
fidivl
mov
xchg
cmp
repz
addb
xor
jb
fisubs
jno
cmp
xor
lock
faddl
dec
pusha
fcoms
cmc
lahf
mov
outsl
pop
mov
push
dec
mov
sbb
jno
xchg
cmp
xor
mov
or
push
test
mov
test
orb
cmpsb
insb
push
fisubrl
jl
sub
lods
xchg
std
pop
sarb
cld
push
fidivrs
insb
mov
sahf
cltd
mov
sub
stos
das
ss
adc
cli
mov
sbb
sbb
sti
std
cmp
ss
mov
in
lea
or
push
das
mov
adc
adc
inc
lcall
dec
dec
int
out
sbb
test
fisttpl
fimuls
pop
dec
aas
repz
fucomp
testl
lret
stos
repz
pop
adc
xor
cmp
jecxz
sahf
xor
stc
inc
sub
inc
xchg
add
repz
repnz
dec
pop
jae
out
xchg
sahf
mov
notl
dec
and
es
inc
outsb
mov
fdiv
mov
and
dec
fidivl
fs
loope
fs
insl
test
xchg
pop
add
out
insb
inc
jle
adc
dec
jnp
int
popa
dec
ss
push
jo
inc
xor
das
xchg
mov
fidivrl
pushf
ret
mov
lock
popa
jnp
pop
add
mov
sub
cld
dec
add
lods
aas
gs
xchg
mov
mov
add
sub
adc
or
pop
push
hlt
pop
jg
cmpsl
jno
push
push
pop
xchg
stos
mov
mov
inc
loopne
ret
imul
push
cmp
jp
ja
mov
xchg
fwait
pop
add
xchg
addr16
pop
mov
mov
pop
enter
adc
lea
inc
pop
enter
cvtdq2ps
inc
push
cmp
cwtl
pop
cmp
pop
call
dec
or
fisubrs
jo
leave
hlt
or
imul
mov
imul
enter
add
sub
cmp
or
add
loopne
push
scas
jae
data16
adc
lahf
mov
ret
je
pop
into
std
push
fildll
xor
sub
lods
xchg
xor
xor
mov
push
jge
es
push
gs
and
fldcw
inc
dec
xchg
add
or
push
testl
inc
js
adc
jecxz
movaps
scas
cs
dec
stos
sbb
js
adc
push
lahf
jno
mov
lahf
and
stos
and
cli
jmp
std
dec
jae
xchg
cmp
pop
ja
cmp
or
push
add
je
mov
pusha
mov
mov
les
cmpsb
mov
rolb
mov
mul
repz
pusha
aad
shll
inc
cmp
les
push
sbb
sbb
add
dec
cmp
cmpl
movsl
sahf
cmp
push
aas
lds
mov
shl
rorb
dec
adc
push
mov
mov
sub
jle
add
mov
dec
lcall
adc
or
dec
adc
movb
adc
or
push
adc
adc
dec
mov
out
ljmp
mov
imul
out
rolb
mov
insb
scas
pop
push
push
scas
jb
test
lds
inc
arpl
or
pop
mov
or
inc
test
icebp
mov
icebp
int3
rcll
lea
icebp
cld
mov
sub
mov
xchg
dec
jnp
aas
xchg
and
pop
mov
fmulp
push
es
cmp
sub
jecxz
dec
faddl
mov
push
pushf
jge
dec
xchg
push
add
sti
jecxz
shrl
es
xchg
mov
aam
fsincos
or
xchg
lds
mov
icebp
sub
fsqrt
lds
mov
add
mov
pop
push
shrb
in
xorl
scas
adc
in
pop
jg
addr16
sbb
je
negb
pop
add
cmp
stos
lods
xorl
outsl
xchg
jns
cmp
shl
data16
aad
and
js
pop
flds
push
aas
clc
inc
fidivrl
lds
mov
mov
add
xor
mov
mov
in
xor
inc
hlt
inc
roll
xchg
pop
push
ffreep
cld
test
sub
cmpl
sub
bound
jge
inc
add
addr16
dec
push
dec
or
in
test
shrl
cld
mov
daa
repz
mov
out
mov
jle
sbb
mov
add
ss
and
lods
mov
loope
xlat
push
repz
fisubrs
mov
rcr
dec
sub
or
xchg
mov
lods
sub
loopne
push
mov
push
push
popa
aad
jg
pop
jle
dec
cwtl
aaa
cs
mov
lea
mov
cmp
adc
mov
pop
jmp
mov
out
stos
and
lret
int3
aam
lods
fidivrs
mov
mov
lds
fcoml
or
shll
sbb
arpl
jp
cmp
jne
std
repnz
sbb
std
out
test
mov
mov
jg
pop
mov
sbb
outsl
shlb
pop
cwtl
not
enter
lock
cmp
ds
dec
add
mov
push
addl
popa
sbb
cli
ss
mov
xchg
or
dec
ficoms
lret
push
xchg
push
out
push
insl
pusha
dec
mov
and
xchg
or
ret
mov
or
jle
mov
jb
pop
xor
hlt
push
xchg
out
xor
sbb
jecxz
je
ss
lods
xchg
movsl
jbe
popa
adc
adc
xchg
dec
out
aad
push
add
sti
mov
pop
out
push
mov
fisttps
and
inc
push
pusha
mov
sub
iret
ficoml
rcll
pop
push
pop
test
call
inc
xor
cltd
push
dec
ss
pop
ret
add
icebp
std
mov
std
xor
dec
mov
or
inc
insb
ja
fmuls
in
xchg
fstpt
pop
int3
add
loopne
mov
or
mov
sbb
insb
outsl
andl
sub
icebp
sub
push
aad
lods
dec
adc
jne
hlt
hlt
xor
aam
inc
xor
clc
xchg
adc
popf
lret
icebp
in
lcall
je
push
xorl
pop
push
in
fsubrp
jp
sbb
clc
xlat
leave
rorl
mov
mov
inc
imul
icebp
icebp
push
xor
neg
clc
or
outsl
or
jg
call
adc
adc
js
add
mov
aam
test
xlat
pushf
cmp
jp
roll
repz
push
mov
adc
filds
push
insb
push
int3
call
rcrb
fucompp
xchg
fisubrs
popa
ret
out
xor
mov
js
enter
mov
lds
cmpsl
adc
loopne
or
clc
int
adc
add
inc
sbb
fstps
mov
outsl
jo
paddsw
out
push
sub
popf
mov
test
adc
in
sub
and
ret
jns
clc
adc
mov
mov
mov
scas
or
inc
or
dec
mov
dec
aas
not
push
fcmovne
sub
decl
adc
cmpsb
push
mov
pop
out
stc
pusha
mov
add
gs
push
test
inc
jg
dec
mov
xchg
je
push
lahf
pop
test
daa
sub
mov
xor
add
jge
mov
leave
xlat
push
push
mov
pop
subb
xor
loope
icebp
pop
pusha
ljmp
adc
fmuls
push
je
or
mov
sub
mov
dec
mov
ljmp
ficoml
sbb
insl
movsl
lret
js
bound
fistpl
and
fcomps
movsl
mov
push
out
cmp
in
xor
jmp
xchg
mov
cmc
bound
inc
out
loopne
cli
xor
jp
add
shlb
enter
lods
xchg
aad
lea
xchg
jae
inc
add
adc
lahf
fs
xchg
push
test
sbb
dec
jg
dec
outsb
cmpl
xchg
loop
dec
xor
outsb
icebp
stc
dec
out
imul
inc
adc
aad
xchg
xor
jl
push
lea
inc
ret
sbb
xchg
lods
fisttpll
loope
xchg
loopne
mov
hlt
sub
test
push
jnp
xchg
cmp
out
shl
adc
lahf
int3
mov
xchg
jp
or
in
icebp
sti
xor
sbb
stos
mov
iret
scas
stc
nopl
pop
cmp
addr16
cmp
push
and
dec
xchg
lcall
xchg
inc
cli
lret
ds
mov
aad
inc
fdivs
in
xchg
mov
ficompl
sub
adc
fstps
add
or
mov
xor
gs
loope
sub
data16
inc
insl
jnp
sti
mov
js
pushf
cwtl
jmp
rorb
loopne
sahf
cwtl
js
mov
jg
ror
or
mov
movsl
or
int3
leave
sbb
cmp
icebp
fcos
sti
int
roll
mov
jne
addl
pop
lret
lock
or
pop
sbb
push
sub
out
out
lahf
xor
pop
or
imul
sbb
sub
add
cmp
xchg
in
push
jae
inc
mov
out
mov
cwtl
roll
xchg
mov
mov
enter
or
dec
rclb
test
icebp
xchg
fistl
out
push
test
pop
imul
jae
out
mov
pop
pop
add
push
lahf
out
dec
and
or
sub
mov
popf
jg,pt
adc
cmpsb
push
dec
mov
icebp
loop
es
in
or
adc
mov
popa
and
mov
dec
in
sti
loopne
dec
pop
lods
jno
pop
cmp
push
add
ficompl
push
rorl
add
xchg
mov
scas
icebp
js
loopne
cmp
jmp
cmp
pop
adc
sbb
push
mov
ret
sbb
fistpl
shlb
stos
loope
or
push
fwait
icebp
add
push
shl
pop
mov
fisttpll
rorb
imul
mov
call
dec
adc
pop
in
cli
aad
popf
icebp
cmp
sti
pushf
mov
jne
cmp
loop
addr16
adc
xchg
inc
imul
pushf
add
int3
jle
xor
lock
xchg
xchg
ds
mov
imul
xchg
shll
sti
push
cmp
dec
lods
adc
mov
loopne
lds
and
push
loopne
jns
testb
or
mov
jg
enter
imul
push
add
jo
push
pop
cltd
sbb
jno
mov
or
out
and
mov
or
cs
call
lods
fmul
push
mov
mov
outsl
dec
out
sub
push
mov
repz
imul
fnsave
add
and
xchg
iret
stos
aaa
dec
in
mov
aad
pop
push
imul
js
mov
mov
ret
out
mov
fwait
lea
xchg
lock
lea
sbb
lahf
push
dec
sub
mov
imul
gs
fwait
leave
fwait
js
dec
xor
iret
xchg
jecxz
mov
jmp
pop
push
je
and
js
inc
push
dec
out
fisubrl
clc
sbb
cmpsl
inc
test
lods
roll
push
inc
jo
sahf
jnp
adc
push
fistl
dec
adc
push
mov
lcallw
lds
fnstenv
pmaxub
repz
pop
aas
mov
push
or
pop
mov
nop
shl
sbb
mov
into
jbe
call
or
push
cmp
pop
shrl
add
lods
or
imul
dec
or
ret
jbe
xor
lods
sub
popa
push
shll
push
ror
test
data16
fcomps
popa
das
dec
and
add
mov
push
pop
out
addr16
add
movsl
lods
xor
sbb
mov
ss
pop
arpl
daa
jae
mov
popf
sbb
lcall
pop
hlt
add
cltd
mov
popa
mov
pop
sahf
bound
shl
loop
repz
ret
imulb
push
push
fwait
popl
gs
sub
push
add
lea
mov
jno
stos
pop
adc
les
and
inc
popf
push
dec
adc
mov
fcompl
inc
mov
rcll
sub
mov
int3
stos
iret
and
out
mov
aam
sub
and
adc
ss
sbb
nop
inc
add
adc
adc
jo
ljmp
ret
sbb
int
or
pop
inc
sub
jecxz
sub
pop
cmc
out
jb
repz
pusha
push
jbe
shrl
mov
ljmp
fwait
mov
sub
leave
pop
mov
inc
jae
jns
data16
inc
pop
lods
push
mov
mov
inc
mov
in
cwtl
and
or
sbb
sub
cmp
jle
sub
stos
dec
cmp
push
aam
adc
les
cmp
loope
sahf
fimull
insb
mov
mov
xchg
lods
cmp
add
mov
loopne
movsl
inc
out
mov
jl
sarl
fsts
int3
push
lock
rolb
cwtl
repz
repnz
pop
jg
fwait
orb
int3
fnstsw
and
in
divb
push
fucomip
inc
sbb
push
outsl
cmp
or
jns
add
insl
xor
lahf
xchg
add
shrb
pusha
lcall
push
cmc
adc
xchg
lret
scas
or
sub
pushf
cmp
jbe
pop
sarb
repz
add
clc
jmp
movsl
xchg
aas
mov
xchg
nop
lcall
mov
daa
add
push
cs
mov
shl
std
in
cld
loopnew
nop
lret
jae
adc
js
in
xor
sub
stos
rol
pop
add
sti
push
pop
xor
sub
inc
jno
push
push
cmpsl
cmp
popf
imul
mov
lea
mov
add
fwait
dec
ljmp
out
sbb
daa
mov
xor
fbstp
lahf
pop
loopne
dec
dec
mov
and
push
test
outsb
xor
and
pop
jmp
mov
dec
mov
ret
dec
aam
hlt
cmp
ret
dec
in
dec
xchg
inc
jb
jle,pt
ret
and
mov
push
or
jl
mov
insb
movsb
ror
insl
sbb
xchg
dec
insl
loopne
faddl
cli
daa
fdivrl
and
js
mov
sti
or
fs
lahf
jmp
mov
cld
fadds
loopne
cmp
ret
sub
lods
cli
sti
sub
rclb
mov
aam
inc
cli
jne
xchg
inc
cmp
lcall
xor
xchg
popa
das
add
mov
xchg
mov
loop
repz
mov
mov
inc
push
add
push
mov
mov
and
fstpl
idiv
pop
in
pop
pop
cwtl
movsb
xor
xchg
add
push
es
enter
pop
pop
add
cmp
pop
inc
fs
add
cmpsb
pop
jne
jbe
test
pop
mov
lret
fdivs
inc
xchg
jbe
jp
std
aam
and
pop
movsb
or
leave
lods
adc
movsb
jle
cmp
push
fdiv
mov
ja
arpl
test
push
lret
dec
xchg
clc
inc
mov
daa
dec
inc
sar
pop
in
ret
mov
pop
xchg
pop
sub
pop
bound
outsl
xchg
into
movsl
inc
or
movsb
insl
lcall
push
scas
push
xchg
call
jge
dec
inc
lcall
ror
cmp
es
push
add
scas
mov
imul
bnd
xchg
dec
jl
add
push
fsts
sbb
in
sub
ds
pushf
cli
flds
push
add
std
popa
cmpsl
stos
adcl
call
clc
in
pop
jae
pop
out
xchg
and
sub
jg
stos
test
jns
movsb
adc
jmp
inc
inc
arpl
aad
inc
sbb
sub
push
movsl
adc
stos
push
stos
test
dec
ljmp
test
dec
jmp
cmp
out
and
outsb
push
vpmovsxwd
out
leave
add
ljmp
adc
negb
stc
shl
fsubs
std
pop
mov
mov
add
adc
mov
mov
idivb
sahf
lods
ret
dec
adc
dec
xchg
js
jg
adc
push
cwtl
lock
inc
ret
lds
dec
stos
xor
mov
popf
mov
add
addr16
and
hlt
jne
gs
les
mov
movsl
adc
add
je
fs
aad
lds
test
aam
les
mov
movsl
adc
add
je
fs
aad
lds
test
aam
add
xor
and
in
add
je
je
push
cmc
lods
lds
adc
hlt
gs
inc
inc
xor
fisttpl
mov
jge
sbb
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
loope
stos
pop
fwait
daa
mov
in
cwtl
ja
or
sbb
sub
pop
testl
stos
daa
mov
sti
inc
jmp
adc
xchg
xchg
jg
fnstenv
pop
out
mull
daa
xchg
aaa
loop
repnz
ret
fdivl
xchg
mov
ret
push
andl
or
stos
xlat
je
push
repz
pop
mov
rolb
sar
out
cmovle
xor
dec
fwait
mov
sub
add
repnz
aam
in
push
mov
mov
cmpsb
ss
stos
xlat
shl
dec
lock
ljmp
xchg
xchg
dec
mov
cs
push
cmp
mov
popa
fiadds
push
xor
xchg
inc
push
xlat
cmp
sbb
push
call
stos
int3
sub
xor
orb
or
mov
pop
pop
stos
add
cltd
push
aas
inc
or
cmp
loopne
les
or
jnp
mov
pop
stos
pop
fwait
daa
pushf
aaa
jmp
icebp
push
ja
xchg
xchg
add
jae
pop
out
mov
pop
into
outsb
out
jbe
add
add
sub
pop
mov
nop
ds
cs
mov
outsl
mov
test
mov
mov
loop
in
sarb
mov
dec
mov
incb
dec
xorl
ja
xchg
xchg
sbb
imul
out
idivl
daa
mov
sti
inc
jmp
ja
xchg
xchg
sbb
imul
out
idivl
dec
jecxz
aam
jl
sbb
movb
popf
dec
xor
sbb
in
ror
mov
xor
lock
aas
lret
xor
lds
sub
jp
mov
std
or
fwait
inc
and
mov
aaa
pop
xchg
aad
call
xor
loopne
jg
mov
daa
xor
cli
and
inc
dec
mov
shlb
vmwrite
cwtl
xchg
xor
cmp
adcl
les
jno,pn
sub
loop
xchg
popf
call
push
bound
jno
sub
jbe
mov
out
cmp
gs
adc
push
dec
dec
jo
mov
xchg
push
jmp
repnz
inc
shll
aad
mov
pop
add
fnstcw
in
cltd
subb
lods
push
sahf
dec
xchg
or
sahf
mov
ds
imull
jl
lret
dec
testl
inc
subl
mov
ficompl
jnp
cltd
lods
iret
mov
sysexit
mov
cmp
cmp
and
ret
les
out
xchg
or
adc
out
pushf
lea
mov
mov
adc
mov
adc
or
cmp
push
lret
jle
push
mov
jno
push
ljmp
cld
std
lea
cmpb
mov
das
les
pop
aam
cld
aas
popa
or
insb
data16
rorl
push
imul
into
test
das
sbb
in
mov
push
mov
or
arpl
stos
jg
cmpsb
jo
sbb
add
rcll
jecxz
addr16
sti
sahf
jecxz
push
adc
push
xchg
push
ja
scas
call
xor
rolb
popa
sub
out
rclb
push
fcmove
pop
je
cmp
xchg
sbb
xchg
sarb
sbb
jb
jl
hlt
movsb
mov
sahf
add
push
or
out
jbe,pt
stos
xor
inc
jae
add
lahf
and
pusha
mov
sahf
pop
mov
sub
adc
scas
stc
dec
pop
ret
imul
ds
sarl
adc
rcrl
cmp
cmp
divl
push
gs
xor
aad
fidivs
and
adc
clc
cmp
inc
in
push
loope
mov
or
add
fcoml
adc
test
cmpsl
movsb
sbbb
and
dec
je
push
fdivl
cwtl
pop
xor
adc
jns
cmp
sub
push
cmp
inc
mov
pop
inc
cwtl
mov
std
mov
or
call
push
mov
mov
sub
fdivs
push
mov
push
lds
inc
pop
jo
push
or
pop
imul
es
es
lcall
gs
jp
cmp
xchg
imul
push
or
jne
mov
les
frstor
inc
insb
sub
mov
jecxz
loopne
sbb
push
pop
push
and
mov
loope
out
mov
pop
mov
cmp
mov
mov
xor
inc
test
data16
ljmp
sub
test
out
les
pmaxub
addr16
fidivrs
xor
dec
inc
mov
outsb
dec
cmp
cmp
shl
sbb
dec
xlat
call
mov
and
popa
cmp
sarb
lods
jg
mov
adc
fimull
cmp
cmp
sub
movsl
adc
mov
gs
repnz
and
cli
imul
sub
insl
cs
js
pop
fwait
sbb
and
sub
cmc
popa
sbb
cmp
mov
lds
daa
jb
jmp
fnstsw
jg
inc
inc
mov
jae
sbb
pop
lea
iret
inc
lods
nop
add
int
test
loope
aam
lods
fldenv
jb
sbb
adc
sarl
push
cmpsl
pop
out
bnd
jl
pop
xchg
jl
pop
lret
out
cmp
xor
or
lods
cli
movsl
xor
out
popf
fsts
push
and
mov
jb
lahf
addr16
mov
daa
loop
int
xorl
push
mov
mov
sbb
inc
jnp
adc
call
popf
bound
sbb
in
cmp
and
cmpsl
adc
xor
daa
sub
fists
fmuls
insb
ss
push
js
add
and
inc
add
andb
push
loopne
mov
xchg
mov
push
or
pop
xchg
mov
jo
add
mov
mov
bnd
into
gs
lock
xchg
or
mov
mov
fdivrl
jle
mov
loopne
dec
fbld
test
push
lret
repz
inc
ret
or
fs
sub
jl
mov
xor
ja
push
in
je
pop
xor
in
pop
repnz
xchg
push
mov
pop
or
push
sub
mov
lcallw
dec
inc
xchg
test
movsl
xor
pop
adc
adc
adc
xlat
pop
mov
and
insl
pop
hlt
stos
out
dec
ljmp
xchg
push
movsl
mov
movb
pop
xor
adc
xor
aas
mov
int3
mov
orb
ja
movsl
hlt
cwtl
mov
shll
ret
add
xchg
mov
orb
arpl
xchg
fnstcw
insl
imul
imul
lods
sti
mov
xchg
push
cpuid
sub
lret
dec
adc
js
cmp
or
loop
mov
sahf
bound
dec
shlb
adcl
leave
addr16
jbe
or
push
cmp
pushf
imul
or
lock
mov
dec
mov
xor
jecxz
adc
lock
mov
dec
repnz
fstp
addr16
cmp
ret
int
enter
scas
fstps
bnd
enter
filds
mov
addr16
ja
les
jecxz
and
xchg
pop
cmp
sbb
fimull
std
dec
inc
jbe
ret
frstor
icebp
or
mov
xchg
dec
jb
push
lahf
cli
shll
nop
dec
ror
clc
xlat
and
lahf
daa
adc
cli
inc
lahf
std
cmp
jbe
jns
add
xor
xchg
out
sub
jb
loop
stos
outsb
push
js
in
in
sbb
xchg
inc
sbb
repz
ja
add
pop
je
repz
movb
push
leave
dec
mov
adcl
mov
insb
lods
or
cwtl
jns
out
cmp
jae
lret
jecxz
sub
pop
mov
add
inc
shrb
sbb
inc
inc
ja
pop
push
ljmp
sbb
push
jnp
std
dec
popa
shlb
pop
sub
ds
jp
jo
stos
icebp
cmp
inc
mov
lcall
add
leave
clc
inc
bswap
dec
push
mov
mov
subb
and
dec
sahf
sarl
jmp
xchg
pop
out
push
mov
or
push
xor
jp
cmp
leave
jae
push
and
lcall
inc
sbb
inc
push
fmull
aas
out
lea
jg
mov
imul
add
push
cmpsb
mov
iret
inc
add
packssdw
mov
int3
mov
lods
push
sbb
aas
movsb
mov
iret
inc
je
negl
dec
inc
mov
and
mov
dec
lret
std
fwait
push
xchg
add
or
loope
aas
mov
pop
mov
jp
add
mov
mov
mov
jnp
leave
cltd
xchg
out
pop
mov
add
xchg
xchg
lahf
pop
adc
mov
mov
adc
daa
dec
jp
popa
xchg
leave
cmp
cmp
sub
ficoms
sbb
mov
xchg
and
in
cmc
xchg
cmpsb
or
nop
call
xor
outsl
xorb
pop
pop
lcall
adc
cs
mov
lret
inc
rcll
adc
mov
add
inc
xchg
fistpl
mov
ds
add
jno
ja
push
push
loopne
push
pop
pop
mov
cltd
dec
jnp
sbb
add
test
rorb
lods
xchg
ret
adc
stos
cld
int3
enterw
xorb
je
or
fcmove
xchg
push
cmp
add
cld
addb
ss
add
js
mov
iret
jno
jp
fildl
inc
aas
popa
push
cmp
cmp
sub
fmulp
in
dec
mov
xchg
pop
inc
sub
dec
or
pop
addr16
mov
clc
push
popa
insb
mov
lret
mov
jo
push
scas
pop
mov
xchg
mov
dec
lea
lods
cmpl
mov
fdiv
popa
pushl
push
dec
mov
jl
lahf
stc
ficoms
jbe
lcall
test
push
jns
out
fdiv
sub
cmpsl
add
adc
notb
icebp
hlt
push
fnstcw
ss
mov
shlb
inc
inc
mov
and
push
mov
jae
xchg
mov
ljmp
sbb
lods
mov
dec
ucomiss
fidivl
push
mov
lods
out
mov
xor
jle
mov
les
push
sub
lock
dec
push
inc
fisubs
incb
add
push
int3
mov
mov
cmp
sbb
lea
xlat
mov
xor
sbb
pusha
faddl
test
popf
xlat
push
or
jp
jg
rol
mov
lock
lods
mov
mov
pop
sbb
ds
aas
leave
jnp
push
out
imul
iret
ds
push
push
enter
mov
pop
sub
cli
repz
add
xor
and
jg
cmc
dec
cmp
in
jmp
xor
ret
push
popa
inc
test
pop
repz
insb
lret
jae
mov
xchg
stos
cmp
cmp
dec
icebp
push
ds
xchg
fistpl
mov
fsubr
xchg
xchg
cmp
mov
daa
jmp
sbb
test
xchg
sbb
sti
xor
push
pop
xlat
xchg
inc
mov
sahf
push
aad
loopne
cmpsb
stos
pop
cld
mov
das
or
lret
adc
pop
sub
push
and
mov
cli
sbb
pop
ficompl
sub
retw
cmp
or
ljmp
push
sub
mov
repnz
mov
popa
jb
roll
and
pop
mov
add
add
fidivs
rsqrtps
and
sti
shr
cwtl
adc
mov
inc
jbe
jo
jge
jne
and
fnstcw
xchg
hlt
in
cmp
jle
mov
shr
adcb
push
popa
mov
and
pop
pop
subb
mov
push
fildll
pop
outsl
mov
fiaddl
lahf
fisttps
pop
clc
ret
ss
push
jecxz
test
mov
ret
ds
imul
adc
jecxz
pop
ljmp
or
push
xor
out
mov
cmp
setg
xchg
into
pushf
jbe
divl
scas
je
or
insb
adc
jl
ds
push
sbb
lret
sub
xchg
add
jp
push
repz
call
stc
movsb
dec
or
push
repz
dec
lods
sahf
inc
push
movsl
or
xchg
out
test
gs
inc
stos
lret
xchg
gs
and
sbb
xchg
out
push
jns
xor
add
idiv
cmp
fs
in
inc
mov
mov
js
lods
mov
fldcw
sbb
shrb
mov
push
test
jno
insl
inc
cmc
push
sbb
xchg
inc
sub
shl
scas
jmp
cmp
mov
gs
hlt
lds
scas
add
ljmp
ljmp
sbb
push
lea
pop
mov
ljmp
cmp
add
pusha
and
or
outsb
mov
jp
loopne
sbb
aas
cltd
mov
jg
in
popa
sbb
rcl
ljmp
loop
inc
aad
les
mov
add
dec
stc
stc
lods
lea
mov
cld
cmpsl
dec
pop
je
push
inc
and
mov
push
pop
sub
outsl
iret
lock
sar
adc
jae
xchg
popa
push
inc
xor
je
mov
sub
pop
cmpsb
das
push
push
rorl
or
shrb
inc
rclb
dec
dec
imul
add
cs
sbb
inc
mov
dec
insb
lods
ds
cmp
push
or
mov
pushf
arpl
in
jmp
ds
mov
cmp
cmp
fs
or
into
sub
loope
xchg
divb
bound
in
call
add
lds
icebp
fs
push
out
inc
xchg
rcrb
push
pop
ret
or
mov
mov
sub
cmpb
les
sbbl
callw
inc
loopne
xchg
pop
adc
mov
aam
adc
xchg
sbb
push
xchg
inc
pop
mov
add
dec
mov
mov
push
inc
sbb
push
rolb
aas
arpl
mov
lret
bswap
push
mov
sarb
or
xlat
add
jno
jne
decb
adc
pop
cwtl
inc
cli
int3
js
and
test
mov
addl
pop
adc
mov
mov
bound
dec
arpl
xlat
sbb
mov
out
and
and
aaa
adc
js
mov
flds
mov
cmpsl
pop
mov
mov
cwtl
cmpsb
ret
ds
outsb
cmpsl
jge
sbb
inc
sub
notl
lret
out
or
and
shl
mov
dec
hlt
stc
pusha
hlt
sub
mov
mov
mov
cld
ret
jns
and
xor
mov
scas
and
call
leave
movsl
push
sub
push
shll
ds
addb
sub
add
dec
or
out
xchg
mov
or
subl
sub
inc
cmp
andb
or
dec
repnz
into
clc
or
and
push
jecxz
test
das
inc
xchg
add
and
xchg
pop
jl
xor
cmp
call
clc
cmpsb
push
pop
pop
cltd
test
mov
loop
pop
in
rorl
xchg
mov
rol
inc
das
ljmp
and
into
pop
daa
jmp
je
insl
push
xorb
add
pop
and
jae
cmp
xor
js
popf
mov
shlb
jp
pop
xchg
lcall
add
jg
test
jg
cmc
push
jmp
outsb
hlt
out
mov
jbe
xor
psubsb
xchg
mov
lods
mov
divl
sub
mov
fisubrl
adc
inc
into
pop
or
bound
jl
mov
dec
cmpsb
xor
cmp
or
add
cmp
push
jmp
mov
xchg
inc
rorb
push
adc
mov
loopne
rorb
fs
or
sbbb
sahf
mov
inc
shrb
cmp
push
xchg
fsubs
xor
test
pop
mov
andb
xchg
out
inc
cs
push
jns
pop
outsb
jae
loopne
dec
out
cmc
xor
imul
ror
xor
jmp
sub
aam
xchg
cmpsl
add
pop
pop
push
pop
cmpsl
mov
sub
iret
cld
inc
xor
and
dec
mov
add
fisttpll
gs
push
jno
movl
int
jns
jecxz
jo
aad
jnp
cmc
rclb
shrl
cwtl
in
mov
and
adc
jnp
push
stc
jnp
push
stos
fldpi
outsb
inc
inc
push
cmp
mov
repnz
inc
pop
stos
push
notb
les
xchg
into
adc
test
dec
or
xchg
pop
inc
sbb
or
sub
mov
dec
jl
aam
jge
addr16
lahf
add
stos
dec
jl
int
push
in
inc
dec
mov
push
mov
pushf
aam
lock
mov
imul
and
xchg
jo
and
arpl
rclb
and
mov
adcl
sub
mov
sub
push
jne
push
jne
lods
mov
insb
jo
dec
in
icebp
sahf
xchg
mov
mov
jbe
dec
loop
cmc
add
loop
aad
sbb
sub
outsb
test
pop
xlat
and
ja
loope
inc
jge
cmp
lods
adc
pop
nop
mov
sbb
or
add
adc
fildl
xchg
int3
dec
pop
and
push
cmp
mov
fdivr
xchg
lret
pushf
jmp
adc
xchg
pop
in
cmp
inc
out
test
insl
fnsave
scas
scas
inc
pusha
mov
outsl
mov
jae
xchg
sbb
cmp
cmp
mov
xor
mov
xor
sbb
jg
popf
es
and
or
jbe
sub
xchg
inc
jle
out
dec
adc
xchg
into
pop
xchg
flds
loopne
push
pop
pop
fcmovnbe
inc
mov
push
jge
jp
mov
sbb
pop
sti
xchg
or
lahf
jle
sbb
cmp
mov
or
insl
inc
jno
cmpsl
gs
xor
addr16
push
xor
sbbb
sarl
xor
jo
arpl
sbb
das
sbb
sti
pop
fidivl
pop
pop
inc
icebp
notb
incb
and
sbb
popf
loop
and
stos
mov
or
mov
test
add
lcall
mov
mov
fwait
xor
pusha
pop
mov
inc
popa
mov
jnp
mov
jmp
mov
sbb
out
dec
pushf
lahf
adcl
dec
in
push
cmp
inc
scas
fcoml
ret
xchg
inc
cmp
rorl
in
mov
adc
mov
mov
loop
mov
out
jmp
mov
aad
inc
repnz
xchg
fs
push
push
ss
xor
pop
sbb
loopne
mov
int3
pusha
insl
imul
hlt
jb
scas
ret
jns
inc
je
jl
xlat
fsubl
push
and
xor
mov
test
push
add
pusha
and
push
daa
sbb
frstor
mov
imul
add
adc
ja
inc
jbe
mov
mov
mov
pop
push
addr16
rcrb
test
cmc
cmpsb
ds
adc
dec
daa
das
sub
clc
je
xchg
adc
sbb
outsl
sub
js
ficoml
lods
add
fnstsw
xchg
mov
pop
mov
vcvtdq2ps
or
pop
mov
mov
popa
xlat
dec
nop
pop
push
mov
lret
pop
add
mov
jmp
fs
cmp
pop
imul
inc
shlb
and
int3
push
xchg
out
push
cmp
push
pop
inc
pusha
pop
stos
test
ja
jg
push
aas
test
icebp
or
pop
push
int
mov
add
lock
fcmovnbe
testl
pop
jbe
mov
int3
stos
or
mov
cmpsl
sub
cmc
out
adc
js
inc
and
sbb
pop
enter
mov
cmp
rolb
popa
jle
ss
mov
lret
movsl
pop
cmpb
adc
sysexit
push
das
inc
xchg
jp
addl
sub
lods
push
subl
out
in
adc
jmp
mov
shl
cli
push
int
mov
mov
mov
in
lock
mov
pop
mov
sbb
inc
push
mov
mov
jno
push
dec
dec
int
mull
leave
adc
lea
sarl
inc
lods
fs
xchg
mov
fstpl
out
xchg
sub
or
in
daa
data16
adc
imul
xchg
fnstenv
cmp
repz
popa
xor
insl
mov
flds
fdiv
jae
cmpsb
ss
sbb
mov
xchg
pop
mov
std
push
adc
pushf
imul
ljmp
ficompl
dec
repz
mov
dec
adc
repz
mov
jmp
ret
fidivs
out
push
fistl
sbb
sbb
leave
jno
xchg
xchg
lcall
test
mov
idivl
push
jae
jns
mov
cmp
dec
sub
push
pusha
push
incb
bound
in
and
xor
dec
mov
cltd
fiaddl
adc
pop
call
jl
inc
dec
or
shlb
lods
loop
mov
icebp
xor
jmp
pop
cmp
mov
dec
lea
stc
or
sub
mov
out
cltd
xor
mov
xchg
mov
mov
pop
xchg
test
pop
mov
sub
adc
jge
mov
lret
fisttps
inc
adc
sbb
jb
out
inc
dec
and
in
out
iret
aaa
mov
dec
xor
sub
iret
notb
arpl
xchg
cltd
mov
xlat
jmp
cmpsb
clc
inc
pushf
insb
xchg
repnz
mov
ljmp
xor
ss
std
jno
jo
test
fistl
notb
loope
inc
sbb
cs
push
lock
cmp
int
mov
sti
add
pop
jle
sub
fidivrl
scas
ror
cmc
pop
cmp
lods
or
cli
cltd
fnstsw
loop
in
jae
mov
or
stos
mov
arpl
jle
dec
jmp
xchg
lret
loop
xchg
push
fisubs
adc
and
adc
scas
enter
mov
mov
out
cmp
dec
test
or
ret
sbb
daa
popa
popf
shrb
jge
movsl
jl
jns
adc
pushf
inc
aas
pop
push
jmp
lcall
xchg
cmp
loope
push
je
adc
xchg
fiadds
dec
xor
mov
push
mov
popa
out
add
iret
pop
mov
ds
pop
dec
clts
dec
xor
int3
pop
push
jne
test
push
xor
pushf
mov
mov
inc
jne
cli
add
push
test
pop
cmp
sbb
fwait
add
std
dec
xchg
popf
cmp
adc
je
dec
jmp
add
ljmp
mov
and
and
data16
cmc
repz
dec
addr16
xlat
ror
inc
fimull
shrl
mov
push
pop
pop
dec
lcall
ret
xchg
push
sub
fldcw
cs
aad
arpl
outsb
sub
movsl
jmp
scas
out
popa
inc
jne
push
xor
pop
push
pop
sub
fildl
jp
insb
stos
or
sbb
xor
daa
dec
jecxz
je
sbb
xchg
cmp
push
sub
in
dec
pop
repz
shl
jg
imul
mov
call
inc
js
movl
mov
cs
popa
mov
push
or
out
xor
ja
mov
mov
cmpsb
loop
scas
xchg
or
adc
xchg
daa
mov
sti
inc
jmp
ja
xchg
xchg
sbb
imul
out
idivl
daa
mov
sti
inc
jmp
ja
xchg
xchg
sbb
imul
out
idivl
daa
mov
sti
inc
jmp
ja
xchg
xchg
pop
cmpsl
or
pop
out
testl
inc
jmp
pop
addr16
mov
xchg
cmp
or
jecxz
movsb
sbb
int3
inc
mov
fsubrl
cmp
das
cmc
add
add
add
or
pop
add
mov
add
add
add
add
add
add
add
pop
add
add
addb
add
mov
add
cmp
xor
add
dec
add
add
add
mov
add
add
add
add
addl
addl
sbb
movb
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
add
add
aam
pop
add
add
add
jle
pop
add
push
add
add
add
add
pop
add
out
xor
add
add
add
add
add
add
sub
cmp
xor
cmp
in
dec
add
push
add
add
add
adc
fwait
add
add
add
fadds
lret
add
and
xor
in
pop
add
push
add
incb
popf
add
add
fwait
add
add
add
cmc
add
jne
add
add
imul
add
add
add
add
jo
or
test
mov
daa
add
add
add
popa
add
add
imul
add
add
add
add
mov
adc
add
movsl
add
add
inc
add
add
add
and
cmp
sti
add
add
and
add
add
add
jne
movsl
add
repz
add
add
addb
add
add
add
add
add
add
add
add
jne
outsl
add
add
add
fiaddl
outsl
add
or
cltd
add
xor
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
flds
and
add
add
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
push
add
inc
add
add
pop
add
add
xchg
add
add
iret
add
dec
add
add
jmp
add
add
add
add
add
add
add
add
add
iret
add
add
and
pop
add
movsl
add
add
add
jne
mov
pop
add
add
sbb
popf
add
add
daa
add
jns
hlt
add
add
add
ljmp
add
adc
add
add
out
dec
add
add
add
add
add
add
or
push
add
add
cmp
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
les
add
fwait
add
sbb
aad
add
add
out
and
inc
add
add
add
add
add
ljmp
add
add
add
add
add
add
add
add
add
or
jnp
xor
mov
add
add
add
dec
add
add
or
addl
addl
or
faddl
lcall
add
add
add
add
add
add
test
adc
fcoms
cmpb
jecxz
ljmp
xchg
cltd
call
das
outsl
pop
push
lahf
dec
aaa
push
xchg
mov
mov
sbb
sarl
test
cltd
adc
lcall
jl
dec
add
aas
mov
test
sbb
in
ljmp
addb
out
dec
lods
jne
jbe
iret
addr16
stos
mov
and
stos
xor
mov
push
jle
lods
xlat
cltd
or
push
mov
imul
popf
pop
jp
daa
hlt
nop
mov
sbb
roll
int
dec
sbb
out
and
push
mov
push
push
dec
insl
inc
mov
loopne
push
mov
jle
sbb
in
push
xorb
lcall
rorl
jnp
jno
inc
xchg
mov
or
dec
mov
push
sbb
mov
xor
mov
and
xchg
add
mov
jne
es
loope
adc
and
jmp
push
xlat
scas
int
sti
inc
push
je
scas
or
add
mov
out
out
jp
mov
add
mov
cld
ja
insb
pop
pop
jae
jno
popa
mov
jmp
mov
adc
or
pop
mov
mov
fcmovnbe
fdivrl
push
mov
roll
mov
cld
fcmovne
test
mov
xor
stos
leave
lds
mov
cwtl
xchg
movsb
sub
push
push
lods
push
xchg
mov
lahf
out
bound
jnp
sub
rol
or
ret
jo
imul
push
sbb
rcl
pop
movsb
inc
rcrb
mov
dec
bound
fldcw
jmp
mov
mov
sub
and
mov
inc
xchg
popf
pop
inc
leave
xchg
out
mov
jg
jg
fbld
js
xor
mov
mov
pop
xchg
add
sbb
cmpsl
daa
jmp
aas
xchg
or
sub
mov
lret
repz
pop
xor
fdiv
sub
lcall
adc
dec
in
xor
in
jno
shll
icebp
out
jb
fwait
xor
jge
xor
loopne
xor
fdivrl
imull
inc
dec
xor
add
pop
mov
imul
jle
jecxz
jl
scas
lea
lea
jecxz
pop
push
push
sbb
stos
arpl
xor
adc
adc
xchg
xor
jae
jns
jne
scas
fsubrs
adc
add
and
test
cmc
jl
dec
in
into
or
pop
icebp
mov
dec
sarb
in
sub
fstl
jle
cs
xor
xor
int
mull
add
add
add
add
loop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
add
add
add
adc
add
or
add
add
add
cld
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
add
add
add
pop
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
add
add
add
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
add
pushf
add
add
add
mov
add
movl
sbb
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
add
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
daa
add
andb
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jmp
add
in
daa
add
in
add
fsubl
add
aam
add
int3
daa
add
les
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
sub
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
sub
add
sub
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
sub
add
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
sub
add
sub
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
