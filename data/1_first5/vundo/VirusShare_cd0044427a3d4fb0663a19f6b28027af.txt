add
add
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
dec
ret
mov
dec
bound
cs
add
pop
or
pop
push
roll
mov
les
jae
jae
mov
add
add
add
arpl
jae
push
sub
dec
add
add
add
xchg
lahf
add
jae
xor
add
add
add
add
arpl
loopne
mov
arpl
out
add
xchg
testl
out
add
add
and
mov
fwait
add
add
add
popa
add
add
les
sbb
jae
xor
push
add
add
stos
add
add
les
pop
add
add
dec
add
jae
cmp
add
add
add
add
add
dec
add
add
les
pop
add
stos
add
add
add
cmp
add
add
jae
xchg
rolb
add
ret
add
add
les
jnp
jae
adc
jae
movb
add
les
jnp
jae
inc
add
add
sub
sahf
add
add
jae
or
bound
arpl
jae
pop
add
add
add
jecxz
ja
pop
add
add
add
jecxz
dec
add
out
add
mov
add
jae
mov
lret
add
sub
sahf
add
add
or
popa
add
add
add
jae
and
scas
add
out
add
out
add
pop
add
add
add
add
add
add
add
add
add
push
add
sahf
add
jae
jae
lret
add
int3
add
add
sub
push
add
push
add
add
cmp
and
cmp
jle
out
add
add
xor
add
jae
icebp
add
add
lret
add
sbb
imul
add
cmpsb
add
add
flds
mov
dec
add
add
add
sbb
xor
pop
add
push
add
add
daa
add
add
add
add
or
popl
imul
add
out
add
push
add
sbb
jae
add
add
addr16
add
add
or
mov
adc
mov
add
add
imul
add
addb
add
imul
add
jl
inc
add
jae
loope
popa
add
imul
add
pop
add
add
add
add
test
add
add
and
jae
roll
add
add
add
inc
add
jae
pop
add
add
sbb
add
inc
add
add
push
add
push
add
add
add
add
ret
add
out
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
sub
mov
add
xchg
test
or
out
add
sbb
add
add
and
add
add
add
jmp
add
add
sbb
add
add
add
jae
jae
sbb
add
sub
imul
add
add
add
add
add
jae
or
popa
add
add
lret
add
add
add
add
xor
and
or
out
add
add
jne
imul
add
push
add
les
jae
jae
mov
add
add
add
jae
jae
mov
add
add
add
add
add
pop
add
add
add
add
mov
add
addl
jp
cmp
mov
mov
jae
add
out
cmp
push
add
add
pop
add
add
lahf
add
dec
add
inc
add
dec
push
bound
or
das
scas
xchg
sub
dec
xor
cmc
add
mov
xor
pop
cmp
add
xchg
loope
sti
cwtl
movsb
stos
xor
pop
shl
adc
or
sbb
or
xchg
jbe
dec
in
mov
insb
mov
and
insl
pop
push
nop
add
push
aad
push
mov
add
sub
outsb
jo
testb
in
mov
sbb
sbb
and
int3
popf
mov
int
repnz
fimuls
sti
imul
dec
out
dec
lods
or
stc
and
lahf
sub
jbe
xor
lcall
sar
adc
ss
push
sub
xorb
mov
in
pop
push
mov
sahf
in
test
adc
xor
dec
jp
mov
shll
pop
xchg
bound
jmp
imul
sahf
jp
xor
mov
sub
sbb
cmpsb
lock
out
js
loope
stos
pop
xchg
sub
pop
movsl
int
cmp
fmul
xchg
jns
rol
shrb
add
add
fadds
xchg
and
jecxz
or
les
xchg
xchg
imull
mov
and
jecxz
jns
and
cmp
cmpsb
pop
add
pop
cs
and
push
mov
lret
jge
add
shr
dec
sub
and
loope
enter
cmpsb
push
loopne
test
cs
test
adc
mov
inc
leave
mov
fdivrs
pop
repnz
push
pop
lcall
fsubr
jb
mov
out
ror
daa
adc
test
shlb
sub
pop
sbb
out
rcr
xor
fucomip
iret
jne
cmc
mov
add
pop
push
pop
mov
pop
jmp
push
jns
andb
push
shlb
or
inc
lret
leave
loope
xchg
sbb
adc
dec
insl
dec
inc
mov
xchg
stc
mov
cmp
mov
stos
adc
cmc
es
scas
out
data16
mov
fstps
mov
fstl
xchg
jg
mov
popa
ljmp
lods
jle
cmp
sub
cmp
ret
inc
lods
dec
lods
cwtl
lcall
inc
jmp
pop
insb
xor
fwait
popf
mov
adc
repz
mov
scas
outsl
lods
xchg
and
sbb
dec
addr16
cmp
mov
loope
dec
and
fsubrl
lds
stc
int3
lret
jb
dec
push
out
data16
int
cli
fdivrp
mov
add
adc
das
mov
jmp
xor
fs
push
add
aam
sti
mov
dec
add
add
add
add
loop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
pop
and
push
push
dec
gs
mov
test
xchg
cwtl
in
cmc
test
test
pop
and
push
jne
inc
sub
clc
test
xchg
cwtl
mov
aad
and
jo
add
jne
inc
sub
movsl
jmp
cmpsl
notl
mov
xor
jl
insl
push
adc
stc
into
out
ficomps
xor
jno
mov
nop
mov
cltd
mov
jbe
mov
xor
lock
shl
dec
add
push
icebp
enter
mov
and
cs
insl
mov
mov
call
cmp
fsubl
cwtl
lock
mov
pusha
pop
adc
or
sub
int
pop
jne
in
or
iret
test
or
gs
push
mov
jne
fdivs
pop
push
stc
stc
jp
xchg
pusha
mov
cmc
inc
lds
mov
out
or
daa
mov
out
jge
sbb
xchg
and
push
jne
inc
xor
movsl
shlb
and
cmc
mov
and
adc
jne
sub
fcomp
movsb
mov
loopne
loope
cmpsb
in
nop
lret
fwait
aaa
inc
sub
pusha
sbb
cmp
xor
test
hlt
into
xchg
int3
mov
adc
add
dec
or
inc
sub
movsl
enter
call
cmc
mov
and
push
jne
inc
sub
movsl
enter
call
cmc
mov
and
sbb
je
or
sbb
imul
pop
jnp
xchg
adc
mov
mov
movsb
sub
outsb
pop
flds
cmpl
jno
or
jb
popf
xchg
in
or
sub
jo
mov
in
aaa
andb
scas
stc
dec
dec
mov
movsb
mov
inc
cli
xor
lahf
lahf
mov
imul
hlt
fstpl
mov
cs
sbb
and
push
xchg
movsl
mov
or
repnz
lcall
xor
cmp
push
and
inc
add
subb
cmp
pop
das
xor
and
or
inc
arpl
sbb
int
mov
inc
es
pop
js
insl
fcoml
sub
cli
or
ja
les
dec
xor
xor
xchg
jbe
dec
cltd
call
movsb
insl
outsb
pop
mull
mov
imul
or
stos
movsb
push
inc
inc
push
movsl
pop
shll
dec
stc
test
pusha
push
push
sub
pop
in
outsb
sub
mov
push
sti
js
fsub
rcr
cmp
pop
ja
xchg
jae
js
fistps
test
testb
lahf
mov
lds
inc
push
popa
mov
push
das
push
fisttpl
push
shlb
pop
scas
idivl
mov
ret
incb
nop
sub
ljmp
fsubr
fisubrl
fnstcw
dec
cmp
repnz
cmpsl
or
push
inc
and
jnp
stos
loopne
xchg
cmc
fnstcw
in
mov
adc
fstp
jae
pop
test
lcall
mov
int
xor
dec
outsb
enter
out
out
sub
dec
in
orl
xchg
aad
jge
clc
push
dec
mov
pushf
clc
negl
jle
lea
jb
pop
loopne
cmp
lods
pop
lock
inc
ljmp
insb
rorb
cmp
cmc
nop
jnp
cli
mov
loop
je
mov
das
out
mov
out
push
push
insl
roll
xlat
nop
rol
daa
xor
xchg
add
mov
mov
cmp
xor
test
lcall
orb
pop
fwait
xor
ja
iret
pop
test
jae
test
xchg
ja
loopne
cmp
cli
in
xchg
mov
jmp
ror
stos
inc
ljmp
rolb
mov
repz
sub
fsubrs
cmp
out
dec
nop
ffree
inc
popf
pop
adc
dec
repz
in
ds
inc
jmp
lock
ljmp
dec
stos
lahf
cmp
test
addb
in
sbb
lret
mov
jne
cmc
jbe
inc
xor
xor
jno
add
push
xor
hlt
push
scas
cmp
jl
stc
shrl
jecxz
mov
inc
cmp
pop
repnz
pop
fwait
cmp
cmp
fdiv
inc
aam
mov
mov
add
test
xor
in
lods
sub
jb,pn
mov
push
aaa
ss
sbb
dec
stos
push
cwtl
faddl
dec
aaa
dec
int
xchg
push
cmpsb
jns
sti
stos
movsl
xchg
fstl
adc
mov
enter
and
call
sub
mov
pop
popf
pusha
fnsave
xchg
xchg
lret
and
xor
out
push
pop
cmc
push
imul
and
sti
or
test
aam
sbb
pushf
bound
mov
shr
shrl
push
xchg
int
xchg
xchg
test
incb
adc
pushf
aas
pusha
test
ror
int
add
cld
push
bound
or
push
pop
loope
leave
stc
stos
pop
je
aaa
or
call
aad
cli
pop
sbb
mov
inc
xchg
in
repnz
mov
enter
inc
ljmp
sar
add
daa
lds
sbb
repnz
lret
rcl
fs
cs
xchg
add
das
lods
pushf
or
add
mov
dec
cmp
stos
jne
cmpsb
sbb
in
and
jo
mov
xchg
std
ds
add
ret
inc
stos
sub
cmp
mov
int3
orb
outsl
je
imul
int
push
inc
lds
sub
jmp
add
or
inc
flds
inc
inc
add
and
lea
fadds
and
iret
jb
and
xor
jmp
out
mov
or
sti
cli
stc
and
adc
add
outsl
mov
int3
jmp
add
cmp
ret
insl
mov
xchg
push
jle
push
fmull
mov
mov
cmp
push
lea
shr
je
lds
ljmp
lods
lahf
inc
ss
sbbl
outsb
sbb
xor
lret
lock
sbb
fmulp
push
cld
sarl
jns
dec
dec
sbb
out
cmp
sbb
outsl
sbb
inc
andb
aas
clc
dec
flds
subl
push
outsb
in
mov
pop
test
or
cmp
push
inc
xor
sarb
imul
arpl
out
and
push
sahf
cltd
pop
and
cmpsl
dec
pop
int3
dec
mov
mov
push
jbe
leave
add
imul
sbb
nop
mov
shl
repz
icebp
popf
and
mov
add
div
ret
daa
mov
in
jno
sbbl
adcl
rcll
or
std
sbbb
add
mov
mov
sbb
fcoml
mov
repnz
dec
mov
dec
or
insb
or
xchg
cmpsb
lret
mov
xchg
mov
dec
sbb
in
testb
movsl
add
xor
sub
clc
add
imulb
sbb
or
xchg
imul
or
rcrb
cmp
mov
aad
mov
leave
pmaddwd
sbb
hlt
cwtl
add
in
jnp
ret
cld
notb
arpl
xor
lds
out
sahf
push
pop
jmp
std
jb
cmp
fists
inc
loop
insb
repnz
pop
clc
cli
arpl
sti
add
dec
out
pop
dec
sub
es
adc
dec
and
clc
les
dec
dec
sbb
sub
sti
and
pop
gs
out
sub
mov
enter
dec
out
ret
arpl
sub
leave
push
inc
sbb
es
movsb
jg
rep
sarb
push
clc
adc
roll
cltd
mov
test
cmp
pop
mov
bound
lret
pop
sbb
stos
insl
mov
and
inc
mov
sbb
fnstenv
mov
pop
push
adc
in
movsl
repnz
lret
mov
ja
cmpsl
or
addr16
cwtl
lods
push
push
sub
pop
xchg
stc
ds
adc
out
das
loop
adc
xchg
xchg
insl
filds
ss
push
cmp
cmc
inc
ret
nop
daa
lock
jbe
in
xor
in
adc
mov
and
adc
push
das
lretw
les
dec
ja
adc
or
mov
mov
mov
loopne
xchg
cmp
imul
jae
ret
lds
mov
cwtl
xor
xchg
xchg
aam
jae
sti
sub
jge
mov
jl
cmp
lods
mov
jno
daa
fwait
push
ss
sub
mov
sti
cltd
test
add
movsl
jo
inc
and
xchg
mov
xchg
add
sub
call
push
mov
out
mov
or
addr16
test
lahf
cs
addr16
mov
sub
pop
daa
dec
mov
gs
cltd
xor
test
jecxz
xchg
ret
lahf
iret
clc
gs
lods
jne
mov
or
stos
outsl
mov
xor
cmpsl
js
fdivrl
jl
insl
xor
inc
lahf
loope
push
cmp
jle
sti
jle
mov
mov
sub
cltd
mov
lret
aad
push
sub
pop
addl
push
test
pop
subl
mov
add
jb
xchg
and
loopne
inc
cmp
or
mov
and
add
jae
bnd
mov
rol
cmp
add
lcall
fsubrl
jge
adc
pushl
fwait
mov
and
popa
lea
jne
or
add
inc
test
fcoms
lea
mov
mov
out
add
and
out
ljmp
xor
push
mov
test
jbe
push
xor
sbbl
fstl
pop
jle
mov
push
cmp
lods
arpl
out
mov
aad
pop
cwtl
aad
and
sub
jns
movsb
div
cmp
rcrl
pop
or
adc
push
loopne
stos
mov
sub
insb
orl
adc
sbb
mov
xor
pop
aas
mov
xchg
data16
dec
call
add
outsl
dec
in
adc
jg
shll
int3
fucom
stos
jb
adc
xor
cmpsl
subb
mov
push
sbb
inc
lret
cmp
fsqrt
hlt
ret
mov
jge
pop
and
movsb
repz
das
loop
xorl
sets
pop
scas
sub
push
xchg
jae
xchg
mov
paddd
out
cltd
inc
addb
push
sub
andb
adc
arpl
sub
lea
jb
cli
out
stos
add
mov
dec
aam
add
sbb
xchg
outsb
inc
hlt
or
inc
scas
cwtl
add
push
cli
or
pop
add
jne
pop
sarl
sti
imul
xor
jl
sbb
pop
pop
lock
fisubl
sub
call
sbb
hlt
fwait
jl
push
adcl
pop
jecxz
xchg
push
and
lds
mov
sbb
xchg
push
mov
fstps
ficompl
loop
stos
mov
push
shrl
push
sbb
and
fwait
ret
stos
fldcw
mov
mov
xlat
inc
imul
std
xor
mov
jnp
push
nop
mov
js
xor
xorl
in
jle
ljmp
into
icebp
and
popa
jns
dec
and
js
add
pop
loopne
mov
cmp
jno
add
sub
sub
sub
pop
scas
mov
push
xor
fs
lods
xchg
sbb
test
and
lods
popa
jmp
popa
push
mov
lret
sbb
loopne
mov
adc
sub
int
jne
movb
mov
adc
sub
sub
mov
push
mov
cmpsl
jo
push
popa
jp
imul
adc
push
sbb
cmp
cmp
lcall
xchg
lret
inc
xor
xchg
jnp
jle
add
xor
xchg
adc
cmp
test
xchg
cmp
and
add
push
popa
mov
dec
imul
dec
mov
aad
mov
fincstp
sti
mov
inc
xchg
push
cmpsl
fdivrp
int3
or
pop
rolb
adc
cli
es
data16
js
repz
insl
stos
mov
adc
inc
mov
in
repz
loop
xor
notl
xor
adc
bound
and
cwtl
mov
shll
gs
sub
icebp
mov
fsubs
sub
arpl
fmull
xor
add
js
movsl
mov
ret
lahf
add
push
sub
or
pop
pusha
cmp
outsb
scas
cmc
xchg
jp
sbb
push
mov
inc
dec
cltd
mov
test
test
jecxz
stos
mov
push
mov
mov
stc
inc
cmp
pushf
add
mov
fdivl
mov
icebp
mov
pop
mov
xor
jne
mov
jg
fwait
jbe
inc
mov
jle
jnp
mov
xchg
test
subb
mov
dec
mov
xor
and
inc
dec
out
xor
jb
dec
subl
xchg
mov
bound
sub
xor
gs
inc
nop
lods
adc
push
or
push
xchg
xchg
dec
and
inc
inc
push
mov
mov
ss
add
jecxz
out
fisttps
imul
vpor
mov
shr
xchg
movsl
scas
in
sbb
repz
pop
or
ja
outsb
or
pop
xchg
stc
xchg
fistpll
dec
pusha
lea
repnz
shl
xlat
ss
mov
adc
xor
aam
xlat
cmp
dec
into
ret
outsb
mov
arpl
mov
jmp
inc
into
insb
or
and
enter
add
int3
ss
dec
jmp
sbb
gs
cmc
mov
mov
xchg
ja
mov
fidivl
mov
in
mov
lahf
clc
push
ja
jp
fstpl
dec
sub
and
rcrl
xchg
cmp
int
inc
fiadds
test
mov
enter
inc
jge
ljmp
jl
add
or
xor
jb
sbb
lods
loop
fcompl
jle
repz
test
or
adc
scas
sbb
jg
outsl
popa
jl
push
mov
ja
fwait
popf
mov
stc
test
jne
and
mov
pop
pop
loopne
repz
jmp
rclb
out
loope
push
out
xchg
or
inc
faddl
gs
divb
cmp
lods
add
fstp
mov
sarl
mov
sbb
shrb
push
xchg
cmp
gs
and
aas
sti
fsts
cli
jge
mov
cmp
pop
jge
pop
jl
ss
dec
jbe
cmc
iret
pushl
popf
int3
mov
bound
sub
and
cmpsl
mov
shll
jl
nop
mov
sbb
xor
ror
dec
xor
loopne
mov
rcll
fdivrs
pop
push
add
fwait
shll
jecxz
jmp
xchg
sub
inc
and
adc
mov
paddusw
xchg
push
in
std
fisubrs
lock
pop
or
ss
lcall
lret
lods
xchg
mov
mov
or
shrl
and
js
or
xchg
mov
ficomps
outsl
faddl
pop
mov
insb
int
pushf
adc
mov
dec
cmp
jo
dec
mov
cmpsb
jno
les
mov
sub
inc
dec
inc
cld
sbb
mov
pop
bound
fidivrs
sub
fs
mov
pop
push
into
or
adc
pop
mov
mov
cmc
sti
jl
out
mov
sbb
jp
adc
or
inc
rcl
or
jno
lret
mov
mov
ret
ss
scas
jno
dec
mov
jb
mov
rcrl
icebp
xor
mov
in
mov
in
out
test
lret
scas
imul
lcall
mov
xchg
ljmp
push
shlb
bnd
jns
adc
les
dec
fldt
daa
rolb
inc
cmpl
movsl
jbe
or
lea
sbb
mov
or
movsb
inc
cli
roll
cmc
ja
adc
and
fistpll
xchg
stos
inc
fdivp
xor
mov
sub
jecxz
mov
jb
add
fdivl
out
cmpsb
rclb
cs
mov
das
call
lcall
and
lods
lret
or
pop
and
rcll
ds
mov
jb
aam
and
ret
test
sbb
pop
out
mov
add
cmp
jno
test
mov
push
rol
inc
dec
mov
mov
nop
addr16
mov
jecxz
enter
add
inc
mov
push
shll
sbb
xchg
fwait
std
mov
repnz
andb
inc
mov
loop
xor
nop
inc
inc
test
pop
popf
arpl
add
push
jne
stos
lods
and
inc
mov
and
movsb
test
cmp
push
les
test
scas
int3
in
xchg
xchg
sarb
ffree
push
sub
xchg
jb
sbb
imul
je
outsl
inc
fbstp
cmp
lahf
ret
sbb
mov
cld
push
inc
repnz
cli
add
mov
lcall
lcall
pop
imulb
aaa
lds
cmp
mov
jnp
les
test
movsb
testl
push
popa
pop
inc
mov
inc
loop
stos
fnstsw
lcall
lret
aas
roll
rclb
jl
inc
bound
adc
aam
fisubl
pop
in
addr16
xchg
icebp
sbb
lods
push
mov
adc
enter
adc
push
stos
cmc
mov
dec
imul
test
rcr
mov
cltd
repnz
imul
add
sti
xchg
inc
xor
jl
stc
xchg
aaa
mov
imul
push
repz
loop
hlt
in
clc
das
push
mov
and
dec
enter
cmp
pop
dec
mov
add
inc
push
lret
daa
push
push
pop
loope
scas
shrb
or
mov
stos
int
xlat
into
rclb
xchg
dec
clc
jo
repnz
sub
ret
jbe
and
pop
jge
inc
inc
or
in
mov
popa
jns
rcrb
filds
clc
push
dec
mov
rclb
mov
pop
push
fs
xor
ds
fs
aaa
int3
test
icebp
out
ss
aaa
ret
mov
xor
shlb
sub
jmp
lahf
std
jge
adc
ljmp
pop
cmp
in
mov
fs
jecxz
jnp
sub
popa
mov
mov
and
adc
or
adc
cmc
mov
lds
std
jp
cwtl
and
js
pop
add
pushl
add
testl
call
pop
pop
fdivs
or
xor
inc
lea
aas
divb
dec
sub
and
push
cmpsl
pop
pop
fimull
loopne
daa
out
and
arpl
dec
shrl
call
jne
push
jae
adc
sub
movsb
sbb
pop
loope
lret
popa
inc
jae
mov
or
sar
in
fnstenv
pop
xchg
add
lods
lret
sti
stos
aad
mulb
fcmovne
mov
clc
outsb
jnp
lret
cmp
mov
and
dec
sbbl
push
lret
stos
dec
cs
leave
xor
add
cmc
fwait
nop
dec
mov
in
push
pop
fbstp
scas
pop
lcall
cs
inc
mov
mov
leave
inc
lret
stc
fidivs
add
xchg
pop
js
xor
outsb
pop
cmp
sbb
xor
lret
jnp
xchg
add
hlt
loope
aaa
jbe
jle
jg
mov
loope
and
jmp
ffree
and
int
lcall
push
outsw
sarb
push
fisubrs
add
jne
sub
movsl
popa
mov
sub
cmp
fs
rclb
push
dec
dec
sti
aas
pop
pop
cmp
sbb
push
jge
or
mov
test
into
dec
imul
loopne
mov
fsub
cs
loopne
mov
xchg
mov
mov
ficompl
lea
cmp
sahf
xchg
lahf
dec
and
icebp
dec
scas
pushf
rcl
dec
rorl
add
pop
fnstsw
jns
daa
sti
aaa
mov
lods
xor
filds
pop
ljmp
sahf
mov
cmp
mov
xchg
daa
loopne
jmp
outsb
sbb
rorl
dec
outsl
inc
sahf
fistpl
stos
mov
fadd
add
sahf
xor
cmp
add
sbb
inc
mov
mov
xchg
bnd
sbb
rorb
pop
jmp
movsb
mov
movsl
inc
jnp
movb
out
xor
mov
aas
cmp
inc
or
pslld
daa
sbb
sub
fildll
ds
mov
sbb
es
pop
mov
lcall
push
scas
int
int
das
cs
jns
inc
dec
pop
and
mov
neg
adc
mov
mov
pop
lods
cwtl
popf
iret
sub
loope
shl
dec
mov
pop
test
add
or
mov
push
out
stos
icebp
enter
and
sti
push
xchg
jns
adc
incb
fadds
cltd
cmp
std
fistps
push
push
stos
sbb
push
jg
or
dec
insl
or
jge
add
bswap
sub
loop
aas
ja
negb
fadd
rclb
movsb
add
cmp
push
xor
cmp
mov
test
ss
dec
insb
sub
data16
call
fimuls
sbb
mov
push
add
popa
gs
cmp
mov
out
cltd
out
test
xchg
leave
adc
jge
cwtl
jne
lds
orb
jbe
push
dec
and
lea
fcomi
jg
bnd
ljmp
xor
mov
out
jl
cmpsl
mov
xlat
dec
jmp
push
xlat
sbb
dec
mov
dec
or
ficoms
mov
pop
popa
mov
cs
mulb
adc
dec
cmp
jb
xchg
xchg
loope
mov
mov
lahf
sub
je
fsubs
mov
ret
sub
hlt
add
arpl
push
lods
ds
ret
enter
out
pop
ja
xchg
fwait
sub
das
out
dec
fs
call
dec
push
or
idivb
jp
imull
mov
aad
les
idivb
cmp
mov
sbb
orb
inc
jle
mov
mov
scas
xchg
adc
std
cmp
inc
or
sahf
mov
lret
inc
push
and
icebp
lret
insb
fmulp
rcrl
jmp
jnp
daa
lea
xchg
enter
mov
pop
cmp
xor
lahf
enter
sub
dec
mov
adc
sbb
je
xor
sub
popa
push
clc
push
cltd
out
subb
inc
xchg
sub
push
jge
pop
add
xor
push
loop
lea
test
out
lods
rcrb
pop
adc
jle
lods
rorb
nop
jo
pop
dec
pusha
adc
add
imul
sub
pop
sbb
mov
rclb
add
xchg
sarl
and
and
jns
sub
mov
cli
mov
push
icebp
sbb
mov
add
push
or
mov
mov
icebp
cli
cmp
ret
inc
mov
je
cld
inc
lahf
add
loope
pushf
les
ret
jp
and
push
adc
add
cwtl
mov
pop
divl
fidivs
arpl
sbb
jne
inc
sub
movsl
enter
call
cmc
mov
and
push
jne
inc
sub
movsl
enter
call
cmc
mov
and
push
jne
inc
sub
movsl
enter
call
cmc
mov
and
push
jne
inc
test
daa
movsl
aaa
pop
push
test
loop
insl
add
inc
cmp
int3
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
jno
popa
mov
inc
test
je
fs
shrl
shrl
pop
mov
imul
inc
test
adc
add
icebp
sbb
or
cmp
imul
inc
mov
shlb
adc
add
icebp
cli
loope
mov
sbb
daa
fildll
out
imul
int
and
and
lcall
sbbb
xchg
jg
mov
jne
test
xor
movsb
xor
push
sbb
aaa
sbb
popa
pop
cltd
iret
loope
sub
fdivl
mov
push
cltd
out
int
xor
insb
out
add
test
dec
hlt
xchg
xor
pusha
mov
mov
xor
out
mov
icebp
negb
dec
or
mov
repz
mov
jns
mov
sub
loope
sbb
sub
mov
xchg
mov
mov
sub
ret
mov
mov
lea
mov
jns
cltd
popa
sahf
push
test
and
adc
add
icebp
add
adc
and
xor
jns
or
xor
and
pop
xchg
inc
test
insb
lods
inc
aam
enter
aad
jb
adc
ja
dec
sti
adc
jecxz
nop
dec
test
sub
es
orl
fadds
xor
add
icebp
sbb
or
cmp
sub
jns
imul
inc
test
adc
add
icebp
sbb
or
cmp
sub
jns
imul
gs
fs
push
nop
cwtl
jge
aad
out
je
lret
sbb
and
lret
and
lret
int
jp
inc
int3
insb
sub
push
es
xor
dec
push
xchg
sub
inc
in
sub
shr
cmpsb
cltd
lret
pop
rcrb
mov
std
int3
xor
aas
or
cmp
aam
daa
pop
enter
cmp
pop
sbb
xor
inc
push
cmp
fwait
dec
sbb
jmp
cld
ljmp
movsb
out
pop
mov
pop
add
xchg
pushf
mov
data16
idiv
push
std
push
mov
mov
cltd
loop
ret
push
jbe
pop
push
popf
cwtl
outsl
in
mul
mov
or
in
test
jae
mov
dec
call
mov
jmp
aad
cmp
ja
mov
xor
mov
fcmovnu
jb
jg
int3
orb
test
cmp
ret
mov
pusha
sbb
xchg
push
cld
dec
aaa
fsts
add
outsb
xchg
in
inc
mov
int3
sub
sahf
and
rol
fcmovnbe
sbb
cld
xor
xor
cli
cltd
icebp
adc
mov
lret
pop
call
ljmp
hlt
pop
inc
rcrl
cs
mov
mov
and
movsb
pop
arpl
std
or
into
enter
cmp
daa
xor
mov
fisttps
imul
jo
ret
cmp
add
cmpsb
pop
lea
out
jb
test
stc
popf
xchg
mov
xchg
xor
aas
jle
push
sti
lock
rcrb
cld
lds
mov
fadd
inc
dec
mov
xchg
cmpsl
fstps
je
xor
insb
shrb
and
sbb
mov
shrb
enter
sub
lahf
dec
enter
mov
push
mov
gs
xchg
xchg
daa
filds
jge
sbb
adc
ds
in
sbb
in
arpl
inc
scas
jp
inc
xchg
add
lods
xchg
mov
sti
jl
rorb
movsb
imul
push
cs
std
in
lret
add
ljmp
nop
retw
cmp
cmp
mov
xor
cmpl
inc
loopne
mov
inc
lods
shll
jl
int
lcall
sbbl
flds
scas
ss
sbb
push
lahf
sbb
and
imul
lock
sbb
jle
mov
popf
sbb
inc
dec
jecxz
push
lret
xor
sbb
imul
cmpsb
xor
popa
out
insl
mov
or
sti
cltd
popf
add
cmp
jp
mov
mov
daa
mov
inc
or
rep
xchg
and
sti
std
cmp
mov
test
xchg
es
outsl
or
out
in
shlb
enter
in
push
dec
jb
cltd
testb
pop
int3
mov
cld
ffree
inc
rorb
sbb
xchg
int
jg
sbb
daa
mov
cltd
das
sbb
jecxz
int3
test
mov
dec
imul
inc
xchg
mov
pop
cmpsb
lock
mov
add
pop
shrb
je
fnstcw
xchg
cmpsb
data16
mov
mov
add
std
enter
jp
fnstcw
stos
repz
or
mov
into
test
gs
mov
sub
ret
pushf
out
inc
out
inc
repnz
adc
mov
cmpsb
mov
dec
cmpsb
lret
xchg
jecxz
pop
fbstp
data16
std
aas
jmp
add
mov
cmp
cltd
lea
lcall
dec
dec
fisttps
inc
rclb
or
rorl
aad
inc
dec
sub
push
jecxz
add
pushf
cmpsb
es
dec
or
adc
nop
sbb
adc
test
jnp
fistpll
idiv
sbb
jne
lock
xor
mov
mov
add
insb
jmp
mov
mov
mov
and
shrb
sub
cmpsb
sahf
jp
jnp
leave
mov
and
cmc
push
adc
into
mov
push
lds
hlt
inc
pop
xor
inc
dec
fcompl
scas
aaa
push
mov
mov
sub
shl
subl
xor
outsb
aam
pop
push
mov
call
out
cwtl
mov
and
negb
lock
pusha
icebp
cltd
test
adc
cmc
out
mov
pop
sub
push
xor
fisttpl
ds
dec
jmp
push
outsl
scas
lods
lods
pop
jb
shr
out
sub
mov
mov
xchg
xchg
bnd
xlat
scas
call
ja
in
repnz
mov
push
add
mov
cld
adc
or
sbb
out
stc
jne
lods
cmp
lods
sbb
push
mov
fcoms
lock
fcoms
sub
jl
daa
adc
mov
and
mov
call
ds
aaa
lcall
fwait
push
mov
repnz
cmp
inc
movsl
sbb
mov
data16
pop
outsb
xor
and
subb
movsb
pushf
mov
clc
pop
fs
outsl
sahf
jb
insb
ss
or
repz
mov
mov
fimuls
mov
movzbl
sti
sbb
lock
fldcw
mov
pop
xor
enter
out
andb
cmp
dec
cli
dec
add
inc
or
mov
es
jo
mov
jp
in
jl
ss
pop
mov
mov
add
dec
mov
addr16
dec
push
in
sbb
out
dec
hlt
and
mov
insb
ret
add
sub
lahf
movsl
mov
lock
sub
push
cmp
push
int
fldcw
mov
pop
inc
gs
nop
add
push
pop
fs
push
loop
int3
dec
lret
push
inc
add
lea
and
mov
cs
xor
mov
icebp
sub
imul
enter
lods
push
and
jb
lock
movsl
xchg
cmpsl
ficompl
stos
adc
es
dec
adc
dec
in
push
push
cmp
popa
and
aad
pop
mov
mov
dec
jae
jno
arpl
fcomp
dec
or
rorb
pop
and
pop
mov
jo
mov
mov
sbb
pop
jae
cmpsl
out
jecxz
mov
mov
jae
aad
mov
or
cmc
fidivrs
mov
dec
add
dec
mov
push
out
xchg
dec
sub
jecxz
sub
push
repnz
fisubrl
fs
repnz
shlb
out
repnz
add
jne
fmuls
mov
sub
dec
call
jmp
sub
ds
sub
mov
or
push
jl
subl
std
mov
mov
jg
les
cmpsb
out
sbb
lods
cmpsl
into
adc
inc
and
jmp
loop
mov
jo
fmull
negl
data16
ljmp
and
pop
dec
lcall
push
xchg
or
lahf
mov
mov
ret
xor
sub
mov
fcmovnbe
adc
test
mov
lret
fwait
sbb
sub
pop
fsubrs
sbb
pop
adcb
dec
inc
push
cs
fldl
pop
in
test
jg
rclb
std
sti
dec
cmp
push
icebp
jne
int3
sbb
push
je
sbb
push
cmpsl
test
stos
aas
or
add
mov
and
xor
sbb
aad
aas
pop
ja
sub
sub
fnstsw
lret
xchg
das
fdivrs
sbb
xchg
pop
test
sub
xchg
insb
stos
pushf
repz
outsb
outsl
sahf
inc
xor
add
loop
stc
inc
nop
jge
loopne
cmp
test
les
int3
shll
cmc
lcall
inc
and
das
mov
jne
mov
jg
pop
add
ss
and
rolb
inc
add
cmpsl
dec
loope
xchg
test
ljmp
das
xchg
gs
pop
or
xacquire
xchg
fstpt
aam
cwtl
xchg
sbb
imul
xor
repnz
xchg
or
sub
mov
dec
movsl
jbe
cmpsl
xchg
fsubrl
adc
fdiv
xor
pushf
int
mov
dec
cmp
stos
jnp
insb
fidivl
mov
push
xor
cmpsl
mov
adc
sbb
fmulp
aam
std
mov
nop
aas
mov
or
test
jl
sarl
test
mov
push
jno
fs
cld
cmp
fsubrs
cmp
push
mov
scas
add
rcll
negl
or
das
sbb
shll
js
sub
xchg
aas
cwtl
dec
mov
sti
movsl
xchg
and
mov
pop
mov
sub
mov
lcall
insb
jae
fs
lods
jl
and
dec
insb
jmp
mov
xchg
bound
or
outsb
cmpsl
fs
cld
dec
roll
shr
fldt
add
loop
xchg
lds
jns
mov
jne
in
stos
jecxz
mov
fcoml
in
push
and
leave
mov
dec
aaa
dec
add
jne
icebp
iret
lcall
xor
push
stos
mov
cmovns
mov
cmp
mov
outsb
add
pop
or
cmp
ret
out
or
lahf
dec
fisttpll
hlt
xlat
addr16
cwtl
lods
jns
pop
xlat
notl
and
or
in
cmpsl
imulb
push
add
sarl
aaa
faddp
loopne
pop
mov
repz
inc
aaa
push
cmp
sahf
mov
test
sarl
add
imul
xor
jl
sbb
sub
push
adc
pop
xchg
bnd
out
fs
out
cmp
inc
and
jl
std
or
dec
pop
cmp
jmp
fimull
sbb
out
insb
jle
scas
es
rol
decb
xchg
push
imul
je
mov
ss
aad
stos
fmuls
xor
das
sub
out
data16
ja
sti
hlt
dec
loope
inc
jecxz
daa
push
pushf
inc
pop
movb
ja
stc
mov
sbb
xor
insb
int
xor
dec
add
xor
fidivrl
sbb
mov
inc
pop
or
push
and
scas
pop
mov
push
mov
daa
sub
xchg
cmp
sub
xor
mov
clc
pop
loop
jl
mov
shr
les
pop
adc
xchg
test
xor
mov
push
movsb
jge
push
push
gs
outsb
icebp
mov
popa
push
add
jle
mov
jnp
rolb
lods
jl
or
mov
add
inc
adc
mov
pop
and
xchg
ss
inc
lods
jmp
ljmp
push
xor
mov
jp
inc
adc
and
push
lods
sahf
inc
fs
dec
jns
lock
loop
lret
repz
pop
pop
inc
add
inc
dec
imul
outsl
shl
mov
mov
loop
inc
cmp
aad
in
divb
stc
notl
add
shlb
sbb
pushf
pop
and
xchg
pop
shll
movsl
repnz
cmp
psllw
jae
xchg
leave
rorb
xchg
call
dec
adc
fisubs
insl
sub
sbb
mov
pop
mov
and
add
in
pop
jbe
loope
or
enter
cmp
push
in
jno
sub
je
xchg
push
sub
mov
jmp
and
popa
inc
icebp
inc
mov
nop
xor
test
stos
test
and
add
repnz
add
cmp
mov
sub
and
loope
dec
ja
xchg
pop
pop
sarb
pop
test
push
repnz
xor
and
cmc
pop
cmpsl
ficompl
or
dec
push
push
ret
pop
aam
out
add
mov
jno
jo
fiaddl
test
testl
fidivs
addb
mov
push
cmp
icebp
adc
xchg
mov
jne
sbb
jl
xchg
aaa
xor
pop
and
add
mov
adc
iret
xor
in
add
push
movb
dec
loop
mov
mov
fs
icebp
pop
int
dec
addr16
pop
adc
mov
sahf
push
add
das
jno
movsl
jnp
repnz
lods
popf
xchg
jnp
in
cmpb
xchg
sbb
out
mov
xchg
cmpsb
mov
enter
pop
cli
fstpt
in
outsb
add
movsl
cs
dec
jmp
jb
pop
pusha
dec
imul
pop
sub
inc
daa
inc
dec
sbb
fs
lret
and
xor
cwtl
adc
inc
loopne
pusha
fistpll
push
mov
lods
pop
ja
xchg
pop
outsl
aaa
repnz
sub
mov
and
scas
lods
int3
in
jno
push
xor
into
movsl
int
pop
aas
xor
inc
and
fwait
dec
enter
cmp
pushf
add
mov
fcoms
insb
sbbb
inc
or
or
icebp
fisubrl
testb
cltd
inc
pop
in
dec
fisubl
sub
mov
scas
mov
lds
gs
loope
popa
and
addr16
pop
mov
insb
arpl
pop
ja
sbb
dec
std
mov
pop
je
dec
mov
ret
pop
xchg
jecxz
addr16
stc
mov
shl
mov
test
pop
mov
pop
pop
or
ret
pop
addr16
push
scas
js
fs
inc
lods
mov
mov
sbb
sub
pop
loope
cltd
pop
jle
leave
in
imul
mov
xlat
out
aam
in
dec
lret
pop
jge
push
in
das
adc
dec
mov
sbb
push
rolb
xor
push
negb
dec
sarl
cltd
mov
test
hlt
xchg
stc
jns
sbb
outsl
sbb
daa
in
in
xchg
mov
adc
cmp
mov
inc
clc
shl
fstpl
jl
pop
negb
call
loopne
xchg
fistl
movsl
sbb
ret
lahf
pop
addr16
sbb
and
push
dec
jmp
mov
mov
pusha
jnp
dec
inc
cmp
stos
or
arpl
loop
add
add
stos
fwait
fs
or
mov
gs
xorl
jne
scas
mov
mov
mov
nop
xor
pop
xchg
iret
adc
inc
dec
js
in
ljmp
scas
dec
int
inc
mov
or
andl
mov
int
xor
cmp
test
fdiv
ds
xlat
push
fldl2e
cli
mov
int3
ret
repz
fldl
mov
testb
mov
jb
mov
mov
ljmp
cmpsb
xchg
movsb
pop
xor
push
imul
test
add
push
push
xchg
fistps
inc
cmpsl
pop
icebp
les
cmpsl
xchg
xchg
orb
bound
pop
fistpl
fmull
pop
cmp
pop
jmp
xor
mov
cmp
fisttpll
pop
or
mov
push
je
or
repz
lods
adc
movsb
fisttps
movl
ds
or
inc
or
sbb
cmp
mov
and
mov
inc
and
test
xor
xlat
sbb
outsb
jl
xchg
ja
and
mov
fnsave
testl
pmulhw
dec
xchg
or
ret
lock
sbb
out
rcll
sbb
mov
leave
lret
popf
fwait
mov
adc
adc
inc
inc
inc
jo
popa
das
or
faddl
repnz
mov
enter
dec
fwait
mov
inc
insl
daa
mov
ljmp
mov
mov
mov
aaa
test
les
cmp
dec
insl
aad
cmp
push
movsb
mov
sub
in
adc
pop
sbb
jne
xor
adc
jle
imul
int
loop
ljmp
cs
scas
pop
xor
sti
faddl
xchg
xchg
push
fstpt
lea
inc
rolb
and
ss
fcompl
adc
pop
jecxz
cmp
ffreep
jp
lret
rclb
rcrb
add
clc
lcall
in
jmp
cmp
popf
andnps
adc
add
push
stc
test
ja
subb
shrb
cld
and
mov
mov
cwtl
ljmp
stos
fistpl
out
adc
pop
xchg
mov
aam
push
mov
scas
nop
jg
mov
pop
fwait
test
ret
out
outsb
dec
mov
test
imul
xchg
das
out
jbe
in
jp
fs
mov
mov
xor
mov
lock
xchg
push
adc
jne,pt
cmp
das
hlt
movsl
test
jb
repz
andb
outsl
notl
push
sbb
fisttpl
mov
mov
jo
xor
enter
and
lods
testb
sahf
adc
xchg
ficomps
rcl
sbb
test
push
pop
loope
mov
stos
xor
ret
fs
jnp
and
arpl
in
fs
push
fwait
shrl
cmpsl
add
pop
movsl
xchg
cmc
fyl2x
dec
scas
jecxz
push
fildl
fstps
adc
cltd
xor
bound
cmp
inc
shlb
mov
lock
mov
or
test
and
std
dec
popa
mov
mov
lcall
add
icebp
push
jne
xchg
in
sbb
mov
pop
xor
jb
jmp
mov
add
mull
das
pop
cmp
xlat
push
xorl
divl
mov
fnsave
insl
mov
mov
adc
icebp
imulb
and
shrb
fimull
cmpsb
subb
int3
jp
mov
sub
mov
test
shl
mov
inc
lcall
jge
fwait
imul
aam
sub
shlb
gs
sbb
arpl
mov
sbb
pop
loope
iret
mov
mov
xchg
adc
les
insb
popa
movsl
daa
push
das
adc
aad
pop
xor
scas
pop
inc
mov
sbb
movsb
shll
inc
xor
rorl
roll
std
ret
dec
rolb
xchg
cmp
inc
and
repz
jg
rcl
inc
dec
mov
mov
adc
int3
cmp
add
sbb
icebp
dec
dec
mov
xchg
adcl
jl
scas
cmc
fs
jb
mov
nop
xor
mov
mov
push
push
adc
pushf
xor
shl
imul
mov
push
insb
push
add
je
xor
sub
cmp
dec
pop
lcall
sub
push
cmp
mov
movsl
add
cli
jb
jg
xor
ret
stos
in
jnp
pushf
mov
xor
fstpl
push
sbbl
pop
xlat
mov
fs
ss
xor
xchg
test
ja
inc
add
xor
jge
cmp
in
mov
xchg
push
or
jecxz
test
dec
xor
push
aas
push
mov
push
ficompl
or
adc
mov
mov
stc
and
in
xchg
test
popa
dec
cmc
jle
pusha
jecxz
ret
je
mov
or
pop
cmp
adc
pop
frstor
outsb
xor
int
test
jecxz
insb
pop
enter
in
es
mov
mulb
push
jno
sbb
lret
sbb
sub
out
adc
stos
fdivrs
push
mov
repz
add
or
movsl
mov
add
mov
fucomp
stos
adcl
mov
pop
xchg
pop
leave
mull
and
mov
dec
cmp
ss
cmp
sbb
mov
push
dec
pop
jb
outsb
and
mov
repz
inc
lret
icebp
mov
int
cs
shll
sbb
fcomps
lea
jge
lods
add
nop
xchg
iret
out
clc
out
jmp
push
movsb
sbb
or
mov
mov
out
xor
test
jle
pop
jg
cwtl
inc
lds
mov
lahf
xchg
movsl
popa
dec
mov
sbb
add
addr16
xchg
fcmovnu
mov
and
dec
movsb
jl
mov
push
and
iret
jmp
push
pop
xchg
scas
and
inc
xchg
push
test
rclb
inc
lods
lahf
and
mov
mov
into
ja
sbb
insl
xchg
arpl
xor
mov
cwtl
addl
adc
pop
fidivrl
push
add
aam
popf
jnp
pop
mov
fbstp
and
mov
mov
aas
outsl
subl
pop
loope
xchg
mov
mov
pop
sbb
das
push
or
mov
inc
pop
adcb
mov
mov
xor
xchg
fstl
rcll
xchg
popf
out
pop
sbb
ljmp
and
xlat
ret
and
addl
outsl
aaa
leave
filds
lahf
dec
or
ljmp
pusha
push
ret
xchg
or
test
decl
push
insl
push
int
popf
xchg
ret
mov
test
fsubrs
xchg
ljmp
mov
dec
mov
sub
or
cmc
jge
push
mov
hlt
jb
repz
mov
push
jne
mov
test
jns
sub
cmp
pusha
stos
mov
loopne
pop
adc
mov
and
push
dec
pushf
into
push
mov
xchg
mov
js
gs
dec
xchg
ret
out
movsl
hlt
dec
inc
or
fildl
sub
adc
outsl
xchg
mov
push
shrb
push
das
lds
jmp
jge
iret
mov
lds
adc
sbb
mov
push
add
cmp
xchg
inc
or
mov
dec
scas
inc
leave
jbe
ljmp
lock
ret
cs
add
test
ret
adc
fcompl
outsl
xchg
lret
jae
mov
inc
mov
dec
xchg
xor
lret
xchg
int
inc
xchg
xor
xchg
test
incb
dec
mov
jmp
mov
mov
mov
push
jl
xor
decb
pop
push
test
and
jnp
dec
sub
pop
ljmp
icebp
insb
pop
sbb
fldt
xor
and
out
loop
lds
xchg
pusha
pop
mov
push
sub
push
iret
je
popa
mov
mov
lcall
inc
ds
rcrl
push
out
nop
sbb
cmc
dec
mov
cmp
je
mov
inc
test
adc
add
icebp
sbb
or
cmp
sub
jns
imul
inc
test
adc
add
icebp
sbb
or
cmp
sub
jns
imul
inc
test
adc
add
icebp
sbb
or
cmp
sub
js
imul
inc
test
adc
add
icebp
sbb
mov
shrl
mov
xchg
int3
int3
int3
int3
int3
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
push
mov
push
mov
push
push
push
push
movl
movl
movb
call
andl
andl
push
mov
push
mov
movl
movb
movl
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
mov
movb
movb
call
mov
lea
push
movl
call
pop
pop
leave
ret
cltd
dec
shll
pushf
aas
loopne
adcl
and
push
add
jb
pusha
and
inc
aam
shll
xor
outsb
mov
xor
pop
adc
bound
adc
inc
fisubl
lret
cmp
sbbb
movsb
fiaddl
pop
inc
cmovge
jno
and
pop
inc
mov
ror
scas
out
xlat
mov
outsl
imul
rcrb
out
sub
cmp
ret
cmp
jecxz
jecxz
inc
rep
push
push
xchg
jp
mov
lods
jb
jp
adc
push
mov
cmpsl
stos
mov
lods
int
xchg
fidivl
mov
mov
mov
ret
mov
cmpb
xacquire
ja
cmp
daa
das
incb
mov
sub
mov
push
cmpsl
mov
mov
xor
jae
test
inc
lret
mov
lods
cmpl
mov
popa
inc
xchg
cwtl
ds
in
jb
ret
jae
popf
ret
push
xor
add
in
xchg
repnz
mov
mov
in
add
sbb
lcall
mov
xchg
xchg
lods
out
decb
aaa
je
adc
imul
push
inc
adc
ret
not
jecxz
repz
cmpsl
negl
imulb
es
data16
push
xor
sub
ret
sti
xchg
xchg
loop
shlb
and
jae
add
bound
push
xor
mov
mov
xor
loop
shlb
and
jae
add
bound
push
xor
mov
jne
xor
icebp
fs
mov
into
mov
pusha
or
lods
jnp
xchg
jmp
or
jo
sub
push
inc
nop
mov
test
push
scas
pop
test
xchg
cs
adcb
jne
and
cmpl
xor
xor
sahf
mov
and
mov
out
xor
pop
pusha
rcrb
gs
fsubr
test
sub
cmp
scas
mov
pop
pop
xorb
sbb
mov
add
push
jmp
inc
lret
adc
rcl
sub
mov
lcall
sub
inc
cwtl
sub
scas
mov
adc
nop
pop
arpl
sbb
enter
pop
adc
pop
popl
mov
xor
adc
xor
mov
xchg
pop
jmp
dec
icebp
adc
hlt
out
addl
xor
movsl
mov
or
sahf
add
fildll
lods
mov
adc
mov
je
in
add
mov
pushf
xchg
fildl
push
stos
cmp
pop
mov
andl
lcall
mov
pop
insl
mov
xor
mov
clc
mov
iret
cwtl
cmp
cltd
xchg
mov
popf
adc
add
xchg
loope,pt
or
aam
fbld
jp
cmp
push
pop
or
dec
je
outsb
mov
loopne
xchg
add
in
pusha
jecxz
fucompp
jb
pop
lcall
mov
inc
mov
mov
out
lds
call
int3
pusha
inc
call
or
adc
les
mov
xor
inc
xorl
aas
test
and
stos
imul
cli
or
mov
cvtdq2ps
nop
jb
xor
aad
push
jp
xchg
sub
or
push
pop
xchg
in
or
loop
jns
mov
mov
andb
cmpsb
jp
fildll
hlt
pushf
lds
sbb
insb
aam
mov
in
jns
cld
rcrb
jge
push
jno
cmpsl
mov
mov
fstps
or
and
or
daa
insl
push
cmpsl
xchg
cmpsb
mov
mov
push
std
xchg
sahf
int
mov
popf
jecxz
fstpt
push
xchg
inc
data16
fwait
cmp
pop
sti
cmpsb
xchg
fidivl
mov
jp
imul
push
xor
sub
fistps
lock
inc
ljmp
popf
subb
pop
loopne
pop
fstps
fisttpll
into
jmp
add
mov
ret
or
insb
or
mov
dec
adc
stos
dec
lcall
push
xchg
mov
xchg
shlb
loopne
push
mov
dec
mov
rolb
cmp
adc
rcr
stos
cwtl
arpl
cld
fldcw
outsl
pop
xchg
jo
out
and
adc
xchg
cmp
push
aad
lret
sub
mov
ja
inc
je
icebp
mov
stc
mov
jmp
mov
mov
cmp
pop
pop
insb
das
mov
daa
cmp
popl
jae
adc
gs
mov
add
das
mov
lods
int3
ret
inc
fsubr
push
pop
cmp
dec
jno
outsb
push
jbe
bound
cmpsb
test
loopne
lahf
mov
xchg
sbb
mov
dec
aaa
xlat
sub
mov
subl
test
mov
adc
cmpsl
jnp
test
push
mov
shlb
sbb
add
xchg
mov
pxor
pusha
xor
in
jge
push
je
or
data16
push
int3
test
cmp
insl
mov
sbb
jne
jle
aam
mov
mov
mov
dec
daa
andb
testb
fcomp
or
sahf
lcall
fcompl
in
push
leave
bound
cwtl
jg
pop
std
add
cmpsl
adc
pop
movsl
enter
test
jbe
fwait
jle
mov
fists
mov
pop
xor
fsubrs
mov
int3
push
add
rorb
jecxz
int
xchg
jb
aas
xchg
shlb
push
jnp
xor
repnz
mov
fidivl
adc
les
imul
push
add
mov
or
jecxz
test
test
and
mov
jae
dec
shr
enter
mov
divl
cmpsl
int3
sarb
cmp
stc
lds
ret
jmp
ja
jecxz
xchg
das
dec
pop
mov
sarb
fisubrs
rcrl
scas
add
mov
icebp
stos
push
loopne
jmp
and
inc
iret
and
test
outsb
daa
mov
xorb
test
ds
aas
fcomps
loop
fs
push
lods
push
add
lret
add
daa
leave
cmp
or
clc
pop
pop
mov
fnstcw
inc
xor
rorb
addb
xchg
xchg
cmpsb
test
arpl
ret
sub
cmpsl
adc
jp
push
jne
sbb
cli
cmovno
dec
xchg
xchg
int
or
int
ret
in
es
pop
dec
sub
cmpl
and
shll
lods
fcomps
mov
dec
mov
mov
cmpl
mov
lods
sub
jne
cmp
cmp
fisubs
dec
pop
xchg
xor
test
push
imul
dec
aad
fwait
pushf
in
cltd
jl
dec
or
out
sbb
cs
lret
cli
outsl
push
add
sub
lock
pop
xchg
push
daa
pop
fadds
pop
add
in
jbe
push
sbb
xor
je
jae
and
sbb
xlat
xchg
in
mov
push
fistps
scas
mov
in
push
fs
js
clc
xor
sti
adc
and
push
and
xchg
stc
fldcw
jne
push
test
push
iret
or
xchg
inc
jno
in
fcomps
cmpsl
jge
cmpl
mov
jmp
test
stos
mov
stc
popa
les
xchg
jp
and
mov
xchg
jnp
es
add
adc
fisttps
push
ret
add
out
mov
adc
out
xchg
pop
lods
dec
loopne
xlat
jp
idivb
rcrl
push
pop
cmpsb
mov
repnz
sbb
in
rolb
pop
add
and
jl
in
mov
xchg
test
xor
sbb
cmp
inc
mov
or
pop
mov
ljmp
mov
das
aas
push
jecxz
shl
pop
addr16
hlt
dec
push
push
sbb
cld
mov
mov
fidivrs
sar
cmpl
das
cmp
xor
add
xor
push
push
loopne
dec
ljmp
cmp
leave
fisubl
adc
add
ds
inc
push
fisubl
sub
fisttps
fwait
adc
mov
pop
mov
xor
inc
incb
inc
shrb
or
jmp
mov
or
pop
out
xchg
cmp
pop
pop
dec
flds
sub
push
lea
mov
lret
push
ret
sub
jl
rcl
pop
and
scas
roll
fcomip
sub
mov
push
mov
mov
cmp
mov
sbb
out
leave
je
add
ret
lcall
pop
or
shll
fstpt
daa
mov
flds
and
dec
scas
les
es
mov
dec
enter
stos
mov
dec
sbb
movsb
dec
dec
ret
push
xchg
mov
movsl
lahf
add
cmp
cli
les
and
leave
mov
notl
jge
cltd
out
jnp
out
dec
jp
mov
fs
add
mov
ds
dec
jle
pop
adc
xchg
or
cmp
inc
insl
pop
mov
jns
popl
cltd
mov
popf
les
mov
loop
jp
cmp
push
cltd
push
xchg
notb
push
pop
and
pop
and
lahf
jnp
xlat
push
sub
push
sub
cmp
adc
shrl
xchg
sub
pop
pop
push
jnp
shlb
repnz
push
into
fwait
pop
sbb
lods
xchg
xlat
or
adc
mov
push
push
je
dec
xchg
inc
out
sub
sahf
imul
jge
call
std
mov
scas
jmp
stos
int3
and
push
sarb
add
and
into
push
insl
in
dec
add
lock
sub
jne
or
lret
leave
addr16
adc
pop
mov
jbe
out
rcrb
add
xchg
mov
jle
push
arpl
inc
mov
insl
lret
inc
jge
inc
add
mov
ljmp
outsb
cwtl
out
out
inc
adc
sti
stc
std
jle
repnz
jnp
push
adc
ljmp
xchg
pop
cwtl
movsl
xchg
xchg
addr16
rclb
clc
add
repz
xchg
pop
aas
dec
popa
arpl
cmp
pop
test
jno
bound
sbb
sbb
jmp
fsts
add
push
nop
cmpsl
lret
pop
jge
shrl
jge
popf
cmpsb
cli
sbb
add
lock
pop
inc
pop
sub
mov
jb
push
xchg
xor
incl
xchg
popa
and
je
rolb
inc
mov
in
ds
sbb
add
lods
sub
or
sub
je
dec
jns
sti
out
cmpsb
inc
xor
mov
add
rcll
aad
dec
add
fdivl
pushf
aam
push
push
mov
popf
subb
es
popf
cmpsl
movsl
xchg
imul
pop
rorl
xchg
ret
insl
and
pop
sarl
cmc
ret
imul
rcll
orl
jmp
dec
dec
jmp
pop
outsb
cmp
adc
lods
daa
mov
icebp
add
leave
cs
hlt
xchg
and
vphsubwd
push
loopne
scas
mull
js
fnstcw
dec
aas
push
fnstcw
pop
repnz
and
mov
subl
les
aaa
and
in
pop
sbb
or
mov
dec
add
sahf
xlat
inc
and
shlb
pusha
or
mov
cmpsl
push
pop
mov
dec
imul
mov
dec
shrl
jmp
xchg
sahf
or
arpl
sub
jb
movsb
jae
clc
fwait
mov
xchg
dec
or
xchg
lea
mov
pop
pop
ljmp
mov
mov
adc
mov
and
lcall
adc
fsubs
jl
in
cmpsw
stos
ljmp
jnp
adc
int3
fisubrl
mov
sub
lods
push
xchg
cs
hlt
add
into
aas
shlb
adc
xchg
enter
mov
shl
sub
mov
mov
xchg
mov
ret
out
push
stc
repnz
push
mov
cltd
inc
jno
aam
das
add
notb
adc
xorl
push
jecxz
mov
inc
mov
addb
add
daa
add
clc
int
mov
mov
stac
cmp
push
sub
inc
icebp
push
inc
push
movsl
fldt
fcompl
sbb
sarl
cmpl
mov
xchg
mov
sbb
cmpsl
mov
test
out
js
lock
and
loopne
daa
mov
xlat
pop
popf
or
imul
xchg
mov
inc
ljmp
mov
loopne
in
mov
lret
aaa
ja
and
shrl
addl
add
mov
sbb
popf
scas
inc
in
or
popf
ror
jge
pop
shlb
lods
dec
dec
cltd
mov
scas
sbb
lfs
mov
pop
aas
jbe
ret
movsl
jno
movsl
push
repz
sub
xchg
movsb
jl
pusha
mov
sub
dec
xchg
inc
xchg
mov
push
into
add
push
int
push
push
mov
in
arpl
sub
sbb
lahf
cmp
adc
pop
jno
inc
je
imul
fldenv
call
mov
bound
push
push
adc
movsb
es
mov
dec
lret
inc
cmp
xchg
gs
push
push
mov
push
nop
mov
sub
add
xchg
cmp
insb
popf
fadds
or
xor
hlt
bound
adc
ret
add
test
xor
jae
cmp
pushl
aas
aaa
xchg
aaa
jnp
fidivrs
iret
cmpsb
loopne
jmp
mov
dec
sub
ljmp
cmc
fdivrs
xchg
mov
into
mov
inc
pusha
ret
jb
adc
stos
lret
jmp
sti
pop
jle
mov
add
pop
and
mov
insl
mov
mov
jge
imul
repnz
xchg
xchg
icebp
mov
push
mov
mov
xchg
push
xor
or
mov
and
cmpsl
xor
jbe
mov
pop
cmp
ljmp
sbb
mov
and
loope
lret
inc
xchg
xchg
and
mov
xor
mov
adc
add
ret
xchg
mov
popf
outsb
sti
jmp
add
imul
ljmp
push
out
and
push
and
inc
cmpsb
pop
jne
pushl
push
fisubrs
cmp
and
mov
push
in
and
jmp
loopne
cmpsb
xor
mov
or
rcll
sub
outsb
stos
iret
out
sbb
mov
and
das
ss
sbb
fs
fdivrs
fldcw
inc
and
flds
add
xchg
xor
leave
jmp
sub
sub
pop
lods
call
in
popa
in
sub
negl
popa
jp
xchg
or
and
cmp
frstor
sbb
lock
imul
pop
fadd
sbb
out
subl
adc
cmpsb
loop
out
and
add
fwait
cmp
int
jp
sbb
stos
gs
je
rol
lret
xlat
push
or
pop
std
lods
pop
sub
test
jg
sahf
out
cltd
out
inc
stos
dec
sbb
pop
shrl
cmc
dec
rorb
scas
addr16
add
push
stos
scas
jns
jns
mov
mov
test
pop
pop
cs
sub
aad
or
jae
aad
cmpsb
ret
int3
cs
rorb
xchg
adc
js
fstps
or
movsb
inc
mov
mov
sub
push
jb
pop
in
test
loop
cld
mov
out
mov
scas
cmp
xchg
lahf
sbb
push
js
pusha
adc
push
or
dec
js
pop
xor
inc
xchg
pushf
add
and
aaa
sub
dec
pop
mov
and
or
cld
inc
ds
mov
out
dec
orw
mov
add
mov
xchg
fidivl
ss
aam
fsubs
adc
jno
xor
push
loopne
dec
push
mov
sub
stos
pop
bswap
sbb
dec
jne
clc
shlw
xor
jbe
clc
sub
cmp
int3
pop
sbb
jbe
pop
int
lcall
jecxz
fcoms
inc
jne
daa
lds
je
lret
stc
ja
hlt
scas
hlt
xor
or
ljmp
push
fs
mov
cmpb
in
sub
lock
mov
mov
cwtl
inc
ret
shll
fs
out
mov
and
fcomi
pop
imul
pop
mov
inc
and
sbb
iret
hlt
inc
xchg
mov
rorl
rcrb
and
mov
sub
xor
pop
fmul
sbb
sub
pop
dec
jnp
jle
enter
xchg
pop
mov
std
cli
sub
imul
scas
loop
mov
and
sbb
inc
dec
cmp
or
mov
or
icebp
mov
add
fidivs
daa
inc
mov
testl
xor
fsubrs
pop
cli
or
subb
testb
dec
and
push
andb
data16
or
test
stc
subl
rcl
test
lret
pop
mov
popf
sti
shlb
inc
inc
out
add
cmp
mov
jge
sbb
adc
adc
ret
mov
sub
and
jbe
xlat
cmp
scas
add
pop
mov
pushf
ja
dec
lcall
inc
mov
fbld
and
push
aas
es
sbb
add
xchg
cld
jle
ljmp
enter
sbb
mov
lods
movsb
adc
dec
int
pop
hlt
aam
aas
xor
sbb
gs
fcompl
mov
cmc
stc
add
pop
hlt
xorb
je
icebp
push
ret
testb
jae
jmp
int
jne
mov
js
xor
inc
inc
adc
aaa
loope
jg
mov
iret
adc
je
pop
mov
scas
ss
pop
push
test
or
movsl
ljmp
fidivrl
and
call
push
rorl
sbb
jbe
add
push
push
jmp
insl
pop
shlb
js
push
sbb
jae
in
adc
mov
pop
inc
mov
jg
mov
lock
popf
daa
jecxz
lods
lret
push
or
imul
add
lret
xorb
in
fstl
das
mov
cmpsl
sub
test
xchg
scas
dec
push
lods
sub
mov
mov
sub
push
dec
in
subl
enter
push
jge
es
fwait
xor
xchg
xlat
inc
in
fs
or
in
mov
push
or
and
out
lcall
std
out
test
rorb
mov
and
add
stc
xchg
imull
push
add
pop
daa
in
sbb
sub
sbb
push
jl
out
adc
mov
mov
sub
xchg
mov
jo
xlat
aaa
push
gs
out
xchg
add
loopne
scas
subl
outsb
rcll
rcll
in
push
xor
ja
out
push
mov
mov
clc
lcall
xor
push
and
mov
push
sahf
jp
push
mov
and
test
enter
jo
jns
push
loopne
jge
cmpsb
movsb
std
mov
movsl
cmp
repnz
push
loopne
xchg
in
jne
mov
sbb
xchg
jo
div
add
cli
aas
lea
mov
mov
in
and
cmp
cltd
sbb
push
sub
test
aad
inc
aad
dec
sahf
xchg
or
dec
adc
cmp
xchg
lds
mov
jae
test
and
push
iret
adc
icebp
dec
jecxz
hlt
and
pop
scas
fs
jae,pt
repnz
mov
fcoms
cmp
adc
mov
hlt
idivl
fmulp
rcll
adcb
ret
push
test
xor
or
mov
inc
loopne
in
dec
and
ficompl
push
loopne
and
ret
in
mov
xchg
cs
adc
or
jmp
xor
sti
mov
shlb
insb
cmpsb
in
jmp
es
out
mov
mov
dec
lock
xchg
or
jnp
cltd
jge
sar
add
cltd
or
stc
imul
inc
xor
lcall
push
sbb
cld
push
xor
mov
lret
xchg
add
sahf
add
mov
fcmovnu
sbb
jb
adc
sub
mov
and
cltd
andl
dec
pmaxub
movsl
nop
lret
into
mov
push
mov
jnp
push
xchg
jnp
cltd
pop
add
jmp
lcall
or
or
faddl
push
por
dec
fbld
dec
and
lock
out
xchg
and
mov
or
adc
sti
mov
sub
adc
inc
jb
mov
lods
inc
test
or
and
fcoml
add
sub
sti
mov
push
xchg
push
and
cmc
add
sahf
mov
mov
ficompl
out
addb
sbb
cli
lods
pop
fstl
push
sarb
int3
mov
mov
lcall
or
scas
pusha
jmp
jp
daa
add
sbbb
sbb
mov
ffreep
outsl
jle
mov
push
int3
push
add
stos
ljmp
cmp
sbb
jg
test
mov
push
out
pusha
mov
xor
xchg
pop
adc
fsts
mov
clc
outsl
cltd
add
out
jmp
jle
mov
cltd
sub
xlat
aam
jno
jno
lret
pop
out
repz
mov
xor
sub
ljmp
mov
push
jmp
shrl
mov
sub
aaa
dec
les
mov
xchg
lock
push
mov
outsl
rsm
sbb
inc
dec
imul
dec
out
insl
mov
cmp
daa
imull
ljmp
xchg
push
xor
in
mov
dec
xchg
mov
pop
rclb
sbb
clc
push
mov
test
out
push
fmul
dec
xorl
imul
outsb
sub
sub
lahf
mov
mov
jno
out
pop
adc
pop
rolb
cmc
xchg
xchg
scas
cmp
mov
psubq
mov
nop
lods
xor
xchg
call
push
mov
mov
or
out
mov
loope
mov
cmp
mov
enter
jg
xor
movsl
int
inc
xor
lahf
sub
leave
add
cmp
in
fcomi
push
inc
xchg
push
mov
outsb
cmp
loopne
gs
mov
int3
mov
add
pusha
cwtl
adc
or
dec
aaa
fistpl
cmpsb
push
pop
or
jns
aad
mov
sahf
popa
scas
push
andb
sti
daa
or
cmp
mov
aad
cmc
jl
scas
leave
sbb
lods
mov
loope
rorl
mov
jmp
pop
cmpsb
pop
sahf
mov
inc
xor
add
out
xlat
xchg
pop
mov
shrb
and
movsb
nop
or
jns
ja
mov
aad
push
imul
pop
dec
push
test
mov
scas
out
jne
fcmovbe
dec
test
inc
mov
imul
je
xchg
cmpl
jmp
sub
movsl
sub
jecxz
jne
ljmp
xchg
cmp
pop
push
and
add
bound
faddl
stos
aas
clc
mov
int
ss
and
jnp
fsubs
sub
push
roll
push
cmp
aas
xchg
or
inc
jp
popf
push
adc
roll
sub
xlat
jae
outsb
mov
mov
fnsave
loope
inc
pushf
lret
adc
fisubs
xor
loop
shlb
and
jae
add
bound
push
xor
mov
mov
xor
loop
shlb
and
jae
add
bound
push
xor
mov
ljmp
xchg
dec
mov
ljmp
add
bound
jb
inc
divl
repz
xor
mov
adc
je
fwait
popf
fsubrl
int3
int3
int3
lea
imul
ja
or
jecxz
fnstcw
leave
dec
mov
outsb
mov
jns
imul
cmp
sub
sbb
insb
push
stc
push
jmp
push
fcompl
outsb
cltd
jle
ss
imul
mov
or
cmp
cmpsl
and
cld
and
loopne
rcrb
scas
or
sub
sbb
xor
aad
dec
jp
adc
or
pop
fsubrl
jp
bound
jns
xor
loopne
pop
movsb
arpl
push
stos
es
test
sbb
fisttpl
lahf
out
ret
pop
stc
push
call
pop
inc
sbb
push
hlt
idivb
push
pop
xor
fisubrs
adc
jmp
stos
pop
rorb
dec
outsl
in
jle
jno
xchg
xchg
mov
push
gs
jne
cs
popf
cld
cs
or
pop
mov
jno
add
out
inc
xor
mov
cmp
lods
lret
test
stc
outsb
cltd
jge
aad
enter
mov
sub
sbb
enter
pop
leave
push
mov
jle
out
in
adc
sbb
or
jl
jge
mov
dec
mov
cmp
xor
pop
jmp
in
ret
adc
fildll
cmpsl
jp
insb
sbb
daa
imul
aas
pop
cld
aas
fucom
cmp
cmp
cmp
xor
sbb
or
stc
push
jmp
dec
mov
jle
mov
imul
sbb
or
stc
push
jmp
dec
mov
jle
mov
inc
insb
ss
add
mov
addr16
dec
dec
test
fimuls
fwait
push
cmp
repnz
test
mov
jnp
pusha
mov
jb
pop
out
subl
movl
cmp
push
sti
sahf
psubsw
orl
jns
movsl
in
add
stos
xlat
lock
pop
lea
pop
mov
pop
mov
pop
js
adc
jle
aas
cld
push
cmpsb
ss
adc
adc
sub
and
sub
inc
stos
adc
rcll
je
mov
pop
mov
mov
pop
lods
adc
std
das
cmp
or
sbb
and
sub
xor
jecxz
sub
pushf
iret
imul
jbe
sbb
fdivrs
sbb
push
test
push
inc
insb
xor
or
dec
loope
imul
mov
pop
add
iret
inc
dec
add
sub
jno
add
push
sub
in
sub
push
aas
cmp
xor
inc
lret
loope
test
aad
or
iret
pop
add
imul
inc
sbb
sub
mov
push
dec
mov
mov
lods
push
mov
lods
sti
push
arpl
movb
bound
addr16
in
iret
nop
push
fistl
out
push
or
int3
and
jno
pop
aas
pop
push
jo
cs
fidivs
popf
js
pop
cld
add
dec
cli
inc
nop
cmpsl
mov
popf
xlat
mov
ficompl
jnp
or
cmp
mov
out
ret
mov
mov
sub
fwait
jae
sub
xor
add
fsubr
lret
or
leave
or
jecxz
jmp
test
xchg
movsl
pop
xchg
adc
sahf
mov
mov
jg
stos
test
pop
pop
imul
jp
std
inc
xchg
mov
out
push
sbb
ret
or
or
lods
sti
xor
xchg
adc
out
cli
or
pop
dec
push
jno
inc
into
mov
test
les
orl
add
fisubrs
cmpsb
arpl
data16
sub
clc
xlat
push
lret
test
mov
test
push
es
call
inc
xchg
mov
mov
adc
mov
cmp
fdivrs
add
in
push
sub
xlat
sub
mov
jp
dec
lock
sub
xor
sub
dec
mov
cmp
iret
lods
sarl
loopne
add
dec
sbb
jl
fcom
mov
ret
out
mov
pop
push
daa
mov
in
and
dec
and
js
daa
adc
inc
push
inc
pop
scas
ret
mov
lods
fldl
mov
mov
cli
rcrb
rolb
sub
sub
lret
fwait
pop
subb
and
push
pop
in
mov
cmpb
sbbb
pop
or
xchg
mov
xchg
int
jne
shr
leave
pop
jg
cmpb
push
xor
mov
inc
mov
imul
popa
inc
push
in
jbe
lea
clc
jae
jb
sub
subl
xchg
push
lahf
insl
ljmp
mov
les
scas
push
mov
data16
ss
jo
stc
cmovge
sahf
mov
incl
lds
inc
movsl
fdivrs
inc
popa
sbb
adc
les
jne
push
sbb
js
loopne
ss
out
jle
cmc
adc
jnp
xor
mov
ss
mov
in
jb
xchg
push
inc
push
add
fcmovbe
pop
repz
cwtl
xchg
mov
dec
inc
jbe
jp
sbb
daa
popa
std
sti
jo
mov
pop
sbb
js
mov
push
jecxz
jnp
add
mov
stos
dec
inc
sbb
daa
lret
fmulp
mov
cmpsb
mov
repz
inc
into
push
cwtl
or
outsb
stc
scas
inc
lret
mov
xlat
les
sub
cmp
or
lods
or
mov
les
push
lcall
fdivp
js
data16
sbb
pop
fwait
inc
in
mov
pop
int3
push
xor
xchg
lods
repz
cmpsl
pop
in
int
lret
idivl
xlat
bound
pop
test
or
mov
sti
mov
push
dec
mov
mov
fldcw
mov
sbb
pop
adc
js
lods
call
or
cltd
add
mov
icebp
stc
lret
rorl
or
shlb
mov
sub
push
mov
jmp
das
pop
xchg
fisubl
les
adc
mov
push
idivb
das
xchg
fistps
add
sbb
lea
inc
into
mov
sub
inc
xchg
lea
push
insl
jg
fadds
and
or
sti
add
or
sarl
pop
xchg
int
outsl
mov
rorb
pushf
jbe
out
jno
bound
sahf
loop
jecxz
dec
leave
adc
xchg
stos
push
xor
xchg
inc
fdivl
leave
shll
xorb
jl
push
jmp
lret
icebp
fstps
cmpsb
nop
sub
push
sub
pop
mov
shld
das
xchg
out
dec
data16
lahf
xchg
push
pop
pushf
repz
scas
push
sbb
mov
xchg
inc
fisubs
fbld
pushf
pop
cmp
mov
adc
cmp
sbb
inc
out
ljmp
out
xor
pop
pop
shll
push
data16
mov
lret
jb
popa
inc
jns
inc
push
rcl
cli
add
push
sbb
leave
inc
cli
aas
int3
repnz
insb
fdivp
cmpsl
inc
sub
xorb
push
push
dec
lods
dec
pop
jmp
dec
fmulp
inc
push
cmp
mov
add
mov
xor
or
mov
xor
sbb
rcll
arpl
rcrb
repnz
inc
xor
push
pushf
sub
ljmp
fisubl
ret
jo
fisubs
cmp
mov
enter
shlb
pushf
sub
lea
pop
sub
pop
and
push
jecxz
sarl
pusha
xor
ffreep
push
out
sbb
aaa
pop
pop
and
add
or
loopne
test
xlat
stc
int3
imul
and
pop
insb
push
fcoms
sub
push
test
sti
cmpsl
inc
lahf
fcomps
add
pop
mov
adc
dec
jnp
stc
or
in
dec
mov
je
or
cmpsl
test
mov
in
xor
adc
repz
or
cmpsb
out
adc
std
and
dec
add
mov
rcrb
mov
mov
out
ja
push
popa
or
mov
inc
sub
movsl
pop
das
inc
int3
je
push
aas
lahf
out
test
icebp
lods
fidivrl
mov
mov
dec
sub
cmpsl
xor
mov
push
add
addr16
jnp
movsb
loopne
xchg
dec
clc
cs
and
push
and
dec
fimull
arpl
lret
out
rolb
insb
add
push
clc
loopne
data16
pusha
cs
int
add
lds
fsincos
or
out
cmp
push
cs
sub
bound
xor
lods
pop
les
loope
out
add
xchg
mov
test
ret
cmpsl
adcl
nop
mov
ret
pop
cs
push
iret
and
ja
insb
jg
mov
mov
das
xchg
cltd
adc
jb
shlb
push
loop
popl
add
js
jl
lods
subl
scas
jecxz
mov
pop
sbb
popa
push
outsb
dec
mov
lock
enter
adcb
push
xchg
daa
imul
pusha
cmp
movsl
cmp
movsl
imul
adc
test
and
mov
push
mov
orl
pop
cmpsl
cmp
push
in
and
loop
push
push
addr16
dec
popf
cltd
xchg
sub
decl
mov
bound
mov
hlt
cmp
inc
or
adc
push
mov
push
mov
mov
adc
jb
jb
adc
test
adc
pop
cmp
push
ljmp
loop
daa
mov
push
in
cwtl
in
mov
inc
xchg
and
ss
jne
cmp
mov
jmp
lcall
mov
hlt
and
imull
adc
dec
sahf
add
movsb
jecxz
push
decb
cs
xor
ret
xchg
das
ret
mov
or
mov
cmp
movsl
xor
das
xchg
add
and
outsb
and
sbb
xchg
push
das
ljmp
int
lock
ret
jp
and
sub
pusha
das
addb
inc
mulb
popa
inc
or
rolb
xor
mov
mov
or
or
lret
dec
dec
aas
inc
and
repnz
pop
xor
ja
ror
dec
cmpb
addb
test
into
lods
or
sbb
mov
lret
pop
in
jp
cmp
xor
inc
mov
jne
pop
inc
add
mov
jecxz
and
lods
scas
lret
dec
sub
pop
inc
scas
iret
mov
nop
inc
fdivs
and
sbb
pop
pop
pop
adc
xlat
mov
call
outsb
sahf
fmul
xor
mov
sbb
scas
aad
adc
pop
mov
push
xchg
adc
repnz
imul
pop
loope
out
psubusb
arpl
mov
ret
mov
mov
imul
into
imul
loopne
inc
shlb
push
andl
cli
inc
mov
scas
push
adc
in
or
movsl
inc
popl
cwtl
aas
je
cmp
sbb
pusha
fdivs
adc
dec
rep
xor
mov
aam
jp
and
pushf
stc
xchg
xchg
ds
inc
jno
push
jb
ljmp
and
or
stos
pop
es
sbb
es
push
lea
xor
and
add
push
jns
xchg
lahf
sbb
fs
call
out
xchg
mov
mov
into
pusha
ss
aaa
ret
add
jl
sub
mov
cmpb
fdivs
xor
and
mov
fxch
test
inc
jg
and
mov
mov
sub
xor
or
gs
mov
adc
stos
adc
fadd
hlt
icebp
and
std
jne
dec
pop
jne
mov
sbb
xor
and
lret
cwtl
cmp
ficoml
mov
cmp
addb
cmp
adc
ds
xchg
fdiv
push
fsubrs
popf
jbe
lcall
repz
xchg
adc
shl
xchg
fsubrl
mov
cmp
add
lock
hlt
adc
and
mov
popf
push
push
inc
test
or
adc
xor
cmp
xchg
jns
or
sbb
cli
popa
cmp
cld
lret
dec
test
movsl
cmp
xor
imul
leave
test
gs
inc
jns
pushf
insb
aas
out
movsb
jp
xor
sub
pop
sbb
fiadds
pop
mov
sti
loopne
cltd
xor
add
jne
xor
repnz
jg
push
jne
sahf
hlt
adc
aad
out
cmp
xor
int
and
xchg
clc
hlt
jno
in
adc
or
xchg
mov
lret
lea
stos
add
mov
aad
into
lods
xchg
inc
xor
sbb
std
fistps
orl
pop
stc
andl
sti
shlb
pop
scas
stc
lcall
outsb
addr16
inc
push
sbb
mov
mov
jns
xchg
mov
xor
clc
pop
push
xor
sbbb
jno
stos
jecxz
and
cwtl
out
orl
orl
add
pop
mov
push
pop
cmp
aad
aas
mov
stc
xchg
mov
rorl
xchg
xor
int3
enter
jns
pop
fldl
xchg
adc
out
xor
pop
mov
out
jns
jl
pop
call
negl
jg
scas
adc
cs
inc
into
push
sbb
sbb
or
test
sub
jns
mov
dec
outsl
pop
out
xchg
and
jo
iret
fiadds
mov
sub
sub
sbb
mov
ror
cs
pop
das
pop
gs
out
repnz
mov
inc
loope
push
add
mov
xchg
data16
sbb
daa
pop
xchg
stos
mov
iret
sbb
xor
sbb
dec
or
dec
and
push
and
insb
pushf
pushf
xor
daa
jbe
jae,pt
pusha
push
dec
xchg
mov
xor
inc
clc
sub
clc
mov
movsb
mov
inc
popa
add
rolb
jnp
jl
adc
fdivs
movsb
gs
mov
out
mov
mov
fstl
cmp
jl
stos
push
cmc
in
pop
aaa
in
jmp
in
xchg
fldenv
pop
cmc
aaa
test
popa
arpl
push
dec
sub
in
sub
into
and
jne
mov
lods
mov
dec
fists
repz
pop
sahf
int
shlb
mov
enter
mov
cwtl
ret
add
mov
call
xor
sahf
push
arpl
lods
xchg
xor
xchg
fnstenv
xchg
jae
add
loop
stc
ret
jo
inc
and
cwtl
push
aad
pop
ljmp
sub
mov
mov
rorb
les
dec
bound
out
sbb
ss
inc
call
xor
inc
int3
push
call
adc
or
pop
loope
out
pop
in
pusha
pop
in
pop
mov
xor
cmc
lods
frstor
in
pop
cltd
pop
add
call
sub
sbb
xlat
xchg
push
mov
fstpt
cmp
sarb
popa
cld
pop
mov
and
jle
out
test
or
pop
or
outsl
add
ljmp
scas
mov
push
nop
jl
leave
mov
adc
xor
xchg
add
subb
jge
jae
cmpsb
sti
xchg
lods
jp
push
icebp
int3
and
scas
dec
mov
inc
sub
xchg
sbb
mov
pop
pop
sub
xor
pop
xor
iret
mov
movsl
inc
icebp
cmp
mov
ljmp
in
pavgb
call
fcmovu
cwtl
insb
mov
add
fisubs
xchg
inc
add
bound
test
out
ret
push
inc
fisttps
ds
mov
pop
mov
or
cs
mov
lret
loope
aas
idivb
daa
add
add
cli
push
push
mov
cltd
sahf
push
pop
ljmp
mov
ror
add
pushf
and
jb
push
cmp
test
push
push
cltd
movsl
ret
test
adc
popf
jge
push
cmpsb
jle
jge
cli
push
hlt
lock
push
popf
into
cmpsb
lods
push
sub
push
fdivrl
mov
mov
andl
dec
imul
pop
mov
out
jo
out
movsb
inc
icebp
aam
out
addl
aas
push
mov
mov
lret
stos
das
paddd
add
loopne
sbb
or
xor
pop
mov
fmul
rorb
roll
cmp
pusha
xor
call
pop
and
mov
add
inc
xchg
mov
in
std
push
adc
pusha
and
leave
jle
push
mov
gs
xchg
sub
test
pop
jb
nop
ret
fldenv
mov
cltd
lcall
mov
hlt
std
mov
or
icebp
xchg
ret
ret
loope
in
mov
jae
loope
mov
ss
push
mov
popa
add
es
mov
jmp
push
test
repz
inc
iret
iret
add
sahf
mov
ror
mov
testl
adcb
push
cmp
mov
ss
aad
test
adc
xlat
jl
nop
imul
fisubl
jg
jle
mov
lds
and
stos
in
push
sbb
and
int3
xchg
js
add
loope
mov
les
push
lcall
lahf
jae
daa
mov
aas
jecxz
ret
mov
lcall
ss
adc
push
mov
fs
arpl
popf
or
aaa
and
pop
scas
repnz
xorl
sbb
pop
les
sbb
out
ss
cltd
sub
ljmp
sub
mov
jecxz
dec
jecxz
insl
or
cwtl
fdivl
push
adc
pop
jl
in
inc
sbb
iret
mov
xchg
push
popa
xchg
mov
in
ljmp
pop
add
lds
or
daa
add
adc
nop
scas
pop
xor
xorl
or
or
and
adc
loopne
add
jp
fildl
xlat
cld
lds
mov
add
add
out
mov
jmp
sub
pop
popf
cmp
test
loop
dec
and
lahf
xchg
shrb
push
notl
mov
outsb
lock
arpl
inc
insb
daa
push
pop
pop
pop
mov
mov
lods
icebp
mov
push
fldcw
or
push
lods
cmp
mov
sbbb
hlt
aam
cltd
sub
pop
xchg
sub
fnsave
push
int3
sbb
fadd
loop
insl
push
test
add
jl
xchg
out
cmp
add
cmpb
mov
push
insb
js
mov
addr16
hlt
ljmp
xchg
or
mov
outsb
push
clc
insb
jecxz
stc
ret
icebp
jmp
pop
negb
movsl
in
jns
or
jns
mov
in
mov
ror
adc
push
clc
or
sbb
adcl
jge
les
mov
fdivr
xlat
aas
lods
fucomip
fwait
and
insb
test
or
add
jno
clc
int
pop
hlt
mov
das
sahf
mov
out
rorl
and
sub
pop
dec
enter
mov
daa
xor
mov
and
mov
stos
insl
xor
arpl
enter
cli
pop
lcall
cmpsb
inc
sbb
and
push
pop
xchg
test
out
scas
lret
pushl
fs
out
sbb
int
inc
out
sahf
jge
jmp
std
sbb
xchg
lahf
cmp
icebp
pop
jg
dec
sub
pop
mov
imul
out
lods
or
int3
xchg
cld
shl
push
sahf
outsl
dec
jnp
dec
adc
out
xchg
jmp
jmp
cmc
xor
sbb
aaa
mov
xor
pop
cmpsb
sub
mov
pop
jl
clc
dec
mov
or
add
cmp
mov
pop
fwait
sub
lods
repnz
fdiv
xchg
rcr
cld
pop
push
lods
aaa
enter
stos
jnp
loopne
loopne
adc
mov
loopne
cli
cmp
mov
cld
jnp
repz
imul
sti
or
mov
fidivs
adc
push
jae
stc
mov
fdivrs
lds
out
into
jbe
stc
cmp
mov
js
insb
adcl
adc
ds
push
out
addr16
fnsave
pop
std
or
imul
pop
adc
ffree
out
mov
mov
out
lcall
mov
lods
ret
cmpsl
jmp
jne
mov
not
inc
out
mov
mov
mov
out
cmp
daa
cmc
aad
inc
fs
out
mov
lea
insl
adcl
push
pop
sbb
iret
mov
jo
lock
add
lods
lahf
es
push
jo
and
pop
call
rcrl
dec
xchg
addb
lcall
or
or
scas
and
push
bound
jo
cwtl
dec
fstpt
arpl
mov
scas
je
rcrb
inc
dec
dec
jns
gs
lods
int
icebp
icebp
mov
xchg
xchg
fstpt
movsl
inc
lahf
pop
mov
shr
sbb
stc
or
shrl
out
jbe
pop
pop
arpl
add
xor
cmp
bound
adc
dec
aaa
ljmp
shll
cmc
xor
aam
imul
das
sbb
call
push
arpl
insb
mov
popa
lret
sbb
mov
xor
adc
push
push
int
add
fiadds
jmp
in
incb
inc
pop
dec
adc
or
pop
jl
or
enter
loope
add
inc
mov
add
jg
mulb
ss
lds
add
ljmp
xor
sub
outsl
pop
fnstcw
stc
xchg
push
jl
outsl
lds
add
sub
leave
cmpsl
loop
mov
add
mov
int3
xchg
pop
push
mov
sbb
mov
xchg
sub
xchg
fldcw
sub
hlt
mov
cmp
imul
fnsave
add
push
sub
sbb
fstp
in
popa
mov
mov
push
mov
xchg
mov
mov
out
mov
sbb
scas
daa
fstpt
jno
push
addr16
icebp
jae
mov
test
or
and
cmp
jnp
pop
push
sbb
dec
enter
cmp
mov
test
mov
mov
mov
adc
add
cli
insb
xor
or
popa
add
ljmp
jbe
cli
mov
lret
fsubr
cld
aam
xchg
xchg
jg
stos
push
sub
ljmp
out
ror
cmpsb
pop
cmp
xchg
cltd
dec
es
les
adc
mov
and
inc
pop
push
xor
fcoml
xor
sbbl
cmpsb
cltd
pop
or
adc
mov
aaa
arpl
jns
imul
xchg
scas
fsubr
popa
jne
in
dec
scas
sbb
mov
push
jo
sahf
mov
dec
inc
pop
or
fwait
stos
and
jge
push
out
cmpsl
pmulhuw
pop
in
fldl
in
sub
xchg
xchg
or
sbb
dec
push
mov
jmp
push
cld
jo
fwait
cmp
into
push
js
push
sub
xchg
sbbb
jo
push
mov
orl
sub
xchg
jmp
push
cwtl
mov
pop
cmpsl
fmul
cmp
aas
xchg
repz
dec
shl
and
notl
pop
mov
sub
sbb
or
stc
push
jmp
dec
mov
jle
mov
imul
sbb
or
stc
push
jmp
dec
mov
jle
mov
imul
cmp
sub
sbb
or
stc
push
jmp
dec
mov
xchg
mov
pop
sahf
dec
into
cmp
sub
sbb
push
stc
loope
test
ds
xchg
xorw
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
push
xchg
jbe
inc
mov
jl
negb
outsl
xchg
push
push
rcll
mull
shlb
movb
cmp
jbe
xchg
jbe
inc
mov
es
es
mulb
ljmp
inc
aam
mov
xchg
xchg
outsl
cmpsb
pop
mov
aas
cs
testb
push
aad
mov
aas
ret
sbb
imulb
xchg
push
ljmp
negl
cmp
mov
dec
pop
ret
jns
out
shll
cld
rorl
push
push
fld
insb
stc
sub
sbb
or
mov
call
add
xchg
sbb
ret
sbb
push
out
divb
leave
sub
add
roll
xchg
mov
es
es
jb
xchg
push
push
rorb
daa
cmp
pop
cmpsb
lcall
jnp
imul
out
idivb
sbb
jbe
outsl
adc
aad
adc
xchg
add
xor
lods
push
xchg
push
pop
xor
mov
pushf
push
cmp
push
test
fnstenv
data16
pop
mov
es
ss
testb
out
out
fbstp
iret
inc
mov
jbe
repnz
and
xor
push
jae
mov
xor
sbb
pmullw
shlb
mov
out
mov
xchg
jnp
pop
mov
and
loop
mov
and
ss
notb
push
out
mulb
ss
inc
cmpsb
push
mov
xchg
xchg
jbe
inc
mov
es
ss
notb
push
out
mulb
ss
inc
cmpsb
push
mov
xchg
xchg
gs
in
mov
hlt
fildl
sbbl
mov
test
xlat
filds
popf
xchg
push
mov
inc
jb
sub
cltd
and
orb
out
fnsave
mov
sbb
dec
mov
xor
mov
mov
stos
insb
mov
repnz
push
xor
push
pop
loopne
enter
push
push
xor
fcoms
push
shrb
sub
popa
cmp
jns
push
mov
test
ds
ret
jmp
mov
dec
and
outsb
dec
inc
jnp
add
ss
sub
scas
xor
pop
repz
pop
dec
mov
pusha
pop
popf
xchg
and
dec
add
mov
aam
stos
incl
insl
leave
add
pop
xchg
sbb
mov
pusha
test
add
frstor
and
push
insb
adc
pusha
adc
rclb
jo
lock
icebp
movsb
movsb
add
adc
dec
jle
or
shll
imul
inc
fldl
test
lds
and
hlt
push
fdivp
mov
xor
je
xchg
mov
add
mov
sahf
add
sbb
out
dec
leave
es
jg
xchg
out
lret
loop
pop
sub
in
jmp
jnp
in
jns
xchg
sbb
ret
mov
jecxz
test
pop
or
lock
xchg
ficompl
push
sahf
pop
fwait
test
mov
pop
add
cli
gs
pusha
sub
jne
insb
out
jno
xchg
sbb
mov
push
jmp
repz
loope
xor
pop
faddl
cmc
cmpsl
out
jle
sbb
cmp
loopne
outsl
jp
sbb
xor
sub
push
data16
arpl
mov
or
push
fcoml
push
in
mov
fsubr
or
cli
jbe
jge
rcrb
mov
cmp
mov
or
push
cmp
into
jae
add
inc
jmp
bound
imul
ds
in
cmp
std
iret
icebp
shll
das
xor
sub
mov
test
aaa
inc
cmp
jae
outsb
xlat
fidivl
mov
lahf
cltd
push
sub
jnp
in
push
fiaddl
lea
out
mov
dec
clc
sub
mov
mov
push
xchg
fwait
sub
dec
or
xor
or
mov
push
clc
lock
loop
sub
fdivr
mov
das
push
sbb
pop
rclb
xor
jmp
mov
repz
add
ficoms
nop
xchg
add
and
mov
mov
mov
adc
out
jle
mov
nop
in
jge
jge
iret
enter
jecxz
adc
cmp
inc
mov
test
xchg
mov
aad
cmp
leave
xchg
and
add
and
push
and
dec
sarl
dec
add
dec
inc
adc
lock
inc
pop
repz
in
mov
mov
fs
sub
lcall
fnsave
push
jo
xchg
and
bound
cmp
add
lret
push
clc
repz
imul
fimull
mov
jg
sbb
test
add
xchg
lret
jmp
dec
push
xchg
shll
scas
sbb
cltd
sti
out
cmp
jae
jnp
lods
ret
add
inc
xchg
xlat
inc
pop
cmpsb
shrl
inc
mov
fsubs
int3
adc
pop
jbe
mov
push
scas
or
pusha
push
push
xor
loope
xchg
leave
sbb
les
mov
icebp
inc
mov
jne
xchg
repz
pusha
mov
mov
or
xchg
mov
jecxz
dec
nop
es
gs
loopne
rolb
fwait
ret
xchg
divb
jae
cmp
and
mov
lods
cs
outsb
mov
cs
or
clc
out
sub
mov
sbb
call
inc
cmp
xchg
jle
cmc
sahf
adc
mov
dec
jbe
jecxz
fadds
test
sub
jge
lcall
mov
in
jp
icebp
in
fistpll
jne
mov
pop
fnstsw
cmp
std
lods
mov
test
and
in
pushf
push
cs
mov
cltd
aas
stos
and
cmp
arpl
stc
bswap
mov
add
push
in
jle
push
cmp
hlt
nop
mov
cmp
prefetch
lahf
cld
inc
cmp
lahf
insl
mov
sbb
aad
mov
mov
mov
cmp
ja
xchg
xchg
addl
in
mov
or
inc
add
lods
ficoml
loop
cmc
add
sub
test
push
jnp
mov
ljmp
xchg
xor
das
lods
loope
jmp
mov
jb
mull
add
jbe
dec
cmp
adc
imul
test
dec
mov
cli
mov
jo
ss
sub
scas
xchg
xchg
loopne
je
mov
int
fsincos
inc
movsb
pusha
jg
cmp
dec
add
mov
outsb
vsqrtsd
popf
loop
mov
inc
xchg
sub
push
xchg
shl
mov
inc
adc
nop
loopne
cmp
insl
xchg
loopne
rcr
sub
orb
sbb
arpl
cmpsl
cmpsb
stos
pusha
push
stos
jmp
sub
pop
sub
inc
sbb
xor
out
fisubrl
cmpsl
mov
rcr
inc
pop
jmp
jg
insl
add
in
sub
push
addr16
or
or
adc
scas
mov
iret
js
jns
arpl
pop
shll
cmpsl
stos
pop
lret
adc
mov
mov
adc
sahf
mov
daa
lds
int3
out
pop
xor
mov
pop
lds
mov
icebp
cmp
out
lcall
lock
push
sub
cmc
repz
loopne
imull
out
and
push
iret
sub
mov
xchg
jo
stos
or
into
sbb
add
cwtl
mov
nop
or
mov
fs
icebp
loopne
xchg
cmp
sbb
ret
lods
mov
dec
lahf
cmc
cmp
fsubs
mov
scas
xor
cld
in
jb
sub
push
cmp
or
roll
and
jns
mov
roll
adc
add
ljmp
jbe
cmp
lods
aas
cmpsl
push
mov
mov
lcall
dec
test
mov
insb
fadds
push
mov
decl
lds
and
and
or
es
addr16
cmp
xchg
sbb
sub
xchg
cli
mov
in
shll
and
loop
sub
push
fadd
jp
cli
jb
pop
xchg
mov
sub
and
cmp
push
out
movsl
push
aas
add
pop
push
aad
xchg
mov
scas
push
lret
sti
cmpl
sbb
pop
adc
clc
daa
ret
mov
or
std
js
mov
scas
xchg
ljmp
cli
mov
cli
add
xchg
repnz
xor
inc
mov
add
jbe
push
shlb
xchg
movsb
sub
inc
mov
sbb
arpl
jle
cmpsb
sub
jno
iret
into
in
push
or
lcall
adc
or
imull
xor
sub
int
and
call
movsb
sbb
dec
cs
jp
add
or
pop
repz
in
xor
cmp
stc
adc
lret
movsb
and
pop
pushf
fwait
mov
push
xor
dec
rol
jl
adc
outsb
loopne
stos
fnsave
jg
mulb
and
inc
cmpsl
out
lcall
pop
imul
sub
rdpmc
test
arpl
cltd
adc
cli
add
fcoms
push
mov
fcoms
inc
into
mov
fcomps
sbb
test
xor
fsts
inc
pop
pavgw
sub
mov
into
adc
fnstsw
cli
insb
xchg
pop
pusha
loop
add
or
sar
inc
xchg
dec
test
sub
das
dec
cmc
cmp
or
sub
js
scas
cmp
rcrb
mov
jp
xchg
adc
mov
ja
lret
mov
mov
out
daa
movsl
cli
shrb
rolb
pushf
js
sub
pop
shl
and
pop
andb
clc
stc
pop
std
mov
mov
mov
sub
xor
roll
cmp
jb
lcall
icebp
push
xchg
adcb
xchg
cmpsl
out
pop
mov
inc
test
jle
fs
push
fldenv
mov
aaa
leave
push
outsl
xchg
and
sbb
sahf
xlat
jmp
les
lea
leave
test
mov
jmp
dec
xchg
mov
pop
push
das
mov
xor
xchg
cmc
sbb
push
push
out
xchg
insb
sub
mov
hlt
inc
or
mov
lods
jb
subb
out
xchg
pop
or
stos
ret
in
lods
pop
jmp
jnp
xor
add
popf
test
in
sbb
rcl
and
loope
mov
scas
call
mov
movb
xchg
jecxz
jmp
jmp
daa
dec
popa
sub
out
cmp
adc
in
sub
or
dec
mov
cmp
call
in
arpl
jnp
pop
fldenv
stc
sbb
add
add
pop
lds
sub
outsl
mov
and
lret
loope
dec
cmp
pop
xor
push
aaa
sub
add
cmp
test
jge
dec
lcall
add
repnz
cltd
mov
inc
mov
loop
adcb
pusha
arpl
mov
push
loop
dec
xchg
xor
aam
mov
push
cmp
rcrl
cmp
sahf
out
dec
outsl
repz
repnz
adc
push
pop
dec
or
jecxz
push
lds
push
xchg
out
sbb
ret
sarl
jmp
in
pushf
mov
pop
jmp
inc
mov
insb
popf
or
mov
rcll
xchg
div
scas
mov
mov
mov
dec
pop
int3
es
rorl
fmulp
testb
push
mov
scas
inc
test
dec
les
xchg
mov
xchg
pop
aas
add
cmp
out
insb
je
push
daa
mov
pop
outsb
cld
xlat
mov
sbb
ds
es
nopl
jle
int3
test
pop
mov
mov
and
sub
jb
pushf
pop
sbb
jne
nop
or
mov
xor
and
sbb
cmpsl
stc
rcrb
fildl
fs
dec
sub
fmull
out
jnp
ss
xchg
sahf
mov
sahf
stos
or
dec
in
cli
and
jae
popf
repnz
xor
jge
and
and
fs
shrb
ds
iret
out
mov
notl
aad
mov
cmp
mov
int3
jg
xor
lea
sub
and
sbb
mov
out
fstps
iret
dec
dec
imul
decl
push
add
test
inc
cltd
mov
les
daa
lret
or
aaa
pusha
sbb
sbb
push
inc
jb
mov
loopne
inc
adcl
cwtl
test
xchg
jns
std
shll
push
out
add
outsb
mov
sbb
pushf
jbe
incb
cld
popa
aaa
dec
jb
cltd
push
adc
pop
lea
sub
cs
es
movl
roll
dec
pop
ret
push
jl
mov
jmp
ror
inc
or
or
lea
adc
xchg
sbb
or
in
mov
clc
sar
mov
fisttps
adc
sbb
iret
popf
xor
movsb
lea
xor
push
dec
mov
lret
repz
xor
iret
cmp
movsb
shr
aad
cmpsb
inc
xchg
xchg
xor
cmp
jo
cmp
xorl
sar
push
gs
mov
or
pop
cmp
test
pop
mov
int
cmp
test
into
pushf
pop
lret
in
into
dec
in
mov
inc
cwtl
out
mov
or
pop
test
dec
mov
mov
imul
cs
arpl
mov
mov
mov
push
jp
or
cmp
and
aaa
add
lods
sbb
xchg
sarl
lcall
mov
pop
scas
push
aad
arpl
adc
inc
ficomps
nop
pop
push
cmp
in
mov
cmp
ret
jg
push
test
test
push
icebp
inc
sahf
leave
adc
push
test
add
ljmp
cmp
push
pop
xorb
mov
push
add
xchg
jbe
inc
xchg
popf
in
std
mov
push
jecxz
mov
pop
scas
xchg
jae
jnp
ret
pop
mov
xchg
sti
hlt
les
loope
mov
or
enter
lcall
pop
push
inc
add
xor
out
cmc
inc
fimull
pop
add
lds
pop
outsb
dec
hlt
jle,pn
xor
push
cmp
jno
dec
fcmovnbe
mov
rcrl
aam
inc
and
lcall
mulb
dec
inc
pop
jae
loopne
add
mov
push
hlt
push
movsb
or
loope
sbb
push
sub
lods
in
lods
shrl
ret
cld
cmp
in
mov
mov
hlt
dec
mov
pop
in
sti
mov
mov
movsb
add
ss
pusha
ljmp
imulb
mov
cmp
inc
inc
inc
jecxz
and
mull
call
sbb
insb
xchg
lock
data16
pop
mov
xchg
xchg
pop
loopne
pop
mov
add
sub
mov
and
xchg
jae
or
insb
adc
jge
je
mov
xchg
sub
mov
pop
or
rcr
jo
lahf
shl
lcall
or
ja
lcall
push
xor
mov
fstps
mov
orb
rcrb
inc
xor
cli
xor
stos
cld
push
jbe
mov
incb
mov
imul
test
mov
and
add
test
cltd
leave
lahf
mov
and
cld
jae
fwait
clc
test
sub
mov
mov
repz
subb
mov
ficomps
insl
dec
arpl
pop
icebp
fcmovb
adcb
dec
inc
inc
cwtl
loope
inc
gs
dec
push
push
inc
loope
mov
fldcw
push
push
xor
fdivrl
xor
leave
adc
popa
adc
jno
sub
arpl
mov
test
xchg
mov
jge
jg
out
pop
fisubrl
das
inc
dec
and
cmp
setp
xor
adc
negl
addr16
inc
inc
pop
bound
aam
fdivrl
fmull
cmp
adc
insb
cmp
fs
scas
mov
push
in
aad
dec
lret
pop
jp
pop
and
add
sbb
ficoml
aam
fdivl
out
sub
outsl
ficoms
xor
les
push
pop
andl
jmp
dec
cmpsl
out
inc
rorl
stos
adc
leave
sbb
gs
push
xor
movsl
ljmp
pop
rol
ret
inc
lods
mov
mov
mov
cld
ret
xor
jecxz
enter
addr16
dec
nop
mov
daa
pop
mov
mov
push
mov
adc
call
jp
push
sub
cmc
imul
movsl
call
inc
push
gs
mov
ds
inc
hlt
pusha
and
cmp
je
sahf
stos
or
push
dec
xor
push
lock
cmp
repz
mov
std
mov
and
push
jp
push
cmpb
jno
cmp
jno
lock
pop
cmp
cmovno
or
pop
push
pop
sar
in
and
addr16
out
push
pop
dec
sarl
dec
xor
shrb
push
loop
aaa
mov
fisttps
xor
sbb
mov
xor
xchg
out
mov
fcmove
mov
jmp
jnp
mov
mov
push
cmpsl
clc
fisubl
mov
hlt
fimull
mov
dec
pusha
arpl
mov
ret
aad
pop
cmc
sbb
xor
out
adc
push
push
insb
loopne
xchg
adcl
mov
sub
arpl
out
pop
arpl
sarb
fs
push
std
xchg
arpl
xlat
and
pop
outsb
push
jns
jns
mov
mov
mov
sub
enter
pusha
pop
inc
icebp
in
int3
inc
gs
pop
or
inc
sub
fisubrl
cmp
cmc
adc
cmp
imul
arpl
sarl
jge
mov
xchg
cwtl
cmc
loop
cmpsl
mov
adc
pop
mov
mov
in
inc
faddl
lahf
jg
inc
or
mov
leave
data16
pop
lcall
or
lcall
push
incl
repz
bt
aam
cltd
out
rorb
sub
sbb
mov
pusha
cs
mov
push
push
or
insb
imul
or
push
xor
jnp
sbb
mov
inc
fisubrs
lds
push
push
sbb
and
jl
lods
mov
mov
ds
fwait
hlt
cld
mov
dec
inc
push
sub
mov
movsl
adcb
and
sbb
movsl
cwtl
push
and
psrld
into
mov
push
xchg
push
loop
ss
cmpsl
loope
jns
jae
divb
push
add
in
fldt
cmpsl
sbb
negb
cs
pop
mov
and
push
out
repz
in
les
push
imul
dec
scas
cmpsb
aad
inc
ss
adc
or
sbbl
rol
fistpll
test
psubusb
push
aaa
pop
pop
mov
pushf
test
fdivs
enter
inc
out
and
adc
aaa
xor
jae
sarl
jno
jno
lahf
sub
clc
loope
iret
jno
std
out
adc
out
aaa
xchg
lods
rorl
insb
mov
hlt
sub
out
iret
adc
pop
cmpsl
jb
mov
mov
push
daa
mov
xor
cli
sbb
or
scas
out
or
gs
enter
mov
add
adc
test
dec
xor
sbb
mov
mov
pop
mov
scas
repz
mov
repnz
mov
out
rolb
movsb
push
shlb
lahf
fiadds
and
sub
cs
inc
insl
int
xlat
mov
fwait
cmp
jecxz
push
xchg
aad
pushf
add
adc
or
pusha
fcompl
xchg
xchg
add
in
or
push
scas
jge
mov
adc
dec
mov
xlat
es
test
aad
xchg
shl
jge
sbb
xchg
jge
aam
shlb
imul
loop,pt
push
ret
cli
add
out
inc
dec
sub
mov
adc
mov
or
xor
outsb
push
icebp
and
cmp
inc
and
xchg
xlat
cmpsl
inc
pop
fmull
mov
fstp
jbe
sbb
push
jb
fdivp
sub
xor
pop
imul
iret
je
ljmp
xor
add
jmp
and
push
rorl
cltd
out
or
adc
pop
xor
jb
fbstp
leave
loopne,pn
pop
fsubrp
jnp
movsb
push
out
sbb
arpl
or
test
dec
enter
xor
and
pop
xor
sbb
push
test
daa
dec
loop
in
mov
push
jo
pop
mov
mov
jne
jl
leave
jp
cmpsl
scas
popf
cmpsb
lock
jb
idiv
fists
sub
mov
pop
push
xchg
mov
add
movsb
test
xchg
mov
push
in
pop
stos
rclb
pop
mov
add
ret
mov
fstps
add
xor
scas
lock
mov
cmp
insl
lods
aam
xchg
test
outsl
inc
iret
daa
sarl
pop
sarb
mov
aad
popf
rorl
fcomps
out
jl
fwait
push
xchg
loopne
mov
imul
pop
push
repnz
mov
cli
push
add
lods
sbb
xchg
test
push
in
push
ds
fwait
mov
xor
scas
dec
es
fstl
ret
incb
dec
stos
jne
cld
fwait
jns
add
into
jne
loope
add
fwait
sub
xchg
cmp
je
mov
std
inc
lret
ret
movsl
icebp
out
jle
iret
xchg
mov
arpl
ss
das
push
mov
sar
cwtl
jle
pop
xchg
sbb
dec
inc
xchg
dec
scas
stos
pop
dec
in
ret
shrl
out
xchg
sub
andl
out
xor
pop
repz
pop
shlb
fidivs
arpl
shrl
inc
test
fldcw
cld
stos
inc
ja
movl
outsl
call
in
add
xchg
orl
psrld
sbb
mov
outsl
sbb
and
lods
jb
pop
cltd
cmp
or
shlb
inc
sub
shll
movsb
out
pop
mov
push
mov
xor
outsb
and
pop
push
pushf
lock
popa
adc
sub
sub
icebp
test
sbb
and
mov
ret
lock
xor
push
inc
or
jo
pop
xor
out
out
sti
lock
lds
je
cmp
push
mov
inc
iret
pop
dec
jbe
clc
out
mov
mov
movsb
cmp
cmp
sub
or
sbb
push
mov
jbe
dec
dec
es
push
fsubrs
xorl
mov
dec
add
repnz
call
idivl
dec
ss
push
cmpsb
pop
call
cwtl
out
add
subl
dec
cltd
jnp
pop
push
popf
push
fcomps
mov
mov
xlat
loop
mov
enter
mov
or
lock
ljmp
jp
or
jae
in
xchg
lods
das
mov
ret
subb
daa
lahf
pop
cmp
cmp
scas
lret
sbb
xor
addr16
test
and
int
push
mov
mov
imulb
loopne
mov
dec
mov
fdivrs
sub
lock
mov
mov
mov
pop
mov
inc
cmp
push
cmp
sti
test
lds
lock
dec
bound
sub
lods
push
push
pop
fnstsw
cmp
jecxz
jmp
pop
mov
jno
js
inc
add
leave
inc
and
ljmp
les
cltd
jnp
pop
shlb
sbb
in
and
pusha
pop
dec
addr16
dec
icebp
xor
hlt
in
movsl
jbe
inc
mov
es
ss
notb
push
out
mulb
ss
inc
cmpsb
push
mov
xchg
xchg
jbe
inc
mov
es
ss
notb
push
out
mulb
ss
inc
cmpsb
push
mov
xchg
xchg
jbe
inc
mov
es
ss
notb
push
out
mulb
rolb
push
mov
xorb
bound
push
es
ss
not
push
out
pop
mov
mov
cltd
stc
mov
int3
int3
int3
int3
int3
imul
and
call
adc
add
je
loope
push
fwait
inc
imul
sub
cmp
or
sbb
jmp
sti
inc
lret
adc
add
je
mov
fwait
inc
imul
sub
cmp
or
sbb
jmp
fsubs
jo
add
xor
or
es
pop
mov
sti
dec
sti
xor
and
insb
pop
loopne
nop
shlb
shrb
inc
faddl
arpl
xchg
test
repnz
jnp
ja
sbb
shl
test
jbe
xor
add
adc
and
call
rcll
fcmovnbe
pop
stc
stos
jne
movsb
or
pop
daa
mov
test
in
pop
sbb
sbb
jbe
sub
and
sti
push
mov
leave
cmp
into
adc
icebp
test
repz
jmp
sti
cmp
push
and
jge
xorl
and
add
add
dec
inc
cltd
inc
test
jnp
dec
xchg
pop
test
hlt
cmp
or
sbb
jmp
sti
and
adc
add
je
mov
push
fistpl
movsb
or
cwtl
push
in
lcall
mov
adc
jmp
sbb
xchg
sbb
dec
mov
pop
les
jne
imul
loop
icebp
adc
std
jnp
or
hlt
cmp
or
sbb
jmp
sti
and
adc
add
je
mov
imul
sub
cmp
or
sbb
jmp
sti
and
adc
add
je
mov
imul
sti
cmp
push
adc
arpl
xchg
leave
add
insl
lret
mov
cmpsl
mov
js
inc
mov
push
jno
inc
push
je
pusha
fsts
xchg
and
push
push
in
push
fs
test
mov
mov
xor
push
sbb
pop
pop
pop
mov
imul
pop
rolb
ret
mov
out
pop
orb
mov
sub
sbb
lods
jmp
pop
out
jnp
push
or
rolb
sbb
iret
mov
dec
or
pusha
xchg
xor
sub
mov
pop
lods
stos
shrb
mov
fldl2e
xchg
xor
lahf
mov
adc
sahf
push
movsl
push
xor
je
enter
ljmp
and
sub
call
xchg
divb
jmp
fbld
push
add
movsb
push
mov
shlb
jb
fisttpll
mov
jg
testl
push
shll
les
sub
jg
roll
or
fs
xor
ret
inc
xchg
repz
popf
inc
leave
and
lds
adc
out
push
outsb
fwait
cmp
pusha
add
or
cmp
push
iret
int
add
dec
aas
pop
mov
adc
cmp
xor
mov
int3
fdiv
mov
jecxz
loop
xchg
jge
ret
cmp
push
jg
jge
add
inc
push
sub
xchg
pop
into
sub
xor
add
sbbb
hlt
pop
xchg
xor
sub
lret
les
gs
mov
fs
lret
lods
lret
clc
mov
cmp
jbe
bnd
movsl
shl
loope
mov
loop
pop
adc
ficompl
mov
push
iret
and
or
imul
and
mov
rcr
mov
sub
xor
iret
fmull
jmp
dec
mov
sbb
cmp
fcoml
push
int3
call
push
loop
mov
icebp
arpl
mov
jp
add
shl
jge
push
popa
movsl
cmp
gs
add
roll
aad
sbb
addl
movsb
sbb
das
call
ror
cmp
das
pop
fwait
out
hlt
hlt
add
xor
fdivl
cmpsl
divb
pop
jg
sbb
xlat
into
mov
jl
aam
pop
jmp
lcall
scas
cmp
add
dec
mov
xlat
xor
and
lods
js
aas
mov
cmp
cmp
bts
xlat
cmpsl
les
adcl
js
pop
sub
and
leave
in
jae
testb
sub
inc
pop
scas
nop
mov
lods
inc
test
sub
lea
jnp
cmp
gs
xchg
imul
lock
xor
pop
pop
mov
sbb
cmp
aad
xor
cmp
mov
or
loopne
cmp
sbb
jae
mov
push
or
jg
fdivs
jmp
jo
push
adc
stos
dec
repnz
pop
test
mov
hlt
lret
xor
nop
mov
loope
cmp
lds
ret
in
int
test
ret
mov
xchg
mov
dec
shrl
movsl
addr16
and
stos
adc
xchg
xchg
inc
jg
jle
push
jmp
fcoms
pop
push
aad
les
std
adcl
add
pushf
inc
xchg
popa
cmp
lds
leave
cmp
jb
pushf
mov
add
pop
xor
or
js
sarb
rcrl
mov
dec
aam
in
mov
push
into
fs
sbb
stos
cltd
bound
repz
gs
fdivs
xchg
mov
std
arpl
aad
ja
in
or
cs
push
lcall
jns
jbe
lods
push
insb
stos
ljmp
pop
or
jo
lock
fldcw
pop
push
pushf
xor
sub
push
andl
adc
or
mov
jb
and
or
adc
andl
adc
fstpl
das
mov
xor
push
cld
test
arpl
jg
mov
or
push
out
jecxz
mov
add
int
int
adc
cli
mov
shll
shr
jbe
fstpl
ret
sub
mov
arpl
lret
loop
outsb
lea
test
mov
pop
mov
jecxz
subb
ficomps
add
or
sub
inc
cmp
in
mov
ja
xchg
lcall
test
lahf
inc
int
dec
xor
das
sti
in
cmp
imul
xor
xchg
in
lds
aas
inc
pushf
into
lock
pop
xor
adc
cmp
fldenv
shrl
mov
into
aam
loop
and
push
lea
sar
push
imul
mov
jle
rclb
repz
and
stc
sub
leave
repnz
mov
xchg
cmc
sbb
hlt
aas
insb
mov
mov
and
sbb
leave
mov
fcoms
jp
data16
xchg
lret
sbb
xchg
lods
or
add
add
hlt
and
or
daa
push
jg,pn
in
cs
dec
and
xor
inc
outsb
adc
stos
pop
or
and
mov
adc
mov
clc
popa
ss
dec
popa
push
adc
mov
jmp
loope
cli
les
sti
test
mov
xor
push
xor
xor
dec
mov
push
or
adc
hlt
pop
mov
clc
add
adc
or
cmp
loope
adc
jg
test
mov
test
int
sub
and
xchg
and
shl
fdivrp
ds
dec
jo
popf
pusha
mov
dec
popa
loop
cmpsb
gs
sti
sbb
inc
push
fs
repz
in
pusha
daa
mov
cmpsl
dec
fisubl
sbbl
jbe
insb
pop
inc
inc
jle
sbb
xor
loope
dec
pop
sbb
imul
ret
xchg
mov
or
icebp
movsl
mov
int
daa
pusha
in
fmuls
fcmovne
mov
xchg
or
fchs
leave
xchg
in
shll
pusha
daa
mov
add
mov
js
scas
inc
shl
dec
clc
imul
outsb
int3
pop
mov
cmp
imul
mov
ds
inc
into
mov
lret
xor
and
test
xchg
jl
es
mov
in
or
out
outsl
pop
add
push
jg
mov
stos
cmp
in
inc
xchg
popf
aad
repnz
push
loopne
xor
xchg
addr16
sub
jbe
stos
fisubs
sbb
clc
gs
std
jne
cs
call
mov
sbb
inc
pop
mov
lret
adc
cmc
push
imulb
sub
inc
stos
sti
mov
loop
dec
mov
dec
mov
jmp
mov
add
movsb
mov
stos
loope
pop
stc
nop
mov
outsb
popa
mov
lds
ret
jl
mov
inc
jns
inc
lea
insb
mov
mov
popf
and
xchg
cmp
sbb
shl
aad
push
jo
arpl
mov
or
shrl
test
ljmp
or
sub
push
sub
stc
pop
dec
push
xorl
or
lock
roll
xor
mov
push
mov
sbb
sub
aad
mov
cmpsl
pop
push
enter
pop
jmp
inc
in
out
sbbl
mov
xor
ret
xchg
dec
test
inc
out
fisttps
hlt
in
mov
sbb
sbb
mov
scas
mov
mov
and
adc
mov
or
imulb
aam
adc
cltd
stc
mov
aas
scas
pmullw
pop
xor
adc
mov
sub
stos
jle
fs
cmp
sbb
xor
rclb
add
js
pop
stos
dec
and
lods
push
addb
sbb
push
or
mov
aam
add
pop
je
hlt
cli
dec
mov
jbe
popl
pop
loopne
aad
orb
jle
dec
adc
mov
inc
shr
test
rolb
mov
fbld
or
jg
dec
fsts
and
jle
test
adc
mov
lahf
loope
mov
loope
jns
xor
enter
stos
jmp
pusha
xchg
repnz
das
mov
adc
cmp
pop
mov
frstor
and
scas
and
xor
pop
hlt
cmpsb
outsl
ja
neg
jge
pop
sbb
cmc
xlat
add
sbb
mov
ficoms
cmpsb
mov
dec
adc
aas
stos
jne
outsb
mov
lock
push
pusha
inc
incl
jbe
adc
mov
filds
pop
xchg
iret
cmp
mov
mov
mov
adc
or
andl
outsl
scas
lods
in
push
dec
ja
adc
mov
mov
daa
jmp
scas
test
lret
jno
cmp
arpl
fcompl
je
stos
mov
dec
pushf
or
outsl
jmp
sbb
fisubrl
jmp
inc
jne
int3
dec
mov
gs
inc
cmp
std
adc
add
shl
cwtl
sahf
add
mov
sbb
cs
jg
xchg
push
imul
xlat
pop
cwtl
or
jmp
in
mov
xchg
rclb
mov
repz
fbld
stos
pop
lods
idivl
and
xlat
xor
xor
sub
iret
cmc
inc
cltd
shlb
insl
es
mov
inc
mov
and
insl
test
insb
mov
mov
mov
cltd
stc
jnp
inc
cwtl
xchg
push
test
mov
xchg
adc
in
inc
push
and
loope
out
cli
ret
cmp
xor
lcall
inc
in
cmp
jecxz
mov
jbe
mov
stos
mov
lret
cmp
jno
dec
pop
orb
fisubs
add
shl
test
scas
xchg
cmp
test
pop
data16
sub
popf
test
shlb
bound
inc
push
sti
loopne
xlat
mov
inc
xchg
std
sbb
dec
repnz
xchg
adc
pop
shll
outsl
imul
movsb
loop
mov
loopne
test
inc
dec
scas
les
shrb
sti
sahf
mov
aad
jmp
mov
sbb
dec
out
cmpb
lahf
push
adc
push
mov
push
pusha
in
add
scas
sahf
jle
cld
sbb
pop
and
mov
fmulp
xor
mov
adc
inc
popf
enter
push
sub
insl
or
mov
xchg
cltd
and
inc
je
and
gs
cwtl
andl
cmc
inc
sti
adc
hlt
popa
xor
sbb
cmp
fnstcw
push
mov
jne
cwtl
movsb
push
pop
xchg
rclb
jnp
jp
int3
daa
mov
movsb
mov
dec
sbb
mov
mov
loopne,pt
or
dec
lods
sub
or
iret
imul
push
or
dec
inc
inc
mov
and
js
mov
lahf
add
xor
add
mov
and
xor
movsl
mov
lahf
gs
idivb
pop
imul
push
push
sbb
ret
fisttpl
cwtl
cmp
mov
daa
lcall
or
loopne
insl
bound
mov
ljmp
insl
pushf
cltd
add
mov
test
and
ret
popa
sbb
add
jecxz
dec
push
cmpl
push
fldcw
loopne
push
test
inc
cli
cmpsl
lods
mov
mov
add
and
push
ret
loopne
jl
pop
xchg
xor
add
daa
gs
test
pusha
sbb
dec
enter
mov
xor
je
add
push
xor
add
xchg
xorb
out
data16
xor
sti
sbb
mov
mov
out
fsubrs
aad
inc
or
scas
jne
mov
popf
adc
mov
pop
ret
jmp
aas
popf
ljmp
jno
das
pop
sbbb
sub
adc
cli
push
psadbw
push
fists
and
pop
faddl
add
pop
and
ret
pushf
lods
pop
loopne
sub
jo
mov
mov
dec
inc
stos
adcl
ret
xlat
adc
sub
mov
std
faddl
mov
pop
xchg
cmc
fwait
or
test
enter
test
loope
mov
outsb
pop
pop
inc
dec
mov
fsubrl
mov
mov
adc
inc
xor
sti
div
mov
inc
add
addb
das
out
sbb
mov
leave
mov
faddl
in
jb
aam
das
or
sbb
cmpsb
lds
and
inc
jg
add
fildll
xor
pop
leave
imul
cmp
jmp
xor
cmp
mov
jmp
in
adc
mov
cltd
dec
les
pop
shlb
mov
icebp
sbb
adc
imull
pusha
addl
mov
and
cmp
insl
cmp
imul
push
movsl
or
mov
push
frstor
adc
imul
xchg
mov
pop
xor
or
shlb
add
test
adc
dec
hlt
push
lods
and
adc
frstor
repz
dec
dec
cmp
scas
xchg
pop
and
dec
mov
hlt
in
int
sti
add
neg
sbb
lods
stos
fwait
jecxz
adc
and
add
jge
lods
jo
sbb
jmp
jnp
jge
xor
or
inc
sub
add
adc
ret
outsb
fdivrs
clc
sbb
push
outsl
jo
push
stc
jno
test
inc
add
push
adc
xor
std
mov
add
movl
dec
decb
inc
cmc
jg
sbb
push
inc
leave
inc
adc
out
sbb
dec
push
xlat
scas
stc
jmp
push
fstps
sbb
cld
xchg
popa
adc
gs
mov
out
pusha
movsb
push
outsb
jns
iret
add
in
pop
rclb
and
sbb
icebp
ss
pusha
in
xor
iret
and
out
jle
lcall
outsl
lret
test
xchg
or
and
mov
fsubrl
xchg
aas
xor
imul
jno
outsb
xchg
cli
pop
aad
shl
fisubs
decl
pop
cli
xorb
jg
sub
das
pop
lcall
in
enter
aas
inc
and
jnp
jmp
insl
pop
xchg
mov
lds
out
out
mov
jl
insl
lret
inc
add
loopne
xor
inc
mov
sbb
stc
xor
push
and
push
rcr
fistl
ret
inc
dec
mov
sar
sbb
cs
dec
sub
jns
and
cmp
scas
mov
and
test
lret
push
int
mov
call
cld
xchg
loope
aam
pop
dec
icebp
insl
adc
loop
pop
fstl
repz
dec
sbb
and
pop
inc
inc
aaa
lret
ret
jge
dec
shl
ljmp
dec
and
and
ds
jle
jb
icebp
test
sahf
inc
fstps
xchg
int3
or
and
push
pop
adc
ret
int3
notl
lock
daa
lcall
stos
fs
mov
addr16
inc
mov
lcall
sbb
jge
ljmp
iret
and
stos
outsb
jne
in
push
inc
cltd
pop
ss
mov
insl
div
repz
aaa
push
outsl
mov
insl
iret
adc
or
lods
dec
inc
shlb
dec
push
or
push
sbb
pop
xlat
movsb
mov
pushf
mov
mov
or
or
xchg
je
movsl
mov
mov
xchg
push
inc
mov
repnz
jp
sub
ret
scas
ds
out
adc
dec
and
mov
xchg
mov
stc
push
sub
mov
ja
data16
stos
pop
or
push
add
jp
mov
cmpsb
lcall
mov
aad
pop
xchg
aad
cltd
sub
inc
insl
push
cli
jb
xchg
jmp
inc
push
jno
dec
sub
sbb
adcb
sub
enter
les
lea
push
adc
lret
pop
rcll
bound
cmpsb
arpl
icebp
outsl
xor
jl
cli
das
add
daa
outsl
cmp
shlb
mov
xchg
or
sbbl
lds
inc
mov
pop
ret
jl
out
sbb
ficoml
dec
pop
pop
sub
jns
in
mov
jae
pop
jbe
xchg
add
fisubl
or
inc
push
sub
xchg
pop
adc
adc
pop
xor
jmp
adc
aad
and
push
dec
mov
xor
je
fsubs
int
loop
xchg
mov
xor
ss
int3
inc
sub
stc
dec
dec
aas
fsubl
push
inc
mov
and
mov
xchg
insl
out
xor
ja
sti
test
cli
shrl
rcll
pop
mov
push
cwtl
mov
fbld
sbb
imul
fcmovnb
incb
adc
xchg
mov
les
hlt
outsl
xchg
fs
dec
scas
in
xor
fdivr
pushf
adc
xor
ficomps
rcrl
in
mov
pop
incl
int
das
pop
lods
xchg
inc
scas
aas
das
insl
and
scas
lds
sbb
int3
jge
insb
std
decb
pop
pop
push
jmp
add
es
testl
adcl
icebp
xchg
les
fs
pop
es
notl
inc
xchg
nop
jnp
insl
outsl
aam
pop
mov
cs
shr
scas
loop
loopne
int3
fwait
ss
push
push
out
clc
in
sti
push
jmp
jg
ret
and
in
xor
cmp
pop
xchg
mov
xor
imull
and
mov
jb
and
iret
loope
xchg
leave
inc
out
cmp
call
ss
ljmp
jmp
out
imul
stos
out
xlat
nop
pop
andl
sub
mov
jno
jae
fimuls
jge
mov
in
pop
dec
pushl
popf
or
or
imul
aad
loop
repnz
mov
add
lret
xor
iret
fidivs
jecxz
fs
adc
cmpb
jno
sub
jecxz
daa
aad
xor
xchg
stos
jo
in
inc
push
int
jns
inc
sahf
cmpl
enter
push
test
jecxz
lcall
xorl
imul
inc
ret
lods
jbe
mov
loop
iret
je
leave
mov
sub
pop
adc
xor
imul
outsb
fiadds
cli
shrl
sub
jge
pop
and
xchg
repnz
push
clc
sub
daa
pop
or
add
lods
mov
or
xchg
cmc
sub
mov
jmp
mov
cmp
cmp
cmp
sub
adc
add
lods
mov
cmpsb
in
js
cmp
jnp
sub
sti
divl
jne
jl
jmp
fwait
cwtl
cmpsb
shlb
dec
imul
lret
mov
ret
cli
fldl
jo
loope
ror
into
mov
mov
cmp
in
sub
xor
jmp
pop
mov
out
adc
or
and
out
mov
sub
sbb
or
fnstcw
stos
pop
xor
les
loop
push
incb
xchg
imul
dec
push
lcall
in
fs
dec
mov
adc
or
push
cmp
pushf
and
lock
repz
push
jnp
mov
mov
mov
sbb
faddl
or
sahf
jns
dec
int3
fsubs
scas
add
jbe
incb
cmpsl
pop
and
es
cmc
mov
adc
stc
pop
rorl
pop
sub
mov
mov
negl
push
and
push
xchg
xlat
pop
mov
sub
popa
cmpsl
insl
aad
add
test
std
test
std
jnp
ffree
aaa
add
xchg
aam
xor
mov
loop
sbb
push
sti
sub
push
aad
aad
je
jbe
rcrl
xor
lods
insb
mov
into
jbe
cmp
outsb
or
mov
xorb
dec
fidivrs
mov
ret
add
mov
jl
bt
push
insl
in
and
ret
lods
data16
xor
outsb
sti
push
inc
stos
or
sub
pop
pop
clc
xchg
mov
movsb
sub
hlt
push
shr
mov
mov
test
test
sahf
and
imul
mov
insb
sbb
push
loopne
enterw
popf
or
pop
push
fadds
jns
push
or
mov
mov
mov
test
stos
lahf
jl
rcll
loope
mov
adc
cs
dec
test
jp
lods
lea
pop
fldl
pop
xchg
sti
pop
in
lcall
popa
adc
fs
mov
addr16
cmp
out
mov
xor
mov
lret
xor
push
das
sub
inc
jle
xlat
inc
push
add
or
lds
and
cmpsl
dec
mov
jb
ja
mov
mov
mov
cmp
push
dec
mov
cmp
jmp
xor
test
movsb
outsl
div
scas
mov
popf
sbb
adc
mov
in
jle
pushl
lahf
and
in
push
xchg
mov
test
push
vpcmpgtd
adc
call
clc
cmpsb
cmp
mov
inc
or
jno
rcll
xchg
adc
sahf
cld
leave
xor
ret
aam
into
xor
mov
xchg
in
mov
rolb
lahf
test
jns
push
cmp
push
adc
or
xor
lahf
jmp
ds
add
sbb
cmp
xor
xchg
jo
pop
xor
filds
xchg
cmp
dec
jg
mov
mov
inc
push
and
sbb
jnp
cli
xor
pop
add
movsl
fdivl
sahf
pop
push
jns
enter
aad
cmc
lcall
xor
cmp
push
jge
push
das
lret
sbbb
xchg
cld
adc
pop
adc
cmpsb
sbb
mov
les
loopne
inc
adc
jbe
inc
push
sub
pop
jmp
sub
test
imull
cwtl
icebp
and
adc
and
inc
adc
sahf
push
lahf
pop
call
nop
sbb
mov
adcb
popf
enter
cmc
sarb
push
dec
xchg
rorb
movsb
je
pop
test
hlt
cmp
or
sbb
jmp
sti
and
adc
add
je
mov
imul
sub
cmp
or
sbb
jmp
sti
and
adc
add
je
mov
imul
sub
cmp
sbb
ljmp
add
je
mov
imul
sub
cmp
mov
fwait
les
add
popa
adc
jae
cld
xor
int3
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
pushl
pushl
call
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
dec
loopne
lock
sarb
hlt
outsl
fiadds
aaa
nop
int
fdivl
inc
cld
push
lea
popf
jo
add
lock
sarb
mov
cmp
jo
inc
std
push
dec
and
adc
pop
lock
sarb
mov
cmp
sub
xor
push
lea
push
fsubs
adc
loopne
test
adc
xchg
jno
add
lods
jl
and
leave
daa
fsubr
cld
mov
mov
roll
dec
rorl
adc
inc
add
loopne
mov
sbb
aaa
or
xchg
int
mov
frstor
loopne
enter
dec
pop
pop
icebp
pop
sarl
mov
cmp
adc
frstor
decb
or
push
subb
jg
and
mov
bound
add
scas
shl
iret
imul
mov
lahf
sub
push
fstp
adc
call
loopne
lock
sarb
mov
cmp
jo
inc
std
push
lea
popf
xor
lea
and
adc
or
in
loopne
or
sbb
test
mov
dec
into
cmp
sub
adc
push
out
outsl
nop
test
mov
push
std
cmp
dec
repz
shll
sub
adc
cmpb
in
inc
std
push
lea
popf
xor
loopne
lock
sarb
mov
cmp
jo
inc
std
push
lea
popf
xor
loopne
in
xor
repz
push
mov
jbe
cmp
sbb
and
mov
mov
in
sbb
rcr
fdivl
push
fidivl
shll
rep
xchg
cmc
pop
mov
jne
add
test
push
push
cmp
pushf
cwtl
sbb
dec
mov
adc
leave
xor
dec
mov
xor
mov
push
pop
jecxz
mov
push
int3
adc
in
pop
test
xor
scas
in
push
mov
aam
ja
adc
scas
mov
test
inc
call
fmuls
sub
dec
xor
movl
jl
inc
lea
js
sbb
add
stc
imul
jae
mov
rcr
sti
xor
jbe
dec
lcall
dec
add
cli
pop
jecxz
cmp
clc
mov
das
sahf
out
int
inc
pop
lds
pop
jnp
test
add
daa
out
iret
pop
ret
dec
mov
repz
add
or
xchg
dec
out
and
fcos
cmc
sbb
and
test
push
das
cmp
jmp
outsl
and
and
icebp
in
pop
xchg
fisttps
in
jle
mov
data16
test
sbb
push
shlb
sbb
mov
icebp
sbb
pop
dec
pop
or
mov
fldl
test
je
xchg
popa
sbb
arpl
dec
add
les
dec
pushl
out
mov
mov
or
mov
mov
and
movl
dec
mov
popf
and
inc
jg
xor
dec
bswap
loope
dec
movsb
jb
cli
mov
imul
data16
fidivs
aad
frstor
inc
loopne
shrb
pop
mov
xchg
jecxz
adcl
lods
ficompl
test
adc
pushf
xlat
pop
lret
xchg
sbb
fcompl
stc
das
cmp
sub
idivb
sub
mov
sbbb
stos
das
xor
scas
xor
fnstsw
aam
hlt
push
pop
clc
mov
jle
inc
lea
loope
rcrl
jb
shll
jno
mov
mov
testl
cld
es
fcom
cs
push
mov
in
add
add
add
and
ret
mov
adcl
test
jle
in
cltd
imul
js
cli
jno
push
pop
imul
jb
fwait
xor
cli
mov
aaa
outsb
imul
std
xor
and
loopne
inc
ja
mov
cwtl
fsubrl
cmpsb
sbb
cmp
addl
incl
cld
das
or
or
in
sbb
ret
xchg
in
dec
test
scas
std
inc
fs
mov
repz
push
add
push
cmp
daa
cmp
insb
mov
dec
mov
mull
sbb
mov
roll
ret
orb
pop
idivb
cmp
push
fldl
lea
xchg
push
xlat
popf
pop
xchg
jno
ret
out
daa
rcll
ret
mov
mov
lahf
pushl
imul
out
or
adc
xchg
dec
cmp
jl
pop
pop
cmp
mov
push
divb
mov
inc
inc
fwait
into
daa
int
xor
inc
mov
jmp
and
jecxz
push
or
rcr
cmpb
pop
and
pop
cs
subl
mov
sti
xchg
cs
mov
mov
mov
cmpsb
mov
sahf
adc
fucom
cltd
repz
cmp
imul
cmpsl
popf
and
push
out
imul
and
add
adc
orl
dec
lea
cs
sti
fsubrl
test
aam
mov
mov
in
or
dec
sbb
dec
inc
out
jno
mov
ret
lret
and
popf
ss
loopne
inc
out
in
seto
daa
ljmp
jge
scas
inc
fldcw
mov
and
jmp
ss
mov
xor
mov
or
cmp
inc
add
in
and
add
call
dec
pop
pop
loop
jle
stos
das
add
adc
sbb
sbb
push
js
fistl
xor
lret
popa
push
dec
jmp
nop
xchg
fimuls
mov
divb
les
mov
push
mov
push
das
ss
jle
lds
mov
lcall
repnz
cs
xchg
js
lock
icebp
mov
repz
outsb
faddl
scas
xchg
hlt
xchg
sbb
sbb
iret
push
shll
and
sub
divl
cltd
sub
test
test
stos
negl
push
outsb
mov
and
jg
btc
xor
pushf
add
xor
loop
xor
mov
psubb
sahf
dec
sub
stos
dec
push
popa
into
pop
inc
push
push
xor
cmp
and
sub
push
negl
rcll
int3
sbb
enter
fcompl
push
jns
sahf
pop
and
jle
lahf
cmp
lods
cmc
sub
lret
fcompl
out
mov
sbb
xchg
and
es
or
inc
and
lahf
insb
push
pop
mov
rorb
mov
or
sub
mov
aam
notl
sbb
cmp
sbb
mov
ja
add
jbe
cmc
dec
or
push
mov
cs
mov
push
xor
rcr
push
or
sub
push
dec
xor
xchg
mov
lock
jnp
xorl
sti
xchg
push
sbb
int
icebp
loopne
sub
mov
cmc
ds
pop
add
ds
fisttps
out
sbb
or
jns
pop
fsubrs
jns
mov
clc
das
insb
insb
mov
lds
xchg
inc
and
cmp
pop
enter
pop
dec
aas
and
adc
inc
lods
or
ret
sub
adc
push
sub
lods
push
pop
mov
inc
mov
mov
xchg
mov
xchg
xor
mov
inc
sub
ljmp
adc
xchg
frstor
add
punpcklwd
sbbl
sbb
fs
les
jge
inc
add
lahf
push
popa
fidivs
pop
pop
push
fwait
les
add
xlat
xchg
inc
push
out
xchg
jnp
and
cmp
aaa
mov
jne
mov
insb
xchg
fdivl
clzero
imul
lret
sarl
adc
and
sub
shll
pop
lea
ja
addps
mov
push
ret
sbb
jg
imul
fisubs
mov
pop
addb
enter
stos
loopne
aaa
pop
into
mov
xchg
into
lahf
aaa
push
test
std
xorl
jb
mov
insb
fcmovbe
lret
pop
hlt
jo
aad
iret
repz
popa
enter
test
dec
push
add
mov
dec
fcmove
mov
inc
out
scas
loope
jae
adc
mov
test
mov
sahf
add
fisubl
fistpll
push
fistps
xchg
xor
inc
push
jle
sahf
add
sbb
int
dec
or
jne
clc
push
in
movsb
test
je
into
pop
push
dec
pop
mov
xor
std
fildl
lods
pop
js
cltd
add
and
popa
and
stc
jnp
xor
sub
data16
add
cmp
fwait
xor
jo
ja
or
push
jp
mov
rolb
sub
push
lods
push
rolb
outsb
cmpb
xchg
aad
sbb
fidivrl
dec
js
cmp
mov
test
mov
mov
jnp
into
pop
push
add
int
icebp
jo
outsb
mov
mov
xor
bound
cmc
push
std
jbe
pushf
or
jae
dec
adc
xlat
out
sti
mulb
dec
pop
pusha
push
clc
sbb
mov
in
fs
mov
inc
das
cmp
int
jo
push
gs
pop
jl
cltd
dec
ss
sub
push
jbe
mov
or
nop
mov
mov
aam
xorb
sub
das
adc
call
xchg
dec
sbb
je
out
xlat
hlt
repz
adc
test
push
sub
out
aad
lods
push
push
ljmp
mov
sarb
ret
shl
mov
mov
mov
push
pop
sbb
pop
jle
cmp
test
stos
push
add
mov
sub
cltd
lods
mov
out
add
addr16
pop
inc
mov
stc
push
mov
sahf
ss
fisttps
insl
std
nop
repz
out
cmp
hlt
das
lret
loopne,pn
loop
pusha
jp
xchg
movswl
sbb
jmp
shrl
loopne
mov
shrl
leave
sbb
lret
sahf
divl
ret
and
popf
and
std
out
jb
and
aas
inc
cmp
cmp
sub
pop
cwtl
inc
and
sbb
dec
and
fwait
or
pop
pop
cmp
push
fs
xchg
pop
push
imul
gs
fdivs
out
icebp
lea
jbe
or
testl
mov
imul
fnstsw
jle
inc
pop
stos
push
cmp
stc
mov
xor
int
aad
cld
jno
aam
dec
fimuls
mov
pop
lods
clc
sub
inc
std
les
cmp
cvtps2pd
inc
ja
mov
lret
adc
aad
adc
sub
or
inc
outsb
mov
xchg
popa
sub
std
cmp
push
outsl
mov
mov
lods
pop
lods
push
mov
jo
sub
jmp
in
call
mov
jae
sub
ds
or
add
dec
jle
dec
sub
ret
mov
inc
mov
rcrb
xor
ret
cmovno
ret
insb
cmp
mov
data16
rorb
push
jecxz
xlat
and
lods
loop
cmp
sar
jmp
mov
jg
push
icebp
rcr
mov
hlt
stos
push
xor
jns
hlt
xor
test
lret
and
movsl
inc
ds
ja
rorl
stos
sbb
enter
add
or
sub
sub
sahf
push
or
shll
xchg
mov
push
jg
movsl
dec
mov
call
fistpl
mov
out
add
scas
outsl
out
fchs
or
dec
adc
popf
mov
inc
dec
adc
xor
push
and
fstps
mov
xor
push
sti
xor
int3
mov
outsb
aaa
pop
out
int3
daa
mov
cs
stc
mov
bound
xchg
mov
mov
jno
mov
mov
push
cltd
outsl
inc
xchg
and
pop
lret
cmc
inc
test
mov
les
sub
cmp
rcll
jbe
hlt
aaa
dec
pushf
cmp
pmaddwd
jle
mov
into
ret
ds
pop
mov
flds
movsl
and
iret
ljmp
les
cmc
and
shrl
xchg
test
es
insb
pop
dec
frstpm(287
mov
sub
adc
pushf
inc
push
addr16
clc
mov
icebp
or
pop
fsub
jns
push
out
aad
xor
xchg
daa
inc
mov
pop
xchg
aad
in
out
push
sbb
shlb
xchg
or
andl
mulb
sub
mov
call
sub
stos
add
sub
shl
aad
hlt
add
xchg
jb
jae
sbb
xor
xor
and
adc
xor
pushf
push
pop
divb
push
or
ffreep
je
out
mov
mov
outsb
arpl
pop
scas
and
fstpt
fwait
push
cmp
scas
into
insl
inc
mov
call
cmc
inc
xchg
push
loop
jle
movsb
sbb
test
cmp
pop
test
das
lea
scas
and
push
imul
inc
mov
mov
test
mov
and
insb
cmp
jecxz
repz
add
inc
jae
mov
jnp
loopne
test
mov
push
add
xchg
or
jno
add
sbb
pusha
loopne
in
out
or
lahf
arpl
cmpsb
sti
jnp
jp
lea
mov
cmp
mov
int3
inc
xor
sti
enter
adc
mov
mov
sub
xchg
xor
sti
xor
cmp
or
push
shlb
adc
in
dec
dec
mov
mov
push
xchg
push
xorl
aad
shl
pop
fnstsw
mov
mov
lods
jp
inc
cmp
and
sbb
jmp
fisttpll
bnd
sbb
xchg
sbb
jge
clc
mov
mov
mov
pushf
xchg
push
xchg
sub
bound
sub
or
cmp
sub
jmp
addr16
cltd
jmp
sbb
in
cmpsl
mov
mov
rcl
test
fidivs
push
mov
mov
mov
scas
jg
push
mov
xchg
xchg
and
ljmp
int3
push
mov
stos
inc
or
cwtl
cli
fdivrl
cli
scas
iret
add
xor
sbb
jmp
pop
and
pop
daa
and
and
cmp
idiv
dec
push
scas
mov
rorl
imul
push
xlat
sub
cs
push
mov
mov
push
lret
mov
jns
cmp
inc
inc
nop
mov
or
dec
push
ss
inc
sub
cmpsl
cmp
inc
sub
adc
xchg
mov
pop
popa
popa
cmpsb
idivb
mov
cld
roll
clc
hlt
cmp
or
adc
inc
push
sub
mov
rolb
lret
test
fwait
or
loop
inc
xlat
mov
push
lods
or
lea
lret
push
stos
mov
adc
add
xor
stc
loopne
and
ss
data16
dec
das
lcall
roll
out
xor
imul
or
xor
outsl
ret
sub
in
dec
sub
aam
popf
out
pop
jbe
leave
xchg
pushf
add
xchg
xchg
lea
hlt
in
mov
xchg
lret
xor
add
or
mov
adcl
add
sbb
fdivrs
pop
ret
aas
std
scas
mov
notb
dec
dec
mov
pop
ss
rol
sahf
gs
and
add
inc
xor
pop
dec
dec
idivl
push
outsb
add
cwtl
loopne
inc
rcrl
and
jb
push
mov
adc
sbb
sbb
loope
imul
addr16
xchg
and
ret
repz
fdivrl
jae
mov
adc
mov
adc
mov
mov
xor
das
jne
mov
jno
test
sbb
pop
jmp
shlb
loopne
push
out
add
add
push
dec
clc
sub
shl
pop
mov
repz
add
wbinvd
sub
in
sbb
scas
fs
or
pop
xor
pop
cmc
and
or
lds
push
ds
adc
cli
sub
pop
rolb
rcl
cltd
mov
dec
pop
mov
fisubrl
sub
test
shl
or
add
pop
scas
push
in
add
leave
pop
jns
dec
mov
sub
in
mov
sub
subb
push
pop
mov
push
mov
loope
cwtl
mov
inc
xchg
push
jmp
push
loope
xor
push
push
xchg
rclb
outsb
repz
icebp
dec
xchg
mov
clc
cmp
dec
int
ret
testl
adc
add
std
cmc
daa
loop
fnstenv
push
in
mov
fildll
push
jnp
adc
pop
push
and
cmp
cmp
adc
dec
fistpl
mov
mov
test
shll
aas
outsb
iret
sbb
cmp
dec
into
insb
mov
or
jmp
pop
cmpl
scas
inc
imul
repnz
inc
cmp
fldenv
dec
fcomps
cmp
sbb
mov
loopne
stos
xor
rorb
imul
sbb
cmpsl
lret
out
mov
ljmp
xor
adc
ja
hlt
sti
push
negb
pop
lcall
mov
popf
mov
les
push
xchg
in
fstpl
fwait
add
dec
lahf
mov
pop
xchg
sti
popf
sub
jmp
pop
iret
inc
inc
sbb
jne
js
or
sbb
mov
or
filds
loopne
shlb
xor
sub
lret
mov
hlt
rorl
adc
push
lahf
das
lahf
sarb
jle
sarb
sbb
mov
sbb
scas
push
stos
sti
mov
xor
or
mov
iret
dec
and
aas
sbb
ret
fisubs
add
std
lock
movsl
out
push
scas
mov
mov
leave
or
enter
ja
cmpsb
mov
lods
aad
sub
lahf
push
fsubp
in
popa
sub
fildl
or
movq
cmpl
xor
xor
pop
cmpsl
add
outsl
or
fisubs
xchg
jo
outsl
cmp
pop
pop
out
push
pop
es
cmp
lods
cmp
out
insb
cmp
fbstp
xchg
adc
jb
push
scas
mov
push
xchg
push
jns
cli
loopne
scas
shll
shl
call
popf
adc
mov
addr16
test
lahf
mov
notb
fmuls
outsl
cmp
dec
pop
mov
in
xchg
push
ret
bswap
cmpsl
ds
enter
dec
jne
call
imul
mov
jl
or
push
fistl
movsb
dec
mov
dec
setp
sti
testl
sti
arpl
fisubs
aad
loope
xor
out
cmpsb
pop
lds
mov
mov
mov
fistpl
sarb
icebp
or
cmpl
outsl
mov
cs
fwait
lods
sub
push
xchg
sbb
cltd
fld
mov
aaa
jle
adc
and
inc
jp
repnz
cmp
dec
push
inc
cmp
lock
push
xchg
inc
cmpsb
add
in
jae
je
jecxz
loopne
sub
in
pusha
js
and
add
pop
jle
push
jg
icebp
int3
aam
xor
ret
mov
adc
les
cld
inc
popf
xor
fucomi
test
std
roll
outsl
js
add
mov
sub
mov
cs
lods
or
popa
std
mov
inc
cmp
outsl
xor
inc
je
aaa
icebp
jbe
nop
xchg
mov
or
ret
jmp
sbb
pusha
sbb
xchg
add
loop
cmp
or
mov
xorl
jae
cs
pop
xchg
xchg
hlt
or
daa
rcrb
fwait
call
xor
in
push
lods
test
test
add
fnstsw
pushf
fldl
out
aas
mov
cli
cld
or
subl
leave
pop
push
xor
push
sarl
mov
lock
mov
rep
push
test
loopne
add
xchg
not
mov
xlat
inc
push
aaa
jge
pop
rcrl
shlb
dec
mov
dec
scas
pop
mov
test
sub
test
ret
call
movsb
mov
sti
xor
push
ret
cltd
cld
lock
je
jg
pusha
dec
stos
mov
jo
mov
add
pop
dec
inc
test
push
insb
cmp
les
in
lods
shrb
js
dec
pop
cltd
cmpsl
xchg
fstl
inc
std
hlt
shll
push
int
ss
out
adc
or
sahf
out
cltd
dec
in
gs
and
push
pop
xchg
xchg
jp
leave
xor
or
fwait
popf
fstpl
lock
rolb
cmp
push
xor
or
dec
test
pop
mov
push
jg
mov
rolb
test
jmp
add
jae
hlt
xchg
popl
dec
mov
mov
push
and
pop
scas
test
mov
jae
mov
mov
in
addr16
jl
lods
data16
mov
cmp
dec
pushf
jb
movsl
gs
or
cmp
xchg
cmp
jle
aas
jae
loop
loop
loop
dec
in
push
mulb
movsb
add
add
push
fisttpll
xorb
movsb
sub
sub
aam
gs
jmp
subb
popf
push
push
sahf
xchg
push
repz
mov
jns
sahf
push
ficompl
rorl
ja
test
lahf
and
imul
sub
mov
aam
adc
out
adc
icebp
test
jnp
mov
int3
push
hlt
mov
mov
and
mov
inc
inc
push
and
push
pushf
cmpsb
aas
mov
xchg
fnstsw
gs
mov
cli
pop
push
mov
and
push
loope
shrb
fwait
shll
xchg
fmull
dec
sub
push
mov
xor
pop
lds
imul
mov
ljmp
push
pusha
dec
mov
and
cmp
mov
add
pop
repnz
xchg
pop
clc
mov
push
inc
sti
loope
xlat
and
push
push
pop
inc
mov
shl
jns
mov
in
push
dec
adc
or
stos
outsb
cli
sbb
mov
push
inc
rolb
mov
mov
mov
sub
nop
jle
test
pop
shrl
les
mov
subl
lock
scas
addr16
jl
stc
hlt
cld
insl
out
arpl
dec
mov
popl
sbb
fwait
jo
push
sti
xchg
mov
js
insw
cmp
jns
add
push
fcmovnu
aam
add
cmpsb
mov
jae
xchg
rcrb
mov
lods
mov
pop
inc
adc
in
in
sbb
pop
pop
cmp
add
ja
addr16
or
pop
iret
cmp
nop
jecxz
jl
inc
clc
pop
jnp
testl
addl
mov
add
sbb
cmpsl
stos
add
mov
add
dec
das
les
pop
nop
loope
push
fldt
push
add
addr16
pop
shll
or
mov
adc
in
mov
fwait
lret
add
fisttps
pusha
sahf
bound
mov
jbe
push
js
ss
mov
lcall
xchg
leave
push
mov
jb
jle
xchg
shrb
inc
cltd
jbe
mov
xchg
jb
shrl
jp
cwtl
sbb
or
dec
jl
dec
mov
fsub
cmp
insb
sarl
mov
cmp
jo
inc
std
push
lea
popf
xor
loopne
lock
sarb
mov
cmp
jo
inc
std
push
lea
popf
xor
in
lock
sarb
mov
mov
jno
inc
std
push
lea
popf
xor
loopne
lock
sarb
mov
cmp
fiaddl
std
daa
std
test
iret
int
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
pop
outsb
loop
push
jp
add
jae
pop
sub
lcall
fimull
mov
jp
dec
jp
or
sbb
sub
cmp
ljmp
mov
lcall
mov
jb
add
sub
ljmp
stos
stc
clc
leave
decb
jp,pn
sbb
ret
mov
popa
flds
push
jb
mov
jne
roll
or
movsl
pop
aas
in
add
mov
push
adc
mov
aaa
xlat
sbb
dec
and
cli
stos
add
ret
pop
cli
add
jmp
ljmp
pop
inc
pop
pop
in
punpckhdq
jp
dec
das
pop
or
in
sub
cmp
cli
xor
cwtl
aaa
mov
mov
mov
cmp
jb
or
mov
jns
lcall
xchg
pop
test
gs
scas
jp
sbb
mov
cli
mov
ret
out
data16
lock
pop
pop
push
push
pop
or
pop
cmp
or
push
xor
in
ljmp
test
push
adc
fs
outsl
push
cmp
pop
stos
test
fwait
mov
fdivrp
std
repz
sub
cmp
cmp
push
repnz
ljmp
sti
jmp
sbb
cmp
dec
data16
sub
cmp
lret
cli
ljmp
mov
dec
push
jp
dec
jp
or
sbb
sub
cmp
lret
cli
ljmp
mov
dec
push
sub
aaa
and
mov
push
sarb
shrl
push
push
mov
insl
push
pop
imul
shlb
mov
sub
ja
mov
dec
fsubrs
cmp
dec
ret
adc
scas
jne
inc
imul
mov
pop
rorb
dec
jbe
inc
pop
or
mov
xor
in
fdivp
lea
xchg
lret
jecxz
test
xchg
cwtl
in
mov
pop
dec
push
cltd
inc
dec
stos
inc
jns
mov
push
cmpl
push
sub
das
xchg
movb
cmp
popf
cli
shll
sub
movsl
add
xchg
sub
arpl
add
repz
dec
in
shlb
out
or
fists
jnp
push
lret
xor
push
and
or
cmp
testl
adc
rorl
fld
mov
xchg
or
sbb
in
mov
sub
int3
pop
cld
mov
cld
inc
sbb
int
or
ret
push
cmp
ja
mov
sub
xchg
aas
sbb
in
sbb
lods
fnstenv
xchg
outsl
or
aam
test
mov
out
mov
push
js
clc
sarb
adc
lds
adc
inc
pop
push
ja
xor
repnz
adc
fs
cmp
xchg
mov
ror
dec
orl
mov
inc
adc
push
mov
mov
inc
mov
adc
inc
sti
bound
rolb
mov
or
mov
repnz
sub
cld
cmpsl
add
mov
imul
repnz
mov
subl
add
mov
and
out
stos
stc
sub
stc
lds
pop
and
mov
aas
lret
pop
fiadds
xor
movsb
mov
mov
pop
jo
adc
push
dec
insl
xchg
mov
mov
mov
mov
xlat
scas
lods
pop
out
dec
xor
sub
push
mov
addr16
or
jbe
xchg
pop
inc
push
sti
mov
mov
mov
test
imul
lcall
cwtl
mov
or
sarl
jne
and
xor
mov
xchg
mov
loopne
outsb
add
imul
add
sbb
push
jecxz
pop
rorb
pop
xor
jb
dec
lds
sub
add
dec
cmpsb
ds
cli
lods
mov
dec
xor
mov
test
mov
mov
jp
push
or
cmpsb
add
or
aas
ja
and
lds
je
xchg
fcoms
mov
jge
dec
mov
into
pushf
mov
push
lahf
push
test
lods
shll
mov
sti
insb
sub
push
xlat
adc
mov
xchg
lret
cmp
mov
jo
dec
mov
and
sbb
repnz
mov
and
fdivrl
sub
mov
int
pushf
mov
sti
popf
mov
ja
sahf
loopne
icebp
xchg
insl
mov
xlat
imul
in
loopne
sub
sbb
sbb
xchg
addb
mov
pop
push
cmp
lods
pop
sub
aas
mov
cmp
stc
inc
fwait
out
inc
mov
xor
push
adc
shlb
test
gs
out
mov
repnz
sub
and
mov
out
mov
mov
testl
mov
mov
inc
xor
jp
add
mov
ret
jae
pop
jbe
sbb
xor
xor
adc
sbb
mov
dec
cwtl
cltd
loop
add
arpl
xchg
mov
pusha
sbb
lods
shrb
pop
cmovae
add
ljmp
jne
inc
mov
iret
push
dec
sbbb
jno
mov
xlat
dec
movsl
and
icebp
push
mov
cwtl
xchg
cli
jle
push
mul
iret
ret
push
sub
mov
daa
in
jge
cmp
inc
lahf
sbb
mov
ljmp
lcall
lods
out
xbegin
lock
dec
sbb
cmp
sti
xchg
fldenv
push
or
clc
push
outsb
cmp
jecxz
rcrl
or
add
out
cwtl
jbe
mov
mov
test
jecxz
cmp
pushf
pop
lcall
xor
sarb
inc
mov
add
and
add
adc
sub
cmp
cmp
jp
divb
daa
shll
or
xor
imul
or
xchg
or
ljmpw
ljmp
jns
lcall
inc
mov
cmc
mov
imul
cmp
jne
sbb
pop
lret
add
out
imull
pop
and
sti
out
out
clc
push
dec
ss
mov
add
imul
sbb
mov
and
addr16
adcl
scas
mov
rol
xchg
jne
pop
fnstenv
xchg
jmp
pop
xchg
cmp
jne
lret
mov
adc
lods
rcll
insl
mov
xchg
and
daa
dec
push
and
iret
mov
lahf
cmp
inc
jp
mov
iret
out
mov
cmpl
fs
and
shlb
in
cmpsb
sbb
popf
lcall
iret
loop
fsubs
std
xor
lds
ljmp
push
cmp
add
jne
push
xchg
lahf
mov
leave
push
call
mov
adc
mov
leave
jmp
cmp
aad
mov
lds
pop
mov
sahf
js
dec
mov
pop
and
cld
imul
push
sahf
pop
or
in
dec
in
lock
data16
add
scas
cmp
jb
push
pop
bnd
xchg
fildll
lcall
mov
jo
xchg
ss
and
push
mov
mov
adc
xchg
dec
std
or
lahf
imul
xchg
sahf
and
jecxz
cmpsb
sbb
or
inc
or
xchg
sti
in
push
xor
scas
push
xchg
imul
sbb
stos
sub
or
mov
mov
subl
push
lahf
cld
fcomp
fwait
sub
inc
clc
dec
jecxz
in
adc
xor
std
repnz
ret
in
scas
popa
cmp
movl
hlt
adc
test
xorb
jo
add
push
aam
lret
jne
or
and
sub
sbb
icebp
lods
fs
xor
mov
test
mov
xchg
and
dec
pop
push
jge
fwait
pop
mov
mov
lret
mov
int3
test
mov
sbb
pop
sub
jns
sub
inc
mov
ds
decl
xlat
push
pop
adc
push
clc
fst
out
dec
fidivs
jmp
ljmp
sbb
imul
xchg
in
frstor
xor
in
or
test
push
rep
mov
mov
add
inc
sub
es
pushf
jl
iret
imul
sbb
adc
push
les
into
insb
xchg
mov
mov
inc
ss
xor
add
rolb
jg
adc
inc
mov
or
pop
inc
or
push
out
out
std
stc
xor
imul
xchg
sahf
int3
into
inc
inc
aad
xchg
dec
mov
jae
and
push
aam
fcmovb
repnz
inc
nop
test
scas
and
dec
aam
stc
xlat
pop
push
fdivrl
push
cmp
mov
out
loope
mov
mov
xchg
ds
push
pusha
pop
sbb
pop
xchg
mov
mov
add
jb
mov
outsb
clc
call
repnz
test
xor
das
sbbl
cmp
jno
adc
inc
push
data16
jp
xchg
add
insl
call
cwtl
jge
shl
aas
sahf
sarl
int3
in
dec
push
pop
pushf
cwtl
jl
test
add
sti
mov
mov
cmp
test
sub
negb
sbb
sbb
cmp
popa
inc
mov
mov
out
sar
push
int3
xor
mov
push
push
and
sub
ret
and
mov
mov
in
cltd
hlt
xor
enter
int
popa
xor
test
mov
ja
repnz
sahf
or
cmp
mov
dec
push
enter
out
or
mov
sbb
push
icebp
insl
xor
cmpsl
xchg
insb
xor
inc
out
dec
pop
push
in
lahf
inc
daa
rorl
jle
nop
shrl
rorl
sub
scas
ds
call
sahf
es
imul
pop
aad
jnp
sbb
lds
jne
jecxz
and
sub
call
pop
sbb
fldt
mov
mov
cmove
ret
xlat
sti
loopne
inc
adc
ss
add
inc
loopne
cld
inc
pop
mov
ficomps
ret
dec
stos
insb
insb
pushw
scas
pop
scas
ljmp
mov
add
push
mov
bound
xchg
lods
insl
push
xchg
data16
cmp
addr16
pop
ljmp
mov
lret
int3
inc
shlb
cmpsb
mov
sbb
shll
ljmp
mov
stc
xchg
push
push
pop
cmpsl
inc
fs
sbbl
xorb
pop
repnz
sbb
int3
sbb
inc
test
cmp
sub
sub
and
imul
jnp
ds
mov
test
xchg
jmp
adc
neg
push
mov
inc
ror
adc
mov
rcr
nop
jnp
insl
and
pop
cltd
mov
adc
pop
push
push
and
mov
sub
cli
loopne
fistpll
mov
inc
jbe
fmulp
rorb
pop
adc
stc
ja
aas
repnz
in
xor
push
movsb
add
in
add
in
xor
aam
push
xchg
scas
outsb
stos
scas
stos
jmp
mov
cmp
inc
out
jmp
pop
mov
inc
outsb
pop
lret
xchg
add
jl
mov
out
push
paddb
mov
push
icebp
push
sub
sub
xchg
sub
sbb
jg
pop
rcrl
jne
aas
push
dec
loop
xchg
adc
pop
xchg
add
adc
mov
rorl
mov
inc
mov
sub
mov
sub
xor
or
sbb
xlat
push
in
cmp
test
adc
ss
test
movsl
dec
gs
xchg
shl
int
and
insb
xchg
fwait
mov
repnz
jbe
les
pop
push
and
ds
fucomip
pop
and
mov
xchg
jo
aad
dec
dec
cmpsl
jb
inc
pop
imul
sbb
push
inc
or
inc
and
nop
das
jo
fldenv
push
xchg
js
or
loop
dec
test
aam
mov
inc
ret
jb
repz
adc
cmp
scas
and
mov
gs
cwtl
fcoms
cmp
push
push
pop
mov
scas
mov
jg
push
addr16
dec
int
addr16
imul
stos
loope
pop
std
es
push
pop
jle
push
sar
outsl
jno
sbb
cmpb
loope
adc
rorb
jge
lahf
out
xlat
jno
xlat
push
lods
cmp
mov
fiaddl
cli
jns
push
lahf
and
or
cmp
mov
xchg
dec
pop
sahf
aas
mov
fsubs
lea
adc
mov
aad
push
push
movsl
and
out
add
mov
push
and
dec
idivb
mov
nop
rcrl
cmp
mov
and
xlat
lds
and
jge
mov
leave
mov
loopne
xor
inc
notb
push
fldcw
sub
out
inc
adc
push
lahf
dec
sbb
or
mov
or
push
xor
adc
jnp
and
in
mov
push
mov
mov
inc
sti
lock
aaa
jae
insl
jnp
pop
sti
lods
mov
arpl
popf
push
testb
scas
sbb
movsl
pop
popa
int3
xchg
pop
clc
dec
mov
fidivl
inc
cs
push
ss
in
or
inc
sbb
and
inc
aas
outsb
xchg
lcall
inc
ss
xchg
sbb
and
call
mov
xlat
mov
shl
fs
and
xlat
or
je
pop
cmpsl
push
and
jmp
lods
xor
adc
shlb
rcrl
jp
stos
loop
mov
inc
out
or
into
mov
mov
daa
rorb
and
imul
clc
lea
outsl
mov
sub
fsub
inc
pop
mov
mov
inc
inc
xlat
xchg
psllw
sub
lret
dec
das
int
mov
or
scas
dec
and
pusha
lds
mov
mov
xlat
adc
xchg
dec
imulb
ror
add
jo
fidivs
cmc
fnstcw
lret
mov
int3
adc
mov
push
inc
add
cmp
test
lret
out
inc
dec
push
push
in
inc
mov
dec
xchg
dec
shr
rcrb
fs
jecxz
or
roll
adc
sub
ja
inc
mov
adc
movl
adc
das
or
inc
push
scas
add
dec
hlt
daa
sub
sbb
xchg
fs
jl
jge
les
in
and
adc
push
jbe
lcall
cmp
mov
mov
mov
add
in
leave
mov
mov
pop
lods
movsb
jge
stos
lods
and
lock
arpl
lahf
push
jae
xchg
ret
sahf
lods
cmp
mov
jl
movsb
insl
push
xor
aad
mov
outsl
repz
dec
mov
int
pop
adc
faddl
add
lea
pop
jmp
aad
movsb
mov
mov
jnp
sub
jbe
pop
and
jne
popa
pop
andl
stos
mov
sbb
roll
ret
mov
cwtl
hlt
lods
or
push
sub
mov
push
push
adc
sbb
adc
add
inc
pop
and
fistpll
pop
mov
aas
repnz
mov
sahf
in
mov
and
jmp
out
movsb
ljmp
mov
cmp
dec
add
xchg
out
mov
aad
icebp
dec
xchg
xor
std
pusha
xchg
push
mov
pop
mov
pop
out
sub
push
shr
cmp
or
mov
xor
cmp
dec
jb
aad
idivb
cmpb
loopne
hlt
sbb
pop
xchg
hlt
popa
add
mov
test
xchg
jl
stc
cli
stos
sahf
ljmp
enter
aam
mov
pop
ficoml
mov
imul
cwtl
loop
jnp
sub
insl
xchg
es
imul
mov
or
rcll
into
lret
in
pop
rorb
pop
loope
and
add
mov
mov
daa
jle
push
aam
sub
jp
or
jmp
lret
mov
test
mov
aaa
or
xchg
sbb
call
pop
jo,pn
xor
jge
xor
outsb
xor
imull
sbb
std
movsb
sub
mov
sbb
in
fcomps
inc
stc
and
enter
jmp
and
cmpsb
inc
sbb
ja
mov
jo
cli
js
mov
cltd
icebp
pop
sub
out
fcompl
inc
sbb
clc
lods
jmp
xor
movb
xchg
fwait
ret
inc
call
jle
outsl
sbbl
je
dec
cmpsb
mov
sarl
pop
jl
test
popf
cmp
inc
aaa
xor
xchg
pop
xor
lcall
inc
mov
lods
or
add
inc
fs
jp
dec
iret
out
xchg
jmp
arpl
mov
push
popa
push
add
fists
adc
sbb
in
rol
mov
insb
stos
xchg
cmp
jae
sbb
cltd
leave
cmp
popf
or
mov
addr16
pop
test
out
mov
or
cmp
xor
test
mov
hlt
lods
rcrb
dec
push
scas
lea
cmp
xchg
in
adc
adc
xchg
mov
inc
inc
aaa
movsl
ss
pop
out
in
mov
stos
jecxz
rorl
popa
jb
addr16
enter
hlt
push
sbb
mov
sbb
sub
test
scas
shrb
fcmovnb
pop
sbb
stos
mov
adc
jmp
in
lret
lahf
inc
sub
cld
add
pop
mov
nop
fmull
inc
mov
cmpsl
loopne
mov
inc
mov
arpl
pop
push
adc
or
imul
jbe
jle
inc
jns
cmp
nop
dec
cmovne
push
dec
or
mov
cltd
mov
cld
mov
adc
xor
jae
outsl
dec
in
aam
outsb
shl
sub
xor
and
test
shll
test
jmp
outsl
mov
pcmpgtd
arpl
adc
loop
dec
rorb
loope
adc
sbb
repz
cld
cmp
xor
insb
shrl
js
mov
inc
aas
xor
sub
test
xchg
outsb
mov
addr16
push
lock
sub
fwait
inc
xchg
pop
jecxz
call
or
inc
adc
push
hlt
mov
xchg
add
fidivl
loopne
dec
popa
dec
bound
xchg
push
add
pop
mov
dec
mov
shll
jmp
in
test
ret
bound
add
hlt
sbb
lahf
cmc
push
ja
into
xor
addb
sbb
mov
pop
jg
imul
popf
ds
pop
lret
push
cld
pop
push
push
mov
leave
outsb
pop
push
and
negl
sti
pop
ret
mov
test
fimull
cmpsb
mov
fabs
and
add
or
loop
jb
or
adc
loopne
inc
andl
popa
push
and
fistpll
incb
inc
xchg
sbb
andb
or
cs
pop
xchg
and
imul
push
xor
ljmp
jl
arpl
mov
pop
cmp
xchg
inc
mov
sub
or
push
adc
aad
jl
or
loop
or
lods
pop
cwtl
pushf
int3
lret
or
adc
stos
cmp
mov
lret
mov
fwait
inc
shr
lock
mov
push
js
ficoms
pop
mov
push
jp
pop
mov
adc
adcl
push
inc
fcoms
and
pusha
and
cmp
mov
sahf
dec
dec
testl
fisubrl
fwait
push
dec
add
and
xchg
cwtl
xchg
roll
imul
lret
ja
inc
retw
jecxz
xchg
dec
adc
subl
test
and
push
pop
push
movb
push
in
xchg
sbb
aaa
dec
ljmp
shll
inc
pop
lcall
int
and
gs
repz
in
scas
mov
sar
mov
outsb
rcrb
lcall
rorb
stc
dec
fsts
lret
aad
in
adc
mov
sub
dec
dec
out
scas
sbb
addr16
enter
adc
cmp
adc
dec
or
mov
aam
add
xchg
subb
cmpsl
stc
inc
mov
and
out
push
ljmp
adc
add
push
inc
pop
pushl
cmpsl
mov
jge
xor
ret
and
jbe
and
push
testb
test
lods
ss
popa
push
sbb
or
push
xorl
dec
cmp
cli
cli
inc
dec
movsl
mov
stos
push
aaa
aaa
scas
nop
push
imul
lret
movsl
jb
cmpsb
lahf
jne
fs
sbbl
lret
mov
dec
pushf
hlt
adc
imul
loop
cmpsb
aas
ss
mov
dec
js
or
scas
lock
fsub
out
fs
insb
bound
jb
ds
sub
fwait
pop
lahf
call
les
adc
lods
push
mov
push
or
enter
jecxz
jbe
push
or
sbb
out
lock
iret
fldenv
mov
cli
fstps
test
icebp
add
pop
cmp
scas
fcoms
fistl
sarb
out
pop
jg
ret
mov
mov
dec
cmpsb
in
ljmp
inc
push
or
fwait
sub
push
cmp
mov
int
push
insb
cmp
push
iret
or
nop
imul
xor
jmp
or
ret
fstpl
pop
ja
mov
push
sub
es
test
pop
jmp
insb
xchg
dec
enter
loopne
mov
leave
dec
shrl
pop
sub
dec
xchg
jno
dec
jmp
arpl
sub
or
pop
fistpll
aam
rolb
jle
rorb
movsl
arpl
push
and
push
sub
scas
leave
lds
mov
or
push
into
ss
and
sub
mov
imul
mov
stos
test
jo
sub
dec
jge
add
into
xchg
into
push
shll
jge
lods
getsec
ror
push
lea
push
repz
push
xlat
je
cs
outsb
adc
jmp
fbstp
push
daa
test
sub
imul
js
adc
lahf
movd
pop
jno
xor
sub
inc
pop
pop
cmp
insb
cmc
and
cmp
lods
mov
mov
bound
add
or
in
cltd
movsb
xor
dec
dec
inc
lea
sbbb
xor
js
mov
es
xchg
sbb
or
xchg
mov
dec
mov
and
jecxz
cmp
addl
adc
push
mov
cmp
jo
pop
xor
pusha
jp
fstpt
arpl
cmp
cmpsl
pop
mov
outsb
mov
icebp
addb
mov
pop
mov
or
test
lock
jle
out
and
sbb
sbb
out
cmp
pop
cli
and
gs
stos
cmp
aam
add
inc
pop
call
cltd
ds
mov
xchg
push
vmovd
aam
lcall
pushf
filds
fldl
gs
mov
push
cld
jle
push
dec
cmc
pop
adc
imul
sti
out
xchg
sbbl
jns
enter
test
insl
ret
lds
jbe
mov
aas
test
rcrl
pop
leave
dec
cltd
pop
mov
shrb
pop
fmull
jno
xorl
mov
pop
mov
test
xorl
sbb
or
sbb
mov
add
cmp
mov
jne
mov
sub
mov
mov
icebp
fidivl
enter
dec
add
cmp
and
cwtl
mov
orb
or
sbb
sub
cmp
lret
cli
ljmp
mov
dec
push
jp
dec
jp
or
sbb
sub
cmp
lret
cli
ljmp
mov
dec
outsb
pop
je
push
jp
or
push
push
sub
cmp
into
jmp
jecxz
rorl
orl
loop
push
sbb
sub
cmp
mov
push
inc
lret
std
rclb
ret
inc
loop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rolb
add
cld
add
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
add
add
add
jl
add
je
add
insb
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
add
add
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
add
add
add
add
add
adc
add
sbb
add
and
add
aaa
add
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
add
add
push
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
faddl
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
pop
add
fs
add
pop
pop
add
push
pop
add
dec
pop
add
inc
pop
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
pop
add
mov
pop
add
rolb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
or
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fmull
add
in
add
in
or
add
or
add
or
add
add
pop
or
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
or
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
