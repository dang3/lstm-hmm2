ror
sub
mov
test
jmp
mov
add
add
js
mov
push
nop
push
addr16
jmp
nop
nop
nop
nop
nop
push
push
pop
xor
xchg
inc
push
pop
call
xchg
jmp
nop
nop
nop
push
addr16
add
xor
rol
xor
shl
mov
and
push
pop
jmp
push
mov
push
mov
push
mov
push
mov
test
jmp
jne
sub
or
dec
pop
jmp
lea
jmp
mov
add
ficoml
test
add
add
enter
ret
and
add
mov
movzbl
jmp
pop
mov
insb
cmp
rorb
jmp
xor
cld
ret
jmp
adc
leave
cmp
addr16
jne
add
nop
jmp
addb
xchg
xor
xchg
jmp
je
xor
mov
ret
jmp
es
in
clc
mov
xchg
cmp
xchg
jne
add
push
pop
jmp
jmp
inc
pop
mov
pop
xor
mov
and
or
pop
cmpb
push
pop
je
push
mov
sub
and
add
and
pop
call
cld
cmpb
addr16
jmp
push
xchg
jmp
ror
mov
rol
mov
mov
shr
xor
pop
pushl
and
xor
rol
add
and
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
subb
xchg
jmp
inc
push
pop
ret
jmp
dec
nop
nop
nop
nop
nop
jmp
xchg
jmp
inc
xchg
jmp
nop
subb
xchg
pushl
cld
inc
rol
ror
pop
jmp
and
push
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
rol
inc
mov
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
xchg
push
xchg
push
cld
pushl
xchg
push
mov
and
push
mov
or
sub
add
xor
and
mov
and
and
sub
shl
add
dec
test
jne
pop
lea
call
mov
push
add
dec
sub
pop
add
jmp
sub
xchg
mov
push
pop
andl
xchg
push
addr16
xor
xchg
and
mov
mov
push
pop
lea
jmp
adc
xchg
jmp
cmpl
addr16
jne
jmp
nop
nop
nop
nop
nop
nop
nop
nop
push
addr16
and
and
mov
push
mov
push
cld
jmp
lea
jmp
in
fwait
call
cld
test
jmp
mov
mov
test
std
jmp
out
inc
and
xor
or
mov
or
xor
pop
ret
jmp
sub
sbb
pop
dec
fcoml
pushl
mov
mov
pop
cmpb
push
pop
je
jmp
cmpb
xchg
jmp
addb
xchg
xor
mov
inc
xchg
ret
jmp
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
xchg
shl
sub
mov
sub
mov
push
xchg
shl
mov
mov
push
xchg
push
nop
push
xchg
xor
mov
nop
nop
nop
nop
nop
add
inc
sub
sub
mov
push
cld
push
xchg
push
xchg
jmp
push
xchg
lea
jmp
vmwrite
jmp
push
mov
pushl
xchg
pushl
mov
call
leave
jmp
les
jmp
cmp
fmull
nop
nop
inc
xchg
push
mov
mov
push
pop
mov
xchg
lea
jmp
jbe
mov
lods
sti
decl
add
testl
add
cltd
sti
cld
jmp
ror
and
add
and
and
add
push
or
add
sub
mov
sub
pop
add
rep
jmp
jmp
ret
mov
lcall
sub
add
mov
jmp
mov
xchg
call
xchg
pushl
or
or
xor
mov
xor
pop
jmp
dec
inc
sub
add
and
add
push
xchg
pushl
and
ror
sub
push
sub
mov
sub
or
or
sub
and
and
add
mov
dec
test
jne
pop
pop
call
push
xchg
or
pop
jmp
mov
xchg
movl
xchg
or
mov
inc
xor
xor
shl
inc
mov
shr
jmp
mov
inc
ds
inc
push
add
mov
and
mov
mov
mov
ret
jmp
dec
in
mov
nop
nop
nop
nop
test
jmp
repz
mov
push
push
add
call
push
pop
test
jmp
pop
pop
inc
je
push
xchg
xor
push
pop
or
shl
xor
pop
lea
jmp
cwtl
test
jne
mov
test
cmp
add
fisttpl
test
add
add
loopne
inc
and
jmp
mov
shr
shr
and
add
pusha
jmp
mov
and
mov
jmp
call
push
pop
dec
mov
lea
jmp
and
test
imul
add
aaa
mov
jmp
jmp
nop
nop
nop
push
push
pop
cmpl
mov
jne
push
nop
jmp
push
push
pop
add
xchg
push
mov
jmp
dec
xchg
jmp
nop
nop
nop
nop
nop
nop
nop
add
add
add
add
enter
shl
add
mov
shl
inc
mov
sub
mov
add
nop
cmpl
push
pop
je
push
xchg
ror
sub
and
mov
and
mov
jmp
aaa
pop
inc
push
xchg
call
xchg
add
xchg
push
popl
movb
addr16
jmp
sub
xchg
shr
jmp
mov
jp
shr
add
lea
jmp
js
lret
and
hlt
jae
mov
push
cld
xchg
movzwl
jmp
or
xor
add
add
mov
jmp
xor
push
pop
rorl
jmp
outsl
sub
rolb
jmp
jns
test
jmp
flds
push
xor
sub
pop
ret
jmp
sti
mov
xchg
lcall
nop
je
mov
or
shr
mov
mov
sub
xchg
mov
xchg
mov
xchg
jmp
movb
addr16
jmp
movl
mov
call
mov
or
jmp
je
call
xchg
popa
jmp
test
stc
call
loop
je
jmp
and
xchg
cmp
addr16
jne
and
mov
jmp
fsts
rorl
call
leave
pushl
dec
or
add
push
inc
add
xor
sub
and
dec
ror
and
and
add
sub
dec
test
jne
pop
pop
call
cmp
xchg
je
mov
xchg
jmp
outsl
int3
ja
adc
add
mov
pushl
mov
sub
sub
shl
and
pop
inc
addr16
inc
xchg
decl
jmp
jne
add
mov
jmp
push
ror
rol
sub
rol
mov
pop
add
shr
inc
or
xor
mov
and
and
dec
or
mov
add
mov
cmpw
mov
movzwl
jmp
cltd
sti
xchg
mov
jmp
jmp
loopne
sbb
inc
and
push
pop
jmp
ror
mov
movzbl
jmp
inc
cli
test
and
mov
xor
cld
inc
mov
dec
mov
jmp
lea
jmp
lcall
mov
jmp
popw
xor
jge
add
pusha
jmp
mov
xchg
call
mov
dec
cld
call
cld
inc
push
pop
call
mov
jmp
xor
dec
and
mov
shl
pop
and
sub
sub
and
or
mov
mov
push
pop
add
addr16
or
pop
push
popl
or
and
pop
leave
jmp
and
jmp
inc
cmc
sub
lahf
nop
nop
nop
nop
nop
movl
jmp
jmp
mov
jbe
add
mov
jmp
xor
xor
xor
mov
mov
or
ror
mov
jmp
lret
pop
aad
sub
add
nop
inc
xchg
call
cld
jmp
mov
xchg
shr
mov
add
push
pop
mov
addr16
or
mov
inc
mov
add
and
mov
xor
add
mov
rep
jmp
push
adc
and
dec
inc
inc
xchg
shr
jmp
leave
dec
mov
sbb
add
add
pop
jmp
fisttpl
add
jmp
sbb
loope
mov
add
addr16
movzwl
jmp
jecxz
push
incl
xchg
add
xchg
cmp
push
pop
jl
sub
shr
mov
xor
add
xor
or
mov
jmp
je
sub
sub
and
sub
mov
xor
mov
shr
xor
sub
mov
sub
xchg
mov
xchg
incl
xchg
jmp
stos
lea
dec
push
pop
call
push
pop
call
mov
popa
jmp
jne
jmp
xchg
jmp
ret
jmp
inc
nop
nop
nop
nop
nop
dec
cld
mov
jmp
jne
jmp
jmp
ds
pushl
ror
or
xor
ror
pop
nop
nop
nop
nop
nop
and
shl
and
mov
add
andl
xchg
mov
xchg
jmp
and
mov
xchg
mov
xchg
jmp
call
xchg
test
jmp
repz
jne
cmp
mov
nop
nop
nop
nop
nop
jne
lea
jmp
cltd
xchg
dec
and
xlat
ja
sbb
jmp
leave
test
jmp
je
jmp
jb
cmp
ret
fmuls
adc
mov
mov
mov
shr
xor
or
mov
add
cld
cltd
jmp
js
pusha
add
xor
add
mov
sar
jmp
nop
nop
nop
nop
nop
shr
jmp
lcall
lea
add
and
mov
jmp
jb
and
add
jmp
inc
xchg
loop
add
xor
shr
mov
jmp
adc
mov
push
call
shr
and
mov
test
jmp
jle
rol
xor
or
inc
add
mov
mov
mov
sub
xchg
sub
xchg
decl
jmp
jmp
pushf
cmp
or
mov
rol
xor
and
mov
mov
xchg
incl
xchg
dec
xchg
mov
jmp
adc
test
jmp
nop
nop
nop
nop
nop
sub
push
pop
jmp
dec
xchg
dec
nop
sub
ror
shl
mov
movzbl
jmp
and
scas
add
loopne
jmp
jnp
and
test
decl
mov
mov
nop
nop
nop
nop
nop
sub
addr16
jmp
xchg
adc
shll
inc
and
mov
lea
jmp
cli
outsl
arpl
pop
push
arpl
sub
dec
call
cmc
mov
ljmp
incl
xchg
mov
jmp
sbb
jle
jmp
popaw
leave
mov
mov
call
nop
cmp
xchg
jb
inc
mov
cmp
mov
jb
jmp
add
addr16
jmp
cmp
daa
inc
mov
cmp
xchg
jmp
and
inc
add
and
ror
mov
add
mov
add
xchg
decl
jmp
shll
jne
test
jmp
jnp
mov
jmp
es
jmp
pop
orb
js
add
rorl
jmp
dec
shlb
mov
inc
add
push
jae
inc
xchg
inc
mov
test
jmp
and
je
rol
mov
shr
xor
mov
shl
xor
mov
sub
mov
mov
xchg
jmp
rclb
and
enter
add
hlt
xor
cld
add
xchg
dec
jmp
inc
cmp
jne
push
xchg
push
xchg
pushl
xchg
push
xchg
jmp
pop
and
incl
mov
dec
xchg
mov
jmp
test
test
je
or
leave
jmp
cmp
sar
xchg
jmp
or
or
jmp
xor
xor
shl
mov
and
and
mov
mov
mov
incl
mov
incl
xchg
jmp
push
xchg
shr
dec
inc
mov
push
mov
mov
cld
pushl
ror
or
ror
push
rol
sub
shr
push
xor
sub
xor
and
sub
pop
and
mov
ror
dec
test
jne
pop
pop
call
test
jmp
dec
mov
sarl
jns
nop
nop
nop
nop
je
mov
xchg
sub
xor
rol
and
mov
call
xchg
inc
and
add
and
and
add
jmp
in
xor
xor
xchg
cmpl
mov
je
sub
mov
mov
sub
mov
mov
jmp
int3
test
push
xchg
push
mov
mov
mov
call
addr16
test
jmp
push
lret
fdivs
test
inc
cld
xchg
shr
xor
shr
shr
mov
shr
or
and
mov
jmp
jae
push
and
mov
pop
sub
addr16
sub
dec
add
pop
or
mov
mov
shr
ror
shl
and
pop
ret
jmp
inc
std
nop
nop
nop
nop
nop
pushl
rol
sub
pop
rep
jmp
push
outsl
lcall
xor
mov
rol
dec
mov
nop
nop
nop
nop
nop
push
mov
push
xchg
pushl
mov
call
cld
push
xchg
push
xchg
pushl
push
pop
call
nop
ror
add
or
sub
dec
mov
nop
nop
nop
nop
nop
and
mov
test
jmp
or
add
pushl
shl
or
or
ror
pop
add
push
pop
nop
nop
nop
nop
nop
sub
mov
jmp
and
mov
add
mov
sub
push
pop
shr
jmp
sub
fimull
add
or
add
mov
add
mov
push
pop
nop
nop
nop
nop
nop
movzwl
jmp
outsl
inc
and
xor
mov
and
mov
cmp
xchg
jne
nop
nop
nop
nop
nop
rol
and
mov
nop
nop
nop
nop
nop
and
addr16
add
mov
add
xchg
add
xchg
inc
nop
nop
nop
nop
nop
nop
inc
mov
decl
jmp
mov
incl
jbe
push
pop
push
xchg
nop
nop
nop
nop
nop
push
mov
call
mov
cmpl
xchg
jne
or
ror
mov
add
ror
add
mov
test
jmp
insl
je
nop
nop
nop
nop
nop
pushl
shr
mov
ror
pop
add
cld
jmp
push
mov
push
push
pop
call
addr16
ror
add
and
mov
nop
nop
nop
nop
nop
add
mov
push
cld
push
xor
shl
dec
sub
shr
add
shl
mov
shr
sub
inc
rol
dec
test
jne
pop
pushl
or
xor
xor
or
add
pop
call
cmp
nop
mov
jmp
nop
nop
nop
nop
nop
je
nop
nop
nop
nop
nop
mov
xor
sub
sub
sub
mov
test
jmp
xor
pop
rorb
test
add
add
xor
ror
mov
pushl
sub
dec
dec
xor
pop
mov
xchg
add
xchg
add
mov
or
mov
xor
sub
sub
mov
nop
nop
nop
nop
nop
test
jmp
hlt
mov
adc
test
add
push
push
pop
push
xchg
jns
nop
nop
nop
nop
nop
call
xchg
movzwl
jmp
fsubrs
call
xchg
xor
mov
add
mov
add
xchg
nop
nop
nop
nop
nop
push
mov
pushl
nop
call
push
pop
mov
push
pop
nop
nop
nop
nop
nop
add
xchg
nop
nop
nop
nop
nop
add
xchg
jmp
mov
dec
mov
add
mov
cmpl
xchg
mov
jmp
dec
sbbb
test
nop
nop
nop
mov
jmp
push
mov
mov
nop
nop
nop
nop
nop
and
xor
and
and
mov
mov
addr16
sub
or
mov
pushl
or
pop
sub
shr
sub
inc
pop
xor
shr
shl
shl
pop
sub
add
pop
nop
nop
nop
nop
nop
mov
xchg
nop
nop
nop
nop
nop
cmp
mov
jne
pushl
inc
add
pop
add
cld
mov
nop
add
mov
add
xchg
leave
jmp
ret
jmp
and
nop
nop
nop
nop
lcall
clc
imulb
int3
mov
fidivrl
outsb
and
aad
mov
jne
rcrl
cmp
lcall
dec
shrl
lahf
or
mov
jmp
aas
in
inc
pop
pusha
pop
xchg
push
sbb
lret
jo
dec
jnp
inc
sbb
pop
pusha
fwait
test
rcl
mov
adc
js
mov
in
outsl
pushf
pop
in
cmpsb
jo
test
push
aam
test
and
mov
sti
pop
sub
pop
sarl
rolb
cmp
into
gs
jb
repnz
or
je
lock
pop
faddl
jb
cmp
jno
scas
lea
jp
outsl
hlt
xchg
sbbl
arpl
mov
popa
dec
das
nop
mov
mov
sbb
push
mov
mov
push
iret
sbbb
dec
dec
insl
jmp
inc
dec
cmp
hlt
pop
mov
arpl
dec
sahf
cmpsl
ud1
es
mov
rol
ret
leave
push
xchg
jno
incl
adc
xchg
testb
dec
pop
fildl
xor
xchg
mov
lahf
or
xchg
and
or
or
mov
mov
cwtl
jp
inc
cmp
or
and
adc
jmp
fldl
lret
jnp
adc
jle
aas
push
mov
inc
sub
inc
xor
cwtl
xor
xchg
std
mov
mov
and
jo
enter
xor
les
shlb
cltd
xlat
imul
cmc
mov
dec
and
imul
and
call
movsb
sbb
push
jg
xchg
popl
hlt
pusha
xor
in
in
add
or
cmp
sbb
cmc
jno
test
fiadds
jge
fs
pop
pop
dec
jnp
pop
lret
sarl
jmp
add
xchg
mov
push
push
test
dec
add
paddusb
or
loope
and
subb
sbb
rcrl
push
xchg
mov
mov
testb
cli
cmc
jbe
add
mov
scas
out
into
and
adc
push
stos
mov
dec
xor
in
dec
daa
cmp
loop
btr
rclb
xor
or
xchg
jl
and
fxch
test
cmp
jg
sbb
sbb
rcrb
dec
dec
aad
jo,pt
mov
mov
or
mov
loope
sti
daa
insl
popf
pusha
fists
xor
mov
push
out
pop
xchg
add
add
xor
cld
xor
mov
add
mov
and
pop
int
cltd
cmp
xchg
or
scas
sbb
and
push
outsl
icebp
inc
push
mov
push
stos
repnz
jmp
sar
dec
addr16
pop
mov
pop
insl
jo
repnz
add
mov
fsubs
cmp
mov
xchg
xchg
ja
pop
mov
pushf
test
sub
pushf
jge
filds
adc
xchg
lret
add
adc
sub
ljmp
das
push
jb
inc
ljmp
mov
and
shlb
inc
jecxz
mov
add
faddl
pop
loope
int3
repz
or
stos
or
pop
notb
mov
scas
ljmp
ljmp
stos
push
mov
rolb
sbb
fmuls
addr16
and
xor
into
jo
jmp
repnz
rcll
xchg
arpl
ss
lahf
mov
mov
adc
dec
mov
rcrl
fucom
lret
sbb
mov
repz
sti
cmpsb
popa
add
ret
js
lea
push
fisubs
add
lods
pop
divl
es
mov
xor
out
pop
or
mov
xor
mov
dec
mov
push
jmp
stc
stc
add
outsb
inc
mov
jmp
nop
dec
sub
ja
mov
jge
sbb
adcl
xchg
sub
adc
push
jecxz
and
pop
or
pop
icebp
sub
lods
adc
cmp
pusha
jg
adc
adc
dec
mov
push
scas
out
pusha
in
mov
aas
fiadds
dec
mov
lret
shlb
flds
pop
cmp
cs
cmc
ret
mov
cs
add
adc
inc
divl
loop
lcall
jg
push
out
cmp
jbe
test
mov
and
cmpb
jg
pop
jb
push
outsl
dec
push
lea
fsts
imul
in
fnstenv
cmp
pop
stos
mov
push
add
push
xlat
push
ss
out
gs
push
ljmp
loopne
xchg
jb
in
pop
mov
inc
xchg
cwtl
dec
addr16
lret
jbe
std
sub
cld
jb
pop
or
push
dec
scas
mov
adc
js
jge
sub
shrb
jg
cmp
xchg
mov
sahf
fisubrl
ja
inc
ljmp
mov
jp
jl
test
repnz
xlat
and
cmp
repz
mov
pop
xor
mov
xchg
in
out
fstl
add
or
mov
int
jl
push
xor
inc
aad
adc
and
test
popf
jge
dec
mov
xchg
test
in
sub
pop
xlat
pop
gs
jl
mov
movsl
decb
push
aam
dec
add
push
jns
or
cs
pop
in
lds
lock
insb
subb
cmpsb
lea
sbb
dec
test
push
leave
fldt
adc
scas
lret
cmp
dec
into
push
and
aas
ljmp
loop
jne
rcrl
cwtl
and
inc
repnz
into
inc
jno
loopne
dec
inc
mov
repnz
push
dec
mov
and
fisttpl
inc
and
fdivs
push
movsb
hlt
cli
ror
dec
outsl
mov
popa
fwait
mov
mov
adc
lods
jnp
cmp
dec
xor
add
add
ret
push
jp
mov
aaa
fildll
insb
mov
xchg
xchg
cmp
sub
sbb
cmp
in
xor
mulb
xor
scas
xor
and
xlat
icebp
stos
addl
inc
iret
test
cld
and
fists
sub
jecxz
fstpt
inc
push
lcall
fcoms
rorb
shlb
cs
pop
jnp
in
sub
push
push
scas
inc
pop
mov
sti
fs
daa
lock
sti
adc
sub
mov
insb
fcompl
lret
sub
lret
test
sbb
js
push
lds
mov
or
je
loope
movsl
lret
arpl
scas
inc
jecxz
outsl
cltd
test
popa
mov
push
sub
xchg
out
daa
and
lods
pop
add
repnz
repz
inc
lret
add
testl
std
mov
in
mov
leave
or
ja
push
and
jmp
add
mov
mov
sbb
pop
outsb
xchg
das
flds
fcmovu
mov
xor
or
dec
pusha
popf
leave
rclb
jmp
and
pushf
xor
and
or
lds
arpl
xor
mov
pop
sbb
or
or
adc
pop
mov
jno
add
les
ss
leave
jmp
pop
aas
cltd
aas
testb
mov
in
cld
out
dec
aad
popa
adc
lds
dec
rep
pop
mov
mov
outsb
aam
inc
push
ja
movb
inc
inc
or
push
jns
arpl
add
cmc
jo
xor
lock
cmp
jge
mov
insb
adc
es
cmp
in
outsl
and
mov
sub
mov
and
sti
fldenv
pop
add
les
sub
ret
in
ja
movsl
fdivs
jl
stos
sbb
mov
or
xchg
push
sbb
jle
insb
push
lods
imul
loope
dec
and
mov
push
es
fsubs
ds
xor
adc
fcompl
in
push
mov
push
sbb
xchg
pop
hlt
ja
and
std
pop
jnp
repnz
test
fimull
repnz
mov
push
xchg
jno
rorb
pop
cmp
aad
repnz
inc
xchg
lock
fistps
test
xchg
fwait
mov
jecxz
mov
xor
sbb
mov
aad
cmp
sahf
xchg
idivb
mov
jmp
dec
push
mov
out
xchg
mov
xchg
roll
pop
popf
mov
test
enter
negl
jg
mov
jbe
cmp
pop
pusha
add
icebp
mov
mov
and
inc
fwait
adc
cmp
hlt
mov
mov
scas
push
les
and
lahf
pusha
push
sbb
ljmp
mov
cmpsb
outsl
push
fcom
out
add
rcrb
cs
