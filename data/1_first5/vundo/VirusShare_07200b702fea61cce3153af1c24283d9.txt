dec
stos
xchg
adc
rorl
mov
xchg
push
jg
xor
pusha
pusha
pop
stos
outsl
imul
xor
nop
mov
push
aaa
push
sbb
mov
jo
or
loopne
inc
int
movl
and
inc
cld
fldl
incb
jnp
cmp
pop
pop
sahf
jb
into
and
cmp
xchg
je
sub
lds
icebp
mov
mov
test
test
aad
fisubs
xor
sub
loopne
push
sbb
loop
xor
and
test
add
je
inc
add
cmp
mov
dec
mov
cmpsl
mov
adc
xchg
adc
test
push
jmp
mov
inc
xchg
stc
fcoms
mov
push
sbb
inc
daa
mov
push
loop
pusha
add
jnp
mov
fidivrs
mov
insb
mov
outsl
mov
pop
stos
xor
pushf
push
xchg
inc
fcmovbe
sbb
mov
push
popa
jmp
into
sub
mov
jne
js
inc
mov
jmp
push
xchg
mov
int3
pop
inc
or
divb
add
lret
es
pop
and
jnp
testb
xor
pop
sbb
cmp
xor
aad
cmp
jge
vsqrtpd
ret
dec
lahf
in
pop
jl
call
std
call
xor
iret
and
inc
idivb
push
stos
cmp
mov
mov
fnstenv
jno
popl
addr16
shr
cwtl
mov
lods
cli
pop
aam
loop
aas
cmp
inc
push
inc
cmp
ja
push
adc
sub
sub
sahf
frstor
lahf
loopne
jge
push
cmp
lea
jne
xorl
fistps
xlat
xchg
or
xchg
adcl
ljmp
cli
fldt
and
push
mov
stos
into
add
sahf
aaa
xlat
fdivrs
sbb
loope
pop
in
sahf
add
fs
cmp
fmull
aaa
sbb
mov
sbb
pop
hlt
add
mov
sbb
dec
xor
mov
sahf
add
and
fs
sub
push
cs
sbb
lea
and
lret
inc
lahf
push
std
repz
int
call
mov
lea
dec
repz
daa
cmp
cmp
int
cs
xchg
push
mov
push
xchg
cwtl
arpl
bound
add
daa
loop
mov
aaa
in
mov
hlt
pop
jb
sub
shll
loope
ja
pop
lea
shrb
mov
icebp
ljmp
xor
repz
movsb
out
jg
pop
gs
loope
xchg
testl
rcll
xor
sbb
scas
adc
sbb
ss
or
lods
fadd
lret
rcll
mov
int3
and
std
pop
sbb
data16
cmpsb
adc
cmp
push
mov
sbb
mov
pop
push
lret
scas
stos
and
das
stos
xor
mov
jle
mov
mov
xor
les
bound
dec
jbe
adc
cmpsb
clc
cwtl
sub
addr16
add
mov
outsb
pushf
and
adc
xor
incb
nop
xor
xchg
in
jmp
push
loope
push
dec
lret
xchg
out
and
shrl
fadds
mov
and
or
mov
xchg
cs
shrb
push
and
dec
sbb
push
jb
lret
cmc
add
lock
mov
fbstp
dec
fnstenv
mov
xchg
cmp
adc
jle
loopne
mov
sbb
adc
pop
ret
outsl
jmp
in
int3
push
sar
rcl
inc
stos
xor
mov
xchg
ret
push
fists
inc
xchg
mov
push
lods
dec
shlb
es
xor
inc
cmp
out
in
and
roll
cmp
insl
imul
adc
nop
int3
xor
ret
ret
bound
je
xchg
stc
push
popa
ja
sbb
syscall
daa
and
int3
mov
outsb
mov
rcrl
cmpsb
dec
pusha
push
repnz
out
lcall
cli
loop
insb
sbb
mov
sbb
pop
pand
movsl
icebp
cltd
xchg
and
adc
push
testb
add
push
sbb
lea
pop
cmpsb
aaa
dec
cmp
cli
cmp
mov
pushf
jns
dec
pop
ffreep
xchg
out
scas
jp
and
in
into
or
mov
icebp
pop
test
push
cli
cltd
jb
pop
hlt
cmp
inc
inc
pop
mov
das
shufps
pop
mov
repz
jge
mov
or
and
nop
addl
mov
out
lcall
setnp
xchg
cmp
jbe
cmp
push
cltd
cmp
mov
pop
mov
mov
enter
or
out
shl
adc
and
ret
call
pusha
fisttpll
ds
sub
and
mov
cwtl
rcll
jo
in
mov
iret
gs
mov
or
stc
xchg
ret
jae
sbb
hlt
mov
mov
sub
mov
mov
call
cmc
pop
and
mov
ljmp
push
jae
adc
cmpsb
std
imul
movsl
fnstenv
getsec
out
das
pushf
rcrl
or
test
xlat
aad
aad
jmp
shl
pop
fwait
cmp
jo
in
inc
jmp
push
and
and
mov
mov
pop
push
fstpl
aad
cmp
mov
aad
inc
je
xor
xor
scas
or
int3
ja
xor
mov
adc
addb
sbbl
gs
xor
shl
jp
inc
dec
jecxz
pop
mov
fisubrl
xlat
push
in
mov
pusha
add
or
adc
and
dec
cmp
sbb
push
mov
or
test
push
hlt
vpsubsb
in
repz
xor
pop
jbe,pt
and
dec
cmp
mov
push
add
mov
scas
int
in
cmpsl
rcll
pop
fcmovbe
dec
test
ja
jns
test
mov
cmpl
ljmp
out
loope
adc
test
jle
aaa
jl
push
inc
addr16
leave
mov
jge
add
or
pop
shrl
lret
jg
call
int3
pop
popf
dec
jne
mov
lods
jno
jecxz
jo
push
xchg
sahf
in
jge
clc
pop
inc
cld
mov
adc
clc
roll
sub
pushf
cmp
aaa
scas
add
sarb
xchg
movsb
clc
sub
dec
push
fdivs
jne
sub
stc
sub
orb
push
movsb
cmp
or
roll
xchg
fbstp
hlt
mov
cmp
insb
movsb
jl
pop
in
dec
into
jmp
mov
mov
adc
fwait
or
push
cmp
jne
fxtract
fwait
outsl
fildll
test
rorl
shll
push
xchg
lds
in
fsin
fmull
bnd
mov
inc
push
push
lahf
inc
loop
lock
stos
xor
fstps
popf
leave
movsl
inc
repnz
jns
leave
jmp
in
sub
pop
imul
cmpsl
aas
adc
add
mov
shr
pop
xchg
mov
add
lea
jg
in
out
aam
into
test
jp
in
int
xor
xor
cltd
jecxz
push
out
jae
and
mov
mulb
cld
mov
aas
cmp
sub
sti
sub
out
jmp
inc
and
out
lcall
fwait
sbb
ljmp
lea
jmp
ljmp
push
popl
sub
xchg
daa
pop
sahf
inc
ljmp
add
and
je
outsb
lock
jo
fsubs
push
xchg
inc
and
sub
mov
jp
push
sbb
lea
lds
stc
xor
repnz
gs
test
std
div
pushf
mov
mov
add
fdivr
pop
outsb
mov
add
dec
jle
mov
aam
xlat
sar
mov
mov
mov
and
mov
xor
insb
mov
inc
dec
ret
mov
enter
aaa
and
pop
dec
sbb
bound
add
cs
rorl
dec
adc
xchg
fcoms
inc
cld
js
test
pand
insl
push
movsl
enter
push
movsb
fs
adc
mov
insb
mov
jecxz
loopne
std
add
mov
xchg
lea
xchg
inc
add
mov
test
mov
push
cmp
push
test
test
orl
pop
xchg
movsb
mov
and
mov
jnp
inc
and
push
cs
imul
loop
mov
mov
mov
call
push
dec
gs
inc
pop
lahf
cmpsb
mov
je
notl
js
mov
movsl
jno
adc
pop
sub
xchg
repz
sub
dec
addr16
cmp
test
insl
adc
dec
jl
adc
mov
fs
or
xor
mov
das
loop
inc
push
jne
push
cs
pop
dec
push
insb
lret
inc
jge
aas
enter
cmp
popa
out
cwtl
jg
mov
push
sbb
inc
negl
add
fwait
repnz
rorb
cmp
jno
je
adc
loop
mov
mov
sbb
sub
xor
mov
sbb
or
pop
lds
mov
mov
cltd
stc
ss
mov
jae
jo
into
dec
lods
into
inc
dec
les
es
sbb
mov
adc
mov
andl
insb
pop
pop
test
jle
or
jle
ljmp
jge
and
test
add
int3
mov
xor
stos
call
push
hlt
in
and
fcomi
mov
in
idiv
jns
pusha
test
sbb
int3
fisttpll
int
and
loopne
mulb
dec
cmp
cld
daa
ret
cmp
cld
jl
fwait
mov
jg,pn
pushf
and
adc
mov
mov
mov
cmp
pop
iret
lret
fwait
or
mov
mov
sbb
pop
dec
sbbl
ret
mov
insb
stos
mov
xor
test
repnz
and
jl
add
mov
frndint
fnsave
push
pop
fisttps
push
lret
mov
ljmp
mov
out
data16
stos
add
repnz
fstpl
data16
lahf
sub
pop
icebp
gs
push
adc
fisttpll
in
add
pop
add
aaa
or
or
or
test
mov
leave
jmp
orb
jnp
push
mov
mov
lahf
pop
mov
fcoms
fs
into
push
and
repnz
xchg
adc
sbb
sti
aam
in
mov
pop
mov
mov
inc
nop
inc
sub
out
imul
or
lret
xor
push
cmc
hlt
mov
lods
pop
sbb
inc
mov
inc
push
adc
int
sub
out
popa
in
dec
sub
mov
subl
cmc
mov
pop
sub
pusha
sub
push
lods
mov
sub
fisttpll
imul
test
mov
pop
pop
and
mov
xor
rorb
xchg
es
mov
hlt
repz
or
xchg
std
dec
fistps
xchg
gs
adc
aaa
clc
test
fisubrl
xor
pop
sbb
jmp
bswap
mov
dec
fwait
enter
inc
loop
call
sub
loopne
sub
clc
pop
jecxz
dec
add
push
cmpsb
jl
xchg
fsubl
fidivrl
and
test
and
or
test
in
iret
and
out
fwait
xchg
adc
xor
repz
or
daa
loopne
add
cmpsb
mov
int3
stc
nop
es
jo
ret
mov
fdivl
lcall
jne
call
sahf
test
jnp
xchg
push
or
mov
mov
push
scas
cmpsl
das
mov
jns
or
call
fs
out
fcompl
xchg
call
into
arpl
cmp
stos
inc
jb
add
push
and
mov
sahf
int3
push
ficomps
call
ljmp
fistpll
mov
aam
rcrb
xchg
or
cmp
sub
jno
xor
adc
lds
inc
test
orb
mov
cmpsb
scas
int3
push
mov
xor
loop
mov
decb
lret
ret
pop
pusha
loopne
push
adc
cmpsl
and
loop
or
gs
pop
jg
nop
in
mov
xchg
cmp
mov
das
cwtl
and
sub
lea
or
dec
jo
iret
xchg
test
stos
movl
icebp
and
push
loop
sub
adc
jl
push
fisubrs
inc
jmp
fwait
sub
mov
dec
popa
loope
addr16
xlat
dec
inc
pop
mov
mov
pop
inc
mov
test
mov
pop
cmp
outsb
cld
fstl
out
xchg
icebp
mov
mov
outsb
sbb
cli
jnp
ret
push
mov
ret
or
or
in
mov
push
and
push
adc
movsb
pop
lds
xor
and
jnp
test
out
pusha
stc
pop
aam
xlat
mov
arpl
mov
mov
sbb
test
pop
mov
fmul
dec
inc
cmc
mov
test
xor
popa
icebp
add
mov
cmpsl
sub
insb
rcll
es
jle
mov
aam
adc
xlat
gs
inc
enter
mov
pop
call
sti
fistpl
and
fsubrl
jo
sarl
pop
xor
mov
mov
sub
jbe
jno
int
adc
sub
iret
add
mov
test
test
push
add
push
cmc
hlt
sub
dec
js
scas
pusha
fdivrs
dec
dec
cli
fs
add
xchg
mov
sub
sub
das
in
ret
mov
mov
push
insl
sarl
sbb
in
jae
outsb
imul
dec
lds
in
push
pushf
std
mov
js
mov
in
mov
rolb
ja
mov
or
mov
inc
mov
cmp
in
inc
dec
rcll
sub
xchg
mov
das
or
out
mov
mov
scas
rcll
or
aas
and
sub
fists
lret
mov
ds
repz
aam
stos
jnp
cmp
jmp
mov
mov
add
and
and
push
lods
sbb
jo
mov
repnz
testl
test
icebp
xor
sarb
jecxz
bound
xchg
gs
aas
or
push
add
cmpb
sbb
addr16
mov
mov
cmp
lret
sti
scas
xchg
cmp
fistl
jne
cmp
pop
std
mov
adcl
jle
mov
cmp
xorl
mov
shlb
push
mov
nop
andl
movsb
push
cmp
cmpb
dec
ja
test
sub
push
or
mov
sbb
xlat
push
aad
sub
mov
xchg
aam
stc
std
push
push
mov
ss
inc
cmp
push
pop
icebp
mov
ss
cmp
insl
not
and
push
xchg
sbb
int
push
je
repz
psubb
leave
sbb
mov
jecxz
aam
jns
pop
in
cmp
add
jg
movsb
scas
or
je
repnz
arpl
int
mov
mov
in
inc
cli
lods
insb
inc
mov
or
jle
paddw
in
cli
daa
adc
loope
add
fstps
pop
or
mov
mov
jbe
lock
lea
das
loopne
rorl
popa
push
pop
add
ret
stc
mov
jecxz
call
push
in
inc
xchg
movsb
fiadds
push
aaa
rclb
mov
add
adc
mov
std
xor
in
fwait
sti
les
in
test
xor
gs
sti
test
lret
pop
add
add
jl
sbb
push
mov
mov
in
pushf
adc
jge
loope
outsb
sub
mov
xchg
out
pop
iret
sbb
nop
fidivs
outsb
mov
cmc
xchg
sub
sub
sub
jo
rclb
add
mov
imul
or
inc
dec
test
scas
fisubl
push
cmovs
repnz
int3
jp
dec
xchg
jge
cmp
mov
mov
mov
lret
xchg
jno
lea
mov
add
inc
pop
in
in
imul
in
or
mov
cwtl
sub
adc
dec
lcall
jnp
out
shlb
ss
mov
cmpsb
add
mov
cwtl
sahf
jmp
dec
subb
xchg
pop
mov
arpl
sub
sbbl
mov
movsl
loope
filds
lods
dec
mov
scas
mov
pop
cltd
cmpsb
or
adc
clc
push
dec
out
cmp
cmp
push
cmp
mov
jno
sbb
or
push
lods
sub
push
push
sbb
push
sbb
adc
sbb
inc
xor
adc
inc
out
mov
mov
fdivrs
lea
pop
jg
pushl
mov
out
jle
stos
adc
stos
mov
push
mov
andb
ljmp
fsubl
adc
mov
negl
out
out
fadds
sarb
push
sub
xlat
and
add
lret
xorb
iret
jecxz
sub
pop
sub
sub
push
cltd
std
xor
es
movsb
pop
cmp
sub
inc
sub
or
jns
pop
jp
cmp
outsb
addl
addr16
bound
inc
ss
pushl
push
mov
sbb
jl
adc
or
out
dec
dec
fs
cmc
call
dec
push
fwait
xor
jae
jno
sahf
cmp
or
xor
sti
test
jo
lret
dec
push
mov
pop
push
aam
push
adc
jnp
test
insb
popa
push
cmp
andb
push
xchg
iret
fs
or
xchg
xor
cmp
adc
std
mov
xchg
cmpsl
pop
cmp
call
enter
shll
sub
imul
in
adc
push
inc
jge
add
xorl
inc
out
push
lret
je
enter
shll
jge
add
adc
dec
dec
push
add
xchg
pusha
and
or
inc
outsl
adc
enter
ds
xor
in
pushf
push
sub
es
sbb
adc
scas
scas
loop
adc
clc
imul
dec
in
imul
mov
repnz
rol
sub
scas
add
cmp
scas
int
mov
cmpsl
jno
push
sbb
call
loope
shrl
mov
mov
mov
sahf
lret
mov
pop
shlb
sti
sub
fadds
or
call
dec
leave
loop
mov
add
jecxz
shll
ljmp
or
mov
pop
jne
mov
and
push
adc
or
add
push
jne
xor
sub
cmc
mov
push
add
push
push
mov
and
sarb
push
or
jno
adc
out
int
sarl
adc
shll
jge
inc
xchg
or
loope
ret
ljmp
push
out
push
xor
ret
sbb
or
lock
mov
ret
inc
add
mov
in
rorb
sbb
mov
cmp
mov
test
test
cmpsl
les
addr16
sbb
sub
jp
jg
sbb
stos
xchg
je
cmpsb
mov
mov
ss
int
dec
adc
test
push
in
fisubl
mov
jle
xor
imul
dec
movsb
loope
push
xchg
or
bound
call
add
pop
loopne
daa
dec
xor
sub
out
jo
ja
lcall
mov
into
in
cltd
jge
test
jno
jmp
hlt
dec
scas
pop
jbe
lds
sbb
call
jmp
xor
cmp
lret
popf
xor
xchg
in
mov
gs
cmp
jl
test
scas
push
xor
out
mov
pushf
jle
mov
cs
cli
lds
push
arpl
sub
aam
xchg
mov
and
sbb
or
add
cltd
out
and
fstp
ds
push
mov
xchg
xor
lods
mov
sub
xor
jbe
in
shll
dec
sbb
cmp
out
fwait
add
into
aad
inc
adc
add
xorl
and
cltd
shll
lret
leave
hlt
popl
push
jno
mov
mov
aam
nop
fsubl
lcall
inc
in
and
or
pop
pushf
pusha
jnp
and
xor
jmp
or
add
pop
adcb
mov
jp
adc
pop
sbb
sbbl
mov
outsl
adc
pop
sub
dec
int
ja
addl
cwtl
shlb
add
fs
adc
sbb
xchg
xchg
les
cmp
cmp
mov
and
push
dec
jno
jnp
or
xchg
push
arpl
xchg
cmp
adc
mov
cmpsl
int3
dec
int3
mov
cmp
push
xchg
push
cwtl
lods
inc
push
xchg
lds
and
xchg
pop
jns
aad
xlat
loop
negb
stc
fnstsw
stos
adc
dec
push
ret
les
addr16
data16
mov
test
xchg
xor
jge
clc
sbb
jnp
add
push
hlt
fcom
and
outsb
xchg
mov
or
or
out
jge
push
loopne
lret
inc
fsincos
jl
int
mov
sbb
add
rol
popf
mov
sbb
and
fistl
mov
dec
jo
jg
jl
fs
push
push
jo
push
pop
xor
dec
or
inc
mov
jbe
cmc
dec
data16
cmpsb
fsts
pop
pushf
sbb
jp
cld
jo
iret
push
or
shll
sbb
or
cltd
fdivrl
test
jns
test
sub
ss
outsb
mov
popf
fnstenv
ret
gs
xor
sub
and
insl
aaa
lcall
sub
pop
cli
es
sub
imul
sbb
pop
rol
pop
mov
dec
pop
popa
jne
cmc
lods
push
cmc
lods
xchg
les
in
push
sub
add
cmp
xor
je
inc
jl
mov
push
std
repz
dec
pusha
cmc
mov
aas
xchg
loopne
repz
pop
cmpl
add
sbb
pop
jle
shlb
inc
xor
push
mov
outsl
sbb
sti
cmp
dec
test
imul
icebp
sub
sbb
push
aas
insl
mov
or
cs
outsb
pusha
enter
hlt
test
adc
xor
dec
lret
mov
call
sbb
sbb
xor
int
xchg
cld
fimuls
enter
jmp
xchg
xchg
dec
mov
cmp
pop
fdivrl
and
arpl
fwait
jno
cwtl
fbstp
pop
dec
scas
cmp
stos
sub
popa
pushf
cmc
cld
hlt
cmp
xchg
out
or
lcall
aas
pop
mov
cmp
add
daa
icebp
lret
push
inc
mov
pop
test
jle
aam
lds
std
test
mov
dec
scas
push
int3
push
sbbb
insb
xchg
insb
mov
pushf
jle
scas
shrb
mov
mov
sbb
xchg
aas
xlat
mov
push
inc
hlt
mov
sbb
mov
sbb
test
inc
cwtl
cmp
xchg
icebp
mov
jle
mov
xchg
mov
push
les
mov
test
lods
pop
pop
aam
cli
mov
sar
aaa
pop
xor
jecxz
and
adc
clc
ljmp
scas
js
mov
pop
push
not
in
lret
xor
xor
inc
lea
inc
jno
mov
rolb
push
shrb
aaa
sub
gs
jle
pop
cmp
xbegin
mov
cltd
jl
mov
xor
xchg
sbb
clc
test
and
rcll
dec
push
sub
fs
in
or
in
repz
pop
push
cmpsl
sbb
cs
sarl
pushf
mov
enter
movsb
hlt
fisubs
fstpt
fsubrp
stos
popf
sub
mov
imul
jnp
ret
and
cmc
sbb
dec
loopne
cmp
std
cmpsl
dec
fists
add
fs
add
sbb
lock
lds
por
and
inc
lcall
rorb
sbbb
data16
xchg
dec
pop
xchg
in
nop
jl
insl
outsb
or
outsl
enter
dec
sub
xor
fadds
mov
and
imul
std
loopne
mov
imul
inc
add
push
and
mov
sbb
repnz
push
divb
fnstenv
and
cltd
int3
inc
test
lods
jge
dec
in
sbbl
mov
sti
jle
mov
jmp
inc
test
stos
xchg
roll
fidivrs
and
pop
mov
xchg
bound
xor
jle
mov
fwait
adc
mov
pop
mov
cmp
inc
xchg
mov
in
enter
sub
ret
lahf
mov
movsb
or
dec
enter
jae
push
out
jmp
test
inc
lea
dec
jge
jge
adc
adc
shl
pop
push
jge
dec
xchg
pop
sbb
mov
jno
in
inc
lret
mov
add
stc
inc
sub
leave
test
mov
jmp
fcomps
add
mov
clc
inc
and
popa
arpl
es
or
adc
xchg
loop
ret
in
ret
mov
int3
cmc
jmp
sub
xchg
stos
pop
dec
sub
sbb
or
inc
pop
jmp
mov
mov
lret
mov
xor
out
js
movsl
dec
shll
mov
fcmovbe
dec
push
jae
and
and
xchg
and
mov
add
xor
fwait
je
inc
cmpsb
push
sub
pop
or
rcrl
push
xor
jg
loope
mov
lret
and
in
int
lock
iret
scas
loopne
outsb
outsb
loope
push
cwtl
sbb
jno
add
jmp
jecxz
mov
out
jo
pop
cmp
dec
cmp
lock
pop
xlat
mov
mov
mov
cmc
rolb
fs
xor
icebp
mov
ljmp
mov
sub
xchg
fistpl
lock
pop
xchg
nop
iret
or
and
cmp
pop
fwait
iret
adc
les
lea
decb
in
fwait
imul
pop
das
jb
div
outsb
ret
inc
and
stos
mov
sub
push
leave
add
pop
or
push
imul
xlat
stc
mov
shll
jg
js
jle
loop
jecxz
sbb
call
mov
cld
dec
repz
jg
inc
imul
cmp
cmp
fisttps
lret
xor
and
adc
xchg
in
lret
and
cli
xlat
mov
or
inc
xor
out
inc
loop
shrl
scas
aaa
and
adc
loope
inc
ja
divb
sbb
cwtl
xchg
lds
repz
xchg
and
fld
stc
add
pushw
mov
pop
into
or
dec
sub
jnp
mov
push
fmull
aaa
les
repz
enter
push
jmp
scas
cmp
iret
fstps
out
shlb
push
mov
daa
and
push
sbb
jle
push
repz
inc
clc
je
sar
scas
les
cli
jno
and
fstps
sahf
xchg
icebp
out
sbb
mov
out
popa
adc
jnp
mov
in
jae
or
sub
push
mov
or
push
icebp
and
int
inc
gs
imul
data16
pop
lods
sbbl
mov
and
jb
les
xchg
push
gs
ss
xor
je
fadd
pop
jg
gs
sbbb
xchg
xchg
jnp
pop
cmp
in
mov
jae
sbb
dec
adcl
sub
jecxz
ljmp
cli
lret
fildll
add
ljmp
imul
mov
xchg
int
sti
les
addb
push
stc
and
jle
bound
fisttpll
push
mov
das
push
fs
mov
hlt
xchg
cli
jnp
in
push
and
lds
mov
jp
test
movsl
mov
xchg
popf
jns
fdivs
arpl
aas
sbb
cmp
popa
aas
xlat
add
mov
imul
fsubrl
jp
js
stos
pop
xchg
mov
in
rorb
dec
insl
jge,pt
adc
rcr
sbb
jnp
test
test
jae
jp
or
leave
or
sbb
loop
scas
in
rcrl
dec
mov
enter
cmp
add
out
dec
dec
fidivs
divl
sub
int
cmp
insl
xlat
test
mov
or
jbe
dec
gs
jae
mov
push
xorl
cwtl
adc
xor
rolb
sub
popa
mov
sbb
insb
js
cltd
aaa
mov
xchg
sub
xchg
pushf
cmpsb
mov
sbb
jmp
outsb
aaa
sar
push
xchg
push
jno
pop
push
movsl
jl
mov
push
lds
or
cmp
jmp
mov
subb
jo
arpl
repz
mov
sbb
mov
pushf
into
loopne
mov
pusha
loopne
mov
jb
fisubrl
hlt
add
jp
cmp
and
mov
lods
mov
repz
push
mov
xor
push
push
cmp
ds
ds
sub
outsl
std
js
pop
imul
xchg
push
and
inc
jge
mov
mov
sahf
push
jne
pop
arpl
ljmp
loop
notl
add
dec
pop
repnz
fadds
jno
inc
loopne
pop
add
and
enter
decb
adc
std
sbb
xchg
pop
jl
xchg
sar
cmc
stos
loope
inc
adc
stc
mov
mov
mov
clc
fs
repz
cmp
inc
sbb
push
gs
test
imull
xchg
sti
mov
pop
das
test
add
xchg
push
jle
xchg
psubd
push
movsl
sbb
add
std
loope
fs
dec
data16
mov
jge
mov
mov
inc
mov
out
vmwrite
push
cld
jg
xchg
lods
scas
incb
in
sbb
sub
aam
aam
mov
xchg
jb
fdivs
fisubs
jmp
inc
push
cli
shll
aaa
push
repnz
test
fmull
mov
cltd
mov
mulb
dec
and
or
pop
jno
stos
mov
jns
sub
shr
data16
aaa
lods
inc
sub
and
daa
int
or
adc
into
xor
jb
mov
pop
add
insb
adc
pusha
dec
dec
and
mov
sbb
dec
push
sub
popa
leave
xchg
adc
pop
loope
sub
int
sub
adc
and
je
mov
xlat
sub
adc
lea
cmp
pushf
movzbl
data16
or
lret
outsb
push
loop
xor
cld
sub
xor
movsb
or
xor
roll
push
jg
sahf
or
les
add
fadds
fwait
repz
and
iret
jge
loop
clc
pop
pop
lahf
sub
push
in
subb
jne
imul
sbb
mov
test
fdivs
mov
push
mov
jo
cwtl
test
mov
pop
push
pop
xor
inc
leave
ret
jle
popf
push
popa
mov
adc
int
scas
cmpsb
inc
gs
pop
pop
int3
gs
data16
mov
push
push
in
out
scas
jns
shll
arpl
test
add
pop
ja
jno
cmc
pop
and
sbb
mov
mov
sub
fwait
hlt
mov
jns
test
mov
js
movsb
cmpsl
mov
sbb
mov
test
imul
mov
sub
popf
mov
push
out
push
dec
or
mov
sub
mov
out
punpckhbw
iret
adc
add
jo
call
mov
dec
clc
adc
cmpsl
and
mov
adc
in
xor
sub
push
cmp
outsb
lcall
out
add
add
sbb
sub
ja
nop
ja
inc
rcrl
mov
imul
in
pop
sub
cwtl
sti
sub
jae
inc
mov
inc
aam
sbb
into
mov
pop
push
xchg
clc
sbb
daa
test
or
cmpl
dec
leave
mov
sub
in
add
int
test
and
mov
dec
ret
add
cmp
outsl
jge
adc
iret
dec
cmp
sub
jp
ret
pop
ja
testb
insl
hlt
mov
or
mov
lock
lret
lods
sbb
push
repnz
sub
inc
aam
scas
pop
push
push
dec
in
lods
insb
movups
adc
adc
mov
out
in
testb
rcr
add
mov
sbb
xchg
gs
jmp
aaa
popf
sub
cli
cld
sub
xor
jle
jne
inc
mov
push
aad
daa
push
es
lods
jg
mov
out
enter
xor
in
jecxz
lds
in
dec
sahf
jge
push
arpl
cmp
add
add
xchg
xchg
in
sbb
test
jg
xchg
sub
loop
movsl
les
outsl
and
arpl
xchg
iret
orb
nop
jg
jle
push
movsb
inc
mov
fucomp
or
shl
iret
jecxz
xchg
mov
cmpsl
mov
xchg
aam
out
xchg
pop
fnstsw
xchg
jns
push
aad
add
insl
dec
inc
or
ja
mov
jbe
insl
mov
iret
cmpsl
sti
ja
xchg
jp
gs
in
jno
jmp
lret
movsl
cmp
fidivrs
jge,pt
jne
ret
stos
pop
nop
loope
pop
add
xchg
aas
fmuls
pop
mov
jnp
jp
insl
jp
sub
leave
mov
push
or
fidivs
jge
data16
test
repz
lea
outsl
in
or
mov
or
lahf
push
push
ret
movsl
mov
pop
rcr
sbb
mov
sub
das
daa
mov
fimull
jmp
cmp
xor
pop
push
js
js
fxam
lahf
pop
xor
mov
mov
fwait
mov
mov
mov
inc
xor
or
icebp
xor
push
inc
sbbb
inc
adc
sahf
movl
repnz
pop
out
insb
sbb
testl
daa
push
mov
push
sbbl
jle
lods
ficoml
push
mov
repnz
pop
adc
sarl
jne
cld
cltd
mov
imul
pop
and
out
je
movsl
sbb
xor
lcall
pop
adc
xchg
andl
cmp
lods
fnstcw
out
cmp
sub
flds
adc
adc
add
pop
loop
ds
int3
lds
pop
in
or
movsb
adc
pop
sbb
pop
cmp
imul
outsb
pop
lret
js
jae
jno
add
stos
sub
shrb
sbb
ret
sbb
fmull
mov
test
pushf
setle
int3
mov
lods
mov
movsl
xrelease
or
lret
sub
fldcw
aas
test
and
orb
cltd
pop
cmp
mov
push
xor
fiaddl
sbb
in
jo
inc
arpl
xchg
adc
inc
push
mov
or
out
sahf
in
mov
nop
pop
and
lahf
or
arpl
test
enter
fdiv
dec
outsl
sub
pop
adc
mov
sbb
ret
fwait
mov
adc
bound
dec
xchg
test
aad
inc
lahf
xchg
es
push
push
inc
call
movsb
in
daa
xchg
push
je
rcll
and
mov
repz
ljmp
in
sub
out
push
mov
pop
stos
sbb
xorl
dec
adcl
fists
dec
enter
arpl
outsl
mov
jg
rclb
mov
cli
out
xchg
cs
mov
test
es
sbb
imul
int3
cmp
fmull
mov
cld
xchg
mov
loope
push
xor
xor
lds
jge
mov
push
fnstcw
pop
jb
xor
xchg
inc
mov
adc
iret
ja
outsb
cwtl
inc
sbb
cmp
mov
mov
int3
sti
jne
in
mov
aaa
sbb
sbb
cmc
push
xchg
mov
sub
ret
sbb
imul
loopne
cld
pop
xor
cmpsl
inc
cld
out
mov
insb
cmpsl
rcr
test
jmp
xchg
jmp
mov
or
dec
lcall
iret
out
int3
fidivrs
jmp
push
repz
in
jl
enter
imul
add
add
movsb
adc
and
mov
mov
cmp
popa
pop
sub
fwait
dec
decb
stc
into
jmp
sbb
adc
mov
dec
sub
gs
ret
in
xchg
rorl
xchg
fidivl
movb
fs
or
es
mov
mov
mov
inc
pusha
test
rol
jae
push
pop
stos
es
idiv
sbbb
jge
sahf
icebp
push
pop
mov
imul
push
mov
mov
daa
je
cmp
cmpsl
adc
cltd
ret
les
xor
mov
jbe
loope
pushf
cmpb
sbb
popa
cmp
add
imulb
lds
hlt
and
pop
pop
pop
int
dec
xchg
sahf
and
pop
popa
aaa
pop
jbe,pt
sub
pop
cli
lods
or
decl
out
inc
fs
jmp
push
push
dec
daa
fs
jp
inc
inc
adc
xor
add
dec
xchg
ret
pop
xor
mov
jo
sbb
xchg
mov
enter
add
dec
push
xchg
adc
icebp
jne
addr16
jnp
xchg
fcomps
mov
xchg
xchg
popa
inc
daa
jne
xchg
test
mov
mov
push
fisubrs
ret
cmp
push
sub
add
adc
iret
cmp
jae
std
loopne
fwait
jae
outsb
pop
ret
pop
jns
frstor
adc
sbb
rcrl
outsl
sahf
push
inc
cmp
pop
xchg
mov
es
in
lods
mov
inc
adc
cli
mov
mov
xchg
js
pop
dec
cld
dec
sub
jge
inc
mov
xchg
out
sub
dec
call
sbb
sbb
cmp
sti
mov
imul
inc
lods
push
mov
add
ret
pushf
xchg
lahf
fnstenv
and
cmp
inc
pop
lds
addb
xchg
sub
orb
jle
repnz
mov
and
xchg
dec
pop
sbb
sbb
loope
mov
jns
or
jle
or
out
mov
out
subb
push
sahf
jno
pushf
inc
jbe
fwait
cmp
lea
xchg
das
mov
xor
xchg
orl
mov
xor
inc
pop
mov
dec
mov
mov
add
sub
xor
push
movsl
das
insl
je
add
ja
and
push
std
sbb
in
mov
in
xchg
and
insl
aad
jnp
rol
jmp
jo
int3
jb
push
cmp
adc
arpl
inc
je
cmp
xor
js
sbb
add
sarb
push
pop
lret
repz
mov
imul
dec
cmp
insb
push
in
cs
sbb
xchg
adc
cmc
pop
popf
sub
sbb
or
mov
arpl
mov
and
lock
daa
insl
and
sbb
loop,pt
mov
sub
add
jmp
sbb
cmpsb
sbb
iret
and
orl
fs
mov
clc
push
xor
icebp
cltd
sub
lds
mov
mov
movsb
push
xor
pop
dec
bound
dec
lods
adc
fldenv
fstl
fcomip
xchg
inc
scas
stc
push
lock
add
mov
cwtl
scas
sbb
loop
push
cld
iret
out
jns
aad
or
rcll
jbe
mov
or
loopne
daa
ret
stos
xlat
int3
outsb
fdivrs
out
hlt
or
cmp
in
push
cmpsb
frstor
and
pop
pushf
les
out
jns
lods
add
xor
sbb
dec
adc
sbb
bound
xchg
outsb
nop
cmc
jns
mov
pusha
mov
inc
ret
add
or
outsb
mov
shrb
push
mov
cmp
movsb
jg
out
shlb
inc
jne
sub
mov
xchg
jecxz
loopne
stos
mov
push
adc
and
cmc
jp
hlt
pop
adc
nop
test
push
iret
scas
lods
sbb
jmp
loopne
pop
xor
adc
mov
xchg
ja
mov
mov
mov
sahf
popa
cwtl
fisttpll
ja
or
mov
out
xchg
inc
mov
pushf
pusha
lods
imul
jne
cltd
cmpsl
pop
bound
inc
aas
mov
xlat
and
es
inc
mov
jo
inc
mov
jmp
mov
mov
add
and
xchg
lock
test
dec
xchg
add
es
sub
sbb
stos
enter
push
mov
sbb
inc
pop
sbb
push
jnp
pop
mov
popa
push
orb
imul
xchg
mov
xchg
cmpsb
mov
push
loope
pushw
test
mov
enter
pop
aad
jne
or
mov
or
test
repnz
loope
inc
movsl
push
push
inc
sti
sub
xchg
pop
push
insb
adc
push
rcll
pop
lcall
jae
push
mov
or
xor
jge
fisubrl
mov
jne
fldcw
add
lds
mov
jp
jb
pop
icebp
pop
adc
mov
test
lcall
cmp
test
adc
xchg
les
and
adc
loop
ja
mov
iret
sbb
in
add
lea
movb
shl
xor
das
sbb
or
lock
mov
xchg
pusha
pop
xor
cs
pop
jno
addr16
push
adc
push
xor
mov
adc
jl
call
test
aaa
and
mov
aam
sbbl
pop
inc
int
lods
and
dec
push
lds
dec
subl
cmp
cmp
fdivr
jg
cwtl
int3
push
data16
jnp
sbb
mov
fcmove
cmp
sbb
mov
dec
sub
out
jmp
jl
popf
repnz
mov
ret
mov
jne
je
jb
lock
and
ss
call
stc
sar
std
pop
in
aam
fildll
push
scas
adc
cmp
pop
cmc
sub
push
mov
mov
cmp
decb
adc
pop
mov
mov
incb
push
mov
addr16
mov
pop
xchg
pushl
mov
cltd
test
sub
cmp
inc
test
pop
test
mov
call
pop
scas
jg
popa
push
stc
push
outsb
jle
push
in
ss
xchg
ret
arpl
push
lock
je
pop
stc
mov
cmp
or
mov
test
scas
aad
mov
loope
cmp
hlt
push
pop
in
push
out
cld
in
mov
jo
xor
mov
and
aam
add
xchg
jne
lahf
pop
jno
repnz
adc
pop
sub
movsl
lcall
jle
scas
inc
lahf
sub
shlb
adcb
fwait
push
or
xor
cmp
lcall
cmc
pop
pushf
lea
sub
mov
sub
mov
dec
test
xlat
cmp
sbb
sahf
pop
xor
mov
xchg
adc
sbb
cmp
outsb
mov
test
aam
icebp
stos
sbb
xor
and
jp
dec
loope
movsl
ret
pushf
inc
mov
lcall
xor
jae
adc
mov
sbb
sbb
jns
xchg
ja
xor
out
pop
xchg
mov
jns
ret
imul
cmpsb
ret
jge
push
pop
adc
xor
xor
sbb
leave
idivb
fdivs
inc
aas
push
int
add
clc
fdivrp
outsb
push
jp
pop
lods
sbbl
jns
nop
rolb
and
sarl
jecxz
fcoms
aad
mov
loopne
mov
test
cmp
cmp
scas
out
int
test
bound
imul
cmc
mov
xlat
jg
es
mov
mov
jae
sub
mov
pop
dec
mov
or
and
jb
xlat
push
mov
les
jl
icebp
mov
ds
cmp
in
iret
mov
fdivrl
addr16
data16
jb
pop
jae
shr
ss
lods
push
xchg
pop
loope
jnp
loope
push
testl
out
loopne
fbld
mov
cmc
or
adc
pop
push
mov
fwait
push
cwtl
xchg
jns
push
jg
push
sbb
mov
xchg
mov
gs
out
mov
sub
in
pop
sbb
pop
mov
ss
iret
out
adc
pop
in
mov
mov
jns
fmulp
and
call
and
cmpsb
je
lea
repnz
aad
sbb
mov
jge
aas
push
in
nop
pop
sub
add
mov
fstps
and
cs
mov
mov
push
pop
inc
insl
add
jge
sbb
jae
movsb
ljmp
int3
lock
pop
int
scas
cltd
pop
jne
andl
aaa
test
adc
push
scas
and
add
mov
aam
mull
cmp
loopne
lret
xor
stc
pop
push
adc
loope
icebp
in
xor
xchg
or
cmp
cs
jbe
es
pop
cmp
je
stos
in
int
inc
lea
fadd
xor
cltd
int
mov
push
insb
js
adc
inc
add
cmp
add
out
ja
or
xor
jp
loop
scas
repnz
and
mov
adc
sbb
insb
repnz
fnstenv
inc
inc
jne
fisubrs
clc
xor
movsl
xchg
daa
ret
sub
sub
cmp
ja
inc
jg
hlt
dec
add
mov
and
jle
lock
adcb
jg
xchg
pop
ds
xor
push
sti
insl
jecxz
jo
mov
hlt
ret
push
movsb
inc
iret
sub
jle
repnz
or
push
jbe
jns
sub
jge
cmp
leave
ds
stos
pop
inc
and
cltd
test
je
adc
mov
push
cmpsl
insb
mov
mov
cmp
jnp
ja
inc
xchg
rcrb
add
jbe
pop
push
mov
jo
xor
pop
xor
rcrb
cld
cmp
iret
pop
aas
mov
nop
push
jge
xchg
arpl
stos
les
ret
dec
mov
rcrl
bound
xchg
addr16
mov
xor
ret
mov
cs
jae
pushl
outsl
lcall
mov
add
and
xlat
push
aaa
xor
or
jle
pop
or
sti
jg
int
and
mov
dec
movsl
aad
push
fildll
or
hlt
subb
mov
mov
push
sbb
sub
adc
out
imul
mov
and
adc
lods
or
pop
sbb
aam
sbb
cltd
ja
dec
cmp
mov
je
dec
push
subl
push
pop
xchg
lahf
xchg
push
insb
hlt
in
dec
lcall
jle
mov
cmp
aas
icebp
mov
push
test
cwtl
fcoms
mov
les
lds
orb
xor
mov
pushf
test
mov
mov
sub
insl
mov
mov
sub
add
dec
arpl
sub
fs
mov
cwtl
test
adc
test
outsl
je
sarl
xchg
popf
mov
pop
into
pop
sub
lds
je
push
int
jne
jg
mov
insl
xchg
xor
pop
inc
mov
fdivrp
stos
sahf
jnp
andl
shl
aam
mov
fldenv
push
out
inc
xchg
pop
pop
scas
leave
cmp
addr16
inc
cmp
lods
andb
andb
sub
mov
jge
mov
and
push
sbb
cmp
int
push
or
lods
stc
pop
ficoms
pushf
cmpxchg
add
cmpsb
push
mov
testb
push
sbb
int3
inc
xchg
mov
outsl
adc
pop
push
arpl
mov
sub
pinsrw
outsb
mov
popf
test
sti
inc
cld
dec
call
stos
out
mov
das
fsubr
hlt
fxch
leave
push
pushf
jmp
pop
ficompl
mov
cmc
mov
push
pop
lds
xchg
test
nop
or
lods
pop
in
dec
movsl
in
sbb
adc
iret
je
mov
rorl
ret
xor
ret
ja
sbb
subb
lret
imul
leave
shr
sub
std
push
cmc
pushf
push
rcrl
pop
lods
cltd
pmullw
xor
cmp
data16
adc
and
invd
xchg
push
sub
xchg
aaa
into
xacquire
jmp
add
mov
std
pop
fdiv
pop
pop
jle
les
adc
lahf
lds
push
out
xor
sbb
btc
mov
xlat
out
push
es
enter
cmc
in
ljmp
add
jl
mov
int
and
fidivs
lcall
xchg
dec
ret
jl
pop
loop
xchg
push
mov
fwait
popa
in
fwait
jmp
pop
adc
imul
andl
lahf
sub
adcb
or
ds
jl
add
cli
in
mov
fimuls
push
mov
pop
sbb
xchg
iret
mov
add
pop
and
pop
jnp
ret
sub
movsl
repnz
dec
add
or
jns
vmovntps
testb
sub
lcall
mov
stc
cmp
fcompl
push
hlt
sahf
and
fmull
push
xchg
inc
jl
or
jno
add
dec
jge
jp,pn
fisubl
imul
inc
ret
ss
mov
fmull
sub
jne
sti
ljmp
ljmp
ds
pop
shll
loopne
stos
sbb
xchg
and
mov
outsl
pop
and
adc
jb
pop
shll
and
push
data16
jne
insl
aaa
inc
cwtl
mov
mov
inc
adc
mov
push
cs
lods
cmp
add
cwtl
push
jecxz
mov
out
mov
xor
movsb
push
pop
push
xchg
inc
dec
push
jle
or
imul
pop
jb
and
or
ret
fwait
dec
pop
ss
sub
mov
in
cmp
push
les
test
jp
in
sbb
push
pop
adcl
or
lret
sahf
pop
add
pop
jecxz
mov
icebp
ja
cmp
pop
mov
shrb
cld
scas
loopne
test
fsubrs
xor
mov
dec
in
mov
inc
stc
jle
push
jno
rcrl
out
out
inc
inc
mov
sub
dec
pop
mov
in
icebp
fsubrs
in
jae
push
sbb
out
jg
jnp
xor
adc
push
inc
shlb
fcoml
adc
pop
jae
xor
cmp
shll
int3
jnp
jg
addb
out
push
jmp
scas
mulb
int3
iret
enter
and
mov
fidivs
das
push
test
lods
xor
inc
cmp
popl
sub
xchg
jmp
movsl
rclb
gs
push
cld
outsb
jae
hlt
push
fnstsw
test
dec
jp
rclb
mov
pop
mov
testl
or
mov
aas
pusha
or
in
call
sub
inc
rclb
das
dec
subl
mov
adc
das
lea
test
adc
int3
loope
movsl
pop
inc
sbb
int
sub
mov
imul
adc
test
pop
and
mov
jne
mov
inc
xlat
pusha
mov
or
xchg
add
and
lock
stos
outsl
data16
mov
movsb
js
cmpsl
and
int
adcb
cmpsl
lcall
les
dec
mov
stc
or
lcall
jg
pop
inc
rorb
push
mov
fimuls
sbb
dec
arpl
popa
imul
pop
loope
out
push
xor
loopne
jbe
hlt
cmc
push
data16
jge
popf
les
or
dec
jne
lcall
xchg
pop
in
pop
setp
mov
or
inc
mull
push
dec
cmc
pop
daa
sub
push
lods
pop
cmp
jb
cmp
dec
xchg
add
sti
add
pushf
testl
push
and
bound
out
enter
pop
outsb
stc
sub
pop
mov
pop
mov
xchg
out
das
xor
in
mov
cs
jo
xlat
icebp
and
and
cmp
nop
addr16
pop
fdivl
fcoms
rolb
jnp
mov
fldlg2
mov
out
mov
fwait
cmp
fisubl
push
jp
inc
adc
lock
lds
cmc
shr
mov
jns
pop
or
call
jno
into
sub
xchg
push
and
inc
xchg
inc
in
xchg
popa
mov
sbb
mov
dec
int3
adc
pushf
pop
call
lcall
ss
int
cmp
lock
es
enter
cld
mov
push
sbb
ja
es
push
daa
repz
push
repnz
ljmp
pop
ficoml
ds
shrl
mov
cmpb
test
and
repnz
jo
stc
sub
into
pop
jo
mov
inc
fisttpl
dec
or
pop
cmp
cmp
js
mov
push
inc
push
cmp
lcall
and
rcll
sarb
movl
cmpsb
add
mov
je
sub
aam
movsb
sbb
gs
in
and
aas
jae
aad
cmpsl
adc
jb
in
cmp
test
std
js
xor
mov
xor
pop
xor
jmp
lret
lret
out
enter
inc
adc
call
ss
cmp
pop
jb
dec
dec
daa
or
sub
mov
jg
movsl
jns
clc
cs
mov
arpl
hlt
push
fidivl
cmpsb
movsb
hlt
sbb
jbe
fdivrl
iret
int3
movsb
jns
mov
insb
sub
repnz
and
fmuls
cld
jmp
mov
test
in
outsl
lds
jae
lock
mov
adc
or
cs
enter
pop
adc
bound
enter
jbe
push
out
movsb
stos
stos
push
cs
inc
sbb
xchg
arpl
pushf
lea
stos
jecxz
sub
in
lret
insb
mov
aam
faddl
loopne
dec
aad
xor
jno
sbb
dec
cli
push
mov
xchg
dec
aam
mov
inc
pushf
dec
mov
pop
or
lcall
iret
ret
xchg
xor
and
dec
jae
repz
mov
std
add
cmpsb
pop
sub
daa
ret
lcall
popa
jmp
out
outsl
mov
jle
pop
sbb
call
enter
xor
stos
cli
push
mov
out
sub
or
jo
push
into
mov
fdivs
aas
sbb
repz
xor
int3
cmp
mov
andl
sub
je
imul
aam
mov
sbb
lahf
pop
cld
lock
inc
ficoms
aad
iret
je
rol
push
jmp
and
mov
outsl
dec
mov
aam
pop
xor
and
out
cmpsl
std
xchg
orb
adc
push
or
fsubs
pop
add
push
imul
inc
stc
or
testb
lds
aam
rol
xchg
push
mov
cmp
jl
stos
mov
xchg
rcll
xor
stos
and
vmovmskpd
or
dec
and
add
pushf
or
mov
movsb
outsb
ja
cld
mov
mov
popa
mov
pop
inc
testb
inc
mov
sbb
aaa
cwtl
xchg
pop
push
pop
pusha
xchg
xchg
jno
mov
xor
push
jns
inc
loop
testb
cmp
jmp
push
adc
sub
xchg
icebp
cmp
cmc
push
cmp
in
jmp
push
sbb
jbe
push
gs
push
cli
ljmp
adc
popa
jae
rclb
arpl
mov
mulb
pop
xchg
bound
push
nop
lret
push
push
leave
xchg
or
xor
jge
xchg
jmp
mov
ror
ds
lret
add
inc
mov
add
and
xchg
add
das
pop
or
xor
mov
mov
arpl
pop
popa
int
mov
icebp
cltd
ss
in
clc
cmp
pop
mov
adc
cmp
sbb
cmp
rclb
scas
push
xchg
xlat
dec
mov
pop
push
movaps
mov
adc
shlb
sub
dec
mov
stos
jns
es
pop
shl
mov
sahf
orb
xchg
pop
lahf
push
push
cmpsl
mov
adc
cwtl
dec
out
or
clc
push
cmc
imul
mov
xlat
mov
mov
add
dec
gs
mov
add
sbb
xchg
pop
addr16
test
mov
adc
fcompl
xor
das
outsb
fnstcw
rcrb
mov
out
sub
dec
add
in
and
sahf
xchg
test
shrb
out
test
andb
pop
mov
adc
mov
mov
shlb
aam
xor
cmp
sarb
xor
xchg
adc
es
mov
pop
jnp
dec
imul
in
lods
jns
jo
and
pop
sbb
sub
push
cs
mov
test
pop
xor
iret
sub
mov
sbb
test
mov
mov
pop
pop
pop
inc
gs
push
stos
test
mov
or
xchg
or
das
subb
push
pop
subl
jle
sub
sbb
gs
fwait
sub
lds
jl
inc
out
fildll
xor
stc
jb
ljmp
addb
or
cs
outsb
mov
jle
xor
aad
out
in
and
adcb
adc
cld
sarl
mov
push
adc
ret
jl
sbb
fwait
sub
xchg
popa
add
nop
fidivrs
and
ret
pop
mov
jle
pop
mov
add
cmp
adc
jecxz
add
push
mov
int
add
mov
jno
jmp
xchg
dec
sub
cmpsl
loop
pop
mov
pushf
pushf
ss
jb
test
add
cmpsl
or
lods
ja
sbb
sbb
inc
arpl
negb
in
out
mov
jecxz
and
jecxz
call
adc
pop
mov
add
cmc
hlt
cld
xchg
aad
shrl
or
je
sahf
rep
negl
ds
jl
enter
stos
jecxz
xor
into
out
push
loopne
pop
sahf
notb
ffree
fdivrl
aas
stos
into
cmpl
insl
mov
add
pop
jae
aas
mov
cmc
outsl
sar
push
imul
int
add
lret
mov
fisubs
idivb
lcall
dec
test
inc
out
or
out
dec
adcb
jecxz
divb
in
shlb
xor
xor
pop
das
pop
sahf
shl
push
xchg
es
pop
xor
fwait
mov
mov
adc
rclb
mov
mov
ret
inc
xor
sbb
or
mov
out
dec
inc
repnz
or
inc
fwait
adc
test
fucomp
test
inc
cmp
addb
sbb
or
gs
notb
ret
adc
cs
and
adc
in
push
dec
sub
rcrb
or
adcl
clc
xchg
mov
xchg
xor
sti
lods
pop
and
rolb
sub
mov
cmpsl
sub
push
pop
lods
je
and
lret
jmp
leave
scas
inc
push
push
push
stos
out
dec
pop
pop
mov
cmp
fmuls
cmpl
xchg
fwait
jg
or
in
test
iret
and
jns
ficompl
dec
push
mov
outsb
pop
test
inc
es
add
mov
cmp
lea
leave
xor
int
pop
pop
cmp
mov
inc
xor
mov
fwait
push
push
mov
mov
dec
ds
xchg
insl
imul
push
jb
out
jmp
sbb
jbe
lods
clc
or
push
mov
popf
sub
or
xorps
xchg
lea
shrb
mov
mov
pop
add
adc
xchg
enter
bound
sub
pop
add
out
in
nop
jl
sbb
test
push
aam
pop
xchg
jae
inc
xchg
mov
imul
xor
or
push
mov
jb
es
pop
mov
cmp
inc
push
sub
cwtl
dec
or
adc
jle
dec
adc
push
les
orl
inc
fildll
jl
jmp
imull
mov
xlat
pop
adc
subl
jbe
ficoml
xchg
std
mov
or
rorb
les
xor
lds
sbbl
push
ficoms
xchg
push
bound
lods
shl
mov
inc
aaa
lret
mov
aaa
pop
jl
loopne
xchg
xor
jae
pusha
rol
insl
mov
lret
and
sbb
jecxz
push
mov
mov
inc
mov
add
insl
adc
inc
sbb
dec
push
dec
cmpsb
shl
add
push
inc
addl
add
in
lds
xchg
cmp
mov
or
outsl
pusha
ficoms
jle
pop
mov
test
out
push
popa
mov
pop
mov
out
pop
xchg
cmp
jmp
addr16
test
stos
ljmp
iret
or
lods
das
mov
clc
cli
push
fsubrs
xor
jae
out
test
mov
mov
jnp
rol
add
jo
dec
aad
dec
xor
lock
mov
pop
aas
pop
jae
ds
sub
cmp
mov
cmp
loopne
xchg
push
cmp
in
les
icebp
mov
mov
jmp
xchg
in
dec
call
jns
mov
cmp
decl
or
lods
lret
int
sub
jmp
hlt
push
cs
in
rcrb
roll
stos
mov
jne
cmp
mov
rolb
xchg
insb
stc
leave
adc
add
xlat
adc
fiaddl
mov
je
in
dec
scas
xor
imul
aas
sbb
dec
fbstp
xor
and
in
test
stos
xchg
cmpsl
pusha
pop
ret
clc
pop
int3
je
mov
inc
push
insb
adc
sub
roll
adcl
push
xchg
mov
mov
fldt
inc
pop
and
fstpl
iret
cmpsl
pop
xor
stos
jg
mov
stos
xchg
in
pop
dec
mov
push
cli
iret
ds
xchg
sub
popa
mov
sub
cmp
mov
cmp
xchg
pop
adc
ss
jne
repnz
popf
sub
ficoms
xlat
and
psrlq
cmp
arpl
pop
xor
adcl
and
and
fwait
insl
push
sub
das
xor
mov
push
adc
jp
imul
aas
out
ljmp
outsb
push
inc
ss
push
lret
pushf
stos
push
or
ljmp
cmpsb
aam
sub
test
ds
mov
movb
lret
movsb
imul
pop
adc
mov
pop
add
sub
and
add
dec
test
sub
push
pop
in
repz
cmp
push
inc
mov
push
mov
adc
adc
xor
add
mov
mov
push
fcmovnb
cmp
sub
pusha
fwait
sahf
xchg
mov
pop
popa
mov
pop
fs
leave
push
xchg
or
lock
cli
sub
xchg
adc
sbb
and
movsb
jnp
lcall
xor
xor
or
int
inc
xchg
ret
rclb
hlt
std
mov
mov
jb
inc
fstpl
movsb
jp
push
xchg
inc
test
jae
into
xchg
sbb
mov
aam
pushf
xor
inc
push
push
imul
ljmp
insl
call
mov
push
aad
push
sbb
movsw
xchg
inc
rcrl
popa
mov
jmp
push
cmp
clc
stos
pusha
xor
sub
dec
sbb
sub
xchg
inc
dec
outsl
divb
repnz
lock
call
je
imul
mov
loope
jecxz
icebp
rorl
dec
int3
fldenv
jo
push
push
jge
dec
ljmp
and
aam
pop
cmp
xor
pop
loope
in
pop
and
jo
jle
repnz
fwait
add
pop
push
scas
aas
std
testl
lcall
loop
sar
inc
jnp
psubusb
push
dec
inc
push
movsb
mov
hlt
jno
popf
cli
mov
adc
les
or
sti
xor
fwait
mov
cmp
shl
jno
xor
jl
into
sbb
mov
and
movsb
mov
movsl
out
mov
popa
mov
dec
jnp
pmaxub
dec
mov
mov
adc
test
clc
notl
xor
popf
pop
sahf
jg
out
lock
inc
movd
or
pop
sbb
mov
jp
ret
xor
mov
test
std
aad
xchg
xor
dec
jae
lods
or
mov
mov
imul
stos
in
std
inc
insl
push
adc
call
and
icebp
jne
stc
ss
fwait
jno
arpl
pop
shl
imul
and
dec
add
push
push
shll
inc
inc
lret
pop
mov
insl
aad
insb
sahf
stos
push
push
add
xor
ja
cmpsb
enter
mov
pop
or
ret
clc
sub
jbe
add
pop
daa
mov
mov
or
roll
jb
loopne
mov
xchg
xlat
loope
sub
xchg
cltd
addr16
sbb
in
jmp
ljmp
mov
out
dec
data16
scas
stc
adc
add
jno
inc
test
xchg
xchg
mov
call
inc
mov
inc
jmp
jnp
addr16
inc
fisttpll
das
jp
xor
popa
outsb
insl
or
mov
filds
scas
in
clc
mov
adc
inc
stc
cs
xor
or
loop
jg
flds
push
pop
dec
int3
fwait
mov
jl
mov
mov
jno
scas
lret
out
push
and
xor
jo
mov
lcall
ja
lods
scas
push
adc
cli
in
frstor
out
movsl
cmp
jb
and
mov
sub
cli
pop
push
stos
sbb
mov
cs
jge
push
mov
push
dec
scas
lock
sub
push
mov
dec
jl
testl
nop
fwait
or
xchg
pop
lock
mov
mov
adc
push
movsb
subl
cmc
lcall
cld
es
dec
insl
addr16
pop
outsl
cmpsl
or
mov
fmull
mov
test
sbb
pop
mov
test
fldt
cmp
mov
in
jg
bound
clc
or
xchg
mov
out
pop
ja
cltd
adc
imul
mov
call
sub
cmp
mov
fisubrl
add
xchg
bound
pop
jns
jne
dec
cmp
mov
in
dec
test
aas
push
mov
in
push
adc
outsl
jl
adc
sbb
loop
sbb
sahf
cmpsb
ds
mov
mov
into
hlt
jmp
lret
andb
xchg
lret
es
sub
cmp
outsb
scas
and
out
xchg
dec
cmc
pop
pop
jge
cli
enter
and
xor
xchg
dec
aad
jp
jae
jno
test
adcb
xlat
sbb
aad
sbb
mov
jmp
stc
mov
inc
push
decl
xchg
out
loopne
mov
psraw
lret
and
cmpb
jp
es
xor
or
in
dec
out
push
ret
sti
fcompl
pushf
mov
pop
cltd
aam
lcall
sbb
data16
mov
incb
test
or
sbbl
lahf
mov
test
popa
inc
sub
pop
add
mov
lods
cmp
outsb
xchg
pop
or
pop
jge
ja
mov
jp
cmpsb
mov
jbe
icebp
jmp
mov
frstor
and
cltd
arpl
icebp
cli
je
cld
aaa
push
jb
leave
loop
xchg
cltd
lods
nop
cmp
je
fmuls
and
or
gs
mov
sbb
js
mov
outsl
fsubl
lock
xor
sti
imul
push
ljmp
jmp
shlb
aam
add
les
sub
mov
subps
add
push
dec
adc
jbe
add
xor
int
dec
in
scas
jmp
int
sub
mov
popa
push
mov
mov
and
jb
xchg
inc
insl
sub
mov
mov
bound
push
loopne
xchg
rolb
jne
adc
outsb
je
fwait
aam
pop
aas
ficoms
mov
jecxz
sahf
xchg
ds
sbb
sbb
jle
add
fidivrs
jb
jle
mov
nop
mov
lods
movsl
xor
mov
in
roll
jae
mov
jne
cmp
cwtl
out
or
test
stos
cmp
les
mov
insb
xchg
jecxz
add
ficompl
adc
cwtl
ret
or
rcrl
mov
sub
lock
shl
push
sahf
sti
imul
test
in
sub
stos
cmp
lcall
dec
inc
fldl
outsl
mov
pinsrw
sub
xlat
fisubrs
or
arpl
das
mov
mov
sub
addl
movsl
or
mov
in
mov
fidivrs
and
les
mov
lret
enter
xchg
out
jnp
daa
imul
jge
es
das
lahf
daa
mov
jns
ret
orb
rol
push
fs
addr16
lret
rcll
mull
icebp
flds
outsb
sub
adc
inc
std
ret
adc
fwait
push
push
xchg
mov
push
pop
push
es
test
or
lret
xor
push
xchg
push
sub
mov
les
roll
inc
pop
cmp
movsl
and
pop
orl
scas
or
fidivl
pop
mov
lret
out
insl
outsb
or
faddl
push
fiadds
loopne
mov
or
pop
cmpsl
or
push
popa
int3
cmc
jno
jecxz
leave
xchg
dec
cmp
jg
aad
mov
fcmovnu
jae
mov
inc
mov
inc
add
inc
adc
aad
mov
scas
imul
enter
xor
icebp
mov
notb
and
push
push
mov
jnp
leave
mov
mov
fistpl
scas
and
outsb
loop
and
cld
addr16
je
cmp
aaa
mov
jg
cmc
sti
sbb
insb
popfw
lock
outsl
and
push
lods
jmp
mulb
cli
pop
xlat
cmpsb
test
mov
jp
sahf
xchg
xchg
les
jno
fs
mov
xor
mov
mov
dec
mov
or
sbb
add
lahf
lock
inc
popa
gs
bound
outsb
pop
rcl
adc
and
aam
das
mull
sbb
popf
and
mov
mov
xor
and
dec
cmc
jbe
jge
cli
in
xchg
int3
sub
lods
mov
jnp
je
push
mov
sbb
mov
roll
xorb
and
xor
imul
filds
mov
push
js
xchg
jbe
sbb
daa
mov
addb
mull
lret
scas
or
mov
dec
inc
add
pop
cmpsl
test
sti
inc
push
sbb
or
xlat
dec
cmp
mov
nop
sbb
sub
jge
mov
test
mov
cmpsl
sub
je
out
loopne
mov
mov
cmpb
xchg
das
leave
add
xor
inc
jg
pushf
or
lret
jns
mov
push
int3
sub
sbb
or
push
sub
or
stos
les
sub
cmp
and
lods
sahf
mov
jnp
hlt
cmpsl
das
sub
lret
fadd
dec
lods
xchg
das
daa
lods
lret
or
loope
jmp
das
adc
scas
fistpll
sbb
push
roll
mov
mov
lock
inc
and
dec
iret
mov
sbb
add
push
frstor
das
add
movsl
insb
xor
jmp
shlb
mov
or
mov
jno
std
rcrb
jno
mov
test
test
xlat
sbb
xchg
push
mov
jbe
enter
shr
inc
aas
xor
xor
test
sub
add
arpl
cmp
mov
inc
mov
jnp
pushf
xchg
mov
popf
mov
cld
mov
inc
leave
mov
jno
ja
mov
fistl
loopne
mov
pop
icebp
outsl
xchg
scas
or
loope
ja
pop
push
jno
ss
in
enter
lock
dec
pop
sub
cmp
leave
mov
xchg
mov
add
pusha
mov
insb
sbb
add
add
add
jp
rcll
imul
mov
jecxz
mov
or
in
jo
mov
aaa
loop
xor
int
xchg
sbb
mov
dec
add
and
xlat
lock
mov
dec
aaa
outsb
add
adc
cmp
popf
rcll
cmpsb
xorb
push
nop
pop
xchg
jecxz
jge
xor
mov
lret
test
in
addb
js
mov
and
scas
lret
or
mov
in
shrb
daa
mov
mov
xlat
nop
ret
aad
outsb
sbb
mov
out
movlps
or
test
nop
loope
xchg
lds
imul
jns
popf
sub
std
and
negb
out
or
or
mov
mov
xor
pop
subl
and
xchg
lcall
sub
pop
jae
rorb
pop
sub
xor
push
inc
lahf
ret
mov
lea
lahf
test
jge
sub
popa
scas
and
dec
xor
mov
negb
stos
mov
inc
sbb
jle
mov
popf
mov
out
repnz
out
fidivl
jg
lcall
mov
ret
lahf
mov
stos
popf
in
xchg
cmp
sbb
stc
sub
testb
and
pushf
mov
adcb
lahf
xchg
mov
add
in
js
lea
jge
lds
sbbb
dec
fsubrp
push
mov
and
sti
loop
es
loopne
dec
cli
int
rorb
cmp
aam
ljmp
inc
lcall
mov
mov
mov
in
out
mov
test
mov
or
inc
testb
or
cmp
in
mov
add
fwait
inc
in
adc
pop
negb
out
push
in
mov
sbbb
push
daa
sub
insl
sbb
jne
xchg
jmp
jns
fistpll
popf
imul
add
out
sub
loope
lret
pop
pop
rcll
pop
repz
cmpsb
push
adc
movsl
mov
push
clc
xlat
stos
out
or
lock
sbb
push
dec
adc
insl
lahf
or
test
lcall
push
jg
xchg
mov
pop
call
fnsave
ror
xor
es
aaa
les
sub
push
test
inc
xchg
mov
jne
push
out
ret
imul
test
add
mov
cli
rclb
in
inc
mov
test
andb
enter
cmp
arpl
clc
std
outsl
mov
push
insl
cmp
fistpll
jl
push
and
xchg
dec
out
pop
icebp
mov
imulb
sub
inc
repz
fwait
aad
out
stc
mov
pop
cmp
pop
sbb
add
shr
in
inc
dec
not
fcomip
lods
mov
add
lock
cmp
mov
mov
add
jecxz
lods
pop
popl
xchg
add
cwtl
inc
push
jns
loope
mov
arpl
inc
dec
cwtl
jecxz
xchg
dec
mov
test
push
cmp
cmpsl
out
popf
mov
out
pop
mov
mov
jl
aaa
outsl
cs
ja
gs
push
ret
es
mov
imul
ljmp
jae
repz
inc
sbb
out
out
and
sti
sbb
ss
pop
js
nop
rcrl
jo
or
sub
ficoml
pop
sub
test
pop
cltd
jo
stos
sti
in
pop
xchg
or
pop
mov
pop
fcomps
mov
pop
pushw
adc
sbb
aaa
in
sbb
popf
xchg
cmc
add
sub
mov
movsl
leave
mov
orl
xchg
inc
stc
or
mov
cmp
cmp
mov
xchg
add
push
in
xor
adc
leave
leave
inc
mov
push
std
lock
flds
xchg
adc
out
add
dec
sub
mov
add
data16
dec
adc
fcoml
call
aaa
adc
push
loop
repnz
sti
shlb
aam
loop
push
jl
mov
repz
fidivs
popf
pop
or
stc
clc
xchg
pop
jb
stos
lods
jnp
std
jp
mov
rcll
jnp
cmc
sub
xchg
test
call
loope
or
inc
imull
push
mov
aad
jmp
ss
addr16
ds
outsl
ss
sub
dec
xor
dec
add
mov
and
fwait
mov
mov
mov
data16
dec
mov
mov
fs
add
stc
test
in
imul
mov
push
sub
or
mov
fisubs
cmp
or
xlat
stc
test
ss
outsb
xor
push
loope
mov
stos
push
add
int3
pop
popf
cmp
lret
or
push
testb
jno
js
inc
bnd
jbe
clc
rorl
daa
outsb
insb
int
ss
cmpsb
mov
pop
sub
out
mov
xor
movsb
sbb
sbb
or
or
aaa
push
pop
push
lret
inc
mov
pop
dec
sub
daa
orl
push
xchg
pop
add
sarb
bnd
rcll
shrl
ljmp
repz
cmp
stc
dec
sub
jl
ljmp
add
mov
mov
jno
fcompl
bound
test
idivl
sub
and
dec
add
cwtl
jl
xchg
out
mov
lret
cmp
loope
dec
scas
or
ret
dec
sbb
ds
clc
cli
imul
jmp
stos
arpl
in
sahf
rcrl
pushf
sub
mov
insl
lahf
add
cld
lods
lahf
cmp
mov
mov
mov
adc
dec
mov
stos
je
lock
std
pop
lret
push
sbb
pusha
or
cmc
inc
jge
cmp
imul
jo
inc
jl
shll
fwait
push
repz
add
mov
add
stc
lods
orb
add
fsubrl
mov
adc
rorb
loop
xchg
out
andl
mov
es
stc
sbb
movsb
in
movsl
or
dec
mov
dec
shlb
pop
push
aaa
jmp
flds
jmp
or
or
dec
cmc
push
push
mov
lods
inc
xor
in
test
js
fwait
movsl
and
fisttpll
pop
aaa
subb
mov
ror
add
gs
mov
rcl
mov
nop
stc
mov
cmpsl
sub
mov
rolb
cwtl
xlat
mov
testl
jle
add
pop
int
xlat
fstl
aaa
iret
lods
mov
inc
pop
testl
mov
xchg
mov
leave
cmp
lea
lret
repz
inc
out
mov
xchg
xchg
fnstenv
push
mov
jmp
mov
out
leave
jp
ret
in
sbb
aad
dec
jg
inc
shrb
dec
stc
shlb
mov
mov
sti
pushf
adc
sub
mov
insl
loop
mov
mov
pop
mov
in
movb
fists
leave
aas
movsl
mov
inc
test
les
xchg
xchg
or
mov
xor
jle
mov
sti
fmulp
cmp
cmp
pop
mov
imul
sub
jne
mov
loope
pop
mov
or
inc
jge
sbb
pop
pop
xlat
lods
test
lret
xchg
out
sti
mov
jl
push
and
jbe
insl
daa
scas
mov
dec
cwtl
mov
rcrb
jb
sahf
mov
push
or
push
in
les
push
jb
sbb
xchg
jno
lcall
jmp
adc
in
es
rcrl
fwait
das
stc
pusha
shrb
pop
jb
or
mov
es
sub
adc
sbb
mov
cmp
jg
fwait
arpl
cmp
bnd
call
mov
add
out
jno
xchg
xchg
jo
mov
push
inc
adc
cmp
push
sahf
es
push
mov
lret
adc
inc
or
das
mov
jle
insb
mov
stos
add
xchg
fbld
out
roll
in
push
rcll
jp
inc
popf
insl
dec
or
mov
out
insl
xlat
pop
fldt
mov
lret
loop
mov
mov
lods
das
sub
hlt
pop
xor
push
shrl
sub
mov
jmp
sbb
mov
adc
inc
sub
xor
fwait
aad
pop
clc
dec
in
pop
cmp
mov
nop
repz
loope
in
mov
xchg
mov
mov
lcall
or
mov
sti
sbb
add
fs
aam
je
inc
in
and
lods
mov
aas
stos
xchg
xchg
mov
call
js
and
fisubs
cmp
push
mov
loop
pop
and
mov
and
and
in
lock
jo
movsb
adc
mov
sbb
sub
dec
jmp
das
out
xchg
shrl
dec
inc
push
dec
push
cmp
push
pusha
je
push
add
mov
adc
es
jg
in
adcl
inc
int3
sub
pop
push
test
pop
and
into
out
xchg
in
inc
test
lods
push
pop
fmul
mov
inc
add
repz
mov
sbb
js
pop
js
sbbb
jl
fistpll
jmp
movsb
inc
in
int3
notb
pop
pop
pop
and
add
or
and
mov
mov
pop
out
sub
cwtl
inc
sub
cmp
mul
lock
outsb
jno
sbb
lock
adc
or
or
sub
pusha
mov
mov
in
lahf
xor
push
lea
das
push
and
aam
xchg
bnd
fwait
and
sub
decl
in
call
pop
sar
sbb
insb
jl
mov
in
imul
fld
dec
add
stc
mov
push
lods
scas
shl
ret
xchg
insl
xchg
leave
fstpt
movsb
stos
ffreep
xor
mov
xchg
cmp
jnp
xor
add
jg
daa
insb
push
xchg
outsl
out
push
ret
aam
xor
enter
outsb
inc
push
pop
vpermil2ps
loop
daa
imul
adc
int3
fisubs
cmp
add
fs
xlat
stos
lret
cmp
xchg
nop
pop
cmpsb
add
inc
push
popf
in
and
mov
dec
call
ret
outsl
inc
test
sub
and
faddl
insb
popa
rclb
mov
inc
test
out
dec
notl
mov
fistpl
sbb
repnz
ljmp
cli
gs
jle
test
xchg
repz
sbb
test
pop
out
push
jmp
mov
xorl
mov
or
movsb
push
call
sub
jne
testl
adc
mov
out
shrl
mov
clc
jae
cs
cltd
sahf
int
xor
adc
xor
fwait
orl
adc
ss
addl
xor
loop
mov
pop
dec
ljmp
divb
inc
lds
inc
call
or
loop
psrad
add
cmp
push
test
es
add
mov
jns
push
lret
es
mov
mov
cli
outsb
xor
stc
fucomp
fwait
inc
into
shr
popf
inc
arpl
cmp
inc
iret
bswap
or
inc
mov
int
sahf
leave
push
jb
xchg
dec
push
out
xchg
fwait
or
cmp
mov
das
lret
aaa
dec
and
roll
sub
add
cld
cmc
sub
outsl
xor
jne
cmp
mov
mov
testl
sub
inc
rcl
out
sub
mov
fs
push
xor
mov
out
xlat
push
lods
call
xchg
bound
stos
push
adc
das
ds
sub
fwait
pop
mov
xchg
into
inc
jne
add
das
adc
pop
mov
pop
jmp
adc
push
popa
lret
outsb
xchg
es
cmpb
sbb
mov
sbb
add
sbb
sub
clc
inc
fwait
clc
and
push
gs
daa
push
mov
jp
sub
push
push
adc
imul
orb
lds
pop
xorb
and
inc
pop
cld
loopne
or
fwait
cmc
mov
in
mov
push
dec
jecxz
inc
push
jl
loope
or
jmp
cli
xor
addl
mov
xchg
xor
les
and
pop
scas
sar
xor
stos
mov
stos
leave
and
stc
adc
ret
inc
dec
cmp
jnp
hlt
inc
jnp
popa
fimull
or
lds
divps
lods
dec
test
aaa
add
push
or
out
adc
aaa
jg
jnp
jl
insb
in
inc
cwtl
jl
sar
xchg
push
jp
inc
repnz
das
cmp
lds
dec
lock
mov
stc
faddl
pxor
movsl
pop
jle
repnz
adc
popa
loopne
sbb
sahf
ret
add
mov
out
or
in
out
ret
out
adc
xchg
in
je
jne
clc
mov
xchg
push
fsubrl
push
imul
pop
nop
add
xchg
pop
and
jl
xlat
lret
jnp
mov
push
fnsave
sti
lds
into
adc
push
cmpsb
adc
sbb
pushf
xchg
mov
jae
sbb
jnp
jae
sahf
repnz
mov
xchg
fidivl
js
decb
shr
mov
dec
pop
in
mov
outsb
cld
int
lret
adc
lahf
popa
sahf
popf
mov
pop
mov
jge
cmp
jecxz
mov
jno
into
mov
push
adc
repnz
cld
or
cmp
push
stc
cmp
testl
sub
mov
pushf
mov
push
loop
dec
adc
cmpsb
sbb
or
mov
hlt
push
jmp
xor
jecxz
clc
adc
pop
push
les
adc
and
rol
cmpsl
inc
fsubl
jnp
push
mov
arpl
test
hlt
int3
mov
adc
mov
xor
mov
inc
inc
xchg
pop
sti
dec
dec
push
nop
mov
dec
ljmp
pop
inc
lea
jns
xchg
shl
xchg
dec
jl
and
int3
into
aad
xchg
xorb
push
pop
repnz
lods
movsl
and
dec
mov
xor
sub
sbb
add
repz
xor
clc
in
cmp
lock
addl
lods
fistl
imul
pop
sbb
rcr
sbb
call
in
rclb
or
test
mov
adc
mov
xchg
jns
mov
lret
outsl
xchg
cwtl
call
sbb
mov
fsin
dec
in
movsb
divb
jmp
jb
dec
fprem
jmp
aas
jmp
jg
nop
iret
or
loop
loop
fsubrl
divl
ret
addr16
add
push
adc
pop
jmp
dec
push
aaa
ss
sub
adc
xchg
add
lock
out
or
jb
cmp
das
fisttpl
dec
out
push
fiadds
push
jmp
test
in
aas
loop
xor
pop
movsb
jl
mov
and
sahf
jl
daa
mov
data16
xor
scas
cmp
jmp
fidivrs
in
xor
test
xchg
aaa
sbb
or
in
aam
jno
outsl
xor
xor
pop
adc
jecxz
xlat
push
insb
pop
std
jbe
in
adc
xchg
sub
rcrl
mov
pop
sub
cltd
xor
and
adc
gs
iret
mov
in
sub
mov
sbb
jo
inc
dec
clc
mov
cmp
je
xor
pushf
and
fstpl
data16
sub
xor
or
je
je
inc
sahf
push
push
mov
sbb
xchg
sahf
push
jg
inc
stc
clc
or
in
dec
sub
inc
mov
leave
mov
dec
loope
pop
push
cwtl
mov
push
xor
sbb
out
popa
inc
cli
sub
sbb
dec
cmpl
xor
xchg
cmpsb
icebp
mov
std
repz
push
in
inc
repnz
stos
dec
pop
lahf
mov
sub
mov
push
jecxz
dec
fs
aad
sti
sbb
pop
sbbl
ja
jnp
wrmsr
lock
or
sbb
repnz
test
mov
fcomp
sub
or
imul
movq
ss
pop
mov
out
pop
sbb
pop
arpl
inc
xchg
jge
add
push
lret
jns
dec
clc
jmp
xchg
addr16
inc
xchg
sub
push
addr16
sub
pop
xor
xchg
adc
out
pop
cmpsb
daa
outsb
mov
sub
shll
lea
cmp
mov
fisubl
mov
inc
mov
fwait
out
sbb
mov
gs
lahf
sbb
movsl
loop
mov
fdivrs
orb
ljmp
call
mov
lcall
adc
punpckldq
bound
mov
test
test
fcmovnu
adc
lahf
xchg
push
mov
sti
pop
loop
xlat
lods
pop
sub
mov
ja
push
mov
int
push
jae
nop
ljmp
mov
cmpsb
hlt
mov
xchg
and
mov
test
jmp
xor
pop
jno
mov
dec
idivl
mov
arpl
movsb
insl
xchg
cwtl
jns
add
insb
lods
jno
xor
test
les
xchg
and
das
sahf
xchg
or
push
mov
cmp
cltd
or
in
inc
mov
xor
and
or
adc
and
lock
outsl
imul
stc
int3
adc
adc
xchg
sub
push
and
nop
mov
sti
shl
xchg
adc
hlt
jmp
sbb
sbb
adc
xchg
pop
aas
enter
icebp
ss
lret
xchg
test
push
mov
and
pop
das
mov
cltd
lret
mov
sub
mov
lea
push
mov
push
pop
jnp
jbe
xchg
add
popa
sub
mov
fs
inc
sti
sbb
pop
fidivrl
inc
idivl
repnz
in
in
push
push
or
icebp
xor
mov
push
dec
mov
mov
jle
sbb
xor
push
mov
lahf
mov
subl
push
inc
push
out
test
push
push
and
xchg
add
imul
sub
out
push
sahf
shrl
sbb
xchg
sbb
arpl
lret
pop
fs
mov
and
outsl
lods
mov
mov
mov
aad
or
cmp
stos
push
mov
fcoml
xor
pop
xor
fcoml
inc
lods
mov
mov
sub
or
adc
xchg
xor
je
movsl
mov
and
or
pop
mov
and
testb
pop
lea
xchg
mov
xor
subl
lods
mov
fmuls
mov
mov
movsb
dec
xor
rolb
jno
xchg
dec
fmuls
inc
mov
insl
cwtl
imul
idivl
in
insl
fstl
mov
or
mov
pop
xor
push
outsb
xor
mov
jbe
test
jmp
push
cmp
add
mov
sub
or
ret
pop
test
into
pop
xorl
insb
push
imul
cld
mov
leave
push
ja
cmp
sbb
std
add
dec
repz
lret
fildl
data16
cmp
push
insl
aad
mov
out
xchg
add
sbbl
mov
jmp
cmpl
cli
mov
or
out
sub
push
sub
adc
adcl
cmpsl
mov
xchg
push
or
outsl
cwtl
adc
nop
pop
dec
rcrl
xor
adc
sbb
mov
jns
and
pop
or
pushf
maskmovq
lock
outsl
sbb
mov
loop
jns
movsb
in
mov
fs
pop
xchg
mov
or
xchg
pop
inc
xorl
imul
push
cmp
sub
lret
adc
popa
cmpsl
push
test
jbe
fdivr
xchg
push
xchg
sub
out
mov
hlt
rcll
lds
xchg
xchg
arpl
mull
lahf
inc
nop
dec
xorl
adc
push
insb
ret
xchg
sub
or
pop
cmp
fdivp
fs
and
rcr
adc
inc
sbb
push
fidivl
sbb
and
lahf
xor
dec
repz
sub
loope
xchg
jmp
jns
add
popf
xchg
push
test
insl
imul
jb
nop
fistpl
jns,pn
pushf
jg
je
filds
jge
cmp
add
repz
out
or
shrl
and
aam
sbb
test
jg
shrl
mov
cmpsl
xor
mov
popa
icebp
sbb
jge
jmp
dec
cmpl
fisubl
out
and
mov
xchg
jg
push
cltd
inc
xlat
imul
mov
xchg
mov
sbb
jnp
jge
sbb
shrl
and
cmpsb
inc
and
pop
outsb
stos
or
xor
xor
notl
iret
push
jmp
lcall
dec
fcmovnbe
sbb
sti
mov
mov
jae
scas
outsl
xor
sbb
mov
ds
gs
out
mov
out
adc
sti
mov
jp
ss
out
mov
stos
popa
jo
pop
push
push
sbb
push
xor
les
aad
sub
test
out
inc
cld
mov
mov
push
fwait
jnp
push
sbb
test
mov
das
add
stos
lods
mov
pop
mov
sub
negl
mov
xor
fst
mov
lahf
ret
in
shrb
jno
test
nop
sbb
jp
inc
jge
and
cmp
sbb
cmp
test
aaa
jb
shrb
cmpsb
out
dec
cmp
adc
popf
popa
clc
push
out
imul
scas
sub
inc
mov
mov
js
push
mov
inc
sub
imul
in
pop
pop
sub
pop
les
dec
dec
test
fdivrl
adc
mul
lret
addb
in
sarl
js
dec
or
xchg
mov
aam
shlb
jp
sbb
and
aaa
lods
pop
lahf
lahf
enter
mov
pop
and
xor
data16
push
jae
iret
dec
pusha
popf
cmpsl
loopne
mov
mov
or
mov
xchg
adc
xchg
mov
dec
cmp
cmpsb
mov
loope
pop
nop
pop
pop
ffree
push
and
es
cli
mov
sub
stos
mov
es
scas
mov
sub
cmp
fisttpll
push
rol
sub
xor
leave
mov
jns
jmp
mov
xchg
cld
arpl
and
nop
ljmp
lods
push
rolb
ret
in
nop
stos
in
and
dec
pop
dec
insl
sbb
sbb
fldcw
inc
mov
sbb
push
stc
inc
scas
jb
and
xchg
mov
push
lock
mov
jae
stos
fwait
cmp
pop
lahf
pop
leave
out
dec
dec
adcl
push
adc
nop
or
jb
add
cli
jo
popf
sub
jbe
mov
aam
xchg
aaa
movsb
inc
cmpl
sbb
xor
adc
lods
sbb
imul
sbb
pop
mov
ja
jb
pusha
sbb
lock
lcall
mov
pop
and
sti
pop
xor
fiaddl
sub
rcl
cmp
dec
pop
push
jae
scas
lock
sbb
jns
movb
xchg
dec
flds
xchg
fldl
sbb
jmp
xor
sbb
or
int3
dec
cwtl
mov
xchg
stos
xor
push
dec
jne
mov
stc
sbb
xlat
mov
jp
sbb
push
stos
stc
jle
xchg
stos
mov
push
cmp
clc
jmp
cwtl
gs
mov
int3
mov
in
int
popa
push
mov
ss
push
sbb
or
and
lret
push
xchg
pusha
hlt
decl
jl
leave
and
xor
push
loope
in
jo
lds
push
test
jmp
faddl
cmp
push
mov
ret
xor
mov
aaa
testl
jecxz
decb
jb
mov
aam
mov
sahf
out
jns
ret
cwtl
and
sbb
pop
pop
mov
cmp
int
xchg
mov
adc
ja
sbb
cltd
mov
gs
or
loope
pop
in
pushf
lods
jmp
add
imul
repz
arpl
js
mov
cli
out
xchg
xchg
arpl
dec
addr16
mov
lods
xchg
and
insl
in
or
mov
mov
mov
cmp
lds
xor
cmpsb
rcr
stc
mov
int3
mov
push
add
js
mov
cmp
gs
sbb
fmull
and
outsl
push
lock
cmpsl
insl
ror
rcrl
int
data16
xlat
mov
shll
jns
mov
adc
std
push
daa
xchg
add
push
mov
out
pop
mov
mov
push
jmp
lret
jl
mov
notb
fsubrl
xor
test
test
pop
lret
add
push
ljmp
xor
sbb
test
push
sahf
sbb
sub
inc
adc
popl
fisubl
jmp
or
lahf
test
or
cmp
jmp
loopne
jge
or
push
sbb
sub
push
insb
cmc
adc
lahf
movsl
out
dec
cmp
stos
fisttps
mov
sbb
fcmovbe
addl
mov
repnz
int3
mov
xchg
pop
int3
push
or
fisttps
jne
dec
les
aaa
cmp
rorb
xor
jnp
jge
sbb
xchg
mov
gs
and
out
cmpl
and
jg
xchg
mov
nop
in
add
jmp
mov
icebp
add
sti
and
in
xchg
fdivrl
daa
push
cld
pop
and
notb
xchg
fidivrs
imul
pop
push
mov
jno
cld
fsubrl
sahf
mov
or
xor
ljmp
aaa
mov
jbe
enter
lcall
call
mov
lds
sbb
mov
sub
jnp
or
aad
pop
pop
cmp
aad
cmp
es
rol
in
jnp
pop
jecxz
hlt
popa
and
xor
vaddpd
test
jns
lods
xchg
scas
jno
sbb
push
xchg
xor
fcmovu
in
cmp
arpl
inc
pop
pop
lds
mov
jge
push
dec
adc
or
ficoms
xchg
fnstsw
xchg
dec
xchg
cli
jl
fisttps
sub
fisubs
pop
outsl
mov
enter
lds
lret
pop
push
pop
mov
inc
fisttpll
stc
in
and
popf
gs
mov
testb
mov
mov
out
daa
lret
mov
pop
mov
cld
inc
mov
or
xor
not
js
inc
cs
xor
sub
cld
inc
xor
addps
lahf
adc
pop
dec
in
mov
push
pop
aaa
rorl
mov
mov
sti
or
insb
push
push
jne
in
in
mov
test
or
imul
js
and
flds
xor
stos
dec
xlat
repz
imulb
std
arpl
cmp
xor
adc
push
and
outsl
lcall
mov
pop
mov
dec
lods
inc
mov
stos
and
jge
xor
dec
xchg
push
sub
jbe
pop
mov
data16
jo
mov
shll
cmp
dec
ss
mov
popf
jge
or
ss
adc
cmc
pop
repz
dec
call
fidivrs
pop
jl
cltd
ret
and
cmpl
sti
ljmp
and
xchg
ret
aaa
movsl
insb
es
adc
addr16
add
xor
stos
inc
stos
and
push
js
scas
inc
jle
add
adc
sbb
lret
push
dec
pop
mov
cli
fadd
mov
popa
push
jns
jp
test
sahf
lods
pop
fcmovbe
push
fists
mov
lods
xchg
push
enter
inc
adc
adc
cmp
pop
jecxz
xchg
xor
push
xchg
xorb
ret
pop
lea
nop
adc
push
or
je
ja
add
mov
pop
jb
divb
aad
pop
minps
jns
cmp
pop
fstl
repnz
jl
pop
add
dec
sub
cmpsl
es
cmp
pop
xchg
fbld
fnstsw
jne
jecxz
outsb
mov
xchg
shll
sub
pop
mov
mov
iret
dec
out
movsl
pop
idivb
dec
daa
loope
faddp
hlt
push
ja
push
fisubrs
xor
xor
and
movsl
repnz
jbe
ret
pop
push
push
sbb
repz
rcr
mov
nop
xlat
jb
jae
out
outsl
testb
test
push
out
sub
push
repz
add
testl
icebp
sub
push
cmp
fwait
mov
pop
fwait
pop
rcll
out
inc
lds
mov
jp
lds
out
push
inc
mov
mov
outsb
dec
icebp
call
jl
mov
icebp
jnp
and
into
sbb
lock
mov
mov
xorl
dec
frstor
mov
dec
out
imul
jns
lea
mov
cmpsl
daa
and
jmp
adc
add
add
lods
ljmp
dec
xchg
push
xchg
jb
sbb
push
out
jecxz
iret
dec
cmp
inc
lea
xorb
movsb
pop
movsl
mov
aaa
and
iret
mov
cmp
mov
mov
paddusb
rcl
call
cmp
fidivs
dec
cmpsl
and
roll
imul
mov
xlat
punpcklwd
addr16
pop
out
dec
andb
mov
loopne
movsb
stos
sbb
pop
mov
lods
mov
mov
dec
adc
xorb
xor
push
mov
data16
cli
out
aad
outsb
mov
sub
pop
push
movsl
outsl
stos
pop
cli
or
repnz
orb
and
adc
xchg
mov
ss
mov
fiaddl
mov
out
test
bnd
subb
pop
test
loop
mov
int3
cltd
jbe
hlt
rep
rorb
jge
mov
jmp
iret
aad
push
mov
push
lods
pop
fisubrl
or
je
sar
out
scas
sbb
lahf
jmp
popf
jp
leave
inc
pop
or
inc
push
push
cwtl
lret
cmp
inc
push
sbb
push
mov
jg
es
loope
mov
stos
shl
sbb
cmp
push
cs
in
imul
dec
adc
std
notl
xchg
loop
icebp
das
dec
stos
inc
popf
imul
cs
push
cwtl
fnsave
xlat
add
mov
test
les
es
js
adcw
rorl
sbb
push
fldcw
cs
adc
inc
adc
xor
mov
jbe
dec
jg
add
sahf
leave
mov
add
rcr
cmp
cmp
add
pop
cmpsb
push
cmp
cld
lahf
sub
jns
push
insl
sarl
pop
movsb
push
add
xor
nop
inc
xchg
sub
repnz
loop
cltd
mov
sub
stos
cmp
stos
mov
je
fwait
les
pop
arpl
or
ja
sub
push
inc
inc
push
mov
sbb
shrl
pusha
in
fisubrs
ds
je
xchg
mov
adc
scas
jle
dec
lcall
lret
sbb
dec
mov
aam
add
fldenv
flds
aam
xchg
out
mov
jns
movsb
jle
test
mov
into
sbb
mov
pop
shr
loope
ret
subb
or
dec
mov
notb
repnz
dec
insb
aam
dec
pusha
xchg
lret
cs
clc
stos
cmp
rcll
mov
push
cwtl
mov
shll
std
inc
cmpsl
xor
push
cmp
iret
shlb
sub
or
bound
icebp
jns
add
inc
and
add
and
jl
test
mov
xor
jno
leave
fucomp
cmpl
gs
stc
gs
mov
pushf
je
movsb
pop
pop
loopne
std
sahf
mov
movsl
mov
leave
push
int
add
lods
addr16
mov
jge
aad
xor
push
push
add
pop
or
jae
gs
popa
shr
mov
pop
sbb
out
aam
lcall
lds
adc
xor
ficoml
sub
sbb
mov
jb
inc
xchg
cmpsb
jp
pop
jo
and
sarb
daa
fidivrs
cmc
testl
stos
pop
aaa
mov
in
xor
push
sub
in
or
fisubl
cli
push
jmp
jnp
xor
mov
jge
or
sub
xchg
cmp
ret
shll
mov
push
mov
cmpsb
rolb
clc
stos
in
dec
fwait
cltd
ljmp
mov
movsb
inc
xor
stc
daa
sub
mov
or
dec
fnsave
mov
rcl
adc
je
flds
xor
cmp
or
int3
test
rol
mov
and
mov
cmc
stos
imul
icebp
mov
jmp
movsl
xchg
sbb
and
mov
cwtl
mov
inc
sbbl
fstl
push
inc
mov
out
dec
sbb
adc
dec
dec
inc
lock
icebp
dec
push
gs
push
es
sbb
xor
aam
xchg
fwait
insl
or
jns
arpl
dec
rcrl
inc
out
sub
popf
jg
loopne
pop
fcoms
pop
jnp
and
pop
add
fistpl
jno
loop
addr16
push
mov
cmp
dec
xlat
dec
sahf
out
cli
lods
dec
mov
mov
cmp
loop
mov
jecxz
sbb
sub
sub
les
push
or
add
cmp
mov
in
mov
mov
int3
pop
pop
push
adc
mov
xor
std
call
cmc
cld
in
or
and
lds
icebp
loop
out
dec
dec
inc
sbbb
pushf
orb
xor
insl
out
push
add
mov
fwait
jmp
jne
stc
push
inc
popf
cmp
and
subl
mov
pop
mov
loope
inc
mov
pop
or
movsb
pop
adc
dec
xor
dec
cmpl
jae
popa
in
push
add
cmpsl
out
mov
sarl
mov
push
repnz
fs
xorl
sub
call
lds
push
mov
lea
xchg
test
shr
lds
movl
push
sub
add
cwtl
popa
je
mov
add
das
fnsave
adc
dec
mov
jge
lods
push
inc
dec
int3
sbb
loope
in
in
out
or
rclb
cli
or
pop
scas
pop
aaa
ja
dec
fwait
dec
jae
xlat
adc
mov
rol
outsb
mov
push
jb
jne
aaa
mov
scas
jp
int3
sbb
jb
dec
push
scas
mov
testb
arpl
xchg
adc
fsub
pop
add
inc
outsl
xlat
int
and
addl
add
xchg
fmul
push
pop
andb
push
push
and
cmp
fbld
scas
lcall
mov
mov
leave
push
cmpsb
and
add
add
or
mov
jb
cmpsb
mov
imul
mov
sub
test
push
xchg
jne
push
lea
adc
fs
push
int
or
fistpll
pop
adc
pop
cmp
jno
push
jae
mov
addr16
orl
mov
mov
popa
sub
xchg
call
xchg
or
fstpt
lods
mov
inc
lods
push
jae
and
outsl
test
repnz
pop
pushf
push
imul
mov
js
enter
das
ljmp
xchg
mov
out
test
fcoms
mov
mov
arpl
xorl
xor
pop
xchg
pop
enter
jmp
inc
jp
ret
mov
or
mov
push
or
je
ja
neg
jge
dec
ja
jge
cld
jo
gs
mov
or
xchg
je
mov
sti
mov
jle
outsl
je
cli
ljmp
inc
aam
inc
std
xor
insl
sub
icebp
dec
cmp
test
gs
jne
iret
fadds
cmpsl
cmp
and
or
popa
cmp
test
push
pop
into
dec
jp
test
dec
cmp
lahf
mov
cli
fwait
sti
dec
push
dec
xchg
testb
sbb
lret
jp
pop
adc
movsl
loopne
sbb
loop
cmp
or
mov
add
cwtl
pop
mov
cmpsb
jmp
cmp
xchg
mov
xor
inc
mov
cmp
in
cmc
jecxz
add
ss
sbb
arpl
and
jecxz
or
loope
outsb
dec
or
jl
sub
aas
jno
mov
mov
jae
jecxz
out
aas
movsb
mov
shlb
mov
add
adc
fisttps
push
pop
pop
jmp
sti
adc
frstor
add
rorl
gs
nop
int3
lret
mov
cwtl
shlb
sahf
loope
and
mov
leave
adc
and
sti
dec
jae
shl
insb
add
cmp
int3
leave
lahf
jbe
xchg
pushf
aam
and
sbb
add
gs
lcall
filds
push
mov
mov
xchg
imul
xchg
push
jo
push
and
jecxz
fnstsw
push
xchg
inc
cmp
jbe
sub
andb
dec
ds
sub
pop
cmpsl
xlat
jg
movsl
pushf
cmpsl
add
aad
inc
adc
movsb
shlb
fnstsw
push
cmp
cltd
popl
fisubrl
cmp
nop
lcall
cmp
mov
ds
enter
jle
push
or
jecxz
sti
inc
mov
sbb
inc
into
jecxz
gs
xor
xchg
xchg
pop
jg
cltd
jle
push
jae
jmp
sbb
add
test
sub
pop
jl
gs
scas
xchg
std
ja
clc
lock
add
sbb
dec
cmp
jmp
outsb
mov
shll
add
mov
pusha
shlb
pop
fsubrp
lret
jl
xchg
adc
popa
pop
adc
cmp
fldcw
imul
jmp
inc
cltd
and
add
jnp
cmp
push
inc
push
xor
cmpsb
repnz
pop
shlb
jo
sbb
dec
ret
sub
cs
imul
sahf
hlt
outsl
push
or
pop
or
andb
paddsw
in
mov
or
pop
out
push
push
sbb
cmp
lock
cmp
lahf
mov
or
test
cmp
jl
pop
xor
adc
loop
adc
loop
int
sub
inc
aam
mov
mov
jl
shll
loop
in
adc
sub
sbbb
fdivrp
inc
lods
cld
or
sbb
repnz
mov
jp
imul
neg
mov
sahf
filds
iret
adcl
loope
aad
dec
cmc
punpcklbw
mov
gs
lret
out
inc
xchg
lahf
je
sub
and
dec
jbe
push
xchg
cmpsl
cmp
sub
mov
addr16
adc
xchg
mov
sub
lret
jl
xor
xchg
pop
je
pop
loop
je
sub
lret
cld
jo
add
scas
mov
femms
shrl
outsb
cmp
xor
jmp
das
int3
xor
test
jb
and
iret
bound
stc
xchg
cmpsb
xor
and
sub
mov
or
jge
and
or
mov
arpl
loope
or
aas
in
mov
bound
push
icebp
leave
arpl
int
push
ja
test
add
arpl
js
fisubl
lods
mov
aad
rolb
pop
aaa
inc
out
out
iret
push
into
flds
gs
sub
push
fs
cs
stos
movsb
pop
adc
and
adc
scas
cltd
mov
iret
add
les
cmpsb
inc
xchg
push
sub
lods
loope
movhps
xor
cmp
arpl
int
mov
aaa
mov
adc
les
cltd
movsl
mov
es
sbb
fwait
inc
iret
pusha
out
fnstenv
xor
jge
xchg
cmpsl
mov
jg
loop
add
xor
and
insb
scas
fsubrl
mov
adc
scas
jle
and
shlb
outsb
inc
inc
pop
jmp
pop
lret
test
xchg
movsb
jle
insb
leave
mov
out
mov
js,pn
xor
loope
or
jp
add
xchg
mov
push
dec
enter
pop
stc
sub
lock
aad
in
lods
lahf
sbb
mov
xlat
call
pop
or
mov
test
neg
clc
xor
lcall
jl
out
mov
push
xor
lret
lea
je
dec
jae
cs
mov
aam
push
jb
xchg
imul
call
push
js
adc
xchg
outsl
pop
ret
jne
xchg
xchg
std
mov
into
jnp
fnstenv
or
push
fwait
xlat
inc
push
add
push
xchg
pushf
mov
pop
mov
loope
jmp
mov
stos
outsb
arpl
xchg
mov
scas
test
sbb
dec
push
gs
cmp
dec
xchg
adc
icebp
mov
dec
xchg
shll
cwtl
data16
pushf
or
mov
dec
sub
jg
data16
hlt
adc
adc
jmp
lret
xorb
shr
enter
das
mov
lea
shlb
jmp
dec
ljmp
sub
mov
xor
push
push
cmpsb
int
ret
ss
pop
fucom
push
cmp
test
scas
daa
loop
lock
lahf
sti
push
lock
xor
pop
in
sbb
dec
add
mov
pop
jmp
add
mov
movsb
xor
cs
rcl
pop
ds
pop
inc
pop
stos
cld
pusha
imul
cmpsb
and
fmuls
and
fwait
xor
leave
js
sub
test
cmpsb
mov
aaa
mov
mov
pop
mov
xchg
popl
out
jmp
mov
es
aad
imul
rol
es
or
mov
sbb
test
xchg
sub
fndisi(8087
cmpsl
dec
jnp
dec
mov
fsubs
bswap
dec
jae
notl
test
lret
xchg
xchg
sub
cmp
push
mov
or
pusha
jnp
jo
cld
pushf
ds
mov
mov
jl
mov
int3
aam
inc
sub
orb
push
push
jp
icebp
jle
stos
cmp
fsubl
jno
cmp
adc
push
and
pop
jo
sbb
dec
adc
jmp
mov
jle
mov
cmc
mov
inc
aaa
in
cwtl
push
call
add
mov
cs
dec
inc
dec
mov
insl
ret
pop
rcrb
push
pop
repz
rol
jnp
push
enter
lds
inc
jae
dec
inc
or
xchg
rclb
cli
ja
testl
aas
and
mov
cmpsb
sbb
lcall
stos
fmull
roll
rorl
push
aas
or
jecxz
dec
outsl
mov
and
pop
lahf
sub
mov
cmpsb
dec
sub
push
dec
adc
pop
cmc
fistl
imul
fwait
divl
jmp
ret
insl
add
push
movsl
xlat
imulb
sbb
movsl
dec
cmp
ja
cmp
xchg
mov
lret
pop
jbe
les
loope
push
xor
insb
adc
outsl
loope
ds
rcr
xlat
popf
arpl
ss
and
pop
aas
sbb
mov
xchg
cli
out
aaa
popf
bnd
fisubrl
test
mov
mov
inc
mov
mov
inc
sub
add
xchg
adc
test
ss
gs
lea
mov
stos
xchg
scas
and
jno
loopne
add
xlat
testl
push
loopne
ror
addr16
testl
add
aam
cmpsl
mov
lock
cmp
cmp
push
push
push
lds
daa
int3
icebp
cld
cltd
pop
test
push
and
and
imul
or
test
jno
mov
imulb
mov
std
jp
cmp
mov
test
push
inc
cmpsb
ljmp
fidivs
add
andl
fsts
jmp
arpl
in
pushf
xor
xchg
add
inc
cmp
orl
push
push
xchg
bound
fbld
xchg
arpl
cmp
jg
mov
dec
add
lcall
push
sub
fwait
push
rcr
push
mov
loop
int
sub
out
dec
pop
lods
in
imul
movsl
jo
add
dec
cli
mov
leave
xchg
cmp
fiaddl
jno
inc
addr16
adc
ss
dec
xlat
pushf
stos
push
out
aaa
add
in
inc
mov
push
scas
xorl
mov
dec
in
xchg
pop
daa
cmpsl
mov
inc
cmp
mov
mov
adc
push
insb
enter
jo
mov
xchg
push
outsl
dec
dec
push
inc
lods
int3
cmp
cmpsl
inc
or
insb
push
mov
imul
push
pop
inc
mov
out
xor
popf
leave
ss
pop
mov
mov
or
mov
das
cs
cmc
mov
fstpl
sbb
pop
xchg
pop
mov
cmp
push
out
inc
test
arpl
xchg
sbb
adcl
sarl
stc
ret
pop
mov
sahf
shrl
pop
xlat
aam
pop
adc
sub
scas
push
test
add
add
out
xor
fcompl
mov
movsb
repnz
outsl
pop
cmpsl
ja
pop
push
std
or
and
shll
out
loope
dec
je
pop
or
ret
mov
outsb
dec
jp
insb
push
aad
xor
xchg
cs
rolb
out
loop
push
inc
xor
push
xlat
ds
ror
pop
aas
push
stc
lds
jg
dec
pop
push
mov
mov
mov
iret
pusha
repnz
jno
mov
inc
xor
call
inc
das
aas
insl
push
hlt
faddp
cmp
xlat
jne
aas
stos
sub
nop
push
jo
mov
jno
inc
sbb
stc
mov
jp
cmp
fidivs
lods
sub
jo
lcall
lret
sahf
add
xchg
insl
cmc
les
dec
dec
scas
mov
call
and
cltd
nop
sbb
pop
adc
stos
dec
filds
lret
push
pop
add
sub
hlt
cwtl
int3
or
xor
fwait
inc
outsb
sbb
sbb
xchg
add
scas
sbb
roll
pop
push
rolb
or
ficoms
loope
inc
dec
repnz
rorl
dec
roll
outsl
pushf
push
fisttpll
sub
dec
adc
push
fcoms
int3
and
pop
decl
xor
das
dec
dec
mov
pop
mov
ficoml
add
fimuls
mov
jno
push
rorb
adc
cli
lods
shll
mov
sti
mov
xlat
sub
mov
adc
das
pop
fimull
mov
sub
icebp
sub
out
in
insl
gs
lods
dec
cmpl
xlat
rcll
rorl
in
or
mov
clc
pusha
sub
test
cmp
or
push
inc
enter
verr
insl
mov
inc
mov
cmpsl
cld
shll
leave
push
stc
pop
fwait
andl
pop
fstp
mov
pushf
mov
test
mov
mov
xchg
inc
xchg
push
in
mov
out
pop
push
mov
in
sbb
jle
pop
test
xchg
mov
insb
pop
xor
std
dec
dec
push
mov
inc
pop
adc
and
adc
jmp
dec
fsubl
mov
lock
push
push
inc
test
push
mov
lcall
cmpsl
std
out
in
clc
pop
xchg
in
rcl
xor
xchg
lret
dec
cmp
sti
pop
xchg
jp
mov
pop
push
hlt
mov
test
aaa
sub
push
xchg
or
xor
pushl
faddl
pushl
xchg
iret
mov
pop
lret
xchg
mov
jl
sub
cmc
testb
in
ss
popa
jb
xor
in
or
inc
sahf
out
push
test
mov
js
mov
push
mov
cwtl
hlt
fnsave
xchg
lret
rcll
leave
test
fldt
mov
xchg
rcll
lret
pop
lcall
mov
mov
pop
cli
cmp
call
or
pop
cli
rcr
ds
mov
in
cmpsb
sub
loop
mov
mov
jmp
or
xchg
out
dec
sbb
xchg
xchg
fmull
cmpsb
int
or
int
in
jbe
ss
jb
adc
pop
push
pop
pop
hlt
mov
cld
insb
insl
dec
fisubs
mov
sbb
sbb
xchg
jne
or
ljmp
mov
fs
ret
or
data16
xchg
out
dec
xchg
popf
addr16
add
xchg
push
jge
js
aaa
cli
jle
orb
fisttpl
stc
cmpl
out
iret
mov
or
cmp
fadds
push
insl
les
pop
cmc
push
jle
inc
cmpsl
jno
xchg
jecxz
cmpsb
cs
leave
lea
pop
out
pop
add
cmp
mov
fwait
xchg
test
cwtl
or
pop
clc
imul
xor
lahf
iret
jmp
pop
cld
xor
push
jmp
lods
and
xchg
pop
xor
repnz
test
mov
sub
aam
mov
pop
mov
dec
sub
shl
xchg
cmpsl
and
mov
jge
mov
xor
sub
xchg
pop
sarb
pop
pop
insl
call
inc
ljmp
insl
ja
mov
insb
loopew
push
cwtl
rol
fst
ds
adc
push
add
mov
add
iret
scas
loopne
push
mov
jecxz
ja
mov
lret
add
mov
std
mov
jl
syscall
lcall
pop
push
cld
add
lahf
fstpl
sbb
push
add
xorb
pop
pop
loop
sub
xor
sub
mov
call
adc
pop
mov
inc
loopne
mov
jae
sub
xor
stc
push
imul
sbb
cmp
sbb
cwtl
cwtl
lods
dec
or
into
xor
fdivrs
repnz
negb
push
dec
push
cmc
and
call
inc
ret
jnp
in
leave
insb
mov
mov
stos
out
add
cmpsl
rorb
cmpl
popa
push
or
push
cmp
loope
dec
dec
jg
mov
aad
inc
call
inc
in
jb
adc
popf
daa
ljmp
inc
inc
add
aad
jge
mov
lret
pop
fistps
push
xchg
roll
inc
push
fs
cmp
lods
add
mov
ss
push
push
push
das
fxam
xor
rcrl
dec
mov
cltd
mov
inc
daa
sub
mov
jnp
dec
mov
cwtl
xor
rol
xchg
daa
xor
testb
mov
mov
shrb
sbbb
pop
pop
pop
call
push
aad
pop
xor
pop
inc
test
pop
xchg
push
jmp
ss
lock
push
scas
mov
pop
xor
pop
insb
sbb
mov
cmpb
je
nop
pop
js
push
mov
inc
push
loop
cmp
adc
cmp
fdivs
adc
sahf
testb
mov
cmpsb
jg
pop
push
jl
sub
mov
sbb
ja
mov
add
pushf
push
pushf
cmp
movsb
or
jo
lcall
sbb
lahf
cmp
mov
xor
mov
push
push
das
jle
xchg
xchg
bnd
repz
lea
or
pop
inc
xor
arpl
mov
daa
push
scas
adc
outsl
jo
push
scas
sub
inc
scas
sahf
cmp
fs
enter
or
jns
mov
in
dec
lea
data16
fs
je
lcall
lcall
pusha
and
jbe
push
call
pop
testb
sub
add
adc
sbb
or
xor
push
push
scas
sarb
cli
call
lock
movsl
mov
fists
jp
pop
lods
fs
aas
subl
mov
cmp
fimull
ss
xchg
xchg
xchg
mov
inc
popfw
cmp
mov
pop
test
dec
iret
and
pop
stos
jbe
dec
push
pop
in
outsl
in
cmpsl
dec
add
sbbl
rorb
les
jns
add
xchg
mov
call
xor
dec
or
jnp
shlb
rcr
cmpl
fnstsw
mov
dec
or
stos
inc
xchg
inc
inc
xor
in
fadds
pop
js
and
pop
std
or
shrb
push
dec
push
and
inc
adc
push
das
adc
dec
repz
cmpsl
mov
and
push
fsts
mov
push
push
stos
sti
cmp
jge
std
cmp
inc
pop
cmc
cld
ret
sti
push
jmp
xor
inc
pop
stc
add
cmp
dec
aaa
inc
mov
fwait
push
or
xchg
jns
adc
sub
mov
jo
lods
std
and
ja
fs
inc
scas
mov
leave
lret
int
lret
add
pop
cmp
lcall
aas
jge
xor
jo
or
mov
sbb
sub
sti
std
mov
mov
ret
jne
scas
clc
sar
nop
and
cli
je
jle
mov
jo
or
or
jns
movsb
out
jne
jno
in
pop
jb
fldl
cmp
fucomi
in
and
loope
jmp
sub
xor
arpl
inc
icebp
cld
fdivrl
sarb
mov
shlb
out
ljmp
pop
mov
add
pusha
or
push
push
pop
sub
mov
pop
inc
sti
scas
movsb
test
mov
or
clc
lds
or
xchg
js
pop
ret
data16
mov
push
fdivrs
mov
stos
int3
mov
pop
js
add
das
mov
leave
cld
cmp
test
and
adc
mov
jmp
ret
fbld
scas
je
inc
xchg
adc
scas
jnp
call
das
sbb
inc
cmp
ljmp
insl
int3
or
mov
out
pop
inc
xor
sub
push
lcall
adc
adc
adc
pushl
hlt
imul
clc
or
mov
xchg
xchg
jae
mov
jg
pusha
into
das
ss
bound
loopne
adc
jae
cmp
outsl
mov
adc
jo
fnstenv
cltd
inc
enter
xor
or
dec
xlat
mov
iret
lods
into
subb
fcmovu
mov
mov
push
out
pop
lods
popl
dec
dec
xor
cmpsl
jbe
xchg
out
fcompl
aaa
mov
or
adc
ljmp
sub
mull
rcrb
frstor
je
mov
cmpsl
cltd
dec
sub
scas
and
mov
fcmovnu
push
mov
test
testb
inc
lods
jbe
mov
sbb
es
jno
out
dec
cmp
add
leave
mov
into
mov
ja
rolb
add
or
and
xchg
lds
jae
cmp
mov
pop
jecxz
mov
pop
pop
or
cmc
outsb
popa
sub
das
sub
pop
test
roll
mov
add
pop
pushf
outsb
leave
es
movsb
mov
mov
cwtl
mov
cmp
cmpsl
pushf
dec
push
sub
cmp
cmpb
sub
pop
inc
jo
mov
or
roll
imul
test
add
test
mov
push
sarl
push
stos
out
aaa
mov
int3
or
adc
nop
cmp
psubq
mov
lods
inc
shr
rcrl
in
es
inc
das
ret
pop
dec
pop
jmp
xchg
pusha
lahf
outsl
adc
loopne
or
orl
fstps
cmp
mov
stos
and
jecxz
ds
mov
les
ljmp
push
popf
dec
loop
ljmp
push
fsubrl
dec
loope
leave
ret
push
jno
jne
mov
cwtl
stos
mov
mov
jnp
dec
sub
addr16
push
aas
jmp
lcall
jno
mov
jo
mov
inc
mov
lret
idivl
jmp
movsb
adc
inc
or
push
test
imul
test
testb
mov
aas
mov
sbb
xor
jo
inc
push
or
daa
sub
mov
ret
cmp
daa
movb
and
sub
cmp
and
and
dec
mov
addl
fcmovbe
pop
mov
dec
loop
icebp
and
mov
inc
addr16
xor
pusha
ss
movsb
pop
jecxz
cwtl
aam
cmp
dec
mov
push
xor
mov
andb
aaa
cmp
sbb
sbb
cmpsl
sbb
nop
pop
icebp
clc
or
inc
outsb
repz
je
aad
push
popf
lret
pop
pop
and
out
and
fyl2xp1
mov
lods
mov
stc
pop
pop
or
out
ja
inc
movsl
jecxz
fistpl
mov
push
test
xor
scas
or
jno
or
or
xchg
sub
lret
nop
orb
fs
add
out
xchg
ss
jae
mov
add
into
testl
out
out
arpl
and
xchg
js
push
add
add
jle
mov
sub
adc
jno
cmp
ror
enter
xor
mov
pop
lahf
rcll
daa
push
notl
repz
mov
inc
insb
add
and
call
push
pop
outsb
xor
adc
aam
jns
adc
mov
push
pop
add
jno
fwait
repnz
adc
xlat
lds
filds
arpl
xchg
aam
inc
or
fs
push
enter
adc
lcall
mov
aas
mov
ds
add
add
push
mov
push
and
adc
mov
int3
subb
push
call
ret
mov
mov
aaa
lret
xlat
nop
or
jmp
lret
scas
mov
subl
adc
mov
inc
sbbb
xor
jp
cmpsb
sub
xchg
in
pop
out
inc
jns
leave
or
insb
cmp
pop
dec
outsl
out
jg
and
shrb
and
mov
ljmp
and
outsl
sub
jns
cmp
fcomip
addl
sub
push
ficompl
mov
cltd
adc
pop
mov
pop
cmpsb
jmp
jnp
or
pop
sti
cmp
cmp
mov
or
mov
and
mov
inc
push
mov
stos
iret
dec
icebp
fstl
jge
cli
sbb
adc
jb
jno
mov
rclb
xor
push
push
sbbb
xor
mov
in
fs
nop
inc
xor
push
aaa
pop
test
mov
inc
mov
sbb
dec
aaa
mov
push
and
insb
mov
clc
jl,pt
nop
push
daa
mov
mov
pushf
sbb
aaa
inc
test
jo
mov
push
leave
shrl
shlb
jg
mov
push
inc
push
pop
out
loop
movsb
pop
or
sti
addr16
fprem1
xchg
repz
inc
push
addl
repnz
push
inc
dec
jae
out
shl
call
in
or
jae
push
addr16
lods
loop
mov
fisttpl
rolb
test
repz
jecxz
stos
sub
xchg
pop
mov
xor
push
and
push
pop
add
fstl
add
push
pop
sub
xchg
push
mov
push
cmc
hlt
outsl
fisubs
nop
or
mov
ss
dec
sbb
fwait
mov
xchg
in
lds
out
add
sub
cli
jmp
cmp
cmovns
jnp
push
mov
adc
cltd
jecxz
dec
test
insl
imul
pushf
cmp
push
push
jge
push
cld
lods
and
lret
out
cmp
cld
cmp
aad
xchg
xchg
jle
js
xchg
loope
orl
xchg
imul
jo
xchg
inc
adc
fwait
shl
xchg
cld
mov
jl
sbb
mov
pop
mov
out
pop
scas
lds
je
or
sti
or
roll
aam
popf
lea
ds
push
scas
inc
lock
xchg
imul
pushf
movsl
sar
arpl
mov
pushf
push
push
aad
add
mov
out
pop
enter
push
inc
dec
mov
push
clc
int
int
insb
out
xchg
jle
adc
rorl
jbe
lcall
psubq
repnz
aad
push
outsb
push
data16
fisubl
xchg
xchg
sub
movsl
lea
ret
stc
push
int
cmpsl
bound
push
addr16
sub
rcll
pop
aas
lret
rcll
pushf
daa
jns
aam
mov
pop
sub
sub
call
jp
cmpsl
pushf
jge
icebp
out
cmpsl
stos
in
or
push
or
cmp
jns
jne
sub
adc
jp
inc
push
test
and
movsl
sbb
mov
shll
sahf
mov
mov
fisubl
imul
mov
fcoms
dec
js
sarl
testb
incl
fimuls
aad
pop
cwtl
out
pop
idivl
shll
test
mov
cmp
popa
std
leave
and
xchg
sti
vmulss
xor
in
sbb
scas
adc
inc
add
outsl
adc
jmp
pusha
dec
subb
pop
ja
or
inc
adc
xor
lret
inc
push
and
xchg
mov
into
orb
push
in
mov
jmp
xchg
push
inc
lock
push
movsl
lcall
lahf
dec
stos
xchg
fwait
lods
mov
outsb
popf
test
ja
push
lods
loop
imul
int
xchg
mov
call
ljmp
cld
leave
pop
in
jp
adc
pop
mov
rcrb
fwait
loopne
mov
cmp
sbb
and
cmpsl
iret
and
mov
sbb
testl
js
rorb
jno
mov
jb
std
or
sbb
aam
sti
mov
loope
mov
sbb
inc
cltd
pop
cmp
pushf
lret
mov
mov
pop
jecxz
xor
and
inc
xorl
test
and
fisubrl
fwait
push
lock
fwait
jge
inc
iret
sub
jecxz
jmp
scas
xchg
mov
mov
aam
inc
movsl
pop
cmpsl
push
adc
das
dec
loope
pop
scas
add
adc
pop
loop
adc
sub
mov
add
jecxz
out
test
stc
cmp
add
xor
cmpsb
jl
adc
jno
pop
xchg
inc
cli
sbb
mov
jno
adcb
mov
call
in
push
cmp
inc
jmp
xor
mov
inc
jnp
mov
jns
pop
inc
rolb
enter
push
std
clc
lea
pop
iret
pop
sti
push
icebp
inc
xor
popf
mov
xchg
dec
or
jmp
cltd
jg
mov
sub
sub
stos
data16
pop
jns
lret
cmc
adc
mov
xchg
in
jl
xor
inc
sub
pushf
inc
arpl
leave
das
cmpsb
pop
cmpsl
fisttpl
leave
cmp
addr16
jp
inc
out
shrb
adc
cmc
push
pusha
fsubrl
dec
lahf
pop
test
fdivrl
xchg
adc
test
xchg
mov
dec
icebp
fldcw
test
fmuls
leave
out
jnp
cmpl
mov
shl
stos
inc
and
mov
sbb
cmpsl
cltd
out
sahf
pop
mov
div
int3
push
icebp
inc
lods
add
ds
xchg
dec
and
pop
iret
xor
inc
mov
sub
pop
mov
leave
js
xor
xorb
or
icebp
lods
call
sahf
pop
mov
test
popa
mov
addr16
add
adc
inc
inc
push
xchg
mov
lea
fdivrl
xor
arpl
je
and
insl
push
push
and
jo
fiaddl
mov
inc
mov
push
lea
lret
ret
mov
push
stos
lods
mov
int
inc
movsb
xor
sub
adc
inc
dec
mov
ret
hlt
pop
stc
lock
movsb
addr16
stc
xchg
dec
cld
xor
fcmovnbe
adc
xchg
out
out
cmp
xor
mov
or
ds
ss
or
jno
or
dec
add
test
pop
inc
fdivrp
jg
roll
dec
repz
lods
mov
adc
jmp
push
pop
jb
sbb
xchg
ds
negl
fcomip
stos
and
sahf
mov
cwtl
repz
xor
andb
xor
mov
xor
les
cmp
dec
cld
jmp
adc
sahf
or
push
into
lahf
stc
xchg
rcrl
mov
add
stos
jbe
faddl
loop
cmpsl
ja
arpl
sbb
and
adc
mov
mov
imul
testl
push
cmpsb
jmp
push
add
ficomps
imul
or
sti
push
push
dec
xchg
testb
jp
jb
mov
mov
popa
sets
sbb
nop
lock
ror
test
roll
cmpsl
push
sti
dec
lcall
xor
add
icebp
pop
loop
dec
sub
pop
dec
sub
pop
in
test
loope
ja
xor
int
push
or
lods
cmp
xor
test
jae
sbb
in
inc
pop
add
inc
mov
mov
insl
dec
std
aaa
inc
xchg
lods
cltd
imul
and
inc
jb,pn
adc
adc
rorl
and
mov
jle
push
pop
mov
movsl
lods
mov
adc
or
daa
je
shll
insb
and
repz
lods
and
mov
je
fsubl
xchg
xchg
mov
repnz
gs
pop
sub
and
out
insl
cmpl
dec
sub
adc
or
insb
sub
scas
test
fimuls
jmp
loope
mov
push
int3
lods
scas
inc
cmp
push
lods
icebp
jle
sti
add
outsb
jo
sti
mov
xor
insl
mov
test
push
int
out
js
sub
loop
and
test
pusha
fwait
add
aaa
sbb
push
lods
or
jp
or
sub
xchg
mov
pop
js
cmpl
aam
mov
ss
orl
and
movsl
pop
push
imul
mov
mov
cmc
imul
push
fwait
or
and
sub
lret
repnz
dec
jae
les
std
pushf
shrl
test
cmp
mov
imul
and
repz
xor
xchg
dec
inc
sub
mov
and
sub
test
mov
aam
jl
pop
push
pop
lds
mov
movl
cmpsl
inc
out
jmp
mov
in
and
jno
mov
push
lahf
je
scas
jecxz
movsl
xor
push
mov
xchg
cmc
lea
ljmp
and
push
inc
pop
clc
push
dec
cmp
dec
cmp
test
out
leave
jmp
add
shrb
xchg
sub
cs
or
sbb
mov
mov
movsl
sbb
out
push
shll
pusha
mov
cld
xor
jle
or
mov
pop
mov
ret
es
pop
dec
std
cmpsl
shl
and
sub
lahf
les
imul
mov
xor
push
test
mov
lock
mov
push
or
rorl
xchg
cmpsl
test
pushf
pop
inc
push
dec
adc
dec
jns
jg
aas
xchg
sti
pop
addr16
lahf
sbb
mov
lds
push
das
inc
into
xor
lods
in
mov
out
push
imul
xchg
push
je
movsb
loopne,pt
xor
test
cmp
mov
movsl
aas
enter
cmpsl
pushf
pop
test
push
hlt
jne
ja
mov
pusha
add
mov
xchg
mov
push
ljmp
pop
add
test
repz
aaa
xlat
push
insl
loope
jge
push
add
fidivrl
cld
gs
sbb
mov
mov
sub
es
sub
fs
cmc
ret
mov
mov
xchg
push
sbb
movsb
jbe
pop
shl
cld
shll
fwait
movsb
pop
lods
test
lret
sbb
sbb
adc
pop
test
lcall
pop
loope
lea
aad
sub
mov
loop
adc
or
lcall
cwtl
pop
lret
jp
jge
push
test
ja
fsubrl
and
lahf
or
and
push
pop
loopne
adc
loope
rcrl
outsl
inc
lock
popa
jecxz
cmpl
mov
lcall
dec
pop
xchg
xor
loop
clc
pop
jl
cmp
xchg
jne
scas
dec
rep
mov
int3
jae
mov
stos
pop
mov
stos
imul
in
mov
incb
mov
push
adc
mov
mov
outsl
enter
test
dec
mov
scas
movsl
test
js
aad
push
dec
sbb
lds
fsts
add
fdivs
aad
faddl
xchg
std
pushf
lret
rcl
sbb
push
lahf
jl
in
add
mov
popf
pop
test
sbb
inc
dec
js
hlt
mov
arpl
std
out
xchg
jnp
cmc
lds
dec
inc
pop
add
push
xchg
push
fidivrs
nop
pop
pop
sub
mov
repnz
push
mov
xchg
inc
mov
mov
inc
or
sbb
call
lock
jnp
xor
ds
and
cli
dec
inc
movsl
xor
lods
adc
push
sub
sub
and
xor
scas
out
push
mov
push
or
mov
adc
xchg
cld
fadds
inc
popa
or
jb
xor
mov
and
cs
xchg
xchg
xchg
or
mov
xchg
inc
xchg
idivb
or
mov
jl
fistl
sub
cs
sahf
add
daa
dec
mov
aaa
insb
sbb
out
add
and
mov
dec
roll
pop
xchg
leave
adc
lds
xchg
sub
xor
adc
out
pusha
sub
push
enter
adc
ss
cs
push
inc
pop
xlat
fsts
add
cmc
sub
pop
xor
aas
xchg
sbb
xchg
aas
xchg
test
popf
xchg
inc
shll
je
pop
mov
popa
clc
les
sub
dec
insb
out
cmp
addr16
push
jns
addr16
test
ja
cmpsb
inc
pop
clc
pop
das
loop
mov
push
fsubrs
and
cmp
lods
sub
loopne
js
mov
data16
cmp
push
mov
test
dec
loopne
dec
xchg
adc
adc
bound
cmp
push
inc
fadd
gs
pop
mov
mov
push
mov
inc
or
dec
xchg
dec
mov
mov
xchg
nop
xchg
pop
scas
mov
ja
cs
icebp
xor
and
and
repnz
fsubrs
push
imul
mov
imul
jno
pop
cwtl
cld
pushf
push
cmc
sbb
pop
popf
negl
bnd
mov
or
push
sbb
push
jge
jle
aaa
cs
jmp
shlb
addr16
and
pop
pop
lods
mov
jg
das
cs
sub
or
lcall
xchg
add
leave
add
inc
push
repz
adcl
rclb
and
jg
sbb
jno
es
jo
mov
out
inc
xchg
das
mov
or
or
mov
shrl
fisubs
ss
scas
out
icebp
add
xchg
aad
scas
jo
cmp
int
pop
mov
push
xlat
inc
fnsave
xor
nop
ja
test
sbb
repz
out
mov
pop
push
mov
mov
cs
mull
push
scas
xchg
pop
dec
xorb
inc
ss
dec
xor
jmp
mov
pushf
xchg
adc
into
cwtl
xor
mov
cmpsb
cmp
lods
sbb
pusha
das
idivb
jnp
push
jle
mov
cs
add
cli
repnz
add
mov
cltd
ljmp
lret
inc
imul
jmp
ret
addl
mov
xor
add
xchg
sbb
cwtl
sbb
xchg
jns,pt
or
xchg
xor
sub
jb
out
dec
fisttpl
mov
pop
addl
out
fdiv
dec
mov
and
jno
xchg
or
adc
in
ss
jno
push
sub
mov
dec
xchg
dec
outsb
mov
cmp
cmp
sahf
xor
mov
and
add
xor
out
mov
adc
push
outsb
jmp
push
mov
out
fcomps
call
pop
pop
fwait
call
cmp
xchg
jg
test
pop
lods
int
rcll
shr
inc
fdivrl
push
adc
fisttps
jbe
cmp
mov
cmp
xor
sub
sbb
aam
inc
movsl
pop
scas
dec
cwtl
cmp
rep
fsubs
lea
into
jl
fsubs
int
imul
mov
fildl
push
inc
adc
icebp
dec
popf
std
pop
aad
mov
arpl
dec
dec
fsubrs
pop
add
jecxz
sbb
dec
call
xchg
addr16
inc
jl
add
fisubl
jecxz
mov
lcall
dec
and
dec
aam
ret
repz
pop
inc
push
sub
xor
rcrb
ss
dec
pop
daa
std
pop
cmpb
ret
jb
popa
sbb
xchg
ljmp
popf
out
popf
adc
mov
dec
out
push
cmpsb
shlb
sub
or
adc
pop
int
mov
add
add
std
inc
sti
into
sbb
mov
fdivrp
add
xchg
je
xchg
push
enter
and
hlt
enter
xor
cwtl
ljmp
jecxz
jo
cmc
cmp
out
int3
inc
cmp
fadd
hlt
sbb
add
add
fstps
aas
mov
and
loopne
sub
or
sub
adc
test
and
repnz
xor
jp
sbb
sbb
adc
fwait
mov
popf
lods
das
or
and
pop
or
ficomps
cmc
jp
xor
add
fwait
jle
ljmp
xchg
push
pop
xchg
es
push
fs
pop
mov
popf
mov
arpl
and
mov
mov
enter
seto
mov
test
dec
scas
or
jmp
mov
mov
arpl
lcall
mov
fs
icebp
int
pop
xchg
aas
xor
and
xchg
jmp
leave
mov
bound
pop
add
idivl
call
and
test
pop
int
insb
mov
test
out
cld
and
lods
icebp
mov
cmc
lea
add
cmp
mov
xchg
imul
mov
mov
mov
pop
jmp
mov
jg
pop
and
and
popa
cld
fnstsw
rcrb
rcll
adc
inc
outsl
or
aaa
enter
fimuls
ss
test
dec
movsb
hlt
out
or
cmp
cmpsb
fisttpll
jl
les
jle
ja
in
shlb
aaa
cmpsl
xor
stos
push
jmp
sub
mov
fists
test
inc
dec
lea
push
xchg
and
xor
popa
cmpsb
out
jl
insl
subl
jb
rcll
inc
insl
xchg
repz
test
cltd
jae
movsl
push
pop
cld
mov
jmp
mov
or
jge
cmp
and
xchg
mov
outsl
jno
repz
es
fldt
xchg
cs
jge
push
push
lret
dec
push
pop
rclb
mov
jb
mov
mov
mov
inc
ljmp
repz
outsl
nop
rclb
fwait
xchg
push
icebp
lahf
push
jae
pop
imul
pop
mov
insb
sbb
cmp
test
push
pop
and
lock
add
jne
rolb
sub
rcl
jl
enter
orl
repnz
add
sbb
loopne
insl
sub
sbbb
out
mov
shlb
xchg
cmp
sahf
popf
or
repz
mov
or
jp
out
mov
mov
rorb
loope
add
es
in
mov
psubsw
aam
mov
add
inc
in
mov
inc
and
sahf
sarb
sub
rolb
dec
iret
hlt
jne
fmuls
addr16
and
daa
add
pop
and
movsl
cmp
sub
xorps
pop
mov
test
and
popf
mov
shr
inc
test
xor
lock
mov
rcr
subb
shll
inc
aas
sbb
sbb
insb
sbb
dec
test
mov
jnp
add
push
out
sub
lahf
sarl
out
clc
dec
int
sti
sbb
mov
pop
iret
js
decb
dec
pop
das
xlat
push
int
sbbb
mov
and
jmp
lea
jmp
push
xchg
fstl
mov
and
sub
rcll
jno
sbb
aad
mov
inc
push
sbb
push
mov
mov
dec
xchg
push
dec
sbb
lcall
jne
cli
into
sub
xchg
cmpsl
jb
loop
movsl
cmp
push
movntps
xchg
mov
cli
dec
je
pushf
mov
xor
sbb
sbb
sub
ds
jge
mov
mov
sbb
jg
jb
adc
or
negl
jbe
dec
push
in
leave
outsl
jmp
jmp
sbb
dec
inc
clc
mov
int
xchg
sahf
xor
cmpsb
int
mov
popa
aad
xchg
outsl
adc
cld
adc
hlt
nop
test
hlt
push
ss
or
push
push
iret
or
lods
in
jl
enter
out
pop
and
and
sbb
adc
in
fwait
roll
leave
pop
rcrl
inc
mov
sub
popa
push
fldl
int
jno
sub
in
mov
cmp
push
push
sbb
enter
dec
lods
cld
and
sub
jnp
popf
adc
mov
nop
fldl
movsl
push
inc
imul
cwtl
in
flds
pop
mov
loop
pop
nop
inc
stc
aam
es
addr16
imul
cmpsl
adc
push
or
loope
addr16
orb
jo
xchg
or
loope
das
mov
ficomps
lcall
mov
vmovlps
jnp
fpatan
lret
dec
lds
mov
dec
push
xchg
stc
inc
lea
push
insl
mov
outsb
push
test
subb
pop
xor
adc
daa
iret
movsl
push
or
test
pop
pop
pop
inc
int
cmp
push
fsubrp
pop
pushf
gs
rolb
pushf
sbb
subb
dec
add
xchg
arpl
sahf
jo
loopne
jno
jp
jmp
cmpsb
xorb
xor
fcomps
cmp
lcall
inc
sbb
lods
pop
pop
cmpsl
jnp
cltd
fucomi
ficoms
xor
xchg
cs
sub
dec
incl
dec
cmc
je
dec
in
mov
fildl
inc
lret
mov
jp
xchg
je
mov
mov
xor
sbb
add
cmp
push
pop
mov
fdiv
sub
fisubrl
out
adc
adc
mov
loope
xor
or
sub
xchg
movsl
nop
pop
sbb
cli
xchg
mov
dec
sub
adc
jno
inc
inc
ja
xchg
ja
nop
rcl
cmp
jae
cltd
push
lret
and
ljmp
mov
stc
inc
xchg
mov
or
xchg
or
js
fwait
push
lods
xor
or
adc
pop
ficompl
cmc
call
out
js
and
mov
mov
adc
xchg
add
pop
jno
jae
shr
insl
dec
add
ja
inc
sbb
xlat
mov
dec
daa
pop
sub
repz
mov
scas
popf
test
xor
jbe
pop
sub
aad
lods
lds
xor
out
adc
lea
pop
add
mov
jno
sub
xchg
in
outsl
adc
dec
or
mov
movsb
xchg
imul
or
mulb
mov
jne
sbb
cmc
fsubp
push
jae
mov
andb
pop
add
orb
std
adc
mov
mov
lods
mov
pop
inc
add
out
jns
jmp
xor
mov
out
cmp
pop
clc
cmp
mov
xchg
mov
xor
imul
jecxz
dec
push
pushf
je
out
ss
cmc
stos
std
clc
and
and
mov
sbb
movsl
cwtl
out
pop
mov
mov
push
arpl
out
lret
xchg
mov
xchg
lcall
sub
ficompl
pop
es
dec
ret
rcrb
lcall
popa
mov
mov
cltd
xor
adc
jno
leave
lods
and
and
int
and
mov
sub
mov
mov
cvtdq2ps
stos
push
pusha
pop
test
pop
ror
cld
push
and
insl
dec
les
push
nop
lds
sahf
and
fldenv
pop
mov
adc
paddusw
xchg
dec
inc
mov
addr16
cwtl
push
lret
adc
push
or
icebp
mov
or
out
std
js
mov
xchg
xchg
jg
cltd
and
jno
mov
pop
enter
and
push
shll
stc
mov
jp
fcmovnb
dec
push
or
or
add
pop
push
pop
leave
cmp
xor
mov
das
int3
fisubrl
pop
mov
in
hlt
clc
mov
pop
imul
xchg
ljmp
stc
int3
insl
mulb
adc
mov
sti
fiaddl
rorb
mov
lret
fisubrs
sbb
cmpsl
push
hlt
cli
or
into
lods
rcll
jmp
inc
gs
xchg
outsb
jns
pop
mov
int3
je
lret
cmp
push
ja
data16
data16
fidivrs
jmp
cltd
push
andb
and
stc
clc
dec
push
rol
adc
mov
gs
faddp
mov
add
sarb
mov
lock
icebp
call
insl
or
aas
sub
jecxz
fsubrp
sbb
aad
pop
add
ljmp
mov
into
add
jnp
aad
add
das
mov
int3
and
pop
fisubrs
adc
lods
ja
push
int3
in
mov
jecxz
movsb
lret
push
shl
fwait
int3
jg
sti
xchg
cmp
dec
leave
fisttpll
mov
add
sbb
inc
out
popa
cltd
push
or
mov
dec
aas
or
or
es
inc
push
sahf
cmp
inc
dec
or
and
lret
fstl
xchg
lods
ljmp
loop
divb
lock
lcall
lock
cli
mov
push
aas
fldenv
in
pop
ja
push
bound
pop
pop
cld
inc
cmpsl
or
xlat
into
push
shl
or
and
cld
les
sbb
mov
gs
or
ret
sbb
push
movsb
jns
jl
fs
iret
mov
fnstsw
sub
movsl
and
ret
sbb
outsb
jmp
std
sbb
add
ja
loop
jecxz
dec
and
loop
lret
inc
adc
in
add
fidivrs
mov
orl
iret
ficoms
pop
test
xchg
adc
mov
lock
mov
jecxz
lcall
xlat
arpl
hlt
std
out
cli
mov
mov
iret
in
push
test
adc
jmp
pop
inc
jg
xchg
inc
adc
shll
mov
aam
jecxz
push
jmp
fwait
incb
push
cld
insl
and
push
sub
inc
and
jno
lods
test
in
je
sahf
lods
lahf
enter
cmp
push
cmp
cmp
cmpsb
mov
les
jmp
sbb
xor
rcll
sub
jle
sub
add
movsl
fsubl
mov
pop
mov
lcall
ret
mov
cmp
pop
int3
and
jo
rcll
out
shll
stos
add
mov
push
xchg
loop
sti
fsubl
test
fisttpll
mov
in
or
das
cmp
cmpsl
push
test
out
aad
sbb
addr16
jecxz
sbb
sub
or
dec
lret
jnp
add
xchg
stos
mov
ljmp
xchg
jb
mov
les
out
xchg
pop
xchg
insb
icebp
dec
cmc
adc
arpl
subb
out
aaa
push
cmpsb
aam
pop
aam
mov
cmp
inc
in
and
movsl
insl
pop
pusha
scas
jl
mov
rorb
sahf
pop
adcb
or
pushw
js
pop
xor
mov
cmp
jnp
jnp
cmpsb
shlb
aam
ret
enter
push
mov
and
jnp
popa
dec
in
int3
jne
mov
sar
sub
clc
jge
call
mov
in
bound
hlt
movsl
pop
adc
gs
mov
push
popa
inc
push
mov
dec
cmp
jg
cmpsb
mov
jp
jnp
out
shrb
cli
adc
test
retw
jnp
mov
ja
jle
inc
xlat
push
fsts
std
and
in
jo
out
out
and
insb
jo
cmpsb
push
je
mov
nop
push
fldt
xchg
add
rcrb
insl
pop
fs
and
jmp
lods
pop
incb
outsl
cmp
push
sbb
xlat
cwtl
mov
mov
and
jecxz
repnz
fists
sub
cmp
dec
sahf
adc
push
sub
xor
mov
rcll
in
sub
es
rolb
lock
scas
push
inc
xor
shrl
mov
jno
jb
fwait
movsl
adc
push
inc
sub
cmp
dec
mov
ja
cli
in
jns
pop
mov
xor
mov
fsubr
iret
call
or
rcl
cs
inc
mov
addr16
jbe
movsl
xchg
push
iret
adc
push
mov
loope
mov
jbe,pt
std
xchg
je
mov
jp
shrb
sub
ja
push
clc
aas
ss
je
dec
andb
and
out
out
stos
mov
mov
add
insb
or
cs
gs
push
sub
imul
jno
inc
adc
pop
in
in
xor
cld
fidivl
sbb
sahf
push
dec
or
mov
xor
popf
pop
adc
mov
sbb
adc
lds
imul
push
aam
ljmp
jno
imul
jb
xor
hlt
popf
mov
or
xchg
lahf
adcl
outsl
cltd
or
out
aad
lods
lcall
leave
xor
mov
movsl
fs
pop
clc
mov
std
cli
call
std
xor
btc
cs
cmpsl
sti
jno
jae
inc
cmp
sub
xchg
cmpsb
fs
xor
arpl
xchg
lcall
shll
push
dec
ja
cs
shr
call
fisttps
jmp
out
push
mov
sbb
dec
mov
mov
dec
iret
roll
fisubl
jae
jo
mov
icebp
push
sub
scas
add
fidivl
test
and
cmp
fistl
pop
push
sbb
shlb
aas
add
sbb
sub
sub
mov
dec
or
dec
adc
lds
mov
mov
test
or
fidivrl
outsl
xchg
pop
pop
jae
pop
or
sub
out
adcl
xchg
test
fiaddl
sti
push
cmpb
add
xchg
or
sbb
xchg
add
cmp
pop
std
xor
out
jl
decl
mov
iret
lods
iret
pop
pop
in
sub
xchg
jmp
add
lods
std
out
popa
xchg
scas
cmp
or
add
cli
in
inc
mov
lahf
adc
xor
mov
fsubrs
std
push
repz
or
fildll
jge
adcl
xchg
mov
sbb
jp
mov
outsb
or
ljmp
int
push
push
ficoms
pop
or
out
cmp
cli
inc
nop
leave
add
in
mov
popa
or
in
add
sahf
js
in
xchg
mov
jp
fisttps
or
dec
hlt
lea
push
mov
nop
cmp
xchg
ret
jns
repz
sbb
sub
bound
repnz
sub
popa
cmpsb
arpl
pusha
lea
push
push
addb
inc
scas
pushf
sbb
mov
out
or
adc
fwait
dec
or
out
lods
lods
push
cmc
jg
cmp
rcrb
push
add
outsl
pop
nop
xchg
xor
mov
cli
lds
jbe
rorl
mov
inc
mov
sbb
test
mov
loopne
sub
cltd
mov
cmc
mov
fiadds
fnstcw
imul
and
out
push
adc
fisubrl
mov
idiv
push
outsb
pop
inc
mov
add
fidivs
sub
mov
or
mov
popa
nop
pushf
outsl
loope
cmpsl
lcall
pop
xor
in
push
cmpsl
aad
daa
push
add
adc
xchg
sti
and
xchg
lods
jbe
xor
ficoml
pop
mov
sub
leave
jbe
fiaddl
bound
cwtl
mov
sub
sub
push
jne
test
and
fstpt
adc
inc
push
sbb
in
cltd
and
xchg
insl
sub
push
push
outsb
iret
mov
aaa
jge
clc
pop
mov
pop
xchg
sahf
ficoms
vmovapd
mov
mov
push
and
mov
bound
inc
jno
dec
and
inc
int3
pop
bound
xchg
mov
aad
cmp
out
mov
xchg
push
xchg
arpl
inc
pop
sti
jg
cld
jl
inc
pop
sub
mov
cmp
xchg
jb
negb
sub
test
push
ds
and
imul
pop
cld
sbb
insb
outsl
mov
sub
shl
sbb
pop
fdivrs
insl
mov
jns
test
cmp
mov
test
fistps
repnz
dec
cmp
dec
xor
pop
or
jmp
in
dec
add
les
frndint
bound
dec
pop
je
dec
xchg
adc
xor
aam
sti
add
xchg
jmp
call
arpl
shlb
inc
pop
adc
insb
in
shl
xor
and
into
das
xchg
gs
cmpl
lods
cmp
js
pop
sub
and
mov
jle
xchg
xchg
pop
add
mov
dec
cmp
cld
jl
fisubrl
icebp
in
push
mov
inc
xchg
aam
cmp
push
push
int3
xchg
das
jbe
mov
inc
cs
lock
jo
mov
mov
in
dec
lods
dec
dec
stos
aaa
jno
mov
js
movzbl
lods
jmp
movsb
pop
fidivrs
sbb
jecxz
stos
daa
sbb
jae
subl
jb
push
scas
loop
xor
fadd
loopne
sbb
iret
fucom
push
rcl
lcall
adc
call
cwtl
pop
adc
mov
mov
cmp
adc
in
jge
add
cmp
mov
out
jmp
jb
xor
sub
sub
adc
sub
sahf
fstps
ljmp
insb
pop
add
or
sahf
pushf
xchg
clc
lods
push
mov
out
cld
btsl
dec
sub
jg
repz
dec
fstl
pop
shll
sbb
stos
enter
cmpl
jo
jne
repz
xor
dec
icebp
js
inc
sub
mov
cmpsb
outsb
popf
push
mov
and
sbb
loop
jge
mov
fldl
mov
idiv
js
cmp
sub
dec
ljmp
xchg
shll
pop
dec
and
cmp
test
int
out
push
mov
or
xchg
jne
jmp
stc
add
sbb
xchg
xchg
pop
inc
adcb
adc
cmp
dec
mov
out
sbbb
jns
sahf
xor
test
xchg
dec
jae
add
sarb
out
ficompl
cltd
hlt
jecxz
imul
xor
xchg
cmp
mov
xchg
push
ss
xchg
leave
stos
mov
insb
in
push
jle
movsl
pop
repnz
cmc
cltd
jae
xor
xchg
fwait
push
testl
xchg
cmp
mov
mov
xchg
inc
sarb
les
inc
inc
and
rorb
add
sbb
insl
dec
bound
xlat
lret
adc
aad
add
lahf
inc
cltd
push
loopne
icebp
nop
pop
dec
movsl
pop
pop
mov
jg
pop
xlat
bnd
shlb
mov
ja
lahf
rcrb
cltd
mov
jbe
pop
lea
and
adc
or
mov
jno
pop
fimuls
out
inc
dec
or
jge
push
jp
add
add
rorb
sub
ret
inc
inc
pop
inc
cmpsb
push
mov
sub
xchg
mov
shlb
loopne
xlat
cmp
push
inc
aad
fwait
lret
cmp
rcrb
inc
jnp
mov
or
nop
insb
js
sub
cmp
adc
cmp
jbe
sub
sub
xor
cmp
cs
pop
inc
sbb
adc
jmp
push
movsb
into
sub
pusha
ljmp
negl
jl
ret
fs
leave
das
mov
dec
inc
repnz
cmpsl
lods
outsl
and
mov
jns
mov
push
fldenv
loope
cmp
rol
shrb
mov
or
push
cli
mov
xchg
adc
sub
jmp
rclb
dec
jle
fidivs
test
inc
repz
sub
fs
shll
and
dec
mov
loopne
mov
jae
push
clc
mov
or
jae
pop
lret
sub
jp
and
sub
mov
fsts
or
call
sti
xchg
shrb
push
xor
and
sarl
jmp
lods
xchg
mov
js
sbb
mov
inc
mov
mov
fdivrp
adc
push
push
cmp
sub
add
dec
fldcw
vmread
mov
dec
insl
test
pop
or
hlt
xchg
or
adc
shlb
imul
mov
popf
popf
pop
fnstsw
push
sbbb
xchg
pop
mov
stc
cmp
testb
int
fdivrs
notb
dec
inc
pushf
sub
das
inc
pop
cltd
sti
inc
popf
push
pop
data16
stos
out
stos
mov
iret
mov
ret
in
sub
sub
mov
jno
or
push
hlt
add
sbb
jl
cmc
pushf
xor
pop
insb
mov
or
inc
scas
icebp
jae
pushf
jecxz
sub
out
insb
inc
mov
sub
xchg
pop
sub
outsb
ret
push
cmp
addr16
sbb
or
mov
fistpll
mov
incb
sub
push
jmp
out
adc
jp
or
sbb
sbb
dec
call
and
ret
das
push
daa
mov
or
mov
mov
push
rcll
mov
jmp
aad
xchg
mov
and
push
testb
cmp
inc
jg
adc
sti
sbb
mov
test
cmp
hlt
inc
sub
sbb
fcmovnu
movsl
jnp
jnp
adc
xor
mov
jo
add
mov
cs
xor
ret
nop
ret
in
mov
fbld
cmp
js
sub
adc
movsb
les
ss
push
cld
xchg
sbb
shl
clc
scas
jne
adc
fiadds
in
gs
into
hlt
xchg
add
push
popa
mov
xor
mov
adc
jo
sub
push
push
mov
mov
add
std
mov
mov
push
xor
aam
push
rol
sub
sub
and
cwtl
and
jge
inc
or
flds
test
in
inc
insb
inc
out
cmp
pop
dec
scas
jg
addr16
inc
test
movsl
push
and
mov
iret
pusha
fwait
arpl
pop
mov
jge
xor
inc
mov
lock
fst
fwait
clc
xchg
adc
mov
jecxz
std
lea
and
dec
mov
ret
add
jne
xor
gs
lahf
fiaddl
xor
aaa
mov
xchg
in
les
sbb
nop
mov
fisttpl
cs
ss
icebp
mov
sbb
mov
sbb
or
lods
mov
ret
sbb
fstpl
lea
cmpsl
shlb
dec
hlt
cmpsl
mov
stos
adc
jo
rol
jmp
add
aam
push
xchg
mov
popf
cs
xchg
iret
es
daa
decl
add
xchg
mov
cmpsb
lea
dec
test
jo
jl
add
dec
mov
hlt
ja
test
and
jg
and
push
cmp
xor
fnstenv
xorb
add
sbb
rep
pop
clc
inc
push
mov
arpl
into
jl
xor
fldt
jecxz
adc
out
mov
xor
xor
lds
lcall
cli
pop
insl
mov
roll
cltd
enter
imul
and
fcomip
or
add
das
pop
clc
xchg
sub
xor
icebp
data16
push
push
jo
cmp
ret
sbb
out
jl
pop
jg
icebp
insb
or
cmpsl
stos
jge
subb
das
and
test
out
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
add
push
add
add
add
addb
add
add
add
add
add
add
adc
pop
add
add
add
add
add
orb
add
clc
add
orb
add
dec
add
cmpb
add
add
cwtl
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
fadds
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
loopne
add
in
add
add
add
add
add
or
add
add
add
add
call
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
add
mov
add
add
add
add
add
add
add
or
add
or
add
add
in
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
push
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
adc
add
add
add
add
add
add
add
add
or
add
add
mov
add
add
add
add
add
add
add
or
add
add
call
add
add
add
add
add
add
add
or
add
sbb
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
sbb
add
add
add
add
add
add
or
add
add
add
add
add
add
add
mov
add
lret
add
add
add
add
add
add
add
push
add
pop
arpl
add
add
add
add
add
jbe
add
xchg
add
mov
add
lods
add
mov
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
insb
insb
pop
imul
mov
add
add
arpl
add
add
and
xor
add
add
mov
add
add
add
in
arpl
add
add
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
mov
call
mov
push
outsb
outsb
push
xchg
push
inc
inc
outsl
insl
jo
arpl
add
mov
repnz
mov
xor
cmp
mov
cmp
dec
loop
in
inc
dec
imul
mov
jne
cli
pop
xor
outsb
mov
gs
pop
hlt
cmc
pop
out
push
ret
pop
mov
mov
iret
push
fnstenv
dec
xor
mov
mov
into
jecxz
fistpll
adc
mov
sarb
inc
loopne
movl
pop
mov
inc
sti
aad
ficomps
iret
push
cmp
mov
mov
test
sub
dec
jne
inc
lcall
pop
mov
adc
fsubrl
cmp
out
cld
inc
incl
cmpsb
mov
mov
dec
hlt
push
mov
adc
xchg
lds
out
pop
xchg
mov
cs
sub
mov
imull
add
addr16
addr16
push
clc
mov
shlb
mov
out
cmpsb
imul
and
xchg
xchg
push
sub
scas
ds
mov
dec
imul
sub
pop
mov
mov
aam
mov
sbb
mov
mov
pop
iret
mov
ret
adc
adc
inc
cmpsl
xor
push
mov
jl
std
cmpsl
int3
je
jp
bound
mov
out
mov
cmp
ret
leave
inc
mov
faddp
mov
movsl
sub
je
ds
scas
xor
sbb
rcrl
adc
scas
add
repz
sahf
mov
mov
mov
fbld
xchg
sub
inc
mov
test
jmp
ficompl
xor
push
jae
jo
jge
mov
adc
insb
test
repz
cltd
mov
stc
ret
and
rcrb
hlt
data16
mov
mov
sub
mov
or
sub
aaa
jmp
popa
push
fdivs
mov
in
aaa
push
xor
push
jns
imul
ret
or
outsl
sbb
sbb
mov
bnd
mov
leave
mov
mov
or
fmul
xchg
in
js
in
push
xchg
iret
mov
scas
xor
repnz
mov
mov
shl
inc
ds
ds
inc
mov
js
push
mov
ds
js
fnstsw
out
pop
aas
shrl
lock
data16
mov
sub
leave
cltd
add
fs
pop
lods
aaa
mov
out
repz
fcomps
inc
int3
into
jmp
jecxz
jmp
inc
push
or
push
or
sbb
stos
out
jb
stos
insb
jb
stos
stos
jb
lahf
xchg
inc
test
test
mov
inc
mov
insb
stos
push
cmp
xorl
stos
pminub
pushf
mov
lret
mov
mov
fcoms
es
xor
jae
mov
sti
stos
xchg
mov
out
and
dec
mov
data16
mov
add
cmpsb
pusha
dec
jno
scas
or
mov
pop
repnz
lds
mov
mov
inc
mov
xchg
mov
or
fnstsw
mov
enter
inc
push
sub
aaa
cmpl
xor
movnti
cltd
stos
sbb
push
xchg
sub
sub
rcrb
iret
sbb
push
leave
cli
repnz
lret
mov
push
imul
mov
xchg
fidivl
inc
xor
mov
mov
push
stc
test
push
mov
push
mov
enter
mov
sub
iret
push
xor
add
sub
mov
push
cmc
ds
scas
add
cmp
add
inc
push
mov
clc
outsl
imul
mov
aam
aaa
movb
es
xor
into
mov
mov
mov
xor
sti
icebp
cmp
sbb
mov
iret
push
testl
movsl
cmp
cmpsb
movsl
test
in
mov
js
fldcw
xor
adc
shlb
xchg
icebp
stos
mov
xor
dec
lret
sub
xorl
aaa
fidivs
jae
mov
pop
inc
jmp
inc
mov
sbb
jmp
push
mov
cmp
jmp
and
push
add
enter
jmp
lods
in
cmc
mov
hlt
aas
sti
cmp
sti
mov
xlat
mov
fisttpll
data16
ljmp
mov
pop
loop
mov
pop
and
mov
ficomps
mov
inc
jle
dec
scas
lea
aaa
bound
shlb
xchg
xchg
xchg
call
mov
subl
mov
cmpsb
aas
mov
add
bound
js
scas
aas
in
in
in
jle
mov
imulb
stc
mov
cmp
xchg
int3
dec
dec
fs
in
or
int3
cmpsb
mov
scas
mov
adc
repnz
leave
aas
dec
lret
mov
cltd
sbb
bound
cli
sbb
push
add
mov
mov
inc
movsb
cmpsb
mov
sub
mov
xor
xchg
icebp
pushf
sar
mov
das
lea
xor
popf
mov
in
push
dec
loop
enter
aas
jp
mov
jnp,pn
cli
xor
jmp
mov
mov
xor
cmc
leave
mov
cmp
das
adc
or
cmp
xchg
dec
jnp
in
cmp
cmp
cmp
add
aas
mov
test
pushf
sahf
cmpsl
mov
sti
xchg
call
and
mov
stos
xchg
aas
adc
mov
clc
lea
cli
iret
stc
and
xchg
icebp
cli
test
push
cmp
jnp
leave
repnz
mov
lret
cwtl
jb
pop
mov
sbb
cld
mov
in
loope
or
mov
inc
popf
add
cmp
cmp
scas
sbb
mov
xor
mov
jns
imul
push
add
mov
adc
cmp
xchg
push
pop
test
ja
jae
js
loopne
jmp
daa
cmp
cmp
int
sahf
pop
call
imul
pusha
or
fadds
mov
loope
push
fcompl
inc
fwait
icebp
arpl
pop
pop
scas
lds
movsb
push
shll
mov
and
jnp
mov
addb
mov
mov
push
or
mov
fdivrl
lea
mov
mov
dec
cltd
es
sub
push
movsb
in
fwait
out
adc
xchg
mov
mov
cli
mov
push
in
mov
mov
cld
stos
adc
cmp
push
adcl
rcl
jo
mov
mov
mov
add
cld
push
loop
mov
cmp
into
push
inc
jb
mov
cmpb
sub
stos
cmp
sbb
je
inc
pop
sti
mov
jb
jecxz
add
scas
into
aam
nop
adc
lods
and
pop
cmp
xchg
in
js
push
mov
call
sub
jecxz
cmpsb
repz
pop
sub
sti
lods
movsl
gs
popf
ljmp
xchg
ljmp
movsb
mov
or
jnp
inc
mov
cmp
sub
mov
push
call
adc
jo
adc
imul
mov
sbb
mov
fwait
pop
out
xor
mov
mov
jmp
in
aaa
sub
xor
insb
clc
xor
and
outsb
aam
movsb
xchg
jb
mov
adc
and
mov
push
repnz
call
icebp
enter
xchg
jge
add
fildll
scas
cli
into
jl
bswap
cld
jmp
xchg
mov
push
add
mov
mov
mov
push
stos
sbb
and
sahf
mov
lea
xchg
addr16
repz
xchg
pop
mov
cli
add
cli
mov
sub
sub
sbb
out
or
mov
mov
idiv
jmp
hlt
mov
je
les
sarl
movsl
mov
cli
and
inc
repnz
leave
mov
leave
int3
fsub
fcompl
cwtl
jge
mov
mov
cmp
or
push
adc
dec
cld
jle
sub
push
test
push
jecxz
aas
jp
cmpsb
hlt
pusha
push
hlt
stos
fldcw
jae
call
aas
push
jbe
mov
out
jge
mov
dec
dec
add
xor
jle
popf
mov
popf
cltd
sarb
xchg
mov
cmpsb
jmp
fbld
rep
test
aad
cmp
out
fiadds
push
jmp
daa
mov
cwtl
inc
adc
pusha
dec
pop
nop
mov
push
cs
cmpsb
xor
push
es
shl
inc
xlat
push
cmpsb
in
cmp
xchg
add
mov
mov
jne
jnp
fisubl
int3
ljmp
movsb
cmp
mov
into
xchg
ret
jecxz
scas
pop
andl
xchg
xchg
mov
sarb
pop
sbb
mov
xor
lret
rcr
fcmovne
push
aad
aam
xchg
dec
sbb
xchg
iret
inc
xchg
mov
mov
inc
or
lea
jne
aam
into
adc
xchg
popa
fisttpl
jmp
mov
and
ficoms
push
mov
lret
in
ja
ftst
repnz
ljmp
testl
cmpsb
aad
sti
movsb
int
xor
scas
aad
andb
scas
ror
ljmp
jp
repnz
fimuls
cmp
lret
fldenv
push
aas
jle
mov
enter
sar
xor
fstps
inc
data16
int3
sub
jb
cmp
xor
adc
push
mov
imul
faddp
imul
mov
or
sahf
xor
sahf
xchg
inc
or
mov
or
mov
push
fidivrs
mov
loope
mov
mov
cmc
mov
leave
dec
iret
test
push
outsb
push
idivl
iret
stos
push
clc
mov
push
imul
test
bnd
mov
push
xchg
mov
mov
inc
mov
sti
sti
das
xor
mov
dec
dec
push
in
mov
shlb
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
fs
adcb
add
add
mov
arpl
add
add
adc
arpl
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
add
inc
xor
add
jo
add
add
pop
xor
add
daa
setl
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
fsubr
add
addl
jle
sub
pusha
jmp
les
xor
cmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
jmp
jmp
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
out
imul
stos
or
push
and
mov
jmp
jbe
cmp
dec
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
jmp
dec
fsub
mov
inc
jmp
je
adc
jmp
loopne
pop
aas
or
das
push
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
loop
inc
jns
pop
insb
xor
xchg
pop
add
and
jmp
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
sub
add
addl
jle
sub
out
cmc
mov
sbb
jmp
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
pusha
sbb
sub
mov
js
mov
and
inc
jmp
push
nop
jmp
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
push
xchg
test
xor
imul
stos
or
test
sub
aaa
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
popa
jmp
popf
adc
loopne
pop
aas
jmp
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
jmp
jmp
pop
add
and
pushf
movsl
jp
mov
inc
pop
jmp
xor
jmp
shlb
int3
adc
div
fs
jmp
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
pushfw
push
call
les
cs
pop
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
jmp
loope
hlt
sbb
add
add
icebp
stos
add
add
add
add
decl
call
mov
add
add
add
aad
popfw
jmp
jmp
jmp
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
jmp
xor
imul
and
movb
and
cs
sahf
jg
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
jmp
addr16
mov
cmpb
jnp
icebp
jmp
push
inc
sub
scas
dec
fsub
mov
inc
je
jmp
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
daa
daa
aam
jb
inc
jns
pop
insb
xor
xchg
jmp
pop
jmp
add
and
pushf
movsl
jp
mov
inc
pop
xor
jmp
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
mov
pushfw
push
call
add
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
add
mov
add
add
pop
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
sub
mov
cmp
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
lea
nop
mov
lret
test
cmpsw
push
std
push
jmp
lahf
jmp
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
jmp
dec
dec
jmp
outsl
jl
pop
mov
es
mov
cmpb
jnp
out
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
jae
jmp
clc
shll
aaa
movsb
or
adc
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
fmuls
jmp
pushf
movsl
jp
mov
inc
pop
xor
shlb
push
dec
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
je
js
pushf
push
call
fildll
add
add
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
sbb
xlat
les
pop
add
add
mov
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
test
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
dec
loope
hlt
sbb
add
add
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
push
mov
and
jmp
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
fists
lock
imul
stos
or
hlt
mov
jmp
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jmp
jl
pop
mov
es
mov
cmpb
jnp
leave
pushfw
push
call
push
inc
sub
add
add
add
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
sub
imul
enter
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
aad
inc
jns
pop
insb
xor
xchg
pop
add
and
pop
xor
cmp
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
jmp
sub
mov
sub
sbb
xlat
les
cs
pop
jmp
gs
dec
loope
jmp
hlt
sbb
fidivrs
js
mov
and
jmp
inc
push
nop
mov
inc
lcall
std
repnz
sar
jmp
lahf
in
mov
mov
test
xor
imul
cmp
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
sub
mov
scas
dec
fsub
mov
inc
je
adc
in
jecxz
cltd
pop
aas
or
push
clc
shll
aaa
movsb
or
adc
push
das
cmp
jmp
sbb
jmp
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
fisubrs
mov
inc
pop
xor
shlb
int3
adc
pushf
push
call
xchg
div
fs
xchg
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
out
cld
test
or
ss
cmp
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
jmp
sbb
fidivrs
js
mov
xor
pushfw
push
call
inc
push
nop
mov
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
cmpsl
push
std
jmp
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
rcll
jbe
ja,pn
dec
add
push
dec
dec
outsl
jl
pop
mov
es
adc
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
jmp
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
fdivrl
cmp
xchg
pop
add
and
add
pushfw
push
call
outsb
setl
mov
add
add
mov
add
add
add
add
decl
lcall
mov
add
add
add
lcall
jmp
adc
div
fs
xor
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
push
jae
test
cmp
dec
loope
icebp
push
hlt
sbb
pusha
sbb
mov
js
icebp
push
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
pushfw
push
call
test
xor
imul
mov
add
add
add
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
and
xor
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jne
jnp
jmp
icebp
push
inc
sub
mov
jmp
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
adc
xor
push
das
cmp
sbb
inc
out
jmp
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shr
ja
jmp
sub
mov
int
jmp
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
in
sbb
das
push
xlat
les
cs
pop
gs
cmp
dec
jmp
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
inc
lcall
std
repnz
sar
lahf
in
cmp
jmp
mov
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
jmp
mov
jmp
es
mov
cmpb
lock
icebp
push
inc
sub
mov
scas
dec
fsub
mov
inc
je
adc
loopne
pop
jmp
aas
or
push
clc
shll
aaa
jmp
movsb
or
push
das
cmp
jmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
and
mov
push
dec
adc
div
fs
xchg
ror
into
out
cld
test
or
add
cmp
jmp
jle
sub
mov
sbb
xlat
jmp
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
cli
jmp
and
inc
lea
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
shlb
mov
push
and
fstps
fwait
cmp
jbe
in
jmp
add
push
dec
dec
outsl
jl
pop
mov
es
addr16
mov
sub
mov
or
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
pop
pushfw
push
call
ss
movsb
or
add
add
push
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
or
das
cmp
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
ret
inc
jns
pop
insb
xor
xchg
pop
add
and
jmp
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
jmp
fs
xchg
ror
into
jmp
out
cld
test
or
jmp
add
xor
out
cmp
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
pusha
sbb
mov
ljmp
mov
lea
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
push
call
cli
stos
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
movb
add
rcr
lods
add
add
add
add
decl
lcall
mov
add
add
add
rcrb
popf
jmp
pushfw
push
call
and
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
adc
cmp
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
mov
sub
imul
xchg
popf
jmp
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
add
jmp
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
jmp
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
mov
int
xchg
ror
into
out
add
pushfw
push
call
fimull
call
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
jno
xlat
les
jmp
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
inc
lcall
cmpsl
push
std
repnz
shr
stc
ds
jmp
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
xchg
stos
fwait
cmp
sbb
jbe
in
add
jmp
push
dec
dec
outsl
jl
pop
mov
es
mov
fsubr
sub
sub
jmp
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
fisttpll
push
das
cmp
sbb
inc
out
aam
jb
add
pushfw
push
call
mov
cmp
xchg
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
mov
jmp
and
inc
pop
xor
shlb
jmp
int3
adc
div
fs
xchg
ror
into
out
cld
mov
pushfw
push
call
or
add
add
lcall
add
pop
add
add
decl
call
or
add
xor
add
pop
popfw
jmp
jmp
jle
sub
cmp
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
jmp
and
inc
push
nop
mov
sub
lret
test
jmp
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
sahf
jg
jmp
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
jmp
icebp
jmp
push
inc
sub
scas
dec
fsub
mov
jmp
popa
xchg
popf
adc
loopne
pop
aas
or
push
clc
jmp
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
call
jmp
cmp
xchg
pop
jmp
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
jmp
jmp
xchg
ror
into
out
cld
test
or
add
cmp
jle
jmp
sub
mov
sbb
xlat
les
cs
pop
gs
jmp
jmp
hlt
sbb
fidivrs
js
jmp
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
pushfw
push
call
xor
xchg
test
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
imul
add
add
jecxz
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
fstl
and
sahf
jg
xchg
stos
fwait
cmp
jbe
jmp
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
loop
jnp
jmp
icebp
push
inc
sub
scas
dec
fsub
mov
cs
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
jmp
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
jne
jmp
jo
outsb
jmp
setl
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
aad
out
cmp
add
jle
sub
mov
sbb
repz
jno
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
jmp
js
mov
and
inc
push
nop
mov
cli
add
add
cs
in
mov
inc
dec
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
rcll
push
dec
dec
outsl
jl
cs
es
mov
cmpb
pop
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
jmp
aas
or
push
clc
shll
aaa
jmp
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
test
pushf
push
call
jmp
add
add
lcall
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
pop
shlb
int3
adc
mov
mull
int
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
jmp
xlat
les
jmp
cs
pop
gs
imul
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
popa
jmp
mov
mov
test
xor
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
jmp
dec
dec
outsl
jl
pop
mov
xor
jmp
mov
cmpb
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
fistl
pop
clc
shll
aaa
movsb
or
push
das
mov
pushfw
push
call
sbb
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
out
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
jge
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
xor
xchg
pop
jmp
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
jmp
into
out
cld
test
jmp
or
add
addl
jle
jmp
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
jmp
and
cmp
mov
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
jmp
stos
jmp
or
push
and
fstps
xchg
stos
fwait
cmp
jbe
in
add
sub
outsl
jl
pop
mov
es
mov
in
add
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
jmp
pop
aas
or
push
clc
shll
aaa
movsb
jmp
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
outsb
setl
inc
pop
xor
shlb
jmp
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
aad
sub
cmp
dec
loope
hlt
jmp
sbb
pusha
sbb
mov
js
mov
and
inc
push
nop
mov
jmp
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
jne
pushfw
push
call
xor
mov
add
add
add
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
cli
jmp
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
and
cwtl
icebp
push
inc
sub
scas
dec
fsub
mov
popa
xchg
popf
adc
loopne
pop
aas
or
push
sub
or
push
call
ss
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
ret
or
das
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
inc
jns
pop
insb
xor
xor
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
jmp
div
jmp
fs
xchg
ror
into
out
cld
test
repnz
call
out
cmp
jle
sub
mov
sbb
xlat
les
jmp
xor
cmp
dec
loope
hlt
sbb
fidivrs
ljmp
lea
nop
mov
lret
test
cmpsw
push
movl
jmp
dec
jmp
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
jmp
dec
dec
outsl
jl
jmp
pop
mov
es
mov
cmpb
in
or
jmp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
out
jmp
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
adc
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
movl
jmp
pop
mov
pop
add
cmp
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
jmp
out
cld
test
or
add
addl
jle
sub
movl
jmp
jae
test
cmp
jmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
data16
cmpsl
jmp
push
std
repnz
sar
lahf
in
mov
jmp
mov
test
sub
xor
imul
stos
or
push
and
fldpi
out
sub
jg
xchg
stos
fwait
cmp
jbe
in
add
push
jmp
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
movl
jmp
enter
cmp
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
aad
xor
cmp
xchg
pop
add
and
das
jmp
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
fucomip
sub
out
cld
test
or
add
cmp
jle
sub
mov
sbb
xlat
les
cs
pop
cmp
inc
push
mov
pushfw
push
call
loope
hlt
sbb
push
add
add
mov
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
mov
ljmp
lea
nop
jmp
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
jmp
xor
jmp
imul
stos
or
mov
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
mov
pushfw
push
call
adc
mov
cmpb
mov
add
add
sarl
add
loopne
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
das
or
das
cmp
sbb
jmp
inc
jmp
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
jmp
xor
shlb
int3
adc
testb
leave
into
out
cld
jmp
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
jmp
hlt
sbb
pusha
sbb
mov
jmp
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
pusha
pushfw
push
call
xor
xchg
test
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
movb
fstps
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
loopne
cmpb
jnp
and
jmp
inc
sub
mov
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
jmp
shll
aaa
movsb
or
adc
push
das
cmp
sbb
jmp
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
shr
sub
dec
adc
mov
int
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xor
les
cs
pop
gs
jmp
dec
loope
jmp
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
loop
jmp
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
push
xchg
test
xor
imul
stos
or
push
and
fstps
adc
das
cmp
inc
adc
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsubr
shl
mov
inc
je
jmp
adc
loopne
pop
aas
or
push
jmp
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
ret
push
call
pop
add
and
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
movsl
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
and
ds
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
rcr
sub
mov
sbb
xlat
les
cs
pop
xorl
jmp
jmp
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
jmp
jmp
mov
test
xor
imul
in
cli
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
xorl
jmp
pop
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
jmp
movsb
or
adc
push
das
cmp
xor
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
jmp
pushf
jmp
movsl
jp
mov
inc
pop
xor
shlb
push
jmp
dec
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
fidivrs
jle
sub
mov
sbb
xlat
les
pushfw
push
call
test
cmp
mov
add
add
push
or
add
out
add
add
decl
call
mov
add
add
add
fstps
popf
jmp
jmp
hlt
sbb
pusha
sbb
mov
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
push
xchg
test
xor
imul
and
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
sbb
push
call
mov
es
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
cmpb
add
add
push
add
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
inc
sub
scas
jmp
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
jmp
push
das
cmp
sbb
inc
out
aam
jb
jne
pushfw
push
call
mov
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
