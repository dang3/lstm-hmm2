add
or
add
add
add
jne
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
movzwl
movl
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
push
call
mov
push
push
push
pushl
call
mov
push
call
mov
push
mov
call
neg
sbb
inc
push
push
push
sub
lea
push
mov
push
call
cmpl
je
cmpl
je
push
call
mov
xor
xor
call
mov
xor
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
test
jne
mov
not
mov
or
mov
lea
push
call
mov
pop
leave
ret
push
imul
jb
je
arpl
add
add
push
pushl
call
push
mov
pushl
call
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
call
push
mov
pushl
call
mov
jmp
push
lea
push
push
pushl
call
xor
mov
push
push
push
push
pushl
call
pushl
mov
pushl
pushl
push
push
call
push
pushl
pushl
push
call
lea
push
call
pop
push
lea
push
push
push
push
call
push
lea
push
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
pop
jmp
call
push
mov
call
xor
leave
ret
push
mov
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
mov
add
xor
mov
movl
mov
add
mov
mov
cmp
je
movzbl
sub
push
call
add
cmpl
jg
mov
mov
mov
movzbl
sub
incl
test
jne
jmp
mov
mov
mov
call
decl
movzbl
sub
je
incl
call
jmp
call
mov
push
push
mov
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
andl
andl
push
mov
push
push
movl
movl
movl
movl
mov
call
mov
mov
push
push
movl
movl
mov
movl
call
andl
push
mov
call
pop
ret
push
mov
sub
push
pushl
call
pushl
mov
xor
movl
pushl
mov
movl
movl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
sub
push
push
push
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pushl
call
mov
mov
add
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
call
call
jmp
push
call
mov
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
push
pushl
call
mov
pushl
pushl
pushl
push
push
call
add
pushl
call
cmpl
jb
mov
pop
pop
pop
leave
ret
dec
mov
add
and
outsb
je
insl
push
push
add
or
adc
add
adc
add
and
add
add
push
add
mov
and
add
arpl
add
add
sbb
sbb
sbb
sub
clc
sbb
jecxz
cmp
popa
xchg
and
outsb
ja
jae
inc
add
imul
inc
flds
add
xor
sbb
enter
pop
or
push
inc
cmp
sub
test
call
jmp
test
lea
add
mov
add
je
in
inc
and
sar
incb
repz
xor
add
add
inc
add
pushl
fs
decl
mov
push
cmp
loope
inc
hlt
jmp
cmp
push
dec
add
lea
jns
add
repz
lea
jne
test
add
incl
mov
lea
clc
xchg
test
stc
clc
add
adc
adc
add
cmp
adc
add
pop
add
insb
sbb
add
add
sbb
sbb
sbb
sbb
push
pop
movb
fs
jbe
inc
add
outsb
push
jne
adc
popa
imul
imul
insl
es
add
lret
add
insb
fs
cmp
popa
gs
xlat
jae
outsl
jne
inc
gs
xor
popa
inc
jne
or
add
add
hlt
data16
add
inc
testb
add
aam
add
xchg
cmp
nop
inc
std
je
int
jge
pushf
pop
cmp
fcoml
out
jnp
add
jmp
jae
and
addr16
outsl
xcrypt-cbc
cmpsl
and
mov
push
jmp
dec
pop
mov
int3
out
lds
decl
jle
mov
dec
sbb
movsb
addr16
enter
mov
xor
sub
dec
js
cmp
mov
push
loop
jmp
sub
bound
jmp
and
movsl
movsl
fldenv
jae
inc
dec
ja
mov
push
sub
sarl
ret
js
adc
push
enter
mov
xchg
out
sub
pop
mov
sbb
push
movsb
cmp
stos
ss
outsb
ljmp
aam
data16
sub
mov
jmp
ljmp
lock
sbb
sbbl
movb
xchg
mov
mov
or
mov
inc
stos
inc
adc
sub
shlb
in
sbb
out
mov
test
pop
aam
bound
xlat
subl
pop
cmc
cmp
adc
imul
pmuludq
push
pop
lahf
iret
jl
add
inc
add
jne
je
test
push
push
popf
cmc
rcr
sub
inc
decb
xor
scas
rol
aam
pop
sub
mov
fidivrl
add
jbe
in
ficoms
sbb
das
rclb
in
lods
arpl
mov
pop
ret
pop
push
mov
pop
inc
pusha
jbe
gs
adc
leave
sbb
push
jbe
ds
mov
push
xchg
add
fadd
es
xor
xorl
shlb
mov
inc
cs
mov
add
xchg
jne
into
mov
jno
aam
pushf
loopne
push
sub
roll
jae
cld
pusha
jo
outsl
movsl
mov
scas
das
sbbb
lods
add
push
outsb
in
in
pop
fiaddl
push
add
sarb
and
push
dec
das
in
inc
adc
mov
shll
pop
inc
xchg
cltd
mov
les
push
mov
push
test
ljmp
outsl
or
lahf
cli
inc
xchg
imul
daa
xchg
icebp
push
xchg
mov
out
aam
xor
and
add
pop
es
dec
lcall
in
int3
call
lcall
mov
mov
xor
jnp
out
addl
jmp
sub
movsl
sbb
lret
cmpsl
add
les
fidivl
lods
jmp
pop
push
fwait
popa
inc
push
xchg
jb
and
jge
aas
dec
cmp
cmp
or
push
or
test
rcrb
inc
in
jg
push
add
aam
mov
push
aam
je
stos
int
addr16
ss
and
std
lea
sbbb
imul
inc
rcrl
loop
mov
push
jmp
dec
enter
das
mov
aad
dec
in
roll
loope
sub
mov
sbb
dec
adc
xchg
adc
mov
fs
in
cmpsb
jecxz
sub
lret
inc
xchg
andl
scas
push
add
in
rolb
mov
or
imul
add
pop
cmp
cld
imul
adc
sbb
mov
pop
cmp
in
out
ret
push
sub
movaps
push
jg
sub
push
inc
not
out
push
pusha
mov
popa
and
sub
or
sub
cmp
mov
cmp
lcall
negl
mov
push
ss
mov
bound
gs
xchg
and
dec
cmp
xchg
jp
out
mov
mov
mov
gs
cmp
mov
inc
lret
mov
sub
mov
mov
fdivs
pop
je
sbb
pop
test
mov
sbbl
sbb
mov
jae
icebp
jb
push
xchg
mov
mov
dec
aaa
dec
femms
stos
test
pop
dec
xor
cmp
in
inc
xchg
in
bnd
arpl
daa
imul
test
mov
mov
sarl
jo
iret
into
mov
xchg
ds
inc
xor
pop
pushf
fisubl
xchg
jp
mov
xchg
bound
xor
shl
jbe
lods
je
leave
or
push
add
jo
ss
ret
in
push
sbb
ds
or
sti
movsl
shll
push
cltd
es
fnstcw
sbb
cltd
xchg
and
or
cli
mov
mov
add
push
dec
shll
outsb
xor
test
cmc
push
nop
lods
cmp
jmp
out
out
push
loop
xlat
lods
mov
jbe
loope
inc
pop
test
xchg
sbb
push
in
push
inc
out
je
sti
out
or
repnz
push
push
or
jmp
xchg
inc
in
mov
xchg
pop
call
xchg
mov
or
je
sbb
push
cmc
jb
mov
int3
xchg
outsb
nop
lea
loop
add
and
loop
nop
cltd
and
cs
lret
mov
imul
movsl
and
test
mov
or
dec
mov
dec
push
xor
sahf
gs
mov
jno
leave
aaa
fsubrl
mov
mov
inc
mov
cwtl
adc
std
and
cwtl
xchg
cld
aad
out
inc
rcl
hlt
les
pop
dec
xchg
loopne
lret
add
add
out
sbb
scas
push
imul
fcomps
pop
inc
cwtl
dec
fisubs
push
mov
scas
daa
push
push
shrl
pop
popf
sbb
inc
cmp
sahf
lcall
pop
aas
inc
xor
in
jg
xor
lea
pop
into
sbb
movsl
in
add
adc
or
sbb
xchg
xor
or
sbb
push
pop
xchg
fwait
cli
pop
mov
cmpsb
or
out
ss
out
or
add
dec
or
mov
adc
lock
lods
mov
inc
adcb
addb
loope
into
pop
pop
mov
fcompl
dec
jmp
gs
jg
jl
movsl
stos
pop
ret
mov
xchg
pop
push
jg
cmpb
add
movsl
add
mov
pmaxsw
out
sub
mov
mov
xor
mov
xchg
and
dec
leave
cltd
aam
hlt
jo
cmp
mov
inc
add
dec
out
mov
sbb
je
frstor
jp
cmp
mov
fisubrs
xor
test
dec
xor
pop
cmc
cmp
xchg
out
dec
sub
fsubr
flds
adc
test
push
pop
pushw
sbb
and
mov
jns
jnp
test
ret
mov
rorb
repz
mov
ja
adc
dec
xor
push
xor
sub
inc
call
mov
xchg
into
movsl
sub
push
xchg
xchg
iret
and
or
mov
and
cwtl
xchg
ja
frstor
js
fs
movntps
enter
neg
adc
lea
gs
xchg
fwait
adcl
subl
std
or
xor
incl
fimuls
adc
pusha
push
cmp
xor
mov
test
fiaddl
fistpll
icebp
jno
sahf
repnz
lods
outsb
dec
imul
sbb
scas
push
js
push
add
xchg
lret
mov
xchg
jne
add
xchg
inc
cs
push
lret
lahf
add
and
or
fdivs
arpl
cmp
shl
push
mov
inc
out
cmpb
mov
orb
clc
es
xchg
jmp
mov
add
in
and
out
xchg
shrb
inc
mulb
pop
movzwl
sarl
test
mov
cs
adc
push
add
jo
shl
aad
jb
dec
dec
jp
xor
pop
insb
cld
dec
cmp
sarl
adc
stos
xor
shll
out
mov
add
rolb
addr16
call
out
sti
fildll
repz
and
sbb
sbb
mov
fnsave
dec
dec
mov
test
push
lret
ficoms
arpl
jmp
dec
movsb
sub
in
aad
inc
cmpsl
mov
ss
fcomip
dec
mov
das
lds
fiaddl
loop
mov
mov
mov
es
mov
and
daa
cmp
lcall
in
addr16
add
fbld
jmp
imul
xchg
mov
les
jo
ljmp
mov
arpl
lods
les
sbb
sbb
aam
mov
mov
mov
push
jecxz
pop
fiaddl
icebp
adc
pop
int
js
push
push
push
sbb
paddsw
inc
jmp
std
xor
aaa
insb
in
jbe
xor
fisttpll
mov
aam
xchg
cli
inc
jb
mov
into
sub
push
xchg
out
imulb
nop
addr16
xor
inc
daa
dec
xlat
sub
int
das
sbb
ja
push
test
xchg
cmp
mov
test
mov
pop
sbb
jnp
fmull
adc
ret
mov
cmp
adc
orl
mov
pop
pop
cmpsb
pop
jmp
into
jmp
dec
daa
cld
mov
fisubs
ljmp
daa
test
imul
in
mov
out
jmp
mov
dec
push
cmpsb
ja
lahf
aad
test
test
mov
push
imul
xchg
rcrl
xchg
mov
cmc
jle
pushw
aas
mov
mov
mov
sub
ss
sbb
lret
clc
test
dec
mov
mov
shll
cmc
xchg
cltd
xor
nop
or
mov
push
cwtl
mov
ss
lret
ljmp
shll
std
popf
imul
push
xor
sub
stos
aam
frstor
jg
and
pop
outsb
and
add
rorl
adc
adc
mov
pop
dec
or
dec
push
fxch
pop
aam
mov
xchg
mov
mov
xchg
popa
pop
mov
add
pop
movsb
fs
xchg
sub
fisubrl
fneni(8087
movsl
push
cltd
mov
xchg
lds
cmpl
ficompl
inc
adc
decb
mov
xchg
jle
dec
jno
movsb
andl
mov
sub
sub
shrl
push
int3
pop
push
mov
sub
lahf
xor
lods
sub
jecxz
insl
mov
and
int3
cmp
mov
cmp
cltd
sub
sub
xchg
fdivs
loop
mov
xor
repnz
shrl
mov
aad
jno
add
mov
dec
adc
pop
icebp
loop
sbb
xchg
mov
mov
test
lcall
jns
sahf
addb
mov
lock
mov
int
add
push
in
mov
pop
ds
and
stos
dec
outsl
popf
stos
dec
jo
inc
outsl
arpl
or
out
clc
jb
xchg
cmp
sub
lcall
sbb
or
ret
leave
push
in
shll
lahf
ja
add
cmp
xor
aaa
and
fldl2t
int
andl
cmp
mov
xchg
jo
cs
pushf
adc
push
orl
imulb
push
andl
xor
xchg
jnp
in
divb
mov
test
lea
mov
repz
das
xor
push
fistpll
add
mov
idivl
lods
lret
xchg
inc
lock
js
pop
xor
mov
xchg
jbe
outsl
pop
push
mov
mov
fs
dec
scas
push
icebp
or
xchg
cmpsb
cmp
jbe
inc
testb
vpcmpeqb
lock
enter
je
arpl
jo
and
lods
test
mov
mov
arpl
pop
mov
movsb
out
sbb
cmpsb
cs
movsb
ret
rcl
cli
inc
mov
adc
test
loope
cmc
adc
mov
cltd
xchg
cmp
insb
mov
fldenv
rorb
xor
and
mov
icebp
push
sub
push
faddp
ret
ret
popf
ret
mov
pop
mov
pop
pushf
pop
sub
cmp
in
inc
inc
aad
jb
mov
cmp
ss
pushf
mov
shll
lcall
push
ja
aaa
inc
std
lcall
dec
dec
daa
cwtl
pop
sahf
mov
pop
les
ljmp
pop
and
mov
lds
int3
aas
test
add
mov
jge
in
push
rcll
cmp
ds
stos
aad
in
push
mov
and
ljmp
out
push
roll
mov
dec
pop
in
bound
push
mov
inc
mov
xor
idivb
xchg
inc
cltd
mov
lds
test
mov
mov
dec
xor
hlt
mov
adc
jmp
mov
xor
cli
cmpsl
xchg
out
sbb
inc
je
adc
or
fstps
loope
jae
mov
js
pop
imul
mov
in
gs
inc
js
sub
adc
es
pop
adc
pop
mov
mov
push
jg
imul
decb
mov
pop
dec
dec
je
lds
sub
in
pop
daa
push
ds
inc
xor
inc
add
add
xor
or
jmp
loop
rcrb
mov
lahf
push
jecxz
insl
in
pop
sbb
add
andl
movb
jl
dec
sbb
outsb
xchg
gs
or
xchg
xor
scas
inc
sahf
inc
xchg
dec
push
out
push
xchg
inc
pushf
insb
pop
sbb
and
out
insl
outsl
cli
sub
adc
mov
xchg
add
xchg
mov
mov
add
mov
xor
mov
rcll
jl
mov
lods
add
fdivp
xchg
loopne
sbb
and
arpl
pop
mov
inc
and
mov
outsl
aaa
inc
push
pop
push
sub
mov
mov
insb
test
js
jg
push
repz
dec
cmc
iret
mov
dec
jge
cmp
repnz
inc
jecxz
adc
cmp
mov
add
or
repz
add
add
daa
mov
or
xor
pop
xchg
in
lret
ljmp
lret
ss
mov
xchg
xor
fiadds
add
mov
inc
jle
mov
sti
imulb
jb
fwait
sub
ret
mov
loope
imul
sub
lret
jno
movsl
bswap
mov
push
xor
mov
movsl
out
inc
lds
or
pop
xchg
mov
lret
mov
mov
mov
jmp
incl
outsl
aam
lea
sbb
or
outsb
mov
mov
add
adc
pusha
add
jne
pusha
xor
movl
incl
pop
out
shrb
push
push
push
mov
data16
inc
fcoml
fxtract
shl
sub
pushf
mov
iret
add
int
jl
add
dec
push
mov
push
test
mov
pushf
cmp
jle
jl
popf
sub
pop
lock
mov
pop
shrb
add
sahf
sbb
xchg
fimull
xchg
fistps
movsb
imul
imul
adc
bound
jg
pop
mov
sub
adc
inc
mov
push
inc
stc
or
mov
in
and
insb
cmpsb
push
jp
repnz
jno
pop
jae
or
orb
pop
imul
pop
lods
outsb
rcrl
mov
cmp
inc
and
out
mulb
call
lret
cmpsl
leave
cmc
aad
xor
push
push
mov
movsb
sub
inc
mov
pop
sbbl
lods
loopne
xor
test
xor
jmp
sbb
sarb
stos
dec
data16
ret
or
jge
sub
lret
enter
or
cmp
push
inc
sbb
and
push
hlt
mov
gs
xchg
pop
mov
lds
in
sub
jbe
xchg
in
fildll
pop
cmp
into
fistpl
leave
imul
cmp
hlt
aam
xchg
sbb
aas
jb
xor
xor
out
fdiv
xchg
cmpsb
mov
loopne
fadd
popa
xor
ss
sbb
xchg
add
xchg
or
or
cli
sti
dec
out
rclb
pop
clc
insb
aaa
hlt
and
inc
sub
sub
neg
push
xlat
add
aas
fwait
mov
and
hlt
and
jl
das
xchg
mov
cmp
mov
dec
xchg
adc
addr16
popf
int
pop
mov
push
inc
push
in
inc
fucom
repnz
in
push
movsb
loopne
scas
arpl
clc
fldenv
or
dec
inc
sti
arpl
test
shrl
inc
es
dec
xor
js
orl
inc
dec
pop
mov
xor
mov
shrb
and
pop
adc
pop
out
test
andl
dec
scas
inc
imul
repz
and
mov
cmpsl
lret
lea
test
push
pusha
rolb
lahf
sub
mov
sub
jno
ds
mov
sti
xor
jno
or
ja
das
rclb
pop
mov
fildl
pop
sub
testb
push
push
js
sbb
mov
inc
lcall
cld
jmp
sarb
pop
enter
ret
jl
xchg
in
int3
mov
sbb
inc
fsts
fists
or
and
cmp
inc
add
loope
enter
lock
xor
dec
inc
call
sbb
jmp
mov
inc
jno
jmp
daa
outsb
sbb
mov
add
mov
mov
test
fistps
std
pop
es
lds
pop
xchg
push
sbb
lea
or
jmp
aaa
xchg
fidivl
jns
mov
cmp
call
mov
jle
enter
and
int
jo
ds
push
es
stos
in
mov
mov
popa
lds
xor
sub
inc
lea
inc
jp
jge
int
movsl
add
ficomps
cli
mov
or
jno
cmc
xchg
idivb
lods
pop
jb
cmp
add
addb
mov
xchg
dec
insl
cltd
je
mov
test
inc
sahf
neg
lods
xchg
fisttpl
mov
push
in
cmp
cmp
in
mov
jmp
imul
sbb
data16
add
inc
testb
add
aam
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
mov
test
add
sbb
add
xor
sbb
sbb
mov
sub
add
add
add
stos
sub
add
insb
mov
lcall
hlt
lret
add
add
pop
add
and
add
add
inc
jnp
add
add
add
add
pop
add
add
add
jmp
add
add
add
or
add
add
add
add
sbb
sbb
sbb
sbb
sbb
lods
mov
add
add
add
and
outsb
das
inc
dec
pop
ja
imul
push
outsb
or
insl
scas
sti
cmp
leave
pop
in
dec
je
cld
jne
decl
in
lea
add
adc
lock
mov
adc
adc
in
mov
add
lea
ret
dec
add
adc
sbb
add
incl
push
push
stos
xchg
incl
stos
int3
rorb
mov
lcall
xor
push
test
jne
add
sar
pop
pushl
mov
out
xchg
ljmp
adc
push
add
lea
lret
loopne
add
dec
mov
mov
fwait
pop
incl
jne
inc
adc
push
loopne
add
rolb
lret
add
pop
add
add
add
add
add
add
add
add
add
add
add
inc
jae
gs
inc
mov
fs
insl
je
gs
je
jo
sbb
outsb
jo
outsl
fs
gs
add
gs
add
inc
fcmove
insb
push
inc
add
jb
addr16
gs
je
add
xor
add
xor
add
add
in
je
add
ret
sub
cmc
and
testl
jo
mov
fmuls
mov
xchg
or
test
add
jb
incl
cmp
jbe
xorb
or
out
lret
jae
sahf
hlt
icebp
push
fiadds
jl
in
in
sub
mov
xchg
jnp
mov
sub
aas
mov
loopne
add
int3
nop
movb
adc
push
mov
and
ret
mov
mov
or
cmp
mov
int3
and
inc
push
xacquire
push
push
mov
or
sub
inc
hlt
xor
clc
xchg
mov
lret
outsb
lds
mov
lock
mov
push
adc
fs
add
pop
xchg
mov
jb
sbb
stos
lret
sub
or
push
insb
sti
addr16
ljmp
jmp
inc
test
sbb
aas
cmc
xor
es
xor
xchg
test
adc
cmpsb
xor
icebp
adc
lods
add
ljmp
sub
inc
jecxz
ds
pusha
test
clc
clc
xlat
bound
arpl
data16
xchg
imul
mov
stc
addr16
aas
push
mov
add
aaa
jnp
das
mov
test
inc
inc
cmp
test
or
insl
xchg
inc
pop
shll
lret
jmp
mov
dec
test
test
pop
stos
lahf
xchg
sbb
cmp
push
addb
shr
pushf
xor
mov
test
in
pop
xchg
pop
leave
andl
or
fldenv
jno
sti
hlt
inc
shll
and
loope
sub
fdivrs
fs
dec
clc
or
jae
stc
outsl
inc
dec
push
mov
adc
or
data16
sub
sub
lds
jns
push
xchg
shrl
imul
dec
movsl
and
or
push
push
popf
mov
push
xor
cmp
in
push
push
jp
mov
xchg
jg
cmp
mov
sub
dec
mov
cmpsl
jmp
jp
fbld
into
subl
sbbb
mov
push
inc
faddl
aaa
jbe
lods
push
cmpsb
int
out
xchg
mov
xchg
cmc
sbb
add
lods
repnz
pop
fiadds
jno
negl
sbbl
inc
cld
aam
jae
inc
in
loopne
add
lahf
inc
mov
and
xchg
mov
in
and
ret
inc
adc
xchg
pop
pusha
clc
mov
loop
fnstsw
imul
jbe
stos
jg
outsl
cltd
xchg
ret
xchg
cld
mov
cmpsb
xchg
mov
vpshufhw
cli
mov
ret
lret
and
push
mov
inc
push
insb
fwait
and
std
pop
leave
fcompl
mov
pop
xor
int
lret
jle
fisttpll
jg
jb
bound
pop
nop
push
jae
pop
jmp
jp
xor
subl
jno
push
xlat
shll
cs
pop
xchg
adc
xchg
bound
cmp
mov
xor
sbb
lock
call
cwtl
repnz
outsl
ljmp
arpl
xchg
mov
adc
div
dec
aaa
sbb
inc
in
out
daa
dec
add
add
ja
sub
iret
jo
out
leave
dec
cmpsl
xor
lods
push
dec
insb
std
inc
mov
pop
insl
cwtl
mov
repnz
lock
mov
cmpsb
push
cmpsl
outsl
dec
xchg
lods
movsl
inc
fistl
insl
dec
jg
in
cmp
into
mov
test
pop
inc
xor
rcll
leave
xor
push
mov
xlat
popf
mov
mov
cmp
jp
in
out
addb
out
mov
aaa
pop
shrb
adc
or
xchg
stos
fistps
loopne
jae
xchg
jle
adc
push
outsb
adc
pop
adc
jmp
mov
cmpsl
ja
jecxz
rcll
pop
xchg
sub
and
or
lea
icebp
mov
jae
mov
xor
in
xchg
adc
and
test
jnp
jns
mov
scas
mov
out
pop
pop
fidivl
ret
or
sbb
out
inc
lret
outsb
cmp
ret
imul
movsl
out
ljmp
hlt
out
push
sbb
xchg
lahf
add
inc
xchg
adc
or
sbb
fidivs
call
xor
adc
sbb
inc
cmp
fwait
mov
cld
pushf
cmpsb
pop
jmp
cli
push
xcrypt-cfb
cmpsl
addr16
ljmp
cmp
pop
dec
lea
xchg
pop
ret
sbb
cmp
mov
xor
test
inc
lahf
mov
jg
add
push
jp
loop
xchg
sub
and
xchg
adc
nop
sbb
in
gs
popf
or
fabs
xor
xor
mov
adc
push
mov
cmp
popf
loope
stos
pop
xchg
in
inc
and
outsl
cmp
out
mov
sti
cwtl
out
inc
or
es
cmp
mov
mov
sbb
pop
nop
insl
pushf
mov
movsl
and
and
pop
cmp
aad
daa
dec
es
cli
lods
bound
ror
fisttpl
addr16
imul
addb
outsb
mov
cmpsb
jg
xor
cmp
sbb
push
sub
cmp
pop
gs
sub
xor
fdivs
or
clc
lret
push
lods
or
fwait
js
ds
jg
dec
push
int3
push
sti
dec
fwait
pop
dec
addr16
es
loop
pop
andb
mov
insb
jo
xchg
jecxz
pop
and
arpl
xchg
jns
adc
mov
punpckhwd
in
iret
or
push
pusha
sbb
jle
dec
mov
jne
insb
cmp
mov
xchg
and
int3
mov
hlt
outsl
movsl
hlt
mov
test
cltd
inc
add
movsb
jge
imul
in
mov
jg
and
jno
sti
jmp
mov
pop
ds
mov
les
cli
mov
cltd
sub
push
lods
push
shl
cmp
shlb
cltd
lds
arpl
or
sbb
fstl
xchg
push
aad
xchg
fstpl
dec
xor
addb
stc
mov
cli
sbb
mov
mov
repz
add
mov
fdivrs
push
cli
outsl
cmp
lcall
push
adc
cmpsb
mov
and
push
sbb
das
movsl
add
add
push
push
sahf
jle
jecxz
push
lods
cmp
out
xor
inc
lahf
in
fwait
dec
stos
and
das
enter
cmp
xlat
xchg
adc
aaa
dec
stos
inc
int3
sahf
aas
adc
or
int
lahf
pop
push
insb
sbb
inc
lds
cmp
addr16
xor
test
enter
mov
pop
inc
cmc
fistps
xchg
mov
jle
sbb
jp
movsl
add
ficoml
ja
add
xor
inc
push
dec
lret
nop
nop
ds
shl
xor
sbb
lret
pop
dec
mov
shll
jp
sub
jno
sub
mov
leave
shlb
mov
pop
out
cmp
inc
addr16
jbe
cmp
push
cmp
or
or
push
xchg
pop
testl
test
not
jmp
int
mov
aaa
mov
pop
mov
stc
and
mov
jae
lea
insb
lret
xchg
arpl
xor
insb
lahf
mov
imul
in
jo
adc
std
cmp
nop
cmpsl
adc
js
or
ja
adcb
hlt
mov
in
inc
insb
push
cli
pushl
insb
pop
out
or
popa
fistl
out
paddb
mov
xchg
add
daa
lret
or
mov
or
call
push
cli
mov
add
dec
es
mov
lock
pop
inc
inc
mov
movsl
xchg
std
ja
jg
mov
inc
and
leavew
push
mov
sbb
adc
popf
and
cli
scas
add
enter
push
mov
dec
into
adc
xadd
jo
hlt
fstpl
dec
lea
movsl
adc
aas
jnp
and
vsubpd
sub
out
cmp
rcl
mov
mov
out
jns
push
jnp
nop
cs
add
xchg
add
fwait
pop
push
loopne
mov
addr16
jmp
xchg
or
xchg
sbb
mov
pop
adc
jbe
xchg
lahf
addl
jle
push
jge
jnp
and
test
push
push
mov
dec
ret
xor
stos
fmul
enter
les
dec
out
mov
repz
pushf
cmp
pusha
bnd
dec
jp
sbb
stc
and
adc
push
pop
fiadds
xchg
ret
sti
out
dec
das
jo
bnd
fcoms
cli
sub
jae
test
js
insb
test
mov
cmp
enter
inc
sub
into
iret
lods
lods
andl
push
lock
dec
xor
test
inc
addr16
movsl
cmp
fildll
xchg
push
fldt
js
aaa
mov
cs
and
fnstcw
jg
nop
xor
gs
jecxz
scas
dec
outsb
ret
int3
or
jmp
mov
mov
mov
sub
adc
mov
fdiv
sbb
fidivrl
mov
push
pop
xlat
aas
loop
pop
test
jns
cli
sub
bound
xlat
lds
inc
nop
sarb
xor
adc
mov
push
and
test
lods
testb
jno
inc
sub
mov
daa
cmp
pop
mov
sahf
in
fildl
pop
mov
sbb
pop
sub
enter
cltd
in
or
cli
xor
mov
lret
dec
pop
cmpsb
dec
fisubs
les
mov
mov
push
fscale
sub
or
push
pop
sub
push
movsl
adc
lods
add
inc
out
xchg
cmp
aad
rcr
push
scas
push
fwait
xchg
push
and
cltd
jb
ret
or
push
push
enter
jg
mov
xor
and
lahf
and
ss
sarb
lock
sub
or
inc
aad
addr16
mov
icebp
outsl
test
arpl
jg
push
mov
add
jp
int
mov
data16
mov
ljmp
dec
lods
rolb
cld
sub
mov
pusha
nop
mov
push
bnd
pop
jnp
pop
push
or
mov
stos
push
lea
pushf
add
push
orb
pushf
sub
mov
repz
and
lds
fidivs
cmp
ds
cmpsl
jbe
or
sahf
fld
lea
inc
pusha
push
divb
jb
lret
loopne
shrb
inc
and
or
and
test
jmp
cmp
sbb
lock
loope
test
jae
out
incl
gs
popf
les
movsl
xor
shrb
int3
jp
mov
add
aam
aaa
push
popa
mov
dec
xor
movsb
in
pop
inc
push
adc
mov
outsb
mov
ret
popf
repnz
sub
mov
cmpsb
push
adc
aam
cmpsb
cmc
repz
scas
scas
shrb
push
loop
rcr
ds
push
mov
mov
mov
mov
jmp
scas
es
sub
mov
icebp
pushf
pop
sub
inc
dec
imul
xor
cs
cmp
sbb
inc
rcll
dec
sub
in
mov
arpl
mov
dec
mov
push
mov
mov
and
lret
sti
rorl
stc
push
pushf
aaa
out
out
sub
add
push
or
fdivs
sahf
stos
mov
lret
out
mov
jb
outsl
and
imul
jg
jg
aaa
cld
mov
and
ret
and
jle
xor
out
push
jbe
and
movl
xchg
jmp
mov
imul
iret
pop
mov
stos
xor
or
fistl
repnz
in
stc
xor
ljmp
push
fs
xchg
hlt
pop
je
popf
mov
fadds
movsb
rorb
mov
data16
shrl
aad
push
out
xchg
lahf
xchg
mov
pop
mov
lahf
jg
mov
fdivr
xor
xchg
sbb
fwait
mov
or
mov
inc
xchg
push
mov
adc
out
and
mov
shrl
sbb
ret
pushf
xlat
sti
int
dec
mov
adc
in
enter
or
pop
into
push
xlat
movsl
int
add
fs
mov
je
pop
jp
icebp
inc
dec
adc
orl
fs
xor
jecxz
sbb
xchg
mov
divb
xchg
idivb
cmc
lcall
mov
mov
pop
cmp
and
sub
push
pop
iret
pop
and
test
test
xchg
mov
in
jno
fmull
push
aam
mov
addr16
xor
pusha
sub
jg
fldenv
jp
sub
inc
sub
imul
fwait
sub
lds
sti
ret
cli
into
or
sbb
rorl
outsb
stos
outsb
in
in
pop
mov
xchg
cmp
adc
or
in
aas
or
adc
jae
lods
adc
repz
xor
cmpsl
push
je
xchg
mov
mov
orl
rcl
lea
out
jg
push
push
inc
popf
jp
psrlw
push
lds
out
and
out
pop
mov
dec
shl
faddl
jp
out
ja
outsb
sub
jecxz
shl
mov
cli
outsl
fcomp
sbb
push
andl
mov
jl
gs
aaa
push
ss
repnz
sbb
dec
arpl
xchg
lods
adc
cwtl
xor
aaa
jns
cli
movsl
test
roll
es
addb
xor
and
fadd
add
mov
jb
mov
mov
scas
in
pop
cmpsb
fidivs
push
shrl
xor
roll
loopne
mov
rcll
aas
lahf
lock
mov
cwtl
mov
sbb
leave
test
int3
mov
xchg
popf
hlt
aaa
push
push
lret
loop
add
sub
inc
imul
insl
sbb
cmp
in
cmp
mov
jge
das
or
sti
cmpsl
out
dec
popa
sub
cmc
or
sti
addr16
lret
or
aas
js
lods
stos
or
adc
inc
mov
movsb
mov
rolb
pop
pop
add
fdivrp
lret
jo
xchg
ss
mov
loopne
mov
mov
cmp
lods
shlb
mov
sbb
loope
call
push
adc
inc
addr16
push
add
fmuls
mov
outsb
mov
jo
cmp
lds
ds
pusha
push
cmpsb
mov
out
je
iret
dec
out
inc
cmp
test
rorl
popl
test
or
sub
ret
and
and
dec
xchg
xor
sub
sbb
int
and
pop
inc
aaa
dec
stc
xchg
mov
or
inc
add
insb
out
enter
push
add
pop
adcl
push
into
mov
or
mov
pop
scas
add
sub
xor
testl
movsb
lock
xor
add
sbb
rcrb
ficoml
pop
sub
or
addl
xchg
mov
test
je
into
aas
repnz
xor
rcll
xor
and
imul
add
out
mov
mov
pop
pushf
cmp
mov
andb
fsubrl
cmp
rcrl
sbb
testl
bound
cltd
inc
inc
jb
js
adcl
sahf
inc
cmp
loope
call
addl
aam
test
cs
test
test
xchg
pop
dec
push
adc
outsl
adc
inc
test
and
xchg
out
and
add
shrl
mov
std
out
cmp
shrb
stc
mov
or
add
hlt
fcomps
cwtl
mov
pop
cmp
push
cli
repz
xor
xchg
in
iret
icebp
imul
or
repz
inc
jno
dec
xor
lahf
imul
jecxz
xor
push
rcl
hlt
loopne
psraw
icebp
mov
mov
addr16
mov
adc
dec
dec
mov
cmpsl
call
mov
ficoml
adc
dec
int
xor
mov
adc
ss
mov
ret
cmp
scas
inc
lahf
add
aaa
fsubp
mov
xchg
ret
cmp
xor
xchg
mov
ss
sbb
out
mov
scas
xor
jae
xor
repnz
sbb
cmp
out
hlt
dec
sbb
outsb
push
xchg
arpl
xlat
and
or
inc
pop
adc
lea
jle,pt
shll
loopne
pop
xor
test
xchg
jge
push
rolb
cld
sub
push
sbb
push
sub
gs
mov
mov
jno
xchg
inc
test
xor
lods
cwtl
into
ss
or
cmp
push
popa
push
jo
lock
jl
out
stos
cwtl
lea
repz
jbe
cli
pop
and
cmp
add
outsb
sub
test
xlat
pop
imul
push
test
pop
mov
lds
and
xor
adc
add
inc
jns
mov
imul
fwait
xchg
aad
mov
pop
stc
test
push
add
xorl
and
jo
test
into
ja
out
pop
add
pusha
insl
lcall
data16
jle
inc
adc
mov
ret
sub
imul
mov
mov
add
pop
bound
and
jae
scas
cmp
pop
lods
dec
xchg
add
mov
push
xor
aas
neg
fsts
cmp
and
sub
sbb
shrl
roll
jno
fistpll
mov
in
in
imul
push
or
push
imul
iret
cmc
icebp
daa
cld
pop
pop
and
cmp
pusha
inc
leave
push
and
xor
subl
call
and
sti
int
pop
fcoms
addl
and
push
xchg
int
jmp
fwait
int
mov
pop
add
inc
iret
pushf
push
pop
mov
sarb
mov
mov
aad
cmp
lret
adc
xchg
leave
push
jno
loop
fwait
in
es
pop
imul
jp
aaa
imul
rorl
imul
cmpsb
out
dec
xchg
jmp
out
test
cmpsl
push
bound
jns
mov
loopne
sti
cmp
outsb
push
xor
and
mov
cmc
scas
scas
jle
lea
dec
ja,pt
cmp
mov
std
jae
inc
mov
mov
jno
cmpl
push
cmpsl
jno
out
sub
and
dec
mov
dec
jbe
inc
and
or
push
mov
xchg
fisttps
fcomps
jb
into
shlb
shr
add
je
sti
push
imul
add
movsb
fwait
add
add
add
add
xor
add
xor
xor
xor
add
add
add
add
add
add
stos
stos
add
ja
mov
aam
dec
jb
and
add
add
add
repnz
add
js
cmpsb
push
add
add
inc
insb
add
add
add
mov
add
add
add
push
add
add
and
inc
popa
imul
outsb
pop
jae
jae
dec
add
push
shlb
add
inc
jecxz
jne
leave
lea
mov
add
in
push
cld
mov
add
or
je
incl
add
cltd
push
incb
inc
or
leave
or
or
xor
inc
push
add
adc
cmp
fsubl
and
sub
push
jmp
add
add
add
test
loopne
add
incb
or
add
je
push
and
cld
mov
and
incl
xchg
adc
add
add
incl
incb
addr16
enter
inc
xor
add
mov
hlt
adc
jbe
add
add
add
in
js
add
add
add
add
or
xor
add
je
js
outsl
outsb
imul
add
gs
inc
outsb
imul
push
les
add
gs
cmc
imul
add
pop
gs
outsl
add
inc
outsl
insb
inc
insb
dec
popa
jb
jae
add
add
inc
jbe
data16
add
ret
adc
imul
dec
or
xchg
push
loope
mov
out
xchg
fmuls
and
adc
push
rcrl
in
cmp
mov
and
test
mov
lods
xchg
sarb
scas
fwait
lock
cli
xchg
inc
jmp
push
cmpsb
ja
xchg
lahf
ss
mov
int
cmp
inc
inc
jle
and
ret
cmp
inc
ret
sub
loope
shlb
lret
jns
cli
test
pop
jnp
fimull
and
mov
dec
jecxz
aad
lods
test
fsts
mov
fidivrs
subl
adc
hlt
sub
pandn
push
fmuls
jb
xor
iret
push
push
sahf
int3
pop
outsb
popf
fildll
push
and
aad
and
lret
xchg
mov
sbb
repz
nop
xor
jb
in
or
gs
test
mov
inc
xchg
ss
aam
das
jecxz
stos
cld
jo
and
aad
or
in
out
out
pop
push
adc
jb
jle
xlat
cmp
dec
pop
mov
pushf
stos
or
dec
push
or
mov
mov
xchg
pop
test
subb
loopne
sbb
cld
loope
outsb
jno
mov
xor
addb
inc
sbb
add
aaa
fnsave
adc
call
dec
in
aad
jne
cmc
jb
popf
pusha
push
std
mov
fmuls
cmpsl
jno
cmpsl
fmuls
xchg
mov
rcl
sub
pop
sarb
aas
repz
pop
pop
stos
ret
dec
xlat
mov
test
fwait
and
inc
inc
jecxz
pop
outsl
mov
mov
lret
mov
xchg
fisttps
aam
call
add
out
mov
sbb
int
outsl
cmp
fidivrs
mov
jle
jecxz
gs
dec
or
fnstcw
rcr
jmp
pop
mov
push
lods
in
enter
mov
mov
ds
adcl
frstor
mov
push
inc
push
xor
xorl
dec
pop
add
pusha
and
andb
inc
fstpl
sti
std
fistps
ss
or
xor
jle
aam
mov
inc
xchg
pop
adc
out
inc
testl
and
xorb
xor
mov
mov
xchg
mov
cmc
psubusw
sbb
fcmovnu
jge
pop
sti
cmp
pop
or
push
call
sbb
cmp
mov
dec
sub
push
dec
xor
push
xchg
xor
push
xchg
cmc
into
rcr
rol
cmp
mov
add
or
adc
in
sbb
movsb
inc
idivb
mov
out
xor
xchg
pop
shrl
pop
lds
sub
fwait
out
subb
sbb
in
jp
xchg
xchg
in
sub
dec
fwait
or
adc
aas
and
and
sbb
xor
scas
or
icebp
xchg
add
in
imul
ss
hlt
push
mov
sahf
adc
loope
sub
imul
mov
push
mov
add
jl
and
sbbb
jl
into
jp
ret
ror
pop
ljmp
stos
in
lock
mov
sbb
pop
xchg
sub
lods
into
addr16
jp
xor
mov
cmp
repnz
add
fwait
mov
test
lcall
lret
andl
je
stc
dec
mov
pop
dec
and
into
xchg
pop
rolb
jl,pt
aam
or
mov
pop
cmp
lds
es
cmp
cmpsb
popa
adc
pop
pop
pushf
jbe
out
mov
in
or
jns
adc
push
lcall
sub
ret
sbb
add
jno
jnp
lock
push
sti
ss
leave
dec
pop
dec
bnd
dec
adc
cmp
rorl
fildll
mov
out
push
mov
jns
into
aas
loopne
cmp
sbb
jg
movsl
sti
mov
adc
xchg
adc
fstp
jbe
push
cmpb
cmp
negb
inc
xor
ljmp
inc
mov
sbb
mov
xor
push
das
sub
jge
mov
arpl
push
push
vmaxpd
jl
out
int
pop
push
xchg
les
mov
push
mov
rcll
outsb
cwtl
mov
lahf
push
faddl
jae
out
stos
fistps
jge
imul
aas
insl
push
mov
or
sbb
mov
jmp
std
aam
mov
push
pop
inc
sbb
nop
arpl
cmpsl
lcall
ret
subb
outsl
dec
inc
js
test
nop
dec
stc
enter
jp
or
pop
idivb
xchg
stos
cmp
test
mov
add
test
outsb
push
sbb
cli
cltd
mov
vcmpss
push
std
icebp
movb
arpl
xchg
clc
aaa
push
pop
shrl
dec
outsb
dec
scas
mov
sub
xchg
xor
negl
or
sbbb
fisubl
or
stc
jge
push
xchg
gs
push
mov
mov
mov
imul
pop
mov
lahf
insb
jecxz
mov
or
aas
stos
decl
aaa
inc
push
inc
jle
xor
jge
loopne
inc
xchg
and
add
pushf
pop
push
lock
jb
aaa
add
mov
pop
push
cmp
enter
jge
dec
cmp
je
or
mov
mov
and
fildll
jnp
leave
pop
bound
cmp
dec
aas
lret
cmp
dec
arpl
outsb
test
fs
or
xor
es
or
das
outsl
cltd
mov
stos
jle
pusha
sub
sbb
mov
imul
xor
push
jne
mov
testl
bnd
mov
jae
ds
sub
hlt
sub
and
pop
lret
cmp
cmp
scas
or
jno
test
jmp
lods
push
cld
xchg
cmp
jle
daa
adc
ror
out
add
daa
or
in
cmc
scas
fstl
cwtl
int3
loopne
xchg
dec
lock
push
lea
sbb
mov
jge
or
push
int
mov
or
ret
xor
int
sub
iret
pop
adc
fdivs
test
data16
xor
sbb
int
movsb
mov
inc
mov
insl
sbb
ss
xchg
pusha
xchg
sbb
fnstcw
push
xorb
cmpsb
jne
ror
out
pop
stos
inc
push
adc
in
fisubs
cwtl
add
push
jg
test
jge
aad
repnz
mov
inc
sbb
mov
push
les
xlat
sbb
pop
in
or
inc
es
in
packsswb
pop
or
ds
mul
scas
pop
outsb
inc
and
mov
jnp
int
push
lock
mov
into
cmp
add
jne
dec
jns
out
mov
in
xchg
pop
or
hlt
push
xchg
sbb
mov
sbb
sbb
or
pusha
sbb
test
sub
stos
mov
and
jbe
or
dec
in
mov
ja
push
push
loope
inc
jl
loope
movsl
int3
out
xchg
shrb
push
xchg
loop
or
or
mov
sahf
lods
sbb
sbb
insl
pop
push
pushf
and
stos
inc
mov
es
dec
outsl
sarb
sahf
xchg
jne
stos
and
bound
inc
jmp
lods
push
and
ja
mov
jecxz
mov
insl
sbb
cmp
mov
iret
out
insl
push
and
dec
mov
mov
adcl
scas
xchg
pop
lahf
and
xchg
leave
pop
lods
jg
jne
out
dec
and
in
iret
in
test
cmpsl
xchg
aaa
mov
pop
std
fildll
inc
mov
sub
adc
adc
inc
pop
outsb
push
xor
cmpsb
aad
imul
jb
add
scas
cmpsb
and
cmp
jmp
jl
sbb
mov
mov
jns
mov
ficoms
mov
shll
int
dec
dec
mov
xor
or
pop
push
xor
jno
lds
and
add
rolb
and
mov
mov
fwait
jge
pop
adc
cmp
aas
inc
je
ss
dec
leave
in
inc
test
mov
mov
pop
pop
pop
lret
loop
cmp
andl
cmp
std
and
rorb
clc
xchg
jp
arpl
sbb
out
test
ret
add
pop
add
cltd
les
cli
std
pop
jg
daa
cmp
movsb
mov
out
dec
pop
scas
adc
dec
pop
jg
scas
mov
movzwl
addr16
pop
xchg
add
jbe
push
mov
mov
mov
in
mov
lahf
jmp
insl
aam
sub
pop
pop
les
lcall
xchg
push
mov
test
mov
pop
xlat
fdivr
repz
jno
xchg
rol
bnd
or
push
mov
lods
sbb
or
pushl
test
cwtl
insl
or
insb
sarb
shlb
pop
lret
push
mov
mov
adc
jg
cmp
int
out
pop
mov
pop
add
lret
data16
adc
or
xchg
aaa
push
mov
inc
mov
stc
stc
jnp
sub
fildll
and
test
and
arpl
dec
sbbb
lods
push
in
outsl
adc
mov
call
inc
addb
js
push
pop
inc
jb
rorb
mov
adc
jecxz
pop
pop
push
es
pop
subl
mov
icebp
fisttpl
pop
inc
arpl
cmovs
add
into
mov
or
inc
inc
cmp
sbbb
jle
dec
movsb
aam
or
and
icebp
push
pop
mov
push
mov
enter
xor
push
leave
pop
mov
aam
arpl
mov
scas
dec
pusha
out
push
js
mov
adc
sub
adc
adc
cmp
scas
lahf
pop
lahf
dec
test
add
fwait
push
mov
mov
imul
mov
add
imul
pop
pop
jge
jle
xchg
pop
rcll
hlt
dec
push
or
ja
push
pop
sub
push
cwtl
jge
lods
jbe
cld
mov
cmp
shlb
push
lea
mov
mov
int
push
repz
icebp
sahf
imul
bound
push
xchg
mov
xchg
stos
test
mov
cmp
mov
add
mov
jo
imul
ss
cmp
ja
lock
test
out
testl
lret
ret
addr16
ljmp
lahf
cmp
int3
mov
sti
inc
ljmp
and
jecxz
or
jl
popa
inc
fucomp
or
subl
popa
outsl
aas
data16
call
out
pop
mov
inc
pop
jns
and
movsb
or
fwait
cmp
xchg
adc
sbb
lds
xchg
mov
fstpl
mov
xchg
add
or
sub
push
mov
bnd
mov
mov
js
imul
mov
push
jnp
lea
mov
sti
or
xchg
mov
mov
shlb
pushf
popf
and
lahf
sub
popa
stos
lea
cld
mov
lea
arpl
lahf
jo
inc
addl
ljmp
sbb
dec
ss
mov
push
sub
sub
or
jae
mov
fmuls
and
xchg
pop
clc
xchg
insb
lret
add
mov
mov
push
sti
mov
cmpsb
push
rorb
scas
je
pop
or
or
je
sbb
insb
ds
cli
xchg
in
mov
sub
cmp
mov
leave
out
repz
sti
daa
aas
pop
pop
jb
mov
lret
stc
bound
push
mov
lds
jle
int
pop
adc
lret
jl
int3
adc
dec
mov
dec
stc
in
and
pop
cli
and
mov
int
add
ja
imul
testl
shl
movsl
jae
cmp
and
aas
xchg
clc
xchg
sub
scas
push
cld
xor
outsb
push
inc
stc
push
jp
dec
cltd
stc
mov
shl
pop
mov
int
jle
xchg
test
insl
stos
jb
dec
sub
fbld
fcoml
popf
ss
sub
sbb
arpl
cmc
in
pop
mov
jmp
mov
and
or
jmp
ds
sbb
out
inc
daa
test
lods
test
cmp
neg
inc
xor
aaa
adc
sbb
mov
add
jmp
or
and
xchg
cltd
adc
mov
repz
scas
pop
js
pop
or
test
cmp
mov
xor
bound
dec
jp
ret
fsubrl
or
mov
cmp
in
jns
inc
hlt
xchg
xor
test
jno
pop
inc
and
or
loopne
cmp
imul
mov
add
dec
push
sarl
mov
jp
xchg
adc
add
popl
add
scas
scas
icebp
or
mov
adc
sub
sahf
inc
dec
sub
push
mov
adc
sbb
subl
fs
scas
or
xor
xchg
fnstsw
stc
push
adc
call
sahf
jg
jg
mov
inc
mov
pop
mov
out
sbb
sbb
push
adc
lret
pop
clc
and
jbe
xchg
ja
lcall
imul
jecxz
push
decb
outsb
mov
or
test
mov
or
sub
stos
shrb
sub
xlat
dec
or
inc
push
data16
insl
cmc
cs
roll
out
mov
mov
hlt
inc
mov
das
ds
aaa
adc
and
mov
mov
push
scas
push
ret
iret
or
push
push
mov
jae
aam
leave
xor
and
push
xor
cmp
shlb
push
or
sbb
stos
addr16
sti
add
movsb
add
push
sub
clc
dec
mov
push
mov
mov
mov
or
ds
fsubl
mov
push
sub
inc
adc
in
shlb
ret
and
and
xchg
inc
rcrb
mov
mov
std
and
out
inc
push
inc
jg
jmp
mov
fidivs
mov
sahf
adc
dec
insl
pusha
push
sarb
ficompl
jl
sub
rol
dec
push
or
jnp
pushf
mov
addr16
in
pop
xor
outsl
jle
jmp
sub
call
pusha
pop
dec
addb
test
push
xchg
cmp
lahf
cmp
mov
insb
sbb
outsb
mov
mov
aam
xlat
insl
shrb
outsl
push
pop
inc
inc
stos
lret
mov
xchg
movsb
lea
popf
movb
adc
dec
std
lcall
jge
cmc
lds
jno
es
cmp
loop
in
push
xchg
in
push
ud1
xchg
stos
cmp
shrl
outsb
cmpsl
inc
push
loope
xchg
pusha
jmp
push
fldcw
arpl
call
or
addb
fs
add
push
add
xchg
insb
cmp
les
stos
add
bound
lret
shrl
mov
les
xchg
cld
mov
cmc
ljmp
jbe
scas
lcall
adc
add
insb
and
loop
inc
vpackssdw
push
or
lea
fstl
sub
inc
xor
jo
ds
adc
dec
jo
push
adc
mov
and
loopne
cmc
ret
fstl
jne
mov
cmp
jle
push
out
pop
adc
sbb
or
hlt
mov
xor
jb
outsl
punpckldq
fstpl
cmpl
stos
push
push
pusha
pusha
or
xor
fstl
xor
clc
mov
xchg
jb
pop
scas
push
cmp
sti
dec
lods
xchg
sbb
pusha
sub
xchg
xor
xor
movsl
icebp
xor
pop
out
cmp
pop
jo
std
xor
repnz
test
insb
xchg
mov
xor
xchg
fmuls
sbb
dec
jle
mov
and
sbb
add
jl
xor
cmp
fmulp
xor
sub
jno
push
jge
out
inc
mov
icebp
mov
mov
sub
leave
sub
cmp
test
vmwrite
sbb
mov
aas
insl
pop
gs
dec
in
repz
add
mov
dec
fadd
add
push
or
leave
sub
lock
jecxz
test
rol
mov
adc
int
pop
pop
fists
testl
cltd
xchg
mov
sbb
es
lret
fmuls
enter
xchg
cmp
arpl
push
popa
jne
sub
pop
push
in
push
inc
stc
jnp
out
or
ret
popa
cmp
inc
and
mov
sbb
cmp
jge
inc
mov
aaa
add
lea
adc
cwtl
mov
sub
mov
push
xchg
inc
in
xor
iret
jge
pop
cmp
mov
adc
mov
or
nop
pop
adc
add
xchg
stos
cli
inc
jb
cli
jle
loopne
mov
dec
and
out
stos
mov
repnz
cmc
rcrl
mov
push
in
dec
fs
inc
stc
dec
or
add
sti
out
pop
and
add
jle
fisttpl
pop
and
fildl
push
mov
mov
pop
push
ja
pop
pop
lcall
jns
cmovb
cmp
lret
push
adc
jp
fdivs
xchg
cltd
lahf
xor
jne
jmp
cmc
divb
sub
cwtl
test
lods
aas
fcomps
sti
mov
call
fucomip
sbb
mov
mov
cmp
enter
pop
imul
push
sub
cmp
out
fwait
cs
push
les
addr16
sbb
add
xchg
push
xor
int
jmp
or
sbb
push
xchg
leave
or
jne
push
or
call
lahf
neg
pop
jle
xchg
sub
pop
mov
xchg
nop
push
loopne
enter
pmuludq
mov
inc
sub
cmp
inc
push
or
mov
mov
pop
mov
sub
dec
jl
in
scas
scas
fcmovb
dec
jno
mov
sub
pop
stos
out
lods
mov
cmp
jg
fists
xchg
and
sub
in
mov
or
fisttpll
jo
cmp
mov
push
shrb
mov
scas
fadds
inc
add
add
add
jbe
data16
add
push
push
es
pusha
add
add
add
add
add
mov
add
add
add
add
add
add
pop
add
xchg
add
adc
add
addb
add
stos
stos
add
loope
mov
pushl
jb
jo
fmull
push
outsb
jne
or
add
add
add
sub
inc
add
add
add
lods
mov
add
add
sbb
add
add
or
add
add
add
add
add
add
pushf
add
and
add
jae
inc
imul
add
shufps
enter
or
pop
push
lea
mov
mov
inc
leave
in
or
inc
incl
clc
add
cld
or
or
lcall
rolb
push
add
inc
adc
dec
insb
push
sti
rorb
mov
add
mov
cmp
add
jmp
add
pop
adc
add
adc
add
xor
call
add
decb
cld
test
std
std
add
and
cld
decl
add
enter
add
push
cmp
clc
add
add
jne
lret
mov
jns
adc
lock
push
in
push
hlt
adc
add
add
add
cmp
add
add
sub
add
add
inc
gs
into
roll
inc
inc
outsl
outsl
std
outsl
test
insb
imul
inc
jns
mov
jbe
je
arpl
int3
push
gs
cs
outsl
inc
pushf
jb
insb
jge
add
outsl
imul
je
je
je
insb
in
jl
add
add
add
add
add
add
add
add
int
add
add
add
add
add
add
add
mov
bnd
shrb
gs
data16
aad
xor
pop
shlb
icebp
lods
lods
pusha
push
pop
sarb
jne
sub
ds
dec
scas
sbb
mov
lods
cs
fwait
pop
push
adc
mov
and
sahf
cmp
xor
add
push
mov
sub
es
movsb
ret
enter
adc
jecxz
dec
add
sahf
xchg
xchg
ljmp
push
inc
insb
sub
rclb
pusha
or
out
into
mov
sbb
sub
xchg
fsts
dec
push
fdivrp
inc
xchg
je
sub
mov
pop
pushf
lret
jge
outsb
shl
mov
mov
pop
pop
dec
mov
fdivrs
xor
scas
xor
outsb
je
or
fildll
out
jbe
mov
fs
rorl
pop
xchg
mov
sbb
lock
test
rolb
imul
mov
cltd
push
mov
pusha
clc
nop
daa
adcb
push
filds
fldt
call
fidivrl
adc
mov
dec
xor
decb
adc
and
cltd
mov
push
xorb
sub
inc
jp
ss
outsb
dec
xchg
jmp
imul
dec
cmp
stos
sahf
movsb
cmc
das
dec
mov
sbb
cmp
stos
mov
sbb
adc
sub
xor
inc
mov
add
mov
sbbl
dec
repnz
xchg
xor
xchg
fsts
and
and
test
push
sub
mov
ss
repnz
jnp
dec
inc
std
sub
frstor
xchg
aam
mov
inc
mov
cmpsb
pushf
xchg
add
add
imul
out
jnp
push
out
xchg
dec
cmp
ret
cld
mov
sub
cmp
test
js
rorb
mov
fnstenv
inc
mov
cld
jae
imul
shll
mov
sub
xchg
push
xchg
call
rcr
sarl
dec
shll
fsubrs
cmp
xor
or
orl
and
mov
push
insb
inc
cmp
mov
fists
pop
outsl
addr16
adc
xorb
daa
cmp
arpl
and
and
cwtl
fwait
movsb
mov
inc
shl
and
add
cs
out
cmc
adc
add
lds
movsb
je
out
and
and
fldt
xchg
mov
adc
add
sbb
movsb
or
sbb
not
adc
imul
insl
sbbb
insl
ret
push
jne
mov
fimuls
lahf
scas
pop
stos
adc
je
cmpsl
jns
ds
jg
or
lods
test
sahf
and
decl
sub
xchg
push
xor
inc
or
aaa
xlat
loop
frstor
adc
aaa
sub
pop
jns
ljmp
mov
xchg
test
mov
stc
jmp
push
ljmp
mov
cli
mulb
iret
cld
xchg
pusha
adc
mov
add
xlat
ret
mov
inc
jb
pop
pusha
xchg
movsl
cmpsl
pop
inc
xchg
inc
fs
gs
loopne
ja
or
cld
dec
add
push
stos
idiv
lret
mov
in
sbb
hlt
or
jae
jb
ret
subb
adc
enter
add
sti
stos
adc
cmp
pop
xchg
leave
cltd
cltd
imul
sub
es
negb
xor
rcl
daa
aas
xor
push
add
pop
push
shll
sbb
adc
inc
ss
xchg
jnp
add
js
fdivs
jg
mov
jg
test
sub
jns
jmp
fwait
cmp
ret
jb
fsubrs
xchg
xchg
js
mov
sub
mov
inc
test
nop
or
mov
jl
mov
xchg
cmp
daa
bound
inc
into
adc
xchg
push
mov
xchg
repz
inc
popa
movsb
loop
inc
jp
outsb
push
cmpsl
hlt
push
insb
iret
jge
call
je
insl
jle
sbb
sbb
cmp
test
mov
add
add
pop
push
out
loop
or
sti
movsb
loopne
xchg
dec
cmc
sbb
mov
into
push
int3
or
pop
mov
cmp
int3
shll
in
idivl
mov
sbb
jge
xor
push
jle
movsb
sbb
daa
scas
mov
aad
mov
scas
add
pop
sarl
nop
inc
cmpl
xor
inc
sbb
es
and
or
hlt
lahf
fwait
adc
jo
xor
jnp
into
fwait
pop
mov
fmuls
dec
bound
enter
dec
sub
stc
divl
lcall
dec
adc
adc
add
push
xchg
out
pop
leave
out
call
loopne
in
and
push
pop
cmp
insl
dec
nop
and
ja
pushf
adc
clc
fs
mov
cmp
cltd
mov
adc
dec
sub
test
mov
test
fistpl
jecxz
dec
out
insb
ljmp
stc
nop
movsl
or
notb
fisttpl
dec
ljmp
ds
sub
mov
pop
pop
or
xchg
cmp
in
loope
mov
add
test
outsl
cmp
aas
sub
push
sbb
negb
in
mov
mov
cmpl
pop
popl
xor
hlt
sub
xor
push
test
mov
rol
inc
out
and
and
lock
mov
mov
ljmp
sub
pop
sbb
mov
stos
push
ret
movsl
out
mov
jl
push
inc
in
insl
xor
in
stos
cli
jbe
test
xchg
jmp
xlat
out
sub
sbb
cmp
das
xchg
push
sbb
addr16
push
and
xchg
sub
and
xor
movsb
jmp
mov
cmp
cmpsl
jb
adc
cmp
inc
aad
xor
mov
and
xor
imul
mov
cmp
cltd
pushf
push
stos
mov
cmp
mov
fwait
xlat
ret
lret
fcoml
call
inc
xor
add
adcl
cmp
int3
ss
jb
mov
jne
pop
adc
pop
push
xchg
xor
in
andb
and
out
pushw
nop
adc
int3
dec
fnstenv
inc
js
push
outsl
test
mov
mov
jl
inc
test
insl
sub
in
das
repnz
test
ret
push
loope
push
mov
into
out
cld
mov
cmp
insb
mov
lds
dec
fucomip
adc
mov
sarl
and
stc
pop
mov
cmp
lods
cmp
in
sbb
lahf
sbb
pop
outsl
gs
push
inc
fmuls
push
xor
addl
sbb
mov
mov
mov
mov
xlat
xchg
sbb
cs
addr16
push
mov
sti
enter
xchg
inc
cmp
and
xor
sub
push
pop
push
inc
push
test
mov
enter
subb
movsb
gs
inc
iret
jle
or
cli
add
mov
enter
dec
push
pop
je
inc
sbb
lea
stos
dec
mov
adc
xor
jp
add
adc
cli
mov
int
add
mov
pop
mov
jnp
xchg
and
aad
repnz
and
mov
repnz
jne
dec
mov
cld
mov
fsub
or
or
mov
rcr
enter
pop
into
mov
repz
xor
repnz
mov
xor
sbb
pop
add
clc
mov
das
daa
test
xor
fsubr
mov
lret
cwtl
scas
test
cmp
xchg
notb
inc
cmp
insb
jb
sub
mov
arpl
mov
addr16
sub
rcrb
xor
pop
pop
je
stos
mov
scas
xor
bound
pop
xchg
lret
cmp
sub
frstor
sarb
gs
cmc
lahf
jb
outsb
addb
mov
dec
mov
repnz
call
push
stos
or
cmc
push
dec
test
stc
arpl
js
cmpsb
out
jg
adc
dec
in
pop
add
cltd
in
iret
push
out
push
mov
loopne
aam
push
mov
dec
dec
mov
and
daa
cmp
fcomps
ljmp
adc
scas
and
sub
inc
int3
out
sub
hlt
cltd
sbb
jbe
test
pop
mov
lods
adc
jo
fcomi
sub
inc
jne
cmp
jno
xchg
ror
pushl
jp
or
adc
push
or
jecxz
addr16
dec
adc
mov
mov
dec
jl
cmp
dec
imul
xchg
pop
cli
enter
nop
cwtl
scas
into
push
push
repnz
cmc
mov
add
call
out
cmp
insl
jb
push
dec
pop
mov
and
lret
sahf
ljmp
fwait
test
orl
cmpsb
jno
aad
in
inc
int
mov
cmc
loopne
jle
xchg
imul
jno,pt
inc
push
xor
cmovbe
mov
shrb
dec
xor
mov
cmp
das
data16
cmp
mov
push
scas
rcr
cmpsb
dec
sar
lcall
test
xor
inc
arpl
test
ficompl
jmp
and
jb
dec
lds
jle
xor
mov
call
fisubs
sub
inc
mov
js
aam
and
or
xchg
push
adc
scas
cmp
sbb
inc
fwait
and
jne
pop
inc
mov
outsl
pop
xchg
add
mov
dec
stos
mov
jge
fisubrl
rcrl
inc
roll
mov
mov
xchg
mov
jecxz
sub
and
xchg
clc
int3
xchg
xor
sub
or
adc
xchg
mov
test
stos
cmp
mov
and
clc
push
sbb
pusha
movsl
jmp
lcall
ja
jmp
and
mov
test
xchg
scas
ficoms
mov
adc
out
in
xchg
sahf
adc
dec
pusha
xor
add
testb
jmp
scas
stos
adc
ret
outsl
xchg
dec
push
pop
ret
scas
xchg
cmc
jo
jbe
enter
add
push
add
and
addr16
call
cmp
ds
or
xor
in
sub
cld
xchg
jb
js
adc
adc
mov
fstl
and
btr
fsubs
icebp
sub
inc
pusha
call
adc
mov
ljmp
lret
push
push
or
dec
mov
cmpsb
fiadds
loope
lret
adc
hlt
es
push
test
popf
mov
jle
fimull
mov
out
push
push
dec
icebp
stos
or
mov
pusha
int
out
push
insb
and
or
fnstcw
pop
push
add
add
pushf
daa
mov
lods
pop
pop
lods
mov
mov
aas
test
sti
or
dec
mulb
inc
or
mov
or
xor
pop
loope
push
addr16
lcall
loop
out
and
jmp
pop
aas
xchg
stos
sbb
into
fsub
adc
js
push
movsb
lea
jb
and
inc
insb
jge
inc
sbb
aad
ds
jns
aad
lock
jg
data16
pop
pop
test
sbb
adc
rcr
stos
cmp
clc
enter
nop
mov
cmp
rclb
push
mov
psubsw
sbb
aas
stos
aad
cmpsl
lock
shlb
aad
jbe
ds
push
notl
popf
xor
lahf
cmp
add
rol
xor
cmp
sub
aam
push
test
pop
sti
stc
push
jg
mov
adc
push
cmpsb
push
or
adc
int3
popa
imul
bound
test
inc
sub
sti
in
xchg
push
inc
jge
mov
inc
mov
pop
sbb
sub
and
out
dec
loop
push
xor
sbb
xor
sbb
les
fwait
mov
out
sbb
ss
scas
pop
xchg
pop
or
mov
in
clc
in
nop
out
push
pop
and
mov
push
sbbl
adc
lea
dec
sub
out
lods
sbb
in
lods
ljmp
outsl
cli
stos
iret
lret
les
inc
cmp
inc
adc
inc
bswap
out
or
rcll
adc
shll
out
sub
lods
mov
mov
sub
jo
mov
fwait
lea
iret
push
sub
cmp
les
xchg
fs
cmp
sbb
xabort
sub
sub
add
aad
in
repnz
lock
fwait
jo
mov
lock
dec
jl
stc
sti
xchg
mov
and
and
mov
dec
pop
loopne
add
or
ret
or
inc
jbe
out
rorb
push
imul
mov
out
shll
mov
leave
lret
fwait
dec
call
cmp
sbb
jne
xor
adc
dec
inc
loopne
arpl
gs
mov
out
fldl
push
out
and
loop
xchg
pushf
and
dec
cltd
push
jmp
sub
mov
imul
mov
fistps
mov
shlb
mov
gs
sbb
cmc
sti
test
dec
and
push
fcmovnb
sbb
ljmp
adc
adc
sahf
aad
xlat
pop
arpl
pop
or
stos
in
xchg
fsubrl
call
mov
jbe
add
push
mov
addr16
pop
adc
mov
inc
sbb
imul
test
cld
cld
xor
cmpsb
mov
andb
jnp
push
imul
daa
jno
in
in
lds
lods
adc
inc
and
mov
fwait
xchg
insb
fildl
sub
das
ljmp
fldt
jg
fsubr
sahf
inc
adc
jb
inc
adc
jecxz
jnp
rcll
cwtl
shlb
sbb
aas
xor
jns
xor
mov
pop
sbb
call
push
ffree
sbb
fs
ret
mov
scas
in
mov
lret
jb
mov
jae
adc
arpl
out
je
inc
inc
pop
iret
movsb
jg
aas
pop
xchg
xorb
pop
movsl
cmp
inc
or
xorb
mov
mov
mov
jae
aaa
rolb
xchg
pop
insb
sub
test
dec
pop
xchg
scas
lret
xor
sbb
inc
sub
lds
js
xor
shlb
fsubp
pop
ja
lret
lret
ljmp
xor
shrl
int
push
cli
data16
clc
loope
pop
mov
jno
cmp
cmp
imul
dec
inc
fs
jb
andl
pop
dec
call
dec
xor
jge
shl
out
movsl
imul
stos
shrl
cmp
imul
and
js
mov
and
fwait
xor
repz
adc
xor
loope
nop
sbb
fdivr
lcall
pop
fadds
int
cmp
jno
mov
out
shl
filds
mov
mov
scas
pushf
bound
sbbb
into
xor
or
cli
gs
push
pop
pop
test
mov
sahf
xchg
pop
mov
jb
inc
stos
daa
rol
sub
mov
mov
and
xchg
sub
in
xor
addl
inc
cmp
cmp
inc
mov
xchg
int3
cmp
out
adc
sbb
in
and
lock
jge
xchg
mov
adc
sub
pop
shl
sbb
mov
shrl
ja
mov
loop
dec
or
js
pop
xor
or
mov
repnz
mov
loop
xchg
fdivrs
roll
scas
mov
pushf
push
fucom
mov
fcomps
mov
sub
xor
mov
dec
jecxz
inc
cmp
push
into
inc
into
sbb
aaa
cmpl
sarb
pop
js
test
mov
aam
push
test
clc
jns
mov
cmp
pop
stos
xchg
ret
repz
pop
mov
or
push
xchg
aad
sub
mov
or
jp
adc
mov
add
idivl
stc
pop
xchg
repnz
leave
jle
aaa
add
shr
pop
loopne
mull
rol
out
lods
subb
mov
test
popa
sbb
insl
xlat
or
fsubs
mov
xor
loope
jecxz
inc
xchg
in
leave
pop
loop
mov
mov
test
jae
popf
push
mov
push
jns
pop
jmp
and
mov
mov
sub
mov
jge
cli
cmpb
and
cs
inc
rcrl
outsb
jns
sbb
pushf
xchg
dec
xor
sbb
cwtl
adc
xchg
insl
sub
gs
mov
pop
dec
pop
mov
ret
enter
inc
dec
dec
adc
adc
xor
pop
cmp
fiadds
scas
sub
int3
das
jg
sub
and
inc
inc
mov
leave
jbe
fisubs
mov
and
jmp
out
xchg
popa
aaa
push
pop
push
xchg
xor
ficoml
orl
pop
sbb
inc
leave
jge
adc
mov
lods
dec
xchg
lahf
add
pop
mov
jns
mov
jns
aad
adc
mov
sub
push
pusha
cltd
cwtl
int3
pushl
cmp
rcr
mov
sub
mov
sub
loope
mov
or
dec
shll
xchg
adc
pushf
push
dec
ljmp
loop
repz
jge
xor
cmp
ss
lods
outsb
jo
cmpsl
call
push
push
jle
mov
mov
xor
in
ds
cmp
sbb
adc
mov
adc
ljmp
add
es
jnp
daa
rcll
mov
lods
mov
and
sub
adc
mov
cs
pop
std
mov
inc
pop
xor
cmp
insl
mov
jle
repz
test
out
aad
and
mov
popa
sbb
xchg
add
in
cmp
push
jl
jnp
fwait
sub
push
xchg
mov
rolb
xor
stc
xor
idivl
push
adc
daa
xor
imul
xchg
cmpsb
out
gs
add
imul
jle
xchg
pop
jno
push
cwtl
ret
popa
addr16
jo
dec
cmpsb
mov
mov
outsl
and
mov
decl
lods
mov
and
sbb
dec
pop
jo
dec
mov
insl
add
int
add
add
add
add
pop
mov
add
add
lods
sub
add
add
cmp
add
add
add
add
add
add
lea
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
ljmp
ja
in
clc
clc
incl
icebp
add
add
popa
jb
or
outsb
add
add
push
add
add
add
add
add
add
add
ret
add
add
adc
add
add
push
inc
add
xor
jae
add
sbb
sbb
test
dec
sbb
jecxz
sbb
and
pop
popa
js
add
inc
pop
jb
fs
inc
outsl
inc
add
gs
stc
rcll
roll
pop
jmp
fadds
or
pushl
dec
addl
mov
mov
mov
cld
cld
fstl
adc
decl
push
inc
lock
test
mov
rcrb
call
cmp
add
mov
movl
add
vunpcklps
xor
add
xor
and
lea
std
std
loopne
pushl
sbb
and
push
add
lock
push
adc
call
jne
sar
dec
add
repz
test
push
lea
push
push
push
add
jns
and
je
add
add
add
add
xchg
sbb
sbb
sbb
sbb
cmp
out
sbb
add
insb
add
gs
movsl
insl
dec
jne
inc
add
jo
movsl
fs
outsl
add
outsl
inc
popa
inc
outsl
jae
insb
insb
out
push
add
xor
gs
push
inc
xor
dec
imul
jae
loopne
insb
push
add
xchg
add
add
add
add
add
mov
add
add
add
add
add
add
mov
jge
out
mov
cmp
int3
ja
in
pop
into
daa
cmp
movsb
cmp
add
push
sbb
stc
sub
loop
mov
mov
xchg
mov
dec
inc
push
or
in
sbb
add
fldl
andl
pop
in
inc
xor
in
xor
mov
sbb
add
cmp
insl
out
jbe
mov
lock
mov
push
faddl
xchg
lds
sub
out
cmpsb
in
pushf
cmp
mov
mov
subb
adc
pop
inc
sbb
add
arpl
cmpsb
je
jne
xchg
add
or
dec
das
cltd
cmpsb
sub
ss
xor
inc
xchg
out
daa
xor
insl
cmpsb
stc
in
cld
mov
sbb
xchg
inc
jl
scas
adc
push
in
cld
cmp
mov
add
sbb
in
rcr
or
push
ja
mov
pop
fucomi
jle
and
mov
sbb
mov
in
add
addr16
lds
push
out
xor
fiadds
ss
icebp
loopne
std
fs
xor
mov
and
daa
sub
mov
mov
out
jne
sbb
mov
dec
mov
clc
pop
and
jle
cltd
add
test
js
ret
sub
mov
dec
push
pop
inc
xchg
adc
adc
int
mov
cld
adc
loope
adc
dec
lea
and
repz
jmp
sub
cli
mov
sbb
pop
inc
jecxz
dec
clc
cmpsb
ret
sbb
das
add
rolb
int3
lds
cmpsl
add
fcoms
test
andl
push
jg
sbb
sbb
clc
mov
sahf
aad
sti
mov
movsl
daa
cmp
sbb
adc
cmc
mov
mov
cwtl
test
adcl
aam
and
mov
repz
lcall
cmp
in
loope
pop
xor
sarb
mov
loopne
and
sbb
mov
mov
mov
scas
jecxz
mov
imul
mov
add
mov
cwtl
js
pop
sbb
push
pop
mov
sub
call
add
or
jns
out
insl
bound
xchg
sbb
inc
mov
int3
sub
cmp
and
push
jl
mov
cld
pop
dec
jo
xor
jno
push
jno
popf
ror
dec
sub
inc
mov
mov
add
lock
aaa
pop
popa
push
int3
imul
add
mov
or
test
es
pop
ja
ror
lcall
out
sbb
inc
jb
loope
aad
mov
xchg
sahf
mov
dec
out
das
add
js
jmp
xor
cmpsl
jae
lret
lret
push
push
clc
mov
cs
pop
and
pusha
rolb
jge
or
sub
push
lea
inc
xchg
sub
ja
cmp
sub
out
lret
leave
pop
jge
aam
jge
adc
adc
flds
inc
mov
mov
xchg
loop
xor
inc
cmpsl
mov
xor
pop
xchg
inc
sbb
arpl
pop
adc
jp
push
xor
int3
and
je
cmp
fwait
jnp
or
sub
and
sub
data16
add
jo
jle
lcall
jbe
idivl
xchg
xor
cmp
xor
es
mov
fmuls
shll
pop
or
lock
pushf
or
outsb
dec
addr16
mov
add
mov
sub
enter
aaa
shll
dec
sbb
imul
push
test
pop
xchg
pop
ja
jno
mov
jo
test
lock
pop
mov
cli
roll
cmpsl
fcmovnb
or
add
loope
jo
lods
int
cld
xor
lahf
or
pop
inc
pop
rclb
dec
xchg
cmp
adc
adc
sbb
mov
jne
mov
inc
mov
cmp
fdivl
outsb
out
imull
lahf
jmp
sbb
rcrl
sbbb
test
and
jnp
lock
and
inc
int
lret
addr16
sbb
sbb
ja
push
ljmp
xchg
adc
push
outsb
aam
int3
xor
jg
mov
nop
cmp
xor
je
add
into
jnp
fsub
test
lea
cmp
pusha
sub
maskmovq
and
pop
and
and
imul
jge
js
and
sbb
xorl
lods
int
fisubl
cmp
addb
add
mov
push
mov
pop
xor
lock
and
dec
jns
aaa
jb
inc
cmc
jge
xor
or
mov
jns
call
push
adcb
repz
add
inc
je
icebp
push
mov
into
dec
add
pop
adc
ja
push
sub
xchg
cmp
mov
cmpsl
iret
call
repnz
inc
sub
shlb
clc
mov
dec
push
add
inc
mov
je
and
daa
inc
ja
lret
test
lahf
jb
vpshlq
daa
jns
push
inc
inc
jge
pop
in
jge
xor
pop
jno
sub
adc
mov
add
in
cmpl
sbb
sub
sbb
loop
dec
ret
push
sti
loope
push
lea
add
stc
or
pushf
int
cltd
xchg
sbb
and
add
push
repnz
push
repz
and
mov
add
cmp
mov
adcb
dec
notl
movsb
inc
inc
inc
sbb
pop
push
add
insl
pop
out
xchg
iret
xchg
add
mov
and
pop
scas
mov
mov
or
das
adc
inc
rorb
sbb
xchg
aad
mov
loop
stos
xchg
push
pop
mov
addr16
mov
popa
test
in
cmc
je
dec
notb
cmpsb
repnz
push
jbe
push
push
lock
mov
loopne
xchg
cltd
enter
roll
or
jecxz
rorb
icebp
loopne
adc
cli
cltd
addr16
shl
add
scas
push
inc
push
xlat
sbb
adc
stos
mov
pop
or
xchg
out
pop
into
inc
jle
lret
xor
inc
inc
leave
push
in
cmpsb
dec
outsl
lret
sbb
out
jge
fwait
test
lods
adc
mov
pusha
push
add
test
in
xchg
pop
xor
xor
enter
jl
pop
ljmp
repnz
or
lret
sti
mov
and
fwait
cld
or
sbb
mov
sub
xor
int
mov
xchg
std
jb
int
sub
xchg
rcl
das
push
sub
and
jne
insb
xlat
mov
and
add
add
ja
daa
icebp
stos
jmp
mov
pop
xor
fistl
pop
sbb
mov
movl
sbb
and
lods
insb
adc
and
cmp
jno
int
xlat
add
rcrb
cld
lret
es
sahf
popa
dec
pusha
adc
sub
pop
and
xor
pop
xchg
in
mov
lds
cmp
jo
movsb
mov
jecxz
push
stc
or
mov
cltd
sub
rcl
push
loopne
and
cwtl
cwtl
cmp
daa
mov
mov
je
xor
leave
dec
or
sbb
jbe
inc
inc
repnz
mov
and
repnz
push
gs
fs
jecxz
add
jno
ss
lahf
stos
fsts
xchg
push
cmp
cld
mov
fisttps
cs
or
push
fs
lock
inc
mov
outsb
leave
and
insb
push
sub
dec
push
arpl
mov
jge
dec
lcall
sarb
js
and
pop
dec
pop
out
jmp
mov
cmp
mov
sub
insb
jb
rorl
fs
out
xchg
xchg
insb
mov
ds
push
pop
sbb
out
mov
sbb
aas
lret
popa
adc
out
cwtl
push
push
clc
mov
rcr
imulb
mov
mov
sbb
adc
pop
pusha
mov
int
jo
lods
xor
push
jne
inc
sub
xor
push
movsl
lods
sbb
nop
mov
pop
mov
pushf
mov
xor
ds
inc
cmp
insl
test
sbb
and
fcmovbe
jecxz
cmp
movsb
sahf
jae
fistps
outsb
das
inc
outsl
scas
mov
sbb
scas
jno
push
iret
bound
sti
movsb
subl
loope
push
or
lock
add
movsl
xor
lods
push
mov
and
scas
ljmp
dec
dec
jbe
xchg
int
xor
push
fbld
fildl
pop
xor
test
push
jo
or
loopne
out
pop
sbb
cwtl
es
pop
xchg
in
loop
cmp
fnstcw
cwtl
sbb
out
sub
sarb
hlt
stc
je
lods
mulb
lock
and
pop
xchg
xchg
sbb
jno
popa
out
push
icebp
push
xor
std
mov
push
hlt
cmc
xor
or
xor
aam
in
cwtl
cltd
or
pop
std
xchg
cwtl
rclb
add
outsl
or
and
mov
nop
aad
arpl
sub
and
test
cwtl
subl
arpl
adc
jns
mov
inc
add
or
and
mov
sysexit
xor
mov
push
mov
shll
sti
xchg
cmp
aaa
popa
cmp
or
cmp
jmp
jecxz
and
subb
dec
in
stc
lds
push
fiadds
mov
xchg
pushf
jns
movsb
clc
in
xchg
jp
mov
or
and
push
mov
mov
cmp
ud0
sbb
sbb
test
fidivrs
mov
cwtl
mov
jecxz
pop
fwait
add
fdivl
in
cmpsl
fnstcw
jmp
imul
in
cmp
push
icebp
mov
sub
jns
sub
and
add
jns
mov
push
mulb
mov
das
shl
jnp
xchg
dec
add
push
xchg
add
adc
jp
sub
popa
je
cmp
std
xchg
out
inc
mov
adc
hlt
or
daa
xchg
push
in
int
in
stc
jne
lea
je
pop
fsubp
movzbl
jnp
cmp
test
and
in
inc
popf
mov
dec
jbe
pop
xchg
dec
xchg
mov
mov
jo
jb
outsl
lahf
fwait
repnz
xchg
pop
decl
jmp
cli
lret
mov
cmpsb
dec
sub
add
mov
inc
mov
push
fnsave
hlt
pop
fwait
emms
push
push
in
fstps
repnz
or
pop
stos
in
mov
mov
and
sub
adc
mov
jo
pop
jno
jne
or
arpl
mov
int
dec
dec
out
jnp
stc
repnz
pop
jae
mov
popl
cmp
test
stos
in
cld
push
lahf
push
loope
jl
mov
mov
cmp
sub
out
dec
scas
xor
push
nop
jmp
mov
push
mov
inc
adc
stos
cmp
iret
xchg
jecxz
mov
or
out
sub
and
pop
xchg
lret
xor
in
jle
mov
ret
mov
mov
enter
cmp
into
call
push
out
pop
add
cmp
mov
xor
cmp
test
lock
dec
xlat
inc
or
gs
cmpsb
je
xlat
inc
mov
sbb
out
adc
imul
daa
xor
adc
int
mov
addr16
jp
xor
bound
cmpsl
cmp
sbb
dec
subl
test
lds
nop
leave
adcl
shlb
xchg
rcrl
sub
arpl
add
xchg
jecxz
testb
ss
frstor
cmpsb
loope
add
test
cmp
jo
add
or
pushf
xchg
in
sub
cs
push
fadds
fcoms
jl
xor
fcomps
or
clc
addb
mov
mov
dec
test
sbb
ret
fildll
inc
faddl
arpl
dec
and
pop
push
add
imul
xlat
call
push
adc
pop
adc
mov
mov
dec
and
cmp
jnp
sub
roll
js
or
gs
sbb
jp
cmp
shr
mov
nop
jp
std
or
pusha
xor
sub
pop
iret
icebp
stos
jp
aaa
dec
aas
das
fnstcw
xchg
mov
lret
js
fwait
cmp
sub
push
inc
ljmp
add
scas
jo
cmp
add
push
popa
mov
ja
imul
data16
loopne
mov
cltd
movaps
and
and
adc
xchg
inc
mov
mov
mov
scas
xlat
and
mov
icebp
dec
pop
je
sbb
sbb
pop
scas
fiaddl
gs
xor
jecxz
mov
add
in
xor
xchg
push
mov
lock
shll
and
or
adc
bound
mov
add
es
mov
dec
mov
in
sbb
roll
mov
adc
inc
push
fmulp
inc
leave
pop
mov
xor
xchg
cmp
or
rcll
mov
cld
push
stos
ficomps
xchg
sub
push
idivl
xchg
mov
xchg
sbb
in
sahf
jge
movsb
sbb
mov
imull
fidivl
lods
inc
fwait
adc
or
mov
jecxz
jne
sub
rorb
mov
mov
inc
jo
push
mov
dec
call
out
std
or
xor
inc
mov
aam
jge
mov
movsl
xchg
push
lret
in
fmull
cmpsl
iret
scas
xchg
mov
rcr
subb
push
push
lds
in
repnz
xor
mov
sbb
push
lahf
nop
std
jmp
inc
xchg
xchg
gs
clc
fdiv
icebp
inc
int
pop
mov
and
inc
push
dec
pop
cmp
xor
mov
cmp
sbb
lret
sub
push
sti
jmp
sti
jbe
movsb
int3
fiadds
cmpsb
loopne
jg
mov
dec
sub
add
add
outsb
add
adcb
lods
mov
inc
jno
lock
imul
cmp
sbb
testb
pop
shlb
mov
cmp
push
mov
popa
inc
dec
fnstenv
pop
inc
int
inc
or
out
xor
sub
xor
sti
add
ss
aas
int3
cltd
add
testb
inc
sub
call
fildll
stc
shl
pop
push
jmp
xchg
mov
inc
pop
hlt
clc
xchg
call
or
cld
je
stc
arpl
inc
mov
inc
iret
in
ss
lock
scas
mov
test
testl
adc
aaa
cwtl
popa
cs
ret
ja
pop
dec
decl
lret
das
cmpsb
in
popl
pop
push
in
xor
and
call
iret
popf
scas
stc
or
movsl
fdivrs
js
sbb
ficomps
mov
push
out
sub
push
mov
je
mov
mov
into
pop
enter
repnz
lret
push
sbb
dec
push
lock
mov
mov
adc
push
mov
jne
xchg
fcomps
lods
outsb
movsl
sub
adc
sbb
fisttpl
pop
in
popa
in
pop
mull
mov
push
repnz
and
insb
mov
push
xor
outsl
lock
mov
lods
xchg
or
fsts
mov
push
mov
mov
movsb
add
xchg
lret
jbe
sbb
cmpsb
sub
cmp
pusha
dec
fisubs
mov
jb
leave
or
out
pop
int3
add
popa
xorb
jbe
xor
jp
pop
push
icebp
xchg
mov
push
mov
stos
xchg
pop
xchg
lret
inc
or
and
sub
in
jnp
add
pop
das
push
imul
push
sub
shlb
cmp
dec
mov
lds
test
int3
data16
ss
and
fidivrs
cmpsb
lahf
xor
arpl
xor
inc
nop
shlb
mov
cmp
push
and
or
int
fsubr
ret
cld
jo
testl
cmpb
div
adc
adc
fs
mov
push
outsl
xchg
rorb
jge
add
adc
jne
push
fdivrp
jge
jp
or
sbb
add
jl
push
out
imul
inc
jae
rorl
cs
jns
xor
mov
push
mov
push
lods
jb
repz
ss
int
adc
sarl
mov
out
mov
sbb
imul
loop
in
and
mov
or
sahf
xchg
aad
xchg
mov
repnz
lret
std
mov
nop
sahf
addb
dec
imul
cmpsb
mov
and
cmc
adc
int3
int
sub
mov
mov
dec
cld
xor
stos
mov
dec
xchg
push
xor
cmpsb
mov
rcl
lods
ret
aaa
xor
dec
fisubs
lods
inc
pop
arpl
cli
in
sbb
stos
popa
sub
jb
mov
cltd
sub
or
adc
hlt
iret
sbb
or
orl
dec
push
stos
dec
bsr
push
xor
shl
sub
lret
push
and
pusha
das
sbbl
inc
cltd
push
stc
mov
pop
inc
cmpsl
ljmp
movsb
push
push
xor
mov
imul
adc
xchg
sub
push
sub
in
sbb
xchg
push
in
jbe
std
mov
wbinvd
sub
push
adc
popf
dec
push
dec
imul
fwait
inc
mov
add
fsub
popf
sarl
lea
jmp
ja
aas
das
or
or
pop
mov
call
shlb
insl
aam
test
insb
dec
sub
movsl
in
leave
rorl
movsb
out
adc
add
sti
dec
loop
add
mov
and
das
add
subl
push
pop
mov
xor
mov
insl
push
pop
xchg
das
jecxz
push
push
mov
mov
sahf
negl
data16
or
mov
add
add
add
add
in
add
add
push
add
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
or
xor
add
or
add
add
add
add
add
movsl
addb
stos
stos
add
ja
js
js
insl
js
add
add
add
add
and
xchg
add
add
add
add
add
add
add
add
add
xchg
add
pusha
popa
mov
add
add
add
inc
add
add
add
add
add
add
add
imul
add
pop
dec
outsl
jae
mov
and
sbbl
xchg
mov
mov
push
push
lea
add
jne
jne
lcall
lea
sti
push
clc
push
test
adc
mull
add
mov
mov
in
add
push
jns
sar
mov
incl
aam
add
add
sub
loopne
add
adc
inc
insb
add
call
call
decl
std
loopne
jmp
adc
adc
push
jmp
cmp
xchg
add
mov
stc
mov
enter
loopne
jne
add
lea
je
ret
movl
add
add
add
add
jecxz
je
inc
push
insb
imul
inc
dec
gs
sti
gs
outsl
fisubs
popa
dec
jae
add
add
je
dec
push
gs
fs
add
insl
jne
popa
outsl
dec
mov
imul
push
jbe
cs
arpl
gs
add
inc
roll
add
add
inc
add
add
data16
add
repz
add
push
add
inc
jae
lahf
sbb
push
xchg
mov
and
arpl
scas
in
pop
cmp
lahf
lcall
and
int
dec
mov
pop
push
fsubrl
add
movaps
mov
mov
mov
cmpsl
cmp
dec
hlt
add
sub
ficompl
push
loop
daa
lret
out
mov
jno
imul
and
push
dec
mov
pop
jne
sub
xchg
outsl
and
icebp
mov
sahf
popf
add
adcl
mov
sub
add
mov
fiadds
mov
pop
cwtl
cmp
and
mov
pop
orb
dec
loopne
notb
dec
clc
dec
add
mov
rolb
adc
hlt
sbb
call
std
rorl
fucomip
cmp
push
pop
repnz
push
push
sub
xchg
fisubs
mov
jge
push
lea
nopl
pop
inc
add
movsb
js
push
fadd
and
jae
cld
lcall
push
push
cmp
jne
lcall
out
js
push
inc
xor
jno
movsb
jns
pop
dec
mov
test
setb
and
cltd
xorb
out
in
fsubr
fwait
sub
mov
jnp
arpl
mov
jbe
subb
push
shll
mov
lahf
cmp
js
push
or
inc
jne
outsl
adc
push
sub
push
iret
lods
cmp
cmp
mov
jb
pop
dec
add
repnz
in
mov
fsubrs
pop
stos
xlat
sti
add
inc
jl
cs
cmc
fldcw
lods
inc
pop
repnz
jmp
and
push
in
jbe
outsl
push
ss
xchg
add
cmp
cmpsb
sub
ret
dec
inc
and
aas
sbb
jecxz
stc
inc
dec
jbe
and
cs
sub
bnd
jns
les
stc
jl
cmp
enter
aad
cmp
push
sbb
push
xchg
imul
sbb
sti
inc
sub
xchg
and
mov
popa
sahf
stc
cmc
add
inc
mov
scas
cli
loopne
mov
loop
jns
xor
xchg
cmpsl
js
lock
mov
or
push
cs
adcl
push
cmp
jo
push
shrb
jno
es
xor
cwtl
xlat
in
mov
xlat
or
adc
or
cmp
mov
popf
mov
ret
jnp
test
incb
inc
cld
xchg
mov
pop
or
imul
std
das
fs
movsl
aad
mov
jns
lea
leave
mov
inc
dec
mov
stos
mov
mov
leave
shll
outsl
xlat
sub
mov
xorl
push
inc
inc
mov
mov
jno
add
sub
or
sbb
nop
push
cwtl
outsb
sarb
ljmp
loope
mov
pop
or
fnsave
cmp
cmp
pop
pushf
roll
push
mov
inc
push
ljmpw
push
xor
scas
jle
or
sub
repz
fimull
insb
push
cmp
sbb
push
add
cmp
dec
jnp
ficomps
xchg
in
repz
pop
sub
adc
mov
or
lret
cltd
aaa
movsl
jecxz
in
inc
mulb
push
lret
jbe
xor
adc
push
push
aad
pop
sub
inc
cmp
inc
and
xchg
xchg
pop
or
les
iret
rorb
or
mov
cmpsl
xchg
push
push
dec
cmp
mov
nop
fwait
add
inc
push
xor
xchg
xchg
loop
sbb
xchg
popf
xchg
lahf
jle
xor
dec
lret
test
or
aaa
lret
and
push
or
mov
mov
cld
push
shrl
nop
sar
lahf
mov
insb
mov
icebp
cmc
scas
ss
xor
jge
push
xchg
dec
in
or
lds
rolb
xor
test
int
movsl
mov
xchg
push
imul
xchg
inc
xchg
jmp
lahf
cmp
and
mov
mov
or
stos
lods
test
xchg
push
lret
jp
sbb
sahf
sbb
shr
push
lcall
jl
scas
pusha
clc
xor
and
stc
mov
add
pop
in
jbe
jbe
cmpsb
shrl
add
xchg
shll
push
inc
xchg
popf
rorb
jge
ljmp
dec
mov
cmp
push
pushf
mov
pop
cwtl
cmp
outsb
dec
mov
lahf
cmp
inc
daa
sub
or
add
sub
lcall
mov
popa
mov
lods
sbb
cs
jecxz
pushf
aam
ret
out
bound
in
cmp
in
popl
adc
test
jmp
aaa
mov
int3
xor
fidivrl
jnp
dec
imul
ss
into
mov
ja
sbb
push
dec
mov
scas
je
push
push
cmpl
insl
daa
inc
popf
nop
cmp
inc
mov
scas
jecxz
cmp
data16
push
add
mov
add
mov
mov
divb
mov
sub
adc
or
ja
bound
cmpsl
dec
jns
pop
xor
cld
nop
test
push
stc
out
lret
imul
aad
iret
cmc
sbb
mov
jne
pusha
enter
ficoml
cmp
or
adc
fimull
pop
iret
mov
adc
ljmp
popa
cs
sbb
dec
shlb
call
ret
in
insb
in
lret
imul
adc
rcr
jp
lahf
fdivs
loopne
mov
mov
out
push
or
ljmp
xchg
mov
aad
cwtl
mov
jmp
dec
jo
add
test
mov
cmp
inc
sub
outsb
and
sbb
stos
sub
inc
sub
cmp
mov
xchg
stos
pop
cmp
push
lods
hlt
inc
sbb
rcr
mov
arpl
rorl
mov
stos
repnz
fs
ja
xlat
rcr
stos
add
mov
aam
push
lock
in
xlat
hlt
pop
imul
mov
push
mov
pop
jb
mov
jl
mov
lea
adc
pop
dec
add
jae
xchg
push
cmp
movsb
cs
push
fld
sbb
dec
in
or
pop
inc
mov
mov
test
pop
adc
fwait
ljmp
inc
push
ficomps
imul
iret
cwtl
xchg
xor
loop
push
popa
push
pop
rcrb
fsts
mov
jmp
pop
test
lock
xor
push
lea
mov
mov
cwtl
imul
cmp
faddl
repz
xlat
pushf
push
bound
imul
jl
rorb
aaa
jne
js
xor
and
sub
xchg
push
mulw
jns
cmpsl
or
mov
inc
push
cld
cmp
sub
cmp
push
pop
xlat
xchg
pop
arpl
outsb
mov
test
iret
movsl
enter
sub
jne
icebp
mov
leave
and
outsl
rorb
jnp
mov
fs
push
sub
push
rorl
cltd
mov
cli
mov
push
roll
in
jl
push
rol
aaa
stc
mov
outsb
adc
lods
cmc
push
fistpl
mov
aad
outsl
scas
lods
cmpsb
fstpt
hlt
and
mov
gs
leave
cmp
and
xchg
gs
dec
xchg
pop
sub
jnp
jle
inc
and
inc
subb
scas
mov
lahf
outsl
xchg
lds
lea
cmp
sub
pop
cmp
push
inc
mov
mov
subb
out
loopne
mov
in
sahf
mov
movsl
push
mov
test
push
xor
scas
leave
testb
add
lods
push
xor
lret
and
push
sub
loopne
push
std
test
out
xor
shlb
jb
inc
lods
out
inc
pop
jne
add
xchg
fmul
inc
sbb
arpl
mov
sbb
cmp
lea
xchg
scas
fdivr
mov
or
idiv
std
inc
pop
loop
xor
push
or
adc
mov
jbe
iret
add
aas
les
mov
jne
icebp
add
dec
mov
jae
popa
push
xchg
xchg
fidivl
sbb
outsl
dec
in
xor
push
and
sub
jno
in
std
cmp
outsl
mov
lret
adc
push
ret
xorl
or
sbb
add
sbb
add
inc
adc
sub
inc
cmpl
pop
inc
ljmp
add
cmp
js
out
test
rcrl
mov
xor
imul
icebp
and
test
and
pop
jle
shlb
iret
sahf
test
dec
or
lds
push
leave
dec
and
scas
mov
addr16
lcall
in
jno
xor
js
inc
inc
sbb
xchg
dec
fidivrl
cmp
scas
mov
lock
adc
inc
test
in
loopne
xchg
mov
adc
sbb
das
cmc
cld
repz
dec
stc
ja
outsl
movsl
mov
adc
insb
mov
sbb
out
fdivr
sub
hlt
loopne
cld
jns
dec
sbb
mov
push
and
jle
sbb
popf
and
mov
loope
imul
pop
sbbl
dec
scas
xor
jp
popf
and
jg
mov
imul
arpl
jmp
xor
xchg
push
rcrb
pop
xorb
pop
add
dec
scas
push
les
pop
sbb
jbe
mov
mov
leave
dec
mov
mov
fistl
jo
sbb
push
es
mov
and
jb
or
inc
mov
aaa
stos
subb
ret
or
lcall
adc
mov
and
and
inc
mov
dec
or
out
adc
mov
dec
lods
aam
scas
cmp
add
mov
inc
fimuls
cmpsb
aaa
int
aam
push
and
push
cld
xchg
mov
sub
fisubrl
lds
mov
jecxz
loopne
ret
popf
cltd
add
scas
je
cmp
rol
push
pop
push
pop
sbb
xor
push
scas
sar
add
inc
xchg
mov
rcrl
enter
lret
fwait
cmp
add
cmp
into
mov
inc
dec
cmovg
xchg
mov
inc
insl
shll
in
and
mov
addr16
out
xchg
xchg
mov
jnp
jo
or
inc
xchg
std
stos
and
cli
cmp
cmp
xor
rorl
dec
and
sub
mov
pop
adc
call
mov
inc
cwtl
int3
jmp
xor
add
mov
cmc
sub
pop
pushl
add
push
insb
inc
sbb
dec
in
or
movd
je
pop
sbb
lods
pop
sahf
cmp
jno
jecxz
xchg
fdivs
dec
push
and
pop
cmpsb
dec
pop
fistl
jecxz
movsb
cmpsl
jmp
iret
cmc
inc
hlt
test
add
lods
cmp
adc
imull
popa
mov
adc
cmp
movsl
into
jns
xor
fld1
lds
fsubrs
fs
out
xchg
add
dec
cmp
mov
mov
jl
test
popa
nop
pop
popf
or
aaa
fcomps
int3
repz
fdivrl
or
sarb
scas
jbe
mov
rcl
neg
cwtl
aaa
mov
xor
mov
mov
mov
ret
pop
xchg
or
sub
in
mov
jp
cmp
lds
ljmp
dec
sbb
jnp
xchg
ss
and
pop
jo
rol
aad
pop
stos
nop
pop
jge
hlt
sub
rcrl
mov
add
pushf
arpl
stos
add
pop
int
adc
lock
mov
insl
es
jb
cmp
mov
in
push
pop
pop
loop
insb
mov
sbb
or
cmp
in
mov
dec
mov
jne
popa
aad
adc
aad
orb
das
push
ja
mov
jo
add
pop
mov
lock
mov
dec
cmp
cwtl
pop
and
xor
xchg
or
std
cmp
sarb
add
inc
mov
test
test
xor
cmp
fwait
loop
lds
adc
int3
fsubl
cmp
or
add
ds
test
daa
daa
aad
addb
xor
test
stos
dec
push
cli
push
lcall
subb
add
xor
arpl
inc
addr16
rcrb
jle
iret
scas
mov
inc
aam
popf
or
cwtl
mov
das
jno
loopne
mov
push
int3
push
xchg
mov
mov
push
push
ffreep
add
sub
ljmp
sub
add
push
bound
cli
push
push
mov
and
cmpsl
push
gs
call
jl
cwtl
dec
enter
fs
sbb
movsl
mov
push
xchg
pop
es
jno
ret
pop
clc
mov
out
dec
scas
jb
and
rclb
or
sbb
fidivrl
pushf
cmc
jno
sbb
cmp
push
dec
int3
mov
scas
push
push
mov
mov
pop
pop
xlat
pop
nop
in
mov
and
pop
out
sub
nop
jmp
popa
in
scas
cmpsl
in
add
outsb
fs
push
mov
aas
adc
stos
fcmovb
fs
sbb
aad
lock
cmp
ja
mov
sub
sbb
outsl
xchg
fsubs
divl
mov
mov
mov
or
outsl
enter
repnz
lds
pop
popa
cmpb
stc
in
cs
push
inc
mov
idivb
imul
jo
inc
xchg
jne
lcall
call
or
nop
lods
sti
lods
fidivrs
aas
pop
gs
push
lret
push
push
mov
fildll
dec
mov
repnz
sbb
jnp
mov
and
fscale
out
or
ffree
cmp
inc
and
sbb
ds
sti
xlat
std
shrl
lods
call
adc
cmpsb
cmp
or
and
mov
xor
stos
pop
ret
and
xchg
pop
push
das
mov
mov
cmp
cmp
jge
test
add
mov
jp
rorl
filds
xor
cwtl
mov
in
out
lcall
inc
mov
xor
popf
xorb
dec
dec
xchg
nop
dec
out
cmp
pop
in
mov
clc
sbb
cmp
je
jl
addl
lret
int
lods
andb
daa
mov
mov
mov
cmp
or
lods
cmp
lret
or
movsb
div
js
out
andl
xor
mov
pop
pop
clc
pop
mov
sahf
ds
mull
stos
out
std
push
fsubrp
stos
dec
lock
nop
add
inc
cmp
push
push
les
push
mov
bound
rcrw
clc
je
pop
lock
sub
jmp
xchg
inc
hlt
cmc
mov
jmp
popf
jbe
inc
lret
inc
sub
lret
test
mov
repz
or
pop
sub
test
dec
dec
pushf
loop
repnz
sbb
mov
pushf
or
push
mov
jb
mov
or
push
mov
popa
sbb
out
mov
jne
jle
jge
jnp
inc
lahf
or
or
mov
pop
mov
roll
mov
sub
lahf
shr
push
sbb
add
xchg
mov
add
push
xchg
js
xlat
or
push
cmp
xlat
or
mov
xchg
mov
mov
mov
shl
jl
mov
adc
cmp
lods
add
gs
movsl
in
jp
push
push
dec
movsb
fldt
repz
or
xchg
jmp
bound
cmp
cmp
xchg
add
enter
loope
bound
mov
fwait
mov
cmp
cs
push
jae
jno
leave
add
lcall
push
dec
cmp
cwtl
jns
add
imul
in
int
or
mov
push
ja
mov
xchg
mov
mov
fistpl
pop
and
aas
xchg
inc
cmp
xor
xor
dec
jo
sbb
pop
lods
mov
lea
addl
mov
inc
loope
adc
mov
test
loope
aaa
pop
mov
cld
sub
push
adc
or
pop
jmp
or
call
xchg
jmp
jo
dec
mov
sar
icebp
xlat
ret
mov
mov
cli
push
dec
subl
mov
adc
nop
jl
mov
cmp
outsl
add
mov
and
lahf
loop
or
add
insl
std
in
scas
and
jg
fisubrl
xchg
bound
xchg
pop
pusha
pop
jnp
xor
xchg
push
xor
fdivs
add
dec
imul
in
fimuls
cltd
sub
or
aaa
and
push
fucom
mov
cmp
mov
pop
add
cmp
or
daa
jmp
fs
pop
aad
test
fdivrl
push
cmp
dec
mov
sbb
shlb
int3
fildl
fists
cs
inc
add
shlb
aad
addr16
rorl
sbb
fiaddl
cmpsb
inc
and
sbb
dec
sub
scas
sbb
sub
fwait
and
fyl2x
rorl
ss
test
out
sbb
dec
push
mov
dec
jg
mov
notb
and
repnz
daa
or
je
push
clc
and
xorb
outsb
or
scas
in
jno
jae
lahf
cmp
inc
dec
or
add
mov
inc
xchg
or
inc
shll
xchg
add
cmp
insl
lods
daa
inc
cs
test
iret
xchg
sbb
push
repz
dec
sub
push
sub
dec
mov
sar
dec
fdivl
pusha
sub
mov
pushf
pusha
mov
fucomi
pop
fwait
leave
or
inc
xor
out
hlt
jmp
insl
imul
into
jmp
cs
lahf
icebp
mov
mov
mov
call
lods
pop
fisubrs
mov
jne
xchg
or
dec
bound
push
sahf
jge
sbb
pusha
xchg
lahf
add
add
add
add
add
add
add
add
add
add
push
arpl
add
add
adc
add
add
add
add
add
add
add
add
add
xor
add
add
stos
stos
add
cmp
incl
add
add
add
add
imul
add
adc
adc
add
popl
insl
add
push
add
mov
or
add
add
add
jb
add
add
add
xchg
add
add
add
add
add
add
add
mov
and
insb
jns
jne
dec
outsl
je
jb
outsl
pop
dec
inc
jo
enter
enter
jecxz
out
popa
fcmove
dec
sbb
ds
clc
inc
mov
add
dec
add
push
mov
std
std
incl
decl
add
push
lock
clc
push
pushf
or
xor
mov
pop
pop
add
push
add
push
call
jge
mov
add
add
ljmp
add
add
test
ljmp
cmp
test
test
loopne
pushl
add
or
call
aad
mov
push
push
add
sar
mov
ret
movsl
lea
add
push
stos
call
loopne
add
adc
sbb
add
add
add
add
add
add
add
add
add
jecxz
add
add
je
imul
popa
aaa
insb
add
add
add
add
test
imul
inc
dec
js
push
xor
je
js
add
add
add
je
add
add
insb
inc
dec
xor
add
add
add
int
add
add
pop
add
add
add
and
add
mov
movsb
scas
sti
int
sub
fidivrl
push
cwtl
push
fsubrs
pop
sbb
hlt
or
sub
sti
add
mov
pop
inc
mov
leave
inc
lahf
hlt
mov
idivb
cld
xchg
sarb
fisubl
mov
mov
lcall
cmp
pop
xchg
icebp
cli
leave
in
sub
es
pop
stos
xchg
es
mov
jle
es
sahf
imul
dec
xchg
std
adc
cmp
loope
adc
ret
cld
push
out
dec
sti
out
shlb
mov
jae
je
aad
sahf
sub
jp
fimull
adc
inc
jl
push
out
cmc
fs
insb
outsb
xchg
ret
jb,pt
adc
int
loop
ds
jmp
jae
sub
jecxz
push
inc
sbb
int3
aas
jns
mov
faddl
testl
dec
mov
aaa
pop
inc
jns
and
jb
push
mov
dec
outsb
pop
jg
pop
fwait
lret
jle
add
jnp
mov
xor
or
and
imul
adc
sbb
rep
push
push
jp
ss
test
pop
inc
cli
and
ja
cmp
dec
icebp
in
xchg
dec
aam
mov
push
repnz
stc
loopne
lods
fdiv
inc
or
lods
adc
dec
mov
dec
ds
movsl
ret
pop
adc
dec
pop
add
jno
add
cmc
in
idivl
cmpsb
or
not
push
scas
adc
cmp
pop
dec
loop
cvtdq2ps
pushf
add
test
mov
pop
dec
mov
cmpsb
jne
add
pop
sub
mov
sahf
xchg
mov
pop
loop
cmp
insl
mov
rcl
mov
xor
push
jg
ret
push
iret
pop
sub
mov
adc
and
mov
xor
mov
call
test
adc
jne
pop
daa
mov
xor
lock
inc
addr16
movsb
jb
jp
std
lahf
xchg
sbb
les
sub
push
mov
lret
inc
jmp
jp
std
xor
xor
das
and
sbbl
lods
fbld
punpcklbw
mov
orb
addr16
int
test
xchg
ja
ljmp
push
pop
lods
mov
dec
xchg
cmp
negl
mov
fwait
and
stc
stos
inc
add
push
mov
mov
mov
ss
iret
and
mov
mov
shr
adc
push
adc
sbbl
or
jge
cmp
lock
push
jno
jle
dec
cmp
fnstcw
push
or
mov
jmp
jo
mov
inc
pop
enter
pop
jl
test
or
ret
bound
sti
push
mov
test
js
sub
movsl
scas
pop
idivl
out
or
std
shl
popf
in
push
inc
cwtl
test
pop
aaa
test
testl
pushf
shrb
pop
adc
adc
repz
gs
mov
xor
rolb
xchg
sbb
nop
rorl
rclb
jge
cmp
or
add
add
jl
in
push
push
mov
negb
inc
daa
or
jno
stos
and
sub
loope
mul
pop
xor
pop
sub
mov
insl
and
rcll
insl
jno
mov
jae
xor
push
cltd
mov
mov
mov
aad
and
inc
add
xor
pop
out
pop
imul
aas
dec
enter
jmp
pop
jp
add
test
xchg
xor
jle
movb
mov
enter
mov
lcall
fwait
in
inc
dec
ror
mov
push
cmc
hlt
repnz
mov
fsub
mov
lcall
shr
adc
xchg
sub
dec
push
sub
in
and
cmp
xor
repnz
cld
or
repz
test
dec
lds
inc
mov
adc
dec
mov
fsubs
dec
int3
loopne
or
cmp
adc
sub
popa
fs
dec
jp
sbb
insb
insb
addr16
popa
es
into
mov
rcrl
in
popf
pop
mov
cmp
mov
dec
cmc
cmpsl
cs
stc
lock
test
xchg
adc
mov
gs
fcompl
pop
mov
push
mov
scas
addb
dec
adc
jo
in
mov
iret
jbe
or
or
xlat
mov
sub
sahf
cmpsl
les
bound
or
mov
shll
subl
mov
or
lea
mov
mov
or
stos
add
xchg
mov
jg
mov
sbb
mov
inc
mov
or
bound
or
or
xor
mov
or
xor
ret
mov
je
jg
inc
lock
and
ss
dec
shlb
mov
xor
or
fisttpll
dec
push
iret
mov
in
inc
jns
movsl
pop
mov
add
dec
fidivrl
inc
int
xor
or
mov
mov
mov
fiadds
jo
mov
fnstsw
add
ja
outsl
outsl
les
mov
sbb
mov
mov
daa
or
sbb
jns
jb
mov
je
jbe
and
sbb
xchg
loope
les
xor
inc
nop
or
sbb
xor
xchg
pop
lock
mov
int3
mov
in
xor
ss
mov
lock
add
xchg
mov
aad
mov
and
ds
mov
adc
mov
out
pop
and
sub
and
add
fwait
outsl
push
sub
outsl
mov
fiadds
lock
test
dec
jo
lcall
xor
adc
imull
int3
mov
push
push
mov
cmp
int3
mov
out
sub
xchg
cmpsb
add
lods
test
loope
and
out
rorl
xchg
jo
iret
xchg
sub
and
fwait
xor
sub
mov
or
icebp
sar
int
daa
adc
jl
cli
cmp
xchg
xchg
mov
lea
cmpsl
sbb
xchg
xchg
dec
test
pop
or
sub
jo
jg
push
mov
lds
xor
mov
xchg
push
dec
push
adc
aas
dec
repnz
add
repz
ljmp
ja
jg
mov
cmp
inc
pop
sbbl
pop
int3
and
jo
pop
in
sbb
pop
or
test
vmread
xlat
xchg
mov
cmp
call
hlt
push
push
mov
lods
or
fcmovne
lods
int
les
imul
jl
into
fcoms
push
mov
pop
test
in
lods
jp
in
sbb
insl
jo
mov
jle
bound
inc
into
cmp
cmp
cmp
loop
es
inc
mov
pop
ss
pop
fdivr
add
sub
aam
dec
add
imul
jge
divb
cmp
add
push
cli
push
fisttps
dec
jno
dec
sbb
push
cltd
lret
add
call
hlt
sub
pop
xchg
mov
jp
sub
shrl
or
sbb
pop
sbb
jge
bound
inc
ficoms
sti
mov
int3
mov
or
scas
testl
je
dec
ds
push
inc
sbb
int
fidivrl
mov
jge
jno
rolb
arpl
dec
mov
adc
into
jle
cmc
pmovmskb
inc
pop
push
out
ljmp
sbb
dec
fwait
inc
cmp
or
rcr
mov
les
mov
dec
popa
out
add
insl
aas
lret
push
push
fwait
out
or
jbe
xorb
cld
rcrb
icebp
cmp
push
inc
xor
decb
stc
jge
cmp
das
inc
sbb
stos
out
sub
jmp
and
sub
in
cld
mov
aad
hlt
mov
ret
dec
adc
pushf
inc
push
aas
fcomip
pop
pop
bound
push
pop
dec
pop
xchg
jl
ja
fwait
imul
insl
xor
popa
call
gs
hlt
std
les
pop
add
cmp
xchg
scas
cwtl
pop
mov
sbb
cmp
dec
xchg
jmp
leave
in
std
add
mov
shlb
jmp
lods
cwtl
and
xchg
pusha
loopne
je
test
and
and
jle
sub
sbb
xchg
outsl
cmc
scas
cmp
mov
sub
jno
sub
lods
negb
inc
xor
f2xm1
fcmovbe
mov
scas
xrelease
push
repz
pop
jle
les
add
push
push
fs
cmpsl
inc
cmp
fsubs
rolb
out
jnp
cmp
std
jns
daa
add
addr16
jae
cld
fnsave
cltd
cmp
in
sbb
mov
cmp
sbb
loop
pop
push
cld
shrb
pop
sti
sbb
pop
inc
jb
dec
push
pop
add
ja
andl
stos
xor
mov
into
shlb
lock
inc
push
push
shlb
xchg
inc
dec
jp
outsb
mov
mov
cwtl
test
jl
add
mov
scas
inc
out
pop
lahf
mov
adc
loope
mov
rolb
sub
ds
jno
insb
mov
aas
ja
mov
cwtl
out
pop
or
je
mov
cmpsl
mov
jo
dec
dec
dec
cltd
pop
pop
in
add
mov
mov
xchg
sbb
jecxz
into
add
mov
sbbb
out
sub
or
inc
push
test
aaa
stc
xchg
adc
mov
lods
xlat
push
scas
sbb
das
int
outsb
shll
cmp
xchg
movsl
int
mov
xchg
cwtl
cmpsb
cmp
jge
repz
sahf
ss
or
lock
dec
sbb
loopne
les
jo
clc
jnp
push
xchg
sub
mov
add
add
repnz
mov
leave
sub
or
pop
sti
xor
inc
cwtl
inc
xchg
pop
loopne
psubq
addr16
lea
cmp
stc
push
scas
dec
add
adc
fdivrl
jl
sbb
sbb
add
or
nop
in
xor
inc
cs
repz
jne
xlat
lds
pop
sub
sub
adc
mov
jo
pop
pusha
fidivrs
movsb
and
adcl
jb
addr16
repz
aaa
dec
sti
xchg
clc
mov
mov
subb
jp
pop
xor
adc
hlt
inc
fdivrs
cld
pop
and
push
jne
add
sub
in
pop
negl
or
cltd
inc
pop
fstpl
sub
mov
xlat
ljmp
in
dec
adc
sbb
xor
push
dec
mov
int
test
insl
push
lds
and
xchg
fwait
inc
cwtl
sbb
lahf
bound
push
mov
in
pushf
repnz
mov
or
and
mov
push
lods
mov
aad
jp
ja
xchg
add
xchg
mov
pop
and
jle
ss
jnp
jl
push
jmp
icebp
loop
test
jbe
stc
push
es
jge
dec
sub
daa
rorl
cmc
rcrb
adc
lcall
paddsb
push
clc
movsl
icebp
pop
cmp
adc
jo
add
push
push
jo
xchg
or
inc
inc
aad
movsb
lahf
cld
mov
aaa
int3
push
insl
mov
test
scas
fnstenv
mov
jecxz
mov
divl
cld
xchg
imull
pusha
aaa
sbb
or
sub
xorb
inc
mov
int
inc
cli
mov
xchg
cwtl
iret
adc
lret
sbb
cld
es
sbbl
or
cmp
dec
aam
push
mov
jle
mov
and
and
dec
enter
push
lds
add
sub
imul
push
mov
xchg
inc
mov
rolb
push
mov
sbb
fisubs
lahf
ret
divb
les
xor
jbe
mov
scas
add
mov
sbb
ds
out
sub
jno
jl
lcall
push
pusha
sub
test
and
aaa
pop
cmp
mov
xlat
push
push
or
hlt
sbb
cmp
jle
cmp
lret
add
mov
dec
xor
fwait
and
or
cmp
or
ficompl
test
mov
dec
lea
loope
or
mov
ficompl
mov
ljmp
xchg
in
rclb
mov
pop
fstp
xor
lock
push
outsl
push
je
jecxz
pop
mov
cmp
mov
cld
repz
hlt
hlt
xchg
push
fsts
test
lea
mov
push
dec
fwait
bswap
cli
sbb
or
mov
xchg
mov
push
adc
push
pushf
cmc
call
dec
and
test
add
ja
fimull
inc
sti
nop
fs
jo
jne
repz
jo
es
lcall
jnp
dec
fdiv
sbb
mov
aas
fwait
add
gs
js
pop
into
or
mov
sbb
and
pop
negb
dec
mov
dec
js
inc
js
or
in
shrl
ss
mov
sbb
fsubr
and
pop
nop
insl
mov
pop
sub
sbb
sbb
popa
jnp
cli
cmp
cli
rcll
pop
xor
jg
adc
cmp
in
pop
faddl
out
mov
and
outsl
cmp
aad
sub
or
push
dec
jbe
jno
popf
xchg
jb
sub
cmp
push
jmp
xor
xchg
fsubrl
xlat
outsb
add
jo
inc
clc
sub
or
je
inc
push
adc
rorl
sbb
pop
stos
mov
cmp
dec
xchg
jnp
in
insl
sbb
jno
in
jle
inc
fndisi(8087
movsl
add
sub
adc
ret
idivb
adc
cmp
insl
mov
idiv
inc
or
dec
stos
jne
popf
pop
aas
rorb
int3
push
xchg
adc
dec
mov
mov
jae
xchg
dec
sbb
cs
adc
outsl
jae
add
sbb
imul
bound
add
cld
leave
or
xchg
sarb
push
lahf
sub
mov
jo
out
pop
dec
lret
insb
mov
mov
sub
adcl
movsb
data16
push
jmp
test
imul
mov
inc
mov
or
jne
push
push
mov
jmp
test
icebp
sub
push
sbb
fidivl
xchg
frstor
pop
add
add
shll
out
push
orb
pop
xor
xor
and
repz
jg
outsl
jae
sar
jns
sub
rcrb
jae
add
xor
ror
aaa
cmpsl
lret
shlb
fldl
sbb
mov
int3
mov
ja
scas
aam
cmc
jmp
mov
fmuls
mov
mov
add
ss
xlat
push
insl
int3
jno,pn
jo
jne
adc
loop
and
sub
and
ret
pop
lahf
fmul
leave
inc
and
ss
xor
dec
push
mov
sbb
sub
mov
mov
dec
xchg
mov
dec
or
iret
dec
or
testl
xor
pop
inc
mov
add
lret
sbb
data16
mov
icebp
fisttpll
lcall
cmp
mov
rcr
xchg
outsl
jae
lea
xchg
mov
fisubrs
scas
leave
mull
test
call
mov
ret
xchg
xchg
repz
xor
add
xchg
xor
adc
stc
pop
in
rcll
jns
gs
lahf
aam
push
pop
lret
fcomp
jno
in
push
test
pop
adc
mul
lds
mov
imul
push
jge
mov
imul
ja
lcall
pop
aad
sbb
lret
dec
gs
cwtl
adc
xor
incb
sahf
inc
pop
cwtl
jmp
popa
xchg
stc
xor
insb
push
xchg
push
enter
jne
add
fcmovnbe
jecxz
mov
mov
jb
lcall
adc
sbb
xor
pop
mov
test
insb
lea
in
pmulhw
loopne
stos
sub
xchg
adc
idivb
test
sub
adc
ficoml
adc
cmc
test
dec
popa
xchg
or
cmp
add
mov
inc
ja
aam
imulb
imul
sbb
clc
sub
mov
push
arpl
dec
xchg
push
les
inc
arpl
xor
fnstcw
aas
fsubs
data16
lock
adc
mov
sbb
and
imul
mov
negl
and
jp
lahf
scas
lret
adc
repnz
add
ror
cmp
and
xlat
mov
mov
push
imul
into
jno
jge
pop
cltd
lock
into
sub
jp
push
mov
dec
push
lret
cmpsl
bound
aad
mov
or
call
inc
or
push
push
jb
inc
cmp
lea
fwait
push
lock
mov
and
pushf
add
sbbl
loop
test
cmp
jecxz
pop
cli
jl
sub
iret
cwtl
aam
sub
notl
cltd
stos
lock
or
cmp
push
jp
jl
xchg
pop
sbb
cltd
cmp
sub
shrl
stos
mov
lea
pop
pop
scas
xor
enter
out
push
and
mov
xchg
dec
sub
lea
pop
test
sub
shrl
add
mov
imul
jg
ficompl
jb
pop
test
cld
cmp
enter
cmp
mov
or
inc
fists
aaa
push
jle
inc
push
sub
xchg
xchg
out
dec
cli
loop
movsb
arpl
rcrb
jecxz
push
int3
lea
mov
xchg
mov
loope
jbe
or
lcall
int
add
add
pop
add
arpl
add
add
roll
add
add
add
add
add
or
add
add
add
add
add
add
cltd
add
rolb
mov
ja
mov
jo
jo
add
add
mov
add
gs
add
add
add
add
popl
add
add
add
add
jg
mov
add
je
add
and
add
outsl
jp
add
add
xchg
add
add
add
mov
sbb
filds
arpl
jae,pn
push
arpl
je
iret
dec
add
outsb
jae
jb
inc
aaa
add
call
ret
mov
adc
mov
lea
inc
testb
cs
xchg
test
incl
adc
clc
add
and
adc
jge
out
mov
lea
decl
mov
gs
inc
rolb
jbe
cmpl
add
adc
xor
push
push
call
cmp
add
fisttpl
push
cld
adc
mov
lea
add
adc
mov
clc
inc
roll
add
clc
incl
cmp
add
add
push
lock
add
add
add
add
sbb
add
clc
add
add
push
imul
xchg
dec
outsl
imul
arpl
outsl
adc
add
inc
push
popa
gs
lret
insb
gs
gs
addr16
push
dec
jb
pop
movsb
imul
arpl
add
add
add
sub
mov
add
lahf
movsl
xlat
mov
cltd
imulb
mov
sbb
mov
lret
ret
jo
mov
clc
cmp
stos
lahf
dec
jge
inc
sub
xchg
loopne
mov
outsl
and
gs
stos
pop
lcall
cmpxchg
repnz
pop
fldpi
das
cpuid
xor
push
sub
cmp
loopne
add
aam
pop
inc
push
ror
push
aam
insl
jbe
stc
mov
mov
pop
and
aam
scas
pop
arpl
jne
jno
add
shr
daa
test
or
lret
mov
iret
clc
lahf
jmp
dec
xor
mov
dec
loopne
fistpl
and
addr16
je
scas
push
sub
lods
loope
sbb
add
push
cwtl
addr16
pop
xor
pop
jle
mov
dec
loop
mov
imul
push
mov
fisttpll
mov
dec
sbb
jno
mov
adc
gs
cmp
inc
pop
mov
int
rcrl
sub
mov
jecxz
add
or
push
loope
popf
pop
mov
xchg
andl
iret
cmpsl
cmpsl
jne
mov
inc
jo
cmp
or
dec
mov
pop
mov
data16
icebp
stos
xchg
orb
vpunpckhqdq
jge
sub
loop
cld
ja
fadds
sbb
jae
or
into
xor
push
mov
sbb
fcomps
mov
arpl
xchg
ljmp
adc
xchg
das
ret
cmp
xor
fdivrs
push
hlt
sub
cmpsl
add
and
stos
push
and
fidivrl
and
push
mov
shll
mov
and
cmp
mov
pop
jo
cmp
test
jae
fldl
jbe
std
rclb
push
setle
insb
mov
pushf
fldenv
add
or
cmp
cmpsb
popa
jle
imul
or
mov
shrb
imul
push
xor
pop
pop
lods
pop
xor
and
dec
sub
out
lods
outsl
xor
dec
std
sub
rorl
dec
pop
dec
inc
mov
push
adc
push
aad
dec
push
mov
imul
add
mov
add
cmpsb
pop
addl
lcall
cltd
arpl
lret
inc
mov
xchg
lret
pop
lret
push
and
cmp
lods
pop
push
js
rclb
dec
dec
daa
cmp
mov
and
fistps
js
aad
pop
inc
addr16
jno
fistps
jle
sub
subl
pop
std
das
adc
push
dec
pop
aaa
dec
rorl
inc
mov
cmc
mov
loop
mov
aad
mov
push
icebp
into
fwait
cmp
sbb
push
test
cmp
or
dec
cmp
mov
insl
sahf
xor
test
jmp
xchg
xchg
xor
and
and
or
mov
aaa
negl
in
cmc
loopne
sub
mov
mov
fidivl
push
mov
mov
mov
call
and
out
jne
cmp
sbb
dec
xor
push
scas
imul
dec
rolb
ret
xchg
test
lcall
fdiv
and
insb
push
fisttps
inc
mov
leave
test
cld
inc
add
mov
jmp
jns
sub
mov
cmpsl
mov
shll
dec
movsb
lret
xor
int3
nop
imul
and
int
xor
mov
add
in
pcmpgtb
add
and
inc
jo
cltd
inc
sbb
xchg
push
loopne
popa
mov
shl
dec
std
lods
shlb
in
xchg
pop
repz
mov
or
fcmove
add
add
jnp
and
mov
iret
hlt
jl
jmp
cmp
loope
bswap
ror
mov
sbb
stos
fidivrs
xchg
rolb
mov
fldenv
movsb
xchg
xchg
xchg
out
imul
bound
mov
mov
inc
jp
aam
xor
jecxz
ja
mov
adc
jnp
adc
mov
inc
xor
daa
fsubr
and
pop
add
jno
mov
xacquire
shr
add
xorb
pop
adcl
or
jg
lods
adc
cmpsl
ret
xor
out
rcr
adc
jo
call
mov
inc
add
cld
clc
mov
shlb
sbb
inc
mov
mov
lds
xor
add
gs
cmc
inc
sub
inc
and
out
das
jmp
or
mov
or
enter
add
add
inc
adc
jle
lret
clc
mov
xchg
ss
sub
pop
dec
in
and
or
push
lods
insl
push
addl
inc
push
jg
sub
addb
sbb
xor
adc
scas
inc
cmpsb
fwait
mov
mov
or
pop
pop
ss
stc
xor
jb
jecxz
idivb
xchg
adc
lret
pop
adc
aas
mov
ss
ss
ja
or
sbb
cs
jge
scas
int3
and
ds
gs
rclb
pop
dec
cmp
jmp
pop
sub
mov
mov
dec
loop
int
push
mov
sbb
lret
xor
push
testb
jge
sbb
xor
dec
push
or
cmp
lcall
out
fwait
cmpsl
jg
xchg
or
and
xchg
hlt
mov
inc
insl
cmp
shlb
xchg
outsl
dec
adc
mov
outsl
push
mov
imul
in
xchg
jno
cmp
sub
loopne
jp
cmpsl
scas
xor
mov
popf
adc
add
addr16
pop
pushf
xchg
mov
add
fbstp
and
push
mov
les
int3
mov
jle
ds
or
sahf
sub
cld
out
lcall
fwait
mov
and
fwait
in
bound
fidivrl
test
push
push
aad
pop
xchg
dec
fwait
mov
adc
repz
loopne
push
inc
ljmp
movsb
dec
mov
outsl
pop
jge
test
int3
sub
inc
sub
mov
add
add
adc
movsl
ret
xor
adc
cmpsb
inc
jne
jnp
inc
jg
arpl
add
mov
outsb
sbb
stos
adc
stc
outsb
scas
jle
cli
inc
adc
inc
pop
adc
es
in
call
mov
mov
loop
je
push
jne
jge
pop
cmpsb
pop
xchg
pop
sub
sbb
jno
test
and
xchg
cmpsl
fisttpll
lahf
xchg
mov
add
jns
xchg
aad
dec
xor
addr16
cmp
adc
sbb
sarb
and
imul
push
dec
stc
or
cli
jb
ret
jnp
les
xchg
jae
shll
pusha
test
xchg
out
push
in
ja
sarb
cmpl
push
lock
mov
mov
sub
inc
cmc
inc
gs
push
xor
hlt
sbb
push
push
jae
fists
push
insl
out
jmp
and
arpl
mov
call
repz
imul
cld
dec
xor
int
fstl
popa
xchg
xchg
dec
mov
stc
roll
dec
jns
aaa
js
pop
insl
lods
cmp
repz
cmp
sbb
rorl
std
inc
loopne
push
inc
aam
adc
or
je
enter
outsl
push
data16
jp
push
or
mov
loope
mov
adc
jle
add
rorl
mov
fwait
in
out
loop
xor
cmc
call
out
test
inc
lock
xchg
aas
leave
push
mov
mov
jmp
rclb
adc
mov
mov
outsb
add
icebp
xchg
and
jns
adc
mov
mov
pop
dec
stos
mov
dec
mov
xchg
sub
movsb
push
cli
arpl
aam
jle
cmp
add
stc
push
mov
pop
es
or
pusha
dec
sbb
or
push
jo
mov
cmpsl
fstpl
test
ret
mov
pop
and
es
and
sbb
loop
sbb
data16
sub
shlb
adc
and
fisubrl
rol
dec
out
jno
mov
hlt
add
mov
cs
pop
sbb
insb
loop
scas
push
punpckhbw
cltd
cli
aam
inc
sub
iret
xchg
cmp
shll
lret
daa
lds
mov
pusha
lods
inc
or
push
mov
lods
fadd
fists
lahf
ret
pop
xchg
pop
roll
cld
out
iret
ds
add
xchg
icebp
lahf
jp
aam
pop
ljmp
scas
jg
inc
shll
repnz
pop
aaa
scas
outsl
clc
push
jno
xorl
mov
psadbw
xchg
mov
in
fdivrl
xor
pop
aas
xchg
add
addb
mov
mov
stos
pop
mov
mov
xchg
push
notl
cmp
rcll
int
stc
test
mov
ret
outsl
test
mov
leave
out
add
sbb
cmc
out
fwait
pop
shll
in
sub
rcrl
int3
and
jl
mov
out
dec
and
aam
xchg
test
or
dec
mov
out
jecxz
cmpw
in
adcb
xchg
loope
mov
push
inc
mov
or
and
xchg
sbb
js
mov
push
pop
mov
ds
movsb
mov
dec
lods
xchg
leave
mov
sub
mov
or
or
gs
popf
jmp
fcoms
dec
jecxz
pusha
ljmp
cmc
pop
sbb
cmpb
arpl
pusha
inc
ret
push
int3
push
into
rorl
fmuls
xchg
sti
jbe
mov
or
cmp
int
add
fwait
push
ss
ret
mov
mov
sbb
xchg
xchg
fcompl
cmpl
daa
pushf
loopne
pop
adc
xor
mov
into
and
dec
sub
sbb
in
stos
jg
pop
mov
popa
mov
pop
mov
xor
sub
ljmp
jb
or
psrlq
stc
mov
mov
cwtl
pop
iret
cs
jp
sub
aam
sub
out
ja
add
mov
xchg
loopne
and
and
call
mov
adc
push
xchg
fcmovbe
loopne
cmp
aas
enter
in
xchg
jge
xor
pop
test
pushf
pushf
or
xchg
cs
push
inc
test
cld
imul
adc
pop
sbb
fcomps
mov
cli
ss
mov
inc
bound
jecxz
push
inc
and
xor
inc
imul
mov
popf
jmp
mov
pusha
pop
adc
test
pop
mov
ljmp
sti
inc
cmpsl
pop
bound
mov
mov
insb
movsl
jl
das
adc
test
ja
ret
dec
inc
dec
dec
or
pop
push
jbe
loope
jp
mov
test
int3
cmc
pop
add
xchg
jnp
xor
movsb
push
cmc
mov
fisttpll
fdivrl
xor
lds
xchg
jecxz
ja
nop
out
insb
int
xorb
push
jno
shr
mov
dec
outsb
mov
jl
and
push
xor
push
cmp
push
push
inc
mov
arpl
jmp
dec
cmpsl
xchg
pop
dec
ret
xchg
popf
pop
fcmovnu
cltd
push
pushf
xor
lret
adc
stos
ds
jge
clc
lds
mov
cmp
std
imul
push
and
scas
clc
xchg
cmp
sub
leave
in
out
cmp
fistl
ret
stos
sti
jg
mov
cmp
inc
movsl
jmp
call
push
mov
adc
jge
fs
adc
dec
push
sbb
mov
dec
inc
ljmp
inc
add
and
mov
add
cmp
roll
push
dec
mov
dec
push
imul
repnz
rcrb
mov
inc
bound
add
sbb
movsb
push
sbb
xchg
adc
push
arpl
dec
adc
movsl
xor
jns
enter
syscall
cwtl
negl
dec
jmp
adc
movl
jmp
sub
jno
enter
xor
xchg
es
adc
and
cmc
dec
mov
xor
jg
out
jbe
sbb
les
int
bnd
fwait
pop
rcll
imulb
add
push
fwait
cwtl
and
je
xor
mov
lods
sub
cmpsb
and
lods
int3
sbb
in
cmp
mov
add
cmp
js
scas
rcrl
int3
dec
dec
or
sub
mov
xchg
mov
cs
xchg
mov
jo
xchg
cs
push
jp
mov
ss
aam
out
rcll
cltd
sub
mov
xor
fcoms
das
je
xchg
dec
aas
mov
insl
xchg
fst
fwait
loop
stos
jge
dec
les
jl
mov
daa
jne
stc
test
add
cmpsl
sti
ja
sub
push
pop
pop
scas
in
jbe
addr16
leave
int
xchg
adc
sahf
insb
stc
add
call
sbb
call
xchg
jmp
sti
push
lea
repz
in
sub
in
clc
stos
andps
cltd
in
push
dec
pop
lahf
dec
mov
outsb
pop
pop
test
jmp
jne
sbb
jmp
in
cmp
addb
cmc
add
mov
jecxz
repnz
or
lret
dec
mov
xor
pop
js
jae
leave
xorl
rol
inc
pop
aaa
clc
xchg
cmp
fmull
inc
mov
cld
mov
outsb
mov
adc
mov
subl
ficoml
lods
jl
dec
mov
inc
aaa
jge
inc
mov
loope
xor
cwtl
mov
int
gs
mov
ljmp
xchg
pusha
cmp
loopne
mov
push
mov
pusha
jno
outsl
loope
arpl
rorb
pop
mov
insb
movsb
sub
flds
fxam
das
jp
mov
out
adc
sbb
add
insb
jl
dec
adc
and
les
in
xchg
add
test
push
xchg
push
xchg
inc
movsb
inc
ljmp
xchg
lods
xchg
fcomps
imul
and
push
pushf
aas
mov
pop
adc
popf
call
xor
push
xor
adcl
jns
sub
cltd
cmpsl
std
or
lods
mov
xlat
pop
bound
jnp
in
mov
rcrb
mov
adc
jg
sbb
std
daa
add
mov
aad
push
sbb
dec
lcall
mov
into
inc
xchg
lcall
in
mov
mov
cltd
aad
cli
lods
mov
scas
xchg
cli
lds
push
inc
sub
dec
adc
les
outsb
test
xchg
loope
xlat
xchg
cmp
cmp
test
pop
cmp
xchg
cltd
std
lcall
push
scas
hlt
int
inc
int
push
xchg
cld
dec
xchg
dec
popf
loope
jbe
in
mov
mov
pop
mov
mov
add
adcl
xchg
dec
cs
add
and
outsl
repz
jne
lods
stc
jo
incl
pop
rol
repnz
call
icebp
insb
je
dec
in
scas
cmp
jle
xchg
cmp
mov
sti
mov
cmp
mov
xor
sub
test
int3
insb
lahf
sbb
jecxz
jp
lret
int3
ret
sub
push
jno
aaa
mov
in
aad
es
ss
mov
fsubrl
lret
xchg
stc
ljmp
hlt
mov
inc
cmc
jl
jg
fs
jno
fs
in
popf
nop
cmp
xor
pusha
inc
pop
inc
or
push
addr16
test
mov
testl
cmc
mov
sub
or
cwtl
jbe
sub
pop
jge
fdivr
ss
leave
adc
and
and
push
in
aas
stos
and
daa
push
stos
xchg
lods
aam
push
call
mov
popa
cmp
test
insl
or
in
loop
std
fs
js
mov
mov
loope
sbb
sbb
sbb
popa
fwait
dec
xchg
outsb
mov
cmp
rcr
xor
jo
lcall
add
adc
in
push
jno
incb
in
dec
insb
insb
sahf
sub
sahf
cmp
jns
pop
mov
movsb
in
les
inc
pop
mov
cmp
and
fnstsw
es
inc
mov
fldt
bound
popa
lret
test
int
sbb
mov
std
jae
cmpl
fcom
mov
lret
mov
adc
xchg
add
dec
push
aaa
cmp
push
lods
aaa
addr16
jecxz
dec
stc
xor
or
sbb
mov
stc
lret
ss
xlat
dec
rcrb
lret
mov
ljmp
pop
inc
mov
dec
xchg
ret
xlat
sbb
cmp
scas
mov
mov
mov
aam
and
ja
cmp
inc
stos
push
xor
cmp
xlat
push
sub
mov
inc
mov
fs
shll
les
mov
imul
push
out
pushf
xor
jl
call
add
mov
ret
mov
adc
inc
dec
std
insl
lea
cmpsl
cmp
cmp
inc
fwait
push
loopne
jge
sub
mov
xchg
add
fwait
push
inc
sub
push
xchg
jg
ret
insl
ss
scas
adc
mov
icebp
jnp
and
mov
int
cs
out
icebp
outsb
sarb
mov
jo
pusha
ret
aad
out
mov
xor
arpl
repnz
or
xchg
sub
inc
ss
ficompl
enter
aas
xchg
test
xchg
cs
jl
inc
mov
in
lock
adc
xor
shrb
sbb
lea
fcoms
leave
scas
xor
push
jno
pop
ja
sbb
mov
push
mov
cld
hlt
je
aaa
gs
inc
lret
jle
or
fiaddl
loop
ds
mov
sbb
imul
packssdw
or
orl
mov
add
shrl
add
lahf
lcall
add
add
add
js
add
add
movl
fadds
add
add
add
add
add
add
ja
mov
dec
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
add
pushf
add
rcl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
aas
xlat
add
sub
add
and
add
sbb
add
adc
add
or
add
add
add
cld
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
xlat
add
pusha
xlat
add
insb
xlat
add
adc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
clc
xlat
add
sbb
add
inc
fadds
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xchg
fadds
add
add
lods
fadds
add
add
fadds
add
fadds
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
lock
add
fadds
add
flds
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
fiaddl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
fildl
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
fildl
add
faddl
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
faddl
add
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
faddl
add
faddl
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
