add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
push
push
cltd
or
or
sub
or
add
add
add
push
or
add
push
add
add
add
add
lret
add
add
test
add
add
add
add
add
add
push
add
test
loope
xchg
add
add
add
add
add
add
test
add
add
ljmp
add
add
add
out
ljmp
add
add
add
add
add
add
add
test
add
test
add
add
add
add
add
add
add
add
test
add
add
add
add
test
add
add
add
add
test
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
pop
add
add
add
add
add
insb
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
insb
add
popa
add
add
add
dec
add
add
add
add
add
add
test
add
add
lret
add
xchg
add
add
add
mov
add
add
add
push
add
aaa
add
add
add
mov
or
inc
add
add
add
adc
add
clc
add
add
and
sbb
flds
or
add
add
add
jmp
add
add
add
add
test
add
xchg
xor
xchg
add
inc
add
add
add
add
add
add
add
add
add
add
add
mov
test
add
add
add
inc
add
add
popf
add
add
add
add
add
add
stos
add
add
add
add
add
add
aad
jne
sbb
sbb
cmp
sub
test
add
arpl
add
add
add
add
add
add
arpl
add
or
add
insb
add
add
add
add
add
add
adc
add
add
add
push
add
add
ljmp
add
add
add
add
add
add
add
or
and
adc
add
add
inc
add
xor
pop
add
cld
add
stos
add
add
int3
add
add
icebp
add
add
add
add
aad
sbb
outsl
add
add
add
add
arpl
add
add
mov
add
test
add
add
sbb
insb
add
add
add
add
add
add
add
add
add
test
add
sub
test
add
add
add
xchg
add
add
add
test
add
push
add
add
push
add
add
test
add
add
insb
add
fdivs
lcall
dec
adc
xor
push
jle
cld
mov
sub
push
inc
jnp
repz
dec
sbb
incb
add
cmpsb
cmc
add
rcrb
rorb
dec
aam
adc
fstl
fisttpl
dec
mov
imul
mov
cmp
add
cs
pop
in
daa
cmpl
jle
pop
test
loopne
dec
insb
adc
jge
scas
cmpsl
lea
push
or
jge
gs
add
dec
xchg
xor
jb
loop
outsb
push
cs
repz
call
pop
imul
cld
movsl
cmp
mov
dec
mov
xor
outsl
cmp
add
adcl
sbb
cmpl
in
mul
push
test
push
out
adc
cwtl
shll
jbe
adc
or
mov
cmpsl
mov
push
push
cmovo
xchg
xor
in
mov
mov
outsb
std
es
insl
sub
shlb
flds
nop
int
cmp
ret
stc
imul
nop
inc
inc
xchg
out
lock
pusha
sahf
sub
push
add
and
jne
lock
cmp
popa
pop
cmp
sub
xorb
arpl
push
sti
pop
inc
jg
fistps
sbb
xchg
sti
add
jo
fwait
lretw
sahf
jle
sbb
add
add
cltd
jnp
mov
xchg
scas
and
popf
lahf
cwtl
aad
add
clc
mov
jne
inc
lea
ret
sbb
data16
and
in
sub
addb
fnstenv
push
adc
cmp
xchg
frstor
sbb
sub
push
sahf
ljmp
mov
dec
cmp
dec
hlt
int
in
push
nop
mov
mov
cmp
call
sti
pop
cmp
mov
repz
orl
ret
pop
mov
out
mov
sub
mov
or
mov
push
cmp
or
or
sub
orl
flds
outsb
orl
push
sahf
fcmovnb
inc
daa
jae
in
sub
dec
pop
add
lahf
adc
mov
fiaddl
dec
inc
xchg
fisttpl
add
sahf
fistps
sbb
icebp
lods
fadd
cli
sub
mov
sub
and
imulb
mov
stc
mov
je
sub
fcmovb
rorb
xchg
xlat
mov
push
dec
cmpsl
pop
in
in
aam
sbb
cltd
js
pop
mov
ljmp
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
sbb
decb
cmp
outsl
sub
pop
dec
dec
xchg
xchg
out
xchg
fadds
in
pop
sbb
sub
push
dec
ss
inc
xchg
out
xchg
repz
mov
cmpsb
in
mov
mov
add
popf
stos
scas
nop
faddl
stos
rorl
dec
xor
dec
popf
push
inc
mov
and
jb
ljmp
dec
add
xchg
cmpsb
pop
push
adc
dec
dec
out
rolb
stc
sbb
bound
jno
inc
or
xchg
aaa
jbe
mov
jbe
out
sahf
mov
mov
lea
ss
pushf
cmp
imul
stc
sub
sbb
xor
aaa
mov
xchg
insl
out
sbb
add
ror
mov
shr
outsb
test
outsb
xchg
push
mov
in
gs
fsub
scas
shll
loop
repnz
std
fwait
adc
mov
cs
ds
imul
adc
mov
gs
inc
sub
push
pop
inc
dec
ss
jmp
clc
xchg
mul
cwtl
and
sbb
or
clc
jae
and
fiadds
into
lcall
loope
push
pop
into
dec
xor
inc
jg
addr16
pop
adc
pop
out
cld
xchg
xchg
out
mov
ret
cwtl
out
and
jne
push
push
daa
inc
push
adc
dec
ss
insl
popf
idivb
xchg
mov
cmpsb
in
push
sbb
sub
push
dec
ss
insl
popf
idivb
xchg
mov
cmpsb
in
push
sbb
cmp
pop
cmp
sbb
sub
adc
xor
inc
adc
cli
or
fcompl
shr
dec
cmp
mov
icebp
inc
inc
mov
cmp
push
xchg
mov
leave
out
in
fsubrp
mov
les
decb
sub
push
call
cmpsl
fs
pushf
sub
mov
ds
push
push
pop
dec
inc
leave
fistl
in
cmp
push
sub
inc
sbb
xchg
dec
shrb
push
mov
out
jns
mov
mov
cli
or
fisubrl
test
push
add
adc
push
mov
ja
call
mov
add
in
pop
jl
std
cmp
mov
fbld
clc
data16
adc
add
aam
jmp
xchg
sbb
andps
cltd
lcall
test
mov
pusha
jno
js
addr16
fwait
nop
call
cld
pop
xor
enter
enter
xchg
dec
inc
movsl
aas
ja
mov
insb
fisubrs
xchg
stos
roll
jnp
pushl
imul
adc
loope
cltd
insl
mov
ss
in
enter
pop
cmp
aad
sbb
jo
pop
sbb
in
lods
add
cmpsb
lds
pusha
ret
jno
xor
xor
inc
stos
and
sub
movsl
mov
sub
jb
in
cltd
xlat
iret
int
xor
iret
dec
jp
add
adc
inc
arpl
arpl
sbb
mov
pop
out
xor
and
pop
clc
inc
sbb
xor
cli
daa
dec
jp
bound
adc
mov
aaa
cmp
outsb
mov
cld
mov
inc
test
mov
fstpl
aaa
rcr
dec
cmpsb
pushf
sbb
ret
sub
nop
out
int
xchg
xchg
inc
mov
mov
aas
stc
sarl
jno
enter
arpl
mov
sahf
imul
es
sbb
popf
mov
dec
cs
bound
add
push
jecxz
sbb
xor
daa
lret
insl
xchg
mov
hlt
pop
xchg
in
cltd
enter
jae
fadd
pop
pop
adc
xlat
nop
jmp
push
inc
jle
lods
add
repz
lods
cmp
and
fdivs
mov
sarb
test
mov
mov
cwtl
jmp
mov
aad
fsub
cmp
rorb
cmp
sbb
dec
xchg
pop
push
fmuls
sbb
cli
shlb
cmp
mov
test
xor
sbb
daa
enterw
cmp
push
arpl
push
test
jg
xlat
push
push
pop
sarb
pop
jae
or
inc
sub
adc
xor
cltd
inc
mov
pop
movsb
aas
lahf
jno
subb
popl
fcomps
inc
inc
mov
push
or
xchg
mov
iret
in
mov
and
inc
pop
dec
and
jo
xchg
int
ds
sub
mov
add
cmc
fadds
sbb
adc
xchg
mov
shrb
icebp
mov
push
pop
cmpsl
rcrb
jl
mov
into
cmpsl
lods
xadd
xor
sub
jmp
push
ret
in
aam
pop
insl
xor
xchg
mov
jnp
fisttpll
shlb
and
jge
push
add
mov
divl
add
iret
aad
xchg
inc
sbb
sub
pop
mov
mov
xchg
mov
pop
subb
adc
pop
std
and
lcall
mov
roll
out
push
jecxz
out
insb
sub
or
shlb
inc
into
add
sub
and
insl
sti
jle
out
iret
addr16
mov
pop
jg
repnz
rcrb
cmp
dec
dec
xchg
or
ret
jb
and
jle
jmp
in
push
and
xchg
movsl
into
jbe,pt
xchg
cwtl
stc
popa
mov
pop
and
pop
cmp
sti
rcll
lea
lret
aad
out
sbb
xor
adc
iret
sub
cmp
xchg
and
jae
test
shl
mov
or
jmp
outsl
xchg
pop
aas
test
cmp
sub
test
outsb
mov
mov
xor
outsl
lods
cltd
gs
ss
xor
outsl
cmp
or
rcll
adc
jle
into
ret
mov
fisubl
xor
inc
jmp
sbb
pop
add
adc
out
cs
mov
jmp
add
sub
rcrl
push
or
bound
xchg
clc
testb
dec
mov
mov
adc
pop
pop
std
inc
cmp
sahf
sbb
add
fldenv
cld
push
int
sub
mov
push
aad
shl
sub
arpl
ret
mov
pop
mov
ret
push
cs
sub
int
ret
xor
inc
mov
sub
test
mov
ja
xchg
sti
push
imull
pop
adc
jecxz
mov
cmpsb
insl
sub
data16
xor
push
scas
ret
std
add
es
lock
xor
cmpsl
cmp
lret
lds
jbe
incb
icebp
fadds
xchg
pop
mov
mov
ficoms
cltd
leave
jmp
sbb
mov
jmp
std
jb
xor
cld
inc
cmp
adc
test
cmp
aad
xchg
adcl
dec
cmp
cli
xor
call
ret
andl
mov
xchg
test
int
sbbb
gs
out
out
stos
pop
fcmovb
ljmp
cmp
std
jmp
lret
cmp
push
adc
xchg
xchg
add
dec
mov
pop
fcoml
pop
ret
out
iret
mov
mov
repnz
mov
gs
js
shll
repz
push
jae
jb
test
mov
push
jge
test
aam
mov
bnd
roll
mov
pop
or
xor
in
addr16
and
rorl
inc
or
mov
ja
or
push
ss
ss
lds
int
cmp
fistps
add
jno
nop
popf
mov
jb
rcl
pop
or
sbbb
jns
pop
in
inc
dec
pop
cmc
das
push
cli
push
xor
std
and
and
ljmp
and
sbb
cmpsl
cmp
sbb
sub
push
ja
into
into
jmp
and
pop
fwait
loope
cmc
sbb
jbe
mov
jns
xchg
dec
xor
ret
and
xor
mov
dec
insb
and
pushf
jmp
jecxz
fsubrp
dec
push
xor
xchg
push
jmp
int3
xchg
sbb
push
notl
cli
jnp
lds
xchg
jecxz
repnz
sbb
dec
faddl
insb
hlt
int3
mov
fbld
or
mov
jge
mov
test
jns
test
dec
dec
cmpsb
inc
icebp
cmp
cltd
rcrl
inc
dec
mov
and
jno
cwtl
pop
or
les
dec
sub
inc
repnz
movsb
xchg
cmp
add
movb
dec
cmp
xor
pop
push
adc
inc
imul
xchg
pop
test
in
fcompl
mov
push
cmp
xchg
frstor
jle
lock
adc
aad
xor
ds
mov
sbb
fsts
sub
popf
js
fcoms
jo
push
out
pop
mov
jg
popf
lret
mov
cmpsl
scas
mov
mov
out
add
push
movsb
push
out
out
mov
addb
cwtl
inc
xchg
popf
inc
xor
pop
imul
xchg
push
loopne
sub
sbb
pushw
cmp
adc
cmp
lcall
pop
cmp
repnz
test
xor
push
xchg
imul
pop
aad
loopne
outsl
xchg
pop
jae
adc
pop
mov
pop
adc
lahf
aaa
push
fisttps
fistpll
xor
imul
pushl
scas
mov
gs
mov
mov
fwait
dec
sub
mov
ss
out
lds
ds
push
pop
inc
dec
mov
add
or
push
mov
fimuls
int3
adc
mov
push
push
pushaw
nop
and
pop
xchg
in
gs
dec
and
xor
cwtl
jecxz
add
mov
leave
add
jmp
test
adc
xchg
push
sub
movsl
fcmovnbe
mov
cmp
or
mov
push
stos
shr
ljmp
cmp
sub
movb
shrl
inc
inc
cmc
loopne
cld
xchg
movsb
fs
shll
sahf
sbb
dec
insb
in
aaa
and
sbb
sbb
test
jge
cmpsb
xor
jnp
push
rorb
inc
cmpsl
mov
inc
mov
pushf
insb
daa
sub
cld
xchg
push
sub
stc
scas
iret
jle
pop
xor
ds
aaa
in
icebp
out
add
dec
out
and
test
sti
iret
fwait
push
movsl
pop
push
cwtl
pop
and
test
add
fcompl
mov
xlat
pop
jo
or
pop
push
test
push
ds
pop
loopne
and
dec
test
shrl
pop
sub
call
push
pushf
addr16
pusha
lods
imul
iret
pushf
insl
cmp
jp
or
xor
xlat
add
in
adc
pop
and
push
adc
fsubrs
inc
xor
out
cmp
adc
in
fs
sbb
mov
test
jne
ret
repz
shrl
repz
lods
mov
sub
xlat
xchg
mov
dec
mov
jbe
or
mov
movsb
adc
ret
mov
mov
mov
movsb
lret
int
mov
sub
push
xorl
inc
int3
jp
ja
movsb
daa
roll
sarl
mov
mov
mov
imul
pop
repnz
lret
andb
int3
cli
cmp
clc
xor
mov
push
mov
in
sub
push
mov
mov
sbb
push
mov
fst
dec
lds
daa
pop
jo
lret
pop
sub
inc
or
stos
push
push
dec
movsb
cmp
shlb
adc
pop
rcl
jns
add
aaa
jns
data16
and
stos
cmp
data16
pop
mov
push
or
pop
dec
cmp
and
mov
sbb
jecxz
aam
add
test
outsb
xor
scas
rcl
es
jecxz
scas
xor
rcrl
jbe
push
out
mov
and
mov
and
sbb
xchg
rorb
jl
test
sbb
push
out
mov
stos
aaa
jge
iret
push
sbb
add
xchg
push
decl
cmp
pop
into
out
lahf
shlb
sarl
xchg
jmp
imull
and
stos
jo
pusha
mov
inc
dec
les
dec
shl
or
or
mov
addl
jg
xor
pop
jae
and
loop
push
xchg
mov
adc
fisttpll
add
sti
loope
push
scas
loop
in
push
sub
lea
dec
mov
sarb
insb
xchg
mov
fadd
and
push
add
push
in
cmp
cmpsb
in
movsb
test
imul
test
lods
ret
fwait
sarb
repz
cmp
xorl
incl
aaa
mov
cwtl
mov
mov
lds
cld
fcmovu
in
jns
sbb
pop
adc
dec
and
sub
insl
gs
add
cmp
xchg
push
pop
popa
mov
test
insl
mov
adc
inc
cmp
mov
pop
es
rolb
fstl
jle
adcl
jl
in
and
sub
xor
pop
nop
int3
mov
lock
add
xchg
push
add
push
xchg
loop
jb
xlat
daa
ljmp
fimull
add
aas
sbb
xchg
xlat
inc
mov
hlt
insl
fbstp
dec
mov
nop
adc
sarb
out
add
cli
sahf
jbe
test
add
outsl
lock
fwait
pop
and
fwait
mov
push
lcall
fmull
mov
and
jmp
int3
mov
lahf
lods
aas
test
lret
leave
sbb
out
les
add
or
sub
jmp
dec
xchg
or
fld
add
push
or
adc
lret
jbe
icebp
xlat
mov
sbb
pop
xor
cmp
in
bound
push
imul
xor
loop
pop
sub
pop
adc
adc
dec
inc
lret
sbb
mov
es
scas
xchg
add
arpl
mov
daa
jg
and
push
sbb
int3
and
mov
or
arpl
pop
mov
aam
gs
mov
cmp
xor
inc
out
out
mov
fistpll
in
imul
lret
sub
lcall
inc
lock
sub
outsl
mov
movsb
nop
jbe
xchg
scas
or
mov
jno
fnstenv
test
in
stc
add
xor
add
push
and
xor
add
jle
or
pop
jge
xchg
fstl
cmp
es
add
sbbb
divl
sub
jp
bsr
or
adc
mov
jnp
add
cmp
and
aad
pop
mov
and
mov
cwtl
sarb
sub
and
xchg
pshufw
out
sbb
psllw
or
mov
dec
mov
jp
jle
add
test
sub
std
je
gs
mov
iret
pusha
je
dec
mov
movsl
testb
rcrl
cmp
cmc
push
test
xchg
fidivl
ja
arpl
fnstsw
mov
outsl
push
loop
scas
sti
shrb
dec
into
lock
mov
mov
sub
stos
sub
out
fldt
std
mov
mov
inc
dec
push
in
mov
lds
sbb
fwait
sub
push
jo
daa
fwait
loopne
cmp
stc
in
jle
push
in
aad
mov
and
mov
push
pusha
pop
stos
lods
sahf
ret
aam
ds
adc
mov
cmpsl
mov
mov
gs
mov
xchg
inc
insb
iret
jp
pusha
or
cmp
mov
xor
cmp
cmp
mov
and
xchg
cmp
iret
iret
in
call
and
in
mov
sub
xchg
mov
es
jg
jnp
mul
push
adc
lea
lds
pop
or
nop
add
popa
sti
pop
lcall
aam
xchg
dec
sub
xor
jmp
or
sbb
dec
rcl
mov
movd
iret
std
test
fstpt
and
sub
pop
movsb
sub
repz
cltd
scas
shl
push
jnp
add
xor
loop
inc
and
push
insb
jge
pushf
out
fwait
pop
lea
arpl
fisttps
enter
mov
scas
unpckhps
mov
jnp
xchg
mov
ret
sti
ret
mov
orl
xchg
push
in
test
test
mov
enter
aas
xor
jnp
outsb
insb
mov
data16
push
clc
jl
sbb
xor
lcall
mov
std
shll
xchg
adc
adc
or
pop
imul
and
pop
imul
sbbb
sahf
daa
outsl
call
imul
mov
jp
addl
sub
ficoml
decb
lock
pop
add
pusha
ds
jecxz
arpl
mov
and
mov
sarl
ja
pop
jns
shl
push
divb
daa
int
fucomip
sub
adc
mov
stos
adc
and
jg
inc
pop
aas
or
stos
mov
inc
movsl
push
mov
dec
pop
cltd
cmp
push
popf
call
lock
pop
xchg
insb
push
lods
push
imulb
mov
add
mov
mov
enter
pop
inc
jo
pop
xchg
ret
mov
sbb
sub
push
fwait
cmpsb
inc
xchg
ja
cwtl
dec
xor
jo
in
jmp
jle
into
adc
aas
scas
outsb
scas
or
test
movl
dec
pop
xor
lahf
push
stos
cmpsb
add
cli
in
mov
sbbl
data16
jg
dec
push
loopne
add
mov
fsubr
push
stos
and
push
fwait
xor
and
mov
lods
icebp
add
ds
sub
sub
imul
or
fcmove
stc
push
lock
push
and
or
dec
aaa
dec
lcall
mov
gs
xchg
gs
scas
sbbl
cwtl
movsb
push
dec
xchg
xlat
daa
aas
pop
mov
push
imul
out
ds
call
test
inc
mov
inc
xchg
adc
popf
bnd
ljmp
add
add
in
shl
adc
jge
jnp
jp
xchg
and
in
in
addr16
mov
adc
andl
lds
stos
and
in
mov
jo,pn
stc
mov
das
fldenv
lret
cwtl
mov
fldcw
push
idivb
popa
mov
iret
sub
incb
lahf
mov
ret
test
inc
sar
push
adcl
test
outsl
std
xchg
scas
inc
cmc
xchg
movsb
cmp
rorb
out
and
movsl
std
icebp
mov
movb
sbb
dec
fildll
cltd
xchg
test
mov
jge
mov
adc
jecxz
jno
ss
or
adc
adc
ror
mov
imul
dec
fsubrp
or
jo
jecxz
and
jne
loopne
xor
inc
push
xchg
xchg
mov
sbb
sub
fnstcw
xor
add
sbb
cmp
loope
lods
enter
xchg
mov
stos
jge
aad
pop
pop
mov
loopne
push
lock
xchg
jecxz
clc
addr16
adc
jb
shr
rolb
aad
jne
cmp
inc
rorb
dec
xor
mov
cmp
cmp
cmp
mov
mov
sub
jmp
mov
lret
xlat
movaps
stos
cmp
pop
inc
mov
adc
popf
cmpsl
or
jmp
xchg
sub
sbb
test
cmp
ds
or
test
inc
loopne
or
sub
mov
add
jmp
push
and
inc
add
sbb
inc
cli
xor
in
cmp
cmpsb
fptan
jno
repz
cmpsb
jmp
push
cwtl
mov
mov
fdivs
into
push
mov
sub
fcompl
dec
rolb
repz
push
push
dec
jle
and
sahf
daa
aad
adc
not
cmp
decb
aaa
fs
notb
xchg
stos
daa
mov
lods
jmp
jmp
adc
or
mov
lret
mov
jae
popa
push
pop
popa
add
enter
lods
pop
lock
out
lods
inc
js
repz
jb
test
test
movsl
sarb
sbb
dec
das
in
lahf
in
loop
sub
das
cmp
stc
dec
fisubs
jge
cmp
pop
cmpsb
jnp
mov
xchg
jne
cwtl
mov
insl
in
subb
fisttps
mov
or
outsb
and
loopne
mov
enter
ljmp
ljmp
sub
push
xchg
stc
push
xor
in
mov
xor
adc
push
mov
arpl
pop
fbld
fdivl
mov
fidivs
js
aaa
sub
cmc
xor
ret
rclb
dec
xchg
scas
scas
add
mov
jp
mov
xorl
cmpsb
xor
mov
loope
sti
cmc
push
mov
cmp
sahf
sub
jae
dec
loopne
adc
dec
outsb
push
imul
mov
mov
xchg
in
aaa
or
dec
aam
scas
mov
mov
or
xchg
clts
les
ret
add
mov
mov
repz
mov
das
and
xlat
and
lods
movsb
outsl
test
out
xchg
mov
pop
sub
dec
jns
test
and
stc
and
inc
je
push
cmp
inc
mov
adc
xchg
das
bswap
aaa
push
int3
divl
out
mov
mov
xchg
and
mov
bound
sbb
ds
sbb
fistps
in
xchg
daa
pop
in
popa
test
movsb
pop
mov
in
jg
add
or
repnz
jg
dec
lcall
out
dec
mov
jnp
jl
add
push
sti
cmc
pop
mov
xchg
inc
xor
xor
mov
cmp
xor
cld
push
mov
incb
dec
cmp
cltd
or
mov
mov
mov
es
lret
push
incb
jae
and
or
je
fnstsw
lods
add
dec
rorb
mov
jnp
int
stc
mov
inc
ret
inc
adc
add
jbe
inc
add
pop
std
out
add
lret
icebp
jmp
ret
cmp
sub
ss
insl
popf
idivb
xchg
mov
cmpsb
in
push
sbb
sub
push
dec
ss
insl
popf
idivb
xchg
mov
cmpsb
in
push
sbb
and
pop
pop
add
ss
insl
rcrb
movsb
xchg
fstps
or
push
push
pop
push
dec
ss
cmpsb
lods
bound
daa
pop
mov
push
mov
test
push
lds
aad
in
cmc
inc
leave
cmp
sbb
pushf
push
scas
gs
adc
push
lds
aad
in
cmc
dec
test
outsb
movsl
jle
mov
push
scas
gs
adc
push
lds
aad
in
cmc
dec
test
outsb
movsl
jle
mov
jbe
pop
fistl
push
lods
inc
lods
dec
xchg
inc
jp
jg
lea
inc
movsl
or
inc
cmpsb
mov
movsb
lods
mov
add
loop
loope
sarl
pop
adc
xor
stos
push
jo
adc
and
je
inc
ja
sbb
and
xor
mov
mov
adc
insl
mov
cmp
in
int
mov
aaa
iret
jle
jle
adc
sahf
add
jne
pop
mov
test
or
cmc
xchg
mov
xor
adc
xor
pop
adc
shll
lods
outsb
lock
push
fildl
pop
popf
aam
sub
cld
and
lds
aad
in
cmc
dec
test
outsb
movsl
jle
mov
push
scas
gs
adc
imul
xchg
push
loopne
cld
add
cli
loope
cmp
push
fldl
sti
add
lahf
jo
pop
mov
mov
jg
sub
adc
sar
push
stc
sub
ss
adc
jae
pop
imul
pop
xchg
outsb
movsl
jle
mov
push
scas
gs
adc
push
lds
aad
in
cmc
dec
test
outsb
movsl
jle
mov
push
scas
gs
adc
push
lds
mov
inc
aaa
sahf
icebp
arpl
mov
xchg
movsb
push
dec
mov
adc
dec
outsb
xchg
dec
inc
lret
xor
aas
and
lret
lret
sbb
push
inc
or
popf
sti
ss
call
stos
inc
mov
or
sbb
jg
leave
sar
icebp
nop
add
lret
mov
les
lock
movsl
jae
rcl
jp
mov
test
push
ret
mov
push
clc
mov
mov
pop
dec
aam
mov
dec
pop
icebp
cmp
and
dec
mov
scas
mov
cmp
sub
popa
adc
inc
ja
jmp
sbb
das
in
ja
xor
mov
mov
js
push
fcoms
mov
stc
cmc
in
shrd
aas
hlt
add
lahf
add
xchg
cmc
outsl
jne
mov
lcall
ret
dec
mov
push
popa
cli
dec
xchg
lret
or
push
cmp
or
clc
jmp
lcall
mov
loopne
shl
cmp
sarb
mov
orl
adc
push
mov
bound
lds
into
add
mov
aas
rcrl
jp
je
fbld
shll
jmp
mov
into
push
fbld
xorb
mov
pop
push
popf
insb
stc
lret
jb
imul
push
out
bound
lret
repz
mov
pusha
pushf
jnp
mov
je
in
push
and
pop
sti
mov
dec
push
outsb
adc
inc
stc
out
in
fmuls
mov
push
jecxz
das
push
repz
fcompl
jne
orb
stos
mov
cmp
xchg
inc
out
popa
ja
jmp
push
jno
imul
imul
inc
stos
and
inc
dec
mov
das
jg
sub
add
subb
pop
jns
add
sub
sbb
mov
pushf
popa
cltd
testb
xor
mov
cmp
cltd
jne
cwtl
or
dec
les
stos
out
add
imul
in
sub
imul
push
and
mov
leave
and
dec
jmp
das
repz
mov
mov
ficompl
jo
mov
pop
fistps
xchg
jg
jg
mov
sub
mov
xchg
add
rcll
or
push
pop
push
adcl
out
cmc
add
push
lret
int3
adc
daa
adcl
sti
das
jmp
nop
and
adc
xchg
mov
jbe
add
xor
es
ret
sbb
mov
push
or
push
pop
adc
aaa
mov
je
mov
shlb
fwait
push
cli
jg
into
dec
lock
jbe
repnz
mov
jo
popf
pop
ret
stos
pushf
repnz
cmp
mov
xor
cwtl
cwtl
mov
ret
mov
mov
add
inc
push
pusha
lds
add
hlt
test
sbb
add
cmp
jo
inc
clc
lret
cs
std
push
enter
shll
cmp
mov
pusha
dec
mov
jno
xchg
xchg
mov
jmp
scas
test
or
cld
sbb
mov
fdivr
rorb
pop
mov
test
fnstenv
mull
jmp
xchg
and
cli
xor
xor
ja
call
inc
mov
mov
lcall
fistl
pop
out
cmpsl
jns
xchg
or
cli
sub
mov
loope
or
mov
in
cmp
aaa
xchg
iret
das
mov
lock
adc
sub
push
lret
push
xchg
shlb
push
push
std
aas
add
repz
shlb
cmpsl
stc
jbe
sub
addb
jge
rcrb
dec
mov
imul
cld
ret
and
out
shrl
ficompl
popf
jl
movsb
cli
push
jmp
fs
cmp
cmp
in
mov
inc
add
mov
sub
pop
cmp
push
adc
mov
aas
movsl
sbb
gs
dec
mov
repz
push
or
mov
jecxz
or
outsl
xor
push
leave
out
pop
mov
in
mov
xor
rcl
aas
push
pop
and
inc
pop
fsub
push
outsb
popf
out
orb
jo
push
outsl
cmp
repz
pop
out
cmp
inc
inc
test
xchg
pop
fldln2
dec
mov
sbb
call
mov
in
cld
out
loope
jmp
pusha
call
addr16
lock
mov
or
dec
dec
and
pop
sbb
pop
outsb
imul
hlt
ret
xor
dec
xor
je
cld
mov
test
push
jo
jle
jge
sub
enter
dec
pop
fiaddl
or
aam
adc
push
mov
cli
sbb
jmp
xchg
cmp
xchg
stc
repnz
out
loope
fidivrl
jbe
sahf
push
cmpsl
out
mov
and
shl
nop
jg
sub
roll
jmp
dec
bswap
add
add
add
sub
int3
jp
mov
push
ja
leave
mov
shrb
cmp
inc
sbb
add
add
jns
imul
pop
pop
pop
loop
adc
pop
fistpll
and
cmc
cld
out
jne
lahf
lahf
adc
hlt
pop
scas
arpl
imulb
jbe
add
sbb
jae
inc
dec
sub
push
mov
push
sahf
movsl
div
adcl
in
leave
or
into
xor
push
jbe
xlat
roll
xchg
mov
mov
jae
outsl
movsb
or
in
add
ljmp
sbb
sahf
push
pop
movsb
jbe
mov
inc
outsl
fldt
adc
dec
out
lret
push
orb
ffreep
arpl
sbb
jbe
mov
ljmp
cmovle
jae
cmpsl
pop
xor
push
add
rcll
lcall
icebp
or
mov
xor
sbb
pop
and
jns
xor
or
push
stos
int
insb
hlt
dec
out
idivl
mov
addl
outsl
and
add
cwtl
cmp
es
fs
ds
insb
or
arpl
testb
add
jb
push
cld
cmp
jle
repnz
inc
and
hlt
mov
or
jns
jno
sub
and
js
add
dec
cwtl
jo
mov
jg
mul
test
shlb
fcmovne
add
push
scas
mov
scas
push
xchg
inc
jge
insl
pusha
cs
lds
and
adc
push
leave
and
xor
ljmp
mov
lods
xor
sbb
imul
ljmp
popl
test
idivl
mov
inc
xor
fwait
push
jbe
inc
mov
xor
inc
sub
out
mov
enter
push
sub
lea
lret
dec
cltd
movd
je
xchg
xchg
in
dec
cli
xor
cmpsb
sub
mov
movsl
push
mov
movsl
subl
mulb
dec
sahf
mov
shll
cmpsb
test
and
dec
pop
fimuls
xchg
lcall
or
add
fimuls
std
dec
scas
lea
sub
jmp
and
ret
mov
fdiv
mov
cs
dec
mov
das
aam
mov
inc
xor
add
std
int
outsl
ret
movsl
int
mov
test
rorb
jo
out
add
sub
repz
mov
and
imul
adc
mov
sahf
fwait
int
in
pushf
or
je
cwtl
out
cmp
mov
or
das
push
outsl
cli
jne
jbe
lea
mov
test
push
pop
and
dec
mov
mov
lahf
pushf
sbb
leave
and
cmp
pop
stos
aam
xor
mov
fdivs
sub
cs
clc
rorb
push
sahf
addb
rcrb
aad
dec
int3
dec
iret
xchg
iret
cmpsl
push
fsubl
outsb
add
sub
and
outsb
dec
inc
in
xchg
inc
xchg
in
and
mov
sub
pusha
mov
repnz
sub
mov
in
mov
cmpsb
nop
dec
mov
repz
push
daa
outsl
dec
fists
icebp
inc
jae
xchg
mov
rol
mov
out
fsts
add
arpl
ds
pop
mov
test
mov
in
dec
push
or
scas
ret
pop
arpl
xchg
les
and
inc
hlt
test
shll
test
addr16
loope
push
inc
cmp
int3
ds
aas
mov
mov
pop
clc
mov
rorl
bound
push
stos
dec
mov
clc
jbe
jbe
fucom
adc
dec
int
ds
ret
in
xchg
pop
add
cmpb
dec
frstor
sbb
das
out
pop
mov
inc
call
lret
rcll
inc
add
lock
prefetcht1
ss
bound
push
pop
jo
mov
mov
movsl
dec
outsb
adc
fidivs
iret
pop
inc
xchg
fsubrs
or
dec
push
cmp
test
or
sbb
test
pop
xchg
jno
in
pop
adc
or
mov
cmpsl
xor
stos
push
fsubp
pop
mov
jp
lock
push
pop
xchg
addb
ja
jmp
int3
dec
mov
aas
jns
mov
mov
out
leave
mov
push
into
scas
mov
fyl2x
cwtl
xchg
into
ss
xchg
fildl
icebp
mov
xchg
cld
loopne
leave
push
pop
push
out
ja
movsl
cli
xor
push
std
mov
mov
out
mov
mov
mov
rcll
or
sbb
xchg
and
pusha
or
cltd
in
mov
xchg
test
mov
xchg
enter
in
cmpsb
and
xor
sbb
and
jmp
xor
in
andb
or
inc
ja
rcrb
leave
and
imul
lea
sub
out
jo
insl
mov
out
xor
fdivl
push
lods
mov
pop
mov
sti
in
jae
adc
cltd
jne
outsl
push
stos
mov
push
bound
or
inc
lcall
mov
jbe
lock
mov
jb
into
mov
not
mov
jnp
in
push
lahf
and
and
sub
xchg
pop
xor
push
cmp
mov
cmp
popa
test
in
cmp
mov
push
mov
lods
sub
out
aaa
and
mov
cmp
mov
or
lods
mov
mov
lods
fwait
mov
add
adc
xor
stos
popl
jb
test
shrl
xor
xchg
rorb
rcrl
icebp
adc
mov
pop
loop
or
lea
push
push
frstor
sarl
add
dec
dec
sub
inc
xor
hlt
stos
mov
lcall
adc
jne
fistl
xchg
lods
lock
int3
push
or
rdpmc
out
hlt
out
jo
xor
outsl
push
sub
jae
pop
hlt
mov
mov
cltd
into
in
fisubl
in
and
and
and
shll
dec
ja
rorl
or
sbb
jae
jg
fxch
ror
cs
cmp
mov
sti
pop
test
xchg
jp
stos
scas
sub
sub
imul
in
and
aad
jecxz
sahf
dec
loope
jp
jmp
push
mov
mov
mov
outsl
mov
sbb
mov
cltd
xchg
inc
mov
inc
cmpsb
pop
jne
sbbb
lea
hlt
or
rcll
dec
pop
inc
sub
sub
pop
je
xor
outsb
jmp
mov
push
jmp
imul
pusha
inc
aas
mov
int3
mov
outsb
dec
rcrl
das
adc
xchg
cltd
mov
or
out
inc
incl
stos
xchg
add
in
hlt
push
in
adcl
jl
push
dec
push
arpl
sbb
push
mov
mov
adc
push
data16
scas
test
lea
adc
xchg
jne
jb
jnp
mov
lea
pusha
xchg
cmpsb
jmp
xchg
das
add
push
shll
ss
in
mov
mov
loop
movsl
xor
push
stos
xor
jecxz
dec
xlat
sbb
cmc
mov
xchg
insl
data16
shll
lds
jg
mov
loop
jl
or
push
cmp
hlt
jae
std
les
lcall
addb
lods
fxch
mov
inc
cmp
xor
gs
cmc
jns
mov
and
shrl
pop
and
inc
cmp
das
das
jecxz
fdivl
and
jmp
cs
inc
ficomps
mov
dec
popa
int
js
pop
sti
addl
or
lahf
add
cld
inc
popf
add
ja
push
cmp
xor
add
pop
pop
pop
dec
imul
ds
add
adc
ret
xor
imul
mov
outsl
pushf
rorb
and
and
dec
cmpsb
adc
in
pop
inc
rol
sbbl
gs
xor
add
ret
and
test
ret
pop
loopne
enter
adc
xor
pop
pop
mov
adc
or
adc
dec
or
jne
nop
sbb
mov
mov
push
stc
out
daa
repnz
cmp
gs
cld
and
iret
out
stos
sbb
dec
daa
ljmp
rep
dec
cmp
mov
mov
lea
cmp
cmpb
mov
ret
insb
jno
inc
pop
lahf
icebp
adc
dec
mov
push
pop
out
js
mov
addr16
jp
mov
shrb
adc
lret
jle
orb
or
mov
mov
mov
movsb
add
cli
movsl
push
inc
inc
jnp
int
out
inc
popf
pop
push
shl
lahf
sbb
inc
pop
decl
rolb
adc
stos
out
aaa
data16
in
fildl
inc
out
sub
xchg
fwait
mov
or
and
imul
test
out
fists
shlb
pop
inc
pop
jle
fimull
shll
or
fs
sub
sti
push
out
lock
cmpb
aaa
cmp
and
mov
xor
xor
out
jp
outsl
es
cld
rol
sub
stos
mov
mov
imul
push
or
ret
fldcw
insl
mov
mov
ret
nop
neg
jecxz
mov
mov
adc
mov
xchg
inc
movsb
arpl
inc
out
cwtl
in
sub
in
push
das
mov
xchg
dec
imulb
inc
imul
cmpsl
push
jge
mov
cld
das
jno
mov
stc
push
sub
andl
sbb
xor
ds
mov
in
and
hlt
mov
pop
push
mov
lods
sub
outsb
inc
add
int
mov
mov
in
jnp
jne
pop
lahf
lahf
xorl
mov
into
mov
sbb
and
movsb
inc
add
call
ljmp
cmc
fwait
or
out
adc
xorb
mov
cmp
out
test
pusha
sub
stos
pop
popa
inc
sahf
jecxz
test
push
shrl
inc
rol
pop
cmpsb
mov
int
jbe
or
std
popf
sub
adc
xchg
ljmp
cmp
mov
popl
in
addr16
repnz
loope
mov
negl
and
int
fdivp
xchg
mov
stos
jmp
pop
mov
xchg
sbb
aas
adc
pop
sub
into
inc
aad
sub
ja
sbb
mov
jbe
add
inc
insl
insl
inc
xchg
popf
pop
jnp
fisttps
or
shrb
mov
adc
jl
jle
xor
and
mov
push
sub
pop
inc
adc
jae
jns
xchg
call
push
xchg
jb
std
aam
and
mov
dec
fldl
push
loopne
dec
cwtl
pop
in
jno
ja
push
dec
roll
push
out
adc
lea
sti
test
incl
out
xchg
lcall
hlt
aam
cmp
xor
movhps
xor
add
push
mov
adc
js
lret
js
adc
adc
fidivs
jbe
cmp
xchg
adcb
rol
sarl
or
test
call
testb
movsb
jge
push
push
xor
dec
push
push
or
mov
dec
xlat
jne
dec
mov
adcl
or
gs
mov
jmp
clc
ss
xchg
sahf
mov
jb
loop
cmp
int
jae
jnp
sub
lods
cld
ficompl
pop
or
mov
mov
fcomps
aad
dec
and
lret
jbe
sbb
sub
test
sbb
mov
sahf
ret
movb
xlat
mov
add
cmp
incb
mov
xchg
push
cmovs
scas
push
pop
dec
mov
aam
test
les
mov
ret
mov
aad
sti
cmp
sahf
inc
cli
adcb
push
std
pop
nop
or
sub
mov
fstp
testl
in
fisubrl
lods
mov
mov
test
leave
mov
dec
push
xchg
js
and
aaa
mov
mov
test
fwait
mov
cli
roll
les
lahf
shll
fcmovnu
jmp
pusha
jne
data16
les
inc
popf
inc
and
mov
hlt
jnp
mov
jp
fidivl
xor
dec
ss
mov
pop
ja
mov
inc
repz
mov
or
jo
andb
jnp
testl
dec
call
jmp
in
call
mov
cmc
push
jp
aam
hlt
mov
sahf
mov
daa
push
xorb
mov
sub
mov
cmp
fs
sub
xchg
pop
lds
and
test
rcll
out
out
xchg
je
or
jno
scas
mov
loop
or
daa
add
push
push
sub
adc
cli
lea
xor
fbld
pop
ja
lea
fwait
push
lods
lds
mov
iret
xchg
jmp
dec
inc
add
push
repz
push
sarl
cli
pop
sarb
std
xchg
dec
adc
pop
pop
pushl
cltd
dec
andb
dec
cmpsl
push
mov
mov
cld
out
sbb
push
icebp
std
mov
or
lret
mov
das
int3
mov
pop
add
dec
hlt
inc
rcrb
arpl
mov
bound
hlt
fnstenv
cmc
mov
call
add
jno
addr16
fldt
mov
outsl
inc
add
mov
stos
xor
jne
test
add
add
sub
fld
das
test
lods
adc
sbb
xchg
mov
cmp
jnp
outsl
pop
jl
mov
imul
rorl
adc
jno
enter
or
sub
aas
xor
pop
arpl
or
sti
shl
or
dec
enter
es
pusha
cmpsl
push
mov
sbb
or
mov
inc
pushf
pop
lock
mov
sbb
cmp
imul
ljmp
xchg
das
jp
jp
add
in
paddusw
add
or
pop
and
jg
sbb
cmp
add
adcb
nop
sbb
push
ret
pop
jne
mov
mov
dec
sbb
xor
shll
shrl
mov
sahf
icebp
dec
mov
fbstp
mov
push
inc
push
rcrb
enter
pop
cltd
call
pop
mov
jecxz
imul
inc
daa
test
add
xchg
push
adc
fdivs
cmp
push
push
imul
test
lea
jb
pop
data16
xor
sbb
push
xchg
out
cmp
xor
lret
push
loopne
add
lods
dec
mul
test
push
sbb
dec
enter
adc
xor
sub
out
movsl
fisttps
in
fistps
mov
xchg
jno
pop
xor
xor
jmp
mov
ja
or
cmpsb
inc
jo
xchg
xchg
std
repnz
or
loopne
lock
insb
cld
push
loopne
or
shrl
test
mov
xchg
pop
insb
adc
pusha
sbb
imul
addb
lcall
mov
mov
push
jb
sti
xor
leave
mov
ja
mov
mov
xchg
xor
mov
or
cmp
icebp
lods
adc
iret
fisttpll
cli
xchg
lods
out
cs
xchg
mov
jle
sti
fnstsw
aam
test
and
mov
mov
lcall
xor
jb
xor
xchg
loope
dec
lahf
sub
mov
cmpsb
enter
lds
xchg
loop
adc
out
adc
ds
dec
test
outsb
movsl
jle
mov
push
scas
gs
adc
push
lds
aad
in
cmc
dec
test
outsb
movsl
jle
mov
push
scas
gs
adc
push
lds
aad
in
cmc
dec
test
outsb
movsl
jle
popl
push
scas
gs
adc
push
lds
aad
in
cmc
dec
test
out
movsl
mov
inc
popa
incl
push
ljmp
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
pop
test
jnp
imul
es
fidivrl
jmp
fwait
inc
mov
je
je
test
jnp
imul
sub
sti
and
mov
je
test
arpl
aam
in
hlt
ret
aaa
movsb
inc
xchg
pop
fwait
add
or
add
add
enter
negl
cmp
out
icebp
pop
xchg
call
xchg
int
and
lcall
into
xlat
cmp
aam
pop
mov
adc
jmp
fistl
btc
push
and
mov
jae
mov
aaa
mov
adc
fwait
mov
stos
mov
mov
dec
loop
lds
aam
in
sub
clc
lret
loop
mov
push
mov
inc
imul
mov
jbe
fcomi
or
xor
pop
mov
mov
cmpb
mov
enter
and
inc
adc
push
fadds
fs
mov
movsb
imul
xor
ret
adc
and
xor
inc
xchg
push
mov
test
in
push
in
cmc
push
subl
or
fwait
xor
adc
push
adc
sub
adc
sbb
ja
or
cwtl
popa
scas
data16
inc
stos
data16
and
ret
iret
and
lds
pop
roll
push
testb
cmp
sub
fildl
adc
and
xor
inc
mov
stos
je
test
jnp
imul
sub
fildl
adc
and
xor
inc
mov
stos
je
test
lret
sbb
xor
pop
pop
adc
stos
imul
clc
jmp
fstpl
lods
jne
or
mov
cltd
shll
mov
xchg
or
sbb
jp
test
sub
cli
int3
cmp
repz
xor
pusha
adc
xchg
stc
cmpsb
int
pop
sbb
movsb
decl
popf
push
std
mov
push
test
jl
cmp
mov
outsl
out
outsl
mov
fistl
repnz
das
mov
hlt
inc
test
popa
repz
and
sbbb
out
movsb
cmc
pop
js
lret
xor
pusha
add
pop
fimull
inc
adc
sub
jge
mov
fisttpll
scas
in
lods
cltd
push
and
into
jae
insb
mov
sbb
sahf
daa
xchg
dec
inc
mov
loope
xor
sbb
popa
adc
add
or
mov
adc
dec
sub
rcrb
push
lods
hlt
xor
or
sbb
add
pop
mov
in
sbb
test
andl
mov
cmc
sbb
fwait
inc
inc
or
dec
mov
lods
add
push
arpl
or
daa
test
add
cs
movsl
test
lds
mov
cli
loop
arpl
mov
cmp
dec
add
mov
adc
loopne
add
faddl
jnp
or
lret
push
or
xor
stos
sub
dec
mov
lods
push
inc
or
add
enter
adc
pop
in
push
addr16
test
ss
std
mov
lock
xchg
hlt
sbb
cmp
add
dec
lods
or
xchg
popf
cs
adc
jno
sbb
xor
or
ljmp
or
cmp
sbb
test
aaa
dec
xorl
push
xchg
push
in
fstl
mov
jb
add
or
fdivrl
test
jl
add
jmp
iret
add
xor
add
mov
xchg
insl
or
xchg
mov
and
in
sub
test
loope
push
ds
pusha
idivl
inc
cmpsl
xor
pop
lea
out
xlat
add
cs
mov
adc
cmp
dec
adc
fmull
jne
je
hlt
in
ljmp
or
dec
pop
mov
sbb
push
xchg
mov
stos
mov
add
outsl
aas
shlb
jg
push
inc
out
scas
xor
push
loop
jmp
mov
mov
pop
mov
les
fstps
xchg
xchg
repz
inc
mov
inc
cmpb
aaa
insl
cmp
paddd
cmc
xchg
push
test
push
cmc
xor
jp
fisttpl
push
ret
in
and
lods
rolb
push
mov
je
rorl
cmpsb
add
mov
push
negb
imul
push
hlt
mov
arpl
movsb
aas
rolb
fwait
jbe
cmc
scas
inc
out
jl
xor
add
dec
mov
add
inc
leave
test
test
aaa
mov
add
cmp
xchg
xor
imul
in
pop
sti
fwait
xor
ja
push
test
cwtl
pop
gs
push
leave
cmp
lret
adc
arpl
xchg
outsb
inc
and
fidivrs
inc
ss
in
mov
mov
cld
jmp
ljmp
repnz
lods
mov
jl
imul
xchg
out
in
jl
fwait
sbb
pop
lods
push
dec
in
repz
or
push
repnz
push
das
dec
inc
sub
cmpsl
pop
sti
sub
int3
imul
pop
outsb
or
jmp
dec
mov
mov
xchg
xchg
xor
loop
fs
mov
out
fs
test
push
pop
mov
test
mov
jecxz
int
xchg
hlt
sbb
xor
xor
cmc
scas
jo
jmp
call
mov
das
js
cs
aam
xor
add
andb
ljmp
adc
sbb
dec
xchg
sub
or
cmp
bound
in
mov
push
cmp
inc
arpl
pop
jae
lahf
push
aas
std
xchg
dec
mov
add
fnstsw
pop
mov
sti
fldl
mov
xchg
mov
es
aaa
divb
clc
mov
sub
loopne
jle
sbb
dec
mov
add
shlb
subl
xor
std
pop
cmp
sub
stos
push
sbb
jne
mov
lds
stos
loopne
jle
lock
or
iret
inc
in
js
inc
out
xchg
cs
loop
test
xorl
enter
popa
jmp
test
pop
icebp
mov
cmp
or
pop
cwtl
es
test
xor
xor
pushf
arpl
adc
dec
ret
ret
arpl
mov
in
adc
mov
hlt
cmp
dec
jp
rclb
sub
cmpsl
shrl
inc
icebp
daa
push
nop
sbbb
push
fistl
sti
je
out
dec
gs
ret
xor
lods
xchg
mov
loope
enter
xchg
pushf
movsb
loop
mov
mov
lods
push
scas
jno
das
or
xchg
sahf
sbb
enter
and
cmp
or
xor
jecxz
icebp
inc
dec
fdiv
pop
mov
sti
jae
mov
mov
fsubs
mov
jnp
stos
in
into
addr16
mov
push
imul
push
js
sar
or
push
sbb
pmaddwd
jae
inc
mov
lods
push
movsl
push
inc
js
xchg
loopne
mov
or
in
xor
pop
test
dec
add
xchg
xchg
hlt
lock
push
cmp
ja
call
andl
mov
cmc
shll
rcll
push
mov
pop
cli
stos
ja
push
mov
jmp
fsubrl
pop
outsb
mov
adc
push
mov
imul
or
test
stc
lds
test
lret
jmp
or
push
push
loop
filds
std
scas
stos
inc
cmp
cmp
adc
mul
or
in
cmpl
repnz
test
aaa
push
dec
mov
std
out
int
or
divl
fildll
or
scas
pop
jl
rcrb
push
fstpl
bound
ret
mov
mov
inc
aas
sbb
xchg
cld
mov
or
sbb
pop
mov
outsb
push
mov
scas
aam
and
or
lock
dec
loopne
pop
popf
adc
clc
push
mov
repnz
adc
in
sarb
sub
xchg
jno
aad
repz
xor
ficoms
fucom
and
aad
pop
xchg
outsl
jbe
pop
cmp
add
fs
sbb
and
add
repz
pop
xlat
mov
lahf
hlt
dec
fwait
daa
outsl
jg
push
or
xchg
leave
insl
sub
fldt
mov
mov
push
adc
xchg
and
sti
or
out
ljmp
cmp
enter
movnti
out
or
mov
mov
adc
and
notb
push
inc
test
cmp
inc
cs
xchg
jl
scas
jbe
push
enter
mov
pop
mov
or
out
cld
es
rcl
dec
ds
pop
add
pop
stos
pop
outsb
call
gs
pop
fimull
out
pop
xchg
cmp
mov
jno
loop
and
push
fdivr
mov
cmpsb
or
jecxz
out
scas
sahf
adc
popf
sarb
sti
int
lods
imul
pop
repz
testl
push
adc
fbstp
into
rclb
jge
js
add
pop
pop
or
xchg
aas
cmp
pop
sti
xlat
inc
ficomps
xor
das
ret
push
cmp
lods
pop
call
in
insb
shlb
xchg
pop
fdivs
mov
xchg
adc
sub
and
mov
sahf
ret
adc
push
mov
jmp
xchg
pop
push
mov
adc
mov
inc
pop
dec
sub
push
jae
adc
scas
iret
jo
and
pusha
xlat
jl
ret
xor
test
push
mov
pop
icebp
and
mov
iret
test
cmp
inc
ret
or
xor
inc
aam
repnz
pop
mov
fcmovnb
mov
rol
xchg
daa
aad
mov
pop
outsb
jb
outsl
in
js
and
lret
movsl
and
or
std
sbb
or
je
sub
inc
dec
jle
dec
or
push
shl
adc
sub
shrb
mov
loopne
sub
scas
xchg
mov
shll
into
mov
pop
lods
imul
mov
xchg
addr16
pop
or
mov
dec
dec
mov
cmp
mov
dec
lretw
stc
lahf
nop
mov
cmp
imul
pop
subb
jecxz
cltd
xchg
ret
adc
lret
xlat
stc
in
jp
jp
push
mov
pop
sub
dec
add
aam
addr16
idiv
in
mov
aad
iret
push
or
mov
pushf
mov
ret
pop
jno
add
outsl
xorb
mov
jae
sahf
ret
add
add
jbe
repnz
cmp
imul
jbe
mov
pop
fdivr
ds
cld
insl
aas
or
outsb
mov
insl
mov
jle
repnz
xchg
loope
jmp
jle
out
mov
insb
outsl
bound
inc
rorb
mov
ss
mov
or
fcmove
jmp
out
aaa
xchg
push
push
pop
cs
pop
or
sbb
ljmp
cmp
test
aam
push
lds
xchg
cli
dec
repz
sbb
jae
lcall
sub
or
xchg
mov
andb
mov
cmp
js
cmp
negb
lock
call
add
cld
dec
adc
icebp
lods
xchg
nop
inc
stos
subb
sub
cmp
ret
push
loop
sbb
push
fisubrs
mov
arpl
push
stc
and
faddl
clc
add
lea
std
cli
stos
push
cs
mov
scas
jne
push
rcl
negl
jne
nop
dec
push
fdiv
pop
lahf
mov
mov
jae
cmp
cmpl
or
lcall
data16
jp
xchg
addr16
sub
push
cli
sti
adc
mov
pop
enter
jb
xchg
ss
jbe
or
jbe
fstl
or
mov
addr16
loopne
in
roll
xor
and
pusha
loope
push
mov
dec
adc
test
lret
imul
xchg
mov
push
sbb
fnstsw
data16
cs
dec
fdivrl
int3
arpl
shll
cmp
dec
cmp
add
jo
or
les
fs
es
push
das
test
scas
and
pop
arpl
jg
mov
xor
jmp
cmpsl
push
fdiv
nop
push
inc
jmp
call
jne
fsub
sbb
outsl
xchg
int3
dec
sbb
lret
mov
mov
and
adc
add
push
xor
and
ret
pusha
cmp
test
in
adc
cld
sbb
xchg
arpl
inc
cmp
mov
mov
cmc
repz
in
push
inc
outsl
pushf
aad
mov
sbbl
and
dec
aaa
jg
lea
das
mov
push
and
pop
dec
jae
pop
pop
cmp
iret
jge
gs
sti
push
pop
dec
loop
inc
or
inc
dec
dec
jmp
push
es
jb
xchg
xor
lods
cmpsl
in
mov
enter
gs
xchg
fcomp
sti
mov
outsl
xchg
cmp
outsb
imul
cmp
jne
cmpsl
jmp
ja
ror
lock
push
idivb
frstor
push
adc
fimuls
jge
filds
push
test
pop
in
xchg
pop
xchg
jb
stc
ss
or
je
loop
lock
test
cvtdq2ps
ret
xchg
jg
fs
xor
sbb
push
mov
inc
movsl
mov
fstps
shl
insb
lods
data16
or
cmp
int3
andb
sub
mov
jae
mov
bound
es
mov
andl
pop
sbb
mov
inc
add
xchg
add
dec
inc
aas
pop
add
and
mov
jmp
bound
pop
xor
leave
push
fucomip
je
jns
add
jnp
adc
subl
lods
js
rolb
jecxz
inc
aas
ret
xor
pop
cmpsl
cmp
lds
mov
arpl
test
mov
mov
pushf
mov
cmp
mov
clc
loope
sbb
aaa
lret
mov
insb
xchg
scas
lcall
popf
add
push
js
in
out
mov
sub
std
mov
sbb
subl
gs
fcmovnbe
cmpsb
fisttpl
mov
push
cld
scas
adc
push
inc
sub
insl
insb
and
cwtl
loope
cmp
js
sub
push
add
mov
push
ljmp
push
jl
gs
mov
mov
addr16
cmp
lds
pop
adc
or
popf
int
arpl
repz
mov
imul
insb
cltd
int3
jne
xchg
or
in
inc
outsb
add
mov
jl
xor
ret
das
mov
outsb
xchg
push
int
out
sbb
pop
jg
cmpsb
mov
mov
jl
fsubrl
popa
sqrtps
inc
or
je
mov
cmc
cmp
mov
pop
and
iret
sbb
or
jb
pop
adc
int3
call
jl
sti
sbb
leave
ljmp
or
or
cmp
mov
mov
or
push
xchg
fnstsw
adc
scas
andl
jae
ss
icebp
xlat
sti
mov
bound
dec
test
fcmovnu
sbb
insl
jo
xchg
or
xor
lods
cltd
vpxor
cmp
fadd
mov
add
bound
dec
push
push
push
or
xchg
icebp
push
add
xor
xchg
dec
mov
adc
inc
jns
ret
xchg
repz
shr
movsl
sub
add
mov
pushf
shll
xor
addr16
imul
leave
cmp
sahf
sti
mov
add
test
lahf
xchg
adc
pop
jge
pop
enter
jns
pusha
ss
or
sahf
and
dec
pusha
bound
fptan
mov
rep
inc
scas
sbb
xor
dec
jl
pop
jno
test
adc
inc
scas
and
or
arpl
xor
and
xor
inc
sbb
mov
or
mov
xchg
sarb
sub
pop
dec
sbb
xor
and
sub
jo
mov
inc
jnp
lds
bound
sub
mov
sbb
sub
jb
add
sahf
testl
push
cli
jb
xchg
dec
or
sti
mov
movsb
lret
adc
cmp
mov
lahf
pop
mov
aas
loope
fwait
stc
xchg
in
aad
popf
orb
adc
inc
or
ret
push
jge
push
push
ja
adc
cmp
fnstcw
push
sbb
push
dec
movsb
or
cmc
pop
icebp
push
xchg
add
sbb
fiaddl
dec
lods
dec
jno
push
popf
and
and
jo
dec
mov
mov
push
add
mov
inc
fmull
bound
xchg
popa
mov
fildl
aad
pop
xor
sub
mov
hlt
fidivs
push
call
adc
inc
jle
or
test
mov
inc
push
inc
or
push
jno
mov
lea
ret
aam
cmp
add
scas
push
leave
cli
sub
addb
xor
cli
adc
inc
aaa
xor
push
jae
movzwl
std
cmp
sbb
loopne
cs
mov
jmp
in
in
mov
jne
stc
loop
stos
aam
call
cltd
pop
lret
andb
sub
inc
xlat
leave
ljmp
lock
cli
inc
adc
jp
inc
jno
aaa
gs
cmpsl
jl
dec
mov
stc
cmp
std
fcoml
mov
in
mov
sbb
insb
mov
nop
pop
xor
scas
movsb
or
jno
cmp
pop
dec
inc
add
data16
mov
cwtl
ds
rorb
movsl
jmp
sar
dec
enter
xchg
repnz
fiadds
mov
sub
out
mov
popf
cmp
jl
mov
std
ds
dec
dec
xchg
fstpl
adc
je
lcall
dec
xchg
call
dec
mov
insl
mov
loope
mov
ljmp
mov
pop
xchg
xchg
movsl
nop
outsb
cmp
sarb
imul
xchg
rcl
test
dec
xor
push
aaa
pushf
or
inc
pushf
jo
and
pop
pop
orb
sbb
pop
subl
sarl
pop
dec
je
and
xor
push
mov
lret
and
sub
sti
mov
lret
subl
aad
test
std
adc
loopne
daa
lret
pslld
jle
mov
movsb
mov
cmpsl
pop
stos
aad
pop
mov
pop
mov
xlat
sbb
mov
xchg
es
clc
pushf
cmc
jecxz
add
jae
stos
scas
jae
rorb
cli
xchg
imul
xor
cmp
mov
mov
out
roll
push
fldl
jne
mov
gs
movsb
xorl
stos
ljmp
cmp
push
cmc
scas
xchg
adc
push
int
in
push
jp
in
scas
pop
cli
xchg
insl
loope
data16
outsl
pop
movsb
fstpt
mov
sbb
mov
pop
adc
mov
pop
addr16
hlt
je
xchg
pop
stc
dec
out
into
inc
filds
aad
jns
movsb
jb
xchg
scas
jp
inc
aas
or
mov
sub
jge
out
imulb
in
pop
shlb
jge
stos
arpl
mov
int3
fwait
inc
push
and
jns
ret
push
pushf
addl
xorb
nop
sub
popa
sarl
push
jae
hlt
push
out
inc
jmp
push
aas
pop
les
lods
jb
push
sbb
out
mov
aaa
dec
sub
mov
fldenv
mov
xchg
test
fists
lea
inc
sbb
aas
inc
aam
jbe
lds
mov
dec
mov
dec
rol
mov
movsb
inc
add
mov
mov
push
cmp
daa
outsl
dec
mov
repz
add
outsb
je
es
pop
push
mov
jb
push
jnp
stc
push
lcall
xchg
adc
stos
sahf
mov
stc
jge
jne
xor
je
gs
mov
dec
push
data16
xchg
xorl
js
or
loope
xor
inc
shrb
std
mov
lds
test
mov
mov
sbb
jmp
sub
aad
adc
insl
fists
mull
mov
or
sbb
jmp
stos
testl
cmp
or
test
rcrb
bound
fbld
and
dec
xchg
mov
test
dec
fwait
popa
jecxz
xchg
test
push
mov
pop
push
xchg
xchg
aad
cwtl
mov
fwait
mov
inc
loopne
imul
movsb
in
mov
iret
outsb
xor
f2xm1
loopne
adc
xor
hlt
xchg
pop
adc
test
in
sub
lcall
js
or
xlat
or
push
dec
data16
bound
out
adc
imull
lods
xor
cmp
sbb
ds
fdivrl
lret
mov
add
dec
sti
push
movsl
fmull
sbb
mov
lea
xchg
add
scas
cmc
jl
cmp
stc
jle
fsubs
push
addl
sbb
call
loopne
xchg
push
mov
add
xchg
fisubrs
jae
mov
in
pop
insl
push
push
outsb
fcomi
or
mov
lahf
and
testl
and
xor
pop
int
mov
cmp
xlat
std
imul
mov
mov
pop
jp
or
push
jns
out
lods
gs
jmp
cld
aaa
adc
insl
sbb
into
add
rolb
dec
mov
int3
push
push
inc
cli
mov
cmp
mov
fiaddl
or
std
or
adc
cltd
xchg
outsl
xlat
mov
andl
test
test
lcall
jmp
push
fbstp
pop
dec
xor
imul
jmp
jecxz
addr16
cmp
lret
mov
in
and
sbb
xchg
xor
xchg
push
xlat
ljmp
push
ret
call
push
and
insb
xchg
jno
imul
sub
fildl
adc
and
xor
inc
mov
stos
je
test
jnp
imul
sub
fildl
adc
and
xor
inc
mov
stos
je
test
jnp
imul
sub
fildl
adc
and
xor
inc
mov
test
xchg
jp
imul
stos
xor
add
mov
in
int3
add
jne
data16
add
xchg
ss
sub
push
mov
test
xchg
mov
cmpsb
notb
and
xor
add
adc
fs
push
inc
push
and
movsb
out
mov
xchg
testb
aam
mov
xor
lods
sahf
push
sub
dec
or
popf
ret
aam
and
pop
push
jno
inc
xor
dec
pop
sub
push
mov
aam
sbb
mov
pop
ret
test
cmpsb
mov
adcl
aaa
xchg
lds
mov
push
cmp
aaa
addr16
push
loop
fbld
or
sbb
add
les
adc
lods
leave
fs
mov
out
push
mov
push
xchg
sub
xchg
push
fistl
popf
dec
lea
movsb
inc
adcl
mov
mov
sti
mov
mov
imul
add
test
movsb
loop
pop
jnp
mov
in
or
and
les
inc
push
shlb
push
sahf
mov
jb
xchg
neg
dec
lods
or
les
xor
inc
cmp
dec
sbb
push
xor
loop
icebp
mov
mov
cmp
jecxz
cmp
jne
gs
xor
inc
inc
jecxz
push
cmp
loope
repz
mov
mov
sbb
jae
push
adc
je
inc
push
push
mulb
xchg
mov
cmpsb
hlt
xchg
les
xor
add
adc
fs
inc
push
push
mulb
xchg
mov
cmpsb
hlt
xchg
les
jecxz
cmpsl
xchg
stc
std
pop
mov
stos
sbb
jle
js
cmpsl
jbe
mov
out
insl
and
mov
mov
add
add
push
mov
inc
mov
inc
loopne
push
jmp
pop
inc
dec
mov
jp
pop
add
jne
push
rolb
cltd
jl
inc
stos
pop
out
rep
lahf
lret
cltd
mov
mov
insl
mov
pushf
jns
ds
pop
sbb
pushf
mov
push
pop
js
enter
jge
dec
mov
loop
pushf
data16
pop
ret
xchg
daa
ljmp
popa
aad
stos
add
push
and
jle
mov
inc
mov
jo
fldenv
int3
rorb
out
xor
mov
repnz
test
mov
std
push
and
cmp
es
sbb
daa
int
jnp
mov
enter
push
faddl
push
std
or
xor
test
out
data16
out
leave
dec
leave
push
dec
loop
sub
ljmp
jb
xchg
test
out
sbb
pop
scas
pop
aad
inc
inc
adc
xchg
and
xchg
lock
add
call
cli
in
mov
fdivrl
sti
loope
test
dec
push
and
xor
lea
lods
inc
repnz
cmpl
outsb
mov
pop
jne
xchg
inc
xchg
xchg
push
push
out
push
pusha
outsl
cmp
arpl
cmpsl
dec
mov
sub
sbb
in
xor
or
xchg
ss
dec
addr16
ror
cmp
loope
jbe
dec
lahf
ljmp
push
push
imul
and
push
sbbl
in
dec
sub
jg
cli
or
jo
ja
pop
shll
mov
popl
push
jbe
insb
mov
lds
sar
inc
xor
ret
jge
mov
pop
je
mov
repnz
lret
or
jmp
fistl
int
outsl
inc
sbb
loope
je
adc
je
fnstsw
pushf
xor
adc
xchg
pop
fmulp
jae
jo
lcall
xor
stc
pop
int3
pop
testl
cld
shll
dec
sbbl
pop
jmp
out
or
pop
cmp
outsl
sbb
mov
int3
mov
mov
mov
bound
adc
fwait
xchg
sub
jp
sub
repnz
sbb
mov
mov
cwtl
aas
jecxz
push
lock
jae
inc
mov
cld
cmp
or
test
clc
xor
cmp
cmpsl
gs
jnp
daa
cld
add
sbb
loope
xor
mov
cmp
fistpll
jne
mov
call
aas
mov
jno
adc
out
pop
xchg
cmp
outsb
push
jle
and
dec
repz
fs
call
idivl
dec
sbb
sbb
sub
dec
push
test
loop
in
sbb
loopne
stos
cs
mov
xor
gs
cli
mov
xorl
out
jl,pn
shl
and
jp
push
xor
cltd
add
mov
repnz
imul
mov
out
dec
mov
cmc
sub
jnp
xor
dec
mov
pop
scas
js
push
popf
sub
xchg
rcrl
jnp
sub
insl
mov
lahf
mov
inc
jns
mov
std
and
rcrl
xor
sub
xor
out
testb
addr16
mov
repnz
mov
jge
sbb
in
pop
mov
fdivrl
jg
stc
leave
pop
push
dec
enter
push
subl
out
mov
and
push
cld
inc
cmp
mov
shrl
sub
sub
inc
xchg
das
dec
aad
inc
in
push
jg
add
xor
jecxz
ss
and
push
push
in
dec
mov
or
out
inc
mov
test
or
jns,pt
push
loop
and
aam
out
rcll
dec
mov
pop
mov
mov
xor
bound
test
data16
insb
xchg
xchg
jb
cmp
jp
and
pop
mov
add
fcomps
stos
int
sbbb
loop
bound
sbb
insl
enter
sbb
xchg
mov
jg
xchg
test
xor
roll
cmp
dec
ret
pop
pop
mov
pop
mov
ret
and
cld
push
rclb
clc
xchg
adcb
push
mov
fstps
into
dec
xor
xchg
es
fildll
filds
xor
mov
idivl
mov
mov
jmp
js
adc
fcomps
adc
fdivrl
push
xchg
pop
xchg
pop
addl
lret
movups
jle
pop
add
or
repz
cld
jg
pop
adc
xor
or
cmp
mov
xchg
and
mov
or
enter
xchg
jne
faddl
mov
mov
and
push
dec
dec
jecxz
scas
fidivrl
ret
push
cli
xchg
inc
mov
or
cmc
xlat
dec
xorl
pushf
leave
cmp
pushf
add
xor
push
fwait
add
mov
or
mov
mov
pusha
and
into
cs
lock
loope
xlat
sub
divb
xchg
adc
dec
mov
outsb
idiv
add
sbb
cli
loope
mov
mov
pop
sahf
push
sbb
jp
inc
es
in
push
mov
clc
enter
ljmp
je
lds
inc
xchg
aad
add
in
sub
std
sub
inc
ficoml
sti
out
xor
xchg
xchg
sbb
in
mov
cmc
jb
mov
loop
jnp
push
ret
sahf
in
pop
mov
dec
out
out
sti
xor
or
sub
ror
push
cmc
fwait
call
das
les
lret
bound
lods
ret
movl
adc
lret
and
out
mov
adc
adc
gs
jnp
dec
js
add
cmpsl
jae
repnz
mov
adc
lods
xor
jge
sub
les
rcr
jmp
jl
xlat
pop
call
push
lds
lahf
mov
fnstsw
dec
inc
dec
mov
mov
stc
mov
test
int3
or
iret
pop
call
adc
push
int
pop
sbb
inc
hlt
xor
sub
dec
popa
ror
arpl
stos
adc
mov
cwtl
or
popa
xlat
mov
popf
or
orps
pop
loop
xchg
jnp
cmp
lds
cmp
sbb
rol
push
xchg
fiaddl
gs
push
jo
stos
xchg
dec
call
cmpsl
inc
leave
add
add
and
pop
ds
jo
and
or
cmpsb
mov
test
nop
push
mov
adc
pop
lock
loope
xchg
mov
push
je
jnp
mov
mov
es
call
fwait
add
mov
mov
pop
repnz
ss
jb
ja
mov
mov
test
pop
insl
out
mov
mov
or
mov
sbb
sub
es
push
mov
pop
rcrl
mov
pop
scas
pop
or
bound
out
imul
mov
daa
sbb
adc
xor
push
sub
cmp
sub
adc
pop
out
add
mov
pop
dec
inc
pusha
mov
mov
push
lret
mov
ftst
fiadds
cmc
pop
shrl
mov
push
jnp
inc
inc
fnstenv
in
and
dec
jo
or
mov
sarl
inc
pop
in
into
jge
roll
jmp
lods
pop
cmpsl
mov
sub
aam
pop
push
repnz
popf
jp
jbe
inc
push
or
and
mov
sahf
add
dec
pushf
mov
cmpsl
push
lock
pop
fs
pop
bound
inc
imul
testl
and
scas
mov
sub
test
or
mull
push
sub
shlb
es
mov
push
mov
cs
mov
cwtl
in
dec
xor
mov
push
cmp
lahf
xchg
nop
mov
ret
mov
aas
sub
xchg
cmpsl
sub
xchg
cmpb
and
test
enter
xor
and
ret
add
cmp
aas
in
scas
xchg
xor
inc
or
es
aad
fwait
int3
xlat
jmp
cs
cltd
aad
ret
pop
js
mov
cs
stc
test
push
inc
popl
fildll
dec
into
orl
sbb
loop
int3
shlb
jb
mov
jns
lods
fmull
aas
int3
je
out
jp
mov
push
test
xchg
ja
mov
ss
nop
jbe
jno
sub
pop
adc
mov
test
cli
jmp
loope
and
push
jl
jno
inc
cmp
xchg
cmp
mov
or
imul
mov
stos
push
addl
stos
push
icebp
or
sub
es
stos
adc
pop
cmp
dec
outsb
dec
mov
jae
ljmp
mov
or
xchg
or
mov
arpl
jns
sarl
test
push
stc
sub
mov
jbe
adc
insl
mov
inc
inc
int3
jns
mov
stos
dec
sub
int
test
and
mov
aam
pop
xchg
mov
dec
pop
push
pop
fsubr
lds
push
xorb
mov
pusha
push
into
scas
inc
dec
jecxz
mov
int
jle
data16
movsl
jp
jmp
mov
jge
ljmp
hlt
xor
and
rcrl
xchg
add
movsl
pushf
addl
std
enter
addb
ja
jb
jecxz
mov
repnz
push
mov
js
pushf
xor
mov
loope
bound
xor
adc
sbb
dec
and
cmpsl
fwait
push
or
movsb
inc
ds
push
repnz
pop
cmp
jnp
aam
es
scas
add
add
imul
pop
xchg
je
imul
mov
push
push
mov
sbb
movsb
clc
icebp
cmpsb
xchg
adcl
push
cld
loopne
inc
mov
enter
cmpsl
test
xor
popa
cmp
and
sbb
leave
mov
rcrb
xor
xor
mov
sbb
push
dec
pop
jne
jp
or
movsl
mov
in
lcall
cmpsb
fmuls
or
cmpsl
mov
aam
test
sub
sub
sub
mov
add
sub
test
fucomi
and
shll
sub
mov
fwait
aas
push
in
dec
mov
hlt
xorb
insb
outsl
inc
cs
cmpl
inc
xchg
stos
cmp
cwtl
es
inc
roll
pushf
sbb
cmp
fcoml
test
mov
jb
push
lcall
ret
fimull
mov
xchg
aad
mov
push
ret
movsbl
repnz
xchg
fistl
sub
xor
and
adc
cmpsb
loope
stos
xchg
inc
mov
dec
xchg
imul
mov
mov
out
adc
mov
jecxz
leave
cmpb
test
test
adc
pop
dec
pop
int
dec
dec
mov
test
push
push
push
jmp
xor
sbb
lret
mov
loopne
xbegin
mov
push
shlw
push
lock
cmp
in
out
mov
jge
or
xchg
shlb
repnz
shlb
hlt
cs
fsubrs
mov
mov
sbb
xor
cld
jecxz
cmp
xchg
inc
sti
mov
or
sbb
jno
test
jne
in
or
jg
sti
jbe
mov
jecxz
test
rclb
lock
pop
ja
inc
outsl
push
das
cltd
pop
jo
popa
fdivs
les
xor
gs
xchg
push
mov
inc
xchg
pushf
jo
stos
data16
pushf
adc
es
xchg
adc
jmp
jecxz
ss
sub
mov
inc
mov
and
out
stos
ja
popf
popf
adc
call
test
gs
sbb
jp
dec
cld
aad
int
jb
or
dec
adc
mov
xor
ret
xor
adc
add
fwait
call
add
test
mov
mov
imull
popf
stos
sub
inc
xchg
pop
xor
inc
and
in
aaa
jno
jle
dec
mov
jp
jecxz
jb
jb
xor
out
insl
ret
jle
sbb
push
cmc
jecxz
xchg
xor
mov
clc
mov
pop
add
add
add
mov
sub
arpl
and
js
stos
xchg
push
jb
mov
iret
xorb
pop
mov
or
stos
mov
movsl
inc
inc
lahf
dec
xchg
and
push
xchg
cmp
xchg
repnz
pushf
dec
shrl
es
in
mov
sub
fmuls
test
mov
cmp
testl
and
test
popa
cmpl
push
mov
cmp
and
dec
adc
xor
cs
pop
leave
adc
mov
cmpsl
mov
cltd
cmp
insb
orl
bound
jle
std
je
sub
cs
aaa
je
jl
test
cmp
push
out
lcall
sbb
xchg
cltd
enter
and
inc
gs
jge
movsl
push
lods
mov
push
sub
push
das
xchg
add
call
lret
adc
fisubl
dec
sbb
nop
mov
xchg
mov
pop
jge
cltd
xchg
sub
pop
mov
sub
cs
inc
adc
aaa
inc
inc
mov
jp
xchg
dec
xchg
xchg
xor
cmpsl
add
fsts
add
aas
cmc
push
outsl
rcrb
jo
jl
xchg
mov
lahf
mov
mov
adc
adc
cs
sub
sub
hlt
imul
pop
insb
mov
cltd
sbb
lock
adc
lods
out
push
adc
xchg
popf
jmp
dec
lods
adc
fsubrl
xchg
repz
sbb
ficoms
ret
test
xor
sub
jmp
int3
movsl
jns
mov
test
add
adc
jp
or
cmp
lea
loope
xor
jbe
popa
jb
inc
addr16
daa
test
shl
adc
mov
and
xchg
sbb
daa
mov
fsubrs
xor
leave
sbb
nop
jmp
addr16
xor
pop
loope
shrb
jns
adc
outsb
pop
imul
mov
rorl
mov
fiadds
cmp
push
jl
push
and
inc
test
rcll
and
cmp
rolb
hlt
and
test
in
inc
into
push
outsl
pop
lret
arpl
pop
mov
nop
js
sub
icebp
addr16
cmpsb
mov
test
addb
cli
shrb
mov
movq
stos
stos
jmp
xchg
push
inc
nop
addl
fsubl
repnz
out
popf
outsb
movsl
sub
and
mov
shlb
pop
pop
fcompl
inc
mov
xchg
push
adc
jl
fdivr
ret
push
test
push
cwtd
mov
in
push
lds
cltd
cmp
lods
mov
push
inc
cmpsl
test
jns
xchg
imul
stos
xchg
add
jns
or
iret
or
inc
mov
xor
jns
jns
pop
and
je
inc
jo
mov
cli
insb
xor
adc
xchg
cmp
push
adc
mov
sbb
arpl
mov
and
mov
daa
add
dec
prefetchwt1
adc
cmc
xchg
fbstp
or
sbb
pop
mov
std
sbb
cmc
jbe
imul
xchg
cld
sbbb
lret
or
pop
les
push
out
arpl
sbb
cmp
mov
das
and
pop
pop
addb
stc
pop
mov
xor
jp
pop
mulb
lahf
cli
adc
cmp
fldlg2
mov
rcrb
cmp
xor
hlt
push
test
out
add
jle
loop
xor
shll
pop
hlt
add
and
xor
mov
hlt
pop
cmpsb
and
aam
imulb
rcrb
movsl
jb
addr16
cmp
in
fadds
rcll
jae
repz
iret
add
jns
imulb
xor
and
mov
rcrb
inc
fdivs
jns
sub
jno
push
xlat
mov
fisttpl
fs
fstl
pop
rorb
pop
sahf
lret
or
cld
leave
test
adc
stos
and
mov
stos
inc
jno
scas
xlat
test
mov
dec
sbb
stos
xor
sub
imul
lcall
out
repnz
inc
lods
pusha
je
test
orb
fcomip
pop
push
popf
out
xorb
push
sbb
repnz
xlat
enter
adc
sbb
popf
je
mov
es
sub
mov
adcl
dec
cmpsb
mov
mov
enter
pusha
int3
pop
in
mov
fmull
fdivs
cmpsb
out
mov
mov
shlb
popa
add
sarb
dec
fmull
ss
dec
jnp
adc
out
lods
push
inc
xchg
jg
mov
dec
insl
mov
aaa
mov
cmpb
cmp
mov
jne
jne
jp
notl
jmp
rcrb
xchg
pop
or
push
fstps
mov
loope
dec
jp
pop
js
jge
pop
xchg
fwait
mov
mov
mov
xor
pop
push
aaa
dec
dec
xor
iret
ffreep
int
out
and
in
xchg
pop
dec
and
idivb
and
sbb
mov
pop
xchg
in
and
xchg
rolb
sbb
insb
ja
xchg
cmp
insl
inc
adc
daa
adc
inc
jo
outsb
xchg
gs
mov
cld
dec
sbb
jp
aad
not
mov
mov
xchg
mov
pop
and
cmp
movsb
inc
mov
inc
test
outsb
jle
and
lods
setne
or
jg
js
ret
insb
pop
stc
dec
call
fidivrs
mov
mov
pop
add
pop
adc
popf
mov
adc
les
loope
sub
es
sahf
lods
sub
mov
fidivrs
push
pop
mov
int
stos
jo
dec
add
xchg
popf
addr16
lahf
xchg
pop
xor
scas
dec
pop
push
push
hlt
les
adc
inc
push
aas
xchg
mov
push
jge
lods
cmpsl
fmuls
mov
push
push
aaa
jg
out
ljmp
nop
mov
mov
mov
imul
mov
shll
movsl
nop
push
ss
int
mov
ror
add
cmp
into
adc
movsl
loopne
nop
clc
sahf
jmp
insb
shr
stos
movsb
loope
call
pop
subl
out
pop
cwtl
mov
mov
jl
fwait
lds
mov
cmp
test
mov
pushl
pop
xor
sar
add
es
jg
bound
loop
mov
or
jbe
xchg
mov
push
xlat
cmp
mov
stc
xlat
fnstenv
rorl
in
iret
jne
in
jmp
mov
or
fwait
pop
adc
jg
adc
stos
or
xchg
pop
in
xchg
xchg
xchg
shr
cmp
lret
sbb
loope
fwait
mov
push
push
loope
mov
mov
dec
scas
bound
push
ljmp
cmpl
lods
mov
scas
scas
or
ss
mov
imul
ffreep
jnp
sub
movsb
push
in
add
mov
pushf
push
lods
sarb
xchg
mov
cmp
lret
stos
jnp
push
imul
push
push
mov
popa
pop
scas
push
push
movsb
pop
movsl
in
dec
pop
xor
mov
icebp
nop
imul
inc
mov
lret
mov
insb
lret
lahf
outsb
jo
shrb
jge
adc
mov
mov
rcrb
bound
cwtl
pop
mov
pop
es
mov
mov
std
andl
cmp
dec
jnp
adc
outsb
sti
add
decb
lods
pop
sbb
or
pop
sahf
add
sahf
sbb
push
dec
mov
xchg
cmpsl
gs
xchg
inc
cmp
jmp
out
fists
cld
sbb
pop
and
mov
or
fldlg2
jns
dec
pop
icebp
cli
or
fdivrl
cld
fwait
mov
push
mov
jecxz
enter
cmc
movsl
mov
inc
lcall
subl
int3
xchg
fnstenv
jg
popa
nop
add
pop
mov
mov
inc
stos
jecxz
jbe
cmpsl
fisubrl
or
out
sub
fisubs
dec
cltd
jae
fdivl
adc
mov
adc
fs
inc
push
push
mulb
xchg
mov
cmpsb
hlt
xchg
les
xor
add
adc
fs
inc
push
push
mulb
xchg
mov
cmpsb
hlt
xchg
les
jl
jl
adc
fs
inc
push
idivb
es
xchg
mov
mov
xchg
in
aam
and
xor
add
adc
push
les
push
jl
jecxz
insb
or
jns
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
or
inc
enter
call
adc
dec
test
insl
ret
dec
icebp
insb
ret
js
sbb
xchg
fadds
inc
clc
arpl
adc
and
fsts
xchg
js
push
mov
mov
shrl
jnp
or
xor
rcrl
imul
into
jl
dec
lret
xchg
inc
mov
sbb
dec
add
inc
sub
packssdw
loopne
cmpl
into
inc
jae
jae
aam
cld
jnp
inc
ljmp
sub
xchg
das
js
push
pop
enter
inc
inc
mov
pop
adc
mov
rcrl
dec
mov
mov
fs
addl
mov
fcmovne
and
xrelease
repz
dec
cmp
pop
pop
pushf
inc
pop
ret
std
and
cmp
out
jecxz
cmp
sbbb
imul
daa
inc
mov
scas
adc
clc
sub
cmp
or
loop
push
xor
cs
iret
inc
fdivs
je
add
cmp
jmp
cli
jno
add
sub
fsubs
mov
ja
outsb
jmp
cmpsl
aaa
ret
dec
cmpl
push
movb
mov
addr16
insl
pop
int3
lcallw
mov
xchg
push
push
mov
enter
lods
imul
test
pop
ret
dec
repz
push
mov
mov
enter
call
xor
ret
dec
repz
push
mov
mov
fldt
jg
ljmp
or
arpl
fldl
cwtl
lret
adc
cli
pop
rorl
pop
cli
loope
inc
addl
jmp
mov
mov
test
adc
pop
cwtl
cmp
aam
xchg
test
cmpsl
jecxz
cmc
push
int3
outsb
pop
mov
leave
jo
rcrb
or
cmp
decb
imul
loopne
cli
in
xor
aad
test
pop
std
imul
imul
cmp
push
mov
adc
pop
push
test
adc
jp
sub
dec
aaa
mov
scas
pop
jmp
jge
loope
icebp
ja
push
xor
jae
loopne
xor
sub
mov
cld
xor
xor
mov
out
call
jnp
pop
nop
cwtl
int
cmp
xor
js
jns
jg
pop
lods
mov
lods
push
xor
inc
push
xor
jle
add
shll
mov
lds
mov
jl
fs
sub
mov
pop
fwait
and
cmp
dec
bound
add
xchg
popf
cs
jne
xor
sub
xchg
mov
je
insl
or
inc
xchg
mov
outsl
pop
jle
aas
test
and
inc
push
sbb
mov
imul
sbb
outsl
cwtl
add
jns
mov
cmpsl
sub
pop
incl
xchg
jb
push
mov
sub
xor
and
mov
inc
or
jl
filds
xchg
jle
dec
fcomps
jne
mov
sub
hlt
mov
out
popa
gs
jnp
mov
mov
std
sarb
mov
push
scas
pop
xlat
pop
cmpsl
movsb
and
mov
pop
inc
mov
jne
jle
add
jecxz
push
jno
xchg
mov
pop
jp
dec
pop
adc
decb
adc
cmp
mov
xchg
xchg
or
pop
mov
out
inc
inc
mov
std
or
sub
in
cli
enter
jge
pushf
cltd
out
pushf
dec
scas
aam
ds
pusha
movups
sahf
scas
out
xchg
lcall
xchg
xchg
leave
sahf
movsb
cli
dec
imul
test
mov
subl
sbb
mov
mov
mov
pop
pop
orb
xor
adc
pop
cltd
cld
jp
mov
jmp
xchg
push
cwtl
inc
mov
adc
or
jnp
cwtl
jo
jl
movsl
adc
inc
sti
lods
pushf
testl
and
ret
iret
std
andl
shll
fnsave
fmull
negl
cmp
int3
aaa
pop
sbb
daa
and
pop
sbb
cmp
sbbl
es
sub
sti
dec
subl
sub
mov
inc
mov
arpl
sub
cmpsb
pop
jns
clc
mov
mov
or
iret
loope
sbb
sarl
push
icebp
push
stos
sbb
jb
mov
dec
es
out
inc
xlat
fidivs
push
addr16
loope
mov
mov
jle
jae
xor
jbe
mov
mov
mov
stos
rcrl
pop
aam
push
adc
cmpsl
out
jge
xchg
xor
cltd
xor
jl
je
ljmp
dec
sub
jne
jg
push
mov
shll
out
mov
sti
xchg
inc
mov
mov
outsl
add
or
jno
mov
dec
imul
clc
jge
fs
fildll
sti
lea
sub
rol
cwtl
or
test
mov
mov
nop
pandn
ret
mov
and
pop
arpl
xor
lods
dec
inc
stos
mov
or
inc
sbb
dec
inc
jbe
in
and
mov
repz
jle
xchg
jo
sbb
cmc
mov
inc
testb
arpl
fimuls
or
sub
into
xor
test
adc
cld
jg
fbstp
stos
push
pop
std
inc
mov
pop
push
jb
dec
xor
fbld
mov
mov
shll
mov
push
fidivrs
mov
xor
cmp
adcb
pusha
push
fbld
sbb
into
add
in
loopne
push
sbb
ret
scas
sub
sub
add
xor
sub
inc
dec
daa
jb
push
cmp
jmp
ud1
lea
push
pop
push
jbe
outsl
jecxz
ja
in
lcall
das
icebp
js
and
mov
cmp
add
inc
leave
inc
add
xchg
push
scas
add
xor
lods
mov
rcrb
sarb
jmp
mov
xchg
ja
fldln2
pop
imul
dec
dec
call
lods
and
imulb
mov
in
cmp
shll
jl
mov
mov
push
pop
adc
xchg
aam
adc
mov
xor
std
insl
js
arpl
mov
daa
cld
outsl
or
push
xchg
cmp
movsb
lods
or
mov
cli
ret
rorb
cmc
test
daa
jp
lods
call
jmp
and
sub
inc
sub
lds
jo
adcl
and
cmp
xchg
inc
fwait
and
adc
jne
pop
push
lds
adc
xchg
test
lret
and
fistps
lds
dec
scas
divl
loop
movsl
je
sub
push
enter
lea
pop
cmp
adc
adc
or
xchg
sahf
jne
aad
mov
push
pusha
test
rcl
cmp
xlat
pusha
sbb
outsl
cs
mov
xor
in
sbb
pop
decb
mov
into
cmpb
dec
pop
push
mov
sub
shll
xchg
mov
or
pop
inc
add
fdivs
cmp
push
push
cmp
hlt
scas
fcoms
push
fnstcw
lods
cmp
mov
shlb
cld
push
icebp
mov
and
aaa
xchg
arpl
out
pop
jg
mov
or
ja
dec
test
test
std
push
cmpsl
or
push
sbb
repz
ss
jg
sbb
hlt
das
test
add
inc
adc
popf
mull
test
xor
push
pop
in
imulb
jecxz
les
out
pop
push
xor
mov
mov
xor
decl
dec
mov
filds
mov
jmp
scas
mov
cli
out
sbbb
jns
cmp
out
gs
mov
in
inc
gs
leave
stos
in
mov
adc
leave
mov
loop,pn
lock
cld
cmp
xchg
lods
mov
je
xchg
xor
mov
xchg
leave
jmp
shl
into
add
loope
pushf
fwait
sub
div
ljmp
adc
movsl
xchg
jae
mov
jns
and
or
sbb
out
mov
idivl
cmp
mov
aaa
cwtl
sbb
xchg
fs
mov
jmp
push
dec
sbb
in
movsl
data16
xor
fildll
and
xchg
jns
push
jb
loopne
mov
pushl
ss
in
inc
aas
xor
and
pop
xchg
insb
mov
fsubl
mov
xor
mov
dec
jae
inc
adc
lds
rorb
jl
lock
imul
dec
xor
insl
ljmp
shrb
enter
lcall
dec
lods
adc
hlt
add
sbb
cmpsb
bound
ret
shl
in
movsl
aaa
ret
mov
xchg
les
jne
xor
fmuls
sarb
mov
scas
jae
add
subb
idivl
sub
test
jle
add
jecxz
imul
fs
test
shll
mov
pop
jg
cmp
test
add
sahf
fstp
sbb
fs
out
jg
dec
lods
les
test
pop
in
daa
into
in
mov
push
xor
or
cmc
mov
mov
and
enter
insb
mov
imulb
mov
sub
push
adc
cmpsb
data16
cli
pop
push
test
ret
sub
mov
pop
push
inc
xorb
jbe
jne
push
dec
add
dec
sub
gs
pop
rcl
mov
sub
push
ljmp
cwtl
in
dec
mov
jge
xchg
sbb
test
scas
mov
scas
adc
incb
mov
cmp
shlb
jne
add
xchg
dec
idivb
pushf
andb
jae
mov
ljmp
mov
mov
add
je
or
lds
cmpsb
popa
imull
inc
cmp
and
fiaddl
cmc
ss
dec
push
test
jns
cmpsl
xchg
pop
orb
inc
mov
icebp
xor
push
ficoml
loope
ret
imul
mov
fisttpl
repnz
ja
arpl
mov
aaa
imul
push
cld
shll
dec
cmp
pop
leave
cs
aam
std
inc
jl
nop
sub
or
pop
mov
arpl
js
testl
mov
cli
sub
lea
fsts
jp
fnstenv
icebp
jge
mov
jl
jae
in
xlat
ret
xor
inc
xorl
pop
adc
adc
pop
push
mov
adc
push
jg
jle
xchg
data16
push
addb
rcl
dec
mov
mov
andl
inc
js
cmpsb
pusha
sbb
inc
and
icebp
inc
xchg
rdtsc
lods
jg
repnz
inc
pop
xchg
jle
lea
push
push
jo
les
push
mov
ret
leave
cmpl
or
inc
pop
pop
test
jno
clc
iret
mov
stos
xorl
dec
rclb
rol
pop
jl
adc
lahf
loopne
adc
data16
lods
in
dec
pop
cmp
pop
into
repnz
jmp
dec
outsb
mov
getsec
xor
mov
push
subb
push
aas
pop
xchg
jmp
enter
fbld
mov
xchg
mov
sub
jae
or
or
mov
lds
aam
out
in
fidivs
push
pop
ds
jmp
push
out
sub
mov
cli
incl
rorb
or
cmpsl
jnp
icebp
sub
jo
mov
cmp
jne
lahf
mov
sub
pop
stc
sbb
jnp
inc
mov
loope
xor
scas
cs
fcompl
scas
insb
and
stos
xchg
jae
dec
jo
insb
push
movsl
cmp
xchg
sub
push
in
in
and
pop
push
push
cmp
push
or
add
fcmovne
je
insl
dec
add
addb
inc
mov
push
pop
sbb
stos
arpl
mov
add
cwtl
insl
lods
outsl
imul
jg
ljmp
insb
loope
stos
mov
mov
adc
cmp
xchg
pop
imul
iret
std
xlat
jle
out
data16
cmp
pop
jne
xchg
lahf
jge
mov
aad
pop
and
test
jbe
popf
push
lds
push
idivl
mov
loopne
out
mov
cltd
xor
sub
lret
fs
scas
xor
add
inc
push
dec
adc
inc
scas
xorb
sarb
cmp
xchg
ss
imulb
outsl
dec
xor
push
xor
aam
out
popf
fnstenv
and
mov
lahf
mov
jnp
sub
dec
mov
cmp
rolb
das
mov
pop
clc
pop
std
lret
rorb
shll
mov
cmp
cmp
clc
repz
inc
and
mov
xor
popa
jg
jb
ret
sbbb
out
inc
mov
push
in
fnsave
hlt
shl
es
movsl
mov
imul
push
out
cwtl
push
lods
loope
adc
aam
scas
lods
mov
repz
mov
stc
jecxz
daa
lea
sahf
and
push
repz
mov
lock
div
ret
mov
enter
sub
leave
cmc
sbb
push
popa
ds
add
std
mov
jb
test
inc
xor
mov
out
pusha
add
push
pop
and
push
stos
dec
mov
cmpsl
fimuls
push
ljmp
pop
pop
xor
mov
mov
mov
cwtl
cmp
fildl
into
fisubl
mov
inc
pop
push
push
adc
test
int3
dec
pushf
pop
sbb
roll
fcoml
push
adc
cli
popa
cmp
in
iret
daa
xlat
mov
xchg
loop
fwait
cltd
adc
sbb
imul
add
test
mov
lahf
movsl
daa
pop
sub
xchg
add
jg
adc
pop
inc
and
jne
loopne
fisttps
les
mov
mov
insb
jno
push
jne
pop
mov
push
imul
cmpsl
fists
jb
sti
or
gs
xor
aam
rcr
jb
mov
je
lea
sbb
xchg
jecxz
pop
into
repz
mov
aas
sarl
pop
lods
rcrb
cmpsl
jecxz
mov
scas
insb
das
pop
cmp
xor
dec
push
dec
and
add
sub
add
sub
mov
outsl
ss
fnstsw
lcall
ss
inc
cli
hlt
fidivrl
pop
xchg
fisubl
dec
push
mov
popaw
mov
int
out
and
sub
inc
shr
ret
outsl
inc
cmp
out
popf
or
push
inc
xchg
je
push
dec
jnp
jl
cmp
mov
lret
cmp
mov
push
lret
or
aaa
cmc
call
dec
xor
pop
inc
inc
pusha
push
adcb
ja
push
jl
mov
dec
mov
pop
mov
inc
push
jns
mov
shlb
sub
in
movb
cltd
inc
xchg
jae
imul
xchg
cmp
mov
cmp
push
ljmp
inc
pop
movsl
negb
jne
sbb
push
xor
sub
jae
test
push
push
pop
mov
dec
in
mov
xor
jmp
fwait
inc
out
sbb
loopne
mov
test
xchg
pushf
jno
insl
jo
push
xor
lea
jecxz
mov
sbb
xlat
test
dec
sbb
and
mov
movsl
jmp
addl
addr16
add
adc
push
sub
dec
sub
dec
fwait
cmp
test
xchg
ss
stos
lcall
cld
mov
adc
push
pop
insl
pop
pop
mov
fpatan
or
outsb
push
push
test
leave
js
mov
and
push
inc
icebp
dec
jns
push
sub
or
jbe
fistpll
sbb
shrb
push
jb
test
xor
imul
pop
subl
cmc
mov
or
add
test
loop
xor
push
rorb
jae
mov
xor
out
mov
inc
xorb
adc
mov
jmp
dec
bound
outsl
arpl
outsl
call
outsb
fxtract
lds
cmp
mov
out
jl
mov
sbb
add
insl
or
add
jmp
mov
mov
shll
les
sbb
rolb
dec
dec
push
pushf
rcll
pop
in
add
in
sub
clc
hlt
orb
dec
call
stc
enter
mov
je
dec
xchg
jae
or
mov
repnz
jmp
outsl
addr16
test
jno
mov
outsb
inc
xlat
mov
sbb
dec
push
add
adc
shl
mov
aas
in
xchg
sbb
push
dec
aaa
jmp
xchg
mov
sbb
or
enter
shr
js
in
inc
pop
aaa
pop
test
mov
or
sub
jle
dec
out
adc
pop
or
gs
fdivl
lret
push
jb
add
shrb
je
les
roll
scas
loop
mov
or
mov
mov
hlt
test
punpckldq
insl
pop
mov
das
int
icebp
push
inc
or
movsl
cs
jo
loopne
pop
pop
inc
fistpll
addr16
stos
mull
mov
dec
push
jmp
inc
jmp
cmc
push
push
nop
ja
dec
scas
aam
mov
in
movsl
test
mov
aam
or
jbe
push
inc
orb
or
in
mov
mov
mov
dec
jns
push
gs
mov
cld
jge
sar
cmc
push
mov
loopne
fcompl
int3
cmp
mov
lcall
popf
shlb
adc
rorl
add
mov
jbe
bound
in
loopne
mov
push
mov
loop
push
mov
insl
xchg
test
mov
jo
cs
incl
out
inc
js
sbb
mov
or
xor
aaa
add
scas
push
xchg
popa
inc
mov
leave
fdivp
jmp
fimuls
mov
inc
shlb
test
push
sbb
add
ret
mov
mov
int
adc
adc
mov
fadds
rorl
in
cld
scas
cld
add
add
cmpb
bnd
xor
arpl
std
test
pop
dec
and
jg
inc
dec
pop
sub
xor
mov
mov
mov
sbb
mov
sbbl
adc
cmp
and
vandnpd
cmp
sub
sarb
insb
fisttps
mov
cmp
jno
xchg
or
dec
loopne
fldl
jge
test
idivb
inc
xchg
add
add
in
icebp
cmp
add
xor
dec
jle
ljmp
jge
arpl
imul
sbb
idivl
inc
lods
test
sbb
insb
daa
cmp
sahf
push
insb
lds
xor
adc
mov
repz
xchg
mov
push
adc
lret
jp
dec
or
inc
mov
lods
jns
or
shr
cmp
cmp
mov
out
xlat
add
and
jecxz
repz
in
fldln2
stos
sbb
jecxz
shll
pop
in
push
inc
out
popf
push
pop
cld
in
fildll
inc
mov
xor
inc
mov
mov
ljmp
iret
stos
fwait
gs
mov
cld
aaa
dec
ficomps
cmp
cmp
js
adc
or
mov
les
test
fistpl
test
push
pop
enter
push
pop
mov
aam
rolb
add
loopne
sub
fldl
lcall
dec
ficomps
enter
std
adc
push
fdivp
push
loopne
push
int3
add
mulb
movsl
jb
push
push
into
sub
push
and
inc
dec
mov
adc
sbb
and
sub
lret
sbb
xchg
addr16
dec
cmpsb
int3
mov
enter
cmpsl
fcoms
imul
sti
aam
add
ret
or
lods
inc
in
out
ret
lcall
out
push
adc
xchg
pushl
cmpb
gs
out
push
int
stc
cmp
insl
data16
dec
cmpsb
adc
int
scas
pop
fcoml
and
mov
clc
fwait
and
inc
mov
lods
mov
inc
sbb
mov
ljmp
repz
mov
aas
mov
jg
out
inc
inc
push
mov
negl
notl
pop
orb
inc
aam
adc
out
lock
ret
bound
icebp
movq
inc
pop
xlat
cmpsl
sbb
xchg
cmc
test
bound
lods
ret
repnz
dec
cmpl
and
xchg
push
pop
dec
rcrb
ja
and
cld
cwtl
leave
hlt
int3
aam
enter
ret
popf
cmp
scas
mov
ss
test
adc
out
add
rcl
lret
mov
pop
sub
sbb
and
sbb
sub
xchg
xchg
xchg
imul
lods
xchg
scas
cmc
inc
jmp
insl
adc
xchg
or
test
pop
jle
adc
jg
xchg
pop
or
cmp
imul
subl
add
cld
pop
add
or
inc
iret
xchg
nop
cmpsb
fistps
inc
push
and
mov
push
movsl
push
mov
mov
stc
jae
sahf
cmpsl
por
dec
pop
and
sbb
iret
pop
into
shll
pop
mov
pop
iret
sbbl
pop
mov
sti
addr16
add
lahf
or
push
ret
or
sub
or
xchg
roll
sbb
inc
xlat
lahf
lahf
outsl
xlat
adc
and
xchg
rorb
sub
mov
movsb
and
pop
push
and
inc
cli
in
xor
clc
cmp
test
push
test
fmul
push
pop
adc
fcmovbe
fldt
inc
mov
xor
mov
add
fstpt
cltd
mov
xchg
jge
test
fmuls
jno
insb
popf
xor
rclb
and
cld
push
lret
cmp
fdivl
aaa
add
nop
inc
lods
push
and
out
in
loope
daa
sbb
jle
mov
xchg
xchg
xor
fwait
adc
sti
pop
or
jns
aaa
inc
inc
mov
pop
mov
aam
out
in
ljmp
add
sti
popf
pop
mov
and
mov
ror
inc
clc
arpl
adc
and
repz
push
mov
mov
enter
call
xor
ret
dec
repz
push
mov
mov
enter
call
xor
ret
dec
idivl
insb
xchg
sbb
sub
fdivl
inc
cld
arpl
adc
mov
loop
js
pop
in
or
inc
pop
push
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
test
jns
dec
mov
or
push
mov
sbb
adc
flds
stc
mov
imul
in
hlt
sbb
adc
and
xor
test
je
test
jns
dec
mov
les
aam
in
hlt
sbb
aaa
movsl
dec
mov
cmp
adc
sbb
movsb
sub
pop
clc
out
or
gs
fldt
scas
adc
add
int3
popa
pop
cmp
pop
dec
cmpsb
cmp
aam
sbb
xchg
cltd
fcmovne
lret
fdivrs
mov
gs
pushf
scas
mov
jle
mov
push
stos
cwtl
add
inc
pop
and
hlt
sbb
sub
test
mov
jecxz
shrl
loopne
dec
mov
xchg
in
fidivl
pop
es
ja
mov
inc
lahf
dec
movsb
popf
sub
divb
lods
inc
clc
mov
popa
stos
cld
xor
jne
jns
imul
loop
cmp
hlt
pushf
push
push
in
fcmovne
sbb
adc
pushf
hlt
cltd
dec
imul
in
hlt
sbb
adc
and
xor
inc
test
je
lds
stos
int
fstpl
les
js
insb
imulb
test
and
dec
mov
les
or
cld
loope
icebp
xor
dec
fmuls
les
pushf
data16
sbb
inc
xchg
es
xor
inc
cmp
or
add
loope
xchg
or
mov
cmp
or
sbb
adc
and
xor
inc
test
je
test
jns
dec
mov
les
aam
in
hlt
sbb
adc
and
xor
inc
test
je
test
insb
cmp
cmpsb
push
lcall
add
or
ret
and
dec
std
aaa
fistps
inc
cmp
loope
faddl
fdivs
loope
xor
mov
in
je
sarl
cmp
stc
sha256rnds2
cmp
xlat
xchg
sub
cmpsl
out
enter
xchg
mov
inc
cltd
mov
enter
sbb
movl
jo
ror
inc
xor
push
xchg
and
inc
loop
out
cld
mov
ds
and
or
out
sbb
data16
outsb
or
push
inc
adc
fsubl
or
fnstenv
add
jo
out
mov
scas
into
insb
dec
sbb
loopne
sub
cmp
push
mov
cmpsl
mov
jle
or
shl
add
mov
jns
cmp
mov
xor
pusha
dec
ret
and
scas
pop
insb
je
in
enter
pop
ret
not
sub
and
imul
or
nop
ss
scas
cmp
loope
add
adc
dec
loop
dec
cmpsb
jl
lret
sarl
shr
jno
sbb
push
popa
clc
push
push
push
dec
mov
adc
movsl
cli
sbb
shlb
jbe
xor
pop
adc
jle
fdivrp
adc
repnz
loop
int3
es
in
cmc
adc
push
xchg
sub
mov
stos
scas
rcrl
popf
ljmp
jb
imul
sahf
repnz
fistl
inc
cmp
and
and
call
gs
inc
mov
ret
xor
push
inc
cmpsl
add
in
clc
mov
out
rorb
gs
xchg
jb
xchg
sbb
movsl
lds
mov
shll
out
jmp
addb
outsb
test
mov
imul
out
popa
lods
xor
rcrb
sub
inc
sub
mov
mov
into
pop
das
inc
adc
jae
sbb
or
fstp
rorb
mov
push
jle
fisttps
insb
adc
paddsb
in
push
inc
int3
xchg
enter
jnp
add
dec
lods
in
gs
or
mov
adc
mov
incl
ljmp
cld
mov
dec
mov
scas
jge
adc
imul
test
sbb
ror
outsb
mov
scas
pop
loope
sarl
sbb
mov
leave
xchg
loopne
sub
pop
push
ds
xor
stc
insb
mov
arpl
xor
iret
enter
sub
or
lahf
mov
add
push
xchg
imul
fwait
test
aaa
mov
and
inc
xchg
imul
std
push
pop
inc
cmpsb
and
mov
pop
and
repnz
arpl
out
jnp
das
inc
enter
rolb
mov
and
cmova
arpl
mov
out
cwtl
ret
cltd
rcr
std
cld
lea
sub
mov
mov
adc
pop
mov
sbb
adc
add
cmpsl
inc
sub
fmul
adc
mov
adc
scas
lea
pop
nop
push
xchg
push
mov
bound
push
jmp
dec
push
xchg
jle
jae
dec
repnz
inc
jo
not
add
fldcw
addr16
inc
xchg
mov
data16
adc
adc
ja
mov
aam
jno
and
test
xchg
dec
in
scas
sub
add
test
xchg
popa
jge
je
sbb
mov
hlt
in
stos
jno
and
fstp
push
lret
mov
in
andl
jns
popf
dec
stos
sbb
in
das
jecxz
rcrb
sub
repz
dec
add
xchg
dec
enter
jge
pop
lea
and
das
add
ret
popf
adc
std
xor
mov
sbb
xor
fadds
inc
add
adc
push
dec
loope
dec
ficomps
add
stc
test
or
lahf
fcoml
cmp
jns
dec
data16
pop
aaa
mov
lds
inc
or
jl
add
xor
inc
out
out
pop
sbb
imul
stos
std
repnz
add
dec
out
add
insl
pop
push
dec
adc
outsl
ret
inc
shl
sub
cld
rcll
push
and
rcr
add
scas
fs
iret
sub
pushf
xchg
pop
pushf
pop
jp
mov
sub
sub
xchg
test
mov
mov
pop
addb
fstps
mov
xor
loope
and
fincstp
or
test
mov
mov
cmp
pushf
cmp
sbbb
faddl
xchg
dec
sarl
xor
das
jnp
add
push
jmp
jne
lea
inc
sbb
sbb
inc
xor
mov
cmc
call
pop
jbe
mov
insl
mov
daa
call
les
cmp
dec
mov
jle
cmpsb
aaa
out
je
mov
test
enter
js
pop
fmulp
leave
push
mov
repz
out
shlb
test
adc
push
mov
leave
dec
arpl
popl
dec
pop
lret
mov
jmp
dec
sahf
cli
shl
popf
xchg
jne
cmp
mov
sarl
out
out
stc
mov
mul
test
jnp
sbb
mov
xor
daa
mov
mov
xchg
bound
jnp
dec
push
mov
cmpsb
js
dec
jecxz
loope
and
mov
add
or
adc
cli
xchg
xor
leave
mov
rorb
shrl
aaa
loopne
and
or
jno
or
adc
icebp
jp
pusha
and
jno
mov
add
test
jg
outsb
fsubl
xor
scas
out
mov
repnz
mov
mov
es
lds
lret
sub
xchg
dec
push
popf
leave
mov
add
nop
lret
movsb
dec
xchg
mov
inc
jb
cmp
or
adc
mov
outsl
pop
xor
pop
rol
fs
and
sti
mov
punpckhwd
mov
dec
mov
in
push
cmp
sub
aad
and
imul
push
cmpb
sub
cmp
cmp
jnp
testl
int3
jne
test
push
sub
cvtpi2ps
sbb
dec
pop
dec
and
and
add
mov
mov
inc
cmp
arpl
loopne
aam
iret
and
sbb
jbe
add
inc
push
mov
pop
pop
jp
aad
hlt
int
hlt
push
cmpsb
jo
push
mov
outsb
or
icebp
mov
lret
inc
shlb
mov
inc
loope
hlt
js
rclb
push
push
mov
jo
inc
cmc
cli
sbb
push
neg
cli
dec
lock
popa
ror
cmp
sbb
adc
cwtl
ret
push
pushl
inc
je
stos
mov
loope
mov
cmp
mov
inc
lahf
test
adc
repnz
fimuls
sub
dec
and
arpl
jecxz
and
cltd
arpl
inc
adc
sub
mov
mov
es
pop
insl
mov
stc
std
aad
mov
and
add
scas
pop
xlat
xor
inc
je
iret
js
xchg
stos
pop
rcll
push
xor
xor
cmp
sahf
sub
mov
jmp
jbe
or
mov
pop
sbb
cld
and
inc
es
popf
clc
subl
xchg
push
xchg
sbb
push
mov
adc
fisttps
ljmp
movsl
in
pop
lcall
iret
popl
cltd
ret
pop
addr16
mov
cmp
jp
push
add
cmp
xchg
maskmovq
negl
ror
add
xchg
mov
into
mov
or
xchg
rorb
outsb
cmpb
cld
js
lock
addr16
loope
loop
xchg
aaa
das
lock
std
jae
inc
mov
outsb
xor
push
leave
add
ret
add
add
repnz
movsb
data16
loope
test
lock
push
dec
dec
jbe
mov
push
inc
rdmsr
cld
mov
fs
fistl
lahf
pop
hlt
das
xchg
mov
xchg
adc
js
xor
adc
fs
test
cld
jmp
dec
popf
mull
out
icebp
aas
and
inc
aaa
jmp
adc
outsb
arpl
stos
jmp
lods
pop
mov
idivl
outsb
or
push
fidivs
add
mov
jbe
jmp
fs
dec
sub
adc
cmp
sub
pusha
arpl
lret
mov
inc
jb
jnp
scas
push
xor
bound
jbe
and
jns
or
dec
lret
sub
pop
out
or
dec
scas
mov
cmpsb
shll
mov
fldt
jne
pop
repnz
cli
outsb
dec
sub
das
mov
fstpt
mov
into
repnz
push
mov
or
fwait
cld
add
pop
inc
pushf
fstps
mov
mov
daa
lods
mov
cmpb
out
jae
or
xchg
or
shl
pop
jp
popf
out
pop
out
cwtl
ja
inc
xor
jge
push
jae
add
or
jns
pop
fs
insl
pop
stos
push
adc
ds
int3
xlat
inc
push
imull
test
or
cltd
test
jns
negb
ret
jnp
aaa
mov
mov
sahf
lds
cmp
cmp
mov
push
jae
loopne
xchg
cmp
sub
mov
pop
push
fwait
ss
sbbl
daa
xor
xchg
mov
xor
rolb
add
ret
sub
and
negl
ret
jno
mov
stos
lahf
cmp
pop
test
fucom
mov
negb
sti
in
or
nop
push
pop
dec
stos
aas
pop
adc
and
out
aaa
addr16
jne
mov
mov
sbb
insb
pushf
cli
cmp
mov
stc
pop
call
loopne
ficomps
cmp
cmpsb
aaa
or
cmp
loopne
and
lea
add
insl
insl
jp
mov
lgs
pusha
push
dec
movsl
rcll
or
stos
cs
sub
jnp
imul
mov
daa
dec
es
jne
mov
pop
xchg
cmp
lods
push
cmc
insl
je
pop
ss
jl
sub
dec
fistps
add
jns
xchg
cmp
or
jecxz
fbld
andl
push
repnz
ds
jb
into
pop
push
jge
pop
stc
inc
jg
sub
filds
in
xchg
pushl
hlt
sahf
andl
orb
outsl
call
dec
fcompl
icebp
mov
cli
imul
das
push
in
xlat
add
loop
int
inc
insl
mov
add
add
mov
sbb
inc
mov
int3
pop
sti
divb
add
cli
mov
sub
das
movsl
pop
pop
cmpsb
sub
fstl
testb
ds
pop
sysret
aam
cmp
in
xchg
push
xor
xchg
int
aaa
lret
xor
rcll
cmp
cwtl
adc
cmp
rorl
sub
negl
imul
imul
rol
popa
movsb
js
in
mov
adc
out
aas
jns
popa
fdivl
and
add
xor
repnz
mov
inc
aaa
jp
arpl
decl
ret
fisubrl
mov
into
cmpsl
mov
push
or
fildl
iret
pop
and
out
dec
inc
dec
push
nop
sub
into
cltd
and
add
lods
or
sub
dec
inc
sub
scas
sahf
clc
into
xlat
xor
cli
rcr
push
sub
sub
pop
gs
sti
imul
cld
pop
jnp
out
scas
es
sub
nop
pushf
jmp
lds
fimull
pushf
fildl
dec
pop
dec
insl
mov
mov
popf
test
test
cmp
mov
jl
sbb
stos
roll
repnz
cltd
xor
adc
dec
dec
lods
lds
int
loop
hlt
notb
std
add
mov
shrb
ret
jae
insb
ficoms
mov
push
mov
jecxz
enter
mov
add
and
mov
movsl
mov
fidivl
mov
adc
mov
loop
stos
lret
imul
es
imul
inc
add
cli
sbb
jge
frndint
in
stos
ljmp
rcrl
pusha
in
aas
sbb
push
and
mov
std
add
test
fcomps
cmp
negl
mov
xor
jno
ret
push
icebp
andb
and
mov
mov
cmp
dec
mov
sbb
jp
popf
cmp
mov
pop
jb
jae
aad
pushf
xor
das
orl
mov
sub
mov
fstps
movsb
cltd
push
leave
cmp
lock
mov
xor
loop
ret
fcmove
or
repnz
mov
je
out
xor
gs
je
ss
lock
inc
scas
jge
inc
xchg
xchg
pop
add
ret
push
adc
cmp
pop
mov
push
cmp
jae
dec
jge
hlt
and
xor
scas
mov
xchg
out
mov
mov
fwait
cmp
outsl
arpl
and
pop
int3
add
out
mov
pop
cli
adc
mov
and
cltd
and
call
adc
mov
sub
das
jecxz
jae
rcr
pop
mov
xchg
stos
inc
loopne
mov
lret
jmp
shlb
push
inc
pop
test
or
adc
fisttpl
jmp
and
out
roll
test
test
adc
int
cmpsl
mov
xchg
fnstenv
push
stc
sbb
push
xchg
cltd
mov
popa
dec
add
loop
push
ljmp
pop
and
xor
xor
in
push
cli
dec
loope
inc
stos
jbe
loope
and
testb
aaa
scas
cmpsl
and
lea
addr16
xor
fidivrl
mov
lahf
cmp
sti
in
dec
in
fdivrs
lret
mov
cmpsb
lret
cmp
inc
pop
xorl
mov
dec
nop
call
pop
push
add
cmpsb
aaa
adc
xchg
sahf
int
push
or
cli
das
roll
sbbb
add
push
cmp
scas
test
xor
stc
inc
shlb
jnp
loope
sbb
test
daa
movsl
test
subb
cmpsl
mov
cmp
pop
dec
inc
push
add
xchg
jle
aas
faddl
ds
lods
xor
lret
mov
and
xor
jnp
mov
pop
mov
or
add
leave
jl
es
aam
push
je
lods
cmc
fimull
pop
sbb
mov
rcrl
sarb
inc
iret
xchg
pop
jbe
arpl
and
xchg
sub
sbb
sub
repz
xchg
stos
push
clc
xlat
lock
ret
xchg
xchg
fnstenv
push
jnp
gs
or
int3
xchg
xchg
fisttpl
mov
jl
mov
sahf
sbb
jg
sub
xchg
mov
jne
cmp
out
sbb
ja
insb
jle
jmp
mov
aad
push
ret
mov
lahf
movsl
test
or
pusha
outsb
mov
fwait
push
test
enter
push
iret
xchg
dec
jae
adc
and
test
jge
std
enter
arpl
icebp
arpl
jb
in
mov
sahf
lcall
sti
adc
or
scas
out
mov
cwtl
filds
and
rorl
pop
pop
and
lods
jo
pop
jl
outsl
leave
test
aam
leave
or
out
inc
imul
outsl
sbb
lock
cwtl
stos
es
jmp
neg
xlat
mov
fsubl
jbe
idivb
popf
icebp
stc
ror
cmp
stos
js
add
insb
xor
scas
daa
and
add
mov
ljmp
and
sub
fdivrl
loope
insl
jae
pop
inc
pop
mov
xor
sbb
mov
cltd
or
mov
jb
scas
lock
add
cmc
fwait
add
and
fs
jns
hlt
sub
stos
mov
or
mov
in
repz
notl
insb
and
fldcw
jp
aaa
cli
sub
push
jle
cld
rolb
and
les
lahf
inc
sub
insl
xchg
push
pop
addl
sbb
inc
ret
nop
mov
mov
sbb
sbb
add
sbb
adc
enter
mov
test
sbb
cmp
aam
test
push
iret
sbb
popf
rcrl
pop
mov
adc
pop
pop
pop
iret
sbb
in
lret
jnp
dec
pop
xor
or
pushf
test
or
xchg
mov
push
stc
mov
push
pusha
pop
or
scas
inc
inc
mov
xchg
xchg
daa
pop
rcr
rep
push
dec
cmp
cmc
stos
daa
insl
enter
inc
lds
xchg
pop
call
or
xchg
dec
ds
lcall
dec
lahf
je
shll
jge
jmp
xor
pop
lret
dec
enter
popl
hlt
add
rcl
push
push
jle
data16
push
mov
icebp
rorl
adc
adc
push
sub
cli
jle
inc
call
lahf
stos
roll
jg
mov
dec
and
arpl
loop
popf
aad
push
add
js
cltd
inc
push
jecxz
and
imull
mov
dec
cmp
aas
test
cmp
dec
or
mov
scas
xor
icebp
push
inc
cmp
jge
dec
dec
adc
cmc
aam
fistps
jo
xchg
jne
std
orl
fs
addr16
test
loop
jne
mov
push
inc
mov
mov
sub
test
cmc
sbb
push
aas
sbb
push
jae
cltd
loope
out
test
fdiv
mov
xchg
ficomps
test
test
mov
inc
jg
push
cli
push
clc
push
jg
jae
rolb
or
dec
outsl
dec
xchg
incl
fcompl
push
mov
inc
imul
mov
aad
paddusb
mov
daa
jl
iret
mov
dec
jnp
les
xor
in
add
ret
push
mov
pop
sbb
daa
inc
pop
mov
je
lret
xchg
int3
movsl
sahf
mov
pop
je
das
jnp
scas
insl
lahf
and
fwait
popa
push
push
dec
mov
add
popf
es
out
sub
test
hlt
ret
sub
popa
daa
ret
mov
test
push
sub
mov
in
insl
dec
sti
data16
xorb
cwtl
mov
mov
jl
jno
out
enter
fwait
out
cmp
cmpb
adc
hlt
sub
mov
dec
dec
out
xchg
stos
bound
js
sbb
inc
leave
fidivrs
sbb
in
adc
mov
data16
jb
push
inc
insb
cmp
add
cmp
inc
ljmp
adc
in
inc
sysenter
test
dec
gs
adc
loope
mov
adc
jg
cli
xor
pop
or
outsb
jns
js
aad
sbb
inc
pop
pusha
dec
ljmp
add
rcrb
inc
sbb
xchg
pop
iret
dec
mov
out
inc
xor
adc
cmp
adc
mov
mov
xor
mov
push
jge
pop
ds
mov
adc
outsl
sbb
add
xorl
icebp
rcrb
mov
in
adc
push
jg
les
jo
sarl
fisubrl
iret
rolb
pop
imul
xchg
push
fsts
jmp
mov
out
subl
ljmp
lods
cltd
lret
inc
xor
and
push
orb
fdiv
push
xchg
cmp
add
pop
dec
daa
lahf
ret
jmp
jecxz
and
jae
mov
jne
push
insb
movsb
incb
mov
addr16
dec
add
mov
pop
or
pop
xchg
sub
in
add
and
rcr
pop
test
int3
xlat
pop
push
fs
dec
cwtl
cli
jecxz
aas
leave
jb,pn
and
shl
jo
aam
ret
fcmovnu
cmp
xchg
xchg
or
and
enter
or
cs
js
jns
daa
mov
xor
cvtps2pd
dec
mov
sarb
ljmp
inc
xchg
dec
jae
push
rorl
sbb
dec
das
inc
movsb
rep
lahf
push
sbb
jg
or
enter
sarl
dec
push
push
and
jns
dec
mov
les
aam
in
hlt
sbb
adc
and
xor
inc
test
je
test
jns
dec
mov
les
aam
in
hlt
sbb
adc
and
xor
inc
test
je
test
jns
dec
mov
inc
sub
cmp
or
jmp
xor
inc
test
mov
test
jns
dec
mov
les
aam
in
hlt
out
push
adc
mov
xor
xor
and
adc
add
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
or
cmpsb
sub
sub
mov
fwait
sub
jbe
data16
sti
inc
or
cmp
imul
mov
fbstp
mov
mov
push
sti
inc
or
cmp
imul
fmull
arpl
or
mov
iret
pop
loop
or
loopne
addb
mov
call
pop
data16
mov
out
push
mov
popa
jge
sbb
lea
mov
into
es
ds
xor
into
xor
push
add
and
leave
mov
adc
mov
icebp
out
stos
roll
mov
sbb
dec
dec
es
mov
cmp
negb
cltd
jmp
stc
sub
mov
inc
imul
sbb
jp
fwait
mov
xor
inc
push
fldpi
or
mov
insb
xchg
fisttpl
int3
lcall
aaa
icebp
xor
push
mull
xchg
push
push
mov
mov
xchg
pushf
dec
negb
imul
fisttps
btc
lret
outsb
push
sti
and
jb
dec
xchg
pop
xchg
mov
cmp
enter
scas
sbb
sub
into
imul
imul
inc
ljmp
or
idivl
inc
idivl
repz
lcall
mov
fwait
es
push
mov
data16
sti
inc
or
cmp
imul
mov
fwait
es
push
mov
data16
sti
inc
or
pop
xchg
xchg
lret
ret
rclb
mov
leave
jnp
mov
out
dec
stos
js
ljmp
or
or
mov
mov
add
dec
daa
and
xchg
mov
jg
je
jp
lods
test
or
push
xlat
fxch
and
jl
test
jmp
fstp
outsb
pop
pop
jp
xchg
ss
and
or
aaa
xor
or
clc
sarl
test
dec
popa
or
out
pop
jle
nop
sti
jo
and
out
out
mov
sub
add
mov
es
mov
faddp
dec
pop
push
and
mov
xchg
ss
out
out
pop
aad
ljmp
rorl
sahf
push
andb
jle
pop
cmp
push
xor
cmpsb
ret
daa
test
mov
adc
pusha
mov
hlt
imul
dec
inc
add
jae
sub
leave
push
sub
test
and
adc
aad
and
mov
outsb
addr16
mov
arpl
xchg
sahf
aaa
mov
add
pusha
in
or
xor
sbb
add
mov
and
out
sbb
pop
mov
adc
rcrl
jnp
fwait
iret
pop
insb
stos
push
push
pop
pop
out
jno
gs
jbe
dec
push
lods
mov
scas
add
ret
shll
xor
cs
pop
jne
cli
into
test
and
jb
jnp
inc
jp
inc
mov
fidivrl
add
pop
out
sub
loop
sahf
jmp
mov
outsl
mov
lock
scas
jb
in
cs
loop
lods
rcrl
jae
inc
in
push
and
pop
adc
push
lahf
cwtl
lret
sbb
add
pushf
stc
mov
xchg
and
mov
inc
jecxz
sbb
stos
sbb
lock
lock
clc
mov
cmpsb
cli
iret
scas
push
lahf
fistl
dec
jecxz
cmp
sbb
dec
bound
push
sbb
fdivp
xor
ret
push
mov
xor
das
das
out
cmpb
pop
call
fdivrl
mov
pop
dec
add
leave
and
mov
lods
jno
and
notrack
inc
dec
sti
sbb
xchg
xor
cmp
lock
lcall
ficoml
mov
bound
jp
adc
sub
and
lea
outsb
js
jge
or
sbb
pop
fs
iret
cld
push
xor
clc
mov
les
adc
dec
lret
dec
lock
test
and
push
mov
dec
xchg
mov
sbb
mov
fwait
ret
inc
out
imul
popa
loop
iret
fs
movsb
add
dec
and
cmpsl
inc
xor
lods
push
daa
mov
popa
xchg
nop
std
cmp
ljmp
loopne
push
lock
jge
dec
dec
xchg
inc
push
into
mov
in
pop
mov
aas
lcall
inc
insb
adc
pusha
jp
jnp
cmp
jns
mov
in
es
jns
or
or
sarl
ficoml
sbb
ficoms
loopne
push
sarb
pushf
and
cwtl
jmp
dec
inc
push
cmp
cs
dec
outsb
sbb
fdivr
xor
mov
push
iret
jecxz
cwtl
xchg
mov
mov
aas
pop
cmpsb
in
sar
and
push
aaa
push
insb
cmpsb
cltd
xlat
iret
and
dec
pop
pop
pop
scas
add
xchg
sbb
adc
out
cltd
sahf
adc
cmp
mov
adc
and
push
sub
loopne
mov
loope
test
in
test
in
pop
and
jp
mov
dec
mov
xchg
mov
jl
lods
pop
mov
call
int
es
pop
clc
pop
and
addl
push
adc
push
sub
in
push
cwtl
sbb
mov
aaa
test
movsl
call
and
insb
lcall
sbb
sti
pop
in
push
rsqrtps
enter
fdivrs
and
jnp
dec
mov
call
movsb
sub
aad
sub
or
mov
clc
dec
popf
pop
mov
ljmp
cs
clc
lods
notb
shlb
and
inc
or
sbb
xor
mov
xchg
sub
jecxz
rorb
popf
inc
cmp
popf
lods
xchg
addl
fwait
mov
ss
and
mov
insb
adc
jne
lock
dec
push
cmp
jo
outsb
cld
mov
jge
nop
add
xchg
es
and
out
sub
enter
jg
scas
jb
inc
sarl
lea
sub
mov
daa
push
push
mov
sub
scas
dec
push
sub
jmp
push
dec
adc
push
mov
fwait
outsb
ret
loop
xchg
and
sub
lods
push
or
je
in
test
cltd
addr16
jb
push
push
leave
cli
in
enter
mov
shll
addb
mov
les
mov
pop
or
fidivl
jp
out
mov
ret
repnz
sub
and
scas
icebp
xchg
cmp
js
jmp
jno
cwtl
jmp
std
in
outsl
and
pushf
push
jmp
stos
xchg
and
dec
jae
pop
shrl
push
enter
jnp
movsb
call
shlb
mov
outsl
ja
push
dec
lahf
lcall
adc
decl
or
dec
insl
pop
lock
mov
leave
adc
ds
and
popa
loope
sbb
xor
xor
inc
pop
push
sarl
xor
xchg
mov
fsubrs
jecxz
lods
leave
psrad
ljmp
fs
inc
xor
push
xor
sub
mov
inc
cmp
mov
pushf
inc
xchg
mov
sub
ja
testl
int3
movsb
jl
mov
loopne
xor
push
insb
sbb
fcomps
ss
int
rcrb
jl
dec
test
sar
aam
or
shrd
cmp
mov
mov
dec
hlt
rcrl
test
repz
ss
pop
lock
loope
imul
dec
xor
cmp
or
fsubs
jbe
clc
out
into
xor
inc
and
inc
push
xlat
movsb
mov
int3
mov
sti
mov
fucomp
lds
pop
pop
jae
insl
stc
out
adc
jg
sbb
loope
cwtl
sbb
mov
movsl
in
sub
xor
sbb
ret
arpl
dec
push
cmp
out
push
fwait
lahf
jl
sub
mov
push
dec
call
sub
sbb
int
test
in
adc
or
cmp
stos
ja
inc
mov
mov
popf
jmp
stc
dec
inc
mov
call
movsl
sbb
xor
fwait
adc
adc
jg
pop
push
and
cmpsl
xchg
cmp
add
add
ss
xchg
lock
loopne
sahf
leave
dec
mov
adcb
mov
jbe
push
pop
stos
push
popa
pop
push
sub
jno
iret
and
ret
clc
xchg
call
shrb
and
jo
mov
or
nop
lods
outsl
jmp
je
clc
xchg
xchg
add
adc
sbb
mov
out
sub
scas
push
or
mov
inc
add
les
adc
rclb
push
fnstenv
lcall
pop
push
in
mov
outsb
xchg
or
lock
and
mov
dec
and
or
jp
nop
in
xlat
ds
push
jne
xchg
lcall
sbb
jecxz
leave
in
pop
lods
shr
sahf
push
push
imul
or
mov
testl
lcall
lea
sbb
addb
mov
xchg
cs
pusha
inc
add
inc
and
sub
mov
fcmovnu
bound
push
sub
mov
pop
fdivrs
scas
pushf
repz
jmp
xchg
inc
mov
xchg
cli
lock
jb
adc
cltd
xlat
cmp
rolb
test
jmp
movsl
inc
daa
or
arpl
jge
dec
aas
hlt
loop
add
xchg
dec
pushf
xor
clc
xchg
ret
push
dec
scas
jp
sbb
pop
das
sbb
std
push
sub
rcrl
mov
push
adc
mulb
inc
pushf
adc
sub
imul
push
in
aaa
push
jecxz
pushf
sbb
xor
std
ret
adc
pop
rolb
xor
jle
xchg
push
or
popa
mov
cs
dec
sbb
push
gs
mov
push
ss
add
mov
mov
lods
xchg
mov
les
fdivrs
push
mov
xorl
lret
push
dec
sub
out
imul
inc
lds
fstl
pop
inc
cmc
cltd
add
jnp
jns
fimull
div
test
bound
push
outsb
and
pop
out
mov
ja
sub
inc
mov
lret
call
divb
adc
adc
sbb
mov
mov
hlt
mov
rcl
mov
or
js
orl
or
lods
xchg
and
mov
aad
dec
push
pop
test
jb
je
sub
lcall
xchg
mov
and
lahf
ljmp
test
sti
adcl
jne
and
inc
mov
sub
cmpsb
xchg
mov
scas
sar
daa
mov
or
in
cs
orb
push
mov
test
repnz
scas
out
xlat
pop
pop
and
mov
loope
scas
in
adc
jbe
adc
outsl
xchg
ljmp
sub
push
lcall
rolb
jnp
pop
inc
loope
leave
pop
sahf
popa
sbb
sub
loop,pt
pop
sbb
or
push
ret
test
mov
jbe
sbb
xor
pop
cli
stc
add
jmp
imul
in
push
mov
mov
cwtl
add
adc
shrl
mov
fsub
mov
add
call
xlat
ljmp
lret
dec
enter
ss
mov
shlb
inc
pop
dec
push
leave
out
lds
pusha
adc
cmp
or
gs
adc
xchg
pusha
icebp
js
mov
inc
sbb
or
mov
jl
or
scas
iret
xchg
nop
cld
jl
dec
cwtl
sbb
lret
gs
add
nop
or
cmpsb
mov
adc
rclb
mov
pop
addb
ret
pop
jno
popf
test
mov
adc
sbb
loopne
jb
mov
and
movsb
rcrb
sbb
ret
mov
scas
std
mov
cmc
in
rcr
push
aaa
xlat
cltd
rolb
int
mov
mov
inc
add
sub
mov
push
data16
cmp
lods
cmp
mov
cmp
cmc
dec
dec
add
scas
das
adc
scas
cmpsl
push
adc
or
jae
sti
cmpsb
test
out
cs
jmp
repz
loopne
lea
lcall
jne
cld
sbb
cmpsb
ret
cmc
cmp
adc
jmp
jge
mov
mov
mov
sub
fmuls
outsb
out
jno
mov
dec
ret
dec
push
test
loop
fcompl
xor
loope
and
mov
or
mov
jg
dec
fstps
mov
test
lods
pop
fcoms
and
jb
cmp
or
inc
jb
push
aad
into
or
insb
jb
into
lods
jns
fisubl
cltd
mov
sub
rorl
fwait
dec
jmp
and
sbb
mov
cmpsl
dec
dec
shll
push
sub
ja
pop
int
cmp
cmp
loope
daa
push
rcll
adcl
jecxz
shll
or
inc
cmp
lret
or
clc
stos
insb
movsl
ljmp
stc
push
outsl
sbb
xchg
dec
test
cmpsb
dec
dec
in
mov
pop
leave
sbb
mov
js
hlt
cmc
cmp
test
adc
xchg
shr
and
out
push
aam
lock
or
push
or
jb
mov
cmp
fisubrs
xlat
in
in
jge
xor
jp
les
in
je
imull
pop
out
clc
popf
xchg
pusha
and
lcall
movsl
ja
aad
pop
clc
push
sub
sub
push
pop
mov
jl
out
adc
fmul
mov
push
adc
mov
fnstsw
jnp
sub
adc
jns
lods
cltd
push
sbb
in
sbb
lds
bound
cmp
rcll
cs
mov
cltd
mov
inc
inc
or
add
dec
push
pop
lcall
mov
cli
dec
stos
mov
filds
pop
mov
and
data16
mov
xor
xchg
pop
enter
xor
pop
stc
mov
in
lods
xchg
jb
add
adc
adc
aam
lods
cwtl
inc
imul
std
mov
and
imul
incl
loopne
mov
push
pop
ret
mov
movsl
lcall
test
add
mov
iret
cmp
push
enter
mov
mov
lods
lds
test
mov
or
in
cs
loop
lods
add
jns
add
inc
por
sub
jae
lea
movsl
lds
mov
xchg
dec
xor
cmpsb
scas
pop
push
fstl
int3
inc
adc
xchg
xchg
pop
mov
imul
loop
adc
test
jb
clc
push
int3
sbb
mov
sahf
hlt
dec
aaa
mov
gs
fnstenv
popa
pop
loop
cmp
dec
aad
div
orl
and
sbb
dec
mov
enter
lds
pop
cmp
adcb
lcall
sti
jmp
add
sub
pushf
imul
and
cli
fidivrl
es
jge
mov
nop
inc
push
or
repz
pop
mov
movsl
fcmovb
dec
push
pop
pop
xlat
lea
jnp
clc
aas
enter
mov
aas
stos
pop
cs
xor
dec
sbb
aad
add
mov
aam
subb
sbb
or
mov
lss
cs
mov
sti
test
ret
lods
ds
aam
cltd
push
jmp
fbld
dec
test
rcrl
push
arpl
sub
and
pushf
sarb
adc
add
jne
cmpsl
cs
leavew
lret
pop
xor
loop
outsb
lcall
adc
mov
fdecstp
clc
divl
outsb
inc
vorps
outsb
sbb
ds
xchg
sub
dec
and
cmp
jecxz
mov
xchg
lret
les
xor
rcll
lods
sub
in
clc
inc
sbb
shr
mov
add
loope
pop
cmpsl
adcl
pop
jle
int3
fs
dec
lret
bound
scas
and
shlb
jp
loope
sub
push
xor
outsl
scas
repnz
sub
and
pushf
aaa
inc
cmc
aaa
insl
test
adc
jp
mov
out
cmpsl
xor
or
pop
jle
dec
xchg
mov
add
or
fmulp
mov
add
in
test
mov
mov
mov
or
aad
stos
insl
daa
dec
fistl
mov
movsl
and
inc
cltd
fimull
pop
in
pop
arpl
pop
ss
hlt
push
and
jo
int
fidivrl
add
js
addl
inc
or
das
ljmp
mov
fstp
lahf
ret
das
loopnew
shlb
and
pusha
mov
mov
stc
push
adc
test
lcall
mov
test
jo
sub
xor
sub
lahf
adc
and
sbb
roll
fs
outsl
push
loop
push
scas
dec
call
dec
adc
sub
xchg
pop
lock
repz
jle
mov
loop
mov
fmull
fwait
sub
push
xchg
stos
fisubrl
or
popa
mov
cmp
ss
push
pusha
mov
pop
cs
mov
push
rcl
dec
push
test
out
nop
push
push
loopne
dec
xchg
or
xchg
xor
imul
mov
mov
andb
jnp
xchg
lods
lret
ss
or
ffree
sti
jmp
dec
pop
sbb
out
pop
rcrl
inc
in
aam
lods
jp
imul
and
pushf
lods
xchg
addr16
rol
aaa
pop
push
aaa
jmp
inc
or
or
andl
lds
push
and
mov
lahf
shl
mov
jns
out
ret
test
jo
push
xchg
push
xchg
mov
clc
dec
xchg
inc
push
xchg
sbb
les
popf
push
lcall
icebp
testl
mov
scas
pop
enter
pop
sar
push
les
dec
arpl
popa
mov
repz
push
adc
mov
or
loope
subb
adc
mov
cmpsl
hlt
stos
je
cmpsb
dec
stos
inc
ret
pop
lret
in
shlb
fistpl
test
movsl
and
xchg
mov
popa
pop
jbe
push
addb
lret
jmp
int3
push
ds
jle
imul
or
lcall
sub
and
mov
cld
aaa
loop
fisubs
push
cld
add
jl
in
push
mov
into
fstl
dec
lret
dec
cmp
cmp
xor
fs
push
notb
lahf
sub
frstor
in
test
mov
ljmp
sbb
dec
mov
ljmp
sbb
inc
mov
fldt
adc
add
mov
mov
xor
test
movsb
in
add
imul
cmp
xchg
into
and
loopne
or
repz
push
adcl
or
int
hlt
mov
mov
shll
fsts
cmpsl
ja
repz
jae
pop
cwtl
mov
dec
cmp
pop
fimuls
xchg
or
xor
dec
pop
xor
sub
pop
and
adc
xchg
xchg
and
push
enter
lcall
mov
inc
inc
add
mov
rcrb
pop
and
xchg
sbb
out
dec
mov
or
jg
push
rclb
mov
aad
test
imul
in
jmp
in
out
ret
das
jge
lods
dec
adc
and
dec
push
add
mov
ss
pusha
das
xlat
pop
icebp
adc
js
rclb
andl
mov
out
loope
and
add
dec
inc
ret
push
sti
loop
pusha
inc
cmc
sub
adc
pop
cld
cmp
mov
in
push
adc
lods
adc
mov
cmp
push
repnz
dec
hlt
jnp
and
mov
arpl
adc
es
repnz
dec
fmull
js
shrl
aas
mov
ds
std
mov
and
fisttps
cmp
lahf
test
fstps
dec
xlat
subb
inc
rcr
cmp
cli
aaa
inc
mov
push
push
jbe
das
mov
fdivp
outsb
pop
loope
inc
and
or
and
mov
xchg
jle
sahf
negb
pop
test
int
call
cmp
pop
adc
arpl
dec
cmp
pop
dec
mov
mov
mov
fs
xor
popa
jnp
ds
xchg
jne
aaa
repnz
adc
repnz
test
cltd
add
push
gs
and
aas
clc
mov
or
push
jne
sbb
and
test
cltd
dec
adc
add
test
mulb
ljmp
inc
stos
mov
mov
in
fstps
push
lods
out
imul
cmpsb
mov
ljmp
cli
mov
ds
lea
xchg
mov
bound
divb
or
repnz
fldl
cli
mov
stos
jp
imul
js
addr16
push
daa
jle
mov
adc
pushf
jg
into
pop
inc
int
pop
xor
fcomps
push
mov
cmp
std
mov
lcall
sub
pop
xchg
ja
scas
imul
add
imul
or
add
mov
pop
aam
dec
inc
dec
mov
sbb
and
and
sbb
mov
xchg
out
pusha
mov
xchg
xchg
in
jecxz
nop
shlb
lods
movsb
lret
push
sub
stc
add
data16
outsl
sub
ret
or
ror
ljmp
add
decl
and
std
lret
and
inc
ljmp
mov
jnp
pop
pushf
lock
inc
jp
mov
imull
push
mov
adc
in
in
test
cmp
or
cmp
imul
mov
fwait
es
push
mov
data16
sti
inc
or
cmp
imul
mov
fwait
es
push
mov
data16
sti
inc
or
cmp
imul
mov
fwait
es
push
mov
data16
sti
inc
or
cmp
imul
mov
fwait
mov
push
mov
cltd
adc
add
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
or
js
dec
stos
pop
popa
inc
jmp
cltd
sub
clc
cmp
sub
pop
test
cmp
fwait
push
stos
pop
fldt
lret
cmp
or
sbb
call
sub
pop
test
mov
fwait
push
stos
pop
fldt
lret
cmp
or
sbb
inc
or
pop
lods
dec
fdivrs
in
and
pop
cli
add
jmp
mov
mull
sti
or
jmp
add
fcomps
jbe
lock
jp
push
outsl
fbstp
sub
loopne
into
ds
clc
into
cs
push
sahf
pop
outsb
add
pop
leave
cmpsb
push
cmpsb
fnsave
push
xor
xor
movsl
inc
jmp
sbb
aam
in
mov
ja
adc
sti
fwait
test
fldt
out
sbb
int
cmp
ret
mov
ja
adc
call
sub
sub
jae
jle
imul
sbb
mov
xchg
adc
xor
mov
add
clc
in
dec
fsubs
jg
pushf
push
les
js
dec
stos
pop
fldt
lret
cmp
or
sbb
call
sub
pop
test
mov
out
pop
iret
js
and
xor
inc
mov
lea
sahf
das
leave
pop
lret
push
mov
fld
push
jecxz
mov
jg
sbb
lea
dec
mov
lret
cmp
sub
je
in
and
cmp
sti
or
sbb
call
sub
pop
test
mov
fwait
push
stos
pop
fldt
lret
cmp
or
sbb
call
sub
pop
test
mov
fwait
push
stc
pop
test
mov
mov
xor
or
mov
mov
fwait
jge
push
and
cmpsl
cmpsl
sub
add
out
mov
scas
imul
int
mov
mov
push
frstor
lds
add
outsl
or
stos
dec
cs
add
inc
mov
out
pushf
xor
jbe,pt
inc
mov
adc
leave
adc
ds
dec
pop
lcall
add
cmp
pusha
jns
pop
sbb
loope
roll
mov
in
xchg
dec
push
dec
lods
in
mov
adc
xchg
sar
adc
das
mov
add
jo
or
aad
mov
out
and
mov
outsb
dec
test
imul
repnz
in
mov
jns
push
xor
ja
fistl
xor
test
mov
lea
shll
pop
aad
cmp
jns
ret
jecxz
rorb
jns
sbb
mov
or
xchg
hlt
fdivs
fldenv
insb
jno
iret
enter
jecxz
or
aam
mov
mov
mov
fcom
add
ss
mov
jo
cli
stos
or
jne
adc
add
xor
nop
push
rcrl
inc
ljmp
lods
clc
outsb
sahf
lds
and
in
in
andb
jbe
rcr
fwait
in
iret
cmpsl
cli
xor
lret
out
fldenv
mov
popf
sbb
sub
push
mov
add
jp
cmpsl
stc
mov
xchg
xor
mov
subl
test
cmp
movsb
add
fldenv
inc
dec
add
stc
std
xchg
sub
add
cs
adc
sub
test
or
cmp
push
mov
jnp
adc
adc
push
cmp
add
push
out
test
add
push
jecxz
movsl
iret
inc
push
cmpb
adc
in
in
int3
cmc
dec
mov
or
ficomps
push
std
pop
sub
mov
cs
mov
insb
mov
bound
dec
inc
andb
xchg
mov
mov
sub
aam
mov
jecxz
test
push
icebp
push
push
adc
pop
icebp
dec
out
push
fdivr
scas
push
into
sbb
aam
jbe
xchg
repz
push
les
push
scas
pop
xchg
fucomi
inc
clc
ficoms
dec
pop
test
ror
cmp
fs
mov
jge
sub
cmpsl
ja
out
je
pop
pop
add
add
and
adc
clc
stos
addb
repz
mov
add
mov
dec
test
xor
fsub
fildl
loopne
add
sti
push
daa
lods
push
pop
jl
pop
clc
loop
sbb
sub
push
adc
iret
test
inc
nop
xor
xchg
shll
or
sub
pop
dec
jg
outsb
mov
cmc
inc
inc
add
xor
jle
int
enter
fdivl
fildll
shrl
push
sbb
mov
fidivrs
lret
adc
cmp
mov
mov
lock
cli
add
sbb
fistpl
clc
lret
ds
ljmp
or
inc
ljmp
mov
mov
mov
pusha
and
push
es
jmp
xor
jne
pop
data16
add
adc
push
mov
pop
push
out
and
out
ss
out
mov
movsl
addr16
or
lcall
sahf
adc
jle
jne
mov
mov
in
cmpsb
or
adc
dec
xor
inc
xchg
mov
push
test
aad
lods
sbb
mov
imul
xchg
ja
sahf
test
adcb
imul
mul
xor
stc
cmp
or
jg
scas
adc
push
dec
dec
xchg
inc
mov
pop
sarl
mov
mov
add
mov
sarl
es
stos
mov
sarb
in
sub
xor
aad
rcrl
pop
leave
dec
mov
stos
mov
mov
lret
andl
testb
adc
repnz
jecxz
cmp
dec
test
sub
xor
in
iret
mov
test
lret
cmp
xchg
les
pop
aam
fisubs
sub
xchg
icebp
gs
aad
pushf
sbb
mov
sub
test
mov
lock
jle
fs
lcall
pop
inc
mov
fsubs
in
sbb
movb
insb
jnp
test
adc
lods
in
lahf
mov
xor
jne
add
dec
sub
adc
cwtl
outsb
add
xchg
imul
mov
jb
push
jmp
dec
and
sbb
pop
or
cli
push
jno
in
or
push
mov
adc
jne
cltd
jae
fsubrl
imulb
sub
lock
jle
gs
add
pop
lock
das
sub
std
pop
outsl
pop
and
push
sbb
repnz
mov
mov
xor
inc
mov
orl
sub
repnz
mov
imul
add
jg
jge
xor
jbe
mov
mov
fsts
jecxz
daa
dec
sti
popl
flds
jmp
hlt
xchg
lret
std
pusha
fldenv
push
fstp
dec
ss
jae
adc
incb
out
xchg
mov
inc
lods
xorb
sbbl
cmp
inc
pop
sub
enter
mov
int
lods
cli
roll
outsb
mov
sub
mov
inc
mov
mov
push
cs
xor
jno
jbe
xchg
ss
lret
or
stc
pop
xchg
outsl
sbbl
sbb
xor
or
rcr
insb
jbe
fistl
fdivs
sub
mov
mov
or
les
test
mov
dec
xchg
scas
mov
push
mov
sbb
mov
push
or
aad
sbb
in
aas
cmp
out
push
clc
addr16
arpl
xorl
xor
stos
jp
pop
dec
sbb
aaa
lea
add
dec
data16
push
mov
imul
insl
jp,pn
loopne
shrb
or
jbe
dec
add
lcall
push
jmp
mov
leave
std
or
outsb
xor
mov
xor
cmp
ret
pop
inc
into
lahf
popf
adc
mov
adc
xchg
adc
pop
inc
cmp
add
xor
or
add
sbb
cmp
inc
gs
bound
cwtl
mov
push
lock
sarb
sbb
mov
push
or
cmp
jl
inc
pop
shll
sub
push
mov
sub
xchg
call
daa
jl
loop
shlb
cmp
push
sub
lahf
out
sub
out
mov
and
test
inc
in
lods
lock
mov
imul
mov
mov
lret
push
fsubrs
mov
outsb
jl
sbb
jae
add
gs
or
mov
shr
fildll
mov
movsl
mov
xor
cmp
add
cwtl
ljmp
rcll
sub
jo
jle
adc
cmp
ljmp
cld
mov
mov
inc
add
dec
bound
xchg
xlat
jle
inc
adc
mov
sub
lods
push
dec
adc
insb
inc
mov
ja
push
sub
scas
loope
orb
mov
mov
mov
push
mov
iret
sbb
xchg
rcll
faddl
inc
or
sub
xor
cmc
out
test
fwait
inc
outsb
jns
jecxz
mov
out
pop
jl
cmp
push
je
in
push
sbb
call
sarl
mov
shlb
sbb
les
inc
int3
mov
stos
neg
fwait
and
bound
sarl
stc
imul
pop
dec
xchg
cmp
stc
roll
int
out
cld
cwtl
scas
mov
pop
aaa
ficomps
pop
sbb
into
dec
push
fsub
or
push
push
or
adc
cltd
ror
sub
sub
dec
jge
xchg
xor
mov
mov
popf
mov
std
sti
inc
outsl
out
lahf
shr
push
ja
fadds
imul
and
xor
add
sbb
fisubrl
dec
mov
add
pushf
mov
popa
sub
inc
mov
repz
add
ss
insl
jno
dec
push
enter
xchg
add
adc
lcall
addr16
mov
cmpsl
fnstenv
mull
add
mov
leave
cwtl
pusha
fnstsw
popf
call
lock
repz
adc
dec
mov
mov
push
cmp
xor
jno
pop
mov
rolb
xor
out
push
pop
insb
movsb
std
imul
mov
loopne
jl
add
stos
test
scas
fildll
popa
adc
out
pop
sti
sti
pop
push
push
nop
dec
push
call
idivl
cs
mov
push
adc
inc
mov
sub
pop
jmp
lods
push
cmp
ja
bts
dec
dec
into
shll
inc
cli
push
cmpsb
test
and
push
jl
push
addr16
xor
jae
cli
xor
xchg
inc
enter
and
addb
les
lret
or
out
sbb
dec
push
stos
or
outsb
leave
fptan
and
testb
es
cs
push
adc
xlat
dec
daa
loope
icebp
sub
push
imul
gs
xchg
pop
fists
es
cmp
and
push
sbb
pop
pop
rorl
xor
leave
inc
arpl
cli
int
out
adc
push
out
ja
jle
xchg
jp
mov
ljmp
mov
mov
js
xchg
repz
in
addr16
inc
pop
inc
cs
mov
sub
xchg
xchg
out
jo
dec
push
ret
rclb
shl
dec
xor
lods
in
je
iret
jbe
jl
in
sbb
add
data16
fisubs
jg
or
in
mov
pop
enter
in
sub
sbb
daa
or
inc
sbb
mov
popf
lods
add
clc
cmpsb
pusha
shl
loop
mov
pop
cmp
test
sarl
into
jnp
cmp
mov
cs
loopne
popa
push
push
jns
imul
push
test
inc
sti
flds
call
aas
rorl
fsts
lret
or
add
rolb
rcl
add
add
or
dec
jbe
and
fildl
and
mov
inc
mov
lods
add
xor
cmp
jp
or
mov
cli
push
imul
test
andb
fwait
in
imul
push
cltd
jb
mov
in
mov
cmp
cs
jecxz
lods
jg
incb
add
mov
divl
sub
jl
jno
jmp
jnp
mov
lahf
or
stc
add
push
cld
fsubr
fldcw
sub
ljmp
fst
cmp
and
mov
pop
add
jp
inc
inc
pop
push
fs
cmpsl
sarb
scas
add
mov
stc
loopne
mov
pop
pop
mov
jnp
popa
add
in
shll
or
sbb
mov
js
inc
cwtl
std
aad
xchg
mov
pop
cltd
and
sbb
sbb
add
pop
stos
rcrl
mov
stc
cmp
hlt
arpl
out
adc
push
loopne
add
adc
push
outsb
pop
sbb
jb
mov
in
inc
test
mov
mov
iret
popf
iret
lods
xor
imul
in
mov
lods
rclb
push
and
stc
outsl
and
addr16
popf
lea
call
aad
push
pushf
push
sbb
adc
add
jmp
sub
pushf
inc
pinsrw
lret
xlat
and
sbb
mov
data16
cli
mov
xchg
cwtl
inc
sub
or
mov
testl
dec
int
xchg
cltd
daa
xor
cmpsb
sub
xchg
scas
mov
sub
popa
sub
jae
int
sub
mov
addr16
repz
mov
cmc
enter
cmp
inc
das
dec
cmp
xor
push
xor
popa
adc
cmovne
out
jp
push
push
scas
ljmp
xchg
xlat
insl
or
pop
fwait
xor
xor
push
cmpsl
adc
hlt
and
in
mov
call
mov
inc
push
jnp
cltd
aas
adc
mov
xlat
xor
jle
dec
out
je
dec
cwtl
setns
arpl
xlat
pushf
cmp
or
push
add
push
loop
sub
push
and
xlat
inc
lcall
cmc
xchg
stos
or
pop
jns
int3
cltd
or
or
sbb
jp
xor
or
jbe
push
inc
cmp
dec
pop
sub
cmpsb
pop
stos
aad
daa
inc
ja
aaa
mov
mov
bound
movsb
addl
scas
ret
lods
dec
xchg
adc
mov
mov
loopne
xchg
adc
popf
push
ds
test
xchg
aas
or
cld
xor
repnz
in
nop
push
xchg
fdivrl
push
enter
clc
rcll
mov
cmpsb
cs
fmull
out
neg
jnp
test
jae
std
mov
lcall
inc
pop
insl
call
mov
inc
mov
sub
not
rcrl
add
dec
aam
movsb
sub
xlat
sub
icebp
push
xor
dec
add
push
sbb
pop
loop
fxtract
lret
fstpt
clc
js
andb
adc
cld
jp
inc
push
push
xor
adc
imul
scas
pop
mov
fstpt
insb
sarl
cmp
adc
xchg
mov
ret
sbb
xchg
insb
call
jne
cltd
jae
mov
sub
adc
adc
nop
std
dec
data16
sti
fldenv
testl
jbe
incb
nop
andb
mov
jnp
fwait
jge
popl
xor
xchg
leave
push
mov
sbb
jns,pt
mov
lret
js
inc
fcmovnu
cld
push
js
scas
loope
dec
add
scas
cmp
jmp
lahf
outsl
mov
lods
xorl
mov
fistps
jle
int3
xchg
add
mov
je
adc
ljmp
shrl
sbb
test
mov
lret
fucomi
dec
xchg
xchg
jle
dec
lahf
fiaddl
add
lret
fcomps
sbb
xor
ja
mov
testb
jmp
sub
sarb
dec
xor
test
jnp
data16
sbb
xchg
dec
jnp
andl
dec
jl
loope
dec
dec
inc
pop
int
icebp
ret
push
dec
pop
test
inc
rcrl
jmp
mov
adc
inc
icebp
test
and
insl
stos
cmp
fdivrp
lods
aaa
dec
loop
sbb
andb
daa
shlb
imul
pop
cmc
fs
out
adc
and
push
les
fstpt
data16
mov
dec
xchg
movsb
pop
mov
movsb
push
sub
popf
outsl
xchg
push
sbb
nop
inc
cmpb
ret
subl
jp
pushf
inc
sbb
sub
std
mov
mov
fcomps
sub
lods
sub
dec
lcall
rclb
cld
sub
mov
jnp
mov
adc
and
add
cmp
sub
movsl
push
imul
pop
push
cmp
add
mov
mov
ret
xchg
or
mov
and
shr
jmp
movsl
inc
jo
mov
xchg
fsubl
addb
stc
pusha
cli
dec
cmpsl
stos
fwait
pop
mov
inc
xchg
jg
mov
int
xchg
test
mov
dec
test
icebp
mov
lcall
xor
xchg
mov
mov
xchg
dec
push
push
es
outsb
sbb
ljmp
ja
dec
and
mov
sub
addr16
add
pop
jmp
das
mov
mov
stos
out
mov
nop
leave
lds
cmp
in
idivl
mov
push
arpl
mov
mov
lret
std
xchg
les
out
or
lcall
push
mov
sub
insl
stos
decl
jp
loopne,pn
mov
cmp
orl
jge
dec
aaa
jecxz
dec
outsb
sarl
cmpsl
jl
jns
dec
sub
xchg
loopne
and
jg
call
jecxz
pop
inc
out
adc
dec
and
pop
push
in
inc
sbb
movsl
les
ja
push
push
ja
shll
lock
or
les
es
push
adcb
out
xchg
sub
lahf
dec
fwait
aam
xor
mov
lret
bnd
pcmpeqb
push
fbld
jns
xchg
cmpsl
and
aad
fsubl
les
stos
mov
shll
ret
es
jbe
and
jmp
fs
dec
mov
or
dec
sub
push
pop
mov
stos
rorb
mov
outsb
push
aaa
mov
adc
in
pop
jmp
or
sbb
js
jnp
bound
in
sbb
lret
mov
push
out
mov
scas
jae
rcl
push
cwtl
inc
movsl
stc
aas
mov
sub
out
jno
sub
push
enter
mov
lea
push
sub
xchg
jmp
fdivrl
dec
jno
mov
ficoml
jmp
sbb
sbb
jmp
in
stos
pusha
pop
xchg
or
add
test
sub
push
jnp
mov
push
mov
lock
push
int
ss
cwtl
and
in
pusha
mov
data16
cmp
pop
push
xor
dec
jb
xchg
push
add
insl
nop
icebp
mov
fistl
sbb
into
add
fs
jbe
movsl
xchg
push
sub
je
test
int3
push
mov
add
xchg
popf
loop
cmpsb
mov
xlat
cmp
inc
call
push
adc
pop
out
sub
out
ds
outsb
or
push
mov
sti
rclb
pushf
cli
rcl
addr16
hlt
cmp
push
push
cmp
xlat
ret
sbb
nop
mov
mov
stos
mov
mov
sbb
inc
cwtl
cmp
aam
push
push
outsb
lods
add
sahf
out
mov
fisubrl
jp
in
sti
push
inc
das
out
outsb
and
sub
insb
adc
ret
outsb
mov
imulb
jb
clc
push
dec
sub
or
out
imulb
psubsb
stos
jl
fstl
mov
dec
dec
push
shll
movsb
mov
mov
add
inc
scas
scas
fs
fistpl
test
fcomps
xchg
inc
cmp
clc
cmpl
mov
push
mov
out
fsts
inc
mov
push
testl
add
stos
fmuls
addr16
ret
loope
cmp
out
imul
in
cmp
pop
lock
andb
into
mov
nop
mov
jo
dec
push
call
jno
mov
fsubl
test
mov
jne
cld
or
dec
imul
mov
sbb
sub
mov
jle
popa
xor
cmp
jns
test
and
dec
std
mov
adc
sti
pop
sub
aas
rorl
sub
pop
ret
das
adc
sahf
adc
testl
mov
pusha
popa
das
outsl
push
mov
shrb
cmp
inc
mov
mov
push
jns
and
aad
push
jg
es
xchg
mov
pop
add
js
lret
mov
push
aad
cmp
sbb
scas
xor
fisttpll
push
jl
movsb
xchg
test
xchg
icebp
xor
call
leave
bound
jg
fidivl
sbbl
loop
dec
mov
mov
mov
outsb
pop
clc
pop
jmp
jnp
js
dec
xchg
mov
sbb
hlt
adc
jmp
jae
mov
jae
sahf
mov
pop
cltd
cmp
jg
or
shlb
jl
fildl
jecxz
jmp
mov
mov
bound
call
cvtpi2ps
or
and
xchg
hlt
jmp
fcomps
out
sub
adc
imulb
cld
pop
test
adc
sbb
jbe
cmc
adc
sbb
push
test
cwtl
and
lcall
fsubs
push
xor
xor
mov
insb
out
mov
rcll
fs
aam
ja
xchg
cwtl
push
ret
jmp
sbb
mov
xchg
in
xchg
cs
xor
sbb
cmp
std
shl
mov
popf
dec
adc
test
push
rcrl
mov
f2xm1
inc
movsb
dec
push
sub
jl
icebp
insb
lods
add
push
mov
aas
jo
out
inc
push
sub
adc
jnp
dec
xor
xchg
mov
in
add
push
fnstsw
pop
cmp
out
test
pop
fldt
lret
cmp
or
sbb
call
sub
pop
test
mov
fwait
push
stos
pop
fldt
lret
cmp
or
sbb
call
sub
pop
test
mov
fwait
push
stos
pop
fldt
lret
mov
sbb
clc
cmp
sub
pop
test
mov
lcall
pop
fldt
lret
cmp
or
sbb
call
sub
test
addr16
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
