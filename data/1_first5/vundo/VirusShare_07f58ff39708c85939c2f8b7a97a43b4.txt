jmp
cli
stos
or
aaa
mov
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
fdivrs
jmp
pop
lods
jne
jnp
icebp
push
jmp
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
shlb
mov
sub
cmp
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
jmp
movsl
jmp
jp
mov
inc
pop
xor
shlb
jmp
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
sub
cmp
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
aam
inc
jmp
push
nop
mov
lret
test
cmpsw
jmp
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
scas
add
add
jmp
mov
push
and
xor
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
sub
mov
or
icebp
push
inc
sub
add
dec
jne
jmp
in
imul
enter
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jmp
jb
inc
jns
pop
insb
jmp
xor
jmp
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
ret
jmp
cld
test
jmp
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
jmp
sbb
pusha
sbb
mov
js
mov
jmp
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
in
sub
push
jmp
pop
push
dec
adc
and
push
xor
mov
mov
mov
xor
add
xor
add
or
dec
jne
mov
mov
push
rolb
pop
jmp
int
xchg
rolb
or
jmp
leave
into
out
cld
test
or
add
add
lock
jmp
add
mov
mov
sub
leave
ret
push
mov
sub
sub
orl
mov
push
xor
mov
mov
mov
add
or
or
and
and
lea
add
and
xor
rol
xor
add
dec
jne
mov
mov
mov
jmp
xchg
pop
add
and
add
jmp
mov
add
push
orb
pop
jmp
outsb
setl
inc
or
jmp
pop
xor
rolb
in
leave
ret
push
mov
sub
push
push
xor
mov
mov
mov
xor
sub
or
inc
and
add
add
or
xor
xor
ror
push
rorb
mov
rolb
sub
addb
pop
xor
add
xor
and
dec
jne
mov
mov
pop
pop
add
leave
ret
push
mov
sub
push
push
jmp
cs
pop
add
xor
mov
mov
mov
sub
dec
sub
sub
push
movb
sub
roll
add
add
or
and
add
shr
sub
and
or
add
sub
dec
jne
mov
mov
xchg
rolb
mov
rorb
sub
mov
jmp
and
inc
push
add
jmp
nop
mov
add
jne
leave
ret
call
mov
js
push
push
push
je
ds
imul
hlt
adc
out
xor
lds
cld
aaa
xor
and
loope
jb
pusha
enter
into
ljmp
jno
mov
bound
cli
xchg
mov
test
js
cmp
pop
dec
aaa
bound
int3
jp
pop
xchg
pop
push
das
cmp
mov
pop
and
and
lock
sahf
shll
xchg
cs
push
insl
in
cmp
mov
inc
sbb
pop
dec
loop
sbb
sbb
inc
jmp
stc
inc
jle
push
mov
sub
push
cmpsb
rorl
cs
jmp
jno
xor
cmp
popf
sub
imul
jge
roll
sub
fimull
or
call
and
dec
movhps
and
hlt
pop
pop
jns
addr16
mov
pop
sub
pop
jb
sub
mov
iret
and
mov
es
or
fmull
pusha
aaa
lret
jnp
jg
scas
dec
inc
push
shlb
stos
lret
sbb
movsl
push
mov
aad
push
mov
xchg
or
cmp
mov
mov
jge
jns
inc
pop
lret
hlt
push
sub
movsl
in
test
lret
subb
xlat
fwait
sub
sti
adc
sub
or
ret
mov
mov
or
in
out
loop
popa
sub
aad
stos
mov
dec
sbb
add
imul
xor
push
jmp
and
jle
mov
stos
jnp
je
add
dec
popf
jne
pop
roll
cmpsb
into
movsl
adc
sbbb
mov
daa
shlb
xor
fdivr
je
xor
add
mov
jle
sbb
cld
pop
fwait
cmpsb
mov
hlt
dec
xchg
push
dec
dec
or
movsl
sub
in
ficoms
popa
mov
scas
push
sub
je
and
in
sahf
jecxz
rorl
out
inc
inc
xchg
sub
xchg
adc
inc
sub
mov
inc
xchg
in
pop
xchg
add
cld
sub
jmp
mov
and
mov
sub
fdivr
mov
xor
and
andl
in
jle
pop
and
lcall
movsl
xor
movsl
sub
xor
loopne
imul
fnstsw
or
arpl
inc
je
add
nop
lods
mov
or
adc
xor
lret
mov
xchg
outsl
sub
mov
and
lahf
lods
lods
lcall
test
movsl
fs
in
int3
mov
sub
pop
and
leave
ja
imul
dec
mov
jp
mov
jge
mov
sub
add
add
push
testl
test
jge
or
xor
inc
sbb
enter
hlt
ret
fimuls
insl
addr16
dec
ror
xchg
std
cli
bound
adc
scas
or
stc
insl
loopne
adc
lock
xor
push
push
mov
aam
enter
pop
dec
lods
mov
ds
cmp
hlt
push
fwait
or
xchg
pop
repnz
pop
xchg
pop
cltd
dec
adc
inc
push
mov
push
sub
push
mov
lea
cmp
je
dec
stos
sbb
lods
and
imul
mov
jne,pn
movsb
jno
popf
dec
cltd
jae
adc
xchg
aaa
mov
call
xchg
movsl
inc
andl
sbbl
push
iret
das
call
xchg
xor
mov
sti
xor
cmc
xor
int
mov
lahf
out
mov
jb
ffreep
push
lcall
fmull
call
jg
jge
and
out
sarb
movsb
sub
jg
xlat
xchg
stos
jae
push
xchg
cwtl
mov
loope
shll
jg
or
pop
mov
mov
mulb
inc
loopne
sahf
dec
mov
sub
test
jge
fidivl
aad
lret
lock
out
mov
jmp
add
inc
pop
mov
cltd
sarb
inc
sbb
mov
jns
imul
mov
mov
mov
mov
addr16
adc
xchg
fsubrl
test
cmovno
xchg
jnp
test
imul
cmpsb
lret
test
push
xor
loop
fists
or
push
sbb
and
rorl
into
add
mov
mov
lods
or
ss
xor
enter
enter
cli
shlb
pop
and
jle
pop
les
gs
inc
pusha
das
or
xchg
or
je
mov
std
jle
sub
andl
repnz
cmc
sbb
adc
jns
cmpl
dec
dec
lahf
push
xchg
push
rorb
sub
pop
pop
scas
jb
sahf
and
xor
mov
in
in
cwtl
movsb
ja
rclb
jecxz
pusha
pop
sti
in
xchg
xchg
or
inc
imul
roll
cmpsb
mov
add
arpl
jb
fnstsw
mov
imul
mov
scas
push
jmp
enter
inc
mov
arpl
ss
stos
dec
gs
push
cwtl
gs
xchg
push
pop
mov
out
push
dec
pop
fdivr
cmpsl
scas
jp
popf
popf
lods
pusha
mov
push
mov
rcll
sub
mov
pop
inc
cmpsb
bnd
pop
pop
data16
stos
jnp
inc
lret
fcoms
pop
subb
clc
mov
cwtl
xor
add
jp
aaa
fwait
xchg
jmp
lock
cltd
push
jl
jo
out
subl
int
int3
add
shlb
cmp
std
sti
cmp
mov
pop
inc
mov
push
cli
adc
data16
sbb
fisubl
xlat
mov
nop
mov
inc
popf
xor
xor
push
jle
push
mov
imul
hlt
mov
mov
adcl
cmp
fsubrs
inc
out
gs
inc
das
jge
ret
rolb
mov
sub
repz
mov
mov
neg
hlt
xor
cmp
mov
cwtl
out
xor
imul
ret
loope
or
cli
jae
xor
cwtl
mov
clc
dec
push
dec
cltd
sub
lods
lods
sbb
iret
movsb
pop
mov
movsl
cmc
mov
jns
insl
xchg
sbb
fs
mov
gs
fisubs
cwtl
pop
loopne
mov
sub
clc
out
push
loopne
inc
push
addl
xchg
jo
outsb
stos
popf
ljmp
fidivs
cmp
mov
mov
cmp
ja
dec
jl
jae
ds
cli
pushf
test
mov
jns
int3
scas
ss
dec
in
call
xor
push
dec
sbb
out
and
insb
pop
dec
xchg
lea
xchg
ljmp
and
or
jno
xor
push
jle
inc
aad
mov
or
jbe
shlb
data16
stos
test
sbb
cmp
jle
in
sub
mov
jle
sqrtps
outsb
je
or
push
sbb
ja
add
inc
mov
jno
out
sub
sub
aad
dec
sbb
ret
pop
movsl
lahf
add
dec
and
mov
scas
xchg
push
sbb
stos
jecxz
cmpsb
sbb
dec
cltd
xchg
mov
orl
fcomps
jnp
movsl
push
xchg
adc
mov
jmp
scas
and
push
jbe
test
jecxz
aaa
mov
pusha
xor
lcall
lahf
add
pop
sbb
ret
cmp
and
pop
call
movsl
aas
ja
ss
in
dec
mov
adc
pop
add
sti
mov
mov
icebp
adc
shlb
sbb
inc
js
inc
mov
mov
loope
loopne
jo
shlb
mov
jae
jle
out
aad
mulb
rolb
mov
in
loop
push
and
cli
jae
sbb
pop
negl
int3
pop
dec
icebp
mov
pushf
iret
mov
jle
jns
loope
mov
xchg
outsl
in
testb
daa
fstps
mov
cli
cmp
push
jg
or
sarl
idivl
push
sbb
aad
inc
push
mov
inc
sar
add
push
imul
fsubrs
jge
mov
dec
and
fwait
dec
mov
inc
arpl
push
subb
rorb
fwait
mov
adc
mov
adc
testb
push
push
pop
and
mov
ljmp
mov
sub
push
addr16
inc
das
mov
mov
xchg
jns
jb
push
je
and
sbb
sub
in
sbb
movsl
mov
movsb
cmp
lret
jo
or
pop
sub
push
fadds
pop
addr16
out
cmpsl
fs
push
test
jmp
imul
mov
xchg
shll
sarl
ss
push
sbb
and
dec
mov
push
or
dec
pop
loopne
movsb
test
imul
xor
xchg
add
add
les
jecxz
xor
inc
cwtl
push
fisubrl
sbb
pop
add
ret
negb
inc
jl
pushf
pop
into
add
test
rcl
adc
jecxz
xor
sbb
jno
dec
nop
add
mov
daa
adc
insb
loopne
dec
xchg
jo
jge
push
or
dec
arpl
jp
sbb
hlt
flds
in
nop
mov
enter
pop
push
dec
sbb
test
ret
enter
push
lcall
js
cs
push
je
incb
movsl
aam
loop
push
push
add
and
jo
mov
mov
mov
push
stc
push
jne
popf
out
movl
fucompp
mov
and
lret
pop
into
stos
les
sub
fcoml
sbb
cwtl
mov
mov
dec
jg
pop
mov
jle
popa
lods
mov
setle
arpl
out
sub
subb
xchg
cmp
jb
adc
or
inc
mov
sub
xchg
pop
xlat
adc
ja
pop
imul
sub
xchg
xor
mov
lret
lods
loope
pop
js
push
ret
setle
dec
lcall
jo
pop
fwait
jge
dec
int
cmp
paddsw
popa
xchg
and
mov
xchg
sub
movsb
and
movsb
mov
sbb
mov
add
mov
out
mov
jmp
popf
adc
ficoml
sbb
mov
mov
dec
test
mov
icebp
imul
xor
add
out
popa
scas
leave
ljmp
mov
mov
or
ss
xchg
or
mov
fadds
ljmp
inc
leave
out
cmpsb
adc
pop
lods
lcall
cmp
mov
out
rcrl
cmpsb
lahf
or
dec
push
jnp
add
dec
mov
push
mov
das
fcmove
ficoml
adc
pop
add
addb
fcomps
fildll
xchg
sub
mov
xor
sarl
sub
xchg
lea
and
lods
js
mov
mov
and
xchg
and
xchg
outsl
cmp
mov
test
in
int
and
inc
imul
out
cmpb
and
shlb
mov
daa
fs
pop
dec
les
fidivl
call
lock
outsl
jmp
outsb
lcall
cmpsb
das
xchg
push
jb
fucompp
inc
lods
test
xchg
mov
xlat
push
xchg
fsts
sub
xor
adc
xchg
cmc
fldcw
in
mov
cli
mov
lcall
rcrl
fidivl
movsl
lahf
cmp
jmp
dec
jmp
xchg
mov
mov
mov
pop
repnz
push
or
xor
nop
not
scas
stc
and
enter
adc
bound
add
dec
movsb
dec
xor
mov
out
in
leave
test
arpl
xchg
imulb
repnz
cmp
test
and
movsb
cmp
jge
dec
insl
mov
gs
and
shlb
sub
add
out
cli
lock
jle
repnz
xlat
jno
add
jge
cmpsb
xchg
pusha
or
fs
lret
popa
mov
movb
adc
in
or
inc
sbb
mov
cmpsb
fstl
push
jecxz
pop
jo
testb
sbb
rclb
loope
shl
sub
lcall
test
xor
xchg
cli
dec
add
sarb
insb
dec
pop
movsb
xchg
cmp
dec
mov
lods
sti
push
mov
nop
cli
fldt
orb
dec
pop
rorb
cld
test
outsl
or
sbb
lret
les
gs
push
test
jl
cmpsb
das
leave
dec
push
jnp
jo
dec
inc
mov
leave
roll
cwtl
jo
bound
mov
or
add
movsb
and
xor
enter
mov
cli
mov
cmp
mov
xchg
pop
out
pop
cmp
cli
mov
xlat
dec
insb
pop
mov
pop
ss
add
mov
loop
pop
loope
fcmovne
lret
int
inc
stos
mov
xor
jle
inc
mov
push
ja
inc
xor
fwait
scas
int3
outsl
mov
add
inc
mov
cmp
cwtl
pop
fnsave
add
mov
adc
xchg
icebp
and
push
lods
inc
jbe
mov
cld
ret
movsl
imul
dec
daa
inc
mov
jecxz
out
movsb
xor
push
pusha
das
adc
fsubp
add
subb
jge
mov
aad
or
push
mov
lcall
repz
sbb
pop
mov
xchg
push
out
jmp
sub
mov
mov
xchg
push
roll
sbb
xor
inc
outsl
sub
inc
add
xor
xor
push
cmp
or
jge
push
jmp
outsl
out
adc
sti
jmp
pop
mov
jmp
adc
subl
inc
adc
cmc
in
fiaddl
pop
popa
add
and
dec
xchg
test
xchg
fnclex
adc
push
pop
cmp
xacquire
push
sbb
pop
fs
pop
jne
xchg
roll
mov
sbb
pop
jp
mov
push
pop
push
mov
inc
out
pop
jns
push
mov
add
sub
in
xor
dec
sub
jne
test
cmp
push
js
addr16
in
pop
int3
pop
loopne
or
ljmp
das
pop
adc
cmc
movsl
dec
lods
jge
and
add
es
mov
pop
xorb
insb
das
daa
iret
push
das
and
shll
je
pusha
in
outsl
and
mov
sub
push
loope
pushf
inc
movsb
pop
cmpsb
das
jmp
popl
iret
mov
leave
add
lods
dec
shrl
mov
shlb
imul
xlat
or
fs
movsl
xchg
cltd
mov
and
shl
in
add
or
jne
pushf
sbb
fists
add
aaa
pop
stos
fbstp
push
cmpsl
jmp
mov
adc
scas
mov
push
cld
mov
pop
sbb
or
icebp
cltd
mov
xlat
mov
mov
adc
mov
mov
inc
in
js
sub
ret
and
mov
adcb
sahf
push
int3
stc
in
movsl
fisubrl
sbb
fstl
mov
dec
dec
mov
fcmovbe
dec
lahf
fsubrs
les
das
dec
adc
cmc
movsl
push
out
mov
jbe
int
in
or
pushf
jle
mov
and
adc
lock
pop
setno
sub
cmp
int
addl
lcall
mov
jbe
mov
inc
xor
ds
mov
sbb
pop
sbb
mov
arpl
in
and
aaa
or
lds
sub
push
xchg
xchg
clc
push
and
int
test
in
add
mov
push
ficompl
mov
pop
or
aad
loopne
xchg
mov
icebp
int3
adc
rcrl
les
pusha
das
pop
in
and
mov
xor
int
call
or
lcall
pop
shlb
xchg
push
sub
push
dec
leave
mov
and
pop
add
ret
outsl
sahf
and
pop
ja
loope
and
dec
jp
aaa
fimuls
xchg
lea
lret
ret
or
dec
jb
sub
popa
push
cmpsb
mov
mov
fcmove
inc
rol
xor
cmpsb
mov
leave
sub
pushw
sbb
pop
lods
xchg
aam
mov
aad
and
mov
jecxz
xor
js
fisttpl
mov
cmpsl
sbb
add
inc
call
movsb
les
mov
popa
out
fs
push
or
pop
push
mov
and
push
pop
insl
mov
sti
mov
xor
cmc
lret
addr16
out
and
add
sar
je
cmp
and
sub
push
stos
cmp
inc
xor
push
sti
loopne
adc
cld
add
xor
shll
adc
shlb
lds
mov
push
lcall
push
dec
ret
sub
mov
xchg
pop
xchg
sub
add
mov
mov
sub
mov
test
mov
rcll
xor
add
imul
dec
jl
lods
push
test
cs
stos
add
xor
gs
mov
mov
das
lret
loop
aam
xorl
sti
push
ret
mov
dec
minps
and
aaa
or
jp
popf
xchg
sub
leave
inc
mov
aam
mov
mov
test
stos
lahf
jl
fidivl
inc
rcr
xor
sarb
cli
xchg
in
add
scas
inc
outsl
push
imul
mul
ucomiss
or
sbb
sbb
push
loop
dec
jle
lcall
mov
fiaddl
pop
mov
jmp
call
decb
inc
adc
pop
cmpsb
jno
je
xor
rcr
adc
pop
mov
or
push
popa
lds
lods
loope
fs
shlb
addb
xchg
pop
insb
leave
add
roll
cmc
outsb
test
xor
cli
xor
lods
loope
int
sbb
repz
sbb
pop
xor
xchg
gs
enter
cs
subb
lret
call
push
mov
leave
mov
je
inc
push
fisubrs
dec
cmp
adc
scas
enter
mov
lahf
testl
add
sub
imul
mov
and
das
shll
jl
or
mov
stos
pusha
ss
das
jno
inc
in
push
push
push
aad
push
out
daa
cld
js
adc
xchg
inc
mov
lret
test
and
mov
mov
sti
cli
mov
xlat
mov
and
fidivrs
mov
mov
das
pop
fwait
xchg
scas
in
shlb
adc
add
jnp
adcb
testb
pushl
mov
mov
mov
je
int3
jg
and
test
insl
lock
sti
push
aas
xchg
movsb
test
dec
andl
std
xchg
fldl
test
mov
ljmp
jg
xorl
out
loop
xlat
sub
aad
movsb
mov
dec
mov
sub
mov
pushf
cs
mov
lea
xchg
jnp
mov
push
rol
sti
xor
in
cmp
push
jp
cwtl
or
push
clc
jl
movsl
ret
testb
xchg
sbbb
add
stc
dec
sbb
fucomp
cmpsl
fwait
xchg
xchg
pop
das
mov
push
mov
int
push
sub
paddsw
pop
fldl
sahf
or
mov
and
push
push
inc
fistps
sbb
push
push
leave
mov
iret
mov
mov
cmc
movhps
push
dec
adcb
test
and
lods
out
nop
mov
js
push
push
pop
add
lcall
or
mov
daa
addr16
subb
sbb
insl
pop
mov
cmp
cs
ret
clc
push
push
loopne
xor
add
nop
cmpsl
dec
out
mov
or
add
jns
cmc
dec
leave
push
lods
cmp
mov
lods
enter
mov
push
repnz
adc
ret
cmpsl
push
pop
mov
mov
push
sub
fsubl
fistl
gs
adc
mov
enter
fidivs
mov
pop
dec
xchg
mov
clc
popa
sub
xor
movsl
add
cmpsb
mov
and
xchg
cmp
insb
mov
call
and
icebp
jl
rep
fs
dec
add
ret
pop
push
je
xor
cltd
adcb
call
xchg
xor
pop
jne
mov
xor
mov
or
add
pop
adc
xor
bound
push
dec
lret
subb
ljmp
xor
push
mov
ljmp
icebp
mov
movsl
cli
pop
mov
push
movsl
xchg
into
mov
movsl
sub
cld
add
xor
sub
xchg
push
mov
dec
push
pusha
pop
xchg
push
movsl
mov
ret
loop
fs
shlb
insl
je
mov
dec
leave
add
shll
stos
mov
sub
push
fldl
xchg
cld
cs
adc
scas
mov
sub
or
xor
push
movsb
sbb
inc
cmp
not
out
lods
sub
inc
xchg
add
outsw
adc
ret
cmp
push
add
insb
mov
xor
mov
mov
adc
or
inc
ja
mov
push
mov
mov
mov
push
xor
test
aas
pushf
es
int
push
or
ret
leave
lds
dec
sbb
dec
out
fdiv
out
add
xchg
mov
and
mov
sbb
mov
nop
inc
ret
outsl
push
dec
std
fisubs
stos
fs
leave
imul
iret
jle
or
sbb
jg
rorl
add
adcb
testl
inc
je
add
nop
sbb
or
push
mov
cmp
jne
mov
pop
mov
add
jp
jle
mov
loope
scas
dec
ret
dec
push
inc
mov
icebp
and
push
inc
push
rclb
lret
lds
push
ret
mov
scas
mov
push
cld
mov
pop
sbb
or
dec
ret
or
xlat
mov
sbb
sti
dec
popa
inc
inc
jns
xor
fwait
mov
nop
pushf
cmp
dec
dec
idivb
mov
movsb
push
xchg
dec
mov
test
in
or
adc
ljmp
mov
loope
adc
cs
push
xor
lods
test
in
es
cmp
sub
gs
stos
xor
hlt
mov
sbb
xchg
or
dec
mov
shlb
jmp
dec
leave
add
mov
mov
pop
xchg
test
mov
jnp
dec
mov
outsl
xchg
out
les
pop
lahf
or
jmp
jno
ffreep
out
or
sti
nop
cmp
pop
inc
insb
fdivl
add
pop
xchg
call
and
xor
sub
xchg
push
mov
dec
push
jle
popa
lea
mov
mov
pop
ret
mull
mov
gs
mov
mov
pop
pop
cmpsb
jp
pusha
xchg
sub
incb
push
push
sub
jo
xor
mov
or
mov
das
push
inc
mov
shl
mov
xchg
mov
ret
pop
and
jle
push
push
cmpsb
mov
and
push
outsl
mov
push
push
cmp
push
push
push
cs
mov
lods
jbe
fwait
mov
mov
daa
mov
add
addb
xor
adc
mov
lahf
call
sbb
fwait
fs
push
loope
inc
aad
cld
test
test
or
pop
into
xchg
popa
inc
xchg
dec
stos
mov
ja
mov
fdivr
gs
dec
sbb
les
imul
and
cmp
dec
cmpsb
jmp
gs
pop
mov
stos
stos
scas
dec
fidivl
inc
rcr
xor
sarb
cli
xchg
in
add
scas
inc
outsl
push
imul
cltd
inc
add
adc
fnstenv
dec
mov
insb
out
stos
sbb
push
loop
movsl
cwtl
call
sbb
mov
das
popa
scas
test
xor
sub
cmc
pop
pop
jg
bound
mull
and
daa
mov
aaa
dec
inc
lods
xchg
iret
sbb
and
xchg
movsl
lahf
andl
fdivrs
out
pop
inc
add
lock
aaa
push
xchg
xchg
gs
mov
mov
jo
sbb
inc
add
incl
inc
mov
pop
faddl
pop
mov
lods
xlat
cmpsl
ret
aam
sbb
std
pushf
repnz
ror
adc
mov
add
jb
add
test
jmp
mov
adc
xchg
jns
inc
and
pop
aad
mov
das
push
loopne
andb
or
sub
inc
xchg
lods
lods
dec
mov
das
push
aas
fstps
xor
mov
sbb
in
mov
cmp
sahf
and
mul
dec
cmp
lret
movsl
mov
nop
mov
push
std
mov
pop
loope
popa
fmul
stos
dec
cs
and
adc
aas
mov
jo
mov
mov
mov
cmpsl
and
xchg
sbb
xor
mov
fadds
push
or
inc
vpmuludq
mov
dec
add
jl
push
mov
sbb
les
into
dec
leave
mov
fs
adc
nop
mov
inc
hlt
sti
and
scas
add
jo
jmp
jecxz
es
ds
mov
jb
mov
loope
nop
xor
icebp
mov
out
int3
push
mov
dec
fldcw
in
jmp
pop
pop
push
ja
or
cwtl
pop
adc
push
pop
mov
int
imul
mov
mov
test
data16
lea
mov
lret
mov
jge
push
dec
pop
push
mov
sbb
xchg
or
push
mov
pop
ret
pop
and
cs
or
fmull
pusha
loop
lret
jnp
pop
cmp
mov
scas
dec
lods
lret
ret
movsb
xor
jmp
mov
mov
or
movsb
mov
cld
cmpsb
pop
mov
mov
mov
in
mov
daa
daa
out
push
mov
xchg
ret
jnp
pushf
outsl
push
repz
mov
int
xchg
xchg
pop
add
xchg
pop
jo
adcb
xor
pop
cmp
in
inc
mov
jmp
imul
dec
leave
jle
rclb
lods
ret
pop
pop
xorl
pop
mov
pushf
int
shlb
push
cld
mov
gs
or
icebp
mov
push
mov
cmp
es
push
sbb
fldl
and
addr16
imul
fwait
andb
push
rcrl
mov
mov
jl
int
out
sti
mov
xor
and
andl
out
dec
sbb
add
lcall
mov
lret
push
push
movsl
xor
movsl
sub
xor
loop
imul
fnstsw
or
arpl
inc
je
add
nop
lods
mov
or
fiaddl
mov
out
test
cmpsb
jmp
inc
daa
inc
aam
jnp
test
sbb
int
scas
jp
mov
inc
push
inc
push
je
push
test
in
ret
and
das
jg
fs
arpl
add
fstpt
sub
les
int3
mov
ret
imul
sti
xchg
xchg
jp
sti
inc
xchg
into
es
stos
mov
dec
lock
andb
test
mov
adc
imul
test
test
shlb
shrb
mov
sbbl
pop
mov
movl
sub
enter
dec
and
fbld
adc
dec
rcll
mov
int3
xor
pop
jne
shlb
movsl
mov
or
leave
mov
out
lods
dec
shrl
gs
xchg
sub
mov
mov
dec
test
sub
iret
in
jbe
mov
scas
fcompl
add
cs
sti
cmpsl
ja
lds
adc
inc
fisubl
insl
icebp
adc
clc
das
push
out
rorl
jnp
adcb
xchg
xchg
pop
jbe
add
jb
adc
jb
pop
stos
and
dec
xor
mov
imul
fwait
jae
sarb
insl
push
mov
cmp
out
dec
ret
sub
inc
or
mov
add
mov
jp
movsl
in
pop
mov
mov
push
into
in
jo
jmp
repz
rep
loope,pn
shll
jge
aas
dec
daa
jecxz
ret
sbb
add
pusha
push
mov
sarb
inc
movsb
push
enter
mov
lahf
and
iret
and
xorb
sub
insb
loop
inc
out
mov
jge
and
shr
add
pop
or
mov
arpl
inc
repnz
rcl
or
jecxz
fsts
rclb
ljmp
inc
jge
cmc
and
xchg
cmp
push
jp
ret
jmp
outsb
mov
dec
and
enter
loope
xchg
hlt
push
mov
repz
rclb
rclb
rorb
mov
lahf
imul
punpckhwd
jge
jns
pop
jl
fstps
cmc
sub
mov
cmpsb
sbb
xchg
push
or
add
or
push
repnz
jnp
xchg
lret
push
sbb
pop
push
je
cld
in
and
aas
mov
and
test
push
ffree
adc
out
out
mov
das
shl
add
cmc
clc
inc
jbe
dec
or
cwtl
dec
jo
inc
add
ja
jmp
out
cmp
lds
dec
or
arpl
inc
je
mov
nop
lods
pop
xchg
fadd
xchg
mov
pop
mov
inc
in
dec
cwtl
fdiv
and
and
enter
popa
push
aaa
jle
lret
insb
mov
inc
call
jns
add
lds
inc
dec
and
mov
xor
jle
jae
mov
data16
jbe
std
cmpsl
negb
push
jns
mov
mov
push
pushf
inc
outsb
jp
jl
pop
jecxz
xor
sahf
mov
iret
movsb
adc
scas
or
stc
insl
loopne
adc
incl
xchg
add
gs
push
or
fnstsw
adc
jmp
movsl
jb
jno
arpl
sub
sahf
mov
inc
fistl
cmc
and
pop
push
or
fucompp
pop
test
imulb
xchg
push
xchg
jb
jmp
inc
xchg
push
or
fists
lds
inc
mov
sub
fdivr
mov
xor
and
xorl
mov
in
jle
pop
mov
imul
int3
jle
ds
movsl
inc
jp
push
bound
imul
pop
loopne
nopl
inc
je
add
nop
sbb
or
push
mov
shrb
jmp
iret
fidivs
scas
in
push
loope
dec
adc
or
jns
pop
out
insl
das
mov
mov
pop
dec
arpl
lods
cmp
aam
or
sub
outsl
mov
adcl
adc
pop
leave
leave
lods
js
sub
mov
sub
xchg
dec
adc
pop
call
push
add
xor
stos
dec
push
pop
or
jge
out
adc
and
mov
rcrl
shll
dec
js
lcall
sbb
cmp
push
adc
outsl
out
adc
test
cs
mov
xchg
fmull
mov
psllq
jle
pop
shll
pushf
movb
in
add
xchg
sub
mov
jge
cmp
adc
adc
xchg
jmp
cmp
dec
and
movsl
pop
outsb
add
or
inc
cwtl
sub
mov
clc
jbe
push
sbb
es
sub
sahf
pop
mov
addl
mov
xchg
pop
out
pop
pop
test
pop
sbb
and
cmpsl
mov
xchg
stos
mov
xchg
pop
jns
je
rorb
subl
imul
inc
jo
sbb
push
arpl
and
cmp
mov
adcl
rorl
fcmove
inc
rol
sub
cli
xchg
push
shll
push
loop
arpl
pop
add
xor
push
loop,pn
adc
adc
imul
outsl
inc
pop
adc
mov
sarb
sbb
mov
pop
add
in
dec
ficoml
add
xchg
push
mov
lds
pop
dec
xlat
xor
out
pop
fdiv
or
jp
mov
fnsave
leave
mov
pusha
pushf
jle
mov
dec
clc
or
cmp
stos
repnz
sub
cmp
or
fdivs
adcl
lahf
loopne
push
inc
dec
dec
push
and
testl
xchg
je
data16
mov
lahf
decl
je
xor
cmp
aaa
sbb
mov
mov
call
fmull
pusha
aaa
lret
jnp
pop
cmp
mov
scas
sub
xchg
dec
jo
dec
fcoms
lret
jl
push
ret
jne
mov
repz
psubusw
sub
loop
jge
das
lods
out
adc
mov
fimull
mov
pop
lcall
fisubl
inc
xor
pop
add
sarb
scas
popa
jmp
adcl
ja
xor
push
jbe
dec
dec
mov
cmp
xchg
cmpsb
sbb
inc
fwait
or
jl
jge
je
mov
fcoms
insl
sbb
inc
pop
pop
xlat
jb
insl
inc
gs
xchg
jp
dec
lret
and
out
mov
js
fisttpl
mov
cmpsl
sbb
xchg
loop
dec
shrb
jg
or
sbb
cmp
popa
nop
test
xor
movl
adc
sbb
pop
push
pushf
xor
cmpxchg
sbb
out
sbb
sbb
fwait
sbb
cmp
in
cmp
sub
mov
sub
adc
ss
jo
mov
sub
dec
cltd
add
jg
adc
in
movsl
cli
pop
mov
push
movsl
xchg
into
mov
movsl
sub
cld
add
jg
jne
dec
and
insl
dec
cmpsb
push
stc
push
imul
dec
or
popa
add
mov
sub
adc
mov
stc
mov
mov
insb
mov
inc
call
jns
add
dec
pop
std
cmp
pop
addr16
fucomi
ds
add
adc
fwait
das
aaa
mov
div
or
sbb
andb
in
ret
inc
fisubrs
jle
xchg
and
jge
dec
mov
test
test
lea
aad
pushf
lds
inc
xor
ret
mov
addr16
addr16
xor
pop
mov
xchg
iret
test
shlb
stos
sub
sbb
jecxz
sub
fnstsw
lds
insb
cmc
fistpll
inc
fsubrp
out
dec
xor
add
sub
jne
fidivs
ds
cltd
out
add
dec
daa
sub
mov
mov
jmp
sahf
or
dec
fidivs
cmp
dec
inc
ljmp
insb
pop
mov
add
inc
dec
bnd
push
xchg
lcall
push
out
stc
mov
mov
add
adc
jmp
mov
js
psubusw
sub
loop
jge
das
lods
out
adc
js
hlt
repnz
add
or
sahf
jae
mov
jbe
jae
sub
stos
cmpsl
xlat
pushl
in
insl
add
shr
sub
lds
ljmp
test
sbb
mov
mov
adc
rorb
mov
pop
pop
sbb
jb
sub
pop
or
addr16
gs
aad
pop
cmp
or
in
adc
or
cmp
leave
mov
test
add
mov
jbe
push
push
imul
lahf
inc
ret
outsl
push
mov
fisubs
dec
push
inc
jne
lcall
fs
mov
lret
push
push
movsl
xor
add
jg
mov
cmp
lahf
pop
roll
cwtl
xor
and
dec
pop
das
mov
push
ss
loopne
aaa
icebp
ret
inc
and
outsl
xor
sub
inc
ljmp
mov
lret
subb
sbb
dec
mov
dec
inc
repz
jmp
jl
out
or
sbb
psllw
mov
xchg
push
pop
cmp
push
fisubs
dec
ljmp
aaa
leave
pop
sub
mov
pop
pop
xor
xchg
aad
or
rorl
loopne
mov
out
fnstenv
clc
aad
pop
loope
movsb
fwait
xor
popa
dec
or
testb
dec
popf
mov
fs
add
aaa
xchg
pop
and
push
das
dec
inc
push
ret
mov
in
das
fidivl
jp
aad
mov
add
fldl
and
cmp
jo
ljmp
scas
push
aam
fistl
ror
cmp
inc
mov
mov
mov
dec
mov
sbb
outsb
bound
lods
out
data16
push
cli
sub
mov
push
enter
inc
push
fwait
cmpsb
lds
js
shlb
xor
fmull
pusha
loop
lret
jnp
pop
cmp
mov
scas
dec
lods
lret
out
pop
into
adc
mov
jle
hlt
pop
xor
pop
jae
sub
les
jb
cmp
ja
fs
jp,pn
sub
pop
stos
or
movb
lcall
ss
sti
iret
push
or
and
inc
insb
push
in
xchg
rorb
and
push
je
andl
fcomip
out
shll
adc
loop
adc
adc
dec
aad
cmpsl
loope
dec
xchg
xor
cltd
mov
shlb
mov
jmp
pop
add
in
mov
fisttps
into
mov
lods
sub
cmpsb
in
sarb
add
and
mov
pushf
sar
popf
jb
pusha
jb
stos
xchg
sar
fmul
fidivl
xchg
lea
aam
fs
lcall
stos
dec
gs
mov
arpl
mov
inc
mov
add
jnp
or
add
or
push
je
jae
push
ss
pusha
out
pusha
or
adc
mov
and
xchg
mov
mov
xchg
mov
add
loopne
cmp
mov
jns
imul
mov
mov
xor
jge
sbb
sub
or
inc
sub
xorl
iret
push
mov
push
pop
xchg
sbbb
inc
cmp
cmp
out
mov
aad
cmpsl
loope
movsb
xchg
xor
popa
dec
mov
testb
dec
popf
jne
pop
roll
cmpsb
into
movsl
adc
into
xor
mov
cli
lods
or
mull
and
data16
imul
arpl
cld
pop
add
rcrl
mov
mov
adc
push
jb
jno
mov
pop
cmp
jl
cs
mov
xlat
or
push
fwait
std
add
mov
adc
xchg
inc
mov
lret
test
and
test
test
js
xlat
mov
or
push
in
ficompl
ss
add
ret
adc
or
movsl
popf
pmaddwd
fcoml
insl
dec
adc
mov
pop
pop
jb
hlt
xor
sub
xchg
dec
adc
pop
call
push
add
xor
stos
dec
push
pop
or
jge
dec
sbb
jge
lahf
cli
ret
testl
shll
push
jle
lcall
pop
lods
xor
js
fisttpl
mov
cmpsl
sbb
xchg
loop
jnp
call
sbb
cmp
popa
nop
test
xor
das
mov
scas
stos
mov
lods
mov
mov
mov
cmp
mov
inc
pop
repz
loopne
sbb
rorb
sbb
inc
add
incl
mov
dec
jge
ss
xchg
aad
divl
lock
gs
ss
adc
addl
fldenv
jl
xchg
pop
out
in
in
js
and
cli
mov
xlat
dec
insb
pop
mov
pop
ss
add
lods
je
rorb
andl
leave
int
inc
stos
mov
xor
insl
lock
mov
stos
add
lds
jb
lods
mov
xchg
sub
ret
shl
mov
dec
jmp
fadd
mov
arpl
popf
dec
push
or
arpl
push
xchg
enter
shll
and
hlt
cmp
push
jmp
outsl
out
adc
sahf
ud0
push
mov
and
cld
iret
aaa
int3
pop
and
into
xor
xlat
inc
adc
cmc
in
jb
rol
stc
mov
shlb
lods
in
stos
inc
in
arpl
dec
mov
sbbl
rcrb
test
mov
jnp
nop
mov
outsl
and
xchg
pop
mov
mov
xchg
mov
jb
mov
outsl
pop
add
jnp
add
fsubrl
ret
push
xchg
jne
pop
test
cli
jae,pt
fsubrs
mov
xchg
dec
mov
push
ret
jne
dec
lods
pop
pop
shl
js
rcr
lret
sub
das
lods
out
sbb
das
jns
stos
mov
cmp
jnp
push
sti
iret
adc
jle
sub
cmp
push
pop
decl
rcl
out
mov
arpl
into
mov
xchg
out
je
inc
push
sbb
mov
cld
push
imul
sub
pop
xchg
sti
add
clc
out
pusha
sbb
adc
jg
dec
out
xchg
xchg
adc
out
mov
add
pop
mov
add
sti
inc
fsubrp
out
dec
xor
add
sub
jne
out
mov
inc
mov
mov
mov
cmp
stos
dec
gs
subb
xor
mov
in
ret
mov
push
jl
or
repnz
xor
outsl
or
popfw
inc
mov
aad
shr
out
xor
cmp
imul
nop
jg
inc
push
cmp
cmc
into
or
in
xor
adc
pop
pop
faddl
xchg
ret
cmpsb
add
cmp
xchg
pusha
scas
jp
ja
jl
std
stc
sbb
xlat
push
add
test
pushw
sub
dec
leave
jnp
aad
iret
adc
js
mov
fistpl
mov
imulb
mov
add
xchg
sbb
fdiv
sbb
arpl
js
fists
lock
mov
mov
adc
rorb
adc
jb
jae
push
popa
ljmp
mov
fstenv
loope
dec
dec
stos
stc
lret
jnp
sti
add
pop
loop
std
mov
lds
neg
pusha
mov
push
repnz
cmp
test
pushf
mov
jb
pop
out
int3
push
mov
pop
sbb
insb
and
lods
dec
pushf
push
pop
mov
arpl
sbb
push
insb
jb
jnp
clc
leave
decb
jge
loop
pop
dec
imul
mov
in
stos
mov
add
push
fiaddl
popa
add
cmpsb
jno
push
mov
scas
jnp
lods
js
mov
roll
or
pop
dec
adcb
std
xchg
push
sahf
push
shrl
sbb
sub
push
xor
dec
xor
or
or
int3
inc
adc
pusha
and
and
add
rcrl
ret
sbb
jmp
push
pop
jne
pop
call
movsb
mov
inc
pop
sti
push
mov
cmpsl
aam
ret
aad
fisubs
imul
or
sbb
jecxz
popf
cmpsl
ja
imul
popf
sbb
xchg
mov
das
push
out
rorl
sub
adc
adc
push
push
jb
sub
shlb
inc
jbe
inc
movsl
mov
cs
sahf
lds
jmp
sub
add
push
cmp
aam
movsb
push
in
out
fsubrs
mov
xchg
push
lea
or
fxtract
mov
js
cmp
mov
and
push
adc
inc
sub
ret
pop
inc
pop
imul
pop
push
xchg
lcall
add
dec
and
in
jno
outsl
subb
inc
jae
sti
sub
ljmp
adcl
rorl
fcmove
inc
rol
sub
cli
xchg
push
mov
pop
lods
pushf
aam
mov
imul
stos
mov
adc
mov
sahf
adc
imul
outsl
inc
pop
adc
mov
loopne
mov
sub
push
in
dec
ficoml
rorl
mov
mov
sahf
or
pusha
imul
in
fmuls
scas
cli
mov
push
stc
lods
and
imul
mov
and
mov
xor
jge
or
dec
jge
jns
mov
and
lock
subl
mov
adc
add
jb
add
test
add
and
loopne
cltd
lret
subb
push
pop
sub
std
dec
add
lret
repz
dec
dec
outsl
push
leave
ja
das
pusha
xor
in
mov
mov
leave
pusha
pop
adc
fsts
lods
mov
ja
lcall
dec
sub
fcoms
rcrb
call
fstpt
aam
adcl
aas
push
add
movsb
mov
fs
inc
aas
and
lods
and
dec
pop
hlt
mov
into
dec
xor
in
or
mov
xor
cmp
loope
mov
mov
sub
cld
fdiv
ret
pushf
es
int
push
mov
addr16
inc
sbb
ret
fistl
imul
mov
xor
jl
or
mov
mov
ja
ret
in
push
push
sub
xor
or
daa
cld
iret
data16
jle
mov
mov
adc
pop
push
mov
mov
push
jne
call
popa
cli
sahf
cmpsl
push
repz
mov
dec
cmp
mov
imul
sub
icebp
fcomip
andb
scas
jnp
sahf
fldenv
out
sbb
ret
push
fildl
std
addr16
or
mov
sub
mov
jmp
dec
and
testl
xchg
out
or
push
push
into
cmc
mov
dec
mov
cwtl
mov
in
repnz
mov
out
jo
fdivrp
daa
bound
inc
xor
sbb
ja
xchg
xor
cltd
mov
dec
fisubrl
pop
test
std
pop
sub
push
or
pusha
sbb
mov
jmp
movsl
jb
jbe
arpl
sub
roll
fistps
sbb
dec
ja
rcrl
loop
and
inc
sahf
and
sti
mov
xor
jo
xchg
adc
dec
sbb
sbbb
pop
out
or
add
push
pop
xor
loop
fwait
lds
dec
or
into
cmp
cs
dec
mov
iret
sbb
fst
popa
outsl
ja
mov
shlb
mov
pop
pop
jge
movsb
xchg
push
aaa
jle
lret
insb
mov
cmpsl
xlat
and
cwtl
xchg
mov
pop
mov
cmp
and
jne
mov
push
and
mov
fstpl
ss
sub
pushw
sbb
pop
lods
xchg
aam
mov
outsl
lret
inc
stos
cmp
adc
into
xchg
and
jns
insb
mov
xor
jns
mov
adc
idivl
lea
xlat
scas
jge
adc
mov
xchg
aas
xor
lods
sub
sub
aad
jmp
out
out
fs
in
jo
fs
mov
movsl
cmc
mov
jecxz
bound
cmp
push
pop
cld
pop
stos
arpl
fistpll
in
out
loopne
inc
dec
fldcw
sbbb
mov
push
inc
and
xor
popf
lods
nop
shl
adc
inc
sub
push
jb
push
mov
mov
shll
cwtl
stos
movsb
mov
sub
outsl
push
add
jg
mov
lods
pop
cmp
xchg
shrl
pop
in
shr
mov
jge
mov
sub
adc
pop
fwait
pop
add
xchg
xchg
subb
mov
mov
idivl
cmpl
adc
lods
xchg
push
and
jge
dec
mov
sti
std
pop
cli
inc
leave
movsl
sbb
js
xchg
repz
and
push
js
sub
pushf
mov
sbb
dec
pusha
add
jmp
and
out
xchg
mov
xchg
cmc
in
sub
dec
idiv
mov
shlb
je
mov
dec
loopne
ftst
mov
xor
or
call
push
std
sbb
lahf
or
jg
mov
push
mov
pop
jne
ret
inc
add
pop
cmpsl
push
pop
and
cwtl
push
rol
movsb
sub
arpl
stc
dec
push
jle
popa
sarb
lahf
xor
js
and
cwtl
stc
add
adc
dec
push
xchg
rcl
pop
into
fwait
mov
outsb
cmpb
mov
test
xor
jne
dec
jge
cmpb
inc
int3
aad
fwait
push
pusha
movsl
pop
or
sbb
out
arpl
incb
cmp
pusha
mov
lcall
push
add
or
cmpsl
fsubl
jmp
cmc
fistps
or
adc
pop
sub
sti
fdivrs
call
push
out
and
mov
sar
je
cmp
shrw
push
push
loope
stos
cmp
pushf
xor
in
loopne
out
xchg
jae
ss
push
pop
gs
xchg
gs
int
pop
cs
in
mov
sub
fmuls
int
mov
pop
jo
xchg
adc
dec
sbb
add
lcall
or
add
add
sub
stos
mov
lds
loopne
fisubrl
std
cltd
push
add
imul
add
sub
dec
cwtl
pop
hlt
cs
jmp
test
mov
bound
pop
insl
push
xorl
ljmp
iret
jne
push
add
cmp
stos
dec
ljmp
mov
xorl
enter
jecxz
out
test
inc
outsl
jl
movsl
mov
loop,pn
xchg
fstl
fnstenv
dec
aad
cmpsl
loope
out
mov
ljmp
shlb
adc
rcll
mov
add
push
test
rcrl
push
into
movsl
sarb
mov
ss
into
loop
jae
jle
out
aad
mulb
rolb
mov
push
and
pop
loope
cmp
xchg
loop
popa
test
into
inc
jp
int
in
cmpsl
mov
hlt
push
jns
add
movsl
dec
sbbl
pop
fstl
fbstp
dec
mov
xor
cmp
icebp
xor
cmp
cmp
out
lret
or
xchg
in
imul
lods
push
jle
mov
fs
cs
into
subb
lods
pop
add
es
mov
xor
pop
dec
shl
clc
test
int3
xchg
sti
pop
push
loope
out
mov
rorb
mov
or
pop
lods
dec
outsl
push
pop
popf
ret
ljmp
outsl
loop
fucompp
mov
fcompl
dec
jl
push
filds
pop
insl
movsb
mov
in
pop
fwait
jge
push
aaa
aas
or
out
mov
dec
xchg
pop
outsb
xor
dec
lods
or
popf
adc
fs
and
mov
pop
jmp
mov
pop
sbb
les
insl
lcall
push
mov
fcoms
mov
add
inc
push
test
or
sti
cmpsl
scas
jp
das
aas
sahf
lea
movsl
lret
xor
pop
mov
outsb
xchg
inc
jbe
scas
sub
data16
in
mov
or
dec
in
push
and
and
rcr
out
and
jne
sub
cmpsb
rcll
jbe
cmpsb
jmp
mov
add
xchg
rcll
lods
xor
mov
lcall
cmpsb
fldcw
mov
lods
aas
and
fwait
adc
imul
xchg
jnp
push
jnp
es
cmpb
jmp
lret
mov
add
adc
mov
nop
jge
cmp
pop
xchg
mov
dec
pop
sbb
jns
in
push
cli
out
sbb
sahf
jae
das
pop
add
or
cmpsb
std
cmpsb
jmp
mov
popa
sbb
mov
inc
pop
jno
sub
push
mov
jle
out
mov
or
mov
or
hlt
cmp
inc
sub
arpl
pushf
cmp
mov
adcb
cs
cld
icebp
and
push
stos
mov
dec
mov
jne
stos
and
pop
lods
lcall
sub
xchg
mov
jnp
inc
xlat
and
imul
pop
mov
cli
jl
fcoml
lods
dec
cmpb
push
inc
in
rorl
int3
or
xor
pop
int3
out
dec
test
mov
daa
xchg
loop
shl
out
les
mov
cmpsb
cld
mov
pop
enter
mov
dec
inc
cltd
data16
mov
das
dec
cmpsb
das
pop
insl
xlat
repnz
nop
call
testb
fnstsw
gs
in
xor
push
sbbb
lret
dec
out
inc
adc
mov
arpl
outsb
enter
cltd
orb
and
das
fidivl
mov
xchg
and
in
cmpsb
ds
push
in
push
out
pop
push
insl
inc
shll
movsl
lret
subb
pop
je
pop
adc
and
push
xor
mov
inc
xchg
sub
mov
js
mov
ret
push
ret
sub
sahf
mov
mov
mov
imul
mov
lds
jmp
fwait
in
fmuls
fcoms
outsl
sbb
mov
shl
pop
fdivs
addr16
mov
dec
leave
repnz
and
add
aas
out
aam
cmove
cmpsb
jp
leave
jae
outsb
inc
push
pop
mov
cmp
inc
in
call
leave
ret
xchg
jmp
xor
cmp
fsubl
cmp
mov
divb
iret
or
inc
mov
roll
cmpsl
mov
inc
mov
shl
hlt
cmp
add
sub
loopne
in
mov
cmp
sbb
mov
orl
cmp
movb
test
outsl
iret
paddusw
ja
std
sub
in
mov
inc
push
cmp
xlat
mov
mov
imul
pop
sahf
sbb
xor
xor
jecxz
daa
scas
out
adc
add
mov
stos
xor
adc
and
sbb
or
pop
out
cli
xor
pop
repnz
mov
xor
jbe
pop
and
and
jae
jnp
adc
push
cmpsb
loopne
ljmp
jmp
pop
cmp
out
fnsave
outsl
in
mov
cmpsl
mov
inc
mov
roll
cmpsl
mov
pusha
xchg
daa
xor
lret
and
bound
mov
pop
andl
inc
or
sub
or
xchg
stos
add
int3
jmp
rorl
cmp
and
dec
mov
insl
cmp
xor
data16
cmpsl
jp
xchg
xor
aas
repz
sbb
lret
sbb
mov
sbb
jno
lds
xchg
loopne
aas
ret
inc
mov
sbb
lock
add
mulb
loop
push
and
inc
sti
lods
roll
cmpsl
mov
and
sahf
sti
sub
mov
mov
roll
cmpsl
mov
inc
mov
roll
cmpsl
mov
inc
mov
roll
cmpsl
mov
inc
mov
shll
dec
fcomps
mov
roll
cmpsl
mov
lret
sbb
fsubrp
imul
out
pop
stc
outsl
push
or
cmpsl
mov
pop
or
sub
es
stos
mov
fstps
push
fimuls
add
xchg
inc
sti
lods
sar
in
or
idivb
pop
mov
inc
and
push
push
sahf
inc
sub
stc
xchg
mov
rcrl
dec
jmp
stos
inc
mov
roll
cmpsl
mov
inc
mov
roll
cmpsl
mov
inc
mov
roll
cmpsl
mov
inc
mov
roll
cmpsl
mov
inc
mov
roll
cmpsl
mov
inc
mov
roll
cmpsl
mov
inc
mov
roll
cmpsl
mov
inc
mov
roll
cmpsl
mov
inc
mov
roll
cmpsl
mov
inc
mov
roll
cmpsl
mov
inc
mov
roll
cmpsl
mov
inc
mov
roll
cmpsl
mov
inc
mov
roll
cmpsl
mov
inc
mov
roll
cmpsl
mov
inc
mov
roll
cmpsl
mov
inc
mov
roll
cmpsl
mov
inc
mov
roll
cmpsl
mov
inc
mov
roll
cmpsl
mov
inc
mov
roll
cmpsl
mov
inc
mov
roll
cmpsl
mov
inc
mov
roll
cmpsl
mov
inc
mov
rcll
jae
mov
mov
sbb
jae
xor
icebp
aam
les
and
scas
push
mov
mov
cs
push
jecxz
decl
mov
mov
or
add
mov
in
xor
imul
stc
push
add
jmp
or
fldl
lds
nop
es
push
dec
adc
sbb
sub
gs
push
outsl
pop
ljmp
xchg
mov
add
arpl
es
xor
ret
adc
inc
iret
sub
ds
cmp
mov
xchg
sub
repnz
lods
push
mov
pop
or
insb
dec
lods
fcmovne
imul
push
adc
push
mov
fsub
or
adc
fwait
loope
jno
jno
fnsave
add
arpl
addr16
inc
push
sti
nop
ja
mov
mov
mov
fistps
aas
xchg
mov
push
jbe
add
fcompl
int3
popa
push
cwtl
dec
jecxz
mov
out
fs
xor
cmp
or
lds
fs
je
in
sbb
push
clc
lds
add
pop
int3
inc
add
shrb
stc
dec
push
imul
cmp
add
out
ret
ret
add
add
sbb
adcb
cmc
sbb
aam
push
add
shrl
sbb
xor
sahf
int3
cpuid
repz
lea
insl
es
mov
clc
aas
cmp
cmp
or
lock
mov
int3
scas
and
clc
fcompl
mov
das
scas
or
cmp
rcll
mov
lea
inc
in
scas
stc
leave
push
mov
inc
dec
adc
out
pop
loopne
pop
in
xchg
cli
mov
lahf
andl
cs
push
mov
in
lods
fistpl
test
dec
inc
dec
lods
shrl
inc
mov
adc
sub
or
mov
mov
lret
adc
or
stos
in
adc
clc
xchg
mull
xlat
rolb
sub
int3
in
and
xchg
fwait
and
clc
aad
xchg
push
xor
int
pop
dec
daa
mov
push
mov
iret
aam
and
lds
add
push
pop
jle
out
push
jl
movsb
into
int3
out
into
fstl
ja
aas
flds
pop
mov
mov
adc
xchg
idivb
sbb
es
mov
orb
jns
adc
es
xchg
mov
imul
std
push
sbb
cwtl
add
adc
push
loopne
cwtl
sub
fldl
xor
cmp
inc
xlat
add
xor
push
testl
push
dec
jl
or
scas
repz
dec
add
outsb
ljmp
enter
pop
sbb
test
test
adc
rcl
inc
jmp
cld
inc
xor
xor
cmp
in
inc
test
outsl
sub
js
push
jns
dec
lcall
adc
iret
and
pusha
xlat
add
mov
xchg
and
push
or
lock
and
and
je
fwait
push
in
push
jbe
pushf
fcmovnbe
push
add
cmp
sub
adc
out
and
xchg
xchg
mov
dec
mov
mov
fnstcw
pop
pop
pop
arpl
jle,pt
push
dec
cs
xchg
sub
mov
inc
lcall
mov
and
cmp
sub
or
push
cmp
pop
adc
cmpsl
addr16
mov
push
pop
repnz
test
pop
sbb
popa
pop
mov
ja
mov
mov
inc
inc
mov
push
mov
ljmp
mov
call
test
stos
pop
out
mov
imul
inc
jg
incl
jnp
mov
negb
movsl
fmull
dec
shl
pop
adc
or
test
outsl
xor
cli
cmp
repz
mov
cmp
mov
lods
adc
pop
inc
lds
inc
fwait
les
mov
jg
cmp
in
cmpsb
xchg
pop
pop
mov
sub
pop
ds
push
push
jecxz
stc
mov
leave
sub
push
cmpsb
cmpsb
xchg
jg
cmp
add
cmp
lret
dec
iret
leave
mov
nop
xchg
mov
imul
cmp
test
int3
lea
test
jle
dec
mov
movups
add
mov
dec
push
and
cmp
pop
push
leave
cmp
and
dec
mov
incl
addr16
in
call
aaa
mov
pop
sahf
cmp
jl
sbb
xchg
jle
or
insb
mov
ja
mov
aad
add
movsl
into
arpl
loopne
sub
cmp
icebp
sbb
int
mov
test
idiv
adcb
in
in
mov
cmp
imul
mov
movsl
inc
cld
xchg
mov
mov
in
push
jg
stos
shr
iret
mov
sub
ja
xor
test
repz
aas
mov
mov
insb
pop
jecxz
cltd
sbb
aad
mov
inc
std
ljmp
int3
les
xor
jl
jnp
jno
int3
inc
cli
out
mov
jle
insb
mov
pop
loop
ud0
mov
shlb
mov
adc
push
adc
push
loope
xchg
test
jns
sbbb
sub
call
pusha
adc
cmp
test
test
inc
clc
mov
fstps
adc
xchg
push
jl
inc
inc
leave
out
cltd
test
das
pop
or
xor
js
adc
outsb
dec
mov
setge
and
jb
sbb
adc
pop
xchg
sub
xchg
popa
gs
sbb
fimull
push
inc
inc
lret
iret
mov
mov
pop
sbb
or
fadds
mov
mov
mov
jecxz
in
dec
lret
fld
cli
sbb
stos
jmp
mov
jo
call
das
add
jne
xchg
mov
je
iret
adc
leave
sbb
push
inc
push
mov
bound
ret
lea
aad
jle
dec
subb
fs
and
in
push
out
popa
lods
daa
into
push
inc
inc
dec
fstpt
jne
pusha
xchg
or
movswl
jae
jns
ror
dec
mov
or
idivb
xchg
or
xor
inc
jge
fistps
mov
jnp
adc
jae
mov
sti
and
cmp
fwait
int3
mov
stos
xchg
je
fdivrl
cmpsb
ret
cmc
nop
popa
jnp
int3
lock
mov
jge
mov
out
jmp
shlb
scas
push
dec
orb
cmp
sbb
jmp
lds
cmc
cmp
mov
pushl
gs
loop
jno
cmp
dec
popf
nop
lahf
dec
cmpl
leave
cwtl
add
sbb
and
jmp
push
mov
mov
inc
sbb
fildll
jecxz
out
push
jg
les
scas
subl
iret
dec
mov
lea
or
inc
cmp
mov
aad
mov
mov
repnz
and
sahf
in
mov
aam
lahf
daa
xchg
sub
jecxz
dec
cmp
xor
sub
lret
ficomps
stc
jg
pop
cld
jbe
decb
jle
jns
cs
arpl
cld
xor
popa
lret
shrb
push
ret
adc
imul
inc
inc
ja
adc
dec
mov
mov
subl
mov
add
pop
rorl
pop
push
pop
add
mov
add
cs
jg
stos
gs
das
fidivs
lock
mov
push
cwtl
pop
and
nop
jbe
imul
stos
mov
gs
xchg
inc
jmp
mov
push
xchg
nop
mov
pushf
pop
mov
pop
repz
int3
jns
or
shlb
aaa
iret
mov
mov
sbb
mov
cwtl
js
push
cwtl
mov
mov
repnz
test
pop
ret
aaa
das
xor
cmp
aam
adc
rcll
movsb
sbb
pop
push
inc
push
ljmp
push
mov
cwtl
into
repnz
xor
jg
aad
push
xchg
pop
cmpsb
push
aad
and
cmpl
push
mov
pop
mov
push
cmp
fistl
sti
push
sbb
or
fnstcw
ret
fwait
jne
push
gs
iret
ficoms
das
push
xchg
ret
xor
sbbl
xorl
addb
sahf
or
lcall
popf
fildl
daa
dec
cmp
sub
ljmp
jecxz
xor
decb
scas
sub
sbb
clc
imul
fs
xchg
add
pop
clc
pop
popa
cltd
mov
sub
fs
mov
push
adc
add
inc
inc
mov
sub
xor
or
jg
xchg
cwtl
test
xlat
cmpsl
scas
mov
aad
fnstcw
std
out
sub
int3
adc
popl
pop
ret
jns
arpl
rclb
sbb
psubsb
sub
adc
mov
pop
sbb
pop
jge
ss
fildl
loop
fidivrl
pop
fisttpl
ljmp
cli
xchg
jmp
lcall
insb
pushf
sbb
sahf
decb
cmp
pop
loop
xor
sbb
add
sbb
mov
cld
sub
js
add
aas
mov
xlat
mov
jl
jg
xlat
push
jno
mov
ja
add
inc
aas
insl
sub
test
sub
js
js
fmul
rcr
in
mov
jnp
movsb
dec
or
cld
push
fwait
mov
pop
ret
jecxz
hlt
movsb
aad
and
into
insb
sahf
movsl
data16
in
inc
and
mov
aas
shlb
xchg
scas
into
push
mov
xlat
and
adc
out
bound
scas
sbb
adc
push
jb
cmp
rcll
lahf
mov
notb
cmp
or
das
push
mov
push
pop
ljmp
iret
pop
xchg
arpl
mov
push
aad
repz
pextrw
sub
mov
sti
jnp
cmc
mov
scas
xchg
imul
js
and
or
adc
out
cmp
insl
insl
test
jge
add
mov
pop
mov
movsb
mov
sbbb
adc
lahf
mov
pop
cmpsb
movsb
in
addl
fstps
mov
push
mov
xchg
jns
lgdtl
iret
sub
loopne
mov
mov
rol
mov
xchg
and
push
pop
mov
out
sbb
push
lods
fisttps
jnp
add
jmp
repz
sub
outsl
pop
loope
mov
idivl
sbb
jp
jne
jae
sbb
sbbl
cltd
rorl
or
enter
push
mov
sti
pusha
dec
inc
mov
test
jle
leave
dec
add
mov
xor
xlat
test
sbb
in
jae,pn
test
andl
adc
mov
pop
test
adc
pop
fisubrs
imul
pop
jp
sbb
xor
addr16
xchg
or
and
inc
jbe
push
pop
adc
jno
adcl
cmpsb
fstps
sbb
or
lahf
out
and
pop
repz
test
in
dec
fdivl
mov
xchg
mov
push
mov
ds
mov
loop
mov
mov
fisttpll
sbb
xchg
imul
or
add
adc
sahf
iret
pop
push
xlat
xchg
filds
in
loop
addb
movsb
outsb
jns
mov
adc
dec
dec
dec
jb
arpl
pop
icebp
les
cs
or
test
add
xor
movsb
loopne
jp
and
lods
add
mov
cld
mov
adc
add
xchg
stos
pop
mov
rep
enter
mov
sub
push
aam
xor
xchg
or
jno
adc
pop
clc
pop
sub
out
mov
fwait
addb
ljmp
sub
fcmovnb
gs
add
jno
fildl
shl
aaa
push
cwtl
sti
sub
dec
xchg
push
ret
inc
lods
xchg
push
leave
mov
mov
or
xor
cmp
repnz
cmp
mov
ljmp
in
test
psllw
leave
jg
mov
pop
and
push
out
push
add
or
jae
les
lcall
jns
add
xor
lds
in
lret
cmpsl
sub
jne
mov
jle
push
fstpl
sub
pop
ss
sarl
ja
pop
shll
fsubrp
xchg
mov
mov
loop
xchg
loope
adc
mov
push
push
je
scas
loopne
dec
mov
loope
orb
lret
dec
repnz
mov
cmpsl
xor
cmp
and
aas
iret
jl
rcll
xor
jne
mov
or
rcr
call
push
xor
faddl
cli
das
jnp
ss
fiadds
js
jo
cmp
jno
adc
cmp
popa
fs
dec
icebp
ja
ljmp
lea
cld
movb
mov
sub
jns
dec
rep
mov
pushf
mov
nop
das
adc
int
or
mov
add
push
mov
insl
jne
jae
ss
arpl
jmp
push
pop
mov
iret
adc
pop
or
mov
dec
mov
repnz
and
mov
adc
pop
addl
push
dec
add
jno
jecxz
addl
or
sbb
into
ss
cwtl
clc
cmp
mov
adc
rcrb
cmovge
ds
pop
jle
loope
lcall
notb
je
jge
pop
pop
lret
lds
mov
adc
inc
sub
lcall
dec
iret
xor
cmpsb
jl
sbb
es
xor
imul
mov
test
shlb
test
sbb
push
xchg
sub
mov
scas
or
xor
bound
or
and
jb
xchg
arpl
inc
sbb
stc
mov
addr16
xchg
mov
je
jle
push
mov
sarb
ffreep
xchg
shr
addr16
sub
lods
stos
je
imul
loopne
rcr
adc
nop
pop
mov
adc
sahf
and
insl
pop
cmpsb
leave
popa
mov
xchg
lret
lods
pusha
subb
sbb
sbb
rsm
dec
push
push
pop
push
inc
les
and
andb
popf
or
pusha
mov
xchg
aad
out
xlat
xchg
cmpsl
fcompl
sbb
dec
sbb
cmp
lods
push
mov
and
imul
call
das
jp
dec
imul
mov
or
adc
xor
sub
insl
mov
mov
insl
icebp
sub
imul
shll
xor
int3
popa
cmp
xor
fldenv
push
jmp
sub
das
imul
jns
testl
cltd
cmp
lahf
jmp
adcl
jbe
and
cmp
pusha
adc
cli
mov
push
sti
sti
jb
jb
cmp
pop
ljmp
lahf
or
lock
adc
or
movntq
hlt
test
sbb
movsb
stos
xor
sub
inc
xchg
lahf
add
clc
mov
dec
adc
sub
mulb
in
pop
add
mov
daa
mov
push
lock
dec
cld
pop
movsl
rorl
lods
les
sub
clc
mov
xor
loope
enter
test
decb
or
and
pop
fcomip
fldenv
adc
mov
or
xor
movsb
jns
sarl
pop
pop
lret
or
out
repz
push
xchg
movhps
adc
scas
mov
dec
roll
add
xchg
dec
mov
and
call
mov
push
mov
adc
xchg
leave
mov
sub
add
mov
cli
pop
xchg
and
or
sub
xchg
or
inc
adc
daa
pop
sub
jns
insb
shlb
ja
xchg
push
or
add
or
xchg
and
mov
xchg
add
push
mov
fs
xor
pop
aas
and
mov
xor
cmp
lods
sub
sbb
repnz
ja
aad
or
mov
jae
pusha
loopne
orl
cmp
push
imul
cmpsl
test
mov
pop
add
add
aam
jns
sahf
mov
lret
cmc
jg
hlt
std
sub
cltd
pop
clc
inc
mov
test
lods
jns
xchg
hlt
insl
mov
cmp
hlt
push
xchg
jb
iret
inc
pushf
mov
sub
pop
lock
in
das
mov
mov
sub
pop
outsb
add
std
inc
xchg
dec
aas
add
and
xchg
jle
repz
xlat
das
jne
mov
sbb
fdivs
icebp
xchg
outsl
and
and
addr16
and
les
push
insl
fiadds
out
sbb
mov
les
jns
jns
and
jmp
sbb
mov
pop
dec
push
pop
pushf
dec
fistl
mov
sti
inc
dec
jg
jecxz
cmpb
outsb
nop
mov
jbe
add
mov
or
pop
sbb
mov
pop
push
pop
stos
xor
push
push
dec
fcoml
int3
mov
jmp
sbb
adc
xorb
insb
push
sub
pop
div
mov
fadds
mov
mov
sbb
mov
cmovo
loopne
and
lahf
sub
mov
stos
into
lret
jb
xchg
mov
jecxz
clc
push
fs
leave
paddsw
aad
subb
fbld
bound
and
and
adc
mov
adc
dec
loope
or
jae
and
mov
fwait
shrl
cld
pop
dec
sub
mov
xor
and
sbb
adc
es
int
loop
push
xor
mov
pop
mov
jne
insl
mov
sbb
inc
data16
sahf
or
lock
jge
aad
test
out
enter
mov
out
jg
int3
shl
bound
fsubl
outsb
jle
js
adc
dec
ss
xor
ret
pop
push
mov
sbb
xchg
mov
push
je
ret
jmp
mov
out
in
std
das
xchg
inc
ficomps
mov
dec
jnp
ret
pop
pop
cs
add
xorl
notl
cwtl
xchg
sarb
lock
push
push
insb
pop
and
stos
xor
mov
es
test
mov
andl
repz
fdivl
fdivrs
xor
inc
in
sbb
sub
bound
adc
daa
pop
pop
sub
scas
das
cmp
les
or
test
call
repnz
inc
pop
dec
add
inc
mov
ficomps
testl
pusha
cmc
popa
insl
stc
lods
push
loope
idivb
push
mov
jnp
movsl
xchg
mov
es
js
in
cltd
arpl
sbb
pop
or
aam
fisubrl
adc
sbb
hlt
ret
xchg
sti
aam
movsb
sti
add
fs
ljmp
test
xchg
fldenv
sub
dec
xchg
inc
lea
xchg
mov
dec
mov
aam
xchg
push
int3
pop
lea
ljmp
call
stc
add
repz
and
push
pop
inc
inc
dec
popf
sub
sbb
test
cmp
imul
rcrb
xlat
push
pop
dec
dec
jecxz
mov
out
pop
imulb
pop
and
test
dec
inc
ss
arpl
add
xchg
push
rcrb
xchg
or
mov
push
jns
movsl
ds
add
ljmp
out
and
mov
pop
add
loop
stos
xor
ficoml
jl
inc
cmp
loopne
push
cmp
cmp
sub
inc
popa
push
adc
mov
repz
aas
arpl
or
push
dec
xor
mov
imul
test
out
test
jge
int3
jno
jbe
xor
shr
shll
gs
ficomps
add
push
cmc
fs
jmp
scas
push
mov
icebp
sbb
movsl
outsl
stos
stos
pop
aas
jmp
push
movsb
rcrb
stos
incl
cmp
stos
dec
xchg
ja
lret
inc
xchg
jle
inc
pop
pushf
testl
sub
fcomp
xor
int
jbe
or
jle
adc
xor
je
mov
lcall
dec
icebp
adc
btc
mov
mov
imul
or
subb
push
push
cmp
adc
cmp
les
jbe
xchg
dec
sbb
sbb
nop
mov
imul
dec
pusha
push
lods
mov
shlb
nop
mov
push
pop
movsl
xchg
lcall
xor
push
movsl
xor
test
fldl2t
sub
xchg
in
push
ds
cli
cld
mov
into
mov
js
mov
je
sbb
imul
pop
bound
fisttpll
jmp
leave
test
xorb
or
int
jae
pop
mov
sahf
xor
adc
cmpsl
jecxz
mov
outsb
jns
xchg
loope
in
sbb
mov
sub
lods
nop
imulb
fdivl
out
mov
into
cmp
sbb
xchg
push
inc
cmp
lods
pop
mov
imul
mov
bound
insl
inc
mov
lcall
imul
je
jbe
insb
xor
mov
stc
pop
je
dec
into
sbb
pop
cmpsl
mov
jo
xor
mov
pop
pushf
cmp
fwait
dec
push
jne
ds
outsl
push
mov
mov
cld
cmp
pop
xor
xor
mov
cmp
gs
lret
push
scas
jne
or
sarb
jb
scas
cmpsl
cmp
sahf
leave
lods
outsb
dec
or
ds
sub
adc
cwtl
jecxz
pushf
dec
je
jo
push
xchg
imul
or
pop
aas
mov
iret
xor
pop
call
add
mov
mov
dec
mov
lods
iret
fcomi
cmp
adc
sub
into
mov
or
jns
inc
jle
loop
xchg
out
ljmp
inc
mov
xchg
in
out
aad
xor
jmp
dec
out
jnp
inc
adc
push
popa
jbe
or
or
out
mov
push
cmpsl
iret
fcmovne
bound
xchg
mov
sbb
mov
pop
cmp
in
sub
mov
movsl
gs
je
push
push
in
pop
inc
jmp
dec
or
lods
nop
test
sub
daa
add
mov
in
leave
sti
lcall
xchg
mov
add
into
xchg
pop
lea
int
push
mov
sbb
xchg
and
sub
test
dec
fmulp
xchg
in
popf
mov
xchg
in
pusha
or
push
aam
mov
lock
push
jae
sti
jg
cltd
or
xchg
lahf
mov
jp
mov
arpl
jno
daa
and
shll
lcall
jne
push
or
imul
loopne
call
cmpl
cmc
ds
inc
push
lret
jle
stos
daa
filds
in
stc
cmp
subl
in
es
xchg
test
push
insb
xchg
icebp
jnp
sti
pop
orb
mov
cmp
xor
jae
adc
add
roll
jg
or
jae
jbe
jl
mov
mov
sub
lods
mov
rcl
fs
sbb
rcr
into
pop
notl
out
jge
dec
xor
dec
adc
fwait
add
cmovbe
fsub
mov
mov
mov
dec
inc
in
push
push
dec
lds
push
out
or
leave
divps
addr16
pop
mov
rcll
adc
adc
pop
sub
aad
lds
sahf
pop
movsb
lea
cli
and
or
fisubl
xchg
bound
shll
sub
xchg
ss
out
or
xchg
xor
loope
push
pushl
int3
push
shl
push
push
adc
aas
ja
lea
xchg
dec
xlat
add
add
je
adc
mov
sbb
repnz
jp
into
into
movsw
rorl
and
dec
mov
push
sub
xor
aam
cmpsb
stc
xchg
mov
sarb
xchg
pop
cmp
inc
jno
push
jno
jne
testl
roll
xor
aam
sub
out
std
ss
je
test
pop
xchg
mov
and
call
and
ror
xor
jo
sbb
and
call
cmp
addl
jo
fisubs
mov
lret
icebp
add
stc
pop
daa
int
stos
int3
push
push
scas
fucomp
xor
clc
cmp
xlat
dec
push
cmp
dec
xchg
jl
aad
xchg
jl
push
ljmp
idivl
dec
add
cmp
call
xchg
test
ss
clc
or
out
repz
subb
scas
and
or
clc
sti
fsubrs
inc
arpl
pop
and
mov
mov
out
xlat
sub
mov
xchg
aas
movsl
or
mov
lret
inc
dec
lock
cs
sub
rorb
lea
nop
add
jle
loopne
adc
mov
dec
sub
mov
ljmp
fwait
cwtl
or
inc
sahf
mov
dec
push
jbe
scas
inc
and
push
add
add
xor
popf
jns
sub
or
pop
push
lock
mov
or
sbb
sub
jnp
add
push
notb
lock
push
sbb
out
mov
shll
sub
mov
adc
jg
mov
sub
idivb
roll
push
into
or
popa
cmp
push
test
and
sub
sub
inc
cltd
int
ljmp
xchg
or
xor
lds
jmp
jno
push
add
shrb
daa
or
dec
mov
aaa
and
cld
adc
push
adc
and
les
loop
cmp
pop
icebp
cltd
push
or
js
adc
push
out
outsb
addl
cli
test
cmp
inc
add
fcomps
mov
mov
jmp
jge
mov
idivl
or
clc
nop
addb
dec
push
outsb
mov
pop
aaa
aas
pop
lock
out
adc
mov
repz
xlat
das
rcrl
sub
add
xor
dec
hlt
in
jo
jg
xchg
fwait
sbbl
push
into
or
loop
sbb
data16
jbe
sub
das
add
mov
rorb
insb
test
xor
mov
cld
push
repz
inc
dec
insb
aas
scas
cmc
call
mov
cmpsb
addr16
fwait
orb
and
adc
fs
pop
lret
pop
mov
and
mov
xchg
addr16
imull
sar
sar
mov
dec
out
js
pop
push
xchg
insb
add
sbb
and
hlt
dec
mov
mov
adc
repz
xchg
aam
dec
push
xchg
stos
inc
add
lcall
idivl
out
inc
dec
clc
icebp
xchg
stos
mov
add
mov
jno
or
iret
sbb
sbb
aam
int
lods
push
dec
sbb
sub
clc
xchg
dec
cwtl
shll
and
pop
loop
sti
mov
stos
clc
out
pop
je
js
ljmp
add
test
mov
push
insl
sbb
adc
repz
dec
jns
cmp
sub
in
ljmp
cmpsl
mov
inc
cmp
scas
cld
mov
add
jnp
inc
sarl
je
jge
adc
or
sbb
les
lods
jg
adc
das
pop
xchg
lret
jecxz
sbb
push
mov
jns
xor
mov
lret
push
pushf
dec
std
fucomi
adc
arpl
fcompl
nop
cmpsl
inc
lea
fnstcw
xor
popf
stc
inc
std
mov
addr16
ja
icebp
mov
test
push
xchg
cmp
cld
inc
cltd
cwtl
addl
lahf
aas
mov
insb
and
test
jecxz
sub
mov
cld
int3
or
mov
adcb
push
das
sub
pop
push
cmp
push
xlat
add
and
stos
icebp
mov
lock
inc
pusha
cld
aad
js
xchg
lcall
xlat
sbb
sbb
add
popa
or
cli
inc
jb
sbb
jge
mov
mov
pop
add
out
mov
lods
inc
sti
stc
in
dec
pop
mov
jae
lds
xchg
adc
xlat
sub
or
loope
xchg
data16
add
dec
rolb
jmp
incl
adc
xchg
mov
mov
incl
mov
in
or
push
pop
sbb
push
xchg
xchg
mov
into
jp
mov
cltd
mov
jne
pop
lahf
jle
cmp
sbb
xor
outsb
mov
inc
push
mov
por
in
mov
cwtl
test
inc
ret
mov
push
mov
pop
loopne
fldt
inc
outsb
jecxz
aam
sub
addr16
cmpsl
fsts
movsb
inc
in
stos
fisubs
sub
push
sub
loope
and
mov
into
cli
dec
rcrb
cltd
sahf
jno
mulps
pusha
faddp
shr
dec
ror
mov
dec
sbb
inc
add
call
jle
lods
jb,pn
out
push
das
mov
pop
shll
sub
into
sahf
js
and
shrb
push
aas
data16
mov
cld
in
add
fistps
inc
and
jecxz
cs
add
loopne
cmp
mov
push
aad
pop
mov
xchg
lods
pop
xchg
adc
inc
mov
pop
or
js
arpl
dec
inc
in
movsl
adc
push
sub
mov
push
pop
push
inc
std
jecxz
mov
xor
xchg
ljmp
inc
cmp
xchg
adc
pusha
push
inc
inc
imull
xor
adc
jl
cmpl
xchg
fisubrl
mov
repnz
sbb
data16
lcall
cs
loope
insb
jle
mov
push
popa
or
adc
hlt
into
int3
movsb
ss
andl
faddl
pop
jge
cmp
hlt
add
lcall
adc
or
test
ja
arpl
int3
adc
push
arpl
data16
sub
xlat
inc
push
ud2
je
gs
aas
xchg
mov
fwait
mov
sbb
out
lock
xchg
fnstenv
or
jmp
push
arpl
mov
lods
in
insl
push
pop
data16
lock
or
and
mov
adcb
mov
mov
inc
addr16
jl
pusha
sub
inc
fpatan
data16
shl
pop
popa
popf
or
mov
xor
iret
test
std
leave
data16
xchg
dec
xor
push
sbb
int3
sub
movsb
pop
test
pop
movsb
arpl
dec
cld
lods
dec
xchg
cmc
rolb
dec
loopne
jne
pop
or
xor
pusha
sbb
shlb
jo
movsb
cwtl
fidivs
into
jl
xor
jmp
jbe
shll
sub
outsl
or
shrl
jl
insb
lret
ds
ret
add
xchg
xor
mov
sbb
dec
pushf
out
push
testl
lahf
or
add
hlt
jae
add
in
push
inc
sbb
sbb
inc
test
aam
lret
push
inc
jl
ljmp
xchg
add
push
or
sbb
push
test
cmp
pop
lcall
dec
sahf
dec
arpl
iret
cmc
test
mov
insl
cmp
jl
and
jns
inc
lods
fidivrl
add
fsubrs
fs
jecxz
popa
inc
pop
cmpsb
rcl
ja
ret
in
and
scas
adc
cmp
xlat
incl
pop
icebp
movl
scas
pop
pop
mov
push
sbb
outsl
out
sbb
pop
xorl
popa
or
lods
leave
es
call
inc
aad
popf
adc
push
mov
arpl
aas
call
movl
adc
lods
data16
add
rcrl
scas
sti
cld
pusha
stc
push
jg
fs
xchg
xchg
jmp
push
lods
push
sub
add
lret
xorl
jmp
lcall
or
push
and
icebp
scas
push
xchg
sbb
incb
leave
pop
jp
in
and
clc
jbe
push
or
push
sub
inc
pop
loop
xchg
dec
stc
dec
out
jmp
mov
mov
ret
test
sbb
shll
mov
repz
or
es
xor
or
inc
idiv
and
aas
les
into
sub
and
imul
inc
sub
imulb
cmovge
mov
xor
xor
mov
push
mov
aam
and
inc
fcoms
xchg
mov
adcl
mov
cmpl
xchg
pushf
cmp
popa
sub
and
punpckldq
in
hlt
das
pop
push
data16
loope
sahf
pop
test
imul
cmp
and
fdivrs
or
fnsave
sub
lcall
es
ret
cmp
mov
cmp
or
cli
cmp
rorb
cmpsb
out
movsb
push
push
stc
pop
aam
and
mov
les
lods
sub
dec
jl
sbb
mov
inc
xor
daa
xor
loop
xor
outsb
inc
lods
or
int3
or
push
xlat
pop
sbb
mov
or
xlat
leave
add
push
ja
push
pop
jle
fstl
lods
div
pop
mov
mov
push
push
or
filds
pop
xor
mov
shll
rcrb
jecxz
fsubl
test
sti
cltd
bound
sub
mov
leave
fwait
push
xor
lea
insl
stc
push
repz
dec
sub
mov
lahf
jns
cs
push
inc
or
jmp
adc
stc
sbb
xchg
rcr
cmp
sub
decl
push
dec
cmp
ret
lods
xor
or
fs
out
add
or
add
pop
in
push
ja
or
jg
and
sbb
xor
mov
push
mov
scas
ds
or
lods
sub
cli
in
mov
in
cld
mov
sbb
xchg
fs
in
xchg
cli
push
cltd
std
callw
sarl
rorl
out
or
enter
int
movsb
call
jl
fistl
lock
sub
dec
pop
repz
sbb
add
mov
mov
je
gs
ret
push
push
dec
outsb
pop
adc
adc
pop
pop
mov
in
std
mov
loopne
lods
mov
mov
nop
push
fs
clc
fisttpl
push
add
loopne
xor
in
dec
sub
push
cmp
pop
mov
add
sti
arpl
mov
mov
pop
data16
in
inc
mov
andb
into
adc
add
in
dec
pop
mov
pop
and
push
adc
cld
sbbl
xchg
mov
scas
mov
in
cmp
sbb
adc
ss
and
pop
jo
adc
jnp
inc
and
cmp
out
push
push
xor
movsl
ret
adc
pop
lods
push
mov
add
xor
dec
je
pop
push
and
sbb
loope
lea
in
mov
sbb
jecxz
cld
clc
mov
ljmp
orl
arpl
pop
ljmp
jae
int
dec
cs
push
les
out
jle
jae
scas
lahf
sti
outsb
icebp
pop
pushf
cmp
and
ror
cwtl
fisubs
xor
nop
and
mov
loope
mov
or
pop
push
cmp
add
mov
or
ret
xchg
pop
fcoms
stos
nop
outsl
mov
sub
dec
and
pusha
mov
adc
xchg
loop
xor
mov
dec
push
lahf
stos
loopne
fstpl
cmp
into
add
push
xchg
gs
mov
mov
dec
lods
and
inc
or
jne
sub
adc
subl
inc
fldt
sub
ja
xchg
xchg
adc
in
pushf
pop
xchg
loopne
fadds
inc
jno
or
jnp
fisubs
test
lods
mov
into
inc
loopne
addr16
int3
or
add
clc
hlt
punpcklbw
cmpl
fistl
push
push
subl
sarl
out
jbe
rorb
std
sar
mov
inc
dec
mov
in
int
mov
mov
dec
push
cmp
sbb
fsubrl
repnz
jne
mov
cli
xlat
add
sbb
aas
aad
cmp
mov
out
pop
xor
cmp
ret
loope
xchg
std
mov
ret
push
rcll
add
imul
mov
mov
xchg
fs
jae
and
push
mov
mov
cmpsb
insb
inc
xor
jecxz
outsb
pop
cmp
int3
test
ficomps
lahf
adc
and
ret
pop
push
xlat
jmp
jne
pop
popa
fs
fiaddl
in
lea
and
fwait
ret
sub
mull
mov
movsb
shr
stos
adc
outsl
push
mov
lds
cld
mov
call
xchg
popf
iret
adc
cmpsb
add
push
in
mov
cmpsb
loopne
fbstp
jbe
js
sub
pop
mov
ss
xchg
scas
pushf
cmp
sub
in
adc
arpl
push
outsl
dec
scas
arpl
test
into
bound
inc
jb
adc
xchg
lods
xchg
adc
pop
sub
push
adcl
cld
cmc
cmp
mov
dec
add
sbb
pop
xor
sbb
cwtl
jns
shll
jnp
add
xchg
ljmp
into
icebp
push
push
inc
std
stc
mov
xchg
filds
mov
sub
out
iret
in
xchg
xor
adc
fdiv
xor
out
push
adc
pushf
xorl
add
jg
xor
inc
xchg
mov
bound
lds
cmp
mov
fdivrs
sti
xchg
sub
ljmp
mov
xor
std
mov
repz
aad
mov
dec
test
out
dec
inc
jnp
sbb
push
xchg
aam
loope
call
lea
sbb
jmp
mov
loopne
jmp
add
pushf
xor
ficoms
mov
mov
popf
jbe
dec
in
push
jmp
xchg
pop
jp
jl
lea
push
test
cmc
inc
loopne,pt
cmp
arpl
and
push
xlat
in
and
das
pop
std
in
pop
aaa
push
pop
xchg
sbb
in
jmp
mov
xchg
mov
mov
nop
test
mov
dec
into
inc
mov
lret
push
inc
add
cli
fcoml
adc
mov
mov
sbb
xlat
xchg
inc
rcrb
loopne
out
pop
sub
mov
enter
in
icebp
mov
inc
adc
out
mov
imul
fdivrp
push
lock
pop
mov
xchg
push
jle
or
rcrb
inc
std
lret
mov
jns
jmp
mov
jne
push
in
testb
imul
add
cmpsb
sahf
incl
loop
jmp
cli
mov
daa
push
notl
mov
inc
into
fbld
sahf
xchg
pusha
push
push
int
adc
add
jo
ja
mov
stos
mov
stc
xchg
mov
or
stc
sbb
lahf
outsl
mov
aam
inc
or
js
push
clc
scas
lret
jnp
sub
push
aaa
lret
lods
pop
cmp
int3
lret
out
sbb
cmpsl
and
mov
xchg
lret
jge
adc
clc
xor
mov
xchg
pop
mov
lahf
push
mov
fisttpll
sbb
jl
ss
lods
fisubrl
fnsave
insb
sub
das
filds
or
call
push
shr
fucomp
push
outsl
push
pop
sti
arpl
push
pop
bound
notb
jmp
push
xchg
movsl
and
mov
cmp
leave
and
sub
xor
repz
pushf
dec
mov
jl
jl
in
jnp
insl
push
cmp
push
pushf
pop
add
add
xchg
out
rcl
pusha
and
stc
int3
inc
outsl
xor
sub
fmull
jecxz
dec
pmaddwd
xchg
mov
int3
je
xchg
jmp
inc
fucom
test
imull
mov
stos
push
subl
into
and
push
sbb
jns
cli
cli
push
sbb
out
mov
ret
lret
pop
rol
xor
cwtl
xchg
add
inc
sbb
cmp
negl
repnz
jb
push
add
bnd
mov
push
jg
xchg
xor
iret
push
xchg
jge
fcmovbe
pop
adc
cltd
push
shlb
ss
adc
lods
pushf
sti
or
mov
pop
aas
sub
xor
loope
cmp
add
add
mov
sub
mov
popf
je
roll
ja
pop
adc
jns
ja
repz
inc
dec
mov
inc
enter
mov
in
xor
rcll
shlb
jo
and
push
test
insl
push
clc
sbb
jp
add
xor
aad
mov
lahf
xchg
lods
jle
mov
insb
lock
in
icebp
push
bound
sub
push
outsl
les
push
jno
and
inc
nop
sbb
add
dec
outsb
ror
xor
movsb
or
mov
jnp
push
mov
out
dec
add
or
cmpsb
sahf
xchg
icebp
arpl
mov
rcrb
jnp
repz
pop
aaa
xchg
fsub
rolb
fnstenv
adcb
in
sub
pop
push
cmc
inc
sbb
xchg
cmc
adc
fistpl
push
jl
xchg
repnz
cmp
out
inc
or
fsubrs
jmp
xchg
mov
fs
lcall
unpcklps
mov
mov
add
aas
sarb
imul
test
fs
xor
lahf
nop
fmuls
add
push
movsb
test
push
divb
inc
movsb
and
rcr
push
pop
jbe
lods
inc
nop
xchg
cmp
mov
fld
pop
sub
scas
test
sub
negl
push
test
addb
in
lahf
inc
xchg
mov
in
pop
testl
mov
mov
dec
add
hlt
out
scas
mov
cmpsb
and
lock
nop
jl
call
aaa
pop
mov
jecxz
xchg
jmp
adc
lods
scas
bnd
mov
cli
mov
icebp
scas
adc
ss
insl
jno
add
sbbl
popf
es
xchg
mov
push
xchg
std
icebp
mov
and
ret
shl
loope
adcb
push
das
pop
sub
pop
test
dec
int3
cs
jp
test
xor
sub
dec
outsb
fcoml
push
pop
or
jnp
jmp
xlat
mov
add
fistl
test
mov
dec
mov
xchg
jnp
add
cmp
cltd
fisubs
xor
pop
add
in
lods
loope
loop
stos
xchg
push
push
popf
shll
pop
stos
testl
mov
mov
or
xchg
xchg
push
in
sbb
in
cs
push
inc
fucomi
push
loopne
pop
inc
mov
shrl
dec
fcomp
es
test
pop
dec
mov
hlt
out
clc
test
dec
cld
or
dec
or
jle
mov
addr16
pop
lods
sahf
lock
pop
pop
adc
adc
pop
cmc
inc
pop
lret
fldcw
cmpsl
ret
sti
cmpsl
cld
mov
daa
ja
sbb
cwtl
pop
push
leave
out
and
inc
call
lahf
imul
pop
test
adc
out
out
mov
add
int
mov
dec
cmp
dec
int3
inc
enter
pop
cmp
sahf
xor
addr16
fst
movsb
dec
pusha
xchg
loopne
add
divl
stos
pop
imul
xchg
mov
mov
fstpl
mov
popf
outsl
inc
xor
sbb
lahf
push
pop
mov
cmpsb
es
out
jbe
nop
xlat
mov
lods
sbb
stos
push
add
movsb
jg
inc
mov
and
xor
mov
jp
xorl
dec
mov
fimull
push
gs
pop
test
pushf
cmp
cmp
or
dec
into
lea
push
in
decb
xchg
pop
js
repnz
and
or
insl
loopne
js
test
xor
mov
aad
pop
xor
shl
inc
rolb
stc
outsl
in
into
sbb
lahf
fucom
or
hlt
popf
xchg
fnsave
dec
outsb
cltd
fsubrs
data16
call
xchg
sub
push
sbb
xlat
stc
sahf
jg
lods
sub
cmp
sbb
sbb
mov
dec
pop
dec
push
xchg
add
dec
cwtl
in
mov
mov
inc
add
aam
insb
mov
sbb
mov
mov
pusha
outsl
jg
mov
call
cmp
mov
pop
mov
shl
lret
pop
inc
push
sub
data16
add
and
pop
pop
jmp
in
scas
xchg
hlt
xor
test
je
jecxz
into
int3
jb
test
pop
mov
add
stc
cmp
dec
and
inc
aam
cmp
enter
mov
ljmp
aad
xchg
ret
and
and
clc
out
es
adc
pop
imulb
cld
inc
out
cwtl
or
jg
stos
add
or
sahf
es
dec
std
inc
and
repnz
add
scas
jbe
imul
sub
push
pop
pcmpgtd
inc
stos
adc
and
scas
cld
sbb
cmp
pop
xrelease
push
iret
jecxz
jns
jbe
movsb
stos
and
pcmpeqw
mov
aam
outsb
stos
ficoms
push
andl
sbb
xor
xorl
add
loop
and
xor
stos
lods
cli
pop
ljmp
mov
popf
and
xor
cs
dec
outsl
inc
cs
popa
hlt
inc
mov
mov
rcll
mov
out
sub
lock
adc
dec
mov
xor
ret
repnz
xor
jne
int
or
mov
lea
movsb
in
xor
fistpll
xchg
rorl
xlat
sbbb
mov
cmp
dec
mov
xchg
mov
in
dec
icebp
mov
push
dec
xchg
pop
mov
xchg
mov
push
add
xchg
mov
jb
mov
and
xor
in
sub
iret
mov
xor
fcoms
push
cmp
int3
jae
cmp
push
jg
outsb
stos
mov
or
mov
jbe
pusha
sbb
xor
cmp
pushf
fimull
insb
inc
ret
ss
mov
mov
inc
jmp
into
inc
adc
lods
lcall
icebp
inc
dec
mov
fsts
add
cmp
mov
gs
add
push
adc
pop
xchg
scas
jno
sbb
cltd
xchg
pop
repz
adc
cwtl
mov
jecxz
iret
std
clc
pop
idivl
rorb
insl
pop
jle
jo
push
dec
mov
inc
imul
and
pop
icebp
gs
dec
or
add
and
xor
dec
das
cmp
in
popa
cmp
orl
rcrb
movsl
popa
es
pop
adc
push
sub
outsb
in
shl
clc
andb
jo
mov
loopne
jl
ds
mov
cwtl
shlb
lea
in
xchg
bound
cmpsb
or
js
sub
out
pop
jne
add
jl
ja
test
bound
mov
loop
clc
insb
fstps
call
sbb
mov
xor
xchg
lock
hlt
stos
xlat
inc
xor
int
fnstsw
jae
mov
xor
add
pop
les
push
enter
enter
inc
xor
out
xchg
add
xchg
in
push
dec
mov
ja
andb
mov
push
sub
enter
out
enter
jle
loope
jo
mov
enter
xor
outsl
mov
sub
dec
jb
cmp
sahf
lods
cwtl
out
push
xlat
jo
fwait
push
push
ret
loopne
ucomiss
adc
mov
mov
dec
enter
mov
sub
movsl
fwait
stos
xchg
lds
sub
xchg
mov
lret
je
mov
xor
xchg
pop
jns
lahf
adc
cmp
das
aam
and
in
pop
xchg
add
sarb
addr16
ljmp
mov
lcall
xor
sbb
cmp
out
insb
cmp
or
or
cmp
inc
andb
cmpsb
pop
int
push
sbb
clc
das
jne
arpl
std
ret
and
pushf
or
ljmp
push
aaa
lahf
xchg
std
push
lods
bnd
imul
jmp
xchg
and
cmp
leave
sbb
cltd
adc
cli
daa
push
ss
cmpsb
cmp
clc
daa
cltd
insb
sub
xorl
mull
cmpsb
mov
fstpt
sbb
pushf
andb
jge
cmp
ja
out
fcmovnbe
imul
fcoml
jge
fiadds
mov
mov
popa
or
fidivrl
or
cmc
fnsave
dec
lock
push
mov
js
mov
out
gs
ds
daa
bnd
mov
cli
je
jae
iret
jne
cld
add
push
cli
test
loop
test
pop
jecxz
inc
jae
push
enter
or
ss
pop
loope
xor
ret
pop
into
cmp
test
mov
push
mov
xor
xor
mov
popa
mov
in
mov
mov
pop
shl
popf
adc
lods
inc
push
sar
push
jmp
jne
int3
mov
shlb
sarb
scas
push
or
xor
cmpsb
or
and
mov
jecxz
jbe
gs
cld
mov
mov
and
lret
push
mov
inc
lret
cmp
lahf
ljmp
pop
repz
cld
cmpsl
testb
xchg
fildl
mov
mov
cltd
out
ljmp
add
mov
xor
lcall
out
dec
cmpsb
into
adc
sahf
mov
pop
xchg
sbb
dec
dec
cli
fists
push
mov
and
cmp
dec
xchg
mov
adc
pop
in
sbb
adc
pushf
add
sbb
inc
push
cli
cld
mov
cmc
std
inc
stc
test
sub
push
out
idivl
fdiv
sub
or
mov
lock
or
scas
test
and
aas
xchg
adc
enter
rorl
outsl
lods
pusha
cltd
inc
ret
mov
std
je
push
int
push
sbb
fcmovb
andnps
cli
insl
pusha
add
push
add
fs
call
jp
inc
leave
nop
data16
sti
fdiv
jp
lea
aaa
enter
int3
cwtl
add
push
in
and
out
out
pop
lods
ficoms
ret
inc
pushf
aas
mov
adc
pop
dec
or
mov
dec
lea
adc
fistpl
mov
jl
incb
out
leave
dec
test
inc
and
add
movsl
out
pop
lods
call
jmp
cmpsl
movsl
jne
pop
xor
sti
into
cmp
testb
test
mov
push
fists
insb
testb
add
decl
pushf
cltd
cli
cmp
movsb
push
or
in
fcmovnb
int3
pop
inc
jns
pop
cli
fidivl
xchg
xor
and
repnz
in
xor
mov
dec
fcomip
pop
sub
xchg
add
jp
cwtl
inc
outsb
fwait
enter
dec
and
repnz
repnz
aaa
int
andl
sti
mov
sbb
inc
or
std
fbstp
lret
mov
add
jns
pop
jg
jge
testb
mov
out
bound
scas
lcall
imul
call
aas
dec
mov
mov
aam
cmp
imul
or
cmp
imul
stos
cmp
pushf
or
insl
and
push
xchg
sbb
push
xchg
fisubl
jno
shll
lods
add
push
dec
push
clc
inc
mov
mov
jo
xchg
iret
shll
jne
mov
clc
mov
iret
jns
test
dec
nop
or
imul
xchg
push
push
cltd
aaa
inc
jmp
rorb
rcrb
cmc
push
in
sbbb
out
jae
adc
stos
inc
ja
aam
testl
mov
pop
push
rcl
sbb
push
lea
pop
test
jg
ds
dec
push
dec
insl
cs
aaa
mov
xor
xor
cmp
push
divl
add
repz
adc
xor
mov
mov
pop
push
push
pushf
fwait
jnp
repnz
gs
fisubl
pop
std
aaa
mov
ss
add
pusha
adc
adc
inc
push
push
loopne
pop
mov
das
inc
or
xchg
xor
cmp
fidivrl
mov
fistps
jmp
adc
mov
and
stc
inc
jg
xchg
je
insb
dec
std
xlat
xor
jb
outsl
int3
lret
jle
xlat
cmp
shlb
jbe
xor
imul
mov
mov
fisubl
inc
ds
cmp
movsl
and
xchg
aam
icebp
dec
sub
movl
out
jle
and
repz
pop
mov
faddl
imull
or
xchg
cld
mov
mov
jge,pn
aaa
mov
cmp
fisubs
mov
mov
and
out
add
jg
jb
jmp
xlat
xchg
mov
sahf
fsts
jmp
je
dec
xchg
mov
flds
movsl
jmp
jl
mov
sahf
inc
insl
push
shr
xor
test
aaa
test
lea
xor
cmpsb
cmpsb
mov
jecxz
mov
stos
adc
in
rcll
jbe
out
jns
jl
out
xchg
gs
lds
insb
mov
or
mov
mov
repnz
adc
leave
clc
pop
movsl
fistpl
add
adcb
sub
mov
push
xor
mov
loopne
out
add
mov
sub
imul
sub
bound
pop
repz
jmp
lcall
fucom
sbb
inc
and
int3
or
add
mov
sbb
add
aam
iret
daa
movsl
icebp
push
out
outsb
mov
jp
jecxz
pop
cmc
in
sbb
scas
cmp
and
xor
int3
clc
mov
jmp
gs
std
pop
addr16
sub
pop
push
and
iret
xchg
adc
dec
jge
fs
lds
lods
add
insl
aaa
imul
enter
shll
mov
adc
pop
popf
pop
out
je
ficompl
sbb
cmpsl
ret
into
fcmove
pop
call
sarb
push
test
cmp
xchg
out
add
mov
popf
jl
dec
sub
insb
stos
scas
pop
cmp
mov
jge
fisttpll
movsb
pushf
mov
inc
push
mov
xchg
jnp
pop
int3
push
stc
pop
pop
inc
sub
jae
or
imul
jnp
aas
adc
xchg
jno
int
mov
in
and
fwait
or
add
loopne
jl
jno
jl
xchg
and
aaa
xor
sbb
cltd
xchg
arpl
add
daa
shll
fwait
inc
adc
mov
push
aad
dec
xorl
pusha
imul
adc
test
sub
aas
lret
mov
stos
dec
divl
inc
cmp
xchg
lret
push
or
gs
loopne
push
popa
dec
pop
and
mov
ret
mov
fcomps
iret
cmp
mov
push
rcll
outsb
jno
xchg
pop
pop
mov
push
pop
les
mov
adc
sbb
xchg
lcall
int3
push
pop
iret
push
in
mov
lods
pop
xor
lret
in
jbe
cmp
push
dec
push
ljmp
lock
jns
cltd
or
shl
fcomps
test
cltd
mov
or
or
std
mov
or
aad
adc
sub
lods
lods
mov
dec
dec
pop
lcall
mov
mov
cmc
inc
or
int3
jle
popf
or
mov
addr16
add
lock
mov
fisubs
fisubrs
outsb
sarl
ds
adc
dec
nop
sbb
nop
aad
popa
cmp
sub
fidivs
and
xchg
scas
cmp
movsl
xchg
into
pop
add
in
test
gs
add
std
jmp
xor
loop
sti
cmp
fnstsw
pop
pushf
in
and
inc
cmc
cli
jmp
inc
ret
xor
mov
mov
lds
out
mov
fmull
jb
or
jle
adc
adc
and
mov
inc
push
dec
dec
cs
sbb
push
xor
sbb
fisubl
sub
xor
ss
mov
test
aam
jecxz
repz
jb
mov
in
adc
add
xor
shlb
and
js
cmovnp
rcrl
jge
mov
xor
mov
adc
mov
push
push
icebp
std
and
cmp
js
xchg
pushf
loopnew
sub
and
in
ja
sbb
leave
loopne
push
decl
dec
mov
and
aaa
mov
pop
mov
outsl
xor
gs
inc
js
inc
xchg
testl
sbb
adc
nop
aas
mov
and
dec
es
cmp
pop
jl
std
bound
dec
shll
ficoms
xlat
hlt
sub
mov
pop
mov
ljmp
pop
shlb
outsb
leave
aaa
and
lock
test
stos
lock
lods
mov
mov
inc
xor
pop
add
xchg
addr16
cmpsl
push
lods
pop
js
push
and
cmpsb
test
insl
lret
gs
mov
add
xchg
leave
mov
xor
scas
adc
inc
fldt
push
popa
loopne
daa
and
lret
xchg
xchg
xlat
stc
dec
sub
imul
in
clc
mov
push
loop
addr16
pushf
mov
push
aas
sbb
cmpsl
xchg
push
xchg
jne
inc
xor
in
addr16
fs
push
cltd
fiadds
xchg
lret
sub
sub
cmp
add
push
shlb
sub
mov
xchg
sbb
lret
insl
push
mov
loope
sub
push
mov
sbb
add
and
jno
outsb
jns
std
add
adc
cmp
push
mov
dec
mov
aaa
es
and
ds
pop
push
movhlps
mov
cmp
dec
pop
lret
adc
inc
lds
and
addr16
mov
xor
rcll
aad
or
gs
inc
int3
cmc
mov
xchg
jns
mov
inc
scas
pop
mov
add
insl
insl
mov
mov
scas
or
mov
shrl
push
xchg
mov
adc
mov
and
mov
fsubr
popf
int3
lret
cld
sub
mov
inc
pop
pop
out
dec
ss
and
orb
cmp
ret
push
imul
pop
mov
rcrb
mov
fstpt
mov
adc
xchg
iret
faddl
ja
call
pop
sahf
jne
sbb
in
aam
lret
xor
xchg
jo
jno
aad
pop
mov
pop
push
inc
cs
insb
cmp
mov
inc
pop
xchg
out
std
push
dec
push
leave
ret
nop
dec
arpl
ds
jae
mov
mov
mov
and
adc
out
cmp
pop
aad
mov
loop
mov
jne
xchg
in
addr16
imul
jns
mov
xchg
dec
lds
test
lret
or
dec
lods
sbb
lods
inc
jne
jge
outsl
mov
iret
outsb
mov
mov
repnz
or
and
pop
xlat
push
cmp
dec
rclw
pop
js
ss
push
cmpsl
push
je
inc
push
jmp
lds
addr16
stos
shrb
mov
gs
push
xor
movsl
jb
das
sub
cmp
xor
test
popf
xchg
mov
hlt
mov
rcll
shrl
xchg
out
jle
push
cwtl
mov
push
jecxz
xchg
movb
pop
std
cmc
adc
repz
push
xchg
pop
jle
jecxz
push
adc
loopne
inc
ljmp
cmpsl
mov
jecxz
push
lahf
imul
add
call
xchg
jne
sbb
movsl
inc
lods
pop
shrl
bound
dec
add
pushf
jp
pop
and
push
ror
out
jbe
or
dec
xchg
shll
mov
ljmp
je
pop
gs
pop
test
jbe
scas
testb
mull
in
xor
icebp
sbb
call
xchg
movsb
mov
enter
dec
push
ret
or
lock
jg
adc
mov
jb
mov
add
fnsave
aaa
lret
insl
mov
xchg
ljmp
or
jo
scas
in
fs
dec
cmp
cli
sbb
mov
inc
dec
adc
sub
or
pop
frstor
jno
outsb
sarl
addr16
dec
pop
jmp
outsl
jns
jns
pop
rcrl
test
aaa
cmp
mov
xchg
mov
out
xlat
aas
lds
adc
mov
aad
testl
fcomi
push
push
mov
or
pop
cmp
cmpsl
scas
filds
mov
dec
ror
push
jo
bound
cmp
dec
cwtl
push
and
jecxz
cmpsl
adc
mov
test
hlt
add
stc
dec
pop
jae
cld
in
and
adc
loope
sub
into
push
dec
cmpsl
mov
cmp
fld1
mov
cmp
loopne
mov
jnp
and
into
push
adc
xlat
test
jno
out
aam
adc
loopne
push
mov
insb
and
xor
sub
rcll
out
jo
cwtl
inc
sti
xor
mov
add
outsl
out
sti
xchg
xchg
lods
jb
mov
je
stos
xor
cmpl
pop
outsl
cmc
mov
pop
sub
pop
or
pop
cmc
jnp
lcall
xor
mov
add
stc
fisubrs
fsubr
mov
cltd
mov
cmpsb
int
xlat
lret
dec
mov
mov
cmp
xchg
aam
scas
cmp
push
mov
jae
xor
into
dec
mov
in
lcall
orb
sub
push
ljmp
mov
jns
js
cmp
xor
sub
jns
in
rcrl
adc
ljmp
pop
jmp
cld
cld
loop
data16
sub
ss
fsubs
sarl
jne
mov
cmp
aad
pop
pop
in
pop
and
movsb
mov
js
das
mov
dec
pop
mov
and
dec
sti
or
scas
cli
inc
xor
nop
mov
jns
stos
mov
roll
and
xor
cld
imul
inc
rolb
insb
sbbb
mov
push
gs
xchg
jae
sbb
mov
mov
pop
mov
mov
sbb
movsb
das
lods
and
cli
inc
xchg
add
xchg
pop
repz
xchg
push
pop
fsub
jecxz
cli
ror
sbb
jno
xorb
popl
ret
loopne
ds
stc
sub
les
cmpsb
pop
xchg
mov
cmp
cs
cmc
pop
jge
cmp
push
shll
mov
stos
pusha
sbb
dec
fists
mov
push
push
int
or
adc
into
test
xor
xor
out
daa
hlt
icebp
mov
gs
push
adcl
sub
cmp
sbb
dec
push
not
jns
fisttps
sti
xchg
cmp
pusha
cli
push
addr16
int3
lods
xlat
fucomip
adc
outsb
pop
adc
push
mov
and
lret
dec
aaa
movsl
sti
repnz
xchg
fcompl
inc
mov
cmpsb
orl
js
cmp
xor
sti
cmp
enter
dec
aad
xor
jae
ss
mov
or
popa
out
inc
popl
or
xchg
push
push
xchg
push
int
xchg
jae
ljmp
and
call
cmpsl
jno
cmpsb
jb
xchg
add
outsl
inc
adc
loope
mov
pop
and
mov
in
adc
js
and
dec
jmp
cltd
repnz
stos
in
dec
mov
rorb
cltd
cwtl
sbb
push
loopne
jmp
mov
adc
out
in
fnsave
or
mov
movsl
pop
bound
cld
inc
inc
test
adc
outsb
cli
adc
xchg
imul
jns
aad
push
push
imul
inc
mov
sbb
add
imul
jae
out
nop
sahf
xor
cmp
test
test
jmp
fcmovbe
jne
nop
mov
sbb
jae
jp
inc
daa
xlat
xchg
mov
sbb
ljmp
or
push
sbb
jnp
mov
in
imul
and
lret
in
add
jecxz
adcb
lret
mov
mov
xchg
stos
es
push
xor
add
fcmovu
sub
insb
adc
fmuls
test
dec
aad
or
sbb
jmp
jp
ss
fwait
lds
fucomi
push
insl
pop
xchg
mov
insl
inc
divl
mov
pop
inc
push
clc
mov
shll
jp
push
inc
icebp
mov
out
aam
shll
sahf
cld
into
lds
cli
movsl
pop
dec
jne
pusha
jp
lds
fsubl
rol
shll
push
push
add
roll
cmpsl
addr16
or
out
push
xor
cmp
test
inc
ljmp
pop
pop
int3
out
lahf
pop
xlat
add
rorb
mov
or
add
mov
cli
cmp
pusha
and
mov
mov
bound
gs
jecxz
adc
lcall
or
ret
inc
xchg
mov
stos
jg,pt
cld
popf
xor
sbb
sub
sub
fiaddl
mov
jbe
jb
sub
cmp
sbb
mov
mov
xchg
arpl
jnp
jo
and
out
adcl
push
pushf
mov
or
sahf
lock
fiaddl
iret
pop
mov
das
xchg
sarb
das
in
shrl
mov
mov
sub
adc
xlat
inc
nop
jnp
movsb
pop
imul
data16
push
pop
stc
jb
cmpsl
shrb
mov
add
mov
xor
xlat
popa
call
cmp
popl
push
sbb
push
adc
push
pop
push
xlat
fisubrl
jno
out
push
test
push
scas
int
into
rol
ja
xorb
inc
rclb
inc
pop
mov
lcall
sub
mov
jp,pn
ja
xlat
hlt
xlat
stos
push
mov
xor
mov
and
into
jge
xchg
inc
int3
dec
dec
sbb
jge
dec
xor
test
push
fwait
repnz
inc
xchg
xchg
clc
push
pop
fisubs
sub
dec
pusha
sub
ret
mov
fistps
xor
stc
jl
arpl
jno
addr16
mov
push
fstps
cmp
mov
into
out
jp
in
arpl
clc
push
fidivs
movb
lret
dec
jge
rcl
jmp
popa
out
xor
adc
push
jo
mov
jle
stos
mov
mov
stos
arpl
jns
insb
div
pushf
addr16
inc
sbbl
test
xor
xor
out
xor
push
hlt
cmp
sbb
mov
xchg
add
pop
mov
cmp
push
xlat
mov
and
pop
pop
int
sti
out
stos
add
fwait
and
jge
mov
pop
insl
or
mov
mov
mov
andl
cmp
out
dec
mov
lods
xor
iret
loopne
pop
ret
lahf
pop
fs
or
arpl
pop
aas
jmp
pushf
push
cmc
add
sbb
add
cli
xchg
pop
xchg
push
inc
pop
pop
negb
add
idivb
mov
xchg
and
mul
sbb
popf
push
xchg
dec
leave
push
dec
and
pavgb
aas
xlat
repnz
jne
jno
push
inc
lea
insl
mov
je
cwtl
fstl
mov
divb
sbb
cwtl
mov
jnp
adc
pop
cltd
mulb
movsl
dec
and
cltd
jae
rep
mov
sub
in
rorl
xchg
ret
jnp
push
add
inc
add
loop
mov
adc
dec
push
das
sarl
sub
jge
loop
nop
mov
js
cwtl
vdivsd
out
int3
stc
stos
loopne
xchg
rcrb
cmp
mov
outsl
pop
notb
add
mov
out
and
mov
ret
icebp
inc
outsb
jns
or
xchg
dec
xchg
pop
and
sarb
or
add
stc
xchg
daa
int
jo
fs
and
sbb
mov
repz
inc
push
daa
or
mov
test
jg
inc
movsl
bound
ss
ficompl
jnp
mov
divb
in
mov
fldenv
out
aaa
dec
in
sbb
mov
frstor
mov
add
dec
sub
xchg
insl
nop
xor
sub
push
movsl
lds
lea
sbb
jmp
cmc
push
rorl
lea
cmc
shll
pop
push
xchg
std
dec
in
cmp
add
mov
xchg
rol
xor
pop
lcall
sar
push
or
ss
xor
jmp
out
inc
ljmp
and
mov
jle
clc
xchg
or
stos
into
orb
jmp
mov
mov
jbe
cltd
js
inc
fs
mov
outsl
adcl
mov
sbb
or
jbe
cmp
pushf
leave
sbb
psubusb
insl
stos
in
push
orl
test
push
pop
shll
mov
or
pop
roll
pop
push
cwtl
outsl
xor
fcoml
shlb
shr
dec
in
jg
fiaddl
popa
ljmp
scas
mov
dec
adc
pop
inc
imul
and
and
or
pop
iret
xchg
push
pop
dec
push
xchg
leave
pop
mov
mov
pop
pusha
adc
adc
pop
jno
shll
mov
pop
inc
inc
cmc
in
les
rcl
or
sub
fdivl
fmul
add
scas
push
shrl
sbb
add
xchg
movsb
mov
js
inc
inc
dec
mov
fisttpll
push
xchg
ljmp
pop
mov
push
push
hlt
pop
shl
repz
stos
setbe
or
jg
gs
stos
adc
fwait
ljmp
cwtl
mov
ret
add
cli
pop
cld
out
dec
lret
pop
sub
outsb
push
and
mov
lods
or
add
pop
outsl
sbb
mov
test
push
xchg
sbb
cmp
out
pop
cmpsb
jg
add
or
hlt
call
sbb
mov
cld
pusha
cs
jno
shll
outsl
lods
cltd
sub
jne
idiv
sbb
cmp
push
pop
pop
or
dec
xchg
sub
push
inc
aas
xor
lods
push
arpl
and
adc
sbb
push
or
pop
xor
jbe
gs
cmc
pop
popf
mov
sbb
inc
cmpsl
cld
ss
stc
popf
sub
cltd
test
sbbl
jmp
sub
pop
or
imul
jecxz
movsb
lods
addb
fcmovnbe
mov
shlb
fdivrl
lret
mov
add
stos
aaa
inc
daa
testb
cltd
pop
ret
ror
add
imul
in
cmp
lret
jbe
out
pusha
xchg
pop
dec
cmp
nop
dec
movsb
sti
mov
ret
mov
push
cmp
or
mov
dec
mov
jb
xchg
fistl
cmp
and
sbb
dec
pop
mov
inc
je
xor
jmp
js
repnz
mov
int3
adc
stos
pop
xchg
cmp
xchg
inc
lret
pop
loop
sarl
clc
lret
daa
inc
jb
or
lods
adc
outsl
mov
jge
xchg
lods
pop
mov
and
and
and
inc
inc
je
stc
rorl
mov
jbe
and
push
js
jmp
lret
add
push
cmp
andl
out
add
rol
jne
test
xchg
out
outsl
inc
scas
jge
aas
and
jno
sub
sbb
cs
mov
test
or
sub
pop
idivb
mov
fnstcw
shlb
or
pop
std
sarl
mov
sti
divl
push
scas
mov
push
fiaddl
hlt
push
cmp
pop
jbe
loopew
cmp
je
jb
mov
orb
add
jo
fnsave
push
lret
leave
xchg
stc
pusha
gs
mov
nop
mov
mov
pop
mov
sub
push
and
testl
pop
cmp
add
out
cmp
aas
mov
dec
popa
or
xchg
shrb
ret
cmp
or
into
je
pop
scas
sub
adc
out
fstpt
insb
sub
add
push
jecxz
ret
mov
test
mov
outsb
sahf
sub
sub
push
movsl
mov
pop
inc
jle
cmc
dec
in
gs
mov
pop
outsb
add
jl
or
push
and
outsl
dec
add
clc
jno
dec
imul
cmp
ret
std
push
fdivrl
insl
pop
pop
lods
bswap
mov
jnp
inc
push
sarl
mov
aaa
push
lds
fdivl
sub
inc
imul
jne
mov
movsb
adcb
sub
fs
in
int3
pop
lret
lods
xor
xchg
push
aad
ret
enter
clc
rcrl
inc
pop
jne
dec
into
xlat
jmp
repz
mov
aad
cli
mov
popf
mov
mov
inc
les
mov
lock
cmpsb
adc
jge
int
loope
sbb
iret
jns
mov
fnstenv
js
xchg
lret
lea
punpckhwd
adc
pop
or
popa
adc
jns
stc
push
std
cli
jbe
pusha
dec
or
inc
rcrb
fdivs
jmp
xchg
cmp
inc
ret
xchg
ss
gs
adc
push
dec
add
or
and
sub
cs
inc
lea
fs
sub
adc
in
fbstp
mov
xor
dec
jns
in
nop
fistps
mov
and
mov
xor
aam
add
mov
pushf
jbe
mov
xlat
jge
int
xchg
jns
or
repnz
ljmp
mov
mov
dec
pusha
jp
enter
aas
leave
sti
or
and
leave
fists
inc
ja
ljmp
mov
or
mov
out
sbb
adc
fistl
mov
popa
sbb
test
iret
push
fistpl
jb
outsw
lret
rol
adc
sub
mov
fidivl
lods
pop
fnsave
mov
fidivrl
sets
scas
jnp
dec
call
dec
pop
int
jecxz
jl
rclb
jo
mov
xor
gs
push
clc
dec
adc
lret
fildl
xlat
adc
mov
cmp
sahf
mov
mov
fnsave
cmp
aam
push
test
cmp
jmp
jae
mov
lods
cmp
jg
mov
addr16
lcall
cmp
inc
mov
and
pop
push
subl
xor
sbb
jp
pop
xor
aas
loopne
hlt
pushf
lcall
leave
loopne
mov
xchg
lods
outsl
repnz
xchg
jo
out
inc
enter
call
push
lret
fiadds
mov
pushf
movsb
mov
test
xchg
mov
mov
lds
cmp
jae
mov
and
mov
mov
push
xchg
icebp
or
sarb
mov
cmp
inc
mov
pop
mov
in
js
mov
fcompl
xchg
jg
bound
out
xor
pop
lods
mov
add
and
lds
add
stos
cmp
mov
ret
enter
addb
mov
push
or
sahf
fs
inc
jecxz
mov
and
xchg
sti
int3
mov
in
sbb
out
xor
lods
mov
nop
push
inc
cmpsb
sub
lock
or
pop
shll
movsl
test
push
or
jg
insl
add
or
jns
enter
and
jmp
imul
lods
into
ja
cld
nop
dec
push
dec
scas
xor
arpl
in
rolb
dec
data16
pushf
sbb
decb
xor
push
in
mov
scas
mov
jne
aas
jno
cltd
inc
mov
mov
std
f2xm1
pop
je
icebp
add
rol
fldl
les
pop
in
pusha
inc
insl
xlat
jmp
jg
into
sbb
dec
jae
arpl
std
lahf
movsb
mov
mov
mov
enter
dec
xchg
loope
and
mov
mov
std
outsl
fnclex
or
fs
sub
jle
mov
jo
jb
inc
and
jl
aam
dec
push
sarb
inc
fnsave
sbb
shlb
sbb
lea
enter
das
or
popf
mov
sti
xchg
pop
sbb
shlb
scas
shrb
push
scas
push
xchg
mov
aad
scas
dec
sbb
int
adc
add
fiaddl
push
dec
xchg
add
sbb
dec
jo
mov
stos
cli
aam
xor
inc
xor
cld
lret
repz
bound
sarb
mov
loope
cmp
mov
popf
or
pop
es
jns
inc
sub
or
pop
js
aad
xchg
sub
mov
js
mov
push
adc
mov
mov
stos
mulb
arpl
js
out
aad
xlat
jae
adcl
hlt
subb
lret
jns
inc
clc
loop
test
jb
push
pop
xchg
pushf
pusha
pop
mov
sub
sbb
rcrl
pop
int3
popa
xorb
decb
xchg
mov
jecxz
push
bound
xchg
dec
add
fs
jnp
and
int3
or
pusha
mov
inc
cmp
cs
pop
repnz
fbld
out
cmc
push
std
dec
pushf
adc
pop
fmuls
in
aad
adc
lods
mov
jno
popf
mov
outsl
add
clc
pop
xor
in
insb
push
aad
fldl
xor
sub
inc
push
daa
hlt
int3
adc
test
xchg
stos
sti
iret
pop
jl
mov
cmc
add
aad
es
iret
in
repz
in
popa
sub
xor
pop
enter
call
adc
fimull
sbb
push
adc
jb
sub
aaa
xchg
out
cmp
push
push
xlat
pop
add
push
sti
clc
jle
movsb
aas
jns
lds
clc
les
cmc
imul
dec
fld
sahf
loopne
loope
popa
in
pop
stos
insb
ljmp
or
mov
cmp
pop
cli
es
popf
lods
stc
loope
popa
testl
cmp
or
bound
into
das
cmp
push
pop
fstps
cmp
dec
cltd
mov
mov
cmp
outsl
rcrl
sub
scas
je
cld
jno
lods
xor
sub
call
ficoml
mov
push
std
jnp
xor
bound
insb
mov
xchg
stos
sbb
jbe
in
in
xchg
cmp
je
aad
ds
mov
sahf
icebp
roll
jg
cwtl
adc
mov
ljmp
adc
sub
lahf
popf
and
stos
xchg
mov
or
dec
xchg
push
shll
sarb
repnz
jge
sub
ss
xor
pop
jle
bound
and
imul
add
ljmp
mov
push
xchg
pop
jl
mov
sbb
mov
repnz
sub
add
or
mov
sbb
ljmp
sbb
cli
cmp
cltd
test
mov
xor
repnz
push
jmp
mov
scas
pop
inc
cmp
cmp
push
bnd
push
loopne
xchg
and
and
mov
lods
mov
into
arpl
jecxz
mov
aas
lret
stos
icebp
sbb
fstpl
mov
out
inc
outsl
cmp
popa
push
and
dec
mov
sub
je
sbb
add
cmpsb
add
lahf
lea
jno
sub
test
fstpt
or
pop
inc
stos
idivl
pop
mov
leave
clc
dec
jae
push
xlat
icebp
dec
lret
jae
jne
cmp
pusha
aaa
test
sti
sub
lahf
inc
lods
xor
and
out
jp
cmp
sbb
arpl
jp
sub
aad
or
cmp
push
push
cmp
and
push
xor
mov
jmp
ss
dec
mov
js
lret
jns
cmp
int3
in
mov
ja
mov
pop
mov
adcl
mov
xchg
jg
adc
or
pusha
test
adc
mov
mov
pop
adc
inc
inc
mov
out
data16
fistpll
sbb
test
sbb
jl
mov
dec
xor
sahf
xor
push
push
loopne
popa
pop
pop
push
idivl
mov
and
mov
mov
sub
mov
push
jae
insb
sbb
dec
inc
mov
xor
clc
sbb
xor
mov
cmpsb
push
or
mov
shll
xor
pop
mov
xor
pop
push
std
dec
test
and
pop
pop
fnstcw
push
add
int3
mov
dec
dec
mov
lea
outsl
inc
cltd
arpl
pop
cmpsb
push
pusha
cmp
and
mov
pop
jns
mov
loop
mov
aaa
fidivrl
data16
xorb
ljmp
xorl
dec
and
stos
fadd
sbb
mov
dec
jp
bound
pushf
clc
add
pop
inc
jbe
xor
loopne
scas
mov
mov
cmc
in
out
or
push
popa
out
lds
cltd
mov
neg
pop
fucomi
jbe
loop
mov
sbb
icebp
les
xor
loopne
scas
jb
pandn
pop
adc
testb
daa
sahf
cmp
out
lcall
mov
enter
fldt
pop
test
pop
mov
stos
lds
jecxz
xchg
lock
outsb
hlt
das
push
leave
xor
enter
iret
lods
testl
pop
inc
sub
enter
cmp
or
jg
loopne
and
jle
cwtl
pushf
sub
jecxz
aad
repz
add
pop
jl
icebp
dec
lret
mov
scas
out
push
in
daa
and
lock
or
mov
call
mov
add
outsb
clc
jns
adc
jecxz
mov
mov
popa
fldenv
xor
xchg
push
aas
add
dec
push
cltd
js
cmp
int
dec
jp
call
stos
mov
out
xchg
cwtl
sbb
movsl
dec
popf
push
rorb
adc
adc
stos
imul
rolb
jge
xchg
inc
adc
mov
pop
push
push
addr16
pop
in
sub
scas
jbe
sub
out
add
mov
mov
in
mov
outsb
push
add
negb
sbb
inc
lods
adc
fucomip
sub
push
cmp
adcl
sbb
in
iret
es
sub
sub
call
mov
pop
push
loopne
cmpsl
jge
rol
pop
mov
int
push
mov
repz
fsubrs
hlt
int
mov
mov
pop
sub
lret
ljmp
inc
rolb
vshufpd
fcoms
dec
push
xchg
jmp
stos
dec
sub
dec
or
cmp
inc
push
bound
addr16
inc
jge
stos
inc
lret
ds
dec
movsl
repnz
fwait
pop
and
inc
adc
out
lea
sbb
daa
xchg
inc
mov
mov
add
mov
ret
aam
out
mov
shl
cmp
mov
push
or
shlb
cmc
loopne,pt
jnp
lds
add
xchg
lods
sub
or
lds
xor
les
cs
notl
or
mov
test
das
mov
lcall
sbb
or
inc
call
xchg
les
lahf
add
data16
add
lea
outsb
jo
das
mov
push
cmpl
out
push
clc
mov
push
mov
sahf
int
jno
adcl
mov
mov
fs
seta
xlat
divb
movl
fstps
mov
rol
sbbb
stos
leave
push
push
scas
push
test
mov
ret
ds
push
add
mov
outsl
cltd
jle
out
lcall
loop
mov
sti
sbb
xor
xor
scas
outsl
in
jo
mov
adc
test
std
fldt
lock
stc
pusha
lret
fstl
or
test
jl
xchg
xlat
push
cmp
call
pop
cltd
inc
rolb
xor
dec
push
mov
xor
fbld
rcrb
push
out
jb
in
std
xchg
movsl
push
and
into
ret
push
cmp
jae
sahf
addr16
inc
daa
push
and
xor
push
cmp
shl
leave
cmp
daa
pop
lods
ret
inc
add
and
sti
push
mov
movb
out
inc
test
jecxz
adc
mov
stos
mov
fidivrl
jg
lock
dec
mov
add
adc
mov
adc
lods
mov
stc
cmp
leave
rorl
lods
and
movsb
stos
loop
fdivrs
adc
repz
mov
cwtl
in
mov
push
push
les
inc
adc
xchg
pop
add
jecxz
int
cmpsl
cld
jbe
jmp
or
sar
jp
jnp
int
rcl
lret
xor
mov
loop
out
in
mov
stc
int
shlb
sub
dec
addl
outsl
movb
dec
cmc
lods
scas
fiaddl
shrb
mov
and
sbb
je
and
jb
and
dec
std
jae
jns
dec
and
sahf
mov
inc
outsl
xor
push
stos
xchg
cmp
pushf
cmpsb
xor
nop
inc
lods
mov
in
sub
mov
ret
nop
in
jmp
mov
xchg
dec
test
mov
sbb
and
add
inc
scas
xlat
loopne
lods
fimull
inc
loopne
addb
daa
imul
lret
jp
ds
dec
imul
outsl
adc
jmp
xor
movsb
fisttpll
dec
pushf
mov
lock
jge
adc
data16
mov
out
in
mov
jb
imul
cmp
push
or
xlat
mov
pusha
lret
sub
stos
mov
inc
xchg
or
gs
xchg
add
pop
in
leave
dec
ret
lods
jae
imul
lcall
js
iret
enter
xchg
out
mov
jno
jns
in
dec
std
sub
ds
mov
add
fdivrs
std
mov
adcl
push
icebp
int
ja
adc
repz
insb
cmp
or
je
mov
push
inc
cmp
aad
mov
push
testb
fdivrp
faddl
mov
leave
negl
stos
outsl
push
lahf
inc
fdivrs
scas
repz
jle
sub
xchg
adc
repnz
mov
cltd
insl
or
jnp
add
mov
inc
xchg
sub
or
fcoms
xchg
and
out
test
jg
inc
dec
shll
dec
in
ds
movsl
ja
test
pop
or
sbb
push
xchg
es
mov
jae
jb
mov
pop
in
jl,pt
cltd
pop
cmpsb
sahf
jbe
jne
data16
jl
std
push
adc
sub
ret
aam
js
mov
push
int3
cmpsl
out
movsb
pop
loope
or
and
arpl
iret
daa
aam
in
lret
push
repz
push
sbb
adc
mov
jg
sub
mov
jb
js
cmpsb
lock
pusha
insl
lea
in
lcall
mov
cmp
insl
mov
inc
lret
mov
add
xchg
add
and
xchg
adc
and
pop
cmp
rol
mov
insb
jno
js
dec
mov
lahf
mov
lock
stos
xor
and
in
ret
pusha
fs
fs
pop
adc
test
dec
mov
push
pop
adc
mov
mov
cltd
xor
or
mov
push
in
iret
fmul
pop
pop
push
mov
pop
lcall
cmp
stc
push
add
cs
lods
jbe
cld
xchg
test
lea
and
adc
addr16
out
gs
dec
jns
inc
mov
xchg
movsl
add
pop
jmp
inc
loopne
inc
int3
fiaddl
xor
test
incl
movsb
xor
mov
add
pop
and
test
movsl
fistpl
mov
rcrb
js
mov
cmpsl
insb
pushf
or
xchg
sbb
jnp
fisttps
sti
gs
lcall
sbb
add
jmp
cmp
mov
push
sahf
shrb
out
cltd
push
stc
icebp
rcrl
std
mov
stc
in
in
fs
movsb
test
xchg
inc
fnstcw
pop
imul
add
out
mov
ja
adc
fbld
jns
jb
add
nop
mov
lret
fldenv
bound
out
out
pop
mov
mov
jmp
sub
icebp
adc
pop
jmp
xchg
daa
idivb
push
mov
test
imul
mov
fdiv
xchg
and
lcall
lock
jbe
jp
pop
repnz
je
push
jnp
outsb
lahf
or
jne
pop
rolb
xchg
js
pop
jbe
push
or
testb
adc
dec
or
inc
mov
shlb
add
outsb
push
lock
pop
cmp
ljmp
shrb
enter
das
outsl
mov
sbb
push
enterw
xchg
mov
mov
rorb
adc
loope
mov
jns
mov
arpl
mov
sub
pop
in
sahf
adc
stos
xor
movb
mov
bound
jae
pop
and
dec
insb
cmc
jns
push
lahf
dec
shlb
pop
fwait
add
fistl
in
mov
adc
add
cmpsb
cltd
arpl
daa
add
clc
sarb
popf
push
dec
in
out
repnz
int3
dec
inc
mov
les
mov
mov
pop
jg
int3
fcomps
lods
fmull
push
lods
sarb
in
dec
test
jbe
dec
aas
add
les
xchg
insb
or
out
dec
mov
mov
mul
adc
lret
or
sbb
aam
movsl
imul
push
push
pop
dec
outsb
mov
ret
nop
mov
mov
loope
andb
adcb
push
scas
subb
pop
outsb
loop
mov
xchg
fwait
js
cmp
in
insb
pop
push
xchg
jecxz
clc
cmpb
push
xchg
ljmp
shld
subb
adc
mov
mov
xor
addb
sub
in
sbb
int3
sbbb
mov
mov
testl
shlb
add
mov
pop
sahf
addr16
mov
hlt
pop
xchg
cmp
dec
inc
arpl
loopne
cmc
aaa
dec
imul
or
ficoms
and
pusha
mov
into
mov
xor
fstl
cs
mov
imulb
xchg
mov
outsl
mov
icebp
jne
cmp
jp
inc
jb
int3
xchg
aas
xchg
dec
mov
movsl
push
jb
lret
leave
xor
mov
popf
jp
add
or
sub
insl
scas
jne
outsl
aas
jmp
mov
jno
sbb
push
inc
push
pop
jmp
aam
inc
loop
cmp
in
aaa
jnp
sbb
test
ljmp
jmp
scas
mov
inc
sub
jp
lret
push
ljmp
mov
mov
outsl
cld
lods
mov
mov
mov
lods
add
pop
jg
int
mov
movsb
cmp
js
popf
or
dec
xchg
dec
jno
dec
sarb
cs
loope
adc
into
mov
sti
fs
sub
test
add
cwtl
jecxz
aad
sbb
cmp
pop
mov
stos
cmp
aaa
fsubp
mov
xor
hlt
jmp
rorl
fcos
out
cwtl
xor
in
sub
fisubl
sti
cmp
jg
cltd
nop
cmp
popf
push
cmpsl
cmp
outsl
add
lret
cld
adc
sbb
push
out
nop
add
out
stos
jp
or
call
push
dec
pop
mov
outsl
aaa
cmp
add
pop
and
dec
fs
dec
inc
cs
sbb
outsl
fadd
mov
test
lock
inc
shlb
and
roll
mov
push
adc
insl
pop
cmp
loopne
jb
sub
in
sbb
sub
scas
movb
jge
xchg
fdivl
loop
cmpb
sbb
icebp
call
or
xchg
lcall
mov
pushf
sbb
jp
add
ficompl
lods
add
jbe
stos
jnp
adc
gs
dec
inc
es
nop
fimull
cmp
xlat
xchg
rol
push
push
fwait
pusha
jle
adc
push
xchg
xlat
jge
insl
jmp
pop
cmp
fwait
sub
inc
pusha
jmp
xchg
shrb
pop
fistpll
rorl
sub
and
jmp
cmc
stos
mov
loopne
and
mov
pop
pop
sub
jnp
and
insb
iret
mov
inc
lock
shlb
sahf
aad
jg
mov
mov
ds
mov
xchg
ret
mov
push
repz
jmp
jb
pop
aad
in
mull
jne
bswap
fucomp
and
mov
pop
dec
fsubl
push
bound
shll
mov
fstpt
rcl
xor
mov
xchg
aaa
xor
push
push
mov
pop
mov
fnstsw
es
xor
frstor
ret
lods
repz
icebp
sbb
sbb
xor
mov
ja
mov
sbb
jne
faddp
mov
repz
into
icebp
and
or
sub
adc
cmp
push
xchg
test
xchg
aaa
xchg
sub
cmp
shl
das
addr16
jnp
test
inc
push
hlt
push
jne
xchg
daa
cli
call
dec
and
mov
mov
mov
cmpsb
xor
test
and
aad
out
cmp
fs
xlat
and
aad
test
test
ja
mov
xchg
mull
testl
test
fs
loopne
lcall
xor
xor
xor
sub
inc
int3
rorl
loop
mov
xor
jg
std
mov
sub
mov
bound
test
mov
cwtl
and
insb
idivl
push
mov
add
dec
mov
insb
lods
js
mov
ljmp
push
sub
and
aam
ja
cmpsb
ret
pop
loope
xor
add
push
cltd
sub
push
xor
bound
cmp
imul
cmp
inc
notl
jp
mov
iret
lcall
mov
dec
lods
and
sarl
mov
push
mov
cld
xor
cld
scas
rol
mov
call
adcb
test
shrb
xor
sbb
andb
xlat
idivb
loop
subl
sbb
dec
xor
xchg
inc
xchg
out
sub
mov
outsb
sahf
xchg
js
mov
fstps
push
jmp
xor
xlat
jne
jno
inc
add
shll
cmpsb
out
cmp
xor
sub
scas
rep
pop
mov
test
fmull
mov
in
and
pushf
jg
out
repz
push
fs
rcll
scas
sub
and
dec
jle
addl
mov
dec
scas
and
enter
sahf
xchg
xor
pop
lcall
filds
pop
pop
fs
jno,pt
inc
sarb
shl
data16
mov
sub
cltd
sub
out
xchg
mov
psubsw
ret
inc
push
fcomi
icebp
inc
xor
and
sbb
jb
adcl
adc
push
cltd
lea
lods
mov
pop
popa
and
into
sbb
sahf
jae
rcrl
movsl
adc
cmp
push
push
inc
lods
mov
in
push
cmpl
push
cmp
adc
xor
add
out
fnstcw
jecxz
fs
sbb
cld
mov
popf
insl
push
mov
es
jecxz
mov
mov
les
add
mov
pop
test
std
outsl
mov
or
out
sub
push
in
rolb
test
jae
or
jns
iret
push
sbb
stos
daa
mov
pusha
dec
mov
outsb
jg
mov
mov
push
shrb
cmp
mov
movsb
sub
mov
movsb
jo
adc
cmc
inc
sbb
popf
lret
test
mov
inc
popa
stc
lcall
xor
sub
mov
movsl
jl
mov
mov
pop
fs
mov
aam
add
test
jb
pop
fdivp
loop
scas
sub
dec
mov
sahf
and
sbb
stc
add
lock
lock
cmp
adc
xchg
cmp
pop
and
movl
test
bound
cmp
mov
push
lahf
add
pop
jg
mov
int
inc
std
pop
and
data16
xchg
cmp
flds
iret
ds
add
push
psubw
jo
test
mov
jo
jmp
jg
lcall
mov
aad
lods
pushf
mov
bound
sub
loopne
mov
cmp
adc
les
imul
xor
mov
movsl
fistps
mov
inc
in
mov
xor
jae
jnp
cmpsb
push
sbb
icebp
lds
or
dec
sub
cmpsb
loop
and
cld
iret
std
jmp
adc
and
repz
and
push
xchg
test
sbb
xchg
push
daa
inc
notl
jb
js
ss
pop
push
sub
in
sbb
pop
aam
cmpsb
outsb
and
dec
add
dec
daa
dec
mov
inc
enter
or
inc
adc
aaa
push
mov
cmpl
mov
mov
into
mov
dec
cli
ja
sti
jp
jl
mov
andb
sahf
xchg
push
jo,pt
mov
push
pop
rorb
pop
jl
mov
cmpsl
lock
test
or
or
mov
dec
push
mov
mov
jl
xor
shr
hlt
testl
jp
add
sbb
cmp
mov
sbb
sub
or
jo
add
fnsave
sub
movl
out
fsubrl
call
and
pop
inc
mov
xchg
hlt
inc
leave
loope
pop
fdiv
adc
and
jmp
ret
gs
aas
dec
idiv
mov
inc
std
inc
lods
int3
or
stc
out
jo
jecxz
jns
xchg
cs
push
push
aam
jns
add
das
clc
out
jl
inc
rcll
xor
sub
leave
ja
lahf
daa
pop
xchg
dec
sbb
adc
aad
repz
loope
xor
push
mov
adc
sahf
faddl
dec
ljmp
cs
cld
rorb
sbb
mov
push
pushf
xchg
or
stos
push
call
xchg
test
aas
cwtl
into
adc
mov
xchg
outsl
jle
sbb
lret
fidivl
aam
test
push
xchg
test
cltd
jnp
rcll
inc
nop
ljmp
sub
stos
dec
sub
dec
mov
jp
or
xchg
jl
bound
add
fsubrs
xorl
cmpsb
add
push
loope
add
xor
push
popa
imull
icebp
or
ja
mov
lds
idivb
shrl
xchg
cmp
ss
movsl
mov
push
pop
subb
jmp
inc
rclb
movsl
div
fdivl
orl
lods
std
frndint
mov
mov
sub
push
outsl
fadds
push
loop,pn
enter
adcl
and
mov
push
dec
aad
sbb
call
nop
stos
xlat
shl
cmp
jae
stos
add
inc
sti
jb
or
loop
and
lret
adc
ret
ret
lcall
jmp
dec
repnz
cmc
dec
mov
nop
push
inc
push
xorb
push
push
ljmp
push
dec
dec
leave
mov
cwtl
jae
repz
add
inc
repnz
mov
loope
lret
xchg
outsl
push
jb
xchg
push
scas
enter
insb
adc
sub
call
push
pop
xchg
add
out
adc
in
cmp
mov
imul
adc
jmp
pop
add
xchg
lret
pop
pop
mov
shll
jmp
jge
cmp
std
push
inc
cmc
add
xchg
nop
add
decb
xchg
int3
sarb
imul
lret
xor
cmp
mov
inc
pop
subl
int
inc
xchg
pop
jg
inc
stos
rorl
xor
bound
push
and
mov
xor
fucompp
xor
sbb
pop
repz
loopne
push
jle
mov
mov
icebp
and
repz
push
jns
push
movsb
stos
inc
jns
std
push
xchg
add
lock
out
push
imul
test
mov
leave
and
mov
jg
push
push
dec
mov
mov
mov
xor
or
push
sub
out
mov
xchg
mov
and
mov
push
out
in
sub
fsubrs
test
stos
stc
and
cs
push
faddl
mov
shrl
xor
mov
es
or
cmc
out
inc
ja
mov
outsl
sbb
sbb
mov
iret
aam
push
dec
out
hlt
sub
jge
push
inc
sub
bound
les
and
mov
lcall
scas
sub
insb
scas
loopne
fbstp
inc
cmc
cs
and
adc
lcall
lods
mov
shll
loope
lea
xchg
jbe
sbb
lea
jp,pn
jg
add
adc
shrl
jmp
popl
repnz
pop
loope
rorl
fiadds
add
mov
inc
je
fisttps
ja
inc
mov
outsl
jbe
int
xchg
and
das
into
rorb
movntps
ljmp
testl
es
push
sbb
mov
mov
mov
and
adc
outsb
jae
sahf
scas
push
push
fildl
adc
mov
insb
scas
les
outsl
and
sub
or
icebp
xor
xchg
cmpsl
push
aad
mov
and
int
adc
cmp
std
xchg
adc
lods
cmc
sbb
push
xchg
or
mov
jns
push
ja
pop
sbb
ljmp
mov
mov
mov
jb
inc
ret
xchg
dec
aas
enter
mov
inc
xor
popf
popf
dec
mov
push
scas
cmp
mov
movsb
pusha
sbb
mov
push
lea
dec
jno
lock
pop
ret
scas
xchg
cli
dec
lock
dec
arpl
mov
push
mov
inc
in
movsb
and
or
pop
insl
dec
ljmp
dec
mov
jmp
push
push
jle
ss
xlat
push
mov
test
mov
dec
lea
push
mov
push
jl
ficomps
pop
jns
and
imul
fimull
mov
sub
hlt
mov
lock
sti
data16
push
adc
icebp
lds
aad
idivl
sbb
fucomi
mov
push
xor
lods
inc
mov
dec
loop
mov
sahf
cmp
cmpsl
loope
mov
sub
xchg
jbe
mov
jbe
and
ja
pop
or
inc
inc
and
cmp
outsl
je
push
dec
jge
aad
js
sbb
imul
dec
inc
mov
rorl
test
adc
in
adc
pop
or
addr16
mov
pop
pop
pusha
iret
adc
jo
in
fdiv
clc
movsb
mov
mov
outsl
and
sub
rcr
ja
and
adc
or
hlt
inc
inc
call
fs
rcll
out
sbb
dec
xchg
fs
mov
sbb
jp
sub
lock
aad
leave
jecxz
adc
add
jg
push
xchg
jns
fsubs
addb
lret
xor
xor
cmpsl
fwait
jae
in
pop
roll
pop
mov
mov
mov
testl
ljmp
subb
jl
sbb
daa
or
xchg
bound
enter
xchg
pushf
inc
mov
rorl
cmp
cmpsl
and
out
aad
lea
cltd
or
insb
mov
or
dec
push
xchg
bound
outsl
push
push
sub
bound
enter
std
int
movsb
adc
xchg
sub
jle
xchg
outsb
out
xchg
dec
mov
fisubl
mov
gs
inc
sbb
out
ret
out
jecxz
cmpsl
jmp
sub
sbb
jecxz
xchg
mov
jbe
mov
sbb
cmp
out
dec
lds
mov
add
lcall
push
add
sub
xchg
loop
push
lock
pusha
cmp
and
mov
xchg
je
xor
aam
lods
or
movsb
xor
movsl
push
xchg
sub
add
and
and
mov
lea
sti
jno
fstpt
or
sbb
stc
adc
js
and
jle
dec
cmpsl
fildl
sub
mov
clc
bound
es
dec
addr16
dec
gs
inc
mov
mov
pop
aas
mov
jmp
mov
gs
xchg
xchg
sub
sbb
fs
in
mov
mov
and
and
jae
mov
scas
cmpl
in
sti
daa
fisttpll
pop
mov
xchg
lahf
sti
fs
rcrl
cmp
mov
adcl
push
mov
inc
pop
cmp
fisubl
xor
fsub
jno
mov
or
fsubs
cmp
or
jae
jg
jbe
sarb
rcll
jecxz
mov
out
inc
mov
adcb
push
or
bound
mov
sti
push
xorb
mov
dec
rcrl
repz
push
fsts
outsl
mov
cmpsb
add
jmp
ret
dec
mov
es
or
dec
imul
fsubr
stc
shlb
mov
adc
in
movsl
dec
ffreep
mov
cmpb
test
into
mov
movsl
inc
mov
popf
push
insl
jo
lea
mov
inc
mov
out
lret
popa
cmpsl
mov
push
fistps
pop
cld
aas
or
das
push
in
mov
jmp
ficoms
dec
or
dec
cmpsb
mov
xor
and
mov
mov
mull
sub
daa
and
pop
subl
icebp
in
pop
lahf
movsl
fs
and
call
test
or
movsl
add
gs
mov
push
aam
jbe
test
repnz
sub
cmp
inc
jnp
cli
dec
imul
popa
sbb
ret
inc
or
lahf
js
fwait
cld
or
sti
pop
aad
adc
ljmp
cld
mov
push
cmp
pop
fcoml
push
jbe
call
aad
jmp
mov
imul
sbbl
cmc
fstps
pop
loopne
cmp
int
shrb
mov
or
popa
cld
hlt
or
dec
fs
movsb
add
fisttpll
cmp
mov
lret
sbb
fwait
js
inc
xchg
mov
cmp
or
mov
and
call
push
dec
inc
xchg
scas
ljmp
outsl
loope
cmpsb
lea
push
jle
xor
fistpl
jmp
cmpsb
movsl
pop
xor
lret
jae
xor
xorb
xchg
mov
fiadds
xor
pop
cmp
subb
cmp
outsl
sub
sub
mov
sti
pop
mov
mov
aaa
pop
sti
fiaddl
sbb
add
mov
shll
dec
mov
in
mov
and
in
cwtl
mulb
call
imull
cmp
jmp
lods
es
lods
dec
or
data16
divl
jo
push
mov
jecxz
ljmp
sbb
pop
jl
jb
mov
push
cltd
or
arpl
push
lret
cld
bound
xchg
andb
xchg
fbld
test
cmp
js
call
or
in
or
pop
or
je
mov
adc
sahf
out
cli
cs
cmpsb
inc
inc
add
xchg
xchg
das
cs
mov
mov
push
mov
push
packsswb
icebp
inc
repz
and
and
mov
xor
fdiv
and
dec
xchg
xchg
aam
test
pop
cmpsb
in
and
xchg
je
pop
xchg
push
xchg
mov
iret
mov
dec
xor
inc
loopne
fistpl
jbe
gs
mov
mov
cmp
js
out
cmp
fisubl
add
pop
mov
mov
fsts
xchg
cli
jmp
mov
adc
inc
pop
mov
shl
xor
mov
shr
and
rcll
push
push
or
je
xchg
mov
mov
into
cmc
jp
pushf
inc
ret
cmpsl
out
stc
imul
xchg
mov
ljmp
lahf
add
xor
enter
lock
sub
js
pop
adc
mov
mov
sbb
filds
loopne
mov
sbb
orl
push
mov
cmpsb
cmp
mov
xor
mov
add
xchg
mov
jae
cmp
in
daa
imul
jle
dec
test
adc
popf
and
and
js
pop
popa
push
sbb
push
mov
test
jns
fs
sbb
shll
pop
insb
mov
stos
insb
and
mov
mov
add
xchg
dec
daa
pop
inc
dec
mov
push
mov
stos
cmp
jg
lods
xor
jecxz
mov
in
test
pusha
sub
gs
xchg
or
pop
inc
mov
dec
testl
mov
mov
orl
or
inc
stc
jne
adc
and
dec
das
cmp
addr16
cmp
inc
stc
mov
or
pop
popa
jne
inc
sub
repnz
pop
cmp
imulb
mov
mov
mov
fcmovbe
cli
into
push
jge
mov
arpl
adc
add
mov
repz
cmpsl
cmp
or
pop
sbb
pop
sub
push
sub
inc
xor
xchg
negb
btr
mov
mov
sub
movsb
pop
adc
insb
jle
adc
cmpsl
js
cmp
cmp
popa
jg
daa
xor
cwtl
xor
push
xchg
pop
inc
push
jp
adc
movsb
fwait
gs
dec
push
sbb
lret
movsb
arpl
adc
jns
dec
stc
test
pop
loop
mov
add
cmpl
inc
mov
sub
push
ds
insb
mov
xchg
imul
jo
mov
fsubp
push
mov
iret
mov
inc
movzbl
ja
jo
imul
sti
mov
filds
jns
js
mov
sub
test
mov
sub
push
inc
mov
lret
maxps
pop
jle
mov
loop
or
push
into
jmp
mov
adc
push
xchg
ret
mov
xor
mov
mov
aas
fiaddl
fbld
mov
add
cli
xor
lods
lods
mov
lods
lock
sbb
mov
mov
xor
rorl
dec
add
movsb
incl
stos
outsb
or
inc
mov
jge
rorb
outsb
mov
cmp
mov
popf
popl
pop
mov
daa
stos
sarl
add
pop
push
bound
mov
ss
in
dec
fldl
push
mov
cld
cmpsl
fbld
mov
xor
int
cli
mov
jo
or
dec
add
popa
adc
jae
jno
inc
pop
dec
push
adc
sti
imul
xchg
and
out
and
add
jge
jae
cltd
mov
fcomps
pop
stos
mov
notl
pop
popf
shr
iret
push
dec
arpl
pop
xchg
cld
dec
cli
fldcw
aas
cwtl
fwait
out
jno
jns
movsl
dec
repnz
jl
push
push
fwait
pop
pop
xlat
and
lret
xor
add
xor
pop
jecxz
test
pop
ljmp
hlt
pop
or
adc
fnsave
xor
jmp
push
xchg
and
stos
sub
outsb
fwait
or
movsl
xchg
lods
inc
aam
aad
dec
dec
pop
mov
pop
mov
movsb
ja
loopne
xor
pusha
or
inc
imul
mov
xor
mov
push
mov
decb
xchg
cli
enter
es
addr16
out
hlt
sbb
dec
mov
mov
adc
and
push
cmp
popl
dec
cs
jbe
mov
repnz
js
or
subb
mov
jmp
or
and
xchg
imul
lods
lahf
dec
ljmp
loop
fcomps
pop
adc
fsubrl
daa
lcall
nop
mov
scas
fbld
inc
jmp
mov
push
xor
xchg
dec
xor
ret
sub
mov
stc
loope
add
mov
fdivs
in
cs
out
popl
pop
xor
mov
enter
pop
pop
ja
mov
lods
cmpsl
cmc
cmpsl
dec
adc
cltd
and
pop
test
and
adc
inc
pop
lock
and
inc
pushf
mov
push
xchg
jne
cmc
test
mov
inc
ffreep
jmp
inc
xchg
dec
lods
repnz
sbb
mov
inc
mov
mov
cmp
loopne
into
loope
dec
das
mov
nop
mov
dec
dec
mov
test
push
xor
pop
dec
adc
fidivs
or
lret
loopne
add
jno
pop
pop
cmpsl
aas
mov
sbb
add
mov
insb
ss
pop
out
jbe
outsb
outsb
mov
xchg
jo
jg
repnz
xchg
sahf
inc
mov
es
fnstenv
arpl
jge
xor
add
jge
bound
inc
inc
jge
and
dec
out
es
aaa
dec
push
xor
inc
aas
mov
xchg
aam
xlat
mov
aad
xor
mov
mov
imul
mov
sti
lock
shll
pusha
push
clc
adc
das
aad
xlat
lods
popa
mov
inc
daa
imul
popf
jnp
aad
cmpl
adc
or
insb
cmp
int
jecxz
rol
out
mov
inc
pop
dec
sbb
mov
jns
stos
es
adc
rorl
xor
pop
fcoml
mov
adc
and
pop
les
push
or
mov
icebp
pop
nop
cmpb
pop
push
std
sbb
push
mov
push
jnp
out
inc
inc
jno
in
push
int
and
pushl
push
test
lret
jmp
cmp
rcr
repz
sub
pop
in
ds
dec
mov
stos
lds
sbb
loop
std
cmp
pusha
pinsrw
scas
test
testb
adc
add
sahf
cmp
addb
xor
push
adc
ljmp
fcomi
dec
sbb
pushf
lods
in
fcomi
adc
cmpsl
push
cmpsb
in
les
movsb
inc
mov
jecxz
mov
test
adc
mov
jp
out
nop
pop
push
stc
gs
push
scas
jbe
push
xchg
andb
dec
jne
pop
std
xchg
pop
dec
sbb
xchg
mov
mov
loopne
mov
or
xor
ja
and
pusha
mov
pop
iret
push
ja
div
pop
xchg
or
roll
fbld
cmc
mov
das
insb
mov
mov
ds
mov
inc
repz
ljmp
inc
jae
xor
movsl
xor
push
and
mov
xor
sub
adc
push
lea
enter
mov
jb
xchg
jmp
mov
sbb
cmc
aaa
pminsw
xor
enter
mov
push
mov
lods
lods
movsl
fwait
or
ret
mov
test
pop
mov
xor
and
sti
cwtl
jne
sbb
movsb
test
dec
gs
inc
push
lock
pop
dec
inc
loope
iret
cmc
fucomp
lods
xor
je
movsb
lret
pop
lret
xchg
pop
scas
idiv
cld
add
aam
popf
xchg
add
aas
das
out
stos
arpl
inc
inc
decl
repz
pop
dec
stos
mov
icebp
lods
std
addr16
and
push
mov
jb
or
or
mov
lods
cmp
fs
mov
lcall
outsl
xor
xchg
adc
repnz
adc
pop
pop
movsl
inc
sub
xor
dec
pusha
or
mov
push
sbb
and
std
mov
addr16
imul
int
daa
popa
out
push
movsb
das
lock
adc
adc
sub
in
mov
sub
sbb
jecxz
sbb
mov
scas
mov
jbe
fistl
mov
into
lods
add
sub
fcmovnb
imul
lret
loop
popf
pop
sbb
cmp
cmpsl
pop
adc
repnz
xor
xchg
sbb
stos
push
cmp
dec
outsl
pop
or
pop
and
mov
cmp
leave
mov
cmc
lret
int3
add
in
pop
ss
pop
rorl
stc
fdivl
mov
mov
inc
in
test
push
rdpmc
sbb
mov
push
std
lcall
dec
mov
test
push
popa
outsb
cmpsb
sbb
sub
insl
addl
xor
sarl
sbb
jle
jo
or
insb
pop
ljmp
jmp
mov
mov
mov
cmp
mov
push
push
mov
add
or
fimull
mov
or
mov
push
hlt
sub
adc
sub
testb
mov
inc
icebp
and
loop
sbb
mov
xchg
mov
and
test
test
sbb
push
add
and
fdivl
mov
xchg
xchg
xchg
fwait
imul
aad
add
lcall
int3
cltd
push
jne
inc
mov
xor
es
sahf
or
and
popa
popa
xchg
incb
jne
add
jl
xor
or
mulb
xor
divb
lahf
push
dec
push
out
pop
sbb
aaa
cmp
aad
add
xchg
enter
add
rcrb
jp
fwait
pop
daa
push
mov
sbb
repz
sbb
jle
jle
and
mov
xor
cmp
mov
mov
dec
lcall
cltd
subl
std
loope
jnp
xchg
in
and
or
out
cmp
inc
pop
xor
cmp
push
cmp
fstps
mov
add
pop
movsl
cmp
outsb
xor
loop
mov
mov
mov
sub
xlat
popf
mov
repz
dec
and
test
inc
dec
mov
inc
sbb
adc
das
cmp
jns
pop
test
gs
or
cmpsl
test
cs
jl
sahf
sbb
sub
adc
pop
scas
sahf
aad
negb
pop
movsl
pop
inc
rcl
dec
outsl
enter
mov
xor
mulb
push
sahf
push
push
fcoms
lods
test
cmpb
repnz
pop
aad
lret
sbb
dec
fsubs
outsb
repz
mov
nop
xorl
adc
pop
test
mov
push
sub
sub
fistl
pop
pop
notl
xchg
hlt
mov
ret
cltd
es
fdivrl
and
mov
xchg
push
mov
xchg
ss
push
and
dec
dec
into
mov
push
jmp
push
and
push
xchg
mov
mov
rcl
add
pop
xchg
out
repz
pop
cmp
lea
movsl
push
loopne
mov
push
push
mov
scas
sti
call
popf
mov
cmc
or
push
xchg
and
shlb
pop
fwait
bound
int3
sarl
aam
dec
cli
ror
aam
xchg
jno
or
stos
es
sbb
cmp
imul
and
and
int3
out
in
cmp
aaa
dec
mov
mov
jo,pn
stc
loopne,pn
xor
out
push
cmp
out
pop
or
jae
lds
push
mov
gs
xchg
pop
jb
out
loopne
test
leave
out
mov
movsl
orw
pop
insl
cld
bound
cmp
pop
inc
pop
fidivs
insl
scas
arpl
add
jmp
jecxz
mov
fucom
sbb
xor
inc
loop
dec
or
test
pop
jge
adc
lret
frstor
push
inc
icebp
out
in
stos
into
push
cs
sbb
mov
lods
test
add
roll
repnz
aam
into
movsl
push
jno
inc
xchg
mov
mov
jo
out
outsb
lret
hlt
pop
orb
sub
xchg
mov
or
dec
iret
jo
and
mov
jb
jge
repz
fsubl
push
stc
insb
std
adc
push
cli
sbb
scas
data16
jge
dec
icebp
and
mov
pop
jno
sahf
add
shll
shrl
fwait
imull
mov
push
ret
jg
push
es
sbb
scas
jg
xor
scas
les
jmp
push
push
mov
ja
mov
lahf
xlat
mov
lods
cmp
out
movb
outsb
xchg
xchg
test
pop
scas
dec
in
jo
sbb
pop
jb
and
fwait
jp
add
cmp
dec
lods
cmpsl
lds
sub
hlt
jmp
je
xchg
mov
and
les
add
xchg
push
mov
or
xchg
cmp
add
cmp
arpl
mov
jp
sahf
cmp
add
scas
test
sbb
hlt
push
test
xor
mov
mov
cli
ds
cmpsl
add
pop
pop
or
imul
jmp
loop
addps
pop
popf
and
push
xchg
dec
arpl
jle
pusha
xor
mov
aaa
jno
inc
xlat
inc
xor
clc
out
aaa
int3
cmp
pop
out
xchg
arpl
mov
lods
inc
adc
fidivrs
mov
add
into
adc
dec
dec
mov
aaa
inc
mov
sbb
outsb
sub
pop
inc
lret
es
add
jmp
cmpsl
push
loop
xchg
xchg
ss
test
lcall
test
pop
sbb
sbb
mov
stos
test
nop
mov
jle
movsb
mov
mov
out
fnstcw
leave
pop
mov
mov
adc
sbb
mov
sbb
mov
fistps
pop
ljmp
outsl
testl
sti
jmp
and
int3
mov
int3
fyl2x
push
xchg
es
in
adc
cmp
in
into
insb
add
dec
dec
xchg
and
mov
movsl
data16
btr
addr16
pop
jle
push
push
cmc
pop
push
or
in
or
lret
shll
dec
or
fnstenv
sub
test
xchg
add
lahf
inc
jnp
and
and
lret
addr16
sarb
add
xor
test
push
les
stos
xor
adc
loope
jae
xchg
or
cmp
scas
cmp
mov
es
dec
jne
sbb
rorl
rol
lock
xor
pop
add
add
sbb
or
lock
jg
clc
or
or
in
mov
mov
cmpsb
testl
cmp
fdivs
jecxz
push
pop
popa
repz
mov
aas
push
inc
out
aaa
xchg
add
sub
add
out
sbb
jmp
and
pop
scas
testb
or
cmp
push
test
cmp
sbb
jp
lcall
push
addr16
mov
and
adc
shrb
cld
fsubrl
arpl
dec
push
ljmp
daa
ja
and
cmp
cmp
sub
xor
js
cli
or
sub
iret
inc
push
push
js
mov
inc
mov
dec
flds
iret
cwtl
cmp
sub
std
xor
dec
dec
les
adcl
push
daa
je
mov
data16
mov
popa
stos
jmp
push
sbb
pop
shl
mov
or
xchg
ss
mov
mov
das
xor
adc
and
xlat
faddp
in
js
cltd
push
and
mov
pop
jb
insl
add
pusha
test
leave
pop
xlat
lret
mov
inc
or
xchg
mov
jbe,pn
inc
lret
out
cli
lahf
push
inc
xchg
cmp
jo
and
fwait
dec
imul
shll
and
outsl
and
fdivrl
ret
mov
cli
mov
pusha
mov
in
push
sub
test
cmc
xor
fwait
shll
subl
mov
out
xchg
imul
xor
int
enter
lea
pusha
mov
adc
gs
insl
movsb
or
pop
dec
or
jbe
jp
lock
out
test
or
mulb
and
or
jecxz
testb
ds
add
rol
push
andb
push
mov
or
xchg
cmp
add
popf
lock
pop
xor
mov
ss
imul
and
push
or
jnp
aam
pop
test
stos
loop
fwait
and
arpl
fstps
popa
jne
mov
insb
sub
cmc
in
arpl
stos
jo
jae
xchg
push
movsb
push
sub
mov
xchg
hlt
push
push
or
and
or
sbb
jmp
sub
add
pop
movsl
sahf
call
bound
mov
sti
mov
roll
lea
rclb
xor
lret
push
and
popa
js
add
imul
adc
leave
dec
mov
fisttpl
lock
and
jecxz
rcr
jno
mov
and
mov
mov
sbbb
sti
or
sbb
adc
test
stc
stos
popf
test
out
sub
and
mov
mov
fdivs
jo
jo
sub
repz
lret
jns
icebp
pop
pushf
push
sub
xchg
pop
sub
dec
dec
mov
fimuls
bound
sub
inc
fsubrs
hlt
pop
fsubs
inc
push
and
cli
popf
sahf
xchg
sub
cwtl
in
fwait
mov
int
movsb
and
pop
rcr
enter
hlt
bound
negl
jnp
mov
inc
aas
loopne
jp
loopne
xor
pavgb
lock
inc
loope
mov
nop
lahf
sub
fdivrl
inc
pop
sub
add
test
xchg
or
fisubs
jno
ljmp
pop
repnz
movsb
sub
in
rclb
hlt
sub
mov
sbb
dec
mov
mov
mov
xchg
or
ja
sbb
scas
inc
pop
push
pop
ret
dec
mov
dec
push
shlb
pop
pop
out
scas
fiadds
leave
loope
outsl
imul
pop
dec
jne
fidivs
mov
inc
mov
in
mov
ljmp
and
dec
add
daa
jge
mov
outsb
movsl
dec
dec
jmp
jno
and
xchg
insb
adc
cmpsl
add
xchg
and
sbb
mov
jge
ret
jmp
stc
decb
cmp
icebp
jns
popl
movsl
and
add
inc
xlat
sahf
add
sub
pop
pop
or
sbb
rcrb
ret
popf
sub
cmpsl
arpl
in
repnz
and
jae
or
rorl
sbb
sbb
sbb
pop
fs
out
jno
or
stos
sbb
dec
xchg
mov
push
outsl
mov
jo
arpl
lods
xor
out
xchg
ljmp
loope
mull
xchg
sbb
jno
je
lahf
xor
js
nop
cmp
call
rcrb
xchg
ds
shlb
push
and
lret
pop
mov
call
lahf
out
insb
es
into
pop
aas
sub
and
jle
jle
stos
insl
push
lods
mul
int3
test
inc
cld
arpl
and
mov
lds
popf
pop
pop
pushf
push
mov
cmp
xchg
mov
mov
inc
ljmp
aam
inc
mov
xor
test
cmp
test
in
popa
mov
mov
das
push
test
xchg
mov
stos
adc
cmpsl
pop
mov
int3
cmpb
xor
imul
xchg
push
adc
loope
fwait
nop
dec
push
leave
shrl
das
arpl
mov
add
out
stos
loopne
sub
xor
sbb
sbb
xor
or
xchg
xor
inc
test
leave
xchg
ljmp
or
fucomp
jle
fdivrs
and
cmp
dec
int3
das
ja
sbb
stc
nop
ret
aam
mov
mov
rcrl
repnz
sbb
dec
int
ja
pop
ret
adc
jp
test
fwait
sbb
sub
out
fs
cmp
mov
das
aas
lea
out
add
mov
jno
pop
mov
je
sbb
pop
int3
sbb
dec
test
test
mov
push
test
add
fld
xor
xchg
adc
xchg
cltd
rol
bound
and
sub
mov
scas
loop
xchg
jbe
in
popa
xor
sbb
sbb
jne
mov
pop
or
jmp
out
leave
mov
cli
jnp
fstps
add
dec
add
cmp
xlat
bound
jb
aam
fcompl
in
mov
dec
push
mov
or
jae
fstpl
adc
and
test
lcall
in
lret
add
pop
std
cld
loop
push
arpl
dec
dec
fs
mov
shll
loopne
hlt
flds
adc
xor
dec
jne
and
fistpl
mov
push
call
mov
dec
xchg
jae
fcoml
xorb
sbb
pop
idivl
xor
ds
test
inc
cmpps
ret
push
int3
inc
push
push
lock
xor
sub
sub
add
into
ja
lret
les
and
ret
jle
insb
sbb
clc
inc
nop
adc
xchg
push
divb
dec
dec
loope
jecxz
fs
imul
add
dec
jns
shl
push
xchg
es
jmp
lea
adc
imul
inc
mov
xchg
rcrl
pop
mov
pop
and
cltd
pop
andb
sub
add
sub
lods
and
mov
inc
out
sub
inc
xor
lcall
dec
icebp
pop
mov
dec
mov
es
sub
arpl
push
fdivp
inc
cwtl
jge
das
std
pop
test
cwtl
cmpsl
sbb
jae
sbb
push
mov
jns
in
inc
fsub
je
and
pop
clc
cmp
popf
roll
sbb
or
das
mov
shlb
add
xchg
cwtl
and
mov
jns
bound
dec
cmc
jecxz
cld
or
jecxz
jmp
xchg
adc
adc
addb
pop
fsubrp
adc
out
dec
out
in
inc
jp
push
fsubrs
outsl
aad
mov
cld
pop
call
popa
loopne
mov
js
pop
lods
ljmp
mov
mov
mov
in
jle
gs
adc
add
in
or
xor
test
sub
sub
lcall
xor
cli
mov
aad
mov
cmp
in
cmc
in
mov
pop
mov
mov
adc
add
movsl
inc
repz
jmp
inc
aas
gs
outsl
push
cld
das
xchg
mov
add
out
pop
and
inc
mov
insb
add
xchg
loop
jb
mov
pop
xor
mov
add
int3
fs
pop
mov
sub
scas
inc
and
cmp
in
sub
daa
push
leave
xchg
es
fistps
xchg
lar
fdivrs
push
sbbl
sti
mov
cmpsl
lea
ss
filds
in
das
call
pop
bound
fnsave
lret
inc
mov
xor
das
into
or
repnz
jnp
push
pop
lcall
dec
pop
ret
gs
mov
mov
mov
fcompl
pop
dec
cli
ffreep
in
aas
fbld
call
sub
cmp
ja
out
mov
xor
add
jge
pop
dec
or
mov
mov
sub
push
push
add
cmp
and
bound
std
mov
xchg
mov
cmpsl
jno
mov
mov
xchg
pushf
pop
sub
subl
out
push
lods
push
add
mov
ret
adc
dec
xor
xor
mov
inc
add
ss
mov
and
mov
cmc
cmp
xchg
add
sub
out
fistpl
cmp
add
mov
jae
out
imul
jno
cmc
sbb
cwtl
jae
push
out
int3
jge
outsl
sahf
ret
in
xlat
repnz
xor
and
stos
imul
jp
pop
ja
int
xchg
mov
mov
mov
shl
sub
jle
jno
cwtl
in
and
jecxz
pushf
repnz
push
pop
xchg
dec
lods
lcall
adc
sub
jmp
popa
cld
fiadds
popa
jns
or
sbb
mov
insb
jno
nop
gs
fs
test
vminps
push
lret
xchg
mov
sbb
lods
mov
inc
mov
or
cmp
fucom
and
stc
int3
pop
mov
je
sbb
mov
mov
cs
push
ds
mov
and
ds
mov
adc
subb
xchg
adc
sbb
stos
ret
add
sub
mov
cmpb
dec
into
push
jnp
call
jmp
fsubrs
add
push
stos
stos
adc
dec
hlt
push
sub
pop
repnz
sti
in
lea
lret
cmp
or
jp
mov
je
dec
in
popf
adc
dec
cwtl
pop
jle
sub
mov
xchg
mov
and
mov
mov
rcll
mov
test
xchg
out
or
cmpsl
pushf
mov
and
or
dec
movsl
cmpsb
cltd
lds
js
push
int3
inc
pop
fwait
insb
and
lds
test
cli
aas
mov
mov
call
inc
out
test
movsl
sarl
xchg
gs
push
adc
in
mov
xchg
fcmovu
add
insb
gs
or
into
outsl
repnz
xchg
or
dec
adc
lods
hlt
mov
sbb
jl
or
cmpl
iret
rclb
popf
pop
rolb
movsl
pop
and
xchg
sub
outsb
dec
mov
push
pushw
call
enter
cmp
add
jns
sbb
call
lods
les
cld
pop
aas
pop
sub
stc
iret
test
and
cmovb
shrl
ljmp
ret
mov
clc
mov
cmpl
enter
ror
leave
xor
loope
hlt
mov
add
sahf
call
ds
or
inc
xorl
xchg
mov
lods
adc
pop
insl
pusha
mov
mov
fwait
lahf
hlt
xchg
inc
mov
mov
xchg
sub
idivl
call
in
mov
sub
popl
out
ret
into
jne
roll
repz
xlat
cltd
adc
or
dec
pop
les
sub
pop
push
call
shl
and
inc
mov
xchg
sbb
sbb
mov
outsb
iret
push
mov
out
add
sbb
mov
adc
xchg
inc
add
adc
mov
outsb
aad
test
aas
ficoml
mov
pop
xchg
imul
std
clc
fcomps
jno
jbe
add
filds
incb
or
sub
add
mov
xchg
pop
inc
mov
lret
mov
inc
lods
and
fwait
adc
pop
push
xchg
lods
jb
adc
or
inc
sub
aaa
sub
dec
imul
clc
ja
xchg
ficoml
in
lds
das
test
test
movsl
xor
dec
out
adc
out
in
imul
inc
movsl
jae
rcrb
imul
mov
pusha
aad
adc
aad
jge
jg
lret
xchg
xchg
ss
or
sbb
test
jns
xor
jae
lret
ret
test
or
loope
cmpsl
pop
add
pusha
add
push
pop
je
add
out
psraw
pop
pop
ss
xlat
outsl
jecxz
std
inc
in
push
cmc
xchg
dec
adc
cmp
push
push
sbb
clc
push
jno
sahf
add
mov
jmp
bound
sbb
mov
push
negb
shlb
roll
push
push
pop
sarb
pop
aas
adc
pusha
xorb
hlt
bound
inc
cmpsb
rclb
adc
rcl
xchg
incl
ljmp
ljmp
and
push
cmpb
pop
sbb
cltd
enter
pop
in
mov
inc
push
leave
mov
and
in
xchg
dec
bound
and
sub
insb
iret
inc
mov
add
add
cs
sub
outsl
dec
pusha
aaa
adc
in
xor
test
mov
mov
mov
movsb
or
mov
push
int3
scas
loope
std
sub
mov
fucom
je
nop
mov
lods
xchg
ljmp
mov
fnstsw
dec
push
enter
addr16
xlat
aaa
cmp
jg
fldcw
push
outsl
dec
xor
jae
cltd
mov
xor
insb
iret
iret
ljmp
cmp
add
dec
adc
mov
cs
out
inc
lret
decb
sub
stos
cmp
loope
bound
roll
fiaddl
sbb
pop
mov
icebp
jl
nop
stos
clc
std
lods
push
adc
and
jno,pn
in
jle
sbb
mov
call
dec
mov
sub
dec
push
sub
cltd
add
xchg
mov
jle
sub
lock
xchg
aas
cwtl
ja
push
arpl
rol
repz
pop
in
adc
inc
dec
and
fsubrs
sbb
push
lahf
lea
push
mov
mov
pop
mov
pop
notb
hlt
pop
incl
push
lahf
dec
addb
in
push
cmpsl
loopne
fwait
mov
es
clc
add
es
xchg
add
push
stc
pop
dec
fwait
test
loope
outsl
sub
jmp
rclb
outsl
imul
call
insb
nop
push
xor
mov
inc
pop
popf
sarb
dec
xchg
inc
mov
bnd
gs
insb
inc
cld
mov
mov
pop
stos
pusha
pop
sub
push
jbe
cmpl
xor
mov
and
mov
xor
pushf
roll
mov
xchg
cltd
aaa
cmc
dec
pop
jae
jmp
out
sti
sub
xchg
sahf
shll
inc
adc
sub
movsb
sbb
push
mov
adc
pop
lods
sub
mov
and
shlb
pop
roll
nop
mov
iret
jg
ficoms
jne
mov
ja
movsl
sbb
sub
adc
out
add
cli
jbe
sbb
rcrl
out
das
lahf
fwait
xchg
pop
fisubrs
pop
adc
shlb
mov
xchg
jns
adc
push
inc
pop
pusha
ljmp
or
rorb
inc
les
cli
and
jo
and
ja
std
push
push
popa
mov
cmpsb
out
shl
gs
jnp
cs
mov
fisttps
sti
jbe
xor
add
std
jb
dec
adc
lcall
fisttpll
lods
in
pop
xchg
fdivr
cvttps2pi
mov
add
in
cmp
shrb
pop
hlt
cld
mov
dec
adc
cmp
lahf
repnz
cltd
pushf
push
mov
int3
add
and
aas
dec
mov
iret
lods
dec
sub
add
dec
cmp
pop
data16
std
dec
mov
js
mov
decl
add
mov
scas
insl
icebp
and
inc
mov
in
mov
dec
adc
lret
xchg
je
xchg
jge
and
imul
cmpsl
fdiv
fcoms
inc
out
fcoms
jle
push
dec
mov
mov
imul
aas
nop
push
out
cmp
mov
pop
add
adcl
enter
cmp
mov
cmp
inc
scas
cmp
mov
sbb
sub
sub
ret
hlt
enter
cli
mov
lret
and
sub
mov
mov
sbb
or
xchg
outsb
fs
jge
sub
cwtl
popa
xlat
push
loopne
cld
jg
pop
iret
pop
or
mov
sub
incb
mov
add
shr
clc
stos
pop
cli
int3
sahf
sub
lcall
lods
gs
repz
add
dec
jmp
push
fiaddl
mov
cld
test
push
mov
and
fistpl
lds
sub
fimull
push
inc
dec
rcrb
js
es
and
fisttpll
pop
and
push
and
arpl
xlat
inc
push
mov
roll
mov
push
xchg
push
mov
or
xor
pop
aad
mov
mov
xchg
cmp
cmp
sti
psllw
mov
popa
push
sbb
push
ljmp
incb
fiadds
xchg
in
sbb
mov
ljmp
xchg
lods
int
hlt
repnz
sub
in
push
mov
xchg
add
push
cmpsl
in
and
pushf
pop
mov
out
mov
aam
jl
jae
push
sub
leave
jbe
or
jmp
cmp
fcmovnbe
lock
inc
sbb
lcallw
fsubr
arpl
mov
testb
jp
inc
sub
testl
fistl
dec
test
jno
fistpll
das
out
adc
add
push
leave
or
mov
fisttps
cltd
mov
mov
cmc
shll
lds
cmp
pusha
mov
adc
lea
xor
in
cli
imul
fwait
out
sbb
xadd
aaa
lahf
mov
fstps
pusha
or
add
pop
enter
jae
insl
mov
shll
enter
mov
js
dec
mov
jb
pop
mov
jae
xchg
jnp
dec
mov
add
xchg
add
lea
add
lret
or
es
sub
jnp
mov
andb
mov
mov
out
xchg
mov
loope
scas
int3
xchg
jnp
jle
mov
jo
mov
xor
icebp
ret
popa
or
jbe
sub
inc
ljmp
test
movsl
add
mov
es
mov
xlat
pop
jecxz
scas
mov
pop
pop
leave
shrl
shrb
xor
fmul
xor
adc
and
push
and
into
jmp
imul
jle
adc
adc
add
pop
cmp
inc
fs
mov
or
push
sub
ljmp
add
cmp
mov
sbb
lahf
and
andl
sbb
xchg
aaa
aad
mov
inc
nopl
jno
or
lret
inc
ss
mov
faddl
pop
ja
and
pop
lret
or
dec
xchg
mov
cli
cmpsl
xor
fldenv
test
xlat
loop
jmp
mov
mov
ds
dec
roll
pushl
stos
sahf
jne
xorl
xchg
sub
push
push
clc
aaa
mov
jl
inc
cmp
sub
pop
bnd
divl
ficompl
sub
mov
fstps
mov
and
std
pop
cmc
into
lea
mov
jg
or
ret
or
xlat
pop
and
xlat
aam
mov
sbb
mov
fdivrs
imul
sbb
push
sbb
jg
daa
xchg
xchg
adc
in
fwait
cwtl
insb
and
lret
lret
sub
lret
pop
mov
test
enter
cwtl
sbb
or
inc
xor
pop
dec
pop
adc
push
adc
sub
jb
sub
xchg
cmp
pop
xor
sbb
setne
js
call
ds
ds
dec
push
mov
push
aaa
mov
sti
mov
gs
scas
cmp
shl
pusha
push
xorb
popf
or
add
out
inc
dec
in
div
or
and
mov
mov
sbb
lds
xor
dec
pop
sub
aam
scas
cmc
ret
ror
jno
inc
outsl
jne
mov
mov
xorl
xchg
pop
sahf
repnz
notb
xor
pop
ret
mov
add
pop
jbe
add
gs
mov
insl
lea
pusha
icebp
inc
dec
jbe
out
pop
loop
repz
dec
inc
dec
push
mov
jo
cmp
dec
ret
pop
mov
inc
sti
sbb
lock
cltd
in
lret
das
xchg
out
jb
cmp
icebp
imulb
fldenv
mov
lock
or
or
repz
add
cltd
sarb
sub
int3
mov
fidivrl
clc
lods
xor
cs
dec
pop
repnz
aaa
ds
adc
and
out
jmp
lahf
xor
ss
das
sub
loope
loope
sub
add
fs
dec
mov
inc
sti
out
lods
movsl
cmp
jnp
pop
cwtl
dec
rcr
xor
data16
pop
pop
mov
pop
jb
xor
fisubs
fsts
add
out
insb
hlt
xor
lock
leave
mov
pop
inc
lock
xchg
xchg
adc
mov
out
lcall
popa
push
clc
mov
ds
pop
sbb
aas
cmp
test
addr16
pushf
xor
lock
pusha
in
mov
sarl
inc
and
mov
dec
sahf
mov
or
bound
dec
cmp
inc
pop
xlat
sbb
xor
lods
rcrb
mov
imul
mov
sub
mov
test
fwait
das
jl
mov
mov
test
and
lret
xchg
call
pop
fnsave
mov
pop
les
ficomps
test
leave
pop
addr16
imul
sbb
ficompl
into
xchg
or
shrb
adc
xchg
mov
inc
lret
add
xor
jno
mov
lea
push
cmp
mov
push
ja
lret
outsb
rep
movsb
add
pop
cmp
cltd
pusha
inc
and
xchg
jl
xor
popa
push
inc
push
in
add
ds
ljmp
dec
scas
push
mov
pop
jne
mov
sti
push
fcompl
mov
stc
mov
imul
xor
aad
lds
push
mov
cld
fcomp
mov
lock
adc
jbe
pop
and
mov
xor
pop
lret
mov
push
push
xchg
std
cmc
daa
push
or
push
inc
vmaxpd
out
push
std
mov
loope
or
push
adc
mov
mov
xchg
subl
or
in
sub
loopne
outsl
lea
call
push
sarb
shl
rcrb
xlat
out
sub
mov
mov
addr16
lret
aam
lahf
and
pop
pop
insl
out
nop
fdivp
mov
fs
cmp
loope,pn
pop
pop
or
inc
pop
hlt
cmp
js
outsl
sub
pop
pop
enter
insl
jnp
adc
sbb
cmp
int3
test
scas
cmp
push
mov
and
adc
test
mov
insl
repz
test
stos
xor
mov
jmp
jnp
push
lock
push
inc
fdivl
cmp
sbb
pop
cmp
jge
adcl
mov
push
jg
inc
outsl
mov
cwtl
sahf
ficompl
clc
lock
fwait
outsl
outsb
mov
imul
dec
mov
dec
pop
push
loop
iret
push
jo
mov
jg
or
scas
pop
es
lahf
mov
cmc
shlb
jo,pn
sbb
ror
push
iret
or
popf
sub
sti
jns
pop
sbb
jmp
jmp
stos
leave
or
scas
ja
jl
mov
mov
mov
pop
ficoms
sbb
shlb
sbbl
add
loope
rol
jmp
cli
ljmp
fidivs
mov
push
aas
leave
or
xorb
cmpsb
scas
mov
sbb
scas
fcompl
xor
cmp
cmp
pop
cmp
scas
test
arpl
mov
push
dec
lret
sarb
mov
es
fmul
mulb
adc
cmp
adc
mov
pop
rcr
cmp
sub
lcall
push
xor
cwtl
dec
shlb
cld
mov
loope
xor
push
pop
or
xchg
clc
xchg
subb
dec
addr16
xchg
cmp
fdiv
out
sbb
fwait
rcl
scas
push
add
push
fsub
icebp
push
mov
and
movsb
loopne
ljmp
or
add
fisttpll
insl
mov
movsl
pop
add
scas
ficompl
jb
dec
pop
add
sub
push
scas
fisubrs
nop
fbld
xorb
adc
imulb
jle
movsl
sub
in
push
scas
scas
flds
xchg
mov
mov
lock
cmp
jp
imul
add
mov
jge
cli
jne
vpmacsdql
lea
mov
cmp
pop
js
fmul
push
mov
hlt
outsb
das
mov
or
adc
adc
cmp
call
adc
cmovs
loope
aas
nop
ret
dec
dec
sub
jnp
add
add
sub
jno
sub
subl
xchg
shlb
shlb
loopne
mul
and
fidivl
add
dec
mov
lock
xor
mov
call
mov
xchg
push
into
xor
shrb
add
lahf
and
stos
pusha
adc
xlat
jnp
xor
and
pushf
push
jb
negl
mov
jmp
js
cs
inc
xchg
mov
sub
jbe
push
clc
adcb
sub
lahf
mov
pop
mov
sub
sbb
inc
xchg
jmp
or
flds
cld
push
outsb
cmp
cmp
cltd
icebp
sub
mov
jns
ret
xor
xor
cmpsl
into
dec
leave
lea
fldcw
das
aas
cltd
sahf
movsb
xchg
sub
push
mov
stos
sub
jge
adc
jnp
push
dec
shl
sub
mov
xchg
cld
cld
dec
inc
dec
mov
jno
dec
pop
lret
loop
pop
pop
mov
sbbb
aas
push
mov
lahf
and
jbe
mov
mov
aas
sbb
xchg
movsl
cmp
js
adc
scas
arpl
ret
orb
je
or
cli
lret
jg
mov
push
in
pop
or
mov
or
jecxz
mov
mov
repnz
in
push
jle
aad
mov
lock
arpl
adcb
sub
sub
jmp
lock
jl
insl
or
jns
test
ds
push
sahf
and
ret
xchg
ret
imul
jmp
cmp
pop
ds
ljmp
inc
cld
std
xchg
lcall
and
push
pop
aad
inc
stos
pushf
dec
sbb
test
and
lcall
sub
mov
ds
and
push
mov
repz
int3
loopne
lods
movsl
pushf
push
and
push
adcl
mov
jle
shlb
adc
pop
push
test
jnp
sub
mov
les
scas
mov
leave
ficoml
jge
inc
jle
enter
test
mov
cmp
dec
rcrb
out
into
sbb
addr16
xlat
jge
fadds
inc
push
push
dec
dec
pop
cmpsb
repnz
dec
or
outsb
lock
xlat
pop
mov
cmp
inc
shrb
cmp
cs
xor
call
arpl
jge
outsl
pop
sub
inc
pop
mov
lret
jmp
add
loop
lds
cmp
mov
adc
push
jne
pop
aad
and
xchg
pop
aam
mov
outsb
sub
or
and
js
dec
out
sbb
ret
out
repz
es
rcrl
sbb
xlat
adc
push
in
adc
xchg
addr16
inc
int
mov
jns
or
push
aam
loope
clc
mov
test
ret
xor
or
push
cmp
sub
clc
dec
xor
rep
lret
sbb
in
xchg
fcomps
stos
loopne
jae
fs
lock
add
jbe
mov
test
lahf
adc
jmp
sbb
pop
fmulp
pop
push
mov
jl
in
mov
leave
inc
out
add
jbe
in
xor
aaa
pop
push
adc
mov
fcoml
jae
shlb
mov
xor
sub
push
or
jns
leave
ret
loopne
lret
xor
psrad
sbb
xor
or
push
push
icebp
pop
xchg
les
pop
je
or
sahf
lret
stos
mov
or
pop
lods
mov
bound
shll
or
rolb
add
pop
push
lods
aad
xor
xchg
rcrb
lret
jo
rorl
inc
sbb
pop
mov
hlt
hlt
mov
lea
popa
mov
adc
stos
ja
jne
push
xchg
ret
add
jnp
add
mov
xchg
fists
outsb
sbb
insb
jns
jecxz
hlt
xor
mov
gs
cli
cmp
cli
adc
fsubrl
js
fidivrs
mov
inc
rorb
stos
cltd
adc
xchg
sbb
pop
push
add
or
int
std
loop
leave
xchg
jge
lods
sub
popl
repz
cmp
adc
push
push
xchg
clc
mov
inc
or
aas
mov
cltd
jl
stos
je
sub
mov
or
cmc
out
test
adc
fcoms
jmp
das
mov
cmp
xlat
lds
push
insb
int3
and
adc
shlb
inc
movsb
scas
or
add
jp
sahf
sarb
inc
lret
dec
in
ljmp
inc
int
cmp
fldl
aaa
shl
int
push
pop
movsl
scas
xchg
pop
mov
aad
add
or
ja
sahf
xor
xchg
pop
rol
push
or
imul
lcall
movsb
xchg
jl
enterw
andl
leave
insl
inc
adc
pop
daa
loopne
aaa
lds
xor
inc
mov
jae
shrl
pop
sub
leave
mov
mov
cmc
sbb
or
mov
xor
jp
fstpt
sub
pop
call
enter
stos
sub
outsb
loopne
push
adc
sub
fs
ds
xchg
dec
js
cld
fimull
in
enter
add
pop
ret
insb
jb
scas
vmovsd
mov
mov
mov
imull
push
test
iret
inc
push
jno
push
or
pop
je
into
js
push
jmp
movl
movsl
loop
decl
mov
mov
xor
fsubl
stos
jmp
xor
jne
mov
dec
pop
pop
loop
repz
jle
mov
cmp
movsl
aad
or
mov
int3
xorb
xchg
mov
test
push
sbb
hlt
and
cmpsb
jle
xchg
push
fcmovnb
pop
xchg
xor
mov
push
xlat
pop
adc
xchg
add
sbb
addr16
add
fldenv
jp
sub
ret
jl
sbb
adc
fdivs
dec
nop
adc
xchg
sbb
pusha
shll
int3
dec
adc
lret
add
sub
sahf
push
mov
xlat
push
out
dec
dec
movsl
xor
sbb
imulb
push
inc
mov
movsl
mov
test
lods
outsb
pushf
in
jge
in
jecxz
adcl
cmp
aad
pushf
push
push
sub
mov
xlat
out
jb
sar
xchg
push
fwait
push
sbb
pop
jp
and
push
sub
push
int
jbe
stc
pop
mov
cli
aaa
push
inc
push
pop
dec
add
sarl
decb
or
mov
in
loopne
xor
mov
mov
mov
pop
cmp
jp
xor
rcll
cmp
pop
and
mov
mov
xchg
xor
lcall
popa
scas
jl
dec
and
lahf
pop
out
inc
push
xchg
xor
lret
mov
fisttpl
adc
or
xchg
jmp
mov
ficomps
mov
mov
xchg
mov
je
sub
lret
pusha
mov
push
add
mov
rolb
sub
insb
iret
jmp
mov
xlat
push
rcll
dec
test
shrb
pop
lods
in
cmpl
sbbl
cmpsl
jno
mov
mov
add
clc
lds
xor
pop
or
and
push
sarb
cmp
in
jg
or
ss
pop
aam
jbe
sti
call
pusha
and
rolb
scas
cwtl
jbe
divl
inc
popf
pushf
dec
les
mov
add
push
shrd
shrb
stos
test
repz
test
je
mov
out
shlb
sub
out
sbb
xchg
in
inc
push
push
lret
int
sub
out
int
ret
xor
imul
mov
sbb
rcll
xchg
cld
or
adc
data16
pop
mov
inc
and
fdivl
pop
rcll
pop
xchg
scas
adc
mov
add
xchg
dec
out
xchg
pop
xchg
incb
cmpsl
mov
add
pop
imul
out
in
mov
push
adc
fs
push
fisttpll
pusha
jecxz
add
fcompl
inc
jl
pop
mov
int3
xchg
cs
lds
lcall
in
stc
adc
inc
cmc
mov
adc
sbb
in
sub
dec
push
jo
adc
push
ss
popf
sbb
cmpsl
es
jecxz
mov
in
cmp
push
mov
lock
jle
ret
rclb
add
outsb
mov
arpl
pop
test
jbe
js
aas
mov
aaa
push
stos
insl
repz
xor
pop
inc
cmpsl
xchg
aad
push
cwtl
lahf
cmp
xchg
out
xlat
pop
daa
or
jl
fdivs
outsb
bound
dec
xchg
idivl
scas
mov
fdivr
loope
and
mov
in
loope
scas
xchg
mov
out
ret
inc
push
cli
sbb
push
inc
movsb
aam
mov
ret
shrb
data16
pop
mov
loop
ja
pop
xchg
and
test
fwait
dec
and
je
aaa
xor
icebp
insl
xor
fstpt
inc
dec
test
fsubrp
les
sbb
mov
cmp
sub
mov
jp
mov
push
push
mov
out
sbb
lods
mov
movsl
icebp
cmp
xorl
call
inc
mov
adc
dec
movsb
shrb
sbb
add
idivb
pop
arpl
imul
outsb
add
mov
push
inc
mov
inc
aam
xor
orl
mov
add
jo
out
dec
push
jb
arpl
cmp
notb
inc
cwtl
sahf
xchg
loop
and
pop
jbe
dec
scas
pusha
mov
imul
addr16
push
xabort
fmull
gs
sub
imul
inc
lds
ljmp
mov
jno
push
loopne
divl
mov
popa
sti
lds
sbb
int
pop
or
push
jge
dec
inc
xchg
rorb
ljmp
repz
jne
mov
fdiv
dec
mov
mov
testb
loope
xor
mov
add
mov
or
sub
xor
repz
call
mov
imul
nop
aaa
lahf
and
xchg
sub
jecxz
xlat
sbb
adc
inc
adc
sbb
int
pop
mov
iret
mov
push
call
mov
sub
cmp
jle
mov
inc
pop
pusha
xchg
push
sub
pushf
movsb
add
and
insl
mov
in
push
subb
jne
aad
lahf
das
jp
aad
mov
cmp
jae
sub
lods
ja
push
ret
lds
adc
push
xor
fstps
and
aas
pop
jae
outsb
sahf
and
sub
pop
xor
fldenv
pop
test
lahf
loopne
clc
inc
das
pop
out
cmp
inc
dec
xor
mov
fistpll
stc
js
adcl
sbb
mov
add
outsb
push
push
sub
or
xchg
jg
pop
xchg
push
cmp
lret
lret
jmp
in
dec
repz
outsb
sbb
jno
arpl
pop
call
ljmp
mov
dec
fxch
jb
adc
jbe
sub
mulb
xchg
jg
test
mov
xchg
aam
incb
push
enter
add
dec
sub
pop
xor
ja
sbb
pop
add
pop
sub
xchg
jo
mov
ret
sub
push
icebp
push
cmp
push
jbe
add
push
cmp
mov
insb
popf
pop
cwtl
or
mov
or
imul
iret
sar
loopne
cli
xchg
add
aad
or
jecxz
or
sbb
cmp
arpl
mov
mov
xchg
bnd
fstps
mov
aam
add
xchg
cmpb
cmp
xchg
daa
lods
push
call
mov
and
and
outsb
xchg
xchg
and
dec
xchg
sbb
add
mov
xlat
popa
pop
clc
call
xlat
xlat
dec
scas
and
cmpsl
jp
push
or
lret
adc
or
push
mov
adc
adc
adc
dec
inc
dec
jnp
adc
add
je
sub
cmp
push
mov
sarb
jo
mov
mov
and
stc
and
rcr
out
lods
inc
inc
ds
iret
rcr
ja
test
xchg
mov
dec
adc
rclb
ljmp
ret
sbb
pop
inc
movsl
lods
cmp
push
add
and
mov
mov
ja
sub
jnp
adc
mov
cmp
push
lret
loop
xlat
pop
fcomps
xlat
xchg
jbe
xchg
loope
orb
inc
repnz
push
xor
add
push
out
lods
aaa
out
mov
lods
inc
push
and
daa
cmp
inc
icebp
push
fyl2x
roll
hlt
sbb
mov
pop
inc
dec
jl
jg
jge
fst
popa
push
outsb
into
inc
mov
mov
mov
push
out
mov
je
repnz
sar
clc
sub
xor
and
jno
mov
xchg
fs
mov
xor
jnp
test
mov
xchg
push
clc
jecxz
jno
push
pop
cmpsb
aam
lods
insl
xchg
cmpsl
int
adc
fcomps
lret
jb
cmovp
mov
popa
in
cmpsl
pop
jns
in
mov
mov
repz
ficoml
add
xchg
adc
sbb
ljmp
sub
loop
sbb
outsb
jb
push
cmpsl
aaa
lods
xor
xlat
ret
mov
data16
dec
ss
loopne
jge
jae
fbstp
out
fnstenv
enter
dec
jl
inc
sub
outsl
lret
push
sub
cmc
cli
sub
dec
push
push
lds
pop
dec
sbb
cld
or
pop
popa
pop
or
std
sbb
jns
sbbb
rclb
pushf
sub
loopne
jle
je
fsub
adc
imul
sub
dec
add
aaa
inc
and
mov
push
enter
sti
sub
out
gs
iret
inc
pusha
fldcw
or
mov
add
cmp
xchg
repnz
or
sbb
aad
mov
or
jno
dec
cmp
lahf
lock
sub
xor
mov
mov
or
or
mov
ret
fiadds
cmpsl
rep
xlat
jl
ja
ja
aam
fists
dec
arpl
push
cmpsb
insb
jo
aam
negb
sti
popf
je
and
push
push
mov
int
cltd
inc
add
add
xchg
sbb
icebp
popa
jae
or
pop
xlat
aad
out
imul
lret
fs
std
dec
js
cmp
cmp
aaa
dec
ficomps
shlb
pop
jb
mov
dec
sbbb
adc
inc
or
mov
mov
les
jmp
cmc
fistpll
cmp
inc
inc
inc
stos
mov
scas
imul
inc
int3
adc
mov
aam
cmp
sbb
inc
add
xor
cli
fisubrs
fwait
sbb
push
add
lods
leave
mov
std
cltd
or
enter
dec
orl
adc
sti
fisttps
lea
sysexit
movsl
ret
jne
shll
int
cmp
or
je
int
mov
push
pushf
les
push
pop
jg
mov
in
push
xchg
es
std
jmp
mov
sbb
fisttps
xchg
mov
adc
cld
ss
sbb
lahf
lods
cmp
mov
ds
mov
jge
jg
sbb
push
mov
pop
les
fsub
pop
lahf
mov
fmuls
je
shll
insl
mov
sub
xchg
popf
fbstp
mov
lcall
mov
les
in
inc
add
adc
sub
icebp
popf
daa
sub
and
adc
push
insb
inc
scas
addl
fidivrs
push
xchg
popf
test
rcrb
adc
xchg
scas
ljmp
iret
fsts
mov
iret
pushf
lret
xor
add
bound
pop
inc
fnsave
sbb
sub
mov
out
add
ds
sti
cmp
in
gs
in
in
test
mov
fdivrs
push
testb
lahf
imul
les
mov
cmp
xor
add
je
sbb
stc
enter
sub
hlt
or
push
hlt
cmpsb
mov
int
ja
lea
cmpsl
enter
mov
inc
out
pop
mov
lds
mov
mov
addr16
inc
adc
cmp
xchg
negl
popa
inc
or
xchg
or
lcall
jecxz
in
lcall
jle
jmp
xchg
sub
xor
and
push
lcall
xchg
scas
add
add
test
sbb
test
in
cmp
lea
mov
je
xchg
popf
xchg
scas
ret
es
jno
rclb
xchg
icebp
cmp
sbb
subb
movsl
ret
ds
sti
leave
dec
fstps
dec
stos
jb
xchg
mov
jmp
in
mov
imul
add
sbb
fdivrs
mov
leave
insl
js
sub
push
enter
mov
orb
int
sbb
roll
pop
and
xlat
mov
mov
mov
dec
sar
lods
enter
int3
add
ss
lret
xchg
data16
call
cmp
push
or
lret
std
orl
jl
xchg
dec
scas
incb
sbb
mov
sbb
mov
aas
test
mov
xorb
sbb
and
inc
cmp
sbb
out
sbb
mov
mov
out
adc
ret
jmp
sub
mov
out
or
fsubl
and
xchg
lcall
aas
jbe
loopne
stos
loopne
pop
push
cltd
adc
rorb
mov
sub
enter
adc
pop
lods
dec
sub
sbb
lds
fst
into
pop
add
push
loop
add
add
lcall
adc
out
inc
or
pop
inc
mov
sahf
mov
movsb
sahf
mul
or
xor
pop
fldl
lret
ja
dec
inc
pop
sub
cmp
lret
xchg
lret
inc
iret
xchg
rcll
and
xchg
xor
push
mov
push
sbb
push
cmpsb
popa
cs
sub
ja
push
pop
iret
xchg
cwtl
adc
push
mov
ficomps
push
mov
sbb
jge
pop
movsb
push
dec
loope
or
loopne
and
and
cmp
int3
pop
cmp
cmp
arpl
jg
addr16
loop
xor
xlat
mov
lods
cmp
sbb
cwtl
mov
push
mov
xchg
xlat
or
sub
push
xor
sub
mov
pushf
fs
lods
jmp
jl
bound
cwtl
pusha
inc
push
mov
pushf
cmp
pavgb
imul
add
dec
je
filds
ror
lods
shl
pop
or
add
mov
lods
adcl
fcoml
ret
mull
out
aaa
cmp
movsb
add
push
jnp
mov
pop
sbbl
filds
push
jo
and
add
adc
jno
out
jns
add
xchg
add
bnd
je
or
sbb
imul
rorb
cwtl
push
sbbl
hlt
daa
push
loop
pop
sub
shll
xchg
sbb
dec
or
push
fsubrl
call
je
xchg
pop
repnz
xlat
fists
push
sub
test
pop
call
ds
add
es
sarb
cmp
ud1
es
shr
bound
repnz
xor
lock
xchg
incb
cmp
mov
mov
cmp
xchg
rcll
mov
and
aaa
scas
in
pop
mov
cmp
fwait
inc
jg
push
inc
add
arpl
inc
xor
fistl
mov
mov
lds
test
mov
fwait
xor
xchg
inc
and
enter
mov
jg
popf
inc
stc
xor
dec
int3
int
sub
mov
jecxz
xchg
pop
inc
push
aam
mov
adc
cld
xor
scas
mov
push
cmp
dec
xchg
dec
sarl
push
mov
mov
sub
jmp
jp
ljmp
push
outsb
ljmp
sub
sbb
fs
xor
dec
daa
adc
jmp
jnp
inc
jne
push
pop
or
lea
ficomps
cmp
push
es
insb
or
sub
outsl
xchg
shll
mov
mov
push
or
sub
into
fldl
jmp
pop
insb
fnsave
cld
jnp
mov
dec
pop
pop
or
or
pop
inc
mov
xor
add
xor
xlat
fwait
pop
bound
notb
test
stos
andl
shr
xor
push
cmp
adc
inc
push
inc
js
inc
bound
jp
lret
dec
int3
lds
movsb
jno
inc
arpl
add
xor
scas
rcrl
dec
popf
inc
mov
lods
out
lods
std
clc
sub
negb
mov
jp
mov
arpl
pop
movsl
inc
push
lock
xchg
ss
dec
jo,pt
inc
stos
mov
or
daa
mov
je
inc
psrlq
jmp
shll
sbb
and
ret
mov
mov
mov
cld
jne
or
idivb
mov
gs
pop
mov
stos
mov
xchg
nop
out
jbe
cmp
sbb
mov
fdivr
lret
int
and
in
or
mov
adc
dec
push
sub
jp
lock
loop
sbb
in
test
adc
or
hlt
out
adc
sbb
add
cli
and
mov
jp
out
sub
add
xor
ret
ret
mov
mov
sub
mov
lods
fidivl
mov
jle
cmp
ljmp
fwait
in
in
and
loope
push
push
arpl
dec
sar
cmp
jl
sahf
add
mov
out
mov
xlat
into
jp
and
je
test
sti
cmp
int
repz
nop
pop
pop
fwait
and
and
aam
mov
add
or
fldl
push
dec
pop
subl
popa
sbb
pusha
outsb
adc
xlat
movsb
xor
lock
insl
stos
or
dec
sub
push
out
sbb
movsl
sub
jbe
out
push
movsl
adc
mov
jns
push
mov
or
mov
mov
push
jl
mov
fnsaves
and
inc
pop
fsubrs
add
or
and
mov
jne
xor
and
hlt
xchg
lret
dec
xor
iret
dec
mov
jle
inc
mov
push
xor
inc
dec
mov
adc
fadd
imul
fwait
push
sub
mov
xchg
in
or
inc
das
mov
je
jl
loop
es
jmp
mov
sub
stc
push
rcrb
aam
adc
and
xorl
addr16
and
lods
xchg
std
mov
mov
lock
lret
mov
sti
les
pop
arpl
sti
mov
push
mov
aam
and
das
xrelease
outsb
mov
pop
push
mov
sahf
pusha
das
pop
cli
leave
mov
fsubp
sahf
push
mov
sub
cli
inc
popf
sbb
insb
sbb
and
and
jecxz
mov
push
call
shlb
mov
mov
inc
mov
lods
add
pushf
xchg
mov
push
mov
pop
or
xchg
mov
inc
mov
adc
insl
loopne
mov
inc
fldenv
lods
and
inc
adc
push
enter
aad
aad
ljmp
das
je
push
push
pushf
push
fidivs
xchg
sub
jno
pop
aaa
mov
aas
cli
and
leave
mov
lock
rolb
and
xchg
pop
mov
and
ljmp
lret
jnp
mov
les
ret
insl
rcrl
add
adc
in
into
pop
dec
inc
mov
mov
sahf
lret
loopne
shl
push
sahf
aas
lods
std
out
push
xchg
dec
in
bound
push
mov
jle
sbb
test
pop
mov
test
inc
adc
jge
dec
or
les
jnp
or
push
popf
xchg
inc
jns
dec
mov
pop
and
outsl
lahf
dec
outsb
cmpsl
pop
push
xorb
push
outsb
loope
inc
inc
imul
jp
push
add
popf
jmp
mov
jno
or
idivl
sbb
jp
cmpsl
mov
add
scas
stos
psllq
and
sarl
adc
ret
into
xor
imul
xor
loopne
cmc
mov
lods
lret
dec
in
inc
push
inc
stos
stc
add
push
cmp
cltd
cmp
mov
mov
xchg
fisubrs
fs
xor
sbb
fldl
xor
xchg
add
sbb
jne
jl
push
sbb
ret
push
rorl
push
jae
movsl
or
sub
f2xm1
mul
push
xchg
mov
sbb
pop
add
mov
loope
movl
xchg
inc
sub
pusha
nop
mov
lahf
movsl
test
cmp
mov
and
cli
lock
faddl
divb
add
jne
cltd
jae
out
mov
jo
repz
inc
shlb
in
push
loope
mov
dec
rclb
or
loop
jl
mov
xchg
insl
cmp
push
scas
xchg
jecxz
mov
jb
outsl
movsl
or
push
gs
mov
shlb
out
jge
xor
inc
and
inc
jmp
ds
ja
jno
inc
pop
scas
aam
das
lods
xor
test
mov
xchg
xor
rep
xor
pop
ficomps
insl
adc
or
push
push
lds
outsl
call
jo
scas
add
psraw
repz
mov
jno
insl
addr16
sub
mov
sub
mov
sbb
mov
inc
xchg
adcb
in
loopne
imul
shlb
mov
flds
lret
xchg
into
push
fmulp
test
sahf
in
stc
outsb
cmp
lcall
pop
testb
push
repnz
push
adc
push
cld
enter
mov
ss
data16
pop
rol
dec
push
dec
jns
jmp
push
aaa
and
jle
addr16
adc
test
cld
adc
mov
in
out
jl
cmpsl
push
mov
rorl
mov
jae,pt
jg
mov
cmpsb
pop
inc
dec
mov
cmp
dec
push
or
inc
push
int
ss
icebp
cmp
lcall
fwait
add
dec
cs
mov
mov
aad
mov
subl
rcll
psllw
pop
xchg
dec
cmc
int
inc
in
adc
xor
mov
mov
popa
lods
and
xchg
and
mov
aad
pop
clc
or
in
stos
incb
lds
xor
aam
xchg
sahf
push
dec
rcll
fsubl
ss
inc
xchg
sarl
adc
int
lahf
push
push
jo
in
inc
xor
inc
sbb
jne
xchg
les
cmp
sbb
push
jmp
and
scas
les
adc
mov
insb
shlb
cmp
fnstsw
jecxz
sub
cmpsl
imul
mov
mov
and
pop
push
and
out
pop
daa
fidivl
pop
out
call
aaa
jae,pt
popf
call
push
dec
sbb
dec
inc
inc
sbb
adc
fdivl
imul
inc
sbb
jne
lock
rcr
cmp
adc
in
xor
dec
xchg
jg
mov
dec
jae
pop
movsl
popf
ljmp
repnz
pop
dec
cmp
sti
pusha
add
cmpsb
jg
incl
sbb
outsl
sub
cmp
std
jle
sbb
mov
push
js
lret
sub
mov
mov
ficoms
or
dec
mov
adc
negl
push
jle
jno
xor
mov
inc
push
mov
loopne
into
mov
rorb
outsl
and
cmpsl
and
xor
pop
nop
ss
mov
jb
jl
mov
dec
outsl
sub
movsb
xor
mov
and
sahf
sub
or
xor
inc
sub
pusha
adc
mov
out
sub
stos
or
movsb
mov
jecxz
xchg
jns,pn
ss
iret
xor
popa
imul
mov
lea
add
xor
arpl
sbbb
cmpsb
push
dec
pop
xor
pop
out
xchg
bnd
mov
pusha
aas
daa
xlat
lods
inc
pop
in
stos
adc
and
es
loope
hlt
mov
pop
sub
cmp
pop
jmp
roll
rcrl
cmp
xor
mov
nop
lds
call
push
jae,pn
xchg
add
icebp
in
in
xchg
mov
xor
adc
xchg
adc
in
test
or
mov
gs
ja
jle
push
cld
aas
fs
jecxz
mov
pop
ror
repnz
hlt
mov
scas
xchg
dec
cld
das
lcall
sbb
cld
or
les
adc
add
pop
stos
imul
ljmp
sahf
frstor
out
sbb
push
xor
xchg
lret
cmp
cmp
jo
mov
filds
mov
mov
mov
in
mov
push
cmp
push
sub
mov
inc
sbb
arpl
nop
xlat
adc
jp
dec
fistpll
std
add
push
test
adc
lock
incb
sub
or
movsb
je
add
pop
sti
test
ficompl
fadd
cltd
pop
sti
pusha
cwtl
adcl
dec
mov
outsb
push
xchg
sarb
lcall
xchg
shll
mov
mov
jb
mov
mov
fdivrp
arpl
jle
lret
faddl
sub
fs
int3
sbb
pop
cld
or
lahf
and
adc
mov
mov
int3
mov
ja
push
jne
pop
push
ret
xchg
jl
pop
push
and
test
push
add
dec
sub
mov
pop
das
dec
jmp
dec
aam
pop
xor
fdivl
lods
mov
jle
shr
test
jl
lea
pop
xor
mov
pop
pop
sub
mov
daa
xchg
dec
sub
dec
std
jnp
mov
aad
mov
jge
xor
out
mov
lcall
mov
jae
jmp
mov
movsb
push
stc
mov
pop
cmp
ret
test
ret
rcr
xchg
std
xor
scas
movsl
cmpb
es
push
adc
pop
pop
pushf
in
lods
pop
das
test
fdivr
stos
mov
popa
xchg
mov
adc
and
lret
je
cs
push
add
and
and
and
xchg
jmp
cld
ret
loopne
mov
ja
push
mov
inc
inc
imul
pop
addr16
call
pop
sbbb
lds
push
imul
lock
or
push
adc
stos
and
dec
sub
loop
xor
aad
imul
push
and
mov
push
mov
scas
mov
lcall
movsb
cmp
jbe
call
pop
jne
add
mov
jl
or
fs
test
or
aad
outsl
fsubs
sub
adc
out
push
jb
out
adc
into
or
idivl
pop
cmp
or
insb
fcompl
push
pop
add
fdivr
or
jae
sbb
mov
dec
cmpsl
or
cmp
out
dec
jno
xchg
test
scas
out
in
push
xchg
xchg
adcb
sbb
xor
stos
scas
jge
xor
mov
mov
iretw
pop
mov
sbb
xor
jb
dec
dec
jg
imul
divb
mov
scas
je
test
sub
jns
les
inc
jge
dec
popa
fs
cmp
imul
bound
xchg
xor
mov
push
push
out
mov
mov
cmp
jo
push
repz
add
aas
cmp
leave
push
lcall
jae
into
je
mov
mov
std
dec
dec
inc
and
fstpt
movsl
je
sti
push
repnz
ja
and
daa
pop
dec
pop
in
pop
pop
dec
mov
imul
dec
ret
sub
adc
cwtl
ljmp
xor
dec
cmc
aas
mov
adc
xor
ds
and
xor
or
dec
mov
pop
popa
cmp
jmp
pop
lahf
movsb
or
fildll
cmp
sarl
inc
inc
sbb
sub
mov
movsl
sti
rclb
dec
arpl
cmpsl
cmpsl
movsl
sub
mov
add
inc
ja
ret
pop
int3
lds
cmpl
out
add
pop
pusha
lock
and
pushf
sub
lods
and
int
aad
jae
gs
and
repnz
xor
imul
mov
divl
outsb
mov
add
jb
test
fwait
bnd
loopne
rorl
subl
xchg
fistpl
mov
push
add
cs
pop
pop
push
inc
nop
or
testb
jmp
mov
lock
mov
sahf
dec
pop
das
int
ljmp
dec
mov
outsl
fisubs
ss
cmp
movsl
hlt
lret
mov
loopne
cli
mov
jbe
rcrb
in
pop
dec
ret
or
xor
aas
movsb
int
dec
mov
pop
dec
dec
icebp
lret
inc
jge
and
cwtl
jae
mov
pop
or
adc
cld
jle
mov
sbb
fdiv
mov
inc
arpl
fs
or
xlat
inc
loopne
das
js
xor
adc
repnz
cld
lods
mov
mov
sub
insl
mov
data16
cmp
pop
mov
jge
mov
mov
pusha
fcomps
shlb
sbb
xchg
mov
inc
loop
repz
pop
stc
mov
mov
lock
in
mov
test
or
into
adc
filds
jecxz
dec
fwait
mov
mov
movsb
aas
mov
mov
add
mov
pop
int
test
mov
adc
fists
adc
mov
loopne
sub
xor
outsl
sub
addl
lock
xchg
pop
rolb
fs
imul
popf
pop
jg
cwtl
aam
mov
loopne
scas
jg
cmp
push
dec
lret
cmp
jp
mov
sub
das
stc
cltd
and
xor
das
jne
movsl
orb
loop
arpl
sti
fstpl
cmp
mov
mov
cli
mov
lahf
test
scas
xlat
into
xor
xchg
leave
or
sub
inc
repz
int3
ret
mov
dec
jnp
mov
dec
push
ret
lcall
pop
inc
ja
clc
lret
int3
in
mov
clc
cmp
or
cmp
jp
das
add
cmc
test
or
mov
push
call
jle
out
adc
or
mov
popa
mov
pop
xlat
push
or
dec
leave
aaa
jge
push
in
push
adc
into
ljmp
fstpl
or
shr
mov
and
adc
push
xchg
pop
in
adc
push
sub
inc
aam
arpl
into
xchg
and
push
mov
push
loope
pop
xlat
mov
jge
sbb
pop
mov
add
xchg
cmp
insb
push
sub
jecxz
adc
or
or
bound
sbb
xor
lock
cmp
xor
sbb
push
push
popa
xchg
sbb
push
lds
xor
or
sub
inc
or
fs
aaa
cmp
sti
out
add
ljmp
xor
mov
add
shlb
pop
hlt
subl
sbb
fs
ss
cwtl
or
adc
pop
imul
in
clc
adc
mov
out
push
or
dec
pop
lods
mov
xlat
sub
shrd
pusha
jmp
mov
xchg
ror
aaa
outsb
mov
test
pop
mov
cmp
mov
xor
sbb
inc
pusha
push
popa
mov
push
into
cmp
mov
mov
adc
daa
jmp
cmp
bswap
scas
aam
push
or
mov
or
sti
add
jmp
dec
es
mov
pushf
push
adc
dec
in
loopne
shr
cltd
inc
adc
adc
or
pop
sub
leave
nop
data16
push
popa
adc
inc
popf
xchg
xchg
scas
lahf
test
jg
mov
mov
mov
sub
cmp
xchg
jp
in
jg
cmp
das
push
movsl
jno
imul
or
sbb
inc
stos
nop
mov
xchg
push
popf
mov
pop
ss
cs
and
dec
mov
test
inc
imul
ret
or
shl
iret
push
pop
clc
or
test
add
add
fs
gs
icebp
dec
mov
arpl
sbb
outsl
int3
and
push
sbb
jno
pop
or
inc
jno
bound
fistpl
mov
popa
jg
cs
or
insb
sbb
loopne
mov
xchg
test
sti
daa
mov
xchg
cmpsl
jno
mov
pop
cmc
adc
pop
pop
test
daa
and
data16
mov
xchg
in
iret
sbb
cmp
jmp
fldcw
jmp
shrb
gs
out
sbb
jae
inc
dec
vpmacsdd
push
bound
mov
push
adc
out
mov
rorb
outsl
popf
and
test
sbb
adc
repz
and
push
test
and
fnclex
mov
and
ficoml
out
mov
in
shr
fidivrl
add
cmp
sbb
mov
les
jle
mov
push
xor
jg
out
jge
stc
rcr
pop
mov
sub
rol
and
fiaddl
gs
repz
pop
pop
sub
or
add
jne
lds
out
inc
es
js
pop
imul
sub
mov
dec
shr
cmp
mov
dec
mov
pusha
in
sbb
xor
sub
lods
mov
in
js
pop
adc
mov
pop
jge
dec
es
das
mov
inc
mov
push
jl
leave
test
inc
xor
jbe
pushw
push
addr16
or
mov
xchg
sbb
std
mov
push
dec
cwtl
imul
xor
mov
aad
mov
xchg
mov
sbb
mov
jns
fists
scas
into
mov
inc
sbb
push
rorb
sbb
lcall
mov
cmp
inc
mov
in
out
add
scas
movsl
nop
and
pop
cld
push
mov
ljmp
xor
sub
xlat
mov
sbb
imul
movsb
or
adc
dec
jns
mull
adc
out
inc
les
add
ret
xchg
mov
pop
out
mov
lock
fldcw
idivl
std
mov
inc
pop
inc
xor
rcrl
or
out
pop
cmp
push
arpl
fdivr
dec
cmp
xor
and
test
fnstsw
adc
sub
fsubr
mov
scas
adc
jle
pushf
pusha
adc
sbb
mov
fists
dec
push
dec
loopne
fdivr
icebp
idiv
fistl
mov
js
test
bound
xchg
mov
test
inc
xor
lock
addr16
fbld
shrl
mov
sti
push
jl
cmpxchg
xchg
push
push
stc
pop
cmp
xor
shrb
flds
negl
bound
or
dec
test
push
mul
pushf
arpl
iret
inc
sub
jg
jae
sub
adc
add
sub
fcoml
jae
rcrb
jp
pop
aaa
mov
and
xor
fs
ljmp
dec
inc
push
push
mov
xor
cmp
jo
iret
fs
iret
cwtl
imul
push
sbb
inc
bnd
mov
pop
out
push
jmp
dec
jmp
jmp
into
aad
sti
sbb
dec
pusha
fnstsw
jmp
or
sar
or
adc
lock
sahf
inc
inc
lahf
sahf
adc
sub
adc
test
pushf
out
repnz
push
mov
xorl
jbe
mov
mov
cmpsl
loopne
xchg
aaa
ret
decl
fcmovbe
sbb
jbe
sbb
xchg
test
ret
push
lods
iret
ret
ret
mov
arpl
xor
subb
mov
rclb
fidivs
call
jg
inc
sub
ljmp
pop
push
pop
ret
ljmp
fwait
jg
dec
jb
mov
xor
shlb
xor
inc
icebp
out
dec
mov
stc
add
mov
jg
lds
pop
xor
adc
gs
mov
push
jmp
movsl
out
ficoms
sbb
imul
jne
jae
pop
add
inc
scas
sub
lss
xlat
lods
xchg
test
or
pop
and
popa
adcb
xchg
xchg
fisttps
jmp
dec
das
mov
xor
xlat
dec
cmp
mov
div
in
xchg
pop
jge
lea
add
shr
insb
mov
add
fisttps
push
dec
sbb
jb
stos
lock
sbb
sbb
cld
cmpl
push
cltd
mov
and
mov
pop
sbb
sbb
outsb
jp
sub
mov
out
sub
xor
aas
dec
test
push
pop
cmp
pusha
mov
lret
sti
js
stos
xor
mov
pop
sar
loop
jecxz
jmp
mov
movsl
inc
cltd
ficompl
mov
mov
mov
cmp
mov
cmc
scas
inc
cld
add
mov
push
inc
movsl
in
push
inc
mov
or
lea
rorb
or
mov
jnp
adc
rcll
subb
lahf
mov
ret
jne
scas
cli
repz
xchg
jo
das
xchg
mov
or
pop
push
xchg
mov
les
pop
and
dec
js
pop
and
xchg
jb
movsl
pop
out
adc
jge
pop
ljmp
jp
push
outsl
lea
and
dec
push
repz
ret
dec
mov
push
ss
and
inc
lahf
push
sbb
sbb
lret
decb
adc
lds
mov
adc
sbb
lret
fidivs
test
jmp
rorb
in
movsl
test
dec
pop
ds
not
insb
in
in
mov
sahf
ljmp
icebp
jo
out
pushf
shlb
or
adc
xor
jbe
inc
or
insl
imul
jne
xor
push
push
movsb
xchg
std
fwait
stos
xor
fnstsw
push
icebp
jbe
cld
std
test
push
sub
xchg
sub
jne
divb
nop
jge
pusha
dec
in
push
icebp
hlt
add
js
pop
cmp
sahf
jo
sbb
dec
sbb
les
fcomp
and
gs
sub
stos
lea
lahf
clc
sub
sahf
push
je
iret
mov
hlt
jb
dec
insb
push
jecxz
jae
mov
jl
mov
sbb
ror
push
xchg
sti
mov
insl
or
out
into
mov
fcomps
out
jecxz
and
jle
wrmsr
pushf
xor
cwtl
push
ss
xchg
pusha
dec
xor
lods
lcall
push
lock
aaa
mov
dec
mov
xchg
shlb
jl
movsb
fwait
and
sub
inc
add
jbe
repz
mov
adc
or
mov
mov
dec
insb
out
mov
xor
lods
rclb
loopne
cmp
fimuls
inc
jle
test
bound
cltd
in
inc
dec
inc
dec
mov
mov
cld
enter
ret
sbb
stc
xchg
fwait
adc
arpl
sub
cltd
shlb
dec
adc
mov
scas
or
popa
fstpt
cmp
cmc
stc
mov
hlt
mov
outsb
sub
dec
mov
mov
imul
mov
xor
addr16
sahf
mov
jp
jle
jg
movsb
stos
fwait
push
sbb
adc
mov
ret
cmc
inc
mov
inc
adc
mov
add
iret
pop
mov
rol
mov
divl
ret
icebp
loope
pop
in
out
xor
cmp
add
std
dec
inc
inc
aad
adc
adc
or
mov
and
xor
insb
push
out
negb
mov
mov
cmpb
in
pop
pop
ret
fnstcw
rorl
jg
inc
sub
ds
orl
ljmp
in
icebp
iret
loope
popfw
inc
loope
fstl
cmp
xchg
test
in
mov
sti
push
push
divl
xchg
cmpsl
push
mov
add
lret
fcmovnb
into
lret
mov
add
call
cltd
push
test
pop
insb
or
iret
mov
pop
add
jns
popa
outsb
dec
dec
cmc
mov
jge
fimuls
add
xor
out
es
inc
sub
ret
lret
push
sbb
add
mov
jp
scas
inc
jb
push
test
dec
cmp
lea
xor
jp
inc
leave
mov
sahf
lods
push
popf
filds
and
lret
mov
inc
xor
add
test
mov
iret
mov
movsl
xchg
inc
pusha
xchg
push
rorb
mov
fisubrl
mov
mov
and
stc
shlb
adc
data16
jno
fbstp
sti
xchg
je
cmp
xchg
jnp
shrl
and
dec
cmp
outsb
mov
mov
add
push
dec
divb
lods
jl
ret
xor
xor
inc
bound
into
shll
popf
in
sub
and
insl
inc
fldenv
scas
sbb
mov
mov
addr16
ss
movsb
jne
push
lods
scas
hlt
pop
pop
jg
andl
pop
shlb
mov
rcrl
notb
lret
call
sbb
outsl
jae
and
xor
pop
jmp
je
sbb
xlat
jnp
cltd
std
push
aaa
test
aas
shll
jle
jnp
icebp
push
jle
xor
in
lds
test
iret
xchg
fnsetpm(287
shrd
jmp
mov
adc
mov
lds
sub
out
inc
js
lods
cmp
or
jne
mov
push
ficompl
cltd
jl
out
dec
insl
add
add
adc
xor
mov
outsl
lahf
sbb
stos
fs
xor
out
inc
jge
pop
pushf
test
cmp
dec
mov
cmpsl
add
mov
lods
or
pop
mov
cltd
cmp
and
sub
outsb
push
imull
cs
repz
repz
hlt
fidivrl
adc
and
add
mov
call
sbb
jp
loope
mov
lods
mov
imul
aam
arpl
jne
xor
dec
sti
les
mov
in
imulb
insl
int3
jb
loopne
add
sbb
inc
and
push
ss
add
add
jo
int3
sbb
mov
pusha
add
popa
int
xor
pusha
pop
loope
push
mov
cli
enter
push
or
popa
sbb
xchg
lds
stos
mov
mov
rclb
ss
es
pop
das
data16
mov
lock
ja
dec
jge
inc
mov
sbb
mov
inc
fists
fildl
popa
sbb
mov
push
and
or
mov
push
pop
aas
shl
jp
dec
push
dec
adc
push
mov
ja
dec
je
xchg
rclb
out
testb
inc
adc
daa
xor
mov
and
xchg
lret
xor
jo
xor
push
test
dec
cmp
pushf
ficoml
notl
scas
push
inc
xchg
mov
mov
adc
repz
jg
xchg
pop
push
pop
iret
mov
dec
cwtl
es
cli
fnstsw
or
and
mov
lret
sti
les
popa
ds
mov
jmp
pop
xchg
cmpsb
push
scas
xor
jae
cmpsb
cld
je
repnz
movsb
xchg
sbb
mov
xor
mov
dec
jbe
xchg
mov
mov
push
push
pop
or
adc
outsl
dec
stc
int
int3
sub
mov
jo
inc
mov
and
cmp
insl
jecxz
incb
mov
jb
cltd
inc
jno
push
icebp
in
loop
mov
dec
orb
sub
push
into
icebp
movsl
adc
cmp
mov
cs
stos
mov
icebp
sbb
leave
xor
mov
push
mov
add
dec
aas
and
popf
sbb
arpl
ret
sub
test
and
push
sub
inc
push
movsl
int
nop
out
dec
cltd
xchg
jg
push
pop
ss
mov
lds
dec
test
mov
or
cmp
in
insl
icebp
cmc
sub
aam
enter
dec
inc
sahf
sbb
xchg
and
push
xchg
outsl
aaa
and
add
fwait
push
pusha
faddp
out
fsubl
cwtl
sub
out
icebp
in
sub
shlb
clc
xor
inc
addr16
sbb
jle
or
aaa
out
and
sub
scas
xchg
inc
sti
rcl
movsb
test
lea
mov
push
out
push
imul
adc
pop
adc
cmp
sbb
les
in
jp
lahf
mov
popa
xchg
push
fcmovnbe
stos
mov
mov
pop
insl
jne
pop
ret
popf
fmull
xchg
adc
ret
js
nop
xor
sbb
mov
out
cmc
and
mov
test
shll
out
pop
push
movsl
rcll
mov
outsl
push
shlb
fidivs
xor
xor
adc
push
jo
add
push
or
imul
inc
call
sub
ds
sub
mul
push
gs
stos
test
incl
push
fstpt
dec
fisubrl
enter
mov
pop
jp
mov
mov
rcrl
repz
insl
push
loop
inc
mov
mov
ret
jle
fwait
rol
or
lret
push
into
xor
insb
adc
push
jno
adc
mov
les
cmp
ret
dec
inc
stos
add
icebp
mov
sahf
fnsave
cli
inc
pop
sarl
mov
xor
std
sbb
repz
test
and
popf
cld
loop
mov
cmpb
gs
push
dec
xchg
cmp
cmp
push
jp
jbe
xchg
cld
rolb
push
stos
fdivrl
push
loopne
push
mov
movsb
int3
stc
fsubr
out
divb
cwtl
and
sub
inc
mov
pop
out
mov
jb
lahf
xchg
in
push
pop
sub
xor
xor
push
test
in
jae
aas
popf
rcrb
stos
push
add
shlb
adc
fsubl
shl
rolb
xor
mov
sahf
xor
mov
test
mov
add
lds
xlat
push
xchg
add
fisubrl
aas
sahf
int3
push
xor
test
push
cmc
inc
adc
mov
es
bound
hlt
call
sub
out
push
out
scas
ss
ret
bound
push
pop
outsb
push
shll
adc
jbe
stos
lcall
ds
subl
xor
int3
adc
sbb
mov
repz
push
push
sarl
lock
xchg
shlb
inc
xorl
lret
insl
xor
rorb
jle
sbb
lahf
in
aas
fistpl
insl
negb
sbb
pop
dec
xlat
mov
xchg
or
mov
mov
mov
mov
jbe
xor
lahf
push
test
mov
stos
test
in
inc
mov
sub
jl
cmp
cmp
icebp
add
pop
data16
cmp
cmp
adc
jb
push
xor
add
push
xor
or
jnp
mov
mov
mov
insl
dec
mov
cmp
test
movsb
das
mov
das
mov
adc
mov
cmp
rol
pop
sbb
mull
pop
xlat
lods
loop
jge
out
pop
stc
mov
jmp
loope
or
adc
scas
push
pop
jle
aam
jno
sbb
mov
dec
sub
fcom
arpl
cli
shrl
test
aad
push
jo
push
cli
xchg
lds
add
out
stc
aas
xchg
out
stos
jl
push
notb
stos
test
shrb
push
lock
out
xchg
xchg
ss
mov
xchg
cmp
subb
das
lock
dec
ret
xchg
dec
mov
movsb
cmpsl
ffreep
push
dec
cmp
push
push
loopne
cwtl
cmc
jo
mov
add
lock
jbe
sub
clc
insb
lcall
lret
and
sub
into
add
ds
stos
xchg
and
xchg
scas
cmc
pop
push
mov
sbb
outsb
ja
insl
int
cltd
es
leave
xchg
cmp
jl
jno
scas
aam
cltd
les
mov
xor
aad
jbe
sbb
dec
addr16
mov
les
sbb
popf
sub
fcoml
test
cmp
inc
xor
sbb
mov
dec
sbb
nop
out
dec
fstl
adc
cmp
xchg
mov
ja
mov
mov
dec
iret
popf
cmp
sub
pop
lods
jge
cmpsb
fs
into
mov
ss
rclb
aas
stos
in
push
mov
pop
lods
pop
add
xlat
mov
js
test
pop
div
stos
loope
popa
cltd
or
pop
scas
adc
dec
push
add
adc
pop
mov
cmp
ljmp
das
mov
cmpsb
jp
mov
cmp
jns
stc
and
lcall
sti
jg
mov
rcll
mov
pop
adc
bound
adc
adc
ss
sub
xchg
lcall
add
stos
jns
clc
rcll
push
add
dec
fs
dec
repz
mov
insl
ss
lret
lods
xchg
inc
fisubs
leave
sbb
orb
imul
inc
or
xchg
into
sbb
bound
pop
sub
fnsave
cmp
dec
inc
fwait
adc
sbb
pop
and
xchg
cmp
sbb
cld
in
nop
pop
stos
sub
or
enter
divl
dec
push
add
movsl
pop
lock
into
sti
or
inc
jmp
fadds
mov
bound
add
mov
mov
adcb
scas
xchg
lahf
jo
out
cmpb
subb
inc
mov
or
dec
popa
cli
int3
add
sbb
std
cwtl
sub
ficoms
push
ds
xchg
xchg
std
rorb
outsl
mov
rorb
jecxz
sbb
fidivrl
inc
sub
mov
daa
push
cli
loop
cltd
std
xchg
lahf
add
stc
in
jns
push
pop
mov
mov
mov
or
xchg
pop
int3
add
or
jmp
mov
mov
in
cli
xchg
sbb
pop
sbb
stos
cwtl
ds
jae
pop
mov
xchg
lcall
test
or
push
arpl
add
arpl
mov
mov
fwait
sbb
mov
lock
int
shrl
xor
cmpsl
jo
pop
inc
pop
sub
and
je
jp
push
dec
aas
push
scas
pop
sub
in
or
adc
jmp
repnz
xchg
mov
pop
lds
dec
or
jbe
xchg
rclb
dec
pop
sbb
repz
jecxz
sub
adc
sti
and
rorb
fnstsw
fcomps
addr16
xor
push
mov
mov
push
sarl
pusha
daa
out
sub
addr16
aad
add
subl
shlb
shlb
inc
sbb
cli
jae
fwait
xchg
pop
mov
sbb
jp
xlat
add
loopne
data16
push
std
ljmp
pop
mov
repnz
inc
sbbb
pop
ret
aaa
jl
sub
cli
cmpsl
push
lret
add
jno
rcl
sbb
pusha
jo
decb
or
outsb
mov
and
ret
jo
dec
sbb
lea
mov
push
out
les
subl
adc
outsb
lods
push
xchg
xor
lods
push
push
fstps
fxtract
dec
movsb
jne
sub
mov
push
xchg
pop
ljmp
notl
out
stos
inc
outsl
das
mov
je
jg
xchg
xor
popl
mov
lods
inc
xchg
mov
add
ret
push
jmp
rol
cltd
test
hlt
xchg
cmc
out
shlb
mov
adcl
in
add
push
fists
push
fisubrs
jae
sbb
cmp
cmp
mov
inc
shrl
adc
ret
add
mov
cmc
pop
adc
cwtl
enter
mov
imul
inc
inc
test
repnz
xor
dec
pop
lds
lahf
cmp
add
cmp
or
sbb
fcoml
cmpsl
mov
int3
hlt
and
cmp
insb
les
ret
popl
dec
shlb
cltd
jbe
jnp
lock
sub
clc
mov
cmpsb
push
sbb
xlat
pushf
mov
shlb
insl
clc
or
xlat
jo
sbb
xchg
movsl
xchg
or
mov
sbb
jg
dec
scas
inc
idivl
subb
pop
mov
outsb
cmp
ret
push
or
mov
jbe
push
ljmp
cmp
incl
negl
sub
xchg
xchg
fldcw
mov
mov
lock
imul
push
fwait
xor
push
sub
fdivs
pop
addr16
mov
rcll
stc
test
mov
xchg
es
xor
push
mov
fmulp
rclb
fildl
pop
clc
xor
aas
pop
shlb
pop
and
dec
mov
js
stos
dec
xchg
xor
jecxz
add
and
rcrb
in
mov
arpl
cs
jl
add
ss
cmp
add
mov
data16
mov
xor
aad
repz
cmpsl
xchg
and
push
and
dec
stos
mov
cmp
les
outsb
jge
sbb
inc
jle
outsb
adc
dec
xchg
xlat
jnp
cmpb
je
test
int3
or
decl
hlt
mov
pop
add
popf
stc
test
rolb
mov
pusha
cmp
std
inc
push
mov
cmpsl
pop
leave
fwait
dec
push
ljmp
mov
and
repnz
cmp
out
pop
in
fs
and
push
and
sbb
mov
xchg
sbb
cld
mov
jp
mov
or
test
adc
pop
pop
test
mov
sub
call
sub
leave
adc
test
xchg
insb
push
push
insb
cmp
adc
or
inc
sbb
cs
adc
push
dec
into
xorb
or
in
nop
sbb
in
outsb
push
adc
cmp
cld
sahf
dec
pop
dec
pop
and
push
std
les
add
sbb
sahf
into
ficompl
add
jnp
push
mov
enter
mov
pusha
jno
scas
push
inc
and
rol
push
inc
mov
ret
xchg
mov
lret
pushf
mov
cmc
sbb
push
mov
add
test
in
outsl
sub
pop
pop
hlt
fnsave
loop
lods
std
pop
mov
mov
sti
rorl
inc
xor
cld
xor
push
or
adc
or
and
xor
notb
cmc
nop
stos
sub
xchg
gs
roll
xor
fs
orb
cs
inc
xor
cmp
add
push
jno
testl
inc
dec
aas
xor
or
pop
adc
mov
int3
xchg
add
arpl
outsl
adc
movsb
les
addr16
inc
les
adc
jecxz
pop
pusha
out
adcb
inc
mov
dec
outsl
mov
add
mov
mov
jle
push
popf
jle
xchg
or
push
incb
mov
loopne
jae
and
pop
mov
pop
lret
aam
and
add
repnz
test
aam
dec
inc
dec
scas
and
pop
popf
fcom
fdivrs
les
push
les
mov
xchg
jl
mov
adc
je
jmp
mov
inc
ss
cltd
jbe
or
xchg
and
and
mov
mov
dec
fistps
push
pop
sbb
repnz
sub
xchg
push
mov
mov
stos
pop
mov
dec
inc
sub
sub
adc
push
add
dec
add
repnz
in
stos
aam
mov
outsb
cmpsb
fidivrl
out
cltd
lahf
adc
jnp
fs
cs
inc
sub
fsubr
jp
es
call
jnp
stc
pop
adc
in
dec
inc
lcall
jmp
cld
push
addr16
pop
adc
mov
loop
cltd
jo
jbe
adc
sbb
sub
mov
mov
sbb
filds
jl
adc
dec
pushf
dec
les
mov
mov
inc
sbb
int
js
imul
xchg
mov
cmpsb
out
pop
aad
das
and
mov
mov
push
push
mov
call
subb
jae
sub
add
inc
popf
dec
in
ds
movsb
mov
lods
push
fcoms
roll
cmpsl
push
mov
aad
push
jnp
dec
xor
fst
fildl
pop
mov
sahf
mov
in
popa
sub
stos
push
int3
pop
inc
fdivp
notl
cwtl
jle
fisttps
add
std
or
pop
leave
gs
or
je
sbb
inc
js
inc
or
mov
pop
lea
pop
or
sbb
insl
ret
jecxz
and
adc
mov
shll
inc
int
mov
mov
inc
mov
adc
mov
scas
subb
cltd
inc
insl
das
or
mov
sbb
in
arpl
or
mov
orb
sub
out
scas
fcomps
frstor
sub
sub
push
loopne
out
push
add
sti
dec
or
repnz
test
jmp
pop
inc
test
stos
sahf
adc
add
pop
sub
jbe
pop
lods
pop
insb
popf
roll
outsb
cltd
cmp
dec
dec
pusha
add
ss
inc
mov
lock
mov
xor
add
jmp
push
or
sahf
mov
dec
lods
inc
sub
dec
arpl
fstpt
or
lret
movb
ffreep
xor
mov
aas
mov
mov
fwait
mov
fcompl
ja
jae
aad
lret
fadd
inc
pop
outsl
rorl
or
shll
test
test
test
cmp
dec
cs
shll
divb
jl
push
dec
cmpsl
cmp
loop
loop
lahf
sti
push
enter
xchg
ja
jl
lret
sarl
pop
or
sarl
test
mov
clc
jns
xorl
scas
fsub
mov
pop
dec
jno
pop
test
scas
xor
call
push
cmp
cmp
insl
outsb
call
inc
push
cmp
fiadds
add
cmp
test
mov
fsts
loop
cmc
dec
inc
add
stos
daa
clc
inc
in
mov
das
dec
cmp
dec
inc
push
stos
in
xor
mov
scas
dec
mov
and
ret
jge
mov
leave
dec
xchg
xor
mov
dec
add
xor
mov
or
mov
jg
pushf
in
into
push
fcomp
insb
std
and
iret
outsb
fmulp
add
sbb
dec
sub
sub
adcb
xor
add
dec
or
xor
jecxz
mov
sub
pop
and
and
jbe
mov
cmp
inc
jle
push
lcall
sti
and
cwtl
dec
js
fnstenv
cmp
mov
ja
ss
adc
jge
jo
push
push
jno
jmp
inc
push
sub
repz
fwait
push
aaa
pop
mov
fs
mov
push
pop
enter
lea
sti
std
adc
cmp
popa
cmp
xchg
andb
add
adc
cmp
xchg
ds
or
and
movsb
dec
test
mov
jge
add
sbb
sbb
jnp
cli
lods
jno
adc
pop
pusha
xchg
fldl
out
push
aam
es
imul
jg
dec
in
jo
adc
or
inc
dec
jmp
and
lea
test
or
mov
xchg
mov
outsb
outsb
cli
sarl
movsl
addr16
pop
pop
cmp
mov
out
ljmp
inc
or
inc
sub
xchg
adc
mov
je
pop
mov
aam
mov
jnp
shlb
mov
sub
loopne
mov
movsb
out
xchg
aad
pop
fcomp
int3
add
lods
ficompl
cmp
orb
push
ljmp
cs
jp
push
out
rclb
cmp
xchg
jo
push
iret
jne
cmpsl
sbb
pop
sti
pop
repz
sbbb
mov
xchg
sbb
test
lret
pop
lea
loop
jl
out
push
or
popa
sbb
xor
in
out
adc
mov
push
sub
nop
into
sbb
cmp
in
or
xchg
hlt
repz
lret
sbb
xlat
out
dec
ja
nop
das
cmp
dec
or
adc
dec
dec
mov
arpl
mov
loop
outsb
pop
mov
sub
push
sbb
pop
inc
dec
in
or
aaa
sub
stos
stc
aas
push
jl
lds
xchg
jno
mov
ss
int3
mov
outsb
inc
fs
jp
pop
dec
mov
fldl
rcll
adc
ljmp
jmp
cmp
xor
dec
mov
xlat
inc
xchg
mov
cmp
inc
hlt
sbb
push
cmp
pop
push
mov
ret
aam
int3
or
mov
roll
or
in
fildl
pop
jg
js
jge
ljmp
aas
shrl
ja
test
push
test
jae
scas
cmpsb
mov
mov
ja
ja
jbe
clc
mov
cld
adc
xchg
enter
push
aam
mov
shrl
pop
movsl
mov
add
je
mov
pop
mov
test
xorb
inc
xchg
imul
adcb
nop
jmp
or
daa
repz
add
mov
push
imulb
inc
mov
add
sub
mov
add
inc
push
das
push
cmp
sub
jb
outsl
hlt
repnz
imull
mov
loopne
xor
xchg
mov
ficoms
jl
bndstx
and
loope
and
xchg
add
jmp
jne
fs
jp
pop
pop
repnz
out
imul
sub
lock
stc
pop
ret
fnstsw
loopne
sub
cmpsb
adc
mov
aad
fisubrl
fadd
fnstsw
clc
add
lret
and
fcmovu
or
ret
jle
and
clc
mov
mov
push
imul
loope
out
xchg
mov
or
jmp
xchg
push
pop
fwait
or
fwait
je
xchg
cmp
bound
cmc
ja
imul
mov
mov
cs
add
lahf
ret
cs
mov
out
push
push
test
push
insb
and
insl
loop
pop
stc
insb
xchg
enter
test
addl
xchg
popf
loopne
adc
lods
mov
or
sub
popf
add
mov
test
das
inc
mov
push
repz
and
in
leave
in
lds
insb
mov
jmp
jmp
addr16
mov
adc
ds
cmp
adc
mov
pop
or
insl
leave
adc
cmpsb
shlb
imul
cmpsb
or
aas
cmp
in
repz
sub
pop
cmc
in
stos
xchg
mov
jns
and
inc
ds
aas
push
ljmp
movsb
push
jb
xchg
loopne
push
sbb
clc
hlt
pop
mov
jle
test
repz
or
and
adc
in
popa
popa
repz
out
mov
and
add
xlat
pusha
push
jmp
mov
fwait
cs
sub
mov
aad
das
test
test
mov
dec
adc
add
cltd
fists
pop
insb
rcr
sbb
sbb
insl
or
mov
test
repz
pusha
or
pop
insb
fs
shll
jg
repnz
jecxz
pop
or
rcll
cmc
pop
add
mov
fdivr
bound
add
stos
mov
fdivs
imul
xchg
out
fcoms
int
fcoms
scas
ror
fildll
push
push
fisubl
cli
sets
notb
std
popa
pusha
sbb
lahf
fcomps
lret
dec
jmp
cmpsl
rcrl
and
xchg
inc
stos
pop
push
mov
cmc
lcall
lock
xor
in
bound
inc
and
cli
sti
pop
mov
idiv
rorl
adc
xorb
fwait
mov
in
mov
and
ljmp
mov
cltd
stc
gs
stos
rolb
ja
in
mov
xchg
sbb
and
xchg
ss
push
ss
or
xchg
push
outsb
mov
call
sub
enter
dec
inc
fnstcw
add
sbb
cmpsb
fcoml
sbb
jb
stc
pop
pushf
ret
bound
xchg
push
pop
push
jae
enter
insl
jecxz
mov
into
arpl
lret
rcrl
rcr
mov
subl
jno
repz
mov
pop
mov
pop
mov
cmp
push
inc
cmp
jno
outsl
and
cwtl
imul
fwait
xchg
std
push
in
mov
jbe
lods
insl
movsl
jbe
ljmp
sbb
daa
aam
sahf
iret
rcll
cmp
fdivl
lock
pop
and
gs
mov
movsl
movsb
push
out
popf
lret
out
mov
xor
std
push
in
mov
repnz
scas
aas
test
mov
push
clc
mov
inc
cmpb
cli
push
or
jno
nop
and
fstpt
les
add
add
mov
fmull
in
cmp
xchg
xor
cwtl
scas
jne
shl
cmc
enter
popl
sub
add
mov
add
pop
hlt
or
sti
inc
stc
test
lock
push
mov
enter
jmp
xchg
xor
and
add
fabs
shl
fisttpll
mov
out
mov
jns
cltd
daa
imul
mov
push
arpl
adc
out
cmp
pushf
mov
in
pop
stos
popf
mov
or
cmp
cs
or
push
push
cmp
sbb
es
mov
inc
cmp
dec
ss
sbb
movsb
push
adc
shrl
pop
xor
rol
call
out
fisttpl
cmpb
mov
cld
jl
loop
rcrl
insb
mov
push
xor
sub
cs
jns
mov
jecxz
mov
push
and
jo
stos
pop
adc
mov
cmp
sub
mov
xor
lret
inc
outsb
cmp
aad
pop
stos
xor
fwait
push
push
push
add
jl
cli
imul
shrb
daa
aas
lea
pop
mov
ss
sub
push
jnp
adc
mov
cmp
sbb
lods
or
inc
fwait
cmc
sub
pop
mov
xchg
cmpsl
fstpl
cmp
cltd
les
add
shll
sbb
in
mov
sub
pop
inc
nop
mov
push
xor
mov
inc
fisubl
loope
dec
fimull
mov
outsb
ret
fsubrs
clc
cs
out
or
jae
call
imul
loop
cmp
rcr
adc
aam
push
jns
das
jne
test
pusha
dec
pop
enterw
push
adc
mov
in
push
scas
pop
xchg
jge
xor
rcll
fs
in
insb
jo
test
jae
jns
call
adc
adc
testl
mov
jl
aad
and
lods
scas
mov
gs
ljmp
dec
call
dec
or
push
enter
addr16
dec
sub
loop
push
movsl
xchg
lds
rol
dec
cltd
js
ret
rcl
or
sub
mov
cmp
pushf
inc
test
xchg
sub
inc
imul
adc
das
fimull
or
inc
jne
ljmp
sbb
mov
and
cld
dec
inc
xlat
leave
ss
scas
fcomp
push
cmpsb
sarb
lret
in
pop
fstps
mov
mov
inc
xor
add
cmp
or
fbld
adc
aas
fdivrs
stc
inc
mov
sub
sahf
xor
push
cmp
mov
jbe
add
enter
sub
mov
hlt
shrb
mov
lret
cmpsb
mov
inc
dec
cmp
push
aas
popa
push
mov
iret
add
filds
mov
ret
int3
in
fimull
adc
scas
les
add
lea
outsb
lods
pop
fisubl
mov
dec
je
push
arpl
xchg
pop
sub
mov
pop
sahf
add
fldt
aas
push
xor
sbb
ret
add
sbb
cmp
inc
or
sti
arpl
inc
jge
adc
or
fwait
inc
iret
mov
cmpsl
fs
hlt
jge
jecxz
jnp
fiaddl
adc
cmp
xchg
pop
jmp
cld
xchg
loop
jecxz
xor
push
inc
cmpsl
movsl
jb
pushf
lock
inc
nop
bound
sbb
sbb
cld
pusha
xchg
out
test
fcomps
loope
lods
xchg
inc
pop
and
test
scas
xorb
push
cs
negl
lds
mov
push
ja
xchg
mov
dec
push
adcl
data16
mov
xor
pop
pop
subb
ljmp
jmp
lcall
sbb
ds
push
lcall
xchg
and
xor
popa
add
je
pop
and
int3
xlat
shlb
xchg
jg
or
add
lcall
lret
xchg
sbb
sbb
shr
mov
mov
add
mov
xchg
jo
pop
xor
idivl
in
jne
mov
rorl
cltd
aaa
push
and
sub
inc
int3
mov
mov
nop
mov
testb
dec
xchg
sub
adcb
inc
cmp
sbbl
jno
test
xchg
das
fistpl
xchg
mov
repnz
pop
inc
test
jl
or
sbb
outsl
cmp
xchg
adc
mov
stos
xchg
add
mov
imul
mov
lods
fstpt
add
test
mov
push
pop
jle
imul
dec
mov
inc
or
cmpsl
xor
push
jnp
xor
imul
mov
movl
push
orl
lcall
dec
sbb
sbb
js
xlat
cmpsl
inc
pop
aam
loopne
iret
lds
popa
adc
adc
push
adc
ret
dec
push
sti
push
lods
in
mov
frstor
shr
pop
cmc
arpl
int
cmp
nop
cmpsb
scas
insb
cmc
lds
and
outsb
repz
imul
xor
cmp
aam
jg
fidivrs
lock
dec
jae
in
lret
xchg
ds
jp
and
pushf
imul
sbb
mov
popa
or
push
shlb
in
lahf
shlb
sbb
out
xchg
push
aaa
mov
pop
stos
sbb
cmpl
das
pushf
movsb
cmp
stc
xchg
mov
addr16
out
pushf
jl
aam
mov
testl
fsubl
out
pop
lahf
cmp
pop
lret
fnstsw
shrb
rolb
mov
mov
mov
fisubrl
mov
je
movsb
push
jnp
addb
in
imul
cld
pop
xchg
xlat
mov
std
sub
push
cmp
bnd
sub
adcb
arpl
adcb
jecxz
jle
mov
xchg
andb
ljmp
into
pop
and
adc
or
icebp
popl
dec
sahf
fistpl
jnp
packuswb
ret
jmp
lock
sbb
adc
aam
addr16
movsb
pusha
or
enter
add
inc
fsts
push
orl
jmp
jg
lds
shl
js
enter
ret
enter
int
pop
ret
push
cli
pop
jle
fsubrs
cmpsb
aad
daa
push
fdivrs
lock
hlt
cs
or
adc
adc
pop
fdivr
push
lds
xchg
lock
pop
mov
popf
adc
mov
out
fstp
sbb
bound
ss
ss
adc
jne
xor
jns
cmpsl
mov
clc
out
inc
fstpl
movsb
cmp
aad
xchg
push
sbb
push
push
mov
push
sub
or
sahf
adc
int3
adc
cmpsl
addr16
fdivr
xchg
xchg
hlt
arpl
dec
xor
in
in
addr16
adc
jp
add
andps
dec
adc
mov
cmp
out
dec
movsl
icebp
pop
arpl
sub
jne
mov
orl
cld
movsl
or
push
shll
rorb
pop
sbb
fnstenv
fadds
or
ljmp
push
daa
imul
icebp
push
sub
orl
test
pop
insl
mov
mov
or
mov
mov
sub
inc
cmp
ret
cld
cmp
movsb
divb
imul
ret
mov
adc
dec
pop
leave
pop
std
rorl
pop
or
fxch
cmp
push
add
adcl
dec
sbb
dec
adc
leave
add
add
je
mov
cmpsl
roll
aam
pusha
mov
or
bound
sbb
les
inc
push
xchg
sub
inc
mov
data16
sbb
lret
in
testb
sahf
ja
and
out
gs
mov
xchg
sahf
mov
adc
mov
bound
mov
xor
add
inc
into
icebp
mov
ja
or
sub
jmp
jns
fists
fdiv
pop
jns
xchg
and
push
push
icebp
hlt
dec
mov
add
xorb
mov
movsl
push
inc
mov
inc
dec
mov
xor
xchg
aaa
add
push
jg
mov
std
shlb
jo
mov
mov
mov
inc
pusha
push
hlt
mov
pushl
pop
cmp
mov
in
mov
inc
outsb
addr16
in
lret
pushf
ss
sysenter
in
xor
lret
adc
jmp
mov
aaa
clc
mov
or
push
mov
cld
push
scas
inc
push
and
xchg
or
lahf
inc
ljmp
out
pop
notb
test
dec
xor
pop
push
mov
xchg
out
andl
lods
ja
sarl
inc
and
mov
mov
add
push
sub
mov
fsub
cs
call
stos
imul
and
dec
xor
sub
dec
cwtl
lea
pop
cmc
ficompl
adc
cmpsl
pop
rcrl
mov
or
or
or
adc
xchg
and
push
cltd
test
dec
pop
adcl
mov
outsl
fisubrl
mov
aaa
jge
mov
sbb
push
adc
jge
fcmovu
fsub
jecxz
arpl
mov
scas
sarb
nop
in
sbbb
xor
xchg
sbb
adc
push
bound
push
mov
stos
xor
push
cmp
fwait
lret
jno
cmp
jnp
dec
cwtl
cmp
jl
in
test
das
std
fisubl
fs
cmp
xchg
mov
orl
je
repnz
pop
loope
popa
cmpsl
stos
cwtl
repnz
adc
daa
jle
jge
daa
or
cmp
push
test
add
adc
loopne
push
outsb
in
inc
outsb
and
dec
jo
and
jae
shr
or
dec
arpl
mov
movsl
scas
xchg
rolb
popf
mov
xchg
mov
lds
mov
sarl
ja
push
pop
es
dec
fisubrs
testl
lods
push
jb
inc
mov
jge
data16
les
fs
mov
sbb
inc
mov
push
jl
cmp
xor
pushf
sub
out
insb
std
js,pt
ret
fldcw
and
add
test
pop
cmp
lret
sub
lds
adc
cmp
add
mov
mov
jno
repnz
mov
inc
and
mov
lcall
xor
jne
xor
and
lret
aaa
add
and
push
call
ret
ret
cmpsl
xchg
cmp
les
sbb
cmp
xchg
call
loope
jae
in
repnz
adcb
mov
xor
pop
dec
push
lds
std
adc
arpl
jno
das
pushf
push
and
dec
pop
sub
mov
fstpt
scas
ficompl
mov
aad
or
add
and
fildl
hlt
mov
xchg
filds
mov
iret
mov
pop
ds
add
imul
jns
and
clc
mov
ficompl
ljmp
jb
adc
mov
shrb
inc
mov
rol
xor
inc
mov
lods
and
sbb
adc
lods
adc
testl
out
pop
sar
mov
in
test
jnp
pop
add
mul
das
je
or
es
daa
fdivrs
inc
sub
xor
jge
les
cmp
inc
mov
rcrb
ret
and
mov
xchg
rcrl
push
adc
test
add
cmp
mov
xor
sbb
aas
xchg
pop
fs
pushf
mov
add
sub
in
mov
mov
mov
inc
push
std
cli
jns
push
ret
push
jnp
dec
adc
mov
sub
frstor
arpl
fldenv
add
pop
mov
loope
inc
outsb
lods
push
add
fcoml
scas
daa
lcall
test
inc
imull
sub
adc
pop
xor
and
jnp
push
mov
mov
pop
ds
lret
xor
cmp
imul
mov
stos
cs
pop
pop
fistpll
xchg
outsl
fldenv
mov
mov
or
pop
adc
out
dec
pop
je
jge
ret
xchg
pop
sti
orb
dec
ss
and
and
mov
jl
dec
jo
lret
add
mov
bound
mov
inc
aam
mov
xchg
es
push
push
and
mov
rcll
mov
and
lcall
pop
inc
sub
xchg
inc
ds
sbb
je
adc
pop
sub
movsb
bound
fisttpl
mov
mov
rcll
inc
mov
and
aad
aaa
les
adc
mov
movsb
sbb
sub
stos
jle
pop
div
xor
out
rcll
or
sarb
sub
popf
and
xor
sbb
sbb
popa
jbe
std
sti
mov
lret
mov
pop
testl
push
push
sbb
xchg
in
stc
mov
mov
mov
jmp
cmp
leave
loopne
test
fisubrl
lret
sub
js
inc
cld
mov
test
pop
ret
mov
mov
popf
outsb
mov
cmpsb
sti
test
sub
or
inc
xor
add
in
cmpsl
dec
ficomps
lock
xchg
xor
in
insb
adc
mov
fldcw
xchg
es
xchg
imul
icebp
jecxz
aam
pop
lret
test
xor
inc
int3
stos
imul
push
add
mov
or
in
xor
test
push
adc
adc
xchg
pop
mov
xadd
js
xchg
loopne
cmp
pop
mov
push
cmp
ja
fistpl
lahf
test
xchg
lea
imul
cmpsb
jns
pop
jb
sub
cmp
stos
test
adc
rcrl
lahf
sbb
mov
ficoms
jge
cmpsl
add
sub
adc
mov
inc
fldl
bound
jge
lret
push
dec
sbb
or
push
mov
or
mov
xchg
xor
gs
dec
pop
shl
dec
or
jae
add
test
mov
mov
mov
inc
ret
daa
jge
jns
ret
repz
push
bound
push
cld
mov
sbb
subb
xor
jae
inc
dec
sbb
aad
inc
sub
fdivs
scas
loopne
js,pt
cld
xchg
and
bound
cld
pusha
or
mov
lods
ja
jo
inc
adc
jle
sbb
and
cmpsb
xchg
xchg
mov
push
mov
cmp
add
push
pop
cmpl
nop
and
jbe
jbe
jp
add
mov
subl
ret
in
in
mov
out
inc
xlat
ds
adc
pop
mov
dec
xlat
cltd
shll
cmpsb
sub
hlt
pop
adc
std
loope
add
test
xchg
dec
es
out
lahf
gs
mov
jmp
xor
data16
out
fildl
adc
lds
jns
lea
mov
push
movsl
mov
mov
pop
dec
out
and
lret
aad
push
sbb
or
or
fdivrl
hlt
mov
add
bound
xchg
rcrl
dec
pop
movsl
and
add
sub
fsts
rorb
add
mov
xchg
xchg
fdivl
ja
mov
and
cmp
push
fcompl
mov
icebp
lret
cmp
imul
pop
imul
lahf
scas
xor
mov
cli
pop
dec
in
out
push
dec
mov
aad
xchg
mov
hlt
jnp
ljmp
adc
xor
adc
loope
aaa
in
mov
jmp
mov
jmp
inc
mov
push
xor
mov
or
inc
dec
sbb
js
clc
cmp
ret
leave
sbb
cs
rcrb
mov
outsb
pop
dec
or
das
dec
or
jne
outsl
bound
adc
ret
sbb
inc
aad
sbb
jmp
movsb
push
in
shlb
mov
imul
imul
jecxz
mov
cmp
dec
mov
mov
negl
cmp
rorl
jl
push
js,pt
mov
mov
mov
imul
ficompl
int
pop
lahf
outsb
mov
icebp
fdivrs
nop
jmp
push
lahf
fildl
ret
jae
push
ret
xlat
add
and
xchg
push
clc
fwait
jg
movsb
stc
pop
pop
stos
cmp
cmp
mov
arpl
inc
add
das
push
add
xor
fmuls
call
jmp
sbb
shlb
sub
mov
insb
adc
orl
fcoms
outsb
stos
stc
lds
in
lcall
push
js
adc
in
push
cld
pop
test
pop
stc
into
iret
pop
scas
pop
jg
sub
sbb
out
jne
cmp
pop
inc
inc
xchg
inc
pop
movsb
cmp
pop
fldl
or
pop
and
fiadds
or
xchg
lcall
leave
lods
movsl
popf
pusha
push
or
aas
lahf
dec
mov
std
dec
in
inc
rcrl
cmp
in
push
xlat
or
fcoms
outsb
ds
lock
xchg
aaa
aam
adc
push
sbb
jno
test
sahf
pop
clc
nop
aas
bound
jne
xor
mov
and
notl
icebp
jae
pop
add
ret
div
push
cli
dec
loope
and
loope
mov
test
scas
aas
add
movsl
mov
std
cmp
mov
out
sbb
popf
jb
adc
or
roll
rolb
fisubrl
lea
sbb
inc
push
popf
mov
xchg
inc
mov
pop
std
loope
push
jle
mov
cmp
jle
mov
les
movsl
movups
add
loope
jmp
pop
push
push
addr16
jmp
sahf
bound
sub
jns
jbe
push
and
ja
xorb
mov
cmpsl
mov
mov
jge
stc
std
xchg
mov
lret
jg
ret
leave
ret
loope
aad
outsb
cmp
ljmp
shl
sti
movsb
or
push
jl
mov
xor
sbb
shrl
jecxz
adc
insb
push
mov
add
pop
mov
aam
push
xor
dec
xchg
mov
cmc
mov
fcompl
sbb
xor
popf
push
dec
mov
cmp
fdiv
pop
cltd
test
sbb
mov
sahf
aam
or
xor
mov
xchg
inc
push
pop
xchg
sbb
mov
xchg
sbb
lahf
daa
cmpsl
sub
popa
mov
out
stc
hlt
adc
mov
sub
mov
test
ljmp
or
in
das
enter
inc
adc
popa
icebp
test
sbbb
pop
stos
mov
jg
mov
mov
inc
sahf
inc
aad
jae
jo
push
inc
fcmovne
cmp
dec
fwait
aas
xorl
cli
cmp
lds
mov
jmp
stos
in
movsb
mov
cmp
enter
jnp
or
call
jnp
xor
gs
or
push
and
push
push
cmp
inc
mov
xor
stc
mov
cmc
and
push
lds
pop
movsb
in
dec
push
movsb
clc
add
out
pushl
out
xchg
adc
scas
data16
sub
xchg
popf
xchg
andb
sbb
fistpl
add
std
mov
sbbb
mov
mov
and
jae
mov
sub
cwtl
aam
in
adc
xchg
pop
jae
sbb
sbb
scas
loopne
push
or
shl
mov
push
rolb
jge
das
sub
ret
test
adc
aad
ss
jg
xlat
adc
insl
and
jne
dec
cmp
fsts
out
lahf
or
cmovp
xchg
mov
in
fisubl
sbb
mov
inc
lds
xor
shlb
gs
scas
popa
jecxz
es
scas
cmc
cli
gs
jmp
fnstsw
nop
repnz
icebp
ds
out
mov
or
dec
or
pop
mov
adc
insl
lock
pop
ja
in
cmp
divb
in
push
mov
push
aaa
dec
mov
adc
sbb
inc
inc
sub
or
sahf
mov
mov
xor
jnp
outsb
and
sub
or
sbb
push
mov
xchg
dec
pushf
jbe
or
lret
sub
aad
incl
fistpll
sbbl
ffreep
ljmp
bound
and
scas
push
pop
sub
jae
lea
pusha
jl
push
mov
sub
xchg
cmc
into
or
and
push
mov
mov
mov
and
mov
adc
fidivs
mov
or
movl
stos
stc
pop
fldenv
cmc
sub
sub
mov
dec
xor
pop
xchg
out
and
aam
jl
mov
inc
xlat
xlat
adc
addl
jns
fbld
in
sbb
popl
sbb
cmpsl
popf
enter
inc
add
fwait
scas
cld
pusha
mov
lds
mov
mov
mov
lds
mov
cmp
shll
inc
add
sbb
adc
fimuls
mov
sub
addb
cwtl
loop
movsl
cmp
xchg
or
stos
lret
test
.byte
