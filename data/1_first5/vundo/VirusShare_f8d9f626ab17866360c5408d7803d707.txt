jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
das
sbb
orl
ljmp
mov
loopne
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jo
sub
testl
xchg
add
sub
bound
jbe
jnp
fiadds
xchg
add
add
add
add
addb
add
add
add
add
add
test
imul
and
lret
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
adc
inc
add
add
add
mov
add
add
add
add
add
mov
push
bound
inc
add
add
add
add
add
add
add
push
add
inc
add
add
add
add
add
add
fiaddl
push
adc
inc
add
add
add
mov
add
add
add
aas
add
add
add
add
add
cmpsb
add
add
add
sub
add
or
fiaddl
push
pop
add
add
sub
imul
add
add
add
add
adc
cmp
push
sub
cmp
jbe
or
fiadds
xor
sub
inc
add
add
add
add
add
add
add
add
bound
imul
add
add
xchg
add
add
add
adc
roll
add
add
addb
add
add
add
add
add
add
dec
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
jbe
pop
add
bound
sub
pop
add
add
add
pop
add
add
add
xor
sub
add
add
add
add
add
add
daa
add
add
add
add
int3
add
pop
add
add
add
bound
push
add
add
add
push
add
add
sub
xor
addb
add
add
sub
dec
add
add
add
add
sub
je
inc
add
sub
xor
and
fldl
dec
add
add
push
adc
add
sub
push
add
hlt
add
add
add
sbb
jae
add
fiadds
xor
sub
mov
add
add
pop
add
lret
add
add
add
add
movsb
add
add
outsb
add
add
add
sub
adc
out
pop
add
add
add
add
sub
movsb
add
add
scas
add
add
add
add
add
add
add
add
in
movsb
add
add
add
add
xor
sub
push
add
inc
add
add
add
push
push
add
aas
add
add
add
add
add
movsb
add
add
lret
add
cmp
sub
in
jae
cmp
fiadds
push
sub
popf
add
add
add
xor
pop
add
add
add
add
add
add
add
mov
add
add
push
add
add
add
add
add
add
lret
add
add
add
add
add
add
jae
bound
sub
push
add
add
add
add
add
sub
addb
add
into
add
pop
add
bound
adc
add
into
add
add
add
xchg
add
mov
add
add
xchg
imul
sub
push
scas
popa
das
pop
lds
sub
addb
cmpsb
popa
lock
and
mov
lods
cld
dec
sbb
push
pop
cmp
push
jns
inc
adc
movsb
cld
insl
and
test
pusha
addl
aam
dec
sub
sbb
cmpsl
je
bound
ret
jbe
ds
adc
fucomi
xor
jge
fstpt
push
cmp
mov
jp
mov
out
ljmp
xchg
loopne
js
cmp
cmc
mov
sub
jg
enter
cmpsl
jl
dec
and
int3
mov
test
xchg
sbb
fisubl
mov
test
mov
xlat
lock
jecxz
xor
and
icebp
std
cld
push
cltd
mov
fbstp
stos
in
mov
mov
sbb
icebp
xchg
stos
jmp
stos
push
cs
ljmp
push
loop
shll
push
arpl
cmp
mov
lods
sbb
call
int3
out
dec
jbe
test
and
xor
sbb
inc
sbb
cmp
leave
cmp
mov
push
push
outsl
pop
mov
cmp
jns
adc
imul
pop
cli
mov
cli
ljmp
das
out
mov
push
int
push
das
xor
dec
jno
and
cmp
xchg
xor
nop
inc
jl
push
sbb
in
inc
inc
test
add
out
call
xchg
aad
popf
inc
add
dec
cmp
push
std
and
dec
jp
xchg
lods
pusha
mov
cmp
or
mov
scas
xchg
neg
dec
or
imull
fcmovu
cwtl
lahf
movsl
dec
jno
repz
mov
adc
add
inc
xor
sar
push
or
hlt
test
fists
sbb
les
push
clc
and
pusha
fmull
mov
lret
in
mov
pop
int3
out
dec
xor
dec
imul
sbb
mov
inc
pushf
push
dec
jne
pop
push
shll
add
inc
sbb
jo
mov
add
xor
mov
mov
mov
insl
mov
xor
xor
rcrl
pop
ja
push
pop
stos
inc
gs
adc
fs
int
fdivs
cmpsl
mov
inc
jno
out
push
test
jnp
add
mov
mov
jp
xchg
pop
inc
scas
adc
xchg
add
imul
mov
lods
jg
lea
inc
rorl
scas
dec
icebp
xor
push
sarl
in
je
mov
repnz
cmp
push
lods
mov
ja
pop
popa
movsl
or
mov
das
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
inc
and
jne
or
adc
push
jne
gs
in
cmc
xchg
test
xchg
sbb
shll
add
add
inc
xor
mov
mov
xchg
test
xchg
icebp
movsl
shll
gs
jne
add
dec
xor
xchg
xchg
loopne
jecxz
mov
xchg
jmp
push
push
pop
je
outsb
adc
nop
pop
sub
dec
sub
cmp
lcall
clc
out
das
je
cli
cs
sti
dec
push
hlt
subb
dec
fisubrs
pop
std
loope
lea
pop
mov
or
mov
lahf
outsl
and
adc
push
xor
add
add
fadd
and
push
push
hlt
std
jl
ds
mov
cld
dec
out
mov
xorb
popa
jl
or
mov
into
and
std
cs
fidivl
mov
loope
push
mov
mov
sub
push
adc
jne
add
inc
xor
sbb
xor
test
xchg
pop
movsl
fnstenv
pop
add
jge
les
xor
push
test
rol
xchg
repnz
cld
sahf
loope
loope
inc
addr16
ja
jb
jge
xor
and
rcl
movsb
shll
icebp
xlat
movsb
mov
sub
xor
or
je
add
inc
xor
mov
xor
icebp
movsl
shll
add
add
inc
xor
mov
xor
icebp
movsl
shll
fidivrs
filds
jmp
push
or
dec
sarl
cmp
xchg
in
push
popa
push
aaa
adc
lret
out
xchg
imul
out
jbe
dec
sbb
mov
cmpsl
pop
scas
cltd
mov
xor
mov
push
les
out
adc
shr
mov
add
or
pop
icebp
js
mov
or
xor
das
lret
fsubl
arpl
jns
mov
jno
adc
mov
xor
or
out
cmp
out
lret
push
negb
jmp
ljmp
cmc
jnp
pushf
hlt
mov
arpl
lahf
cli
xchg
or
out
mov
pop
push
adc
out
lea
sti
push
mov
and
fisttps
clc
lret
xchg
movhps
loopne
cmp
ljmp
push
dec
dec
xchg
mov
cli
xor
das
xchg
nop
fdivrs
aas
xlat
into
pop
sub
sahf
mov
cli
mov
mov
ret
loope
push
adc
popa
fistpll
jns
inc
add
pop
push
roll
in
mov
xor
popa
out
inc
or
adc
cmp
loopne
mov
jbe
xor
popa
pushf
mov
xchg
scas
pusha
mov
mov
repz
dec
pop
shll
cs
mov
pop
jno
in
cli
jge
ud2
negl
in
push
mov
sub
add
movsb
cmp
movsl
jbe
cltd
lock
pop
inc
je
mov
add
and
stos
jnp
mov
adc
insl
stos
fiaddl
clc
ja
gs
int3
cld
out
int
sbb
or
sub
sub
call
inc
je
aas
hlt
cmpsl
bound
sub
test
sbb
adc
and
push
daa
mov
sti
in
nop
mov
jmp
ror
sbbb
fisubs
stc
out
xor
outsl
fstpt
sbb
mov
mov
sbb
mov
bound
ljmp
jae
cmp
pop
popa
xchg
mov
xchg
mov
adc
aas
sub
idivl
imul
incl
mov
pop
test
pop
inc
jno
add
loope
mov
ljmp
jo
lods
pop
push
lods
push
and
xchg
mov
or
mov
test
jns
add
jmp
loope
fnstenv
in
stos
call
mov
add
and
cmpsl
fisubl
shl
movsl
ror
and
inc
adc
sarl
xchg
pop
lock
pop
pop
ret
xchg
xchg
out
pop
ljmp
test
xchg
insl
push
mov
dec
fs
mov
in
xchg
add
pop
inc
rcrl
rorb
inc
adcl
pop
inc
cwtl
mov
add
and
pusha
insl
mov
iret
mov
dec
sar
shr
mov
fmul
cmc
xchg
ja
iret
lods
adc
cmp
mov
xor
notb
dec
inc
xchg
lret
fcmovnbe
jb
jg
push
fdiv
sbb
bound
addl
movsb
mov
fimuls
testl
shlb
test
out
and
loop
xlat
fs
fdivr
mov
pop
or
rcrb
push
mov
inc
dec
in
inc
pop
lock
and
out
jmp
stos
cmovnp
pop
testb
dec
pop
rol
mov
outsl
pop
mov
mov
cwtl
dec
dec
sub
clc
mov
sub
std
out
ljmp
js
addr16
cmp
and
out
pop
sub
out
mov
out
jnp
popf
cs
or
fsubl
xchg
adc
mov
ja
adc
mov
addr16
iret
xchg
mov
insl
sarb
jne
leave
and
out
jp
in
push
mov
cmp
repnz
and
imul
sub
test
jp
jg
xor
loopne
movsl
pop
popa
inc
not
rorl
cld
int
cmp
push
xchg
loop
or
cmpsb
push
int3
inc
lea
jae
mov
test
outsb
mov
xchg
mov
lods
in
adc
pop
inc
jle
fsincos
xchg
inc
aaa
jmp
push
adc
mov
mov
jecxz
lret
ljmp
and
rcr
sbb
or
mov
lret
out
out
cmp
icebp
in
int3
or
fstl
push
shll
lods
mov
xor
movsb
into
mov
mov
add
lcall
fstpt
jg
sarb
ror
xchg
jb
hlt
xchg
fs
test
cs
xchg
rcrb
enter
add
push
les
add
fwait
popf
daa
push
jbe
popf
pop
mov
push
in
pop
pop
addr16
leave
mov
fisttpl
push
xlat
lea
dec
fptan
js
xchg
add
xor
pop
xlat
icebp
pop
and
xchg
pop
adc
ss
xchg
shrb
cmp
xchg
shl
pusha
cmp
movsb
pushf
pop
mov
jle
stos
push
jg
inc
inc
out
jnp
adc
mov
xchg
mov
push
inc
pop
inc
xor
mov
mov
push
add
dec
jo
popa
rcrb
fisubl
scas
mov
js
jne
fldl
mov
aaa
lret
xchg
xorb
xchg
push
and
push
fidivrl
jg
fdivrp
sarl
das
add
pop
sti
cmc
fwait
js
adc
sbb
sbbl
out
or
pop
mov
out
mov
ds
ret
jnp
rclb
fbstp
rorl
loopne
int
ss
dec
out
sbb
mov
mov
mov
mov
js
dec
xor
sub
xchg
mov
dec
mov
ja
divb
pushf
pop
pop
data16
add
sub
xor
out
push
add
push
and
sub
lahf
pop
shlb
jb
movb
shlb
adc
adc
lahf
popa
cmp
mov
lahf
cmp
adc
fwait
pop
ret
xlat
daa
mov
mov
cmovs
fbld
add
adc
jmp
pusha
pop
sub
movsl
mov
fidivrl
dec
int3
pop
xor
dec
insb
pop
mov
sub
lret
push
jne
cmpb
sub
cmp
sub
pop
sbb
adc
dec
mov
orl
out
lret
adc
out
stos
cmc
popf
dec
cld
sar
mov
mov
sbb
add
sub
pop
je
add
mov
in
sbb
xor
mov
inc
in
clc
dec
and
inc
rcll
addr16
add
std
imul
cmpsw
mov
xor
add
ret
jecxz
or
ljmp
daa
lahf
xlat
push
jl
nop
xor
cmpsl
imul
sahf
insl
dec
xchg
in
rorb
andl
cmp
clc
pushf
int3
dec
dec
jne
sbb
jno
xor
xor
inc
lcall
lret
adc
mov
inc
iret
inc
mov
push
mov
add
dec
xor
jmp
pop
sbb
push
mov
adc
cltd
mov
sbb
inc
add
in
shll
adc
mov
mov
xchg
add
jmp
xchg
lret
jle
jp
pop
cmp
out
pop
movsb
xchg
adc
xchg
fdivrl
or
inc
popf
add
rclb
loope
push
pop
mov
gs
scas
lods
push
test
cmovno
pop
jns
add
jmp
jne
outsb
data16
pop
inc
mov
dec
add
mov
sub
push
jns
cmp
mov
movsl
mov
ficomps
jge
jl
and
jp
sti
in
fsts
adc
xchg
adc
in
nop
jnp
add
enter
and
in
jnp
add
add
fldt
and
pop
jmp
dec
ss
call
outsl
sub
xor
popf
mov
lods
js
xor
rorl
enter
popa
sbb
int3
imulb
movzwl
inc
dec
xchg
push
sbb
jnp
out
mov
std
push
and
lret
xor
aad
popf
test
pop
ljmp
inc
and
pop
mov
mov
mov
ja
enter
out
xor
cmp
push
ss
and
sub
mov
cmp
imul
xor
push
ja
jecxz
sbb
stos
les
inc
add
push
dec
and
mov
int3
and
sub
ret
xor
addr16
pop
fdivr
fmulp
imul
pop
lret
clc
push
or
movsb
aaa
xor
popl
adc
rcl
mov
lcall
mul
sub
test
and
push
dec
mov
cmpsl
xchg
mov
push
jnp
enter
loopne
divl
bound
cli
xor
cmp
mov
dec
in
fists
cmp
or
loope
sub
pop
push
sbb
dec
popf
xchg
cmpsl
xchg
loopne
rcrb
add
repz
xchg
scas
repz
in
sbb
iret
pop
jl
add
mov
sbb
pop
jnp
imul
outsl
ss
xorl
inc
mov
adc
aaa
cmpsb
sub
or
xor
sbbl
adc
add
movsl
xchg
loop
jno
adc
mov
jbe
mov
adc
xor
add
enter
push
icebp
test
adc
or
xor
cmp
mov
and
cmp
jge
out
gs
push
cmpsl
cltd
xchg
nop
pop
jecxz
xchg
nop
mov
push
insb
cmp
adc
mov
scas
push
xchg
sbb
mov
pop
dec
loope
mov
xchg
iret
insb
scas
pop
sbb
push
add
sbb
mov
inc
jo
jl
xchg
cmp
jae
sbb
jmp
jp
pop
cli
subl
push
push
xchg
fimuls
jmp
aad
jecxz
or
jp
rorl
daa
dec
out
xor
or
or
jge
xor
icebp
jns
andb
lahf
and
js
mov
cli
std
sbb
pop
cmp
daa
pop
jge
ret
cli
es
sub
xchg
add
push
insb
and
jae
notb
daa
ljmp
and
push
push
outsl
mov
repz
ret
push
dec
cmp
outsl
dec
jae
out
clc
andb
in
in
xor
inc
pop
cmp
and
fwait
clc
xchg
hlt
or
mov
hlt
jnp
call
adc
sarb
shll
mov
cld
es
dec
je
gs
in
lea
scas
ja
add
mov
loopne
lret
adcb
rcrb
cmp
cs
xchg
push
lcall
popf
push
int
es
stc
mov
rolb
loope
and
mov
push
loop
sub
cwtl
jecxz
pop
inc
push
fldenv
mov
xchg
cmp
test
pop
mov
out
add
imul
outsl
shlb
or
inc
push
rcrl
or
testb
pop
ror
push
mov
dec
notb
mov
scas
mov
rcl
xor
iret
push
shll
addr16
mov
sbb
jbe
cmpsl
jne
repz
sbb
inc
dec
adc
push
inc
dec
enter
out
mov
fisttpl
int3
cmpsl
pop
mov
push
rcr
es
cld
inc
into
mov
inc
mov
push
ret
rorb
cmp
cltd
data16
data16
mov
xorl
cmpsb
aad
add
clc
add
insl
cmp
fs
and
in
cmc
lods
aaa
jno
in
sahf
sbb
mov
gs
popf
cmp
mov
pop
stc
movsb
or
lahf
js
mov
mov
iret
xchg
das
sti
push
cmp
js
inc
movsb
pop
cmp
into
xor
call
adc
cltd
mov
adc
or
push
enter
in
arpl
adc
adc
fdivs
pop
pop
and
cmp
ljmp
jne
sbb
adcb
xchg
dec
xor
popa
in
add
sbb
mov
lds
dec
sub
arpl
or
mov
int3
push
push
cmp
cwtl
cmp
cwtl
or
das
jecxz
add
pop
pop
outsl
dec
jmp
jno
test
imul
inc
shll
nop
dec
adcl
or
test
movsl
mov
dec
out
xlat
add
je
cmp
dec
dec
push
sbb
popa
jle
in
cld
jno
vmovntps
ja
xchg
dec
and
or
mov
push
fstl
push
int3
cli
mov
and
add
repz
jb
fisubrl
jg
pop
rep
fistpl
movsb
mov
scas
lods
inc
out
rcrl
enter
jg
cmc
push
cmc
lock
adc
loopne
mov
jle
mov
add
inc
jo
bound
aaa
clc
sub
pop
pop
push
sub
pop
sbb
ficomps
push
adc
jg
pop
cs
mov
mov
inc
iret
negl
orl
mov
jp
test
xor
cmpsb
mov
inc
push
mov
mov
sti
push
jl
jle
rcr
fidivl
add
ret
xor
mov
pop
aad
std
push
outsl
aam
int
fmul
daa
mov
fisttpl
loopne
loope
daa
mov
repnz
repnz
repnz
sub
pop
or
mov
sub
push
inc
jg
xchg
sbb
pop
xchg
or
mov
movsb
jnp
loope
fsubs
lods
into
sub
jae
inc
jmp
inc
mov
xor
or
xor
ss
sub
flds
inc
push
mov
cmpsl
das
jnp
mov
lret
cmpsl
mov
adc
int
sbb
movsl
push
jae
enter
adc
fcmovu
mov
sarl
dec
cmpb
imul
out
aas
dec
repnz
call
ret
xor
lock
sahf
lods
lds
jmp
dec
mov
and
insl
cs
fisubl
lock
pusha
and
jecxz
jb
or
mov
dec
jle
or
es
dec
int
call
inc
or
jnp
jns
pop
mov
shl
clc
xlat
dec
cmp
jno
xchg
aaa
mull
jl
mov
jecxz
subl
out
and
jl
enter
ja
mov
xchg
repz
fiaddl
aam
roll
dec
xor
into
gs
cld
pop
xor
imul
insb
push
mov
imul
ret
xor
arpl
testb
xlat
sub
fwait
lds
sub
inc
les
inc
mov
push
adc
pop
push
cmp
leave
movsl
enter
ret
pop
and
pushf
jg
push
lret
adc
std
inc
mov
lret
jns
std
mov
in
xchg
sbb
xchg
jbe
lret
sbbb
adc
pop
pop
mov
rorb
sub
jg
stos
int
pop
xchg
popf
loop
mov
jne
mov
jl
xchg
sahf
cmp
mov
movsb
bnd
in
push
imul
loopne
outsb
std
push
idiv
int3
mov
sbb
or
popf
push
cmpsl
fwait
js
push
sahf
push
mov
mov
mov
cltd
cmp
cltd
incl
es
sub
adc
mov
sub
out
inc
cbtw
addr16
inc
and
sub
test
push
loop
sub
mov
ret
lret
xorb
fs
dec
test
mov
nop
xor
ljmp
sti
xchg
sub
das
in
jge
inc
clc
xchg
popf
subl
outsb
out
jae
fs
shlb
testl
icebp
pop
mov
mov
xchg
aad
push
xor
cmpb
or
loop
jl
dec
inc
ljmp
pop
ficomps
xor
jge
xchg
xchg
hlt
test
rorb
push
xor
outsb
mov
vmread
jge
movsl
movsb
insl
stos
imul
sub
or
ss
data16
push
test
mov
bound
pop
cmp
adc
mov
testb
xor
movsb
ret
dec
xchg
or
negb
in
testl
in
out
mov
shlb
pop
mov
insl
xor
pushf
mov
mov
call
sub
xor
popa
pop
add
cmpsb
dec
mov
jg
insb
adc
inc
inc
dec
push
les
or
daa
adc
popf
mov
int3
xor
add
sbb
inc
xchg
out
mov
mov
inc
sub
jnp
jb
mov
pop
pmuludq
sti
sub
adc
enter
and
popa
jnp
push
das
push
ds
adc
clc
outsb
loopne
mov
int
dec
push
scas
stc
mov
or
insb
bound
andb
sahf
sub
adc
xor
or
mov
movsb
jns
inc
ror
in
cltd
stos
mov
dec
jns
mov
sbb
or
into
mov
or
jl
out
imul
mov
xor
mov
setno
and
sub
cwtl
jle
outsb
pusha
out
pop
sub
divb
xor
jl
mov
cmp
loopne
jl
fbstp
pusha
es
mov
rcll
sub
sub
inc
mov
jecxz
adc
daa
adc
imul
push
icebp
mov
mov
sbb
pop
lcall
cmp
or
xor
lods
mov
icebp
out
jl
jg
sbb
insb
aad
sahf
test
mov
sbb
sahf
xor
inc
aad
stos
inc
or
jl
adc
mov
imul
scas
cwtl
mov
dec
sbb
fs
cli
aam
mov
xchg
mov
mov
xchg
filds
fistl
xor
dec
push
push
fwait
inc
dec
aaa
cmp
xorl
push
cmp
dec
inc
loop
sub
or
jno
fldenv
xchg
xchg
or
cmp
shlb
ret
xorb
mov
lcall
pop
inc
adc
mov
xlat
mov
clc
shl
mov
sub
loopne
dec
and
mov
cld
flds
push
scas
sbb
sub
aas
outsb
push
leave
in
cs
jmp
daa
mov
nop
mov
jne
mov
std
je
scas
rolb
xlat
pop
sti
aas
mov
xchg
push
aad
push
sub
pop
popf
scas
mov
int3
dec
sub
cld
push
popa
pushf
loop
lods
sahf
jecxz
jo
jno
ljmp
dec
fldl
mov
fcmovnbe
divps
xorb
xchg
dec
fidivrs
sahf
jmp
sbb
arpl
mov
aad
lds
test
stos
cmp
mov
cmp
lret
cmp
popf
xchg
fisttpl
scas
dec
cmc
stc
push
lcall
mov
lods
and
xchg
cwtl
cli
sahf
add
int3
insb
lods
pop
xchg
mov
or
lds
aaa
xchg
and
imulb
pop
in
xor
xor
or
pop
frstor
in
sti
or
inc
outsb
xchg
idivl
jnp
jg
pop
jmp
jne
pushf
pop
lock
in
dec
jno
call
xchg
dec
bswap
in
outsl
xor
xchg
es
cwtl
jb
outsb
out
int3
sahf
inc
sub
mov
lds
push
xorl
idivb
adc
test
mov
push
pop
out
mull
xor
repz
push
mov
imul
pop
icebp
dec
stos
out
movsb
push
jb
leave
push
jno
repnz
pop
fwait
pop
mov
out
sbb
insb
decb
dec
daa
rcr
sbb
xchg
fs
ljmp
jl
and
ja
lea
xlat
add
add
insl
dec
jb
div
jecxz
mov
test
sbb
loope,pt
sub
inc
ja
or
cltd
shr
adc
xchg
dec
dec
sub
push
jecxz
pop
xchg
xchg
fcoms
jne
mov
mov
push
mov
jae
shl
mov
and
ljmp
in
call
movsl
das
jo
or
repnz
cmp
jge
stos
dec
inc
movsl
inc
sahf
xchg
gs
js
dec
insl
xchg
sbb
add
and
lahf
lds
jno
jg
lods
push
and
xor
xor
jne
add
inc
xor
mov
xor
icebp
movsl
shll
add
add
inc
xor
mov
xor
icebp
movsl
shll
sbb
add
inc
xor
mov
xor
icebp
movsl
enter
lds
gs
push
add
shll
dec
xor
mov
dec
test
cmovo
push
popa
and
adc
outsb
xor
lcall
cli
pop
lahf
shr
mov
fists
cmovo
push
outsl
and
dec
add
jmp
mov
shr
lds
nop
cmc
pusha
mov
push
jg
aaa
xor
cmpsl
adc
movsl
mov
mov
sub
add
push
fisttps
pop
adc
sbbb
lds
pusha
push
fnstsw
xor
lcall
je
push
outsb
jmp
cmp
jg
das
mov
xchg
lahf
xchg
out
push
cmp
addr16
loopne
icebp
jo
popa
das
adc
mov
inc
gs
dec
push
outsb
and
lock
push
pusha
push
bound
and
lock
cld
fisttps
push
pop
adc
out
in
aas
pushf
rcrb
jmp
stos
cmp
data16
mov
mov
push
loopne
hlt
mov
jmp
mov
aas
jo
inc
jae
outsl
and
xor
out
pop
loopne
lock
rolb
iret
cmpb
dec
add
add
inc
pop
gs
nop
jmp
xchg
xchg
idivl
or
sbb
or
xor
arpl
jne
push
sub
xchg
test
sub
repz
les
or
jg
pop
sub
adc
dec
add
scas
loopne
lock
lahf
shr
mov
fists
cmovo
push
outsl
and
dec
add
scas
loopne
lock
lahf
shr
mov
fists
cmpsl
das
inc
xchg
and
push
lahf
test
in
imul
out
lds
and
mov
add
cli
jmp
jl
test
jae
or
aam
leave
sar
movsl
sbb
fbstp
cld
jle
mov
and
enter
dec
into
cmp
test
std
in
cmp
iret
cmpsl
mov
xacquire
lcall
enter
jo
leave
rolb
ja
dec
fbstp
pusha
push
das
pop
xchg
xchg
pop
mulb
lcall
int3
loopne
xchg
out
lods
pop
sbb
lcall
ret
cltd
fstps
cmpsb
scas
add
jl
xlat
es
jmp
ror
push
pop
dec
lds
gs
and
lahf
push
inc
mov
lret
das
push
sub
stos
jns
imul
xchg
push
jns
jmp
and
bnd
mov
sbb
dec
mov
cmp
shrb
int
inc
mov
mov
push
nop
sahf
add
ja
stos
and
lods
adc
lret
out
pushf
jmp
mov
les
repnz
aaa
insb
fcom
ss
push
cmp
pusha
addb
mov
pop
aam
imul
fdecstp
popf
clc
addr16
sub
xchg
lods
and
xchg
jb
popf
adc
in
imul
mov
push
push
inc
sarb
inc
lret
aam
enter
jg
jae
dec
jno
inc
clc
mov
cld
insl
add
cli
fidivrs
gs
out
mov
shrb
fisttpl
sbb
pop
aaa
addr16
ficoml
or
jle
dec
xchg
out
dec
ret
test
push
fisubrl
dec
xchg
sub
fsubrs
popl
arpl
push
fidivs
or
ss
iret
ret
lret
loope
cmpb
sbb
aas
ficompl
loopne
fwait
or
movsb
inc
in
loopne
mov
std
inc
mov
cmp
inc
cld
pop
xor
insl
rclw
push
xchg
sub
sahf
sahf
xchg
rorl
adc
xor
in
sub
pop
xor
cld
loop
and
in
mov
adc
unpcklps
loop
mov
fs
inc
xor
inc
pop
pop
xor
or
and
sbb
mov
mov
pop
pushf
jns
insl
aaa
lods
add
cmp
mov
xchg
inc
rcr
dec
and
ret
sti
push
lcall
dec
sahf
sub
ficoml
cs
insb
icebp
lea
rclb
push
stos
loope
loope
lret
xor
pop
fwait
scas
or
fidivrs
sbb
pop
xchg
pop
adc
push
sbb
add
frstor
fsubr
adc
pop
adc
iret
fidivrl
cs
es
mov
pop
xor
into
add
dec
stc
divb
or
fsts
adc
mov
xor
xchg
mov
sub
lahf
sub
adc
push
adc
in
push
xor
push
cs
xchg
pop
imul
lds
pusha
pop
mov
push
sub
inc
xchg
addr16
sbb
mulb
mov
push
ss
lods
adc
fwait
pop
cmp
dec
aad
mov
inc
in
add
fldt
cmc
sbb
inc
enter
xor
inc
mov
inc
scas
jb
dec
adc
and
dec
lods
mov
lret
sub
mov
mov
mov
mov
in
pop
pop
fwait
cmp
out
sub
filds
inc
test
mov
inc
sub
xchg
lcall
jg
aaa
je
addr16
jae
popf
mov
or
push
push
fs
rclb
mov
xor
out
push
clc
pop
push
dec
pop
in
fistps
in
mov
imul
or
call
pop
hlt
sub
sbb
mov
jle
push
cmp
adc
in
mov
outsl
dec
jl
int
sub
adc
adc
imul
mov
insb
jns
and
cli
mov
xor
inc
mov
stc
cmp
repnz
sub
xor
les
sub
cs
xor
jo
and
lods
arpl
lret
mov
pop
ret
inc
imul
sbb
xchg
inc
loop
pop
pusha
xor
cmp
jns
gs
or
or
jno
cmp
pop
fwait
inc
xchg
in
jo
mov
je
scas
pushf
inc
mov
ljmp
call
repnz
icebp
sbb
lea
push
adc
adc
aam
jl
lret
loop
in
sub
dec
push
or
or
bound
jno
jns
xchg
inc
jno
es
lcall
dec
mov
stos
push
repnz
mov
dec
loope
inc
xlat
inc
notb
jne
ret
andb
fs
pop
outsl
loopne
cmpsb
ljmp
add
cmp
ja
mov
pop
xchg
fisubrs
xchg
cmp
mov
dec
add
cli
sarl
cmp
adc
push
insb
idivl
adc
pop
adcl
subl
sub
cmp
mov
lahf
loopne
and
test
fidivs
scas
mov
orps
sbb
je
lret
jbe
rclb
cmpb
lahf
or
or
or
cmpl
cmp
sbb
das
pop
arpl
adc
cltd
cmpsb
loope
int3
pop
or
jmp
dec
xchg
mov
push
shlb
and
fistpl
loope
enter
xor
add
pop
mov
loope
or
popa
pop
stc
sub
out
lret
mov
jbe
cmp
dec
imul
sbb
lret
lret
push
or
mov
inc
leave
imul
dec
js
lea
je
cmpsb
fs
lds
in
lahf
jns
gs
dec
shrl
arpl
mov
bound
mov
movb
xchg
int
add
fsubrs
stc
push
movsl
ficompl
bound
pushl
shll
mov
sub
mov
inc
lret
fistpll
mov
jecxz
das
or
aam
inc
shll
rcrl
sbb
sub
mov
or
sub
add
cmpsb
jecxz
xchg
andb
jmp
ja
mulb
int3
sub
sbb
xchg
pop
xor
pop
out
stos
push
jmp
inc
mov
pop
cmp
cmp
mov
pusha
clc
ljmp
pop
pop
sub
repnz
mov
or
pop
lea
pushf
call
sar
addl
lock
push
or
hlt
add
subb
dec
mov
aam
ret
inc
pop
mov
push
addr16
add
cmp
pop
test
mov
push
dec
mov
int
mov
xchg
sbb
mov
insb
aam
leave
mov
adc
inc
out
lret
jmp
push
imulb
cltd
shll
cmova
xchg
bound
loopne
adc
mov
dec
mov
pop
cs
dec
mov
dec
sbb
mov
jno
addr16
mov
sub
mov
cmpsb
in
sub
adc
outsl
icebp
cmc
gs
cld
mov
dec
test
xor
mov
sbb
mov
inc
mov
test
ss
call
aaa
loope
popa
mov
fisttpl
push
cmc
les
ret
jae
test
les
dec
mov
inc
jecxz
cmpsb
sub
push
and
mov
xor
dec
mov
and
mov
cmp
push
jno
cmpsl
add
mov
cmc
test
lock
das
mov
xchg
clc
stos
les
int3
les
mov
cmpsl
inc
dec
fucomi
nop
inc
cmp
lret
dec
xorb
sub
inc
mov
dec
mov
lret
rcll
mov
rol
rolb
push
bound
xchg
in
rol
sub
ret
push
lods
sbb
push
cmc
pop
daa
loopne
in
push
sbb
es
xchg
mov
rcrb
inc
testl
fsubrs
aas
sarb
mov
mov
stos
jle
lods
daa
in
add
xchg
fidivl
outsl
fidivrl
jnp
sbb
sub
jne
lods
shll
sub
sbb
bound
inc
in
xorb
out
inc
mov
outsb
push
cmp
scas
mov
fbld
pop
sbb
iret
or
in
or
out
pop
fcoml
cmp
fildl
stos
dec
pushw
or
cmp
mov
movsb
enter
mov
xchg
sbb
mov
stos
xor
movsb
mov
ja
mov
and
in
out
adc
push
push
lret
addb
mov
sbb
mov
pop
jmp
mov
in
call
enter
xor
bound
ss
pop
add
cmpsb
or
cmp
adc
stc
or
fisubs
daa
pop
mov
aas
adc
ret
cmp
mov
out
pop
rcr
sub
leave
adc
imul
pop
pop
jae
adc
out
in
notl
loop
fists
fists
popa
sub
push
shlb
lahf
adcl
cmp
jae
inc
add
dec
pop
lods
or
loope
rclb
and
sti
testl
inc
divb
or
xlat
ss
repnz
test
aam
mov
mov
cwtl
mov
test
fwait
adc
pop
push
push
inc
pusha
mov
int
mov
ret
adcl
xchg
inc
bound
sub
and
or
jne
sbb
xchg
xchg
dec
xor
pop
push
cmpsb
jno
and
sbb
sub
loope
shll
xor
icebp
es
dec
or
add
scas
cmpsb
cs
mov
jae
cwtl
add
sub
addr16
cwtl
push
repnz
hlt
int3
fbstp
testl
cmp
jbe
sbb
ficompl
rep
lcall
aam
ljmp
imul
cmp
mov
xor
das
scas
mov
pop
fwait
xor
sbb
inc
stos
cwtl
mov
loop
ljmp
adc
and
sbb
dec
mov
mov
mov
std
cmp
shlb
sbb
sbb
daa
stos
jecxz
ss
outsb
sub
rcl
fs
mov
bound
ss
jnp
fwait
xor
push
mov
out
mov
mov
mov
pop
add
or
dec
inc
jmp
int
dec
hlt
or
mov
les
rorl
hlt
lods
pop
jle
xor
mov
jbe
xlat
sti
insl
int3
or
or
sub
xor
outsb
xor
mov
cltd
inc
pop
pop
cmp
xor
rorl
jge
enter
mov
mov
fadds
dec
idivl
cwtl
subb
mov
sarl
insl
and
shll
push
and
lods
cltd
loopne
ret
push
movsl
mov
aam
cmp
jl
sahf
subl
test
sbb
mov
push
dec
xchg
pop
push
cmp
repnz
jnp
mov
das
hlt
std
inc
mov
in
inc
xor
outsl
out
shr
aaa
dec
ja
xchg
and
sub
push
jbe
jmp
mov
add
cmp
sbb
xor
and
cmp
lods
xor
dec
jge
insb
or
pop
inc
adc
sahf
shrl
xchg
mov
inc
shl
inc
gs
xchg
push
ja
inc
mov
stc
repnz
pop
iret
mov
and
xchg
jb
fcoml
loop
lahf
add
ret
scas
daa
push
add
mov
jg
aam
adc
mov
sbb
push
pop
dec
pop
xor
stos
push
movsl
dec
sub
mov
adc
lcall
push
pushf
mov
shrl
divb
and
enter
push
testl
xor
mov
lea
mov
jle
mov
shlb
xor
test
lea
nop
fldl
in
cmp
or
cli
xchg
add
out
push
pop
sub
sbb
push
adc
fldcw
fbstp
in
cmp
arpl
leave
call
inc
iret
push
mov
push
push
and
mov
xor
sub
lds
rorb
cmp
icebp
aam
cltd
inc
xchg
lahf
dec
sub
dec
mov
mov
inc
mov
pop
es
fsubs
aaa
dec
inc
aas
test
in
cli
fsubrs
mov
jp
pop
imul
jns
in
fsubrl
out
mov
rcl
and
out
mov
mov
loop
and
jno
mov
in
ss
in
loope
ds
sub
aam
rorl
inc
push
jge
inc
dec
dec
stos
or
add
inc
add
cmp
push
xor
add
loope
fucom
or
cmp
sbb
imul
inc
lds
mov
pop
std
or
nop
inc
aam
popf
inc
clc
negb
pop
fld
outsl
out
ds
aam
jmp
cmp
jno
orb
addr16
push
ss
fucomip
inc
ret
dec
ficomps
cmpsl
cltd
stos
push
lods
and
bound
adc
xlat
and
shrb
push
push
scas
pop
inc
pop
mov
xor
adc
jle
sahf
test
push
das
in
cmpsl
je
cmc
stos
stos
data16
jge
sub
sub
in
jo
jns
cmpsb
push
mov
add
push
pop
mov
xchg
push
cli
out
rcrb
push
push
fidivs
in
insl
mov
xchg
pop
pop
je
std
nop
pop
mov
popf
fs
stos
out
xlat
out
out
push
rclb
out
push
test
leave
xchg
mov
pop
cs
in
dec
add
sbb
inc
add
in
jno
push
mov
scas
push
mov
mov
popf
push
inc
rolb
mov
xor
inc
fwait
and
push
arpl
or
mov
cmp
sbb
fstp
sbb
dec
cmp
xchg
mov
mov
sbb
adc
or
sub
mov
shrb
mov
inc
aam
sub
out
jns
addr16
or
nop
add
inc
xchg
in
add
test
icebp
in
test
aad
xorl
dec
push
inc
cld
orl
movsb
leave
push
adc
aas
mov
in
pop
pusha
or
imul
or
mov
lcall
and
lret
mov
data16
jmp
movsl
pop
xchg
je
enter
xchg
movsl
clc
inc
inc
inc
popa
push
jns
out
pop
xor
andl
and
aas
enter
fwait
lea
and
movsb
pop
les
sub
shr
or
pop
dec
mov
sub
arpl
int
inc
xchg
jb
loop
in
out
push
or
neg
rcl
mov
and
mov
mov
bound
inc
add
sbb
fs
aas
inc
jno
sub
popf
mov
inc
xchg
hlt
sub
mov
inc
jg
pop
xchg
cmc
sbb
int3
cwtl
rcrl
ret
add
pop
adc
add
rorl
pusha
pop
cmp
xor
pop
jo
nop
inc
adc
popa
jp
pop
jne
insl
int
subb
push
pop
xchg
mov
dec
in
xchg
popf
inc
popa
sar
dec
push
pushf
ret
push
sub
inc
stc
in
test
shll
adc
mov
aaa
sbbl
mov
adc
xchg
sbb
pop
mov
movsb
mov
sub
inc
lods
sub
aas
movsb
pop
fmull
fnsave
leave
in
test
cmpsl
dec
es
or
mov
xlat
and
stc
sbb
mov
and
mov
mov
jbe
ja
cwtl
rolb
scas
pop
push
push
pop
sub
jb
out
movl
call
inc
adc
mov
push
xchg
les
add
adc
push
mov
pop
inc
daa
scas
inc
lea
jmp
rorb
aas
stos
fbld
xor
shrb
mov
mov
stos
xchg
add
data16
shrl
sub
sbbb
in
push
pop
pop
stos
cmp
ret
adc
xor
subb
dec
mov
adc
dec
push
loopne
shrb
cs
sbb
mov
popf
fistps
or
xchg
mov
mov
cli
cli
adc
mov
lds
divl
stc
lea
ljmp
pop
enter
and
or
test
cmc
sub
bound
push
jp
insl
loope
jl
cmpsb
adc
test
daa
jecxz
mov
dec
mov
arpl
mov
movsb
lcall
push
mov
daa
ljmp
add
shlb
in
ss
scas
enter
mov
ljmp
mov
cmc
xlat
mov
cmp
and
iret
xor
pushl
or
sahf
sbb
dec
shlb
cmpsb
out
leave
and
jae
xor
rol
sahf
or
lahf
js
push
jae
das
or
mov
inc
mov
mov
sub
jle
and
mov
push
inc
mov
fiadds
jecxz
sub
pushf
enter
movsb
mov
xchg
jno
outsl
mov
adc
loopne
mov
push
inc
aaa
fldt
adc
or
xchg
out
add
mov
jo
jmp
or
sbb
pop
js
xor
sbb
sbb
or
cld
iret
xchg
insl
cmpsb
daa
dec
in
lret
cmpb
sub
enter
lret
rorb
into
les
adc
mov
mov
or
jb
arpl
sbb
mov
xlat
adcl
pop
or
xor
scas
mov
push
add
xor
jno
jno
jg
dec
into
adc
fildll
call
lahf
dec
into
loop
orb
fnstcw
or
dec
dec
call
push
xchg
ret
jnp
stos
sahf
xorb
xchg
sub
imul
dec
or
mull
xchg
in
sbb
inc
xchg
lea
pushf
leave
xlat
cli
test
sbb
iret
push
outsl
lahf
pop
cmpb
aam
lds
insb
fistpll
loope
push
loop
shl
sbb
push
cltd
mov
push
cmpsb
mov
jge
mov
outsb
jmp
dec
int3
jmp
fsubr
lret
and
popl
ljmp
jo
mov
inc
xor
sbb
cmp
in
xchg
xchg
cs
lea
mov
lds
push
or
mov
mov
pushf
pop
xchg
sub
pop
test
cli
imul
pop
xor
inc
dec
sbb
dec
cmp
inc
jbe
outsl
js
or
push
insb
jbe
insl
stos
fdivp
adc
lds
inc
lret
mov
cmp
shlb
add
jns
ds
in
daa
push
imull
ljmp
xchg
stos
add
cmp
iret
xor
in
sti
xor
repnz
or
push
ficoml
mov
sub
add
add
sub
int3
jl
and
gs
mov
cli
push
subb
adc
mov
xchg
lcall
mov
out
nop
xchg
cld
sbb
fisubrl
mov
pop
push
add
dec
popa
or
ss
jbe
imul
fs
fstps
pop
and
jge
sub
aad
cmc
inc
pop
add
lock
jg
pop
mov
and
mov
popa
or
xchg
xor
or
xor
mov
lcall
mov
mov
cltd
popf
xchg
ficoml
mov
aas
jbe
xchg
inc
imul
and
xchg
push
or
mov
iret
mov
jne
add
add
adc
rol
ljmp
dec
jge
dec
jp
aad
mov
bound
incl
mov
mov
fistps
mov
daa
inc
xchg
je
rolb
pop
lea
out
adc
loop
and
loop
hlt
sbb
ja
mov
aaa
jbe
mov
push
js
push
mov
aad
adc
jmp
into
in
jmp
push
pop
hlt
cld
xor
je
test
xor
ret
stc
sbb
xchg
xor
cmp
push
sbb
imul
scas
xor
add
mov
call
repz
lock
es
or
pop
sbb
jge
adc
je
lea
ljmp
push
dec
xor
daa
or
clc
mov
sub
andb
sub
xchg
jo
inc
add
and
dec
add
scas
loopne
lock
lahf
shr
mov
fists
cmovo
push
outsl
and
dec
add
scas
loopne
lock
lahf
shr
mov
fists
pop
inc
pop
push
outsb
and
dec
add
stos
loopne
lock
fwait
shr
mov
out
nop
aaa
pusha
adc
inc
aaa
push
outsl
and
dec
add
shrb
rcrb
xor
outsl
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
roll
repz
jecxz
lcall
lret
push
cmp
jae
arpl
adc
imul
mov
jecxz
xchg
sti
andl
mov
or
arpl
adc
imul
and
sub
stos
repz
mov
xor
pusha
dec
add
adc
add
dec
dec
cmpsl
mov
mov
pushf
int3
aam
pop
sub
fwait
cmp
jns
fs
sahf
xchg
adc
or
push
aaa
xchg
cli
adcl
fwait
dec
mov
push
into
jnp
jae
sbb
test
pop
jb
sub
test
movsl
test
sarl
cld
inc
in
mov
scas
arpl
mov
fwait
and
jnp
mov
sti
sti
jl
ljmp
jnp
cs
testl
test
subb
push
insb
fbld
lret
push
push
call
push
dec
and
mov
mov
fwait
mov
adc
push
inc
and
adc
jp
xchg
hlt
pop
and
adc
jecxz
xchg
sti
sub
add
in
jae
arpl
push
add
mov
mov
movsl
testb
scas
and
outsb
add
bound
sbb
movsl
mov
nop
cli
mov
fdiv
mov
cmpsl
and
jge
jle
insb
in
data16
pop
cmp
mov
ret
in
mov
xchg
lahf
sub
sub
arpl
adc
imul
and
mov
jecxz
xchg
sti
sub
sub
arpl
adc
imul
and
mov
pushf
cmpsl
inc
bound
mov
sbb
test
mov
dec
test
add
icebp
xlat
pop
jb
in
fwait
enter
int3
aaa
cltd
out
ljmp
popl
ret
pop
push
mov
push
incl
mov
cwtl
sarb
subl
movsb
fcoml
inc
aaa
das
xchg
mov
aam
mov
loopne
inc
into
cmp
cmpsl
pop
fstps
mov
inc
jb
std
data16
daa
fcoml
js
arpl
lea
inc
xchg
loop
iret
jne
xchg
movsb
jmp
or
push
jle
inc
daa
pushf
mov
jl
inc
daa
cmpsl
mov
lret
mov
stc
mov
push
inc
mov
js
lcall
dec
cmp
jbe
and
xor
xor
and
test
add
loopne
dec
std
mov
pop
dec
sbb
int
mov
subb
inc
scas
dec
cmp
jecxz
arpl
sahf
push
mov
scas
add
js
xchg
push
xor
out
daa
mul
mov
daa
mov
scas
lea
scas
jb
int
rorb
ss
pop
in
rcrl
jb
inc
cmpsb
aas
and
insl
add
stc
mov
xor
pop
sub
pop
pop
sar
insb
subl
sbb
xchg
xchg
int
push
pop
add
lret
call
or
xor
cmpsl
stos
sub
ret
mov
dec
mov
ja
jbe
in
mov
call
loopne
mov
mov
pushf
dec
cmp
xor
mov
or
les
rcrl
cmp
rcll
mov
pop
mov
jae
ss
add
insl
sbb
insb
sub
and
mov
lret
inc
jle
ja
addr16
cmp
ss
rclb
insb
dec
cmp
adc
dec
xor
ds
inc
pop
jbe
movsb
mov
pop
pop
mov
ret
push
push
out
xchg
jns
nop
and
cmp
push
pop
test
xor
adc
cltd
mov
add
lret
in
das
cmpsl
repnz
fadd
popl
adc
hlt
std
inc
into
jo
push
repnz
test
add
repz
mov
xor
outsl
adcl
push
or
jmp
cwtl
jno
mov
leave
lods
mov
pushf
xchg
adc
xchg
mov
inc
inc
pop
fcoml
cmp
stos
call
out
push
ja
add
push
imul
test
or
cmp
call
mov
xor
push
outsl
mov
mov
jns
pop
add
in
xchg
sti
sahf
shlb
ja
es
dec
mov
mov
mov
jmp
filds
push
or
cwtl
mov
test
jp
jo
stos
in
mov
mov
xor
call
inc
gs
jmp
popf
lret
sub
cmpsb
pop
addr16
into
mov
das
nop
cmpsb
push
push
sbbl
inc
jb
lret
inc
lods
lahf
ret
push
push
or
repz
fisubrl
mov
push
mov
cmp
cmp
outsb
mov
aad
pop
popa
rol
pop
sbb
push
dec
jb
fwait
pop
scas
cmpsl
cmp
fimull
repz
sbb
cmp
inc
mov
xchg
popa
inc
loopne
add
mov
xchg
inc
cmpsb
and
test
test
xchg
add
cmp
lret
dec
xchg
lock
outsb
popf
cmp
in
add
pushf
out
imul
mov
push
inc
adc
fucomp
loope
scas
xchg
icebp
xor
cmpsb
mov
xor
hlt
fmull
stc
sub
push
enter
push
and
nop
in
lea
pandn
hlt
add
sub
inc
inc
mov
cmpsl
jbe
push
xor
xchg
les
fs
sub
iret
sub
dec
fldcw
rcr
add
push
sahf
push
aas
adc
sbb
outsb
jo
repnz
xor
cmp
mov
mov
sbb
mov
fs
icebp
clc
mov
ljmp
cmc
dec
popf
xchg
loope
mov
dec
mov
ret
pop
mov
or
xor
scas
push
pop
inc
loopne
rorb
adc
jmp
and
mov
mov
mov
sub
leave
inc
jg
inc
and
or
popf
pop
ss
cmp
lods
push
jo
jl
movsl
fs
and
stc
dec
cld
iret
jp
clc
pop
ljmp
jmp
xchg
sub
mov
lods
mov
cwtl
adc
pop
adc
push
shr
push
out
pusha
push
inc
mov
push
mov
addr16
loopne
int
sub
lcall
push
or
inc
fildl
mov
popa
inc
add
or
mov
cmp
mov
mov
pop
ret
lret
xorl
lcall
jb
in
sbbl
cli
mov
inc
push
fldenv
xor
xor
fidivl
cmp
rclw
sub
mov
xor
insl
popa
popa
in
sub
and
jne
fistl
dec
pop
or
or
hlt
adc
test
iret
call
stos
jae
mov
mov
jmp
enter
push
push
jbe
sbb
shll
xchg
std
mov
xchg
std
outsl
lock
sub
enter
lret
dec
mov
push
out
mov
mov
adc
pop
mov
mov
cmp
fwait
jecxz
test
lock
arpl
adc
jns
cmc
popa
pop
lods
aad
test
dec
push
test
pop
and
arpl
adc
inc
lock
dec
in
sarb
jne
pop
xchg
push
sti
add
and
inc
sbb
cmp
ficompl
and
dec
sub
add
and
sbb
add
popf
in
iret
dec
jecxz
jp
push
dec
dec
int3
sbb
ds
mov
dec
imul
mov
scas
dec
lret
sbbl
or
mov
ss
sbb
std
fnstsw
cltd
pop
sub
push
lahf
fmull
dec
mov
mov
mov
cltd
outsl
std
sbb
fildl
test
mov
or
pop
adc
sub
sub
lods
rol
mov
mov
popl
sbb
pop
sub
add
xchg
aas
mov
push
mov
sub
dec
popf
lods
mov
fldt
lcall
and
sbb
xlat
dec
adc
sahf
outsb
mov
lods
cmp
mov
int
fisubrl
call
pop
or
jecxz
ror
lcall
std
xchg
xchg
fs
inc
mov
ret
inc
clc
mov
pop
cwtl
fs
pop
cltd
test
fnstenv
push
dec
aam
paddusw
sub
pop
cmp
test
into
movsl
or
sti
arpl
push
mov
add
add
out
push
lods
out
push
push
dec
aas
mov
pop
daa
lods
iret
sarb
orl
mov
popa
push
adc
jo
cld
ljmp
cs
jno
add
popa
inc
pop
xor
xchg
xchg
inc
push
mov
lock
data16
call
add
in
ss
int3
loope
jmp
es
adc
rcl
mov
call
cmp
loop
lahf
adc
aas
adc
xchg
shl
mov
pop
js
xchg
mov
sahf
pop
sahf
jp
lods
lret
xchg
dec
jnp
inc
dec
mov
jne
aam
inc
pop
dec
jge
xor
aaa
cmp
push
leave
into
js
jmp
nop
pop
loope
sbb
mov
or
addr16
stc
scas
push
ljmp
push
in
or
lret
xor
popf
mov
rcl
sbb
dec
js
imul
mov
fadds
mov
popf
jecxz
sbb
out
xor
adc
insl
add
sbb
sub
mov
pop
out
outsl
adc
xchg
dec
or
in
lahf
sub
imul
push
lret
dec
jns
pop
xor
push
adc
xor
sbb
cli
cmp
in
push
out
out
call
mov
push
push
add
cmp
sti
inc
rcr
les
ret
pop
addr16
ljmp
lods
or
shrb
cmpsb
mov
std
ret
adc
lock
popa
stos
push
inc
nop
mov
xor
jmp
fxch
mov
adc
in
push
mov
addr16
push
mov
and
and
add
lock
adc
pop
leave
in
xchg
out
mov
cmp
fisubrl
ret
cltd
xchg
imul
add
scas
pusha
push
icebp
aas
mov
iret
push
sbb
lcall
aam
div
mov
or
add
int
test
jne
fnsave
pushf
in
and
mov
or
icebp
mov
fiaddl
js
and
mov
por
mov
stos
cmp
int
js
adcl
mov
fists
xchg
sub
insl
shrb
shl
outsl
and
add
mov
shrl
ljmp
mov
cmp
mov
loop
pop
adc
pop
push
add
into
mov
gs
cli
pop
das
rclb
mov
adc
sub
dec
xor
xchg
cmp
inc
mov
or
insb
push
jecxz
sahf
in
mov
cmpsl
cmpsl
jae
jmp
jl
mov
inc
jl
mov
aam
test
bound
test
sbb
mov
add
ss
push
repz
pop
push
push
imul
mov
mov
inc
and
jecxz
pop
mov
sub
cmc
pop
clc
jmp
sarl
xchg
fucomi
mov
dec
xor
add
push
stos
or
in
clc
add
or
out
dec
fs
mov
popa
and
xor
popf
xor
out
sbb
jg
bound
inc
mov
dec
dec
lret
repnz
and
dec
outsb
out
test
mov
cmpsl
lcall
je
pop
add
ljmp
insb
sbb
mov
aam
sti
scas
aam
pusha
je
sub
mov
or
jae
orb
out
xchg
mov
xor
lcall
sarb
sub
int
in
add
fiadds
popl
loop
adc
cmc
sahf
stos
pop
in
ror
mov
idivl
leave
add
rorl
popl
pop
mov
xchg
rclb
lret
mov
push
mov
or
mov
xor
stc
xchg
shll
insb
jns
mov
les
movsl
enter
sbb
and
bound
jge
jge
sbb
add
stc
pop
mov
adc
jge
inc
loop
jle
add
mov
shrl
repz
sbb
jae
lahf
imul
mov
ret
xchg
stc
nop
cmp
fidivrl
mov
aad
loope
mov
mov
fmull
xchg
insl
xchg
cwtl
int3
xchg
mov
imul
loop
cli
cwtl
add
dec
lds
int
addr16
hlt
pop
stos
adc
cmp
lods
outsl
pop
repnz
pushf
pop
aad
adc
stos
dec
xchg
sbb
mov
leave
stos
add
pushl
call
out
sub
adc
rep
jae
or
pop
mov
mov
xlat
pop
in
mov
jb
hlt
xchg
mov
and
faddl
das
stos
aas
mov
in
xchg
clc
in
mov
das
psubq
aad
repnz
mov
call
aad
test
cmp
sub
or
data16
bnd
jb
rcrb
and
xchg
jo
inc
mov
fists
outsl
pop
and
dec
or
fbld
inc
or
ss
push
mov
xchg
cmp
loope
cmp
out
cmpl
push
xchg
push
sub
sti
cmp
sti
mov
js
mov
cmp
stos
stos
mov
jae
jb
rclb
pop
mov
inc
inc
pop
jle
aaa
inc
cmp
ret
mov
push
add
iret
cmp
jg
lods
jp
nop
or
gs
and
jnp
pusha
push
xor
push
push
push
lret
arpl
cld
cmp
inc
sub
fistpll
mov
gs
inc
outsb
frstor
and
sub
aad
popa
mov
lcall
mov
mov
imul
sbb
arpl
das
inc
fmuls
lds
pusha
cli
std
bound
push
pusha
out
jmp
push
xchg
jno
sbb
sbb
jg
ret
push
inc
insb
cmp
mov
bound
iret
das
mov
shlb
mov
jecxz
int
cld
cmp
jne
mov
sbb
push
dec
ret
pop
cmp
cmp
add
std
imul
jge
iret
push
xchg
dec
push
mov
sub
push
sub
notb
aaa
das
in
jmp
xchg
sub
mov
stos
push
jge
insb
inc
movsb
and
dec
lret
inc
pop
push
jmp
xchg
adc
adc
mov
imul
fdivl
sti
js
mov
paddusw
stos
sub
xor
movsb
xchg
aam
dec
sub
addr16
sti
mulb
and
mov
bound
or
wrmsr
or
movsb
mov
xchg
mov
cmp
and
xchg
xchg
shrl
xchg
push
inc
sbb
popa
pop
cwtl
mov
pushf
sbb
dec
inc
adc
out
inc
rorl
pop
mov
cmp
andl
aam
mov
adc
mov
push
xor
lret
pop
ja
cmp
mov
mov
movsb
les
adc
fwait
jmp
and
int3
adc
xchg
push
pop
mov
pop
xor
loopne
outsb
pusha
cld
adc
loopne
inc
sbb
cld
adc
sub
push
push
mov
cmp
push
int
stos
add
or
cmp
imul
aam
fcmovne
or
mov
mov
xchg
test
mov
incl
cmp
xor
shrb
aad
xchg
dec
mov
jmp
mov
and
inc
sti
sbbl
pusha
repnz
gs
xchg
dec
cmp
shlb
repz
xchg
pop
jecxz
jmp
pop
jp
imul
jne
jb
jno
pop
mov
adc
xor
mov
or
je
nop
in
and
jecxz
xchg
inc
mov
jbe
addb
daa
adc
xor
cmc
ret
bound
es
push
lock
out
aad
mov
or
push
pop
and
inc
push
cmc
fwait
incl
xchg
cmpsl
in
xlat
jmp
push
insb
jae
push
and
stos
mov
das
inc
fistl
inc
inc
dec
fwait
adc
cmp
loopne
into
shll
add
pop
mov
mov
mov
in
dec
fcmovne
pop
enter
not
push
out
push
dec
fwait
aas
jg
mov
loopne
fisubrs
lods
enter
das
js
es
mov
call
mov
loopne
sbb
vphaddbw
incb
add
mov
rol
rolb
xchg
into
rorl
and
repz
shr
nop
ss
imulb
dec
push
arpl
jnp
cmc
je
push
insl
aaa
mov
imul
jo
aaa
icebp
push
rorb
jp
adc
imul
faddp
stc
adc
test
ret
aaa
pop
fwait
xchg
jno
inc
in
and
xchg
rep
xor
jg
leave
bound
into
sbb
popf
xchg
sti
pushf
in
jp
jl
cmc
ret
mov
pop
aaa
lahf
stos
popa
xchg
test
imul
dec
pop
add
inc
ja
or
pop
dec
es
popa
jb
jg
mov
jne
in
mov
mov
jl
fsubrs
out
hlt
mov
mov
pushf
add
jl
int3
jle
dec
das
int
sbbb
mov
cmp
push
fistpll
out
cmp
call
addr16
fucomip
and
mov
sti
idivl
push
push
pusha
aad
pop
fadd
inc
fcomps
pop
and
dec
and
or
fadd
addr16
jle
dec
xor
outsb
popa
mov
xor
xor
lret
mov
insl
pop
pop
adc
xchg
sbb
add
inc
push
jle
mov
iret
sbb
pop
xchg
xchg
and
add
pop
push
push
pop
inc
jl
cmp
jnp
data16
cwtl
xchg
mov
jecxz,pt
inc
dec
mov
mov
out
push
popa
int
pop
mov
int3
mov
xchg
push
pushf
rclb
sbb
fsubrp
lock
push
aas
insb
mov
cmpsl
pop
jecxz
outsb
push
ljmp
push
rolb
pop
pop
jbe
inc
inc
sti
out
out
add
mov
cld
gs
jno
fucomip
fstl
cmpsb
sbb
and
cmp
add
mov
add
pop
jmp
dec
add
xorl
enter
xchg
aad
jns
push
adc
popf
popa
addr16
push
inc
xchg
stos
movsl
sahf
pusha
mov
sbbb
frstor
dec
les
addb
inc
cwtl
sbb
jno
into
dec
movsb
scas
stos
or
sbb
hlt
divb
xchg
or
shlb
repnz
adc
and
jg
cmpsl
jo
insb
and
and
movl
mov
pop
test
xchg
lds
sbb
insb
inc
sbb
fs
cmp
push
in
sbb
mov
mov
test
mov
enter
leave
icebp
add
xlat
mov
orps
sub
inc
pop
lret
xchg
inc
and
xchg
xchg
aas
stc
push
test
cmp
mov
push
std
rcll
cmpsb
pop
movsl
enter
mov
add
jne
daa
mov
push
inc
bound
mov
pop
mov
pop
mov
mov
dec
adc
add
mov
sbb
mov
lods
in
pop
test
push
xchg
dec
pop
les
je
mov
imul
or
mov
dec
inc
dec
arpl
lret
sub
mov
inc
mov
jb
dec
dec
or
mov
jbe
outsb
arpl
in
lods
mov
jmp
movsl
push
pop
push
and
cld
pop
cs
ret
sbb
fnstsw
lcall
push
and
js
fdiv
lcall
mov
popa
jnp
aaa
mov
adc
loop
xor
jecxz
push
in
lds
xorb
jmp
enter
and
inc
sarl
inc
sbb
mov
jle
aam
xchg
shl
outsb
jne
jl
cmpl
cmp
mov
into
test
movsl
cwtl
mov
pop
dec
scas
dec
adc
push
xchg
jne
xchg
xor
loope
fs
cmpsb
shlb
xchg
and
jb
pop
xchg
mov
sbb
mov
dec
pop
cmp
sahf
mov
rcl
push
out
lods
mov
xor
rclb
cmpsb
dec
jmp
fsubs
shlb
pop
sbb
jmp
in
ret
mov
mov
imul
fsubl
popa
scas
loope
aam
call
es
mov
cmp
or
lea
push
mov
sti
neg
aas
jnp
into
jge
clc
andl
pop
or
xchg
test
push
xchg
cmc
test
out
das
ficoml
insb
mov
ret
add
push
sbbb
xchg
jle
add
insl
jne
mov
int
outsl
mov
lea
adc
cmp
add
mov
dec
xor
daa
pop
mov
add
cwtl
out
outsl
nop
and
cmp
cmp
xchg
das
test
lods
cli
clc
pop
sub
outsb
loope
jge
xchg
loope
sub
insb
xor
sahf
outsb
lea
cmpsb
and
test
pop
cmp
xlat
ret
mov
in
das
mov
scas
push
and
adc
ss
addr16
addr16
fdivrp
jne
cltd
jmp
aad
mov
push
dec
mov
pop
gs
cmp
add
mov
cmp
sub
mov
iret
xor
fmul
push
shll
repz
icebp
repz
cmc
repnz
aam
call
test
sarb
shrb
or
arpl
mull
and
ret
mov
pop
push
out
prefetch
in
scas
lods
inc
les
jle
shr
push
jge
sbb
pop
jl
into
mov
sub
push
ja
xorb
and
sub
stos
or
clc
aad
xchg
insl
mov
daa
inc
cs
mov
rcrb
sub
dec
cmp
test
les
sbb
dec
push
stos
int3
mul
mov
sub
arpl
adc
imul
and
mov
jecxz
xchg
sti
sub
sub
arpl
adc
imul
and
mov
jecxz
xchg
sti
addb
mov
sub
bound
adc
imul
and
mov
jecxz
xchg
sti
sub
pop
and
lods
les
repz
popa
xchg
jno
inc
mov
dec
movsl
pop
and
adc
div
daa
shll
inc
mov
addr16
jecxz
xchg
jno
inc
mov
and
xor
add
adc
loope
xchg
inc
shll
pop
mov
ja
aas
popa
gs
inc
outsl
push
fldenv
mov
stc
add
adc
xor
dec
movsl
push
shrl
and
xchg
jmp
fiadds
ret
out
sarb
jg
stc
js
mov
cmp
jae
imul
icebp
daa
daa
xor
push
jp
icebp
or
mov
aam
pop
rorl
cmp
arpl
mov
cmp
out
inc
std
push
sbb
push
xor
aaa
sub
mov
dec
sbb
push
inc
lea
cmp
xlat
xor
mov
out
push
cmp
popf
mov
lret
push
dec
data16
sbb
sbbl
and
adc
xchg
daa
sbb
jb
add
jnp
js
or
cmp
sbb
xor
adc
scas
rol
ror
mov
jbe
xchg
je
fsubl
jno
inc
mov
and
scas
xor
add
shl
icebp
push
roll
pop
pop
mov
xorl
shrl
iret
cmp
dec
testl
test
cmp
push
adcl
lret
jae
inc
and
jbe
adc
inc
test
mov
cmp
push
in
shr
sti
and
sub
xor
and
xor
add
adc
loope
icebp
daa
shll
inc
mov
ja
xchg
jno
inc
mov
and
xor
add
adc
loope
icebp
daa
shll
inc
mov
ja
xchg
cmp
ja
or
mov
jecxz
mov
and
out
xorl
adc
incb
cltd
push
bound
push
and
std
rclb
mov
in
cld
cs
lods
cld
or
push
shrb
stos
push
mov
scas
sbb
in
lret
fistpll
or
xchg
fldl
sbbl
pop
arpl
xchg
adc
adc
xchg
repz
and
std
data16
mov
out
aam
push
fwait
ds
addr16
bound
cmp
test
scas
loop
or
aaa
arpl
cltd
mov
push
in
lret
ret
cmp
sub
fsubr
inc
mov
repnz
jo
jp
subl
dec
leave
popa
sub
lret
out
dec
scas
cmp
lock
or
add
jg
sar
mov
mov
sbbl
xchg
or
mov
pop
mov
dec
icebp
out
movsb
bound
adc
cmp
mov
or
out
ja
repnz
add
scas
ljmp
jo
popa
cmc
push
ja
pop
iret
push
jmp
pop
ds
jo
je
inc
rclb
or
cli
jbe
in
movsl
js
lods
cmp
mov
pop
jmp
sbb
div
cli
fdiv
xchg
in
into
cwtl
add
insb
lcall
in
rcr
and
jg
fiadds
push
mov
mov
dec
lret
stos
pusha
insl
or
lds
mov
pop
loope
aaa
dec
sti
push
jp
inc
xchg
xor
out
enter
mov
jge
decb
clc
shl
in
xor
adc
pop
clc
nop
push
ja
test
data16
xor
sbbb
lock
cmp
mov
outsb
push
inc
add
mov
push
pop
pusha
xor
adc
es
xor
je
pushl
adc
mov
arpl
push
jle
jbe
stc
arpl
xchg
lret
stc
jb
ds
in
adc
lcall
mov
xchg
clc
xchg
into
stos
fucom
fcomp
addr16
jb
jb
js
mov
jle
inc
mov
ljmp
clc
xor
mov
mov
jmp
out
jl
jge
movsb
push
imul
inc
or
aaa
and
pusha
pop
xchg
and
sbb
jecxz
ret
cltd
ja
cmc
les
xor
add
adc
pop
cmp
movsb
sahf
popa
sbb
adc
cmp
jmp
lods
inc
jle
adc
pop
test
popf
cmpsl
sbb
push
xlat
ret
adc
jo
xorb
xchg
lods
dec
jnp
mov
mov
sub
or
loop
mov
sti
pop
cmc
mov
ja
fildll
sub
sbb
jle
push
add
cmp
add
fwait
jl
sbb
inc
jge
gs
fistps
daa
gs
mov
test
aas
pop
ret
inc
aas
sbb
lds
insl
jns
xorl
fwait
ss
inc
iret
ss
pop
test
mov
hlt
cmp
pop
cli
push
push
mov
inc
les
push
mov
adc
mov
out
imul
mov
sub
shl
xchg
lret
aad
mov
stc
inc
dec
push
xchg
aad
jmp
movsl
add
in
xor
mov
sub
hlt
mov
adc
lahf
xchg
pop
sub
pop
push
xchg
ret
jae
insl
adc
xchg
pop
push
xchg
in
cmc
std
and
sub
sti
adc
test
imul
loope
icebp
int3
xchg
ss
out
outsb
testb
sbb
pop
pusha
les
push
jecxz
pop
xchg
fcompl
repz
enter
cmp
daa
lods
xchg
scas
or
jecxz
push
and
test
movsl
mov
outsl
xor
cs
or
pop
jg
mov
movsb
mov
movsl
iret
adc
push
stc
scas
js
jge
add
sbb
jmp
ja
dec
test
gs
jne
jbe
and
fstpt
and
jmp
lds
or
inc
add
push
pop
sub
inc
lock
mov
xchg
inc
mov
fcompl
mov
add
cmpsl
or
jne
rep
mov
dec
add
add
sub
adcb
xchg
pop
js
pop
bound
scas
fwait
mov
mov
xlat
pushl
repnz
out
je
movsb
sbb
ss
inc
pop
jb
pushf
sub
stc
addl
jno
mov
jb
push
push
fcmove
cmp
scas
shll
fsubs
mov
push
and
fwait
jbe
mov
jbe
dec
cmp
xchg
lods
add
int3
movsb
jnp
test
adc
scas
inc
dec
jb
repz
push
jns
jge
inc
cmpb
mov
lds
dec
pop
std
cltd
lods
xchg
inc
ret
jo
xchg
ja
jbe
xchg
int3
and
xchg
pop
mov
scas
mov
mov
call
repz
mov
mov
cmpsl
xor
push
outsl
or
sub
or
adcl
lret
mov
push
jne
shr
sbb
mov
loope
stc
cwtl
mov
push
sub
int
gs
ficoms
pop
std
jae
dec
ja
lcall
xor
or
inc
xchg
jge
rcll
lahf
push
lods
ljmp
sbbb
mov
and
mov
aaa
stc
xchg
and
loopne
out
fwait
mov
push
addb
dec
jle
mov
insl
cli
lret
outsl
scas
loopne
fcomps
cmp
xor
adc
push
loop
test
sub
sbb
sub
imul
test
hlt
mov
mov
cmpsl
pop
push
test
sti
lret
fdecstp
cmpsb
fcoml
mov
sbb
mov
popa
or
sahf
adc
mov
and
imul
cmp
popa
sbb
push
push
mov
aaa
mov
dec
xor
aas
outsb
cmp
div
jno
aad
jne
xorl
inc
neg
pop
leave
data16
insl
dec
add
outsb
cmc
ss
jne
pop
jae
insb
rcl
fisubrl
dec
mov
lahf
mov
xchg
push
ds
jns
xchg
sbb
insl
cmp
cli
adc
insb
and
mov
push
pop
pop
xchg
aad
inc
lods
lret
ret
ss
rorb
imul
inc
adc
xlat
adc
xchg
jbe
je
outsb
call
xor
addr16
pushf
fildll
push
lds
dec
mov
jne
out
lea
mov
outsb
and
lock
out
sub
sti
gs
or
mov
pop
sti
pop
cmc
fsubrl
cmp
sar
dec
cs
push
xor
xchg
pop
or
adcl
inc
dec
stos
mov
stos
ret
faddl
fisubrs
lcall
mov
pop
cmp
add
mov
adc
or
and
sub
xor
inc
sub
int
stc
jne
pop
fdivp
mov
mov
leave
xchg
lcall
push
xchg
sub
mov
jne
mov
jp
in
daa
fisubrl
cmp
mov
xor
lret
out
ds
loop,pn
mov
in
lea
mov
cmc
loopne
je
cmpsb
adc
lods
imul
inc
enter
test
repnz
dec
daa
repz
xchg
pop
cmc
mov
inc
popa
jno
or
scas
sub
pop
in
jno
and
jecxz
add
int
push
add
xor
cld
fadds
ja
xchg
out
xchg
or
test
fdivr
divb
cmpsl
add
les
icebp
mov
sbb
std
mov
mov
dec
cmp
push
add
shr
invd
lods
add
add
negl
aaa
add
mov
mov
inc
dec
lea
xchg
xorb
xchg
push
adc
dec
in
adc
mov
xchg
cwtl
xor
popf
sbb
pop
mov
shll
leave
test
jecxz
xchg
push
inc
pop
push
cld
mov
xor
xor
or
push
xchg
pop
push
aam
mov
cld
and
xchg
pop
push
mov
adc
icebp
mov
call
add
jnp
lret
xor
out
and
fcompl
dec
nop
fnstcw
rclb
cmp
cltd
sbb
xor
sti
push
jmp
xchg
rcrl
imul
les
ja
imul
xchg
in
sbb
and
xor
dec
adc
pop
jae
pop
mov
jecxz
fs
mov
fldt
inc
sar
mov
inc
cltd
push
add
inc
xchg
add
lahf
cli
jno
fs
dec
faddl
out
insl
xor
and
arpl
and
mov
aad
movsb
mov
mov
lahf
dec
xchg
les
cli
jns
cmp
imul
ss
xchg
jbe
lods
cli
cmp
xchg
xor
xlat
dec
int3
int
xchg
dec
inc
mov
shrl
jg
sub
push
rcll
push
loop
outsb
cld
dec
push
sub
jg
loop
push
fldlg2
dec
scas
or
mov
insl
js
xor
cli
cmp
cmpsb
mov
repnz
adc
int3
test
xchg
es
mov
inc
es
xchg
fstps
cmp
arpl
lea
dec
andl
dec
aas
inc
and
sbb
push
xor
leave
popa
jmp
dec
dec
push
xor
jbe
ja
jnp
jbe
jmp
push
ds
jbe
mul
or
shrb
out
mov
add
cli
add
mov
dec
cmp
push
push
pop
mov
into
jp
js
or
cmp
xchg
cmpl
imul
test
bswap
shll
jecxz
pop
add
arpl
data16
xchg
mov
fsubl
outsl
pop
jae
into
push
mulb
cmp
dec
fucomp
dec
mov
imul
loopne
mov
or
ja
mov
xor
mov
xchg
push
cli
mov
add
hlt
lcall
repz
divb
adc
aad
lock
inc
push
outsl
outsl
mov
ffree
cmpsl
lret
inc
inc
outsl
das
fcmovnu
pop
or
inc
dec
cld
imul
or
jmp
popa
dec
mov
push
cmpsl
mov
pop
mov
xchg
lcall
dec
shlb
stos
pop
fucom
xlat
mov
rorl
clc
div
jg
mov
sahf
fwait
dec
enter
test
sub
int
stos
shlb
shrl
mov
push
sbb
cmp
mov
rcll
mov
cmp
loope
jle
cli
pop
pop
outsl
cmp
dec
es
in
cmp
pop
cmpsb
xor
faddl
cmp
cmp
rcrb
out
adc
adc
idivb
adc
xchg
loopne
push
sahf
inc
scas
and
cli
shr
lahf
ds
enter
push
cmpsb
enter
mov
stc
scas
xor
push
pop
and
stc
test
in
inc
lcall
jnp
push
add
ss
ffreep
sbb
inc
xchg
aad
cli
add
mov
xchg
frstor
push
sub
inc
sub
cmp
ljmp
push
test
fwait
test
mov
ret
clc
fdivs
scas
add
pop
cmp
add
and
rcll
nop
in
popa
shll
inc
inc
lods
ss
add
sbbb
cmp
adc
test
stos
cmpsb
adc
xchg
repz
pop
idivl
cmp
and
or
sub
stc
addl
lds
push
mov
aas
push
nop
jg
sub
jo
and
out
xchg
fisttpll
outsb
out
scas
sbb
popa
sbb
xlat
xor
out
push
out
inc
inc
jge
rcrl
xor
lds
or
cld
out
dec
mov
shll
jl
mov
lea
xchg
mov
push
and
out
mov
cld
fsincos
push
mov
sahf
aas
hlt
jl
lahf
mov
sub
ds
mov
mov
jnp
sub
loope
push
cmp
addl
loope
dec
add
or
dec
and
and
cmp
mov
aas
insl
incb
fsts
pop
jne
jnp
decb
xchg
mov
xor
ret
idivl
or
mov
je
lods
js
jl
xchg
add
jg
int
jp
xchg
push
xorb
in
fmull
push
lret
and
cmp
and
jb
dec
in
inc
aam
sub
dec
jmp
mov
mov
dec
sbb
repz
lock
and
bound
adcl
pop
out
cltd
jl
adc
adc
aaa
leave
cmp
jg
cmpsl
mov
ret
cmpsb
fwait
es
loop
and
inc
sub
and
loopne
popa
cmp
push
movsb
les
arpl
sbb
push
jg
xchg
mov
sbb
pop
lock
repz
dec
lcall
or
mov
inc
xor
flds
lods
imul
movsl
in
inc
mov
push
test
push
and
outsb
data16
fbld
fisubrs
ja
mov
sub
mov
sub
pop
cmp
push
xchg
je
insb
mov
pop
add
repz
pop
imul
mov
sbb
or
imul
cmpsl
repz
in
shrl
aas
and
add
push
aad
cmpsl
ljmp
pop
test
xchg
movsl
cmp
dec
mov
int
out
inc
and
lds
pop
or
pop
in
mov
or
inc
cmc
add
add
stos
enter
pop
dec
fmull
inc
pop
aaa
push
lret
xchg
or
into
call
stc
xchg
cwtl
out
lcall
push
bnd
pusha
enter
xchg
fwait
jo
jnp
test
les
stos
lret
jmp
jne
and
push
outsb
aaa
push
popl
cli
rcrl
mov
stc
push
inc
pop
cltd
jle
fwait
jnp
hlt
jge
mov
pop
stc
enter
getsec
xor
repnz
pop
lods
mov
or
in
adc
andb
or
dec
pop
dec
mov
pop
lea
ret
fiaddl
jbe
aam
repz
adc
mov
xchg
shrl
push
rolb
adc
mov
test
xor
xor
dec
lods
sti
fsubl
sbb
mov
movsl
insl
loop
cmp
aam
test
dec
or
lahf
push
jg
push
pusha
test
mov
fisttpl
sbb
jb
test
inc
cmc
nop
cmp
rclb
inc
xchg
sbb
andl
push
pop
mov
lock
mov
add
lahf
add
cmp
mov
std
aam
test
outsl
mov
loop
pop
inc
cld
adc
and
xlat
scas
cld
pop
adc
inc
jmp
loop
or
or
gs
shlb
push
fcmovnu
cli
hlt
scas
ret
push
lock
add
sub
pop
pop
pop
xchg
jbe
pop
xor
ljmp
add
pop
fs
jge
and
push
mov
pop
jne
js
ret
add
pop
in
mov
pop
cmp
push
lods
rcrb
mov
lret
jae
inc
mov
xorb
dec
movsl
lds
jmp
sbb
jno
sti
in
sti
push
xor
pop
dec
jmp
mov
jae
cwtl
xor
test
shrb
sub
cmp
jbe
inc
sti
mov
cmc
dec
push
pop
lahf
xor
scas
ror
and
jbe
cmp
mov
repnz
negl
mov
rcrl
test
imul
daa
roll
into
in
sbb
push
out
xlat
dec
fwait
dec
mov
sub
insl
mov
or
in
push
jecxz
mov
dec
ja
addr16
insl
inc
and
pop
xor
adc
bound
mov
mov
test
or
mov
mov
xchg
adc
imul
mulb
lds
push
popf
adc
sbb
movsb
sbb
lret
sub
xorb
push
loopne
lahf
mov
xor
pop
popf
andl
fisttpl
mov
cmp
jns
push
adc
or
mov
mov
jl
loopne
push
mov
out
cmpl
shlb
scas
inc
loopne
mov
xchg
dec
jo
jae
xor
add
out
cmp
add
xorl
add
addb
lahf
jo
aad
xlat
imul
arpl
mov
in
push
fsubl
jo
cmc
mov
sub
bound
or
loope
mov
rorl
fidivs
pushf
jecxz
jo
outsb
sbb
xor
dec
faddl
dec
fidivs
fidivrl
push
dec
and
enter
mov
in
xchg
xor
out
push
inc
nop
mov
outsb
add
jno
in
cmc
test
mov
jge
out
push
pop
scas
jne
add
dec
cli
scas
and
pop
mulb
pop
in
mov
int3
xor
or
dec
jle
dec
sbb
cld
pop
std
adc
xchg
rcll
in
inc
push
ljmp
sbb
je
add
mov
sub
dec
repz
mov
aad
xorb
add
or
pop
jmp
mov
lods
dec
lcall
cli
cmp
xchg
cmc
cmp
cld
pop
test
out
mov
sbb
lock
mov
ss
cmp
xor
mov
xlat
fsubr
push
push
jmp
push
mov
dec
mulb
pop
in
mov
mov
xor
outsb
jl
fxtract
addl
push
das
adc
xchg
aas
mov
dec
push
dec
and
jmp
repnz
push
add
or
dec
std
int
dec
arpl
out
mov
sti
rclb
lds
inc
hlt
push
and
adcl
push
imul
cli
adc
call
cmpsb
fimull
push
and
mov
inc
adcl
divl
xchg
orl
mov
dec
xchg
cmp
movsb
jle
cli
loopne
mov
in
fcmovnbe
aas
cltd
fstp
jle
ds
add
and
bound
outsb
mov
ficomps
push
rorl
ss
mov
aaa
mov
hlt
mov
and
dec
out
xchg
or
sub
vcvtps2pd
adc
icebp
pusha
cmp
mov
and
into
enter
jmp
js
xchg
lret
push
icebp
xor
es
lahf
nop
cmp
inc
je
add
lahf
mov
jno
pop
pop
imul
into
push
adc
push
sahf
pop
fidivrl
int
into
inc
lret
les
movb
std
sub
jns
inc
pop
int
mov
or
sar
jb
jbe
data16
pushf
sarl
mov
stc
cltd
aam
repz
mov
pop
stos
xchg
mov
adc
and
mov
lret
mov
fnstcw
add
stos
decb
mov
rcll
push
push
test
jb
xor
jge
pop
mov
push
orl
gs
loope
fistps
mov
lock
in
sub
adcl
jns
ficoms
mov
call
lea
popf
incl
sahf
and
loop
mov
pop
pop
outsb
pusha
xchg
pop
in
or
jl
int
enter
jno
scas
mov
test
repz
inc
pop
out
fsts
in
add
adc
data16
test
insb
jnp
mov
mov
jmp
daa
and
cmp
jle
ds
or
jge
cmp
sub
cmp
rol
mov
les
aad
insb
cmp
sub
push
cmc
negb
jle
mov
scas
in
adc
inc
dec
ss
xchg
adc
push
cmpsb
lret
xor
jbe
ds
movsb
aam
jb
mov
sbb
xor
xlat
xor
ds
sbb
lahf
or
scas
pop
jo
clc
out
xor
and
fs
sbb
pushf
xlat
sub
jg
rolb
sbb
shr
pop
jno
inc
push
call
xchg
sbb
insb
and
ficompl
xor
sbbl
cmp
lcall
es
jnp
imul
sub
xchg
mov
inc
push
xchg
loop
icebp
cmc
sub
xchg
adc
xchg
jo
dec
fidivl
lock
imul
dec
lea
mov
jecxz
pop
sti
pop
push
lcall
insb
dec
mov
orb
gs
sbb
add
fisubs
mov
jne
jno
add
call
mov
insb
cmp
scas
push
sub
add
fs
adc
push
sbb
lods
cmp
adc
mov
push
sbb
jb
dec
xor
or
inc
dec
inc
and
adc
inc
jne
mov
in
je
add
lock
dec
lea
pop
adc
int3
sahf
push
mov
int3
mov
lret
cltd
sub
clc
lret
aas
mov
pop
xor
dec
cmpsl
popa
jp
sbb
xorps
jns
jno
inc
mov
and
xor
add
adc
loope
icebp
daa
shll
inc
mov
ja
xchg
jno
inc
mov
and
xor
add
adc
loope
icebp
daa
shll
inc
mov
ja
xchg
icebp
mov
xlat
mov
add
adc
popa
pop
icebp
xlat
shll
inc
mov
lahf
xchg
xchg
popa
lret
jno
inc
xchg
push
and
xor
add
pop
loope
pop
shll
xor
fisttps
jle
outsb
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
cli
out
jp
dec
into
pop
ficoms
fnstsw
ljmp
pop
stos
cs
push
push
jp
dec
into
pop
fisubrs
scas
cmp
ljmp
pop
stos
cs
push
push
jp
dec
into
pop
fisubrs
scas
cmp
ljmp
pop
leave
jl
pop
stos
imul
sbb
jp
push
stos
or
mov
lea
jge
jb
sub
dec
mov
cmpsb
sub
out
test
xlat
aas
out
mov
sub
inc
addb
push
xchg
dec
push
pop
push
out
inc
mov
push
sub
cmp
orl
and
or
lods
adc
push
mov
sub
sbb
cli
pop
cmp
lret
mov
mov
lcall
add
sbb
ret
inc
or
enter
jg
mov
insl
stc
out
jnp
pcmpgtw
imul
iret
fildll
repnz
fcompl
adc
dec
push
pop
mov
push
xor
into
pop
fisubrs
scas
cmp
ljmp
pop
stos
cs
pop
push
cmpl
mov
imul
jg
addb
pop
movsl
and
inc
out
out
jnp
scas
cmp
lret
pop
nop
or
bound
mov
mov
push
fidivrl
jo
mov
jp
imul
mov
ljmp
pop
stos
cs
push
push
jp
dec
into
pop
fisubrs
scas
cmp
ljmp
pop
stos
cs
push
push
jg
cmp
mulps
jne
pop
cmc
pop
push
stos
jnp
xor
jnp
jmp
push
sub
lea
sbb
in
adc
ret
ja
and
xchg
test
and
repnz
scas
sbb
push
dec
pop
push
xor
xchg
pop
inc
adc
pop
or
addr16
imulb
or
addr16
push
fbld
push
push
testb
int
fisubl
es
fildl
cli
rcrl
imul
xor
cmpsl
cmp
imul
insb
or
scas
jns
push
jle
push
insl
push
sti
jo
xchg
fidivl
int3
out
lock
addr16
xor
ss
int
into
scas
bound
push
mov
pop
adc
js
enter
cli
bound
xchg
push
ret
mov
addr16
cmp
xor
arpl
int3
pop
sbb
sbb
imulb
shl
pop
and
addl
dec
sti
adc
mov
push
mov
mov
roll
and
dec
sub
inc
inc
adc
mov
inc
in
js
adc
in
mov
cwtl
mov
je
out
in
lds
jp
and
in
pushf
data16
in
pop
outsb
fists
je
stos
dec
and
outsl
cwtl
sahf
and
sub
mov
gs
iret
jb
fucom
dec
pop
scas
adcb
push
cmp
lret
xchg
xor
mul
mov
jge
ljmp
adc
xlat
shlb
mov
or
scas
mov
mov
cmp
adc
adc
fs
adc
cltd
jae
int
out
in
les
sbb
mov
mov
sbb
mov
lds
cmp
aam
push
jp
mov
dec
jge
or
or
cmp
mov
adc
daa
cmp
lahf
cwtl
ljmp
sub
sbb
movsl
jle
dec
fisubs
jo
sbb
xor
out
pop
jg
jns
push
insb
gs
xor
mov
mov
xor
adc
les
push
cmpsl
fnsave
jmp
and
sbb
cs
mov
fs
adc
in
jne
test
inc
lds
call
stos
xorb
stos
push
or
lret
mov
subl
data16
div
in
fiaddl
js
fildl
cs
xchg
inc
pushf
data16
jne
inc
xor
sub
or
cmp
je
pop
cmp
mov
sbb
in
sbb
shl
clc
mov
pop
cmpxchg8b
and
and
inc
adc
pushl
or
insl
xchg
je
ss
or
test
dec
stc
cli
adc
mov
xor
adc
mov
dec
mov
int3
inc
mov
and
jae
cmpsb
or
xchg
pop
push
test
lds
test
test
sahf
out
add
arpl
scas
push
push
mov
dec
int3
add
dec
push
xor
pushaw
xlat
rol
mov
lods
sub
push
pop
sub
sub
pop
in
push
adc
cmovo
push
push
fdiv
inc
mov
loope
repnz
xor
dec
dec
fs
mov
outsl
cmpsb
lea
jg
cwtl
mov
cmp
daa
lds
mov
int3
daa
lcall
enter
jecxz
mov
stc
outsb
push
jo
dec
sub
mov
pop
ret
pusha
push
out
adc
out
stos
aas
mov
outsl
shll
add
fsubrl
insl
das
inc
cld
xchg
mov
ret
dec
inc
jb
insl
std
fwait
dec
pop
sbb
mov
push
outsb
js
or
add
xor
inc
in
out
rclb
mov
mov
incl
push
cmp
je
loopne
xor
jle
aam
sarb
fstps
mov
sbb
xor
sti
mov
xchg
mov
dec
push
int3
push
pop
inc
mov
push
and
xor
cmp
mov
cmpsb
ja
push
push
loop
inc
stos
cwtl
je
lock
fiaddl
xchg
sub
out
or
stc
icebp
in
or
sbb
jl
aaa
pushf
lret
jae
dec
lcall
sub
cmc
popf
shlb
dec
fwait
pop
in
mov
cmp
jp
idiv
sbb
xor
mov
mov
outsl
test
jne
mov
mov
stos
fmul
lds
andnps
aaa
in
ret
dec
pop
and
dec
adc
out
xchg
pusha
arpl
mov
sub
roll
imul
call
xchg
test
mov
xchg
shr
sbb
mov
inc
insb
push
jo
push
and
and
int3
int
xchg
xor
mov
push
sub
out
mov
cmc
cmpsl
jns
add
and
add
sti
jno
imul
and
xor
fwait
aas
ds
roll
out
mov
dec
jl
xchg
or
lods
pop
mov
imul
leave
jmp
lahf
xchg
iret
xor
insb
jp
xchg
jno
test
aas
or
loop
xor
jg
push
mov
mov
popa
je
insl
mov
jns,pn
and
movsb
mov
dec
mov
fs
lcall
mov
lret
arpl
jmp
cmp
push
clc
cli
or
sub
dec
loope
jmp
pop
xchg
pop
cpuid
loope
in
mov
fcoml
repnz
and
fisubrs
or
sti
scas
jle
jns
xlat
fucomi
aas
lods
cltd
lea
pop
push
inc
shll
repz
fildll
lea
mov
sub
push
out
rorb
iret
xor
in
or
nop
push
push
or
jmp
aaa
xchg
hlt
mov
xlat
fwait
mov
scas
outsl
cmpsl
sub
pop
mov
push
out
lods
pop
cwtl
out
sbbl
daa
vmaxss
test
mov
pop
fcoml
roll
dec
enter
ret
cli
sbb
fnstenv
movl
and
popf
push
testb
pop
sahf
cmc
xchg
ja
pop
ss
lahf
aas
mov
dec
fidivs
dec
test
js
dec
mov
repz
imul
dec
into
sarb
in
push
das
fists
sbb
sbb
pop
dec
or
pop
inc
loopne
in
adcb
xchg
mov
scas
outsl
jns
sahf
aaa
insb
mov
cli
mov
sbbl
lock
dec
ficomps
pop
push
cwtl
jbe
std
aam
mov
pop
mov
xor
out
pop
push
in
inc
sub
and
seto
test
in
mov
inc
push
out
mov
lea
sbb
hlt
push
or
inc
mov
mov
or
mov
rcr
mov
dec
or
or
add
out
lret
mov
popa
mov
pop
inc
jl
push
jae
and
test
out
adc
out
pop
pop
cli
je
pop
sbb
xor
or
cmp
lods
mov
sub
inc
cli
ficompl
out
mov
lds
cld
popa
std
pop
mov
and
inc
in
mov
imul
dec
sarb
mov
stos
xor
in
ret
and
pushf
sub
mov
push
push
push
cmp
shl
lods
gs
mov
xchg
push
rorb
scas
jp
shlb
fcmove
imul
mov
das
outsl
mov
pop
cmp
jnp
lret
sbb
subb
sub
xchg
shrl
bound
shrl
fisubrl
jge
push
icebp
push
das
repz
push
loope
cmp
orl
scas
add
xchg
stos
mov
out
cltd
sbb
mov
hlt
loope
lahf
in
add
mov
mov
jg
lods
sbb
ror
pop
xchg
mov
jmp
addr16
sub
pop
cmp
sub
in
cld
pop
dec
push
mov
rcl
or
in
iret
data16
jmp
pop
mov
je
test
xchg
add
sbb
pusha
mov
sbb
mov
mov
cmpsl
aad
cltd
pop
loop
adc
bound
lods
adc
push
shr
test
ret
mull
xor
addr16
loop
mov
add
movsl
scas
iret
nop
pop
adc
inc
outsl
ja
pop
push
nop
lahf
adc
sub
pop
dec
hlt
lods
xor
and
lods
loop
mov
pop
icebp
jbe
fimuls
out
in
inc
inc
pop
adc
adc
adc
shrb
mov
pop
aas
mov
iret
adc
or
cmp
jp
add
jnp
jb
xchg
add
xchg
cmp
sti
jmp
gs
jecxz
das
rol
ja
sub
cmp
lock
mov
cmp
xchg
mov
fimuls
cmp
adc
jbe
bound
push
movsl
jmp
mov
push
sub
repz
movsl
push
push
cmpsb
sar
jecxz
dec
orb
jge
rcrl
mov
dec
dec
test
xor
fdivrs
push
push
jne
cmpsb
aaa
push
in
ficomps
loop
sub
xchg
ror
mov
jg
or
addl
dec
inc
dec
mov
xchg
mov
ffree
neg
repnz
jmp
cmp
cli
inc
push
daa
pop
xchg
pop
ljmp
xchg
mov
mov
xchg
imulb
ss
pop
add
inc
out
cmc
push
dec
pop
fistl
push
cmp
icebp
jecxz
xor
sub
or
xchg
fwait
pop
sub
xor
xchg
in
dec
jne
out
mov
imul
mov
cltd
fcom
mov
jmp
push
cli
xchg
push
sti
mov
movsb
jbe
lock
icebp
sub
xor
js
xchg
pop
xchg
jp
cmpsl
aam
push
repz
jp
push
sbb
scas
test
cmc
mov
pop
imul
xor
shll
xlat
repz
imul
add
jns
ret
stos
cmp
rcll
xor
arpl
xchg
outsl
jmp
pop
mov
cmp
divl
mov
popf
lret
jno
sbb
add
dec
inc
fistpl
push
mov
movsb
push
or
adc
shl
jmp
ret
add
or
out
mov
xor
adc
cmovno
repz
or
fimull
loope
popf
mov
or
push
mov
fldcw
fdivrp
loop
leave
pusha
xchg
mov
adc
scas
inc
ja
andl
adc
sbb
add
xchg
and
and
xor
sub
fwait
imul
int3
add
ljmp
inc
in
jbe
das
push
push
adc
inc
dec
mov
sub
sti
icebp
adc
add
aas
test
out
imul
pop
dec
add
ljmp
fisttps
add
add
xchg
rcl
mov
subb
inc
cmpsl
imul
cmp
or
add
push
mov
out
push
push
cltd
or
xchg
jecxz
mov
or
add
mov
cmc
xchg
mov
fs
pop
jge
inc
cmp
or
and
stos
lods
cwtl
jge
or
push
outsl
and
jbe
out
jecxz
sub
dec
and
mov
mov
and
xchg
mov
jb
sub
push
imul
pop
pop
js
repz
arpl
mov
cmp
and
jno
dec
or
nop
and
sbb
inc
sbb
sbb
xor
dec
dec
pusha
test
insl
iret
adcl
adc
repz
xchg
sub
mov
js
adc
fildl
mov
insl
repz
ficoml
movsl
lds
jne
jmp
pop
fwait
daa
push
and
mov
daa
enter
dec
and
shlb
imul
dec
jg
insl
mov
movsb
xor
sub
jge
push
aam
pushf
daa
cmp
jg
fildll
or
testb
or
sbb
pop
rcl
dec
pushf
add
add
push
xor
fidivrs
icebp
lret
shrl
stos
test
in
test
out
dec
mov
and
aad
mov
jmp
add
out
fildll
hlt
or
add
mov
pop
cmp
xchg
sbb
movswl
or
lret
cwtl
lock
add
and
inc
cmpb
add
js,pt
pop
lods
js
mov
and
adc
mov
test
xor
sbb
cmp
movsb
jmp
jae
or
xchg
adc
lret
cmp
into
decb
fstl
mov
jno
repz
hlt
push
or
pop
inc
pop
into
loopne
push
stos
std
mov
and
outsb
jle
out
addr16
enter
pop
mov
cs
dec
push
push
sub
dec
mov
fmul
cmp
xlat
cltd
fsubs
enter
imulb
pop
jmp
icebp
pushl
imul
cmpsb
cli
push
push
add
or
cltd
loope
shl
push
pop
cld
sahf
fucomp
test
or
aaa
jnp
hlt
or
in
rolb
andl
mov
mov
cmp
jg
pusha
and
push
add
mov
push
sub
pop
inc
jmp
mov
cmp
pop
in
std
mov
lahf
push
push
das
adc
cmpsb
into
lcall
cmp
jmp
test
push
inc
fcomip
mov
mov
pop
inc
test
out
jecxz
mov
inc
xlat
les
das
push
fsubl
stos
push
rolb
xor
test
xor
lods
dec
fwait
xlat
push
aam
insl
inc
popf
loop
daa
cmp
xchg
dec
fmul
sahf
mov
aas
lcall
cmpsl
pop
test
enter
call
ret
int3
mov
and
dec
and
mov
mov
pop
andl
xor
dec
aaa
mov
outsb
cmp
into
imul
xchg
movb
into
inc
inc
mov
insl
cmpl
cmpsl
adc
popf
hlt
es
xor
rorl
cmp
jns
cmpsl
movsl
lock
sti
xor
out
hlt
popf
sbb
sbb
and
mov
mov
in
and
mov
and
outsb
jns
in
movsb
add
mov
addl
sbb
sti
enter
push
pushf
cmp
js
mov
lock
pop
dec
je
xor
in
and
xchg
push
cmp
jno
mov
xchg
outsb
xchg
rol
pop
push
jb
xchg
mov
push
jle
adc
popa
arpl
mov
and
add
lock
mov
fwait
pop
popa
mov
mov
outsb
aad
push
dec
mov
inc
and
pushf
and
insb
aam
ret
and
in
jle
add
mov
jp
iret
xor
rorl
push
adc
adc
orb
dec
jl
push
cld
test
cmpsl
pop
adc
daa
add
imul
pop
and
stc
jge
xchg
inc
push
shlb
inc
lret
cmp
lds
enter
rorb
shrl
insl
xchg
lods
xchg
aam
in
mov
stc
cli
push
mov
and
jns
xchg
mov
sub
mov
sub
addb
movsl
dec
add
repz
ja
jne
cwtl
add
sub
shrl
out
xchg
add
cmc
inc
cmpb
icebp
pop
scas
rcr
jg
add
jb
cld
out
push
sbb
xchg
mov
test
jge
jle
push
or
aad
xor
jecxz
fs
int
or
call
lock
jl
sbb
cs
testl
leave
popf
fs
push
dec
adc
popf
out
cmpl
mov
jmp
inc
das
loopne
xchg
adc
add
push
inc
int
adc
mov
arpl
push
in
sbb
inc
pop
bound
sub
inc
fwait
dec
pop
gs
jns
faddl
movsb
nop
or
add
jo
adc
pop
mull
decb
cmp
push
dec
cmp
cmp
repz
arpl
and
testb
pop
cmp
mov
rcll
pushf
jno
inc
jg
sub
jns
push
pop
fcmovnbe
les
in
jnp
es
or
aas
les
aas
fnstcw
fdivl
out
mov
adc
loopne
loope
xor
lods
jmp
adc
pop
lcall
int
aaa
pop
push
xor
dec
imul
dec
xchg
testl
or
arpl
loope
int3
push
scas
lods
inc
in
sbbl
fimuls
pop
xorl
outsb
and
sub
mov
push
adc
inc
repz
sti
jae
mov
ja
xchg
popa
hlt
out
xor
push
cwtl
cmp
mull
psrad
sub
outsl
test
sbb
pop
shll
jecxz
inc
pop
xor
xor
jne
jo
cltd
fmull
test
mov
int3
cwtl
test
into
push
pop
jmp
cmp
dec
out
cmpsl
xchg
xor
add
pop
jp
or
andb
scas
leave
stos
lret
scas
sbb
and
jl
xchg
jmp
cld
repnz
jp
add
lods
out
inc
jmp
enter
dec
stos
fsub
icebp
daa
outsb
xor
test
repnz
jno
xor
les
mov
push
shll
sbb
imul
cmp
adcb
add
inc
or
add
ja
jbe
ljmp
mov
xchg
stos
pop
outsl
mov
movsl
push
ret
mov
sar
fidivs
ds
dec
int3
mov
mov
mov
cmp
cs
add
into
stos
mov
add
cmp
dec
mov
push
sbb
pop
pushf
cmp
or
jnp
popf
das
mov
int
pop
sarb
scas
decb
xchg
test
mov
in
sbb
xor
sbb
jge
pop
xor
jno
inc
jmp
push
push
jb
repnz
mov
lret
or
inc
dec
out
outsl
add
es
lock
jbe
sub
push
loope
adc
pop
lods
mov
cmpsb
fdiv
icebp
xor
jno
xchg
cld
int3
adc
pop
mov
dec
xchg
push
xor
pop
scas
jmp
mov
leave
cwtl
or
and
sub
imul
dec
dec
pop
das
aam
loop
push
insb
xlat
push
ret
inc
or
arpl
push
jnp
lahf
xor
pop
xor
leave
fisttps
ds
xchg
lods
nop
pop
mov
xchg
rolb
int3
pop
loop
add
xchg
push
cli
dec
lcall
or
pop
or
mov
cmp
cmp
stos
jo
xlat
add
nop
push
sbb
insl
mov
or
cmpsb
outsb
pop
bound
push
mov
mov
insb
fwait
popf
mov
clc
mov
jge
jl
xchg
adc
adc
sbb
xor
fwait
popa
dec
andl
ja
jnp
mov
push
adc
test
test
dec
je
pop
xchg
sbb
pushf
jnp
mov
sbb
mov
mov
cltd
and
shll
nop
insl
jne
inc
mov
mov
popa
gs
or
fiaddl
pop
xor
inc
imul
hlt
xlat
inc
popf
shlb
addl
movsl
in
in
cli
lret
or
xchg
bound
fisubrl
adc
sub
mov
add
cmpsl
push
or
repnz
nop
push
scas
not
push
xchg
xchg
add
jmp
inc
mov
mov
popa
jecxz
jne
loop
or
les
mov
aad
push
enter
lcall
cli
addr16
mov
ja
mov
mov
in
lahf
pop
gs
sbb
sub
push
int
xchg
adc
push
cli
adc
mov
mov
ret
adc
and
pop
push
pop
xor
notb
sti
adc
fsubs
jecxz
lea
mov
lcall
in
leave
stos
jmp
and
mov
add
sbb
mov
fucomp
lods
push
out
pop
or
mov
data16
stos
aad
loope
fstpl
add
xor
sbb
popf
jge
inc
cmp
mov
push
fisttpl
xchg
dec
push
push
movsb
or
rolb
arpl
sbb
cmpsl
dec
in
out
int
xor
xlat
xchg
xor
daa
xor
push
call
lcall
lea
mov
out
arpl
jge
cmp
sub
and
es
int
inc
mov
xchg
js
mov
push
iret
pop
inc
push
jp
hlt
int
cmpsb
iret
pop
fisubrs
scas
cmp
ljmp
pop
stos
cs
push
push
jp
dec
into
pop
fisubrs
scas
cmp
ljmp
pop
stos
cs
push
push
jp
dec
into
pop
fildll
scas
cmp
ljmp
pop
stos
das
mov
push
imul
decb
pop
fisubrl
scas
cmp
or
sbb
xchg
cli
aam
dec
fisubrl
frstor
gs
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
clc
scas
call
popa
jne
fisubrl
jle
and
imul
cmp
or
fdivs
popa
mov
xor
rcrl
loope
repnz
mov
mov
fsubrs
js
or
cmp
dec
sti
xor
dec
loope
rolb
insl
out
mov
fadds
and
xchg
scas
jo
sbb
dec
shl
mov
dec
dec
or
mov
arpl
test
aaa
popf
inc
lcall
test
sub
adc
aam
mov
in
test
loopne
fildll
mov
add
inc
int
push
cmp
pop
dec
mov
push
cmpl
call
push
lahf
xor
fdivp
sub
push
mov
cmp
mov
loope
test
sbb
and
mov
loope
stc
xlat
or
mov
pop
add
jno
stos
jp
pop
loopne
or
aad
in
icebp
push
dec
mov
fsubs
jnp
adc
cmp
push
clc
cmp
or
mov
jo
pusha
mov
pop
mov
or
mov
cld
sub
jnp
dec
int3
popf
sub
fs
push
fimull
test
mov
cmp
inc
out
je
jge
popf
adc
and
adc
cwtl
xor
rcrl
loope
xchg
sub
clc
push
call
popa
mov
xor
rcrl
loope
xchg
sub
clc
push
int
inc
push
out
inc
sub
mov
cmp
inc
loope
lret
insl
js
cmc
jno
aas
aaa
mov
xchg
mov
rclb
out
aam
push
mov
scas
jl
jg
ja
xor
aam
pop
fsubr
fstp
xchg
in
jno
jl
in
push
jns
push
nop
mov
stc
xor
pop
sbb
adc
dec
es
fcmovu
jo
mov
mov
addr16
in
fwait
aam
adc
sub
stos
push
subb
aam
adcb
orb
add
pop
jecxz
jg
daa
inc
out
cld
cmp
push
xor
inc
sbb
or
xor
fs
inc
lea
cmp
push
push
mov
jns
shr
and
mov
into
cmpsb
daa
sub
cmpl
pop
xchg
sub
mov
popf
push
xchg
lea
mov
mov
rcrl
fisubrs
and
jge
add
push
ja
in
sub
pop
nop
jl
push
mov
inc
jae
dec
jle
test
sbb
fdivs
mov
mov
lods
jbe
jg
mov
filds
push
repz
std
out
repnz
negl
mov
inc
inc
rcll
jecxz
sahf
mov
push
jle
test
cld
das
sti
push
sahf
pusha
cmp
aad
pop
cmp
mov
int
xchg
popa
std
pop
sub
jb
inc
jnp
jns
jl
fsubs
jmp
adc
sub
push
mov
pop
jae
cwtl
or
xchg
dec
lock
leave
mov
push
gs
test
fildl
cs
out
shlb
jo
repnz
mov
aas
xor
xchg
push
out
stc
test
jg
jo
fst
cmpsb
push
mov
bound
aaa
dec
std
or
test
rolb
and
dec
or
push
loop
sar
jp
add
outsb
mov
dec
inc
pop
or
push
adcl
xlat
cmc
test
add
dec
mov
jg
xor
xor
xchg
mov
test
jnp
stc
lahf
jnp
les
add
sub
pop
or
jne
fisubl
xor
out
in
outsb
mov
jg
lds
cmp
push
fwait
push
sbb
stos
jle
enter
push
ret
push
not
addr16
xchg
inc
into
push
push
jae
aam
mov
jo
pop
insb
fldt
pop
repnz
fmul
lods
data16
push
arpl
jo
cs
cmp
lcall
pop
add
sub
jns
aad
mov
sub
inc
sbbl
aam
push
fisttps
xchg
out
or
dec
dec
jle
dec
xor
mov
lcall
cmpsb
cmp
into
ret
add
sbb
inc
inc
out
xor
and
lods
sbb
into
xchg
mov
mov
sbb
lods
addb
int
lds
leave
jl
cmc
or
test
insl
mov
cmp
add
and
cwtl
pop
andl
daa
aam
out
dec
repnz
ja
adc
stc
lret
jecxz
cli
idiv
mov
mov
daa
inc
mov
xchg
dec
es
aad
in
std
sbb
jns
imul
pop
pop
mov
pushl
sbb
push
je
cmp
fidivl
aas
mov
sbb
adc
cwtl
mov
mov
jge
push
cld
and
int3
pop
iret
lea
xchg
sarb
mov
add
xchg
sub
jnp
push
lock
xor
scas
dec
jne
lds
nop
pop
fchs
loop
mov
pop
lea
jno
mov
fstpl
movsb
inc
cmp
aas
mov
popf
fimuls
or
faddp
xlat
cltd
out
push
dec
add
xor
ret
mov
xor
jge
ja
mov
inc
mov
pop
popa
lcall
sbb
movsl
into
mov
lods
cmp
add
mov
test
rolb
movsb
add
lret
iret
pusha
int3
jp
add
jecxz
add
jge
fwait
jle
imul
imul
aam
push
aaa
inc
push
inc
jno
push
mov
repnz
addr16
mov
sbb
sub
add
loopne
or
mov
in
jmp
fwait
test
mov
gs
data16
insb
mov
orb
mov
cmpsl
pop
xor
or
es
fstpt
mov
jecxz
jno
sub
fstl
outsl
movsb
mov
lds
sahf
mov
mov
xchg
or
jle
inc
cmpsl
cmc
mov
dec
data16
push
xor
std
std
sbb
popa
rclb
sbb
insb
push
xor
mov
adc
fwait
jg
xchg
loop
push
sahf
adc
xchg
or
clc
pushf
rcr
jecxz
sub
push
and
pusha
testl
int
icebp
fneni(8087
cmpsb
pop
test
cmc
mov
xchg
mov
sarb
sub
aam
jb
fs
test
mov
outsl
stos
mov
xlat
jecxz
daa
ror
sbb
mov
insb
andb
sbb
sbb
mov
inc
xor
add
test
cmp
loopne
push
lea
jg
outsb
dec
inc
add
push
or
pop
cmp
fisubrl
cmc
or
rep
inc
cld
jae
jnp
lea
xor
sub
jle
xorl
movl
in
ds
mov
iret
mov
js
cmpl
inc
jae
fwait
stc
loopne
nop
cmp
push
xor
cmpsl
jge
test
or
adc
cltd
sub
add
mov
loope
and
push
test
xchg
sub
mov
mov
fistps
xchg
jmp
cmpsb
xor
mov
add
aam
js
dec
daa
sbb
popa
fidivrl
notl
jmp
jle
push
jno
and
pop
fidivrl
in
cmp
ljmp
push
fistl
fiaddl
dec
jb
dec
int
ss
in
mov
jbe
loope
pop
add
adc
push
out
push
cmc
sub
movsl
sbb
adc
repz
sti
lods
mov
xlat
andb
jae
push
mov
mov
inc
pop
jb
pop
jmp
jmp
mov
cmp
mov
jge
dec
mov
add
lods
cmpsl
cmp
xchg
lds
cmpl
fwait
ss
xor
xor
mov
mov
dec
xchg
test
nop
or
loope
imul
movsb
idivb
adc
mov
or
cwtl
out
jl
stc
sbbb
pop
adc
ret
fcoml
lret
pusha
stc
pusha
sbbb
mov
in
jne
fwait
or
sbb
repz
lods
add
mov
push
js
jl
mov
popf
jo
lahf
enter
repnz
xchg
cmc
push
sbb
test
mov
mov
dec
ret
inc
lret
or
negl
sub
arpl
mov
sub
pop
stos
outsl
pusha
jno
or
cmp
cmpl
leave
xor
cmp
gs
cmp
inc
insl
pop
in
cmp
data16
push
sbb
imul
mov
inc
stos
iret
cmp
enter
psubusb
test
xor
mov
or
out
pmulhuw
mov
rolb
out
xor
jecxz
out
push
das
aaa
pop
cmp
repnz
push
lret
int
sbb
mov
rclb
fsubs
inc
push
mov
imul
pop
je
jle
jle
mov
rolb
mov
pop
xor
dec
mov
sbb
aad
mov
inc
leave
xor
nop
xchg
movsl
loope
call
ss
loope
cmpsb
loopne
push
mov
xchg
fwait
mov
lods
lods
push
sbb
cmp
loope
dec
xchg
or
push
pushl
inc
inc
cmp
jecxz
call
sub
arpl
push
stos
jle
cmp
jns
sti
add
sahf
mov
cli
sti
in
xor
jecxz
scas
xor
mov
adc
call
out
incb
jno
fidivrs
idivl
jmp
cltd
popa
fists
fs
fnsave
pop
jbe
mov
into
fwait
shrl
dec
or
rcll
cmp
jecxz
mov
adc
sbb
inc
inc
nop
lock
jnp
xchg
mov
mov
xchg
push
dec
and
sub
xor
jnp
int3
pop
inc
fidivrs
inc
mov
testl
dec
push
subl
jge
mulb
sbb
adc
xchg
stos
inc
add
cmp
sahf
cmp
js
aas
xlat
xor
out
mov
push
das
je
cltd
pop
dec
add
inc
cmp
ja
inc
push
out
push
arpl
insb
mov
bound
inc
mov
and
inc
adc
and
daa
sub
imul
dec
push
int3
and
and
jle
je
adc
cli
inc
inc
mov
popf
bound
add
movsb
mov
jp
cmpsl
lods
mov
mov
imul
ljmp
and
sbb
pop
cmp
push
inc
es
test
hlt
repz
pop
negb
mov
hlt
add
or
or
movsl
push
xor
mov
hlt
data16
cmp
scas
jae
enter
sub
daa
aad
inc
cs
sbb
in
mov
test
rcrl
ret
inc
sub
xor
jno
pop
in
xchg
imul
xlat
nop
sahf
loopne
stos
sbb
mov
sbb
mov
jp
lcall
call
gs
mov
enter
test
fcmovne
fmulp
jmp
mov
mov
icebp
sbb
inc
andl
in
jp
fldenv
das
sub
mov
flds
lea
jge
mov
xchg
aas
dec
pop
jo
cmp
popf
in
push
fnstenv
xlat
sub
sbb
mov
test
lock
jl
and
loopne
call
cmp
lods
inc
ss
in
fs
ja
dec
xchg
imul
ljmp
call
lock
xchg
jg
jmp
xor
pop
lret
aaa
je
ret
hlt
dec
imul
pop
xchg
enter
mov
sub
data16
or
mov
cmpsl
inc
xchg
mov
mov
icebp
xchg
lds
fimuls
xchg
ljmp
in
scas
jns
dec
gs
xlat
jl
cmpb
hlt
insb
push
jnp
dec
pop
jg
sub
sub
inc
cmp
sub
dec
aaa
sbb
fsubrl
mov
sbb
cld
shrl
sub
incb
enter
pop
jg
dec
call
xchg
pop
jp
mov
mov
push
sub
int
xchg
psubw
fstps
movsb
or
movsl
adcb
inc
rcl
sub
gs
lcall
loope
out
sti
mov
ja
hlt
jo
sahf
lcall
dec
cmc
aam
arpl
fs
push
movsl
add
rcll
bound
pop
lds
das
enter
mov
or
ss
stos
cltd
dec
popf
divb
or
add
push
adc
dec
sub
mov
cmpsb
fcmovbe
jmp
xchg
enter
sub
negl
pop
int
jo
iret
push
push
gs
cmpsl
mov
out
xchg
add
jb
pop
incl
frstor
xchg
insb
les
xor
add
mov
ret
push
jmp
push
mov
jnp
addb
mov
mov
inc
enter
mov
inc
and
push
or
movsl
dec
dec
imul
or
sbb
mov
frstor
shrb
test
lods
stos
jne
push
adc
cmp
xor
inc
pop
cmp
icebp
pop
xchg
and
mov
sbb
stc
out
xor
pop
xchg
cmpsl
dec
push
scas
in
cmp
shll
adc
pop
jmp
mov
dec
fcomi
cmp
jne
sbb
and
lret
mov
popf
rep
pusha
cmc
xlat
arpl
mov
hlt
dec
std
mov
sbb
adc
outsb
dec
insl
push
xchg
pop
test
and
nop
jp
cmp
fldt
movsl
xor
mov
xchg
pop
add
stc
mov
xchg
out
repz
adc
test
push
je
imul
jmp
add
xor
sbb
mov
fnclex
or
fiaddl
inc
dec
cs
call
cmp
rcrl
sbb
xor
sub
sarb
cmc
mov
inc
fldcw
jno
icebp
pop
sub
push
sti
cmpsl
inc
ret
xchg
loopne
ficompl
mov
out
loop
inc
test
lds
bound
in
jge
push
push
and
mov
rcrl
sub
fs
and
jge
xchg
add
and
mov
addr16
add
call
xchg
cmp
pop
andps
push
insl
mov
jmp
sub
popa
hlt
and
mov
and
mov
push
xor
add
push
movsl
inc
insl
ja
mov
stc
ljmp
xchg
push
sub
pusha
mov
loop
das
mov
jb
roll
xlat
lret
js
int
cmp
mov
xchg
cmp
adc
cmp
pushf
inc
jb
test
sub
mov
mov
xor
les
rolb
xchg
daa
shl
filds
subl
jnp
mov
xchg
push
icebp
jecxz
and
inc
xchg
xor
push
data16
or
mov
pop
in
mov
jbe
sbb
xchg
mov
popl
into
and
sbb
sub
cwtl
fimuls
or
shr
fisttpll
andl
out
mov
pop
cli
fsubrl
lahf
sub
dec
or
jne
call
sub
repz
jbe,pn
inc
adc
ret
jno,pt
jb
sbb
jge
or
loop
mov
xor
movzbl
test
ficomps
inc
ja
mov
sub
pop
and
fs
es
jmp
clc
das
cmp
or
push
idivl
cmp
insb
sub
fimuls
cmp
fwait
push
dec
pop
hlt
mov
sahf
std
mov
iret
cli
addl
lods
cmp
fisubl
dec
jbe
xor
push
ret
adc
jbe
push
jle
mov
add
push
cmp
dec
jb
flds
sbb
add
push
xchg
sbb
sbb
cmp
mov
rcl
push
jecxz
test
mov
das
pop
hlt
fstp
sbbb
gs
je
movsb
sub
push
adc
shr
jge
outsl
mov
inc
jns
or
das
mov
add
jecxz
neg
mov
sti
test
mov
stos
ljmp
inc
gs
mov
xchg
dec
dec
test
fs
push
pusha
movsl
outsl
xchg
stc
mov
subb
sbb
push
adc
sbb
jbe
sahf
fdivrl
sbb
or
jbe
inc
popa
imul
into
inc
ret
cmpsb
repnz
adc
lods
js
xor
push
inc
jns
vfmsubss
div
cmpsb
outsl
fwait
inc
dec
scas
loopne
inc
rorb
mov
xchg
subb
sub
insb
cltd
andb
mov
add
test
inc
pop
dec
icebp
inc
icebp
lods
xchg
jbe
push
jne
sbb
push
or
mov
and
test
and
daa
shll
stc
push
lods
push
pop
or
and
sub
hlt
or
push
jo
inc
cli
sub
mov
iret
dec
pop
xchg
dec
pop
pop
inc
fcmovnb
sbb
pusha
push
int
pop
fwait
imul
movb
push
and
push
fldl
dec
in
hlt
ljmp
jge
repnz
adc
add
out
or
arpl
inc
xchg
lret
cld
adc
adc
lret
rcrb
addr16
ret
pop
repz
gs
jp
sbb
mov
fidivs
cmpsb
push
ret
add
mov
icebp
add
sahf
or
cmp
adc
out
repz
int
adc
jp
stos
sti
adc
bound
fs
sbb
push
into
mov
test
xchg
movsb
loope
or
imull
xor
popa
mov
lret
mov
popf
or
popa
inc
add
popa
scas
mov
add
sub
jno
jne
out
into
sub
mov
sbb
in
dec
lret
pop
dec
xor
fdivrp
or
mov
popa
mov
mov
in
push
jns
leave
sbbl
push
pop
enter
pop
lods
xchg
inc
cmp
mov
sbb
xchg
push
push
push
pop
leave
mov
outsb
aam
sub
or
es
sbb
sbb
addr16
mov
repz
adc
insb
dec
and
push
add
pop
hlt
popf
mov
pop
jecxz
stos
mov
sub
in
jnp
mov
and
test
inc
popf
mov
mov
sub
pop
sub
push
mov
lock
push
xchg
push
push
out
popf
xor
inc
jle
aad
mulps
pusha
flds
mov
sahf
add
cltd
test
sbbb
fdivrs
clc
aad
cmpsb
iret
dec
arpl
data16
mov
stc
mov
iret
adc
sahf
fidivl
and
repz
mov
mov
repz
pop
mov
out
sti
fidivs
repz
loopne
insl
or
arpl
fidivrl
scas
roll
mov
arpl
data16
cld
and
mov
mov
stc
pusha
mov
andb
das
xchg
mov
dec
mov
test
js
lcallw
jecxz
jmp
sbb
mov
pop
jo
xchg
jl
sbb
bound
popa
shlb
cs
jnp
fidivrl
je
push
mov
mov
inc
fstps
mov
add
jo
incl
mov
and
jne
mov
jp
sbb
mov
pop
fidivs
add
jmp
mov
or
xor
jg
loopne
cmp
addr16
stos
in
nop
sbb
outsb
sub
aaa
adc
adc
add
cmp
add
shll
in
xor
std
inc
cmp
out
mov
es
stos
sbb
sbb
xchg
leave
jb
test
xchg
call
mov
pusha
outsl
inc
das
mov
aaa
bound
fwait
and
cld
mov
ljmp
mov
push
xchg
xor
push
lret
fidivs
pop
xchg
jo
mov
mov
pop
aad
out
sbbl
xchg
cmp
hlt
insl
push
lea
les
inc
dec
ss
test
jle
or
ljmp
rol
movsl
sub
adcb
test
xor
ja
xorl
in
xor
data16
cmpsb
xchg
push
dec
mov
clc
jge
xorb
xor
jge
mov
push
scas
dec
inc
sbb
mov
pop
inc
mov
pop
mov
fstps
or
dec
push
pop
fisubrl
fs
sbb
inc
adc
stos
or
sbb
mov
xchg
pop
sbb
andb
push
mov
hlt
movsl
test
arpl
pop
xor
imul
outsl
lret
movsl
cld
test
aaa
jmp
add
push
rorb
shrb
or
cmc
aas
jne
mov
fsubl
or
dec
fistps
cmpsb
mov
test
pop
add
pop
mov
iret
daa
inc
xchg
inc
push
aad
jne
mov
les
xlat
xchg
test
jo
cmpsb
push
lret
push
ja
push
xor
pop
bound
mov
sub
sar
cs
mov
xor
push
sbb
sbb
mov
mov
pop
mov
ja
mov
lods
fidivs
and
mov
push
cwtl
and
cmp
xchg
lahf
add
push
in
sbb
push
lahf
test
jmp
push
stos
es
call
mov
dec
inc
fbld
pop
repnz
xchg
or
test
and
mov
mov
sub
push
leave
add
mov
mov
ss
add
mov
adc
pop
pop
jb
imul
push
xor
and
roll
bound
mov
mov
clc
dec
daa
test
sbb
jp
fs
mov
mov
jne
mov
cld
mov
lret
push
lahf
push
loop
scas
shlb
cmp
test
inc
push
dec
push
loop
pop
aas
pusha
testl
dec
arpl
test
sahf
enter
test
cwtl
xor
rcrl
loope
xchg
sub
clc
push
call
popa
mov
xor
rcrl
loope
xchg
sub
clc
push
push
popa
cmp
test
cwtl
xor
and
push
loopne
xchg
sub
clc
push
call
popa
mov
xor
imul
dec
xchg
dec
sbb
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
inc
and
xor
add
adc
adc
add
fsubrp
mov
fninit
mov
sti
ret
jmp
or
or
or
sub
pop
arpl
jnp
imul
mov
imul
add
adc
and
xor
inc
arpl
arpl
push
fwait
mov
fcomip
hlt
mov
movsb
mov
or
imul
inc
mov
dec
enter
inc
jae
jb
inc
jmp
cmpsb
aaa
jecxz
dec
in
sbb
mov
pushf
arpl
push
xlat
je
inc
xchg
cmpsb
mull
pushf
cmp
ret
data16
jmp
repz
push
ret
and
mov
push
inc
sub
lret
sbb
fldt
mov
jb
sub
scas
pop
jecxz
mov
jecxz
or
sti
push
hlt
arpl
pop
sahf
or
mov
imul
jae
pop
je
scas
jl
xchg
jno
lret
ret
adc
je
cmpsb
push
out
sarb
mov
loopne
jnp
xchg
jecxz
mov
or
cmp
cmp
dec
arpl
jnp
jb
andb
xchg
ret
jecxz
repz
ret
repnz
pop
add
aas
push
sbb
push
pop
out
fimull
out
mov
mov
pop
sub
das
aas
pop
sub
aaa
cltd
call
fdivp
mov
xchg
jmp
jb
cmp
jno
jbe
dec
dec
jae
inc
imul
mov
fninit
lret
repz
ret
jmp
sbb
or
cmp
sub
pop
arpl
jnp
imul
mov
fninit
lret
repz
ret
jmp
sbb
enter
inc
shll
add
movsl
ja
cmp
xchg
dec
jp
fwait
mov
and
pop
ja
push
ret
lcall
int
imulb
jnp
inc
dec
xchg
lds
idivl
push
cld
or
movsb
sbb
mov
push
fs
xchg
cli
mov
pop
loopne
iret
sbb
adc
mov
clc
xchg
hlt
outsb
enter
cmpl
push
inc
xchg
or
addl
inc
fwait
mov
add
fidivs
jno
push
sub
shlb
or
jnp
shlb
and
jb
fdivr
add
mov
arpl
ss
inc
out
push
lret
addl
xchg
arpl
or
sbb
imul
and
xorl
or
jae
jp
mov
pop
stos
mov
push
and
cwtl
dec
jae
adc
adc
xor
sbb
jl,pn
sbbl
ror
div
mov
push
pop
dec
in
rcrb
jnp
aam
jl
mov
lret
add
test
sub
add
adc
xlat
and
aaa
adc
mov
cmp
int
pusha
fildll
data16
mov
sub
fs
xorps
testl
decb
or
xor
adc
cmp
movsb
jne
adc
xor
push
xchg
scas
dec
daa
jno
sub
cli
push
add
pop
xchg
lock
add
loopne
inc
add
xchg
dec
popf
adc
dec
insl
push
adc
mov
cmp
jne
outsl
cmpsl
jge
mov
jmp
dec
adc
cs
shrb
adc
das
push
mov
mov
divl
lds
ud1
cmovge
adc
loop
push
xor
sub
mov
mov
adc
inc
cltd
leave
test
inc
fstpl
jo
int3
cld
mov
mov
popa
pop
aad
mov
addr16
mov
add
arpl
popl
fisttpll
test
add
sbb
in
into
push
ss
lea
orl
movsb
cmp
sub
cmp
ja
cmp
popf
fstps
in
sub
mov
and
shlb
mov
pop
and
lret
pop
fnstsw
jae
mov
add
fldenv
sub
mov
dec
mov
jge
sahf
or
call
push
popa
jns
pop
clc
mov
cs
mov
cld
negb
push
sub
test
test
inc
jb
outsl
pop
mov
sti
loope
mov
in
ss
mov
stos
mov
xchg
daa
jns
inc
jnp
jb
or
in
repnz
mulb
xlat
int
dec
or
pop
xor
fsubr
outsb
add
fstpt
xchg
adc
test
fnsave
cmp
bound
mov
pop
cltd
mov
lahf
adc
addb
or
lret
mov
add
cmp
lahf
mov
dec
add
jg
aas
mov
mov
les
mov
insl
dec
mov
mov
scas
xor
push
aam
fld
xor
lea
fildl
aad
fs
push
xor
jae
push
fs
lret
repz
xchg
stos
push
lods
mov
loopne
xchg
sti
push
xchg
xor
imul
jnp
or
loope
sets
jp
lods
mov
sub
inc
stc
and
cli
enter
nopl
imul
push
fidivl
jg
out
or
arpl
adc
pusha
bound
and
cmc
sarb
out
divl
push
int
sahf
sbb
data16
mov
push
loopne
inc
jb
xchg
loopne
and
cmp
lds
push
mov
sbb
in
fcoms
dec
xchg
add
insl
jecxz
inc
mov
push
adc
jp
mov
mov
arpl
jmp
push
mov
push
outsb
jo
sti
inc
or
pop
sbb
push
loope
lods
or
xchg
test
xor
push
int
popf
pushf
or
sarl
aad
das
and
pusha
mov
xor
dec
out
xchg
jge
jge
dec
xchg
shld
out
cmp
sub
cld
xchg
outsl
jb
daa
push
xlat
pop
sub
scas
pusha
xor
cmp
jbe
jmp
mov
sub
push
repz
iret
lahf
frstor
lret
sbb
jmp
cmp
cmp
arpl
pushf
ficoms
movsl
repnz
mov
xor
enter
sbb
sub
add
sub
cmp
ljmp
imul
lret
lods
les
into
push
sti
outsl
mov
xchg
mov
pop
inc
out
lods
xor
adc
aad
add
mov
fsubl
push
test
jmp
or
imul
stc
cmpsb
adc
sub
or
mov
mov
int
cmp
jge
sbb
fsubrs
insl
std
inc
sbb
cmp
and
fwait
arpl
mov
sub
mov
sbb
pop
in
pop
pop
scas
and
or
xchg
lock
call
mov
mov
push
pushf
mov
imul
dec
dec
and
and
mov
adc
pop
jmp
mov
scas
lods
mov
imul
sub
in
int
pop
ljmp
leave
scas
xchg
xor
sub
push
pusha
jno
push
jge
popl
mov
addr16
adc
mov
movsl
ljmp
pop
pushf
sbb
cmp
xchg
stc
jle
xchg
jb
push
jae
jbe
mov
mov
sbb
adc
push
add
in
loop
jne
lret
movsb
imul
nop
cmpl
fs
faddl
aas
mov
xchg
fiadds
mov
aas
nop
icebp
mov
add
pop
movsb
scas
or
out
and
scas
mov
addr16
shlb
pop
dec
jmp
push
and
in
js
jecxz
loope
negb
lea
add
or
lret
pop
imul
adc
and
jnp
mov
aaa
mov
popa
mov
sbb
sbbb
pop
int
rolb
jmp
and
ret
and
testb
js
sbb
cs
sub
roll
or
pop
mov
or
test
adc
inc
pop
adcl
mov
mov
je
out
rolb
adc
in
sarl
push
xchg
repz
jb
daa
btc
push
fdivp
aaa
cmp
mov
lods
sub
add
mov
leave
inc
sbb
jno
cmp
pop
xchg
decl
popa
pop
out
dec
sbb
sub
sbb
sbb
test
or
fsubs
into
movsb
aad
mov
lds
in
push
loop
add
sub
jno
xor
adc
sub
xchg
in
or
add
xchg
adc
cld
jge
or
ret
mov
andl
xor
sbbl
sti
hlt
pop
xchg
xor
cwtl
sub
mov
and
imul
inc
jae
push
jnp
mov
ds
sbb
ret
es
push
sub
lods
push
lods
icebp
cmp
jb
xchg
jo
bound
xchg
xchg
iret
rcll
inc
std
lret
xchg
mov
lret
out
mov
aam
cmp
pop
push
cltd
or
fs
fistpll
adc
shlb
out
int
sub
cmp
pop
shlb
pop
js
fimuls
or
fs
xor
incb
les
adc
adc
pop
add
lfs
sbbl
jmp
subb
int3
mov
mov
in
out
int3
dec
leave
scas
pop
daa
push
pusha
stc
sti
iret
pop
test
mov
pop
adc
in
daa
jecxz
mov
ja
sarl
lcall
divl
mul
call
pop
xor
mov
test
cmpsl
sahf
lcall
xlat
xchg
sub
popf
enter
fisttpll
jecxz
mov
sbb
dec
cli
hlt
sub
pop
lcall
push
add
pop
cmp
fsubrl
and
inc
jmp
outsb
lods
fiaddl
fnstsw
xchg
cmpsl
push
push
and
fnstenv
ss
imul
not
cmp
clc
aaa
dec
mov
push
or
fstl
pusha
cld
ffreep
or
cs
inc
fisttpl
andl
inc
rcrb
add
adc
andl
ret
stos
out
xor
jns
loopne
call
jne
aaa
mov
insb
int3
or
push
sub
movsl
add
lods
enter
test
faddl
inc
or
pop
pop
add
das
sbb
hlt
stos
xchg
lahf
sbb
add
adc
sbb
mov
aas
lods
insl
aas
push
gs
xchg
leave
push
jge
pop
loopne
push
xchg
sub
sub
out
icebp
loop
icebp
cmp
insb
gs
addb
imul
cmpsb
jecxz
in
and
hlt
cmp
mov
ret
cmpsb
adc
xchg
in
jne
and
into
minps
mov
jns
andb
xchg
or
iret
inc
pop
stos
fcomps
shlb
pop
repnz
jle
mov
lock
jle
xor
fmulp
sbb
daa
push
dec
je
mov
shl
imul
pop
and
hlt
cltd
fcoms
add
bnd
fwait
xor
adc
mov
je
fst
inc
and
fdivrl
cmp
add
jae
loop
pop
rorl
add
stos
enter
leave
sub
xor
repnz
outsb
aad
shll
test
jge
pop
sbb
mov
xor
das
jp
add
fmull
sbb
or
adc
pop
mov
jge
mov
enter
aam
dec
sub
test
outsb
pop
mov
cmp
popf
fldcw
jge
into
fdiv
fisubrs
xchg
pushf
cmp
push
mov
roll
xor
mov
pop
ds
pop
adc
cmp
or
push
mov
test
mov
xchg
lea
aam
adc
sub
out
sub
mov
hlt
psllw
sbb
shlb
and
jge
mov
pop
xor
imul
xor
ja
icebp
mov
addr16
xor
jns
daa
bound
imul
and
or
or
in
adc
out
out
sbb
push
sub
sti
ja
xchg
cmp
pop
sbb
push
test
adc
mov
jecxz
loope
xor
mov
jecxz
mov
daa
rorl
cmc
ds
pop
fidivs
mov
icebp
cmp
lcall
cmp
adc
push
insl
out
cltd
cs
lods
xor
push
popf
mull
out
sbb
mov
adc
mov
mov
jbe
arpl
cmc
mov
mov
or
and
insl
jbe
test
je
loope
dec
in
aad
idiv
push
mov
repnz
jae
js
xor
or
js
jns
icebp
imul
xor
inc
cltd
out
int
leave
popa
xor
jg
out
imul
lahf
sbb
fmul
cmp
in
mov
push
call
ja
repz
loopne
cs
int
pop
or
cld
jo
sub
decl
ja
fisubrl
pop
rcl
cmp
cmp
stos
stos
test
dec
jge
jae
shl
cmp
inc
mov
xorl
nop
outsl
pop
pop
das
insl
repnz
sub
add
mov
pop
ds
hlt
mov
add
subb
cmp
loop
loopne
andb
and
outsl
lcall
stos
in
or
rorl
les
ss
loopne
mov
test
mov
cmpsb
add
orl
adc
pusha
add
cmp
pop
lods
mov
inc
in
push
xor
sub
inc
mov
mov
mov
cmp
aaa
mov
sub
cmc
fnstsw
subl
fcompl
aam
loopne
xchg
loop
lock
push
lock
jns
inc
pop
push
lahf
stos
popf
pop
sub
fiaddl
ss
push
add
repnz
aaa
inc
add
loop
andl
notl
or
and
mov
pusha
push
pop
xor
lods
rcr
out
bound
jmp
push
pusha
test
popf
xchg
aam
jns
adc
ret
test
jmp
mov
addr16
sbb
out
outsl
icebp
orl
mov
push
cmpsb
mov
xchg
xchg
cmpl
aad
out
jmp
call
stos
clc
iret
rcll
repz
dec
fs
mov
jmp
xchg
aas
pop
test
pop
mov
fisubl
pop
jg
lahf
jle
popf
mov
pop
insb
xchg
adc
pushf
xor
sub
mov
inc
and
push
movsb
movsb
fistpl
cmp
ret
xchg
xchg
mov
push
xor
mov
cmpsl
mov
jge
es
dec
push
fistpl
inc
cmp
xchg
nopl
mov
fldcw
push
jo
pop
sti
pop
push
add
adc
jmp
fsubl
push
xor
mov
sub
int
and
jp
leave
aaa
orb
stos
ficompl
sub
pop
data16
rcll
outsl
jbe
adcl
and
loope
xor
and
ret
jae
inc
test
pop
mov
leave
push
aad
stos
push
jmp
stc
icebp
mov
dec
out
dec
cmpsl
mov
pop
xchg
bound
mov
pushf
movl
xor
lret
ss
jae
insb
adc
and
rcr
mov
dec
fsubs
xor
mov
out
push
and
xor
nop
out
xchg
test
cmp
hlt
pop
pop
lock
xlat
lcall
fs
mov
pushaw
loop
sbb
sub
jnp
nop
mov
or
and
or
pushf
pop
popf
bound
lods
fldl
lcall
push
data16
inc
xor
movsl
inc
bound
fmuls
cmp
mov
fwait
mov
mov
out
aaa
cwtl
out
sub
orb
or
jmp
jb
out
mov
mov
sub
cmpsl
inc
ret
mov
test
mov
push
push
push
cld
mov
and
shlb
mov
cwtl
les
lcall
idivl
jmp
pop
jb
xchg
js
sub
mov
or
cwtl
mov
dec
out
call
sub
sbb
push
loop
loop
inc
imul
dec
xor
sbb
fs
push
in
outsb
dec
xchg
subps
addr16
gs
outsl
mov
cmp
addr16
lahf
cs
adc
sub
and
mov
and
leave
mov
xchg
daa
pop
pushf
sub
jl
into
xchg
inc
aaa
adc
cmpsb
mov
pop
shlb
imul
out
pop
test
sub
xchg
jae
popf
movsb
dec
pop
das
mov
imul
push
dec
cmc
pop
loope
movhps
push
into
fbld
xor
mov
flds
inc
fs
icebp
and
enter
int3
shrl
push
int
leave
nop
outsb
push
cmpsl
pop
push
dec
dec
insl
gs
das
push
fmull
js
push
add
mov
fildl
sub
or
cmpsb
push
stc
in
je
mov
daa
dec
pop
or
add
dec
add
inc
fs
adc
inc
imul
xchg
ss
mov
clc
ds
das
adc
mov
push
dec
pop
addr16
adc
repnz
cmp
nop
mov
aas
fldpi
repnz
push
push
mov
pop
mov
rolb
fucomp
fiadds
xchg
sahf
add
mov
rol
pop
popa
xchg
frstor
cmp
cmp
fimuls
cli
pop
icebp
inc
loopne
insb
lret
cmp
or
lahf
aam
adc
sub
cmpsb
test
in
iret
and
orl
dec
dec
stos
xchg
xchg
stos
push
and
cld
jne
ja
int3
pop
jg
mov
rcll
and
lcall
test
loope
mov
or
dec
xor
adc
stc
mov
rclb
fmuls
mov
enter
cld
jle
enter
push
xchg
test
movsl
add
add
sbbb
dec
gs
push
mov
add
int3
adc
cmp
sbb
cmp
lods
idiv
mov
sbbb
or
enter
dec
je
out
and
sbbl
push
sub
inc
pop
std
push
add
push
pop
out
push
push
push
aas
lcall
and
outsl
xor
mov
jg
std
and
push
mov
xor
mov
mov
push
pop
mov
les
push
sahf
movsl
pop
mov
dec
jnp
in
pop
mov
mov
lds
sti
xchg
dec
imul
jge
push
cmp
pop
inc
jnp
pop
ds
adc
xor
fsts
out
lea
cmp
pop
xchg
jl
imul
push
repz
in
pop
pop
mov
sub
imul
lret
shll
shll
cmp
jge
lods
xor
cmpsb
xchg
xchg
outsb
cltd
mov
sbb
icebp
repz
push
xchg
fwait
mov
out
icebp
jmp
sbb
pop
jb
out
mov
lds
lret
lret
xor
sbb
dec
shrl
aam
xchg
adc
xor
mov
iret
cmpsb
cwtl
adc
push
loop
cmp
xchg
ljmp
xchg
or
jle
stos
mov
ficoml
sub
pop
dec
adc
sbb
dec
cmp
add
gs
xchg
es
add
dec
scas
xchg
sbb
ja
in
add
in
push
jns
or
add
inc
hlt
jno
scas
and
lock
aad
pushf
xchg
mov
repz
xor
test
sub
shrl
out
mov
mov
xchg
jecxz
dec
jne
jns
aam
mov
dec
mov
and
jo
xorb
adc
sbb
cmpsl
inc
mov
jae
cmp
call
stos
or
ret
ds
aas
jl
ja
aas
outsl
xor
xorl
jl
imul
sahf
repz
push
cs
pushf
push
jl
loope
mov
sbbb
fadd
out
shll
push
in
mov
rclb
das
jo
add
dec
inc
jne
jns
or
xchg
xchg
movsb
cmp
jl
cmp
fwait
xor
inc
mov
test
int3
andb
in
in
pop
mov
mov
push
push
pop
mov
lods
aas
cltd
popf
pusha
test
nop
xchg
pop
or
fdivl
outsb
sub
sbb
rcr
mov
popf
xchg
cli
sbb
movsb
mov
push
jmp
adc
fs
cmpl
xchg
ret
xor
pop
cmp
sub
sbb
ret
xor
push
mov
jecxz
pop
xchg
out
mov
es
outsl
jp
cmp
stos
dec
lea
fsts
sbb
jbe
nop
cmp
in
mov
ja
jp
xor
push
push
sahf
add
andb
rclb
dec
pushf
and
je
rorb
dec
enter
out
in
andb
loope
rcll
mov
mov
loop
jae
in
stos
enter
cmpsb
inc
adc
fwait
cwtl
in
fs
mov
scas
outsb
xchg
jle
or
inc
or
mov
frstor
jno
xchg
cmp
into
mov
imul
fsub
mov
mov
in
cmp
scas
aad
or
lret
dec
add
test
enter
mov
adc
jae
sub
xor
xchg
in
jne
mov
orl
push
lds
push
lret
nop
pand
jbe
cmpsb
xchg
xchg
add
pushf
sbb
test
test
in
mov
std
stos
setl
push
mov
test
gs
jns
jae
test
out
fiadds
and
test
pushf
dec
outsl
sub
push
or
pop
iret
lods
sbb
mov
inc
add
les
sbb
sub
cli
inc
jb
lcall
ret
and
cwtl
js
xor
push
cld
jp
outsb
cmp
aaa
push
push
insl
shlb
loopne
pop
movsl
sbb
sbb
mov
inc
push
daa
sub
data16
ret
and
dec
mov
dec
mov
mov
xchg
push
loopne
shll
dec
add
adc
dec
jae
inc
imul
mov
fninit
lret
repz
ret
jmp
sbb
or
cmp
sub
pop
arpl
jnp
imul
mov
fninit
lret
repz
ret
jmp
sbb
or
cmp
sub
pop
arpl
jnp
imul
mov
fninit
iret
repz
ret
fcmovbe
das
and
xor
arpl
sti
inc
jmp
mov
stos
in
imul
cmp
sub
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
or
mov
xchg
pop
mov
popf
cmp
imul
pop
or
mov
jmp
popf
and
mov
int
in
jnp
dec
std
pop
adc
add
xor
lock
loope
sarl
xchg
sub
insb
int
mov
mov
stos
ss
leave
sub
and
lods
sub
je
or
fdiv
xor
test
or
call
mov
push
pop
inc
out
or
daa
in
mov
loope
fidivrs
out
mov
cmp
int3
and
in
dec
std
sbb
testl
jmp
push
leave
pushf
cwtl
testb
push
data16
dec
pop
sub
inc
mov
sub
and
lea
lods
icebp
dec
mov
adc
in
fsub
push
std
int
jno
adc
enter
inc
adc
imul
out
inc
mov
les
cmp
stc
insl
leave
rclb
add
jno
popa
notl
pop
popa
test
dec
cld
ds
cwtl
and
icebp
cmp
or
mov
xor
inc
cli
dec
mulb
jmp
cs
pop
clc
pop
lods
insb
cld
sbb
sbb
sub
inc
in
push
faddl
leave
jge
lea
popf
cmp
imul
pop
or
mov
stc
insl
leave
jge
lea
popf
cmp
imul
pop
or
push
dec
fwait
and
adc
dec
mov
rorb
and
mov
mov
adc
pop
stos
mov
roll
adc
mov
cwtl
mov
jmp
dec
rolb
adc
aaa
cs
adc
jo
std
cld
sub
jl
add
jecxz
stc
enter
push
shl
das
dec
test
jg
lahf
push
cld
xchg
les
xor
push
and
mulb
push
pusha
out
push
pop
das
pushl
jo
inc
sbb
add
aas
out
cmp
bound
xor
or
add
shll
rcll
adc
mov
mov
mov
and
in
stos
nop
push
cmovne
pop
gs
pop
nop
orl
add
in
mov
ficoms
call
sub
xlat
jecxz
insb
test
iret
cmp
addr16
mov
nop
mov
sbb
ret
icebp
jae
cmp
aaa
cmpsb
or
xchg
insl
stos
xorl
sub
mov
mov
mov
push
loope
fldl2e
xor
adc
scas
rol
scas
xchg
ljmp
pop
adc
pushl
loope
xchg
push
jle
scas
push
cmp
js
fmul
mov
iret
mov
dec
pushf
jbe
lret
bound
pop
mov
shll
inc
or
leave
dec
mov
inc
jne
push
adc
push
out
testl
neg
fadds
push
jecxz
sbb
mov
push
cmp
cmp
cltd
xorb
cmc
add
ficompl
inc
inc
nop
hlt
push
mov
pop
in
das
inc
mov
or
pusha
iret
mov
adc
sub
mov
iret
inc
sbb
je
loop
orl
pusha
adc
sarl
scas
mov
xor
cmp
and
int3
xchg
inc
test
mov
cltd
pop
xchg
pop
lret
sub
xchg
imul
xchg
mov
out
popf
cmp
dec
cwtl
inc
inc
push
jmp
xchg
push
mov
popa
aam
fidivl
ss
jle
or
maskmovq
divl
adc
mov
stc
addr16
out
test
ficoms
int3
cwtl
mov
stos
or
mov
outsl
cmp
mov
and
dec
imulb
fs
jl
stc
sub
sub
push
test
inc
pop
fst
inc
inc
xchg
sbb
pmaxub
cmpsb
xor
and
outsl
test
cld
adc
and
out
sbb
inc
mov
cmp
cmp
xor
arpl
mov
clc
lahf
lahf
mov
jp
sub
lock
push
out
jg
test
int3
push
mov
push
xchg
sub
rorl
xorb
add
mov
pop
push
pop
push
popa
xor
or
das
xor
out
bound
push
or
test
hlt
int
rcrl
aam
dec
nop
jp
or
dec
popfw
stos
add
movsl
and
jg
cld
leave
in
jge
outsl
ret
in
jmp
jl
pop
and
ret
stos
mov
mov
sarl
mov
jmp
adc
push
and
or
mov
outsl
das
in
jns
mov
enter
add
dec
add
es
fistpll
mov
add
fbstp
out
add
mov
sub
es
shr
mov
lea
sub
lea
mov
repnz
push
adc
aam
add
cmpl
ja
adc
stos
push
adc
jae
jmp
lret
xor
popf
push
or
cmpsl
movsl
shlb
pop
xchg
fstp
or
inc
pushf
mov
sbb
int3
mov
push
adc
jnp
mov
jg
lock
jbe
or
jge
and
inc
adc
add
shr
div
outsb
mov
mov
cmp
daa
pushf
orl
pop
jl
fistps
dec
mov
ret
push
filds
dec
add
push
push
dec
cli
add
sub
cmp
ss
mov
sti
jmp
repnz
mov
mov
scas
lahf
lcall
lea
lods
pop
rcr
nop
xchg
js
sub
andb
jge
outsl
fcomp
scas
pop
leave
jecxz
add
xchg
lcall
gs
pusha
test
cmp
add
xor
jg
daa
mov
mov
add
push
das
aaa
xor
es
addr16
mov
mov
or
push
jne
mov
jp
sub
test
loopne
cltd
leave
fwait
test
test
dec
mov
ss
xor
mov
or
push
dec
sahf
pop
sub
popa
xchg
imulb
sbb
xchg
movsl
mov
add
xchg
sub
inc
xor
mov
fsts
lock
inc
js
xor
sbb
sbb
mov
cli
into
xchg
mov
mov
nop
out
sbb
imul
push
xor
subl
cltd
arpl
je
divl
repz
dec
sub
lret
push
or
or
xchg
decb
fisubrs
dec
lret
fsubrl
stos
leave
loopne
push
loop
ljmp
add
pop
jmp
stos
aam
cmp
fnstcw
mov
or
sub
mov
xchg
and
dec
repz
add
dec
push
imul
imul
repz
andb
mov
and
jo
pop
gs
fs
mov
xchg
xor
cld
xchg
dec
mov
ja
xor
jge
les
jns
push
adc
scas
xchg
inc
sub
jecxz
xchg
or
mov
inc
fxch
pop
aam
adc
in
inc
fadds
test
data16
jge
lret
in
loope
dec
mull
cmp
push
or
popf
dec
and
xchg
jns
test
cmc
mov
fiaddl
test
fisttps
adc
repnz
inc
ret
jno
sub
out
inc
pop
dec
inc
dec
and
cmp
in
addr16
mov
push
pushf
fisubrl
push
dec
rolb
shl
mov
or
in
lds
sbb
xchg
xor
mov
cmp
sub
fmul
push
pop
clc
jbe
jp
cli
aas
loopne
test
mov
clc
push
or
mov
into
pop
mov
fwait
andb
aaa
jmp
and
lds
rcrb
cmp
push
jns
movsb
mov
dec
pop
jle
sub
xlat
jno
inc
mov
dec
lcall
add
inc
pop
jg
xor
xor
stos
dec
fidivrl
jns
call
shll
xorb
mov
std
mov
fsubr
jp
sub
fidivs
lahf
cli
lea
dec
and
cmpb
or
popa
cmp
stc
dec
mov
cmp
loopne
roll
stc
add
mov
repnz
gs
or
cmp
push
xlat
nop
jle
push
dec
or
popf
iret
cmp
cmp
popa
imul
mov
and
fwait
div
out
adc
fs
stc
scas
and
pop
pop
mov
outsl
test
inc
popa
push
loope
jae
fdivs
cs
div
mov
sbb
aad
mov
or
int
nop
xor
les
pusha
xor
es
inc
je
xchg
fidivrs
add
mov
sbb
pusha
sbb
push
je
cmpsb
sub
movsb
cmp
lret
pushf
ret
push
pusha
rcrb
mov
and
fiadds
sbb
sbb
test
xchg
les
es
fildl
shlb
push
leave
or
or
gs
xor
inc
push
pop
out
daa
mov
lods
sub
fcmovbe
mov
movsl
push
mov
jle
sbb
imul
or
ret
cmp
sbb
fcoms
fstp
ljmp
clc
pushf
xchg
sbb
inc
or
push
stos
xchg
aas
daa
fldt
cmp
hlt
aad
fwait
mov
cmp
and
dec
or
jbe
notl
ret
adc
mov
mov
sbb
and
aaa
mov
mov
outsl
ret
insl
subl
test
aad
es
pop
lock
inc
jg
jecxz
fcompl
aad
add
and
and
fldcw
add
rcrl
fcmovnbe
cmpsl
inc
mov
stos
adc
or
lahf
push
mov
ret
mov
jp
arpl
sub
data16
mov
pusha
fwait
enter
subl
imul
pop
pop
daa
ss
ss
dec
adc
lret
mov
add
fadds
cmp
cli
xchg
mov
inc
mov
mov
les
adc
mov
iret
data16
xchg
inc
pop
pushf
rcl
xor
cltd
nop
dec
rcll
out
or
cli
scas
adc
adc
push
jge
lret
fimuls
mov
movsl
std
adc
jbe
xchg
inc
dec
jl
push
lods
aad
stc
pushf
inc
mov
xlat
mov
dec
repnz
loopne
mov
test
fstpl
mov
jbe
ret
addr16
cmp
sbb
outsb
out
dec
sub
pop
movsb
mov
stos
sbb
pusha
lock
xchg
jne
mov
push
xor
loop
cmp
js
dec
mov
pop
sub
xor
push
ja
flds
mov
rcll
push
xor
aad
inc
inc
and
sarb
add
jmp
test
inc
adc
inc
int
outsl
push
mov
fmull
mov
xor
sahf
out
int3
sarb
js
in
fnsave
shl
fwait
dec
clc
lds
enter
add
mov
fists
push
movsl
dec
jmp
cmp
or
lret
test
jmp
jecxz
cltd
push
in
int3
xor
fmul
gs
jae
ret
sbb
cvtdq2ps
sbb
xchg
xor
lcall
aad
imul
outsb
and
push
xor
mov
outsl
add
pop
pop
dec
pop
sbb
mov
scas
inc
out
cwtl
add
fidivrl
sbb
jle
jge
xchg
mov
cli
lods
pusha
data16
aam
xlat
sub
xchg
loope
cltd
inc
dec
loopne
test
cmpsb
es
sbb
inc
ret
fs
jmp
aam
insl
sbb
cmp
and
icebp
xor
jle
fcmovnu
mov
iret
mov
inc
sbb
subb
jmp
filds
pop
insb
xchg
std
loope
addr16
cmc
xorb
push
or
ljmp
jns
pop
in
xor
insl
mov
xor
int
repz
adc
fldenv
test
loopne
inc
jge
fistps
jnp
imul
sbb
std
fdivrl
jbe
sbb
ss
dec
aaa
ds
fwait
es
jecxz
iret
pop
and
jmp
leave
jb
mov
jg
pshufw
mov
lods
cwtl
mov
dec
lds
lds
imul
loop
xchg
add
std
and
add
cmpsl
rcrb
lret
imul
pop
in
test
dec
dec
sub
das
push
pop
into
and
ljmp
nop
mov
call
imulb
jle
out
jp
cmpsl
inc
int3
push
lret
cmp
pop
pop
lock
xor
in
sub
xchg
xchg
lcall
mov
rolb
lret
fidivrs
stc
lea
pop
scas
sbb
scas
call
xchg
dec
push
pop
mov
mov
sub
sub
sub
push
mov
fdiv
mov
pop
adc
flds
ja
mov
arpl
icebp
sar
out
stc
mov
fildll
sbb
sub
mov
push
aaa
insl
push
mov
xchg
out
inc
dec
or
ret
iret
movsl
dec
adc
jbe
inc
xchg
jg
fwait
pop
ss
or
inc
add
and
add
or
test
xchg
enter
out
jge
idivb
repz
outsl
jb
push
jne
xor
mov
sbb
jmp
loope
std
ljmpw
addb
xor
in
testb
cs
xor
xor
inc
popa
in
aam
jno
push
mov
in
push
clc
xlat
adc
popa
inc
mov
ss
sub
sub
jns
fiaddl
outsb
mov
jmp
mov
pop
sub
lea
loop
pop
pop
pop
add
mov
pop
test
mov
cld
pop
rolb
ret
fisubrl
sub
xchg
daa
cmp
cmpl
dec
cmp
imul
push
stc
test
ljmp
out
sbb
fdivrl
xchg
jmp
ret
add
ret
jp
mov
add
ds
jle
test
sbb
popa
and
imul
pop
xor
fwait
mov
xor
pop
cmc
in
pop
jg
xchg
out
xor
popf
add
pop
add
push
xchg
imul
xchg
and
mov
add
in
adc
scas
insb
ss
mov
orb
std
xor
xor
lds
lcall
cli
mov
xorb
js
nop
sti
test
mov
fchs
inc
mov
sahf
dec
pushf
jle
dec
add
jp
aam
xchg
call
sub
shrb
xchg
jne
fistpl
addr16
adc
je
jp
movsb
lock
sti
dec
testl
pop
in
dec
int3
mov
sub
or
push
shlb
test
nop
adc
loopne
dec
enter
aas
lock
dec
ficomps
es
fidivrl
cmp
test
jp
shll
test
xor
pop
push
scas
stos
ret
out
bound
mov
mov
push
dec
or
cmp
fs
das
add
mov
push
in
sub
push
into
sub
nop
cltd
cmp
inc
add
pop
ds
pop
popf
xor
stos
movsb
mov
imul
push
dec
sti
jnp
or
hlt
or
mov
xchg
adc
sbb
dec
cli
or
sbb
push
lret
sub
xchg
cmp
shl
fildll
jns
clc
int3
cmc
push
xchg
rcll
sbb
dec
out
fdivs
sub
push
lcall
xor
es
pop
xchg
fwait
and
and
jp
sbb
lahf
cmpsb
mov
push
cmp
or
jo
mov
pop
push
mov
mov
outsb
pop
sbb
repz
data16
xor
scas
ja
out
ss
cmp
addr16
dec
dec
das
sbb
adc
pushf
dec
pop
jp
jns
shll
fsubrs
imul
sbb
in
shrb
scas
xor
mov
jle
pop
sbbb
in
outsl
nop
cmp
lcall
cmp
mov
push
sarb
ret
or
sbb
mov
mov
scas
aaa
mov
not
add
in
mov
loope
test
pop
mov
rcll
pop
adc
jmp
addr16
arpl
sbb
sbb
rol
sbb
hlt
mov
outsb
jle
scas
lds
mov
movsb
cltd
push
test
ror
subb
jl
sahf
jg
jns
cli
test
inc
out
xchg
dec
add
outsl
xchg
jae
pop
and
mov
push
pop
clc
jmp
add
addr16
xchg
rcl
mov
push
push
cmp
dec
fdivr
imulb
jb
adc
mov
mov
xchg
leave
cmpsl
cmpsl
ja
pop
aaa
pop
in
stos
mov
xchg
aas
and
ljmp
dec
adc
pop
lods
pop
daa
lret
dec
sub
popa
mov
push
cwtl
inc
icebp
jbe
dec
sub
jae
ss
fcoml
movsb
add
or
jmp
mov
mov
add
inc
ds
mov
adc
push
adc
outsb
mov
lea
cmpsb
sub
popf
fldt
cmp
mov
pop
mov
jno
sub
add
test
das
push
pop
jns
push
mov
dec
cmp
outsl
outsb
stc
sbb
test
mov
adc
xor
loop
jne
dec
std
rcll
call
inc
std
scas
mov
push
test
jle
sub
nop
loopne
mov
pop
test
xor
add
out
xor
shlb
mov
push
pop
pop
mov
adc
mov
adc
and
outsb
fnsave
mov
scas
adc
pusha
nop
add
lret
cli
rorl
or
lods
cmp
ja
cmp
cld
pop
das
outsb
pop
sub
fildll
sti
ss
dec
sub
mov
xor
lods
aad
stos
cmc
xor
mov
ds
cli
out
bound
add
dec
mov
call
ret
iret
cmp
repnz
or
sub
pop
push
shrl
sarb
xor
pop
add
adc
add
bound
sub
scas
in
inc
or
mov
jae
mov
das
fmul
push
pop
mov
out
fsubl
dec
int3
push
in
pop
add
outsb
ljmp
insb
sub
jae
cmp
add
or
shr
jecxz
outsb
gs
and
xchg
loopne
xchg
mov
mov
mov
add
cli
push
andb
push
in
ret
addr16
fnstenv
sbbb
mov
in
pop
lea
test
daa
nop
test
xchg
imul
fdivl
adc
test
add
shll
push
js
jg
adc
notl
push
push
out
int3
arpl
jp
loope
imul
test
clc
scas
imul
jne
stos
cmp
lcall
sbb
push
lret
xchg
outsb
inc
movsb
xchg
pop
insl
add
mov
inc
sbb
mov
push
daa
push
mov
mov
addr16
call
stos
in
lcall
cmpsb
xchg
fistl
cmpsl
sub
inc
out
add
repz
lods
call
ret
in
mov
cmpsb
insb
xchg
aad
int
ret
in
mov
add
leave
add
lock
arpl
iret
dec
push
sbb
mov
faddl
adc
inc
xor
sbb
repz
sbb
clc
push
add
les
mov
jo
je
and
inc
in
lret
test
pop
xor
jmp
test
mov
pop
cwtl
aam
mov
adcl
jmp
jmp
mov
push
add
mov
jns
stos
or
add
xchg
dec
nop
js
cmpsl
aaa
mov
dec
dec
mov
fstp
or
js
stos
mov
add
mov
mov
andl
addb
mov
push
sub
repnz
shl
popf
sub
dec
inc
sub
leave
xlat
and
sbb
xor
rclb
rcll
test
pop
adc
pop
cmp
inc
dec
dec
enter
cld
daa
push
shlb
sub
call
mov
xor
add
pop
mov
sub
jecxz
xchg
dec
jp
push
jl
fdivr
xchg
mov
mov
mov
int
fisubrs
rcr
or
jae
fistpll
lods
push
xchg
jae
pushf
cmp
mov
andl
add
out
cmp
addl
negb
push
mov
cli
fadds
mov
lods
cmp
inc
pop
push
aas
or
mov
scas
push
xor
xor
ds
dec
adc
push
adc
jnp
mov
inc
stc
lret
std
mov
push
mov
scas
xchg
shll
push
cmpsb
cwtl
xor
insb
adc
xor
rcll
fnstsw
ljmp
or
inc
inc
jae
roll
int3
xchg
rolb
pop
push
sbb
sub
inc
imull
pop
aaa
lret
cld
stos
and
and
jle
sti
jne
push
icebp
mov
xlat
cwtl
gs
xor
inc
xchg
mov
mov
pop
popa
pop
and
inc
and
cmpsb
pushl
out
and
mov
jp
and
ficoms
sub
xchg
mov
mov
xchg
sbb
jg
xor
fdivrl
inc
push
push
xchg
jmp
xchg
js
cmp
mov
jbe
lcall
pop
pop
cmp
dec
and
leave
mov
lret
dec
push
rcl
mov
sbb
subl
les
roll
xchg
push
call
out
xor
mov
jg
mov
xor
les
pop
clc
popf
sub
inc
pop
aam
add
iret
mov
and
or
push
mov
pop
xlat
mov
jmp
jl
movb
jo
mov
cltd
dec
jmp
jge
lea
popf
cmp
imul
pop
or
mov
stc
insl
leave
jge
lea
popf
cmp
imul
pop
or
mov
stc
insl
leave
jge
lea
popf
cmp
imul
pop
or
lea
stc
in
leave
std
sbb
bound
mov
add
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
