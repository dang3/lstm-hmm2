stos
scas
orb
jns
dec
mov
loope
aam
pop
repnz
popw
dec
dec
iret
sub
out
in
enter
adc
add
sub
xor
das
jo
dec
outsb
sbb
cmp
xor
add
jg
jg
mov
adc
in
mov
iret
test
shr
and
mov
cmp
push
push
jns
pop
push
mov
push
mov
add
lock
xor
aaa
mov
mov
cltd
testb
inc
negb
cwtl
ja
dec
jge
add
shrl
lret
pop
fwait
out
cmp
scas
mov
push
das
cld
aad
add
aam
lods
and
adc
jbe,pt
mov
inc
sbb
mov
sbb
in
enter
imul
leave
xor
sub
aas
les
lods
push
add
in
in
or
fwait
cltd
mov
lcall
push
imul
lds
sub
movsb
int3
xchg
pushf
mov
fs
lds
mov
sbb
sbb
inc
lcall
movsb
or
loope
cmp
adc
sub
fnstenv
pop
pop
sbb
and
ja
aaa
sub
jp
lret
push
pop
int3
mov
outsb
test
into
negl
icebp
add
push
cltd
imul
mov
shll
sbb
setbe
rcrb
pushf
push
rorb
xor
mov
leave
test
mov
std
inc
pop
aas
lods
jle
inc
pop
insb
jmp
aam
mov
dec
xchg
arpl
ss
enter
cwtl
insl
test
cltd
mov
and
push
in
xor
sub
arpl
mov
xchg
mov
xor
enter
repnz
fcmovu
cwtl
inc
sub
or
dec
out
dec
pop
pusha
xor
xchg
dec
es
shlb
enter
ja
lahf
jns
jb
adc
imul
mov
xchg
cltd
shlb
inc
out
sti
lcall
xchg
jmp
dec
cmp
xchg
xchg
andl
add
sbb
dec
shlb
aaa
in
fcmovb
addr16
jle
out
lods
push
sub
daa
aam
mov
cwtl
fldcw
incl
push
xchg
pop
ljmp
pusha
jns
pop
test
fcomp
jg
outsb
ss
stos
arpl
decl
int3
fs
shlb
pushf
push
sub
xchg
adc
inc
shll
push
push
add
sbb
mov
xchg
cmp
adc
jo
dec
insl
xchg
dec
iret
jb
daa
popa
ret
nopl
aaa
inc
outsb
and
push
add
push
pop
mov
add
inc
dec
stos
es
and
leave
mov
and
lahf
xor
icebp
aad
jo
into
pusha
fcomps
movb
dec
sbb
js
pop
mov
insb
cli
mov
ds
mov
sarb
mov
outsl
movsl
jnp
test
in
sub
xchg
mov
sbb
clc
add
shrl
gs
inc
out
data16
pop
and
add
mov
lahf
mov
sub
and
jg
push
xchg
jne
mov
sbb
pop
xlat
mov
loope
in
cld
push
sub
xchg
and
in
pop
sahf
pop
leave
in
aaa
push
imul
lds
sbb
xchg
and
push
dec
mov
sub
cld
dec
cwtl
mov
push
fnstenv
inc
jp
cmpsb
cltd
push
jb
pop
sub
xchg
sbb
stos
cmpsl
leave
mov
cmp
jg
sbb
mov
xchg
in
push
out
in
out
mov
xchg
call
pop
dec
mov
jns
mov
ret
pusha
leave
sbb
int
inc
inc
lds
push
mov
and
lock
xchg
pop
pop
and
mov
inc
jl
or
lods
push
daa
popa
ret
jb
xchg
int
xor
je
negl
push
push
lods
xor
inc
movsl
push
or
popf
mov
xchg
movsb
test
adc
ret
cmc
leave
out
or
pop
je
mov
add
push
int
imul
push
sahf
inc
in
lods
stos
out
imul
and
xor
ret
xor
dec
pop
adc
cmp
mov
negb
test
jmp
aaa
add
jae
jp
sbb
leave
mov
push
ret
mov
jmp
int3
jle
sti
push
loop
mov
inc
addl
ret
stos
cmp
cmpsb
pop
mov
mul
dec
or
js
addb
bound
or
imul
js
stos
sbb
cmpsl
xchg
mov
mov
xor
jl
jnp
xchg
aam
and
add
pusha
popf
dec
mov
loopne
inc
jle
cmp
xor
icebp
ja
mov
cmp
push
mov
int3
and
in
xor
sub
test
xchg
std
lds
mov
or
in
int3
xchg
sahf
out
test
clc
fnstsw
inc
mov
mov
dec
sbb
out
xor
pop
xor
push
outsl
push
movsb
pop
and
push
in
lahf
dec
jb
push
push
cmpsl
aaa
mov
and
jns
pop
push
xchg
in
lods
icebp
adc
jecxz
mov
mov
dec
out
xor
push
or
xchg
cmp
xchg
sub
cwtl
mov
mov
in
sub
xchg
mov
sbb
pop
push
mov
jp
cmp
mov
ds
sub
jle
jl
sub
nop
filds
loope
xor
scas
mov
ret
inc
sub
xor
in
mov
xor
cli
stos
out
fwait
lea
stos
stos
dec
cwtl
mov
pop
dec
xchg
dec
lret
lods
ret
dec
inc
jnp
push
stc
int3
out
pop
adc
sarl
push
mov
popa
lods
aaa
scas
push
sub
mov
mov
bound
sub
add
divb
cmp
push
int3
mov
xchg
je
pop
dec
aad
ret
imul
push
push
push
adc
stc
or
push
jge
insl
ljmp
xor
jge
sbb
out
pop
or
sub
mov
fisubs
jmp
movsl
fwait
mov
or
sar
pop
fs
js
loopne
mov
add
pusha
int
imull
and
mov
cmp
lcall
jmp
or
popa
or
inc
adc
and
sbb
lahf
lret
fsubl
repz
shrl
repnz
cmp
mov
mov
sbb
rcrl
push
nop
or
out
daa
sub
les
fs
std
xorb
jecxz
fiadds
jo
es
xor
icebp
iret
fmull
sbb
out
mov
jl
mov
cwtl
popa
out
push
mov
pop
sbb
imul
lret
jno
inc
and
add
pusha
popf
dec
mov
loopne
inc
loope
pop
int3
mov
outsb
test
call
push
xor
mov
push
mov
int3
and
push
insb
ret
js
pop
div
or
ljmp
xchg
sbb
push
push
jl
sti
sub
xchg
sub
add
lret
cltd
test
cli
and
jno
arpl
or
lret
in
lods
mov
out
cli
adc
js
fldenv
out
mov
imul
push
jno
mov
aas
mov
aad
inc
and
orl
insl
adc
mov
fstpl
mov
inc
fnsave
int3
push
dec
inc
jmp
ret
sub
push
jmp
bound
pusha
xchg
and
addl
and
in
pop
jnp
nop
je
out
adc
popf
movsb
cmp
fldcw
incl
push
xchg
pop
ljmp
or
addl
scas
cld
jmp
push
inc
ljmp
cli
push
adc
pop
mov
das
dec
dec
js
mov
adc
bound
xchg
in
subl
cli
xor
andb
or
addr16
jecxz
fsubrp
in
jecxz
js
mov
and
lock
xchg
in
mov
xchg
xlat
mov
dec
call
xor
pop
xlat
cld
adc
mov
inc
scas
mov
xchg
cld
loopne
adcl
sbbb
or
movsb
idiv
jg
mov
lods
xor
pop
sbb
fdivrs
ljmp
mov
lret
sbb
cmp
testb
dec
ret
pop
add
icebp
in
out
ljmp
xor
pop
push
inc
int
daa
and
add
lods
sti
aad
mov
sarb
mov
fwait
and
repnz
loope
lods
sbb
push
ljmp
mov
push
movsl
lret
sarb
jg
lods
add
xchg
test
mov
dec
movsl
pop
dec
stos
les
lods
repnz
dec
js
jo
and
xchg
testb
out
je
bound
inc
mov
xchg
stc
sub
xchg
jns
mov
lods
fdivl
pushf
mov
add
or
lret
clc
imul
addr16
jns
xchg
or
mov
ljmp
push
push
stc
int3
out
pop
sub
ret
push
inc
icebp
inc
outsl
push
mov
adc
jmp
lods
cli
sbb
dec
lds
mov
dec
cwtl
movntps
push
data16
dec
aaa
or
cwtl
mov
out
and
jp
pop
adc
pop
js
mov
pop
jecxz
jno
or
sub
push
add
cmp
test
xor
aaa
fcomps
das
and
out
mov
mov
stos
aaa
mov
add
push
pop
xchg
mov
fs
or
lock
test
mov
ds
mov
repz
jnp
push
scas
lahf
bound
xchg
ret
add
aam
cld
jne
mull
lock
jnp
mov
icebp
lahf
out
pusha
aas
scas
clc
pop
in
int
inc
cmpl
fisttpl
jne
dec
cltd
lret
sahf
inc
in
popa
jne
mov
movsb
mov
mov
inc
sbb
int
xor
ret
xor
dec
pop
adc
cmp
rclb
les
add
jb
add
rorb
bound
push
fwait
mov
in
lds
sub
movsb
int3
xchg
pushf
mov
fs
lds
mov
js
call
repnz
sbb
sub
inc
rolb
jno
cmp
cltd
mov
dec
repz
clc
push
xchg
adc
lods
dec
icebp
xchg
cmp
or
out
imulb
jo
jnp
or
decl
fstcw
inc
push
sbb
imul
sbb
push
in
xor
mov
std
and
xchg
or
and
xchg
push
pop
cwtd
out
rcr
or
gs
addr16
test
test
sar
sbb
ja
pusha
sbb
jp
out
nop
and
xchg
add
imul
gs
sub
xchg
sub
outsl
in
push
test
pushf
mov
fsubrl
test
cs
jge
filds
cld
sub
inc
shll
enter
scas
in
and
mov
imul
xor
jge
push
fdivs
lea
ss
pop
jp
add
movsl
popl
sti
jnp
sub
and
push
inc
out
sti
lcall
xchg
jmp
dec
cmp
xchg
xchg
mov
jp
jmp
xchg
fs
addl
xchg
jmp
and
mov
xchg
shlb
leave
dec
aad
inc
sub
mov
icebp
push
gs
and
mov
push
sub
jecxz
sub
mov
arpl
bound
ljmp
loop
sub
leave
fwait
cmp
scas
lods
mov
xchg
test
rcrb
and
popa
out
push
out
pop
pop
test
pop
sbb
imul
ja
decl
xchg
xorb
icebp
sbbb
mov
sbb
stos
adc
lcall
testb
mov
xor
mov
in
sbb
fimuls
push
push
popl
mov
scas
rclb
add
sti
int3
mov
pop
lcall
in
imul
sub
or
sbb
jg
rclb
sbb
and
pop
iret
push
scas
push
pop
movsb
dec
adcb
ret
cmp
cmp
imul
aas
js
sahf
pop
shrb
mov
inc
mov
push
sahf
inc
in
popa
jne
mov
mov
mov
mov
push
adc
push
dec
inc
mov
cltd
lods
sub
and
mov
and
jbe
mov
add
xor
add
cmp
daa
and
lock
rcll
pop
sbb
lods
cmp
je
jne
std
clc
in
push
jp
or
inc
ja
movsl
mov
fcoml
mov
dec
add
adc
dec
bound
xor
lcall
mov
rdmsr
test
xorl
aam
and
and
jp
push
mov
loopne
xlat
mov
aaa
sbb
test
fdivp
roll
mov
fwait
sub
adc
push
inc
cmpsl
pop
inc
push
jle
mov
ja
repz
scas
cmpsb
insl
dec
lret
add
add
popa
xchg
sahf
adc
adc
fsubrl
sub
ds
jbe
sahf
xlat
xor
repz
xlat
and
das
jg
lods
popa
mov
andb
or
inc
test
shrb
scas
mov
add
scas
test
jb
jecxz
add
test
push
enter
jmp
mov
jae
aad
in
sahf
sub
test
testb
dec
mov
push
jo
inc
push
dec
dec
mov
cld
mov
fcmove
shll
lcall
lret
pop
xchg
push
test
lret
imul
arpl
lods
bound
or
in
push
mov
std
adc
add
frstor
loope
leave
push
lods
imul
loopne
test
lret
insl
pop
mov
scas
call
sub
xchg
sbbl
mov
adc
pushf
insl
rolb
inc
pushl
test
ficomps
addr16
adc
push
rcrb
or
xchg
rclb
jb
xchg
lret
push
or
mov
push
pop
loope
mov
sbb
push
out
insb
aam
fsubp
or
lret
pushf
mov
dec
gs
out
ljmp
movsl
popa
sbb
outsb
leave
jb
js
push
push
out
xor
add
mov
scas
add
call
xchg
mov
add
jns
xor
push
xchg
shlb
or
dec
add
sub
cmp
out
in
adc
adc
cltd
sbb
push
push
mov
mov
xchg
test
loope
push
inc
cltd
lahf
pop
out
add
in
mov
iret
test
adc
out
cld
movsl
cmp
push
je
loopne
pop
or
or
or
mov
or
or
adc
mov
shrb
int
outsl
cs
sbb
gs
xchg
pop
repz
lahf
mov
imul
shrb
sub
xchg
ficompl
test
jb
pop
sbb
rcrl
mov
out
in
pop
adc
push
add
jae
jp
sbb
leave
mov
xlat
scas
fistpll
lret
push
xchg
mov
bound
pusha
xchg
and
jno
inc
inc
icebp
inc
imul
jg
xor
add
andb
inc
jno,pt
or
push
cmc
jno
xchg
loope
in
push
icebp
jp
mov
iret
insl
jns
xchg
in
push
dec
inc
mov
sub
adc
inc
addl
inc
jecxz
cmp
pop
cs
jp,pn
mov
js
or
pop
dec
imul
xor
nop
rclb
cmp
movsl
dec
lods
xchg
push
sbb
sub
or
fistl
sub
pop
ret
stos
dec
arpl
inc
cmpsl
pop
inc
push
jle
mov
xor
cmpsb
push
xchg
inc
xor
jecxz
rclb
xor
sti
and
stos
mov
invd
sbb
sub
lea
mov
scas
pop
ds
mov
popf
stc
rorl
jo
ds
xchg
adc
fcmovb
lods
es
test
cmp
aas
pop
sub
nop
ficomps
mov
ljmp
lods
and
je
cltd
lods
std
aas
mov
aad
inc
and
orl
aaa
in
inc
push
loope
mov
pop
mov
loope
and
lock
rcll
pop
sbb
mov
cs
xchg
and
jae
mov
or
sbb
pop
decb
mov
adc
dec
add
adc
dec
bound
xor
dec
push
ret
add
pop
fcomp
jg
push
dec
sub
jg,pn
addb
sbb
and
push
xchg
adc
lods
pop
andl
stc
sbbl
test
push
mov
test
mov
rorb
stc
addr16
jecxz
fsubrp
in
mov
mov
push
enter
std
sahf
xlat
xor
repz
jecxz
sub
test
xchg
std
pop
sbb
fcoml
push
enter
mov
mov
add
int
adc
sbb
inc
mov
xor
mov
sbb
push
lahf
jge
dec
dec
mov
mov
shlb
imul
inc
and
sbb
rolb
pop
dec
inc
sub
lods
dec
dec
nop
sbb
push
cmp
int
or
addl
mov
ja
xor
cs
in
inc
sti
xor
jmp
push
clc
incl
daa
mov
mov
mov
or
mov
sub
adc
clc
popf
sbb
lahf
mov
push
shrb
insl
in
fsts
push
sbb
shll
and
in
xor
test
push
outsb
lea
cmp
xor
test
dec
cmc
test
movsb
mov
mov
mov
dec
in
mov
sub
lret
mov
mov
inc
push
jle
mov
xor
cmpsb
push
xchg
inc
xor
jecxz
rclb
pop
mull
adc
sbb
xor
jno
scas
mov
sbb
inc
arpl
mov
or
mov
imul
pop
mov
or
fsubrp
or
mov
cli
pop
jno
sub
pushl
mov
push
in
xor
jne
pop
sbb
pop
or
bound
orb
sbb
cmp
leave
ss
aad
xor
sbb
jns
mov
adc
mov
fildl
aam
mov
out
aam
adc
sbb
shl
iret
push
add
and
lret
xchg
sub
dec
cmp
push
leave
stc
call
js
lcall
fdiv
sub
enter
adc
pusha
mov
shll
insl
es
pop
std
sub
inc
xchg
xchg
jle
mov
divl
ret
xor
mov
mov
daa
aam
ret
push
sub
lods
xchg
pop
inc
filds
pop
jno
les
dec
inc
push
cmc
je
js
push
jns
inc
addl
dec
mov
adc
mov
or
mov
jge
xchg
and
out
int3
pop
out
jmp
mov
pop
xchg
loope
mov
sub
push
fnsave
fisubrl
lret
lret
dec
jmp
pop
jae
pushf
outsl
push
or
lahf
adcb
jbe
mov
movsb
sub
loop
gs
data16
fdivrs
push
std
sub
mov
push
iret
push
jnp
repnz
arpl
popf
es
das
jle
out
and
xlat
popf
mov
xchg
movsb
test
adc
ret
cmc
leave
out
or
pop
je
mov
add
push
int
add
pop
xchg
sahf
inc
in
push
sbb
push
jo
and
fisubrl
leave
jecxz
int
xor
ret
xor
dec
pop
adc
cmp
xchg
sbb
sub
mov
gs
fisubrs
inc
mov
fcmovbe
fcmovb
adc
out
sbbl
or
push
add
xor
out
stos
adc
cmp
push
jne
loopne
gs
pop
sbb
int3
cmp
call
or
pop
cmp
push
mov
and
rcll
mov
jns
inc
or
inc
je
mov
pop
xchg
loope
cmp
mov
pushf
dec
mov
inc
aad
adc
inc
jmp
inc
notl
push
out
jg
leave
push
ret
mov
stc
xchg
jo
inc
roll
stos
js
adc
cwtl
cmc
sbb
push
push
jl
sti
sub
xchg
sub
add
or
xchg
sti
in
push
cmpsb
push
cmp
jne
mov
cmc
add
rcrl
mov
xor
jl
xchg
cmc
addr16
xchg
inc
push
mov
mov
mov
add
movsb
test
in
push
imul
shrb
sbb
movsl
push
arpl
shl
data16
mov
add
les
stos
mov
inc
cwtl
or
lret
test
fisttpl
pop
icebp
cmp
push
leave
stc
call
js
lcall
mov
scas
jae
adc
jl
sbb
sub
repz
stc
push
dec
shlb
popf
sti
inc
mov
addl
jae
cmp
js
inc
push
push
mov
pop
aaa
or
nop
sbb
addr16
out
adc
pop
or
and
mov
lock
gs
pop
sbb
std
mov
test
jnp
shlb
xlat
scas
pop
fldt
ret
add
jp
inc
mov
cltd
hlt
ret
mov
push
dec
aaa
push
cwtl
addr16
rep
adc
outsb
ret
push
xlat
fimull
fdivrs
loop
xchg
dec
adc
cmp
xlat
scas
loop
cld
mov
aam
push
aam
lea
adc
dec
and
jnp
or
push
movsl
insb
push
mov
dec
cmp
cmpb
dec
gs
push
xor
dec
sbb
mov
xchg
fildl
lahf
std
leave
pop
xor
into
push
sub
lock
icebp
lahf
out
pusha
aas
scas
clc
pop
in
int
inc
cmpl
fistpl
dec
pop
shll
nop
jno
addl
outsb
js
sbb
sbb
mov
stos
sub
dec
dec
imul
sbb
mov
lret
nop
and
repnz
stos
add
cli
sbb
aam
push
jecxz
sub
pushf
xor
and
sub
rclb
les
or
add
jae
bound
mov
lret
xor
push
jnp
or
addl
mov
jb
and
scas
sub
add
and
sbbb
xchg
xchg
out
and
clc
movsb
shlb
les
mov
xor
cmp
mov
lods
cli
pop
add
dec
push
adc
mov
pop
jbe
outsl
mov
popa
rol
pop
push
pop
ljmp
repz
sub
adc
mov
in
lods
inc
and
sub
adc
fnstsw
out
shrb
jp
inc
mov
test
inc
jecxz
cmp
pop
cmpsb
popa
and
cmp
cmp
repnz
stos
in
and
je
jbe
sub
cwtl
sbb
enter
orb
sbb
cmpsb
pop
in
fimuls
cmp
clc
xchg
fwait
cmpsb
xor
mov
adc
imul
das
lock
xor
mov
orl
sbb
inc
xor
lcall
mov
cmc
pop
push
and
push
xchg
ret
hlt
add
adc
push
mov
in
int3
jge
repnz
pop
movsb
sub
push
mov
mov
fldt
movl
sbb
jb
push
adc
add
insl
mov
jmp
push
insl
outsb
mov
stos
dec
dec
mov
lock
pop
out
scas
jg
xlat
adc
push
and
xchg
jp
loop
addl
push
mov
jb
enter
cmpl
inc
arpl
mov
cmp
jmp
rolb
xchg
insb
outsl
or
lret
jbe
mov
icebp
jge
shrl
aaa
mov
out
push
sbb
pushf
sbbl
push
push
push
push
xchg
das
xchg
cmpsl
inc
test
add
mov
mov
and
imul
fwait
repz
jne
push
je
loopne
shlb
xor
add
nop
and
imul
inc
inc
outsl
or
cmp
adc
rcll
push
subb
lea
or
or
outsl
fsubl
mov
rolb
push
out
insb
aam
popf
xor
loop
scas
sub
pop
cmpl
cmp
pop
ss
mov
lods
lcall
xorb
sub
inc
std
in
pop
hlt
mov
arpl
mov
movl
pop
insl
loopne
sbb
cmp
mov
xchg
je
pop
dec
aad
inc
pop
mov
mov
pusha
dec
dec
ret
push
sti
negb
or
leave
dec
addl
test
ret
stos
mov
mov
pusha
dec
dec
ret
push
in
mov
xchg
inc
and
sbb
and
pop
add
sub
fmuls
jmp
sbb
jb
cmp
insl
xor
mov
xchg
or
clc
testb
icebp
adc
jae
fwait
pop
dec
icebp
inc
outsl
xchg
mov
push
loope
push
lret
in
lods
mov
out
cli
adc
js
xchg
push
jns
adc
adcl
inc
jbe
outsl
cld
add
jb
push
in
mov
outsb
xchg
mov
mov
insl
arpl
mov
sbb
sarb
add
adc
add
cmpb
shrb
sub
mov
xlat
pop
xchg
xchg
into
mov
in
pop
out
mov
outsl
or
lret
mov
aad
in
in
push
pushf
or
ja
mov
arpl
movsl
mov
jp
addl
rclb
js
pushl
xchg
jmp
rolb
or
das
pop
jp
jle
cmp
scas
pop
mov
sbb
rcrl
add
mov
and
pop
jecxz
jno
or
lcall
jbe
sbb
enter
addr16
adc
dec
push
mov
repz
inc
test
rclb
stc
in
lods
adcl
dec
and
fisttpl
add
fldenv
loopne
test
xor
aas
fisubrs
sbb
jb
nop
and
adc
sahf
lret
orb
mov
pop
movsb
jae
into
lcall
test
nop
lods
xchg
movsb
dec
adcb
ret
sarb
ret
js
out
xchg
xor
mov
out
roll
dec
jp
sub
mov
mov
sub
adc
lods
leave
push
jg
stos
fsubrs
pop
mov
lock
jne
xchg
imul
in
cwtl
aas
mov
xchg
mulb
loop
add
stc
loop
dec
add
movsl
push
mul
imul
sahf
push
subb
jo
xchg
out
mov
jne
mov
mov
jmp
repz
dec
sbb
push
out
insb
aam
popf
xor
loop
scas
sub
pop
cmpl
testl
adc
insb
dec
push
ret
add
pop
fcomp
jg
mov
xchg
stos
test
aaa
push
cwtl
sub
xchg
fldcw
mov
pusha
mov
inc
cmpsl
pop
inc
push
jle
mov
xor
cmpsb
push
xchg
inc
xor
jecxz
rclb
lahf
dec
pop
inc
int3
sti
and
push
stos
mov
dec
pop
inc
nop
sub
or
sub
inc
mov
popf
stc
rorl
jo
ds
sbb
add
add
lods
es
test
cmp
add
xor
out
add
xor
test
das
int3
xor
inc
call
bound
cmp
and
lods
leave
push
jg
sbbb
jb
push
xchg
cmp
cwtl
test
data16
jmp
nop
and
push
in
bound
mov
sub
dec
stos
int
add
fstpl
mov
iret
enter
repnz
addr16
xor
movsb
test
jecxz
sbb
loopne
sub
mov
lcall
dec
adc
outsl
fsubl
pop
lcall
fdivl
insb
inc
lcall
mov
lahf
inc
rolb
iret
push
lret
adc
adc
cmp
mov
mov
mov
lods
pusha
idivb
mov
bound
out
inc
or
and
xor
mov
or
cmp
xchg
adc
movsl
cs
cmp
sub
jne
imul
dec
cmp
cmpb
dec
gs
push
xor
dec
sbb
in
cvttps2pi
push
das
adc
sahf
stos
mov
les
in
in
adc
cld
fs
das
adc
outsb
pop
push
lahf
lods
ja
inc
mov
cmp
aas
jns
inc
addl
int3
mov
fnstcw
mov
adc
push
xchg
enter
add
xor
ljmp
call
test
addr16
lea
lods
sub
outsb
jp
mov
and
sub
mov
cltd
push
xor
add
lret
jno
pushl
test
ficomps
shl
add
inc
mov
xchg
jp
push
pop
xchg
pushf
shll
fwait
cmp
daa
inc
loope
mov
dec
out
fists
cmp
ljmp
xchg
sbb
movsl
popa
sbb
mov
push
dec
push
lahf
sub
flds
lret
data16
movsb
cmp
jnp
sub
dec
sub
push
add
cmp
test
pop
mov
fcomps
xor
das
and
out
mov
add
jnp
adc
pop
aas
mov
jbe
ljmp
mov
mov
ds
popf
push
mov
popf
mov
xchg
movsb
test
adc
faddl
repnz
cmp
mov
sarb
stos
mov
filds
mov
pop
push
test
cmp
bound
stos
ret
js
xchg
movl
gs
sti
pop
and
add
mov
arpl
scas
jae
lret
mov
pop
leave
in
aaa
push
imul
lds
sub
movsb
lret
imulb
mov
inc
jno,pt
jnp
fidivrl
es
push
cmc
ss
pushf
insl
mov
dec
inc
push
cmc
lea
sub
sbb
fisttpl
mov
xchg
rcll
das
dec
scas
inc
mov
jle
jns
jae
fcomp
cmp
dec
pop
xor
jle
mov
std
and
xchg
mov
jmp
xchg
mov
push
pmulhuw
inc
inc
out
dec
aad
ret
imul
push
push
xchg
push
call
int
adc
daa
jne
aam
mov
dec
aaa
add
or
dec
adcb
ret
shll
das
jnp
aad
xor
sbb
sub
xchg
push
test
addr16
lea
fisubs
fmul
outsl
bound
lret
stc
mov
inc
jl
sub
call
xchg
xor
je
push
std
pushf
mov
or
cmp
sbb
push
lcall
cwtl
mov
dec
scas
or
sub
sahf
loopne
mov
aam
xor
or
enter
enter
or
or
jbe
ret
xor
dec
pop
mov
gs
mov
aam
cmp
enter
xchg
or
insl
or
cld
in
or
sub
cmp
adc
gs
clc
lahf
clc
jg
imull
repz
scas
sub
mov
rcrl
add
mov
scas
add
and
out
bndldx
jmp
cli
cmpsl
mov
adc
ljmp
dec
dec
sbb
adcl
int
cld
push
inc
int
pop
mov
push
jns
and
mov
xchg
imul
mov
repnz
test
loope
loop
rep
cmp
or
dec
bnd
cli
xor
push
push
push
enter
ret
jmp
add
iret
scas
pop
ds
mov
popf
stc
rorl
orb
out
mov
test
fcmovb
lods
cld
pop
fldpi
out
and
sbb
mov
xchg
cmp
push
xchg
pop
dec
aam
sti
scas
jl
cmp
jb
mov
outsl
out
push
sbb
cmp
jmp
or
insb
xchg
les
in
jnp
lret
js
out
inc
cmp
or
dec
out
dec
pop
pusha
xor
pusha
mov
cmpb
adc
in
bound
mov
sub
dec
push
stos
mov
mov
or
push
mov
jg
stc
js
fiadds
sahf
dec
sub
popf
inc
sub
cmpsl
dec
xchg
arpl
bound
jge
lods
push
xchg
push
pop
int3
cmp
out
divl
xor
sub
loopne
ss
lds
out
xor
fndisi(8087
mov
rol
enter
cmpsb
push
negl
mov
sbb
mov
mov
stos
dec
mov
rcr
or
gs
and
push
mov
dec
cmp
in
sbb
adc
cltd
sbb
push
push
mov
mov
xchg
test
loope
push
inc
cltd
lahf
jmp
jnp
lcall
ljmp
mov
icebp
lahf
pop
imul
repnz
cmp
lret
add
sub
gs
jno
sub
inc
push
push
cmp
outsb
hlt
cltd
mulb
xor
nop
pushw
fisttpl
clc
add
shrl
gs
inc
pop
mov
mov
and
push
call
test
xor
mov
call
repnz
cmc
mov
ss
push
es
mov
out
shlb
add
mov
push
inc
push
pop
pop
rolb
push
stos
imul
lcall
sub
insb
clc
sahf
cld
int3
bound
cli
int
or
pop
scas
sbb
mov
push
xlat
ficompl
into
pop
dec
insb
push
loop
pop
loopne
push
jle
loopne
dec
xchg
or
xor
sub
test
notl
adc
rorb
xor
dec
mov
push
push
jp
enterw
imul
pop
jl
sbb
sarl
iret
dec
xchg
sub
fcmovu
out
pop
lods
js
jecxz
or
ss
aad
xor
sbb
sub
xchg
push
test
addr16
lea
sbb
jnp
jnp
dec
in
sbb
lahf
lret
aam
sbb
sbb
push
mov
repz
icebp
cmp
mov
mov
insb
or
push
popf
xchg
mov
ja
xor
dec
xchg
in
push
mov
mov
testb
hlt
leave
mov
push
lock
sbb
sbb
adc
arpl
cmpsl
dec
xchg
arpl
bound
cld
in
cmp
lock
pop
adcl
jg
push
clc
imul
out
movsl
xor
lret
data16
pop
fistps
addb
test
and
icebp
stos
test
icebp
loop
xor
addl
ret
movsl
inc
and
icebp
ja
mov
fisubs
stos
call
imul
rcrb
nop
and
jne
adc
notl
fsubs
push
lcall
jne
add
xlat
add
mov
shlb
imul
je
test
cs
jge
filds
cld
sub
add
addr16
scas
repz
sub
adc
int
outsl
mov
es
loope
test
les
scas
xor
outsb
xor
cwtl
add
adc
es
xor
add
jp
cmp
mov
fst
bound
push
mov
or
push
lcall
sbb
jb
je
mov
mov
cltd
pop
jno
or
insl
mov
std
es
mov
stos
aad
pop
movsb
sub
xor
scas
pop
mov
mov
add
ds
xor
push
or
xor
lods
push
sub
cmp
ljmp
dec
push
fidivrl
xor
push
sahf
sbb
aas
sarb
mov
data16
shr
pop
int3
bound
cli
int
or
pop
scas
dec
dec
add
ljmp
aam
and
pop
or
imul
repz
bound
mov
sbb
xor
jbe
pop
push
dec
fsubl
pop
xchg
inc
xor
jecxz
rclb
pop
mull
jns
inc
addl
xor
sbb
xor
pop
adc
shlb
mov
enter
mov
imul
pop
mov
pop
push
loope
xor
xor
pop
fst
jnp
push
movsl
cmp
data16
lret
ds
add
repz
and
sbb
pop
fldl
loopne
pop
mov
repnz
xchg
enter
bound
lret
stc
mov
fnstcw
add
js
fildll
ret
mov
or
adc
pop
mov
push
push
add
push
ja
outsl
fnsave
xor
push
int
or
cmp
xor
subl
std
clc
in
push
dec
and
mov
xchg
pop
mov
adc
arpl
mov
rcrb
sbb
xchg
dec
mov
scas
test
inc
jecxz
cmp
pop
cmpsb
popa
and
cmp
xchg
and
out
int3
mov
sbb
mov
add
inc
and
icebp
ja
mov
xlat
mov
add
push
pop
insl
hlt
scas
sbbl
int3
mov
xchg
je
pop
dec
aad
ret
ss
adc
lahf
push
sbb
rcl
jo
pop
iret
jae
outsb
dec
leave
int3
fsubl
scas
pop
invd
sbb
and
cmc
cmp
enter
adc
adc
pop
mov
fcomps
loope
xlat
popf
and
test
addl
mov
test
sbb
bound
lret
lret
in
lods
mov
testb
add
push
or
in
xor
mov
addl
push
mov
jb
enter
or
adc
add
inc
push
add
add
jp
enter
lret
out
ffree
jbe
inc
push
mov
loope
aas
add
and
mov
lret
decl
test
inc
cltd
xor
xchg
and
dec
dec
nop
arpl
inc
icebp
inc
push
xchg
mov
jmp
or
adc
mov
fstpl
mov
jns
inc
addl
call
rcll
pop
dec
jge
sbb
es
mov
in
movsl
xor
mov
call
xchg
mov
push
mov
pop
aaa
or
push
fnstsw
push
or
mov
or
addl
inc
repz
shlb
mov
sti
or
mov
fstps
fdivrl
pop
push
inc
ret
jle
inc
push
movsl
sub
fnstenv
pop
pop
sbb
and
ja
aaa
sub
jp
lret
jne
push
xlat
ficompl
pushf
jne
fdivr
fsubrl
and
loopne
into
scas
rclb
add
inc
pusha
pop
popa
dec
mov
mov
aas
lret
pop
dec
mov
jl
aaa
scas
inc
jns
les
inc
paddq
fs
fcompl
ret
sbb
out
sub
jp
int
dec
xchg
mov
sbb
popf
and
inc
or
push
mov
jmp
or
pushf
and
pop
aad
popf
sbb
sub
pop
jecxz
push
mov
repnz
lret
sub
cwtl
mov
mov
in
sbb
test
sbb
mov
ret
out
xchg
ljmp
dec
mov
mov
inc
lahf
dec
pop
push
dec
aaa
adc
adc
adc
xchg
fnsave
push
fs
bound
adc
dec
idivb
push
mov
jae
fisttpll
shrl
lods
mov
adc
out
xchg
pop
daa
mov
fs
in
test
in
adc
fwait
test
jnp
roll
sub
pop
cmpl
gs
call
addl
xor
loopne
ss
lds
addr16
movsb
add
in
fwait
imul
push
fcoml
push
xor
andb
imull
mov
jo
xchg
push
dec
and
fisttpl
add
std
cmp
push
mov
dec
cmp
cmpb
dec
gs
push
xor
dec
sbb
loope
dec
sbb
pusha
fcomps
movb
dec
sbb
js
pop
mov
insb
cli
mov
ds
mov
jle
mov
sahf
sub
shlb
xchg
mov
xchg
push
or
js
adc
int
push
xchg
call
divl
xchg
loop
fs
les
jmp
repnz
xorl
xchg
jnp
je
push
std
pushf
mov
or
js
loopne
aad
testl
cmp
sub
shrl
xor
push
dec
mov
add
stos
out
fwait
lea
fistpll
adc
scas
pop
mov
sbb
cs
aad
push
cmp
sbb
xchg
and
out
daa
pop
xchg
lret
jle
in
push
out
in
out
mov
xchg
call
pop
dec
mov
aam
pop
repnz
popw
dec
gs
sti
mov
dec
lods
cmp
add
xchg
dec
jns
add
inc
jl
incl
dec
iret
jb
daa
popa
ret
jb
xchg
int
xor
je
divl
jne
pop
mov
and
ss
fdivs
inc
or
imul
loop
mov
ljmp
push
mov
push
mov
add
lock
xor
aaa
mov
mov
cltd
mulb
xor
nop
data16
dec
dec
jge
add
rcrl
divl
sbbb
test
icebp
jle
jl
cwtl
into
mov
mov
ficoml
xchg
or
fidivrs
mov
push
dec
add
lock
mov
sbb
fistpll
stos
adc
cmp
push
dec
imul
divl
inc
push
cmp
ljmp
mov
mov
sub
repnz
jb
js
push
rcrl
add
mov
scas
add
call
adc
pop
loope
aam
pop
bnd
pusha
pop
pop
xlat
idivl
mov
inc
addl
sub
outsl
inc
arpl
or
cmp
mov
jb
enter
gs
addr16
test
loopne
adc
mov
sub
gs
sbb
pop
test
push
enter
mov
jo
js
hlt
repnz
fldcw
repz
fwait
mov
or
sar
ljmp
mov
out
xor
cmc
nop
dec
mov
add
popa
mov
out
aam
adc
sbb
or
stc
push
mov
xor
xchg
xchg
into
mov
in
pop
out
cmp
sahf
inc
inc
outsl
or
lret
mov
aad
in
in
push
pushf
imul
lret
movsb
jns
add
sub
sub
rcrb
jge
lahf
mov
gs
sub
sub
and
dec
inc
jne
outsb
lea
cmp
xor
test
jmp
push
inc
ljmp
cmc
mov
jae
out
sbb
rolb
xlat
in
adc
ficoml
adc
in
pshufw
lods
dec
loop
clc
sbb
mov
mov
repnz
push
cltd
arpl
cmpps
stos
inc
jmp
loope
movsl
aad
xchg
sti
loopne
add
cmp
mov
xchg
jns
inc
addl
or
cs
push
jl
imul
call
shlb
jmp
aam
jmp
mov
js
loopne
and
cmc
fdivrs
ljmp
stos
test
mov
inc
mov
jns
pop
push
mov
push
mov
add
lock
xor
aaa
mov
mov
cltd
sbb
movb
cwtl
ja
dec
jge
add
shrl
mov
cli
push
inc
fstp
add
mov
push
or
cmp
xor
cmp
ja
stos
out
je
bound
xor
pop
in
xchg
and
adc
daa
inc
add
mov
inc
lock
push
dec
adc
adc
lret
outsl
lret
data16
pop
inc
imul
xchg
cmp
push
mov
test
xorl
aam
and
and
jp
xor
cmpsl
mov
aad
sbb
ret
popa
inc
and
lret
mov
xor
mov
push
mov
int3
and
in
xor
sub
test
xchg
std
pop
sbb
xor
cmp
and
pop
test
cs
sarb
jecxz
aam
shr
push
mov
push
mov
test
iret
int3
pop
dec
test
sub
jns
mov
test
lds
cmp
enter
in
jno,pn
push
push
addb
mov
nop
adc
insb
cmp
mov
sbb
mov
push
sub
lock
icebp
xchg
shrl
mov
std
sub
sub
stos
push
lcall
cwtl
jnp
insl
jbe
divb
int3
sbb
das
ljmp
lods
push
cld
outsb
sbbb
jno
loop
fs
jp
mov
and
jbe
mov
mov
pop
mov
xchg
int3
push
dec
inc
mov
mov
xor
subl
sbb
inc
mov
fdivl
pushf
mov
test
xor
mov
imul
sahf
out
out
mov
test
inc
jecxz
shr
or
adc
std
dec
cmc
test
movsb
mov
sub
cmp
or
dec
enter
pop
out
popa
fmull
in
movsl
shlb
enter
pusha
out
inc
or
push
dec
pop
mov
aam
dec
pop
dec
daa
shrl
mov
fwait
enter
or
inc
sbb
adc
push
arpl
jge
es
xor
xchg
iret
sbb
xor
adc
gs
addl
pop
lods
push
in
enter
gs
addr16
test
adc
adc
gs
addl
cmp
mov
repz
jge
repnz
in
xor
shlb
inc
mov
adc
jno
cmp
enter
cmp
popf
cld
cmp
test
push
mov
data16
and
loopne
sub
sbb
add
push
imul
fwait
xchg
sbb
repz
paddusb
out
jb
pusha
mov
jl
push
jg
cmp
pop
pop
pop
inc
jp
stc
ret
out
and
pop
in
cli
xchg
sub
mov
xchg
or
sbb
shl
jge
jbe
test
mov
lcall
test
lods
pop
mov
add
aad
arpl
mov
outsl
movsl
and
push
ret
pop
mov
mov
and
and
xchg
add
jmp
mov
int
jbe
lock
fisubrs
call
jle
push
mov
cltd
push
lods
lea
sti
mov
cmp
xchg
lcall
and
pop
push
cld
iret
movsl
pop
mov
test
jns
inc
addl
mov
sahf
inc
inc
outsl
or
lret
mov
mov
lods
les
fs
sbb
inc
addl
sahf
pop
leave
in
aaa
push
imul
lds
mov
fs
lds
mov
js
call
repnz
mov
lcall
in
adc
xchg
cmp
mov
or
icebp
sbb
es
clc
push
xchg
adc
lods
dec
icebp
xchg
cmp
or
out
imulb
jo
pop
mov
add
in
add
or
cmp
cmc
das
sub
dec
push
in
notl
xlat
xchg
pop
pop
and
mov
inc
jl
or
in
sub
xchg
enter
mov
push
daa
mov
mov
jb
je
push
xchg
jecxz
and
jnp
lcall
scas
pop
mov
push
push
jp
enterw
rclb
leave
dec
addl
sbb
in
cvttps2pi
inc
jmp
jmp
hlt
lock
sahf
push
xchg
xor
sub
adc
sub
jne
sbb
or
cmp
es
push
or
pop
aam
pusha
xorl
std
les
rcrb
sub
adc
loope
lods
sbb
mov
cltd
push
xor
add
cmp
daa
and
lock
rcll
push
mov
fidivl
add
daa
sub
leave
sbb
inc
jnp
pop
cmpsb
cld
cmpsb
adc
pop
sarb
pop
decb
mov
xor
cmp
sbb
sub
in
or
mov
into
or
sub
cmp
adc
sub
icebp
and
xchg
fsubrl
scas
pop
push
mov
ret
push
add
push
cmp
stos
arpl
jmp
mov
scas
pop
mov
ljmp
mov
outsb
xchg
in
pop
out
xchg
and
lahf
mov
xor
scas
mov
es
mov
or
stc
out
leave
dec
fistps
xor
adcl
adc
push
adc
rcrb
test
xor
mov
jns
inc
addl
jbe
mov
repz
lret
add
ss
and
sbbl
nop
leave
dec
addl
xchg
cli
jg
mov
or
repnz
nop
jecxz
icebp
and
sbb
add
push
sub
cmp
iret
dec
xchg
sub
js
jo
cmpsb
mov
inc
push
lret
dec
pop
or
inc
xchg
insb
aas
js
sahf
pop
stos
cmp
pop
sub
imul
pop
cmp
nop
and
inc
pop
jle
xchg
loopne
lret
pusha
add
decb
mov
add
jp
cmp
mov
ds
xor
dec
or
les
nop
loope
xor
scas
mov
push
mov
adc
in
mov
xor
cli
stos
out
fwait
lea
dec
push
cli
fiadds
dec
adc
repnz
enter
adc
lret
test
sub
cltd
mov
dec
repz
clc
push
xchg
adc
lods
dec
icebp
ret
test
lods
mov
in
push
pusha
out
inc
or
inc
or
and
xor
mov
or
cmp
push
int3
mov
xchg
je
pop
dec
aad
inc
pop
mov
subl
xor
rcll
icebp
ss
pop
mov
jo
rorl
addl
or
in
inc
daa
lea
dec
push
and
mov
daa
add
jno
test
cmpsb
sar
lahf
dec
mov
in
ja
push
push
imul
adcl
sbb
pop
fcoms
adc
push
push
xchg
xor
mov
and
mov
push
negb
into
jmp
dec
push
xor
js
pop
push
gs
repz
fs
push
je
or
or
or
jg
ja
cmc
stos
pop
jle
lods
orb
fistpll
lock
push
push
lcall
xlat
xchg
mov
sahf
clc
jl
jle
out
enter
cmpsl
and
push
mov
mov
and
rcll
mov
or
std
add
add
pushf
scas
aad
jg
in
add
inc
ret
push
sarb
xor
int
daa
inc
addl
dec
push
dec
push
xor
xchg
scas
sbb
mov
pop
mov
and
inc
adc
jb
mov
adc
stos
stos
add
adc
cmp
cmp
adc
xchg
cmp
dec
clc
sahf
cld
int3
bound
cli
int
or
pop
scas
sbb
mov
push
xlat
ficompl
dec
pop
dec
insb
push
loop
pop
loopne
push
jle
loopne
into
scas
xor
jecxz
sub
jnp
push
jb
movsl
cs
cmp
lds
mov
mov
cli
loopne
or
inc
cmpsl
stos
lods
scas
outsl
cltd
loope
or
cmp
mov
pop
mov
hlt
cmpsb
stos
dec
ss
scas
sbbb
sbb
sti
in
push
cmpsb
push
icebp
or
mov
jnp
mov
fwait
shll
mov
test
fcompl
fimull
push
jns
call
arpl
sbb
dec
rcrb
ret
js
jl
mov
push
scas
addr16
adc
pop
ret
in
cld
inc
xor
mov
mov
or
lret
stc
mov
inc
bound
call
out
lret
test
filds
sub
xor
jge
push
mov
jae
ss
aam
outsl
cmp
cmp
stos
aad
pop
movsb
sub
xor
lret
mov
xor
icebp
mov
lods
fdivrs
adcl
pop
sub
cmp
or
or
adc
in
nop
dec
shlb
push
push
mov
sub
pop
inc
mov
enter
mov
mov
jae
push
adc
addl
fcoml
sbb
ficoml
adc
pop
cmc
lret
imul
xor
shr
or
sti
inc
stos
dec
mov
enter
ret
mov
mov
js
loopne
push
jg
and
rcrl
fistpll
pop
xlat
cld
adc
mov
xor
xor
sbb
mov
pop
pop
shl
dec
jp
ljmp
sbb
mov
fsubrs
das
adc
sahf
stos
mov
stos
pusha
adc
fldl
in
int
inc
cmpl
fistpl
arpl
and
or
ret
scas
and
imul
xor
out
jne
xchg
imul
in
cwtl
aas
mov
xchg
mulb
loop
add
stc
loop
dec
add
movsl
push
mul
imul
lret
mov
pop
inc
leave
xor
dec
js
mov
sub
or
jae
std
add
cmp
jp
adc
scas
cmp
sub
sar
stos
out
fwait
lea
into
or
data16
scas
pop
gs
lods
push
sub
mov
insb
push
divl
outsb
incl
push
xchg
pop
ljmp
or
cmp
push
mov
test
mov
lret
sbb
push
or
scas
repnz
jb
mov
faddl
jl
mov
popf
std
jbe
enter
sarl
in
in
enter
pop
sbb
test
sub
or
push
fistpll
xchg
jmp
and
cmp
add
nop
lahf
or
lds
mov
add
test
mov
xchg
jmp
std
pop
cmc
scas
test
xor
push
cmp
stos
inc
jmp
loope
movsl
insb
push
mov
push
aaa
out
and
adc
adc
cltd
sbb
push
push
mov
call
pop
mov
mov
and
cmc
fdivrs
ljmp
push
jno
or
push
add
mov
or
jb
arpl
mov
inc
int3
fistpl
cmp
mov
adc
lods
sti
push
or
daa
aaa
sub
push
adc
mov
jmp
jmp
push
mov
cld
dec
push
and
addl
pop
inc
cmp
stc
aaa
packuswb
out
jge
push
fdivs
adc
inc
mov
xchg
lea
mov
xchg
ret
pushf
testb
rolb
rorl
mov
pop
lahf
fcmovu
movsb
sbb
xor
in
cld
push
sub
inc
lret
outsb
out
movsb
ds
sar
or
and
cmpb
adc
out
push
test
aaa
hlt
loop
sbb
cmp
stos
imul
jp
and
imul
pusha
mov
jl
sbb
or
lahf
rcll
jecxz
sub
jl
movsl
ja
fs
or
xor
mov
test
cmpsb
sbb
sbb
jb
ss
mov
or
icebp
push
or
mov
push
pop
scas
sbb
mov
push
xlat
ficompl
pushf
jne
fdivr
fsubrl
iret
fisubrl
lods
jno
iret
cld
inc
sbb
fcompl
adc
push
or
pop
lcall
in
imul
sub
and
aas
loop
aaa
mov
mov
and
cmp
dec
xchg
arpl
ss
enter
cwtl
insl
test
cltd
insb
and
mov
or
pop
test
add
in
push
xor
jge
cwtl
mov
and
mov
adcl
decb
mov
mov
call
aam
fiadds
in
or
jl
cwtl
into
loope
adcb
xor
scas
mov
ret
inc
sub
push
dec
add
push
mov
cmp
rcrb
jmp
stc
dec
cwtl
mov
push
fldcw
pop
xor
jmp
inc
jnp
push
stc
int3
out
pop
adc
sarl
push
mov
addl
inc
sub
pop
push
jmp
mov
mov
or
mov
add
adc
xchg
clc
loopne
or
int3
mov
fsts
nop
and
pusha
add
in
addl
push
xchg
jecxz
fsubrp
in
mov
push
repz
scas
jbe
sahf
xlat
xor
repz
aaa
cmp
push
enter
leave
inc
addl
mov
outsl
pop
imul
repz
push
std
sub
mov
jge
dec
push
and
scas
cmpsb
push
add
cmpsl
ret
mov
jno
jbe
enter
cwtl
insl
test
cltd
jecxz
or
ss
aad
xor
sbb
sub
sub
ror
mov
mov
lods
stos
lret
or
out
aam
adc
sbb
shl
iret
push
add
and
std
pushf
mov
or
test
mov
out
ljmp
repnz
adc
jecxz
mulb
ja
push
cmc
aam
pop
push
or
add
or
subb
and
nop
xor
scas
mov
jecxz
icebp
mov
out
or
js
in
sbb
in
in
and
cltd
icebp
outsl
test
mov
inc
stos
mov
dec
rcll
mov
iret
mov
in
add
adc
mov
cmp
xorb
pop
push
dec
sub
adc
add
arpl
es
push
popa
push
or
adc
cmpsl
mov
adc
pushf
in
and
shlb
push
out
out
fisubs
stos
call
jl
sti
or
xlat
cmc
aaa
jb
enter
ret
jg
add
push
or
mov
add
xor
mov
es
xchg
adc
rcrb
or
addl
popf
mov
xchg
movsb
mov
pusha
stos
mov
sbb
out
xchg
cmc
or
daa
in
sbb
or
jb
cmc
mov
shlb
shl
mov
ljmp
add
shlb
xor
cs
pop
mov
xor
xlat
mov
loopne
push
gs
ret
adc
loop
mov
daa
add
rcll
mov
ja
xor
dec
aam
outsl
cmp
cmp
stos
aad
pop
movsb
stos
push
imul
jne
fs
imul
add
sahf
fwait
test
jnp
shll
aad
push
cmc
ss
pushf
insl
mov
dec
fcomp
aas
out
stc
xchg
ficompl
push
push
mov
mov
js
loopne
cmp
dec
adc
mov
shll
popa
notb
sub
test
mov
scas
sbb
mov
push
xlat
ficompl
nop
and
pop
cmc
jb
push
popl
mull
and
insb
dec
idivl
dec
and
fisttpl
add
push
gs
mov
lea
or
ret
inc
mov
sub
xchg
mov
call
js
loopne
sbb
or
sub
repnz
xchg
mov
repz
xchg
xlat
scas
pop
loope
push
inc
cltd
lahf
std
leave
pop
ds
xor
pmulhuw
insb
cli
mov
ficomps
inc
pop
sbb
add
lret
add
sub
gs
jno
sub
inc
push
push
cmp
mov
xor
nop
pushw
imul
das
xchg
fs
cwtd
aam
shlb
or
xchg
xor
inc
xchg
jl
inc
lret
into
dec
repnz
adc
jecxz
mulb
ja
push
cmc
mov
or
aaa
or
jne
dec
push
test
aaa
hlt
loop
icebp
fisubrl
call
repnz
mov
lcall
in
adc
repz
nop
and
cmpb
xor
clc
push
sbb
mov
pop
hlt
mov
sub
jge
xor
mov
pusha
add
in
add
or
cmp
mov
xor
out
inc
pop
xor
into
pop
dec
aad
ret
imul
fldt
scas
pop
mov
add
xor
js
ljmp
push
mov
pop
sub
mov
fisubs
jmp
cwtl
leave
addl
dec
pop
iret
and
xchg
sti
jmp
andb
jle
in
inc
jnp
aas
pop
sub
scas
pop
mov
lock
ror
mov
mov
fs
lret
inc
push
sbb
pop
mov
ds
loopne
push
add
fisubs
xchg
jnp
gs
inc
pop
mov
movsb
cmpsb
pop
mov
cmp
jmp
sbb
jb
out
arpl
ficomps
in
fs
out
inc
in
mov
fidivrs
shll
dec
and
adc
daa
inc
add
aaa
mov
out
or
js
in
sub
sbb
mov
mov
push
lcall
or
aam
dec
cmp
adc
push
in
pop
mov
jb
or
mov
popa
mov
lcall
and
aaa
pop
fmuls
loopne
xchg
xor
and
adc
sub
fldl2t
ss
gs
push
xor
dec
sbb
in
cvttps2pi
stos
sbb
jp
inc
sahf
stos
mov
scas
jg
xlat
adc
popf
aas
scas
clc
pop
in
int
inc
cmpl
fistpl
decl
mov
sub
adc
lods
leave
push
jg
sbbb
imul
xor
ret
loop
dec
pop
adc
loopne
inc
push
cwtl
cmc
mov
push
or
or
cmp
inc
out
pop
sbb
aam
loopne
stc
xor
add
push
arpl
scas
jae
adc
xchg
pop
dec
push
fwait
and
test
fwait
aam
insl
aam
pop
loope
lods
subl
sbb
inc
mov
fdivl
fdivrl
in
je
push
es
mov
out
shlb
add
lock
jns
inc
addl
insb
inc
add
add
loopne
adcl
stc
int3
out
pop
and
jnp
es
mov
sub
sub
push
leave
push
pop
sbb
jb
push
fs
add
or
xlat
scas
pop
xchg
mov
int
xchg
outsl
out
mov
jno
push
orb
push
xor
cs
add
or
cmp
xchg
adcb
pop
xor
je
sub
loop
gs
test
mov
std
inc
pop
aas
loop
rcrb
jecxz
add
test
push
enter
inc
scas
mov
push
push
mov
fisubs
jmp
movsl
fwait
mov
or
sar
ljmp
mov
out
xor
cmc
nop
dec
mov
add
and
and
and
mov
push
loop
sbb
stos
movsb
test
testb
rolb
rorl
mov
pop
lahf
fcmovu
movsb
or
jl
inc
lret
jl
fsubs
jae
cmp
xchg
mov
shll
and
cmpb
adc
out
push
test
aaa
hlt
loop
lret
xlat
scas
pop
icebp
jp
mov
iret
insl
jns
dec
ret
push
sub
dec
cmp
nop
lea
fwait
and
adc
push
add
or
aam
dec
cmp
adc
push
in
pop
mov
outsl
out
std
or
sub
push
sub
mov
in
dec
pop
pop
imulb
addr16
dec
cltd
daa
sbb
xlat
scas
pop
mov
and
leave
aas
xor
sbb
mov
inc
nop
in
xchg
jle
sarl
jnp
pop
lcall
fimuls
push
or
pop
lcall
cmp
xchg
xchg
inc
jbe
xor
add
mov
lahf
jnp
leave
das
mov
adc
popf
mull
test
pop
mov
dec
mov
or
ficompl
repnz
and
sbb
or
addl
cmpsl
push
and
arpl
rclb
leave
push
xor
push
xchg
mov
rcrb
sub
insl
popa
ret
inc
cltd
hlt
int
sub
and
cli
push
inc
cmp
loopne
dec
mov
sbb
cld
xchg
sub
ficoml
adc
xchg
aaa
inc
pop
mov
or
in
add
push
sahf
jne
sbb
or
in
and
xchg
or
push
inc
int
daa
and
push
test
addr16
lea
lods
sub
or
jnp
mov
add
and
mov
xor
rol
xchg
or
adc
mov
movsl
pop
dec
stos
les
lods
push
add
inc
mov
or
mov
add
inc
sub
push
dec
add
lock
cmp
imul
push
pop
or
and
cmp
sub
repnz
enter
adc
lret
test
ja
lock
mov
jge
icebp
pop
lcall
push
jmp
enter
gs
or
push
and
cmpsb
insl
dec
movl
and
jnp
push
jb
movsl
cs
cmp
lds
ljmp
and
jecxz
in
aaa
test
push
fstl
lods
adc
sub
xchg
mov
in
rorl
cmp
lds
inc
hlt
aaa
mov
arpl
mov
sub
sbb
imul
jmp
in
push
mov
pop
hlt
xchg
xchg
nop
inc
pushl
dec
ss
int
mov
mov
je
loopne
scas
sub
mov
push
push
mov
sarl
iret
mov
xor
xor
arpl
pop
cs
and
nop
dec
mov
add
popa
mov
push
test
andl
ret
les
outsb
sbb
push
cmp
rclb
les
repnz
es
cmp
mov
hlt
popf
or
lods
mulb
mov
mov
sbb
ret
jecxz
or
outsl
push
out
pop
sbb
mov
and
addb
inc
movsl
dec
dec
sarb
enter
pop
cwtl
jb
mov
das
mov
add
aam
ret
push
sub
in
xchg
jp
sarb
push
addr16
sbb
and
xchg
jecxz
aaa
loop
inc
mov
sbb
fisttpl
inc
mov
out
xchg
mov
int
xchg
outsl
and
mov
dec
sbb
cmc
lret
add
mov
mov
sub
dec
dec
push
ret
sbb
push
add
mov
pop
pop
sbb
out
sub
jp
int
cltd
sub
cli
lds
movsl
lods
inc
sub
fimull
sbb
or
push
mov
sarl
in
test
push
or
push
jne
and
in
pop
or
or
xchg
mov
jb
sarb
dec
nop
sbb
pop
sub
xchg
lock
scas
pop
mov
add
sub
nop
dec
mov
add
popa
mov
out
in
adc
pop
mov
flds
xlat
dec
dec
in
jl
lods
pop
inc
inc
lret
push
mov
clc
or
repz
rolb
push
push
pushf
shl
sub
pushl
mov
js
loopne
sbb
lods
lret
jb
add
sbb
push
mov
cld
push
ret
mov
jmp
repz
dec
sbb
push
out
insb
aam
popf
xor
inc
mov
jp
or
rorl
gs
cltd
adc
sub
repz
cltd
push
fst
dec
scas
cmpsl
movsb
in
jecxz
mov
mov
in
pop
hlt
mov
jl
pop
icebp
cmp
mov
sbb
mov
mov
jo
gs
xor
iret
add
inc
addl
or
fwait
dec
dec
adc
add
loop
test
or
out
or
pop
repz
rorb
fistpl
insl
mov
sbb
jb
jnp
leave
das
mov
out
push
push
js
xchg
mov
addr16
adc
sbb
sti
in
push
xor
ds
add
push
loop
mov
xchg
test
inc
mov
adc
xchg
cld
adc
pop
ret
in
cld
inc
xor
inc
outsl
sbb
ds
pop
push
or
out
mov
loop
shl
sbb
jge
add
shrl
pop
or
out
mov
dec
idivb
sbb
addr16
testl
cmp
stos
aad
pop
movsb
sub
xor
lret
mov
popa
inc
test
and
push
test
paddq
popf
xor
loop
scas
sub
pop
cmpl
cmp
movaps
ficomps
das
jae
popa
lods
lcall
push
jmp
push
pop
int3
mov
outsb
test
inc
mov
fdivr
fsubrl
iret
fisubrl
lods
jno
iret
cld
inc
sbb
push
into
jbe
cmp
fistpll
pop
xlat
cld
adc
inc
test
cmp
dec
mov
push
ret
jg
loop
aaa
mov
mov
and
ret
add
push
pop
movsb
dec
adcb
test
cltd
jecxz
or
ss
aad
xor
adc
in
xor
aas
inc
inc
xchg
mov
es
and
fcompl
fnstenv
cmpsb
stc
mov
adc
cmc
repnz
lods
std
aas
mov
aad
inc
and
orl
insl
adc
mov
adc
rcrb
or
xchg
shrl
mov
xchg
mov
bound
pusha
xchg
and
addl
pop
mov
decb
lret
scas
sahf
sbb
jb
mov
adc
stos
stos
add
adc
mov
mov
jno
inc
inc
lret
inc
add
rcll
adc
clc
or
lods
mov
adc
lcall
sub
xor
imul
xchg
jecxz
fsubrp
in
mov
and
shlb
mov
js
fwait
cwtl
pop
aas
mov
jbe
ljmp
repz
fs
or
lock
test
mov
ds
mov
in
sbb
cmp
sti
or
adc
gs
pop
mov
xorl
xchg
xchg
negb
dec
orb
lds
inc
mov
jp
enter
std
fldenv
out
mov
fs
or
cltd
jae
and
rcll
mov
std
filds
xchg
adc
jae
fiadds
repz
scas
jo
and
roll
push
icebp
pop
xchg
mov
xor
dec
pop
adc
cmp
rclb
les
arpl
xchg
cmpsb
cltd
aas
and
push
pop
aaa
sbb
cld
xchg
or
test
out
sbbl
or
dec
mov
orl
mov
insl
jns
dec
mov
adc
jbe
mov
xor
js
mov
mov
in
or
push
and
pmaxsw
loopne
enter
or
dec
fs
adc
mov
cltd
fimuls
push
xchg
xchg
fstl
nop
and
jge
sbb
sbb
mov
cmp
xorb
add
or
sbb
push
addr16
or
lds
fs
mov
dec
inc
pop
or
jl
or
outsb
mov
sub
mov
mov
inc
fisttps
add
inc
addl
dec
push
xchg
push
insb
push
sbbb
test
aad
fs
sti
sbb
lods
arpl
jg
fcomps
fidivs
add
inc
das
sbb
rolb
jae
aaa
addr16
out
inc
mov
lahf
jp
lock
xor
imul
pop
lea
in
rcll
lret
jno
push
fwait
loop
sbb
push
pop
jl
jp
lods
xor
jo
inc
inc
ret
rcl
daa
aad
nop
mov
mov
rclb
aam
xchg
mov
sar
fs
aad
sbb
and
stos
mov
les
in
xchg
mov
insb
aas
js
pop
stc
lcall
pop
fcoms
mov
arpl
jo
imul
push
aaa
mov
add
testl
lret
pop
in
in
sub
add
inc
aam
inc
xchg
cli
cmc
xchg
out
dec
clc
loope
idivl
adc
push
das
lods
xchg
shr
pop
sbb
xor
mov
mov
dec
inc
xor
mov
sbb
movsl
fistl
adcl
mov
mov
or
sbb
clc
clc
adc
ss
aaa
push
neg
adc
lea
add
or
fidivrl
jp
cmp
pop
xlat
xor
scas
pop
mov
mov
mov
xor
cmp
fcomps
push
inc
push
pop
pop
shl
aad
adc
or
pop
out
sbb
cmp
mov
push
dec
clc
sahf
es
popa
es
clc
push
xchg
adc
lods
pop
mov
cmp
ds
sbbl
test
adc
xchg
jbe
cmp
or
and
xor
mov
cmp
dec
xorb
mov
cmpl
push
inc
rorb
fistpl
stc
or
shrl
js
ljmp
xor
jge
sbb
out
pop
or
jmp
rclb
sarl
iret
mov
add
adc
sbb
rolb
arpl
inc
mov
sarl
sbbl
out
mov
imul
les
in
cmpsb
andb
xor
cmpsb
repnz
inc
fcompl
ficompl
sub
sbb
add
sbb
xchg
mov
std
push
das
lods
push
add
jp
add
movsl
popl
dec
rcll
mov
mov
sbb
inc
jnp
sub
ficoml
arpl
xadd
cmp
cmp
mov
mov
in
mov
fidivrs
shll
xchg
xchg
cmc
adc
rorb
mov
cmp
addl
fidivs
cmp
dec
adc
sbb
lock
pop
jnp
cmp
mov
xor
pop
mov
add
adc
dec
bound
pop
mov
hlt
jge
add
cld
jmp
push
inc
ljmp
cmc
mov
dec
in
mov
xchg
lahf
pop
jmp
lods
push
notl
jle
mov
xor
pop
dec
mov
add
bnd
inc
int3
sti
movsb
movsl
ljmp
xchg
sbb
in
fxch
dec
mov
sbb
jno
cs
daa
lea
fnstsw
cli
jle
jmp
xchg
or
sbb
mov
notl
icebp
in
out
ljmp
mov
add
stc
mov
adc
push
jno
mov
int
jbe
lock
push
mov
ss
push
xor
push
std
into
test
xor
push
jg
lods
add
xchg
test
adc
mov
sub
addb
andb
mov
mov
pop
mov
push
pop
test
mov
mov
jb
mov
in
sub
cmp
pop
repnz
mov
lcall
in
adc
sub
fnstenv
pop
pop
sbb
and
mov
push
pop
scas
sbb
jmp
xor
out
imulb
jo
pop
push
add
in
add
or
cmp
mov
push
xor
inc
je
sub
loop
gs
test
outsl
fldpi
xlat
shlb
dec
cli
mov
in
enter
mov
imul
or
dec
adc
addl
xlat
add
mov
lret
or
xor
out
pushl
jbe
enter
cwtl
insl
test
cltd
jecxz
mov
adcl
sub
icebp
add
cwtl
sbb
sarb
mov
outsl
movsl
and
push
jno
sub
inc
push
push
cmp
mov
push
loop
sbb
stos
movsb
test
testb
nopl
mov
mov
adc
inc
mov
arpl
scas
jae
adc
andb
fwait
mov
or
xlat
push
push
insb
lods
sub
hlt
sbb
cmp
ror
xchg
mov
pop
mov
sub
push
sbb
sub
cmp
add
sbb
push
jns
mov
test
ret
inc
repz
shlb
mov
in
mov
cmp
fiadds
shr
add
inc
insb
jl
mov
test
pushf
and
sar
popl
pop
test
shl
inc
jle
cmp
xor
mov
adc
push
jle
loopne
into
scas
rclb
add
inc
int3
ret
and
jb
cmc
roll
popf
push
add
sti
sbb
xchg
rolb
or
mov
popf
jbe
lret
push
mov
outsl
cmp
out
pop
and
mov
dec
inc
movsl
aaa
repnz
loop
nop
and
mov
xor
aaa
imul
sbb
pop
es
cmc
addr16
dec
push
and
addl
adc
roll
test
sahf
or
sbb
pop
adc
push
imul
loop
inc
or
sub
movsb
sub
gs
jno
sub
inc
push
push
cmp
mov
push
loop
sbb
stos
movsb
mov
inc
cltd
aam
es
gs
inc
pop
mov
lahf
pop
and
add
mov
arpl
scas
jae
adc
andb
fwait
mov
or
movsl
push
push
pop
xchg
out
mov
jl
pusha
add
mov
xor
in
push
adc
je
loopne
pop
push
es
mov
out
shlb
add
outsl
sbb
daa
inc
addl
insb
inc
lcall
lret
addl
filds
xchg
push
repz
dec
ds
mov
jns
or
ret
push
push
xchg
or
enter
sub
test
loopne
pop
ret
lahf
enter
adc
xor
xchg
add
into
pop
dec
insb
push
loop
adc
pushf
outsl
rol
or
jmp
or
inc
mov
lret
hlt
push
cmp
stos
inc
jmp
addr16
cmp
in
inc
inc
jl
out
pop
mov
push
roll
stos
js
adc
fmuls
xor
add
scas
pop
ds
mov
or
mov
jo
js
hlt
repnz
lahf
aam
mov
mov
inc
sub
cwtl
cmpsb
mov
daa
sbb
rolb
push
add
icebp
in
push
and
addl
shlb
or
sbb
in
cld
inc
xor
cmc
xor
enter
mov
add
sub
jl
sbb
pop
jne
xchg
and
rcrl
mov
imul
sbb
stos
pop
jle
lods
orb
jae
push
sbb
test
mov
mov
cmp
daa
and
lock
or
lock
lret
mov
aad
into
push
aas
mov
iret
std
xorb
jecxz
push
xchg
ds
lds
sub
movsb
push
cmp
outsb
fstl
fimuls
jl
dec
nop
cltd
iret
xor
and
and
or
stc
push
dec
add
dec
sarb
enter
cld
dec
cwtl
mov
push
fldcw
aam
mov
add
adc
mov
xchg
gs
jo
cwtl
fldcw
incl
push
xchg
pop
ljmp
ret
mov
sub
jo
xchg
pop
out
mov
rcll
jmp
jmp
xor
sub
push
sbb
mov
sbb
xor
lcall
and
push
mov
cmpsb
icebp
and
loopne
sub
dec
ret
jbe
pop
dec
icebp
inc
outsb
stos
pop
sbb
jp
or
or
push
xlat
ficompl
pushf
jne
fsubrs
sub
pop
mov
sub
mov
adc
add
inc
pop
xor
es
xor
scas
mov
js
loopne
aas
sbb
or
rcrl
xchg
jns
inc
addl
repz
fs
or
lock
mov
sub
inc
insb
aad
mov
and
cli
and
jno
arpl
or
in
or
push
jns
data16
pusha
fcmovu
leave
jnp
inc
and
call
push
add
std
loope
pop
pop
je
and
dec
inc
dec
out
jl
fildl
cli
gs
cmp
cmp
dec
push
jmp
add
and
std
pushf
mov
or
cmp
sbb
push
out
mov
push
ljmp
inc
and
out
mov
push
dec
clc
inc
push
push
mov
pop
aaa
or
xchg
jmp
movsl
into
add
dec
jl
mov
cwtl
popa
sub
bound
test
jo
xchg
pop
out
mov
inc
cli
sbb
inc
jns
sbbb
fisubrs
pusha
mov
inc
cmpsl
pop
inc
push
jle
mov
xor
cmpsb
push
xchg
inc
xor
jecxz
rclb
xor
sti
and
stos
mov
invd
sbb
sub
lea
mov
scas
pop
ds
mov
popf
stc
rorl
jo
ds
xchg
adc
fcmovb
lods
es
test
cmp
jmp
repnz
or
push
adc
test
lahf
cmp
mov
lods
mov
jg
add
out
add
xor
inc
pusha
xorl
mov
pop
int3
inc
jnp
dec
in
sbb
lahf
lret
fsubl
popa
push
mov
mov
std
and
mov
les
sbb
sbb
into
cmp
stc
call
ret
xor
in
cld
push
sub
xor
mov
call
jl
jp
inc
cmp
xchg
imul
gs
add
mov
sub
mov
add
sub
cmp
adc
sub
fnstenv
pop
pop
sbb
and
ja
aaa
sub
sub
outsb
ret
push
xlat
ficompl
movsb
jne
shlb
add
pop
mov
sti
xchg
jmp
adcb
mov
jp
imul
add
xchg
fwait
cmpsb
xor
mov
sub
int3
pop
pop
xor
shufps
lcall
cmp
xchg
stos
mov
addl
or
mov
stos
lods
enter
out
enter
stc
sub
jecxz
mov
push
ds
addl
pextrw
xchg
sarb
enter
xchg
sub
mov
xchg
ds
sub
cld
sub
inc
shll
popf
mov
test
push
or
roll
xor
adc
xchg
insb
outsl
popa
and
shl
or
flds
test
xchg
icebp
pop
xchg
mov
jg
inc
inc
lret
push
mov
cld
fistpll
lock
push
xchg
sbbl
in
and
xor
add
or
lcall
add
mov
mov
leave
sbb
mov
mov
or
lock
cwtl
pop
sub
outsl
and
fiadds
rolb
cltd
adc
clc
lock
push
or
ss
call
mov
adc
and
cmp
and
push
ret
mov
jmp
repz
dec
sbb
push
out
insb
aam
popf
xor
fdivrs
mov
insl
jns
dec
mov
out
lea
jmp
sub
lods
fiadds
sub
flds
sarb
enter
stos
test
rcl
mov
test
cs
or
inc
inc
int3
inc
aaa
add
mov
xor
scas
loop
cld
mov
fs
mov
inc
inc
lds
push
mov
clc
xchg
fnstsw
sbb
rolb
adc
pop
popa
dec
mov
nop
leave
ja
xchg
int3
ss
test
shrb
scas
mov
stc
xchg
sbb
cmp
mov
test
lds
cmp
enter
mov
lock
fcomps
movb
dec
sbb
js
pop
sub
jmp
xor
push
test
lret
imul
push
lock
mov
xchg
pop
sahf
scas
add
pop
push
inc
out
sbb
rolb
or
iret
fwait
jecxz
nop
and
in
inc
sti
xor
stos
mov
pop
dec
sbb
cli
pusha
call
pop
add
jmp
arpl
mov
jmp
ljmp
add
add
mov
and
push
jmp
nop
mov
lret
test
cmpsw
push
std
repnz
mov
jmp
inc
sar
lahf
in
mov
mov
lahf
add
add
jmp
xchg
test
jmp
mov
sbb
cli
stos
or
les
add
popa
jmp
sahf
jg
jmp
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
jmp
sub
mov
scas
dec
fsub
mov
inc
jmp
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
push
push
pop
jmp
sub
daa
aam
jb
inc
xor
jmp
jns
pop
insb
xchg
jmp
pop
mov
jmp
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
jmp
out
cld
test
or
add
addl
jle
pop
jmp
push
xlat
les
xor
cmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
inc
lcall
cmpsl
push
std
repnz
jmp
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
xor
push
push
mov
dec
cld
pop
pop
cmp
je
jmp
ja
dec
jmp
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
popa
xchg
popf
adc
sub
loopne
pop
aas
or
push
hlt
pop
jmp
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
pop
mov
pop
add
and
mov
push
push
test
xor
lea
lea
dec
mov
cld
pop
pop
mov
jmp
int3
adc
imul
xor
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
jmp
les
xor
cmp
dec
jmp
loope
hlt
jmp
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
jmp
push
std
repnz
sar
lahf
in
mov
mov
add
add
push
push
pop
jmp
insl
mov
popl
or
push
add
add
movb
flds
ja
dec
add
push
dec
jmp
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
popa
xchg
sub
popf
adc
loopne
pop
jmp
aas
jmp
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
fidivrs
cmp
xchg
pop
add
and
mov
sahf
jmp
setl
inc
pop
xor
shlb
jo
jne
jmp
push
dec
adc
xchg
jmp
adcb
jmp
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
xlat
push
hlt
sbb
fidivrs
pop
push
push
jmp
and
inc
push
nop
mov
lret
test
fsubrl
cmp
or
cmpsw
push
std
repnz
rolb
jmp
stc
ds
in
mov
mov
test
push
push
mov
jmp
out
sbb
cli
stos
or
add
mov
push
and
add
add
pop
xor
push
push
mov
mov
neg
inc
inc
cld
pop
pop
xor
jmp
jg
xchg
stos
fwait
cmp
jbe
in
push
jmp
dec
mov
sub
jmp
dec
outsl
jl
pop
mov
es
mov
add
jmp
cmpb
jnp
icebp
push
pop
add
jmp
mov
scas
dec
fsub
mov
push
not
rcl
inc
rcr
lea
neg
cmp
cld
pop
pop
inc
push
jmp
adc
loopne
pop
aas
or
push
clc
shrl
popf
cmp
pop
jmp
ss
movsb
or
push
das
sub
jmp
cmp
sbb
inc
out
aam
jb
push
jmp
mov
add
cmp
mov
jmp
pop
mov
pop
add
jmp
in
and
pushf
movsl
jp
mov
inc
add
dec
jne
jmp
mov
adc
mov
int
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
fsts
les
cs
pop
gs
mov
jmp
pusha
sbb
mov
cmp
mov
lea
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
aad
xor
imul
and
movb
out
jmp
and
sahf
jg
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
addr16
mov
cmpb
jnp
add
push
push
xchg
sbb
cmc
not
cld
pop
pop
pop
jmp
mov
scas
dec
fsub
mov
popa
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
jmp
out
aam
jb
inc
jns
pop
insb
xor
push
xchg
mov
mov
test
mov
mov
dec
cld
pop
pop
ret
