sbb
add
sbbl
or
jbe
jmp
ret
rcrb
dec
xchg
test
dec
insl
mov
sbb
mov
scas
push
int3
incl
jae
cld
jecxz
das
inc
ret
pushf
insl
sarb
daa
jmp
add
inc
xor
mov
fidivrs
je
mov
das
xchg
push
cmp
sbb
and
xor
sahf
icebp
cmp
rcrl
loopne
inc
dec
cmp
and
xor
dec
sbb
pop
movsl
stos
into
xchg
pop
xorb
dec
mov
dec
ret
in
dec
in
pushf
pop
lret
enter
js
lcall
xchg
das
subl
int3
dec
nop
jae
push
mov
fabs
xchg
inc
jmp
mov
inc
sub
cmp
int
jl
idivb
push
cld
mov
les
pop
sub
cmpsl
add
sbb
pop
mov
icebp
inc
xchg
or
cltd
ret
bound
sarb
push
inc
sbb
in
sar
movsb
jge
or
lods
dec
ret
divl
dec
ljmp
imul
and
sbb
gs
and
mov
sub
mov
out
sbbl
test
push
adc
mov
cmp
adc
imul
sub
cmp
and
mov
stc
sti
push
int3
mov
inc
dec
inc
mov
fstl
mov
xchg
xchg
push
jl
repnz
xchg
cld
cmc
cmpsb
adc
or
jae
scas
sub
sahf
mov
mov
xor
ljmp
sub
dec
es
mov
or
outsb
push
jbe
je
xor
test
pushf
lret
mov
sub
add
fnsave
mov
adc
jns
mov
cwtl
mov
mov
arpl
cmp
aam
iret
mov
daa
fsubrp
xchg
sub
je
xlat
mov
jne
or
lahf
mov
std
int
rcrb
push
mov
test
outsl
or
sahf
sbb
sub
arpl
sub
iret
insb
fdiv
jbe
std
imul
aaa
aad
mov
or
aad
in
mov
ret
jl
call
push
push
pop
aas
dec
scas
push
jb
sbb
cli
jge
pop
mov
inc
dec
int3
mov
ds
fldcw
dec
mov
jl
les
imul
aaa
and
sbb
adc
inc
fcoml
lcall
lods
divb
lea
push
fst
hlt
xchg
xor
sbb
mov
push
push
outsb
mov
mov
popa
scas
fs
icebp
jmp
sbb
lds
adc
push
push
xchg
mov
fmuls
adc
pop
mov
mov
xor
test
andb
mov
add
outsb
daa
pop
adc
cmp
push
movsl
call
mov
mov
jns
andb
mov
mov
mov
or
or
xor
jp
test
fwait
pop
sbbl
ljmp
loop
lods
push
or
fs
push
mov
mov
cmp
out
in
sahf
outsb
fistpl
divl
xchg
mov
cmp
push
iret
xchg
lock
clc
mov
cld
add
lahf
mov
mov
nop
or
xor
mov
cmc
push
inc
ss
cltd
cmp
add
call
pop
pop
xchg
pop
clc
push
push
adc
sbb
jns
sbb
test
pusha
cmpsl
insb
push
push
shrb
or
popf
jne
stos
cmp
sub
lret
lods
xor
xchg
sbb
xchg
cmp
push
out
dec
mov
cmp
mov
mov
in
cmp
adc
lahf
sbb
jns
sub
ss
test
cltd
cmp
pop
xchg
push
sub
dec
filds
lcall
dec
pop
pop
je
fstpl
add
push
add
adc
and
push
rcrb
mov
xor
imul
jp
xor
popf
idiv
std
lds
sahf
lds
xchg
pop
xchg
loope
cmp
sbb
and
insl
ljmp
fimull
loop
xor
inc
or
mov
ficomps
inc
sub
popf
push
loopne
sbb
mov
add
push
test
in
sbb
fwait
adc
jmp
incl
mov
enter
jge
seto
fsts
pop
imul
in
negb
xchg
int3
mov
jmp
xor
js
ds
pop
lods
and
fsubl
sub
sub
test
xchg
stc
jge
in
jmp
frstor
push
pop
adc
in
or
and
xor
fisttpl
mov
mov
notb
dec
xchg
push
movsl
aad
inc
jp
insb
sbb
mov
and
aas
shl
stos
aas
roll
mov
sbb
fists
dec
pushf
xor
cwtl
sub
fisttps
xor
cwtl
and
pop
out
or
push
mov
xchg
adc
fwait
jns
adc
pushf
or
add
setbe
xchg
pop
in
test
test
lea
and
testb
jno
xchg
cmp
out
repnz
rep
sbb
push
mov
sub
arpl
ror
jl
xor
pusha
and
or
imul
push
rolb
sub
mov
xchg
sbb
push
cltd
push
xor
xor
addr16
repnz
insb
pop
hlt
xchg
mov
faddp
loope
add
inc
arpl
sbb
push
adc
dec
add
shlb
cmp
std
adc
add
ret
lret
hlt
dec
xchg
sub
leave
mov
add
pop
in
push
sub
imul
mov
sbbl
stos
popa
fisttpll
dec
aas
fadd
jo
pop
mov
xchg
push
mov
test
cmc
lds
ds
mov
jns
imul
xor
shll
sti
cli
jae
mov
iret
xchg
mov
add
adc
mov
or
jg
xchg
dec
daa
cmc
jae
jne
mov
daa
es
stos
jns
xor
sbb
ja
dec
push
test
pop
mov
dec
jns
jne
or
jnp
stos
jge
adc
cli
push
mov
xchg
cld
cmpsl
dec
cmp
pop
das
rcl
insl
loope
int3
cltd
int3
ror
mov
lret
push
pop
jle
mov
jg
sbb
in
xor
fwait
call
mov
jnp
mov
push
rcrl
mov
mov
mov
int
mov
scas
imul
jp
lds
test
sub
hlt
test
mov
or
dec
xlat
ds
fwait
ja
and
sbb
sbb
aas
repnz
ficomps
mov
cmp
mov
cmp
add
xchg
cmp
call
cli
and
out
cli
mov
jns
cmp
push
adc
sub
enter
cmpsl
lods
fs
pop
fbld
inc
shlb
add
push
or
lret
rep
jo
movsl
pop
bound
push
addr16
test
pmulhuw
mov
dec
inc
or
popf
mov
aaa
xor
inc
bound
pop
cmp
xchg
push
addr16
lea
mov
adc
lcall
clc
lcall
stc
xchg
or
hlt
pop
pop
xchg
adcb
cwtl
out
and
flds
pop
nop
aas
push
dec
adc
ss
cltd
add
mov
icebp
jecxz
dec
jb
idivb
outsb
in
in
cmp
jl
movsl
in
mov
pop
dec
mov
rcl
int3
das
jmp
roll
sub
sub
mov
popa
dec
pop
push
mov
ja
pusha
inc
dec
pop
add
pop
sahf
xor
outsb
aas
xor
mov
mov
lahf
xchg
sbb
js
loope
cmp
mov
shl
ret
cmpsl
insl
call
je
leave
cmp
pop
cmp
and
movsl
adc
out
mov
sti
mov
insl
jge
xchg
xchg
mov
mov
iret
sub
pusha
cmc
cmp
jle
mov
push
adc
std
pushf
inc
mov
inc
icebp
ret
fdivrp
inc
push
sbb
or
jmp
inc
inc
xchg
inc
jmp
fwait
outsb
mov
sbb
addr16
cmp
inc
push
mov
lock
mov
dec
lret
stos
enter
scas
xchg
xchg
cmp
xchg
xchg
cmpsb
jl
test
imulb
xor
adc
mov
add
jmp
jne
mov
test
enter
movsl
les
jne
push
ret
cmpsb
sahf
addr16
jmp
stos
adc
xor
or
pop
inc
lcall
dec
das
andb
orl
mov
xor
xchg
scas
popf
inc
push
jp
mov
push
mov
bound
push
push
mov
mov
pop
mov
aaa
gs
frstor
js
cmpsb
out
and
dec
test
sub
pop
imull
cli
repnz
inc
sub
popa
and
push
or
mov
daa
cmp
filds
mov
mov
and
push
jb
int
pusha
inc
sbb
xor
pop
pop
sbb
mov
std
adcl
or
icebp
sahf
pop
ja
hlt
aam
xchg
mov
xchg
push
je
dec
cmc
repz
aam
out
mov
in
mov
iret
test
jl
xchg
sbb
cmp
inc
push
repz
insb
imul
pushf
clc
sti
inc
sbb
adc
call
push
jnp
imul
mov
dec
lock
mov
fst
dec
sub
xor
loop
jmp
testb
mov
mov
iret
lret
js
test
xchg
addr16
and
mov
sahf
negl
cld
or
das
push
popa
test
js
xor
movsl
jbe
test
mov
cmpb
xchg
mov
imul
inc
lock
xchg
jnp
inc
insb
out
lock
xchg
js
add
xchg
cs
das
inc
jne
adc
adc
mov
lret
push
filds
shrb
shrl
sbb
stc
in
filds
iret
mov
call
mov
scas
adc
cmp
mov
test
and
xor
jmp
mov
inc
iret
cld
movsl
pop
push
jmp
push
popa
shll
xchg
mov
pop
daa
int3
daa
mov
lcall
xor
inc
mov
addb
mov
hlt
imul
sbb
pop
pop
lret
push
rclb
arpl
or
cmpb
inc
mov
cmp
mov
inc
dec
mov
insl
repz
andb
mov
jne
clc
dec
adc
je
sbb
outsl
mulps
into
pushf
roll
testl
dec
or
dec
fs
mov
fsubs
test
mov
imul
adc
sbb
lea
push
in
jbe
cmp
add
fsubrl
xchg
cmp
inc
lea
pop
leave
mov
jmp
push
rcrb
mov
jg
jmp
push
adc
pop
jp
cvtps2pd
xorb
pop
loop
mov
loopne
inc
std
dec
and
jecxz
xchg
mov
jge
imul
iret
mov
mov
jp
push
sub
sub
xchg
pop
dec
ja
daa
jnp
leave
cmp
data16
jo
test
popf
shl
lea
sahf
iret
pushf
call
sub
inc
loop
adc
fistpll
xlat
mov
jl
fs
sahf
test
ss
xchg
mov
mov
hlt
push
push
adc
test
and
repnz
pop
bound
and
xchg
add
xor
popf
xorb
add
cmc
jnp
dec
jno
pop
xor
sub
or
inc
mov
add
pop
fstp
and
mov
cmpsb
stc
lds
mov
jb
mov
sbb
cmp
popf
ret
push
lret
popf
push
imul
pop
or
or
add
orb
mov
xchg
ret
sbb
dec
push
or
out
out
xchg
adc
movsb
and
fidivrs
adc
xchg
iret
fdivs
dec
or
shrl
jno
shll
jno
add
cmp
or
jbe
lcall
sbb
pusha
or
push
cmp
push
xorl
ljmp
jnp
and
adc
in
xchg
hlt
cmp
pavgb
sbb
stc
lds
sarl
jns
xchg
lods
jmp
pop
pop
ret
dec
stos
sbb
shll
adc
inc
adc
hlt
push
pop
aam
push
jge
repz
cmp
daa
and
gs
and
dec
out
cmc
call
push
lret
sbb
mov
xor
or
push
cmp
sbb
push
testl
fidivrl
lcall
xor
jbe
xor
push
push
loopne
push
pop
push
dec
inc
mov
aam
arpl
push
cmpb
jae
iret
jp
push
shl
inc
js
push
aas
stos
push
test
es
jmp
aaa
popf
rcr
push
lds
in
fidivrl
dec
sbb
mov
push
adc
lods
movsb
and
hlt
push
pusha
ja
jl
cli
dec
shlb
enter
adc
loope
call
mov
stos
push
push
dec
xor
inc
popa
daa
popf
or
out
fcomps
adc
add
jmp
sub
xlat
ret
inc
lock
inc
lea
sub
sbb
pop
fmuls
jne
pop
sub
movsl
push
dec
rorl
popa
test
mov
mov
mov
test
and
dec
test
mov
cmp
fdivrl
outsb
shl
daa
cmp
jnp
popa
fbld
sti
xor
pusha
inc
xchg
imul
xlat
xchg
fsubl
sub
outsl
pop
movb
mov
sbb
popa
mov
mov
mov
lahf
dec
imul
call
ds
and
xchg
ds
and
cmp
xchg
cmp
jbe
xor
xchg
outsl
inc
mov
jp
cltd
movsl
stos
xchg
movsl
push
not
js
or
arpl
push
and
xchg
lods
push
cmp
inc
loope
aad
in
mov
outsb
jb
testb
and
clc
push
push
mov
inc
sub
or
jno
lret
in
stc
add
cmp
mov
push
jle
pop
mov
add
push
adcb
xor
add
push
push
xor
inc
or
stc
das
dec
int
mov
rol
mov
sbb
and
xor
jae
hlt
mov
dec
cs
mov
and
xchg
dec
gs
lret
push
int3
adc
pop
mov
mov
cltd
rorb
xor
mov
pop
daa
push
jmp
cmp
cld
cmpsb
ficoml
test
nop
dec
je
fcmovnb
or
jp
pop
outsl
fisttpl
negl
mov
negb
je,pt
fimuls
add
xchg
hlt
xor
clc
flds
cwtl
ret
aam
into
loop
fadds
repz
shl
adc
push
addl
add
les
fisubrl
sbb
in
cmp
ljmp
dec
lahf
es
pop
push
mov
cmpsb
sub
ss
in
add
adc
repnz
adc
mov
in
xor
cmpsb
repz
mov
mov
cltd
push
mov
cmpsb
aad
push
add
and
movsb
pop
bound
adc
faddl
push
xchg
gs
loope
clc
scas
leave
ja
push
decl
es
jge
adc
xchg
shrb
mov
mov
adc
fistps
lods
xchg
adc
roll
lret
sub
mov
fwait
cltd
fcoml
pop
mov
dec
lcall
jo
scas
sbb
enter
mov
mov
dec
jno
popa
mov
scas
cli
dec
push
push
mov
push
jb
rorb
jo
jns
push
cltd
sbb
mov
stc
sub
dec
or
pop
dec
add
inc
sub
in
mov
jae
popl
cmp
dec
xlat
push
stos
out
dec
add
jge
adcl
pop
lods
cld
leave
or
and
divb
shlb
ret
sahf
sar
cltd
pop
mov
lcall
out
test
pop
rolb
scas
inc
cs
push
dec
loopne
xchg
dec
add
or
xor
std
cmp
addr16
cwtl
sub
adc
es
repz
or
jecxz
mov
add
movsb
push
dec
sub
das
xlat
loope
pop
xchg
lcall
mov
adc
sbb
cmp
push
test
mov
xchg
pop
push
push
lret
int
jle
loopne
cmpsb
mov
xchg
push
test
in
mov
cmp
pop
jb
adc
dec
pop
dec
mov
fimull
iret
mov
lds
ret
lods
cltd
cli
scas
insl
mov
aad
movsl
push
jbe
test
and
mov
outsb
stos
loope
push
insl
dec
and
mov
ret
adc
jno
cs
loope
lods
out
inc
mov
lods
mov
das
pop
je
stos
insb
out
out
push
mov
mov
mov
rcrl
mov
int3
cmpsl
push
pop
mov
dec
fsubr
jle
push
scas
pop
das
leave
cmc
insl
ljmp
cmpsl
loop
add
cmp
lock
and
cld
or
into
call
jmp
inc
ret
adc
pushf
cltd
adc
enter
fisubl
and
jl
add
push
sar
lods
out
push
popa
and
push
mov
call
pop
sub
jns
adc
mov
test
dec
jno
cmpsb
and
lea
push
int3
mov
mov
imul
add
test
adc
or
mov
push
adc
popa
xchg
das
test
lea
cmc
xor
inc
add
jns
inc
lret
xor
cs
add
cs
mov
fsubrs
ret
pop
ja
mov
xchg
jo
mov
jl
push
sbb
popa
mov
mov
not
inc
adc
or
push
inc
incl
or
mov
inc
fcmovb
pop
inc
jbe
mul
lea
jl
rcll
xor
sub
sbb
popa
cmp
inc
add
ficomps
mov
scas
dec
in
mov
dec
xor
add
in
sbb
lods
into
jmp
fs
pop
daa
adc
roll
cmp
fidivrl
stos
popa
push
scas
push
flds
aas
jge
xchg
ss
popf
mov
repz
pop
inc
mov
jmp
pop
adc
jmp
inc
dec
inc
cs
sub
add
and
lods
jbe
cmp
cmp
les
shl
sub
and
adc
and
mov
cmpsl
push
repnz
push
fsub
ret
lods
mov
aas
shlb
xchg
sti
cli
fmull
fsubrl
sbb
xor
add
mov
mov
pop
add
sub
sub
xor
aaa
mov
das
mov
push
push
push
cs
mov
mov
movsl
adc
test
mov
push
xor
push
inc
add
jmp
fmull
fcoms
fs
sub
xlat
and
push
xlat
hlt
inc
and
mov
xchg
mov
pop
xor
inc
push
out
mov
in
pop
cmpsb
sub
insb
lds
and
fwait
adc
bound
xchg
fsts
mov
jp
inc
dec
add
stc
jnp
xchg
xor
mov
insb
push
xchg
push
leave
xchg
push
dec
inc
rcrl
add
cmp
aas
xchg
fsubrs
jbe
dec
aam
inc
aam
mov
mov
in
std
sub
pop
cli
push
inc
xor
cmpsb
mov
sbb
sbb
xor
test
lret
or
jecxz
cmp
xchg
mov
sbb
outsl
hlt
mov
mov
xchg
mov
xor
or
enter
shll
or
ds
test
xchg
inc
cltd
rcll
cmp
push
dec
mov
sbb
test
add
arpl
int
iret
xchg
push
mov
push
fucomip
lods
sbb
lock
mov
xor
mov
lret
insl
mov
jle
cld
cmpsl
push
pop
inc
inc
pop
lahf
and
imul
insl
cltd
push
cmp
je
inc
outsl
pop
add
jecxz
push
scas
ds
add
inc
mov
arpl
adc
in
mov
lds
es
xchg
shll
and
xchg
imul
nop
push
xchg
lcall
pop
sahf
out
ret
test
inc
add
std
ja
loop
dec
int
cmp
push
pushw
lds
mov
cltd
push
fdivrs
movsb
mov
inc
lret
pop
push
jno
sbb
xchg
fsubs
sbb
push
ret
clc
std
daa
stc
push
push
loopne
sbb
cli
and
lret
fldenv
push
pop
xchg
jge
or
mov
ret
adc
cmpsb
repz
jno
rcrb
std
inc
mov
xor
outsl
gs
scas
out
lock
mov
out
outsb
add
nop
push
fcoms
shl
je
inc
push
jb
test
daa
sub
inc
mov
xor
sub
es
mov
lock
inc
mov
xchg
push
ret
add
inc
sbb
sub
stos
or
cmp
arpl
imul
jmp
dec
cwtl
jo
popf
rorb
inc
in
mov
scas
imul
outsb
in
out
pop
cmpsl
cmp
adc
jle
cmp
nopw
sbb
test
lods
push
outsl
xchg
iret
xchg
mov
addr16
jecxz
sub
xchg
imul
xor
sub
and
neg
ja
dec
enter
mov
dec
sbb
sbb
or
jns
enter
add
les
inc
lret
fsubs
pop
inc
mov
int
mov
in
cwtl
outsl
ljmp
dec
cmp
push
pushf
xchg
stc
push
dec
xchg
and
int3
dec
outsl
rorb
sahf
ret
out
sub
push
into
mov
shlb
pop
rolb
pop
in
nop
fdivrp
mov
push
cs
dec
inc
stos
mov
fwait
pop
arpl
cmp
dec
mov
in
lock
pop
fdivr
aam
sub
push
clc
add
dec
popa
xlat
pop
xchg
xor
notl
jae
sahf
xor
jmp
bound
jb
cmc
sbb
xchg
dec
ljmp
jl
and
repz
xor
ljmp
fisttpll
bound
or
outsb
jl
cli
mov
adc
mov
dec
mov
clc
mov
xchg
mov
mov
cmp
in
aas
and
sbb
pop
jae
inc
aas
push
les
mov
cmp
and
repnz
xchg
stos
adc
cmpsb
in
shll
inc
and
movsl
push
or
or
push
repnz
fmulp
out
insl
arpl
enter
popa
inc
and
jbe
sub
add
push
es
adc
adc
addr16
les
push
mov
addr16
adc
cmp
ljmp
lret
test
or
test
xchg
inc
lods
ret
pop
and
add
shlb
leave
xchg
mov
adc
mov
jne
aad
fwait
xchg
test
xchg
movsl
push
mov
je
mov
xor
enter
pop
pop
xor
sarl
jne
leave
ss
and
inc
outsb
inc
ret
sbb
fisttps
pushf
pusha
cld
or
ret
jecxz
or
xlat
mov
dec
jge
adc
push
out
sbb
push
fsubl
cmp
mov
aam
mov
ds
xchg
arpl
pop
push
push
adc
movl
cmp
jno
jmp
jnp
cmp
into
sbb
movsb
jb
xor
movsb
push
aad
popf
xchg
inc
mov
cmp
insl
nop
pop
jge
xchg
rclb
repnz
sbb
repz
aad
loopne
xadd
movsl
std
lds
pop
clc
outsb
xlat
leave
jle
xchg
sbb
ljmp
and
and
xchg
xchg
aas
pop
push
or
pop
adc
scas
test
dec
and
mov
inc
and
mov
jmp
addr16
lahf
or
xchg
insb
sub
xchg
cs
xchg
cli
pushf
inc
lret
in
pushf
cltd
stc
out
sahf
lret
sbb
iret
jge
stos
and
dec
push
movsb
orb
negb
mov
pop
arpl
cmp
insb
loope
jmp
push
mov
lods
push
repnz
push
pushf
lret
movsl
add
lock
in
pushf
std
or
xchg
sbb
push
push
scas
mov
and
adc
push
mov
push
imul
pop
addr16
fwait
add
cmp
fmuls
xor
in
aam
imul
dec
xor
mov
stos
adc
lods
mov
pop
pushf
or
aam
pop
inc
push
fsubrl
xchg
and
mov
inc
jnp
sbb
push
cmc
jo
xchg
ds
xchg
pop
mov
or
shll
fldenv
jne
ret
ds
es
ljmp
movsb
repnz
inc
mov
or
cmp
mov
rorl
stos
mov
ja
arpl
xor
add
dec
movsb
inc
push
int
push
insl
scas
adc
xor
mov
or
in
pop
push
inc
add
scas
sarb
add
pusha
jp
cmpsb
jb
repz
push
out
xchg
xor
lods
in
xchg
fsubs
out
fdivs
mov
call
pop
jne
xlat
pop
jno
mov
inc
sub
dec
sarb
test
pop
mov
adcb
pop
xor
add
shlb
xor
inc
mov
pusha
mov
popf
sub
enter
xchg
push
stos
pushf
outsb
sub
js
test
sub
dec
hlt
popf
addr16
push
push
data16
es
testb
into
ss
sub
mov
mov
cmpsb
pop
mov
lret
lock
inc
or
cmpsb
inc
sbb
inc
lods
stos
sbb
xchg
jmp
xor
jns
lret
jnp
lods
xchg
fs
movsl
jecxz
xor
rclb
pop
dec
dec
mov
aas
or
jl
addl
xchg
add
pop
inc
pop
mov
fisttpll
shlb
sub
sub
jne
or
jnp
je
mov
jle
fsubrs
cmc
ljmp
shll
jmp
inc
mov
iret
clc
mov
jb
inc
add
cld
cmp
cld
sarb
push
inc
outsl
ja
aas
hlt
mov
and
push
or
or
push
in
and
jle
cld
adc
in
std
ja
push
push
pusha
mov
mov
leave
push
test
xor
sbb
lods
jno
jle
add
jl
lret
fistl
shr
mov
add
mov
push
dec
mov
mov
cwtl
inc
daa
test
fildl
dec
add
call
jecxz
popa
xor
inc
mov
xchg
ret
xchg
fwait
leave
sbb
out
not
push
push
loope
push
or
mov
mov
jecxz
int
fldenv
rolb
lret
xchg
lret
cwtl
xor
push
add
mov
sbb
xchg
in
jg
xchg
push
pop
inc
mov
hlt
mov
mov
out
rol
mov
in
and
pop
das
cmpsl
shrb
iret
mov
sub
lcall
mov
sbb
call
add
mov
pop
addr16
inc
mov
je
outsb
dec
mov
aaa
adc
pop
mov
clc
xor
push
out
sbb
push
and
insl
mov
fnstenv
fwait
push
test
jne
jbe
sub
sbb
scas
sub
dec
insl
daa
cs
pop
cmp
mov
movsb
loope
mov
xchg
mov
push
jbe
cmpsl
hlt
or
arpl
fs
mov
cmp
sbb
push
xchg
mov
mov
scas
jl
insb
popf
stc
sbb
sbb
int
test
xor
sub
cld
sbb
jb
cmc
lret
test
and
dec
loop
fidivl
pop
lahf
mov
add
loope
xchg
and
notb
notb
cltd
and
mov
sti
or
popf
xchg
test
adc
cld
sub
push
out
cmp
cmp
ja
adc
iret
scas
and
jle
test
inc
subl
pop
mov
cs
int
movsl
xor
in
xor
in
cmp
mov
mov
mov
shrl
inc
aad
bound
fstp
add
push
inc
shlb
aad
data16
or
pop
mov
out
adc
sub
cs
or
inc
cmp
mov
rdmsr
arpl
stc
sbb
mov
ja
mov
cmp
xlat
test
mull
mov
data16
in
xor
cmpsl
lret
cmpsl
cmc
lahf
adc
mov
mov
je
ret
xor
ja
jecxz
sub
addr16
adc
xchg
mov
cmpl
arpl
fdivrs
inc
add
shlb
cmpsl
loop
adc
and
mov
fsub
jle
xchg
mov
mov
test
scas
adc
bound
cwtl
jno
and
push
mov
add
fisttpl
popa
stc
mov
sti
aam
sahf
fdivs
cmp
mulb
nop
adcb
or
cmp
jmp
popa
ja
insl
jg
push
add
jl
push
mov
subb
jo
inc
mov
fdivs
dec
ret
jno
sahf
into
jae
mov
movsl
sbb
push
popf
dec
push
sbb
inc
repnz
jl
lcall
add
xlat
push
repnz
sub
mov
jno
sti
shrl
xchg
test
jno
sub
and
clc
sub
leave
out
ret
adc
outsb
push
fdivrl
imul
fldenv
mov
out
es
fisttpl
out
push
fcmovnu
stos
call
movsl
pushf
or
scas
push
xchg
aaa
ret
lret
sbb
and
mov
or
inc
lcall
cmp
inc
or
xchg
and
pop
ja
push
mov
je
mov
in
loop
out
insb
cld
push
iret
int
call
sbb
pop
test
mov
xchg
and
push
pop
clc
int
call
pop
jp
pop
pusha
fisttpl
clc
pop
dec
out
xchg
fstpl
sbb
std
fisttpl
sbb
nop
stc
pushf
fdivp
fidivs
or
jmp
mov
notl
fstl
pop
fstpl
jle
mov
or
cwtl
das
cmp
mov
rorb
clc
rolb
jns
add
xchg
int3
lcall
sbb
lret
js
cmp
popa
es
je
inc
push
mov
dec
xor
pop
clc
fildll
out
out
add
dec
xchg
aam
sbb
add
push
shll
std
stos
add
mov
dec
int3
jle
add
shlb
add
mov
js,pn
jnp
mov
jb
pop
cmp
loope
mov
jb
fidivs
sbb
nop
addl
sbb
jg
mov
mov
sub
pushf
mov
mov
cmp
xchg
pop
mov
inc
gs
shrb
ja
faddl
movsb
fiaddl
aam
pusha
mov
pop
mov
push
adc
frstor
out
icebp
inc
lods
xor
jb
mov
inc
ds
or
cld
pop
ret
insb
cmpsb
jecxz
adc
lds
inc
pusha
fbld
popa
inc
lods
out
scas
in
mov
loope
inc
in
xchg
jb
out
daa
push
ljmp
lock
stos
repnz
rorb
in
add
and
mov
pop
xchg
aaa
push
or
mov
push
push
inc
jle
inc
out
sub
add
cmp
sub
xchg
mov
cmp
xor
leave
push
adc
xchg
lea
sahf
mov
sbb
xcrypt-ctr
cmpsl
pop
mov
call
loope
jecxz
ds
inc
mov
add
cltd
clc
push
loope
sub
out
fbstp
and
ss
mov
mov
ror
mov
inc
pop
ss
add
ss
out
jg
push
stos
scas
outsb
inc
sub
dec
mov
mov
fsubr
jl
jp
fbstp
out
xchg
call
mov
mov
xchg
sbb
dec
mov
jl
sahf
addr16
push
push
pop
adc
stos
xchg
mov
cmp
fnstcw
adc
nop
pop
stos
shrl
fildll
cmp
ret
stc
in
repnz
add
imul
adc
icebp
inc
ds
sub
xor
sub
pop
adc
xor
push
cmp
movsb
lret
incl
xchg
inc
push
mov
mov
mov
push
mulb
stc
jbe
leave
mov
jle
sub
clc
mov
jns
push
test
and
bound
mov
lods
jnp
pop
bound
decb
mov
cmp
cmp
xor
inc
repz
fildll
or
push
or
sbb
pop
cmp
filds
in
insb
push
dec
lahf
fs
test
mov
xor
pop
scas
sub
sti
cmp
orb
rep
stos
xchg
fisttpl
pop
out
fisubrl
cmpsb
xlat
cli
sub
pop
cltd
fwait
mov
inc
jl
add
mov
pop
mov
lock
test
pop
pop
jb
fs
push
or
es
test
js
xchg
iret
sbb
mov
lods
cltd
sbb
nop
xchg
sbb
push
cmpb
pop
and
add
push
inc
call
sbb
pop
dec
mov
mov
fs
insb
mov
imul
loope
jbe
neg
aas
sbbl
adc
insl
outsb
and
sti
jbe
jae
xorb
inc
stc
and
mov
push
pop
xorps
or
xor
pop
inc
insb
mov
fwait
cmp
mov
je
sub
sbb
cs
lds
add
dec
ja
dec
pushf
adc
in
pop
out
add
insl
mov
sbb
rcrl
lret
insb
lea
fimull
mov
dec
ja
iret
lret
movsb
xchg
push
js
aaa
jmp
out
mov
sub
fdivr
dec
loopne
in
add
bt
ret
jp
out
cwtl
jl
adc
cli
xchg
std
xor
stos
sub
scas
stc
dec
cmp
fstp
sbb
mov
dec
mov
enter
dec
sbb
adc
mov
or
dec
lods
and
repz
arpl
lcall
xchg
jmp
jno
lret
test
test
fidivrs
int
test
add
xlat
xchg
sub
mov
pop
shlb
cltd
ret
cmp
mov
push
xchg
lea
push
mov
cmp
loop
lods
pop
jge
scas
sub
mov
xor
xchg
aas
movsb
test
cmp
bound
cmp
dec
cmp
add
jo
push
inc
stos
xchg
sub
imul
push
mov
cmpsl
xchg
subl
lret
test
lods
pop
fldcw
outsb
inc
push
sub
mov
shlb
inc
hlt
pop
decl
inc
andb
fdivl
pop
mov
es
dec
xchg
pop
sub
mov
cmc
int
ret
insb
jbe
stos
out
addr16
sar
loop
xchg
iret
mov
sbb
xor
int
data16
mov
mov
xor
jg
add
mov
pop
addr16
xchg
out
sbb
loope
fwait
lcall
push
dec
icebp
enter
mov
lcall
sbb
or
and
lock
data16
mov
fimull
mov
mov
adc
dec
out
mulb
mov
push
sbb
aaa
mov
mov
jmp
std
daa
push
mov
in
icebp
or
push
jno
xchg
std
xor
into
xbegin
add
scas
cmc
xchg
mov
xor
add
adc
push
mov
push
out
adc
adc
movb
loop
mov
fdivrs
dec
lret
into
inc
dec
ffreep
outsb
push
mov
or
loopne
and
scas
sub
cmp
movb
jg
cmp
fdivrl
ljmp
jbe
or
outsl
nop
mov
jmp
lahf
mov
push
aas
in
iret
pop
pop
std
inc
mov
sarl
mov
pop
sbb
js
or
cwtl
or
shlb
inc
push
fs
mov
mov
popf
addr16
pop
jnp
loopne
ret
lahf
jecxz
test
add
into
fistps
setle
and
xchg
jle
add
lods
mov
pop
ljmp
enter
sti
adc
stos
or
mov
jle
jno
call
xchg
jl
mov
push
out
cmp
aas
jg
mov
dec
dec
hlt
fwait
insl
icebp
mov
in
mov
lcall
mov
test
sete
inc
outsl
sbb
pop
sbb
or
in
cmp
fcompl
testb
insb
mov
clc
in
loop
mov
jmp
cwtl
dec
stc
movsb
les
lcall
aas
jae
in
mov
repnz
add
and
loop
std
xchg
fwait
pusha
or
stos
inc
push
add
jne
cmpsl
repnz
xchg
jo
cld
xchg
jg
push
stos
adc
addr16
pop
outsb
push
arpl
pop
mov
leave
test
cmp
and
or
mov
shlb
loope
loope
insl
dec
clc
sub
inc
mov
jb
arpl
int
lret
sub
push
push
xor
scas
push
aam
add
dec
add
and
dec
cli
out
insb
arpl
sbb
es
fsubr
xor
leave
mov
cmp
push
popa
xchg
or
mov
jne
and
xchg
pop
mov
lret
shll
jae
out
sub
or
cmp
xor
inc
cmp
cli
mov
add
mov
adcl
inc
or
dec
pop
mov
leave
adc
mov
roll
or
cmp
adc
das
dec
aad
and
mov
mov
xchg
xlat
pushf
ror
cmp
fnop
outsl
jbe
and
cmp
aad
jg
fildll
mov
stos
daa
insl
push
sbb
jbe
or
push
xor
in
adc
mov
xchg
sub
xchg
mov
sbb
outsb
pop
jge
cmpsb
enter
xchg
xchg
push
jbe
mov
xor
inc
test
cmp
aaa
add
lock
pop
adc
jb
ds
in
fiaddl
out
lock
lods
inc
rcpps
mov
mov
inc
mov
adc
xor
call
sbb
test
dec
in
leave
or
and
popf
mov
icebp
xor
dec
add
jno
pop
ret
add
push
ror
cmp
jnp
pushf
sub
sub
jnp
cltd
mov
and
sbb
mov
je
out
adc
mov
gs
in
pop
fldenv
loope
jl
mov
xlat
mov
pop
adc
jecxz
mov
and
push
add
ljmp
xchg
mov
out
loopne
push
add
xchg
adc
push
fwait
sbb
cwtl
bound
push
ss
sbb
int
shrb
push
insl
mov
mov
arpl
repz
inc
pop
call
mov
push
jmp
lcall
iret
inc
inc
das
sub
pop
loope
pop
or
sub
jb
rol
xchg
jb
jg
imul
int3
jmp
and
jns
cld
jl
sbb
fmull
ss
aam
pop
test
inc
fimull
sbb
and
repnz
cmpsb
lea
call
sbb
push
pop
mov
mov
inc
lds
ret
xchg
fcmovnb
ljmp
outsl
stos
mov
loope
adc
ret
inc
loope
jmp
mov
mov
push
out
jle
add
adc
jge
adc
das
mov
cmp
add
shlb
lock
loop
pop
enter
sbb
sbb
ja
lahf
bound
lock
adc
test
mov
jbe
into
xchg
pop
scas
outsl
int
fdivrl
sub
lds
clc
popf
adc
cltd
xor
out
mov
addl
mov
jns
sbb
imul
push
icebp
pop
in
sub
arpl
add
mov
and
fwait
push
nop
push
stc
mov
inc
fsubl
sub
sub
cmp
pop
in
lock
or
pop
mov
push
or
imul
sub
daa
adc
fs
rorl
push
shl
loope
mov
test
test
outsb
push
lret
add
mov
pop
or
in
xchg
pushf
dec
inc
scas
add
fwait
mov
mov
iret
xchg
adcb
stc
scas
lods
int3
and
jg
jne
jmp
mov
mov
mov
mov
xor
mov
jno
movl
mov
jb
in
or
jmp
pop
sarl
movsl
pop
fwait
mov
inc
cmp
cmp
push
outsb
add
xor
inc
fcomp
or
popl
push
test
sub
shl
sarb
or
xchg
daa
lods
or
ret
pop
pusha
or
push
cmp
fstpt
lret
shlb
int
and
and
inc
inc
rcrb
call
xor
shrd
jne
push
mov
lret
push
xchg
loope
out
int
loope
ds
add
add
loopne
inc
sub
pop
test
out
imull
pushl
lcall
shll
aam
sub
jg
enter
or
rcr
shll
scas
insb
mov
lods
pop
in
or
pusha
test
roll
push
ds
es
mov
shll
xchg
leave
bnd
bnd
pop
loopne
mov
mov
cmp
inc
mov
sti
push
mov
pop
ljmp
subl
dec
dec
aas
testl
sub
fdivrs
push
or
jecxz
mov
mov
out
clc
jnp
ficoml
mov
or
or
inc
push
push
in
sub
ljmp
inc
int3
sbb
dec
int3
mov
imul
mov
outsl
sbb
out
inc
push
jg
mov
adc
stc
push
cmp
shrl
ja
push
mov
jnp
daa
lds
xor
lock
fisubrs
fnstcw
rorl
test
lock
fisttpll
nop
rolb
je
pop
imul
cwtl
xchg
inc
lret
cmp
xchg
loopne
xlat
inc
rcll
lret
xchg
daa
add
sub
mov
push
cmp
btc
aas
xchg
std
cmpsl
lcall
adcb
sbb
dec
hlt
data16
cmpb
stos
jmp
int
sub
xor
stos
xor
pop
shrb
adc
loop
nop
iret
mov
dec
push
shr
inc
xor
push
pop
call
mov
aam
in
std
div
inc
test
push
push
inc
loop
dec
push
out
sarl
daa
shr
das
loope
inc
iret
xor
ja
push
cmp
mov
imul
mov
pop
sbb
aas
dec
test
ds
out
pop
add
push
push
fnstenv
insl
or
arpl
int3
inc
or
icebp
out
shrl
ret
inc
jns
adc
push
mov
sarb
clc
add
aaa
sbb
std
testl
mov
add
dec
mull
cmp
pop
int3
and
jl
shl
mov
dec
adc
repz
push
mov
stos
mov
inc
clc
jmp
repnz
push
jp
in
cmp
sub
imul
xchg
rcr
cmpsb
mov
daa
sarl
lahf
mov
jl
push
lret
aas
hlt
pop
aas
xchg
fsubs
or
inc
xchg
mov
jp
sub
xorb
mov
imul
inc
or
dec
jne
mov
jnp
or
std
sbb
jnp
or
stos
push
shlb
push
sbbl
scas
add
idiv
faddl
dec
mov
in
mov
aaa
jmp
push
push
mov
enter
ja
jg
lods
cmp
add
out
jge
inc
and
mov
shlb
push
add
pop
mov
mov
jne
xchg
in
pop
in
add
out
mov
je
ret
stos
cmp
mov
xchg
add
xchg
out
test
test
lcall
test
fldl
push
mov
or
shrb
stc
mov
sub
pop
push
ret
enter
fmul
movsl
scas
jg
inc
cmp
enter
je
pop
adc
jl
sub
fcompl
mov
scas
int
pop
mov
mov
ja
or
sti
sti
aas
cs
mov
in
fwait
js
test
leave
cmp
push
insl
xchg
enter
lods
mov
dec
pushf
inc
notl
lods
dec
push
xchg
ss
mov
test
jno
test
or
in
cli
lret
mov
test
inc
adc
stos
insl
inc
mov
jmp
es
nop
xchg
xchg
inc
fiadds
xor
pop
mov
aam
jb
mov
notb
sar
push
sahf
cmp
fistpll
xlat
push
jl
dec
xor
aas
xor
repz
dec
jecxz
sbb
leave
repnz
jp
sbb
das
mov
cmp
and
pop
rorl
nop
dec
sub
cli
jno
sub
xor
ja
addr16
cld
bnd
cld
sub
scas
in
mov
loop
push
sbb
cmp
scas
inc
xor
ds
or
lock
pop
lods
push
les
lods
push
adc
add
dec
mov
xchg
cltd
jecxz
mov
xchg
mov
mov
sbb
and
nop
test
dec
test
cmp
sub
inc
movsb
jl
cli
stc
pop
mov
pop
pop
sbb
mov
adc
dec
shlb
jmp
mov
xlat
andb
mov
mov
loop
es
push
mov
pop
mov
sbb
mov
dec
or
pop
sarb
out
mov
bound
std
mov
xor
shlb
filds
mov
fdivs
jae
sbb
fst
xor
jmp
jno
lock
pushf
xchg
icebp
mov
xchg
repnz
sti
jle
cmp
xchg
shll
lahf
mov
lret
in
hlt
push
xor
mov
mov
dec
pop
sbb
lret
subl
push
ljmp
lock
xchg
mov
mov
cmp
mov
fwait
and
push
mov
sbb
jmp
jge
adc
loop
xchg
cmpsb
mov
xchg
call
je
push
in
lock
subb
mov
popf
inc
mov
mov
push
rolb
lahf
ffreep
xor
cld
mov
dec
iret
cmc
push
popa
inc
xor
ss
mov
loope
lds
pop
jcxz
lret
adc
in
pop
es
mov
push
dec
inc
shrl
sub
rcll
stc
cwtl
xchg
fistl
dec
mov
and
mov
test
sub
jmp
movsb
int
aam
cmc
sub
adc
in
insb
flds
push
shll
les
push
mov
sub
adc
sub
add
xchg
mov
repnz
jo
cmc
fiaddl
leave
leave
popf
push
mov
inc
cld
inc
jmp
aas
xchg
or
xor
pop
mov
jl
ret
insl
push
cmpsb
inc
inc
leave
adc
sub
inc
ret
sbbb
cmp
movsl
xchg
mov
stos
jbe
dec
ret
push
lahf
arpl
subb
sbb
jmp
rep
adc
sbb
inc
or
aas
les
push
rcrb
jge
add
popf
jp
push
aaa
dec
data16
fistpll
or
mov
insb
ret
fsubl
jns
xor
jbe
lds
push
adc
sahf
sbb
lcall
inc
jbe
sub
jae
pushf
and
jecxz
shlb
inc
inc
outsb
leave
aaa
pusha
out
stc
inc
mov
mov
pxor
push
cmp
ljmp
sub
call
xchg
out
pop
std
adc
stos
mov
jnp
jmp
cmpsl
and
add
mov
outsb
rcrb
xchg
call
pusha
xchg
lods
jle
test
aaa
xor
cmp
outsb
cld
ds
mov
sbb
and
jnp
adc
xchg
out
inc
xchg
orb
addr16
std
dec
adc
mov
lock
jmp
sbb
push
push
sbb
loope
es
jge
sarl
cli
mov
jns
jae
and
push
xor
mov
or
enter
cmp
cld
hlt
dec
pop
sahf
adc
jmp
mov
call
fisttps
adc
insb
dec
mov
in
addr16
add
lods
mov
cld
xchg
sbb
je
push
lret
and
rclb
sub
loopne
mov
mov
test
add
push
sub
dec
test
cmp
or
add
cli
in
in
sub
loope
xlat
into
pop
xchg
jmp
or
cmp
jae
and
repnz
inc
pop
test
in
jne
lahf
out
inc
xchg
popf
rcr
mov
inc
nop
loope
bound
and
cmpsl
ret
cmp
aas
cmp
jns
sub
xchg
and
repnz
pop
loopne
in
aam
push
cmp
jle
push
mov
fs
rorl
xchg
sbb
cmp
out
mulb
arpl
or
std
cmp
addl
mov
jb
pop
movlps
add
add
out
jp
dec
or
ret
sub
jbe
xor
addr16
hlt
cmpsb
movsl
inc
cld
scas
dec
push
ja
shrl
push
and
test
jl
cld
fldenv
mov
stos
std
das
ret
lock
inc
in
stc
mov
sub
sub
lds
cmp
pop
lock
enter
mov
mov
sub
inc
sbb
scas
iret
fidivrs
xorb
adc
xchg
sahf
or
mov
sbb
pop
cli
xor
jge
aaa
xchg
int3
jno
dec
ds
or
jbe
jns
mov
inc
imul
dec
test
sub
pushf
xchg
xchg
dec
dec
rorl
mov
out
jge
sbb
adcl
pusha
stc
pop
and
lds
dec
xor
test
dec
push
cmp
cld
sbb
inc
cmpsb
xlat
shr
push
into
sbb
dec
mov
or
es
dec
bound
insl
out
sbb
sahf
stos
dec
js
mov
jl
lret
adc
lsl
roll
jecxz
mov
and
fistpll
lock
repz
sarb
xchg
lock
scas
jle
test
jecxz
sbb
mull
inc
push
nop
leave
jae
jo
xchg
mov
enter
pop
ret
xor
ljmp
push
rcr
pop
dec
push
rcr
subl
push
sub
decl
and
or
jmp
xor
mov
movsb
enter
popa
icebp
jge
push
scas
popa
dec
nop
scas
add
insb
call
shll
mov
incl
push
mov
in
mov
jp
test
iret
pop
push
pop
inc
and
jmp
ds
lahf
imul
cwtl
xor
mov
add
mov
dec
aad
insl
lret
push
fs
test
adc
je
stos
leave
jp
ss
stc
add
jns
jae
int
add
mov
ret
fidivs
jne
jbe
roll
pop
sub
xchg
sub
pop
push
je
xor
add
adc
popf
adc
dec
ret
sbb
arpl
pop
bound
xor
add
and
lods
xchg
lods
sub
sbb
push
dec
sub
dec
loope
aaa
xlat
popf
test
cs
dec
xor
sbb
dec
mov
xor
push
int3
cwtl
mov
insb
les
sub
pop
sub
lods
rorl
xor
mov
loopne
sub
sbb
leave
test
aaa
mov
pop
push
jbe
cli
pop
xchg
or
jnp
inc
scas
iret
mov
xchg
addl
inc
lahf
pop
aam
lds
stc
and
mov
mov
mov
cmp
fdivs
jmp
imul
mov
adc
cld
pop
int3
icebp
xor
loop
popf
dec
push
pop
stos
out
jge
jl
sbb
inc
xchg
xor
add
lock
bound
mov
mov
fstpl
adc
out
les
lock
ds
sbb
daa
pop
jg
jnp
jns
popa
test
lret
pusha
inc
mov
push
das
mov
rcll
movsb
pop
imul
mov
mov
movsb
scas
or
pop
cmc
and
ret
sbb
sub
dec
pop
test
dec
xchg
jbe
adc
inc
mov
mov
dec
push
pop
adc
mov
inc
dec
sub
mov
scas
and
loopne
pop
cwtl
sub
pop
orb
in
and
loope
dec
xchg
xchg
cmp
int
sub
cmp
pop
xor
notb
into
push
adc
add
sub
xor
ret
jae
dec
adc
mov
or
js
inc
push
adc
sbbb
sub
fstl
dec
outsb
push
fisubs
mov
xorl
dec
inc
cmpsl
scas
dec
mov
jbe
inc
out
cmp
aad
sbb
scas
mov
mov
test
xor
leave
jge
lods
and
dec
mov
out
mov
push
scas
dec
adc
jg
and
lret
jbe
aas
mov
add
pop
inc
test
push
popf
mov
pop
pop
dec
popa
popa
sub
int
sbb
or
xor
repz
lcall
cli
out
stc
cmp
scas
jle
cwtl
cmpsl
push
or
mov
inc
dec
push
add
std
push
mov
aas
dec
loope
dec
xor
enter
movsb
xor
push
fisttps
hlt
clc
or
mov
push
dec
ss
shl
xchg
rolb
sbb
or
push
orb
or
cmp
insb
enter
jge
mov
sti
mov
xchg
mov
in
xchg
lock
out
adc
add
xchg
cmpsl
mov
cltd
movb
test
xchg
mov
adc
xor
inc
adc
cli
je
adc
rorb
pop
dec
push
arpl
inc
sbb
lods
jge
sub
mov
and
pop
or
aaa
xchg
in
fnsetpm(287
les
icebp
in
test
addr16
jge
in
sbbl
shll
stos
xlat
or
pop
iret
neg
sbb
fs
mov
adc
cld
cmp
push
fisubrl
cli
dec
xchg
inc
push
outsl
and
loope
cld
xchg
sbb
stos
icebp
push
lret
outsb
jne
call
jmp
cld
cmp
shll
mov
mov
cmpsb
jb
lock
in
adc
inc
outsl
fistpll
imul
pusha
dec
sti
mov
cld
cmpsb
rcll
inc
dec
cmpsl
int3
sub
xor
add
rol
jnp
lahf
in
xchg
loop
pop
push
jbe
fisttps
mov
or
sti
pop
daa
enter
push
jno
je
repnz
pop
inc
ds
xor
test
add
inc
sbb
lods
out
ljmp
mov
push
in
xchg
loopne
int3
add
cld
xchg
jb
xchg
xchg
and
es
std
sbb
nop
push
int
sahf
std
jp
cmc
movsl
in
gs
hlt
gs
dec
cmp
and
fdivrs
xchg
sar
add
push
cmpb
or
sub
aas
inc
enter
mov
dec
sbb
test
push
fdivs
fildl
mov
into
rclb
pop
inc
pop
add
mov
jb
lret
pop
adc
aad
adc
adc
adc
jecxz
and
in
ficomps
cli
push
imulb
shlb
pop
jmp
lds
mov
jae
cmpsl
pop
hlt
daa
inc
mov
jbe
inc
pop
dec
jnp
loop
stos
repz
addl
mov
add
dec
mov
test
loopne
push
lcall
fsubl
pxor
mov
movsb
cmp
enter
inc
test
clc
pop
mov
jns
mov
in
mov
cmpsl
lret
jecxz
sarb
adc
addr16
mov
lock
popa
repz
popa
sti
mov
and
addr16
adc
cmc
xchg
jbe
or
nop
popf
lds
stos
repnz
outsl
dec
sarb
ja
cmp
inc
push
cld
mov
ljmp
inc
fsincos
dec
mov
sbb
mov
add
jmp
sub
insb
lret
popf
or
mov
lret
pop
into
sbb
and
and
ficomps
pop
lahf
jo
into
xchg
jne
mov
jae
jnp
ret
xor
cwtl
aaa
int3
sub
je
in
sub
sbb
movsb
cmpsb
jle
jbe
in
jg
iret
and
xchg
dec
sbb
ret
pop
cmp
inc
data16
pop
mov
les
out
cmp
fwait
mov
js
push
adc
and
jo
loop
rep
lahf
bndstx
add
push
cld
cmp
gs
enter
in
stc
test
fsub
xchg
insb
jns
iret
imul
js
imul
rep
xchg
adc
test
jp
test
pop
es
into
xchg
or
scas
fistps
dec
dec
dec
mov
jnp
repz
push
lret
jg
in
sar
ja
mov
stc
add
jns
dec
xchg
add
push
imul
or
adc
add
movsl
sub
add
lret
int3
push
or
rcrl
stos
incb
enter
mov
sbb
fadds
pop
lcall
adc
ret
pop
or
jmp
les
repnz
mov
imul
or
mov
cli
xchg
sub
pushf
into
ljmp
fwait
and
sbbl
mov
xchg
inc
pop
js
ljmp
or
xchg
imul
daa
sub
xchg
aas
pusha
add
or
jbe
cmpb
lret
jmp
dec
nop
push
loope
jae
push
jge
mov
lods
dec
sahf
mov
aam
adc
pop
add
push
xor
cld
jp
mov
push
adc
jmp
cld
or
mov
loop
add
mov
inc
sbb
dec
cwtl
shlb
aaa
cld
xor
push
icebp
pop
inc
push
test
cmp
add
sub
jl
pop
aas
adc
hlt
loope
add
xlat
push
pusha
fdivr
dec
xchg
outsb
mov
flds
sub
sub
repz
das
aad
movsb
loopne
push
pop
cmp
jl
or
popf
mov
xlat
notb
lock
divl
sbb
xlat
ja
sub
xchg
in
mov
lods
aaa
dec
xchg
test
push
xchg
xchg
jge
or
mov
push
fldenv
movsl
dec
aas
test
gs
shrl
outsb
rcl
sarl
movsb
inc
mov
je
mov
dec
fstps
test
inc
mov
out
cli
xchg
in
iret
clc
das
out
add
inc
inc
js
js
in
dec
push
test
aam
femms
pop
fucom
scas
dec
mov
jns
inc
shll
movsw
ret
dec
inc
pop
cmp
outsb
mov
aaa
clc
in
icebp
cmp
addr16
sub
mov
lahf
xchg
jns
lahf
mov
dec
add
insl
cli
out
mov
add
popf
adc
movsb
mov
rep
cmp
rcll
mov
xchg
mov
pop
lods
roll
popa
cmp
xchg
bound
enter
push
lcall
lret
loope
and
cmp
icebp
pop
xchg
mov
xlat
imul
mov
xor
mov
lea
insl
int
aad
add
repz
sbb
in
sbb
add
js
sarl
sarl
test
cmp
cmpsl
sub
out
xchg
stos
xor
dec
test
out
int
dec
mov
push
mov
push
test
mov
xor
jne
add
push
push
and
fdivl
cmc
xchg
ljmp
mov
mov
dec
adc
mov
roll
aam
fstpl
jo
dec
insl
decb
add
movsb
sub
sub
add
xor
mov
mov
insb
lds
in
in
sub
movsb
dec
sbb
cmpsb
xchg
repz
stos
fnstenv
test
cmp
add
into
pop
add
cmpsb
push
outsb
dec
sbb
sbb
mov
mov
push
sub
push
adc
sub
sbb
mov
inc
jnp
sub
inc
or
sti
lea
imul
cmp
push
adc
jo
aaa
scas
in
aam
int3
or
pop
je
in
fdivr
adc
std
in
pop
jp
adc
sub
fstp
stc
outsb
cld
inc
xchg
inc
mov
ds
ja
inc
xor
dec
imul
lods
popf
in
arpl
jne
sarl
jle
outsl
mov
test
xchg
and
mov
sahf
xchg
outsl
popf
xchg
popa
xchg
int3
add
mov
repz
and
fidivl
in
popf
cmpl
mov
pusha
sbb
add
pop
jae
mov
jb
es
sbb
cmpsb
mov
cmpsl
jmp
cmpsl
addr16
xchg
inc
rclb
fs
gs
cmp
add
stos
sahf
ljmp
xchg
adc
push
sti
mov
lds
jmp
and
in
sbb
mov
out
and
out
ja
fs
int3
fbld
inc
cmp
lret
test
pop
fidivrl
pop
xchg
stos
sbb
sub
dec
or
cmp
imul
mov
push
mov
enter
rcrl
xor
outsb
jp
push
mov
out
cli
xchg
inc
repnz
push
lock
adc
je
pusha
mov
jnp
cwtl
movsb
pop
ljmp
int3
rcrb
ss
cltd
test
inc
sub
mov
loop
repz
int3
sahf
or
cmp
cmc
sbb
popf
daa
addb
jo
fwait
rol
sub
push
xchg
xor
xchg
jb
pop
dec
addb
lods
leave
addr16
xchg
int3
repnz
pop
lahf
add
cmp
fadds
stc
mov
pop
push
cmc
sbb
inc
jns
adc
push
cmpsb
lods
jo
out
cltd
insl
mov
in
dec
mov
xor
negl
mov
pop
mov
jb
or
gs
add
scas
fucompp
sbb
mov
jb
jle
daa
dec
lods
mov
ffreep
aaa
jle
iret
pop
xchg
adc
mov
adc
sarb
lods
xchg
imul
pop
jp
cmp
or
adc
push
sub
mov
or
xlat
pusha
clc
lock
jae
xchg
xchg
or
repz
pop
lretw
mov
mov
scas
or
xchg
jb
mul
jo
lret
in
xchg
pop
jle
lahf
lea
pop
jmp
mov
out
dec
dec
in
xchg
mov
popa
add
jge
popf
xor
das
pop
push
icebp
lret
lea
adc
cs
jns
movsl
xchg
jmp
xchg
mov
popf
cli
scas
icebp
stc
mov
arpl
popl
popf
mov
ds
insb
push
dec
jge
dec
inc
imul
imul
hlt
pop
movsb
sub
cmp
sub
int
ss
xchg
shll
xor
fnstcw
fstl
lods
push
subl
push
fisubrs
insl
test
popf
sbb
stos
xor
addb
aaa
xchg
xchg
cld
cwtl
jmp
mov
popa
mov
inc
inc
popa
mov
ds
cmpsb
inc
lods
dec
mov
fwait
pop
mov
enter
lcall
xchg
scas
out
out
je
lds
sbb
cmp
lret
testl
inc
pop
dec
or
in
not
mov
fs
push
lods
xchg
jne
push
jbe
div
dec
call
jb,pt
in
cmp
test
addr16
ja
mov
mov
jne
out
pop
add
cmc
cmp
fistpll
test
push
insl
xor
call
ss
imul
cmpb
mov
adc
out
loopne
mov
mov
adc
push
jmp
xorl
shrb
cwtl
loope
adc
mov
cs
shlb
cli
aas
jae
hlt
fisubl
mov
sbb
push
push
and
push
pop
out
push
repz
and
jbe
cld
inc
sub
pop
xchg
dec
add
cmp
loopne
ret
mov
pop
test
sbb
into
les
mov
nop
push
mov
rcll
out
pop
push
sub
rcr
add
das
inc
scas
sti
lock
je
mov
dec
mov
repnz
stos
pop
push
sbb
int3
or
sbb
push
loopne
test
push
dec
sbb
sahf
int
leave
mov
xchg
sbb
ret
rcrl
jmp
aas
fsubrl
adc
mov
dec
lods
bound
pop
inc
or
pushf
in
dec
adc
xor
xorl
ficoms
jae
mov
out
out
lods
push
daa
mov
dec
out
mov
insl
sbb
cmpsl
add
adc
pop
cmpsb
sbb
mov
mov
addl
stos
mov
jno
mov
jmp
in
xchg
and
mov
dec
sub
mov
push
out
or
sub
cmpb
sub
jmp
xchg
out
inc
ja
mov
lock
cmp
fucomip
data16
arpl
sbb
xor
arpl
sti
les
lea
shll
mov
pop
mov
sbbb
pop
pusha
adc
inc
mov
addr16
cmp
push
mov
mov
mov
je
cmpsl
rcl
push
or
dec
out
fdivs
rorb
decb
or
adc
mov
pushf
xor
xchg
or
inc
call
fidivs
imul
mov
and
aaa
dec
mov
movb
add
nop
loopne
fbld
cld
sbb
sub
add
fimuls
lock
cmp
xchg
mov
arpl
xor
stos
mov
push
testl
std
cmpsl
pop
mov
cmp
das
mov
cld
mov
stos
stos
pop
adc
stos
popa
fcmovu
jbe
mov
lcall
xchg
xor
dec
adc
les
sub
or
adc
data16
push
sbb
pop
sarb
mov
sbb
xor
and
mov
push
fs
xor
dec
jb
jge
adc
cli
in
sub
or
mov
cmp
stc
mov
sbb
pop
xchg
mov
jbe
pop
jge
test
and
cmpsl
push
jns
lret
xor
clc
inc
dec
in
cmp
jae
adc
out
je
sub
push
out
xor
push
pop
push
daa
mov
dec
xor
movsb
xor
int3
ret
pop
mov
push
mov
popa
sbb
cmpsl
negb
adc
cmpsl
out
xor
fwait
pop
enter
idivb
popa
dec
inc
pop
aaa
mov
pop
inc
xchg
adc
dec
jo
cld
arpl
sbb
dec
cwtl
push
cmc
push
ss
pushf
dec
sub
mov
loop
loope
fisttps
loop
or
push
dec
mov
inc
cltd
loop
mov
inc
mov
push
pop
sub
push
test
loope
insl
in
jo
and
mov
int
xchg
adc
sbb
es
xor
sub
stos
jb
mov
cli
jae
pop
add
inc
and
jmp
lods
addr16
push
test
in
or
xor
pop
push
out
push
push
add
iret
mov
xchg
xlat
mov
dec
in
mov
imul
cmp
fcmovnbe
ror
daa
lret
imul
dec
xor
es
scas
mov
push
int
pop
sbb
mov
lcall
cs
cmpsb
adc
test
loopne
dec
jl
in
push
xchg
nop
bound
addr16
xchg
rcll
or
es
dec
mov
call
outsb
push
dec
mov
fildl
jge
push
std
in
cmpps
ret
inc
scas
inc
out
sahf
pop
mov
or
push
sub
fstpt
push
sbb
fists
add
pop
js
cs
add
mov
cmp
mov
rcrl
xor
sahf
cmpsb
imulb
pop
jne
aam
ja
cmpsb
lret
pop
xor
fwait
or
fisttpl
inc
mov
int3
shll
lcall
cmova
popa
cmpsl
rcrb
out
cmp
inc
pop
mov
dec
loope
fdivrl
cmpsl
into
mov
popf
inc
mov
push
leave
mov
repz
lods
jl
jne
xchg
sti
repnz
mov
call
mov
add
scas
adc
imul
ror
pop
and
pop
int3
outsb
mov
lret
mov
jne
cwtd
pop
add
jge
in
push
adc
repz
push
xor
xchg
sub
out
jmp
test
and
mov
fisubs
in
lock
xchg
sbb
jb
shll
stos
or
sbb
rorl
or
or
nop
xchg
mov
or
iret
orl
popa
sbb
dec
clc
rcrb
popa
adc
loopne
mov
sbb
repz
sbb
jnp
sti
or
adc
pop
xor
sbb
dec
repz
pop
push
jbe
cmp
sub
cltd
ss
and
lcall
stc
clc
mov
lods
scas
inc
jno
adc
push
adc
mov
cmp
pop
ljmp
push
xor
sub
sti
dec
nop
jge
mov
xchg
push
in
outsl
xchg
and
lods
jne
jge
repz
addr16
ret
popf
fiaddl
es
out
fimuls
mov
add
xor
popa
jnp
cmp
push
insl
lods
jle
notb
push
jb
imul
jecxz
pop
sti
xchg
dec
adc
addb
ss
mov
mov
xor
lret
xchg
test
xor
jo
push
sub
outsl
xchg
icebp
outsb
rorl
push
test
add
add
imul
cwtl
mov
cmpsl
test
gs
push
test
xor
daa
mov
dec
inc
sbb
lret
hlt
and
cmpsb
cmp
bound
iret
jns
inc
lret
cmpsb
and
imul
fiadds
mov
shl
das
pop
clc
cmp
vmovdqu
out
xchg
add
popf
sub
lods
test
outsb
lcall
push
sub
lods
mov
mov
stos
cmp
mov
jmp
and
mov
data16
int
xor
js
push
stc
adc
fs
sub
mov
stos
xor
cwtl
mov
mov
daa
das
push
scas
push
and
scas
sbb
jmp
inc
add
jb
cmp
stos
insb
jg
data16
fldl
hlt
in
pop
mov
push
lret
inc
test
sarb
adc
jae
inc
lret
adc
or
std
sub
cmp
pop
xchg
xchg
popf
adc
or
cli
dec
or
xchg
adc
xchg
je
cltd
andb
xchg
cmpsl
adc
out
jae
mov
mov
mov
sahf
push
add
into
call
jbe
popf
rolb
or
mov
jecxz
xchg
cmp
gs
mov
and
pop
dec
loope
adc
push
push
gs
push
or
stos
mov
aas
cmp
and
arpl
loop
nop
mov
daa
mov
in
clc
sub
lcall
iret
ja
cmp
addr16
sub
fildll
arpl
jae
enter
out
shlb
repnz
movsl
sbb
jbe
cmc
andl
add
or
pop
sahf
xchg
repnz
xchg
mov
hlt
cmc
fiaddl
aaa
sti
out
dec
int3
stc
fidivl
jg
xchg
mov
rcrb
aas
jns
movl
inc
fdivs
mov
xchg
pop
jl
enter
add
mov
inc
jb
into
jo
mov
jb,pn
loop
dec
subb
add
cltd
jp
rclb
fwait
adc
in
dec
ret
mov
subl
mov
fidivs
xchg
cmp
sub
lock
movsb
enter
push
cmp
leave
ljmp
std
testl
fs
and
sbb
inc
out
mov
std
add
sahf
arpl
or
movsl
and
out
and
pushf
out
outsb
sbb
lcall
aaa
std
lods
inc
push
aas
adc
divb
out
dec
mov
mov
sub
lds
imull
push
fistpl
xchg
pop
ljmp
add
cld
and
ret
mov
sbbl
ljmp
aam
mov
mov
add
dec
sbb
insl
mov
in
lock
dec
pop
mov
or
ljmp
jecxz
imul
dec
std
ds
outsl
iret
shrb
aad
loop
adc
pop
cmp
std
mov
mov
push
mov
rcr
xchg
mov
out
cld
ja
aas
mov
inc
clc
pop
jg
dec
cmp
pop
and
mov
int
sbb
mov
ljmp
jno
jle
int3
imul
mov
int3
xchg
iret
inc
xchg
inc
pop
mov
daa
enter
or
jmp
xor
xor
ds
enter
pusha
imul
rcrb
cwtl
xchg
push
nop
and
out
fadds
adc
jb
inc
pop
push
pop
sub
roll
shrl
mov
gs
xchg
test
daa
pop
push
loop
xchg
adc
int
daa
test
sub
stos
jns
push
adc
stos
xor
aad
jne
cmp
test
dec
lahf
pop
pop
daa
xor
mov
outsb
imul
test
lahf
addb
in
pop
outsb
inc
int3
jnp
and
jbe
and
jle
or
jl
jl
lcall
sbb
xchg
mov
jecxz
cmpb
les
movsl
clc
pop
ret
popa
adc
loop
adc
stos
nop
push
jne
cmpsl
sub
in
ret
pop
xchg
mov
pop
adc
fistl
js
pop
and
add
rcll
mov
lock
jb
dec
push
jg
inc
xor
add
mov
ljmp
adc
cmp
repnz
or
dec
sub
jecxz
mov
mov
rcr
mov
adc
sbb
and
dec
xchg
or
lcall
mov
mov
test
sti
gs
mov
adc
jge
xor
gs
js
jge
inc
jge,pn
popf
xor
mov
je
pop
imul
out
push
inc
cs
mov
mov
push
adc
xchg
and
in
xor
xor
call
out
lcall
push
sub
mov
inc
sub
mov
cmp
insb
insb
jg
mov
pop
clc
iret
ljmp
sub
imul
add
ljmp
sub
sbb
sub
add
inc
leave
push
sbb
mov
xor
mov
sbb
fs
pop
out
cmpsb
test
jg
pop
shrb
shll
outsl
pop
sti
into
out
adcl
pop
fadds
cmpsb
jmp
stos
and
push
mov
popf
xor
icebp
ftst
push
jge
cmp
mov
inc
jns
je
xor
adc
sahf
test
dec
scas
jg
mov
sbb
ficoms
pop
je
cltd
jo
adc
jno
dec
scas
popa
inc
pop
add
ficomps
mov
cld
inc
inc
shl
xor
add
popa
flds
dec
dec
mov
pop
inc
shll
mov
sub
stc
loopne
mov
pushl
adc
fidivs
es
mov
lock
pop
mov
or
xchg
call
xor
sbb
jnp
push
or
xor
add
xchg
dec
mov
loope
adc
ds
insb
push
fwait
sub
mov
aam
dec
push
fs
outsl
and
lods
push
inc
scas
inc
nop
arpl
jb
xchg
pushf
dec
jecxz
mov
out
push
mov
pushf
leave
inc
ftst
fs
jb
jb
pop
sub
add
cmpsl
jne
and
sti
lcall
and
pop
jecxz
sbb
xor
lods
adc
nop
ret
xor
daa
adc
subb
mov
jmp
pop
aaa
jmp
xchg
mov
sti
movsl
push
int3
xchg
lock
jae
dec
xchg
insb
cmpsl
inc
addr16
mov
out
stos
sub
cli
mov
sbb
cmpsb
or
push
inc
and
out
mov
or
fmull
xchg
lods
mov
cmc
inc
mov
ds
scas
push
loopne
popa
jo
inc
push
int3
xchg
sbb
leave
pushl
mov
loop
ret
in
pushf
scas
adc
dec
push
nop
adc
pop
jge
sarb
in
icebp
jp
xlat
movsl
movsb
xchg
movsb
dec
lahf
or
xor
push
das
mov
mov
imul
insb
jecxz
pop
pop
movb
test
fsubrs
sbb
stos
push
jbe
cld
scas
or
push
ss
xchg
mov
subl
add
mov
mov
jb
clc
add
inc
lods
les
cmp
std
addr16
subl
pop
stos
sbbb
mov
jl
sub
sub
rolb
es
xchg
rclb
test
cmp
xor
shlb
add
mov
pop
push
push
les
adc
popa
cmpsl
add
mov
xlat
leave
orb
into
icebp
pushf
testl
jmp
or
lahf
jnp
rclb
test
and
in
and
sub
or
nop
xor
and
push
ss
cmc
adc
pushf
mov
xchg
bound
fstl
xor
inc
out
arpl
pop
inc
xchg
insl
inc
add
out
cmpsl
fimull
gs
dec
mov
cmp
lcall
adc
xor
scas
je
or
xor
inc
lcall
adc
add
repz
mov
jno
mov
ljmp
sub
sub
push
data16
iret
mov
stos
inc
lahf
jnp
loope
dec
sti
mov
xchg
adc
push
je
pop
add
mov
fwait
aaa
cs
nop
ret
sub
mov
add
loope
aad
xchg
dec
and
mov
add
push
pop
xlat
pusha
jae
lret
outsb
mov
mov
cltd
sbb
xchg
cwtl
xor
mov
outsl
cwtl
mov
ljmp
icebp
jp
movsb
sahf
pop
sbbl
push
mov
or
bound
add
pop
in
cmp
xchg
cmp
jecxz
cli
push
pop
jg
jno
xchg
iret
sti
mov
cmp
xor
xorl
loope
mov
nop
mov
cmc
aaa
popf
mov
mov
lret
xchg
cmp
push
orb
sbb
scas
testl
push
pop
xorb
int
dec
fidivl
mov
dec
jbe
mov
add
cli
ss
cwtl
xchg
fiadds
iret
insb
stc
jb
pushl
cmp
dec
fs
rorb
xor
gs
bound
ret
sub
in
mov
mov
das
xchg
cltd
outsl
mov
es
sub
xchg
and
jo
inc
pop
ret
mov
push
jnp
adc
ljmp
mov
adc
fmuls
adc
and
fdivrs
push
mov
movsl
mov
out
pop
xchg
sbb
and
jnp
out
xlat
pop
mov
loope
ret
push
ljmp
jp
pop
jbe
movsb
aas
lret
gs
add
mov
xchg
lretw
push
jno
jle
imul
out
adc
add
cmp
out
push
inc
push
and
push
mov
mov
adc
jb
call
rolb
push
mov
inc
pop
inc
xchg
push
aad
jne
xor
cmp
bound
inc
out
push
add
jg
pushf
cwtl
js
push
push
jnp
lret
or
sub
js
inc
sahf
call
fstpl
inc
adc
mov
cmp
mov
push
in
movsb
mov
stos
pop
add
ja
clc
xchg
repnz
adc
xchg
sub
jb
cmp
pushw
test
or
rorb
and
xchg
loopne,pt
jb
es
lea
jne
shll
inc
dec
mov
push
leave
adc
inc
mov
xor
mov
test
pop
ljmp
dec
and
in
test
call
data16
call
int3
and
idivb
aad
mov
push
test
fldcw
nop
loopne
mov
jp
cmp
and
push
jo
leave
mov
sub
push
mov
call
xchg
repz
jbe
or
sub
jp
push
mov
adcl
jg
dec
pop
xchg
mov
jo
push
das
and
imul
sub
mov
xlat
cmp
pusha
mov
es
stc
dec
mov
xchg
xchg
testl
jl
outsb
push
dec
lock
call
outsb
fdivs
xchg
xchg
xor
dec
nop
push
push
push
and
or
pop
ret
cmpsl
dec
mov
mov
fistpll
push
stos
add
or
adcb
jno
sbb
cmpb
mov
es
cwtl
fldenv
les
push
mov
sub
cs
adc
jmp
push
mov
adc
jecxz
cli
imul
xor
imul
lds
pusha
lret
ret
mov
rorl
imul
aam
xchg
sbb
inc
aam
sbb
push
lds
scas
inc
incb
cld
xchg
aad
adc
mov
xchg
push
lea
xor
push
sbb
insb
scas
les
xchg
xor
jmp
and
mov
out
movsl
shr
ljmp
scas
icebp
xlat
sub
or
mov
add
ss
inc
sbb
faddl
add
in
add
popf
cmp
jnp
pop
xchg
xchg
pop
adc
lret
sbb
and
mov
inc
mov
orb
jnp
or
daa
mov
dec
xor
addr16
dec
jne
and
cmp
outsl
xchg
std
iret
mov
sbb
dec
sub
insl
mov
out
pop
mov
add
test
sub
arpl
jae
pushf
jmp
js
das
out
inc
jb
or
sub
push
outsb
les
mov
xor
test
jno
cld
outsb
mov
int
fdiv
out
jp
cmp
gs
into
push
adc
lds
xchg
xchg
ss
push
lods
push
adc
inc
cs
push
daa
gs
cmp
test
pusha
push
or
stos
test
fdivs
movsb
ljmp
cmp
fists
cmpsb
cmp
or
or
hlt
jae
sbb
mov
dec
adc
xchg
int3
dec
test
jbe
arpl
nop
test
and
inc
mov
sub
daa
je
popa
sbb
pop
aad
mov
jge
test
cld
and
cltd
sub
testb
mov
fidivs
xor
pop
bound
cmpsb
sbb
xor
insl
push
arpl
lods
movsl
add
movb
jmp
int3
popf
push
xchg
lcall
fisubl
sbb
ficoml
fldcw
stos
inc
or
leave
dec
ficompl
js
cmp
inc
bound
mov
lds
cltd
test
out
xor
ret
xchg
pop
adcl
inc
cld
push
lods
in
dec
sub
stos
jl
ds
roll
mov
mov
mov
into
daa
xchg
fwait
jns
rclb
pop
jo
pop
into
std
pop
jo
mov
sbb
sbb
lds
xor
lock
sti
iret
push
push
adc
xchg
xor
xchg
insl
cwtl
icebp
inc
call
push
in
pop
sahf
cmpsl
xor
in
je
adc
stc
gs
inc
inc
dec
push
xor
and
out
add
fs
mov
adc
cmp
pop
leave
clc
xchg
aaa
rcrb
mov
aas
fmuls
ret
imull
xchg
add
mov
xchg
push
mov
jmp
arpl
mov
mov
inc
outsb
push
loopne
ljmp
xchg
mov
xor
push
jge
mov
mov
or
jne
jne
enter
sub
dec
test
jecxz
push
sbb
lahf
xchg
and
jmp
rcrl
mov
push
sar
mov
push
mov
xchg
mov
je
xchg
ss
xor
mov
mov
addb
daa
jae
jbe
xchg
mov
push
cli
or
mov
mov
sbb
ljmp
mov
inc
call
cmpsl
cmc
xor
popa
arpl
ret
mov
xchg
cmp
push
nop
mov
lea
ljmp
push
xchg
xor
push
pop
shrl
lcall
cmp
jmp
sbb
fsubrp
out
loop
cmp
rcl
ljmp
shr
rolb
xchg
adc
gs
ret
mov
mov
pop
ror
lds
mov
push
imul
in
andl
add
rcrl
inc
dec
cmpsb
test
inc
scas
xchg
js
mulw
je
fisttpl
je
das
ret
mov
movsl
repz
les
adc
cli
rcll
mov
das
out
inc
inc
fsub
jmp
stos
cmp
mov
pavgb
les
fldcw
imul
add
dec
fstl
xchg
mov
mov
jge
jecxz
shll
loope
aad
xor
shll
imulb
pop
ja
jmp
divb
fildl
or
cmpsl
mov
push
mov
jmp
lahf
loope
shlb
into
push
sbb
or
xchg
popf
dec
repnz
mov
jmp
mov
fstpl
mov
outsb
cmp
xchg
or
testb
out
jl
jl
andl
lods
daa
shl
add
dec
pop
inc
negl
adc
push
call
ret
sub
adc
cmc
cmpsb
dec
loop
out
and
mov
scas
shrb
pusha
clc
cmp
sbb
mov
frstor
or
fdivs
adc
inc
dec
xchg
insb
sub
push
cmp
push
xor
cld
mov
das
daa
jmp
jl
push
pop
dec
jno
xchg
in
xor
rorl
pop
stos
lea
adc
dec
add
mov
add
ret
push
sbbl
ds
jno
jl
outsb
add
ljmp
push
xor
movsl
push
js
xor
popa
pop
mov
add
cmpsl
movsb
adc
fsubr
bound
adc
pop
dec
mov
mov
shl
mov
enter
outsl
sub
mov
popl
xchg
inc
adc
jne
cmpsl
fwait
adc
push
or
fsubs
xchg
add
movsl
rorb
mov
pop
pushf
xor
outsb
sub
push
fwait
iret
jnp
lahf
cvtpi2ps
and
mov
pushf
adc
stos
sub
movsl
push
pop
shl
jmp
sbb
mov
cwtl
or
push
int
jo
cmpsb
fadd
dec
out
lds
ds
je
xchg
lret
stc
push
mov
push
mov
pop
rclb
xchg
lds
cmc
sbb
aad
les
insl
in
lret
fdivs
sbb
jmp
adc
inc
sub
icebp
enter
pop
scas
jecxz
rolb
test
xor
outsl
sbb
add
inc
lret
cs
int3
and
inc
rcll
cltd
iret
ljmp
into
xchg
xchg
hlt
aaa
xchg
lods
test
inc
sub
mov
xchg
xor
inc
inc
and
rorb
pushf
loopne
loop
lcall
dec
push
sub
cmp
pop
push
jne
gs
out
stos
lods
dec
jmp
or
cmp
xchg
mov
cmp
or
cld
dec
xor
sbb
sub
cmp
cmp
jmp
out
add
fisubs
aaa
or
ja
jecxz
aaa
lds
rcl
mov
cmp
jae
xor
out
mov
pop
jnp
fidivl
mov
sub
xchg
dec
les
adc
push
adc
push
push
jmp
stos
mov
cmp
fwait
lcall
scas
sbb
fcom
fidivrl
push
repz
mov
mov
pop
fmuls
lods
dec
cli
mov
sbb
shlb
push
lret
cmp
dec
pop
repz
jle
add
shl
repz
push
xchg
sub
lahf
rcr
and
add
stc
sbb
pop
xor
ljmp
adc
inc
adc
repz
jge
sbb
sub
lea
pusha
lahf
push
push
push
insb
cmp
sub
cmc
push
call
sahf
ds
sub
mov
mov
add
xor
mov
fidivs
dec
cmp
lds
cmc
lcall
inc
cld
add
push
stc
push
ljmp
inc
or
xor
push
inc
gs
roll
and
inc
add
adc
inc
adc
int3
mov
xchg
push
aad
test
push
outsl
jecxz
xor
loope
mov
call
xchg
or
mov
imulb
mov
dec
and
lret
mov
fwait
xchg
cmp
pop
mov
fst
into
in
sahf
test
fisttps
xchg
lahf
push
dec
cmc
or
into
cmp
xchg
hlt
es
xchg
push
movsb
je
push
pop
mov
adc
fistps
jb
xor
jnp
outsb
jle
adcb
adc
xor
mov
xlat
xor
fwait
jmp
jge
sti
inc
mov
outsl
push
push
mov
sub
test
test
and
xor
aaa
push
and
int3
scas
je
movb
dec
push
cmpsl
scas
pusha
add
inc
jnp
cwtl
lds
or
pop
lods
ret
stos
mov
test
cli
xor
xchg
bound
rorb
adcb
subb
int3
pop
jne
imul
inc
or
scas
pusha
fildl
push
xchg
mov
push
inc
repz
inc
sub
xchg
lds
fcmovnb
push
xlat
push
jge
mov
das
cmp
shrl
test
jp
jl
leave
pop
xor
push
cmp
lods
bound
in
inc
lcall
mov
repz
hlt
and
loopne
sub
js
les
sub
xchg
icebp
pop
mov
jmp
and
out
outsb
pop
shr
dec
int3
mov
mov
sbb
call
es
fstl
in
out
lods
push
cmp
pop
sbb
add
sub
fcmovne
mov
rolb
fs
sbb
push
out
xchg
dec
inc
popf
fucomp
cmp
ds
pop
in
cli
ljmp
cwtl
sub
sbb
das
adc
push
and
and
lcall
ds
pcmpeqb
imul
into
bound
xchg
push
mov
cmp
loop
adc
mov
push
sbb
fsubs
mov
cwtl
push
or
imul
jg
jns
mov
ljmp
pop
push
or
inc
jg
dec
pop
imulb
cltd
jne
pop
xlat
ss
add
sbb
mov
in
fisttpll
fsubl
push
into
jbe
outsb
fcompl
out
sbb
call
mov
adc
inc
out
movsb
clc
cmpsb
dec
dec
imul
jae
call
jg
call
pop
mov
adc
ja
aaa
dec
std
cmc
addr16
or
fcoms
cwtl
jo
lahf
lcall
aas
sbb
xor
cmp
mov
inc
xchg
sub
push
mov
and
xchg
pop
jnp
xor
push
leave
insl
push
xlat
mov
pusha
popa
dec
push
int3
mov
mov
xor
cmpsl
popa
mov
pop
repnz
and
dec
les
adc
fists
stos
pop
cmp
out
jp
inc
adc
push
inc
movsb
cmpsb
in
xchg
jecxz
push
in
sbb
mov
in
pop
adc
cwtl
inc
mov
cld
clc
lret
or
test
and
mov
scas
xor
ffreep
outsl
insl
psubsw
pop
adc
mov
sbb
dec
dec
lret
test
add
xor
cmp
jno
xchg
rol
imulb
pop
fxch
adc
mov
outsl
mov
or
push
cmpsb
ret
scas
flds
mov
mov
jp
rolb
xlat
clc
xchg
xchg
mov
popa
mov
cmp
rol
mov
dec
popa
inc
aam
in
ljmp
lods
adc
lret
test
ret
xor
jno
adc
lcall
fisttpl
sbb
mov
out
mov
jl
fsts
test
orb
aas
clc
jge
mov
jne
inc
fsubrl
xchg
and
pop
inc
mov
inc
jae
jg
scas
loopne
push
repnz
daa
mov
cltd
lock
jmp
jge
mov
mov
ret
add
stos
loopne
je
nop
inc
insb
jnp
sub
mov
into
mov
or
rdtsc
daa
vorps
cli
mov
rcrb
cwtl
stos
push
cli
jp
and
out
int3
ja
stc
stos
loop
aad
test
cmp
mov
mov
dec
jne
call
inc
dec
sub
mov
notl
fisubrl
into
push
movsl
outsl
pop
les
es
aaa
push
or
or
iret
mov
pop
repnz
stos
test
push
cmp
scas
out
daa
js
or
sbb
cmp
repz
xor
jo
sbb
dec
lahf
mov
jb
adc
inc
push
dec
sub
xchg
adc
pop
mov
ret
push
pushf
fistpll
cmp
mov
inc
push
mov
and
loope
xchg
out
les
add
outsb
jne
int
sub
xchg
enter
jmp
int
ret
call
test
and
xor
push
es
cmp
loop
push
xchg
test
shl
dec
mov
loop
mov
jle
and
aas
stos
mov
mov
dec
mov
fisttpll
xchg
xor
xchg
pop
hlt
push
jns
mov
das
je
jmp
pop
push
cmpsl
push
les
in
xchg
bound
cmp
pusha
jb
pop
adc
scas
cli
addl
jae
cltd
fimuls
jb
sub
in
jbe
mov
lods
mov
sub
out
mov
adc
les
add
or
lods
test
inc
mov
adc
jns
or
xor
ret
sbb
nop
and
imul
enter
shrl
lods
fcmovu
inc
into
mov
cmpsb
pushf
xor
mov
inc
fsubr
stos
mov
inc
das
lret
sub
push
lock
adc
enter
stos
inc
int
mov
addb
inc
addr16
std
inc
fs
rcrl
sti
arpl
cmpb
cmp
mov
es
cli
iret
mov
and
inc
jp
sub
push
fcoms
jo
dec
xor
and
or
push
movsb
sub
inc
add
pop
pop
daa
inc
pop
inc
mov
mov
icebp
filds
inc
out
out
orl
out
fwait
test
pop
ret
xorb
cmp
push
fnsave
inc
stc
push
mov
repnz
cmpsl
cmp
jae
jecxz
rol
cmc
dec
out
sub
ss
cmp
or
inc
outsb
test
popa
cli
in
dec
cmc
not
jns
sbb
mov
adc
call
jo
aad
cmp
cmp
fs
xchg
lds
pop
jge
out
cmp
dec
lds
inc
add
loope
push
jne
pushf
shll
inc
subl
les
pop
add
lcall
push
lret
mov
dec
jle
test
imul
sub
sbb
fcomi
imul
imul
out
xor
nop
repnz
cli
cwtl
adc
xchg
test
sbb
mov
and
ljmp
sbb
jae
pop
push
or
or
adc
sub
mov
pop
clc
out
fstpt
rcll
aad
mov
mov
mov
add
jp
ss
fists
or
adc
xor
jmp
cmp
arpl
loope
mov
ja
xchg
sbb
stos
lods
sbb
repz
in
cli
arpl
ss
cmp
aaa
adc
push
rorl
jno
cmc
pop
popf
or
fcomi
mov
adc
push
push
pop
cmp
lcall
push
dec
lcall
pop
leave
out
js
pushl
mov
mov
test
cmp
push
cbtw
bound
cmp
inc
push
xchg
je
add
push
push
add
sub
and
xchg
movsl
out
lods
mov
jle
jecxz
out
cmc
dec
sbb
xor
push
orb
aam
ret
pop
mov
push
inc
mov
push
mov
jecxz
ja
nop
fiaddl
int
mov
mov
mov
sbb
push
jo
sub
daa
push
into
popa
subb
fs
push
cmc
mov
xchg
mov
out
xlat
mov
lea
add
stc
rorb
insb
xchg
cmp
shlb
lahf
call
sbb
pop
cmp
push
mov
leave
dec
sarb
aas
add
cmp
insb
mov
stos
test
in
cmp
repz
mov
push
cmc
jae
in
jbe
in
mov
mov
xchg
xor
jbe
or
mov
cmpsb
push
push
les
arpl
outsl
in
dec
daa
test
push
ljmp
jnp
test
cmp
or
mov
lods
test
jmp
xchg
jnp
pop
mov
fadd
lock
xchg
shrb
imul
pop
sahf
gs
sub
jns
mov
fisubrl
fnstcw
jl
pop
or
and
and
lret
inc
sub
ss
mov
sub
adc
jg
sub
inc
insb
bound
xor
pop
std
adc
or
push
lcallw
sti
std
stos
inc
xor
mov
fldt
mov
es
xchg
imul
addr16
inc
icebp
xor
mov
test
adc
mov
addr16
or
pop
xchg
mov
fwait
mov
popa
in
xchg
idiv
scas
sub
aam
push
pop
adc
imul
nop
xor
push
ds
add
add
movsbl
cmp
mov
into
iret
jge
cwtl
cmp
out
fbld
stc
lds
lods
adcb
mul
les
mov
jge
stos
mov
loopne
adc
test
mov
out
adc
movsl
dec
enter
scas
sbb
roll
dec
in
loopne
fwait
xlat
mov
aad
bound
incl
push
push
xchg
or
and
xchg
sub
in
and
inc
data16
in
repnz
fbstp
push
mov
cmp
pop
loopne
xchg
xor
inc
cmpsb
lods
fistpl
xor
mov
fnstsw
xchg
xchg
clc
outsl
out
out
imul
sti
sbb
pop
xchg
add
inc
sbb
lods
jb
lcall
pushf
addl
mov
rcrl
mov
aam
movb
jbe
sub
inc
cmpsl
mov
jae
lock
cld
aas
sub
and
xor
sub
push
and
xchg
les
pop
fnstcw
fiadds
ss
push
mov
js
ffree
dec
mov
jno
shlb
or
dec
mov
fwait
lahf
pop
adc
adc
sahf
xchg
jle
cmp
sub
insl
scas
jnp
xor
test
mov
push
in
cmp
test
rolb
add
cmpsb
lds
test
aas
je
pop
jle
ret
cmp
mov
mov
lock
loop
mov
mov
cs
shl
idivb
fmuls
int
jno
in
jae
inc
cmpsb
push
mov
sbb
and
push
mov
sub
out
aaa
jmp
fidivrs
xchg
loopne
mov
push
cmpsl
mov
cmp
jno
imul
and
lret
lret
scas
jb
xor
out
mov
ds
out
in
orb
cmpsl
repz
lret
aam
lods
loop
inc
stos
fwait
push
sahf
mov
mov
popa
lret
stc
in
xor
cs
inc
std
idivb
rol
push
fsubrs
flds
xchg
sub
dec
and
pop
pop
loopne
cltd
addr16
jns
test
xor
pop
adc
imul
dec
xchg
push
je
jle
mov
notb
stos
cmp
xchg
mov
inc
fstpt
push
frstor
pop
inc
xchg
inc
xchg
sbb
xchg
js
push
lret
lcall
and
out
push
js
adc
jl
ret
outsb
pop
aad
inc
xor
sarb
fwait
test
mov
subl
sahf
or
pop
xchg
repz
cmpsb
mov
push
pusha
sbb
mov
aam
mov
push
test
mov
test
ficoml
xlat
out
push
roll
fmul
popa
xor
out
and
insb
lret
pop
shl
ljmp
xor
mov
test
jg
add
shl
std
adcl
mov
pop
add
adc
mov
sarb
iret
xchg
pop
xor
xchg
and
in
dec
adc
scas
adc
sbb
lret
inc
xor
push
sbb
jg
dec
fildll
jno
push
jne
clc
dec
hlt
push
fisttpll
inc
jns
lock
je
or
mov
jg
pop
mov
adc
test
scas
jbe
pop
stos
movsb
sub
xchg
test
cmp
and
xor
lods
push
imul
xchg
fbstp
int3
sub
jbe
repz
xchg
enter
push
imul
push
popa
push
push
addr16
mov
add
jno
adc
xor
sbb
test
sbb
popf
call
jb
push
jle
outsl
jmp
or
repnz
movsl
lcall
mov
xchg
aam
aas
mov
mov
sarb
movsb
dec
inc
in
xor
insl
cs
dec
jbe
int
lret
jbe
fidivs
pop
aaa
push
out
lret
sub
data16
les
mov
add
sub
dec
xchg
rclb
adc
dec
mov
sub
into
push
ret
data16
gs
iret
popl
call
ja
stos
add
mov
test
test
test
lds
jo
cmp
mov
mov
inc
lcall
push
ja
xchg
stc
ljmp
sti
gs
lods
add
jae
fsub
pop
fwait
stos
add
cmp
push
incb
cld
jmp
je
inc
aam
out
aas
adc
cmp
roll
ljmp
push
mov
mov
jns
rolb
bound
arpl
add
mov
mov
xor
xor
mov
sbb
loop
and
xchg
mov
ljmp
mov
divl
add
xor
push
mov
out
repnz
insb
rcl
push
dec
mov
push
stos
fsts
mov
out
sahf
cmpsl
arpl
cmc
adc
nop
adc
inc
xor
ja
push
fs
mov
outsl
adc
xchg
adc
mov
sarl
add
adc
adc
sbb
test
orl
adc
inc
cli
pusha
xchg
repz
add
mov
jg
push
outsb
add
out
xor
fadds
test
test
cld
nop
cmp
or
fadds
aad
imul
mov
and
or
lea
xchg
decb
pop
iret
jae
arpl
push
xchg
mov
loop
imul
and
stos
and
push
push
pushf
popa
sbb
hlt
das
or
mov
pop
mov
pop
aaa
xchg
out
shr
xchg
in
mov
in
ds
pop
adc
mov
mov
mov
leave
jg
and
inc
or
cwtl
repz
or
scas
adc
rcr
or
push
sbb
push
rcrl
xchg
or
lds
out
mov
shr
in
sbb
cwtl
inc
fnstcw
out
jle
xor
call
pop
xor
stos
jbe
into
sti
adc
movsl
xchg
call
pushf
dec
pop
or
std
ds
imul
sub
xor
movsb
sub
test
adc
ljmp
in
aam
hlt
rcrb
out
cmp
stos
mov
outsb
faddl
insb
out
lds
cmpsl
mov
fcomps
dec
aas
add
hlt
iret
xlat
pop
ss
cmp
jbe
lock
fldt
inc
push
idivb
sbbb
mov
lock
pop
add
ljmp
jae
mov
movsb
cmp
insl
insb
adc
dec
sbb
push
dec
jge
mov
xchg
test
lcall
push
lcall
push
cwtl
adc
inc
loope
push
mov
push
dec
mov
cmp
mulb
cmpsl
or
ss
mov
scas
add
cmp
inc
movb
pop
mov
clc
stos
lret
js
dec
rclb
xchg
mov
xlat
cltd
out
rcll
and
test
jns
gs
fnstcw
lods
cmp
jge
cmp
jle
rcrb
jp
test
pop
xchg
cmp
js
xchg
cmp
sbb
cmpsl
fadd
jmp
xchg
or
xorl
sub
push
mov
dec
mov
xchg
int
jg
repnz
cli
jb
pop
sti
xchg
or
xchg
jns
cli
cmpsl
loop
sub
sti
cmp
sti
cwtl
idivl
in
lret
jbe
repnz
and
outsl
lods
add
imul
into
pop
addr16
outsl
and
push
pop
inc
inc
out
fcoms
cmpsb
jb
mov
push
je
and
mov
fisubl
clc
jmp
push
or
jecxz
out
xor
cmp
cmc
mov
dec
imul
push
push
mov
hlt
out
sbb
lret
xchg
pop
sbb
fs
setno
rolb
sbb
jb
cmp
xchg
rol
out
enter
xchg
mov
xchg
aad
fildll
push
xchg
rcrl
stos
lahf
lods
xchg
in
adc
pop
mov
andb
enter
mov
shl
loopne
add
test
fidivrl
mov
pop
notb
pop
jnp
movb
arpl
adc
xchg
neg
enter
in
mov
xchg
dec
jecxz
adc
hlt
cwtl
testl
aam
pop
data16
push
or
xchg
lods
shll
je
stos
ficoms
pop
out
test
jp
psubsb
popf
rcrb
xchg
jno
in
aaa
rolb
jmp
jbe
and
in
lret
loop
mov
add
sbb
push
inc
mov
fisubrs
xchg
fidivl
cs
subl
xchg
cmp
dec
xor
lahf
inc
enter
lds
test
sbb
mov
pop
pop
push
lcall
dec
pop
sbb
cmp
cmc
nop
stos
dec
insb
ret
cmpsb
outsb
adc
fsubs
cli
iret
iret
shrl
aam
and
cmc
dec
sahf
inc
mov
xchg
cmp
lret
pop
sbb
jb
pop
loop
and
data16
inc
out
mov
mov
add
clc
adc
dec
or
shl
idiv
and
cmpsl
xchg
imul
cmp
inc
sbb
cs
xchg
dec
mov
sti
or
sub
repz
mov
cmp
add
push
movsl
or
cs
or
jbe
mov
xchg
pusha
or
shrb
jnp
push
push
mov
adc
inc
or
xchg
dec
and
mov
movsl
push
sub
cli
xchg
push
xlat
xor
aas
aaa
test
fidivrs
insb
sarl
fistpl
lret
addb
insb
aam
sbbb
push
xlat
and
cmpsb
enter
pop
sbb
mov
les
std
pop
mov
pop
stc
pop
jp
cltd
clc
push
les
sbbb
xchg
cli
jp
lret
or
ret
sbb
or
lcall
repnz
push
xchg
lahf
and
lret
jnp
movsl
fmull
adc
pop
cmpsb
ror
test
push
or
sbb
out
add
bound
and
leave
stos
outsl
or
decb
gs
ret
add
pushf
jo
in
cmc
pop
mov
pop
inc
push
aad
sbb
sbbb
mov
sub
adc
in
mov
jbe
adc
lods
arpl
arpl
loop
leave
mov
scas
adc
pusha
addr16
out
jne
decb
sub
addr16
cld
cwtl
iret
mov
fldcw
and
cltd
or
cmp
arpl
divb
sub
sahf
xchg
push
push
inc
inc
cmp
add
inc
mov
shlb
xor
rcrl
dec
mov
dec
or
add
test
mov
daa
dec
cwtl
decl
clc
sub
fisubl
in
mov
call
sbb
mov
std
xchg
xlat
cmp
shrb
inc
push
mov
or
cli
in
aam
lcall
mov
into
sbb
pop
repnz
sub
jmp
out
shl
sub
les
imull
adc
inc
fiadds
negb
inc
hlt
rcl
lea
aad
fisubrs
aam
outsl
cmp
jmp
pop
fildll
sub
clc
mov
or
addr16
imul
repnz
lock
fld
cltd
mov
jecxz
fxch
dec
out
aaa
pop
cmp
mov
jmp
mov
out
pop
cld
mov
xor
lock
mov
clc
mov
or
sbbb
nop
pushf
arpl
loope
scas
movsb
cmp
daa
in
cmc
push
push
adc
hlt
sbb
pusha
adcl
mov
pop
stos
test
push
filds
dec
repnz
rorl
movsb
jl
adc
scas
test
movsl
or
cmp
inc
or
add
sarb
in
jnp
filds
vpandn
sti
aaa
divb
push
jns
cmpsb
xor
je
das
mov
pop
mov
push
xor
mov
das
int
add
scas
cli
stos
mov
push
pop
jle
push
loopne
shlb
push
adcl
mov
or
mov
imul
outsb
and
mov
sub
add
clc
sbb
cltd
sub
test
jecxz
pop
or
lods
cld
mov
sub
andb
inc
pop
testl
fsubr
insb
mov
jg
pusha
mov
jmp
pop
imul
gs
das
sbb
push
movsl
cmp
es
outsb
push
test
xor
test
push
dec
add
pop
jmp
xchg
pop
loopne
push
push
add
pop
shl
arpl
xchg
fucomp
xchg
push
inc
and
push
data16
jle
cmp
sbb
daa
mov
cwtl
clc
adc
hlt
pop
sub
cs
fnstenv
add
jl
jns
mov
adc
pop
mov
clc
xlat
mov
xorl
scas
movsl
and
insl
out
jl
inc
sub
mov
dec
mov
pop
loop
jo
outsl
cmpsb
mov
into
bound
mov
imul
sbb
std
adc
cmp
mov
ret
inc
sbb
ds
jns
and
pushf
inc
ret
mov
inc
inc
iret
and
or
inc
mov
add
jecxz
and
lret
in
imul
or
rorb
movl
nop
jp
push
js
or
test
adc
pop
pusha
jp
and
aad
pop
push
data16
jge
cltd
nop
mov
sbb
sbb
shll
mov
mov
cwtl
adc
fadd
stos
aad
adc
and
xchg
mov
sti
pop
aam
pop
mov
std
js
xor
lret
testb
mov
pop
pop
test
out
mov
lret
popa
or
jge
pop
jo
aas
int3
stc
or
andl
mov
and
and
cmpsl
xchg
add
xchg
jo
or
jno
cltd
scas
jmp
or
add
mov
jmp
xor
std
outsb
out
and
add
xor
iret
jb
push
out
or
rolb
imul
es
fsub
pop
xchg
roll
jg
adc
pushf
xchg
lret
mov
mov
pop
call
repnz
pop
fidivrs
mov
xor
test
mov
jnp
in
xor
and
lcall
pop
icebp
out
std
fyl2x
les
sti
mov
pop
xchg
pop
loope
int3
call
ret
inc
and
dec
repz
or
enter
into
mov
pushf
push
dec
mov
incb
mov
inc
lahf
jmp
ja
adc
dec
push
outsl
jmp
jg
jnp
sbb
dec
ds
out
das
aam
adc
sarb
jno
std
push
lea
out
push
jge
and
das
inc
add
cs
lds
es
and
into
popf
imul
ret
daa
rcrl
inc
and
je
or
into
ret
sbb
adc
adc
test
pop
xor
push
in
sub
fcom
dec
rorl
and
imul
and
mov
les
adc
xlat
insl
cmp
xor
push
mov
lahf
cmp
push
add
push
mov
test
int
popf
loope
mov
ficomps
sbb
pop
std
idiv
cld
dec
aam
adc
in
testl
imul
add
std
inc
cmc
inc
out
push
jl
sbb
hlt
inc
pop
es
adc
push
into
adc
cltd
jo
inc
cmpsl
fdivrs
outsb
and
test
rorb
mov
imul
shll
adc
xlat
jg
into
push
ss
fsts
lods
lods
enter
repz
sub
push
cmp
push
pusha
inc
subl
sar
es
les
inc
cmpsb
shll
gs
cwtl
pop
adcl
sbb
xchg
test
inc
mov
les
inc
movsb
jns
add
jl
mov
shrw
sbb
dec
and
stos
jge
push
mov
pop
add
sub
push
adc
mov
dec
inc
inc
push
cmp
add
sub
inc
jns
adc
and
mov
mov
out
mov
addr16
jecxz
inc
fcoms
mov
ss
or
pop
or
xchg
jl
icebp
jmp
std
movsb
jno
sub
push
int3
decl
sbb
andl
push
ljmp
aam
arpl
scas
push
push
jnp
lds
sub
int3
pop
xchg
shll
mov
test
mov
sbb
roll
or
dec
aam
inc
fbld
mov
cwtl
sub
mov
imul
enter
xor
std
push
shrb
push
mov
push
mov
mov
lods
fbld
aad
frstor
or
mov
mov
int
pop
stos
sub
outsb
ljmp
mov
stc
cmp
clc
bound
dec
sub
xchg
mov
cmc
add
rcrl
cmp
subb
add
inc
mov
testl
cmpsl
inc
inc
out
lock
outsb
lea
in
sub
jp
cwtl
jb
xor
repz
or
dec
aam
scas
lea
fnstcw
adc
sarl
lcall
mov
cmp
daa
out
stos
call
outsb
out
lds
scas
lcall
lcall
ret
xchg
ljmp
test
mov
lret
cmp
or
shlb
popa
daa
in
stc
pop
mov
add
inc
mov
mov
pop
aad
ret
push
sbb
push
je
add
and
pushf
stc
int3
bnd
mov
cmpsl
hlt
call
jb
inc
fs
xchg
adc
push
les
adc
cli
jae
cmp
mov
cmp
fistl
jl
jne
jae
rorl
cmp
push
jae
jo
pop
outsb
dec
adc
jg
inc
and
adc
add
sbb
ficoms
pop
dec
ficomps
psubw
push
or
inc
popa
test
les
add
ret
into
push
sahf
mov
popf
test
cld
add
pop
sbb
scas
stos
inc
ss
inc
fstpl
cmp
dec
inc
push
leave
jmp
loop
jno
cld
out
or
xchg
mov
jp
loopne
jb
loopne
push
mov
out
mov
dec
stos
in
mov
test
sbb
iret
xchg
out
sub
out
test
lods
mov
cmp
lcall
std
int
push
mov
lret
dec
insl
dec
jnp
jae
xlat
dec
ja
jge
cmp
testb
jge
in
fisttpl
repz
fwait
ljmp
in
mov
repnz
mov
and
jns
inc
lods
pop
mov
movsl
sub
ds
mov
push
out
jne
fs
cmp
loopne
lcall
xor
xor
inc
inc
lret
sahf
pop
fs
mov
cmpl
test
insb
test
rorl
in
jg
lds
add
mov
ret
inc
aas
mov
and
xor
and
or
jbe
aam
mov
aaa
cld
sub
mov
pushf
insl
out
dec
out
mov
scas
call
mov
inc
jae
lods
or
cld
push
xchg
mov
jo
aaa
xchg
push
and
sbbb
cmp
or
pop
pop
jp
or
sbb
pushf
addr16
xor
adc
movsb
dec
fiaddl
add
xor
cmp
lods
loop
push
push
mov
add
test
xor
xor
clc
pop
stos
leave
or
mov
in
fs
mov
fcomi
int3
loop
arpl
pop
pusha
or
cmpsl
add
xor
mov
sub
cltd
mov
inc
xor
mov
push
lahf
xlat
dec
push
mov
inc
int
outsb
push
adc
inc
fsubrp
repz
push
stos
xchg
push
nop
lret
fs
cs
mov
jne
and
sub
popf
aam
dec
data16
jno
ret
loopne
jecxz
push
inc
mov
or
push
ss
ljmp
sti
and
fidivrs
cmc
xchg
xor
pop
out
xchg
in
pusha
sbb
std
add
dec
movsb
dec
cmp
mull
add
mov
mov
adc
or
add
cmc
fsubl
dec
call
pop
push
xchg
pop
aam
mov
sbb
fxch
inc
cmpsb
aad
fdivrs
push
xchg
movb
shlb
sarb
negl
xchg
mov
dec
icebp
add
movsl
dec
ds
data16
sti
or
lahf
nop
jnp
or
incb
sub
clc
adc
push
inc
mov
das
sbb
sbb
cmpsb
xchg
sti
lret
jns
xor
jl
add
push
scas
gs
int3
jo
stos
pusha
in
sub
xchg
mov
fdivrl
or
icebp
mov
ror
dec
pop
xchg
pop
sbb
dec
rcl
and
out
lret
leave
insb
repz
test
iret
adc
outsb
incl
pushf
test
mov
in
mov
pop
inc
push
xor
xchg
jmp
insl
je
mov
mov
in
or
movb
cmp
mov
mov
jp
xchg
xlat
xor
xlat
fwait
popa
fnstcw
shlb
in
xor
inc
cld
cld
push
push
les
hlt
popa
push
imul
test
cmp
or
xchg
aaa
jecxz,pt
and
leave
dec
arpl
out
lret
lret
je
scas
dec
mov
sbb
jmp
and
rcrl
mov
mov
stc
sbb
or
movsb
mov
stos
jns
mov
nop
and
push
mov
push
xor
cmpps
les
scas
rcll
mov
or
lret
mov
sub
cmpsl
cmp
or
inc
in
xor
adc
jg
and
mov
imul
jns
das
xlat
loope
mov
pushf
fwait
cmc
xor
aas
dec
arpl
sub
pop
inc
bound
enter
lock
jnp
in
xchg
lret
xchg
lods
fcomps
xor
sbb
les
out
int3
mov
cmp
or
lock
push
test
or
sti
out
pop
imul
mov
push
cmp
clc
lock
push
repnz
xchg
enter
xor
push
int3
mov
into
out
pop
or
adc
inc
xchg
out
jg
push
sahf
sbbl
inc
cmp
xor
inc
repz
out
cs
shr
outsl
adc
paddusb
loopne
xchg
int
add
and
rep
dec
sbb
jp
mov
add
rorb
sbb
jne
in
fists
mov
xchg
cwtl
nop
push
cli
fnstcw
push
push
sub
inc
insl
cmp
fsubrl
cmp
imul
mov
js
sbb
sarb
add
adc
sub
xchg
imul
mov
or
fisubrs
clc
inc
add
push
mov
fs
jbe
xchg
fadd
jne
add
sub
cmc
dec
or
dec
push
aad
cmp
and
mov
jno
sub
leave
leave
test
addr16
jns
shll
lds
jp
pop
and
aaa
push
popf
jno
iret
or
insb
cwtl
cmp
mov
push
jp
push
in
outsb
movsb
aad
lcall
mov
xchg
ja
in
pusha
shrb
lcall
mov
and
sub
sbb
sbb
dec
push
enter
lock
lock
sub
mov
int
dec
mov
push
bound
push
mov
rorb
call
cmp
testb
dec
enter
mov
ja
outsl
repz
por
add
xchg
je
push
lods
dec
test
aad
cmpsl
jle
push
sbbb
fisubrs
push
shrl
add
xor
or
push
out
outsb
imul
pop
jnp
movsl
ficompl
call
roll
cmp
lods
jmp
mov
dec
mov
xor
and
cltd
jp
sarl
mov
pushf
frstor
lea
pop
jno
fnstsw
sub
mov
movsl
and
mulb
in
cmpsl
mov
mov
insl
xchg
or
out
jle
lea
push
sbb
call
int
and
cwtl
cmc
inc
ds
shrb
arpl
and
movsl
jge
adc
mov
or
push
add
in
imul
aaa
and
out
xchg
adc
insl
xlat
add
cmp
xor
xchg
and
push
lods
in
sbb
lock
jl
es
mov
shll
inc
add
mov
fwait
push
xchg
xchg
sub
cmp
cmp
jle
sub
sub
in
cmp
jnp
lods
fstps
cs
sub
mov
scas
ret
jb
cltd
or
pop
and
cmp
insl
jp
push
out
xlat
xor
loope
and
les
lea
adc
or
imul
jne
out
roll
or
xor
adcl
fwait
or
push
sbb
gs
add
mov
inc
aaa
pop
iret
push
popa
fildll
lds
or
pop
scas
insl
int
jnp
mov
arpl
hlt
roll
jb
out
sub
xchg
clc
mov
push
cmp
pop
bound
frstor
movsb
mov
out
dec
lret
imul
pushf
or
mov
out
add
ret
and
mov
clc
test
cli
mov
std
mov
out
xchg
jae
dec
mov
flds
dec
mov
icebp
jl
mov
mov
mov
push
ffree
pushf
test
dec
fmul
popf
scas
xchg
mov
imul
cmp
mov
mov
pop
ljmp
sahf
iret
and
rclb
jo
add
adc
mov
xor
and
js
leave
adc
push
enter
loop
bound
pusha
sub
dec
mov
sbb
adc
mov
xchg
fpatan
pop
repnz
pop
xchg
xchg
mov
mov
and
inc
sub
sbb
outsb
and
in
mov
insb
adc
test
pop
sbb
push
cld
mov
jne
outsb
mov
loop
aas
rclb
insl
sbb
insl
orb
sarl
int
inc
cwtl
in
ret
jmp
pop
xor
subb
cltd
push
mov
jbe
xchg
mov
push
pushf
pop
xchg
test
ss
push
loop
cmpsb
pop
lcall
out
pop
xchg
xchg
push
nop
fsubs
cwtl
inc
aam
xchg
mov
and
pop
inc
xor
adc
aas
dec
repnz
dec
in
and
adc
xor
test
add
negl
mov
mov
js
jae
dec
popa
nop
ds
jp
sahf
bound
push
ljmp
pop
outsb
imul
stc
adc
out
mov
jae
cmc
pop
xchg
aaa
mov
mov
cltd
pop
je
xchg
mull
sbb
mov
sbb
test
pop
in
fildl
lahf
fldcw
sbb
push
maskmovq
mull
xchg
sub
xchg
adcl
rolb
mov
and
js
pop
fmul
into
xchg
sbb
notb
dec
dec
rol
and
or
shll
inc
stos
lock
shr
shrl
pushw
outsb
or
pop
or
imulb
call
fsts
jno
inc
int3
fwait
jecxz
sti
test
das
test
push
mov
dec
push
dec
push
leave
stos
or
mov
into
xor
cwtl
in
sbb
xorl
lahf
stos
dec
cmpsb
lcall
loopne
dec
or
push
leave
pop
sub
int3
arpl
push
xor
std
cmp
pop
scas
mov
push
mov
fsubrs
or
ss
addb
inc
cmp
aas
lock
out
mov
cmp
add
push
into
sbb
iret
pop
jnp
or
jb
mov
fs
sub
flds
adc
inc
add
ds
mov
mov
notb
in
adc
or
test
outsb
inc
into
ret
pop
aaa
bound
mov
sbb
adc
cmp
imul
test
pop
dec
sub
fidivl
xchg
shr
cmp
lock
sub
loope
ljmp
mov
push
ss
popa
roll
xchg
cmp
mov
xorl
ds
adc
cmp
pop
mov
stos
pop
ret
in
es
mov
fisubrs
loop
xor
inc
xor
loope
push
aad
out
xchg
in
aas
gs
pop
outsl
movsl
pop
dec
loop
pop
in
ret
aaa
test
repz
mov
lea
lret
pop
jge
cmc
aas
adc
shl
push
repz
jp
add
imul
aas
movsb
int3
shlb
inc
popf
sbb
bound
dec
inc
pop
popf
mov
adc
jp
fldcw
jnp
pop
jae
gs
add
cmp
rcrb
adc
sbb
shl
leave
sbb
jmp
push
push
test
jb
jne
or
push
fdivrs
outsb
adc
data16
ljmp
push
push
mov
popa
in
cwtl
popf
lds
pop
jmp
mov
jle
pop
cmp
xchg
test
adc
bound
fisubl
ja
add
repnz
pop
cmp
std
stos
dec
int3
sub
mov
das
mov
sbb
dec
cmp
cmp
inc
xchg
fmull
add
mov
inc
or
xor
push
subl
sub
pop
inc
xchg
outsb
ss
mov
out
jbe
sahf
pushf
xor
inc
test
lock
stc
cmpsb
in
into
push
cli
or
ret
sub
xor
nop
imul
cmp
lahf
test
cmp
or
cs
lods
in
shlb
mov
pop
push
sub
and
stos
int3
and
push
sbb
cmp
stc
jnp
hlt
fs
add
xchg
aaa
sbbl
cmp
cld
js
jnp
jmp
inc
test
outsb
gs
sbb
sub
sbb
mov
dec
insb
push
aam
int3
notl
decb
mov
imul
cmp
fldlg2
test
stos
or
bound
jmp
or
cmp
loopne
mov
mov
in
dec
dec
mov
pop
movsl
ljmp
xchg
dec
imul
in
xorb
cmp
pop
std
mov
ficoms
stc
and
xchg
repnz
icebp
adc
mov
in
sub
notl
lea
xor
adc
jno
xchg
ss
jl
mov
jae
pop
or
sub
sbb
pop
call
ds
hlt
cmpsl
dec
out
fldcw
mov
popf
enter
call
cld
cs
enter
pop
test
jo
mov
aas
scas
dec
cld
xor
aad
shrb
mov
imul
stos
fwait
ss
cmpl
mov
xor
jmp
imul
insl
cmpsb
lock
fisubs
add
bnd
shll
jecxz
jp
add
ljmp
pop
div
or
cmpl
push
cs
cmpsb
into
push
xchg
fmull
cld
and
subl
mov
ljmp
adc
pushf
push
decl
pop
jge
add
aad
pop
sub
cmc
dec
cmp
adc
nop
mov
shrb
int3
add
pusha
cwtl
cmp
out
pop
hlt
fwait
arpl
aad
inc
push
das
shrl
adc
fbstp
clc
icebp
xchg
and
ret
jge
outsb
into
addr16
stos
fldl
das
and
fucomi
cmp
cli
mov
into
hlt
out
lods
add
mov
mov
xchg
fbstp
inc
sub
out
pusha
cmp
xchg
movsb
pusha
test
pushf
push
out
pop
mov
mov
jge
xchg
sahf
enter
mov
sbb
cmpsb
jne
mov
mov
push
lret
hlt
andl
pop
mov
add
jb
add
push
mov
dec
dec
std
and
adc
mov
cmpsl
push
mov
mov
xchg
cmp
lret
jae
push
add
bound
pop
or
loop
insb
xchg
stc
jmp
mov
sahf
loop
jge
faddl
dec
out
fldenv
xor
or
scas
mov
mov
mov
aas
in
push
push
and
jbe
xchg
pop
push
pop
adc
pop
add
sbbb
pop
push
xlat
push
ret
inc
loopne
xchg
scas
out
sti
dec
das
mov
mov
inc
cmp
pop
cmpsl
mov
sahf
iret
movsl
xchg
pop
jge
cmp
pop
xchg
push
pop
or
cltd
add
lahf
cmp
movsb
sbb
mov
rorl
push
shlb
mov
subl
es
or
sub
stos
xchg
jnp
cmp
lods
add
jb
xor
mov
ret
push
sbb
test
mov
into
sbbl
jb
repnz
add
pop
cmp
int3
into
jecxz
mov
or
adc
inc
jae
push
test
lcall
push
add
xor
popf
adc
lahf
sbb
sub
repz
jno
outsl
adc
inc
fildll
sub
popf
das
mov
das
aam
outsb
jae
dec
mov
jle
xchg
inc
pop
imul
imul
rcr
xor
xchg
lods
lods
sahf
call
fstps
sbb
ret
jmp
icebp
imul
cmp
sbb
daa
jmp
mov
inc
testl
inc
pop
scas
adc
cmc
pop
insl
in
pop
xchg
inc
dec
loope
inc
adc
or
int
lahf
sub
sub
shrb
pop
scas
lret
jmp
loop
and
mov
pop
iret
imul
jg
inc
and
roll
dec
jb
mov
insl
aam
in
test
fstpl
shrl
cmp
bound
lods
dec
in
shlb
int
lea
inc
aas
in
mov
sarb
xchg
shrb
dec
cmp
jbe
jl
test
cmpsb
sub
popf
out
dec
xor
nop
aas
ljmp
scas
cld
stos
inc
fiadds
push
ret
pop
leave
sub
lcall
addr16
pop
psubsw
mov
sbbb
test
or
adc
ffreep
lea
mov
cmp
dec
repz
out
enter
jno
and
pusha
xchg
int
jae
icebp
jg
push
adc
stc
mov
add
push
fucomi
jns
sti
cmp
mov
add
dec
mov
aam
pop
xchg
and
mov
insl
out
fisubs
shll
mov
adc
fs
sub
jnp
imul
aam
mov
pop
in
sub
pop
adc
xor
in
sub
mov
mov
push
push
xchg
fstpt
mov
ret
rol
clc
das
xor
negl
cltd
leave
out
xor
mov
mov
mulb
pop
jbe
pop
jecxz
lods
lret
lods
mov
mov
aad
xor
jl
lds
pop
xchg
and
js
jnp
lcall
ljmp
pop
enter
push
dec
outsl
cmp
out
fildl
repz
in
das
jno
inc
xchg
ret
ja
mov
xlat
std
and
pop
add
sbb
ret
pop
add
mov
ret
mov
dec
rorl
cmp
fidivrl
test
jns
push
scas
ret
das
sti
stc
jae
mov
mov
ret
adc
mov
negb
cwtl
jmp
and
jp
sti
popf
bound
mov
fmull
fmuls
out
flds
iret
bound
push
sbb
call
arpl
fisttpll
adc
and
mov
in
mov
mov
adc
mov
ss
or
stc
addr16
das
xchg
and
pop
push
pop
ja
push
push
xor
or
mov
push
pop
rcrb
push
stos
dec
jge
sub
mov
sub
inc
jl
mov
lcall
mov
sub
sub
fsts
jae
in
mov
xchg
xchg
shlb
nop
addr16
test
je
or
divb
jo
mov
jle
inc
mov
xor
cli
pop
icebp
les
mov
dec
mov
sbb
clc
mov
fdivl
dec
jo
jns
es
pop
and
shrl
and
xor
sahf
or
pop
cmp
movsl
push
les
lock
out
nop
frstor
clc
add
nop
je
sub
dec
mov
sbb
jmp
into
jmp
popl
andb
movsb
sbbb
cli
mov
xor
mov
aas
cld
inc
int3
sub
cmp
push
mov
mov
rep
ljmp
mov
mov
mov
add
jnp
jge
out
outsb
inc
call
lret
repz
icebp
out
sub
mov
jg
lahf
popa
add
mov
lods
push
sbb
test
inc
fistps
mov
mov
mov
sbb
mov
mov
sub
or
in
js
push
sbb
mov
push
push
imul
pop
jecxz
push
add
cmp
xchg
jmp
push
push
push
movb
shlb
cmp
cli
stc
ja
sub
jmp
dec
jbe
test
mov
stos
int3
mov
shlb
adc
loop
stos
xor
mov
cmpb
mov
xchg
adc
subb
in
clc
scas
cmp
outsb
sbb
imul
xlat
popf
mov
adc
pop
ljmp
insb
xchg
pop
in
ja
inc
outsl
fwait
cmp
std
jbe
les
sub
xor
xor
jo
shl
cwtl
dec
and
pop
push
fildll
sub
push
call
sub
cmpl
sarb
xor
shl
cmpsb
mov
push
xor
xchg
lahf
imul
xor
add
dec
cmp
pop
xchg
mov
adc
push
pop
xchg
mov
dec
push
stos
mov
mov
dec
aad
int3
lahf
test
pop
push
cmp
add
sbb
push
or
into
pop
rcll
lahf
popa
in
aam
mov
fstpl
cltd
loop
mov
pusha
inc
mov
push
adc
sbb
pop
iret
sub
int
cmp
sbb
nop
add
pop
and
jne
pop
mov
movsl
xchg
and
pop
pop
or
ljmp
cmp
inc
jp
push
daa
sbb
or
sar
jl
or
out
jbe
mov
call
inc
js
cmp
test
adc
adc
dec
into
sbb
push
stc
movsl
sub
xchg
xor
mov
push
mov
mov
mov
xor
adc
jle
cmpsl
or
arpl
cmp
ds
js
cmpsb
jae
add
in
push
mov
mov
mov
sub
inc
push
xor
dec
subl
add
sbb
dec
inc
xchg
icebp
lods
cwtl
fcoml
sub
jno
scas
je
ret
xchg
test
xor
lods
add
mov
enter
int3
or
aaa
push
and
mov
mov
jo
dec
scas
xor
out
pushf
xor
jae
shll
or
js
gs
sarb
fld
push
cmp
dec
inc
int
sahf
stc
out
test
adc
add
insl
xor
movsl
rclb
lods
xchg
xor
testb
mov
xchg
jnp
movsb
faddl
movsl
and
xchg
jns
bound
test
xchg
sbb
jno
pop
aas
enter
push
or
pop
pop
add
mov
das
popf
xor
addb
sbb
loope
lods
arpl
pop
push
xchg
sub
ficoml
xchg
ret
fsub
or
loop
lcall
lret
jb
sub
sub
cmp
mov
stc
mov
push
pusha
stos
sub
jecxz
inc
and
sub
push
sbb
loope
add
mov
sub
inc
cmp
ret
cmp
rcll
out
cs
fcompl
jl
sbb
ds
jl
aas
mov
pop
cmpsl
sahf
cmpb
lahf
and
xor
sub
add
outsl
inc
out
adc
in
add
pop
dec
sti
daa
cwtl
sub
loope
test
icebp
push
stos
mov
shlb
sub
push
pop
lods
test
ljmp
fisubrl
inc
sbb
fldcw
or
jp
test
push
ja
movsb
inc
cmp
je
pusha
push
jge
cmpsb
bndstx
inc
push
negl
add
rcrl
mov
and
loope
jle
ret
sub
stos
movsl
push
sbb
repnz
cvtps2pd
xchg
dec
xchg
cmp
mov
mov
cmp
and
pop
movl
or
add
js,pt
int
jns
push
xchg
push
xchg
fcomip
adc
sub
adc
or
mov
or
in
pop
jl
push
pop
stos
mov
mov
das
es
cmp
in
push
jmp
sbb
mov
and
mov
xchg
inc
outsl
nop
inc
int
xorl
xchg
out
das
pusha
mov
ds
or
pop
repz
je
sbb
test
in
sub
xor
setle
adc
mov
loopne
mov
divl
add
repnz
cmc
out
sbb
cmp
jle
scas
push
xchg
dec
sub
int3
loopne
jp
and
adc
mov
xchg
lret
adc
sub
mov
test
lret
mov
pop
sbb
in
mov
xchg
sbb
xchg
and
push
ljmp
stc
xor
mov
xchg
bound
insl
add
jnp
push
mov
adc
lahf
es
and
lret
xor
mov
cwtl
push
jl
cwtl
dec
push
testl
gs
mov
dec
pushf
movsl
xchg
cltd
fstpt
jae
mov
data16
xor
jmp
push
dec
in
adc
fwait
bound
add
jbe
push
movsl
ja
mov
mov
add
fldl
jno
mov
inc
nop
xchg
fwait
outsl
test
sbb
ret
and
adcb
ja
repnz
sbb
inc
fadd
cltd
mov
sbb
stos
pop
add
xchg
scas
inc
pop
cmp
and
xor
sbb
mov
fmulp
xor
sahf
xlat
fidivrl
sub
pop
cld
jg
inc
push
mov
in
mov
call
fstpt
dec
push
orl
movsl
adc
inc
pop
xchg
pop
inc
ja
push
xchg
sbb
xchg
adc
nop
lods
jmp
imul
xchg
xchg
or
pop
popa
xchg
and
sbb
clc
jmp
idiv
movsb
out
sbb
hlt
pop
das
mov
test
insl
pop
leave
stos
inc
in
fsts
xchg
xchg
std
mov
insb
enter
and
mov
sub
sahf
addr16
in
sbb
iret
jl
negl
into
loop
mov
sub
lret
cs
mov
push
sahf
enter
or
xlat
icebp
jl
pop
insl
jno
or
les
mov
push
pop
xchg
push
mov
aad
mov
or
cs
popf
jnp
mov
pop
popa
popa
sbb
outsb
adc
pop
xchg
daa
mov
pushf
dec
ja
add
xor
fisttps
enter
mov
and
cmpsb
rcrl
gs
fldt
cmpsb
lods
sti
fists
leave
jp
call
mul
mov
arpl
xchg
inc
xchg
mov
test
xchg
fisubs
rorl
push
fisubrs
mov
jge
push
fcoms
jg
sti
mov
aaa
xlat
mov
mov
adc
call
out
and
pop
and
popa
mov
pushf
dec
inc
mov
sbb
or
popa
inc
inc
sbb
rclb
mov
lds
cmp
mov
push
or
or
loop
aam
out
xor
jg
mov
cs
xchg
fcompl
mov
test
adc
mov
push
add
rorl
movsl
leave
ffree
in
repnz
out
ss
push
popf
xchg
jg
dec
jnp
in
fwait
rorb
jno
push
jp
push
adc
int
nop
cmpsl
dec
mov
mov
mov
lods
push
mov
neg
ficompl
ficompl
jg
cmpsb
push
mov
fcomps
push
push
cmp
mov
movb
cmp
imul
jno
mov
clc
cmp
je
lcall
adc
addr16
mov
mov
push
push
or
movsl
push
es
fsts
outsb
adc
popf
das
adc
inc
sbbl
inc
mov
inc
shrb
adc
mov
lcall
add
fsubrl
sub
jmp
inc
loope
mov
loopne
cmpsl
pushl
sbb
xchg
sbb
jecxz
xchg
jl
ja
mov
mov
jo
jae
cmpb
mov
cmpsb
popf
sbb
jg
mov
fildl
push
sbb
pop
cli
push
push
std
inc
adc
mov
jmp
xchg
or
hlt
dec
mov
inc
fsubrl
imul
xchg
iret
add
cwtl
jns
addr16
inc
adc
mov
pop
xchg
arpl
mov
or
je
aaa
test
mov
les
jl
lahf
shll
jnp
pop
jnp
xor
pop
add
cmp
data16
cwtl
pop
daa
movsl
ret
cmp
in
cld
fldcw
outsl
inc
push
cwtl
mov
stos
call
movsl
mov
mov
mov
add
dec
enter
rorl
jno
pop
xchg
cmpsl
and
jo
xlat
xchg
mov
pusha
in
dec
ret
ss
insl
push
xchg
scas
test
or
sub
les
and
jp
stos
scas
roll
pop
jge
xcrypt-ctr
cmpsl
sbb
bound
frstpm(287
ret
in
mov
rcrl
push
repz
push
std
loope
xlat
jnp
hlt
ret
rorb
sub
xchg
sub
dec
inc
adc
bound
incb
decb
xchg
dec
jl
aas
sub
mov
fildl
sub
pop
mov
icebp
mov
imul
pushf
inc
xchg
out
xchg
and
sahf
out
and
fcoms
mov
arpl
das
jg
xchg
jnp
rorl
xchg
sub
cmc
shlb
jle
add
pop
or
stos
std
adc
lods
testl
xchg
iret
lods
clc
sbb
jno
jae
aaa
dec
jnp
enter
push
pushf
mov
lret
cmp
mov
xchg
lcall
dec
xor
pop
jnp
fwait
push
push
divb
fadds
lods
mov
mulb
inc
jge
nop
xchg
mov
sbb
pop
sub
inc
call
in
shll
push
cli
xchg
insl
adc
fcomi
mov
fadd
inc
ret
stos
rol
push
out
test
mov
frstor
cmp
push
mov
dec
adc
adc
mov
inc
and
pop
insl
dec
cld
or
or
data16
dec
pop
push
ror
stos
cs
add
mov
pop
lods
and
xchg
sub
adc
fidivl
and
idivl
imul
mov
ljmp
ftst
scas
jecxz
cmp
xor
adc
pop
xchg
push
inc
xchg
sub
sarb
js
daa
stc
nop
daa
adc
nop
clc
mov
pushl
add
fs
dec
rcll
and
mov
sub
inc
inc
arpl
sub
arpl
push
dec
outsl
test
or
mov
inc
lcall
and
xchg
int3
xchg
mov
adc
dec
pop
loopne
js
repz
inc
pusha
push
mov
fdivrl
and
ficoms
xchg
test
ja
adc
test
rcrb
jg
sbb
sar
dec
shll
sbb
pop
mov
or
inc
daa
pop
std
and
xchg
fdivs
jno
or
mov
aas
sbb
xor
mov
mov
push
push
and
int3
or
lods
das
add
adc
sahf
adc
push
sub
cmpsl
xchg
jecxz
mov
push
les
or
xchg
jecxz
fcmovnu
loopne
int3
pop
sbb
loope
jns
jae
aam
into
cmp
rorb
jp
and
adc
cmp
daa
xor
add
lret
clc
fisubrs
jmp
xor
jnp
notl
arpl
cmp
sbb
push
xchg
test
mov
xchg
jns
js
sahf
addl
xchg
and
int
push
sub
inc
outsb
xor
loope
sub
insb
jl
shrb
hlt
add
imul
mov
div
cmp
push
pop
lods
dec
mov
out
xchg
pop
inc
outsl
dec
hlt
addb
loope
cmpl
jmp
fists
div
nop
mov
gs
cmp
mov
aad
pop
out
jnp
push
pop
push
les
aad
loope
add
test
mov
mov
shll
push
and
fwait
mov
or
pusha
mov
push
shll
jnp
aas
ja
ret
rorb
sbb
xchg
stos
inc
lcall
push
cli
ljmp
inc
movsb
imull
lret
fs
xor
ja
repz
lcall
fucom
mov
mov
adc
lock
add
dec
and
arpl
cmpsl
int3
rorb
mov
or
inc
hlt
mov
jl
incb
xor
inc
fmuls
sahf
and
ljmp
out
adc
sub
sub
fistpl
adc
mov
jg
push
in
lret
mov
hlt
and
inc
pop
outsb
and
andb
xchg
jl
cmp
js
pop
movsb
dec
or
inc
xor
stc
dec
adc
mov
std
lret
aaa
or
and
pushf
add
movsl
adc
jmp
scas
mov
stos
xchg
inc
inc
cmp
iret
xchg
xchg
inc
into
aam
shrl
mov
xchg
sbb
out
jae
fiaddl
sarl
jmp
repz
cltd
mov
pop
in
xor
xor
mov
test
clc
cs
pusha
or
int
notb
dec
aaa
jmp
dec
jo
xlat
movsl
xor
stos
mov
push
and
leave
mov
jb
enter
pop
xor
rcrl
movsl
aas
cmp
loope
mov
cmp
fistps
lea
dec
and
mov
mov
ficoms
xchg
ret
fcmovb
mov
push
sahf
in
xorl
mov
out
or
hlt
or
shl
pop
pop
stos
lock
or
mov
stc
xchg
mov
pop
inc
dec
popf
pop
sti
jo
test
xor
adc
arpl
js
mov
mov
dec
inc
cmpsl
xorl
inc
jns
add
popa
iret
dec
sarl
ljmp
xor
out
iret
rorb
test
std
sub
pop
xchg
jae
outsb
pop
jg
xor
xlat
sub
jle
jge,pn
xor
mov
popl
mov
sub
test
inc
push
jns
xor
jg
fisubs
dec
push
xchg
ds
call
mov
loopne
pop
push
or
idivb
xor
in
clc
push
push
into
fsubrl
or
int
jbe
shll
popf
shl
int3
in
dec
je
cmc
out
lds
jno
cs
test
mov
xor
aaa
mov
sbb
push
add
dec
je
sub
cmp
cmp
cmp
std
fadd
xor
push
subb
inc
dec
jnp
xlat
bound
stc
mov
lock
mov
aas
into
mov
add
mov
mov
addr16
and
push
je
sahf
test
push
xor
xchg
add
popa
fldt
ljmp
sub
xor
dec
sbb
sbb
jae
jg
aam
incb
mov
adc
lods
cltd
ds
mov
aad
xor
add
out
or
iret
sub
jo
or
xor
sahf
sbb
lea
jmp
and
in
jmp
cmp
lret
xlat
and
imul
lds
mov
fwait
or
mov
xchg
in
ficoms
mov
add
into
inc
xor
sbb
mov
ret
punpckldq
mov
into
ds
fucomi
xchg
push
push
cmp
mov
push
jne
inc
movsl
add
enter
out
inc
fisttps
in
fbstp
movsb
jo
inc
and
popf
xchg
adc
std
xor
dec
sbb
and
cmc
sub
stos
pop
and
xlat
cmpsb
sub
xchg
pop
sbb
jmp
xor
lret
pop
insb
imul
mov
xchg
push
out
sbb
sti
xchg
pop
add
mov
leave
xchg
test
push
jnp
outsb
jecxz
xchg
call
rolb
ds
clc
cld
int
cltd
mov
dec
repz
cmp
mov
xor
inc
mov
mov
imul
imul
gs
ja
add
sbbb
xchg
or
ljmp
test
jl
mov
scas
mov
out
ljmp
cld
daa
inc
jmp
test
push
inc
or
push
jns
and
aad
jp
jmp
jns
xor
aas
sbb
xor
scas
lret
sbb
dec
mov
sbb
insl
inc
sbb
test
test
adc
mov
xchg
cmp
mov
jbe
roll
jo
inc
and
inc
mov
addr16
gs
inc
lcall
push
mov
aas
int3
sbb
pop
sbb
jl
inc
les
inc
add
lret
call
jns
in
pop
scas
xchg
xlat
xlat
and
sahf
addr16
enter
roll
and
sbb
or
daa
pushf
sub
mov
ljmp
cld
insb
jp
mov
in
pop
dec
bound
popf
clc
mov
push
sub
mov
fwait
sub
mov
sub
cmp
loopne
loope
and
push
gs
mov
jge
jno
push
mov
ret
cmc
jmp
pusha
mov
mov
aad
test
mov
mov
jle
mov
cld
gs
mov
addr16
add
pop
test
in
rcl
cmp
inc
ljmp
and
adc
sbb
inc
cmpb
pusha
cli
adc
lea
inc
lods
js
lahf
mov
lods
aas
loop
sahf
testl
pop
or
xchg
jl
insb
dec
shl
and
out
repnz
pop
ja
push
loope
test
cmp
push
jmp
inc
rolb
aas
xor
notl
daa
pop
push
mov
adc
aam
mov
pushf
loop
jmp
mov
cmp
pop
mov
je
inc
push
adc
xchg
add
into
push
push
aam
scas
repnz
outsb
inc
mov
lods
es
rclb
das
dec
xchg
fnstcw
and
popf
sbb
les
cmpsb
cmpsb
jle
sub
pop
inc
fldt
outsb
xchg
popa
orl
jo
decb
insb
inc
sub
inc
mov
xchg
dec
outsl
jmp
cmc
push
lret
add
rorl
test
xchg
out
in
cmp
xchg
scas
fimull
insl
dec
hlt
shrb
add
je
sbb
out
sub
pop
rorb
lea
jne
and
loopne
xor
pop
lret
dec
outsl
mov
packsswb
lret
adc
jle
cs
lret
dec
sbb
aas
sbb
xorb
sub
aad
push
mov
lds
popf
test
mov
mov
xchg
mov
xor
jg
adc
xchg
aad
test
and
into
or
or
xchg
cmp
fs
adc
ret
mov
adc
popa
gs
cmc
stos
ja
imul
xor
or
int
bnd
in
or
push
xor
lods
jl
or
push
imul
push
fidivl
daa
mov
sub
jecxz
xchg
cltd
mov
cwtl
pop
mov
adc
ret
mov
sbb
dec
add
cmp
aam
ret
sub
int3
shll
adc
pop
inc
popf
xor
lock
ret
mov
mov
roll
jmp
jmp
fsubl
rorl
push
inc
sbb
pop
or
push
sub
fdiv
sbb
jge
lock
ds
lahf
sub
fnstsw
stc
jp
dec
pop
jb
pop
ja
in
ss
mov
xor
iret
dec
jnp
adc
xchg
jl
sub
mov
pusha
stos
xchg
dec
sbb
pop
mov
mov
push
dec
test
adc
xor
xchg
mov
cmp
push
leave
pushf
das
out
pop
addr16
pextrw
push
mov
cltd
xchg
test
ljmp
jae
in
adc
mov
imulb
pop
int
mov
mov
movsb
pop
test
jp
bound
jecxz
mov
ja
stc
test
dec
leave
xchg
xlat
xlat
push
jb
cmp
push
adc
xchg
sbb
mov
fcomps
mov
mov
loop
jge
rcl
jp
lea
jmp
pop
arpl
cmovnp
pop
add
cmp
cli
in
push
xchg
pop
push
jp
jbe
cmp
fnstenv
ret
dec
scas
cli
push
lahf
ret
not
xchg
sub
push
dec
lods
pop
lret
mov
jmp
xchg
out
fcmovb
jmp
add
in
pop
and
ret
push
dec
or
pop
cs
sub
aaa
xchg
scas
pop
fildll
ja
cmp
push
insl
mov
or
mov
add
or
stos
daa
es
cmp
lods
ret
movsb
jmp
mov
push
nop
adc
lea
stos
lahf
aam
addl
or
lock
sbb
xor
aas
ljmp
xchg
pop
cmpl
add
jb
mov
xchg
dec
je
adc
sbb
and
fwait
movl
dec
pop
in
fcomi
xor
xor
aam
xchg
ja
xchg
das
add
or
shrb
enter
cli
test
stc
imul
punpckldq
xor
adc
push
cmpl
or
int
add
pushf
cli
nop
mov
std
mov
sub
push
inc
jns
add
mov
jl
dec
dec
add
pop
test
leave
xchg
xchg
push
fnsave
je
pop
adc
inc
sub
sti
cmp
daa
pop
out
nop
push
adc
jae
inc
cs
cli
adc
pop
pop
inc
jns
mov
pop
and
lods
xor
insl
fmull
lret
or
movsb
push
jbe
lret
lahf
imul
cmp
pop
fmull
inc
pop
lock
fdivp
fstp
aaa
cs
sbb
icebp
xchg
sub
adc
sahf
shrb
ss
jne
dec
icebp
xchg
mov
pop
es
repz
mov
scas
jns
test
sub
fildll
xchg
rorl
push
adc
test
dec
ret
and
add
loopne
xchg
xchg
or
or
icebp
xchg
inc
cmc
data16
movl
stos
cmc
sub
faddl
lods
xchg
jno
push
inc
mov
pop
cltd
inc
ljmp
jb
fwait
or
jmp
shrb
sahf
inc
mov
movsb
fnstsw
mov
movsl
pop
call
add
pop
lds
subl
fidivrl
mul
mov
stos
xchg
ficoml
sarl
mov
int3
bound
sub
testl
cmp
mov
leave
xor
stos
inc
les
xor
push
shlb
mov
and
iret
fmull
popa
pop
cmp
jecxz
adc
into
push
sbb
test
gs
mov
push
push
in
leave
stos
je
xchg
mov
pop
push
mov
lods
pop
pop
cmp
loop
inc
mov
in
push
inc
sbb
leave
xchg
push
inc
cld
leave
sub
popf
pop
iret
ret
roll
subb
int
test
mov
mov
adc
fidivrs
cmpsb
mov
std
add
aad
pop
cmpsl
sbb
pop
mov
sub
bound
dec
add
out
and
push
stos
jb
test
mov
mov
icebp
pushf
add
jo
adcb
cmpsl
les
imul
out
cli
or
cltd
mov
cmp
dec
sbb
lds
fbstp
mov
into
jno
pop
ja
aas
pop
mov
xor
sbb
pop
inc
insb
xchg
jo
mov
xlat
aam
add
jp
or
inc
push
fucomi
jg
jmp
adc
out
jbe
mov
hlt
xchg
adc
std
fisttpl
data16
lods
int
jno
rep
cmpsb
shrl
in
push
xchg
ficomps
fisubrl
aad
scas
js
fimuls
imul
andl
cli
jb
or
dec
das
shll
jb
frstor
sbb
out
test
xchg
in
bound
xchg
into
add
ds
shrb
bound
stos
shr
imul
and
pop
push
es
mov
in
inc
jae
mov
dec
jge
sub
jo
or
cmpps
jne
in
cltd
cltd
out
ret
mov
mov
mov
sahf
mov
outsl
pop
sbb
lea
jns
es
mov
cli
out
add
xchg
sar
or
hlt
insb
sub
cmc
enter
ja
push
in
iret
mov
aam
addr16
mov
leave
and
in
pop
shrl
pop
add
and
or
and
call
stc
xchg
iret
rcll
testb
and
pop
jae
ret
sbb
and
ret
stos
push
outsl
outsl
fiadds
add
add
leave
inc
les
add
aam
add
call
pop
subl
dec
je
arpl
or
andb
xor
sub
dec
or
sbb
mov
or
pop
stc
cli
es
scas
mov
xlat
roll
mov
jg
loopne
mov
pop
cld
mov
sbb
scas
pop
adc
or
add
out
push
out
push
fcoms
imul
shl
cli
nop
mov
aam
movsl
cltd
mov
test
push
mov
adc
dec
xchg
shll
rorl
push
je
mov
dec
inc
xor
adc
jle
sbb
mov
adc
adc
mov
in
sub
fsubrs
es
es
sub
fld
cmp
add
dec
xchg
pop
push
or
repz
rclb
inc
jl
out
add
mov
orb
mov
popa
mov
jae
int3
fsubrl
adc
lahf
ds
push
add
cmp
fisubrs
and
inc
adc
xchg
insl
pop
and
repz
adc
push
gs
lahf
ss
ja
testl
in
cwtl
repz
fdivrl
sub
lods
pusha
test
fdivs
inc
xchg
fdivrl
mov
fdivl
lds
lods
inc
movsl
lret
xor
repz
aad
imul
in
fildll
hlt
imul
push
dec
xchg
sbbl
mov
jnp
mov
cmp
jne
inc
inc
std
cmc
imulb
jae
repz
int3
pop
jb
xchg
bound
mov
aad
pop
dec
fnstsw
ss
xchg
xor
adc
or
sahf
pop
enter
push
js
sbb
in
inc
jnp
xor
sbb
negb
cmp
lods
aad
xor
movq
out
cmpsb
outsb
movsl
xor
sti
leave
pop
frstor
cmp
cli
push
add
dec
cmp
dec
jp
push
mull
xchg
inc
mull
adc
sahf
mov
imul
inc
pop
push
mov
test
ret
scas
jns
fstpl
test
inc
xor
pop
cmp
adc
scas
mov
pushf
dec
ja
adc
sahf
pushf
into
rcrl
push
xchg
add
dec
and
lock
xchg
lods
or
cli
daa
stos
int3
and
push
shrl
inc
scas
sub
ss
lea
pop
loope
sbb
lods
loop
mov
jecxz
inc
je
ljmp
test
cmpsl
xchg
jge
shr
xlat
shrb
iret
mov
lahf
mov
inc
xchg
rcll
dec
fsqrt
sub
push
addr16
sbb
and
jp
jbe
mov
in
xor
ret
popf
add
jg
mov
or
js
mov
in
xchg
push
dec
into
in
fsubrs
cmp
pop
dec
cmpsl
or
je
adc
add
mov
fisubrl
xchg
fists
add
test
xor
sbb
es
in
stc
add
orl
inc
push
daa
jecxz
loopne
mov
aas
mov
dec
int3
popa
adc
mov
mov
adc
orl
in
dec
or
push
mov
shll
mov
push
xchg
pusha
fs
jle
sbb
popf
mov
jmp
adc
fcoml
inc
cmp
mov
out
mov
ja
jb
pop
and
adc
aam
push
mov
dec
lret
repz
pusha
inc
xchg
mov
dec
push
clc
or
adc
popa
cmp
mov
iret
ret
mov
inc
bound
inc
lcall
in
add
or
arpl
pop
sub
test
and
or
jle
jbe
popf
push
xchg
clc
sti
out
cmp
fwait
xchg
aad
and
ja
daa
jl
mov
dec
pop
xchg
or
inc
ss
inc
mov
sub
mov
outsl
fldt
inc
push
adc
pop
ficoml
fnsave
jo
dec
push
das
jo
lret
dec
push
bound
pushf
test
sub
popf
push
sbb
xor
lret
lds
cli
lret
push
jb
jecxz
cmp
xchg
hlt
pusha
movsb
xchg
dec
idiv
adc
ljmp
mov
xchg
adc
inc
and
fwait
in
mov
push
cmpsb
insl
imul
bound
mov
xchg
arpl
jnp
aam
push
pop
adc
jb
test
mov
stc
cmp
mov
mov
push
jns
mov
pop
test
arpl
mov
adc
pop
inc
pop
loop
jo
cmpsl
lods
mov
movsl
les
xlat
and
pop
push
lret
mov
jg
mov
cli
mov
cwtl
mov
pop
mov
jle
stos
fstpt
adc
inc
dec
mov
sti
pop
pop
xchg
std
jl
mov
push
sahf
int
xchg
xchg
mov
leave
mov
jbe
or
pop
xorb
xchg
cmp
rolb
icebp
movsl
lock
insb
push
lods
arpl
xchg
test
test
dec
pop
add
data16
das
push
iret
sub
unpcklps
fistl
js
out
xchg
push
or
and
add
ret
int3
out
test
adc
into
sti
jbe
jl
cmpl
insl
and
dec
dec
cwtl
test
stos
push
or
mov
addr16
scas
xor
imul
xorl
lock
jle
test
push
ret
sbb
pop
adc
sub
xchg
pusha
mov
and
int3
jnp
dec
mov
cmp
push
lea
jns
jg
fistps
imul
adc
sub
fmull
lea
and
mov
out
sub
mov
icebp
push
ret
aas
ja
jp
pop
insb
aam
lods
pop
xchg
ja,pn
test
jl
mov
sub
inc
xor
and
sbb
sub
dec
dec
push
mov
enter
push
inc
xor
push
shll
xor
sbb
ds
outsb
out
sub
das
or
jo
aad
dec
cmp
mov
jle
cmp
mov
xorl
pop
mov
and
push
add
dec
xor
shrl
mov
ss
insl
stos
in
cmpsl
mov
xchg
sti
ljmp
mov
inc
stc
or
ret
mov
js
call
mov
nop
cmp
push
pop
ror
out
mov
mov
adc
sti
int
cltd
enter
clc
cmp
incb
ja
je
inc
stc
push
inc
cmp
mov
jbe
cmp
ljmp
or
add
mov
fisttpl
xchg
dec
fadds
ja
in
cmp
xor
xor
ja
pushf
mov
cs
push
addps
pusha
popf
mov
mov
jbe
mov
repz
adc
int
jge
pop
rep
subl
xlat
cmp
cmpsb
lods
cmp
pop
mov
call
xchg
and
and
cli
data16
rolb
add
xchg
pop
mov
mov
xor
scas
xchg
pop
aad
xchg
pop
arpl
fisttpl
lret
scas
int
jmp
outsl
in
adc
dec
push
lret
cmp
push
cmp
fiadds
popf
and
cli
fs
addl
pop
add
inc
pop
es
pop
and
rcll
pop
int
imul
and
jno
in
loope
adc
or
pop
push
shrl
push
cmp
cmpl
add
imul
or
jl
dec
push
int
imul
cli
mov
push
daa
inc
aad
push
adc
mov
pop
cltd
pop
hlt
xlat
adc
add
outsl
leave
jp
mov
jns
jns
add
leavew
jne
dec
js
or
inc
xor
shrb
aad
jecxz,pt
xchg
xchg
lret
xchg
shrb
cmp
addr16
jnp
dec
mov
notl
pop
insl
sub
or
jae
jb
push
jmp
and
popf
xchg
int3
adc
mov
test
mov
cmp
add
cmpsb
xorb
ss
and
lcall
mov
mov
pop
add
ror
js
fwait
sbb
imul
push
mov
sahf
mov
xchg
loop
inc
fldt
inc
test
mov
loop
pop
dec
jle
dec
jp
or
xor
mov
push
mov
into
mov
mov
lea
aaa
int3
mov
jo
xor
xor
stos
pop
cmp
sti
repnz
adc
or
sbb
jno
lcall
add
dec
add
gs
pushf
jmp
pop
xchg
iret
pop
inc
popf
test
mov
mov
push
lock
int
cli
movsb
ja,pt
sub
loope
aad
scas
mov
xchg
push
scas
add
sub
xor
and
mov
xor
cmp
push
icebp
scas
iret
push
mov
ss
or
xchg
sbb
push
or
jge
push
cmpsl
out
insl
sbb
xorl
pop
cmc
mov
mov
stc
lcall
out
mov
icebp
movsb
jne
out
fs
shlw
mov
negl
arpl
lret
bound
out
jb
cld
pop
inc
addr16
sbb
aas
pop
pusha
or
sub
inc
and
fsub
sahf
out
xchg
mov
ret
pop
jge
and
xor
jl
pusha
cmp
aaa
xor
lds
stc
mov
inc
fldcw
inc
dec
data16
push
jge
in
or
in
syscall
lret
popf
iret
je
test
lcall
cmpsb
sub
mov
sub
cmpsl
ret
add
dec
repnz
jl
xor
and
ret
push
lret
scas
dec
and
inc
pop
dec
mov
lahf
jecxz
sbb
xlat
jae
mov
call
fidivl
and
pop
mov
sbbl
flds
mov
xchg
int
mov
and
sbb
std
loop
movsb
stos
mov
lcall
inc
shr
mov
fidivrl
cmpsl
push
mov
pop
or
adc
imul
and
jnp
add
mov
mov
addr16
pop
adc
xorl
dec
out
sbb
and
bound
push
xchg
outsb
out
or
lea
lods
push
int3
movsb
cli
adc
mov
or
cmp
mov
dec
mov
daa
mov
and
and
out
mov
gs
arpl
pop
mov
jae
jne
mov
js
ljmp
dec
sub
insb
pop
int3
jne
lea
or
mov
dec
clc
mov
sub
and
cmp
jbe
dec
fisttpl
mov
push
inc
rcrl
scas
cmp
mov
test
mov
push
xor
out
je
call
pop
and
mov
sub
fstpt
fiadds
add
add
sbbb
insl
sbb
adc
je
pushf
mov
out
aaa
int
mov
push
leave
std
ljmp
inc
xor
ret
scas
push
shll
das
ds
addr16
jg
fsub
rclb
imul
jl
ss
push
xchg
cwtl
pop
jmp
mov
xchg
iret
daa
lods
lods
out
sbb
das
and
outsl
sub
jecxz
push
lcall
pop
movq
outsl
loope,pn
es
inc
inc
push
imul
sub
or
push
ja
icebp
mov
pop
xor
sbb
js
cwtl
mov
sbb
add
in
jae
pop
push
and
xor
jb
jno
dec
pop
or
gs
jne
add
sub
les
sar
ret
jmp
and
jmp
jae,pn
ret
and
test
jmp
xchg
inc
fdivs
out
pop
jmp
jbe
shrb
push
and
dec
cmp
fdivrl
mov
ss
pusha
xchg
jg
das
es
dec
mov
pop
and
shlb
in
test
nop
add
or
out
loope
mov
cmp
popf
sbb
in
pop
push
sbb
jecxz
inc
push
mov
sbb
xor
outsl
xor
jg
dec
lock
xchg
mov
mov
pop
pop
arpl
jnp
rcrl
sti
pop
insw
scas
dec
jmp
sbb
jp
sti
lock
gs
xchg
stos
fsts
add
xchg
lods
aas
dec
dec
sbb
dec
fwait
dec
fwait
mov
ljmp
adc
add
inc
loopne
mov
fcompl
add
scas
aaa
xchg
xor
fisttps
les
sbb
xor
insb
dec
mov
add
jle
outsb
test
movsl
int3
mov
aad
lock
add
in
push
fstl
loop
fnstsw
fldenv
dec
push
cmp
and
cmp
cmp
or
cmp
mov
adcl
out
cwtl
xchg
notb
xchg
test
inc
mov
cmp
sub
jp
sarl
or
cli
dec
jae
mov
push
mov
rcr
pop
push
lock
xchg
add
shll
mov
dec
inc
out
pop
fs
sbb
in
test
lret
bound
mov
fwait
lds
adc
xlat
nop
repnz
inc
icebp
std
jle
hlt
xor
shl
sub
adc
pop
sbb
mov
or
pop
insb
sbb
mov
jno
cmpsb
and
sbb
repnz
test
test
das
mov
rcrb
push
imul
in
insl
je
or
arpl
push
cmp
shlb
lea
repz
sarb
xor
out
jl
mov
xor
push
daa
xchg
xchg
lods
iret
mov
sub
ficompl
outsl
cmp
pop
add
lea
int
aam
out
cltd
iret
jae
data16
or
adcb
bound
sub
push
pop
nop
push
sbbl
aam
sbb
lcall
jno
mov
int
mov
or
mov
cmp
and
insb
add
adc
mov
sbb
push
add
hlt
cmp
int
lock
int
cltd
incb
add
cs
and
fs
adc
cwtl
daa
dec
loop
inc
inc
and
adc
push
sbb
xorb
mov
dec
and
inc
hlt
xchg
sar
jo
rclb
mov
xchg
fidivs
clc
stc
cmp
xor
das
and
lods
test
push
inc
out
andl
push
mov
pop
fbstp
out
ret
in
ljmp
out
mov
sbb
cmp
add
out
scas
or
xorl
insb
dec
and
jmp
xor
loopne
push
icebp
or
push
cmc
ja
push
sbb
push
pushl
fwait
pop
shll
rcl
adc
dec
adc
pop
outsb
fmulp
and
ds
jbe
ja
xchg
test
fcomp
mov
nop
lds
add
repnz
cmc
ret
into
ret
out
mov
pushf
pop
pop
aad
nop
jp
ret
sub
jle
dec
xorl
ljmp
test
dec
adc
sub
xor
inc
inc
std
and
lahf
orl
fs
outsl
cmp
imul
push
sub
in
shrl
sub
sarl
or
cmpsl
dec
mov
jle
pop
ljmp
pusha
xchg
cmp
dec
jae
gs
lcall
and
push
outsb
mov
pop
inc
ret
xor
arpl
cmc
out
test
pop
out
mov
push
jb
jne
add
sub
pushf
fsubrs
popa
mov
jge
dec
push
mov
and
sub
adc
out
inc
pop
ret
xchg
xor
das
scas
das
in
cmp
inc
aas
pop
sar
mov
xorl
sub
push
daa
frstor
xor
fxch
lea
jl
test
mov
adc
cmp
sbb
inc
lahf
mov
outsl
movsl
aad
enter
cmpsl
push
mov
lock
jge
mov
cmp
sti
pop
xor
mov
mov
adc
pop
enter
adc
xchg
cmc
xor
movsb
jb
inc
call
in
int
negl
lock
not
lret
push
lret
xchg
cltd
jle
add
add
jecxz
sub
or
xchg
movsl
xchg
or
inc
lods
sub
sbb
mov
out
outsl
xchg
sbb
mov
or
lds
sbb
fsubl
or
push
push
adc
jle
jmp
jnp
ljmp
and
aam
cmp
pop
mov
sbb
mov
std
enter
pop
inc
inc
cs
icebp
mov
jge
outsl
mov
jge
dec
imul
mov
push
cmp
es
out
decl
lods
add
mov
and
mov
inc
xor
mov
std
aaa
aas
repnz
sbb
pop
push
pop
or
sbb
push
int3
movsl
pop
arpl
jecxz
cmp
add
sbb
xor
clc
cmp
adc
jl
xchg
nop
in
adc
jns
in
add
sahf
xchg
pop
mov
pop
sbb
or
lret
lods
inc
into
cmp
movsb
lcall
inc
imul
mov
stc
dec
xlat
xorb
mov
cmp
dec
mov
mov
outsb
jmp
ljmp
daa
xor
in
mov
int
sbb
mov
and
mov
bound
in
test
mov
jmp
push
cmc
mov
add
repnz
imul
shl
dec
lret
dec
sahf
stc
jns
add
and
dec
mov
testl
inc
sbb
mov
iret
add
lcall
add
jnp
std
pop
sbb
stc
enter
das
repz
scas
add
idivl
cmp
xor
jge
push
dec
sub
shl
push
lds
add
repnz
lret
repnz
and
push
sti
add
nop
mov
in
lds
add
test
test
mov
pusha
test
jns
lret
pop
lret
lds
mov
fdivs
test
xchg
mov
add
adc
imul
jmp
cli
sub
lea
sub
stos
lret
ficoms
aam
es
mov
fbld
jns
cwtl
pop
sbb
es
shlb
std
mov
cli
pop
lcall
add
fnstenv
test
flds
jge
push
lea
ffree
dec
dec
push
push
cmp
ret
jae
testb
in
fisubrl
push
popf
gs
mov
jg
test
pcmpeqw
cmp
lcall
fs
lea
fsubrs
cmp
inc
inc
add
cwtl
jg
les
and
dec
dec
mov
and
mov
ja
sbb
add
cmpsl
inc
sbb
mov
subb
mulb
cmpl
out
push
jb
mov
pop
push
pop
orl
push
jbe
fcompp
imul
fidivrl
lea
mov
xor
cmp
add
cmp
imul
push
inc
insb
and
insl
pop
movsl
pop
loopne
cmpsb
lahf
sbb
addr16
mull
test
in
inc
in
movsl
jae
insb
sub
je
dec
orl
cmp
cmp
ret
sbb
mov
movsl
lcall
inc
sbb
mov
lcall
push
lock
jmp
inc
lahf
jg
push
bound
stc
mov
test
sub
pusha
pushf
and
cmp
adc
leave
push
push
inc
pop
scas
lea
push
add
icebp
lret
push
hlt
sub
lock
in
call
adc
in
lret
arpl
sub
mov
enter
test
repnz
test
sub
enter
pop
or
shll
xor
andl
jno
outsb
jnp
in
popa
push
mov
push
prefetchwt1
mov
push
es
and
cmp
lcall
in
dec
ja
mov
mov
mov
cmp
cld
inc
jl
dec
adc
adc
push
and
cmp
mov
test
pop
xchg
data16
int3
dec
push
or
push
pop
mov
ja
inc
xchg
fsts
jl
lret
add
lea
jle
sti
jb
callw
jge
clc
fs
sbb
js
xor
jnp
daa
pop
je
xchg
cmp
adc
shrb
xor
lock
sbb
fsts
repz
lahf
call
outsb
movsl
push
mov
pop
repnz
test
adc
add
or
cmp
insb
push
out
mov
or
add
loope
pop
sub
jno
icebp
aas
dec
je
sub
int
fcomps
mov
mov
xor
push
ja
push
jne
sahf
push
xchg
xlat
es
add
mov
dec
shlb
xchg
mov
ret
mov
ljmp
in
push
idivb
pusha
call
aam
repz
jnp
movsb
push
xchg
add
cmp
dec
push
fcmovb
pop
sub
stos
dec
inc
cltd
ja
hlt
sub
xchg
loope
lcall
or
pop
into
bound
jg
in
push
mov
inc
data16
inc
int
dec
dec
rcr
cmpsb
cwtl
clc
jmp
mov
lds
je
lea
adc
lds
sbb
insb
sbb
mov
mov
ret
add
adc
xchg
out
pop
mov
jl
mov
sarl
mov
test
sub
pop
pop
xchg
sti
mov
sbb
jmp
inc
mov
in
cs
out
imul
rcr
adc
push
loopne
mov
adc
adc
mov
sub
aad
je
ficomps
push
push
push
arpl
fwait
sti
push
loop
mov
mov
mov
cmp
push
push
mov
mov
in
push
ja
lahf
in
pushf
fistps
xor
mov
xchg
loop
ret
xor
xor
xchg
stos
ret
xor
and
incl
xchg
push
cmp
inc
fiaddl
mov
insb
sbb
testl
or
clc
fsts
ret
or
test
mov
mov
jbe
negb
xor
pop
jp
into
jg
dec
sub
cmp
ret
inc
jge
or
push
into
xlat
cmp
adc
repnz
dec
add
mov
fmuls
callw
xchg
std
add
mov
stos
je
push
repnz
and
sbb
inc
fsubrp
insl
idivb
push
enter
mov
push
cld
ljmp
cli
mov
test
adc
jae
fsts
push
or
or
movsb
ljmp
loopne
mov
jp
aaa
ret
dec
out
shll
push
dec
inc
mov
sub
jne
push
aam
repnz
in
jnp
push
insl
and
sbb
sub
lds
cmp
fs
pop
leave
add
lods
pop
data16
xchg
and
fcoml
inc
sub
xchg
push
pop
movsb
jle
enterw
jge
fadds
xacquire
dec
icebp
mov
mov
sub
xchg
fisttpll
jnp
mov
pop
and
adc
mov
xchg
ds
jo
xor
cmpsb
pop
in
insl
mov
mov
mov
add
nop
add
mov
insl
push
stos
aas
sub
leave
in
sbb
pop
sbb
out
add
testl
rcl
mov
lods
mov
mov
fdivrl
stc
cwtl
cmp
adc
sub
lahf
mov
pushf
xor
mov
pop
mov
imul
icebp
inc
pop
imul
cli
and
dec
daa
popa
add
out
xor
push
divl
aam
insl
inc
stos
out
mov
pop
ret
xchg
mov
pusha
sbb
cmp
movsb
adc
pop
sub
xchg
imul
minps
movsl
addr16
int
mov
dec
ret
sub
out
cwtl
movsl
xchg
test
mov
int
into
jne
iret
cmp
andps
mull
jne
dec
fwait
aam
add
nop
fnstenv
rcrb
push
cmp
dec
lret
mov
lods
mov
imul
cwtl
stc
cwtl
xorl
dec
pop
sbb
dec
aas
mov
or
and
push
ss
lcall
sbb
push
stc
gs
sti
push
iret
rorb
mov
mov
push
mov
aad
fwait
jl
xchg
xor
xchg
repz
in
pop
fidivrs
mov
test
lds
pop
mov
lret
or
add
inc
pop
outsl
lcall
xor
pusha
scas
pop
cld
loopne
mov
xlat
xchg
adc
mov
sbb
dec
aam
fs
test
mov
mov
movsb
call
outsb
mov
pop
mov
mov
xchg
cmp
mov
jl
cmp
xchg
inc
cmp
mov
lret
add
push
jae
dec
pop
dec
sub
aaa
popa
rcll
or
int3
imul
stos
xlat
movsb
and
push
jle
mov
les
es
insl
push
loope
or
ja
mov
jno
or
decl
lahf
ja
std
add
pop
mov
mov
inc
ret
popf
fsubl
cmpsb
sbb
or
out
push
cli
adc
cld
icebp
push
addr16
push
inc
pop
lds
and
inc
xchg
mov
fdivrp
stos
pop
aaa
fwait
je
add
insl
mov
std
lcall
or
clc
pop
adc
jle
xchg
cli
or
call
test
jns
jg
arpl
cld
pop
test
inc
cmp
sub
jp
subl
inc
js
mov
jecxz
or
es
out
dec
mov
mov
or
dec
push
and
push
jp
jecxz
scas
jecxz
aas
jae
in
add
sbb
daa
divl
xor
pop
lret
gs
sar
xlat
repnz
and
xor
or
jle
sub
push
mov
imul
jno
sbb
xchg
cld
mov
sar
mov
lods
mov
add
lds
loope
mov
or
sbb
dec
xchg
and
mov
rol
pop
cld
rcrb
addr16
and
sub
arpl
jne
lods
jl
jecxz
or
cs
push
ss
sub
je
jl
cmpsl
jp
cmp
or
push
outsl
fsubp
fldcw
js
sub
jg
xchg
adc
cmp
scas
xchg
lods
pop
std
loope
cs
pop
and
and
add
scas
or
cmp
lahf
sbb
mov
insb
pop
jnp
dec
cmp
sub
ja
mov
mov
les
pop
dec
pop
push
mov
jecxz
jmp
loopne
in
inc
adc
pushf
pop
push
mov
add
mov
or
lret
xchg
mov
inc
pop
and
call
add
xchg
arpl
out
mov
xchg
jne
fisubrl
jmp
repz
mov
mov
shrb
lahf
gs
orb
push
pop
lahf
mov
scas
inc
scas
adc
aam
jl
arpl
push
int3
push
sub
stc
xor
dec
lret
addl
sub
insb
jecxz
or
cmp
scas
pop
movsl
scas
test
fsubl
loope
sub
mov
sti
sbb
or
jl
jae
dec
pop
fcompl
shrl
je
bound
push
rolb
ds
jmp
lcall
mov
xchg
movsl
shrl
test
add
repnz
mov
sub
out
insb
sbb
call
aaa
sbb
mov
sbbb
pop
loopne
dec
cli
fidivrs
push
add
jmp
or
adc
xor
xor
xor
mov
aas
nop
jno
lcall
cmp
into
mov
sbb
int
arpl
xchg
and
xchg
jb
mov
adc
aas
dec
and
fs
pop
notl
lods
dec
pop
movsb
xor
lea
aam
je
mov
in
ja
test
push
mov
divl
inc
lods
or
sbb
icebp
xchg
xchg
pop
pushf
fmuls
mov
push
leave
and
popa
aas
sub
rorb
aas
mov
incl
aaa
notb
add
lahf
cmp
daa
dec
stos
inc
fstps
adc
pop
testl
loop
dec
movsl
lret
add
subb
movsl
push
insl
mov
mov
in
cltd
cmp
push
adc
loopne
and
andl
dec
pop
aaa
outsl
incl
loope
xor
inc
xor
test
les
unpckhps
fisubrl
cmp
jl
push
jnp
inc
mov
outsl
jnp
sbb
idiv
test
add
cmp
aaa
push
cmp
lods
pop
rolb
mov
xor
add
add
xchg
jo
add
mov
xchg
lret
sbb
lock
adc
cmp
sub
lret
jmp
cltd
das
xchg
out
jne
movsl
lea
jnp
gs
cmp
fbld
and
pop
repz
adc
popf
mov
xor
adc
call
push
inc
push
mov
icebp
adc
inc
mov
push
dec
movsl
mov
imul
gs
or
mov
loopne
push
pop
or
jbe
push
pop
add
xchg
aam
adc
pop
add
ja
dec
push
leave
xor
popa
dec
mov
jge
jmp
fsubrl
popa
lret
adc
rcll
cld
lds
xchg
cmpsl
stos
arpl
cmp
inc
jp
daa
xor
loopne
xor
enter
jno
lds
popa
ja
mov
pop
xchg
jae
mov
pop
cmp
in
pop
add
xchg
xor
sti
jb
inc
dec
push
push
and
je
dec
xor
popa
inc
dec
rcrb
push
jmp
arpl
addb
popa
push
ss
lahf
popf
movsb
jns
cmp
lret
inc
mov
or
in
mov
inc
hlt
enter
mov
ret
lds
pop
sub
fs
mov
push
call
dec
loop
and
rcl
inc
inc
mov
pop
dec
fcomps
lahf
outsl
test
xor
cmpsb
mov
mov
test
xor
mov
movsb
movsb
fnstenv
add
inc
inc
xchg
add
push
sbb
mov
call
sbb
or
or
movsl
cld
mov
dec
rorl
push
sti
hlt
shlb
rcrl
sub
mov
movl
mov
divl
mov
sahf
jnp
dec
pop
nop
shll
inc
mov
mov
push
sub
xor
lcall
les
and
inc
or
xlat
pop
mov
stos
jecxz
cmpsb
sub
nop
btcl
add
repz
mov
aad
or
adc
insb
mulb
sub
loopne
out
pop
mov
sahf
scas
lods
push
xlat
mov
mov
push
loope
mov
addr16
dec
push
dec
cmp
adc
push
push
or
xchg
jnp
out
cld
pop
popf
jmp
mov
adc
cli
outsl
data16
pop
loop
mov
sbb
arpl
imul
repz
out
in
mov
mov
dec
mov
inc
incb
hlt
stos
das
xchg
xlat
jl
dec
repz
xchg
lock
push
ret
ret
shrl
repnz
xchg
cmc
mov
mov
mov
fisubrs
mov
int3
movsb
adc
rcll
rcll
fcomps
out
cld
xchg
nop
push
arpl
ret
sarl
mov
dec
in
fs
push
cmp
mov
enter
clc
mov
repz
loopne
hlt
ret
xor
sbb
clc
dec
ljmp
adcl
sbb
push
adc
pop
xchg
xchg
mov
inc
movsb
lds
mov
xchg
adc
sahf
test
mov
mov
ficoms
xor
mov
aaa
imul
jmp
ret
stos
sbbl
int3
jl
aas
mov
dec
push
shll
sarb
mov
fwait
mov
pusha
mov
call
rclb
out
dec
das
jmp
sbb
or
fwait
pop
sub
xchg
sbb
xor
dec
jb
mov
scas
push
add
mov
out
xchg
inc
pop
ret
repnz
push
add
jecxz
and
ljmp
sbb
xor
ficompl
ret
jb
fbld
sbb
movsb
fisubl
lds
mov
stos
push
push
adc
mov
out
mov
sbb
ret
notb
xor
insl
or
iret
jge
mov
clc
or
sbb
sub
int3
inc
cltd
and
inc
adc
xor
add
fwait
or
mov
lahf
push
bound
in
mov
les
stc
sub
aam
mov
sbb
mov
std
popa
fisttpl
pusha
jge
icebp
pop
sbb
cld
notl
add
cmp
pop
add
test
xchg
out
jp
repz
shr
pop
mov
mov
out
aam
fwait
pop
jae
cmp
xchg
mov
mov
stos
jl
in
jg
popa
js
adc
ljmp
xchg
ds
mov
inc
xor
cwtl
mov
ror
dec
sarb
push
sbb
imul
dec
sub
aas
push
jae
in
inc
dec
hlt
popf
shrl
fcoms
jmp
popa
repz
and
xor
and
std
scas
mov
mov
icebp
pop
lcall
pop
xor
add
cmp
xchg
fcomip
jnp
xchg
push
add
jae
mov
mov
mov
mov
cli
cli
push
inc
add
movsl
aad
les
xor
addl
lds
jnp
mov
mov
into
mov
fs
dec
xchg
jg
pop
jle
xor
lock
xor
sub
sbb
pusha
add
cli
imul
and
jnp
or
testb
ljmp
frstor
inc
jp
je
jne
ret
fisubl
cmp
imul
sbb
adc
mov
decb
mov
mov
imul
inc
push
mov
pop
add
in
sub
jnp
jbe
push
lcall
daa
loopne
lahf
and
xorb
cld
fptan
cltd
popa
jle
pop
sub
negb
xchg
aaa
pop
and
xchg
popl
cltd
push
sbb
xor
test
inc
xor
cmp
pop
jns
push
imul
shrl
scas
xor
out
xlat
add
inc
push
orb
cmp
inc
push
outsl
scas
mov
mov
call
lcall
ret
cmp
xor
clc
add
cmp
adc
fcmovnb
push
repz
add
sub
aas
out
mov
leave
stc
dec
out
repz
int
sub
jge
adc
out
cmp
xchg
out
mov
loopne
inc
pop
pop
sub
in
mov
ds
or
or
out
inc
mov
stos
div
fnsave
add
xchg
push
or
and
push
and
mov
in
cmovno
call
stos
cli
in
popa
xor
popa
inc
sbb
adc
jle
dec
scas
fs
cmpsl
push
inc
jmp
stos
pop
pop
int
loopne
adc
movb
pop
in
int3
and
out
mov
movsl
cmpsb
cmp
sub
js
sub
stos
adc
mov
fmull
enter
sub
shll
stc
test
in
or
fucom
in
in
cmpsb
scas
hlt
stos
popf
xor
jnp
pop
adc
insb
hlt
mov
jns
xchg
shrb
adc
outsl
fs
andl
shll
pop
mov
sbb
dec
insl
loop
inc
fisttps
cmp
or
daa
inc
sti
mov
sti
pop
jge
push
sar
fnstsw
fwait
mov
fs
imul
adc
inc
push
sahf
sbb
inc
sbb
dec
subl
notb
adc
ds
jae
sub
lds
jb
and
into
jmp
popl
pop
mov
adc
pop
enter
dec
mov
inc
mov
pop
cltd
or
daa
outsl
sbb
outsl
sbb
mov
shrl
fsubrl
push
ja
adc
imul
or
test
jg
pop
es
cmp
push
sbbb
mov
sub
sub
push
sbbl
aas
arpl
adc
loop
add
inc
and
inc
repz
lea
mov
xchg
loope
iret
out
das
or
repnz
ror
mov
xchg
adc
sbb
notb
in
jo
test
repnz
cld
mov
in
mov
out
ss
xchg
mov
mov
fidivrl
lock
pop
cmpsb
fimuls
push
or
fmull
xchg
xchg
mov
aad
adc
mov
sub
ficoms
aam
rorb
and
xchg
int3
jae
jno
outsb
adc
testl
pushf
cmp
xchg
lods
cmp
jge
xor
in
push
js
xor
inc
sbb
inc
aaa
cmc
test
cmc
cmpb
sub
cmp
ljmp
mov
or
and
shll
add
inc
cmc
cmpsl
xlat
sbbb
and
out
mov
and
and
aad
aad
cmpsb
cld
sbb
or
mov
sub
add
aad
scas
cmpsl
lahf
jmp
or
cmp
mov
clc
mov
clc
loop
lret
iret
stos
add
xor
outsb
ror
xor
cmp
or
push
or
rcrl
fwait
mov
enter
jg
das
jo
xor
add
cwtl
inc
fidivrl
addr16
xchg
mov
js
sub
andl
sub
xor
lods
daa
ss
add
sbb
mov
fcompl
xchg
dec
sub
ljmp
dec
fstps
sbb
in
imul
insl
mov
cmp
cs
std
je
adc
ror
popa
loopne
or
hlt
or
imul
jg
mov
sbb
and
addl
sti
insb
mov
f2xm1
test
das
ds
xchg
pop
shrl
repz
dec
stos
cli
call
mov
fbstp
push
js
pop
lock
shlb
out
ljmp
sbb
movd
cmp
mov
sbbb
cld
fwait
push
mov
or
adc
push
idiv
call
push
sti
inc
push
jb
mov
push
sub
shl
jmp
sahf
inc
jbe
push
push
mov
gs
scas
pushl
insb
cmp
fstp
jne
xor
pop
cs
fwait
jnp
test
mov
add
jl
mov
aas
cmp
xchg
xchg
aad
sbb
lea
fisubl
sub
cmp
movsb
jne
push
push
add
scas
inc
mov
aaa
shll
hlt
call
fs
xchg
mov
mov
aam
icebp
in
insb
iret
in
shrb
or
loop
cmc
rorb
call
inc
lea
inc
gs
test
xchg
out
dec
loope
leave
cmp
or
lea
int
test
idivl
stos
fwait
push
push
in
stos
inc
dec
inc
shl
or
sbb
loope
inc
jns
adc
jne
int3
dec
xchg
mov
mov
sbb
out
sub
cmp
loop
cmpsl
inc
push
sbb
mov
pop
sbb
pop
popf
jns
inc
rcrl
ja
xor
filds
imul
fidivrs
ltr
sub
adcb
mov
push
mov
and
cmp
repz
ret
leave
cwtl
iret
or
mov
lcall
clc
stos
push
sti
stos
xchg
cmpb
int3
push
mov
add
pop
mov
scas
ss
push
xchg
inc
stos
adc
into
push
pop
sbb
sub
clc
sub
or
add
adc
xor
into
negb
ds
mov
inc
cwtl
into
adc
dec
inc
inc
sti
outsb
call
sub
jmp
xchg
fdivrp
js
imul
inc
jg
cwtl
dec
pop
cltd
int3
jp
hlt
xor
cld
pop
cmpsl
inc
mov
sub
dec
call
push
and
pusha
cli
push
add
xchg
adc
nop
xchg
test
xchg
mov
mov
jne
sahf
sub
dec
jnp
rcrl
xchg
and
dec
in
cltd
ret
sub
cwtl
xorl
dec
mov
xchg
adc
adc
mov
sbb
mov
fsubl
push
sub
ret
push
cmp
leave
and
mov
mov
and
ret
movsb
popf
sub
push
mov
fmull
sub
enter
idiv
int3
push
xor
aad
mulb
cmp
hlt
push
sarb
jbe
mov
aas
push
jnp
sub
pop
pop
jg
jo
stos
inc
jg
sbb
dec
hlt
mov
lds
ds
scas
sbb
jbe
jp
xchg
ret
push
cmc
scas
jge
sbb
sbb
stc
leave
stos
xor
lods
mov
bound
adc
inc
jecxz
adc
xchg
and
adc
inc
sbb
cmpb
test
pop
jo
inc
jp
pop
mov
push
scas
sti
stos
pop
cld
sarl
cmp
jne
fildll
call
jge
enter
int3
push
lret
test
mov
int3
ljmp
lods
cmp
xchg
or
xchg
into
cmp
cwtl
fistpll
xchg
rcr
mov
jae
in
inc
inc
xlat
or
imul
cmp
pushf
and
cmp
aad
jl
mov
pop
outsl
xor
mov
cwtl
jge
push
mov
aam
sbb
cld
imull
aas
js
pusha
cwtl
sub
sub
add
lock
popf
mov
call
paddb
rcl
daa
nop
sub
sub
dec
scas
loop
into
mov
cmp
or
leave
iret
add
inc
inc
stos
iret
lea
int
das
sti
sti
loopne
adc
cli
inc
repnz
jmp
mov
addr16
daa
and
push
jle
or
ds
xor
ret
add
test
mov
xchg
or
push
xchg
mov
and
rcr
push
bound
mov
inc
fildll
or
jbe
jno
cld
shll
inc
cmpsl
adcl
lret
or
mov
jo
stc
mov
mov
mov
ret
or
pop
cld
cli
lock
inc
sti
sbb
ja
mov
fists
add
fcoms
cmpsl
stos
cmp
push
pop
lods
rcr
fstl
das
imul
ret
cmp
or
lcall
cmp
fwait
jne
out
scas
jno
or
ss
add
outsb
adc
pop
xchg
pop
outsb
jecxz
xchg
fxch
in
xchg
idivb
stos
es
aad
jg
or
push
xor
sti
negl
adc
test
sub
pop
sti
out
loop
xor
adc
fs
pop
out
jae
jnp
sbb
or
or
adc
insb
stc
pop
aas
out
mov
cmp
or
or
dec
cli
mov
push
test
and
mov
fcmovu
cmp
addr16
rorl
inc
je
test
in
xor
dec
cs
test
fbld
mov
ljmp
sub
push
fcmovne
mov
xor
in
jnp
or
or
push
push
cld
ret
sub
fs
mov
lcall
jbe
jnp
clc
mov
jg
cmp
das
loopne
hlt
imul
or
in
orl
xchg
add
sbb
fdivrp
jl
xor
xchg
int
rcrb
xchg
jae
pop
mov
arpl
fimull
jmp
mov
bound
push
pop
sbbl
adc
cmpl
lock
imul
mov
std
inc
movsl
fcmovb
push
addr16
imul
mov
and
aaa
or
aam
movsl
mov
fcmovu
dec
mov
push
test
test
mov
mov
cs
test
arpl
dec
xchg
fwait
hlt
or
adc
and
xchg
sub
jecxz
mov
fildll
fisubrs
lret
xchg
pop
jg
cmpsb
dec
or
push
mov
push
cmp
cmpb
sub
lods
add
xchg
call
rclb
lea
jle
mov
psrlq
pop
push
dec
mov
mov
fs
cmp
mov
loop
pop
dec
or
fistl
push
push
das
fistpl
dec
les
testb
lret
pop
push
in
clc
cltd
jns
adc
sub
xor
jg
pop
inc
pop
shll
dec
int3
ss
test
enter
or
imul
imul
xchg
fsubrl
push
jne
in
ds
mov
lret
ljmp
ret
add
aad
mov
lock
xchg
pop
sbb
mov
mov
add
inc
cmp
mov
test
and
push
iret
shll
mov
adc
or
outsb
dec
or
sbb
insl
cs
neg
sbb
push
mov
dec
mov
jg
outsl
xchg
push
dec
sahf
or
or
jge
push
xchg
icebp
jae
pop
sub
jo
mov
iret
mov
jmp
sub
ss
cmc
jmp
cmpsb
roll
or
int3
ret
lea
lea
xchg
and
ds
xchg
jg
movaps
pop
imul
rcrb
into
fsin
inc
rorb
les
mov
lods
mov
push
lock
imul
xor
jmp
mov
adc
hlt
mov
test
mov
jo
and
cwtl
or
push
xchg
icebp
dec
adc
inc
outsb
mov
pop
jmp
add
cmp
sti
clc
cld
js
pop
push
inc
adc
add
sub
ljmp
mov
pop
test
inc
fwait
clc
or
mov
in
or
lea
sbb
xorl
cmp
cwtl
lret
sub
sbb
dec
sti
jmp
adc
push
mov
lds
inc
xor
and
inc
and
clc
mov
fwait
adcl
cmovle
jb
cmp
adc
jbe
mov
cwtl
outsl
push
push
sub
arpl
jle
call
cmp
sub
popa
xchg
push
in
fnstenv
and
add
jg
cmc
pusha
jmp
rclb
in
mov
jg
cmp
pop
les
mov
pop
ss
flds
jmp
dec
decl
mov
inc
test
mov
cs
fadd
pop
mov
aaa
dec
adc
fidivrs
inc
rorb
xchg
repz
mov
pop
sbb
pop
out
inc
orl
divl
test
push
dec
ficompl
mov
jmp
and
sbb
push
xor
xchg
int
xchg
inc
dec
xchg
inc
inc
dec
in
hlt
cmc
les
pop
push
mov
sub
pop
xor
or
xor
xchg
and
cmp
loop
test
mov
inc
inc
adc
femms
pop
fsubp
push
mov
add
jle
leave
dec
rdtsc
sub
in
xchg
arpl
mov
dec
jne,pt
scas
lock
push
test
sub
lret
mov
lret
cmp
fld
nop
test
xor
fidivs
loop
pop
fdivs
mov
enter
sbb
js
xchg
push
xchg
pusha
imul
mov
dec
scas
mov
sub
aad
ja
aaa
loopne
pop
pop
and
inc
add
xchg
push
cwtl
cmp
cmpb
nop
fld
sub
aas
mov
jp
sub
jmp
pop
jnp
or
and
test
jmp
insb
bound
sbb
es
xchg
sbb
inc
rclb
mov
and
inc
enter
mov
gs
outsb
mov
imul
mov
mov
sub
or
lahf
je
call
fwait
mov
test
cld
mov
fwait
ret
stos
or
test
lock
push
cmp
test
test
jns
mov
xor
and
sub
or
add
cmp
xor
mov
test
movsl
push
adc
scas
nopl
call
outsl
clc
in
xchg
dec
push
inc
dec
xchg
loopne
xchg
ss
loop
jg
stos
shl
xchg
inc
out
inc
ds
add
xor
or
ljmp
shrb
pop
das
stos
sub
mov
mov
ja
jb
fstps
testl
jne
fsts
sbb
cmp
jp
xchg
or
cmc
movsl
in
loop
pushf
fsubrs
into
xor
push
add
fyl2x
das
pop
lahf
xor
mov
adc
js
arpl
mov
and
cmpb
call
addr16
enter
mov
jge
ljmp
add
cmp
icebp
jno
jo
add
xchg
mov
testb
mov
mov
rcrb
sbb
mov
inc
or
ja
and
cmc
sub
xor
mov
jo
nop
xchg
rorb
xor
fistpll
jge
popl
xor
lret
pop
stc
sub
sbb
daa
push
pushf
push
mov
mov
dec
rorl
jbe
es
popa
dec
fdivs
and
call
mov
add
mov
aam
adc
dec
imul
or
mov
pop
mov
cmp
out
std
scas
sbbl
jg
dec
mov
iret
push
and
mov
pop
inc
and
inc
xor
sbb
xchg
stos
hlt
adc
shlb
loope
inc
bound
aaa
lods
test
mov
aad
pop
inc
lds
rorl
xchg
adc
gs
or
pop
add
or
adc
rcl
stos
cmpsb
int
cmp
or
mov
popf
cmp
in
jno
bound
add
pop
mov
out
pop
sbb
ret
repnz
divb
push
out
mov
mov
pop
push
or
xor
lcall
jp
jb
mov
or
jecxz
ret
inc
or
in
mov
mov
test
add
sbb
pop
pop
call
mov
fidivrs
xchg
adc
push
and
mov
jns
fwait
adc
dec
jae
add
stos
call
push
dec
adc
fmull
dec
xchg
inc
mov
add
push
mov
js
mov
sbb
ror
cmc
je
cmp
push
and
cmpsb
arpl
jne
push
inc
xchg
or
loopne
pop
je
aas
sub
cmp
xor
pop
mov
sub
add
cmp
mov
lds
adc
ret
mov
inc
fucomip
daa
or
jg
mov
stos
fwait
cs
jmp
jge
dec
mov
mov
xchg
pop
add
shr
out
icebp
pushf
push
in
pop
ret
cs
fcmovbe
shlb
mov
xor
jno
enter
cmpsl
std
sub
jb
sarb
std
mov
pop
shrl
bound
cwtl
jno
aad
int
movsl
xor
sub
outsl
jp
xor
xchg
inc
pop
sahf
ss
sub
inc
adc
xlat
and
mov
or
pop
mov
cmp
ljmp
pop
and
xor
mov
fcomp
fsubl
pop
dec
inc
push
push
js
mov
iret
sbb
xor
scas
sti
mov
sbb
out
imul
testb
aas
pushf
add
repnz
jecxz
add
mov
mov
insl
andb
inc
cmp
push
out
mov
pop
mov
dec
push
and
shr
sbb
pushf
jl
sub
push
add
xor
sti
jbe
jo
push
int
arpl
and
pop
lcall
into
cli
leave
loopne
mov
jne
nop
ja
mov
mov
out
dec
imul
push
out
inc
inc
daa
dec
or
xor
out
mov
fidivs
cmp
inc
sub
xchg
push
les
negb
ljmp
popf
fs
lcall
add
testl
dec
inc
iret
inc
xchg
jns
pmullw
popf
leave
ds
fimull
outsb
mov
pop
std
and
fcomp
imul
mov
rorl
push
or
mov
lea
das
scas
sahf
mov
cli
cmpsl
inc
neg
dec
cmc
fs
push
mov
int
push
repz
dec
mov
mov
pop
ja
push
pop
das
popa
cs
sbb
std
add
jle
sbb
leave
push
xchg
lcall
stc
mov
add
mov
pop
shrb
loop
and
test
enter
or
xchg
xor
push
or
call
aas
sbb
adc
scas
and
outsl
test
pop
aaa
insl
push
sbb
jnp
or
dec
xchg
jg
cmpsl
jge
dec
pop
cmp
xchg
jo
jns
lcall
shl
scas
pop
mov
inc
xchg
stos
ss
and
rcl
fs
lods
xchg
sahf
adc
or
jo
insl
outsb
or
leave
mov
jae
sbb
adcl
inc
pop
push
test
roll
jno
sub
sbb
lahf
lods
inc
iret
dec
cmpsl
sbb
mov
cmpsl
dec
sub
or
sbb
fstps
jno
scas
and
adc
call
jmp
mov
out
jle
int
fwait
sbb
iret
into
mov
mov
mov
test
jbe
mov
jmp
xchg
push
pop
pop
enter
fwait
sti
lcall
lods
iret
call
jae
loopne
dec
mov
rorl
pop
aam
cmp
mov
sub
stos
xchg
dec
ret
insl
shlb
dec
imul
dec
out
and
adc
in
adc
jnp
xor
jo
jecxz
fnstcw
repnz
test
pop
dec
out
mov
xor
mov
fxch
mov
sbb
cmp
add
mov
sub
je
aas
pushf
and
cmp
mov
dec
cmp
popl
insb
es
cmpb
stc
mov
inc
bsf
pop
pop
xor
sub
ret
aaa
and
sub
mov
xchg
lods
sub
push
scas
mov
pushw
add
mov
mov
mov
int
cmpsb
out
cltd
das
imul
add
fldt
cmp
pop
ror
hlt
sbb
int3
push
cmpsb
xchg
and
pop
pop
insl
out
and
notb
pop
pushf
das
fdivs
push
xor
push
pop
xchg
test
popf
ret
outsb
rcrb
lods
nop
mov
mov
movsl
clc
inc
push
or
mov
insb
daa
push
les
mov
loop
dec
xor
ds
inc
ds
xor
and
inc
pop
jne
popa
xor
arpl
adc
es
ret
fwait
stos
sar
push
sahf
xor
xchg
sub
pushf
jp
or
sbb
in
mov
int3
sbb
and
lahf
out
test
push
aad
test
xor
jo
mov
addr16
xchg
test
sbb
sub
out
ss
insb
out
in
rorb
testb
mov
add
mov
jne
mov
out
inc
cli
xchg
push
jg
jb
sub
adc
in
repz
nop
mov
cmp
cmp
mov
dec
mov
rorl
imul
test
cli
out
xlat
ja
insl
ss
aad
add
fstl
cmp
js
sbb
or
fistl
and
orl
mov
adcb
xchg
push
repz
mov
out
push
push
adc
or
xorb
jb
xchg
xorl
jnp
push
mov
dec
ficompl
mov
icebp
bound
xchg
xchg
aam
out
push
outsl
push
sub
frstor
loop
orl
dec
aad
add
aaa
mov
stos
aam
cmp
add
and
imul
cmp
jbe
push
stc
push
mov
add
repz
sti
cmp
addr16
push
call
imul
cmp
cwtl
mov
daa
enter
arpl
stos
adc
mov
lea
mov
adc
mov
cmp
cmp
adc
out
inc
push
test
mov
into
test
roll
out
int3
dec
cltd
cmp
icebp
shll
popa
mov
int
sbb
pop
ljmp
out
jge
lahf
xchg
pop
dec
or
sub
imul
aam
out
je
sar
repz
inc
mov
test
xchg
mov
movsb
adc
sub
pop
push
and
fisubs
push
or
xchg
dec
inc
mov
flds
sbb
mov
adc
mov
cmp
dec
add
jge
fildl
push
push
mov
xchg
jge
aad
rolb
sub
test
jns
dec
push
xchg
adc
leave
mov
xor
in
adc
jnp
pop
ds
mov
xchg
js
cmp
xchg
aas
mov
outsb
jns
xlat
inc
pushf
je
iret
xorl
jl
out
insb
inc
mov
sub
sub
lcall
push
out
out
xchg
and
daa
xchg
stc
mov
popa
int
addb
mov
test
or
jp
jge
aas
xchg
sub
mov
cmp
fists
jae
popa
pop
add
das
dec
dec
dec
push
fisttps
ljmp
cmovle
push
lret
pop
push
out
dec
add
dec
outsl
fistl
push
repnz
add
mov
or
mov
addr16
add
pop
jecxz
dec
aam
sbb
int
mov
dec
fistpll
andl
call
mov
mov
pop
mov
fcmovnbe
push
mov
mov
divl
jbe
out
in
jl
jmp
mov
outsb
adc
lret
jb
movb
je
sub
in
add
and
push
cmp
dec
mov
inc
push
fisttps
aam
flds
std
jno
lock
fnstenv
sti
inc
mov
fdivrl
pushf
dec
int3
sbb
sbb
call
push
xchg
inc
pusha
mov
je
pop
jmp
push
jge
sbb
data16
add
mov
and
sbb
je
popa
lock
push
mov
popa
fbld
jp
pop
iret
push
out
lahf
neg
dec
lds
xor
jl
dec
pop
fmull
xlat
pop
xlat
and
jmp
in
cmc
out
lea
sbb
jb
mov
or
xchg
jnp
lcall
loope
sahf
imul
xchg
push
imul
js
outsl
popf
int
and
testb
push
cltd
sub
pop
push
mov
pop
xchg
lock
or
push
jb
nop
add
mov
cwtl
insl
cmpsb
push
push
popf
xchg
push
mulb
jl
icebp
scas
pop
dec
inc
mov
sub
fcoms
inc
sbb
movsb
push
cmp
shll
add
add
add
mov
jg
std
jo
lcall
inc
data16
aad
xchg
xor
mov
mov
shlb
xor
jl
pusha
cmc
xchg
push
or
cmp
imul
push
jns
mov
ja
icebp
lcall
sarb
nop
pop
cli
insb
xor
add
das
popf
sbb
mov
scas
sbb
push
push
iret
lds
push
mov
pop
imul
fistpl
das
shlb
ja
jp
dec
push
push
and
xchg
adc
pushf
insl
shlb
lea
xchg
mov
add
ss
sysexit
and
incb
add
cmp
push
adc
xor
dec
jmp
clc
fwait
int3
scas
pop
push
sub
cmp
xchg
lods
jno
out
jb
dec
mov
cmp
ss
sbb
sub
leave
jbe
pushf
sbb
mov
stos
ljmp
inc
push
lds
gs
cld
fists
lcall
xor
mov
sub
xchg
mov
in
pusha
push
fists
lret
loope
stos
into
xor
aaa
repnz
jge
leave
lea
hlt
dec
mov
movsb
mov
dec
inc
sbb
adc
dec
sub
push
sbb
popa
es
add
xor
out
mov
rcl
int
cmp
mov
out
notl
jo
adc
pop
sbb
insb
add
cmp
fdiv
and
pop
faddl
ljmp
je
dec
sti
or
lret
lret
dec
jne
dec
insl
cmp
imul
pop
test
lods
lcall
xor
jno
sbb
fs
jae
fwait
stc
xorb
jecxz
xor
xchg
mov
cli
imul
int
xchg
xchg
sbb
inc
push
inc
jno
ljmp
andb
xor
add
cmp
jns
add
inc
cmp
jnp
mov
inc
lret
sbb
hlt
sbb
jbe
or
ror
lea
pop
loope
or
pop
xor
jno
sbb
or
sbb
push
mov
je
push
sbb
add
cli
cmp
pop
icebp
mov
jns
cwtl
xchg
imul
ret
adc
mov
test
or
stc
dec
loopne
in
adc
out
shrl
lods
not
dec
les
out
inc
rcll
into
movsb
pop
dec
test
call
push
mov
inc
xlat
sti
xor
or
inc
and
js
xchg
inc
push
stos
scas
add
ja
mov
pop
jp
dec
add
jg
pop
in
insl
mov
cmpsb
pop
sub
js
cmpsl
fwait
sahf
dec
push
dec
mov
jg
jp
sub
stos
loop
pop
les
jb
xor
jp
rclb
push
je
push
or
mov
data16
jae
sbb
pushf
add
in
mov
mov
sbb
pop
add
push
and
xor
push
xor
shll
cli
push
push
sbb
mov
bnd
jns
mov
sahf
jl
out
ror
mov
popa
mov
mov
scas
cmpsl
mov
xchg
xlat
mov
cmp
jmp
jae
scas
mov
je
inc
xchg
std
sub
repz
jnp
jnp
leave
arpl
push
ficoms
je
sbb
or
xchg
and
mov
daa
sub
dec
lret
outsl
fwait
jmp
aaa
lahf
rcll
inc
jo
mov
ficompl
inc
punpckhwd
jp
inc
jmp
inc
leave
push
lock
out
ret
imul
xor
or
ljmp
and
inc
adcb
mov
xchg
mov
repz
test
imul
inc
dec
test
int3
into
sbb
lret
xor
fidivs
lods
cwtl
fsub
aam
jno
push
xchg
fwait
shl
jno
mov
pop
push
cmpsb
ret
mov
fildll
int3
pop
sbb
cld
mov
into
data16
fs
out
add
outsl
cld
fiaddl
mull
dec
push
mov
and
bound
sub
test
orl
inc
test
test
rol
jb
add
cmp
inc
mov
jle
mov
testl
inc
cli
movsb
push
sub
out
orl
movsl
rolb
int3
pop
outsb
push
sub
aas
cmp
xlat
sbb
repnz
cltd
sub
xchg
popa
scas
es
pop
and
test
cmp
in
in
je
inc
je
adc
dec
jle
add
mov
ja
pop
pop
fldl
fwait
outsl
or
dec
clc
repnz
fimuls
mov
dec
aaa
cmp
data16
jg
add
fcomp
popf
ss
dec
lahf
ret
nop
ds
or
pop
mov
daa
dec
or
xor
dec
push
mov
inc
add
into
imul
lret
mov
ret
cli
outsl
iret
lahf
or
fisubrl
mov
mov
jnp
sbb
xlat
js
data16
sub
and
popf
dec
adc
and
and
bound
jne
cs
cs
lret
leave
add
lret
sbb
in
dec
jno
cmp
sbb
mov
movsl
lahf
and
mov
add
mov
cwtl
les
imul
push
inc
call
mov
mov
out
mov
xlat
unpckhps
jnp
repnz
loopne
lods
popf
mov
mov
mov
call
jecxz
inc
ret
stos
mov
cmc
push
or
lods
add
mov
xor
jne
jmp
mov
jb
sub
or
cmp
stos
enter
pop
hlt
loope
or
mov
mov
ret
inc
scas
mov
int3
pop
into
push
push
xchg
jge
or
fsub
mov
and
push
lock
fistps
mov
sbb
mov
mov
call
fsubrl
mov
inc
ja
mov
rorl
add
jge
mov
ss
cld
inc
xchg
jge
sbb
shlb
xor
addl
popf
das
sti
xchg
dec
pop
pop
dec
jle
movsl
testb
add
xchg
push
stos
cmpsl
jnp
cmp
mov
pop
lahf
enter
repnz
orb
mov
lea
add
adc
adc
fists
xor
rcll
ficoml
bnd
inc
jns
inc
les
jo
cmp
clc
sbb
aaa
xchg
mov
or
fcmovnbe
sti
movsl
inc
stos
popa
pop
into
add
aas
sbb
sbb
xchg
inc
mov
dec
lock
insl
add
sbb
sbb
imul
rclb
das
mov
enter
loopne
or
cmp
mov
mov
dec
stos
loope
inc
push
out
mov
sub
hlt
mov
shl
clc
popa
mov
jecxz
sti
out
jns
jb
inc
cmpsb
pop
dec
mov
mov
xor
xor
fs
fucomp
and
jg
stc
xchg
pop
xor
add
out
cmp
enter
add
or
fldcw
rclb
sbb
push
aaa
js
lock
cs
lds
inc
jmp
push
jp
daa
cmp
into
push
int3
jno
jle
mov
inc
test
pushf
mov
or
jmp
pop
emms
test
in
inc
lret
pop
test
or
lret
jb
pop
inc
mov
cmpsl
mov
and
mov
rcll
mov
push
mov
leave
repnz
rorb
cmp
cmp
es
fists
adc
insl
sub
adc
push
cltd
jnp
jno
sub
inc
lcall
xlat
jle
enter
push
movsl
ret
cld
fs
int
test
hlt
aad
sub
popf
aad
ss
mov
ss
daa
xchg
pop
sbb
icebp
cld
or
popa
push
popa
push
fwait
ja
push
fstpl
jmp
sbb
cli
mov
les
jnp
in
jg
jecxz
test
xchg
pop
fcmovb
add
test
sbb
inc
pop
addr16
adc
jmp
jmp
int3
cmp
pop
cmp
sbb
mov
stos
es
pop
dec
jb
lret
faddl
repz
push
sbb
push
pop
add
mov
push
sbb
xchg
jae
les
jmp
xor
ret
fmul
xor
mov
ret
sbb
push
popa
test
icebp
sbb
jecxz
popa
xchg
sar
inc
push
add
das
mov
fiadds
sbb
mov
mov
cmp
mov
mov
fidivrl
push
rorl
inc
pop
out
or
outsl
sub
dec
sbb
loop
pushf
cmpsl
mov
fwait
loopne
jbe
sbb
push
into
enter
test
mov
rorl
mov
push
or
inc
out
test
xchg
sti
or
out
fldenv
dec
and
xorb
inc
lea
cmp
ljmp
sbb
popa
dec
ss
js
enter
xor
push
cmc
bnd
cltd
ds
lods
xor
faddl
cwtl
dec
mov
es
mov
mov
rep
cltd
mov
xor
sub
stos
les
iret
jbe
pop
out
jne
arpl
fsubs
xor
movsl
add
xor
popf
iret
dec
and
or
mov
jo
clc
push
pusha
push
lcall
gs
fnsave
inc
shlb
pop
mov
inc
jge
ret
add
push
into
or
bound
or
xchg
scas
push
jbe
int3
jbe
std
rclb
cli
jo
push
pop
sbb
cmp
out
jnp
fwait
mov
jnp
mov
push
xchg
and
mov
cmp
or
xchg
out
jmp
xchg
or
cmp
mov
mov
pop
sti
or
mov
arpl
inc
push
jns
rcrb
mov
and
std
hlt
ror
outsb
lret
sahf
mov
xor
cltd
test
jg
iret
mov
dec
fwait
or
rcrl
lock
add
sub
xchg
fwait
sbb
int3
add
push
fwait
pop
or
shll
in
sahf
sub
or
xor
subl
add
cmp
jnp
ja
pushf
mov
or
mov
dec
mov
and
dec
pop
push
inc
inc
pop
mov
stc
test
push
adc
subb
pop
xchg
mov
aam
ds
repnz
jb
add
lea
sbb
enterw
add
cld
mov
push
mov
adc
leave
xchg
test
mov
mov
push
or
jns
xchg
dec
shrl
push
jnp
popa
ljmp
mov
test
shlb
int3
dec
repz
and
mov
ret
push
push
mov
xor
in
mov
cmp
mov
inc
ret
or
mov
mov
xchg
std
adc
sbb
shlb
icebp
adc
sub
mov
in
mov
outsl
cmp
sbb
and
mov
js
outsb
std
lock
andb
cmp
int
cmp
bound
jae
outsb
dec
ljmp
xor
sub
in
pop
lret
sbb
nop
push
dec
fisubrs
adc
movsl
call
inc
lcall
xchg
in
and
mov
mov
mov
or
dec
aas
mov
sar
std
xchg
imul
out
test
pop
add
inc
bound
dec
jmp
nop
push
lea
xor
adc
cmpsl
inc
subl
push
popf
add
inc
sbb
lahf
enter
push
mov
movsb
adc
insb
mov
mov
and
sbb
sbb
mov
in
jne
pop
push
push
adcb
hlt
inc
ds
testb
frstor
jo
aam
push
xchg
test
stos
jg
jbe
mov
jo
icebp
popa
inc
xchg
es
adc
push
mov
popf
pop
pusha
push
mov
adc
icebp
aaa
icebp
es
sbb
cmp
fldenv
or
sub
xchg
int
mov
inc
mov
mov
int
add
nop
lahf
xchg
cmc
cmpsl
dec
cmp
inc
mov
mov
ljmp
mov
mov
fsub
icebp
xor
enter
and
mov
outsb
jge
pop
leave
mov
bound
adc
inc
xlat
sarl
ja
adc
jbe
adc
jmp
sti
popa
aas
mov
dec
lock
call
sbb
push
push
test
int
popl
sti
out
push
rep
mov
subl
pop
mov
outsb
jge
xor
jmp
or
push
ljmp
repnz
push
movsl
xchg
fs
pop
imul
mov
mov
cmp
ror
xchg
pop
pop
cmp
or
jns
mov
xchg
xor
fistpl
xchg
adc
test
xchg
ret
sbb
js
xchg
sbbb
mov
aas
in
adc
cld
pop
fwait
pop
scas
sub
or
jnp
das
in
cmp
jno
je
fimull
jb
test
sbb
jns
cli
jl
or
aas
pusha
call
outsl
dec
nop
pop
push
rcrl
pop
test
xchg
inc
popa
inc
test
out
aas
add
test
inc
ja
sbb
jge
stos
cmp
imul
lret
or
xchg
outsl
or
pop
fcmovbe
xorl
test
xchg
pop
jo
and
add
fldenv
imulb
pop
adc
inc
dec
push
inc
filds
jmp
sbb
xor
ja
movsl
leave
faddl
jno
adc
cs
sub
in
std
pop
pop
push
xor
mov
sbb
pushl
sbb
sub
callw
loope
ss
mov
push
push
inc
dec
in
cld
pop
mov
mov
mov
lods
mul
and
loope
adc
sub
xor
xchg
xchg
jne
nop
fwait
cmp
adc
mov
inc
scas
adc
cmp
stos
xor
xor
leave
push
in
cmp
lds
mov
push
cmpsl
xchg
lret
test
cld
mov
enter
mov
ret
mov
daa
push
and
dec
inc
cmp
jmp
pop
cmp
out
mov
mov
xor
clc
fisttpll
sub
stos
xor
pop
inc
fnstenv
cmp
mov
data16
dec
out
sbb
das
xor
sbb
dec
orb
addr16
jnp
adc
pop
dec
push
stos
jmp
or
pop
inc
scas
or
push
nop
shl
mov
sub
add
cmp
iret
into
idiv
je
dec
mov
inc
or
mov
xchg
gs
outsb
dec
into
sbb
sarl
jnp
push
loop
shl
into
cmp
push
jp
out
lods
sahf
pop
and
push
imul
mov
pop
add
jb
test
movsb
pop
in
int
push
inc
in
mov
sub
jmp
fwait
sbb
mov
push
jmp
stos
ss
push
lcall
cmp
cmpsl
mov
into
jmp
scas
mov
loopne
out
outsl
add
aad
jne
popf
enter
and
dec
pop
in
es
mov
or
push
dec
mov
pop
imul
xor
aad
out
mov
daa
adc
add
add
adc
xor
mov
push
aam
xlat
adc
cmp
adc
mov
gs
dec
in
test
pop
fidivl
cmpsb
xchg
add
inc
enter
sub
inc
cli
aam
ljmp
pushf
insl
jmp
inc
ss
decb
dec
popf
pop
dec
adc
roll
ss
hlt
dec
inc
push
ficoml
iret
popa
out
insl
sub
movsl
rorb
mov
add
ret
jae
in
roll
mov
ja
sub
jnp
pop
inc
bound
fistl
add
outsb
bound
dec
mov
aam
adc
stc
ret
cmp
jne
clc
xor
rcll
xor
xchg
mov
ds
movsl
sbbl
sarl
mov
inc
lret
push
arpl
popf
sbb
or
mov
out
and
shrd
xchg
mov
ss
shlb
inc
jnp
jne
test
xchg
lds
mov
and
subl
xchg
ret
loop
cmp
cmp
mov
enter
fisubl
pusha
push
xchg
testb
fs
leave
sub
aas
inc
es
cmp
and
mov
pop
mov
mov
push
lods
repnz
jge
and
call
cmp
mov
and
push
popa
scas
mov
std
inc
adc
shrb
inc
adc
sbb
iret
in
insb
mov
movsb
pop
mov
ffree
mov
sub
dec
mov
or
paddw
push
push
inc
scas
pop
or
lds
and
push
mov
cld
jl
lods
mov
pop
add
faddp
test
test
pop
out
and
flds
or
out
lahf
xchg
jp
outsb
in
xor
lcall
mov
adc
inc
mov
and
data16
cs
nop
subb
lds
xchg
inc
or
mov
cld
fdivp
dec
mov
mov
push
lret
or
ror
or
mov
iret
inc
push
lods
push
sbb
loope
pop
sub
xchg
pop
cmp
add
adc
jmp
daa
adc
out
mov
jae
nop
xchg
cmpsb
sbb
add
lea
out
ljmp
sbb
mov
rcrl
bound
dec
mov
add
xchg
adc
inc
adc
mov
call
pop
movsb
decl
dec
ret
sbb
and
rcl
xchg
daa
inc
dec
xchg
dec
fidivl
jb
mov
loope
or
ds
jl
jg
dec
inc
push
or
pushf
push
jg
mov
repz
push
add
fcom
aam
mov
into
add
test
test
daa
mov
jno
nop
cld
sub
xchg
inc
mov
imul
lds
leave
int
jbe
cs
mov
pusha
pop
xor
in
dec
imull
inc
add
ret
fisttpll
or
test
cs
mov
inc
call
adc
out
jo
adc
int
xlat
or
movsb
fld
inc
test
lret
shrb
mov
push
ljmp
pop
test
dec
sbb
or
xchg
hlt
fidivs
mov
pusha
push
cmp
mov
cmp
pop
mov
lea
sbb
mov
pop
std
mov
popf
test
leave
add
pop
mov
loop
cmp
out
mov
hlt
ret
fdivl
cli
aam
sbb
sub
mov
mov
mov
mov
push
je
adc
test
int3
in
cs
divb
cs
cmp
dec
scas
and
movsb
je
addr16
inc
inc
addr16
aad
jl
mov
daa
sub
shr
mov
test
rcrl
leave
inc
add
inc
aaa
shl
popf
aaa
sbb
mov
adc
mov
mov
fsubp
pop
lods
and
lret
mov
xorl
adc
lcall
mov
fisttpl
push
xor
and
outsb
mov
lds
sti
out
cmp
std
stos
push
cmpb
jne
mov
lds
fs
repnz
pop
pop
or
jns
call
mov
push
test
setge
xor
add
lcall
cmp
daa
pop
in
inc
push
sbb
adcb
js
into
cld
dec
out
mov
mov
pop
push
rorl
fwait
mov
inc
and
jo
and
jae
xor
icebp
push
stos
gs
dec
lea
add
mov
cmpb
jbe
movsb
push
lods
mov
enter
ljmp
adc
inc
lcall
push
stc
xlat
das
pop
mov
push
xor
jb
dec
push
mov
das
fistps
mov
dec
daa
dec
and
jmp
mov
dec
mov
cs
dec
in
pop
inc
pop
int3
scas
in
and
les
xor
lahf
xchg
mov
popf
cmp
cltd
and
ds
out
mov
cmc
jns
and
jbe
addr16
inc
or
ficoms
and
test
sbb
xchg
pop
lods
aad
mov
xor
cmp
std
add
cmp
aam
jbe
loop
inc
lcall
lret
xor
xchg
movl
lods
and
pop
popf
aad
cmp
add
mov
jmp
pop
sbb
push
leave
aam
loope
and
inc
sub
out
xchg
adc
outsl
add
sub
push
jo
pop
imul
pop
cmp
lds
stc
cmp
or
pop
add
dec
scas
fstpt
sti
sahf
sub
cmp
scas
jno
jmp
lock
mov
jmp
dec
mov
xchg
mov
insb
cmpsb
cmpsb
out
fcoms
xor
and
inc
dec
pop
imul
lods
dec
add
inc
arpl
aaa
dec
insb
jne
push
xchg
sub
pop
out
jae
inc
add
or
nop
movsl
xchg
push
xchg
aas
lds
inc
mov
mov
repnz
add
insl
pop
xchg
das
out
les
into
addb
ret
mov
ljmp
mov
fninit
mov
xor
and
dec
cmpsl
hlt
push
ds
std
dec
das
mov
addr16
or
sbb
insl
sub
add
lret
sub
xor
or
nop
xor
push
imul
pop
adc
aas
adc
jmp
ja
negb
pop
ffreep
mov
add
into
mov
inc
andl
daa
shrl
dec
ret
out
mov
andl
fdivl
es
lods
enter
lods
sub
inc
mov
mov
repnz
pop
icebp
aam
outsb
mov
in
insl
mov
das
subb
ret
cmp
mov
mov
loopne
xor
or
je
dec
retw
ss
fisubrs
es
sbbb
in
insb
in
or
jno,pt
lea
mov
js
cmp
and
adc
add
jle,pt
mov
stc
leave
mov
lock
insl
imul
push
or
out
pop
dec
pop
ret
jecxz
icebp
insb
int
inc
xchg
gs
xchg
push
jle
mov
call
mov
jmp
mov
daa
jnp
in
xchg
xchg
or
pop
rcrl
ss
ficoml
mov
inc
pop
cmc
jno
ret
mov
pop
cmpsl
cltd
pop
pop
mov
jns
arpl
cmp
mov
jne
mov
fnstenv
cmp
dec
test
or
aaa
xchg
scas
lcall
and
dec
dec
ds
push
sahf
xchg
rcll
cmpsb
push
adc
mov
lsl
rclb
sub
lods
xchg
add
adc
adc
jae
push
xor
les
js
notb
insl
cmp
icebp
sbb
push
add
mov
adc
mov
xor
jmp
sub
ret
xchg
and
lahf
push
rol
pop
out
insl
xorl
clc
jnp
sbb
daa
or
cmp
clc
mov
push
add
pop
pop
pushf
inc
sti
pop
mov
lahf
mov
into
pop
add
std
repz
lock
leave
andb
sti
in
mov
gs
push
add
mov
fmull
jb
add
ljmp
jae
cltd
push
out
or
sub
repnz
std
add
push
repz
push
push
mov
or
and
in
adc
pop
aad
add
cld
scas
cltd
mov
adc
jge
inc
sbb
cmovp
adc
mov
cld
test
mov
imul
popf
lods
pop
popa
idivl
mov
mov
inc
out
mov
dec
cmc
das
fidivrl
out
inc
dec
cmp
fidivl
mov
movsb
xchg
fs
mov
loopne
lds
arpl
mov
cs
movsb
je
hlt
xor
lcall
loope
and
dec
iret
rorl
push
xchg
lret
rcrb
sti
mov
push
dec
lock
in
add
xor
pop
adc
call
push
lock
jne
out
test
and
add
dec
jo
inc
repz
mov
not
xor
push
pop
lcall
rolb
xchg
inc
mov
and
aam
push
test
add
or
dec
out
mov
fadd
outsl
inc
push
enter
fsts
xor
mov
in
sub
andl
int3
pop
mov
sbbb
repnz
pushf
cmpsb
mov
mov
shr
jnp
into
out
pusha
xchg
mov
add
lock
insl
mov
cmp
and
es
ds
mov
nop
mov
daa
dec
scas
cmpb
cli
daa
sbb
loopne
movsl
ficomps
std
add
jg
sub
repz
out
xchg
jecxz
dec
add
cmpsl
xor
out
ss
jp
ret
out
fldt
sub
sti
add
nop
and
push
xor
js
ds
or
in
scas
pushf
mov
cmp
dec
flds
js
jle
fwait
mov
and
test
sbb
dec
mov
test
adc
gs
jle
scas
dec
cwtl
insl
jnp
dec
std
mov
in
xor
and
adc
pop
xchg
jb
nop
sbb
leave
rol
push
std
sub
lret
popa
shlb
aas
jg
cltd
jno
push
push
lret
pusha
lock
and
pushf
adc
stos
sub
into
mov
lret
xchg
add
in
arpl
ss
lock
mov
and
inc
pop
inc
stc
cmp
inc
adc
data16
mov
icebp
push
adc
push
cmp
lahf
lret
pop
mov
inc
pop
lea
mov
pop
and
adc
cmp
mov
test
call
push
pop
les
mov
sti
jecxz
add
or
jns
mov
jp
in
in
pop
sub
xchg
xchg
outsb
or
cmp
enter
cmp
outsb
shlb
cmp
and
cld
into
es
mov
stc
mov
xchg
xchg
shlb
cltd
xor
test
sub
dec
popa
std
dec
push
xor
jl
cwtd
mov
and
subl
out
sbb
out
das
add
xchg
aas
std
popa
arpl
dec
and
jmp
sbb
imul
scas
and
out
mov
xchg
sbb
xchg
sbb
repz
stos
pop
je
and
jno
or
fstpt
out
lret
push
ljmp
sub
xchg
push
push
push
notb
dec
out
push
out
pop
loopne
mov
dec
cmp
fisubrs
fs
push
jno
cmp
or
inc
jge
sbb
jb
xor
shlb
sbb
push
fdiv
cmc
mov
out
mov
cltd
lods
jp
add
or
add
jl
mov
add
xor
mov
shl
les
push
cmpsl
imul
mov
fidivs
add
mov
arpl
xor
repz
mov
inc
adc
ffree
push
in
addr16
les
in
bound
es
or
imul
movsb
daa
dec
mul
repz
add
ja
mov
test
outsb
adc
push
mov
adc
sar
push
jl
mov
pop
inc
push
mov
xlat
fistpll
push
popf
xchg
daa
jp
xchg
mov
dec
sbb
cmpsl
stos
mov
xor
or
xchg
fisttpll
sub
pop
mov
das
mov
and
subl
outsl
jmp
push
mov
std
fstps
lods
adc
mov
add
jb,pt
roll
inc
inc
nop
in
mov
cld
js
popa
stos
fwait
mov
xchg
adc
scas
mov
push
fdivp
inc
ds
and
fldenv
es
add
jb
mov
out
stos
jl
fsubrs
inc
sub
outsl
mov
adc
lods
and
js
idivb
imul
xchg
inc
sbb
pop
out
dec
xchg
int3
sub
lods
mov
mov
shl
fs
adc
mov
shrl
arpl
jbe
jp
adc
inc
sub
inc
pop
decb
incb
and
push
jno
inc
jno
mov
enter
mov
in
loop
cmpsl
mov
dec
mov
inc
mov
movsl
dec
mov
pop
inc
adc
push
pop
cs
movsb
lahf
inc
sub
mov
loop
daa
jp
push
mov
adc
mov
jmp
insl
shll
sub
out
mov
movsl
jp
sub
scas
jo
in
movsl
pop
fadd
mov
loopne
mov
mov
add
inc
pop
sub
adc
in
dec
jno
adc
xor
jecxz
push
pcmpgtw
xchg
idivl
mov
aaa
rolb
mov
jge
push
xchg
outsb
data16
outsl
xchg
out
or
aaa
xchg
dec
icebp
addb
insl
scas
or
stos
sub
adc
loope
xchg
push
inc
push
arpl
dec
cmpsl
imul
xor
pop
push
mov
pop
add
mov
lods
add
mov
inc
and
outsb
and
pop
mov
push
xchg
cmp
jmp
adc
es
addl
daa
and
adc
jmp
jl
popa
hlt
fimull
sbb
mov
sub
xlat
test
push
sbb
cmc
add
xor
mov
cwtl
and
push
dec
cmp
int3
int
sub
pop
enter
cmp
push
add
xor
shl
add
push
jbe
mov
cmp
stos
arpl
cmpsl
adc
dec
pop
mov
dec
push
out
int
dec
sbb
popf
cld
leave
or
mov
lock
fstl
cli
xchg
cli
dec
jns
xchg
inc
decb
mov
popf
arpl
xchg
and
cmp
mov
je
inc
cmp
in
iret
xorb
sbb
out
fld
incb
pop
xchg
mov
adc
sbb
pushf
mov
das
mov
test
insb
hlt
adc
inc
dec
jmp
into
pushf
push
jmp
fcompl
iret
mov
cmp
xchg
stos
xor
leave
shl
pop
fdivl
sarl
mov
pop
push
adc
fcoms
push
inc
mov
in
or
jle
xor
mov
ds
push
push
icebp
lcall
mov
pop
inc
mov
clc
mov
or
jne
and
xor
mov
jne
xchg
fldenv
jbe
dec
adc
in
lea
push
mov
hlt
orl
add
setp
mov
sbb
shl
adc
pop
mov
jge
fwait
data16
leave
sub
inc
test
cmpl
test
dec
lcall
xchg
hlt
jne
pushf
fnstenv
ds
cmpsb
std
xchg
loop
xchg
loope
jmp
mov
jg
iret
add
outsl
adc
xor
dec
lods
or
adc
pop
nop
ror
push
fimull
je
shl
cmpsl
fisttpll
test
fs
sbb
sahf
test
mov
mov
adc
or
lret
insl
or
push
fs
jo
sarl
insb
sub
jo
cmp
shl
jmp
push
out
fcmovnb
mov
movsl
adcb
loop
xchg
les
shl
sbb
pop
jle
sub
lods
xchg
and
xlat
lcall
lahf
test
jecxz
addb
sti
and
and
adc
lods
xor
jmp
inc
sar
cmp
push
jle
lcall
mov
jo
dec
mov
popa
jge
mov
jl
iret
push
add
xor
cmc
ds
sbb
pop
div
or
es
mov
add
xlat
cmp
test
lods
or
lret
fistpll
ja
jo
mov
cli
dec
pop
aaa
xorl
jnp
jb
xchg
fsts
xchg
xchg
subl
aam
hlt
in
cmpsb
cmpsb
xchg
sub
inc
xchg
shlb
adc
dec
loope
loope
sub
push
mov
out
pushf
arpl
nop
out
daa
xor
mov
push
fldl
jne
jge
je
and
into
ss
in
xchg
mov
cmpsl
addr16
aam
jmp
ret
mov
in
negb
sbb
scas
inc
adc
dec
shrl
jecxz
jg
mul
into
scas
movsl
je
aaa
cmp
into
cmc
dec
pop
aam
daa
jne
mov
stos
sub
movsl
lds
mov
xor
addb
sbb
or
inc
outsb
shll
lea
pop
imul
je
and
and
dec
int
popa
mov
pop
daa
pop
cmp
ret
jmp
push
dec
and
loopne
sub
lret
adc
push
in
fwait
inc
insb
fcmovbe
vpor
adc
lds
xchg
pop
out
jmp
stc
jo
not
mov
push
inc
mov
push
mov
or
insb
xchg
fmul
and
daa
js
push
xchg
sbb
xor
js
cmp
sub
into
ljmp
pop
mov
mov
pop
xor
pop
mov
push
xor
mov
out
fstpl
cmp
jge
in
arpl
mov
ret
imul
pusha
fdivs
stos
fistps
jl
divl
mov
pop
shlb
xchg
stos
lret
std
mov
and
imul
cltd
out
xchg
add
nop
mov
sub
xchg
negb
add
jb
inc
stc
jle
int
mov
scas
ficoml
lcall
test
andb
daa
movsl
mov
test
in
xlat
out
lea
cmp
jmp
mov
ja
adc
dec
and
int3
arpl
nop
or
lds
pop
ja
jp
cmp
lock
scas
inc
mov
mov
imul
push
rorb
and
jmp
fistps
nop
out
add
mov
insb
mov
stos
jne
fisubs
jnp
sbb
jne
cmp
adc
cmp
xchg
xor
lret
cmp
xchg
repz
push
mov
dec
pop
fwait
icebp
inc
mov
repz
xchg
and
out
dec
out
cmpsl
jns
sbb
int
sbb
hlt
mov
lret
imul
je
mov
and
jle
jne
ret
mov
imul
stc
push
imul
out
pop
scas
push
sub
ja
lret
pop
jnp
mov
ds
pop
leave
ja
in
push
xlat
sub
mov
cmpsl
jbe
cmp
add
add
adc
or
lret
push
js
pop
xor
inc
adc
inc
daa
jae
pop
dec
mov
jl
pop
xor
ficompl
and
and
inc
cmpsl
or
ja
jl
push
aam
mov
aas
shrl
rcll
stos
adc
pop
jge
mov
test
sub
xor
loopne
in
js
push
rcrb
add
rcrl
dec
ja
dec
clc
popf
mov
nop
sbb
ljmp
shll
adc
sub
jg
sub
pusha
xchg
jp
adc
pop
mov
bound
push
or
xchg
mov
loope
repz
pop
std
inc
xor
and
neg
push
out
adc
or
stos
pop
sbb
mov
mov
add
cmc
scas
or
lock
add
pop
js
stos
pushf
popa
add
lret
jae
jno
sbb
pop
movsl
cs
rolb
cmpsl
lcall
jae
pop
sbb
stc
lea
dec
hlt
cwtl
mov
xor
aad
shl
aad
stos
or
shrl
jmp
gs
shlb
arpl
ljmp
mov
lods
pop
ds
pop
cs
lcall
es
out
int
xor
fnstenv
sbb
push
aaa
test
sbb
fsubrp
xor
adc
jns
ficompl
jmp
movsb
sbb
sub
aas
call
fidivrl
jnp
cld
scas
out
mov
hlt
sbb
stc
push
add
adc
xchg
sbb
test
sahf
push
pop
xlat
fdivl
ret
aad
xor
ds
jae
out
mulb
pop
dec
shld
lods
fistl
popf
mov
and
hlt
mov
hlt
out
adcb
adc
into
shlb
aam
jno
mov
scas
sbb
loop
insl
xor
mov
shll
cmp
push
outsl
ljmp
xlat
clc
lock
mov
lahf
sbb
das
sbb
jmp
out
push
lods
xor
aad
jbe
addr16
fsubrs
scas
jle
sub
mov
or
fsubl
dec
ficoml
popf
neg
xchg
testb
enter
jb
xor
stos
pop
dec
insb
jo
lret
sub
xchg
xchg
adc
push
and
cmp
and
add
adc
dec
push
mov
mov
jo
test
pushf
imul
dec
and
add
cltd
iret
stc
adc
add
stos
pop
xchg
insb
cmp
adc
mov
jecxz
int3
and
pop
mov
mov
jne
flds
xor
mov
loope
sbb
fs
jno
mov
arpl
xchg
cltd
cld
pop
cs
loop
sbb
das
jecxz
roll
sbb
scas
pop
popf
out
aam
cld
mov
or
insb
cs
xor
sub
daa
scas
lcall
inc
push
mov
ficoms
jnp
test
faddl
out
and
and
and
add
adc
sbb
pmulhw
inc
mov
int3
mov
fsubs
cltd
pop
jle
mov
adc
loope
adc
popf
push
or
inc
mov
dec
cmpl
imul
insb
push
lahf
push
insl
dec
popa
jmp
ljmp
int
out
clc
push
or
mov
inc
push
icebp
xchg
jbe
imul
mov
xor
sub
stc
or
jbe
push
cmp
fisubrs
and
push
sub
fbstp
test
add
lds
add
cmpsl
push
xchg
ret
call
xlat
jle
data16
cmpb
jbe
ss
sub
call
sahf
aas
lea
inc
adc
jg
xchg
lds
sub
push
rcrb
cltd
lret
sub
sub
xor
sub
daa
xchg
cmp
sub
rorb
pop
push
xchg
add
inc
add
imul
cmp
pop
test
xchg
adc
jbe
inc
scas
mov
mov
jge
mov
lds
popf
sbb
insb
sbb
sbb
js
dec
pop
cld
fbstp
inc
mov
ror
jmp
adc
ffree
pop
mov
lods
std
mov
jge
je
push
mov
aas
xchg
sbb
fimull
and
add
xchg
xlat
in
cld
ds
mov
jbe
jnp
loop
hlt
mov
add
sbb
sub
iret
out
inc
sub
pop
out
pop
lahf
nop
dec
or
hlt
push
mov
insl
mov
and
fisubrs
add
cmp
mov
xor
xchg
aas
mov
in
pop
notl
mov
xchg
add
popf
fists
movsl
inc
sub
adc
pop
mov
adc
xchg
mov
jge
insl
andb
xchg
hlt
mov
imul
jbe
adc
fisubrl
mov
cmpsl
dec
and
sbb
hlt
ret
mov
push
ljmp
cmpsb
dec
int3
pop
push
iret
adc
cmpsl
outsl
mov
xor
sub
ds
inc
add
imul
arpl
out
sbb
dec
loop
mov
imul
adc
std
call
adc
pop
cli
and
or
loop
imul
scas
out
outsl
cmp
adc
lds
in
mov
jmp
xor
xchg
xor
or
cltd
nop
ljmp
inc
push
pop
lret
lea
ja
int
std
sbb
mov
add
leave
and
mov
test
and
adc
pop
mov
dec
push
pop
cmp
lahf
movsb
mov
jns
mov
stos
in
jmp
fldcw
or
adc
cld
test
mov
cmpsl
das
cs
unpckhps
pusha
js
xchg
and
inc
push
push
inc
and
movsl
xchg
lret
jge
je
in
push
repnz
pop
sub
pop
jp
xchg
loopne
leave
dec
mov
stos
pop
negb
dec
adc
out
pop
lcall
sub
sub
mov
mov
jle
cmpsb
bound
lret
mov
inc
cmp
mov
sarl
je
cld
mov
xchg
sub
mov
or
inc
rcl
sub
dec
pop
add
sti
push
movsl
sti
sub
mov
out
sub
add
stos
aaa
bound
push
push
sub
movb
nop
xor
test
aam
out
cs
insb
in
mov
cwtl
insl
fsubl
insb
es
and
in
fisubs
mov
mov
popf
test
jp
and
sub
in
mov
add
pop
popf
mov
cmpsl
arpl
sbb
add
mov
in
ss
test
out
int3
movb
repnz
fldcw
sar
pop
mov
test
push
pop
pushf
push
mov
sub
push
jnp
inc
popa
andb
idivb
fisttps
fwait
and
leave
push
fcmovne
cmp
pop
xchg
lock
mov
xor
add
movsl
movsb
repnz
mull
repnz
xchg
mov
lahf
mov
jmp
pop
and
orl
outsl
jecxz
pop
out
add
sbb
push
lahf
jmp
in
mov
push
or
fsubl
inc
mov
int3
sub
jl
sbb
xor
nop
movsl
pusha
pop
fmull
cmc
xchg
mov
ret
ljmp
push
clc
mov
sub
inc
les
xchg
mov
dec
push
adc
shrl
rorl
movsb
addr16
mov
sub
xchg
xchg
or
push
mov
jle
inc
outsb
stos
mov
adc
and
pop
aad
xchg
cmp
pop
out
sub
sub
xchg
aam
push
xor
in
push
adc
jl
xor
xchg
cmc
jb
icebp
popa
add
pop
lret
cmp
aas
loope
out
cs
pop
arpl
cmp
sub
mov
fdivr
sbb
cltd
test
lahf
out
or
int3
je
ja
ds
stos
je
mov
push
sbb
sbbl
fldl
lahf
add
mov
sar
mov
mov
add
mov
cmp
std
gs
pop
lret
shll
rcrl
call
adc
dec
adc
imul
xchg
pop
in
cmpsb
mov
daa
jp
jbe
iret
aad
cwtl
xchg
je
cld
pop
push
xor
test
rcll
cmp
bnd
mov
jbe
pushf
mov
int3
incl
out
call
dec
cltd
xor
verw
xchg
add
jge
mov
out
pop
xchg
stc
sub
loop
ret
fs
dec
push
add
jno
jnp
adc
mov
movsb
leave
iret
pop
or
out
pop
enter
testl
add
add
inc
jmp
mov
add
xlat
iret
adc
testb
sub
inc
fcmove
add
gs
jae
xor
fadd
sub
in
lahf
unpckhps
mov
cli
or
mov
mov
fists
mov
imull
xchg
popa
popf
lock
iret
sbbb
sbb
xchg
mov
cwtl
jns
cltd
or
dec
jns,pn
shlb
jmp
jp
lods
mov
adc
mov
in
push
in
fcmovbe
addr16
les
std
ljmp
std
outsl
fs
mov
push
or
mov
cmc
xlat
mov
ret
fbstp
call
scas
cmpsl
lock
ficompl
xchg
fldenv
mov
jnp
xorb
leave
sbb
notl
inc
pop
add
int3
cmp
push
adc
jno
test
xor
jp
lods
or
inc
mov
pop
test
cmp
stos
inc
mov
adc
inc
int
fiaddl
add
and
xlat
jb
mov
cmp
xor
jo
cs
xor
cli
loope
cmp
test
xchg
fstpt
adc
mov
ja
lds
push
fs
mov
adc
je
and
mov
mov
adc
ror
xchg
sub
aam
xchg
out
xor
es
xor
movsl
test
mov
push
rcrl
jae
cmpsl
scas
jo
push
pusha
push
inc
and
adc
lea
inc
vpmaddwd
push
xchg
sub
jnp
rcr
ret
add
pop
push
hlt
jns
pop
mov
data16
mov
icebp
jp
popf
add
insb
or
call
js
test
xor
ja
lcall
incb
mov
out
inc
mov
sti
jg
scas
sbb
and
xor
dec
dec
or
shlb
push
fstps
cmp
test
adc
ds
addr16
xchg
cwtl
hlt
pop
fisttpll
hlt
pop
push
or
lcall
sub
xchg
rol
adc
mov
adc
imul
out
add
mov
jo
repnz
dec
jecxz
dec
add
in
mov
es
and
fcmove
cmpsb
es
leave
nop
fdivrl
mov
cmp
mov
jmp
mov
cmpsl
cltd
lds
cmp
and
sarl
adc
pop
and
add
push
jno
test
in
add
mov
mov
jecxz
iret
popa
ss
shlb
sub
xchg
jbe
outsb
in
push
adc
dec
dec
pop
push
jl
int
push
inc
testb
es
movsl
stos
sub
jne
push
jle
imul
pop
popa
data16
sarb
push
repz
repnz
insb
ret
insl
dec
into
sbb
lods
jg
ficoml
scas
inc
and
shlb
xor
or
insb
jbe
inc
call
push
push
xor
mov
cwtl
imul
scas
push
in
mov
cmp
test
adcl
jae
in
or
and
lods
add
mov
mov
in
testb
or
cvtps2pd
test
xchg
sbb
ret
rclb
adc
mov
lock
out
shrb
and
sub
ja
xlat
leave
dec
cmp
fdivrl
lods
inc
inc
in
mov
std
cmp
pop
xor
stc
shlb
mov
test
xchg
aam
xchg
mov
xchg
mov
cwtl
jmp
in
div
and
fildll
in
jae
xchg
jge
mov
repnz
je
inc
ret
pushf
imul
xchg
lds
mov
adc
jmp
int
mov
vmovsldup
sbb
out
lock
mov
jg
in
push
inc
dec
cmp
inc
pop
dec
push
xchg
cmp
sbb
jno
sahf
fld
xor
ret
aas
imul
repnz
xchg
loop
cmpsl
leave
in
mov
in
adc
mov
xor
xor
shlb
das
mov
xor
push
push
outsb
mov
aaa
xor
popa
jno
fcoml
sbb
push
adc
adc
fistpll
int3
fs
pop
adcl
lret
loop
cmc
push
and
mov
lret
ja
loopne,pn
mov
xor
add
aam
or
out
sub
and
movsb
mov
or
jmp
and
imul
xchg
mov
xor
mov
movsl
les
mov
fstl
mov
jge
mov
push
out
and
push
outsb
mov
lahf
nop
jne
pop
mov
jmp
dec
insl
scas
mov
out
or
or
cmp
inc
mov
rclb
xor
test
jns
lcall
inc
insb
pop
shl
xchg
mov
enter
or
sbbl
insl
add
jae
popf
pop
sbb
pop
aaa
adc
push
in
shrl
and
xor
pop
in
fstpl
into
dec
movsb
call
pusha
mov
cs
jmp
cmpsl
dec
pusha
adc
cmp
sub
mov
popa
mov
adcl
or
adc
cwtl
arpl
mov
cmp
loopne
pop
inc
push
lcall
push
inc
jl
fbld
or
shll
lahf
mov
mov
negb
dec
nop
stos
pop
ret
jbe
push
pop
sub
mov
push
ret
movsb
insb
popf
es
nop
in
inc
lret
lahf
xor
sti
insl
cmp
sbb
js
stos
test
rorl
inc
ss
xor
add
cmpsl
pop
shlb
in
clc
pop
es
rcll
cmp
clc
push
movsl
pop
adc
dec
adc
pushf
mov
mov
test
cli
dec
fsubrp
sbb
aam
shlb
test
ja
inc
sub
sahf
mov
pop
pop
cmpsl
bound
mov
int
fisubl
sbb
lret
sbbb
jae
pop
repz
xchg
add
xchg
fwait
sbb
shll
loopne
int
shlb
sbb
and
jecxz
rcr
mov
dec
ret
ss
dec
movnti
cmpsb
icebp
adc
or
mov
aaa
xchg
sub
or
fcomp
jnp
dec
pop
fs
jbe
leave
sti
mov
shl
rcrl
pop
jns
ficoms
fcmovbe
bound
faddp
negl
and
stos
clc
std
adcl
insl
adc
sub
ror
imul
pushf
loope
xor
jnp
fnstcw
mov
push
insb
mov
int
sub
test
cmp
dec
or
icebp
leave
pop
les
fs
notl
or
daa
or
or
cmpsl
scas
xorb
xorl
add
in
aas
mov
imul
push
pusha
push
pushf
bound
mov
outsl
imulb
in
hlt
xor
xor
push
push
xorb
jae
in
and
cmp
mov
xor
cmp
icebp
sub
adc
int3
xor
ret
inc
push
inc
xor
lds
lods
out
das
mov
int
push
xchg
nop
sbb
icebp
cmp
mov
push
int3
scas
stos
in
aaa
jge
daa
es
pushf
jmp
in
add
lcall
sbb
inc
sbb
pop
fbld
cmp
adc
jecxz
pop
adc
pop
lea
inc
outsl
jmp
push
int3
fs
insl
dec
add
stos
sahf
or
sub
inc
cmc
mov
push
sbb
jecxz
sahf
mov
cld
push
pop
popf
lcall
mov
and
in
mov
fidivrs
bnd
fidivrl
dec
cmp
mov
adc
push
mov
pop
adc
xor
add
push
daa
lret
cmpb
lret
add
add
adc
xchg
mov
sbb
xchg
sub
outsl
mov
pop
lret
icebp
push
push
js
hlt
data16
es
fcomps
xchg
mov
xor
xchg
mov
int3
push
bound
scas
jmp
jge
pop
fnstcw
dec
xchg
lds
rcrb
pop
xor
cld
dec
xchg
sbb
lock
sub
and
cmp
jp
repnz
pop
lods
push
ret
fisubs
repz
xchg
roll
mov
pop
mov
leave
sub
sub
adc
dec
and
mov
mov
dec
loopne
inc
and
mov
in
mov
and
sbb
xchg
stos
inc
mov
adc
inc
lret
inc
fs
data16
out
and
cmp
jae
xor
jg
add
dec
es
popl
xchg
lret
sub
mov
push
aad
jp
sub
mov
int
dec
fdivs
inc
mov
push
mov
outsl
cmpsb
mov
pop
out
rcll
shl
cmp
inc
push
adc
test
mov
ljmp
movsb
into
out
divb
inc
xor
adc
or
cmp
aaa
mov
mov
cmp
pop
xor
pop
outsb
out
std
push
dec
inc
mov
rcrl
mov
dec
loopne
push
movsl
xlat
dec
xor
mov
call
mov
in
jge
lock
movsb
ljmp
dec
imul
mov
mov
adc
sarb
fs
mov
imul
mov
cli
aaa
xlat
jecxz
and
enter
mov
shll
in
inc
mov
call
mov
mov
jnp
dec
mov
or
pop
lods
lahf
jno
xchg
mov
js
inc
ds
ret
push
adc
xchg
sub
and
cmp
xor
fcompl
or
add
inc
adc
or
inc
jb
fistpl
ss
adc
pop
clc
inc
jo
insl
imul
fistps
xchg
sub
push
jge
stos
mov
outsb
fisubs
and
and
fists
inc
addr16
nop
add
adc
loop
pop
mov
ja
mov
sbb
sub
popa
jmp
or
fldcw
mov
sub
jb
out
hlt
shlb
scas
xor
xorl
out
jnp
lods
aad
fidivrl
nop
movsb
movsb
sarl
mov
loopne
dec
adc
fidivrl
cli
in
xlat
movsb
ret
sbb
jnp
lods
rcrl
cmc
xchg
dec
fcomps
ljmp
push
pop
sub
hlt
repnz
sti
sbb
cli
outsl
test
ret
mov
inc
add
hlt
pop
les
pusha
es
pop
test
push
or
sbb
push
push
cwtl
add
mov
sbb
push
fcoml
inc
unpckhps
pop
xchg
cmp
jmp
ja
aad
loopne
lea
and
mul
das
imul
ret
data16
and
push
negl
test
scas
cmpsl
xchg
cmp
popl
int3
xchg
movsb
sub
mov
cs
pushf
push
mov
pop
js
mov
lea
lret
inc
xorl
mov
aad
mov
sbbb
fisubrs
ds
cmp
fbstp
add
mov
dec
sbb
xor
jne
iret
lret
movsb
pop
cmp
add
inc
pop
data16
outsl
shll
out
fisttps
xor
mov
push
dec
test
enter
repz
jno
fwait
sub
pop
pop
pop
int
ljmp
outsl
mov
sti
fmuls
rcl
inc
adc
imul
mov
fildll
sbb
ljmp
div
icebp
out
pop
stos
mov
in
sbb
push
in
pop
repz
shlb
aaa
adc
mov
icebp
sub
dec
jge
mov
mov
or
jge
jo
adc
jge
insl
or
sbb
std
repnz
adc
cltd
cmp
nop
sub
cwtl
cmc
ljmp
pop
adc
xchg
outsl
aas
push
inc
loope
sbb
stos
mov
lods
cli
pop
lcall
sub
adcb
inc
sbbb
xlat
adc
scas
mov
xchg
jo
stos
aad
and
sub
cmpsb
scas
cmp
inc
pop
pop
orl
fcoml
jne
push
imul
jne
mov
mov
lcall
push
inc
idivb
rcll
js
push
mov
bound
aaa
ret
pop
sbb
hlt
imul
push
mov
jno
roll
test
push
inc
push
xor
sub
push
repz
jnp
std
fisttps
xor
mov
pop
stos
ret
mov
pop
inc
jns
adc
insl
repnz
aas
out
in
inc
clc
inc
fisubrl
popa
data16
mov
or
push
dec
shll
mov
dec
lock
fsts
mov
cld
adc
insb
outsl
mov
and
or
push
mov
aaa
push
pop
jg
pop
mov
jmp
inc
nop
push
mov
push
and
jl
sbb
push
xchg
aad
xchg
pop
loop
inc
bound
ds
lcall
add
sbb
int
es
insb
jecxz
adc
jo
xor
and
sub
sahf
fwait
add
rclb
jo
add
ss
std
call
adc
mov
addb
cmp
jle
pop
and
and
add
pusha
cwtl
aad
bound
dec
mov
add
jne
jb
fistl
cmp
sbb
and
mov
inc
sub
adc
mov
loope
fidivs
int
sbb
repnz
mov
shll
stos
lock
arpl
les
xchg
ljmp
xor
sub
push
mov
ja
sahf
imul
in
mov
push
dec
loope
roll
in
sbb
shrb
ss
in
movsl
popf
cmp
push
mov
mov
scas
add
outsl
das
lods
and
rep
add
sbb
xchg
xchg
pop
jle
js
add
xchg
int
cmp
pop
cld
test
iret
popa
add
cmp
pop
pop
repnz
pop
adc
mov
aas
jp
xor
mov
out
aam
or
inc
pop
mov
xchg
iret
sbb
mov
jne
lods
stos
sbb
push
cmpsb
cld
dec
and
push
adc
cli
mov
adc
adc
jbe
test
cmpsl
jne
dec
repnz
lcall
mov
cmc
loopne
or
jl
adc
cmp
repnz
fadd
icebp
mov
movl
stc
inc
mov
dec
pusha
dec
xlat
pop
sbb
pop
inc
pop
je
fstps
pushf
inc
fwait
lock
daa
adc
push
cmp
in
test
add
mov
movsl
sub
test
add
lcall
xchg
or
xchg
ljmp
sbb
into
fcoml
in
or
add
ds
sbb
cs
cmp
cmp
push
mov
pop
jmp
loopne
aas
daa
or
mov
mov
insl
xor
std
and
jp
sti
aad
repnz
or
enter
es
adc
push
test
push
jl
fwait
mov
cld
jo
ja
inc
out
and
clc
imul
lahf
sbb
repnz
cltd
pop
xchg
shll
out
jl
mov
fcmovb
cld
mov
sub
sbb
mov
sbb
fcoml
imul
mov
iret
das
xor
xor
bnd
and
dec
loope
in
sbb
and
inc
inc
in
inc
dec
jmp
out
rcll
popf
mov
sbb
dec
fs
mov
and
aam
test
sub
mov
xor
call
shlb
sub
lret
lods
fs
cld
mov
orl
fwait
outsb
test
and
or
stos
xchg
cmp
sbb
mov
loopne
je
outsb
xor
and
scas
lahf
out
in
mov
inc
mov
xchg
test
push
and
movsl
in
jo
daa
mov
test
std
jl
adc
and
fcoms
sbb
mov
mov
out
out
out
sbb
xor
inc
cmpsl
fimuls
lcall
sbb
mov
jns
adc
in
and
jne
xor
sti
xchg
pop
pop
inc
pop
pop
jle
scas
adc
inc
mov
xor
popf
mov
xchg
ret
xor
mov
test
mov
insb
inc
inc
jmp
int
push
bound
fisttpll
jo
mov
arpl
in
inc
lock
lea
ljmp
add
popf
pop
popa
repnz
lods
shlb
sbbl
pop
into
movsl
jae
xchg
icebp
lahf
sbb
out
out
xchg
cmpsl
pop
js
mov
xchg
mov
shll
icebp
dec
push
mov
dec
inc
outsl
cmp
xchg
dec
stos
rol
hlt
outsb
and
inc
and
push
jge
imul
push
sub
cmp
mov
xor
int
adc
scas
jae
sub
sub
movsb
stos
and
je
imul
push
imul
bound
cmpsb
das
mov
xor
add
iret
adc
cmc
push
mov
xlat
mov
and
testl
outsb
mov
test
sub
adcl
cmp
aas
jecxz
lea
lods
inc
or
push
scas
jg
arpl
insb
xor
fadd
add
mov
mov
enter
ljmp
xchg
insl
cmp
sub
stc
and
push
fcmovnbe
imul
pop
jnp
leave
je
push
or
push
xor
lahf
push
push
xchg
jle
pop
inc
xor
sbb
pop
jo
mov
push
cwtl
gs
fistl
add
pop
fld
jge
dec
or
and
cmp
insb
pop
or
push
inc
mov
jne
push
push
inc
rol
clc
repz
jge
cltd
push
sub
clc
iret
push
dec
es
and
add
xlat
test
enterw
test
imul
addr16
cmp
and
aam
dec
pop
lea
and
push
cmp
dec
fs
xor
and
repz
jp
mov
pop
xor
and
in
sbb
cmp
addr16
aam
jge
lods
imul
push
or
imul
adc
add
fildl
jae
ds
cmp
mov
enter
inc
cli
in
push
fcoms
xor
rcl
shr
mov
xchg
push
data16
push
dec
inc
jge
or
rcl
adc
mov
mov
dec
sbb
sub
jle
or
scas
lcall
push
shrl
lret
bound
jne
cmpsb
mov
daa
fstl
inc
repnz
pop
sahf
sub
cltd
xor
inc
js
xchg
ds
cmp
inc
enter
inc
popf
jb
jo
add
loop
jb
test
cmpsb
sbb
sbb
ds
aad
mov
loope
adc
insb
adc
loopne
jne
xor
orl
cmp
lret
add
int
cmp
jmp
insb
rcrb
or
dec
xor
adc
rol
xlat
and
enter
jl
sarl
cwtl
pop
cld
subl
popa
inc
jg
loop
inc
or
clc
or
outsb
inc
pop
xchg
adc
mov
xchg
fistpl
insl
fcoml
insl
test
hlt
or
imul
adc
shl
and
hlt
rcrb
pushf
jmp
fdivrs
xchg
mov
mov
pushf
ljmp
lret
lock
cld
jo
loopne
add
aaa
call
aad
mov
push
cmp
rcll
insl
xor
sub
fisttpl
or
gs
dec
jmp
out
inc
out
and
sub
mulb
jb
lcall
inc
int
mov
mov
push
xor
fidivrl
icebp
insl
insb
int
cmp
push
mov
es
pop
inc
fstps
lahf
gs
cmp
loop
pop
dec
cmp
jle
jbe
ja
repz
push
mov
mov
pop
and
cmpsl
lods
pop
jge
xchg
inc
jnp
sbb
jo
std
imul
jns
daa
in
xor
mov
mov
iret
cmpsl
jno
sbb
sbb
lds
sub
or
loop
sbb
push
pushf
and
jl
pusha
pop
cmp
pop
sahf
cli
xor
in
cltd
push
jmp
push
pop
jp
or
cltd
gs
arpl
push
nop
push
shll
fwait
shlb
push
fnstenv
test
addl
xchg
int3
rolb
cli
hlt
int3
lods
and
pop
pusha
scas
pop
jbe
xor
lods
cltd
icebp
xor
test
insl
pop
pop
xchg
push
clc
xor
adc
shrb
mov
je
mov
push
or
jl
jae
ljmp
cmp
test
mov
aad
sub
mov
inc
jbe
pop
dec
fwait
jl
cltd
dec
inc
shr
pop
adc
push
or
xor
imul
jns
pop
push
aad
push
aad
jae
mov
into
fcompl
cwtl
fs
xchg
jp
iret
add
jl
das
mov
into
jno
sti
xor
std
out
jns
inc
mov
mov
fcompl
std
or
popf
testl
scas
fyl2xp1
in
andl
es
mov
jns
inc
lods
dec
jno
lock
dec
mov
pop
hlt
mov
out
aad
sub
clc
lods
cmp
push
repnz
cmp
js
mov
popf
xchg
cwtl
inc
jbe
sbb
pop
shl
shrb
pop
ja
sahf
pop
push
rcrl
pop
mov
lcall
push
inc
dec
icebp
adc
adc
fsubs
dec
push
pop
lock
sahf
add
insb
sbb
cli
mov
or
orb
mov
jno
ds
xchg
add
jmp
add
cmpsb
xor
subl
rcrl
movb
cmp
pop
cli
jno
cwtl
mov
dec
adc
in
xor
dec
flds
mov
ds
jne,pn
and
icebp
push
jl
mov
xor
inc
inc
xchg
mov
daa
icebp
pop
push
xor
adc
lods
mov
xchg
dec
push
xchg
fcmove
aaa
cmpsl
xchg
lods
inc
mov
mov
cwtl
movsl
xor
or
daa
sbb
dec
scas
pusha
mov
pop
pop
inc
xchg
mov
imul
imul
mov
mov
sbb
loop
leave
pop
popf
in
sbb
xor
pop
stos
mov
push
mov
jecxz
scas
push
fmuls
movb
mov
loopne
jge
repnz
and
ja
fsubrs
test
dec
enter
pop
cli
shlb
lods
repnz
sub
pop
in
data16
adc
fsubr
rolb
test
inc
daa
pop
daa
lret
pop
daa
into
jmp
pop
push
mov
cli
jp
push
jle
nop
mov
xchg
insb
lods
xor
pop
cmp
pop
lahf
int3
pop
inc
lcall
sarl
je
fnsave
mov
inc
sbb
ja
push
push
adc
push
push
mov
cmpsl
push
mov
sarl
jp
fildll
in
inc
jnp
or
orl
bound
pushf
mov
arpl
and
int3
lcall
lods
into
test
mov
and
jnp
or
mov
jae
sub
daa
sbb
jae
push
or
pop
sub
cs
or
daa
pop
sti
lea
xor
inc
les
jge
add
mov
mov
shl
or
addr16
rclb
jno
std
test
jb
mov
push
movsl
cli
mov
lahf
cwtl
inc
in
lret
xchg
idivl
or
push
ss
sti
daa
aam
movsl
pusha
jno
mov
int3
push
imul
rcrb
jmp
pushf
cmp
in
addr16
pop
outsl
mov
mov
and
roll
push
js
lods
add
push
xchg
in
pop
stos
outsb
hlt
mov
out
or
fldcw
mov
sti
push
pand
inc
sarb
out
xchg
fildll
push
cmp
jbe
out
xchg
mov
mov
sqrtps
and
bound
das
or
out
outsl
xchg
lock
pop
dec
ja
dec
cmpsb
les
add
mov
jae
es
rorl
sbb
inc
loope
cmp
enter
sbb
xorb
dec
imul
or
pop
repnz
das
xor
mov
adc
cltd
pop
mov
and
movsb
inc
mov
daa
push
push
push
fcomp
out
int3
xchg
loop
repz
out
xchg
scas
pushf
pop
mov
push
sub
rorb
daa
sbb
pop
pushl
call
mov
add
call
in
mov
mov
cmpsl
and
pop
frstor
nop
bnd
rcrl
sbbb
stos
pop
inc
lcall
jae
sub
push
imul
push
mov
mov
mov
dec
in
test
cmc
inc
lock
jb
jge
loopne
out
jge
push
push
shll
fldt
inc
movsb
xchg
pop
gs
cmp
and
enter
mov
movsb
lds
cmp
nop
xor
add
mov
shl
mov
jbe
std
outsl
es
push
xchg
aad
pop
cmp
xchg
xlat
jg
rorl
push
jmp
push
pop
add
ja
hlt
dec
inc
dec
in
cwtl
ljmp
dec
jno
mov
je
mov
std
jbe
dec
rcr
or
pop
and
lds
les
dec
and
int
add
cmp
dec
adc
movsb
daa
iret
mov
xor
mov
xchg
jb
cmp
inc
add
sbb
inc
or
xor
fs
stos
fsubrl
adc
lret
and
or
insl
mov
fdivl
xchg
and
add
xchg
push
jmp
outsl
or
movsb
cli
stos
xchg
sub
and
shrb
addr16
hlt
dec
jecxz
lods
pushw
pusha
add
out
stos
push
pop
cmp
xchg
xor
and
xor
shrl
cmp
mov
xor
cs
jae
inc
mov
cs
dec
daa
push
push
xor
xlat
inc
sub
insb
mov
hlt
sub
iret
xor
pop
push
push
dec
lahf
test
cwtl
fldcw
jo
cwtl
nopl
mov
jl
sbb
loopne
inc
fs
jmp
or
icebp
cmpsb
inc
std
inc
push
pop
popa
es
pop
mov
push
imul
cmp
mov
fcoms
mov
leave
cmpsl
cmc
icebp
xlat
insl
cmp
or
and
aad
inc
fnsave
adc
cmp
pop
push
data16
scas
and
sbb
add
xor
inc
xchg
cld
and
pop
shll
cmpsl
lods
jp
lods
test
popf
stc
cmp
cmp
das
adc
arpl
adc
cwtl
loop
aaa
fwait
pop
aas
and
es
pop
xchg
lcall
or
lods
lds
inc
jns
mov
int3
lds
imul
into
sbb
xor
inc
dec
and
pushf
sahf
repz
pusha
addr16
inc
imul
outsb
xor
jb
arpl
mov
cmp
push
out
dec
push
outsl
xchg
pop
hlt
mov
xchg
mov
test
and
xchg
fld
rcll
imul
adc
mov
pop
jg
jge
mov
stos
xor
cmp
aam
outsl
jae
cmp
mov
xchg
stos
mov
jecxz
rcl
mov
loopne
jbe
test
mov
sahf
mulb
in
ja
in
into
inc
lahf
mov
push
lret
mov
cld
fbld
or
fidivrs
cwtl
fldenv
nop
movsl
jns
lods
or
lret
pop
adc
in
insb
cmp
es
jmp
clc
movsl
aad
pop
jle
rclb
test
leave
mov
dec
mov
mov
outsb
mov
shll
adc
test
add
imul
add
lods
repnz
jno
and
mov
dec
cmp
pusha
jg
mov
dec
xchg
sub
sub
dec
int
add
addl
xchg
mov
xor
xchg
hlt
sbb
pushw
shlb
sub
repz
es
ja
mov
xchg
imul
lcall
loope
subw
and
cli
lds
inc
pop
add
sub
into
jae
mov
lock
js
aas
jnp
add
test
jae
icebp
xor
int3
inc
sahf
cmp
xchg
cmp
sub
mov
into
mulb
in
jl
gs
ljmp
outsb
ficoml
outsl
inc
popa
push
mov
pop
or
xchg
in
aas
loope
inc
xchg
inc
cs
cmp
scas
dec
shrb
jg
sahf
fstpt
repz
outsl
cvtps2pi
lds
adc
sti
and
mov
xlat
jo
sub
test
push
ds
cld
jp
mov
insb
cmp
cmp
sbb
aas
xor
ss
ror
inc
add
test
out
mov
push
adc
inc
pop
jp
adc
inc
aas
pop
adc
icebp
xor
cld
repnz
or
jmp
mov
pushf
out
push
testl
pop
mov
hlt
dec
scas
mov
jae
add
fcmovne
sbb
xacquire
sub
cwtl
fsubrp
jns
into
sub
sub
bound
push
lea
cmp
jp
int
push
out
daa
inc
mov
pop
call
daa
and
xchg
adc
jae
int3
inc
mov
adc
enter
pop
inc
cmpsl
mov
fisttpll
fs
inc
mov
popa
loope
or
scas
cmp
pop
or
inc
cmp
pop
mov
lahf
inc
out
sti
movsb
xchg
btc
repnz
jno
insb
jle
xlat
sbb
xor
push
cltd
cwtl
sub
or
es
in
xor
out
sub
pop
clc
inc
call
sub
jmp
or
xchg
scas
push
cmp
adc
and
repnz
add
out
jno
and
rcr
xchg
or
adc
push
xchg
iret
pop
mov
mov
jae
push
aam
pop
icebp
add
pop
add
pusha
daa
sbbb
je
add
mov
clc
mov
jne
push
aas
cmp
sbbb
jecxz
xor
addr16
xchg
shll
ja
rorb
sti
imul
xor
call
repnz
sti
pop
idiv
cmp
xor
sub
and
push
mov
push
stc
inc
cmp
or
in
cmp
mov
push
in
xor
xor
lea
es
lds
push
stc
rcrl
cwtl
fisubl
data16
cmpsl
leave
xorl
idiv
sbb
movsb
push
addr16
sbb
cmp
fwait
das
repz
cmp
lahf
movsb
and
or
mov
mov
ds
or
lahf
leave
into
jae
inc
inc
or
stos
cmp
lret
push
cli
pusha
mov
lea
gs
pop
mov
rcrb
jno
lahf
push
and
call
int3
pop
stos
inc
movsl
pushf
mov
xchg
pop
jb
outsb
sub
in
js
cli
push
jne
stos
sarl
fsubp
ljmp
dec
mov
inc
push
and
ret
test
dec
out
neg
pusha
scas
shll
dec
out
jge
or
adc
sbb
iret
push
mov
cli
lcall
cmpsb
xchg
or
iret
inc
push
xchg
mov
outsl
mov
cmp
cmp
xchg
testl
sub
xchg
pop
lods
or
jne
xor
lock
iret
test
mov
lds
call
mov
sarb
popl
cwtl
rcll
pop
adc
push
dec
adc
gs
int3
das
fisubrl
dec
fidivrl
fisubrs
mov
dec
lcall
int3
lock
pop
jg
insl
data16
add
and
hlt
sbb
adc
hlt
stos
test
dec
aad
insl
divl
lret
aam
aaa
out
push
fidivrs
fcomp
es
popa
jae
mov
dec
clc
stos
idivl
adc
mov
push
pop
stos
xchg
ljmp
pop
lcall
pop
push
into
push
sbb
add
mov
mov
repz
pop
leave
inc
into
push
push
lock
popa
lcall
add
lods
dec
xor
lods
xor
popa
push
notb
sub
inc
daa
jle
out
sub
frstor
test
xchg
cmc
aad
xchg
push
xchg
push
pop
loopne
xchg
cmp
cwtl
repnz
cmp
int3
cmp
mov
cli
and
in
xchg
in
les
mov
ljmp
inc
cli
jb
out
aam
add
movsl
push
mov
mov
and
nop
push
cwtl
xor
cli
xchg
push
sbb
iret
call
movsl
sbb
test
je
dec
std
rol
ja
aad
repnz
mov
push
cmp
ret
dec
in
out
cmp
hlt
repz
xchg
and
or
in
js
mull
out
hlt
jle
loopne
lret
dec
icebp
sbb
sbbb
cld
addr16
pop
jb
sarl
xchg
fdiv
mov
or
adcl
jl
mov
mov
ret
xorb
jg
and
mov
mov
jmp
insl
cmp
dec
mov
and
push
ret
fs
jno
ret
les
test
test
jno
jnp
mov
pop
loop
adc
and
imul
cmp
pop
sbb
lock
pop
or
out
inc
daa
das
adc
jp
in
jae
xlat
xor
sbb
out
dec
add
mov
nop
push
add
in
mov
les
lods
int
xchg
sbb
dec
das
sti
jmp
mov
rcll
clc
sub
sbb
jge
inc
jno
in
lock
pushf
gs
mov
sbb
dec
add
push
inc
outsl
xchg
outsl
lock
or
jae
in
js
jle
subl
sbb
push
ja
or
testb
jne
fwait
xorb
mov
inc
adc
sub
stos
or
mov
popl
sbb
ret
xchg
and
sub
mov
cmp
test
out
xchg
mov
xchg
xor
test
sahf
xchg
cs
pop
int
clc
cmc
pop
addr16
xor
in
xchg
inc
sub
hlt
enter
mov
cmp
cbtw
cmp
jns
jp
inc
arpl
fistpll
clc
mov
xchg
imul
scas
xor
int
addr16
lret
pushf
mov
subl
xchg
mov
mov
insb
xchg
add
adc
notl
dec
lret
xchg
xchg
sti
mov
or
pusha
or
inc
iret
outsl
arpl
jmp
lea
push
or
in
sbb
jge
dec
adc
loop
mov
sbb
imul
inc
movsl
jbe
aad
lcall
mov
and
sub
cmp
adc
jno
imul
push
into
xlat
icebp
adc
push
adc
sub
pop
pushf
iret
mov
std
loope
sub
xchg
es
sbb
mov
iret
sbb
test
into
mov
pop
int3
adc
pop
pop
push
pop
xchg
lods
cmpsl
popf
fwait
sbb
mov
inc
sub
push
adc
mov
and
xchg
out
leave
pop
lock
out
call
xchg
test
psubusb
movsl
mov
movsb
dec
and
lock
gs
pop
mov
mov
xchg
daa
push
dec
lret
inc
imulb
inc
divb
in
cltd
adc
mov
push
testl
jg
sub
stos
push
mov
or
fldt
test
push
jmp
push
icebp
push
addb
and
xor
inc
push
scas
jle
mov
or
lods
scas
adc
xchg
xorl
dec
shll
pop
outsb
fsub
mov
dec
ja
int
imul
ret
std
test
cmpsb
mov
lret
jns
scas
cmpsl
out
mov
rep
call
addb
enter
xchg
rclb
inc
in
sbb
jg
sbb
nop
push
std
jne
xchg
sub
mov
cmp
mov
and
or
sbb
inc
call
inc
pop
inc
in
test
or
or
test
jns
mov
pop
cwtl
fidivrs
ficompl
xchg
and
push
fsts
data16
cld
pop
lods
test
stos
insl
xchg
mov
push
cmc
or
mov
repnz
cltd
pop
dec
aaa
sbb
jle
xchg
inc
jl
ljmp
inc
int3
sub
mov
pop
add
lea
rcll
loope
cmp
mov
inc
sub
stc
add
push
push
test
pop
loop
pop
clc
mov
dec
xchg
pop
or
xor
push
dec
mov
adc
push
int3
mov
push
sub
xchg
add
clc
jecxz
add
xchg
mov
leave
mov
movsb
cmp
mov
mov
adc
pop
out
mov
repz
out
fidivrl
xor
xchg
lcall
ja
inc
push
clc
cmpsl
cmp
into
or
pop
outsl
pop
dec
sub
out
adc
xchg
test
adc
xor
gs
mov
sub
push
ss
clc
jbe
and
int
jno
jmp
outsb
push
out
jo
clc
popa
movl
pushf
xchg
test
sub
xchg
jnp
shr
jns
cmp
mov
xchg
cltd
and
fisubl
lock
sub
dec
call
test
jne
mov
mov
push
cmpsb
pop
pop
rol
mov
jp
ljmp
push
adc
stos
xor
cli
popf
dec
lock
push
imul
sub
ljmp
cmp
mov
add
js
adc
stos
cmp
xchg
cmc
pop
and
mov
fcomi
fidivl
and
sahf
pop
aam
cld
int
jno
ja
and
lock
xchg
mov
mov
in
xchg
lret
sub
jp
les
inc
mov
lea
ficomps
xchg
enter
or
jp
lahf
mov
sbb
xchg
sub
jl
in
mov
stos
xor
shlb
sub
push
test
out
push
lock
and
inc
mov
in
lods
fistl
fsubrs
in
cmpsl
adc
adc
out
sub
jg
ds
scas
rolb
xchg
inc
jbe
insl
sbb
xchg
loopne
ficoms
ljmp
add
idivb
pop
xor
push
mov
push
mov
xchg
dec
insb
sub
pop
mov
mov
mov
push
iret
push
jne
mov
and
mov
cmc
jge
clc
inc
lea
xlat
or
lahf
mov
jmp
xchg
inc
cmp
xchg
stc
nop
outsl
faddp
xchg
pop
lahf
and
cltd
in
stos
das
andb
xchg
outsl
cmpl
test
push
cmpsb
outsb
jnp
repnz
mov
test
mov
mov
mov
pop
and
push
push
rorb
out
test
pushf
and
andb
imul
outsb
mov
das
pop
andb
mov
daa
jg
mov
aad
pushf
test
mov
mov
xchg
jae
mov
push
inc
mov
mov
push
dec
dec
lcall
push
or
mov
leave
and
push
outsb
pop
sbb
mov
cld
mov
pop
mov
jne
dec
jns
in
aam
rcl
int3
xchg
pushf
arpl
bound
cmp
xchg
push
adc
out
xorb
or
in
push
sbb
loop
ret
nop
xchg
lret
cltd
loopne
pop
nop
jecxz
stos
push
adc
cmp
cltd
cmp
pxor
cmp
sar
fwait
arpl
clc
dec
push
mov
cld
dec
xor
sbb
dec
mov
rcrb
or
sbb
adc
lods
jae
mov
or
or
lahf
imul
je
fcompl
and
icebp
in
insl
push
pop
lods
sub
cmpsb
push
xchg
test
daa
pop
mov
jg
add
mov
jg
mov
jge
lock
ficoml
and
clc
sub
cmpsl
cmp
xor
stos
or
cmpsb
rorl
jge
jb
add
adc
out
cmp
and
mov
add
aaa
mov
adc
lds
leave
out
lcall
in
dec
into
test
fwait
or
lock
and
scas
sub
loop
cmp
imul
mov
and
sub
ja
int3
mov
sarl
lahf
xchg
pop
hlt
mov
jo
movsl
push
outsl
cmp
stc
mov
fcomp
xchg
aam
repz
jae
imul
dec
adc
cmp
pop
insl
pop
xor
inc
or
div
push
mov
punpckhwd
push
mov
xchg
mov
pop
sbb
inc
cmpsb
push
cwtl
xchg
aas
lock
fstpl
inc
popa
lcall
jl
inc
dec
cmp
outsl
pusha
mov
popf
xor
mov
sub
mov
ds
jmp
add
movsl
mov
aas
lods
adc
fldenv
and
jle
push
lea
cmp
pop
mov
test
mov
scas
popa
and
mov
into
movzbl
iret
mov
hlt
jge
pop
pop
stc
inc
push
shl
adc
cltd
sub
xchg
icebp
cltd
es
mov
push
jo
mov
xor
stc
pop
push
cmp
mov
lods
push
xchg
mov
sahf
pop
jmp
pop
adc
mov
mov
sub
pop
jecxz
scas
pusha
cmpsb
enter
imul
jg
mov
jno
stc
hlt
das
rcr
dec
lahf
inc
out
dec
adc
jp
xchg
cmp
ds
sub
arpl
sbb
xlat
inc
pop
test
push
dec
jge
mov
int3
cmp
cmp
or
ficompl
mov
push
loop
fnstenv
xchg
nop
dec
dec
dec
cmpb
test
cli
loop
pop
xor
lock
sub
and
xorl
push
sbb
out
lock
lds
mov
jbe
sub
sti
mov
mov
inc
leave
pop
xchg
gs
das
sahf
xchg
mov
aad
mov
lods
arpl
mov
xchg
jbe
jl
cld
xor
hlt
into
movsl
lret
jo
jae
loopne
in
pop
jmp
or
inc
and
ret
or
nop
add
cmc
push
jmp
sub
pusha
or
clc
inc
and
scas
cli
clc
ret
jmp
ds
adcl
add
mov
scas
push
adc
clc
inc
xchg
and
or
repz
ret
lock
push
inc
dec
loop
inc
fcoml
aas
push
mov
out
bound
cld
dec
scas
jo
inc
in
jno
rcll
mov
mov
les
mov
cmpsb
sti
fildll
inc
mov
loopne
mov
fisubrs
ret
sub
mov
addb
out
inc
mov
push
xor
cmp
xchg
push
push
lods
inc
mov
lods
shrb
ja
dec
filds
pop
cmp
xchg
add
push
add
dec
cld
cwtl
or
push
sti
test
xor
test
cs
enter
repnz
xchg
pop
mov
outsl
pop
stos
dec
imul
add
cmp
icebp
outsl
jge
jmp
adc
addr16
loop
nop
add
pop
dec
push
mov
out
sub
sbbb
fstpl
ret
add
mov
jne
xor
jns
cmp
or
mov
dec
pop
jns
xor
aad
push
into
and
in
sub
jg
push
stos
mov
popa
xor
push
or
test
imul
xorb
or
clc
int
daa
in
xchg
mov
push
das
sub
scas
in
dec
sbb
and
dec
popa
pop
repnz
movsb
mov
jge
mov
push
pop
daa
movsb
push
ret
fsubrl
popl
mov
xor
loopne
and
pop
and
sbb
ror
and
negb
mov
cmp
mov
jle
es
xchg
jnp
xor
push
fists
test
or
cs
jp
add
push
jp
jecxz
push
fiaddl
sbb
xchg
fsub
sub
mov
call
aam
test
jns
mov
rcll
mov
and
dec
add
sbb
mov
mov
lcall
dec
cmp
das
jmp
jno
jnp
cmpsb
xchg
add
das
pop
das
dec
pop
ds
fdivrp
int3
mov
notl
and
mov
sbb
mov
jp
sbb
adc
psrlw
and
std
hlt
int3
sub
sub
incb
add
mov
and
mov
int
aas
pop
in
nop
sbb
iret
cmc
sahf
mov
mov
mov
sbb
mov
loope
scas
mov
rcl
loopne
jmp
inc
gs
cld
rolb
in
lds
mov
mull
dec
jb
scas
mov
ret
xchg
mov
push
adc
repz
orl
repnz
adc
movsl
call
mov
into
test
xchg
je
mov
push
pop
ja
adc
dec
or
push
aaa
mov
mov
in
aam
jmp
int3
inc
pusha
movsl
xchg
rcrb
push
pop
xlat
out
lods
sbb
xchg
das
xor
and
movl
dec
xchg
hlt
pusha
sub
idivb
sub
mov
insl
test
xor
imul
dec
cld
dec
mov
pushf
enter
mov
pop
aam
pop
aaa
xor
inc
xor
jb
repnz
int
push
add
sub
pop
jg
orb
gs
cmp
sub
lods
addr16
rcrb
repz
mov
sbb
movl
add
cmp
dec
imul
sbb
arpl
imul
jne
scas
repnz
das
or
jecxz
add
push
pop
pop
mov
mov
imul
insb
xor
push
pmaxub
cmpsb
dec
test
push
inc
faddl
rclb
mov
jbe
adc
cmpsb
jno
lock
xorl
shrl
adc
out
scas
out
fidivrs
scas
jo
fldt
movsl
push
pminsw
mov
jb,pn
sbb
fwait
mov
in
sti
mov
or
ret
les
add
push
fistpll
pop
add
push
ds
and
in
out
mov
fdivrs
into
mov
inc
les
mov
push
sub
cltd
mov
add
mov
xchg
add
mov
and
inc
sbb
or
dec
xchg
ds
dec
int
inc
nop
jbe
push
jle
in
pop
out
cmp
adc
adc
cli
fwait
movsl
xchg
cmp
and
andl
rolb
dec
lcall
repnz
mov
lods
jp
mov
lock
sbb
lods
repnz
fisttpll
adc
mov
lahf
out
aas
push
push
lock
sahf
ret
mov
pusha
int
decl
popl
dec
push
sar
dec
mov
pop
lcall
sub
inc
pop
pop
frstor
and
sub
and
int3
fcmovnb
jnp
mov
inc
je
imul
cmp
stos
sub
lock
xchg
repnz
push
lods
std
xchg
add
fldt
or
test
stos
dec
insl
cwtl
leave
test
jo
test
jb
loopne
aad
mov
cmp
repz
xorl
or
rcl
icebp
push
pop
hlt
push
jp
dec
sub
jge
xchg
scas
fstp
jmp
xor
and
push
sub
rcll
xor
outsb
divl
dec
sar
dec
cmc
or
and
flds
adc
mov
xchg
testb
addb
out
cld
out
outsb
lods
inc
sub
lret
jle
mov
negl
fsub
xor
add
mov
adc
or
sub
jnp
inc
xchg
lret
aaa
fldcw
lcall
inc
push
or
add
lahf
outsb
out
div
pop
xor
in
inc
sahf
fstpt
stc
xchg
ret
loopne
fisubrs
addr16
fstl
xor
xchg
andb
mov
jne
sub
lahf
pop
xchg
xor
scas
imul
orb
or
cmp
push
mov
rcll
mov
jp
mov
loope
sub
aaa
test
lcall
add
std
roll
push
xchg
cltd
aad
aam
mov
pop
movsl
lods
jnp
cmpsl
mov
lods
test
inc
cmp
mov
lock
gs
push
mov
mov
jmp
mov
stos
adc
cwtl
jl
repz
mov
dec
mov
jne
jecxz
fisubl
sahf
int
psubsw
ljmp
dec
xor
push
out
fidivrs
rcrb
test
sub
inc
sub
aas
fdivl
xchg
push
jle
insb
inc
lds
xchg
ret
jne
sbb
cmp
mov
dec
and
cmpsl
faddl
xor
out
inc
pop
lret
mov
xor
or
or
inc
push
push
push
fsubrs
pop
pusha
sbb
cmp
ret
clc
jbe
cmp
mov
gs
call
in
dec
jno
movsl
outsb
pusha
out
mov
inc
push
xchg
jnp
xor
add
xor
mov
pusha
push
in
lds
and
imul
in
icebp
inc
mov
push
mov
hlt
cmp
sbb
lret
xchg
test
outsb
shl
pop
in
test
and
push
sbb
mov
call
cmp
loope
jno
shll
cmpsb
or
xchg
mov
lea
dec
in
sbb
in
movsb
lret
mov
loope
push
xchg
sub
jecxz
push
jle
push
pop
sub
pop
call
adc
out
sbb
pop
and
jl
push
fstpt
ret
ds
je
mov
sbb
or
mov
in
sbb
push
cmp
aaa
adc
pop
push
out
cld
push
or
sub
jae
jp
jge
test
sarl
hlt
cli
and
pop
adc
cmp
sbb
aam
dec
insb
mov
or
jo
es
lahf
push
lods
jmp
push
xor
out
cmpsb
lods
cmpl
mov
mov
dec
pop
push
jl
cld
movsb
call
lret
gs
or
lock
mov
xchg
mov
cmp
push
pusha
sbb
jmp
pusha
xchg
cmp
jge
xor
jno
iret
jg
int3
hlt
jg
jb
ljmp
out
fldcw
mov
jae
ret
loop
lods
push
or
add
pop
stos
repz
mov
xchg
ret
and
inc
cmpsb
mov
dec
sub
adc
mov
test
test
push
jb
sbb
cmc
repnz
ja
sahf
cmp
adc
push
mov
repz
outsw
gs
cmp
cmp
mov
fidivrs
xchg
gs
cmpsb
sub
jle
movsl
pop
xor
sbb
inc
xlat
lret
mov
mov
cmp
push
outsl
add
or
je
cld
push
cwtl
movsl
icebp
sbb
adc
stc
pop
loop
fbstp
add
stos
inc
sub
pop
lock
jg
lock
pop
sub
mov
jnp
push
sarb
adc
mov
cmp
push
xor
pop
cmp
and
inc
nop
lea
push
jg
push
js
dec
lds
cmpb
ja
inc
cli
test
cltd
xchg
out
mov
push
inc
push
pop
pusha
fistpll
adc
cwtl
inc
add
sub
loopne
sub
ss
cmpsb
lds
or
popf
push
add
mov
mov
shlb
shlb
and
stos
cli
arpl
andb
cmp
mov
movsl
mov
sub
jle
decb
scas
cmp
sbb
pusha
in
jo
pop
and
xor
fsub
jmp
push
xor
pop
push
in
loope
loope
sbbl
mov
scas
push
outsl
sub
jle
aam
sbb
xchg
jp
xchg
pusha
sbb
sbb
adc
jne
enter
andb
andb
sub
push
xchg
sbb
lods
lock
lods
lock
enter
dec
xor
xchg
sub
cmpsl
bound
sub
inc
and
shl
mov
dec
dec
ficoms
or
pop
data16
push
adc
dec
lock
push
in
sarb
in
sti
jno
out
stos
dec
push
sbb
dec
or
out
cmp
ss
jl
jecxz
mov
imul
lret
lcall
loop
xor
sbbb
xchg
mov
call
cwtl
jb
test
ret
cli
fstl
xor
dec
jae
lods
adc
lods
jmp
pop
push
lds
dec
aad
mov
and
mov
xchg
ret
mov
mov
xlat
sub
cmp
dec
shlb
xchg
insb
lcall
pop
sbb
mov
and
aam
xor
lea
add
andb
pop
addr16
pop
lods
lds
sti
mov
dec
dec
or
jg
lea
jp
dec
xchg
cmp
mov
sbb
test
jle
ds
mov
icebp
imul
xor
cmp
jg
push
fucom
xchg
sub
mov
mov
sub
mov
jge
xchg
xchg
xor
sbb
sub
sub
call
and
inc
push
ljmp
sbb
or
and
mov
fdivr
push
xor
roll
jecxz
int
adc
lods
sub
push
stos
imul
repnz
cmp
int
mov
mov
pop
mov
dec
dec
jmp
stos
loop
fidivs
out
std
inc
sub
inc
sub
jecxz
push
call
pop
mov
repz
and
jl
or
add
jno
jbe
icebp
sub
icebp
lds
adc
lret
shrl
gs
sbbb
lcall
xlat
imul
inc
mov
adc
dec
in
addr16
pusha
dec
test
pop
aaa
adc
xchg
and
insb
fcmovu
xchg
data16
scas
pop
cmp
dec
jecxz
mov
mov
push
inc
loopne
jnp
jecxz
add
scas
adc
incb
andb
fldl
and
int3
dec
pop
add
ljmp
decl
ficomps
or
xchg
ljmp
loop
cltd
mov
in
jns
pop
pop
push
ja
mov
leave
xor
cmp
mov
adc
dec
ficompl
pop
inc
aaa
inc
jb
add
or
dec
and
mov
push
inc
push
fcompl
cmp
lret
mov
loope
jae
dec
push
fprem
lret
pop
mov
push
in
sub
sete
movsl
jp
fldenv
push
pop
mov
mov
iret
nop
and
mov
enter
mov
cmp
xor
mov
in
jecxz
lds
ret
pop
imul
cltd
mov
enter
jp
xor
cmp
sbb
sti
mov
cmp
vunpckhps
int3
xorb
mov
out
mov
sbb
sub
fwait
cmp
nop
test
loope
pop
fsubrs
arpl
inc
or
fnstcw
xlat
sub
out
inc
adc
jmp
inc
repnz
loopne
fldenv
stos
mov
cltd
pop
and
test
popa
push
xchg
sti
shr
scas
sti
pusha
sbb
cld
aad
and
cmp
pop
jb
inc
mov
negl
jbe
sbb
xor
repz
lcall
enter
xchg
cmp
mov
fmull
and
mov
add
mov
dec
and
push
sbb
sub
adc
mov
sbb
mov
xchg
lock
mov
popa
push
push
aad
test
clc
shl
dec
jl
jl
addr16
add
sbb
lods
and
movl
repnz
gs
les
cmpsb
sti
cwtl
inc
jb
and
push
js
and
pop
out
sbb
inc
mov
ss
lret
ret
popf
jmp
push
and
inc
lcall
dec
mov
iret
cmc
pop
pop
outsl
jno
mov
inc
sub
jecxz
fwait
dec
jge
test
push
stos
cmc
xor
sub
imul
bound
scas
ds
cltd
push
mov
js
mov
mov
push
xor
movsb
hlt
sbb
sbb
les
xchg
addr16
lds
test
dec
xchg
aas
inc
imul
into
in
mov
mov
icebp
sub
or
sbb
add
mov
push
xchg
adc
or
sub
clc
xlat
imull
cmpsl
mov
xchg
dec
jno
jb
dec
inc
loop
aas
out
inc
jecxz
fldl
cwtl
cmc
shll
push
ljmp
call
jmp
mov
sub
jne
sub
loop
aam
or
sarl
movsl
push
int
cmp
scas
add
out
popa
imul
shl
mov
sahf
mov
mov
stc
xor
xchg
or
insl
sti
or
cld
mov
xor
aam
ret
dec
cli
test
loope
mov
test
pushf
loopne
mov
dec
jle
mov
dec
mov
es
arpl
mov
js
push
int
test
pop
mov
out
cmc
jecxz
xchg
push
lcall
or
mov
cmpb
push
adc
out
popf
jmp
add
mov
inc
insl
fwait
daa
pop
sub
repz
mov
push
insb
shlb
push
lea
dec
jbe
les
mov
and
dec
out
fldl2e
add
mov
stc
dec
fwait
mov
cmp
data16
jo
fiadds
xor
outsb
adc
mov
adc
aad
xlat
sahf
rcll
in
out
mov
cmpsb
cmp
xor
push
icebp
or
or
mov
cmpsb
dec
fs
or
loope
scas
lahf
js
mov
lods
jbe
sub
pop
inc
dec
lret
sarl
dec
inc
pop
out
and
loopne
ja,pn
mov
fidivrl
adc
mov
pop
push
xor
or
pop
cmp
mov
out
jge
mov
sub
repz
cli
ja
stos
fldcw
and
testl
negl
xchg
inc
pop
jp
xchg
inc
xchg
bound
mov
and
leave
ljmp
ds
scas
jns
out
lds
rol
mov
subl
push
aam
or
push
dec
outsb
push
cmp
add
fwait
or
push
sub
cmpb
push
subl
in
mov
mov
mov
mov
and
loopne
jo
cmp
mov
adc
xorb
leave
aaa
dec
hlt
add
mov
mov
mov
mov
xchg
loopne
and
adc
dec
add
lea
aad
cltd
ret
pushf
push
pop
std
xchg
int
ds
mov
scas
das
enter
decb
add
adc
mov
push
or
subl
std
and
mov
xchg
orb
scas
je
popa
or
or
inc
repz
push
je
jns
fistl
pop
jnp
push
rcll
push
mov
cmp
lds
jb
outsl
mov
xchg
movsb
pusha
and
dec
and
dec
stc
icebp
fistpl
test
aaa
mov
jne
cmp
mov
or
loopne
lods
test
pop
movsb
test
add
cs
loop
xchg
out
adc
or
sub
into
mov
push
xlat
cs
fistpll
xchg
in
mov
xchg
push
xchg
shlb
fidivl
sbb
xor
fstpl
cmp
iret
xor
cld
adc
sahf
hlt
pop
push
scas
jne
gs
inc
pop
cltd
or
xor
push
sbb
mov
shlb
mov
push
imul
scas
pop
sub
divl
jne
in
mov
and
push
mov
mov
inc
dec
sub
xor
in
lahf
and
or
fdivl
call
shll
pushl
mov
pop
xchg
je,pn
clc
xor
add
nop
cmp
xchg
ss
add
inc
int
daa
aas
out
ljmp
cs
inc
xchg
pushf
mov
sbb
jne
inc
mov
test
sbb
nop
test
mov
xor
add
sbb
mov
lods
test
sub
jbe
cli
add
pop
js
fsubrp
cmp
ds
sub
cwtl
and
movsb
or
sahf
aaa
dec
xor
jbe
rcll
mov
mov
pop
push
mov
enter
pop
cli
jne
and
fisubl
iret
sbb
mov
cmp
cmp
rolb
cmp
add
jl
xor
add
ljmp
and
push
loop
push
sub
push
test
insb
les
add
add
insb
ljmp
mov
cmc
sub
add
mov
mov
hlt
mov
test
ss
cmpsb
and
sbb
jge
in
or
dec
test
inc
cmp
lock
cmpsb
lea
push
cmpb
shlb
ja
out
mov
mov
mov
shlb
into
lret
inc
data16
iret
bound
mov
lret
mov
or
and
clc
lcall
aaa
inc
divb
cmpl
cmp
scas
and
dec
sub
ja
shlb
popa
or
sahf
repz
adc
out
int
aad
out
and
stos
cld
xor
sbb
aaa
mov
enter
cmp
xor
pop
aad
hlt
out
push
add
scas
pushf
out
movsb
ds
cmp
inc
push
cld
push
pop
icebp
mov
jle
loope
fisubrl
sbb
hlt
dec
push
daa
push
cmc
dec
push
push
or
out
iret
aam
ljmp
jl
mov
jbe
out
pop
and
test
lret
imul
sbb
mov
fdivl
mov
dec
fstl
mov
jo
pushf
xchg
pop
push
adc
push
xchg
imulb
sub
js
jle
sub
ret
xchg
xchg
fs
sbb
cltd
mov
sub
movsl
out
imul
stos
mov
mov
add
push
jns
push
jmp
lock
movsb
adc
mov
cmpsb
ljmp
add
ja
xlat
repnz
inc
jl
jmp
arpl
mov
daa
mov
lret
out
xchg
jo
lcall
mov
cmpsb
fsubl
lods
repz
out
imul
inc
loopne
xchg
stc
inc
xchg
sarl
dec
mov
rcll
xor
push
cmp
int
or
repz
fnstcw
clc
adc
pop
cwtl
jbe
mov
jno
sub
mov
fsubl
mov
xchg
sbb
leave
adc
add
popf
aas
fbld
mov
pop
mov
and
sub
push
adc
xor
hlt
sub
sub
lret
scas
mov
jnp
and
orl
mov
outsb
sub
test
add
lret
and
add
out
lds
loope
xor
test
in
lods
scas
jbe
movsl
inc
or
lds
cmc
iret
mov
leave
in
and
pop
dec
fwait
stos
inc
mov
es
mov
loope
lret
mov
es
rorl
loopne
inc
add
xchg
dec
mov
out
daa
pop
js
cli
pop
or
in
addb
enter
loope
mov
les
xchg
jmp
lock
repnz
sbb
ror
sub
lret
call
mov
nop
lret
cmp
mov
into
xchg
aaa
pop
sti
jns
inc
sub
inc
iret
aad
mov
sub
nop
ljmp
movsl
or
lret
mov
xor
sbb
std
and
int3
xlat
cmp
fcomps
adc
push
stos
inc
dec
js
icebp
add
jmp
fwait
in
outsl
pop
pop
subl
xor
lds
gs
and
cmp
mov
xor
pop
adc
mov
cli
clc
cmp
push
imul
fisttpl
aaa
fmul
jo
add
mov
push
popa
add
mov
mov
mov
fsubp
xchg
lds
out
jp
mov
mov
rcll
jle
inc
cwtl
jmp
movsl
xchg
pop
iret
dec
pop
lcall
inc
test
mov
ret
xor
mov
jp
push
dec
pushf
push
cmovl
js
rorl
fadd
mov
inc
jnp
add
test
dec
push
js
xlat
add
cmp
xlat
inc
mov
cmp
adc
xchg
adc
jle
sar
sbb
xor
push
repz
cmp
aad
dec
sbb
add
adc
adc
pop
into
add
movsl
xor
lock
mov
add
cmp
pop
dec
mov
es
push
cmp
arpl
outsb
arpl
pop
fs
mov
fidivs
add
inc
mov
test
push
xor
mov
push
cmpsl
rcll
out
push
and
stos
das
cmc
mov
mov
out
call
adc
mov
mov
sbb
dec
mov
dec
iret
adc
adc
add
popfw
push
sub
daa
cwtl
les
pushf
sub
mov
pop
arpl
scas
mov
test
mov
enter
popf
or
and
mov
mov
cli
cli
push
push
mov
pop
jnp
push
pop
adc
xchg
addl
ljmp
xchg
and
or
cmc
cmp
jmp
stos
cli
lcall
popa
xchg
scas
mov
push
das
mov
pop
mov
lret
mov
and
adc
mov
pop
leave
mov
cmpsl
cs
mov
jnp
sub
jge
lea
jmp
pop
pop
push
mov
pop
test
push
push
mov
inc
lods
cmpsl
arpl
scas
notb
nop
and
mov
aam
push
mov
sbb
mov
adc
popf
jb
jae
cmp
aam
pop
notb
lods
inc
mov
xchg
addr16
ss
aam
mov
push
mov
cltd
jbe
pushf
sbb
push
mov
add
and
pop
mov
popf
and
add
dec
pop
outsb
or
xchg
dec
pop
dec
adc
jecxz
sbb
stc
out
pop
inc
mov
cmpsl
stos
mov
loopne
push
dec
xor
cli
scas
addr16
inc
mov
add
dec
push
pop
xchg
popl
jo
jnp
adc
xchg
clc
pop
and
xor
lea
out
movzbl
jbe
or
jae
pushl
inc
les
sahf
cmp
das
test
pop
pop
loopne
pop
xchg
sarb
jp
push
arpl
jmp
xor
add
insb
lock
cmp
repnz
mov
cmp
push
frstor
adc
and
stc
shlb
in
lods
negl
dec
fbstp
cwtl
aaa
mov
or
push
mov
or
subl
out
mov
imul
sub
jns
pop
sub
xor
push
jl
push
mov
ret
mov
lea
das
xor
jle
repz
xchg
aas
fwait
popf
mov
pop
mov
gs
jb
ror
test
filds
xchg
ucomiss
sub
test
inc
mov
mov
pop
inc
loopne
inc
mov
sub
mov
mov
test
sbb
loope
add
xor
int
andl
int3
adc
or
cmpsl
stc
jl
add
cltd
pusha
inc
pop
pushf
fisttpl
xchg
insl
inc
sarb
push
sbb
push
xchg
insb
sbb
dec
cltd
xchg
inc
scas
lret
orb
testb
subb
outsb
ljmp
push
bt
push
xchg
push
adc
addb
cmp
andl
mov
jmp
je
jns
xchg
fnstsw
pushf
pop
out
popa
and
mov
in
test
test
pop
mov
dec
jne
mov
es
imul
ss
xlat
scas
push
cltd
pop
lret
and
push
lret
mov
das
lods
xchg
lds
jbe
imul
inc
sahf
and
xchg
and
xchg
push
loop
mov
mov
ljmp
mov
jnp
jp
lcall
mov
lea
ret
mov
insb
mov
jl
lock
outsl
or
cmp
xchg
sub
push
mull
cmp
bnd
pop
out
mov
out
imul
cmp
adc
dec
ja
filds
data16
dec
gs
sub
leave
mov
mov
cs
push
mov
cmpsb
stos
pop
shll
fcoms
mov
lock
mov
cmp
fimull
lret
daa
xchg
imul
pop
out
popf
repz
imul
mov
jno
add
mov
push
out
mov
gs
push
or
xorb
int3
sub
fwait
xchg
mov
test
push
or
cmp
aaa
fisttpl
push
dec
mov
ret
jecxz
lds
aas
fsubl
enter
lock
lret
je
lods
call
js
std
fsubs
xchg
call
mov
xor
adc
mov
into
xchg
jae
pop
imul
cmc
stc
mov
nop
ret
and
sbb
popf
movsl
ret
sti
pop
jns
xor
push
loopne
inc
jae
nop
sub
loope
leave
insb
sub
ljmp
es
jmp
in
inc
arpl
jno
pop
repz
cmp
push
mov
and
punpckhdq
ret
cs
push
stos
lret
pop
mov
pop
pop
add
xchg
dec
enter
stos
inc
and
cld
sahf
dec
bound
adc
es
fstps
into
push
jo
or
loop
enter
mov
pop
xchg
mov
dec
lret
hlt
jg
dec
add
mov
outsb
gs
imulb
mov
in
jle
cmp
push
les
out
hlt
out
and
xchg
fld1
scas
jns
sbb
mov
adc
scas
scas
shlb
mov
and
loop
xor
test
sbb
jno
jnp
push
xchg
mov
das
sti
pop
xlat
xor
arpl
push
push
pop
xor
fidivs
imul
mov
cmpsl
xor
push
sub
movsb
orb
fistps
cmpsl
mov
out
jnp
cmpb
cmpsb
sahf
int
lea
scas
lahf
mov
xchg
movsl
orb
sub
push
gs
iret
sahf
js
or
fildll
mov
pop
inc
and
jmp
cmp
push
inc
xor
out
pop
rolb
int3
sbb
or
shl
scas
popf
lods
mov
pushf
data16
dec
xor
mov
mov
push
dec
lret
leave
int
jmp
sub
lds
inc
sbb
mov
fimuls
das
call
cmp
cmp
fsubs
cmp
or
xchg
in
sub
xchg
cmp
sub
std
or
fs
scas
das
or
pop
xchg
jg
int
and
rcll
lea
mov
or
xor
inc
adc
adc
mov
pushf
xor
sbb
les
mov
pop
xorb
imulb
or
enter
rcrl
push
adc
shrl
lock
adc
mov
xchg
stc
sbb
cwtl
jg
pop
push
int
into
je
call
imul
lds
push
test
shr
into
sti
sbb
lods
roll
nop
cmp
orb
aaa
push
dec
out
xor
pop
neg
test
aaa
mov
jl
push
pop
or
jbe
xor
xor
mov
scas
mov
jmp
jecxz
iret
out
and
xchg
lock
in
mov
jle
cmc
jno
xor
testb
push
shlb
mov
movsb
inc
mov
inc
pushf
sbb
gs
mov
lods
icebp
sbb
pop
inc
sub
sbb
popl
or
repnz
cmp
jmp
and
insb
jb
scas
lcall
inc
xchg
and
xchg
jnp
push
ja
nop
adc
inc
cli
mov
adc
cs
cmp
loope
rcll
mov
sbb
ss
ja
pop
cli
jmp
int
loop
daa
cmp
stc
mov
dec
fimull
cmp
pop
lods
xchg
hlt
sub
cmpsb
sti
jl
mul
andb
dec
jecxz
xchg
sbb
and
shl
pushaw
sub
or
sarl
and
mov
in
xchg
sub
xchg
insb
les
jno
outsb
and
adc
cmc
push
loope
push
cmc
movsl
adc
push
movsl
add
cld
cli
inc
es
fs
fnstcw
imul
or
mov
mov
mov
xorb
mov
js
std
popf
or
movsb
mov
adc
mov
mov
enter
mov
imul
add
out
xor
cmpsb
lods
lea
ja
sub
cs
lods
pop
shl
enter
dec
mov
and
mov
inc
adc
cmp
mov
adc
push
mov
cmp
shl
aam
dec
jecxz
arpl
or
cmp
and
test
stc
jge
push
mov
cli
or
xor
cli
mov
and
xchg
cltd
jbe
cmp
sahf
test
sbb
sbb
mov
inc
mov
ret
mov
adc
mov
loopne
lret
pop
pop
loope
xchg
mov
mov
jo
mov
add
hlt
xchg
adc
test
jecxz
jge
or
jmp
loope
mov
mov
sti
stos
cmp
mov
sbb
inc
cmp
outsb
shrb
imul
sub
pusha
in
or
test
addr16
inc
lret
cmp
daa
fdivrl
gs
mov
mov
mov
push
jnp
fs
sarl
lods
into
push
xlat
mov
addr16
inc
stos
add
or
xlat
sbb
lea
pushf
xlat
insb
cmpsb
or
outsb
sti
shrl
cmp
sti
call
inc
aas
cmp
stos
jno
cmpsl
mov
push
in
dec
in
lcall
add
mov
mov
and
ja
cwtl
add
stos
add
int3
les
nop
addr16
mov
lock
cmp
xchg
cmp
push
or
xchg
xchg
xchg
js
adc
into
xchg
sub
mov
xchg
mov
cld
out
jmp
pop
cmp
rclb
les
pushf
test
cmpsb
bound
test
sarl
bound
lcall
push
test
outsb
pop
cltd
fldl
pop
repnz
lds
std
fnstcw
adc
mov
mov
push
not
mov
pop
fwait
adc
adc
pop
jns
stc
push
pop
mov
sub
hlt
and
hlt
jnp
mov
pop
dec
inc
xor
push
fldl
repnz
mov
dec
jb
sub
pop
jnp
dec
stos
sbb
mov
imul
mov
pop
sti
push
mov
adc
mov
outsb
dec
dec
mov
scas
notb
in
roll
sti
xor
adc
push
sub
loope
dec
sbb
pop
push
sbbl
arpl
daa
ret
shl
xchg
sbbb
fbld
loope
mov
mov
ret
and
mov
jae
cltd
out
jl
icebp
jo
mov
fwait
sub
stos
jbe
sub
loop
fiaddl
cmp
leave
jb
inc
lret
inc
popf
popf
int
bound
lret
dec
sbb
dec
jge
xchg
mov
and
dec
jp
imul
lcall
sub
jnp
test
jl
loop
and
push
imul
or
xchg
sbb
push
jno
adc
xlat
fs
incl
rcll
iret
and
ja
mov
pushf
mov
dec
adc
inc
sbb
repnz
mov
ss
and
cwtl
repz
std
out
jbe
mov
lock
rorl
stos
enter
dec
pop
jg
imul
dec
es
lea
movsl
push
pusha
cs
or
test
repnz
mov
push
mov
outsl
imulb
repz
fnsetpm(287
add
jl
jae
sbb
and
frstor
sbb
jp,pt
out
inc
jne
loope
jmp
push
mov
jno
mov
sub
mov
jne
repz
or
or
iret
jae
test
and
mov
cmp
inc
add
mov
lret
mov
jno
jge
aam
mov
arpl
call
js
add
and
mov
xor
add
leave
add
rorl
xchg
push
dec
mov
cwtl
bound
nop
icebp
mov
fs
xchg
loope
sti
inc
jl
push
jbe
fsubrs
stos
jb
dec
pop
inc
sub
fsubs
push
inc
out
inc
in
jae
jo
jno
pushf
lahf
cli
inc
stos
roll
leave
jno
call
or
bound
testl
xor
mov
aad
cwtl
mov
loope
adc
pop
fadd
jmp
and
repnz
add
repz
aas
pop
push
sahf
punpckhwd
inc
push
fwait
movsb
jb
out
lods
cmpsb
int3
or
insb
imul
push
inc
mov
lret
repnz
call
rcrl
ret
sub
jmp
jmp
cmp
ret
cvttps2pi
inc
mov
or
push
mov
push
cmp
lods
jnp
xchg
sbb
push
xchg
out
test
push
popa
lds
and
jbe
cs
add
stos
mov
mov
pop
cmpsl
mov
pusha
insb
push
js
sub
sti
negl
mov
mov
sub
data16
cmp
rolb
out
jne
cmp
cmpsl
insl
add
mov
cmp
imulb
rcl
mov
or
test
inc
xchg
in
aaa
pop
scas
jl
test
sarl
imul
mov
xor
xor
jne
mov
push
into
jns
stos
xor
mov
outsb
xchg
mov
mov
pop
adc
jbe
adc
gs
jbe
aad
insb
mov
inc
jb
add
ss
cmpb
scas
dec
jbe
in
jl
xchg
xchg
adc
sub
push
xchg
and
sti
sub
cmpsl
into
das
cmp
pushf
repz
adc
mov
xchg
pop
cmc
insb
sbb
jbe
pop
jmp
scas
mov
push
neg
dec
mov
js
cmpsl
xor
ret
pop
int
bswap
mov
xor
fs
test
adc
scas
pop
xchg
pop
sbb
bound
xor
repz
ljmp
adc
mov
inc
aas
lock
jnp
pop
pushf
daa
push
mov
add
sbb
inc
rcl
sub
mov
mov
mov
lods
jl
fadd
cmp
push
and
cltd
jnp
loop
gs
int
jle
mov
pop
enter
test
out
sub
lahf
add
push
shr
out
push
xchg
push
pop
add
outsb
xor
test
lret
paddusw
xchg
pop
pop
push
xlat
and
xor
mov
jp
aaa
movsl
mov
out
jge
sbb
imulb
push
jbe
pop
xor
mov
rorb
push
push
pop
xchg
mov
jnp
lret
js
mov
or
mov
cmpsb
lds
mov
movsl
add
pmulhuw
andl
cmp
mov
adcb
mov
rol
in
or
mov
ret
mov
push
hlt
or
mov
loope
clc
inc
mov
int
scas
clc
je
int
dec
push
fmuls
aam
daa
les
and
out
add
in
shll
sub
lea
outsl
ds
mov
push
shlb
adc
sbb
ret
xor
adc
prefetchnta
ret
jo
incb
push
shlb
loope
adc
mov
jb
loopne
lret
filds
gs
lods
mov
adc
jl
dec
ficoms
jo
jmp
or
xchg
jecxz
xor
ret
js
test
xchg
mov
xchg
pop
inc
in
jl
xchg
sbb
data16
cli
xor
sahf
dec
fs
hlt
sbb
inc
xor
insl
xchg
inc
insb
ljmp
movsl
movb
dec
xchg
xchg
std
js
or
popf
push
std
xorb
gs
bound
ds
mov
cmc
pop
das
xchg
je
mov
pushl
das
xchg
cmp
fcmovnbe
dec
cld
adc
push
test
lret
mov
add
daa
adc
mov
aaa
pop
xchg
jne
push
dec
jl
or
push
or
les
jmp
push
fstps
lea
jecxz
push
mov
shll
xor
adc
dec
lret
ficomps
ds
je
dec
loop
cld
sahf
enter
mov
push
insb
bound
shrl
lret
fucomi
inc
movsl
and
imul
push
add
insl
mov
mov
loopne
lcall
leave
fs
sub
int3
test
js
and
aad
mov
xchg
add
mov
push
mov
mov
mov
cmc
mov
outsb
jno
out
pop
pop
sar
or
jecxz
jne
testb
enter
pop
fsubs
cwtl
inc
loope
scas
arpl
push
adc
daa
lret
push
dec
movsl
stos
mov
out
sub
movsl
cmp
call
pop
xchg
out
mov
es
aad
nop
lcall
test
fisubrl
sub
cmpl
inc
stos
push
jns
icebp
ret
xor
xor
adc
mov
mov
or
popa
xchg
clc
and
scas
mov
loop
xlat
add
pusha
test
in
sarb
sub
jecxz
dec
cmp
sub
mov
lret
call
lahf
icebp
xchg
incb
lahf
pop
hlt
call
sbb
loopne
push
mov
sti
std
xchg
shl
sbb
pop
dec
popf
daa
ret
jl
call
flds
aam
js
lods
adc
adc
in
pop
mov
outsl
ficompl
imul
out
aad
cmp
movsb
stos
and
fdiv
adc
cs
xchg
ret
add
testb
jle
mov
lret
and
pushf
daa
push
rclb
adc
jmp
test
out
in
ja
jmp
jns
inc
int3
push
into
lcall
int
jge
add
movsb
mov
dec
shl
add
inc
fmuls
inc
adc
or
xor
ffreep
jle
es
jle
les
ficoms
mov
out
inc
out
jo
test
inc
pop
rorb
pop
imul
mov
pop
bswap
jo
sbb
ljmp
push
daa
ja
mov
dec
xchg
mov
adc
mov
mov
test
xchg
lcall
arpl
je
daa
adc
dec
push
lds
xor
push
inc
mov
pushf
nop
into
mov
jecxz
pop
dec
push
in
jno
scas
out
xchg
sahf
ss
mov
mov
movsl
and
ret
pop
inc
ss
jo
inc
adc
in
mov
or
mov
call
inc
mov
cli
mov
mov
xchg
mov
or
scas
sub
js
add
add
sarl
sub
lock
xor
cwtl
aam
test
lea
mov
add
cmpsl
mov
xchg
outsl
ss
push
mov
dec
fs
jp
inc
mov
mov
aad
xlat
imul
movsb
test
leave
dec
rol
mov
mov
dec
sbb
lahf
xlat
xchg
push
scas
insb
mov
leave
sti
adc
dec
sarl
ljmp
and
dec
aas
push
fisubrl
pusha
jl
popf
out
pusha
jo
add
mov
ds
stc
xchg
ficompl
jno
adc
mov
mov
les
testb
lods
inc
fucomi
adc
aam
test
cmp
call
xchg
aam
push
jnp
push
nop
insb
or
mov
fs
js
je
jle
inc
pop
lods
xchg
sbbl
inc
lods
aaa
inc
test
jl
push
daa
das
cli
xchg
sbb
mov
cwtl
cli
mov
rclb
jbe
popf
sub
cld
push
aaa
movsb
sub
sarb
jecxz
insl
cmp
add
sub
mov
and
xchg
pushl
ljmp
cmpsb
adc
ljmp
xchg
ja
leave
dec
cs
mov
and
xor
pop
in
loope
ret
sub
std
xlat
mov
xor
push
mov
dec
mov
loop
add
movsb
mov
gs
mov
ret
mov
sbb
mov
call
sub
jne
jmp
ficoml
fistpl
shrl
mov
incl
in
mov
pop
sub
movb
std
jb
add
cmc
and
pop
nop
jae
xchg
in
scas
sub
ret
in
sub
dec
sub
je
cmpsl
push
adcl
jnp
pop
inc
cmovae
js
sti
inc
adc
pop
in
push
clc
add
movl
sbb
sbb
push
int3
sbb
lret
mov
add
loop
cltd
and
xchg
outsl
jge
push
daa
xor
xchg
sbb
jge
sub
sti
or
sub
in
dec
xor
push
sahf
div
or
mov
icebp
ja
mov
cmpsl
nop
pop
rolb
out
out
dec
jecxz
sub
shrb
sbbb
push
or
mov
dec
dec
loop
xchg
mov
add
jge
xor
inc
xchg
pop
mov
clc
call
push
mov
xchg
sbb
je
mov
sub
dec
out
add
out
inc
sbb
push
into
cwtl
orb
sbb
or
adc
push
pop
cmp
lcall
test
mov
jmp
sub
in
iret
cmp
pushf
ja
dec
aad
and
shll
inc
test
mov
aad
pusha
pop
xor
fidivrs
inc
dec
icebp
mov
inc
cwtl
dec
dec
or
in
icebp
hlt
add
divl
pop
add
cltd
pushf
sub
lret
out
insb
and
xor
push
in
call
cs
push
mov
repz
mov
imul
jae
dec
xor
pushf
push
fmull
rcll
int
mov
sahf
pop
call
cvtpi2ps
js
mov
fs
std
les
lds
rorb
xor
xchg
out
or
rol
xchg
mov
cmp
xchg
fsubl
push
in
and
jmp
mov
dec
addr16
lret
leave
cmc
and
mov
idivb
adc
scas
sub
jbe
cmp
shl
push
mov
insb
inc
add
and
pop
inc
and
mov
dec
in
fs
or
lea
lock
jmp
mov
jno
jno
push
fwait
subb
dec
cmp
jl
pop
xchg
sub
int
stos
frstor
jns
into
pop
push
pop
xchg
pop
call
loop
je
mov
fisubrs
or
dec
test
subl
inc
mov
xchg
rorb
ljmp
insl
loop
loope
inc
dec
xor
cwtl
movsb
leave
push
xchg
jne
loope
sub
js
int3
nop
mov
adc
cli
sbb
aas
cmp
mov
xor
stc
in
xor
cmpsl
fisubl
fnstcw
mov
cmpsb
cld
ret
push
add
test
and
jo
popf
mov
daa
lahf
filds
add
sbb
cmc
test
pop
push
lods
or
sti
push
adc
pop
clc
push
adc
dec
adc
test
stc
in
ret
out
aaa
mov
jecxz
addr16
std
jne
push
sbb
test
xor
jge
inc
repz
push
aam
inc
inc
ja
cld
jae
adc
dec
imul
add
out
mov
fidivs
es
sub
jg
daa
add
cwtl
sub
test
cmpsb
push
mov
adc
inc
movsb
rclb
aad
or
loop
lret
jp
pop
add
test
and
shll
cmpsl
sub
mov
push
les
cmp
sbb
mov
ret
daa
dec
arpl
dec
and
cmp
cld
inc
adc
jecxz
adc
setle
sbb
in
or
call
sbbl
adc
popf
lcall
pop
stos
add
push
and
jnp
and
mov
push
xchg
jnp
add
imul
inc
daa
lretw
ljmp
xor
js
lahf
dec
inc
sbb
iret
sub
cwtl
je,pn
cmpsb
sub
iret
cmp
lcall
retw
popf
test
xchg
xlat
mov
cmpsb
inc
mov
and
out
cmc
push
or
shl
movsb
inc
js
add
addr16
jecxz
mov
fidivrs
push
lock
popf
push
out
mov
sbb
mov
insb
mov
sar
outsl
add
push
ss
or
and
jg
sub
mov
jg
sbb
and
jle
movsb
sbbb
scas
sub
mov
xor
push
rcr
test
loopne
jo
mov
inc
and
movsb
jno
adc
imul
mov
ret
inc
jnp
sub
cltd
dec
and
insl
mov
out
lods
and
aad
xchg
jae
sbb
pop
punpckhbw
call
js
pop
jg
out
pop
mov
push
iret
push
cltd
arpl
out
xor
enter
sub
lock
out
mov
stc
push
add
mov
idiv
sbb
arpl
adc
rorb
scas
repz
test
jb
cmc
jg
dec
popf
ljmp
jne
push
outsl
inc
je
sbb
insl
sbb
call
stos
cli
sbb
fsubs
add
or
mov
jns
dec
jecxz
loope
je
imul
jg
xchg
jne
lret
andl
insb
jae
inc
jo
movsl
cli
push
adc
pop
and
ja
test
sub
cmpsl
leave
mov
cmpsl
add
mov
cmpsl
loope
dec
mov
ret
mov
vandps
inc
popa
fsubrl
push
jnp
out
pushf
fimull
mov
icebp
repnz
add
add
pop
sbb
ja
pushf
push
aad
xchg
sbb
stc
push
leave
aam
mov
push
fisubl
insl
mulb
es
push
mov
addr16
push
inc
push
rcrl
add
inc
insl
add
push
jg
jp
popf
mov
seto
and
xchg
dec
or
in
xor
pop
lods
int3
jmp
clc
xchg
mov
cld
shrl
and
cld
push
loopne
ljmp
mov
pop
mov
cli
jl
and
dec
test
mov
mov
pusha
sbb
inc
out
bound
addr16
push
pop
cmp
dec
int3
sub
cmc
mov
fidivs
inc
sub
xchg
data16
or
je
nop
push
sbb
push
loop
cli
cld
aam
push
mov
jle
sbb
sbb
inc
js
nop
sbb
mov
or
test
shll
or
xchg
dec
icebp
cs
push
popf
ret
adc
dec
sbb
mov
sbb
notl
movl
inc
push
sub
jmp
or
sbb
xchg
mov
jae
cmpb
pop
push
adc
ljmp
mov
clc
sbb
jbe
adc
cltd
mov
push
xor
jmp
stos
add
push
rcr
xchg
lock
and
lock
push
stc
mov
pop
sub
sarl
stos
cmp
mov
sbb
inc
aaa
dec
mov
xchg
enter
out
cmc
adc
adc
xchg
mov
cli
sbb
adc
and
popa
test
pop
pushf
sbb
sub
xchg
aas
test
sub
cmp
outsb
or
pop
jmp
jbe
sbb
push
adc
shll
mov
addr16
sbb
or
cmpsl
lcall
mov
push
cltd
pop
xor
lock
adc
inc
inc
dec
enter
aas
push
scas
lock
xchg
mov
leave
je
jne
or
icebp
stos
pop
pop
push
test
xchg
iret
loope
outsl
call
stc
jle
andl
mov
mov
popf
nop
pusha
fidivs
aas
mov
jnp
mov
sub
mov
xor
add
mov
repnz
iret
imul
push
out
movsb
xor
bound
leave
repnz
jmp
mov
lods
sti
aas
in
adc
lods
sti
icebp
pop
stc
push
mov
inc
hlt
cmpsl
pop
bnd
bswap
xor
mov
sbb
or
push
dec
cmpsb
sbb
stc
rorl
adcl
add
pop
and
and
adc
test
scas
adc
jp
jmp
dec
fisubrl
fwait
ret
sti
xchg
xchg
out
dec
popa
push
lret
bswap
aas
and
jb
mov
and
inc
pop
sbb
mov
and
add
jecxz
shlb
xor
and
jmp
mov
sub
cmp
rcr
xchg
dec
insb
in
jno
es
cmc
mov
fstl
mov
xchg
or
sbb
test
mov
negl
inc
std
mov
out
cmpsl
mov
mov
dec
sbb
mov
getsec
inc
aad
fcompl
out
in
mov
add
addr16
push
ljmp
enter
outsb
inc
jp
pop
adc
mov
fnstsw
jnp
cmp
stos
fldenv
and
fdivs
aas
mov
and
xor
push
jge
ljmp
pop
icebp
loopne
sbb
fdivrl
mov
ficoms
dec
push
sbb
push
les
inc
sbb
pop
pop
cmp
sarl
sbb
ss
mov
jp
lods
and
std
shll
inc
sub
pushf
negl
mov
pop
or
iret
aad
pop
jge
pop
int
into
lods
xchg
stc
sub
mov
dec
mov
insl
dec
pop
dec
stos
bound
lock
and
aas
std
and
xchg
lret
test
push
jae
mov
scas
pause
ret
gs
dec
sbb
xor
mov
xlat
cwtl
insb
out
and
xchg
notb
daa
in
dec
or
adc
sub
adcb
lahf
dec
dec
sbb
cmp
jmp
cmp
jnp
jecxz
ljmp
xchg
dec
fs
prefetch
cwtl
jmp
pop
ret
int
cltd
sub
pusha
dec
jno
push
xchg
addr16
sahf
xchg
into
outsb
lock
test
dec
movsl
shl
mov
es
movsl
jecxz
ret
and
mov
cmpsb
jns
lock
and
or
sub
into
xchg
repnz
cmp
xor
sbb
movsb
gs
jecxz
push
xorb
rcrb
mov
fistl
jbe
mov
and
add
lret
cmc
arpl
push
test
sbb
push
es
je
cmp
sarl
sub
pop
roll
les
jae
or
inc
notl
sub
push
xchg
leave
daa
jns
dec
xchg
push
lds
adc
repnz
stos
int
adc
mov
scas
xor
fldenv
jge
cs
mov
shll
ja
dec
pop
ja
xchg
loope
pop
mov
xor
cmc
fdivr
aam
mov
jae
lds
int3
jno
sub
iret
mov
mov
inc
push
arpl
xchg
push
sbb
adc
add
xor
scas
imul
ret
fiaddl
cltd
cltd
insl
mov
addl
add
cmp
pop
jl
les
fisttps
stos
pop
roll
popa
mov
push
mov
jge
movsb
popa
daa
jmp
push
xor
lods
enter
cld
stos
sbb
push
int3
cs
fisubrl
das
xor
inc
xor
cmpsl
xchg
jae
push
and
inc
jmp
or
sub
pop
mov
xor
data16
xchg
mov
mov
test
gs
xor
fdivs
sub
pop
imul
jb
mov
fnstenv
ret
fnsave
loop
xor
icebp
xchg
push
stc
xchg
mov
push
push
orb
dec
mov
movsl
gs
ret
inc
outsl
or
in
adc
jmp
jo
mov
mov
cmpsl
data16
dec
or
cwtl
push
cmp
movsl
lret
jae
es
pop
cmc
xor
stc
jne
xchg
xor
dec
outsb
je
xchg
mov
sbb
lahf
addr16
in
stos
push
movsl
fisubrl
dec
cmp
pop
in
frstor
ret
shll
xor
add
sub
pushf
jmp
xchg
cld
pop
xor
imul
ret
rolb
jnp
das
aas
push
dec
push
loop
and
jb
push
loopne
mulb
loopne
fwait
dec
jg
daa
mov
mov
mov
pop
aad
or
lods
xlat
aaa
jle
call
inc
cltd
repnz
push
and
pop
pop
or
jnp
pushf
xchg
fstl
push
ds
push
mov
and
fadd
push
or
jp
push
nop
aad
insb
cmp
xchg
dec
pop
pushf
pop
xchg
add
into
mov
pop
jae
pop
ret
fistpl
iret
lods
adc
addr16
pop
mov
mov
aas
sbb
adc
mov
icebp
pop
mov
mov
jl
pop
and
inc
notl
jle
gs
or
push
imul
pop
movsb
into
pop
add
push
xchg
icebp
insl
sbb
dec
mov
stc
sbb
push
sbb
add
sbb
iret
jb
xor
stc
mov
stos
pop
jle
pop
popf
bound
push
scas
inc
sbb
mov
je
mov
adc
jmp
mov
imul
stc
cmp
and
mov
xchg
scas
inc
sub
invd
or
fdivl
jnp,pt
push
fsubl
push
mov
and
sbb
lahf
xor
aad
pop
mov
adc
dec
lcall
sbb
rorb
pop
icebp
push
popa
push
into
sub
add
and
xor
and
push
pop
sub
xchg
pusha
mov
fadds
sarl
push
cwtl
add
sbb
adc
adc
testb
lcall
sub
xchg
push
sti
movb
shll
xchg
pusha
nop
mov
mov
push
or
cmc
test
int3
xlat
jmp
insl
fwait
inc
mov
ficomps
and
das
add
mov
lods
inc
mov
gs
mov
xor
jmp
pop
jno
idivb
dec
pusha
xor
jge
pushf
push
stc
lock
rorl
xchg
icebp
cmp
jge
push
add
adc
sub
mov
dec
jno
mov
xor
movsb
push
insb
xchg
push
in
lods
lock
cmp
test
rorb
push
subl
and
push
popa
push
repnz
lcall
cmp
xor
sbb
into
loope
leave
sub
mov
sub
add
xor
lds
mov
addr16
fwait
imul
or
pop
rcl
lcall
jmp
sbb
xchg
ret
ds
pop
push
popa
daa
aad
add
je
jo
jno
cmp
movsb
sti
call
pop
mov
jg
fildl
xor
ds
xor
push
cld
aam
xchg
add
cmp
pushf
mov
mov
mov
pop
arpl
les
sbb
and
js
jo
xchg
mov
push
jae
cmp
jae
pop
xor
nop
sbb
or
or
mov
cld
sub
lock
outsb
inc
jl
hlt
loope
jb
sti
stos
int3
int
pop
xor
push
std
out
loope
dec
dec
test
scas
aas
cmpl
pop
cs
shl
repz
pop
add
incl
cmc
fnsave
push
fbstp
mov
adc
dec
scas
mov
cmp
xchg
inc
push
inc
movsb
jne
loope
or
cmpsl
cmp
xor
mov
mov
mov
loope
std
sub
into
cmp
popa
test
ss
aaa
xchg
push
pop
fwait
in
and
sub
dec
mov
mov
lea
fldt
cmpsl
and
dec
inc
mov
negl
dec
sbb
push
adc
push
divl
int3
inc
leave
xor
fxch
xlat
pop
add
aam
lahf
popa
cmpsl
arpl
inc
loopne
jecxz
pop
mov
lret
mov
arpl
test
push
out
jl
je
aam
xchg
inc
adc
sub
sbb
pop
push
ret
ja
mov
ja
add
and
sub
aas
pop
add
movl
inc
push
cmpsl
xor
add
sbb
call
imul
jg
mov
mov
fnsave
mov
leave
sub
xchg
ret
arpl
push
lahf
fs
scas
addr16
push
push
push
xorb
xchg
xchg
pop
xor
and
cli
jnp
xor
ficoml
pop
and
bound
lea
pop
and
and
adc
cwtl
mov
and
dec
lds
addl
mov
test
fwait
jno
fidivrl
pop
cmp
add
sbb
or
fildl
jnp
dec
push
inc
rcrb
pop
outsb
loop
push
mov
xor
sar
sbb
jno
xchg
push
addl
aam
lcall
adc
inc
push
nopl
repnz
xchg
outsl
lcall
das
call
dec
add
dec
sbb
mov
jnp
stos
ror
lcall
cmp
push
iret
aaa
mov
or
jo
jmp
push
pop
iret
xchg
repz
out
push
mov
push
xchg
movsb
arpl
repz
pop
pop
lock
out
cltd
lods
cld
cltd
adc
push
push
in
pop
mov
mov
pop
leave
and
mov
inc
popf
aaa
ja
popa
fs
sub
data16
sbb
scas
fiadds
inc
jb
ljmp
pop
dec
cmpsl
adc
ss
inc
adc
lods
lret
out
out
jecxz
mov
mov
sbb
dec
push
repnz
pop
sub
rorl
mov
notl
push
in
lock
xor
inc
jp
imul
add
xchg
fsubl
adc
push
rolb
ds
loope
out
pop
outsb
in
mov
xchg
or
in
ds
mov
jb
pop
stc
cmc
pop
lea
mov
adc
outsb
stc
and
test
push
lret
fmulp
xchg
insb
loop
jns
mov
jns
xor
adc
stos
inc
or
dec
icebp
push
xor
and
mov
inc
pop
pop
orl
call
push
push
lret
pop
or
aas
in
repnz
ret
mov
fldt
mov
cmp
push
imul
adc
push
inc
xchg
sub
mov
dec
adc
or
inc
imul
adc
add
add
adc
add
mov
pop
cmp
into
mov
ret
sub
insl
lret
js
inc
push
ja
pusha
pop
mov
cmpsl
test
inc
testl
std
xor
mov
movsb
adc
jbe
outsb
shlb
dec
mov
fisttpll
fbstp
mov
bound
loop
mov
dec
aam
and
dec
jno
inc
das
cmc
je
mov
jno
jbe
leave
cmp
xchg
sbb
ja
sahf
sbb
rolb
push
mov
mov
sbb
sbb
jge
push
testl
pop
and
pop
outsl
push
clc
inc
divb
rcll
xor
inc
mov
sbb
aas
dec
push
cmp
leave
xchg
loopne
jmp
or
loopne
aaa
flds
inc
rcr
rclb
xchg
popf
inc
xor
jns
lea
mull
scas
mov
and
shr
fmuls
test
cmp
lret
loopne
mov
push
mov
mov
mov
xchg
pop
insl
sti
pop
pop
lds
and
and
and
dec
mov
out
loop
mov
mov
pop
cwtl
mov
dec
imul
add
cs
dec
and
outsb
clc
sbb
cmp
mov
push
leave
popa
mov
iret
mov
xchg
sti
jbe
dec
ret
out
inc
jge
inc
push
pop
insl
imul
shll
ss
mov
scas
imul
or
cmp
fwait
jmp
data16
pop
js
out
outsb
inc
mov
jg
and
mov
fdivrl
shrb
adc
xchg
lret
cmpsl
cltd
into
push
cmp
scas
sahf
sti
out
fxch
cmp
pop
push
rolb
mov
jmp
mov
sbb
or
test
sub
sbb
jo
sub
je
js
jnp
and
dec
sub
push
ds
sbb
mov
push
out
pop
cmp
aad
cmp
arpl
dec
sar
scas
es
xor
stos
scas
icebp
adc
cwtl
daa
sub
xor
mov
shl
xchg
mov
mov
push
xor
fistpll
sahf
mov
mov
cmpl
adc
xlat
cmpsb
mov
push
cmp
sbb
data16
int3
iret
dec
daa
in
inc
loope
stos
mov
addb
fldenv
mov
add
push
mov
les
push
mov
jno
in
imul
xor
rcrb
lahf
in
fisubl
outsl
mov
sbb
xchg
cmpsb
sbb
or
or
ret
mov
and
lret
loopne
fnstsw
dec
dec
cmp
mov
ror
scas
dec
in
xchg
loop
push
hlt
ret
pop
aaa
xor
test
les
aad
mov
popa
sub
cmp
cld
or
popf
in
or
cmp
inc
add
mov
imul
push
cmc
cmp
sti
and
jne
jnp
jbe
cmp
in
sahf
outsb
add
push
mov
int
or
and
push
mov
inc
lahf
mov
sub
push
cmpsw
leave
mov
orb
lock
mov
call
inc
adc
movsb
adc
and
sbb
xor
add
cltd
dec
ja
jmp
repz
cmp
jecxz
negl
mov
stc
pop
mov
scas
insl
ret
add
mov
je
jecxz
mov
or
je
mov
out
jmp
jmp
bound
dec
sub
ror
dec
ret
sbb
das
popf
dec
lret
cmc
shll
fildl
jb
decb
cmp
cmpsl
mov
add
sti
and
ja
movsl
cmp
cwtl
jne
inc
push
xchg
stos
jnp
insl
push
loop
mov
mov
shll
adc
xor
lds
fidivl
nop
and
testl
jne
pop
lods
push
or
fs
in
data16
loope
jbe
dec
mov
test
addr16
jmp
lret
xor
fwait
inc
stos
dec
fdivrp
popa
dec
aaa
pushf
pop
sbb
inc
aad
sub
out
jbe
push
lret
jno
xor
movsl
dec
rep
add
ljmp
cmpsb
in
int3
jnp
mov
stos
sti
mov
mov
test
adc
js
adc
mull
rcll
dec
leave
imul
fadds
js
out
stos
decb
push
sub
out
fs
mov
notb
jmp
test
dec
ljmp
in
jmp
adcl
bound
insl
push
sbb
dec
ret
scas
push
int
fcmove
icebp
popf
mov
nop
lods
pop
sbb
cmp
mov
lahf
mov
stc
or
pop
cwtl
aaa
into
pop
je
pop
sub
mov
negb
ss
rorl
mov
push
sbb
jmp
cs
sbb
inc
inc
push
xor
std
add
insb
pop
arpl
xchg
sub
xor
dec
cmpsb
mov
les
jecxz
jbe
jne
daa
cmp
vmovq
push
mov
push
xchg
mov
fsub
lea
ss
subl
in
jmp
ds
pop
lret
scas
add
lea
pop
cld
push
stos
jno
mov
jg
or
shl
jb
out
sti
xor
daa
mov
or
pop
cli
fst
int
push
popf
push
fwait
xchg
imul
and
sbb
imul
pshufw
orl
nop
adc
mov
stos
and
int
jge,pn
xor
dec
aam
xor
clc
out
jb
xor
fisubrl
xor
movsb
sub
ljmp
and
push
rorl
pop
dec
je
pop
inc
ficompl
cmp
and
jl
and
inc
mov
scas
cmp
or
pop
sub
loopne
pop
stos
cltd
inc
popf
cmp
out
or
push
mov
sahf
jnp
je
mov
sub
lea
jo
mov
movsb
ficompl
pop
inc
sbb
bound
xchg
fidivrl
mov
lahf
fildll
or
sub
fildl
add
lret
cmc
arpl
mov
push
mov
mov
loop
xlat
mov
scas
test
jle
daa
adc
dec
pop
insb
js
dec
sub
rclb
cmp
fidivrs
mov
adc
in
or
mov
lret
dec
mov
shr
mov
mov
adc
sub
xchg
or
pop
mov
outsl
nop
insb
sub
sub
xchg
fildl
mov
mov
sub
inc
dec
mov
fwait
loope
dec
loopne
lods
in
test
mov
out
shlb
fsubl
sub
cmpsl
dec
movsb
aaa
push
sbb
cmpsl
mov
imul
fsubrp
dec
scas
fildll
jecxz
pop
xchg
cmc
adc
mov
popa
dec
pop
xchg
repnz
push
aad
cmp
hlt
mov
push
mov
lods
outsl
mov
lods
jo
cmp
sbb
loope
sub
cmp
sub
add
xlat
test
sar
xor
pop
leave
jae
pop
xor
mov
imul
jmp
xchg
lret
pop
sub
out
mov
dec
jg
repnz
lcall
cmp
sub
xchg
xor
pop
jbe
mov
mov
inc
jb
add
insb
fidivrl
fcom
mov
scas
orl
sarl
nop
fndisi(8087
sbb
test
hlt
sbb
js
mov
pop
add
xor
mov
and
sub
outsl
jnp
out
adc
xchg
ss
cmp
dec
mov
pusha
loop
inc
xor
sbb
ja
icebp
mov
or
testb
pop
or
es
or
sahf
test
cmpsl
outsb
lahf
adc
xchg
in
xor
lret
test
sbb
cmp
sub
movsl
pusha
xor
jae
xchg
in
movsl
mov
jecxz
and
dec
iret
inc
pop
fadd
ss
in
cli
jmp
gs
inc
xchg
stos
outsl
dec
mov
imul
lods
inc
pop
and
subl
sub
nop
add
pop
xchg
or
shr
push
adc
or
pop
mov
adcl
stc
aas
add
in
jg
subl
jo
call
xor
mov
push
ja
popf
data16
cmc
fisubl
xchg
cmp
dec
pop
xchg
in
shll
fbstp
popf
mov
ret
shll
xchg
or
js
lahf
jmp
jnp
jo
sbbb
xor
jl
addr16
adc
ljmp
inc
sbb
out
rorb
int
leave
mov
daa
push
push
cmpsb
lret
dec
inc
or
fists
or
nop
xor
aas
movsl
insl
cmp
pop
inc
mov
inc
data16
pop
out
test
lock
iret
mov
hlt
sahf
daa
inc
push
push
in
jge
aas
cld
mov
adc
jge
repz
mov
pop
and
and
movsb
jecxz
stos
out
pop
sub
nop
mov
scas
fimull
add
adc
popf
adc
data16
icebp
test
js
pop
aam
xor
cmp
jle
and
enter
jmp
inc
or
cmp
sti
rclb
aam
sbb
inc
xchg
sbb
inc
jno
cmp
enter
test
stc
in
or
sub
push
jbe
or
push
adcl
cmp
pop
sbb
into
inc
inc
cmp
enter
gs
push
adc
inc
stc
mov
pushf
lret
shrb
fcoms
add
in
pop
sbb
xor
dec
or
daa
lods
popf
rorb
shlb
adc
shrl
stc
out
jl
mov
test
mov
lret
cli
insl
cmp
insl
lock
push
popf
popa
test
mov
in
add
fptan
sub
xchg
mov
sbb
dec
push
xchg
jg
ja
scas
xchg
mov
aaa
hlt
mov
faddl
push
push
adc
je
andl
mov
arpl
inc
push
int
frstor
aam
out
inc
and
cmp
adc
orw
and
xor
push
stos
push
jo
mov
repnz
xchg
stos
jge
test
fistps
lahf
lds
adc
adc
and
adc
neg
jnp
daa
mov
stos
sbb
adc
fs
jno
cs
adcl
mov
jae
dec
insl
or
and
ss
imul
pop
ds
test
pop
and
adc
push
shl
xchg
sbb
dec
sub
lcall
mov
or
or
lds
dec
cmp
adc
insb
or
out
or
xchg
and
movsb
inc
cltd
aam
inc
inc
data16
lea
cmove
and
cwtl
sti
mov
iret
pop
or
imul
ret
sti
jo
pop
rorl
scas
cld
and
lock
pop
and
lock
aaa
shll
dec
popa
or
out
push
pop
icebp
popf
dec
jecxz
pop
dec
cmp
mov
adc
in
cmpsb
add
mov
das
inc
mov
dec
sub
es
lret
ds
inc
jne
sub
mov
mov
inc
cmp
lds
jmp
mov
inc
mov
xchg
jb
pusha
inc
jb
cmp
mov
xchg
add
or
inc
xchg
lods
orb
lods
inc
or
movsl
sbb
adc
imul
push
iret
pop
jbe
jnp
daa
xchg
dec
std
jp
scas
jne
or
dec
jge
xchg
pop
jp
push
xlat
mov
xchg
je
aas
pop
cld
in
fs
xchg
arpl
sbb
bound
jecxz
popl
mov
adc
jg
xchg
es
sahf
pop
movsl
pop
inc
and
jecxz
scas
or
sbb
jmp
outsl
xor
ss
out
hlt
push
insl
sbb
xchg
ret
arpl
ljmp
into
popf
xchg
mov
jbe
cmpsl
je
cmp
aad
cltd
xor
les
inc
loopne
adc
mov
xchg
lds
xchg
ds
push
sbb
mov
stos
lret
repnz
sbb
scas
sub
enter
and
inc
cmp
jo
sbb
out
mov
js
ljmp
mov
inc
fwait
jle
leave
mov
adc
rcrl
sarb
out
push
test
xlat
and
push
pop
mov
dec
cmpsb
cmp
pop
inc
nop
mov
rorl
xor
xchg
adc
sar
int3
in
jle
add
lea
stc
xchg
adc
add
cs
arpl
roll
jns
lds
and
or
add
fucomp
sbb
neg
scas
aaa
xchg
es
shlb
pop
xchg
add
cld
or
inc
jo
mov
xor
cwtl
lds
add
rcll
movsb
jae
pop
mov
lods
lahf
rcrl
lods
int
test
xor
jmp
adc
nop
mov
divl
ret
jp
or
mov
jp
mov
mov
sub
icebp
call
push
and
add
out
hlt
jmp
xor
into
or
mov
dec
mov
or
push
lret
xor
pop
jmp
push
push
std
mov
ror
ja
xor
enter
fdivs
mov
add
cmpsb
outsl
dec
add
cmpsb
icebp
mov
jne
in
insb
in
insl
addb
add
xor
mov
mov
cwtl
mov
xchg
ljmp
adc
jg
ds
aas
notl
mov
aaa
push
pop
xor
mov
xchg
jle
ffree
dec
cltd
mov
mov
mov
mov
xchg
movsb
adc
test
lea
mov
aas
adc
rcrl
int
xchg
mov
mov
sbb
xchg
into
cmc
inc
jge
jb
xor
lods
out
dec
sub
mov
or
mov
push
mov
or
fs
xor
loop
xchg
in
rcl
xchg
xchg
insl
mov
jb
cltd
loop
scas
adc
filds
mov
pop
dec
mov
sbb
inc
shlb
mov
enter
jmp
mov
and
aaa
fwait
movsl
icebp
lods
cmp
clc
fbld
lods
push
repz
push
imul
negb
iret
loope
and
mov
outsb
pop
jae
ret
popa
xchg
sbb
pushf
jns
leave
jb
das
add
mov
outsb
pop
out
jle
stos
roll
mov
out
sbb
cs
xchg
mov
dec
xor
outsl
repnz
rclb
push
hlt
cmp
xchg
loope
adc
popf
sub
sbb
cmp
clc
xchg
jno
scas
xchg
mov
popf
xlat
pop
mov
je
loop
mov
int
outsl
je
xor
jb
sti
dec
pop
xchg
int
inc
jb
jecxz
pop
pusha
fld
mov
xor
push
mov
hlt
xchg
pop
inc
ffree
imul
das
push
sub
lcall
andl
adc
cmp
lret
std
fs
dec
cmp
clc
cmp
add
out
xchg
sti
mov
xchg
xchg
jae
cmp
lret
push
mov
jle
repz
add
and
out
xchg
push
imul
xchg
fstpt
es
or
stos
mov
pusha
jg
out
fiadds
insb
xchg
int
clc
sub
add
pop
mov
push
fildl
in
out
popa
in
out
sub
cld
sarl
ljmp
jne
shll
push
or
mov
jae
aas
pusha
icebp
jne
cmp
sbb
std
push
and
adc
sub
scas
xchg
fsubs
xor
dec
fcmovnb
adc
pop
add
inc
ret
mov
loopne
inc
push
sti
mov
ja
mov
dec
push
je
mov
sti
flds
movsl
mov
stc
andb
sbb
insb
add
repz
aad
rcrb
negl
and
or
dec
popf
loopne
xor
frndint
pop
stc
sbb
int3
sbbl
mov
xchg
shl
js
pop
mov
pop
push
es
adc
mov
xor
push
insb
sub
mov
pop
stos
mov
adc
adcb
movsb
jl
mov
xchg
jge
jb
sarb
pop
ss
cltd
fadd
mov
popf
pop
push
pop
inc
shl
push
dec
mov
fsubrs
push
orl
jle
repnz
sbb
xchg
xchg
add
pop
ret
pop
pop
cmp
jmp
sub
mov
outsb
das
lods
xor
out
jo
push
jp
je
mov
inc
jge
das
cmp
xchg
cmc
add
and
daa
xor
arpl
cs
test
inc
mov
jo
or
fadd
push
adc
scas
adcl
inc
mov
repz
cmp
cmp
mov
jae
inc
add
xchg
cmp
jmp
jbe
cwtl
pop
lret
xchg
in
sbb
jne
into
push
cli
addb
mov
and
lods
pop
xchg
imul
aas
ja
movsl
fbld
push
or
jns
fisttps
sbb
cmp
mov
push
aaa
stc
stc
lock
in
ljmp
add
imul
dec
pop
and
cmp
push
or
jb
sbb
mov
xchg
test
movsl
cmp
cmp
xor
js
rol
or
sbb
in
lods
mov
sbb
jmp
and
fdivrs
aad
inc
cmp
cmp
mov
clc
mov
mov
sub
mov
push
dec
mov
sub
test
cmpsl
fs
lods
dec
shll
mov
or
clc
and
out
sub
enter
in
xchg
and
pop
out
adc
mov
lahf
dec
push
dec
sti
adc
pusha
pop
ss
inc
push
fld
pushf
test
adc
test
mov
xor
pop
jae
nop
cwtl
adc
xchg
data16
xchg
adc
sbb
pop
icebp
lret
or
or
out
fdivrl
push
inc
ljmp
jbe,pt
cmp
xchg
jns
xchg
fdivl
outsb
inc
sti
add
mov
jnp
add
jg
inc
and
test
adc
je
pop
pop
jo
mov
sub
mov
es
xchg
repnz
roll
lods
nop
fstp
mov
dec
dec
sub
pop
sub
add
cli
cltd
mov
jns
lock
pop
ja
rol
sub
aam
mov
mov
cltd
or
pop
es
enter
movsl
lahf
in
pushf
lods
out
jae
sbb
gs
f2xm1
inc
xor
push
enter
add
repnz
pop
inc
push
mov
lahf
lahf
push
jae
fisttps
int
xchg
neg
clc
ss
or
cltd
outsl
mov
es
cmpl
xor
xchg
div
test
ds
add
ds
in
dec
pop
aam
int
mov
in
aas
mov
clc
in
mov
xchg
sub
jg
cmp
sti
pusha
mov
cmpsb
push
xorl
aas
sarl
fsubrs
repnz
cld
xor
mov
or
mov
inc
jp
dec
cmp
cmp
inc
imul
les
add
mov
inc
adcl
sbb
inc
test
lds
fwait
lcall
mull
clc
sbb
mov
xorl
mov
jb
rorl
jbe
xor
outsl
push
xchg
in
arpl
mov
jbe
nop
sub
sub
cmp
lahf
mov
ret
jb
fmul
rclb
mov
jns
add
add
cmp
sub
fistps
inc
jb
cmp
add
xchg
mov
xor
cld
stc
xor
lahf
dec
outsb
gs
pop
adc
push
pop
pop
stos
push
jno
ds
adc
hlt
xchg
lahf
lret
lcall
pop
ljmp
mov
mov
pop
dec
int3
sbb
jle
rcr
xchg
mov
jmp
jbe
hlt
and
pop
sub
fsubrl
add
aad
jmp
imul
shl
jp
ret
orb
leave
js
pop
and
iret
loopne,pt
mov
aam
mov
in
cmpsb
lgs
rcrl
pushf
fadds
shrb
out
fdivrl
popf
repnz
testb
cli
inc
movsb
cs
mov
insl
outsb
mov
rorb
and
scas
or
test
jg
ret
mov
jne
subl
in
fs
mov
fcoml
mov
call
pop
jl
in
nop
and
leave
dec
into
mov
negl
fs
imul
stos
pop
xchg
lods
sub
cwtl
and
xchg
or
test
rcr
aam
mov
cmp
and
push
and
fs
shld
mov
pop
sub
inc
cmp
lods
loop
pop
mov
sub
adc
mov
cld
pop
or
xchg
mov
xchg
lea
fisttps
dec
mov
lds
lcall
ss
or
jle
data16
mov
std
pop
sub
sbb
mov
mov
add
aas
add
and
wbinvd
clc
and
push
sbb
addr16
push
pop
mov
xchg
jl
jecxz
enter
mov
push
dec
in
pushf
test
push
xchg
mov
test
daa
gs
je
xchg
push
fwait
pusha
cwtl
pop
push
sub
and
lret
repz
jnp
mov
aam
aaa
push
jecxz
out
dec
enter
lret
repnz
lahf
aad
ljmp
sti
mov
test
or
arpl
pop
pusha
push
xor
mov
cmp
push
cmc
pop
stos
insb
int3
jge
inc
es
jne
or
jbe
or
xlat
aaa
dec
in
movsb
jl
pop
jne
aas
mov
and
inc
dec
mov
pushf
dec
jae
adc
mov
repnz
jb
in
testl
les
mov
jl
outsb
fbld
fwait
ds
faddl
test
sbb
cltd
mov
jl
add
outsb
pop
inc
stc
sbb
jmp
pop
loop
inc
outsl
dec
cmpsb
ficoml
fldenv
inc
pop
and
icebp
xlat
sub
fdivl
adc
mov
push
fbstp
rorb
mov
loopne
ds
movsb
sub
mov
sub
std
push
cmpsl
cltd
adc
jne
pop
popf
repz
pop
fsubp
push
sbb
ficomps
push
pop
fwait
sub
mov
jnp
lahf
mov
imul
imul
jne
repnz
mov
test
imul
stc
lods
lea
xchg
cmc
jne
add
es
mov
and
into
lock
and
jge
add
jbe
jp
addb
push
notl
lods
enter
jecxz
and
ds
pop
pop
stos
scas
xor
mov
stos
mov
or
shrl
jnp
dec
and
rorb
jecxz
out
xchg
out
push
outsb
mov
stos
leave
jns
mov
insb
loope
enter
insl
mov
mov
neg
push
inc
aaa
ret
cvtps2pi
or
sbbl
jg
adc
pusha
stos
insb
ficomps
stos
add
addl
push
test
jp
dec
pop
pop
mov
cltd
xor
or
repnz
scas
xor
mov
cmp
push
stos
mov
xchg
out
je
push
dec
das
and
pop
inc
mov
lock
int3
pop
bound
outsl
pop
lods
mov
pop
and
scas
adc
pop
cmc
xchg
mov
std
repz
mov
adc
xor
and
xchg
imul
lock
jmp
clc
xlat
mov
mov
bound
pop
into
stc
pushf
mov
pop
imul
gs
mov
out
push
sbb
mov
cmp
sbb
fisttps
jb
jo
shll
loopne
or
lock
push
nopw
xchg
push
sbb
pop
mov
push
nop
add
dec
sbb
cld
adc
pusha
flds
xchg
push
inc
cmc
loope
mov
loop
and
stos
push
xchg
jbe
add
xchg
pop
je
pop
push
jno
repnz
xlat
repnz
jns
fdivl
das
xchg
es
lods
or
out
push
xchg
aas
mov
stos
push
fstpl
jo
lahf
push
jb
daa
cmp
movsb
jmp
push
add
pop
and
sahf
lods
sbb
out
inc
or
pop
movsb
xchg
cmpsb
adc
xchg
mov
test
dec
mov
es
popa
into
pop
mov
cmp
lret
xchg
cmp
addr16
jns
inc
popa
sub
xchg
dec
sub
mov
iret
jle
in
mov
addl
loopne
mov
int3
inc
pop
leave
lahf
xchg
repnz
cltd
ficoml
mov
push
scas
mov
sbb
cmp
flds
int
mov
pop
fistl
pop
mov
dec
stos
enter
shl
loope
sbb
ss
xchg
push
stc
xchg
adc
sbb
testl
rol
cmp
push
or
jo
and
mov
mov
dec
or
int3
cmp
lret
cmp
sbb
pop
inc
sbb
mov
xchg
shll
push
addr16
sub
add
and
dec
jns
outsb
sub
cmp
pop
add
test
mov
add
push
and
insb
jb
or
loope
fwait
mov
mov
mov
test
adc
test
pop
dec
mov
sbb
mov
pop
push
les
mov
and
mov
call
sbb
fisttps
sbb
mov
test
sub
cmp
cli
call
adc
pop
sub
pushfw
addr16
sbb
jns
cmp
das
das
in
mov
push
push
mov
cwtl
adc
mov
lret
sub
xor
mov
int
mov
sub
push
or
shll
jbe
add
stos
mov
enter
sbb
push
stc
mov
ret
jae
es
lahf
adc
add
mov
rcll
add
inc
loopne
daa
fstl
mov
mov
fcomps
mov
mov
aas
insb
outsb
out
jbe
dec
adc
repnz
fimull
mov
sbb
mov
dec
in
lods
push
inc
lret
push
int
push
cli
inc
or
shlb
pop
arpl
aas
cs
jl
pop
or
lods
lods
test
daa
cmp
test
out
loopne
pop
arpl
ret
fldt
loop
inc
jb
pop
cmp
dec
dec
lcall
icebp
mov
mov
les
or
lcall
arpl
pushf
pop
mov
movl
mov
cmp
push
inc
inc
mov
adc
lods
loope
adc
addr16
loopne
imul
je
jne
repnz
cmc
add
dec
inc
sub
sub
sub
mov
icebp
mov
cwtl
call
dec
and
cs
orl
inc
push
pop
adc
sub
push
js
out
jns
mov
inc
mov
pop
int3
testb
iret
pop
lret
mov
rclb
int3
loop
pop
lcall
out
jb
sub
enter
lcall
int
ret
pop
sahf
sub
outsl
aam
in
add
js
cmp
push
sbb
clc
les
and
sbb
iret
icebp
rorb
iret
jno
sub
lock
dec
lahf
call
jge
jb
mov
js,pt
out
pop
popf
inc
bound
push
rcll
out
loopne
shl
xchg
mov
adcl
mov
jl
inc
inc
push
std
push
pop
jl
int
pop
inc
cmp
adc
gs
mov
pop
pusha
xchg
sti
orb
xor
mov
mov
addb
mov
stc
mov
sbb
mov
arpl
testb
jle
add
sbb
in
xor
and
dec
jecxz
shlb
nop
mov
mov
xor
cltd
xchg
push
insl
sub
xor
push
daa
bound
popf
subb
jmp
pusha
je
jle
xchg
movsl
cmp
xchg
test
sub
ret
sbb
add
inc
mov
inc
cmpsb
xchg
shll
cmc
sub
imul
jmp
cmp
cmp
xor
xor
je
jae
inc
adc
outsl
mov
xchg
fidivl
sub
jge
lret
mov
jnp
js
jge
add
mov
shll
cmp
je
dec
dec
shrl
add
or
repz
fsubrs
mov
cs
mov
movsl
and
add
jae
leave
add
setne
test
or
cmpsl
es
pop
cltd
pop
shl
movsl
cmp
pop
and
jp
loope
repnz
lods
mov
dec
mov
rorl
lea
push
fisubl
movsb
popa
push
cmp
push
pop
imul
sbb
test
jg
mov
test
inc
aam
inc
fildl
adc
repnz
push
cwtl
pop
sub
mov
mov
push
int3
orl
ljmp
inc
xchg
xor
rcrb
insl
popl
icebp
sub
inc
push
sub
loop
mov
sbb
pusha
sahf
xchg
testb
push
xorb
hlt
fwait
adc
aas
test
test
insb
mov
sbb
xor
pop
ljmp
or
mov
inc
pop
sbb
push
loopne
lcall
out
test
push
outsb
push
jle
ret
dec
mov
adc
es
rclb
xor
pop
cmp
gs
test
inc
xchg
hlt
push
sahf
movsl
add
insb
iret
add
xchg
into
loop
mov
icebp
inc
ret
movsb
clc
das
jmp
pop
aad
out
sub
pop
lret
test
sti
insb
jle
xchg
inc
add
and
push
dec
xchg
jl
leave
xor
cmp
sbb
pop
lods
fsts
adc
inc
and
cmp
cmp
outsl
loop
push
push
iret
add
ljmp
sbb
mov
jmp
scas
cwtl
xchg
mov
lahf
push
aas
mov
xor
push
ficoms
dec
xor
insl
lock
xchg
lods
lods
aad
ror
mov
adc
movl
adc
rcll
lods
ss
and
cli
into
in
lahf
jge
mov
and
xchg
fs
cltd
dec
aam
cltd
jp
arpl
shrb
mov
or
out
jo
sbb
and
cmp
push
jb
inc
sub
call
xor
lret
jno
iret
aad
rcrl
popa
inc
fwait
sar
sbb
sub
popa
xchg
loop
int
or
xchg
shrl
lahf
mov
into
out
in
pop
push
add
into
xchg
repnz
xor
mov
repz
ficomps
mov
pop
cmp
add
pop
mov
jnp
sub
js
dec
xchg
xor
mov
cld
pop
rorl
addl
ds
stos
xchg
jmp
call
flds
mov
rcrl
pop
or
sbb
pusha
ja
data16
test
fsubr
xor
fwait
xor
testb
lock
incl
and
cld
xchg
mov
push
mov
sub
cltd
sbb
cmp
xchg
add
imul
vpaddq
jge
cmpsl
or
daa
push
stc
push
mov
addl
push
pop
aas
pop
sbb
dec
dec
or
jge
test
jae
pop
dec
test
nop
js
ja
je
sbb
dec
frstpm(287
inc
jl
xchg
xor
cmp
daa
add
bound
mov
inc
lock
daa
or
in
add
loop
push
inc
shrb
jns
loopne
mov
adc
js
sar
push
or
or
push
icebp
loope
aam
xor
jle,pn
cltd
lods
mov
out
cmpsl
ja
cmp
leave
mov
imul
mov
mov
pop
pop
bound
or
xor
lret
sbb
push
sti
dec
mov
dec
add
mov
popf
push
pusha
mov
xchg
jo
push
and
dec
inc
je
outsl
pop
sbb
mov
je
sbbb
rcrl
cmp
in
sbb
lea
lret
xor
jns
out
jb
sti
loope
fwait
xchg
push
xchg
push
repz
jae
dec
data16
sbb
cmp
mov
fimuls
or
add
sti
adc
in
je
in
sti
pusha
push
xorb
xchg
icebp
movsb
jns
icebp
mov
dec
cwtl
movsb
and
nop
ds
out
pop
mov
rcrl
mov
iret
shr
jb
outsl
and
xchg
inc
mov
ret
fdivl
pop
stos
dec
ret
jge
out
fimull
add
inc
mov
loopne
jge
mov
pop
call
cltd
lds
push
test
inc
mov
inc
outsb
repz
adc
sbb
pop
movsb
pop
pop
cmp
pop
mov
cld
leave
ja
and
sub
cmp
sarb
xor
js
pop
cltd
adc
cltd
loop
insb
pop
mov
mov
jle
jnp
add
in
outsb
shlb
adc
das
pop
sarl
inc
cmpb
mov
mov
or
hlt
shrl
fwait
loopne
out
test
je
fstpl
nop
mov
pop
out
sub
addr16
das
movsl
push
roll
out
jb
push
and
int3
cmp
mov
push
xchg
jno
add
nop
inc
and
sbb
adc
cmpsl
ja
and
adc
jg
stos
ss
xor
xchg
nop
mov
inc
popf
test
lods
test
push
inc
movsb
popf
mov
dec
push
rcll
loopne
roll
and
sbb
ja
call
or
ja
fwait
adc
xlat
add
dec
cmp
add
adc
cmp
add
cld
mov
sub
add
ficomps
pop
lahf
mov
jne
mov
fwait
subb
add
jp
mov
test
stc
outsb
xchg
js
jo
push
cwtl
loope
lcall
push
mov
add
xor
xchg
in
js
push
jg
fisubl
fs
in
fildll
in
scas
insl
add
test
mov
push
scas
imul
popa
cmp
inc
adc
or
or
adc
jne
bound
jmp
push
cltd
ret
or
repz
xorb
cmp
add
pop
sbb
push
xchg
adc
add
scas
test
in
mov
dec
jno
subl
mov
mov
bnd
xorl
sub
xchg
inc
sub
sbb
ret
cmpsl
aaa
js
repz
adc
sbb
scas
das
adc
arpl
sbb
jo
jmp
and
repz
aaa
mov
mov
out
stc
in
sbb
pusha
mov
pop
rorl
xor
nop
push
popa
jnp
xchg
pop
sub
pop
add
sarb
cmp
xor
jle
in
call
and
test
add
fadds
stos
lods
xchg
movsl
sar
pop
test
sahf
adc
insb
cmp
sbb
fnstsw
fdivp
pop
jno
jl
jnp
movsb
jns
imul
cmp
in
scas
mov
adc
and
fwait
into
lea
pop
and
inc
hlt
xchg
jmp
fadd
adc
add
rcrl
mov
lret
incl
push
sub
dec
pop
jmp
mov
sub
dec
mov
sub
jb
xorb
jmp
lods
sarl
mov
lret
jg
sub
jno
cmp
inc
stos
test
andl
shl
mov
cmp
repnz
or
jecxz
jne
test
sti
push
in
inc
inc
aaa
mov
inc
fcompl
mov
dec
adc
lahf
flds
test
jecxz
cmp
xchg
add
jb
jnp
gs
inc
rclb
push
test
into
inc
sub
lcall
movsl
dec
lcall
fidivs
push
cmc
cmp
jno
cmp
push
jmp
push
mov
jbe
int
movsb
pop
pop
sbb
sarl
mov
nop
jo
xchg
sub
jg
jo
sbb
loope
dec
mov
fildll
mov
sub
in
jno
jp
mov
popa
mov
int3
cld
dec
jp
jns
faddl
and
stc
mov
movb
jmp
cltd
or
addb
dec
std
in
dec
aaa
xor
stc
in
push
fwait
mov
mov
or
jae
cmp
pop
ficomps
leave
xor
arpl
inc
dec
mov
imul
mov
sbb
jl
daa
or
xchg
and
movsl
cwtl
lahf
push
mov
dec
fcmovnbe
arpl
dec
gs
lea
shlb
popf
shll
loope
add
andb
filds
insb
das
loopne
xchg
sub
push
sar
out
lds
movsl
push
and
fs
cmp
cli
mov
sub
mov
xchg
jno
andb
push
add
test
imul
mulps
xor
js
pop
sbb
mov
sub
sbb
add
sbb
leave
arpl
and
out
aas
out
adc
imul
inc
xchg
fsubl
js
out
pop
adc
push
sbb
hlt
and
les
jl
cltd
je
xchg
loop
push
sub
movsb
scas
sbb
cld
jb
lods
outsb
or
leave
ret
dec
jecxz
rcll
jl
mov
pop
cmp
out
xor
js
push
add
dec
stos
fs
cmpsl
jns
jb
lds
xchg
stc
jge
rorl
outsl
das
jnp
adc
addr16
pop
aaa
outsl
xchg
es
jns
in
stos
andb
lds
dec
cmp
mov
in
mov
popa
jle
popf
icebp
and
adc
inc
in
inc
mov
mov
dec
dec
sub
movsb
adc
pop
dec
scas
xor
mov
mov
and
sahf
mov
jno
loope
xor
clc
rcll
leave
add
je
xrelease
into
andb
fwait
and
aad
lret
add
add
movl
push
scas
or
xchg
sbb
loope
xor
aam
lahf
or
movsl
mov
inc
mov
cltd
cld
es
outsl
push
dec
add
mov
mov
inc
dec
mov
add
test
pop
cmp
jg
int3
aaa
cltd
mov
pop
fwait
adc
aas
lcall
dec
sub
mov
mov
scas
jns
sub
add
stos
mov
and
sarb
add
pushf
adc
mov
cmc
in
push
dec
jne
push
inc
repz
mov
adc
push
push
add
aaa
mov
or
and
lahf
sbb
push
adc
repnz
push
cmc
loope
adc
push
adc
aas
sub
sub
sub
stc
cmp
imul
mov
stos
xchg
mov
inc
test
pushf
lret
pop
mov
sbb
inc
je
pusha
pop
dec
inc
dec
sub
aad
hlt
cmp
es
int
sbb
jg
test
dec
mov
add
cmp
call
mov
and
dec
cmp
push
mov
adc
ljmp
jmp
sbb
or
lcall
or
out
mov
js
std
jmp
rcr
and
repnz
sahf
mov
cld
icebp
mov
jmp
loop
cwtl
faddp
scas
jae
clc
mov
xor
sahf
test
jnp
add
addb
adc
jns
dec
lods
inc
lret
stc
fsts
lcall
mov
adc
mov
cmpb
ret
js
pusha
repz
jns
xor
mov
mov
lret
cmp
cmc
testb
stos
push
push
sub
push
jbe
mov
jb
nop
dec
cmp
in
movsl
push
lea
adc
lods
or
jnp
jbe
or
sub
inc
cmp
fidivrl
int3
out
push
cld
inc
sub
inc
shlb
mov
in
mov
pop
and
mov
pop
subb
int3
adc
add
inc
arpl
and
notb
out
dec
mov
fiaddl
icebp
pop
fucomip
mov
in
scas
shrl
push
mov
xchg
stos
mov
dec
xchg
outsb
adc
xchg
mov
xor
jne
jle
aam
movsl
enter
rcrl
sahf
inc
inc
jnp
push
xor
sti
push
stos
xor
sbb
jg
ret
in
jl
addr16
fbld
cwtl
adc
or
je
cmpsl
or
or
pop
add
js
xor
mov
jnp
filds
and
arpl
sbb
pop
insb
mov
loop
or
mov
adcb
insb
mov
push
sbb
sbb
jb
mov
mov
aad
xchg
jle
jg
ljmp
cmp
fadd
add
jmp
hlt
pushf
cmpsb
xchg
lea
add
out
ret
pushf
or
ret
add
jl
xor
aas
test
dec
in
rcrl
aas
xchg
mov
mov
xor
cli
movsl
daa
mov
sub
cld
xor
test
xchg
fdiv
lods
xor
dec
mov
ficoms
insb
pop
scas
xor
lea
stos
push
cmp
cwtl
pop
cmp
or
push
stc
push
fdivl
into
jg
scas
js
pop
lds
mov
bound
mov
aaa
mov
cmpsb
leave
push
subl
sub
in
sbb
into
mov
push
jnp
push
xchg
or
lret
pop
dec
cltd
jns
inc
movsl
and
adc
inc
cmp
xor
js
sbb
xchg
lds
cmc
mov
push
mov
xor
outsl
lea
jmp
jno
cmc
mov
push
mov
lods
add
jnp
sti
daa
xor
clc
insl
scas
or
stc
insl
mov
xchg
jns
inc
mov
pop
ds
xchg
in
dec
pop
jecxz
adc
sbb
ja
leave
pop
lcall
push
jmp
std
mov
pop
fiaddl
sahf
ss
out
clc
test
cmp
sub
movsb
pop
jns
adc
cmp
add
ror
mov
je
pop
sub
jo
imul
or
lcall
jbe
adc
shrb
push
push
out
je
leave
dec
or
sub
or
inc
scas
bound
outsl
int3
dec
push
sbb
sti
out
jg
es
xor
shlb
leave
sub
or
sub
outsb
adc
or
sub
lcall
xchg
lcall
icebp
icebp
xchg
pushf
or
pop
punpckldq
stc
fsts
jnp
es
aaa
push
mov
cmp
push
imul
mov
jnp
xor
add
push
or
pop
mov
cmpsb
clc
pop
imul
int
loopne
sub
popa
lds
stos
sbb
jmp
inc
in
push
mov
in
jo
aas
enter
cmp
jo
push
js
fwait
xor
out
push
jno
iret
mov
add
out
push
push
pop
sub
push
mov
lret
mov
add
mov
sbb
jecxz
enter
jmp
testb
pushf
adc
aam
pushf
xchg
fs
inc
pop
movsb
lahf
cltd
jge
pop
jne
mov
jns
flds
jecxz
fsub
test
cmp
jb
push
test
mov
mov
nop
outsb
jo
dec
enter
sahf
cmpsl
test
push
in
orb
cmp
je
icebp
push
andb
cwtl
sahf
lret
add
gs
jns
cmpsb
hlt
jge
dec
jle
mov
addr16
inc
and
and
xor
sbbl
xor
sub
push
out
jl
mov
in
mov
bound
stc
lret
xchg
jb
mov
mov
push
aad
in
sbb
xor
lret
je
lret
ja
pop
aas
push
fwait
and
adc
push
insb
and
dec
test
pusha
adc
adc
int3
xor
daa
testl
std
jo
in
flds
iret
sbb
jae
out
xor
dec
or
shll
nop
mov
xlat
cmp
int3
sbb
stos
mov
cs
subb
jbe
or
mov
xchg
inc
cwtl
inc
mov
testb
rcl
or
adc
inc
inc
dec
cltd
movl
out
xchg
sbb
sub
xlat
adc
lea
fwait
int3
mov
aas
push
push
mov
dec
jb
faddl
xor
or
pop
mov
andb
jns
clc
pusha
adc
out
inc
mov
pusha
sub
sti
xchg
jp
inc
xor
ret
stc
fucomip
icebp
std
je
mov
std
adc
mov
jbe
push
add
mov
ljmp
and
push
sahf
adc
push
push
sub
lods
out
sub
jmp
adcb
cmp
das
dec
push
mov
aaa
add
inc
jno
adc
dec
push
inc
cmp
jge
push
dec
mov
dec
xlat
push
loope
jp
sar
daa
pop
lock
mov
ja
mov
sub
arpl
adcl
cmpsl
mov
mov
pop
roll
push
and
push
rolb
iret
inc
ja
repz
call
int
inc
nop
mov
inc
mov
mov
xchg
xor
call
movsl
repz
lret
icebp
iret
cmp
fdivr
jmp
dec
pop
fdivl
sahf
dec
adc
xor
movsb
sub
jns
clc
in
iret
adc
rep
nop
pop
xchg
or
fldenv
xlat
lea
test
pop
das
int
xor
jne
push
sbbl
cli
jp
mov
push
sbb
push
ja
sti
sub
mov
jnp
or
std
xor
sub
and
shll
add
scas
inc
dec
xchg
adc
xor
jecxz
aad
xchg
inc
cmc
mov
and
or
dec
fldenv
pop
insb
push
or
adc
dec
test
and
fidivl
cld
in
mov
test
push
rcr
jo
fwait
pop
notl
dec
insb
jge
and
ja
int3
fisttps
pop
add
sbb
arpl
and
aam
test
repnz
out
xchg
adc
or
aaa
dec
inc
add
lret
dec
stos
stc
fxch
lret
and
inc
fisttps
ds
mov
add
push
sub
lods
dec
inc
icebp
mov
dec
xchg
sarl
ds
movsb
imul
cmp
add
jb
lds
cmpsl
jecxz
sub
mov
inc
test
movl
inc
std
mov
and
jns
xchg
leave
popf
jnp
ja
mov
arpl
adc
add
mov
call
xchg
in
movhps
inc
dec
adc
mov
scas
add
leave
lock
pop
jge
adc
adc
stc
std
lods
shr
mov
jmp
sub
repnz
stc
cmp
xchg
or
sbb
dec
xor
stos
sbb
lcall
test
xchg
fbld
mov
xlat
mov
fadds
or
test
jle
mov
dec
lret
call
mov
mov
cli
mov
mov
mulb
cltd
fdivrs
insb
mov
adc
aad
or
lret
aad
add
cmpsb
mov
cs
xchg
xor
xor
jne
add
sub
repnz
push
mov
push
cmp
push
cmc
loope
test
fucomip
in
movsl
jmp
push
into
or
jbe
pop
inc
cmp
jb
insl
in
mov
push
pop
arpl
dec
jne
xchg
movntq
out
mov
or
mov
test
xor
loopne
in
nop
pop
in
shrl
sarl
sbb
outsb
loope
mov
mov
imul
test
shll
lret
mov
and
cmp
pop
js
xor
dec
fsub
jo
jno
cmpsl
shlb
dec
arpl
in
pop
mov
rorl
cwtl
sbb
ja
insb
ja
cmpsl
jecxz
xor
dec
push
sub
mov
sar
adc
lret
test
push
shrl
cmp
xchg
shr
sbb
add
xor
inc
js
cmp
je
pop
sti
shl
or
cmp
push
or
mov
sbb
andl
aam
dec
repz
in
fisttps
call
push
mov
add
in
jecxz
je
sbb
jno
push
sbb
daa
xor
stos
loop
jnp
xchg
mov
fwait
fistps
nop
lahf
push
inc
jbe
lods
mov
push
push
sub
and
pop
xchg
xchg
fnstenv
mul
test
sbb
mov
lock
and
mov
mov
mov
or
mov
ret
mov
cltd
xlat
xchg
push
repz
daa
test
and
xor
push
jge
iret
sub
xor
out
es
cwtl
jmp
xchg
iret
in
test
mov
das
pshufw
fidivl
dec
xchg
mov
sub
mov
xchg
mov
pop
dec
mov
ss
outsl
push
cmc
and
shlb
cltd
mov
movsb
dec
add
mov
mov
xor
clc
sbb
push
jecxz
and
lods
arpl
stos
pop
push
or
push
int3
sub
cmp
out
imul
mov
cmp
popa
push
cmp
mov
test
enter
into
xor
push
aas
xor
xchg
ret
xchg
jecxz
dec
mov
movsb
and
push
or
test
or
icebp
xchg
arpl
cmp
mov
dec
jmp
dec
in
dec
das
xchg
cli
push
inc
jmp
sbb
scas
sti
jmp
repz
xor
dec
cmp
nop
jns
xor
and
sbb
scas
sub
mov
mov
push
xchg
cmp
xor
js
rorb
sarl
push
ds
fstpl
xor
mov
rcl
fildll
cmp
into
push
push
mov
jb
outsb
inc
mov
jmp
daa
fs
pop
and
ret
jns
mov
clc
leave
cmp
stos
loop
imull
mov
mov
cmp
add
cmp
fwait
int3
jae,pt
jbe
loop
ja
cwtl
sbb
push
rcrb
add
add
subl
add
pop
pusha
cmp
mov
pop
mov
sbb
mov
cs
adc
popa
stos
ret
mov
dec
push
and
ss
bound
test
out
faddl
mov
xlat
arpl
inc
jo
cltd
jno
add
jl
mov
jle
mov
mov
cmp
rolb
cmc
inc
or
les
addr16
inc
lock
dec
or
push
jmp
cmp
jb
xchg
push
or
scas
mov
sub
pushf
sbb
in
stos
push
inc
adc
lret
mov
mov
out
xor
test
xchg
dec
aaa
xchg
xor
js
adc
pop
dec
dec
and
stos
inc
call
fwait
sbb
lahf
insl
cld
jle
push
cmp
adc
scas
or
jle
mov
mov
jge
or
cmp
jbe
addb
add
ret
and
pop
stos
push
shl
add
sbb
xorl
gs
daa
pop
add
pop
jle
adc
xor
pushf
and
push
adc
ja
dec
or
lods
fwait
jp
outsb
mov
fs
mov
cmpsb
repz
adc
aaa
mov
mov
ret
lret
jnp
fisubrl
data16
sbb
cmp
lret
mov
dec
hlt
iret
jne
dec
jmp
fdivl
cmp
int
icebp
xor
mov
divl
stc
push
neg
ret
adc
stc
cmp
bound
push
insl
push
sub
je
adc
fcoms
or
stos
add
fwait
push
sahf
into
imul
in
and
dec
int3
or
push
and
mov
stc
leave
add
xchg
das
lock
lcall
out
inc
pop
adc
sbb
jl
icebp
and
xor
lret
pop
fcoml
and
adc
mov
xchg
mov
add
mov
push
mov
loopne
mov
xor
pop
cli
push
push
dec
add
mov
mov
dec
sub
dec
lds
fs
iret
cli
and
mov
mov
or
xchg
out
movsl
icebp
movsl
lret
or
inc
mov
je
mov
and
insb
adc
cltd
clc
loope
fildll
jge
lea
inc
sub
mov
jg
push
mov
sub
adc
mov
mov
xchg
or
sbb
sahf
sahf
popa
mov
jae
push
push
cmp
in
and
fsubrs
out
mov
add
mov
xchg
xor
push
mov
sub
dec
or
push
sbb
mov
jns
pop
sub
jne
popa
xchg
push
std
ret
repz
clc
inc
ficoms
fwait
imul
jae
mov
stos
ret
fcomps
outsl
nop
jecxz
or
pop
xchg
fidivrl
mov
or
sbb
jmp
gs
mov
icebp
test
mov
dec
js
sbb
pop
pop
sub
inc
xor
dec
fisubs
je
mov
ja
sahf
inc
fsts
out
xor
lcall
sbb
out
mov
sti
mov
js
mov
jo
neg
pop
and
pop
int
push
fs
mov
arpl
imul
push
pop
js
nop
add
inc
enter
sub
sbb
mov
inc
mov
push
mov
cmp
pusha
rcr
cmp
inc
ss
test
arpl
inc
mov
nop
dec
sbb
insl
imul
mov
dec
gs
call
rcrb
lahf
mov
inc
bound
and
add
inc
movsb
xchg
jbe
jno
sar
mov
test
bound
shlb
sbb
bound
mov
shll
ds
scas
popf
test
rcl
lea
outsl
mov
sbb
xor
and
call
fs
xor
in
dec
gs
jge
arpl
jae
stos
adc
adc
pop
cmp
scas
fisttpl
adc
jmp
out
sahf
test
inc
dec
mulps
adc
shrl
pop
xor
mov
rolb
aas
and
fbstp
xchg
jo
jo
shrb
cwtl
sar
xchg
leave
jge
jbe
lea
nop
imul
pop
pop
cmp
gs
lods
mov
push
es
incb
cmpsb
fisttps
xor
xor
dec
loopne
sbb
inc
ljmp
mov
sbb
aam
add
or
addr16
lods
push
call
cli
bound
mov
loopne
pop
push
insb
cmp
push
pop
nop
aas
int
push
xorl
sub
shlb
lods
cmp
push
sbb
add
cmp
pushf
push
rclb
fnstsw
mov
mov
pop
cmp
mov
dec
orb
or
jl
dec
xchg
leave
iret
xor
scas
test
xchg
mov
fisubs
mov
xor
and
xor
add
push
inc
push
mov
scas
sub
icebp
sub
enter
in
or
ret
scas
push
jo
les
sbb
icebp
ljmp
push
addr16
xchg
flds
sbb
sub
call
xchg
mov
pop
mov
pop
jb
loope
and
das
popf
push
inc
xchg
xchg
int3
mov
stos
cld
adc
xor
mov
push
dec
stc
sbb
stos
mov
jmp
pusha
jne
cmp
test
pop
pop
dec
push
mov
pop
add
jecxz
jae
mov
fidivrl
int3
inc
imul
insb
mov
outsb
adc
into
adc
push
xlat
fimuls
jae
gs
pop
pop
pop
push
xlat
adc
sub
push
dec
mov
mov
mov
pushf
push
imul
scas
jnp
filds
sub
xchg
subb
push
fldcw
dec
mov
inc
popa
cmpb
sbb
insl
insb
and
fcoml
ds
lock
mov
fwait
mov
test
cmp
sbb
jne
in
jp
or
shll
lahf
es
aas
lods
out
nop
xchg
repz
xchg
adcl
imul
popa
cmp
loop
mov
lahf
sub
lds
jnp
adc
mov
cmp
cwtl
push
adc
mov
mov
jmp
or
out
lret
mov
pop
fs
jns
push
xor
xchg
outsb
ja
mov
inc
xor
mov
in
fnsave
xor
popa
gs
mov
test
or
insb
add
mov
xor
xchg
xchg
fwait
xchg
aas
mov
mov
mov
int3
lods
jp
stos
insl
fcompl
psrlq
sbb
mov
fdivrs
jecxz
push
shlb
mov
jl
lret
sbb
sbb
pop
xor
mov
lds
inc
push
sbb
add
push
nop
dec
jae
mov
sub
adc
xor
fs
mov
mov
sub
in
dec
dec
jmp
test
add
lock
std
pop
xchg
cmpsb
pop
out
xlat
or
ljmp
test
pop
outsb
xchg
bound
lds
inc
inc
dec
stc
call
iret
aaa
sbb
lcall
fs
pop
add
dec
or
pop
xchg
and
aas
sbb
into
jp
sub
mov
jne
jge
hlt
fcmovnu
ja
shll
out
add
pop
sarb
jno
cmp
lahf
aaa
into
lahf
cmpb
test
sarl
int
sub
dec
cmpsl
movb
xchg
cmpsb
sub
mov
push
mov
jae
aaa
and
xchg
sub
sbb
pop
pop
or
aad
push
pop
jge
adc
mov
sub
xchg
movsb
test
orl
add
clc
es
jl
movsl
mov
enter
mov
sti
fistl
mov
xchg
out
fdivrl
mov
inc
jle
mov
int
popa
ret
xchg
or
roll
jl
jle
xchg
flds
sbb
xchg
adc
jp
in
pop
sbb
lock
sub
push
push
fcomps
nop
gs
out
pop
out
in
lds
adc
xchg
and
sti
aas
add
dec
xchg
popf
fisttps
pop
xorl
cltd
dec
xchg
test
cmc
enter
gs
mov
add
add
pushf
dec
push
adcl
movsb
and
mov
stos
int3
stc
mov
push
push
jmp
int
daa
push
mov
mov
rcll
mov
pop
dec
test
mov
clc
std
jno
or
sbb
mov
xchg
lock
lea
les
xorl
xchg
pop
add
xor
jnp
sub
mov
lret
adc
imul
adc
and
mov
clc
jnp
mov
add
push
and
add
adc
les
lahf
add
movsl
push
push
rol
dec
cmc
out
jnp
nop
push
mov
and
stc
fs
cmp
inc
in
fisttps
dec
cmp
jns
mov
cmc
or
add
cmp
jle
mov
sub
ret
adc
out
or
aaa
pop
stc
jnp
lods
xchg
sub
dec
fnstsw
fcmovnbe
out
das
mov
push
mov
test
and
daa
xchg
dec
inc
in
mov
push
cmp
imul
pop
jb
popa
in
aam
jnp
int
pop
xor
mov
insb
imul
sbb
xchg
ljmp
lds
or
inc
and
fnstsw
xchg
jne
mov
pop
shlb
mov
jb
shr
xlat
sub
aad
pop
sbb
stos
cmpb
sub
lahf
daa
pushf
xchg
and
mov
das
fs
fidivl
adc
rcr
add
flds
loope
sub
push
stc
ja
popa
sbb
pop
pop
push
leave
push
push
out
mov
inc
fwait
out
ror
push
testb
shlb
xchg
xchg
mov
sub
loope
aad
ljmp
mov
cs
gs
sbb
hlt
sahf
inc
lods
daa
dec
xchg
test
loopne
ret
sbb
rclb
pop
lret
mov
hlt
push
cmp
fistpl
sbb
jb
pop
iret
and
or
cmp
fcmovbe
jecxz
ss
mov
pop
push
out
test
sbb
mov
dec
test
mov
mov
mov
and
xchg
in
add
mov
jecxz
lock
les
gs
neg
in
es
test
xor
wrmsr
cwtl
mov
jbe
adc
outsb
xor
test
add
mov
jmp
int
xchg
adc
and
mov
jno
mov
fs
sub
push
jge
mov
or
imul
inc
pop
fldenv
jg
inc
cltd
xor
pop
pusha
push
fdivs
push
or
addl
sbb
pushl
sub
mov
rcll
fs
mov
andl
cmp
loop
outsl
std
inc
and
sub
inc
push
dec
aad
jle
cld
jnp
cs
xchg
dec
cmp
jge
fwait
es
dec
mov
int
frstor
cwtl
or
imul
mov
sbb
cmpsl
push
mov
scas
xor
inc
rolb
fisubs
scas
sarb
scas
mov
sub
mov
loopne
cmpsl
scas
icebp
outsl
in
cmpsl
xor
imul
pop
bound
xchg
adc
jmp
fwait
xchg
sbb
mov
rorl
sbb
xchg
imul
hlt
add
cmpsl
adc
stc
push
push
iret
cmp
inc
xchg
xchg
sahf
arpl
imul
ja
gs
inc
push
xor
cmp
adc
inc
out
mov
fidivrl
jmp
jmp
fscale
xchg
lock
lahf
mov
lret
or
in
inc
mov
fwait
loope
nop
pop
repnz
xchg
pop
or
lret
mov
mov
cmp
stos
aaa
daa
add
js
push
mov
dec
jmp
cli
repnz
jp
stc
xchg
cmp
inc
sti
pop
sub
cmp
add
cmp
lods
or
shrl
mov
dec
jmp
arpl
cmp
jmp
sarb
pop
cmp
and
lods
imul
add
fwait
lds
sahf
mov
dec
cwtl
adc
dec
xchg
mov
mov
cmp
int3
inc
xchg
mov
or
and
jne
out
pop
js
int
jne
cmp
loop
adc
movsl
lods
pushf
cmp
inc
jns
jmp
shll
mov
jno
cmpl
fisubrs
mov
ds
sti
xchg
xchg
int3
fdivrs
mov
xlat
dec
push
sbb
sbb
scas
jae
lds
push
gs
push
jno
dec
mov
popa
int
pop
fbld
inc
movsl
popa
mov
sti
or
into
mov
outsl
cld
or
add
add
jae
mov
xor
sbb
adc
int3
mov
push
daa
mov
imul
push
ss
adc
shlb
fsts
or
or
test
xchg
ss
in
movhps
ljmp
test
and
mov
mov
out
pop
test
inc
imul
aas
cmp
aaa
lods
in
or
jl
pop
rcrl
pop
test
pop
sbb
fisubl
add
iret
pop
adc
stos
xchg
sub
loope
ror
enter
mov
jne
ret
aad
mov
dec
xor
sbb
pop
pop
dec
cmpsb
sbb
pop
adc
stos
movsl
pop
bound
cmp
mov
xchg
fistl
movsb
mov
loop
push
mov
pop
mov
push
mov
pop
rcl
scas
inc
out
mov
xchg
in
pop
pushf
push
mov
fstpt
call
dec
cmp
mov
xor
inc
loop
aam
aam
mov
syscall
xchg
cmp
lds
stos
outsl
pop
in
lcall
fnsave
shr
call
add
fistl
jl
pusha
arpl
pop
jnp
push
mov
lret
xor
jecxz
add
push
fisttpll
clc
and
fldcw
pop
ss
mov
fsub
push
inc
scas
mov
popf
je
pusha
ljmp
lret
movsl
and
nop
jns
push
addr16
lret
aad
jmp
jge
xchg
lahf
enter
dec
pop
push
jecxz
ja
jmp
push
push
adc
push
bt
mov
ficomps
in
in
xor
adcl
in
ljmp
xor
xor
dec
jle
orb
mov
adc
fadds
pop
inc
lret
andb
adcb
pop
or
cmp
and
adc
shlb
cmp
adc
sub
mov
sar
test
emms
stos
rcrl
xor
cmp
and
daa
dec
push
out
push
mov
dec
cmp
ss
xchg
push
mov
call
xchg
cwtl
gs
adc
add
push
inc
add
aas
not
aam
mov
xchg
scas
push
xchg
inc
inc
push
fldenv
mov
mov
cwtl
cmp
out
nop
insb
push
push
push
daa
inc
int
and
or
or
mov
sub
and
sti
inc
shlb
ja
in
xchg
daa
nop
fwait
int
add
and
rol
dec
stc
jne
fimuls
loopne
xchg
pop
in
mov
jp
and
test
push
jge
push
xchg
xor
or
bound
addr16
jmp
mov
aad
xor
cmp
out
leave
test
xor
jb
push
xchg
loop
adc
pop
daa
jp
cld
out
push
adcb
or
test
cltd
inc
movsb
vminps
shll
imul
mov
xchg
inc
pop
push
mov
sar
lods
cs
lahf
not
push
jg
mov
fmull
sarl
dec
mov
pop
and
pop
div
in
sahf
popf
ret
jae
push
leave
addr16
sub
push
jmp
int
pop
add
movsl
jns
imul
aas
xchg
les
jl
jmp
sbb
push
out
mov
xor
stos
and
mov
ret
and
imul
jle
mov
xorb
sbb
fwait
xchg
sahf
push
out
dec
mov
ret
mov
repnz
sub
xchg
jge
push
gs
notl
movsl
out
in
mov
pop
out
testb
scas
ljmp
mov
fisubs
cmp
je
fldl
sub
push
push
jle
test
pop
xchg
cmp
fwait
clc
dec
inc
push
pop
test
pushf
jo
jo
roll
in
out
mov
je
push
sahf
mov
xor
scas
sbb
inc
outsl
push
lea
jnp
lods
cmp
mov
dec
xchg
je
fisubl
in
test
repnz
mov
les
xchg
ja
cmp
sti
add
inc
fcoml
das
push
cmpsb
les
js
imul
movl
fidivrs
or
inc
sbb
frstor
mov
in
adc
loopne
or
mov
pop
lods
or
xchg
sti
push
dec
shrl
repnz
push
push
lods
xchg
aas
add
gs
insl
and
imul
leave
cmp
int
pop
pop
or
stos
dec
mov
idivl
push
outsb
loop
arpl
jno
adc
inc
inc
subb
cmp
pop
adc
sarb
movsl
sub
and
jne
push
rcll
mov
mov
enter
inc
sub
scas
xchg
mov
or
bnd
add
test
sub
push
jnp
out
adc
call
inc
and
aad
fsubrl
outsl
pushf
pop
fisubrs
inc
xchg
daa
fldt
adc
sarl
xchg
mov
mov
loope
fldt
xor
xlat
lret
repz
sub
and
dec
lret
adc
mov
mov
out
cmpsb
jecxz
lcall
ljmp
push
rcrl
fwait
daa
sti
push
sub
mov
aas
adc
out
fnsave
cmp
inc
loope
xor
in
data16
bound
cmpb
mov
into
fisubs
add
push
pusha
stos
and
fwait
and
jp
pop
enter
stc
push
addr16
aas
mov
push
jle
mov
fwait
imul
jno
cmp
repz
cmpsb
sub
fbstp
int
xlat
sbb
out
stos
push
lret
movsb
or
das
push
push
sbb
push
imul
xchg
jbe
add
jg
loope
sti
gs
in
mov
jmp
cs
fidivrl
lahf
into
imul
fisubrs
aad
lcall
jmp
mov
sti
jl
mov
mov
notb
cmc
adc
mov
stos
pop
mov
aad
insb
or
push
mov
pop
and
or
mov
xchg
mov
pusha
mov
pop
sbb
push
insb
rcll
mov
sti
or
dec
mov
test
call
sbb
fwait
mov
ftst
adc
test
cmpsb
ds
cmp
add
loope
mov
outsl
xchg
xchg
pop
pop
testb
lcall
std
shlb
mov
xchg
sbb
cmpsl
call
insb
mov
mov
mov
fs
rcrl
andl
imull
enter
test
vpmacssdql
fdivs
js
rcr
das
push
hlt
jg
and
shl
cmp
mov
pop
jbe
push
sarb
loope
pop
hlt
inc
mov
sahf
jp
faddl
fs
repnz
js
pop
fcmovnb
scas
hlt
jmp
add
scas
sarb
sub
sbb
pop
out
mov
add
out
aad
out
mov
jbe
stc
sub
lea
pop
adc
inc
rclb
mov
jae
jnp
adcl
push
loop
cli
ljmp
push
inc
test
lods
xor
mov
fstl
loop
fistps
and
inc
push
lods
cmovae
ja
call
xchg
dec
or
jne
xchg
push
outsb
mov
loop
or
in
loopne
xchg
sub
repz
call
cwtl
or
jne
rorb
xor
cld
mov
mov
or
adcl
test
cmp
ja
scas
mov
dec
repz
xchg
push
lock
lea
adc
pusha
insb
sbb
push
test
push
dec
mov
dec
cmpsl
movsl
xor
and
mov
sub
ljmp
inc
shlb
cmpsl
mov
sub
shll
sub
cmc
je
ljmp
icebp
xchg
pop
sub
je
and
inc
popf
popf
adc
in
repz
fnsave
dec
ret
out
mov
lret
jno
repz
clc
fdivl
insl
shll
push
and
in
sti
mov
mov
add
mov
dec
insl
icebp
sbb
push
xorl
pop
and
xchg
jl
mov
inc
jl
dec
mov
test
test
out
cltd
xchg
in
or
ds
inc
pushl
and
icebp
ds
clc
sahf
mov
jg
or
pop
sbbb
mov
xorl
push
fwait
mull
xchg
scas
add
cli
sti
loop
inc
adc
loope
push
pop
push
jno
data16
in
movsb
add
cltd
enter
mov
push
or
leave
jbe
mov
stc
pushf
sbb
mov
mov
dec
add
push
mov
pop
call
adc
pushf
repz
mov
clc
dec
idiv
mov
mov
in
into
mov
cs
aam
scas
negl
inc
mov
lret
push
adc
push
pop
ficompl
mov
mov
dec
push
rorb
std
mov
and
mov
jl
sub
gs
cmp
and
jg
imul
cli
pop
shlb
rcrb
outsb
movsl
pop
push
out
test
in
lret
inc
xor
nop
lods
fcomp
aam
les
addr16
out
push
and
add
mov
xor
sub
addr16
pop
xchg
mov
add
fisttpll
sub
jno
adc
pop
fs
js
xor
push
pop
into
inc
leave
pop
das
movsl
stos
dec
pop
pop
jns
mov
rcll
mov
loope
dec
scas
and
aaa
cmpsl
inc
ss
pop
mov
popa
cmp
mov
push
int3
xchg
push
je
es
pusha
adc
or
adc
xor
dec
es
movsl
in
sub
inc
xor
aad
das
inc
repz
adc
invlpg
adc
xor
fwait
or
movb
sbb
out
mov
loop
add
rcl
cltd
or
sbbb
mov
mov
sbbb
or
push
test
mov
loop
inc
jmp
mov
jno
xchg
adc
mov
push
mov
nop
mov
aas
sbb
sahf
inc
lods
jo,pn
pushf
mov
inc
sbb
jne
push
jl
rolb
into
outsl
dec
clc
ja
ret
loope
cmpsl
sti
push
push
int
and
andl
int3
or
inc
pop
dec
mov
movsb
pop
and
pusha
popf
pop
jae
sbb
iret
xchg
shlb
or
xor
pushf
test
das
aam
scas
bound
fistl
pop
sti
loope
mov
cld
adc
pop
faddp
fisubl
fsts
cmp
test
jnp
jge
jg
imul
enter
inc
std
sbb
jbe
pop
push
xor
clc
and
aad
sub
and
adc
into
jbe
xchg
or
in
push
je
cmpsl
xchg
mov
sub
repnz
dec
out
or
out
insl
or
popf
jle
cmp
xchg
shll
xor
insb
push
cmp
orl
xchg
lods
xchg
and
movsb
in
cmpsb
push
inc
mov
out
pop
cs
cmpsb
jp
mov
gs
test
fwait
imul
and
push
hlt
icebp
pusha
lock
mov
test
mov
in
add
fs
orl
lea
adc
mov
add
xor
data16
arpl
mov
or
dec
das
rorl
hlt
int
cltd
push
test
je
add
sahf
jle
clc
push
xchg
dec
aas
fcoml
roll
outsb
and
xchg
rorb
outsl
add
pop
mov
pop
add
adc
mov
jg
jle
into
es
testb
mov
fcmovu
inc
and
jne
std
inc
push
adc
or
int3
pop
sub
adc
mov
push
rorl
xor
insb
notb
mov
imul
xlat
or
adc
aaa
mov
sub
push
cltd
mov
push
or
pop
cmp
lea
pmulhw
pop
pop
inc
std
push
aaa
cltd
cs
pop
jnp
loopne
push
cwtl
mov
shlb
imul
sbb
mov
and
sub
xchg
sub
xchg
int3
jge
and
dec
jbe
adc
xor
loop
mov
sbb
lea
sub
mov
mov
out
jmp
jne
xor
or
in
and
stos
jecxz
les
or
cwtl
mov
in
mull
fcmovb
dec
std
inc
jg
mov
addr16
shlb
jmp
push
dec
or
mov
sbbb
xor
mov
mov
xor
out
xor
or
repnz
jle
dec
jnp
dec
lods
leave
fcomps
mov
pop
adc
rorb
rcrl
push
mov
ljmp
fs
andb
movsb
data16
mov
int
xchg
dec
push
sti
loope
adc
adc
test
mov
adc
mov
sbb
sub
paddw
push
aad
jmp
sub
dec
jmp
sti
mov
mov
test
jecxz
add
nop
subb
mov
fildl
ljmp
fcmovnbe
sbb
cmpsl
popa
outsl
imul
out
lods
inc
daa
push
test
dec
xchg
or
push
mov
gs
mov
xchg
sbb
test
outsb
outsl
jmp
ja
in
sub
or
xor
pusha
sarl
jae
pop
jo
push
add
enter
aas
rorl
sbb
xchg
rcll
and
int3
jno
sub
rcll
stos
imul
flds
cmp
jns
int3
cli
aam
and
pop
outsl
cmpxchg
add
out
adc
inc
cmp
xchg
xchg
cmp
movsl
add
inc
scas
arpl
hlt
inc
jecxz
sbb
popf
sub
leave
mov
push
jae
fldt
or
mov
in
js
mov
jbe
jmp
je
add
js
mov
imul
lods
cld
xor
lcall
mov
mov
mov
sub
lret
movsb
jbe
inc
les
int3
shlb
int3
mov
push
imul
test
adc
mov
add
icebp
mov
clc
xchg
or
fcompl
push
ja
mov
xchg
add
nop
mov
pop
or
sbb
xor
cwtl
insb
jae
daa
ja
cmp
pop
jnp
mov
adc
stos
adc
xlat
rcr
jo
and
popa
pop
sbb
mov
sbbb
fisubrs
push
repnz
imul
cwtl
push
adc
pop
enter
cltd
and
xor
cmpsl
aad
lock
cmp
clc
insl
sbb
js
fstp
pushl
jecxz
and
insb
push
jl
xor
lcall
decb
xor
xor
ret
frstor
inc
call
addr16
ljmp
mov
fnstcw
add
cltd
test
and
out
fsts
shll
lods
movhps
ss
pop
ret
loope
ficoms
fdivrs
add
mov
jae
cmpsb
jne
sti
mov
stos
lahf
push
in
or
lea
int
jbe
cmp
push
out
in
addr16
sub
ffree
pusha
shl
or
lods
stos
mov
mov
in
sar
sbb
sahf
stos
out
mov
outsb
xchg
movl
fnstsw
sbb
mov
cwtl
daa
stc
jae
mov
enter
sahf
in
push
cmpsl
mov
push
push
push
inc
mov
push
insb
sbb
push
bound
push
les
pusha
dec
xlat
sub
inc
pop
lcall
fidivs
jnp
es
mov
lds
mov
cltd
adc
test
fwait
add
in
shr
int3
lock
jl
cmp
stos
mov
cmp
mov
cmc
cmp
sbb
in
cwtl
adc
or
jge
stos
or
mov
mov
scas
xor
push
rol
cmpsl
shll
inc
ss
sbb
jle
sub
stos
xor
xchg
insb
add
sbb
loope
icebp
popa
cmp
insb
sbb
dec
aaa
jno,pn
jle
push
rcl
mov
pusha
jae
xchg
outsb
mov
aam
lods
jne
mov
fmul
movsl
aas
stos
inc
ja
test
filds
mov
mov
push
inc
jecxz
sahf
xchg
rcrl
mov
mov
inc
enter
adcb
aad
dec
add
js
mov
xlat
or
notb
in
mov
outsl
adc
iret
dec
inc
sbb
mov
xor
pop
loope
rcrb
and
mov
repz
xor
mov
and
icebp
xor
sbb
ret
push
sti
jne
arpl
fs
xor
and
xchg
out
or
js
fisubl
lea
andb
sbb
aam
xchg
push
sub
jle
xlat
cmpsb
repnz
addr16
insl
adc
ret
repz
sbb
add
xor
gs
cs
xor
int3
sar
mov
f2xm1
adc
xchg
sahf
scas
pop
pop
sub
je
lahf
mov
iret
lods
imul
fistps
mulb
aas
idiv
push
roll
insb
sbb
cmp
and
ficomps
movsl
aas
cltd
jge
xor
xchg
scas
shl
ja
push
push
add
cli
jle
sahf
mov
lahf
imul
adcb
lret
mov
outsl
sbb
das
les
cmp
mov
sub
adc
dec
in
push
cmp
mov
lahf
scas
decl
js
xchg
lahf
pop
loopne
testl
imul
lds
lods
pushf
dec
xor
movsl
jmp
nop
pop
enter
adc
mov
jl
dec
into
enter
ret
fistps
xchg
mov
dec
cmp
mov
test
lret
icebp
push
jae
enter
cmp
inc
sub
and
or
mov
and
jecxz
mov
cmp
arpl
ret
inc
adc
out
push
popa
fwait
nop
mov
mov
pop
les
xor
test
jecxz
lods
jnp
test
addr16
adc
rolb
sub
add
sub
ficoms
adc
push
test
mov
hlt
mov
clc
or
cld
and
xchg
dec
sub
jb
xor
jnp
daa
xchg
sub
call
cmp
mov
push
mov
sub
mov
lods
cmp
add
rcll
movsb
xor
icebp
adc
movsl
dec
adc
icebp
pop
push
cs
js
lahf
xor
add
lock
jmp
call
clc
popa
aad
pop
lret
sbb
adc
push
fbld
lret
fcmovbe
lcall
cltd
scas
hlt
roll
movsb
in
hlt
sbb
scas
jge
jle
out
in
inc
pop
jae
lea
sbb
fistps
loopne
pop
jno
dec
call
add
scas
in
mov
xor
popf
mov
sub
inc
sahf
push
push
cmp
xchg
and
sarl
scas
sub
pop
mov
dec
icebp
adc
leave
jl
mov
sarb
adc
scas
cmc
mov
cltd
sub
xor
loop
jae
test
mov
inc
fistpll
mov
pop
cmp
mov
repz
jnp
cs
ret
sbb
pop
and
insl
sub
add
push
and
dec
xor
rcll
rcrb
pusha
push
push
ret
sarb
nop
jecxz,pn
cli
fstps
decl
mov
sbb
adc
lahf
sbbb
or
icebp
fcomi
cmp
dec
dec
jne
pop
lcall
add
adc
push
jno
jmp
into
sbb
pop
popf
outsb
lock
sbb
insl
jne
hlt
xchg
xor
pop
sbb
testl
in
xor
test
push
aad
movsl
sbb
ss
and
arpl
adc
clc
arpl
fwait
xchg
arpl
mov
fildl
xlat
lcall
xor
xchg
pop
mov
std
or
std
inc
aam
add
mov
les
pushf
in
add
dec
sub
popl
push
xlat
jnp
imul
xor
stos
nop
loop
daa
pop
mov
xlat
repnz
movsb
sub
mov
icebp
mov
mov
fcomps
nop
cmp
pop
cli
fisttpl
xor
xor
adc
push
aam
or
push
shl
dec
test
push
jo
mov
mov
sbb
ds
pop
pop
scas
jb
xchg
jecxz
and
fdivs
dec
out
negb
cli
insl
call
ss
xor
lock
out
repnz
pop
xor
xor
sbb
fscale
mov
pop
xchg
fs
int
shrl
cmp
push
lods
hlt
ja
adc
in
sub
xor
sub
lea
sbb
mov
xor
jne
aas
add
ja
mov
int3
das
and
lock
in
pop
mov
pop
cmp
rcll
sahf
je
mov
inc
mov
shrb
shl
jmp
xor
iret
lret
cs
jg
ficoms
mov
xchg
or
and
or
push
inc
int
mov
fbstp
cmp
dec
inc
sub
popf
mov
fwait
add
or
adc
and
lds
push
xchg
push
int
ret
add
sbb
aaa
lahf
into
pop
or
jb
addr16
mov
cmp
int
push
lret
xchg
aam
inc
mov
add
inc
shll
jl
into
mov
loop
jnp
cmp
dec
aad
in
lea
fidivrl
imul
pop
sti
bound
test
adc
testb
fdivr
call
lods
mov
sub
ljmp
in
js
sbb
test
lret
daa
mov
out
dec
addr16
popf
xor
ret
movsl
dec
stc
inc
cmp
icebp
xchg
cmc
jp
in
pop
repnz
pop
mov
imul
iret
cmpsl
dec
and
xchg
dec
cmp
icebp
cld
in
push
in
fcompl
lea
arpl
dec
pushf
outsl
jne
lcall
gs
mov
push
sub
fcmovnu
add
xchg
push
lcall
inc
aam
popf
nop
inc
das
xchg
add
rcll
jmp
xchg
clc
sub
fcoms
test
jo
mov
xor
xor
nop
pop
pop
xor
or
clc
lcall
inc
xchg
and
jl
js
pusha
push
xchg
fidivs
xchg
pop
xor
mov
push
sub
push
sbb
cmp
in
inc
repz
aam
jp
loop
iret
into
imul
mov
sbb
push
pop
pop
inc
jmp
imul
es
cltd
jle
jge
push
out
fwait
jl
cli
sub
decl
push
inc
aaa
cmp
out
shll
mov
push
test
lods
jno
push
out
leave
insl
mov
inc
dec
daa
arpl
or
push
push
sub
inc
push
push
adc
push
xchg
decb
cli
push
jmp
out
push
rcrl
jle
and
clc
divb
dec
test
xchg
les
sbb
cmp
jnp
push
mov
lds
mov
xor
add
xlat
pop
lcall
push
pop
popf
jns
enter
pop
mov
cmp
clc
fs
adc
or
imulb
sub
push
bound
nop
lcall
or
push
or
mov
dec
xchg
mov
jmp
xor
xchg
call
xchg
ret
in
out
xchg
add
and
cmpb
pop
sub
pop
fistps
push
sub
and
and
out
or
aaa
sahf
insl
pop
xchg
push
rcl
jae
fimull
sub
sbb
mov
jp
sbbb
sbb
jns
add
xchg
inc
int
aaa
lock
cmp
lods
jp
mov
inc
negl
scas
into
and
dec
jp
push
and
mov
nop
stc
pop
imul
imul
or
inc
loopne
aam
lods
lods
stos
mov
iret
mov
pop
xorl
repz
shrl
xchg
lea
push
in
jl
mov
jb
je
xorb
std
stos
mov
cmc
pop
mov
aad
mov
cmp
mov
fdivrl
test
sbb
xchg
fstpt
imul
mov
sbb
out
dec
insl
push
sub
fs
jg
push
xchg
ss
xchg
cmpsl
inc
jmp
rol
imul
fiadds
and
mov
xchg
add
out
fimuls
lcall
push
add
mov
mov
shrb
lret
fstps
out
or
jne
push
mov
push
add
lock
xchg
fisttpl
mov
mov
sti
bound
test
in
jmp
mov
pop
iret
js
fistpll
lret
in
fldl
repnz
into
js
fwait
cmp
cli
xor
or
push
cmpsb
and
adc
dec
cmp
or
call
pop
addb
inc
and
jg
in
das
ljmp
jecxz
clc
inc
mov
add
inc
enter
stc
xchg
adc
cmp
cld
adc
loope
popa
sbb
sub
test
dec
nop
leave
pop
xchg
or
xlat
mov
sbb
pop
sbb
repz
nop
cmp
sti
dec
and
adc
nop
loope
int3
out
ljmp
shrb
repz
sub
mov
and
int3
sbb
sbbl
icebp
jmp
and
leave
ficoms
das
xchg
adc
pop
mov
adc
pop
pushf
jnp
sbb
cmpsb
pop
jb
or
mov
in
je
cmp
jl
jnp
add
pop
jno
leave
std
inc
dec
cltd
sbb
cwtl
div
cmpsl
fmul
inc
andl
mov
mov
stc
dec
xchg
pop
pop
cwtl
mov
push
sbb
mov
sub
daa
jge
mov
sub
mov
bound
push
icebp
les
or
test
in
xorb
les
cmp
cmpsl
loope
jno
frstor
add
int
push
rolb
mov
aam
jb
ljmp
and
std
enter
xchg
stos
pusha
jb
inc
dec
out
int
rcl
lods
cld
inc
rorb
mov
push
popa
loopne
adc
insl
xor
adc
das
sub
push
jecxz
test
outsb
inc
xor
fdiv
std
add
dec
xchg
ficomps
stc
ljmp
pop
js
sub
sti
dec
mov
in
movsl
aam
xlat
sub
mov
std
and
fwait
inc
sbb
xor
cmp
es
jbe
pop
fadds
movsl
js
out
sub
pop
scas
jb
insl
fwait
mov
adc
inc
in
pop
cmp
fwait
mov
lahf
pop
into
repnz
sbb
dec
inc
add
test
push
push
decl
imulb
push
outsl
jns
push
popf
sbb
or
jne
mov
jl
fucomp
repz
imul
test
add
cmp
fbstp
popf
ds
and
adc
icebp
adc
push
rcrb
sub
inc
inc
xorl
popa
repnz
jnp
rcl
outsb
outsb
mov
add
pop
repz
mov
shll
sub
jnp
bound
rcll
push
leave
xchg
push
leave
stc
in
les
push
mov
cmp
rolb
pop
adc
dec
out
pop
xchg
popf
sub
mov
outsb
test
sbb
xchg
mov
ficomps
sahf
jecxz
jne
xor
sarb
cmpsb
lock
push
insb
jp
shrb
mov
sbb
cld
sub
xor
pop
into
cmp
xor
dec
cmpsl
dec
ret
cmc
xor
in
decl
cmpsl
push
mov
nop
dec
pushf
icebp
subb
xchg
jecxz
dec
jmp
std
dec
stos
ja
sarl
adcb
sbb
imul
sub
dec
in
mov
cmp
push
mov
stos
add
addr16
jg
pop
test
mov
mov
icebp
lcall
insl
cwtl
xchg
shr
adc
push
pushf
lods
sbb
std
ljmp
sbb
jmp
sbb
js
les
xchg
mov
mov
fwait
push
cmp
cmpsl
pop
and
ss
jnp
das
test
dec
mov
popa
push
mov
sbb
aam
cmc
loop
sub
fwait
jg
out
outsl
cmc
pop
sti
daa
mov
call
loop
imul
stos
inc
or
je
jge
pop
faddl
push
xchg
aam
xor
iret
cmpsb
bound
rorl
call
mov
nop
mov
sub
lcall
insb
cwtl
mov
fistl
insb
xchg
push
xor
sub
add
add
or
and
and
ds
cvtpd2dq
cmp
nop
mov
jns
xchg
outsl
mov
clc
mov
cs
cltd
push
movb
repz
mov
movsb
xor
jecxz
sub
xor
push
out
and
dec
pextrw
js
mov
ss
shll
test
cs
jmp
xor
inc
or
cmp
movsb
js
push
xchg
pusha
dec
mov
es
jle
popf
or
inc
mov
push
adc
pop
aam
movsb
test
lret
adc
jl
loope
lret
leave
sbb
out
aaa
imul
ljmp
aaa
xchg
pop
dec
pop
or
mov
adc
dec
xlat
je
cmc
clc
das
imul
jg
sub
inc
jb
iret
xchg
and
sub
int
push
ljmp
push
cs
push
scas
aad
xchg
jge
sub
fldcw
push
fucom
js
mov
fwait
addr16
pop
xor
and
sub
cmp
sub
mov
xchg
xchg
sub
xchg
movsl
push
scas
push
adc
or
fldt
xchg
dec
cmpsb
shll
repz
arpl
and
add
and
pop
mov
cltd
lcall
mov
push
xchg
ds
xchg
enter
outsl
jp
int
push
pop
or
pop
lcall
pop
test
add
stos
out
fisttpl
cwtl
ja
and
xchg
adc
mov
ss
dec
das
adc
xchg
in
xchg
xchg
or
test
jmp
ret
and
mov
or
sub
and
mov
cltd
lret
mov
xor
pop
pop
fsubs
xor
xlat
mov
jp
mov
mov
shl
xchg
pop
pop
fs
adc
out
adc
add
popa
jnp
in
or
inc
push
fsubrl
xor
sub
xchg
adc
inc
aaa
repz
cmc
sbb
mov
push
sbb
cmp
xchg
or
fbld
aad
jnp
bound
cmpsb
pop
in
pop
jg
test
fisubrl
dec
jle
hlt
out
cmpsb
and
frndint
stos
insl
and
cld
pop
jge
out
jge
inc
ffreep
jno
or
inc
xchg
out
xchg
inc
dec
in
sbb
cmp
and
sbb
lret
insb
aaa
and
loope
inc
and
jle
into
out
mov
movsb
mov
cmp
rcr
icebp
rcr
cli
in
push
fidivrs
jg
popf
push
jle
out
incb
clc
jge
jne
inc
mov
pop
xor
arpl
mov
pop
hlt
cs
cmpb
std
outsl
mov
inc
je
ss
lods
add
sub
push
int3
cld
gs
out
dec
sub
xchg
or
test
jnp
pop
add
push
cmpsb
sub
adc
push
dec
lea
sub
out
notl
fbld
mov
push
rclb
and
test
jmp
add
ljmp
xchg
cltd
adc
sub
push
xchg
sbb
dec
and
out
add
mov
nop
push
push
dec
pop
push
in
xor
shll
xchg
addl
ds
js
mov
daa
sub
addr16
icebp
sbb
imul
pop
pop
mov
daa
push
xor
jnp
mov
stos
mov
or
jne
push
add
lods
sub
jle
cmpsb
mov
push
stos
in
testb
inc
or
jae
push
sbb
mov
mov
mov
movsl
jp
inc
mov
push
sub
add
adcl
and
mov
leave
fwait
lods
ja
sbb
pop
test
ds
testb
inc
rcrb
loope
fstl
mov
loopne
pushf
andl
gs
lods
push
movsl
sub
pop
cmp
cmp
adc
xchg
jnp
inc
stos
fs
push
frstor
push
dec
push
push
xchg
adc
mov
xor
ret
jmp
and
push
loopne
inc
fdivrl
xchg
dec
loop
jns
mov
cmc
js
or
rcrb
cmp
or
rol
push
shlb
jmp
subl
mov
mov
es
dec
mov
jmp
xchg
inc
xchg
dec
sub
icebp
pop
das
outsb
divb
dec
pop
mov
mov
xchg
ljmp
in
jbe
mov
inc
es
outsb
adc
push
js
sub
pop
fildl
and
jp
insl
pop
push
je
pop
sub
mov
leave
pop
adcb
xchg
out
jmp
xchg
sub
cmpsb
pop
xor
or
or
mov
mov
add
cmpb
fwait
sbb
shlb
idiv
js
inc
movsb
jo
addr16
pop
or
pop
or
repnz
push
movsl
je
fs
das
mov
dec
aad
popf
std
mov
out
mov
mov
icebp
mov
jae
cmp
xchg
mov
repz
pushf
fsubr
fwait
es
sarl
sub
xchg
mov
add
sbb
and
add
addl
cmc
pop
es
lds
pushf
je
shl
divl
mov
mov
inc
inc
int3
and
clc
hlt
pop
lods
jns
mov
xchg
xor
aad
sub
dec
pop
push
cmp
cmp
in
cmp
mov
adc
or
test
pop
mov
repz
scas
call
das
test
cmp
in
xchg
inc
mov
ret
sbb
popf
mov
inc
inc
cmp
aam
lods
jnp
and
es
mov
or
jnp
stos
pop
scas
xchg
jge
aas
jns
scas
jne
jg
xchg
mov
pop
mov
sbb
inc
xor
inc
xchg
aad
jnp
xchg
cmpsl
ret
ljmp
outsb
mov
push
pop
dec
in
mov
dec
sbb
fimull
sub
loope
add
movaps
loop
add
mov
icebp
inc
int
jp
lret
js
xchg
mov
pop
ret
add
mov
push
in
xchg
jecxz
or
clc
hlt
and
xor
fs
jmp
cld
mov
push
jnp
pop
xor
xchg
arpl
push
das
sahf
lret
mov
or
adcb
xor
ror
mov
adc
dec
push
bound
out
fmuls
call
jae
stos
outsb
mov
fmull
or
adc
mov
test
push
push
sti
test
jle
pop
push
xchg
cltd
xchg
mov
mov
cmp
iret
pop
in
in
add
dec
xor
out
adc
fisubrs
add
nop
lret
lea
dec
repz
push
and
dec
popf
jbe
js
push
imul
repnz
fwait
pop
loope
rorl
and
mov
icebp
imulb
inc
push
push
lock
or
dec
push
xor
lods
mov
in
mull
lahf
push
rol
addb
xor
jg
xchg
lds
popa
or
sti
inc
rclb
cmpsl
pusha
push
xor
mov
cmp
ret
flds
xchg
cmp
push
mov
les
sub
adc
pop
cltd
jle
gs
lret
add
fscale
sub
cmp
jo
scas
lret
and
cmp
push
adc
test
cld
andl
pusha
rcrl
lods
jbe
mov
push
movsl
shld
out
sti
lds
push
adc
in
mull
jbe
jl
icebp
fdivrl
rcrb
pop
dec
icebp
jnp
shrb
dec
enter
pop
mov
xor
int3
outsl
enter
jne
adc
and
ret
pop
mov
sub
mov
jmp
xchg
xchg
cmp
pop
iret
or
das
repz
push
loopne
enter
push
mov
pushf
lret
mov
jns
loop
or
decl
fistpl
stc
and
xor
sbb
add
mov
jmp
orl
mov
pop
mov
fcompl
iret
movl
jp
ret
stos
fcoml
add
ret
dec
cmp
mov
lods
inc
pavgb
mov
scas
je
jne
mov
adc
dec
mov
rcr
lods
xchg
add
jae
xchg
and
xor
fwait
pop
mov
mov
nop
sarl
ret
mov
mov
cmp
pop
test
test
add
mov
int3
mov
and
jno
icebp
lds
scas
insl
lds
aad
notl
icebp
adc
or
fdivrl
adc
call
dec
sub
or
mov
inc
idivl
push
lea
and
call
lret
ret
mov
jno
sar
sub
xchg
jbe
out
inc
push
xor
adcl
pop
dec
mov
lds
and
or
popf
xor
subl
dec
imul
and
dec
popf
dec
dec
aam
push
push
jbe
sbbb
pop
in
js
std
mov
mov
pop
adc
lahf
jl
ss
outsb
mov
xchg
stos
into
loopne
push
cld
lcall
arpl
cmc
dec
lods
arpl
pop
das
or
mov
fwait
mov
sbb
loopne
and
cmp
sti
xchg
ss
xchg
lock
setns
add
xor
f2xm1
and
imul
jg
mov
stos
inc
pusha
jae
in
jp
push
lods
loopne
xor
mov
xchg
sbb
daa
lahf
outsb
inc
das
mov
pushf
inc
jmp
out
icebp
add
or
repnz
jns
in
push
mov
les
push
lret
sub
xor
cmp
jle
xor
jo
jle
out
aam
xchg
xor
mov
dec
inc
aas
ss
cmpsl
jmp
xor
inc
mov
mov
call
sub
sub
mov
adc
jne
and
sub
add
mov
gs
into
into
jnp
ljmp
dec
inc
std
push
int3
cmp
jmp
aam
jg
mov
pop
xor
pop
cltd
pop
leave
in
fwait
push
sarb
das
sub
jo
mov
adc
mov
out
jae
pushf
xchg
xchg
ja
fidivl
mov
imul
cmp
stc
dec
push
fs
addr16
test
imulb
mov
enter
and
jmp
sti
cmp
inc
call
inc
into
adc
mov
mov
mov
inc
pop
pop
in
mov
addb
out
out
cmp
repz
sub
mov
lret
notl
ss
jmp
call
mov
hlt
jl
or
repnz
dec
stos
mov
or
lret
cmp
inc
call
sub
adc
cmp
test
mov
cmc
push
stos
insb
imul
pusha
mov
mov
xor
xor
xchg
mov
ss
mov
std
pop
cs
in
mov
fstpt
sub
dec
mov
bound
test
xor
add
lcall
leave
fdiv
pop
xchg
lds
adc
sbb
add
and
loope
push
push
movsl
lcall
fists
or
push
mov
sub
xor
test
pop
mov
push
addl
pop
popa
insl
cmp
xor
aas
or
inc
es
test
leave
and
adc
xchg
pop
jne
pop
cmp
idivb
pop
rorb
fscale
adc
mov
jl
and
xchg
cmc
outsb
mov
mov
or
sub
jp
mov
out
ss
mov
scas
lods
mov
xchg
mov
push
xchg
push
or
jge
jae
mov
push
mov
testb
lock
sub
add
add
ret
js
lret
out
xlat
pop
xchg
adc
jne
imul
xor
push
sub
call
pushf
clc
loope
inc
insb
mov
ret
stos
add
lcall
dec
cmp
jae
movsb
adc
mov
insb
std
addl
ss
aaa
jnp
or
je,pt
mov
mov
push
jbe
mov
mov
je
or
add
mov
push
dec
jbe
adc
lock
stos
sahf
pop
adc
and
sub
or
mov
test
rorl
dec
cmpsb
mov
mov
outsb
mov
sbb
and
mov
mov
mov
mov
pop
sub
xchg
shll
fdivr
jp
jecxz
xor
pop
ret
arpl
dec
sahf
mov
push
push
cwtl
dec
imul
test
out
push
test
mov
jl
mov
lods
ds
bound
push
cmp
popf
and
cltd
iret
out
in
popf
test
jbe
jno
add
push
sub
or
xchg
add
add
aaa
mov
and
aad
mov
mov
inc
pop
aam
movsb
jge
repz
mov
pop
push
cmp
cmp
jge
repz
adc
fsubs
push
data16
and
or
mov
push
push
add
xchg
jo
push
sub
scas
jle
outsl
jo
push
inc
je
mov
sbb
aaa
and
mov
mov
outsb
cmp
scas
fistps
ret
data16
xchg
shrl
jo
sub
add
push
push
xchg
stos
push
pop
stos
insb
mov
hlt
or
insb
lock
or
jl
cmc
mov
jnp
pop
sub
pop
icebp
repz
rcrl
lret
xchg
jecxz
mull
stos
and
sub
and
add
add
cmp
jmp
sub
inc
nop
out
fsubrl
cmp
add
popa
mov
jp
lret
fidivrl
push
mov
push
out
cmp
and
stc
rcrl
popa
push
jecxz
jp
and
cs
int
out
cmpsb
data16
ss
and
pop
scas
pop
shlb
mov
sarl
add
shlb
cmp
repnz
cli
repz
sub
adc
xor
push
das
or
push
mov
jle
inc
repz
gs
jae
shll
loop
pop
xchg
negl
je
mov
push
mov
fidivl
pop
cwtl
push
add
or
xchg
les
mov
mul
repz
push
pop
arpl
int3
mov
pop
mov
sbb
jns
cmpsl
xor
add
mov
arpl
jb
pop
mull
push
pusha
push
add
cmp
xor
idiv
cltd
mov
push
mov
sbb
into
in
push
or
ja
mov
lds
mov
loopne
in
pop
mov
aas
fcompl
and
add
jle
xor
lods
xchg
jl
repz
sti
dec
stc
fidivrl
mov
shlb
in
pop
shlb
inc
sbb
cmp
fisubs
imulb
test
jo
mov
push
dec
jo
mov
mov
push
push
inc
movsb
mov
loope
mov
mov
xchg
ja
xchg
add
sub
pop
leave
scas
xor
frstor
xchg
inc
dec
lock
xor
scas
jp
lods
cld
fistl
or
xchg
mov
inc
in
xchg
mov
adc
xlat
push
shlb
into
fs
sub
and
fsubs
push
jge
out
inc
popa
inc
adc
mov
lret
test
movsb
std
pop
test
push
dec
and
mov
dec
mov
pop
adc
push
rolb
sub
fwait
xorl
std
test
leave
mov
push
push
mov
push
sahf
loop
bound
xor
lea
push
xor
mov
inc
push
loopne
fwait
data16
jnp
cli
inc
sbb
jg
adc
mov
mov
pop
test
stos
scas
add
adc
push
jb
fimull
or
sbb
fstpt
jo
aas
xor
int
nop
dec
adc
lret
sub
loop
dec
cmpsb
fidivrl
gs
in
mov
nop
fstps
cmp
mul
icebp
and
mov
add
inc
pusha
addr16
ss
aas
filds
leave
jge
mov
or
and
and
adc
add
adc
lods
xor
sub
add
popf
shl
clc
daa
outsb
inc
jle
shl
lea
mov
dec
loop
pop
fsubrp
jge
cli
cmc
ja
daa
loop
rcr
sub
js
popf
in
lcall
mov
or
rolb
xor
out
cld
sbb
mov
mov
test
sbb
out
mov
xchg
inc
ficomps
add
mov
or
sbb
cmc
fldt
cld
cmpl
lret
jno
inc
aaa
sahf
mov
jmp
dec
orb
aas
popf
push
das
fs
jp
cmp
pop
in
sbb
push
adc
cmp
lock
das
cmp
add
cmpsb
add
xorl
loopne
fwait
dec
lret
cld
fdivrs
sti
jl
cmp
pushf
mov
pop
push
push
adc
loopne
aad
mov
inc
mov
sub
and
pusha
rcr
imul
sbb
or
mov
fdiv
jg
imul
lret
shrb
lods
cmp
sbb
cs
jmp
cltd
mov
or
and
adc
adc
jmp
cmc
xchg
push
ljmp
and
movl
xorb
sarl
add
cli
fisubrl
stc
inc
subl
pop
movsb
addb
outsl
jecxz
sbb
call
inc
xor
leave
jle,pn
daa
jbe
jo
mov
or
aad
inc
roll
repnz
jb
hlt
sub
cld
cmp
lods
mov
push
out
fsubs
repnz
fimuls
icebp
pop
movsb
cmpsl
push
mov
xor
inc
ficompl
pop
mov
inc
loope
push
aaa
xor
ret
shll
fdivr
pusha
fistpll
or
lcall
push
cmp
movsb
insb
popa
inc
fistl
xor
nopl
dec
dec
mov
insl
rcrb
sbb
xor
or
mov
cmp
sub
mov
out
cmpsl
jnp
roll
pop
sub
jae
cmp
sbb
call
daa
leave
stos
into
std
lahf
mov
add
nop
mov
cmp
jae
cmp
and
sub
ret
jo
mov
mov
rcll
mov
imul
ret
inc
insl
push
push
cwtl
lock
and
mov
int3
in
sub
enter
out
push
push
in
sbb
jecxz
mov
jmp
dec
inc
jg
scas
and
fs
push
ret
addb
pop
loop
jns
iret
mov
jmp
push
lret
push
imul
xchg
mov
and
adc
out
pop
nop
ret
mov
sbbl
addr16
sub
jecxz
leave
lret
xchg
mov
insb
jae
sbb
mov
pop
loope
add
cmc
jecxz
cli
fisubrs
jbe
sbb
mov
cmp
xchg
dec
mov
movsl
sbb
push
xchg
sub
xlat
push
nop
scas
xadd
aaa
rolb
fcmovnb
lret
jle
popf
scas
pop
fwait
push
pop
dec
xchg
sbb
mov
sub
mov
inc
inc
mov
jns
inc
lcall
insl
lahf
pop
idivb
test
xlat
into
push
test
cmp
es
out
cmp
cmpsl
inc
xor
out
insb
xchg
sub
pop
test
mov
mov
mov
mov
stos
pop
das
lcall
mov
not
add
adc
mov
jecxz
jne
jle
cmp
add
rorl
jg
pop
fs
pushf
outsb
xlat
add
call
dec
notb
jo
xlat
test
add
push
sahf
test
add
cltd
jno
mov
lcall
or
call
push
fisttpl
jbe
into
inc
lcall
cs
push
adc
inc
and
and
add
xchg
xchg
jne
mov
dec
mov
aam
popa
cmpsl
cli
push
lds
or
insb
mov
and
loope
out
sbb
cltd
mov
popf
clc
xchg
mov
lcall
or
inc
push
xor
xchg
sti
subl
or
loop
vpmacsdqh
mov
movsl
mov
and
sub
shrb
ret
lahf
es
sahf
jb
test
pop
mov
bound
adc
sbb
cmc
xor
jns
xchg
and
mov
jmp
mov
mov
das
mov
clc
or
stc
jne
and
dec
adc
in
les
mulb
jp
pushf
jno
push
mov
xchg
jb
mov
xor
hlt
pop
fsin
mov
lods
add
popf
add
jae
in
ret
arpl
inc
sub
or
pop
jl
mov
adc
fstp
or
cmpsb
negl
ror
or
push
push
notl
int
es
rorb
scas
movsl
add
sbb
jns
sbb
push
nop
jo
inc
aas
leave
mov
xchg
inc
test
pop
rep
shll
filds
jbe
daa
sub
leave
outsl
and
es
sahf
outsb
xchg
nop
jmp
sub
sub
xchg
je
mov
fdivrl
sbb
pop
shr
push
mov
scas
scas
scas
enter
inc
push
mov
fldl
pop
outsl
mov
mov
sbb
sub
sbbl
mov
cltd
les
arpl
mov
test
lret
cli
xchg
xor
cs
fisubrs
pop
lret
sti
aas
xchg
or
fistps
add
addl
pushf
mov
js,pn
dec
pop
cmp
stos
popf
dec
leave
iret
mov
push
jle
cmp
icebp
into
jg
and
icebp
iret
mov
enter
jo
xor
dec
fbstp
jnp
adc
adc
sub
xor
inc
sbb
push
xor
jns
pop
ljmp
xor
jne
xchg
pop
cmp
fcompl
mov
push
dec
insl
xchg
inc
add
pop
cmpsb
push
sbb
add
mov
lea
pushf
popf
add
xor
ret
pusha
add
add
rcrl
pop
outsb
inc
pushf
jmp
cmp
ja
dec
push
rorb
mov
pop
call
sub
sub
push
sbb
cmp
js
jns
or
sarb
loopne
xchg
call
jno
xlat
push
lock
mov
inc
pop
loop
mov
mov
mov
or
shll
dec
mov
xorl
sub
cpuid
lahf
mov
out
aaa
mov
popa
roll
addr16
sub
imul
stos
paddsb
sbb
es
add
cmp
pushf
inc
mov
inc
cmpsb
push
mov
pop
aad
mov
dec
test
push
inc
mov
mov
sub
xchg
jle
out
insb
pop
dec
inc
adc
mov
bound
or
imul
inc
aam
cmpsb
jb
cmp
cs
lcall
pop
mov
mov
jmp
fsts
adc
sub
insl
jb
cs
dec
loopne
imul
pop
push
pop
or
sbb
push
push
gs
arpl
sub
lcall
jnp
mov
cmp
insb
push
sbb
or
aam
dec
push
mov
call
cmpsb
or
sbb
adc
jns
ljmp
ficoml
idiv
gs
cmp
sub
cmp
xchg
or
fwait
ret
xchg
mov
ds
aaa
flds
jmp
cmp
cmp
es
imul
mov
add
cmp
iret
sbb
iret
mov
pop
cmpsl
push
pushf
push
clc
mov
sbb
ds
jp
dec
enter
lea
call
or
adc
mov
jae
mov
sub
movsl
xor
sbb
imul
mov
sub
cmp
fprem1
xor
into
xchg
arpl
cmp
pop
sbb
xchg
or
push
je
scas
das
push
push
mov
adc
xchg
add
hlt
sbb
loope
call
or
cld
shll
mov
xchg
mov
pushf
rcrl
xchg
push
sarl
pop
scas
and
orl
cmc
pusha
xchg
addl
ljmp
and
sbb
sbb
ret
jl
and
xchg
push
daa
popf
popa
and
lcall
repnz
mov
sti
xor
dec
inc
sahf
mov
sub
fstl
shll
fstp
jle
xchg
xor
sub
add
sub
jle
sahf
movsl
sub
cwtl
or
in
lcall
cs
xchg
sub
pop
jo
hlt
inc
repz
dec
lods
pop
jbe
lret
shll
int3
imul
icebp
mov
dec
inc
js
and
adc
jbe
mov
mov
fdivrs
cmp
divl
sbb
pop
jo
iret
ficomps
xchg
fadds
ret
adc
cltd
sbb
insl
les
mov
lret
mov
push
test
jecxz
testb
jp
pop
push
mov
jle
iret
mov
sbb
push
outsb
test
fidivrs
les
mov
adc
push
xchg
push
int
sbb
mov
test
jle
pushf
mov
in
cmp
inc
out
les
cmpsb
add
jmp
mov
mov
sub
xor
ret
pop
dec
inc
aam
mov
sbb
cld
push
adc
ret
sti
lods
ret
xchg
jae
or
jp
push
jg
dec
dec
sti
test
outsl
inc
arpl
sbb
das
ljmp
int3
mov
pop
pop
ror
mov
mov
leave
or
stos
lret
fstl
mov
push
popf
mov
call
lea
xchg
inc
or
xchg
popf
sbb
mov
mov
imul
call
imul
pop
sub
aas
pop
pop
push
jnp
add
into
hlt
dec
sahf
inc
pop
dec
push
or
dec
push
mull
test
rcll
cwtl
pop
inc
clc
cmpsl
ja
jle
lock
sbb
fwait
adc
xlat
adc
divb
push
dec
xchg
jecxz
jno
dec
enter
into
cmc
xchg
or
cmp
imul
cmc
js
xchg
stc
popa
cmp
movsl
and
dec
out
mov
data16
jae
mov
mov
adc
in
fdivl
inc
mov
ret
ljmp
xlat
ljmp
loopne
lret
mov
mov
into
sbb
push
push
or
jge
stos
push
pop
pop
sbb
pop
or
sub
inc
call
pushw
pop
data16
aad
leave
mov
mov
push
mov
dec
mov
dec
xor
adc
repnz
fsts
icebp
mov
jnp
movsl
cmp
aam
mov
inc
sub
inc
fnstsw
inc
adc
enter
dec
in
lods
enter
xchg
test
pandn
jg
cs
cmp
out
icebp
testb
out
ds
iret
mov
lock
stos
push
ss
push
fistpll
fadd
nop
dec
les
fcompl
pop
pusha
pusha
call
xchg
loop
sub
test
in
dec
and
addr16
out
fs
test
lahf
jae
stc
cmp
push
xor
data16
sub
inc
out
insl
insl
pop
enter
pusha
jo
push
stos
pop
icebp
jge
sti
pop
push
rolb
mov
or
ss
mov
mov
dec
lods
jnp
dec
cmc
popf
mov
inc
pop
cwtl
and
inc
mov
push
jb
leave
adc
test
mov
sub
jae
sub
stos
stc
cmp
adc
cmp
dec
test
popf
dec
pop
dec
ret
mov
jns
negb
mov
cmp
xchg
lret
sbb
popa
aas
xor
add
adc
fidivl
aaa
jle
or
and
imul
loop
jge
inc
addr16
repnz
jb
outsl
inc
adc
push
mov
push
mov
fsubl
jb
inc
repnz
pop
and
xor
repz
push
int
push
fwait
add
pshufw
cmpsb
mov
push
ljmp
sub
jno
repnz
mov
psrad
je
repz
cmp
out
cmp
cmp
inc
xor
mov
fldenv
jo
in
push
nop
lds
sub
cmp
push
lret
enter
jae
pop
xor
jecxz
bound
adcl
loop
scas
int
dec
dec
inc
idiv
in
sarb
loope
pop
add
jecxz
lock
jmp
lds
stos
mov
sbb
mov
or
out
aaa
aam
inc
daa
xchg
sbb
scas
dec
into
mov
push
mov
add
ds
scas
mov
mov
inc
jne
push
and
xor
push
push
in
enter
test
es
lock
and
sbb
out
dec
xor
fld1
mov
or
je
inc
je
cvtdq2ps
sahf
das
std
jecxz
push
xchg
gs
or
cmp
inc
xchg
insb
shl
xchg
lcall
test
ss
cli
inc
je
add
adc
and
sarl
mov
dec
pop
rolb
lock
test
hlt
mov
sub
lock
push
adc
mov
jle
cmp
out
roll
into
jo
mov
sbb
mov
loopne
xlat
cmp
adc
inc
cmp
pushf
aas
testb
sbbb
lock
in
imul
test
push
pop
or
push
lea
jl,pt
jecxz
cli
fdivrs
cmp
inc
enter
orb
inc
imul
jle
pop
push
pop
fidivs
repnz
lea
xchg
out
sbb
int
dec
cmp
in
mov
test
insb
adc
popf
sbb
dec
test
call
leave
hlt
adc
cmpsb
repz
lds
mov
jns
push
mov
push
mov
frstor
stc
into
lds
xchg
mov
js
ja
sub
divb
rolb
lahf
or
xchg
bound
clc
inc
add
dec
mov
xor
jnp
mov
adc
test
pushf
xorl
cmp
pop
nop
sbb
imul
lods
loope
idivb
sbb
push
jl
adc
lock
sahf
iret
jle
into
dec
jb
popf
iret
mov
and
mov
adc
xorl
mov
mov
arpl
sub
leave
mov
test
pop
aad
mov
mov
sbb
stc
in
fsubl
mov
xchg
jmp
scas
xchg
std
subl
ficoml
pop
dec
dec
movsb
jo
pop
rclb
xchg
inc
fsubs
and
mov
mov
sbbb
fidivrs
mov
pop
inc
xlat
push
fimull
xchg
xor
push
mov
test
push
push
out
mov
jle
lea
jmp
cmp
mov
xchg
fs
mov
pavgw
xorb
rcl
add
stos
dec
loope
call
std
out
xor
imul
push
psubb
jb
rdmsr
inc
mov
xchg
cmp
icebp
mov
push
mov
fsubrs
sbb
jbe
jg
jg
cltd
push
decb
nop
lcall
xchg
mov
adc
imul
pop
fs
lock
in
stc
pop
enter
arpl
cltd
pop
mov
push
scas
push
fwait
pushf
or
ret
mov
mov
add
ret
into
mov
and
push
cmp
test
mov
adc
sub
pop
sub
lods
int3
push
mov
mov
lahf
repz
push
mov
push
xor
xor
xor
sub
push
movsb
bound
outsb
inc
mov
outsl
mov
xchg
sbb
or
xchg
sub
sub
js
sbb
test
fs
loope
fists
aaa
in
xchg
arpl
dec
and
push
cld
jbe
test
test
jg
fprem
pop
ds
fstl
and
icebp
cmp
mov
in
and
cmp
mov
imul
pop
push
icebp
ret
fdiv
pushf
mov
xchg
or
push
mov
or
movsl
mov
xor
add
and
xchg
lods
loope
in
and
xchg
stos
jo
jmp
mov
xor
sbb
and
int
lds
daa
lret
mov
xchg
xor
stc
daa
daa
dec
iret
shl
lock
repnz
mov
clc
insl
mov
and
mov
adc
lret
out
sbb
xor
xor
mov
mov
jb
adc
adc
daa
adc
ljmp
stc
mov
nop
or
jl
faddl
leave
je
in
lods
out
jne
push
mov
push
xchg
cmp
or
shrb
fisttpl
insl
out
lret
dec
mov
add
cmp
clc
push
and
xchg
out
xchg
int3
mov
push
push
dec
lcall
xchg
xor
xchg
dec
push
dec
xor
xchg
xchg
dec
cmp
test
jle
cwtl
push
das
jb
cmc
and
push
jb
clc
in
adc
jg
and
imul
lea
repz
test
xlat
shll
adcb
xchg
jae
lahf
inc
pusha
icebp
imul
jb
push
push
sub
mov
stos
inc
out
xor
sub
sbb
mov
pop
push
jg
pop
ficomps
add
mov
dec
lock
negl
test
outsl
inc
inc
xchg
xchg
push
mov
sbb
ljmp
cmp
xor
pushf
add
pushf
inc
xchg
adc
pop
and
xchg
ljmp
xor
icebp
sub
sbb
stos
jo
and
add
addr16
rorb
push
xchg
jle
sub
and
sub
mov
mov
inc
or
inc
push
fmuls
ret
jbe
daa
sub
jo
pop
movsb
mov
mov
lods
cmc
xor
sub
js
fs
dec
inc
sbb
cmp
out
mov
adc
fwait
cmp
ljmp
pop
mov
xorl
push
push
call
outsb
xor
out
stos
jmp
jnp
fwait
cmpsb
xchg
or
sahf
push
push
sbb
or
lea
jo
push
je
push
push
sbb
mov
dec
int
movsl
aaa
aas
lds
call
xor
orb
jae
cmp
js
or
mov
mov
inc
inc
pop
jb
pop
sub
xchg
fbld
sbb
test
ja
xchg
sti
scas
lcall
mov
jmp
jno
mov
xor
sub
jae
movsl
xchg
pop
and
adc
dec
mov
loopne
add
inc
mov
test
cmp
dec
call
pop
mov
mov
adc
xor
cmp
add
popa
mov
add
and
inc
fistl
arpl
repz
adc
dec
sbb
push
ja
shrl
data16
leave
hlt
cmp
enter
stc
pushf
pushf
mov
push
jle
mov
xor
addr16
push
cltd
aad
jns
fwait
popa
or
daa
popa
in
sbb
fistps
mov
jae
or
cmpsl
mov
inc
jb
jne
inc
cmc
pop
sub
flds
xor
andb
pop
xor
and
push
movsb
mov
das
cld
mov
test
push
push
sarl
jl
ja
fisttpl
je
nop
cmp
xor
adc
stos
sub
in
daa
test
inc
gs
dec
mov
sarl
imul
push
jo
sbb
dec
shr
inc
sub
ds
aam
pop
xchg
sbb
out
xchg
pop
mov
outsl
xor
mov
into
rcr
ftst
jmp
inc
pop
jmp
push
sarb
xor
lret
inc
adc
in
add
xchg
mov
cld
adcb
or
inc
or
test
dec
orl
and
nop
sahf
nop
cmpsb
test
in
test
mov
fisubrs
jns
jg
lods
lods
ja
lds
dec
fsubrl
std
lods
cmp
add
out
decl
xchg
loopne
inc
adc
inc
fwait
jb
sbb
insb
mov
mov
pusha
jbe
jbe
shr
cmpsl
gs
dec
jns
outsl
inc
loope
and
pop
in
jge
xor
lods
cmpxchg
mov
call
pop
cmp
xor
stos
out
sub
mov
sbb
jle
addr16
ss
mov
dec
sub
mov
shlb
arpl
adc
dec
movsb
jl
mov
stc
xchg
fisubrs
mov
icebp
lock
aas
mov
rcl
dec
pusha
adc
jge
sar
jbe
mov
inc
add
mov
jg
cli
movsb
pusha
sbb
xor
fsubrs
mov
xchg
pop
mov
sti
iret
push
rorb
xchg
sub
js
mov
xor
subb
jp
stos
sti
xor
mov
insl
mov
pop
and
xor
mov
out
movsb
adc
popf
cmp
or
js
stos
push
scas
repnz
std
shl
xor
call
lahf
sbb
and
add
mov
xor
inc
xor
push
out
cwtl
dec
push
ljmp
repz
sbb
add
mov
jnp
adc
add
sub
shrb
div
adc
in
cmp
fcomi
call
sub
push
xchg
inc
jnp
les
subl
pop
push
inc
sub
push
into
fnstenv
xchg
jg
ljmp
adc
int
jne
xor
aas
pop
jno
lahf
sbb
or
insb
inc
icebp
ficoms
or
sti
shl
mov
pop
pop
cs
inc
arpl
add
mov
xchg
nop
es
sub
add
adc
jno
clc
dec
ljmp
dec
push
popl
pop
loop
cld
dec
enter
lea
sbb
cwtl
xchg
insb
jg
loopne
push
pop
xchg
cltd
mov
fidivs
fstpt
cld
repz
jns
imul
mov
leave
jl
leave
cli
pushf
test
insl
or
cwtl
shll
mov
mov
clc
cmp
aaa
adc
repnz
out
xlat
hlt
fcoml
sub
iret
sahf
idiv
push
sub
xchg
nop
movsb
stos
and
insl
movsb
adc
xchg
insl
fidivs
aaa
iret
popf
test
and
pop
cli
scas
jne
adc
or
push
mov
sbb
xor
adc
pop
cltd
ret
xchg
adc
mov
arpl
xchg
mov
in
xor
les
xor
adc
fs
shrl
xchg
sub
push
xor
shr
mov
je
into
gs
or
fldl
mov
xchg
mov
or
lock
inc
mov
stc
cmp
call
incb
scas
mov
pop
mov
xchg
shr
adc
adc
es
fistpll
push
addr16
sbb
sub
cmp
jbe
inc
add
jp
jbe
sti
jae
mov
mov
lea
pop
lahf
mov
xchg
or
ret
cmp
xchg
cmp
sub
test
xchg
cmp
les
cmp
aaa
fwait
cs
xchg
cmp
dec
ljmp
mov
fsubl
ja
inc
dec
sahf
ja
inc
jnp
dec
mov
mov
add
mov
push
mov
or
icebp
data16
sub
xor
imul
in
pop
lods
sub
test
push
sub
ss
push
lds
sub
sahf
rol
cmpsl
push
add
pcmpeqd
mov
and
xlat
aas
es
or
popa
popf
stc
mov
sarl
adc
adc
xor
xchg
jecxz
adc
sub
jg
cwtl
cmp
ja
enter
jmp
pop
sarl
or
fmuls
gs
aaa
and
xchg
loope
xchg
add
add
push
outsb
mov
mov
mov
xchg
popf
adc
sub
sbb
xor
fisubs
test
or
les
test
cmpsb
mov
sti
sti
lahf
mov
je
sub
addr16
jo
aaa
pop
ja
xchg
cmp
clc
fdivrs
and
je
jmp
push
cs
leave
sub
add
xchg
inc
jecxz
add
test
push
cwtl
pop
ja
jmp
idivb
xchg
ret
lahf
test
lret
test
call
lods
fnstcw
pushf
ss
xchg
js
or
outsl
cmova
call
out
jmp
inc
mov
pop
cmc
outsb
push
sub
nop
sub
cmc
or
cmp
mov
fcoml
test
push
xchg
sub
push
jge
out
xor
mov
or
ret
cmp
cmpsb
test
cld
and
push
mov
fdivl
inc
loope,pt
lret
jno
sub
mov
xor
stc
bound
fsubr
jnp
int3
sbb
mov
xorb
xchg
out
lcall
xor
out
mov
rcll
sub
cmp
fisubs
sahf
outsl
shl
add
pushf
push
xchg
mov
shlb
aam
aad
pop
mov
sub
or
push
push
outsl
imulb
shll
das
pushf
call
scas
inc
mov
jmp
movl
jno
popa
push
xchg
test
shlb
out
sbb
mov
in
pop
ret
cmp
push
sbb
scas
mov
mov
pop
aam
dec
jae
test
dec
iret
call
push
mov
mov
push
xor
lcall
and
mov
imul
call
adc
xor
dec
add
jo
and
insb
enter
cmc
scas
mov
stos
out
ljmp
fcoms
adc
lods
shrl
sub
sahf
sub
ja
jle
adc
jo
mov
out
xchg
fistpll
aaa
flds
lahf
mov
lret
or
outsb
jno
xor
mov
xchg
add
or
pop
cmpsl
and
mov
dec
sbb
xor
js
cmc
pop
sbb
clc
ljmp
cmpsl
scas
mov
ljmp
xchg
push
stos
sub
bound
push
lcall
mov
cmpsb
xchg
loope
mov
add
sub
lahf
repz
testl
mov
sub
pushf
ret
sti
gs
or
add
insl
jp
sbb
inc
lret
cs
push
addr16
mov
pop
cmp
dec
sub
mov
mov
scas
fistps
fcoml
sub
mov
cltd
lea
cltd
insl
notb
sbb
repnz
adc
dec
lret
jo
or
or
lods
ss
cli
fdivl
fcoms
xchg
cmpsb
jg
inc
lea
dec
pusha
cltd
xchg
dec
push
mov
cltd
out
pop
lds
push
gs
inc
icebp
sub
mov
sub
push
adc
lcall
scas
sbb
ljmp
mov
mov
pop
nop
pop
imul
push
and
fwait
mov
adc
mov
add
ja
imul
adc
dec
and
dec
out
jb
popf
push
cmp
and
clc
pop
out
sub
lds
mov
pop
fnstenv
scas
jno
loop
pop
push
imul
xchg
clc
cmp
fstpt
inc
xor
pop
sub
mov
lret
rolb
or
and
mov
mov
inc
adc
pop
push
and
sub
mov
rcrl
jo
or
xor
lock
xchg
lret
out
and
adc
sub
adc
and
es
popf
fwait
add
xchg
rcrl
jg
xchg
and
mov
mov
mov
aaa
push
mov
int3
jnp
outsl
push
bound
insl
imul
dec
data16
jo
xor
outsl
and
jae
pushf
lods
xchg
in
and
ds
lret
xchg
jae
mov
dec
mov
addb
inc
dec
lds
jno
in
cmp
or
inc
movsl
mov
out
dec
lds
stc
enter
rol
in
add
insl
out
fcmovb
inc
clc
lds
faddl
stos
cmpsl
out
cld
mov
movsb
outsl
outsl
inc
ret
aaa
and
andb
frstor
sbb
dec
outsb
lret
test
iret
cmpsl
fdivs
ss
mov
movsl
sbb
hlt
adc
lret
mov
inc
mov
jne
sbb
mov
or
mov
mov
mov
mov
pop
adc
in
out
jo
add
dec
ss
or
inc
or
shrb
xlat
sub
cwtl
cld
pusha
sub
test
adc
es
iret
out
sbb
inc
mov
mov
and
and
sbb
mov
in
xchg
mov
mov
xor
or
lcall
out
les
or
subl
or
mov
cmp
cwtl
jmp
dec
mov
xor
sub
mov
xor
popf
lock
jle
cs
pop
dec
dec
pusha
mov
adc
push
or
mov
movl
pop
cmc
mov
adc
aaa
dec
cltd
in
sbb
push
inc
fs
push
mov
cmp
int
imul
cmp
mov
cmc
call
dec
and
lcall
inc
pop
es
xchg
inc
mov
sbb
push
insb
iret
in
push
xor
outsb
outsb
push
scas
xchg
jno
mov
dec
pop
pop
ret
daa
push
insl
xchg
incb
test
cmc
in
in
pop
stc
push
adc
decb
dec
movb
push
int
lahf
sbb
or
push
sub
jo
adcl
lods
into
out
mov
xchg
push
and
cmp
out
std
ja
loope
rcl
add
lock
mov
jb
pop
jae
pop
popf
sbb
jb
inc
push
pop
dec
push
and
push
clc
add
das
shl
or
xor
aad
popf
movsl
ficoms
in
ret
pop
cmp
mov
mov
jl,pn
mov
leave
or
fcoml
adc
mov
into
mov
addr16
fwait
sub
cmp
loope
sub
mov
push
aas
out
mov
mov
test
outsl
lea
cmp
in
dec
lret
xor
aad
jne
das
test
mov
jp
xchg
imul
inc
adc
je
fisubrl
sub
shrb
int
daa
xchg
movsl
iret
neg
dec
loope
adc
ljmp
enter
mov
push
jnp
mov
jno
inc
lcall
les
add
sub
mov
jae
add
sub
jmp
pop
fldl
call
jl
mov
je
out
mov
pop
sub
das
dec
aam
mov
cmpsl
adc
jl
int3
out
ss
cmpsl
xchg
ficomps
cmp
xchg
dec
inc
cmp
xchg
shll
fdiv
aaa
stos
push
lods
lock
add
inc
arpl
lods
jae
stc
mov
hlt
lods
scas
movsl
fucomip
in
pop
or
xor
xor
ds
jne
popf
mov
es
aam
pushf
jae,pn
jns
mov
repz
cmp
xchg
pop
push
mov
xchg
loop
sbbl
data16
out
adc
adc
lcall
mov
jo
mov
rcll
fstl
sar
test
add
jnp
mov
or
cmpsl
pop
mov
jae
insb
cltd
cwtl
fdivp
in
xchg
popf
push
sahf
fmull
dec
and
scas
mov
aaa
into
push
adc
push
and
repz
xchg
rorl
in
inc
lahf
loopne
mov
or
pushf
lods
or
mov
cmp
add
jae
mov
dec
xchg
add
call
pop
ds
push
aad
faddl
lods
xchg
mov
xor
cmp
pop
sbb
sub
jge
ret
sub
jle
lret
cmc
sbb
pop
push
cmp
mov
sbb
negb
lock
into
dec
aad
imul
lods
int
add
fistps
sub
jl
imul
mov
jl
lea
loope
or
insb
sub
adc
icebp
dec
adc
pop
mov
sub
adc
clc
dec
lock
push
lods
out
testb
sbb
push
push
stc
lods
mov
imull
sub
push
push
mov
inc
je
mov
mov
lcall
sti
mov
ret
jbe
push
sbb
iret
in
xchg
lahf
test
cld
mov
sbb
lret
int
mov
add
jge
imul
pop
xor
xchg
adc
insl
mov
out
mov
iret
out
lods
sub
loope
push
add
jo
filds
sahf
pop
sti
jne
iret
jle
xchg
sbb
outsb
push
pop
sub
sbb
sub
cmpsb
jle
std
addr16
jge
sbb
adc
movsl
shlb
mov
in
jno
insb
dec
out
push
push
jnp
out
nop
int
push
xchg
cwtl
movsb
or
idivl
sbb
cli
sahf
sarb
lock
sbb
dec
test
lea
mov
lds
rorb
adc
jnp
je
or
mov
in
pop
or
cmp
jno
std
icebp
jl
mov
xchg
test
push
cmp
test
xchg
jns
xchg
imul
mull
movsb
je
adc
lds
aam
push
pushf
lds
mov
out
stos
mov
mov
mov
mov
sbb
cmp
inc
jno
cld
xchg
pslld
jl
shlb
stos
sbb
cmp
xor
ds
ss
enter
mov
xchg
xchg
out
pop
iret
js
std
fidivrs
aad
imul
repnz
inc
imul
popf
dec
fdivrs
pop
jecxz
push
int
fdivrl
mov
mov
movsb
dec
inc
xor
cltd
and
mov
adc
mov
cmp
push
ret
mov
and
lock
cmp
xor
dec
arpl
jle
jmp
pop
movb
pop
add
rolb
push
lods
and
cmp
ror
push
loopne
jno
push
stos
cmp
movb
mov
mov
repz
sahf
sub
mov
pop
xchg
lahf
sbb
jle
mov
and
push
in
addl
fcmovnb
push
outsl
addr16
sbb
in
jnp
aad
pop
pop
and
cmp
popf
imul
std
not
das
pop
push
ret
dec
in
das
adc
clc
pop
js
jg
scas
add
cltd
sub
adc
into
push
frstor
inc
push
pop
orl
add
insl
sbb
adc
push
nop
or
sbb
lret
adc
es
pop
and
xchg
fcos
sub
into
data16
out
mov
jbe
or
xchg
test
pop
mov
xchg
mov
jl
pop
mov
sub
rcll
mov
xchg
cmp
xchg
pop
test
sbbb
mov
mov
xchg
mov
mov
iret
sarl
shll
jg
fs
push
roll
ret
sub
push
pop
sub
adc
movsb
push
xor
test
int
or
dec
jbe
mov
inc
pop
out
adc
and
decl
adc
cli
mov
mov
psrad
xchg
fdivs
push
push
jecxz
data16
mov
leave
and
dec
mov
andl
push
and
mov
imul
lret
iret
mov
mov
test
pop
or
pop
xor
hlt
dec
mov
mov
jae
movsl
and
cmp
les
sbb
push
push
in
mov
pusha
stos
stc
js
cmpsb
pop
cld
lds
fdivrs
scas
test
add
incb
lcall
je
int3
dec
mov
subl
and
mov
xchg
push
add
stc
jnp
ja
pop
dec
mulb
mov
les
ljmp
dec
xor
and
jb
mov
pop
pop
insb
fidivs
movsb
xlat
pop
mov
adc
push
sbb
lahf
push
aaa
rcrl
adc
push
mov
lods
jmp
fcmovbe
test
nop
mov
dec
cmp
add
or
cmp
scas
mov
mov
fstl
jg
stos
xchg
psraw
and
sbb
or
or
and
cs
adc
je
in
and
pop
lds
or
js
push
xor
in
fsubp
loop
dec
adc
adc
dec
inc
sbb
cmpl
cmp
mov
xor
mov
sbb
in
data16
jle
cmp
push
adc
in
mov
xor
nop
cli
aaa
cli
nop
pop
enter
push
pusha
pop
imul
lcall
hlt
pop
jecxz
repz
dec
sbb
inc
sbb
rcrb
and
push
shr
push
bound
xchg
aas
mov
inc
repz
std
ret
sbb
xchg
in
lods
iret
insl
add
mov
pushf
stos
xor
or
outsl
mov
jg
push
sahf
outsb
jno
push
das
pop
outsb
das
pop
add
xor
mov
or
push
hlt
add
sbb
fs
repnz
cmp
pop
and
jle
mov
or
leave
add
push
scas
aad
xor
xchg
mov
sub
jnp
repz
mov
jb
push
je
jg
stos
insl
lock
fwait
xor
inc
pop
rcr
pushf
cmp
and
jnp
lret
add
sub
ret
cld
lahf
add
mov
imul
push
sbb
sbb
gs
pop
negl
push
mov
inc
dec
out
fnsave
inc
xor
bound
cmc
cwtl
insb
repnz
dec
add
mov
jge
xchg
rcll
or
jne
cwtl
xor
fsts
sbb
sbb
je
add
lds
sbb
sarb
mov
mov
dec
pushl
pop
int
and
pop
jp
mov
push
pop
fsubrl
loop
icebp
outsl
ret
aaa
cmpsl
in
xchg
jb
sti
pop
push
push
jmp
mov
ljmp
gs
pop
ljmp
sbbb
clc
jg
sub
sub
insl
stos
test
addr16
push
adc
mov
shll
add
cmp
lret
add
data16
adc
push
mov
addr16
add
addr16
dec
sub
cli
pop
fcmovnb
dec
movsl
popf
inc
add
xlat
ss
cmpsl
push
xlat
lods
lret
sbb
push
lahf
inc
popa
mov
insb
sarb
dec
neg
fcomip
adc
out
ret
adc
add
test
es
loope
aaa
arpl
inc
pop
ljmp
testb
and
xchg
jns
aad
mov
pop
aad
insb
insl
out
loopne
xor
pop
adc
sub
int
iret
in
lret
push
or
pcmpeqw
outsb
inc
sbb
fucomp
call
mov
es
pop
les
in
lods
movsb
in
mov
scas
pop
add
jo
pop
add
sbb
xorb
push
pusha
cmpsl
lods
call
dec
push
js
scas
cli
fildl
cltd
nop
icebp
xlat
aas
pop
aad
pop
test
pusha
mov
mov
sub
jle
stc
cmp
icebp
adc
sub
test
stos
out
icebp
leave
cwtl
mov
insb
push
mov
cmp
andb
mov
mov
lds
pop
repz
lahf
mov
cli
pop
mov
xchg
sbb
daa
aad
xchg
pop
int
out
lret
xchg
add
or
loop
cmp
adc
mov
outsl
ds
test
ret
cmpb
pop
mov
scas
call
scas
cmpsl
cmp
nop
imulb
dec
sub
inc
jp
adc
stos
cli
cpuid
out
ret
js
add
addl
add
add
mov
cmpsl
sti
fnsave
and
mov
jmp
sub
fsubs
arpl
push
inc
sbb
addr16
mov
mov
insl
cmp
pop
cwtl
push
arpl
mov
jne
dec
push
xorb
es
mov
repnz
dec
and
loop
adcb
adc
dec
out
sbb
outsl
decb
xlat
mov
in
jo
jmp
inc
stos
dec
mov
std
and
repnz
imul
mov
pop
xchg
mov
mov
xlat
stos
sbb
jg
add
mov
xor
push
sbb
leave
or
por
cmp
gs
int3
push
sbb
cmp
pushf
fsubs
mov
rcll
sti
loope
or
es
cmp
sbb
das
mov
out
push
outsl
fdivrp
je
aam
js
loopne
jle
adc
mov
mov
or
xchg
sub
inc
jo
xor
pop
js
mov
arpl
mov
int
jnp
aas
push
sarl
ret
and
sbb
jp
or
xor
jno
lods
cs
cmp
adc
scas
adc
pop
cwtl
lahf
dec
mov
xchg
popa
add
push
inc
jl
pop
cmc
and
xchg
in
mov
adc
shll
mov
sar
dec
mov
mov
getsec
pop
lahf
popa
adc
jp
inc
leave
sub
xor
xor
jnp
pop
jbe
dec
fistl
cmc
mov
gs
mov
aas
lods
jnp
rclb
cmp
scas
xchg
into
xchg
cli
out
inc
xor
sub
ret
sbb
adc
stc
hlt
mov
lahf
dec
xchg
mov
xchg
call
sahf
jo
jae
or
xchg
out
lahf
pop
pop
enter
out
out
sbb
pop
iret
mov
enter
lret
in
xor
xor
adc
mov
scas
cmpsb
lahf
adc
and
xchg
jb
test
and
test
icebp
out
pop
cmp
daa
cmp
dec
pusha
jb
jecxz
ljmp
mov
bound
xchg
stc
and
addr16
popf
mov
add
pop
test
cwtl
loopne
jb
xchg
or
adc
dec
mov
inc
les
es
inc
xchg
cmp
pop
dec
xor
lods
and
mov
call
aad
xchg
push
bound
adc
imul
jle
insb
sbb
push
sub
inc
aas
push
or
pop
dec
inc
or
ffreep
in
outsb
popf
cmp
xor
jo
cwtl
repz
sub
jnp
orl
mov
jnp
int3
lcall
or
add
lret
mov
jno
jae
mov
fcoms
cmovo
addl
arpl
rorl
mov
lahf
mov
rclb
dec
repz
mov
stc
mov
sbb
mov
or
mov
add
fnstcw
cs
push
xor
mov
inc
movsb
adc
xchg
sub
inc
orl
pushf
sbb
lods
leave
inc
inc
stos
jecxz
push
adc
pop
push
fwait
pop
xchg
std
cmp
aaa
cld
add
inc
mov
cwtl
adc
mov
or
adc
sub
mov
xor
jns
pop
fdivs
jle
push
ds
hlt
out
lcall
inc
mov
fiaddl
jg
ljmp
data16
jo
sub
scas
mov
std
xlat
jns
xlat
popf
clc
add
and
aas
lret
mov
push
cmp
dec
xor
xor
arpl
push
int3
xor
jg
lret
cmp
or
inc
pop
hlt
pop
mov
dec
das
cmc
dec
test
ss
push
pop
out
call
add
mov
mov
add
add
outsb
je
jge
jnp
adc
xor
enter
cmp
xchg
pop
std
fcoml
insb
test
push
pop
mov
orb
xchg
xchg
ret
scas
mov
xchg
inc
ds
inc
data16
lahf
rcr
das
sbb
lock
mov
hlt
dec
sub
sub
jle
xor
ret
jp
mov
cmp
jecxz
outsl
in
jecxz
in
fnstcw
mov
scas
cmpsb
xchg
hlt
test
inc
addr16
xchg
inc
jae
push
mul
push
dec
push
or
dec
add
push
aas
ss
cmp
cmp
test
repnz
cmp
jmp
mov
addr16
jae
imul
push
dec
in
lock
pop
mov
jecxz
call
js
pop
lock
dec
fcoml
les
pop
sbb
adc
add
pusha
stos
shll
sar
mov
in
xlat
or
mov
popf
je
xor
sbb
loopne
mov
mov
lcall
sbb
mov
mov
haddps
jecxz
lcall
jmp
sub
xchg
xchg
cmp
pop
pop
sbb
sbb
pusha
xchg
les
fisttpll
pop
mov
mov
push
fnsave
mov
cmp
add
mov
mov
mov
scas
and
and
mov
sbb
cmp
sub
aaa
fistpll
mov
cli
adc
stos
pop
mov
negb
fidivrl
aas
and
mov
mov
sub
lahf
mov
rcl
and
dec
sub
inc
mov
pusha
arpl
cmpsb
xlat
aaa
xchg
jp
and
loope
pop
hlt
popa
cmpsb
lcall
add
or
sahf
ret
pushl
rcl
fisubl
ds
mov
mov
dec
sub
fimuls
mov
mov
insb
sub
mov
mov
pop
inc
mov
jmp
and
movsl
sbb
adc
mov
ret
pop
test
jge
mov
imul
sbb
xchg
das
daa
hlt
jmp
mov
xor
rcl
or
adc
pop
add
mov
mov
push
std
jl
fidivrs
mov
stos
pop
pushf
sbb
inc
mov
xchg
jp
in
adc
cmp
cmp
jecxz
cld
jnp
data16
mov
xchg
stos
cmp
aad
cmp
movsl
mov
int
add
jecxz
push
addl
jo
sub
repz
and
push
cmp
add
inc
xchg
cs
popf
imul
clc
cmp
int
ficoms
cmc
pop
push
popa
out
in
mov
xchg
repnz
pop
in
addr16
in
dec
adc
pop
sub
push
pop
aas
pop
das
mov
mov
pusha
sbbb
movsb
mov
sbb
popf
test
shlb
fstp
adc
sbb
fimull
jae
leave
or
test
add
fwait
xchg
jnp
cmp
stc
pop
addr16
pop
mov
jg
fcompl
repz
inc
outsl
pop
mov
add
or
jg
inc
and
xor
je
in
aaa
dec
ja
mov
pusha
mov
imul
hlt
push
cld
dec
pop
mov
push
add
xor
cwtl
sbb
push
push
popa
test
push
aam
lret
mov
pop
mov
int
xor
and
mov
mov
data16
or
add
hlt
xchg
add
push
xor
pop
dec
or
popf
dec
cmp
les
lock
out
sahf
fdivs
sti
lods
imul
in
pusha
jl
call
or
add
jp
jbe
xchg
cmp
or
movsl
idiv
push
xor
out
adc
cmc
or
lea
cld
dec
outsl
push
pop
loopne
fisubrl
xchg
repz
mov
ds
jbe
and
idiv
push
test
push
adc
or
xchg
jmp
lea
xlat
mov
cmp
mov
mov
and
lods
xchg
idiv
hlt
stos
test
sub
cwtl
xor
push
clc
mov
cmp
lods
xlat
cmp
lret
mov
cmp
les
and
lcall
cltd
jl
cmpsl
inc
mov
xchg
mov
fisttpl
xor
sbb
into
test
pcmpgtw
aaa
sub
pop
fstps
xor
movsl
mov
xorl
push
cmp
out
popa
add
adc
jne
sub
aad
out
mov
addr16
dec
dec
repz
test
arpl
mov
push
lret
dec
fadd
stos
dec
pop
hlt
push
jo
mov
lds
cmp
shl
cmp
pushf
pop
jae
mov
mov
les
mov
cld
push
fmull
add
inc
adc
sub
lret
inc
leave
dec
daa
cwtl
xorl
scas
mov
push
add
adc
jb
cltd
sbb
popf
call
lret
add
xchg
rolb
dec
push
shlb
fisttpll
jecxz
mov
adc
testl
xchg
sbb
push
push
xor
jne
in
xchg
mov
in
and
mov
ljmp
xchg
xor
int
pushf
jl
shll
jmp
adc
call
mov
jg
cld
cmc
int
lods
int3
gs
adc
xor
lods
xlat
fistps
mov
adcl
stos
sub
add
mov
insb
mov
ljmp
out
jo
std
sub
hlt
mov
xor
inc
imul
loop
mov
dec
mov
in
movsb
mov
xlat
jg
mov
jecxz
fdivrl
mulb
jb
hlt
int3
lods
xchg
jle
jne
test
pop
js
and
call
push
js
cmc
mov
dec
and
mov
inc
stc
cld
push
jae,pt
add
dec
and
xchg
testb
add
mov
jl
in
rclb
aam
add
lea
lock
pop
xchg
and
mov
xor
inc
xchg
dec
ret
das
imul
aas
loope
or
aam
push
test
cmp
add
push
inc
sarb
bound
xor
jno
out
dec
test
and
je
jo
std
pop
lods
in
je
das
xor
pop
repnz
out
mov
sti
cs
clc
jl
push
jg
push
cmp
mov
xor
pushf
mov
nop
sti
int
repnz
jg
loop
mov
mov
imul
xor
orl
cmpl
and
lods
cmc
mov
push
sub
mov
clc
cmpsl
mov
inc
in
pop
mov
push
or
cltd
jmp
shl
sub
inc
loop
push
nop
inc
in
pop
mov
test
es
push
mov
rcrb
ja
je
lret
orb
xorl
scas
rcrl
xchg
test
enter
fst
xlat
inc
jle
fs
cmp
lods
mov
sub
rorb
cmp
mov
and
enter
mov
pop
jmp
pop
ss
in
mov
hlt
jb
inc
test
inc
ss
test
incb
or
ret
shl
xor
push
or
les
lock
pop
xor
jmp
and
faddl
aas
cld
mov
mov
push
mov
sub
cmp
pop
sbb
pushf
aad
xchg
and
pop
pop
insl
jl
mov
cmc
out
outsl
lahf
xor
inc
xchg
mov
adcl
neg
in
adc
ret
mov
mov
push
pusha
mov
iret
jecxz
mov
shlb
jne
adc
jo
iret
mov
mov
stos
add
mov
jb
popa
je
aad
sbb
rcl
arpl
mov
shll
inc
int
fstpt
jmp
lods
sbbl
out
mov
add
xor
pushf
addr16
xor
inc
adc
push
lds
mov
inc
shlb
cmp
push
xor
push
pushf
sbb
push
test
xchg
xor
rcl
cwtl
pop
pop
mov
loopne
pop
pop
into
stos
insl
jp,pn
stos
cmc
sub
adc
lret
jmp
adc
addr16
aas
js
push
xchg
inc
or
das
jne
add
movsl
xor
in
sub
mov
adc
out
jb
in
xchg
xor
jp
xchg
push
js
adc
fbld
cmc
cltd
stos
pushf
aam
dec
or
and
aaa
or
or
aaa
xchg
idiv
and
lods
push
mov
add
enter
mov
sub
jne
pusha
adcb
mov
jns
fbstp
sbb
push
cmpb
pusha
add
idiv
sub
mov
inc
insl
add
mov
inc
pop
xchg
jo
testb
adc
and
insb
or
add
add
clc
xchg
push
lds
or
dec
outsb
popf
push
fs
into
into
adc
test
jl
pop
pop
mov
jle
popa
rcrl
and
sub
xor
sbb
iret
jmp
xchg
mov
stc
mov
sub
xor
sub
xor
push
pop
clc
lret
das
dec
es
lret
xchg
in
or
xchg
push
mov
ja
andl
rclb
stos
mov
dec
xchg
inc
dec
push
or
mov
xchg
pop
sbb
rol
cmp
or
mov
or
xchg
es
jmp
sub
mov
stc
xor
sahf
popf
imul
in
ret
adc
fdivr
jp
xchg
jp
fdiv
jbe
ret
push
pop
out
mulw
into
rolb
cs
jno
jp
mov
lods
outsl
mov
add
mov
mov
out
mov
shlb
jb
pusha
mov
push
xchg
std
push
lahf
dec
cltd
es
icebp
aaa
push
jo
sub
push
push
or
into
js
xchg
xchg
lahf
sbb
mov
dec
loop
sub
stc
jbe
pushf
inc
stos
lock
adc
lea
cltd
cwtl
push
insl
icebp
addl
ja
mov
pop
out
push
into
orl
push
mov
scas
inc
and
and
arpl
mov
sbb
jne
mov
cmp
fadds
daa
sbb
cld
adc
orl
ljmp
inc
int
jo
popa
cwtl
xor
test
dec
jne
rol
out
lock
lock
mov
inc
or
push
adc
mov
insb
jo
int
ja
mov
stos
mov
or
cltd
or
stc
leave
add
dec
push
hlt
add
mov
aaa
sub
outsb
call
fldl
bnd
loop
std
out
cmpsl
lret
fs
sub
mov
repz
outsl
xor
inc
sbb
push
pop
lds
shlb
inc
mov
das
jl
pop
cli
add
das
mov
fs
lcall
dec
fistl
andl
jns
jno
call
sub
dec
int
lock
xchg
xchg
insb
mov
subl
ret
mov
inc
cld
dec
push
mov
mov
inc
cld
call
cmpsb
dec
or
jnp
jns
jmp
arpl
jno
call
jns
test
leave
imul
lods
icebp
ja
ss
sar
mov
fistpl
mov
push
add
cmpsb
js
stos
cmp
dec
loope
push
mov
push
gs
mov
rorl
adc
mov
loop
mov
cld
cmpsb
and
loope
cs
pop
adc
fimull
or
imul
xchg
xchg
pop
or
pop
inc
push
aas
cmp
mov
add
ja
fisubl
arpl
cmpl
xchg
cltd
adc
and
add
or
fisubrl
mov
xchg
mov
ror
cmpsl
incl
pusha
or
mov
clc
mov
sub
pushf
fwait
mov
xchg
repz
mov
sarb
test
dec
xchg
icebp
inc
dec
adc
lcall
push
sub
das
inc
mov
pop
mov
and
movsl
mov
stos
jo
pop
enter
pop
xor
mov
cld
or
xlat
lahf
fwait
stos
daa
push
or
cmpsl
jbe
push
stos
sub
cmp
xchg
fisubrl
cmc
ror
outsl
mov
or
and
dec
scas
jne
testl
aaa
pushl
adc
hlt
loop
int3
ret
sub
mov
ficompl
adc
jmp
fisubs
adcl
xor
jnp
push
mov
sub
mov
aas
insb
xchg
push
add
test
fmulp
leave
sbb
loopne
int3
lret
arpl
sbb
gs
and
pop
inc
add
xlat
mov
xor
outsl
jle
das
ljmp
lods
cmp
int3
repnz
iret
xchg
ror
sbb
das
add
pushf
leave
loope
pop
push
stos
lcall
add
lods
cmp
gs
jecxz
mov
das
add
xor
icebp
xor
loopne
push
enter
inc
shlb
ss
dec
pop
dec
cltd
pop
hlt
add
or
lret
ja
sub
push
inc
scas
leave
outsl
xor
mov
sahf
jo
mov
stc
scas
mov
sub
xlat
mov
push
popf
mov
scas
mov
sti
test
sti
in
lahf
mov
fmulp
ljmp
in
mov
jl
fcmovnb
mov
ret
js
stos
xor
ret
inc
pushf
jecxz
sbb
and
aad
and
out
sub
ja
xor
ror
fwait
lds
outsl
adc
fnstsw
test
stos
ret
sbb
mov
cmc
outsb
outsb
xor
rcrb
es
add
das
in
jg
gs
push
cmpsl
lods
cmp
hlt
jg
mov
push
mov
dec
es
cmp
dec
mov
cvtps2pd
cltd
xchg
cmc
mov
mov
cmp
xchg
xchg
out
lods
cmp
cmp
mov
daa
xchg
push
insl
popa
je
cmp
pop
insl
and
inc
mov
shrl
xchg
mov
lods
cmp
push
ret
testb
adc
cli
pop
jle
out
dec
cmc
add
or
fcmovnb
pop
fbstp
jo
testl
xor
std
adc
push
pop
mov
fnclex
sub
xchg
sub
insb
jno
add
test
rol
insl
aam
fs
lods
popf
add
lds
fsubs
mov
mov
repnz
dec
int3
xor
pop
cmpb
cmpsl
dec
sbb
scas
or
aam
pushf
dec
inc
mov
sbb
shr
pusha
cmp
dec
and
fstps
jae
lock
loope
push
aaa
daa
fbld
pushf
cmp
iret
fstp
es
rorl
into
lock
sbb
movsl
jbe
xchg
sub
mov
in
mov
pushf
icebp
nop
mov
nop
push
pop
push
shrb
mov
xchg
lret
jle
xor
adc
ja
rcl
adc
orl
jl
cs
rorb
jmp
cmp
sbb
hlt
or
pop
add
mov
or
imul
ja
dec
cmc
bound
adc
jbe
dec
fsubl
leave
xor
mov
pop
cmp
xchg
js
cmp
ret
out
cli
dec
mov
sub
sub
movsl
push
jo
pop
test
std
ret
inc
fstl
add
cwtl
jae
mov
xchg
lock
xchg
fwait
sub
inc
sahf
sbb
sbb
mov
das
repz
cmp
fsub
push
mov
xor
test
and
pop
mov
test
push
push
add
mov
fwait
pop
sti
out
in
push
das
sbb
insb
lahf
jae
or
nop
xchg
cmp
mov
ret
clc
inc
cmp
lods
jne
out
loopne
push
imul
pop
push
int3
nop
jmp
push
mov
mov
lret
pusha
and
loopne
inc
nop
sahf
shlb
lret
mull
or
dec
pop
and
xchg
fisttpll
sub
std
sub
leave
add
push
ret
popf
or
pmulhuw
pop
ss
xor
pop
jae
inc
mov
test
addb
enter
sub
pushf
shrb
or
test
sbb
lahf
fimull
pop
xchg
inc
dec
xorl
jne
in
jp
outsb
ret
or
mov
sub
push
push
int3
stc
mov
lock
sbb
jnp
outsl
iret
cld
inc
sahf
mov
inc
scas
data16
inc
insl
mov
add
xor
in
or
divl
pop
push
dec
andb
push
jae
cmp
out
mov
inc
xor
data16
popf
xor
jbe
repz
add
xlat
movsb
mov
cmp
pop
sub
loope
icebp
sub
push
rcll
in
popl
subl
aas
fwait
sbb
js
mov
insl
data16
jge
sbb
mov
lea
add
shll
clc
adc
pop
sbb
mov
pop
mov
inc
imul
test
mov
jns
add
repnz
jne
mov
sarl
cld
outsl
in
sbb
cmp
mov
dec
cld
push
add
imul
outsb
sbb
addl
adc
imul
aas
leave
inc
mov
je
xor
mov
sbb
enter
push
arpl
in
sbb
jae
pusha
or
sahf
mov
inc
mov
inc
push
leave
pop
xchg
je
fsubrs
jo
or
sahf
pop
fstpl
push
leave
jecxz
mov
orl
rcll
or
and
push
add
sbb
pop
loop
jmp
sbb
pushf
nop
in
pop
xor
mov
xchg
mov
scas
lret
scas
pop
inc
cld
ljmp
int3
movsb
test
ss
pop
jae
push
xorl
je
bound
sub
movsb
das
mov
out
or
into
xlat
test
inc
xor
das
xchg
movl
sbb
insb
outsl
rol
push
push
mov
fcomi
jae
jo
mov
sarb
int
dec
mov
or
push
adc
jp
jo
push
cmpsb
sbb
adcb
popl
add
out
pop
mov
iret
leave
inc
dec
mov
mov
loope
add
cmp
std
push
les
sub
cmpsl
adc
ds
xchg
jp
fucom
pushf
cmp
jmp
xchg
adc
xchg
dec
nop
xlat
jmp
and
in
jl
xlat
icebp
popa
fidivl
adc
mov
pop
adc
rclb
xchg
stos
loopne
mov
push
inc
push
or
mov
ret
add
in
js
mov
nop
sti
arpl
sub
mov
je
dec
mov
js
cmc
in
stos
fldl
add
mov
enter
adc
xchg
lahf
sbb
out
and
popa
ret
in
and
dec
cmp
es
ss
pop
mov
mov
sahf
inc
data16
sbb
push
mov
sti
addr16
jno
lock
test
mov
lret
inc
outsb
dec
dec
sub
inc
ds
or
nop
push
scas
mov
test
daa
add
sub
cmp
orb
out
movsb
push
fnstenv
xchg
jmp
aas
cs
loope
mov
push
mov
shlb
pushf
ja
push
fcomip
xorb
push
fadds
mov
mov
jbe
mov
fimull
clc
xchg
or
add
adc
jbe
cs
sbb
loop
scas
daa
lods
dec
add
pop
movsl
mov
test
loopne
test
pop
cmc
add
dec
xor
dec
xor
in
enter
in
mov
fs
mov
xor
cld
and
xor
in
je
arpl
cmp
inc
jg
stos
inc
lcall
pop
push
push
cld
in
lret
and
ficoml
push
test
jecxz
push
repz
ljmp
out
and
cmpsb
mov
sarl
inc
call
stc
xchg
mov
aam
sbb
cmpsb
notb
cmp
or
sub
std
jo
and
mov
mov
dec
push
push
sarb
int3
sbb
shl
testl
xchg
pop
bound
out
jmp
pop
add
insb
and
mov
push
call
jg
call
mov
aas
xchg
push
jg
mov
inc
out
add
fcmovnbe
lds
out
push
aaa
mov
imul
jle
test
cmp
xchg
push
pop
xchg
sti
rorb
pop
fmull
out
sbb
mov
push
add
xchg
or
push
fmull
jl
clc
or
pop
adc
mov
sar
rcr
in
cmp
ss
stc
cwtl
rcll
jge
mov
adc
lret
xchg
mov
int
lret
inc
add
adc
fisubrl
sub
subb
popf
shlb
outsl
mov
mov
mov
push
xchg
sti
mov
test
xchg
cs
cmp
fnstenv
mov
sbb
push
ds
dec
fnsave
dec
mov
enter
jge
pop
stc
xchg
fisttpl
mov
pushf
push
test
push
outsb
xorl
cmpsl
daa
popf
push
dec
call
xor
decl
pop
lods
cmp
lock
add
mov
xor
jae
lds
pop
roll
in
add
push
es
mov
fmul
mov
movsl
sbb
out
and
loop
dec
or
dec
jo
ret
mov
push
data16
push
js
dec
jmp
dec
cmp
fdivl
lds
push
sbb
xor
xlat
sbb
mov
in
test
cmc
sti
cmpb
jae
test
xor
sbb
mov
in
sub
cltd
mov
jmp
in
test
stc
add
repz
outsl
shr
xchg
jbe
rclb
inc
adc
mov
sbb
clc
push
and
pop
jbe
xchg
stos
aaa
cmp
jle
aam
adc
add
aaa
and
es
cmp
test
cmp
test
add
add
addr16
negb
sub
dec
loop
lret
sbbb
inc
add
fsts
mov
pop
decb
dec
cltd
arpl
jge
jb
test
inc
jmp
pushf
test
sbb
out
dec
adc
xchg
or
dec
and
sub
iret
imul
cmp
daa
scas
push
lahf
aam
out
ja
jmp
sub
testb
fiadds
std
lret
ret
scas
in
sub
sub
sub
lods
test
push
mov
push
mov
dec
loope
ljmp
inc
push
sbb
sbb
stc
daa
jmp
mov
repz
adc
cli
pop
fdivrl
sub
out
or
mov
dec
mov
jae
dec
out
sub
push
mov
repz
movsb
xchg
mov
outsl
add
fisubl
call
outsb
call
sub
or
xchg
repnz
or
pop
dec
sub
sbb
repz
push
mov
jmp
rol
inc
insb
loope
mov
inc
adc
inc
cmp
nop
mov
daa
test
ss
dec
or
jbe
out
mov
mov
call
pop
ret
or
mov
insl
mov
daa
xor
fucom
sbb
mov
stos
std
jns
arpl
dec
data16
and
add
or
jne
int
inc
adc
shrb
push
test
loopne
iret
xchg
sub
and
stos
pop
ret
rcrl
insb
pop
punpckhdq
loopne
imul
nop
adc
and
loopne
xor
push
mov
cmp
jns
lcall
hlt
inc
daa
push
adc
cld
xchg
xlat
mov
les
adc
dec
adc
mov
addr16
inc
fidivrl
push
mov
outsl
mov
xchg
popa
mov
mov
xlat
push
repz
cli
pop
fdivrl
mov
jmp
in
add
rcr
addr16
or
sahf
data16
test
filds
lcall
and
jbe
cmc
gs
push
cmp
bound
insb
scas
ja
dec
pusha
push
pop
stc
or
popf
push
popl
push
sub
imul
sbb
pop
ficomps
out
pop
stc
xlat
cmp
adc
aas
aaa
jle
out
popa
jo
fnsave
xor
test
fcoms
stc
movb
into
loop
ret
push
leave
leave
jecxz
ret
pop
ds
xchg
ret
and
repnz
xchg
jmp
outsl
dec
mov
ja
lods
dec
sar
popa
fs
rcr
pop
mov
out
sbb
push
inc
cwtl
popa
push
or
inc
mov
icebp
popf
dec
jle
adc
mov
mov
fistps
lcall
inc
out
repz
imul
mov
fisubs
movsb
cmp
stos
push
dec
fs
xchg
bound
push
ss
inc
pop
sar
insb
fisubrs
icebp
sbb
sbb
xchg
add
jbe
and
add
adc
movsl
cmp
mov
sbb
aam
jnp
test
xor
jecxz
cmc
movups
call
adc
mov
mov
ss
push
sbb
add
loope
mov
aad
mov
sti
mov
inc
sub
popa
adc
xor
sahf
pop
fwait
fs
ret
dec
add
sbb
scas
loopne
aad
cmp
fdivs
sbb
lea
mov
int3
xor
xchg
inc
xorl
movsb
mov
sbb
dec
js
cwtl
and
ficompl
fst
sbb
scas
sti
popa
in
mov
xchg
in
aas
jecxz
xor
mov
fnsetpm(287
jmp
or
cwtl
cwtl
xchg
inc
dec
mov
dec
fwait
cld
adc
stos
pop
xchg
ja
fldenv
xchg
adc
mov
and
lods
fsubr
inc
idiv
inc
in
jnp
arpl
in
jmp
cmpsb
out
mov
jno
mov
cld
ror
jne
adc
xchg
fxch
test
in
and
cmp
movsb
sub
out
arpl
fsubr
and
pop
mov
adc
cltd
push
mov
jns
pop
ljmp
stos
or
jnp
gs
int3
push
lahf
sahf
sub
xchg
pop
movswl
in
aas
lahf
scas
xchg
mov
in
and
pushf
nop
lcall
cmpsb
sub
outsl
or
push
push
dec
mov
movsb
mov
push
cs
sbb
int3
nop
cmpsb
xchg
mov
fidivs
mov
cmc
mov
bound
out
cli
xor
call
aaa
and
test
stos
das
and
arpl
add
lret
insb
outsb
ror
or
xor
pop
sub
mov
mov
ret
cld
loop
jg
dec
xchg
jno
push
push
lret
mov
jne
inc
xchg
add
outsl
mov
dec
and
test
xor
repnz
pusha
xor
into
mov
cs
jno
shrl
loop
movsb
dec
mov
or
sub
ret
sub
popf
mov
repz
xchg
fldl
ficomps
outsl
xor
addr16
and
cmc
jno
jge
stc
dec
pop
mov
jecxz
mov
aas
mov
adcl
or
add
mov
or
arpl
jge
mov
push
dec
adc
imul
aad
repnz
xchg
mov
std
push
js
rorb
loop
xchg
stos
lds
jo
cmc
xor
jnp
mov
add
dec
popf
sbb
mov
pop
pop
gs
inc
sbb
je
loope
outsb
mov
outsb
jge
js
push
inc
inc
sbb
sbb
sub
mov
into
in
xchg
mov
xor
ja
push
in
cs
sbbl
das
push
repz
inc
fwait
push
pop
popf
in
dec
adc
inc
ficoml
sbb
mov
xchg
imull
dec
enter
in
popa
stos
mov
stc
fwait
push
cmc
pusha
mov
std
arpl
xor
jle
lret
in
mov
sbb
inc
sub
jne
into
jle
jb
addr16
cli
adc
xchg
sub
push
sahf
insb
ret
jbe
ret
imul
data16
fistpl
pop
or
aaa
lods
mov
and
or
popa
repnz
jb
gs
or
test
addb
add
dec
ja
int3
fistps
xor
or
push
shrb
mov
mov
bound
dec
insb
jb
shlb
push
xchg
cs
aas
sti
decb
cmp
inc
xchg
out
pop
lods
outsb
mov
pop
aam
scas
sbb
into
push
sub
addr16
pop
aas
xorl
stos
scas
mov
sub
pop
inc
in
add
inc
mov
roll
fcoms
not
lahf
mov
in
pop
aas
inc
lock
inc
inc
pop
dec
push
sbb
mov
and
adc
lods
sti
cwtl
pop
lock
pusha
push
lods
mov
out
and
pushf
sub
jb
sub
test
fstl
push
cltd
popf
pop
adc
mov
sahf
imulb
inc
sub
sbb
dec
adc
es
mov
and
push
loop
inc
jle
inc
or
xchg
cmpsl
test
shr
mov
mov
or
pop
in
ret
jge
popf
pop
pop
decb
dec
pop
cmpsb
movsb
add
jno
mov
icebp
scas
or
adc
loopne
in
nop
push
int3
or
test
xor
cmp
inc
fs
push
jge
xlat
dec
lret
mov
cld
mov
push
and
icebp
loope
dec
and
cld
das
adc
mov
mov
push
mov
push
and
mov
inc
je
icebp
inc
decb
xchg
stos
jecxz
in
pop
mov
sahf
dec
addr16
mov
add
lods
adc
and
add
jne
in
push
lcall
or
test
movsl
mov
dec
pop
je
scas
out
mov
inc
repz
pushf
int
pop
sahf
xor
inc
xor
sub
test
mov
lret
inc
sub
xor
sti
pop
adc
jne
lea
ja
jp
pushf
lcall
aaa
fimuls
sbb
int3
jno
daa
xchg
in
xor
aad
and
lods
cmp
rorl
bound
cmp
or
adc
dec
push
dec
insb
out
repnz
inc
xchg
mov
sbb
lret
enter
cmc
inc
ss
fsubl
popa
sbb
and
aas
push
insl
and
fldl
mov
fmull
cs
jmp
insb
notl
pop
movsl
cmp
mov
test
inc
addr16
loop
xchg
ljmp
lock
adc
or
push
and
push
mov
ud1
in
xchg
inc
das
cmp
lods
out
jne
out
push
lea
mov
call
imul
xor
fidivs
cld
push
dec
mov
cli
call
mov
cli
or
cmp
jge
inc
push
cli
pop
mov
mov
xchg
add
in
outsl
mov
mov
cmpsl
cli
push
aaa
test
stc
fistpl
insb
push
adc
aaa
mov
push
into
push
call
in
sbb
imul
popa
je
loopne
test
add
cmc
push
mov
cwtl
sahf
call
imul
sbb
inc
mov
jge
movsb
push
jo
or
sbb
push
jo
adc
xchg
jl
jns
test
test
int
pop
xchg
pop
cmpsl
in
push
push
repnz
sarl
ds
jmp
ret
enter
jge
sub
jne
sub
and
mov
xchg
scas
and
pop
pop
daa
in
push
pusha
inc
push
orl
pop
push
notl
dec
push
mov
mov
push
ret
or
adc
scas
cmp
xchg
mov
jmp
pusha
sbb
rcrb
enter
sub
daa
test
mov
cmc
pop
leave
stos
frstor
cwtl
jne
or
sbb
out
pushf
inc
xor
leave
mov
test
lods
repz
stc
cmc
pop
inc
push
outsb
in
jecxz
rol
cli
arpl
xor
inc
je
sub
xorl
sub
cli
int
jmp
xlat
mov
push
mov
out
cmp
xor
mov
popf
xchg
pop
repz
sti
jecxz
shrb
mov
loope
xor
les
mov
sub
xchg
test
push
inc
xchg
fildl
pop
iret
in
pop
icebp
inc
hlt
fcoms
sbb
lods
mov
popa
cmp
mov
mov
adc
cmp
sbb
ljmp
xchg
cmc
adc
das
test
fisubrs
jp
sub
call
aam
test
jle
in
mov
es
push
fisubrs
inc
sub
xchg
pop
test
out
or
push
daa
sbb
and
stos
pop
push
cwtl
jns
aaa
sbb
pushf
and
xor
or
ffreep
mov
cltd
cmp
mov
xor
jmp
adc
dec
in
idiv
call
inc
mov
push
mov
add
pop
mov
std
mulb
negl
xchg
mov
jg
xchg
xchg
fs
or
cmp
inc
bound
xor
decb
mov
push
cmp
addl
sbb
rcrb
jbe
push
sbb
test
mov
jl
and
stos
out
jg
mov
inc
xchg
jbe
ss
pop
mov
enter
push
out
mov
out
sbb
ret
dec
imul
fsubr
fdivr
inc
push
scas
pop
adc
movsl
inc
sahf
jecxz
adc
call
fbstp
pop
pop
outsb
mov
lock
int3
fwait
pop
sub
pusha
pop
mov
outsb
cmpsl
push
cmpsl
mov
lahf
or
xorl
out
ret
sbb
sbb
or
mov
test
inc
push
lds
jecxz
cmp
cs
out
inc
outsl
in
sub
add
shrb
cmp
loope
and
push
push
mov
cmp
push
aad
ffree
adc
dec
pop
pop
jbe
inc
mov
sub
and
push
out
adc
je
insb
jl
popaw
pop
lcall
stc
jne
mov
adc
adc
daa
sub
xor
loope
gs
or
jmp
xor
dec
pop
cs
xchg
orb
add
mov
das
out
mov
mov
cmp
dec
sub
in
dec
and
xor
pushl
mov
movsl
jno
mov
fs
lods
push
sbb
adc
frstor
dec
fnstcw
dec
cld
jmp
inc
pop
mov
xor
push
xchg
push
jge
mov
cld
mov
push
dec
push
mov
jmp
and
mov
adc
shll
mov
fwait
dec
or
push
push
mov
fwait
int
imul
sub
mov
xor
mov
add
scas
sbb
xchg
sub
insb
xor
jns
sub
pusha
mov
aas
and
lcall
cmp
stos
adc
stos
push
and
fdivrs
in
outsb
and
cmp
cld
repnz
lcall
mov
lods
xchg
movsb
inc
fmuls
test
mov
cmp
add
cltd
push
jb
dec
inc
loope
arpl
mov
repz
sahf
adc
cli
js
arpl
and
rcrb
fcoms
mov
in
mov
xchg
push
stos
movsl
pop
insb
xchg
bound
mov
hlt
stc
dec
sarb
movsl
nop
pop
push
cmp
mov
testl
daa
in
pop
outsb
scas
pushf
push
xor
xor
mov
dec
icebp
push
dec
mov
pop
ficompl
shl
popa
dec
inc
icebp
stos
dec
add
xchg
cmpsl
sub
mov
shll
sbb
popa
lods
clc
roll
imul
mov
std
leave
inc
sbb
mov
push
aaa
pop
push
rol
lea
or
fiadds
aaa
andl
ja
jp
movsl
mov
test
push
loope
dec
in
mov
mov
pop
xchg
pop
movsl
imul
xlat
cmp
jecxz
or
add
rcrb
jmp
sti
repz
comiss
fldcw
inc
pushf
dec
insb
loope
movsb
cs
icebp
adc
cmp
jbe
and
pop
dec
loopne
repnz
jmp
and
ds
add
mov
clc
in
pop
jno
fiadds
xchg
xor
lcall
fmull
xchg
sub
push
and
sar
incb
inc
cmp
push
dec
mov
outsb
in
in
pop
mov
mov
adc
adc
add
stos
ss
adc
jp
mov
dec
nop
dec
sar
dec
fistpl
mov
mov
pop
mov
jmp
ds
aas
nop
mov
mov
inc
push
sub
jg
or
lahf
jmp
fsubrl
stos
push
jo
insl
hlt
pop
xchg
in
xor
add
imul
in
mov
mov
jae
xor
gs
andb
test
repnz
jge,pt
jmp
sub
sti
lret
xlat
pop
lds
inc
xor
jnp
mov
iret
cmp
ds
sbb
iret
mov
dec
loopne
cmp
je
push
dec
add
push
aad
mov
cmp
mov
cmpsb
adc
test
push
add
inc
daa
mov
idivl
gs
xchg
or
cwtl
push
pop
cmc
popf
push
jns
mov
pop
jg
dec
sbbl
jns
and
shll
xor
test
popa
mov
hlt
inc
bound
mov
sbb
iret
loopne
cwtl
mov
fs
dec
lods
repz
dec
cs
or
aaa
or
shrl
movsl
dec
incl
das
movb
pusha
scas
jb
or
aam
outsl
mov
mov
pop
mov
enter
xchg
and
in
jbe
xor
out
icebp
jecxz
mov
mov
jns
cli
or
jne
mov
or
aaa
and
mov
or
fwait
pop
mov
ret
sarb
popa
movsl
dec
cmp
out
add
imul
lcall
scas
lcall
pusha
sub
cmp
rorb
es
stc
loope
and
test
add
cli
in
lea
xchg
dec
lods
popa
pop
push
inc
xchg
dec
xchg
mov
icebp
test
cmp
gs
pushf
mov
mov
xor
aad
push
adc
dec
xchg
leave
in
jne
sub
test
daa
mov
pop
nop
bound
popa
mov
les
out
mov
and
push
mov
aad
mov
jo
xor
popa
fucomi
lods
xor
sub
and
mov
xchg
shl
stos
into
out
fmulp
cmc
add
ret
pop
dec
xchg
dec
sbb
int3
xchg
adc
and
jl
shll
mov
test
jmp
lods
shll
mov
orb
mov
enter
lahf
call
add
mov
xchg
sub
sub
dec
int3
loopne
pop
fs
or
jnp
repz
mov
icebp
push
add
fwait
push
xlat
mov
call
mov
pop
mov
sbb
movb
xor
imul
sub
mov
pop
aad
dec
test
adc
xchg
xor
sub
repnz
pop
sub
dec
mov
xor
sub
call
jno
outsl
sbb
add
aam
dec
mov
inc
jb
insl
pop
push
mov
xor
testl
jmp
subb
sbb
mov
jnp
lret
daa
and
pushf
and
sti
or
pop
leave
jno
popf
std
push
mov
out
nop
and
clc
inc
mov
sbb
mov
dec
cmpsb
push
mov
test
rcr
or
adc
push
jnp
or
sub
ret
fstp
mov
cmovs
xchg
jno
lahf
pop
push
or
dec
and
mov
pop
rcl
mov
daa
aaa
mov
negl
orl
push
movsb
adc
jne
aas
inc
repz
dec
or
imul
inc
pop
mov
in
add
je
xchg
icebp
sub
mov
inc
jmp
pusha
rorb
and
sub
loope
sub
inc
int3
pushf
stos
unpckhps
mov
sbb
aas
fdivs
aas
jge
jns
cld
data16
lret
rcl
pop
test
pop
adc
xchg
js
sub
sbb
rorl
xchg
and
xor
mov
jbe
mov
fidivrl
fmulp
outsl
add
xor
fisubs
dec
mov
sbb
test
ljmp
inc
inc
jb
or
das
in
aaa
lret
dec
mull
xchg
mov
sbb
imul
adc
inc
outsl
mov
fnstsw
clc
or
das
mov
mov
mov
push
into
dec
sbb
sub
pop
sbb
sbb
jge
aad
mov
adc
push
xor
out
add
inc
mov
dec
jne
pop
cmpsb
add
fisubrs
dec
push
cmp
ficomps
and
or
mov
push
out
pop
imul
ja
and
mov
jmp
adc
sub
cmp
pop
mov
addr16
sbb
xlat
aam
pop
movsb
das
pop
jle
fadds
test
ret
mov
pop
cmp
dec
sub
cmp
aam
mov
inc
mov
stc
cwtl
mov
into
fdivl
add
je
sbb
insl
sbb
iret
scas
mov
gs
into
and
push
popf
in
fldenv
imul
lcall
into
aad
cli
in
fs
mov
pushw
addr16
adc
xor
and
add
into
lret
fsubrp
pop
std
int
xchg
sub
out
int
add
pushl
js
sbbl
mov
repz
inc
call
pushf
imul
push
xchg
inc
jecxz
shll
jns
dec
mov
mov
mov
fsubs
loop
mov
inc
or
inc
adc
insl
mov
adc
jmp
mov
adc
das
lahf
pop
jecxz
mov
vmovsd
adc
iret
mov
ljmp
adc
sbb
aaa
aaa
mov
push
les
aaa
xchg
gs
jmp
mov
stos
or
clc
popa
insb
mov
inc
hlt
jne
es
xchg
cmpsl
daa
pop
jmp
ja
mov
iret
pop
arpl
jo
mov
inc
popa
das
xchg
add
mov
mov
jmp
popa
in
clc
lock
cmp
mov
rcll
adc
loopne
es
std
es
mov
push
adc
out
cmp
adc
aaa
xchg
lea
sbb
notl
dec
rorl
movsl
rorl
mov
popa
jno
sub
inc
popa
lds
and
and
les
pop
cmovno
adc
fsubrs
jg
insl
dec
lock
add
adc
imul
shll
xorb
test
out
aaa
shll
jle
push
mov
pusha
mov
stos
je
mov
jno
jno
push
inc
dec
repz
int
aad
stos
or
orl
bound
lods
test
ret
adc
push
out
dec
sti
cmp
adc
int3
mov
push
and
xchg
pop
mov
jb
sub
test
cmc
fidivl
call
lea
sbb
cmp
jae
lea
notb
cmc
and
fistpll
cli
xchg
fcomps
loopne
mov
sub
cmpsb
mov
mov
mov
mov
sbb
jae
popa
mov
xor
out
call
pushf
xchg
fs
je
js
or
fldz
xchg
lods
jecxz
mov
dec
xchg
and
loopne
and
int3
adc
xchg
rclb
mov
push
inc
cmp
mov
xchg
adc
jne
ja
dec
in
or
mov
stos
pop
push
pop
hlt
es
aad
ret
scas
add
test
mov
adc
mov
sub
mov
cmpl
in
cmp
out
pushf
es
adc
xor
fisttps
push
in
lcall
cmp
xchg
fmuls
sti
sub
sbbb
ja
and
mov
pop
mov
and
sub
xchg
mov
inc
pop
popa
lods
ds
mov
bound
mov
pop
jl
les
cmp
ret
pop
mov
clc
adc
stos
sbb
fsubrs
mov
or
sti
lahf
adc
mov
sti
mov
int
sbb
pushf
insb
xlat
pop
xchg
xchg
dec
mov
das
dec
in
mov
jle
mov
mov
rol
out
out
sarl
lods
dec
mov
cs
lret
rolb
cli
test
inc
adc
inc
xchg
adc
test
movsb
call
test
mov
mov
in
fnstenv
pop
test
and
xor
mov
push
in
and
inc
vrsqrtps
fmul
js
scas
xor
pusha
lret
sub
bound
shrl
cmpsb
loope
jns
jge
xor
test
pop
lret
lcall
addr16
hlt
imul
sti
push
mov
pop
inc
iret
fnstsw
xchg
shll
jmp
fsubr
dec
movsl
dec
pop
xchg
mov
leave
idiv
pop
addr16
adc
mov
inc
fistps
stc
stc
pop
out
das
sbb
mov
stc
add
cmc
adcb
fidivrs
cs
adc
std
push
adc
push
scas
mov
js
icebp
repnz
nop
sub
cmp
negl
push
or
je
adc
out
xor
aam
inc
cmpl
push
pop
daa
jge
cmpsb
fcos
sbb
in
daa
fidivrs
hlt
rcrl
insb
cmp
cmp
sub
and
cmp
sub
mov
mov
mov
mov
shrb
call
pop
subb
icebp
adc
mov
out
push
adc
or
mov
lret
out
out
fs
dec
jae
mov
scas
sbb
jecxz
das
scas
inc
jle
lahf
mov
mov
stc
cltd
and
sub
testb
lret
fcoml
orl
cmp
xor
lea
add
rclb
ret
rcll
xchg
or
repnz
cmp
and
sbb
mov
in
push
sub
sbb
in
sub
mov
push
test
or
adc
adc
loop
and
or
xor
int3
imul
add
pop
cltd
out
inc
in
mov
mov
sarl
ret
mov
lret
xor
stc
rclb
xchg
pop
rolb
fucom
or
push
sbb
inc
in
mov
cmp
sbb
shll
adc
mov
and
jno
fmull
js
dec
push
mov
push
mov
orl
fnsave
aas
sbb
adc
adc
and
js
pop
pop
and
decb
jnp
cmp
mov
sbb
lock
and
out
add
stos
fsincos
shrb
sub
mov
mul
mov
fsubrs
sub
pop
sub
xchg
jns
sbb
mull
xor
cs
outsb
popf
movups
pop
aam
and
jne
pop
pop
js
mov
popa
mov
pushf
xor
rcr
adc
ja
popl
in
xlat
fucomi
mov
mov
add
sbb
xchg
jg
sub
or
mov
stos
inc
add
in
call
inc
idivb
xor
outsl
mov
ffree
ljmp
cltd
cmp
mov
xchg
jg
xor
or
pop
add
or
fcoms
or
pop
dec
roll
xchg
xchg
in
dec
push
xchg
aas
lret
jmp
stos
push
ljmp
std
inc
outsl
movsl
xlat
imul
std
dec
clc
jmp
in
and
cmp
inc
fdivrs
pop
loop
in
mov
dec
push
je
lea
div
ds
ja
adc
jnp
push
test
push
inc
outsb
out
cmp
dec
jp
in
idivb
add
icebp
xorb
xchg
xchg
adc
xor
aas
pop
ret
movb
cld
je
stos
mov
dec
lods
push
pushf
dec
out
jg
mov
and
mov
je
push
push
lcall
jnp
jg
repnz
popa
push
inc
negl
and
pop
arpl
aad
mov
out
inc
inc
push
lret
subl
fwait
sti
and
and
ret
or
push
lcall
inc
add
xor
xchg
enter
mov
lahf
in
fidivs
cld
mov
lcall
icebp
std
ja
cltd
xor
dec
sub
jns
mov
in
add
scas
xchg
jg
or
push
sub
and
push
push
xchg
mov
xor
les
mov
add
adc
mov
out
lods
and
outsl
ret
and
dec
out
jno
push
dec
dec
lods
movsl
lahf
push
fisttpll
mov
out
mov
fistl
rcrl
or
xor
pop
and
jp
enter
je
imul
in
jl
cld
inc
std
test
add
adc
test
xor
and
xchg
cltd
push
nop
jae
and
dec
lock
ror
test
and
ficompl
xchg
mov
adc
sub
repz
jno
dec
mov
jae
dec
dec
push
xor
mov
in
push
add
shll
cmpsl
jnp
dec
fucomi
push
cltd
pop
xor
pop
imul
jmp
jne
jne
jbe
mov
leave
das
lds
arpl
jl
gs
cmc
cmpsl
sbb
inc
and
mov
pushl
jns
push
ljmp
mov
mov
test
pop
pop
ffreep
fsts
mov
sub
popa
fcoms
xor
cmpsl
outsb
leave
fdivrs
pop
iret
dec
gs
shlb
push
and
jns
xor
mov
xchg
push
cmp
mov
and
divb
xchg
xchg
sahf
mov
mov
dec
fucomi
push
in
inc
rclb
popa
ret
sub
cmp
enter
xor
popf
mov
push
arpl
mov
notl
sub
mov
ror
sbb
xchg
test
pop
cs
mov
movsl
dec
push
pop
popf
ret
repz
cmp
inc
insb
pop
lods
stc
pop
dec
nop
xor
or
mov
test
or
mov
push
sbb
popf
das
jle
into
popa
mov
jns
mov
jge
arpl
jg
bound
xor
xor
push
sbb
cmpsb
cwtl
mov
mov
xchg
pop
push
js
pop
mov
jo
jo
xchg
repnz
sub
cmp
xchg
push
cmc
cs
jnp
std
xor
or
scas
or
popf
pop
push
movsb
adcb
fcoml
mov
sub
push
mov
cltd
mov
hlt
iret
idivb
add
adc
js
xor
pop
mov
xchg
sbb
cld
fcompl
repnz
push
pop
adc
shlb
cmp
imul
shl
push
shlb
sub
ficomps
push
ret
mov
lcall
lods
loope
cld
inc
xor
lahf
lcall
cli
popa
and
movsl
fstpl
adc
inc
out
adc
adc
pop
sbb
mov
mov
add
mov
pop
hlt
cmp
pusha
andl
jbe
cmp
out
shlb
hlt
sub
lds
cmp
xorb
and
mov
and
loopne
scas
push
or
mov
add
popl
mov
push
xor
push
lods
leave
inc
pop
jb
ret
sub
jno
sub
cmovno
jecxz
adc
mov
mov
lea
xor
pop
cmpsb
pop
stos
pushf
cld
loope
mov
push
lds
pushf
fadd
ljmp
outsl
cmp
sub
lcall
xchg
or
mov
dec
jno
cmc
inc
jmp
xchg
dec
scas
pop
sub
shlb
jmp
dec
stc
jecxz
popf
sub
in
adc
push
jp
jnp
mov
mov
call
sub
xchg
aaa
shrb
int3
jb
ja
insb
fisttpll
pop
xchg
notl
jns
cmp
mov
aaa
cmp
push
rcrl
out
sub
loopne
mov
mov
adc
jae
cltd
cmp
pop
mov
adc
les
pop
dec
sub
aaa
in
pop
xchg
andb
test
mov
aas
xor
ret
sub
pop
mov
xlat
sete
mov
cld
rolb
into
mov
xorb
test
dec
rol
js
std
cld
and
push
mov
and
adc
mov
lcall
jns
sti
mov
sbb
fisttpl
cmc
adc
mov
into
lret
xchg
or
shlb
call
xor
jmp
sarl
popf
pop
or
aad
add
fidivrl
push
incl
out
loop
lahf
mov
xor
stos
sub
test
out
jl
xchg
mov
xor
sarb
mov
aas
pop
je
fsts
xchg
fmuls
aam
jbe
icebp
sub
sbb
call
push
jge
jle
mov
mov
lret
mov
mov
pop
stos
pop
adc
xchg
jno
inc
iret
pop
cmp
cmp
leave
pop
divb
pop
xor
test
cwtl
rorl
xchg
in
mov
adc
repnz
outsb
push
repz
in
push
in
test
xorb
fs
or
jne
cmp
sub
mov
cmp
adc
lods
insb
inc
sbb
sub
mov
jl
imul
mull
mov
outsl
cld
xor
or
test
mov
add
orb
shl
adc
mov
mov
adc
and
lds
mov
adc
add
test
negl
je
mov
jl
mov
test
mov
shl
jmp
ja
bound
add
cld
lcall
je
pusha
sub
data16
cs
out
fsubp
dec
hlt
repnz
add
add
mov
adc
add
push
mov
les
addr16
mov
test
mov
inc
cld
mov
pusha
shrb
mov
scas
mov
xchg
lcall
sub
jne
mov
cmp
jno
jl
xchg
into
fcomps
js
nop
iret
dec
xchg
pop
roll
lret
fdivrp
sti
xchg
or
sti
das
xlat
clc
mov
cltd
push
imul
out
leave
movsb
stos
out
push
int
in
push
jge
inc
jbe
dec
cmp
pop
lret
out
xchg
arpl
out
je
loope
push
jp
pop
mov
aad
cmpsb
test
or
sbb
mov
movl
mov
shrl
jmp
fsubl
sti
out
xor
test
push
mov
fistpll
popf
inc
xor
inc
sub
jno
mov
std
jp
stc
pop
pop
lods
xor
jae
stc
mov
xchg
je
outsl
loop
sub
and
sbb
mov
push
cltd
dec
adc
mov
mov
mov
jno
mov
in
mov
cs
or
jb
or
mov
sub
or
in
fistpll
shlb
mov
inc
jge
movsl
add
insl
push
cmp
mov
out
push
loop
cmp
cmp
xchg
cmp
out
cwtl
gs
dec
lcall
fisubrs
cli
cmp
cmp
adc
iret
xchg
lds
insb
addr16
movsb
cld
popa
pop
dec
xor
lea
stc
aas
gs
sbb
out
push
sbb
in
mov
mov
dec
shl
pop
test
sub
push
inc
dec
jns
pusha
addr16
int
add
fldl
mov
xchg
mov
shlb
inc
out
loop
stc
sub
xor
adc
je
inc
leave
ja
aas
pushf
push
ja
mov
out
xor
pop
mov
sub
lahf
loope
test
cmp
add
daa
jo
lods
hlt
jmp
sti
ret
divb
int3
shlb
jbe
jbe
cmpl
popa
dec
pop
add
xchg
xchg
xchg
jae
or
dec
adc
inc
sub
cli
jp
mov
pushf
cld
orb
pop
fldenv
xor
popa
push
pop
lret
and
iret
cmpsl
daa
add
outsl
mov
cs
movsl
and
mov
std
decb
sarl
pop
mov
pop
pop
xchg
outsb
dec
das
mov
fxch
push
scas
jbe
jmp
mov
lcall
cltd
inc
mov
loopne
jae
pop
fcmovbe
add
loop
int
jno
inc
cmpsl
jg
ds
pop
iret
arpl
pop
and
rorb
sub
sarb
pop
or
mov
inc
jg
push
adc
insb
push
fcoml
test
movsb
divl
dec
mov
adc
or
aam
addl
ss
test
mov
je
inc
je
and
data16
add
push
sub
xor
cli
mov
add
lods
cltd
fdivrl
movsb
lds
in
movsb
fbstp
fidivrs
rcrl
pop
sti
cs
insl
add
fsts
fwait
and
iret
pop
or
push
xor
sub
and
lcall
imul
jge
mov
rcrl
repnz
icebp
sub
ret
and
clc
cmp
ficoms
push
and
adc
test
sub
or
movsb
sbb
xchg
lods
rorl
xchg
imul
leave
xchg
aad
mov
xor
loope
jge
and
mov
fidivl
lods
cmp
je
adc
dec
out
dec
sbb
jecxz
test
inc
sbb
jne
mov
push
hlt
idivl
sti
cmp
fs
mov
xor
pushf
cmpsl
add
xchg
out
sbb
add
xchg
std
insl
mov
and
aaa
jp
mov
ret
push
or
jmp
push
mov
stc
clc
mov
mov
or
scas
enter
add
loope
in
rcl
in
mov
push
pop
xlat
cmc
iret
icebp
clc
adc
adc
loope
fwait
shrl
inc
mov
fwait
mov
int
stos
fisubrl
inc
push
jp
int3
xchg
out
mov
mov
int3
xchg
inc
outsb
fdecstp
xchg
jns
cmpsl
add
xor
or
cmp
sbb
and
mov
inc
xchg
repnz
testb
cld
test
or
into
sti
call
bound
and
push
icebp
sbb
shll
mov
in
or
rcll
jmp
sbbl
jbe
pop
aad
push
jecxz
sbb
or
mov
and
daa
cmp
xchg
mov
adc
test
test
ret
jae
out
jmp
inc
cld
mov
xor
and
add
cs
pop
js
sub
or
sahf
sarb
pop
mov
mov
jne
or
sbb
add
pop
mov
ja
xchg
daa
es
sbb
ss
pop
ljmp
or
xor
std
inc
pop
ss
int3
cmp
lret
and
aad
adc
sbb
xchg
stos
aad
mov
outsb
int
pop
rcr
inc
ret
add
xchg
clc
popf
jp
or
stos
dec
and
das
cmp
insl
add
loope
dec
cmp
mov
movsl
outsl
pop
push
adc
pop
mov
in
xor
ljmp
or
lea
mov
adc
mov
or
cld
fnsave
pop
sub
lock
test
sub
mov
add
repnz
add
or
rorb
dec
hlt
addl
test
mov
sbb
repnz
pop
shrb
mov
and
pop
mov
je
cmp
mov
cmpsb
add
pop
mov
call
lret
xchg
cmc
push
fsub
mov
xchg
mov
xor
mov
sub
fnstsw
sar
push
mov
push
aad
lods
dec
fidivl
sub
shrl
add
pushf
das
push
leave
sahf
xor
insl
test
nop
cmpb
push
pop
push
outsl
jno
fldt
ds
push
and
aaa
adc
mov
or
push
and
sti
lods
pop
dec
pop
fdivl
pop
cmp
push
out
fmul
mov
mov
aaa
inc
insb
xor
icebp
cmp
out
fwait
es
push
and
js
mov
mov
aad
mov
insl
dec
add
mov
cmp
ror
mov
and
out
pop
or
cmp
shlb
mov
push
xchg
cmp
cltd
xchg
clc
jge
or
pop
fsub
push
movsl
inc
stc
shl
inc
lret
popa
sub
je
sub
sbb
mov
cmp
xor
popf
push
jmp
sub
pop
mov
push
js
lret
jae
or
sub
adc
adc
test
fstpl
mov
cmpsl
pop
xchg
ficoml
je
add
popa
cmp
dec
dec
push
mov
xor
mov
adcl
fdivl
sbb
jo
icebp
sbb
cmp
pop
dec
mov
sub
add
jecxz
xor
mov
xchg
inc
es
pusha
ret
mov
ds
adc
xchg
repz
stc
negb
push
jnp
mov
cmp
jbe
xchg
mov
jne
dec
sub
sub
inc
or
pop
dec
js
dec
call
shll
and
leave
movsl
sub
nop
cmp
adc
daa
jmp
icebp
xor
sbb
filds
push
loope
adc
and
dec
push
adc
out
cmpsb
mov
pop
icebp
mov
fwait
das
loopw
cmpsl
lahf
push
mov
jmp
dec
in
dec
daa
xchg
roll
test
push
inc
insl
hlt
leave
popa
hlt
icebp
jns
pop
mov
cmp
stos
stos
sub
mov
mov
inc
inc
cmpsl
inc
and
add
aaa
test
mov
insl
xchg
mov
repz
mov
mov
lahf
pop
jle
pusha
sbb
mov
pop
rcrb
movsl
rorb
jge
mov
es
pusha
mov
or
sbb
jbe
cmc
mov
push
dec
rcrl
add
cmpsl
cmp
jg
addr16
mov
push
test
and
push
aas
cwtl
add
pop
push
inc
xor
lods
ret
fld
pop
dec
fldl
imul
lea
cmp
inc
test
inc
aas
stos
push
add
cmp
inc
and
pop
add
ljmp
nop
lock
test
xor
mov
testl
test
popa
pop
outsb
mov
mov
cltd
add
in
mov
sub
mov
add
cmpl
and
inc
in
xor
pop
jle
cli
pop
sti
lock
adc
mov
jae
stc
push
push
test
in
out
push
push
cli
call
push
xor
data16
aad
popa
lock
mov
mov
je
mov
movsb
adc
negb
and
push
xchg
into
mov
divb
ja
or
dec
xor
cmp
xchg
int3
clc
in
int
and
sbb
cli
push
add
insl
and
std
ljmp
out
roll
cwtl
inc
xor
jmp
mov
xlat
hlt
or
add
xor
xchg
pop
push
pop
push
pop
adc
je
inc
lods
jnp
incl
pop
mov
jnp
filds
mov
sbb
lret
mov
out
pop
dec
outsl
pusha
cli
pop
lods
jnp
jg
cwtl
scas
mov
xchg
clc
aas
sarb
sbb
cmc
rcrl
adc
push
push
cli
and
xor
test
mov
pop
push
aam
call
push
lahf
dec
test
ja
push
push
ret
out
jne
shlb
dec
push
push
outsl
or
lea
icebp
mov
xchg
mov
cmp
sub
mov
js
into
mov
xchg
pop
xor
lret
lods
jg
jno
or
lea
xchg
mov
in
cwtl
sub
push
pop
movsb
xorl
dec
arpl
clc
xor
test
gs
stc
stos
xor
push
outsl
mov
addr16
adc
mov
push
das
addb
dec
and
xchg
xorb
inc
jecxz
push
addr16
call
insl
dec
sbbb
lock
pop
cmc
aas
fisubrl
adc
push
add
pop
leave
pop
es
fcomps
popf
ljmp
into
scas
test
cwtl
sarl
jns
mov
dec
outsb
cmp
rorl
inc
sahf
pop
xchg
jecxz
xchg
pop
push
adc
pusha
cmp
sti
inc
insb
lcall
and
jne
shrl
popf
fadds
cld
bound
sbb
movsl
test
push
in
mov
sub
clc
call
push
leave
mov
xor
jnp
cmpb
xor
xor
inc
rorb
and
fdivr
mov
subb
arpl
lea
cmpsb
ret
xor
mov
or
jl
sar
mov
imulb
sub
bnd
mov
inc
fcmovnbe
sub
cmpxchg
sub
cmp
add
loopne
shrb
aas
pop
jns
xor
in
loope
and
xor
ds
jecxz
sbb
jecxz
cmp
cmpsl
orb
mov
mov
xor
xchg
leave
sbb
in
fistps
push
pop
mov
or
gs
lahf
mov
cs
cmp
mov
fimull
mov
out
int
loope
jbe
out
inc
out
mov
jne
clc
rcrb
sbb
icebp
sub
cltd
pop
jns
addl
jl
pop
and
xor
cmp
rcl
push
adc
mul
jno
jns
in
cmp
mov
mov
outsl
and
into
add
push
xorb
xchg
mov
call
repnz
cld
mov
pop
pop
xchg
insl
std
cmp
repnz
scas
pusha
or
mov
shrl
es
stc
enter
clc
filds
mov
pop
fnstcw
jae
mov
mov
js
jbe
out
jbe
dec
add
daa
fidivrs
cmovo
dec
loope
mov
test
jo
jne
adc
push
in
or
dec
bound
inc
pop
test
andb
push
sub
mull
xlat
je
repnz
adc
xchg
lods
push
cmp
mov
scas
jae
add
je
in
mov
out
fsubs
or
mov
gs
not
mov
push
xor
push
or
ds
cmpb
push
test
sbb
or
in
ret
and
shrb
int
or
pushf
push
xchg
mov
gs
push
or
imul
fwait
lret
scas
jecxz
cwtl
lcall
pop
repz
int3
test
hlt
insl
push
mov
mov
lock
cmp
leave
lods
repz
sbb
jns
pushf
in
mov
repz
js
pop
dec
dec
xchg
jmp
into
ret
adc
dec
mov
fbld
inc
bound
jb
lds
ficoml
pop
imul
lds
and
mov
xor
int
ds
mov
insb
inc
shlb
and
xor
cmp
dec
out
sbb
test
mov
pop
scas
push
mov
adc
cmp
outsl
jle
shrb
in
stos
pop
or
cmpsl
push
push
xor
or
cmp
push
ds
pushf
cld
jne
jp
push
dec
jmp
pop
add
sub
std
test
out
stc
add
lods
fs
pop
hlt
add
fsubrs
adc
cmp
xor
jmp
ja
xchg
adc
pop
and
and
fwait
and
sahf
pop
fstpt
sarl
orb
mov
xchg
mov
pop
jne
scas
pusha
dec
mov
mov
dec
sub
sahf
cmp
pop
push
shlb
sub
arpl
and
nopl
popf
or
stc
mov
or
add
push
hlt
adc
xchg
adc
sub
mov
mov
leave
scas
sbb
sub
push
ret
gs
sbb
lds
mov
cmpsl
out
inc
dec
push
lret
ljmp
call
and
imul
jp
cmp
iret
mov
stos
lret
push
es
cmp
pusha
rcl
dec
fcoms
pop
fs
inc
pop
pop
cmp
push
cmp
sar
sbb
jge
cli
fiadds
inc
fsubs
push
icebp
test
mov
adc
outsl
pop
sti
js
mov
cmp
jle
sbb
xor
mov
in
adc
rol
out
mov
outsb
jno
sbb
sub
pop
mov
pop
push
test
adc
pop
pop
and
inc
sub
inc
sbbl
sbb
push
mov
dec
rolb
stos
add
pop
outsb
pop
mov
mov
cmp
clc
mov
popa
sub
pop
loop
add
cmpsb
fdivrl
and
repnz
dec
cmp
fcmovne
mov
mov
pop
adc
mov
sub
sub
sub
mov
mov
pop
movsb
adc
adc
jge
outsl
subb
sbb
dec
divl
cmp
ljmp
inc
lods
mov
sbb
lret
or
popf
add
loope
sti
xchg
xlat
and
aas
rcrb
or
in
jg
aad
pop
jg
sti
cmp
aaa
cmp
jge
ljmp
push
pop
mov
pop
lret
test
add
sbb
mov
shrb
fbld
mov
clc
cmp
cmpsl
ffreep
imul
xchg
je
mov
mov
int
ja
hlt
cmpsl
in
aad
xor
in
rolb
xchg
dec
jo
dec
addr16
sub
jmp
scas
push
fwait
bound
jg
cmp
xlat
out
and
arpl
cmc
pop
scas
aad
mov
fimull
out
sbb
mov
adc
inc
sbb
add
cltd
pop
adc
dec
aas
jo
addr16
jo
lods
sub
out
cmp
scas
gs
jle
push
mov
mov
mov
pop
test
test
sub
sub
sbb
xchg
pop
mov
adc
jl
test
inc
pop
jae
call
frstor
leave
aaa
add
dec
pop
dec
jle
or
js
sarl
cmpsb
and
mov
js
cmp
push
mov
and
sbb
mov
icebp
push
fstpl
insl
cli
lahf
sarb
fbstp
xor
ficomps
or
repnz
cli
xchg
sub
add
cmp
in
mov
mov
inc
repnz
out
stos
loope
jle
jle
loopne
mov
in
mov
jne
pop
push
dec
pop
cld
test
push
or
inc
mov
in
mov
cmp
push
ficompl
out
movsl
mov
scas
mov
call
icebp
xor
push
sub
add
mov
jnp
mov
or
scas
sub
xchg
pop
cwtl
bound
fsubr
inc
lret
push
inc
pop
mov
mov
bound
cmp
inc
aaa
xchg
mov
test
add
or
aad
add
mov
mov
or
into
out
add
or
cli
out
dec
and
pop
and
fcomip
ljmp
je
mov
add
jl
push
pop
push
mov
daa
xchg
mov
add
add
mov
and
sub
loopne
je
fdivr
xchg
pop
into
cli
jge
lahf
mov
mov
iret
rcrb
fst
call
shrb
andl
push
popa
push
jmp
and
punpckhdq
mov
xchg
push
push
lds
cmc
idiv
es
xchg
xchg
cmpl
jns
mov
adc
sbb
aas
int3
or
add
add
mov
adc
in
ficomps
je
adc
aaa
inc
mov
lds
iret
sbb
stc
sub
mov
shl
mov
xchg
in
mov
xchg
push
lods
mov
hlt
test
hlt
adc
cwtl
addr16
test
sbb
push
test
adc
jge
xor
out
mov
sub
push
loop
adc
adc
insb
aaa
or
sub
pusha
dec
test
rcll
je
mov
loope
in
jae
cmp
sub
mov
sub
mov
fidivrl
or
fldt
mov
pop
jo
and
sub
cmp
dec
rorb
and
out
cmovne
iret
scas
test
sbb
push
push
imul
jle
mov
std
push
addl
xor
ljmp
fidivs
sub
xchg
dec
and
jge
and
out
push
xor
mov
enter
inc
pop
pusha
rorl
dec
inc
gs
mov
cld
pop
or
pop
ret
enter
mov
loop
out
cmp
dec
fadds
shll
lcall
add
push
mov
mov
inc
mov
add
mov
xlat
les
xor
pop
mov
test
xor
push
mov
adc
ljmp
gs
or
xchg
daa
insb
lret
push
xor
aam
pop
add
and
or
sub
mov
aas
mov
in
mov
dec
mov
sub
mov
gs
test
mov
fs
sub
rolb
add
and
push
imul
pop
mov
mov
jmp
add
mov
jle
leave
and
faddl
pushf
jg
lahf
out
mov
ljmp
pushl
push
push
lret
das
jne
out
mov
ret
sub
dec
dec
ficomps
popf
xchg
jb
popf
testl
lcall
inc
push
xchg
pop
shl
addr16
sbb
mov
in
lret
lahf
mov
jp
mov
mov
pushl
in
div
jno
pop
sti
js
pusha
mov
addl
dec
pop
mov
or
shr
sbb
pop
int3
pop
fwait
mov
loop
cmovs
mov
xchg
add
mov
add
mov
lret
pop
daa
jnp
and
jmp
stos
pop
cmp
pop
notl
das
mov
ret
pop
push
pop
popl
mov
pushf
push
mov
int
xlat
out
imulb
mov
repnz
filds
xorl
mov
xchg
jb
into
mov
xor
in
iret
cmp
lock
mov
mov
jb
xchg
pop
jmp
in
call
bound
ficompl
dec
outsb
je
stc
movsb
sub
ret
dec
push
mov
int3
dec
adc
shl
dec
lock
add
and
xchg
push
adc
push
push
out
add
roll
adcl
icebp
lods
inc
movsb
push
int3
fldcw
imul
pop
xor
and
addr16
daa
dec
xor
mov
pusha
aas
lcall
nop
xor
mov
fs
cmpsl
add
inc
ss
sbb
xor
jmp
sub
ret
inc
sahf
hlt
and
jle
jno
inc
fstl
mov
pusha
add
das
into
das
cmpsb
outsb
xor
and
fsubl
mov
mov
add
push
cwtl
mov
scas
and
mov
inc
inc
repz
insl
add
aam
adc
icebp
adc
push
repnz
jo
and
test
cli
or
dec
fdivrl
aam
aaa
push
sbb
into
mov
test
repz
jo
cmp
bound
shr
sub
jnp
xchg
imul
scas
vunpckhps
jmp
push
dec
and
aam
mov
in
mov
clc
sub
cli
mov
mov
sbb
jmp
lds
cmp
sbb
icebp
sbb
jns
cmp
out
adc
imul
and
jl
pop
adc
mov
cwtl
cli
push
fdivrl
fdivs
push
mov
sbb
xchg
leave
xlat
pop
stos
pop
xchg
movsl
popa
cmp
inc
add
sub
mov
mov
cmp
xchg
inc
pushf
loop
cwtl
jno
inc
ss
out
pop
je
push
insb
push
xor
addb
in
xchg
iret
dec
cmp
in
jge
xor
mov
jecxz
iret
mov
mov
fadds
mov
subl
lret
dec
sbb
pop
and
jnp
sar
ficoms
scas
mov
lds
loop
test
sub
movl
fmuls
fnstcw
cmp
sbb
mov
fidivrl
or
xor
jle
cltd
out
xchg
add
pop
pop
or
or
cmp
sbbl
ss
nop
adc
cmp
or
add
mov
call
rorb
rorb
sbb
sbb
imul
enter
mov
mov
xchg
inc
jp
mov
mov
popf
scas
mov
out
ja
nop
clc
xor
sbb
ror
loop
out
push
pop
js
aad
mov
jne
fs
jle
push
fs
jns
enter
les
fcmovu
and
filds
icebp
ret
pop
sub
lods
inc
or
outsb
ret
shll
scas
leave
in
gs
xchg
or
mov
cmp
mov
dec
dec
cmp
std
es
lods
or
and
pop
gs
fdivr
push
jns
gs
jns
or
cmp
repnz
pop
xchg
pop
jnp
push
mov
xor
fidivl
dec
fisttps
jo
decl
ffree
aam
or
dec
outsb
loope
movsb
rol
sub
js
pop
adc
leave
push
sbb
repz
pushl
mov
roll
xor
sbb
xor
mov
add
int
xorl
cltd
into
push
inc
add
cwtl
mov
lcall
dec
ret
xchg
xchg
push
xlat
inc
jae
sbb
mull
jle
mov
jl
inc
loop
sbb
lret
push
inc
cmc
mov
setne
enter
scas
loop
xor
jb,pn
iret
pop
push
inc
cmc
cmp
mov
sbb
and
inc
dec
shll
push
mov
jecxz
cmpsl
jne
out
push
mov
mov
ja
stos
inc
jbe
por
pop
imul
mov
repz
lret
jg
xor
push
jmp
and
inc
inc
sbb
insb
cmp
jnp
negb
sub
cmpb
fidivrl
pop
push
pop
js
adcl
mov
mov
cwtl
adc
push
mov
out
mov
push
mov
jg
inc
pop
or
popa
adc
inc
xor
sub
mov
lcall
lret
das
push
push
xchg
jle
out
push
sub
enter
les
leave
cld
arpl
into
sbb
cmovno
bound
test
xchg
es
jno
ret
inc
jp
je
dec
jmp
je
pop
in
mov
mov
mov
addr16
jge
push
xor
das
mov
jmp
in
rolb
pop
mov
cmp
sub
xchg
fidivrl
and
sub
mov
mov
cwtl
sbbl
iret
cmp
popa
pop
aam
push
scas
stc
mov
sbb
rcrb
les
sbb
ds
es
jae
ds
loop
mov
jae
in
dec
push
cmp
loop
mov
test
add
adc
aad
mov
jecxz
sub
xchg
mov
insb
xorb
xchg
imul
xchg
or
and
test
mov
lahf
push
repnz
mov
or
subb
int3
dec
dec
clc
pop
adc
lret
in
pop
pop
jae
aad
jo
dec
filds
inc
lock
mov
sbb
jae
sbbl
xchg
jg
repz
pop
out
inc
and
daa
cwtl
mov
jecxz
adc
bound
pop
adc
mov
aaa
adc
sub
inc
cmp
cmpsl
test
or
stos
stc
and
xlat
push
pop
fidivrl
dec
divb
popf
push
jnp
das
movsb
out
insl
in
mov
sub
lds
or
xchg
cli
cmpsl
mov
xchg
dec
mov
or
and
aaa
stc
fsubl
test
mov
stos
pop
lahf
fdivrs
les
addr16
shl
add
loope,pt
and
addl
and
inc
aas
in
ss
inc
mov
ds
repz
jge
cmp
out
test
mov
ljmp
inc
inc
cli
cmp
insl
fs
pop
stc
test
sbb
ja
jge
adc
adc
adc
dec
mov
lds
shll
lds
cld
adc
bound
adc
or
push
inc
std
dec
mov
xor
outsb
push
fnsave
mov
push
sub
fidivrs
xor
lock
xchg
xor
nop
clc
shrb
push
data16
data16
ja
cmpsl
stos
xor
fcoms
shll
adc
add
stc
adc
fdivs
sbb
aad
pop
stos
add
out
lods
xor
or
mov
push
fdiv
inc
inc
les
mov
gs
daa
and
pushf
dec
adc
inc
mulb
rorb
stc
or
pop
add
je
sahf
push
fwait
sub
rorl
bound
hlt
outsl
cmp
je
cmpb
hlt
pop
dec
out
fcmovnb
subl
mov
dec
and
mov
pop
enter
ret
jmp
scas
out
pop
daa
lea
imul
cmp
dec
jne
add
jp
or
clc
fwait
ds
ss
jle
dec
cmc
stos
fnsave
xchg
shll
mov
adc
cmc
push
and
mov
xchg
call
pushf
movsb
sbb
stos
repnz
sbb
mov
xlat
insl
fstl
mov
fwait
jle
cmp
data16
out
cmpsl
repnz
xor
fisubl
xchg
int
sub
mov
test
enter
xor
je
dec
mov
sbb
xor
mov
fistpl
add
mov
imul
fwait
imul
inc
sbb
idiv
push
mov
es
testl
add
testb
repnz
cmp
mov
and
ret
xchg
add
sub
outsl
dec
lods
jp
sbb
fistpll
pop
or
pop
sub
or
daa
sbb
xchg
andb
aas
mov
popa
xchg
jns
or
ret
inc
push
fcomi
rcll
test
pushf
add
push
imul
xchg
subb
xor
sahf
dec
in
inc
push
daa
ja
into
push
lods
ret
fldl
xor
je
push
dec
xchg
jg
sub
enter
fisubl
in
aas
icebp
mov
jg
cwtl
add
and
icebp
dec
aam
sub
cs
gs
xor
adc
aas
dec
into
adc
fadd
push
push
je
mov
jmp
pop
sahf
push
or
inc
les
sub
in
mov
dec
jb
shl
test
fsubl
push
call
iret
dec
bound
test
pop
push
xor
inc
mov
push
stos
dec
inc
mov
sub
test
in
fstp
inc
sub
cmp
inc
outsb
movsb
cmp
pusha
popa
cmc
mov
push
repz
inc
or
pop
jno
xchg
testb
jmp
dec
cwtl
sub
jno
lret
lret
scas
pop
frstor
ds
call
push
inc
sub
mov
push
imul
pop
pusha
sub
xchg
incb
in
aas
shrl
add
xchg
rcrb
push
pop
ljmp
adc
lcall
and
sbb
push
dec
sbb
iret
test
cld
sub
fs
ljmp
or
and
aad
xchg
pop
xchg
push
sub
xchg
mov
or
xchg
pop
bound
dec
stos
scas
data16
adc
pop
push
dec
out
cmc
sti
cmpsl
adc
scas
icebp
int
mov
test
das
loopne
scas
int
and
mov
shl
enter
std
push
imul
pusha
dec
pop
push
mov
test
shlb
out
sub
xchg
xchg
jle
mov
adcb
loopne
and
aaa
dec
or
cmp
xor
call
xchg
adc
test
inc
cmp
rcrl
mov
jae
pusha
sbb
ret
divl
adc
sbb
cmc
mov
mov
shrl
mov
rcrl
jge
lcall
dec
popf
xor
mov
add
jg
jo
lret
xlat
and
dec
xorl
arpl
lret
cmp
movsb
mov
fcmovb
sbb
std
scas
xchg
dec
push
sbb
lret
dec
xor
push
inc
xchg
inc
jno
and
xor
push
mov
sub
xchg
sbb
xchg
add
jmp
sbb
out
mov
sbb
std
dec
xor
loopne
sahf
xchg
lods
cmp
cs
adc
sbb
addr16
xlat
lods
or
addr16
push
lcall
push
sahf
mov
xor
cmc
xor
xchg
loopne
pop
and
testb
sub
in
insl
jno
mov
insl
inc
jnp
mov
rcll
mov
jp
adc
loop
mov
jp
push
repnz
fcmovnb
scas
add
pop
sbb
adc
xor
fadd
cs
or
cwtl
cmp
gs
xor
icebp
fcoms
xlat
sbb
mov
cwtl
inc
or
in
or
add
lods
adc
cltd
iret
jmp
sbb
xchg
add
adc
push
xlat
mov
movsb
adc
into
pop
xor
repz
stos
xor
jae
mov
pushf
test
mov
inc
cmp
dec
jge
lock
lahf
xlat
ficoml
xchg
lods
in
negl
cmp
sub
repnz
pushf
pop
lods
jmp
cs
sti
jae
push
inc
jg
lahf
push
inc
sahf
mov
lock
mov
lcall
xchg
iret
icebp
and
pop
cwtl
fistl
inc
push
jmp
rcr
push
clc
out
pop
xchg
mov
mov
or
mov
fmull
shrb
test
and
xlat
sarl
pop
cmpb
test
outsb
mov
add
shr
push
call
sub
lea
add
in
test
lret
out
negl
sbb
cli
pop
lret
in
push
imul
test
sub
lret
nop
das
cmp
sbb
mov
jo
adc
sti
mov
mov
cmpl
aas
or
dec
or
lock
pop
fistl
inc
fnstcw
movsb
test
and
jnp
std
sbb
scas
pop
shll
jns
jmp
repz
shlb
push
xchg
incl
jle
cmp
movsl
leave
lcall
ds
lahf
sbb
int3
andl
xlat
xchg
mov
add
imul
es
test
or
mov
xlat
gs
lcall
insl
xor
rorb
out
rcll
jg
inc
out
or
mov
xlat
iret
or
imul
lcall
add
mov
jb
roll
mov
data16
mov
shll
mov
movsb
or
aaa
push
adc
addl
or
shrl
xchg
mov
sub
and
mov
lret
xorb
fs
lods
mov
pop
add
jbe
std
fists
pop
xlat
lcall
xchg
addr16
inc
dec
andb
sub
std
loope
lods
les
xchg
xlat
jmp
sub
mov
dec
or
test
add
es
ds
mov
fisttpll
pop
stos
and
dec
mov
and
aas
cld
mov
fs
sub
scas
fnstsw
push
repz
inc
cs
jle
leave
test
sbb
xlat
outsl
jecxz
int3
int3
loop
rorb
lds
jno
sahf
xchg
xor
mov
repnz
jns,pt
xchg
push
fs
fisttpl
xor
mov
daa
addr16
es
pop
jl
adc
push
inc
jae
sahf
imul
or
cwtl
aas
sub
push
adc
xorb
dec
fisubrs
pop
mov
out
sbb
mov
icebp
or
push
add
cld
rcrb
shlb
orl
ss
in
adc
cmpsl
lret
push
adc
inc
jp
inc
bswap
out
and
xor
mov
mov
in
or
aaa
clc
xchg
fimuls
fisttpll
mov
and
jle
cmc
sub
mov
aad
jo
ljmp
pop
inc
sub
jle
aad
xchg
push
out
mov
mov
mov
sub
les
mov
aam
add
sbb
leave
ret
add
cld
xor
repnz
and
and
xchg
dec
push
das
xor
aam
movsb
sar
push
sub
divb
popa
push
enter
adc
mov
jmp
ss
clc
and
call
and
fcompl
xor
outsb
xor
xlat
xor
sub
insb
push
mov
xor
fcoml
sarl
sbb
inc
jae
dec
imul
adc
pop
mov
cmpsl
push
ret
scas
push
cmp
adcb
daa
js
push
daa
sub
stc
sub
daa
push
inc
push
and
mov
sub
and
sahf
xchg
and
jmp
in
std
jecxz
jmp
cmp
bound
push
mov
jbe
and
incb
adc
mov
sbb
and
jle
sti
popf
pop
insl
mov
out
mov
fs
shl
pop
prefetch
or
sbb
nop
and
jno
bound
pushf
xor
out
lret
out
push
je
pop
mov
cmp
rclb
les
or
pop
jno
clc
pop
stc
jbe
add
stos
inc
mov
das
pop
arpl
out
push
pop
mov
inc
mov
mov
lea
sbb
xchg
ja
sub
ficompl
cmpb
sub
adc
pop
repz
mov
sbb
lock
inc
lods
ret
inc
adc
int
sub
mov
lret
movsl
aaa
leave
inc
outsl
popa
leave
shlb
dec
xor
subb
test
shll
add
leave
xor
jge
and
push
push
les
cld
rclb
push
sbb
fucom
mov
cli
or
scas
shll
es
mov
outsb
add
inc
and
insl
and
test
daa
dec
or
dec
cmp
jecxz
sub
fisttpl
mov
dec
imul
sbb
in
mov
cmpsl
jmp
jo
mov
mull
outsl
outsb
sbb
sti
sub
dec
mov
sub
ljmp
mov
jbe
mov
and
xchg
jo
lret
xchg
andl
xor
push
fstp
in
rolb
loopne
mov
mov
inc
imul
fsubp
int
in
mov
repnz
inc
dec
push
mov
testl
push
jp
mov
es
push
pop
mov
scas
sysenter
loopne
ds
inc
sub
mov
sub
fimuls
cmpsl
xchg
pop
shll
js
imul
cmp
aas
sbb
push
pminub
dec
scas
fcmovnb
popa
sbb
test
mov
dec
call
push
and
xchg
mov
rclb
jnp
fs
lahf
mov
lahf
mov
fwait
movsl
loope
in
push
pop
jmp
jb
dec
les
ret
repnz
lods
xchg
hlt
stc
xor
fidivl
pop
sub
flds
add
test
cmp
mov
xor
sbb
enter
cmc
xchg
adc
roll
scas
daa
loop
add
cmpsl
adc
lods
mov
cwtl
sub
adc
jnp
xor
xchg
lcall
dec
shll
mov
out
mov
jno
mov
popf
sbb
movsl
mov
aam
fcompl
jbe
inc
in
jle
or
adc
outsl
dec
cwtl
xor
mov
outsl
ss
xchg
push
cs
fcomps
sub
xor
sbb
fdivr
mov
add
in
jnp
adc
cli
outsb
cmp
imul
es
xlat
shlb
push
rcrl
test
push
mov
and
inc
leave
leave
jne
loopne
xchg
cmpsl
xor
adc
iret
les
sub
dec
inc
ljmp
push
xor
lcall
loope
pusha
mov
clc
xor
cmp
inc
mov
cld
xor
cmp
mov
popf
sarb
outsl
outsl
mov
fs
arpl
and
mov
lods
loopne
repz
outsl
mov
cld
adc
cmp
stos
pop
mov
or
inc
pop
sub
movsb
xchg
pop
pop
fstps
sub
ljmp
sbb
cld
shl
add
scas
rorl
jmp
jmp
push
fsubrl
mov
push
data16
sbb
mov
jge
xchg
sbb
mov
repz
imul
lret
in
mov
popa
fadds
adc
sahf
mulb
stos
mov
sub
leave
test
es
adc
dec
lcall
push
ret
mov
mov
pop
dec
addr16
cs
sahf
inc
mov
pushf
lea
fadds
fldcw
push
stc
add
dec
inc
push
cmpsb
add
sub
enter
shlb
mov
cmp
cli
jmp
jbe
sub
negb
loopne
std
jg
icebp
and
push
vxorps
dec
fcomps
enter
lds
mov
mov
cs
xchg
pop
in
mov
mov
xchg
xor
es
mov
add
lock
xor
push
setle
inc
or
push
sub
xchg
xor
repz
xchg
test
lds
dec
adc
cmp
mov
add
fs
push
jno
sbb
jnp
cmp
mov
mov
pop
mov
mov
jno
jne
fiaddl
mov
ret
shlb
sub
ljmp
test
cmp
lods
outsb
daa
test
mov
movsl
int
mov
hlt
lahf
push
notl
test
fistl
mov
das
push
lods
inc
xor
out
in
negl
lds
outsl
cmp
subb
push
dec
hlt
jle
shl
bnd
pop
idivb
not
sti
adc
xchg
push
pop
stc
scas
push
push
sbb
dec
fmull
jl
and
lods
or
mov
repz
add
xlat
lea
test
sub
std
inc
mov
mov
sbb
lea
cmp
imul
test
jns
leave
and
add
test
lock
sbb
or
popa
or
ss
fmuls
cld
push
sbb
outsb
add
or
mov
jecxz
scas
ret
fdivrl
inc
nop
pop
xchg
vmovhps
and
jae
sub
nop
jns
pop
cltd
sbb
adc
movsb
push
and
xlat
push
push
lret
cli
cmpb
xorb
push
sbb
in
scas
adc
lock
xlat
hlt
cmpsl
mov
or
xchg
sub
lods
cld
rolb
fists
pushf
imul
xlat
cmp
loopne
xchg
sub
sub
dec
out
xor
icebp
stc
fildl
mov
dec
data16
mov
aam
int3
push
ds
div
push
lcall
ljmp
ficomps
adc
xor
xchg
repnz
xlat
mov
lock
or
mov
mov
sub
add
iret
mov
fdivrs
arpl
xchg
dec
pop
mov
rcll
enter
fs
adc
fistpl
jae
adc
nop
dec
subb
xchg
int
repnz
fadds
ja
scas
mov
scas
pop
dec
or
mov
xor
test
movsb
popf
insl
push
sbbl
jb
and
cmpl
ja
das
mov
jbe
mov
aam
push
cs
or
mov
pop
inc
pop
in
aaa
xor
mov
or
outsl
pusha
int
inc
pop
or
pop
mov
jno
lret
mov
into
addr16
push
test
les
ljmp
push
icebp
ffreep
testb
or
sub
mov
cmp
push
pop
or
xchg
rcl
js
mov
mov
adc
sbb
jp,pn
and
push
ret
popl
neg
xor
dec
dec
xor
sub
dec
sarl
dec
test
inc
icebp
xor
and
addr16
jge
imul
rcrl
dec
ja
stos
xchg
aad
xor
scas
je
leave
test
push
and
daa
xchg
pop
outsl
xchg
add
mov
lahf
out
nop
out
fs
popf
mov
data16
inc
push
repz
cmp
fmull
add
ret
jno
cltd
test
lea
mov
jne
int3
test
cs
sbb
dec
fisubl
nop
cmp
and
out
mov
inc
xor
dec
xchg
jae
or
test
dec
out
sbb
aam
cli
inc
fists
pop
jno
cmp
and
shrb
in
xlat
jle
insb
mov
sahf
clc
jmp
inc
leave
bound
cmc
add
movsb
push
xor
xlat
repnz
stos
adc
loopne
mov
loope
inc
inc
loopne
xchg
movups
push
push
push
pop
nop
pop
pop
and
mov
xchg
xchg
add
leave
addl
nop
repnz
shl
dec
mov
aas
cmp
ror
loope
mov
adc
jne
mov
push
gs
int3
lods
out
adcl
mov
push
int
adc
lock
xor
mov
sub
pop
js
inc
stc
testl
cmp
xor
add
test
rcll
arpl
cmp
fs
dec
xchg
jle
ret
daa
loope
xor
pop
mov
loop
pushf
in
and
iret
push
mov
in
sbb
push
pusha
adc
push
pop
popf
pop
mov
mov
xchg
cmp
mov
lcall
scas
lcall
ss
cltd
mov
sbb
sbb
push
pop
mov
dec
int3
stos
cmp
mov
sub
adc
mov
sbb
inc
cmpsb
aas
test
mov
xor
push
bound
test
dec
cmpsl
and
jp
shlb
popf
sarb
stos
sbbb
push
sbb
in
adc
dec
sbb
or
cmpb
xor
adc
mov
xchg
ss
xor
xor
enter
mov
inc
cmp
jno
ficomps
xor
int
das
push
sbb
outsb
js
imul
test
cmp
push
ret
bound
movsb
and
hlt
push
ficoms
adc
rolb
sbb
xchg
imul
popa
mov
mov
sbb
xchg
repnz
fcomip
iret
and
mov
add
fsubl
jecxz
lcall
pop
cmp
das
movsb
out
data16
test
sbb
xlat
xor
dec
popa
lahf
fdivs
and
sahf
mov
and
rolb
js
sbb
test
add
xchg
sbb
mov
andb
loopne
aad
bound
push
jnp
nop
cwtl
add
and
cli
mov
xor
test
in
aas
sbb
push
lret
lcall
ret
aam
cmpsb
loopne
and
jle
divl
rcll
sub
cli
xchg
ds
add
in
adc
add
nop
or
mov
loopne
jle
lret
mov
add
xor
ljmp
xor
stos
stos
cli
cli
pop
push
test
aas
in
cmpsb
cltd
outsl
loope
stos
and
test
fildl
or
scas
mov
adc
push
repnz
daa
cmp
inc
roll
cld
daa
enter
in
lods
jnp
sbb
xchg
fsubr
fs
mov
lcall
dec
leave
pop
je
cmp
rorb
dec
movl
repnz
cld
push
icebp
xchg
rcr
push
and
stos
test
movsb
fstps
and
mov
movsl
mov
push
adc
inc
fdivrs
out
out
hlt
and
pushf
pusha
in
add
jle
jmp
jb
arpl
xchg
push
sub
xchg
cmp
int
js
xor
pop
xchg
imul
cmp
mov
and
xor
xor
aaa
cmp
nop
and
inc
lret
xor
insb
add
pop
mov
stos
ret
lds
xchg
dec
ds
std
inc
lea
stc
inc
into
xchg
add
shl
mov
mov
sub
mov
imul
pusha
ret
xchg
imul
sub
add
push
mov
stc
test
lret
xchg
mov
mov
out
sarl
and
push
lock
je
das
mov
jg
jb
mov
int
xor
test
pop
xchg
rol
jbe
jo
cmp
cmp
leave
mov
movsl
cwtl
and
jg
ficomps
outsb
mov
sub
inc
ja
mov
sbb
dec
mov
sarb
xor
push
and
out
sbb
mov
aaa
push
fstpt
jge
adc
imul
ds
lock
repz
fistpl
nop
popf
out
in
pop
and
outsb
fwait
lods
sbb
push
and
push
ret
mov
fists
arpl
repnz
imul
in
adc
scas
adc
add
daa
adc
add
fidivs
notb
lds
mov
repnz
adc
dec
fadds
popf
fs
notb
lret
movsb
add
xchg
out
jo
jae
cmp
mov
mov
xchg
add
xchg
inc
adc
js
pop
out
jnp
and
out
pop
repz
dec
mov
arpl
pop
mov
jbe
pop
jnp
xchg
js
add
ficompl
push
jl
dec
fbstp
in
fsubrl
push
rorb
pop
and
jl
jno
rcr
mov
fisttps
or
mov
repnz
imul
jbe
jbe
sub
xchg
pop
xlat
test
push
out
inc
adc
rolb
lods
lds
sarl
pop
cltd
sbb
jae
out
mov
insb
push
sarl
je
sub
and
push
jge
mov
cmp
out
cmp
adc
adc
mov
pop
test
add
sbb
repnz
add
inc
mov
outsl
mov
fs
into
mov
out
push
sub
stos
ss
call
and
pop
and
jmp
cmp
pop
inc
pop
inc
add
inc
push
pop
sbb
mov
mov
filds
mov
imul
popa
and
incb
mov
push
cmp
push
outsl
leave
lods
push
insl
inc
mov
push
notb
dec
pop
scas
sub
jbe
sub
dec
mov
ret
sub
xchg
pop
mov
loopne
jns
pop
dec
xchg
sbb
dec
mov
imul
and
or
jmp
push
add
shrb
jns
les
jge
mov
cmpsl
pop
push
leave
jno
mov
repz
xchg
jl
not
ss
pop
jecxz
aam
cli
push
xor
into
pop
fildll
pop
mov
jae
jl
jmp
rdmsr
aad
test
and
insb
loopne
mov
inc
std
aad
bnd
ret
cwtl
aaa
ds
rcrb
add
bound
push
inc
subl
cmpsl
data16
lea
je
push
jmp
pop
jl
mov
mov
and
stos
leave
lock
faddp
push
or
jmp
jge
loop
and
loopne
leave
mov
fmull
and
jb
cmpsl
xchg
jg
inc
or
cmp
pusha
mov
mov
sub
cmp
xchg
mov
jbe
dec
jge
jmp
pop
iret
cmc
subb
shlb
pushf
fdivl
insl
dec
in
fndisi(8087
jo
inc
dec
and
loope
cmp
imul
lahf
lods
inc
daa
aas
pop
jmp
mov
xor
push
mov
mov
movsb
xchg
inc
jbe
stos
xchg
nop
arpl
mov
xor
lret
mov
outsl
movaps
movsl
lahf
ljmp
push
cwtl
inc
in
xchg
pop
xchg
sub
iret
icebp
jmp
sbb
mov
out
int
sbb
stc
mov
cmp
pop
in
out
adc
mov
pop
addb
or
mov
pusha
sbb
addr16
or
sub
pusha
sub
jno
sbb
sbb
jae
addl
imul
fistps
fcomi
loopne
movsb
push
sub
xchg
pop
mov
adc
loopne
or
push
xchg
push
dec
leave
xchg
or
mov
sti
cltd
test
cmpsb
pusha
sub
xor
xchg
outsb
mov
andl
fs
pop
insb
push
cltd
mov
xchg
popa
test
packsswb
dec
jge
mov
lahf
sbb
xchg
gs
xor
stc
into
or
pop
loope
int3
fists
jg
xchg
inc
xor
pop
sarb
cmp
xor
fwait
mov
inc
sub
ljmp
inc
jns
sbb
idivb
in
mov
cmp
sarb
js
outsl
repnz
push
cmpsl
inc
lods
pop
jns
mov
leave
pop
inc
pop
xor
cmp
mov
daa
insl
insb
testb
fisttpl
mov
sub
mov
lret
out
popa
ja
xor
stos
or
call
incl
popa
mov
jns
test
testb
lahf
inc
ss
sbb
std
sub
fldl
push
sar
mov
pop
mov
pop
cmp
ss
dec
ret
arpl
popf
in
sbb
or
or
rep
dec
out
pop
sbbb
pop
iret
out
scas
popf
sahf
loopne
popf
insb
lret
mov
mov
in
jne
frstor
pop
mov
pop
push
into
addr16
leave
lret
mov
int3
adc
pop
fwait
addr16
loopne
pop
push
iret
je
and
mov
mov
mov
xchg
add
or
mov
push
jns
sti
enterw
xor
push
shrb
xchg
push
sbbl
xchg
jmp
adc
adc
xor
cmp
sub
inc
mov
pop
imul
repnz
and
mov
inc
cmpsl
repnz
mov
fidivrs
cmp
mov
push
pop
fcoms
mov
sarl
mov
int3
jmp
inc
mov
xchg
mov
aaa
pop
sub
sar
jnp
pop
jb
sub
frstor
pop
gs
call
xchg
push
sub
mov
cli
pop
mov
into
xor
sbb
testl
cmp
nop
mov
je
cmp
inc
inc
lret
arpl
dec
xor
add
mov
inc
lret
stos
fwait
jle
idiv
sbb
dec
mov
cs
dec
clc
movsl
pop
aas
rcrl
lret
push
popa
mov
imul
push
out
mov
cmp
cmp
push
mov
sub
push
test
call
shl
mov
mov
and
pop
jo
daa
js
push
and
lahf
fsubl
incl
sbb
nop
mov
sub
inc
sub
icebp
shll
lock
mov
sub
outsl
lcall
in
outsb
fisubl
xor
mov
in
insl
ja
sbb
enter
movsb
add
inc
lods
test
incb
inc
sub
test
add
mov
in
fimuls
and
push
push
add
dec
jp
das
push
inc
mov
mov
dec
add
movsb
cld
push
movsl
sbb
out
xchg
jo
es
xorl
sarb
sub
lds
inc
xlat
sbb
in
stos
addr16
aas
negl
or
mov
fdivs
sbb
dec
fcmovnbe
inc
cld
fstps
dec
ret
fidivs
in
sub
mov
ss
adc
ret
dec
lods
sbb
dec
mulb
lret
push
clc
xor
lods
jecxz
jle
js
inc
lods
inc
add
add
cltd
xor
dec
in
fisttpl
negb
shld
and
sub
cmpsb
bound
rcrb
insl
jmp
ljmp
mov
fnstenv
lcall
jmp
pop
jmp
aaa
dec
mov
cwtl
sub
push
shll
roll
xchg
mov
pop
pusha
mov
sbb
movsb
sbb
lds
ret
frstor
and
lahf
dec
nop
xchg
push
jp
sbb
lock
scas
pop
mov
xor
cmp
jno
subl
mov
enter
movsb
ljmp
fsub
push
repnz
movsl
aaa
lcall
scas
pop
call
shl
mov
pop
sahf
int
or
pushf
jae
gs
jecxz
dec
sub
mov
mov
add
sbb
sti
outsb
ret
inc
xchg
dec
orb
jb
push
call
push
xor
insb
pop
lahf
jbe
push
stos
scas
or
push
mul
dec
ljmp
jg
pop
cld
sub
cwtl
imul
jecxz
inc
in
orl
inc
insb
test
out
and
sarl
cwtl
jmp
mov
push
sub
popf
or
test
inc
repnz
mov
xor
push
xchg
jle
mov
fs
inc
test
ret
jmp
bound
push
add
dec
mov
xor
sub
popa
popa
jno
dec
andl
out
fmuls
in
aaa
in
pop
and
sbb
jbe,pt
adc
sbb
rclb
inc
xchg
xchg
in
jb
adc
inc
push
pop
sbb
leave
xchg
xchg
push
jne
rcrl
stc
loope
push
pushf
mov
xorb
and
sub
xor
bound
xchg
pop
cli
pop
out
data16
movsl
sbb
in
jle
xchg
fwait
inc
fmuls
mov
xchg
addr16
xchg
out
fwait
rorl
mov
adc
xor
jmp
cmp
add
jbe
fcoml
sbb
lea
iret
xlat
mov
les
cmp
lods
push
add
mov
sbb
add
adcb
call
push
and
lds
sbb
mov
mov
sub
popa
repz
xchg
mov
data16
pop
rorb
ds
aas
mov
cmpsl
lds
pop
xor
xor
lcall
andb
rcrb
insl
cmp
in
or
daa
imul
je
mov
xchg
scas
int
inc
fcmovnu
ljmp
sub
mov
stos
dec
add
fs
test
loope
shrl
cli
aad
mov
cmp
das
daa
das
popf
test
iret
mov
sub
adc
mulb
pop
pop
popf
sub
popf
inc
xor
jnp
mov
jb
in
dec
add
mov
out
jbe
cmovae
into
inc
jle
ja
mov
mov
inc
pusha
in
xchg
andl
lret
je
in
hlt
jb
jae
inc
ret
mov
fs
pop
hlt
sub
repz
and
xchg
mov
lock
adc
jle
jo
and
push
mov
adcl
mov
icebp
jnp
sar
mov
mov
mov
push
add
sub
cmp
movsl
mov
loopne
xor
fimull
xchg
insl
xchg
test
inc
adc
add
iret
adc
clc
leave
aas
sbb
sbb
dec
aad
cmp
jb
cwtl
lret
lock
push
enter
mov
adc
rcl
xchg
xchg
cmpsb
sbb
lock
test
and
lret
les
adc
add
test
lea
call
test
mov
jnp
jne
sbb
pop
xchg
ja
jl
xchg
xchg
and
mov
enter
out
dec
xchg
push
sbb
jae
mov
add
mov
dec
jo
xchg
cs
leave
inc
fcompl
iret
movsl
and
xlat
in
xlat
das
cmp
pop
outsl
pop
fmuls
aas
ror
push
mov
pop
cld
push
xor
jns
test
xor
push
push
mov
inc
dec
jmp
iret
aas
outsb
pop
icebp
mov
loope
adc
push
lahf
loopne
or
push
dec
sub
dec
lcall
cmc
inc
sbb
cmp
jl
and
gs
hlt
mov
popf
dec
mov
dec
lret
lods
push
adc
mulb
enter
mov
mov
sbb
push
sbb
adc
sbb
out
mov
fmul
adc
mov
pop
shrl
mov
xor
lds
inc
arpl
lret
popf
ljmp
sbb
fidivs
xchg
cmpsb
pop
lea
test
orl
les
lds
pushf
inc
popf
jbe
outsl
pop
mov
xor
js
jbe
incb
sub
daa
push
sub
mov
pusha
jo
adc
cwtl
dec
add
push
mov
dec
dec
adc
jmp
and
lcall
shll
push
fwait
mov
shll
repz
addr16
loope
xor
int
stc
loopne
mov
jg
lret
inc
and
adc
push
jg
icebp
stos
pop
fisubs
out
mov
add
daa
mov
fmul
andb
notb
insl
xor
pop
stos
adc
sub
adc
bound
mov
bound
ljmp
mov
sub
push
cmpb
sub
xchg
scas
repz
push
fucompp
push
mov
loope
adc
cmpsb
in
arpl
aam
adc
add
and
test
add
sbb
sub
pop
cld
mov
pop
jne
lods
mov
lods
fwait
xor
in
inc
mov
aas
or
mov
or
mov
testb
in
xchg
adc
fcompl
call
in
ja
enter
add
and
push
into
ja
test
out
icebp
pushf
inc
jg
mov
dec
faddl
fldt
fnstcw
test
dec
fisubrs
loopne
dec
mov
adcl
cld
shrl
dec
dec
rclb
or
mov
cltd
push
lahf
loop
or
notl
cwtl
cli
enter
daa
jge
pop
sbbl
mov
xor
mov
sbb
popf
cmp
arpl
rcll
cltd
jl
ljmp
addb
es
sub
jp
xor
adcb
testb
pop
mov
cmp
push
hlt
mov
xchg
call
jmp
stos
cltd
sub
xchg
jne
jmp
clc
jmp
xchg
addb
insl
pop
les
xor
int
cwtl
inc
mov
lods
pop
and
ss
ss
mov
or
pop
adc
jmp
lahf
iret
fldt
push
jle
sub
push
adc
dec
imulb
and
mov
cmp
jle
repnz
jmp
or
and
jbe
mov
xchg
aad
adc
in
jmp
inc
pop
push
clc
pop
bound
jne
ja
dec
pop
add
jbe
xchg
aam
xor
insl
rcll
lcall
pushf
xor
les
xchg
pushf
std
cwtd
rcrb
mov
stos
jl
xchg
jg
mov
cmp
mov
clc
test
and
push
mov
mov
idivl
mov
pop
lods
push
pop
divb
pop
sub
push
adc
and
dec
pop
push
call
xor
add
and
and
fwait
sbb
jno
push
je
push
pop
pop
lret
sbb
loope
push
dec
lods
ja
mov
pop
nop
in
xor
mov
ds
fs
or
dec
add
fidivs
mov
insb
sahf
ja
xor
and
fsubr
into
cmpsl
jecxz
repz
push
aas
jecxz
or
adc
jns
ljmp
inc
pop
push
icebp
mov
ds
cmp
mov
xlat
jp
pop
lock
pop
sbb
movsl
jmp
in
popl
scas
push
sub
in
xor
sbb
icebp
mulb
pusha
inc
push
pop
imul
or
loope
or
sub
cmpsb
jnp
dec
dec
xchg
jl
je
mov
xchg
outsb
lods
jge
fldenv
pop
or
mov
push
lods
xchg
xor
dec
xchg
in
xor
xor
xor
push
aaa
lock
arpl
shlb
cmpsb
sbb
rcrl
jno
mov
xchg
pop
pop
pop
push
xor
in
or
jp
lahf
push
rcrl
mov
jecxz
xchg
push
jp
jae
inc
mov
pop
cmovs
jo
loopne
xchg
mov
mov
mov
lret
mov
shlb
sbb
cwtl
mov
mov
inc
cld
js
hlt
mov
push
add
jnp
mov
dec
sbb
pop
mov
dec
inc
pusha
mov
icebp
ljmp
mov
inc
ret
sahf
sub
xchg
sbb
leave
jmp
pop
addl
sti
repnz
dec
into
adc
pusha
jbe
dec
iret
pop
dec
push
lea
cmpsb
imul
jl
sbbb
push
loop
xchg
stc
pop
ret
loope
mov
repnz
js
cltd
repz
dec
ljmp
xor
shll
xor
data16
cmp
mov
jecxz
shlb
cmpsb
cmp
aad
mov
add
scas
adc
mov
mov
pushf
xchg
fdivs
add
out
icebp
rorl
xchg
inc
fstp
jmp
mov
shll
rcll
dec
pop
push
adc
inc
clc
sbb
cmp
jbe
cmp
push
lcall
jo
outsb
sbbl
xor
dec
mov
xchg
pop
mov
pusha
lds
leave
sti
inc
adc
imul
maskmovq
idivl
push
push
div
cwtl
mov
or
and
rorb
es
push
push
shrl
jge
and
adc
dec
iret
lcall
mov
pop
jecxz
inc
stos
cmp
pop
sub
jmp
cs
int
scas
enter
stos
fs
fisttpll
pop
sbb
pushf
sbb
xchg
nop
dec
cmp
repz
push
icebp
mov
xor
mov
cmc
out
shrb
push
lcall
jnp
or
in
leave
lods
mov
inc
lret
out
dec
cmpsl
in
pop
aad
mov
push
sub
mov
mov
andl
inc
repz
push
mov
or
inc
hlt
mov
mov
in
inc
out
loopw
js
loope
mov
std
sub
sbb
xchg
sbb
jns
jg
lock
aad
cltd
pop
cmpsb
mov
sbb
out
insl
test
or
and
and
in
int
push
pop
mov
out
xor
insl
cmp
and
jb
jnp
mov
and
xor
and
das
jmp
pop
xchg
ret
mov
jns
dec
rcr
aaa
xor
mov
jle
or
faddl
aas
in
cmpsb
add
and
dec
fsubr
lret
mov
xchg
ret
cmp
shll
pop
leave
mov
mov
add
jbe
inc
daa
les
xor
enter
cmpsl
xchg
pop
xchg
pop
xor
int3
dec
lahf
dec
cmpsl
sahf
enter
out
mov
loope
lahf
clc
sbb
mov
dec
mov
dec
sub
js
enter
aad
push
leave
mov
paddsb
push
es
fnstsw
lods
mov
sub
pop
cmp
cmp
mov
add
nop
ret
andb
inc
and
or
out
mov
popa
adc
sbb
push
push
and
dec
ja
je
std
jmp
das
mov
mov
lahf
inc
sahf
xchg
clc
and
movsl
mov
negl
lds
sub
scas
pop
cli
bound
push
cmpb
arpl
pop
mov
pop
mov
cli
mov
dec
imul
inc
cwtl
in
dec
sar
mov
jno
sub
hlt
insl
movsl
data16
sbb
inc
mov
ss
jle
sbb
lock
daa
mov
xor
jbe
add
lcall
ss
gs
pop
lcall
sub
jae
dec
jle
insb
pusha
cmp
add
cmc
pop
xlat
data16
lahf
cmc
mov
push
aad
jmp
in
push
outsl
daa
sbb
iret
xor
aas
inc
jp
ljmp
rorl
sahf
call
mov
dec
dec
dec
xchg
or
sub
add
push
ret
mov
insl
daa
fisubs
cmp
std
addb
push
shlb
and
hlt
jbe
push
shrw
cmp
sub
xorb
xchg
dec
xchg
jecxz
je
push
cmp
fs
rcll
pushf
sub
pusha
mov
adc
cmp
adc
mov
jp
push
and
scas
sub
mov
in
dec
mov
in
mov
adc
inc
cmpsb
in
inc
dec
inc
pop
int
nop
scas
lcall
int
scas
data16
lret
push
mov
or
jo
mulb
int3
mov
popf
fisttpl
leave
jmp
inc
imul
and
into
sbb
sbb
mov
cmp
andl
and
in
xchg
sub
outsb
mov
or
push
adc
cltd
mov
add
outsl
add
mov
and
rcrb
jae
gs
xor
sub
out
stc
in
shrb
outsb
mov
movsl
mov
push
sub
xchg
popf
movsb
int3
fs
in
dec
int
insb
subb
sub
pushf
pop
loopne
fldcw
pop
xchg
sahf
sti
inc
pusha
mov
mov
fwait
out
popa
insb
test
inc
mov
call
jecxz
mov
jnp
int3
add
mov
inc
icebp
and
lock
insb
push
ret
out
mov
dec
mov
mov
sbb
nop
cs
rorl
push
jb
and
insb
jne
dec
data16
into
or
ss
cld
pop
pop
mov
dec
imul
das
and
or
lahf
scas
add
lock
mov
pop
xchg
mov
pop
aas
hlt
adc
cmp
and
imul
sub
icebp
sbb
mov
outsb
adc
fwait
stos
sub
mov
or
loope
shrb
shl
cmp
inc
pop
imul
inc
mov
jne
icebp
dec
sub
lea
pop
pop
js
out
mov
outsb
mov
call
sbb
not
movsl
add
jno
je
and
hlt
adc
push
cs
jg
imul
mov
ljmp
lock
popf
test
jae
cmp
mov
or
dec
cld
or
and
or
std
dec
xchg
mov
icebp
shr
xchg
icebp
adc
inc
dec
xor
daa
adc
iret
aam
int
pop
adc
scas
inc
into
sbb
push
adc
pop
dec
pop
in
cmc
lds
push
mov
and
lds
lds
cmp
movsl
aaa
add
jmp
rcrb
sub
inc
into
add
xchg
push
cld
pop
in
and
mov
jle
jns
stos
adc
jae
ss
add
jns
sub
xchg
sahf
aad
lds
mov
or
mov
jmp
mov
sarb
mov
jno
test
ja
push
jno
test
or
cmpsl
push
cmp
pop
adc
in
pop
xchg
les
mov
cld
inc
std
cmp
push
les
insl
je
xor
sbb
cmpsl
outsl
shll
mov
jbe
add
mov
test
dec
add
sbb
ja
outsb
jecxz
dec
movb
sbb
pop
sbb
mov
icebp
icebp
dec
call
insb
cmp
fstpt
pop
out
add
inc
pop
ljmp
adc
add
pop
enter
fldcw
cmp
xchg
inc
cwtl
inc
pop
dec
sbb
jmp
je
adcl
or
rcrl
iret
mov
fildll
dec
cli
outsl
xchg
or
pop
add
inc
or
push
push
in
arpl
jne,pt
mov
cmpsb
lea
loopne
jle
dec
sahf
imul
les
out
pop
lret
outsl
enter
faddl
add
sbb
into
xor
cmc
mov
lods
lcall
enter
sub
rcll
pop
push
mov
adc
sbb
jns
sbb
test
aas
gs
sub
iret
dec
les
dec
loop
sub
jae
and
xor
fisubrl
add
aaa
arpl
movsl
xlat
xchg
mov
imul
les
fistpll
int
scas
inc
ljmp
fbstp
ficoml
and
mov
data16
shll
ret
cmp
xchg
pop
js
pop
subl
cmp
cltd
or
fxtract
stc
lods
pusha
sub
call
jp
mov
push
xor
shrb
icebp
add
and
jo
mov
pop
ss
aad
enter
mov
xor
push
in
ss
pop
js
test
xchg
adc
sahf
out
mov
stc
xchg
sub
xchg
mov
scas
jbe
icebp
jge
xor
jnp
mov
sbb
push
mov
jmp
in
inc
rcrb
or
sub
std
clc
jge
push
popf
fsubp
or
ds
mov
dec
adc
mov
in
aas
mov
push
push
in
jge
pop
movsb
out
shl
push
sbb
arpl
je
ds
mov
data16
mov
hlt
pslld
fistpll
sbb
loope
test
fcoms
ja
jnp
mov
and
shlb
or
cmp
sub
ds
pop
test
adc
lahf
scas
or
jne
out
fs
jo
mov
pop
popl
loope
and
fldcw
sarl
mull
sarl
clc
mov
pusha
into
mov
or
lds
pushf
dec
cmp
nop
adc
or
mov
or
xor
push
out
aaa
xor
clc
into
dec
loope
dec
clc
add
push
xchg
aaa
in
adc
pop
push
jg
imul
das
data16
int
adc
movsb
jns
add
xchg
cli
mov
xor
xchg
adcl
shlb
jl
inc
dec
add
cmp
es
clc
call
or
adc
sbb
cmp
daa
cmp
dec
dec
loop
stos
push
or
xchg
fwait
ljmp
sbb
lds
sub
sub
sahf
xor
push
out
sub
push
pop
insl
iret
popa
push
fisttps
and
lahf
xlat
pop
push
es
add
stos
fisttpll
movsl
subl
scas
jg
stos
ds
out
fldenv
insb
xchg
dec
jb
hlt
dec
pop
int3
inc
mov
push
aam
inc
sbb
dec
xor
inc
lock
jno
dec
pop
lock
xchg
scas
xorb
outsb
arpl
fdivs
jecxz
xor
jg
mov
js
or
jne
cmpsl
aad
aas
add
xchg
and
cltd
dec
inc
pop
call
notb
mov
in
int3
add
sub
xchg
dec
movsl
fbstp
mov
sub
sub
rcrl
mov
jmp
fistpl
xor
and
sub
jnp
sub
cmpsl
out
push
jo
lahf
stos
cmp
adc
mov
ror
fnsave
jbe
push
xor
dec
or
out
sti
add
jns
aaa
adc
mov
call
push
xchg
sbb
pop
out
int3
rcr
hlt
jbe
xor
push
xor
test
aam
push
imul
ljmp
es
imul
sbb
aam
pushf
sub
stc
xchg
das
jp
and
lods
decl
jbe
sar
jp
outsl
adc
daa
movsb
push
lret
enter
mov
sub
mov
jno
inc
cmpsl
sbb
dec
in
je
popa
cmp
jg
jl
xchg
das
sbb
inc
scas
xchg
jl
je
add
ret
xchg
stc
xor
std
and
mov
sbb
repz
cld
and
leave
push
or
cmp
flds
or
rolb
inc
stos
sub
pop
adc
sub
faddl
cmpsb
mov
rorl
or
xchg
fdivrs
lods
xchg
push
stos
out
ja
jecxz
iret
push
cmc
pop
in
test
cmc
filds
hlt
into
punpcklwd
inc
pop
lahf
mov
cmp
push
xchg
or
test
mov
in
mov
mov
pop
dec
in
pop
stc
scas
ljmp
fnstenv
push
cmp
iret
dec
daa
mov
fidivrl
mov
push
sub
aaa
jg
mov
lods
adc
sti
lock
fdivr
push
jae
fstps
ret
pop
or
fwait
push
sub
nop
lods
push
xchg
mov
mov
sahf
dec
aam
pop
pop
test
dec
push
xchg
push
pushf
jae
add
dec
mov
insb
xor
xchg
pop
pop
lahf
clc
pop
dec
dec
in
jb
into
mov
mov
out
sbb
push
or
negl
sub
repz
xor
je
inc
scas
and
movsb
out
daa
shl
ja
int3
jle
pop
xor
lds
push
push
pop
cwtl
repnz
inc
jle
inc
jl
arpl
scas
ja
dec
mov
push
sub
sub
sub
ret
cmp
testl
xor
notb
xor
dec
popa
leave
inc
out
je
pop
bound
mov
shlb
inc
add
inc
xor
pop
lcall
jae
js
rorb
call
xchg
in
xor
mov
inc
pop
mov
jmp
inc
add
sbb
lret
je
jno
or
ret
mov
movsb
mov
into
pusha
cmc
cmpsb
repnz
adc
mov
lock
inc
mov
and
int3
aas
out
lcall
push
pop
push
fmulp
dec
outsb
fisttps
stc
shll
dec
out
ret
adc
pop
cmpsl
adc
int3
push
adc
enter
inc
jns
dec
js
sbb
xor
jle
xlat
pushf
call
jo
mov
push
mov
cmp
push
push
js
push
sub
stos
pop
pop
and
adc
outsb
dec
imul
sub
lret
inc
ud2
popa
hlt
inc
fstl
jno
mov
cld
jno
pop
inc
icebp
cmp
lods
popl
daa
sub
and
cmp
sbb
xchg
ret
stos
iret
sbb
push
xor
outsl
clc
cld
clc
das
sti
loope
loopne
adc
ret
mov
out
fsubrs
lahf
mov
pusha
aam
or
dec
push
aad
out
lret
stc
pop
mov
fcoms
lea
mov
stos
sti
mov
ds
jg
rcrl
jecxz
pop
push
lods
xlat
adc
cmpsb
stos
push
sbb
xor
sbb
test
roll
inc
fimull
xor
xor
mov
sbb
in
jecxz
repnz
xchg
cmp
pop
and
mov
sbb
or
dec
into
enter
xor
ret
mov
scas
ja
jle
pop
and
arpl
and
inc
jle
sbb
dec
xchg
jno
pop
push
xbegin
push
and
pop
cld
pop
xor
xorb
test
int
ss
les
sub
jno
mov
xchg
inc
inc
pop
push
aaa
test
jae
adc
and
push
xor
xchg
ret
sbbl
sbb
pop
dec
jmp
iret
imul
sarl
icebp
xchg
dec
pop
aas
mov
cld
push
inc
icebp
add
add
pop
repz
shrb
imul
das
fcoms
jp
addb
mov
popa
in
mov
inc
stc
xchg
enter
ja
test
ss
jge
insl
jo
sub
sarl
adc
inc
test
out
jecxz
js
icebp
gs
mov
lds
jae
imul
out
iret
sahf
pop
and
cwtl
mov
jp
or
dec
imul
mov
and
into
and
push
mov
js
mov
pushf
sub
add
loop
daa
arpl
nop
sub
int3
lret
pop
rorl
cli
mov
cltd
aad
mov
jae
push
add
sbbb
aaa
ja
jmp
mov
pop
mov
outsb
lahf
and
fstps
push
xlat
jge
mov
jns
hlt
and
mov
sub
dec
aas
dec
or
push
neg
mov
pop
mov
jbe
sub
sahf
adc
outsb
adc
icebp
stos
adc
mov
xor
adc
popa
rcrl
jae
jno
pop
add
xchg
pop
mov
div
sbb
out
dec
xor
fwait
dec
sbb
inc
sti
or
ret
xchg
dec
sahf
jne
fwait
jle
mov
dec
mov
cmp
sub
enter
sub
jmp
int
arpl
mov
test
in
ljmp
cmc
scas
mov
mov
add
inc
mov
adcb
pop
push
pop
test
imul
cmp
mov
outsl
aas
push
jae
enter
pushf
mov
repz
lret
inc
mov
and
add
ret
ja
adc
lds
sbb
jecxz
std
add
insb
lret
call
movsb
pusha
sbb
popf
loope
mov
push
jmp
sbb
stc
mov
dec
rolb
cmpsb
mov
test
xchg
mov
xor
push
pop
xor
sbb
inc
lret
nop
std
cs
es
sbb
xor
sub
loope
ficoml
jge
and
into
in
jnp
fldenv
stos
adc
push
stos
push
xchg
pop
rcrl
sub
in
push
jo
aas
push
in
xchg
mov
in
insb
mov
loope
scas
scas
icebp
push
mov
cmp
add
in
jl
push
in
cmp
lds
roll
btcl
sbb
stos
roll
cmpsb
mov
xchg
jg
adc
jle
js
add
outsl
and
loop
test
aad
xor
pushf
jecxz
mov
test
adc
into
scas
fwait
adc
push
sbb
xchg
sbb
out
jo
jo
mov
pop
jle
js
mov
fists
les
out
inc
rcll
ss
mov
jb
add
cs
les
jp
push
rcrb
out
and
pusha
push
test
mov
xchg
rcrl
iretw
cltd
dec
insl
inc
out
in
movsb
jne
iret
lret
dec
cmp
shl
sub
push
int
xchg
dec
fldcw
jo
fldt
adcl
pop
or
fdivl
mov
out
andb
cmp
ret
lock
das
jnp
sub
stos
int3
into
xchg
into
mov
out
jge
mov
adcl
loopne
lods
sub
iret
shrb
ljmp
aad
movl
inc
jl
add
mov
insl
push
jnp
movsb
xlat
call
les
fs
ret
das
insb
or
mov
push
loopne
repz
mov
mov
sub
int
lret
hlt
cmp
sub
imul
int
xor
adc
mov
mov
inc
push
inc
out
aad
aam
xchg
jg
stos
push
ret
pop
sbb
xchg
inc
stos
cmp
sbb
adc
push
inc
out
shll
das
xchg
push
sub
mov
push
movl
incl
gs
hlt
push
xor
fdivp
cwtl
iret
mov
lods
scas
sbbl
sub
push
lret
cmpb
cmpsb
scas
js
and
inc
push
or
xchg
mov
sbb
mov
pop
imul
leave
sti
cmp
fadds
pop
or
cwtl
sub
sub
xchg
fidivs
cwtl
mov
jle
test
ret
dec
in
loopne
lock
in
nop
dec
lcall
pop
xchg
std
insl
in
and
xlat
fldcw
clc
jl
push
aas
adc
adc
pop
cmp
push
cmp
sbb
imul
daa
data16
cmp
lcall
add
sub
push
jle
sub
call
xchg
imul
int3
cwtl
test
adc
sbb
cmp
dec
xor
je
jge
cmp
insl
pop
jmp
sbb
scas
ret
mov
add
sub
push
add
mov
push
sbb
cmp
push
cmp
sub
add
sbb
cmp
filds
lods
cli
loopne
lahf
cmp
je
push
imul
aaa
rcrb
popa
and
pop
mov
pop
sub
push
aaa
mov
xchg
push
mov
inc
cli
lret
inc
clc
cmp
fstpt
cmpsl
dec
adc
addr16
mov
xlat
aam
stos
lret
jo
push
or
cbtw
iret
out
je
cmp
call
jno
or
pushf
cs
push
lds
fwait
mov
movsl
pop
sbb
imul
or
jp
jne
or
mov
xchg
cwtl
cwtl
xor
or
xor
sub
lea
xor
mov
push
jnp
loope
mov
aas
ret
sti
xchg
repnz
loop
fdivrs
dec
cltd
les
add
add
cmpsb
aam
inc
pop
icebp
daa
nop
xchg
inc
ret
push
out
scas
jg
dec
or
lret
stos
enter
rcr
mov
scas
scas
fldcw
dec
aas
test
cmpsb
call
inc
loop
imul
sub
xor
push
mov
add
lods
es
into
add
nop
mov
adc
mov
mov
mov
loopne
fcomps
and
xchg
icebp
lods
mov
xor
rorl
sub
test
push
lret
cmp
sahf
push
xor
sub
pushf
test
sbb
iret
insl
test
arpl
and
stos
ja
push
rorl
dec
xor
cli
and
out
leave
dec
leave
pop
mov
lret
in
call
add
inc
hlt
xor
inc
and
icebp
negl
int3
movsl
daa
add
lds
xchg
jl
cld
jecxz
cmpsl
jle
or
mov
and
rcrb
into
incl
mov
sbb
insb
mov
fdivrs
movsl
std
push
and
insl
cmp
xor
jg
mov
jae
daa
fchs
bnd
push
pop
out
rolb
xchg
sbb
aad
aam
pusha
pop
gs
mov
out
sti
divl
das
jns
das
shlb
rorl
sarl
mov
lods
xchg
pop
jo
push
pop
rclb
and
mov
cwtl
pop
loope
jb
push
rorl
data16
mov
mov
sti
fdivp
loopne
jns
inc
inc
imul
pop
in
mov
into
and
aaa
ret
outsb
lahf
addr16
aaa
and
adcl
std
lock
sbb
or
rcll
xchg
jecxz
or
adc
cmpl
add
rcl
stos
out
rcrl
fsubrp
inc
fdivr
add
adc
dec
out
les
inc
sub
sub
push
jg
cmp
int3
push
xchg
out
cwtl
gs
fimuls
mov
or
or
mov
cmp
cmp
gs
mov
scas
sub
lahf
movsb
jne
imul
cli
lea
sarb
push
les
jno
ja
cmp
call
push
aam
inc
mov
fists
or
gs
les
subl
cmp
adc
arpl
mov
scas
mov
pop
pop
loopne
ss
cmpsb
or
sbb
add
add
int3
aas
ljmp
jge
dec
in
jo
rorb
rol
push
push
xchg
lcall
stos
add
rol
sbb
xor
popa
scas
dec
pusha
add
into
dec
dec
cmpl
fdivl
or
stos
shrb
ss
cltd
push
psrad
adc
out
and
xlat
add
fbld
aaa
fcomp
add
adc
negb
push
cmp
aad
into
je
xchg
and
dec
mov
or
test
mov
outsb
mov
and
insb
pushf
jp
enter
sub
xchg
lds
pop
inc
stos
lock
jo
push
pop
jae
outsb
movsl
scas
cli
loopne
stos
iret
in
into
sahf
xchg
mov
and
movsl
cmp
and
push
inc
xchg
push
sahf
in
mov
arpl
push
in
mov
xor
cltd
subb
sbb
out
sub
insb
xchg
rcll
or
and
pop
addr16
sbb
js
adc
xchg
sub
pop
sbb
add
mov
mov
enter
xchg
inc
adc
outsl
inc
mov
stos
hlt
inc
mov
cmp
popf
int3
mov
mov
xchg
cmp
fs
xchg
xchg
js
addb
test
xchg
jae
daa
cmp
std
xchg
cltd
inc
das
jle
pop
and
cs
xor
xor
outsb
testb
jno
mov
pop
loopne
jbe
xor
cli
xor
cmc
sub
jae
xchg
iret
dec
xor
mov
pop
or
cs
jp
dec
mov
mov
sub
pop
dec
sbb
outsl
dec
icebp
mov
jno
or
jecxz
jmp
add
lahf
push
xor
movsl
mov
dec
adc
or
dec
imul
xor
int
addr16
push
or
js
mov
popl
arpl
movsb
pop
ds
sub
mov
sub
inc
jge
cmc
pushf
mov
cs
push
leave
dec
sub
pop
add
sub
rcll
out
pop
pop
mov
mov
jne
dec
dec
outsb
cwtl
sbb
les
imul
cld
add
enter
jecxz
test
xchg
xchg
scas
stos
repz
pop
mov
and
mov
sarl
dec
push
add
push
fadds
fcom
xchg
fidivs
pop
cmpsb
outsb
shrb
add
into
repnz
sub
lret
push
ret
scas
mov
pop
pop
mov
ret
pushf
xchg
out
icebp
dec
cltd
fwait
inc
jnp
stos
popa
mov
jno
adc
std
xchg
mov
xchg
mov
inc
dec
xchg
inc
dec
ljmp
ja
stos
cmp
mov
push
mov
cli
or
mov
data16
subb
jecxz
out
inc
loop
lods
fcomps
xor
out
dec
add
shl
pop
stos
cmpsb
arpl
mov
stos
iret
ret
sbb
xchg
gs
enter
daa
iret
dec
mov
iret
dec
idivl
test
aas
mov
popa
lret
sbb
popa
negb
xor
jmp
popf
adcb
ljmp
imul
dec
xor
xor
fisubrl
jnp
imulb
aaa
aad
sub
rolb
and
xchg
mov
cmp
sbb
fimull
xor
sti
stos
shrl
sbb
aam
push
movsl
ja
idivb
scas
in
adc
int
int3
rorl
shr
into
inc
mov
mov
es
jecxz
inc
sub
and
sub
aam
inc
stc
xchg
in
sbb
pop
pusha
lret
jns
cmp
scas
out
popa
mov
mov
and
cmp
sbb
fxch
out
stos
pop
addb
xchg
repz
add
shrb
mov
roll
rcrl
rol
push
test
int
aad
adc
push
iret
es
jmp
or
cmp
pop
and
outsl
push
push
ds
xor
mov
movsl
loop
jo
push
in
cmp
cmp
dec
fldl
or
and
je
push
pop
lret
sub
mov
lea
and
imul
xchg
push
jp
push
pop
aaa
fistpl
sbb
lea
out
popl
movsl
hlt
lds
ljmp
xchg
mov
jb
aad
shlb
push
jnp
push
inc
aas
jl
push
cwtl
mov
mov
ret
fprem1
cld
pop
mov
fldt
fildl
xchg
add
mov
jg
aaa
jg
fwait
add
orl
xchg
add
enter
inc
jbe
push
xor
push
cmp
enter
js
lods
pushf
mov
jecxz
das
mov
push
push
stc
fnstcw
insb
mov
out
adc
inc
pushf
push
mov
mov
pop
ljmp
xor
cmpsl
andb
dec
xchg
xchg
fcoml
dec
mov
incl
xor
inc
test
add
scas
jge
adc
mov
lods
sarb
jecxz
push
bound
imul
dec
or
jge
dec
xlat
dec
mov
and
nop
data16
es
dec
push
xchg
lret
bound
adc
ficompl
rolb
mov
insl
dec
js
push
pop
add
push
push
and
cmp
rclb
shll
adc
dec
sub
jbe
call
jmp
dec
dec
ja
clc
imul
shll
aad
fistl
mov
loope
mov
loope
inc
into
rcrb
fst
ja,pt
or
jle
sbb
mov
bnd
jb
rcrl
lret
push
ror
dec
mov
sbb
pop
daa
xchg
add
incl
pop
inc
dec
mov
pop
sub
dec
mov
pop
xor
setge
scas
xchg
scas
cld
mov
jle
in
out
mov
stos
mov
pop
inc
sub
xor
int
rorl
mov
sarl
push
fbstp
int3
sbb
je
bound
jae
xchg
in
popa
roll
add
sbb
lea
xor
cwtl
stos
leave
leave
ds
jb
sub
push
mov
mov
test
imul
out
scas
stos
ret
sbb
pop
cmp
xor
push
ret
fiaddl
insb
sti
nop
ret
daa
sbb
movsb
iret
fstp
je
fildl
incb
gs
adc
shrb
mov
inc
dec
inc
pusha
mov
and
repnz
pop
xorw
and
lock
jns
testb
add
cmp
outsl
or
out
rep
mov
jnp
cmpsb
and
cmpsb
jecxz
pop
dec
aaa
fsubrl
pop
add
mov
pminub
test
das
push
jmp
test
arpl
pusha
ret
dec
ret
push
adc
gs
neg
add
xchg
mov
dec
cmpsb
adc
inc
nop
adc
fists
pop
mov
mov
ret
jl
aam
stos
xchg
subb
aam
pusha
sub
xor
dec
nop
xchg
xchg
xchg
lcall
setns
lds
insl
xchg
xchg
outsb
sub
xchg
int3
mov
jo
bound
fimuls
jp
pop
inc
filds
cwtl
cltd
xchg
xchg
aaa
sbb
test
push
or
fnstenv
andl
aam
xor
pop
push
loopne
cmpsb
andl
out
push
popf
lea
test
mov
cmp
imul
rcrb
lahf
push
fs
cld
xchg
lds
orb
fnstcw
movsl
ror
pop
inc
xlat
push
lret
xchg
ja
fdivl
lret
in
lods
sub
dec
daa
in
pop
jno,pn
lahf
inc
lret
dec
inc
call
xorl
imul
idiv
lds
mov
adc
fcomip
ret
xchg
adc
or
dec
push
pop
jl
rcrb
or
insb
ja
lahf
lods
mov
in
in
test
add
inc
dec
into
in
xchg
push
ret
mov
sar
cmp
mov
mov
push
add
lret
or
jo
and
shll
stos
pop
mov
push
outsb
arpl
pop
repz
sub
dec
add
fcoms
jl
or
inc
into
ret
cmp
inc
adc
sub
mov
out
mov
adc
js
push
imul
cmp
adc
xchg
std
adc
jns
jge
and
pop
sub
repnz
je
imul
cli
cmpsb
scas
fnsave
and
lcall
mov
je
mov
jb
lcall
stos
mov
hlt
test
or
xor
fldenv
fsubr
mov
xor
adc
mov
and
and
iret
mov
and
ja
lds
mov
dec
jo
mov
add
adc
add
and
or
mov
jle
xchg
cmc
mov
push
addr16
stos
cmp
mov
mov
daa
adc
xchg
or
add
sub
idivl
dec
imul
js
mov
lret
in
and
dec
cltd
fld1
jbe
mov
adc
mov
mov
or
jg
fcmovne
mov
aaa
int
mov
out
mov
fstps
and
in
out
sti
pop
inc
jns
test
mov
lret
push
into
push
xchg
or
test
jl
shrb
mov
or
cmpb
pop
xchg
cltd
outsb
enter
adc
ljmp
pop
repnz
aam
subl
and
or
sbb
pop
inc
mov
outsl
fmuls
jbe
dec
jmp
add
addb
dec
jne
push
xor
push
inc
in
mov
rorl
xchg
sub
addr16
mov
push
mov
mov
fildl
fildll
mov
jb
testl
xor
pop
adc
cmp
lret
ret
adc
sysenter
xchg
sbb
lret
aaa
test
aas
push
and
imul
dec
jbe
repz
xchg
sub
or
mov
adc
shrl
xchg
and
repnz
cmp
stos
cmp
lods
and
lods
jge
lret
add
seto
fldcw
ret
cmp
fldt
xor
ja
push
arpl
lret
repz
ss
sub
fsubs
sbb
and
sub
sbb
stos
mov
imul
or
cmc
xchg
popf
mov
leave
lods
movsb
jnp
test
shr
pop
out
out
and
and
xor
mov
lcall
adc
mov
shll
xchg
inc
jle
add
jae
mov
adcl
fiaddl
or
mov
and
pop
loopne
sub
jl
rcrb
popf
pop
xchg
jge
sub
mov
push
inc
pop
add
enter
sti
push
adc
insl
out
fisttpl
mov
out
mov
mov
xchg
jg
stos
pop
shr
sub
stos
aas
dec
lret
cs
mov
inc
mov
push
dec
cld
ss
mov
or
lock
xor
mov
inc
mov
inc
mov
add
or
adc
data16
cmpsl
fistps
nop
lret
sub
shr
fsub
outsl
xchg
lahf
xor
incb
xchg
cmp
jo
aaa
daa
cmp
sti
subl
call
aas
pop
jno
loope
ret
fisttpl
inc
sub
push
xchg
leave
or
lcall
xchg
dec
mov
dec
mov
rcll
jl
lds
dec
add
xchg
addr16
rorb
rcr
jmp
mov
xchg
push
mov
inc
sub
dec
or
imul
push
rolb
stos
sbb
rcrl
shll
xor
mov
xor
jb
iret
xlat
add
pop
addr16
add
and
rorb
or
shrb
xor
loop
mov
mov
dec
in
mov
repnz
std
hlt
iret
aaa
icebp
adc
gs
and
adc
adc
pop
xor
mov
add
loopne
jmp
cmp
sub
xchg
stos
mov
push
inc
fs
and
fs
stc
ds
xchg
je
or
out
jns
mov
xlat
push
ret
or
imull
mov
jne
outsb
pop
dec
ljmp
and
ja
mov
inc
ret
jo
sub
jne
arpl
int
sahf
lds
adc
push
pushf
push
jecxz
loop
dec
push
adc
cmp
mov
icebp
cmpl
push
cmp
adc
mov
pop
mov
jo
outsl
adc
add
adc
xchg
js
loope
xchg
push
imul
loope
loope
ret
stc
loope
shl
xlat
push
ret
test
outsl
insl
fiaddl
mov
gs
pop
xchg
aas
mov
test
or
xchg
pop
popa
mov
mov
sub
add
sbb
div
and
adc
and
xor
push
fdivl
pop
ja
xor
jecxz
inc
jbe
pop
addb
sbb
fnstenv
or
xchg
stc
mov
test
mov
in
in
inc
xor
push
loope
jnp
imul
cmp
cli
xor
stos
call
mov
dec
rolb
das
aad
xor
into
and
xchg
add
mov
js
push
fs
cmpsl
bound
jecxz
outsl
out
cmp
sbb
scas
mov
adc
dec
mov
std
dec
imul
inc
icebp
pop
stc
jmp
mov
push
mov
xchg
or
jle
insl
lods
mov
jne
cs
mov
mov
jp
mov
inc
mov
clc
daa
mov
mov
add
test
sbb
cmc
cld
and
push
test
out
xchg
cld
shll
mov
xchg
scas
xchg
add
mov
lock
out
or
jge
cltd
repnz
pop
lret
jle
lret
cmp
add
int3
aaa
xchg
xchg
jnp
sbb
pusha
pop
enter
popf
sub
daa
js
shrb
or
cmpsl
movsb
mov
add
popa
mov
adc
scas
push
sbb
sbb
adcl
mov
das
pop
in
repz
sbb
add
inc
into
das
pop
inc
shl
adc
int3
dec
add
mov
addr16
push
cmc
sarb
push
sub
loop
mov
lods
cmc
cmpsl
xchg
dec
insl
fstpt
arpl
addr16
lea
cltd
shrb
cmp
test
stc
bound
test
add
push
std
jae
gs
fmull
add
add
sbb
cwtl
xor
and
jge
mov
or
jp
test
ret
xchg
sbb
imul
fildl
xchg
popa
xchg
repnz
mov
shrb
iret
cmp
addb
jg
mov
aaa
jl
xor
add
pminsw
pop
rorb
xor
xchg
clc
fs
inc
ljmp
iret
xchg
inc
data16
int3
xchg
sahf
ret
dec
and
pop
stc
test
or
or
jg
fs
inc
lock
pop
adc
je
mov
loopne
mov
hlt
push
aad
adc
in
cmp
fisttpl
pop
fisttpl
add
sbb
pusha
test
or
sbb
stc
mov
loop
dec
repz
std
inc
cmp
xchg
pushf
pop
xchg
sub
in
push
mov
cld
sub
adcl
mov
push
dec
inc
jns
or
ljmp
inc
push
sub
outsl
or
add
imul
pop
lcall
hlt
jbe
pop
mov
loop
mov
rorl
into
push
cmpsb
test
adc
lahf
std
xor
lret
dec
cmp
cwtl
dec
jmp
or
ds
ljmp
mov
notl
add
cmp
out
andl
jle
pop
imul
aas
or
mov
cmp
sub
push
mov
jnp
pop
push
mov
adc
jecxz
add
mov
or
testb
sar
push
rcrl
js
pop
add
lock
js
jno
repnz
rorl
xchg
add
pusha
jle
cmpsb
test
dec
ja
adc
and
push
loope
xchg
mov
mov
scas
out
sub
aad
cmp
dec
mov
mov
dec
inc
into
fstpl
adc
and
push
in
jo
rorb
pminub
fldl
sar
sbb
sbb
pop
mov
mov
fistl
push
mov
sub
fcomi
stc
dec
movsb
mov
inc
dec
loopne
popa
xor
adc
addl
cld
and
loop
int
loop
cmpsl
int
push
xor
scas
dec
cmp
push
mov
fcos
cmp
mov
ljmp
outsb
test
cs
push
ja
xchg
lea
mov
movsl
repz
mov
outsb
xor
xchg
pop
aaa
int3
xchg
sbb
loopne
out
cmc
jmp
lds
aam
out
subb
mov
rcrl
inc
jae
addr16
mov
mov
ficompl
inc
lret
adc
xchg
xor
arpl
lcall
sbb
andb
out
cmp
cmc
jo
mov
mov
movsl
in
popa
addb
mov
adcl
mov
dec
rol
and
and
sbb
pop
sub
mov
jg
jae
dec
and
or
nop
lock
test
xor
js
and
add
lea
push
aaa
ds
je
mov
adc
je
push
ret
cmpsb
mov
cmpsl
pop
popa
jg
mov
shll
sbb
sbb
mov
cld
dec
fsubrp
popf
fs
pop
scas
popf
ss
or
dec
ljmp
xchg
test
ret
xchg
xor
or
push
int
ds
mov
mov
adc
shlb
ret
movsb
fcompl
outsl
test
dec
jb
xchg
out
test
cmp
arpl
iret
pop
jns
and
js
xchg
aas
fcoml
jp
add
mov
andl
sbb
cli
icebp
jmp
push
aam
inc
mov
ficoms
jge
or
rclb
lea
mov
pop
cs
leave
mov
hlt
int
xchg
sub
xchg
shlb
stos
or
mov
cmp
mov
mov
mov
cmpb
pop
xor
das
push
push
jl
dec
mov
pusha
add
mov
insl
clc
inc
push
adcb
shlb
push
popf
insl
xlat
bound
mov
out
rcr
nop
int3
outsl
hlt
xchg
call
push
and
testb
inc
shrl
inc
pop
xor
fstl
sub
loopne
repnz
sub
pop
pop
dec
aad
jp
dec
mov
cmp
faddl
arpl
jmp
cmp
xchg
cmpsl
sbb
sbb
enter
lahf
pop
sub
lcall
jns
mul
mov
mov
push
pop
mov
mov
or
or
out
and
std
push
pop
xchg
rolb
push
addb
xchg
mov
mov
incl
pop
inc
mov
popa
add
gs
lods
pop
insb
stc
mov
test
decb
mov
mov
and
arpl
add
dec
pushf
ljmp
repnz
loopne
rolb
jl
push
aas
mov
sub
iret
test
xchg
jp
cmpb
int
repz
jb
sbb
stos
lahf
xorb
fdivl
pop
xchg
lea
inc
cmc
sub
or
add
fnstenv
insb
movsb
pop
or
sub
lahf
icebp
repz
pop
inc
test
pop
fidivs
or
test
mov
lcall
inc
inc
pop
cli
xor
adc
rorl
fsts
fcoms
push
xchg
jbe
push
dec
incb
aas
dec
mov
lret
push
push
mov
movl
flds
push
xor
iret
push
sbb
stos
ds
xor
fs
jmp
shrb
pop
lock
cli
mov
arpl
cmp
lret
xchg
fiadds
loop
loopne
dec
jbe
add
sbb
scas
jp
outsl
adc
cmp
push
outsb
and
cmpsb
cmp
jg
add
fsubrl
icebp
fadd
sbb
fstps
sbb
imul
xchg
cmpb
or
xor
pop
mov
outsb
cmp
pop
cmpsl
mov
fdiv
pop
cwtl
and
or
jg
adc
pop
bound
sub
mov
and
clc
push
pusha
mov
into
xor
add
cmpsl
cmpsl
inc
jge
xchg
xor
mov
dec
jp
pop
xor
aam
add
jae
mov
add
add
insl
shlb
xor
mov
popf
testb
icebp
mov
movd
pusha
cwtl
subl
or
push
dec
into
pop
xchg
test
shll
sbb
and
pop
inc
inc
bound
repz
mov
sbb
test
lods
aas
ret
pop
hlt
test
add
xchg
loopne
les
push
mov
lds
sahf
xchg
out
iret
and
cmp
movsb
mov
into
stos
cmp
pop
fsts
jmp
cwtl
cltd
pusha
xchg
and
adc
ss
and
push
push
add
dec
sub
dec
sbb
out
xor
inc
je
fcmove
iret
sti
mov
test
aaa
inc
jecxz
push
imul
or
shlb
push
xor
adc
jmp
adc
cwtl
jb
lock
int
xchg
pop
add
jecxz
shrb
sarb
call
shl
mov
lea
adc
jl
xor
mov
adc
cmpl
iret
in
sarl
jnp
inc
loope
iret
insl
sahf
in
inc
push
iret
sbb
xchg
mov
mov
sbb
call
insl
cmp
mov
inc
sub
dec
ficoml
repnz
push
dec
inc
popa
scas
ret
xchg
xor
and
stos
pop
inc
inc
xorl
repnz
testb
adc
sub
mov
sbb
push
shll
mov
push
pop
cmp
outsb
lret
in
cmc
out
jnp
hlt
push
test
fmull
add
dec
in
adc
cmp
stos
push
sub
add
or
movsb
xor
out
and
insl
dec
jo
or
scas
xchg
jne
push
add
cmpsl
dec
mov
cmpsl
add
stc
repz
mov
xor
out
xchg
outsl
ss
and
xlat
popa
adc
add
cmp
sub
lods
dec
push
mov
lret
xlat
nop
std
xchg
push
xchg
sbb
dec
adc
mov
jl
rclb
movl
cli
lret
test
stc
out
jle
jge
and
pop
mov
mov
aas
cwtl
add
jno
adc
mov
xchg
fimuls
scas
pop
imul
pop
mov
sub
inc
push
push
iret
xor
jb
aad
or
aas
sbb
mov
inc
and
xchg
lods
mov
mov
and
and
outsb
push
pop
lahf
aam
sbb
and
test
dec
push
and
inc
stos
test
or
add
pop
das
out
sbb
mov
pop
insl
loopne
sbb
out
jge
push
add
rclb
stos
fnstenv
mov
aas
movb
lret
mov
imul
dec
adc
jg
or
mov
dec
arpl
in
dec
je
dec
push
pop
add
lret
movsb
ret
in
sahf
adc
xlat
and
movsb
cmp
xlat
repnz
and
or
push
fldl
or
cwtl
arpl
xchg
add
sub
test
cs
out
mov
mov
cmp
stc
insl
push
arpl
or
ret
outsb
fistpl
xchg
lret
lds
sar
sbb
sub
cmp
outsl
xchg
call
cmp
fmuls
orb
sbb
jo
test
dec
jle
movsl
adc
add
cli
mov
cltd
subl
mov
jecxz
jbe
lea
out
cmp
shr
leave
outsl
mov
cmpsl
pushf
sbb
ss
mov
push
in
sbb
jp
and
jb
and
mov
push
push
enter
pushf
rolb
mov
clc
jbe
inc
inc
rcrb
dec
jb
adc
xlat
dec
mov
mov
or
loopne
inc
ds
scas
pop
imul
cmp
test
lahf
and
sbb
bnd
fldcw
xor
and
popa
fimuls
outsb
mov
inc
repnz
jle
fdivl
mov
mov
outsb
mov
aam
mov
adc
aad
fs
pop
mov
shrl
xor
jb
inc
int3
lret
pushf
push
pop
cmp
das
dec
loop
xchg
inc
enter
xchg
adc
lods
aas
ss
sub
sti
or
orb
lods
test
xchg
push
inc
jmp
xor
push
adc
dec
lds
mov
jnp,pn
mov
xor
add
adc
fidivrs
inc
pop
jg
cs
xlat
hlt
out
pop
jo
mov
addr16
xchg
adc
loop
add
test
dec
sub
fwait
or
or
and
stos
xor
sbb
inc
ja
fisubrs
and
shr
pop
scas
pusha
lret
dec
pop
adc
xchg
shll
cld
sbb
mov
inc
mov
sar
fdivs
test
xor
fwait
ds
lock
in
movsb
fnstenv
mov
clc
stc
adc
add
xchg
popf
es
in
in
shrb
loopne
add
mov
insl
push
mov
sbb
fcmovnu
sub
adc
mov
mov
lds
mov
xchg
cmp
push
loopne
pop
xchg
dec
jmp
inc
push
js
jo
lahf
xchg
mov
test
icebp
inc
ds
rorb
cld
xchg
or
jo
notb
in
ds
pop
movsb
inc
jo
dec
mov
and
daa
xchg
into
jae
jbe
xor
mov
jmp
inc
popa
loop
loop
xor
add
ror
ja
inc
mov
jae
xchg
sbb
xor
neg
jb
pop
ret
xchg
mov
je
adc
xchg
mov
or
push
cmp
jp
dec
jge
mov
stos
mov
pop
push
adc
inc
fwait
stc
pop
mov
int
push
and
in
addr16
movsb
dec
sbb
sbb
mov
ficoms
inc
mov
adc
cmpsl
jns
adc
jo
jl
into
sahf
popa
xchg
outsb
pop
scas
nop
fs
cwtl
xor
and
pop
cli
lods
push
xchg
jge
sub
ret
sarb
mov
and
and
sbb
and
add
sub
shll
hlt
push
cmp
dec
rcrl
cmpsl
cmp
rorb
shlb
sbb
test
inc
add
cwtl
push
sti
jnp
idivl
dec
ds
bound
mov
cmpsl
add
mov
mov
or
push
and
mov
frstor
or
es
mov
stc
shlb
xor
sbb
test
in
xor
dec
lret
stos
push
xor
or
sbb
jecxz
pushf
cli
jl
add
test
xchg
add
loop
or
jnp
or
or
inc
jg
movsb
add
std
stos
push
les
sub
rcl
dec
cmp
ja
lods
adc
ja
cmc
les
pop
cld
into
jns
sbb
mov
das
fldenv
xlat
mov
mov
xor
jno
ret
mov
push
lods
leave
sub
fcomip
push
in
xchg
add
or
sti
outsb
imul
into
and
lock
pop
frstor
cmp
shrb
in
pop
movsb
jecxz
adc
mov
shll
xor
sar
push
frstor
cmpsb
pop
sbb
roll
es
cmp
icebp
push
lcall
call
je
sbb
xor
jb
jg
xchg
jne
lea
iret
in
xor
xchg
add
ret
cmp
daa
adc
fld
int3
or
es
icebp
jnp
cwtl
xchg
inc
xor
andb
mov
mov
inc
mov
pop
in
data16
xor
sub
andb
out
xchg
xchg
and
aam
pop
xchg
clc
sarl
shlb
adc
sub
xchg
mov
daa
xor
insl
dec
mov
push
dec
dec
loopne
test
jmp
out
incl
adc
mov
scas
jae
loop
fdivs
mov
xor
add
stos
lods
pop
cmp
fwait
int3
dec
dec
xlat
cmp
cli
mov
jo
shl
shll
add
add
mov
cmp
sti
jno
test
out
ljmp
out
mov
movsb
pop
push
mov
sub
inc
xchg
lods
dec
mov
sub
push
mov
push
js
test
movb
je
jo
repnz
inc
leave
ljmp
mov
hlt
adc
jle
push
stos
pop
inc
or
inc
cmp
add
nop
ds
push
adc
ja
int
insb
ja
pop
fisttpl
mov
insl
fwait
or
inc
out
add
idiv
mov
xor
adc
xchg
mov
sub
das
iret
sub
insl
in
jecxz
movsl
rol
mov
test
and
jg
adc
mov
out
mov
push
ds
pop
movsb
or
inc
dec
dec
push
arpl
mov
cli
mov
cmp
or
or
mov
in
loopne
inc
mov
fldl
insb
mov
enter
in
sbb
mov
loope
jecxz
aas
mov
add
adc
or
mov
mov
adc
shll
pop
mov
sbb
pop
call
and
cmpsl
out
mov
es
mov
sbb
lret
in
mov
adc
cli
in
leave
jge
iret
inc
jne
out
sti
inc
fstpt
pop
cltd
dec
jl
sub
mov
fisubrs
test
icebp
push
mov
scas
and
mov
ljmp
pop
adc
mov
shr
outsl
lock
fidivl
or
mov
fidivrs
inc
les
call
outsl
mov
mov
call
or
jle
cld
or
std
jg
cmpsb
inc
sbbb
pop
out
sbb
cmp
sbb
dec
jg
in
in
stc
xchg
repz
les
stc
lret
and
cmpsl
dec
enter
fwait
push
sar
dec
aaa
cmp
aam
push
jmp
lds
pop
inc
and
imul
push
push
pop
sarl
cmp
leave
pop
jge
pop
jmp
pop
outsb
sub
cwtl
mov
nop
cmp
or
inc
cmp
pmullw
cmc
add
dec
add
cltd
jle
push
pop
inc
adc
xor
fstps
imull
movsb
add
enter
xor
mov
pop
mov
sub
ret
or
dec
imul
addr16
push
cmp
or
ja
loope
push
adc
mov
sbb
xchg
fldenv
addr16
adc
add
jle
sub
pop
push
lret
movsb
mov
cmc
test
in
mov
adc
and
sbb
mov
enter
adc
and
mov
ret
fistpll
shll
fs
adc
jg
add
sbb
bound
or
mov
cmpsl
adc
cmp
in
cmp
cld
fisttpl
loop
dec
aaa
jns
adc
or
hlt
push
jge
adc
addr16
push
sub
mov
arpl
cmp
sub
inc
mov
filds
adc
xchg
test
xchg
stos
dec
sub
or
xchg
pusha
jb
lds
les
pop
iret
outsl
fyl2xp1
jecxz
mov
loope
mov
push
in
inc
add
mov
or
pop
push
pop
mov
jo
lahf
or
xor
lods
lods
push
add
push
add
xchg
ret
and
idivl
in
mov
dec
jg
loopne
sub
inc
mov
repnz
dec
rorl
mov
jmp
cmc
out
pop
inc
jp
push
addr16
sub
mov
mov
cmc
mov
shlb
xor
data16
jns
lods
cmp
iret
outsl
aam
test
das
add
sbb
loope
insb
adcb
stos
push
mov
in
mov
lret
cmp
fwait
iret
jl
out
adc
or
aas
out
fidivs
add
test
cmp
aam
or
xchg
mov
cmp
arpl
into
out
xor
push
int3
xchg
sbb
xchg
and
int3
repnz
xchg
or
mov
sbb
mov
xchg
lret
lret
and
loopne
out
imul
jmp
lea
mov
fld
aas
pop
paddsb
sbb
mov
pop
aas
xchg
mov
shl
test
je
sub
das
jae
js
or
xchg
push
mov
or
pushf
jecxz
in
sbb
sbb
popa
cs
xchg
out
cld
out
adc
call
clc
dec
xor
hlt
xor
hlt
sbbl
dec
jnp
mov
jmp
cld
ljmp
cs
test
jle
adc
arpl
loope
popa
fisubrs
inc
mov
lods
outsb
stos
sbb
enter
testb
rorb
mov
out
xor
mov
lea
test
mov
popl
xchg
pop
dec
fisubrl
jnp
inc
xlat
out
les
aaa
jo
sbb
mov
mov
lods
fsubp
shlb
sahf
insb
push
push
dec
add
mov
jne
push
stc
pop
inc
lds
icebp
xor
xchg
imul
fcmovnb
pop
sarb
xor
clc
shlb
bound
xbegin
pushf
mov
lahf
test
add
sti
dec
or
shll
das
lcall
xchg
jge
dec
adc
es
inc
sbb
inc
jo
inc
xchg
sub
mov
andl
add
pop
lar
mov
fldenv
int3
dec
mov
test
movsl
mov
popa
insb
int
add
mov
xchg
aam
test
and
add
pop
jo
sbbl
das
lods
jmp
pop
dec
lahf
ja
and
stc
inc
addr16
sub
pop
mov
in
adc
xlat
jecxz
call
xchg
jg
shll
xchg
in
xor
mov
xchg
push
movsl
and
in
adc
jne
out
mov
stos
fstps
scas
addr16
minps
test
push
mov
adc
sti
divl
push
lea
stc
jle
lret
sbb
fldt
ror
jg
aam
aaa
sub
sub
push
push
test
in
mov
sbb
dec
push
or
mov
lea
xchg
hlt
das
nop
shrb
mov
dec
push
cld
xor
shl
mov
inc
xlat
mov
lahf
loopne
lcall
lea
ss
outsl
aaa
sub
addr16
mov
push
cli
fidivs
repnz
pop
jg
push
dec
mov
repnz
inc
arpl
jnp
xor
mov
aaa
nop
repz
adc
sbb
es
inc
or
scas
or
test
test
or
clc
sub
mov
into
int
stos
xor
mov
pop
jl
test
inc
in
fcomip
test
or
or
mov
xor
lock
adc
dec
rcl
into
cmc
adc
bound
jno
out
daa
jns
fnstcw
adc
sahf
xchg
cld
lret
or
cmp
test
mov
les
mov
pop
jbe
cmp
push
fisubl
aam
or
jle
cltd
mov
js
mov
mov
stos
xchg
mov
and
push
jmp
ret
jp
push
push
push
jae
loopne
jp
push
xor
pop
xchg
jmp
loop
sub
pop
pop
add
aad
jb
mov
jg
into
lds
outsl
mov
sbb
push
and
repnz
jge
adc
aad
in
mov
xor
jo
fisttps
sub
cmc
jnp
mov
inc
stc
jp
add
cmp
shl
jle
popa
or
push
lahf
inc
rol
xchg
test
ljmp
stos
shll
inc
push
sbb
sar
sbb
add
hlt
imul
xor
mov
mov
mov
add
cmp
es
aam
out
aas
bound
cmp
idivb
ret
out
cmc
adc
mov
pushf
inc
enter
inc
in
int
inc
mov
lock
testl
iret
adc
add
shrb
dec
in
sub
leave
into
push
add
sbb
insb
add
jg
in
sub
in
gs
call
xchg
movsb
repz
xchg
ret
in
lock
pop
addr16
cmp
pop
decb
pop
cltd
and
pop
or
xchg
stos
rcrb
pop
out
push
inc
dec
outsb
icebp
mov
pop
xchg
sbb
and
cld
xchg
inc
xor
insb
das
pop
ds
sub
mov
inc
inc
pushf
xchg
mov
or
push
fstp
repnz
in
or
ss
mov
call
in
dec
test
inc
push
arpl
out
adc
mov
pop
decb
sbb
sbb
xor
popw
or
mov
mov
scas
mov
jne
add
les
xor
sub
in
rclb
in
dec
es
or
adc
push
mov
push
cwtl
imul
insl
and
cmp
js
in
lret
mov
mov
enter
sbb
aad
shll
cmpsb
push
outsl
sbb
add
movsb
test
sarl
and
mov
cmp
fsubl
inc
pop
xchg
adc
push
adcl
fistps
test
fs
xor
nop
push
and
pop
mov
call
xchg
sub
xlat
aaa
lods
inc
fisubs
add
outsl
sysenter
or
aam
cmp
sub
sub
les
dec
aaa
xchg
cvttps2pi
in
jmp
pop
mov
test
add
lods
xchg
sbb
ss
movsb
lahf
lret
loopne
mov
jne
and
jne
pushf
out
ret
jns
adc
std
ds
int3
push
test
imul
pusha
xchg
sbb
lret
cmp
aaa
fisttpll
ret
mov
mov
push
pop
pushf
pushf
sbb
fwait
sub
xor
cmpsl
and
popa
mov
into
ja
sub
and
cmp
jl
jo
je
push
sahf
push
xchg
sahf
pop
lods
mov
jmp
outsl
fmull
mov
shlb
daa
adc
imul
in
cmpsb
xchg
mov
or
mov
sub
xchg
jbe
push
mov
push
cltd
mov
add
xor
fcoms
mov
ljmp
cmp
cmpsb
cmpsl
mov
pop
mov
fldl
and
cli
xchg
cmpsl
jns
push
out
fcmovnb
cmp
insl
andb
dec
lahf
jb
and
pusha
divb
cmp
call
sbb
pop
dec
shl
fdivrl
xchg
pop
clc
fcomps
stos
jmp
lret
sub
inc
jp
mov
test
jnp
call
adc
popf
jne
adc
mov
dec
paddusb
jge
push
or
test
in
inc
aam
xor
mov
and
fsubl
scas
sahf
pop
sub
mov
push
push
leave
add
xor
xor
iret
push
inc
lea
dec
pushf
and
cmp
setl
inc
xchg
xchg
xchg
jbe
inc
leave
ror
daa
mov
dec
mov
andb
push
pop
popf
ljmp
mov
test
mov
out
jns
mov
mov
push
pushf
mov
daa
jge
dec
in
cltd
lea
lods
jge
int3
aad
div
decb
dec
insl
xchg
rol
ret
pop
mov
jecxz
clc
imul
cmp
shrb
lcall
mov
loopne
push
dec
sub
inc
sub
fimuls
xchg
arpl
lock
xchg
mov
insb
lea
sahf
pop
hlt
adc
into
adc
sbb
popf
and
bound
clc
sub
insb
lods
mov
cltd
xchg
mov
ret
xor
lea
xor
sahf
inc
jb
xchg
sti
dec
loope
dec
push
addr16
jp
fs
test
inc
jl
xchg
dec
cli
adc
popf
movsl
fcompl
movsb
movsb
sbb
mov
out
aad
scas
pop
dec
stos
leave
sub
adc
pop
shrl
cs
and
repnz
daa
test
repz
lods
andb
mov
jecxz
shrb
add
xor
aad
cli
xchg
loop
sbb
xor
cmc
cmp
jbe
push
cwtl
xchg
mov
xor
push
out
xchg
jne
sub
call
cltd
cltd
movsb
jbe
mov
xor
add
ret
and
stos
lods
in
repnz
mov
jae
cmpb
insl
mov
lret
xlat
cltd
xchg
jmp
mov
addr16
je
cmpsb
xchg
sub
jmp
imul
jnp
aas
and
mov
push
into
dec
sub
icebp
mov
and
or
push
repz
and
sbb
and
xchg
sbb
mov
or
addr16
xor
rcrb
mov
jl
jo
or
cmpsl
push
repz
adc
ss
add
dec
test
cmp
xlat
or
xor
adc
dec
repnz
fidivl
addb
jae
mov
sub
scas
mov
addr16
shl
xchg
sub
mov
cltd
scas
push
les
aam
jl
insb
mov
ljmp
scas
jmp
into
cltd
jbe
xchg
aam
push
mov
lods
pushl
hlt
lea
pusha
repz
sbb
and
arpl
aaa
mov
mov
push
mov
cmpsb
movsl
pop
push
js
pop
jg
push
pop
shll
std
push
jge
cmp
aam
xor
and
pop
stos
nop
push
movsl
mov
xchg
lahf
inc
addr16
lds
aam
addb
sbb
adc
fmulp
xor
mov
and
push
ss
pop
add
lods
es
in
jmp
fisubrl
sbb
xlat
jo
jle
xor
inc
mov
fadd
movsl
jmp
xor
or
and
adc
mov
jae
xorb
scas
add
xchg
ljmp
mov
inc
loope
ret
call
add
hlt
push
lock
test
clc
or
cld
jbe
pop
cmp
in
lock
dec
xchg
lahf
imulb
pop
lret
push
mov
fcoms
and
test
inc
add
std
mov
xor
jb
mov
jo
je
fildll
je
fistpl
insl
loope
pop
xchg
cmpsb
jne
push
sbbl
clc
add
aas
loope
add
in
mov
mov
mov
loope
cmp
jb
js
push
les
mov
in
mov
dec
popa
ds
clc
cmp
push
sti
mov
push
stos
div
repz
add
push
add
das
xchg
fildl
dec
xchg
mov
popf
adc
iret
jp
push
xchg
movsl
js
cmp
stc
and
mov
lds
sub
stos
es
mov
mov
loope
push
jnp
clc
push
cld
or
ja
rep
push
adc
mov
jae
xchg
das
pop
push
inc
bnd
xchg
xor
out
mov
xchg
add
push
xchg
pushf
cmp
xchg
cmpl
outsb
sar
xorl
subl
push
das
fsubrs
inc
call
fadd
pop
ret
enter
cmp
addr16
icebp
adc
lds
test
cmp
hlt
xchg
popa
xchg
das
ret
out
adc
jmp
mov
mov
or
mov
out
sub
aad
push
lret
add
fcoms
dec
cmp
stc
and
inc
bound
lret
inc
jecxz
cmp
adc
xchg
inc
bound
xchg
lea
cltd
ljmp
pop
adc
mov
loope
ja
frstor
shrb
int
cmpsb
push
jp
push
fwait
dec
add
xor
push
call
mov
jecxz
orb
jb
lcall
push
pop
ljmp
mov
or
or
aaa
pop
insb
xchg
icebp
pop
xor
cmp
outsl
jge
out
xor
inc
shl
stos
orb
pop
ds
lret
jb
jnp
jp
rorb
inc
dec
xchg
inc
cmp
lods
pop
and
imul
adc
xlat
xor
leave
mov
mov
mov
in
pop
add
xor
nop
or
jp
js
inc
fidivl
sub
jmp
xchg
leave
stos
das
fnsave
icebp
pop
sbb
out
mov
cltd
and
jns
jge
sbb
jecxz
xchg
outsl
lods
js
call
push
js
add
sti
shll
inc
adc
pop
push
mov
hlt
shlb
jbe
xchg
and
pop
inc
mov
mov
mov
aam
sbb
sbb
mov
std
pop
pushf
addr16
cltd
lcall
mov
push
cmp
lahf
jb
cmp
in
inc
inc
xchg
lcall
mov
mov
rcll
xchg
hlt
push
pusha
cwtl
in
jne
cmpsl
or
aad
jo
ss
xorl
fnstenv
pop
sub
mov
daa
pop
xchg
movsb
mov
jl
sbb
xchg
lods
das
test
mov
sbb
leave
xor
test
push
adc
or
aam
fstps
inc
jmp
add
or
in
ret
pop
mov
jnp
mov
in
xor
jecxz
inc
icebp
mov
popa
jp
in
xchg
xchg
jmp
dec
mov
push
fists
mov
add
hlt
in
subl
mov
mov
shrb
cmpsl
and
xor
xchg
sub
jg
push
mov
hlt
test
sbb
xor
and
fs
daa
imul
lret
pop
loopne
scas
pop
notl
mov
shlb
ja
outsb
insl
jmp
shrl
push
mov
xor
lds
adc
js
xor
pop
or
mov
xor
sbb
ss
scas
xor
ret
test
xchg
dec
in
or
test
pop
enter
data16
in
or
pop
push
mov
gs
xor
jno,pt
loope
xchg
cltd
mov
push
cmpsl
and
lds
or
lea
and
pushf
stos
adc
xor
sub
pop
cli
dec
add
stc
ja
imul
aad
jb
insb
addr16
clc
popf
push
lret
cltd
jb
jo
and
jno
insb
divb
pop
enter
push
nop
and
adc
or
fcomip
jl
mov
andl
pushf
filds
inc
mov
xchg
inc
jne
pop
add
xchg
iret
push
lcall
icebp
sti
sub
loop
arpl
out
cmp
mov
xchg
xchg
hlt
movsb
mov
jg
jecxz
lds
jecxz
mov
mov
cli
mov
pop
aam
test
push
mov
xor
call
lods
and
movsb
shll
nop
in
mov
jns
imul
call
xor
cmp
mov
outsb
cmp
jmp
pop
imul
xchg
int3
in
ficompl
and
addl
mov
jecxz
adc
mov
cld
bound
jbe
aaa
adc
out
loope
divl
sbb
mov
arpl
jne
ret
cmp
pusha
das
stos
lds
ja
xchg
out
jmp
xlat
add
sbb
mov
cmp
ret
jb
push
jnp
inc
push
movsl
dec
jae
or
sahf
or
outsl
aaa
pusha
nop
imul
stc
xor
imul
adc
test
cs
rcr
cmp
and
adc
movsb
cmp
inc
push
mov
push
lods
dec
jmp
in
fucomi
inc
xchg
inc
sti
loop
insl
pushf
jns
or
leave
daa
jg
jg
imul
aaa
cli
rorl
stos
mov
xchg
jne
mov
hlt
and
outsl
inc
inc
pop
ret
mov
pop
out
sbb
stc
xor
dec
gs
mov
clc
orb
or
ret
repz
push
add
add
hlt
bswap
inc
pop
inc
popf
pop
hlt
psrlw
in
or
ja
dec
add
dec
pop
mov
inc
pop
push
push
add
push
in
in
fdivl
das
mov
repz
push
scas
push
shll
jb
lea
cltd
dec
cmp
loop
xchg
push
push
aas
fildll
pop
and
sbb
mov
stos
or
mov
inc
mov
mov
inc
xor
mov
movsb
jo
adc
mov
je
add
jno
xor
test
add
push
xchg
stc
mov
mov
mov
test
js
jp
add
mov
jecxz
fdivrs
or
cmc
aam
mov
jno
mov
in
and
mov
mov
loop
and
adc
mov
xor
xor
adc
sub
cmp
std
rclb
shl
mov
out
leave
ljmp
xchg
pop
jnp
mov
xchg
fwait
mov
nop
xchg
ja
in
add
js
xor
jge
fisttpl
cmp
mov
mov
cmp
mov
push
mov
mov
cmp
pop
jmp
fidivrl
ds
fmul
out
mov
or
lods
xor
dec
push
fists
sbb
cmp
fsubr
cltd
mov
xchg
rsqrtps
inc
pusha
mov
cli
pop
mov
cmp
fs
cltd
ret
add
and
movsb
sbb
mov
jne
jnp
add
outsl
jmp
or
arpl
repz
push
mov
mov
push
bound
mov
mov
mov
cmp
cli
push
inc
adc
sbb
push
inc
or
ffree
jns
cmp
shlw
add
aad
push
cmp
andl
mov
adc
dec
int3
or
jmp
clc
and
loop
and
jmp
add
and
int3
call
outsl
int
jns
xlat
cmc
mov
cld
jp
dec
lahf
popf
xchg
xor
fcoml
jl
dec
xor
push
adc
push
repnz
mov
loop
jge
shlb
fistpl
xchg
scas
pop
mov
iret
mov
mov
jg
mov
push
cmc
psubb
xchg
or
mov
xchg
add
mov
jp
gs
dec
cmc
sub
and
test
push
sarb
jge
xor
sbb
xor
and
lret
mov
jb
popf
cmpl
out
out
mov
sbb
icebp
mov
jg
cli
cmc
jl
and
cmp
repnz
jne
jmp
push
movsb
jmp
sbb
mov
mov
jp
add
mov
or
jmp
pop
cltd
dec
popa
mov
mov
iret
cld
lret
scas
or
enter
jns
xor
xorb
movsb
pop
xor
mov
cmp
pop
lock
mov
jne
or
fistpll
mov
sub
mov
mov
loope
mov
shlb
pusha
pop
jecxz
cwtl
cmp
dec
ja
pusha
dec
sub
mov
hlt
orb
jge
lcall
lcall
lret
cld
daa
sub
sub
aaa
or
std
xor
pop
and
inc
cmp
in
mov
adc
dec
inc
daa
enter
adc
jae
jno
xchg
mov
cmp
jmp
cmpsl
movl
xor
pop
cld
mov
outsl
inc
jb
into
and
jns
mov
xchg
test
popa
iret
dec
adc
fisubrl
sahf
shll
clc
movsl
bound
in
cs
data16
arpl
mov
dec
jo
adc
es
adc
shll
fs
pop
dec
jb
lahf
xorl
xchg
cmp
push
cmc
outsl
ss
xor
or
cmpsb
mov
int
pusha
pop
stos
mov
inc
ret
sub
jae
pop
sub
insl
mov
rorb
sub
jp
int3
in
enter
andb
pushf
mov
lods
cmc
jne
iretw
jae
sub
xor
push
and
jb
mov
aaa
std
fisubl
fidivl
loopne
mov
pop
mov
jp
lods
popf
clc
mov
mov
and
icebp
sub
jbe
mov
jnp
mov
into
jno
lds
popl
iretw
and
mov
mov
lods
out
dec
jnp
inc
popf
lret
aam
ret
cmp
ret
mov
dec
or
pop
sub
add
out
repz
jns
pop
stos
pop
iret
loope
loopne
scas
and
push
sub
or
pop
js
out
in
gs
sbb
lea
adc
nop
movsl
rcrb
sti
stos
lods
xchg
testl
sbbl
sbb
mov
jp
ret
rcr
jo,pt
sbb
add
andb
mov
push
push
lds
mov
pop
movb
pop
mov
subl
in
js
pop
sti
sbb
movsb
mov
insb
or
lcall
mov
jae
stos
movb
scas
jg
movsb
xchg
push
xlat
pop
mov
jne
aas
call
cmc
daa
stos
ret
sub
out
sub
insb
inc
movsb
mov
cld
lea
fidivrl
xchg
sub
jno
cld
pop
test
test
adc
and
push
push
daa
or
xchg
push
add
rclb
pop
ficoms
inc
inc
mov
scas
xchg
cmp
push
leave
mov
mov
imul
gs
dec
xor
inc
inc
mov
ficompl
add
xchg
imul
outsl
mov
cltd
fidivrl
ljmp
jle
mov
les
jge
aam
jns
fwait
out
mov
mov
ret
pop
fs
xchg
cmp
adcl
lock
adc
lods
mov
hlt
je
insl
pop
xchg
xchg
sbb
or
inc
or
je
das
js
sar
add
inc
or
jecxz
es
xchg
int
outsl
or
imul
scas
das
mov
cmpsl
gs
aam
ljmp
js
jl
pop
sub
xlat
iret
jae
xchg
popf
hlt
push
cmpsb
adc
inc
ret
movsb
mov
pop
mov
pop
lods
push
mov
xchg
fidivl
rcr
fs
jg
xor
xchg
ljmp
push
inc
push
movaps
movb
cltd
ret
cmp
repnz
sbb
jne
mov
cli
js
sub
xor
into
sub
lds
arpl
fiadds
push
sub
inc
mov
das
addl
jbe
pushl
in
mov
ljmp
push
xchg
fdivr
jne
mov
addl
jo
inc
xchg
loopne
push
push
mov
andl
and
jge
sbb
inc
test
inc
adc
loop
mov
clc
loop
or
aam
mov
call
or
popf
xchg
movb
xchg
mov
push
mov
ret
loop
sub
jle
lret
pop
roll
lods
xchg
dec
inc
xchg
adc
mov
xlat
add
and
add
sarl
es
popa
std
inc
xor
test
clc
xchg
pop
fistpll
mov
and
imul
popa
sub
push
mov
push
andl
vorps
fbstp
pop
cmp
pop
shll
into
inc
mov
in
push
cmpsb
push
addl
add
imul
cltd
mov
call
rcrb
jmp
jnp
pop
push
cmc
nop
add
repz
stos
popf
out
mov
cmp
inc
out
inc
je
adc
andb
insb
cmp
cld
mov
dec
aaa
cmp
test
test
sub
pop
jae
mov
inc
dec
iret
mov
or
sub
mov
div
mov
pushf
or
scas
movsb
fisttps
imul
loopne
push
sbb
push
js
sbb
test
adc
data16
dec
aam
push
fidivrl
stos
daa
movsb
mov
es
cwtl
xlat
sbb
push
pop
sbb
xlat
shll
mov
cmc
aad
out
cmp
in
adc
xor
push
std
sbb
sub
xchg
inc
gs
or
imul
dec
xor
cwtl
inc
iret
mov
fwait
push
cmpl
mov
into
je
adc
shl
ds
ds
leave
sbb
jb
jg
cmp
mov
lcall
xchg
adc
aad
adc
into
pop
cmp
sarb
add
in
pop
test
das
lahf
xchg
pop
pop
in
cs
or
add
sahf
filds
adc
mov
test
jle
lods
or
push
fdivs
icebp
adc
jp
jne
cmp
inc
xchg
rolb
pop
fs
sbb
adcl
push
jae
rcll
add
and
jle
xchg
xor
and
enter
movsl
push
sub
outsb
cltd
and
sub
xor
lods
movsb
add
out
mov
fmulp
cmp
sbb
push
repnz
cwtl
je
pop
les
dec
push
imul
aam
aad
and
cmp
dec
push
push
mov
aas
jl
dec
mov
insl
aam
push
lss
fcmovbe
sbb
pushl
dec
cmp
cltd
pushf
pop
movsl
push
sub
scas
add
mov
outsl
addr16
xchg
adc
cmp
mov
and
lret
add
xor
fstl
leave
mov
filds
cmpsl
or
adc
gs
push
sbb
shl
sub
nop
cmovge
leave
dec
mov
cmp
pop
inc
push
repz
mov
scas
push
pop
nop
data16
push
mov
mov
push
sbb
gs
lea
movsb
fldenv
test
lods
outsb
pop
hlt
mov
sahf
scas
sbb
lret
ds
inc
mov
dec
repz
mov
or
das
fbstp
sbb
add
daa
mov
adc
push
sbb
mov
ljmp
repnz
cltd
xor
mov
adc
mov
nop
scas
fcompl
mov
mov
push
dec
sub
mov
mov
jmp
loop
push
push
inc
aas
pop
mov
and
imulb
daa
push
fs
outsl
mov
xchg
xchg
mov
xchg
mov
xchg
sbb
dec
push
lds
popf
push
mov
shlb
add
or
sbb
insb
lret
jle
ss
insb
ss
adc
jno
add
cmp
jns
scas
cmpsb
cmc
decl
fcoml
add
sbb
movsb
shlb
lods
push
lods
cmp
dec
inc
out
lret
decb
adc
jae
dec
rcl
mul
xchg
add
or
pop
sbb
and
cmp
xchg
imull
jns
cwtl
rorl
fists
mov
inc
cmc
push
adc
adc
xorl
fst
jnp
sbb
and
add
xor
jns
mov
sbbb
add
lahf
shrl
dec
je
pusha
loope
fnclex
fldcw
or
test
lds
push
mov
jp
dec
pop
jno
and
dec
test
push
std
sub
mov
ds
repz
xchg
in
loop
pop
mov
lock
ret
xorb
lods
std
mov
in
xlat
daa
pop
pop
sub
sbb
cmp
pop
adc
notl
mov
je
mov
lret
inc
int
lds
icebp
jg
data16
add
add
lea
mov
insl
jecxz
pop
popf
xchg
xor
in
imul
add
push
es
daa
fs
mov
mov
imul
push
clc
arpl
mov
add
insb
and
rol
cmc
mov
adc
jnp
cmp
mov
pop
xor
ljmp
fcomi
mov
add
out
sub
mov
sub
mov
aas
mov
or
pop
mov
adc
in
aaa
dec
pushf
inc
gs
cmp
mov
imul
andl
sbb
cli
sub
lea
xchg
jecxz
sbb
ficompl
lcall
loopne
es
xchg
scas
test
fisubl
xchg
mov
inc
popf
and
mov
dec
xor
fdivl
inc
and
js
jae
add
stc
in
cmp
inc
bound
fsubp
loopne
or
fmull
sti
loopne
cmp
scas
sub
xchg
ja
out
and
push
mov
mov
sbb
outsl
push
cld
or
leave
loope
rcl
or
iret
sub
insb
lahf
sar
pop
addr16
jnp
cmc
mov
dec
mov
pushf
aad
leave
inc
fildll
jp
ljmp
loope
dec
lahf
ljmp
lods
inc
cmp
lds
and
scas
cli
je
cmp
stc
dec
xchg
mov
or
and
daa
push
das
pop
xchg
bound
cli
mov
pop
cmp
xor
xor
push
cmp
adc
gs
lret
adc
lret
push
and
pop
test
into
repz
xor
dec
fiadds
push
cmp
add
push
cld
lock
or
sbb
test
push
sbb
rcr
or
pop
in
cwtl
fdivr
cmpsl
pop
pushf
mov
or
int
ret
jge
stc
mov
jmp
cmp
sbb
mov
pop
lods
dec
imul
test
adc
jl
mov
lea
gs
mov
mov
iret
fstpl
insl
pop
test
jno
mov
cmp
cmp
pushf
imul
jle
imul
int
test
adc
inc
sub
or
lahf
jle
imul
out
pop
sbb
lcall
inc
mov
push
push
or
or
adc
mov
mov
test
xchg
icebp
dec
jno
mov
or
pop
jmp
es
sub
dec
xchg
add
xor
icebp
pushf
adcb
dec
or
repnz
test
int
cmp
mov
loope
xor
arpl
dec
lahf
jae
xor
jnp
es
insb
popf
jb
enter
hlt
or
shlb
enter
push
lds
in
rorl
jb
pop
sub
xor
cmpsl
and
xlat
mov
xchg
push
push
scas
sub
cmp
xor
call
int3
jae
add
lods
mov
movsb
ret
dec
cmpsb
jg
xor
sub
sub
and
pop
dec
mov
cs
addr16
and
mov
cmp
out
cld
push
cmpsl
adc
inc
jae
or
jo
lahf
jmp
jmp
cmp
sbb
jo
stos
fadd
std
push
icebp
jge
xchg
jb
or
aam
dec
fwait
andl
adc
pop
pop
lods
xchg
xor
xor
inc
loop
jg
aad
in
dec
ficomps
xchg
pop
sub
aad
lret
iret
fnsetpm(287
mov
mov
icebp
icebp
subl
pop
call
dec
loope
mov
out
mov
aaa
sbb
jecxz
xor
enter
push
mov
insl
vpmacsdql
sti
push
divb
push
in
leave
mov
outsl
and
adc
out
dec
int3
inc
mov
jne
sub
ja
and
mov
addb
int
mov
push
and
jbe
das
mov
int3
xor
inc
mov
push
inc
mov
loop
sbb
or
add
mov
sub
push
adcl
std
adc
inc
sarb
es
xor
and
sbb
int
sub
hlt
pop
xchg
out
adc
popf
mov
cmp
fadds
or
loope
clc
jo
add
sbb
lock
test
inc
test
aas
sub
out
or
add
mov
cmp
nop
xchg
int3
les
sbbb
inc
lret
push
fnsave
jae
pop
icebp
decl
sahf
lret
inc
js
out
or
outsl
imul
adc
jp
mov
mov
cmpb
mov
mov
mov
ds
jg
and
pop
mov
int3
dec
hlt
orl
loop
cwtl
lahf
cli
cmp
push
js
pushf
jns
repz
inc
movb
gs
mov
lahf
jno
lret
jne
mov
fbstp
xchg
sbb
dec
mov
pop
pop
mov
pop
or
xchg
cmp
fstps
push
cmc
stos
jg
push
push
xor
push
fsubrl
jnp
sahf
insb
hlt
cmc
rcl
mov
jb
pop
xchg
in
popf
inc
js
mov
or
btr
push
push
inc
pop
decb
ljmp
sub
aad
and
mov
sbb
lock
loop
cs
sbb
ja
mov
pop
mov
sub
test
in
fcmovne
out
add
jge
sti
fistps
lock
cltd
enter
lock
test
sbb
loop
outsb
cld
std
pop
pop
out
pop
pop
push
in
mov
cwtl
lock
mov
dec
loopne
xchg
mov
push
sbb
xlat
cmp
mov
mov
shll
push
jne
dec
pop
sbb
jl
sbb
jg
mov
fisttpll
jmp
fisubs
stos
js
adc
iret
arpl
mov
push
and
push
insl
mov
call
in
cli
subb
jle
fs
fildll
pop
lea
rolb
repnz
xlat
adc
int
int
sub
jb
mov
cmc
sub
inc
cmp
sub
fmull
aas
jle
pop
cmpsl
mov
das
aaa
adc
pop
mov
pop
mov
in
pop
rcr
push
inc
les
adc
mov
stc
sbb
pslld
je
mov
pop
popa
inc
mov
scas
mov
push
mov
xor
mov
mov
cltd
mov
pop
or
repnz
or
lahf
xchg
xor
call
insl
lcall
jl
orl
adc
cmp
adc
cwtl
in
adc
and
xor
aad
xchg
mov
jo
std
shrl
or
mov
cld
xchg
movsb
das
adc
sub
test
push
ret
mov
adc
popf
inc
fildl
jl
lods
push
pop
loop
ljmp
fiaddl
and
mov
jne
sbb
cmc
mov
sbb
test
xchg
jbe
mov
mov
mov
js
push
mov
cwtl
ljmp
shrl
inc
lret
and
cmpsb
aas
cmp
cwtl
ja
je
lret
xor
ret
xchg
inc
adc
outsl
insl
jle
negl
push
xor
out
mov
xchg
or
push
clc
jge
inc
push
ss
pop
xchg
loop
cwtl
mov
fistps
out
lods
or
and
lock
xor
mov
adc
mov
dec
cmp
popa
adc
xor
xchg
cmp
mov
pop
jnp
cld
js
pand
push
sub
xor
ja
pop
roll
or
cmp
sub
fnsave
xor
and
ss
xchg
jae
addr16
xorb
dec
and
dec
clc
test
imulb
xchg
add
movsl
fistpl
or
imul
pusha
adc
sbb
lret
dec
inc
stos
xor
sarb
xchg
mov
xor
aad
imul
lahf
xor
jb
negb
jb
orl
xlat
mov
outsb
xor
mov
test
add
stc
mov
add
cli
push
shlb
shlb
cli
sub
push
fadd
inc
test
mov
movswl
das
jle
std
bound
push
cli
loopne
mov
inc
je
lret
adc
push
call
push
test
in
mov
inc
and
lret
xor
leave
jmp
inc
outsl
loop
and
pop
add
ret
add
test
sub
adc
xor
stos
nop
addb
mov
sbb
imul
lahf
jb
insl
pop
aad
add
pop
test
in
pushf
fstps
lret
and
sub
adc
enter
sar
dec
cwtl
jecxz
or
ljmp
shrb
je
jns
jo
dec
fists
pop
pop
dec
pop
cmp
imul
inc
hlt
mov
inc
jle
loopew
push
data16
into
mov
mov
das
inc
mov
pop
das
sub
push
xlat
and
gs
mov
add
mov
inc
lret
sbbl
xor
jbe
adc
cmp
pop
mov
shrb
push
add
je
daa
into
mov
push
mov
mov
jae
into
sub
dec
rcrb
lcall
ret
dec
fbld
xor
adc
dec
cmp
adc
cmp
inc
lret
inc
adc
lods
push
les
cld
addr16
mov
xor
mov
hlt
inc
pop
out
or
insb
scas
in
adc
xor
and
add
fucomip
xchg
mov
pop
mov
aad
mov
mov
imul
movsb
cmpsl
movsb
iret
mov
inc
shl
xchg
mov
inc
inc
cmp
jge
cmp
push
imul
sbb
cmp
cmpsl
inc
mov
out
filds
fucom
add
xchg
push
subb
add
dec
pop
insl
mov
mulb
out
mov
dec
ret
lods
push
ss
xchg
mov
add
adc
jle
mov
div
daa
cmp
es
xor
loop
out
addr16
sbb
pop
add
or
dec
cmpsb
xchg
or
rcrl
stos
push
scas
sbb
pushf
and
fisubl
lea
sarb
int3
dec
insl
and
arpl
pusha
dec
push
fcompl
ret
repnz
cld
or
mov
sbb
mov
inc
enter
test
xchg
call
leave
hlt
fnstsw
mov
inc
push
or
mov
jae
shl
add
repz
mov
sub
push
jge
and
popa
or
aad
nop
jbe
movsl
ljmp
push
xchg
jae
pop
adc
mov
sbb
inc
xchg
hlt
inc
pushf
push
cmp
dec
sbb
aaa
aaa
mov
dec
sahf
jge
imul
popa
xor
pop
pop
sbb
and
icebp
repz
pop
cmpsl
dec
mov
xchg
aad
rolb
stos
ja
xchg
mov
or
pop
cmpsl
leave
xchg
xchg
jge
adc
mov
sub
sbb
sbb
lcall
inc
scas
and
imul
lods
aam
inc
and
mov
ljmp
jno
pop
inc
dec
outsb
jnp
inc
dec
movsl
out
xchg
fmul
xchg
sbb
ja
sbb
xorl
out
out
in
fisubrl
xchg
add
inc
or
adc
or
sar
aam
ss
fneni(8087
jecxz
pop
inc
ja
xchg
outsb
icebp
push
push
mov
and
mov
or
sbb
in
cmp
adc
mov
ljmp
xor
fdivrl
mov
aam
mov
insb
lahf
or
outsl
fisubrl
xlat
cmpsb
or
xchg
hlt
mov
jo
sbb
insb
pavgw
push
and
pop
loopne
inc
mov
push
sbb
xchg
adc
or
les
xchg
cli
pop
adcb
loop
jo
mov
pop
xor
mov
or
xor
test
fldl
mov
cltd
xchg
sahf
rorb
or
nop
push
cmp
jne
add
cltd
inc
sbb
jnp
add
mov
and
ss
add
inc
icebp
cmp
jo
adc
and
rcll
cwtl
test
or
jno
imul
jge
in
adc
cmp
jo
push
dec
lods
fimull
aam
dec
lock
jno
lock
adcl
push
or
or
jl
fiadds
mov
jmp
and
inc
out
xor
dec
test
mov
or
bound
popa
inc
add
adc
rcll
inc
jmp
add
jp
icebp
ss
lret
xchg
or
lea
mov
int3
shl
sub
pop
cmp
add
test
jns
cltd
push
dec
sbb
mov
pop
scas
in
mov
mov
int3
hlt
outsl
mov
stos
sbb
insb
adc
sti
xlat
iret
fisubs
iret
push
mov
roll
shrl
out
push
leave
cmp
call
add
sub
repnz
leave
add
out
dec
aam
xor
cwtl
adc
adc
and
mov
push
jo
lods
insb
jno
push
mov
pushf
ret
cmpsl
shlb
push
movsb
pop
inc
fiaddl
jo
rolb
ja
mulb
adc
lcall
pop
xor
es
or
push
pop
pop
and
pop
push
jbe
hlt
bound
push
pop
cwtl
jb
pop
addr16
fcompl
pop
lahf
xorb
xchg
sbb
jmp
sarb
sub
cld
ja
add
je
jmp
ja
fs
and
call
mov
repz
shll
leave
sbb
jne
or
fwait
out
mov
push
fsubr
jo
jl
push
aam
and
je
call
push
push
lods
inc
jge
pop
movl
pop
in
pop
cld
sarl
mov
adc
loop
sbb
int3
sbb
scas
out
inc
pop
jp
leave
push
and
shl
shrl
or
cmp
dec
mov
cmpsl
jae
repnz
sbb
sub
mov
in
jns
dec
push
and
push
jbe
je
shr
xchg
in
adc
xchg
in
push
jp
add
ret
lods
jecxz
add
data16
push
mov
cmp
filds
pop
addl
jecxz
jmp
mov
icebp
das
mov
mov
test
xchg
push
je
lea
and
and
pop
dec
and
mov
inc
push
ss
ret
popf
push
cltd
xor
inc
clc
xchg
idivl
jge
jge
xor
jbe
mov
jae
jmp
inc
dec
aam
divl
out
xchg
and
in
lods
cmp
je
jl
aaa
pop
cmp
pop
call
add
add
mov
push
push
test
aas
dec
sub
movsb
lock
or
dec
repz
jne
insb
xchg
cmpsl
push
ja
aam
cmp
lods
xor
mov
test
sub
xchg
xchg
shrl
jp
mov
divb
pop
lds
xchg
ja
pop
xchg
cmc
rcl
mov
and
aaa
or
repz
mov
dec
jbe
dec
lahf
push
sub
cmpsb
pop
push
jle
mov
add
in
fisubl
xchg
mov
fistps
adc
and
out
stc
jg
push
lret
inc
out
mov
negb
pusha
aam
or
mov
cmp
xchg
xchg
push
sar
inc
inc
and
dec
fldt
cltd
mov
pop
sbb
bswap
jecxz
jns
sbb
push
push
xor
or
push
sti
dec
or
sahf
inc
movsb
jb
or
add
adc
pop
cli
push
das
scas
pop
jne
sbb
xchg
sbb
or
mov
push
pop
fwait
adc
inc
adc
mov
imul
imul
push
mov
repz
lcall
pop
add
push
mov
aas
mov
iret
mov
cmp
fildl
fdivrs
and
sub
mov
pop
je
jg
icebp
mov
mov
mov
mov
in
jmp
icebp
xchg
sub
dec
insb
imul
xor
jb
and
xchg
push
stos
mov
in
ret
cmpsl
mov
aaa
outsl
push
inc
pop
loope
sbb
jmp
lret
pop
gs
mov
in
imull
fdiv
movsl
push
addr16
jbe
sub
jb
inc
mov
ss
push
test
push
stos
mov
or
mov
mov
loopne
push
jp
daa
or
xchg
lods
ret
mov
xchg
ja
enter
mov
add
adc
mov
and
jge
sub
adc
mov
push
popa
jg
mov
jae
cltd
lcall
cltd
mov
shl
std
popf
mov
jmp
lret
adc
jo
add
adc
pop
mov
inc
jmp
shrb
dec
ret
add
adc
push
bound
mov
fwait
mov
mov
add
cs
mov
es
and
mov
mov
in
mov
ret
mov
xor
das
arpl
std
push
repz
nop
movb
or
push
je
push
mov
stos
push
das
lahf
loope
xor
push
into
push
das
xchg
mov
ds
stc
inc
sub
popf
and
enter
fildll
mov
scas
xchg
dec
pop
pop
mov
sahf
insl
cmp
jae
lock
mov
scas
sbb
adcl
sarl
aaa
icebp
jg
out
sub
pop
mov
dec
or
popf
or
jle
popa
sub
pop
xchg
xorb
jns
inc
fstps
or
and
scas
outsl
mov
xor
out
hlt
xchg
mov
xorl
rcrl
sahf
je
xor
sbbb
ljmp
pop
scas
jns
shll
dec
and
xor
pop
or
jg
fs
bound
stos
and
pop
shll
sub
push
pop
insb
pop
int3
leave
ret
push
mov
push
xorl
sbb
je
xchg
jo
mov
sbb
add
pop
rolb
pop
jbe
ss
sti
xlat
shlb
pop
outsl
lret
mov
lea
xchg
ja
out
xchg
xchg
nop
movsl
mov
xchg
xor
fstpl
jnp
jno
push
add
adc
add
outsl
xchg
xchg
add
aam
andb
arpl
sbb
mov
aam
repz
daa
lds
inc
mov
push
ljmp
mov
mov
inc
push
xor
sub
in
pusha
shrl
add
mov
ja
test
popf
add
pop
jns
nop
push
std
push
mov
mov
repz
pop
call
out
jnp
arpl
mov
push
repnz
inc
enter
aad
into
dec
push
push
adc
push
movsl
test
add
pop
or
popf
pop
inc
pusha
mov
mov
roll
pop
jae
movsl
jmp
mov
iret
xchg
jg
out
mov
in
xor
inc
repnz
jp
iret
outsb
xlat
arpl
in
fisttpl
jg,pt
sub
sub
xchg
rcrb
fadds
ja
cmp
clc
mov
push
mov
fwait
xor
cld
pop
xor
mov
adc
sub
xadd
xchg
inc
fisttpl
mov
push
dec
rorl
push
push
pop
movsb
addr16
scas
xor
pusha
sti
sub
sub
stc
jb
in
sub
std
or
xchg
rcl
inc
into
movsl
test
test
sub
addr16
xchg
jno
jl
jl
xor
cmp
fwait
sub
les
xor
and
stc
andl
lock
lcall
das
mov
sub
jmp
ret
cmpsl
push
cld
dec
mov
cmp
lods
decl
sbbl
cmp
popa
icebp
dec
inc
mov
sbb
iret
mov
adc
call
jmp
lds
xor
cli
mov
les
inc
mov
push
inc
push
pop
es
push
xchg
lods
inc
cmp
adcb
leave
xchg
rol
pop
mov
repz
dec
aam
pop
and
mov
call
rcrb
ja
scas
dec
loop
loopne
mov
mov
test
mov
int3
push
loop
sbb
xor
int3
cmp
mov
test
cmp
jnp
int
lea
and
popa
scas
mov
jp
dec
mov
xor
movsb
out
push
test
popf
fstpl
add
xor
or
add
repz
mov
or
repnz
dec
push
sti
cwtl
in
dec
jns
lods
add
push
sbbb
lods
sti
pop
iret
pop
cmp
repz
pusha
aas
clc
and
mov
xchg
enter
cmpsl
pop
inc
or
pop
mov
cmpb
fdivs
or
mov
push
test
mov
jl
mov
and
or
roll
ljmp
jno
dec
les
sub
fwait
cwtl
cli
inc
sbb
bound
jns
mov
divl
ret
inc
xor
pop
fmuls
fwait
cmp
jge
inc
ret
stos
divl
mov
scas
ss
push
fsubr
mov
fsubrl
push
imul
cmp
fs
jge
or
xchg
mov
xchg
icebp
in
mov
and
lret
push
loopne,pt
jo
cmc
sbbl
push
incl
lcall
or
sahf
xchg
rorb
jo
xchg
dec
das
fcomps
xchg
cmpsl
stc
xor
fprem
jae
lea
inc
sub
daa
push
bound
aad
sti
nop
inc
add
dec
data16
cmp
or
xlat
add
or
sub
dec
or
add
or
pop
popf
inc
push
aas
lock
adc
cwtl
mul
dec
add
sahf
enter
fisubs
ret
mov
icebp
adc
adc
sub
sbb
and
mov
pop
mov
test
dec
cmpsb
addl
jns
call
mov
mov
hlt
jecxz
loopne
jl
into
pop
fwait
in
or
lcall
and
pop
rolb
lea
adc
insl
xchg
jb
mov
test
mov
cmp
cmpsb
in
jne
pop
loop
xor
lock
das
bound
cmp
pop
or
ljmp
jb
test
sbb
push
cmp
mov
sub
xchg
jl
pop
push
add
test
cmpsb
sbb
mov
xchg
pop
mov
dec
mov
gs
adc
and
mov
inc
les
jno
imul
sahf
test
movsb
cmp
push
push
pop
hlt
insl
mov
or
dec
mov
shll
push
xor
xchg
movl
andl
lret
dec
rcrb
leave
shrl
fbld
lods
push
aaa
sti
mov
inc
cmp
test
jo
roll
cmp
fs
xor
aad
nop
push
bound
jp
cmp
and
ret
cld
cli
bound
mov
mov
or
dec
push
inc
mov
aas
pushf
fisttps
inc
adc
xor
lahf
cmp
push
in
push
xchg
xchg
imul
cmp
mov
lcall
xacquire
cmp
test
scas
mov
mov
xor
shrb
hlt
test
pop
cmp
push
std
jno
inc
dec
flds
push
mov
mov
nop
cmp
adc
mov
jl
mov
push
push
ret
add
fs
dec
dec
or
mov
popa
inc
out
xor
jno
shl
cli
test
pop
push
pusha
insb
dec
push
aaa
add
jmp
fidivrl
int
xchg
sub
xor
int
jb
outsb
subps
mov
cmc
fsubl
test
lds
cmpsl
cmp
mov
cmpsb
fdivrl
out
and
sbb
repnz
push
gs
les
cs
icebp
pusha
pushf
and
int3
mov
cmp
fcom
subb
jbe
sahf
stos
xchg
xchg
add
inc
movsb
leave
xchg
aad
lret
cmp
shl
and
sbb
push
sahf
adc
iret
aaa
scas
fs
pop
jle
movsb
test
pusha
mov
loopne
mov
stos
andb
and
sahf
aas
pop
js
into
insl
sbb
pusha
cltd
sbb
popl
or
sbb
mov
pop
sbb
or
mov
call
jnp
sub
mov
dec
mov
cmp
adc
pop
js
adc
clc
into
mov
mov
push
cmp
icebp
xchg
scas
test
xchg
rcrb
dec
rorb
pop
and
push
mov
jle
fisubs
stos
fwait
shll
mov
pop
int3
push
fistl
cmpsl
and
scas
lods
dec
cwtl
cmp
rcll
bound
sbb
insb
test
pop
rcl
and
add
push
subb
mov
xor
cmpsl
sub
out
and
shrl
and
jb
push
or
xchg
into
and
adc
repnz
pop
and
mov
fdivs
cmc
daa
pop
stc
notl
sbb
test
add
movsb
out
push
test
mov
mov
mov
pop
mov
mov
les
stos
leave
jnp
sahf
mov
negb
sbb
xchg
fsub
aam
xor
out
jo
repnz
inc
add
and
inc
cmpb
xor
add
push
mov
sub
scas
pop
cli
push
cmpsb
aaa
pop
cltd
into
pop
iret
daa
je
aam
cmp
push
popa
mov
mov
cmp
xchg
dec
lahf
stos
loope
adc
stc
rcr
push
push
mov
push
xor
cmp
mov
inc
mov
push
outsb
dec
pop
xchg
adcb
shr
jmp
outsb
push
addb
hlt
cmpsl
mov
cmp
dec
idivb
shrb
mov
mov
fsubs
mov
and
jae
mov
dec
push
imul
and
test
xchg
or
enter
inc
repnz
or
ja
dec
mov
je
pop
mov
pushf
jge
cli
add
xchg
cltd
push
fsubl
in
loopne
ljmp
pop
pop
out
add
inc
lock
mov
iret
mov
hlt
cmp
jo
test
loope
cld
mov
inc
divl
mov
sar
sub
adc
add
and
cs
imul
mov
and
mov
scas
and
add
insb
pop
pushf
jge
mov
xor
imull
pop
adc
xor
cmp
cmp
flds
loop
inc
add
lock
lds
add
out
dec
out
xlat
cmp
xlat
xchg
xor
jle
xchg
lock
and
pop
cli
sti
iret
inc
sub
dec
jp
and
sti
xchg
jne
and
mov
movb
and
add
clts
dec
and
out
mov
push
lock
or
test
xchg
xor
subl
lods
ja
enter
pop
xor
pop
loopne
push
imulb
xchg
sub
ficoml
ja
lahf
cmpl
and
pop
push
jmp
dec
xor
out
inc
mov
xor
adc
xchg
inc
add
xor
aam
mov
popf
ficompl
js
mov
in
xchg
rcrl
lock
push
xchg
test
sub
xor
in
ret
stos
incb
cld
add
fwait
adc
icebp
push
popa
dec
pop
cmc
mov
pop
xchg
add
inc
pop
out
sub
movsl
cmpl
add
pushf
push
dec
loop
pop
lods
outsl
mov
jge
bound
adc
stos
add
sahf
fsubs
sub
mov
test
aam
fs
lret
test
push
jmp
mov
mov
lods
cmp
pop
pop
call
xchg
xchg
dec
fwait
iret
out
mov
das
dec
and
cmp
or
mov
daa
inc
lcall
test
int
dec
ja
int3
fistl
shlb
arpl
test
ret
jge
cmp
dec
or
mov
in
xchg
sarl
add
push
lods
out
cmp
adc
in
or
fildl
adc
mul
mov
aad
xor
or
lods
js
mov
xchg
in
mov
push
out
int
iret
lods
into
shll
leave
aad
outsl
jnp
sbb
jo
shlb
lea
rolb
sub
into
sti
test
pop
sti
rol
pop
lcall
and
out
jno
jns
aad
cmp
xchg
rcll
cs
test
pop
jb
mov
in
sbb
sbb
and
sarl
stc
pop
adc
shll
std
mov
dec
int
fmuls
test
icebp
ja
iret
sub
popf
lret
mov
repz
sub
push
cmc
or
mov
lcall
jns
leave
pusha
fisubs
mov
enter
sub
out
push
xchg
push
mov
test
andb
lea
icebp
les
incb
ljmp
lods
pop
int3
pop
adc
std
mov
pop
push
pop
ljmp
jns
mov
lahf
push
popf
add
mov
jmp
sbb
js
cmc
jns
inc
in
loope
xlat
mov
paddsw
dec
sarb
dec
loope
movsb
push
mov
pop
dec
push
bound
xchg
jb
and
fmuls
mov
dec
mov
push
dec
push
xchg
sbb
sbb
ret
sub
loop
dec
mov
and
ret
or
cmp
sub
jo
aaa
xor
repz
dec
cli
fcoms
mov
ficomps
test
int
icebp
lcall
dec
adc
jb
lret
cmpsl
insl
sub
xlat
fwait
out
stos
push
repnz
mov
enter
xor
pop
roll
sub
xchg
dec
sbb
jmp
sbb
mov
repz
jmp
ret
sbb
call
mov
xlat
icebp
mov
or
pop
lods
sar
aam
aam
notl
cli
outsl
or
jae
addl
or
sub
pop
push
add
mov
mov
adc
sti
cltd
sarb
aas
adc
mov
in
jbe
popa
mov
in
pop
shll
mov
mov
adc
xor
xor
dec
pushf
adc
loopne
inc
or
lahf
arpl
hlt
xchg
cwtl
shll
in
dec
dec
jmp
mov
jae
out
jnp
fldl
sub
imul
cmp
out
nopl
cmovl
add
test
call
sbb
loope
xchg
fcmovne
or
imul
and
pop
cmc
mov
aam
xchg
test
push
nop
xor
in
jb
fsubrs
push
sbb
xor
movsl
xlat
inc
cmpsb
mov
bound
push
outsl
mov
pop
ret
adc
adc
pop
push
push
jnp
cmc
int3
jle
fisubs
jno
inc
mov
push
pop
jmp
pop
dec
pop
sub
or
jne
cmpsb
loope
pop
jo
enter
mov
iret
cltd
inc
xor
mov
push
gs
push
ljmp
sub
loopne
xchg
sbb
jl
shlb
sub
xor
outsb
shr
icebp
add
mov
shr
test
call
push
mov
sahf
jge
push
adc
or
pop
fnstenv
cmpb
sub
lret
mov
xor
ss
dec
in
into
rorb
add
ds
pop
push
mov
fldcw
xchg
or
test
inc
inc
sbbb
cmp
jo
xor
rolb
cmp
mov
cli
inc
cwtl
test
push
or
mov
repz
jno
imul
ja
xor
repz
jne
jge
pop
addr16
aas
mov
sbb
push
dec
or
sahf
mov
pop
lret
sbb
imul
scas
push
daa
sbb
js
or
scas
ljmp
xchg
not
adc
cs
cltd
ds
fcmovu
mov
mov
fsubs
inc
data16
icebp
sub
je
xchg
arpl
jne
cli
mov
lods
pushl
push
std
sub
inc
mov
data16
stc
mov
and
decl
mov
mov
pop
push
test
loopne
fwait
lret
cmc
outsl
mov
ret
out
std
ficoml
mov
inc
or
aam
or
fsubr
cmc
push
mov
rcll
mov
imull
xchg
xchg
cmpsb
pusha
pusha
xchg
mov
out
clc
sub
icebp
jbe
pusha
iret
lods
daa
movsb
popa
or
mov
sub
mov
out
pusha
and
jae
insl
cmp
push
lret
ret
out
jg
sub
dec
xchg
adc
pop
dec
push
push
gs
flds
push
sti
push
stc
lcall
ds
jae
cmp
loope
cmp
mov
pop
lea
sub
lret
mov
pop
dec
mov
cmp
jg
clc
inc
mov
push
enter
shl
sbb
lret
imul
mov
test
add
aam
adc
xchg
outsb
mov
push
sbb
sbb
clc
mov
arpl
inc
mov
jl
xchg
pop
ss
insl
sub
stc
inc
push
int3
mov
adc
das
mov
sub
mov
sub
rcrl
cli
lock
adc
hlt
mov
mov
and
stos
int
movsl
scas
addr16
jp
cs
mov
mov
sub
sub
fs
mov
push
dec
sbb
sbb
jns
push
ret
lret
int3
repz
and
hlt
cmp
mov
iret
jo
xchg
mov
inc
mov
stos
stos
mov
pop
test
mov
das
xchg
xor
inc
inc
bound
xchg
mov
scas
add
push
sub
push
std
jg
jb
xchg
fwait
call
stos
cmpsl
divps
sbb
mov
lret
fstps
lret
dec
adc
ss
in
and
mov
xchg
cmp
repnz
pop
push
repnz
in
out
lret
cmp
rcl
jl
push
mov
jno
cmp
adc
inc
fwait
xor
stc
add
mov
add
pop
daa
sub
pop
arpl
lock
xchg
jno
inc
xor
outsl
xlat
icebp
cwtl
sub
mov
or
es
pop
arpl
int3
mov
fistpl
scas
in
jge
mov
jl
bound
sti
jbe
mov
test
add
inc
add
loope
mov
outsb
mov
xor
nop
ret
and
jb
cmp
jne
pop
in
std
xchg
popf
sbb
xor
push
rcr
add
shll
stos
cmp
mov
call
and
aas
mov
mov
mov
rol
arpl
add
cmp
out
adc
mov
aaa
clc
mov
push
add
mov
pop
dec
ds
xor
xchg
pop
jecxz
popa
aaa
or
pop
nop
mov
jbe
mov
lods
mov
into
jl
je
mov
pusha
inc
pop
ret
mov
push
fxch
or
nop
pop
cmpsb
rorb
test
dec
insb
xchg
or
inc
add
mov
and
push
test
or
out
lret
rclb
and
mov
sahf
adc
dec
inc
out
push
add
xor
ret
sbb
enter
add
aam
out
hlt
insl
mov
movsb
pusha
mov
adc
movsb
js
mov
jne
movsl
lret
rcr
icebp
mov
pop
jp
push
adc
hlt
js
imul
incb
pop
lcall
insl
push
fwait
fs
pop
xor
and
in
xor
push
adc
cld
sbb
imul
add
out
inc
addb
push
xchg
inc
lcall
notl
mov
std
mov
push
adcb
cmp
cmp
or
dec
push
mov
pop
mulb
scas
paddsb
fimuls
xchg
popf
sub
lods
inc
mov
pop
sub
or
idivl
in
je
in
dec
fsqrt
ss
pop
sub
dec
cmc
mov
mov
jae
aaa
cmp
jbe
das
fisubs
and
xor
sbb
lods
jo
scas
lret
push
lahf
cmp
and
jbe
call
imul
lahf
int3
repnz
xor
add
sbb
jns
out
hlt
insb
mov
inc
pop
xchg
mov
fmull
scas
lods
jno
mov
dec
movsl
sti
pop
ja
mov
pop
sbb
jle
xchg
loope
pop
ds
inc
stos
aad
or
lock
fisubl
and
fs
ficoms
jl
lcall
test
repnz
and
mov
int3
pop
inc
outsl
xchg
insl
stc
adcl
jb
mov
dec
xlat
jp
aas
mov
or
pop
fnstsw
sbb
test
xchg
out
and
sub
mov
add
addr16
test
add
fldenv
cmpsb
jb
test
bnd
outsl
xchg
pop
push
icebp
fwait
mov
sbb
adc
loop
pop
lods
jecxz
jmp
punpckhwd
shl
lock
jmp
bound
movsl
outsl
hlt
movsb
mov
stos
mov
or
dec
inc
fildll
leave
test
or
addr16
dec
stos
dec
pusha
jmp
inc
mov
mov
das
jae
lcall
cmpsb
roll
mov
xchg
sbb
rclb
imul
push
pop
adc
scas
add
icebp
push
daa
mov
push
movsl
cmp
fsubs
popa
sub
push
jns
addr16
jbe
adc
in
inc
mov
roll
push
aam
push
les
dec
jg
jnp
add
push
mov
cli
icebp
mov
cmp
mov
jne
cmp
cmp
popl
add
fisttpl
mov
nop
nop
mov
xchg
mov
or
ljmp
xchg
mov
sub
fs
mov
xchg
test
pusha
inc
in
ljmp
iret
xchg
inc
xchg
or
add
lea
test
lcall
mov
int3
push
lock
mov
daa
sti
cmp
in
add
ss
ret
pop
mov
mov
xor
mov
mov
fmul
das
in
out
shlb
dec
nop
mov
rol
ss
push
mov
cmp
cmp
inc
xchg
or
inc
and
cmpsl
pop
and
dec
jecxz
stos
cmp
cmp
mov
lock
push
inc
mov
faddl
into
lock
test
push
pop
xchg
sbb
inc
out
adc
cmp
sbbl
rcl
icebp
and
sub
test
mov
and
test
xor
pop
in
sbb
lcall
ret
inc
leave
lock
ret
dec
xchg
inc
lods
in
push
movsl
cs
aam
notl
leave
dec
mov
jg
mov
adc
dec
mov
rcrl
or
or
sti
xor
out
cmpsl
add
mov
xchg
ficoml
sub
jnp
mov
sbb
add
test
imul
int
outsb
lret
addb
mov
dec
shrb
shlb
mov
outsb
arpl
mov
outsb
add
cmpsb
sbbl
ljmp
sahf
mov
test
lods
pop
shlb
inc
std
js
lock
adc
out
inc
adc
daa
xchg
push
mov
mov
mov
sbb
out
imul
shll
repz
movsl
daa
icebp
dec
or
mov
pop
and
divl
mov
jnp
das
xchg
repnz
cmp
lahf
test
inc
sub
cs
enter
loop
push
lds
out
cmp
pop
cs
and
mov
sbb
out
and
xchg
jne,pt
lods
xchg
iret
push
and
pop
mov
mulb
push
push
add
jne
hlt
and
or
cmc
lahf
mov
inc
adc
ror
test
pop
mov
cltd
sarb
scas
mov
jl
sub
dec
pusha
dec
ds
test
sbb
xchg
pusha
mov
into
dec
mov
mov
repz
mov
inc
add
enter
rcrb
add
push
sbb
jno
push
xor
pop
stc
mov
dec
loope
lea
fiadds
jb
dec
lahf
lds
data16
lods
std
push
cmp
ja
in
sbb
adc
cmp
sub
mov
jae
js
shr
mov
xlat
outsl
mov
xor
jbe
push
in
addl
add
divl
leave
int3
xchg
mov
inc
mov
out
push
es
or
push
push
outsl
test
adc
gs
lahf
sub
popa
out
mov
jae
mov
and
fcoml
test
stc
inc
rorl
adc
in
jne
fnsave
in
fdiv
in
jg
lea
xchg
leave
sidtl
ret
ss
lea
sub
pusha
add
mov
and
adc
rcrb
gs
or
push
pop
or
out
and
mov
fildll
flds
mov
cmp
cltd
shlb
lcall
pop
jmp
out
pop
sbb
xchg
imul
or
pusha
mov
pop
push
fnsave
lret
jae
xor
xor
inc
cmp
push
js
mov
ret
sbb
out
loopne
dec
push
int3
push
or
push
in
mov
dec
rclb
adc
loope
pop
test
pushf
in
ljmp
repz
adc
add
mov
daa
orl
mov
iret
pop
call
js
pop
lret
and
sbbb
rcrl
cmpsb
rolb
jg
adc
and
int3
in
leave
loop
lds
pop
imull
add
adc
push
push
mov
ljmp
inc
cs
sbb
jecxz
enter
pop
jno
hlt
popa
fisttps
hlt
popa
pop
jo
movq
out
cld
mov
cld
add
xor
push
lods
inc
pusha
sbb
pop
lret
pop
push
gs
cmp
push
sbb
icebp
dec
nop
jns
int
addb
cmp
ljmp
push
push
pop
sbb
pop
xor
sub
jae
bnd
mov
adc
push
jg
jg
mov
sbb
fsubl
popa
sbb
jl
dec
jb
xor
out
jae
fiadds
sub
xchg
and
jno
jo
and
push
test
mov
scas
sbb
ror
mov
cmp
icebp
das
jle
mov
scas
jl
inc
dec
mov
fs
pop
mov
imul
jge
stos
outsl
jno
insl
mov
popf
xchg
sbb
test
scas
adc
jmp
cmc
jae
data16
cmpl
jg
mov
ret
or
pop
lds
ss
xor
cli
lock
mov
in
jmp
inc
sbb
hlt
jne
ja
adc
je
jb
jmp
jbe
and
jae
ds
lods
ds
jne
loop
loop
xor
pop
ljmp
jecxz
mov
cmp
lds
adc
ja
inc
imul
dec
ss
dec
ja
imul
call
insb
stc
out
popa
dec
mov
mov
pop
lahf
and
out
loop
xchg
nop
mov
in
mov
sahf
inc
adc
xchg
cmpl
test
ficompl
mov
cmpsl
int
sub
dec
mov
xchg
fldt
cmpsl
xchg
pushl
xor
call
mov
push
iret
jnp
and
xor
xchg
and
jge
xchg
aaa
dec
cmp
lcall
cmp
push
and
repnz
in
jmp
inc
in
leave
mov
imul
es
push
jns
out
out
mov
in
fs
and
adc
xchg
xchg
ss
sar
orb
out
cmp
pusha
mov
add
inc
popf
lret
cmpsl
jae
sbb
and
lcall
mov
sbb
mov
mov
nop
cs
mov
cmp
mov
lds
cli
ret
out
dec
mov
sub
das
loope
fldt
sbb
jl
rorl
gs
imul
sbb
pop
shrb
std
jbe
add
test
imul
imul
jg
xchg
adc
mov
xchg
pop
mov
icebp
push
movsb
push
sub
pop
sub
test
loopne
loop
insl
and
push
mov
jecxz
jo
add
addr16
fistpll
push
shll
aam
in
mov
shlb
cmp
adc
loopne
cltd
and
loop
fisubs
sbb
xor
test
out
gs
and
or
aad
cmp
shl
mov
mov
jecxz
push
je
fistl
push
xor
aaa
loop
ja
pop
test
rcr
repz
push
mov
jne
test
sub
fcoms
shll
in
sbb
sub
push
bound
dec
push
out
jmp
cmp
inc
ljmp
ror
lea
jg
shr
std
jo
in
arpl
sbb
aaa
nop
sbb
rcr
rol
push
ss
or
jbe
pop
aas
rclb
movsl
cltd
cld
stos
test
cmp
test
mov
pop
fs
lods
sub
push
dec
inc
sbb
lcall
jmp
jns
push
div
inc
pop
loop
inc
mov
jae
adc
and
jno
les
mov
popf
daa
adc
in
fcompl
adc
pop
sub
aaa
lret
fsubrl
cmpsl
mov
rorl
insl
adc
jg
repz
jmp
xchg
mov
pop
pop
and
out
add
pop
xor
dec
mov
jecxz
ss
dec
adc
and
repnz
push
ljmp
test
aad
xor
xchg
push
rclb
imul
lods
int
and
xor
pushl
mov
vorps
push
pop
call
add
daa
sub
gs
mov
pop
push
xor
aam
fcomps
push
mov
mov
mov
mov
daa
orb
shr
je
or
sbb
cmpsl
fwait
insb
jp
add
xchg
mov
pusha
jmp
mov
sub
lret
sbb
pop
cmp
cwtl
mov
ret
int
cmp
mov
jle
cmp
out
mov
mov
lahf
rcr
addb
lret
dec
aam
lret
aam
adc
pop
std
shr
push
lods
pusha
ja
dec
subl
rcll
add
cmp
shr
lods
imul
jl
sbb
xor
xor
mov
or
cmp
ret
mov
mov
cmp
lea
adc
mov
inc
cmc
rcll
shrb
jecxz
jbe
add
push
out
fwait
pop
add
lock
cmpsb
add
sbb
fiaddl
xchg
push
cmp
pop
or
dec
movsb
push
jb
mov
jge
psubq
stos
es
add
decl
sub
sbb
nop
or
je
mov
mov
jmp
dec
mov
adc
xchg
flds
xchg
push
stos
insb
xor
sub
jge
sub
or
mov
fdivl
les
xchg
inc
ret
mov
mov
mov
jecxz
push
ret
xchg
fisubl
or
add
adcb
test
fadds
lahf
jno
cld
stos
xor
lock
sar
outsb
mov
repnz
pop
sbb
outsl
inc
test
or
pop
mov
icebp
push
vpperm
fs
jne
pop
pop
dec
push
fisttpll
iret
inc
and
xchg
cmpsb
lods
adc
repnz
jge
cmp
mov
jecxz
loopne
paddsw
int
scas
sarl
ja
xchg
jne
lret
inc
stc
sahf
ljmp
xor
and
and
push
xchg
and
cld
shl
inc
pop
adc
cmp
ja
lds
pop
mov
xchg
in
sub
mov
adc
adc
inc
fidivrl
out
push
mov
test
cmpsb
add
dec
ret
push
negb
xor
or
jnp
fistpll
jecxz
push
mov
mov
iret
pop
inc
fdivl
mov
enter
push
fimull
and
rcrl
lods
add
xchg
mov
arpl
add
int
push
movsb
xchg
cltd
pop
xor
mov
loope
mov
cmpsb
bound
cwtl
and
imul
gs
and
dec
xor
pop
dec
outsl
ss
outsb
aaa
in
adc
test
sbb
dec
adc
orl
pop
jle
pop
cmp
xchg
mov
push
or
sar
sbb
ficoms
loope
mov
dec
lret
mov
xor
andl
aas
xchg
mov
or
sbb
rolb
movsl
mov
push
mov
adc
sub
cmc
or
popf
push
test
in
jl
movsl
clc
dec
jno
mov
sub
sub
jmp
fbstp
mov
mov
les
sbb
sbb
mov
inc
jl
mov
mov
dec
pusha
mov
jns
xchg
push
mov
push
fmuls
jae
adc
and
mov
lea
add
mov
call
sbb
es
in
shld
push
cmp
push
cmpl
mov
and
or
repnz
pop
les
fildl
lret
daa
mov
out
out
test
mov
sub
insb
cmp
mov
nop
cwtl
shlb
imul
and
or
pop
mov
test
mov
mov
push
mov
lgs
push
aam
daa
cmc
add
jg
add
adc
fsubs
pop
cmp
movsb
out
and
in
push
cmpsb
test
cs
push
es
mov
data16
testl
pusha
test
dec
jo
jo
shll
push
shll
xchg
mov
sub
mov
aad
mov
rclb
mov
pop
add
cmp
push
mov
fs
sti
mov
mov
sub
popa
jo
push
data16
xchg
dec
mov
cmp
jnp
jl
xor
push
daa
gs
lcall
in
fwait
decl
cmp
rol
add
call
xchg
pop
xchg
inc
test
outsb
outsb
mov
imul
or
leave
push
or
ret
xchg
xchg
jnp
or
xor
and
fdivrs
mov
sbbb
push
scas
cmp
cmp
pop
dec
fisttpll
rep
stos
pop
mov
iret
lea
xor
jno
xor
nop
std
fistpl
push
lods
sarl
andl
fcoml
mov
popf
leave
fsubr
and
insl
sub
cld
jo
imulb
sub
lret
xchg
push
cld
xor
push
push
add
movsb
imul
sahf
enter
pop
ret
bound
iret
in
push
inc
cld
pop
out
and
aas
popf
cwtl
sub
fsubrl
test
out
sbb
daa
add
sub
sbb
xchg
and
xor
sbb
push
fistps
ret
mov
out
out
inc
fcmove
outsb
pop
mov
fs
hlt
test
aaa
outsb
cwtl
pop
lock
dec
push
dec
test
xor
sar
xchg
lcall
fisttps
jmp
jns
fnstsw
ss
les
in
into
mov
in
rcr
lock
dec
outsl
or
cmp
loope
inc
mov
and
mov
rclb
lret
dec
out
loopne
jb
loope
mov
lock
sahf
std
rcl
push
ds
scas
data16
inc
leave
adc
scas
or
jle
pushf
scas
dec
mov
mov
stc
mov
daa
outsb
lds
push
mov
cmp
loopne
pop
push
aas
xor
call
aaa
or
stos
int
mov
cmp
outsb
sbb
std
mov
push
arpl
adc
test
add
inc
mov
in
pop
imul
popa
dec
out
cmpl
push
fidivrs
or
mov
arpl
mov
xor
test
mov
cltd
idivl
xchg
lret
push
mov
or
pusha
add
outsl
sbb
testl
lock
xor
daa
cmp
sub
cltd
xchg
adcb
and
pop
insb
pop
and
insl
imul
adc
loop
test
and
xchg
mov
sbb
testl
outsb
sarb
add
mov
test
adc
in
mov
adc
mov
in
arpl
mov
popf
rcr
push
jnp
insb
push
dec
or
lcall
lahf
mov
xchg
mov
pop
inc
mov
xlat
inc
mov
mov
xchg
in
xchg
sbb
je
pop
or
mov
xchg
fnsave
ja,pt
outsb
fimull
or
popa
outsb
sbb
sub
dec
push
sahf
lods
adc
cmp
fwait
sub
xchg
aam
inc
xchg
jg
ss
cmpsl
sbb
mov
out
test
jo
movsb
sahf
pop
test
push
movsl
push
or
lret
and
das
je,pt
jp
in
in
dec
pusha
popf
cmpsl
lret
mov
mov
mov
addr16
jp
push
lock
sahf
xchg
iret
data16
lods
inc
push
xchg
adc
aas
out
mov
jecxz
mov
jl
scas
sub
xor
mov
sbb
stos
jbe
lds
clc
enter
xor
faddl
pop
shl
xor
sbb
push
inc
mov
pop
loope
enter
sbb
xchg
or
mov
mov
jae
lds
dec
and
or
xchg
push
lods
cmp
mov
jmp
lods
gs
in
and
stc
sbb
into
cmp
stos
test
push
mov
mov
int3
test
sub
push
imul
push
xchg
and
inc
addr16
mov
adc
mov
xlat
or
cmc
xchg
shlb
pop
push
ret
cmc
ret
int3
push
outsb
pop
sub
fs
pop
fwait
mov
fs
test
sbb
push
repnz
into
add
or
xor
dec
shrl
loopne
outsb
add
lds
mov
jae
fadd
mov
jnp
mov
mov
push
jecxz
subl
ficoml
sbb
xor
pop
lret
sub
or
push
movsl
mov
dec
stc
stos
ss
cmp
clc
adc
mov
sti
dec
pop
loop
xchg
sbb
mov
pop
in
sbb
gs
mov
push
cmc
pop
xchg
hlt
loop
sub
icebp
adc
in
xor
jecxz
mov
sub
sbb
rcrb
mov
jno
jle
jmp
sub
cli
pop
xor
fcomp
xchg
mov
dec
movsl
or
cmpsl
stos
push
decb
sahf
adc
and
idivb
movsl
mov
xchg
clc
push
or
nop
pop
gs
loop
push
xchg
aad
repz
iret
jecxz
aad
push
fucomip
outsl
mov
cmp
rcll
jmp
outsl
adc
jno
jmp
add
inc
dec
int
lahf
lret
mov
stc
xor
aad
cmp
inc
bound
sub
sbb
adc
shrl
mov
movsl
cmp
pop
aas
ljmp
cmp
sbb
mov
pusha
pop
fcoml
cld
mov
imulb
mov
lret
sub
call
and
test
stos
lcall
xor
cltd
lcall
dec
movl
scas
loopne
mov
jecxz
jo
jge
jmp
and
inc
dec
bnd
sbb
jge
lcall
sub
das
mov
rcll
out
iret
add
into
into
popf
dec
sbb
aad
inc
add
jo
add
push
mov
fildl
std
sbb
leave
orb
popf
lods
push
pushf
jnp
aam
mov
pop
jbe
pop
into
lods
or
dec
push
leave
cmp
les
cld
mov
adc
out
inc
sbb
ret
cmpsl
loope
pushf
pop
pop
mov
push
dec
and
and
mov
scas
pusha
jnp
push
and
xchg
testb
dec
add
mov
jne
and
push
jge
push
cmp
push
inc
rorb
or
jp
sbb
jl
xchg
mov
mov
iret
imul
push
movsl
jbe
dec
lods
dec
dec
nop
insb
mov
mov
test
dec
push
jnp
add
fstl
mov
add
xchg
mov
jnp
into
pop
js
call
push
pop
mov
aaa
push
adc
insl
mov
test
das
rclb
nop
cmpsb
xor
rcrl
sti
push
pop
js
and
push
add
in
cmpl
jl
xor
xchg
sub
ret
jp
pop
dec
lahf
push
fiaddl
pop
jns
aas
loope
xchg
push
cmp
and
movsb
cmp
and
call
es
sub
lahf
testl
mov
les
sub
lods
daa
fbld
pop
xchg
pusha
into
inc
outsb
ljmp
xchg
icebp
mov
add
iret
inc
push
sarl
pusha
je
jl
iret
xchg
push
int
or
pop
xchg
push
add
mov
add
xor
fadds
stos
add
ds
mov
and
cmpsl
loop
jl
xlat
push
mov
inc
aaa
loope
fnstcw
fistpl
jecxz
das
adc
xchg
addr16
pop
shr
ror
inc
pusha
out
jo
pop
hlt
std
dec
shl
add
fdivs
stos
jbe
ret
mov
jg
and
ret
insl
mov
les
into
dec
dec
jl
dec
pop
inc
xchg
popf
cmc
mov
mov
inc
jmp
lods
pushf
inc
adc
js
dec
and
ret
lds
add
cmpsl
mov
push
loop
js
rcl
mov
jnp
clc
lcall
leave
fidivrl
test
ljmp
inc
loope
jne
sub
push
fcmovnbe
adc
xchg
lcall
pop
setb
popa
pop
loope
or
pop
mov
mov
jecxz
sub
cmp
and
mov
loop
bound
push
jns
jmp
int
pop
jl
sbb
and
xor
add
icebp
adc
push
or
call
sti
cmp
fwait
lea
sub
cltd
cmpsb
mov
mov
jg
not
aam
test
xchg
in
push
pop
push
sbb
push
in
shl
inc
sarl
flds
mov
inc
pop
add
push
imulb
mov
mov
imulb
xchg
and
sub
scas
xor
sub
and
inc
sbb
and
out
push
push
mov
fstps
cmp
mov
cmp
bnd
das
test
lahf
sub
fisttps
dec
imul
in
pop
aaa
mov
and
jne
ja
adc
testb
inc
test
aad
lock
fidivrl
and
pop
negl
idivl
int
xchg
mov
es
daa
inc
insb
out
mov
mov
test
std
sub
mov
aad
stc
push
mov
pop
cmovae
mov
sub
rorb
inc
inc
lret
push
adc
sbb
leave
push
fsts
movsl
pop
cmp
mov
aas
repz
pop
sti
popf
aam
es
xor
call
maskmovq
shl
jne
inc
lcall
es
rcll
jno
sahf
scas
iret
and
lds
lods
ret
xchg
es
adcb
xchg
cmp
push
jb
pop
in
cs
and
jb
mov
adc
mov
mov
pop
gs
shlb
rdtsc
enter
mov
jle
lcall
loopne
jl
rcl
test
into
xchg
lcall
xlat
xchg
loop
cmc
or
mov
js
mov
jb
cmc
jns
push
or
or
insl
or
or
cmpsl
adc
jno
nop
loopne
push
adc
xchg
insb
xchg
pop
and
ds
cwtl
fimuls
push
jne
inc
in
mov
andb
jb
lods
repnz
dec
int
dec
loopne
sbb
lds
decb
ja
add
repnz
pop
aam
mov
les
adc
icebp
add
movsb
or
out
scas
fs
repnz
push
ja
lea
pop
push
mov
cmp
daa
fmuls
pop
pop
jae
pushf
dec
bound
jbe
xchg
sar
insl
jne
shll
arpl
xchg
ret
xlat
xor
outsl
fwait
imul
xchg
inc
jae
sbb
mov
orb
or
ffree
and
pusha
ss
fwait
and
repnz
xchg
cld
xchg
and
add
iret
sub
pop
push
adc
test
cmp
in
jne
dec
pop
cmp
rorl
das
addr16
loopne
subb
cmp
sbbb
fidivl
cmp
pusha
movsl
xor
xchg
stc
out
fs
push
mov
clc
ret
jbe
clc
jle
scas
sub
jmp
mov
xchg
je
bound
xor
mov
ds
cwtl
daa
xchg
imul
mov
xor
mov
jbe
subl
or
push
push
adcl
mov
aam
cs
icebp
push
call
adc
in
aam
sbb
icebp
les
jns
es
cmp
pop
mov
xchg
push
scas
test
out
ret
cli
push
outsl
xchg
jecxz
mov
ficoms
push
lds
out
mov
inc
add
jg
adc
in
test
aas
jno
fs
sti
dec
rcrl
dec
inc
push
mov
sbb
test
cmp
jl
xor
or
jno
and
jnp
or
jbe
mov
les
mov
inc
sti
hlt
popa
fsub
clc
jecxz
mov
std
mov
not
jnp
mov
outsb
loope
dec
jno
outsl
pusha
lret
xchg
das
neg
sub
adc
dec
jl
adcl
mov
mov
jp
aaa
cli
das
xlat
xor
ret
ljmp
and
leave
mov
dec
adc
loope
cmpsb
lds
popf
pop
aam
rorl
xchg
mov
inc
cmpsb
iret
outsl
fidivl
jge
push
push
clc
mov
bound
push
cli
jno
sahf
pop
push
outsl
enter
scas
mov
mov
sub
jno
sbb
das
cld
and
sub
or
mov
dec
nop
xchg
cmp
in
add
mov
mov
in
cmp
sub
in
mov
sub
mov
into
lods
inc
jo
xor
jo
dec
lock
les
sub
fs
aam
ret
inc
push
add
stos
or
mov
push
inc
scas
outsl
in
test
seta
cmp
rol
pop
push
sub
pusha
sub
mov
push
stos
xor
pop
mov
call
aaa
in
test
jle
xor
mov
mov
jno
es
or
cmp
push
adc
lock
ffree
jnp
push
pop
lahf
cmc
sub
mov
testl
inc
aad
aam
lret
push
or
add
mov
dec
clc
mov
pop
inc
shlb
mov
aam
mov
negb
xor
clc
add
dec
lock
movsl
hlt
cmp
jae
into
xor
test
fnstenv
sbb
dec
xor
rcll
xchg
cmpsb
sbb
or
mov
outsb
push
mov
mov
jnp
loopne
mov
int
mov
mov
gs
xor
mov
cld
iret
rcrb
inc
pop
adc
push
cvtpi2ps
leave
inc
lea
testl
jecxz
sub
mov
mov
scas
xlat
popl
popf
dec
ret
clc
mov
jo
xchg
xchg
pop
inc
scas
push
mov
jge
cli
adc
xchg
popa
sbb
xchg
xor
adc
or
in
jg
in
divb
pop
ret
add
push
mov
mov
xchg
mov
cmp
xlat
ficompl
jecxz
sub
pop
std
xchg
jbe
push
dec
lret
decb
rcrb
mov
pop
xchg
cltd
and
into
fdiv
inc
jg
incl
adc
aas
lods
aaa
pop
inc
mov
loop
ret
lods
xor
sbb
inc
mov
fdivrs
jae
push
push
add
xor
int
aas
push
push
adc
loopne
sub
jbe
in
sub
int
mov
push
xlat
enter
xlat
in
int
xchg
xchg
adc
inc
xlat
rcrb
test
shrl
out
mov
mov
shlb
shr
lcall
hlt
out
flds
pusha
popf
fstps
xlat
call
cmp
call
or
dec
cmp
inc
mov
shl
add
gs
bound
xchg
lods
dec
or
xchg
rorb
push
addr16
cld
popa
dec
iret
hlt
jecxz
pop
sbb
or
inc
lcall
cwtl
lcall
dec
push
addr16
add
lock
sub
test
xchg
mov
shlb
inc
add
jae
or
xchg
div
lock
in
adc
add
cmp
ss
cwtl
stos
mov
aas
shrb
icebp
pushf
mov
repz
or
les
mov
fidivs
idivl
xchg
orl
and
aas
imul
xchg
out
loopne
push
xchg
cmp
sub
lods
sub
pop
xor
and
dec
into
iret
loope
repnz
pop
mov
hlt
rclb
aas
mov
sub
dec
js
aaa
pop
pop
jle
push
jb
dec
popa
lahf
adc
mov
hlt
inc
pop
sub
add
dec
mov
adc
inc
test
mov
sbb
push
xchg
xchg
test
shl
sbb
sub
xor
push
sub
pop
xlat
inc
fsubrs
cmpsb
jnp
int
cwtl
out
dec
bound
lcall
lods
hlt
jns
mov
rcrl
and
call
iret
cmovns
xor
sbb
jl
xchg
and
lret
mulb
pop
mov
sub
and
sub
cmpl
add
mov
addr16
mov
fst
and
nop
je
inc
int3
jo
pop
fcompl
aas
sbb
stos
ljmp
into
clc
mov
outsb
pop
push
xor
es
jmp
scas
loope
aaa
imull
adc
pop
mov
adc
aad
jg
xchg
sbb
jle
pop
iret
iret
jecxz
mov
mov
je
cli
push
xchg
test
pop
test
cmpsb
jle,pn
push
loopne
in
lea
jge
mov
cltd
cmp
sub
add
nop
or
stc
mov
sbb
lahf
ficoml
ret
mov
jno
sub
mov
sbb
lret
xchg
xchg
jo
pop
pop
ds
jecxz
rcrb
lcall
aam
out
mov
sub
sbb
test
pop
incl
push
mov
or
jle
xor
stos
clc
or
xchg
push
fdivl
inc
cmpsb
or
jmp
jmp
add
or
fsubrl
pushf
sbb
mov
ja
or
shll
arpl
dec
push
out
adc
xor
faddl
movsb
push
insb
push
lods
testb
mov
inc
pop
cmp
xchg
pop
and
incl
js
les
jae
jmp
dec
pop
in
xor
fisubl
sbb
sub
xchg
mov
fistps
adc
and
enter
nop
xchg
adc
dec
push
out
jne
ja
or
insl
push
out
lahf
int
xchg
fs
ja
mov
push
pop
jle
inc
cmp
movq
add
sahf
fdivl
jp
stos
stos
sub
push
loop
dec
pusha
mov
push
dec
or
popf
into
mov
cwtl
adc
in
cld
divl
jecxz
push
jo
mov
mov
fstpt
loopne
lret
xorl
clc
out
lds
xor
movsl
hlt
sahf
adc
mov
xchg
cltd
stos
popa
xchg
inc
adc
insb
push
jns
mov
shrb
repnz
push
mov
cs
xlat
sub
cmp
cmp
movsl
popa
scas
adc
sub
sarb
mov
add
aaa
inc
jbe
jo
adc
sub
dec
dec
nop
or
sub
fs
int
clc
mov
pusha
loopne
push
cmpl
pop
xchg
inc
push
loopne
cmc
jecxz
fidivl
xor
jecxz
cmp
and
cltd
in
jno
lods
xor
fmull
daa
xchg
rol
xor
jno
pop
push
sbb
jae
jp
sub
mov
xlat
xor
into
jg
test
mov
jge
cmp
adc
jl
xor
mov
sbb
pop
inc
outsl
sbb
mov
mov
cmp
xchg
jne
mov
sahf
insb
imul
cmp
jmp
es
cwtl
enter
out
fs
push
inc
cmp
getsec
lea
pop
and
xor
add
cmp
adc
ficoms
or
push
cmp
int
mov
jns
xor
iret
adc
imul
xor
inc
test
inc
jp
dec
mov
mov
je
dec
xchg
mov
sub
je
jecxz
movsl
cwtl
push
ss
sub
lods
fadds
inc
mov
push
cmp
dec
cmp
jnp
loope
sub
rolb
mov
and
push
sub
fstpl
add
fldt
jge
int
lahf
xor
fcom
test
cmpb
xchg
cmp
and
sub
lret
enter
mov
popa
mov
lret
outsl
pusha
mov
adc
cmpsl
and
or
fwait
lods
pushl
jmp
xor
or
push
mov
orb
dec
jecxz
lahf
jb
sub
jnp
pusha
fldt
rorl
mov
nop
popf
movsb
mov
lret
and
lea
inc
add
and
outsl
sbb
imul
gs
pushf
sub
notl
pusha
push
mov
pop
test
das
mov
cwtl
pop
mov
test
out
mov
inc
and
mov
ja
push
lahf
xor
sub
sbb
sub
add
faddp
or
add
sbb
ja
push
repnz
adc
shr
sub
je
inc
mov
mov
loope,pn
jcxz
xchg
imul
mov
lds
pop
test
sbbb
lret
roll
cwtl
es
push
addb
ret
pusha
std
push
mov
push
shll
rorl
cltd
mov
mov
into
push
jp
jmp
out
popf
add
add
mov
negb
std
adc
cltd
mov
add
fcomi
ret
ja
outsb
inc
int3
cmp
push
ja
fidivl
xor
call
addr16
mov
cmpsb
jecxz
lods
fistpll
xchg
inc
aaa
mov
adc
mov
adc
out
cmc
enter
sbb
xlat
test
pop
mov
lahf
jae
pop
ret
sub
inc
sub
inc
int
push
xor
pop
test
jns
inc
aad
pop
mov
repz
add
jle
and
cmp
and
inc
cmpsl
mov
pop
inc
add
enter
and
push
cmp
repnz
mov
ds
add
nop
cmpsb
imul
or
imul
and
cltd
push
cmp
mov
cmpsb
mov
popa
clc
push
fcomip
bound
inc
add
and
test
sub
leave
andl
popl
int3
addl
or
pop
sub
movsb
imul
imul
lods
insb
cli
inc
or
test
pop
mov
hlt
add
jg
sbb
aam
bound
jb
mov
push
adc
loopne
call
and
repnz
flds
loope
lods
test
scas
mov
jp
in
xor
sbb
jnp
sti
or
fbstp
inc
jmp
adc
push
xchg
jecxz
mov
fldl
add
fdivrl
jl
frstor
cld
mov
mov
jnp
add
jns,pt
mov
mov
cmp
xchg
out
sub
xchg
sbb
push
cld
shlb
mov
daa
out
sbb
mov
pusha
push
stos
lods
mov
bound
cmp
inc
and
aad
ljmp
xchg
xchg
xchg
lahf
xchg
in
push
lock
cmp
sub
ret
int3
mov
aaa
cltd
or
daa
aam
out
push
jnp
decl
mov
dec
xchg
jno
add
dec
sub
and
jbe
nop
sub
test
inc
or
mov
cmp
cmpsb
ljmp
lock
rolb
mulb
nop
imul
dec
sbb
into
adc
jp
cmc
add
cmpsb
xchg
aad
daa
xchg
push
fs
fsubr
mov
shlb
fcomps
clc
or
inc
push
jp
mov
lods
xor
mov
test
sub
idivb
push
daa
inc
stos
or
test
sbbl
ffreep
daa
pop
es
hlt
ja
out
cli
inc
xchg
push
adc
out
aaa
hlt
cld
xchg
fstl
and
rdmsr
pusha
push
dec
negl
lds
insb
and
outsb
lcall
xchg
orb
xlat
data16
sub
inc
mov
inc
xchg
ja
pop
rep
or
fcmovbe
mov
mov
movsb
cmpsb
dec
popa
fistps
sbbl
mov
sub
pop
push
ljmp
sub
aas
cld
add
popa
pop
inc
out
jmp
nop
inc
imul
nop
pushf
add
jnp
push
and
sub
rcll
mov
call
outsb
aas
add
pop
cmp
xchg
popa
or
dec
xor
rcl
cld
scas
dec
dec
xchg
or
fcomps
mov
mov
mov
lea
pop
pop
jb
pop
imul
inc
dec
leave
rorb
xchg
jb
shlb
sbb
jmp
pop
xchg
sub
pop
push
je
clc
imul
sub
aas
sub
into
shrb
push
ret
xor
add
leave
pop
fcmovbe
push
or
inc
pushf
je
jb
lcall
xor
and
les
sahf
push
mov
cmp
jecxz
int3
xor
clc
adc
xor
repz
jns
popa
pop
push
jns
adc
iret
je
repnz
jns
ret
jp
leave
rorb
cwtl
aam
mov
mov
out
paddsw
fstps
cmpsl
fldl
adc
mov
ds
imul
push
aas
addr16
out
sub
enter
cmp
xchg
mov
mov
and
xchg
mov
pop
ss
jle
pop
push
cmpsb
faddl
and
lret
or
mov
xchg
pop
dec
jp
add
jne
fmull
pusha
push
adc
xor
xchg
popa
and
dec
sbb
xchg
andb
data16
inc
mov
pop
mov
fbld
pop
popf
or
push
shll
stos
in
pop
or
hlt
xor
cmp
jmp
imul
jbe
or
pop
jg
push
jae
adc
nop
clc
outsl
and
in
insl
mov
aaa
and
cmc
scas
lds
les
xchg
jle
sbb
sahf
lcall
inc
jnp
out
test
lods
daa
subl
jb
cltd
rclb
insb
fdivrs
adc
mov
push
daa
sbbl
jp
fsts
adcl
mov
icebp
clc
stc
mov
sbb
les
push
xorb
jmp
push
mov
jp
jo
mov
or
pop
insb
je
jp
pop
mov
or
lods
insl
pop
mov
lock
call
sbb
sbb
aad
fdiv
add
test
xor
dec
xchg
mov
imul
push
push
and
cs
leave
xor
fdivrp
ja
jle
inc
outsb
pop
dec
add
rorb
jae
in
push
fwait
stc
call
insl
cwtl
repz
vphadduwd
popf
ficoml
popa
inc
dec
stos
mov
fldz
push
mov
scas
ds
pop
hlt
rclb
cmp
mov
cmpsl
popa
clc
pop
ret
fisubl
cltd
push
mov
push
stos
je
jmp
aam
aas
icebp
add
jecxz
cmp
mov
push
in
mulb
jb
lea
test
fidivrs
ja
js
imul
pop
out
or
das
xchg
mov
fld
mov
push
iret
push
jns
pop
sub
test
int
shlb
sbb
gs
repz
daa
and
mov
mov
or
popa
aam
loope
cltd
std
push
icebp
xchg
aam
nop
xchg
mov
push
sarb
loopne
xchg
fsubrs
xor
xor
xchg
pop
pop
fsubrl
fsubl
mov
scas
shl
sbb
hlt
push
adc
orl
pop
xor
inc
ja
popa
in
add
fwait
sub
pop
into
pop
fdiv
sbb
mov
mov
pop
fildl
mov
and
adc
xchg
mov
dec
cmp
dec
into
jns
je
in
push
fs
xchg
push
xchg
add
inc
add
mov
js
hlt
nop
pop
dec
cmp
fcoms
xchg
cs
orl
mov
in
icebp
loopne
arpl
mov
or
lods
xor
movsb
scas
jl
cmp
fwait
inc
mov
cmp
and
dec
mov
inc
into
in
push
lcall
adc
push
dec
imul
pop
dec
ret
push
mov
int3
pop
lcall
lcall
lahf
movsb
cmp
or
dec
aas
sub
mov
push
sbb
lods
inc
in
daa
pop
push
jmp
addb
cltd
sbb
jmp
add
cmp
jnp
in
pop
adc
outsb
int
xchg
inc
lods
jg
mov
imul
mov
inc
jl
mov
je
int3
and
sub
adc
aam
cli
push
cltd
fwait
xchg
lcall
enter
shlb
or
pop
shlb
orl
sbb
popf
stos
dec
or
jl
lss
push
repz
xchg
and
jnp
fisttpll
cmp
cli
xchg
ljmp
xor
cmp
into
inc
cmpsl
lods
jbe
stos
out
addr16
adc
aad
xor
jmp
and
pushf
and
insb
pushf
movsl
mov
jmp
cmp
cmp
imul
xchg
rclb
xchg
or
sbbb
out
fisttps
repz
pop
iret
arpl
cmp
or
jnp
add
test
jno
add
cld
fadds
ret
push
pushf
mov
or
int
push
mov
sub
lahf
psubsw
push
pop
mov
rcr
shll
mov
sbb
arpl
lods
pushf
xor
mov
out
bound
sbb
pop
inc
mov
repz
lea
mov
and
pusha
lods
stos
sti
in
inc
or
inc
pop
js
outsl
sbb
in
leave
idiv
sub
shll
daa
jns
xchg
pusha
cwtl
es
icebp
in
add
out
or
cmp
inc
dec
push
and
pop
jg
sub
dec
pop
dec
rcrl
in
push
sahf
lods
or
add
fwait
push
xchg
sub
cmp
outsb
sbb
and
jbe
dec
cmp
rorb
add
mov
sub
pop
pop
pop
sbb
les
and
pop
dec
div
out
add
fstl
mov
dec
call
push
lods
aas
out
mov
fnstenv
loop
dec
mov
sbb
mov
mov
pop
jg
aaa
vpackuswb
je
ficompl
in
repnz
es
scas
sbbb
sub
mov
test
pop
jp
int
aam
cli
ss
scas
sti
add
jno
stos
fdivl
sbb
aad
add
inc
mov
mov
dec
xor
arpl
mov
pop
push
mov
rorl
shlb
in
cmc
lret
jecxz
rorb
lret
add
cmp
or
adc
sbb
sbb
inc
or
call
and
xchg
out
mov
fcoms
mov
aad
mov
add
jp
add
inc
mov
add
js
pop
or
das
jne
adc
jb
mov
jns
aas
add
dec
scas
xchg
xchg
pop
pop
push
mov
int
xorl
fistpll
pop
push
mov
out
stos
add
hlt
fs
loopne
lahf
test
mov
dec
into
cmp
cld
mov
ljmp
daa
or
shrl
fldenv
cltd
mov
call
ret
stos
ret
ds
pop
mov
insb
add
sbb
insl
dec
fnsave
or
insb
int
fcmovnbe
mov
mov
cld
or
or
iret
or
and
fisttpll
es
out
repnz
les
pop
push
cltd
shll
inc
or
lock
loope
sbb
add
dec
imul
ja
into
lds
or
pop
in
fldenv
xor
lret
scas
popf
ja
pop
repnz
jecxz
es
loop
cmp
push
or
mov
mov
mov
testb
mov
es
pop
push
inc
xor
enter
cmp
or
mov
inc
jl
je
jae
test
bound
pop
lock
std
sub
mov
xchg
and
cmp
xchg
lea
outsl
adcl
xchg
and
outsb
sahf
mov
cld
mov
or
fs
pop
inc
lret
lret
jae
in
push
inc
xor
jg
loopne
fsubrp
cmp
xor
inc
xchg
int3
cld
gs
jae
sbb
and
out
xchg
xchg
push
push
pop
dec
cmp
or
cmpsb
jo
jecxz
out
sarl
sbb
leave
jne
and
push
out
hlt
mov
xchg
adc
lahf
and
adc
and
mov
sub
rcll
loop
push
lahf
jle
shlb
mov
pusha
popa
imul
mov
and
lret
push
push
inc
bound
sbb
addr16
pop
stc
stc
xor
jecxz
and
cltd
xchg
iret
hlt
aad
or
inc
std
imulb
push
pop
call
cmpsl
and
subb
cli
xlat
test
jne
xor
test
xlat
stc
fdivrs
sbb
push
inc
push
fistpl
mov
xchg
xchg
push
mov
pop
clc
adc
loopne
xor
mov
xchg
adc
add
movsb
nop
adc
and
cmp
dec
test
xchg
push
sub
mov
jno
and
cmp
imul
std
add
in
xchg
inc
cmp
arpl
lret
pop
push
dec
or
mov
hlt
cwtl
scas
sarl
adc
loopne
jno
cmc
loop
adc
xchg
mov
push
movsl
imul
sahf
pcmpgtw
and
into
inc
jp
inc
xchg
frstor
jmp
pop
mov
ret
xor
orb
popf
push
inc
mov
into
xchg
xor
dec
mov
aas
ret
ret
sbb
xlat
jle
push
jp
mov
cmp
adc
jmp
push
lock
insb
lret
dec
sub
loopne
mov
add
vpmacsswd
outsl
jno
faddl
jmp
mov
ret
and
jne
out
lds
xchg
sti
mov
rclb
jnp
enter
sarb
push
je
push
daa
cs
cltd
xchg
mov
bound
or
sub
adc
or
movzbl
cmp
out
or
cmp
stos
adc
ds
inc
lea
fs
jmp
push
rolb
data16
mov
jl
or
ss
adc
pop
fistl
popf
cmc
adc
or
test
pop
pop
divb
cld
pusha
fdivrs
mov
ror
aam
sub
mov
xchg
ds
and
mov
rorb
test
adc
lret
adc
movsl
int3
movsl
ds
jecxz
mov
nop
jle
jl
pushf
leave
push
or
dec
pop
sbb
add
gs
cmpl
pop
sub
out
push
cmpsl
sbb
cmpsb
jle
shr
sbb
into
adc
test
inc
pop
mov
fndisi(8087
and
and
outsb
jg
cmp
sub
pop
inc
pop
fnstsw
mov
push
push
jnp
mov
mov
jge
inc
outsb
push
stos
add
push
push
mov
lcall
mov
and
test
cs
gs
pop
test
inc
cmp
jle
or
jno
fwait
cltd
mov
push
mov
outsl
es
mov
xchg
adc
pop
pusha
cmp
icebp
push
test
out
mov
mov
inc
push
xchg
into
cmc
adc
scas
cmp
sub
bound
loopne
mov
mov
xchg
mov
fiadds
inc
jg
jne
xchg
lock
xchg
int3
aad
adc
cmp
cli
aam
data16
movsl
daa
add
imul
inc
jno
aas
jne
push
jae
cli
dec
lea
jnp
test
aas
inc
cmp
dec
sub
add
rorb
rcr
cmpsb
cmpsl
and
je
into
int
mov
mov
out
lahf
cmp
xor
rcl
jns
cltd
ss
rorb
xor
or
sbb
inc
jecxz
mov
xchg
mov
aad
xchg
jp
or
mov
mov
arpl
dec
fnclex
stc
es
inc
xor
or
cmpsb
cmp
lret
arpl
push
cli
sti
jecxz
mov
mov
movsl
inc
fwait
repnz
mov
add
cmpsb
pop
pop
arpl
jecxz
sbb
jge
or
or
xchg
adc
lods
xchg
insb
xor
adc
es
aas
cli
dec
or
cmp
xchg
loopne
test
in
cmp
loop
in
aam
repz
pop
mov
jne
cmpsb
mov
push
lods
jb
gs
call
std
jns
dec
and
or
push
sbb
xchg
xchg
mov
loopne
inc
mov
repz
rcrl
out
stos
nop
sub
inc
jl
and
jbe
fisubs
iret
aaa
int
scas
inc
iret
movsb
sti
jp
adc
and
mov
jb
sti
mov
adc
cmpsl
sub
pusha
movsl
ffree
rclb
rcll
in
mov
jo
mov
xor
mov
sub
dec
adc
insb
fmuls
or
cli
pop
rolb
mov
adc
adc
shrl
nop
xchg
xor
jae
jmp
mov
jnp
add
xchg
test
push
push
xor
stc
hlt
pusha
add
rorl
or
push
clc
push
subl
inc
movsl
lret
pop
sbb
mov
push
decl
pusha
pop
or
cmp
lock
push
addr16
mov
scas
cs
push
pop
jno
or
int
jmp
pop
dec
or
frstor
lea
aas
es
aad
and
sbb
mov
cmp
xchg
pop
sbb
and
mov
xor
out
xor
lret
out
insb
jg
mov
or
mov
pmuludq
jb
xor
push
mov
mov
pop
dec
mov
insl
pop
mov
xchg
insb
lock
push
int3
popa
pop
xchg
addb
fs
hlt
sbb
cmp
add
sbb
jp
sub
mov
push
fdivrl
adc
movsb
jmp
cmpsb
pop
inc
je
mov
mov
jo
cmp
xor
lret
arpl
cmp
testb
jae
sahf
inc
out
idiv
lock
out
xor
stos
jecxz
rep
orb
fwait
jmp
mov
int
inc
scas
jg
dec
and
and
ds
sahf
sbb
into
lcall
pop
arpl
mov
add
and
movsl
pop
xchg
dec
pop
pop
jnp
push
mov
or
mov
inc
ret
fcomps
test
add
jns
pushf
sbb
xor
pop
daa
rcrl
jno
sbb
pop
dec
mov
push
xor
push
pop
and
ja
popf
mov
pop
cld
xlat
leave
jo
scas
jae
out
iret
lds
mov
nop
sbb
push
mov
mov
out
or
and
mov
cwtl
popa
jbe
sbb
gs
mov
fbstp
add
mov
imul
push
dec
mov
sub
adc
xchg
cwtl
in
mov
mov
xchg
imul
sub
lods
js
pop
lea
std
adc
ljmp
jnp
add
or
fisubrs
gs
test
push
pop
insl
aam
int
pop
movsl
mov
and
dec
inc
lcall
bound
fwait
pop
repnz
push
xchg
mov
sub
mov
dec
cmc
inc
dec
dec
fisttpl
adc
addl
push
sbb
mov
in
pop
mov
pop
roll
mov
inc
sbb
das
je
stos
adc
movsb
in
push
icebp
scas
jmp
in
mov
bound
fidivl
pusha
xchg
inc
inc
add
push
xlat
stos
cmpsb
stc
push
les
nop
aad
cmp
mov
jae
and
outsb
add
data16
xchg
xor
cltd
inc
xchg
and
push
aaa
jp
test
or
sub
pushf
push
and
sbb
test
pop
enter
add
pop
out
jge
sbb
dec
dec
pop
adc
xchg
mov
ret
fsubl
ret
or
ds
add
out
add
xor
into
add
pop
mov
mov
loopne
mov
cmpsl
mov
adc
sub
xor
pop
sarl
pop
add
inc
outsb
jno
xor
insl
lret
dec
fxch
sbb
cltd
mov
xchg
nop
pop
mov
pop
xchg
inc
xor
les
inc
push
sti
cmp
cmp
xor
stos
dec
fcomps
adc
push
push
push
dec
mov
mov
push
loop
fdivrs
lea
sub
cvtdq2ps
pop
in
mov
aaa
cmpsl
adc
stos
aad
fwait
push
push
xchg
imul
pop
fs
aam
xchg
sbb
ret
negb
sub
outsl
mov
les
xor
int
push
fcom
inc
jmp
jmp
outsb
adc
or
and
pop
jno
and
dec
hlt
sahf
jecxz
ficoms
imul
sti
repnz
dec
jp
lcall
push
inc
push
cmpsb
ljmp
ljmp
mov
in
xchg
ret
outsb
or
push
popa
popa
adc
sub
cmp
in
sub
pop
in
mov
mov
and
xchg
jae
mov
xor
rcrb
xor
xchg
call
scas
outsl
aas
adc
sub
stos
movsb
sub
sub
ljmp
xorb
pusha
add
lock
mov
call
pop
call
mov
pop
js
push
xchg
mov
push
xchg
pop
jg
lea
fstps
cmp
adc
mov
mov
in
stos
popa
ljmp
cmpsl
sbb
add
jl
and
jg
push
aaa
mov
clc
mov
jecxz
leave
dec
sub
daa
pusha
out
adc
xor
xchg
cmp
push
push
jp
mov
lret
sbb
lcall
xor
jo
fildl
clc
adc
loop
addr16
sub
mov
inc
dec
es
bnd
and
adc
inc
lret
push
mov
inc
out
cltd
fstpl
jae
xchg
out
fmull
dec
faddl
rorb
sub
and
jmp
aas
xor
daa
mov
ja
fwait
aas
push
js
dec
int3
int
or
jmp
mov
push
lcall
incb
xchg
inc
or
pop
pop
imulb
and
lret
lsl
addr16
cmpsl
in
outsl
pop
lcall
arpl
or
push
loop
iret
pushf
and
int3
jb
jg
mov
sbb
and
pop
add
mov
ljmp
or
sahf
popa
mov
fdivl
push
cmp
in
leave
es
aam
push
pop
add
in
add
cmpl
jmp
aas
setge
and
hlt
cmp
mov
push
jno
insb
dec
cwtl
push
sbb
or
inc
jns
cmpl
and
adc
aad
loop
xchg
out
out
sahf
rclb
fdivr
in
je
aaa
jbe
jg
leave
mov
js
repnz
fldl
call
jmp
je
adc
divb
jecxz
out
dec
xor
cmp
movsb
rcl
or
enter
mov
add
testb
or
push
cmpsl
hlt
hlt
push
imul
adc
cmpsl
and
stc
pop
ljmp
shll
sub
push
dec
push
xchg
icebp
mov
int
enter
lcall
test
andb
incl
mov
hlt
shlb
and
mov
xchg
stc
mov
fldl2t
jbe
push
dec
fucomp
xchg
sub
sahf
sbb
mov
ret
push
testb
ja
pop
fucomip
xlat
sbb
mov
mov
push
xchg
and
dec
jg
lcall
iret
lds
xchg
push
decb
add
push
out
mov
fildl
mov
cmp
mull
ret
push
xchg
pop
xchg
ds
dec
fiaddl
enter
jmp
lock
jb
loope
dec
push
shlb
mov
pop
dec
mov
jb
push
inc
jp
in
mov
pop
pop
push
in
sub
cmp
stc
out
mov
mov
ss
cwtl
sub
mov
pop
les
ja
push
ss
cmpsl
cmpsb
repnz
add
pusha
in
hlt
lahf
lahf
jbe
rorb
repz
cli
out
mov
jo
cmpl
push
xchg
lret
add
lea
or
jne
aam
cmp
jns
mov
xchg
add
inc
jecxz
cs
mov
cmpsb
in
insl
cld
sbb
rcrl
sbb
cmpsl
sub
test
mov
jae
in
fdivl
cmpsb
nop
stc
scas
xor
push
mov
xchg
sti
mov
push
mov
repnz
je
out
mov
cmp
je
push
test
shl
mov
rcrl
xchg
lock
mov
arpl
add
xor
inc
add
push
xchg
push
sub
jno
movsb
dec
mov
pushf
out
inc
inc
mov
mov
push
or
mov
pop
dec
dec
outsl
pusha
adc
cmpsl
neg
jno
sub
cmpsl
sbb
bound
push
jbe
inc
cmpsb
cli
cmp
sahf
mov
in
cmpsb
ljmp
icebp
insl
pop
daa
mov
sub
jecxz
stos
rcrb
ret
mov
sbb
sahf
pop
inc
testl
and
inc
pop
insb
push
aaa
xchg
cwtl
push
lret
lea
movsb
xchg
and
add
std
xchg
out
xor
mov
xchg
lret
mov
add
cmp
or
jnp
dec
negl
cmp
int3
mov
leave
or
sub
push
push
or
stc
cli
jmp
cmp
add
lds
push
jp
mov
dec
fldcw
out
adc
inc
sbb
negl
daa
inc
lock
shl
cmpsl
rorb
jne
pop
mov
fwait
dec
loopne
movsb
notl
xchg
push
ss
xchg
jge
fdivrl
adc
cmc
jnp
mov
stos
sub
imul
lahf
mov
insl
movsl
imulb
fsub
pop
add
mov
adc
shlb
mov
outsl
mov
clc
mov
mov
imul
mov
mov
orl
bswap
mov
dec
push
xchg
out
repnz
lods
pop
loopne
xor
jmp
cmc
dec
inc
adcl
jae
or
je
in
sbb
flds
outsl
out
loopne
inc
in
and
ret
stc
and
scas
push
std
jmp
pop
ja
fwait
inc
ds
mov
enter
xchg
das
or
dec
test
popa
cmp
sub
sbb
and
mov
movsl
mov
xor
push
mov
pop
jg
stos
dec
out
or
fwait
push
xchg
jle
iret
pusha
push
movsb
add
repz
jecxz
add
stos
arpl
rorl
testl
out
xor
ret
pop
aam
and
xor
jg
cwtl
xor
inc
clc
fistl
es
hlt
mov
add
stos
shrl
cmp
je
jmp
cmp
clc
ss
inc
mov
pop
js
sub
pop
mov
and
aam
jae
sbb
cmc
rcl
sub
mov
add
inc
jp
movsb
or
jmp
pop
fstpl
push
cmpsb
push
jecxz
pop
add
cmp
fmull
addr16
mov
jo
sti
hlt
idivl
ds
movsb
adc
mov
pushf
cmpsl
cmp
mov
pop
lea
not
outsl
cs
mov
jno
jae,pt
aaa
xchg
sbb
xor
push
into
arpl
orw
lock
sar
lods
fimull
pop
cli
add
aas
inc
cmc
scas
in
cli
lret
xor
fsts
stc
inc
and
cmp
ljmp
and
arpl
add
push
push
int3
sbb
inc
sub
xor
dec
dec
add
jne
jne
fmuls
or
lock
xchg
aam
in
jns
mov
mov
out
fnstsw
lods
or
mov
and
imul
xchg
fdivr
fstps
mov
xchg
leave
adc
pusha
out
popf
das
mov
xchg
pop
mov
sub
cs
xchg
sub
sbbb
orl
stc
inc
or
mov
shl
sub
into
pop
mov
dec
push
cltd
jns
cmp
mov
adc
cmp
negb
xor
ljmp
push
ss
and
sub
dec
jne
lahf
movsl
jb
xlat
jmp
or
xchg
pop
inc
sbb
ror
xor
dec
mov
stc
mov
iret
jb
pop
cltd
jnp
pop
and
fstpl
inc
pop
lea
jl
iret
shll
dec
dec
rep
lea
mov
ss
lods
push
bound
jge
addl
filds
add
cld
sbbl
cmp
mov
in
lds
cmp
jno
push
sub
stos
iret
pop
shll
dec
cmp
fistpl
adc
and
push
push
pusha
ficompl
movsbl
dec
xchg
pop
dec
add
add
xchg
sbb
cmc
inc
sarb
enter
scas
pop
aaa
hlt
sbb
mov
fdivs
mov
dec
shll
test
mov
inc
test
repnz
dec
outsl
sub
jae
and
sub
dec
outsl
cmc
xchg
test
jne
lret
cli
cmpl
dec
pop
jecxz
sarb
arpl
jnp
out
jnp
jmp
test
cmp
jne
in
jmp
pop
jb
pop
imul
test
repz
push
cs
outsb
dec
sbb
mov
add
sbb
push
add
mov
stos
fwait
or
leave
mov
and
scas
jne
icebp
mov
fs
xor
fadds
xor
aam
ret
push
adc
js
cmc
imul
shr
leave
pop
ficomps
and
sub
lcall
adc
jb
sbb
cltd
hlt
arpl
test
lds
jne
jle
pop
adcl
jns
sub
dec
cli
lahf
or
pop
jae
cmp
push
mov
cmp
addr16
das
fstl
pop
loop
lcall
daa
jp
push
repz
stos
push
addr16
icebp
dec
rcrl
loop
pushf
test
inc
or
dec
test
push
sbb
aaa
jg
rorl
mov
and
mov
push
out
fisttpl
cmp
fsub
dec
sbb
adc
stos
das
dec
shlb
das
mov
mov
out
les
xchg
lret
cmp
jl
dec
cmp
aaa
sub
sarl
loopne
cld
sahf
scas
pop
add
outsl
stos
push
popf
lret
loop
mov
sub
push
cmc
lcall
and
adc
xor
jno
push
or
or
rolb
neg
test
pop
insb
ret
imul
movsl
cli
icebp
mov
fidivrs
push
xor
notl
fs
iret
mov
mov
lcall
lea
and
pop
test
and
insl
jmp
sbb
mov
dec
xor
in
repnz
cwtl
std
sub
cmp
adc
popa
xor
pop
hlt
cmp
int
push
mov
stos
js
push
xor
out
adc
push
mov
xchg
or
mov
sub
inc
mov
loope
cmpsl
add
pop
in
mov
hlt
mov
xor
aas
jb
mov
jl
sub
outsl
pop
scas
cmp
xor
mov
inc
popf
push
sti
mov
and
mov
add
addr16
in
imul
movsl
or
pop
lcall
mov
add
mov
test
fidivs
clc
ret
push
dec
adc
ss
jmp
push
add
mov
repnz
mov
add
fsubl
lret
push
mov
inc
xchg
jo
add
add
mov
jb
repz
hlt
lock
stos
adc
sbb
icebp
repnz
dec
or
sub
fidivs
dec
lea
loop
sbb
dec
test
jnp
mov
sub
das
mov
cmc
dec
cmp
add
pusha
jge
dec
mov
test
aam
std
clc
push
jp
or
fstpl
fwait
mov
test
fildl
mov
jae
or
jo
pop
sbb
enter
sub
shlb
sub
loope
mov
mov
mov
mov
mov
test
pop
roll
out
dec
sar
fs
push
add
dec
mov
sbb
test
xor
xor
call
pop
aad
loope
dec
sub
je
inc
xchg
movsb
and
pop
ljmp
cs
inc
fcoml
inc
adc
das
push
jo
xor
lock
xchg
aad
add
test
xchg
stos
cmp
add
adc
leave
mov
leave
inc
push
andb
sbb
cwtl
sahf
data16
adc
js
cmp
data16
mov
loopne
lret
jecxz
jnp
insl
mov
lea
out
dec
add
fdivs
clc
imul
imul
popf
aas
cli
jnp
pushf
inc
leave
inc
mov
lock
mov
adc
movsb
mov
faddl
enter
pop
dec
adc
adc
jg
inc
sub
add
jbe
clc
or
shl
sub
and
xor
pop
mov
mov
test
jnp
cmc
movntq
out
scas
mov
mov
stos
enter
push
pushf
insl
xlat
xor
xchg
jmp
push
sub
pop
sbb
push
cmp
daa
stos
loop
and
adcb
subl
mov
lds
cmc
outsb
cli
xchg
movsb
in
stos
in
cwtl
pop
into
push
ficoms
add
data16
mov
cld
out
fxch
cmovg
dec
mov
mov
adc
rolb
ds
mov
leave
insb
int3
add
das
jge
call
or
add
loopne
incl
mov
jge
sub
arpl
mov
nop
xorb
sbb
inc
mov
iret
fbld
insl
subb
in
aad
xchg
mov
sbb
dec
aas
xlat
mov
mov
fistpl
or
dec
inc
push
jo
mov
or
inc
xor
mov
add
dec
into
sbb
dec
popa
ret
shl
aas
cltd
lods
insl
mov
lock
mov
mov
jb
stos
push
adc
mov
pop
pop
xor
xor
and
push
outsb
cmpl
adc
mov
lcall
andl
movsl
test
outsb
push
dec
adc
and
arpl
jecxz
adc
push
jmp
or
and
mulb
mov
hlt
rorl
jmp
adc
cli
add
std
jl
hlt
or
pop
test
adc
xlat
adc
xchg
mov
enter
das
mov
cmp
mov
outsl
push
cwtl
shll
movsb
scas
adc
aaa
mov
ret
out
fstl
sub
mov
gs
and
push
xlat
or
ds
shr
das
ja
xchg
xchg
popf
xlat
sbbl
mov
add
dec
shrb
xor
aas
dec
sub
lds
das
mov
xchg
insl
mov
ss
mov
xchg
stos
sub
sbb
dec
movsl
xchg
gs
mov
sub
mov
popa
xchg
les
rclb
jge
ret
adc
adc
jnp
lahf
loop
mov
adc
addr16
popl
cmpsb
in
inc
adc
add
repnz
sti
sti
je
push
fcmovnbe
sbb
add
pop
fldenv
adcl
mov
mov
testl
dec
cmpsb
push
push
mov
cmp
sti
aam
and
jns
leave
fcoml
sub
pop
nop
adc
dec
lea
mov
arpl
jp
in
add
call
add
insl
loop
fldenv
dec
pop
jo
repnz
ljmp
cmp
inc
inc
dec
stos
jo
in
and
xor
fldenv
aam
dec
dec
icebp
dec
pop
inc
mov
cmp
imul
lea
jno
inc
scas
int
out
fcoms
mov
cltd
xchg
mov
dec
jae
lock
or
daa
stos
mov
testb
imul
scas
movsl
pop
gs
imul
and
sbb
adc
arpl
inc
sbb
or
push
and
sbb
int
jl
movsl
iret
cmpsl
pusha
shl
cmp
add
lds
jo
push
xchg
mov
das
cmp
add
idivl
loope
jecxz
add
inc
int3
hlt
inc
jmp
lods
enter
outsb
inc
push
jns
dec
or
adc
cmp
cmp
and
xchg
dec
leave
popa
xor
fdivrs
arpl
int
imul
pop
lcall
jmp
or
adc
stc
je
mov
cmp
fdivl
sub
lret
jae
test
ficoml
push
xchg
lock
pop
jae
subl
daa
fistl
shl
fldcw
lret
adc
mov
test
pop
daa
shlb
adc
les
cmp
mov
adc
sbb
lret
adc
loope
loop
xchg
inc
insb
push
or
inc
jnp
icebp
fmull
lds
adc
aas
movb
mov
xchg
jl
jnp
popa
push
iret
loope
rcll
ss
subl
jno
inc
lock
imul
or
mov
lock
stos
xchg
xlat
dec
adc
fisubrs
je
cmc
add
cwtl
mov
adc
out
xchg
sarb
jnp
sub
xchg
dec
lret
push
dec
inc
xchg
and
int
mov
xchg
enter
insl
lret
mov
push
addr16
fisttpl
call
cwtl
clc
push
jo
push
adc
fwait
in
frstor
outsb
sbb
mov
pop
mov
shll
cmp
add
jnp
push
mov
mov
or
mov
les
cmp
push
or
iret
loopne
jo
sbb
sub
xor
jo
xor
test
pop
incl
clc
sub
dec
cmp
lret
push
bound
xchg
loope
mov
pop
jbe
int
loope
cmc
outsb
testl
test
punpckldq
adc
lret
loope
mov
jp
adc
dec
iret
mov
fucomip
and
inc
mov
xor
fsubrp
mov
shll
test
mov
xor
ja
outsb
adcl
mov
or
lea
nop
aad
std
add
push
lock
push
adc
sbb
test
scas
or
add
sbb
sub
fsubrl
pop
or
dec
jp
mov
cmpsl
mov
push
jle
dec
out
fcomi
dec
or
jbe
mov
or
push
jb
adc
push
out
pop
add
sbb
scas
in
mov
inc
ret
and
sbb
cmp
and
outsb
cmpsl
int3
inc
aas
in
inc
push
outsl
pop
xor
xor
xor
push
inc
push
shrb
xchg
daa
ficoms
cwtl
jp
mov
sub
ret
shll
pop
mov
lds
insl
stos
inc
data16
cmp
xchg
and
iret
jne
pop
mov
jp
aas
cmpsl
aad
xchg
into
mov
mov
ss
fwait
jns
jno
lea
gs
mov
jbe
mov
out
loop
loope
lcall
leave
mov
and
inc
add
psllw
fiadds
clc
mov
jnp
push
gs
xor
mov
mov
sbb
cmp
mov
jne
or
inc
dec
dec
out
mov
mov
adc
jl
fdivp
mov
dec
cmpsb
cmc
add
aas
pop
pushf
fisubrl
dec
in
and
iret
mov
sahf
movsl
cltd
rcrl
mov
xor
loop
jnp
negl
cli
push
fchs
sbbb
or
sub
sbb
pop
pop
jns
enter
jne
out
inc
jecxz
pop
or
mov
in
jne
lods
inc
in
scas
jb
out
addr16
sbb
adc
into
jl
adc
jne
push
and
sbb
xor
sub
xlat
and
sbb
pop
insl
xchg
cmp
pusha
inc
js
lods
jo
cmpb
xchg
stc
sub
scas
xor
push
pop
jno
and
sub
rcrl
aam
je
daa
cmp
xchg
dec
sbb
mov
mov
pop
add
lahf
arpl
ljmp
shlb
ds
pop
mov
cmpsb
inc
adc
xor
jl
jae
pop
lods
add
in
inc
cmp
push
push
cmpsl
test
pop
loope
adc
mov
in
out
sbb
mov
addr16
std
sar
iret
jl
idivl
jp
push
addr16
push
test
stos
or
icebp
mov
and
push
out
xchg
and
lcall
adc
mov
mov
int
pop
cmp
mov
push
into
adc
xor
dec
dec
ljmp
push
pop
jg
jno
and
cwtl
cmpsb
ja
xchg
adc
adc
ret
inc
pop
das
test
pop
push
hlt
mov
xchg
and
mov
sub
sbb
xchg
ror
push
sub
lds
mov
adc
mov
xor
adc
imul
xchg
outsb
push
push
or
popl
sar
pop
fmuls
in
mov
sbb
mov
addr16
js
addr16
jne
mov
jg
inc
pushf
outsl
xchg
inc
adc
mov
xorb
mov
jge
cltd
addr16
xlat
jecxz
or
cmp
loope
addr16
jmp
push
mov
mov
iret
iret
xchg
mov
pop
push
ds
int
xlat
pop
mull
mov
ja
or
shrb
fnstcw
sbb
rcl
imul
and
fcomip
test
pop
jge
sbb
sub
jmp
inc
cmc
jg
in
pop
adc
pop
out
insb
xchg
jp
pop
fidivs
hlt
and
std
adc
dec
jp
clc
sub
lcall
or
sbb
mov
cltd
sbb
mov
cmp
gs
dec
mov
xchg
xchg
xor
leave
sysexit
xchg
mov
les
loop
xlat
sbb
fstl
sbb
jg
test
mov
and
xor
sbb
jns
sub
mov
leave
xlat
and
push
cli
sub
lods
jg
into
and
fldt
cmp
stc
jp
dec
enter
mov
lds
movsl
outsb
nop
mov
js
sbb
push
add
jl
lods
pop
mov
sbb
jmp
sbb
or
pop
pop
lret
sub
dec
mov
test
inc
mov
clc
test
dec
sub
popf
jbe
xlat
dec
sbb
push
repz
es
add
ja
pop
aam
pusha
adc
jne
fs
aad
aam
addr16
lock
nop
rcr
pop
dec
jno
int
mov
mov
xchg
notb
ret
fst
ja
or
adcb
sbb
aam
lock
mov
pop
push
jle
fcomps
daa
jle
jb
xchg
sahf
inc
inc
in
stos
jno
adc
push
sbb
push
mov
fadd
mov
lret
add
fs
and
adcb
sbb
lock
cli
xadd
sahf
loop
pop
and
mov
roll
and
mov
das
jge
ds
inc
popa
cmp
outsb
inc
mov
js
lret
or
xchg
push
jmp
jo
xchg
mov
jg
outsb
xor
jo
sbb
sahf
idivb
xchg
xchg
jmp
jmp
xlat
loop
loopne
fwait
int
icebp
dec
or
addr16
cmp
into
cltd
in
leave
rorl
mov
adc
sub
mov
xor
test
mov
xor
in
xor
sbb
imul
xchg
push
mov
jo
cmp
ds
xlat
mov
pop
or
and
lds
or
div
fucomi
movb
inc
jecxz
dec
adc
cld
cmp
and
int3
addb
out
push
shrl
push
or
adc
push
ljmp
test
push
xchg
mov
adc
test
xchg
jbe
inc
inc
in
pop
daa
cli
sti
cmp
pop
cmp
pushf
outsb
adc
out
push
scas
sub
nop
cld
or
cmpl
add
aas
mov
dec
out
or
leave
pop
inc
int3
push
insb
add
mov
mull
nop
movsb
dec
add
stc
test
dec
mov
xorl
inc
loop
fwait
mov
les
test
push
xchg
notb
pop
loop
mov
xchg
mov
in
loop
jno
cmpsb
sbb
rclb
movsl
push
pop
loop
cmp
mov
mov
xchg
ret
out
mov
dec
xchg
sbb
push
gs
dec
jp
nop
sbb
lods
cli
lret
mov
iret
stos
pop
into
pop
and
inc
testl
jbe
xor
mov
xchg
dec
ds
mov
or
fadds
mov
dec
sbb
dec
xor
and
int3
mov
aad
arpl
sti
popa
in
out
jb
or
movsb
jg
xlat
jecxz
ret
sub
mov
mov
iret
adc
pop
mov
mov
test
jp
push
dec
sbb
jl
mov
or
stos
cmp
lea
pop
cmpsb
push
daa
pop
les
gs
or
push
jl
jl
pop
pop
in
cwtl
or
fmuls
rclb
jnp
data16
jo
cmp
movsb
aas
imul
jmp
fs
les
and
inc
cwtl
ja
push
pop
cmc
daa
sub
push
and
insb
jecxz
cmp
cmc
addr16
ss
fildll
test
mov
inc
cld
xlat
pop
loop
jmp
add
lahf
and
cmpsb
push
cwtl
clc
mov
and
xor
adc
ljmp
push
fcoml
and
xchg
fcoml
cltd
push
lcall
stc
lods
sub
adc
movsb
out
ja
pop
push
daa
inc
inc
push
iret
dec
sub
lods
outsb
push
inc
mov
pusha
and
mov
xchg
sbb
mov
and
push
mov
ret
mov
loopne
xchg
enter
dec
jl
mov
test
gs
lret
inc
dec
pop
insl
nop
enter
cmpsb
adc
jnp
mov
test
movmskps
lock
movsb
mov
iret
cmpsb
les
xchg
adc
dec
or
push
xchg
test
out
xor
push
push
movsl
repnz
lret
cwtl
inc
adc
inc
movsb
push
in
push
mov
test
pop
leave
int
mov
gs
cmp
push
mov
iret
mov
mov
scas
mov
adc
xor
outsb
dec
push
mov
decb
out
es
dec
mov
jp
fbld
sahf
aas
xlat
dec
mov
inc
lea
addb
repnz
mov
push
push
push
dec
sbb
add
jge
sti
xchg
stc
xchg
clc
lcall
and
jl
clc
and
xchg
cmp
add
insl
rorb
sbb
lods
xchg
and
jae
adc
jns
ss
fnstcw
inc
push
jg
das
lea
push
aas
sub
xchg
push
aaa
push
shlb
mov
sub
dec
dec
dec
movsb
inc
aam
addr16
sbb
inc
fxch
xchg
jnp
and
xsaveopt
movsl
dec
daa
cmpsb
lcall
lock
xchg
test
js
test
mov
mov
insb
sbb
sahf
cltd
adc
dec
mov
addr16
iret
pop
xchg
es
mov
pop
sub
aaa
xor
sub
dec
jle
pop
fsubrp
shrl
fs
jmp
pop
les
sbb
and
lcall
ret
lock
sbb
lods
cmp
mov
pushf
lods
mov
or
fisttpll
push
mov
push
loope
mov
nop
lahf
bound
leave
leave
fdivr
aad
inc
mov
push
cmp
fldl
sbb
pop
rcll
pop
in
inc
cmp
push
sahf
add
test
lret
xor
mov
mov
adc
in
inc
and
adc
enter
into
out
jb
adc
mov
loope
outsb
in
lea
loop
cmp
frstor
pop
mov
jecxz
dec
les
popa
sar
andb
vpmadcswd
cmp
or
xor
repz
dec
inc
sti
dec
push
imul
in
mov
negl
cli
xchg
and
ret
hlt
test
lea
pop
pop
mov
jb
add
and
repz
pop
in
mov
test
xchg
sti
rcr
mov
call
jno
movsb
cmpsl
adc
ja
adc
les
rcrb
mov
cld
jp
jge
dec
je
xor
out
frstor
inc
rclb
xchg
sti
mov
arpl
dec
jmp
lods
in
in
in
in
jns
icebp
test
mov
aas
mov
jae
pop
jle
add
cmc
subl
xor
adc
test
xor
ficomps
mov
push
je
out
mov
cmp
jno
ds
repnz
ds
adc
or
cmpsb
insb
sub
jb
push
movsl
mov
push
and
stc
lea
sub
inc
je
js
jnp
ret
enter
or
lret
or
add
imul
push
push
pop
fsubrl
mov
pop
imul
xlat
iret
int
lret
add
cmp
dec
sahf
sbb
push
mov
adc
or
sbb
or
mov
mov
pop
push
popf
into
adc
mov
inc
ret
rorl
sub
btcl
fcomp
push
or
inc
mov
sub
pop
add
xchg
push
aad
dec
adc
lret
testl
cmp
mov
and
push
push
cwtl
test
dec
outsb
enter
cmp
sbb
dec
inc
lahf
sub
imul
push
inc
mov
clc
cltd
incb
jle
and
mov
mov
mov
add
mov
adc
movsl
dec
ret
ret
jns
mov
insl
add
pop
push
xor
fdivp
imul
arpl
flds
in
stc
aad
xchg
jge
cwtl
or
and
pop
push
inc
jns
aam
out
std
jmp
icebp
jne
or
xor
mov
add
divb
lock
inc
scas
mov
ljmp
sbb
inc
daa
mov
jb
arpl
lods
addl
mov
ret
sub
sub
fisubrl
sub
in
xchg
int
lock
ret
inc
cwtl
jne
fsub
mov
arpl
xor
ret
imul
cmc
orl
cld
xor
cvtps2pd
test
jge
mul
dec
icebp
xchg
stc
sub
lret
jnp
call
insl
push
mov
ret
add
sub
mov
cli
jne
or
cmp
cmp
mov
mov
xor
loope
cmp
cs
es
das
cwtl
fistl
insb
test
insl
mov
jae
push
push
aad
ret
out
fists
repz
lods
mov
pop
and
xor
and
out
dec
add
inc
push
lahf
mov
jmp
jb
inc
jb
aas
push
lret
pop
fnstenv
gs
and
lahf
xor
ja
out
orl
inc
sahf
fiadds
nop
mov
aas
sbb
in
sub
cmpsl
insb
inc
lret
addr16
sbb
pop
mov
cs
sbb
mov
subl
scas
lret
icebp
pop
repz
xchg
push
lea
xchg
mov
push
mov
je
test
es
mov
adc
mov
jb
popa
in
adc
fcoms
jno
cmp
add
xchg
mov
das
call
sbb
fiadds
xor
out
sub
aam
and
addb
das
lcall
test
xchg
push
sub
aam
fsubrl
inc
lock
dec
fldenv
fimuls
cli
inc
inc
jbe
mov
lahf
aad
mov
adc
mov
hlt
and
leave
hlt
ret
push
clc
scas
or
ja
jl
xchg
xor
les
cmp
jae
inc
cmp
push
mov
aaa
clc
mov
mull
stc
push
mov
das
adc
js
hlt
test
lods
mov
mov
hlt
adc
xor
push
push
fs
lds
mov
cmp
inc
mov
mov
ret
stos
cmp
movsb
hlt
popa
sub
jge
dec
lcall
push
test
push
mov
divl
add
push
enter
mov
dec
mov
leave
out
fimull
add
scas
sahf
fs
or
jmp
in
cmpl
cmp
sahf
test
pop
ret
in
pop
sbb
dec
pushf
sub
ja
cltd
loope
sub
mov
and
pop
test
lds
in
ss
pop
add
or
xlat
mov
xchg
mov
cmp
dec
popf
inc
add
and
jmp
andb
mov
mov
out
fistl
aad
xchg
adc
mov
jp
cwtl
sub
test
mov
sbb
out
jb,pt
je
pop
push
push
ja
and
push
and
dec
xchg
imul
lds
push
movsl
pmaxsw
repnz
mov
jle
pop
xchg
movsb
rorb
iret
out
fcoml
icebp
ljmp
jmp
mov
stc
mov
shll
xor
add
je
xchg
xchg
sub
push
push
xchg
or
cltd
xchg
sbb
sahf
in
xchg
dec
adc
and
dec
inc
and
cmp
loop
push
push
adc
and
fwait
outsb
je
insl
mov
rcll
or
jnp
stos
cmp
lods
jns
pop
js
xor
loop
movsl
xchg
pop
idiv
push
shrl
pushw
cmc
lods
jecxz
mov
movsl
or
repz
pop
into
sub
add
pushf
pop
enter
inc
sbb
in
jl
lcall
mov
mov
pushl
xchg
pop
xchg
push
push
push
pop
out
mov
dec
arpl
jg
mov
dec
je
push
push
xor
mov
mov
push
sub
gs
inc
repz
push
ffree
and
mov
filds
and
xchg
cmc
arpl
sub
pop
sbb
mov
mov
xchg
pop
cmpsl
loope
fxch
add
pop
push
push
in
test
and
leave
adc
inc
repnz
jmp
scas
mov
lods
test
push
mov
pop
fs
jne
mov
test
or
inc
sbb
stc
inc
cli
ljmp
aam
or
lret
pop
mov
ljmpw
mov
fbld
scas
shld
lods
dec
lock
push
jnp
push
fcompl
arpl
xchg
sub
lods
sub
ret
jecxz
or
ret
push
adc
fnstenv
add
into
jbe
sbb
lds
and
adc
inc
jle
daa
lea
jo
pop
dec
jne
sub
in
mov
or
pop
xchg
lea
out
test
aad
mov
mov
arpl
fmuls
pop
fistl
scas
cmpsb
xchg
movsl
bound
outsb
mov
lods
data16
mov
data16
stos
jb
mov
pop
lret
nop
dec
loope
fisttpll
adc
test
shll
sub
lods
shl
loope
test
cmc
add
push
shr
mov
xchg
adc
mov
and
lods
mov
mov
jecxz
daa
fimull
jp
out
stos
lcall
and
cld
test
lock
lds
jge
into
sub
lret
lods
addr16
mov
insb
sub
call
scas
mov
ja
and
lock
inc
push
xor
ss
stc
jmp
dec
dec
adc
addr16
mov
call
sub
aam
dec
adc
push
filds
ffree
pop
iret
cmp
aaa
adc
pop
int
sbb
lods
mov
adc
lret
dec
aad
sbb
or
outsb
push
mov
pop
mov
cltd
push
stos
iret
imul
es
fcmovb
jl
xchg
adc
vmovlps
into
ds
pusha
cmpsl
push
jle
fdivrl
mov
adcb
stos
scas
jge
push
inc
int3
mov
lea
test
test
stos
mov
sbb
ficomps
add
dec
mov
mov
sbb
enter
xor
sahf
mov
adc
addr16
add
outsb
pusha
jle
or
lea
sub
cmp
mov
lahf
jg
scas
test
aad
sbb
sti
sub
imul
dec
push
adc
pop
adc
nop
fwait
mov
cmpsl
jne
inc
out
lea
fwait
dec
fldcw
xchg
frstpm(287
xchg
inc
or
movsl
ret
sub
mov
fldenv
scas
push
push
mov
mov
pop
mov
pusha
inc
push
mov
jle
bound
pop
ss
push
xor
xchg
movsl
lds
add
daa
rcl
lcall
and
jp
mov
shrb
xor
dec
cmp
add
or
and
lods
mov
pop
mov
push
and
das
cmpsl
pop
cli
add
xor
push
xchg
pop
out
enter
loopne
lret
pop
lret
outsb
jno
sub
pop
sub
mov
sbbl
add
add
adc
std
mov
add
pusha
out
dec
ljmp
sti
and
mov
scas
jge
dec
mov
push
das
mov
out
test
xchg
andb
mov
jae
sbb
mov
iret
sti
icebp
cmp
mov
movsb
testl
into
lahf
cs
mov
clc
mov
jo
outsb
int
js
adc
shll
insb
outsl
aam
dec
dec
dec
test
aas
xor
mov
out
adc
xor
cmp
xlat
movsb
mov
ret
cli
sub
mov
out
cmp
mov
rclb
adc
add
idivl
sti
inc
lret
pushf
cmp
das
adc
fcmovbe
pop
inc
fs
lods
sub
xlat
fldcw
out
inc
test
loopne
inc
dec
inc
push
mov
dec
lds
adc
iret
and
stc
push
adc
and
xchg
pop
mov
sbb
clc
jmp
sbbb
or
data16
pop
pop
and
movsl
out
inc
xchg
cmc
mov
inc
mov
sub
fnstcw
lods
push
add
sub
and
push
or
dec
jno
jbe
xchg
incb
je
leave
xlat
and
adc
jle
stos
fistps
lahf
incl
in
xchg
adc
lret
inc
icebp
inc
pusha
pusha
jnp
cmpsl
stos
xor
add
lods
lahf
movsl
pop
pop
xlat
push
call
movsb
or
pop
dec
aaa
call
xor
and
shl
lret
inc
stos
lret
loop
outsl
ret
fwait
shll
push
jecxz
jb
stos
pop
into
enter
fmull
hlt
push
or
dec
pop
lcall
xor
or
jp
dec
stc
mov
addb
adc
lret
dec
repz
aad
jb
nop
aad
addr16
lea
stos
bound
popf
mov
and
inc
lods
or
and
add
xchg
mov
cwtl
xlat
push
push
icebp
pop
jl
sahf
int3
cmpsl
in
outsl
and
push
cmpl
mov
and
pushf
adc
popa
mov
into
inc
xchg
sahf
push
addl
pop
ret
push
sub
andl
mov
add
mov
cmpsb
popa
push
dec
sbb
call
scas
fdivl
add
jmp
mov
add
outsb
imul
mov
fcoms
data16
inc
mov
cs
mov
cmp
movsb
push
cmpsb
gs
sbb
sbb
mov
test
sbb
fcompl
adc
fildll
push
mov
cs
mov
clc
sbb
push
mov
xchg
adc
add
rclb
in
add
rclb
scas
mov
or
repnz
repz
lret
xorb
add
sbb
mov
or
mov
icebp
jmp
lods
xor
xchg
out
push
cltd
dec
cmp
pop
pop
lds
add
clc
jo
xor
cmp
jns
test
cmpsl
push
dec
notb
pop
shrl
sbb
sub
and
mov
aaa
dec
sbb
test
xchg
mov
mov
hlt
sub
ret
cwtl
lods
mov
xor
jb
cmp
icebp
dec
adc
mov
mov
movsl
repnz
push
inc
pop
sub
cltd
mov
pop
arpl
pop
inc
pop
enter
div
pusha
add
movsb
sub
aas
jmp
outsb
and
mov
je
lret
or
leave
leave
xchg
je
xchg
mov
xchg
call
pop
fimuls
stos
repz
jp
lret
cltd
inc
sbb
xlat
in
or
sub
subl
in
and
out
inc
inc
mov
cmp
mov
xorb
sahf
jge
sti
nop
pop
sub
mov
imulb
sub
dec
arpl
out
xchg
out
fistpll
xor
xchg
mov
mov
icebp
insl
inc
call
push
scas
sub
sarb
adc
aas
xor
andl
fcoml
ret
xlat
ret
lea
rorl
pop
cld
sub
mov
dec
pop
push
pusha
sbbb
loopne
push
jns
pop
lods
fwait
addb
sbb
push
dec
lret
stos
sbb
mov
sahf
mov
shll
mov
xchg
cwtl
jmp
fmull
cmp
or
or
xchg
and
je
out
rep
mov
mov
push
mov
mov
mov
sbbl
mov
in
adc
insb
stos
sbb
push
leave
cmp
fidivrs
sahf
mov
inc
stos
cmp
gs
lods
add
mov
enter
cmp
flds
pop
je
cmpsb
cmp
cmp
mov
jl
sarl
mov
inc
xor
lahf
pop
mov
shr
rclb
xor
or
xchg
dec
adc
push
shrl
loop
fcmove
dec
outsb
mov
inc
mov
mov
xchg
lcall
dec
dec
add
inc
and
and
test
sub
inc
ret
ja
cmp
in
and
xchg
dec
out
lahf
hlt
mov
sub
pop
ret
ret
into
in
jno
fistpl
xchg
sarl
dec
mov
data16
cmc
cmp
gs
sbb
jmp
xor
ret
xor
or
fstps
fsubr
ja
cbtw
pop
inc
pop
mov
pop
mov
cmpsb
mov
or
jge
lods
xor
mov
inc
dec
mov
and
dec
sub
and
fs
add
pushf
das
mov
test
popf
loope
xor
sub
pop
pop
and
mov
icebp
cmpsl
pop
fstl
mov
jl
push
in
scas
dec
jae
jbe
jl
inc
imul
or
or
xor
dec
or
rolb
std
or
fildl
subb
outsl
ss
mov
jb
jno
insb
and
cli
in
add
jbe
fildl
insl
push
jmp
sti
or
aad
hlt
xchg
dec
jne
outsl
mov
vmwrite
lahf
push
push
add
data16
sub
push
mov
pop
scas
cli
mov
repz
mov
rorb
sbb
stos
insb
xchg
repnz
bswap
popf
sub
mov
into
loope
jae
jnp
cld
addb
mov
lods
dec
inc
mov
into
cmpl
mov
ds
sbb
int3
or
sbb
or
les
push
in
out
sbb
lcall
data16
lahf
adcb
xchg
add
jle
shr
add
iret
push
jecxz
sarl
lret
and
cmp
cmp
out
lock
stos
fstl
cmp
fcompl
push
mov
lahf
add
pushf
mulb
xchg
xchg
ds
xchg
in
xchg
mov
ret
cmp
push
faddp
sub
push
lock
subl
sub
out
xchg
divb
push
stos
push
mov
test
mov
shrb
push
adc
pop
jl
stos
scas
xchg
mov
or
jmp
or
loopne
and
shrb
xchg
xchg
jg
cwtl
add
dec
lock
pop
sbb
mov
mov
or
xchg
pushf
loopne
callw
adc
fistpll
pop
dec
mul
mov
jo
lret
cmp
and
inc
in
and
xor
aaa
insb
rorb
inc
fimuls
and
xor
inc
fs
and
stc
out
inc
lret
xor
push
cmp
sub
mov
ja
aam
loopne
mov
stc
lds
bound
and
sbb
sub
out
xor
mov
bsr
add
jne
js
push
filds
add
mov
inc
sahf
lahf
xchg
ret
xor
xchg
sub
imul
arpl
stos
test
sarb
cmp
dec
cmp
scas
xchg
inc
fsubp
fdivrp
add
and
leave
mov
lods
fs
sti
aad
imul
jb
xor
lods
cltd
adc
sbb
rorl
loope
lret
les
fnstenv
cld
sahf
jmp
test
lret
mov
adc
sbb
xchg
out
cmp
push
ss
clc
sub
mov
jl
stos
ficompl
mov
pop
movsb
dec
mov
xchg
test
mov
adc
dec
nop
cld
stos
sub
adc
sbb
cmp
mov
test
mov
mov
inc
jl
std
xchg
pop
sbb
push
adc
inc
bound
roll
scas
lods
sub
mov
xor
mov
ljmp
xor
jns
mov
dec
ret
in
xchg
shll
or
push
das
scas
repnz
jne
or
or
cmp
adc
loopne
lcall
inc
adc
fildll
xor
mov
pop
push
mov
pop
subb
cmp
mov
sub
in
lret
xor
add
rcrb
add
sbb
and
or
push
mov
xchg
inc
arpl
inc
jle
or
fildl
lret
fucomp
xchg
pop
jae
into
fsubrs
ret
test
jmp
fucomi
push
jne
fwait
lret
jo
pop
je
fisubl
push
test
jae
outsl
jp
enter
mov
jae
xor
add
out
adcb
test
or
popf
pop
das
lds
repnz
cwtl
xor
inc
fmul
jl
jae
xor
imul
fdivs
jmp
in
xchg
inc
cltd
jge
push
loope
push
ficoml
mov
pop
pop
jne
xchg
adc
mov
cld
sbb
inc
loope
xchg
add
push
imul
ss
push
jmp
sub
js
js
or
inc
scas
out
or
shlb
loop
push
or
push
imul
icebp
scas
push
mov
mov
cmp
ffree
push
push
filds
cmpsl
mov
in
and
xchg
sub
test
pop
inc
or
dec
jge
push
jno
pusha
fucomi
mov
push
call
and
popf
adcl
xchg
sub
mov
pop
cmpsl
sbb
rcr
push
cltd
js
insl
gs
jnp
leave
in
or
xchg
push
jge
aam
lea
adc
pop
mov
iret
pop
xchg
or
cli
and
push
or
sarl
imul
pop
mov
dec
int
lods
pop
xchg
push
cmp
xor
lcall
leave
dec
mov
sub
cmp
movsl
xor
add
ss
inc
rclb
fwait
loopne
push
pusha
mov
mov
dec
arpl
jl
sub
outsl
dec
fcomp
pushf
mov
lea
cmp
ret
sub
xor
jp
mov
sub
mov
lahf
filds
sbb
rorb
pusha
cmp
iret
add
out
aam
adc
or
shll
hlt
and
loop
mov
pop
mov
sbb
pop
pop
xchg
call
pusha
out
add
add
push
movsb
adcl
cmpsl
xchg
mov
mov
inc
jmp
jb
dec
aaa
stos
iret
mov
xchg
xchg
inc
mov
sarb
jmp
mov
cmp
js
rcll
cmpl
xchg
ljmp
ljmp
xlat
mov
out
in
mov
adc
jae
xor
std
adc
enter
inc
ds
add
mov
sahf
sub
shlb
dec
cmp
fdivrl
iret
dec
scas
lret
aas
imul
xlat
bnd
rcr
faddp
adc
push
mov
int
loopne
fcmovnbe
inc
jmp
out
dec
pop
fcompl
pop
daa
or
dec
mov
jne
jp
mov
jbe
dec
add
and
sub
sub
mov
add
adc
movl
sahf
scas
push
in
scas
je
xor
idivb
jl
stc
outsb
lods
loopne
fmul
ror
fidivs
loop
and
mov
aas
call
mov
lret
cmc
jge
icebp
fwait
push
imull
incl
xchg
jno
cmp
loope
push
fadds
or
jp
insb
fiadds
fmull
mov
mov
sub
mov
mov
aad
std
outsl
inc
xor
ficoms
fcoml
pop
jnp
ljmp
sti
mov
adc
test
movsb
sbb
hlt
fisubrs
xchg
dec
pop
lret
xchg
ds
jecxz
in
test
push
lcall
mov
mov
and
fstps
and
outsb
add
divl
int
cmc
cmpsb
xchg
test
mov
aaa
lods
out
xchg
add
imulb
lea
icebp
sahf
lcall
fsubrl
cmp
insl
pop
mov
cmp
xchg
cmpsb
cli
clc
ss
outsl
mov
ss
enter
movsl
sbb
notb
cmpl
in
cmpsl
into
sti
mov
jno
jmp
jge
mov
adc
mov
shlb
sahf
js
fdivp
xor
out
popa
ljmp
cwtl
mov
adcl
mov
arpl
movsl
fildl
subl
jmp
inc
mov
sbb
outsl
jns
int
and
jg
pop
adc
nop
inc
dec
sbb
push
jne
notl
je
jge
pop
daa
pop
mov
inc
fwait
test
sub
shl
sub
add
pusha
push
arpl
push
xorl
push
sub
sub
or
cmp
dec
add
stos
fwait
push
xchg
jmp
hlt
sub
mov
jo
nop
fldt
repnz
cmp
aas
cltd
jmp
icebp
into
jo
inc
add
enter
cli
das
push
push
xchg
mov
je
test
xchg
sub
pop
aad
and
out
stc
jne
pop
mov
sbb
and
inc
ja
icebp
sub
jbe
lcall
fiadds
pop
scas
scas
mov
sub
out
mov
divl
or
adc
push
inc
pop
xchg
imul
bound
lret
pop
add
cmp
add
ja
aas
into
mov
push
stos
out
cmp
arpl
sub
icebp
cmp
enter
aaa
data16
aas
cmp
add
mov
inc
fstps
inc
or
fs
js
xor
fstl
push
xor
sub
fisubs
inc
imul
mov
fiadds
inc
push
aaa
sub
ljmp
aam
fildll
cs
int
hlt
mov
mov
push
andb
ficomps
imul
scas
push
mov
arpl
es
lea
insb
adc
test
xchg
cltd
dec
push
ret
mov
sbb
push
scas
imul
xchg
sahf
xchg
pop
xchg
clc
mov
cs
mov
sub
les
mov
mov
dec
decl
fwait
int
mov
and
dec
push
cltd
push
outsb
mov
xchg
repnz
dec
xor
lahf
pop
jge
or
repz
test
fimuls
movsb
mov
cmp
test
test
cmpsl
and
add
cmp
mov
sub
test
and
inc
lcall
or
nop
xchg
decl
inc
push
call
data16
mov
and
xchg
in
add
cmpsb
jbe
out
cmpsl
fcomp
xchg
popa
pop
out
mov
cld
fiaddl
mov
jno
pop
lds
push
cmp
lahf
aaa
xchg
test
sub
add
xchg
test
dec
pop
push
xor
xor
cs
scas
adc
loope
cmp
mov
idivb
daa
jb
cmp
jge
adc
inc
push
and
ljmp
dec
ficoml
xor
icebp
fimull
test
sbb
jmp
pusha
sub
mov
xchg
xchg
mov
int3
ret
xor
push
push
std
fs
lods
daa
pop
dec
cli
xchg
xchg
mov
adc
imulb
addr16
or
out
mov
daa
test
push
mov
dec
outsl
cmp
decl
inc
insl
cmp
mov
dec
lods
or
pop
or
cld
xchg
div
aas
pushl
and
jnp
imul
movb
jo
mov
je
outsl
inc
jmp
testb
add
gs
mov
jne
add
inc
arpl
mov
or
add
cmp
stos
imulb
mov
push
bound
mov
mov
imul
loope
outsl
push
ja
test
and
fisttpl
imul
jmp
pop
xchg
icebp
mov
hlt
pop
fstpl
in
xchg
cmpsb
mov
add
xor
ss
pusha
sub
inc
inc
lahf
lret
push
mov
dec
push
mov
mov
es
mov
cmp
movsb
push
in
mov
outsl
mov
dec
push
stos
jno
or
aad
or
xor
into
popa
inc
and
das
lock
add
mov
push
mov
push
sub
cs
loopne
dec
lock
out
aad
xlat
fsts
das
adc
inc
cmp
les
mov
daa
lea
fwait
mov
pop
fdivl
adcb
or
add
fistpll
shll
test
inc
lods
in
or
popa
or
adc
push
loope
push
dec
pop
movsl
pop
jl
mov
icebp
sbb
icebp
mov
and
push
cmp
jp
mov
dec
mov
adcb
dec
loopne
arpl
and
cwtl
inc
xchg
cmpsl
mov
stc
addb
ret
and
outsl
gs
push
cmp
pop
mov
and
mov
add
stos
xorb
pop
push
andl
xlat
cs
cmpsl
int3
add
push
cmp
mov
dec
pop
or
in
cmp
push
jo
jmp
or
sub
sbb
xor
pop
inc
fildll
xchg
gs
mov
dec
stos
fstp
dec
scas
pusha
fdivrl
push
mov
cmpsb
push
pop
insl
dec
and
test
push
jp
shlb
inc
lcall
xor
mov
stc
push
mov
cli
and
loopne
pop
movd
iret
or
pop
mov
mov
jl
lret
andl
mov
jno
dec
xor
imul
sbb
jge
and
movsl
std
adc
mov
scas
jle
clc
fsubl
int
testl
addr16
cmp
mov
pop
push
mov
add
push
dec
ds
mov
pusha
mov
mov
jecxz
jno
ret
sbb
push
jecxz
adc
adc
or
aad
out
cltd
jle
or
xchg
cmpl
shrl
icebp
lret
xor
sbb
inc
xor
sbb
iret
push
fsubr
add
rol
in
arpl
shll
aad
hlt
dec
int
sbb
std
adc
push
mov
and
push
sub
mov
adc
scas
fildll
inc
in
pop
cld
adc
mov
ss
inc
pusha
sarb
sub
xor
insb
add
imul
jae
scas
mov
xor
hlt
out
icebp
xchg
or
fistpl
add
les
cmp
ret
pop
sub
out
outsb
cmpsb
mov
jg
or
enter
cmc
mov
add
mov
test
loope
jb
dec
mov
enter
xchg
shl
xchg
aas
and
push
dec
adc
sbb
push
cmp
lcall
repnz
cmp
ss
popf
and
nop
sbb
stc
outsl
aam
gs
xchg
mov
inc
in
inc
ret
mov
mov
loope
pop
pop
jle
sub
inc
rcr
popa
or
roll
out
iret
jg
jl
leave
test
jno
cmpsl
jmp
xchg
fidivrs
insb
pop
pop
xlat
loope
in
pop
xchg
daa
cli
sti
mov
adc
dec
and
fadds
iret
xchg
nop
pushl
push
mov
mov
pushf
mulb
das
js
icebp
jle
push
das
push
push
inc
push
not
lret
inc
and
cmpsb
or
xchg
enter
jne
or
fstpt
lcall
add
outsl
cld
out
xor
mov
jnp
sahf
pusha
in
aas
adcl
nop
dec
inc
sarl
inc
ds
aad
xor
nop
in
xchg
out
leave
dec
in
pop
xor
or
shrl
lcall
jb
dec
mov
push
enter
pusha
push
xor
inc
xor
push
or
jecxz
cltd
shrb
fnstcw
dec
shrb
cltd
stos
sbb
sbb
xchg
cs
cwtl
inc
inc
jg
adc
lret
mov
stc
pop
inc
or
xchg
pop
lock
mov
in
jecxz
test
push
test
or
xor
xlat
out
cwtl
xor
das
bound
scas
sbb
and
sbb
xchg
xlat
mov
lret
data16
sbb
gs
movsb
ffreep
xchg
test
mov
xchg
adc
jb
adc
adcl
push
clc
or
notl
push
push
jbe
les
call
into
scas
cmpsb
imulb
inc
mov
std
jge
in
xchg
das
inc
add
jb
mov
add
add
push
or
repnz
nop
js
pop
adc
add
sbb
xchg
rsm
leave
iret
sub
push
mov
loope
mov
sbb
rolb
cmpsl
sbb
insl
stos
mov
mov
and
mov
xchg
mov
inc
shrl
xor
stc
push
aaa
lods
ds
mov
js
sub
popf
jl
add
rcl
dec
cmovl
imul
ret
lret
push
cmp
cld
std
sbb
sub
ret
or
push
sbb
movsl
stos
jne
call
lret
mov
mov
arpl
push
pop
add
call
cmp
add
notb
pop
pop
jge
xchg
repz
aad
xor
xor
pop
mov
aaa
inc
xchg
jecxz
cwtl
mov
xorl
mov
or
es
mov
jb
xor
add
jo
ljmp
repnz
sub
xchg
add
push
mov
clc
jne
loopne
std
flds
adc
push
add
fs
movsb
lret
jae
lret
in
testb
xchg
mov
lea
xchg
sbb
je
fcmovbe
mov
add
clc
sbb
jg
les
ret
or
fdivrs
std
insb
or
xor
sub
xlat
enter
hlt
cli
pop
fs
sbb
jg
sub
ret
sbb
xchg
jle
mov
stos
cmp
lods
dec
fdivr
imul
xor
sbb
out
iret
mov
push
inc
aad
push
jg
sti
std
push
das
jb
pop
aas
or
sbb
dec
movsb
ja
shrl
out
jne
lods
inc
push
leave
mov
push
mov
lret
fwait
jns
push
lret
stc
movsl
rcll
mov
mov
or
fcompl
inc
pop
cmp
push
push
rolb
cld
sub
xor
shll
adc
les
jmp
adc
jnp
outsl
pop
xorb
repz
xchg
and
ficompl
neg
ror
fwait
rorb
fs
sbb
dec
and
jns
jg
mov
mov
cmp
jmp
push
pusha
mov
mov
jl
lds
clc
int3
xchg
pushf
push
movsb
mov
ret
test
inc
aad
cmc
fwait
aaa
aad
out
adc
addr16
icebp
aad
or
add
les
cltd
popa
cmpsb
adc
adc
sahf
cli
cmp
push
push
adc
cmc
dec
or
pop
xor
cmp
test
mov
popa
fmulp
jae
mov
mov
mov
ljmp
or
xlat
mov
ret
pop
pop
ret
ss
cmp
popf
jne
mov
cltd
jno
fldl
mov
adc
xchg
test
jl
xchg
sbb
andb
scas
iret
or
sub
out
outsb
push
push
shll
xor
stos
icebp
mov
arpl
stc
es
xchg
fs
jmp
pop
mov
jo
aaa
cmp
movsl
cmc
jecxz
imulb
pop
push
bound
mov
sub
stos
icebp
push
inc
rorl
aad
js
mov
fnsave
add
lret
aaa
push
pusha
loop
mull
sub
mov
stos
mov
popa
in
and
jge
fs
mov
sti
test
sbb
mov
push
pop
cs
pop
mov
mov
shll
stos
fsubrl
mov
mov
lods
movsb
mov
or
shrb
fidivl
fimuls
neg
push
mov
sarb
sahf
imul
lock
mov
faddl
jno
imul
stos
pop
xchg
cmp
adc
pop
pop
mov
cmp
or
sub
mov
outsb
jbe
rorb
mov
xor
testl
push
cld
js
push
pxor
loopne
mov
push
lods
filds
sub
fwait
popa
ljmp
lods
call
in
jle
hlt
jle
pop
test
jl
fwait
pop
cmpsb
loopne
iret
fisubs
jl
ljmp
lods
push
mov
cwtl
repz
movsbl
and
test
fxch
sti
and
sbb
fstp
cwtl
jbe
bound
add
cmp
lahf
dec
hlt
mov
nop
pop
loope
lods
mov
pop
js
pop
jp
stos
data16
mov
movsl
mov
pop
sahf
adc
or
bound
pop
shrb
roll
or
add
in
mov
adc
je
mov
push
mov
gs
jmp
push
inc
jecxz
mov
or
cmp
push
enter
inc
push
or
aam
fisttpll
leave
cli
fimuls
add
std
add
mov
lds
in
cmpsl
mov
mov
jbe
cmp
popf
sbb
mov
pusha
pop
cmp
cld
gs
dec
outsl
mov
or
xchg
mov
jmp
test
lret
pop
fidivrl
sbb
ds
push
repz
outsb
lock
cwtl
test
add
sti
cmp
sbb
lcall
xor
adcb
push
jns
fcoms
inc
mov
cli
xor
jge
adc
ret
dec
add
loope
nop
xchg
in
add
fsub
xchg
addr16
fiaddl
rolb
test
stc
pop
push
lret
mov
xchg
in
insb
dec
pop
mov
pusha
in
xchg
add
cmp
push
shl
loope
out
rep
mov
jge,pn
fisubrs
repnz
push
clc
lret
nop
icebp
pop
stc
es
mov
push
xor
mov
aaa
add
inc
mov
shr
inc
sarl
and
mov
xlat
mov
cmp
jmp
jne
lea
adc
cwtl
fdiv
fmul
sbb
fadds
stc
pop
test
aas
sarl
les
into
repnz
xor
cmpsl
push
fldcw
sarl
repnz
dec
dec
pop
xchg
mov
and
mov
or
movsl
mov
fldl
jecxz
mov
out
xchg
lcall
xchg
mov
push
sbb
mov
fstpt
sbb
mov
jg
xchg
mov
xchg
jle
xchg
mov
mov
push
test
cmpsb
loope
test
mov
ror
in
out
xor
lods
adc
popa
movsl
jne
xor
fcomip
ret
lods
push
push
inc
out
inc
add
jmp
and
pop
cmc
add
orb
stos
push
push
push
mov
inc
std
out
rorb
cs
mov
pop
fwait
and
pop
icebp
shlb
sub
cwtl
test
sar
fsubrs
or
cmp
jbe
out
addl
mov
rcrb
inc
xchg
jo
fucom
andb
mov
mov
cmc
push
push
push
repnz
nop
rcrb
mov
stos
jo
fmull
cmp
push
pop
push
clc
mov
adc
ds
jo
inc
xchg
lcall
pusha
jle
scas
mov
dec
push
pop
icebp
popf
xchg
pop
hlt
sbbb
mov
mov
mov
aaa
mov
xor
cltd
and
adc
test
push
jge
or
outsb
dec
and
mov
iret
arpl
pop
cmp
push
cmpsl
add
add
sbb
push
mov
inc
cmp
test
out
push
lock
push
dec
xor
jnp
rclb
jo
jae
inc
mov
test
les
xor
adcb
xor
movq
mov
mov
adc
test
sub
cwtl
inc
mov
dec
or
sbb
cmp
push
insb
push
cld
ret
pop
xchg
js
pop
fldenv
stos
fsub
stos
pop
jnp,pn
into
mov
shl
xlat
fstpt
movsl
pushf
mov
xchg
outsl
push
aam
jmp
arpl
ret
insl
adcl
inc
lret
test
fmulp
cmp
shll
idiv
jecxz
or
jge
xchg
daa
jo
ret
fisubrl
in
test
mov
or
mov
mov
into
sbb
inc
mov
dec
or
mov
loop
pop
notl
sub
in
and
mov
lods
jmp
sbb
adc
pusha
incb
xchg
jge
popf
and
adc
jg
jae
ds
cltd
sbb
mov
mov
push
add
pop
adc
cwtl
imulb
jecxz
pop
sbb
repz
sub
es
lods
sbb
cwtl
pushf
mov
inc
adc
pop
mov
or
or
inc
cmp
add
jp
xchg
inc
push
daa
dec
xor
fdecstp
mov
fildll
jmp
xor
sahf
repnz
jbe
pop
xchg
das
inc
cmp
or
sbb
movq
scas
imul
pop
lret
lcall
push
loopne
lret
outsb
popf
sbb
mov
xor
fsubs
sub
aad
je
clc
addl
xchg
or
int3
jns
repz
and
imul
push
inc
mov
inc
sbb
stc
jge
jg
and
add
sub
jecxz
pushf
insl
cmp
sbb
into
inc
mov
in
fdivl
and
adc
inc
shrl
jbe
mov
mov
orl
sbb
in
test
rcrl
loopne
imul
insl
out
stos
xor
fcomps
dec
sub
std
mov
jne
mov
fsubrs
je
cmp
in
lock
push
ficoms
dec
add
push
out
jns
std
sti
jle
scas
sub
lcall
mov
dec
mov
xchg
add
in
enter
mov
sub
adc
pop
aad
adc
leave
mov
ja
bnd
mov
push
push
sub
add
ret
fnstsw
sub
mov
push
jge
fldl
or
in
add
push
cmp
out
mov
jo
dec
std
jl
int
popa
int
imul
mov
mulb
cmp
sub
cld
insl
mov
adc
push
mov
out
aad
arpl
lea
cmpsl
and
push
bound
rorb
mov
test
add
aas
sub
push
xchg
mov
fistl
xchg
mov
mov
sub
in
dec
cmpsb
jecxz
cmpsl
mov
outsb
push
xor
cmp
lret
push
ds
sub
or
nop
add
push
out
sbb
mov
mov
inc
sbb
sub
out
mov
popf
loop
mov
mov
sbb
orb
mov
mov
add
jg
and
mov
push
shrl
rol
aas
pushf
dec
sahf
adc
mov
mov
push
mov
into
shl
cmp
push
gs
xchg
sub
or
sub
mov
add
mov
outsl
fwait
das
adc
push
jp
js
inc
popf
js
push
add
icebp
cwtl
push
mov
sub
cs
dec
jg
cs
insl
jnp
ret
xor
add
sahf
out
cli
push
push
bound
push
mov
cmp
inc
into
pop
outsb
std
jmp
sub
cwtl
adc
mov
inc
int3
movsl
outsl
iret
cltd
push
addl
nop
out
push
push
data16
pop
arpl
adc
rcrl
mov
stc
or
push
fstl
mov
pushf
sub
pop
imull
repz
and
sbb
inc
inc
das
pop
sbb
cmp
pop
pop
js
sub
pop
into
lods
outsb
inc
aas
icebp
fwait
xchg
lea
pop
mov
mull
negb
jno
dec
sbb
rcrb
test
mov
mov
push
lret
dec
jne
mov
push
xchg
and
xchg
and
insl
xchg
dec
imull
pop
mov
jecxz
mov
daa
mov
outsb
pop
add
test
dec
sbb
les
scas
fcomps
and
enter
sub
sbb
sbb
add
jl
pusha
arpl
leave
les
mov
popa
repnz
lcall
mov
push
pop
ja
loop
pop
jno
popa
xlat
sbb
and
and
mov
sbb
int
cmp
dec
cmp
pop
pop
add
adc
sub
mov
and
and
push
mov
xor
gs
shll
inc
pusha
fisttpll
mov
pop
jecxz
pop
cwtl
pop
ret
dec
cmp
and
loopne
cmpsb
mov
rorl
mov
mov
insb
rcrl
sti
pop
xor
and
les
gs
iret
xor
das
xorb
test
push
cmp
out
inc
mov
mov
in
fs
rclb
sbb
pmaxub
xor
call
imul
int3
out
aad
cmp
dec
xorb
add
bound
sbb
sub
pop
pop
jp
iret
jle
xchg
cmp
inc
gs
sti
jb
out
daa
in
dec
mov
mov
cmp
cmp
or
lea
out
out
or
sub
mov
push
cmp
int3
pop
and
cwtl
add
sahf
xor
sub
arpl
in
inc
aad
push
imul
pop
sub
daa
dec
add
les
mov
and
lret
push
popa
or
mov
inc
push
pop
adc
loop
cmp
xchg
jg
clc
icebp
pop
mov
jle
sbb
lcall
mov
test
sub
mov
cmp
fcomi
push
cltd
dec
xchg
and
clc
lahf
adc
cli
int3
andb
push
js
cmp
jbe
mov
dec
lds
push
pop
mov
pop
jp
mov
ljmp
subb
sbb
scas
aad
lock
sub
cmpsl
pop
out
inc
jnp
xor
cmpsl
out
lahf
insb
lret
mov
sarb
and
sbb
aad
in
loopne
inc
ja
xlat
test
lea
sub
daa
jno
cmp
int3
je
push
test
xchg
pop
pop
mov
mov
xor
push
mov
xor
sbb
ss
cmp
in
stc
shlb
mov
mov
mov
dec
scas
int3
jg
nop
jecxz
and
xchg
imulb
in
mov
ja
insb
insl
jbe
and
sbb
dec
sbb
sub
and
data16
inc
push
mov
in
adcl
or
arpl
jle
int
xchg
call
nop
xor
outsl
cmp
mov
fs
loopne
sub
inc
negl
xlat
cmpsl
sub
mov
loopne
mov
xchg
jecxz
pop
or
jge
push
scas
mov
mov
jmp
mov
pop
bound
fsubrs
popf
push
outsl
dec
dec
stos
cwtl
pop
sub
mov
and
stos
push
ljmp
adc
dec
jp
out
mov
daa
mov
push
jmp
stc
xchg
stos
nop
cld
cmpsb
cmpl
dec
mov
jg
adc
mov
xlat
bound
adcl
pop
pop
or
add
and
push
or
into
ss
popf
adc
ljmp
mov
repnz
in
insl
out
out
jns
pop
cmp
hlt
nop
int
movsb
adc
fwait
jecxz
xchg
push
daa
fcomps
insb
push
or
shlb
lock
or
push
insl
xchg
or
lea
imul
push
dec
subb
scas
xchg
adc
test
gs
lcall
cmp
and
inc
inc
cmpsl
mov
pop
mov
les
push
hlt
cmpsb
mov
loop
mulb
sbb
ss
inc
out
sarb
add
icebp
xchg
jp
stc
lods
int3
mov
mov
add
lahf
mov
daa
andb
mov
inc
movb
cmp
jo
sti
dec
jp
sub
xchg
and
sub
inc
arpl
lcall
lahf
add
add
push
mov
jmp
test
pop
stos
push
out
mov
cmpsb
sbb
xchg
mov
pop
insl
pop
sbb
push
and
cwtl
mov
pop
push
push
bound
mov
jbe
xchg
jnp
and
movsb
xchg
scas
cmp
lea
adc
sbb
leave
mov
inc
dec
fadds
inc
fwait
jno
and
cmp
shlb
or
mull
pop
push
lret
dec
shlb
dec
push
pop
test
xor
pop
imul
push
inc
add
push
mov
xor
dec
dec
out
xlat
or
scas
cltd
pop
adc
pop
in
inc
add
pop
loopne
mov
jae
cwtl
mov
mov
add
mov
adc
jg
ret
xor
mov
movsl
cli
das
add
xor
cltd
test
and
xor
filds
scas
test
sti
out
int3
xchg
mov
adc
xchg
sbb
aaa
fwait
jb
ds
aam
dec
cmp
std
xchg
mov
cmpsl
mov
xlat
jno
cltd
inc
aas
insb
cld
jnp
xor
xor
rcrb
int
fwait
pushf
xchg
pop
lds
fldl
inc
je
mov
repnz
popa
imul
popf
sub
ret
clc
sub
testb
jae
es
insl
xchg
xchg
adc
jns
andb
ja
fistps
rcrb
gs
inc
inc
push
test
sti
fisttps
in
push
sub
aaa
sbbb
bnd
cmp
sbb
mov
push
push
movsl
in
in
push
pop
mov
dec
mov
add
icebp
sub
jmp
pop
xor
pop
cmpb
add
loopne
mov
inc
ret
test
push
add
jnp
shl
xorl
icebp
loop
mov
mov
pushf
jmp
xchg
gs
jecxz
pop
xchg
lcall
repnz
sub
mov
adc
packsswb
xor
adc
leave
adc
outsl
mov
sar
push
cld
mov
aad
aad
sub
cmp
ficomps
ds
dec
ljmp
inc
fbstp
inc
xchg
jmp
and
push
sar
inc
sti
call
adc
pushl
jnp
xchg
fldln2
fs
mov
int3
xchg
shll
popf
rcll
inc
add
adc
or
lds
push
cs
mov
lahf
pop
insl
push
mov
movsl
stos
adc
mov
hlt
ljmp
pop
pop
xchg
fisttpll
jg
jbe
mov
push
push
mov
dec
popf
out
xchg
mov
mov
cmp
cmp
div
push
sbb
sbb
hlt
iret
push
cli
pop
shlb
faddl
mov
sbb
jmp
lret
push
arpl
je
and
ja
mov
jmp
ret
jne
imul
fwait
inc
jo
cld
shll
dec
or
pop
mov
inc
pop
cmc
inc
jle
roll
mov
fnstenv
lcall
inc
cmpsb
arpl
jnp
mov
push
shlb
sbb
addr16
pop
xchg
outsl
clc
inc
adc
scas
add
cmp
push
lea
push
lret
mov
push
jp
xor
or
xor
mov
idivb
pushf
movsl
fdivrs
pop
mov
xorb
add
and
cmc
sarb
pop
jne
and
aad
inc
call
jmp
add
lcall
bound
push
jb
xchg
and
dec
pop
dec
nop
sbbl
rorb
rorb
cwtl
jecxz
and
pop
adc
sub
inc
mov
xchg
movsb
loop
dec
inc
jp
jnp
pop
imul
cmp
inc
cwtl
repz
jp
push
rorl
lcall
inc
xchg
xchg
popl
mov
or
adc
or
pop
push
mov
lret
shll
popf
test
bound
or
dec
sub
mov
xor
fisttpll
sbb
mov
test
mov
iret
push
mov
xor
cmp
mov
movsb
lock
cmpsb
jg
jl
fcom
sub
jbe
in
lods
outsb
addr16
adc
push
pop
mov
mov
shl
out
inc
xor
push
mov
push
jno
inc
inc
imul
leave
mov
or
out
dec
mov
pop
jp
repz
je
imul
imul
pop
push
or
push
pop
adc
in
dec
arpl
dec
ret
hlt
int3
sbb
aas
dec
cmc
sbb
xor
mov
sbb
jb
xchg
push
jb
mov
jg
cmp
filds
xchg
insl
fwait
mov
shr
es
or
dec
les
xor
inc
fwait
xchg
sub
cmc
in
cld
jecxz
shll
int
stc
cmpsb
mov
sbb
roll
cmp
pushf
mov
adc
orb
aad
add
sbb
jae
test
inc
cmc
lret
fisubs
ret
pop
cmpsb
stos
fldenv
mov
sub
and
pop
mov
stos
fsubs
jle
mov
cli
out
icebp
jge
jb
xchg
js
add
pop
rcl
pop
in
mov
mov
fdivl
call
jb
aad
cmp
mov
push
and
arpl
fsubs
push
lret
pop
imul
test
dec
jne
rclb
jecxz
cmp
je
jbe
add
bound
mov
sahf
cmp
dec
lret
ret
xor
dec
rcll
cmpsb
mov
fcoms
mov
aas
and
ds
lret
add
fcoml
inc
out
push
inc
es
out
lds
jmp
lods
add
loopne
xchg
stos
mov
stc
mov
movsb
test
cltd
pop
jne
aaa
das
out
hlt
or
mov
shll
push
subb
fstp
movb
mov
dec
mov
mov
mov
cld
push
in
fadds
xchg
es
lods
jo
shl
xchg
mov
popf
push
mov
stos
cld
loop
jne
pop
mov
aas
pop
in
pop
flds
add
in
int
aaa
and
fsts
and
push
and
inc
add
pop
test
mov
or
and
iret
push
enter
mov
or
scas
rolb
leave
or
sub
sbb
into
mov
push
cmpb
dec
mov
pop
or
movsl
push
dec
int3
adc
jge
and
rcl
pusha
xor
jnp
sbb
clc
or
sbb
push
aaa
loopne
aad
push
mov
cmp
lock
lea
push
mov
cmp
mov
dec
in
popf
pop
in
flds
mull
xchg
out
outsb
mov
inc
jmp
cwtl
scas
adcl
cmpsb
dec
add
and
test
in
mov
fldenv
imul
loop
orl
arpl
loop
mov
jae
inc
inc
fsubrs
cmp
in
push
mov
and
xchg
fmuls
arpl
repnz
xchg
mov
push
mov
pop
lds
dec
and
jmp
mov
imul
jecxz
loope
jae
xor
call
enter
aad
data16
js
and
cmp
sbb
sub
mov
imul
loope
orb
testb
pop
fnstcw
fadds
je
and
es
aas
jecxz
imul
sbb
sub
arpl
lret
mov
insb
mov
movsb
sub
and
pop
testb
lods
mov
and
cmp
xor
push
mov
lret
mov
mov
iret
pop
dec
sahf
xchg
sbb
sti
sbb
out
jecxz
add
pushf
imul
in
ret
imul
cmpsb
rcrl
or
stos
and
xor
test
adc
sarl
imul
js
mov
cmpsl
xchg
inc
and
jg
mov
add
sub
and
stos
ss
cmpsl
or
or
mov
sbb
inc
jle
adc
jl
pop
insl
cmp
ja
repz
push
andb
push
xor
std
xchg
xor
loope
decl
mov
scas
fisubrs
test
dec
in
mov
cmp
rcrl
sub
mov
inc
test
sbb
mov
mov
in
fwait
pop
aam
push
pop
xchg
aas
fistps
std
sahf
sti
data16
fldcw
pop
mov
push
in
lahf
mov
out
ret
or
cmpsb
loope
mov
jge
jle
push
add
movsb
push
dec
xor
rcl
sbb
xchg
inc
sti
outsb
mov
pop
push
push
and
jns
js
enter
cli
xchg
add
in
adc
in
push
insl
lods
push
add
jle
mov
mov
imul
xchg
cmp
jae
xchg
ss
outsl
or
fnstenv
loope
fbstp
imulb
mov
jae
loopne,pn
add
push
outsl
and
jo
lcall
imul
mov
mov
inc
xor
cmp
mov
cmp
arpl
push
push
std
xchg
sbb
leave
test
ficompl
sub
pop
push
repz
int3
inc
das
mov
pop
cmp
and
xor
stc
les
sub
pop
pop
mov
and
in
stc
sub
dec
add
pop
leave
xchg
push
clc
rcrl
sar
sarl
inc
fwait
ljmp
mov
pop
and
aam
jae
xor
shl
sub
mov
lds
pop
faddl
xchg
dec
pop
push
xchg
xlat
sub
xor
sub
call
aad
call
push
push
scas
clc
or
cwtl
mov
dec
je
pushf
into
jo
sub
sbbl
inc
and
insb
adc
lods
in
dec
into
in
mov
imul
fdiv
mov
lock
sbb
adc
inc
fmul
inc
sub
sub
adc
repz
jecxz
test
push
mov
movsb
div
dec
scas
repz
movsb
lret
out
pextrw
jp
repz
loope
pop
fld
ja
sbb
imul
add
rolb
cmp
addr16
fldt
ret
enter
push
dec
jle
mov
repnz
cmpsl
and
fimuls
invd
movsl
ret
push
push
jnp
lods
add
cmp
push
sbb
fnsave
leave
push
lods
lcall
ror
lea
mov
jg
and
cmp
inc
cmp
lcall
add
cmpl
nop
imul
mov
pop
cmp
mov
aam
scas
mov
cs
dec
cmpsb
sbb
cmp
lret
push
mov
repz
pop
insb
sub
aaa
inc
or
test
push
and
cmp
in
pop
xor
mov
cmpsb
pop
ss
inc
dec
nop
enter
sub
jno
and
stc
xor
fwait
mov
mov
roll
cmpl
bnd
lock
sahf
xlat
leave
popf
jo
subl
fstl
inc
push
or
inc
fisubs
push
pop
xor
mov
adc
or
jns
into
pop
je
je
movsb
mov
push
stos
in
sbb
not
cmp
inc
icebp
mov
push
sub
mov
mov
out
movl
in
mov
sub
xchg
jae
aam
shlb
sbb
filds
fiadds
push
imul
lcall
mov
cmp
xchg
mov
mov
push
cmp
jo
rcll
subb
push
pop
mov
test
mov
sbb
dec
add
add
scas
stos
out
pop
clc
adc
pop
sub
xchg
xchg
and
dec
dec
imul
fcoms
sahf
lcall
xor
pop
loope
mov
cli
arpl
cmp
jne
mov
stos
std
adc
pop
inc
scas
mov
lea
pcmpeqb
sbb
push
std
mov
sub
aad
aas
mov
sti
pop
mov
shll
and
add
js
ret
ds
pop
subb
adc
shlb
mov
push
aas
mov
cli
xor
orb
xchg
imul
mov
cli
xchg
scas
movsl
popl
mov
or
mov
out
test
movsb
int
dec
sti
xor
cli
stos
xchg
stc
mov
rorb
or
stos
sub
lock
mov
arpl
push
sbb
call
jo
push
and
xchg
add
mov
sub
mov
rorl
sub
mov
sarb
jns
cmp
jnp
sbb
ja
push
or
xchg
add
push
pop
lcall
pop
adc
jb
jb
sbb
popaw
push
dec
jmp
arpl
aaa
loope
or
or
lret
inc
and
push
pop
xor
frstor
mov
mov
jl
out
aam
stc
bound
inc
xor
add
sbb
shll
cmpsl
xchg
lcall
jbe
pop
cmp
repnz
iret
cmpsl
or
mov
and
sub
jbe
aam
sub
aam
ficoml
outsl
cmp
aam
mov
out
sti
mov
xor
mov
lods
pop
add
jmp
mov
jg
add
push
sbb
mov
fstps
adc
adc
loope
aas
movsb
je
pop
xchg
jbe
inc
das
fs
lea
bound
and
cmp
adc
dec
ficomps
dec
dec
clc
cmpsb
dec
daa
xor
jle
into
xchg
imul
push
les
loope
xlat
in
shrb
lds
cmpsl
push
fwait
push
mov
dec
add
sub
sti
addr16
and
mov
stc
mov
lock
or
fwait
pop
int
push
shl
inc
mov
subl
out
dec
and
cmc
pop
adc
mov
sub
ja
mov
stc
xchg
pop
outsb
jg
in
stos
addr16
xchg
fldt
sub
jno
ds
test
lret
aam
lcall
mov
and
js
add
push
mov
jle
sti
sbb
scas
inc
fimull
pop
aam
add
lahf
mov
cltd
inc
sbb
dec
mov
push
pop
push
rcll
dec
jnp
push
push
negb
push
out
lods
inc
mov
mov
inc
bound
aad
xchg
mov
imul
enter
ficomps
vpshrdvw
popa
cmp
pop
in
scas
xchg
cmp
pop
jmp
outsb
aad
fildll
jno
subl
and
mov
stc
shr
xchg
ljmp
popa
js
sahf
lret
mov
and
lret
inc
adc
clc
mov
cmp
sbb
cld
push
ret
push
add
cs
add
cs
popa
xchg
in
or
in
jmp
xchg
fwait
mov
dec
insl
dec
add
loopne
iret
and
call
mov
xchg
std
lds
push
ja
pop
xlat
adc
mov
mov
stos
inc
push
cmp
test
xchg
or
push
pop
push
jp
loopne
lea
sub
pop
lret
mov
cmp
rolb
dec
fcomps
sbb
mov
sbbl
or
aad
out
push
cwtl
push
idivb
cltd
jae
lods
mov
and
sub
or
cwtl
nop
test
ds
jnp
xchg
outsb
mov
pusha
jecxz
insl
shrb
subb
addr16
xchg
jecxz
cmp
adc
mov
imul
pop
scas
mov
into
pop
jge
mov
scas
pop
mov
push
arpl
fbld
pusha
jnp
aaa
imul
push
mov
inc
aaa
sub
mov
lcall
stc
add
jp
cmp
or
adc
fstps
pop
jb
lahf
pop
lret
adc
cltd
jl
fstps
sahf
jno
popa
mov
dec
aaa
push
loopne
xchg
pop
cmp
inc
cmp
loope
mov
pop
in
push
sub
shl
xchg
cmp
jmp
pop
je
mov
fstl
les
nop
decb
dec
in
insb
and
outsb
jp
outsl
leave
or
fsub
fdivrl
xchg
mov
not
mov
adc
sbb
adc
push
jl
sbb
cld
ret
mov
lock
shr
dec
inc
xchg
mov
loopne
inc
pusha
add
jp
dec
stos
jno
pop
arpl
mov
outsl
clc
daa
lock
sub
or
mov
fadds
dec
int3
test
fiadds
push
adc
push
add
scas
jp
sbb
ljmp
into
cmp
rol
int
insb
and
and
sbb
mov
sbb
mov
ret
pop
stos
sbb
jecxz
xchg
push
andl
pop
lahf
mov
or
xchg
iret
ds
sbb
sbb
mov
repnz
mov
ret
jbe
clc
or
pop
dec
mov
fnstsw
adc
mov
inc
pop
add
gs
sti
mov
adc
dec
push
divps
sahf
xchg
jecxz
clc
and
jge
gs
push
std
fsubs
add
int
repnz
or
push
sub
jle
pop
push
sub
inc
rcll
mov
push
pusha
aaa
cmpsl
aas
aas
mov
and
scas
test
into
cmp
lock
cld
and
fmull
pop
mov
mov
jmp
push
or
mov
aad
jecxz
iret
push
fs
xor
cmp
xor
arpl
and
add
pop
addr16
mov
out
fcom
jmp
je
sidtl
bound
into
jge
daa
push
pop
divb
jb
mov
fsubp
lea
push
jecxz
mov
movsl
insb
loopne
xor
ss
mov
xor
or
inc
or
jge
test
jmp
sbb
ja
je
daa
push
inc
push
pop
mov
jno
mov
adc
int
jecxz
adc
mov
rcr
xor
push
push
jmp
imul
lds
and
fdiv
in
pop
sub
mov
sub
dec
cmp
cmp
and
mov
xor
push
les
bound
das
in
cmp
stc
xchg
xor
out
arpl
clc
jecxz
push
std
dec
mov
out
das
cmp
adc
std
mov
sbb
jno
loop
imul
int3
jbe
mov
cmpsl
pusha
xchg
popa
and
add
imul
jg
repnz
mov
cmc
lds
das
jo
ds
xchg
dec
into
movsl
sahf
sbb
xor
push
aad
pop
push
mov
xor
lret
mov
outsl
movd
lret
mov
mov
sub
xchg
ja
jne
out
adc
sarb
mov
jmp
lea
adc
aam
cmpsl
or
push
mov
or
pushf
cwtl
jmp
into
aas
sbb
xor
lret
sbbl
aaa
rol
push
jne
fildll
adc
mov
dec
jp
push
roll
addb
int
jge
daa
out
imul
pop
sub
push
leave
cmc
out
sbb
in
aam
inc
stc
pop
imul
cltd
mov
movsb
jecxz
xchg
mov
sub
hlt
roll
jnp
mov
lock
add
leave
aas
jmp
cmpb
std
jne
mov
hlt
addl
js
inc
hlt
cmp
lret
hlt
mov
jmp
lods
dec
pushl
mov
mov
inc
cli
gs
dec
or
inc
adc
rcll
dec
lahf
scas
xchg
mov
popf
enter
loop
paddsb
mov
xlat
push
add
out
xor
test
loope
aas
sub
hlt
lock
inc
xchg
sbb
jg
jno
push
push
or
lret
dec
mov
mov
roll
setl
or
mov
mov
jle
mov
sbb
push
push
aaa
dec
dec
fildl
and
lock
outsl
pop
aas
sub
adcb
in
inc
pop
fstps
mov
cli
adc
jmp
call
and
and
cmpsl
mov
mov
cmp
es
xor
push
test
mov
and
jnp
dec
fwait
inc
xor
mov
xchg
cltd
pop
push
test
xor
jno
sbb
mov
sahf
gs
aaa
and
ret
addb
fwait
lds
cmp
pop
sub
or
sbb
mov
mov
shll
mov
cmpsl
shrb
cmp
jl
shlb
cs
xchg
xorl
in
push
jmp
lea
loopne
arpl
push
cmp
gs
fwait
loop
xor
movsb
push
xchg
cmpsb
repz
scas
cmpsb
xor
add
pop
mov
add
mov
stos
je
stos
and
data16
int
xlat
adc
adc
cwtl
add
aaa
jne
inc
mov
push
or
cmc
sbb
or
xchg
fld
lods
out
in
insb
push
outsb
insb
insb
dec
mov
xor
lods
lods
dec
fcompl
cmp
insb
and
repnz
mov
repz
mov
rclb
andl
xchg
mov
insb
sti
in
sbb
push
mov
pop
push
es
dec
push
push
mov
scas
test
arpl
xlat
nop
inc
mov
mov
jne
test
in
outsl
sbb
cmp
sarl
cmp
xchg
mov
movsl
mov
or
fs
sahf
les
fistpl
shl
add
mov
and
sub
adcl
adc
push
cld
jge
mov
js
mov
and
dec
add
lcall
add
inc
push
repz
cmc
out
loop
add
adc
rorb
sbb
cmpsb
push
mov
aad
xlat
dec
sub
aam
push
repz
icebp
add
sahf
ss
push
aam
es
or
ljmp
jecxz
fadds
xor
enter
sbb
xlat
setg
lds
sub
and
inc
xor
cmpsb
lret
sbb
mov
div
daa
lea
imul
adc
jecxz
inc
adc
mov
jg
or
cmp
das
mov
lcall
push
jge
jg
xchg
fs
cmpsb
inc
icebp
push
std
mov
jle
fldl
push
out
xchg
mov
mov
xchg
pop
push
jg
xchg
mov
xor
test
lahf
mov
lret
push
and
out
or
jno
in
enter
arpl
pop
pushf
insb
sbb
jb
sub
inc
adc
es
add
push
sub
jns
test
pop
popl
jbe
adc
mov
pop
mov
xor
mov
pushf
jb
pop
pop
test
jbe
xchg
pop
hlt
lcall
adc
pop
or
aas
and
pop
nop
cmc
imul
into
jp
xchg
jge
ss
mov
pop
fcom
imul
mov
shlb
mov
mov
enter
stos
mov
aas
in
std
imul
xor
push
dec
scas
and
mov
jg
or
mov
imul
xor
shrb
arpl
mov
stos
xchg
repz
jne
fwait
or
lea
pop
mov
xor
pusha
in
sub
push
dec
jo
jne
pop
jns
xchg
pop
dec
popa
dec
xchg
out
sti
mov
ja
imul
insb
mov
lahf
pushf
and
out
repnz
sbb
mov
cs
ds
adc
xchg
ljmp
les
mov
dec
push
test
les
mov
push
sbb
data16
xchg
push
sti
int
pop
mov
sbb
sbb
in
xchg
repnz
inc
enter
std
ja
mov
scas
mov
ja
mov
xor
sbb
jne
clc
dec
or
enter
jle
negb
jp
and
push
xchg
fsubrl
repz
push
cmp
sub
sbb
outsb
cltd
push
mov
xchg
jp
inc
jg
cmp
or
xor
clc
fdivs
sub
out
inc
fldcw
mov
jns
lea
sbb
and
xor
pushf
fldcw
sbb
leave
insb
inc
mov
xor
jae
sbb
sub
sbb
and
out
push
mov
stc
push
outsl
pop
stos
inc
mov
and
cmpsl
xchg
pop
mov
mov
mov
push
cmp
lods
lods
add
rol
sbb
inc
jge
push
aad
adc
in
dec
or
sti
or
xlat
insb
sbb
cmpsl
sbb
lods
mov
popf
cmp
in
mov
loop
sub
dec
mov
mov
cmp
scas
lds
inc
loope
cmp
in
fistpll
jo
jge
daa
inc
push
cs
push
popf
sahf
ss
popa
imul
mov
adc
andb
test
pop
mov
insb
and
pop
ss
fstl
add
lret
xchg
cmp
leave
ljmp
imul
mov
or
adc
mov
pop
mov
aam
lret
stos
push
xchg
imul
or
mov
loope
sarl
jge
dec
in
jle
jnp
shll
inc
out
stos
repz
imul
push
rorl
movsb
hlt
and
enter
vandnps
dec
xor
jl
popf
ljmp
adc
mov
fwait
outsl
mov
and
dec
mov
dec
dec
rcrb
jmp
push
idivl
xor
shll
jo
mov
stc
xchg
sub
jnp
lods
call
in
pop
inc
mov
test
std
arpl
std
lods
pushf
pop
pop
fsubs
jo
cli
cmpsl
mov
addb
inc
fldl
repz
mov
loop
sub
mov
mov
mov
mov
rcrl
and
fisubrs
adc
shlb
dec
daa
cli
loope
fucomi
es
cmpb
jmp
xchg
cmc
or
push
fucomi
pop
sahf
sub
bound
pop
shrl
add
xchg
add
rorl
push
mov
inc
out
lods
and
mov
inc
scas
or
or
lcall
xchg
test
jbe
dec
imul
repnz
add
fisttps
mov
aaa
icebp
adc
push
lods
rorl
jno
dec
out
sbb
fsubrl
rorl
ss
leave
ja
jne
lods
add
adc
stos
ljmp
scas
mov
mov
push
out
pop
loop
jae
in
test
or
loope
xchg
sbb
incw
jnp
adc
arpl
jno
xlat
sub
stos
mov
adc
ds
mov
cmp
sub
shll
mov
jno
in
inc
mov
dec
cmp
fdivs
mov
jl
and
push
std
das
loopne
ss
dec
sub
jne
push
inc
rcrl
fsts
jns
data16
fs
and
and
in
hlt
push
pop
mov
inc
and
cli
pushf
int3
xchg
cmc
push
mov
adc
fs
inc
jp
lds
fldt
mov
insl
xor
push
push
ljmp
xchg
adc
shrb
cld
mov
subl
xor
push
nop
cmp
testb
sub
or
add
xor
jo
in
mov
inc
scas
sbb
shll
out
aas
mov
or
xchg
jp
pop
adc
in
sbb
fstl
and
in
and
mov
int
push
add
mov
loopne
xor
shl
outsb
mov
outsl
aaa
cmp
pop
mov
stc
lcall
movsl
sbbb
faddl
stos
and
inc
mov
jecxz
pop
cmp
rcll
or
xor
jnp
in
aas
imul
add
jp
jo
push
mov
lods
mov
pusha
cli
add
rcll
mov
cmp
xchg
fldt
pop
mov
sub
mov
ret
mov
adc
imul
mov
mov
lds
pop
aaa
stc
inc
jmp
push
loop
decb
jle
add
dec
jns
push
mov
dec
mov
cmpsb
scas
push
ljmp
and
gs
jo
imul
pop
inc
adc
dec
and
aam
out
pop
shrl
ret
adc
dec
mov
fidivl
sbb
pop
pop
lods
dec
pushf
rcll
int
lea
or
inc
jo
lahf
mov
pop
or
mov
sub
lahf
ret
mov
cmp
push
jge
sbb
sti
out
push
out
xor
or
mov
std
mov
rcl
add
push
sub
adc
pop
push
aaa
mov
mov
pop
nop
cmp
inc
insb
sbb
fdivrl
cmp
lock
andl
mov
in
arpl
inc
mov
push
mov
xchg
std
mov
pop
lret
fnstenv
lahf
push
mov
pop
movsb
out
std
out
test
aaa
add
mov
std
data16
lahf
inc
fcoms
and
fnstcw
in
mov
fsubrl
int3
out
scas
sub
lods
mov
insb
and
cmp
enter
pop
push
pop
cmp
or
sbb
popf
sti
lods
ret
mov
push
cwtl
inc
dec
and
and
push
imul
pop
adc
rcr
insl
fadd
ss
dec
sbb
orl
fimuls
repz
jns
shr
jp
mov
mov
sbb
cli
lret
shl
cmp
daa
clc
fisubrs
cmp
stc
pop
pop
test
jmp
hlt
ja
xor
fisubrs
movsb
in
and
enter
or
cld
cmpsb
xchg
jle
fisubrl
jbe,pn
in
xchg
sub
scas
mov
adc
inc
cmc
inc
jg
pop
push
sti
inc
jbe
mov
incb
outsb
rolb
cmp
lret
aaa
push
jne
es
jl
leave
ds
in
xlat
dec
xorb
rorl
mov
jle
outsb
sbb
popa
or
mov
mov
test
pop
rclb
pop
mov
xchg
add
adc
andb
xorl
fdivs
sub
cli
xchg
mov
xchg
pop
dec
sub
aas
mov
xorb
xchg
loop
mov
pop
cmp
pop
imul
inc
and
add
das
and
das
xor
push
in
inc
inc
jne
adc
mov
jg
sahf
jbe
dec
sar
sub
in
adc
cmp
call
clc
mov
das
es
cmp
movsl
sbb
movsb
inc
outsl
sub
dec
cmovo
mov
jg
cmpsb
arpl
lods
sub
adcb
scas
mov
test
mov
enter
and
jne
xchg
sbb
sbb
hlt
and
je
incl
fnstenv
mov
nop
subb
lods
iret
fs
lock
push
push
adc
les
sbb
cmp
push
stos
dec
sub
push
sbb
push
adc
and
loop
xor
xor
mov
in
bound
add
popf
sbb
std
in
pushl
pop
aam
mov
sub
out
subb
cmp
insb
sub
std
mov
mov
test
jo
mov
mov
mov
jecxz
jno
in
mov
mov
push
xchg
mov
cmpsb
clc
add
fs
adc
xor
add
mov
add
xchg
mov
xchg
pop
dec
or
insl
jnp
cltd
sub
jp
psraw
in
sbb
push
mov
dec
add
jmp
inc
adc
pop
ds
mov
outsb
mov
mov
mov
stc
pop
mov
cmp
and
stos
push
cs
mov
fs
daa
dec
fs
aad
insb
scas
repz
in
xchg
adc
popf
fimuls
adc
pushf
mov
cmp
mov
pop
dec
sti
pop
ret
mov
shr
inc
test
test
push
out
xchg
push
mov
aad
pop
add
out
mov
dec
outsb
stos
ja
int3
mov
shl
ror
test
inc
into
int3
push
mov
imul
sub
loope
out
and
or
test
les
loopne
leave
cmpsb
push
or
bound
inc
sbb
jnp
xor
xchg
jae
xor
pop
mov
in
push
ljmp
mov
rcrl
mov
sbb
add
push
push
loope
fwait
and
call
popa
pop
xchg
push
lret
rol
ja
stos
lahf
sub
and
das
xchg
pop
dec
mov
push
cltd
and
add
fwait
and
je
int
mov
mov
xchg
mov
std
inc
push
adc
leave
imul
shlb
shll
pop
inc
jae
xchg
sarl
add
cmpsb
adc
cs
cli
or
push
jecxz
into
mov
sbb
mov
pushf
out
mov
enter
sbb
test
sbb
mov
cmp
xchg
sub
cmp
imul
dec
add
icebp
cli
outsb
jb
adc
movsb
sub
cmc
add
loop
int
lcall
mov
jp
cli
lcall
jmp
fnstsw
sbb
inc
fistpl
mov
mov
lahf
sub
sbbl
fdivs
outsb
cmp
gs
loope
subl
jmp
push
jne
jle
cwtl
decl
cmpsl
repnz
push
xchg
cmpl
repnz
fcompl
mov
lahf
fiadds
cwtl
mov
loope
or
dec
out
loopne
push
or
inc
jb
mov
fcomi
jecxz
add
mov
push
repnz
push
or
jle
aas
mov
xchg
clc
es
push
xlat
and
dec
popf
out
pusha
insb
sbbl
or
inc
hlt
pushf
fbld
pop
jnp
push
pop
inc
jbe
jecxz
icebp
inc
lock
into
mov
pop
mov
insl
adcl
inc
mov
sbb
push
repz
cwtl
mov
sbb
adc
cmp
mov
cli
fisttpl
cmpsl
lcall
xlat
clc
out
sarb
sbb
xchg
fists
mov
xchg
cmp
pop
clc
pop
dec
cmp
movsb
mov
mov
push
ret
movsl
fsubrp
fisubrs
or
mov
addr16
push
mov
es
imull
mov
scas
jbe
push
fiaddl
aas
in
pop
inc
daa
xchg
roll
fbstp
cmp
mov
pop
or
or
cmp
sub
lcall
cmp
iret
jnp
push
sub
jne
mov
fcompl
push
mov
dec
loop
ss
cmp
aad
adc
dec
add
cmp
xor
js
repz
mov
rolb
push
xor
add
jmp
lods
in
subb
movsb
push
dec
roll
cmc
adc
xorb
das
arpl
cmc
clc
jns
rolb
in
out
addr16
das
jb
sub
in
in
pop
add
js
xchg
sbb
jo
inc
repnz
dec
mov
mov
mov
lret
xchg
xor
shrb
pop
cltd
mov
adc
movb
test
add
repz
add
in
rcl
stos
mov
je
dec
pop
ror
mov
and
jns
xor
sub
dec
jae
cwtl
inc
pop
repnz
xchg
cwtl
pop
cmp
xor
iret
jle
and
sbb
jbe
jns
jne
mov
jns
ror
roll
pop
fdivrl
decb
push
iretw
push
mov
aad
jbe
test
add
enter
inc
cwtl
adc
fistl
adc
cmp
roll
push
dec
xor
xor
cmp
inc
lds
or
push
mov
cltd
or
daa
out
mov
and
jg
mov
mov
pop
or
dec
aas
inc
shl
orb
push
xchg
aaa
int3
lret
mov
xor
mov
and
dec
push
cli
xchg
hlt
or
fnstenv
lea
mov
jnp
fstl
mov
jl
mov
push
mov
outsl
outsl
cmp
pop
inc
shrl
shll
sub
dec
mov
jg
cli
rorl
and
add
push
add
inc
adc
jecxz
out
xlat
insl
push
sbb
or
stos
test
mov
loop
xchg
xor
dec
dec
orb
mov
inc
and
bound
jg
cmp
sbb
sbb
test
jne
test
adc
data16
shr
jg
int3
popf
add
fnstcw
and
arpl
rorb
dec
dec
cmpsb
dec
gs
mull
lds
daa
out
add
dec
shlb
pushf
sbb
pop
mov
xor
inc
fcmovne
std
inc
mov
rclb
push
inc
xchg
arpl
out
or
fdivrs
xchg
add
jl
jmp
imul
and
add
je
add
in
mov
dec
xchg
and
cmp
push
pusha
lret
leave
mov
xchg
pop
sub
pop
ret
inc
push
jns
ss
sti
std
repz
xor
insb
adc
pushf
aad
adc
xchg
shll
rol
imul
jmp
out
push
or
cs
loopne
jb
mov
lds
sahf
test
into
add
fimull
jmp
stos
xchg
jge
loop
mov
and
and
xchg
cld
rcl
mov
mov
das
xor
sub
xor
fwait
mov
decb
push
lret
pop
sbb
fcomps
mov
fadds
adc
enter
cmp
adc
cli
insb
add
and
push
bound
mov
sub
push
ret
inc
mov
cmp
pop
pop
hlt
xchg
pop
jnp
in
fisubrs
sub
add
mov
xchg
push
xchg
stc
cld
inc
ret
pop
fbld
jp
rolb
inc
ja
push
maskmovq
mull
aaa
ja
popa
inc
into
jg
fsubrl
push
jae
push
sub
std
pop
mov
pusha
sbb
xor
xchg
inc
jg
fmuls
sub
fdivrs
std
loope
jl
cld
pop
in
sub
sbbb
xchg
test
rolb
or
add
je
push
jbe
pop
xchg
mov
fcompl
or
loopne
add
sub
cmp
jmp
push
cmp
pusha
repz
out
fidivrl
sti
mov
cmp
lods
sbb
jo
cltd
mov
lds
or
xchg
fsts
lds
xchg
ss
add
add
or
int3
fnop
bound
sbb
lock
jno
nop
adc
sub
std
stos
shl
xor
std
in
cmp
xlat
mov
cli
jnp
sub
adc
leave
push
pop
lods
sbb
cmp
idivl
add
mov
mov
or
testb
ja
lock
fbstp
das
icebp
stos
mov
insb
pop
or
imul
xor
dec
adc
je
xor
xor
js
sti
pop
lea
dec
cltd
inc
cmpl
jb
test
inc
mov
inc
fnstenv
je
cmp
cmp
mov
movsl
push
mov
adc
pop
lea
cwtl
enter
mov
dec
int3
dec
pop
mov
add
imul
in
add
sub
pop
jae
jb
inc
and
dec
mov
mov
push
jnp
jl
adc
pop
adc
aas
jle
add
mov
push
jb
out
lods
and
mov
jne
incb
in
mov
xor
mov
gs
loop
jl
adc
das
das
fs
inc
das
jp
call
mov
push
aaa
sahf
test
mov
cs
or
jle
push
xor
loop
das
lret
jns
cld
jl
imul
fcompl
mov
insl
adc
add
dec
scas
popa
or
mov
ret
inc
stc
repnz
mov
sbb
ret
xorl
mov
pushf
xor
mov
shr
dec
mov
and
pop
inc
out
outsl
jmp
mov
dec
and
hlt
xlat
popf
lock
leave
pop
bound
push
inc
push
jecxz
scas
push
pop
adc
mov
xor
sub
in
push
imul
dec
inc
js
nop
xorb
lods
xor
and
nop
push
sub
xor
dec
jne
mov
jl
adc
sbb
pop
mov
push
and
sahf
ret
imul
mov
pop
mov
sbb
dec
mov
mov
subl
and
mov
pop
sbb
adc
adc
cld
lcall
mov
out
dec
dec
testl
pop
xchg
cmp
cmp
jg
pushf
xchg
sub
inc
or
xorb
cmp
mov
mov
aad
pop
sbb
repnz
xchg
jno
popa
pop
adc
xor
sub
sub
into
pushf
jl
jnp
xchg
aas
cs
rcll
jno
call
icebp
pushf
rorb
xchg
insb
lret
into
and
sub
mulb
inc
test
popa
das
mov
rol
sub
mov
cmp
pop
mov
adc
mov
push
insb
sub
pusha
dec
add
stos
ret
arpl
arpl
and
sub
loope
rcrb
jecxz
repnz
dec
mov
jo
dec
cmpsl
push
mov
sbb
sub
sub
gs
nop
arpl
scas
enter
adc
cmp
in
in
addr16
cmp
inc
ja
xor
dec
jae
mov
mov
push
jnp
and
sbb
mov
daa
cmp
icebp
and
xlat
xchg
pop
aas
dec
loop
addr16
adc
pop
jns
cwtl
sarl
imul
test
cltd
sub
xor
and
mov
test
ja
fnstsw
leave
adc
add
or
fldenv
inc
cld
data16
mov
dec
es
stos
pop
sbb
push
xor
xchg
les
mov
mov
ret
cmp
inc
inc
sarb
mov
inc
pop
cli
and
insb
gs
xchg
inc
sti
pop
std
flds
pop
cmpsb
fwait
call
xchg
ja
jg
xchg
jle
cld
xlat
inc
out
add
jae
xchg
xor
popa
out
loop
push
push
sbb
in
notb
jne
xor
ret
xchg
mov
sbb
mov
mov
faddl
xchg
scas
mov
gs
add
es
fs
xchg
push
xchg
add
insb
pop
jl
mov
dec
xor
pop
pop
and
lcall
out
jb
push
jmp
cmpsl
push
mov
sbbl
test
mov
jmp
sub
dec
dec
addb
mov
xor
sbb
pop
ret
nop
aad
adc
movsb
and
leave
hlt
cltd
lahf
lea
cmp
xchg
push
and
cmpsb
sub
cmc
aam
dec
jl
aam
push
inc
decb
add
das
jo
push
pop
ficoms
es
fstps
aam
push
or
pop
sahf
int
int3
idivl
ds
xchg
pop
sti
xor
adc
fmuls
rcrl
xor
dec
and
dec
lods
mov
out
mov
add
jl
inc
sub
jecxz
out
fdivs
add
mov
ljmp
adc
and
inc
arpl
fs
push
mov
pushf
pop
dec
cmp
test
add
add
add
add
jne
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
