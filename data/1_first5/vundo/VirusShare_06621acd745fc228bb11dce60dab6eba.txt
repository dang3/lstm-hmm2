or
mov
dec
mov
mov
push
lea
rol
add
inc
inc
mov
mov
sub
nop
nop
nop
nop
nop
test
jne
or
sub
xor
add
mov
movzbl
add
mov
lea
jmp
add
push
mov
mov
jmp
add
add
push
shr
ror
and
shr
or
mov
and
sub
mov
inc
and
mov
jmp
jae
call
push
jmp
int3
ret
jmp
addl
push
jmp
pop
jmp
nop
dec
subl
call
push
jmp
call
push
dec
call
push
nop
call
leave
subl
call
ret
add
add
add
jmp
call
inc
addl
call
ret
add
add
add
and
adc
cmpw
je
jmp
push
push
call
jmp
push
push
jmp
int3
push
subl
push
jmp
push
push
ret
int3
jmp
addl
push
push
jmp
push
xorl
call
mov
shr
mov
movzwl
nop
nop
nop
nop
nop
movzwl
add
add
mov
lea
sub
test
mov
mov
mov
jmp
inc
popf
mov
icebp
shr
and
lea
sub
sub
mov
add
sub
jmp
push
mov
mov
movl
movl
jmp
xor
and
cmp
sete
mov
ret
add
add
add
jo
add
call
popa
jmp
mov
ret
add
add
add
inc
hlt
add
add
jle
add
jmp
mov
and
mov
and
sub
mov
mov
jmp
mov
mov
rol
sub
mov
sub
test
jne
movzbl
jmp
mov
xor
and
mov
add
add
xor
cmp
mov
mov
jmp
call
lea
addl
call
mov
shr
mov
xor
or
add
sub
mov
jmp
movzwl
jmp
add
add
push
add
pushf
adc
cwtl
addb
add
or
add
adc
flds
test
add
push
push
jmp
mov
jne
xor
ret
test
jne
push
jmp
call
leave
call
leave
call
push
leave
int3
addl
pushl
jmp
or
xor
or
or
add
mov
jmp
lea
shl
shl
sub
mov
shr
jmp
add
push
shl
sub
mov
mov
sub
mov
push
push
jmp
jmp
lea
or
and
dec
sub
add
mov
sub
cmpw
jne
mov
mov
or
and
mov
mov
jmp
mov
add
jmp
test
jne
shl
xor
mov
mov
movzbl
add
mov
lea
jmp
je
push
push
dec
mov
sub
shr
test
lea
jle
jmp
cmp
jmp
mov
inc
ror
mov
rol
xor
or
sub
or
mov
test
jle
xor
or
add
mov
inc
mov
sub
jmp
test
jne
add
ret
and
mov
mov
jmp
add
mov
jmp
add
add
add
add
sbb
mov
push
push
inc
sub
add
sub
rol
mov
mov
xor
jmp
test
je
push
push
mov
rol
mov
or
xor
mov
sub
jmp
sub
test
jne
push
jmp
inc
nop
dec
xorl
call
ror
xor
mov
push
push
jmp
jne
and
add
jmp
add
mov
incl
add
shl
adc
rolb
adc
jne
cmpb
jne
nop
jmp
lea
mov
sub
shr
mov
add
push
call
mov
or
mov
jmp
call
pushl
ret
xor
sub
or
mov
rol
mov
shr
lea
lea
cltd
jmp
add
jmp
add
in
jo
push
jmp
mov
sub
push
push
dec
mov
test
push
mov
nop
nop
nop
nop
nop
movl
jmp
sub
mov
push
mov
movl
mov
push
jmp
call
ret
add
add
add
icebp
jmp
sub
inc
or
rol
xor
mov
add
mov
mov
inc
add
mov
shr
dec
rol
or
shr
mov
and
or
or
mov
rep
jmp
add
push
shl
mov
jmp
inc
add
shr
mov
jmp
lea
nop
movzwl
or
or
add
mov
and
jmp
mov
cwtl
and
add
sar
test
jle
jmp
shr
and
add
test
jne
mov
mov
pop
ret
add
add
add
mov
adc
add
inc
sub
or
sub
mov
mov
mov
add
jne
jmp
movzwl
xor
mov
add
add
sub
add
jmp
cmp
jmp
je
inc
sub
ror
add
sub
mov
test
jne
rol
rol
xor
mov
inc
mov
mov
shr
mov
lea
sub
shl
shl
sub
mov
jmp
add
adc
cmp
push
jmp
push
jmp
mov
mov
mov
add
add
jmp
add
add
add
xor
lcall
jmp
add
add
push
jmp
call
int3
call
push
push
addl
push
jmp
dec
call
subl
push
jmp
dec
call
call
ret
push
call
dec
xorl
call
test
je
jmp
cmpl
lea
jmp
add
pop
add
pop
jmp
ror
dec
xor
mov
jmp
nop
add
mov
or
mov
nop
push
nop
jmp
pushl
call
add
jmp
sub
sub
mov
jmp
add
add
cmp
mov
mov
jmp
add
add
add
leave
test
je
jmp
jecxz
addb
test
je
jns
jmp
xor
mov
test
jmp
and
add
test
je
or
mov
shl
or
and
mov
sub
test
mov
jmp
movsbl
rol
add
xor
mov
test
jne
cmp
je
jmp
std
or
jl
mov
add
mov
add
dec
mov
mov
mov
push
mov
push
add
jmp
clc
in
jne
sub
sub
jne
test
mov
mov
jmp
int3
inc
das
jne
jmp
xor
xchg
jne
jmp
add
cmp
jl
pop
xor
jmp
shr
and
and
mov
call
add
jmp
repnz
xor
add
ja
or
add
jmp
add
rorl
mov
sub
or
sub
ror
mov
shl
or
inc
and
mov
add
add
sub
jmp
out
mov
les
ret
mov
mov
push
jmp
leave
call
ret
addl
call
mov
jmp
int
add
loopne
and
jmp
jne
add
cmpl
jmp
mov
jmp
jne
test
mov
jmp
add
shl
rol
mov
add
sub
sub
rol
shl
and
mov
lea
push
push
jmp
dec
xorl
push
jmp
dec
sti
pop
movzbl
add
shl
ror
mov
mov
mov
or
shr
sub
add
xor
mov
shr
and
add
jmp
xchg
jno
pop
shr
ror
mov
jmp
push
call
push
jmp
call
call
leave
subl
jmp
test
mov
je
shl
or
sub
rol
mov
sub
test
jne
jmp
push
jmp
xorl
push
jmp
call
call
push
push
nop
xorl
push
call
sub
or
mov
mov
mov
mov
call
and
or
add
xor
mov
jmp
jne
pop
pop
pop
mov
pop
ret
pop
jmp
lea
push
push
jmp
mov
mov
and
xor
dec
xor
dec
mov
lea
push
mov
mov
shr
mov
ror
mov
jmp
cmpsb
pop
dec
call
add
mov
or
or
sub
xor
ror
mov
jmp
pop
and
mov
xor
jmp
mov
call
push
jmp
inc
push
push
call
leave
push
addl
mov
call
push
jmp
jmp
push
jmp
call
xorl
mov
jmp
movzbl
add
mov
lea
and
mov
shr
and
jmp
out
and
roll
mov
movzwl
add
dec
sub
and
mov
mov
pop
add
jmp
rcll
lahf
clc
inc
inc
cld
add
add
jmp
or
adc
pop
ret
mov
ret
add
add
add
rolb
add
add
inc
inc
and
add
add
shl
xor
rol
shr
mov
jmp
pop
xor
xor
mov
pop
ret
add
add
add
adc
rorb
aaa
mov
dec
sub
and
mov
and
mov
mov
mov
jmp
out
insb
mov
rorb
xchg
sti
incl
pusha
sahf
adc
ljmp
lcall
pop
add
rol
mov
pop
ret
add
add
add
cmc
jmp
or
mov
jmp
test
jne
jmp
mov
cmp
jne
mov
add
pop
jmp
cmpl
jne
pop
pop
pop
mov
pop
ret
add
add
add
jmp
jmp
push
inc
call
inc
subl
mov
call
add
mov
call
cmp
push
jae
nop
nop
nop
nop
nop
call
push
jmp
xorl
push
jmp
nop
jmp
addl
call
push
jmp
jmp
push
push
pop
addl
call
push
jmp
int3
call
call
call
int3
push
call
xorl
jmp
mov
mov
mov
add
lea
jmp
and
add
adc
add
add
pop
shr
dec
inc
ror
mov
pop
ret
add
add
add
enter
mov
add
mov
jmp
fisttpll
push
jmp
push
push
leave
inc
push
call
xorl
push
jmp
dec
addl
call
test
je
add
ret
pop
pop
nop
nop
nop
nop
nop
mov
pop
and
rol
or
mov
pop
ret
add
add
add
call
add
nop
nop
nop
nop
nop
subl
lea
nop
nop
nop
nop
nop
jne
test
mov
nop
nop
nop
nop
nop
je
nop
nop
nop
nop
nop
shr
add
shl
mov
sub
mov
nop
nop
nop
nop
nop
mov
add
jmp
movb
add
nop
nop
nop
nop
nop
jmp
movzbl
sub
sub
dec
mov
and
add
add
shr
mov
nop
nop
nop
nop
nop
mov
je
test
nop
nop
nop
nop
nop
je
nop
nop
nop
nop
nop
ror
add
rol
sub
mov
sub
add
sub
mov
nop
nop
nop
nop
nop
mov
jne
and
or
or
rol
mov
mov
mov
movl
jmp
movl
mov
nop
nop
nop
nop
nop
movl
jmp
nop
nop
nop
nop
nop
lea
call
cmpl
jne
cmp
nop
nop
nop
nop
nop
jne
call
test
mov
je
or
sub
sub
ror
xor
mov
sub
nop
nop
nop
nop
nop
add
sub
mov
mov
jne
nop
nop
nop
nop
nop
mov
jmp
sub
jmp
sub
xor
mov
movzbl
shl
add
nop
nop
nop
nop
nop
add
lea
nop
nop
nop
nop
nop
xor
ror
or
and
mov
mov
call
cmp
jb
add
nop
nop
nop
nop
nop
cmp
nop
nop
nop
nop
nop
jb
add
cmp
jae
add
test
mov
je
lea
nop
nop
nop
nop
nop
sub
or
mov
xor
shr
mov
sub
mov
mov
nop
nop
nop
nop
nop
add
sub
jne
mov
mov
nop
nop
nop
nop
nop
dec
add
mov
sub
mov
xor
or
mov
movl
nop
nop
nop
nop
nop
jmp
mov
mov
add
add
mov
movl
mov
nop
nop
nop
nop
nop
cmpl
je
pop
ror
mov
sub
nop
nop
nop
nop
nop
pop
pop
or
xor
mov
pop
ret
add
xor
add
and
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsl
jae
inc
jb
jbe
jb
or
dec
jo
outsb
inc
jb
jbe
jb
add
add
push
popa
je
push
gs
outsl
jbe
inc
jb
jae
add
add
je
inc
imul
inc
outsl
insl
jo
outsb
outsb
je
add
push
add
gs
je
inc
imul
js
je
jb
arpl
jae
mov
je
push
add
filds
inc
gs
imul
je
adc
add
add
add
add
rolb
add
add
add
add
add
mov
add
add
add
xor
loopne
les
lret
xor
cmp
cmp
pop
aaa
xor
aaa
into
aaa
mov
mov
cmp
xor
xor
xor
xor
cmp
ds
ds
ds
aas
loop
repz
xor
xor
popa
cmp
dec
xor
aaa
xchg
aaa
scas
cmp
arpl
xor
xor
add
add
add
xor
xor
xor
xor
sub
mov
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
cwtl
inc
mov
sub
das
jae
push
jle
sbb
add
inc
and
sub
mov
push
fdivrl
xchg
xor
movsb
nop
aad
push
cld
xorb
pop
imul
and
jge
ljmp
mov
cli
mov
jne
fcoml
pop
inc
pop
andl
add
lods
sbb
imull
mov
push
mov
pop
or
pop
fsubr
ja
jmp
imul
or
filds
mov
aad
movsb
mov
sub
adc
aam
adc
sbb
pusha
lret
pop
das
inc
push
sub
test
int3
or
dec
addb
aad
mov
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
mov
sub
push
add
nop
or
push
sbb
aaa
ds
push
jb
repnz
int3
or
jp
in
push
xchg
adc
push
add
mov
cmp
fistpll
pop
inc
fnstsw
cmpsb
popa
sbb
js
dec
ja
sbb
push
push
inc
les
pavgw
add
pushl
mov
mov
and
add
std
lea
imul
mov
aas
clc
repnz
lods
rol
add
testb
mov
dec
xor
into
std
lret
out
gs
les
fisubrs
ss
mov
test
ss
insb
fidivrl
add
repnz
cwtl
je
and
aas
je
out
inc
push
fistpll
addr16
aaa
jns
cmpsb
cmc
add
clc
div
nop
jg
fisubrs
xlat
fildl
sub
mov
inc
add
mov
js
xchg
nop
out
push
mov
roll
mov
push
add
shr
mov
cmp
iret
dec
mov
cmp
pop
or
xor
inc
mov
in
sbb
cmc
mov
xor
add
adc
and
adc
inc
inc
mov
dec
sahf
xchg
mov
pop
fisubrl
pop
xor
or
gs
jbe
mov
sbb
sub
mov
push
sbb
outsb
and
sbb
xor
loope
xor
ja
lcall
loope
stc
add
mov
xchg
ret
jns
jo
cmpb
dec
inc
or
sub
pop
mov
mov
popf
cs
fs
.byte
cwtl
daa
test
