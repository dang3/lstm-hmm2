mov
mov
or
mov
mov
mov
mov
jmp
push
mov
mov
mov
add
add
mov
jmp
push
push
push
jmp
mov
mov
movb
jmp
add
add
insb
and
sub
inc
mov
and
sub
mov
add
sub
and
sub
mov
push
push
jmp
and
shr
xor
shl
mov
sub
cmpl
jmp
cmpl
je
push
push
push
lea
or
mov
mov
add
push
jmp
je
jmp
lea
mov
and
mov
sub
cmpw
jne
xor
mov
jmp
add
mov
lea
xor
sub
or
mov
shr
and
lea
xor
inc
and
mov
mov
jmp
ror
and
sub
mov
add
add
xor
cmp
mov
jmp
push
jmp
dec
jmp
pop
ret
call
push
pop
push
xorl
push
jmp
subl
push
push
jmp
jmp
nop
call
call
xorl
call
mov
dec
inc
shl
mov
jmp
pop
sbb
mov
xor
and
cmp
sete
mov
ret
add
add
add
leave
sub
test
jne
sub
sub
and
and
mov
mov
movzbl
jmp
movzwl
jmp
movl
jmp
jns
movzwl
push
jmp
mov
lea
push
push
call
jmp
mov
push
add
add
adc
push
jmp
pop
nop
push
push
pop
call
pop
xorl
push
jmp
pop
dec
xorl
call
push
jmp
jmp
push
call
subl
call
lea
jmp
test
jo
pop
and
mov
jmp
add
mov
or
mov
add
test
jne
jmp
push
lea
push
movb
jmp
and
jmp
add
jmp
add
insb
and
mov
sub
test
jne
push
jmp
int3
push
push
jmp
nop
jmp
inc
leave
xorl
call
rol
mov
push
jmp
push
lea
ror
dec
ror
and
ror
mov
sub
test
jne
sub
xor
mov
movzbl
jmp
dec
mov
jmp
lea
je
push
push
ror
mov
mov
sub
shr
test
lea
jmp
ret
jmp
add
add
lds
mov
jmp
add
inc
xor
sub
mov
sub
push
push
or
or
mov
test
jmp
mov
jmp
push
nop
jmp
pushl
call
add
pusha
mov
jmp
mov
movb
mov
movb
call
cmp
push
jmp
movl
movl
call
jmp
adcl
call
call
ret
leave
subl
pushl
call
pushl
ret
jmp
lea
addl
call
mov
ror
inc
mov
rol
and
and
add
mov
test
jne
add
jmp
mov
mov
jmp
add
xor
mov
test
jne
jmp
mov
jmp
add
add
pop
add
push
push
mov
jmp
mov
mov
jmp
cmpl
jne
cmpb
jne
jmp
call
ret
add
add
add
je
add
movl
jmp
jle
sub
sub
mov
jmp
add
add
add
add
sub
jne
jmp
add
jecxz
mov
test
je
mov
add
jmp
je
add
ret
mov
and
cmpw
jmp
mov
mov
jmp
mov
add
add
push
jmp
ret
mov
xor
test
je
movsbl
rol
jmp
movzwl
add
or
add
mov
lea
jmp
add
add
push
jmp
push
mov
jmp
lea
ror
rol
ror
mov
shr
jmp
cmp
je
add
jmp
jmp
mov
or
and
and
shr
mov
mov
jmp
add
cmpl
jne
pop
pop
pop
mov
pop
ret
add
add
add
js
and
jle
sub
and
mov
or
xor
sub
mov
shr
lea
lea
cltd
and
add
jmp
cmpl
jne
jmp
add
push
xor
sub
mov
sub
jmp
nop
nop
inc
mov
nop
jmp
call
inc
xor
mov
cmp
je
or
xor
mov
or
mov
mov
test
jne
or
ror
mov
jmp
mov
jne
xor
ret
test
jne
jmp
jmp
lea
nop
movzwl
ror
add
ror
mov
and
cmp
jne
jmp
call
jmp
sub
test
mov
mov
mov
movl
jle
add
jmp
mov
movb
movb
movb
call
test
jmp
add
add
add
mov
jmp
mov
jle
jmp
shl
rol
sub
or
mov
mov
add
jne
add
jmp
mov
push
shr
mov
push
mov
mov
jmp
call
popa
jmp
mov
ret
add
add
add
add
add
cmp
jmp
and
add
test
jne
mov
mov
pop
ret
add
add
add
add
add
add
insb
and
mov
or
xor
and
mov
sub
mov
jmp
mov
dec
add
add
xor
shr
mov
lea
add
inc
ror
add
or
mov
add
test
je
jmp
add
push
jmp
jmp
push
push
inc
leave
xorl
push
jmp
push
leave
push
push
call
addl
push
jmp
int3
nop
call
push
xorl
call
test
jmp
add
mov
jmp
cmp
jmp
add
add
add
pop
add
pop
add
add
mov
call
call
jmp
mov
movb
movb
mov
movb
jmp
mov
xor
jmp
lea
push
movb
jmp
jle
jmp
add
jo
add
jmp
add
add
add
rcl
sub
and
mov
sub
test
jne
movzbl
jmp
daa
enter
add
pop
pop
and
mov
shr
and
add
test
je
jmp
mov
and
sub
inc
shr
mov
add
jmp
sar
test
jle
rol
mov
xor
or
shr
mov
test
jmp
or
add
and
shl
mov
jmp
mov
inc
add
add
pop
and
jne
addl
pop
add
ret
jmp
movsl
mov
add
add
int3
and
rol
add
and
mov
pop
ret
add
add
add
test
jmp
subl
pop
add
ret
add
add
add
shll
add
or
mov
sub
test
mov
jne
movzbl
add
add
mov
mov
mov
jmp
negl
std
lcall
shr
outsl
jne
mov
xor
add
ror
dec
sub
mov
shr
mov
jmp
repz
mov
sub
or
or
mov
sub
sub
sub
mov
jne
sub
jmp
jne
add
jmp
mov
sub
or
add
rol
and
mov
shr
and
jmp
mov
pop
shl
add
and
mov
pop
jmp
insb
xchg
sub
inc
dec
mov
mov
rep
movzwl
sub
rol
and
inc
add
mov
add
add
sub
add
jmp
dec
cwtl
loope
pop
pop
mov
pop
ret
pop
mov
jmp
rorb
push
and
je
shr
rol
mov
sub
test
jmp
ret
and
add
xor
mov
mov
movzwl
xor
sub
or
mov
mov
jmp
in
push
cmp
mov
mov
jl
or
mov
jmp
pop
ret
mov
ret
add
add
add
or
sub
rol
mov
push
jmp
leave
jmp
call
call
push
push
push
dec
subl
call
jmp
mov
jne
movzbl
jmp
pop
add
pop
xor
rol
mov
pop
ret
add
add
add
test
rorb
mov
add
add
rorb
xor
sub
mov
add
add
jmp
xlat
xchg
pop
mov
and
inc
xor
mov
add
sub
mov
lea
push
push
jmp
jmp
call
call
xorl
jmp
mov
cwtl
sub
jmp
push
push
jmp
mov
add
pop
pop
and
or
or
dec
sub
mov
shr
and
add
test
je
jmp
out
lret
mov
push
mov
push
add
jmp
cmp
call
push
jmp
dec
call
call
xorl
jmp
xor
movl
mov
or
and
add
mov
sub
test
jne
movzbl
add
jmp
mov
or
mov
call
add
rol
or
xor
mov
call
jmp
jne
test
mov
jle
dec
sub
shl
mov
lea
jmp
rclb
and
adc
inc
cld
ror
mov
jmp
mov
call
push
jmp
push
ret
push
nop
subl
mov
call
push
jmp
pop
push
dec
xorl
jmp
lea
add
and
mov
jmp
push
jmp
inc
call
push
call
addl
push
jmp
nop
inc
leave
call
push
int3
nop
subl
push
call
inc
mov
and
and
mov
call
sub
mov
mov
call
jmp
or
negb
rclb
and
or
shl
mov
jmp
aam
pop
mov
call
push
jmp
dec
jmp
inc
push
push
inc
addl
mov
call
add
jmp
jbe
jns
call
add
subl
lea
jne
test
mov
jmp
movl
lea
call
mov
or
dec
shl
mov
jmp
push
pop
lds
add
add
mov
jo
add
call
push
jmp
call
call
pop
dec
push
xorl
push
jmp
jmp
dec
subl
push
jmp
call
pop
call
inc
xorl
call
test
je
jmp
xchg
add
add
xor
mov
mov
mov
jmp
xchg
adc
ret
pop
pop
mov
pop
mov
mov
pop
ret
add
add
add
shlb
aaa
push
add
mov
sub
mov
mov
add
jmp
or
mov
cmp
jne
jmp
imul
std
lcall
pop
dec
and
shl
mov
pop
ret
add
add
add
fwait
add
add
add
add
jmp
movzbl
rol
sub
mov
sub
mov
and
add
add
jmp
ficoml
out
mov
add
pop
mov
mov
pop
jmp
sub
pop
shr
mov
mov
je
test
je
mov
xor
sub
or
mov
jmp
hlt
mov
add
inc
add
shr
shr
mov
pop
ret
add
add
add
inc
and
jmp
pop
frstor
out
add
scas
imul
jmp
rol
rol
mov
and
mov
jmp
addb
mov
movl
jmp
aas
sbb
aam
add
movl
jmp
popf
dec
imul
movl
jmp
lea
call
cmpl
jmp
inc
inc
mov
add
cmp
jne
call
test
mov
je
jmp
or
rol
rol
mov
sub
add
sub
jmp
call
mov
jne
mov
jmp
jmp
jmp
mov
call
dec
add
add
add
or
xor
loope
lret
and
movzbl
shl
add
add
jmp
das
imul
jl
sbb
cmc
add
and
mov
mov
mov
call
cmp
jb
add
cmp
jmp
faddp
mov
addb
add
add
cmp
jae
add
test
mov
jmp
cmp
ss
lea
mov
mov
xor
mov
add
mov
sub
mov
jmp
hlt
aad
mov
add
sub
jne
mov
mov
shl
and
dec
mov
xor
mov
sub
sub
mov
mov
jmp
sub
bound
xor
sub
or
and
mov
movl
jmp
mov
jmp
ret
push
or
jmp
in
xorl
dec
inc
jle
je
sbb
inc
and
add
add
jmp
adc
mov
cmpl
je
pop
and
or
sub
mov
sub
pop
pop
jmp
daa
mov
xor
and
mov
add
dec
mov
pop
ret
add
push
popa
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
push
popa
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
add
add
add
inc
insb
outsl
jae
inc
jb
jbe
jb
or
dec
jo
outsb
inc
jb
jbe
jb
add
add
push
popa
je
push
outsb
popa
insl
gs
js
outsb
jae
outsl
outsb
inc
add
imul
push
gs
outsl
jbe
inc
jb
jae
add
add
je
inc
imul
inc
outsl
insl
jo
outsb
outsb
je
add
push
add
gs
je
inc
imul
js
je
jb
arpl
jae
mov
je
push
add
filds
inc
gs
imul
je
adc
add
add
add
add
xor
add
add
add
add
add
sbb
add
add
add
xor
fnstenv
dec
cmp
adc
sbb
add
add
xchg
aaa
sub
cmp
xorl
adc
ss
ss
sarb
in
aas
inc
ss
xor
xor
xor
cmp
jge
je
or
xor
cmp
aaa
sbb
es
sub
add
add
add
xor
adc
mov
test
xor
add
add
sub
mov
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
cwtl
inc
mov
sub
das
jae
push
jle
sbb
add
inc
and
sub
mov
push
fdivrl
xchg
xor
movsb
nop
aad
push
cld
xorb
pop
imul
and
jge
ljmp
mov
cli
mov
jne
fcoml
pop
inc
pop
andl
add
lods
sbb
imull
mov
push
mov
pop
or
pop
fsubr
ja
jmp
imul
or
filds
mov
aad
movsb
mov
sub
adc
aam
adc
sbb
pusha
lret
pop
das
inc
push
sub
test
int3
or
dec
addb
aad
mov
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
mov
sub
push
add
nop
or
push
sbb
aaa
ds
push
jb
repnz
int3
or
jp
in
push
xchg
adc
push
add
mov
cmp
fistpll
pop
inc
fnstsw
cmpsb
popa
sbb
js
dec
ja
sbb
push
push
inc
les
pavgw
add
pushl
mov
mov
and
add
std
lea
imul
mov
aas
clc
repnz
lods
rol
add
testb
mov
dec
xor
into
std
lret
out
gs
les
fisubrs
ss
mov
test
ss
insb
fidivrl
add
roll
ret
push
cmpl
stos
jecxz
adcb
in
in
cltd
lahf
popf
fists
push
mov
mov
addb
mov
cmpsl
push
xchg
dec
lds
shlb
push
fs
and
testl
mov
iret
cs
and
loopne
push
movsb
pop
adcl
pop
test
fldenv
popa
add
push
popa
popa
push
ret
movsb
inc
adc
ja
inc
test
xor
imul
sti
jne
inc
pop
cld
mov
int3
cmp
cmp
push
push
mov
inc
dec
inc
or
rorl
call
adc
je
and
mov
push
lahf
or
jbe
movsb
adc
mov
fidivl
or
popa
xor
ja
lcall
loope
stc
add
mov
xchg
ret
jns
jo
.byte
