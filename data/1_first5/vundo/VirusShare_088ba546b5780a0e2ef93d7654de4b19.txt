ret
ret
push
mov
and
xor
and
add
and
dec
ror
pop
dec
and
dec
mov
jmp
push
mov
jmp
push
xor
mov
jmp
sub
mov
jmp
push
int
in
and
xchg
jmp
test
jmp
push
push
push
push
push
push
je
push
xchg
call
nop
movl
xchg
push
xchg
pushl
xchg
call
nop
ret
jmp
push
push
push
push
push
push
pushl
push
pop
call
mov
jmp
inc
and
mov
push
mov
push
xchg
push
xchg
push
nop
add
nop
push
addr16
call
xchg
jmp
push
xchg
push
xchg
push
xchg
push
addr16
add
nop
jmp
test
jmp
push
push
push
push
push
lea
jmp
push
push
push
push
push
push
push
or
pop
push
push
push
push
push
imul
sbb
pop
rol
ror
inc
mov
movzbl
jmp
push
push
push
push
jmp
and
nop
jmp
pusha
negl
jmp
push
or
or
or
mov
inc
mov
jmp
push
addr16
push
mov
push
mov
inc
shl
mov
mov
jmp
mov
mov
lea
jmp
push
push
push
push
mov
mov
xchg
mov
xchg
jmp
push
push
lds
and
in
in
push
xchg
push
xchg
push
xchg
jmp
xor
mov
jmp
jmp
and
mov
jmp
push
jmp
sub
mov
jmp
push
jmp
push
push
push
push
push
test
mov
jmp
rorb
mov
xchg
mov
nop
add
or
mov
andl
xchg
push
mov
jmp
lea
jmp
push
push
push
push
push
push
xchg
push
push
pop
jmp
dec
push
push
sub
mov
jmp
push
push
mov
xor
mov
push
xchg
push
xchg
push
addr16
push
nop
push
xchg
jmp
push
xchg
call
nop
add
and
add
jmp
push
push
xor
mov
push
xchg
push
mov
push
xchg
jmp
call
test
jmp
push
push
push
push
push
push
push
nop
nop
je
xor
mov
jmp
push
mov
jmp
mov
nop
mov
mov
mov
addr16
mov
addr16
jmp
mov
mov
push
xchg
jmp
push
push
xchg
ror
and
xor
mov
ror
mov
push
mov
push
xchg
cmpl
xchg
push
jmp
push
push
push
push
push
push
push
adc
push
push
push
dec
incl
mov
mov
andl
mov
push
xchg
xor
nop
jmp
push
push
pop
push
mov
jmp
shl
ror
mov
mov
pop
add
mov
push
mov
popl
addr16
pushl
nop
jmp
push
mov
sub
mov
or
mov
jmp
push
sub
add
add
mov
push
mov
push
nop
push
addr16
jmp
call
xchg
mov
mov
mov
mov
mov
push
pop
or
add
add
mov
test
jmp
push
push
push
push
push
push
jne
jmp
push
mov
push
nop
nop
nop
nop
nop
nop
jmp
push
push
push
push
add
push
push
nop
xor
or
mov
sub
nop
jmp
push
nop
lea
jmp
push
push
push
push
push
pop
push
xchg
pushl
xchg
pushl
mov
call
addr16
leave
jmp
push
push
push
push
push
ret
jmp
push
push
push
inc
addr16
call
mov
lea
jmp
push
push
push
push
push
push
sbb
jmp
rolb
push
push
push
push
jne
and
and
or
and
mov
ror
shl
pop
ret
jmp
push
push
push
push
push
push
xchg
push
xchg
jmp
mov
sub
and
ror
mov
push
inc
xor
sub
push
shr
and
and
pop
mov
xor
dec
test
jne
pop
lea
mov
call
test
jmp
push
push
push
push
push
add
push
mov
jmp
add
or
inc
mov
or
and
add
add
and
xor
dec
mov
ror
xor
rol
dec
add
mov
add
mov
movzwl
jmp
push
push
push
push
push
push
push
mov
shl
inc
pop
cmp
nop
jmp
nop
jmp
push
push
push
push
push
jmp
inc
push
pop
jmp
push
insb
and
or
mov
mov
sub
xchg
pushl
shr
and
sub
rol
or
pop
jmp
inc
xchg
mov
nop
jmp
xor
sub
or
mov
xor
sub
or
mov
shr
jmp
push
push
push
push
push
push
add
mov
mov
xchg
jmp
push
xchg
push
dec
mov
or
add
add
add
and
add
sub
shr
xor
rol
dec
test
jne
pop
add
mov
call
jmp
push
xchg
jmp
push
xchg
push
mov
xor
xchg
push
xor
and
push
shr
push
sub
xor
mov
ror
pop
sub
mov
and
sub
or
dec
test
jne
pop
pop
call
test
jmp
push
push
push
push
push
push
push
xlat
add
add
popf
stc
jmp
jmp
inc
sub
mov
sub
sub
mov
xor
mov
add
xchg
movzwl
jmp
push
push
push
push
push
push
or
mov
movl
mov
shr
mov
inc
mov
shl
mov
shr
jmp
push
push
push
push
push
mov
and
xchg
mov
xchg
ret
jmp
push
push
push
push
and
movsl
add
xchg
call
mov
xor
rol
xor
rol
or
pop
jmp
push
push
popl
mov
and
shl
shr
xor
mov
and
and
mov
xor
or
and
add
jmp
push
xchg
lea
jmp
push
push
push
push
ljmp
xchg
push
mov
push
mov
sub
xor
and
and
and
mov
jmp
push
add
add
add
add
lret
and
pop
sub
and
xor
dec
pop
call
xchg
nop
jmp
push
push
push
push
push
push
push
push
push
push
cmpb
mov
nop
jmp
push
push
push
push
push
pop
add
nop
jmp
push
push
push
push
push
push
push
add
add
push
push
push
push
push
push
push
push
push
push
push
push
xchg
add
mov
push
nop
sar
jmp
push
push
push
push
notb
add
xor
add
jmp
push
push
push
push
push
add
add
fildl
jle
inc
and
xor
or
mov
mov
or
pop
jmp
jmp
shr
add
xor
xor
and
mov
shl
shl
rol
mov
mov
mov
nop
mov
xchg
mov
xchg
sub
mov
inc
or
xor
pop
cmp
mov
pop
jmp
push
push
push
push
push
push
push
add
add
loopne
shr
idiv
decl
mov
inc
add
mov
push
push
pop
inc
inc
mov
or
mov
call
xchg
inc
mov
ror
mov
jmp
rep
jmp
push
push
push
push
cmp
inc
arpl
jmp
and
add
add
pushl
xor
dec
dec
pop
jmp
mov
jmp
push
push
push
push
push
jmp
push
push
push
jmp
push
push
push
push
push
push
jmp
inc
xchg
ret
jmp
push
push
push
inc
pop
mov
shl
mov
pop
ret
jmp
push
push
push
push
push
push
push
push
add
add
shlb
adc
jmp
push
push
push
push
push
lds
call
xchg
or
add
pop
jmp
push
pop
push
call
test
jmp
push
push
push
push
push
test
or
shr
and
mov
inc
or
pop
push
xchg
and
mov
call
nop
jmp
mov
and
mov
sub
xchg
add
nop
cmpl
xchg
jmp
mov
jmp
push
push
push
jne
jmp
push
push
push
push
push
push
add
add
xchg
jmp
shr
shl
mov
mov
mov
inc
rol
or
mov
mov
addr16
jmp
push
push
pop
xor
sub
add
dec
mov
pop
cmp
mov
mov
jmp
push
push
push
push
push
push
push
add
add
mov
je
nop
jmp
push
push
push
push
push
push
add
and
mov
xor
shr
pop
add
nop
jmp
push
push
push
push
push
add
mov
or
mov
pusha
jmp
push
push
push
jmp
lea
jmp
push
push
push
push
push
push
push
call
push
push
je
jmp
test
jmp
push
push
push
push
push
jle
jmp
mov
dec
xor
pop
pushl
addr16
push
mov
pushl
nop
push
nop
call
mov
and
shl
and
pop
xor
shr
pop
jmp
je
push
mov
sub
rol
xor
mov
sub
nop
shr
jmp
push
push
push
push
push
shr
pop
push
push
push
push
push
push
push
add
mov
add
nop
jmp
mov
jmp
push
push
push
push
push
push
add
ret
add
mov
push
push
pop
call
mov
add
mov
jmp
call
xchg
test
jmp
push
push
push
je
call
xchg
test
jmp
push
push
push
push
push
push
jmp
shl
mov
mov
mov
xchg
andl
nop
add
xchg
jmp
leave
jmp
push
push
push
push
push
push
push
jmp
push
push
push
push
push
push
mov
call
xchg
or
or
shr
mov
jmp
lea
jmp
push
push
push
add
add
movzwl
jmp
push
push
push
push
or
ror
xor
mov
and
xchg
jmp
mov
addr16
xor
dec
sub
inc
mov
sub
mov
inc
mov
rep
jmp
push
push
push
push
push
push
push
movzwl
jmp
push
push
push
push
push
push
push
add
add
sbb
push
push
push
push
push
pop
lock
push
push
push
add
add
add
add
add
movl
xchg
call
xchg
popa
jmp
push
push
push
push
mov
pop
pusha
jmp
push
push
push
push
push
push
call
add
test
push
add
push
xchg
xor
push
pop
mov
pop
lea
jmp
push
push
push
or
add
lea
jmp
push
push
push
push
add
nop
jmp
cmp
xchg
jmp
incl
nop
add
mov
cmp
push
pop
jmp
mov
jmp
push
push
push
push
jbe
add
mov
jmp
pushl
mov
or
shl
mov
mov
pop
dec
or
xor
mov
mov
xchg
xor
mov
jmp
popa
jmp
push
push
push
push
inc
inc
add
jmp
sub
mov
xor
xor
add
and
add
call
push
pop
ret
jmp
push
push
push
push
push
push
push
in
call
dec
nop
lea
jmp
push
push
push
push
incl
push
push
push
push
add
test
jmp
push
push
push
push
push
push
jle
sub
and
sub
mov
sub
nop
sub
mov
dec
jmp
push
push
push
push
push
push
sar
decl
jmp
or
or
mov
add
or
sub
mov
rol
mov
mov
mov
add
xchg
add
mov
jmp
push
push
pop
push
and
xor
shr
ror
inc
pop
push
xchg
call
addr16
push
mov
jmp
jne
and
xchg
add
xchg
add
mov
jmp
mov
jmp
push
push
push
push
cmp
jmp
and
or
xor
mov
pushl
push
pop
dec
xor
add
or
sub
mov
or
shl
inc
and
shr
mov
jmp
add
nop
mov
xchg
jmp
mov
jmp
push
push
push
add
add
jno
dec
and
sub
xchg
jmp
add
mov
test
jmp
push
push
push
push
jmp
push
push
push
mov
inc
add
add
xor
pushl
or
pop
inc
mov
inc
xchg
decl
jmp
push
push
push
push
push
push
pop
sti
incl
inc
add
pop
jmp
add
xchg
call
mov
shl
xor
sub
pop
push
mov
pushl
nop
call
xchg
or
rol
mov
jmp
ror
sub
and
inc
mov
sub
or
and
add
and
mov
and
sub
mov
jmp
decl
jmp
push
push
push
push
push
push
push
cmp
call
out
out
xor
ja
test
jmp
push
push
push
push
push
push
push
jmp
push
push
push
push
push
push
add
dec
mov
add
push
pop
jmp
xor
mov
shl
mov
mov
nop
andl
xchg
add
mov
mov
mov
test
jmp
push
push
push
add
scas
and
fstps
mov
jo
inc
add
push
xchg
jmp
cmpl
push
pop
jne
inc
rol
or
mov
sub
pop
jmp
ror
mov
jmp
rep
jmp
push
push
push
sbb
push
jmp
push
push
push
push
push
push
nop
add
addr16
jmp
mov
nop
jmp
jmp
add
xchg
dec
jmp
push
push
push
push
push
push
test
incl
push
push
push
push
push
jmp
push
push
push
push
push
push
add
add
into
jmp
push
push
push
jmp
je
mov
xchg
xor
mov
movsbl
jmp
push
push
push
push
push
push
rol
jmp
push
push
push
push
push
enter
movsl
add
add
add
nop
incl
mov
jmp
rol
mov
movzbl
jmp
push
push
push
push
push
sub
add
add
nop
dec
jmp
push
push
push
push
push
call
into
add
pop
or
sub
pop
leave
jmp
push
push
push
push
push
jmp
push
push
push
push
push
push
incl
push
pop
shl
sub
or
and
mov
mov
mov
test
jmp
push
push
push
push
adc
push
push
push
push
incl
ret
dec
ror
mov
jmp
push
xchg
push
or
shr
or
mov
sub
sub
xor
xor
ror
mov
add
and
or
dec
test
jne
pop
push
sub
and
pop
mov
call
cmp
mov
jne
rorl
jmp
push
push
push
testb
push
push
push
push
push
jne
or
sub
dec
shr
sub
pop
jmp
mov
or
sub
ror
mov
mov
mov
add
xchg
rol
xor
pop
push
popl
or
shr
xor
sub
add
pop
leave
jmp
push
push
push
push
push
push
ret
jmp
push
push
push
push
push
push
addr16
call
xchg
mov
xchg
jmp
cmp
nop
mov
jmp
push
push
push
push
push
push
add
cmp
mov
je
jmp
sub
sub
add
pop
or
xor
or
rol
pop
leave
jmp
push
push
push
push
push
jmp
push
push
push
push
add
mov
xor
mov
sub
rol
mov
or
or
and
add
rep
jmp
push
push
push
shr
add
add
mov
pushl
shl
and
and
add
add
pop
pushl
mov
pushl
or
add
ror
rol
pop
inc
sub
or
mov
add
mov
call
xchg
jmp
incl
xchg
xor
xchg
inc
mov
jmp
incl
push
pop
xor
add
ror
or
xor
mov
cmp
xchg
jl
xor
xchg
jmp
sub
mov
movzwl
jmp
push
push
push
push
push
push
push
add
call
nop
push
nop
call
addr16
jmp
xor
mov
ror
mov
pop
push
xchg
pushl
mov
call
mov
jmp
dec
ror
xor
dec
add
mov
and
xchg
inc
xchg
inc
mov
shr
jmp
push
push
push
push
push
push
test
add
add
push
push
push
push
push
test
add
or
or
and
shr
shr
mov
nop
nop
nop
nop
nop
mov
xor
xor
mov
sub
xchg
jmp
mov
nop
add
addr16
and
pop
add
and
pop
rol
pop
leave
jmp
push
push
push
push
push
push
push
push
push
push
push
push
push
lret
insb
mov
sub
mov
test
jmp
push
push
push
push
imul
add
inc
mov
mov
mov
add
xchg
sub
mov
jmp
jmp
es
add
or
xor
mov
and
sub
sub
mov
mov
nop
call
addr16
mov
push
pop
ror
add
sub
xor
sub
mov
jmp
fwait
pushf
sahf
and
mov
jmp
rol
rol
or
mov
pushl
rol
pop
rep
jmp
push
push
push
push
push
jne
push
pop
call
xchg
push
xchg
call
xchg
xor
ror
add
shl
add
mov
shr
mov
jmp
testb
inc
and
nop
dec
nop
mov
jmp
push
push
jne
jmp
mov
xchg
jmp
sbb
sub
mov
jmp
test
jmp
push
push
push
push
push
add
pushl
or
rol
ror
xor
pop
xor
inc
mov
add
push
pop
sub
xchg
jmp
add
or
sub
ror
add
mov
jmp
mov
mov
jmp
call
mov
test
jmp
push
push
push
push
push
push
push
add
shr
jmp
push
push
push
push
push
push
jmp
push
push
push
push
push
pop
or
sbb
push
push
push
push
push
push
add
sub
xchg
shr
jmp
push
push
push
push
push
push
push
push
push
push
pop
or
sbb
push
push
push
push
push
pop
hlt
jmp
push
push
push
push
push
add
add
iret
dec
ror
sub
rol
mov
jmp
jne
cmp
xchg
jne
lea
jmp
push
push
push
push
push
incl
and
push
push
push
push
push
push
je
jmp
xor
mov
jmp
push
push
push
push
push
push
push
add
movzwl
jmp
push
push
push
or
add
mov
and
xchg
cmp
addr16
jne
and
xchg
jmp
mov
mov
sub
xchg
mov
add
inc
xor
mov
mov
mov
xchg
incl
nop
dec
push
pop
mov
jmp
push
push
jne
jmp
jmp
gs
jle
mov
mov
and
sub
xor
xor
mov
movzwl
jmp
push
push
push
push
mov
shl
shr
inc
ror
mov
and
nop
cmp
xchg
jne
and
addr16
jmp
inc
subb
or
add
xchg
jmp
xor
mov
jmp
dec
nop
dec
xchg
sub
inc
or
and
or
mov
movzbl
jmp
push
push
push
push
push
push
or
add
add
xchg
push
shl
dec
or
sub
pop
add
addl
addr16
decl
jmp
push
push
push
push
test
std
incl
inc
add
cmpl
xchg
jne
call
xchg
jmp
ret
push
fld
loopne
jmp
push
push
add
xchg
incl
nop
lea
jmp
push
push
push
ror
sub
mov
call
xchg
cmp
nop
jmp
xchg
add
xchg
and
sub
and
mov
jmp
mov
addr16
mov
xchg
mov
mov
shr
and
mov
push
mov
sub
rol
ror
mov
call
addr16
jmp
jb
inc
mov
cmp
mov
jb
inc
xchg
cmp
push
pop
nop
nop
nop
nop
nop
jae
inc
addr16
inc
nop
test
jmp
push
push
push
push
push
push
je
dec
mov
and
xor
mov
shl
mov
jmp
scas
lcall
nop
decl
jmp
push
push
push
push
std
incl
inc
add
leave
cmpl
nop
jmp
je
roll
nop
mov
shr
rol
pop
mov
nop
push
mov
mov
pop
add
xchg
push
nop
popl
mov
jmp
pop
cwtl
int3
sub
nop
mov
nop
jmp
jne
call
mov
mov
nop
mov
mov
mov
nop
sub
mov
push
push
pop
and
mov
call
nop
jmp
loopne
pushl
xchg
shr
rol
and
inc
mov
call
push
pop
xor
sub
mov
test
jmp
push
push
push
push
push
push
adc
push
push
push
push
inc
clc
push
pop
push
nop
and
mov
call
nop
rol
shr
mov
add
mov
test
jmp
push
push
push
push
push
push
push
punpckhbw
push
push
push
std
xchg
push
push
push
push
push
jg
add
incl
xchg
dec
nop
mov
jmp
push
push
push
cmp
decl
in
mulb
inc
xchg
jmp
and
jmp
push
push
push
pop
add
add
sar
mov
add
push
pop
jmp
xor
ror
mov
mov
add
mov
push
xchg
call
push
pop
jmp
or
je
jmp
pop
xor
jmp
rol
and
xor
ror
mov
sub
ror
mov
mov
nop
incl
xchg
incl
xchg
mov
mov
jmp
out
ljmp
inc
hlt
jmp
push
push
push
push
push
je
shr
xor
inc
sub
sub
mov
jmp
sub
mov
xor
or
rol
and
add
add
nop
jmp
mov
mov
add
xchg
push
mov
jmp
xor
addr16
cmpl
push
pop
je
shr
add
mov
or
pop
sub
xchg
nop
nop
nop
nop
nop
mov
pop
or
add
and
dec
mov
shr
xor
sub
or
pop
ret
jmp
push
push
push
push
push
push
push
push
push
push
push
add
decl
cwtl
inc
inc
add
enter
stos
xor
call
ret
fistpl
sub
mov
add
mov
jmp
testb
xchg
cmp
xchg
mov
jmp
push
push
push
push
push
push
add
inc
add
ror
mov
dec
mov
test
jmp
push
push
push
push
push
add
add
sub
xor
inc
mov
jmp
loopne
xchg
add
addr16
jmp
jmp
push
rolb
cmpsl
adc
add
shr
or
or
mov
mov
add
nop
add
push
pop
jmp
jns
movzwl
jmp
push
push
push
add
pushl
shl
add
inc
pop
jmp
lods
lret
imul
inc
add
add
daa
add
add
xchg
add
nop
push
xchg
pushl
addr16
call
xchg
mov
xchg
add
mov
jmp
add
jmp
push
push
push
jmp
mov
add
and
mov
shr
mov
add
push
pop
add
addr16
jmp
mov
mov
sub
and
mov
or
mov
jmp
jnp
les
pushl
xchg
call
push
pop
mov
mov
add
xchg
add
nop
jmp
jne
rolb
push
push
push
jne
add
nop
cmpl
xchg
jne
call
nop
jmp
stos
shll
inc
and
mov
test
jmp
push
push
push
jle
inc
or
and
mov
ror
sub
mov
add
mov
mov
add
add
mov
xchg
nop
nop
nop
nop
nop
cmp
xchg
jne
xor
and
and
add
add
addr16
add
sub
and
pop
mov
mov
jmp
jne
add
mov
cmpl
addr16
jne
call
xchg
mov
mov
and
xor
mov
rol
mov
nop
nop
nop
nop
nop
or
sub
pop
and
or
shr
and
shr
pop
shl
mov
xor
pop
mov
xchg
cmp
xchg
jne
mov
inc
and
or
sub
and
add
add
xchg
jmp
dec
cmp
add
sub
sub
mov
add
mov
shl
pop
and
mov
dec
shl
pop
leave
jmp
push
push
push
sbb
push
push
push
push
push
push
push
sbb
sar
cwtl
inc
inc
add
rol
sub
xor
pop
add
mov
leave
jmp
push
push
push
push
push
jmp
push
push
push
push
push
add
es
in
idiv
xchg
mov
mov
inc
jae
xchg
adc
cmp
inc
jecxz
dec
in
scas
mov
data16
mov
sub
dec
and
daa
xchg
inc
mov
jno
and
nop
mov
jbe
xor
pop
lea
xor
sub
dec
xor
scas
push
jecxz
sbb
push
into
je
mov
andl
cmp
shlb
adc
jl
inc
dec
push
jb
inc
add
cmpsb
std
jne
nop
sahf
insb
inc
or
out
out
mov
lods
testb
out
fldl
ret
dec
xor
filds
mov
in
dec
mov
ja
lahf
xchg
dec
pop
out
push
addr16
cmpsl
dec
fwait
jl
repz
popf
pop
call
pop
and
sar
lcall
mov
fstpt
xor
arpl
rol
sbb
xchg
and
add
sub
jo
pusha
pop
and
outsb
in
cmp
xchg
mov
fwait
ja
dec
cmp
mov
mov
nop
mov
lret
xchg
or
testb
cmp
dec
loopne
cld
test
movsl
adc
push
aad
idivb
lea
jo
pop
push
xor
ret
lods
push
adc
mov
fistpl
stos
and
mov
xorb
inc
loop
xor
mov
lahf
xor
mov
mov
pusha
mov
scas
in
mov
and
mov
je
leave
pop
subps
jnp
movsl
clc
sub
dec
inc
xor
mov
dec
mov
adc
xorl
test
and
cmpsb
and
js
adc
fcomip
das
xor
sub
mov
cli
jns
cwtl
sarl
dec
adc
lret
xor
cmp
mov
mov
sbb
je
add
dec
ret
push
pop
mull
jns
jge
nop
aad
and
loopne
add
das
cmp
xlat
outsb
pop
sbb
pop
and
ljmp
pushf
scas
lods
push
fs
ret
test
jle
out
mov
adcl
and
xchg
jecxz
push
testl
adc
lahf
movsl
push
out
sub
mov
fs
bound
pop
mov
add
mov
push
insl
mov
outsb
xchg
pushl
lret
xchg
push
outsb
xchg
icebp
and
lds
push
in
fbstp
rcr
aaa
xchg
sub
loope
push
inc
jno
loope
in
jae
cltd
cs
fwait
pop
ret
test
add
dec
imul
lret
cltd
adc
jmp
clc
sub
nop
mov
xchg
mov
repnz
iret
and
inc
lds
or
push
cmp
add
mov
and
addb
fs
in
faddp
outsb
and
dec
insb
cmp
xor
testl
arpl
std
inc
and
jbe
int
shl
and
and
mov
adc
jb
imul
ja
loop
adc
call
sbb
mov
cwtl
add
nop
into
rorl
pop
rcll
sub
adc
test
sub
add
pop
sub
shrl
in
inc
push
pcmpgtw
out
mov
filds
mov
dec
stos
clc
sbb
pop
pop
cmp
or
sub
add
stos
push
testb
outsb
fbld
dec
mov
pop
sbb
mov
into
imul
pushf
arpl
xchg
mov
clc
jbe
adcl
lcall
or
data16
out
fisubs
push
push
data16
shll
cmpl
mov
mov
test
and
add
sahf
jg
mov
orb
rclb
or
clc
mov
ret
rolb
fimuls
cs
daa
mov
shl
jge
gs
mov
dec
xchg
lock
xchg
int3
xchg
cmp
adc
sahf
orb
mov
lock
out
es
and
sbb
imul
pop
sbb
xchg
scas
clc
cmp
in
xlat
cs
lds
pop
xchg
cltd
push
scas
hlt
or
lret
adc
jp
cwtl
sub
mov
gs
enter
jno
movsb
jne
repz
mov
aaa
jns
jmp
cwtl
add
xchg
mov
insb
or
jp
pop
popa
nop
outsl
test
xchg
mov
xor
pop
xchg
mov
sbb
jb
adc
lcall
lds
cmp
xor
hlt
inc
divb
mov
cmp
rclb
int3
add
mov
jne
and
shll
push
mov
lea
pop
sub
xor
outsb
fdivs
mov
into
xchg
push
les
ds
test
xchg
fbld
repnz
xlat
xchg
xlat
fwait
sti
test
scas
add
in
mov
jecxz
and
pop
fs
cmp
lcall
ljmp
test
insb
dec
sarl
lret
push
sti
or
rcll
out
cmp
mov
jb
mov
js
nop
push
mov
loop
cltd
mov
pop
fisubl
dec
adc
aaa
mov
fdivrp
insl
push
jnp
mov
enter
insb
cmp
push
negl
ret
adc
repnz
daa
push
sbb
mov
out
jbe
loope
mov
sub
js
icebp
add
inc
in
jge
repz
mulb
jle
insl
fwait
int3
loope
jg
mov
iret
pop
in
in
je
xchg
aas
aam
das
mov
loope
xchg
mov
loop
jno
pop
call
pop
or
jns
sbb
sbb
xchg
push
outsb
addr16
sbb
sbb
into
loopne
mov
jecxz
push
imul
shr
js
push
call
push
dec
jb
and
cltd
dec
loopne
and
xor
xor
leave
sti
arpl
xor
dec
sub
fldenv
xchg
xor
and
icebp
push
xchg
fsubrp
xchg
call
repnz
js
inc
nop
ret
arpl
sbb
push
jmp
scas
test
adc
pushf
add
cmpl
fbstp
add
adc
dec
fidivrl
imul
cmpsb
test
or
inc
aad
adc
xchg
outsl
leave
or
push
and
xchg
sub
cltd
inc
ds
lods
arpl
aam
cmp
in
dec
lea
test
inc
sbb
fs
sbb
scas
movsl
mov
push
or
orb
pop
mov
inc
cmpsb
arpl
loop
lods
fwait
testl
add
cmpsl
lds
or
pop
mov
jge
add
cmp
jl
mov
loop
and
aaa
sbb
imul
std
jae
test
add
test
jl
test
addr16
mov
add
cmpsl
lods
sti
push
imul
dec
pop
lret
jg
adc
stos
in
lock
ds
mov
clc
pop
daa
jecxz
mov
outsb
push
popa
add
insl
xor
shll
add
or
es
sti
imul
je
jg
pushf
lret
imulb
xchg
fmull
push
fnstenv
and
xor
ss
jnp
xchg
add
cmp
outsl
clc
repnz
iret
imul
push
and
mov
adc
mov
scas
inc
add
dec
add
jo
mov
cmc
out
adc
shlb
and
push
sub
fstpt
jg
cwtl
fdivp
and
adc
pop
push
dec
sbb
sub
into
bnd
ja
cs
add
push
das
push
sbb
lahf
adc
inc
ret
jae
cmpsb
push
mov
inc
in
nop
les
sti
mov
inc
loope
or
add
mov
jl
add
lds
cmp
xchg
xor
nop
lret
cmc
fwait
jae
cld
ficoml
push
repnz
adc
fwait
aad
sbb
push
adc
or
and
leave
out
push
xchg
xchg
or
icebp
iret
or
sbb
cmp
or
xchg
cmc
or
xchg
and
sub
pop
fadd
loopne
test
js
mov
xor
xlat
shll
or
jmp
and
dec
fcoms
in
aad
leave
adc
lds
jp
push
jge
pop
dec
cmp
or
addr16
xor
or
pop
imul
xlat
stc
push
adc
ror
ss
ficomps
push
mov
xchg
ret
repnz
pop
mov
les
gs
cli
xchg
cmpsl
sub
leave
jl
out
aam
mov
testb
push
sub
cmp
push
mov
xor
adc
mov
icebp
or
xorb
add
daa
dec
lret
cwtl
mov
divb
out
fs
mov
jp
fs
adc
push
cmpsl
lret
or
adc
shrl
jae
push
mov
imul
enter
jmp
xor
inc
pusha
mov
xor
dec
mov
out
sbb
ret
and
arpl
mov
jmp
pop
das
push
dec
aad
jb
mov
repnz
mov
cld
xor
jp
cmp
push
fbstp
xchg
push
and
jns
loope
lahf
fadds
pop
mov
inc
rclb
mov
push
jg
into
or
mov
xchg
add
inc
push
inc
lret
xchg
lds
movsl
jo
xor
jb
push
insl
stos
test
cli
test
inc
sti
mov
cmpsl
inc
push
loop
dec
frstor
sub
cmp
xchg
fwait
xor
sub
es
jg
inc
sbb
pop
jne
std
dec
ss
lahf
xor
movsb
addl
jecxz
inc
je
xor
push
cld
jbe
xor
stc
out
aam
movl
mov
sbb
xchg
sti
shl
pusha
jle
repz
dec
push
fwait
clc
dec
movl
loop
insl
insb
cli
xor
jmp
adcl
sahf
sub
test
pusha
xchg
sbb
pop
xchg
xor
imul
insl
pop
aad
or
sarl
in
push
pop
arpl
out
add
xor
mov
insb
rcl
jmp
aaa
aaa
pop
dec
inc
push
jns
pop
sub
lret
xchg
dec
stc
ss
lahf
xchg
and
das
xor
jg
gs
sub
fs
mov
or
jbe
jg
insl
and
mov
jl
or
dec
lds
cmp
dec
mov
clc
jae
pop
cmp
adc
js
out
fwait
mov
ja
addr16
mov
out
stc
je
mov
ss
fstpl
or
cmpsl
out
or
xchg
xor
outsb
jle
mov
in
out
add
in
popf
push
sub
imul
insl
adc
adc
lock
mov
or
cmpb
and
pop
inc
lahf
push
pop
test
xchg
mov
dec
xchg
jae
mov
pop
and
push
lods
cmp
mov
imul
mov
sbb
jns
dec
ret
subl
addb
cli
test
fidivrs
fwait
leave
ss
sub
xor
popf
mov
push
sub
dec
adc
popf
jecxz
xor
ret
mov
stos
pop
and
mov
insb
cmc
inc
or
or
mov
je
mov
and
movsb
sub
popa
arpl
and
add
decl
inc
jge
and
mov
pop
dec
jg
sbb
cwtl
cmp
aad
cmp
lods
push
adc
popf
outsl
daa
test
xor
push
sbb
repnz
movsb
or
cmc
adc
iret
add
aas
xchg
popf
lods
js
mov
cmpsb
test
mov
dec
aam
jecxz
pusha
lods
sbb
mov
adc
popf
mov
inc
lcall
insl
lock
icebp
xchg
xchg
jo
fsubrl
push
imull
mov
scas
jecxz
mov
pop
push
xor
mov
loop
push
sahf
jmp
xchg
insb
and
mov
mov
adc
sbb
lcall
xlat
sahf
jp
xchg
call
mov
lods
push
and
aas
inc
mov
push
stc
shlb
sbb
subl
aam
out
xchg
dec
js
repz
frstor
push
in
adc
hlt
xor
pop
dec
lahf
sbb
cmp
jae
mov
in
testl
mov
push
lods
in
pop
gs
fcomip
hlt
psrad
push
adc
aam
pop
loope
mov
jno
fwait
scas
sub
xchg
pusha
lcall
decb
sub
bound
rol
nop
push
inc
xchg
and
movsl
jo
iret
inc
and
nop
pop
rcrb
or
and
cmp
lods
lock
repz
fimuls
test
cmp
lods
adcl
rorl
add
call
popf
lock
push
or
fstpl
inc
mov
and
push
lret
jl
aas
push
sahf
jl
cmp
push
dec
mov
aas
lret
push
mov
and
jmp
add
jmp
push
sbb
xchg
int
insl
xorl
jno
mov
mov
pop
out
adc
sub
pop
scas
sub
push
loope
xchg
insb
enter
inc
jmp
cmpsl
jnp
push
fdivs
pop
sbb
movsb
ret
cmpb
std
andl
sub
xchg
adcb
sbb
mov
sahf
xor
sub
loope
dec
push
stc
or
pop
mov
in
repnz
out
das
shr
aam
ss
mov
add
sbb
inc
or
lret
faddp
push
fidivrs
ljmp
jno
xchg
test
test
aaa
int
gs
pop
add
xchg
je
or
inc
inc
jmp
jo
lahf
pop
dec
cmpsb
int3
lds
push
xor
ficoms
lods
mov
jmp
loopne
inc
push
lea
jne
out
mov
fdivp
popf
xchg
mov
cwtl
out
mov
aas
mov
aas
je
stos
fsubrl
jb
pop
pop
jae
cmp
xor
scas
sub
xlat
inc
inc
adc
out
push
lret
and
cmpsl
aaa
pop
into
fisubrl
mov
sub
aad
test
add
pop
mov
into
std
and
dec
repz
cmp
dec
sub
outsb
sub
stc
add
mov
arpl
push
cmp
fistl
rcrb
rcr
lahf
push
nop
or
lret
pop
out
in
mov
pop
ss
xchg
das
inc
repz
adcb
xor
dec
roll
into
shll
imul
mov
sub
lock
inc
gs
mov
jns
lcall
enter
xchg
pop
loope
add
ds
in
jno
and
push
movsb
pop
imul
jle
cmp
mulb
insb
cmpsb
push
ret
fadd
push
jae
xchg
mov
repnz
or
lods
cmp
pop
inc
jmp
stc
insl
ror
pop
ja
and
mov
movl
xchg
and
out
pmaddwd
ret
push
dec
bound
and
dec
pop
pop
lret
or
mov
cmpsl
mov
das
shl
outsb
push
adc
pop
or
push
adc
mov
lds
dec
or
dec
enter
popa
add
in
repz
fadd
scas
call
hlt
xchg
mov
pushf
sub
outsb
xchg
enter
scas
fistl
xor
loope
add
lock
pop
ficompl
mov
stos
in
sub
xor
lock
inc
push
fs
mov
sub
adc
cmp
iret
push
push
jle
sbb
aaa
mov
cmp
push
rcrl
xchg
pop
xchg
cmp
popa
xchg
cmpsb
idivl
sbb
stos
xor
shrl
mov
out
sar
lods
add
cld
add
lret
inc
shlb
aaa
push
aad
sub
mov
enter
fcmovu
out
add
add
push
adc
or
je
inc
or
loop
mov
add
stos
iret
adc
jnp
stos
shlb
add
das
cld
or
icebp
sub
jmp
fists
push
stos
dec
fsubl
je
movsl
sbb
rcrb
xchg
inc
int
shll
dec
pop
cmpsl
loope
mov
push
data16
into
adc
sub
jle
cltd
jge
insb
rclb
mov
xchg
pop
dec
cmp
fdivrs
inc
mov
insb
je
jae
cmp
test
push
cmpsb
pusha
fsubl
fisubl
stos
pop
jb
cmp
pop
sub
arpl
sub
sub
jne
xlat
enter
mov
mov
lcall
and
int3
test
lret
inc
sbb
add
mov
mov
pop
icebp
push
or
mov
or
dec
mov
ret
popa
inc
mov
aas
push
sahf
cmpsl
or
jno
mov
into
mov
jns
lahf
or
add
pop
ret
xchg
lea
push
xchg
sbb
adc
pop
xchg
subl
nop
add
idivl
mov
out
mov
aaa
cltd
js
pop
scas
cmp
lea
cld
jl
push
lcall
adc
jno
cwtl
cli
mov
inc
mov
push
rorb
mov
mov
mov
icebp
jp
fisttpl
push
lock
fcomps
out
je
loope
or
push
int
and
cmp
stc
imul
bnd
mov
fcomps
loope
push
dec
stc
add
cmp
mov
jnp
popf
std
into
stc
outsb
movsl
or
push
jae
sbb
and
jmp
inc
pop
and
xchg
daa
int3
lret
jecxz
or
sbb
fidivrl
cmp
lcall
das
push
mov
lds
je
in
dec
in
movsb
and
aas
js
pop
dec
mov
mov
imul
cmpsb
and
jbe
inc
mov
or
jg
xchg
xor
std
push
pop
xor
test
movsl
leave
imul
aad
fists
pop
push
rcr
imul
push
inc
jns,pt
jo
mov
jno
call
cltd
data16
inc
lock
xor
jbe
or
and
repnz
cmp
pop
jle
add
mov
jo
ljmp
fstpt
inc
mov
lret
fs
pop
push
fimuls
push
adc
enter
jg
or
sbb
or
call
int3
push
fisubrs
mov
cmp
sbb
xchg
fdivrs
mov
cmpsl
and
and
mov
je
jno
jbe
push
and
adc
mov
movsl
aad
ljmp
mov
jp
mov
cmp
arpl
xchg
push
insl
into
or
in
sub
mov
repnz
sbb
jge
imul
add
jno
faddl
inc
cmp
adc
mov
push
xchg
xor
enter
cmp
xchg
ss
outsl
mov
cld
sbb
inc
outsb
imul
jbe
mov
ss
xor
inc
sti
push
add
loop
cwtl
xchg
.byte
.byte
inc
xchg
sbb
sbb
sub
ds
ljmp
sbb
xchg
cmp
mov
dec
dec
cmp
jne
imul
nop
leave
int
xchg
xchg
mov
pop
das
mov
dec
pop
jg
jmp
push
addr16
fdivl
movsl
insb
out
mov
dec
jp
imul
int3
mov
out
dec
add
fwait
cld
push
add
xchg
lcall
jb
mov
loope
mov
mov
mov
clc
push
lret
rolb
addr16
and
or
std
or
jmp
xor
out
stos
das
jecxz
sub
sti
bnd
adc
xor
cwtl
in
loop
mov
pop
jge
fwait
ljmp
inc
push
add
in
sbb
nop
pop
fldl
inc
sahf
mov
dec
and
not
fdivs
mov
jecxz
outsl
adc
rclb
pop
pusha
les
push
rorb
insb
scas
cmp
cmp
negb
call
adc
sti
pop
cmc
dec
test
cmp
loopne
loope
loop
jne,pt
fucomp
sti
cmpsl
pop
lcall
stos
lret
sub
fld
cmpsl
push
pop
and
xor
je
add
xor
daa
mov
push
xchg
or
xor
stc
mov
adc
outsb
out
mov
mov
in
sub
jo
sub
cmp
mov
insl
mov
jne
xlat
xchg
int
add
loope
mov
cwtl
lods
mov
jno
push
andl
pop
jno
pop
push
insl
mov
sub
loope
inc
adc
hlt
ljmp
repz
popa
test
and
cmp
jne
push
cmp
mov
dec
outsb
push
cmpsl
cld
pop
bound
les
xchg
sub
or
enter
push
sbb
sub
jecxz
fimuls
sbb
mov
aas
xor
lods
insb
mov
and
movhps
in
daa
dec
xchg
rclb
arpl
jmp
test
xchg
int3
xor
ret
pop
jg
or
test
rolb
inc
imul
add
mov
or
insl
shll
hlt
pop
btc
and
inc
cmp
shlb
xchg
loop
cmp
imul
in
mov
add
mov
sbb
loope
fldl
sub
stos
dec
imul
push
jg
mov
mov
test
popa
push
addr16
clc
inc
mov
or
cmp
or
data16
sbb
pop
sbbl
jnp
mulb
out
imul
xor
icebp
loope
sbb
mov
scas
jae
lret
cltd
sti
lea
dec
sbb
enter
push
sarl
test
inc
loope
inc
cmpb
mov
mov
push
cwtl
xlat
lahf
cltd
pop
jnp
mov
fs
mov
filds
dec
std
push
xchg
cmc
daa
stc
lret
stc
and
adc
adc
mov
mov
divl
lret
scas
lahf
cld
push
xchg
mov
mov
sub
rcrb
xchg
jb
test
adc
cmpsl
out
rolb
ds
ret
mov
stc
ljmp
mov
push
xchg
je
cmp
nop
shrl
mov
mov
xchg
xchg
fldcw
cmp
xor
mov
inc
ja
es
loop
push
dec
sarl
ljmp
push
les
jl
xor
lsl
mov
cld
jne
dec
imul
lret
lods
cmpsl
scas
push
and
fisubrl
sbb
jp
lret
sub
xchg
mov
cmp
cld
outsb
dec
icebp
divl
fidivrl
out
shlb
xchg
jne
push
mov
rorb
and
idivb
stc
arpl
int3
and
into
jb
pop
cmp
or
sbb
and
sub
mov
in
push
lods
repnz
cmpsl
pushf
xor
sub
out
xlat
sarb
pop
arpl
push
imul
outsl
arpl
ret
add
out
outsl
mov
test
sahf
int3
rcl
inc
loope
xor
cmp
push
adc
testl
repnz
js
out
sbb
mov
aam
inc
in
clc
imul
add
xor
sub
jg
or
push
in
fcomps
cmp
jecxz
and
fwait
pop
bound
aad
dec
mov
popa
sbb
mov
push
mov
jb
sti
fcoml
or
das
loopne
lcall
es
icebp
sub
push
mov
hlt
aad
stos
lret
adcl
add
and
cmp
aad
push
jl
aas
push
add
fidivl
fstl
lea
push
lahf
outsb
in
icebp
fstpl
aad
jmp
cli
push
dec
push
leave
inc
pop
push
sbb
popf
sub
insb
aam
sbb
mov
or
inc
popf
scas
lea
cmp
test
sbb
xchg
inc
jg
fmuls
sbb
out
mov
lahf
out
or
jns
cmp
jl
xchg
rorb
fwait
inc
dec
insl
adc
sarb
lcall
pop
sbb
or
push
hlt
test
int
mov
sbb
sarl
inc
inc
jne
jle
push
testb
sbb
ret
das
sbb
int
pushf
push
jne
sbb
call
pop
mov
addr16
sub
enter
lret
mov
mov
and
xchg
xchg
enter
test
incl
js
std
fistl
or
pop
cmp
repz
or
pop
cltd
and
cmp
call
stos
xchg
scas
xchg
lds
or
and
and
inc
or
cmp
pushf
and
mov
gs
out
dec
mov
xor
das
outsl
lret
mov
shl
push
sub
imul
aaa
pop
clc
dec
push
out
jmp
movsb
adc
or
outsb
xchg
or
push
sbb
xchg
clc
pop
cmpsl
scas
jno
mov
fisttpl
xchg
and
pop
fidivrl
inc
jl
mov
mov
ret
in
or
xchg
mov
sti
icebp
stc
inc
fsubrl
xchg
dec
scas
out
or
fmulp
cs
adc
push
andl
stos
sub
testb
dec
push
jne
and
jge
adc
jnp
ret
loope
or
out
in
jge
mov
outsb
adc
adc
sub
mov
sub
fdivp
mov
pop
data16
mov
fstpl
imul
fs
nop
jle
and
out
call
dec
data16
add
arpl
jg
inc
cmpsb
es
jno
mov
rclb
pop
push
ja
adc
in
mov
sub
leave
or
icebp
xor
mov
cld
and
testl
xchg
pusha
cmpsb
inc
test
add
fiaddl
pop
cmp
sbb
xchg
pop
dec
ss
mov
cmp
or
xchg
stos
outsb
test
and
mov
pop
cmp
loop
je
hlt
daa
std
jp
mov
push
imul
sub
stos
pop
pop
call
push
mov
mov
psrlw
stos
or
je
xchg
int
pop
xor
pusha
push
daa
lods
js
cmpsb
scas
lods
add
push
xor
loope
in
mov
leave
ret
sti
cmpsb
sbb
pop
pop
mov
lret
lret
pop
das
rcrl
rolb
pop
mov
or
jg
push
lea
mov
or
stc
mov
add
add
add
test
gs
sets
adc
adc
inc
inc
outsb
data16
movsb
popf
stc
ds
xchg
ss
mov
inc
cmp
inc
js
dec
loop
inc
mov
jg
dec
lock
push
sarb
mov
popa
add
repz
inc
mov
mov
cmp
xor
mov
push
sub
repnz
bound
push
dec
or
lret
rcrl
cmp
jmp
mov
aam
test
mov
mov
jbe
adc
push
sub
xlat
sbb
insb
pop
mov
adc
mov
jnp
jmp
sti
adc
lret
push
aad
ret
and
dec
lea
insl
cli
dec
adc
outsb
ficomps
lret
and
add
mov
mov
mov
add
mov
mov
and
aas
xor
pop
and
popa
insb
dec
in
xchg
sbb
mov
push
cmp
lds
jnp
push
test
pusha
les
mov
pop
push
arpl
ds
or
sbb
pushf
jl
mov
jp
ficoml
jnp
ds
jg
jecxz
arpl
lahf
push
jae
inc
or
sub
sbbl
mov
or
push
clc
cmp
sub
shlb
adc
xchg
xchg
movb
clc
inc
popf
cmp
add
push
sub
out
or
xchg
or
call
clc
mov
jmp
jno
and
movsl
lahf
scas
mov
pusha
add
mov
in
imulb
pushf
movsb
sub
mov
sbb
test
fidivrl
xchg
lock
shl
shlb
es
jle
pop
pop
ds
inc
sbb
adc
push
xchg
xchg
into
inc
add
mov
inc
cli
stc
fdiv
adcb
push
sub
sahf
jg
outsl
es
mov
faddl
add
dec
mov
pop
ljmp
pop
divb
out
cmpsl
sbb
repnz
shrl
mov
jbe
addl
inc
icebp
mov
gs
sbb
inc
xchg
push
jnp
push
loop
movsb
pop
mov
cmp
add
fsubs
ljmp
xchg
pop
ret
icebp
inc
jb
ret
mov
movsl
loopne
or
xchg
adc
push
mov
and
fcompl
cmp
mov
push
cmp
ret
jno
data16
cmp
insb
pop
ret
xchg
sbbb
or
loop
add
movzbl
call
xor
pushf
into
sub
out
xchg
cs
adc
sub
pop
pop
int
push
or
hlt
xlat
cwtl
mov
fstpt
cltd
pop
in
imul
xchg
cwtl
mov
shlb
jae
pop
notb
mov
sub
js
out
fs
add
xlat
xchg
sub
fsubr
xchg
adc
testb
ret
sbb
mov
popl
cmpsb
daa
popf
test
icebp
xchg
or
dec
dec
test
hlt
lock
in
jne
lods
jp
imul
and
mov
je
dec
test
aas
clc
popa
pop
movl
ljmp
jae
and
movsl
xor
cmc
adc
jbe
cmp
outsl
jo
push
cltd
out
mov
dec
pop
es
push
or
sbb
enter
push
stc
mov
push
jge
and
push
ss
or
mov
cmp
dec
hlt
lcall
ret
ds
push
push
call
sbb
mov
mov
gs
mov
scas
repnz
shl
mov
dec
movb
mov
mov
inc
outsl
jecxz
fisubs
notb
lock
add
inc
scas
std
je
push
lea
xchg
cld
dec
or
fldenv
sub
loope
popf
fcompl
pop
int
add
cwtl
push
enter
std
scas
in
sahf
push
jge
in
repz
sbb
cmp
mov
push
gs
sub
mov
dec
dec
mov
je
and
add
mov
lcall
xor
test
ss
loopne
add
dec
add
mov
xchg
addb
xchg
dec
les
and
lock
push
lds
roll
cmp
dec
mov
into
jnp
jns
adc
or
or
dec
es
test
dec
ljmp
inc
leave
sbb
fistl
push
enter
leave
and
mov
cmp
cs
insb
mov
mov
or
cmpb
sub
push
lods
adc
adc
insb
lods
arpl
int3
ljmp
push
sti
mov
xor
bound
cmp
les
jp
sahf
jno
xlat
repnz
daa
add
sarl
sbb
jnp
cmp
mov
push
addl
addr16
stos
jae
pop
imul
xor
mov
stos
lock
push
add
lcall
popf
das
mov
xor
inc
cmp
mov
or
cmp
shlb
mov
xchg
mov
push
test
sbb
enter
inc
lahf
fstps
repnz
push
cmpb
mov
mov
push
inc
jbe
xchg
loope
pushf
xchg
test
mov
stc
sbb
pop
mov
cmp
rcll
in
out
aam
sbb
lods
ja
inc
fs
dec
clc
cmp
add
js
adc
xor
loope
sbb
adc
aas
pop
cs
ljmp
in
in
jae
mov
orl
mov
jne
push
push
pushf
cld
jbe
repz
les
sbb
stc
xor
repz
imul
jg
dec
mov
rclb
js
test
cld
jne
xor
pop
sbb
movsb
out
xchg
shl
push
pop
cmp
cmp
cmpsl
push
cmp
mov
int
adc
mov
aam
adc
sbb
mov
add
in
and
mov
scas
std
dec
imul
jns
aaa
mov
clc
in
fwait
add
mov
std
add
sahf
std
addr16
in
adc
data16
clc
mov
jmp
daa
je
xor
and
cld
les
ds
mov
jle
outsb
arpl
negl
lods
dec
push
leave
xlat
jno
lahf
leave
mov
daa
inc
cmp
mov
push
sbb
iret
xchg
fildl
out
bound
ja
sub
addr16
adc
jns
inc
xchg
int3
pop
enter
hlt
in
push
mov
push
inc
and
fdivs
pushf
outsl
clc
stos
rcll
mov
mov
inc
inc
xchg
cmp
arpl
scas
out
movsl
sbb
loope
cmp
or
stos
outsb
mov
fcmovbe
add
or
les
fbld
inc
mov
mov
inc
dec
push
jle
jl
inc
and
push
aas
arpl
iret
adc
movsl
idivl
jle
push
mov
add
sub
ja
stos
xchg
iret
inc
and
shlb
xchg
les
dec
xchg
mov
sub
out
ret
dec
or
fcomip
lds
push
repz
sbb
xchg
pop
mov
pop
adc
and
or
inc
into
xchg
lock
lret
mov
sahf
and
lods
mov
aad
je
daa
sbb
testl
jbe
sbb
pop
mov
rcl
mov
mov
ja
daa
mov
xlat
adc
xchg
dec
dec
int3
insb
pop
mov
mov
cmp
mov
std
push
mov
xchg
add
ret
cwtl
mov
insl
jns
dec
mov
mov
add
mov
add
sbb
adc
jb
push
or
out
push
dec
cwtl
xor
dec
xchg
jmp
imul
pop
orb
ja
dec
mov
decl
cwtl
pusha
loop
mov
sahf
test
or
repz
iret
push
lock
mov
test
subl
or
les
in
loop
repz
mov
jne
stos
push
sbb
aas
sbb
addr16
or
ror
mov
mov
fistpl
sbbb
loope
jge
scas
jo
aas
mov
pop
cmp
or
xor
xor
or
xchg
cmpsl
ret
push
xchg
sub
inc
scas
sahf
add
data16
mov
xor
xchg
adc
xchg
adc
test
movhps
and
inc
push
jg
sbb
xchg
ja
cwtl
or
add
sub
or
pop
loopne
out
into
dec
pop
push
mov
insl
imul
push
stc
cmp
aas
enter
dec
jge
cmpb
arpl
and
sub
push
push
add
mov
loope,pn
adc
call
inc
clc
mov
int
sbb
inc
out
and
or
push
mov
inc
repnz
and
dec
in
inc
daa
call
call
cmp
mov
adc
cld
pop
mov
pop
xchg
mov
jbe
aam
jecxz
cmpsb
or
dec
into
cmp
push
mov
fsubl
or
hlt
mov
sbb
imul
adcl
ret
adcb
dec
cmp
cld
movsb
sbb
ss
and
popf
rorb
fcom
adc
int3
daa
pop
dec
in
insb
stc
push
lret
ret
jbe
insb
add
push
ds
xchg
lret
das
xchg
mov
push
inc
xchg
icebp
lock
xchg
fwait
daa
icebp
popf
cli
xchg
or
addr16
cli
and
in
lret
and
xchg
adc
cmc
cmp
js
imul
fsubrp
dec
xor
decb
push
jae
outsl
sbb
je
mov
dec
cmp
lea
adc
repz
ljmp
cmp
mov
sbb
testb
jp
fsubl
out
mov
xor
sbb
mov
fldenv
