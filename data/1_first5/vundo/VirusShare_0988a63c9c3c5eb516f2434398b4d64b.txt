or
xor
mov
or
and
shr
sub
and
mov
mov
push
lea
jmp
cmpw
jne
shl
add
mov
mov
xor
jmp
cmp
mov
jmp
call
jmp
add
in
push
and
xor
and
sub
mov
and
sub
mov
dec
and
or
mov
push
push
mov
mov
jmp
push
jecxz
dec
pop
add
cmpl
jne
cmpb
jne
nop
nop
add
add
rol
mov
jmp
mov
xor
jmp
movb
movb
movb
movb
shl
mov
movb
jmp
or
rol
mov
cmp
jne
xor
decl
ret
add
add
add
jecxz
rcrl
and
and
dec
mov
add
add
xor
jmp
push
lea
add
mov
add
push
call
and
sub
mov
cmp
je
jmp
mov
mov
mov
mov
add
or
sub
mov
sub
test
jne
movzbl
jmp
push
jmp
call
leave
int3
xorl
call
mov
shr
mov
movzwl
movzwl
add
add
xor
mov
sub
mov
jmp
xor
mov
jmp
lea
nop
movzwl
jmp
add
mov
rol
mov
test
jmp
movb
movb
movb
ror
and
xor
or
mov
mov
jmp
test
jne
sub
sub
mov
mov
mov
movzbl
add
mov
nop
nop
nop
nop
nop
lea
or
sub
add
sub
inc
mov
jmp
add
mov
lea
and
mov
shr
and
add
test
jmp
lea
sub
test
mov
mov
jmp
and
sub
xor
sub
mov
and
cmp
jne
and
jmp
add
add
add
rol
rol
mov
and
mov
sub
test
jne
push
jmp
addl
jmp
xor
sub
mov
sub
push
xor
test
jmp
sub
push
jmp
call
shl
sub
and
and
or
mov
push
push
mov
mov
mov
add
add
jmp
push
jmp
call
call
nop
subl
push
jmp
jne
jmp
add
add
add
push
and
and
or
or
mov
mov
sub
mov
push
push
jmp
and
cmpw
je
nop
sub
jmp
push
push
jmp
jmp
leave
call
push
xorl
jmp
push
push
dec
mov
sub
mov
or
mov
sub
shr
test
lea
jle
jmp
and
cmp
sete
mov
ret
add
add
add
ret
push
mov
mov
mov
jmp
call
cmpb
jne
add
ret
or
mov
rol
mov
pop
ret
add
add
add
add
movl
sub
jmp
jle
add
jmp
movzwl
push
jmp
jmp
add
add
mov
test
je
jmp
mov
add
add
push
jmp
je
inc
xor
or
add
mov
sub
test
mov
jne
movzbl
add
and
xor
shr
mov
jmp
mov
add
rol
and
rol
mov
add
test
je
jns
jmp
add
and
mov
jmp
add
push
and
mov
test
je
mov
add
cmpl
jmp
mov
fisttpll
test
add
xor
ret
ret
add
add
add
test
push
add
push
push
jmp
ret
xor
or
mov
add
mov
mov
test
jmp
push
jmp
dec
xorl
movb
jmp
xor
test
je
movsbl
rol
jmp
mov
jmp
add
add
add
inc
std
call
add
add
xor
call
jmp
mov
jle
jmp
sub
mov
shr
mov
mov
add
jne
add
ret
jmp
jne
and
xor
and
mov
mov
xor
shl
ror
and
mov
lea
jmp
shr
and
lea
xor
rol
mov
mov
or
mov
add
sub
jmp
test
jmp
add
push
inc
shl
mov
mov
mov
jmp
sub
push
jmp
call
call
dec
call
addl
lea
jmp
add
pusha
mov
call
popa
jmp
mov
ret
add
add
add
hlt
add
add
jmp
pushl
ret
shr
ror
and
rol
add
mov
add
mov
jmp
dec
test
jne
or
rol
mov
shl
dec
mov
movzbl
add
mov
lea
jmp
mov
mov
shl
add
inc
dec
mov
shr
and
add
test
mov
je
jmp
jne
add
cmpl
jne
pop
pop
pop
mov
pop
jmp
stos
sub
ror
add
add
mov
shr
lea
lea
jmp
add
xor
mov
test
jmp
ret
pop
mov
pop
ret
mov
ret
push
add
or
mov
mov
jmp
movl
jmp
jmp
mov
dec
and
shr
mov
jmp
add
add
add
push
jmp
push
nop
int3
xorl
call
test
jmp
add
add
add
jmp
addl
call
test
jne
call
mov
jmp
push
push
call
call
xor
inc
mov
xor
mov
jmp
mov
jmp
add
add
add
add
add
jmp
sub
mov
jmp
out
inc
mov
push
push
call
ret
push
xorl
jmp
push
push
mov
mov
jne
add
jmp
test
jmp
add
mov
shr
mov
sub
cmpl
lea
je
jmp
sub
jmp
add
add
mov
lea
push
jmp
cltd
and
add
sar
test
jle
mov
xor
inc
mov
test
jmp
lea
call
mov
shr
mov
mov
jmp
sub
xor
and
sub
mov
shr
and
add
test
jne
nop
nop
nop
nop
nop
mov
mov
pop
ret
add
add
add
jne
movzbl
add
mov
lea
inc
add
mov
shr
jmp
jne
cmp
je
add
cmp
jmp
push
call
jmp
push
out
dec
jle
jmp
and
nop
test
jne
jmp
sbb
enter
and
and
mov
or
mov
add
mov
rol
dec
or
and
xor
mov
mov
or
ror
shl
mov
sub
rol
rol
sub
and
mov
rep
movzwl
jmp
add
mov
mov
mov
add
test
jmp
inc
and
xor
dec
and
mov
jmp
stos
in
add
ret
and
rol
sub
xor
sub
mov
jmp
add
mov
test
je
xor
movl
jmp
in
loop
jl
pop
xor
pop
and
add
mov
pop
ret
jmp
inc
stc
add
test
ret
adc
jnp
add
test
jmp
sub
sub
sub
jne
jmp
mov
or
add
mov
jmp
or
mov
sub
test
jne
movzbl
add
lea
rol
mov
jmp
inc
imul
jmp
jns
jmp
dec
mov
movzwl
jmp
mov
dec
sub
mov
sub
mov
add
add
sub
add
cmp
mov
jmp
arpl
loopne
add
subl
jmp
mov
mov
mov
pop
add
pop
xor
or
or
shr
shr
mov
pop
ret
add
add
add
push
cld
incl
jne
jne
mov
mov
mov
push
jmp
pop
pop
mov
pop
ret
add
add
add
subl
jne
test
nop
nop
nop
nop
nop
mov
mov
jle
shr
mov
nop
jmp
jne
add
ret
shl
add
add
sub
shr
mov
push
jmp
call
inc
push
dec
subl
call
sub
mov
inc
shl
mov
add
jmp
lea
jne
test
mov
je
or
mov
sub
mov
mov
jmp
lcall
ret
shr
shl
shr
mov
call
add
xor
mov
call
push
jmp
call
ret
call
call
subl
jmp
enter
roll
or
add
movb
add
jmp
movzbl
jmp
push
lcall
shr
js
add
push
jmp
call
subl
push
call
jmp
das
pop
xor
sbb
add
test
decl
jmp
lea
push
dec
and
mov
mov
mov
push
jmp
jmp
call
nop
nop
call
push
addl
push
jmp
sub
shl
mov
mov
and
add
add
shr
jmp
mov
add
add
mov
call
and
shr
mov
call
movl
lea
call
mov
jmp
iret
push
mov
add
add
rolb
shrb
aam
rorb
xor
mov
ror
mov
pop
add
ror
add
sub
ror
mov
jmp
push
call
push
jmp
call
inc
jmp
call
nop
ret
inc
subl
mov
jmp
lds
mov
mov
je
test
je
jmp
add
dec
or
or
xor
mov
dec
mov
shl
add
or
xor
sub
mov
mov
jmp
push
shrl
xor
add
sub
jne
pop
pop
pop
jmp
loop
pop
call
push
jmp
subl
mov
call
push
jmp
call
subl
mov
call
push
jmp
call
ret
pop
call
dec
push
call
inc
xorl
jmp
push
ja
and
mov
sub
add
sub
jmp
mov
cmp
jne
mov
jmp
sub
add
shl
mov
pop
ret
add
add
add
call
add
push
jmp
call
call
push
call
call
dec
call
ret
xorl
lea
push
push
jmp
dec
jmp
int3
dec
inc
push
subl
push
jmp
call
pop
xorl
mov
nop
nop
nop
nop
nop
movb
call
cmpb
jne
add
ret
push
jmp
call
push
pop
push
pop
xorl
push
jmp
inc
ret
call
ret
subl
push
jmp
pop
push
ret
addl
jmp
mov
sbb
jne
and
shl
shr
or
xor
mov
jmp
push
dec
dec
add
pop
mov
mov
jmp
and
and
je
add
ret
pop
pop
mov
jmp
lock
dec
and
jmp
jno
mov
add
pop
add
rol
mov
pop
ret
add
add
add
fmull
dec
pusha
fs
out
in
ret
add
add
add
nop
nop
nop
nop
movl
jmp
nop
nop
nop
nop
nop
movl
nop
nop
nop
nop
nop
mov
movl
jmp
nop
nop
nop
nop
nop
lea
call
cmpl
jne
nop
nop
nop
nop
nop
cmp
jne
call
test
mov
je
add
mov
nop
nop
nop
nop
nop
sub
add
sub
mov
mov
jne
mov
jmp
nop
nop
nop
nop
nop
sub
jmp
nop
nop
nop
nop
nop
sub
add
sub
mov
movzbl
shl
nop
nop
nop
nop
nop
add
add
lea
ror
and
or
xor
mov
nop
nop
nop
nop
nop
mov
call
cmp
jb
add
nop
nop
nop
nop
nop
cmp
jb
add
cmp
jae
add
jmp
mov
je
lea
dec
shr
mov
sub
mov
nop
nop
nop
nop
nop
mov
add
sub
jne
mov
nop
nop
nop
nop
nop
mov
add
xor
mov
shr
mov
add
xor
xor
mov
movl
jmp
mov
mov
add
nop
nop
nop
nop
nop
add
mov
movl
mov
cmpl
je
pop
sub
dec
shr
mov
sub
nop
nop
nop
nop
nop
pop
pop
sub
rol
and
mov
pop
ret
push
addl
add
add
adc
add
addl
add
addb
fadds
add
insb
addl
add
add
add
add
add
add
adc
add
addl
add
addb
fadds
add
insb
addl
add
add
outsl
jae
inc
jb
jbe
jb
sub
push
jns
gs
gs
jae
inc
popa
jo
jne
add
add
je
jb
arpl
jae
push
add
gs
je
inc
imul
add
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
add
gs
je
inc
imul
add
add
imul
js
add
adc
add
add
add
add
push
add
add
add
pop
frstor
adc
add
add
add
mov
add
add
xor
xor
xor
cmp
cmp
ds
aas
hlt
cmp
cmp
xor
and
out
cmp
cmp
ss
cmp
aas
sti
aas
xchg
ss
cmp
insb
cmp
add
cmp
cmp
xor
add
add
xor
fdivs
xchg
mov
xor
out
cli
xor
add
add
add
add
and
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
cwtl
inc
mov
sub
das
jae
push
jle
sbb
add
inc
and
sub
mov
push
fdivrl
xchg
xor
movsb
nop
aad
push
cld
xorb
pop
imul
and
jge
ljmp
mov
cli
mov
jne
fcoml
pop
inc
pop
andl
add
lods
sbb
imull
mov
push
mov
pop
or
pop
fsubr
ja
jmp
imul
or
filds
mov
aad
movsb
mov
sub
adc
aam
adc
sbb
pusha
lret
pop
das
inc
push
sub
test
int3
or
dec
addb
aad
mov
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
mov
sub
push
add
nop
or
push
sbb
aaa
ds
push
jb
repnz
int3
or
jp
in
push
xchg
adc
push
add
mov
cmp
fistpll
pop
inc
fnstsw
cmpsb
popa
sbb
js
dec
ja
sbb
push
push
inc
les
pavgw
add
pushl
mov
mov
and
add
std
lea
imul
mov
aas
clc
repnz
lods
rol
add
testb
mov
dec
xor
into
std
lret
out
gs
les
fisubrs
ss
call
cltd
push
adc
dec
movsb
cmpl
xor
fs
popf
xor
add
inc
push
jno,pn
jae
jb
hlt
inc
mov
lods
stos
xor
cli
lret
sub
and
or
faddl
inc
inc
out
cmp
push
xchg
out
mov
xor
scas
dec
mov
fs
fucomp
sub
sbb
in
popa
loop
mov
loop
xor
push
cmpsl
in
ja
and
dec
or
sub
cmp
cltd
adc
push
rcrl
in
mov
loopne
jb
xchg
pop
xchg
sub
std
outsl
jmp
scas
and
push
sbb
mov
dec
mov
add
push
jmp
pop
jmp
int
fld
inc
mov
popa
aaa
je
andl
scas
cmp
mov
sbb
xor
loope
xor
ja
.byte
in
dec
.byte
