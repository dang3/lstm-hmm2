add
add
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
stc
cmc
adc
push
lea
jl
stc
les
add
add
add
pop
or
add
stc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
insl
add
add
add
add
add
sahf
add
pop
add
add
mov
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
add
add
add
add
add
add
add
add
mov
mov
imul
add
add
out
add
mov
or
add
add
add
add
add
mov
icebp
add
add
mov
insb
add
add
add
add
add
add
add
faddl
aaa
add
add
lock
add
add
add
add
add
push
add
add
add
add
add
add
rolb
mov
mov
add
add
add
add
add
add
int3
add
pop
add
add
add
daa
add
add
add
add
add
add
add
int3
add
pop
add
add
add
add
add
add
add
add
add
add
add
push
add
or
inc
add
add
pop
add
lahf
add
add
add
add
add
mov
jle
rolb
add
add
add
add
add
xchg
add
add
add
add
add
add
inc
add
push
add
add
add
add
add
add
add
and
add
ja
mov
add
mov
enter
iret
add
add
add
add
add
add
add
add
add
pushf
add
add
add
add
sbb
mov
xchg
add
jg
mov
add
add
add
add
mov
add
add
add
xchg
add
mov
arpl
add
cmp
mov
jae
mov
add
jo
push
add
add
add
add
and
incl
inc
add
push
add
add
add
add
and
add
add
adc
pop
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
adc
insl
add
add
and
cmp
inc
add
add
add
add
inc
add
add
add
add
sub
add
add
add
add
add
add
faddl
out
add
add
add
jo
stc
add
add
add
add
push
add
add
add
add
inc
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
mov
jo
xlat
add
add
add
add
add
loopne
lock
add
add
add
add
add
xor
stos
add
stos
add
sbb
incl
int3
add
jg
in
add
ret
movsl
inc
mov
mov
inc
and
scas
js
xchg
jecxz
rorb
insl
pushf
add
aaa
and
adc
enter
jne
jo
inc
out
jns
pushl
dec
test
push
lret
push
arpl
outsl
sub
popa
fcoml
aas
scas
repnz
out
arpl
test
push
xor
ljmp
or
inc
jae
and
jl
pop
imul
imul
clc
and
jecxz
jp
adc
hlt
fistl
out
out
xchg
add
cmp
add
inc
dec
cmp
mov
leave
mov
into
mov
cmp
faddl
push
sbb
ljmp
dec
loope
inc
cmp
pop
sbb
stos
faddp
cmp
fcmovnbe
fsubrl
jle
or
fs
mov
in
icebp
cmp
shrl
and
jnp
incl
cmp
cs
jnp
pop
adc
jno
lahf
xrelease
out
xchg
aam
ret
lcall
call
cmp
mov
dec
xor
mov
sbb
lods
mov
enter
cmpsb
xchg
sarl
adc
mov
icebp
mov
or
arpl
jmp
hlt
sbb
add
xchg
jbe
sahf
ljmp
or
lods
jecxz
cmp
xor
mov
sbb
call
notb
push
pushf
or
lock
repnz
repz
sbb
shrl
mov
shll
jg
shll
clc
xorl
das
and
stc
pop
xchg
pop
sbb
pop
inc
lret
mov
xchg
sbb
xchg
leave
pop
and
mov
int
pop
clc
loope
jle
icebp
cld
test
mov
jge
rcrb
adc
outsb
insl
add
add
xor
push
inc
jo
push
xchg
adc
inc
lret
and
mov
aad
int
mov
sub
jo
dec
mov
xor
and
cld
inc
loope
scas
add
inc
mov
mov
fildll
sbb
fldenv
sub
lret
dec
jne
pop
loopne
scas
gs
loopne
pushl
pop
xchg
daa
loop
jne
sti
imul
push
pop
out
sub
out
or
xchg
mov
xchg
push
test
stos
insl
adc
test
xchg
call
test
cmp
das
iret
push
mov
insb
fdivp
mov
lret
movsb
rol
fcoml
loope
outsl
pop
mov
sbb
add
cs
push
mov
mov
or
jle
push
pushf
imul
movsb
jecxz
test
and
adc
mov
in
mov
cltd
lock
add
cmpsb
pop
stc
add
add
add
add
loop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
subb
xor
bound
xchg
pop
addb
aaa
mov
inc
loop
loop
adc
and
jb
bound
shll
mov
inc
repnz
loop
adc
and
jb
call
push
stos
rolb
lea
xchg
add
jle
jb
fchs
bound
push
aas
adc
mov
fisubrs
imul
inc
in
arpl
push
dec
cmp
mov
movsl
out
jge
jmp
das
aaa
das
push
cmp
ljmp
inc
mov
enter
pop
insb
xchg
lcall
insb
ja
inc
jno
cmpsl
ja
push
add
push
xlat
outsb
scas
xchg
or
sbb
add
xor
mov
out
cmp
popa
in
and
jmp
cli
inc
notl
loop
mov
inc
ja
sbb
cmp
nop
mov
movsb
sbb
push
outsl
enter
push
ret
ja
jecxz
xchg
add
xor
lods
push
xlat
inc
jb
bound
xchg
add
daa
mov
mov
lds
pop
hlt
insb
mov
mov
pop
cmp
xor
inc
dec
cmpsb
cmp
push
dec
rolb
inc
push
aaa
mov
sbb
lret
inc
cltd
pop
mov
mov
shrl
out
les
mov
jb
out
pop
addb
aaa
mov
inc
bnd
adc
xor
inc
jb
out
pop
addb
aaa
mov
inc
bnd
adc
mov
dec
pusha
aam
add
mov
xchg
mov
inc
push
xchg
mov
or
push
or
in
aam
std
dec
push
jb
rolb
test
out
or
xor
inc
add
lret
sub
stos
push
shll
xor
pop
sub
jecxz
cmp
in
ds
jle
arpl
ds
jl
mov
and
inc
fnstsw
or
lods
icebp
pop
ret
cmpsb
sub
mov
fisttps
xor
add
leave
sub
int3
cli
push
aam
pop
enter
in
xlat
insb
stc
inc
inc
lret
jge
pop
aas
dec
push
push
mov
aam
add
insb
xlat
pop
int3
jbe
mov
or
bound
inc
inc
cltd
mov
cmpsb
adc
lods
xchg
and
test
pop
pop
pop
fsts
fisttps
add
xchg
adc
add
push
pushf
loop
adcb
test
fcomps
pop
shrb
push
lcall
jne
push
mov
jnp
lds
pop
daa
rorb
inc
and
in
xor
xor
cmp
mov
jns
pushf
push
xor
lret
loope
xor
js
dec
sub
gs
pop
xor
jmp
repnz
fistpll
jle
aam
mov
add
xchg
fistpll
fwait
test
inc
mov
enter
push
shll
jl
cmpsl
dec
mov
xchg
outsb
ljmp
imul
ret
jo
ja
aad
sbb
cmp
insb
ja
jns
and
cwtl
and
add
mov
rclb
enter
pop
pop
mov
test
lahf
xchg
and
jno
adc
out
xchg
mov
shlb
pop
popf
add
and
xchg
pop
fucomp
mov
sbb
popa
icebp
sbb
lods
jge
xchg
jns
js
inc
xor
jp
rclb
jge
push
pop
dec
sbbb
jp
repz
mov
sbb
sub
jge
add
lds
mov
mov
push
and
add
test
mov
outsl
stc
push
scas
or
cmpsl
pop
adc
inc
test
pop
or
adc
pop
push
inc
in
test
outsb
lds
decb
incl
movsl
mov
in
jg
and
popa
xchg
cld
mov
loop
ljmp
test
bound
xchg
xchg
push
pop
adc
cmp
leave
gs
cld
test
push
mov
and
dec
ficoml
pop
or
pop
jecxz
add
mov
subl
or
cli
add
mov
lods
inc
rcr
jne
xchg
or
cmp
mov
mov
movsl
inc
fcoms
clc
aaa
push
cmp
cmp
adc
flds
stos
js
aad
mov
mov
xor
mov
shll
jl
shl
decb
push
cmp
stos
adc
pop
xlat
mov
negl
fisubrs
int3
dec
xchg
push
adc
push
jno,pn
jmp
test
cmp
jle
mov
insb
cld
dec
xor
negb
icebp
aaa
cld
xor
fisubl
lret
sub
shll
and
add
adcb
mov
mov
imul
movsb
cmp
nop
or
sahf
bound
std
mov
push
jne
mov
add
sahf
mov
jp
push
decb
fadds
xor
sbb
add
jge
inc
das
sahf
jge
int3
ja
divb
loop
fsubr
into
ret
mov
sbbl
and
add
cmpsb
fwait
jg
inc
dec
sub
xlat
icebp
leave
jecxz
stos
push
stos
lods
push
lods
aam
fcmovnb
jge
sbbb
inc
push
scas
jns
je
dec
add
inc
push
inc
jb
and
in
jns
inc
pop
and
inc
cmpsl
jae
mov
and
orb
cmp
cwtl
mov
mov
cli
adc
in
out
idiv
mov
jecxz
jo
ja
fstpl
rcr
mov
adcl
dec
stos
ja
cwtl
adc
adc
jo
pushf
mov
pop
movsb
xchg
stos
sarl
aad
out
loop
push
pusha
movsb
mov
and
push
dec
std
push
xor
ljmp
incl
jo
loopne
inc
xchg
xor
dec
cmp
jb
fidivl
adc
int
mov
mov
scas
mov
movsl
pop
mulb
out
pop
repnz
push
js
pop
mov
icebp
sub
ljmp
idiv
ret
dec
push
mov
or
mov
mov
leave
push
les
ljmp
inc
dec
ja
inc
pop
xchg
pop
jmp
add
pop
js
das
call
test
mov
movsl
insl
lock
dec
cmp
test
cmp
lock
mov
push
pop
stos
fisubs
leave
xor
jne
sbb
faddp
mov
fdivs
loop
fisubl
push
fnstsw
xor
inc
jle
ss
add
and
and
add
jle
xchg
and
pop
and
lea
fidivs
jae
cmp
push
jecxz
divl
cmpb
pop
xchg
imul
rol
pusha
pushf
inc
push
xor
add
cwtl
or
mov
inc
nop
inc
add
cmp
in
push
arpl
xchg
das
mov
mov
push
push
aaa
stos
fsub
es
dec
xchg
pop
pop
stc
sbb
jno
ret
add
mov
movl
pop
sarb
enter
imul
lcall
icebp
jae
dec
stos
loope
lods
arpl
int3
inc
in
cmovl
in
sub
out
pop
cltd
mov
jl
cmpsl
xchg
subb
insb
aad
push
or
pop
stos
ljmp
ljmp
add
stc
xchg
push
push
inc
imul
ficomps
sbb
pop
inc
xchg
xor
cli
rolb
out
mov
out
sti
shlb
std
icebp
inc
test
inc
data16
popf
fdivl
cmp
xchg
mov
in
jecxz
faddp
pop
mov
rcrb
cmp
mov
xchg
mov
in
fsubrl
mov
xchg
dec
cli
xchg
sub
add
jmp
xor
sub
pop
loop
sub
ja
push
and
pop
scas
dec
jo
test
inc
fmulp
sbb
xchg
ret
xchg
adc
mov
xchg
pop
dec
into
in
xchg
dec
aam
add
sub
jnp
xchg
fwait
pop
mov
inc
lea
sbb
repnz
fcom
dec
lea
mov
inc
xchg
aas
roll
and
pusha
jnp
pop
xchg
add
pop
and
push
pop
stos
clc
cld
mov
xchg
add
sub
pop
lcall
movsb
insl
or
mov
mov
mov
adc
sar
movsb
fcompl
sbb
mov
leave
pusha
lret
dec
push
push
ja
jne
add
jle
cmpl
js
push
das
add
mov
stos
arpl
jne
aad
shll
inc
sub
pop
cmpsb
jl
cmpsl
movsb
movsl
mov
stos
stos
loope
loope
int
or
lock
sub
inc
call
xchg
insb
xchg
sbb
mov
mov
fcmovb
enter
push
add
pushf
lret
ja
cmp
test
xchg
cwtl
jge
lock
mov
jno
les
sbb
sbbb
and
mov
rclb
dec
in
cmpsl
jns
mov
dec
xor
lcall
mov
das
movsb
and
les
jae
mov
cmp
fistps
push
sub
sub
nop
ror
mov
mov
jmp
subb
aas
push
jno
xchg
inc
dec
icebp
clc
cmpb
repnz
push
scas
add
into
sub
and
mov
jns
int
mov
or
lahf
or
pop
dec
inc
insl
xor
mov
cmp
xchg
mov
outsl
mov
inc
cmp
push
iret
rcrl
sub
dec
into
out
xchg
bound
mov
jae
es
test
push
sub
cmp
loop
mov
lret
xor
shl
push
cltd
fstp
push
mov
pop
ds
shl
dec
jmp
xchg
lcall
loopne
inc
gs
push
repz
mov
subb
aas
outsb
out
stc
jmp
cmp
test
lds
iret
xchg
jmp
jl
jp
inc
out
ret
sub
dec
sbb
fwait
cmp
push
das
jmp
insb
movsb
pop
out
mov
jb
add
inc
cli
adc
insb
sbb
paddd
sub
xor
mov
xor
inc
push
test
lret
or
iret
jg
clc
jne
pop
xlat
inc
jae
ja
push
outsl
jbe
lock
cmpsb
xor
in
sub
push
std
popa
xchg
xchg
push
and
dec
jo
sub
jp
stc
popf
popf
jns
shlb
pop
rclb
or
push
mov
sbb
adc
add
stc
sbb
push
cmpsl
push
add
jl
jp
addb
scas
shll
mov
jle
adc
xchg
jnp
into
jge
lods
mul
insl
dec
jno
push
cmc
jno
orb
test
sbb
mov
dec
mov
xor
mov
movsl
adc
fxch
pop
mov
jnp
xchg
cmp
jnp
cmpl
in
adcl
xchg
fdivs
fadd
and
lea
in
sub
dec
or
cmp
js
shrl
je
movsl
and
frstor
push
and
jbe
sub
clc
ljmp
call
shrb
std
mov
cmpsb
add
mov
gs
adc
jbe
stos
pop
push
xchg
mov
mov
inc
cld
stos
sti
lods
xchg
sub
lahf
push
xchg
jecxz
jmp
fnsave
cmp
or
jnp
jmp
movsb
fs
sbb
into
in
clc
jl
pop
orb
pushf
loope
sbb
jecxz
shrl
jns
inc
movsb
xchg
sub
sub
sahf
lretw
lods
test
dec
dec
inc
mov
dec
xor
fisubrs
hlt
xchg
sub
inc
lods
ja
je
cmp
dec
imul
mov
icebp
pop
fmul
mov
push
pop
lock
sub
loope
out
bound
or
shlw
int3
imulb
dec
roll
mov
data16
cmp
sarl
cmpsb
push
jns
andl
lahf
cmp
add
adc
mov
les
int
cmc
inc
loop
push
sbb
jecxz,pt
dec
inc
push
sbb
adcl
jae
xchg
xchg
xor
addr16
mov
arpl
dec
inc
insb
push
ss
test
mov
stos
cmc
push
and
adc
lahf
adc
out
leave
bound
sub
aad
shrl
mov
ret
mov
mov
cmp
mov
sbb
jo
pop
nop
mov
stc
lcall
ds
add
cmp
pop
sbb
cmp
mov
push
push
xchg
inc
pop
jne
push
sbb
mov
fisubl
cld
clc
das
pushl
push
movsb
pop
xor
out
adcl
or
push
mov
dec
scas
sub
cli
sub
jge
popa
test
xor
adc
push
ds
xchg
cmp
outsl
ss
js
scas
int3
push
repz
xlat
int
fidivl
mov
jl
cli
xor
push
jge
enter
adc
test
push
jb
add
cmpsl
int
incl
in
fwait
pushf
lahf
test
test
out
in
mul
or
mov
int
jmp
push
outsb
loopne
shrl
mov
bswap
push
in
or
aas
pop
gs
test
lret
sbb
pop
dec
lock
fisubrl
pop
leave
ja
arpl
cli
sub
push
adc
fstl
inc
jp
pop
jl
mov
iret
xchg
xor
nop
inc
jp
adc
test
std
or
loop
jns
jge
push
es
dec
cmp
dec
sti
add
sbb
sti
push
push
movsb
dec
mov
cmp
jne
fs
pop
pop
add
mov
lods
dec
or
dec
fs
and
adc
test
aas
sbb
nop
cmp
mov
push
stos
pop
psubb
lahf
aaa
xchg
mov
mov
call
push
sub
shrl
lret
mov
push
fadd
es
push
mov
call
sub
or
leave
lea
jg
lcall
mov
lret
iret
sbb
mov
pop
mov
rclb
ficoml
dec
cltd
pop
add
add
int
inc
xor
fcomps
sub
hlt
sahf
loop
jecxz
cld
push
pop
ficoms
insl
mov
sub
fimuls
sahf
test
mov
cmp
aas
and
adc
add
addr16
cmp
cmpsb
bound
imul
mov
pop
dec
loopne
jle
jle
mov
aas
push
pop
loopne
cld
arpl
pop
and
xchg
test
aas
mov
inc
xor
lret
push
dec
mov
sarl
adc
sub
or
add
mov
popa
cmpsl
mov
incl
cmp
loopne
push
idiv
test
xchg
xor
jmp
push
push
add
xchg
add
or
outsl
jns
imul
outsb
mov
aad
add
xor
mov
js
inc
movsb
rcll
push
mov
mov
outsl
mov
dec
outsb
push
or
cmp
jge
xchg
adc
addr16
adc
bound
mov
movsb
mov
add
int3
je
cmp
xchg
mov
push
ss
in
sbb
test
outsb
insb
push
dec
test
xorb
xor
jbe
mov
cwtl
jl
dec
rol
testl
lcall
jo
jmp
faddl
outsb
aas
js
addr16
mov
lds
out
jae
pop
dec
push
xor
test
cmp
xchg
xor
and
inc
bound
jge
pop
les
aaa
inc
jbe
mov
dec
add
xor
mov
bound
hlt
add
add
pusha
stc
shl
lock
shlb
inc
cli
adc
add
pop
cmp
jae
dec
cmc
mov
and
mov
scas
mov
add
into
or
dec
lahf
pop
stos
ret
inc
cmpb
mov
jno
cmp
ss
bnd
mov
aam
stc
mov
pop
shrl
sbb
fsts
les
ss
sbbl
fcomps
sbb
aad
out
pminub
pop
lahf
cmp
in
out
fsubrl
pushf
sbb
inc
adc
pop
std
mov
icebp
dec
lret
aaa
loope
add
lret
into
and
push
adc
data16
out
xchg
cld
dec
mov
jmp
and
push
addb
cmpsb
xlat
push
mov
jae
mov
int3
xor
jbe
mov
and
cmc
push
fisttps
push
adc
xor
jnp
or
xor
cmp
shrb
dec
push
shrl
cli
cmp
movsb
add
mov
cmp
out
stos
sarw
jle
push
ds
jae
add
cmpsl
jno
adc
movsb
xor
stos
repz
pop
inc
jmp
xorb
mov
icebp
in
lret
and
scas
adc
fldl2t
adc
fildl
xor
cld
jnp
test
cli
lret
mov
sbb
inc
xchg
lock
add
cs
xchg
adc
fisubl
ret
cmp
popf
clc
cmp
xor
xor
mov
mov
in
movl
popf
mov
in
mov
pop
scas
leave
daa
ja
and
mov
fnstcw
fisttpll
ss
pop
into
imul
xor
and
or
xor
aaa
mov
loop
or
push
or
or
jp
cmpl
sbb
ljmp
fistpll
mov
jmp
aaa
adc
adc
bnd
xlat
pop
adc
arpl
mov
aas
mov
sub
imul
leave
pop
adc
popa
xor
mov
sbb
jnp
dec
jno
aaa
xchg
lods
jmp
or
pop
jp
add
insb
sub
fadds
cltd
dec
cmp
push
shl
inc
pop
mov
push
repz
inc
movsl
fisubs
mov
adc
popa
xchg
xor
xor
out
movsb
mov
lahf
xchg
inc
out
inc
xlat
push
push
sbb
xor
mov
jo
in
insb
subl
mov
out
jo
mov
sbb
add
jmp
addr16
jg
ds
insl
sub
int
cmp
sbbb
movsl
pop
mov
ljmp
mov
add
add
mov
xlat
ljmp
lret
lahf
mov
mov
mov
pop
add
xchg
cmp
push
sub
test
aad
cli
jmp
cmp
call
mov
dec
xchg
dec
xchg
sbbb
rcrl
or
aas
out
lcall
popf
xchg
imul
and
or
pop
or
test
inc
add
je
mov
stc
shrb
pop
inc
cwtd
dec
jecxz
push
mov
add
sub
aas
sub
into
dec
clc
cmc
cmpsb
xor
or
bound
cmp
and
test
mov
stc
cltd
sarb
movsl
loope
adc
fwait
shlb
xor
jmp
stc
xchg
add
or
sbb
mov
jns
xchg
mov
mov
ja
push
or
outsb
or
lret
sbb
mov
mov
cld
je
and
loope
add
mov
or
testb
addr16
pop
test
push
dec
sub
outsl
aam
in
lods
rclb
jmp
mov
cmpsl
daa
xchg
clc
add
cmp
dec
xor
stos
out
pop
test
out
int3
cmp
and
dec
inc
lock
stos
scas
popa
rcr
pop
mov
insl
mov
insl
idivb
dec
inc
sub
jb
or
std
icebp
inc
mov
xor
pop
mov
mov
add
int3
xchg
lods
and
sbb
pushf
push
ret
fisttps
sub
je
or
push
cmp
xchg
js
test
rolb
fisttps
mov
fdivr
and
in
sub
imul
jno
rcll
sub
mov
pusha
bswap
jne
out
stos
add
bnd
sahf
push
lcall
jb
int
push
outsb
outsl
mov
rcrl
lods
stos
sbb
cli
sub
ret
jle
jno
dec
mov
adc
pop
imul
cmc
inc
xor
aad
xchg
inc
je
insl
cmp
leave
lods
and
aad
inc
xorl
cmp
std
addr16
push
inc
add
notl
adc
ja
mov
xor
mov
cmp
lret
push
insl
sbb
loopne
mov
imul
or
jns
clc
out
loope
pop
aas
cli
insl
xchg
jge
jmp
aam
jle
pushf
loopne
movsl
gs
cs
inc
add
icebp
aaa
mov
mov
stc
lret
inc
bound
aas
push
or
imull
adc
pop
mov
dec
push
aad
sbb
out
xchg
hlt
leave
rclb
adc
call
sbb
xchg
negl
push
lea
in
sbb
push
jno
cmpsb
xor
mov
mov
mov
int
imulb
push
mov
dec
jecxz
fsubl
js
aaa
jg
pop
aaa
das
int
sub
cmpsb
fnsave
sub
jb
cmp
mov
shlb
push
and
jb
push
cmp
cmp
in
and
sub
sub
pop
push
add
jo
imul
jno
cmp
xor
sbb
jmp
mov
xor
jge
mov
lret
xor
jmp
int3
inc
popf
mov
lods
mov
adc
pop
lcall
fldenv
nop
sbb
int3
xchg
inc
jl
push
lods
pop
push
ss
cli
mov
pop
arpl
xor
sub
fistpll
lea
push
pusha
ret
fidivs
fstps
fwait
mov
mov
mov
test
cmp
pop
mov
mov
inc
sbb
js
inc
xchg
cmpsb
pop
rorb
cmpsb
xor
add
sub
xchg
std
or
in
imul
notb
cmp
xchg
test
out
fcomip
jb
fsubl
pop
push
push
push
aad
mov
sbb
dec
iret
stc
test
andl
clc
loope
adc
cli
xchg
add
mov
jne
pop
ja
pop
xor
push
lds
cmp
jl
lcall
adc
cmc
repz
mov
dec
mov
cmp
imul
jb
inc
xsave
xor
mov
sahf
lock
and
fldenv
xor
and
fimuls
xchg
xchg
cli
or
xchg
sbb
sub
push
stc
scas
xchg
fisttps
push
mov
or
mov
sub
mov
xor
xchg
scas
imul
sbb
jo
fidivrl
in
incl
popa
cs
gs
add
push
out
jmp
ds
es
and
mov
rcl
adc
mov
pusha
mov
push
pushfw
dec
clc
rcrb
cld
mov
jp
call
int
dec
leave
xchg
adc
cmp
movb
xchg
add
xor
icebp
arpl
jbe
mov
cmp
mov
pop
pop
lods
mov
sbb
adc
mov
hlt
xor
popa
mov
mov
scas
subb
jge
xor
rorl
jmp
xorl
add
pop
ss
xchg
sarl
sbbl
imul
mov
sub
fsubl
or
pop
fdivs
push
lahf
cmp
push
xchg
push
or
mov
dec
cltd
test
cmp
mov
imulb
dec
dec
pop
outsl
adc
pop
stos
dec
jae
inc
pushl
jg
divl
push
repnz
call
add
movsb
mov
testb
cmp
sub
xor
icebp
or
out
jg,pn
sub
pand
cmpsl
push
xlat
inc
jb
out
pop
addb
aaa
mov
inc
bnd
adc
xor
inc
jb
out
pop
addb
aaa
mov
inc
bnd
adc
xor
and
jb
out
iret
addb
aaa
mov
inc
repnz
jecxz
adc
and
jb
out
call
mov
mov
int3
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
mov
mov
sbb
movsl
sbb
dec
in
mov
lds
mov
mov
jne
inc
sti
push
or
cmp
imul
aad
and
mov
jne
inc
sti
push
or
pop
xchg
dec
mov
xchg
sub
cli
inc
stos
popa
sar
les
jo
ret
mov
cmp
loop
sub
addr16
inc
ljmp
adc
sbb
xchg
sbb
pop
jle
lds
sub
jecxz
repnz
xor
and
aam
gs
dec
cmp
rol
call
fidivrl
mov
lods
sti
add
lret
push
mov
movsl
xchg
cmp
hlt
fdivrs
inc
call
pop
mov
adc
sub
jnp
mov
arpl
xchg
add
pusha
loopne
push
jbe
mov
rorb
movsb
fildl
or
lods
sarb
dec
and
mov
jne
inc
sti
push
or
cmp
imul
xchg
out
dec
clc
out
inc
std
push
scas
or
jnp
jle
pop
jmp
sti
int
sbb
fs
jg
add
nop
pop
scas
sub
fsts
cmp
mov
mov
mov
in
jno
popa
mov
inc
sti
push
or
cmp
imul
aad
and
mov
jne
inc
sti
push
or
cmp
imul
aad
and
les
mov
dec
xchg
and
lds
pop
cld
cmc
fsubp
in
mov
mov
xchg
dec
cltd
loop
sbb
mov
nop
jg
jge
jb
repz
inc
shlb
shrb
xor
mov
sub
sbb
mov
push
mov
lea
mov
push
sahf
out
jo
pop
popf
sbb
xchg
aas
imulb
push
and
aaa
dec
mov
push
pop
aad
or
add
test
das
and
cmp
js
sahf
je
dec
insb
test
lcall
jb
test
out
in
and
repz
xchg
arpl
movsb
roll
cmpl
arpl
inc
mov
jb
xchg
push
xchg
push
sub
stc
test
stos
cmc
xor
xchg
shll
aam
fs
lcall
add
outsl
pop
xchg
xchg
cmp
dec
fsubs
jmp
rcrl
cmpsb
mov
in
shrl
into
scas
fsubp
and
imul
jno
mov
rol
jmp
aad
into
push
les
sbb
fcmovne
sbb
inc
push
fstps
cmp
subb
add
gs
fld
imul
aas
push
pop
mov
inc
fwait
or
lcall
push
lahf
shrb
inc
pop
mov
xchg
leave
shl
xchg
cmp
cmp
aad
push
scas
das
push
pop
push
test
fidivl
jae
push
pop
mov
xchg
or
sub
cmp
adc
mov
mov
scas
mull
jne
movsl
or
notb
test
or
repz
lods
inc
sti
lea
and
int
cld
and
pop
lds
push
xor
insb
push
push
ds
stos
fiadds
stos
js
xlat
sbb
xchg
push
pop
lods
scas
jno
js
jmp
adc
sbb
fadds
lcall
xor
mov
cmp
lock
adc
adcl
xor
pop
inc
test
push
mov
fdiv
cmp
aam
scas
lock
fs
push
std
iret
jne
jle
mov
jmp
out
mov
sbb
mov
push
fisubl
and
imul
out
popf
cmp
and
das
movsb
mov
xor
pop
call
add
mov
leave
inc
mull
mov
pop
shr
jo
aad
and
movsb
int
and
test
push
pop
test
test
sub
out
pop
dec
test
jge
mov
test
bound
mov
ret
pop
test
sbb
lds
xchg
dec
addr16
and
cli
cmp
das
mov
push
mov
or
rolb
push
mov
loope
and
sbb
fwait
inc
lret
test
push
icebp
jns
mov
sub
dec
xchg
push
mov
sub
out
je
pop
cwtl
mov
movsl
mov
or
cld
sbb
cmpsb
push
sti
push
daa
hlt
sub
push
int
push
mov
jae
rorl
cmpsl
xor
pop
push
mov
jle
mov
jne
rcl
fucomp
fidivl
aad
imul
pusha
pop
jecxz
arpl
leave
ss
sahf
pusha
xchg
mov
cmp
andl
aaa
push
jp
xor
adc
lcall
aaa
dec
dec
mov
and
shl
cwtd
jmp
sbb
add
and
jge
je
mov
inc
lds
pop
jnp
dec
cmp
push
pop
addr16
pusha
ficomps
mov
pop
mov
cmove
mov
fldenv
iret
mov
mov
push
dec
hlt
es
ljmp
mov
push
int
cmp
cmovns
out
cmc
insb
rclb
pop
mov
inc
push
mov
fdivp
lret
aaa
push
call
dec
test
jle
sub
mov
imul
mov
es
cwtl
aas
xor
fst
mov
fsubrs
data16
aam
mov
mov
scas
xor
mov
jecxz
cmpsb
ret
xchg
add
jo
scas
inc
cmp
mov
xchg
inc
add
out
add
pop
out
js
es
and
push
in
jne
outsl
xchg
dec
insb
out
in
push
inc
push
and
andl
sahf
mov
js
lahf
mov
inc
testl
mov
xchg
aas
test
inc
lret
xchg
fstp
sub
out
xor
imul
faddl
xor
in
jne
std
xchg
in
movl
lahf
push
aad
jbe
movsl
push
mov
mov
test
inc
cmpsl
call
jmp
cld
pop
aaa
in
pop
iret
cld
xchg
ret
xor
inc
sub
daa
lahf
lods
adc
pop
and
inc
xchg
dec
pushf
testb
cld
stos
insb
lcall
gs
pop
js,pn
sbb
mov
loopne
sti
sbb
pop
fisubs
out
xchg
les
cli
fiaddl
jmp
mul
int
hlt
les
hlt
jp
push
aam
outsb
aad
mov
pop
sarl
out
mov
aam
insb
popf
and
ja
sub
ret
idivb
ljmp
mov
dec
dec
aas
sbb
jecxz
pusha
test
cwtl
test
repz
push
jo
pop
sub
cmpsl
shl
mov
test
push
je
sti
fmuls
ret
inc
mov
and
movsl
aas
fsubrs
aaa
mov
std
fldl
nop
and
and
repnz
test
lock
pop
test
subl
dec
sarl
xor
aaa
fcoms
cmp
hlt
clflush
dec
shr
mov
inc
cmp
and
stos
sbb
ljmp
ds
cmp
fidivrl
sbb
inc
jno
mov
mov
mov
out
sbb
xchg
in
xlat
or
xchg
cld
fiadds
mov
negb
add
inc
stc
sbb
inc
xchg
pop
not
push
ret
jmp
out
xlat
mov
mov
repz
push
clc
dec
loope
lret
cmpsl
adcb
pop
sbb
sub
jno
dec
mov
xchg
test
aas
mov
cmp
rcrl
mov
aas
shrl
repnz
fisttpl
cld
test
leave
andb
cmp
fdivs
ret
cmp
add
fldt
pop
in
pop
and
mov
in
xor
stos
jne
arpl
out
mulb
inc
xor
and
ret
dec
gs
pusha
or
push
rcrl
call
xchg
lea
ljmp
test
fs
out
ficomps
sbb
incl
jmp
inc
repnz
adc
cmp
lret
ss
divb
pop
sub
xlat
inc
pop
rclb
lods
inc
mov
fs
mov
sub
int3
dec
xchg
push
stos
xchg
mov
mov
test
mov
xlat
pop
popa
mov
jo
outsl
jg
hlt
cmp
fisttpl
and
mov
outsb
repnz
xchg
mov
sbb
mov
and
lcall
xchg
push
out
pop
shll
pop
arpl
cmpl
and
inc
les
mov
add
cmp
out
adcb
pop
repz
and
iret
add
or
loope
insb
mov
xor
push
inc
mov
pop
xor
movsl
xchg
push
and
and
adc
addb
adc
xchg
stc
test
xor
mov
sub
lods
fnsave
fstps
xor
movsb
dec
jae
xchg
sbb
mov
imul
jbe
mov
sbb
popf
das
outsl
fadds
mov
pop
cmpsb
xor
jecxz
fdivrs
test
rcll
pop
xchg
mov
lock
xchg
sub
and
pusha
cmp
push
out
push
cld
loope
pusha
out
pop
cmpsl
xorb
repz
int
push
cmpb
push
push
subb
imul
hlt
test
xor
cmpl
jle
data16
mov
add
inc
call
xchg
jb
loope
xchg
xchg
inc
push
lret
nop
dec
xor
jge
lds
outsl
cmp
push
pop
movsb
xor
gs
pop
and
stc
loope
push
push
and
clc
ss
adc
jno
movsl
mov
subb
and
js
das
push
test
dec
jae
mov
call
cmc
loopne
sahf
sub
js
add
idivb
add
ja
int3
pop
add
or
xor
jbe
and
xor
sub
xlat
push
adc
inc
fimuls
add
cwtl
stc
lock
loop
or
mov
cmc
fld
popf
sub
mov
xchg
jb
mov
mov
lcall
mov
xchg
in
gs
jbe
dec
xor
into
and
cmpsb
sub
cmp
inc
jbe
lcall
mov
movsl
cmp
sub
push
xor
xchg
imul
inc
dec
xor
sbb
pop
mov
and
cmp
push
ja
xchg
inc
notl
cmp
add
pushf
sbb
movsl
dec
xchg
es
mov
add
insb
and
push
xchg
pop
cmpsb
lods
mov
pusha
xor
ja
pop
insl
fldt
into
sahf
rolb
inc
inc
push
lret
outsb
inc
ss
jecxz
dec
xchg
xlat
jmp
lds
cld
int
sub
loop
scas
lret
ret
shl
sbb
sbb
mov
into
in
add
call
ja
sub
je
bound
xor
xchg
fcompl
jp
mov
push
and
stos
pop
icebp
daa
mov
cltd
mov
mov
addr16
bound
aas
sarb
popf
data16
sbb
mov
jno
cmc
mov
mov
in
push
insl
mov
or
adc
daa
addr16
jb
test
pop
cltd
dec
xchg
sbb
lods
loopne
rcr
push
cmp
mov
push
in
outsb
sub
nop
push
scas
aad
lea
repz
je
aam
movsl
stos
pop
enter
arpl
int3
jge
shl
test
pop
jg
das
mov
sub
pop
fldenv
lret
sarl
imul
mov
jae
adc
mov
xchg
shrb
fmuls
out
test
cli
xor
and
xchg
int3
adc
sub
jp
jecxz
jnp
iret
loopne
repz
mov
inc
test
inc
xlat
push
jnp
bound
sti
lret
insl
cltd
repz
or
push
mov
outsb
into
sub
push
push
push
shll
rcr
xlat
rolb
sub
sahf
lods
push
test
sahf
push
sbb
push
cli
outsl
popf
mov
dec
xor
jnp
or
inc
sub
arpl
js
pop
mov
jge
icebp
in
lods
sbb
sti
jns
add
push
movsb
outsl
xchg
xchg
inc
xchg
das
out
jmp
scas
adc
mov
pop
push
mov
rcrl
enter
popa
add
mov
mov
clc
fcomps
mov
add
add
jle
sub
shl
dec
xchg
mov
inc
push
xor
sbb
aad
and
pop
pop
mov
mov
fs
sbb
fbstp
stos
lahf
fs
mov
in
fstps
add
sahf
jne
push
testl
js
add
or
ret
cmp
je
stos
stc
aas
flds
dec
lds
loope
cmc
pop
out
call
xchg
addl
dec
out
ret
sbb
adc
shll
imul
xor
out
ja
jp
push
out
test
sub
and
lods
gs
mov
mov
dec
aam
in
loop
iret
dec
fildll
adc
test
xor
cwtl
aas
insb
mov
xor
enter
aaa
pop
mov
xchg
xor
movsb
inc
rclb
mov
push
sub
xor
push
pop
sub
sbb
scas
xor
xchg
ret
push
ljmp
outsl
in
xchg
js
ds
repz
mov
pushf
cmc
mov
sbb
aad
sti
sub
rorb
in
ret
dec
xor
sub
and
dec
mov
mov
lods
mov
aam
or
pop
jnp
dec
xchg
in
xor
mov
push
cmp
sub
in
data16
imul
int
lds
sti
sbb
imul
mov
pmovmskb
sub
imul
enter
aaa
in
cmc
mov
in
mov
or
sbb
add
fwait
and
pop
xor
test
sub
sub
nop
cld
in
js
in
rorb
jmp
out
lods
inc
js
adc
outsb
ret
jns
js
stos
xchg
dec
jge
lods
xor
jle
or
stos
ljmp
push
repz
subl
das
add
and
add
or
xlat
or
jns
outsb
lds
sbb
inc
cmp
xchg
inc
popa
frstor
push
rcrb
mov
cld
xchg
cmp
sbb
jb
xchg
lret
and
add
shr
repnz
leave
or
sbb
jae
cmp
divb
loop
push
aaa
divl
sub
iret
mov
sub
add
xchg
gs
add
cmp
sete
cwtl
rcll
imul
dec
sub
pop
push
add
wbinvd
mov
mov
inc
cli
ds
xchg
dec
pop
mov
loope
mov
xor
pop
cmovns
shll
or
ret
aad
js
cmp
xchg
xchg
int3
ret
in
cs
adc
mov
outsb
out
cmpsb
push
ds
fidivrl
mov
xor
test
cld
in
lods
cmp
xchg
inc
loop
rcll
insb
repz
and
mov
ffreep
push
out
outsb
rorl
mov
stos
inc
ret
lods
fdivrl
mov
and
dec
aam
dec
adc
sbb
pop
cmp
push
les
jno
fwait
js
add
adc
push
dec
scas
xchg
mov
push
hlt
mov
fidivl
push
pop
xchg
add
inc
in
pop
ja
push
mov
sti
sub
repz
out
xchg
clc
stos
jbe
test
sbb
imul
pushw
cmp
cmp
add
xchg
mov
jle
icebp
adc
add
fadds
popa
adc
jnp
or
jne
test
push
sti
rcl
xchg
ljmp
aam
dec
insl
test
cmp
daa
xchg
mov
add
mov
fcomps
std
fiadds
lock
in
test
in
mov
mov
repz
push
sbb
add
mov
repz
mov
dec
mov
sbb
mov
fdivrl
in
notl
stos
mov
mov
jg
flds
jo
cmc
ja
xorl
jne
adc
inc
push
jmp
xor
or
lret
lret
pusha
int
adc
ret
mov
push
dec
data16
lcall
sub
jl
mov
jbe
movsb
es
std
popf
jo
fldcw
jmp
jo
pusha
sub
mov
testl
in
xchg
mov
fdivrs
add
cmc
cmp
out
addr16
sub
or
cmc
dec
push
dec
adc
inc
mov
fsubrl
push
fsts
and
fwait
testb
out
dec
aaa
jo
and
mulb
xchg
or
add
in
push
or
sub
jno,pn
sbb
cli
dec
jmp
pop
add
push
repz
pop
cmc
cli
arpl
insb
popf
push
lcall
push
int
popf
pushf
scas
insl
jns
mov
lods
jnp
fidivl
lcall
pop
push
sbb
mov
js
or
test
cmp
in
stos
xor
flds
lods
dec
sbb
imul
xor
inc
fists
or
test
sub
inc
inc
xchg
xchg
into
push
pop
inc
adc
lods
cmp
lret
or
arpl
dec
sbb
insl
xchg
insb
adc
fidivrl
or
mov
jnp
into
rclb
xor
push
mov
es
pop
dec
fucomp
adc
jo
insl
cltd
jp
cmp
mov
and
cmp
outsl
adc
xor
imul
mov
std
adc
jp
and
aad
cmpsb
mov
gs
sub
cmpps
nop
add
pop
or
sub
cmp
in
sub
adc
xchg
and
movsb
sbb
mov
pop
loop
dec
mov
dec
fdivs
gs
and
push
fimull
sti
ret
leave
sub
pop
mov
pop
jle
les
mov
test
cmp
push
nop
dec
nop
movsl
xchg
cltd
xchg
sbb
pop
dec
in
push
loope
dec
cmp
mov
cmc
xchg
xor
pop
cmpl
xor
push
lahf
addr16
cli
ljmp
scas
rol
inc
mov
frstor
pop
dec
gs
iret
adc
dec
hlt
jnp
push
pop
lea
jmp
lcall
cmp
push
adc
cmp
xchg
gs
push
fwait
dec
cmp
pushf
adc
daa
js
idivl
jbe
scas
inc
xor
cmpsb
jmp
clc
loope
out
icebp
xchg
dec
jp
xchg
outsl
out
jge
das
adc
mov
cmpl
loop
leave
pop
inc
lahf
sbb
lods
ja
add
std
push
ficoml
dec
loop
sbbb
dec
cwtl
dec
test
idivl
gs
mov
xor
inc
mov
xchg
repz
rorb
test
jns
sub
mov
inc
test
arpl
inc
ljmp
iret
ja
lds
xchg
test
inc
push
mov
int
iret
mov
push
loop
push
lods
adc
xor
cmp
mov
daa
mov
hlt
test
pop
pushf
mov
fwait
jae
mov
mov
fcompl
jbe
add
cmp
mov
mov
pop
fs
out
and
repnz
hlt
sbb
cmp
mov
jp
popa
sub
mov
sbb
int3
sbb
mov
clc
pop
leave
loope
add
and
sub
enter
push
repz
loope
shl
fisttpll
xor
stos
adcb
leave
add
xchg
sub
jecxz
and
xchg
jne
imul
insb
fimuls
sub
pop
mov
and
inc
fdivr
xchg
mov
jno
sbb
sti
in
sbb
stos
addb
int
cli
and
inc
pop
clc
movl
mov
popa
xorb
lock
push
push
rclb
mov
ret
les
push
adc
jp
nop
aad
mov
mov
cmc
cli
ja
shrl
xchg
add
inc
pop
fisubrl
aam
pop
xlat
int
or
xchg
adc
inc
loop
pop
pop
addl
dec
mov
lods
repnz
jne
mov
out
pop
mov
mov
jle
push
adcl
out
nop
outsl
push
dec
pop
sbb
push
clc
lock
push
in
roll
sbb
jmp
push
in
or
push
lea
fdivrl
ljmp
dec
mov
inc
adc
imul
js
repnz
mov
cmp
shrb
jb
push
and
inc
stos
xor
pop
daa
fs
in
subl
clc
xor
insl
pop
fs
mov
and
pop
xor
pop
insb
cmp
add
xor
dec
jo
jle
sti
cli
jg
insl
sti
pop
test
fistpl
xchg
lds
sub
cmc
sub
je
xchg
cmpsl
xchg
jge
mov
ret
popa
das
mov
mov
jno
ja
mov
mov
js
insb
add
test
icebp
aad
loopne
test
in
into
shrb
fpatan
sub
cwtl
lret
test
jp
icebp
subb
stos
nop
adc
int3
in
test
mov
aaa
jle
popf
repnz
pop
xchg
in
ret
push
inc
lcall
std
xchg
or
fadds
lret
pop
xor
adc
fs
rorl
or
scas
cld
jbe
cmp
adc
dec
or
sub
lret
stc
lock
lret
mov
fidivs
and
inc
rorl
iret
cmp
cmp
mov
rep
pop
cmp
fldt
dec
xor
shrl
outsl
enter
xor
icebp
imul
in
xor
push
out
or
loope
loope
mov
shl
out
shlb
pop
pop
push
xor
mov
inc
push
sub
dec
cmp
imul
iret
sahf
jmp
pop
jns
sub
pushf
xchg
aas
ljmp
insb
add
mov
arpl
pop
xchg
add
in
push
push
adcb
outsl
cld
mov
adc
mov
xchg
lret
mov
out
and
loop
xchg
cmp
inc
xorb
ficoms
mov
pop
sahf
add
push
adc
jnp
enter
xlat
popf
mov
sub
mov
mull
aam
dec
mov
jnp
mov
cmp
mov
sbb
mov
fs
xor
push
mov
adc
xchg
mov
sub
inc
mov
dec
add
cmp
pushf
inc
div
mov
ja
clc
sub
lods
jge
xchg
out
xor
sbb
mov
push
andb
fistpl
mov
inc
and
jbe
cld
cltd
xchg
arpl
mov
sub
mov
test
xlat
push
mov
shrl
mov
loopne
mov
insl
mov
ja
jne
add
sub
mov
mov
inc
sbb
adc
shlb
push
repz
aas
gs
jno
cmp
fsub
push
inc
scas
add
fwait
leave
scas
outsl
inc
push
mov
xor
cmp
sbb
lcall
shlb
sbb
mov
repz
pusha
mov
cmp
sub
or
mov
inc
movsb
jg
lret
in
lea
cmpsl
cld
ret
add
sub
jae
jle
push
bound
fisttpll
in
mov
sbb
mov
mov
push
fwait
jle
or
pop
mov
mov
inc
pop
or
dec
or
insb
rorl
mov
sbb
xchg
adc
lods
js
lods
jg
outsl
add
push
test
push
xchg
scas
and
dec
cmp
pop
and
push
enter
aad
mov
mov
movsl
mov
jle
or
pop
rcll
mov
jne
inc
sti
push
or
cmp
imul
aad
and
mov
jne
inc
sti
push
or
cmp
imul
aad
and
adc
fidivl
inc
sti
push
or
cmp
push
jnp
mov
mov
cmc
imul
stos
hlt
pop
in
addl
subl
int3
int3
int3
int3
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
push
mov
push
mov
push
push
push
push
movl
movl
movb
call
andl
andl
push
mov
push
mov
movl
movb
movl
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
mov
movb
movb
call
mov
lea
push
movl
call
pop
pop
leave
ret
add
and
push
xor
cmp
adc
and
in
dec
repz
repz
je
and
inc
xor
and
adc
sub
fdivrl
movsb
jecxz
repz
rorb
mov
pop
add
insb
jnp
jae
lcall
mov
out
ret
movsb
loopne
xor
pop
inc
and
cmp
mov
jg
sbb
xchg
jmp
lret
insb
shrb
xorb
pop
and
scas
out
out
push
or
xchg
xchg
mov
or
cld
sbb
cmp
sbb
fucomp
in
pop
aam
insb
hlt
fwait
aad
cmp
inc
das
pop
jecxz
repz
add
ljmp
adc
aam
mov
jno
add
sub
mov
repz
push
mov
sarl
cs
clc
adc
mov
xor
xor
mov
jecxz
jmp
repz
fs
xchg
mov
fs
jl
push
mov
add
scas
xchg
and
js
out
lret
inc
and
xor
inc
and
adc
xchg
lcall
clc
fisttpl
repz
je
or
inc
sub
xchg
xor
inc
xorl
cmpsl
ret
repz
xchg
loopne
in
insb
xor
dec
daa
inc
sub
push
jbe
jge
aaa
rclb
hlt
ret
sti
mov
mull
jg
dec
cmp
or
and
adc
add
hlt
xchg
in
aam
movsb
jecxz
repz
je
and
inc
xor
and
adc
add
hlt
xchg
in
aam
movsb
jecxz
repz
je
xor
push
cmpsl
inc
pop
lods
push
ret
lds
adc
cmpsb
xor
shr
int3
or
add
cwtl
fcoms
mov
aaa
icebp
loop
mov
sub
in
fmull
repnz
test
or
inc
mov
xchg
aas
adc
mov
and
lea
and
pop
es
mov
ficoml
dec
mov
rorb
mov
jno
xor
add
enter
jmp
outsb
fs
or
pop
loope
push
or
or
mov
mov
stos
in
lods
jae
xchg
stos
inc
or
pop
sub
pushf
scas
adc
lea
mov
mov
mov
pop
xlat
shll
cmp
jbe
mov
adc
imul
mov
add
inc
fistpll
mov
js
jbe
dec
rcll
jmp
es
fisubrl
pop
andl
xor
sub
pop
adc
fst
fadds
dec
mov
pop
jg
dec
xchg
jge
xchg
xlat
jmp
lods
scas
xor
aad
or
pop
cld
mov
repz
mov
mov
hlt
mov
jp
lds
mov
enter
fadd
fcmovnb
rcrb
dec
ljmp
add
and
inc
ja
add
loopne
sub
sti
adc
orb
xor
jle
mov
pop
andl
inc
push
leave
inc
mov
fidivs
mov
adcb
sbb
leave
mov
or
inc
inc
adc
jns
lahf
xchg
jmp
dec
ret
push
fs
into
pusha
mov
sub
and
test
cmc
scas
adcl
xchg
or
insl
adc
sub
xor
out
xchg
icebp
add
mov
and
jne
sbb
mov
sbb
sahf
sarl
jle
clc
inc
fsubl
adc
jg
test
enter
mov
in
push
or
push
js
jge
call
xchg
aaa
mov
movsb
bound
pop
jl
in
adc
mov
dec
fsincos
pop
mov
fisubl
fbstp
movsb
notb
shrl
stos
dec
mov
pop
mov
mov
in
mov
inc
sahf
and
xchg
nop
add
cltd
push
nop
addr16
daa
aas
sbb
lock
mov
out
xchg
mov
adc
pusha
sbb
in
cli
in
shrl
push
add
pushf
scas
push
ljmp
repz
mov
insl
push
nop
loopne
data16
cmp
mov
dec
and
mov
and
xchg
sub
pop
push
push
les
push
pop
loopne
outsb
xor
pop
test
mov
inc
jo
pop
in
cmpsb
and
jl
cmpsl
repnz
rcll
lret
ds
das
out
mov
scas
pop
mov
inc
les
out
or
cmc
pop
mov
std
outsb
inc
sub
push
loopne
jmp
icebp
popf
std
sub
pushf
inc
mov
iret
cmp
pop
icebp
fsubrl
sbb
stos
ja
pop
hlt
lock
ss
mov
cld
ret
sub
or
lds
inc
push
popf
rcrb
clc
lods
dec
pushf
enter
ss
js
inc
fildll
mov
push
leave
sarl
das
fiadds
mulb
and
jb
add
addr16
adc
lret
pop
popa
call
mov
xor
pop
pop
cltd
add
into
sbbb
lahf
movsb
or
aam
test
repz
clc
and
jmp
fsubs
mov
in
xchg
leave
lret
in
das
adc
stos
test
pop
or
and
movsb
pop
push
push
add
pop
insb
scas
js
cs
or
push
pop
in
je
testl
sub
add
or
lret
jbe
fadds
adc
outsb
insb
and
and
daa
es
in
nop
add
out
or
push
rorl
outsb
jle
dec
or
mov
xchg
push
mov
pusha
fistl
pop
cli
pushf
test
fldl
sahf
cli
aas
push
movsb
nop
icebp
popf
mov
or
dec
loopne
les
in
inc
and
jge
ljmp
mov
jae
xor
sbbb
in
cld
add
jne
push
xchg
sub
insb
dec
sbb
lods
sbb
pushf
cmc
push
mov
in
insl
cmp
shr
cli
jp
sti
je
sbb
dec
leave
xor
bound
repz
adc
insl
xor
loopne
cmpsl
ljmp
lret
dec
sub
jecxz
test
repz
daa
push
pop
stos
cmp
movsb
out
or
lods
cmc
or
lods
unpckhpd
and
and
jne
dec
push
out
int3
sub
fs
mov
adc
push
sti
inc
adc
fwait
dec
mov
out
sbb
in
out
popa
movsl
lods
loopne
cmp
pop
xchg
mov
sahf
adc
cmp
jl
push
lea
loope
daa
fnstsw
jae
inc
jns
xchg
xor
loopne
xchg
xlat
shlb
lods
sbb
jmp
lock
sbb
mov
cmpl
sarl
and
scas
mov
add
sbb
inc
daa
outsl
and
cltd
push
xchg
mov
icebp
mov
je
shl
inc
sbb
daa
mov
adc
xchg
xor
push
mov
std
jle
and
adc
mov
pop
dec
int3
cmp
mov
push
lea
cmp
sbb
gs
dec
xchg
lods
int3
pop
jl
rcrl
add
leave
cwtl
fs
lcall
cmpsb
movsb
fmull
jns
addr16
dec
mov
in
shrb
xor
pusha
in
push
shrl
mov
test
in
filds
outsb
push
mov
xlat
std
and
push
scas
xor
cmp
rcr
push
ljmp
das
push
and
repnz
pop
ja
push
outsl
mov
jb
cmp
inc
mov
and
sub
xchg
adc
repz
imul
adcl
xor
xor
cli
shll
test
mov
movsb
es
xchg
call
test
pop
jecxz
iret
mov
inc
push
adc
lea
mov
or
xchg
cmpsb
pop
jge
test
jb
pop
lea
dec
cmp
adc
and
bound
add
xor
push
push
jbe
jae
fst
cmp
dec
arpl
xor
adc
dec
xchg
arpl
cmpsl
jg
sbb
mov
cmp
test
outsb
mov
and
jnp
adc
cmp
dec
dec
inc
std
push
mov
cmp
clc
test
movb
movsb
int
mov
push
sti
scas
push
pusha
leave
xchg
testb
dec
push
cmp
jb
push
add
dec
cli
mov
cmp
shr
in
push
xchg
pop
pushf
loopne
or
movsb
pop
into
cmc
push
and
in
int
xor
cwtl
push
aaa
xchg
test
cld
pop
push
shl
and
jbe
shrb
mov
cmp
mov
xchg
push
movl
push
pusha
adc
outsb
xor
iret
mov
mov
cmpl
xchg
lds
jge
stc
pop
repz
xor
and
das
ds
mov
lea
scas
dec
fbstp
cmc
cmpsl
dec
inc
gs
cmpsb
jne
and
mov
outsb
dec
in
enter
or
mov
call
add
les
mov
mov
xchg
push
mov
lods
cli
pop
enter
fisubrs
popa
out
sub
push
cmovns
or
mov
cmc
cmpsb
pop
push
adc
pushf
aas
rcrb
rcrb
add
sbb
push
mov
inc
add
mov
adcl
test
sahf
into
push
sar
les
call
sbb
adc
adc
xor
lret
adc
shll
rcr
subl
insb
sub
dec
jg
js
mov
xchg
outsb
xor
shrb
adc
cmc
xchg
sbb
push
pop
jae
xchg
les
movsl
call
int3
idivb
std
dec
mov
clc
out
nop
xor
push
inc
mov
jp
sub
fldl
lahf
icebp
imul
xor
push
dec
or
cs
cmpsb
inc
popa
ss
pop
cltd
xchg
mov
mov
xor
mov
sub
jp
or
sub
mov
jl
jge
mov
mov
stc
int
scas
jp
xor
das
lods
add
pop
data16
inc
and
fistpll
xor
mov
xor
inc
xlat
lds
mov
lods
stos
pop
pusha
data16
inc
loope
push
sahf
dec
fucompp
mov
add
int3
aam
jns
sub
js
lods
adc
in
adc
sub
shrb
aam
loope
inc
jp
das
fistpl
xor
mov
mov
inc
lcall
fdivl
sti
mov
inc
mov
lds
push
xor
insl
dec
mov
push
idivb
adc
jmp
cltd
jl
jno
fs
mov
scas
push
sbb
jecxz
mov
or
scas
push
sbb
xlat
test
into
sub
add
xchg
and
cmp
adc
in
je
pop
pop
dec
fsub
xor
iret
adc
jle
out
adcl
movsl
sub
add
add
lock
or
mov
adc
lock
cmpsl
pusha
dec
pop
mov
mov
jns
test
mov
mov
scas
jg
aam
pop
add
dec
hlt
adc
neg
dec
pushf
mov
xchg
int
insl
insl
push
jl
push
push
mov
xchg
out
ds
add
fstpt
cmp
push
rclb
scas
es
call
mov
mov
ret
dec
fxch
in
mov
movsl
mov
adc
insb
ss
xor
aam
roll
jl
xor
gs
out
test
test
adc
pop
loop
ret
push
xchg
adcl
xor
outsl
pop
add
ret
xchg
fs
pop
cmp
inc
xchg
jecxz
fdivs
imul
inc
xchg
imul
jae
shlb
sbbl
out
fmull
fiaddl
xor
sub
push
dec
sub
pop
and
mov
mov
mov
and
sub
xor
test
xchg
jg
sbb
popf
ljmp
fwait
enter
out
cltd
sbb
push
sub
xchg
adc
mov
ja
popf
je
mov
popa
mov
xchg
jb
in
in
out
jle
jnp
outsl
out
or
xchg
scas
jmp
aam
test
stos
ret
cwtl
jp
push
and
aam
cltd
and
pop
or
and
mov
inc
xlat
shrl
jge
mov
xchg
jg
mov
pop
mov
int
out
icebp
ds
xchg
sbb
dec
in
pop
mov
push
cmp
xor
sub
inc
imull
out
sub
lock
stos
xor
cmp
mov
sbb
jecxz
mov
push
enter
dec
lret
push
mov
or
mov
ja
adc
test
add
cwtl
sahf
pop
jl
pop
lret
and
fldl
scas
sahf
cli
int
push
stos
mov
fcomps
sbbl
mov
inc
into
in
pop
repnz
outsb
sbb
adc
add
mov
js
fdivl
xchg
into
mov
and
xchg
test
xchg
add
and
push
pop
and
lcall
clc
jns
data16
loope
lret
and
fidivrl
jae
lret
jle
pop
dec
out
scas
mov
scas
sarb
outsb
push
mov
adc
and
xchg
scas
aas
ret
dec
out
ret
xlat
pop
idiv
add
insb
inc
mov
jp
in
pop
xchg
pop
sub
sbb
sub
mov
bound
jmp
mov
sbb
mov
xchg
jnp
push
popf
jcxz
jo
push
inc
mov
imul
jg
or
icebp
jmp
inc
xchg
std
negb
push
pop
sbb
sahf
sbbl
or
mov
cmp
shlb
mov
dec
push
jle
xor
lods
fcomi
out
ja
jns
scas
outsb
out
adc
jecxz
add
imul
test
xchg
push
sti
mov
add
and
cmp
cmp
pop
adc
push
sub
sub
inc
push
cld
or
repz
out
incl
int
aaa
in
mov
aam
addr16
push
cltd
fdivl
hlt
xor
cmp
daa
dec
ja
insb
aaa
pop
adc
sbb
mov
xchg
popl
mov
pop
jl
loope
pop
xchg
jae
mov
ret
stc
xor
iret
push
xor
loop
inc
in
inc
cmp
and
adc
ljmp
inc
mov
ret
mov
sub
inc
sub
inc
add
pop
xorb
cmc
sub
lret
jns
push
dec
repz
pop
jl
dec
mov
adc
cmc
sti
int
test
sub
xchg
popf
dec
cli
repz
cmp
inc
push
into
jg
fxch
das
rorb
cwtl
mov
inc
cmp
popf
lahf
and
cmpsb
enter
stos
mov
pop
scas
jnp
mov
test
shll
sbb
cmp
cli
add
popa
in
pop
or
cmp
xchg
mov
and
dec
jns
cmp
loopne,pn
sbb
push
push
adc
jns
cmpsb
add
rorl
adc
xor
cmp
jg
push
xor
push
sbb
cmp
add
or
aaa
fdivs
cld
in
scas
xor
jno
std
mov
mov
mov
insl
sbb
aas
lods
scas
int
fsubrl
in
cmp
insl
dec
scas
dec
fstps
arpl
pusha
outsb
mov
push
imul
dec
test
jb
and
scas
dec
xchg
mov
scas
ficoml
and
jno
test
xchg
dec
or
xchg
nop
pop
ss
ja
xchg
ss
addr16
jg
dec
sub
mov
sub
out
imul
mov
aam
lods
mov
mov
dec
fidivs
out
xchg
imul
mov
sahf
loopne
ret
outsb
mov
js
ljmp
rcrb
mov
repnz
fbstp
not
idiv
jne
inc
pusha
dec
aaa
mov
jmp
jmp
test
bound
sub
bound
cs
mov
rcr
rorb
jae
mov
mov
sti
xchg
hlt
push
mov
and
std
mov
jae
adc
sub
data16
hlt
jecxz
decl
testb
ficoms
jb
sbb
mov
pop
sub
mov
dec
gs
inc
inc
sbb
fidivrl
scas
push
popf
xchg
cmp
xchg
iret
and
pop
xchg
jp
mov
arpl
pop
sub
sub
jmp
dec
cmpsl
add
leave
push
mov
mov
mov
jns
mov
pop
sbb
fmull
cmp
scas
push
adc
xchg
sti
fsubrl
outsl
fstpt
pusha
push
ja
sub
and
push
mov
lds
inc
lcall
cmpsb
xchg
repz
in
orl
cmp
push
inc
dec
mov
int3
sbb
mov
push
dec
sub
push
mov
loope
ljmp
out
testb
and
mov
mov
popa
lock
ljmp
mov
je
jmp
fmuls
push
cmp
test
call
insl
mov
inc
jns
cli
sti
sub
jecxz
scas
pop
xchg
loopne
xchg
cmp
shll
push
pop
adcb
mov
pusha
pop
mov
adcl
xlat
mov
pop
jmp
dec
add
scas
xor
pop
loopne
push
sahf
aas
loope
movsl
lods
mov
stc
lods
push
idivl
xchg
xchg
lods
mov
pop
push
mov
int3
loopne
aam
adc
mov
sbb
into
xchg
mov
xchg
test
xchg
sbb
fidivrs
movsb
loope
cmp
icebp
in
testb
adc
push
sbb
xlat
pushf
mov
daa
int3
enter
lret
aaa
sbb
out
push
arpl
stc
push
xchg
push
iret
adc
rorb
inc
fcomi
xor
jle
mov
je
hlt
pop
lds
out
jl
sub
or
pop
lahf
jmp
pop
data16
leave
rcl
lret
mov
xlat
or
mov
adc
xor
add
lcall
int
xchg
sub
lea
jmp
movsb
insb
mov
mov
lods
jmp
outsl
rep
mov
pop
fistpll
out
xchg
ret
mov
mov
push
mov
rcrb
mov
sub
cmp
jmp
out
dec
ret
std
jo
lahf
bound
xchg
sti
cmp
sbb
stc
inc
roll
mov
shl
int
jg
outsl
lock
jg
mov
shl
scas
jge
add
cmpsl
adc
nop
mov
push
xor
cwtl
cmp
nop
arpl
push
adcl
int
aam
lcall
xor
cmpsl
inc
add
sar
jno
mov
stos
xchg
filds
mov
sbbb
popa
inc
in
pop
mov
mov
sub
sub
loope
mov
ss
imul
repnz
out
xlat
adc
popf
sbb
fldt
push
iret
sbb
ljmp
push
cs
outsb
aaa
xchg
lret
cmp
imul
lcall
imul
mov
sbb
lret
shrl
and
fadds
jl
push
pop
dec
mov
in
imulb
pop
inc
inc
cmp
adc
call
jg
lcall
ljmp
lret
shll
popa
push
imul
lcall
lock
loop
pop
fcmove
fcmovne
fs
pop
int3
jl
cmpsb
stc
mov
pop
loop
xor
mov
scas
jle
shll
std
in
stos
clc
jecxz
gs
call
push
aad
dec
pop
lahf
ret
dec
pushw
aas
int
sahf
xchg
jecxz
in
outsb
pop
out
stos
dec
hlt
js
push
leave
cmpl
inc
shlb
gs
std
or
out
adc
cmpsb
repz
insl
cwtl
push
test
dec
es
inc
cwtl
inc
and
movaps
mov
cli
jns
and
into
xlat
mov
mov
out
or
inc
jl
and
movsl
cmp
xchg
les
adc
push
test
into
fsubl
cmp
shll
in
cmp
push
popa
adc
sub
out
mov
pop
mov
mov
aad
out
lods
xchg
add
ret
xchg
cmc
jle
mov
fcomps
sbbl
mov
mov
inc
push
pop
enter
sub
adc
mov
sub
out
pop
cmovne
mov
xchg
arpl
jbe
cmp
inc
jnp
xorb
lret
mov
int
push
stos
dec
fstl
test
or
ja
cli
push
cld
sbb
stos
fmulp
jle
mov
cli
data16
jae
hlt
push
push
test
push
xchg
or
shrb
stc
xor
push
testb
outsb
xchg
or
xchg
negb
test
and
repnz
inc
jl
xchg
sub
sub
in
movsb
cmp
push
aaa
mov
movsl
popa
or
cmc
inc
test
and
loopne
ss
xor
subl
mov
jle
mov
xor
fstps
loope
jg
je
cmp
ljmp
scas
cmp
in
add
cmp
mov
iret
xor
mov
adc
jns
popa
cli
pop
xchg
testl
cs
imul
or
pop
pusha
loopne
or
mov
js
or
push
xor
insl
xor
mov
lds
in
pushf
fidivl
aam
dec
cmp
scas
pop
test
sbb
movaps
pop
push
add
mov
test
iret
sub
iret
and
lods
adc
popf
not
cmpl
xor
push
xor
imul
mov
divl
pop
clc
js
or
lds
pusha
hlt
subb
push
test
dec
add
mov
andb
roll
js
or
ljmp
push
push
xchg
mov
sub
mov
xchg
int3
xlat
aaa
pop
js
sbb
sbb
jmp
jl
mov
in
mov
bound
mov
adc
inc
outsb
addb
stc
xchg
sti
js
jnp
push
adc
scas
pop
cmp
sub
and
pusha
lret
icebp
sarl
pusha
push
mov
daa
cwtl
mov
repz
mov
hlt
dec
hlt
mov
mov
dec
insl
pop
xlat
add
push
ret
push
fisttpl
stos
mov
sub
fbstp
lods
pop
pop
lock
push
jbe
das
pop
mov
outsb
pop
aam
xchg
pop
jp
xchg
add
or
int
outsl
mov
nop
pop
inc
pop
cmc
lds
xor
jnp
in
cmpsl
push
add
iret
addb
jnp
sub
addl
leave
mov
pop
lock
cltd
ffreep
mov
es
inc
das
push
sbb
ja
xchg
in
imul
fwait
ret
cmp
stc
cmpsl
inc
cmc
xchg
mov
sbb
add
cmp
iret
pop
gs
pop
mov
loope
or
dec
mov
incl
fdivrl
lret
in
scas
pop
add
js
les
lds
ret
sbb
lock
inc
shl
aam
xor
pushw
jae
imull
mov
outsb
mov
test
out
ja
imul
adc
filds
cmpsb
xor
in
je
mov
or
pop
jbe
cmp
adc
push
in
jnp
repz
jg
lea
cs
mov
push
in
mov
add
sub
xor
ficomps
dec
not
imul
mov
add
popa
and
cmp
jno
negl
push
js
pop
pushf
out
scas
fists
xor
sbb
mov
adc
inc
pop
pop
aas
leave
pop
adc
les
jo
xchg
test
jle
mov
dec
inc
mov
loopne
or
andl
inc
data16
roll
adc
in
dec
test
mov
sub
ljmp
in
fcoml
fisttpll
cld
xchg
or
hlt
or
test
sarb
lcall
jns
ss
adcb
xor
jne
test
roll
or
jl
pop
xorb
sub
inc
inc
xor
and
adc
add
hlt
xchg
in
aam
movsb
jecxz
repz
je
and
inc
xor
and
adc
add
hlt
xchg
in
aam
movsb
jecxz
repz
jo
push
dec
xor
xor
dec
arpl
jae
xor
loopne
aam
int
mov
movsb
jecxz
icebp
pusha
add
xor
xor
and
xchg
repz
dec
or
mov
mov
pop
fcompl
or
int3
int3
int3
int3
int3
scas
pushf
in
aam
les
fsubr
in
xor
or
cmp
sub
pop
fs
adc
add
jecxz
in
in
les
cld
test
jle
fs
xor
sub
pop
and
insb
in
pushf
std
mov
mov
mov
in
je
outsl
or
pop
xor
sbb
addr16
insl
insb
test
std
mov
es
popl
test
inc
fadd
sbb
or
aam
aam
jae
pop
xor
lods
mov
cmp
jae
clc
sub
cmp
popf
dec
push
sar
movsl
sbb
jbe
fwait
repz
mov
mov
mov
sysenter
jo
lods
xchg
fnsave
adc
or
push
ret
sbb
ja
push
sub
adc
sbb
cmp
flds
fwait
pop
inc
ret
inc
in
sahf
dec
and
loope
or
jae
fimull
or
scas
or
imul
mov
push
in
aam
shrl
cld
popf
in
insl
sbb
or
cmp
sub
pop
cmp
adc
sbb
mov
mov
int3
xchg
mov
mov
es
sub
cmp
popa
sub
mov
faddp
xchg
lret
mov
in
jbe
fs
pop
xor
aas
push
daa
sbb
popf
aad
fbstp
fsubl
je
fs
cmp
sub
pop
and
adc
add
hlt
pushf
in
aam
les
cld
test
je
fs
cmp
sub
pop
and
adc
add
hlt
pushf
daa
lds
adc
es
jb
push
lcall
pushf
adc
push
cmpsl
imul
jnp
ficoml
dec
aaa
nop
pop
cmp
dec
mov
jge
and
xchg
test
add
or
fbstp
and
inc
test
cltd
cmp
dec
xchg
mov
and
xchg
aam
inc
adc
push
shll
fnstenv
out
push
fs
add
nop
mov
das
ret
ret
test
aad
jbe
push
insb
in
push
add
fdivs
mov
mov
add
cmp
inc
mov
cmp
add
xor
outsb
cmp
fists
nop
jo
xchg
sbb
pusha
shl
orl
je
and
and
xchg
dec
dec
xchg
sti
dec
push
inc
insl
or
stos
mov
inc
mov
fadds
ret
jne
mov
jo
dec
dec
data16
andb
add
mov
lcall
xchg
daa
push
mov
or
cmpsb
imul
mov
adc
imul
gs
test
shlb
and
pop
aad
out
test
mov
dec
ss
sbb
js
cmp
mov
cmpb
stos
cmp
xchg
int3
jno
xchg
push
cltd
jle
dec
dec
cltd
push
ret
das
jno
adc
movsb
out
lds
arpl
add
mov
push
xchg
cmp
mov
jecxz
mov
aam
stos
int
xor
xchg
jmp
mov
cltd
mov
lret
decb
test
out
lods
or
jle
rorb
xchg
stos
scas
add
push
orb
insb
je
xchg
inc
mov
imul
test
sahf
insb
mov
lock
cmpb
sub
cmpsl
pop
je
xor
jle,pt
scas
js
cmp
jl
add
out
push
leave
and
or
test
dec
add
sub
mov
data16
sbb
sbb
jns
mov
scas
jmp
jbe
sti
loopne
shrl
imul
cs
sub
stos
mov
mov
jle
data16
jb
jge
rcll
adc
negl
mov
cmp
por
push
cmp
movsb
iret
mov
add
inc
lods
insl
mov
inc
xor
xor
cmp
inc
mov
xor
int3
iret
jno
jnp
lods
popf
cmpsl
mov
dec
sub
out
mov
push
in
xchg
add
lahf
jo
mov
jae
cmc
and
cmp
push
sub
nop
daa
push
jp
aaa
std
outsb
inc
dec
clc
call
out
cmpsb
mov
sub
jmp
xor
sbb
cld
mov
addl
push
pop
cwtl
movsb
bound
xchg
mov
or
into
sub
out
fimull
cmpsl
inc
mov
nop
dec
mov
push
add
test
mov
push
adc
out
mov
sbb
sarl
lea
mov
leave
sahf
subl
stos
and
cmc
outsl
xchg
lret
adc
subb
fnstsw
fisubs
or
inc
popf
and
out
pop
cmpsb
dec
sbb
mov
sub
fs
xor
mov
xchg
add
sub
and
nopl
cmp
pop
lods
lret
cmc
add
cmp
jge
adc
cmp
pop
fstps
aad
add
mov
jno
pop
pop
pusha
icebp
ss
faddl
sti
fimull
stos
fdivs
mov
lds
sub
mov
xchg
dec
test
das
mov
jb
add
jno
or
mov
mov
sti
ret
lcall
fs
fisubl
sub
jb
arpl
pop
adc
mov
lods
push
mov
pop
arpl
mov
les
cmp
idivb
cmp
xor
and
out
adc
push
lods
clc
bswap
imul
push
mov
stos
pushf
loop
adc
push
sbb
stos
push
sbb
xchg
xor
idivl
inc
scas
or
inc
inc
lods
repz
inc
orl
sub
sarl
ja
and
jecxz
fcmovne
sub
or
ds
push
dec
repz
or
xor
cmpsl
ss
cmp
fisubrl
or
imul
enter
or
add
sti
mov
imul
cmp
xchg
daa
lock
jl
ds
adc
test
add
stc
addr16
cmc
dec
xlat
icebp
dec
dec
push
outsb
rcrl
out
sbb
or
ja
test
cmp
arpl
pop
mov
xchg
push
or
lods
dec
call
lahf
cmp
sarb
loope
insb
lahf
ret
xor
xchg
insl
push
sbb
orl
addr16
lcall
jecxz
repnz
stos
test
rclb
stos
sarl
mov
mov
loop
popa
xchg
pusha
je
pop
sahf
lock
in
cmp
or
addl
add
shl
xchg
xor
loop
aam
dec
out
dec
dec
lret
lcall
dec
mov
pop
rorb
addl
in
inc
mov
sub
in
jns
popf
sbb
pusha
mov
sub
popf
fdivp
jb
xchg
addr16
mov
dec
call
sti
mov
xor
jae
clc
movl
inc
xchg
mov
repz
push
xchg
insl
ret
cld
popf
dec
movsl
les
decb
imul
xor
pop
fs
pop
lods
dec
push
mov
out
push
addr16
repz
imul
aaa
insb
faddl
pop
jnp
xchg
insb
push
jno
lods
pop
jb
jl
jnp
adc
sarb
lods
icebp
push
lods
xor
pop
inc
cld
mov
push
or
test
add
xor
mov
out
jge
and
xchg
adc
es
ret
xlat
bound
or
mov
outsb
inc
xor
xchg
cmp
xlat
loop
subb
outsl
stc
xor
fwait
sub
jno
sti
adc
int
jno
ret
cmp
rclb
jno
das
sti
int
pop
xor
push
shrb
jno
push
stos
pop
bound
pop
cs
rcrb
inc
icebp
add
inc
push
iret
ret
jg
cmp
add
into
adc
xchg
push
cmp
cld
in
sbb
daa
adc
xor
enter
das
popf
jp
inc
sbb
jno
in
push
orl
pop
sub
dec
cmp
rorb
inc
add
stc
out
les
pop
in
imul
adc
sub
fidivrs
jo
xor
sti
sub
cmp
aad
xchg
cmpsb
lret
rcrl
fdivs
orb
adc
dec
sbb
inc
incb
fmuls
gs
daa
add
lods
jle
cmp
jmp
test
sbb
dec
das
movsl
push
xor
and
out
xor
bound
movsb
inc
push
push
inc
repz
leave
adc
ret
push
fsts
into
push
jno
mov
push
xlat
sbb
inc
mov
mov
cmc
mov
add
lods
test
lods
outsb
mov
jno
fwait
xor
jle
mov
fisubrl
add
mov
mov
xchg
mov
inc
jg
pop
out
sbb
sbb
push
nop
xchg
xor
in
jns
loop
arpl
rol
inc
scas
popf
mov
jle
jne
das
xor
subl
cmp
add
xlat
cmpsl
or
fs
xchg
adc
loop
sti
or
das
and
cli
mov
push
ja
in
pop
cmc
sahf
fnstenv
cltd
sbb
xchg
out
dec
or
dec
andb
cmpsl
xchg
mov
data16
dec
mov
inc
push
movsl
icebp
inc
mov
jb
xchg
mov
lret
insl
push
xor
lcall
pop
cmc
out
stc
fsubrs
mov
dec
push
mov
mov
xorl
loop
or
inc
aaa
inc
lcall
inc
data16
jno
jo
fwait
leave
mov
jg
out
js
test
clc
adc
jb
pop
push
aad
lods
mov
jae
stos
fsubrs
pop
inc
push
xchg
outsb
js
cld
scas
mov
aad
add
push
imul
cli
imul
pop
and
mov
push
scas
nop
sbb
incb
aad
shll
xlat
mov
mov
and
es
insb
mov
mov
iret
test
dec
mov
je
bound
rolb
and
push
dec
inc
inc
aaa
fsts
and
out
cli
pop
adc
or
arpl
mov
xor
daa
dec
cmc
js
ja
in
aam
xlat
jbe
cmc
repnz
sti
cld
pushf
dec
sahf
or
ret
enter
jnp
lahf
std
dec
lret
movsb
jo
cmpsl
shl
sbb
cmp
xor
mov
lret
ja
out
int
in
nop
call
shr
inc
filds
sbb
xor
push
push
pop
adc
or
xchg
mov
pusha
add
mov
add
mov
inc
mov
int3
mov
std
or
out
in
lretw
dec
lods
xor
rcrb
or
push
adc
add
xchg
pop
jg
jg
ret
push
fnsave
dec
stos
pop
mov
xor
mov
andl
aam
je
fadds
aaa
lods
mov
imul
out
sub
flds
stc
mov
aaa
add
mov
cmp
mov
jmp
idiv
jno
mov
lcall
push
jmp
mov
iret
ret
aaa
cmp
add
sbb
sbb
push
icebp
popf
mov
sbb
push
jp
into
fists
jo
aaa
mull
xchg
add
push
mov
mov
cwtl
mov
adc
push
rorb
daa
fwait
loop
adcb
outsl
xchg
push
popf
sbb
shr
pusha
add
data16
push
inc
ja
bswap
jne
sub
outsl
imul
jnp
out
pop
mov
les
add
mov
mov
push
dec
cmp
cmp
mov
jbe
in
popf
xchg
sbb
add
inc
in
fildl
aas
std
test
pushf
in
sub
pop
sbb
or
jnp
pushf
inc
mov
mov
pop
das
sbb
xor
push
cs
call
sahf
mov
mov
add
cmp
ret
les
push
stos
jnp
out
push
movsl
lret
test
dec
xor
dec
movsl
push
arpl
in
push
mov
in
je
lret
add
shl
xor
fcompl
rcrb
mov
repz
pop
sbb
mov
es
inc
mov
aam
or
outsl
mov
icebp
stos
int
popa
xor
scas
insl
dec
iret
ret
pop
scas
xchg
bound
jl
lahf
inc
xor
jg
push
js
push
outsb
lahf
push
add
arpl
adc
add
repz
fnstcw
mov
rolb
mov
lods
test
hlt
cltd
xchg
jne
scas
jne
roll
imul
xchg
jmp
jo
je
insl
push
xlat
push
xor
fisubl
sub
jecxz
and
repnz
scas
repz
mov
and
xchg
inc
jge
scas
jb
xor
test
lds
mov
ret
fwait
ret
adc
scas
aas
jg
int3
add
and
sbb
mov
scas
repnz
pop
notl
pop
es
pushf
inc
xor
arpl
and
dec
lea
inc
das
shl
mov
xor
aad
pop
pop
or
or
push
mov
cmp
cmpsl
sbb
mov
mov
push
adc
jns
sbb
mov
das
mov
sbb
mov
mov
fisttps
cmpsb
adcl
ss
fimull
ret
in
mov
jb
xchg
fisttpl
mov
arpl
test
push
jb
mov
jg
mov
push
push
stos
dec
mov
scas
lret
fistpl
push
mov
lods
in
mov
inc
xor
sbb
int
add
jecxz
popa
test
addr16
jle
aam
add
nop
lods
jg
xor
fsubrp
add
cmp
inc
mov
mov
jne
insb
sbb
and
add
test
sahf
insl
sbb
faddl
jns
mov
sarb
add
stos
addb
sbb
xchg
inc
sub
dec
out
mov
mov
out
jmp
mov
adc
aad
dec
aas
inc
ljmp
dec
out
add
and
insb
fidivs
pop
insb
xorl
jg
insl
sbb
popf
in
data16
int
push
insb
push
sbb
in
xchg
loope
jp
or
scas
mov
jp
and
pop
test
jmp
subb
repz
cli
sarb
and
repz
inc
pop
cs
mov
int
push
scas
ds
xor
mov
adc
shr
mov
mov
dec
mov
xchg
fidivl
stos
jge
or
xor
in
sbb
gs
in
fucomi
push
cmc
pushf
fists
mov
pop
aas
xchg
stc
ret
dec
out
call
sub
lea
xor
cwtl
mov
mov
je
lods
bound
xchg
mov
ret
loopne
jne
shlb
sub
mov
stc
xchg
loopne
dec
jae
mov
pusha
add
adc
leave
jnp
stos
popl
dec
shlb
jp
mov
in
ret
sarb
add
fstpt
push
aam
adc
loope
sub
dec
cli
lea
add
lods
inc
stc
mov
adcl
data16
sub
imul
xchg
push
pusha
or
push
jp
dec
xor
inc
gs
push
sbb
cmp
mov
pushf
mov
push
pop
lods
jne
movsb
loope
mov
dec
pop
and
fdivs
scas
into
jp
and
fildll
movsb
aad
dec
push
int
imul
outsl
rcrl
mov
push
mov
call
mov
fisubrs
sub
dec
xor
mov
dec
jno
ret
pop
faddl
add
or
hlt
adcb
cmp
lret
adc
jb
xchg
pop
inc
sbb
pop
das
ja
test
stc
and
jns
adc
stos
and
mov
adc
add
test
adc
mov
cltd
mov
stos
sub
int3
add
push
lahf
cltd
cmc
xchg
sbb
pop
bound
xor
jge
sbb
outsb
mov
and
cmp
xlat
aam
mov
adc
dec
sub
mov
push
popf
push
add
subl
setp
xchg
sbb
arpl
mov
inc
mov
push
popf
sete
push
in
mov
add
or
push
cmp
scas
enter
lods
ds
adcb
sub
fmul
jl
aam
movsl
pusha
push
xchg
jecxz
and
js
push
xchg
mov
cltd
das
mov
pop
push
pop
adc
sbb
and
xor
mov
std
pop
fisubs
pop
adc
enter
rorl
mov
je
cld
iret
inc
jl
jecxz
mov
adc
scas
mov
adc
xchg
pop
popa
pop
or
sbb
add
pop
shlb
scas
cs
mov
mov
movsb
xor
jno
cmpsb
inc
jmp
or
jp
lea
xchg
data16
in
orl
sub
jp
pop
cs
jmp
push
sub
push
cmp
adc
push
jne
out
dec
test
push
push
sub
lret
sbb
pop
push
rclb
xchg
push
cld
lret
mov
movsb
lcall
push
push
icebp
lcall
test
jl
ss
lods
stc
push
test
insl
mov
lret
in
clc
jns
jbe
aaa
sbb
ja
push
pop
lcall
mov
insl
mov
or
dec
dec
push
ja
cmp
push
add
lods
add
aas
xor
mov
hlt
jne
jo
repnz
or
call
repnz
in
hlt
sub
dec
clc
mov
dec
ret
out
pusha
mov
into
mov
and
xchg
sbb
fmuls
adc
bt
jbe
rclb
push
sbb
pop
inc
and
lock
lock
sub
xor
out
mov
imul
inc
and
mov
xor
outsb
sar
arpl
xchg
fcomi
cmp
insb
jg
in
outsb
in
cmp
test
in
js
xchg
push
add
pop
jno
fbld
jo
sahf
cwtl
add
loop
or
mov
in
mov
add
xor
mov
or
or
out
adc
mov
cmp
cmp
push
push
add
ja
rcll
cmp
loop
xor
aad
dec
or
xorb
lods
ja
enter
ss
pop
xchg
jne
xor
sahf
push
add
mov
dec
lret
aad
xchg
pop
jle
daa
inc
xor
mov
mov
cwtl
sub
lret
mov
out
out
sub
xchg
outsl
jle
sbb
jg
sub
out
scas
iret
fsubr
cs
aam
movsl
cmp
jl
mov
sbbb
shll
cld
add
add
out
sub
push
popf
adc
aam
or
xlat
std
sarb
pushf
add
jno
cmp
lahf
push
push
repnz
xchg
aas
data16
pop
adc
imul
push
mov
lcall
xchg
mov
cmp
push
ljmp
sbb
jne
in
xchg
push
je
and
adc
push
stos
cmpb
dec
fnclex
xchg
mov
inc
adc
push
fldcw
sbb
loopne
insb
adc
fldenv
push
xchg
movb
pop
clc
je
mov
add
imul
loop
and
sub
inc
and
inc
jnp
xchg
sub
pushf
shr
pop
in
mov
cmp
mov
sbb
out
int3
cli
push
fistps
mov
add
ja
xor
push
pop
push
fwait
inc
addr16
dec
jno
imul
xchg
and
fsubrl
lret
mov
lock
fsts
stc
outsb
fisubl
or
shrl
cwtl
jb
cmp
push
ret
sub
shrl
lods
cmp
std
mov
out
xchg
dec
cs
push
and
push
adc
cmp
fwait
mov
call
sub
xchg
add
pop
push
dec
cmp
inc
jbe
xor
cld
and
sbb
lock
movsl
lret
push
loopne
inc
sub
lods
testb
sub
mov
mull
push
outsb
xchg
in
dec
adc
out
xor
mov
jne
jne
adc
mov
adc
aas
ret
dec
lds
mov
jae
jae
dec
paddq
ret
daa
dec
mov
add
es
jb
pop
rcrb
mov
pop
arpl
ja
imul
clc
push
xor
loopne
inc
jns
stos
xor
mov
inc
out
xor
je
pop
xchg
mov
inc
jb
cmp
stos
xor
xlat
xchg
jbe
cwtl
fadds
mov
jp
xor
mov
or
adc
cwtl
test
mov
popa
rcl
cs
repz
movsb
xchg
jp
pop
daa
pop
jae
aam
xor
or
pushf
imul
add
loopne
and
and
out
repnz
jge
ficoms
fwait
lds
mov
add
das
loop
shrl
sti
les
imulb
xor
pop
lahf
sub
cs
adc
cltd
adc
push
lahf
cld
int3
fsubrs
and
les
sub
adc
addr16
lahf
pop
sub
mov
sub
imul
lock
cld
add
or
inc
les
leave
pushf
out
mov
adc
inc
ror
dec
xchg
push
dec
je
out
decb
cwtl
inc
fmull
cmp
test
mov
inc
adc
push
and
xor
scas
jg
fdivs
cmp
fistpl
push
sbb
rcrb
jbe
xlat
sub
add
cmp
in
ficompl
in
mov
dec
inc
data16
jl
fcmovb
mov
hlt
sub
in
addl
add
xor
or
loope
xlat
divl
jl
in
into
adc
imul
out
out
mov
push
decb
mov
popf
orb
daa
js
hlt
ficomps
fcoms
mov
sub
or
xor
pop
fmul
das
mov
add
fisttpl
aas
or
inc
stos
xchg
push
jb
push
pop
insl
push
enter
push
and
fmul
add
pop
jl
xor
ret
shl
jne
movsl
add
bound
push
pop
lret
push
inc
xlat
and
pop
enter
jecxz
xchg
sbb
push
add
push
mov
rcrl
shr
dec
ja
data16
pop
int
mov
adc
stos
and
fcoms
xorb
aad
sbb
dec
mov
mov
pushf
insl
sti
push
pop
or
pop
pop
cltd
lods
testl
mov
hlt
adc
test
push
jp
notb
mov
push
fwait
pop
testb
pop
mull
jae
out
push
imul
cmc
push
cmpsb
enter
fwait
cmp
xchg
mov
push
in
shlb
cmp
cli
jae
mov
pushf
mov
push
test
cli
and
not
leave
cmp
mov
cmpsl
sbb
sbb
mov
cld
jl
add
sub
jle
pop
xchg
adc
and
cmp
and
movsl
xor
inc
fisubrl
xor
lahf
push
xor
repz
lods
xor
push
add
notb
adc
or
xchg
xor
das
iret
add
or
imul
nop
rclb
jbe
xchg
lods
shl
lret
dec
mov
and
push
cmpsb
addb
rdmsr
push
ret
and
bound
aad
arpl
fucomi
and
arpl
leave
xchg
leave
iret
aas
add
dec
jnp
pop
ss
jnp
mov
mov
inc
sub
xor
mov
js
sbb
iret
clc
dec
xchg
pushf
sub
shlb
pop
fiadds
fwait
inc
mov
fdivl
mov
add
ds
push
stos
sub
fs
mov
cli
or
pop
repz
fsubl
je
fs
cmp
sub
pop
and
adc
add
hlt
pushf
in
aam
les
cld
test
je
fs
cmp
sub
pop
and
adc
add
hlt
pushf
in
aam
les
cld
test
je
fs
cmp
sub
pop
and
xor
mov
mov
movsb
int3
adc
add
mov
cmpsb
cmp
pop
inc
aam
mov
cmp
int3
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
insw
jbe
inc
mov
mov
arpl
testb
and
and
bound
addb
mov
push
repnz
loop
adc
add
xor
bound
jbe
inc
stos
push
mov
push
ljmp
mov
clc
and
adc
sub
and
bound
xchg
jbe
xor
cmp
in
and
sub
push
test
cmpsb
jle
mov
cmp
iret
lret
cmp
pop
or
mov
or
xchg
fsubr
dec
and
pop
xlat
mov
das
sahf
insl
std
add
js
daa
ret
clc
push
out
pushf
ret
mov
inc
jecxz
push
bound
ret
xor
es
stos
jle
out
out
dec
shl
fstpl
fidivrs
cltd
stos
add
dec
outsb
inc
popf
repnz
jecxz
lahf
or
ja
and
cmp
cltd
popf
dec
bound
mov
imul
enter
adc
lcall
jb
xchg
jbe
inc
mov
ss
push
sti
out
negb
sub
cmp
jb
push
and
pop
andb
xor
arpl
bnd
addr16
adc
jb
pcmpgtw
add
push
ret
pusha
mov
push
mov
inc
xchg
popa
ret
and
sub
psrlq
out
rcll
es
push
loop
adc
add
xor
and
jb
bound
jbe
inc
mov
mov
push
repnz
loop
adc
add
xor
and
jb
bound
roll
cld
out
enter
add
xchg
clc
jg
rorb
js
mov
mov
push
outsl
in
push
lret
cli
imul
in
cmp
xchg
mov
aad
mov
jp
ret
push
sbb
mov
push
cmp
out
mov
add
sub
xchg
das
pop
sti
repnz
xchg
cmc
xchg
aaa
std
push
jle,pt
test
dec
cltd
xor
and
dec
hlt
cmp
or
cmpsl
repnz
xlat
add
dec
in
sub
add
daa
xchg
add
or
push
sub
lock
dec
cli
int
pop
pusha
jb
inc
jmp
or
scas
xchg
loopne
inc
cltd
inc
jp
and
adc
push
pop
fmull
push
test
sub
cmp
daa
popf
sub
push
sti
and
xchg
clc
push
cmp
in
setb
iret
mov
icebp
insl
xchg
mov
out
mov
sti
cwtl
jns
outsb
out
fldenv
and
lds
es
negl
pushf
mov
cmp
lods
aaa
mov
gs
jecxz
inc
cmc
popa
xorb
lods
test
test
xchg
xor
ljmp
or
lods
movsb
cs
pop
cli
test
idivb
inc
fcompl
out
cltd
flds
sbb
dec
and
push
pop
std
notl
outsb
pop
jne
out
popf
jecxz
sub
scas
inc
sub
repz
lods
adc
adc
mov
lahf
lahf
xlat
out
mov
insb
pop
cmp
mov
push
daa
mov
xor
xor
pop
sbb
sarl
fildll
notl
sub
clc
add
test
mov
movsl
daa
xor
add
jne
in
ret
ljmp
mov
adcb
int
out
in
out
and
pop
lods
repnz
js
fdivr
cmp
sbb
sbb
in
mov
daa
or
pop
fsts
pushf
xor
inc
jl
xor
pop
jle
mov
or
xchg
add
or
ss
or
sub
sub
mov
adc
lret
xor
or
pop
xchg
in
sbb
xchg
push
scas
push
mov
cmp
push
mov
inc
sub
cltd
xor
idiv
dec
mov
pusha
mov
and
or
pop
mov
nop
in
daa
jl
ss
daa
adc
int3
push
testl
cmp
in
fidivl
cld
push
mull
and
sub
insb
cmp
out
mov
dec
cmp
push
mov
pushl
addl
xor
mov
mov
cs
dec
mov
and
jp
ljmp
mov
and
cmpsb
sub
test
scas
pop
out
sub
outsl
inc
lcall
sub
nop
lcall
stos
xchg
mov
fstpl
int
or
outsl
fbstp
cwtl
movsb
xchg
add
pop
xor
dec
sarl
gs
adc
mov
adc
cltd
cmp
stc
jno
fcomps
test
aam
xorl
mov
ja
ret
pop
xchg
add
jl
stc
jl
fdivs
cs
or
std
sbb
or
xor
fs
sub
jbe
pop
pop
jmp
xchg
in
aad
xor
fs
call
lret
fmull
xchg
lahf
adc
cmp
call
stos
pop
cli
pop
mov
mov
loopne
and
fwait
lret
sbb
fldenv
mov
xor
push
sub
inc
fsubr
in
dec
cli
fistpl
int3
push
xchg
movsl
jne
leave
fldcw
cld
enter
inc
popf
int3
xchg
push
cmpsl
push
stos
inc
inc
mov
push
lock
pop
mov
xchg
testl
cmp
mov
movsb
pusha
push
xor
push
xorl
pop
lcall
fcompl
or
std
add
repz
rcr
pop
xor
lret
flds
scas
mov
adc
out
mov
fwait
inc
push
test
ret
xlat
jmp
gs
divl
aad
pop
jle
sbb
xor
adcb
and
xchg
ret
and
jmp
scas
inc
lds
aad
add
shrl
into
sub
sub
and
cmpsl
xor
js
adc
hlt
nop
mov
mov
mov
pop
inc
cmpl
push
fbstp
xchg
ljmp
fwait
jb
jmp
cmpsb
cs
jb
movsl
xchg
sbb
mov
sbb
inc
loope
aas
sbb
loop
push
adc
movsl
ss
jbe
jp
cmp
or
dec
mov
or
inc
inc
jg
xchg
popa
jmp
push
aad
dec
mov
or
xchg
xchg
fldl
call
and
xlat
out
hlt
enter
es
inc
sub
movsl
jl
cvtpi2ps
add
sbb
cltd
adc
or
push
jns
icebp
cs
mov
inc
push
in
jns
call
jns
fwait
push
cmp
scas
add
dec
mov
clc
mov
mov
fcmovnu
add
ret
dec
js
nop
sub
jbe
mov
push
lret
insb
and
mov
jne
cld
lods
add
enter
jbe
pop
xchg
fcoml
and
cmp
inc
sub
ja
cmp
xchg
inc
sub
sub
dec
in
mov
out
pop
push
enter
sub
dec
stc
cmpl
sbb
mov
xor
push
or
jae
cmc
xchg
fs
xlat
fwait
dec
mov
or
add
dec
add
jae
popf
pushf
or
nop
xchg
and
out
insl
mov
sub
orb
add
xlat
jbe
into
inc
jmp
sbb
add
sti
cmpsb
mov
fidivrs
mov
arpl
xchg
jno
lret
data16
adc
add
pop
cmp
dec
cmpsl
iret
iret
ss
dec
mov
in
mov
push
in
adc
lret
mov
and
push
rorb
cli
mov
push
sbb
mov
cmp
adc
js
ss
jne
fs
xor
into
imul
jp
repnz
dec
mov
xor
and
sti
adc
stc
ss
pop
out
pop
add
mov
mov
enter
popf
dec
mov
scas
push
rcr
loopne
popf
outsl
xor
inc
sarb
mov
pushf
pop
fsubl
test
push
push
stos
push
loope
nop
fcmovnu
push
and
fisubl
sub
enter
mov
outsb
sar
arpl
in
mov
add
inc
pop
push
mov
inc
fstpl
bound
enter
clc
sub
iret
pop
sbb
add
xchg
mov
cmp
sbb
pop
dec
pop
xchg
sub
daa
ret
dec
jbe
nop
jge
xlat
iret
dec
les
ret
divl
dec
ds
push
stos
test
mov
cmpb
jecxz
or
dec
loop
mov
out
je
cmp
and
in
mov
push
pop
sbb
ret
xchg
lret
mov
jmp
push
jnp
pop
js
inc
out
inc
jge
xor
shlb
adc
pop
xchg
nop
rorb
pop
and
loop
xlat
mov
cli
xchg
jb
jge
xchg
in
test
mov
or
pop
cmp
lea
sub
sbb
push
lcall
mov
fisubl
sbb
add
insb
or
and
jmp
cli
lahf
aad
fwait
xchg
aad
mov
push
in
cmp
sahf
shll
outsb
mov
xchg
movsl
lret
sahf
je
or
push
imul
test
pushf
jae
mov
lahf
adc
fwait
pushw
fnstcw
mov
lea
mov
nop
or
repz
cmp
mov
push
imul
pop
lods
push
mov
jle
mov
insb
lea
xchg
divl
mov
cmp
insl
xchg
jb
into
mov
cmp
lea
pop
mov
stos
push
lea
ss
sbb
mov
jecxz
pop
ds
mov
iret
push
adc
stc
pop
les
in
inc
lret
jp
push
call
in
leave
and
push
fs
stc
scas
lea
insb
fyl2xp1
mov
cltd
mov
fistps
add
into
mov
cmpl
fucom
ljmp
jg
test
lock
repnz
mov
ja
aad
jno
or
mov
int3
les
test
aaa
mov
jae
jp
sub
inc
pmuludq
push
add
lods
sbb
xor
movsb
or
cwtl
insl
cld
aam
mov
sbb
inc
scas
roll
sub
out
jecxz
fimull
and
ja
ficomps
push
inc
sub
add
push
add
mov
mov
lds
sbb
cwtl
sbb
sub
jbe
and
or
popf
mov
adc
and
mov
xchg
cmp
popa
sti
and
hlt
fistl
clc
jle
nop
inc
push
dec
xchg
jmp
mov
mov
jno
dec
sbb
sub
mov
mov
nop
lods
dec
or
andl
sub
xor
push
lcall
ljmp
jle
scas
push
jbe
lret
xlat
xor
rcrl
lahf
fsincos
sbb
inc
dec
cld
shll
push
test
or
addl
fnstcw
iret
mov
icebp
repz
jnp
sub
jae
xor
push
adc
pop
addl
xor
lahf
dec
sahf
sbb
es
mov
les
dec
fsub
mov
in
push
dec
shl
xorl
pop
test
pop
test
sbb
jl
jmp
cld
inc
stc
adc
bound
dec
dec
rorb
push
mov
pop
cltd
lret
movsl
rcl
or
or
xchg
mov
ret
roll
gs
loope
cmpsl
jmp
stos
cmc
fwait
adc
cld
adc
mov
adc
jbe
addr16
xchg
inc
or
cmp
daa
cmc
enter
aad
sbb
sub
push
add
push
pop
and
and
mov
fistl
push
std
mov
jbe
xchg
sub
mov
push
inc
adc
push
mov
aas
shl
ljmp
cmp
push
fcompl
push
loop
jge
mov
cmp
inc
and
rcrl
imul
repnz
jae
add
test
and
in
stos
sbb
add
pop
andb
xchg
hlt
jo
mov
jne
lock
sub
mov
adc
inc
fwait
mov
sub
mov
and
lods
fdivrs
ds
popl
stc
mov
pcmpeqd
aas
iret
mov
jae
fnstenv
clc
test
dec
xchg
test
out
clc
mov
xchg
xor
add
mov
or
jmp
and
lsl
pop
mov
push
repz
int
test
lcall
lds
les
int
pop
arpl
jl
movsl
int3
jo
scas
cmpsl
jp
adc
inc
aam
xchg
adc
ret
int
int3
xchg
pop
or
xchg
mov
mov
fcmovnu
jnp
les
stos
cmp
add
out
or
lds
add
clc
mov
or
mov
lret
inc
mov
movsl
pop
daa
fdivs
sub
xor
imull
leave
inc
loop
add
gs
mov
jg
jle
cmp
inc
add
call
and
jns
ficoms
in
jbe
add
xchg
inc
sarl
dec
pop
insb
jmp
in
addb
jg
dec
jp
push
add
add
push
repnz
gs
fcomps
jge
xlat
jnp
fmull
out
pushf
inc
sbb
lcall
or
aam
rorl
aam
faddl
outsl
in
in
and
jl
sub
mov
xor
scas
leave
lods
sub
fcmovnb
ret
dec
or
jl
xor
xchg
bound
pop
out
mov
xor
lds
fcomps
icebp
shlb
es
mov
jg
xchg
fnstcw
jmp
aaa
jecxz
lods
test
bswap
dec
push
sub
sub
les
xlat
and
xor
xchg
adc
sbb
shlb
push
mov
cmp
mov
icebp
in
mov
and
fs
push
adc
mov
sub
lds
lret
xchg
mov
rorb
scas
push
push
leave
mov
lds
iret
ljmp
sti
fistps
pop
xchg
xor
lahf
add
and
add
int
inc
test
sbb
test
sub
jno
call
dec
xchg
and
cmp
loopne
and
repnz
out
cltd
loopne
ljmp
cmp
aas
cmc
pop
icebp
test
jmp
push
loop
dec
loopne
es
rcl
adc
add
mov
ret
test
mov
cmp
int
divb
jge
or
push
mov
lock
lods
enter
inc
test
pop
jnp
out
arpl
mov
leave
sub
jmp
jle
push
lods
sbb
shll
cmp
ljmp
cmpsb
jb
pop
inc
nop
inc
sbb
or
in
mov
ja
fsts
mov
sub
mov
test
jnp
int
clc
test
leave
mov
push
scas
loope
xchg
inc
mov
mov
pop
cli
inc
stos
and
pop
cwtl
ret
lahf
mov
decb
stos
sub
sbb
mov
sub
inc
rclb
adc
int
ljmp
mov
and
push
push
popa
mov
andb
jns
mov
push
pop
jp
push
mov
scas
cmp
fdivr
fisubl
mov
test
negb
fwait
outsb
fwait
dec
xor
scas
pop
xor
imul
xchg
push
ret
out
shrl
or
mov
hlt
jbe
aaa
xchg
ja
dec
aaa
ljmp
cmpsl
scas
cmpsb
cmpsb
or
mov
dec
decb
aad
fstps
movsb
lods
jmp
nop
mov
das
and
scas
and
je
int3
mov
arpl
in
mov
xor
xchg
dec
fwait
icebp
adc
lea
aad
adc
mov
aaa
cld
es
inc
adc
cmp
jmp
cmc
daa
int3
lar
mov
addr16
jo
or
ret
fisubs
push
adc
jmp
and
cwtl
adc
movsb
shlb
loopne
and
test
cmp
subl
fildll
pop
fisttpll
mov
out
and
inc
aad
leave
testl
lret
mov
adc
xor
and
xchg
add
jno
repz
add
pop
pop
out
jmp
and
jns
push
cmc
lret
shll
sbb
aad
imul
inc
mov
jmp
pop
cli
daa
and
pop
addl
cld
xor
das
aas
popa
xor
push
mov
into
xchg
leave
xchg
jbe
clc
dec
sub
int3
out
call
xchg
aam
mov
jp
fidivrs
mov
out
ja
inc
xor
in
xor
xchg
rcrb
lahf
mov
addr16
add
xchg
aaa
push
cmp
mov
or
and
add
mov
pop
ja
push
dec
mov
mov
jb
push
jns
sbb
pushl
aaa
pop
adc
xor
icebp
push
sbb
sbb
pop
cmpsb
sub
outsl
aam
push
cltd
sbb
sahf
jle
dec
addr16
xchg
lods
add
mov
call
fdivl
mov
movsb
popf
pop
adc
rorb
adc
pop
cmp
dec
imul
and
fadd
out
jns
push
push
sbb
cli
movsb
mov
mov
mov
cs
movsl
arpl
push
lods
insl
pop
dec
ljmp
mov
sub
and
repnz
push
test
gs
and
lcall
pop
xor
mov
or
inc
repz
or
and
dec
mov
adc
scas
xor
cmpsb
hlt
dec
add
jno
into
push
xor
ret
in
bound
movmskps
ret
cmp
xorb
mov
dec
mov
or
xor
cld
pusha
jnp
or
add
loop
mov
push
fnstsw
xchg
arpl
mov
test
scas
mov
stos
sub
pop
sub
fstps
ss
fdecstp
jbe
popf
outsl
xchg
pop
push
imul
test
sbb
cmc
in
popa
dec
xchg
push
mov
les
mov
jbe
push
mov
hlt
pop
dec
and
cmp
mov
mov
cmpsb
dec
inc
inc
pop
inc
sub
xchg
nop
shll
mov
faddl
xor
in
pop
sub
sbb
inc
mov
fimull
xlat
pop
mov
mov
stc
jle
jne
arpl
lahf
ret
xchg
dec
xor
pop
neg
xor
cltd
shll
mov
shll
sub
fldt
movsb
insl
mov
gs
pop
test
test
cmpsl
outsl
ja
push
test
pop
push
in
sub
outsb
sahf
jle
xor
sub
pop
imul
sub
xor
and
pop
lds
and
add
adc
icebp
gs
inc
shrl
jnp
sub
mov
fadd
inc
xchg
pop
push
aas
sbb
imul
xor
jne
ret
sub
movsb
push
or
jecxz
inc
std
mov
adc
sbb
mov
shlb
out
inc
fs
gs
xchg
jbe
mov
mov
test
dec
ds
add
jo
mov
imul
out
iret
lods
arpl
stos
adc
lret
ljmp
pushf
and
cmp
not
xlat
inc
sub
xchg
leave
and
mov
fsts
test
xchg
mov
mov
xor
xchg
ja
test
lahf
clc
dec
pop
cmpb
fxtract
sub
push
xorb
cmp
adc
xchg
mov
ret
jecxz
xor
sub
and
cmpsb
aas
cmpsb
cmp
mov
adc
xor
pop
stc
movsl
cs
mov
data16
and
arpl
mov
sbb
xchg
mov
sbb
xchg
inc
int
mov
rclb
sarl
sarl
mov
jno
fisttpll
pop
iret
lret
ret
jb
xchg
leave
lret
test
jbe
out
and
adc
xchg
push
cmp
mov
sub
adc
adc
out
or
xor
pop
sbb
cltd
cmp
jp
pop
pusha
or
icebp
dec
inc
cmp
int
pop
movsl
fldt
ficoms
loope
jae
xchg
in
scas
adc
in
lea
inc
pop
fucomi
mov
push
mov
push
fldl
cmpsb
mov
fisttpl
dec
pop
pop
addb
test
fimull
enter
insb
ja
cmpsb
fdivr
cwtl
jp
sahf
sub
mov
sub
xchg
shll
cmp
call
addb
jle
cs
std
mov
jb
and
dec
leave
rclb
sub
mov
xor
and
outsb
adc
or
rolb
dec
mov
adc
xchg
jl
sbb
lods
jo
sti
push
mov
push
and
mov
xor
xor
repnz
xor
xchg
sarl
into
sbb
std
add
pop
clc
sub
lcall
mov
pop
inc
push
cmp
adc
jne
aaa
daa
gs
mov
xchg
mov
fists
aas
ffree
inc
xchg
stos
jle
cmp
mov
xchg
shr
loopne,pn
adc
mov
stos
ja
xchg
fs
or
sub
icebp
icebp
stos
pop
dec
and
add
insb
into
loope
data16
sbb
xor
test
push
mov
lret
jl
dec
mov
clc
mov
sbb
sbb
ja
jecxz
jp
jnp
mov
das
mov
jno
jo
lds
imul
xor
inc
or
push
sbb
adc
sub
and
cmpsl
mov
test
jo
cld
out
cmp
xchg
je
int
dec
xor
cmpsb
loop
lds
mov
shrb
add
cld
dec
negb
int
mov
push
mov
adc
cwtl
add
cmp
or
jge
push
sahf
push
sub
gs
lock
cmp
or
dec
test
xchg
xchg
dec
mov
cwtl
jmp
xor
movsl
pop
fists
mov
mov
add
jg
mov
imul
divl
mov
aam
mov
and
ss
mov
out
stos
mov
mov
ret
mov
aad
jp
cld
lcall
jnp
fsubs
fsubr
lods
fistpll
inc
popa
arpl
adc
pop
test
cs
push
pop
mov
gs
xchg
and
test
push
mov
rclb
mov
xor
pushf
jo
push
enter
jmp
nop
aas
imul
scas
scas
fcomp
sahf
or
andl
lret
pmaddwd
mov
ljmp
sti
adc
mov
jp
cmpsb
xchg
out
ja
nop
mov
movsb
inc
jnp
ds
sub
jo
in
outsb
pop
lock
fmull
lock
jg
push
push
faddl
mov
das
push
mov
cmpsb
stos
cmp
add
dec
adcb
lea
in
xlat
or
xchg
inc
fucom
push
push
jge
add
jg
mov
cld
jle
mov
mov
push
ret
and
xchg
fildl
mov
and
stos
mov
clc
out
outsb
pop
xchg
mov
xor
ret
sub
or
cmpsl
cld
cmc
push
xor
lock
sub
out
fsubl
and
ret
leave
bound
cmpsb
and
sbb
int3
sbb
and
cmpsb
clc
aas
dec
adc
push
pop
rcl
lds
addl
cltd
int
dec
scas
and
stos
jg
addr16
ror
add
xlat
ret
add
push
adc
mov
add
push
sub
mov
mov
sbb
sub
subl
lods
add
sarl
stos
xchg
pop
add
dec
and
rcll
adc
add
les
stos
adc
dec
je
test
cmp
or
mov
out
arpl
push
dec
mov
jecxz
les
dec
add
cmp
xchg
adcl
push
inc
jmp
push
push
lods
les
fmuls
xchg
shlb
ret
push
loop
adc
add
xor
and
jb
bound
jbe
inc
mov
mov
push
repnz
loop
adc
add
xor
and
jb
bound
jbe
inc
mov
mov
push
repnz
loop
adc
add
xor
and
jae
bound
jbe
inc
mov
mov
push
repnz
loop
adc
test
xor
push
rcr
ds
int3
int3
int3
int3
int3
push
nop
adc
mov
inc
cltd
pop
loopne
and
mov
lds
iret
in
in
popa
nop
adc
mov
gs
test
and
jo
pusha
mov
test
mov
jnp
jne
loope
mov
int
rclb
pop
cmpsl
xor
add
lock
sbb
mov
lret
cli
xor
and
icebp
sbb
nop
jmp
lock
pop
jae
loope
and
fistpll
xor
cwtl
sti
or
jmp
andl
mov
jmp
ret
inc
mov
mov
mov
aad
nop
stc
sub
into
jge
rorb
mov
test
test
xchg
and
dec
lods
cmp
in
cmc
jo
adc
test
mov
clc
decb
movsl
enter
push
aad
sbb
outsl
mov
and
lret
sub
icebp
inc
mov
js
push
iret
inc
fisttps
xchg
pop
xchg
and
shrb
stc
inc
adc
sbb
sub
pop
xlat
push
popa
insb
nop
addr16
aad
lds
sarb
mov
test
add
xor
inc
mov
mov
or
stc
jo
push
ret
push
iret
sub
xor
loop
movsl
push
int
mov
pop
mov
imul
push
shlb
loopne
adc
and
push
aad
in
cmc
pusha
add
mov
mov
gs
test
xchg
add
push
aad
in
cmc
pusha
add
aaa
cmc
mov
in
jne
and
push
jb
pop
pop
sti
adc
mov
adc
ficomps
fisttps
jl
jnp
mov
aam
mov
sbb
fisubrl
cmp
js
and
fisttpll
rcrl
fdivrs
int3
fwait
sbb
mov
pop
add
jmp
xchg
pop
adc
dec
mov
jne
adc
xchg
adc
out
or
dec
cmp
negl
js
pop
mov
push
mov
jle
mov
fmull
push
or
in
lret
mov
seto
sbb
les
xchg
lahf
and
mov
push
shlb
mov
ljmp
mov
dec
push
sti
test
xchg
xor
mov
jg
lcall
ss
xlat
push
cmp
or
shl
adc
mov
fldcw
dec
sub
mov
sub
aas
daa
xchg
enter
sbb
jg
movsb
jne
aas
pop
in
dec
jns
push
mov
pushf
mov
out
iret
int3
adc
mov
mov
cmpsl
jo
cmpb
push
mov
or
loop
inc
push
and
xchg
cmp
jle
jecxz
and
push
loope
enter
push
push
xchg
pusha
mov
ret
inc
notb
fwait
jmp
mov
xchg
push
dec
or
imul
sti
out
jmp
fimuls
add
add
jp
fstl
lahf
rcrl
mov
or
jmp
and
arpl
ljmp
jbe
push
or
ficomps
test
out
xchg
movsb
dec
push
inc
cmc
out
push
add
movsb
pop
ss
pop
jae
dec
test
add
pop
int3
das
push
filds
fistpll
mov
loope
jp
sub
xchg
in
das
ds
les
sbb
xor
aaa
xchg
test
js
xlat
lds
push
and
xchg
xchg
fldcw
inc
ss
sbb
pop
mov
imul
jp
xchg
sbb
cmp
cli
sbb
and
jno
add
dec
xchg
mov
add
sbb
or
lret
loop
testb
inc
xor
add
push
js
jb
repz
ljmp
std
mov
pusha
outsb
pop
or
in
mov
xor
test
sub
mov
pop
cld
pop
and
in
xchg
adc
fwait
add
dec
xchg
cwtl
xor
fstps
pop
insl
add
mov
test
js
popf
jae
stc
and
aas
mov
js
pop
inc
in
cmpsl
aaa
adc
mov
ljmp
pop
sub
test
mov
lret
mov
jnp
jecxz
std
inc
add
lret
mov
pop
orl
xchg
add
cmp
addr16
test
ljmp
mov
mov
shl
outsl
int
mov
lret
sub
add
jg
lock
outsl
jg
in
sub
sbb
loop
pusha
sbb
jo
sbb
pop
loope
pushf
pop
dec
fcomps
lret
insl
and
or
sti
adc
or
push
iret
pop
insl
adc
shlb
adc
outsb
aaa
pop
mov
xor
xor
stc
inc
sbbl
es
mov
mov
xor
mov
insl
dec
pusha
pop
sti
fldcw
and
fwait
or
cmp
cmp
xchg
mov
ret
sub
mov
repz
cld
cmpsb
cli
cmpb
mov
pop
popa
loop
cmp
into
fwait
pop
or
movsl
ljmp
test
mov
and
ffreep
aam
push
lret
pop
mov
aam
stc
adc
sbb
mov
ja
ds
lods
shl
xchg
loope
adc
or
xlat
push
and
push
negb
xor
popf
cmp
sbb
gs
push
mov
mulb
sub
data16
mov
lret
pop
ss
or
jle
xor
add
test
cmp
jne
movb
insl
add
xor
mov
xchg
hlt
nop
orl
or
or
call
push
addr16
je
data16
dec
xchg
movsb
xchg
imul
dec
mov
pop
out
mov
mov
dec
data16
fnstcw
add
jbe
mov
scas
adcl
and
inc
arpl
imull
scas
leave
out
shlb
mov
ja
sub
push
mov
addr16
mov
inc
mov
push
jnp
jae
nop
shl
mov
or
test
imull
test
shll
lcall
ja
nop
mov
lds
cmp
or
pop
cli
mov
dec
nop
mov
cltd
fldt
xchg
push
jo
jae
pop
mov
rcrl
lods
sbbb
movsl
shll
push
xchg
dec
xchg
hlt
mov
scas
lcall
lahf
movsb
fs
add
sti
bound
dec
mov
add
shlb
xchg
mov
mov
gs
cld
or
lret
push
popf
dec
mov
mov
push
ljmp
int3
cmc
pushf
out
inc
jb
scas
sub
push
mov
xor
rcrb
cwtl
add
dec
push
and
sahf
pop
out
or
pop
andb
pavgb
pop
xchg
or
inc
and
jp
aam
xor
divl
insl
mov
mov
mov
push
jecxz
outsl
mov
pusha
adc
sub
dec
cmpb
insb
test
push
lea
cmp
or
mov
add
sub
gs
push
sub
loopne
mov
icebp
sbb
aaa
adc
hlt
enter
xchg
jnp
leave
or
stos
loope
int
dec
jb
fiaddl
arpl
in
xor
stos
add
xchg
andb
pop
inc
pop
push
cmpsl
mov
lock
stc
adc
lahf
or
inc
mov
mov
jg
mov
dec
daa
incl
and
inc
or
jne
push
je
cmp
dec
rclb
xcrypt-ofb
cmpsl
scas
sbb
jae
sub
in
gs
jmp
push
xor
pop
fnstsw
xchg
pop
cmp
fs
rcrl
cmc
xor
hlt
mov
ja
pop
push
loopne
inc
lds
mov
cmp
xchg
xchg
dec
dec
outsl
mov
repz
inc
pushf
pop
in
data16
adc
add
push
das
rolb
jne
in
ja
mov
push
push
mov
out
hlt
pop
and
mov
mov
rclb
push
insl
stc
in
aad
repnz
push
dec
ja
fs
xor
dec
xchg
add
rcrb
cmp
mov
imul
leave
mov
icebp
xor
movsb
mov
inc
ret
inc
scas
adc
adc
push
cmp
out
aad
aad
mov
dec
loopne
lock
xchg
loopne
fstpl
or
push
cwtl
add
pushl
mov
lea
adc
adc
fmull
jbe
ds
or
rcr
lcall
jns
loop
sahf
in
mov
fs
pop
arpl
pop
push
addl
or
sahf
xor
or
sbb
adcb
fidivrl
lret
lret
data16
xchg
add
lret
dec
xchg
xor
push
addl
sbb
jge
mov
sbb
or
into
mov
aad
sbb
ss
jecxz
ds
in
jne
add
mov
mov
lret
and
pop
cmp
push
add
sahf
xor
sbb
adc
mov
les
push
leave
push
push
fadd
or
jae
xchg
pop
das
movsb
scas
scas
fwait
test
adc
cli
jo
es
or
cmp
aaa
sbb
nop
xor
bound
cmp
jmp
int3
mov
xor
stos
fildl
sbb
mov
jae
push
mov
enter
enter
cli
andb
or
hlt
rclb
jl
jmp
cmp
jle
xor
push
into
mov
or
icebp
ret
insb
sbb
inc
cli
sub
push
daa
mov
xchg
add
inc
insl
inc
mov
imul
imul
test
sub
jg
daa
dec
dec
push
popa
sarb
adc
xor
jne
pushf
xchg
mov
out
push
aad
xor
mov
jp
adc
fisubrs
mov
out
das
push
pop
pop
cmp
push
dec
sbb
pop
decl
mov
popf
test
adc
loop
loope
jbe
sub
add
adc
push
daa
push
clc
add
mov
push
mov
mov
sti
in
rol
and
rcll
push
mov
adc
or
nop
stos
insb
adc
cs
pop
out
dec
lret
mov
stos
cmp
lret
scas
je
nop
arpl
es
mov
lret
fisubrl
lock
dec
jae
aas
jl,pt
jne
jp
icebp
mov
mov
mov
movsb
addl
cmp
lock
jb
pop
xchg
pop
sbb
sub
dec
mov
jo
cmp
jb
mov
popf
daa
loop
jbe
inc
pop
pop
dec
bound
dec
bound
lea
cmp
mov
xorl
hlt
aam
ja
int
jg
mov
insb
mov
ljmp
or
das
lock
inc
sti
adc
in
mov
add
mov
add
roll
outsb
and
aam
mov
movsl
movsl
cmp
arpl
paddd
test
pop
fcomps
mov
les
cmp
xchg
mov
pop
add
adc
push
aas
cli
out
lea
mov
cmpsl
or
pop
loope
fwait
jns
mov
mov
popf
jl
je
xor
mov
add
mov
push
testb
push
xchg
iret
add
xor
iret
mov
aas
sahf
adc
loopne
xor
les
pop
sbb
rol
add
adc
repz
add
pop
loopne
xor
test
fcmovnb
and
orl
push
jge
inc
and
pop
jmp
mov
add
pop
xchg
xor
scas
jmp
inc
mov
xor
and
negl
daa
jb
mov
fwait
call
sub
pop
mov
aam
add
push
inc
push
mov
xchg
lods
and
mov
mov
mov
push
fst
gs
sti
lahf
mov
fistps
lahf
es
and
pop
lock
aam
sub
sub
sti
in
insl
test
ss
aam
push
pop
mov
movsl
sub
sarb
loopne
or
insb
lds
outsl
mov
xchg
sub
and
push
adc
xor
pop
add
andps
outsb
pop
pusha
xchg
sti
out
insl
sub
jge
clc
jbe
insb
sbb
mov
dec
and
adc
xchg
inc
test
and
decl
cmc
shlb
fs
js
shrb
lods
cmp
enter
dec
sahf
adc
push
data16
out
xlat
fdivl
pop
push
xchg
jecxz
lret
out
dec
dec
jecxz
std
add
fisttps
or
clc
jnp
push
xor
loop
fnstcw
mov
fs
daa
setl
rorb
pop
pusha
sbb
mov
add
ret
xor
lods
sub
push
pop
aas
das
pushf
dec
lods
stos
xor
je
add
test
lds
xor
movl
int
mov
pop
dec
push
and
test
jecxz
enter
daa
xchg
orl
test
cmp
mov
jmp
adc
pop
clc
push
mov
in
out
xchg
mov
mov
adc
adc
dec
repnz
test
roll
lea
ret
jp
out
xchg
push
jecxz
sbb
insl
jns
insl
nop
out
pop
adc
dec
in
std
icebp
and
aas
mov
test
out
push
test
das
mov
outsb
movsl
jo
test
and
adc
lahf
int
mov
pop
push
fistps
jo
add
jb
cmp
fcmove
push
push
and
sub
or
ret
fldt
fistl
fcoml
cmpsl
popa
sbb
push
or
rcl
lods
leave
sahf
mov
add
mov
xlat
push
stc
aad
es
sub
pop
std
pop
xor
mov
mov
loop
insb
test
sub
loopne
push
cmp
cmp
pop
xor
sub
es
xchg
push
dec
jnp
sbb
mov
mov
or
xor
iret
sbb
and
in
jne
adc
movsl
push
adc
ss
btc
mov
mov
add
lods
inc
pop
pop
or
clc
lea
ret
bound
and
pop
cs
pop
jae
andl
sub
xor
add
ja
imul
jnp
ret
xor
xchg
fsts
cmpsb
inc
dec
jg
pop
pushf
pop
inc
clc
int3
cmp
gs
out
fildl
sahf
hlt
popa
lds
xor
or
pop
and
inc
loopne,pn
or
add
insl
mov
cltd
xchg
push
pop
inc
pushf
cld
adc
inc
jmp
daa
add
cmc
and
jnp
add
inc
jp
and
mov
movsb
jne
mov
xchg
ljmp
xchg
and
imul
mov
inc
lods
out
std
dec
mov
pusha
ss
mov
leave
mov
outsb
push
cli
mov
cltd
ljmp
dec
mov
repz
and
cmpsb
imulb
inc
mov
dec
popf
lcall
push
push
enter
rolb
inc
lret
mov
or
rclb
and
mov
mov
leave
movsl
icebp
push
dec
or
lods
mov
movsl
sub
adc
mov
mov
mov
aad
jno
sbb
jmp
sahf
push
clc
loop
add
fsubrp
es
scas
inc
aad
mov
push
jmp
pop
mov
aam
fadd
cld
shlb
push
or
mov
ss
je
mov
fidivs
sub
aas
jb
push
in
repnz
cmpsb
mov
dec
imul
mov
fcmove
mov
pop
cmpsb
cmp
cld
pop
xchg
jmp
fisubrl
cltd
fcoml
dec
xchg
cld
fdivrl
add
push
push
test
mov
xchg
cmpb
xchg
xchg
repnz
shlb
xchg
cmp
in
test
idivb
jge
ret
fildl
test
test
pop
nop
cmpsl
mov
jge,pt
xlat
and
sub
jo
test
or
add
fdivs
test
mov
pop
retw
fwait
sub
gs
mov
xlat
push
inc
fsubrl
icebp
xor
das
jl
imul
movsb
push
mov
cmp
sub
test
mov
mov
das
fwait
lahf
pop
aas
mov
daa
in
cmp
dec
xchg
push
sub
lcall
push
ror
push
xor
call
sahf
pop
in
leave
aaa
loope
xchg
xor
aaa
dec
push
inc
xchg
add
popa
dec
fsts
xchg
leave
cmp
xchg
insb
dec
pop
stos
pop
mov
rolb
scas
pop
out
into
and
hlt
das
mov
sub
xor
aam
mov
fs
pusha
fs
jl
pop
cli
call
mov
je
sub
and
outsl
sbb
lahf
push
lods
cld
sbb
inc
push
xlat
orb
inc
pushf
scas
cld
adcl
and
pop
lret
cmp
daa
or
jle
lods
cmc
lds
test
xor
rolb
lret
dec
push
sub
fsubrl
aaa
mov
mov
jae
scas
int
into
test
movsl
pop
enter
or
loopne
xlat
dec
mull
or
rorl
pop
lods
push
loopne
movsb
xor
pushf
pop
cs
popf
dec
push
mov
sar
jp
ret
sub
clc
sub
cmp
fcom
sti
aam
dec
mov
ret
andb
iret
cmp
xchg
outsl
cltd
enter
mov
push
xchg
sbb
or
xor
inc
gs
insb
push
loopne
mov
mov
inc
pop
mov
gs
fcompl
dec
mov
mov
adc
xor
fcomps
fwait
xchg
jbe
sbb
pop
push
pop
jle
in
repnz
dec
fidivl
inc
nop
pushf
sub
inc
lods
subl
pop
std
lods
out
inc
push
inc
inc
inc
imul
fsubr
cmp
xchg
mov
orb
pop
jecxz
cmp
mov
lret
cli
or
adc
js
iret
xchg
outsb
xchg
cmp
das
repnz
leave
fdivr
cs
inc
andb
pop
and
xchg
or
jne
mov
adc
mov
jne
pop
mov
cmp
pop
nop
inc
loopne
xchg
xchg
cmp
dec
cltd
addr16
aam
xor
leave
aas
lea
push
push
adc
outsb
push
cmc
xlat
xchg
addr16
push
xchg
pop
pop
aad
lock
jbe
mov
mov
imul
test
pop
stc
sarl
gs
adc
mov
cmp
cmp
data16
loop
aam
scas
jae
mov
and
pop
stos
or
popa
scas
jecxz
ljmp
aas
adc
and
or
xor
loop
lods
insl
pop
jmp
mov
dec
pop
ja
fstpl
icebp
iret
imul
dec
aas
xorb
mov
xlat
cmpsb
and
test
cmpsl
push
bnd
dec
cmp
repnz
int
push
imul
mov
cli
inc
xorb
jo
daa
mov
and
lret
cwtl
inc
mov
loop
add
adc
popf
xchg
outsb
lock
adc
sarl
stos
dec
xor
add
inc
push
xchg
cmp
je
mov
mov
and
int3
cmp
inc
or
insl
cmp
sbb
rclb
dec
fcmovb
cmpsb
jg
imul
sbb
jne
sbb
xchg
xchg
or
movsb
dec
and
ret
outsl
outsb
out
xor
xor
test
imul
or
and
call
daa
adc
clc
adc
cmc
sbb
inc
test
out
test
es
ret
push
mov
sub
push
lock
loopne
mov
or
jno
pop
xchg
sub
fbstp
or
xor
adcl
sbb
out
pop
ljmp
push
das
leave
cmpl
sarb
sbb
cmc
mov
loope
or
rorl
xor
xor
daa
jp
mov
jbe
aam
in
inc
lds
popf
jmp
mov
adc
stos
push
push
aaa
int3
movsb
inc
cld
mov
sub
repnz
ljmp
sbb
mov
sarl
sub
pop
leave
mov
ret
dec
mov
sahf
test
push
or
iretw
or
sbb
sub
rcrl
mov
subb
cmp
pop
ja
fwait
xchg
inc
js
insb
insb
mov
jae
jo
in
fwait
insl
xchg
notl
rolb
insb
xor
int3
fisubrs
mov
insb
pop
cs
pop
fsub
inc
insb
xor
out
jns
clc
sub
xor
inc
aad
sti
leave
mov
outsb
jne
ret
leave
ret
inc
fdiv
xor
or
lcall
or
icebp
add
and
frstor
repz
out
and
adc
mov
jle
repz
xor
pop
sub
jo,pt
inc
add
sub
lds
inc
cmp
inc
cmp
inc
lcall
xchg
xor
shrl
lret
adc
and
mov
push
ja
roll
jge
mov
push
arpl
cltd
mov
testl
lock
in
cmp
fcmovnu
jnp
and
dec
repz
es
push
add
fisubs
shrb
test
xor
in
lods
hlt
inc
jae
insl
shr
xchg
mov
cmp
fs
push
mov
push
lods
and
jge
rcr
cmp
jnp
inc
jmp
call
sbb
jnp
pop
lea
xor
fwait
sarl
add
lcall
pop
enter
push
push
xchg
in
add
adc
movsl
ljmp
mov
lcall
pop
ds
fldl
retw
and
mov
cmp
clc
orb
shlb
and
lret
mov
sbb
pop
je
fistpl
mov
mov
paddw
add
mov
test
scas
and
pop
sti
xor
fneni(8087
adc
sbb
test
pop
rorl
sub
pop
and
mov
jb
push
inc
cmpsl
push
and
clc
and
mov
sarb
test
adc
and
aad
dec
or
in
sarl
neg
cmp
jbe
jno
or
mov
sub
setg
inc
pop
jmp
mov
ret
mov
mov
sub
add
fst
fs
sbb
add
fwait
sub
sahf
stos
xor
mov
pop
or
cmp
add
aaa
or
mov
add
setl
test
test
dec
out
or
mov
fsubp
inc
mov
mov
aam
imul
pop
shl
jno
jae
ficoms
jns
mov
dec
aam
out
in
xor
jmp
gs
imul
lcall
xchg
jnp
mov
sub
icebp
jmp
push
loopne
xor
push
cmc
out
pop
pop
jmp
jbe
orb
cmp
dec
ja
push
clc
sarb
scas
pop
popf
gs
leave
cwtl
dec
lods
notl
les
mov
pop
imul
scas
and
xchg
cltd
data16
xchg
xchg
test
push
pop
mov
and
cmp
ror
pop
pop
mov
xor
cld
sub
sbb
sub
in
xor
mov
pop
cltd
testb
iret
mov
or
pop
mov
je
imul
sbb
dec
dec
adc
jmp
test
fdivs
popf
fisubs
cmp
mov
xchg
jo
scas
jg
popa
mov
and
sarb
hlt
adc
jmp
xchg
sarb
shll
push
outsl
mov
mov
jne
mov
add
adc
xor
andb
mov
gs
test
xchg
add
push
aad
in
cmc
pusha
add
mov
mov
gs
test
xchg
add
push
aad
in
cmc
pusha
add
mov
mov
gs
test
xchg
add
mov
lds
inc
in
sbb
test
adc
shlb
and
xor
aas
sbb
or
int3
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
pushl
pushl
call
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
add
adc
and
xor
lea
jp
or
imul
add
add
repz
and
xor
inc
mov
mov
xorb
mov
push
shlb
loopne
lock
repz
and
xor
inc
mov
mov
xorb
int3
ss
shlb
xchg
jbe
je
mov
pop
cmpsb
mov
fisttpl
mov
sub
jno
test
hlt
dec
repz
repz
iret
dec
mov
sbb
pushf
pop
lods
dec
push
aas
and
js
stos
jge
push
jecxz
and
add
lret
and
inc
xorb
mov
int3
lods
pop
test
adc
dec
xor
in
jo
or
xchg
fcmovb
aas
and
add
xor
sbb
sub
into
sbb
push
dec
jecxz
xor
jbe
lods
int
xchg
pusha
das
xor
stos
out
cmc
jecxz
mov
sub
sbb
xlat
jae
addr16
es
mov
movsl
adc
int3
repz
and
xor
inc
mov
mov
xorb
mov
xor
and
adc
inc
inc
repz
and
add
jb
addb
jp
add
xor
inc
shlb
mov
gs
jne
inc
fwait
pop
mov
sbb
and
mov
push
mov
push
gs
mov
mov
mov
pusha
xchg
jo
xorb
mov
xor
and
adc
add
repz
and
xor
inc
mov
mov
xorb
mov
xor
and
adc
add
repz
add
inc
cmc
or
scas
pop
ja
cli
pop
dec
xor
xor
inc
dec
loopne
shlb
mov
and
cmp
dec
xchg
fsubrs
das
sub
fnsave
mov
cmp
ds
int
sub
sbb
push
loop
in
icebp
loopne
pop
shrb
insl
mov
stos
test
stos
xor
adc
sahf
mov
mov
sbb
and
xchg
outsb
pand
dec
int3
and
mov
mov
mov
jb
lahf
fdiv
cmp
movsl
icebp
cltd
lods
imul
jne
xor
imul
mov
daa
mov
mov
and
cli
jns
jmp
cmp
out
add
add
fnstcw
cmp
lods
mov
in
or
adc
or
in
push
cmpsb
mov
xchg
loope
lods
adc
xorl
pop
test
cwtl
int3
mov
gs
cmp
jecxz
dec
cmp
jecxz
xchg
scas
push
ja
sbb
in
sub
cmpsl
sbb
mov
xchg
lods
lea
push
mov
in
mov
sub
and
jo
aam
call
rcl
add
scas
adc
stc
mov
loopne
ljmp
pop
cmp
and
pop
sbb
mov
jbe
pop
or
mov
imul
outsb
scas
stos
mov
adc
testl
popf
rcr
arpl
mov
out
outsb
sbb
mov
stos
mov
std
aas
test
gs
fadds
shll
icebp
leave
es
in
je
xchg
call
fistl
sub
cwtl
repz
adc
aad
or
xchg
add
mov
pop
adc
jbe
sbb
aas
push
adc
jae
sub
push
sbb
sub
xchg
jno
or
inc
out
mov
mov
push
lock
rol
pop
imul
dec
lea
xchg
xorl
into
lcall
subl
add
jae
pop
jns
aad
or
jae
fdivrs
filds
xchg
scas
cli
xchg
outsl
stc
aas
sbb
les
aas
and
int
adc
sub
push
push
out
adc
je
in
jo
dec
mov
pop
sbb
sbb
pop
push
fdivr
push
or
pop
movsb
test
sbb
push
outsl
pop
mov
dec
mov
popa
pop
add
mov
adc
out
icebp
sar
and
int
mov
into
dec
fisttpl
dec
out
in
sbb
idivl
fs
decl
sub
fsubrl
jns
loopne
pop
mov
dec
in
fcomi
roll
enter
cli
stos
insl
pop
sub
or
jns
lock
call
ret
lea
inc
push
jne
or
icebp
test
inc
mov
push
jl
cwtl
in
jb
mov
xchg
sbb
cmc
aaa
scas
shr
inc
mov
xchg
and
and
xchg
dec
insl
je
icebp
shlb
and
mov
cli
jb
sub
cmp
into
mov
or
repz
xchg
adc
xor
push
dec
push
fimull
jnp
jae
pop
mov
sub
out
sbb
out
imul
in
cmp
es
das
pusha
push
dec
mov
xchg
sub
mov
sbb
mov
push
fdivs
arpl
movsl
xor
or
fildl
test
test
pushf
push
push
sub
insb
jle
push
pop
sbb
outsb
std
lret
rolb
lcall
clc
xor
fs
xchg
dec
test
or
xchg
loope
sbb
cmp
stc
and
sbb
rep
roll
adc
sub
inc
lahf
outsl
rolw
loope
cmpsb
push
xor
inc
add
cmc
jle
cli
jne
fimuls
inc
push
fwait
dec
lret
sub
adc
lea
mov
mov
xchg
shlb
cwtl
outsl
xchg
popf
test
lea
imul
xchg
out
inc
and
fistpll
cs
jae
popa
jo
add
push
xor
push
and
pushf
icebp
push
and
xchg
das
les
mov
fimull
aaa
mov
stc
lock
mov
adc
mov
lods
mov
pop
mov
xor
test
outsb
jns
cld
inc
scas
jg
cmp
stos
inc
pop
jnp
test
daa
add
fwait
sbb
pop
hlt
xchg
adcl
fcomp
xor
js
xor
imul
iret
mov
mov
xor
ja
xlat
test
xor
in
xor
pusha
jl
shr
out
mov
es
out
jb
or
arpl
mov
mov
nop
pop
negb
inc
roll
outsl
ficompl
mov
int
xchg
lds
lret
inc
adc
sbbl
popa
rorl
jmp
fwait
and
lcall
loopne
inc
add
leave
lahf
push
andb
inc
cmp
loopne
mov
roll
fdivrs
xor
call
das
jmp
lods
rcll
lcall
sbb
cmp
jl
mov
dec
js
mov
fcomps
loopne
es
and
push
mov
mov
push
repnz
loop
adc
rorl
test
mov
jle
jno
cwtl
nop
cmpsl
cmp
xchg
lods
mov
and
mov
xchg
pop
mov
add
popf
gs
je
adc
movsl
adc
out
int3
push
cmp
dec
lods
lcall
mov
out
pop
add
and
or
shll
icebp
shrl
hlt
push
aam
mov
popa
push
mov
arpl
xor
pop
xor
arpl
xor
shll
inc
add
pop
ficoml
pusha
push
mov
js
andl
in
xchg
call
jmp
filds
pop
std
movsl
mov
out
int
jmp
js
pop
imul
insb
shl
mov
pop
dec
push
lods
jae
vmovaps
orb
imul
inc
adcb
jb
loope
pop
jns
inc
jge
gs
js
mov
jbe
mov
push
test
cli
roll
inc
jnp
cli
and
jae
pop
cld
mov
cmp
cmp
dec
in
call
pop
mov
xlat
jg
lods
test
decb
inc
cmc
enter
mov
mov
jle
pushf
push
dec
leave
scas
pusha
push
les
mov
mov
lahf
scas
punpckhwd
xchg
sub
xor
test
lods
out
sbb
xchg
addb
pop
das
add
movsl
leave
std
rcr
adc
sub
fcoml
bound
jg
dec
out
fwait
cmp
xchg
das
inc
lahf
rep
pusha
fisubl
xchg
jbe
mov
test
mov
in
adc
mov
int
push
sbb
mov
mov
push
imul
inc
ret
dec
mov
loopne
push
loop
aaa
or
ss
js
jne
add
cmp
stos
pop
cwtl
lods
daa
aas
fnstenv
movsb
pop
cmp
loope
add
pop
shll
cmpsl
pop
shlb
lret
push
jae
fmull
pop
mov
testl
inc
pop
xchg
sti
pop
sbb
subb
test
stos
pop
add
xchg
mov
add
add
test
lea
insb
inc
dec
out
or
roll
fwait
ret
mov
pushf
pop
xchg
loope
popf
cwtl
es
sbb
iret
sub
data16
arpl
ret
js
lods
sub
imul
fdivrl
inc
adc
jns
test
add
jge
dec
aad
aad
lcall
push
cmp
cmp
inc
insl
xchg
mov
jne
add
ljmp
or
mov
aad
lahf
sub
loop
sbb
pop
hlt
push
jmp
arpl
xlat
jb
loop
jecxz
add
xchg
xchg
repnz
dec
fisttps
inc
mov
or
jecxz
ret
mov
fdivp
xor
iret
dec
inc
dec
push
jbe
movsb
xchg
inc
mov
fistpl
mov
movsl
or
or
cmp
mov
cmp
aad
push
adc
mov
dec
nop
imul
addr16
daa
sub
es
add
and
jge
jbe
mov
sub
icebp
jecxz
jb
jg
sbb
out
jmp
mov
sbb
and
xor
jne
pop
clc
push
add
outsl
fstl
dec
mov
sbb
cmp
xlat
and
in
cltd
fists
ret
cmp
data16
mov
sub
inc
cmp
cwtl
push
adc
out
mov
in
int3
jg
mov
mov
lods
sub
out
push
or
pushf
pop
fs
jo
xor
aaa
or
push
repz
xchg
dec
cmc
pop
rcrb
push
cmp
scas
jnp
mov
sbb
inc
add
jbe
push
movsl
pushf
ss
mov
sbb
mov
push
jl
or
cmp
sub
ja
imul
cmpsb
scas
sbb
xor
mov
jl
dec
popl
scas
push
sub
in
loope
clc
sahf
hlt
push
shll
rcll
mov
cli
lahf
pusha
push
fstps
divl
fisubrl
pop
stos
jae
jle
mov
pop
inc
sbb
repz
mov
repnz
inc
mov
fwait
arpl
jecxz
hlt
lcall
mov
jecxz
loopne
lret
lret
jg
test
sub
pop
xchg
fwait
push
mov
mov
pop
pop
hlt
add
mov
mov
xchg
decl
mov
fs
dec
stc
mov
ret
xchg
adc
sbb
sbb
and
pop
lods
push
add
imul
or
lds
movswl
daa
adc
out
mov
mov
dec
ret
insb
int3
add
hlt
pop
adcb
xchg
and
xor
and
shl
out
das
xchg
or
enter
xchg
inc
add
fcom
pop
push
mov
jne
pop
and
or
movsb
cltd
inc
jo
xchg
fdivl
cmp
fldt
cs
adc
push
xor
sbb
aaa
jecxz
jno
lret
ja
sarb
rcr
xchg
mov
adcb
mov
imul
iret
dec
rcrb
in
iret
data16
ss
ljmp
xlat
push
adc
pop
sti
mov
or
dec
std
sub
mul
jns
sbb
mov
js
sub
fisubs
mov
sub
es
cmp
and
imul
xor
leave
lret
xor
fs
mov
add
mov
dec
inc
faddl
push
mov
push
sbb
cld
daa
cmpsb
push
insl
push
loop
cltd
jnp
popa
loope
loop
stos
or
xchg
idivb
int3
push
ljmp
lret
mov
inc
xchg
ljmp
test
mov
cmp
loope
mov
add
pop
in
ficoml
mov
aam
jae
xchg
shrl
sbb
pop
or
in
adc
pop
repz
shl
dec
std
aaa
push
ret
lret
push
and
cwtl
inc
dec
xchg
or
sahf
mov
notl
shl
push
and
bnd
test
pushf
sub
lock
mov
and
xchg
repz
test
aad
in
in
xchg
pop
inc
mov
loop
pop
outsb
sbb
inc
mov
or
dec
jg
and
sahf
ljmp
jmp
dec
xchg
sti
lret
mov
dec
inc
cmp
mov
jge
pop
cmpsb
jle
jo
adc
inc
mov
ret
xchg
outsb
pop
leave
fsubl
jge
pop
test
std
cmp
fdivr
stos
mov
xor
mov
jnp,pn
fs
adc
cmpb
movsb
fbstp
or
mov
jp,pn
jecxz
sbb
outsl
lret
movsl
orb
push
out
xor
lcall
xchg
sbb
or
inc
jg
pop
push
loopne
test
lcall
mov
hlt
mov
insb
inc
cmp
jl
pop
lods
call
movsl
dec
and
xchg
mov
dec
adc
das
lret
rcrb
lock
ljmp
adc
jne
aaa
sub
mov
add
cmp
fldl
andl
sbbl
rclb
fs
enter
push
xchg
jo
adc
addr16
and
mov
inc
andb
mov
dec
pop
out
push
dec
or
leave
in
pop
push
nop
jo
sub
out
dec
stos
lds
aad
adcb
xlat
and
pop
fnstcw
jmp
lea
lcall
imul
cltd
adc
ljmp
pop
and
jmp
mov
fisubl
adc
mov
mov
push
adc
movsl
jne
pop
ret
sbb
jne
xchg
push
out
mov
ljmp
pop
push
jmp
xchg
pop
js
in
je
sarl
imul
sahf
add
xchg
int
arpl
add
dec
shll
and
data16
pop
inc
sbb
sbbb
push
adc
pop
out
setae
add
sahf
sti
and
add
inc
loop
mov
clc
mov
mov
sbb
leave
shl
es
sbb
rclb
add
fcmovb
in
mov
or
push
into
mov
mov
cwtl
cmp
je
gs
fs
push
stc
test
add
aam
ficoms
xchg
push
or
and
push
jb
stc
mov
adc
or
sub
mov
movb
clc
cmpsb
ss
iret
or
add
mov
or
pop
aas
shrl
mov
mov
add
lahf
sub
sbb
sbb
fxtract
add
and
cmp
dec
inc
or
stos
outsl
je
xchg
cmp
inc
dec
pushf
mov
clc
cmpxchg
or
stos
sub
mov
dec
sbb
jp
mov
jne
sub
lret
or
lods
sbb
loope
cmp
xchg
aam
xchg
add
aas
je
out
dec
aas
sub
pop
mov
pop
pop
daa
enter
cmp
push
sub
inc
adc
cmp
sub
push
in
test
add
jp
shlb
push
ret
outsb
xchg
loop
mov
mov
fnstcw
rcr
push
inc
dec
fcomps
dec
shl
xorb
lcall
fwait
mov
insb
mov
and
pop
into
cltd
imul
ss
push
div
cmpsl
xor
xchg
mov
aad
xchg
and
sbb
and
lods
mov
in
sub
jmp
push
hlt
push
and
int
leave
xchg
or
mov
xor
add
pushf
lds
push
into
mov
stos
inc
dec
push
in
xchg
mov
and
or
add
and
ljmp
arpl
xor
out
int3
in
xchg
mov
cmp
subb
loope
addr16
push
xchg
lahf
hlt
aam
inc
xchg
sbb
adc
lret
mov
sbb
sbb
mov
mov
push
sbb
call
cmp
cld
dec
pop
add
xchg
xor
rcll
out
jb
pop
rol
adc
push
std
xor
fsubr
test
in
leave
fisttpl
push
aam
jg
je
call
fildl
ljmp
mov
or
push
sub
mov
aaa
sti
jns
xchg
xchg
mov
lods
adc
ret
mov
sbb
aad
pop
rclb
and
ljmp
pop
sub
jbe
sbb
cmp
xor
push
jle
imull
cs
in
sbb
sub
jmp
insl
imul
jle
lret
jmp
sub
pop
rep
mov
in
lret
sbb
ret
xchg
out
pop
ret
and
outsl
imul
call
test
mov
loope
jns
mov
cwtl
jg
pop
pop
jmp
loop
int
repz
xor
add
pop
fcompl
mov
divps
dec
mov
jae
jnp
lcall
mov
aad
movsb
jle
inc
mov
ja
mov
sahf
pop
and
int3
mov
enter
mov
pop
es
ljmp
sti
push
mov
stos
aaa
shll
xchg
or
mov
pop
cmp
test
test
in
mov
test
imul
stos
cwtl
sub
inc
xchg
leave
add
shlb
cmp
jo
adc
out
sbb
ss
stc
movl
or
shlb
inc
pop
mov
xchg
ja
js
fstl
dec
lret
test
mov
fsubs
push
and
mov
xlat
lods
xor
fidivrs
jle
lret
fsubs
faddl
lret
ja
and
je
push
mov
jecxz
xor
mov
jno
xor
push
mov
rcr
adc
cmp
pop
aad
jae
mov
les
call
mov
pop
jge
imull
dec
fcmovu
sub
push
fwait
lret
cmp
iret
popf
dec
push
test
fisubs
arpl
sbb
shll
push
in
in
pop
mov
gs
fimuls
rcll
dec
xchg
lds
jle
add
xchg
mov
mov
or
in
lods
jae
xor
ret
mov
je
inc
jnp
jg
adc
mov
lret
fcompl
scas
in
xchg
push
jg
xchg
sub
stc
pop
xchg
jmp
sbb
clc
lock
fisubs
int3
push
jae
sbb
in
add
push
out
cmp
aam
xlat
push
sarb
jp
dec
pop
add
mov
mov
mov
frstor
fdivs
mov
movsl
call
xlat
test
cmp
mov
mov
mov
icebp
jg
adc
sub
add
test
rorb
mov
ret
inc
lahf
lret
jne
cmpsl
pop
sbb
and
shl
xchg
pop
push
pop
pop
fsubs
inc
cmpsl
xor
add
in
pop
mov
push
mov
pop
iret
add
cmp
popa
call
lret
loop
push
xchg
inc
repz
cmp
mov
jnp
pop
mov
sub
mov
push
xor
push
mov
out
popf
sbb
mov
or
lcall
cmp
fsubrl
enter
jne
out
mov
fimull
aas
call
leave
int
out
out
cmp
mov
push
rcll
adc
pop
aad
jb
nop
push
stc
insl
mov
jae
jno
push
into
mov
cli
adc
dec
fcmovb
mov
cmpsl
pop
inc
rorb
popf
pop
jb
add
sub
rclb
adc
xchg
negb
and
ret
cmpsl
imul
mov
pop
popf
add
mov
sbb
jns
ja
push
inc
cld
fsubl
sbb
loopne
cwtl
pop
and
pop
lds
push
das
pop
sub
adc
ljmp
ljmp
pop
enter
lods
arpl
mov
in
mov
dec
push
sbb
icebp
mov
lahf
stos
dec
xor
repz
inc
cltd
ret
out
jbe
movsl
lret
test
movsbl
inc
lret
out
es
outsb
push
daa
je
into
mov
mov
cmpsl
sbb
mov
imul
mov
enter
or
sub
lods
push
jmp
push
sbb
mov
jae
stc
sub
pop
jle
push
std
mov
test
mov
ss
leave
inc
inc
pop
add
adc
cwtl
ffree
out
and
rcr
rcll
scas
adc
and
dec
add
imul
dec
cmp
hlt
mov
fs
outsb
push
cmp
jp
and
adc
popf
jnp
push
aam
out
add
in
or
cs
insl
push
xor
xchg
jns
or
jg
sbb
sarb
int
dec
inc
or
pop
xchg
cmp
sub
cmp
popa
jle
mov
sub
mov
imul
mov
pop
out
shr
stos
xor
ficompl
add
jg
inc
test
push
adc
xor
les
lahf
xchg
push
push
dec
and
stc
cmc
inc
sub
mov
fwait
cmpsb
jo
push
mov
popf
mov
loope
push
mov
outsl
out
adc
jmp
xor
ret
push
in
dec
imul
outsl
jg
icebp
aam
mov
dec
mov
jb
lock
sub
adc
inc
mov
pushf
ja
imull
pusha
roll
cltd
and
pop
mov
jp
mov
fwait
stos
sbb
xchg
dec
push
pop
outsl
pusha
sub
fldenv
fwait
dec
sub
lock
inc
pop
sar
lods
jle
push
leave
cmpsl
cmp
test
les
clc
mov
dec
push
lret
fldcw
mov
int3
sub
jp
mov
xlat
adc
popa
xchg
sar
lret
cs
push
ja
ficoml
or
stos
mov
and
out
mov
fstpl
sbb
inc
push
cmpsl
pop
dec
loop
mov
aaa
ret
or
lods
dec
inc
popl
divl
xchg
add
stc
cltd
aam
push
sub
lret
pushf
mov
or
mov
cmp
sub
inc
dec
pop
outsb
loope
dec
and
popf
push
mov
pop
jmp
addb
mov
mov
imul
mov
cmpsl
cld
test
in
lock
fs
sub
clc
mov
mov
mov
xchg
add
push
loope
pop
cs
insb
xchg
ss
pushf
daa
push
loope
push
jb
jmp
aas
pop
add
pop
jmp
sbb
adc
inc
cmpsl
loop
and
jp
cmpsl
ja
adc
inc
loop
and
pmulhw
adc
inc
test
pop
enter
cmp
loop
addr16
rol
or
dec
dec
push
sbb
jg
sbb
mov
adc
dec
mov
and
aad
push
ret
adc
lcall
mov
cmpsl
fmulp
mov
sbb
out
dec
lods
scas
rcrb
inc
gs
lret
dec
sti
nop
in
rclb
mov
rclb
lock
jno
lret
sti
sbb
mov
pop
in
js
adc
out
cmp
xchg
lret
mov
cmc
and
lods
jmp
jecxz
shll
ret
inc
mov
mov
xorb
mov
xor
and
adc
add
repz
and
xor
inc
mov
mov
xorb
mov
xor
and
adc
add
pause
jecxz
shll
ret
shlb
addl
mov
shlb
and
adc
add
repz
and
xor
inc
mov
mov
xorb
or
xor
mov
cmp
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
mov
push
out
leave
pushl
in
sub
imul
movaps
sbb
or
icebp
iret
jmp
mov
scas
mov
sub
pop
ja
dec
jg
arpl
sbb
or
and
imul
test
scas
jno
jns
add
push
sbb
dec
outsb
inc
jp
mov
xchg
lcall
push
push
cmpsb
ret
dec
insb
subps
push
loope
inc
jp
push
sbb
cmp
mov
das
test
iret
stc
rcr
test
xor
mov
cmp
xchg
shlb
sbb
mov
pushf
test
sub
sahf
cwtl
lds
mov
mov
sub
or
idivb
jl
adc
es
sub
ffree
rcrl
nop
dec
jnp
pop
sub
dec
das
jl
jl
jmp
mov
sbb
jo
sbbl
push
movaps
sbb
lret
out
movsl
mov
scas
xor
subl
pop
sbb
insl
push
mov
lahf
sahf
popf
out
cmpsl
call
ljmp
sbb
sub
or
or
inc
jp
push
dec
jno
stos
popa
mov
shl
enter
cli
fildl
sub
cmp
and
push
insb
jns
push
mov
mov
cltd
scas
mov
pop
outsl
dec
jg
movaps
sbb
or
stc
iret
jmp
mov
scas
mov
pop
outsl
dec
jg
movaps
sbb
or
stc
iret
sub
cmp
push
xchg
nop
xorl
xor
outsl
ret
fimuls
xchg
aad
cld
and
ja
roll
push
push
mov
mov
dec
negb
pop
ret
outsl
mov
dec
mov
popf
into
sarb
adc
or
add
mov
fs
cmp
loope
pushf
mov
xchg
roll
out
scas
jb
mov
lock
lahf
into
jne
adc
por
fs
dec
sbb
lahf
or
jg
xchg
test
sbb
xchg
in
mov
mov
mov
dec
nop
lahf
or
push
sub
inc
mov
and
scas
icebp
inc
sbb
test
push
iret
push
mov
dec
or
dec
fimuls
inc
clc
pop
jne
leave
xor
ret
mov
jge
gs
out
dec
adc
pop
dec
push
pop
cli
dec
xchg
fstp
test
and
cmp
xchg
xchg
xchg
cli
xor
xor
hlt
jae
xchg
aaa
jo
mov
call
xchg
call
adc
xchg
test
fwait
aaa
aam
out
cmp
lods
repnz
pop
adcl
jbe
and
inc
sbb
jl
and
mov
out
shll
jae
test
push
xchg
cmc
and
fnstsw
movsb
hlt
pop
sti
fst
std
sbb
leave
dec
test
bound
and
xlat
fs
inc
and
mov
sub
fadd
sbbl
sbb
push
cwtl
or
mov
dec
rorb
ror
mov
xor
sbb
fnstsw
xor
and
mov
jne
and
push
xor
mov
sarb
ror
ljmp
mov
and
xor
and
jmp
jle
arpl
mov
jns
test
add
fstpt
neg
in
and
loopne
nop
sub
sahf
nop
jne
or
xor
adc
and
mov
mov
insb
push
adc
inc
adc
insl
dec
ss
or
push
jbe
inc
push
adc
mov
cmp
push
sbb
adc
mov
pop
push
xor
xor
call
aam
int
xor
cmp
and
stc
add
jp
arpl
jbe
scas
push
jb
sub
stos
aad
xor
add
lret
std
push
pop
sbb
shlb
and
rorl
or
aad
sub
cmpsb
inc
fsts
mov
inc
or
push
test
repnz
data16
icebp
hlt
ret
dec
std
pop
pusha
shll
daa
mov
mov
lds
ret
int
inc
mov
fmull
mov
push
xchg
mov
cld
mov
inc
xchg
es
ret
into
pop
cmp
out
sub
neg
stos
popa
jo
jne
add
jns
stos
test
enter
add
xchg
adc
xchg
push
imul
movsb
daa
movsl
test
iret
aaa
xor
add
bnd
xor
lods
insb
jmp
inc
aam
movsl
aas
mov
ret
mov
clc
mov
ret
enter
test
cs
js
jb
mov
fs
mov
push
mov
lret
mov
cs
test
cmp
movsl
cmp
call
xchg
int3
add
or
repnz
lret
mov
lods
mov
vpsraw
lret
cmpsl
jmp
inc
lahf
and
inc
cmpsb
xor
stc
add
jnp
icebp
sub
out
outsl
mov
cmp
mov
mov
inc
ret
dec
or
or
jge
aad
and
ficoms
and
inc
mov
int
scas
jg
loop
mov
xchg
mov
jmp
sub
sub
mov
push
fsubrl
mov
jb
nop
cwtl
mov
push
cli
out
addr16
sbb
das
lods
popf
mov
mov
fs
mov
dec
jae
adc
mov
cli
push
push
stos
push
adc
sub
xor
xorb
inc
add
sbb
pop
in
xchg
addl
pop
add
add
xor
in
lods
xchg
arpl
or
fsubp
mov
and
xchg
sbb
inc
iret
sbb
jae
jno
popf
movsb
insb
lods
test
push
mov
call
insl
adc
xchg
imul
inc
mov
adc
and
js
rcl
dec
les
mov
sbb
dec
mov
cmp
loope
in
out
into
cmpsl
xor
in
cmc
xchg
scas
ret
fwait
mov
lret
enter
fldenv
xor
daa
aam
fdivrs
test
pop
push
mov
enter
add
cmpb
pop
cmpsl
inc
xor
jo
jge
popf
mov
xor
mov
or
pop
aaa
sbb
je
sbb
lret
es
add
aas
scas
sub
adc
add
pandn
rorb
jecxz
sar
add
addr16
cltd
dec
sbb
in
push
das
adc
in
adcb
xchg
test
mov
add
rcll
ficoms
scas
dec
cltd
cmp
shlb
mov
lahf
xor
xchg
mov
mov
jmp
jp
insl
push
loope
push
scas
aas
pop
fstpl
sarb
test
outsl
daa
mov
jb
stos
jl
mov
xchg
push
shl
push
std
fldl
sbb
xchg
xchg
mov
add
dec
cld
xlat
pop
or
push
sbb
mov
mov
xlat
add
sub
mov
push
cvtdq2ps
es
es
lret
add
push
std
adc
test
sar
push
shlb
and
adc
lcall
sub
dec
insb
loop
sub
and
push
popf
pop
sub
inc
shl
add
dec
xchg
push
scas
push
lods
cmp
stc
pop
and
inc
movsb
ljmp
fwait
push
mov
pop
sub
std
and
les
hlt
mov
in
cmp
dec
fadds
repnz
mov
cld
mov
sbb
out
aas
add
mov
cld
adc
cmp
xchg
dec
cmpsb
in
push
aas
jbe
inc
jb
lcall
ds
rolb
scas
and
cld
mov
rcrb
add
aas
inc
inc
mov
mov
cmp
fildl
fmull
sub
mov
mov
push
sub
or
mov
adc
jnp
fiadds
dec
mov
pop
shrb
mov
loopne
lods
lods
popf
jbe
add
in
ja
pop
mov
push
push
cmp
rorl
inc
or
inc
jge
jl,pt
sar
pop
fwait
imul
and
leave
cli
xchg
jmp
fs
mov
lahf
jnp
orl
clc
loope
sub
dec
aaa
cmp
xor
out
sbb
pop
lahf
into
inc
mov
rorb
movsl
pop
jl
adc
sub
je
ja
ss
jmp
repnz
add
loopne
fcomps
shl
push
inc
adc
sbbb
xchg
orl
mov
dec
cld
mov
fistpl
test
lret
xchg
push
mov
std
mov
pop
testl
ja
jmp
int3
cwtl
or
iret
sbb
and
push
lret
test
outsb
outsl
sub
jmp
pop
sbb
ret
nop
mov
mov
lods
mov
jle
xchg
out
mov
push
xchg
xor
into
adc
lds
pop
fs
xchg
and
icebp
movl
insl
hlt
into
pop
or
push
inc
adc
mov
mov
imul
sbb
shl
orl
popf
xor
mov
xchg
movsb
and
mov
int
mov
inc
or
pushl
popf
dec
aam
sub
cmp
shrb
dec
push
lods
mov
movsl
jbe
call
lea
and
mulb
fisttpl
outsl
adc
mov
adc
push
mov
or
test
fwait
test
push
aam
dec
push
inc
xor
jne
popa
sub
cmc
push
lcall
pop
and
aad
adc
je
roll
inc
push
jnp
orb
testb
inc
cmc
and
xor
enter
adc
push
sub
push
adcb
call
pop
push
stos
mov
and
xchg
int3
jl
adc
jp
popa
lahf
and
push
or
sub
ljmp
sub
adc
lcall
out
addl
mov
imul
pop
ss
stc
push
iret
pmulhuw
mov
mov
cli
push
decl
pop
dec
pop
and
inc
xchg
or
push
fwait
mov
push
jb
lods
sahf
inc
xchg
and
push
sbb
push
dec
aaa
shrb
push
icebp
sbb
cli
mov
xchg
int3
lock
xor
lahf
mov
bound
repnz
out
add
pop
jmp
adc
pop
stos
xor
xchg
xchg
jl
mov
adc
pusha
rcll
and
jp
mov
cmp
jmp
leave
out
push
lea
push
cltd
pushf
push
movsl
es
pop
repnz
dec
push
in
call
mov
inc
pop
push
and
sub
das
dec
adc
cmp
shrb
mov
jmp
ds
mov
ret
push
pop
jb
imul
mov
loope
mov
xchg
popa
insb
in
ljmp
pop
dec
imul
xchg
cmp
sub
cmp
loop
popf
jl
pop
ljmp
pop
roll
or
ret
or
mov
inc
shll
adc
jno
add
pop
call
int3
bound
fdivrl
jno
add
mov
ficoms
and
inc
aam
sti
sbbb
or
nop
sbb
lock
aas
push
sub
out
scas
popa
mov
jg
jne
fwait
cmp
sub
inc
out
test
push
and
shll
adc
jmp
orl
xor
fldenv
outsl
lret
adc
test
in
mov
inc
fmuls
clc
fdivrs
ljmp
test
and
sti
ffree
in
shll
inc
in
ss
lret
jle
and
leave
repnz
dec
fisubrl
fcoms
xor
push
in
dec
fiaddl
pop
push
mov
movl
dec
mov
and
loop
stc
faddl
lods
adc
push
aad
aam
push
push
mov
pusha
xor
mov
std
cli
aaa
mov
scas
adc
push
xchg
push
lods
sbb
xor
push
daa
shll
mov
and
pusha
sub
mov
mov
mov
mov
mov
in
add
dec
xor
or
mov
mov
insb
jle
and
not
jl
xchg
scas
jle
mov
cwtl
jns
addr16
mov
sbb
cmp
gs
call
insl
push
daa
int3
push
inc
jle
sbb
mov
mov
xlat
adc
imul
cmp
lds
scas
add
mov
add
imul
int
sahf
sub
stc
pop
push
fldcw
sarl
pop
jp
dec
test
jns
xor
pop
mov
cmp
and
push
dec
add
jo
lods
xchg
lock
cmp
add
pushf
xchg
std
mov
add
arpl
sbb
xlat
cld
fcoms
inc
mov
cmp
nop
dec
push
xlat
jmp
ja
jo
mov
xchg
or
mov
xor
outsl
movlps
stc
adc
rclb
jns
stc
iret
cmp
js
add
xchg
popf
fstps
loope
mov
out
imul
lcall
insb
ficoml
mov
inc
jmp
imull
inc
mov
mov
test
fimuls
cmp
cmc
adcb
mov
xorl
ss
daa
pop
arpl
adc
stc
repz
xchg
js
sbb
cmp
sbbl
pop
insl
or
dec
jnp
stos
jmp
xor
adc
enter
insl
pusha
mov
xchg
aas
sbb
hlt
popa
inc
cltd
push
xchg
push
test
cmpsb
inc
dec
stos
adc
das
jp
es
lds
ja
fidivrl
sub
xor
mov
shlb
rcr
adc
mov
push
testl
add
iret
or
add
jne
idivb
call
pop
pop
xor
sub
dec
adc
leave
mov
std
stc
or
lock
mov
adc
ror
push
imul
sbb
daa
sub
repz
push
or
cmp
jbe
clc
loopne
ds
mov
xchg
or
jmp
cmp
push
add
add
repnz
sbb
lss
inc
xor
fs
scas
jg
scas
sbbb
lock
xchg
pop
scas
aaa
cmpsl
lods
sub
mov
xchg
xchg
mov
xchg
or
je
dec
push
popf
jbe
sub
js
ss
icebp
xor
ljmp
adc
sbb
stos
inc
jg
pushl
dec
inc
es
xorl
push
imul
repz
xor
lahf
ja
loopne
push
push
and
das
inc
dec
or
mov
mov
or
into
sbb
cwtl
sub
xor
push
pushf
lock
xor
imul
and
lods
frstor
add
jg
inc
das
fmuls
xchg
fs
test
mov
test
jp
cmp
in
xchg
inc
add
xchg
jno
test
add
jne
hlt
cmpsb
test
pop
adcb
cmc
sbb
jmp
movsl
les
sub
fisubl
pop
rcr
push
xor
mov
and
push
shlb
push
cli
int
dec
insb
inc
xor
sub
sub
mov
dec
adc
adc
lahf
aam
movl
data16
aam
stos
outsl
lret
das
ljmp
pop
fnsave
jae
clc
in
jb
mov
xchg
dec
scas
sbb
cmp
jl
mov
mov
popf
jbe
xor
push
xchg
mov
cli
mov
ss
cmp
imul
insl
int
dec
cmp
loopne
and
scas
dec
jae
fcmovu
mov
cld
push
rclb
mov
outsb
mov
sbb
xlat
mov
push
push
jl
shlb
adc
add
jb
push
sub
xor
dec
dec
cmpsl
pusha
out
in
fs
cmpsl
xor
push
cmovae
mov
insb
notb
icebp
add
pop
xor
jg
aad
fs
movsl
xor
sahf
add
push
or
es
cmp
hlt
cmp
in
test
dec
in
adc
and
sub
cmpsb
xor
xchg
test
jg
mov
stos
sbb
in
jno
popf
cmp
fdivrs
cld
fucomi
push
cmc
inc
mov
lds
insl
sbb
xchg
mov
hlt
leave
jge
mov
ret
iret
test
mov
push
in
arpl
push
cmp
push
and
dec
jne
daa
sbb
scas
mov
fdivl
adc
lock
pop
push
xchg
sbb
movsb
add
push
and
and
cmp
shrl
xor
inc
icebp
push
pop
pop
or
xchg
jp
sbb
arpl
adc
sbb
push
daa
mov
inc
sub
mov
subl
jecxz
in
stos
stos
pop
jb
fldcw
pop
mov
mov
mov
push
aam
lea
cmpl
sti
jl
aad
mov
dec
fdivs
rorb
dec
int3
shlb
xor
scas
addr16
jecxz
add
out
mov
pop
ja
clc
mov
cmp
lods
pop
shl
push
gs
stc
je
movsl
cwtl
arpl
cld
gs
sub
mov
jns
mov
roll
mov
nop
ret
notb
adcb
or
lea
in
leave
xchg
mov
jge
imul
pop
adc
jl
xchg
mov
push
lods
repnz
hlt
add
xor
repz
les
mov
xchg
mov
mov
shl
repnz
mov
push
jg
push
popf
pop
imul
addl
shll
lret
in
mov
push
dec
mov
das
cmp
xchg
sbb
outsb
arpl
jnp
insl
xlat
xor
daa
out
mov
mov
test
push
mov
stos
aas
scas
cmp
into
repz
sub
mov
lahf
out
out
sbb
xlat
xchg
and
xchg
or
add
pop
stc
mov
cs
jb
sub
testl
jmp
das
nop
ljmp
push
lds
pop
or
cmp
repnz
xchg
fcoms
add
in
lock
mov
xchg
addr16
jne
negb
jae
cmp
in
push
jne
or
jno
sub
das
xchg
mov
jno
mov
out
dec
popl
leave
inc
aad
in
lcall
cmp
mov
repnz
pop
and
inc
pushf
jecxz
pop
enter
fs
adc
mov
mov
fcmovu
jecxz
in
mov
dec
mov
cmp
icebp
pop
stos
test
and
sbb
fs
jnp
call
xchg
stc
add
sbb
inc
cltd
lgs
xchg
push
fsts
sbb
push
test
icebp
cmp
mov
xchg
pop
cld
out
or
pop
cwtl
mov
scas
add
push
fwait
push
jno
repz
lret
out
fucompp
or
enter
lahf
add
iret
push
adc
fistps
add
cmpsb
cmp
leave
jbe
stos
xchg
repnz
es
clc
mov
jle
mov
inc
sbb
notb
pop
lret
add
push
xorb
xor
xchg
cmp
pop
mov
mov
aam
out
pop
mov
repz
out
in
mov
hlt
mov
mov
xchg
jns
loope
mov
insb
outsb
fdivp
in
xchg
movsl
imul
sub
push
loope
mov
pop
int
push
push
push
std
das
movsb
dec
inc
jae
mov
popf
sbb
sar
jecxz
inc
rcr
xor
xlat
movsb
adcl
push
test
push
frstor
and
aam
mov
imul
push
mov
clc
and
imull
mov
jle
flds
inc
jo
fwait
jp
roll
mov
push
jl
fidivrl
inc
mov
dec
std
mov
in
sbb
lret
fistpll
mov
movsb
push
aaa
xor
mov
imul
jp
adc
lcall
out
xchg
scas
cltd
cs
sahf
push
xchg
add
push
cltd
int3
pop
cmpsl
push
testl
pop
ds
popl
sub
push
mov
add
ret
popa
xor
in
or
mov
mov
inc
push
movsb
dec
aam
nop
in
ficomps
xchg
int3
pop
out
sbbl
lock
cmp
pop
lds
mov
push
xchg
mov
out
adc
lock
fs
movsl
xchg
out
and
mov
or
or
sbb
xchg
daa
xchg
call
mov
add
es
cmp
pushl
int3
mov
clc
mov
xchg
xchg
push
cmp
repnz
out
cltd
les
pop
movb
shrl
insl
insb
fsubs
cmpb
sub
lock
mov
repnz
fwait
mov
lret
mov
lcall
sbb
add
xchg
sbb
hlt
and
in
loopne
cli
pop
stc
or
scas
ficomps
jmp
test
mov
sub
scas
mov
jb
dec
lcall
shrl
and
shlb
faddl
dec
js
gs
sub
adc
testb
pop
lea
mov
jge
ds
jb
jle
add
ret
xor
lods
xor
xchg
xchg
cltd
cmp
push
sbb
mov
mov
fwait
pusha
push
cmpsb
sub
xor
sub
add
adc
cmp
aam
mov
outsb
ja
and
sub
inc
sbb
in
add
pop
outsb
fdivr
stos
daa
dec
jae
xor
jne
repnz
leave
pop
sbb
and
inc
subl
and
jmp
sahf
cmp
dec
adc
and
int
insb
mov
push
test
cmp
mov
testl
and
cmp
mov
loope
pushf
lret
loopne
lds
mov
or
mov
or
std
aad
sbb
movsl
paddb
jp
jg
jne
lcall
sbb
xor
pop
push
cmp
cmp
xor
in
jp
js
mov
mov
fildl
icebp
or
adc
jne
enter
stos
mov
dec
lret
daa
fwait
sbb
jge
test
rcll
cwtl
mov
push
pop
int
ljmp
lahf
arpl
scas
xchg
mov
test
loope
pop
fnstcw
pop
and
push
loopne
les
lret
inc
sub
pusha
mov
pusha
lahf
dec
stos
daa
mov
or
xor
sub
push
and
aam
jae
divb
mov
mov
add
mov
mov
cli
test
cmpl
pop
ljmp
push
outsl
push
xor
fnstenv
mov
movsl
stos
mov
sbb
insl
fstpt
fstps
mov
xchg
cmp
pop
imul
dec
fsubr
pop
movsl
mov
cmp
or
cmp
pop
out
xchg
and
or
mov
inc
subb
fisttps
xorb
int3
sbb
mov
scas
lea
sbb
aad
jg
push
xchg
mov
fldcw
sub
xchg
xor
pop
ljmp
or
mov
in
mov
stos
out
push
imul
inc
shl
loope
cltd
push
popf
sbb
sbb
pop
cmp
or
push
push
ss
adc
xor
lds
xchg
in
push
jl
jns
loop
push
push
push
data16
in
sar
mov
gs
loopne
mov
add
lret
add
aas
inc
pop
mov
mov
pop
stc
dec
sub
inc
xor
and
mov
and
jg
fdivrp
inc
cld
in
and
jp
lea
in
mov
lahf
adc
xchg
sbb
int3
pop
js
incl
iret
adc
inc
dec
stos
jge
jp
std
in
mov
pop
lods
leave
and
shll
or
orb
sub
push
sahf
daa
rcl
dec
xor
jp
int3
adc
mov
leave
mov
jecxz
fcmovnu
adc
mov
push
sub
loope
sbb
add
aad
mov
scas
mov
pop
outsl
dec
jg
movaps
sbb
or
stc
iret
jmp
mov
scas
mov
pop
outsl
dec
jg
movaps
sbb
or
stc
iret
ljmp
lods
lahf
cltd
scas
mov
push
outsl
dec
jg
wrmsr
pop
sbb
iret
vsqrtsd
loope
mov
scas
or
rep
dec
or
mov
ror
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rolb
add
cld
add
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
add
add
add
jl
add
je
add
insb
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
add
add
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
add
add
add
add
add
adc
add
sbb
add
and
add
aaa
add
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
add
add
push
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
faddl
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
pop
add
fs
add
pop
pop
add
push
pop
add
dec
pop
add
inc
pop
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
pop
add
mov
pop
add
rolb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
or
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fmull
add
in
add
in
or
add
or
add
or
add
add
pop
or
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
or
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
