push
mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xchg
add
and
xor
cli
je
push
or
jb
mov
xchg
movsl
mov
mov
hlt
loop
repnz
adc
and
inc
push
inc
bound
mov
les
hlt
repnz
adc
and
xor
inc
pop
push
dec
fs
push
cmpsl
lea
popf
je
adc
push
mov
addl
stos
cmpsb
in
enter
mov
jg
push
add
bound
pop
mov
icebp
jge
insb
std
repnz
mov
or
sbbl
fidivrs
push
add
test
dec
dec
jp
adc
loopw
mov
pop
adc
add
fsubs
inc
js
test
je
xchg
bound
movsl
pop
pop
aas
and
xchg
sbb
jmp
ja
and
sbbb
je
in
jle
insl
hlt
pop
mov
xchg
sarb
std
adc
scas
fidivl
negl
inc
clc
rcrl
dec
mov
aam
in
cmc
hlt
pop
adc
xor
inc
inc
push
push
bound
adcb
fcmovbe
lret
hlt
repz
push
pusha
dec
inc
jp
pop
inc
xor
and
adc
in
in
es
lret
cmpsb
rcl
mov
cwtl
rorb
imul
push
jl
and
sbb
push
or
idiv
neg
shll
mov
jmp
jb
cmp
inc
inc
adc
add
bound
adcb
ret
in
hlt
repnz
adc
and
xor
inc
inc
push
push
bound
adcb
ret
in
hlt
repnz
adc
test
leave
jbe
and
mov
jmp
jns
rcll
mov
jmp
cli
in
pop
sub
sbb
mov
sbb
loop
dec
fcoms
test
ja
add
sbb
fsts
das
lods
push
dec
addr16
and
pop
rolb
shll
cmpb
outsl
int
fdivr
push
ret
push
push
jle
fisttpll
jl
add
imul
sti
jb
add
in
hlt
out
inc
adc
test
lods
xor
int
daa
scas
movsl
mov
call
test
les
mov
loope
fwait
inc
out
add
and
mov
fmull
adc
cli
ja
ljmp
cmpsb
daa
hlt
clc
mov
fbstp
je
xor
fcmovnbe
subl
std
pop
bound
pop
push
rcrl
or
mov
sarl
fbstp
call
fcoms
popf
ss
loopne
in
sub
iret
push
sub
mov
addl
jl
jae
scas
xor
shlb
stos
sbb
sub
outsl
int3
dec
sbb
dec
lock
arpl
inc
arpl
sahf
test
testb
lret
mov
dec
mov
ljmp
outsl
rcrl
fstl
insl
iret
mov
push
fwait
xchg
loopne
test
xor
imul
cmp
or
movsl
loope
cmp
mov
fmull
fisubrl
inc
test
pop
sbb
outsl
or
sbb
ss
add
lods
xlat
iret
dec
push
inc
jnp
repnz
mov
pop
test
and
aas
mov
or
je
out
jmp
sbb
jge
sbbl
adc
addr16
or
push
into
pop
call
lock
fdivp
push
cs
pop
insb
pop
adc
cmp
ret
insb
xorb
in
xor
fistpl
inc
mov
je
mov
sarl
mov
out
or
push
js
dec
jg
sbbb
push
jecxz
es
jne
and
loop
and
xor
cmp
jbe
push
cli
and
pop
imul
push
lret
cmc
fimull
jae
stos
aam
sbb
mov
mov
outsb
and
ret
mulb
repz
sub
lea
push
fwait
mov
push
outsl
pop
mov
and
pusha
fstpl
cmpsl
out
jno
mov
ret
out
fs
addl
testl
xor
repnz
sbb
mov
xchg
sahf
sbb
jle
or
test
outsl
xchg
xchg
mov
cmp
aas
mov
adc
mov
and
add
rolb
jae
and
inc
jne
sub
push
adc
pause
xor
xor
stos
insl
push
push
jae
xchg
sub
scas
cmp
xchg
dec
ja
test
sub
sbb
stc
xor
lahf
pop
jle
fucomi
insl
and
pushf
test
popa
push
sub
sub
insl
sbb
and
add
jp
cmp
and
decb
xchg
inc
xchg
and
sub
insb
movsb
and
xor
in
fadds
mov
add
cmpsl
lock
and
or
jns
shl
fst
dec
and
repnz
add
sar
das
cltd
insl
xor
jne
jl,pn
rorb
sub
mov
sbb
jecxz
mov
jnp
xchg
lcall
or
ss
arpl
pop
mov
xchg
int3
div
or
aam
mov
or
pop
adc
std
mov
loopne
lret
fists
andb
pop
loop
sbb
and
les
das
cmp
mov
dec
mov
dec
jp
push
test
sub
test
add
gs
dec
je
push
test
sub
movsl
mov
push
inc
inc
jbe
push
scas
jne
addr16
push
push
pop
or
outsb
sub
scas
push
inc
shlb
ljmp
cmc
mov
cmp
gs
inc
adc
pop
sbb
inc
push
movsl
lds
xor
gs
rol
lock
adc
pop
rcl
mov
xchg
mov
rcll
ret
out
push
add
pop
jb
and
test
nop
test
lods
mov
or
hlt
mov
push
rcll
cli
int
mov
call
lods
and
cmpsl
and
sub
mov
and
int
inc
pop
cmp
or
pop
inc
jmp
sti
push
lds
test
outsb
or
inc
add
mov
cs
xchg
stc
cmpsl
mov
push
mov
es
orl
mov
test
cwtl
ret
lret
pop
neg
ljmp
aas
jno
test
cmp
into
insb
adc
inc
ljmp
adc
in
clc
jge
xchg
outsl
push
ret
andb
cmpsb
cmp
inc
aad
call
lock
push
rclb
xorl
fisttpl
cmp
xchg
repz
incl
and
shrb
out
xor
inc
mov
fists
and
cmp
push
shlb
lcall
gs
sbb
pushf
sahf
int
and
mov
sub
cmp
enter
jl
push
pusha
push
loope
sahf
cmp
cld
fnstenv
cwtl
sub
push
out
pusha
outsb
rcrl
cmpsl
mov
xchg
in
icebp
mov
out
adc
inc
orb
cmp
xchg
sub
bound
xchg
xchg
cmpsb
pop
pop
in
subb
mov
test
lret
cld
scas
fadds
mov
push
roll
rcr
push
out
std
and
xor
xchg
push
mov
mov
sysret
push
cmpsl
icebp
mov
call
jge
pop
out
xchg
or
subl
push
add
mov
inc
ret
mov
js
and
stos
lods
mov
clc
test
scas
fldln2
sub
gs
std
xor
xchg
fwait
pop
js
mov
in
xchg
scas
mov
dec
arpl
loopne
mov
xchg
sbb
and
in
pushf
pusha
test
cs
aad
pop
cltd
xchg
sahf
inc
popa
mov
std
pop
lock
ret
jo
mov
dec
or
mov
fistl
js
subb
jg
fdivl
sub
jg
push
ja
call
sbb
aad
xchg
add
mov
lds
pop
and
xor
sar
out
les
mov
sub
push
xchg
inc
xchg
lcall
xor
imul
fistl
outsb
test
or
and
mov
addb
imul
out
addl
lahf
xor
loop
jne
fisttps
sti
and
out
or
xchg
mov
jns
cmp
in
std
cmp
mov
xchg
and
mov
jne
xchg
mulb
add
push
and
cmp
aas
ret
pop
insb
adc
mov
cs
xor
or
insl
insl
jmp
stos
cmp
bound
push
icebp
jg
xor
sbb
mov
scas
out
sbb
mov
outsb
incb
cmp
leave
mov
out
loopne
ficomps
insb
dec
stc
imul
repnz
pop
fwait
push
jae
xchg
jmp
mov
push
outsb
cmpsl
popa
test
push
sbb
mov
fiaddl
jns
inc
insb
push
push
cwtl
mov
ficomps
mov
pop
iret
dec
mov
jnp
pop
negl
mov
mov
mov
xchg
push
pop
xor
or
scas
leave
sub
sbb
sbb
cmc
pop
fldpi
out
and
clc
and
jnp
inc
std
outsl
dec
ss
jmp
fstps
push
xchg
orb
add
add
ret
mov
xchg
insb
jl
stc
sbb
in
mov
mov
mov
cli
int
jbe
add
pop
inc
ret
jl
insb
push
icebp
dec
stos
hlt
pop
pop
cmp
inc
mov
mov
jns
stos
jl
hlt
dec
pop
sub
jbe
mov
sbb
push
mov
mov
mov
inc
cmp
sub
mov
push
mov
call
push
bound
jae
js
push
movsb
mov
xor
xor
lock
loopne
mov
mov
shrl
jg
fdivr
mov
ljmp
jne
adc
movsb
pusha
cmp
rclb
lods
cmp
dec
movsl
test
mov
repz
outsb
mov
hlt
scas
and
insb
pop
inc
add
rorl
mov
or
xor
push
and
loop
ss
sbbl
sub
out
stos
in
arpl
sub
mov
xor
push
fisubrl
ret
add
idivb
or
cmc
jmp
lds
int
mov
roll
sub
pop
outsl
inc
jno
push
jge
mov
je
adcb
cmp
cmp
fdivrl
sbbl
sub
rolb
imul
out
mov
popf
loop
addr16
mov
sbb
sti
insl
sub
xchg
incb
iret
jp
outsl
in
es
mov
enter
ds
cmp
xchg
aaa
xlat
scas
fistps
in
push
cmp
xchg
pop
in
dec
out
jge
in
mov
stc
mov
out
iret
pop
pushf
sti
fdivrs
sbb
arpl
pop
adc
jns
dec
sub
scas
mov
sbb
and
fsubs
cld
cwtl
sbb
mov
add
iret
and
pop
leave
mov
push
fistpl
jle
scas
dec
aas
icebp
pop
lds
int
mov
mov
jo
leave
push
adc
dec
dec
movsb
mov
push
or
pop
mov
mov
sbb
mov
push
jle
stc
test
scas
mov
in
fwait
test
mov
push
mov
jle
pop
movsb
les
mov
faddl
into
jmp
gs
inc
popa
push
fisttpll
adc
test
cmp
stos
test
mov
outsb
fnstenv
cmp
stos
lock
fwait
es
or
and
aas
lahf
mov
mov
jns
jmp
xor
mov
arpl
sahf
int
fisubl
or
xchg
xor
fsts
fisubl
jp
add
pop
pop
shll
fsts
jecxz
adc
into
and
and
or
out
out
icebp
xchg
into
mov
in
lods
add
scas
repnz
clc
cltd
nop
sbb
fldenv
cmp
mov
mov
cld
dec
enter
outsl
adc
or
mov
jb
test
in
sti
xchg
shrb
jbe
xchg
clc
xchg
cmp
icebp
inc
dec
lock
pop
sbb
shl
sbb
dec
dec
mov
daa
enter
or
xor
rolb
mov
or
jmp
mov
das
aaa
pop
lcall
pusha
push
jl
cmp
sbb
inc
mov
cmp
mov
sbb
icebp
mov
loop
fadd
pop
rcrl
fsubl
psllw
ret
cmp
fimull
dec
inc
and
and
pop
movsb
pop
inc
xchg
out
mov
rcrl
faddp
pushf
pusha
mov
mov
cmp
iret
out
cmp
cmc
cli
sub
popf
mov
cld
adc
test
adc
sub
mov
js
lds
cmp
or
insb
fadd
lret
faddl
outsl
out
imul
or
mov
dec
jle
mov
xchg
movd
mov
jle
orb
mov
gs
leave
jecxz
add
lock
icebp
mov
daa
inc
fimuls
fistpll
pop
mov
or
call
xchg
adc
xor
jmp
xchg
arpl
ret
iret
xchg
mov
jge
insb
xlat
add
adc
jl
mov
push
ljmp
and
movsl
inc
jae
mov
adc
mov
pop
scas
fs
cli
out
adc
lock
add
loopne
sub
into
mov
inc
dec
ja
cs
push
pop
pop
xchg
or
orb
xchg
stos
cmp
out
jb
lahf
cmpsb
fidivs
add
into
mov
fidivrl
mov
xor
pop
mov
nop
ror
sbb
cmp
arpl
lock
in
movsl
in
int3
sub
xchg
jmp
lret
xchg
pop
jae
loopne
add
das
jecxz
pushf
xlat
nop
flds
mov
push
iret
loope
or
scas
sub
jl
pop
push
mov
pop
mov
sbb
jecxz
cs
pop
sar
push
shlb
mov
mov
xchg
push
fstp
cli
jne
test
jno
test
les
mov
stos
ss
pop
xchg
addr16
je
cmc
inc
repnz
shrd
cmp
mov
mov
add
cmp
scas
add
mov
sbb
or
les
leave
push
pop
in
jle
fildll
scas
pop
inc
inc
test
test
mov
mov
adc
xchg
xchg
into
mov
out
cmp
jns
addl
mov
psadbw
cmp
push
repz
mov
jne
mov
out
adc
sbbb
sub
jne
ret
repnz
jp
stc
add
fisttpll
lods
xchg
aam
inc
stos
out
gs
popa
data16
pop
std
inc
fbstp
push
pop
mov
mov
adc
pop
xor
je
or
mov
fnsave
mov
xor
bound
roll
int3
sbb
rol
dec
fdivr
loope
mov
jo
pop
jle
repnz
aad
out
mov
aad
jo
xor
push
pop
jnp
lea
fcom
insl
adc
xchg
jl
lcall
adcb
fwait
push
pop
inc
cmp
stc
jb
cmpsl
push
stos
and
popa
out
and
aas
xor
inc
out
imull
daa
dec
push
mov
or
nop
xor
scas
imul
ficoml
std
jbe
cmp
test
sbb
inc
loope
sub
stc
mov
sub
add
adc
loopne
inc
repnz
divb
enter
jns
in
pop
push
in
cmp
inc
dec
xchg
mov
jnp
mov
inc
push
mov
push
jecxz
ss
lock
cld
loope
cmpsl
aad
jg
into
out
stos
and
xchg
dec
and
movsl
dec
sub
sub
push
test
cld
or
sub
push
outsb
push
test
imul
mov
push
lock
mov
or
pushf
les
inc
mov
test
cli
jnp
and
lcall
adc
cmp
fidivrs
out
lea
cmp
sub
imul
pop
ret
mov
and
dec
push
stos
inc
mov
insl
movl
cmp
hlt
inc
dec
push
sub
call
push
mov
jnp
scas
repnz
cmc
outsl
xchg
lahf
addr16
xchg
insb
inc
jp
jecxz
nop
fwait
test
cld
push
dec
mov
out
ss
sbb
sbb
addr16
add
push
fadds
jecxz
add
popf
push
inc
xchg
xor
daa
mov
nop
clc
icebp
jg
mov
mov
arpl
inc
out
jge
xchg
addr16
test
lods
xlat
bound
pop
jecxz
xor
adc
add
xor
xor
fildl
mov
inc
push
sub
xor
dec
icebp
inc
movsl
jno
stc
xchg
xchg
clc
movsb
mov
dec
pushf
je
lcall
xchg
int
add
scas
pop
clc
jns
add
fadd
pop
inc
push
imul
cld
xor
jmp
jo
lahf
xchg
repnz
imul
inc
add
rcll
jge
push
cmp
fs
fisubl
mov
sahf
push
fdivrl
ficompl
les
jle
divl
xlat
ficomps
aaa
test
lret
sub
int
lods
fists
stos
xor
mov
adc
movsb
xor
add
fwait
test
push
jp
mov
cmp
add
adc
bound
insb
movsb
push
pop
std
mov
fdecstp
push
dec
cli
jne
inc
xor
aam
mov
bound
mov
cltd
sub
out
sbb
sbb
jp
movsb
xchg
cmp
pop
mov
push
mov
loopne
imul
pop
icebp
add
test
jb
pop
fcompl
ljmp
icebp
outsl
xchg
into
push
or
mov
inc
cmp
mov
xor
pusha
je
iret
mov
mov
xor
in
xchg
in
mov
mov
mov
test
cmc
inc
in
fs
fcompl
add
sub
lea
data16
insb
pop
leave
sarl
add
jb
mov
inc
loope
mov
xor
mov
out
iret
sbbb
and
ja
adc
add
push
mov
popf
inc
cs
mov
sti
incl
loopne
lahf
clc
xchg
dec
enter
das
shlb
test
loope
jnp
adc
lret
xchg
and
lods
pop
imul
push
xchg
repnz
int
mov
adc
mov
pop
mov
lea
mov
push
sbb
idivl
dec
cmp
iret
add
xchg
jle
or
jb
mov
inc
adcb
faddp
insl
daa
popa
sahf
cmc
cli
stos
mov
sar
in
fcomp
xor
cmp
cmpsl
jbe
mov
cli
dec
mov
mov
hlt
in
mov
cmp
mov
inc
ljmp
insl
xlat
xchg
xchg
lock
xlat
jl
fmull
inc
scas
test
push
sbb
movsl
add
stos
fwait
dec
or
scas
rcll
xchg
int
cs
rolb
jae
xorl
jecxz
adc
xor
ja
data16
and
jmp
fstpl
or
xor
or
xchg
push
out
pop
insl
iret
test
jne
sbb
or
das
cmp
pop
mov
fwait
push
lret
pop
cmp
inc
daa
inc
adc
imul
push
mov
test
cmp
xor
sub
cmp
repz
jmp
cs
xchg
lock
mov
cmc
cmp
iret
mov
iret
ja
sbb
xor
fsts
test
nop
adcb
orb
cmpsl
loop
lcall
lods
fnsave
lret
icebp
push
je
shl
cmpsb
and
call
mov
xlat
mov
or
icebp
and
dec
push
adc
pop
iret
sbbl
idivb
mov
mov
xor
lahf
adc
hlt
imul
aad
rcrb
mov
lods
lret
add
jp
aam
imul
cwtl
ficompl
push
add
leave
mov
cltd
push
dec
popf
jno
ss
lds
test
cld
inc
xlat
or
inc
es
idiv
das
sbb
cmp
scas
inc
cmp
ror
cmpb
push
mov
fdivs
or
jl
mov
xor
wbinvd
das
insl
clc
adc
inc
or
sti
dec
sbb
dec
mov
or
mov
cmp
mov
arpl
xor
call
aam
and
sbb
ljmp
xor
xor
push
ss
imul
xor
sub
cs
ljmp
push
xchg
mov
xor
cmp
addb
mov
add
enter
pusha
cwtl
or
add
clc
sub
or
cmp
aas
pop
mov
sbb
dec
push
inc
dec
xor
lret
mov
repz
add
mov
test
call
add
push
pop
pop
out
xchg
mov
dec
fmuls
in
mov
aaa
mov
pop
mov
call
xchg
xchg
jmp
sahf
push
mov
lock
xor
jne
mov
dec
lret
idivl
popf
shlb
popf
aas
sti
pop
jne
and
popa
mov
or
rorb
ss
lock
sub
push
dec
in
out
orb
bnd
pop
popa
push
dec
sti
hlt
add
mov
mov
ret
xchg
scas
test
shl
enter
mov
or
aaa
mov
imull
add
into
mov
imulb
adc
es
popa
insb
or
sub
leave
testl
push
jl
mov
and
stc
fs
sti
xchg
leave
lret
clc
push
loop
mov
out
popf
push
insb
sbb
into
push
into
add
jae
inc
int
mov
or
mov
rorl
xchg
mov
sbb
jns
lods
mov
orb
push
rcll
adc
xor
inc
inc
push
push
bound
adcb
ret
in
hlt
repnz
adc
and
xor
inc
inc
push
push
bound
adcb
ret
in
hlt
repnz
adc
and
xor
inc
inc
push
push
bound
adcb
ret
in
cmc
testb
xor
inc
inc
push
push
bound
adcb
dec
pop
lods
sbb
in
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
shlb
jmp
repz
jg
sub
sti
popa
jmp
fwait
add
mov
rorl
loope
xchg
sbb
pop
push
fildl
adc
popa
jmp
hlt
add
imul
cmp
daa
loope
scas
aad
xor
movsb
add
jp
jae
gs
jge
mov
push
mov
xchg
sub
subb
repz
fdivs
cs
stos
push
add
and
pop
jno
xlat
mov
jnp
imul
lcall
das
pop
test
popa
testl
popf
xchg
mov
fs
add
sbb
pop
adc
or
arpl
mov
fwait
cmc
into
lahf
pop
out
lcall
cs
int3
mov
insl
aas
or
xor
sub
ret
cmp
jmp
enter
stos
sub
div
push
push
outsb
pop
push
xlat
fildl
clc
add
repz
lcall
mov
mov
jne
stc
or
pop
fisttpl
pop
mov
jae
mov
mov
test
cltd
inc
outsl
out
lds
dec
push
popf
adc
arpl
outsl
lcall
inc
lret
movsb
or
je
cmp
inc
ss
sbb
fisubl
mov
sub
or
fildl
jno
popa
jmp
fwait
add
rcrl
dec
icebp
jnp
imul
mov
lret
jno
popa
jmp
fwait
add
rcrl
pushf
xor
and
sub
cmp
xor
std
adc
aas
xchg
sub
sahf
sub
fs
and
adc
daa
inc
dec
rolb
mov
out
mov
mov
lods
ret
mov
rclb
mov
dec
jmp
pushf
jg
arpl
push
js
adc
push
test
cld
subl
mov
fs
mov
bound
pop
pop
sbb
xchg
pop
jo
iret
mov
rorl
mov
cwtl
fldcw
imul
sbb
jp
aas
sbb
or
or
mov
cli
add
xor
add
xchg
xchg
out
sub
mov
inc
push
popf
js
out
or
test
arpl
mov
outsl
xlat
shrl
jnp
das
xchg
dec
or
xor
adc
lcall
push
push
sub
mov
mov
orb
and
mov
insb
cld
pop
sbb
jae
pop
gs
mov
mov
add
test
inc
add
jl
mov
sub
ja
das
mov
shlb
or
int
dec
pop
loopne
mov
push
stc
icebp
xchg
xchg
pop
xchg
roll
fisttpll
imul
int3
xchg
fsub
loop
bound
insl
dec
push
jmp
stos
sub
lcall
jp
push
test
mov
xchg
test
test
dec
push
add
cltd
add
and
into
aaa
aad
fimuls
scas
pop
dec
xor
mov
push
mov
cmp
adc
xor
lahf
xchg
or
add
push
or
xchg
stos
adc
push
cmpsl
std
aam
outsb
pop
les
pop
pusha
or
jnp
add
inc
or
cld
out
int
or
inc
lahf
inc
ret
mov
dec
gs
inc
lret
dec
xor
ret
adc
adc
fs
hlt
in
jge
cltd
mov
aad
jp
mov
fistps
cmp
mov
inc
push
nop
cmc
nop
inc
in
mov
movsb
pop
mov
mov
pop
cmp
xor
lret
cwtl
inc
xchg
pop
iret
pop
addl
icebp
out
jo
pusha
popf
repz
aas
subb
cld
sbb
dec
and
loopne
mov
adc
loope
jbe
fildll
mov
push
cli
iret
testb
mov
xlat
sbb
push
dec
mov
into
mov
xchg
sbb
cld
inc
or
scas
pop
push
cmpsl
dec
shlb
div
xor
insl
add
pop
mov
roll
pop
mov
gs
loope
inc
daa
and
or
jecxz
popa
mov
jno
jmp
daa
insb
repnz
mov
in
ja
cmp
adcl
inc
pop
ja
hlt
or
stos
and
push
adc
add
inc
mov
mov
mov
fucomp
test
imul
lock
sti
sub
push
and
xor
outsb
movq
jl
rorb
lret
test
loopne
sub
fwait
testb
je
cmp
dec
rorb
sub
mov
repnz
lea
dec
cs
je
xor
bound
lcall
cmpsb
xchg
cmc
mov
out
scas
mov
sub
push
push
in
xchg
in
or
fiaddl
mov
xor
dec
nop
les
sbb
dec
push
lcall
mov
jecxz
aad
mov
add
sti
push
inc
imul
mov
sub
add
sbb
push
sbb
insb
iret
iret
mov
repz
dec
in
mov
jne
jbe
addps
push
fisubrl
shlb
push
jge
in
jne
inc
xor
aam
push
xor
std
add
jns
in
push
mov
mov
inc
call
cmp
push
mov
mov
icebp
add
pop
cmc
pop
out
add
mov
xchg
roll
cmpsl
arpl
cmpsb
push
lret
es
jp
mov
scas
add
push
mov
sbb
xchg
sti
insb
cmp
sti
lods
imul
sbb
push
mov
js
xor
sub
mov
test
std
jmp
arpl
movsl
icebp
stos
dec
mov
xorl
push
cmpsl
nop
inc
int
leave
bound
add
mov
test
jo
sub
adcl
mov
jo
aaa
iret
call
pop
sti
xor
mov
push
bswap
pop
jle
xchg
aad
xor
and
shlb
lret
int
pop
cmp
mov
cli
arpl
outsl
jb
mov
jne
add
fidivl
cmp
arpl
mov
rorb
stos
stos
push
imul
inc
cltd
mov
cli
jns
scas
inc
jb
mov
inc
sbb
addr16
test
aaa
std
push
push
test
call
add
icebp
xchg
rcr
sti
sbbl
call
jecxz
sub
inc
stos
aaa
and
push
in
sub
cmc
in
mov
std
mov
push
mov
xor
sub
insb
adc
inc
or
repz
movl
sbb
test
fisubrl
popf
jp
std
mov
fnstcw
test
pop
ret
subl
in
test
out
push
rorb
add
and
ret
adc
loopne
add
repz
mov
dec
je
das
test
and
or
jecxz
insl
inc
xor
fcoms
jbe
xchg
mov
xor
push
or
xchg
add
out
stos
jl
ss
mov
fwait
pop
xchg
jo
xlat
imul
sbb
aam
and
jne
jg
in
out
js
mov
lcall
adcb
xor
pop
pop
int
fsubl
and
mov
aam
pop
or
xchg
adc
and
outsl
cs
int3
stc
fdivs
mov
lcall
lods
repz
jae
sbb
jnp
daa
movb
jmp
aam
lcall
fs
popa
mov
test
dec
pop
push
imul
ret
push
cs
popl
js
xchg
adc
repnz
loopne
mov
push
je
or
movsl
aam
scas
push
fisttpl
pop
and
and
jbe
jne
jg
mov
and
rolb
lds
xchg
les
xor
ret
aad
lret
xor
adc
inc
mov
add
mov
xchg
pop
into
and
in
add
out
xchg
push
cmp
inc
loope
cmp
jae
leave
add
inc
mov
in
test
pusha
lods
icebp
cwtl
in
fisubrs
xor
jbe
in
jecxz
sti
cmp
jo
stos
clc
inc
xchg
add
push
push
popf
cmp
es
inc
inc
sub
std
inc
adc
push
and
in
lods
dec
mov
ja
pop
jg
sub
ret
add
xlat
lret
arpl
dec
in
push
out
adc
mov
sarb
mov
dec
daa
mov
lcall
adc
xor
pop
xchg
shlb
fdivr
insb
fsubl
call
lds
rcrl
addb
cltd
xchg
and
xchg
or
cmp
add
pop
pusha
mov
arpl
or
dec
lock
in
xlat
push
adc
add
loop
jmp
mov
pop
dec
or
mov
bnd
ret
aaa
in
in
jo
mov
pop
shll
adc
rcrb
mov
in
jb
xchg
mov
ficoml
dec
aaa
lock
inc
cmp
insb
inc
loopne
push
jae
mov
rcrb
dec
mov
das
out
push
in
fcoml
insb
jnp
inc
les
cld
les
cmp
sbb
add
push
xor
sub
fnsave
adc
pop
and
cmp
xlat
sarb
subl
inc
xor
nop
das
mov
or
mov
cmp
lods
popf
in
jp
inc
fdivs
jp
in
rorb
pop
cmp
adc
add
jge
je
pop
enter
xchg
mov
and
rcrl
out
mov
in
pop
inc
ret
inc
iret
pop
cmp
or
and
popf
sahf
push
jmp
add
clc
push
sahf
adc
mov
stos
inc
arpl
rcl
fwait
jle
ds
mulb
in
stos
push
test
inc
sbb
mov
je
add
adc
sub
jmp
int3
fnstenv
cltd
arpl
push
inc
icebp
int
les
push
test
jle
jb
sbb
jmp
sbb
inc
jno
dec
sbb
in
popf
imul
xchg
push
cmp
mov
lock
stos
int3
int3
fmull
adc
cmp
and
cmp
cmp
aaa
mov
ret
cmp
iret
and
lods
push
fistps
xchg
lods
jg
xchg
fwait
in
mov
sub
or
cmp
scas
adc
or
vmovhps
loopne
xor
inc
pop
pop
push
call
or
outsl
jp
lahf
push
dec
jecxz
pop
stc
or
loop
and
int
in
sarb
mov
lret
xchg
xor
add
mov
dec
sbb
mov
test
or
xchg
rcll
jae
ret
push
add
push
jbe
pop
pop
and
push
out
test
pop
icebp
sub
inc
jo
push
arpl
dec
sbb
lcall
adc
jmp
notl
pop
jbe
lret
push
mov
xchg
adc
jmp
iret
sbb
add
stc
pop
mov
pop
mov
and
and
mov
std
out
icebp
sbb
lea
mov
dec
pop
inc
aaa
cs
shll
sbb
xchg
mov
or
xor
fidivl
push
mov
fldcw
pop
xorb
mov
dec
int
stos
adc
out
lds
xchg
leave
lock
mov
add
or
loope
jmp
xor
pop
and
add
adc
jl
mov
add
jecxz
aam
dec
in
ss
cmp
dec
jne
adc
shrl
mov
cli
imul
sub
pop
int3
xor
mov
jle
mov
repz
mov
add
fimuls
or
push
push
sbb
add
fimuls
sbb
nop
ja
insl
test
je
adc
jne
rorl
vmaxsd
andb
mov
fmull
fs
push
jp
jns
jp
xor
popf
mov
jo
sti
lea
addl
les
xor
jo
mov
ss
mov
pop
mov
jp
in
inc
mov
icebp
push
xor
or
cmp
mov
sub
mov
and
movsb
pop
jnp
inc
and
jmp
lods
dec
sub
lret
call
stc
sbb
cmp
jo
inc
pop
ficomps
flds
out
stos
xchg
call
push
and
dec
jno
lds
pop
sbb
mov
cwtl
or
jp
cmpsl
add
dec
loopne
mov
push
push
mov
test
gs
mov
pop
mov
leave
xlat
adc
cld
clc
push
inc
pushf
scas
or
rorl
ficomps
sub
out
inc
aaa
out
jae
pop
insb
xor
adc
xor
lret
out
cmc
cmp
xor
enter
push
dec
movsb
xor
stc
ret
push
xorl
in
mov
lahf
sub
int
push
adc
cli
pop
mov
sbb
push
push
iret
add
and
js
sti
push
repz
decb
sub
insl
xchg
rcrl
lds
pushl
mov
call
daa
aad
js
jae
das
xchg
sbb
mov
bound
xlat
int3
push
pop
iret
out
mov
leave
adc
jnp
mov
pop
lock
jmp
rclb
add
pop
and
adc
filds
mov
pop
jmp
ljmp
cmpsl
pop
cwtl
testl
dec
jb
clc
in
mov
insl
repnz
mov
jns
cs
mov
pop
popf
dec
sbb
xor
mov
divps
inc
mov
bt
lea
mov
push
mov
repz
inc
dec
push
dec
adc
stos
fistpl
stc
idiv
cmp
out
orb
rclb
adc
filds
in
sbb
jecxz
out
adc
or
jp
mov
sub
pop
xor
fsubs
cmp
shll
mov
sub
adc
and
mov
sub
je
inc
cli
or
loop
shl
test
stc
mov
rcrb
out
rolb
nop
loop
mov
add
sub
xchg
adc
adc
adc
adc
push
or
into
jge
loopne
jb
and
dec
movsb
pop
mov
fldln2
adcb
test
jle
sbb
ds
lret
mov
mov
add
fadd
notb
fdivs
cltd
fsubs
addl
mov
xchg
sbb
push
jp
mov
dec
mov
iret
pop
fnstsw
mov
sahf
dec
or
inc
insl
pop
jns
cmpsl
or
test
and
mov
jns
adc
or
xor
cs
sbb
movsb
mov
mov
and
sbb
lahf
inc
stos
stos
jl
sbb
test
scas
lods
or
arpl
sub
int
icebp
sbb
mov
frstor
sbb
sub
adc
sub
dec
outsb
in
fisubrl
ret
push
dec
pop
or
xchg
inc
cld
dec
in
jne
mov
rcr
jp
jge
or
call
xchg
sahf
in
cmp
rclb
data16
ss
push
repz
test
mov
sub
mov
mov
nop
pop
push
mov
fcmovnb
cltd
adcl
lsl
movsl
add
mov
xchg
inc
cmpl
or
push
xor
lret
push
xor
jmp
push
repnz
addb
imul
push
rclb
scas
ret
jbe
push
add
pop
add
push
fnstsw
shlb
xor
push
cmc
pop
xor
mov
cli
int
loope
leave
and
push
loopne
movsl
pop
mov
add
cmpsb
pop
adc
test
scas
lock
add
xor
and
popf
pop
add
lods
cmp
cmp
pushf
fildl
inc
out
or
imul
push
call
mov
push
inc
inc
xchg
inc
cmp
in
lods
shl
cmpl
pop
mov
adc
pop
push
xor
pop
mov
cmpsb
cmpsb
push
lea
das
and
pop
insl
dec
dec
lea
popf
or
in
push
jbe
test
hlt
js
fisubl
pop
push
lods
pop
mov
mov
sbb
sbb
mov
leave
pop
push
int3
aad
test
xchg
out
jb
push
jmp
mov
fwait
jmp
in
xor
insb
pop
xchg
movsb
lret
mov
dec
ds
cmpsb
adcb
cmp
push
rclb
jne
xchg
jbe
pop
std
jae
mov
mov
xchg
fisttpll
mov
jle
adc
xor
lea
mov
pop
lods
insb
pop
enter
xchg
push
je
bound
mov
dec
push
in
fimuls
add
cmp
xchg
add
mov
inc
inc
daa
or
cmp
movsl
xlat
shll
jno
add
aas
sarb
inc
out
mov
cli
repz
add
inc
pop
stc
push
cmp
push
push
jnp
inc
sti
sub
pushf
jbe
mov
sub
inc
push
push
inc
jb
xchg
xchg
cltd
iret
je
jbe
sbb
in
add
out
pusha
scas
out
int
pushf
mov
test
pop
jns
pop
lahf
pop
jl
xchg
mov
clc
mov
jg
cmp
push
adc
and
push
mov
adc
jge
jbe
mov
jmp
sbb
loop
fld
rcr
xor
pop
lea
adc
adc
cmp
mov
xchg
push
fsub
enter
cltd
cmpsl
insb
xor
pop
and
negl
stc
dec
test
jnp
out
pop
repnz
mov
inc
cld
into
add
sbb
fs
jo,pt
test
jg
lea
lea
xchg
inc
ret
fs
inc
and
popa
or
cs
mov
cmp
lock
inc
jae
lods
fsubl
stc
int
jle
gs
imul
mov
mov
pop
sub
sbb
in
inc
test
rcl
rolb
pop
pop
or
jbe
pop
cltd
lock
stos
push
push
ja
inc
arpl
int
data16
push
mov
xchg
out
lds
xchg
or
gs
aas
ret
sbb
loope
insb
sub
xor
loope
push
scas
ss
adc
inc
test
push
es
dec
lds
mov
out
and
xor
es
ss
mov
jmp
pop
iret
test
push
pop
adc
xchg
out
mov
out
incl
dec
push
pop
mov
mov
add
leave
out
scas
je
mov
dec
pop
jnp
pop
sti
in
mov
loop
push
aam
jle
adc
and
shr
pop
mov
mov
test
and
fsubl
sahf
cmp
push
adc
mov
mov
pop
aas
mov
xchg
aas
mulb
cmp
adc
aam
stos
out
movsl
mov
leave
sahf
xor
cmp
pop
adc
out
inc
mov
scas
mov
aam
stos
and
jg
inc
pushf
outsb
loopne
sti
in
nop
fldl
insl
xchg
pop
adc
inc
lret
scas
ss
fadds
and
popf
mov
ja
pop
fidivs
dec
pop
dec
jg
inc
mov
popf
xchg
inc
ret
mov
imul
ja
adc
jecxz
es
jecxz
xchg
xor
or
xor
push
push
or
mov
jmp
fcmovnbe
icebp
mov
addb
dec
mov
stos
and
fldcw
jae
and
aam
sbb
movsb
mov
fidivrs
test
or
imul
movsb
outsb
sbb
outsb
xchg
pop
cmp
cmp
adc
dec
fcmovnu
cld
jns
jl
xorl
jge
sbb
mov
dec
mov
shll
push
pop
pop
mov
mov
out
lret
imul
int
dec
stc
in
lods
decl
addr16
cmp
adcb
pop
ror
dec
repz
lret
lret
scas
fs
mov
test
in
adc
popa
mov
in
or
or
aaa
fimull
mov
inc
push
int3
cli
arpl
adc
js
fdivs
xor
inc
in
das
pavgw
jns
inc
pushw
stc
shll
xor
lahf
cmpsb
data16
lret
imul
sbb
mov
rcr
scas
pusha
mov
jo
adcl
sub
mov
andl
jg
mov
ljmp
jecxz
push
and
cmp
xor
pop
out
mov
in
out
add
ret
adc
pop
push
adcl
icebp
sub
add
pushf
mov
data16
in
or
mov
xchg
stos
jmp
mov
sbb
nop
mov
icebp
call
popa
sub
mov
shr
pop
enter
pop
and
mov
insl
inc
pop
xchg
shrb
push
mov
aad
mov
or
and
pop
pop
ret
xchg
adc
cmp
mov
test
adc
leave
pop
pushf
ja
pushl
push
jo
cmp
outsl
pop
adc
or
xchg
dec
fistl
or
ss
js
xchg
cmpsl
cs
or
ja
fstpt
and
push
lret
outsb
jo
mov
arpl
pop
in
add
push
aaa
insl
outsb
movsb
sbb
xor
sbb
sbb
sbb
dec
mov
push
xchg
sbb
sbbb
push
enter
cmp
js
pop
movsl
push
fucomp
jle
cmovs
sbb
mov
pushf
mov
shl
outsb
mov
iret
add
imul
aas
test
or
sub
mov
fs
sti
lcall
test
subb
sbb
sbb
and
popa
leave
cmp
fcmovu
or
fwait
jb
test
sbb
sub
xchg
in
jb
pop
enter
lcall
jp
lret
mov
push
jno
lods
repnz
enter
insl
ss
push
mov
pop
ror
mov
insl
pushf
and
sbb
sub
xor
loope
xchg
sbb
sub
inc
lret
jno
popa
jmp
fwait
add
rcrl
dec
icebp
jnp
imul
mov
lret
jno
popa
jmp
fwait
add
rcrl
add
sbb
sub
inc
lret
cmp
adc
lds
dec
stos
jnp
push
sbb
sub
mov
pushf
adc
push
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
ds
push
lea
std
inc
int
jae
sub
jge
insl
ficomps
dec
ds
push
lea
outsb
in
pop
fisttpll
mov
sbb
out
insl
ficomps
dec
ds
push
lea
outsb
in
pop
fisttpll
mov
outsl
mov
cmpl
popa
into
dec
in
cmc
bound
push
push
mov
popa
pop
pop
aam
jne
cmp
adc
movsl
and
cmp
mov
inc
dec
sub
popa
or
add
movsb
mov
sbb
mov
jnp
cmc
cmc
sbb
adc
sahf
inc
dec
pop
scas
push
into
cmc
ds
mov
ficompl
jnp
sub
pusha
cltd
in
add
xchg
pop
push
sti
dec
ror
std
dec
icebp
add
jne
fnsave
clc
popa
sbb
repz
pop
iret
mov
cmp
and
lea
and
jmp
in
sbb
pop
dec
pop
repnz
push
lea
outsb
in
pop
fisttpll
mov
sbb
out
insl
ficomps
and
mov
lea
sbb
cmp
lret
sub
js
jns
ds
or
fmuls
jnp
bound
es
test
pushf
dec
mov
adc
and
cs
out
call
pop
fisttpll
mov
sbb
out
insl
ficomps
dec
ds
push
lea
outsb
in
pop
fisttpll
mov
sbb
out
insl
ficomps
dec
ds
and
mov
sahf
add
pusha
icebp
rcrb
and
sub
inc
shrb
pop
inc
dec
fwait
imul
mov
xchg
sbb
mov
inc
stos
fwait
and
jns
mov
nop
stos
popa
xchg
loopne
jmp
out
add
sbb
pop
cwtl
je
and
mov
or
cmp
aaa
add
hlt
push
cmpsl
mov
dec
mov
scas
xor
adc
scas
push
dec
push
cli
push
mov
ja
push
call
ss
outsl
push
jne
mov
pop
inc
pop
dec
push
mov
in
lahf
adc
adc
pmaddwd
xchg
repnz
es
sbb
shrb
and
mov
sbb
push
fs
inc
push
cli
orl
mov
sbb
popa
jns
lret
dec
sub
sub
dec
sub
imul
inc
fsubp
xor
lret
movsbl
mov
sub
xchg
jecxz
mov
in
dec
xchg
jb
adc
jnp
mov
lahf
fimuls
sub
push
je
jno
and
push
mov
jl
lea
xchg
mov
adc
stos
mov
and
mov
cltd
gs
mov
sub
push
sub
and
mov
jb
lcall
xchg
inc
sarl
mov
imul
jl
movsl
gs
push
je
and
test
and
or
cmpsb
test
je
push
aaa
and
out
loop
jno
outsb
int3
in
jg
and
icebp
xchg
lahf
sbb
addr16
into
xchg
and
xor
shrb
push
push
jnp
and
mov
add
sbb
arpl
les
jg
lahf
andl
jb
push
pop
xor
jne
addr16
push
dec
mov
in
add
jp
dec
dec
lahf
xor
jbe
cwtl
xchg
scas
mov
sub
mov
mov
js
mov
leave
cmc
mov
mov
push
jo
repnz
enter
mov
stos
sub
adc
jecxz
fdiv
jg
mov
pop
jl
enter
call
sbb
insl
mov
enter
jbe
xor
jns
and
sbb
pop
push
fimuls
add
divb
lret
xlat
enter
aas
sub
stc
push
movsb
ror
inc
ds
dec
pushf
movhps
pop
test
fs
xor
fs
jg
inc
inc
mov
leave
cs
adc
push
push
and
fsubs
mov
jg
dec
mov
jns
imul
xor
iret
jns
lods
iret
sbb
xor
cmp
insl
xor
xor
jmp
xor
or
jnp
mov
dec
push
push
dec
push
icebp
mov
sub
xor
clc
ja
jp
xor
jo
inc
test
and
mov
into
adc
fstl
cmpl
add
arpl
sub
lret
xchg
xchg
mov
mov
mov
arpl
lahf
nop
andl
jmp
dec
scas
xor
or
inc
xor
test
mov
cmpsl
xor
stos
daa
jg
mov
bound
mov
cmp
pop
push
clc
ljmp
je
or
pop
pop
hlt
fisttpll
orl
jge
jp
mov
mov
push
popf
pop
nop
gs
or
adc
and
pop
jno
add
dec
inc
xor
imul
pop
adc
push
cmc
jge
fldt
mov
pop
sub
xchg
and
dec
add
add
lods
dec
inc
add
arpl
out
repnz
repnz
mov
inc
lcall
cmpsl
outsb
imul
inc
mov
dec
or
cmp
mov
jmp
or
out
ret
dec
sbb
add
mov
repz
sub
fstpl
test
mov
sub
mov
das
test
popa
test
xchg
mov
add
loop
dec
sarb
jbe
lahf
js
ds
push
pop
out
aam
pop
add
and
jo
mov
fsubr
xchg
pop
fsubs
mov
xorl
pop
push
xchg
fisubrs
test
adc
mov
mov
pop
stos
mov
pushf
clc
jo
movsb
mov
mov
lcall
ja
and
or
mov
push
sub
dec
nop
cmpsb
lds
test
clc
jle
or
popa
aas
aad
scas
sarb
scas
aam
ljmp
ja
and
scas
jl
or
cmpsb
pop
es
push
fldt
lret
and
negb
and
mov
aam
test
in
push
mov
xchg
jge
ror
adc
xorb
out
aam
pop
aad
out
jp
pop
push
sub
add
clc
daa
ds
cmp
inc
lret
test
sbb
xchg
xchg
xchg
cmp
cwtl
std
sbb
mov
mov
shr
ffreep
xorb
adc
fnstsw
cmp
mov
scas
inc
or
and
mov
shll
movsl
push
sbb
sbb
mov
or
std
out
xor
repz
push
xor
or
in
xor
imul
pop
mov
je
sbb
add
inc
cmp
das
test
jmp
pop
shll
inc
jp
cmp
test
xchg
inc
pop
enter
clc
pop
dec
in
xchg
incl
jo,pt
add
dec
mov
fdivs
jmp
stos
addr16
dec
sub
std
mov
xor
push
jbe
dec
pushf
mov
mov
sbb
in
in
pop
mov
popa
xchg
push
mov
xlat
pop
imul
or
cmpsl
jg
cmpsl
sbb
xchg
xorb
cmp
cmp
inc
dec
jmp
mov
dec
lods
cltd
addr16
inc
lea
int
ds
rorl
stc
hlt
push
enter
and
cmp
loop
int3
mov
outsb
imul
mov
repz
scas
xchg
mov
gs
das
cmp
insl
popf
in
push
cmp
and
push
pop
dec
mov
or
xchg
iret
adc
out
mov
or
add
int3
xorl
gs
push
leave
movl
dec
js
and
repz
jbe
cs
mov
in
scas
mov
das
fldenv
add
addr16
hlt
and
clc
dec
rcr
popa
daa
and
out
dec
push
test
sbb
push
pop
xchg
stos
pop
daa
xchg
xlat
lret
adc
xchg
das
stc
loope
inc
xchg
or
in
insl
xor
call
pop
cld
pcmpgtw
cmp
cmp
popa
push
inc
mov
or
mov
push
popf
xor
movsb
mov
mov
sbb
ret
cmp
push
iret
stos
lock
int3
cmp
orb
add
iret
sub
popf
addb
imul
and
mov
inc
adc
and
gs
notl
das
popw
mov
mov
push
ljmp
sub
fcomps
cmp
and
test
add
xchg
jb
es
xchg
sahf
jge
and
cltd
pop
add
rclb
inc
xor
lock
hlt
sar
push
mov
inc
xchg
loope
cltd
mov
pushf
sbb
int
adc
dec
fnsave
or
aaa
fisubrl
mov
pop
add
pop
mov
pop
mov
push
dec
mov
pusha
sub
mov
push
sti
xchg
inc
mov
inc
or
mov
push
xchg
push
add
loopne
inc
pop
cltd
add
xor
dec
movsb
adc
lods
jp
xor
add
aaa
les
lret
jne
dec
out
xor
push
inc
test
and
xchg
rclb
cltd
cli
mov
enter
add
mov
mov
jg
rcrb
in
push
int3
push
imul
push
stc
sti
test
ficoml
outsb
push
enter
aad
cmpsb
jb
xor
sub
inc
xor
das
mov
xchg
pop
mov
push
int
or
leave
pop
mov
lcall
in
lcall
adc
cld
repnz
ljmp
cmp
push
mov
aas
shll
or
lret
xchg
cwtl
fcmovbe
lea
jne
mov
ret
inc
bound
mov
outsl
jb
cli
inc
xchg
out
inc
xor
sub
sub
fwait
cmc
or
xchg
fcomps
rclb
aas
stc
push
punpckhwd
daa
or
mov
in
pop
out
pop
rcll
lret
add
cmpsb
dec
fcoml
mov
les
inc
repnz
xchg
sti
cmp
push
add
cmp
stos
cmp
mov
int3
sahf
fmuls
test
mov
cmp
jns
xor
and
fldcw
adc
movsb
lds
dec
push
push
cmp
clc
cmp
iret
mov
sbb
nop
sub
or
lret
lods
jo
jl
iret
mov
sub
jne
cld
stos
js
adc
sbb
mov
inc
push
inc
adc
enter
adc
and
xchg
xchg
jne
ja
mov
mov
lret
dec
es
je
loopne
jae
aas
inc
push
xchg
fwait
sbb
jge
into
mov
pop
add
lods
ret
mov
addb
xchg
cmp
pop
pop
mov
mov
fcmovbe
out
cmp
lcall
sub
add
movsl
icebp
shlb
add
dec
and
stos
test
sahf
fstps
aam
cli
mov
repnz
xchg
insl
xchg
in
xchg
jp
cmp
cmp
inc
mov
xorb
mov
dec
ja
ja
rorb
and
mov
lcall
mov
pop
clc
mov
jae
and
dec
push
rclb
aas
stos
mulb
jmp
mov
pop
enter
shl
lds
xlat
mov
pop
ss
mov
lret
pop
xchg
lods
dec
call
fwait
jnp
add
mov
pop
stos
inc
jmp
mov
xchg
sbbl
mov
cmpsb
ds
lods
jl
mov
add
dec
cmp
jns
dec
push
pop
xlat
inc
or
into
mov
sbb
mov
add
inc
push
dec
xchg
mov
sub
mov
pop
cld
dec
fs
dec
jge
xlat
pop
in
mov
pop
add
cmp
dec
adc
roll
out
add
adc
in
pusha
jg
rol
mov
mov
leave
insb
inc
mov
fstl
bound
fisttps
xchg
dec
pop
sub
pop
jno
lea
insl
dec
lds
dec
sbbl
or
insb
push
mov
in
call
out
push
push
fdivrl
cs
ret
cmpxchg
sub
add
lods
xor
sbb
push
mov
adc
ljmp
or
push
sub
in
scas
lods
add
popa
pop
cmpsl
add
aad
push
inc
inc
insl
scas
xchg
cltd
loopne
testl
pushf
mov
scas
pop
and
sub
fisubrl
fistps
lcall
fldcw
dec
mov
mov
ds
std
and
aam
jmp
and
pop
push
push
sbb
daa
out
int3
out
in
xor
dec
std
adc
inc
pushf
icebp
cmp
scas
jmp
jcxz
inc
mov
imul
adc
sbb
xor
arpl
punpckldq
test
mov
add
lahf
mov
hlt
cmp
stc
mov
lahf
addb
data16
or
cmpsb
rol
xchg
pushf
repnz
sti
je
fs
mov
es
in
mov
jge
fldcw
xor
pop
movsl
mov
outsl
mov
mov
scas
insl
and
inc
iret
sbb
int3
fcmovb
in
test
cmp
lcall
lock
pop
xor
add
bound
lods
int3
loop
jge
mov
add
arpl
mov
orl
icebp
adc
adc
call
in
and
mov
fidivs
xor
stos
mov
enter
or
pop
jp
xchg
insl
push
or
sbb
xchg
sar
sar
test
shll
fwait
add
or
push
and
cmp
inc
adc
sbb
sbb
fcomps
les
fimuls
mov
outsb
sarb
out
jne
pop
pop
lock
add
and
daa
test
je,pn
dec
jno
in
jge
out
push
notl
push
mov
push
cmp
and
dec
push
xor
int3
push
fidivs
ror
inc
mov
pop
shlb
mov
inc
and
push
jbe
dec
add
imul
cmpl
stc
popf
xor
mov
enter
push
aas
push
mov
push
out
push
xchg
arpl
pop
push
pop
jne
push
and
adc
lcall
add
mov
call
jle
add
lea
mov
and
pop
push
jns
adc
xor
push
pop
inc
sub
cmc
xor
jbe
xchg
out
mull
jbe
shll
icebp
mov
jnp
sub
or
jae
adc
icebp
inc
mov
lock
es
pushf
addr16
insl
out
mov
mov
mov
aad
inc
stc
push
mov
dec
fcomps
mov
pop
lret
inc
lcall
and
addr16
call
and
in
mov
in
aaa
subl
jae
push
lret
call
test
jl
jbe
into
adc
dec
sub
cld
lock
nop
mov
push
or
sbb
or
xor
push
mov
movsl
mov
mov
add
xlat
orb
test
imul
test
in
dec
push
dec
push
and
aad
sbb
sub
xchg
data16
inc
pop
push
imul
mov
jnp
mov
js
inc
arpl
sbb
mov
pusha
xchg
and
dec
jmp
daa
sub
jmp
test
mov
lahf
es
jmp
test
cmp
xchg
adc
xor
rcrl
rcr
stc
xchg
sub
pop
leave
dec
out
test
out
pushf
ss
inc
aaa
lret
add
shrb
enter
shrl
js
or
insb
je
inc
cmc
cmp
xchg
add
pop
dec
je
pusha
cli
cmp
mov
lret
or
ss
adc
lods
loope
popf
jae
in
insl
xchg
pop
pop
loopne
mov
lret
dec
inc
jae
mov
inc
add
jmp
lcall
fiadds
add
lods
ljmp
call
xchg
sbb
popf
pushf
sbbl
xor
aam
dec
shlb
add
or
xchg
inc
xor
mov
add
out
ret
jge
push
or
rclb
add
inc
jno
push
aas
jb
shl
fwait
out
adc
adc
int3
hlt
pop
jne
jmp
adc
loopne
cmpsl
add
adc
sbb
nop
xor
adc
mov
fbld
fcoml
and
or
jne
or
sub
jne
jle
inc
stos
jb
les
mov
aad
xchg
insl
mov
mov
xorb
xor
or
push
daa
outsl
inc
jle
lods
out
and
test
push
lds
push
fadds
fiaddl
adc
dec
inc
mov
xchg
stos
fwait
fwait
ret
sub
test
popa
jmp
add
or
int3
mov
insb
jmp
lock
loop
xor
rcl
js
pop
mov
ret
push
testb
cmp
roll
cmp
pop
jbe
jns
push
fcomp
adc
test
inc
adc
inc
mov
jae
inc
loope
or
jae
clc
xchg
jecxz
adc
sub
int
mov
xchg
orb
or
jns
outsb
cmpsb
roll
fnstsw
cmpsb
sbb
in
insb
rorl
mov
inc
xlat
call
mov
sub
adc
outsl
push
add
jne
jmp
out
pop
fdivr
cvtps2pi
mov
lds
lret
loopne
and
push
xchg
imul
js
iret
xchg
aaa
push
mov
adc
or
sbb
decl
pushf
aam
jp
out
cmp
out
pop
ds
addr16
shrl
cmpsl
stos
icebp
pop
popf
or
lahf
arpl
dec
in
jl
cltd
repz
inc
jmp
add
push
sub
adc
shll
ret
mov
pop
push
out
sbb
imul
jns
insl
loope
bsf
dec
add
fnstcw
sbb
mov
scas
or
fldcw
cmp
jp
jb
pop
xchg
mov
inc
nop
pop
aaa
and
adc
mov
loopne
mov
xor
cwtl
xchg
les
lods
add
add
jne
and
cmpsl
mov
stos
push
call
lds
ja
xor
xlat
dec
push
xchg
ret
mov
inc
mov
mov
movsl
and
lcall
int3
xchg
push
cltd
imulb
subb
jae
jb
lea
rclb
mov
or
loop
std
dec
out
sub
pop
test
iret
jecxz
mov
xor
bound
imul
pop
jns
jp
ds
jo
cmp
aam
in
cmp
das
add
or
popf
aad
ja
jl
cld
fucomp
xchg
in
push
lods
xchg
and
enter
enter
lahf
mov
flds
adc
inc
cmpsl
in
jns
dec
sub
sub
ljmp
add
mov
pop
fdivrl
xchg
les
ljmp
and
fdivrl
jns
jge
dec
inc
dec
pop
jle
int
movb
shlb
or
imul
or
repnz
cli
cmpsb
cltd
dec
mov
push
xchg
call
loop
xor
ret
jo
pop
stc
jle
or
inc
aas
sti
enter
sub
imul
test
hlt
and
sub
test
mov
xor
push
in
repz
inc
push
xor
mov
popa
jbe
dec
push
xor
dec
add
dec
mov
hlt
dec
adc
push
push
push
ljmp
arpl
scas
push
sub
sahf
andl
inc
jle
faddp
ret
mov
movsl
test
jg
dec
dec
jmp
jmp
cmc
mov
cmp
jp
jns
aaa
and
ret
mov
in
xchg
xorb
aam
js
imul
fbstp
sub
and
add
ret
xlat
dec
mov
data16
and
test
dec
xchg
clc
mov
pop
fmuls
stc
int3
stos
divb
cwtl
shrb
daa
ja
push
arpl
cmp
pop
push
fs
arpl
sahf
pop
push
out
mov
clc
mov
sbb
out
xor
mov
stos
js
push
inc
mov
xchg
nop
popf
lods
xchg
adc
xor
or
and
popf
add
pop
sti
lahf
mov
and
imul
ds
xor
nop
cli
xor
jge
ja
test
inc
movsb
std
es
je
jb
push
cmp
push
roll
jno
adc
lret
cmp
push
loope
arpl
rcr
loopne
fmulp
fiadds
outsl
movsb
cmp
or
loopne
and
or
push
aaa
out
or
imul
out
inc
jb
jnp
rorl
aaa
ds
fstpt
pop
xor
in
fisubrs
jne
sub
test
xchg
cmp
cld
loope
xchg
pop
mov
out
mov
int
pop
sub
push
inc
jl
push
iret
xchg
sub
lods
cmp
test
test
and
fnstenv
jne
lahf
jg
xchg
jno
das
adc
jge
hlt
andb
dec
and
xchg
cmp
mov
cmp
cli
lea
xor
mov
scas
imul
scas
mov
and
pop
js
test
pop
push
pushl
lret
cmpsl
adc
push
ja
lahf
xlat
jl
cmp
sbb
pop
jo
or
cmp
mov
sub
mov
pop
xchg
mov
fiadds
in
cmp
out
mov
and
jmp
or
aas
and
push
repnz
or
add
push
mov
ror
fidivrl
stos
test
rcrl
add
das
subl
push
stos
jno
out
out
aam
xor
js
pop
inc
test
mov
lods
cmp
adc
or
inc
cmp
dec
aaa
sti
divl
jle
lods
pop
popf
push
lea
outsb
in
pop
fisttpll
mov
sbb
out
insl
ficomps
dec
ds
push
lea
outsb
in
pop
fisttpll
mov
sbb
out
insl
ficomps
dec
ds
push
std
outsb
in
pop
int
cmp
mov
ficomps
dec
ds
push
lea
outsb
in
pop
fisttpll
mov
sbb
sahf
xchg
scas
mov
div
out
sahf
xchg
fadd
leave
stos
xchg
push
inc
jp
push
addr16
pop
es
ss
push
daa
push
xlat
out
div
out
xchg
cmpsb
xchg
push
fs
jbe
addr16
pop
inc
push
out
push
daa
push
xlat
inc
div
fsubp
iret
xchg
mov
cmpsl
mov
fs
pop
xor
push
pop
addr16
je
dec
push
mov
mov
pop
cwtl
dec
shrb
sbb
lahf
in
insb
std
jge
pusha
add
cli
pusha
dec
cmp
sbb
xchg
sub
dec
push
jmp
lret
push
cwtl
push
inc
mov
jbe
sub
lods
jno
cltd
scas
mov
lock
mov
repnz
jp
jecxz
mov
cli
loop
push
mov
mov
daa
push
xlat
mov
divb
loopne
incl
cmpsl
imul
jne
leave
iret
mov
jb
sbb
push
sub
push
jmp
jbe
add
push
inc
dec
xchg
jmp
aas
push
int
sbb
adc
bound
jne
inc
lock
and
loope
out
xchg
cmpsb
xchg
push
jle
outsb
ja
addr16
pop
ds
and
push
daa
jb
andl
lock
sti
daa
mov
add
and
xchg
dec
inc
gs
push
push
jnp
sahf
mov
xchg
mov
shl
aad
test
loop
cli
and
xor
loopne
bound
push
jae
cmpsl
xchg
mov
andb
xchg
jbe
inc
addr16
pop
es
ss
push
daa
push
xlat
out
div
out
xchg
cmpsb
xchg
push
inc
jbe
inc
addr16
pop
es
ss
push
daa
push
xlat
out
jno
out
lds
xchg
test
into
jbe
sub
ljmp
jp
xor
scas
outsb
or
push
stos
mov
mov
pop
sbb
sub
xchg
movl
aaa
filds
js
jecxz
jmp
mov
add
xchg
out
aad
cmp
repnz
dec
or
or
cmpsb
aam
xchg
cmp
pop
jge
dec
inc
mov
adc
movl
inc
shr
test
push
fwait
pop
aam
outsb
cmpsb
insl
push
xlat
add
test
arpl
fldl
scas
stos
subl
inc
hlt
sub
or
rorl
dec
loopne
leave
gs
enter
shl
inc
mov
mov
icebp
fs
mov
adc
out
je
mov
dec
lea
ds
stos
and
andb
sub
test
sub
jmp
cli
enter
mov
jnp
mov
sub
push
push
xlat
sub
mov
int
outsb
aad
mov
test
or
push
mov
popf
cmpsl
loop
dec
sbb
pop
ljmp
out
push
pop
push
mov
inc
and
and
clc
fs
shr
pusha
inc
fdivrs
xchg
xchg
pop
mov
sbb
or
rolb
movsl
pop
or
aad
or
mov
movsl
sub
gs
into
gs
inc
add
mov
jb
imull
sbb
jo
ljmp
leave
add
ss
jbe
jae
mov
loope
mov
add
jl,pt
cmp
and
jle
shlb
out
sbb
bnd
xadd
ja
out
cmp
sbb
shlb
imul
cmp
sbb
movsb
out
and
fisubrs
and
in
pop
in
mov
lods
or
sub
jmp
sbb
or
aaa
push
mov
adc
movsl
test
sub
mov
repnz
fsubr
lret
mov
xlat
jp
cs
shrl
mov
cmc
ret
popa
mov
mov
stos
arpl
adc
mov
mov
pop
jmp
adc
lods
loope
sub
push
xlat
es
mov
cli
adc
pop
xor
popa
jg
lods
mov
add
cmc
sub
scas
insb
cmpsb
dec
in
xchg
ss
mov
adc
cld
sbb
xchg
jbe
and
lds
add
notb
xor
adc
rorb
std
mov
jp
loope
inc
je
mov
stos
jp
pop
mov
sub
mov
sub
mov
and
jmp
fists
pusha
aad
pop
dec
sahf
insb
nop
mov
fisubl
movb
mov
jecxz
pop
cmpsb
into
mov
ljmpw
int3
xchg
cmc
jno
dec
fs
xor
jns
hlt
lcall
jb
xchg
loope
imul
in
pusha
push
jecxz
xchg
sti
mov
les
xlat
gs
incb
jb
xchg
minps
add
loop
mov
jle
les
in
shl
jno,pn
sti
jo
inc
es
jmp
js
stc
cmp
mov
sub
js
loopne
jmp
xchg
jp
repnz
sbb
fdiv
js
in
xor
push
pop
and
icebp
dec
mov
popa
xchg
or
fwait
jp
pop
xchg
mov
xchg
cmp
mov
divb
jmp
pop
push
sarl
fldt
push
xchg
xchg
xorb
add
mov
lret
cs
xor
fmuls
scas
push
cs
stos
inc
fcoms
sub
ret
mov
push
mov
push
lods
add
ret
call
add
mov
int
sub
sub
sub
mov
cmpl
inc
ret
testl
push
or
js
dec
xlat
mov
fs
jl
repnz
xchg
test
ljmp
push
les
pushf
pop
dec
ret
add
cmc
inc
xlat
jp
jnp
and
mov
daa
mov
adc
cmp
ss
outsl
call
fadds
xlat
pop
sub
movsb
push
test
sbb
in
mov
xchg
adcl
fidivl
xchg
mov
stos
inc
fnstenv
xlat
xor
inc
push
rorl
mov
pusha
inc
sbbb
dec
inc
ds
bound
aas
ficomps
cmpsl
out
aas
sub
pop
popf
int
in
leave
test
pop
and
outsb
bnd
sub
inc
fmuls
mov
dec
leave
jp
cmp
dec
inc
sbb
outsb
bound
mov
adcb
daa
sub
adc
into
jl
ds
xor
test
jns
xor
aaa
mov
xor
push
int3
call
sub
lea
insl
push
adc
enter
cs
add
int3
adc
movsl
or
add
ja
cwtl
out
xchg
jmp
pop
imul
orb
jle
in
pop
xlat
push
fsubrs
add
mov
mov
inc
xor
lea
cmpsl
or
cmpsl
or
cwtl
cmp
fwait
ja
cmp
ja
popa
xchg
daa
cmp
fistps
jp
lahf
jl
or
jl
fs
pushf
aas
cmp
jecxz
mov
fs
std
jge
xor
pop
pop
mov
dec
daa
sbb
loopne
movsb
jle
lods
or
loop
es
xor
push
mov
mov
hlt
mov
mov
or
add
mov
xor
insl
sub
push
sub
leave
jne
add
xor
mov
pop
adc
and
mov
xor
rcll
lcall
pop
fbstp
mov
out
jno
jns
jne
dec
adc
pop
cltd
mov
scas
sub
cmp
or
add
push
mov
mov
mov
xchg
jne
xchg
movsb
mov
push
leave
lahf
push
xchg
addr16
mov
sbb
jnp
pop
enter
arpl
adc
dec
mov
xor
mov
dec
out
xchg
out
pushf
adc
sbb
idiv
inc
mov
lahf
or
add
xchg
and
mov
int3
lcall
sbb
insl
and
inc
mov
inc
dec
in
fsubrs
dec
lea
pop
mov
pop
add
setl
push
insb
rorl
jns
pop
or
rcl
mov
push
hlt
iret
add
int
test
and
aam
subl
call
lret
rorb
xor
mov
and
sarl
xor
ljmp
push
imull
das
inc
push
push
shrl
pop
pop
mov
lods
push
cmp
push
dec
out
bound
aam
jg
inc
mov
xchg
hlt
ljmp
jl
and
test
mov
xor
mov
repnz
sbb
lret
fcomps
idiv
mov
fistpl
adc
ljmp
adc
dec
jecxz
cwtl
jge
nop
xorl
sbb
and
inc
scas
ret
xor
inc
in
jne
mov
dec
inc
scas
fcomps
push
sahf
mov
jno
jb
cs
shll
sbb
cmc
sbb
pop
mov
mov
lret
les
pusha
gs
fcoms
and
out
and
mov
fisttps
adc
shlb
add
int
clc
cmp
rcrb
xor
dec
fsubp
add
fstps
jecxz
int3
push
push
sbb
in
mov
pop
dec
ret
sbb
inc
gs
rcrl
push
xchg
jb
push
dec
inc
xchg
jno
dec
mov
xchg
in
insb
mov
js
jo
int3
push
mov
cmp
mov
dec
pop
xchg
add
lahf
repnz
in
xchg
in
popa
adc
lret
sti
cmp
sub
mov
and
lods
lock
test
lods
xchg
out
cmp
push
pop
sub
push
scas
loope
sub
pop
jle
add
in
fstpl
pop
cltd
sbb
push
rolb
jae
repz
lcall
shlb
jmp
cld
clc
mov
or
dec
cmp
int
adc
repnz
add
add
mov
sbbl
clc
push
lret
lods
cltd
into
out
jmp
aaa
sti
mov
fcoml
xor
sbb
int3
jns
rcl
dec
sub
jge
in
jo
xchg
movsl
or
aad
add
test
mov
cld
fnsave
nop
aam
push
cmp
push
testl
pop
sub
mov
jge
iret
sub
push
popa
and
es
lods
and
sbb
or
cmp
es
out
fcmovnu
xor
cwtl
or
jge
sarb
xchg
insl
les
sub
mov
mov
mov
add
call
push
dec
jo
cld
stc
loope
mov
js
xchg
arpl
cmp
mov
fistps
leave
js
and
repz
shrl
enter
mov
addr16
imul
mul
and
dec
xor
pop
xor
adc
movsl
call
push
add
int3
adc
xor
mov
xor
pop
adc
sbb
cld
push
sarl
outsl
test
and
aas
cmc
pusha
jge
repnz
ror
int3
dec
int
push
cmpsl
and
adc
shlb
jg
out
pop
cmp
dec
fisttps
call
inc
movsl
cmp
sub
pop
adc
push
mov
setl
add
cmp
sub
lods
mov
fisubrs
xor
jle
jae
push
mov
out
iret
adc
or
fmull
and
movsb
jb
add
cltd
add
xor
adc
pop
or
push
leave
lock
cmpb
adc
pop
sub
jmp
cltd
dec
jb
lods
xchg
jl
mov
and
push
push
cltd
test
dec
hlt
mov
mov
add
popf
dec
sbb
popa
inc
bound
stos
fcmovne
xchg
or
cltd
xor
flds
cmp
stos
push
cwtl
shl
int3
pop
test
sub
pop
and
iret
aas
int
mov
scas
xchg
add
xchg
je
inc
push
jnp
fsubs
add
sbb
xchg
stos
adc
jmp
in
int
xchg
adc
jge
mov
fnstcw
add
imul
push
cli
mov
add
popf
outsl
dec
ljmp
and
shrb
push
adc
je
or
daa
les
into
test
lods
jns
lea
inc
adc
pop
xchg
push
pop
fcoml
fstpt
mov
stos
push
int
insl
inc
inc
shl
movsl
into
sbb
sbb
stc
sub
add
in
loop
xchg
mov
shl
dec
roll
lds
mov
insl
xchg
add
mov
xor
rcll
mov
add
push
cld
das
push
stos
and
sub
dec
loope
out
mov
idiv
scas
jns
xor
xchg
data16
insl
andb
daa
xorl
ljmp
sbb
or
fnstsw
jmp
arpl
mov
loope
cli
stc
in
mov
pusha
jle
jmp
popf
sbbl
push
mov
or
and
es
fs
negl
sbbl
mov
cmpsl
and
out
pop
adcl
xchg
and
push
ds
pop
and
mov
dec
enter
cli
xchg
jmp
int
imul
ds
mov
test
push
sbb
mov
or
pop
test
xchg
sub
dec
push
test
cmp
sub
sti
sub
daa
lea
andb
test
sbb
xor
pop
mov
xchg
mov
push
jne
dec
js
mov
cltd
pop
push
mov
jne
xchg
les
inc
decb
sbb
das
mov
shll
and
pop
fisttpl
push
stos
cmp
xor
jp
push
std
cmpsl
sbb
push
xchg
adc
cmp
fs
push
push
add
or
adc
pop
insl
in
cmc
mov
cmp
sub
aaa
lock
and
mov
rcll
fadds
bound
aam
push
or
addb
sbb
into
push
xchg
jle
in
mov
inc
rcll
ret
insl
fcoml
repz
mov
cli
bnd
lahf
adc
gs
and
mov
pop
mov
mov
mov
in
stc
pop
ret
push
inc
lfs
xchg
pop
add
aam
ja
push
int3
aaa
gs
mov
loopne
clc
mov
mov
mov
je
xor
mov
or
lret
jge
negl
out
scas
hlt
dec
movl
lea
inc
lds
icebp
adc
clc
shlb
inc
mov
xchg
adc
fnstsw
jg
adc
cmc
std
mov
mov
sub
push
scas
orl
sahf
stos
clc
xor
daa
jmp
or
mov
mov
or
mov
cmp
mov
cmp
mov
and
ljmp
push
mov
mov
sbbl
sub
mov
jecxz
cmp
cltd
mov
mov
arpl
fdivrl
out
andb
inc
jbe
rcrl
int3
rclb
cmp
das
xchg
sub
push
dec
inc
imul
pop
pop
mov
mov
aaa
push
and
das
mov
test
sub
mov
inc
jecxz
or
cmc
pop
ja
inc
sub
mov
fisubs
movsb
pushf
stos
sbb
xchg
je
int3
adc
jmp
arpl
add
repnz
push
mov
into
cmpsl
mov
hlt
xchg
jb
mov
jle
lea
js
dec
lahf
loope
xchg
mov
mov
push
adc
mov
dec
loop
sbb
or
mov
jmp
sub
inc
iret
popf
scas
mov
inc
or
dec
jb
popf
cmc
push
addl
or
mov
dec
inc
jno
mov
lahf
dec
cmp
pop
repz
sbb
mov
xchg
cmp
dec
mov
inc
icebp
push
stc
int3
push
mov
xchg
out
jo
pop
xchg
pop
out
sub
pop
stos
ss
or
lds
es
inc
jge
push
xor
dec
and
stos
cmpl
dec
xchg
adcl
bound
and
dec
nop
cmpsl
mov
subl
pusha
divl
jecxz
int3
push
setbe
dec
push
lret
pop
mul
into
imul
bound
add
in
sbb
sbb
loope
js
incb
push
sti
flds
push
push
jb
sbb
fs
icebp
int3
lret
loopne
in
sbb
fnstenv
mov
mov
in
faddp
cld
enter
scas
mov
dec
push
cld
pop
cmp
mov
or
pop
stos
push
xchg
dec
and
dec
push
jae
xchg
and
mov
int
jmp
sbb
push
clts
pop
fistl
test
data16
xor
das
shrb
movl
cmpsb
out
or
dec
fidivs
aaa
cmpb
sbb
inc
adc
sub
mov
nop
sub
leave
push
xor
in
sub
fdivs
nop
and
or
fldl
stc
inc
mov
jecxz
pop
stc
dec
cmp
clc
out
cs
fiadds
jge
push
add
cwtl
int3
mov
add
adc
mov
fs
ljmp
add
out
xlat
cwtl
mov
icebp
out
jns
mov
adc
pop
mov
add
jle
sub
cmp
sahf
jmp
fdivs
fimuls
pop
fcoml
movsl
mov
outsl
jne
cmp
lock
test
cmp
fistpl
popf
push
adc
iret
add
sub
jnp
push
sbb
mov
mov
push
mov
scas
and
andl
adc
icebp
dec
dec
xchg
pop
out
repz
jg
inc
inc
xchg
test
adc
mov
push
pop
mov
mov
dec
and
inc
push
push
cmp
sbb
and
adc
and
pop
enter
fmull
mov
scas
or
xor
retw
dec
inc
and
mov
or
jb
repz
iret
insl
movsl
jae
and
adcl
pusha
push
call
out
push
mov
loope
jmp
fstps
pop
jnp
pop
mov
xlat
push
test
xor
add
push
loop
pop
pop
cmp
es
pop
lods
je
ret
pop
pop
mov
push
mov
or
in
and
jle
push
adcb
rorl
fucomip
mov
stos
jne
jge
call
sbb
adc
and
popf
ret
int3
rcrb
adc
rolb
daa
imul
pop
into
out
shll
insl
mov
loope
adc
pop
mov
negb
mov
stos
mov
jo
xor
sub
pop
mov
call
xlat
in
xchg
adc
push
mov
daa
jne
ja
or
outsl
add
cmp
out
in
xchg
les
loop
sub
add
cltd
mov
dec
fisubrs
cs
lret
sbb
or
clc
push
iret
lret
and
xor
ffree
xchg
push
jmp
std
es
adc
andb
add
adc
inc
sbb
jl
incb
cmpsl
lods
pop
cmp
into
and
and
xchg
push
addr16
sub
cmp
stc
mov
repz
gs
push
push
addr16
movsb
mov
xchg
mov
push
je
bound
repz
add
or
push
xchg
mov
add
cmpl
sarb
pop
xor
ja
seta
aad
rorb
cmp
push
push
push
and
adc
xor
nop
and
loope
mov
sahf
and
jge
xchg
cs
cmpsl
dec
out
inc
imul
jmp
imul
je
idiv
sub
cltd
mov
dec
jecxz
or
or
and
test
stos
push
stos
movsb
jno
movlps
jo
rcll
call
sarb
cli
mov
stc
mov
and
imul
mov
inc
iret
je
nop
fildl
and
cmpl
pusha
add
stos
mov
jne
iret
xor
pop
movsl
dec
jecxz
mov
push
cmc
lea
cmp
jnp
scas
and
popa
aaa
jnp
hlt
int
faddl
mov
stos
mov
or
sub
leave
sub
push
inc
and
dec
mov
rcr
pop
adc
pop
stos
inc
lea
aas
int3
arpl
cmpsl
sbbl
sub
jmp
add
jae
mov
testl
xor
cmc
icebp
es
dec
cld
daa
mov
mov
int3
fwait
and
je
lret
mov
popf
sarb
pop
stos
mov
sub
xor
test
cmpsb
and
mov
xchg
xchg
shrl
or
lret
push
test
daa
cmp
imull
ljmp
sbb
loopne
cmp
popf
adc
adc
mov
jl
dec
das
push
sub
mov
sub
shll
faddp
fwait
jl
mov
dec
enter
xor
in
into
cmp
mov
add
pusha
jo
dec
cmp
fisubl
push
push
in
les
add
ljmp
inc
es
pop
psrlw
das
cltd
ret
dec
adc
or
cmc
aas
mov
jge
fptan
iret
pop
dec
or
sbb
inc
mov
popa
popf
gs
jmp
incb
ret
xchg
mov
es
sbb
and
imul
add
fistps
cmp
pop
ficoms
movsb
jge
sbb
test
mov
stos
mov
arpl
pusha
mov
les
fdivrp
loope
fidivl
sti
lods
xchg
cmp
xchg
mov
test
outsb
xlat
nop
jns,pn
pop
jne
pusha
mov
loop
aam
pop
inc
jmp
sub
rol
je
out
std
sbb
cmp
imul
xor
inc
cmp
dec
lock
push
dec
adc
xchg
jnp
jp
aaa
imul
push
in
sti
dec
adc
xchg
test
hlt
adc
repnz
in
push
stos
lods
push
arpl
pop
sub
fwait
mov
pop
sbb
pop
or
or
inc
jl
add
call
insb
mov
loope
pop
cwtl
stc
jg
xchg
push
adc
pop
icebp
lahf
shll
cmc
or
into
pop
mov
mov
mov
repz
mov
into
or
push
jge
shrb
push
pop
sbb
jp
mov
xchg
test
cltd
mov
pop
aas
sub
jmp
stos
xor
stos
fst
fmull
or
mov
dec
pop
bound
lea
lods
test
sub
push
rep
in
out
stos
test
out
xchg
cmpsb
xchg
push
inc
jbe
inc
addr16
pop
es
ss
push
daa
push
xlat
out
div
out
xchg
cmpsb
xchg
push
inc
jbe
inc
addr16
pop
es
ss
push
daa
push
xlat
out
div
out
xchg
cmpsb
xchg
push
inc
jbe
inc
push
pop
es
ss
daa
push
xlat
out
div
out
xchg
cmpsb
xchg
test
mov
and
fucomip
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
std
shr
xchg
test
out
xchg
addb
inc
dec
addr16
aaa
or
int
mov
mov
mov
insl
inc
pop
jg
addr16
aaa
or
add
insl
aad
movsb
cmpsl
mov
test
dec
add
xor
popa
inc
inc
pop
inc
xchg
xchg
addb
cwtl
lods
jle
xor
data16
fcoml
mov
enter
aam
add
xorl
subb
clc
test
mov
insl
add
push
mov
mov
jle
sub
inc
dec
cld
sub
push
gs
cltd
cmp
jecxz
loopne
xlat
std
adc
jmp
mov
ja
sub
shrb
mov
mov
add
push
or
xchg
jbe
pop
jge
stos
adc
xchg
lds
adc
fs
cmp
fsubrs
cmpsb
addb
and
jle
sbb
pop
hlt
out
or
stos
xchg
mov
xor
inc
jne
pop
and
das
or
test
fwait
mov
ljmp
add
shrb
add
push
dec
push
xchg
xchg
mov
rol
lods
aad
xchg
ds
pop
and
inc
pop
imul
cwtl
movsb
andl
cmc
fldt
cmpsl
jge
insl
inc
pop
ja
addr16
aaa
or
int
mov
mov
cmpsl
jge
insl
inc
pop
ja
addr16
aaa
or
xchg
bound
test
lret
dec
outsl
pop
xchg
dec
lahf
fiadds
gs
mull
gs
mull
je
loop
xchg
add
int
not
and
out
mov
dec
loop
fwait
cld
nop
outsl
mov
add
jmp
jl
andb
mov
aas
dec
xlat
movsb
xor
and
inc
out
mov
lcall
xchg
cs
repnz
push
xchg
push
mov
xchg
repnz
mov
fdivs
jb
bound
int
call
nop
xchg
popa
iret
push
stos
test
lods
sbb
xchg
rolb
enter
aas
xorl
dec
add
fnstsw
in
or
loope
clc
lret
xor
cmp
dec
or
push
dec
inc
loop
cmpsl
mov
imul
mov
test
mov
xchg
sbb
cltd
cli
test
cmpsb
ret
or
mov
sti
sarl
xchg
fists
or
pop
sahf
stc
pop
ss
jle
daa
test
jae
xor
push
cmc
pushf
test
bound
xchg
jns
add
insl
push
adc
test
in
sbb
and
or
scas
shlb
and
jbe
out
std
adc
sub
in
movsl
cwtl
loop
shlb
sti
xor
mov
inc
xor
jnp
pop
stc
xchg
dec
mov
aad
pop
in
mov
fldl
cmp
xlat
sub
cli
dec
fnop
aam
jae
insl
in
push
clc
lret
push
stos
mov
popf
inc
sahf
jns
mov
pop
loopne
and
mov
pop
cwtl
int
adc
iret
enter
imul
outsb
and
xchg
mov
je
mov
xchg
insb
jno
add
stos
fdiv
push
nop
sub
bound
xchg
add
jmp
sub
hlt
dec
js
aam
add
int3
mov
push
xor
adc
rorl
mov
es
mov
js
lods
ss
or
jno
subb
add
inc
enter
popa
jne
sbb
mov
inc
mov
sub
fwait
mov
sub
jno
in
leave
add
fdivs
das
or
lret
push
pop
xchg
lret
jl
jo
xchg
cld
mov
jae
sbbl
lret
push
lcall
inc
int
fs
popf
xchg
push
jne
dec
mov
addr16
xchg
addr16
adc
jno
cmp
cmpsl
xor
out
fnsave
pop
popf
outsb
nop
sbb
xor
mov
push
lods
clc
dec
ss
xchg
bound
jl
es
stos
sub
pop
add
fsts
fcmovnb
or
mov
pop
in
xor
popa
cmp
lock
pop
sahf
out
add
add
in
cs
jp
push
mov
cmp
mov
shll
push
lret
push
int3
lock
or
loop
imul
cwtl
pop
aaa
gs
xchg
inc
dec
in
inc
or
pop
int3
shl
xchg
test
xchg
or
bnd
js
mov
cwtl
dec
out
cld
clc
arpl
cmp
sahf
mov
mov
adc
loop
in
mov
pushf
xor
push
push
lds
int3
add
jae
fwait
cmp
insl
adc
inc
leave
mov
mov
pop
imulb
jecxz
fsts
mov
xchg
mov
pop
mov
push
mov
sbb
das
mov
fwait
push
jo
aam
shlb
inc
je
std
nop
movsb
rcrl
add
andl
fstl
jns
pop
outsl
loop
lret
mov
adc
imul
stc
pop
fidivl
push
mov
in
into
add
sbb
fildll
push
imul
jns
push
push
cwtl
mov
xor
insl
repz
das
scas
jmp
add
aaa
jle
cmpsb
fbld
sti
mov
lods
inc
inc
mov
lods
cmpsl
mov
mov
test
pushf
pushf
jne
cmp
je
dec
sub
pop
adc
jp
rorb
jne
cmpsl
inc
mov
xor
jp
inc
int
lahf
mov
pop
mov
jmp
xor
addl
pop
mov
addr16
movsl
mov
xor
and
dec
lock
or
pop
mov
lods
mov
iret
xor
sub
stos
psubw
jg
mov
adc
cmp
rorb
into
les
and
pop
jbe
inc
inc
in
sub
jg
out
mov
sub
adc
add
mov
dec
loop
dec
pop
jmp
xor
mov
and
cmp
add
dec
mov
leave
sub
bound
pop
or
movsl
or
cli
xchg
stos
icebp
icebp
or
pop
sub
push
popf
xchg
mov
mov
dec
imul
faddl
cltd
push
orl
xor
push
test
outsl
add
push
adc
lock
hlt
sub
add
mov
pop
add
nop
out
dec
mov
andb
add
outsb
stos
ja
ss
cli
stc
dec
aad
je
fsubrs
leave
cs
lahf
pop
popf
mov
xor
stc
or
popa
loopne
mov
std
pusha
mov
or
xchg
and
notb
lahf
dec
stos
push
dec
dec
cmp
addr16
movsb
pushl
xchg
arpl
add
ja
shlb
cmpl
jns
std
jne
inc
and
rorb
cli
mov
pop
hlt
sbb
outsb
xor
or
sub
aam
in
sbb
gs
xchg
shll
push
insb
adc
in
iret
adc
scas
mov
mov
inc
push
lret
mov
movsl
jmp
lock
jbe
pop
pop
cs
lods
push
cmp
int
repnz
sub
or
jb
push
sbb
xor
jns
pop
and
xor
lock
mov
mov
daa
inc
lds
shr
cwtl
push
pusha
jecxz
jmp
dec
xchg
jmp
scas
nop
jg
sti
insb
insl
xchg
and
das
stc
pop
xchg
xchg
out
and
cmc
cmp
gs
enter
insb
mov
cwtl
fsubr
xchg
loop
jle
imul
lret
push
jno
ljmp
in
imul
push
movsl
mov
add
sarb
adc
out
div
dec
mov
xchg
adc
rorl
loop
stos
cmp
xor
lcall
test
pop
cmp
rorb
sbb
subb
fcmovbe
jg
pop
push
sub
mov
ret
jg
insb
jae
sub
scas
movsl
xchg
jns
pop
cmpsl
sbb
push
add
rcrl
leave
push
std
mov
lds
rclb
adc
sarb
ret
sarb
pop
pop
test
cwtl
sub
mov
aas
push
movhps
xchg
mov
push
dec
pushf
mov
xchg
aad
push
cmp
xchg
jno
out
push
adc
insb
fstpl
testb
xchg
out
addl
mov
push
mov
imul
fisubrs
insl
pop
fnstcw
pop
cmp
xor
lret
inc
push
popf
mov
sbb
mov
push
enter
sbb
dec
mov
std
sbbl
ljmp
mov
mov
cmpsb
popf
mov
rolb
inc
xchg
std
aad
cmp
imul
fbld
inc
xor
in
in
jo
inc
repnz
add
mov
pop
and
ret
and
cli
pop
andl
and
inc
push
sbb
mov
add
dec
add
lock
inc
mov
fsubrl
pop
decl
ja
xlat
and
in
sub
sbb
js
loope
das
sti
arpl
xor
inc
xchg
pandn
or
sarb
dec
in
pop
ds
lret
enter
mov
inc
popa
pushl
or
lret
push
in
dec
ljmp
mov
stc
int
mov
dec
jae
and
imul
btc
imul
imull
in
fdivrs
inc
in
frstor
int
inc
mov
lea
sahf
aad
out
dec
lret
addr16
dec
sub
and
cmp
lahf
mull
push
ret
sbb
push
hlt
pop
push
pop
cmp
stc
pop
mov
insl
jns
ficomps
xchg
int
gs
add
mov
xchg
ficompl
negb
int
loopne
push
cs
xor
dec
scas
sbb
pop
xchg
addr16
jmp
repz
dec
pop
loope
xor
in
sbb
inc
out
sarl
pop
push
xor
test
je
inc
mov
jge
inc
rcrb
mov
imul
cmp
loopne
emms
sbb
orb
push
gs
cmp
lods
sahf
movsl
mov
cmpsl
loopne
adc
add
adc
mov
aad
das
call
pop
ja
daa
jne
cmpsb
pop
push
outsb
mov
movsb
push
mov
push
jle
addr16
divb
sbb
mov
sub
dec
jne
pop
fists
call
mov
addr16
enter
and
cmpsl
jae
popf
addr16
mov
inc
xchg
inc
xchg
lret
push
insb
cli
imul
lods
sbb
mov
mov
add
lret
pop
es
push
jle
sti
fs
sub
insl
jns
cltd
sbb
dec
rorb
ljmp
inc
lods
jmp
es
mov
ret
and
out
pop
loopne
push
and
jecxz
push
outsl
jecxz
push
loopne
mov
pop
xchg
decb
gs
repz
push
lahf
leave
pop
sub
push
out
push
mov
inc
inc
xlat
pop
roll
cmp
dec
popf
shll
stos
aam
lock
das
lods
cmp
outsb
loop
mov
fwait
lods
out
es
dec
es
es
outsb
stos
mov
dec
adc
mov
mov
jne
dec
sub
fidivrl
mov
xchg
in
cld
add
das
roll
push
pop
cmp
xor
fwait
mov
sbb
mov
mov
sbb
out
inc
mov
and
jo
add
shl
adc
outsl
call
dec
out
test
in
or
push
lea
pusha
inc
push
mov
sbb
or
cmp
sbb
in
movsl
cmpsb
aas
jp
stos
xchg
out
fistl
mov
lahf
in
jnp
sub
cs
pop
out
int3
dec
or
pop
test
out
jnp
lea
mov
jbe
lea
pop
ss
adc
hlt
pop
pop
sbb
bound
push
stos
mov
xchg
dec
push
ss
decl
loop
sbb
das
bound
cmp
mov
repnz
aaa
mov
int3
push
pop
insl
rdtsc
mov
adc
fs
dec
mov
repz
testl
pop
out
push
push
js
insb
bound
shl
cli
out
push
jb
mov
out
xor
lock
clc
loop
outsb
lock
mov
dec
notb
push
push
divl
cmp
xchg
pop
lcall
js
call
inc
xchg
daa
cld
clc
cmovns
push
and
int
lods
push
xchg
in
xchg
hlt
mov
inc
inc
les
or
and
sbb
jge
push
iret
inc
mov
shlb
in
mov
and
mov
xor
mov
pop
push
out
cmpsb
jle
mov
shlb
cmp
jle
or
inc
es
xlat
sub
and
outsb
mov
jo
inc
repz
cmp
inc
pop
mov
mov
outsl
ret
xchg
call
sub
das
fcmovnb
dec
imul
out
mov
and
imul
xor
cmc
xor
push
imul
sbb
jae
mov
and
push
or
push
pop
adc
jp
or
outsl
cmp
pop
sub
enter
sub
aas
inc
mov
adc
imul
cmc
push
add
xchg
pop
and
sbb
or
or
cmp
adc
mov
out
and
push
push
fildl
insl
frstor
js
inc
sbb
jmp
push
out
stc
dec
cwtl
jnp
cltd
cmp
cmpsl
cmp
jmp
push
mov
and
ss
cmpl
xchg
aad
fs
or
mov
lahf
pop
lahf
pop
nop
dec
ja
xorb
movsl
cmpsb
ljmp
test
sti
lahf
lcall
mov
push
addr16
adc
and
test
xchg
lods
add
inc
addb
xchg
mov
arpl
or
test
insl
push
fmuls
or
mov
sub
cwtl
inc
or
sti
pand
mov
xor
iret
syscall
pop
fsubrs
in
cld
enter
test
adc
imul
imul
push
stos
mov
jmp
fidivs
add
xchg
clc
mov
sbb
pop
jne
xor
push
adc
dec
sub
mov
lret
stos
scas
push
pop
imul
cld
jge
xchg
mov
jle
inc
dec
mov
movb
push
gs
hlt
in
or
inc
cmp
ret
stos
sub
repnz
inc
lods
arpl
lock
pushf
and
das
frstor
out
test
sbb
icebp
dec
mov
mov
dec
orb
cmpb
cltd
dec
stos
lods
push
insb
fcoml
sbb
rcll
enter
cmc
cmp
sbb
add
adc
xlat
sbb
data16
adc
xor
jnp
jp
outsl
xchg
cltd
jns
dec
sbb
test
push
movsb
iret
sub
sbb
xor
pop
mov
fdivs
add
daa
test
mov
or
scas
test
cmpsb
mov
cli
and
push
stos
jb
sub
sbb
push
or
sub
fbld
xor
jle
mov
pop
mov
mov
or
xor
call
pop
movsl
ror
and
ret
push
fstl
ljmp
gs
mov
jmp
ficomps
and
pushf
mov
sahf
add
es
mov
pop
jg
mov
adc
nop
push
repnz
loopne
jno
sbb
mov
xchg
mov
adc
adc
push
rcll
mov
call
pusha
rorl
push
adc
sub
data16
bound
or
inc
or
inc
xor
shlb
sbb
dec
dec
jmp
dec
lret
fwait
mov
xchg
ret
addr16
inc
fdivrs
enter
inc
arpl
rclb
adc
push
mov
or
and
pushf
loop
cmpsl
and
mov
sahf
inc
std
sbb
push
or
sbb
test
cmp
lock
addr16
pop
js
inc
xor
cli
mov
in
sar
int3
std
imul
lcall
and
aaa
hlt
neg
mov
push
xchg
addl
imul
ret
and
inc
and
sbb
adc
pop
xor
fistpll
arpl
sub
call
int3
insl
xchg
das
mov
mov
sti
sub
pop
pop
arpl
es
nop
cltd
fists
outsl
add
test
lods
pop
pop
fists
cmp
mov
jno
sub
push
inc
xchg
mov
jbe
insl
fwait
sub
xchg
and
mov
mov
nop
mov
mov
mov
dec
xchg
pop
scas
aad
movsl
inc
scas
icebp
xchg
rep
mov
xchg
lret
push
lods
adc
pop
jecxz
and
popf
or
cmc
xor
ljmp
dec
xchg
xor
jbe
xchg
rcrl
xchg
sbb
notl
fisubs
and
push
push
mov
test
cmpl
sub
pop
mov
cld
xor
mov
mov
and
shll
mov
and
mov
fisubl
push
push
push
push
hlt
mov
or
jmp
or
cwtl
out
inc
push
inc
pop
jo
add
lods
mov
adcb
xchg
je
rcrl
std
pop
pop
sti
sub
fdivrl
adc
cli
fst
add
test
filds
sar
add
fcoml
mov
and
dec
addl
repz
mov
and
das
inc
cld
push
and
cltd
es
sub
sahf
pop
mov
dec
push
cmp
mov
pop
cmp
js
enter
jg
dec
ja
dec
les
lea
mov
mov
jno
ljmp
jno
or
push
out
add
sub
arpl
inc
mov
lods
add
cli
pause
mov
push
rcr
inc
mov
mov
data16
idivl
std
dec
test
add
xor
or
lds
xlat
negb
imul
imul
cmp
jbe
add
cmp
outsb
mov
outsb
popa
lret
bound
faddl
ficoml
es
push
add
mov
xlat
inc
stos
and
mov
in
popf
mov
xor
inc
add
stos
fsub
or
adcl
jl
lods
adc
add
mov
out
and
ss
cmp
fsubl
daa
int
xchg
sub
mov
jle
add
xor
xchg
ret
iret
out
out
xor
dec
xchg
out
dec
cwtl
sahf
dec
xor
adc
push
mov
or
roll
lds
cmp
push
rcrb
inc
fwait
lods
pop
inc
jp
or
lcall
in
jp
adc
shl
push
rclb
xor
pop
adc
cmpsl
or
pop
mov
sub
pushf
cmc
mov
xchg
dec
xor
hlt
das
shrl
adc
push
sub
pop
fnsave
jg
adc
add
mov
out
and
jns
jecxz
in
pop
and
push
xchg
imul
xchg
icebp
add
jno
rcrl
cltd
mov
pop
sbb
cmp
cmp
loop
cltd
hlt
andb
addr16
mov
inc
adc
sub
pop
adc
jg
push
jecxz
fidivrl
inc
mov
repnz
aam
loopne
rorb
test
mov
push
test
ret
into
mov
pop
lret
fwait
add
add
mov
and
mov
xchg
cwtl
negl
xchg
jge
adc
mov
lock
or
shll
add
les
scas
xchg
cmp
scas
adc
mov
sbb
xchg
xchg
imul
jl
ja
insl
sbb
icebp
dec
mov
push
push
mov
pop
xor
lcall
popa
popa
mov
inc
push
mov
ljmp
iret
lock
jecxz,pn
in
jg
sub
scas
adc
jno
sub
clc
jnp
stos
cld
lret
adc
rorl
js
cmp
cmp
pop
xor
inc
aad
cmc
sbb
icebp
cmp
or
clc
testl
and
adc
repnz
stos
into
mov
cltd
cmovb
jg
insb
xor
jecxz
or
outsb
movsb
inc
mov
add
mov
jge
xor
data16
cltd
mov
lret
cmpsb
sub
cmp
leave
jns
fwait
iret
ficomps
bound
jl
out
outsl
shl
pop
repz
push
pop
adc
leave
jnp
push
xchg
arpl
iret
mov
shll
mov
jl
jnp
sub
mov
pop
jmp
aam
pop
and
cli
shrb
dec
inc
pop
mov
aaa
popf
mov
in
dec
subl
les
sbb
arpl
or
scas
dec
js
mov
dec
mov
or
adc
and
pop
inc
rorb
xor
and
push
inc
xor
adc
mov
pop
xor
xchg
and
ficompl
test
pop
mov
ljmp
inc
sarb
mov
pop
daa
dec
js
inc
pop
popf
in
dec
and
mov
inc
and
sub
rcr
in
cli
push
scas
stc
out
ss
fdivrs
mov
aas
inc
stc
ret
mov
std
js
ja
mov
repz
mov
dec
outsb
dec
sbb
cmpsl
loope
sub
out
pop
out
and
mov
cltd
aad
sub
loopne
ret
insl
xchg
sbb
cmpsb
fsubrl
outsb
in
mov
in
ljmp
mov
ja
dec
add
push
mov
mov
scas
push
outsb
xchg
xchg
sub
in
mov
jno
mov
cmovge
push
vunpckhpd
or
jbe
fsubrs
xchg
loope
push
pcmpeqd
push
push
adc
out
xchg
lods
xchg
push
insl
inc
pop
ja
addr16
aaa
or
int
mov
mov
cmpsl
jge
insl
inc
pop
ja
addr16
aaa
or
leave
fucomp
int
mov
mov
cmpsl
jge
insl
inc
pop
ja
outsb
cmp
ds
std
xor
and
adc
cmpsl
mov
aaa
or
in
divl
adc
movsl
jg
dec
repnz
shrb
mov
xchg
enter
dec
das
sbb
sub
sbb
dec
outsl
sbb
push
scas
cwtl
mov
enter
call
das
sbb
dec
psubd
dec
outsl
pop
jg
dec
js
xchg
scas
cmpl
lock
out
fisttps
adc
arpl
pop
addr16
adc
scas
cwtl
lret
in
jae
sub
fcmovne
add
xor
push
paddq
push
ja
mov
test
movhps
add
ret
xor
rcll
push
hlt
scas
pmuludq
cwtl
imul
mov
loopne
or
out
js
fbstp
mov
pop
pop
push
mov
in
out
int
add
clc
cmp
jo
sub
fs
cmp
das
sub
addr16
icebp
pop
int3
bound
xor
mov
push
ds
cmpsl
pop
cmp
dec
orb
sub
ljmp
rcrl
shl
xlat
or
pop
mov
js
dec
scas
cwtl
mov
fsubr
ret
iret
loope
adc
add
xor
and
push
outsl
inc
jg
dec
popa
sbb
ret
int
lods
xorb
jl
sbb
popa
push
jno
add
or
out
cwtl
cmc
int
mov
roll
sbb
pop
dec
jae
add
adc
cmp
loope
stos
lret
int
mov
call
das
sbb
sub
cmp
dec
outsl
pop
jg
dec
js
mov
mov
call
das
sbb
sub
cmp
dec
outsl
pop
jg
dec
js
mov
rorb
sub
das
push
cmc
push
out
ss
mov
sub
sbb
enter
sub
pop
mov
push
inc
mov
shl
adc
jo
add
xorl
sub
xor
popa
xchg
xchg
cmpsl
pop
fisttps
mov
pop
fwait
push
in
pop
loope
pop
pushf
in
fdivr
or
dec
in
rcrl
pop
mov
mov
sbb
in
lds
push
mull
mov
sarl
iret
mov
cwtl
out
and
inc
push
mov
roll
ret
data16
es
sub
mov
cmp
and
adc
mov
test
call
clc
stos
mov
add
cmp
popa
stos
jno
sbbb
cli
sub
int
repz
int
or
bound
int
loop
filds
loop
lcall
in
insb
jne
rolb
or
inc
cmpsb
aad
xchg
sar
pop
sbb
loopne
bound
out
int3
cmp
mov
cmpsl
fs
mov
jo
mov
adc
fildll
pop
push
jl
addb
push
roll
mov
jge
jns
repnz
loope
cmp
ds
testl
popa
jge
jl
xor
pop
bnd
adc
sub
arpl
stos
pusha
and
mov
leave
push
xor
aas
in
fdivl
imul
sbb
xor
mov
jne
aam
aaa
cmpsb
sub
scas
jne
mov
outsb
hlt
pushf
popa
sub
call
fs
popf
fs
pop
sbbb
jle
test
icebp
and
flds
or
and
lcall
mov
push
jmp
sub
pop
add
cs
adc
daa
and
xor
sub
ja
jl
outsl
mov
icebp
and
push
sbb
flds
mov
out
shll
dec
cmp
aas
push
divl
mov
pop
in
cld
mov
inc
pop
imul
outsb
shlb
inc
aam
out
cwtl
pushf
subl
loop
mov
out
out
movsb
sub
mov
insb
push
or
and
sbb
mov
add
test
jnp
push
pop
ret
push
sub
mov
dec
test
mov
mov
push
or
bts
insl
shll
lcall
sbb
or
dec
fimuls
pop
dec
sub
add
lcall
dec
jp
movsl
in
aad
iret
mov
adc
out
cwtl
gs
aas
out
cmp
aaa
xor
stos
lea
stos
rcrl
pop
jg
pop
dec
add
and
xchg
rolb
cltd
imul
lahf
mov
sub
dec
ror
popa
jo
xlat
dec
cwtl
pop
mov
lahf
inc
arpl
push
jae
imul
inc
and
jle
sbb
sbb
cmp
dec
scas
lods
xchg
insl
mov
in
xchg
repnz
or
addr16
mov
add
sbbl
cmp
push
out
add
cli
rolb
mov
jne
fsubrl
adc
icebp
sub
sub
dec
shll
test
lock
lret
cmp
iret
ss
ljmp
or
ret
push
mov
push
test
push
push
test
mov
add
xchg
mov
pusha
shrl
sbb
popf
xchg
cld
std
fimull
dec
add
cli
jmp
je
aaa
cmp
cs
adc
pop
cmpsb
lcall
jle
xor
push
push
out
jb
dec
iret
mov
mov
aaa
xchg
jmp
aam
or
dec
and
jg
inc
mov
xchg
xor
sbb
ret
mov
bound
xchg
mov
in
add
div
fnstsw
jp
imul
inc
into
scas
dec
popa
push
add
fldl
stc
or
dec
xor
inc
shlb
bound
cmpsb
sub
mov
jl,pt
mov
jne
popa
sub
out
arpl
cmpb
movq
loope
mov
scas
loope
leave
mov
ret
mov
movsl
negl
jl
xchg
sbb
pusha
mov
bound
lods
xor
arpl
adc
sar
dec
mov
leave
adc
popa
add
or
imul
jp
rcl
cmp
bnd
movsl
or
jge
jl
jecxz
into
int
call
into
sbb
jp
sub
ja
pop
pop
aad
xlat
xchg
sbb
and
adc
shl
notl
out
es
sub
dec
xchg
xor
shll
das
emms
push
or
mov
fs
cmp
lret
in
inc
pushf
mov
or
add
or
lea
or
jns
mov
dec
loopne
xchg
adcl
cmp
ss
sub
cmpsb
hlt
stc
add
adc
pop
addr16
cmpsb
stos
outsb
notb
xor
pop
fcoms
jle
mov
test
or
imul
ja
out
dec
pop
imul
aad
fbstp
clc
or
pop
dec
or
or
adc
or
aam
jp
loopne
divl
adc
cmc
push
mov
xchg
cmp
add
into
inc
push
aad
daa
test
shrb
mov
cmp
divb
jmp
nop
sbb
call
arpl
nop
add
sub
xchg
xor
fwait
lods
xor
inc
ljmp
testb
or
int
lock
pop
mov
cmp
sub
and
stc
fildll
mov
test
mov
mov
jb
xchg
or
jns
pusha
stos
push
sbbb
jbe
loope
andl
aam
in
nop
iret
test
jle
xlat
sub
data16
bound
dec
mov
and
push
nop
enter
mov
test
ret
lods
dec
xchg
pop
adc
jne
sbb
sub
cmc
dec
loop
xlat
lods
cmovp
outsl
mov
push
repnz
je
cmp
mulb
cmp
pop
les
sub
jg
cmpsb
push
dec
addb
sarl
test
call
das
pusha
and
int
sbb
cmp
popf
adc
aaa
adc
daa
push
bound
rcll
in
out
mov
in
aaa
inc
mov
push
and
add
push
sub
lret
mov
cmc
fdivrs
or
ds
sub
jmp
mov
mov
mov
sub
dec
ror
mov
daa
in
and
xchg
arpl
mov
or
mov
mov
lea
out
push
dec
scas
insl
mov
testl
roll
add
adc
test
mov
ljmp
pusha
lods
adc
inc
inc
rorb
jo
leave
mov
out
testb
or
sbb
sti
out
movsb
inc
sbb
shlb
ret
cwtl
nop
adcl
cmpsb
shlb
inc
sbb
loop
ljmp
mov
pop
lods
test
movsb
mov
mov
push
stos
jmp
int3
inc
mov
mov
xor
xchg
pop
cmp
xlat
call
inc
inc
dec
call
sbb
cmp
addl
sahf
fldenv
scas
pop
mov
movsl
pop
mov
jno
into
pop
aam
lahf
inc
cmpsb
xchg
cltd
xchg
shr
inc
invd
lret
loope
or
nop
jnp
pop
inc
rclb
nopl
cmp
gs
adc
xor
insb
xor
mov
arpl
xlat
add
filds
aad
push
fdivr
mov
sbb
push
mov
out
sbb
cmpxchg
cmpl
mov
mov
outsl
cs
jne
jle
cmp
cmp
dec
in
fsubs
sbb
ds
jp
cld
adc
and
xchg
iret
mov
push
fdivl
dec
xorl
sub
icebp
adc
lock
sarl
dec
xchg
lcall
inc
fistps
int
flds
sub
jne
mov
ljmp
fisubrl
ljmp
ljmp
sub
aas
lds
psrlw
jo
pmulhuw
js
dec
inc
ret
and
xchg
lret
les
mov
sub
mov
insb
push
out
pusha
dec
xor
add
in
shlb
clc
leave
xor
pop
pop
mov
sub
andl
insb
fiadds
jmp
sub
fdivrs
inc
xchg
mov
and
mov
loopne
dec
jge
out
out
pop
and
shlb
xor
mov
js
cltd
jge
inc
movsb
push
outsb
jno
jne
push
mov
jp
push
enter
outsl
inc
and
inc
adc
or
gs
push
movsl
xlat
sahf
inc
movl
jb
pop
inc
insl
out
cmp
ljmp
aaa
fcomps
sub
pop
lock
push
iret
shll
inc
mov
insl
pop
call
xchg
into
lret
cmpsb
mov
movsl
and
jb
aaa
cmp
adc
stc
hlt
pop
sub
add
out
cmc
ds
pop
push
movsb
cmp
and
in
stos
adc
std
dec
aas
adc
pop
add
push
mov
lret
lea
jnp
mov
mov
push
mov
mov
dec
or
rolb
push
data16
xchg
popl
mov
in
jb
cltd
sbb
or
psubsw
fstps
mov
and
es
mov
dec
inc
orl
jo
andw
iret
jl
push
leave
xlat
push
ret
jo
fnstsw
mov
push
inc
shrb
or
jp
test
ja
mov
scas
xchg
jbe
xor
daa
incb
imul
repz
lahf
movsb
div
add
pop
stc
jb
mov
xor
into
mov
faddl
hlt
sub
movsl
rclb
je
mov
sub
test
pop
cmpsb
ja
mov
mov
jge
pop
pop
ja
scas
cmp
mov
int3
jbe
ss
inc
jae
and
xchg
jno
or
test
nop
into
testl
push
jmp
sbbb
sbb
jno
xchg
dec
loop
mov
and
bound
jns
push
movsl
add
adc
mov
push
sbb
jae
adc
xorb
jge
push
call
mov
shl
xchg
jae
clc
sbb
bound
mov
cmpb
dec
ficompl
xchg
pop
pop
sbb
pop
jecxz
dec
adc
jne
mov
cld
pop
or
adc
mov
ret
outsl
pop
xor
in
or
adc
shlb
fildl
inc
pop
inc
std
mov
loope
loop
movsb
mov
gs
out
push
mov
mov
cltd
cmp
mov
shll
mov
icebp
movsb
mov
ja
hlt
sbb
adc
cmpsl
add
mov
jp
leave
or
mov
lods
pop
dec
outsl
mov
adc
mov
shll
sti
adc
ret
xor
iret
mov
jmp
jp
mov
rorl
xor
add
pop
push
outsl
loope
std
jno
call
xchg
stc
or
scas
andb
dec
outsl
add
mov
xchg
or
xchg
adc
std
loopne
pusha
cmp
mov
or
in
test
mov
sbb
sbb
sbb
mov
gs
loopne
mov
scas
push
sbb
inc
cmp
divl
xchg
or
add
aam
pop
mov
lahf
mov
or
or
inc
xchg
or
and
int
pop
daa
mov
xchg
jnp
and
iret
push
inc
out
and
mov
jae
clc
sbb
bound
add
mov
xlat
mov
outsw
jae
jns
push
je
shlb
and
or
mov
push
mov
pop
pushf
arpl
jnp
mov
mov
stos
in
pop
and
scas
sbbb
imul
int
out
dec
mov
int
adc
ret
loop
pop
xorl
mov
fiadds
leave
and
pop
lcall
xchg
aam
pop
push
mov
add
cmp
test
scas
cmp
or
inc
inc
mov
add
push
lea
fld
cmp
imul
add
add
pushf
ss
cmp
mov
daa
or
or
cmp
cli
icebp
cli
sub
mov
mov
xchg
dec
xchg
sub
or
fsubrl
or
daa
pop
lock
ret
inc
or
sbb
add
pop
aaa
bnd
push
loopne
pop
push
rol
mov
sub
fst
loope
fldt
aaa
gs
fmull
cli
aas
lret
and
dec
pop
mov
xchg
int
push
int
bound
xor
rep
xor
mov
cli
add
push
jge
repz
pop
dec
imul
in
push
repnz
adc
sahf
loope
dec
mov
sub
jnp
sbb
xchg
ds
xchg
mov
js
fsubs
in
xchg
jnp
xchg
jg
jmp
int
inc
jle
cmc
dec
pop
repz
rcr
scas
jge
mov
mul
mov
cmc
cmpsl
jmp
jecxz
jle
add
cmpsb
stos
test
pop
xor
xor
cmp
ret
xor
shll
mov
xchg
cmpsl
imul
into
push
mov
ja
loopne
pop
ret
adc
cmp
dec
xchg
daa
lds
and
sub
ret
call
popf
bound
jle
mov
fldenv
push
aam
jnp
lods
in
push
in
or
movsb
jmp
dec
mov
xchg
stc
jne
xor
add
scas
sti
scas
ror
cmp
mov
jae
or
mov
add
shll
xchg
add
iret
gs
insl
scas
loope
inc
cmp
sbb
sub
xorb
fwait
sti
enter
add
in
mov
call
jns
arpl
lds
sbb
das
test
sbb
sub
gs
in
jno
jno
sub
cmpb
js
push
pushf
mov
dec
mov
mov
aad
sub
mov
das
adc
mov
xchg
dec
mov
aaa
shll
std
xchg
jp
fidivs
dec
sub
xor
out
mov
stc
push
repz
fcmovnb
xlat
gs
xor
out
repnz
push
out
pop
pop
add
mov
mov
sub
cli
dec
fists
in
test
rcll
fsubrl
bound
push
jnp
testl
pop
inc
insw
inc
xor
mov
in
lahf
and
call
ret
dec
xchg
std
ljmp
stos
mov
dec
and
dec
cwtl
addr16
cld
lods
push
hlt
xchg
test
jecxz
das
push
ret
roll
xchg
idivl
cmpsl
dec
scas
nop
test
mov
jae
lcall
pop
les
popa
mov
pop
mov
and
fisttps
lds
fcmovne
push
fsts
mov
pop
fsubr
add
test
push
pop
xor
out
test
add
test
ret
dec
or
cmpsl
pop
cmp
imul
inc
add
cmp
loope
adc
sti
jle
sub
lods
cltd
mov
out
rcl
je
dec
call
xchg
nopl
in
int
popf
je
xchg
inc
mov
cld
scas
cs
aaa
push
xor
pop
add
mov
sub
mov
xchg
fs
and
xchg
outsb
sub
push
cmp
pushf
ss
xchg
lahf
cld
inc
test
fadds
fildl
xchg
lea
sub
aas
pusha
fsubs
test
or
push
cmpsb
aas
in
inc
iret
push
push
in
orl
jae
shll
jg
cmp
sbb
icebp
mov
dec
ljmp
dec
nop
das
add
std
sub
add
fldcw
pusha
scas
stos
lea
aaa
mov
and
xchg
push
push
pop
dec
and
jnp
in
pop
xor
scas
addr16
mov
ret
push
insb
and
insb
out
push
push
data16
adc
cmc
xor
pop
mov
and
es
cli
xor
push
mov
cmp
leave
lret
repnz
push
xor
test
cmp
mov
cmp
sub
adc
sub
inc
scas
push
or
stos
aaa
addb
sbb
jecxz
pop
or
lahf
xlat
dec
jp
sahf
ja
jo
xchg
and
mov
mov
mov
jnp
out
inc
cmp
lods
jp
mov
or
sub
cmc
arpl
or
pushf
cld
cmp
clc
xchg
and
bound
in
je
out
xchg
ja
xor
sbb
xchg
and
mov
xchg
and
shlb
or
rol
adc
push
ds
scas
push
cmp
addb
mov
ret
add
in
sub
dec
cmp
xchg
das
rorl
rcll
mov
jo
out
ja
pop
jae
sub
lcall
jecxz
int3
dec
lds
sbb
fidivrs
pop
cmc
add
pop
mov
fists
xchg
aaa
adc
mov
mov
cmp
aam
push
xor
cmpsl
pop
inc
subl
sbb
push
jmp
addr16
inc
sbb
mov
adc
fnstsw
imul
and
add
pop
sub
sysexit
xchg
dec
fildl
fbstp
push
cli
mov
leave
dec
xor
inc
add
std
and
les
or
out
popa
in
cmc
jmp
imul
lret
in
popf
stos
ja
or
xchg
lock
mov
out
sbb
xor
cld
jl
jmp
insb
push
cmp
dec
push
fstp
xor
lods
fdivrl
xchg
movsb
idiv
aad
ret
mov
incl
aas
adc
adc
loope
cmp
mov
and
inc
xor
add
and
mov
ficompl
fisttpll
mov
rorb
movhps
pop
and
inc
jae
stc
mov
mov
push
std
pusha
in
and
mov
filds
cmpsl
insb
mov
rolb
out
mov
les
mov
lods
and
fs
xor
add
inc
pop
sbb
pusha
xor
mov
cwtl
jns
inc
and
jno
lcall
jle
ja
fidivrl
adc
or
mov
xchg
dec
ret
sub
loopne
lret
popa
mov
mov
jb
mov
outsb
fidivrl
adc
scas
sbb
jne
data16
xchg
pop
testl
fcmovb
fnstenv
and
mov
in
xchg
pop
sbb
pop
insl
push
movsl
push
xchg
andl
cmp
jbe
sub
pushf
inc
push
sbb
fldl
arpl
insl
mov
ljmp
js
jo
enter
or
jae
outsl
jg
js
clc
inc
xor
and
mov
ja
sahf
adc
incl
dec
clc
lods
and
sar
push
sub
sbb
push
xor
and
jle
sub
sub
data16
sbb
xor
jbe
xor
xchg
sub
adc
sbb
mov
lock
insb
dec
sbb
add
loop
pop
sbb
fimuls
and
xchg
pop
inc
inc
repz
sbb
stos
cmc
bound
adc
add
mov
aad
jno
sti
les
into
cmp
and
adc
xor
addr16
int3
mov
fidivs
adc
fistl
subb
les
aas
dec
int
jge
adc
add
dec
dec
xor
sahf
sti
push
out
jg
loope
push
or
adc
mov
in
and
loope
sub
rclb
jae
out
clc
invd
data16
cmp
jl
or
rolb
mov
xor
inc
in
xchg
es
jno
xorl
repz
out
and
pushf
adc
push
iret
negl
cmpl
push
xchg
stos
aam
add
ja
insb
repnz
fsubr
push
ret
aaa
pop
iret
in
scas
insb
mov
mov
test
out
inc
stc
or
cli
sub
add
mov
jns
adc
dec
sub
mov
inc
sar
mov
call
mov
lods
lret
aad
neg
subb
gs
adc
shrb
pushf
and
fsubrs
in
sub
mov
dec
xor
sub
and
or
nop
arpl
outsb
adc
xchg
add
cmpsl
add
jge
add
fisttpll
ficoms
stos
repz
xchg
sbb
jmp
jbe
test
pop
lods
leave
repnz
lods
ds
push
inc
sbb
clc
movsl
push
mov
inc
mov
call
das
sbb
sub
cmp
dec
outsl
pop
jg
dec
js
mov
mov
call
das
sbb
sub
cmp
dec
outsl
pop
jg
dec
js
mov
mov
call
das
sbb
sub
cmp
dec
outsb
pop
jg
dec
dec
pop
mov
mov
jg
dec
js
not
out
orb
push
xchg
mov
mov
in
mov
add
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
fcmovu
lret
ljmp
sahf
iret
scas
pop
pop
dec
dec
jp
push
sbb
or
fcmovu
lret
ljmp
mov
dec
cs
jle
outsb
sbb
or
cmp
fcmovu
lret
ljmp
mov
dec
dec
or
inc
outsb
jb
imul
fmulp
xchg
mov
mov
fs
stos
cwtl
rclb
xchg
fstps
test
mov
sets
mov
push
jno
mov
fs
jg
jecxz
imul
cmp
jg
xchg
xor
bound
incb
mov
add
pop
shr
lahf
lret
lret
dec
mov
imul
lahf
lcall
test
testl
sub
nop
jnp
adc
lahf
sbbl
push
jecxz
xchg
push
or
fcmovb
aas
mov
mov
jmp
add
and
sub
dec
subb
or
leave
cmp
inc
das
test
lret
ljmp
mov
dec
dec
jp
push
sbb
or
cmp
sub
mov
into
lahf
xchg
popl
fcomip
jmp
sbb
dec
cmp
push
push
sub
arpl
cmp
outsl
mov
pushf
out
mov
es
cmp
pop
das
add
pop
gs
pop
sub
xchg
scas
popf
xchg
xchg
jmp
lcall
scas
pop
pop
dec
dec
jp
push
sbb
or
cmp
sub
fcmovu
lret
ljmp
mov
dec
dec
jp
push
sbb
or
cmp
sub
fcmovu
outsl
xchg
into
test
iret
xor
xchg
mov
pcmpeqw
jbe
or
lahf
rorb
loope
arpl
idivl
sbb
mov
inc
inc
xchg
bound
push
aas
push
lock
lock
xchg
mov
shrb
insb
xchg
pop
cmc
idivb
xor
adc
flds
push
sahf
or
fwait
and
mov
sti
add
hlt
stc
xchg
lret
lret
insb
fsqrt
xlat
dec
jmp
pop
ds
in
mov
mov
push
sti
fidivs
xor
movsl
mov
xchg
aaa
add
adc
rorb
mov
jns
and
cmp
or
out
pop
subl
outsb
les
xor
pushf
pushl
insl
sub
in
xlat
jo
inc
and
mov
adc
inc
jbe
pop
and
add
and
mov
or
test
mov
or
jg
xchg
pop
sbb
dec
bound
pushf
sbb
cmpsb
sub
shl
shll
ds
mov
xor
pop
xor
rorl
cmpl
inc
loopne
sub
dec
adc
dec
sub
dec
bound
andl
add
lahf
outsl
sub
aam
js
test
inc
xlat
jbe
lret
jmp
mov
pop
and
aad
inc
mov
dec
clc
cld
pop
filds
xchg
sti
jge
push
mov
mov
fs
inc
lods
mov
lds
mov
cmpsl
or
mov
stc
mov
mov
std
rol
out
cli
push
pop
push
test
push
cmpsl
insb
gs
es
xor
dec
leave
in
mov
aam
xchg
leave
sbb
int
mov
orb
adc
sbb
mov
popa
mov
rclb
mov
jge
cltd
adc
movsl
push
aas
ss
and
xor
cmpl
js
aad
popa
or
lret
orb
stos
push
mov
jecxz
xlat
ret
enter
pop
rclb
pop
mov
mov
inc
xor
pushf
or
push
stos
hlt
imulb
push
mov
add
xor
push
mov
test
push
lret
lock
xor
test
dec
jmp
fimull
mov
mov
test
dec
xchg
in
sbb
push
dec
jcxz
arpl
repz
jmp
popl
cmp
je
jbe
popf
jae
dec
lret
push
gs
cmp
or
and
xorb
aas
jno
mov
and
jnp
pusha
adc
sbb
xchg
test
mov
jmp
push
dec
aam
fldl
add
sbb
adc
mov
xchg
mov
insb
xor
mov
sub
mov
mov
push
jp
adc
mov
sub
popa
jge
psubd
filds
xchg
jae
pop
xor
cld
or
sub
sub
xor
xlat
adc
ret
fmuls
aas
scas
in
gs
and
ss
in
lods
mov
out
rcll
mov
mov
inc
lods
out
push
xchg
pop
push
lods
pushl
sub
add
scas
clc
stc
repnz
scas
test
lret
inc
mov
xrelease
test
jecxz
das
sbb
scas
repz
call
xor
fsubs
sbb
fadd
pop
push
shrb
les
cmp
adc
icebp
add
mov
repnz
roll
loop
cmp
loope
pop
sub
cltd
test
xchg
cs
in
cs
out
mov
cltd
loope
cmpsl
mov
test
scas
or
in
dec
mov
and
shlb
in
jno
inc
xor
add
cmc
adc
iret
mov
or
in
pop
mov
pop
test
je
add
in
mov
push
fucomip
or
xchg
cs
cld
cmc
idiv
ljmp
mov
in
in
popa
out
cwtl
push
pop
dec
dec
sbb
repnz
ret
std
cmp
fwait
mov
push
frstor
jo
and
cli
xor
mov
icebp
push
sarl
lret
in
push
movsb
hlt
popf
mov
das
mov
int
push
mov
and
movsb
sbb
iret
mov
pop
lea
jl
jb
cmp
add
pop
cmp
int
mov
push
dec
cmpb
imul
xor
dec
push
dec
sub
push
add
pop
sub
mov
xchg
shll
jb
jl
jne
jge
int
sbb
loope
push
ucomiss
dec
test
test
inc
test
sub
cmp
push
sbb
in
std
das
pop
push
fdivrs
mov
mov
popf
push
xchg
pop
push
pop
ljmp
sbb
jns
loopne
sub
mov
mov
jnp
dec
lahf
enter
andb
test
aam
sbb
inc
je
pop
call
lods
aas
fsubrl
push
int
adc
mov
iret
xor
test
jle
cmp
inc
add
sti
jbe
das
adc
pop
and
cs
popf
bound
or
lds
jo
shll
lcall
xor
add
jg
loope
lret
loop
or
sbb
sbb
cmp
adc
aam
sbb
pop
jnp
jbe
jl
mov
push
jns
ret
test
jo
cmp
push
jp
push
dec
repz
mov
adc
push
cmp
jg
lret
aad
addb
repz
flds
sbb
adc
popf
fcoms
call
andb
dec
arpl
loopne
cmp
incb
paddd
sbb
nop
and
mov
jp
repz
adc
sub
inc
lea
pop
xorl
jmp
add
lea
fcoms
or
sahf
mov
js
jns
sub
add
shlb
aaa
mov
je
in
mov
outsl
ljmp
sbb
jnp
stos
gs
sarb
and
shll
jns
xor
div
xchg
push
pop
int3
pop
stc
dec
negb
shl
sarl
fiadds
jmp
in
jecxz
popa
popf
cmp
adc
mov
out
mov
push
ljmp
rcrl
pop
xchg
push
test
js
aad
rolb
dec
rorb
out
divb
add
lds
and
mov
xchg
ja
mov
es
fcoms
fcompl
push
cmp
in
outsb
rcl
iret
or
or
fs
gs
into
into
orb
outsl
sbb
stos
bnd
or
int3
pop
ss
clc
pop
and
or
adc
jo
adc
mov
loop
in
push
xor
mov
fxch
out
sbb
fwait
or
add
jmp
insl
inc
insl
sub
dec
push
add
jle
inc
xor
cmc
sbb
push
mov
xchg
cmp
jno
cmpsb
mov
lcall
sar
push
fcompl
sti
push
adc
sub
adc
push
std
and
test
mov
dec
in
xchg
push
dec
pop
movsl
scas
stos
push
ljmp
xchg
add
lods
loopne
ljmp
mov
pop
lahf
cltd
mov
gs
test
scas
cmp
pushf
mov
xchg
cmp
dec
fisubrs
shr
cs
std
cltd
cmp
xchg
adc
mov
dec
and
arpl
sbb
xlat
ror
or
lock
jo
jecxz
push
push
out
movsl
sbb
push
in
loope
or
fsubp
mov
mov
enter
adc
xchg
mov
sbb
sub
ret
int3
data16
xor
xchg
jecxz
inc
das
sbb
sub
notl
dec
mov
and
push
push
fwait
push
add
cltd
add
dec
stos
mov
call
lods
mov
xchg
pusha
testb
push
add
push
icebp
adc
pminsw
out
jecxz
jp
rorb
imul
cmp
rolb
test
xor
cmc
cs
out
mov
mov
mov
icebp
mov
dec
call
jnp
ret
sbb
es
in
shl
jmp
mov
out
jg
testb
pop
mov
fs
gs
mov
push
jp
lds
dec
ret
fwait
mov
inc
in
xchg
sbbb
xor
dec
pop
xchg
pop
add
cmp
cmp
jnp
mov
jp
push
and
clc
imul
pop
repnz
dec
in
sub
aas
cmp
pop
repnz
fsubl
in
xchg
jns
mov
lahf
fisttpl
test
data16
arpl
out
in
and
cltd
mov
in
mov
sub
scas
and
jg
movsb
insb
loop
xor
pop
pop
stos
mov
lock
pop
popa
xlat
jne
movsl
mov
add
dec
pop
pop
fcomi
flds
xlat
xchg
scas
hlt
cld
daa
mov
xor
lock
out
lret
mov
rol
mov
fistl
cmp
outsb
bnd
mov
enter
inc
gs
cmp
jge
inc
out
imul
jmp
rcl
mov
lret
mov
loope
inc
std
arpl
xlat
push
in
popa
inc
addr16
sbb
leave
sbb
imul
aaa
mov
cmp
xchg
cmp
jbe
sti
sub
andb
repnz
pop
sub
cmp
rcr
lock
mov
mov
add
ss
push
jmp
xchg
cmp
and
and
cmp
aas
sub
lods
lea
push
out
sbb
insb
insb
xchg
addr16
movsb
jns
inc
sbb
out
sbb
cmp
jns
inc
ss
xchg
aam
jb
leave
mov
sub
push
mov
jecxz
push
adc
xchg
arpl
popf
mov
pop
pop
pop
pop
sbb
inc
jno
push
daa
jmp
repnz
adc
push
sub
cli
xlat
ljmp
icebp
ds
and
mov
and
neg
push
mov
test
lea
jp
pop
or
sahf
subl
ljmp
add
add
jmp
lret
and
call
mov
jbe
fnstcw
stos
adc
inc
fiaddl
sub
lods
add
nop
sbb
stos
fs
cltd
push
xor
cmp
xchg
mov
js
icebp
icebp
pushf
inc
jno
loopne
mov
sub
xchg
push
cmpsb
cmp
sub
adc
mov
aam
lea
inc
nop
mov
jge
into
jb
mov
lock
ss
out
sti
lds
mov
rcl
cltd
rcrb
mov
fs
sbb
sbb
pop
mov
ret
add
iret
fistpl
ds
aam
popl
mov
xor
lret
loope
cmpsl
imul
jns
add
add
lahf
xchg
insl
movsl
fcmovnbe
mov
in
mov
lds
or
mov
test
aad
enter
aam
jle
push
add
cmp
stos
incl
jnp
sbbb
test
rol
adc
mov
inc
jl
adc
dec
pop
cmpsb
mov
lock
out
and
std
andb
movl
and
push
inc
adc
mov
mov
sarl
repnz
cwtl
or
stos
inc
push
pop
jae
sub
and
rclb
pop
cmpsb
lret
push
push
pop
lret
stc
dec
add
push
lcall
push
cmpsb
inc
rcrl
fcmovbe
jo
and
and
lsl
rclb
rol
mov
add
xchg
push
loope
sbb
clc
imull
xor
flds
sub
or
and
add
mov
push
xchg
and
stos
pop
dec
imulb
test
test
mov
ljmp
mov
test
fistl
cmpsb
bound
nop
jo
sub
in
mov
loopne
sbb
rcrb
stos
dec
xchg
jl
ss
sti
int
add
mov
aad
lea
orb
orb
je
sbb
push
je
add
cmp
shrb
into
int3
lock
daa
mov
jno
and
gs
fistps
adc
rcrb
hlt
aaa
and
es
aas
aas
fcoml
add
mov
xor
jmp
or
inc
adc
pop
jb
cltd
push
mov
movsb
mov
sub
sbb
imul
inc
dec
mov
ret
popf
xor
cli
clc
sbb
mov
mov
pop
and
pop
std
loopne
clc
movsl
jg
in
mov
pop
jle
lods
push
push
push
jle
in
int
daa
jb
adc
inc
aaa
pusha
scas
bound
push
pop
push
push
cltd
nop
xchg
xlat
sub
xchg
insl
leave
frstor
cmp
pop
arpl
jmp
fistl
std
pop
int
inc
ljmp
pop
movsl
jle
idivb
loopne
lods
mov
xchg
subb
insb
mov
jmp
xchg
push
loopne
mov
ds
shrl
jmp
or
iret
xlat
test
xchg
xchg
xor
loop
data16
and
fnsave
sbb
jg
idivb
sbb
xchg
inc
pop
stos
inc
mov
jl
xchg
mov
sbb
neg
pushf
int
adc
adc
data16
push
scas
imul
fucomp
cs
or
and
pop
movsl
cmp
inc
and
enter
xchg
mov
xchg
loope
adc
imul
adc
mov
cmc
insb
mov
dec
sub
cmp
aam
pop
mov
cmp
pop
pop
rcrl
or
hlt
sarl
fisttpl
jae
jb
mov
aam
cmc
mov
adc
mov
js
pop
xchg
pop
out
imul
fisttpll
push
imul
xchg
push
mov
cs
dec
in
mov
sub
fcomps
loop
or
fsubp
xchg
fcmovnbe
inc
xchg
mov
xchg
push
ljmp
cs
push
or
mov
aas
mov
xchg
mov
and
imul
mov
call
out
cli
mov
inc
mov
inc
sbb
mov
adc
sbb
aad
cmpsb
cmp
inc
cmpsb
notb
sbb
ss
mov
jns
pop
nop
mov
mov
mov
aas
pop
imul
test
mov
imul
loopne
ret
dec
mov
scas
pop
xor
push
mov
push
stos
xor
inc
pop
xor
insl
sbb
das
xor
gs
mov
adc
cmc
addb
cs
mov
jo
mov
rcll
dec
mov
imul
das
clc
and
pusha
sbb
test
mov
repnz
imul
insl
inc
imul
in
outsb
dec
mov
movsb
out
and
inc
andl
pop
or
xchg
out
inc
jecxz
cli
data16
sahf
or
hlt
shrb
xchg
fbstp
fnstsw
and
icebp
xchg
scas
out
popa
in
jl
adc
sti
dec
lock
lahf
repnz
sbb
mov
push
call
mov
sub
xlat
addr16
jb
insb
add
cmp
imul
stos
clc
pop
inc
mov
inc
cmp
xchg
fcompl
sbb
inc
mov
test
cmc
dec
sub
cmp
push
popa
aam
repz
dec
adc
outsl
mov
sub
ret
or
xchg
cmpsl
adc
sbb
int
imul
push
pop
das
nop
lcall
movb
inc
into
filds
in
inc
in
in
dec
rcrl
movsb
ja
pop
cld
xchg
xor
pop
stos
sbb
jle
mov
inc
enter
xchg
loopne
idivb
fisubl
cmpb
mov
mov
clc
data16
add
cmpsb
lds
popf
mov
mov
lds
jp
push
in
xchg
testb
in
pop
or
es
fwait
cltd
in
in
dec
hlt
pop
xchg
lock
xchg
cmc
sbb
pop
out
and
dec
inc
testb
xor
lods
or
sbb
push
test
repnz
sub
pop
push
fsubrs
incl
xchg
imul
in
scas
bound
rcrl
mov
xchg
inc
cltd
in
aam
push
push
dec
cmp
inc
cli
outsb
test
rorl
mov
pop
inc
mov
enter
setge
xchg
push
addb
mov
loopne
cmp
fwait
sub
xor
lret
mov
xchg
lea
add
repnz
cld
repz
adc
fwait
or
loop
xchg
mov
iret
xchg
jmp
jecxz
mov
fadds
inc
mov
inc
loope
push
pop
jmp
xlat
fsub
test
fbld
mov
in
clc
rolb
call
negl
aam
nop
jle
inc
inc
mov
sub
ret
jb
sbb
jno
fs
dec
pop
mov
icebp
mov
mov
sbb
insb
jbe
push
xchg
xchg
ds
inc
das
push
sbb
loopne
push
xchg
es
inc
mov
inc
sarl
xor
xor
jo
je
cmp
jne
jno
ficoml
test
loope
out
sti
aam
mov
fisubrs
mov
dec
rcrl
xor
mov
mov
sbb
and
mov
arpl
in
inc
sbb
movsb
mov
push
repnz
shlb
xchg
xor
fwait
dec
fsubrl
inc
adc
xchg
mov
ret
sahf
in
mov
outsl
or
outsl
dec
enter
je
sub
sti
push
repz
mov
push
rorl
popa
cmp
inc
pusha
test
pop
or
insb
aam
pop
repz
push
pop
add
sar
in
test
inc
test
mov
aam
or
and
xchg
adc
add
testb
test
adc
cmp
in
add
stos
clc
int3
rcrl
nop
cmpsb
jl
mov
inc
xchg
psubusw
pop
ret
sub
int
pop
adc
or
popf
dec
es
pushl
dec
js
in
fwait
mov
dec
mov
and
lock
fimull
jp
into
ret
lock
xchg
daa
out
inc
xchg
xor
jno
push
incl
dec
sub
push
or
add
mov
cli
mov
inc
ret
push
jl
or
cmc
mov
mov
xlat
mov
sub
xor
pop
or
push
out
out
mov
or
into
mov
dec
loop
xor
push
mov
gs
mov
sub
cwtl
cli
mov
cli
jecxz
rcll
and
lods
scas
and
mov
cmpsb
sub
cmp
fsub
xlat
shll
or
jp
jns
testl
adc
out
mov
cld
add
mov
and
insb
out
decl
push
lods
jle
lahf
out
idivb
adc
jns
lret
adc
dec
mov
loop
mov
or
imul
jecxz
push
rclb
push
push
add
and
jns
jl
pusha
ja
sbb
js
out
andb
add
jecxz
test
pop
jns
aas
xorl
mov
in
cmp
test
sti
xchg
pop
and
into
adc
push
sbb
addl
lret
add
inc
pop
test
int
jge
pop
adc
xchg
and
addr16
sub
fiadds
rcll
pop
scas
pusha
add
adc
rcr
push
push
jnp
sbb
add
adc
jb
rcl
xchg
lods
xchg
pop
shlb
mov
rcrb
inc
push
adc
incb
push
ret
jbe
enter
add
xlat
mov
pop
call
mov
pusha
xchg
imul
loop
cmp
jle
je
int3
call
into
push
jno
push
and
pop
sbb
jle
add
push
cmc
popf
push
les
jmp
mov
or
jno
cmp
clc
addr16
fs
sub
sub
jb
inc
xchg
shlb
and
sbbl
out
inc
movsl
mov
mov
test
cltd
cmp
jle
jecxz
jb
pop
rep
icebp
clc
inc
mov
adc
push
add
imul
insb
scas
bound
jae
xor
xchg
mov
cli
mov
ja
loopne
inc
mov
xchg
and
mov
pop
sbb
fcoml
dec
les
cmp
xchg
xchg
cmpsl
sub
loopne
mov
into
sbb
rorl
pop
sub
fstpt
test
repz
xor
popf
scas
lret
mov
mov
ret
jb
xchg
hlt
test
stos
pushf
inc
cmp
fwait
cmpsb
sbb
dec
out
sub
adc
cmp
mov
mov
out
xchg
addb
dec
test
mov
sahf
mov
pop
pop
dec
dec
jp
push
sbb
or
cmp
sub
fcmovu
lret
ljmp
mov
dec
dec
jp
push
sbb
or
cmp
sub
fcmovu
lret
jle
out
lcall
scas
pop
fimuls
jp
push
sbb
or
cmp
sub
fcmovu
lret
ljmp
mov
dec
in
jle
sbb
xor
rcl
loopne
add
dec
jecxz
xchg
or
inc
cmp
lret
jge
dec
mov
movsl
jp
push
pop
popf
dec
in
cmp
sub
sbb
outsl
jge
cmp
lret
sbb
ja
cmp
dec
std
cmp
or
mov
and
cmp
cs
in
ss
sbb
or
das
data16
push
jns
push
add
cmp
or
dec
mov
xor
mov
xchg
pop
subb
neg
call
and
push
stos
lea
mov
mov
cli
ret
fsub
xor
mov
test
sbb
cmp
sub
adc
ljmp
loop
loopne
jg
pop
out
mov
xchg
jb
pop
inc
adc
xchg
or
add
push
lret
jge
sbb
and
inc
pusha
jne
mov
aad
scas
sbb
cli
or
mov
dec
in
cmp
or
cli
scas
ljmp
arpl
fistpll
adc
sbb
or
jg
jle
mov
mov
into
adc
cmp
sbb
lods
push
xor
sub
scas
and
lahf
jl
push
fistps
cmp
lcall
fistpll
mov
std
aas
fdivl
test
std
sub
sbb
or
ficompl
stos
dec
lcall
lea
dec
in
cmp
sub
sbb
or
ficompl
stos
dec
lcall
and
iret
pushf
test
es
loope
fistps
fnstcw
cmp
inc
stos
shl
mov
push
lahf
add
outsl
or
dec
add
dec
or
out
call
int3
rcl
jecxz
mov
xor
mov
fwait
push
or
add
sbb
inc
mov
int
mov
fcoms
std
scas
aad
popf
xchg
adc
fs
ja
sub
insb
mov
lahf
adc
sub
in
cli
fwait
cld
repz
inc
subl
outsb
mov
iret
data16
std
gs
out
outsb
lcall
loope
inc
add
mov
sub
and
dec
or
push
mov
mov
mov
adc
enter
in
mov
in
decl
daa
mov
popa
dec
jg
in
outsl
icebp
add
xchg
inc
push
cld
push
cmp
inc
sub
dec
ja
ret
and
pop
jne
dec
dec
sbb
cmp
dec
lahf
test
mov
xor
sub
js
jne
push
pop
leave
out
das
dec
sti
xchg
mov
arpl
fcmovne
and
jp
imul
xchg
ja
and
rol
xchg
lods
jb
loope
adc
or
aad
or
lret
out
aad
push
adc
mov
mov
xor
mov
inc
mov
jp
imul
rcrl
mov
enter
xchg
pop
andb
jp
xchg
jno
in
les
in
mov
fs
mov
push
xor
inc
and
push
push
adc
xchg
insb
iret
pop
lcall
icebp
cmp
jg
mov
aas
sub
jnp
mov
hlt
xchg
mov
leave
rdmsr
sub
add
xchg
mov
mov
shr
out
sub
fmull
push
das
fdivl
ja
iret
mov
rcrb
xor
shll
out
pop
int
add
lret
inc
cltd
pop
sbbb
jmp
push
clc
xchg
adc
enter
push
in
push
or
movl
sbb
xor
lret
mov
sbb
es
int
inc
push
imul
dec
bnd
and
and
mov
sbb
mov
mov
lcall
shlb
mov
xor
fldenv
xor
jo
inc
imul
movsb
addr16
xchg
or
cltd
push
sub
hlt
gs
mov
in
add
mov
ret
xor
outsl
or
mov
int
sti
inc
outsb
icebp
xor
lret
fdivl
cmpl
int
jg
inc
out
inc
scas
fsubr
popf
pop
lock
stos
mov
clc
jge
xchg
test
test
dec
xor
js
add
inc
stos
cmp
add
out
cld
dec
aas
icebp
mov
or
js
enter
cmpsb
pop
fs
and
arpl
add
mov
std
push
movsb
fmuls
xor
lret
leave
daa
aad
dec
movsb
pop
dec
ret
xor
cmp
imul
fs
sti
xchg
imul
fdivp
in
stos
mov
xchg
enter
js
cmp
push
or
mov
fisttpl
es
sbb
and
or
stc
add
adc
adc
leave
push
cmp
or
cmpsl
mov
or
cs
sbb
or
sub
inc
inc
lahf
jb
repz
jne
jbe
mov
mov
addr16
fisttps
mov
xchg
cmp
inc
jg
and
movsl
dec
inc
bnd
mov
xor
daa
mov
or
pushl
push
shrl
or
sbb
mov
xchg
sbb
test
in
imul
fcoms
cmp
test
xor
outsb
ficomps
clc
lock
daa
frstor
imul
sbb
mov
popa
imul
notb
aad
or
cmp
jo
test
lret
pop
cli
out
ljmp
and
add
lods
sub
push
in
and
imulb
pop
push
pop
in
pop
sub
jbe
mov
mov
sbb
xor
in
pop
je
pop
sti
cli
xor
popf
scas
and
lret
jnp
dec
mov
xlat
jp
mov
add
into
cli
xchg
push
pusha
rolb
aad
pop
cmc
jle
leave
adc
movsb
push
and
test
push
mov
cli
cmp
xorl
divl
cmp
mov
dec
lea
jecxz
pop
das
inc
xor
insl
or
movsb
pushf
mov
or
push
push
cmpb
mov
sbb
lcall
add
shrb
outsl
and
jg
inc
jp
sbb
les
mov
mov
rcr
mov
jle
jb
jnp
push
popw
sub
stos
sti
inc
sahf
loop
mov
mov
and
pop
mov
mov
icebp
mov
push
xchg
call
add
sahf
and
and
dec
mov
lahf
jbe
xor
lds
out
inc
pop
xchg
sub
stos
ret
js
cld
mov
ja
xlat
fldenv
lds
jl
add
es
push
sti
jnp
je
icebp
mov
loopne
jb
sarl
xor
out
popf
xchg
aam
xchg
xchg
or
fwait
out
idiv
sub
sub
sbb
jne
and
mov
enter
mov
or
adc
inc
aas
mull
and
cmpsb
mov
leave
inc
test
xor
jl
jg
mov
inc
lret
and
aas
rolb
shl
stos
cld
imul
test
ss
pop
jg
ss
pop
repnz
cmpsb
xor
add
push
out
adc
call
pop
pop
push
in
stc
mov
push
fst
pop
or
cwtl
dec
mov
into
icebp
into
hlt
sub
insl
sti
roll
dec
adc
mov
cmc
rorl
xor
xlat
pushw
dec
out
xchg
lods
std
dec
adc
imul
xchg
stos
out
xor
mov
aam
insb
fs
jns
xor
ficompl
xchg
mov
cmp
cld
sub
leave
mov
stc
stos
lods
jne
sbb
pop
sub
xlat
mov
lods
shrb
cwtl
xlat
mov
inc
push
rorb
cli
jae
in
xchg
lcall
out
popa
mov
scas
xchg
mov
rcll
push
lret
sti
xchg
cmp
lahf
test
lods
jecxz
sbb
scas
push
and
push
icebp
test
pop
lahf
and
jge
je
mov
repz
outsl
leave
mov
mov
push
call
sub
out
push
add
jno
arpl
insl
clc
jbe
or
mov
mov
psadbw
cwtl
roll
in
pop
push
mov
or
sub
addr16
cmpsb
add
mov
test
leave
repz
xchg
loop
sub
pop
or
xchg
pop
jno
gs
jno
mov
jae
ja
daa
push
test
push
sbb
pop
push
dec
inc
jp
bound
dec
adc
xor
add
out
mov
rorb
or
xchg
bound
repz
leave
mov
add
adc
lods
and
call
sub
sbb
imulb
jg
insl
mov
jp
or
mov
and
jnp
sbb
xchg
push
pop
test
adc
adc
pop
addr16
es
inc
xor
stos
nop
divl
outsl
push
out
hlt
inc
movsb
in
sub
test
cmp
cmc
adc
fadds
mov
add
lcall
lret
leave
cwtl
dec
lods
ret
adc
rorb
mov
jmp
shlb
pop
inc
cltd
xchg
adc
mov
hlt
xorl
loopne
call
pushf
or
mov
aas
mov
push
mov
repz
insl
popf
mov
fisubs
sub
test
and
xor
test
sub
inc
push
leave
dec
cwtl
and
dec
inc
in
xor
fidivl
xor
mov
imul
cltd
insl
and
lock
cwtl
jmp
mov
mov
fildl
push
outsl
loop
jbe
sarb
flds
loope
jge
adc
jecxz
mov
fsubrs
gs
sahf
cwtl
mov
pusha
jne
push
sbb
mov
pop
xchg
mov
mov
adcb
xor
add
in
mov
inc
scas
pop
adc
test
das
mov
cld
lret
jae
inc
jmp
push
pop
insl
and
pushf
inc
mov
sbb
imul
jecxz
incl
pop
sub
xchg
movsl
dec
lock
lahf
sbb
lret
jb
pop
sti
and
iret
fldl
icebp
cmp
jg
movsl
out
mov
sub
xor
in
jo
testl
mov
cmc
bswap
mov
sbb
aam
sub
insb
mov
cmp
adc
xor
aad
cli
sbb
jo
or
cmc
fwait
inc
inc
inc
scas
add
call
es
dec
inc
push
enter
mov
outsb
mov
mov
dec
inc
pop
jg
pop
dec
cmp
ss
push
popa
jae
ret
mov
movsl
xlat
repnz
enter
bound
add
sbb
enter
push
cmp
repz
repz
lock
dec
or
jecxz
mov
sti
inc
cs
sub
mov
mov
cmpsl
mov
or
mov
int
push
fdivrs
in
push
pop
bswap
inc
lock
ret
cmpsb
xchg
call
mov
or
xor
push
push
jmp
mov
jne
xchg
jo
dec
fld1
imul
xchg
leave
inc
test
mov
or
mov
jge
push
and
xor
inc
xchg
or
xor
jl
leave
adc
sbb
js
or
adc
lea
mov
cmpb
jae
or
dec
gs
fcmovb
add
xchg
xchg
enter
cmp
push
mov
lock
cmpw
cmp
sub
mov
sub
int3
mov
add
aad
mov
into
aam
fadds
inc
mov
mov
jbe
lods
add
cli
test
test
aam
in
pop
pop
repnz
in
xchg
idiv
sub
push
xchg
insl
jecxz
or
jl
mov
add
push
and
push
clc
outsb
sbb
or
std
jmp
loopne
rep
aas
ret
mov
ret
sahf
jle
test
cmp
jecxz
sub
orb
and
ljmp
push
jmp
ss
cli
lcall
dec
cltd
pop
mov
pop
fidivl
fstl
pop
mov
and
or
ljmp
movsl
fsin
cmpsl
sbb
sub
or
dec
aas
test
xor
cltd
inc
adcb
push
adc
movsb
into
mov
mov
sti
inc
inc
vpmulhuw
repnz
fwait
mov
aad
frstor
not
rorl
push
sbb
lods
adc
cli
sub
sub
add
in
sbb
inc
mov
icebp
mov
and
out
xchg
dec
mov
inc
subb
nop
adc
add
dec
cld
pop
sub
xor
dec
imul
cmp
inc
cmp
xor
out
mov
or
inc
mov
rol
pop
gs
andl
mov
or
cwtl
mov
shl
in
test
cmc
imul
ret
les
xchg
cmp
aad
cltd
mov
addr16
rcrb
inc
cmp
mov
jge
int3
sbbl
inc
sub
or
mov
adc
add
and
jns
pop
adc
dec
sarl
daa
rcll
adc
push
cmpsb
add
mov
gs
xor
jle
fldenv
movsl
xchg
cmp
mov
add
or
mov
into
adc
push
ds
movsb
mov
dec
mov
ret
inc
and
roll
push
mov
test
daa
sbbl
int
sarl
fwait
push
mov
int
dec
in
xchg
mov
cs
divb
inc
iret
ret
inc
jp
sub
adc
fwait
pop
cmpsb
and
stc
lds
andb
das
ss
popa
and
fidivrl
ret
push
lret
inc
pop
push
push
xorl
xchg
adcb
cltd
test
int3
cmp
jae
adc
mov
lods
add
push
xor
mov
ret
sub
push
lods
and
out
dec
sbb
psubsb
jl
enter
xchg
cmp
pop
jo
movsl
cmp
je
jecxz
in
movsl
mov
mov
pop
out
jmp
movsl
nop
sbb
sbbl
push
bound
xchg
pop
and
andb
push
pop
repz
ret
testl
roll
and
scas
rcll
sbbl
rclb
fisubrs
rcll
mov
sbb
stc
add
inc
test
sub
add
inc
jb
into
iret
test
aam
push
pop
push
punpckldq
std
dec
popa
lds
popa
nop
xor
pop
jl
andb
stos
cmp
inc
push
iret
shrb
and
xchg
stos
sub
jnp
push
mov
dec
inc
cld
out
movsb
bound
lods
jmp
xor
mov
vmovlps
jne
arpl
or
add
or
into
jns
loope
cli
or
arpl
cmp
leave
arpl
stc
jge
inc
sub
push
dec
jnp
fsubp
insl
repnz
xchg
adc
xor
test
test
push
or
dec
mov
inc
adc
sbb
in
push
sbb
sub
pop
push
sub
int3
cli
pop
dec
mov
sbb
in
pusha
shll
fldl
sti
adcb
outsl
int3
dec
es
test
pop
mov
cmp
dec
or
jg
int3
mov
or
lcall
test
xor
sbb
mov
adc
mov
add
fdivl
enter
mov
imul
repz
xlat
jl
fisttpll
ror
in
sbb
int3
mov
rcr
in
notb
in
xchg
adc
out
mov
mov
inc
data16
mov
pop
pushf
cmc
mov
mov
arpl
inc
repz
xchg
add
mov
enter
mov
mov
jae
icebp
push
outsl
inc
mov
push
add
sbb
pop
loope
dec
fidivrl
dec
mov
nop
add
jns
enter
ss
pop
xor
ret
cmpsl
sub
out
test
loopne
nop
dec
shrl
dec
ds
movsl
cltd
jl
data16
pop
mov
or
faddp
pop
pop
nop
jb
jb
in
std
int
loope
dec
add
pop
mov
popf
and
dec
or
mov
xchg
cmpb
mov
xchg
fisttpl
sub
add
sub
mov
push
cwtl
cltd
aas
aaa
inc
xor
fstl
pushf
mov
dec
icebp
test
xor
inc
push
sbb
js
fbld
push
rclb
adc
push
add
outsl
mov
ljmp
rclb
sahf
call
cmpb
inc
outsb
das
xchg
js
es
pop
arpl
mov
sahf
movsl
mov
sub
out
mov
pop
ret
ja
push
insl
aad
std
movsl
cmpsb
fcompl
add
mov
sbb
cs
push
repz
push
popa
shlb
out
dec
sete
lods
add
in
mov
and
push
fildl
or
xlat
xor
sub
int3
loopne
movb
mov
divb
or
pop
push
je
cmp
cmp
out
pop
push
aad
sbb
mov
fs
je
pushf
and
mov
dec
notb
jl
inc
dec
dec
jg
xchg
jge
subb
pop
inc
push
xchg
sub
add
xchg
ljmp
rcrl
cmp
mov
and
test
mov
push
leave
iret
das
inc
iret
aad
jl
mov
xchg
lahf
ljmp
cmp
int
cmc
stc
adcl
or
sbb
jns
mov
mov
inc
add
add
cmc
das
add
sbb
push
aam
pop
loop
stos
je
out
mov
out
popa
mov
pop
sti
int
mov
and
in
loop
or
adc
mov
js,pn
mov
mov
aas
fnstcw
cmp
push
mov
lret
jmp
pop
pusha
jl
and
insb
mov
int3
pop
jg
mov
xchg
stos
sahf
xor
push
int3
xchg
in
jno
adc
call
cwtl
jge
scas
movsl
lret
jbe
mov
aam
or
add
daa
xchg
pop
cmpsb
jmp
push
xor
imul
sti
in
push
jecxz
mov
cmp
ss
xor
dec
mov
pop
in
inc
xchg
test
or
push
jae
data16
xchg
int3
scas
pop
test
data16
stc
push
js
mov
adc
jmp
and
imul
dec
adc
data16
cmp
mov
mov
dec
stc
lcall
fyl2xp1
stc
lods
nop
arpl
js
aaa
mov
and
xor
mov
rcr
ss
out
js
mov
sti
sbb
inc
inc
test
insb
cmpl
fcomip
sti
ret
xor
or
decl
sub
rcll
mov
out
push
push
ss
ret
adc
shll
jge
cmp
icebp
mov
pushf
int
fisttpll
into
or
sbb
xor
push
in
fmuls
sub
jl
push
repnz
lret
jl
mov
das
clc
mov
jbe
repnz
daa
sub
rclb
inc
aad
sub
jmp
sbb
icebp
jp
loope
push
mov
aam
mov
push
repz
sarl
je
fwait
sahf
add
daa
dec
aas
sub
xorb
scas
pusha
xchg
leave
mov
sbb
xor
mov
sbb
push
in
inc
xchg
outsl
xchg
sbb
sti
push
out
and
fwait
in
leave
les
dec
lahf
xchg
mov
rcl
iret
rolb
jbe
cmp
xorb
mov
movsl
xchg
xor
sbbl
daa
and
mov
xchg
repnz
mov
pop
dec
popf
in
aas
cmc
jle
sbb
fs
dec
loop
xlat
xchg
in
xor
add
push
fldt
lret
int
ds
jmp
bound
fs
cmp
xchg
addb
jns
jmp
je
push
add
and
cwtl
les
xor
add
sub
stc
repz
das
cmp
jno
std
test
xchg
sub
xlat
cmc
aam
test
ret
cs
mov
mov
es
ds
mov
enter
shrl
and
out
or
inc
ja
mov
ss
mov
xor
mov
inc
fidivrs
movsb
xchg
push
cmpsl
jns
mov
aam
test
loope
xor
mov
mov
scas
test
jo
pop
push
repz
xchg
pusha
cmp
js
jns
fstl
adc
gs
push
xchg
iret
xchg
jl
pop
stos
pop
cmp
shl
loope
popf
mov
jl
push
cltd
mov
std
xchg
fidivrs
hlt
aad
push
ljmp
mov
adc
lahf
sbb
shrl
sbb
ss
mov
aaa
loope
out
mov
roll
inc
xor
sbb
addl
ror
in
mov
adc
out
popa
push
test
dec
out
gs
rolb
and
leave
jge
rcll
push
or
and
dec
fbld
das
mov
mov
push
adc
outsb
fdivrl
aas
popa
xchg
hlt
cmp
mov
lds
mov
pop
jb
imul
mov
mov
push
lcall
jne
sbb
cmc
cmp
jae
nop
mov
jmp
cld
sub
les
addl
daa
jmp
jge
xor
les
sbb
pop
fs
mov
xchg
push
mov
mov
cmp
arpl
dec
mov
cmp
repnz
into
and
mov
je
sbb
dec
je
xchg
cmp
and
sbb
in
xor
xor
jo
call
test
jno
dec
mov
mov
sub
mov
dec
mov
xor
push
adcb
mov
test
gs
sub
jnp
fs
mov
adc
dec
out
mov
sbb
lds
xchg
inc
inc
mov
mov
ljmp
lods
jb
sti
ret
cmpsl
imul
mov
push
dec
mov
dec
pop
je
mov
and
or
aam
aam
mov
dec
out
sbbb
push
mov
jmp
sahf
test
pop
call
pop
add
call
loop
adc
fisttpl
pop
orl
sbb
or
ficompl
stos
dec
lcall
lea
dec
in
cmp
sub
sbb
or
ficompl
stos
dec
lcall
popf
pop
popf
dec
in
cmp
sub
sbb
or
cli
cmp
lret
fs
dec
lcall
add
cmp
sub
sbb
sub
ficompl
push
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
lods
mov
clc
sarl
fisttps
jo
push
jmp
rorl
push
add
add
or
add
pop
loop
scas
add
add
add
add
add
jl
insl
add
insl
add
add
add
add
or
jge
in
add
add
add
imul
in
hlt
add
ljmp
add
add
add
add
movb
add
add
add
add
dec
add
in
sub
add
xchg
add
ljmp
add
in
mov
dec
add
add
addb
add
add
add
add
add
add
lret
add
add
addb
add
add
add
add
ljmp
add
add
add
add
add
sub
scas
add
add
add
add
inc
add
add
add
jne
outsb
add
add
mov
fldl
ljmp
add
add
loop
and
mov
sub
add
add
add
add
add
mov
add
inc
add
dec
add
add
add
sbb
add
add
add
add
add
gs
add
add
add
cmp
mov
js
pop
add
add
add
aaa
add
add
arpl
xchg
add
stc
add
add
add
add
enter
sub
add
add
add
inc
add
add
add
add
add
adc
xchg
add
pop
add
add
add
add
add
add
add
add
add
sub
jbe
jno
ret
add
add
and
out
add
xor
xchg
das
add
add
add
add
das
add
cmp
bound
jge
pusha
add
add
mov
pop
add
add
add
add
add
cmpsb
add
add
add
add
add
incb
sub
xchg
add
add
add
jge
into
add
add
add
xchg
add
in
add
add
inc
add
jmp
add
add
add
push
filds
add
aaa
add
add
pusha
add
add
add
add
add
add
in
push
icebp
add
xchg
add
sub
jno
mov
add
push
add
add
add
pop
add
add
add
add
add
xor
dec
add
add
add
mov
add
push
add
add
inc
add
add
add
add
add
add
rolb
dec
add
adc
add
add
xchg
add
add
add
add
sbb
dec
add
addb
adc
xchg
ljmp
add
add
push
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
rolb
pop
add
outsb
add
add
xor
add
add
add
add
xchg
xchg
add
add
xor
add
add
flds
mov
nop
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
lret
add
clc
add
pop
cmp
push
sub
outsb
out
fisubrs
fdiv
inc
jbe
push
sbb
out
jb
dec
cmp
fucom
dec
jle
mov
lods
scas
inc
in
popf
test
arpl
pop
lea
push
stos
add
scas
xchg
outsb
ror
sbb
out
fadds
call
adc
filds
aaa
jmp
in
xchg
cwtl
ret
jns
push
mov
sbb
xchg
lea
cwtl
fistpl
fst
sub
movsb
sbb
js
pop
lock
inc
in
addr16
mov
aaa
jbe
add
mov
jnp
sub
repz
pop
pop
jno
dec
lea
jnp
sub
push
int
inc
ds
dec
adc
pop
mov
loop
pop
out
cs
inc
pop
loop
xor
bound
test
cld
test
aad
fildll
je
ljmp
mov
xlat
mov
cli
jns
fcomps
lahf
xor
in
aad
push
pop
push
push
cli
aaa
fadds
std
sub
test
cmp
dec
push
imul
push
int
cltd
ss
sti
pop
xor
xchg
pop
into
out
scas
std
fadds
sahf
or
and
ss
out
mov
popf
mov
loopne
xchg
or
push
xor
loop
mov
aad
orl
lcall
cmp
xlat
pop
bound
stos
cld
dec
shrl
inc
ret
and
jp
pop
inc
in
pop
or
push
pop
scas
int
cs
lahf
mov
out
ret
adc
cmp
test
roll
mov
inc
fbstp
inc
in
pusha
jnp
mov
arpl
mov
popa
repz
aaa
add
mov
in
dec
xor
mov
test
cli
stos
add
ret
add
sub
inc
sarb
push
cli
ss
push
int3
inc
test
sub
push
push
cli
xchg
dec
pop
negl
mull
mov
clc
push
and
xchg
test
mov
xor
pop
mov
aam
sbb
adc
lcall
xor
out
pop
mov
or
popf
mov
ret
insl
aas
and
xchg
push
shlb
pop
dec
mov
pop
stc
inc
xor
jge
icebp
push
scas
sub
cmp
and
rcrb
pop
mov
add
jecxz
cld
dec
and
aas
jge
cmpsl
hlt
mov
shll
sbb
shlb
cmp
mov
fs
jnp
jnp
aad
fwait
jo
insb
or
bound
out
jp
insb
aas
or
mov
fadds
pop
das
sbb
pop
cmpsl
push
mov
sub
lods
add
add
add
add
rolb
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
repnz
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
repnz
repnz
mov
repnz
lods
repnz
movsb
repnz
pushf
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
repnz
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
repz
mov
repz
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
hlt
add
cwtl
hlt
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
pop
add
pushf
pop
add
xchg
pop
add
mov
add
test
add
jl
add
je
add
insb
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rclb
add
fcoml
add
lock
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
sbb
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
sbb
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
sbb
add
add
js
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
