jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
movsl
cmpsl
cmp
imul
cmp
add
add
add
add
or
pop
add
add
imul
add
str
add
add
adc
addb
add
stc
add
add
add
add
int
verw
cmpsl
add
add
popf
add
add
add
add
add
faddl
cmp
pop
add
add
rolb
add
add
add
popa
add
add
sub
pop
add
add
add
add
add
add
add
add
pop
add
add
add
pop
add
faddl
pop
add
faddl
cmp
inc
add
pop
add
add
cmp
sub
or
faddl
addb
add
pop
add
add
add
add
add
add
add
add
lock
pop
add
add
add
add
pop
add
add
pop
add
push
add
add
add
sbb
add
add
add
push
add
add
faddl
pop
add
add
add
add
add
add
add
add
imul
add
add
cli
add
add
add
add
cmp
faddl
cli
add
add
add
add
xchg
cld
add
add
add
rolb
add
add
add
add
add
add
roll
push
add
popf
add
add
add
add
jnp
faddl
popf
add
add
add
cmp
pop
add
add
add
add
roll
lea
and
pop
add
add
faddl
faddl
lods
add
add
add
cmpsl
add
add
add
add
add
add
add
add
pop
add
add
jnp
pushf
add
imul
addb
add
add
add
stos
add
pop
add
add
cmp
faddl
push
add
add
add
push
add
add
loopne
xchg
add
add
add
popf
add
add
add
add
add
add
add
add
add
add
sbb
pop
add
add
add
add
add
faddl
rolb
add
add
pushf
add
addb
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
cwtl
add
add
add
add
and
jo
dec
add
add
inc
add
add
fwait
add
add
cmp
inc
add
add
pop
add
add
add
and
pop
add
add
add
add
sbb
pop
add
add
push
add
add
dec
add
add
add
imul
add
add
mov
add
add
add
in
faddl
sti
add
or
imul
add
add
add
add
add
adc
dec
add
add
add
add
faddl
faddl
lahf
add
add
pop
add
add
jl
mov
imul
add
add
jl
outsb
add
addb
add
add
add
xor
faddl
mov
dec
add
hlt
add
add
add
sbb
imul
add
add
add
pop
add
flds
push
add
cmp
rolb
add
add
pop
add
add
pop
add
add
add
faddl
aas
add
sub
bound
arpl
movsl
loope
jge
dec
int3
mov
ss
jle
incb
jp
jae
cmpsb
dec
fnstcw
daa
sub
popa
xchg
xchg
scas
es
scas
fnsave
icebp
add
es
cmp
cltd
loope
push
fisubrs
and
out
jnp
dec
jnp
data16
dec
rorb
jbe
push
dec
inc
or
pop
jecxz
lds
pop
dec
cld
fistpll
push
cltd
ljmp
push
sub
loop
imul
mov
dec
lret
xchg
inc
mov
into
add
js
arpl
pop
test
dec
out
test
lret
add
inc
push
call
sub
arpl
out
lcall
add
cs
int
je
push
into
push
int3
iret
mov
ret
push
sbb
adcb
mov
push
dec
xchg
aaa
stc
sbbl
out
pop
fcomi
jmp
mov
sbb
ret
mov
shlb
insb
xor
test
push
push
rcll
ds
pop
popf
fwait
cmp
daa
jae
gs
jmp
pop
insb
in
xor
out
push
fsubl
and
xchg
dec
dec
and
idivb
sub
add
xor
push
mov
rcll
inc
add
cmp
pop
mov
int
dec
subl
mov
lret
das
mov
inc
test
enter
xor
aas
mov
push
insb
fildl
inc
sahf
sbb
and
fbld
mov
ljmp
mov
xchg
jecxz
mov
lds
jae
popf
leave
sti
movsl
xchg
cwtl
in
subl
add
mov
stos
enter
xchg
xor
cmp
jle
cld
outsb
imul
loope
pop
mov
pop
cmp
frstor
push
push
mov
cmpsb
repz
leave
jmp
into
inc
pop
jne
jmp
push
mov
mov
mov
xchg
xchg
and
sbb
ss
sbb
arpl
jecxz
mov
mov
je
hlt
push
mov
loop
adc
fcomp
pop
push
fmull
iret
insl
imulb
jae
jne
into
shr
mov
adc
shlb
and
lea
pop
dec
inc
or
mov
lods
imul
inc
loop
push
stos
cmp
add
iret
jecxz
jns
dec
pop
cwtl
fstl
cmc
mov
in
int3
pop
jl
test
iret
pushl
shll
ret
ret
daa
xor
push
jb
shl
inc
testb
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
cld
pushf
mov
xchg
push
stc
add
adc
incl
shll
ss
xchg
push
xchg
mov
mov
mov
xchg
push
out
divb
movb
adc
ss
shlb
adcl
jp
jae
pop
mov
cmp
sub
sbb
or
add
rorl
cmp
xor
arpl
fsubr
int3
or
cmc
popf
das
rcr
push
cli
test
dec
mov
cmpsb
cmp
xchg
xchg
mov
fwait
out
arpl
sbb
rcrl
rcr
es
stos
sbb
sub
aaa
test
divl
aam
into
jmp
leave
xor
jmp
mov
jge
xchg
jbe
cmpsb
jae
inc
sbb
repz
in
adc
dec
sub
lock
stc
inc
pop
dec
xchg
fistpll
iret
push
adc
outsb
leave
repz
ja
lret
subl
leave
inc
sbb
es
sahf
leave
out
pop
ret
cmpsb
lock
cmpsb
jl
andl
xchg
dec
mulb
in
xor
sbb
or
sti
cs
fimull
lret
outsb
movsb
inc
orl
push
shll
inc
repnz
xorb
les
jle
mov
mov
mov
and
mov
jecxz
xchg
push
xchg
push
cwtl
add
lcall
add
add
test
test
jecxz
xchg
es
dec
divb
movb
adc
jecxz
repz
ret
push
shll
jbe
inc
adcl
arpl
push
out
divb
movb
adc
jecxz
repz
ret
push
shll
jbe
inc
adcl
arpl
fbld
inc
leave
push
popa
mov
enter
pop
sub
mov
movl
lcall
movsb
cmc
lods
sbb
inc
rorl
xchg
pusha
in
popf
repnz
loop
inc
cmp
adc
mov
lods
je
dec
lcall
sarb
xchg
sbb
or
leave
pop
jnp
rcr
icebp
int
and
xor
test
pop
int
xlat
push
cltd
and
pushf
lret
popf
das
xlat
cld
push
xchg
adc
enter
and
bound
jp
xchg
test
push
cmpsb
fildl
mov
iret
fs
in
loop
repnz
inc
mov
repz
sub
rcrb
out
mov
cmpsl
and
sbb
js
lea
xchg
int
scas
push
mov
push
mov
xorl
push
push
mov
sbb
test
push
jno
sub
push
daa
inc
push
add
push
fnstenv
xchg
jp
fdecstp
cs
es
mov
xor
mov
call
ja
mov
and
aam
lock
adc
push
adc
add
dec
sarb
outsl
push
xchg
dec
xorb
or
jns
repnz
and
clc
push
sbb
mov
scas
lods
dec
outsb
dec
xchg
mov
push
or
out
mov
stos
aas
cmp
outsb
sbb
int3
pop
inc
cld
in
test
lock
je
inc
and
add
lret
jmp
outsb
movsl
inc
push
ret
dec
inc
dec
cltd
mov
das
cmp
xlat
or
add
dec
xchg
inc
xor
ljmp
out
notb
movsl
leave
test
mov
aad
mov
xor
mov
lcall
mov
out
push
and
or
add
mov
sbb
lds
rcrb
dec
subb
orl
cltd
scas
xchg
pop
and
lret
lcall
push
addb
xchg
repz
adc
sub
mov
fmul
lea
cmpsb
jl
hlt
adc
in
movb
inc
inc
jp
repz
add
mov
call
adc
sub
inc
subl
xor
out
jnp
les
fidivs
movsl
data16
mov
arpl
outsb
outsb
rol
into
pop
inc
sub
push
ds
lea
and
lods
cmp
imul
les
inc
rorl
pop
fmul
cmpsb
dec
lret
mov
out
lret
je
ds
repnz
mov
mov
push
push
nopl
jmp
repz
push
loop
les
mov
or
dec
or
dec
push
pushf
jmp
pushf
lods
cwtl
out
iret
cmp
ficomps
mov
les
jo
jecxz
and
xchg
lock
in
pushf
pop
xchg
pop
cwtl
jge
je
push
sub
inc
mov
add
out
jns
xorl
clc
mov
pop
outsl
dec
loop
push
xor
lcall
adc
pop
test
sbbl
ja
mov
clc
jle
inc
test
jg
out
orl
popa
jle
pop
shlb
jl
sarl
ficompl
pop
mov
add
hlt
in
mov
cld
mov
scas
inc
pop
jb
xor
adc
jnp
xor
push
mov
jb
cmp
pop
inc
cli
fdivrl
inc
pop
mov
sub
dec
test
ret
movsl
mov
in
xor
fs
ljmp
mov
cmp
stc
push
shl
daa
push
rcrl
or
enter
xchg
insb
test
mov
or
push
scas
xchg
dec
adc
xor
popa
or
push
adc
mov
xchg
xlat
pop
sub
jae
pop
jnp
cmp
inc
sub
loopne
mov
mov
ljmp
or
or
in
sbb
hlt
xchg
cs
cmp
sti
scas
ds
enter
pushf
data16
mov
andl
jge
pop
into
mov
imul
ret
inc
sub
roll
cmp
mov
iret
pop
sub
dec
sti
inc
and
pop
dec
andl
and
ja
es
add
push
imul
sbb
pushf
in
mulb
mov
dec
dec
out
rorl
ficompl
mov
pushf
sbb
mov
sub
push
lea
test
cmp
test
rclb
add
insl
aam
movsl
pop
dec
inc
and
sbb
sbb
mov
mov
aas
das
je
jp
pop
iret
lahf
push
rorl
fldenv
lret
pop
mov
test
ljmp
mov
loope
int3
jnp
add
in
sub
icebp
repnz
mov
sar
aam
pop
mov
and
cmc
out
ficomps
sub
scas
lcall
and
push
sbb
xchg
test
shrl
enter
jle
adc
mov
sahf
pop
cltd
and
push
pop
fstpl
push
les
lock
mov
mov
push
imul
pop
xor
mov
add
std
andl
movsb
daa
sub
mov
fldcw
sbbl
inc
dec
movsl
push
lret
jge
sbb
ret
daa
out
in
adc
je
das
les
call
jne
cmp
shrb
outsl
popa
mov
cmovb
mov
inc
adc
mov
and
imul
cmp
cmp
dec
lahf
arpl
lods
nop
adc
add
add
mov
pop
and
roll
sbb
mov
jg
and
push
push
out
stc
jns
push
lods
seto
mov
in
cld
aas
pop
sbb
fdivs
mov
inc
lea
push
add
xor
and
sub
cli
mov
aam
sti
mov
cltd
testl
mov
les
xor
push
scas
pop
add
clc
inc
dec
sbb
movsb
jnp
push
ss
mov
imul
or
jno
cmpsb
imull
fadd
out
iret
push
inc
lock
inc
sarl
gs
and
bound
or
xchg
test
test
fisttpll
or
test
push
lock
mov
dec
xlat
test
xchg
cmp
add
xlat
sub
push
add
sbb
popf
faddl
mov
jecxz
lds
lods
loop
stc
jecxz
mov
lcall
lea
call
in
jnp
pop
mul
mov
pop
inc
aam
fs
outsl
mov
fiaddl
sub
jecxz
inc
repnz
or
jns
pop
xor
loope
negb
popa
push
les
repnz
xchg
mov
sbb
test
inc
shll
adc
add
inc
mov
xor
xchg
and
add
push
inc
ficoms
and
aas
cmpsb
lods
ljmp
mov
mov
dec
mov
and
cli
pop
pop
into
movsb
int3
pop
add
sbb
data16
jno
or
insl
hlt
and
loopne
add
add
lcall
mov
pop
jno
aad
push
fstps
cmp
cmp
jns
xchg
jb
sub
jmp
movsb
loope
test
mov
jb
xchg
insl
xor
pop
push
ret
or
cmpsl
mov
cmpsl
jb
out
mov
and
push
js
push
cmpsl
sub
stc
xchg
cmp
xchg
shll
jo
add
mov
or
dec
cwtl
pop
aaa
call
or
addr16
les
movsl
mov
je
fisubs
or
mov
js
mov
test
jnp
vcvttps2dq
jns
insb
shlb
dec
sub
mov
xchg
popa
std
into
fsubr
test
or
mov
ja
mov
xor
cld
aad
mov
add
push
in
or
in
flds
and
or
pop
pop
popa
bound
pop
mov
add
aaa
int3
push
push
or
jp
pushf
mov
mov
repz
leave
aas
jnp
or
out
movsl
xchg
std
pushl
and
lahf
pop
sti
push
dec
pushf
fucomip
loopne
jg
je
call
out
test
sub
inc
mov
scas
fdivrs
and
add
leave
adc
sub
jmp
imul
mov
sbb
lods
ss
iret
sbb
cmpsl
cld
addr16
xchg
fisttpll
jmp
fmulp
mov
push
mov
int
mov
subl
outsb
jp
roll
cmc
add
adc
xchg
sbb
hlt
sbb
out
nop
mov
fldenv
repz
or
dec
or
jbe
xor
pop
push
jp
nop
iret
sbb
fstl
jp
ret
xchg
arpl
or
mov
sbb
adcb
imul
or
stos
xchg
fmuls
out
ja
icebp
xor
icebp
les
jge
mov
xor
mov
in
lods
mov
adc
push
fimuls
fistpl
mov
jno
es
sub
mov
pop
mov
pop
int3
jnp
ret
cld
insb
add
push
xor
or
jno
mov
mov
jmp
aaa
push
test
mov
jmp
push
push
in
sub
and
orb
stos
sub
imul
iret
push
sub
mov
in
sarb
lock
jmp
sbb
or
out
pop
out
lods
hlt
fwait
push
jl
je
es
push
or
std
or
add
jg
mov
push
jbe
fsub
jge
cmp
gs
xor
and
inc
mov
adc
test
jnp
add
sbb
orl
loope
or
xor
lret
xor
and
sar
xor
mov
sbbb
movsl
testl
cli
shrb
rcll
pop
cmpsb
mov
mov
sub
inc
roll
pop
enter
add
adc
pop
cmc
sub
push
rcl
dec
insb
stos
pop
jmp
mov
add
je
mov
fdivs
and
or
sbbl
repnz
cli
lea
hlt
xlat
out
cwtl
test
outsl
pusha
mov
dec
xchg
and
outsb
inc
cmpsl
popa
data16
ss
dec
add
je
pop
jns
cmpsl
and
pop
jbe
cmp
clc
int3
adc
mov
outsl
cli
dec
inc
and
xchg
jae
jne
aaa
ret
orb
sub
pop
xchg
xchg
add
jecxz
fcmovnu
pop
push
sub
aas
push
inc
jg
sbb
lock
push
inc
adc
cmc
push
icebp
mov
add
inc
insl
sbb
mov
aam
mov
int3
ss
adc
mov
sbb
sbb
mov
dec
cmp
testb
movsl
sbb
pusha
jnp
jb
pop
inc
sub
mov
mov
not
repnz
jns
andb
lods
frstor
icebp
and
sbb
addl
push
mov
inc
aad
ds
mov
cltd
jne
dec
jle
xchg
aad
sbb
gs
out
nop
std
push
sub
cmp
push
daa
stc
push
add
addr16
pop
lock
mov
iret
mov
lods
and
inc
loopne
ret
stos
inc
cld
mov
pop
pop
imul
add
in
movsb
cld
sbb
pop
in
pop
lret
popa
mov
cwtl
adc
ficomps
imul
push
cld
sbb
leave
test
mov
xchg
insl
xchg
jbe
inc
mov
cli
cmpsl
popa
test
lea
cmp
sbb
push
adc
repz
add
and
cmc
sbb
mov
mov
lods
imul
bound
jb
test
dec
and
mov
pushf
jnp
mov
fucom
inc
sub
dec
scas
lds
add
add
jge
push
adc
addr16
sbb
bnd
lock
daa
aam
int
and
pop
daa
dec
lods
enter
sub
gs
int
das
xchg
jg
mov
pop
in
pop
sub
pop
inc
mov
jb
pop
sub
dec
adc
pop
adc
push
cmp
out
les
popf
jb
les
movsb
push
inc
sub
cltd
inc
insl
xor
movsb
or
addr16
addb
add
sub
std
rcrb
shl
jbe
cmp
or
jne
jg
hlt
stc
shrb
sub
filds
stos
es
outsl
mov
pop
js
inc
push
pop
mov
and
push
sahf
shrb
fistl
xor
outsb
adc
jg
xchg
cmp
rol
je
mov
push
stos
into
pop
push
je
call
push
cld
mov
mov
jg
icebp
xor
jmp
int
loopne
sub
ret
pop
or
out
sub
in
enter
mov
sub
pop
push
and
inc
inc
and
push
and
jmp
in
push
pop
and
imul
or
lahf
cmpsb
and
add
popf
sub
pop
xchg
mov
adcb
sub
dec
daa
notb
and
push
push
mov
jmp
mov
test
out
and
cmc
lods
pop
call
adc
hlt
lret
sub
pop
test
mov
imul
addb
fwait
mov
ret
xlat
decb
data16
and
lods
mov
mov
mov
pop
outsl
pop
jae
xchg
xor
shll
xchg
dec
movsl
cmp
pop
xor
outsl
imul
xchg
pushf
jge
cmp
lret
mov
dec
jne
ror
fbld
js
pop
pop
shll
in
outsl
jle
mov
sbb
cmpsb
xchg
jle
loope
pop
jo
data16
xrelease
leave
cmc
outsb
xchg
outsb
loope
xor
sub
mov
cmp
pusha
dec
mov
cli
pop
lods
cmp
mov
inc
inc
fidivrl
sub
xlat
rol
jae
push
xor
lds
jno
sbb
add
mull
xlat
add
loopne
mov
fadds
lret
aaa
repnz
or
icebp
sub
ja
icebp
push
cmc
mov
jnp
pop
in
xchg
fstps
mov
add
or
popa
scas
leave
popf
or
xor
sbb
xchg
inc
and
aaa
xchg
loop
mov
sub
dec
jne
inc
lcall
xor
inc
mov
scas
pushf
pop
jo
scas
iret
insl
nop
ljmp
iret
mov
pop
gs
iret
cltd
jg
add
mov
add
call
fldcw
xchg
mov
dec
push
ds
insl
fdivs
jnp
ss
sub
xchg
mov
aas
sahf
out
mov
add
pop
pop
or
jp
js
sub
repz
xchg
pop
dec
and
push
mov
mov
les
sbb
repz
stc
out
push
add
data16
jo
jne
imul
dec
and
dec
push
rcl
mov
mov
outsl
out
ret
in
insl
notb
aaa
inc
push
adc
sub
and
fisubrl
fdivrl
pop
and
out
dec
shl
jns
inc
aam
idivb
out
jl
mov
sub
xchg
push
iret
repz
cli
roll
add
xor
mov
lcall
test
cli
mov
addr16
les
xchg
inc
mov
mov
and
pusha
sti
into
xchg
aas
repz
out
out
add
loope
mov
call
pop
mov
pop
fdiv
sub
mov
ss
pop
fwait
outsl
mov
ja
push
fiadds
fcomip
dec
jbe
add
sub
add
sub
xlat
hlt
repnz
cli
fistpll
ret
and
test
fisubl
cwtl
pop
ljmp
mov
test
fiaddl
sbb
sarl
outsl
and
inc
ljmp
xor
lods
pop
cli
jge
and
cmpsl
push
std
cmp
aad
inc
cmp
sub
loop
sbb
cmp
push
js
and
pusha
sub
mov
aam
jmp
out
test
loop
xchg
dec
push
cli
mov
adc
rol
sbb
xchg
pop
data16
sub
dec
test
das
shl
xchg
adc
mov
sub
add
or
sbb
mov
shll
jne
xchg
inc
mov
in
cmc
push
insb
adc
dec
arpl
xor
ja
mov
lods
or
mov
movsb
xchg
das
das
xchg
push
xor
adc
jae
lds
scas
push
xchg
aas
push
data16
lret
lods
sbb
push
dec
inc
xor
mov
or
mov
push
ljmp
lock
xchg
jg
pop
ret
mov
adc
adc
mov
fwait
xchg
sub
push
sahf
outsb
outsl
jmpw
lcall
or
popa
scas
leave
cmpsl
hlt
clc
mov
add
cmp
cmp
jmp
popa
xor
mov
addr16
stc
daa
mov
mov
out
and
loopne
xchg
mov
adc
xchg
add
lcall
lret
jno
sub
push
jbe
cwtl
in
pushf
push
lahf
mov
addr16
mov
sahf
cmp
mov
pop
inc
push
mov
xchg
or
aas
push
or
jae
clc
les
fbld
inc
insb
inc
or
jmp
pop
clc
dec
sahf
enter
scas
pop
loop
clc
and
filds
addr16
fyl2xp1
cmp
mov
pop
jae
or
in
adc
out
sub
or
daa
push
sbb
jle
add
pop
inc
cmp
out
and
mov
mov
out
fistl
jg
sbb
inc
lods
ret
cmp
xchg
dec
xor
out
and
loope
mov
sbb
movsl
adc
das
movsl
mov
movsb
cltd
push
test
jecxz
pop
dec
jle
fchs
xor
adc
ret
test
pop
stos
mov
xchg
jbe
pusha
daa
movsl
sub
xchg
pusha
stos
pop
mov
push
fs
lds
add
pop
jp
pushf
push
inc
ficomps
sbb
stos
insb
gs
ljmp
add
movsb
inc
xlat
cmp
iret
aas
inc
adc
dec
psubb
jne
mov
mov
and
test
cltd
aad
lds
push
mov
or
jno
imul
subb
fdiv
fnsave
jmp
mov
xchg
idivl
pusha
shll
aam
aam
into
fldl
shlb
jp
pop
das
shlb
pushf
stos
and
cmp
outsb
mov
imul
movsl
in
mov
lret
dec
inc
pop
adc
or
and
sarl
push
fs
mov
cmp
or
inc
std
xor
xlat
adc
xor
sub
out
mov
out
pop
imul
roll
jecxz
cli
or
jg
clc
addr16
pop
mov
insl
push
test
sub
jl
inc
mov
pop
fiadds
les
mov
mov
sahf
insl
les
mov
pushf
pop
xor
nop
adc
sbb
mov
push
fwait
mov
dec
dec
in
pop
cmp
jne
jl
push
mov
iret
cmp
out
ja
adc
inc
inc
ja
bswap
int3
fmulp
nop
das
rep
aaa
push
inc
xchg
sub
insl
xor
in
mov
sub
icebp
das
sbb
popa
js
mov
mov
jp
cmp
nop
dec
fisttpll
insb
sbb
jb
hlt
movsb
fmull
data16
and
lods
fwait
push
lds
clc
inc
push
push
add
push
jne
stc
mov
adc
test
sub
jb
xchg
sahf
lods
pop
mov
popf
sbb
push
mov
inc
nop
into
adc
es
repnz
push
dec
or
mov
mov
fwait
sub
dec
inc
dec
addr16
push
lods
dec
lcall
lods
mov
shl
leave
sti
dec
pop
push
inc
aam
dec
or
enter
insb
push
adc
dec
dec
mov
mov
add
cmpsl
or
mov
and
dec
adc
adc
dec
fucom
data16
movsb
xchg
dec
mov
sti
dec
mov
movaps
out
pusha
xlat
cltd
mov
ret
sub
pop
adc
add
xor
out
outsl
into
mov
inc
cmc
into
cwtl
xor
add
push
mov
dec
mov
inc
xlat
xchg
repnz
xor
je
push
lods
cmp
jp
lret
ja
or
mov
mov
loopne
fnstcw
xor
lods
cmp
jmp
inc
sub
inc
popf
lods
jl
iret
shl
rorb
out
mov
and
sub
imul
daa
pop
mov
jmp
and
jle
push
lods
ja
movsb
jbe
adc
inc
fmuls
shl
sbb
lds
cmpsb
jb
shlb
int3
jae
lods
xchg
push
out
divb
movb
adc
jecxz
repz
ret
push
shll
jbe
inc
adcl
arpl
push
out
divb
movb
adc
jecxz
repz
ret
push
shll
jbe
inc
adcl
arpl
push
out
divb
movb
adc
jecxz
repz
push
shlb
jb
inc
andb
arpl
push
out
divb
inc
add
leave
pop
lods
ret
push
movsb
adc
decb
test
inc
test
pusha
jmp
pushf
and
outsb
xor
loopne
xchg
jne
inc
mov
mov
test
pusha
in
cmc
add
xor
inc
jne
xor
loopne
cmc
adc
jg
xor
pusha
cmc
adc
and
xchg
je
inc
sub
xor
xlat
in
xchg
xor
and
add
shll
and
or
xor
add
fs
sbb
out
mov
enter
cmc
loopne
in
les
fdiv
cmc
inc
movsl
addb
test
mov
in
jecxz
ror
sar
jmp
lcall
insb
loopne
int
clc
shlb
adc
add
cmp
shlb
data16
adc
xorb
lds
mov
sbb
popf
and
das
gs
movlhps
xchg
ret
jne
adc
or
push
inc
mov
int
add
adc
rolb
mov
pop
xchg
push
mov
test
pusha
in
mov
lds
insl
and
shlb
loopne
nop
imul
push
ret
cmp
xor
and
push
mov
inc
mov
je
or
sbb
xor
adc
movsl
cmp
sub
cmp
mov
inc
test
mov
mov
xchg
jns
push
cmc
adc
xor
adc
xlat
adc
sbb
xor
and
lock
addb
mov
test
pusha
in
cmc
add
xor
and
lock
addb
mov
sub
in
scas
int3
aam
pop
xlat
mov
insl
mov
dec
icebp
mov
mov
adcl
jne
insl
add
cmp
jmp
sub
scas
in
test
adc
jne
inc
movsb
xchg
dec
adc
xor
psubq
daa
xor
xchg
aas
test
out
dec
icebp
movsl
jae
ret
in
arpl
nop
es
mov
icebp
mov
xchg
dec
popl
xor
mov
hlt
call
dec
mov
or
add
insl
and
sbb
stos
int3
addr16
aaa
subb
lret
into
int3
jnp
jmp
aam
je
test
fwait
stos
xchg
fmull
jne
int3
fisubl
sub
jmp
fidivrl
push
out
jns
in
cmp
ss
daa
jp
nop
adc
das
cltd
iret
or
sbb
push
push
dec
dec
push
jmp
xchg
add
cmp
cmp
xlat
jnp
test
std
fsub
aam
mov
xchg
cmpsl
js
cmp
dec
fstps
sbb
adc
and
mov
push
mov
iret
cmpsl
xchg
xchg
icebp
in
mov
das
movsb
dec
inc
jne
pop
or
out
out
inc
or
fucomp
cmp
adc
jne,pt
jb
jp
lcall
stos
xchg
cmpl
cs
sub
xlat
lods
push
xchg
nop
es
aam
jge
int3
inc
nop
cmp
cmpsl
rcr
outsl
add
aam
hlt
ds
and
ja
sbb
clc
adc
inc
cmp
out
loop
adc
mov
xchg
mov
jecxz
mov
mov
jno
rcrl
adc
pushf
fists
popa
popf
loopne
xor
sub
hlt
ret
mov
push
lds
xlat
ja
jb
cmp
imul
mov
lods
sbb
sbb
add
mov
sbb
mov
mov
ljmp
cmp
rol
add
pop
mov
sti
sub
call
xchg
int3
test
push
add
xchg
jge
cld
cmp
aam
or
add
mov
imul
test
and
ret
sub
hlt
jbe
rcr
inc
insb
jge
mov
in
dec
leave
xor
add
sbb
movsb
repnz
cmp
into
fsubl
ljmp
pusha
push
cvtpi2ps
in
adc
rorb
cmp
inc
pushf
sub
lds
mov
pop
in
inc
test
sbb
fistps
or
in
in
cmp
int3
sbb
push
sbb
data16
add
int
dec
xchg
loop
das
sbb
mov
in
and
mov
pop
push
mov
jcxz
scas
and
or
push
scas
outsl
aad
shlb
stos
jnp
stos
mov
mov
sbb
xchg
push
mov
jge
sub
daa
js
mov
jne
jno
jg
cwtl
lahf
push
add
outsl
cld
sub
icebp
inc
mov
jecxz
popf
ja
ja
dec
xlat
push
test
aas
sub
sbb
cltd
sub
or
nop
sbb
dec
test
and
push
dec
mov
dec
add
xchg
out
or
lahf
fcomip
daa
xchg
mov
pop
mov
in
xor
jnp
mov
and
mov
pop
add
aad
sub
insb
sbb
fldt
mov
xor
js
xchg
repnz
das
popf
or
and
data16
lods
aas
arpl
pop
loope
pop
push
pusha
push
fdivl
lods
fnstenv
loopne
pop
negl
and
adc
aad
sub
xlat
add
movsb
inc
cs
mov
add
lret
cmp
sbb
jmp
addr16
aaa
bound
push
adc
pop
js
imul
out
xchg
lret
sbb
push
in
jae
cmp
push
test
dec
incb
inc
xor
adc
ret
push
jae
js
xor
dec
clc
loop
and
sub
lret
js
in
out
add
arpl
in
jl
lahf
cmp
dec
jl
jae
add
dec
pop
clc
arpl
push
xor
call
lahf
dec
ljmp
fmull
lods
xchg
push
sbb
cmp
pop
out
cmpsl
push
clc
cmp
mov
xor
xor
sti
jecxz
lcall
and
insb
aam
and
lahf
xlat
aas
in
negb
cmp
add
adc
outsb
and
dec
xchg
mov
jge
sar
out
cmp
aaa
pop
mov
xlat
push
sub
sub
adc
leave
jge
xchg
clc
sub
imulb
mov
mov
jbe
xor
mov
add
sbb
pusha
fisttpl
push
int
cmp
ffree
mov
push
rorl
mov
mov
popa
xchg
cmpb
jmp
repnz
insb
sub
inc
lods
cmp
mov
xor
jae
add
jg
push
push
pushf
cmp
repz
std
mov
negl
or
lret
mov
xor
das
inc
or
push
mov
mov
in
stos
inc
lods
cli
in
mov
ret
mov
hlt
movsb
lahf
in
adc
inc
leave
lds
pop
dec
in
add
std
adcl
jg
inc
adc
push
mov
pop
in
cmpsw
loop
inc
test
jae
mov
mov
adc
add
sub
push
jg
repnz
stos
sub
imul
dec
xchg
into
ljmp
dec
fidivrs
jmp
inc
aaa
jo
lret
or
jmp
or
sub
mov
xor
and
mov
push
and
xor
xor
push
add
in
xor
inc
adc
mov
inc
jne
mov
pop
iret
popf
in
repnz
test
jle
pop
xor
stos
addr16
or
xchg
repnz
scas
ret
fs
scas
addl
insl
push
sbb
cltd
repz
pusha
test
xor
lds
jbe
ret
sbb
ljmp
fidivl
movsb
in
mov
mov
cmpsb
and
loope
fdivrl
sub
inc
xor
cli
mov
cwtl
rclb
push
call
out
mov
sub
mov
cmp
jle
mov
jae
mov
sbb
andl
adcl
sub
stos
jb
out
mov
jl
cmp
test
cli
pop
or
xchg
js
mov
out
push
xchg
std
mov
sub
cmp
add
cmc
lds
addr16
mov
shl
mov
xchg
pop
jnp
push
mov
lock
dec
out
dec
sub
icebp
inc
bound
jl
mov
dec
loop
add
iret
adc
out
pop
shll
les
mov
mov
adc
hlt
jno
ljmp
cmp
mov
shl
out
stc
in
popa
scas
jge
inc
mov
scas
jp
ret
aam
sub
pop
push
scas
sub
stos
push
and
and
push
sbbl
xor
cmpsb
imul
in
pop
incb
fidivl
adc
lret
mov
je
dec
test
add
sbb
es
dec
or
add
push
call
cmpsb
aas
stos
data16
push
inc
xor
shlb
sub
add
push
repz
scas
mov
mov
push
adc
rorb
scas
mov
dec
jg
push
pop
push
mov
fadd
push
pop
add
cmp
ret
jg
into
lahf
and
incb
mov
gs
sub
jg
mov
orl
loope
leave
divl
loopne
divl
lret
cmp
mov
jle
dec
xchg
xchg
xchg
or
pop
movsb
or
movsl
lret
or
fdivrs
jg
fcmovnu
or
daa
fsubrp
push
cwtl
mov
or
mov
mov
int3
mov
push
sahf
insb
scas
cltd
rorb
arpl
mov
iret
mov
mov
rorl
or
cltd
addl
repnz
push
jb
idivl
push
pop
xorl
jp
push
fs
mov
xchg
pushf
loop
popa
movsl
or
mov
push
icebp
dec
xor
mov
mov
fisubrl
jo
roll
popa
cld
sub
mov
iret
neg
jle
xlat
mov
push
pop
push
int
in
lods
in
lcall
cmpsb
adc
push
or
outsb
jp
jno
xchg
jle
in
dec
rcll
test
sbb
jmp
clc
arpl
fsubrl
aaa
inc
ss
popa
sbb
pop
mov
movsl
sti
or
loope,pt
test
xchg
cmp
dec
inc
das
pusha
or
or
pop
mov
int3
out
dec
test
fwait
jl
cli
cmp
mov
mov
sbb
dec
rcrb
lret
fsubrp
mov
add
cmp
pusha
in
int
pop
outsb
jecxz
test
insl
in
fistpl
les
ss
adc
xchg
testb
outsb
mov
xor
or
jb
cltd
sarb
cltd
repz
cltd
ret
outsb
cmp
mov
lea
mov
xchg
push
rcl
and
sahf
mov
in
mov
cmpsl
cmp
ja
sti
adc
mov
ret
and
sub
lods
mov
or
mov
sbb
test
fisttpl
popf
and
aam
cmp
adc
pop
arpl
pop
into
push
cmp
les
aad
xor
mov
mov
and
and
addb
push
xchg
data16
gs
jp
cltd
out
sub
inc
push
jae
das
mov
fs
dec
adc
int
sub
hlt
sub
insl
xor
jnp
add
push
scas
imul
and
dec
sub
jge
adc
jge
dec
and
cmp
inc
ds
jmp
cwtl
idivb
add
test
popa
cmp
inc
jge
sub
popf
test
mov
push
push
and
bound
xor
inc
add
push
movsl
inc
mov
out
add
or
adc
mov
xchg
popa
arpl
adc
sbb
dec
sbb
mov
cmp
movsb
dec
repnz
icebp
out
fwait
enter
ja
cli
js
insl
and
sbb
pop
push
dec
jp
loop
adc
sub
aas
jo
xchg
subl
ja
cld
push
ret
es
mov
pop
xor
mov
and
sub
shlb
push
xchg
ret
fwait
cmp
pop
add
pop
inc
inc
jmp
adc
fs
lock
movsl
in
repz
pop
andb
or
mov
scas
inc
mov
push
mov
push
xchg
ficomps
dec
out
out
cmpl
sub
outsb
leave
mov
cmc
loope
xchg
pop
xor
mov
iret
pop
inc
mov
cmp
std
outsl
das
loope
fisubs
gs
aam
mov
iret
movsb
xchg
or
clc
leave
or
push
sahf
ficomps
inc
dec
inc
cld
std
movsl
lock
or
cmp
inc
jg
mov
addb
mov
jnp
jb
sub
push
mov
cmp
pop
pop
ds
cmp
push
dec
pop
mov
xor
sub
aas
test
ja
int3
imul
xor
mov
pop
xor
inc
push
add
shll
testb
mov
inc
dec
lock
xchg
cmp
not
lret
cli
movsb
xchg
shlb
xchg
mov
cmpsb
xchg
loopne
cmpsl
jbe
nop
xor
and
jae
fstps
xchg
mov
pop
mov
pop
stos
jmp
sti
icebp
jae
pop
push
pop
mov
and
int3
mov
cmp
lret
shlb
push
pop
mov
cmp
fimuls
dec
inc
out
imul
scas
icebp
sub
inc
dec
outsb
jno
scas
shlb
cmpsl
pop
movsb
or
sahf
shlb
inc
pop
out
push
add
inc
jns
andb
popf
mov
sub
leave
adc
push
cmp
test
fldenv
imul
jnp
pop
int
jbe
sar
loope
stos
loopne
loope
lea
daa
mov
mov
lods
testl
mov
push
in
rcll
cwtl
fadd
mov
inc
lds
sbb
out
stos
mov
pextrw
pop
fldenv
sub
sub
cmp
ret
sbb
mov
fwait
pop
out
xchg
movl
test
sti
sti
push
xchg
xor
clc
xchg
sub
push
mov
pop
cs
lock
pop
aam
inc
add
pop
rcll
leave
imul
scas
stos
inc
or
pop
xor
pop
in
and
push
cmp
cld
rorl
imul
cmp
push
xlat
xchg
int
sbb
inc
stc
sub
outsl
pop
push
push
enter
cmp
pop
test
mov
cmp
and
add
sti
into
inc
pop
inc
int3
test
aas
shll
lods
in
in
lahf
das
sbb
out
cmpsb
mov
mov
or
into
or
mov
int
adc
mov
stos
test
pop
pop
sbb
enter
lcall
clc
sbb
pusha
nop
loope
jmp
xor
push
mov
out
and
or
cmp
pop
insb
jl
lahf
mov
rol
mov
mov
jo
into
lret
mov
jmp
out
in
jo
xchg
hlt
xchg
dec
mov
addr16
jmp
mov
mov
jbe
mov
dec
jns
movsl
mov
jne
into
dec
xchg
stos
jge
lods
sbb
mov
pop
sbb
out
dec
xor
int3
and
sbb
and
jb
push
dec
ss
mov
add
jp
ret
dec
xchg
adc
push
pop
mov
jno
adc
dec
in
and
jle
inc
inc
inc
and
mov
das
lds
mov
ljmp
shll
push
pop
adc
sub
cmp
or
sbb
and
dec
lods
aad
mov
cli
mov
adc
inc
jg
out
jecxz
and
mov
jb
mov
xor
fstpl
and
sub
add
mov
xchg
mov
repnz
jbe
in
arpl
sti
or
pop
in
xchg
adc
shlb
ljmp
and
mov
fsub
loope
push
divb
dec
push
ss
jecxz
sub
dec
popa
lcall
sarb
pop
pop
pop
add
dec
into
jbe
fnsetpm(287
insb
sbb
mov
xchg
sbb
pushfw
mov
jnp
pop
push
push
dec
out
jp
fistl
jl
inc
scas
jb
lret
test
dec
adc
jmp
stos
xor
inc
sbb
cmp
shl
iret
xchg
icebp
push
in
das
fwait
mov
outsl
xchg
ja
or
and
fs
imul
mov
push
fists
mov
mov
ja
sub
cmp
mov
mov
jg
inc
sbb
cwtl
cltd
or
cmp
je
jae
push
and
icebp
jnp
out
in
push
lret
xchg
fsts
aam
jbe
test
sub
dec
or
push
pusha
add
dec
cmp
insb
sub
rorb
adc
out
lahf
repz
inc
inc
inc
or
push
add
fs
xchg
inc
or
popa
bound
lret
scas
adc
ret
sub
fcmovbe
test
rcr
stos
push
push
and
aas
pusha
in
cmp
push
inc
mov
out
add
cmp
pop
int3
rcll
xchg
jno
sbb
push
cwtl
mov
and
icebp
fstl
mov
sbbb
push
inc
adc
popf
leave
in
or
xchg
dec
push
push
pop
ds
cs
scas
mov
jne
jecxz
add
mov
adc
jae
or
push
fsubrs
pop
push
loopne
nop
mov
aam
pop
cmp
ret
lods
add
pushf
sbb
mov
das
pop
inc
roll
push
mov
jb
mov
mov
lods
leave
jo
sbb
outsb
xchg
mov
ja
xor
std
lret
aam
push
aas
add
add
fcompl
cltd
std
mov
xor
add
test
push
xor
and
movsl
mov
rcll
sbb
or
imul
xchg
mov
cmp
push
inc
fidivrl
rcrb
hlt
and
pop
sbbl
xor
jmp
testl
jecxz
mov
or
xchg
xor
jg
cwtl
scas
jge
dec
push
clc
mov
mov
xchg
jp
aas
cwtl
cmpsb
int
mov
add
push
xchg
push
bound
test
or
jbe
std
insb
lret
xchg
jns
cmp
push
add
orl
repnz
sub
xchg
push
mov
mov
mov
aaa
or
pop
mov
push
out
icebp
xor
jns
adc
pop
push
push
lret
cltd
cmp
and
mov
scas
les
push
shl
mov
nop
arpl
fs
bound
hlt
nop
or
hlt
fcoml
sub
mov
fcmovnbe
dec
push
adcl
int
adc
or
into
imul
xchg
mov
nop
repnz
outsb
imul
and
adc
xor
mov
imul
repnz
lcall
insl
or
push
adc
mov
dec
xor
xchg
mov
aad
xchg
mov
push
sbb
or
xor
mov
shlb
cmpsb
test
xchg
push
inc
aaa
sbb
adc
add
cmpsb
dec
lahf
iret
loop
jae
mov
outsl
jecxz
loop
push
inc
loopne
data16
jmp
sbb
inc
jmp
fdivr
dec
and
adc
push
lahf
jns
mov
sbb
inc
mov
mov
pop
mov
in
das
fidivs
push
aaa
test
add
pushf
cmp
ljmp
ja
jbe
sub
mov
aad
out
sub
dec
fstpl
mov
sbb
xlat
cli
add
dec
xchg
or
pusha
in
and
sub
mov
push
lcall
add
dec
jb
dec
movsb
xchg
rcl
fwait
xchg
push
jae
cltd
stos
lcall
jle
sbb
loope
test
jge
pop
push
mov
mov
or
enter
adc
test
scas
test
push
fcmovne
lret
arpl
dec
mov
inc
cmp
mov
icebp
sbb
lea
pushf
adc
or
cs
mov
insl
adc
cli
lcall
ss
push
sub
adc
mov
pop
xchg
lods
repz
push
movl
sahf
mov
hlt
and
pop
js
out
inc
pop
test
sbb
add
shl
lea
push
cmpb
mov
xor
sbb
mov
fisubrs
jecxz
xor
adc
lock
mov
fbstp
testl
sub
mov
mov
and
mov
mov
mov
sbb
fisttps
push
adc
test
les
pusha
xor
mov
adc
out
in
rcrb
in
hlt
add
push
aaa
xchg
addl
cld
xlat
xor
arpl
ret
loope
dec
jne
sub
mov
cli
mov
cwtl
adc
clc
outsl
cmp
sbb
mov
add
xor
sbb
dec
into
aad
jns
inc
mov
jbe
adc
mov
addr16
dec
xor
jle
push
adc
jbe
rcl
cwtl
unpckhps
jb
lcall
rorb
popf
push
lods
les
pop
pop
test
dec
cmp
dec
jge
in
into
mov
mov
in
dec
gs
inc
dec
push
loope
aaa
fwait
jae
fidivs
ljmp
test
pushf
xchg
rclb
fnstsw
out
inc
fistpll
sbb
ljmp
mov
in
mov
aas
add
mov
and
pop
cmp
xchg
mov
aas
pushl
mov
mov
xchg
sub
leave
inc
cwtl
sbb
test
fnstcw
ljmp
shrb
push
out
jnp
fstpt
shll
mov
xlat
xor
lock
and
xor
test
push
stos
inc
pop
stos
cmpsb
nop
xchg
dec
and
cs
xlat
pop
mov
xlat
fldcw
mov
ret
pop
sub
mov
push
dec
or
pop
adc
push
pop
rcll
insb
int
pusha
mov
pop
cmp
xchg
je
push
jbe
movups
mov
ss
adc
ret
sbb
ja
imul
mov
insb
mov
adc
xchg
push
cld
lock
mov
adc
push
das
loopne
insl
inc
jne
enter
mov
xchg
fidivs
jg
sbb
sbb
cmp
and
lea
jo
pusha
in
cmc
add
xor
and
lock
addb
mov
test
pusha
in
cmc
add
xor
and
lock
addb
mov
xchg
jo
pusha
in
icebp
add
xor
and
shlb
loopne
nop
insb
addb
mov
or
adc
add
xor
and
lock
jg
dec
stos
pop
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
jmp
pop
jb
dec
cld
ds
push
push
jnp
dec
ficomps
sub
sbb
leave
pop
ds
jbe
jns
dec
ficomps
sub
cmp
jmp
pop
ds
push
imul
cmp
sub
dec
stc
dec
lock
popf
or
mov
cmpsb
push
out
sub
adc
inc
pop
pop
mov
sti
mov
loope
pop
roll
add
test
push
jno
aad
hlt
adc
mov
dec
fists
jle
arpl
imul
test
arpl
fcompl
mov
sbb
jmp
jbe
sbb
popf
inc
das
shlb
cltd
add
adc
mov
xchg
mov
push
and
push
mov
cmpsl
jne
adc
push
and
lret
mov
jo
sti
add
repz
es
cmpb
out
push
mov
out
cmp
mov
mov
sbb
leave
pop
ds
push
imul
pop
into
sub
sbb
mov
das
pop
lahf
dec
int3
pop
inc
out
sbb
out
cmp
js
insb
out
rcrb
cwtl
dec
int3
push
repnz
int3
ja
push
mov
xchg
xor
pop
stos
pop
scas
pusha
enter
cmp
es
sub
sub
adc
push
imul
pop
into
sub
sbb
leave
pop
ds
push
imul
pop
into
sub
sbb
push
mov
mov
mov
xor
dec
sub
pusha
xchg
or
inc
cmp
sarl
nop
push
clc
inc
xchg
addb
and
cwtl
and
jmp
xchg
pop
cmc
jnp
sbb
lcall
cmp
outsl
push
cmp
xchg
push
mov
jmp
lea
inc
sti
cltd
sub
gs
ret
pop
gs
cmpsl
shrl
jae
int3
dec
mov
adc
adc
in
adc
adc
enter
push
in
jecxz
push
je
fldt
aas
pop
pop
jnp
incl
clc
lock
jne
and
mov
in
inc
movsl
aas
or
cmc
push
mov
xlat
movsb
nop
xor
push
sti
push
inc
in
push
push
jmp
std
push
arpl
dec
test
xchg
pop
lock
sub
and
xchg
mov
dec
insl
nop
inc
loop
test
mov
into
push
pushf
das
jge
lock
xchg
inc
xchg
mov
inc
mov
ret
mov
xor
insl
pop
loop
std
testl
sbb
ds
cld
shrb
pop
popf
mov
inc
push
scas
and
mov
adcl
push
pop
xchg
sub
cmp
loope
fcmove
dec
cwtl
movd
pop
xchg
add
mov
outsl
sub
iret
push
in
popl
lods
pop
sub
jle
mov
lret
scas
sub
pop
repz
push
nop
sbb
jg
push
mov
or
push
xor
fnstsw
mov
std
or
mov
sahf
repnz
and
idivb
stos
mov
rorb
ret
mov
or
inc
outsb
adcb
jne
dec
adc
mov
stos
xor
mov
in
cli
jp
mov
sbb
pop
aaa
jg
lahf
cmp
lods
insl
movsb
repz
mov
sub
jbe
lret
sarl
or
cmp
hlt
jmp
and
cmp
sub
out
xor
push
mov
adc
cs
pop
jp
pop
jbe
mov
jg
mov
xlat
pop
adc
ret
cmc
mov
adc
daa
stos
cwtl
lock
mov
push
cmp
dec
xchg
mov
push
dec
jno
and
scas
push
jg
xchg
jmp
adc
adc
stos
pop
push
jo
inc
scas
push
aam
sub
pop
mov
cmpsb
sti
push
mov
repz
adc
and
pop
inc
cli
repnz
repz
push
push
out
dec
lret
daa
or
cmp
fdivs
sbb
or
test
cmp
mov
movsl
dec
into
jp
xchg
test
sbb
adc
ds
xchg
js
nop
popa
stos
xchg
outsb
jecxz
inc
test
mov
mov
mov
test
push
nop
cmpsl
jno
and
adc
iret
stos
pushf
push
lods
jne
pop
insb
es
inc
cmp
addr16
shr
mov
cmp
cltd
fbld
sbb
or
jnp
rcrl
movsl
cmp
push
aas
out
and
mov
or
mov
cmp
vaddps
push
sub
dec
je
into
cmp
jb
sbb
pop
pusha
stos
aam
mov
jbe
mov
inc
push
sbb
jmp
out
rcl
clc
or
or
call
adc
mov
ret
mov
dec
pop
cmpsb
pusha
mov
clc
cmp
jmp
push
or
popa
arpl
add
and
hlt
jb
jmp
push
cld
sub
dec
lods
add
aad
inc
imul
cmp
jo
stos
push
enter
inc
movsb
das
ret
and
fisubrl
and
not
decb
cltd
pushf
jae
out
pusha
mov
fsts
adc
das
das
popf
cmpsl
xchg
imul
imul
jo
pop
test
or
aam
push
ret
bound
cmpsb
pusha
aas
mov
addb
ret
mov
nop
mov
adc
jnp
and
shll
mov
pop
bound
movsl
push
pusha
data16
in
int3
imul
das
cmp
test
inc
adc
xor
or
xchg
aad
fdivs
addr16
inc
and
pop
aad
inc
mov
dec
xor
or
cmp
in
pop
inc
std
lahf
add
jge
inc
in
insl
cltd
sti
loopne
and
int3
aas
xor
lods
and
pop
mov
rolb
and
dec
negl
loopne
imul
cld
test
lret
xchg
xor
pop
sub
lret
fistpl
jp
cwtl
dec
fsubrs
shrb
xchg
adc
mov
xor
fwait
sub
aaa
or
bound
push
cmp
daa
cs
cmp
jg
shl
mov
mov
arpl
nop
lret
pop
push
outsb
cs
bnd
xor
loop
add
popf
out
mov
out
adc
adc
push
nop
sbb
shlb
push
xor
mov
jmp
mov
andb
gs
or
dec
jmp
lret
jmp
sbb
jle
loope
stos
adc
add
daa
mov
pop
ret
mov
push
push
jecxz
imul
popf
ss
outsb
out
mov
dec
pop
push
jb
pusha
dec
pop
push
test
cmc
andl
add
dec
aam
data16
cli
mov
mov
cmp
test
sub
popf
push
mov
aad
dec
loop
pop
out
add
cmp
repz
mov
pusha
dec
iret
arpl
out
adc
fsub
stos
jno
adc
jne
mov
imul
pop
das
sub
ljmp
jl
aam
cmp
das
sbbb
rolb
push
insb
jl
nop
sahf
pushf
xchg
jae
push
xor
jo
cmpsl
dec
movsb
dec
shrb
adc
adc
cmp
adc
cmc
clc
addr16
dec
jg
xchg
adc
xchg
hlt
push
ljmp
cwtl
movsl
sbb
rol
aam
xchg
mov
mov
push
int
notrack
jns
je
jno
mov
test
mov
popa
sub
xchg
add
or
ja
or
mov
lea
adc
push
or
and
xchg
sub
and
ret
into
pop
mov
pop
pop
addr16
cwtl
stos
bound
inc
mov
sbb
das
mov
shrd
jle
push
movsl
mov
insl
rcll
repnz
xchg
std
shll
add
add
scas
outsl
imul
mull
cmp
jmp
add
data16
repz
pop
inc
mov
inc
sub
xor
adc
and
cmc
jnp
or
ds
xchg
inc
and
mov
lock
insb
jl
ss
xchg
jne
sbb
call
sbb
xchg
scas
imul
call
xor
inc
push
jbe
pop
add
fwait
jge
or
and
push
cld
xor
iret
adc
push
fwait
es
hlt
mov
mov
cmc
orb
push
pop
sahf
pushf
push
push
loopne
dec
mov
xchg
xor
pop
dec
cwtl
int
jbe
pop
jbe
outsb
lea
out
aas
in
push
inc
fidivs
cmp
dec
js
mov
add
inc
adc
mov
pop
push
add
mov
inc
repnz
xor
mov
cmp
scas
stos
or
cmp
dec
sub
xchg
mov
ss
or
stc
add
scas
pop
std
mov
into
pop
mov
popa
movsb
jb
lahf
mov
adc
dec
dec
and
imul
or
and
bound
test
jg
insl
jge
sub
cs
pop
test
adc
popa
pop
movsl
imul
dec
inc
push
push
mov
push
fistl
xor
insl
ret
push
les
ss
cmp
sub
int3
cmp
fisubl
lret
pop
shl
pop
xor
addr16
mov
xor
or
and
sbb
jb
inc
mov
inc
jle
or
rcll
dec
mov
aaa
mov
es
gs
sti
adc
das
pop
jge
les
push
enter
mov
ret
mov
mov
mov
pop
insb
or
xchg
mov
bound
jns
out
loop
lret
out
jne
push
mov
and
lods
and
daa
push
rorl
xor
mov
jle
mov
bound
fs
cmp
int
aad
clc
ficompl
shrl
fisttpll
inc
call
sbb
sub
jmp
pushf
lret
pop
mov
sbb
cmp
mov
icebp
scas
arpl
xchg
movsl
add
mov
notb
jmp
jecxz
fldt
lcall
cmp
rorb
adc
shll
push
repz
daa
arpl
adc
call
repz
xor
inc
pop
dec
mov
aaa
js
mov
mov
cwtl
pushl
jp
jnp
icebp
mov
xchg
mov
add
ret
mov
pushf
adc
mov
sbb
cmp
jb
and
xchg
cmpsb
je
in
push
jmp
les
out
jecxz
insb
call
inc
push
out
scas
mov
push
inc
mov
in
dec
in
in
orl
fldenv
scas
cmp
movsl
aam
fidivrl
jp
scas
mov
sub
int
ja
bnd
push
test
mov
xor
je
mov
sub
repnz
dec
loopne
mov
cmpb
or
addr16
xchg
dec
test
sbb
push
out
xchg
pop
cld
mov
inc
negl
popf
ficoms
stc
xchg
xchg
out
bound
sbb
inc
sbb
or
fistpl
or
pushf
negb
push
imul
in
lcall
rclb
js
xchg
push
stos
ret
mov
int3
je
add
sub
cmpsl
xor
mov
add
or
aad
movb
imul
jo
jbe
jl
arpl
fidivs
mov
int
xor
lcall
das
add
ficoms
push
cli
cmp
cmp
jns
cld
outsb
in
xor
inc
fldl
sti
or
xor
inc
loop
dec
xor
jne
cs
jnp
pop
fistps
fidivs
pop
and
jmp
mov
enter
cmpsb
test
ss
push
fwait
add
dec
lcall
movsb
mov
jp
mov
cmp
cmpsb
repz
vorps
in
dec
dec
ret
mov
ljmp
mov
pop
add
jmp
pusha
out
cmp
xlat
xchg
enter
imul
sahf
ret
cli
pop
xchg
xor
addr16
pop
out
push
dec
dec
imul
out
mov
xchg
inc
or
leave
dec
fcmovnbe
pusha
ss
lods
scas
jbe
shrb
ss
inc
adc
leave
add
push
xchg
xchg
push
scas
iret
dec
dec
out
cli
cmpsl
or
lock
cmp
fdivrs
dec
icebp
xchg
push
repz
shll
and
or
inc
test
aas
jne
jae
clc
xchg
pop
pop
lret
outsl
xchg
imul
sub
xchg
mov
pop
mov
mov
push
icebp
mov
lcall
push
bsr
mov
pop
sbb
push
les
pop
insl
and
cltd
xor
jns
add
mov
loopne
sarb
push
adc
lods
clc
or
push
mov
stos
js
lahf
pop
adc
rolb
es
lds
cmp
hlt
mov
repz
stos
ret
jmp
enter
jge
test
push
inc
fcmovnbe
dec
das
cmp
js
rcrl
jcxz
sbb
pushf
xor
mov
inc
push
stos
add
jns
repz
dec
int
push
fstps
clc
or
push
pop
mov
xor
jns
pop
mov
mov
icebp
sahf
out
xchg
cmp
push
pop
jge
lods
cs
jg
xor
jg
out
add
jne
cmp
and
aad
pusha
sbbl
xchg
adc
out
mov
push
dec
mov
cmp
adc
test
or
adc
icebp
loop
push
in
jbe
pusha
fisttpl
pusha
inc
cmp
cmpsl
inc
sub
pop
cli
movsb
cwtl
lock
out
out
jg
add
imul
cltd
adc
adc
jecxz
lret
hlt
shrl
lods
adc
pusha
xchg
shrb
mov
loope
enter
subl
flds
xor
xchg
mov
jg
jb
jge
fcoms
inc
mov
shll
out
js
scas
lret
dec
jecxz
or
je
xchg
idivb
push
cmpsb
sahf
sbb
or
cmpsb
jecxz
or
push
notl
sbb
xor
mov
repz
clc
icebp
add
call
and
add
mov
into
dec
mov
push
inc
xor
cmc
ljmp
xchg
lea
test
sahf
and
mov
shlb
xchg
lret
lret
pop
mov
push
add
pop
sbb
cltd
stc
xlat
or
pop
mov
dec
jns
addl
add
rcrl
aam
mov
cmp
jp
mov
mov
scas
xor
outsb
test
test
adc
xchg
pop
lfs
fndisi(8087
enter
shlb
outsb
imulb
pop
or
lock
cli
xor
and
pop
or
mov
in
jge
sti
ret
lods
in
shr
mov
out
es
sbb
data16
dec
mov
pusha
jno
roll
push
cmp
iret
icebp
dec
loopne
lret
insb
lahf
push
cld
aas
mov
xor
sbbb
repnz
mov
or
shl
and
cwtl
or
dec
fnstenv
cmpsl
lods
call
add
mov
imul
clc
dec
ficomps
mov
jecxz
push
jmp
mov
add
bound
sti
xor
push
call
jnp
mov
std
rolb
xchg
push
testl
dec
adc
sub
inc
or
cwtl
int3
lahf
into
adc
int
mov
jge
xchg
pop
add
and
out
daa
clc
es
push
or
sub
cmp
jle
lds
sub
stos
jno
shlb
push
dec
pop
sbb
mov
and
mov
xchg
daa
add
push
xor
fwait
mov
sbb
outsl
adcb
mov
stos
cltd
cmpsl
or
xchg
lea
dec
jne
test
jg
sub
push
dec
je
sub
adc
cwtl
clc
mov
bound
cltd
xchg
call
in
and
cmp
jae
push
jmp
push
and
cwtl
bound
imul
push
jg
mov
subb
cmp
mov
mov
sub
mov
popf
in
iret
loope
mov
pusha
je
js
das
and
push
aam
cmpsl
and
sub
pop
cld
mov
mov
xchg
sub
inc
ret
int
lds
out
mov
mov
mov
out
jne
xchg
jb
sub
mov
jb
and
enter
add
daa
adc
repnz
pop
xlat
sub
rcrb
loopne
cmp
mov
pop
mov
sub
sbbl
sbb
gs
das
and
pusha
jl
mov
pop
cmc
adc
adc
jmp
jnp
mov
pop
xor
lods
dec
insb
shrb
cmovp
incb
mov
in
stc
std
stc
cmp
dec
jle
pop
jo
ret
cmpsl
je
mov
inc
mov
repnz
jns
mov
data16
xor
jbe
jne
pop
lcall
jne
or
in
xchg
adc
xor
ret
loop
test
out
and
fidivrl
xor
push
adc
fists
push
call
jecxz
mov
repz
outsl
ficomps
and
andb
dec
pop
mov
in
outsl
sub
mov
sbb
push
lea
dec
mov
xchg
add
push
iret
dec
gs
mov
dec
les
leave
inc
cltd
push
sub
aaa
cmpsl
cmc
sahf
mov
fnstsw
xor
outsl
jmp
into
test
mov
mov
and
sbb
fcoml
xor
out
out
popf
mov
in
cmp
into
adc
pop
push
mov
shl
adc
repnz
adc
jb
decb
lret
sarb
mov
jmp
inc
xor
stos
push
imul
popa
jg
aaa
pop
fisubl
popa
jae
cmpsl
cmpsl
inc
mov
loopne
rcr
mov
cmp
mov
imul
xor
push
jmp
hlt
jp
pop
adc
sahf
mov
dec
sub
xchg
pop
mov
and
mov
stc
popf
pop
ficoms
sbb
and
sub
aad
mov
pushf
push
xor
rolb
mov
jnp
mov
jecxz
addl
adc
adc
mov
push
movsl
stos
inc
das
int
sbb
imul
nop
rcll
sti
pop
push
out
mov
mov
addr16
mov
mov
in
fcmovb
sbb
mov
out
mov
mov
push
xchg
sbb
pusha
inc
lret
cmp
aad
adc
jl
pop
xor
fstpl
xlat
addb
mov
shr
adc
hlt
out
int
hlt
loop
dec
inc
data16
dec
orl
and
lds
xchg
mov
fucomi
lds
xorl
sbb
mov
inc
je
nop
fcmove
dec
mov
mov
addr16
jge
sub
inc
jmp
sub
xor
outsl
mov
sub
cmpsl
jns
mov
cwtl
daa
mov
clc
outsl
aas
fwait
push
mov
ss
lea
xor
dec
gs
sbb
xchg
xchg
adc
mov
dec
out
mov
movsl
ja
mov
mov
push
or
mov
pop
fdivr
scas
shl
sub
xlat
sarl
pop
cmp
push
in
sarb
mov
insb
sti
xlat
mov
mov
pop
enter
push
mov
jl
iret
mov
enter
xchg
imul
imul
push
incb
pop
cmp
fistpl
push
mov
mov
push
jb
arpl
xchg
mov
mov
imul
aas
test
insb
xchg
hlt
add
movsb
push
sub
cmpb
cmpsl
inc
scas
imul
mov
in
or
cwtl
test
vphaddudq
jns
push
dec
fidivs
pop
cmp
push
or
test
cli
in
lock
iret
jp
xor
mov
mov
inc
inc
fsubrs
lock
scas
shrb
xlat
push
ja
adc
adc
jle
adc
jge
jns
inc
rcll
test
shrb
shlb
pop
fisubl
ljmp
dec
mov
jno
cli
push
push
addr16
fldenv
insl
mov
push
sub
pop
movb
std
rclb
sub
negb
les
popf
dec
leave
lds
stos
sbb
imul
cli
mov
sub
lock
sub
jno
bound
mov
mov
push
clc
notb
push
leave
add
je
scas
lods
dec
fmul
repnz
cmp
stos
push
fucomp
shlb
jg
pushf
lret
loope
mov
dec
cmp
xchg
mov
mov
mov
imul
test
xor
shlb
sub
push
imulb
dec
push
push
loopne
push
scas
test
cwtl
call
sbb
or
add
gs
pop
push
pop
xor
adc
testl
push
icebp
cwtl
sub
jecxz
lods
jmp
test
arpl
mov
pop
sbb
test
xor
xchg
and
mov
or
mov
or
imul
mov
aam
imul
xchg
je
adcb
or
add
mov
repnz
mov
stos
bsf
push
cmp
xchg
xor
fsubl
aad
shll
mov
pop
test
dec
lret
aad
dec
xchg
push
mov
or
fsubrs
adc
xchg
and
push
cmpsb
rorb
xor
andl
push
stc
sub
test
jb
std
das
mov
dec
icebp
inc
mov
lret
pushf
jge
int3
mov
gs
fmul
in
xor
and
add
xlat
lds
pushw
cwtl
fnstcw
lcall
sbb
and
shrl
add
add
xchg
and
les
xor
hlt
mov
and
inc
push
mov
inc
outsl
jp
xchg
mov
mov
dec
scas
sub
cmpsl
stc
inc
xchg
sbb
int
inc
sbb
add
fcomps
xchg
in
adc
push
add
jl
out
lods
cmp
pop
pop
mov
sub
cmpsl
shll
std
cmp
mov
pop
ds
push
imul
pop
into
sub
sbb
leave
pop
ds
push
imul
pop
into
sub
sbb
leave
pop
ds
push
push
ficomps
sub
sbb
leave
pop
ds
push
xchg
incb
mov
icebp
popa
loope
pop
push
dec
inc
js
push
insb
pop
adc
fcom
enter
call
push
mov
push
dec
inc
js
push
add
xor
and
ror
mov
cwtl
xchg
mov
pop
push
dec
inc
js
push
add
xor
and
jnp
ret
mov
jmp
test
mov
or
xor
or
mov
shll
sbb
lret
xor
cwtl
or
add
in
xor
fisubs
cmp
cmp
repnz
outsb
addr16
outsl
mov
or
push
mov
loopne
inc
sahf
sbb
inc
jae
iret
fsubrs
mov
push
cmp
push
rorb
jmp
add
mov
fsubrs
data16
loopne
mov
mov
mov
mov
sub
call
orl
cmpsl
lds
aas
adc
leave
mov
inc
mov
ret
add
lods
loop
xchg
mov
js
push
add
xor
and
ror
ret
clc
repz
cmpl
and
sbb
add
imul
fwait
test
cld
mov
loop
push
cmp
jae
adc
cmp
and
xchg
lods
mov
lock
lret
repz
sub
adc
imul
cmp
sub
fcom
enter
call
cmpl
dec
inc
js
push
add
xor
and
ror
ret
clc
repz
cmpl
in
or
rorl
imul
dec
mov
push
pop
and
and
mov
push
int3
sub
jp
cli
arpl
xchg
jp
jno
xor
cmp
jbe
mov
or
cmp
push
lods
jae
cltd
xor
in
rclb
out
ljmp
gs
leave
lcall
sbb
fidivrl
mov
ss
into
into
addr16
jo
jb
sub
push
cli
jp
mov
jp
sbb
in
xchg
aas
cwtl
dec
bound
js
scas
jp
mov
lcall
leave
xor
scas
aas
push
push
test
or
or
popa
and
sub
js
lods
sbb
or
jmp
dec
aam
jo
push
jns
stc
xor
lret
out
dec
lret
je
cmp
lock
cmp
loop
enter
jecxz
sbb
outsl
mov
mov
add
jg
push
mov
push
xlat
adc
mov
xchg
lcall
and
mov
push
xabort
xor
mov
rcr
dec
sbb
push
or
icebp
sti
xchg
out
leave
dec
xor
into
sbb
xor
imul
rol
aam
jno
test
sub
adc
lret
leave
js
xor
mov
dec
mov
stos
in
ds
lret
shll
push
aad
icebp
add
xchg
mov
jp
out
xchg
fiadds
into
lea
xchg
call
aas
mov
mov
enter
lcall
fmull
das
xchg
xor
mov
ret
adc
fwait
lods
jg
xchg
mov
popa
test
daa
jge
push
add
test
pop
mov
add
call
xchg
icebp
jbe
xor
lret
notb
adc
hlt
js
push
popf
imul
movsl
fisubl
les
and
jecxz
adc
mov
xchg
loop
inc
push
dec
jge
mov
int3
mov
les
inc
test
test
cmp
imul
mov
mov
sbb
cmc
jb
push
xor
test
xor
xor
push
sar
pusha
imul
int
test
sbb
xchg
jne
scas
pop
sub
jg
mov
adc
xor
jmp
fdivl
in
inc
jg
mov
fsubrp
add
or
shr
jecxz
mov
sub
sub
test
pop
mov
and
aad
and
cmp
int3
or
adc
add
lcall
dec
inc
sahf
sbb
push
mov
mov
push
adc
out
xchg
imul
mov
fstpt
adc
mov
add
cli
pop
clc
jecxz
add
out
add
push
mov
dec
pop
scas
into
cld
sbb
popf
jle
or
jg
repnz
mov
shll
push
xchg
pop
mov
inc
lret
pop
das
cmc
add
mov
fbld
in
jmp
pop
jns
bound
aas
pop
lock
jnp
inc
and
and
lock
sub
mov
ret
daa
sbb
nop
lret
jg
mov
jle
push
adc
add
outsl
inc
mov
int3
inc
mov
inc
popl
adc
pop
mov
insb
xchg
dec
ret
lea
push
xor
in
imul
cmp
mov
mov
inc
inc
ljmp
and
xchg
fidivl
leave
in
std
xor
js
movsb
push
jno
pop
dec
ficoms
cmpsb
add
pop
fdivrl
fbstp
ljmp
addl
iret
mov
mov
sti
sti
lods
jo
mov
cld
inc
pop
mov
ret
clc
in
subb
aad
ret
mov
movsb
imul
shrl
jb
stos
fcoml
popa
adc
adc
sub
decl
inc
mov
hlt
aad
cli
sub
mov
inc
xorl
stos
std
dec
xchg
cltd
aam
test
es
or
repnz
mov
add
lods
jb
xchg
stos
xchg
dec
test
test
xorl
sbb
aaa
mov
jns
movsl
push
add
flds
dec
xor
push
sbb
test
cwtl
pop
xor
fnstsw
sub
je
dec
pop
pop
stos
sbb
push
mov
mov
xor
mov
cltd
popa
ja
jmp
add
loop
mov
xlat
icebp
mov
pop
out
mov
lret
ss
fadds
andl
pop
loop
xor
lcall
ss
addr16
or
cmp
das
iret
jns
and
imul
mov
mov
loope
lea
lahf
dec
adc
fucom
pop
mov
cmpsb
sbb
cmp
out
cs
jecxz
ret
fiadds
ds
or
push
push
insl
xor
popl
cld
adc
jns
outsl
mov
push
fists
mov
mov
add
push
and
or
test
loop
fcomps
cltd
sbbb
or
pushl
movsl
push
ret
push
pop
adc
xchg
stos
adc
dec
les
fmuls
out
hlt
add
faddl
cltd
pop
stos
arpl
push
stos
jecxz
es
rcrl
inc
out
gs
out
test
mov
enter
clc
inc
fldenv
lods
int
lcall
xchg
push
notl
pop
scas
test
dec
mov
or
jne
cmp
in
push
sbbl
lret
or
jns
sub
mov
dec
pop
adc
mov
push
test
fistpll
adc
scas
icebp
daa
dec
stc
hlt
mov
test
cmp
repnz
shll
out
mov
rcll
sarb
mov
cwtl
rorl
rcrw
out
and
js
mov
movsb
jno
enter
test
sub
push
daa
or
movsb
xor
cmp
daa
jae
hlt
push
cli
dec
or
adc
mov
push
mov
dec
in
int3
jnp
dec
jle
aad
add
mov
jle
sub
stos
stos
or
call
ror
pop
lea
std
xor
dec
mov
pop
shlb
xor
lahf
cmpsb
bound
insb
int
std
in
mov
mull
mov
sbb
pop
ret
fisubs
test
mov
pop
test
out
fcmovu
pop
sahf
cmp
stos
mov
fistl
pop
pusha
or
dec
cmp
icebp
cwtl
scas
push
add
jo
add
xor
cltd
pushf
and
dec
dec
mov
js
dec
xorl
jns
ljmp
jbe
fcomps
push
sbb
cmp
test
dec
ret
bnd
mov
add
inc
les
imul
cli
and
outsb
jmp
push
adc
adc
adcl
push
data16
inc
int
insl
shll
jne
leave
pusha
les
push
shrl
dec
loopne
iret
mov
gs
gs
cwtl
out
mov
jge
mov
sahf
test
inc
call
xorb
mov
leave
dec
adcl
fs
into
mov
idiv
xchg
pushw
repz
adc
lret
shll
xor
out
or
pop
cmp
jae
cmpsl
mov
inc
xor
pusha
inc
pop
int3
mov
mov
jbe
popa
or
in
push
out
cli
cmc
jae
mov
and
adc
jns
sarb
xor
sbb
sub
adc
push
push
lret
jg
out
cmp
out
sub
xchg
ret
fiadds
pop
sbb
out
insb
sahf
jno
cmp
test
into
in
rcll
push
ret
rolb
fs
filds
jecxz
add
xchg
mov
and
stos
imul
movsb
inc
xor
fistl
ja
popa
stos
ljmp
xchg
add
das
cmc
das
adc
and
jg
push
sbb
pop
mov
data16
push
xchg
push
insb
bound
int
jo
mov
jae
notb
pop
dec
jae
test
mov
adc
xlat
cld
cltd
or
jle
push
fdivr
adc
push
mov
mov
dec
lods
inc
dec
repz
xor
std
cmp
jns
cwtl
push
test
jmp
xor
add
mov
pop
in
and
dec
ret
push
push
dec
cmp
je
rcll
lea
into
fs
xor
out
and
gs
adc
pushl
mov
adc
jae
imul
xchg
jo
cwtl
in
loope
addr16
ds
or
mov
mov
and
stc
sub
adc
sub
ret
xchg
sbb
mov
lcall
or
sub
out
or
and
jb
push
jmp
xor
mov
xor
sbb
cmp
mov
sbb
and
enter
or
pop
push
pop
cli
lret
adc
in
sbb
jno
xor
xchg
loope
inc
testl
fidivs
lret
add
cltd
test
mov
mov
cmp
out
mov
stos
pop
fs
addb
push
or
dec
lret
sti
and
sub
jg
fsts
decb
fbstp
mov
jecxz
mov
and
lret
rol
cmp
xchg
iret
repnz
mov
inc
lea
jl
jmp
imul
rorb
cmp
outsb
fwait
and
shl
adc
aad
in
lahf
push
xor
or
mov
adc
xor
push
and
rolb
cmpsb
or
mov
adc
inc
lds
and
pop
dec
dec
std
insb
fsubrl
das
call
ficomps
loope
fsts
and
xlat
data16
cwtl
or
sahf
inc
test
in
mov
mov
in
xchg
mov
aam
push
int
rcrb
adc
jno
and
xor
cmpsl
js
dec
mov
or
into
adc
fcoms
lock
test
mov
stos
mov
mov
insb
ret
push
dec
or
sbb
je
mov
int
sub
lret
fsubl
and
fucom
sbb
cmp
scas
incb
adc
les
cmc
xor
mov
mov
sub
dec
cmp
pop
xchg
mov
in
je
add
loope
je
adc
fisubs
ja
movsl
fstl
mul
loope
cmc
inc
gs
jae
je
or
loope
pop
lods
mov
add
mov
imul
stos
add
xor
jae
push
ljmp
dec
jbe
dec
hlt
jne
xchg
not
cmp
inc
add
repz
cmc
orb
out
aad
xor
in
into
xchg
imull
fcmove
loopne
fnstcw
push
lea
gs
call
xor
jp
ficomps
pop
fbstp
test
cld
jg
xor
sbb
mov
aas
stos
lock
xchg
jg
loop
imul
pop
lds
push
sbb
xchg
in
mov
insb
xchg
push
mov
jle
in
push
dec
ret
cmpsl
fstpl
cwtl
ficoms
movsb
out
dec
ljmp
insb
ret
mov
ds
inc
push
or
mov
ret
jmp
sti
mov
lds
mov
adc
call
in
mov
cmp
xchg
dec
sub
jne
push
mov
sbb
loope
fmul
add
pop
sub
aas
ds
jle
mov
add
aam
gs
jno
xor
clc
sarb
mov
dec
pop
push
xor
pop
push
mov
fidivrs
bound
cmpsl
std
pop
xchg
and
adc
fdivp
jno
xor
dec
adc
int3
lods
cmp
inc
sub
out
in
add
and
pop
push
cs
xchg
and
xchg
fs
mov
lret
ret
mov
adc
or
and
hlt
lds
icebp
pop
adc
inc
lahf
ficompl
cltd
jo
nop
out
addl
sbb
cwtl
subb
xchg
lret
cmpl
adc
sbb
leave
sub
jp
enter
adc
iret
shl
pop
lahf
fstpt
iret
and
xchg
insl
or
pop
dec
push
shr
mov
xor
sti
js
mov
aad
xchg
lock
cli
xor
ds
jne
inc
mov
nop
adc
xchg
mov
mov
sbb
add
in
mov
xlat
mov
pop
xor
xchg
pop
mov
sbb
insb
sbb
leave
arpl
lods
cmpsl
hlt
jbe
rcr
cmc
adc
pushf
cmc
addl
sarb
jno
aad
in
pop
push
daa
mov
inc
ss
push
push
adc
jnp
add
push
dec
push
in
sub
adc
ret
lods
lods
mov
mov
mov
in
xchg
pop
sub
add
sbb
ljmp
pop
cli
fimull
arpl
and
int3
mov
dec
push
add
mov
mov
aam
jno
out
and
sbb
mov
ss
inc
pusha
xor
das
ret
roll
dec
test
ror
jmp
adc
mov
and
adc
mov
sub
fstpt
cmp
mov
xor
and
add
xor
cld
ja
movsb
or
ror
pop
cltd
xchg
lds
hlt
faddl
jne
mov
repnz
call
xor
cld
xor
pop
mov
cmpsl
inc
mov
lea
int
sub
out
or
push
mov
push
imul
or
jo
repnz
jbe
les
pop
stos
xchg
and
xchg
push
shlb
inc
pop
stos
adc
cltd
dec
into
add
pop
fisttpl
loop
mov
jbe
xor
adc
inc
outsl
in
sub
pushf
jmp
sbb
dec
jecxz
xor
xchg
and
adc
sahf
pop
rcrl
cs
aad
das
in
mov
or
or
fs
dec
ret
pop
jo
cmpsl
roll
jle
lods
push
cmc
mov
and
jo
xor
mov
jnp
and
sbb
testl
fdivs
jns
aaa
jae
mov
ret
dec
inc
adc
sbb
push
adc
mov
xor
outsl
sbb
xlat
mov
or
stc
mov
jbe
stos
bound
ss
dec
sbb
fimull
mov
in
subl
rolb
leave
or
jns
sub
jle
xor
lods
push
mov
and
pop
shll
xor
inc
fstps
stos
in
xchg
aad
xchg
mov
out
rcrl
out
pop
sub
test
inc
ret
jg
clc
ret
out
adc
pop
sub
mov
dec
fmuls
mov
push
mov
inc
gs
je
xor
insl
loope
mov
fwait
out
sbb
ja
fsubrp
out
mov
add
lock
lock
cwtl
int
fcmovu
sbb
gs
outsb
jns,pn
push
dec
sbb
push
or
movsl
fcomi
xchg
push
inc
xchg
stos
int
dec
js
mov
leave
xchg
notb
es
ret
pop
inc
mov
das
mov
int3
jle
aam
mov
loop
loop
test
dec
pushf
les
jno
sub
and
adc
lods
insb
pop
js
push
xor
mov
inc
add
fistps
out
xor
inc
sub
pusha
imul
or
data16
sub
data16
push
dec
xor
push
leave
push
xor
loope
loop
and
das
int
inc
mov
rcll
mov
orl
lret
adc
in
mov
scas
sbb
or
arpl
enter
push
movsb
icebp
mov
pop
push
negb
lret
cli
pop
outsb
jbe
mov
dec
xchg
nop
in
loope
add
jns
mov
jne
xor
inc
shll
cmp
xor
iret
movsb
ja
movsb
ret
jbe
rep
pop
dec
sahf
jne,pn
mov
and
or
sub
dec
and
jmp
es
sub
mov
pop
lods
jnp
and
paddb
pop
pop
imul
pop
arpl
aam
jo
xor
lea
add
fidivs
lods
add
mov
js
dec
pop
mov
mov
xor
sahf
rolb
pop
or
inc
je
test
mov
cltd
cld
jns
xchg
pop
lcall
or
mov
pushf
inc
mov
lcall
pop
mov
cmc
stc
push
out
xchg
pop
notl
ds
jne
sbb
mov
and
lods
xlat
mov
cmp
sub
cmp
xchg
cmp
pop
out
ds
fstpl
add
xchg
daa
jno
xor
repz
sub
inc
cmpl
std
stos
ds
mov
xor
lcall
pop
aad
pop
faddp
lcall
mulb
lds
mov
stc
xor
iret
mov
es
call
sub
add
neg
jge
test
mov
fmull
lcall
je
das
and
cltd
xchg
scas
push
cmpb
popa
pop
imul
adc
mov
repnz
jbe
stos
lock
or
pop
xchg
xor
dec
inc
mov
iret
xchg
sub
mov
adc
pop
ss
enter
ret
nop
sti
out
mov
push
mov
mov
in
into
push
push
shrb
sbb
or
imul
adc
and
in
pop
and
or
jo
push
push
insl
insl
sub
fcomps
adc
adcb
jne
stc
or
jns
adc
jge
jmp
sub
mov
pop
sti
in
shlb
xor
out
add
jmp
xchg
pop
jns
push
pusha
sbb
sub
int
pushl
movsl
into
jnp
sbb
jns
push
mov
adc
loope
jbe
cwtl
xchg
ret
scas
xorb
hlt
insl
data16
dec
pop
xchg
das
jae
mov
push
outsl
pop
xchg
popf
lret
mov
mov
mov
xchg
jmp
outsb
ret
xchg
inc
fs
lds
andb
and
arpl
xchg
mov
mov
pusha
outsb
xor
or
sbb
sti
je
xor
ss
fucomip
jno
xor
je
sub
sub
and
fsts
mov
scas
mov
dec
mov
xchg
jle
mov
inc
cmp
jbe
jb
aaa
adc
dec
and
dec
imul
cmp
push
mov
dec
nop
mulb
rcrb
pusha
das
jbe
adc
ds
lods
testb
push
xor
xchg
inc
jle
out
jg
aaa
adc
lock
xor
mov
dec
sbb
mov
pushf
testl
xchg
sub
adc
sbb
sub
push
xchg
fucom
adc
sbbl
incl
xor
or
sbbl
add
nop
aam
stos
insl
lret
rcrb
cmp
in
fnsave
lcall
dec
xchg
pop
lcall
ret
mov
xchg
sbb
fistl
clc
xchg
inc
cld
xor
testl
cs
cmpsl
cmc
gs
movsb
xor
and
fscale
dec
imul
push
outsb
lock
ja
or
rolb
cld
push
sub
dec
xchg
fwait
dec
pop
imul
mov
mov
call
enter
pop
cmp
and
add
js
fadd
mov
sub
sub
fstl
lcall
adc
int
dec
jl
pusha
in
loop
push
inc
sub
sub
push
insb
inc
and
out
mov
inc
rcrl
insb
nop
int3
stos
mov
inc
jae
xchg
int
out
mov
lcall
dec
inc
pop
sahf
rorb
push
and
lods
mov
je
add
ja
sbb
int3
ja
and
pop
jge
cmp
out
pop
push
cli
std
mov
xchg
mov
clc
mov
push
push
xor
inc
xchg
popaw
repnz
jae
negb
int3
jmp
mov
or
mov
inc
xor
int
jmp
aas
mov
dec
and
jae
push
add
push
popa
push
xor
lods
mov
jmp
popa
adc
fidivl
int
adc
cwtl
je
das
mov
movsl
add
arpl
ret
fidivrs
out
fwait
push
icebp
jo
or
cli
dec
aas
xor
pushf
lahf
mov
fucomi
inc
inc
rorl
inc
push
call
jg
test
pop
popf
divl
and
imul
test
aam
pop
jae
int3
sbb
dec
shl
pop
sbb
fstpl
je
rolb
pop
dec
cltd
inc
dec
in
jmp
adc
add
xor
and
ror
ret
clc
repz
cmpl
dec
inc
js
push
add
xor
and
ror
ret
clc
repz
cmpl
dec
ret
js
push
cmpl
sub
fcoms
ret
clc
repz
cmpl
dec
inc
js
push
add
xor
and
ror
imul
add
push
pop
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
outsb
xor
and
adc
add
int3
push
or
inc
out
cmp
xchg
scas
hlt
mov
les
jle
dec
adc
add
je
je
push
push
xor
mov
rolb
aam
les
addr16
aaa
insl
es
dec
push
pop
divl
icebp
scas
mov
leave
stos
pop
js
push
dec
jno
arpl
movsl
iret
mov
stos
push
nop
xchg
push
sub
scas
ss
ds
mov
xlat
pop
xor
and
xchg
scas
mov
xchg
test
dec
mov
mov
sbb
push
jnp
push
inc
pop
mov
sahf
subl
jp
shll
icebp
and
shll
pop
sti
imul
push
enter
sub
fcmovnb
jmp
jo
mov
adc
out
sub
dec
cmp
insb
cs
jno
mov
lret
sahf
push
or
mov
sar
push
adc
fdivl
mov
mov
fsubr
add
sahf
ret
addr16
or
cs
push
pop
pop
divl
popf
mov
cmpsb
cld
xchg
into
sahf
lds
xor
push
sub
popa
pop
jbe
add
out
fistl
loope
xchg
cld
mov
pop
dec
and
imul
sub
and
lods
rcrb
scas
test
in
mov
mov
xor
and
jo
inc
inc
ds
push
push
inc
out
mov
movsb
into
xchg
fiadds
aam
les
jle
dec
adc
add
je
fs
push
push
inc
out
mov
movsb
into
xchg
fiadds
aam
les
push
aaa
icebp
xchg
sub
mov
fldl
test
aad
sub
sbb
nop
movsl
lret
cli
mov
sbb
adc
sar
mov
and
add
sbb
dec
sub
xor
sub
xlat
xchg
inc
idivb
test
push
lods
mov
jbe
js
enter
mov
or
sub
and
mov
nop
sub
fnop
add
mov
cli
insb
test
cmp
adc
aad
ss
insb
ds
dec
sti
fisubrl
add
pop
jb
jae
mov
out
out
mov
scas
pop
or
xor
mov
xchg
or
or
mov
xchg
movsb
inc
lea
sub
mov
lds
pop
jle
dec
hlt
lods
je
or
hlt
cmp
pop
push
out
outsb
push
dec
sub
dec
push
cmpb
dec
jmp
push
mov
dec
pop
stc
pushf
xor
ja
sbb
push
or
add
xchg
xchg
into
stc
ret
jge
mov
pop
xchg
in
inc
bnd
je
cmp
adc
dec
fwait
aad
inc
pop
push
push
and
dec
aad
js
popa
stos
xor
push
push
sub
fwait
shr
pop
inc
scas
stos
inc
call
jbe
sbb
xchg
aam
orb
ss
sub
xor
lret
add
cmp
pop
adc
movsl
cmp
leave
xor
adc
cmc
leave
rorl
stos
push
push
je
adc
aas
lods
mov
sti
push
rcll
lock
test
test
sahf
xlat
jo
jbe
xchg
inc
cmc
out
negl
xor
roll
jns
outsl
jge
add
mov
xchg
cltd
sbb
mov
xchg
mov
sahf
pop
jle
push
fistpl
jecxz
shll
in
fwait
jnp
or
imul
divl
repz
sbb
jae
pop
rcrb
pop
or
loope
inc
insb
xchg
popf
xchg
fxch
cmpsl
jo
pop
jg
mov
test
cmpsb
jl
shll
push
loop
jb
cli
jnp
stc
cwtl
xchg
mov
xchg
and
lcall
mov
lds
pop
inc
jmp
push
cmovg
xor
rcll
push
cmp
or
add
testl
mov
imul
mov
in
shrl
jl
fs
xor
mov
pushf
mov
lods
pop
add
aam
std
aam
ja
imul
in
imul
fiaddl
push
and
push
aas
add
and
gs
cmp
insl
add
insb
lea
rcll
lea
cmpsb
sub
mov
repnz
mov
sub
popf
sahf
mov
mov
cmp
stc
aad
push
sub
xchg
out
pop
mov
ja
test
inc
mov
enter
xchg
sub
rolb
xchg
pushl
adc
or
test
cmpsb
ja
mov
fldcw
cwtl
adc
sub
pcmpgtd
scas
sub
or
imul
stos
jl
arpl
out
pushf
pop
ret
dec
daa
pop
jmp
stos
ss
fisubl
or
out
mov
mov
data16
dec
addr16
dec
ljmp
xor
sbb
pop
data16
fsubl
fistl
std
test
jnp
push
nop
loope
lcall
xor
mov
insl
fs
push
xor
aad
mov
xchg
mov
cld
mov
jg
pop
jnp
lahf
js
pop
cmpl
ja
jno
int
js
fisubrs
shl
and
lret
ljmp
jmp
sbb
addr16
dec
sub
in
inc
push
lock
ja
and
ret
mov
mov
mov
xor
lea
into
clc
rol
es
gs
sbb
aad
cmp
ret
cltd
cmpsl
xor
cmpsl
outsl
dec
out
leave
jo
push
sbb
rorb
rclb
adc
push
lds
lret
pop
fcoms
sub
enter
pop
add
hlt
xchg
xor
ja
lahf
notrack
push
push
out
stos
stos
adc
rcl
push
lods
adc
dec
adc
jl
sbb
mov
cmp
orb
pop
lods
push
push
mov
jmp
mov
mov
ja
cmp
add
test
push
subb
xlat
jbe
pop
mov
lods
and
lock
pop
and
cs
lcall
insb
cltd
dec
sbb
mov
std
xor
repnz
cli
cmpsl
enter
xchg
nop
xlat
push
std
sahf
pusha
pushf
int3
cmp
in
aas
std
jge
push
mov
lods
cmp
sub
ret
in
lcall
push
cmc
outsl
cmp
loope
xor
dec
xchg
cmp
cmc
lods
or
test
mov
mov
sub
mov
push
xor
lea
fs
dec
xchg
jns
inc
adc
mov
jo
mov
inc
cmp
dec
daa
es
or
and
sbb
aad
fs
lods
inc
std
mov
and
dec
dec
cwtl
fmuls
fldt
subl
adc
xor
pop
xchg
mov
jnp
cmc
cmp
les
ds
and
sahf
sbb
sbb
arpl
push
or
jecxz
dec
imul
add
pop
cmp
cli
ljmp
es
rcrl
sahf
jno
mov
int
mov
fistl
cmpl
jb
js
add
xchg
xchg
insl
aaa
fimull
sti
dec
das
mov
fists
push
lods
aas
push
sub
mov
addr16
leave
cmp
stc
cltd
popa
cmpsl
sbb
negl
movsb
in
sub
push
jb
inc
xchg
push
jge
inc
out
imull
jb
mov
sbb
aas
lods
cmp
aam
ljmp
xor
inc
mov
add
push
jecxz
xlat
fisubl
movsl
movsb
jo
sbb
inc
push
jns
and
mov
pop
inc
bswap
xor
out
sti
in
sub
shlb
and
dec
sahf
push
lret
dec
jb
sahf
cs
call
pop
mov
push
jo
mov
fs
mov
lcall
ljmp
out
cs
test
sbb
mov
cwtl
mov
loopne
lods
mov
or
add
nop
adc
push
add
pop
mov
aaa
std
add
cmp
lcall
cs
sbb
push
mov
jae
mov
xchg
imul
or
mov
aad
mov
ficompl
pop
cmpsb
es
es
ja
dec
adc
mov
mov
mov
mov
xor
mov
stos
pop
es
call
or
sbb
jno
jnp
xchg
sbb
shrl
loop
or
inc
andb
xchg
movb
xor
push
sub
xchg
shrb
mov
xor
lret
jmp
test
add
sub
in
cmp
cmp
divb
out
lcall
sub
cli
loope
std
push
sub
int3
mov
pop
push
dec
js
les
adcb
adc
and
out
test
inc
xlat
add
sub
rolb
cmp
repnz
lret
jbe
or
cltd
inc
fdivrp
je
cli
push
adc
add
lahf
stos
sub
xlat
jmp
and
sub
daa
lret
fucom
dec
lock
mov
data16
sbb
push
mov
outsb
lds
sub
add
mov
jle
popf
sub
in
or
xchg
sub
mov
decb
mov
mov
sbb
cs
lahf
rclb
and
push
in
add
out
xorl
push
dec
pop
add
lods
outsb
nop
xor
mov
pop
or
cmp
leave
mov
movsl
add
lret
aaa
lahf
aas
pop
sarb
out
call
xlat
adc
test
gs
js
aam
ret
data16
imul
dec
adc
ljmp
lea
sub
iret
in
ds
std
sbb
sbb
jne
and
js
adc
adc
sub
rcr
lcall
pop
scas
xchg
sub
push
adc
inc
add
inc
testb
std
push
in
movsl
popa
pusha
mov
mov
or
std
js
popa
sub
aas
adc
mov
adc
or
xchg
les
stos
test
imul
lea
hlt
xchg
jns
scas
cwtl
int
outsb
lahf
cmp
cli
fmul
sub
jecxz
jp
xchg
sbb
jmp
sub
or
sbb
or
xchg
sti
dec
outsl
xor
inc
insl
mov
xchg
lret
fildl
movsl
dec
inc
mov
pushf
sub
cs
test
add
mov
cli
outsb
cmpsl
test
movsl
xlat
and
fs
leave
mov
xchg
jmp
ret
mov
je
outsb
out
push
and
out
push
lahf
inc
adc
dec
xchg
xor
cmp
sub
daa
inc
jl
popa
add
push
mov
clc
outsl
jns
sbb
xor
mov
adc
cli
mov
inc
ljmp
repz
sbb
ljmp
popa
xchg
jo
int
hlt
ret
add
hlt
ljmp
gs
aas
sub
push
iret
pop
adc
jge
test
cld
sub
xchg
mov
and
lret
lcall
fdivr
movsl
mov
addb
fcoml
clc
fcoml
inc
push
push
pop
fdivs
push
in
jge
xor
aam
mov
mov
xlat
les
mov
cmc
sub
cmp
or
pushf
push
shlb
inc
gs
ficompl
cli
inc
dec
aad
iret
mov
lods
adc
fisubs
cltd
es
add
mov
xor
scas
mov
aas
out
divb
in
fisubl
or
mov
cmp
aaa
sbb
cmp
push
in
or
cwtl
mov
dec
aad
adc
xchg
dec
fldcw
rcl
fidivrl
or
adc
cmp
out
cmpsb
xchg
leave
jmp
pop
cli
stc
jo
dec
sti
and
xchg
pop
jno
ds
cltd
cmp
sbb
movsl
fnstsw
push
fcomip
stos
dec
jmp
shr
cmp
imul
pop
mov
ja
cwtl
mov
aad
xor
jb
sbb
iret
pop
mov
or
push
push
les
ds
xchg
jl
shll
inc
dec
outsl
stos
lcall
stos
lods
jmp
xor
inc
mov
mov
cmp
add
test
inc
dec
inc
push
out
sub
lea
mov
or
arpl
mov
pushf
repz
xchg
testb
mov
and
sub
xor
outsl
imul
jp
lods
mov
lds
xchg
int3
sub
mov
dec
cli
sbb
jmp
aas
mov
mov
rorl
fs
jle
jp
xchg
test
push
push
pop
jbe
lods
cltd
mov
int3
outsl
adc
cmpl
sbb
ja
or
sti
mov
inc
add
xor
lret
mov
jo
mov
jge
fiadds
out
cmp
sbb
fadds
jnp
ficompl
mov
aaa
inc
popf
imul
xchg
ljmp
gs
inc
dec
dec
pushl
in
mov
mov
pop
int3
mov
orl
pop
shr
xchg
in
xchg
dec
cmpl
pop
fdivl
test
dec
add
mov
jle
fwait
sbb
test
cwtl
inc
leave
or
inc
and
lds
or
xchg
push
je
mov
push
jle
fstpt
or
movsl
jb
add
fstl
jb
adc
aaa
jmp
out
inc
inc
jg
dec
cli
cmp
inc
mov
or
dec
into
mov
repnz
adc
pop
add
ljmp
insl
fs
pop
bound
pop
pushf
f2xm1
enter
scas
xor
fmuls
test
aaa
loope
pop
mov
dec
loop
inc
call
pop
imul
mov
sub
icebp
push
jmp
popa
hlt
jnp
jns
fsubl
mov
inc
je
mov
cld
mov
push
scas
ljmp
push
xchg
in
loop
inc
ror
icebp
mov
mov
xorl
xchg
aam
ss
and
testl
pop
shll
outsb
arpl
push
lret
adc
aad
pop
inc
sahf
imul
lcall
sbb
int3
aas
xchg
out
xorl
sub
sbb
icebp
icebp
fidivl
push
loop
mov
jb
sub
loopne
pusha
pop
in
or
adc
mov
xchg
sti
cmc
adc
fldcw
stos
mov
pop
sbb
mov
ret
and
icebp
mov
jl
mov
sbb
stos
addl
xor
jbe
jno
and
into
int
roll
or
or
rcll
jo
cltd
add
xchg
xchg
shlb
add
mov
rol
or
call
cmp
rcrb
inc
xchg
gs
lods
enter
mov
mov
mov
lods
lods
dec
movsb
pop
fsubl
outsb
mov
sbb
lcall
pop
mov
ljmp
inc
xchg
cld
je
je
inc
mov
stc
adc
and
mov
outsl
cmpsb
cltd
inc
mov
sbb
mov
push
repz
cmovnp
inc
inc
es
shrb
adc
pop
aaa
cmp
mov
cmp
dec
mov
cmp
aaa
pop
jge
adc
std
mov
sub
xchg
insl
or
mov
add
shl
loopne
pop
inc
out
or
test
xchg
out
fadds
icebp
aad
and
fists
dec
call
lahf
adc
dec
scas
icebp
xchg
into
mov
pop
int3
cli
outsl
test
cmpsl
rol
test
sbb
mov
mov
gs
inc
lods
mov
ss
mov
or
jecxz
inc
mov
js
arpl
push
and
xor
repz
inc
push
ljmp
arpl
lahf
test
and
sub
hlt
lods
jmp
sub
mov
push
inc
adc
adc
enter
fsubl
lds
xchg
aam
into
push
jg
push
cmp
mov
addr16
in
aad
mov
nop
push
movsl
push
cmp
rorl
jns
xor
pop
jbe
adc
mov
mov
pop
in
or
mov
fldcw
pop
mov
fs
insl
mov
or
inc
test
mov
sbb
add
imul
push
mov
call
cli
xlat
xchg
mov
jnp
iret
popa
rcr
addr16
xchg
in
mov
aad
loopne
out
push
mov
sub
ficoms
outsb
lods
pop
enter
sbb
jno
add
jb
add
rcrl
gs
fnstenv
rorb
enter
mov
or
lock
js,pn
mov
loop
cmp
iret
filds
lahf
cmp
movsb
mov
mov
cld
sar
fnstenv
pop
ja
push
push
cmp
addl
pop
pusha
or
mov
sub
push
cmp
repnz
or
jns
mov
jg
cmpsl
mov
ja
xlat
sub
mov
pushw
pop
xchg
pop
pushl
in
jg
push
jnp
sarl
inc
sti
xor
cmp
mov
outsl
fstpl
inc
pop
mov
das
fildll
xor
sub
mov
mov
xchg
xchg
cmp
ja
jg
stc
loop
inc
outsl
mov
cmp
mov
pop
xor
or
jns
les
icebp
mov
push
lods
es
clc
idiv
subl
pop
sub
ljmpw
nop
mov
mov
xor
ret
in
xor
cmp
jns
xchg
out
rorb
cmp
jl
movsl
pusha
sar
daa
pop
mov
push
push
xchg
loop
int3
sahf
inc
xchg
mov
out
mov
js
mov
cmp
dec
pop
movsl
jno
or
sbb
and
imul
add
cmp
push
je
imul
mov
call
cmp
fstl
cmp
jg
pop
xor
fcoms
sub
jne
cmpsl
pop
pop
cmpsl
repnz
adc
fs
rolb
cmpsl
mov
inc
repz
mov
or
push
sti
roll
inc
and
aad
add
dec
mov
jno
test
ljmp
mov
rcrl
xor
fstps
push
mov
add
inc
lret
insl
sbb
in
mov
mull
mov
fsubrl
or
mov
dec
adc
jb
repnz
test
call
leave
cmpl
push
jl
leave
mov
popa
cld
push
int
sbb
pop
xor
roll
dec
push
shl
data16
pop
lret
xlat
push
stc
ljmp
mov
ret
mov
fldl
pop
aas
sahf
mov
fiaddl
subl
jmp
inc
push
add
loop
mov
cld
outsl
clc
leave
in
rorl
jge
mov
std
mov
add
push
pop
popf
rolb
xor
jge
fwait
and
adc
mov
and
add
repz
sub
cmp
xlat
jmp
xchg
push
adc
mov
addr16
and
ret
mov
test
aaa
jle
xchg
outsb
cs
sub
pop
cmpsb
mov
jg
cld
outsb
sbb
cmp
jecxz
dec
xchg
dec
cli
xchg
cmp
adc
movsl
dec
jg
loope
insb
cld
jecxz
icebp
insb
cmpl
nop
gs
and
xchg
mov
adc
xchg
nop
hlt
call
shlb
ja
and
in
shrl
out
fdivrl
js
fistps
and
jecxz
test
jmp
mov
pop
repz
add
int
mov
cltd
mov
sub
xchg
out
sub
cli
gs
addr16
mov
test
xchg
mov
xor
add
data16
je
adc
fbld
mov
sbb
fsub
jecxz
jle
lock
stc
in
dec
mov
cmpsb
in
push
cmp
xor
shr
scas
pop
in
or
adcl
mov
xor
loopne
mov
je
ss
dec
jp
loop
cmc
stc
movsb
mov
cld
xchg
stc
push
mov
mov
out
sub
jo
push
push
mov
jg
xor
pop
dec
fstpl
jns
cmp
sbb
push
cmc
movsl
int
ljmp
out
xchg
adc
lcall
xor
add
push
mov
adc
outsb
push
dec
or
std
dec
adc
lock
ror
fsubp
pop
xor
pop
add
aad
loopne
into
imul
popf
mov
fucomi
popa
push
adc
jo
jmp
push
pop
stc
in
sub
test
or
jmp
testl
jmp
aas
ficomps
mov
adc
push
mov
xor
das
js
push
mov
sub
fldl
sbb
push
mov
cli
xabort
sbb
addb
out
push
mov
sbb
dec
std
jae
or
in
cs
push
sbb
push
fstp
jno
mov
aam
lods
outsl
jae
js
jno
pusha
mov
std
mov
inc
mov
and
mov
xchg
in
add
dec
jno
fs
mov
xor
dec
and
movsl
mov
cmp
and
mov
adc
mov
in
es
push
les
add
add
in
arpl
ja
jns
and
lahf
dec
inc
or
push
ret
mov
xor
cmp
loope
cli
dec
call
ds
int
rcrl
or
xchg
loope
lret
popf
test
push
push
jmp
sub
lea
ljmp
mov
in
popa
sub
aam
jle
arpl
jp
and
repnz
pop
loope
and
ret
fwait
insb
mov
rcrb
fnstcw
ret
jne
imul
sub
insl
les
jecxz
inc
das
outsl
pop
fcompl
mov
adc
mov
insb
lcall
xchg
cmp
bound
dec
icebp
in
push
out
lods
ja
inc
or
or
ljmp
mov
imul
pop
xchg
xor
in
test
lds
dec
mov
call
mov
pop
call
adc
dec
ret
inc
loop
rorb
sbb
or
cmp
pop
sahf
jae
int
repnz
sub
stc
fsubl
notb
and
adc
add
je
fs
push
push
inc
out
mov
movsb
into
xchg
fiadds
aam
les
jle
dec
adc
add
je
fs
push
push
inc
out
mov
movsb
into
xchg
fiadds
aam
les
jle
dec
adc
add
je
fs
push
push
inc
out
mov
movsb
into
xchg
fiadds
mov
pushf
shrb
and
pop
add
je
mov
adc
repz
jno
popa
mov
in
adc
add
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
leave
repnz
inc
xchg
jmp
mov
mov
imul
lret
sub
cmp
leave
neg
out
stc
mov
mov
imul
sbb
sub
cmp
leave
push
fldenv
jmp
xchg
mov
jbe
inc
add
gs
pop
fs
bound
test
pop
mov
std
xchg
cltd
loopne
mov
sub
cmp
and
jbe
cltd
sub
mov
fcompl
mulb
sbb
popf
mov
cltd
sahf
sarl
add
pop
and
fisttpll
or
mov
dec
ret
leave
neg
out
sar
scas
mov
mov
xchg
and
stos
jmp
cmp
or
push
cmp
test
jp
push
rdtsc
in
mov
mov
pop
out
jns
cmp
sub
imul
mov
ss
adcb
pop
xchg
arpl
insb
add
mov
cltd
cmpsb
test
jbe
into
imul
sub
cmp
imulb
stos
mov
jmp
int
mov
push
imul
sbb
bound
lods
mov
mov
mov
fdiv
sar
jmp
sub
or
imul
or
es
jae
jne
test
push
xchg
cltd
cmpsb
test
jbe
imul
sbb
sub
cmp
leave
neg
out
stc
mov
mov
imul
sbb
sub
cmp
leave
idiv
mov
stos
sub
cmp
neg
xchg
ljmp
sti
or
loopne
enter
cltd
cld
xchg
in
dec
cli
pop
loope
js
jbe
xchg
ret
daa
in
xchg
sarb
mov
int
cltd
fwait
adc
in
aam
inc
add
lods
pop
push
lea
jbe
ss
add
mov
pop
iret
mov
es
mov
andl
in
jbe
mov
jns
and
mov
je
pusha
jg
popa
pxor
lods
insl
pop
out
adc
and
mov
mov
mov
mov
inc
sub
or
outsl
movsb
pop
fisttpl
jecxz
push
movsl
adc
mov
in
push
lods
push
and
in
movsb
outsb
in
call
fbstp
rcl
jns
enter
add
adc
xchg
fidivl
push
jmp
inc
neg
lret
movsb
pop
insl
add
lret
cmp
add
hlt
popf
call
xor
lret
mov
rcrl
push
xor
cs
and
roll
in
push
cwtl
ret
mov
add
xorb
jns
lds
sub
push
out
pusha
sbb
fists
add
jnp
xor
outsb
ret
popa
push
pusha
sbbw
add
popa
adc
mov
cmpsb
xor
mov
ret
iret
in
jbe
inc
in
jns
das
loop
push
mov
mov
dec
adc
das
xchg
iret
push
adc
dec
cltd
dec
gs
outsb
movsb
jmp
jmp
push
cmp
pop
icebp
cmp
dec
or
ja
dec
clc
xchg
or
ss
dec
outsl
outsb
dec
inc
stc
pop
fistps
mov
lcall
xor
scas
sarl
push
sahf
xchg
xchg
cli
cwtl
cmp
dec
scas
mov
in
js
pop
lcall
std
movsb
lahf
ds
mov
test
mov
lods
sub
aaa
mov
arpl
test
mov
pop
and
inc
sbb
push
int3
dec
cmp
enter
cmpsl
jp
pop
shl
mov
repnz
cld
lret
rcrl
and
push
addl
pop
dec
in
data16
xchg
test
repnz
push
ja
cs
and
pop
mov
inc
cs
fcompl
popf
movsb
inc
push
pop
cmpsl
sahf
popf
hlt
mov
popa
xchg
xor
adc
or
adc
fidivl
cli
test
pushf
fs
lret
sub
shlb
pop
mov
sub
mov
stos
inc
popa
xor
cltd
inc
mov
xchg
into
push
sub
lods
loopne
xchg
cld
jns
in
mov
inc
cmc
out
mov
push
dec
jmp
rol
out
jo
pop
and
iret
call
push
xor
outsb
cmpsl
adc
and
sub
es
in
jbe
icebp
dec
cs
and
mov
lcall
jecxz
stos
mov
add
test
or
lods
sub
ss
mov
rclb
mov
push
fadds
pop
mov
add
test
aas
shrb
mov
and
out
dec
in
jns
pop
cmpl
cmpsb
shlb
or
add
and
imull
push
in
jmp
cmp
shl
cmpsl
fcmovnbe
adc
repnz
into
nop
inc
mov
sbb
loopne
leave
push
outsb
das
push
imul
xchg
std
shl
xchg
mov
stc
cmpsl
or
fst
cli
pop
cmp
push
sub
jge
xlat
push
and
xchg
jae
xchg
rclb
shrb
popf
mov
fisubl
jae
ret
addr16
mov
xchg
stos
mov
xor
flds
in
ror
dec
mov
js
movsl
cmp
pop
sbb
push
adc
lods
ret
pop
imul
xor
aas
pop
cltd
or
push
pushf
cmp
ljmp
and
mov
jge
out
insl
dec
cmp
lods
add
jmp
ss
jmp
pop
lret
outsl
sbb
inc
jno
adc
out
fwait
sub
fildll
ss
lret
arpl
pop
sarl
dec
mov
mov
test
movsl
jle
dec
and
dec
lods
ret
lods
xchg
lcall
lods
sub
xor
dec
cmpsb
popf
xor
inc
sub
push
lret
cmp
xor
xchg
sbbl
popa
js
pushf
pop
in
leavew
fnsave
adc
cli
arpl
pop
mov
bsr
fs
neg
bound
dec
stos
sbb
ljmp
sub
add
push
aas
ss
std
movsb
in
mov
sub
mov
and
loop
popa
jne
mov
sbb
movsl
int3
test
ror
cmp
mov
mov
mov
std
sbb
xchg
aam
lea
mov
xor
push
xlat
mov
pop
and
imul
adc
imul
jmp
jbe
sub
and
nop
push
mov
fwait
push
add
cmp
inc
jp
xchg
cs
push
scas
ds
andb
mov
mov
xor
push
cmpsb
cmp
out
xor
sub
shll
jp
pop
dec
push
mov
jno
insl
pop
das
addr16
imul
sub
mov
cs
cmp
imul
int
mov
movsb
scas
cmp
dec
add
pop
mov
adc
fwait
xor
mov
sbb
mov
cmp
repz
repnz
push
and
add
push
hlt
lret
rclb
in
int3
push
dec
mov
ja
imul
dec
dec
mov
cmp
or
xchg
nop
push
fcomp
in
jno
popa
push
inc
mov
aas
and
repz
push
inc
push
adc
mov
ffree
mov
mov
sub
je
ret
fs
movsb
xchg
shlb
mov
leave
add
in
push
push
sub
in
push
jmp
popa
inc
mov
fdivrs
mov
xchg
sub
cltd
rclb
sub
lea
in
int
and
jle
cmpsb
jmp
xchg
enter
in
add
and
scas
xchg
int
push
fists
cmp
fdivr
ja
mov
mov
push
push
ficomps
push
int
pop
jmp
rorl
cltd
repz
test
mov
popl
inc
sahf
push
orb
and
rcpps
mov
clc
mov
andb
mov
add
and
push
inc
push
pop
dec
mov
imul
repnz
push
mov
and
cmp
pop
xor
pop
jge
divb
notl
mov
jmp
and
pusha
mov
jmp
mov
dec
pop
test
and
xchg
push
nop
in
repz
lea
add
sub
sbb
push
call
mov
xchg
adc
enter
out
pinsrw
hlt
sub
and
adcb
movsl
cltd
mov
mov
neg
imul
insl
cs
ror
jb
fldcw
mov
jb
outsl
mov
xor
jb
repnz
inc
mov
push
fisttpll
push
cwtl
fiadds
adc
jbe
std
jae
inc
mov
fistpll
imul
lret
mov
sub
daa
lea
xor
lahf
enter
scas
lock
push
add
or
xchg
push
out
dec
nop
adc
ljmp
in
push
daa
outsl
test
push
in
dec
pushf
sbb
sahf
lods
dec
sbb
popf
push
adc
xchg
das
xchg
scas
aas
jns
and
inc
sbb
mov
sbb
orb
cltd
arpl
sbbl
ja
pop
cmp
and
push
jno
add
int3
scas
jno
sub
mov
push
and
xor
push
push
sarb
jnp
out
push
daa
aas
pop
pop
sbb
daa
loope
and
dec
push
aaa
cmpsb
mov
je
mov
in
xchg
cmp
psubusb
sub
xchg
fdivrl
sbbb
out
das
test
xchg
cmp
sub
xor
addr16
mov
fstp
mov
movsb
cmp
out
cmpsb
jb
cld
lock
mov
repnz
dec
sti
and
imull
ja
sub
xchg
and
add
fbstp
mov
sub
daa
dec
lods
les
in
in
in
add
enter
test
add
je
and
adc
outsb
cld
mov
cmp
ss
mov
loop
or
jno
imul
in
sarb
add
pushf
aam
mov
dec
imul
jo
mov
cmp
das
xor
and
inc
push
jnp
out
js
lds
jl
pop
clc
js
cmc
mov
mov
insb
in
cmp
mov
push
jae
and
ja
xchg
sub
jge
imul
sub
pop
dec
cmpsl
dec
jle
dec
aas
or
arpl
mov
nop
scas
insb
fiadds
mov
push
mov
pop
lahf
popa
pop
icebp
mov
inc
cltd
lock
popa
mov
daa
out
xchg
dec
mov
cmp
jno
adc
sbb
sub
push
test
sti
sti
push
in
lahf
push
inc
out
or
imul
das
cmc
stc
imul
dec
nop
stos
lea
inc
sub
shlb
cmp
xor
dec
xor
sbb
lret
push
movsl
mov
add
lcall
mov
dec
aad
mov
loope
lds
stos
dec
pop
push
roll
ljmp
or
jnp
lock
cmp
adc
or
inc
les
inc
mov
inc
mov
dec
das
jne
jecxz
or
mov
cmp
test
fbld
inc
cltd
mov
fsts
stc
mov
mov
mov
insb
mov
cs
cli
sahf
mov
cmpsb
bound
insb
lods
fildll
sbb
fwait
xor
xchg
mov
fdivrs
pop
mov
jle
out
cld
scas
xor
sbb
mov
cmp
cltd
mov
xchg
xchg
xor
mov
lods
lods
or
push
ss
ret
push
insl
dec
push
xlat
mov
jne
jp
mov
std
idiv
pop
or
dec
push
dec
mov
push
cld
xorb
insb
add
imul
and
faddp
push
mov
in
or
push
cld
or
xchg
sti
ds
push
das
add
fidivrl
push
incb
loop
aaa
out
cld
push
sbb
dec
pmaxsw
enter
cmp
jmp
in
jge
lret
pop
jge
jl
faddl
fwait
aam
aas
icebp
jl
je
sbb
jne
insl
add
sbb
inc
push
fstl
jmp
pop
and
mov
cmpsl
cmpsb
and
addr16
mov
sub
loopne
jge
jne
mov
mov
sub
idivl
sarl
mov
cmp
xor
js
lds
jnp
sbb
lds
rcll
cs
pushl
dec
icebp
adc
xchg
mov
jge
dec
pop
pop
xchg
sbb
xor
jb
pop
test
mov
push
nop
cmp
mov
xor
mov
cmp
mov
outsb
insl
sub
in
rcrl
add
mov
jnp
loope
bound
movsb
ds
out
stc
inc
test
pop
stos
lahf
dec
adc
in
sbbl
push
cmp
enter
aad
in
push
pushf
stos
cs
adcb
test
xor
sub
sbb
test
lods
stos
inc
lret
push
pop
dec
sbb
mov
dec
fdivrp
loop
inc
xchg
je
jo
mov
js
iret
mov
push
fisttpll
sahf
jmp
stos
mov
aad
lret
jne,pt
fcompl
mov
cmp
sti
xlat
mov
add
out
xchg
add
fimuls
dec
popa
mov
cld
cmp
out
mov
jmp
jg
add
jg
pop
shll
jae
es
pop
ss
jge
es
imul
mov
neg
inc
sub
mov
lret
and
sahf
adc
icebp
outsl
adc
mov
adc
or
xor
mov
repnz
cmp
xchg
out
popa
jb
shll
out
imul
xor
pop
add
sub
sbb
mov
sbb
sti
fimull
shr
dec
jno
scas
loope
pop
sarl
lret
and
jecxz
sbb
clc
and
inc
negb
sti
jg
mov
sub
cmp
or
xor
nop
sub
mov
mov
pop
jbe
outsb
es
idivb
xchg
std
inc
and
je
cmpl
push
jg
into
out
decl
add
lret
add
ss
aaa
dec
cwtl
test
iret
stc
sub
jg
sub
mov
add
stos
cmpsb
and
fldcw
dec
push
sbb
loopne
push
imul
outsl
and
dec
jg
out
loope
sti
push
movsb
sub
shrl
add
mov
dec
mov
mov
push
and
pop
rorl
dec
mov
inc
lret
and
ja
adc
int
pop
sub
into
mov
negl
xor
arpl
mov
popa
outsb
in
push
loope
in
mov
push
adc
lahf
mov
mov
pop
and
sarb
adc
aaa
pop
jns
sbb
ficomps
stos
mov
xor
mov
xchg
jmp
arpl
sbb
add
sub
cmp
int3
push
and
push
daa
movsb
loop
push
sarl
xchg
orb
jg
lds
mov
and
aad
mov
popf
sqrtps
mov
xchg
jle
stos
inc
lret
xchg
imul
jne
cmp
jle
aas
cmp
xchg
pop
pusha
jo
and
mov
fisubrl
insb
and
mov
push
or
cs
add
aas
es
jae
cmp
and
sub
push
imul
test
push
mov
fnstenv
mull
in
cmc
push
xchg
faddl
rolb
adcl
inc
pop
and
ret
add
push
outsb
pop
mov
push
in
insb
pop
jae
daa
in
cmp
pushf
fdivl
cmp
scas
adc
ljmp
push
sub
mov
pop
pop
fchs
mov
out
lods
arpl
rcrl
adc
or
test
dec
in
iret
lcall
scas
fwait
sbb
sbb
insl
push
lahf
pusha
jno
pop
mov
pop
sub
jecxz
pop
push
daa
xchg
cmp
jmp
adc
in
fmuls
enter
inc
in
pushf
cltd
sarl
rorl
push
ror
jns
push
push
cmc
shll
and
mov
inc
add
int
scas
ljmp
out
xor
mov
sub
fldenv
jl
cs
sub
xor
in
sti
push
cli
push
out
es
dec
dec
in
fimull
mov
repz
loope
sub
mov
popa
rolb
push
cs
mov
add
fisubs
or
xor
mov
sbb
xchg
push
bound
test
outsl
stos
in
daa
or
mov
shrl
and
sbb
fimuls
fnstenv
call
adc
hlt
xchg
mov
sub
cli
cmp
push
jg
fcomi
dec
enter
mov
fcoml
sbb
push
sbb
jge
sahf
xlat
mov
ljmp
mov
pop
mov
out
cmp
xchg
xchg
fwait
push
jns
out
cli
iret
mov
dec
xchg
jmp
xchg
mov
jle
dec
sub
ret
or
out
daa
xchg
pop
sbb
mov
xchg
mov
rclb
pop
mov
in
add
jns
fnsave
in
xchg
sbb
jae
into
pop
in
ret
and
pop
test
add
xor
jbe
mov
aam
jecxz
lods
data16
xorb
lret
rcl
cmp
les
js
cld
stos
pop
xor
aad
div
xchg
jo
insl
insb
inc
dec
push
jge
dec
dec
fisubrs
mov
inc
call
ret
jb
fwait
scas
sub
jns
dec
sub
xchg
sub
incb
jne
adc
cmp
movsl
jge
jge
or
inc
shl
loope
jecxz
sti
mov
or
xor
xor
loope
xchg
fistpll
sub
das
js
test
fnstsw
and
mov
cli
cmp
mov
stc
mov
lds
rolb
pop
push
sarb
xchg
sbb
push
movsb
mov
roll
pop
jmp
shll
pushf
mov
push
test
cmpsb
pusha
movsl
loope
movsb
aaa
and
or
shll
jb
sbb
popa
test
jbe
sub
stos
test
imul
mov
roll
jns
or
pop
dec
push
pop
cli
and
inc
mov
dec
in
mov
mov
xchg
cmp
sub
pop
fidivl
lahf
pop
cld
jno
lods
pusha
ret
mov
adc
jb
rorb
xchg
xchg
xchg
outsl
mov
push
inc
cs
jb
jp
not
jecxz,pn
xor
imul
pop
call
scas
cmp
jg
sub
cmp
out
gs
mov
movsl
or
les
divb
stos
popa
fdivs
sbb
mov
icebp
mov
sbb
mov
lea
loope,pn
pop
sbb
xchg
or
add
mov
adc
pop
xor
adc
and
jl
fcmovu
js
xchg
dec
cmp
scas
aas
sub
ja
out
arpl
add
dec
jbe
and
ljmp
out
int3
test
ffree
push
mov
shrb
je
ja
push
lods
sub
stos
adc
push
rcr
xor
les
or
jmp
xchg
jae
xchg
mov
sbb
mov
scas
inc
fstps
mov
cs
test
mov
rcll
sbb
lcall
ffree
cmpsl
or
or
out
add
sub
jle
ret
mov
jne
fimuls
cmc
pushf
enter
xor
std
je
or
lretw
jle
lret
inc
inc
cmp
ljmp
outsl
fcoml
add
xor
mov
xchg
add
orb
inc
xchg
sahf
bound
sbb
arpl
lahf
fsubrl
neg
or
cmc
sbb
scas
jmp
subl
xchg
add
shll
push
call
fstpt
and
sahf
mov
subb
jmp
fwait
mov
out
mov
repz
inc
in
out
mov
int
dec
inc
add
out
scas
testb
lcall
lea
gs
stc
mov
lea
mov
jecxz
je
test
fldcw
and
sarb
xor
call
sub
mov
inc
sti
pop
add
or
nop
sahf
mov
aaa
mov
adc
xchg
das
icebp
repz
sbb
pop
dec
cmc
dec
sub
sub
shrl
xor
pop
in
out
mov
sbb
jno
dec
shll
adc
sbb
push
cmp
out
and
lret
sbb
test
xor
dec
xor
inc
cmp
cld
in
sub
mov
lahf
cld
lock
lcall
rcr
xchg
test
push
jno
outsb
ja
addr16
nop
jmp
pop
xorb
subb
jecxz
cmp
cmp
fidivs
cltd
lret
cld
xlat
loopne
jecxz
in
stos
call
jl
mov
movsl
dec
mov
test
lcall
sub
inc
and
add
stc
cmp
ja
roll
incl
imul
mov
jo
daa
jbe
mov
xor
es
loopne
cwtl
mov
int3
loopne
inc
pop
mov
ja
mov
mov
mov
and
push
cltd
inc
xchg
pop
lods
hlt
pop
xchg
cmc
adc
aad
insb
daa
and
pop
inc
pop
daa
imul
xor
and
pop
mov
sub
pop
movsl
mov
mov
popa
ret
repnz
lds
jge
mov
jge
push
lods
fsubs
sub
add
jns
arpl
fucomi
jge
inc
icebp
enter
inc
cmc
shl
call
test
call
push
mov
pop
repz
adc
out
cmpsl
test
and
stos
bound
insb
ret
stos
mov
daa
mov
xor
ret
leave
aam
mov
jmp
cmpsl
xrelease
adc
call
mov
cmpsb
test
jbe
imul
sbb
sub
cmp
leave
neg
out
stc
mov
mov
imul
sbb
sub
cmp
leave
repnz
call
or
cmp
imul
sub
cmp
leave
adc
add
xor
xchg
push
mov
int3
ret
push
jns
jns
imul
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
xchg
or
aam
mov
aam
lret
mov
fwait
xor
and
push
lret
inc
fwait
je
je
lock
aam
les
imul
adc
add
push
stos
and
adc
inc
sti
sub
jbe
sub
dec
movsb
pop
ljmp
pop
fildl
aas
cltd
ss
cli
or
outsl
mov
int
rorb
iret
cwtl
push
xchg
aaa
into
imul
add
pusha
xor
js
xor
and
cli
mov
movsb
jns
imul
stos
fdivrs
je
fwait
pop
push
ror
fdivl
sar
insb
xlat
cli
inc
dec
add
and
add
mov
hlt
in
sbb
dec
das
sub
dec
or
add
mov
fiaddl
inc
mov
fisubrl
mov
xchg
std
cmp
sub
movsb
jg
outsl
sub
xor
popa
mov
add
ljmp
mov
pop
dec
sub
sar
daa
je
mov
xor
das
je
addr16
iret
or
sbb
mov
jnp
mov
mov
inc
jmp
mov
shrb
mov
push
in
adc
push
repnz
lds
cmpsb
sub
push
sub
insb
mov
add
jnp
into
push
divl
sub
pop
call
dec
xchg
les
imul
adc
add
xor
and
push
lret
inc
sti
xchg
or
aam
les
imul
adc
add
xor
and
push
lret
inc
sti
xchg
or
push
jbe
fs
ja
mov
testb
mov
ja
shlb
push
lock
inc
jecxz
aam
in
pop
loopne
sbb
adc
cmpb
movsb
imul
test
data16
addr16
fdivrl
adc
repz
and
cmpb
mov
add
sbb
xor
push
std
pop
gs
sbb
cmpsb
mov
push
adc
sbbl
gs
adc
push
dec
movsb
mul
testb
aam
add
mov
mov
xchg
push
cmp
jo
inc
jbe
test
sbb
out
rcrb
mov
inc
xchg
pop
add
add
call
mov
mov
jb
sub
cmp
or
pop
imul
daa
sbb
je
movb
imul
mov
add
add
mov
cmp
jmp
ljmp
mov
cmp
dec
shl
xor
mov
sbb
and
testl
dec
outsl
inc
or
loop
jno
and
push
push
outsl
jle
fscale
cmpsb
and
push
aad
ss
idivb
setge
xor
aaa
xchg
adc
xor
lods
mov
pop
scas
int
adc
add
leave
ror
jl
add
jae
mov
enter
int
bnd
xchg
outsb
mov
ret
fisubs
int
mov
mov
xchg
divb
sub
outsb
mov
mov
sbb
out
xchg
enter
fnsave
pop
nop
push
dec
and
push
repnz
imul
pop
iret
cmpsl
mov
fs
mov
dec
enter
mov
pop
mov
enter
ret
fld
jno
and
stos
and
xor
cli
mov
repnz
cli
pop
lock
pop
sub
mov
add
xor
push
fnstsw
cmp
les
fistpll
out
fildl
push
in
test
mov
arpl
aam
incl
in
int
add
rcrl
jbe
daa
and
xor
roll
and
fstpl
jae
in
outsl
push
sub
pop
in
mov
cmpsl
adc
or
fldcw
sub
ret
pop
int3
mov
or
imul
scas
mov
enter
cmpsb
and
add
inc
lahf
sub
pop
data16
lods
ds
inc
into
inc
roll
call
aaa
jg
loop
add
mov
xchg
testl
jmp
mov
lods
fdivl
fcos
jnp
pop
loop
movsl
xchg
and
add
mov
icebp
lea
fldt
mov
jp
mov
ror
jp
and
mov
mull
cltd
pop
test
push
fiaddl
rorl
mov
mov
out
jmp
test
ljmp
les
jo
mov
inc
fsubr
sti
sub
xor
mov
and
fsubs
std
push
scas
cmp
push
popf
fcomip
jo
add
mov
lahf
rcll
inc
addr16
int
push
aas
add
ja
mov
mov
push
jge
fldt
test
adc
xchg
cmp
je
lret
ljmp
and
push
and
sub
sub
les
andl
xchg
xor
mov
inc
inc
sub
add
xchg
bound
fcmovnbe
das
lods
jno
sbb
cmp
and
pop
pop
outsl
outsb
push
and
mov
or
pushf
test
push
sbb
lods
sbb
cmc
lcall
lea
rcr
cmpb
fsts
push
lock
push
leave
dec
in
mov
cli
mov
sahf
gs
adcb
push
leave
push
xchg
pop
ljmp
out
jnp
and
fdivl
insl
pop
or
xchg
lret
stos
mov
push
fstpt
sahf
mov
pop
sbb
sbb
cli
xor
jle
push
mov
test
jg
mov
into
cmc
insl
adc
inc
fcoml
loop
jae
cmc
cwtl
pop
pusha
sub
ss
lahf
pop
mov
insl
and
jl
fwait
daa
jp
push
inc
out
aas
push
test
xor
inc
push
mov
pop
dec
das
push
test
orl
mov
fstpt
loopne
lds
xchg
jnp
jp
push
cld
pop
push
aaa
push
adc
jb
lret
jecxz
in
mov
mulb
xchg
push
ja
jl
aas
pop
leave
or
movsl
jo
insl
imul
pop
cli
inc
jge
imul
jbe
test
inc
repnz
jns
dec
lcall
bound
fwait
xor
es
xchg
dec
inc
sub
mov
or
or
xchg
test
push
cmp
mov
fwait
push
cmpsb
sub
loopne
add
inc
mov
xchg
mov
movsb
loope
iret
dec
xchg
adc
cld
faddl
xchg
mov
dec
test
inc
ficomps
movsb
int3
daa
dec
outsb
push
les
aam
mov
sub
adc
bound
inc
neg
fs
das
lret
pop
icebp
std
push
or
sub
out
jnp
lret
loope
es
out
sub
add
js
push
out
jg
fs
mov
stos
xchg
mov
jmp
mov
and
add
xor
inc
push
lcall
repnz
xlat
xor
xchg
cltd
pop
jg
cmp
cmp
mov
and
xor
mov
push
jecxz
inc
cmp
addr16
push
lock
lea
neg
fmull
orb
lods
xor
and
dec
inc
test
dec
loop
paddusw
xor
mov
cmp
mov
les
std
fbld
sarl
notl
jnp
mov
pop
xor
push
cli
push
daa
push
loope
push
lcall
or
lcall
inc
insl
jnp
pop
jmp
adc
pop
push
add
loope
js
ret
or
xor
repz
or
jge
aam
dec
sbb
scas
mov
leave
jmp
loopne
in
daa
in
pop
xchg
sarl
mov
cmp
dec
out
xchg
out
insl
out
insb
out
pop
fcomps
inc
lcall
inc
mov
pop
int
fs
sub
push
cmc
movsb
fisttps
test
stos
das
mov
pop
xor
test
xchg
inc
add
sbb
inc
push
andl
sbb
lds
ss
mov
mov
std
imull
sub
inc
aad
lret
add
sub
stos
pop
add
jecxz
sub
fscale
adc
mov
sbb
daa
xchg
mov
lds
mov
inc
inc
andl
rolb
jns
pop
dec
or
mov
sub
popa
and
out
out
push
pop
repz
cld
fimuls
je,pt
mov
cmpsl
dec
enter
sar
ffreep
xchg
inc
sub
scas
add
fisubrs
test
mov
out
push
pop
xor
mov
enter
pushf
cmp
lock
jle
stos
movsb
sbb
popa
sbb
sti
dec
arpl
ret
aad
dec
add
sbb
lock
mov
mov
das
mov
and
xchg
push
and
scas
aaa
jge
mov
pusha
fidivl
es
je
cmp
repz
in
push
dec
push
pop
daa
loope
flds
add
pop
test
ficoms
test
out
enter
cvtps2pi
push
mov
aad
lds
adc
mov
mov
insb
lock
in
xlat
out
push
gs
pop
sbb
push
jg
xchg
pop
pop
test
sub
fisubrl
ss
pop
push
or
iret
cmpsl
xchg
pop
pop
les
divps
int3
pop
xlat
ds
scas
lods
pop
bound
gs
fisubrs
clc
stc
aam
and
lods
lods
addr16
clc
loope
loop
cmp
shll
mov
mov
xchg
idiv
xor
shr
jae
push
jg
pop
loopne
repz
cs
fdivrl
add
cmpb
and
imul
pop
or
xchg
ja
and
mov
jge
lcall
mov
cmp
pop
out
lods
and
addl
ljmp
adc
orl
lods
mov
popa
fsub
push
push
loop
xor
je
pop
inc
push
repnz
leave
mov
rep
and
jg
xchg
data16
insl
dec
cmp
arpl
mov
pop
xchg
or
repnz
btr
pop
out
jl
xchg
mov
inc
pop
xchg
lds
pop
cs
jnp
cwtl
cs
fwait
pusha
movsl
insl
add
sbb
cmpsb
dec
js
add
push
or
push
and
das
shll
stos
fldl
decl
cmpsl
in
scas
dec
insb
repnz
insb
ficoms
cltd
xlat
sbb
aam
and
adc
lahf
pop
pop
ficoms
outsl
push
jecxz
dec
xchg
std
mov
ret
pop
test
xchg
sbb
mov
les
imul
xlat
hlt
xchg
pop
jb
fptan
jns
addr16
xor
sub
and
js
daa
and
lds
sub
adc
sbb
push
xor
sbb
movl
loopne
xchg
gs
repnz
fstp
pop
jg
xor
mov
inc
rorb
aad
sbb
ljmp
sbb
xor
add
addr16
les
and
xlat
movsl
push
adc
std
bound
pop
or
mov
jg
xlat
jecxz
add
xchg
mov
push
push
ffreep
inc
push
sbb
xor
test
das
sub
pop
mov
cld
xchg
rorb
cltd
lods
daa
xchg
sbb
xchg
imul
repnz
test
jns
adc
hlt
aas
add
cmp
dec
ret
fsubs
xor
fs
pushf
inc
pusha
adc
fildl
mov
dec
or
mov
shll
fistl
dec
jle
inc
ficoml
sti
dec
test
lods
aam
mov
data16
nop
push
sarb
sbb
jl
jl
mov
pop
pop
sub
nop
push
fcoml
das
mov
mov
adc
pop
leave
add
sub
shrl
dec
mov
sub
in
jns
pushf
jle
aad
testb
mov
sub
xor
push
hlt
inc
pop
inc
loop
int3
lret
lahf
jns
pop
push
shrl
push
dec
sub
inc
or
stos
mov
mov
mov
xor
int
outsb
clc
fcomip
sub
xchg
subl
sti
sbb
cmp
jns
lds
enter
pop
jp
cltd
mov
inc
int3
mov
mov
sti
sub
adc
lcall
pushf
xchg
inc
std
and
pushf
push
xchg
mov
mov
xchg
test
fiadds
sbb
orl
sarb
mov
and
stos
and
add
lds
dec
aad
mov
mov
add
repnz
push
aas
js
xchg
int
pop
inc
xchg
dec
into
jge
sub
imul
dec
std
idivb
stc
ljmp
jge
xor
add
add
sahf
les
cmpsb
insb
fistpl
shlb
test
decl
sub
and
mov
and
shll
push
jno
repnz
fbld
stos
ret
fstl
pop
stos
paddusb
xor
cmp
ja
test
or
fwait
out
xchg
mov
or
out
test
pop
popa
cvtsi2ssl
pop
xchg
sbb
shr
sahf
mov
fidivrs
or
and
xchg
sub
leave
cmpsb
jle
push
mov
adcl
bound
cli
cli
subb
push
outsb
adcb
adcb
je
stc
mov
test
mov
in
rcl
inc
pop
mov
push
insl
outsb
xor
jnp
jge
add
insl
mov
iret
popf
or
int
ret
jbe
int3
mov
xchg
push
mov
mov
push
test
gs
jo
add
call
fstl
jne
xlat
xchg
adc
arpl
and
icebp
jp
inc
or
es
push
cmpsl
lahf
adc
jl
in
stos
jg
dec
std
mov
movsl
ffreep
repnz
adc
pop
sbb
lods
jecxz
mov
add
fmull
subb
and
push
lret
lods
arpl
fidivrl
mov
xlat
shl
or
inc
push
movl
pop
mov
or
js
in
cmpsb
shlb
jnp
mov
dec
enter
std
stos
push
imul
pop
mov
sub
fs
shrb
cmp
jmp
gs
je
les
lahf
inc
xorb
inc
dec
pushf
pop
push
cmp
mov
jmp
dec
lods
xchg
in
lds
jno
inc
and
jns
ds
aam
aaa
test
fldl
cli
lea
pop
adc
jecxz
sbb
mov
or
add
sbb
mov
mov
sahf
in
cmpsl
adc
add
es
sahf
add
mov
add
mov
dec
pop
sub
or
movb
nop
mov
cwtl
push
jmp
sbb
push
cwtl
shll
mov
pop
shr
scas
pop
jo
add
inc
inc
cmpb
movsb
sbb
arpl
movsb
subb
sahf
cmpsl
ret
mov
xchg
loope
aam
shl
lods
add
xchg
gs
ret
adc
mov
cltd
jmp
outsb
pop
jae
sbb
repnz
mov
jmp
icebp
shl
xlat
mov
shll
jo
mov
mov
imul
push
jp
ja
sub
xchg
js
sbb
scas
and
loop
lcall
adc
subl
dec
sub
movsl
xor
pop
cmp
sbb
test
shlb
hlt
xchg
test
fidivs
int
lahf
jo
out
icebp
lods
jns
test
mov
xor
hlt
cld
fdivr
fsubrp
or
aaa
xchg
sbb
test
arpl
cs
pop
mov
jge
adc
xchg
in
ret
push
sbb
mov
sar
pushf
jmp
ret
std
add
pop
dec
sbb
jle
sbb
out
lret
pop
sub
test
mov
addl
mov
push
faddl
add
mov
mov
xor
inc
xor
cld
mov
enter
dec
movsl
insl
sub
push
inc
xor
fs
in
jno
jo
lret
jae
jbe
popa
adc
and
pop
xchg
pop
and
pop
bound
jmp
mov
jno
fisubrl
jge
ds
sub
mov
jle
int
jge
adc
out
loopne
int3
arpl
lcall
cmp
mov
stc
mov
inc
or
push
dec
std
jnp
fs
pop
das
movsl
in
in
sbb
and
call
loope
push
hlt
outsb
sub
fistpl
fwait
mov
push
fwait
sbb
push
push
scas
mov
ret
scas
pop
cwtl
jne
ljmp
dec
xchg
stos
lcall
pop
sbb
cwtl
jecxz
inc
and
test
mov
lods
add
and
dec
push
movsl
jge
or
push
movsb
mov
mov
push
in
ss
xchg
movsl
and
cmpb
adc
in
cld
mov
lock
pushf
cli
mov
lea
add
or
mov
mov
mov
subl
mov
es
sub
pop
fistl
iret
cmc
mov
pushf
out
movsb
rolb
fisttpl
out
and
xchg
push
test
dec
xchg
sub
jecxz
pushf
or
add
ret
pop
in
leave
xlat
push
aam
shlb
push
fisubrs
xor
jns
loop
sub
cli
pusha
cmpsl
shlb
jl
xchg
cmpb
call
adc
loopne
cmpsb
xor
xchg
dec
test
into
fidivrs
sub
mov
xor
jnp
jg
into
xchg
or
jmp
gs
xchg
and
lret
push
push
in
add
mov
inc
mov
mov
test
push
mov
aam
icebp
mov
mov
lods
or
cmp
ret
xor
jle
int
gs
and
fiadds
ret
imul
ficoms
fldl
push
push
scas
push
ja
inc
cltd
jb
insb
push
inc
out
xor
push
loopne
iret
icebp
leave
loope
mov
sub
xchg
leave
mov
sbb
xor
pop
and
sub
lock
push
or
insl
push
sahf
inc
es
and
test
jb
shll
out
jne
add
out
jecxz
loopne
insb
outsb
adc
jg
test
push
adc
xor
add
adc
cmp
scas
jnp
adc
enter
or
js
fidivl
pop
jp
daa
sub
sub
jae
notb
adc
adc
xor
sti
xchg
or
fcom
or
test
pop
add
push
lret
mov
test
xor
fmull
in
push
aaa
test
push
fcomps
popl
adc
xlat
out
mov
fs
adc
dec
add
lds
mov
fcmovb
jge
push
addr16
in
outsb
adc
xchg
mov
or
std
aam
pop
xchg
mov
mov
mov
aam
jge
scas
scas
daa
scas
fistl
test
rorb
inc
sub
out
push
scas
or
cli
mov
or
cmp
push
sbb
pop
dec
xchg
cmpsb
and
sbb
lds
jne
movsl
insb
xchg
gs
movb
xor
cmc
leave
ljmp
aam
dec
xor
iret
adc
mov
jno
outsl
mov
xchg
jp
xchg
push
mov
cli
and
mov
loope
std
icebp
ss
sub
push
xchg
test
clc
sub
sub
mov
mov
xchg
aam
dec
add
jbe
or
cmp
jge
test
stos
xor
mov
dec
outsb
or
xor
movsb
loopne
frstor
add
jno
inc
cmovnp
lods
pop
test
out
mov
pusha
cmp
push
xchg
divb
and
negb
cmp
dec
cmc
pusha
sub
add
stos
lods
mov
jmp
dec
mov
pop
fwait
addr16
xchg
cli
cmp
xchg
sub
mov
std
mov
cwtl
xchg
and
xor
into
mov
lahf
bound
pop
inc
movsl
inc
in
fbld
icebp
into
mov
jae
ljmp
pusha
fwait
arpl
pop
mov
mov
xor
push
jl
ds
rol
mov
bound
xor
in
fisubrs
cld
adcb
loop
ljmp
outsl
stos
divb
je
orb
mov
cmp
push
sbb
inc
loop
dec
pop
mov
popa
fisubrl
adc
pop
mov
aad
or
adc
outsl
pop
stc
mov
push
stos
push
sub
cmc
out
dec
je
add
dec
push
mov
dec
push
stos
pop
adc
iret
mov
dec
adc
ss
iret
cmp
inc
rcll
filds
pop
jbe
shrb
mov
adc
sub
leave
int3
stos
mov
inc
lcall
and
push
aaa
stos
dec
cmp
push
adc
inc
push
push
icebp
iret
cwtl
not
daa
cmp
js
cli
out
lcall
mov
cmpsb
cmp
mov
movsb
nop
mov
mov
fldcw
jl
cld
push
sbb
mov
pop
popf
jno
movsl
rorb
sahf
lods
mov
rcrl
mov
fwait
es
jecxz
lods
add
outsl
lcall
rolb
jb
jne
jp
das
sub
pop
int
cmpb
jne
in
inc
push
mov
test
ja
aas
in
cmp
pop
movsb
loop
fdivs
gs
push
lret
xchg
mov
mov
inc
jne
gs
mov
push
pop
cmpl
cwtl
ret
jns
pop
or
in
pop
dec
testb
mov
pusha
push
mov
xchg
testb
pop
fidivrl
add
and
imul
or
dec
into
shlb
xor
xchg
add
dec
fiaddl
fcomps
jb
push
xchg
cmp
aad
mov
mov
sbb
out
insl
add
ljmp
lret
pop
and
jecxz
repnz
andl
adc
gs
xchg
mov
adc
push
xchg
dec
fldcw
mov
lahf
repz
cmp
pushf
pop
and
jo
jnp
in
jb
into
pop
aad
fsts
mov
pop
or
mov
dec
mull
add
push
xchg
cli
mov
fs
xor
cwtl
push
bound
push
mov
and
pop
mov
insl
inc
inc
mov
sub
add
pop
mov
sbb
jp
shr
sbb
sub
hlt
imul
adc
add
xor
and
push
lret
inc
sti
xchg
or
aam
les
imul
adc
add
xor
and
push
lret
inc
sti
xchg
lfs
aam
movsb
cmp
pop
hlt
push
jnp
mov
les
push
sti
orb
sbb
sub
hlt
jmp
test
sti
xor
inc
int3
and
adc
add
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
stos
cs
sbb
or
pop
dec
loopne
cmc
das
mov
lcall
add
xor
and
shrl
rcrl
or
jnp
imul
push
stos
popa
cli
jno
popa
sti
jle
add
jno
and
inc
sub
sbb
jecxz
lods
imul
mov
adc
inc
movsb
and
sub
lock
dec
or
push
test
xchg
mov
and
in
jg
mov
outsb
pop
cmpsb
shrb
dec
pop
jp
fs
icebp
jecxz,pt
je
adc
sbb
jno
adc
shll
xor
jmp
iret
jg
loope
rclb
sub
cld
je
inc
xor
add
mov
cld
adc
sarl
loope
pop
jnp
inc
jmp
stos
scas
insl
adc
adc
jb
aam
dec
mov
arpl
pop
mov
ficoms
mov
popa
test
addl
and
ret
adc
jl
loopne
fistpl
icebp
lea
push
jge
out
mov
jns
adc
fidivl
lret
shrl
xor
jne
jmp
xchg
imul
xlat
stos
xchg
cmp
lret
dec
dec
subl
mov
iret
cmp
push
out
sbb
cs
rcll
sbb
add
cmpsl
jne
jo
inc
fs
push
les
decb
mov
fbstp
int
xor
pop
jecxz
out
push
mov
cwtl
dec
mov
dec
dec
xchg
cmpb
imul
push
stos
inc
fwait
jno
popa
sti
adc
add
xor
and
shrl
rcrl
or
jnp
imul
push
stos
inc
fwait
jno
popa
sti
adc
add
xor
and
shrl
push
xchg
push
pop
int
or
mov
ja
loop
adc
ljmp
out
push
and
into
xor
adc
cwtl
mov
sbb
test
or
jbe
push
adc
gs
ds
jg
inc
mov
std
cmpb
jo
dec
mov
jmp
insb
add
cmp
mov
movsl
fwait
mul
sub
scas
mov
call
fisttps
ljmp
imul
fmulp
lock
push
mov
scas
stos
sbb
push
icebp
jne
mov
adc
idivl
pop
icebp
xor
arpl
sti
xchg
fldl
mov
pushf
cmp
cmp
xchg
push
inc
adc
dec
aad
adc
nop
inc
clc
cli
inc
not
and
xchg
xchg
dec
int3
pop
cld
int3
add
jae
and
pop
popw
pop
push
ret
movsb
jbe
push
xchg
test
ss
xlat
adc
enter
xor
pop
in
push
les
negb
or
xchg
mov
mov
loope
add
popa
xorl
ror
scas
xor
je
imul
mov
lods
decl
dec
rorb
mov
jmp
movsl
pop
adc
pop
sub
mov
push
pop
xorb
push
fcmovnbe
jl
push
dec
lea
jbe
xchg
pop
sarb
imul
gs
xchg
pop
fisubs
fisubs
sub
jne
popf
icebp
push
adc
scas
or
cs
pop
incb
test
inc
cmpsl
inc
xor
inc
daa
jb
ljmp
fildll
stc
mov
or
pusha
test
inc
sub
xor
xchg
das
andl
dec
or
inc
fdivl
dec
dec
lret
jmp
cwtl
mov
js
mov
jno
sub
test
div
or
in
decl
xchg
aad
push
ficomps
and
lds
push
pusha
inc
setbe
mov
mov
daa
movsl
add
mov
add
inc
lret
jb
hlt
std
mulb
push
imul
out
in
pop
in
mov
add
daa
stc
hlt
mov
mov
nop
scas
outsl
cmp
roll
adc
enter
jecxz
in
push
mov
mov
inc
xor
mov
and
add
pusha
stos
in
sar
ret
test
lds
repnz
pop
xchg
je
mov
daa
adc
test
add
test
push
lods
rcr
jno
test
inc
xchg
jnp
call
dec
hlt
xor
iret
mov
pop
jns
hlt
pushf
daa
int
ljmp
int3
cmp
inc
jno
hlt
roll
aas
push
sub
inc
lcall
jbe
xchg
mov
mov
fistl
push
adc
or
cltd
ljmp
mov
push
mov
ror
je
loope
mov
pop
jl
and
jmp
insb
push
aaa
fadds
out
mov
aam
icebp
scas
out
clc
test
sti
aas
sbb
or
test
pop
sbb
test
cmc
jae
mov
ss
aad
jae
shll
xchg
sub
and
push
xchg
fisubrs
addl
fdivl
cmp
inc
jge
fsubrp
xchg
lods
iret
ja
add
pop
in
fdivrs
je
stc
cwtl
hlt
ret
jl
jnp
pop
sub
mov
lahf
sti
sub
jp
add
fadds
and
mov
xchg
sti
xchg
lods
shrb
mov
call
sbb
cli
xor
mov
call
nop
out
cmc
ss
mov
jl
push
pop
add
pop
mov
jg
mov
pop
and
xchg
loop
sub
outsb
push
arpl
dec
pop
inc
leave
mov
sub
pusha
add
mov
pop
inc
push
out
sti
jle
jae
in
mov
mov
mov
push
shlb
push
push
jecxz
xchg
sbb
push
jbe
ss
add
and
adc
mov
inc
in
aaa
push
sub
pop
add
faddl
aam
jmp
mov
les
test
into
and
sub
dec
and
mov
out
jmp
pop
std
js
stos
nop
or
test
xchg
aas
sbb
sti
sub
pop
pop
mov
inc
mov
xchg
stos
sar
pop
xor
push
push
push
fwait
and
or
rol
rolb
xor
xchg
ja
in
aad
pop
lret
sar
hlt
stc
iret
xchg
mov
inc
pop
std
fwait
leave
out
insl
xor
shr
jo
fbld
sbb
je
clc
int3
shlb
and
repz
mov
mov
mov
push
insb
test
popf
inc
add
inc
push
mov
mov
nop
xchg
add
push
lods
loopne
stos
xchg
ficomps
jb
popa
mov
test
repz
push
ret
scas
mov
add
cltd
mov
push
loopne
movsb
aas
dec
push
push
stc
adc
clc
mov
mov
mov
pop
inc
fmul
pop
adc
push
inc
adc
testb
xchg
push
cli
popf
imul
lahf
in
test
lock
out
dec
dec
adc
cmp
sub
pop
popf
outsb
mov
sub
jg
mov
imul
pop
pop
cmp
mov
inc
pushf
jne
adc
loopne
lods
inc
or
cs
fcmove
xchg
mov
pop
sti
pop
mov
mov
xor
and
pcmpgtd
mov
mov
add
pusha
leave
mov
push
stc
jp
xchg
add
adc
loop
call
subb
add
cmp
stos
scas
es
jecxz
repnz
mov
insb
stos
ljmp
xor
daa
add
push
and
or
mov
nop
aas
mov
testl
or
inc
and
imul
shlb
xchg
cmp
call
dec
aaa
push
test
adc
xor
loop
outsb
pop
sub
es
int
xorb
sbb
jns
icebp
add
mov
dec
imul
jnp
lods
mov
push
lods
lods
xchg
leave
push
add
cmp
inc
add
mov
inc
data16
sarl
repnz
fdivr
cmp
xor
adc
sbb
scas
dec
push
addl
cltd
lret
pop
xor
imulb
add
push
icebp
pop
or
jb
cld
mov
mulb
sbb
gs
mov
sahf
jmp
add
mov
mov
out
jle
jp
add
or
in
nop
and
pop
scas
fsubrl
cmp
sbb
int
inc
pmulhw
insb
imul
aaa
sar
push
cld
in
lods
jle
sahf
lret
jnp
pusha
push
jns
shlb
jl
popa
adc
cmpsl
mov
enter
push
arpl
mov
cmc
popa
xlat
jns
jl
cmpl
aad
xor
dec
adc
mov
jns
fisttpll
aam
fisttpll
push
mov
sub
filds
fldln2
lret
sbb
sti
pop
sbbb
mov
push
frstor
int
mov
out
mov
sti
insl
mov
mov
das
xchg
and
mov
mov
notl
jecxz
out
adc
sub
dec
mov
mov
jo
jno
das
sbb
mov
test
stos
sbb
das
xlat
dec
mov
pop
fwait
aaa
pop
lock
adc
xor
ja
stos
shll
cmpsl
imul
xor
adc
lahf
mov
mov
icebp
stos
lods
icebp
repz
andl
mov
xchg
dec
hlt
mov
stc
push
and
test
xchg
push
jne
jmp
mov
sbb
repz
mov
xor
imul
imul
inc
scas
xchg
mov
lahf
add
add
xor
ret
testl
movsl
fildll
and
mov
cmp
xlat
cltd
in
enter
xchg
test
pop
or
mov
pop
and
repz
inc
test
mov
push
xor
test
icebp
add
jmp
or
ljmp
out
or
push
pop
mov
sub
leave
pop
xchg
in
lcall
insb
and
repz
sbb
stos
mov
mov
aam
xor
cli
xor
lahf
pop
lea
mov
test
into
aas
cmp
jb
push
and
xor
pop
lock
add
in
fwait
int
xor
sarl
adc
aam
nop
cmp
xchg
pop
out
mov
push
mov
mov
mov
rclb
add
mov
fwait
xchg
sub
jnp
fisubl
mov
add
orb
mov
xchg
xchg
fldcw
mov
pop
cli
cmp
mov
pop
push
sbb
test
push
subl
repnz
jnp
sbbl
pop
std
add
cmp
sub
addl
pop
test
xchg
mov
shr
cmp
ja
jae
push
stos
scas
xchg
pusha
movsb
fldenv
add
ret
lret
push
pop
push
imul
jp
mov
aad
jecxz
inc
mov
dec
into
mov
fnstcw
sub
loopne
dec
dec
xlat
lea
cwtl
fsts
push
xchg
out
aas
and
lcall
ret
push
sub
imul
popa
call
pop
mov
sub
or
outsl
jecxz
cmp
icebp
dec
aaa
cmpsb
test
scas
mov
and
push
out
mov
pop
fstpl
movsb
repz
inc
pop
push
adc
out
mov
mov
imul
addr16
mov
repnz
test
movsb
std
xorb
jbe
cli
lods
xchg
mov
dec
in
shlb
pop
notb
mov
stc
ret
divl
add
loopne
jno
cmp
inc
pop
addl
push
pop
ret
xchg
popf
popf
cmp
aad
test
arpl
cltd
jecxz
ror
out
xchg
stc
icebp
pusha
dec
je
dec
mov
mov
inc
test
movsl
push
cwtl
inc
adc
in
mov
cmp
pusha
decl
fdivl
in
push
sbb
or
lret
popf
dec
clc
push
lahf
faddp
dec
into
lcall
enter
lods
sarb
lret
leave
movsl
cmp
or
mov
dec
pop
mov
lods
cmp
mov
push
jle
lock
jno
rolb
dec
rcrl
xchg
mov
jge
or
xchg
mov
mov
jg
or
dec
aaa
inc
sbb
ret
dec
lock
ja
fldcw
xor
stos
jae
add
rcrl
mov
rcrl
jl
sbb
in
jmp
pop
mov
jg
jbe
out
aas
sub
daa
and
movsb
jecxz
sbb
cltd
sbb
cwtl
xchg
mov
inc
out
inc
dec
cli
jmp
imul
pop
into
hlt
test
mov
cmp
cs
xchg
fists
sub
cs
mov
sbb
scas
addb
into
mov
xor
push
bound
lret
popf
int3
cs
enter
add
loop
movsb
sar
push
adc
mov
push
jl
rolb
mov
cltd
psrlw
mull
push
pop
dec
cwtl
arpl
mov
stos
xor
stc
lock
in
pop
cmp
fcoml
jle
rorb
dec
sub
and
insl
inc
xchg
pop
sbb
insl
xor
push
mov
mov
push
frstor
lea
cltd
or
cmp
xchg
inc
rcrl
imul
jl
cmp
xchg
fistpll
das
pop
cmp
in
pop
pusha
xchg
push
mov
test
dec
and
inc
ljmp
pop
shrb
lret
sbb
andb
pop
popf
adc
nop
fistl
sub
shrl
addr16
popf
int
xor
cmp
movsb
sbb
adc
pop
inc
aaa
add
push
mov
dec
or
jo
pop
push
xchg
lods
movsb
cwtl
je
les
aad
lods
loopne
push
repz
pop
adc
stos
test
push
ret
xchg
call
mov
aas
jmp
inc
scas
cmc
add
jp
aas
leave
dec
fmuls
cmc
pop
mov
stos
out
pusha
pop
movsl
inc
xchg
fwait
jle
call
lret
pusha
jmp
and
jge
pop
cmp
into
mov
jecxz
sbb
lds
jp
xchg
std
dec
sahf
sub
shl
push
adc
adc
inc
pop
test
ret
in
jecxz
popf
add
adc
xchg
int
mov
mov
or
lahf
sbb
fcmove
test
push
jnp
enter
es
inc
das
sub
in
fnstsw
mov
cs
sub
or
cmpsl
mulb
rorl
mov
das
sbb
popa
mov
aad
jg
mov
mov
int3
push
aaa
cltd
xor
aas
test
jns
and
adcb
outsb
sub
push
sbb
in
popf
cltd
loopne
aad
cli
push
xor
cltd
sbb
ret
fwait
les
repnz
pop
rorl
sub
xchg
cli
ret
mov
push
inc
mov
sub
jl
cmp
aas
in
leave
push
inc
xor
insl
xchg
sub
cwtl
lods
inc
outsl
inc
fwait
repz
into
mov
cmp
daa
enter
loop
stc
lds
pop
jno
outsl
jns
pop
adc
sub
dec
clc
add
ds
dec
clc
aas
test
xchg
sub
aas
pop
mov
bound
int3
lahf
add
adc
mov
lahf
sbb
in
jbe
sbb
sbb
mov
es
ja
movsb
vcvttsd2usi
pop
nop
push
cmovne
iret
dec
mov
mov
cmpb
pop
pushf
into
mov
dec
inc
aas
pop
test
push
pop
les
fldt
ret
jp
rclb
and
leave
cmp
js
lret
jecxz
cmp
xor
fs
test
out
sub
mov
test
push
loope
mov
jle
scas
jbe,pn
int3
pop
mov
and
adc
mul
and
inc
gs
leave
and
loope
push
push
jmp
inc
sbb
mov
cmp
cmc
enter
loope
in
add
bt
fs
or
xor
andl
loope
mov
and
repz
dec
xchg
and
jmp
jl
rcrb
mov
out
iret
jae
or
mov
fistpll
nop
sbb
inc
repz
cmp
stos
aaa
or
cmp
add
scas
movsl
cmp
loopne
mov
aaa
fcmovne
sub
lea
inc
pop
ja
ljmp
js
outsl
pop
fs
cli
stos
xlat
jmp
push
je
mov
jo
pop
fstps
push
imul
and
and
test
aad
lds
insl
inc
test
lcall
mov
or
idiv
out
mov
sub
jbe
andl
mov
or
and
xchg
test
lret
xor
cli
lock
xchg
xchg
popa
pop
jne
repz
scas
mov
or
cwtl
push
xchg
sub
std
pop
insb
cmp
cwtl
cmp
jl
dec
dec
iret
sbb
lds
push
imul
test
stos
cmp
fcoml
imul
sbb
std
or
mov
daa
ret
sar
push
aam
and
ss
jge
lahf
mov
dec
stc
cli
scas
test
repz
cmp
decb
jl
aam
repnz
out
outsl
pusha
sahf
adc
push
inc
adc
popa
and
xchg
leave
sbb
out
add
lahf
push
icebp
incb
pop
fildl
and
dec
shl
jmp
lds
xor
push
and
out
movsb
out
sub
imul
inc
or
cwtl
fidivs
lods
push
push
cwtl
pop
jp
mov
sub
shl
pop
xor
mov
dec
negb
adc
pop
sbb
xlat
adc
or
add
mov
dec
add
ja
out
lahf
dec
inc
mov
sub
dec
push
popf
xchg
mov
pop
pop
inc
push
lcall
mov
iret
sbb
mov
jae
inc
cmpsl
xor
cwtl
inc
cmp
dec
or
clc
loop
mov
addr16
repnz
out
stos
cmp
inc
adc
imul
adc
inc
arpl
into
js
mov
out
xchg
roll
push
jno
insb
ss
cmp
dec
lock
je
pop
pop
add
cmp
cmc
xor
push
hlt
pop
jg
lret
xchg
out
xor
aas
mov
into
movsl
in
jmp
in
mov
fcmovu
mov
push
xor
cmp
xchg
dec
cltd
lcall
cli
push
and
js
jne
pop
rorb
jl
das
outsl
daa
scas
les
sbb
inc
mov
pop
mov
mov
or
js
and
aam
mov
or
in
nopl
add
dec
pusha
test
outsl
leave
jl
push
cmp
sbb
in
cmp
loopne
inc
sub
fs
push
cmp
mov
insl
push
jne
dec
add
mov
rolb
mov
mov
xor
add
inc
mov
mov
aad
cli
pop
mov
sub
ret
adc
jp
imul
push
rorl
loop
std
sarl
das
or
sbb
fstpt
push
jmp
fs
js
mov
push
push
or
jge
addb
icebp
or
pop
in
push
mov
stc
sbb
adc
or
mov
lods
jecxz
addps
jge
pop
jne
es
jg
fmull
sub
lret
lds
mov
add
in
cld
jg
test
xor
out
outsb
push
fdivrs
bound
sub
inc
inc
in
pop
pop
dec
jno
push
push
icebp
lods
jo
inc
sbb
lahf
add
adc
cmp
jnp
ja
shll
xchg
test
out
leave
cmp
fsubrl
xchg
dec
les
adc
sbb
stos
cli
jo
mov
in
sub
test
pop
add
int3
inc
jecxz
push
jmp
popa
rorb
aad
xor
xchg
jbe
hlt
mov
lds
movsl
out
fstpt
sub
inc
jns
out
retw
enter
adc
sub
fisubrs
cmpsl
iret
les
dec
outsb
add
mov
jg
sbb
div
mov
in
sbb
and
xor
add
jle
cmp
shlb
mov
xor
outsb
mov
fstpt
jae
xor
push
int3
arpl
repnz
push
adc
dec
push
xor
jne
movsl
add
sti
jl
push
sbb
test
and
or
sahf
add
jl
loopne
mov
sbb
std
js
test
add
js
adc
fsubs
or
pop
fsubrl
and
push
movsl
push
inc
stos
cmpsb
or
inc
test
mov
jmp
cltd
lcall
jae
mov
bound
mov
add
ss
mov
bound
mov
hlt
mov
loopne
sbbb
jno
ss
mov
xor
psrld
or
insl
xchg
xchg
out
push
or
jo
adc
push
repz
cli
sahf
dec
inc
imul
aad
loope
cmp
shr
mov
sub
int
mov
imul
pop
inc
int3
pop
sbb
jl
push
cmc
mov
mov
mov
incb
push
out
inc
rcll
jae
out
fsubs
or
icebp
dec
mov
das
mov
stos
pop
or
and
xchg
fdivs
les
lods
sbb
and
into
fwait
hlt
inc
shrl
sti
sbb
jne
mov
jmp
std
shlb
icebp
dec
push
fcmove
insb
sub
mov
scas
sbb
aaa
mov
mov
cld
std
cmp
and
imul
cltd
dec
and
stos
leave
in
inc
ljmp
xor
mulb
mov
mov
and
adc
dec
sub
ss
jne
dec
aad
inc
inc
into
stos
adc
adc
mov
ficomps
sbb
push
add
sbb
pop
iret
loope
and
and
fsubrs
mov
loope
push
out
push
gs
mov
fmull
mov
daa
cs
jbe
stos
idivb
or
cli
mov
pushf
ja
filds
jb
mov
mov
jmp
dec
dec
fildll
push
mov
lock
and
mov
cmpsb
mov
push
push
push
cmp
mov
jg
and
xor
xor
js
das
cmc
in
pop
sub
xlat
sbb
jbe
orl
xchg
out
or
jnp
imul
push
stos
inc
fwait
jno
popa
sti
adc
add
xor
and
shrl
rcrl
or
jnp
imul
push
stos
inc
fwait
jno
popa
sti
adc
add
xor
and
shrl
mov
mov
loope
xchg
imul
mov
mov
fwait
jno
popa
sti
adc
add
adc
and
shrl
rcrl
or
jnp
imul
scas
stos
jmp
jno
push
mov
xor
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
