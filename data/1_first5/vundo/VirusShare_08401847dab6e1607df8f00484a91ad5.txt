add
and
mov
shl
add
mov
jmp
add
pop
add
add
mov
call
call
cmpl
jne
jmp
ror
ror
mov
sub
push
jmp
movl
jmp
add
add
add
in
mov
and
sub
jmp
push
jmp
jmp
call
jmp
subl
call
ret
add
add
add
adc
test
je
add
jmp
sub
test
jne
push
jmp
call
call
call
dec
ret
subl
call
sub
and
and
sub
sub
mov
jmp
sbb
add
add
add
xor
dec
mov
sub
cmpl
lea
je
push
push
add
mov
mov
jmp
cmpb
jne
nop
nop
xor
xor
mov
nop
push
nop
jmp
add
add
jmp
push
push
mov
mov
mov
add
add
mov
jmp
call
mov
rol
and
inc
add
shr
mov
movzwl
movzwl
add
and
and
mov
shr
mov
lea
sub
jmp
sub
shr
test
lea
jle
shl
mov
or
inc
mov
jmp
lea
jmp
cwtl
cmp
lea
ror
shr
mov
add
push
call
shl
shl
sub
and
shr
mov
cmp
jmp
mov
add
jmp
int
or
dec
and
sub
mov
and
cmp
jne
jmp
je
mov
sub
inc
rol
mov
test
jne
and
mov
mov
mov
sub
ror
add
add
mov
lea
ror
dec
shr
mov
jmp
jmp
pushl
call
add
pusha
jmp
sub
shl
mov
nop
nop
nop
nop
nop
sub
test
jne
jmp
xor
shr
add
mov
mov
jmp
add
add
add
push
ror
xor
rol
xor
sub
mov
jmp
sub
xor
xor
and
mov
add
add
xor
cmp
jmp
call
mov
mov
mov
xor
mov
mov
lea
push
jmp
iret
mov
jmp
xor
and
xor
inc
inc
mov
mov
add
jmp
lea
push
movb
movb
movb
call
jmp
add
add
add
lds
mov
add
mov
rol
ror
mov
sub
mov
push
jmp
push
jae
call
jmp
xor
ret
jmp
mov
jmp
mov
mov
mov
mov
movl
jle
jmp
push
inc
inc
mov
push
mov
mov
jmp
int
add
add
push
jmp
subl
pushl
call
pushl
ret
add
sub
inc
mov
jmp
sub
popa
add
add
xor
add
add
call
lea
addl
call
jmp
repnz
ret
shr
lea
lea
cltd
and
add
sar
test
jmp
mov
or
mov
shl
sub
or
mov
test
jne
jmp
test
jmp
add
add
mov
test
je
push
push
mov
jmp
mov
mov
sub
mov
push
mov
jmp
push
mov
mov
mov
mov
jmp
mov
mov
jle
jmp
test
jmp
mov
call
popa
jmp
mov
ret
add
add
add
add
movl
nop
nop
add
sub
jmp
add
fimull
add
add
add
adc
flds
dec
add
add
add
add
adc
out
dec
sub
and
mov
mov
sub
sub
dec
sub
mov
add
mov
jmp
add
test
je
jns
movzwl
push
jmp
sub
jmp
jne
jmp
add
add
mov
call
movb
add
mov
test
push
mov
movl
mov
jne
jmp
mov
and
add
xor
mov
movzbl
add
mov
lea
mov
mov
shr
and
lea
jmp
or
add
add
mov
add
test
jne
add
cmpl
jne
jmp
les
test
jne
shl
and
mov
movzbl
add
jmp
pop
pop
pop
mov
pop
ret
add
inc
decl
adc
rolb
or
push
push
add
mov
mov
xor
mov
jmp
je
push
push
push
jmp
call
ret
add
add
add
into
xchg
add
shl
sub
or
mov
sub
test
jne
jmp
and
cmpw
je
jmp
lea
and
sub
mov
nop
nop
nop
nop
nop
sub
cmpw
jne
ror
mov
sub
mov
mov
xor
and
cmp
jmp
jmp
mov
lea
push
push
call
add
mov
jmp
jne
add
ret
mov
xor
jmp
add
add
sub
jmp
out
mov
add
add
push
jmp
movb
movb
movb
movb
call
cmp
jmp
push
jmp
call
call
xorl
push
jmp
subl
call
push
jmp
jmp
push
call
jmp
ret
addl
jmp
mov
jmp
add
add
mov
decl
mov
jmp
add
add
jmp
leave
subl
push
jmp
call
inc
call
push
call
int3
dec
addl
push
jmp
nop
pop
push
xorl
jmp
push
push
jmp
ret
mov
jmp
sete
mov
ret
pop
jmp
push
push
push
jmp
push
nop
subl
push
jmp
call
nop
call
dec
subl
push
push
jmp
call
push
nop
jmp
push
leave
push
subl
jmp
or
dec
or
mov
add
jmp
add
add
add
add
jmp
add
add
add
test
jne
push
jmp
call
nop
call
push
call
inc
int3
addl
call
add
ret
add
add
add
mov
add
mov
lea
add
xor
mov
shr
and
add
jmp
mov
mov
or
shl
shl
mov
mov
rep
movzwl
xor
rol
ror
or
mov
add
add
jmp
imul
push
pop
and
mov
shr
mov
shr
and
add
test
jne
jmp
dec
add
test
je
movsbl
rol
add
xor
mov
test
jmp
sub
add
cmp
mov
mov
jmp
jle
sub
add
xor
mov
mov
or
mov
test
jmp
add
ret
or
add
sub
shl
mov
add
mov
test
jne
add
ret
jmp
mov
mov
pop
ret
add
add
add
test
pop
add
mov
inc
mov
sub
test
mov
jne
movzbl
jmp
jne
cmp
je
add
cmp
jl
pop
xor
pop
jmp
jl
jmp
add
cmpl
jne
pop
pop
jmp
jle
or
ror
and
mov
mov
sub
sub
sub
mov
jmp
ror
mov
push
jmp
int3
push
push
jmp
call
call
ret
call
subl
call
nop
nop
nop
nop
nop
mov
mov
dec
mov
add
and
xor
or
dec
and
mov
lea
push
push
jmp
call
pop
nop
int3
addl
push
push
jmp
add
xor
mov
mov
mov
sub
mov
shr
jmp
stos
lret
in
lret
sub
and
mov
pop
ret
xor
rol
or
mov
mov
movzwl
shl
add
mov
jmp
jo
cwtl
or
mov
mov
mov
jmp
dec
scas
sub
add
add
pop
ret
jmp
and
incl
inc
dec
ss
add
test
mov
je
mov
shr
add
mov
jmp
mov
pop
add
pop
or
shl
inc
add
mov
pop
ret
add
add
add
lods
popa
add
push
add
jmp
pop
mov
pop
ret
mov
ret
add
add
add
loope
incl
shr
call
push
jmp
call
jmp
xorl
mov
call
push
jmp
dec
push
pop
ret
push
dec
dec
xorl
mov
call
push
jmp
push
pop
subl
jmp
lds
movsb
mov
mov
jle
shl
sub
sub
mov
mov
or
mov
add
add
sub
jmp
mov
call
push
jmp
push
call
subl
mov
call
add
jmp
shlb
test
jne
jmp
add
mov
sub
mov
call
add
nop
nop
nop
nop
nop
sub
or
mov
call
push
jmp
inc
leave
addl
push
jmp
push
jmp
call
call
ret
xorl
jmp
jne
test
jmp
mov
call
push
jmp
ret
call
push
push
xorl
push
jmp
push
leave
inc
call
int3
addl
push
jmp
call
push
addl
call
test
je
jmp
clc
push
add
mov
lea
inc
xor
add
add
mov
shr
and
jmp
pop
notl
adc
shl
mov
call
and
inc
add
mov
jmp
mov
push
add
ret
pop
pop
mov
pop
mov
sub
mov
pop
ret
add
add
add
rolb
mov
call
movl
lea
call
jmp
into
cvttps2pi
mov
add
add
ljmp
js
test
add
xor
movl
or
mov
shr
mov
sub
test
jne
movzbl
add
jmp
mov
mov
or
xor
xor
rol
mov
ror
or
add
and
mov
mov
mov
mov
cmp
jne
mov
jmp
gs
lea
push
and
sub
mov
jmp
push
mov
dec
sub
mov
mov
shr
and
add
subl
lea
jne
jmp
or
add
jmp
lods
pushf
ror
jmp
dec
ficomps
test
mov
je
mov
mov
sub
mov
mov
add
jmp
sahf
fdivl
mov
mov
pop
mov
pop
add
xor
and
and
and
mov
pop
ret
add
add
add
inc
add
sub
mov
mov
xor
add
sub
jne
pop
pop
nop
nop
nop
nop
nop
pop
xor
sub
mov
sub
mov
pop
ret
add
add
add
sub
add
movb
add
jmp
movzbl
and
or
shr
inc
mov
and
nop
nop
nop
nop
nop
add
add
shr
nop
nop
nop
nop
nop
mov
mov
je
test
je
add
sub
and
add
mov
sub
nop
nop
nop
nop
nop
add
sub
mov
nop
nop
nop
nop
nop
mov
jne
sub
or
mov
mov
nop
nop
nop
nop
nop
mov
movl
jmp
movl
mov
movl
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
lea
call
cmpl
jne
cmp
jne
call
test
mov
nop
nop
nop
nop
nop
je
add
mov
inc
mov
sub
add
sub
nop
nop
nop
nop
nop
mov
mov
jne
mov
jmp
sub
jmp
sub
rol
xor
or
mov
nop
nop
nop
nop
nop
movzbl
nop
nop
nop
nop
nop
shl
add
add
lea
dec
ror
or
or
mov
mov
mov
call
cmp
jb
nop
nop
nop
nop
nop
add
cmp
nop
nop
nop
nop
nop
jb
add
cmp
jae
add
test
mov
je
nop
nop
nop
nop
nop
lea
shl
xor
or
mov
sub
mov
nop
nop
nop
nop
nop
mov
add
sub
jne
mov
mov
nop
nop
nop
nop
nop
mov
and
add
mov
add
shl
mov
mov
rol
shr
mov
movl
jmp
mov
nop
nop
nop
nop
nop
mov
add
add
mov
movl
mov
cmpl
je
pop
nop
nop
nop
nop
nop
sub
xor
add
mov
sub
pop
pop
rol
add
xor
dec
xor
mov
pop
ret
add
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
push
popa
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
add
add
add
inc
insb
outsl
jae
inc
jb
jbe
jb
or
dec
jo
outsb
inc
jb
jbe
jb
add
add
push
popa
je
push
outsb
popa
insl
gs
js
outsb
jae
outsl
outsb
inc
add
imul
push
gs
outsl
jbe
inc
jb
jae
add
add
je
inc
imul
inc
outsl
insl
jo
outsb
outsb
je
add
push
add
gs
je
inc
imul
js
je
jb
arpl
jae
mov
je
push
add
filds
inc
gs
imul
je
adc
add
add
add
add
xor
add
add
add
ret
add
add
sbb
add
add
add
cmp
in
lret
xor
cmp
bound
xchg
aaa
dec
xor
xor
xor
cmp
ss
ss
xchg
ss
inc
arpl
scas
ds
lea
out
jmp
cmp
ret
cmp
xor
xor
xor
aaa
pop
aaa
pop
aaa
mov
mov
add
add
xor
xor
pop
xor
add
add
add
add
and
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
cwtl
inc
mov
sub
das
jae
push
jle
sbb
add
inc
and
sub
mov
push
fdivrl
xchg
xor
movsb
nop
aad
push
cld
xorb
pop
imul
and
jge
ljmp
mov
cli
mov
jne
fcoml
pop
inc
pop
andl
add
lods
sbb
imull
mov
push
mov
pop
or
pop
fsubr
ja
jmp
imul
or
filds
mov
aad
movsb
mov
sub
adc
aam
adc
sbb
pusha
lret
pop
das
inc
push
sub
test
int3
or
dec
addb
aad
mov
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
mov
sub
push
add
nop
or
push
sbb
aaa
ds
push
jb
repnz
int3
or
jp
in
push
xchg
adc
push
add
mov
cmp
fistpll
pop
inc
fnstsw
cmpsb
popa
sbb
js
dec
ja
sbb
push
push
inc
les
pavgw
add
pushl
mov
mov
and
add
std
lea
imul
mov
aas
clc
repnz
lods
rol
add
testb
mov
dec
xor
into
std
lret
out
gs
les
fisubrs
ss
mov
test
ss
insb
fidivrl
add
decl
add
pop
or
push
leave
mov
stos
xchg
stos
xchg
or
packsswb
sti
stos
push
loopne
mov
testb
jns
insl
cmp
cmp
aas
mov
push
cmovb
xor
xor
out
dec
fadds
mov
mov
rcl
cmp
jne
into
out
pop
push
mov
sub
mov
sahf
push
add
push
and
push
mov
xor
ljmp
fnstcw
push
call
mov
dec
add
es
fld
sub
and
add
adc
stc
movsl
push
ret
mov
stos
cli
and
imull
xchg
fs
loop
repnz
je
or
popa
xor
ja
lcall
loope
stc
add
mov
xchg
ret
jns
jo
cmpb
dec
inc
