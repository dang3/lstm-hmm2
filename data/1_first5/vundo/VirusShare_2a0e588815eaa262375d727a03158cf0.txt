mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
lldt
in
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
push
call
mov
mov
movzbl
sub
je
incl
call
call
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
in
scas
xchg
lahf
cmpsl
mov
mov
jp
das
pop
sbb
inc
das
push
pop
addr16
ja
xchg
mov
out
xlat
iret
xor
daa
fnsave
jg
outsb
push
pop
addr16
ja
xchg
mov
not
out
idivl
pop
and
jae
jnp
push
adc
add
es
hlt
scas
iret
loope
mul
adc
in
insb
ss
in
out
jecxz
or
xchg
inc
push
in
inc
sub
sti
lahf
xor
adc
out
push
std
divb
call
ret
inc
cmp
xor
dec
mov
iret
out
push
int
xlat
mov
dec
jle
adcb
cmc
loop
iret
outsl
ret
jg
add
fisubl
aaa
iret
or
clc
inc
call
cli
inc
cmp
pop
insl
cmpsb
jbe
repz
mov
dec
das
pop
iret
aaa
clc
rcrb
fmuls
xor
adc
push
shlb
mov
scas
sbb
mov
testl
in
rclb
inc
loopne
push
and
addr16
bound
scas
xchg
lahf
cmpsl
cwtl
mov
cmc
xlat
mull
pop
aaa
pop
pop
daa
push
aaa
addr16
ja
pop
addr16
push
int3
or
cli
cmpsl
jmp
fwait
mov
mov
push
insl
inc
popa
inc
adc
xor
push
sub
mov
ret
mov
mov
pop
je
push
sbb
sbb
das
xor
ret
popf
aad
rolb
out
idivl
pop
das
pop
pop
daa
getsec
jg
outsl
push
pop
addr16
ja
xchg
mov
out
xlat
iret
idivl
pop
das
pop
pop
daa
getsec
jg
outsl
push
pop
addr16
ja
xchg
dec
out
shlb
ret
popa
add
pop
mov
daa
and
mov
in
sar
dec
sbb
push
stc
pusha
cmp
out
mov
testl
outsb
mov
sbb
aaa
popf
dec
dec
sbb
mov
xor
cld
addr16
jo
add
inc
sti
sbb
or
jmp
inc
jle
jp
shll
cmp
or
mov
aaa
pop
sub
rcll
js
iret
jg
push
daa
xchg
lods
cmp
ret
add
push
add
fucom
or
xchg
scas
dec
push
daa
xchg
out
js
adc
int3
sahf
loope
clc
jecxz
push
aas
loop
int3
cmp
cmp
xor
xchg
mov
push
or
jmp
inc
data16
negb
mov
arpl
mov
dec
mov
pop
sbbl
sti
sub
fcmovnu
fwait
adc
fwait
imul
cmp
dec
xchg
call
mov
jbe
call
loopne
xor
push
pop
xor
jne
mov
mov
xor
add
adc
adc
push
and
push
mov
cmp
cmpsl
pop
stos
or
stc
jecxz
push
sar
fs
mov
pop
jge
subl
xchg
pop
js
js
addr16
mov
add
adc
out
stos
das
dec
adc
shll
icebp
sarb
jb
mov
clc
sahf
fdivr
jle
push
bound
or
mov
ss
pop
xor
jg
popf
dec
hlt
fistps
gs
inc
stos
inc
arpl
icebp
sbb
mov
lret
sahf
xchg
sbb
ljmp
inc
into
lods
lods
outsl
and
das
rcl
aam
sub
insl
sbbl
pop
pop
in
pop
lods
cmc
sub
or
in
std
add
sub
xor
cld
cltd
dec
enter
dec
adc
mov
fcmovnb
mov
mov
and
adc
push
adcl
inc
fdivl
inc
arpl
lahf
pusha
pop
stos
cld
mov
add
adc
push
lea
popf
outsl
fdivrs
and
imul
jbe
stos
daa
dec
mov
pop
and
js
jnp
lahf
pushf
scas
andl
or
fdivl
mov
loop
lods
arpl
mov
or
push
add
push
inc
or
aam
xchg
jp
sbb
xor
mov
notb
push
jae
in
xchg
inc
divb
xchg
xor
pop
adc
clc
test
test
add
imul
pushf
sub
add
ficomps
jl
arpl
or
mov
lds
es
mov
rcrl
jne
adc
ds
fs
stc
stos
mov
bound
cwtl
scas
hlt
movsb
loope
lret
lret
push
insb
jmp
add
adc
leave
insl
lods
mov
push
adc
push
mov
jl
jg
js
mov
dec
dec
fxch
jmp
and
mov
or
adc
cli
mov
je
subl
lds
fidivs
movsl
dec
and
addr16
or
cltd
cmp
jnp
popf
push
inc
andb
enter
push
outsb
in
dec
cmp
daa
sub
pop
sbb
or
decb
aas
pop
lds
mov
xor
pop
pop
lret
shld
xor
mull
outsb
sub
popf
cwtl
mov
rcrb
xchg
xchg
cmovp
dec
or
pop
mov
jl
imul
add
inc
aas
push
dec
in
mov
movsl
mov
sub
xchg
sbb
xor
cmpl
popa
stos
sbb
mov
inc
std
fisubs
mov
and
xchg
push
mov
xor
xor
jl
ds
lods
imul
jecxz
lods
cltd
frstor
pushf
fwait
enter
aam
pop
add
imul
pop
add
mov
sbb
fdivrp
fsubrs
adc
mov
and
movsl
in
jge
pop
or
mov
sub
mov
xor
lock
and
jne
cmc
mov
xchg
sub
xorl
scas
jbe
mov
sahf
orl
dec
dec
xor
dec
jmp
lds
in
sbb
test
shlb
out
test
test
orb
pop
cmp
push
dec
xchg
add
out
xor
mov
push
push
pushf
rolb
adc
std
jb
or
aaa
imul
jmp
addr16
lds
out
faddl
shr
fidivrl
fmuls
adc
or
fsubs
shrl
clc
jl
mov
iret
nop
cmc
sub
lret
xlat
sbb
loop
mov
mov
or
inc
popa
jae
ja
int3
add
rclb
mov
xorb
jae
fnop
jnp
cmc
jp
aad
ret
clc
test
mov
cmp
ds
cltd
scas
or
xor
add
lcall
add
adc
add
cmp
inc
sub
mov
or
fisubrl
call
jnp
in
gs
jle
xor
shufps
mov
sahf
xorb
fwait
dec
cs
add
andb
fstpt
leave
cltd
xchg
lcall
in
mov
push
cmpxchg
ficompl
enter
data16
mov
lcall
inc
xchg
adc
pop
inc
loopne
jns
insb
cmp
push
xchg
out
insl
jbe
push
stc
in
js
cs
jns
sub
and
push
xor
in
sub
mov
jg
lods
sti
mov
sbb
daa
aas
movsb
and
into
imul
or
adcl
pop
rorb
lcall
push
outsb
fwait
daa
sarb
lods
sar
test
pop
add
imul
lcall
dec
fcmovne
lret
cmpsl
outsb
jo
out
adc
out
lods
xchg
andb
lret
dec
divl
fs
jo
stos
int
and
mov
or
inc
jo
mov
inc
div
lahf
adcb
sub
sahf
insb
mov
jge
inc
out
xchg
push
inc
sub
jns
mov
cmp
mov
push
lahf
lret
add
sub
mov
jge
lock
ss
or
add
inc
dec
insl
adc
ljmp
ret
cmp
mov
aad
cli
sub
jns
inc
xor
test
jl
sahf
cli
adc
push
push
insl
fiaddl
mov
les
push
test
mov
fs
test
push
mov
cld
ret
push
pop
aaa
rcll
out
stos
cmp
imul
mov
loope
inc
xor
mov
and
gs
add
loope
fisubl
sbbb
scas
push
fisubl
in
inc
sbb
xchg
push
sbb
movl
sbb
cmpsl
jg
xlat
scas
aad
movsb
fsub
int3
adc
call
jp
push
in
push
mov
xchg
and
inc
jp
mov
dec
mov
je
sbb
pusha
sub
fwait
xchg
sbb
daa
xlat
dec
loop
pop
mov
std
inc
imul
cld
jo
push
push
pushf
cld
ror
xchg
xchg
pop
mov
decb
divb
cltd
rcrl
lods
call
aas
mov
insb
sbb
and
in
int
aam
imul
adc
sbb
xchg
or
ja
jle
mov
and
stc
add
sbb
inc
add
stos
cmp
ja
int
pop
push
call
data16
hlt
and
pop
insb
sbb
inc
pop
xchg
loope
jge
push
rcrl
shrl
xchg
xchg
das
sahf
lods
and
pop
jmp
lock
add
adc
or
xchg
das
pop
sbb
jae
fisttpll
fadds
sub
jge
or
mov
lds
jne
cmp
or
sbb
and
fiaddl
mov
cmpsb
movsl
adc
inc
js
es
jl
lds
aaa
xor
psrad
lcall
fwait
jbe
xchg
cmp
xor
daa
aas
js
push
sbb
mov
fwait
mov
mov
push
dec
movsl
add
mov
stc
aas
fistpl
sbb
jge
int3
add
cmp
outsb
mov
sbb
lea
cltd
and
inc
and
movb
pop
into
mov
jge
dec
clc
jae
bound
sbb
pop
adc
add
xchg
xor
mov
push
das
jnp
inc
mov
dec
rcll
lcall
test
xor
dec
jle
shl
clc
mov
rclb
call
rorb
or
jne
popf
inc
inc
dec
gs
xchg
out
pop
or
inc
je
test
iret
leave
pop
movsb
adc
push
and
stc
into
sub
sti
jae
mov
mov
iret
mov
adc
pop
fdivr
fidivrl
sbb
dec
in
movb
lcall
dec
aad
fbld
stos
mov
fstpl
jp
cwtl
jp
in
lahf
adc
mov
push
xchg
jg
sbb
jecxz
xlat
and
jnp
popf
bound
icebp
push
out
mov
push
add
cmp
js
xorl
mov
sub
pop
iret
sbb
mov
outsl
sbb
je
mov
xchg
scas
inc
ret
mov
jecxz
scas
repnz
pop
std
push
push
pop
xchg
or
dec
mov
test
repz
loope
out
mov
int
xor
sub
shrl
xlat
jb
mov
cmpsl
add
xlat
jg
enter
das
int3
sbb
jb
jnp
stos
imul
or
or
cmpsb
pop
adc
sub
mov
dec
xchg
scas
iret
xchg
pop
mov
xlat
adc
not
jl
xchg
adc
test
jecxz
cwtl
adc
popf
in
mov
mov
sbb
clc
pop
sbb
clc
add
mov
mov
push
out
stos
mov
ror
arpl
sbb
leave
jl
push
loope
push
jle
cmpsl
lods
repnz
dec
mov
out
scas
cmpsb
pop
add
push
push
mov
or
mov
es
fstpt
xor
mov
into
xor
push
adc
push
mov
mov
pop
add
js
push
aas
cmp
cltd
add
imul
inc
jae
jmp
jns
pop
scas
add
push
adc
pop
push
jecxz
lea
or
mov
pop
repz
out
mov
filds
dec
sarb
sti
sub
or
xor
mov
out
mov
cli
rcll
or
fisttpl
jecxz
pop
arpl
mov
test
arpl
jmp
jle
test
in
mov
jp
sub
inc
pop
lret
test
mov
xor
mov
sti
dec
clc
sahf
mov
dec
push
roll
adc
sbbb
jp
ss
repnz
xchg
and
mov
cmp
adc
repz
cwtl
sbb
pushf
add
push
cmp
fstpl
mov
cld
inc
sub
and
cmp
rcrb
xchg
rcll
cmpsb
xchg
fldcw
cs
lret
out
dec
jb
movsl
jecxz
addr16
xor
jl
or
out
mov
jmp
add
aaa
and
fidivl
push
adc
int3
inc
es
jnp
loopne
sbb
cwtl
pop
inc
mov
jmp
filds
push
cmc
jmp
shrl
jp
sbb
cwtl
push
iret
pop
iret
sub
inc
rcl
mov
shrl
lock
mov
mov
pusha
iret
daa
dec
gs
push
in
aas
movsb
mov
fcoms
xor
mov
xchg
aam
jmp
xor
push
ljmp
ficompl
xor
iret
mov
inc
dec
cltd
mov
pop
js
lock
xor
inc
ss
sub
pop
mov
pop
xchg
lea
inc
push
pop
xor
xor
mov
outsb
div
and
frstor
adc
mov
mov
cmp
shll
inc
xor
dec
das
adc
mov
loop
jae
lea
xchg
mov
xor
adc
xchg
push
ds
mov
sbb
clc
rorb
lret
pusha
cwtl
adc
cmp
jmp
cmovae
push
sub
adc
jl
aam
js
cmp
std
mov
xchg
arpl
dec
push
addr16
in
addl
cmp
lock
daa
test
add
pushf
pop
icebp
adc
lods
jae
gs
dec
xor
scas
ret
jo
lcall
int
gs
lret
stos
sahf
cmovae
lods
xchg
cmp
cmp
setle
pop
outsl
in
loopne
push
sbb
jg
inc
jp
mov
insl
ret
dec
shrl
push
push
xchg
pusha
sub
addr16
ds
xchg
lret
mov
into
mov
mov
mov
imul
sub
rolb
pusha
cmp
add
mov
pop
mov
adc
movsl
xlat
rorb
addr16
push
mov
imul
iret
inc
rcl
or
lcall
pop
mov
cmp
sbb
push
xchg
pop
mov
dec
clc
pop
adc
and
out
mov
lret
icebp
clc
outsb
daa
add
lock
rol
cmp
test
add
sarb
jp
inc
xor
xchg
imul
enter
fcomps
lret
dec
sbb
mov
pop
pop
jo
aad
dec
cmpsb
es
les
out
es
mov
repz
and
cmc
std
and
icebp
xchg
and
notb
lock
into
mov
mov
add
and
mov
mov
pop
push
mov
mov
xchg
aaa
push
orl
test
sub
arpl
jo
lock
daa
pop
mov
pop
mov
jno
xchg
aas
stc
insb
addr16
inc
pop
or
sub
es
pop
clc
nop
pop
into
mov
lcall
enter
or
pop
cmpsb
je
mov
cld
and
int3
repz
xor
test
push
test
cmp
js
loop
ficompl
inc
stos
push
sti
adcb
repz
mov
inc
xchg
loope
ret
loope
lods
test
les
xlat
xchg
mov
out
jo
dec
mov
mov
jmp
xchg
inc
data16
mov
orl
jb
sti
mov
test
enter
stos
xchg
add
ljmp
inc
dec
rcr
push
xchg
xchg
xchg
and
aas
dec
inc
imul
mov
fisubrs
loop
outsb
pusha
movsl
sbb
imul
out
fwait
lret
clc
mov
rclb
cwtl
lahf
mov
add
mov
dec
pop
orb
jne
out
fdivl
into
cli
cltd
bound
mov
sbbb
cmp
sub
mov
jnp
pop
fs
xchg
inc
jnp
sbb
loop
jns
stc
jl
inc
das
cmp
lods
jb
fwait
or
or
mov
aaa
xor
js
cmp
sbb
mov
mov
mov
fldt
adc
es
mov
outsl
jmp
int3
mov
out
inc
inc
in
dec
insl
mov
shl
add
sub
in
aaa
rcrb
and
fsubrs
pushl
pop
mov
insl
pop
and
xchg
pop
sub
cmc
in
jbe
push
mov
add
adc
push
xchg
push
and
push
mov
lods
xchg
add
or
sbb
nop
jg
pop
and
mov
mov
add
mov
roll
sbb
xlat
pop
clc
sti
jo
ja
movsb
addb
fnstcw
and
call
sbb
push
mov
cmp
adc
js
bound
dec
sub
fsts
stc
cmp
xchg
lock
pop
js
cmpsl
sub
fstpt
out
cmp
mov
cmp
mov
sub
inc
bound
gs
lcall
pop
aad
cs
aad
fisttpl
test
mov
jle
pop
inc
xchg
je
xor
mov
das
rcrb
out
loopne
leave
cwtl
outsl
xchg
mov
lock
fisubl
mov
ds
mov
push
jge
fwait
aaa
icebp
jp
je
insb
mov
in
mov
adc
popf
clc
out
in
loope
mov
dec
mov
xchg
add
repz
or
out
mov
mov
sbb
xor
xor
out
mov
adc
bound
gs
mov
add
dec
sbb
enter
or
jg
or
push
xchg
fstpt
adc
adc
mov
shlb
int
mov
push
sub
inc
cmpl
out
cmpsb
sbb
inc
stos
orl
push
lahf
pop
jmp
shl
sti
cmpl
lods
movsl
sbb
adc
call
in
adc
je
push
dec
into
mov
inc
mov
loope
jmp
xchg
out
daa
loop
xchg
dec
xchg
xchg
in
sbb
mov
cmp
xchg
push
sub
adc
cli
pop
and
jmp
jbe
nop
pop
stos
and
pop
xchg
sbb
adc
inc
in
cmp
cli
imul
xor
adc
pop
movsb
adc
xchg
cmpsb
xor
jno
add
cli
lahf
jge
mov
aam
mov
dec
pop
out
ds
ds
mov
orl
mov
sbb
fldcw
dec
cmp
pop
fldl
fs
sahf
jmp
stc
cmp
xor
mov
cld
rorb
pop
cmp
cmc
ret
lods
mov
loop
jecxz
fwait
les
jecxz
fucomp
cmpb
jb
mov
pop
inc
cwtl
cmp
or
jg
scas
or
xor
inc
cmc
enter
jns
mov
xor
xchg
mov
cmpsb
divl
data16
lods
shll
addr16
int3
add
cmpsb
push
fstpt
mov
mov
out
fstpt
andb
jb
add
cltd
dec
add
pop
cmpsb
ret
out
loop
pop
sub
mov
lea
push
movsb
mov
mov
mov
push
sbb
jecxz
aad
mov
aas
movsl
mov
add
add
test
je
std
subl
repz
mov
jle
fldcw
in
cs
popa
cmp
ficompl
mov
or
scas
inc
dec
jns
shl
dec
xor
sub
pop
xor
mov
sti
jg
fwait
sti
push
cmp
pushf
icebp
or
dec
in
fsubrs
jmp
xor
lcall
cmp
or
mov
mov
cli
bound
inc
lcall
loope
aas
sub
fisubl
jg
adc
pop
clc
sbb
in
add
mov
mov
fldt
aas
push
imull
ja
lret
push
lahf
mov
loopne
ret
movsb
pushl
jbe
add
insl
loope
dec
push
xlat
js
sbb
cmpsb
cmc
ds
dec
mov
jle
sbb
mov
lock
jmp
push
jb
or
fs
clc
outsb
cmp
rorb
fnsave
popf
or
flds
iret
int3
pop
or
bound
push
fwait
imul
shlb
addb
test
je
sub
jl
cli
jle
xor
loope
jl
push
adc
mov
std
das
insl
aaa
mov
jg
push
test
imul
outsb
add
sub
cld
and
inc
aas
mov
adc
mov
pop
xchg
xchg
sbb
inc
cmpsb
gs
lret
ds
aam
daa
mov
out
insl
push
imul
je
insl
pop
inc
and
pop
xor
mov
jb
and
mov
sti
adc
mov
jb
sbb
sbb
xchg
push
xor
mov
in
ss
fisttpll
dec
stos
jecxz
xchg
jge
adc
dec
sbb
mov
sbb
test
lea
xchg
jecxz
leave
loop
jo
xor
addr16
movd
inc
lods
sbb
aas
pop
ljmp
out
push
xchg
xlat
iret
outsb
sbb
push
leave
xchg
cmpsl
paddq
add
cli
sbb
or
lea
popf
adc
xchg
xchg
pop
ds
jne
xchg
loopne
stos
pop
adc
mov
adc
and
out
pop
sbb
aas
out
test
push
js
xor
repz
jne
and
and
outsb
mulb
daa
mov
shlb
lahf
lret
mov
rol
es
cmc
mov
xor
test
push
inc
xchg
or
sbb
outsb
mov
xchg
adc
popf
orl
rcl
lock
lahf
pop
jae
mov
jge
pop
xchg
inc
push
mov
pop
mov
jle
or
lods
clc
inc
mov
and
ja
jmp
push
inc
loope
cmp
pop
xchg
sbb
adc
and
dec
pop
ja
cmp
or
mov
jmp
xchg
xchg
jb
push
pop
jmp
test
call
or
pop
fsubl
push
xor
push
cmp
in
icebp
cmpsb
inc
push
inc
xchg
pop
fcmove
je
in
fnsave
fiadds
sbb
xchg
pop
pop
sbb
sbb
popa
pop
or
sub
and
and
pop
rol
int3
clc
sbb
scas
mov
pop
fcmovne
ljmp
stos
arpl
pop
mov
test
aad
test
or
push
icebp
push
mov
push
mov
pop
mov
xchg
jecxz
or
add
aad
and
inc
push
and
movsl
inc
sub
das
and
sti
lods
imul
lea
in
jmp
imull
cmpsb
fldenv
push
jne
adcl
stos
aaa
mov
imul
push
pop
push
mov
lock
cmp
sub
and
outsb
das
lcall
leave
leave
jp
ja
add
addb
xchg
aam
call
loop
loope
popl
inc
mov
repz
out
cld
mov
sbb
mov
ficompl
cmpsl
mov
mov
in
test
lahf
leave
dec
jnp
add
sub
sub
xor
jmp
dec
sub
push
push
stos
xchg
daa
cmpsl
mov
out
xlat
iret
idivl
pop
das
pop
pop
daa
getsec
jg
outsl
push
pop
addr16
ja
xchg
mov
out
xlat
iret
idivl
pop
das
pop
pop
daa
getsec
jg
outsl
push
pop
addr16
ja
xchg
mov
out
xlat
iret
idivl
pop
das
pop
sbb
getsec
jg
imul
jle
mov
mov
out
xlat
pop
out
test
daa
cmovo
iret
out
mov
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
sahf
dec
mov
scas
jl
or
mov
jb
ds
cs
pop
lea
jle
outsb
mov
mov
or
sbb
sub
pop
push
int3
push
fmull
cs
pop
jmp
outsb
mov
mov
or
sbb
sub
cmp
int3
push
decl
add
xor
add
xlat
add
sbb
das
adc
and
mov
mov
add
js,pn
dec
xor
and
hlt
sbb
xchg
cmc
movsb
sbb
mov
stos
jmp
jg
nop
in
pop
add
mov
xor
lcall
int3
fs
ljmp
sbb
scas
jo
rorl
fimuls
xchg
push
xor
and
pushf
es
fldcw
mov
mov
gs
repz
jge
cmp
xor
leave
adc
mov
adc
dec
je
inc
seta
cmpsb
gs
int3
fs
cltd
imul
popf
dec
int3
jle
push
inc
rorb
insb
scas
jl
or
sbb
sub
cmp
int3
push
fdivrl
in
cs
pop
mov
jle
outsb
cli
fmuls
fldt
xchg
dec
scas
dec
pop
mov
inc
mov
clc
daa
fstpt
fidivrs
fstps
and
pop
cwtl
dec
mov
adc
or
jg
imul
leave
outsb
call
xlat
or
sbb
sub
cmp
int3
push
fdivrl
in
cs
pop
mov
jle
outsb
mov
mov
or
sbb
sub
cmp
int3
push
fdivrl
in
cs
pop
mov
jle
outsb
mov
add
stc
xor
clc
inc
xchg
jp
xchg
jns
popl
xor
testl
stos
icebp
in
lret
cmc
ds
fwait
jecxz
sub
adc
jo
jmp
pop
shlb
or
inc
add
pop
mov
ror
stos
push
mov
insb
inc
mov
ror
ljmp
add
ret
mov
pusha
stc
sar
mov
imul
sub
add
mov
xor
loope
jmp
int3
pop
imul
mov
cld
push
popf
pop
cmpl
in
pop
push
fmull
sub
fistpl
insl
mov
dec
cmp
push
sbb
sbb
rolb
mov
or
loope
mov
mov
cmp
inc
in
push
scas
push
sbb
fidivs
xchg
and
add
adc
mov
fimuls
mov
sub
adc
mov
cld
xchg
jl
cmp
fs
mov
xchg
xchg
cltd
outsb
out
aam
jnp
cld
sub
lcall
xorb
and
jmp
andl
das
dec
xchg
arpl
xchg
cmpb
add
mov
into
push
pop
xchg
inc
xor
imull
mov
mov
popa
jmp
mov
lea
mov
pop
sahf
dec
xchg
adc
xor
mov
ret
cmp
in
dec
sti
and
mov
xchg
mov
ret
pushl
jnp
gs
push
ret
stc
or
sub
adc
xor
shrb
pop
inc
xor
add
nop
outsb
or
jne
fucomip
pop
ret
scas
mov
inc
stos
in
push
ret
and
push
sbb
jb
lods
cmp
pop
dec
or
inc
add
dec
clc
adc
lcall
xor
and
daa
and
mov
push
sbb
and
dec
mov
adc
jle
int3
adc
push
lcall
jne
repnz
mov
fucomip
xchg
dec
outsl
jecxz
dec
pop
sahf
jno
outsl
dec
sbb
inc
and
xchg
jp
lock
daa
fidivl
loope
icebp
and
mov
pop
mov
sbb
pop
inc
xlat
push
mov
inc
dec
sbb
push
push
xchg
jl
push
mov
lods
xchg
fcompl
mov
sub
rcrb
movsb
or
test
add
out
inc
test
std
cs
stc
aad
sbb
leave
in
and
lahf
rcrl
jmp
gs
jbe
loope
mov
sbb
inc
and
push
je
int3
dec
call
jns
loope
or
adc
loopne
movsb
repz
rorb
sbbb
hlt
sbb
jecxz
add
sti
cmp
mov
adc
jnp
fidivs
mov
and
out
rcr
sbb
sub
dec
ds
push
and
movsb
in
testl
xor
clc
mov
dec
in
aam
stos
or
sbb
xchg
mov
sub
scas
and
mov
push
nop
cmp
in
lret
or
pusha
sti
lds
ficompl
jnp
jno
jns
push
clc
mov
cmp
jnp
movsl
add
adc
add
out
xchg
and
imul
xchg
mov
pop
mov
hlt
aaa
hlt
push
sbb
js
adc
mov
dec
push
jne
out
push
movsb
lahf
pop
sbb
sub
xor
pop
out
adcl
jo
clc
sahf
bts
movsl
out
loop
repz
inc
sarb
add
subl
add
stos
push
jo
fsubl
fldcw
aad
push
push
jae
cmpsl
repnz
add
cmp
repz
and
shr
hlt
or
in
or
mov
in
je
pusha
mov
mov
pop
jge
mov
and
lock
jmp
and
aad
cmc
test
xor
lds
sbb
or
push
mov
dec
inc
mov
cwtl
add
mov
jp
or
filds
lods
xchg
xchg
xchg
fbstp
add
icebp
fists
sbb
adc
or
cmpsl
xchg
jbe
fisttps
xchg
sbb
fldl
movsb
pushf
ljmp
pop
sub
dec
push
mov
sbb
ja
cmp
out
lahf
push
add
in
out
or
rorl
shlb
dec
add
sub
das
fwait
push
xor
repnz
popa
cmp
mov
and
sbb
imul
ret
xchg
imul
ret
test
aas
cmp
sub
aas
scas
addr16
jmp
mov
adc
jns
sub
out
loop
movsw
jle
testb
adc
cmp
repz
inc
sbb
pop
into
add
divb
pop
xor
jns
sub
cmp
jg
inc
mov
jmp
sbb
cwtl
das
mov
test
in
jnp
in
or
clc
gs
cmp
lds
add
movsw
or
cmp
rcl
dec
and
mov
xchg
addr16
jne
inc
fidivl
jp
scas
div
xlat
cmpsl
popa
add
jb
mov
int
in
sbb
cli
cmp
add
dec
and
ret
fwait
sbb
int
inc
jmp
jle
pop
mov
add
out
mov
push
dec
jo
mov
adc
fldl
ss
jnp
negb
rcrb
out
mov
push
mov
dec
dec
pop
leave
mov
lods
sub
sbb
bound
outsl
aaa
push
je
push
push
mov
inc
xor
int3
testl
dec
pop
adc
jno
jmp
xchg
add
add
out
arpl
cmc
jle
call
in
scas
lock
add
aam
insl
aaa
mov
mov
jecxz
clc
jmp
shlb
sbb
pop
or
push
xor
ret
hlt
push
or
sub
jae
adc
inc
cwtl
shrb
adc
aaa
dec
sub
push
cmp
cmp
cli
mov
xor
xlat
loope
mov
mov
dec
xchg
and
in
out
iret
into
xchg
xchg
mov
or
pop
adc
aaa
ret
cmpsl
sbb
cmp
dec
jo
mov
adc
or
mov
leave
adc
mov
pop
add
jnp
negb
inc
lock
int
rclb
mov
out
mov
xor
push
and
les
test
jb
push
dec
jg
pop
xor
xchg
loope
cli
mov
pusha
push
shrl
mov
add
repnz
push
push
inc
insl
lods
rorb
mov
inc
loope
and
xlat
test
icebp
enter
push
pop
ss
xchg
mov
add
flds
in
aaa
sub
inc
xchg
or
iret
xchg
jne
std
aaa
test
cmp
popa
std
clc
outsb
cmc
mov
adc
pop
aam
sahf
cmp
sub
into
jl
xchg
push
adc
js
jle
xlat
daa
inc
or
fcomi
mov
aad
add
aam
adcb
sub
pop
hlt
shlb
mov
fcmovnb
adc
shl
insb
jge
mov
fsubp
xlat
or
cmpsl
add
bound
lret
mov
fwait
xchg
out
push
fisttpl
sbb
push
or
into
out
fmull
lods
mov
add
leave
stc
lds
out
movsb
pop
repnz
cmp
fwait
add
fbstp
jg
or
loopne
mov
dec
and
mov
jmp
frstor
test
adc
cmp
push
mov
jnp
cli
inc
insb
lods
jbe
cmp
xchg
mov
and
push
xchg
aas
jle
pushf
clc
and
mov
xchg
ret
inc
sbb
xchg
push
inc
dec
fnstenv
imul
fxtract
addr16
daa
bound
fdivrp
js
mov
jecxz
push
nop
cld
loop
push
ja
aad
xor
xchg
xchg
in
sbb
mov
std
add
sbb
ret
sti
fldenv
sti
push
std
aaa
adcb
es
call
cmp
je
lcall
mov
push
jne
pop
icebp
flds
pminub
ret
xlat
fists
rclb
or
fmull
mov
sub
jns
and
add
and
int
add
stos
add
mov
aam
or
push
int3
ljmp
daa
das
repnz
xlat
mov
inc
rolb
ds
cmc
jl
pushf
sbb
popa
mov
xchg
jle
inc
jno
les
push
push
push
mov
fdivs
inc
outsl
js
mov
scas
lock
or
mov
jne
fistpll
sub
add
sbb
mov
xor
push
test
jo
testb
push
jae
mov
jg
jno
jb
imul
cwtl
sti
ja
fdivrl
dec
pop
and
call
push
pop
push
push
lea
loope
fimull
jne
mov
mov
inc
mov
cmp
push
cwtl
push
jo
movsb
call
or
aaa
dec
mov
fs
lret
pop
fidivl
xlat
cs
gs
pop
lods
aad
cmp
jnp
loope
mov
sub
loope
pop
imul
cltd
stc
scas
xchg
and
cmpsb
and
shlb
lods
cwtl
scas
adc
test
js
out
test
push
sub
mov
nop
aam
mov
rol
testb
fidivrs
push
lret
xchg
sub
xchg
clc
dec
push
sbb
inc
out
adc
inc
pop
in
shrl
and
xchg
xchg
and
push
ds
mov
sbb
std
xor
sub
inc
xor
xlat
mov
jp
dec
or
loope
xchg
inc
dec
pop
les
js
pushf
xchg
and
stos
ret
lret
mov
xchg
xor
sub
jp
daa
clc
xlat
dec
ret
jg
filds
hlt
es
lea
fucomi
xlat
mov
xor
pop
mov
xorb
in
das
int
jecxz
test
sbb
push
lcall
sahf
les
add
stos
in
int3
loope
loopne
das
mov
mov
sbbb
xchg
loope
mov
movsb
cmp
jmp
cmp
popa
mov
insl
sti
jg
mov
sbb
roll
test
rcll
fcomip
xchg
dec
arpl
in
outsl
pop
cmpsb
dec
add
aas
fdivrs
iret
cmp
cmovne
push
or
mov
and
jbe
inc
int
out
and
sbb
cs
fsts
nop
hlt
push
repz
fidivs
jbe
push
scas
ds
jg
lea
mulb
fsubs
sbb
popa
stos
xorl
iret
js
mov
bts
test
in
sub
or
and
cmp
test
test
int
pop
mov
adc
ss
lret
or
jbe
mov
mov
xchg
inc
sbb
lahf
sub
add
mov
lds
repnz
jmp
inc
and
jne
movsb
stos
subb
arpl
push
test
mov
fs
outsl
cmpsb
push
lods
ljmp
mov
fildll
hlt
in
outsl
add
adc
pop
ljmp
sub
inc
popa
daa
outsl
sub
pop
add
xchg
scas
add
sbb
test
mov
popf
ret
cmp
mov
xor
lods
imul
mov
or
dec
add
mov
lock
jle
or
jle
cld
jne
xlat
ljmp
mov
cmpsb
popf
jl
and
pop
fsubl
add
mov
lds
mov
lahf
or
xchg
adc
inc
xchg
in
int
sbb
cmp
daa
jp
add
popa
push
test
jbe
cli
sub
icebp
jl
and
jg
push
in
lods
jle
sti
sub
pushl
mov
aaa
push
inc
xchg
sbb
cs
mov
jl
lret
outsl
xchg
inc
dec
pop
fcmovbe
inc
xor
mov
xchg
jne
inc
mov
in
leave
outsl
inc
dec
jns
push
mov
jmp
xchg
push
xor
inc
mov
inc
and
test
ret
and
les
xchg
add
jb
lock
dec
adc
xor
test
ss
inc
adc
mov
pop
dec
flds
sti
jb
rclb
rol
push
mov
mov
roll
push
xor
xor
mov
lods
fstp
bound
lock
cmp
shrl
popf
pop
in
ja
divb
aas
push
dec
inc
stos
outsl
ret
jl
imul
inc
cmp
jle
xorl
jno
sbb
into
lret
xchg
lret
mov
add
filds
hlt
les
mov
roll
dec
and
pop
mov
cld
test
addr16
imul
lods
addr16
test
xchg
sub
cs
pop
cmpsl
dec
sub
inc
lahf
mov
lock
scas
mov
ret
shll
in
xorb
jmp
mov
stc
into
cmpsb
xchg
shrb
into
icebp
xchg
test
and
in
lods
int
fisubs
lea
and
sub
mov
es
lock
imul
cmp
inc
call
es
stos
imul
sub
mov
cmp
repz
mov
xchg
cmp
rolb
mov
mov
pop
xchg
sbb
xor
outsb
int3
aam
fidivrl
adcb
adc
cmpsb
xchg
popf
std
and
insb
mov
pop
cmp
xchg
pop
loope
add
push
ljmp
in
mov
mov
push
imul
cmc
xchg
adc
fs
scas
in
adc
and
xchg
xchg
lcall
add
out
add
cmp
hlt
cltd
push
cs
jne
repnz
ret
xchg
fdivl
push
fstl
stos
sbb
stos
std
xor
pop
aam
push
lea
add
aas
mov
mov
es
hlt
dec
mov
pop
dec
xchg
hlt
adc
push
cmp
adc
movb
dec
ja
inc
fstp
movl
fildll
xor
rcrb
out
dec
jnp
mov
insl
and
add
adc
add
sbb
xlat
nop
mov
add
push
imul
mov
js
mov
ds
push
add
inc
loop
cld
mov
pop
or
out
adcl
repz
mov
pop
push
jb
idivb
cmp
fnstenv
rorb
es
jecxz
and
inc
cwtl
aam
xchg
das
push
ds
push
pop
mov
sbb
sub
pop
aaa
fildl
cmp
xor
jbe
lods
setns
jmp
pop
sbbl
jne
repnz
add
lret
mov
mov
das
sbb
push
fcoms
cmp
pop
fnstcw
lea
jecxz
mov
in
sub
mov
gs
shrl
pop
hlt
jg
sub
lahf
test
std
mov
lds
or
xchg
sub
add
lods
cltd
pop
pop
xor
mov
addr16
into
cmp
cmp
cwtl
ss
rorl
add
mov
mov
fidivrl
adc
and
aam
cwtl
mov
xor
cltd
mov
lods
out
dec
adcl
mov
fisubl
pop
in
push
pop
fidivrs
sti
mov
or
jno
rorb
pushf
push
lds
lods
fnsave
es
fldt
fdivrp
xor
out
dec
xor
mov
rorl
sbb
repz
xor
cmp
das
inc
mov
mov
sbb
mov
mov
scas
negl
outsl
adc
dec
popa
clc
sub
call
or
pop
and
push
lahf
push
inc
dec
jg
imul
adc
pop
pop
mov
fists
ja
and
or
sub
outsb
in
dec
repnz
idiv
subl
push
pop
jne
popa
mov
lods
pop
push
pop
leave
cmp
sub
and
adc
xchg
xlat
push
lods
cmp
aaa
push
push
jnp
jle
fnstsw
xor
adc
cmpsl
into
insb
and
ljmp
or
andb
scas
adc
cwtl
insl
dec
xchg
icebp
inc
aad
outsb
dec
popa
int
push
loop
add
stc
add
xlat
mov
shl
ljmp
pop
shll
add
mov
enter
xchg
add
pop
pop
push
ret
sbb
xor
mov
shrb
push
mov
sbb
adc
add
shll
sub
or
sub
sub
add
cmp
add
jno
sub
pop
in
ret
add
rorl
shll
adc
mov
outsw
clc
pushl
and
scas
xor
or
data16
adc
das
adc
mov
push
test
cmc
loopne
dec
jb
xchg
pop
adc
mov
mov
cwtl
clc
stos
dec
or
imul
lock
jo
ds
cmpsb
xchg
loop
pop
imul
mov
std
leave
push
fcmovnb
lds
imul
out
mov
lahf
push
push
test
cmpsl
cmp
popf
cmp
adc
jae
stos
popa
xchg
movsl
cmp
adc
dec
int3
and
mov
sub
dec
daa
pop
lret
mov
push
fmuls
lock
and
push
xchg
adc
js
jp
xor
cmp
jle
xor
sub
call
dec
or
mov
cmp
cmpsb
aam
sbb
scas
inc
dec
lods
mov
jg
gs
and
xchg
notb
dec
cmc
pop
shl
out
inc
xchg
loopne
xchg
test
xchg
mov
pop
movsb
int
push
jb
mov
shlb
push
cmp
fcom
mov
cmp
fcmovnb
hlt
mov
mov
adc
cmpsl
sbb
int3
sub
xchg
lods
dec
in
pop
ret
jne
popa
adcl
clc
imul
sets
cmpsl
mov
inc
stc
shl
inc
dec
lret
in
and
mov
aam
repz
daa
cmp
jnp
xor
adc
cmp
call
sub
xor
jg
mov
ds
shll
addb
cmp
push
xchg
mov
clc
and
xorb
stos
pop
frstor
pop
jge
ja
in
call
mov
dec
cwtl
dec
mov
and
inc
mov
in
xor
add
inc
aad
ja
repz
mov
add
adc
and
xchg
cmpsl
scas
cmp
aaa
or
mov
sbb
xchg
imul
pop
mov
xor
adc
and
push
mov
imul
mov
pop
jno
sbb
sub
aas
ljmp
gs
add
adc
inc
jmp
lret
mov
lret
roll
adc
arpl
push
scas
add
cmpsb
hlt
loop
xor
out
xchg
add
mov
cmpsl
leave
jge
test
jp
lcall
ja
sub
ret
mov
xchg
xor
inc
dec
lds
adc
test
jo
mov
outsl
rcrl
or
repnz
add
xor
fisttps
jp
fmull
andb
out
cltd
or
lret
mov
in
aas
or
xor
adc
cmp
jne
aad
fsubs
enter
mov
inc
xorb
outsl
in
cmp
mov
inc
xor
das
rcr
xchg
gs
stc
pop
out
outsl
lret
lret
push
push
sbb
or
cli
lods
mov
cmp
dec
gs
addr16
mov
push
shlb
mov
out
imul
mov
scas
inc
test
mull
test
inc
test
pop
out
insl
repnz
add
dec
mov
mov
addl
or
and
les
in
jne
insl
addr16
ja
insb
add
cmp
test
mov
push
nop
cmc
sahf
push
mov
push
mov
mov
add
fs
mov
test
stos
pop
mov
and
imul
or
sahf
cmp
stos
jle
xchg
jae
vmovapd
shr
das
mov
add
clc
test
jb
mov
xlat
cmp
sub
lds
icebp
adc
jg
lock
adc
inc
out
fwait
lea
cmpsl
cs
mov
jno
sbb
xchg
fsubl
lahf
jae
mov
xlat
jne
mov
mov
and
adc
lods
mov
cwtl
lock
dec
push
sahf
outsb
push
xchg
pop
test
sbbl
pop
data16
pushf
pop
fprem
clc
cmpsl
sbb
sub
lds
hlt
jle
fsub
mov
int3
adc
xchg
imul
sub
mov
bound
sbb
xchg
addr16
dec
or
andl
push
dec
ds
sbb
call
movsl
in
adc
push
in
add
les
loop
xchg
mov
mov
mov
pop
mov
iret
push
mov
ret
enter
enter
movsb
mov
mov
jp
imul
ds
push
xchg
nop
test
scas
clc
inc
in
cwtl
push
out
negl
mov
cli
inc
call
dec
pop
bound
xchg
pop
push
cmp
es
xchg
lcall
jmp
pop
leave
mov
cltd
mov
stc
cmp
jmp
hlt
push
pop
out
mov
adc
out
and
mov
repz
clc
mov
in
inc
push
cmc
arpl
mov
stos
push
int
shl
stos
and
jl
popf
xchg
clc
ret
mov
xchg
int3
sarl
lods
ret
or
fsubs
push
cld
lcall
ljmp
dec
mov
inc
dec
cmp
call
cmc
fldenv
test
pop
test
adc
sub
mov
add
jo
insb
adc
out
push
xchg
or
jnp
pop
mov
jo
jo
push
xor
cmp
jp
jmp
addr16
sub
lea
rclb
push
push
inc
cmp
adc
insl
inc
out
icebp
mov
test
jle
mov
out
popa
hlt
push
lds
push
movsl
mov
and
dec
xor
jns
clc
jne
pop
leave
xlat
sub
dec
inc
inc
cmp
add
aad
fcompl
in
adc
dec
je
loop
movsb
testb
mov
dec
jecxz
scas
lods
cmp
cmp
aaa
or
clc
jno
test
test
xchg
js
adc
scas
jl
or
sbb
sub
cmp
int3
push
fdivrl
in
cs
pop
mov
jle
outsb
mov
mov
or
sbb
sub
cmp
int3
push
fdivrl
in
cs
pop
mov
jle
outsb
mov
mov
or
sbb
sub
cmp
int3
push
fdivrl
in
cs
pop
mov
jle
outsb
mov
mov
or
sbb
sub
cld
push
int3
push
jbe
in
mov
add
arpl
int3
int3
int3
int3
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
call
cmpsb
fsubrl
fstl
push
ja
jl
pop
push
sub
data16
sbb
in
xchg
mov
cmpsb
lods
mov
push
insb
push
jl
inc
es
push
add
jbe
data16
dec
xchg
mov
cmpsb
stos
pushf
hlt
testb
pop
push
sub
das
pop
push
jle
js
test
mov
pop
mov
aad
xchg
out
cmpl
ja
pop
hlt
shlb
and
in
push
ret
out
or
ret
mov
leave
aaa
jl
xchg
arpl
stc
subb
or
cmp
push
adc
sub
inc
dec
inc
jge
xchg
push
insl
push
insb
pusha
dec
fldenv
cmc
fsubs
fistl
xchg
xchg
enter
mov
out
push
jmp
into
pop
mov
adc
pusha
imul
add
xor
mov
jle
jae
data16
lods
add
pop
cltd
xchg
outsb
adc
or
jecxz
dec
push
cld
and
inc
lcall
ja
addr16
pusha
xchg
mov
cmpsb
lods
mov
push
insb
push
aam
dec
es
push
adc
jbe
data16
ret
mov
mov
fstpt
mov
pop
jmp
or
js
jne
stos
lds
mov
mov
scas
inc
or
inc
insb
sbb
imul
aad
xchg
testb
ss
es
push
sub
cmp
or
sbb
in
xchg
mov
cmpsb
lods
mov
push
insb
push
jl
dec
es
push
sub
cmp
or
sbb
in
subl
lret
in
adc
or
lods
push
xchg
pop
pushf
mov
xorb
iret
and
scas
xor
rcl
loopne
fsubrl
adc
or
add
mov
icebp
mov
imul
inc
mov
dec
adc
mov
pop
aam
repz
fdivrp
push
cli
insl
add
or
sbb
jae
or
cmp
mov
and
inc
mov
je
cmp
stos
test
jns
lret
add
lea
in
out
jecxz
sti
jns
xchg
cmp
cmp
jmp
aas
and
mov
fsubp
jge
xchg
pop
nop
dec
adc
dec
dec
aad
mov
in
cld
int
dec
shl
daa
mov
jo
int
pop
xor
mov
jno
andb
mov
xchg
sbbl
add
sbb
aam
fcmove
adc
call
test
cwtl
inc
sbb
fdivrl
pop
sub
loope
sub
xchg
xchg
imul
in
pusha
mov
pushf
xchg
xchg
xor
inc
scas
add
xchg
cmp
in
xor
lret
int3
test
ds
or
das
cmp
mov
test
dec
push
scas
add
fisubs
shr
and
cmp
or
enter
ret
popa
dec
mov
fs
arpl
rorl
jge
push
xchg
pop
inc
cmp
mov
cltd
aad
loopne
scas
lcall
aam
ja
mov
insb
fiaddl
xor
push
push
mov
xchg
xor
jge
insb
sti
mov
pop
sbb
sub
sahf
mov
arpl
push
push
pop
jne
sti
mov
sbb
adc
cmp
push
pop
divb
ret
sbb
aad
push
stos
popa
pop
stc
psllw
test
fildl
xchg
jnp
lcall
shrb
hlt
push
fidivs
notl
aad
xchg
xchg
sub
adc
aas
int
scas
sarb
cmpsb
or
popf
negl
adcb
mov
adc
addr16
out
les
stos
mov
mov
mov
pop
sahf
dec
sbb
addb
jp
sbb
and
movsb
jne
outsw
arpl
xchg
mov
ret
adc
mov
out
gs
test
popf
mov
add
out
les
push
xlat
in
adc
call
pop
sub
cwtl
push
xor
icebp
divl
enter
lret
mov
cmp
cmp
inc
addb
lods
xchg
and
sbb
fucomp
xor
hlt
adc
add
lock
xor
and
test
inc
dec
jge
sub
repnz
or
cmp
mov
ds
xchg
mov
dec
test
imul
insl
fldl
je
outsl
fimuls
pop
out
pop
fstps
mov
fbld
rolb
test
pop
lock
jne
out
dec
stc
inc
mov
fcomps
sbb
mov
mov
push
sub
cmp
cs
fwait
lcall
jle
outsl
out
bound
or
jno
stos
popf
sub
mov
jno
fcmovnb
adc
jp
jns
inc
cmp
repnz
test
insb
bndstx
loope
pop
sub
dec
jbe
xor
mov
jp
aas
mov
mov
lds
mov
insl
cwtl
mov
fildl
jle
cmp
nop
pop
aaa
sub
xchg
scas
stc
aas
loope
sub
ljmp
subl
in
out
adcb
insb
pop
cmp
aam
fisubrs
insb
mov
add
xor
repz
fcmove
add
mov
roll
cmc
out
test
aad
and
xchg
popf
add
pop
movsl
push
push
pop
pop
sbbb
movsl
out
sub
sti
frstpm(287
push
xchg
or
mov
cmc
sub
xor
sbb
push
push
fwait
nop
imul
sbb
mov
adc
sbb
and
push
pop
ficoms
movsb
aam
outsb
nop
cmp
lcall
mov
dec
aad
dec
push
dec
mov
adc
loopne
jnp
xor
negl
pop
and
pop
xor
rcr
or
ret
mov
dec
movsb
fiaddl
jo
addr16
aad
jle
dec
clc
adc
cwtl
dec
or
outsb
add
jge
lods
inc
push
dec
or
mov
push
push
out
test
sbb
cmc
fiaddl
xchg
imul
mov
push
outsb
mov
jnp
dec
mov
push
or
mov
pop
fwait
aaa
mov
lds
sbbl
push
xor
out
aam
xchg
lds
push
mov
sub
shl
repnz
jns
dec
ss
fwait
test
in
lcall
xor
xor
sahf
jns
pop
out
push
aaa
xchg
scas
sbb
aaa
xorb
mov
mov
cwtl
push
decb
jle
jg
addr16
push
push
push
or
xor
stos
lcall
push
dec
adc
out
add
mov
int
cs
add
stos
imul
sub
ret
addl
sub
adc
rorb
das
sbb
jne
mov
sbb
or
scas
add
nop
dec
lret
call
inc
push
jmp
and
test
push
test
pop
dec
add
jecxz
mov
int3
jnp
cmpsb
cmp
jb
lcall
scas
mov
mov
lds
push
mov
mov
jo
sub
stos
stc
dec
adc
mov
or
sbb
rorb
jmp
movsl
jnp
hlt
and
add
out
mov
aam
push
xchg
mov
lahf
out
fldenv
cmpsl
or
cli
loop
mov
inc
lahf
mov
cmc
lods
fnstsw
subl
or
dec
push
cli
or
or
cmp
push
or
int
dec
adc
in
push
mov
out
lea
iret
xorl
mov
cmc
pop
fs
in
sub
popa
mov
jne
pushf
cltd
ds
add
iret
and
idivb
dec
jge
in
mov
inc
or
loop
ja
popf
jns
pusha
sub
mov
sbb
mov
bound
cltd
mov
lock
jo
pop
sbb
xor
add
pushf
out
push
and
jge
cmp
adc
adc
outsb
inc
imul
mov
xchg
test
sub
xor
imull
jae
mov
fldcw
call
shrl
in
loope
sbb
hlt
or
jle
ret
cmp
inc
push
arpl
ja
mov
pop
inc
stc
fldl
jbe
mov
push
dec
and
ja
aam
sbb
adc
aam
mov
lods
inc
negb
loop
adc
leave
inc
call
out
insl
ds
push
mov
test
sbb
lret
ljmp
shlb
mov
les
cmpsb
into
outsl
jo
clc
sub
add
or
jecxz
or
std
mov
popa
sub
mov
add
adc
cmp
outsl
sub
sar
icebp
and
fdivp
loop
das
push
dec
xchg
andb
shlb
fs
push
lcall
and
psubusb
sbb
cmc
push
inc
stos
in
dec
leave
mov
cli
sub
xchg
pop
adc
mov
dec
fistpll
mov
xor
mov
in
cmp
jg
xchg
stc
mov
popf
frstor
and
ret
std
sub
and
mov
push
jae
das
sub
mov
add
sbb
dec
nop
sub
or
inc
aad
repnz
xchg
push
mov
add
xchg
push
hlt
xchg
jno
push
jge
push
and
jne
movsl
ret
loopne
mov
push
aam
enter
outsb
in
cmp
call
dec
adc
sub
or
cli
scas
int3
jg
push
fiaddl
shlb
mov
test
sub
mov
push
add
icebp
rcr
bound
xor
pusha
jno
jecxz
push
jnp
cs
dec
cli
xchg
or
jne
fistpll
cmc
push
sub
rclb
out
fdivs
pop
mov
mov
arpl
xor
adc
add
loop
adc
cwtl
cld
add
or
mov
in
jne
mov
in
mov
dec
sbb
jnp
imul
mov
cmpsl
lret
out
sti
cltd
aaa
mov
dec
loopne
jl
adc
push
fsubs
push
sub
mov
mov
jge
xor
int3
jo
mov
or
sub
or
in
lods
inc
adc
lret
or
cmp
push
mov
imulb
lock
push
mov
scas
cmp
test
icebp
cmp
push
push
push
rolb
lds
test
jg
dec
xlat
adc
into
xchg
insl
mov
mov
lock
cmc
push
push
cmp
xor
loopne
pop
fimull
or
fstl
addr16
stc
and
fisttps
dec
jnp
repnz
bound
dec
daa
jnp
sti
jns
aas
das
test
out
xlat
test
icebp
dec
int3
pop
int3
fsubl
sub
or
aad
ja
leave
lret
or
jl
sub
lcall
push
sbb
adc
mov
mov
push
sbb
test
sub
int
insl
insl
popf
fidivrl
mov
xchg
or
jns
xor
fs
sbb
es
bound
mov
popf
ror
gs
jmp
and
repz
fisttpll
adcb
inc
loop
pop
lods
call
pop
add
out
shlb
xchg
int
jg
jecxz
inc
jg
out
mov
fisttps
fdivs
xchg
jge
test
movsl
push
movsb
push
inc
xor
ret
stos
push
sbb
clc
push
jl
loope
lea
cmp
int3
mov
jno
xor
sub
inc
inc
lahf
fiaddl
xchg
sti
stc
sub
outsl
mov
jmp
mov
jp
pop
dec
rcll
movsb
jp
add
cmpsb
xchg
fwait
cs
mov
les
loope
shlb
mov
scas
xchg
pop
sbb
lods
mov
cltd
in
sbb
mov
daa
aas
pop
loope
adc
jmp
int
cwtl
cli
movsb
leave
or
shrl
shll
xor
xor
cmp
pop
pop
jl
dec
jae
dec
mov
je
je
adc
aas
icebp
push
in
and
rcll
out
inc
push
xor
bound
push
inc
mov
aad
or
push
bound
stc
fwait
push
fldt
sub
pop
daa
jg
lret
mov
out
ja
xchg
sti
hlt
aas
dec
and
lea
movsb
jbe
popf
rorw
daa
rcl
adc
sti
je
dec
int
pop
add
or
xchg
movsl
xchg
jo
into
sbb
int
cs
jne
cmpsb
movsw
dec
popf
pop
push
adc
int
aas
daa
shlb
sbb
fs
cmpsb
and
ret
mov
jmp
daa
mov
push
xchg
lock
sub
test
push
in
mov
jns
mov
out
scas
inc
std
jae
stc
movsl
outsl
add
out
pop
pushf
test
movntq
xchg
ds
jle
jle
push
mov
pushf
cli
mov
loope
ljmp
lcall
jle
int
lods
mov
adc
jns
push
jle
mov
pop
xchg
scas
mov
clc
mov
and
mov
adc
out
sbb
xchg
inc
sbb
neg
dec
adc
mov
jg
and
out
mov
out
jp
pop
das
add
std
adc
stos
mov
xchg
outsl
daa
pop
rorb
ljmp
dec
scas
mov
or
out
popa
cmp
mov
mov
mov
xor
cwtl
push
popf
outsb
in
pop
cmp
jmp
xchg
orb
jnp
arpl
fldl
pop
mov
das
cmp
and
push
push
std
jp
mov
fsubl
outsb
lcall
mov
call
std
mov
pop
icebp
rcrb
pop
pop
dec
int
pop
mov
or
pop
and
hlt
out
inc
adc
or
test
test
or
cmp
sub
xor
pop
adc
xchg
inc
push
cld
int3
fcomi
lcall
ret
jecxz
fsub
insl
push
cmpsl
push
push
jl
xor
jecxz
movups
cs
mov
je
stos
dec
mov
jo
repz
dec
mov
pop
pusha
in
mov
lahf
adc
and
jbe
cmp
sbb
or
sbb
inc
push
and
loop
cmp
dec
cwtl
dec
aam
mov
jno
mov
fidivs
das
in
xor
mov
inc
or
sub
add
sti
lods
inc
adc
sbb
sbb
into
repz
dec
mov
aaa
fmuls
sbb
gs
or
sbb
inc
jg
mov
test
data16
adc
add
fiaddl
xor
int
xlat
dec
xabort
in
je
loope
addl
es
popf
outsl
fistl
rcrb
lret
nop
mov
pop
sbb
and
dec
pop
cmp
adc
hlt
xchg
pop
popa
nop
sti
jns
mov
movsb
pop
mov
xchg
sarb
inc
mov
cmp
lahf
bound
fs
sub
dec
pop
es
aaa
fsubr
stc
shld
and
fbstp
int
xor
inc
pop
push
mov
jmp
push
dec
cltd
push
mov
sub
insb
push
and
or
jge
pop
aaa
jne
push
imul
xchg
xchg
cmp
lahf
aam
dec
xchg
mov
push
int3
nop
fidivrs
push
jns
pop
pop
sbb
les
mulb
xor
repz
cwtl
aaa
nop
push
stos
in
iret
in
stos
sub
int3
lds
mov
loopne
fs
xor
fwait
imul
pop
hlt
insb
push
jb
push
jno
sub
xchg
stos
add
jecxz
sub
or
fdivrl
imul
cwtl
loopne
icebp
sti
repnz
mov
and
fmuls
movsl
fmuls
dec
cltd
or
aas
mov
daa
pop
divb
dec
hlt
mov
lds
lcall
push
imul
cld
dec
push
leave
push
inc
and
fptan
mov
jg
enter
sub
int
mov
add
out
xor
cs
pop
outsb
or
fwait
call
sub
mov
std
and
push
jge
add
je
mov
cmp
xchg
incl
mov
and
sahf
mov
push
lahf
sub
lock
xchg
loop
sbb
cmpsl
inc
inc
mov
into
or
shr
sbb
loopne
dec
mov
cld
dec
test
in
dec
hlt
cmp
jnp
pop
mov
cmp
sub
inc
push
xchg
pusha
mov
xor
push
mov
adc
pop
push
push
push
ljmp
cmpsl
mov
pop
sub
add
mov
or
sub
add
pop
imul
or
xlat
push
jle
je
mov
jb
daa
outsl
popa
push
ficomps
push
or
dec
sub
add
fisttpl
inc
outsl
jns
push
mov
int3
jno
fistpl
pop
xchg
arpl
lret
pop
sbb
out
xor
pop
push
mov
movsb
repz
mov
lds
mov
rorl
fwait
xchg
std
iret
movsl
aad
xchg
hlt
xor
jge
test
jb
fisttpll
fnstcw
cmp
lcall
mov
cmp
lret
dec
xchg
mov
xchg
cld
gs
xchg
mov
dec
mov
adc
fwait
mov
or
add
push
add
add
repnz
mov
push
and
cmp
sbb
cmp
adc
and
dec
mov
adc
cmp
sbb
das
pop
sahf
js
nop
dec
pop
lahf
adc
repnz
mov
movsl
je
and
add
push
icebp
jae
inc
fildll
push
adc
mov
stos
data16
sbb
imul
fincstp
mov
insb
imul
into
xchg
mov
cmp
cltd
outsl
cwtl
into
mov
mov
adc
dec
push
or
xor
or
in
inc
imul
push
mov
xchg
addr16
xchg
add
push
dec
ja
mov
dec
mov
add
or
xor
sbb
pop
pop
gs
andl
jmp
jae
mov
loop
xlat
data16
pop
dec
adc
mov
dec
add
adc
pop
add
xor
notl
add
push
js
mov
lods
jno
sub
jle
cmp
pop
pop
xor
mov
mov
test
fsts
mov
push
ja
xchg
movsbl
mov
lahf
pusha
test
out
loop
arpl
sbb
and
jae
adcb
das
outsb
sti
jp
pop
repz
adc
js
mov
mov
push
cld
add
xor
rcrl
jne
fcompl
cld
stc
rol
adc
pop
es
cmpsb
jl
dec
add
push
fnstcw
push
testb
mov
cli
call
out
xchg
sahf
fs
ss
push
adcb
jno
lods
fnstsw
and
mov
mov
enter
push
mov
cmp
popa
or
sub
test
pop
push
test
js
fisttpl
enter
cltd
or
sti
mov
mov
adc
or
cmp
nop
mov
mov
cmp
push
cmp
in
or
jae
push
fcmovbe
fiadds
gs
xchg
xor
popf
movsb
add
dec
scas
lods
out
rolb
add
into
mov
test
push
jp
dec
call
mov
mov
mov
stos
das
or
sub
jg
push
fwait
int
or
out
inc
mov
scas
test
xchg
test
arpl
adc
clc
xchg
xchg
jnp
clc
sub
lcall
jno
mov
mov
pop
sbbl
lahf
stos
shl
pop
movsb
mov
sbb
btr
punpckhbw
in
std
ret
push
mov
push
sarl
sub
lret
or
je,pn
lcall
push
cmp
inc
add
psubsw
out
sub
aam
ret
mov
imul
cwtl
icebp
mov
clc
dec
lea
sahf
insb
or
movsb
sbb
dec
inc
pop
xor
xor
mov
popf
mov
inc
add
fistps
cli
cmp
fcompl
or
inc
cmp
cmp
insb
add
mov
xor
xor
cs
mov
mov
jnp
dec
fwait
adc
std
or
cwtl
cmp
jg
sbb
test
adc
push
outsl
jl
out
xchg
adc
ret
jno
adc
inc
pushf
dec
jbe
mov
cwtl
xchg
in
pop
dec
fsub
insb
inc
push
push
dec
rorb
xchg
xor
add
lods
add
rcl
enter
xchg
icebp
inc
aam
call
xchg
das
enter
push
repz
sbb
lret
adc
mov
mov
dec
mov
pusha
inc
mov
push
cmp
inc
insb
fldl
jb
shl
cmp
pop
sahf
jbe
cmp
into
jmp
push
fldz
cmc
mov
cmp
lahf
roll
in
movsl
cli
mov
out
xchg
lret
lods
and
jge
lds
lret
fs
insb
out
leave
in
sbb
xchg
popf
jns
mov
inc
cltd
lcall
jecxz
shl
mov
sub
push
mov
sbb
mov
cltd
pop
imul
push
adc
mov
mov
repnz
shlb
movsb
fisttps
rorl
and
cmc
hlt
pop
sbb
fs
pxor
jg
add
fidivrl
adc
xchg
jg
and
push
in
inc
mov
jo
mov
out
test
sbbb
or
stc
cmpsb
loope
cmp
mov
out
aaa
or
mov
adc
clc
jmp
sub
in
sub
pop
xor
outsb
popf
push
or
fbstp
call
adc
inc
daa
pusha
sub
jo
ljmp
stos
sub
out
out
out
out
rdmsr
inc
jb
sub
add
popf
push
jg
inc
dec
mov
jge
sub
mov
sub
xchg
stc
cmp
sub
sub
fs
ds
into
mov
rol
sbb
xchg
outsb
mov
fmuls
push
out
adc
aas
rolb
sub
jns
aas
data16
stos
xchg
jmp
jns
pop
lret
mov
pop
or
jge
or
aaa
lods
pop
add
jns
imul
dec
bound
mov
dec
xchg
push
cmp
test
mov
cmpsb
inc
xchg
mov
cmp
mov
mov
sub
lods
out
xchg
sbb
repnz
jg
mov
loope
leave
pusha
mov
sahf
push
repz
ret
sub
fwait
stc
out
push
push
sbb
scas
push
xorb
pop
imul
lock
adc
stos
sbb
ficoml
pop
dec
xor
pop
int3
inc
inc
xchg
cmp
jo
js
icebp
or
xchg
shrb
xchg
xchg
xor
xor
mov
xchg
stos
popf
psubb
insl
inc
xor
imul
cmp
fdivp
push
sub
outsb
sub
pop
jg
subl
xchg
add
mov
or
out
icebp
add
inc
dec
add
dec
es
add
add
rolb
test
daa
adc
dec
pand
lret
ret
vpavgb
sub
ja
push
jmp
rorb
out
pop
pop
adc
nop
jmp
pusha
and
push
jge
inc
fiadds
cmp
xchg
sub
insl
jbe
adc
in
fstpl
mov
adc
lret
jge
add
les
fldcw
and
and
idivb
xchg
xchg
dec
popa
mov
dec
pop
sahf
mov
xorb
mov
pop
shlb
aad
pop
fnstenv
push
sbb
lcall
shrl
pop
mov
sbb
pop
push
idiv
add
cmpsb
lods
mov
push
insb
push
jl
dec
es
push
sub
cmp
or
sbb
in
xchg
mov
cmpsb
lods
mov
push
insb
push
jl
dec
es
push
sub
cmp
or
sbb
call
cmpsb
fcom
lods
xlat
testb
js
dec
es
push
sub
jbe
addr16
xchg
or
pushf
lods
mov
push
xchg
push
pushf
dec
sub
push
into
inc
mov
int3
int3
int3
int3
int3
xor
add
xor
imul
and
xchg
in
out
xchg
jecxz
shll
and
jne
gs
arpl
mov
mov
in
mul
shll
roll
insl
fstpt
add
xlat
ss
and
cwtl
aam
jmp
jecxz
movsl
pop
push
outsl
sub
add
ja
arpl
mov
nop
dec
int3
icebp
push
mov
jle
mov
fisttps
filds
std
xchg
fidivrs
xlat
sub
or
mov
call
data16
add
in
mov
pusha
jecxz
cmpsb
test
dec
jmp
divb
push
mov
inc
fidivl
adc
jecxz
sarb
ret
iret
int3
insl
movsb
xor
jmp
fsubs
and
pop
and
xchg
mov
in
std
jecxz
sub
mov
scas
mov
mov
lods
pcmpeqd
sbb
ja
jle
mov
rorl
mov
push
jne
adc
jg
adc
in
jne
cmp
in
mov
mov
mov
rcrl
inc
addr16
fs
or
dec
mov
lock
cmp
cmpsb
enter
inc
popa
add
push
aaa
cmpsb
push
push
dec
aam
icebp
movsb
xchg
cmp
ljmp
dec
and
push
adc
jns
add
mov
mov
in
xchg
jecxz
shll
and
jne
gs
arpl
mov
mov
in
xchg
jecxz
shll
test
rcll
mov
cmp
pop
sub
push
arpl
outsb
or
mov
sti
mov
data16
jl
sub
mov
sbb
orl
rorl
adc
stos
jp
stc
fnstsw
or
cmp
jmp
jmp
and
pop
jge
mov
jp
add
mov
fldcw
decb
mov
clc
adc
sar
sub
lods
in
arpl
push
mov
repnz
int
and
and
test
fistps
testb
push
dec
lods
adc
clc
pop
dec
xchg
dec
in
push
pop
incb
mov
test
mov
fisttpll
outsl
mov
je
push
scas
setge
lahf
jge
lea
push
add
idivl
aad
mov
add
push
push
enter
cmc
inc
scas
add
dec
pop
adc
cs
inc
xor
jb
out
mov
aaa
in
mov
cwtl
lahf
loopne
or
inc
sbb
jo
out
adc
jo
pushf
sbb
fwait
pop
adc
fdivr
mov
int3
idivl
push
stc
lahf
iret
fucomip
dec
movsl
movsb
dec
loop
sbb
ljmp
inc
out
xchg
sar
adc
popf
lret
sbb
inc
repnz
scas
push
xchg
sahf
push
je
mov
pusha
jge
cwtl
adc
fs
cli
mov
cmp
les
cwtl
xchg
notl
test
mov
roll
sub
lar
pop
mov
imul
das
pop
adc
clc
cmp
lret
push
pop
push
pop
rcll
add
xchg
scas
and
adc
jns
lock
sub
mov
xor
fiadds
mov
out
pop
inc
jae
lret
xor
repz
call
cmp
inc
pop
cmp
push
into
mov
or
mov
fisttpl
and
pop
lods
jb
jp
add
add
outsb
xlat
stos
ret
sti
dec
xlat
mov
push
mov
je
out
arpl
xchg
mov
insb
xor
mov
stc
fsubl
jo
and
mov
outsb
fs
jmp
mov
add
mov
sub
std
push
mov
sbbb
dec
adc
pop
mov
ss
inc
js
mov
mov
push
rorb
movsl
sub
jmp
or
xchg
icebp
cmpb
inc
repnz
inc
jecxz
cli
jp
std
push
test
cmp
loope
fs
lds
pop
mov
imul
dec
popf
sbb
jg
idivl
pop
pop
bound
daa
add
jle
je
mov
dec
jb
cmc
sub
xor
mov
jbe
scas
dec
add
pop
xor
test
popf
xor
sbb
xchg
xchg
push
dec
xchg
test
sarl
sub
call
or
jb
dec
add
add
sarb
std
xor
sahf
bound
scas
push
and
mov
push
and
jne
jnp
dec
mov
out
inc
dec
mov
cmp
les
sbb
xchg
push
insl
out
adc
pusha
insl
cmpl
pop
es
or
dec
iret
sbb
mov
scas
adc
out
sbb
mov
shlb
jno
mov
adc
fsts
cwtl
cmpsb
push
xchg
jle
fnstcw
nop
push
lret
lods
test
cwtl
rorb
rorl
mov
lcall
mov
data16
popa
into
sahf
pop
pop
cmpsl
mov
scas
xor
fcmovnb
ret
les
inc
ficomps
sub
pop
adc
std
mov
fiadds
inc
cmp
mov
ret
ja
xchg
lcall
mov
pop
cmpb
jne
jmp
addr16
xchg
mov
popa
sbbl
xor
inc
movsl
mov
in
mov
ficoml
into
out
ja
pop
sub
mov
push
cmc
pop
aaa
pop
inc
push
dec
mov
lds
test
lcall
mov
std
out
imul
scas
ja
inc
jnp
enter
cmp
xchg
rolb
jp
jnp
ret
ret
ss
cltd
cs
stc
aaa
and
jmp
sub
xchg
dec
or
push
dec
fdiv
jmp
sub
mov
ljmp
xchg
stc
push
cld
aaa
mov
je
shr
repz
popa
xchg
mov
not
jecxz
jb
sbb
mov
cld
pop
dec
xlat
in
jg
sub
mov
into
jge
xchg
mov
inc
jae
in
push
in
cmpb
xchg
jo
dec
xor
sbb
mov
push
mov
addr16
and
xchg
and
jle
xor
mov
mov
lahf
dec
cwtl
push
stos
out
jle
jo
leave
ja
pop
popa
cmpl
push
push
insl
mov
xchg
imul
clc
ja
jge
adc
loope
into
xchg
lret
in
inc
rclb
cli
push
sub
pusha
ret
icebp
ds
test
les
sbb
movsl
fcompl
scas
mov
iret
mov
inc
mov
mov
out
repz
pop
adc
push
jb
scas
push
and
gs
or
mov
mov
cmpsb
roll
ret
sbb
push
cmp
dec
fsubrl
sbb
pop
out
push
xor
pop
jae
jae
sbb
scas
aaa
and
scas
xchg
cmp
ljmp
lods
xchg
cmp
xchg
lret
adc
stos
loope
in
ss
inc
sub
pop
aad
fisubrs
addr16
out
jo
mov
scas
push
jmp
adc
adc
hlt
jle
aaa
adc
repz
iret
pop
js
push
cmp
pushf
aaa
out
inc
add
jmp
jp
inc
mov
cmp
jnp
cld
push
or
fs
jge
push
push
daa
sahf
or
xor
and
cmp
mov
popf
xor
sub
addr16
and
in
cli
sbb
and
dec
rcl
adc
imul
ss
cli
mov
sub
popa
xchg
pusha
test
inc
rol
outsl
push
pop
inc
repnz
add
sbb
cmp
mov
dec
je
sub
iret
sti
shlb
loop
cmpsb
xor
jl
pop
mov
sub
xchg
mov
lret
lcall
scas
pop
test
fidivrs
add
jge
imul
cmp
loopne
cmpsl
inc
push
xchg
orl
stos
daa
dec
stos
repz
lahf
cltd
adc
out
pushf
mov
adcl
cmp
pop
mov
jno
int3
mov
jne
xor
lret
mov
sub
mov
or
hlt
popf
lret
out
shrl
js
repz
and
xchg
xorl
sub
test
xchg
jns
in
or
scas
sub
xlat
or
loop
xchg
xchg
fisttps
add
mov
ret
test
pop
mov
cs
scas
insb
jmp
cmc
jge
lods
ja
dec
pop
loop
pop
mov
adc
scas
mov
inc
jbe
cltd
lds
dec
stos
mov
and
or
xor
or
pop
inc
cld
jecxz
in
popf
lahf
cmp
call
ljmp
cvttps2pi
lret
stos
add
dec
pop
dec
fstpl
clc
rcrl
xor
and
add
cmp
adc
xchg
lods
lods
dec
test
fidivl
pop
xchg
cmp
je
cmp
jp
aas
mov
mov
sbb
cmp
je
push
icebp
cs
inc
xor
jns
mov
aas
xchg
sub
cmpsl
xlat
clc
daa
out
ljmp
movsl
ds
inc
cld
jle
daa
arpl
mov
cli
dec
faddl
pop
fwait
push
shlb
out
add
scas
xor
sub
mov
ds
cmpsb
mov
fdivs
mov
mov
xor
fmuls
dec
stos
hlt
mov
int
lret
push
cmp
adc
movsl
push
jno
cmp
out
jge
add
mov
xchg
and
mov
pushf
or
xlat
roll
sti
jmp
iret
loope
mov
push
loopne
das
sti
mov
xchg
std
xchg
dec
pop
mov
mov
cmp
pop
cmp
lds
cwtl
adc
xlat
pop
faddl
imul
add
cmp
addr16
cwtl
xchg
in
lret
adc
scas
pop
inc
subb
pop
dec
fldenv
sub
mov
lds
es
fwait
rorl
shlb
loop
pushf
mov
mov
pusha
lahf
and
pop
xor
mov
out
leave
out
stos
mov
lret
push
mov
xchg
xchg
dec
clc
push
cmpsb
test
fstpt
ds
ss
sbb
icebp
push
sbb
ljmp
stc
aam
pop
test
mov
mov
pop
xchg
movsb
dec
cmp
dec
daa
clc
popa
out
or
jle
jecxz
sub
pop
stos
testl
cld
inc
stos
xor
cs
test
call
inc
sbb
cmc
imulb
sbb
daa
mov
mov
xchg
add
test
cmp
aaa
cld
pop
negb
add
ret
sub
push
or
fcompl
adc
rcrl
add
sbb
movsl
inc
ljmp
test
push
pop
and
cmpsl
mov
mov
cmpsl
push
lahf
js
icebp
ret
out
xorl
adc
jns
lea
in
or
out
sub
or
mov
xchg
mov
shrl
shll
mov
and
sub
sbb
and
mov
jbe
mov
adc
mov
push
adc
sahf
adc
mul
sub
call
cmpsb
test
call
cli
cmc
pop
loope
aam
out
inc
ficoml
cmp
jae
test
rcrb
pushf
push
inc
lods
cld
and
jle
lock
cmp
xchg
pop
sub
or
add
cmp
push
enter
incb
xchg
fistpll
jl
sub
loope
ds
scas
negl
push
sbb
mov
push
cltd
xor
ret
iret
and
adc
push
shll
push
andl
rcl
ljmp
fistpl
cmp
stos
xchg
push
pop
adc
ja
stos
dec
inc
xor
ja
pop
faddl
mov
mov
push
fcoms
out
jbe
loop
movsb
cli
cmp
push
add
jge
hlt
xchg
addl
repnz
mov
icebp
xor
jae
dec
pop
cltd
jle
mov
jmp
std
aaa
cld
ret
shll
dec
mov
pop
movsb
movsl
aas
xor
mov
cmp
pop
xor
ffreep
or
lret
dec
mov
loop
dec
js
push
rcll
xor
add
imul
lods
push
mov
insl
test
lret
xchg
sub
add
dec
mov
inc
loope
icebp
xlat
fsubs
int3
cs
mov
mov
out
jno
fcoml
fadds
out
cmp
movsl
int3
sti
dec
push
enter
xchg
xchg
mov
les
mov
push
fnstenv
or
cwtl
out
mov
insb
dec
mov
xchg
sub
sbbl
imul
jge
out
shl
mov
movsb
ret
call
sub
popf
test
and
mov
or
int
xchg
inc
mov
dec
cmpsb
mov
sub
push
int
rcrb
xor
mov
mov
push
movl
sbb
movb
jl
jle
jecxz
mov
push
fcomi
xlat
loopne
add
xchg
repz
in
vandps
push
into
push
mov
stc
cwtl
jb
add
mov
xchg
les
sub
add
xchg
push
loop
push
int
ss
insb
fcompl
jne
push
jne
jl
dec
popf
test
arpl
xor
or
mov
mov
sub
xchg
insb
xor
xchg
fnstsw
mov
xor
nop
subb
sub
pop
aas
xor
push
std
ret
testl
nop
push
aas
lcall
cmp
in
rcl
and
jae
adc
cmp
adc
mov
inc
adc
gs
outsb
mov
xor
es
lock
dec
sti
jl
dec
std
fstpl
inc
ja
in
insl
adcb
sbb
loopne
xor
xor
xchg
push
pop
addr16
or
dec
pop
movsl
xor
xlat
mov
jp
lret
sbb
jbe
add
jns
inc
and
fisttps
xchg
outsl
xchg
push
scas
mov
loope
xchg
testl
js
sahf
push
add
pop
fs
xchg
test
push
cmpsb
aam
mov
inc
rorb
cmpb
or
jmp
add
adc
repnz
mov
lahf
xor
movsb
sub
shll
pop
dec
sbb
stos
mov
orb
imul
mov
inc
mov
adc
lods
insb
data16
aas
add
push
inc
daa
inc
fs
push
push
loopne
imul
mov
rcrb
push
scas
or
sarl
dec
push
clc
aam
shlb
mov
scas
push
or
cli
mov
sub
jb
cwtl
adc
dec
sub
pop
fmull
repnz
insl
inc
push
add
jns
adc
xlat
mov
iret
sbb
mov
add
jmp
jle
cltd
loope
jle
jl
das
cld
les
lcall
ficompl
add
enter
fsubs
inc
dec
sbb
das
mov
mov
pop
movsb
cld
lea
jl
clc
push
int
jb
cmp
dec
fildll
cmp
dec
in
xchg
inc
loope
stc
push
test
xchg
sbb
cltd
shlb
mov
dec
cmp
push
add
cmp
shll
jne
xor
mov
popa
dec
sub
and
xchg
jo
xlat
lret
xchg
out
call
aam
sub
mov
cwtl
cld
loop
andb
shlb
bound
subb
lea
out
das
pop
scas
mov
or
sbb
adc
push
xlat
arpl
cmp
pop
lcall
pop
xchg
loopne
cld
mov
inc
mov
test
addr16
cmpsb
or
mov
xchg
mov
pop
fnstcw
lods
cmp
mov
or
pop
sbb
repnz
dec
pop
pop
pop
out
pop
in
repz
dec
scas
lods
lds
lret
cmpsb
inc
push
roll
lret
stc
and
adc
out
insb
stc
and
ja
push
push
roll
fisttpl
mov
or
stos
jne
xor
push
iret
out
cli
pop
jg
inc
fcmovnu
ss
adc
push
clc
inc
push
mov
hlt
xchg
mov
dec
imul
push
imul
sbb
jne
mov
pop
and
fidivl
repz
push
ret
and
xchg
xor
jg
aad
bound
cmpsb
xor
pop
add
loopne
outsb
mov
mov
arpl
addr16
mov
xchg
xchg
arpl
sub
das
dec
mov
xchg
jp
and
inc
push
cmp
decl
mov
xor
mov
dec
scas
mov
sub
lods
andb
xor
test
sub
movsb
fnstenv
or
pop
pop
dec
insl
inc
or
sbb
fbld
and
sti
cltd
int
jle
mov
shlb
xor
popa
sbb
out
mov
js
inc
mov
cmp
nop
int
aaa
imul
ds
adc
xor
into
mov
pop
dec
ss
popf
insl
jne
xor
push
inc
adc
or
pop
xlat
fs
push
sbb
mov
scas
rcrb
sub
rcll
sbb
sbb
fnstsw
or
dec
adc
pop
leave
dec
cltd
push
mov
cmp
mov
stc
cmp
inc
jne
insb
cmpsl
sbb
mov
inc
add
cwtl
inc
stc
cmp
add
lods
xor
cmc
sbb
cli
inc
loop
xor
and
stc
mov
shrl
mov
mov
dec
call
mov
loopne
pop
jbe
mov
pop
rcr
inc
jle
xor
xchg
icebp
fldl
cmpsl
jnp
adc
or
ds
inc
jbe
and
add
hlt
push
mov
xor
test
push
and
adc
call
adcl
inc
js
roll
xchg
pandn
pop
fbld
push
call
in
es
in
jge
xlat
cltd
xchg
inc
dec
in
push
ljmp
hlt
fisubrs
cmpl
fstpt
ds
push
movsb
sub
mov
xchg
jno
jle
mov
scas
rorb
mov
adc
sub
sub
setns
adcb
mov
pop
push
adc
rcrb
pop
stc
ret
and
inc
sbb
jmp
ss
xchg
sbb
pop
jmp
jae
inc
dec
xchg
cmpsb
into
movsb
inc
jnp
rorl
and
repnz
mov
mov
icebp
inc
lods
and
xchg
into
pop
out
mov
cld
shll
mov
sbb
pop
hlt
mov
lret
es
mov
out
gs
cwtl
cltd
cmpsl
imulb
jbe
mov
shrl
and
inc
mov
mov
nop
dec
sti
pop
sub
push
stc
lds
cmp
dec
jbe
push
jns
inc
sarl
sub
sub
in
push
sub
sbb
inc
lcall
dec
mov
mov
sahf
das
pop
cmp
xchg
adc
imul
mov
jg
xchg
sbb
add
pop
rcl
and
xchg
fmuls
fsubs
loop
inc
and
xor
xchg
ret
repz
push
add
sub
cli
loopne
loop
ficoms
pop
cmp
adcl
inc
shr
add
dec
jo
dec
loop
pusha
aad
mov
dec
lods
rorl
pop
aas
addr16
mov
inc
rorb
cmpl
adc
jge
push
cmp
inc
div
fimuls
adc
push
jecxz
xor
or
jg
orb
push
add
and
in
sarb
push
cmpsb
or
sub
cmp
push
ja
xor
jl
push
mov
xor
jne
xchg
dec
jns
dec
jb
jmp
movsl
nop
mov
mov
cli
ret
xchg
jnp
push
stc
aad
inc
inc
mov
int3
mov
xor
sarb
adc
out
ret
nop
cwtl
inc
xor
cmpsb
pop
cmpsl
outsl
dec
fdivrl
fnstcw
arpl
mov
fadds
in
push
push
jecxz
out
les
out
xor
push
loop
push
inc
aaa
cltd
mov
mov
ret
rcl
inc
jecxz
inc
jae
cwtl
mov
mov
loop
push
leave
lea
fistl
adc
movsb
ljmp
jb
out
dec
adc
rcrb
or
imul
into
sarl
ds
dec
cmp
dec
pop
and
pop
cltd
sbb
in
iret
es
lds
jae
stos
push
fcoml
push
and
fcompl
cmp
cmp
pop
stos
adc
test
cmc
pop
in
jo
aad
daa
out
inc
dec
push
xor
sarl
pop
decl
fimuls
mov
movsl
das
ret
add
pop
jbe
fistl
adc
bts
ja
mov
lods
dec
mov
xchg
test
mov
dec
jb
daa
dec
test
loopne
lahf
adc
lock
aad
arpl
out
js
stos
pop
sahf
xor
xchg
arpl
roll
flds
dec
push
cltd
xor
outsb
lds
dec
test
or
dec
imul
stc
test
out
stos
enter
rcr
xchg
dec
dec
arpl
fsubrs
mov
loope
or
lret
stc
inc
push
fwait
inc
icebp
and
xor
sub
mov
into
aam
xor
sbb
mov
outsb
mov
ljmp
or
mov
sti
idivb
or
mov
dec
das
sbb
movsb
sub
test
adc
add
cs
movsb
movsb
xorl
mov
icebp
sbb
xchg
jo
mov
sub
inc
mov
popf
mov
shlb
sub
in
jo
xor
das
jmp
xchg
mov
xchg
push
les
lcall
mov
lret
fisubrl
xchg
jg
pushf
adc
sbb
icebp
jno
push
fsubrs
and
jns
mov
sti
jno
rcll
mov
pop
in
sti
xorl
outsl
xchg
dec
adc
lods
fmull
add
adc
fstl
out
movl
aaa
fs
adc
out
es
jae
push
xchg
lret
push
out
fs
adc
int3
and
cmp
lahf
mov
lahf
xchg
mov
repz
mov
sub
rorl
decb
push
cmpl
rol
fidivrl
subl
mull
or
insl
js
pop
mov
pop
adc
sti
shll
mov
inc
mov
in
mov
jge
shl
inc
xchg
and
int
mov
and
imul
fiadds
pop
mov
call
jle
adc
lret
stos
cmpsb
mov
fisubrl
movsl
lods
push
xor
fldcw
sub
push
neg
jecxz
lcall
or
adc
fwait
xchg
int3
and
stos
pop
jl
add
cmp
scas
cmp
mov
mov
cmpsb
sbb
cmpsb
sbb
jns
mov
mov
pop
fisubrl
jge
cmp
aam
cmp
sub
ds
or
es
sbb
xchg
out
inc
pushf
dec
inc
jae
int3
adc
loop
xorb
inc
or
dec
shl
lock
wrmsr
shlb
xor
jge
and
test
in
popf
fidivrs
pushl
ficompl
ss
testl
push
lcall
xchg
insb
mov
and
add
or
shl
ja
jge
rcrb
mov
cmp
mov
or
pop
lcall
or
xor
imul
jge
ret
mov
cmpsl
inc
push
lcall
push
xor
mov
in
xchg
jecxz
shll
and
jne
gs
arpl
mov
mov
in
xchg
jecxz
shll
adc
jne
gs
arpl
mov
mov
in
xchg
repz
mov
movsl
daa
push
jg
dec
jne
gs
jae
push
xor
pop
outsl
cmp
adcl
dec
cmp
int3
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
mov
test
xchg
popf
xor
or
xor
add
adc
fs
jbe
inc
js
mov
xchg
enter
call
and
adc
add
adc
or
push
ss
mov
sub
xchg
enter
call
sti
cmp
pop
pop
addr16
xor
sbb
cld
movsb
stc
fisubrl
rorl
or
daa
xor
lds
aas
or
movsl
push
fiadds
enter
adc
adc
insb
movl
inc
sub
ja
repnz
sahf
icebp
mov
and
pop
mov
or
cltd
dec
inc
shll
js
mov
imul
mov
clc
sub
fistl
call
nop
lods
repz
inc
adc
sar
adc
jae
or
and
ret
mov
sbb
fdivs
push
js
mov
pusha
or
mov
call
pop
fdivr
push
or
or
dec
movsb
cwtl
inc
test
mov
hlt
call
mov
cmp
pop
mov
js
in
idiv
mov
mov
xchg
jge
pop
jo
jge
or
add
loope
cmc
lret
in
mov
mov
mov
push
popa
cmp
xor
cmp
and
cwtl
repz
aam
testl
and
xor
add
adc
fs
je
inc
js
mov
xchg
enter
call
and
xor
add
adc
fs
je
inc
js
mov
mov
divb
dec
test
add
xchg
pop
mov
inc
loopne
cmpsl
xor
popa
jae
jmp
je
int
xlat
fcoml
jmp
pop
mov
addr16
imul
std
push
mov
jl
cwtl
add
adc
pop
das
fstps
jae
repz
push
popa
add
push
inc
lods
test
and
jno
push
out
into
xor
test
jne
es
mov
xor
stos
out
in
push
in
movsb
dec
inc
jmp
nop
xchg
stos
push
pop
xchg
xor
out
pop
mov
push
testl
push
adc
stos
xchg
hlt
mov
xor
inc
hlt
leave
push
imul
adc
mov
leave
loopne
daa
test
lea
aam
jbe
test
xchg
cmp
ds
scas
outsl
inc
test
dec
pop
xchg
clc
mov
mov
or
in
xchg
mov
pop
cwtl
dec
adc
sub
mov
outsl
mov
adc
push
ret
aad
cmpsb
pop
and
xchg
vmovaps
push
adc
inc
mov
lea
notl
cmpl
cmp
push
rol
mov
sbb
in
or
push
js
pop
xchg
jp
sar
xchg
rol
dec
outsl
mov
shlb
jmp
or
rorb
arpl
icebp
cmp
cmp
mov
aad
jne
ja
mov
adc
pop
inc
fistps
xor
jle
jmp
pop
cmp
rcll
into
pop
and
inc
clc
movb
pop
sub
push
adc
int
and
repz
cmpsb
push
push
js
xchg
daa
cmpb
les
fidivrl
pop
rep
cmpsl
lods
mov
and
mov
daa
idivb
push
lret
push
xorb
jmp
adc
pop
fsts
and
mov
movsl
cmp
push
out
pop
rcl
scas
rcrl
xor
repnz
ret
cli
mov
xor
sahf
in
adc
fisttpll
pop
sbb
sub
sub
mov
out
lcall
lods
scas
js
shr
mov
cmp
cmpb
lea
or
pop
xchg
adc
dec
adc
jno
lcall
outsb
pop
in
out
jp
cmp
push
inc
add
imul
clc
aam
and
sbb
adc
dec
incl
out
inc
push
xor
xchg
xchg
mov
cld
push
add
add
jge
jge
stos
clc
js
mov
clc
sbb
mull
ret
xor
jp
cli
aas
loope
dec
and
or
push
cli
cmc
push
pop
jo
and
out
hlt
xchg
aas
pop
push
adc
popf
xor
ficoml
cmpsb
int
dec
mov
xor
jmp
inc
push
xchg
jmp
stos
xchg
std
cltd
jno
xorl
decl
mov
imulb
inc
movsb
mov
push
imul
push
inc
stc
imul
or
sub
out
jge
cli
int
adc
mov
ds
push
pop
push
fnstenv
lcall
dec
inc
push
and
inc
pusha
pop
xor
and
inc
jb
mov
dec
call
mulb
jg
ret
jo
arpl
mov
and
add
xchg
cmpsb
xchg
int3
and
and
and
sbb
out
mov
mov
aaa
pop
xchg
aad
push
mov
bound
pop
add
push
push
scas
xchg
gs
ja
movsl
call
mov
idivb
push
js
lds
popa
ds
mov
sub
outsb
cmpsb
mov
pop
mov
iret
lret
inc
push
jl
fcoms
std
adc
xor
mov
lock
cmp
pop
cmp
je
mov
jae
jg
push
in
inc
fsts
mov
cwtl
mov
lret
loope
lea
shrl
cmp
cmp
xlat
int3
inc
xor
lods
or
lahf
sbb
enter
add
lret
sub
mov
lds
nop
push
ds
mov
mov
icebp
loope
cld
xchg
shlb
scas
xlat
pop
mov
cli
lods
jle
jle
add
mov
inc
addl
push
outsl
loope
leave
outsb
jge
and
push
push
imul
jl
mov
sub
inc
jbe
sahf
jp
push
lock
sbb
mov
notb
sub
js
popa
enter
inc
jne
or
mov
add
outsb
jne
leave
sahf
push
dec
rcrl
repz
fwait
std
int
xchg
cltd
and
or
mov
in
dec
out
je
and
aam
inc
sub
call
cmp
sub
ret
icebp
or
aas
scas
int
dec
leave
or
cmc
or
cltd
sbb
adc
subb
jle
pop
sbb
mov
outsb
xlat
out
jo
pop
es
das
outsb
xchg
loop
fcmove
subl
fstl
into
mov
jmp
xchg
nop
push
mov
mov
sub
pop
fildl
inc
cmc
xchg
dec
fsts
test
mov
cwtl
pop
pop
pop
mov
lock
test
mov
pop
leave
loopne
jecxz
stos
pop
or
sub
mov
xor
cmpsl
rcll
arpl
rcrb
sbb
xchg
cwtl
mov
dec
lret
scas
mov
sti
pop
inc
inc
fistps
call
cmp
pop
sub
push
sub
push
cmp
xchg
inc
lea
imul
shlb
stc
sbb
and
xchg
out
push
xchg
not
cld
lahf
and
aaa
xor
push
lods
repz
inc
mov
sbb
movhps
test
sbb
pop
sub
and
jle
pop
mov
mov
cmpsl
xchg
mov
insl
popf
bound
and
adc
push
out
clc
movsb
push
pop
cs
test
out
outsl
dec
cmpsb
lret
pop
adc
dec
and
add
push
dec
popf
pop
es
sub
sub
cltd
out
xchg
fisubrl
inc
pushf
dec
xchg
adc
xchg
inc
int3
push
lret
fisttpl
mov
xor
pop
lock
adc
xor
jg
inc
sub
call
insl
call
add
mov
pop
xchg
cmpsb
cld
xchg
aaa
adc
jne,pt
or
or
sbb
or
sub
or
and
repz
aad
sarl
mov
xor
testl
lods
fwait
pop
shll
inc
xor
mov
xchg
xor
in
aaa
lcall
sbb
popa
mov
xor
mov
inc
mov
or
mov
push
in
jmp
lcall
xchg
sbb
push
rcrl
cld
ret
enter
sub
xchg
test
mov
arpl
adcl
add
and
sub
inc
lock
js
jecxz
stos
cmp
jne
fwait
shlb
pop
cmp
iret
arpl
push
mov
stos
and
inc
in
xor
lods
cmp
rcr
mov
jns
adc
ficoms
pop
push
test
mov
xchg
aad
jns
pop
xchg
adc
cmp
rcrl
dec
and
les
push
test
aas
orl
lret
sbb
inc
push
inc
xchg
mov
cmpsb
in
shll
xchg
sti
repz
and
hlt
mov
push
pop
pop
xor
into
mulb
push
or
mov
addl
pushf
jnp
popf
popf
aaa
and
cmp
in
loope
scas
es
jno
out
or
into
cli
mov
push
inc
add
cli
add
sub
out
mov
push
xor
scas
lcall
mov
in
mov
loop
push
out
mov
inc
ss
scas
mov
mov
sub
cmp
ds
jo
cmp
mov
and
lds
inc
cmp
cmp
push
loope
es
mov
jne
testl
fwait
test
add
ljmp
or
and
cmp
arpl
add
aad
movl
lret
loope
repnz
insl
imul
insb
bound
in
aas
mov
and
out
cmp
mov
or
repz
je
push
insb
rcll
adc
movb
xor
bnd
fs
and
gs
imul
subl
jbe
inc
xchg
xor
cmp
lock
or
adcb
and
gs
in
xchg
mov
pop
push
xchg
mov
cmovno
movsl
negl
xchg
js
iret
cmp
jno
mov
lds
pusha
lcall
mov
mov
addr16
xchg
jle
and
out
cltd
cmpb
push
mov
dec
add
inc
or
xchg
int
mov
pop
hlt
lcall
xorb
je
sub
outsl
mov
stos
mov
sub
pop
mov
jnp
js
jo
cltd
shrb
daa
out
cmp
adc
jp
in
lock
neg
shrb
lret
jge
aas
jmp
jl
cltd
mov
cltd
scas
push
jle
lock
sbb
cmp
dec
aad
jae
inc
rcrl
add
push
inc
sub
scas
clc
xor
in
pop
jmp
mov
dec
into
outsb
adc
cmp
fistpl
or
jecxz
cmp
adc
movsb
in
out
inc
call
pop
jmp
shll
fisttpll
push
sub
hlt
push
sub
test
loope
xor
ja
push
lcall
xchg
jge
xchg
adc
inc
sbb
push
addr16
aad
roll
or
jns
ret
into
repz
push
jecxz
push
ds
loop
mov
mov
cli
adc
mov
xchg
dec
sahf
add
lods
cmp
arpl
jg
into
mov
js
mov
fsubs
mov
mov
pushf
add
fiaddl
xchg
jp
pop
sarb
xchg
movsb
ret
pushf
outsl
jg
imul
lret
movsl
xchg
loopne
xchg
das
ss
out
jne
jnp
ds
out
jl
daa
add
shlb
cmp
rcr
movsb
sti
pop
pop
insb
adc
xor
pop
xor
or
or
rcl
pop
ret
xor
mov
adc
dec
mov
push
out
rcll
loope
cwtl
mov
jl
ret
mov
iret
repz
imul
sbb
into
scas
and
fwait
jle
sbb
mov
frstor
cltd
jnp
or
sbb
add
int
mov
das
or
push
pop
push
adc
mov
andb
int3
stos
inc
add
xchg
dec
or
jg
mov
dec
adc
lret
mov
or
inc
mov
lds
hlt
mov
and
loop
or
jle
pusha
jle
xor
and
adc
mov
bound
out
movsb
add
in
xchg
jp
mov
pop
xor
and
out
fwait
xlat
fwait
in
push
mov
sbb
mov
js
add
lods
repnz
push
push
xor
sbb
hlt
lret
fs
xchg
and
adc
popf
cmp
cmc
dec
lods
fisubrl
adc
add
push
cmp
outsl
xlat
inc
add
nop
xlat
dec
pop
fnsave
enter
inc
jnp
sbb
pushf
xchg
cs
xchg
out
fbld
and
pop
popa
dec
inc
clc
shl
add
mov
and
xor
dec
xchg
xor
aam
mov
inc
pop
or
xor
ljmp
in
sub
pop
pop
xchg
or
add
mov
add
arpl
imul
mov
movb
inc
mov
add
cmp
aas
pusha
sub
fsts
pop
filds
test
xor
out
fs
cmc
test
add
fisttpll
rorl
shrb
add
fsts
stos
mov
push
inc
js
add
loopne
fisubrs
imul
les
sub
sub
in
jb
imul
movsb
ret
jle
out
fldenv
mov
es
jb
push
nop
push
jno
pop
aas
adc
lcall
movsl
xchg
pop
jo
jbe
pop
fwait
jge
pop
mov
xor
sub
xchg
nop
jle
push
shlb
lcall
adc
push
mov
and
fdivrl
and
int3
je
out
idivb
call
cmpsb
pop
scas
cld
lds
and
jl
and
imul
jg
int
loop
dec
push
insb
and
setl
and
aas
out
out
fs
and
jne
and
sub
inc
add
mov
mov
pop
pop
or
jnp
push
jns
ss
inc
mov
outsb
push
and
cmp
ds
fs
sarb
and
int3
jns
inc
popa
and
mov
pop
test
mov
jbe
leave
pop
xchg
add
and
lret
aam
jle
cltd
xorb
xchg
add
xor
in
push
out
test
mov
pop
das
cli
adc
aad
shll
pushl
mov
ret
add
call
mov
pushl
sub
mov
push
js
pop
jle
into
add
movsl
popa
adc
int
stos
mov
repnz
jge
int
adc
out
adc
icebp
mov
sub
sarb
xchg
insb
mov
sbb
scas
rclb
inc
outsl
or
xchg
xor
and
lret
or
xchg
lahf
test
jecxz
shll
mov
add
or
inc
aaa
sbb
movsl
mov
fcmovnb
dec
fidivrs
push
xor
ss
add
xor
rcr
loopne
fstps
or
or
aam
icebp
jnp
push
outsb
dec
negl
and
push
add
and
fldenv
out
pop
repnz
imul
lods
mov
lcall
stc
orl
fidivrl
add
dec
call
or
pop
mov
push
sti
ss
inc
ss
mov
pop
sub
cld
mov
cs
fidivs
aaa
sbb
arpl
call
fsub
adc
es
subb
test
cmp
js
xchg
cmc
lahf
pop
jo
lahf
mov
jge
push
pusha
in
mulb
pop
push
xor
push
pop
call
loope
lcall
mov
mov
jb
sahf
and
lret
sbb
aad
mov
jb
pop
repnz
and
adc
cli
je
dec
mov
pop
shll
inc
loop
lock
adc
ljmp
cmp
rorl
cmp
ret
cmpsb
push
jmp
les
or
jno
cli
adc
outsb
ja
jl
daa
es
sti
inc
mov
add
xorl
popf
je,pt
outsb
aas
lahf
adc
outsl
cmp
mov
pop
add
rorl
pushf
xor
mov
rorl
out
jno
movsl
insb
imul
movsl
mov
jns
jae
incl
xorb
test
pusha
in
mov
stc
popf
mov
lods
adc
xor
mov
xchg
sti
xor
sub
in
pop
dec
mov
outsl
or
out
cmp
out
movsb
mov
roll
les
lret
jmp
repnz
scas
fdivp
cmp
xchg
ja
mov
dec
out
push
or
mov
add
xchg
rcrl
loope
and
pop
sub
sub
mov
or
inc
add
adc
mov
mov
outsl
hlt
sarl
loope
and
insl
pop
sbbl
popf
dec
fsts
mov
out
in
popa
jne
add
jno
cli
bound
clc
xchg
add
out
xchg
sarb
movsl
bound
fistpl
xchg
repnz
es
in
cmp
xor
test
xor
jbe
inc
push
sbb
sar
scas
jle
or
lahf
and
jge
sub
sbb
adc
cld
inc
out
iret
rolb
add
cwtl
cwtl
add
int
adc
jo
jbe
sbb
pop
adc
push
out
dec
fdivrl
inc
xor
xchg
or
ret
pop
mov
and
mov
xchg
add
lock
push
mov
add
xchg
gs
jmp
inc
int3
adc
mov
in
addr16
sub
gs
xchg
adc
push
gs
pusha
shll
sti
or
cmp
inc
jno
nop
xor
shll
cli
adc
js
outsl
out
mov
xor
xchg
push
sub
lock
add
pop
mov
test
sbb
ja
adc
fnsave
sbb
shlb
repz
aam
cmp
call
and
outsl
adc
or
cld
imul
js
xor
and
cmp
inc
add
in
adc
jle
dec
imul
xchg
mov
xor
add
jecxz
dec
imul
popa
jbe
pop
lret
cmp
dec
bound
xor
pop
xchg
aas
xchg
cltd
std
bound
aad
je
mov
pushf
jl
adc
xchg
lods
mov
mov
sti
mov
jmp
jmp
push
push
jmp
pop
inc
out
xchg
fisubrl
pop
push
dec
adc
lds
rcrb
mov
call
inc
stc
jecxz
dec
xchg
jne
scas
insb
test
jle
mov
xchg
andnps
pop
clc
adc
dec
roll
popf
leave
mov
movl
fcomps
je
lods
push
pop
push
jg
mov
cmp
aaa
xchg
xchg
test
pushf
inc
xlat
lods
into
pop
or
sbb
mov
cmp
aam
inc
nop
repnz
ja
loopne
pop
aam
lods
fwait
sti
adc
dec
sar
mov
jne
in
jo
adc
push
pop
clc
push
ss
sbb
mov
mov
adc
mov
mov
es
idivb
or
aam
test
fs
inc
jno
mov
addr16
lods
mov
subb
arpl
xor
and
xor
mov
pushl
not
lods
mov
mov
mov
pushf
rcrb
dec
push
or
roll
iret
nop
mov
pusha
mov
ds
cmp
dec
mov
inc
inc
dec
repz
incl
cwtl
add
repnz
push
mov
adc
cmp
jge
dec
das
lahf
add
insl
cmc
sub
lods
sub
or
sub
push
cmp
push
shlb
movsl
sub
xchg
test
shlb
mov
xchg
xchg
ja
jg,pn
ljmp
adc
jo
call
int
xor
inc
mov
adc
xchg
pop
pop
out
lcall
cmp
or
stos
or
enter
movsl
cli
test
xor
stc
mov
jge
dec
gs
rcrl
mov
rclb
jbe
repnz
in
pop
jae
mov
gs
movsl
mov
inc
insb
dec
gs
movsl
mov
popf
or
mov
imul
jae
adc
cltd
fistpll
fsubr
loope
or
outsl
dec
inc
cmp
int
rcr
jmp
inc
inc
adc
cs
mov
rol
sbb
int
aaa
cli
pop
xor
push
jmp
xor
jmp
pop
and
xor
outsb
jnp
arpl
adc
push
cmp
inc
incl
adc
xor
mov
and
fldenv
pop
push
and
mov
je
es
out
notl
xchg
mov
mov
sahf
ficoml
fsts
mov
xor
cmp
aaa
xor
icebp
push
or
iret
movsl
inc
inc
and
jbe
insb
jge
cmp
jns
lahf
mov
or
clc
pop
ja
push
inc
loope
and
fnstcw
cli
mov
mov
add
mov
cld
subb
sbb
popa
and
aaa
xchg
jno
popa
js
and
loopne
repnz
fldcw
mov
push
imul
mov
dec
test
sahf
or
imul
repnz
lcall
daa
pop
ret
push
pop
xchg
and
xor
mov
ja
mov
or
addr16
xchg
es
movsb
inc
in
adc
iret
jmp
shll
and
es
sub
imul
xor
inc
push
mov
call
lods
xchg
andl
imul
sbb
fstpt
xor
mov
add
in
std
adc
mov
xchg
add
push
cmpl
cmp
push
push
jmp
daa
in
lock
int
and
cmp
xor
lock
int
xchg
lea
movsl
pusha
push
jg
mov
sbb
and
or
inc
dec
mov
ja
ret
les
jmp
lcall
or
mov
jae
mov
mov
adc
pop
or
push
iret
mov
push
mov
loop
dec
mov
xchg
inc
stos
test
int
mov
dec
push
add
cmp
push
sbb
cmp
xchg
xor
mov
push
sbb
fiadds
xchg
mov
push
jmp
popa
fdivrl
jns
addb
lahf
push
out
lods
push
decb
cli
insl
aas
pop
sub
out
out
sub
mov
lahf
add
mov
iret
jg
xchg
add
loope
es
sbb
fbld
data16
cmc
and
inc
pop
and
outsl
sub
sub
test
mov
mov
rorl
fimull
scas
test
dec
sub
push
push
push
enter
test
jnp
repnz
fsubrp
test
sbb
jge
fucom
mov
cwtl
push
andb
pop
fisubrs
inc
fidivl
gs
mov
and
and
lods
add
jno
es
inc
out
mov
jae
fcomps
frstor
popf
popa
cmpsb
push
xor
rclb
test
ficoms
sbb
xor
icebp
in
jecxz
out
xchg
bound
repz
loopne
hlt
cmp
movsb
push
scas
adc
hlt
xorb
pop
repz
push
icebp
popa
stc
repz
xchg
dec
inc
cmp
out
pop
cld
addb
addr16
mov
pop
incb
pop
rolb
mov
mov
fsubrs
testb
dec
aas
shll
mov
inc
cld
sub
dec
mov
fcmovnb
push
xor
adc
fildl
test
cmpsb
test
mov
dec
mov
out
int
and
ja
mov
pop
in
or
adc
mov
cltd
mov
js
mov
out
push
es
push
imul
and
aaa
cmp
xorl
es
call
fdiv
call
and
xor
add
adc
fs
je
inc
js
mov
xchg
enter
call
and
xor
add
adc
fs
je
inc
js
mov
xchg
enter
call
cld
sbb
add
adc
fs
je
fs
mov
xchg
enter
push
sahf
addb
aas
in
rorb
int3
int3
int3
int3
int3
push
add
adc
and
xor
xor
adcl
xchg
out
div
push
add
adc
and
xor
push
push
popaw
jbe
xchg
mov
push
rcl
out
div
push
add
adc
and
xor
push
push
popaw
jbe
xchg
mov
xchg
mov
icebp
pop
add
es
pop
fisttpll
bound
les
mov
xchg
or
or
into
mov
insl
mov
cmp
icebp
pop
mov
xlat
pop
mov
jnp
push
adc
and
inc
pop
int
and
in
data16
xchg
outsl
cmpsb
movsb
jbe
xchg
shrl
push
push
adc
and
jecxz
jbe
or
fmull
xchg
xchg
andl
imul
test
scas
in
xor
outsb
rclb
or
xchg
mov
mull
in
mov
push
jmp
jbe
sarl
sbbb
mov
ds
and
lret
adc
and
xor
push
push
popaw
jbe
xchg
mov
mov
shl
loope
mov
insb
ja
cs
add
add
iret
into
ffreep
lods
test
arpl
pop
inc
and
inc
and
jg
push
and
jecxz
std
movsb
divl
mov
arpl
gs
push
pop
inc
or
jbe
xchg
mov
mov
shl
loope
icebp
push
add
adc
and
xor
push
push
popaw
jbe
xchg
mov
mov
shl
loope
icebp
push
add
add
rcrl
loopne
test
lcall
pop
loope
xchg
ret
cli
sahf
shrb
lds
dec
sbb
push
adc
jle
into
dec
dec
cmp
push
stos
jno
add
jle
mov
adc
xor
leave
push
inc
negl
into
lahf
es
sub
jo
arpl
and
adc
das
jmp
mov
cmpsl
pushf
inc
daa
push
scas
shlb
or
cmp
rorb
pop
in
push
jecxz
nop
std
iret
push
xchg
sarb
ret
xor
mov
cmc
push
pop
out
xor
xlat
dec
inc
les
roll
mov
lret
sub
pop
lock
adc
inc
xchg
inc
test
mov
stos
cmp
push
adc
pop
or
outsl
popf
sub
shlb
call
jns
xchg
push
jecxz
mov
sub
mov
aad
lods
cmpsb
popf
shll
ret
push
cmp
sbb
out
xchg
jp
xor
test
mov
ds
iret
push
sub
inc
and
xor
pop
jg
ljmp
loope
pushf
js
cmp
add
mov
and
pop
xchg
adc
sub
and
popf
movsb
sbb
push
add
push
xchg
mov
cli
cltd
inc
fdivrl
pop
xchg
add
xor
sbb
or
mov
adc
jecxz
xchg
mov
arpl
xor
adc
dec
mov
sub
adc
push
jbe
and
scas
cmp
lea
xchg
rorl
lahf
mov
or
push
inc
dec
xor
push
xchg
push
and
sarb
out
stos
les
lock
xor
xchg
xlat
mov
inc
lods
cmp
jmp
lret
sub
ljmp
lret
loope
mov
in
mov
filds
cmp
cmp
push
imul
sub
mov
pop
xor
xor
pop
mov
shlb
es
arpl
mov
ret
adc
mov
cmp
int
cmp
cmp
andb
pop
out
jge
dec
fnstenv
data16
push
mov
jmp
dec
loop
inc
inc
leave
divb
push
push
sti
imull
out
repnz
vpsrad
push
cwtl
lods
mov
cmpsb
fistl
out
fstps
mov
popa
sarb
adc
mov
cmpsl
in
ds
push
add
cmpsb
xchg
imul
sub
out
loope
testl
adc
inc
stc
inc
mov
inc
mov
mov
push
push
adc
dec
xor
and
add
mov
push
and
xor
jge
push
dec
mov
fmuls
push
lods
adc
xchg
pop
xor
pop
push
mov
xchg
lret
push
dec
mov
push
add
xor
push
and
outsl
xchg
sub
xchg
decl
aaa
ss
fwait
and
pop
sbb
jae
subb
iret
scas
xor
mov
mov
pcmpeqw
jecxz
subps
js
aam
jo
les
mov
dec
arpl
dec
mov
add
nop
inc
in
or
mov
push
mov
cltd
imul
sbb
pop
lret
int
sub
xor
jmp
dec
cwtl
stc
adc
lahf
jae
out
inc
fmull
imul
test
les
jo
fsts
icebp
es
cmp
call
scas
fdivrs
inc
fsubl
mov
mov
inc
mov
mov
and
imul
leave
lea
sbb
xor
sbb
jbe
push
sub
in
inc
fldcw
pushf
cmpsb
into
test
andb
bound
and
mov
dec
mov
inc
rorb
aas
loope
mov
or
inc
pop
mov
nop
pop
rorb
ror
add
addr16
xchg
push
fisttpl
lds
mov
mov
shrl
data16
xor
and
aad
mov
icebp
inc
and
jle
pop
outsl
es
xor
sub
js
roll
push
inc
jl
pop
jo
and
mov
inc
push
xchg
insl
push
pop
or
xor
mov
mov
insb
imul
fsts
outsb
adc
fidivrs
or
jecxz
push
test
in
jno
push
jecxz
repz
pop
mov
add
xor
gs
aad
sbb
jbe
lods
and
and
xor
jbe
jae
sbb
mov
movsl
ja
sti
jne
ret
mov
dec
mov
inc
fiadds
fstpl
daa
pushf
dec
xor
push
rorb
pop
jle
cmc
inc
pop
imul
repnz
into
jge
pcmpeqw
add
or
jle
mov
rcrl
mov
cli
ja
cmp
or
loope
js
cmp
vfmadd213ss
ret
test
ljmp
call
gs
psadbw
mov
mov
jecxz
repz
adc
add
in
dec
inc
pop
mov
mov
add
and
fucomi
cs
pop
cmp
mov
inc
bndstx
xchg
mov
lea
inc
fstl
rorl
jmp
or
sbb
js
lret
dec
mov
movsb
in
insl
cli
cmp
and
inc
mov
push
mov
or
ror
and
adc
adc
mov
sti
push
pushf
sbbl
fldl
in
push
push
pushf
mov
mov
mov
popf
jbe
push
xchg
cmp
lahf
ret
aaa
xchg
ret
test
gs
or
inc
pop
pushf
lret
cmpsb
stc
adc
test
sbb
loop
cld
cltd
pop
adc
pop
aad
mov
lods
into
pusha
or
dec
pop
scas
lds
jl
loop,pt
mov
aaa
push
or
push
hlt
addr16
mov
mov
divb
std
outsb
enter
mov
sahf
loopne
and
pop
jno
mov
stc
jo
xor
mov
aaa
pop
mov
cmp
jb
and
pusha
mov
dec
adc
lret
pop
and
clc
sub
ljmp
xor
mov
loop
mov
xchg
in
dec
jbe
int3
lods
faddp
inc
pop
loop
mov
push
sub
lahf
mov
jnp
and
xchg
mov
cmpsl
xor
cld
dec
clc
ficomps
pop
sub
cld
mov
jae
out
push
gs
and
ss
in
dec
add
push
movsl
in
push
aaa
out
adc
dec
das
jecxz
shr
jae
sub
in
push
xor
push
popf
lds
daa
jle
push
xchg
test
pop
or
jp
out
cmpsl
mov
je
int3
movsb
outsl
sbb
cwtl
loopne
lcall
push
xchg
popa
push
pop
fidivl
xchg
pop
cli
jecxz
insl
fwait
incl
adc
pusha
loope
push
cmp
jl
loopne
jns
cmp
aad
cmpsb
int3
xor
add
scas
leave
inc
xchg
fidivrs
sub
inc
shlb
ret
filds
loop
jno
push
sbb
fcmovne
or
push
dec
out
mov
xchg
shll
push
push
sbb
jbe
adc
jecxz
or
sbb
stos
cmp
mov
mov
cltd
ja
cmp
mov
mov
pop
lcall
in
dec
movsb
dec
ljmp
sbb
popf
inc
xchg
pop
mov
or
cmp
xchg
adc
jnp
test
sub
sbb
and
xchg
mov
ja
fsts
mov
fs
pop
mov
in
loope
add
loope
adc
cmp
idiv
orl
pop
icebp
add
xchg
bound
sar
sahf
ja
xchg
fiaddl
add
cmp
push
and
jg
imul
jecxz
je
jg
cmpsl
clc
bound
and
es
nop
pop
push
lock
nop
pop
xchg
lds
fisubl
adc
data16
mov
mov
mov
inc
pop
lahf
inc
sub
pop
pop
nop
jecxz
in
roll
xor
inc
sbb
lods
xor
and
mov
push
scas
popa
inc
mov
mov
scas
cltd
pop
imul
stc
iret
or
xor
sub
push
xor
add
jp
xchg
addl
outsb
in
or
call
xchg
mov
sarl
pop
notb
insb
dec
ds
std
pop
or
sub
test
imul
cli
sub
add
ljmp
mov
ret
inc
jb
imul
inc
fisubrs
aaa
mov
sbb
loop
cmp
ficomps
and
stos
repnz
mov
loop
add
adc
or
pop
in
pop
cmp
mov
das
shlb
inc
testb
push
adc
out
mov
xchg
and
fnstsw
cmpsl
pop
sbb
push
enter
mov
mov
xor
mov
fidivs
mov
mov
rcrl
jae
jmp
addr16
jle
mov
and
xor
jle
mov
adc
sarb
lea
mov
add
mov
rcrb
or
fists
inc
dec
inc
xor
in
inc
bound
jno
inc
movsb
fs
jmp
add
mov
mov
jne
testb
adc
mov
and
fwait
and
iret
or
inc
and
cmpl
xchg
es
mov
stos
mov
xor
into
or
outsb
lret
call
fldl
add
dec
fldt
inc
icebp
mov
dec
fwait
dec
fsub
in
and
mov
sub
mov
ffree
sbb
cmp
and
in
negl
aam
lods
dec
mov
xor
sarl
lret
jo
es
and
loopne,pn
sahf
jnp
pop
mov
xor
lahf
sahf
or
jmp
test
mov
fstpl
inc
cmpsl
call
and
icebp
mull
jno
jae
mov
mov
and
mov
test
pop
addr16
pop
mov
or
int3
pop
roll
push
jnp
out
cmpsb
mov
push
inc
repz
push
mov
mov
sbb
cmp
not
sub
inc
das
inc
icebp
pop
stos
daa
push
lret
lcall
sub
ret
jl
push
push
or
ss
pushf
jb
xchg
dec
and
lods
loope
cli
add
mov
daa
inc
xor
lods
jle
push
mov
lods
lods
lds
ja
mov
inc
ror
shlb
adc
leave
sub
imul
pop
inc
movsb
std
mov
shr
sub
sbb
jnp
dec
or
ficoml
inc
mov
pop
stos
lea
and
cmp
outsb
out
pop
rolb
aas
dec
inc
cmp
jb
mov
in
mov
loopne
es
fildl
pop
mov
jne
mov
loop
aaa
das
aas
inc
jno
dec
push
add
fmull
push
sbb
lea
mov
push
cli
dec
cmpsl
adc
test
jp
ret
cli
subl
mov
aad
fsubrl
mov
stos
push
add
mov
daa
inc
jp
addr16
sbb
cld
xor
mov
je
out
in
out
push
js
push
fsubrl
dec
mov
bnd
push
jnp
jno
cmp
sbb
data16
dec
push
sub
dec
mov
popa
mov
cmpsb
in
sti
jbe
sbb
sub
sti
mov
mov
cmp
pop
mov
cmp
mov
push
mov
hlt
jmp
insl
lahf
out
lea
inc
jb
cmp
add
popa
mov
mov
imul
mov
femms
jns
cmp
mov
lcall
pop
and
and
outsb
cmc
xchg
add
pop
ret
mov
or
push
daa
arpl
notl
xor
insb
cmp
into
push
and
adc
push
push
sbb
pop
testl
aam
mov
sub
mov
cmp
push
incl
sbb
js
xchg
and
js
lds
cmpsl
pop
stos
push
aas
fiaddl
sarl
dec
int3
adcl
xchg
push
inc
add
and
fstl
testl
add
test
in
pop
enter
scas
xchg
and
mov
fs
add
jno
faddl
pop
mov
dec
add
or
sar
in
into
dec
lods
jne
jmp
das
in
jge
xor
inc
mov
add
out
push
xchg
sbb
sarl
orb
pop
in
jle
mov
pop
cmc
cmc
ret
sahf
jns
mov
mov
push
push
popf
mov
mov
sbb
int3
mov
int
es
mov
mov
cwtl
jge
pop
xor
divb
out
repnz
and
arpl
lods
negb
xor
les
cmp
pusha
add
out
js
push
mov
jns
dec
sbb
pop
xor
popa
mov
pop
and
aas
or
push
or
mov
sbb
lahf
pop
bound
jl
cltd
scas
or
rcll
cwtl
mov
and
out
push
xlat
push
sbb
into
lcall
mov
sub
popa
mov
sbb
stc
mov
sbb
push
jo
mov
fwait
xorb
sub
cmpsb
rorb
cli
cmp
mov
lds
or
rorb
testb
mov
lods
dec
aad
js
sub
add
sbb
in
inc
dec
push
popa
mov
popa
scas
lret
push
mov
sahf
adc
les
mov
pop
xchg
or
ds
int3
aad
jb
cli
jo
cs
adc
fs
mov
aaa
addb
ficoml
pop
sub
add
jl
push
je
xor
ficomps
inc
mov
and
xorl
in
fbld
mov
sub
fisubl
ljmp
js
out
addr16
xchg
sub
stos
aaa
sbb
mov
mov
push
add
inc
arpl
data16
out
ljmp
pop
lds
fcmovbe
add
es
inc
mov
jns
pushf
push
loop
add
js
jno
pop
push
loope
loope
lcall
mov
sysenter
pop
cmp
lds
jns
outsb
pop
dec
jp,pt
ss
jecxz
dec
add
jp
xlat
inc
and
arpl
add
aad
test
pusha
in
cmpsl
xchg
cmpsl
lcall
dec
push
push
jno
sti
mov
push
stc
pop
loop
cwtl
movsl
push
xchg
rcl
addr16
repnz
jbe
xor
or
std
fs
aad
lahf
xchg
jge
sahf
push
jnp
std
adc
mov
lods
pushl
mov
out
jecxz
xor
in
mov
inc
cld
ds
pop
es
jecxz
sbb
rcll
pop
idivl
repz
cmp
push
adc
push
ret
stos
aad
lcall
and
lods
arpl
insb
aas
mov
shrb
dec
mov
add
pop
cmpsl
mov
cmpsb
and
jbe
mov
fdivs
repz
gs
in
mov
cli
jns
movsl
xchg
push
sbb
mov
loopne
jg
aas
or
scas
dec
test
divb
mov
jns
xor
hlt
imul
out
xlat
ss
dec
mov
push
pop
push
add
sbb
rcll
push
outsl
out
lret
adc
or
outsb
jne
loop
aam
push
mov
test
outsb
add
push
nop
inc
xchg
aaa
ja
fildl
sahf
sub
loope
cmp
xor
test
inc
sbb
lret
popf
clc
or
sbb
shrl
dec
movsl
pusha
jnp
inc
test
gs
daa
pop
pop
lcall
int
filds
sub
push
and
mov
cli
fdivs
fsincos
out
xor
mov
sub
shr
xlat
lret
push
into
or
pushf
sub
outsb
nop
iret
aam
bound
mov
pop
iret
data16
sbbl
dec
ds
jmp
clc
push
xchg
fsts
pop
jl
insl
cmp
or
ss
sahf
fsubs
sub
mov
mov
ja
je
adc
pop
push
mov
inc
cmp
dec
mov
push
xchg
mov
and
jne
xor
push
fdivrl
xchg
push
out
and
sub
and
sbb
mov
or
jecxz
outsl
push
jl
stos
or
mov
cmpsb
dec
cmp
adcl
sahf
adc
jle
test
mov
and
pop
fidivrs
hlt
xchg
les
pop
add
fcmove
push
popa
fucom
shll
inc
sti
inc
cmpsl
pop
mov
out
sbb
dec
shll
lahf
sub
aad
mov
mov
movsl
pop
sub
scas
or
insl
lahf
cli
cli
es
xor
sub
aaa
inc
jne
sbb
popl
in
rorl
fsubrs
insl
pop
loop
jge
adc
cli
push
sahf
jmp
scas
dec
rol
outsb
mov
or
data16
pop
inc
add
adc
out
xor
or
sub
jge
mov
lock
mov
pop
in
cmp
bound
cmpsb
mov
test
test
imul
cmp
dec
jno
dec
pop
mov
sbb
movsb
cmovs
fildl
stc
pusha
cmpb
pop
adc
and
hlt
dec
scas
mov
lahf
and
pop
repnz
push
jb
jg
fcompl
pop
mov
or
fdivrp
pusha
in
mov
jnp
xor
add
mov
fs
movsb
fldl
add
inc
cmp
fisubl
cmp
pusha
jmp
jmp
pop
clc
jb
and
lret
data16
inc
add
inc
pushf
mov
xor
add
dec
loope
sub
mov
pusha
adc
cld
mov
int
rcrl
add
loopne
inc
cmc
xlat
das
or
or
pop
sub
push
cmp
sarl
stc
test
mov
mov
outsb
push
jns
push
popa
mov
dec
in
sub
xchg
fdivs
sbb
ds
test
and
add
mov
icebp
aas
sbb
adc
scas
aaa
adc
mov
add
faddp
cli
push
push
addr16
cmpb
lcall
push
invd
mov
inc
in
xchg
les
paddsb
adc
push
test
je
out
push
ret
mov
pop
movsb
cli
lds
inc
aam
add
loop
push
push
xorl
jb
jo
push
lods
push
mov
outsb
arpl
push
icebp
adc
lods
pop
mov
js
inc
or
xor
xchg
push
shrd
or
cmp
sub
adc
imul
ret
in
sbb
mov
ljmp
sbb
stos
andb
in
cmpsb
push
ja
add
jo
or
cmp
ss
mov
stos
jae
aaa
fcmovbe
dec
stos
push
test
adc
mov
xchg
add
je
js
xchg
lods
call
test
pop
dec
inc
sub
lods
sub
aas
rdpmc
mov
repz
insb
insl
add
mov
dec
cmpsb
jno
push
push
xor
fbld
or
push
sahf
and
jmp
jge
mov
add
push
pop
enter
mov
dec
inc
mov
into
cmc
pop
dec
fs
stos
repnz
call
sbb
call
ljmp
mov
jmp
repnz
test
lea
sbb
pop
sti
repnz
or
test
pop
leave
rcll
in
mov
push
sti
adc
xchg
dec
cld
sub
imull
and
adc
sub
ss
sub
lods
and
in
aaa
and
out
enter
data16
mov
out
clc
push
popa
mov
jo
aas
inc
lods
call
repnz
rcrb
xlat
dec
sbb
or
push
repz
sbb
insb
test
mul
fisttpl
ss
aas
mov
fmuls
push
repz
xor
stos
mov
jno
mov
out
test
in
mov
in
cmpsb
js
xchg
dec
out
mov
jne
sarb
popf
mov
fnstenv
mov
aad
pop
mov
xor
test
xchg
in
sbb
push
mov
jb
adc
push
push
out
fs
aad
test
sbb
inc
push
outsw
and
sub
nop
push
loope
jecxz
aas
dec
ja
dec
pop
repnz
fcomps
in
xor
push
lock
mov
dec
outsb
sub
cld
cmp
das
fadds
andb
push
cmp
enter
bound
xorl
aas
shufps
test
mov
push
imul
test
cli
mov
jne
inc
sbb
push
outsl
imul
adc
xlat
fldenv
inc
insb
out
adc
cmpsb
or
mov
sbb
scas
insl
pop
daa
inc
pushl
enter
mov
mov
cld
loop
cli
pop
adc
pop
xchg
bound
out
inc
in
ds
ficompl
xchg
cltd
xchg
lret
xchg
xchg
cli
jmp
add
aam
mov
fnstcw
jnp
loop
push
mov
idivb
jg
insb
loopne
in
mov
push
clc
cs
mulb
call
fsubrl
cwtl
popa
xor
jb
sbb
push
daa
outsb
or
xor
inc
mov
inc
lds
xor
cmp
xchg
inc
xor
mov
dec
popf
mov
push
xchg
adc
mov
sbbb
adc
sub
ret
out
loop
fcmovnbe
ret
mov
imul
xchg
aas
jl
lret
add
clc
in
leave
popa
cmp
insl
jecxz
mov
cld
shlb
mov
popf
dec
pop
lret
xchg
div
push
pop
fadd
es
jo
loopne
lock
or
jg
es
jnp
mov
ret
mov
loope
lock
push
and
xor
push
and
and
ja
and
dec
stos
mov
mov
push
pop
or
loope
push
add
into
ss
xor
call
push
push
daa
mov
pushf
rcpps
sbb
fcom
in
inc
pop
xor
mov
popa
sbb
popl
and
aas
leave
mov
outsl
add
adc
adc
movsb
fistl
add
mov
and
daa
and
xor
push
push
popaw
jbe
xchg
mov
mov
shl
loope
icebp
push
add
adc
and
xor
push
push
popaw
jbe
xchg
mov
mov
shl
loope
icebp
push
add
ss
inc
push
push
pushaw
divb
adcl
shl
loope
icebp
push
add
adc
and
xor
data16
mov
mov
cmpsb
cs
push
xchg
int3
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
xchg
int3
test
mov
movsl
cld
popa
in
xrelease
pop
xor
or
cltd
gs
cmp
int3
test
mov
movsl
cld
aad
lds
dec
add
jl
or
sbb
outsb
gs
int3
pushf
fsubrl
mov
pushf
in
lods
in
or
es
push
pop
jl
dec
sub
pop
xor
int3
ljmp
dec
lds
jbe
mov
mov
lret
inc
xchg
lods
and
adc
jp
int
sbb
decl
lds
stos
jo
nop
movsb
sub
leave
insl
fcomi
add
jl
insl
push
jns
inc
sbb
nop
push
add
jle
and
mov
push
or
gs
fsts
cld
sub
in
sahf
xchg
add
add
inc
jecxz
shll
lds
and
imul
mov
mov
or
aad
lods
sbb
loopne
shll
jge
gs
mov
sub
adc
fldln2
pop
ljmp
jge
sbb
gs
mov
movsl
cld
ret
pushf
cmc
lods
cld
mov
sub
or
sbb
sub
push
stc
mov
rcll
mov
sub
inc
add
cmp
and
or
int3
in
aad
mov
sub
outsl
ja,pn
dec
add
jmp
cltd
popf
mov
pushf
cmc
lods
in
adc
insb
and
sbb
sub
cmp
int3
test
mov
movsl
cld
aad
lds
dec
add
jl
or
sbb
sub
cmp
int3
stos
xchg
or
mov
and
dec
and
jg
push
js
int3
pop
mov
testl
lcall
lahf
mov
xor
adc
xlat
cmp
cmp
sub
xor
jle
xchg
arpl
mov
dec
xchg
bnd
sbb
jmp
xlat
adc
dec
xchg
imul
out
adc
pusha
adc
or
inc
ljmp
adc
inc
dec
add
shll
aad
cwtl
addl
out
mov
arpl
cmp
jp
inc
lahf
rcr
push
or
pop
lcall
cld
sub
aas
dec
js
loopne
jg
mov
dec
inc
test
pop
dec
mov
jmp
cmp
outsb
lods
loopne
jae
mov
adc
jno
addr16
fimuls
fistl
rorl
dec
es
push
and
idivb
test
sbb
aad
out
mov
push
xor
adc
push
loope
leave
sbb
fmull
jae
mov
imul
lcall
clc
xorb
cmp
ja
cmpsl
out
cmp
in
lret
pushf
into
jbe
jmp
mov
push
pop
jb
cmpsb
xor
in
out
push
or
dec
xor
push
adc
sti
pop
adc
adc
rorl
fistpll
sub
xlat
out
ljmp
test
arpl
lahf
cmp
popf
outsb
adc
or
jge
sbb
dec
mov
mov
stos
int
out
adc
and
and
mov
pop
fwait
ljmp
add
dec
and
das
inc
push
fdivrl
jge
repz
fisttpll
daa
movsb
cltd
mov
dec
fnstcw
push
mov
xor
mov
loop
fisttps
fsts
hlt
fwait
sbb
sbb
xchg
xor
imul
hlt
jecxz
adc
int3
and
jecxz
pop
jecxz
jno
rclb
loope
out
sub
cmp
icebp
xchg
int
jnp
ljmp
pop
adc
orl
movsb
stos
lret
fucompp
mov
imul
test
pop
loopne
or
and
push
jmp
in
sti
add
fucom
adc
mov
mov
mov
or
pop
sub
and
mov
shl
fwait
pop
out
xor
jge
push
add
jle
clc
xor
insb
sub
bound
outsb
mov
popa
int3
ja
or
xlat
xchg
and
jg
mov
aad
lds
jl
test
stc
mov
shlb
cmpsb
xor
xchg
mov
pop
outsb
inc
cs
fsubrs
js
inc
or
jle
ret
sbb
inc
push
jge
in
nop
jae
sbb
jmp
lret
fstpl
divl
enter
jecxz
scas
dec
pop
mov
scas
in
add
jnp
mov
jns
adc
loopne
mov
int3
sahf
or
in
xlat
cs
in
enter
icebp
bound
adc
test
mov
mov
inc
cmp
mov
in
fwait
repz
rcl
clc
xchg
add
sbb
dec
cwtl
or
add
cmp
dec
pop
jle
inc
xchg
sub
sbb
mov
lock
cmp
loop
xor
out
std
ret
jns
jge
rorl
and
push
sbb
jle
popf
adc
mov
movsb
xlat
test
aad
pop
cld
pop
inc
push
and
aaa
mov
push
adc
lods
cmp
sbb
icebp
ret
xchg
imul
out
adc
inc
cmp
fwait
arpl
add
mov
rorl
ljmp
loopne
xchg
mov
pop
ficompl
xor
cmp
cmp
pop
popf
pop
adc
inc
lcall
test
xor
xor
jb
mov
and
shl
movsl
das
inc
out
mov
fsubl
cmc
andb
test
or
cwtl
ret
pop
pop
jb
xor
sub
pop
ficomps
inc
call
fcoms
lret
dec
xor
adc
jge
xor
mov
push
xchg
push
fwait
cmp
cmp
adc
inc
mov
xor
sahf
sbb
adc
or
ss
aad
jmp
movsb
push
ja
lock
pop
mov
xor
dec
fdivs
ror
addl
mov
push
ss
mov
ret
aaa
data16
ret
mov
push
fists
and
sbb
inc
xchg
and
sub
mov
xor
pop
sbb
xchg
stos
cmp
and
leave
or
lret
xchg
or
mov
xchg
fcmovb
dec
popl
xlat
add
inc
aad
lret
pusha
icebp
mov
adc
push
add
adc
addr16
jl
mov
adc
mov
push
cli
movb
mov
push
mov
fiadds
or
push
pop
dec
xor
lret
sbb
cmp
loope
pop
sub
dec
and
add
gs
rcrb
pop
fisubl
test
stc
mov
inc
jnp
sub
je
jmp
leave
fs
cmc
sbb
pusha
int
lret
nop
gs
pushf
test
mov
cmp
rep
push
jl
cltd
loopne
jmp
inc
shll
es
insl
mov
lods
lcall
ret
adc
add
les
int
mov
mov
add
clc
mov
ss
cwtl
adc
cmp
aam
fsts
movsl
cmp
mov
repnz
push
mov
jbe
es
jle
xchg
mov
inc
gs
pop
jge
stc
xchg
push
cmp
inc
xchg
xchg
adc
rcrb
lods
cmp
cmp
mov
test
dec
aaa
outsl
outsl
mov
test
sub
and
call
call
jno
inc
push
repz
adc
int3
ja
pop
ficompl
jne
push
mov
lds
out
or
dec
sbb
mov
ror
xchg
cmp
ljmp
sbb
xchg
jb
insl
mov
emms
mov
lock
mov
and
lods
jecxz
ret
adc
scas
popl
lods
inc
aaa
sahf
scas
enter
mov
popa
in
in
fistpl
cmpsb
negl
mov
mov
adc
addr16
dec
push
xchg
add
mov
scas
or
ja
jle
in
pop
mov
stos
dec
inc
outsb
add
leave
pushf
jge
mov
fstp
std
cmp
imulb
enter
gs
roll
and
dec
in
add
ss
icebp
push
ljmp
pop
dec
stos
sahf
je
fisubrs
fs
enter
mov
adc
into
xchg
and
dec
sbb
lods
cltd
adc
cmpsb
inc
sub
push
dec
addr16
testl
repz
clc
xchg
and
repz
inc
test
das
xchg
jp
addl
aam
es
push
xor
sbb
add
mov
aas
clc
leave
xor
sbb
cmc
xor
jae
ficomps
ret
or
lods
cld
sub
or
add
shl
sub
inc
int
aad
pusha
jb
cmpsl
add
jne
mov
add
lcall
mov
cmpsb
outsl
shlb
cwtl
fs
mov
mov
mov
xor
pushf
mov
mov
jbe
into
dec
push
in
inc
xor
scas
leave
lea
push
mov
jp
neg
pop
aas
bound
pusha
pop
mov
subl
adc
gs
orb
es
push
mov
mov
out
jmp
mov
pop
dec
mov
sahf
inc
push
movsb
std
xor
ret
inc
rcr
call
iret
jle
test
xorl
push
push
mov
jnp,pt
int3
mov
mov
sahf
push
lock
in
push
aad
add
mov
iret
bound
add
jmp
adc
lea
mov
push
cltd
jae
adc
xchg
into
jns
cmc
cltd
xchg
mov
xlat
push
mov
ret
inc
ja
push
imul
leave
sbb
dec
pushl
popf
adc
xchg
ja
insl
mov
fwait
or
cmp
pusha
lahf
sbbl
fnstcw
les
mov
add
sbb
les
jle
jp
cli
adc
sub
sbb
sub
xchg
dec
sub
push
or
popf
ret
stos
xchg
xlat
ljmp
data16
xchg
inc
out
orb
sbb
enter
and
sbb
push
out
movsl
xor
fwait
mov
pop
xchg
add
pusha
lock
push
mov
aad
call
into
shll
push
loope
notl
cmp
cmp
pop
push
mov
rolb
gs
xor
data16
xchg
dec
or
mov
add
push
adc
int3
xchg
adc
xor
out
repz
xchg
pop
mov
mov
data16
sub
imul
call
lock
loop
jp
dec
je
pop
in
fisubs
aas
fstpl
shl
xchg
push
sub
sbb
subb
sub
lea
iret
stc
adc
jecxz
stc
xchg
imul
or
sahf
daa
mov
std
lcall
dec
in
shl
test
mov
sarb
jne
add
mov
lea
aas
dec
stos
sbb
sbb
xor
adcb
mov
cwtl
xchg
iret
out
pop
xor
push
sub
loop
les
add
pop
push
aam
pop
lods
sub
xchg
xchg
pop
add
mov
rorl
adc
cli
inc
test
jl
imul
jg
xchg
cmpsb
out
xor
adc
jne
loop
clc
jl
sub
xchg
test
fisttps
aad
pop
fisubrs
or
jmp
add
xchg
jle
jg
fists
dec
rorb
bound
add
out
frstor
or
push
fyl2xp1
jmp
dec
aaa
mov
inc
xchg
and
jg
sbb
lods
fdivrp
stos
push
mov
push
xchg
xorb
mov
repz
pop
aaa
hlt
dec
push
call
out
or
test
lret
push
addb
xor
dec
testb
inc
lea
or
lret
push
pop
sbb
pushf
out
cs
ljmpw
jnp
push
mov
gs
sbb
aad
pop
leave
push
notb
int3
cmp
cmp
xchg
jae
dec
ds
cmpsl
fs
cmp
mov
ret
sbb
xchg
and
push
pop
lret
push
out
xlat
in
fdivs
bound
pushf
aam
pop
push
punpckldq
xor
in
test
data16
and
pop
aas
cmp
xchg
xchg
xor
out
fisttpll
shlb
cwtl
pop
adc
ljmp
cli
adc
fwait
or
repz
xchg
cmp
bound
mov
dec
outsb
push
push
pop
mov
imul
shll
fstps
shlb
or
xchg
and
pop
cli
in
js
mov
out
aaa
into
pusha
cmp
inc
xlat
sub
iret
jecxz
test
fs
add
and
mov
xchg
xlat
cmpsl
inc
cld
js
pop
mov
cld
div
test
adc
mov
push
xchg
incb
push
xor
aam
into
call
in
fiadds
mov
scas
lods
add
xchg
cld
rorb
addr16
test
loopne
fbld
mov
and
and
and
cld
or
inc
add
cbtw
test
sub
jmp
out
mov
sahf
mov
outsb
xchg
popa
bound
lcall
push
push
imul
cwtl
lret
or
xor
les
cmp
lret
mov
dec
push
outsl
out
adc
or
mov
rcrl
push
cmp
popf
xchg
pop
push
mov
inc
adc
out
sub
xor
pop
vorps
mov
add
popa
lcall
and
fistpl
das
push
mov
mov
sbb
mov
clc
sub
jmp
mov
pusha
xadd
mov
pop
sbb
sub
rcrl
pusha
sti
data16
ds
push
xchg
lods
sbb
xchg
mov
add
cmc
sbb
and
fwait
xchg
mov
or
int3
push
and
pusha
fldcw
push
imul
rclb
add
inc
pusha
stos
clc
add
leave
sbb
ja
lcall
xor
jbe
test
ss
cld
aas
lret
mov
push
mov
loopne
out
xchg
mov
push
xor
je
add
nop
jmp
add
shll
mov
in
pop
lods
push
mov
clc
ret
pusha
cwtl
ss
mov
jno
sbb
cmc
add
mov
in
xchg
mov
sub
or
mov
jle
aad
push
push
push
mov
stos
push
and
mov
add
ss
xchg
xchg
insb
jae
aas
inc
cli
in
mov
stc
adc
or
shl
je
ljmp
fwait
ss
imulb
sbbb
push
pop
adc
dec
sub
movl
xor
fisubl
movb
in
fstl
ret
cmp
or
adc
xor
pop
dec
sub
pop
and
mov
fnstsw
imul
test
lods
and
add
jecxz
in
inc
cmp
gs
les
int3
xor
mov
fs
out
lahf
hlt
out
xor
inc
jno
sbb
pushf
push
mov
push
call
lahf
mov
cmp
ds
mov
mov
inc
notl
lret
mov
mov
aas
pusha
fidivs
rorl
lods
iret
add
lods
xchg
iret
leave
sbb
adc
faddl
dec
add
jecxz
data16
cld
out
scas
mov
in
loop
lret
xchg
stos
call
aam
rorb
insl
lret
cmpsl
push
divl
mov
repnz
adc
in
mov
xlat
insl
sub
cmc
dec
mov
adc
inc
mov
jg
mov
inc
out
push
mov
or
int
bound
or
jmp
insl
xchg
xchg
mov
lahf
xchg
lock
mov
nop
mov
pop
das
cwtl
push
cmpsl
xchg
xchg
and
jns
mov
mov
imul
or
xchg
ficomps
push
mov
or
jno
mov
push
jge
or
js
sbb
mov
fs
lds
stos
add
fstpt
xorl
jns
pop
push
lock
push
pop
aam
mov
mov
cli
imul
arpl
mov
push
push
fcoms
push
adcb
test
ror
cmpsl
negl
clc
test
add
adc
inc
ss
ljmp
mov
in
test
dec
adc
cmp
push
jno
into
movsb
jnp
pop
pusha
mov
xchg
jno
stos
les
mov
es
mov
adc
paddd
push
subb
pop
icebp
xchg
inc
dec
xchg
and
mov
iret
and
push
sbb
pop
adc
scas
sbb
cmp
push
cmp
and
loope
xchg
dec
les
inc
mov
addr16
in
loope
or
sbb
dec
icebp
push
cmpsb
in
fidivrs
mov
in
mov
xor
xchg
lds
xor
xor
pop
fs
in
and
sbb
jo
sub
fisttps
push
iret
inc
pusha
icebp
fistl
push
mov
test
cmp
fcoms
sbb
fildll
sbbl
mov
jo
jo
xorl
xor
out
and
lret
mov
outsb
xchg
pop
and
adc
push
mov
jb
push
lcall
test
bound
in
jns
ret
pusha
hlt
xchg
ds
and
jmp
cmpsb
ja
or
cmp
pushf
lods
sub
cli
and
cld
pusha
sbb
fidivs
or
das
jae
mov
mov
js
je
xchg
xchg
imul
fsubrl
push
jp
jecxz
jae
push
outsb
mov
lods
jno
cmp
test
fs
stos
push
and
cwtl
and
shl
repnz
in
mov
push
outsl
fnstsw
insl
shl
call
insl
mov
push
imul
mov
and
dec
sbb
jo
pop
addr16
inc
decl
or
cmp
or
in
adcb
ss
sti
add
aam
shlb
sbb
int3
adc
pop
sbb
movl
jne
aad
out
sti
fsubl
loop
int3
mov
fstps
in
xlat
or
mov
mov
movsb
test
es
repnz
xlat
arpl
push
push
pop
movzbl
xor
pushf
push
lods
lea
nop
inc
pop
mov
sar
ss
cmp
stc
cmpsb
addr16
mov
xchg
mov
loop
out
loop
dec
je
fcomps
mov
or
mov
inc
and
int
fisttps
int3
mov
pop
insb
dec
dec
imul
outsl
imul
mov
mov
push
mov
int3
dec
xor
add
pop
fidivrl
aad
fwait
inc
xlat
sub
xchg
xchg
mov
dec
xlat
add
or
ret
pop
or
lahf
push
popf
in
mov
shr
mov
push
lods
es
adc
bound
addl
movsb
mov
int3
sub
jns
clc
hlt
cwtl
bound
adc
shll
and
adc
out
jmp
inc
xchg
push
push
cmovge
jnp
pop
mov
ljmp
fidivrl
aad
mov
in
jmp
pop
gs
shll
xchg
inc
scas
addr16
movsb
lds
cmp
fdivrs
mov
cltd
int
inc
in
xchg
mov
dec
xchg
lea
xchg
push
imulb
shlb
jo
xlat
in
aas
loop
iret
cwtl
push
or
xor
pusha
shll
out
sub
fisttpll
ja
jg
mov
lcall
shrl
out
js
in
jmp
popa
rcll
cmp
sub
cmpsb
add
cmp
xor
aas
fstp
lret
pusha
push
push
sbb
xor
sahf
pxor
ret
xchg
xor
sbb
mov
jg
dec
les
mov
push
add
push
clc
push
inc
movsl
jmp
int3
jne
cli
adc
out
std
orl
rcr
dec
pop
ror
enter
and
xor
movsl
mov
mov
cwtl
clc
jnp
jle
pushf
mov
cmpsl
sahf
cmp
into
cmp
jae
ss
cli
fs
push
xlat
shl
pop
adc
sbb
pop
ret
addr16
std
shlb
int3
jns
inc
pop
cmp
xchg
mov
push
bnd
xchg
mov
xor
je
fistl
jge
jp
jne
jmp
add
popf
mov
pop
pop
pop
ret
jae
push
mov
enter
mov
dec
das
mov
mov
inc
ja
lret
mov
fildll
pop
aas
lods
pop
cmp
jmp
inc
push
sub
fidivl
leave
int
push
xchg
and
lea
jno
xchg
ljmp
adc
cwtl
loope
mov
mov
push
inc
xor
cltd
int3
cmp
test
cmpsb
xchg
mov
fdivr
pop
add
les
cwtl
sbb
hlt
xor
sub
daa
addr16
loope
insb
cmp
rcll
mov
push
es
adc
movsl
rcrl
mov
inc
icebp
adc
mov
fsin
fsubl
mov
jecxz
enter
lods
sbb
pop
lea
and
inc
fcompl
pop
js
test
bound
add
fistpl
xor
mov
xor
in
xor
div
sub
cmp
or
xchg
daa
aaa
sub
leave
mov
int
dec
push
aaa
xchg
push
jmp
inc
bextr
mov
xchg
mov
shlb
testb
jo
outsb
cmp
in
popf
push
ret
data16
daa
fbstp
dec
repnz
push
mov
and
inc
jmp
stos
add
jl
cltd
ret
in
push
jne
call
mov
fsubr
inc
xchg
jnp
int3
xor
idivl
or
jnp
pmuludq
pop
pushf
jo
pop
repz
adc
out
lcall
out
pushf
dec
jge
and
pop
orb
jl
add
mov
dec
loopne
es
lahf
repnz
mov
in
push
enter
gs
scas
scas
and
jg
push
sub
pop
repz
adc
pop
repnz
in
sbb
jb
xchg
fdivr
and
flds
adc
bound
ret
mov
imul
sbb
sub
dec
unpckhps
inc
mov
cmpsb
ffreep
adc
jecxz
mov
bound
rclb
ret
xlat
xchg
into
rcll
fmuls
xor
or
and
push
fwait
mov
sbb
test
or
addr16
push
push
jnp
stc
cmp
xchg
or
popa
pop
push
jmp
jae
jmp
xor
mov
mov
rolb
mov
repz
xchg
adc
dec
nop
pop
cmp
pop
cli
mov
push
insl
cwtl
xchg
sbb
inc
ret
movsl
dec
fdivl
repnz
xorb
sbb
stos
shlb
shlb
hlt
test
imull
lahf
xor
cmp
mov
jno
sbb
sub
push
add
imul
lock
cli
adc
cld
loope
dec
push
xchg
addr16
mov
push
scas
insb
sub
push
decb
lret
in
mov
push
aam
jne
adc
mov
or
mov
xchg
fs
mov
xchg
mov
inc
dec
push
xchg
sub
test
movsl
sbb
mov
dec
out
bnd
xor
addl
pop
mov
adc
dec
popf
sbbl
lods
cmp
cmp
mov
sbb
cwtl
or
dec
push
ljmp
fstpt
lret
mov
repnz
roll
inc
shl
sub
cmp
div
iret
gs
aam
shll
sub
inc
push
add
mov
jbe
nop
xor
lahf
ds
mov
pop
xor
dec
enter
mov
call
ljmp
cmpsb
xchg
out
ds
sbbb
push
sub
push
ljmp
rorl
fisubrl
inc
fdivrl
mov
pushf
cmc
lods
in
adc
insb
and
sbb
sub
cmp
int3
test
mov
movsl
cld
aad
lds
dec
add
jl
or
sbb
sub
cmp
int3
test
movsl
cld
aad
lds
int3
add
jl
or
sbb
sub
cmp
int3
xchg
mov
movsl
cld
xlat
mov
pushf
jne
gs
lahf
insb
and
jecxz
rcrl
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
push
aaa
mov
cmp
sub
push
iret
and
or
orb
fdiv
leave
push
adc
or
cmp
sub
pop
ja
ja
push
imul
xchg
xchg
test
in
xlat
jmp
ds
outsb
add
dec
xchg
pop
cltd
mov
test
out
enter
xchg
xchg
mov
sub
jb
pusha
sarb
push
stos
insl
mov
mov
and
sub
mov
add
mov
xchg
push
test
mov
inc
movl
js
fs
dec
stos
sbb
test
dec
or
mov
cmpsl
inc
std
push
js
push
inc
pop
or
mov
pop
imul
pop
ja
ja
and
mov
pop
test
lret
lret
in
sub
xlat
pushf
mov
fadd
call
lret
pop
and
pop
dec
fstps
outsl
stos
ds
leave
imull
enter
out
mov
cld
push
nop
pop
popa
fbstp
mov
pop
mov
and
aaa
cmp
inc
pop
pop
ja
addr16
rcrl
mov
mov
mov
int
imul
push
jge
inc
bound
jne
push
push
or
clc
fmul
cmpsl
jmp
xchg
cmpsl
in
mov
orl
ja
sub
ret
enter
lds
mov
cmp
dec
jae
inc
sbb
dec
addr16
imul
xchg
test
out
xlat
jmp
daa
cmp
sub
pop
ja
addr16
imul
xchg
test
out
xlat
jmp
xor
nop
jbe
adc
shlb
push
fisubrs
cmp
aad
add
and
and
jecxz
cmpsb
sbb
stos
mov
push
outsb
les
sub
stc
pushl
sbb
ss
jne
jns
sub
shl
xor
aas
xchg
pop
add
cltd
test
jo
inc
jl
mov
push
aam
cmc
sbb
push
or
mov
dec
cli
cmpl
dec
popf
mov
cwtl
and
stos
pop
scas
dec
xchg
rorb
gs
je
es
fsubr
or
mov
negb
cld
mov
test
mov
sahf
lret
out
sar
push
andps
popa
adc
mov
das
push
hlt
lahf
add
aas
icebp
mov
sub
push
sahf
mov
stc
js
cmp
mov
jmp
sbb
decb
cmpsl
push
sub
xchg
inc
jb
lret
pop
jecxz
pop
mov
out
mov
daa
jae
dec
jbe
ret
jne
push
xor
dec
and
arpl
ss
fcoms
or
or
add
in
loop
and
data16
jmp
sub
stc
repnz
add
fbstp
jge
ss
jno
fs
mov
mov
dec
mov
xchg
jno
lret
iret
jg
xor
xor
mov
mov
into
mov
push
pop
movsl
sahf
lds
lea
and
movsl
xor
or
cmc
test
xchg
idivb
std
icebp
mov
les
mov
in
es
dec
sbb
cmp
jne
cmp
jp
insl
xor
mov
sbb
xchg
adc
pusha
sub
mov
mov
push
mov
fildl
stos
les
fldcw
data16
sub
fwait
les
sarl
test
mov
in
loop
cmp
in
jae
push
push
int3
xor
sbb
mov
xchg
ret
sub
mov
movsb
adc
arpl
mov
dec
rcll
je
cmp
or
pop
outsl
push
mov
push
outsb
xor
pop
xchg
dec
push
fmuls
fwait
pushf
mov
sub
sbb
or
in
gs
xor
aad
push
adc
or
inc
mov
aaa
pop
mov
nop
mov
cmpsb
test
push
out
test
push
or
fildll
loope
cmp
mov
and
adc
or
sub
je
cmp
pop
outsb
aaa
inc
outsb
xchg
aam
cmp
dec
loope
sub
sbbl
mov
lods
mov
fcomp
call
or
add
ret
test
icebp
mov
add
inc
test
cmc
lahf
jo
sbb
sub
fidivl
mov
inc
shr
in
mov
stc
inc
sbb
repz
add
pop
mov
in
mov
dec
daa
std
add
in
jecxz
dec
xchg
and
into
jg
aam
fstps
or
jecxz
loope
cli
lret
pop
arpl
or
sub
cmp
iret
ja
test
fadd
sbb
ret
mov
dec
xor
xor
jbe
popa
ret
push
aaa
pop
jge
sbb
lret
push
mov
insb
sbb
xchg
out
pop
outsl
and
inc
push
fnstsw
mov
dec
sahf
jge
and
dec
sub
push
xor
adc
test
in
lea
xchg
ret
pop
dec
int3
inc
rorl
loopne
adc
xchg
push
lret
stos
rclb
jg
andl
aad
push
movsl
push
sbb
clts
xor
cmp
in
enter
mov
addr16
dec
push
loopne
mov
mov
dec
lahf
int
push
ljmp
pop
lahf
lds
loop
jmp
mov
rol
jg
dec
and
adc
sti
xor
aam
test
loop
adc
sbb
shrb
and
or
es
or
test
jb
flds
test
push
test
cmp
in
lahf
test
adc
pop
pop
pop
ljmp
xchg
insl
cmp
mov
pop
dec
vmaxps
add
adc
jno
cmpsl
orl
fisubs
mov
xchg
push
outsl
push
and
icebp
int
adc
repnz
jno
dec
popf
ret
aaa
pop
mov
and
cmc
ja
rclb
pop
xchg
bound
pushf
sub
push
in
fstl
add
jmp
or
mov
stos
dec
in
sbbl
adc
add
jo
jno
xchg
ret
scas
push
push
xor
dec
test
cs
pop
pop
cld
rorb
mov
add
mov
lret
inc
add
and
stos
jecxz
adc
cmc
push
pop
fnstsw
loope
mov
xor
into
xor
jo
pop
jns
inc
cmp
ret
jbe
popa
setae
push
xlat
adc
test
lret
sub
and
jecxz
sbb
lods
adc
pop
dec
cmpl
sbb
pop
xchg
test
mov
and
stos
pop
aaa
in
es
cmp
add
inc
dec
jmp
popf
push
daa
daa
jnp
push
clc
mov
je
addl
fadd
aas
sub
loope
inc
jb
lahf
out
mov
mov
popa
addb
xor
loop
xchg
ja
push
sbb
test
imul
filds
in
cwtl
testb
and
push
mov
adc
inc
mov
and
mov
adc
lret
jne
dec
into
adc
fildll
xor
cmp
out
sbb
jmp
push
ss
std
push
test
decb
xor
in
jle
aaa
push
fbld
gs
dec
test
sbb
int
pusha
hlt
insl
int
in
loop
fiaddl
pop
arpl
int3
mov
xor
jecxz
adc
push
scas
pop
dec
jne
mov
divl
add
xchg
in
hlt
push
rcl
sub
xchg
popa
ret
ret
xchg
aaa
sub
aad
sub
cmp
movsb
mov
aaa
dec
int
cmpsl
lahf
faddl
outsb
sar
add
xchg
jmp
sub
inc
xchg
clc
xchg
nop
pusha
cmp
arpl
inc
sub
sti
out
es
repz
jnp
inc
push
sysexit
jb
inc
inc
xchg
pushf
fcmovu
or
xor
movb
popa
fiaddl
adc
adc
push
nop
pushf
dec
add
insl
enter
in
lock
push
or
sub
test
fbstp
xchg
mov
lods
mov
or
out
add
mov
mov
adc
pop
cltd
lret
mov
int
dec
mov
pusha
mov
int3
movb
adc
sub
cmp
jo
or
mov
and
fldenv
mov
xor
mov
call
sbb
push
mov
ds
inc
in
ret
or
outsb
cwtl
loopne
cli
loopne
sub
or
loopne
push
out
mov
ficoml
or
sarl
imul
cwtl
ss
bound
pop
cmpsl
jb
dec
cli
cmp
pusha
fcoml
shll
xlat
test
mov
shl
movsl
pop
cmp
cltd
in
push
shlb
scas
pop
sbb
push
aad
cmp
add
ljmp
ss
pop
pand
and
iret
adc
inc
push
insl
xor
add
movsl
push
es
adc
inc
lcall
mov
and
fwait
mov
mov
pusha
or
mov
xor
xor
repz
pop
fldenv
push
add
pop
sbb
inc
shrl
mov
mov
andb
cmp
rol
fidivs
inc
jo
adc
push
in
lret
shll
and
std
xor
cld
lret
lret
aad
adc
fisubrl
pop
imul
repnz
outsb
adc
rcrl
jmp
popl
lret
add
mov
or
cmc
out
mov
cmpsb
cs
hlt
lahf
mov
and
inc
lahf
bound
push
or
jns
cmp
inc
push
test
popa
or
adcl
jne
mov
dec
aam
movsb
movsb
jo
stos
sbb
outsl
jnp
cmpsb
movsl
cs
hlt
imul
jp
in
lods
imul
or
fs
sbbl
sub
popf
pop
sub
lahf
add
push
scas
sub
scas
and
adc
out
xchg
or
sbb
lods
movsl
push
loop
stos
sbbb
xchg
imul
out
adc
xor
data16
mov
out
xchg
lcall
or
mov
mov
cmpsb
loope
aad
dec
push
pop
xor
sahf
sub
lods
popa
sbb
pop
jg
xchg
test
sbb
iret
hlt
push
in
sub
jno
jb
sbb
mov
dec
popf
int3
sarl
fwait
shrb
andl
push
jae
stos
std
adc
mov
push
inc
lods
mov
or
imul
sbb
or
negb
ds
clc
enter
adc
ds
push
lods
rol
iret
sets
dec
dec
sbb
out
cmp
and
aas
push
jne
mov
pop
push
mov
push
sub
pop
push
in
leave
test
jne
sub
jo
push
enter
adc
pop
dec
add
adc
ds
js
fcmovnu
mov
mov
test
lds
cmc
repz
inc
push
xchg
xchg
add
les
xlat
insb
jae
mov
sub
mov
jno
jmp
cmp
dec
into
out
mov
mov
imul
in
lahf
or
xchg
sub
adc
popf
push
sti
enter
movsl
push
lods
push
pop
movsb
aaa
lret
push
call
inc
outsb
loop
sub
xchg
repz
aas
stos
notl
stos
dec
mov
lods
test
les
mov
sarb
cltd
ja
add
movsl
lahf
fcoml
outsl
xchg
mov
pop
ja
lods
in
dec
inc
xor
pop
mov
push
jb
movzwl
call
lock
cmpl
js
dec
adc
aad
and
fistpll
and
and
je
mov
outsb
and
mov
out
push
xchg
iret
add
lcall
sbb
add
stos
mov
and
pop
inc
out
jo
or
popf
cmc
lcall
enter
mov
ja
fnsave
dec
jb
dec
incl
cmp
dec
jecxz
xorb
mov
xor
jecxz
adc
lret
mov
jno
pop
add
dec
divb
inc
sbb
int3
sbb
add
mov
dec
push
pop
lods
insl
mov
cmc
gs
jge
dec
jge
testb
pop
fistpl
cmp
rorl
orb
or
adc
iret
and
jp
ds
cmp
mov
bound
rcl
negb
pop
mov
lcall
mov
adc
pop
mov
icebp
dec
jg
pop
in
pop
mov
loope
loop
dec
dec
out
push
sbb
add
loopne
mov
out
iret
sbb
mov
dec
std
subl
in
mov
add
mov
mov
xchg
cli
daa
xor
mov
shll
sub
divb
inc
push
fdiv
subl
insl
mov
cmpsb
das
push
and
stc
rcrl
ss
sbb
push
inc
sti
in
mov
std
dec
popa
in
xchg
add
dec
push
or
pop
shlb
loope
jge
adc
rolb
adc
pop
add
xchg
mov
fildll
adc
mov
mov
mov
pusha
jae
scas
adc
int3
inc
scas
xorb
loopne
cwtl
cmp
jecxz
cmp
jne
scas
fcompl
aad
and
cwtl
jecxz
hlt
es
test
popf
jmp
lret
mov
mov
push
test
and
add
stos
dec
loop
shrb
and
hlt
insl
adc
loope
leave
adc
xor
adc
mov
int
mov
push
adc
sbb
inc
cmp
pusha
movsl
push
jo
push
add
inc
and
test
bound
stos
mov
mov
add
jge
push
dec
fwait
push
sbb
jmp
jecxz
loopne
mov
les
mov
xor
jl
adc
sbb
add
cmp
fsubr
hlt
stc
inc
push
loope
ficoms
int
in
inc
lods
inc
imul
mov
pop
mov
loope
sbb
rcrl
sti
add
xchg
add
xchg
out
movsb
mov
in
rcl
cmpb
mov
lcall
shlb
out
hlt
add
sahf
or
aaa
xchg
sub
gs
push
jbe
lds
aaa
mov
std
adc
repz
jbe
dec
xchg
xchg
pop
xor
or
mov
iret
mov
decb
adc
xchg
cmc
sbb
stos
cmp
xchg
enter
cmc
ljmp
in
lret
insb
mov
nop
adc
add
sbbb
sbb
js
pop
sub
lods
ss
sub
jbe
add
xor
push
cmp
jp
jmp
icebp
loope
xchg
int3
mull
inc
jmp
and
jp
nop
iret
adcb
add
loopne
icebp
sub
cmp
xchg
dec
je
sbb
bound
imul
in
pop
daa
cmp
sub
add
sbb
add
mov
push
push
out
adc
and
fnstenv
fsubs
pop
stc
xchg
cmp
imul
or
cmpsl
leave
hlt
cmp
xor
jp
lea
inc
mov
cmp
dec
mov
jnp
push
pop
subl
sub
push
hlt
and
xor
fsubs
inc
inc
add
jmp
or
or
not
xchg
aas
gs
inc
push
ja
ljmp
cmp
in
test
xor
mov
in
cld
jge
dec
popl
es
cs
adc
dec
adc
dec
ds
push
pusha
xor
repz
std
mov
xor
dec
out
sbb
lcall
add
mull
cmpsb
mov
cmp
jns
sub
movb
fimuls
and
push
mov
sbb
ljmp
mov
cld
insb
sub
or
cld
mov
lret
xchg
in
insb
movsb
test
push
xor
add
addr16
fs
data16
xchg
or
leave
movsl
push
je
inc
adc
or
and
scas
aaa
dec
les
inc
mov
push
test
mov
pop
jo
or
sar
lret
or
xchg
cmp
xor
mov
arpl
int3
test
sub
pop
stc
pop
cmp
cmp
adc
xor
sub
nop
sbb
movsl
popf
add
scas
ds
das
xlat
lcall
cmp
or
add
add
mov
out
in
jno
push
push
or
jecxz
pop
add
andb
adc
mov
push
mov
sahf
xchg
xor
pop
xchg
jl
adcl
fistl
aad
mov
ss
jg
dec
sub
gs
test
jmp
jne
out
pop
xchg
or
jmp
mov
or
inc
xor
nop
or
les
sbb
iret
mov
mov
sub
xor
sub
xor
in
lret
inc
jb
lea
jno
jle
sbb
aas
add
test
ret
xchg
int
xorb
mov
loope
rol
xchg
sbbb
rcll
outsb
call
mov
and
fs
and
and
ss
sbb
int
rcll
cmpsb
pusha
les
push
jb
jb
rolb
add
shrb
push
orl
add
fidivrl
fisubrs
jne
mov
aaa
jbe
adc
repnz
lock
sti
and
jl
lahf
into
mov
out
popa
popa
add
repnz
outsb
dec
scas
dec
pop
dec
gs
cmp
and
cld
sub
push
cld
push
popf
mov
out
insl
out
mov
insb
mov
nop
dec
or
and
movsl
xchg
push
or
mov
jge
mov
fstpt
mov
sbb
iret
xor
test
pushf
je
bound
or
cs
clc
pop
adc
scas
call
subb
or
pusha
xchg
mov
roll
inc
pusha
ret
std
shrl
int
xlat
imul
popf
add
cltd
rorl
mov
add
pop
xchg
fwait
test
sbb
adc
push
sbb
cmp
xchg
or
pop
fadds
push
shll
push
fcoms
cmpsb
dec
mov
decb
jecxz
sbb
scas
mov
mov
ja
mov
shr
or
in
xlat
stos
fstpl
sahf
lds
jae
int
sbb
jo
cmpsl
mov
mov
scas
mov
xor
shll
xchg
out
ljmp
gs
pusha
lea
ds
dec
pop
inc
add
fdivs
add
jp
xchg
mov
insl
or
mov
inc
xor
inc
aas
pushf
clc
pusha
sbb
lea
sbb
stos
mov
lret
mov
cmp
push
arpl
sbb
inc
pusha
adc
leave
sarb
jl
sbb
dec
jae
sbb
out
mov
mov
mov
addr16
ljmp
push
les
pushf
loopne
ss
mov
mov
xor
lods
and
fisubrs
sbb
push
add
jnp
outsb
sbb
ljmp
jle
and
dec
or
xchg
out
movsl
divb
fidivs
out
sub
inc
les
cmp
jno
fstpl
add
pushl
mov
jmp
cwtl
pop
mov
aaa
mov
sbb
dec
mov
movsb
jl
xchg
mov
add
in
js
pop
ss
xor
in
cld
ret
push
push
pop
add
pop
jle
pop
sbb
cltd
xchg
jl
push
stos
sarb
add
fmulp
mov
frstor
sub
repz
clc
sub
lea
adc
fucomi
stos
stos
xor
dec
incb
cmpb
jns
fcoml
sub
sbb
gs
inc
pop
lods
repz
inc
mov
mov
insl
enter
inc
test
or
cltd
dec
sbb
xor
xchg
mov
loope
adc
push
push
loop
loop
mov
orl
sub
repz
cmp
inc
pop
mov
insb
cs
or
ficomps
xor
sarb
outsb
push
inc
test
ja
insb
imul
mov
ljmp
ret
rorb
push
inc
xor
jge
shr
js
jp
sbb
ja
xor
pushf
sub
cmp
add
add
and
dec
cmp
jg
out
cld
push
push
mov
sti
into
jle
in
mov
pop
inc
or
jb
addr16
dec
pop
ret
sub
adc
out
lea
shll
mov
mov
add
in
cmpsb
fnstcw
jbe
mov
inc
adc
cmp
out
movsb
mov
jo
pusha
sbb
popa
jmp
xor
subb
mov
fwait
dec
hlt
and
lahf
xchg
pop
push
shl
lret
aas
in
add
movsl
stos
xchg
jle
mov
dec
lea
mov
push
cmp
push
inc
gs
repz
cwtl
jmp
jno
push
mov
xchg
inc
pop
aad
add
movsb
mov
dec
xchg
icebp
ljmp
jg
pushf
inc
mov
fistpl
sub
sub
loop
in
das
movsl
stc
jnp
sbb
sbb
xchg
xchg
imul
xchg
cmp
jle
jb
or
mov
xchg
and
sub
leave
dec
call
cpuid
ja
inc
mov
das
adc
pop
mov
out
sbbl
adc
ficompl
mov
mov
cltd
inc
enter
or
xchg
inc
sbb
pop
jne
adc
pop
inc
in
lret
add
dec
inc
fidivs
jae
cmp
into
lret
outsb
cli
cmpsl
imul
push
je
add
aam
mov
sti
pop
xchg
add
dec
lods
inc
sub
mov
jb
fnsave
stc
adc
push
repnz
add
jnp
clc
adc
lahf
mov
ja
cmp
lcall
sahf
mov
mov
test
sub
ret
mov
lret
imul
jnp
jp
add
das
xlat
mov
adc
pop
mov
mov
jae
shlb
mov
jno
movsb
cmpl
dec
cltd
jl
sub
pop
fists
jno
arpl
adc
test
xor
call
mov
in
pusha
popa
add
lret
sub
lret
mov
xor
or
sub
std
gs
add
fcomps
sbb
jno
stc
mov
mov
sub
mov
add
fadds
les
mov
dec
jmp
je
adc
aam
popf
xor
fsubl
scas
cmp
into
xor
and
add
inc
lcall
inc
jno
xchg
mov
sbb
mov
add
popf
repnz
js
sbb
xchg
rcll
xor
or
andl
sahf
aaa
sbb
mov
push
shrb
roll
mov
ret
jle
cli
aam
rorl
je
dec
sub
or
stc
imul
pushf
xor
cmp
ror
cmp
orb
push
mov
and
jge
in
mov
stos
test
decl
dec
insl
cmp
addr16
push
xor
jno
test
pop
pop
into
xchg
mov
notl
adc
xor
cmp
std
fcom
das
out
dec
xchg
cmp
outsb
rolb
dec
outsl
jg
adc
add
mov
cmp
repnz
loop
jb
mov
loopne
in
mov
neg
inc
push
out
je
loop
pop
xacquire
rolb
rcl
xchg
and
mov
vpand
addb
popf
leave
lret
add
mov
jmp
inc
or
sbb
dec
and
push
andl
daa
dec
loop
lods
xchg
or
pusha
mov
sub
fwait
ret
in
jne
ljmp
push
mov
ja
addr16
imul
xchg
test
out
xlat
jmp
daa
cmp
sub
pop
ja
addr16
imul
xchg
test
out
xlat
jmp
daa
sub
sub
pop
ja
addr16
push
cmpsl
mov
lods
sbb
shl
std
rcr
ret
add
and
pop
pop
ja
addr16
jmp
or
scas
jg
cwtl
push
test
mov
int3
sbb
mov
in
inc
mov
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
mov
pop
add
add
add
add
add
add
add
add
mov
add
jmp
add
xchg
add
cmp
xchg
add
add
add
or
lock
add
add
add
add
add
inc
add
add
add
add
addl
cmp
push
add
add
add
xchg
add
add
pop
add
mov
faddl
add
add
outsb
add
add
sahf
add
add
loopne
sub
sahf
add
insb
add
add
arpl
add
add
add
hlt
add
add
add
mov
add
add
add
add
add
jbe
push
cmp
lea
push
add
push
add
add
cmpsb
add
cli
add
add
add
add
add
adc
push
add
das
add
sbb
push
add
add
cmpsb
add
add
add
enter
int3
add
add
add
add
add
xor
cmp
sbb
cmpsb
add
jnp
sub
cmp
inc
add
add
add
add
popa
add
add
jns
imul
add
str
add
lock
inc
add
add
inc
add
icebp
add
add
add
add
fiaddl
cmp
pop
add
add
add
add
add
insb
add
add
inc
add
add
add
incb
jmp
add
add
mov
xor
fadds
cmp
pop
add
popa
add
add
add
aas
add
add
add
cmp
outsb
add
add
add
lock
push
add
aaa
add
xchg
add
add
add
add
add
add
imul
add
jmp
add
jns
fiaddl
dec
add
add
push
add
add
add
cmp
insb
add
add
sbb
adc
jns
cmp
push
add
add
add
add
add
sub
add
add
add
add
add
add
add
adc
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
inc
add
add
cli
add
add
pop
add
test
add
add
add
add
add
add
add
add
add
hlt
add
inc
add
add
nop
add
add
add
nop
add
add
add
inc
add
lcall
add
jbe
or
testb
add
testb
add
dec
add
pop
add
add
popa
add
and
jns
sbb
add
add
addl
add
sbb
scas
add
and
hlt
add
roll
add
add
add
icebp
add
roll
hlt
add
add
add
add
lea
cmp
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
sbb
loopne
sbb
push
inc
int3
sbb
cmp
dec
xor
dec
int3
dec
fidivrs
mov
jno
push
sbbb
in
sub
inc
loopne
fisubrs
test
mov
mov
enter
dec
daa
sbb
sub
out
cltd
ljmp
sub
int
pop
movsl
lods
add
movsl
mov
add
mov
jae
clc
and
and
add
repz
dec
xchg
into
test
inc
inc
shr
pop
jo
and
xchg
mov
sbb
lods
xchg
arpl
pushf
andl
sbb
stos
mov
test
push
sbb
mov
or
or
xchg
dec
jns
cli
jae
fdivrs
ret
xlat
dec
rcr
xor
rcrl
popf
pop
push
jmp
cmp
pop
sub
cmp
dec
push
xchg
lock
clc
jecxz
inc
dec
or
lock
imull
lea
sub
int3
jg
or
in
jbe
imul
cltd
lret
mov
push
and
in
sub
jge
mov
sub
fstpt
std
pop
lcall
jnp
mov
loopne
inc
mov
arpl
lea
cmc
ss
movsl
jbe
jo
push
cmc
call
mov
jge
outsb
cli
dec
movsb
ret
jns
stos
mov
pop
js
mov
jno
popf
negb
xor
in
int3
inc
sti
pushf
outsb
push
and
and
dec
aam
jmp
gs
sbb
popa
push
jle
cmp
or
jne
mov
in
das
pop
jne
outsb
xorb
inc
jb
outsl
xor
outsb
add
pop
sub
push
je
xchg
adc
push
repz
pop
pop
mov
fidivl
clc
jmp
mov
sbb
sahf
testb
rcll
in
pop
dec
js
stos
push
and
sbb
mov
loopne
push
xor
xor
xchg
and
jne
ljmp
xor
cmpb
stos
ss
fldl
sub
push
fisubs
and
stc
imul
mov
cmc
call
sbb
xor
mov
mov
jno
pop
popa
jns
leave
shlb
inc
in
movq
add
out
push
pop
xchg
adcb
push
aad
adc
int3
mov
mov
movsl
push
dec
pop
notl
fimull
lds
and
xchg
xchg
jecxz
fs
test
mov
aaa
cmp
ss
mov
pop
xchg
jne
cmpl
or
hlt
test
sub
lahf
push
rolb
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
add
add
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
add
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fadds
add
clc
add
add
add
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
add
pushf
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
rolb
add
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
daa
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
daa
add
fsubl
add
aam
add
int3
daa
add
les
add
mov
daa
add
lods
daa
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
sub
add
add
add
add
add
add
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
sub
add
sub
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
