jg
nop
add
loopne
cld
or
add
add
add
rolb
ds
and
cltd
pop
jo
jb
rolb
xchg
xor
mov
mov
jne
mov
mov
add
add
add
mov
push
add
or
rolb
outsb
sldt
jne
loopne
in
pusha
add
push
add
add
lods
or
add
nop
add
or
std
push
addb
cmpxchg
data16
add
push
rolb
add
add
push
add
pusha
or
add
add
add
addb
add
adc
xchg
pop
addb
push
addb
or
add
addb
push
lock
add
add
addb
pop
mov
add
add
xor
push
or
add
push
add
pop
add
mov
push
xor
das
add
add
add
add
add
add
push
adc
mov
addb
or
add
or
add
or
add
add
add
add
cmpsl
or
add
add
or
add
inc
add
push
rolb
call
push
add
push
push
loopne
pop
push
rolb
addb
add
rolb
ljmp
add
add
add
or
add
push
rolb
or
addb
add
aaa
add
add
mov
fiaddl
rolb
cmp
pusha
add
add
add
add
add
add
add
addb
xchg
jb
add
addb
xchg
rolb
add
loop
add
add
add
add
stos
or
add
add
add
add
loopne
ljmp
add
cmpxchg
jo
and
loopne
inc
add
mov
add
push
loopne
cmp
addb
add
rolb
cs
rolb
xlat
or
add
push
pusha
add
jo
mov
add
add
add
loopne
fadds
lock
or
add
add
add
xor
jg
addb
add
add
add
add
mov
push
pop
addb
push
pusha
add
or
adc
popl
rolb
add
add
push
add
xor
insl
push
mov
mov
adc
xchg
push
addb
or
add
pop
pusha
add
mov
xchg
push
adc
sub
mov
sbb
nop
add
in
push
popl
mov
push
popl
mov
push
popl
call
movl
movw
cmp
jne
mov
ret
movl
push
add
push
andl
and
mov
push
popl
pusha
movw
push
popl
call
mov
push
popl
mov
movb
push
addw
movw
xorl
push
popl
addl
xorb
sub
push
push
popl
call
push
popl
push
popl
cmpl
jne
sub
call
sub
ret
push
popl
add
jmp
push
popl
push
popl
xor
movl
xor
mov
orb
shl
movb
or
mov
andb
shl
movw
mov
sub
movl
cmp
jne
add
or
mov
push
popl
or
sub
addb
orw
call
sub
popa
movw
pusha
sub
addl
call
xor
mov
sbbb
push
movw
and
xorl
addb
push
popl
addl
push
popl
push
add
sbbl
call
xor
push
xor
movw
xorl
orb
addl
xor
movl
pop
sbbw
push
popl
cmp
jne
and
ret
add
subb
popa
and
call
andw
addw
push
push
popl
mov
xorl
xorw
push
popl
addl
xor
mov
push
xorb
call
addw
push
push
sub
dec
mov
mov
add
xchg
push
popl
mov
push
popl
addl
shl
push
popl
xorb
push
add
xor
push
popl
push
xorb
push
popl
call
sbbb
push
subw
subl
mov
movl
andl
push
andl
xorb
jmp
andw
orl
pop
subb
orl
mov
push
popl
push
popl
push
movl
mov
push
and
addl
push
push
popl
mov
sbbl
mov
push
popl
movl
rep
addl
pop
push
popl
push
popl
pop
push
ror
add
sub
mov
xor
xchg
push
add
dec
mov
sub
xchg
orw
xor
push
popl
movb
jmp
push
popl
orb
sub
push
popl
andl
mov
xorb
sub
sbbb
xor
sub
sbbw
sbbb
mov
push
popl
sub
add
xorw
or
jne
push
popl
add
movl
push
popl
jmp
mov
mov
and
orl
shr
andl
shl
mov
mov
xorw
add
andw
jmp
push
popl
sub
addb
subl
mov
sbbl
add
add
cmp
jne
push
popl
andw
mov
andb
add
andl
push
popl
mov
andw
add
sbbb
cmp
jne
push
popl
addb
ret
sbbb
push
movb
xor
push
popl
pushl
andb
push
popl
pop
push
popl
push
popl
lea
push
popl
or
movw
mov
movw
addw
mov
addw
or
lods
xor
mov
xorw
subl
pop
push
popl
ret
push
popl
xorb
push
push
popl
andb
mov
push
popl
add
add
movw
push
xorb
push
push
popl
xorb
push
orl
push
mov
movl
push
push
popl
mov
subb
mov
push
popl
push
popl
add
andl
pushl
addb
mov
andl
add
push
popl
add
add
push
popl
movw
mov
push
popl
add
movl
push
popl
xor
subl
lea
sub
mov
movw
add
orb
sub
mov
push
popl
push
popl
xor
push
popl
push
popl
rol
push
popl
xor
push
popl
inc
push
popl
movb
cmpb
jne
subl
cmp
je
push
popl
xorb
inc
andl
push
popl
cmp
jb
orl
push
popl
mov
addl
xor
add
subl
push
popl
movzwl
add
mov
push
popl
add
subw
mov
push
popl
push
popl
add
push
popl
push
popl
pop
movb
movb
cmp
jbe
push
popl
cmp
jae
push
popl
pushl
movl
push
popl
pushl
sbbb
andw
push
push
popl
xorl
push
popl
addl
push
popl
push
popl
pushl
andb
andb
call
movl
andl
call
orw
pop
orb
pop
sbbb
push
popl
pop
add
push
popl
pop
movw
pop
push
popl
leave
push
popl
push
popl
ret
addb
movb
call
jl
test
lods
es
push
frstor
icebp
popa
orb
mov
pop
and
inc
pusha
jg
or
hlt
addr16
fistpll
push
push
push
and
lcall
mov
and
ljmp
test
scas
addr16
pop
add
dec
mov
aas
mov
sbb
cmp
pop
mov
cmpb
push
or
pop
cmpsl
mov
iret
nop
push
jnp
dec
push
inc
jg
test
inc
push
cld
bound
jbe
pop
in
pop
pushf
adc
in
dec
xchg
mov
push
mov
push
sahf
ds
cmp
out
in
enter
out
jb
xor
adc
adc
inc
dec
pop
test
lods
and
cmp
sti
ficompl
push
out
xor
pop
jmp
sbb
xor
mov
pop
xor
stos
push
xchg
xor
aad
sub
out
xor
or
cmp
fadds
ret
xchg
mov
aaa
pop
lods
and
cmp
fwait
mov
nop
dec
cld
sbb
fsubs
lock
pop
gs
dec
cli
and
into
or
adc
movsl
les
jg
daa
ljmp
pushf
dec
rolb
pushf
pop
mov
ret
sarl
or
ja
and
lods
out
adc
inc
cmc
or
imul
pop
out
sub
sub
inc
jno
test
sbb
mov
pop
icebp
push
insl
dec
mov
pop
rcrb
aaa
xor
out
enter
aad
cli
mov
mov
popf
sbb
cmp
pop
sub
xchg
adc
sbb
mov
xor
ljmp
insl
dec
hlt
cld
imul
mov
cmp
pop
out
ret
or
and
nop
addr16
cld
inc
mov
or
xchg
je
into
mov
sub
aad
popa
and
and
ret
fmul
inc
and
sbb
mov
lcall
sbb
and
cs
out
dec
cmp
dec
mov
add
sbb
fdivrs
pop
cli
out
xor
jnp
test
inc
add
jmp
loop
loope
pop
orb
imul
sahf
repz
lret
adc
lods
scas
aam
loopne
push
sub
sub
or
mov
push
xlat
es
cmp
xor
sarl
pop
sub
dec
in
mov
inc
cmpsl
mov
outsb
cmp
jmp
cmp
cmp
inc
dec
dec
and
push
add
push
fnsave
stos
cmc
lds
pop
sbb
inc
pop
aad
push
mov
jle
cmp
cmp
and
adc
xor
pushf
in
xor
ds
cltd
mov
sub
pop
jp
cld
and
scas
sub
inc
cwtl
test
or
into
jmp
sub
xchg
daa
adc
aas
adc
mov
shl
cmp
std
mov
insb
and
jge
sbb
insl
js
cmp
cmp
or
pop
sti
popa
rcl
adc
mov
jecxz
dec
sahf
aas
add
scas
dec
mov
push
sbb
outsb
mov
mov
xchg
inc
mov
push
xchg
sub
push
xor
and
clc
out
jns
sbb
nop
aad
pop
pop
out
mov
adc
fs
dec
aam
sbbb
das
lcall
xor
arpl
in
rcll
xor
aas
pop
into
sub
in
push
mov
fwait
xor
cli
cmp
cmp
mov
push
stc
lahf
lods
imul
inc
pusha
cwtl
inc
push
cmp
into
sub
cmp
xchg
test
or
mov
mov
cmpsl
fnstenv
scas
rcrb
lds
pop
mov
scas
inc
cmc
stos
jo
cmpb
adc
dec
pop
mov
cmc
add
popf
lret
mov
fs
xor
out
cs
ss
sbb
dec
pop
xor
lods
inc
or
push
mov
mov
popf
nop
xchg
jl
jo
inc
xchg
jnp
jb
pop
test
and
sub
fnstcw
sub
mov
dec
or
ret
and
test
mov
imul
mov
pushf
sub
cmc
push
add
push
jp
sti
push
xchg
xor
inc
outsb
shlb
inc
ret
ss
mov
pop
test
insl
or
jae
cmp
cmp
mov
or
inc
and
jmp
fadds
jns
push
outsb
jo
cmp
in
mov
mov
in
scas
fildl
ret
jnp
fmuls
and
inc
addr16
push
jne
loop
roll
aam
push
not
fdivrs
ret
jl
call
jns
jbe
or
aas
leave
sub
or
cmp
push
mov
subl
pop
scas
mov
cmp
mov
arpl
in
cmp
scas
fucomp
push
cld
xchg
adc
cmp
cmp
js
dec
ds
mov
inc
cmp
pop
dec
cmpsl
jmp
ss
and
cmpsb
sub
cmpsb
mov
xor
mov
fistps
repnz
stos
inc
lock
pop
xor
adc
pop
mov
inc
gs
lret
jbe
in
mov
ja
int3
aad
faddl
std
push
repz
inc
lret
push
aad
ret
sahf
es
les
jle
push
jbe
mov
dec
pop
mov
sub
sarb
scas
aaa
sbb
lods
sbb
pop
jle
lods
fcomip
cmc
cltd
subl
pop
iret
push
xor
and
movsb
jae
mov
aam
pop
std
lret
jbe
aad
or
jge
ret
jmp
push
sti
jle
jnp
and
cmp
scas
mov
pop
outsb
cli
stos
pop
out
dec
lods
mov
sub
jo
xorb
std
add
cmp
or
ds
mov
cwtl
pop
lahf
mov
jp
xor
roll
mov
cmp
sbb
aam
sbb
into
cmp
xchg
fs
addr16
ret
sub
popf
cmp
mov
lods
inc
cmp
xor
cli
repz
or
xor
sub
pop
inc
push
out
cmp
xor
cmp
pop
jo
pop
inc
gs
dec
mov
xor
inc
dec
sti
sub
fdivrs
movsl
cmc
mov
cmc
cmp
sub
les
jbe
movsb
inc
sub
jle
enter
test
mov
insl
sbb
cmp
pop
push
lods
jecxz
fmuls
inc
repz
mov
cs
clc
cli
arpl
repnz
or
mov
dec
mov
aas
repz
lret
iret
das
scas
xor
sub
cmp
jle
test
mov
repz
popa
jmp
idivl
lods
scas
pop
aad
aam
mov
adc
push
sbb
es
mov
imul
add
ds
cmc
ret
fnstenv
scas
shll
mov
pop
mov
dec
mov
aaa
xor
sub
das
scas
das
rcr
mov
mov
fidivrl
pop
jle
lods
adc
in
cmp
in
into
lods
subl
jbe
mov
sub
iret
xchg
xchg
js
cmp
ficoml
jne
mov
lcall
cmpsb
inc
pushl
cmp
in
mov
xor
cmp
cmp
pop
ja
mov
negl
mov
fsubr
ljmp
push
sub
dec
iret
nop
push
mov
inc
call
inc
lods
xor
pop
jae
cli
dec
pop
xor
and
jns
repz
fcoms
inc
cmc
mov
mov
cmp
test
aam
and
xor
xchg
adc
dec
pop
mov
sub
sbb
mov
push
rcll
jg
test
inc
repz
xchg
ss
lcall
mov
shl
into
mov
jne
xor
stc
call
arpl
comiss
rcrb
cld
gs
test
jbe
mov
sahf
lods
jmp
add
dec
arpl
cld
push
mov
bound
pop
xorb
leave
cmp
sbb
xor
es
cmp
sbb
cmp
pop
loopne
or
pop
pop
icebp
lods
fisubl
push
repnz
mov
ds
mov
aam
sub
pop
dec
frstor
mov
lods
in
pop
aam
cmp
sbb
icebp
cs
xor
jo
addb
jae
xor
mov
cmp
aas
sub
test
add
mov
push
xchg
inc
sbb
cmp
cmp
das
mov
inc
jl
rorl
and
gs
pop
adc
nop
mov
and
shlb
cmp
divps
jns
sub
movsl
inc
mov
pop
push
daa
sub
popa
rcrb
xchg
or
inc
arpl
mov
push
lret
mov
xchg
jmp
clc
xlat
movsb
cmp
dec
shl
fsubs
jno
sbbl
insb
xchg
adc
mov
jge
jmp
push
jmp
std
pop
add
repz
out
dec
or
push
scas
sarl
fimull
out
testl
data16
lea
arpl
movsb
jne
js
movsb
je
inc
insb
xchg
dec
rcr
mov
cmp
sti
lods
push
hlt
mov
mov
push
jmp
and
mov
push
sub
rorb
inc
nop
jmp
cmpsl
jmp
cmp
sub
inc
mov
push
sbb
cmp
pop
cmp
mov
mov
pushw
jae
popa
push
repz
sbbl
out
dec
scas
test
rcrl
cli
stos
inc
out
inc
sahf
repz
dec
dec
mov
lahf
pop
idivb
mov
rcrb
cmp
pop
mov
pop
push
add
movsb
mov
cmp
popa
test
and
cmp
lahf
lods
mov
and
scas
or
fmul
divb
jle
lods
mov
outsb
xor
sub
in
cmp
add
fdivrs
dec
cmc
rolb
test
icebp
dec
pop
adc
and
xchg
out
dec
mov
inc
clc
loop
rolb
scas
sub
into
xchg
mov
jle
lods
mov
and
fucomi
shrl
xchg
pushf
and
pop
out
dec
cld
push
or
cwtl
fisubl
push
repz
inc
cmp
push
inc
fwait
mov
pop
shll
mov
out
lods
inc
inc
adc
es
loop
and
dec
addr16
push
xor
fcoms
in
es
fldcw
pop
pop
addr16
sahf
inc
lahf
pop
jg
ret
fildl
pop
push
jg
xchg
xchg
push
sub
xchg
dec
gs
movsl
sbb
jmp
inc
popf
outsb
add
outsl
adc
cmpb
jecxz
inc
pop
push
cmpsl
jmp
aaa
test
adc
lods
out
dec
lods
mov
cmp
pop
out
ret
adc
shll
pop
shrl
test
scas
mov
lds
or
ja
sbb
add
inc
mov
shlb
dec
dec
jno
and
mov
dec
add
popa
out
dec
pop
ljmp
inc
cmp
hlt
adc
cmp
aas
cli
orl
mov
and
add
jmp
dec
push
outsb
add
cs
cmp
addb
pop
xor
and
dec
mov
stos
imul
int
pop
cmc
shrb
aas
in
cmc
inc
out
fs
mov
shll
cmp
sbb
bound
cmp
sbb
and
ficoml
jns
push
or
shll
aaa
fdivrs
mov
imul
add
in
xchg
jg
jmp
sti
lea
and
pop
out
dec
int3
adc
ficoml
imul
shll
aaa
fdivrs
pop
sbb
adc
inc
insb
pop
rcrb
lds
mov
jg
test
mov
adc
cmp
movsl
fmulp
movl
add
pop
pushf
pop
mov
and
sbbb
popf
sti
xlat
pushl
jbe
sub
movsb
xchg
xlat
push
pop
xor
insb
xor
ficompl
push
out
sbb
icebp
jl
lods
pop
xlat
lods
lods
xchg
insb
repz
cmp
jg
or
shrl
mov
mov
jo
bound
sub
ja
dec
sahf
inc
rcr
adc
mov
pop
scas
shll
or
xchg
dec
pop
cmpl
iret
das
scas
adc
iret
lcall
inc
cmpsb
out
lock
lods
jo
xchg
daa
cmpsb
mov
gs
dec
pop
jb
add
ja
pop
lahf
push
add
mov
inc
adc
aas
sub
dec
fstps
jo
mov
gs
dec
pop
cmpsl
mov
and
pop
pop
cwtl
adc
cmp
jae
fs
cmc
push
fidivl
jge
js
and
imul
pop
xor
gs
mulb
dec
push
push
cmp
push
jmp
push
bound
shll
sub
push
xchg
cmp
cmp
or
ljmp
pop
inc
dec
mov
push
stos
xor
mov
data16
fstpl
ret
mov
and
jl
dec
mov
stos
sbb
sub
rcrl
pop
stos
daa
and
fwait
out
fs
mov
cmpsb
out
ds
and
test
pop
cmp
pushf
testb
sahf
cmp
cmp
cmp
sub
mov
mov
arpl
stos
mov
fldl
in
in
push
jne
jns
mov
xor
cmp
and
fsubrs
and
icebp
popa
orb
jb
dec
scas
imul
ret
mov
and
movsb
movsb
jp
in
xchg
jle
into
lret
jns
mov
leave
push
cmp
insl
pop
dec
add
push
xchg
imul
test
pushf
jns
repz
mov
mov
popa
inc
jp
jo
int
mov
pop
jl
push
mov
xchg
fdivrs
repz
mov
mov
adc
in
xchg
mov
inc
iret
aas
xor
cmp
iret
aam
mov
lods
add
sbb
sub
shlb
jbe
dec
mov
leave
pushf
fadds
sbb
jb
pop
xchg
mov
call
dec
cmp
das
movsb
inc
jg
mov
dec
stos
inc
lock
pop
xor
adc
scas
sbbb
gs
call
lahf
arpl
jo
and
jbe
cmp
or
mov
pop
push
mov
data16
movsb
cmp
lods
inc
jmp
xchg
dec
mov
ss
sub
out
in
push
and
mov
push
adc
push
add
xor
or
arpl
xchg
xchg
pop
dec
fdivl
in
mov
lods
inc
push
je
stos
jno
inc
shll
push
mov
add
movsb
push
into
mov
mov
mov
into
xlat
sbb
mov
adc
scas
rcrb
ja
lock
in
xchg
xchg
pop
inc
mov
mov
xor
movl
negl
mov
push
repnz
jno
dec
aas
aas
mov
xor
lods
mov
fcoml
shr
jb
inc
jae
mov
mov
inc
popf
sahf
dec
int
and
pop
mov
jb
fsts
and
out
push
les
aad
icebp
cmpl
aam
push
lods
pop
test
add
inc
data16
mov
mov
cli
add
pusha
jmp
lret
jp
mov
cmpsl
fsubrp
out
pusha
test
and
jo
iret
dec
lea
mov
and
popf
mov
push
arpl
adc
xlat
mov
sti
test
lea
arpl
mov
loopne
pop
xorl
fcoms
pop
inc
add
clc
dec
push
aad
dec
dec
jmp
imul
mov
jbe
movsb
inc
push
mov
cmpsl
arpl
dec
test
ds
das
scas
and
or
jle,pn
cmpsb
fcomip
aad
sbbb
push
sub
cmp
iret
dec
sti
mov
jb
xchg
inc
nop
sbb
pop
cmc
and
and
pop
out
dec
mov
inc
add
fnsave
lcall
inc
mov
inc
pop
inc
xor
and
rcll
push
out
lea
cmp
lret
jbe
jbe
pushf
movsb
push
pop
movsl
ljmp
dec
sahf
inc
mov
pop
aad
fnsave
mov
xchg
push
mov
aas
lret
adcb
sbb
lret
sbb
cmpsl
and
mov
mov
adc
xor
xchg
mov
jmp
fnsave
ficoml
lret
push
pop
xor
loopne
xchg
add
icebp
push
std
xchg
adc
clc
repz
sbb
outsl
dec
jns
dec
mov
test
inc
add
rcll
cmp
pop
orb
pop
test
ss
das
scas
adc
fsub
fldenv
js
jle,pn
cmpsb
in
aad
stos
inc
lock
pop
xor
adc
test
mov
lcall
dec
adc
scas
xchg
ret
sbb
es
mov
pop
setbe
movsl
push
mov
pop
xchg
inc
pop
out
iret
xchg
mov
sbb
adc
xchg
enter
sbb
pop
fisubrs
adc
cmp
ds
das
scas
or
lock
cmp
jle
cmpsb
pop
push
jle
scas
inc
or
mov
sub
sub
dec
js
dec
xchg
lods
and
mov
sub
cltd
inc
pop
adc
sub
test
sub
movsb
jbe
cmpsb
mov
lret
jnp
fnsave
int3
fadd
inc
push
or
push
sahf
inc
sub
stos
xchg
cmc
xchg
xchg
push
push
shl
pop
push
jo
sbb
dec
xchg
xchg
or
insl
inc
cmp
cmp
shl
mov
pop
add
cmp
inc
andl
jbe
or
mov
cmp
pop
outsb
pop
sahf
pop
inc
repz
pop
xor
and
mov
push
aas
sub
mov
sbb
add
aaa
lahf
dec
cmp
fidivs
mov
dec
sbbl
adc
jo
sarl
sub
test
ret
sbb
cli
mov
xchg
and
out
dec
pusha
dec
fld1
ljmp
and
ds
mov
adc
xchg
jo
cs
frstor
int3
das
and
repz
pop
jmp
xchg
adc
mov
repz
sub
push
xchg
mov
lods
andl
pop
cmc
aad
stos
push
gs
aas
out
cmp
mov
sub
mov
ret
pop
xor
mov
sahf
sbb
cli
adc
pop
scas
pop
mov
sub
cmpsl
mov
arpl
pop
xchg
adc
scas
adc
fnclex
fnstcw
movsl
cmp
dec
test
add
dec
iret
das
scas
or
xchg
cmp
dec
lods
mov
icebp
pop
sub
lret
push
xor
mov
scas
mov
cmp
pop
out
ret
sbb
lahf
mov
arpl
jnp
dec
adc
push
sbb
int3
out
push
mov
push
cmp
into
push
add
and
insl
cmpsl
shl
cmpsb
subb
cmpl
nop
jnp
mov
push
inc
test
xor
and
lahf
stos
imul
pushf
fisubrl
jnp
stos
adc
fcmovbe
pop
sub
mov
sahf
xor
outsl
sbb
push
cmpb
mov
dec
inc
iret
pop
cmp
clc
dec
pop
xor
dec
jl
push
inc
inc
dec
and
imul
and
fdivrs
mov
cmpsl
jbe
xor
cwtl
lods
xlat
fisttpl
mov
cmp
pop
dec
mov
fldenv
push
pop
xor
mov
inc
pop
test
cmp
rcrb
fadds
push
xor
cmp
inc
mov
sbb
sub
mov
inc
outsl
or
out
clc
repnz
leave
dec
inc
xchg
scas
sbb
repz
arpl
cmp
mov
out
dec
movsb
in
adc
dec
cmp
outsl
xchg
fdivrs
hlt
and
lock
fwait
std
mov
inc
iret
inc
xor
cmp
iret
sbb
insl
mov
inc
addr16
and
lahf
mov
outsb
mov
pop
inc
push
jecxz
pop
push
adc
jl
sub
jbe
xor
inc
popa
pop
stos
or
in
iret
jp
adc
pop
dec
inc
or
cmp
lods
inc
or
mov
xor
les
push
dec
xchg
mov
inc
mov
adc
dec
lds
test
and
rcl
addr16
cmc
jp
aam
xor
xchg
pusha
pop
loope
dec
imul
stos
int3
shlb
sub
aad
popa
and
cmpsl
lret
xor
xor
aam
pop
test
sbb
ret
mov
mov
das
scas
aaa
outsb
frstpm(287
adc
jle
lods
inc
sub
inc
push
scas
test
rcrl
cmp
fucomi
dec
dec
mov
jns
test
repnz
scas
sbb
jbe
cmp
jle
cmpsl
out
in
jp
mov
xor
xor
xchg
jp
pop
repz
mov
jge
lods
jo
xorb
or
pop
out
dec
pop
and
ficoml
sti
sub
icebp
pop
pop
push
dec
mov
ret
ret
add
out
fs
nop
ja
cmp
jmp
imul
inc
mov
sarb
outsl
addr16
dec
sahf
inc
or
call
sub
shll
stos
xchg
mov
xlat
fs
in
mov
pop
sbb
lcall
jle
push
gs
fimull
and
pop
add
pop
lcall
cs
inc
aas
dec
mov
mov
into
cmpsl
scas
icebp
xchg
xlat
push
scas
xlat
push
lcall
cmp
test
sub
cwtl
cmp
int
and
ret
addr16
cli
loop
imul
fcoms
push
add
xchg
pushf
into
inc
adc
ljmp
xor
jecxz
mov
adc
in
sbb
inc
inc
push
mov
ss
inc
in
cmp
out
ret
jmp
push
and
pop
out
dec
rorl
add
jae
pop
push
repz
repnz
pop
adc
lcall
in
lods
sub
adc
js
mov
dec
test
hlt
xchg
jle
and
lret
jns
sub
adc
lock
push
pusha
bound
add
xor
jno
pop
sbb
jp
adc
dec
dec
les
inc
movsb
sbb
cmovp
outsb
unpckhps
sbb
pop
adc
xor
scas
mov
and
xor
cmp
stos
push
cltd
push
fmuls
inc
imull
dec
lret
bound
out
add
cmp
in
scas
es
inc
iret
pop
lods
inc
imul
xor
xor
inc
int
add
div
and
aaa
fisubrl
sub
dec
ss
dec
in
cmp
lret
push
sbb
int3
aas
and
enter
mov
pop
adc
push
movsb
ret
jb
fnstenv
cmp
rorl
jl
jecxz
aad
popa
sbb
sbb
sub
mov
ret
cmp
jg
fadd
jl
push
push
inc
sbb
cmp
dec
pop
inc
gs
dec
repz
jbe
cs
mov
inc
pop
into
fwait
and
inc
aam
jne
add
mov
jecxz
adc
or
dec
stos
out
aad
repz
fcmovnbe
dec
pop
xor
lods
and
mov
dec
jb
shll
and
in
addr16
clc
jne,pn
adc
insb
inc
lret
js
sti
ficompl
push
dec
sbb
jbe
xlat
push
sub
or
aas
pop
lds
sbb
cmp
push
cwtl
mov
fldenv
in
test
pop
inc
gs
dec
push
nop
or
stos
jl
aaa
pop
sbb
cli
push
sbb
adc
push
xor
add
inc
scas
in
adc
lret
stos
sub
or
test
repz
dec
mov
outsb
xor
in
cmp
jnp
sarb
pop
call
jnp
mov
adc
lock
push
xchg
fistpl
jp
pushf
leave
sub
and
and
shlb
pop
repz
mov
mov
inc
or
into
jmp
dec
or
sbb
pop
adc
mov
out
or
xlat
push
pop
xor
xor
popf
ret
sub
dec
addl
xchg
and
xchg
aaa
xlat
sub
inc
sub
push
fstpt
xor
or
mov
mov
or
adc
jae
sub
clc
jl
flds
pop
icebp
dec
xchg
mov
iret
mov
push
mov
mov
inc
pop
jmp
mov
dec
adc
fs
pop
aam
bound
pop
movsl
adc
movsl
ret
fisttps
jb
mov
data16
jae
in
inc
testl
cmp
fistpl
push
xlat
push
pop
xor
sbb
mulb
cmp
in
sub
dec
shll
sub
fucomi
nop
push
pop
xor
dec
push
test
and
mov
push
movsb
inc
cmpsb
and
pop
push
testb
lock
or
sub
js
push
pop
xor
unpckhps
cmp
push
mov
imul
leave
sub
js
ss
loope
mov
push
sub
daa
arpl
sub
pop
gs
sti
jecxz
sbb
mov
xchg
push
dec
pop
ss
mov
sti
aad
sub
ret
loope
fcoms
inc
cmc
or
sbb
cmp
outsl
dec
sub
into
xchg
mov
inc
movsl
sbb
movsl
or
into
jmp
and
outsb
adc
outsl
adc
scas
test
rcrl
aad
cmp
fwait
lods
jp
dec
dec
mov
iret
nop
push
sti
dec
inc
testl
adc
fs
push
scas
scas
pop
sti
adc
enter
ja
rcl
sbb
add
adc
mov
into
sarb
arpl
xor
xor
ljmp
lea
inc
aas
mov
dec
sbb
cmp
pop
lods
fildl
inc
and
inc
divb
adc
cmp
sub
in
cmp
add
mov
fstl
push
inc
test
mov
fildll
cmp
stos
jo
dec
ficomps
adc
dec
pop
sbb
ljmp
and
sahf
adc
fcomip
lock
adc
mov
pop
jno
scas
jo
xchg
jecxz
adc
dec
pop
or
pushf
mov
push
cld
xchg
adc
mov
inc
adc
xchg
outsb
cmp
arpl
arpl
repnz
icebp
sbb
scas
and
and
cmpsb
pop
add
jle
stos
jo
popa
adc
adc
pop
pop
or
inc
dec
inc
and
dec
lahf
loope
imul
sub
xchg
adc
outsl
push
lock
pop
xor
call
cmpsl
jmp
cmp
insb
jns
sub
inc
inc
jge
stos
sub
leave
lods
es
dec
fstpl
push
lock
mov
xor
mov
push
ljmp
dec
pusha
push
inc
xchg
scas
sbb
rolb
fucomi
sub
pop
mov
dec
cmp
dec
cmp
mov
bound
add
cmp
mov
cmp
mov
adc
jle
push
rcrb
add
sarl
stos
pop
rcr
adc
stc
xor
popa
and
sub
scas
and
ror
add
adc
sbb
push
and
pop
out
dec
out
or
adc
mov
jecxz
aam
out
mov
cmp
dec
imul
out
js
cmp
xchg
cmp
pop
out
dec
pop
insb
fmuls
repz
inc
mulb
push
pop
shlb
and
pop
adc
dec
pop
fxch
and
mov
push
sub
or
pop
push
out
inc
sub
shll
inc
jno
cs
out
inc
pop
xor
cmp
xor
cmp
sbb
pusha
add
insb
xlat
jle
out
hlt
mov
ret
lret
lods
add
mov
cmp
stos
xchg
frstor
sbb
repnz
cmpsl
insb
gs
icebp
jecxz
enter
add
dec
call
jl
stos
cmpsl
ret
lods
es
cmp
sub
test
lock
orb
dec
pop
mov
push
rcrb
push
dec
sbb
orl
mov
shll
cmpsl
lcall
sti
mov
jae
push
sti
push
inc
je
fmul
inc
adc
mov
shr
mov
sub
ja
mov
pop
mov
sub
movsb
ja
imul
icebp
ljmp
adc
scas
int3
popa
test
sbb
jnp
shrl
cmp
aam
ja
jns
movsb
inc
inc
jle
lahf
cld
loope
mov
addl
adc
pop
fcmovne
cld
cmc
arpl
inc
dec
inc
and
pop
jecxz
fcomip
hlt
and
adc
cmp
mov
aaa
adc
cld
cli
adc
arpl
ret
jle
or
adc
jge
inc
sti
dec
xchg
lcall
stos
push
rcl
cwtl
cmc
scas
jnp
jb
xor
ret
lods
adc
mov
lret
lds
adc
and
xchg
into
xadd
iret
das
scas
sbb
cmp
dec
test
stos
push
mov
clc
jmp
inc
sub
scas
out
jle
outsb
push
push
cmp
fadds
repnz
xchg
adc
mov
jnp
cmp
pop
adc
je
pop
xor
das
in
pop
out
dec
faddl
pusha
sub
sbbb
xor
cmp
cmp
xchg
sub
cld
rcr
dec
xchg
pop
repnz
dec
push
mov
jo
pop
xor
mov
pop
xor
es
sub
mov
jg
dec
adc
fisubl
push
hlt
inc
mov
inc
setno
mov
jns
sbb
xchg
pop
inc
jb
sub
movsb
mov
dec
lahf
sti
sub
sbb
inc
pop
mov
outsb
sbb
pop
out
dec
shll
adc
mov
fsubs
pop
sar
addr16
hlt
fisubrl
lret
pop
enter
mov
push
mov
adc
dec
sahf
inc
dec
mov
ljmp
dec
xchg
adcl
push
mov
lods
es
imul
mov
popa
orb
movsb
sbb
loopne
sub
jmp
sub
aaa
push
sbb
mov
adc
out
or
sub
pop
fisubrl
mov
jb
lea
arpl
bound
jb
sub
in
mov
das
ds
rcr
shlb
inc
inc
sbb
inc
pop
fisubs
sbb
or
pushf
dec
fldenv
lock
mov
dec
jno
inc
testb
stos
cltd
fwait
and
pop
mov
dec
jae
pusha
push
repnz
push
int3
sub
mov
sti
aas
arpl
xor
adc
xchg
inc
mov
xlat
sbb
cmp
pop
mov
dec
add
add
inc
cmp
rcrb
cmp
ds
cltd
fs
xor
xchg
mov
mov
pop
mov
sub
dec
rcrl
aaa
sbb
dec
mov
jmp
imul
pop
push
inc
push
or
xlat
into
sbb
pop
mov
inc
cmp
test
rclb
shrb
shlb
cli
ljmp
dec
inc
mov
add
outsl
adc
cmp
xchg
test
ds
dec
ja
inc
cmpsl
jmp
pop
dec
or
adc
adc
call
cmpsl
jmp
xor
jno
bound
mov
lods
mov
pop
inc
xlat
arpl
shll
fsubr
inc
jl
fdivrs
data16
lods
fistps
repnz
jle
sahf
lods
jmp
sub
sbb
sbb
in
mov
pop
xorb
jl
in
or
pop
out
dec
mov
cmp
je
fadds
jmp
insb
mov
dec
add
jg
pop
jbe
ds
mov
pop
out
mov
sti
push
arpl
sub
mov
cmp
mov
adc
xor
cs
out
pop
xor
out
in
pop
cmp
jo
mov
xchg
stos
mov
fcmovne
dec
pop
xor
lods
push
inc
adc
cmp
pop
stos
shll
push
mov
adc
popa
ret
xorb
push
inc
push
jecxz
enter
jecxz
in
pop
inc
std
in
sub
cmp
je
xchg
lret
leave
add
test
insl
loop
repz
mov
and
dec
cmpsb
and
negl
mov
rclb
enter
out
repz
std
mov
aas
mov
mov
adc
or
sub
iret
inc
ja
mov
lea
stos
push
pop
test
sub
popf
sub
in
inc
add
pop
int
mov
inc
cmp
mov
push
pop
in
sbb
dec
mov
push
inc
cli
dec
pop
xor
jbe
outsb
mov
inc
test
fcomip
cmc
and
ljmp
mov
or
popf
push
mov
xchg
sub
dec
cwtl
push
dec
cwtl
jg
inc
pop
pop
scas
mov
pop
jle
out
mov
push
xchg
mov
fcoms
stos
push
out
pop
inc
aad
sub
pop
xchg
or
and
mov
dec
shrl
lock
pop
lods
xor
mov
jle
idivl
sub
fbld
adc
xchg
roll
inc
cmp
jno
jb
arpl
cmc
scas
cli
push
aas
sbb
in
sbb
dec
push
fldt
cmpsl
hlt
mov
add
iret
int
adc
sbb
mov
mov
dec
pop
test
adc
popa
xor
xor
ss
pop
sbb
nop
in
scas
cmp
mov
and
mov
push
cmp
dec
xchg
sub
sti
mov
gs
pop
xor
mov
insb
cmp
fdivrs
out
shll
pusha
push
icebp
pop
icebp
or
xor
xor
sub
mov
imul
fcomps
xor
sbb
add
and
mov
mov
adc
xchg
scas
dec
sub
repz
int
in
xchg
rorb
mov
fistpl
outsl
fcomps
xor
mov
gs
sub
mov
push
or
adc
pop
jne
sbb
xor
stos
mov
clc
jo
dec
mov
xor
adc
and
jle
add
push
lods
jle
test
lcall
lock
jb
cmp
out
push
pop
mov
fidivl
add
mov
dec
iret
pusha
push
inc
sahf
popa
aas
mov
cmp
iret
dec
shl
fsubs
rep
xchg
iret
fmul
jbe
sti
in
jecxz
mov
cwtl
or
dec
jmp
push
mov
into
xlat
lret
pushl
in
in
addr16
pop
insb
lahf
jle
in
scas
ds
gs
pop
test
lock
pop
xor
adc
dec
mov
jg
test
sub
jl
cltd
test
idivl
push
loop
notb
addr16
sahf
aas
jle
xchg
mov
adc
mov
mov
aas
mov
inc
pop
pop
mov
es
adc
mov
popa
xorb
sbb
popa
loop
pop
sub
jmp
sar
jb
pop
adc
sub
xor
call
mov
mov
out
fiadds
inc
and
loope
rcrl
sarl
imul
pop
pop
mov
das
lahf
dec
fstpt
das
cltd
lods
pop
push
gs
pop
jnp
mov
push
pop
cwtl
loope
sbb
mov
add
loopne
mov
mov
pop
push
imul
xor
sbb
push
sbb
lret
mov
lcall
int3
aad
add
cmp
cmp
in
cmpsl
call
add
cmpsb
sbb
lock
pop
aad
xor
mov
inc
arpl
sbb
jo
pop
and
push
ja
inc
cmp
mov
in
jmp
and
adc
add
or
outsb
cmpsl
rcll
imul
sub
fs
stos
mov
pop
jbe
pop
mov
sarb
cmp
ret
sbb
repz
and
in
scas
add
push
je
sbb
fstpl
dec
fwait
jle
jnp
mov
cmpsb
lss
inc
push
repz
xchg
sub
push
push
imul
push
adcl
pop
roll
in
lea
mov
xor
dec
sbb
sbb
nop
in
scas
cmp
imul
aas
int
pop
sub
push
lock
mov
jae
and
adc
mov
mov
sahf
push
jl
inc
mov
dec
sahf
ds
sti
push
pop
imul
push
in
test
and
stc
aaa
lahf
bound
aas
cmp
pop
into
jmp
xor
ss
or
pop
pop
adc
push
inc
in
mov
xor
adc
fs
inc
aam
icebp
sub
repnz
pusha
and
sub
dec
shrb
rcrb
mov
dec
push
xor
lods
ljmp
gs
sub
aam
out
insb
or
dec
mov
xor
push
clc
loop
xor
dec
nop
test
cmp
fdivrs
jb
jb
arpl
mul
cmpsl
mov
push
aad
mov
or
lret
fwait
dec
fcomps
xor
cmpsb
jmp
outsl
xchg
and
mov
iret
mov
cmp
sub
mov
js
ss
push
pop
test
mov
xor
pop
fmul
mov
mov
popl
adc
jmp
addr16
inc
neg
xchg
and
xchg
inc
outsl
push
inc
mov
in
int
cmovle
or
pop
dec
pop
inc
adc
lods
andl
pop
cmc
aad
stos
inc
out
out
out
cmp
mov
mov
aaa
in
cmp
shl
movsb
xor
adc
pop
dec
push
push
xchg
and
jp
push
mov
mov
ret
adc
movsl
and
cmp
loop
insl
arpl
pop
xor
mov
mov
lods
mov
std
inc
cmp
xchg
aad
and
out
sahf
xchg
bound
repnz
aaa
mov
push
shrl
cmp
adc
add
jmp
sbb
fsin
mov
ss
rcrb
mov
ja
movsb
inc
xlat
and
mov
sbb
mull
xor
out
dec
lock
push
inc
dec
and
cmp
jmp
cs
fnstsw
xor
cwtl
xchg
push
lock
pop
xchg
adc
rcr
je
add
ss
dec
lds
pop
sbb
test
sbb
dec
push
pusha
inc
mov
mov
arpl
jns,pt
sbb
pop
mov
cmp
popa
fcompl
cmc
cmp
pop
xorb
pop
in
and
mov
dec
inc
mov
ds
inc
inc
jmp
cmp
inc
filds
cmp
mov
inc
sarl
imul
xchg
and
or
inc
mov
pop
sub
inc
or
movl
ror
rcrl
addr16
sahf
xor
adc
ret
push
jnp
push
jg
fadd
xchg
inc
lods
pop
dec
lahf
icebp
pusha
aas
xchg
mov
iret
cmp
and
push
insl
add
test
lret
mov
sbb
dec
mov
adcl
aad
popa
pop
fdivl
nop
mov
repz
pop
add
fs
mov
gs
dec
cmpsb
nop
sbb
mov
movsl
addr16
sahf
jbe
test
aad
testl
sbb
push
cli
mov
push
scas
fsubs
int
out
pop
iret
push
ds
mov
push
pop
mov
pop
sub
jmp
es
push
lea
pop
adc
subl
mov
xor
mov
push
dec
xchg
jge
jo
enter
adc
dec
pop
fstpt
dec
adc
addr16
add
int3
stos
lock
hlt
dec
inc
xchg
js
ss
mov
sub
mov
inc
mov
shrl
push
hlt
pop
mov
mov
mov
mov
decb
jge
and
cmp
sahf
cmp
cld
xchg
or
and
cmc
push
inc
and
mov
push
mov
call
ss
xor
cmp
inc
add
sub
out
and
shr
mov
sbb
dec
pop
xchg
pusha
loopne
and
das
scas
or
fucomi
icebp
es
out
cmc
ret
cmpsl
push
lcall
incb
push
jne
enterw
or
push
dec
fildll
mov
push
and
cmc
nop
pushf
imulb
cmp
inc
mov
roll
inc
cld
or
adcl
sub
test
pop
pop
incb
out
nopl
cmpsl
jmp
xor
repnz
call
mov
stos
mov
jmp
xor
dec
xchg
xchg
and
cmp
fdivrs
insl
pop
rcrl
cmp
inc
mov
push
es
clc
mov
sub
dec
mov
inc
outsl
cwtl
sub
test
scas
pop
jmp
inc
cmp
cmp
rorb
movsb
inc
gs
mov
jg
rcr
push
inc
cmp
xor
xchg
mov
push
and
inc
push
dec
fcoms
pop
stos
ret
scas
leave
aam
in
ja
test
out
sub
mov
mov
cmp
fcmovnb
shl
sahf
aaa
xchg
in
enter
dec
mov
inc
in
lea
loop
inc
sub
sbb
mov
sub
fistpl
push
out
cmpsb
lods
pop
idivl
pop
adc
inc
inc
hlt
fidivrl
rcrl
das
scas
cld
sbb
push
cmp
dec
test
sub
cmp
cmpl
push
shrl
cmpxchg
shrl
xor
movsl
cmp
mov
adc
loope
outsb
arpl
bound
add
mov
jne
push
jmp
bound
iret
push
xchg
jle
testl
cmp
sub
push
lock
es
shlb
push
inc
lea
cmpsl
fcmovnb
mov
imul
dec
aas
lret
ja
lea
ret
stos
cltd
rcl
icebp
inc
movsl
inc
jbe
insb
arpl
sti
cmp
cmp
mov
dec
xchg
fucomi
testl
jbe
and
mov
push
jae
out
add
pop
push
lock
rcrl
cmpsl
mov
lods
and
shl
fsubs
in
lahf
clc
dec
push
push
or
push
xchg
lds
inc
pop
int3
mov
push
sbb
pop
or
jbe
ss
jmp
cmp
push
xor
mov
push
mov
and
xchg
add
lods
es
test
or
rcll
mov
jl
jmp
insl
leave
mov
sub
pop
add
jg
scas
cmp
mov
xchg
sub
sbb
mov
ds
das
scas
add
fsubr
push
cmpsl
out
stc
ret
outsl
fdivs
jnp
xchg
sbb
sbb
loope
cmp
pop
sti
jno
mov
jge
lret
pop
sbb
std
jge
add
mov
insb
add
sbb
icebp
mov
pop
adc
divl
aam
int3
sub
ds
jae
pusha
fadd
jb
aam
jae
jecxz
jne
scas
add
or
inc
mov
test
jp
dec
scas
add
dec
pop
mov
scas
leave
pusha
add
lods
es
mov
cli
and
dec
icebp
mov
jbe
lahf
add
cmpsb
xlat
pop
pop
xor
push
xchg
xchg
and
mov
push
sub
cmc
cmp
mov
lods
dec
cmp
fucomi
mov
xor
dec
enter
dec
add
icebp
xor
popf
jb
bound
repz
sbb
pop
sbb
xor
movsb
mov
xchg
pop
sti
dec
arpl
sub
mov
inc
xor
jp
fcomip
jmp
push
andb
lret
or
cmp
das
sub
fadds
sbb
mov
sub
dec
movsl
scas
mov
pop
stc
push
shll
gs
cmp
pop
rorb
ficoml
les
xchg
call
div
and
pop
dec
adc
cmovle
lea
pop
sbb
andb
lea
arpl
jns
repnz
jmp
lea
test
fisubs
shrb
int3
pop
cmp
inc
inc
rol
cmp
and
fcomp
stos
frstor
aas
inc
les
sahf
popa
inc
jns
test
mov
push
pop
pop
gs
push
adc
sti
mov
aad
xchg
bswap
mov
scas
rcrb
sar
stos
dec
sahf
cmp
mov
pop
aad
lea
outsl
xor
mov
pop
out
mov
mov
cli
sbb
out
imul
lods
les
out
pop
xor
pop
cmp
sbb
mov
les
idivl
sub
addr16
xor
lds
cmpsl
inc
cmp
mov
xlat
sub
xor
push
cwtl
pop
in
sbb
imul
cmp
lcall
jnp
ljmp
pop
out
dec
bound
mov
insl
mov
or
scas
inc
adc
adc
out
pop
xor
mov
pop
xor
cs
and
rol
fsubs
pusha
sub
jns
out
cmpsl
push
push
push
ret
cld
lods
andb
popf
mov
outsl
pop
in
and
add
or
add
inc
arpl
inc
je
rol
mov
sti
cmpsl
cmp
xchg
and
imul
pop
pop
xor
and
mov
cmp
test
cld
iret
jge
jbe
test
mov
push
or
and
into
jecxz
mov
pop
push
aas
cmp
mov
out
jl
imul
push
or
cmp
adc
xor
arpl
nop
les
lods
es
pusha
frstor
lock
orb
shlb
lcall
sub
jns
test
xor
cli
rcrl
pop
and
push
mov
xchg
adc
jecxz
cld
arpl
insb
aas
pop
lods
mov
aaa
rcll
into
shrb
mov
push
add
aam
js
mov
cmp
fistpll
pop
xor
in
cmp
scas
ret
in
push
pop
in
decl
pop
cmp
stc
lahf
and
int3
call
fldt
push
shlb
in
in
cld
dec
sahf
inc
nop
xlat
clc
loope
insl
sbb
sbb
cmp
push
cmp
mov
mov
out
cmpsb
mov
ss
cmp
adc
clc
jbe
add
shll
cmp
inc
pop
adc
ror
cmp
mov
in
mov
addb
push
cmp
je
mov
push
adc
dec
jnp
lods
sbb
cmp
jbe
cmp
pop
push
dec
mov
pop
lods
test
rcrl
push
stos
and
imul
inc
dec
mov
dec
sarl
in
mov
lods
inc
pop
xchg
mov
add
sub
dec
push
push
hlt
stos
mov
jg
or
cmp
xchg
sbb
inc
jne
inc
stc
cwtl
inc
enter
ficoml
mov
adc
pop
lods
mov
scas
inc
sub
fsubs
notl
popf
es
loop
stos
add
sub
ss
ror
add
sbb
mov
loope
stos
mov
roll
out
jl
rolb
and
fnclex
or
loop
mov
mov
jnp
jo
pop
xor
cmp
or
pop
orb
fiadds
inc
shll
lea
das
xor
repz
adc
and
lret
dec
sbb
sub
mov
push
adc
push
aas
sub
hlt
inc
xor
and
mov
push
inc
and
mov
leave
std
mov
bound
les
jp
mov
sub
dec
sar
fsubrs
sub
in
pop
data16
push
orl
dec
int3
lock
adc
and
jb
adc
cmp
pop
sub
sub
ret
xchg
adc
filds
test
pop
mov
in
cmp
lds
push
addl
jbe
shrl
fdivrs
lcall
xchg
andl
push
pop
test
movsb
pop
mov
cmp
in
push
dec
and
imul
jmp
ficoml
jecxz
sbb
imul
mov
inc
aad
sub
insl
mov
add
adc
sbb
inc
ss
ret
dec
movsb
mov
inc
mov
imul
pusha
add
push
xchg
adc
clc
lock
or
xchg
jl
jo
pop
xor
cmp
push
adcl
push
or
pop
adc
loope
pop
dec
inc
dec
insb
inc
movsl
or
aad
mov
icebp
sbb
dec
sahf
inc
sub
mov
aad
sbb
pop
out
mov
push
inc
aas
or
sub
out
into
nop
push
repz
xchg
cld
inc
mov
or
shrl
mov
adc
mov
jp
pop
push
xor
bound
pop
xchg
loopne
rcr
addb
lods
mov
jb
pusha
push
repz
notl
les
mov
or
mov
and
mov
jbe
and
dec
mov
xchg
mov
notl
outsl
cld
idivl
inc
iret
pop
enter
inc
testl
dec
xor
insb
nop
fdivrs
test
cmp
sbb
mov
inc
xchg
outsb
jmp
pop
out
dec
scas
test
rcrl
call
mov
out
dec
dec
mov
xlat
test
rorb
cmp
push
leave
jg
test
dec
fistl
mov
xorl
sbb
sbbl
inc
sahf
cmp
shll
jo
dec
insb
repz
shll
xor
cmp
dec
cmpsl
push
dec
and
pop
out
dec
and
mov
push
icebp
jp
pop
in
mov
adc
repz
cs
rcrl
dec
cmp
bound
insb
xor
lea
jae
sub
inc
insl
inc
and
mov
jb
nop
ds
cmp
dec
mov
lods
in
fildll
iret
rcrl
inc
stos
cmp
je
mov
mov
jge
rorb
or
rcll
inc
call
addr16
movsl
cmp
mov
outsb
fsubs
movsb
sub
sbb
jno
loope
arpl
xor
jmp
xor
sbb
mov
dec
jnp
scas
jmp
ficomps
mov
insb
xor
stos
push
cmp
fistl
inc
sub
pushf
das
dec
adc
movsl
movsb
fisubl
mul
outsl
lods
jl
insb
xlat
lods
mov
in
add
inc
dec
cmp
cs
jno
mov
cmp
jmp
into
jne
jmp
mov
es
and
push
or
xchg
jmp
orl
aad
popa
and
out
xchg
aam
pushf
nop
or
xchg
jmp
jae
mov
pop
sbb
mov
xchg
lret
int3
test
gs
push
das
shrb
int3
push
fcomps
shrb
in
dec
and
dec
addr16
mov
jne
es
jb
sarb
push
add
push
imul
outsb
sbb
pop
out
dec
sarl
fsubs
adc
sub
xor
enter
rcrl
mov
fistpll
movsl
pusha
mov
in
dec
inc
les
shlb
insb
cmpsl
shl
shrb
push
and
inc
jl
in
adc
mov
sbb
sub
cmp
lret
call
and
mov
push
and
push
rcrl
cmp
cmp
pop
push
dec
xchg
mov
loop
lret
inc
cli
dec
pop
xor
push
add
fcoms
inc
clc
mov
jno
and
add
shll
cmp
inc
pop
sub
push
cli
jmp
dec
pop
push
cmp
lea
xor
adc
fstps
imul
and
int3
nop
fcoms
aas
add
loopne
pop
jae
inc
adc
test
pop
loopne
mov
ja
rcrw
add
mov
pop
inc
jecxz
dec
mov
jmp
outsb
pushf
and
pop
cld
nop
adc
repz
and
ljmp
stos
jb
pop
test
and
or
push
out
popa
mov
pop
int
sarl
xor
fsub
aaa
sahf
aad
cwtl
rcl
push
fdivl
mov
into
xlat
fisubrl
cs
insb
mov
push
scas
aad
adc
rcl
addl
mov
mov
add
out
inc
frstor
insl
jp
inc
icebp
mov
in
push
mov
ljmp
xor
cmp
push
lock
dec
fnsave
pop
mov
sbb
data16
xchg
and
scas
mov
fsts
push
arpl
in
cmp
cmpsl
test
adc
mov
ds
popf
sbb
or
inc
fsts
cmp
into
inc
cmp
cmp
imul
cmp
adc
mov
inc
xor
mov
popa
mov
inc
jg
test
cmp
xor
stc
lahf
adc
ja
pop
test
sub
popa
add
sbb
inc
jne
rcrb
sbb
and
movsb
inc
mov
or
push
or
je
cmpsb
out
inc
insb
and
or
test
and
cmc
adcb
mov
push
nop
xor
stos
mov
xlat
push
xor
negl
jo
aad
gs
sbb
xchg
in
ds
outsl
jae
mov
pusha
mov
rorl
aaa
fsubs
xor
jno
popf
jns
sub
loop
push
jbe
lock
or
push
test
jno
push
lock
pusha
sub
std
fcoms
imul
xlat
pop
scas
aam
daa
mov
mov
jmp
mulb
jmp
ja
cmpsb
mov
jb
lea
xor
jbe
popf
lods
jmp
mov
sbb
dec
jecxz
loop
icebp
pop
xorb
mov
out
pop
cmpsl
jmp
adc
and
sub
test
mov
inc
mov
hlt
int
nopl
in
and
inc
adc
pop
jns,pn
sbb
sub
xor
dec
out
cltd
shl
dec
mov
popa
mov
sbb
enter
lock
fimull
xor
xchg
jmp
hlt
sahf
lods
in
mov
dec
sbb
jae
push
adc
mov
mov
lahf
and
shrb
enter
imul
les
cmp
pusha
mov
mov
out
enter
xchg
cmp
dec
push
ss
scas
inc
pusha
cli
or
lahf
pop
dec
cmp
add
dec
cmp
lret
jge
inc
int
jge
add
movsl
cli
mov
push
mov
in
jno
xor
shl
aaa
fs
js
movsb
cmp
out
sbb
jl
push
outsb
aaa
pop
cmpsl
mov
cmp
pop
idivl
dec
dec
and
mov
outsl
incb
ret
jnp
sbb
inc
in
sub
test
xorb
lods
es
or
sub
cltd
jmp
dec
mov
mov
in
dec
pop
mov
fdivrl
xor
cmp
andb
jmp
mov
test
mov
mov
inc
cmp
mov
sub
pop
sbb
add
out
sti
pop
arpl
sub
adc
adc
xor
pop
mov
test
subb
rcrl
pop
stos
sbb
out
push
dec
mov
pop
mov
stos
arpl
sub
sub
shr
fs
mov
adc
mov
nop
cmp
pop
mov
inc
inc
dec
and
loop
shll
fdivrs
pop
sbb
mov
inc
mov
adc
clc
and
push
lods
pop
aaa
push
add
pop
xor
fldenv
int
movl
push
ret
and
xchg
pop
into
dec
les
aad
dec
mov
jbe
movsb
scas
mov
dec
shll
fcmovne
jmp
data16
lods
out
stc
mov
sub
inc
sub
je
das
arpl
imul
das
inc
repz
dec
sub
pop
mov
mov
mov
orb
ljmp
movsb
sub
cmpsb
mov
cmc
cmp
pop
out
xchg
hlt
cld
mov
scas
mov
cmp
pop
out
ret
push
push
bnd
mov
fcomps
adc
fldt
and
sbb
push
mov
cmp
push
xor
repz
adc
pushf
hlt
push
push
add
ss
jge
lods
or
adc
sbb
sbb
sti
js
xor
mov
sub
js
js
dec
xchg
mov
out
ret
js
arpl
mov
xor
sbb
ret
fcmovnbe
mov
lock
outsb
out
ret
insb
xchg
adc
int3
fidivl
mov
sbb
gs
pop
rclb
jl
adc
fmuls
or
inc
lods
rorl
jo
ficompl
scas
fnstcw
inc
or
xor
mov
ret
in
lods
pop
push
inc
sarl
xor
hlt
adc
dec
push
add
lods
movhps
mov
lret
and
leave
mov
pop
and
pop
pop
fstps
add
mov
lods
or
les
aad
mov
add
xor
ret
jmp
and
adc
fisubl
es
cmp
lods
dec
mov
lcall
icebp
add
shrl
mov
cli
cmpb
into
cmp
mov
inc
shl
jbe
arpl
jg
test
cmp
cmp
sub
mov
mov
or
in
mov
int
fbstp
inc
into
cs
loop
mov
inc
ret
mov
aaa
fs
jb
sub
mov
adc
data16
push
out
pop
ficoml
movsl
fdivs
jmp
xchg
test
mov
les
push
or
inc
mov
aaa
sbb
cmp
pop
xchg
cmp
fadds
dec
test
push
mov
cmp
inc
movsl
inc
mov
push
pop
pop
dec
cwtl
jnp
rorb
inc
fsubs
mov
xor
in
lods
test
push
inc
bound
sbb
push
stc
lods
ljmp
inc
mov
mov
orb
mov
movsl
fstpl
out
cmp
pop
fs
mov
xor
xor
mov
inc
push
inc
sbb
clc
pusha
into
loope
sbb
negb
adc
imul
ret
into
bound
aad
cmpl
mov
mov
dec
mov
outsb
aaa
jno
push
add
cmp
mov
data16
negb
mov
lea
mov
ficoml
testl
xorl
out
dec
pop
pop
aas
push
adc
js
aam
fnsave
clc
lea
xchg
subb
adc
dec
pop
dec
jle
dec
cwtl
inc
dec
sub
xchg
adc
sub
in
fimull
xor
xchg
mov
fcomp
cmp
dec
pop
test
and
push
add
das
adc
test
popf
sub
inc
sti
loop
sbb
dec
pop
jmp
pop
icebp
inc
inc
jl
inc
int3
ffree
inc
xorl
arpl
jbe
ret
fstp
xchg
jmp
jp
push
sub
lahf
inc
pop
add
in
pop
adc
mov
gs
dec
xchg
push
ds
lret
lret
pop
adc
movsl
inc
mov
sub
mov
loopne
movsl
dec
push
add
mov
push
cmp
push
xchg
mov
out
lods
popf
inc
pop
xchg
push
and
lahf
mov
push
stc
aad
adc
push
or
xor
popa
test
sbb
in
mov
arpl
mov
jecxz
pop
cli
lock
ss
dec
add
add
lods
es
jno
cli
mov
mov
pop
jp
push
pop
out
dec
rcrl
fldenv
or
sub
mov
mov
ret
ljmp
push
add
pop
out
je
popa
mov
outsl
push
cmpsl
sbb
add
inc
inc
divl
pop
das
xlat
pop
scas
cmp
push
push
pop
and
jo
loop
movsb
scas
adc
dec
pop
mov
xor
sbbb
xchg
adc
mov
inc
adc
mov
pop
cmpb
mov
sbb
rcr
xor
cmp
cmpsl
push
lea
lods
es
and
sub
adc
push
orb
pop
pushf
mov
push
sahf
shlb
das
scas
cs
les
scas
mov
push
jle
stos
in
cmc
mov
pop
xchg
sub
sub
dec
das
andps
pop
repz
mov
jp
ljmp
pop
out
dec
scas
pop
inc
push
cwtl
popa
fiaddl
inc
and
cltd
rcrl
fdivrs
pop
adc
add
testb
js
xor
lods
sub
fs
dec
pop
push
dec
inc
data16
stc
inc
inc
dec
and
xor
sub
mov
xchg
js
jg
fadd
mov
es
pop
imul
dec
pop
inc
gs
dec
push
movsl
or
sbb
mov
outsb
and
jae
jg
and
push
lods
lods
push
dec
nop
push
enter
lret
cld
dec
and
add
and
cmp
push
ds
sub
cmpsl
mov
int
mov
mull
adcl
enter
in
xor
lcall
jbe
faddl
sub
mov
fbstp
ret
fcmovu
push
push
jg
test
push
mov
pop
gs
pusha
xchg
cld
dec
push
rol
jecxz
pop
gs
dec
out
or
push
mov
test
sub
fdivs
push
xor
mov
or
pop
jecxz
enter
mov
xchg
and
jo
jo
pop
lahf
movsb
call
fs
dec
pop
pop
mov
adc
in
inc
dec
inc
and
gs
rcrl
cmp
inc
arpl
rorl
xor
cmp
sub
push
pop
xor
enter
cmp
and
mov
dec
ss
in
cmp
xor
cmp
imul
cmovns
call
xchg
xchg
aam
sub
ret
pop
jmp
sub
mov
and
rolb
scas
adc
addr16
addr16
bound
adc
mov
pop
dec
sahf
jl,pt
imul
lcall
addr16
adc
lods
out
inc
mov
xlat
sbb
cmp
pop
push
mov
xlat
inc
add
and
fnsave
dec
mov
pop
and
mov
js
ret
aas
push
xchg
mov
mov
sub
push
dec
pusha
push
inc
xchg
lods
mov
outsb
cmp
out
mov
cmp
lret
inc
dec
inc
and
mov
mov
lods
adc
mov
cmp
js
ss
movsl
sbb
or
into
jmp
sub
adc
mov
outsl
adc
imul
fcoms
xor
xor
mov
icebp
popf
mov
push
out
clc
sub
outsl
shrl
jbe
jl
jmp
push
mov
out
dec
jecxz
and
sbb
ss
mov
xchg
rolb
cmc
xor
xchg
mov
lock
and
cmp
push
mov
enter
adc
pusha
addl
push
rcll
mov
xchg
test
out
pop
pop
jmp
jbe
rorb
sbb
icebp
push
subb
jns
dec
xchg
push
inc
or
mov
dec
push
mov
mov
pop
dec
mov
xchg
and
pop
xor
adc
or
arpl
and
pop
push
je
jmp
xor
stos
rcl
push
enter
std
aam
icebp
out
lods
add
imul
mov
push
or
mov
jno
dec
ja
fadd
push
xor
mov
push
aad
sub
jb
inc
inc
and
hlt
or
pop
mov
repz
imul
sbb
push
cmp
lods
and
shll
push
mov
jbe
outsl
and
ja
jnp
mov
adc
stos
mov
shrb
pop
ljmp
inc
lods
lods
or
repnz
xor
fwait
adc
sub
inc
in
dec
pop
xor
mov
sub
jmp
daa
pop
cwtl
sahf
shrl
adc
scas
sub
dec
pop
sbb
xor
pop
jne
imul
mov
dec
jmp
dec
mov
iret
inc
pop
pop
adc
fnsave
test
pop
pop
xor
inc
roll
and
mov
push
mov
jge
jbe
mov
inc
ss
sub
adcl
jne
inc
cmp
pop
lcall
dec
cmp
aad
in
popa
ficoml
pop
popa
sub
dec
lods
jmp
sbb
outsl
sub
and
inc
jp
std
mov
xchg
aad
and
out
mov
outsl
inc
push
neg
jnp
or
fadd
jg
or
ror
into
fcomps
sbb
call
aad
int3
fbstp
inc
and
aas
into
shl
ja,pn
in
arpl
js
pop
sahf
inc
cld
mov
cmp
inc
dec
pop
lret
loope
in
cmp
mov
dec
rcl
fsubs
sub
sbb
or
adc
sub
loopne
popa
jbe
pop
aam
lock
test
xchg
lock
ret
adc
imul
lods
out
fnstsw
pop
xor
mov
shrl
sub
dec
xchg
iret
cmp
add
jno
mov
sbb
outsl
or
pusha
out
dec
pop
fs
adc
in
inc
imul
xor
clc
lock
push
inc
push
xchg
cs
aad
xchg
ja
mov
inc
movsl
sbb
or
into
jmp
push
sti
outsb
add
pop
pusha
sbb
mov
dec
pop
xor
daa
and
mov
sub
jge
mov
dec
cmp
mov
and
mov
pop
dec
ljmp
pop
out
xchg
dec
sbb
inc
movsl
sbb
jmp
sub
outsb
sub
outsl
adc
imul
cmp
inc
iret
cmp
iret
sub
orl
mov
mov
or
mulb
mov
mov
lea
xor
mov
out
and
jae
decb
and
mov
cmp
roll
mov
push
out
int3
push
fsts
in
cmp
aaa
pop
pushf
mov
push
mov
gs
and
xlat
sbb
sti
dec
mov
scas
mov
std
aad
sub
adc
dec
inc
and
add
stc
sub
cmp
mov
mov
rorl
in
cmp
test
sub
shll
outsb
lock
orb
pusha
xor
ret
ja
sbb
data16
scas
stc
inc
sbb
jae
and
lahf
ss
add
outsl
lock
js
jns
dec
cmpsb
xchg
mov
sub
sbb
sub
ret
pusha
bound
das
inc
xor
roll
sbb
stos
mov
insb
ds
in
hlt
lock
pop
xor
cmp
or
add
notl
mov
adc
and
lock
aaa
outsl
dec
xor
sti
sbb
aam
adc
xor
pop
test
jb
sub
mov
add
push
pop
xor
sbb
cmp
adc
movsl
sti
aad
fnsave
pusha
rcll
insb
fwait
xor
xchg
adc
repz
pop
mov
jmp
and
pop
out
dec
or
shll
mov
push
int3
adcb
fcomip
lock
cmp
sub
sub
cmp
add
lods
es
sbb
fistps
adcb
fcomps
in
mov
jb
in
cmp
xor
pop
pop
xor
cs
push
or
push
xor
push
repz
xor
pop
ror
negl
or
xchg
aad
and
rcrl
jno
sub
out
mov
sti
xor
mov
cmc
xor
pop
test
cmp
iret
fistps
sti
sbb
sbb
jge
push
xor
pop
xorb
scas
sub
ljmp
and
push
jb
aad
jns
stos
fisubrl
mov
cmp
movl
pop
in
aad
popa
and
inc
pop
mov
int
mov
push
push
imul
shr
shrb
jle
pushf
ja
mov
in
scas
push
inc
sbb
mov
or
data16
scas
inc
aam
pop
push
inc
xor
js
xor
fcomip
mov
fiaddl
popa
and
rorb
and
ror
repz
mov
loope
in
cmp
inc
ds
pop
xor
sub
xor
cmp
fsts
sub
repnz
or
or
jle
lret
xchg
cmp
js
pushf
cltd
push
fstps
pop
addr16
sahf
inc
jl
dec
fs
ret
aam
out
inc
mov
mov
pop
inc
lahf
adc
int
cmovne
or
dec
rcrl
adc
sbb
or
int
cmovnp
outsl
xor
cmp
pop
outsl
adc
sbb
jmp
inc
fildll
sti
mov
cmp
adc
cmp
imul
mov
or
jmp
in
pop
addr16
mov
pop
and
xchg
scas
sbb
pop
mov
mov
xor
aaa
cmpsl
jmp
cmp
push
push
sbb
jbe
test
mov
fmuls
jg
sub
sub
inc
push
and
sbb
nop
outsb
aaa
sub
out
dec
imul
mov
and
stos
outsb
adc
mov
adc
imul
stc
subl
in
dec
popa
xor
inc
lods
pop
out
dec
pop
jae
aaa
stos
pop
out
dec
imul
mov
sbb
jmp
add
les
adc
lods
in
sub
dec
sbb
cmp
xchg
xor
pop
xorl
cmp
pop
jp
dec
mov
mov
das
scas
cmovo
in
mov
dec
lods
xchg
jns
sbb
add
adc
lds
enter
sub
pusha
push
inc
inc
imul
jl
aad
mov
pop
movsl
mov
in
enter
cmp
lods
test
rcrl
xchg
and
mov
outsb
out
inc
dec
mov
in
xor
dec
pop
test
stc
lahf
xchg
jge
bound
jmp
sahf
sbbl
xor
or
fs
push
sub
lea
pushf
loope
sub
movsb
roll
inc
push
pop
dec
and
xor
xchg
ret
aam
xor
jecxz
push
sbbb
mov
jmp
mov
cld
cli
pop
and
xchg
cmp
pop
out
mov
adc
fstpl
and
add
les
cmpsl
jb
fisubrl
not
lret
inc
sarb
mov
lods
add
jo
push
test
cmp
lret
or
imul
and
sbb
in
lods
test
outsl
subl
out
jbe
pop
mov
fwait
mov
inc
xor
mov
into
lods
data16
aas
cmp
lods
mov
mov
into
xlat
xchg
aaa
xchg
cmp
ljmp
cwtl
sub
aas
mov
push
pop
and
in
cvttps2pi
data16
adc
pop
sub
imul
and
rcll
push
fidivs
das
mov
inc
adc
pushf
imul
mov
out
out
push
sahf
aas
cmp
insb
insl
das
cwtl
aam
jb
pop
scas
into
sti
sarl
insl
xchg
pop
push
jae
pop
xor
mov
mov
lods
and
aam
stos
xor
stos
mov
mov
dec
xchg
jnp
rorb
xor
lods
int3
inc
pop
cmp
inc
andl
xchg
data16
lods
aam
sub
pop
int3
rcr
push
sbb
adc
cmp
aam
mov
roll
movsb
mov
adc
out
fs
mov
dec
inc
aad
mov
pop
and
mov
push
lock
jnp
mov
inc
aaa
sbb
pop
lods
mov
inc
mov
inc
incl
pop
and
addr16
pop
push
pop
xor
lret
jns
sub
in
pusha
mov
loope
cld
pop
xchg
dec
imul
in
cmp
sbb
sub
ret
mov
dec
mov
lods
push
push
gs
pop
inc
dec
sbb
push
mov
subb
pop
mov
mov
dec
loopne
sbb
cmp
mov
pop
xchg
in
dec
in
push
and
das
jle
mov
in
mov
push
xchg
inc
lea
arpl
mov
jl
insl
das
ja
movsl
shlb
push
sub
mov
push
mov
mov
or
pop
ret
mov
flds
aam
and
mov
jb
inc
sub
jno
repz
mov
cs
cmp
fcomip
cmc
and
in
push
test
and
dec
sti
lods
pop
lods
scas
aad
sbb
sbb
js
mov
jp
inc
jne
or
inc
push
xchg
adc
dec
mov
int
adc
mov
popa
sbb
out
loop
sub
cmp
adc
sahf
jbe
outsl
mov
js
xor
add
pop
cvtdq2ps
mov
push
je
ror
xor
and
loop
cmp
mov
mov
push
inc
pop
xlat
or
dec
pop
xor
ljmp
sbbl
adc
pop
jle
inc
aad
mov
test
mov
iret
jnp
mov
push
add
push
adc
dec
lods
pop
xchg
dec
fwait
shlb
das
scas
sub
fnclex
mov
jle
test
out
push
inc
iret
inc
xor
cmp
iret
fstpt
test
std
add
and
das
lahf
enter
dec
pushf
call
scas
mov
sub
out
pop
in
add
jae
test
aad
loopne
push
mov
int
test
adc
js
popa
push
xchg
fsubrl
cmp
enter
pop
cmp
roll
hlt
mov
cmp
add
cmpsb
and
push
jns
jg
rcl
or
inc
sbb
mov
icebp
jbe
movsb
cmp
daa
mov
sbb
xchg
jnp
test
iret
add
lods
es
adc
sub
and
orb
pop
mov
mov
out
mov
push
clc
inc
sbb
and
pop
repz
mov
lods
cmpsb
in
lods
mov
xchg
fsubs
in
cmp
push
add
fcomip
repnz
mov
cmp
mov
es
dec
adc
sub
push
lahf
iret
xor
pop
sti
jno
mov
dec
stos
and
rol
fsubs
push
and
sub
mov
mov
ret
lret
jnp
in
je
sbb
and
cmpsb
pop
testb
rcr
popa
aam
js
lock
dec
pop
push
sbb
arpl
sub
sub
sub
and
sub
mov
sub
pop
cmp
test
ss
lods
sbb
in
sbb
out
add
cvtdq2ps
dec
pop
test
and
sub
fwait
fs
jnp
dec
fadd
mov
or
lock
cmp
xchg
test
push
adc
into
shrb
iret
subl
std
lods
adc
popf
ret
xlat
insb
jmp
sub
pop
lods
popl
xor
jmp
pop
iret
sub
lret
dec
add
mov
mov
mov
call
bound
in
cmp
inc
dec
and
mov
das
mov
clc
xor
xchg
stos
xchg
out
pop
loope
in
cmp
xchg
xor
imul
movsl
sbb
and
jmp
and
rcrl
adc
je
outsl
outsl
sub
fldcw
rolb
xchg
in
fisttpl
inc
mov
aad
mov
adc
mov
fnop
and
sbb
sbb
movsl
lods
add
push
jle
ret
roll
mov
xchg
lock
lret
push
and
jo
add
pop
xor
cmpsb
stos
les
mov
xchg
mov
popa
sub
adc
xlat
scas
or
aam
test
fwait
adc
scas
shlb
int
js
mov
out
ds
jp
js
sbb
lahf
dec
rcrb
lods
push
adc
adc
and
int
lods
fdivrp
pop
pop
mov
sub
arpl
or
into
mov
cltd
cmc
mov
mov
roll
jmp
test
adc
movsb
jo
js
jmp
test
loop
lock
arpl
fcomps
rcrb
mov
iret
cmp
out
push
iret
das
cmp
inc
inc
mov
push
in
ss
xchg
jg
aam
rcr
fcomps
push
call
lock
xchg
dec
cmp
mov
mov
les
inc
push
test
imul
and
xlat
mov
adc
pop
cmp
pop
inc
iret
push
push
in
mov
xor
add
add
pop
xchg
lods
sbb
cmp
xor
xchg
hlt
cld
mov
lods
mov
push
bound
in
cmp
in
inc
inc
inc
and
ljmp
sub
sub
bound
or
inc
jnp
mov
cli
or
sbb
dec
dec
lea
push
mov
adc
call
jnp
stos
shll
pop
push
add
dec
add
dec
les
aad
add
out
mov
insb
push
fcoms
xor
lods
adc
xor
mov
inc
ss
sub
iret
nop
push
xchg
jbe
inc
ja
test
sti
subl
imul
mov
addr16
dec
stos
jo
fimull
dec
lock
inc
rcll
ret
push
pop
scas
xor
inc
movsb
sarb
in
scas
xor
dec
pop
xor
cvtdq2ps
arpl
hlt
in
or
push
shlb
jp
je
lods
push
jo
arpl
pop
jle
jbe
mov
mov
nop
int3
rol
ds
xchg
fs
pop
or
jno
aam
sti
jp
xchg
push
mov
push
adc
xchg
dec
dec
sub
dec
mov
gs
inc
data16
push
xor
add
sub
fucomp
cmp
and
adc
mov
insb
xor
cmp
out
pushf
scas
inc
dec
sahf
cmp
ljmp
mov
push
mov
xor
xchg
jge
lret
pop
sbb
aaa
test
jl
fistl
jb
cmp
dec
sub
sti
gs
dec
data16
repnz
leave
outsl
sar
sarl
pop
and
xor
fnstenv
scas
shlb
mov
ds
jge
pop
sub
imul
incl
mov
adc
