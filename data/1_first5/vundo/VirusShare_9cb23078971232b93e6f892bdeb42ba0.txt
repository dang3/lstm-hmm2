jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
pusha
jnp
xchg
rolb
pop
loope
sahf
mov
add
add
pop
or
int
roll
and
add
add
add
stc
add
add
add
add
add
add
sub
fildl
and
add
pop
push
add
pop
add
add
add
test
or
cmp
addl
add
add
add
add
push
push
add
add
addb
add
add
pop
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addl
or
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
dec
add
add
addl
mov
add
add
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
push
add
push
add
add
push
add
add
push
add
xchg
or
add
add
add
add
add
add
call
add
add
add
add
add
add
or
movsl
add
add
add
verw
add
pop
ltr
add
mov
cmp
and
addl
pop
add
add
add
mov
add
add
add
push
add
add
add
add
cmp
repz
addl
cmp
jno
jl
stos
add
add
add
add
add
add
adc
inc
add
adc
xchg
add
fadds
nop
add
add
adc
cmp
pop
add
add
add
add
addl
jl
nop
add
add
jae
push
add
add
add
adc
add
push
add
add
add
add
push
push
add
add
add
add
add
push
push
add
add
add
add
add
mov
mov
bound
dec
add
add
add
xor
stc
add
add
sbb
and
pusha
add
add
push
add
add
add
add
sbb
inc
add
add
cmp
and
cltd
add
add
add
add
jmp
and
push
add
push
add
add
push
and
and
push
add
add
add
push
jno
addl
and
and
add
jno
insb
add
add
addl
xor
and
add
add
add
dec
add
add
add
push
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
addl
dec
add
and
pop
add
fadds
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
stc
add
add
add
add
add
xor
mov
push
in
ret
adc
pusha
cmp
and
dec
ljmp
mov
divl
sub
lea
inc
pop
fdivp
push
pop
xchg
sub
mov
mov
xchg
je
mov
lds
test
xchg
and
test
jne
sub
hlt
outsl
xor
mov
cmpsl
adc
or
cmpsb
sub
push
dec
jp
call
js
cwtl
sbb
mov
sub
pop
xchg
popf
inc
shrb
sub
cmp
or
xchg
subl
aam
add
icebp
add
inc
scas
test
fucomip
insb
inc
push
bound
jae
adc
movsb
arpl
jae
loop
sbb
aam
ja
sahf
cmovb
push
and
minps
adc
push
jnp
jp
mov
test
in
xor
out
cwtl
dec
sbb
mov
jmp
int3
pop
inc
fildl
shlb
rolb
mov
in
mov
loope
stos
lret
paddusb
cmp
lahf
pop
push
pop
loopne
mov
aaa
sbb
or
cmp
pusha
fsubp
test
xor
icebp
scas
jb
add
xor
int3
pop
in
stos
test
inc
mov
mov
mov
and
sub
or
pop
out
and
jne
xor
mov
xchg
out
sbbl
jmp
cmp
or
inc
xchg
mov
int3
push
out
nop
mov
lret
hlt
daa
hlt
add
movsb
mov
xor
add
out
mov
fnstcw
in
sti
imul
jno
xor
dec
je
jo
mov
push
or
dec
push
xchg
inc
push
fs
cmpsb
sbb
xchg
xchg
mov
mov
add
mov
add
pop
in
jg
fadd
inc
mov
mov
dec
xlat
xchg
adcb
frstor
dec
jp
lods
insb
loope
sbb
mov
lret
dec
and
xor
mov
fsubl
shlb
lahf
int3
sbb
push
arpl
jno
scas
cmp
dec
xchg
call
outsb
mov
mov
sub
dec
pop
add
aam
adc
mov
add
arpl
jmp
pop
mov
mov
pop
dec
les
xchg
jmp
pusha
flds
mov
mov
popa
decl
enter
sub
adc
xchg
sub
popa
shl
not
inc
and
inc
cmp
je
lcall
jne
out
cmp
add
bound
jge
push
or
mov
inc
loop
jae
shlb
ret
push
sbb
xchg
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
xchg
xor
fisubl
mov
xchg
add
mov
push
repz
mov
xchg
xor
aam
les
push
in
adc
add
inc
xchg
and
push
repz
jecxz
shll
xor
aam
les
push
in
adc
add
inc
jecxz
cmpl
xchg
mov
ret
fnsave
test
ja
out
xchg
mov
mov
scas
fdivp
cld
xchg
ja
fcomip
push
cmp
pop
and
pop
cmp
arpl
sub
decb
adc
push
sub
mov
xor
jne
lcall
in
outsl
mov
ret
outsb
pop
lret
xchg
dec
inc
hlt
repz
adc
ret
test
ret
pop
aam
aam
or
adc
mov
mov
data16
scas
lock
lds
cmc
lods
in
add
clc
mov
fnstcw
inc
cmpsb
xchg
shlb
imul
jbe
mov
outsl
movb
int3
xchg
popa
subl
pop
je
or
lret
and
les
push
in
adc
add
xor
and
push
repz
jecxz
shll
pop
in
lock
inc
mov
movsl
xor
add
push
std
dec
in
xor
xor
in
rcll
dec
hlt
cmp
inc
jno
push
iret
jne
popa
out
xor
lods
std
arpl
push
frstor
ja
pop
les
push
in
adc
add
xor
and
push
repz
jecxz
shll
xor
aam
les
push
in
adc
add
xor
and
push
repz
jecxz
shll
xor
psraw
test
lret
bnd
into
out
pop
in
jl
mov
dec
push
pop
add
scas
arpl
addr16
rorl
mov
scas
and
scas
popf
sbb
cmpsl
mov
add
push
mov
mov
mov
divl
xchg
pop
sbb
fstpt
shlb
mov
mulb
sbb
es
mov
lds
stos
cmp
inc
xor
cmpsb
iret
jns,pt
sbb
push
jmp
cli
in
popa
lahf
addr16
sub
ss
movsb
sub
mov
jmp
sub
stc
inc
jg
xor
and
or
xor
repnz
mov
sbb
repnz
sub
data16
push
fwait
enter
repz
int3
lcall
cmp
inc
xor
test
add
dec
daa
movsl
pop
mov
or
lea
std
xor
sbbb
xchg
out
mov
inc
rcll
sti
dec
shlb
and
rolb
cmpsb
ljmp
jecxz
rcl
mov
cmpsl
dec
cmc
shrb
test
gs
scas
int
outsl
rorl
dec
or
fmuls
pop
jecxz
mov
dec
push
dec
jp
fstps
std
dec
cli
outsb
cld
stos
out
push
cli
pop
cmpsl
insb
sbb
setne
clc
repnz
cmpsl
push
lahf
cwtl
mov
int3
push
dec
out
push
repz
jl
imul
lods
mov
les
int
add
inc
inc
gs
mov
and
inc
and
aaa
rcrb
adc
jno
cmovs
stos
inc
adc
cmp
lret
push
pushf
mov
mov
ljmp
cmp
adc
in
lock
subl
jae
add
xor
hlt
mov
ret
push
or
test
mov
jp
mov
cmpsl
mov
push
push
arpl
mov
pop
in
dec
sub
jns
jle
mov
in
aaa
dec
cltd
out
push
push
dec
cmp
jle
pop
mov
cmp
jns
fiaddl
mov
inc
pusha
fdivl
call
mov
dec
sbb
pop
dec
mov
in
mov
cs
sub
ret
js
fiaddl
xchg
lret
popf
add
int
mov
rorb
sub
in
mov
test
sbb
mov
pop
pop
fstl
inc
cmp
push
mov
inc
mov
cmp
loope
xchg
mov
and
out
mov
cmc
mov
fs
loope
mov
xchg
xor
rcrb
and
cld
dec
jns
xchg
and
or
call
rclb
cmp
xchg
lret
test
pop
push
pop
icebp
repz
int3
sbb
lods
popf
fwait
and
xchg
nop
and
dec
xchg
pop
mov
dec
aam
jp
adc
out
aas
dec
bound
rcr
inc
out
scas
int3
test
pop
xor
outsb
fwait
mov
xchg
test
aad
push
fidivrl
rcl
gs
and
adc
shrl
jo
push
or
lods
push
mov
mov
hlt
cmc
cmp
xchg
mov
stos
push
stos
push
or
mov
mov
push
lea
jno
sbb
jecxz
add
jge
ss
mov
repnz
xor
not
loop
jns
ds
mov
and
loop
adc
cwtl
int
ds
push
or
xchg
ds
cwtl
fsubp
cld
imul
jge
fisttpl
idiv
sbb
push
sahf
xchg
push
push
orl
inc
ss
in
scas
lret
mov
mov
cs
mov
clc
push
int3
cld
inc
out
pusha
in
std
shlb
xor
xor
call
push
xchg
ds
loopne
nop
xchg
int
into
leave
mov
and
dec
sbb
mov
mov
jmp
mov
jl
mov
in
jae
push
pop
shr
gs
std
pushf
mov
xor
pop
cmp
lods
and
inc
icebp
and
insb
sbb
push
insl
aad
xchg
fwait
pop
mov
sarl
cmpsl
aas
scas
xchg
gs
pop
ret
push
jle
add
sbb
outsb
mov
aaa
aaa
cli
test
push
mov
pop
or
cmovb
loopne
pop
jecxz
jno
je
fwait
js
sbb
mov
testb
sahf
cmp
fcompl
out
sbb
add
adc
and
or
in
and
mov
mov
movsl
xchg
fsubs
adc
sbb
gs
lret
sub
mov
arpl
mov
xor
pop
sub
push
add
repz
test
fsubrp
inc
ja
pushf
ja
stos
add
xchg
aaa
sarl
outsl
cmp
lcall
xchg
sbb
cmpsb
pusha
int3
shll
pushf
sub
pop
lock
xlat
pop
ror
adc
push
mov
mov
sarb
jle
or
imul
jne
daa
es
pop
pop
aam
jae
xlat
jno
mov
push
inc
pop
lcall
xor
adc
in
pop
xor
jmp
pop
daa
mov
mov
mov
add
xchg
enter
shrb
pop
and
lret
into
xor
xorb
cmpsb
scas
gs
sub
fstps
les
sub
mov
ficompl
cmp
lahf
push
jmp
dec
insb
aam
aaa
dec
ss
frstor
loope
add
daa
mov
adc
push
or
mov
shr
xchg
push
cmp
xchg
rorl
dec
leave
mov
in
inc
mov
fcmovb
jb
mov
clc
stos
add
mov
lock
add
or
fcmovb
int
adc
mov
push
or
push
pop
jl
inc
nop
mov
sbb
jl
les
push
test
int
pop
sub
push
cld
add
fildl
inc
push
ret
mov
in
out
leave
clc
inc
aam
xchg
cmpsb
mov
out
xlat
pop
movsb
sahf
mov
cwtl
mov
cli
mov
mov
sti
aas
subl
loop
or
adc
mov
ret
movsb
popf
shl
out
cmpsb
xchg
in
test
fnsave
or
push
cmc
cltd
daa
pop
mov
rclb
insb
loop
mov
fbstp
jno
cli
out
xchg
lret
daa
rorl
and
push
mov
call
ret
or
inc
in
dec
mov
out
push
addr16
daa
sbbb
adc
sub
fisttps
pop
gs
xor
fisubs
push
shll
cltd
fnstenv
mov
inc
bound
cmp
dec
scas
dec
sub
sbb
fmuls
test
push
jp
mov
je
shrl
into
pop
shl
loopne
test
shll
mov
mov
adc
sbb
adc
sbb
aam
cmpsb
push
std
cld
add
mov
repnz
and
mov
movl
ret
xor
mov
shrl
sbb
adcb
fistps
sub
adc
push
mov
sbb
lret
cmp
popf
jno
jns
test
add
or
or
js
insl
shl
pusha
iret
cmp
lods
mov
mov
xor
pop
push
inc
xchg
jg
or
insl
lcall
xchg
dec
mov
pop
mov
mov
cmpb
outsl
hlt
add
adc
fstpl
repz
aaa
adc
sub
movsl
and
lret
push
es
idivb
mov
popf
lret
or
hlt
adc
insb
addb
bnd
test
mov
unpcklps
out
jb
mov
cmp
out
xchg
testb
adc
or
add
mov
inc
jecxz
cs
push
js
push
aam
and
mov
xchg
lahf
lock
movsl
scas
pop
mov
ret
fbld
adc
xchg
cmpb
iret
sti
sub
ss
in
daa
test
pop
push
mov
std
jmp
push
mov
test
in
xchg
out
and
fistpll
mov
outsb
nop
jmp
pop
repz
sbb
mov
cmp
call
fnstcw
ret
xor
or
cld
dec
ret
enter
mov
jg
into
jne
pop
imul
add
dec
fmuls
imul
inc
popa
inc
sbb
in
and
das
jg
push
xorl
sti
fcompl
inc
movsb
sbb
lret
push
adc
lahf
jmp
cmp
shrl
jecxz
shr
xor
mov
shlb
shl
hlt
fdivl
pop
int
xor
adc
loop
insl
test
popf
stos
adc
jmp
mov
xchg
add
push
push
add
mov
jp
out
mov
mov
mov
mov
andb
ret
dec
jle
pop
mov
pop
pop
pushl
stc
out
jo
je
jp
xchg
add
push
in
cmp
iret
cmp
push
xchg
dec
outsl
test
mov
fnstcw
aas
loopne
dec
xor
popf
into
pop
ret
pushf
fldenv
ror
aad
mov
enter
mov
dec
xor
test
dec
pop
push
mov
int3
push
mov
push
and
sbb
mov
in
jae
mov
adc
sti
jb
aaa
lods
inc
arpl
ljmp
push
divl
test
insb
lods
lea
nop
popf
jge
notl
pusha
js
add
push
sbb
xchg
adc
add
pop
cmp
incl
xchg
sahf
into
test
aaa
out
xor
lret
mov
insb
mov
pushw
mov
mov
add
jle
cs
sub
clc
fwait
movsb
and
sbb
ret
ret
bound
ret
jno
fcmovnu
push
sar
fldt
repnz
insb
pop
mov
cmp
ja
jl
lahf
xchg
cmpsb
stos
add
es
xor
cmc
out
xor
repz
test
xchg
add
jbe
arpl
popf
sub
inc
pop
xor
mov
add
mov
fsubr
dec
jne
int3
sbb
lahf
xlat
dec
gs
sub
aam
test
mov
in
rorl
aas
push
push
lods
movsl
jmp
mov
xchg
or
jg
add
mov
mov
scas
sub
es
out
mov
stc
sbb
mov
outsl
movsb
xchg
aaa
dec
xchg
repnz
add
enter
pop
cwtl
mov
inc
insb
enter
inc
int
adc
add
jno
cmpsl
mov
jmp
or
lret
sub
sbb
std
jb
or
ficompl
ljmp
pop
mov
sbb
xchg
jge
sbb
or
mov
scas
icebp
movsl
test
stos
xchg
add
stos
add
cmp
or
scas
pushl
pop
in
sbb
xchg
scas
imul
out
daa
test
iret
pop
pop
jmp
aad
and
xor
pop
mov
les
pop
lods
subl
cmp
mov
mov
lods
push
adc
jbe
in
pop
and
xchg
xchg
popf
lea
ret
out
sti
xor
mov
cmp
aam
filds
mov
out
adc
push
in
jo
fisubs
jne
aam
sbb
or
stos
mov
rorl
jmp
fsub
cmpsl
push
movb
dec
push
push
xor
push
xchg
xor
dec
dec
add
std
inc
mov
rcrb
mov
and
lcall
jp
fstpt
mov
adc
outsl
or
mov
mov
fwait
lcall
into
xor
jno
dec
inc
xchg
loopne
dec
pop
add
xor
int3
clc
mov
sub
lock
orl
dec
stc
addr16
adc
add
scas
fwait
scas
in
mov
push
dec
stc
shrb
push
cmp
jmp
fimull
mov
or
or
adc
fistps
mov
ss
sbb
fdivs
adc
and
enter
lock
iret
cli
push
vmovhpd
sbb
fisttps
inc
imul
das
repz
adc
pop
lcall
jb
in
aam
inc
xor
xchg
popa
cmc
mov
or
das
cltd
xorb
ds
fistl
dec
pusha
adc
lahf
movb
lock
mov
sbb
enter
movsb
daa
fmul
dec
sub
xchg
repz
or
cltd
cmp
cmpsl
das
rcrl
mov
dec
mov
out
mov
shlb
sub
cld
xor
fs
gs
jl
fisttps
punpcklbw
fnstsw
or
pop
mov
mov
rclb
mov
jbe
mov
subb
or
xor
pop
adc
jmp
cmc
mov
dec
xchg
nop
inc
cmp
lcall
xor
outsb
push
mov
and
stos
je
cltd
and
push
orb
mulb
movb
add
shll
incl
jns
pop
ror
lods
adc
adc
sbb
cmpb
adc
mov
or
adc
andb
aad
out
pop
pop
and
push
fists
fldenv
sub
xor
jle
cltd
xchg
inc
mov
bound
addl
cwtl
and
push
cmp
jp
and
mov
test
out
and
inc
inc
shl
adc
stos
cld
and
add
movsl
xchg
je
mov
test
cmp
sarb
sti
stc
pop
sub
pusha
jge
es
dec
jo
mov
int3
jb
sub
jnp
das
subb
mov
jmp
inc
std
testb
leave
shlb
or
out
jae
fidivrl
mov
sub
pop
jle
popa
fsubrp
enter
mull
pop
mov
jno
sbb
sub
int
sbb
in
sub
adc
or
addr16
mov
cs
push
cli
cwtl
mov
sub
mov
mov
enter
mov
jle
add
xchg
dec
and
sub
xchg
out
adc
lds
mov
aad
mov
adc
push
mov
out
mov
insl
push
pop
pop
pop
lods
jno
xor
push
xor
cmp
mov
inc
arpl
inc
aas
enter
loopne
or
push
popf
or
add
les
jne
mov
jns
sub
shll
insl
xor
pop
bound
or
dec
mov
xchg
pusha
push
pop
in
mov
xor
and
inc
arpl
bound
rcll
push
data16
push
pop
fisubrl
dec
lods
das
adc
mov
lret
enter
add
add
rcrb
xchg
roll
out
mov
das
leave
bnd
sub
push
add
jo
dec
sub
push
cmp
fwait
add
orb
test
insb
xchg
mov
fadds
lds
out
sti
enter
and
sbb
push
add
cmpb
jns
scas
ror
bound
rcrb
test
mov
dec
nop
lods
xor
push
and
mov
in
xor
lock
and
xchg
and
push
add
pop
iret
xchg
sub
add
sbb
push
cld
rep
movl
outsl
sub
adc
pop
test
cmp
int3
push
roll
mov
pop
pop
jl
es
adc
xchg
cld
add
cs
jae
popa
fmull
xor
stc
cmp
xorl
dec
insl
ja
sub
and
jns
cmp
dec
mov
ljmp
xchg
faddl
fistpl
push
adc
cmpl
mov
mov
fxam
push
ficomps
insl
inc
cmpsb
or
pop
sbb
dec
fdivrl
dec
cltd
outsb
add
sub
add
jno
stc
mov
add
cli
mov
xor
stc
sar
xchg
xor
icebp
jp
lods
negl
sbb
cmp
stos
cmpsl
push
je
dec
cvttps2pi
xchg
repnz
insb
imul
enter
inc
jp
outsb
out
cmp
hlt
push
jbe
jge
xchg
gs
loopne
cltd
add
jo
subl
cmpsl
and
mov
mov
xor
add
js
cmp
jmp
or
xor
xchg
insl
dec
int3
or
mov
push
xor
sbb
xor
outsl
out
test
inc
fidivs
punpcklwd
dec
mov
aad
sahf
sbb
xlat
pushf
repnz
pop
into
sbb
mov
std
divb
cld
jne
inc
sub
es
and
xchg
push
outsb
push
into
inc
and
or
inc
or
xchg
cmp
ficoms
mov
inc
pop
jecxz
call
stos
js
outsb
mov
iret
xchg
sub
and
lea
in
and
icebp
xor
jns
or
sbb
mov
das
dec
fwait
movsl
arpl
imulb
lcall
and
or
sub
in
jg
insb
shlb
out
je
mov
add
dec
pusha
and
cs
cli
cmpsb
mov
movsb
insb
cs
jnp
lds
bound
or
cmp
mov
gs
mov
test
jp
arpl
shrl
lcall
scas
or
lcall
adc
mov
repnz
dec
sbb
and
mov
insb
xor
lcall
mov
xchg
xchg
shrl
into
ja
sbb
rep
sahf
pop
push
cmp
sbb
test
fstpt
js
adc
dec
push
lds
loope
fstpt
cs
dec
and
sbb
outsb
mov
add
push
adc
out
inc
adc
cltd
aas
fistpll
lods
pusha
repz
xchg
subl
icebp
sub
stos
aas
xor
test
test
sub
mov
dec
addr16
dec
into
loop
movsl
sti
ret
test
or
adc
js
push
adc
cmp
clc
inc
int3
dec
xchg
push
es
fdivrs
repnz
sub
movsl
jl
add
das
mov
imul
ljmp
sub
ret
push
and
mov
mov
stos
inc
adc
mov
sub
push
pop
push
lods
pop
cmp
dec
or
jbe
adc
jle
das
pop
movlps
enter
outsb
test
pop
pop
popf
sti
xchg
enter
mov
push
ds
sub
xor
pop
mov
test
and
push
xor
loopne
lret
mov
inc
and
imul
mov
jle
fsub
outsb
push
lods
mov
test
lods
out
jo
pop
cli
or
pop
insl
adc
bound
or
fnstcw
outsb
loopne
pop
leave
ss
in
or
out
not
adc
mov
outsl
jae
cmpsb
push
shlb
xchg
andb
inc
int
jno
fidivl
push
add
pop
inc
inc
mov
aam
push
xor
cmp
sahf
pop
mov
lahf
pop
out
test
pop
movsl
mov
insl
scas
test
xchg
ss
fildll
cmp
cmp
mov
aam
mov
xchg
lcall
pop
inc
and
mov
pop
insl
jne
sbb
or
add
sub
loope
or
insl
ror
and
push
lea
mov
fcomip
pop
dec
in
jnp
and
rcrb
popf
aas
sub
pop
cwtl
imul
and
xor
mov
mov
mov
sub
mov
call
lea
lret
popf
push
and
mov
sub
pop
mov
arpl
xchg
mov
xchg
mov
ficoms
cmp
lds
shll
push
daa
out
fadd
push
mov
adc
repnz
sbb
subb
vcmpngt_uqps
es
jbe
ja
sbb
les
outsb
in
stos
addr16
dec
imul
cltd
mov
lahf
in
mov
cmp
cmp
fwait
movsb
bound
das
cmpsb
jae
shrl
jb
sub
cmp
in
and
cmp
xor
jnp
pusha
dec
dec
in
loop
pop
xor
mov
adc
mov
sbb
leave
xor
xor
sbb
clc
cmpsl
aaa
andb
or
lret
addb
cmpsb
sub
iret
push
cmpb
pop
and
jnp
insl
push
leave
pop
sub
leave
cbtw
mov
stos
pop
fadds
insl
add
pop
push
add
cmp
sbb
cwtl
sub
hlt
mov
pop
and
adc
hlt
push
in
adc
add
xor
and
push
repz
jecxz
shll
xor
aam
les
push
in
adc
add
xor
and
push
repz
jecxz
shll
aaa
test
mov
movsb
add
jae
arpl
push
in
adc
add
xor
and
push
repnz
jecxz
shll
xor
aam
in
adc
add
sahf
xchg
and
and
sbb
sub
cmp
in
xor
add
adc
bound
sub
out
xchg
push
popl
shl
ret
ret
jecxz
adc
add
adc
bound
inc
inc
jae
arpl
xchg
xchg
mov
ret
jecxz
or
add
dec
adc
imul
jo
mov
mov
mov
dec
adc
add
test
mov
jns
in
orl
cmpsl
cmp
inc
mov
cmpb
mov
push
adc
imul
outsb
mov
ret
scas
fsubr
ja
ja
add
stos
add
popa
hlt
push
mov
xchg
setb
bnd
mov
or
pop
add
xor
adc
sub
mov
push
insb
pop
sbb
jns
mov
sub
loop
int3
pop
sahf
jae
mov
sbbb
addl
repnz
cmp
ficomps
xor
call
mov
xchg
mov
or
mov
repz
fs
and
cmp
push
jp
mov
fwait
hlt
stos
mov
aam
repz
jbe
push
or
pop
push
push
mov
out
int3
nop
mov
mov
outsl
imul
inc
jae
or
pop
jno
pop
pop
pextrw
loop
ljmp
lahf
xchg
xchg
pop
data16
push
xor
jb
inc
jae
arpl
mov
mov
ret
jecxz
adc
add
xor
and
jb
inc
jae
arpl
mov
mov
ret
jecxz
adc
lods
outsb
push
lret
lret
jp
sbb
cmp
pop
cmp
dec
das
adc
or
pop
shrb
jo
enter
jns
ds
jmp
push
add
test
cmpsl
add
sub
aas
xorl
add
rcll
cmp
xor
adc
daa
or
pop
pushf
adc
pop
push
ljmp
gs
jb
es
jmp
test
rorb
stos
popf
cltd
xor
xor
or
or
out
or
rol
fwait
or
mov
jle
mov
test
ret
enter
dec
rcll
xor
loope
cld
inc
pop
mov
outsl
sbb
adc
ljmp
mov
mov
mov
jns
into
shll
gs
js
push
loope
push
adc
loope
or
das
lahf
mov
call
cld
pop
dec
jp
pop
adc
dec
dec
stos
es
add
and
jbe
pop
lods
pop
enter
stos
mov
std
cmpl
into
add
mov
std
dec
mov
fucom
cltd
js
inc
sbb
orl
mov
lahf
and
insb
mov
mov
xchg
imul
inc
cwtl
stc
pusha
iret
mov
icebp
ficoms
mov
andb
cld
stos
aas
and
cmp
xchg
sub
cmp
mov
aas
mov
out
orb
shrb
mov
mov
sub
fimuls
or
mov
leave
inc
cltd
sti
mov
in
ret
addl
cmp
xchg
nop
inc
adc
sbb
mov
test
mov
jecxz
xor
stos
inc
lahf
cltd
pop
insb
int3
scas
dec
adc
and
dec
scas
jns
stos
jno
inc
out
cld
cld
adcl
cli
dec
sbb
push
cmpsb
xchg
mov
cwtl
shl
add
fsubrs
xor
jno
adc
sbb
addr16
jle
cmp
lods
outsl
xor
adc
push
mov
arpl
cmpsl
lea
adc
adc
add
push
dec
rep
push
cltd
mov
iret
jmp
scas
xchg
or
sti
aaa
outsb
ljmp
sahf
stos
ret
dec
in
adc
push
sub
cmp
cwtl
sbb
call
in
iret
ret
bound
xor
jae
sub
aas
or
xchg
cmpsb
je
push
and
faddl
adc
cmp
sbb
aad
mov
insl
rcrb
sub
mov
loope
xor
xchg
bound
stos
clc
enter
loopne
fwait
jnp
jae
adc
adc
push
xor
ficoml
sahf
rdmsr
mov
adc
rclb
ja
or
ficomps
or
roll
outsl
mov
scas
xchg
xor
lcall
fsubl
shrl
cmpsl
lods
ret
mov
adc
sub
jmp
or
sahf
cmp
adc
insl
mov
jae
jne
and
in
xlat
arpl
test
push
jmp
cmp
push
add
pop
mov
in
sub
fmul
lods
mov
movsb
jnp
jno
out
fadds
mov
mov
sarb
std
xchg
add
cmp
test
mov
sub
pop
add
mov
cmp
dec
cld
sbb
ds
pop
pop
aaa
push
adc
pop
fists
clc
ljmp
sub
jnp
sub
dec
dec
or
sub
push
jae
nop
xlat
ror
push
ret
cli
cmpl
sub
aam
jae
pop
sbb
out
into
inc
pop
and
xchg
jmp
jno
pop
in
out
mov
sub
out
push
xchg
jle
mov
or
adc
inc
adc
test
insl
lcall
imul
xchg
adc
iret
rorl
push
sti
adc
fildl
lahf
cmp
mov
jnp
pop
mov
push
data16
idivl
sbb
xchg
std
add
push
fisttps
sahf
xchg
and
outsl
fs
iret
push
or
repz
cmp
push
cmp
leave
outsl
fadds
mov
clc
icebp
js
cs
and
adc
xchg
pop
xor
push
add
movsb
jp
or
and
cmp
mov
mov
xchg
sbbl
sub
shll
xor
stos
and
push
dec
std
pop
push
daa
out
out
sbb
cwtl
mov
dec
aas
jae
scas
imulb
sbb
jns
insb
hlt
dec
rorb
ftst
mov
dec
out
aas
jo
fdivrs
ficomps
jnp
xchg
out
aas
cwtl
sub
xorb
enter
dec
or
jbe
in
xchg
mov
call
push
lock
cld
stos
lods
mov
pop
and
jae
jno
mov
movsb
jecxz
cmpsb
mov
and
enter
inc
test
dec
push
and
in
xor
pop
out
test
cli
push
mov
or
push
ret
xor
aam
ret
mov
bound
jge
push
les
adc
mov
shlb
ss
mov
cld
add
loopne
scas
adc
jle
rorl
ljmp
pop
xor
mov
mov
inc
std
in
mov
repnz
xor
sub
sub
add
into
sub
xchg
mov
sti
out
xor
mov
ja
lods
scas
scas
jo
sub
xchg
dec
pop
push
data16
xchg
or
out
call
cmp
mov
shrl
rcrb
repz
cli
cmpsb
loop
mov
push
test
pop
cmp
adc
sbb
insb
int3
mov
pop
inc
rclb
int3
pop
jp
xchg
and
es
or
fbstp
cmp
xchg
xlat
ds
xchg
or
movsb
repz
xchg
pop
mov
pop
stc
sbb
jne
pop
push
cld
pushf
cmp
jmp
add
repnz
adc
xor
mov
jmp
imul
out
jnp
aaa
cmp
nop
xchg
aas
or
ret
loopne
hlt
lcall
mov
mov
push
ljmp
cmp
imul
gs
add
mov
les
add
xor
push
lods
iret
test
push
fldenv
clc
loop
js
jle
out
mov
ds
sbbl
jo
jnp
fs
aam
pop
pusha
cmp
xchg
test
add
dec
ja
inc
add
mov
pop
aam
aam
xor
sub
aam
inc
stc
cld
pop
fldt
fisubrl
xor
xor
gs
or
push
or
lea
mov
and
cld
mov
shlb
mov
mov
fsts
sahf
movsb
and
lock
cmp
mov
in
adc
cmpsl
lahf
imul
test
imull
push
loope
fstps
mov
out
sahf
xchg
orl
or
fwait
mov
cmp
or
out
and
mov
cld
mov
xchg
inc
fwait
movntq
scas
dec
popa
add
stos
popa
repnz
cmp
adc
lods
ret
adc
sub
outsl
push
mov
imul
dec
adc
jmp
jecxz
shrb
es
insb
and
jno
out
stos
repz
movsb
add
mov
lret
dec
push
iret
sbb
pop
push
js
fwait
mov
jmp
outsl
nop
cmpsb
js
fsub
out
push
bound
outsb
lahf
fdivrs
push
dec
pop
rorl
rorl
and
lods
adc
jno
xor
lods
sahf
repnz
jae
mov
repnz
sbb
sub
sub
sti
cld
mov
cmp
and
mov
cld
dec
push
cmpsb
xor
movsl
outsb
mov
std
stc
inc
lods
mov
insb
xor
push
mov
test
stc
pop
ds
rcl
mov
jl
xorl
jnp
stos
xor
ss
cmp
ret
mov
push
xchg
mov
cmp
jg
dec
ljmp
xchg
dec
fs
inc
mov
dec
sub
mov
shrb
push
jmp
jge
loopne
pop
cmp
adc
xlat
inc
xchg
and
les
fs
lea
mov
jl
mov
push
push
mov
sti
cmpb
push
daa
inc
adc
pusha
inc
mov
ja
cmpb
fimull
mov
lret
cli
imul
push
ret
jns
dec
and
or
jecxz
sub
inc
jne
out
bound
jno
push
pop
cmp
mov
or
notb
xchg
mov
cwtl
lea
sbbb
mov
mov
or
stos
mov
loop
add
lods
cmpsb
add
sbb
sahf
cmp
and
sub
int
lret
push
scas
insb
pop
sbb
xchg
mov
cli
iret
js
inc
ja
arpl
cwtl
insb
mov
jecxz
fcomp
or
mov
cld
jne
xor
stc
lods
mov
mov
mov
sub
mov
stc
sbb
mov
dec
shll
xor
jno
adc
push
push
rorb
arpl
push
add
dec
mov
imul
mov
mov
add
leave
mov
cs
movl
or
es
mov
and
adc
cmp
and
mov
aaa
insl
sub
xchg
lods
cmp
outsb
loopne
push
push
pop
jmp
dec
sub
xchg
bound
jae
je
adc
mov
rol
lea
add
mov
arpl
sbb
push
stc
imul
push
es
mov
or
arpl
push
fcompl
cmp
push
popa
xor
mov
or
mov
out
js
dec
xchg
xchg
aas
push
jp
scas
push
mov
inc
out
testl
and
daa
sub
je
xchg
pusha
pop
movsb
jge
hlt
cmp
fwait
jno
jp,pn
shl
and
std
jp
mov
add
shrb
sahf
out
cmp
aad
lcall
lds
inc
inc
inc
outsl
std
pop
xor
cmp
mov
adc
xor
jae
push
mov
bound
js
pop
sbb
dec
mov
out
push
clc
xor
xchg
push
ficoms
sub
mov
enter
daa
dec
out
mov
roll
ja
icebp
xor
sarb
jge
in
cwtl
dec
stos
lods
push
inc
dec
int
in
adc
pop
loopne
mov
lock
pusha
cs
mov
fiaddl
mov
mov
out
mov
lahf
stos
mov
dec
cli
testb
fldl
jo
xor
pop
jg
cli
push
inc
movsb
into
dec
arpl
shll
ret
push
in
mov
in
aad
stos
and
dec
out
jmp
push
pop
cmp
in
aam
push
adc
mov
push
jae
popa
mov
mov
cmp
jp
push
sti
sbb
lds
fidivrs
fsubl
call
cmp
dec
lret
cltd
in
stc
add
jmp
out
adc
and
paddsb
cmp
es
es
insb
pop
mov
cs
pop
inc
cld
or
jp
adc
icebp
lds
daa
pop
sbb
pushf
das
ficomps
mov
dec
repnz
repz
cmpsl
xor
mov
mov
jne
clc
mov
in
dec
inc
pop
ret
cmp
out
mov
xchg
call
mulb
sub
enter
mov
and
rcrb
xor
les
scas
push
mov
push
sub
repz
inc
xor
push
popl
pusha
pusha
mov
xchg
mov
pop
scas
jns
mov
adc
pop
push
mov
pop
cmp
shlb
maxps
mulb
pop
sub
das
pop
subl
xchg
cld
or
addl
pop
cmpsl
int
mov
scas
xchg
repz
imul
push
dec
inc
pop
inc
call
in
movsb
int3
hlt
es
inc
xchg
call
into
sub
mov
xlat
aad
loop
cmpsl
push
pusha
mov
adcb
into
jl
data16
adc
mov
xchg
shll
adc
test
call
cmp
adc
gs
jo
cmp
jmp
test
adc
cltd
test
mov
mov
test
or
sahf
jbe
outsl
cld
lds
cld
wrmsr
dec
add
inc
cmp
and
sbb
fwait
xchg
ja
push
mov
push
xlat
scas
jecxz
jecxz
pop
xor
xchg
jle
mov
std
popf
das
sbb
xor
mov
aas
icebp
and
cltd
test
fistps
enter
stos
lret
test
mov
add
or
jb
fistpl
loope
icebp
cmp
pop
dec
dec
int
addl
pop
sbb
adc
push
mov
jnp
fpatan
or
imul
push
test
sahf
fsub
rcll
push
test
fstpt
jo
ja
inc
frstor
jne
mov
xchg
inc
arpl
pop
jo
mov
sahf
pop
jne
cmc
subb
es
sahf
fcomps
cmp
hlt
dec
lock
daa
lret
lods
lea
fldl
das
dec
push
ret
pop
sahf
mov
lds
sti
push
mov
add
push
insb
cmp
lret
les
jp
adc
pop
or
outsl
mov
in
pop
pcmpeqd
mov
mov
cmp
push
sbb
andb
lret
sahf
outsl
aas
sub
cltd
inc
mov
stos
cmp
inc
adc
out
lock
movsl
adc
lret
out
test
push
sub
mov
xor
xchg
dec
clc
mov
popf
aaa
xchg
inc
mov
mov
leave
push
xor
jmp
fcmovnbe
aam
out
jle
push
rcr
xchg
mov
jo
andl
mov
shl
lret
pop
pop
popf
and
in
pop
push
loop
jle
or
insl
mov
xchg
imul
stc
out
fildl
stos
inc
push
dec
test
push
adc
add
inc
xor
loop
dec
mov
imul
jg
into
jnp
into
mov
inc
add
mov
in
pop
pop
xor
sbb
mov
push
pop
inc
and
out
shrb
negb
adc
gs
push
dec
adc
jb
lcall
xchg
sub
movsb
test
movsb
jne
scas
cmp
cmp
loope
pop
jg
outsb
rorb
xchg
inc
pop
addr16
sub
lods
xor
lea
inc
mov
cs
subb
aad
sub
pop
push
in
push
repnz
test
dec
mov
jno
lcall
cwtl
xor
jbe
sub
and
inc
lds
xchg
in
inc
cli
and
xchg
xor
inc
push
xchg
xor
jge
push
push
int3
addr16
cltd
cmp
mov
aad
inc
pop
adc
fsubrl
sti
push
icebp
sbb
jge
mov
popf
addr16
mov
or
sub
mov
inc
add
pop
out
daa
dec
daa
clc
or
ds
movsb
adc
jmp
out
imul
sbbb
jae
sub
xor
pop
scas
jne
mov
sbb
jo
xadd
dec
cmp
sub
data16
adc
sahf
inc
xchg
sar
lock
sbb
lahf
pop
jo
or
and
mov
mov
adc
or
mov
test
filds
dec
sbb
sbb
jg
scas
imul
mov
xor
sahf
and
lods
repnz
hlt
jp
rcrl
xor
or
cltd
ret
movsl
movsb
xchg
or
jl
ds
lods
mov
out
sub
cmpsb
mov
pop
mov
jbe
clc
pop
sbb
testb
xchg
adc
mov
inc
adc
mov
add
and
dec
xchg
lea
cmp
pop
push
xor
lahf
inc
add
mov
or
nop
push
mov
outsl
cld
mov
push
sub
in
and
into
popf
mov
fwait
and
test
mov
xlat
xchg
push
xor
push
int
test
popa
mov
adc
imul
lds
jmp
pop
ljmp
pop
xchg
or
sbb
push
imul
sub
aam
in
mov
imul
clc
xchg
and
aad
jnp
data16
int
xchg
mov
ljmp
out
sub
cld
mov
push
pop
ffreep
ja
dec
lock
lahf
mov
les
pusha
fdivrl
out
mov
pushf
mov
add
or
pop
mov
aaa
adc
cmp
lods
inc
int
mov
push
or
cli
sarb
jae
cmpsl
cli
movsl
fcoml
and
xchg
xor
or
fsubp
push
push
punpckhwd
iret
mov
out
insb
cli
jbe
jmp
cltd
test
jnp
lock
cmc
jp
jle
test
pop
xchg
inc
gs
lock
stc
add
adc
and
in
jl
iret
je
inc
inc
mov
or
mov
lods
aam
push
and
mov
mov
mov
pop
push
lods
daa
mov
pop
mov
icebp
mov
stos
mov
ds
mov
into
pop
fwait
pop
mov
call
test
cmpsl
dec
jnp
int3
dec
jge
xor
sbb
pop
mov
jl
repz
mov
dec
sahf
call
adc
xchg
pop
js
xchg
int
jns
in
mov
mov
cwtl
movsb
push
cmp
lahf
sub
mov
jns
faddl
dec
jbe
dec
mov
stos
leave
or
sbb
inc
xchg
mov
xchg
pop
cwtl
sbb
aaa
leave
add
adc
stc
cmp
and
mov
xchg
andl
dec
sbb
imulb
call
add
or
jbe
int
inc
sub
out
push
les
mov
push
jae
and
daa
inc
in
and
iretw
cwtl
out
push
fadds
mov
xlat
jle
xor
pop
jmp
aas
adc
in
adc
sub
mov
push
in
sbb
jp
ss
dec
je
fxch
divb
lret
sar
sbb
inc
adc
inc
sbb
int
cli
out
push
pop
aam
loopne
out
arpl
aas
mov
repnz
movl
push
mov
xor
xor
dec
pop
lcall
pop
pop
push
pop
lret
jp
and
pop
aaa
mov
sbb
stos
das
mov
cs
leave
pop
das
lds
xchg
pop
cmp
lea
fwait
push
push
out
add
std
push
push
enter
movsl
aad
mov
xchg
std
and
sub
out
jbe
mov
cmc
fnstcw
mov
loope
xor
popf
scas
jb
mov
add
enter
pop
gs
mov
jge
xor
dec
cmp
sub
lds
fstenv
xchg
jp
mov
mov
mov
or
fcomps
daa
or
xor
clc
std
and
mov
sbb
insb
test
lods
ds
and
inc
push
pop
cmp
dec
cmpsl
clc
mov
pop
aad
lret
sbb
lods
in
mov
mov
inc
xor
mov
cmp
sub
adc
nop
movsl
pop
shrb
dec
test
sub
inc
and
cmp
jae
and
jmp
dec
xchg
mov
jl
xchg
pop
or
ljmp
stos
and
adc
in
dec
imul
sub
pop
inc
push
add
push
mov
popa
push
call
ljmp
add
out
mov
cmp
cmp
out
sbbb
cld
nop
stc
push
rcr
aaa
inc
data16
lods
dec
pop
push
ja
adc
lock
cmp
ja
pop
push
aas
les
je
imul
std
idivl
les
fnstenv
mov
popl
lock
jg
rcrb
popa
xchg
adc
or
sub
loop
movsl
mov
or
and
repz
mov
enter
mov
insb
mulb
xchg
pop
idiv
in
jge
mov
adcb
fs
nop
push
jp
xchg
lea
sahf
dec
mov
jp
call
mov
or
dec
and
rcrb
test
mov
xor
and
sbb
add
push
and
pop
sbb
dec
mov
ja
push
jns
punpcklbw
mov
int3
cmp
mov
fimull
out
sahf
ds
inc
ret
jbe
or
gs
aad
cld
mov
xor
shld
dec
push
hlt
xchg
jg
mov
dec
xchg
insb
cs
pop
mov
pop
into
add
cltd
adc
pop
mov
dec
neg
xchg
cmpsl
fwait
mov
popa
jno
pop
sbb
fs
or
fnstcw
or
fsubs
mov
and
inc
inc
inc
and
test
sub
stos
mov
icebp
popf
or
mov
inc
popf
mov
call
fcoml
and
jb
inc
jae
arpl
mov
mov
ret
jecxz
adc
add
xor
and
jb
inc
jae
arpl
mov
mov
ret
jecxz
adc
add
adc
repnz
jb
inc
jae
arpl
mov
mov
ret
jecxz
adc
pop
xor
and
bound
jae
arpl
mov
aam
pop
jp
cmp
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
and
push
pop
loopne
lock
andb
inc
ljmp
add
xchg
lcall
shrb
dec
lock
or
mov
add
xor
jae
inc
loopne
lock
sbb
push
mov
mov
jg
push
jecxz
or
push
push
and
xor
jae
jp
mov
ficoms
pop
adc
push
fwait
xchg
sub
push
pop
xchg
std
add
outsl
ljmp
scas
and
jne
cld
jbe
pop
popa
negl
mov
loopne
pop
clc
mov
xor
shlb
fisttps
stos
aad
push
mov
cmpl
dec
into
fwait
cmpb
xchg
and
push
out
fcmovu
arpl
add
punpckhdq
sbb
repnz
lret
adc
mov
adc
cmc
mov
push
add
jo
jno
adc
mov
mov
loopne
lock
adc
ret
jo
add
pop
or
cs
pop
in
inc
nop
sbb
loopnew
and
movsb
ss
popa
into
arpl
and
jno
shrb
loopne
orb
hlt
jbe
dec
mov
cmp
and
fbld
jnp
inc
mov
mov
aas
mov
inc
subb
sbb
ljmp
add
xor
push
pop
loopne
lock
or
fisubl
jo
add
xor
test
mov
dec
mov
inc
adc
les
and
sub
jge
pop
insl
adc
adc
sub
sub
mov
add
dec
xor
cmp
adc
or
hlt
xchg
rolb
pop
adc
and
inc
int3
push
stc
jae
lcall
jb
outsl
les
lods
lock
cltd
mov
rorl
mov
sub
jnp
jb
repnz
adc
in
push
pop
xchg
push
xor
jp
inc
data16
add
adcb
shll
add
std
lock
mov
int
sub
cmp
mov
lea
test
psadbw
adc
pop
mov
or
jnp
cmpsl
push
test
addl
xchg
xorl
pop
sbb
jne
movsb
fdivs
pop
popa
cwtl
hlt
inc
cmpsb
fdivrl
ret
mov
pushf
in
loope
cmpl
mov
aad
xchg
stos
dec
jmp
xchg
sub
insl
arpl
adc
mov
push
cmp
push
xchg
mov
jnp
xlat
cmpl
call
rcl
adc
cmp
adc
pop
pop
or
stos
fsubp
jge
and
aas
sbbl
imul
mov
add
addr16
stos
sbb
jb
insb
sar
scas
push
pop
outsl
test
loopne
repz
daa
dec
jne
sub
mov
sbb
mov
cmp
loop
sbb
inc
imull
mov
pop
and
and
xchg
das
inc
in
rcr
out
fcomps
xor
ret
stos
loopne
inc
jbe
flds
repz
jp
or
out
sarb
shl
out
aas
clc
lods
aas
ss
test
dec
cmp
mov
pop
sbb
nop
es
adc
and
and
ficompl
into
gs
pushf
leave
stc
mov
xchg
dec
icebp
sbb
scas
fwait
xor
cmp
mov
mov
jno
mov
mov
dec
mov
xchg
ss
xor
or
data16
xchg
lea
jecxz
and
ficoms
push
fnstenv
push
leave
push
fdivrs
and
das
pop
jb
inc
imull
add
cwtl
mov
rolb
push
ret
sbb
add
push
imul
mov
dec
jmp
adc
jg
xorb
inc
and
mov
mull
out
mov
fdivr
jle
loopne
mov
lret
cmp
ret
jp
paddsw
je
insw
pop
jo
sub
cmpsl
mov
mov
add
sarb
pusha
shlb
lret
xchg
cmp
int3
out
cwtl
outsl
xchg
push
mov
push
cmp
fsubrs
push
loopne
jne
mov
pop
jmp
mov
xchg
add
cmpsl
je
enter
ret
fstps
or
mov
lods
movsl
les
jg
pop
bound
out
scas
lods
mov
inc
in
sub
aad
or
ja
or
or
add
es
mov
in
into
mov
aam
inc
xor
ret
cmp
xchg
fldt
adc
lds
sub
insl
mov
inc
arpl
add
sub
sarl
cmp
clc
mov
mov
arpl
lea
shll
mov
data16
push
jno
aas
stos
xchg
or
test
stos
ret
cltd
ja
loope
int3
imul
or
inc
repz
xor
dec
clc
dec
add
mov
test
xlat
test
xchg
das
push
push
xor
jnp
push
dec
cmpsl
cmp
inc
roll
mov
fxch
cmp
xchg
data16
and
push
mov
fmulp
pop
gs
cmc
outsl
fwait
sub
mov
push
aam
inc
xchg
fisubl
adc
cmp
mov
cwtl
lret
mov
scas
roll
js
nop
push
int3
sbb
cmpsb
add
movsl
fnsave
mov
lea
sub
ljmp
push
fs
cli
pop
mov
insl
imul
mov
mov
mov
popf
xchg
add
je
push
fmulp
repnz
in
dec
and
add
sub
subb
lahf
cmc
andl
inc
push
mov
fcmovb
mov
mov
loopne
cmp
mov
mov
sti
pop
mov
movsl
jle
jno
adc
dec
out
data16
or
scas
mov
lods
fwait
sbb
aad
cmpsl
xchg
jecxz
ljmp
lods
icebp
arpl
pop
adc
mov
not
bound
push
jecxz
out
and
push
pop
jecxz
push
adc
aam
push
mov
outsl
loope
or
addb
xchg
cmpsb
pop
enter
rcr
shlb
ss
aas
pop
push
enter
cmp
js
test
mov
jecxz
xchg
rcll
sub
sub
dec
cwtl
dec
fldl
mov
ss
or
xchg
adc
sub
daa
jmp
mov
faddl
pop
fs
loope
adc
cmpsl
in
pop
pop
xor
fldcw
fcmove
or
lret
jp
insb
push
fstl
call
arpl
inc
lcall
mov
clc
pusha
sbb
mov
aad
imul
inc
imul
mov
jno
outsb
xrelease
sub
mov
leave
stos
mov
and
mov
std
rorb
les
lock
mov
jae
and
push
pop
ds
loop
or
xchg
sub
dec
sbb
cmp
shrl
cmp
fidivrs
adc
mov
xlat
mov
jne
push
enter
int3
and
jle
push
fucomp
test
test
outsl
dec
mov
cld
sbb
ret
js
jl
hlt
push
lret
stos
fstpt
mov
sbb
mov
rcll
popf
aam
fcomip
pop
push
xchg
xlat
out
adc
xor
in
das
pop
and
pop
or
clc
stc
mov
test
aam
loopne
mov
pop
mov
test
bound
test
pushf
lods
inc
mov
cmc
pop
lahf
das
or
das
mov
cltd
cmp
pop
or
inc
mov
pop
lds
mov
rcrb
xlat
xor
jne
mov
and
xchg
ds
in
jl
adc
mov
inc
in
rclb
stc
jno
or
out
inc
shlb
sub
in
xchg
ds
in
pop
or
insb
jp
cwtl
outsl
mov
dec
sti
mov
push
aaa
movsb
sti
jmp
imul
inc
push
in
cmpsl
pop
dec
pop
sbb
pop
das
jle
rorl
jmp
xchg
ret
cmp
iret
xchg
stos
and
sbb
xchg
lock
leave
fildll
lret
fimull
push
addb
xchg
lahf
outsb
mov
lret
sbb
add
test
mov
mov
inc
push
ret
inc
push
add
leave
and
pop
in
sub
pop
xchg
mov
mov
cld
add
mov
les
fistpl
ret
sbb
pop
rorb
out
or
shrb
out
sbb
mov
popa
sbbl
cwtl
fldcw
hlt
xchg
cmc
iret
dec
lret
pop
push
dec
fiaddl
inc
cmp
divb
ss
ret
dec
mov
xchg
sbb
add
das
dec
outsl
push
or
lds
mov
mov
popa
inc
sti
push
lods
lods
sysenter
push
enter
leave
pop
and
and
push
dec
fs
sub
lock
fiaddl
into
lcall
mov
or
repnz
cmpl
sub
test
imul
cmpsb
mov
jl
push
fistl
repnz
test
loope
and
mov
in
popf
dec
popf
xchg
push
sbb
ror
in
mov
scas
pop
inc
xor
mov
cmp
pushf
pop
gs
adc
pusha
ret
cmp
and
push
or
loope
dec
js
test
dec
mov
pop
pop
add
int3
call
xor
push
pop
push
lock
sub
jne
inc
push
sahf
inc
dec
sbb
inc
xor
xor
lods
dec
int
adc
cmp
aas
lcall
pop
add
outsl
arpl
pop
sahf
not
xor
sahf
push
cmp
fcmovb
arpl
ljmp
test
adc
inc
sbb
sbb
cs
pop
movsb
out
mov
jns
test
mov
pop
icebp
insb
popa
sbb
in
jl
mov
xlat
inc
lret
sbb
scas
mov
outsb
dec
ljmp
sub
cs
xor
test
jecxz
mov
insb
adc
movsb
mov
adc
fs
outsl
adc
sub
es
lock
adc
cmp
sarl
popf
jns
inc
in
jge
insl
xor
add
shll
cmp
pop
pop
mov
push
pop
push
fstpt
das
aaa
mov
xchg
testl
pop
pushf
push
fistl
mov
sbb
and
sbb
decb
fistps
ljmp
outsl
fwait
ret
jp
es
outsl
and
dec
inc
aaa
stos
and
imul
sbb
add
xor
sbb
pop
add
lcall
adc
ljmp
sbb
ds
mov
sub
cmp
push
jp
aaa
out
push
or
and
jbe
sub
xor
push
mov
movsl
in
inc
fbld
sub
arpl
cmc
adc
jmp
xor
push
loopne
add
pop
sysexit
cmp
push
lods
xor
jmp
push
xchg
jbe
inc
stos
and
xchg
cmpsb
pushf
lret
and
stos
test
fidivs
arpl
dec
mov
dec
dec
jle
das
and
mov
dec
orl
sub
dec
pop
dec
dec
pop
clc
lods
call
pop
or
pusha
std
sub
ds
shrl
pop
sub
aaa
call
mov
mov
xchg
lock
mov
in
jns
or
dec
cld
test
cs
int3
sub
mov
loop
gs
lods
cmpl
or
cmpsb
subl
xchg
outsb
jg
lahf
lds
sub
pop
push
push
mov
pusha
add
jg
out
lock
xor
iret
xor
pop
mov
rol
mov
gs
lret
lret
js
adc
xchg
sub
add
movsb
sbb
push
mov
daa
clc
mov
in
sub
aam
adc
push
xchg
mov
test
lret
arpl
add
enter
cmp
mov
scas
scas
sbb
or
mov
add
adc
xor
popf
push
imul
nop
or
lock
cmc
addr16
xchg
les
lcall
popa
dec
xor
call
imul
test
sbb
std
dec
ret
movups
scas
test
repz
call
popf
cmp
lds
mov
xor
fs
jo
aaa
dec
xor
cmp
in
shrb
mov
pop
stc
stos
cwtl
in
dec
movsb
mov
movsl
int
clc
js
mov
sub
cld
xchg
mov
pop
push
sahf
test
dec
hlt
inc
sahf
lods
int3
clc
das
mov
dec
neg
fdivl
shll
adc
sub
mov
int3
mov
jecxz
adc
and
mov
sbb
popl
jecxz
cmp
rorb
mov
xor
jge
xchg
add
imul
mov
shlb
cmp
daa
sbb
fmul
add
pop
xor
rcrl
inc
or
dec
mov
rorl
movsl
in
les
cmpsw
cmp
jns
push
lods
lods
inc
mov
add
and
gs
mov
jne
cmp
mov
xor
jecxz
or
add
lcall
jbe
cmp
xor
std
cmp
aam
mov
add
jne
faddl
cs
popl
mov
sub
sbb
xor
inc
adc
fdivrs
out
lea
cmc
stos
aad
ficomps
lret
dec
jo
pop
cmp
and
leave
and
loopne
dec
dec
adc
and
mov
xor
xlat
cmp
dec
pop
jns
push
repz
mov
xchg
inc
and
cltd
dec
inc
pop
leave
push
addr16
movsb
insl
add
mov
mov
roll
sbb
push
add
sbb
adc
out
or
sbb
and
pop
mov
rclb
icebp
inc
sbb
or
inc
pusha
aas
jmp
stos
mov
iret
mov
vaesdeclast
mov
sbb
jge
mov
cli
push
add
mov
out
xor
lds
sbb
inc
jnp
and
pop
dec
jmp
test
das
push
sub
int3
negl
push
and
stos
arpl
fisttpll
mov
sbb
cmpsb
out
mov
jg
out
sub
inc
repz
jae
sub
adc
movl
pushf
ss
test
daa
and
mov
or
fistl
ficoms
adc
testb
xor
test
andl
push
adc
cmpsl
fstpl
std
jl
mov
cmp
lods
dec
mov
jecxz
pop
ret
push
mov
sub
sbb
mov
ljmp
dec
push
adc
add
fiaddl
sahf
clc
mov
fmul
lock
cs
inc
mov
xchg
xchg
adc
cmp
cs
cmpsb
popf
je
push
in
push
xor
fcom
adc
mov
or
in
push
jg
ret
loopne
scas
or
fsubl
fmull
lock
cmp
cmpsl
test
pop
scas
repz
xchg
jb
ss
cmc
xchg
mov
decl
dec
gs
cmp
movsl
dec
push
or
arpl
mov
mov
push
and
sbb
xchg
sub
xor
push
dec
cmpsl
mov
cltd
popf
cmc
push
push
mov
pop
sbb
xchg
ret
fdivrl
xor
lahf
call
adc
mov
jl,pt
ret
inc
xor
cmp
leave
and
das
add
xchg
mov
cmp
in
fnsave
push
cmp
test
shrl
jp
jge
xchg
dec
mov
mov
lods
mov
pop
iret
or
mov
jne
std
or
shll
rorb
adc
push
call
lret
jbe
mov
ds
cmp
popa
inc
mov
sahf
push
and
out
call
stc
or
pop
idiv
xchg
into
cwtl
or
scas
dec
adc
lea
push
sub
lret
sbb
popa
stos
sbb
sub
vpshld
imul
mov
jae
daa
into
pop
out
mov
cmp
int
imull
in
in
aas
out
inc
dec
dec
push
icebp
leave
iret
fs
clc
daa
loope
dec
inc
mov
mov
mov
push
or
pop
mov
aad
sub
xor
xchg
push
push
lock
cld
cltd
sub
cmpsb
cmc
out
mov
sarb
sti
fstpl
push
pop
inc
repnz
fnsave
dec
pop
int
leave
scas
iret
loope
pop
das
stos
dec
or
cmp
inc
cwtl
and
sbb
pushf
stc
mov
mov
inc
mov
aam
dec
test
dec
cmpsb
cli
ret
test
inc
pop
cmpsl
scas
cli
pop
sub
mov
sbb
sbb
push
mov
insb
loopne
xor
rcrl
ljmp
mov
sbb
mov
jge
hlt
popf
dec
enter
arpl
lea
lea
sbb
or
or
aam
out
out
rclb
mov
sbb
rclb
fdivl
lahf
inc
lahf
inc
out
xchg
sbb
dec
lods
pop
cmp
jne
and
stos
jne
push
sub
daa
inc
test
sbb
hlt
sub
mov
push
jb
sarb
sub
xor
jne
outsb
cmp
cmp
adc
pop
lds
fisttps
outsl
adc
adc
lahf
fdivrl
cmp
and
jg
ret
fadds
pop
inc
sbb
mov
pop
dec
dec
cmpsb
negb
inc
mov
loopne
mov
std
ror
inc
cwtl
jne
rcrb
jle
jg
call
inc
mov
lea
xor
jns
lcall
inc
jp
add
xchg
xchg
mov
lods
push
add
popf
outsl
sbb
dec
pop
pop
cmpsb
std
dec
pop
adc
mov
mov
loope
xchg
dec
pop
stos
in
xchg
popa
lret
js
push
hlt
mov
xchg
popf
mov
sbb
gs
lea
pop
lahf
iret
xor
popf
mov
les
int
pushf
or
xor
push
and
lret
addr16
sbb
popf
adc
sbb
dec
mov
xchg
cltd
mov
push
lahf
and
push
jl
roll
lcall
add
pop
lock
std
cmpsl
jb
jmp
stos
jo
test
lods
xchg
stc
mov
cltd
imul
push
aad
and
scas
and
movsl
loop
pop
pop
cmc
mov
push
insl
mov
call
push
subb
sub
add
add
and
mov
add
aad
lret
ja
mov
sahf
cmp
xchg
xor
add
and
je
add
mov
movlps
sahf
cltd
push
cld
ret
push
jp
in
pop
test
push
fidivrl
inc
jo
mov
sbb
sbb
push
jmp
outsb
rorb
mov
in
fs
push
mov
fstpt
push
pop
inc
fbstp
or
lods
loopne
lahf
jnp
xchg
outsb
bound
rol
adc
movsb
mov
pop
roll
mov
mov
ret
inc
stc
push
cmp
outsl
arpl
sub
push
test
testl
and
outsb
jno
lea
mov
jns
mov
mov
mov
das
sbbb
sub
ss
and
imul
cmp
mov
int
inc
mov
insl
push
sub
fdivrp
iret
pop
jb
pop
push
mov
dec
outsb
cmp
inc
sub
daa
repnz
inc
and
icebp
pop
ficoms
mov
out
inc
cmc
sahf
insb
shlb
imul
mov
adcl
out
dec
or
movsb
mov
adc
mov
cmp
into
xchg
pop
dec
add
push
inc
fbstp
pop
addb
pop
daa
mov
jb
nop
shlb
movsl
nop
test
pop
xor
xlat
mov
faddl
ja
mov
sbb
cmp
xchg
sub
mov
fwait
jge
imul
ret
in
or
stc
test
dec
ret
ret
lods
xor
mov
sti
add
ret
mov
or
shll
std
push
std
xor
std
mov
inc
pop
jns
mov
mov
mov
pop
pop
push
sub
test
xor
cmp
mov
xchg
push
xchg
cmc
popa
xchg
dec
mov
imul
test
sub
push
xchg
cmp
popf
add
pop
dec
mov
shlb
or
xchg
outsb
jl
xor
and
sub
mov
push
mov
push
enter
inc
xchg
into
int
sub
ljmp
gs
shll
addr16
cmp
jecxz
cmp
ret
std
mov
jmp
dec
pop
jmp
mov
mov
xchg
popa
aad
dec
add
adc
sbbl
dec
rcrb
add
pop
hlt
add
sub
or
daa
xor
jmp
jno
in
inc
push
inc
push
or
outsb
mov
pushf
inc
jbe
jb
inc
adc
shlb
xchg
mov
popl
jnp
mov
inc
insb
lret
sbb
add
sbb
mov
stos
fimuls
leave
fwait
mov
int
push
rorb
inc
sti
inc
push
inc
dec
pop
lock
pop
sub
lret
shrl
sbb
and
sub
xchg
addr16
cmp
movd
push
fmuls
push
pop
cmp
int
negb
inc
pusha
negb
orw
cmpl
add
sbb
mov
ret
jb
add
push
mov
fildll
out
push
xor
dec
pop
lahf
xchg
mull
out
fidivl
jecxz
js
icebp
mov
or
add
mov
loopne
lock
or
fisubl
jo
add
xor
push
pop
loopne
lock
or
fisubl
jo
add
xor
push
pop
pusha
dec
lock
or
fisubs
jo
add
xor
pop
shrb
lock
mov
jo
lret
mov
out
fbstp
pop
dec
dec
movsb
jnp
imul
jns
push
nop
and
and
adc
add
je
mov
inc
pop
mov
movsb
jnp
imul
sub
sti
adc
add
sbb
inc
pop
es
movsb
jnp
imul
cmp
jmp
inc
xchg
dec
jmp
fwait
and
or
add
das
lret
pop
rcl
ret
subb
rcrl
aaa
add
jb
sub
into
jmp
adc
shlb
cmc
or
lds
je
jl
adc
jne
cmpsl
in
push
es
or
push
stos
nop
cmpsl
jle
mov
jne
fstpt
sub
ficoms
mov
test
cmp
push
mov
lret
dec
je
and
fwait
cmp
dec
fwait
xchg
add
or
xor
xor
rcll
gs
stos
mov
mov
mov
addr16
sub
mov
dec
add
ret
sbb
jne
fwait
push
sub
xchg
mov
push
jnp
imul
push
sub
lret
loop
add
dec
fwait
pop
mov
out
movsb
adc
add
pop
mov
scas
popa
sti
pusha
xchg
insl
lcall
and
push
cmc
pop
mov
inc
mov
lcall
and
sub
xor
dec
jecxz
les
out
nop
or
cmp
sub
and
adc
add
je
fs
mov
movsb
jnp
imul
sub
and
adc
add
je
fs
mov
jae
aaa
inc
test
insl
scas
mull
add
xchg
imul
push
ja
mov
xor
repz
in
push
push
imul
sbb
push
lahf
punpcklbw
pop
sbb
xchg
jno
mov
cs
jecxz
ds
sbb
jae
lock
and
cmp
subl
std
xchg
jp
scas
cmp
daa
push
xlat
sbb
imul
mov
xchg
pop
dec
sbb
push
and
push
push
cwtl
in
cmovbe
icebp
in
mov
cmp
sub
mov
inc
xchg
loopne
push
dec
jnp
ss
seta
scas
or
xor
loop
insl
or
std
jb
push
or
aaa
imul
jo
mov
cmp
stc
xchg
jb
fcomip
mulb
push
test
clc
inc
mov
cltd
xchg
push
and
cld
push
leave
xchg
lods
outsb
fisubrs
sarl
mov
nop
roll
test
aad
fldenv
mov
cmc
iret
test
jle
movb
cmp
mov
xor
mov
mov
iret
mov
cmc
dec
ds
or
lcall
out
adc
cmpsl
pushf
sbb
jo
paddusw
lods
inc
dec
adc
push
sbb
push
pop
inc
aas
insl
mov
mov
fsub
pop
cs
add
inc
loopne
push
jg
sub
insl
cs
or
ret
xchg
hlt
aas
jle
dec
mov
push
pop
rorl
aam
mov
or
flds
jbe
lds
mov
inc
and
lea
out
stos
test
addr16
fisttps
inc
lods
pop
aas
ja
push
sti
data16
sub
flds
push
pop
xor
jo
sbb
xor
dec
aaa
jmp
popf
lret
cmp
fwait
push
adc
andb
lret
cmpsb
lods
jmp
fs
test
jmp
imul
and
mov
push
xlat
lret
add
and
outsl
sub
aam
rolb
fadds
decb
pop
mov
jge
xor
loop
adc
sbb
mov
mov
push
pusha
out
pop
insl
cmpl
pop
dec
push
dec
ffree
scas
mov
roll
lcall
aam
aas
adc
mov
outsb
pop
or
dec
ds
mov
repnz
and
adc
pop
subl
xchg
sbb
push
stos
or
and
gs
inc
inc
daa
loope
xchg
mov
ret
movsl
mov
add
cmp
sbb
cmp
test
repz
sbb
push
subl
add
out
jl
out
fsub
lea
test
iret
jns
icebp
gs
out
sub
inc
or
jl
aad
cld
push
xor
int
push
fs
ss
lds
mov
aam
cs
cmp
push
ret
adc
popa
lds
and
das
rorb
lds
shl
pop
mov
andb
mov
xchg
and
cmp
pop
mov
cwtl
call
mov
cmp
cwtl
pop
filds
repz
iret
mov
xchg
fwait
mov
pop
negl
repz
clc
pop
xor
scas
sub
push
ja
inc
pop
pop
sub
cltd
fstl
or
das
pusha
dec
cmp
add
add
enter
cwtl
loopne
xchg
loope
leave
scas
jns
jo
insb
js
pop
pop
iret
icebp
jle
decb
pusha
inc
cmpsb
jno
jl
jmp
pop
ja
inc
fs
je
sub
jmp
cmovns
jl
push
or
add
jb
clc
aas
sbb
popf
stc
mov
add
inc
adc
dec
jb
xor
cmp
xchg
arpl
dec
inc
or
or
xor
pop
loopne
mov
push
scas
pushf
xchg
ret
dec
inc
mov
testb
insb
jb
fisttpll
dec
jno
cmp
scas
jno
insb
int3
mov
push
lods
clc
insb
test
ds
out
jl
add
inc
lds
push
xchg
out
xor
mov
pop
sbb
inc
rcrb
cmp
push
pop
je
leave
pop
aaa
mov
fadd
pusha
test
sbb
mov
out
inc
pop
and
pop
out
cmpsl
jbe
xchg
fcmovnb
push
sub
pop
dec
push
cs
mov
mov
call
pop
fwait
xchg
jne
lahf
sub
xchg
shll
mov
outsb
lea
les
mov
clc
rorb
orl
dec
adc
addl
shlb
rorb
add
cmp
cmc
add
jno
push
fucomp
push
les
shlb
cltd
jns
iret
sti
dec
inc
mov
cmp
stos
inc
dec
xchg
pop
in
insb
push
jl
pop
std
sbb
orl
pushf
jmp
mov
sub
add
cltd
lods
jne
xchg
test
addl
jno
cmp
ret
add
icebp
mov
xchg
imul
pop
lret
jg
pop
test
call
mov
aam
aam
push
pop
dec
pop
cmp
movsb
pop
repnz
dec
xor
pop
xor
inc
xor
xchg
pop
int
or
nop
mov
aam
dec
add
fnstsw
mov
int3
sub
sbbb
xor
jns
mov
mov
rol
push
int3
inc
cs
inc
pop
xorl
das
and
aam
stc
sbb
xchg
pop
loopne
push
iret
jmp
xchg
xchg
jecxz
insl
flds
jge
addr16
cmp
lods
insb
push
popa
ja
test
loop
int3
leave
sbb
pushf
ljmp
jns
xchg
es
and
add
inc
stos
cltd
or
sub
sub
call
cmp
insb
fs
or
jge
jecxz
push
aad
sbb
push
icebp
cmpsb
sbb
jbe
shr
cmp
mov
ds
xchg
sub
fsub
pop
and
xchg
mov
hlt
pop
pop
dec
dec
dec
or
pop
data16
ret
pop
rcl
mov
adc
jno
jne
and
pusha
and
mov
sub
fildll
imul
pop
out
pusha
and
mov
cld
out
inc
pop
sahf
sbb
xor
aam
dec
mov
fwait
lcall
rorl
rcrl
cmpsb
xchg
adc
cmp
movsl
mov
not
fistps
mov
adc
sbb
adc
and
testl
ret
pop
mov
adc
fsubrp
sub
sub
sub
iret
mov
jnp
or
test
push
shrb
push
add
test
xlat
sub
sbbb
pop
xor
mov
inc
xlat
icebp
or
jb
dec
and
sbb
in
pop
fsub
pop
xchg
leave
sarb
xlat
lret
fsub
in
mov
out
popa
sub
jbe
or
push
pusha
pushf
aaa
pop
cs
jbe
int
xchg
fwait
jbe
imul
push
divl
test
push
test
mov
out
mov
pop
push
dec
xor
loopne
pop
in
push
mov
xchg
add
arpl
fcoml
mov
xor
shl
mov
stc
shrb
push
arpl
and
cmp
jge
xor
lods
jle
sub
cmp
stos
rcll
push
andb
push
and
aas
jnp
scas
mov
push
xchg
xchg
jbe
imul
insl
repnz
or
fldcw
pop
xchg
stos
movsl
jmp
cmp
aad
shrb
out
stos
inc
out
xor
or
jge
adc
xor
inc
xor
test
hlt
pop
pop
fsub
clc
push
cmovg
push
sub
mov
sbb
and
mov
sysenter
rclb
mov
cltd
xor
mov
sub
sbb
dec
stos
dec
cmc
push
dec
or
sub
in
sti
or
adc
ret
inc
iret
inc
nop
fidivrs
and
lahf
fbstp
push
jo
std
lret
scas
shr
fidivrs
out
rcll
or
cmc
adc
out
mov
movb
rorb
ret
push
ljmp
jecxz
dec
dec
mov
out
pushf
sbb
push
jge
iret
xchg
jp
xor
incb
icebp
cmp
and
ds
push
fcomps
imul
in
movsb
hlt
dec
mov
pop
adc
in
clc
gs
adc
repnz
out
dec
aad
in
jns
push
out
xchg
repz
xor
xchg
mov
shll
push
dec
clts
fildll
xor
mov
adc
mov
lock
dec
out
mov
test
leave
cwtl
pop
mov
ret
orl
add
ja
push
in
mov
sub
and
sub
mov
or
pop
mov
and
sub
sti
mov
sbb
cmc
pop
data16
pop
inc
fwait
jecxz
pop
and
lds
push
cwtl
and
jno
sub
inc
push
lods
mov
js
arpl
dec
subl
mov
fs
out
and
inc
or
adc
into
push
xchg
mov
cltd
push
sub
dec
pushf
jno
fucomip
jl
cltd
cmc
adc
mov
sahf
xchg
cmp
out
mov
sub
cmp
outsl
lahf
mov
dec
mov
dec
adcb
nop
std
pop
fmul
push
pop
js
adc
inc
sub
xchg
divb
add
outsb
mov
cmp
scas
add
cmp
subb
xchg
jg
das
pop
fdivr
or
fmuls
lods
mov
sahf
fbld
idivl
cld
sar
out
adc
movq
xchg
push
mov
das
lret
inc
sub
clc
push
sbbl
ds
mov
out
push
xor
ds
pushf
loop
sub
xchg
imul
movsl
in
jp
mov
push
cmp
sti
inc
loop
sti
adc
not
inc
int
iret
movsb
sub
dec
adc
cmc
ds
fadds
jo
dec
push
mov
mov
es
sarb
scas
adc
test
loope
mov
and
mov
loop
and
je
cvtps2pd
push
adc
cmc
mov
cmp
jg
xor
fstpt
add
adc
cmc
mov
je
xchg
and
cmpsl
sbbb
into
or
adc
pop
sbb
push
subb
sub
xchg
sub
in
andb
adc
ss
and
jne
add
fwait
test
or
fistl
or
mov
icebp
inc
jmp
leave
jns
push
pop
in
out
in
aam
inc
add
sbb
dec
inc
lahf
mov
in
cli
fs
mov
mov
dec
mov
cmc
or
jo
cmp
shl
cmpsl
xor
jnp
sub
or
aad
aaa
sub
adc
cvtdq2ps
and
incb
test
add
lcall
mov
negl
gs
fildll
inc
inc
loope
leave
inc
imul
scas
popa
call
cmp
mov
hlt
sub
pop
out
int
jmp
jbe
add
shrl
clc
cmp
insl
add
mov
andb
fcoms
mov
jns
gs
dec
adc
leave
ret
mov
xor
mov
and
mov
mov
xor
mov
push
or
fwait
cld
xchg
jo
push
push
fistl
push
enter
stos
stos
into
repz
ret
mulb
dec
pop
cltd
test
sbb
std
push
mov
enter
xlat
pop
les
int3
or
pop
loope
lods
int3
fdivrs
and
add
dec
shr
lods
pop
mov
sub
adc
sbb
cld
xchg
leave
lods
ss
pop
push
xor
andb
stos
dec
std
and
pop
jo
mov
clc
mov
xchg
mov
movsl
mov
add
outsb
jge
popf
jne
nop
push
mov
into
and
ja
xor
mov
int
aad
adc
pop
aas
outsl
addr16
mov
xchg
inc
pop
out
mov
xor
loope
push
and
sub
push
push
imul
scas
mov
in
repnz
shl
fistpll
jp
scas
lahf
inc
lcall
addr16
mov
pop
or
outsb
test
out
jno
or
enter
dec
jo
fstpl
sbbl
flds
sti
lret
mov
loopne
xchg
sub
mov
jns
mov
popa
popa
fistpll
cld
stos
mov
pop
popf
into
daa
rcll
mov
jnp
dec
dec
dec
mov
hlt
sbb
bound
decl
cwtl
push
xor
mov
mov
jno
inc
and
sub
loopne
fidivrs
or
cmp
lahf
out
xchg
ss
fstpl
adc
ret
idivl
cltd
stos
mov
cmp
mov
stos
mov
scas
xchg
nop
cld
orb
sub
sti
test
mov
daa
add
out
push
or
fs
dec
pop
sub
mov
testl
mov
pop
dec
jmp
jp
ja
repnz
jae
rcll
mov
push
or
outsb
pusha
xlat
scas
xor
or
cmpb
lods
into
sub
push
cmp
xor
and
insl
dec
and
mov
cmp
mov
movsb
into
fsubp
aas
pop
jne
pushf
rorb
addr16
and
test
jl
scas
in
jo
xchg
jno
js
mov
pop
or
nop
jns
xchg
fdivp
stos
loopne
jle
out
adc
in
xor
or
fisubrl
rorl
mov
pop
or
xchg
test
add
mov
lret
jg
pop
or
pop
ss
cs
cmpsb
sub
rorb
add
insb
jno
movsl
or
lcall
dec
sub
push
enter
call
cmpsb
rcrl
xchg
mov
jecxz
pusha
inc
fwait
and
loope
lcall
cmc
mov
dec
out
jbe
xchg
ss
insb
lcall
inc
xchg
inc
mov
lcall
aas
mov
lea
mov
push
sbb
lret
jno
aam
and
xchg
or
or
inc
sub
xor
stc
cmc
aaa
ret
or
lods
scas
fs
xor
jb
dec
sbb
movsb
cmp
addr16
fdivrs
fs
xor
push
sub
add
sub
mov
test
mov
int
mov
add
jae
loope
pop
divl
divl
addr16
dec
aam
cmp
je
das
adc
jecxz
fwait
adc
enter
xchg
xorb
sub
jle
negb
mov
nop
stc
xchg
jle
dec
add
fsubrs
pop
outsl
stos
sub
pop
xchg
data16
sub
pop
cmp
fstl
ficompl
lahf
inc
and
xchg
pop
or
cmp
int3
xchg
dec
jo
jge
push
cltd
mov
jecxz
mov
xchg
call
imull
fsubrs
aas
xchg
jo
jae
jno
mov
subb
sti
dec
mov
loopne
fwait
jp
adc
ret
in
fnsave
dec
lret
lahf
cmpsb
xchg
add
sub
testl
out
cltd
push
sbb
imul
arpl
mov
repz
pop
iret
movsl
lods
pop
popf
jp
iret
cs
stos
nop
outsl
cmp
js
outsb
dec
push
out
push
jno
stc
jmp
jmp
outsb
and
mov
sarl
jns
repz
lcall
out
sahf
cmp
popf
stc
shll
mull
mov
sbb
mov
mov
xor
inc
shlb
pop
lret
out
push
mov
sub
int3
enter
lea
mov
sbb
cmpsb
push
fistps
jge
aam
mov
sub
mov
mov
dec
inc
xchg
mov
mov
fnstcw
xchg
push
outsb
sub
cmp
dec
out
sahf
push
pop
mov
add
aaa
xchg
jo
mov
sbb
int3
insb
sbb
and
aaa
iret
and
adc
je
xchg
repnz
je
push
jno
and
sub
mov
cmp
sbb
fistps
inc
sub
lret
push
sub
mov
clc
outsl
add
inc
mov
cmp
jne
popl
shll
pop
test
pop
scas
lret
push
jl
fs
sahf
push
jnp
inc
cli
clc
nop
xor
mov
inc
outsb
inc
insb
push
stc
jns
std
test
push
add
jne
push
xchg
icebp
or
mov
and
or
out
xchg
mov
jno
shrb
imul
cmp
lret
repnz
sbb
mov
rcll
pop
cmpl
add
push
nop
lods
shll
js
ret
fnstcw
cmpsl
in
and
stos
jb
js
or
sbb
cmpsl
jle
jge
and
dec
sar
stos
sub
adc
test
daa
insl
jns
mov
addr16
mov
add
jecxz
loope
jle
add
hlt
inc
rorl
in
adc
cwtl
jnp
in
mov
xor
and
das
xchg
std
pop
push
pushf
mov
shlb
roll
or
cmp
ljmp
xchg
shll
rcll
fisubrs
adc
push
jecxz
sub
mov
das
mov
pop
jle
outsb
dec
bound
fldl
aad
jg
cltd
xchg
and
pop
into
mov
mov
add
sbbl
pop
pop
adc
nop
sbb
notb
add
cmpsl
fsts
enter
loopne
jge
rcrb
and
daa
fiadds
sbb
mov
cmp
ja
sub
sti
pop
xchg
push
call
push
inc
pop
sub
popf
xchg
mov
cld
mov
or
and
in
sbb
movsb
jge
add
fistps
mov
sub
add
sub
pusha
inc
mov
cli
popl
xchg
movsl
sub
cmp
push
adc
add
mov
jecxz
adc
in
sub
pop
cmpsl
mov
push
add
addl
mov
xchg
add
inc
push
inc
mov
dec
int3
daa
adc
mov
inc
pop
mov
leave
and
orl
jbe
lea
out
cmp
loope
pop
xor
cmp
jb
sarb
pop
mov
sbb
xor
fisttpl
xchg
jle
push
and
and
cli
jo
push
call
inc
aam
pop
pop
push
dec
pop
call
lcall
add
push
adc
or
out
push
add
pop
cli
sbb
mov
pop
or
sbb
imul
or
sahf
or
push
cwtl
ja
jbe
in
mov
pop
inc
fbld
cltd
mov
xchg
and
rclb
ds
jl
lock
xor
outsb
scas
mov
push
pushf
adc
pop
xor
imul
test
scas
fsubr
es
leave
loopne
bound
iret
push
das
push
jbe
lea
outsb
inc
std
ret
popf
mov
adc
mov
or
xchg
test
dec
add
jnp
push
ret
shll
sbb
or
les
repz
adc
fdivp
push
sbb
lea
xchg
loop
shl
gs
sub
aas
leave
daa
loop
mov
pop
bound
or
loope
xor
loopne
fsubp
adc
ja
lock
lret
or
adc
mov
test
sbb
xor
call
sbb
xor
mov
sbb
out
mov
mov
and
jle
out
mov
pop
mov
inc
adc
clc
arpl
mov
mov
testb
popf
dec
call
pop
dec
mov
adc
mov
fldcw
repnz
push
xchg
push
adc
push
mov
lods
dec
fs
and
and
mov
sub
sub
sub
test
pop
pushf
subb
in
repz
fisttps
or
xchg
insb
lea
aam
inc
and
mov
sbb
cmc
in
test
cwtl
call
std
jne
sbb
cli
rcl
into
add
in
cmp
add
sbb
lea
jo
movsl
clc
stos
sahf
out
inc
inc
daa
mov
xchg
divb
dec
sbb
sbb
jp
mov
adc
mov
push
cs
mov
xchg
icebp
sub
orb
pop
mov
shll
int
xor
jg
aaa
shll
or
js
scas
mov
repz
jb
das
or
fs
mov
mov
push
outsl
add
les
xor
mov
cwtl
leave
decb
push
lret
mov
xchg
js
repz
scas
add
outsb
dec
jmp
xor
sub
ja
pop
nop
push
push
jg
cmpsb
lea
cmp
addl
adc
jp
imul
sub
and
adc
add
je
fs
mov
movsb
jnp
imul
sub
and
adc
add
je
fs
mov
in
sti
in
imul
stos
fucomi
lret
and
adc
add
je
fs
mov
movsb
jnp
imul
push
sub
fcmovne
lret
mov
jmp
jmp
sti
fwait
lret
stos
fstpt
in
sbb
pop
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
pusha
and
shlb
xorb
dec
pusha
adc
inc
xor
inc
and
arpl
jae
and
shll
mov
mov
pusha
adc
and
xor
and
arpl
jae
and
shlb
mov
repz
pusha
xor
push
and
add
or
loopne
pushf
lret
nop
mov
jecxz
imul
icebp
loopne
pop
ljmp
inc
call
insl
sbb
ret
scas
push
sbb
cmc
stc
add
ss
int
fistps
jne
loope
mov
push
sbb
cmc
cmpsb
jo
xor
mov
push
xchg
out
lret
aaa
loopne
lock
mov
mov
jo
orb
cmpsl
test
rolb
lods
add
jb
negl
ret
xor
ds
dec
test
nop
mov
pop
add
inc
aaa
arpl
dec
push
xchg
arpl
lea
push
loopne
pop
mov
repz
ret
push
adc
es
inc
and
adc
scas
and
shlb
mov
repz
pusha
adc
inc
xor
inc
and
arpl
sbb
mov
xlat
movsl
in
sbb
adc
inc
and
inc
add
sbb
out
mulb
les
and
push
jo
push
jnp
push
push
inc
xor
into
in
mov
repz
pusha
adc
inc
xor
inc
and
arpl
jae
and
shlb
mov
repz
pusha
adc
inc
xor
inc
and
arpl
jae
and
pop
dec
xchg
jno
mov
mov
lret
xlat
stos
popf
lock
loope
jno
lock
int
scas
sbb
push
adc
mov
add
pop
mov
test
dec
xchg
lret
xchg
add
inc
inc
test
js
mov
aas
repz
lock
sub
mov
jne
or
imul
mov
adc
int3
add
mov
ljmp
or
mov
leave
xlat
andl
pop
jg
xor
sbbl
dec
test
in
dec
pop
jnp
inc
mov
cmp
fidivrl
sub
dec
pop
movb
jo
jb
fcoms
sub
mov
shl
fistpl
and
jo
adc
negb
fwait
jo
mov
sahf
mov
inc
bnd
ret
pop
leave
mov
addr16
lcall
fstpl
scas
lret
dec
sbb
popa
xor
sbb
push
shl
push
xchg
outsb
push
nop
lcall
adc
lcall
jo
test
pop
cmp
xor
pop
fsqrt
scas
or
and
mov
fimull
stc
dec
loopne
stc
rolb
int3
pop
insb
add
das
fwait
popa
adc
dec
roll
dec
mov
push
sbb
fmull
orl
mov
xor
or
jg
pushf
in
cs
or
sti
fs
pop
jnp
cli
pop
dec
int3
xchg
sub
sbb
pop
stos
fmul
int
mov
rorl
test
adc
mov
leave
cmp
ret
ds
xlat
push
push
cmp
jno
push
nop
sbb
or
jp
lods
push
or
jns
leave
addl
stos
mov
imul
mov
mov
dec
and
dec
push
dec
add
mov
jecxz
lea
mov
sub
popf
pop
lds
xchg
pushf
fsub
repnz
pop
cmp
push
cmp
data16
pop
fistpl
and
mov
add
cmpb
scas
dec
das
js
push
gs
pushf
jmp
dec
imul
dec
cmc
adc
mov
insb
cmp
lds
push
in
push
jb
push
add
js
repz
int3
add
pushf
ja
push
in
xlat
cli
mov
adc
inc
and
fucom
or
adc
push
and
cmpl
dec
daa
pushf
movsb
sub
jge
sub
sbb
dec
sahf
outsl
xchg
inc
popa
imul
sbb
pop
add
sbb
fcom
cld
imul
fisttps
adc
outsb
pop
pop
inc
and
fisttpl
call
movsl
cmpsb
outsb
test
cmpsl
dec
cmc
inc
test
mov
lea
rclb
in
enter
xchg
enter
rorb
std
xor
lahf
je
jno
pop
push
mov
mov
inc
lods
add
xchg
mov
xor
mov
ja
pop
lds
outsl
sbb
push
sbb
js
jl
mov
ret
mov
das
inc
gs
pop
adcl
push
in
mov
cwtl
into
inc
jp
adc
jle
cwtl
cmpsl
mov
pushf
es
gs
setbe
dec
push
cltd
mov
inc
jbe
daa
aad
addl
daa
dec
add
lar
sub
mov
mov
int3
stos
mov
ja
out
mov
xchg
jp
insb
jno
rolb
jp
dec
or
mov
insl
inc
xchg
dec
scas
fstpl
cmp
mov
aad
popf
movsl
stos
add
fsubrl
and
jl
cmpsl
lea
add
pop
pop
pushl
inc
addl
or
rsm
mov
andb
fisubl
insb
out
pop
push
cltd
mov
int3
imul
les
lahf
xor
outsb
dec
les
pusha
pushf
sbb
jl
cwtl
ficoml
iret
sbb
mov
fucomip
push
int
mov
outsl
je
and
inc
add
jecxz
jl
jnp
icebp
int
and
cmc
adc
push
xor
nop
out
push
xchg
xor
or
xor
lcall
dec
iret
xchg
in
cmc
xchg
mov
adc
or
xchg
testl
adc
imul
inc
icebp
sti
in
push
and
adc
jne
out
mov
or
cli
or
cltd
fistpl
movsl
adcb
sbb
jo
push
in
and
sbbb
jns
sti
push
xor
inc
jmp
pop
adc
dec
in
inc
xor
lea
add
pushf
mov
xchg
ficompl
stos
push
lret
jo
sub
xchg
sub
out
or
call
ret
jp
mov
cs
xor
dec
stos
dec
leave
sub
cmpsb
pop
fdivs
dec
add
loope
mov
idivl
sbb
cli
loope
sbb
cmp
or
sbb
xchg
jbe
dec
mov
mov
push
xchg
cli
std
mov
test
add
gs
icebp
repnz
pop
push
adc
dec
int
mull
jno
sub
imul
cmp
add
orl
add
push
jo
mov
outsl
jle
cwtl
mov
and
mull
repz
xor
cltd
test
inc
enter
jbe
fiadds
cmp
lea
fdivs
pop
xlat
in
jl
push
clc
cmp
repz
test
sarl
dec
cltd
sti
push
inc
mov
dec
stos
pop
jmp
mov
popa
cli
int3
pop
cmp
mov
test
pushf
cmp
out
jno
inc
push
or
xlat
stc
cli
out
std
cmp
mov
imul
fisubrl
cmp
mov
mov
test
push
sarb
jo
dec
mov
in
rclb
insb
daa
cmp
fsubp
jno
jne
fucomp
rcrb
cmp
xor
adc
sub
ror
jp
nop
mul
rcll
loop
or
insl
int
mov
push
adc
dec
push
xor
dec
pusha
mov
mov
out
in
inc
call
int
xchg
adc
xor
fisttpl
insl
ljmp
pop
mov
fldenv
inc
and
rolb
fistpl
pushf
sub
int
lcall
xor
xor
int
lahf
lea
gs
jle
mov
ss
in
mov
or
jecxz
arpl
adc
ljmp
xchg
mov
pop
xchg
ficoms
repz
mov
lods
or
cli
push
adc
cmp
jno
push
and
mov
xchg
in
jne
scas
jge
mov
dec
jo
setno
xchg
push
jno
jp
popf
test
sbb
test
data16
rep
outsb
mov
lea
fnstsw
fwait
cmpsb
fs
sub
jo
pop
roll
pusha
out
ljmp
pop
mov
iret
cmp
inc
adc
in
adc
daa
inc
cmp
lods
cmp
out
into
mov
jge
imul
sbb
hlt
aaa
sub
push
arpl
dec
push
adc
mov
leave
movsb
es
or
cltd
sbb
rcll
push
stos
dec
pop
outsl
std
jns
add
pop
mov
add
cs
sahf
lea
mov
pusha
xchg
adc
aas
dec
mov
std
cmp
test
les
jecxz
repz
dec
lock
inc
mov
fiaddl
or
test
jo
lock
or
mov
loope
xorb
sub
jge
aaa
xchg
insl
je
jnp
pop
insb
xchg
xor
mov
ds
push
test
push
out
fmul
sbbb
ljmp
sub
mov
clc
dec
pop
inc
sbb
flds
fwait
dec
adc
mov
mov
sbb
cmp
cmp
fmull
shlb
and
shlb
daa
cmp
xchg
incl
stos
and
lods
adc
in
addr16
sub
inc
add
push
sahf
sub
outsl
stos
test
cld
aas
pusha
scas
jns
daa
push
out
rclb
cmp
cmp
addr16
rcr
push
jne
push
cmpsl
ja
adc
mov
or
add
outsb
movb
daa
in
xchg
lea
add
mov
clc
xor
jae
scas
adc
addr16
stc
mov
sar
out
inc
sahf
call
push
xor
mov
iret
jge
loope
xlat
sbb
jl
loopne
push
mov
mov
adc
leave
aas
sub
dec
ss
aas
pop
xor
jl
in
shl
gs
xorb
pop
in
mov
add
pop
out
push
adc
pop
pusha
int3
push
push
or
data16
repnz
fsubr
pusha
ljmp
jbe
stos
xor
clc
dec
inc
out
out
pop
pop
mov
pop
fidivrl
loope
push
rep
mov
inc
mov
lock
test
pop
sbb
push
jns
xchg
adc
aas
xor
add
pop
les
mov
lock
xor
adc
out
das
cmp
mov
sbb
dec
sub
mov
xchg
inc
pop
fwait
shrb
rcrl
or
scas
dec
leave
push
ret
sbbb
or
jmp
adc
add
out
clc
fsubl
or
es
sbb
lret
pop
cld
xchg
das
pushl
cmp
in
xchg
insl
dec
out
cltd
cmp
mov
xchg
or
cmp
cmpsb
xor
push
jb
pop
mov
pop
xchg
into
xor
or
test
data16
rolb
dec
jne
mov
and
outsb
fidivl
in
pusha
ljmp
cwtl
movsl
dec
push
cld
loope
xor
fidivs
shrl
xchg
rolb
or
mov
jg
ds
pop
and
sbb
mov
jbe
push
jns
cmp
sbb
jns
lea
and
adc
jno
cmp
test
push
clc
push
jmp
dec
jb
sarb
mov
xchg
mov
mov
bound
inc
orb
int3
lret
sti
loope
call
xor
mov
mov
jne
add
mov
dec
in
xchg
pop
mov
mov
sub
sub
dec
call
hlt
test
fsub
movsl
xchg
nop
push
nop
or
ret
fs
ljmp
xor
shrb
rcrl
ret
std
mov
mov
repnz
cmpsl
inc
mov
mov
sub
jmp
insl
mov
addb
test
xchg
mov
cli
dec
loope
add
fldt
lock
daa
out
test
popa
jbe
mov
mov
jle
shll
clc
test
mov
or
popf
leave
cmpsl
pop
fdivs
xchg
push
xchg
sar
popf
cmpsl
jl
xor
dec
aas
scas
mov
ss
adc
mov
addr16
adc
shrb
xchg
insl
sub
mov
insl
out
imul
les
dec
inc
inc
in
jno
cmpsb
sub
mov
setl
mov
stos
imul
add
add
dec
push
outsl
cmp
mov
add
pop
fistpll
and
fistpll
mov
and
cmpsl
lods
addr16
sub
sub
cmp
jo
es
mov
clc
pop
rcl
call
cltd
out
add
ja
jmp
fsubs
dec
hlt
mov
adc
jp
data16
imulb
pop
movsl
jbe
pop
sbb
mov
push
idivb
repz
mov
and
cmp
roll
add
xor
inc
in
xchg
mov
dec
imul
adc
mov
pop
xchg
cmpsl
repnz
sti
lcall
lret
lods
push
lds
movsl
xchg
jge
adc
push
stos
sub
popf
and
mov
imul
mov
or
shll
int3
icebp
bound
inc
sbb
out
or
test
inc
iret
stc
adc
fmull
sub
cmc
jecxz
lods
sahf
xchg
insb
orb
sahf
inc
adcb
mov
fnstsw
lock
cmpsb
push
scas
xlat
mov
imul
pop
ret
pop
stc
ds
out
fcompl
and
cli
sarl
add
cmp
scas
sahf
arpl
mov
cmpsl
push
push
jl
push
sub
shlb
fsubr
adc
ja
mov
and
ret
fstpl
stc
stos
sti
divb
xchg
jp
jae
add
jb
dec
movsl
push
sbb
cmc
iret
sub
es
jnp
fiaddl
cmp
mov
out
test
push
sbb
cmp
inc
cwtl
push
mov
in
sub
inc
shlb
xchg
sti
ret
mov
mov
das
and
imull
testb
push
xchg
sbb
outsb
cmp
or
js
bound
das
in
push
mov
jnp
pop
aam
mov
scas
mov
jns
and
mov
xor
sarl
xchg
dec
fiaddl
imul
mov
mov
fistpll
jae
popa
loope
add
sbb
or
add
cmpsl
mov
jg
imul
mov
dec
cmp
cmpsl
ficoms
fdivs
je
icebp
les
test
imul
inc
in
xlat
push
in
cltd
adcl
pusha
mov
pop
pusha
fwait
sarl
sub
test
inc
pop
xchg
sbb
iret
lods
cmp
enter
dec
adc
sub
dec
sbb
jmp
repz
pushf
jle
popa
dec
orl
jno
sub
dec
fsubl
or
and
sub
inc
orb
xchg
mov
jg
mov
mov
add
pop
and
arpl
or
cli
adc
aam
in
dec
cmp
mov
fcmovu
cmp
enter
ljmp
sbb
or
call
orb
push
mov
in
xchg
int
aam
test
sub
cmc
push
add
les
push
imull
hlt
cmp
cmpsl
xchg
push
lds
jnp
fisttps
fidivl
sbb
ja
adc
mov
into
rcr
stc
mov
jns
stos
out
jle
sub
inc
cmp
ljmp
pop
or
fs
push
subl
jns
hlt
mov
inc
icebp
sub
out
lock
cmp
sbb
dec
push
repz
scas
xchg
dec
sarb
mov
xchg
mov
push
xchg
sub
fidivs
mov
sbb
stc
jecxz
out
int
fldt
cmp
pop
mov
mov
jl
in
lds
out
sbb
cmc
xchg
inc
aas
imul
xchg
lea
ja
jo
ljmp
xchg
das
dec
out
bound
xlat
jl
into
pop
inc
add
je
or
aas
xchg
mov
sbb
sub
imul
cld
mov
jmp
inc
or
std
push
loope
jge
inc
and
scas
movsb
push
and
iret
stc
mov
sbb
sub
test
fldt
sbb
xchg
jmp
cltd
cwtl
push
cmp
loopne
lret
aaa
pushw
movsw
enter
jbe
inc
ljmp
jmp
mov
adc
fsubrl
insb
pusha
ja
and
pop
aad
push
dec
out
jae
mov
popa
and
in
scas
lds
sbbl
pop
add
add
jno
sti
or
and
mov
xor
dec
daa
inc
xchg
inc
ss
fwait
rorb
mov
pop
aas
cmpsl
inc
inc
cmpsb
fcmovnu
jp
mov
push
cmp
mov
mov
dec
shrl
les
dec
cmpsl
jns
dec
popa
mov
out
loope
icebp
mov
push
imull
xlat
repnz
dec
pop
je
dec
or
sub
ja
inc
sbb
sbb
or
lea
xorb
inc
add
push
add
lock
aam
les
xchg
aas
adc
daa
aaa
fdivr
sbb
frstor
movsb
scas
rclb
jecxz
sub
mov
lock
cwtl
pop
xchg
popf
lret
addr16
xchg
cmp
ljmp
cmp
mov
sbbb
bound
mov
popa
mov
mov
movsb
fwait
ljmp
dec
jo
xlat
cmc
mov
notl
test
mov
ror
ds
ljmp
dec
das
jle
xchg
pushf
jns
or
jecxz
push
jmp
stos
add
xor
cmp
imul
not
nop
inc
sub
imul
fsubp
mov
clc
cmp
pusha
mov
subb
lds
mov
fwait
inc
inc
iret
pop
divb
jp
pop
dec
sarl
jecxz
jg
daa
adc
sub
and
outsb
jle
pop
in
xlat
push
and
jae
negb
push
mov
push
xor
cmp
jns
inc
mov
mov
and
mov
mov
ds
mov
lret
xor
xchg
jno
mov
sub
les
hlt
push
cmp
bound
fisubrs
mov
lock
mov
stos
int3
adc
mov
popa
mov
sbb
dec
pop
sbb
out
mov
push
leave
bound
sub
int
add
test
mov
push
push
les
jge
mov
and
sub
aas
xchg
jge
leave
rcl
jecxz
pop
inc
xchg
fs
xor
repnz
pusha
test
add
adc
jno
test
mov
jge
mov
pusha
push
out
bound
xchg
loop
fldt
daa
ja
andb
mov
adc
xchg
jecxz
sub
push
xchg
mov
and
push
xor
xchg
xlat
rclb
mov
cmp
add
xchg
clc
mov
cmp
mov
pop
movsl
mov
mov
cmp
scas
or
ss
jp
ret
adc
test
jno
testl
mov
jg
adc
mov
or
fstpl
xchg
mov
pop
call
dec
mov
and
or
dec
adc
pop
ljmp
outsl
push
test
push
lock
ljmp
scas
lahf
stos
inc
jp
mov
inc
ret
pop
xchg
scas
lahf
sub
mov
inc
mov
mov
sub
adc
test
ret
mov
add
fdivl
push
mov
imul
mov
fcompl
push
sbbb
out
insl
xor
cmpsb
cltd
fs
leave
mov
jbe
mov
cmp
jp
xchg
sub
outsl
nop
into
dec
push
pop
mov
mov
and
xor
in
push
ljmp
stos
or
jge
loope
inc
cwtl
jne
sbb
pop
aas
push
dec
ds
inc
xchg
sbbl
cmpsb
or
jno
test
dec
xor
push
leave
sbb
kmovb
pop
mov
or
cmc
push
push
mov
stos
ja
xor
loopne
jle
cmp
mov
decb
add
push
pop
leave
imulb
daa
mov
lea
push
and
adc
ss
les
sbb
bound
inc
test
ss
sbb
stos
sahf
popl
adc
mov
mov
mov
les
cltd
dec
inc
loop
mov
and
cmp
cmp
adc
dec
dec
pop
inc
arpl
and
push
fwait
ljmp
inc
rcl
mov
push
imul
or
mov
bound
stc
pop
jno
mov
ja
mov
popa
es
mov
addr16
inc
jecxz
sub
jno
filds
int
add
push
inc
mov
xor
cmc
push
jmp
jecxz
push
jns
push
push
xor
test
call
movsb
cwtl
cmp
cmp
sbbb
insl
mov
in
sbbb
es
leave
fwait
out
andb
scas
bound
scas
test
in
adc
sbb
cmp
sub
cltd
popf
sbb
inc
roll
fdivs
sbb
roll
jno
ds
ljmp
movsb
les
inc
fs
outsb
push
mov
mov
sbb
dec
repz
pop
outsl
push
push
fisubrl
inc
ficompl
mov
mov
stos
in
dec
mov
enter
in
cmc
push
popa
mov
rorb
mov
in
add
cmp
and
sbb
sub
mov
mov
mov
icebp
fucomp
movq
movsl
sbb
mov
push
lods
sub
stc
dec
mov
pop
idivb
in
es
mov
out
scas
cli
dec
mov
push
dec
stos
xchg
jl
shlb
jecxz
repz
pusha
adc
inc
xor
inc
and
arpl
jae
and
shlb
mov
repz
pusha
adc
inc
xor
inc
and
arpl
jae
and
shlb
mov
repz
pusha
adc
inc
xor
inc
and
arpl
jae
and
shll
mov
repz
pusha
mov
inc
lret
test
out
pushf
decl
adc
add
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
xlat
in
mov
and
stos
mov
ja
addr16
pop
sub
aam
or
sbb
jmp
out
xchg
test
cmpsl
mov
imul
pop
pop
aaa
cmp
or
sbb
dec
fidivrs
out
push
ljmp
scas
andl
sub
pop
sub
jp
pop
imul
mov
lcall
jbe
pusha
pop
shl
mov
mov
icebp
push
xor
push
ljmp
mov
jbe
data16
cltd
or
pop
data16
sbb
sub
mov
inc
cmp
addr16
mov
cmpsl
pop
lds
frstor
jmp
ret
fldcw
xchg
fsubr
inc
cltd
inc
mov
pop
call
mulb
xchg
dec
add
xor
es
dec
push
gs
dec
subl
out
inc
pop
sub
pop
aaa
xchg
aas
push
daa
push
mov
sbb
push
stc
scas
cwtl
test
lret
lahf
aaa
xor
push
jl
in
jae
gs
idivl
xchg
mov
dec
imul
unpckhps
xlat
sub
jmp
xchg
mov
or
aam
cld
cmpsl
ficoms
sub
add
add
pop
outsb
bound
jge
jo
scas
cmpsb
mov
sti
sti
xchg
mov
hlt
stos
adc
and
sbb
imul
insb
inc
push
lcall
xchg
push
imul
pop
sub
cmp
or
sbb
jmp
out
xchg
test
cmpsl
cltd
push
imul
pop
sub
cmp
or
sbb
jmp
xchg
aaa
sti
into
cmpl
lds
arpl
or
mov
adc
and
test
pop
adc
inc
in
lret
shll
add
aaa
outsl
xor
mov
xchg
sub
insl
push
sub
mov
xlat
cmp
xor
cmp
loop
cmc
mov
es
insb
pushf
sbbl
shl
daa
cmpsl
ffree
shlb
fisttps
daa
xor
push
dec
inc
imul
xor
lds
mov
push
repz
adcb
and
aad
jno
xor
scas
cld
cs
sub
call
and
jnp
inc
push
jb
jbe
xchg
cwtl
icebp
pop
stos
xor
xchg
lret
push
cli
test
dec
adc
push
sbb
pop
lcall
sbb
push
stos
aad
mov
cmpsl
jge
xchg
push
mov
decb
out
sbb
adc
aad
adc
or
sub
sub
xchg
stc
xchg
xchg
mull
scas
or
in
fidivs
dec
sbb
add
ja
mov
lods
arpl
test
jecxz
call
sbb
dec
sti
call
rclb
cmc
rcr
mov
jg
lods
js
mov
mov
stc
cmpl
mov
mov
mov
jg
data16
aad
pshufw
dec
push
iret
push
xor
stc
test
fcmovnb
sub
lods
enter
imul
dec
lret
rcrl
mov
pushl
mov
push
nop
sbb
jbe
cld
lods
hlt
ljmp
fcmove
scas
fucomi
inc
jmp
cmp
in
loop
cmpsb
imul
pop
aas
rorb
mov
addr16
pop
adc
pop
dec
mov
ucomiss
popa
cmp
sbb
cmp
pop
cmp
mov
dec
mov
dec
cmp
pop
adc
sub
stos
mov
push
in
xchg
dec
add
mov
push
shl
shll
imull
jb
jg
jmp
push
mov
add
push
inc
gs
sbb
addb
dec
cmpsb
repz
cs
test
mov
cmp
mov
int3
pop
subl
mov
sbb
mov
mov
stos
in
sbb
lahf
xchg
sbb
out
out
jne
pop
xor
popa
test
jns
dec
aaa
lret
xchg
ljmp
sahf
fwait
sbb
cmpsb
fnstenv
je
sub
inc
ret
mov
shlb
outsl
inc
dec
mov
cmc
xor
hlt
xchg
push
or
imul
xchg
cmp
inc
push
dec
push
jnp
inc
in
adc
and
js
fiadds
call
push
mov
mov
mov
jne
mov
mov
rcpps
enter
push
mov
sbb
ds
sub
lahf
movsl
pop
jb
cmp
cmpsb
sub
rclb
fwait
push
es
fwait
lahf
rcrb
rolb
dec
pushl
ljmp
dec
test
jl
cmpsb
cmpb
cltd
arpl
xchg
icebp
push
out
subb
out
subb
sub
data16
in
fcoms
cmpsl
sbb
xor
xorb
testb
mov
je
or
push
dec
mov
pop
mov
push
sbb
dec
adc
addr16
or
mov
push
push
jbe
pop
push
jae
mov
and
sbb
mov
pop
push
popa
lods
imul
push
push
lahf
xor
push
stc
sub
pushf
mov
or
mov
push
sbbb
subb
frstor
sahf
fnstenv
push
ja
pop
push
xchg
test
xchg
movsb
push
mov
test
pop
sub
xor
repz
or
xchg
adc
adc
jne
movsb
add
fidivrl
mov
or
int3
int
pop
data16
lret
adc
test
stc
inc
mov
outsb
inc
mov
push
xchg
pop
inc
xor
mov
sbbb
dec
test
sti
pusha
loopne
xchg
addb
ret
sub
mov
sbb
add
sarb
in
mov
aam
pop
or
pushf
jo
jge
repnz
xlat
cli
and
insl
popa
test
mov
out
incb
jge
or
push
cmc
dec
shrl
xlat
sub
push
push
push
push
adc
bound
push
ds
cmp
lea
je
mov
push
xchg
je
cli
or
ss
push
insl
ljmp
cmpsl
aad
test
aad
sub
daa
rclb
mov
mov
and
sub
aad
xor
add
iret
hlt
adc
rcrb
lds
pop
cmpsb
xor
dec
push
push
cmp
jno
fs
and
cmp
outsb
sbb
pop
mov
push
fcomip
rcl
jbe
mov
nop
aaa
cmp
jnp
jno
add
xchg
mov
test
or
mov
in
ficoms
push
dec
or
add
inc
mov
push
or
pop
add
gs
shl
sbb
shll
rol
inc
jmp
out
inc
xor
adc
sarb
inc
das
push
push
dec
je
fists
xchg
gs
jge
iret
push
sub
repnz
mov
mov
or
fbld
mov
or
sbb
jl
xchg
stos
outsb
xor
filds
outsb
je
cmp
fildll
jb
insb
pop
out
mov
sbb
mov
popa
jae
jl
jne
sub
cmpsl
push
sbb
in
add
test
and
pandn
adc
mov
popw
test
fndisi(8087
es
mov
stos
dec
jne
xor
enter
fnsetpm(287
pop
test
subb
insb
push
jmp
sbb
dec
iret
pop
fmuls
stos
es
jnp
sub
inc
cmpsl
sub
je
and
adc
push
int3
fnstenv
sub
arpl
push
cmpsl
mov
or
sub
push
movsl
dec
jmp
mov
gs
xchg
repnz
aad
jno
adc
push
push
mov
push
sbb
sarb
xchg
test
js
push
cmp
lcall
push
fcomip
jl,pn
testl
add
je
lahf
pop
mov
sub
fxtract
test
repnz
sub
fsts
mov
xchg
xchg
inc
mov
es
or
fistl
jo
jge
push
mov
xchg
inc
cmovle
mov
andb
xchg
sub
stos
mov
push
inc
das
in
in
daa
push
ss
gs
or
cmpxchg
mov
mov
jae
rol
and
lahf
jo
lods
sahf
adc
fnstenv
jp
push
mov
ljmp
sahf
lret
dec
dec
sub
dec
cmp
cmp
add
lods
imul
cmp
lds
fstl
push
jg
in
pop
mov
pop
adc
test
and
add
mov
mov
insl
pushf
xchg
sub
adcl
into
and
sbb
pop
imul
mov
inc
mov
and
cmp
sub
mov
pusha
adc
shll
sub
inc
subl
es
fdivl
ret
arpl
ret
mov
and
jp
loope
bound
setge
sub
pop
or
fcomip
jge
dec
fsubrp
in
jp
mov
stos
cmp
enter
out
filds
add
mulb
imul
shl
loope
xchg
xor
pop
and
in
fldenv
js
cmc
test
xchg
mov
push
shll
mov
add
mov
xor
jae
add
mov
jmp
jge
imull
movsb
jg
xlat
in
push
pusha
cmp
cmpsl
mov
out
aas
or
pop
mulb
fwait
cmpsl
jmp
clc
aas
sub
ljmp
aaa
cmp
adc
arpl
push
cld
rorb
cld
sub
push
xor
mov
fisubrs
sub
add
mov
jns
sub
fidivl
ret
pop
getsec
hlt
das
mov
sbb
clc
xchg
int3
stc
fimull
inc
gs
pop
call
mov
cmpsl
scas
mov
mov
lock
fisubs
insl
mov
push
shll
pop
xorb
mov
cmc
sbb
sub
and
push
int3
sbbb
mov
cs
push
into
xchg
sbb
cmp
push
mov
ret
add
into
dec
sbb
data16
call
inc
jo
xchg
pop
and
inc
out
mov
je
jmp
jbe
arpl
fs
pop
lock
scas
insb
out
adc
sub
cmp
xchg
jo
add
rcrb
lock
jg
ljmp
rcrb
adc
iret
clc
or
mov
loopne
and
or
inc
xchg
and
stos
out
mov
and
add
mov
stos
pop
leave
dec
push
xor
mov
in
pop
fsts
jmp
xchg
pop
mov
mov
clc
cs
jge
dec
or
cmp
bound
push
cmp
mov
out
rorb
ja
mov
mov
cli
push
lock
xchg
leave
and
in
in
mov
inc
cltd
push
loop
xor
popf
and
mov
push
bound
imul
or
stos
inc
pushf
sbbb
cmpsl
or
mov
mov
jne
adc
mov
xor
mov
push
add
mov
add
xlat
subb
and
js
lret
mov
adc
subb
dec
in
jns,pt
outsl
inc
jl
scas
lock
mulb
push
add
dec
fbld
or
add
xlat
es
jl
decb
xchg
add
xor
rcrb
add
scas
add
jns
mov
ret
into
bnd
sti
mov
adcb
das
dec
push
mov
call
mov
push
repnz
or
fs
jae
sbb
jg
and
xor
in
sub
cli
push
mov
and
dec
mov
pop
dec
out
repnz
scas
jp
mov
fidivrl
xorl
cmp
jg
fnsave
xlat
inc
sub
ret
mov
sbb
push
ss
shrl
add
xchg
out
lret
test
popf
pop
fwait
jbe
push
fsubr
popf
cmp
and
dec
ret
popa
stc
jb
dec
scas
data16
je
fdiv
push
es
jae
fists
aam
mov
mov
xor
cltd
lahf
and
ffreep
xchg
or
cld
mov
xchg
stos
sti
daa
pop
inc
shrl
adc
pop
lahf
sbb
or
into
mov
dec
mov
loopne
or
pop
mov
push
dec
mov
insb
xor
out
arpl
sbb
fcmovb
xor
fdivrp
cwtl
scas
sub
sti
icebp
inc
int
jecxz
mov
dec
jp
cmp
jae
jecxz
aam
pusha
call
sbb
adc
int
xorb
push
clc
sbb
jge
or
shlb
arpl
insb
hlt
and
add
ljmp
ret
add
decb
or
in
jmp
cli
movsb
xor
sub
xor
add
pop
sub
push
mov
push
mov
idivb
push
xchg
jecxz
sar
fstpt
fldl
or
jl
mov
fisubl
out
scas
cwtl
pop
mov
push
mov
lahf
or
into
jmp
mull
sub
lds
scas
adc
pcmpgtb
mov
ss
cmp
mov
icebp
repz
and
mov
add
ds
push
dec
sbb
pop
mov
adcb
dec
scas
lock
xor
and
xchg
orl
leave
aas
insl
ret
xor
ja
lock
lods
into
pushf
lds
mov
sbb
jne,pn
pop
push
add
icebp
popf
scas
jle
cld
mov
cld
daa
and
and
push
sub
loopne
inc
sar
mov
int3
dec
and
sub
dec
mov
xor
mov
out
fsub
cmp
sbb
sub
ljmp
out
mov
push
sbb
fildl
ja
sbb
lret
mov
cmpsb
mov
lcall
ret
mov
dec
notl
push
mov
iret
es
mov
rcrb
lds
into
int
sub
sub
sbb
inc
push
push
pop
mov
jae
cltd
mov
cld
stc
jns
out
shrl
out
dec
xor
hlt
push
push
jnp
clc
das
pop
cs
dec
and
ret
xchg
push
adc
neg
add
in
mov
shrl
arpl
push
mov
dec
mov
mov
sub
loop
outsl
mov
mov
scas
les
rcll
mov
popa
ljmp
fldenv
repz
loope
adcl
sbb
and
cmpsb
fimuls
fcomip
aas
sbb
sub
insl
into
adc
jae
mov
sbb
xchg
stc
lods
xchg
lret
les
dec
fmuls
xor
decb
out
mov
cmp
inc
jp
jns
inc
xor
ja
rcrl
ret
int3
sub
cmp
mov
in
fsubl
xor
and
cmp
in
int
popa
xor
mov
sbb
adc
enter
fwait
mov
sahf
insl
sub
in
mov
pop
pop
adc
push
data16
sarb
pusha
fisubrl
and
dec
ret
lods
retw
xchg
adcb
lret
sbb
sub
insl
leave
mov
dec
iret
sbb
mov
jne
xchg
lods
push
mov
sub
and
inc
fbld
push
jb
jns
xorl
sub
scas
xlat
sub
mov
sti
xchg
or
push
es
jmp
fisttpl
aaa
and
sub
mov
lret
add
loope
aam
int
mov
and
sub
and
or
add
repz
out
push
sbb
addr16
adc
je
inc
lea
mov
push
stos
insb
lods
bound
scas
cmp
cmp
lds
mov
mov
push
xor
sti
iret
or
push
test
in
int
sub
stos
stos
cmc
outsl
movsb
fs
pop
js
sub
dec
rorb
mov
xchg
nop
int
jnp
sub
pop
divl
lahf
stc
push
sbb
rcrb
add
cmpl
sbb
out
fcoml
pop
mov
pop
out
jns
faddl
adc
scas
inc
xchg
pop
roll
leave
cmpsb
sub
loop
std
int
add
lods
stc
lret
stos
sbb
pushf
mov
pop
mov
test
scas
gs
and
mov
scas
push
mov
clc
into
adc
dec
loop
add
xor
ret
adcb
mov
divl
shrb
popa
shl
push
push
imul
dec
and
jl
push
sub
insl
lcall
loopne
push
dec
int
pusha
rorl
add
clc
pop
inc
icebp
vpxor
enter
pushf
mov
int3
mov
inc
lea
mov
cmpsl
out
fs
sahf
dec
xor
push
insb
gs
dec
mov
sbb
loope
inc
mov
or
scas
jmp
pop
mov
add
imul
adc
xchg
inc
mov
mov
dec
jo
clc
xor
test
mov
dec
add
xor
pop
das
xchg
je
and
push
jbe
push
insl
dec
inc
repz
push
xor
mov
ficoml
popf
lock
daa
push
cli
les
jo
out
into
mov
out
mov
call
jmp
jnp
dec
mov
shl
xor
cld
dec
mov
fstpl
notl
mov
ret
sbb
popf
adc
push
sub
int
dec
sahf
dec
push
dec
sarl
xchg
add
shlb
mov
pop
jbe
xchg
jp
popa
lds
add
shrl
out
sarb
add
sub
sbb
push
movsb
jno
popa
mov
xchg
inc
test
je
inc
andl
mov
xchg
xor
test
jb
pop
les
lds
xor
sub
cmp
jecxz
dec
arpl
add
jne
dec
pop
xchg
rcll
enter
loop
divb
xor
sub
pop
roll
push
pusha
push
pop
cwtl
fnstenv
test
jnp
inc
test
in
mov
jecxz
aam
pop
mov
fcomi
movsb
or
lods
movsl
movsb
sub
jnp
ljmp
sub
cmp
xchg
cli
scas
cmc
mov
adc
aas
and
push
jae
hlt
loopne
sub
add
sahf
in
in
aad
je
or
insb
push
push
or
vrsqrtss
leave
cli
ret
mov
stos
cltd
mov
xchg
ror
stc
or
andb
mov
daa
jg
jns
stos
hlt
push
mov
scas
mov
mov
lea
notl
gs
insl
out
and
sahf
push
hlt
lods
adc
mov
filds
pop
cmp
inc
add
int3
xchg
std
pop
push
push
cli
pop
les
arpl
fwait
or
lret
xor
mov
or
mov
dec
stc
cmp
sbb
lods
stos
xchg
int
mov
or
dec
push
cs
inc
aaa
xchg
insb
idiv
sub
lret
scas
sbb
xchg
sbb
sub
push
orl
cwtl
ret
cmc
in
andb
jle
mov
dec
inc
out
outsl
add
je
push
in
sub
lret
sub
imul
jp
sbb
mov
mov
ljmp
mov
and
sbb
lret
outsb
cs
jae
push
imul
fcoml
cmp
imul
sub
mov
imul
lahf
push
mov
scas
pop
leave
jmp
or
scas
inc
stos
bnd
and
icebp
pop
out
xor
and
lods
das
push
xchg
gs
adc
pusha
dec
add
pusha
mov
mov
cwtl
mov
push
mull
mov
enter
xchg
xlat
sub
or
das
sub
sti
lea
lret
nop
jl
jp
mov
dec
imul
loope
dec
mov
pop
scas
into
scas
mov
pop
xor
or
test
push
jl
add
sub
xchg
jecxz
xchg
jg
ja
adc
mov
sbb
mov
in
pop
dec
insb
pop
jne
je
inc
subb
push
jb
sahf
push
repz
add
leave
xchg
adc
sahf
orl
fstps
int
mov
faddp
int
mov
jno
xchg
ljmp
insb
pop
xor
movsl
mov
lcall
mov
xchg
imul
or
sbb
outsl
inc
dec
and
dec
sub
stos
mov
jae
gs
mov
out
int
test
mov
xchg
adc
lods
pusha
sbb
lock
cltd
jp
idiv
cltd
test
rorb
gs
jge
adc
pop
mov
jg
iret
xor
lods
stos
push
mov
xchg
mov
sub
sbb
add
sub
mov
sub
test
xchg
inc
pop
mov
insb
xchg
aaa
push
ret
scas
adc
xor
inc
sbb
call
pop
out
shr
push
mov
jns
insl
add
jae
loopne
and
fisubrs
cmpsb
mov
std
sub
xchg
addr16
lcall
jne
aaa
inc
push
and
dec
mov
mov
jecxz
aas
lret
xorl
aaa
sbb
mull
dec
push
mov
dec
sbb
cmc
cs
mov
inc
xchg
ljmp
push
push
xchg
cmp
aaa
mov
mov
or
push
mov
and
rcll
jo
call
xchg
ret
mov
xchg
shrb
xlat
adc
pop
mov
push
lea
mov
icebp
and
pop
test
xor
jg
sub
lds
movsb
scas
mov
mov
sub
or
jecxz
and
cld
in
mov
push
xor
inc
loopne
dec
insl
sub
cmp
mov
mov
outsb
filds
fisttpll
popf
adc
fimull
pop
push
jg
pushf
mov
sub
ljmp
repnz
call
push
and
ret
push
xchg
fmul
nop
in
pop
mov
push
inc
push
pop
or
pop
bound
pusha
xchg
out
ljmp
addr16
call
add
cmpsl
cmp
lea
testb
stos
aad
sub
imulb
push
not
mov
sbb
mov
jnp
mov
add
fsts
mov
jns
dec
addr16
pop
sub
cmp
or
sbb
jmp
out
xchg
test
cmpsl
cltd
push
imul
pop
sub
cmp
or
sbb
in
div
shl
fstl
lea
jge
dec
addr16
pop
sub
and
sbb
xchg
test
daa
pop
test
mov
cs
push
popl
jno
popa
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
pop
call
aaa
fmuls
xor
adc
jp
test
jns
pop
mov
sub
mov
or
sbb
call
aaa
fadds
push
test
mov
xchg
cmpsl
dec
mov
pop
cmp
or
sbb
icebp
pop
loope
shlb
rolb
mov
xchg
pop
xlat
xor
sub
movsb
jp
ja
movsb
jbe
daa
lods
pop
mov
mov
ja
mov
xor
dec
rcrb
divl
jb
ror
inc
fcoms
fwait
ja
cmp
pop
sbb
nop
dec
xlat
data16
cmpsb
loopne
je
xchg
dec
sti
jle
adc
test
cmp
js
and
cmpsl
lea
or
pop
pop
mov
pop
in
xor
ds
ja
ja
sbb
xchg
adc
mov
push
insl
xchg
pop
mov
push
cld
lock
loope
sub
sbb
popf
cmp
out
mov
and
sbb
rolb
adc
frstor
and
cmc
push
call
call
inc
test
mov
xchg
pusha
cmpsl
push
mov
xor
and
adc
sbb
je
popa
lods
jno
and
repz
testl
repnz
andb
jno
arpl
and
xor
fisubrl
mov
mov
insb
pusha
call
push
popf
add
ja
xchg
js
dec
mov
sub
cmp
or
sbb
call
aaa
fadds
push
mov
xchg
js
dec
mov
sub
cmp
or
sbb
call
dec
ficoml
or
cmpsb
xchg
hlt
outsl
jge
xchg
popa
dec
mov
das
scas
test
sub
xchg
mov
test
mov
mov
cmpsl
lret
pushf
mov
pop
xchg
and
cmc
scas
fs
add
pavgb
rorb
imul
sub
lds
sbb
ret
sbb
push
mov
test
pop
out
nop
fnstsw
push
push
daa
add
leave
jb
jb
stos
es
mov
jge
test
outsl
icebp
sub
mov
adc
cltd
in
adc
sti
aaa
mov
js
icebp
pop
cmc
sahf
andl
stos
and
mov
mov
jecxz
pop
movsl
sub
lret
in
hlt
push
xor
rcl
add
cmpb
sub
loop
xchg
std
add
in
out
js
push
int3
dec
mull
insb
add
sub
and
mov
enter
push
test
lahf
hlt
xor
aad
stos
in
inc
lahf
cmpsl
test
es
je
dec
jne
jecxz
ret
pop
sbb
notb
jno
pop
mov
cltd
xchg
jmp
cmp
or
loope
enter
pop
sub
add
or
sti
testl
push
pop
xor
scas
popf
outsb
xchg
lds
rcr
imul
ja
or
jns
xor
mov
jmp
rclb
lods
leave
jo
imul
aaa
iretw
mov
inc
test
ja
dec
sub
adcb
mov
and
xor
sub
nop
pop
lods
je
pop
cmpl
in
and
add
ja
rol
pop
jns
dec
sbb
cli
lods
fucomp
ja
xor
cli
pop
pop
int3
push
xor
call
push
aad
popa
testl
iret
inc
imul
push
roll
cmp
test
in
xor
pusha
adc
out
pop
pop
xor
iret
adc
mov
mov
loope
cmp
jbe
dec
sub
xor
inc
cmpsl
inc
sbb
shlb
inc
mov
int3
xor
clc
pop
mov
stos
jmp
test
jae
sub
out
adc
neg
fnsave
jno
mov
add
imul
cmp
pop
or
jnp
push
pop
sub
mov
std
sbb
inc
push
add
stos
leave
psllw
popa
mov
ss
jp
adc
adc
roll
out
addr16
or
sub
stc
inc
rcrb
pushf
dec
imul
cmp
mov
jo
loope
int3
xor
inc
mov
push
gs
filds
jecxz
mov
inc
add
xor
xor
iret
dec
and
jge
ret
leave
out
sub
inc
mov
cwtl
jnp
jo
xor
mov
mov
test
mov
dec
or
test
clc
xchg
ret
cmp
dec
outsb
sbb
sbb
lret
cmp
mov
pop
outsb
pop
fimull
std
jne
pop
xlat
out
insl
cmc
cmp
sub
and
rolb
jbe
pop
xchg
popf
addr16
cld
pushf
es
dec
dec
in
jnp
repz
into
stos
lcall
cvtps2pi
xchg
imul
cmp
xor
jo
dec
push
mov
lea
aas
stc
xchg
pop
loopne
mov
or
dec
jb
cmp
loope
adc
push
ret
frstor
xchg
cmp
stos
lock
out
sub
push
pushf
lds
cmp
cmc
push
pop
ret
and
sub
or
dec
add
jno
cli
sub
mov
shll
and
sub
fs
adc
jb
xchg
mov
xor
sbb
xchg
test
xor
or
or
cmp
nop
cmp
pushf
xchg
inc
in
cmp
repz
stos
or
pop
icebp
scas
jle
daa
pushf
popa
lods
cmp
mov
aas
iret
movsb
jbe
lods
popa
std
popa
addr16
mov
stos
orl
push
push
aam
shrl
mov
lods
mov
sub
push
cs
jns
sub
sub
cmp
cmp
inc
repz
fcmovnbe
adc
xlat
mov
inc
popf
lods
pop
int
mov
pop
jb
cmp
std
popf
xlat
iret
sub
mov
sub
cmp
int
push
pop
test
sbb
pop
push
call
add
leave
sub
ds
addb
xlat
push
movsb
cmp
scas
xor
inc
push
push
cmp
inc
outsb
jecxz
adc
in
jmp
and
xor
daa
mov
xchg
stos
xchg
popa
or
xor
and
sti
cmpsl
lcall
add
scas
in
jge
enter
leave
out
mov
push
lcall
cli
xchg
push
fwait
jb
push
mov
pop
mov
addr16
push
cmp
scas
pusha
jo
fs
xchg
push
push
cld
mov
pop
jo
clc
loop
movsl
roll
mov
dec
leave
and
pop
mov
push
mov
icebp
stos
xchg
mov
xlat
and
pop
mov
add
dec
xor
cmc
pushf
mov
stos
leave
aaa
dec
inc
mov
sarl
inc
push
jne
sbb
ret
adc
xor
rcr
inc
mov
shrl
sbb
push
push
nop
jnp
sbb
ret
dec
adc
push
call
mov
lahf
lea
mov
dec
loope
rep
xor
popf
ret
cmpsl
out
cmc
xchg
icebp
cmpsl
mov
lea
daa
pop
and
xchg
imul
or
add
cwtl
push
loope
fwait
ret
stos
mov
dec
cmc
outsb
mov
xor
pop
pop
jae
lahf
ljmp
aam
enter
push
adc
outsb
lret
mov
lret
hlt
pop
inc
aaa
inc
push
cltd
jne
lds
test
sub
xchg
or
push
push
lock
jg
jmp
aam
jns
in
sub
mov
cmp
clc
cmp
push
imul
mov
call
frndint
sbb
call
push
cmc
sti
mov
sbb
add
loop
pop
jl
or
sbb
orb
jno
or
push
into
sbbl
mov
inc
mov
pop
or
push
fwait
arpl
xchg
adc
mov
loop
jp
mov
aam
pop
cmp
xchg
or
inc
push
pop
push
and
sub
dec
data16
loope
mov
inc
xchg
mov
mov
test
sub
jle
test
dec
jle
or
dec
mull
pop
movsb
jne
jmp
cld
in
cmp
xchg
imul
add
hlt
loop
test
push
lret
ret
jmp
sub
mov
dec
pop
je
mov
fidivl
sub
lods
mov
mov
popa
das
pop
stos
mov
push
sbb
lret
mov
insb
add
arpl
ret
xor
insl
mov
dec
test
inc
mov
testb
mov
inc
ret
sub
xchg
pop
das
cmpsb
push
mov
push
mov
mov
push
es
subb
icebp
in
inc
cmpsl
inc
call
mov
and
lods
mov
aas
push
dec
or
fcmovne
cmp
lods
sti
movsl
lea
xlat
xor
push
adc
cmpsl
add
lods
aaa
inc
ja
lock
test
inc
fucom
push
cmc
and
mov
mov
push
sub
hlt
out
mov
jp
jns
fiaddl
mov
xor
aas
add
test
jns
or
pop
subb
adc
pushw
xchg
sahf
arpl
es
xchg
jb
addb
js
inc
insl
mov
adc
lahf
inc
sbb
fadds
mov
sub
pop
test
mov
cmp
ret
push
sbb
adc
ret
sub
call
js
ret
out
mov
sbb
cmp
push
bound
mov
jno
xchg
xor
mov
dec
pop
push
or
dec
and
loop
lods
lock
popf
loope
jp
pushl
mov
clc
and
add
pop
cld
shl
and
or
lods
sbb
push
test
fdivrl
push
sub
sbb
cwtl
lock
inc
faddp
push
push
or
and
es
xchg
dec
dec
insl
xchg
repnz
push
mov
lret
mov
dec
loope
inc
testl
push
cmpb
lock
add
mov
inc
sti
mov
stc
or
fldcw
mov
testl
cmp
pusha
add
pop
jp
push
fs
cmp
out
push
sbb
sbb
in
push
test
inc
adcl
cmp
cli
push
add
inc
jge
add
sbb
cmp
mov
jg
es
mov
fidivl
push
fists
cli
lret
aaa
cmp
or
mov
mov
mov
xchg
sti
out
jno
xchg
sub
ds
or
mov
lret
jmp
lret
fsubrl
insl
cmp
cmp
out
scas
stos
movb
lcall
push
insb
add
aaa
inc
inc
add
bound
dec
lea
call
movsb
mov
add
into
xor
out
push
add
mov
rclb
jg
push
outsb
mov
loopne
mov
notl
std
out
mov
and
jmp
hlt
sti
out
test
add
stc
lds
loop
jbe
add
lds
jno
xchg
in
xor
xchg
mov
cmc
add
lcall
inc
out
jnp
inc
add
and
cmp
cltd
sub
xlat
or
mov
mov
pusha
push
sub
fistps
out
mov
gs
pop
xchg
mov
les
pop
sbb
scas
ja
cmp
mov
jo
mov
out
push
xchg
mov
fimull
pop
rcrb
lret
cltd
fsts
scas
pushf
cltd
popa
aam
dec
dec
adc
cwtl
add
jae
xchg
ss
push
test
sub
daa
insb
mov
xor
aad
jl
cmp
xchg
xchg
stos
test
shll
stc
pop
sbb
ror
outsb
sub
je
jecxz
jb
fdivl
jb
dec
jno
out
sbb
ljmp
push
xchg
pop
jmp
addr16
or
mov
push
sub
sbb
adc
lea
mov
leave
push
xor
bound
mov
jbe
out
call
dec
ljmp
and
pusha
cmp
shl
bound
and
or
fs
lcall
jns
sbb
jg
fcmovbe
xchg
push
int
gs
popa
cmp
scas
xor
fmull
in
in
push
rcr
jmp
push
andb
pusha
inc
pushf
mov
inc
lds
icebp
or
mov
lods
fwait
sub
mov
xchg
add
pop
adc
bound
jge
sahf
fs
imul
mov
movsb
or
pushf
mov
push
pop
xor
out
pushf
ret
movsb
stos
push
fiadds
mov
push
mov
shl
divl
adc
out
orb
dec
xchg
ds
push
xchg
ret
xor
in
add
or
and
push
test
push
xchg
ja
push
repnz
xchg
mov
push
cltd
sbb
mov
stos
lods
push
jmp
test
jnp
jl
fcmovne
rorb
pop
ja
call
lcall
xor
sbb
add
jle
and
mov
lock
jl
lcall
mov
jmp
pop
inc
insb
popf
imul
push
std
aaa
in
push
arpl
push
add
dec
fiadds
add
scas
inc
push
rolb
jge
aam
mov
sbb
arpl
xchg
dec
popa
popf
dec
xchg
aad
mov
inc
arpl
xchg
arpl
xchg
xor
xchg
mov
mov
loope
daa
xor
int3
mov
push
sbb
and
in
dec
idivl
or
test
addr16
adc
push
mov
loop
jns
sub
dec
cli
jle
dec
mov
mov
push
pop
jmp
and
scas
mov
push
orb
sbb
pop
adc
mov
shlb
stos
and
pop
and
or
push
ljmp
fisubs
push
test
jb
test
jae
movsl
into
test
adc
push
pop
mov
call
sbb
aad
shlb
insb
aam
sub
ret
rcrb
cld
cmp
fmull
clc
aam
in
std
mov
js
push
or
dec
mov
repnz
push
dec
pop
mov
mov
jle
js
das
mov
scas
scas
ret
cli
pop
lahf
jmp
xlat
xchg
in
lcall
sahf
mov
inc
stc
sub
mov
and
sahf
mov
ret
test
daa
dec
jecxz
popf
arpl
mov
in
dec
xchg
adc
es
xchg
loop
and
push
xchg
jae
add
loope
movsl
stc
data16
clc
xchg
pop
lret
rclb
shll
push
sbb
out
out
sub
mov
dec
mov
xor
les
lret
out
sar
xchg
in
insb
gs
ss
mov
sbb
xorb
scas
xor
ss
xor
jb
fldenv
mov
cli
inc
push
push
jge
addr16
lret
pop
loopne
mov
fiadds
pop
cmc
adc
fs
cli
pop
int
xchg
pop
jo
into
or
mov
fdivr
sahf
and
bound
mov
enter
filds
add
push
or
lahf
xchg
xor
sub
shl
cmp
nop
sbb
nop
dec
testl
cmc
inc
lcall
or
inc
out
movsb
ds
pushf
test
dec
in
cmc
mov
in
mov
mov
popf
inc
cmp
xchg
in
dec
fbstp
mulb
xor
dec
cmp
xchg
mov
ss
adc
lahf
jecxz
and
jl
push
je
mov
xchg
lock
shll
xor
fisubrs
loopne
mov
mov
xchg
lods
ret
xor
repz
test
in
pop
xchg
outsb
and
aaa
jp
cmp
xor
movsl
inc
fs
sbbb
sbb
dec
bound
sub
fmuls
or
push
xchg
or
lods
cmpsl
fsubrl
inc
mov
jle
inc
cmpsl
jns
lods
adc
or
loopne
insb
or
ret
xchg
ss
sbb
dec
add
outsl
aad
jmp
js
fimuls
dec
mov
in
mov
jno
ljmp
insl
inc
dec
inc
bound
popf
xor
push
mov
xor
and
data16
dec
loop
push
fbld
mov
cmpsl
add
jnp
push
ja
jnp
xchg
sti
stc
dec
pop
inc
pop
popa
xchg
xlat
pop
push
ror
cmp
inc
roll
add
lods
and
add
dec
lock
fld
iret
xchg
sub
outsb
call
jmp
imul
out
push
aaa
push
sti
std
sti
xor
movsb
mov
mov
test
addr16
jp
xor
xchg
test
mov
sbb
sub
daa
dec
or
pop
xor
in
mov
sub
ror
lock
add
xchg
xor
bound
fildl
faddp
into
sti
xchg
scas
xchg
fcomi
push
repz
push
test
pop
mov
mov
lds
test
iret
push
or
addr16
dec
hlt
mov
cmp
cmp
xlat
mov
shl
je
mov
int3
jbe
int
inc
dec
lock
cmp
or
cli
inc
in
in
dec
mov
into
arpl
push
mov
cli
insl
nop
sub
arpl
and
jle
faddl
or
mov
addr16
and
aam
pop
stos
sbb
stc
cmpsl
add
xor
ljmp
sub
cmp
test
jmp
push
lea
roll
dec
mov
adc
xlat
push
pop
xor
inc
xor
xchg
sahf
and
fwait
xor
fwait
test
xchg
jo
mul
xchg
mov
mov
mov
ds
lds
or
dec
out
or
add
ficomps
jmp
inc
out
stos
icebp
pushf
out
pop
mov
fsubr
inc
pop
clc
repnz
cwtl
or
out
push
or
sub
dec
fwait
pop
outsl
add
push
aaa
loope
sti
push
mov
jns
adc
rorl
scas
jg
int
mov
popf
imul
sbb
pop
int3
push
mov
pop
jno
pop
mov
gs
or
xlat
in
cmpl
fisubrl
test
sbb
mov
testb
push
sarb
pop
or
pop
mov
xchg
movsb
mov
xor
addr16
mov
sub
xchg
cmp
jecxz
repnz
fdivrl
or
push
cmc
cmp
sbb
movsb
add
imul
shlb
js
sbb
xchg
loope
xor
pop
mov
jmp
mov
test
jg
mov
and
mov
cmp
pop
mov
push
or
aas
sub
ds
nop
data16
je
xor
jns
add
or
dec
jnp
jae
mov
fldcw
inc
mov
dec
or
lea
sbb
or
cwtl
push
rorl
div
add
push
rorb
lea
add
and
inc
mov
and
xchg
popa
xchg
shll
call
stos
jp
add
gs
dec
lea
push
jns
cwtl
pop
inc
pop
pop
mov
mov
xor
daa
push
inc
sti
push
mov
cmp
mov
subl
les
out
pop
or
int
cmp
push
sti
cltd
xor
inc
jg
aam
out
sub
push
mov
pop
sub
mov
jmp
add
pop
aaa
mov
cld
xor
cmpsb
sbb
inc
iret
ja
cltd
loop
sub
xor
ss
fld
sahf
jl
mov
push
ljmp
add
push
jbe
sub
xchg
xchg
or
mov
incl
cmp
ja
xchg
int3
int
push
jecxz
sub
sub
loop
fucom
mov
cmp
mov
mov
cmp
insl
adc
vmaxpd
ficomps
mov
js
icebp
bound
out
rcrl
arpl
mov
test
pop
xchg
cmpsl
mov
stos
cmpsb
jae
xor
inc
ds
pop
mov
dec
ss
andl
enter
je
xchg
cli
testl
sbb
push
xor
dec
ret
rclb
cli
imul
add
subb
fcomip
bound
mov
sti
dec
mov
adc
jl
fwait
in
adc
enter
pushf
dec
adc
or
adc
sub
loopne
aas
aam
cmp
jbe
add
mov
scas
push
add
fidivs
cs
mov
mov
and
mov
xor
js
cmp
fildll
lea
sarl
cwtl
enter
push
dec
fistps
or
xchg
das
rcrw
loopne
mov
imul
inc
push
or
push
cmp
aaa
imul
call
into
and
arpl
imull
imul
ret
push
adc
inc
shl
je
and
mov
mov
push
jg
cmp
adc
inc
test
dec
das
loop
cmp
es
add
mov
ret
cmp
rcrl
xor
jb
xchg
imul
push
fldt
lahf
in
dec
aas
mov
lea
imul
pop
xchg
jo
repnz
push
jae
xor
imul
aam
aam
push
jp
pop
mov
mov
mov
mov
sub
inc
rcll
jbe
cmp
mov
enter
lea
lahf
leave
and
mov
aas
data16
sbb
fistps
fwait
pop
sub
mov
ljmp
cmp
rorb
jmp
mov
rcr
jns
in
pop
cmp
mov
xchg
jnp
sub
adc
vmread
dec
popa
or
sbb
stos
inc
pop
adc
out
inc
jecxz
div
je
adc
out
mov
jae
enter
xor
std
das
out
addr16
xchg
push
pop
mov
popf
mov
mov
inc
inc
lods
pusha
es
lcall
or
aas
pop
xor
adc
movsl
sub
aad
inc
loop
mov
and
push
icebp
push
jecxz
test
outsl
sbb
cmc
shrb
negl
sbb
jecxz
inc
ljmp
pop
mov
fbstp
jns
ret
movsb
add
adc
jne
push
jnp
push
fnsave
cmpsb
or
add
add
sahf
imul
mov
fisubrs
mov
outsb
popa
std
clc
push
inc
lock
mov
cmp
dec
cmp
adc
xchg
rcll
cmp
or
cmp
enter
test
mov
xchg
js
dec
mov
sub
cmp
or
sbb
call
aaa
fadds
push
mov
xchg
js
dec
mov
sub
cmp
or
sbb
call
aaa
fadds
push
mov
xchg
js
dec
mov
sub
cmp
or
sbb
in
pop
cld
daa
int3
aaa
fadds
push
mov
js
push
das
mov
pop
inc
pop
ja
addr16
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
sub
mov
movsb
cs
in
lcall
shlb
movsl
push
mov
andb
xchg
jo
inc
mov
movsb
and
xor
add
adc
out
xor
aam
xorb
xchg
lock
mov
movsb
xor
js
sub
call
daa
cmpsb
push
mov
adcb
sbb
adc
adc
fcoms
add
daa
shrl
adc
rcll
pop
outsl
jnp
cmc
xor
mov
xchg
js
fldcw
jo
iret
dec
sub
fs
sti
aas
lret
cmp
and
int3
sbb
inc
inc
data16
cltd
inc
or
daa
mov
xor
fistpl
cmp
test
sbb
xchg
cmp
aad
les
cld
adc
repnz
mov
xchg
add
in
lea
dec
nop
test
inc
movsl
pop
in
jmp
adc
lret
shll
pop
mov
rcrb
xchg
mov
fwait
enter
jmp
add
inc
rcr
and
je
fwait
push
xchg
jo
inc
mov
movsb
and
je
add
test
adc
add
xor
and
push
scas
inc
xorb
xchg
push
std
add
ds
xchg
inc
mov
xchg
jno
andl
leave
and
add
push
xlat
add
clc
call
dec
xchg
push
subl
jbe
push
mov
shl
adc
xor
aad
xlat
xor
adc
gs
les
hlt
adc
loopne
lock
xor
and
push
mov
xorb
xchg
jo
inc
mov
movsb
and
xor
add
adc
loopne
lock
xor
and
push
mov
xorb
xchg
mov
call
and
lret
adc
push
test
mov
outsl
fisttpl
cmp
mov
or
lds
and
cmpsb
mov
add
ret
push
and
mov
add
dec
cmp
sbb
int3
pop
fimull
out
and
negl
nop
hlt
sbbb
insl
xlat
mov
xchg
xor
ds
push
and
mov
add
push
jmp
fistl
cli
popf
test
push
xor
sbbb
pop
cmp
adc
inc
xor
sbb
movsl
mulb
rol
push
pusha
cmp
push
in
nop
pushf
negb
jno
xchg
repnz
stos
pop
add
and
xlat
ljmp
pop
adc
and
mov
push
push
mov
popa
jo
xchg
dec
pop
leave
aas
test
mov
lods
loopne
push
add
bound
addr16
xor
pushf
sub
mov
xor
jno
xchg
pminsw
inc
cmpsb
ret
popf
jle
mov
sbb
rcr
cs
push
hlt
fsts
xchg
mov
cmp
notl
ss
fwait
in
imul
aam
add
mov
xchg
test
dec
sub
xor
std
mov
xor
and
mov
arpl
jge
add
lock
jnp
pop
cmp
mov
pop
adc
cmp
in
int
push
int
adcb
inc
mov
iret
jecxz
cli
nop
jge
mov
pop
mov
pop
cld
ljmp
dec
or
mov
in
mov
pusha
out
sahf
inc
jbe
int
fisttpl
aad
xor
dec
arpl
dec
jb
ja
inc
rolb
cmc
jo
test
movsb
fidivrl
decl
je
xchg
jbe
sbbb
pusha
jno
ljmp
sbb
mov
inc
jl
inc
scas
mov
push
daa
mov
fildll
adc
in
cmp
leave
jnp
mov
push
pop
pop
inc
bswap
dec
push
xchg
je
cmpsl
jbe
pop
sub
cmc
sbb
jmp
xor
in
pushf
sbb
mov
mov
jmp
push
cs
pop
xchg
cld
aas
pop
rorl
lods
fisttpl
dec
test
and
pop
adc
push
cmp
sub
loop
sub
icebp
faddl
sub
sbb
sbb
int3
sbb
dec
insl
mov
mov
stos
dec
ljmp
pop
adc
xchg
cmpsl
pusha
sub
jge
mov
rorl
les
out
dec
jo
stos
inc
popa
pop
xlat
sbb
shll
call
ret
pushf
xchg
shlb
cmp
ja
imul
rolb
lahf
mov
adc
push
test
push
roll
add
cmp
cltd
loop
add
jne
mov
sub
mov
inc
gs
clc
sub
in
pusha
mov
jae
push
sub
add
add
in
imull
sub
out
test
ja
hlt
jb
cmp
mov
mov
in
cmp
clc
popf
pop
or
xor
movsl
fcmove
add
sbb
xor
adc
lret
pusha
mov
mov
lods
mov
adc
orb
mov
int3
dec
test
xor
ds
cmp
push
mov
pop
xchg
lahf
jmp
inc
push
add
push
sbb
sti
bound
push
movsl
insl
imul
add
pop
in
adc
jnp
mov
push
dec
mov
lahf
hlt
scas
mov
scas
inc
adc
out
movsb
mov
mov
inc
mov
xor
loopw
dec
sbb
icebp
push
dec
pop
and
cltd
stc
or
incb
out
jns
icebp
jne
inc
data16
pop
pop
and
outsb
cmp
das
mov
stos
dec
mov
test
insb
ret
fiaddl
inc
clc
je
les
jns
and
idivl
sarl
mov
mov
movb
cmp
and
pop
push
stos
negl
sub
xchg
ja
push
ljmp
cmp
or
adc
ja
and
push
xchg
bound
jg
lcall
mov
inc
mov
imul
test
arpl
and
ret
test
mov
das
or
push
loopne
push
arpl
dec
xchg
xor
cwtl
ret
in
mov
ret
cmpb
pop
stos
sbb
shll
inc
call
mov
scas
mov
stos
fsubl
jle
out
hlt
mov
push
jns
insb
jbe
fsubl
pop
and
lods
insl
andb
lods
mov
lahf
test
lahf
pop
lea
jno
inc
loope
mov
lahf
mov
rcll
or
test
bts
inc
sub
lods
vpmulhuw
test
test
cmp
mov
inc
xchg
lahf
je
inc
push
sbb
sbb
jecxz
or
outsb
push
cmp
cmp
dec
daa
pop
ret
mov
dec
pop
cmp
lcall
mov
shlb
pop
xchg
cmp
js
pop
loope
lahf
mov
push
pushf
push
mov
std
xchg
inc
stc
lea
out
loopne
pusha
or
leave
sub
sub
dec
aas
test
push
and
adc
and
test
fcomi
repnz
repz
or
mov
sub
cwtl
mov
fldenv
sbb
inc
push
stos
inc
iret
ret
cs
mov
dec
cli
xchg
or
lods
sub
ja
daa
and
lret
add
mov
mov
lcall
lock
mov
enter
inc
or
cs
test
ss
cmc
mov
pop
push
xchg
inc
int
jnp
out
xchg
out
lcall
lahf
jnp
movsb
push
dec
xorl
pushl
and
cmc
or
push
push
les
mov
roll
mov
stc
loope
pop
mov
loopne
dec
adc
pop
dec
sbb
lods
push
gs
test
mov
repnz
addr16
mov
xchg
dec
adc
fadd
inc
cmc
jmp
leave
out
xchg
out
in
and
mov
daa
xchg
inc
aas
fcomp
or
outsl
ret
and
xor
mov
push
jb
sahf
cltd
test
jp
or
and
movsl
ljmp
bound
mov
add
dec
push
and
in
out
pop
andb
jecxz
jp
jo
inc
ss
pop
push
lea
mov
sbb
xor
mov
insl
mov
mov
pop
jge
jmp
sbb
popf
sbb
dec
push
and
cmc
push
arpl
jmp
out
mov
loope
cld
sub
cld
add
mov
push
mov
aaa
lcall
inc
test
inc
cmp
or
sub
das
xchg
cmpsl
dec
outsl
mov
push
out
sbb
mulb
push
sub
sub
test
inc
in
repnz
call
rcrb
cltd
lods
rcrl
lods
add
pop
bound
inc
shl
mov
addl
sbb
jns
mov
sub
sub
inc
sub
in
lods
test
int
xchg
test
int3
sub
sub
sbb
icebp
pop
sarb
loop
pusha
outsb
adc
sbb
call
mov
sbb
dec
pop
cmp
pusha
mov
jl
adc
aas
adc
mov
mov
cmp
jb
rcrl
bndstx
mov
adc
loope
icebp
pop
dec
inc
sub
add
push
sub
mov
dec
fistps
cmpl
cmp
xor
pusha
in
jp
cmp
in
in
and
pop
mov
leave
jns
mov
add
loop
pop
popa
mov
sarb
popa
andb
jg
ret
jge
pop
dec
ss
ds
inc
inc
int3
inc
in
or
or
repz
incl
jl
aam
dec
aas
int3
mov
mov
mov
insl
pop
negl
xchg
sbb
movsl
mov
push
test
or
push
out
popa
ss
bound
insb
imul
jecxz
stc
push
pusha
mov
cltd
fdivrl
rcr
mov
pushf
jge
dec
mov
mov
adc
pushl
je
fwait
sbb
nop
and
and
fs
sub
xchg
dec
add
or
fdivs
cmpsb
pop
ret
mov
xor
loopne
and
stos
in
ss
test
lods
gs
xchg
xor
hlt
and
mov
cltd
icebp
lds
ficoms
dec
mov
and
dec
xor
inc
mov
xchg
dec
adc
inc
inc
insl
lret
jns
jmp
in
notb
sub
hlt
loopne
dec
sbb
fsub
cmp
dec
push
pop
sbb
fmuls
sub
enter
mov
or
jns
test
add
stos
sub
iret
or
in
jae
cld
ds
fsubrl
pop
adcb
pop
sub
jp
dec
jb
in
inc
pop
sbb
loop
dec
pop
mov
insl
xlat
jmp
mov
cmc
loope
pop
mov
inc
pop
movb
jge
and
jle
push
inc
dec
push
hlt
insb
adc
mov
jg
add
ret
adc
arpl
pop
sbb
and
pop
add
xchg
movsb
or
push
mov
in
in
push
jno
aam
pop
je
sub
jmp
pop
movsl
fwait
pushf
cltd
lds
sahf
call
cmp
or
mov
or
mov
adcb
and
repnz
jbe
adc
scas
bound
daa
aas
sub
pop
andb
add
imull
lea
int
add
fldl
mov
mov
fs
mov
dec
arpl
aam
cli
push
mov
sub
movsl
ret
push
mov
les
or
sbb
icebp
jecxz
cmp
fcomp
addr16
mov
jae
loop
mov
incl
mov
orb
and
pop
js
cmp
or
mov
fcmove
mov
loopne
rorb
mov
into
and
mov
movsb
in
lds
dec
mov
mov
insl
loop
in
dec
dec
arpl
jno
add
fsubrl
mov
pop
ljmp
aaa
push
in
mov
push
adc
jge
push
je
jge
mov
loopne
insb
cwtl
shlb
std
add
es
filds
movsb
push
pusha
dec
clc
push
xor
push
inc
mov
push
cs
loope
mov
xchg
int3
iret
jo
inc
adc
mov
jmp
out
xor
testb
push
mov
in
push
push
sub
lea
rorb
xchg
sarl
sbb
mov
lret
in
test
add
fisttpl
sub
jae
adc
mov
push
xchg
sbb
jne
je
je,pn
negl
push
pop
loopne
pop
xor
fdiv
pop
dec
mov
movsl
out
jo
inc
sbb
pop
lea
mov
sahf
sub
sub
inc
jge
push
aaa
mov
outsl
in
jnp
repz
and
pushf
pop
pop
mov
lahf
mov
jmp
push
ret
push
int3
cld
mov
xchg
repnz
repnz
sub
or
aaa
pop
lods
ret
push
in
jmp
test
mov
stos
jg,pt
aad
push
pop
sbb
or
fstpl
xchg
rcr
test
call
int
cltd
dec
std
adc
les
dec
jge
adc
lea
push
dec
and
insb
inc
xchg
jns
and
xor
mov
adc
push
test
int3
pop
movsl
stos
stc
add
ficoml
mov
sbb
lret
adc
mov
mov
rcl
loopne
mov
test
test
popf
movsb
mov
andb
mov
or
loopne
jb
cmpsl
mov
frstor
pop
jmp
or
inc
push
cmpsl
pop
fucom
or
jp
pop
loop
sub
test
sahf
dec
inc
in
sbb
iret
pop
stos
stc
movsl
adc
adc
stc
inc
add
mov
push
xchg
mov
sahf
push
pusha
aas
cmp
shlb
adc
mov
dec
movsl
pop
mov
stos
loop
popa
insl
cltd
lahf
sub
and
push
xor
imul
jnp
jo
sub
jo
cs
ljmp
in
clc
aaa
cld
push
scas
pop
adc
xchg
ret
or
inc
mov
jl
cld
mov
stos
in
ret
call
push
jge
pop
xor
and
in
out
cltd
mov
sbb
imul
inc
lret
xor
push
shld
xchg
js
mov
lods
jb
fldz
jge
sub
lds
stc
add
lret
xlat
xor
sarb
mov
andb
jne
xchg
jmp
arpl
js
mov
sub
or
divb
mov
push
test
fadds
sbb
lea
pop
hlt
jae
cmp
mov
mov
test
mov
les
jmp
sub
cltd
cmp
rcl
adc
ss
jmp
mov
cmp
inc
mov
mov
xchg
push
movsb
pop
popa
loopne
loopne
mov
movsl
cmpsl
enter
mov
jmp
pop
repz
ljmp
inc
das
or
js
jae
sti
adc
or
int
sub
push
idivl
push
mov
xchg
out
lods
je
jbe
ds
lahf
outsl
jmp
push
test
out
cmp
jbe
lret
adc
jge
aad
fsubrl
mov
sub
rolb
test
mov
xchg
push
fldcw
clc
pushf
xor
mov
sahf
adc
out
push
jg
cmp
xchg
mov
pop
sbbb
or
shrb
das
testb
insl
cmp
mov
add
xchg
lods
in
fadds
inc
xorl
leave
cmp
xchg
jecxz
jp
push
mov
dec
scas
fwait
mov
test
mov
jmp
mov
mov
mov
insl
pop
dec
hlt
sub
add
bound
xchg
mov
fistps
stos
sbb
pop
jne
insb
pop
and
dec
gs
sbb
xchg
in
push
stos
ficoms
pop
cmp
cld
mov
cmp
sbb
in
jns
mov
cmp
mov
xor
adcl
pop
jns
pcmpeqb
test
test
push
jno
int3
sub
lret
xchg
scas
jne
adcl
or
sbb
rcrb
xchg
xlat
pop
add
adc
call
mov
sbb
in
cs
std
and
ret
mov
and
jmp
bound
out
insb
mov
mov
jl
ljmp
cltd
and
inc
jne
xor
fs
mov
data16
cmp
call
int3
or
mov
gs
std
xchg
dec
and
mov
jmp
mov
jg
dec
into
pop
pop
fists
push
and
ret
cmpsl
or
lret
sar
rolb
stos
out
mov
add
or
lds
shll
dec
sub
push
sub
in
aam
cmpsb
jp
in
add
outsl
jl
dec
and
cmp
testl
outsb
pop
sub
and
lcall
push
inc
cmp
pop
push
ret
sbb
pop
jb
shrb
mov
test
lcall
cli
les
scas
mov
jbe
fcoml
lahf
add
mov
inc
xor
popa
clc
cmpl
pop
jl
flds
adcl
pusha
cmp
and
jecxz
out
dec
bswap
xchg
cmpsl
ret
movsb
ja
test
int3
pop
stos
pop
mov
or
push
push
mov
test
inc
push
xor
or
push
xchg
inc
lahf
loope
lea
jno
iret
xor
loope
loop
mov
outsb
out
fisubrl
and
bound
mov
push
add
pop
in
test
rcll
xchg
shlb
cmp
inc
mov
xchg
loopne
xor
mov
mov
subl
and
cli
shlb
imul
repz
cli
adc
movsl
xchg
incb
je
negb
inc
repnz
pop
in
sbb
pop
sbb
insl
xlat
ret
xchg
jno
jb
stos
mov
subl
and
inc
push
xchg
mov
outsl
pusha
popa
cli
dec
lds
dec
push
rcll
or
cld
cmp
ret
icebp
es
cmc
ret
sub
sahf
mov
mov
mov
push
sub
ret
pop
adc
fldl
inc
jg
out
lret
mov
fisubs
add
xor
ja
pop
adc
lds
push
pop
les
lods
add
or
mov
cmp
aas
out
sbbl
mov
repnz
sub
lahf
xchg
ja
inc
cwtl
cmc
jne
in
rcll
movaps
cmp
mov
push
mov
or
mov
or
add
stos
sti
lahf
shrb
addr16
orl
adc
pop
call
out
insb
hlt
fxam
pop
lahf
push
int3
cmp
ffree
push
xor
rcrl
shrl
mov
sarb
adc
popf
pop
loopne
in
add
or
mov
js
push
in
or
pop
out
mov
xchg
fistpll
jne
jnp
fadds
shlb
repz
mov
sbb
inc
mov
sbb
push
subb
jbe
pop
sbb
hlt
arpl
and
xchg
xchg
or
fsubl
add
or
lahf
xor
lret
cld
pop
mov
loope
jl
cltd
jbe
push
xchg
or
insb
and
jb
popf
clc
popf
stos
call
rcrl
mov
pop
fincstp
xor
pop
adc
push
jnp
push
fwait
lret
mov
fwait
push
movsl
pusha
lahf
and
into
test
sti
iret
adc
lds
and
and
insl
cs
sub
test
add
mov
data16
subl
or
iret
imul
xchg
pop
mov
ja
cmp
jns
shrb
andl
out
stos
sub
int3
push
je
fcomps
cmp
ret
mov
sbb
das
mov
mov
fidivl
adc
mov
stos
push
sar
jge
jae
stos
inc
adc
mov
adc
repnz
cmpsb
xchg
mov
cmpl
dec
rolb
fwait
push
or
mov
xchg
mov
dec
push
adc
xchg
icebp
in
adc
jnp
sbb
xchg
mov
dec
out
mov
shlb
jmp
xchg
cmpb
adc
lock
pop
ror
add
adc
test
out
sbb
sbb
jae
mov
mov
adc
hlt
mov
mov
repnz
jbe
cmp
testb
andb
pusha
cwtl
movsl
add
orb
stc
enter
movsb
and
lea
push
ret
stc
mov
and
rorb
mov
faddl
lret
lcall
and
mov
pusha
mov
lcall
outsl
sbb
xor
repnz
dec
push
rorb
mov
repnz
decl
add
cmp
sbb
xor
xor
sbb
mov
das
ret
mov
mov
push
add
fnstsw
mov
gs
and
notl
leave
mov
pop
push
jp
push
jle
sub
das
jg
dec
xor
aas
xchg
push
ljmp
dec
adc
pop
test
jle
inc
and
or
push
in
lret
sub
test
dec
mov
test
add
call
and
sub
add
add
jne
xchg
xchg
repnz
clc
into
fwait
cmpsl
add
ljmp
adc
fistpll
adc
gs
add
mov
mov
or
leave
jg
popa
add
xchg
mov
push
inc
pop
xor
pop
jp
ret
sub
into
test
repnz
jnp,pn
popl
jg
fistps
mov
cmpsb
cwtl
sub
sahf
or
int3
inc
or
popa
sbb
iret
shll
pop
mov
xor
test
jge
sbb
push
push
in
pop
popa
repnz
lods
push
mov
xor
in
jge
cwtl
out
jbe
or
xchg
imul
jl
push
mov
or
pop
mov
jnp
mov
mull
xor
inc
les
pop
push
test
mov
scas
loop
or
imul
add
rcr
lds
add
mov
imul
sahf
xor
std
xchg
popf
inc
in
push
mov
pushf
and
test
fwait
adc
mov
int
rcl
rclb
xor
lret
push
fldt
adc
icebp
jo
jmp
cli
movsb
cmpsb
or
in
pop
movsl
adcb
xor
mov
cmpsb
sub
cmp
pop
sbb
js
cmpsl
mov
movsb
and
xor
add
adc
loopne
lock
xor
and
push
mov
xorb
xchg
jo
inc
mov
movsb
and
xor
add
adc
loopne
lock
xor
and
push
mov
xorb
xchg
jae
push
mov
movsb
and
xor
add
adc
in
lock
xor
and
push
test
fs
pop
test
mov
movsb
and
and
add
nop
and
adc
scas
push
rclb
fdivrl
mov
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
