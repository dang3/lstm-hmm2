call
push
adc
and
xor
rolb
addb
pop
xor
lock
add
sub
adc
inc
push
lock
push
mov
in
or
or
push
add
or
add
or
xchg
add
add
inc
add
or
addb
add
xor
xchg
pop
lock
add
add
add
add
add
add
add
add
push
addb
or
add
add
inc
add
push
xor
adc
lock
or
add
nop
add
adc
xor
loopne
mov
jo
cmp
add
jae
adc
das
pop
push
add
add
push
add
add
push
add
push
loopne
into
or
add
xor
xor
pusha
add
lock
nop
add
or
add
rolb
ret
add
rolb
add
add
pop
nop
add
or
add
push
mov
scas
add
loopne
data16
add
rolb
xadd
cmp
mov
xor
xor
or
nop
add
add
add
add
add
pop
mov
clc
pop
inc
add
add
adc
push
pop
nop
add
and
adc
nop
add
or
add
add
add
add
mov
rolb
stos
or
add
adc
add
loop
add
push
add
mov
add
cmp
or
aaa
or
add
add
adc
daa
pop
mov
loope
mov
fildl
xor
adc
xor
repnz
mov
add
push
mov
test
and
and
xor
mov
or
mov
and
lcall
add
push
rolb
pop
pusha
add
add
pop
rolb
or
add
add
test
and
push
or
add
adc
push
add
add
inc
add
or
dec
or
add
add
sahf
or
add
add
mov
rolb
or
add
xor
rolb
push
add
addb
push
and
push
push
adc
dec
or
add
lock
addb
or
add
addb
push
rolb
and
lock
or
add
rolb
mov
sbbw
sbbl
movl
xor
subw
call
subw
andl
test
jne
sbbb
subl
ret
push
popl
push
sbbl
push
xorb
push
popl
mov
push
popl
pusha
movw
call
push
popl
mov
push
popl
push
andl
addl
orl
push
popl
addl
movb
orb
push
push
popl
call
sbbl
cmpl
je
sbbl
subl
cmpl
je
addw
cmpl
jne
xorw
call
push
popl
ret
addw
sbbl
jmp
subb
xor
push
popl
mov
push
popl
shl
addb
mov
push
popl
shl
movb
mov
push
popl
cmp
jne
xorb
andw
call
push
popl
popa
orw
call
movl
push
sbbl
addl
sbbw
addb
addl
xorw
push
subl
addw
call
orl
push
push
rol
inc
inc
mov
sub
xchg
push
popl
addl
mov
subl
shl
andb
push
subb
xor
push
popl
push
push
popl
call
push
popl
andw
push
push
popl
movw
mov
push
popl
push
push
popl
movl
jmp
push
popl
pop
push
popl
mov
sbbl
movb
push
addl
sbbw
push
orl
addl
push
orb
andb
mov
andl
movw
mov
sbbl
push
popl
rep
addl
movw
pop
push
popl
xorw
pop
push
push
shr
mov
xor
pop
push
inc
inc
add
not
mov
xor
xchg
movl
addb
xor
subl
push
popl
jmp
andb
sub
push
popl
push
popl
mov
push
popl
push
popl
sub
subb
sub
andw
andl
mov
orw
sub
subl
or
jne
push
popl
add
push
popl
jmp
movb
mov
andl
addb
shr
addw
push
popl
shl
movl
orl
mov
push
popl
jmp
orl
sub
push
popl
mov
andw
movw
cmp
jne
subb
sbbb
mov
push
popl
add
push
popl
andb
cmpw
jne
sbbl
andw
ret
push
popl
subb
push
push
popl
xor
addw
xorl
pushl
push
popl
movw
pop
xorw
lea
sbbb
or
push
popl
andb
mov
movl
mov
addb
lods
addl
addb
mov
orl
push
popl
pop
movl
ret
andl
xorb
push
push
popl
mov
push
popl
add
push
popl
andb
push
andl
andw
push
sbbb
push
push
popl
subl
push
orl
push
push
popl
mov
subl
mov
push
popl
add
push
popl
pushl
subl
push
popl
mov
sbbb
add
push
popl
add
xorw
mov
push
popl
add
push
popl
push
popl
xor
subl
lea
addl
addw
mov
addl
add
push
popl
mov
movw
push
popl
xor
movl
rol
addb
xor
movl
xorw
inc
push
popl
sbbl
cmpb
jne
xorl
cmp
je
addl
inc
addl
push
popl
cmp
jb
addl
subb
mov
push
popl
subb
add
andl
addl
movzwl
movl
subl
mov
subl
add
push
popl
push
popl
mov
push
popl
push
popl
add
sbbb
pop
push
popl
cmp
jbe
push
popl
cmp
jae
xorw
pushl
push
popl
andw
pushl
orl
sbbl
push
push
popl
subb
addl
movl
push
popl
addl
subb
push
popl
pushl
sbbl
sbbw
call
xorl
orl
call
subl
pop
xorb
pop
sbbl
pop
push
popl
push
popl
pop
push
popl
pop
xorw
movw
leave
andl
sbbb
ret
push
popl
orb
call
out
xchg
popl
mov
cwtl
dec
push
or
movsl
jo
or
fstps
mov
sahf
sarb
adcl
inc
push
sti
push
test
jmp
pop
push
or
push
call
dec
add
adc
sub
mov
adc
pop
cli
shrl
mov
ljmp
fdecstp
aam
lahf
xchg
rorl
out
es
pop
fidivrs
adc
adc
push
xlat
out
cmp
dec
add
cltd
xchg
arpl
mov
xor
shrl
adc
and
sub
out
sub
push
loop
sti
dec
aaa
adc
jecxz
icebp
outsb
jmp
pop
int
lahf
test
mov
fstpl
addl
xchg
out
fimuls
mov
std
negb
adc
push
inc
pop
inc
test
sub
mov
mov
or
test
dec
push
adc
push
out
sub
das
xor
inc
popa
lea
jns
movsl
mov
ds
aam
test
insb
out
sahf
mov
cmp
mov
mov
shlb
subl
mov
shll
ljmp
clc
nop
adc
add
ret
test
xor
nop
mov
push
dec
or
and
lret
mov
add
mov
out
cltd
dec
mov
and
test
movsb
mov
jp
inc
mov
pop
mov
decb
sbb
or
sub
adc
aaa
pop
mov
or
iret
inc
pop
xor
cs
stos
pop
or
or
jnp
enter
dec
je
pop
negb
testb
lret
sub
or
lea
xchg
lds
cmp
out
jmp
fisubl
pop
or
jo
pop
cli
pop
or
cltd
arpl
xchg
aad
adc
or
xchg
adc
add
nop
or
jnp
xor
xchg
loope
push
pop
rorl
cmp
adcl
stc
out
arpl
add
lods
xchg
xchg
in
mov
cltd
adc
outsl
cs
test
pop
mov
fcom
xchg
sub
adc
fistl
cmp
aam
adc
adc
das
lcall
mov
in
seta
mov
add
dec
repz
sub
mov
sub
jbe
adc
sbb
or
and
xchg
push
sbb
pop
test
insl
das
push
pop
push
cltd
xchg
std
cli
popf
mov
test
sbb
mov
mov
cmp
imulb
dec
cmpsl
cmp
lcall
or
xchg
dec
das
test
lret
fiadds
pop
aad
lahf
xchg
shll
push
shl
bound
xor
mov
bound
hlt
js
pop
ret
mov
xor
lods
aad
push
jnp
adc
jns
mov
add
jmp
dec
aaa
cs
aad
sub
inc
jo
popf
or
jo
pop
decb
cmp
in
nop
lds
bound
mov
add
xchg
int3
push
lods
jno
adc
mov
in
aam
add
or
push
dec
shll
xor
adc
xor
pop
daa
add
and
xor
mov
stc
jne
movsl
jl
roll
dec
push
adc
add
or
pop
mov
pop
pop
loopne
push
cmpsb
jge
jns
dec
lods
cld
mov
fs
roll
adc
xchg
adc
add
xor
mov
jl
sarl
push
xchg
adc
pop
aad
fcoml
mov
nop
adc
pop
dec
xor
pushf
mov
pop
fldenv
mov
adc
ss
xchg
mov
mov
cmc
jl
div
xchg
out
pusha
outsl
xor
xlat
sub
jno
out
cmpsb
sbb
xchg
std
fdivrl
or
xchg
lahf
adc
lret
inc
pop
push
std
or
push
add
test
ret
adc
daa
fldl
add
jne
popa
adc
add
or
jecxz
xor
mov
movsb
push
mov
sbb
jae
fwait
test
lods
fs
pop
popa
shl
dec
test
jl
insl
pop
repnz
lods
test
popa
sub
decl
cli
fdivrp
dec
mov
cli
add
out
addr16
jae
aad
lahf
xchg
roll
pusha
pop
mov
loop
jb
ret
decl
outsl
dec
xchg
inc
ret
jns
cmpsb
mov
pop
lret
fs
push
mov
or
adc
xor
add
jb
cltd
push
xchg
and
andb
adc
mov
add
cltd
adc
call
sbb
inc
movsb
fisubrs
adc
and
jl
xor
xchg
fucomp
mov
scas
pop
cli
add
add
xchg
adc
mov
ret
sub
mov
xchg
mov
push
mov
sahf
pop
jo
push
ja
fwait
outsl
inc
fs
clc
mov
sub
mov
xchg
popf
imul
repz
in
adc
adc
std
ficoml
shrb
or
popf
dec
mov
dec
test
lret
fs
out
sub
sub
lret
aaa
sti
jae
mov
std
push
fmuls
sub
enter
jnp
inc
call
push
mov
jle
adc
clc
adc
add
add
or
insl
cmp
pop
or
push
sbb
cli
push
aam
push
sub
inc
hlt
xchg
or
mov
xor
sahf
imul
jle
add
cmpsl
out
daa
pop
in
call
addr16
adc
mov
stc
lahf
test
adc
inc
bound
and
jb
imul
jnp
loopne
push
sahf
movsb
mov
lods
cmp
dec
out
sar
insb
aas
push
in
lds
adc
idiv
lret
movsl
inc
call
insl
fxch
add
adc
push
add
daa
mov
dec
in
rolb
aam
test
ljmp
mov
test
cwtl
hlt
ljmp
xchg
jae
dec
stc
outsl
pop
fwait
mov
fcompl
fwait
mov
mov
mov
mov
dec
clc
fsubrs
push
or
test
xor
rcl
aad
xchg
lahf
jge
in
popa
int
adc
pop
push
ss
dec
xchg
shll
push
jecxz
nop
arpl
mov
add
xchg
in
icebp
lods
bound
cwtl
roll
loop
push
cld
push
adc
push
test
xor
push
mov
jnp
and
adc
fsubrp
mov
xchg
je
js
adcl
popa
loop
sub
pop
mov
pop
mov
out
inc
call
mov
jmp
or
push
sbb
shrl
dec
add
dec
jmp
jl
fimuls
es
lock
call
call
pusha
shrl
iret
imul
or
push
call
imul
leave
adc
push
pop
or
add
jl
xchg
mov
dec
mov
xor
xorl
data16
add
cltd
clc
lcall
scas
test
dec
shrl
push
jmp
xchg
sbb
and
test
imul
xchg
jbe
std
push
pop
add
jno
aas
test
clc
push
xchg
mov
xchg
add
int
cltd
xor
jb
mov
jl
out
outsl
rcrl
rorl
xlat
mov
mov
inc
or
cmpsl
jb
fcompl
mov
lods
jo
jnp
push
push
adc
push
ljmp
xor
adc
jecxz
pushf
rcrl
add
rorl
inc
outsl
pop
ror
xchg
sub
mov
or
movsb
std
mov
aaa
enter
mov
add
movsb
jle
inc
in
test
dec
ljmp
popa
icebp
adc
loope
negl
std
pop
jecxz
xchg
lds
sbb
enter
xchg
jo
bound
push
aas
mov
jecxz
xchg
lds
sbb
jb
xor
test
insb
jmp
cs
test
jmp
dec
int
aad
lahf
xchg
shll
push
in
loop
xchg
es
pop
fidivs
pop
out
mov
sbb
cmp
inc
mov
incb
sbb
mov
xchg
ficoms
testl
movsl
xchg
sbb
in
jle
xor
add
repz
xchg
fldt
mov
pop
push
test
push
dec
lahf
xchg
shrl
push
ror
push
rcll
adc
sub
mov
lcall
stc
hlt
adc
decb
scas
data16
shll
insb
sbb
insb
or
aas
or
mov
sbb
push
out
mul
jnp
inc
das
xchg
add
mov
cltd
adc
sub
leave
jnp
ja
imul
sarb
and
dec
sbb
cmpl
push
dec
cmp
mov
out
outsb
out
add
jle
inc
jns
and
xchg
cltd
arpl
cmc
js
pop
lds
iret
sub
imul
inc
in
andl
jmp
scas
in
dec
and
or
out
insb
pop
and
sbb
push
repnz
aaa
inc
outsb
cmp
pop
add
push
push
push
add
adc
scas
push
cs
adc
inc
xor
ficompl
cwtl
repz
mov
adc
push
push
add
xchg
sarb
xchg
daa
outsl
das
add
js
push
add
jge
lret
add
cmpsl
into
mull
pop
aam
xchg
mov
pusha
cmpsb
pop
adc
pop
repz
arpl
int
insb
test
sub
mov
inc
inc
pop
mov
mov
inc
mov
add
add
dec
or
xchg
subl
test
stc
xor
cld
jbe
testl
sahf
adc
mov
inc
in
sbb
lds
pusha
outsl
das
mov
or
stc
add
not
jno
cmp
int3
xor
js
pop
ret
cmp
push
mov
fcoms
jbe
push
cmp
clc
push
mov
jnp
dec
sbb
adc
lds
adc
add
stc
push
shlb
jp
int
sbb
push
fistpll
insb
xchg
mov
adc
sub
jbe
add
cmp
stos
test
cli
stc
aas
adc
jl
stos
stc
mov
std
in
mov
rcll
aad
mov
daa
or
or
cmpsl
or
adc
shll
dec
loop
shrb
adc
jecxz
xchg
lds
sbb
xor
push
nop
test
jo
arpl
aad
fiaddl
add
xchg
aaa
dec
mov
push
dec
adc
lret
xchg
inc
out
stc
lock
push
ja
jne
mov
pop
add
fistl
andl
ds
retw
decl
outsl
push
cmpsb
orb
pop
sar
sti
incb
popf
iret
lods
inc
cwtl
outsl
inc
inc
sti
push
dec
add
movsb
orb
adc
jns
jae
jp
and
or
clc
mov
mulb
mov
lock
adc
mov
icebp
mov
stos
pop
shl
rcrl
push
lahf
xchg
xchg
push
xchg
scas
pusha
sbb
mov
or
es
cli
xor
addr16
pop
dec
push
or
push
or
cli
dec
mov
or
loop
pushf
adc
push
sbb
sub
sub
faddl
test
pop
cli
or
rcrl
push
sahf
ret
dec
sub
testb
popf
cld
xchg
insl
scas
xor
ds
dec
cltd
jns
push
pop
push
aad
bound
pop
cmp
out
jbe
dec
mov
push
aam
test
pop
add
rcrl
les
test
push
jnp
in
idiv
cmp
jmp
push
or
popf
jge
mov
mov
xlat
out
inc
popa
out
add
pop
xchg
pop
pop
or
mov
insl
mov
imul
or
push
sti
loopne
test
inc
ja
jne
sub
sub
and
std
fisttpl
hlt
and
xchg
jge
hlt
das
push
xlat
sbbl
test
inc
int3
jns
movsl
mov
pusha
push
aas
pop
dec
xchg
or
jnp
loop
inc
fisttps
jge
mov
rorb
and
icebp
dec
push
popf
bound
add
test
sbb
mov
add
jl
mov
jecxz
ja
in
and
hlt
mov
or
sbb
dec
xor
xchg
mov
mov
adc
and
out
mov
cltd
or
pop
arpl
mov
cmp
mov
lods
adc
lcall
mov
aad
or
jnp
inc
sub
push
test
call
dec
jge
lahf
subb
arpl
movntps
stc
or
adc
nop
adc
test
mov
add
cs
xchg
inc
xchg
push
adc
les
gs
stc
dec
push
add
imul
xchg
mov
push
cmc
and
adc
mov
rorl
int
lea
xor
mov
scas
mov
ljmp
adc
daa
mov
mov
or
sub
popa
mov
stos
jo
sbb
mov
xchg
popf
or
xchg
adc
sub
scas
jl
add
mov
cmp
in
dec
jb
dec
push
pop
pop
push
dec
mov
popf
test
int
mov
movsl
adc
add
dec
call
xchg
gs
insl
cmc
movsb
scas
test
out
sub
push
call
fimuls
sub
fucomi
add
popa
repnz
add
inc
xchg
pop
mov
xor
xchg
fs
mov
push
testl
ja
aas
and
adc
daa
filds
push
ljmp
shll
call
cmc
cld
mov
push
cmp
xor
in
xchg
fistl
and
and
and
cwtl
add
dec
in
out
rcll
std
ds
push
adc
cli
xchg
dec
pop
and
fmul
mov
jno
aam
lock
mov
sahf
adc
push
stos
jo
adc
pushf
cld
xchg
outsb
cmp
xor
iret
adc
sub
inc
dec
cltd
adc
xchg
rolb
scas
xchg
adc
add
inc
xor
mov
nop
sbb
xchg
std
fldt
push
mov
cs
paddb
arpl
int3
and
push
fnstsw
test
loope
adc
daa
fiadds
insl
test
ds
push
imul
pop
int3
jecxz
ss
push
pop
cmpsl
adc
call
ret
test
and
or
das
push
daa
add
stos
mov
mov
or
cwtl
push
fwait
jbe
mov
pop
push
test
addr16
dec
repz
lahf
xchg
sarl
push
cli
push
lret
add
xchg
inc
cli
popa
loop
adcl
out
into
pusha
fwait
cmpsl
loope
daa
pop
dec
xchg
lret
push
pop
mov
adc
hlt
fs
js
pop
movb
fisubrs
pop
pop
pop
ret
in
dec
sar
sub
jl
add
lret
mov
dec
sub
or
dec
pop
clc
adc
fnstenv
adc
sbb
lock
ss
in
bound
mov
push
add
xor
call
out
mov
cmpsb
popl
aad
fdiv
add
adc
push
scas
push
push
dec
jnp
aaa
dec
push
sub
cmc
xchg
sub
mov
sub
sbb
addb
fimuls
call
in
stc
mov
mov
ja
in
movsl
lds
lea
cmp
arpl
xchg
sbb
add
jo
inc
add
adcl
sub
mov
icebp
mov
inc
mov
xor
fldcw
js
pop
les
sbb
xchg
mov
clc
scas
mov
shll
mov
ret
add
lods
or
dec
jmp
and
adc
adc
mov
sbbb
lods
xchg
push
mov
push
adc
xchg
mov
xchg
and
pusha
push
jnp
xchg
das
or
imul
cli
xor
lret
cmpsl
pop
jecxz
xchg
iret
jmp
pushf
ss
pop
fnstenv
push
add
or
push
adc
test
sub
mov
js
es
cmp
mov
nop
rcl
ret
test
mov
les
decl
outsl
push
sti
sbb
mov
addr16
cmp
and
inc
pop
push
rol
leave
stos
test
cmc
je
ficoms
movsl
mov
jbe
cs
dec
pusha
xor
dec
cs
pop
cmpsb
jle
out
pop
rcl
and
addr16
fwait
sbb
push
jno
fwait
aad
sub
pop
sti
flds
test
adc
cmpsl
outsl
rorl
add
fwait
add
inc
and
in
fwait
sbb
pop
movsl
arpl
cmc
js
pop
mov
shlb
mov
je
or
subl
lret
push
data16
sbb
mov
ja
jge
push
lods
cmp
cmpsl
sbb
xor
js
sti
or
mov
rorl
js
pop
xchg
cs
pop
fildll
iret
mov
mov
xlat
fs
insb
xor
mov
jmp
in
sahf
cld
xchg
test
in
sub
mov
andl
add
in
pusha
outsl
xor
shl
scas
xchg
icebp
pushf
cld
xchg
lret
and
pop
push
adc
pop
lret
sbb
aam
nop
xchg
insb
xor
out
xchg
addl
in
fwait
cld
xchg
cmc
xchg
cmp
xchg
lds
sbb
cmpsb
test
mov
jmp
repnz
popa
adc
push
sbb
stos
out
jnp
cs
mov
adc
sahf
adc
in
sub
addr16
pop
enter
int3
jns
cmpsb
mov
mov
mov
jmp
lods
nop
mulb
repz
cmpxchg
xsha1
cmpsb
dec
sbb
push
and
pop
adc
or
pop
push
js
jp
inc
out
mov
popf
popa
loopne
and
push
cld
or
push
jmp
test
xor
sbbl
dec
xor
fs
sbb
sarl
push
iret
sti
sti
pop
mov
mov
or
addr16
add
pop
test
repz
xlat
das
test
notb
sub
test
sti
fiadds
test
es
insl
or
xchg
mov
scas
cld
adc
fsubr
mov
enter
ret
xchg
jns
js
fiaddl
test
cmpsl
sti
mull
pop
add
movsl
fxch
cmp
arpl
add
add
insb
dec
ret
roll
sbb
and
xor
loopne
orb
adc
fs
test
mov
mov
xor
or
dec
jmp
sbb
push
out
lahf
loope
arpl
sub
adc
xchg
rclb
xchg
adc
add
cmp
mov
xchg
push
adc
aam
out
xchg
adc
pop
cmpl
add
add
cs
mov
stc
test
cs
cwtl
mov
lcall
insl
test
jl
inc
js
das
jmp
or
sub
aaa
mov
sub
out
push
cltd
adc
pop
sub
push
xchg
jecxz
xchg
lds
sbb
dec
ret
test
insb
jmp
push
lock
sbb
arpl
jno
arpl
lret
push
icebp
push
cmc
or
push
cld
test
xor
lret
adc
daa
fldl
push
add
push
mov
dec
fildl
hlt
cld
xchg
push
lock
out
xchg
adc
insb
test
adc
xchg
mov
xchg
std
sti
repz
inc
mov
stc
jp
sub
fwait
out
jae
push
mov
aam
adc
je
andl
and
cld
cmp
pop
dec
xchg
mov
inc
cmpsb
jle
in
xor
ljmp
fldcw
int
stc
adc
es
sbb
inc
jg
and
hlt
arpl
nop
fisttpl
jnp
or
dec
ljmp
call
enter
or
and
add
and
xchg
mov
arpl
xor
adc
pop
xchg
psubsw
jnp
fs
je
sub
mov
mov
cltd
adc
outsb
dec
lea
idiv
xchg
xor
xchg
imul
sub
mov
adc
sbb
bound
hlt
add
jbe
jo
xchg
ret
fisttpl
decb
lock
cmpsl
jo
js
add
rcrl
dec
clc
mov
movsl
jp
mov
scas
test
mov
mov
lea
push
jmp
and
cwtl
cmp
movsl
add
or
sub
stc
popw
mov
jnp
mov
stos
mov
push
sbb
or
stos
cmp
daa
stc
test
orl
aad
jge
addr16
fnstsw
jp
xchg
rcll
push
fisubrl
mov
loop
cwtl
xchg
push
add
xchg
leave
or
ds
js
jmp
xchg
nop
adc
xlat
lods
cwtl
fcompl
xchg
lcall
push
rcll
push
fwait
sbb
xchg
cltd
push
outsl
xor
loopne
aad
cmp
jl
out
add
stc
lahf
test
jne
pusha
add
pop
addl
ret
shll
add
lcall
jbe
movsl
orl
cmp
mov
test
sbb
hlt
inc
sbb
add
lods
jg
nop
adc
js
pop
ret
pop
into
mov
mov
mov
cmpb
xchg
jns
mov
aad
adc
xchg
sbb
push
in
mov
imul
loop
and
mov
cld
nop
push
adc
add
out
outsl
cs
or
out
mov
imul
loop
ficomps
cli
daa
out
xchg
mov
mov
nop
adc
add
push
sahf
int3
pop
mov
into
pop
icebp
mov
jbe
sub
mov
sub
negl
lds
sbb
lret
mov
ljmp
adc
pushf
pop
xchg
testl
and
std
fmuls
jnp
pop
leave
lods
pop
cwtl
imul
popf
and
jge
fsts
in
jae
adc
in
ss
lcall
cmp
cld
mov
aad
loop
out
iret
push
test
loopne
xchg
mov
adc
ss
dec
out
mov
ficoml
aam
jg
std
sub
test
repnz
daa
pop
add
adc
outsl
push
mov
scas
inc
ret
jns
cmpsb
mov
mov
cmc
push
hlt
dec
test
movsb
fucomp
test
jl
inc
aaa
pop
push
sub
incb
neg
cs
cltd
jne
pop
decb
pop
pop
inc
sub
sbb
xchg
mov
xchg
inc
mov
loope
push
mov
pop
scas
jge
mov
stos
push
dec
or
or
mov
dec
adc
push
sub
jno
subl
xchg
pushf
pop
sub
dec
loope
fiadds
test
sub
mov
clc
cld
cwtl
jo
mov
mov
rcll
and
inc
jle
hlt
nop
xchg
cs
xchg
inc
dec
pop
imul
cmpsb
insl
in
repz
sbb
xor
pop
and
add
fisubrs
movsw
scas
test
int
jecxz
and
or
sub
sbb
daa
imul
push
push
arpl
mov
add
rcll
xchg
xchg
or
mov
add
repnz
inc
ret
jns
pop
mov
jp
out
incb
int
mov
pop
out
lahf
test
cmp
and
mov
pushf
test
jo
sub
xor
mov
out
xchg
lea
clc
in
adc
cmp
idiv
xchg
dec
dec
sub
scas
pop
adc
push
std
sub
in
push
add
sbb
les
jmp
jbe
xchg
push
stos
push
sbb
popa
or
imul
test
repz
and
fs
shrl
xchg
inc
adcb
stos
roll
test
adc
mov
xchg
add
movsb
jno
loope
xchg
lahf
jle
sub
push
sahf
lods
fwait
sbb
icebp
cmc
jp
jmp
sub
daa
jecxz
lods
pop
mov
jbe
xor
popf
mov
in
mov
push
sbb
cwtl
std
fldl
adc
aas
mov
jmp
mov
sbb
addr16
inc
lret
test
jns
jmp
xlat
das
test
negb
lret
addr16
lds
sbb
leave
f2xm1
roll
adc
push
rcrb
sub
xchg
mov
ss
enter
nop
adc
das
jnp
xor
xchg
rorl
stos
stos
xor
adcl
adc
sahf
scas
push
aam
push
sbb
dec
add
pop
xchg
push
sub
outsb
test
test
scas
jnp
add
inc
or
add
xchg
clc
gs
lock
or
mov
sub
lahf
cld
mov
mov
pop
add
in
les
loop
inc
rorb
scas
test
dec
jnp
ret
xlat
jp
jp
or
adc
xor
pop
push
test
push
and
xchg
into
in
mov
adc
add
std
fnstcw
clc
or
rcll
or
add
xchg
fs
sub
push
dec
lahf
xchg
roll
out
add
xchg
dec
cli
jecxz
xchg
stc
addr16
pop
test
ret
pop
test
hlt
xchg
xchg
ss
xchg
mov
mov
xchg
add
rcrl
push
mov
mov
cwtl
std
fmull
mov
adc
push
adc
sbbl
in
sti
popa
cld
dec
add
mov
mov
jmp
jno
or
add
iret
out
mov
mov
push
push
int3
jecxz
dec
push
es
enter
mov
stos
rcrl
adc
test
add
dec
out
andb
dec
pop
xor
cmp
daa
add
or
xchg
test
or
sub
test
pushf
fs
out
sub
xor
inc
xchg
mov
stc
adc
shll
mov
stos
sbb
fisttps
mov
test
jl
sub
and
cmp
lds
inc
ret
movsb
jle
dec
jne
popl
cmp
push
push
and
test
cltd
pushf
and
test
sti
fldl
test
in
std
sub
addl
xor
aas
loope
bnd
out
int
dec
add
and
pop
sub
mov
bound
adc
imul
nop
adc
cmpsl
fs
mov
jnp
das
out
xchg
notl
aam
out
xchg
das
popl
cmp
dec
and
aad
lahf
xchg
shll
push
icebp
scas
subb
ds
pusha
loope
xchg
arpl
or
pop
lcall
inc
ds
lcall
test
cmp
mov
pushf
jle
fcmovnbe
in
cs
or
fs
out
std
mov
jnp
ljmp
test
xchg
imul
mov
push
or
stos
adcl
repnz
cmpsl
imul
xchg
test
xchg
adc
adcl
daa
xor
mov
jne
inc
pop
mov
jle
fwait
cltd
test
rcll
inc
adc
cmpb
mov
push
and
sub
ja
mov
loopne
or
out
cmpsb
mov
xchg
das
pop
pop
outsl
fsubrl
cli
js
push
and
xor
adc
push
and
mov
dec
hlt
jle
sub
fmuls
insb
add
out
and
or
xchg
dec
pop
clc
adc
dec
int
sub
das
inc
jg
xor
jecxz
mov
gs
clc
loope
mov
add
mov
repnz
cvtps2pi
andl
dec
pop
cwtl
lret
repnz
and
cmp
jnp
cmpsl
in
jmp
or
popf
fwait
mov
gs
mov
push
out
data16
bound
fcoml
outsl
jo
or
imul
sbb
mov
cmp
mov
add
insb
xor
adc
clc
cld
xchg
test
popf
mov
jg
push
push
rorl
or
arpl
adc
out
xchg
jne
add
stos
jo
pop
xchg
leave
call
out
int3
xchg
cmp
dec
jno
adc
xlat
dec
adcl
or
rorb
adc
ret
lods
gs
outsl
js
or
sub
loop
nop
loop
std
mov
jnp
xchg
cmp
test
xchg
push
and
xchg
cltd
or
add
push
inc
nop
adc
ss
jle
or
out
xchg
call
nop
mov
mov
and
outsl
xor
imul
scas
pop
sbb
jle
outsl
dec
daa
cmp
aad
fisubrs
push
mov
push
xchg
jnp
stos
dec
lods
das
push
or
aam
inc
mov
cmc
in
xchg
pushf
or
add
jl
jne
push
hlt
mov
or
in
int
repnz
adc
jno
or
call
sub
mov
push
incl
stos
cmp
push
add
fimuls
popa
add
out
mov
test
xchg
in
bound
test
pop
inc
lods
sbb
roll
cmp
xchg
outsl
inc
xchg
popf
repnz
jge
enter
cs
jne
movsl
lods
test
jecxz
dec
movsb
rcrl
push
int
loop
lds
and
mov
adcb
adc
js
push
leave
jae
or
add
mov
aaa
call
jp
loopne
shrb
sub
xor
lahf
xor
mov
sub
test
ja
scas
test
adc
fwait
xchg
iret
aas
in
ss
push
pop
mov
scas
mov
jecxz
xchg
lds
sbb
push
fdivl
test
jo
adc
popf
sub
sub
cmp
fstpt
fistpll
xor
mov
xor
push
testb
xor
out
mov
cmp
mov
out
mov
ss
dec
pop
decb
or
lods
jne
lods
add
outsb
and
push
cmp
or
or
jecxz
lds
scas
mov
ja
dec
jns
xchg
imul
adc
push
xor
adc
inc
int3
jns
push
lret
pop
jbe
push
std
loope
data16
inc
int3
jns
cmpsb
mov
aaa
sbb
xchg
out
adc
test
add
jbe
movsb
jnp
mov
jnp
and
stos
mov
add
int
sarl
xorl
mov
test
cltd
adc
nop
fdiv
test
int3
jns
movsl
mov
dec
stc
rcr
subl
out
push
std
push
test
mov
clc
mov
fcomp
iret
pop
call
lock
mov
sti
outsl
push
outsb
inc
sub
incb
mov
out
cltd
ret
call
push
std
adc
ja
sbb
add
pop
fadds
je
pop
mov
pushf
adc
push
in
lret
popa
add
mov
sub
lods
xor
js
jmp
mov
popf
adc
inc
repz
xchg
shlb
jl
pop
adc
sbb
push
imul
mov
ficoms
dec
imul
dec
cmp
in
scas
data16
ret
or
incb
int
add
je
dec
insl
xor
call
sahf
or
jecxz
cli
movsb
test
jle
mov
mov
sbb
fcomip
jnp
imul
std
mov
pop
imul
jne
js
insb
rsqrtps
hlt
test
mov
das
or
or
movsb
fcmovnu
sbb
cwtl
jo
pop
clc
adc
fucomi
fwait
push
addb
mov
leave
repz
pushf
stos
imul
add
mov
xchg
cld
xchg
test
xlat
fldt
pop
test
icebp
xchg
jl
sub
std
ret
orb
xor
mov
cmpsb
mov
pop
test
hlt
divb
xchg
addr16
cli
sbb
jmp
repz
xor
inc
pop
jp
pushf
aad
imul
aaa
out
lahf
fisubl
fildl
int
sub
notl
ljmp
mov
xor
push
push
adc
push
icebp
adc
subl
sub
mov
push
out
add
push
imul
sti
out
repz
mov
scas
pop
push
adc
or
pop
xchg
adc
dec
loop
fwait
fs
scas
in
aad
fwait
idiv
mov
dec
ds
sbb
dec
mov
sub
arpl
scas
mov
dec
in
mov
mov
push
pop
inc
ret
mov
fs
add
loop
add
adc
outsl
pop
int3
out
fdiv
sbb
inc
mov
xor
dec
lds
mov
mov
pop
xchg
les
movsb
jge
sti
call
mov
ja
pop
sub
fnstenv
xchg
xchg
mov
sti
add
subl
xchg
mov
pushf
adc
mov
dec
sub
aad
loop
clc
outsl
jecxz
xchg
and
mov
mov
jnp
ret
cmc
xlat
pop
test
hlt
xchg
rorl
xchg
adc
add
push
test
jmp
sbb
call
inc
test
stc
cld
pop
movsl
out
hlt
mov
adc
aad
lahf
xchg
rcll
push
std
jne
push
popf
xchg
push
cli
pop
fnsave
add
jge
cli
popa
in
ja
in
arpl
adc
roll
lcall
lods
popf
xor
aad
push
pop
jp
ja
in
jp
adc
imul
lods
xchg
xchg
adc
in
xchg
adc
bound
test
sub
mov
pop
test
icebp
adc
daa
sub
push
cltd
adc
push
pusha
ret
les
pop
push
clc
push
sbb
push
out
cwtl
dec
icebp
jp
insb
jbe
movsb
subb
dec
adc
push
pop
ds
fwait
ret
jle
cmp
push
sub
popf
loop
push
and
xor
addr16
jg
aad
lahf
xchg
shll
push
ljmp
cli
popa
loop
imul
ja
and
xchg
adc
add
and
out
test
sbb
xchg
std
mov
imul
aam
add
mov
push
push
mov
pop
nop
adc
push
out
scas
test
out
std
fisubl
push
push
roll
add
add
xchg
cltd
xchg
xchg
ss
xchg
lock
mov
out
movsl
pop
sti
adc
adc
incb
out
sbbl
rcrl
ja
mov
push
bound
std
cmp
sti
xor
and
or
xchg
out
fildl
adc
cli
pop
or
cltd
push
inc
loopne
sbb
and
outsb
call
xchg
push
sbb
or
fsts
insb
mov
stc
dec
ds
add
jge
test
sub
cmp
inc
lcall
aas
jmp
jb
dec
cmpsl
outsl
dec
add
lcall
mov
daa
addl
out
test
jnp
xor
xor
adc
add
dec
aaa
ljmp
add
adc
sbb
push
lahf
mov
cli
aaa
ljmp
adc
adc
cmpsb
idiv
jecxz
outsl
sub
roll
push
cwtl
repz
cld
out
inc
xchg
mov
imul
out
or
cmp
mov
js
je
push
mov
bnd
jbe
movsl
jle
lock
xchg
mov
pop
mov
ja
push
jbe
push
dec
hlt
push
lea
lcall
lahf
xchg
sub
adc
sahf
xor
sbbl
pop
and
or
mov
dec
arpl
test
add
add
lods
cwtl
scas
int3
mov
in
mov
cltd
adc
outsb
and
test
call
test
xchg
or
stc
jno
bnd
dec
in
ret
pop
inc
and
lds
sbb
pop
add
outsb
in
xchg
fisubl
cwtl
mov
adc
fs
stc
daa
test
lods
jmp
cmpsl
and
bound
out
insb
insb
mov
pop
fwait
cmp
cmpsb
stc
rclb
jbe
in
adc
pop
adc
adc
mov
xchg
into
cmp
dec
lret
inc
ret
adc
adcb
jecxz
ja
in
xchg
js
add
popf
pop
xchg
lcall
aaa
cwtl
xchg
adc
add
rorl
push
lret
adc
in
fs
arpl
adc
inc
pop
inc
jecxz
xchg
lds
nop
fmuls
mov
pop
test
outsl
out
addr16
lock
lods
ja
in
out
add
inc
jmp
lcall
sub
lret
jno
push
and
mov
insb
imul
pop
pushf
popf
dec
or
mov
pop
adcb
push
push
out
aam
jg
inc
add
repnz
filds
je
mov
sbbl
aas
pop
jb
jnp
xor
add
or
repz
cld
xchg
in
imul
cli
xor
loopne
mov
push
std
pop
test
cmp
test
icebp
jnp
jp
pop
test
jmp
aad
lahf
xchg
roll
in
push
fsubrl
push
sbb
arpl
test
push
cs
inc
xlat
push
test
stc
or
aad
jecxz
sbb
insb
ss
adc
cmp
mov
outsl
xor
out
xor
fstps
mov
xor
mov
or
ret
jns
cmpsb
mov
add
stc
andb
outsl
sahf
pop
jbe
fwait
inc
setle
mov
cmp
jno
adc
add
or
imulb
add
insb
out
jl
add
xchg
adc
push
fidivrl
roll
push
les
rorb
incb
sar
mov
decl
std
jnp
dec
test
xchg
or
addr16
nop
cmpb
adc
adc
mov
or
jbe
adc
jo
popa
loopne
in
mov
push
shl
test
mov
faddl
lock
sub
sbbl
add
scas
rcll
dec
pop
leave
mov
popf
imul
pop
sbb
jle
mov
in
ja
in
pop
or
out
and
lcall
jnp
roll
xchg
stc
ds
loopne
inc
mov
aas
dec
xlat
mov
ja
das
dec
imul
mov
inc
out
cmpl
add
in
clc
imul
or
mov
jp
push
pop
movsl
arpl
cmc
add
pop
jbe
sub
or
xchg
movsl
mov
cmp
fwait
insb
and
andl
popf
add
dec
out
dec
sbb
sahf
scas
mov
mov
std
aas
or
lods
iret
push
and
or
ja
mov
cmp
sbb
jmp
shll
or
xchg
shlb
sbb
movsb
xor
jmp
xchg
mov
mov
xchg
pop
inc
sub
and
sbb
push
popf
xchg
adc
test
clc
xor
adc
pop
xchg
mov
adc
sub
lret
pop
loopne
xchg
mov
mov
mov
les
xor
pop
test
push
add
sarb
pop
iret
std
jmp
outsl
xor
adc
test
inc
test
mov
or
adc
xchg
jmp
bound
loope
xchg
rorb
push
add
inc
bound
es
faddp
sbb
pop
cld
add
dec
out
mov
dec
lods
insb
inc
dec
adc
adc
aad
outsl
lods
bswap
ljmp
xchg
sbb
aad
loopne
sbb
nop
xchg
lods
jne
cltd
call
pop
bound
idivl
daa
gs
cmc
cld
movsb
dec
mov
idivl
mov
std
cmp
mov
mov
mov
lds
out
xor
mov
jmp
mov
xor
jno
xchg
mov
arpl
jge
imull
sbb
imul
and
js
lahf
jle
pusha
into
shrb
adc
dec
push
outsl
push
jecxz
je
cli
das
scas
lret
add
mov
daa
stos
hlt
dec
test
push
hlt
cmpsb
jbe
movsl
xor
out
jg
ds
pop
mov
rcrl
lea
iret
jmp
ret
test
xor
adc
push
mov
dec
jnp,pn
xor
xchg
dec
xchg
push
sbb
add
xchg
xchg
adc
dec
adc
aam
lahf
xchg
sarl
push
cli
aad
dec
xor
loop
aam
adc
das
pop
mov
mov
inc
imul
out
xor
popf
or
xor
dec
lock
cmp
test
jl
sbb
inc
and
adc
add
or
pop
or
call
sub
mov
filds
mov
test
cltd
xchg
std
pushl
ret
xchg
inc
lods
movsl
xor
test
mov
mov
call
dec
fwait
dec
sbb
adc
and
and
or
enter
mov
pop
call
adc
adc
into
mov
mov
pop
cwtl
xchg
jmp
jae
pop
mov
scas
test
dec
in
ficomps
mov
inc
or
iret
loop
jne
sbb
push
call
jnp
push
arpl
insb
movsl
pushf
or
sub
cmp
jnp
rol
ja
sbb
xchg
inc
xchg
testl
scas
jns
add
jle
xorb
cld
mov
push
pop
or
cmp
out
stos
cld
cmpsb
sarl
loopne
decl
or
dec
in
shlb
lcall
aam
or
leave
out
fcoml
adc
lods
xchg
mov
mov
cltd
adc
in
mov
std
fadds
jnp
mov
adcl
dec
xlat
sub
mov
cwtl
adc
loop
fld1
das
fldenv
dec
add
mov
sub
xor
mov
daa
out
aas
add
adc
push
mov
jnp
frstor
adc
fldz
mov
out
adc
adc
outsl
loope
jle
std
pop
test
sub
adc
repnz
pop
fldcw
in
xchg
cltd
adc
out
outsl
cmp
adc
xlat
out
mov
mov
adc
mov
iret
xor
add
xchg
aad
lods
orb
dec
repnz
imul
adc
mov
inc
xor
push
mov
xor
sbb
inc
cwtl
inc
popf
xor
pop
testl
sub
sub
add
sbb
dec
cmpsb
jge
lret
test
pop
gs
ds
jo
add
call
inc
push
mov
sbb
mov
lods
lods
aam
lock
call
dec
or
jnp
cmpsb
sub
fmuls
clc
adc
les
sbb
mov
ss
push
adc
test
inc
cltd
push
sti
flds
test
insl
std
test
xchg
fistpll
fisubrl
inc
sub
loopne
mov
cmc
xor
imul
push
xchg
lds
sbb
loope
icebp
and
xchg
fisubl
cwtl
mov
adc
push
push
add
xchg
ljmp
or
mov
or
add
sub
lahf
out
cli
faddl
test
jge
lds
rcll
push
fwait
inc
fistl
mov
push
adcl
pushf
in
sub
dec
sti
fiadds
test
mov
dec
xchg
mov
cld
xchg
pop
adc
sbb
aad
std
fcompl
mov
pop
jnp
cltd
adc
sub
cli
inc
sub
adc
and
test
cltd
popa
adc
add
or
loope
xor
stc
jg
xor
mov
cmp
outsl
dec
imul
dec
xor
push
scas
jge
lahf
jl
push
inc
sub
daa
mov
mov
scas
or
sarl
movsl
cmpsl
fistps
hlt
fwait
popa
mov
pop
or
test
adc
jb
out
push
mov
mov
xor
mov
mov
mov
and
or
or
pop
lods
movsb
jle
mov
std
inc
or
dec
or
fistl
dec
popa
int
or
dec
cmp
or
add
sbb
xchg
inc
pop
mov
stos
andl
jp
aaa
dec
mov
inc
cmp
in
or
xor
insl
test
inc
or
adcl
clc
adc
mov
push
enter
xor
lahf
xchg
testl
nop
adc
in
shrl
adc
gs
push
loopne
insb
test
jae
dec
and
pop
test
hlt
xchg
mov
cltd
adc
add
sub
jp
daa
std
mov
xchg
push
xchg
inc
lock
or
incb
sarb
xor
je
pop
mov
add
push
push
dec
sahf
jmp
mov
jp
jg
in
adc
popf
shrb
mov
or
adc
mov
push
add
negl
sbb
add
out
outsl
inc
repz
xchg
lcall
adc
fucomp
xchg
push
sahf
cmc
xor
in
mov
cmp
or
mov
mov
jge
stos
nop
cmc
mov
popa
test
push
xor
mov
sub
jnp
inc
decb
adc
in
in
outsl
jns
add
sub
sub
xchg
lea
xchg
mov
adc
out
xchg
mov
test
pushf
adc
fcom
jmp
in
adc
sub
pop
out
test
push
inc
or
rcrl
push
fwait
je
xchg
pushf
or
cwtl
addr16
push
and
cwtl
clc
out
xchg
into
or
adc
xchg
jl
sub
jecxz
xchg
lds
sbb
and
mov
daa
fldcw
in
xchg
cltd
adc
ljmp
sar
pop
icebp
lcall
sub
loopne
push
add
sbb
add
lods
mov
jnp
scas
xlat
or
push
adc
fsubrp
mov
add
addr16
adc
pop
sub
cmpsb
cli
filds
test
imulb
push
push
test
jnp
jnp
inc
xor
orl
adc
sbb
pop
cmpb
inc
xor
nop
fimull
cld
xchg
sahf
xchg
and
xor
xchg
push
push
rorl
add
add
sbb
xchg
jo
push
mov
push
dec
jnp
dec
mov
rorb
inc
inc
test
dec
cmpsb
mov
insl
sub
cmp
in
sbb
ljmp
inc
pop
mov
ja
adc
and
mov
mov
sbb
mov
repnz
push
in
inc
popa
in
add
xor
mov
mov
xor
jo
ljmp
daa
pop
jmp
xchg
xchg
sbb
fsts
pushf
ss
pop
aad
sbb
nop
xchg
std
adc
fdivrl
add
xchg
repnz
lcall
je
push
mov
inc
xlat
gs
div
xchg
xchg
dec
in
gs
mov
adc
testb
dec
cmp
cmp
or
sub
in
inc
xchg
shl
jae
and
mov
clc
stos
mov
mov
xchg
lret
outsb
test
add
push
inc
sub
cltd
cld
or
in
bound
arpl
mov
add
xchg
fldl
push
inc
repnz
nop
fdivp
cs
xchg
mov
adc
adc
adc
adc
rorl
cmp
xor
jecxz
gs
cwtl
clc
out
jo
pop
add
adc
outsl
pop
std
jg
call
fiadds
mov
pop
das
divb
rcrb
outsl
nop
push
loop
fstpt
pop
pop
xor
mov
mov
bnd
push
lcall
movsl
out
push
sub
fistpl
adc
xor
out
xchg
test
pop
in
fwait
cld
xchg
add
test
pushf
jl
es
add
xchg
hlt
rep
pop
xchg
loop
inc
add
adc
rcrb
xor
push
lods
cmpsl
add
daa
pop
stc
sbb
adc
ss
and
add
repnz
andb
adc
sbb
scas
pusha
adc
insb
mov
adc
xchg
sar
pop
pusha
adc
xchg
adc
add
mov
das
imul
push
adc
lahf
adc
fldt
sub
adc
cli
dec
insl
pop
inc
bound
adc
sbb
loopne
sbb
rcll
push
fwait
adc
xchg
xchg
or
out
int3
adcb
pop
add
adc
mov
popa
or
inc
sub
rorb
jbe
sub
xor
add
cmc
mov
sbb
dec
int3
push
test
xchg
test
jecxz
push
arpl
sub
js
icebp
add
sub
inc
pop
jecxz
xchg
lds
sbb
cli
sub
ja
inc
mov
inc
xchg
ljmp
test
out
addr16
sti
jb
jp
xchg
shrl
push
loop
add
sbb
mov
or
jg
prefetcht0
sti
filds
test
rcrb
mov
jo
sbb
faddl
mov
xchg
push
sbb
or
xchg
cmpsb
or
insb
mov
jecxz
loopne
add
xchg
mov
mov
mov
add
sub
aaa
test
idivl
and
add
adc
test
cltd
adc
sub
jno
inc
mov
lcall
shrl
and
sub
cli
movsb
stos
test
jle
rcrb
jle
inc
jmp
int3
aad
bound
push
mov
jns
movsl
mov
nop
mov
xor
mov
cmpsb
cmpsb
sbbl
sti
pusha
mov
dec
push
clc
adc
mov
mov
popf
pop
lea
xchg
push
cmp
pop
fld1
adc
popa
fmuls
inc
sub
test
cmp
sub
xor
cmpb
cmp
adc
test
test
or
lods
cwtl
jnp
xor
jmp
sub
jg
cmpsl
sbb
sub
aam
xchg
popf
or
xor
push
mov
adc
ficoml
adc
fmulp
mov
sub
sub
mov
ret
pop
lret
lahf
neg
mov
jg
cli
push
daa
push
aad
adc
inc
and
data16
imul
scas
pop
push
loopne
mov
cld
jno
mov
into
imul
xor
jmp
cwtl
loopne
sbb
add
jmp
outsl
cmp
cld
xchg
jecxz
mov
sahf
push
stos
jl
dec
orl
jo
xchg
into
jns
aad
stc
cltd
adc
add
popf
je
shlb
sbb
decl
nop
outsl
adc
cli
adc
fucomp
mov
xchg
sub
fistpl
or
mov
insb
xor
adc
outsb
cmp
cmpsl
mov
sub
pop
leave
mov
pushf
iret
inc
cltd
aad
loope
and
jecxz
shl
jmp
adc
add
push
scas
insb
jnp
dec
push
xchg
dec
pop
xchg
push
adc
or
out
repz
aad
filds
add
push
and
push
fcmovb
test
fsubrp
jno
adc
jecxz
in
bound
pop
ficoms
jecxz
daa
popa
sti
dec
add
test
lds
jns
in
dec
jg
nop
and
sub
outsb
outsl
pop
sbb
ja
shll
mov
outsl
pushf
je
and
pop
shll
lret
mov
testb
sbb
cmpsb
mov
ja
adc
lock
out
shl
mov
mov
cmpsb
shll
sub
negl
push
mov
fs
cmp
aad
lahf
xchg
rcrl
push
iret
pop
and
xchg
cs
pop
fucomip
mov
sbb
push
add
cli
mov
stos
insb
pop
or
and
std
xlat
testb
mov
leave
repnz
adc
decb
add
inc
push
mov
out
mov
ficoms
mov
pop
xchg
inc
push
mov
jge
sbb
mov
add
movsl
cli
jg
pop
mov
or
or
xchg
inc
pop
adc
int
jae
jl
lahf
jnp
xchg
test
adc
and
or
push
aam
sub
shlb
popa
pop
pushf
sbbb
nop
adc
add
filds
jno
fmuls
hlt
push
cs
in
cld
mov
add
dec
jmp
jne
adc
inc
mov
ret
mov
cmc
adc
inc
jne
popa
xchg
out
mov
repz
es
mov
mov
dec
jnp
cmpb
sbb
test
call
cmp
add
jmp
repz
push
popf
je
mov
xchg
or
push
cwtl
xchg
add
insl
push
inc
pop
addr16
xchg
out
dec
xchg
jae
sbb
mov
lahf
popf
mulb
loope
fwait
lahf
xchg
fiaddl
xchg
cmp
adc
std
iret
bound
in
das
jecxz
xchg
cmp
test
push
add
push
mov
mov
adc
hlt
cmpsl
test
mov
inc
or
jne
inc
add
out
jns
dec
shll
addl
mov
sbb
push
call
call
xor
popa
dec
adc
dec
lahf
xchg
shll
push
aam
jns
jae
push
cli
pop
fdivl
sub
std
mov
pop
int3
adc
int
and
inc
outsb
cmp
lret
inc
push
outsl
dec
rolb
int3
dec
add
stos
mov
mov
addr16
lock
mov
mov
mov
pushf
outsb
aam
or
subl
push
push
adc
test
adc
sub
mov
xchg
jnp
repnz
adc
add
roll
mov
push
cmp
sub
add
mov
and
push
xor
xor
ja
arpl
std
pop
jae
sbb
fists
decb
cmp
call
cs
jg
pusha
imul
mov
int3
adc
fs
sbb
pusha
rcrl
and
rorl
stos
xor
push
cli
jl
lahf
orb
arpl
lea
orl
adc
sbb
xchg
jno
dec
cmp
lock
dec
cmp
mov
mov
sub
or
mov
cmp
sbb
clc
adc
jle
add
stc
shll
dec
pop
fidivs
xchg
outsl
pmullw
adc
in
xchg
mov
addr16
adc
adc
pop
data16
jo
push
fists
lcall
dec
mov
aam
pmuludq
inc
xchg
jns
push
mov
xor
test
add
dec
adc
xchg
xchg
test
dec
push
clc
adc
mov
mov
cmc
sub
and
insb
out
jno
test
sti
fldl
test
pusha
fs
out
inc
out
cwtl
xchg
mov
mov
mov
dec
adc
pushf
sub
arpl
adc
sarb
clc
mov
rorl
mov
bound
out
popf
cld
xchg
and
add
and
out
sub
ret
pushf
push
add
xchg
fchs
lods
mov
dec
imulb
gs
sti
fiaddl
test
xchg
lret
cs
mov
xchg
fistps
push
popw
in
fwait
cld
xchg
dec
jb
push
repnz
repz
loope
out
xchg
jae
movsl
fistl
mov
in
xchg
mov
xor
mov
insb
js
andb
sti
std
mov
cwtl
imul
popf
mov
bound
inc
aad
lahf
xchg
shll
push
aad
jnp
cs
push
cli
pop
fucom
mov
out
in
test
hlt
adc
add
adcl
sub
jbe
loope
add
mov
xor
inc
xor
xchg
jo
dec
int
pop
dec
mov
dec
mov
cwtl
pop
pop
xchg
mov
andb
xor
mov
cmp
jecxz,pn
stos
push
enter
fisttpl
xchg
dec
or
dec
in
jge
inc
aad
cwtl
lock
mov
stc
push
pop
sti
out
and
sbb
sbb
sub
adc
insb
xor
out
xchg
xchg
xchg
mov
mov
hlt
cwtl
cmc
jmp
dec
and
daa
sub
gs
jnp
rol
ja
sbb
repnz
mov
adc
mov
pop
add
lods
xchg
push
mov
cltd
adc
cmp
std
xchg
pop
inc
add
xchg
imul
iret
add
sub
xor
cltd
adc
pop
scas
insb
jnp
push
mov
xchg
sbb
push
pop
rorl
mov
aad
fildll
dec
add
and
nop
adc
aaa
outsl
inc
idiv
cwtl
jns
adc
xchg
fwait
add
jmp
adc
outsl
loope
iret
xor
lds
xchg
adc
add
loopne
and
std
fdivs
test
sbb
leave
mov
adc
xor
adc
push
mov
push
outsl
cmp
cld
xchg
gs
lret
popf
cmp
imul
aam
decl
push
divb
icebp
pop
mov
filds
push
add
ret
js
add
roll
fs
xchg
std
ficoms
adc
sbb
int
addr16
loopew
lahf
jns
push
lds
hlt
pop
bound
lock
pop
mov
repz
sub
xchg
nop
pop
add
in
mov
ja
push
xor
and
stos
fnsave
sbb
out
inc
xchg
loopne
pop
add
mov
mov
jle
pop
or
mov
je
xor
lods
or
call
or
ficoml
iret
jne
pushf
test
push
jno
test
scas
jg
add
fbstp
dec
xor
popl
pop
div
icebp
jnp
push
fwait
test
fstps
or
mov
sub
mov
mov
aaa
fdivr
mov
andb
xor
jecxz
lock
daa
pop
add
xchg
lods
mov
mov
xor
inc
pop
mov
out
test
pop
cmc
xor
mov
cmp
scas
xor
dec
out
lcall
jmp
ds
or
dec
icebp
or
push
sbb
jno
sbb
sbb
out
lds
pop
push
add
test
cltd
push
mov
push
mov
jnp
sahf
push
push
mov
pop
mov
sahf
insb
add
hlt
pushf
rcrl
sub
subl
dec
inc
sbb
mov
stc
out
test
insb
jmp
add
jge
xchg
push
and
test
cltd
bound
hlt
add
aad
int
pushf
push
xchg
inc
lahf
jns
cmpsb
mov
test
inc
sbb
push
fmul
sti
add
inc
or
ret
or
jns
sbb
adc
sbb
cmpsl
test
loopne
mov
test
cltd
xchg
roll
mov
xor
and
or
insb
or
ror
sbb
and
insb
inc
repz
jno
xorb
fs
cmp
arpl
int3
push
xlat
push
out
or
push
in
mov
jmp
adc
daa
fiadds
xlat
lret
mov
test
cltd
adc
lds
mov
sub
xor
clc
or
dec
in
mov
in
int
ret
cltd
lahf
cmp
out
mov
adc
cwtl
or
test
xor
jecxz
rcll
int3
fs
lcall
ss
lret
sarb
outsl
cmp
cld
xchg
ja
mov
scas
pop
sbb
xor
push
adc
jmp
dec
fcomi
aam
lahf
xchg
sarl
int
mov
es
pop
fidivs
add
sub
mov
or
cli
mov
sti
testb
shll
adc
xchg
jbe
movsl
jge
dec
addr16
loopne
movsl
mov
ja
fwait
dec
enter
xchg
fwait
ret
jle
in
stc
sub
mov
fstpt
repz
bound
sub
sub
add
rorl
adc
xchg
xchg
push
outsl
xor
fwait
pop
into
lret
jns
ret
or
mov
push
push
jnp
movsl
nop
inc
test
imul
dec
add
inc
mov
sub
add
pop
push
sbb
lcall
clc
adc
jne
adc
shll
lahf
add
xchg
add
xchg
scas
mov
cmp
shll
push
mov
mov
add
lret
movsl
flds
and
jge
or
xchg
mov
je
fcompl
or
decb
sub
add
lahf
xchg
jns
test
and
loope
rcll
mov
loope
xchg
adc
add
std
fadds
pop
adc
sbb
out
cld
cmp
enter
pop
loop
ljmp
addb
dec
cmpsb
mov
gs
stos
add
xlat
xor
push
inc
jbe
movsb
jnp
fwait
dec
sub
outsl
int3
mov
fildl
loopne
or
adc
test
das
pop
jmp
jb
dec
cmp
add
lahf
inc
and
inc
bound
cmpsl
cli
mov
inc
popf
outsl
inc
xchg
jg
popf
test
movsb
subl
movsl
lods
test
sti
sub
adc
imul
mov
jo
jmp
jb
dec
push
outsl
push
jnp
xchg
pop
stc
fstl
xor
inc
jg
xchg
fdiv
sbb
mov
pusha
jae
lsl
or
test
add
and
stc
rorb
mov
mov
inc
lea
jge
test
sbb
js
add
jl
sub
in
ja
in
int
fsubl
jno
lcall
lods
adcb
adc
js
push
mov
add
ret
data16
lods
test
cltd
movsb
test
sbb
std
cmp
lea
mov
arpl
mov
test
sti
loopne
test
lock
call
xchg
sbb
cwtl
std
fstpt
repz
out
xchg
inc
sub
mov
add
jne
aas
test
clc
sahf
fistl
push
push
add
adc
outsl
push
mov
adc
inc
cmp
or
add
out
out
xor
mov
lret
or
loopne
clc
add
iret
adc
add
mov
popl
mov
adc
imul
dec
jmp
sub
or
imul
stc
inc
movsb
mov
xchg
ljmp
lock
in
das
mov
mov
negb
jge
xchg
movsb
scas
test
mov
cmp
inc
sahf
inc
popa
adc
roll
sbb
xlat
jle
in
pop
in
ja
in
insb
cmpsb
adc
and
pop
lcall
pop
out
cmp
mov
out
test
inc
ret
jns
movsl
mov
dec
jmp
punpcklbw
push
in
popf
in
jo
nop
add
setne
and
inc
cmp
adc
mov
loope
data16
adc
xchg
scas
mov
nop
adc
loopne
mov
push
push
jmp
test
push
in
fisubl
faddl
lcall
adc
mov
scas
xchg
adc
pop
add
pop
mov
jle
notl
cld
xchg
repz
es
xchg
push
sbb
add
cli
push
or
jecxz
sbb
insb
xor
add
and
std
f2xm1
mov
std
fcomps
sub
sbb
sub
add
or
in
pop
outsl
xor
xchg
cli
je
mov
in
fwait
cld
xchg
xorl
mov
mov
lahf
les
cwtl
adc
mov
and
gs
pop
stc
adc
fimull
add
insl
out
pushf
rolb
jns
jge,pn
and
sub
ds
lods
sbb
mov
icebp
fsubrs
dec
je
and
add
rorl
xchg
adc
add
push
cmp
jnp
sbb
gs
xlat
loop
rorl
xchg
adc
add
scas
imul
andl
out
mov
into
add
and
sbb
test
cli
fldl
test
ret
inc
jbe
sub
mov
jp
paddq
out
test
cwtl
clc
out
sti
sbb
sub
nop
gs
fdivrp
or
xor
or
js
push
push
call
push
test
ja
sub
fisttps
std
push
fisttpll
or
dec
out
iret
popf
adc
cmp
pop
cli
adc
hlt
push
insl
pop
in
stos
xor
pop
fld1
stc
pop
loopne
add
xchg
and
in
mov
fdivrp
ret
fldt
inc
shrl
lds
nop
fdivr
or
mov
lret
pop
xchg
fists
out
fildl
stc
sub
xor
pop
test
mov
scas
mov
sub
xchg
notb
jmp
lock
push
arpl
out
shll
xor
push
sub
cmp
sti
flds
test
jno
pop
ljmp
add
shl
les
or
adc
push
adc
sub
cs
inc
lahf
jns
movsl
mov
adc
mov
std
cmc
lahf
stc
leave
mov
pushf
adc
idivb
repz
fdivrl
inc
or
xchg
sbb
popa
int
adc
repz
mov
add
sbb
mov
cltd
adc
int
pop
jnp
xor
mov
adc
xor
xchg
jns
add
and
out
mov
xchg
mov
icebp
push
cmpl
icebp
mov
jnp
dec
mov
add
jge
fistl
adc
imul
mov
sbb
push
jmp
xor
rcl
jecxz
fiadds
shlb
add
mov
and
test
roll
adc
icebp
cltd
cmpsl
pop
in
fisubrs
cwtl
adc
push
pop
test
je
push
push
xlat
aaa
test
idiv
mov
jns
sti
mov
add
push
imul
push
aas
jecxz
inc
test
lea
roll
movl
dec
jp
push
xor
call
lahf
andl
pop
adc
nop
xchg
mov
push
xor
popf
jl
cwtl
xchg
xchg
pop
stos
test
cltd
adc
xchg
push
insb
testb
xchg
xlat
xchg
jnp
xor
mov
or
bound
adcl
xchg
mov
cltd
adc
and
dec
jnp
mov
pop
or
decb
fsts
js
or
bound
fwait
mov
call
in
je
out
cmpsl
test
xor
iret
dec
push
mov
mov
popa
xchg
adc
push
in
lods
popa
fisttpll
inc
es
or
sarl
sub
xor
je
out
sbb
cmp
test
cltd
xor
mov
push
pop
repnz
xor
mov
xchg
sub
add
gs
cmp
mov
add
sti
xlat
pop
test
hlt
push
sbb
sub
mov
mov
inc
jge
or
icebp
jle
in
inc
fwait
mov
std
lods
push
xchg
in
adc
mov
stos
popa
gs
mov
adc
add
in
fwait
shl
and
or
mov
and
negb
xchg
inc
add
push
lods
push
push
mov
dec
add
sbb
adc
jg
adc
fwait
mov
cmpsl
lods
pop
movb
add
mov
adc
jmp
add
rcll
insb
xor
mov
xchg
hlt
xchg
js
mov
push
xor
sbbl
jp
ljmp
scas
pusha
push
jnp
iret
add
addr16
js
pop
lret
adc
loope
lds
cmp
inc
int3
jns
movsl
mov
mov
cmp
test
das
nop
cmp
pop
push
jl
or
jne
movsl
jnp
mov
cmp
mov
cmp
rorb
cld
jo
mov
lret
nop
push
push
rcll
jmp
dec
test
aad
lahf
xchg
rcrl
push
ficomps
jp
xchg
es
pop
fidivrs
dec
sbb
ficomps
adc
push
lret
push
push
sbb
mov
inc
movsl
xchg
pop
in
aaa
std
adc
dec
mov
sub
sbb
push
ljmp
fld
xorl
sub
nop
xchg
push
push
jo
sub
xor
mov
lock
fcomi
lcall
mov
cwtl
xlat
add
mov
ja
jle
xor
push
pop
cli
adc
dec
mov
sub
mov
adc
lods
adc
adc
fldl
test
and
add
das
out
popf
addl
cmp
adc
fucomi
mov
or
xchg
adc
or
add
sbbl
cs
xor
out
xchg
mov
push
scas
pop
adc
adc
add
sbb
adc
add
adc
inc
jge
fwait
and
ja
in
imul
in
xor
push
out
lcall
cmp
mov
sbb
arpl
test
sti
mov
test
repnz
or
in
add
cli
filds
test
and
std
push
test
jnp
or
xchg
push
orl
fwait
mov
adcl
sub
notl
jmp
lcall
inc
loope
adc
sbbl
mov
mov
adc
mov
xchg
sahf
fst
sbb
jae
sbb
cli
fisubrl
shll
add
xchg
pop
js
subb
repz
movsb
loopne
imul
adc
xchg
jns
idiv
push
cmp
out
or
jmp
pop
push
aam
or
ret
mov
jbe
lret
adc
jge
fiaddl
fld
xchg
sbb
lahf
jns
cmpsb
mov
push
pusha
outsl
fsubl
lods
add
shll
stos
pop
rcrb
std
push
lret
imul
hlt
movsb
mov
ja
bound
add
cmpsb
jl
nop
push
test
imul
mov
xchg
insb
xor
das
outsl
inc
idiv
xchg
dec
cmp
scas
pop
adc
stc
popa
xchg
ret
xor
lret
xchg
jb
dec
subl
pop
aaa
push
mov
xlat
sub
inc
jl
adc
jle
sbb
stos
movsb
jge
sub
rorb
adc
cld
jne
push
ret
jns
js
popa
cli
adc
into
and
pop
ljmp
lahf
xchg
rorl
push
push
fsts
mov
inc
xchg
sbb
push
mov
push
mov
into
rcll
lds
in
dec
incb
shll
dec
sbb
cltd
cmp
xchg
enter
pop
or
out
cli
push
sub
shl
fcoml
in
das
xor
sbb
bound
push
mov
mov
adc
scas
outsl
inc
repnz
xchg
or
rcll
push
mov
stc
adc
or
push
push
stos
insb
xor
mov
pop
test
jmp
in
sahf
cld
xchg
xchg
aad
fstl
gs
add
dec
jns
pop
dec
lea
inc
mov
loop
scas
cmpsb
dec
mov
xchg
fimuls
xchg
mulb
push
test
cmp
adc
daa
addr16
fistpll
nop
adc
add
and
xchg
pop
bound
jl
or
mov
dec
jne
adc
std
adc
enter
and
mov
loop
mov
xchg
jns
int3
mov
das
int
adcb
in
ja
in
xchg
lock
jns
cmp
mov
out
inc
push
push
cltd
adc
sub
iret
decb
mov
lret
std
scas
pop
xor
mov
push
popa
aam
loopne
sub
cli
jmp
sahf
cli
inc
or
dec
in
adc
mov
jne
push
push
xchg
scas
jnp
add
std
insl
push
xchg
movsl
mov
dec
xor
mov
sub
jne
movsb
or
or
popa
jbe
mov
sub
jecxz
fdivrs
adc
cmc
xchg
stos
insb
and
pop
repz
rcrb
push
add
push
cltd
hlt
addr16
push
lods
insb
jnp
sub
pop
out
lahf
cld
cwtl
outsl
ret
adc
mov
test
xchg
test
adc
das
test
mulb
xlat
jle
or
mov
mov
mov
insl
xor
lods
jns
nop
adc
js
pop
movsb
int3
data16
repnz
inc
ffreep
rorb
incb
inc
and
push
mov
ret
lahf
cmpsl
popf
xlat
mov
cld
mov
jns
dec
cmp
dec
sbb
adc
or
mov
mov
sbb
out
aad
jo
sbb
nop
xchg
out
mov
movsl
aad
mov
int3
adc
sahf
push
and
leave
inc
adc
sub
mov
xor
lock
movsb
js
mov
push
jge
lahf
subb
jmp
test
pop
lock
fs
pop
jmp
mov
aad
mov
stc
cld
adc
jle
and
mov
adc
or
sti
insb
mov
inc
test
push
in
xor
and
or
out
ds
xor
ljmp
daa
pop
jecxz
xchg
cmpsl
xor
adc
mov
rclb
or
push
test
dec
test
repnz
filds
adc
setns
lahf
push
lret
xor
jecxz
clc
sub
push
loop
cmpsl
xorl
push
dec
sbb
adc
or
shrl
jge
mov
and
pop
cwtl
fildll
or
sbb
push
in
push
popa
in
dec
add
mov
push
push
out
sub
test
popa
rcl
in
pop
cmp
cmp
mov
popa
lds
stos
pop
push
dec
or
jnp
pop
dec
push
and
dec
out
je
xchg
or
dec
out
sahf
cmp
fidivrs
scas
cmp
jg
rclb
movsb
cs
inc
xchg
test
cltd
adc
mov
xrelease
pop
int
adc
jns
mov
pop
push
mov
push
outsl
inc
pusha
dec
xsave
jb
repz
dec
or
dec
ljmp
lahf
jle
pop
pop
fwait
sbb
es
xor
sbb
setns
nop
adc
outsl
pop
jmp
sahf
mul
dec
xor
in
dec
xchg
decb
call
sbb
out
adc
push
push
jbe
movsl
jp
cld
and
adc
movsl
test
je
adc
std
lods
mov
mov
pop
inc
cltd
cmp
lds
cmc
push
pushf
test
outsb
in
adc
int3
shl
xchg
into
addr16
inc
fyl2xp1
xchg
adc
add
push
lods
jo
push
in
xor
pusha
adc
sub
sahf
rclb
adc
inc
xchg
push
xchg
sarb
push
repnz
pop
xchg
mov
subl
sub
lods
jnp
stos
mov
mov
gs
jge
lahf
cmp
sbb
inc
cmpsb
jg
gs
leave
pop
add
cltd
and
ficomps
lahf
xchg
inc
add
sub
cmp
xchg
rorb
sbb
adc
loopne
cwtl
pop
xchg
inc
jg
dec
movsl
out
sbb
test
mov
fldt
and
lahf
jl
mov
lcall
clc
mov
push
lea
call
mov
adc
aam
test
stos
push
cmpsl
int3
mull
pop
repnz
adc
mov
sbb
sbbb
nop
adc
add
addb
sbb
popa
pop
icebp
stc
inc
adc
push
shlb
mov
xchg
dec
mov
test
mov
mov
std
cmp
cvttps2pi
cwtl
mov
inc
js
inc
cmp
popf
sbb
aad
xchg
mov
cltd
adc
mov
das
out
mov
ret
jno
and
mov
adc
repnz
sahf
ficoml
dec
sbb
addr16
xchg
rorl
xor
xchg
xchg
cs
pop
filds
add
sub
rcrb
sub
xchg
mov
add
adc
adc
cmp
inc
adc
jmp
xchg
fwait
or
mov
adcl
adc
pmullw
xchg
cltd
bound
or
mov
adc
jne
pop
stos
push
sbb
add
pop
adc
fsubr
xchg
in
adc
push
or
xchg
fisubl
cwtl
mov
adc
arpl
test
and
mov
test
adc
sbb
push
push
repnz
push
loope
sti
dec
dec
into
fwait
rclb
sub
mov
xor
sbb
cltd
adc
add
pop
out
xchg
mov
pop
repz
add
outsl
loop
nop
jb
cld
pop
test
out
pusha
rolb
test
rep
loop
mov
xchg
clc
push
imul
adc
dec
repnz
fwait
rorl
sub
jbe
movsb
subl
cwtl
lahf
adcl
sub
std
fsubl
sbb
dec
mov
jle
cs
ja
in
mov
pop
sub
pop
lcall
.byte
