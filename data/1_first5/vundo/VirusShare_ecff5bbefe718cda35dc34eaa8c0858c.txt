jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
lods
jl
cmp
xchg
ds
jl
xchg
add
add
add
add
add
pop
push
add
add
stos
add
flds
out
add
add
add
add
roll
add
jge
addl
xor
iret
add
fwait
add
add
jge
dec
add
and
leave
add
add
rolb
jge
into
add
add
add
add
add
mov
cmp
push
add
into
add
add
add
insb
add
dec
add
add
add
add
add
dec
add
xchg
flds
stc
add
or
xlat
add
mov
xor
dec
add
add
mov
imul
or
push
add
add
add
add
repnz
add
add
scas
add
add
add
stc
add
add
add
jge
jb
inc
add
add
add
add
jge
incb
or
push
add
add
add
add
add
flds
mov
add
imul
imul
add
cmp
enter
xor
popf
add
add
add
add
add
jge
filds
jb
push
add
add
add
add
add
add
add
lods
add
sub
add
addb
fldl
add
add
je
jge
pop
add
add
add
add
add
push
add
add
add
add
xor
movsb
add
add
add
pusha
add
dec
add
add
add
add
jge
mov
push
add
add
incb
jge
xchg
add
add
add
add
add
add
jge
incb
mov
add
add
add
add
add
add
add
add
jge
dec
add
add
out
add
js
sub
pusha
add
cmp
sub
movb
add
jge
dec
add
roll
add
jge
addl
pop
add
add
filds
movl
jbe
jge
je
aaa
or
mov
inc
add
add
flds
dec
add
add
add
add
mov
add
add
push
add
addb
cwtl
add
add
add
add
add
mov
jge
xchg
js
push
add
add
add
stos
add
addb
add
add
add
add
add
add
add
add
dec
add
pop
add
add
add
add
push
add
and
and
sbb
mov
xchg
fiaddl
js
jo
pop
add
add
add
add
add
loope
popa
add
add
add
add
add
add
fldl
test
imul
add
les
js
roll
sbb
sub
fwait
add
fldl
add
add
jns
jge
inc
add
add
add
push
add
add
pop
add
dec
add
xor
sbb
add
pop
add
add
add
add
xchg
sbb
pop
add
jge
mov
fldl
lahf
add
add
push
add
add
add
flds
jge
or
fldl
xchg
add
add
pop
add
add
add
add
add
add
add
jge
inc
add
xchg
add
add
add
push
add
add
xor
fwait
add
add
sub
push
add
add
add
xchg
scas
add
add
add
add
add
add
add
add
add
add
xchg
and
push
fs
pop
jno
cwtl
cmp
imul
xor
sti
cwtl
loop
ss
push
outsb
sbb
mov
cmp
or
mov
dec
fimuls
out
push
or
xchg
adc
mov
sub
out
sub
in
popf
das
xchg
ljmp
rorb
xchg
and
mov
xchg
fsubs
jl
pop
mov
stos
mov
stos
shll
mov
lret
rol
cwtl
sbb
mov
aas
and
test
mov
test
sti
sbb
sti
ss
pop
mov
xchg
fcoms
ljmp
stos
cli
clc
pop
cs
insb
push
add
lcall
xchg
pop
lret
or
mov
jecxz
push
cmpsl
sub
cld
lea
lods
push
ljmp
sbb
jge
movsb
mov
inc
and
dec
iret
das
push
test
stos
in
cmpsl
lods
adc
xor
cmp
sub
daa
aas
pop
rcr
pushf
jg
mov
mov
jb
sbb
jnp
push
jp
decl
stos
je
inc
fwait
add
outsb
pop
repz
insb
loope
and
sub
adc
icebp
push
ret
cwtl
int3
pop
cs
imul
add
movb
adc
cmp
or
movsl
stc
lods
adcl
adc
popl
jp
testl
int
sahf
stc
ljmp
xor
pop
inc
push
clc
in
lcall
xchg
stos
cmp
dec
sub
and
aas
je
sbb
xlat
lock
fdivrs
popa
jl
std
push
cli
sub
inc
push
inc
sbb
ja
mov
repz
jl
xchg
mov
cmp
adc
sub
mov
jo
or
mov
sbb
xchg
and
lcall
out
or
xor
jecxz
xchg
js
xchg
imull
sbb
inc
inc
inc
clc
cmpb
xlat
mov
xchg
loope
jecxz
scas
ja
out
inc
sbbl
stos
jecxz
popf
mov
dec
pusha
push
pop
imul
push
dec
and
int3
adc
inc
lret
ljmp
dec
mov
mov
sbb
hlt
imul
imul
loopne
fadds
push
inc
nop
adc
dec
push
dec
icebp
dec
dec
cmpsl
fs
mov
pop
repnz
repz
mov
int3
adc
fwait
xorl
sbb
cltd
or
sbb
stos
xchg
addr16
in
or
scas
sub
mov
test
cmp
and
xchg
xchg
scas
dec
mov
add
add
add
add
rolb
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
out
aaa
outsb
daa
pop
pop
dec
pop
test
push
or
inc
incb
into
xchg
mov
xlat
mov
jle
outsb
daa
pop
pop
dec
pop
ja,pt
ja
push
push
xor
mov
into
xchg
xlat
mov
jle
outsb
ds
cmovle
outsb
jg,pn
dec
push
pop
mov
test
mov
loope
push
jnp
push
adc
pusha
mov
push
cmpsb
in
cmp
ljmp
cmp
add
lods
sub
xorps
pop
and
dec
adc
movl
xchg
daa
jbe
sti
stos
outsl
dec
push
and
pop
cmp
movsb
dec
xchg
fs
mov
cmpsl
mov
xor
push
outsb
pop
sbb
imul
ja,pt
ja
and
ret
sub
push
std
bound
mov
fmuls
mov
adc
pop
push
das
xchg
dec
fwait
pop
mov
ds
cmc
negl
test
xchg
outsb
push
aam
lret
fdivrp
out
out
enter
cmp
stos
push
scas
pop
lahf
aad
shll
outsb
aaa
pop
push
dec
pop
ja,pt
addr16
push
push
pop
mov
mov
mov
int
or
sub
jb
bound
dec
push
pop
cmp
xchg
fcomps
xchg
stos
loop
xchg
loop
repz
sub
push
push
and
lods
ret
add
repnz
test
xchg
out
mov
mov
aaa
inc
daa
cmp
inc
cs
push
push
inc
mov
cmpsl
ficoms
scas
out
xlat
mov
jle
outsb
daa
pop
pop
dec
pop
ja,pt
addr16
push
push
inc
mov
cmpsl
ficoms
scas
out
xlat
mov
jle
imul
sbb
dec
cld
pop
movsb
cmpsl
mov
jecxz
cmp
stos
addl
mov
dec
or
je
aam
stc
mov
inc
sub
mov
sbb
shrb
cld
inc
jns
sbb
fldt
int
mov
inc
je
and
mov
jge
out
enter
mov
aaa
sti
addb
dec
fwait
push
push
mov
es
scas
mov
adc
out
mov
repnz
mov
cmp
mov
or
pop
mov
fndisi(8087
int
outsb
rolb
pop
adc
xchg
cltd
xor
jmp
cwtl
xchg
xchg
mov
cmp
insl
sbb
xchg
idivl
mov
jbe
mov
jns
inc
repz
cmp
rclb
loop
in
jae
cmp
jp
mov
loope
fwait
pop
std
inc
jl
cmp
fists
mov
fcoms
mov
cmpsb
adc
sbb
adc
inc
bound
in
jecxz
adc
enter
push
insl
add
lcall
xchg
scas
mov
stc
and
cmp
xchg
scas
adc
lea
xor
mov
mov
cmpl
loopne
mov
fnop
cmpsl
in
aam
ja
leave
out
inc
das
sub
pop
jo
xchg
jae
in
or
fdivs
orb
cmp
and
pop
popf
mov
mov
jne
cmc
es
or
mov
adc
in
mov
pushf
xchg
int
fsubrs
xlat
pop
fmulp
fldenv
jge
fbld
or
xchg
mov
lret
imulb
sbb
aaa
dec
pop
cld
mov
pop
lret
cmc
shl
mov
mov
dec
xor
das
mov
aas
jns
sub
bnd
mov
mov
jecxz
test
mov
div
fwait
ljmp
shrb
dec
pop
insl
mov
les
dec
iret
lods
test
mov
sbb
pop
in
xchg
dec
sahf
fldt
or
and
cmpl
xchg
and
dec
xchg
fprem1
leave
arpl
bound
dec
mov
roll
sti
into
loop
rorl
test
inc
mov
sub
addr16
arpl
ret
arpl
adc
add
nop
clc
addb
mov
jbe
rolb
enter
lods
lock
outsb
movsl
test
jo
push
hlt
dec
pusha
iret
and
sub
mov
outsl
aad
subb
sbb
sbb
movsb
mov
sub
iret
inc
test
lods
xchg
push
int
pop
rep
push
xlat
push
insb
dec
sbb
push
adc
mov
enter
test
cld
inc
push
ret
mov
sub
rcrb
pop
int
jle
jo
mov
or
lea
xor
pop
cmp
mov
mov
xor
popl
push
jb
les
je
sar
call
clc
stos
stos
xchg
mov
push
mov
push
dec
dec
push
or
mov
test
lods
outsb
cmpl
push
xchg
sbb
call
cmp
mov
std
xor
cmp
pop
cmpb
jge
sahf
lahf
lret
loopne
scas
or
outsb
lret
enter
into
inc
in
or
sub
outsb
add
sub
cmp
inc
xor
fnstsw
mov
adc
pop
fdivs
mov
mov
lcall
lea
cmp
rorl
xor
add
inc
std
fidivrl
xor
cmp
add
movsb
cmp
bound
add
clc
xchg
loopne
inc
jbe
xchg
rcll
dec
add
mov
xchg
inc
mov
mov
xor
shll
scas
push
imul
xchg
fsubp
dec
mov
jno
push
in
xor
ljmp
pop
cltd
sbb
mov
pop
fwait
jl
xor
pop
out
iret
aad
ja
div
and
out
rcl
into
pushf
add
dec
and
fdiv
jg
rorl
cmp
sbb
mov
cld
and
iret
sbb
fstpl
xor
out
inc
and
and
add
mov
test
in
mov
or
int
dec
cmp
jo
ss
rol
xlat
popa
aam
dec
lock
jo
dec
pop
adc
in
cmp
sbb
cmpsl
imul
dec
mov
dec
sbb
or
pop
mov
pop
mov
pop
xor
mov
mov
mov
ret
rclb
jl
inc
push
in
lahf
imul
sub
sbb
mov
or
into
lea
mov
test
push
dec
pop
push
shl
add
add
inc
out
mov
cli
xchg
dec
push
dec
ljmp
lahf
add
out
insl
dec
push
repz
xor
xchg
arpl
xchg
adc
imul
push
loop
mov
sahf
imul
loope
jae
xchg
jnp
and
out
jp
xor
mov
stos
int3
inc
xor
cli
movsb
cmc
rolb
xchg
mov
and
das
sub
push
mov
aaa
gs
fstpl
or
lcall
scas
xor
sbb
inc
and
in
mov
xchg
pop
dec
inc
xchg
adc
cmc
mov
rcll
add
aaa
shrl
in
mov
outsb
xchg
sub
and
ftst
in
sub
ds
cld
inc
pop
mov
sbb
cmc
jae
xchg
sbb
xchg
hlt
mov
sbb
loopne
stos
dec
dec
and
push
jns
cmc
lcall
mov
int
push
pop
xor
movsb
mov
pop
fmull
pop
movsl
dec
ss
ljmp
inc
rorl
pop
mov
xor
adcl
scas
iret
mov
xor
cmc
xchg
and
cmc
or
xchg
sbbl
outsl
mov
push
jecxz
mov
shl
cltd
mov
movsl
sbb
sub
inc
push
out
sub
inc
subl
sqrtps
lods
addl
xor
sbb
imull
cmp
pop
lea
iret
xchg
mov
loope
aad
and
jnp
sub
pop
mov
pusha
daa
add
cmpsb
bound
push
in
sbb
mov
mov
xchg
out
int3
push
scas
pop
mov
pop
fs
sub
aad
popa
repz
cmp
xchg
pop
daa
sti
or
push
mov
std
and
push
pusha
pop
pop
stos
add
mov
cs
adcb
inc
jecxz
jnp
sbb
jl
gs
mov
lds
jl
lcall
enter
ljmp
ret
lods
jo
inc
xor
mov
and
jge
scas
loop
out
mov
mov
sub
mov
sub
inc
push
xor
daa
inc
call
adc
ljmp
cmp
mov
sub
mov
lods
shrl
enter
adc
sub
mov
and
jae
xchg
dec
jle
aam
clc
jnp
xor
inc
mov
call
js
test
add
out
sbb
pop
subl
xchg
push
and
cmp
mov
jecxz
mov
stc
or
xchg
fstpt
mov
lahf
decb
sbb
scas
test
stos
rolb
xor
outsl
sub
rcll
sbb
hlt
xchg
fs
pusha
dec
shl
cld
lods
pushf
xchg
test
out
lods
jecxz
inc
ret
sub
sbb
lds
cmp
jb
pop
sbb
sub
add
dec
stos
pop
pop
clc
and
in
loopne
das
mull
rol
testl
pop
push
enter
test
push
pop
sub
adc
testb
sbb
sub
inc
and
and
lret
ret
and
pushf
data16
das
cwtl
fcoms
mov
mov
mov
pop
sub
int
hlt
cmpsl
add
test
and
pop
or
cmp
test
sub
inc
xchg
adc
dec
inc
or
xchg
sbb
mov
adc
fcompl
mov
movsb
enter
sbb
fwait
ret
dec
lret
dec
movb
cmp
push
pushf
mov
push
dec
call
pop
inc
mov
dec
clc
loopne
push
push
and
out
add
loopne
mov
inc
scas
mov
mov
jns
lds
shlb
xor
stos
aas
push
out
pop
pop
adc
jae
icebp
insb
mov
pop
pop
xor
mov
cmp
jb
ss
ljmp
stc
xor
cmp
cli
das
sti
roll
sub
push
movb
pop
ret
jp
dec
and
into
rclb
jns
addb
pop
xchg
jmp
xchg
push
cmpsb
test
orb
adc
fadds
es
data16
xor
dec
out
inc
pop
int
jl
adc
lock
lock
jae
mov
jae
lret
mov
mov
cmp
pop
movsb
sbb
cmpb
test
test
mov
mov
test
jge
dec
or
pop
mov
add
push
negb
cmc
cmpsb
mov
jl
jne
js
dec
nopl
mov
adc
rclb
adc
mov
xlat
imul
imul
test
neg
pop
mov
xor
inc
add
nop
cmp
add
xchg
or
mov
push
dec
inc
cli
mov
dec
pushf
enter
ss
imul
pop
or
outsb
aad
push
mov
pusha
loop
fs
adcl
mov
shlb
enter
cltd
scas
scas
or
clc
or
into
outsl
outsl
mov
mov
add
dec
hlt
mov
daa
sti
push
sbb
xchg
inc
add
leave
pop
sub
push
rcr
push
adc
cmp
imul
xor
jmp
pop
ja
test
sbb
add
test
inc
and
fidivrl
lods
or
nop
or
ja
sub
push
mov
cld
divb
mov
jb
or
iret
adc
lret
lahf
jne
pop
push
jle
mov
cmp
pop
adc
mov
rorl
sub
push
mov
out
sub
insl
adc
and
loop
dec
cmpsl
dec
dec
iret
dec
testl
sarb
push
sbb
jno
icebp
lock
scas
in
jge
daa
xchg
aaa
xor
aaa
and
mov
negl
outsl
int
scas
add
lods
dec
fwait
xor
ret
sbb
xchg
or
xchg
fwait
icebp
xor
mov
or
push
dec
les
mov
nop
add
test
icebp
sbb
enter
push
add
pop
and
repnz
pop
sbb
cmp
popa
insb
pop
es
sbb
mov
dec
dec
mov
inc
loopne
push
cld
xlat
jle
sarl
sub
xchg
xor
sub
insb
jl
dec
dec
dec
mull
and
sbb
addr16
loopne
jge
inc
mov
bound
dec
sbb
jmp
mov
iret
jge
jo
mov
adc
jg
jp
lods
add
lea
cld
mov
mov
pop
or
aas
inc
mov
inc
movsl
add
mov
arpl
int3
pop
mov
push
mov
mov
aam
out
shll
jmp
dec
inc
mov
cmp
inc
push
mov
mov
test
in
mov
arpl
ljmp
lcall
cwtl
je
jg
mov
testl
rcll
mov
fadds
stc
mov
lods
movsl
adc
icebp
enter
mov
sbb
mov
aam
mov
jbe
mov
leave
push
sbb
cmp
arpl
sbbl
pop
lcall
or
dec
dec
inc
das
out
push
sbb
cwtl
xchg
jl
xchg
out
frstor
push
aas
outsb
lret
mov
in
mov
rcll
jg
out
mov
sbb
daa
sbb
sub
in
sub
adc
out
sub
imul
dec
sbb
xorb
aad
fistpl
sbb
xor
xchg
add
mov
arpl
xchg
inc
les
sub
imul
movsb
loop
xchg
imul
mov
cmp
mov
mov
insb
mov
cs
adc
int3
arpl
bound
dec
leave
shl
rclb
push
inc
and
or
mov
cmp
mov
jmp
dec
outsb
jp
lret
sbb
pop
sub
icebp
aaa
pusha
cmp
test
sub
les
and
ret
lcall
dec
push
into
jp
or
outsb
and
fisttpll
xor
cld
adc
jmp
jno
jns
enter
lea
sub
in
jb
push
lods
fwait
pop
dec
subb
fimull
inc
adc
mov
loop
loop
out
mov
dec
xor
push
inc
jmp
inc
sub
negl
cmp
cs
jns
dec
mov
lcall
ja
jp
or
adc
data16
daa
mov
loop
and
and
jl
filds
mov
sbb
add
adc
sub
jno
inc
push
xchg
out
push
repz
inc
pop
iret
ljmp
jo
mov
movsb
in
pop
xchg
in
sbb
xchg
ret
ja
mov
dec
and
fisttpl
mov
push
jecxz
out
cmpsb
stos
push
jnp
add
sbb
xor
in
adc
pop
pushf
xor
cmpsb
jmp
sub
insl
dec
dec
in
jnp
outsb
test
stos
in
mov
in
out
xchg
scas
mov
bound
cvtpi2ps
xor
and
test
aam
test
scas
lds
fs
adc
lods
loopne
mov
and
in
mov
les
mov
push
xor
cmp
jno
imul
xchg
fs
push
xchg
arpl
lods
popf
mov
lock
and
and
fstl
sbb
and
movsl
aas
mov
xchg
jge
mov
or
xlat
sbb
xchg
and
fwait
sub
adc
xorb
pop
cld
jmp
rcll
xor
sbb
mov
xor
mov
or
addl
push
push
test
cli
cmp
mov
jle
and
pop
sub
pop
jge
std
jl
outsb
addr16
in
pop
mov
outsl
xor
dec
push
xor
mov
mov
in
mov
add
push
mov
sub
lods
mov
scas
andb
and
lret
cmpsl
std
lea
sub
pop
nop
incb
jbe
dec
adc
testb
lods
mov
es
popf
popf
test
or
insb
mov
data16
cmp
std
inc
sbb
shll
btr
test
xor
mov
xchg
pop
add
pop
add
clc
pop
aam
je
and
sbb
inc
je
addr16
pushl
pop
jns
sbb
mov
inc
sbb
fs
stos
cmp
xchg
dec
lahf
jns
lds
stc
ret
out
ret
fsubrs
mov
sbb
xchg
or
dec
dec
test
jo
pop
test
rcl
pop
xor
jbe
add
or
and
or
inc
mov
jl
outsb
in
mov
aam
mov
mov
mov
sub
dec
test
dec
mov
xor
lcall
add
cmp
cwtl
jg
clc
scas
out
sub
les
inc
aad
nop
lret
icebp
mov
out
and
mov
gs
xor
mov
clc
mov
adc
xor
imul
aam
push
mov
mov
gs
js
js
jbe
dec
mov
cmp
movsb
lods
pusha
mulb
adc
mov
mov
popa
add
lods
dec
push
jle
js
mov
cli
sbb
sub
sbb
ja
cmpl
icebp
sub
jecxz
lahf
popf
unpcklps
imul
in
adc
lahf
dec
cmp
jge
repz
pop
xchg
adc
push
ljmp
cwtl
push
test
mov
mov
jno
sub
jmp
and
std
inc
dec
enter
jle
scas
test
pusha
cmp
and
pop
inc
add
xchg
sub
and
ljmp
loopne
xchg
pop
xor
mov
arpl
pop
popa
std
lret
pusha
imul
mov
adc
mov
filds
movsl
pop
in
movsb
shrb
mov
lret
int
aad
mov
xor
fistpll
into
loope
ds
and
imul
mov
movsb
std
call
insl
out
or
inc
test
into
iret
in
lcall
cmp
xchg
lock
push
jae
sub
data16
jo
je
lods
loope
shrb
fwait
sub
ja
xor
mull
xchg
cvtpi2ps
dec
push
and
push
and
inc
mov
out
fldl
bound
imul
push
aam
cld
insb
imul
ret
sbb
fstpt
pop
data16
stc
les
pop
enter
imul
imul
outsb
fidivs
sub
cmp
mov
pop
and
ljmp
mov
adc
lret
bound
sbbl
aam
inc
das
xchg
lahf
jns
popf
xor
push
jecxz
ret
cwtl
adc
xchg
pushf
dec
neg
std
inc
testb
subl
out
outsb
xchg
push
sub
mov
in
call
sub
iret
mov
pop
cld
mov
lcall
mov
cwtl
dec
aaa
pop
jae
pusha
sub
jmp
adc
jns
jg
or
xlat
dec
add
rcrb
add
mov
lcall
lods
sub
cmp
mov
dec
fwait
pop
xor
sub
mov
out
and
push
mov
insb
int3
lods
insl
das
fs
in
scas
and
aas
stos
arpl
clc
jae
dec
push
sbb
xorl
sbb
lods
jae
lods
pop
das
shl
imul
test
mov
addl
jg
sub
sarl
repz
fsts
les
mov
xchg
push
push
xchg
xchg
fwait
cmpsl
lods
mov
lret
iret
sti
push
cmp
pusha
sarl
sbbl
iret
push
repnz
pop
outsl
cltd
sbb
xor
movsl
lods
lret
xor
dec
mov
mov
xchg
mov
mov
pop
jmp
pop
xchg
push
push
inc
add
in
and
mov
loop
stos
push
into
rolb
pop
sbb
pop
shl
mov
mov
mov
or
sbb
or
add
mov
mov
jmp
sub
int3
repnz
mov
in
outsl
es
and
pusha
ljmp
jmp
fwait
sub
or
push
outsb
inc
push
cld
jg
sbb
push
xchg
lret
adc
std
sbb
inc
or
xor
cli
icebp
push
push
mov
push
push
addl
leave
mov
jae
push
sub
xchg
cmp
cmpsb
in
lods
push
push
cmp
push
xor
rolb
loop
nop
pop
cmpsb
in
push
xor
ja
je
cmpsl
pop
adc
mov
test
lea
fcompl
mov
cs
out
inc
rorl
aaa
and
daa
mov
inc
imul
add
mov
mov
mov
out
xchg
je
push
jg
mov
jmp
jecxz
push
lds
xchg
sbb
int3
loopne
pop
jmp
movsl
lods
dec
push
mov
dec
leave
insb
and
mulb
icebp
fs
sbb
cwtl
out
jp
cmp
lahf
push
nop
sbb
dec
mov
test
mov
cmp
push
das
pop
cwtl
push
inc
hlt
loop
insb
mov
loope
scas
mov
aam
push
daa
stos
adc
adc
popa
popf
inc
ret
sub
adc
mov
outsb
into
mov
testl
sub
sti
out
lea
stos
movsb
jmp
imul
or
push
dec
pusha
add
stos
inc
mov
lret
xor
inc
popa
hlt
idivl
fiaddl
sbb
sub
add
xchg
xchg
xchg
ret
stos
mov
cmp
push
mov
out
aad
notl
inc
int3
inc
movsb
xor
js
insl
je
stos
mov
or
pop
xor
sub
popf
jecxz
clc
adc
iret
mov
jne
es
and
pusha
cld
bound
popa
push
cmc
shll
jmp
leave
ret
notb
ja
lods
xchg
pop
leave
je
fdivs
fcoms
xchg
add
daa
add
dec
pop
ja,pt
addr16
push
push
inc
mov
cmpsl
ficoms
scas
out
xlat
mov
jle
outsb
daa
pop
pop
dec
pop
ja,pt
addr16
push
push
inc
mov
cmpsl
ficoms
scas
out
xlat
mov
jle
outsb
daa
pop
pop
dec
pop
ja,pt
addr16
push
push
inc
mov
cmpsl
ficoms
scas
out
rorl
and
dec
pop
ja,pt
addr16
push
push
xchg
mov
or
leave
jg
cwtl
popa
test
mov
sbb
cmpsl
add
sub
and
stos
lods
mov
clc
ljmp
xor
or
negb
dec
cs
stos
lods
lcall
mov
fisttpll
lods
cmp
push
and
inc
mov
aad
jmp
stos
mov
or
dec
negb
icebp
pop
push
dec
orb
push
fisubl
push
test
cwtl
cld
test
mov
test
jbe
leave
sbb
push
ljmp
jl
pop
lret
inc
push
insl
sub
xor
cmp
sub
jne
std
daa
push
aas
bound
jae
add
pusha
cli
or
sub
pop
mov
pop
mov
movsl
test
ljmp
out
add
mov
pop
int
orb
sbb
pop
jge
std
stos
bound
lcall
mov
xchg
sbb
stc
fmuls
mov
inc
stos
push
rcrb
in
add
push
sub
adc
sub
nop
cmc
fimull
aas
jl
lcall
test
cmp
arpl
push
sbb
fsubr
in
dec
in
repz
test
mov
pop
imul
adc
or
xor
ss
in
in
clc
out
loope
mov
mov
insl
pop
dec
jns
push
insl
jp
dec
dec
pop
mov
mov
cli
int
cmp
or
jp
dec
dec
pop
mov
mov
cli
int
cmp
test
dec
scas
jns
rolb
scas
aad
jmp
mov
xchg
xchg
and
dec
pushf
add
shrb
das
adc
xor
icebp
mov
jnp
cld
arpl
jp
xchg
fldenv
das
arpl
in
pop
rcll
mov
xor
aas
or
sarl
push
add
fistl
mov
aaa
push
shll
test
fs
jge
loop
out
xor
imul
cli
ret
pop
jmp
lret
rcr
in
popf
mov
out
adc
js
sub
pop
call
jmp
sbb
mov
cmp
cmpsb
loopne
movlps
fmul
cs
iret
lcall
testl
dec
jle
mov
mov
enter
js
test
pop
ret
pop
arpl
sub
or
inc
lods
mov
test
jo
test
mov
mov
dec
mov
xchg
mov
ja
xor
pop
jle
mov
call
imul
dec
mov
sbb
jae
arpl
loopne
cmp
dec
mov
add
or
movsl
cmp
dec
adc
lret
orb
add
fdivrl
dec
and
and
rolb
mov
cmp
lret
mov
or
shlb
loope
std
jns
imul
jno
pop
cmpsb
lds
in
mov
repnz
inc
imul
xor
jp
adc
mov
mov
iret
push
cmp
je
imul
fstps
ss
xor
dec
bound
popf
mov
sti
mov
push
mov
inc
cmpsb
mov
mov
xchg
outsl
mov
sbb
loopne
cli
enter
pushl
add
push
xchg
mov
sub
test
or
cs
das
xor
or
cld
sti
dec
jnp
sbb
ss
jg
jle
test
mov
cld
ljmp
and
cmc
fistpll
into
push
jne
imul
fmull
or
negb
int
cmp
dec
ret
mov
ljmp
mov
mov
xchg
add
pop
in
fs
pop
lods
cs
movsb
sub
push
dec
decl
mov
pop
ret
leave
test
negl
xchg
aad
mov
bound
jno
mov
mov
ret
frstor
add
and
pop
push
into
pop
cld
or
push
sbb
jb
jb
in
ficompl
test
pusha
mov
mov
adc
cmp
push
jno
lods
mov
int
cmpsb
addl
pop
mov
mov
jle
repnz
dec
movl
js
xchg
addr16
pop
and
mov
pop
call
shll
mov
in
call
in
ds
and
mov
mov
popf
mov
mov
sub
int3
push
stos
shr
repz
aaa
jl
sahf
ret
out
push
add
ljmp
hlt
iret
ret
js
push
and
stos
loope
lds
cmp
insl
pop
adc
je
popf
jne,pn
lds
pop
push
fstsw
jo
outsl
jne
scas
fldcw
dec
mov
scas
lods
sbb
orl
enter
pusha
insl
xchg
cli
in
push
sub
das
test
xchg
aam
mov
insb
mov
xchg
shll
pop
outsb
rcll
sub
mov
js
or
sbb
jmp
sbb
pop
cs
inc
mov
inc
mov
push
pop
pop
or
sub
nop
fndisi(8087
sub
xchg
icebp
int
shrb
add
mov
punpcklwd
jb
je
lods
add
roll
popa
xlat
push
add
pop
or
decb
movsb
and
sub
repnz
popf
pop
and
dec
insl
xor
add
dec
lahf
aad
repnz
test
lods
or
sub
jmp
jno
xor
mov
pusha
push
add
ljmp
jecxz
jp
xlat
hlt
pop
subb
and
inc
mov
jne
push
push
mov
xchg
dec
and
scas
ds
and
sub
and
ja
call
adc
or
pop
rorl
fs
jg
adcl
inc
addr16
ljmp
out
cltd
sub
inc
loopne
test
sarl
push
testl
andb
std
into
cld
push
jp
push
fldcw
xchg
pop
push
cmpsb
push
pop
call
inc
or
cmp
lahf
sub
fidivrl
fmull
daa
lds
mov
aaa
mov
test
dec
jp
getsec
add
icebp
arpl
mov
leave
leave
sub
in
insl
mov
or
pop
into
dec
jae
into
cs
cwtl
int3
mov
aaa
test
adc
and
les
flds
xor
jnp
in
lods
adc
rol
ret
mov
sbb
jo
imul
repnz
sbb
add
ja
aaa
pushf
cld
sub
or
addr16
ja
jae
repz
mov
mov
fstpt
push
xchg
xchg
mov
xor
icebp
cltd
in
jae
jp
test
sbb
cmpsl
add
push
fidivrs
les
into
jo
scas
fwait
cmpl
fistpll
inc
inc
cmc
and
mov
pop
test
jno
cmp
icebp
stos
ljmp
pop
std
shlb
rol
jle
loope
push
mov
mov
adc
cmp
sbb
std
cmp
or
xor
mov
push
dec
pop
xor
push
ds
add
adc
push
add
adc
bswap
sub
int3
cld
insb
sub
mov
imul
sbb
sbb
jne
cmp
sbb
into
insl
insl
fldcw
stc
pop
clc
orb
stos
jnp
call
insb
out
cmpsl
in
out
mov
sti
repz
loop
fwait
pop
and
pushf
jb
mov
test
dec
mov
push
add
mov
out
idivb
add
pop
pop
dec
pusha
lods
mov
add
mov
sub
sti
aaa
mov
jo
xchg
mov
aam
add
and
mov
xchg
push
fisttpl
and
adc
push
pop
push
inc
pop
mov
mov
push
mov
sar
xchg
stos
xchg
insb
fistps
xchg
stos
leave
pop
push
push
arpl
sub
sarb
popa
leave
jo
inc
adc
jo
cwtl
mov
pop
fistl
adc
or
jns
add
cwtl
scas
mov
movsl
ret
stos
mov
mov
jo
pop
scas
addr16
shll
and
mov
rorl
xor
sub
push
mov
loopne
cltd
lds
pop
pop
jl
ljmp
pop
nop
ret
sarb
imul
imul
fs
jns
movsb
inc
test
call
inc
out
push
lods
shl
ret
mov
out
imul
in
push
ja
dec
mov
xchg
mov
ljmp
flds
mov
push
bound
addl
inc
xor
cmpsl
popf
jne
sbb
cmc
inc
xchg
mov
inc
pop
nop
pop
mov
jg
add
pusha
pop
and
jno
mov
inc
or
jb
mov
out
leave
cmp
or
or
sbb
das
int3
rcrb
fcmovu
aaa
sub
addr16
pop
imul
cltd
aam
xchg
xchg
int3
jo
int3
jecxz
fstpl
jb
loop
lock
lds
std
ret
and
nop
fwait
lcall
mov
jb
inc
dec
stos
cwtl
xchg
mov
call
push
pop
dec
inc
out
lds
sbb
shl
push
into
push
add
inc
filds
lds
test
inc
push
pop
popf
push
ja
les
and
mov
xchg
cs
cmc
in
inc
lea
cmp
sti
rcrb
mov
js
loop
mov
mov
mov
jg
cmp
addr16
push
les
data16
mov
xlat
cmpsb
dec
test
leave
outsl
push
sbb
lahf
arpl
imul
mov
repnz
test
mov
shlb
fldcw
shl
cmc
and
out
lods
je
hlt
cmp
push
and
stos
cltd
add
or
push
jge
mov
negl
scas
fbstp
cwtl
mov
aam
cmp
mov
or
adc
ffree
mov
cmp
shlb
lds
pusha
pop
push
xchg
push
ja
xchg
and
scas
sbb
push
inc
ljmp
push
push
push
adc
mov
pop
mov
daa
hlt
mov
inc
fwait
or
les
jle
and
fistpl
dec
mov
inc
or
dec
inc
fildll
cmc
adc
repnz
pop
ret
mov
jg
into
jecxz
js
stos
rcll
dec
loopne
mov
das
push
jnp
mov
push
or
sbb
jge
leave
and
enter
fsub
test
iret
or
push
dec
fwait
mov
dec
std
xchg
xchg
xchg
jne
mov
xchg
dec
sbb
cmp
fstpl
in
inc
add
or
mov
dec
mov
arpl
fnsave
and
mov
in
xor
xor
push
pop
sbb
xchg
jecxz
jo
and
cmp
cltd
pop
sbb
in
and
mov
cmpsl
pop
push
imul
stc
push
jbe
fistl
push
mov
in
fs
push
lods
andl
in
or
idiv
mov
add
inc
adc
adc
pop
lcall
push
cmpsb
sub
mov
sub
insb
xchg
jnp
cmpsb
xor
sub
inc
push
jle
aad
fisubs
aas
sbb
inc
sub
out
js
mov
in
jecxz
std
xor
xchg
jp
sbb
sbb
cli
cltd
in
push
xor
add
mov
jge
mov
mov
cmp
inc
shll
adc
dec
popf
scas
out
cmp
loop
addl
sti
lods
sub
pop
sbb
idivl
into
int
movsl
xor
jnp
mov
lods
fwait
mov
add
ljmp
mov
das
ss
ja
inc
in
sub
sti
or
inc
cs
mov
push
pop
adc
fdivrs
scas
jp
and
cmp
scas
or
xchg
cli
mov
pushf
addr16
push
or
jp
std
pusha
dec
testb
test
pusha
repnz
mov
mov
push
adc
dec
pop
pop
jno
fisttps
add
nop
insl
bound
adc
adc
pop
clc
pop
mov
out
ficompl
sbb
pop
aam
add
mov
mov
xchg
fnsave
and
in
mov
push
mul
adcl
jns
xchg
in
ja
insb
and
jge
xchg
adc
fwait
insl
cmp
push
addr16
loopne
scas
xchg
push
shll
sahf
push
dec
dec
pop
inc
pop
daa
arpl
fdivs
sar
add
jl
scas
cs
jl
jp
xchg
sbb
fisubs
sub
inc
inc
dec
outsb
fdivrs
in
cld
mov
fsubrl
cli
into
pop
test
sahf
pop
fstpt
xchg
cwtl
fcmovne
adc
dec
mov
cmp
xor
movsb
jmp
cmpsb
inc
cmp
cmp
pop
sbb
lret
or
dec
jae
sbb
fcompl
push
arpl
xlat
fs
cwtl
cltd
mov
in
and
sbb
mov
ds
cmp
cmpsb
jae
pop
cwtl
jge
push
gs
adc
cmp
sbb
add
pop
push
scas
out
sti
cld
imul
mov
arpl
ljmp
sbb
xchg
add
stc
or
test
inc
std
scas
hlt
mov
mov
cmp
andl
mov
subl
cmp
dec
std
push
cmp
orb
fmuls
test
faddl
rcll
inc
pop
mov
in
lahf
mov
jb
fists
or
add
in
dec
mov
gs
test
push
mov
add
jne
sti
sahf
aaa
cmp
inc
outsb
mov
ror
lret
adc
ss
pop
les
std
hlt
jnp
in
loop
iret
dec
mov
popf
jmp
insb
dec
stos
adc
xor
ret
subb
adc
jg
xchg
xor
inc
test
aad
jo
out
mov
sub
pop
imul
test
pop
pushf
out
adc
lods
inc
test
hlt
jmp
cmp
mov
push
inc
call
add
int
push
push
cs
pop
cmp
lds
dec
xlat
arpl
mov
dec
pusha
xor
andb
in
ret
ljmp
lods
loopne
pop
dec
stos
xchg
mov
cmp
mov
repnz
insl
insl
or
sahf
push
xlat
test
mov
imul
mov
mov
mov
imul
ret
nop
lret
mov
push
leave
xchg
pop
cmp
push
test
push
jle
mov
sbb
les
cmpsl
into
adc
adc
inc
lret
and
daa
fisubrl
hlt
daa
sub
cmpsb
cli
pop
mov
jns
cmpsb
shrb
sub
pop
xlat
dec
push
jmp
xchg
repnz
push
xor
jg
nop
jge
push
mov
cld
repz
movsl
adc
sub
cmpsl
imul
push
push
mov
test
inc
out
xchg
dec
fadds
pop
subb
xor
fcmove
cltd
push
inc
cmpsl
lret
subb
jno
inc
xor
out
jbe
loop
mov
insb
mov
xor
sbb
scas
lea
addr16
fistpl
mov
xor
jae
xchg
fadds
jne
xor
test
mov
inc
cwtl
ja
xchg
fadds
pop
repnz
fdivl
stos
cmp
scas
pop
mov
jecxz
push
pop
cs
cmp
call
adc
addr16
stos
fsubs
jno
mov
roll
insl
add
int3
adc
dec
ss
inc
sub
adc
clc
leave
cltd
and
es
in
fimull
out
les
insl
shrb
fistpll
popa
cmc
xchg
xchg
pusha
ds
push
add
pop
and
and
test
imull
shrl
xor
mov
xchg
xor
out
push
cmc
aas
dec
int3
cltd
imul
mov
mov
lret
jle
stc
lret
cli
loop
add
mov
pop
sbb
sbb
imulb
movl
sbb
jns
mov
and
add
bound
jmp
pop
sbb
cli
xchg
iret
outsl
mov
xlat
mov
add
rcrb
jbe
or
sbb
clc
dec
xor
enter
push
test
nop
dec
movsl
push
xchg
loopne
xlat
xchg
pop
cmc
jo
and
pop
or
data16
add
jo
jno
jns
mov
loope
push
sbb
inc
int3
int
mov
mov
ds
fistl
loopne
stc
inc
rcr
imulb
addr16
push
adc
mov
mov
scas
inc
inc
dec
pusha
testl
or
push
add
sti
pop
aad
mov
rcll
sub
dec
mov
ret
testb
sbb
add
pop
mov
xor
aaa
sti
test
jg
jo
lock
xchg
dec
push
shl
xchg
idivl
test
mov
test
and
jb
testb
or
aaa
pop
cli
cmp
dec
fiadds
popf
imul
sub
rorb
adc
outsb
inc
adc
xchg
ja
bound
xor
cmpsl
shrb
lods
or
ja
fsubrs
inc
rclb
cmpsl
jb
push
or
aam
call
or
insb
sbb
xchg
test
cwtl
stos
mov
jb
cld
addl
xchg
xor
or
inc
in
pop
sbb
adc
push
mov
sahf
sub
imul
in
sbb
jb
mov
xchg
ret
cmp
nop
xchg
xchg
pop
jl
mov
ja
stos
dec
mov
repz
ljmp
pop
popf
sarl
popa
pop
push
adcb
pop
insb
inc
dec
mov
nop
adc
je
jae
inc
add
cmc
push
pop
inc
jno
repz
pop
nop
sbb
arpl
and
loope
addl
adc
stos
xor
cmp
sub
in
pop
mov
dec
fldcw
mov
and
adc
xor
hlt
cmp
popa
rdtsc
ficoml
dec
fwait
mov
out
pop
movsb
push
and
push
fldl
sub
insb
arpl
and
fcmovb
adc
jecxz
mov
fdivr
pop
fisubl
fs
rorl
push
aas
in
popa
movzbl
sti
push
rorl
xchg
insl
add
bound
fistl
mov
cmp
add
cmpsl
rcl
adc
push
cmp
test
fwait
jae
sub
cmp
loope
lahf
insl
mov
mov
sahf
push
push
push
push
xchg
jg
xlat
cs
sbb
pop
adc
test
xor
ret
dec
push
mov
clc
jns
push
mov
cwtl
fstps
mov
inc
into
sti
fisubrl
sub
cld
notl
repnz
pop
cs
fildll
and
ror
js
push
subb
pop
mov
mov
fisubl
shrl
pop
pop
pop
lahf
clc
mov
orl
mov
imul
dec
jle
jnp
jnp
popa
aam
nop
nop
lea
push
scas
cld
xor
imul
pusha
pusha
imul
cmp
loopne
add
ficomps
inc
mov
adc
push
jo,pn
cmpsl
leave
enter
push
add
pop
inc
cmpsl
inc
in
fdivrp
dec
cs
lock
test
std
insb
lret
add
sbb
xchg
mov
bound
arpl
mov
xchg
mov
push
lret
sub
add
dec
xor
sarl
pushaw
fistpl
jle
mov
jmp
cmc
push
sbb
jb
cli
cmp
inc
push
stc
fstpl
aad
pop
sahf
lock
cmpsb
fcomi
xchg
in
sbb
pop
dec
insl
jl
arpl
in
nop
xor
les
mov
xor
mov
xor
mov
ds
gs
cmp
mov
jle
shr
pushl
cmp
outsl
xor
ret
add
roll
mov
int3
and
or
clc
cmp
jp
sarl
sar
pop
rorb
aaa
mov
fadds
inc
lock
in
add
pop
test
les
ficoms
mov
sbb
and
mov
adcb
sahf
hlt
xchg
popf
push
fisubrl
icebp
sahf
cli
add
mov
imul
ds
jae
mov
or
fstl
lea
inc
enter
cmp
lods
je
push
shl
mov
das
sub
xchg
int3
in
cmp
mov
inc
inc
sbb
lods
enter
int
dec
dec
popf
xchg
cmpsb
stos
adc
ret
pop
mov
je
cld
inc
pop
pop
sbb
push
imul
out
icebp
adc
dec
bound
add
cmp
jae
filds
icebp
push
push
lods
dec
out
rclb
enter
jno
add
scas
dec
test
data16
iret
xlat
adc
out
xchg
out
jecxz
and
pop
and
cmp
mov
pop
fwait
repz
lods
jae
jmp
jecxz
shlb
lret
xor
mov
mov
dec
jmp
repnz
inc
cmp
or
int3
out
mov
inc
push
fs
nop
or
xchg
aas
jo
sahf
and
cmc
mov
mov
movsl
subl
pop
sub
cmp
scas
inc
movsl
cli
scas
xchg
mov
mov
jo
lret
sub
sub
sbb
leave
mov
daa
aaa
dec
clc
or
outsl
loopne
xchg
cmpsb
negb
mov
xchg
dec
pushf
cmp
shrb
adc
bound
inc
lods
xor
fcmovne
fisttpll
and
mov
push
aas
das
cmp
mov
stc
jbe
xchg
test
std
jecxz
dec
adc
in
call
repnz
rcll
hlt
fsubrl
and
mov
dec
stc
cli
push
mov
fsubs
mov
dec
mov
test
jle
xchg
cmpsb
cmp
adc
jge
insl
jp
dec
dec
pop
mov
mov
cli
int
cmp
or
jp
dec
dec
pop
mov
mov
cli
int
cmp
jb
sbb
rcrb
dec
pop
mov
mov
cli
fldl2e
std
fisubl
or
jp
lret
mov
mov
add
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
not
mov
out
fimull
cmpsb
imul
cmp
insb
push
cmp
dec
ss
es
negb
int3
mov
fisubs
push
cmp
push
jp
push
dec
ss
es
movsl
xchg
testb
mov
cmpsb
sub
aaa
gs
add
pop
inc
inc
xor
pop
xor
pop
sahf
repnz
mov
cmp
and
xor
mov
adcb
mov
xor
stos
mov
xchg
add
cmp
adc
mov
rclb
sub
mov
mov
loopne
sahf
std
push
fiadds
repz
lret
pop
das
jecxz
xchg
add
push
out
fwait
sahf
jl
lods
loop
ficoms
mov
xor
fcompl
test
inc
xchg
push
das
clc
or
mov
dec
mov
call
paddusb
int3
xchg
ret
or
mov
movb
shll
fmuls
dec
ret
out
cmpsb
push
xchg
ja
sub
mul
roll
adc
lods
push
insb
push
lods
ss
xor
mov
mov
cld
xchg
out
int3
mov
cmpsb
xor
jbe
data16
fs
dec
ss
dec
flds
mov
xchg
out
into
lock
pop
das
cmp
jle
jb
add
arpl
dec
cmp
mov
mov
cwtl
cli
xchg
lret
cltd
ret
cmp
dec
and
sysret
cmp
pop
dec
lds
pushf
adcl
cmpsb
sub
cmp
or
sbb
insb
push
jl
dec
ss
lods
mov
out
xchg
cld
xchg
mov
cmpsb
sub
cmp
or
sbb
insb
push
jl
dec
ss
lods
jg
aad
hlt
and
loop
sbb
lret
cs
pop
mov
addr16
push
in
push
add
lret
enter
outsb
imul
jb
cld
in
movsl
xchg
or
out
mov
out
xchg
sbb
aad
js
mov
mov
push
sub
sub
sarb
adc
pop
andl
in
out
push
imul
push
xchg
fdivrs
pop
ficompl
inc
daa
sti
mov
pop
adc
mov
pop
jecxz
mov
sbb
push
ret
mov
sbb
dec
lock
cltd
repnz
xchg
shl
xchg
sbb
or
loopne
push
fldenv
les
in
adcl
bound
xlat
xor
mov
pop
dec
adc
in
insb
imul
jnp
repz
scas
dec
and
out
stos
sbb
sbb
daa
cmp
inc
loope
arpl
cs
int3
pop
mov
sub
shlb
sbb
pop
cmp
pop
push
ja
dec
adc
mov
aas
xchg
jnp
les
fistpl
jns
sbb
icebp
push
cs
xorl
mov
in
adc
ja
dec
and
mov
repnz
mov
inc
add
jno
dec
mov
mov
loop
fisubrs
leave
and
pop
push
pop
inc
fnstcw
cmpsb
mov
and
in
movl
sub
fs
fldt
out
mov
add
flds
sahf
jmp
jne
fnstsw
imulb
movsl
dec
adc
sub
inc
add
xor
notl
rcl
adc
inc
cmp
cmp
or
je
in
int3
in
cmpsl
xor
jne
fistps
ljmp
fsub
pop
in
mov
aad
addr16
mov
inc
insl
and
in
cld
xor
pop
mov
push
subl
or
sbb
ficoms
dec
test
xchg
jns
adc
fsubrs
inc
repnz
pop
cs
mov
mov
mov
sbb
fisubrl
xchg
ja
push
inc
xchg
pop
inc
shll
push
xchg
aad
sub
push
dec
lahf
jge
ljmp
push
xchg
stos
int
aaa
fucomi
mov
xchg
sbb
or
push
insb
lods
mov
pop
jno
push
dec
jns
push
decl
sbbb
inc
pushf
cwtl
lds
out
imul
arpl
push
inc
sbb
push
mov
add
and
jg
sti
inc
fdivrs
das
cld
xorl
js
int3
add
xchg
ss
int
andl
lods
outsb
or
jnp
xchg
push
into
and
int3
dec
dec
fldenv
popf
cmc
aam
test
cmp
shl
xlat
mov
fwait
adc
int
sub
in
sub
sahf
jae
enter
fdivrl
and
test
dec
sub
push
mov
xchg
push
sarl
mov
xor
aam
enter
int3
xor
data16
lods
mov
lret
pusha
xor
aam
cmc
dec
and
outsb
dec
cmp
and
or
loopne
and
div
cmc
xchg
stc
xor
cmpb
lds
add
pop
lds
dec
filds
and
in
add
pop
push
inc
das
xor
lret
in
jo
pushf
dec
jl
add
push
xchg
pop
sti
adcb
ja
in
jne
or
add
in
sbb
inc
dec
ss
incl
in
pop
jmp
jo
add
mov
in
xchg
fbstp
cmp
loop
cmp
fsubrl
dec
int
nop
sbb
cli
mov
sbb
inc
jbe
pop
into
jnp
aam
sti
gs
scas
cltd
xchg
push
mov
lds
add
adc
rol
mov
insb
adc
mov
xchg
int3
mov
in
xchg
outsl
mov
push
cmp
andl
cmp
pop
mov
or
cmp
out
xchg
notl
fildl
jno
into
and
jl
sbb
and
xor
gs
fbstp
xlat
mov
ficoms
loopne
dec
dec
or
jns
mov
xor
xchg
xchg
out
fisubs
pop
cmpsb
mov
push
mov
pop
je
add
fistpl
cli
negb
shlb
add
roll
pop
lcall
jp
sbbl
jecxz
or
add
les
scas
jge
cmp
jecxz
and
push
aas
pop
hlt
loopne
cld
xchg
lds
sbb
clc
cli
push
pop
jge
sbb
jl
adc
mov
adc
cmpsl
clc
es
icebp
cltd
jecxz
dec
pop
outsl
pop
movsb
push
mov
inc
add
jno
inc
ds
lret
or
dec
leave
xchg
xchg
dec
das
pop
arpl
lret
dec
loopne
cmp
inc
mov
shlb
and
pop
rclb
in
je
and
push
lea
insb
xor
jle
call
out
push
mov
mov
inc
out
insl
mov
mov
hlt
push
repnz
test
fstp
fdivrl
lret
pop
xor
add
mov
clc
test
pop
lret
sbb
xchg
adc
aaa
fcomi
xchg
jmp
lods
inc
insl
xchg
mov
outsb
sbb
sbb
aaa
push
xchg
out
mov
sbb
int3
rol
cs
popf
into
ja
and
adc
cs
fucom
clc
mov
push
xchg
or
pop
add
xchg
inc
inc
cmpsb
repnz
adc
mov
cmp
sub
test
movsl
pushf
push
xchg
jns
cmp
inc
push
aas
or
mov
sahf
ss
jne
mov
sbb
pop
mov
es
sbb
xchg
test
outsl
stos
imull
pop
sarb
icebp
cs
leave
xchg
cs
popa
rorb
cmp
stos
movsl
jp
cmp
pop
in
inc
mov
xchg
rcrl
pop
mov
jnp
sub
bound
js
or
pusha
cmpsl
shrb
ljmp
pop
jno
scas
xor
jnp
inc
mov
scas
out
sub
push
sarb
cli
jns
pop
clc
and
push
ljmp
je
push
adc
rsqrtps
fildl
stos
lods
fs
jns
push
jmp
xor
add
inc
mulb
sbb
mov
sub
inc
minps
jmp
js
aam
pop
sahf
clc
insl
stos
stc
fadd
fbld
xor
push
inc
pushf
mov
push
jl
push
rclb
xchg
jbe
dec
insb
sbb
jmp
sub
cmc
mov
hlt
scas
movsb
cwtl
mov
or
push
lods
lea
cmpsl
pushl
int
mov
sbb
lock
scas
btc
xor
int
push
sub
sbb
mov
cmc
mov
mov
aaa
lods
out
decl
sub
insl
push
pop
stc
xchg
out
mov
dec
cmpb
test
xchg
or
loopne
sub
jns
jbe
push
mov
adc
pop
pop
lret
xlat
repz
scas
rcr
jmp
aaa
cmpl
imul
cwtl
imul
std
mov
mov
push
add
pop
sbb
cmp
nop
mov
cmp
ficoms
rol
test
ljmp
ficoml
sti
dec
shl
sahf
bound
stc
dec
out
jge
insb
fisubrl
cmpsl
jnp
in
and
nop
loop
add
add
sahf
or
in
push
and
daa
cmp
push
stc
lahf
xor
or
mov
fistl
stos
xchg
rorb
jmp
test
mov
cmpsl
cmp
cmp
movsb
or
je
pop
add
sub
and
cmp
cmpsb
dec
je
fsubrp
cs
dec
and
leave
pop
jb
mov
mov
ja
aad
dec
inc
imul
adc
testb
dec
sub
and
idivl
push
sbb
xor
and
ljmp
hlt
add
fidivrs
dec
lea
lock
dec
aad
leave
jl
div
imul
xchg
add
dec
addr16
popa
sbb
or
aad
in
and
push
pop
xchg
cwtl
jbe
jno
inc
out
std
xchg
xchg
mov
lahf
icebp
xchg
mov
in
mov
jbe
lock
cmp
dec
lods
cmc
mov
pop
insl
fbld
xchg
je
sbb
in
and
je
push
cmp
cmp
xor
xor
xor
test
sub
inc
leave
sbb
add
in
push
mov
addr16
xchg
bound
das
repnz
ret
or
cmp
xchg
jle
or
loop
shlb
mov
and
add
cmpsl
ds
dec
mov
ds
ds
jb
gs
scas
sahf
jo
push
xor
cwtl
push
dec
sub
int
mov
gs
mov
repz
push
fstl
shrl
lret
jne
jbe
shll
sbb
call
shlb
mov
dec
loop
dec
dec
aaa
and
jmp
cmc
mov
imul
sbb
lock
sbb
cli
mov
and
cmc
mov
inc
add
cmp
xchg
adc
xchg
sbb
scas
int
jecxz
or
dec
mov
and
xor
inc
mov
xchg
arpl
mov
sub
pop
add
repz
addl
add
jl
xor
mov
jns
cmpb
mov
cmc
mov
jmp
inc
sub
pop
sub
outsl
mov
icebp
cmc
push
jmp
fidivrs
les
fildll
jo
jl
xor
pop
ret
lcall
mov
adcl
xor
adc
xor
cmp
pop
sbb
out
fidivrl
lds
dec
movsl
loop
in
rcrb
cs
inc
fiadds
pop
loop
lock
movsl
insl
cmc
loop
mov
mov
shrl
pop
jne
inc
insb
mov
je
lahf
addr16
lds
mov
test
push
add
xor
jle
test
mov
mov
lcall
xor
test
icebp
jnp
outsb
jne
cld
in
loope
popf
push
pop
sbb
bt
aam
jbe
insl
xchg
mov
adc
dec
es
lret
pop
cli
push
in
adc
or
test
mov
outsl
jecxz
xor
inc
in
push
xor
mov
lds
fwait
lret
cmp
std
js
pop
jmp
iret
das
jp
stos
iret
push
mov
xchg
in
cmp
in
xchg
or
add
imul
leave
xchg
push
or
pop
test
xchg
lret
addr16
lds
jle
sti
jg
lods
insl
pop
pop
push
fdivs
push
sub
ficomps
loop
lcall
lods
inc
cmp
xor
mov
sar
sbb
dec
mov
in
mul
int
xchg
push
scas
dec
dec
in
or
add
pop
sbb
fwait
mov
loopne
add
xor
insb
xchg
jmp
xchg
shll
enter
adc
pop
jp
aam
mov
adcb
inc
call
test
and
add
mov
or
fildll
in
fwait
dec
int
push
and
push
add
in
push
sbb
leave
cmp
ret
in
pop
jo
and
push
jb
imul
mov
pop
sub
pop
add
pushf
in
pop
cmp
addb
xchg
fs
sbb
clc
test
ljmp
inc
or
scas
or
cmp
pop
repnz
adc
cmp
sub
int
and
cld
push
leave
dec
leave
ficomps
iret
push
adc
cmp
xchg
lahf
mov
repz
mov
mov
adc
rcrb
xchg
push
pop
sub
sub
or
and
jle
sub
sti
mov
push
pushf
outsl
test
push
pop
ds
pop
das
mov
das
sub
xor
add
out
in
mov
imul
fcmove
imul
movsl
int3
mov
adc
cmp
sarb
fsubl
inc
neg
xor
loopne
xchg
jle
fcmove
sbb
xlat
adcl
scas
xchg
out
ja
mov
std
sbb
ret
cwtl
or
in
inc
adc
fnstcw
cmp
int
out
dec
mov
inc
jg
adc
xchg
sub
orl
jbe
aad
pop
inc
pop
cmp
fwait
daa
xchg
nop
add
enter
mov
outsl
jge
add
mov
in
stos
add
sar
xor
leave
ljmp
mov
dec
cmp
sub
jecxz
pop
push
mov
dec
pop
pop
int
cmp
int
ficompl
push
cltd
mov
sbb
jae
dec
mov
lods
aam
ljmp
push
enter
add
adc
cmp
movsl
mov
ret
mov
idivl
and
ds
adc
jmp
movsl
cmp
popl
les
cld
in
push
xchg
in
lods
pusha
mov
mov
lret
scas
jmp
sbb
test
dec
es
loop
mov
les
pop
jbe
insl
push
mov
cmp
mov
xchg
aaa
push
nop
filds
and
or
popf
out
add
add
sarb
mov
imul
xor
or
sbb
rcr
enter
gs
out
mov
divl
jg
or
jg
sbb
inc
pop
cmp
stc
mov
stc
rclb
std
lret
ret
adc
sti
test
sti
or
fcoml
and
add
sbb
cli
nop
shrl
add
push
sbb
enter
sub
aaa
aas
sahf
ss
ss
mov
movsb
sub
dec
dec
pop
rol
lock
data16
bound
mov
pop
psubusb
mov
daa
sbb
into
or
jp
cmc
add
daa
outsb
pop
mov
and
mov
push
js
xchg
frndint
out
lods
bound
sbb
sahf
mov
push
aaa
rcrb
sbb
in
leave
out
enterw
pop
pop
xchg
sar
shll
sbb
js
mov
dec
hlt
or
cld
cld
and
es
lods
xchg
jge
inc
mov
and
std
xlat
loop
xlat
inc
es
adc
add
and
stos
pop
xchg
xchg
aad
repz
fbstp
lcall
addr16
jo
push
cwtl
clc
cmpsb
dec
cmc
int3
cli
and
mov
data16
or
loopne
push
xchg
or
fmuls
sarb
jns
push
outsl
ljmp
jne
xorb
mov
rol
js
fiadds
jb
out
mov
outsb
xchg
jo
xchg
adc
sbb
test
std
addr16
or
pop
mov
inc
int
sbb
mov
arpl
jae
mov
or
fsubrs
test
fldl
ret
cmp
out
insb
push
ret
sbb
aas
test
push
mov
push
pop
mov
inc
mov
incb
jmp
push
dec
ljmp
add
xor
loop
icebp
dec
jmp
cmp
adc
add
test
cltd
cltd
popa
xchg
mov
sbb
mov
inc
inc
mov
push
push
or
call
mov
ret
push
push
ret
popa
int3
or
jl
clc
push
mov
cli
fsubl
mov
ja
push
and
cld
pushf
xor
xor
repz
scas
cmpsl
outsb
add
sbb
sahf
ret
jecxz
mov
movsb
xor
fists
das
push
test
inc
push
cld
sub
mov
rcrb
pop
xchg
outsl
sub
dec
repz
push
das
fists
mov
mov
jle
cmp
cmp
push
outsb
movsb
inc
int3
test
and
es
inc
pop
pushf
cwtl
fmuls
xor
rorl
aam
mov
pop
and
ds
call
cmc
xor
push
and
int3
out
sub
or
add
lret
stos
mov
mov
pop
push
daa
push
insb
notb
jbe
cmp
inc
inc
aas
or
insl
xor
fisubs
or
mov
and
jns
jg
popf
push
jmp
jle
popf
enter
sub
lods
inc
sbb
xor
jae
rolb
cmp
mov
lea
lock
test
jno
insl
mov
movsb
cmp
stos
jo
mov
test
adc
xorb
or
into
cmp
or
mov
jno
sbb
fiadds
lret
imul
aam
cmp
std
bound
or
jnp
xlat
sbb
push
push
mov
movsb
pop
push
enter
les
sub
std
mov
mov
add
mov
scas
aam
add
xor
sbb
push
int3
pop
lea
loop
or
lods
cmpsb
cs
sbb
pop
xchg
push
lods
mov
sub
les
inc
dec
clc
scas
jb
js
gs
jmp
pop
lret
daa
or
pop
jmp
stos
nop
cs
inc
sbb
mov
movsl
lds
sub
add
enter
xchg
push
pop
jae
sbb
ror
jle
sahf
cltd
adc
mov
test
out
outsb
mov
rcrb
xlat
cwtl
shll
mov
test
jnp
cmpsb
add
push
push
lahf
ja
aad
mov
cmpsb
aam
inc
test
push
or
or
jecxz
aas
ljmp
insl
pop
outsb
bound
xchg
jge
dec
daa
push
mov
hlt
mov
fistpll
jae
lods
mov
inc
enter
ss
and
jg
xchg
stos
movsb
jae
sbb
mov
cld
es
cmpsb
jmp
push
insb
sub
pop
sbb
add
negb
data16
cmp
repnz
add
in
add
aad
mov
repnz
test
push
or
mov
sub
outsb
xchg
cli
mov
inc
imul
imul
dec
adcb
mov
sub
pop
cmc
scas
xchg
mov
stos
adc
dec
arpl
xor
push
lods
add
aas
lods
adcb
cmc
shrl
ret
push
ja
pop
or
les
inc
cmp
insb
pusha
add
fs
movsb
add
add
xchg
xor
in
or
hlt
and
and
in
mov
lods
push
insb
xor
data16
jb
push
push
dec
stos
cli
jmp
xlat
sahf
mov
sub
mov
mov
or
fstpt
insl
pushl
popf
iret
das
outsb
lcall
mov
sbb
std
jge
ret
adc
sbb
xor
lahf
jp
mov
enter
push
xor
cmp
fwait
pop
sbb
adc
in
mov
in
imul
sub
fildll
mov
or
mov
jno
dec
add
mov
sbb
fldcw
mov
jecxz
ds
dec
xor
inc
sbb
mov
loope
jmp
test
int
cli
dec
imul
mov
sbb
lret
addr16
outsl
lods
sbb
pop
loopne
sub
xchg
cmp
scas
push
push
imul
dec
outsb
mov
cmp
mov
jge
xor
xchg
xor
sbb
xor
push
ffree
aad
mov
pop
push
xchg
push
xor
shll
call
fcomps
inc
test
in
dec
adc
mov
mov
jp
push
cmpsl
insb
loopne
or
loopne
mov
insb
jns
cmc
push
pop
cmp
dec
and
and
jno
cmp
and
es
mov
ficomps
roll
xor
shr
xchg
and
mov
stos
fmull
jne
cmp
adc
idiv
std
out
int3
jbe
lods
cltd
movsb
or
ret
sub
stos
fdivr
jo
arpl
daa
outsb
mov
ds
adc
lahf
sbb
inc
into
and
pop
in
fsubrs
rcrl
je
sbb
cmpsl
jae
in
cmpsb
mov
in
jg
jle
je
pop
add
rcrl
pop
sahf
push
loope
push
xchg
test
gs
jnp
sbb
mov
ss
cmpsb
xor
outsl
or
mov
mov
or
stc
add
adc
mov
testb
call
jb
pop
out
adc
imul
dec
mov
pop
aas
pusha
jb
xor
mov
ljmp
lods
mov
and
out
xchg
cld
xchg
mov
cmpsb
sub
cmp
or
sbb
insb
push
jl
dec
ss
lods
mov
out
xchg
cld
xchg
mov
cmpsb
sub
cmp
or
sbb
insb
push
jl
dec
ss
lods
mov
out
xchg
cld
xchg
mov
cmpsb
sub
cmp
or
data16
push
js
dec
ss
es
mov
mov
xchg
cld
xchg
cmpsb
rcll
in
cmpsb
jbe
adc
sahf
hlt
stc
mov
mov
mov
mov
push
cmpsl
cmp
push
call
mov
cltd
sub
pop
stc
int
js
push
or
jns
dec
clc
pop
call
mov
cltd
sub
pop
clc
dec
leave
cmp
push
or
jns
dec
clc
pop
call
stc
pop
cld
sub
sbb
mov
pop
cwtl
pop
xlat
or
jo
popw
sub
xchg
lods
fs
jb
and
stos
vshufps
fsubp
push
imul
test
lock
ja
movsw
mov
sub
lcall
stos
sbb
in
negl
pop
jb
dec
xchg
loope
lea
or
je
test
flds
pop
pop
ret
xor
push
xor
mov
xchg
jp
mov
push
xchg
fstps
mov
shrb
in
pop
add
adc
mov
xchg
in
push
shll
out
inc
lods
repnz
in
lea
out
insl
cld
or
repz
insb
fldt
cwtl
cmp
imul
pop
call
mov
cltd
sub
pop
stc
dec
leave
js
add
mov
pop
rorl
enter
mov
cli
push
fsubrl
cmp
sub
dec
mov
pop
fimull
xor
pusha
fidivrs
pop
cltd
inc
push
cmp
dec
sarl
fisttpl
jl
sub
jns
dec
clc
pop
call
mov
cltd
sub
pop
stc
dec
leave
js
push
or
jns
dec
clc
pop
call
mov
cltd
sub
pop
stc
dec
leave
js
push
xchg
or
mov
std
out
mov
jno
test
int3
cld
stos
dec
push
lea
push
and
mov
fnstenv
mov
sub
js
pop
mov
sub
rorl
add
xchg
push
inc
cmpsb
popf
xor
jno
or
in
push
jecxz
addr16
adc
jbe
ficompl
lcall
ret
out
jno
adc
lcall
xor
dec
jo
daa
or
add
dec
aas
nop
leave
loopne
out
popa
mov
xor
xchg
int
in
mov
fstpt
push
mov
push
cli
or
and
pop
add
fwait
inc
mov
das
stos
jnp
cmp
fwait
sbb
shll
movsl
xchg
and
push
lahf
cmpsb
hlt
sbb
add
imul
xchg
xchg
or
stos
aas
daa
lods
pop
sbb
sub
add
lock
rclb
js
in
dec
test
pop
insl
or
outsb
daa
movsb
pusha
arpl
andb
test
fcomps
xlat
ret
lock
push
or
dec
pop
sbb
lods
push
xchg
sbb
in
xchg
jg
mov
mov
cmp
cwtl
mov
mov
add
ljmp
jl
push
std
xlat
aam
enter
pop
jns
std
lret
xlat
xchg
push
aam
adc
cmpl
das
sub
xor
pop
xor
mov
gs
fstps
jbe
nop
daa
and
add
cmpsl
pop
push
jns
incb
insb
push
ljmp
scas
out
and
jle
pop
sahf
jb
xor
pusha
sbb
add
or
or
add
pop
ficoms
in
in
dec
int
push
xor
mov
out
xchg
call
fucom
add
mov
mov
jge
call
inc
scas
fists
mov
cmpsl
mov
pop
xor
inc
je
into
loopne
fisubrs
outsl
cmp
pop
jmp
adc
pop
xchg
popf
or
dec
inc
out
dec
aaa
mov
outsb
sahf
or
cltd
push
ret
xchg
push
arpl
mov
nop
into
sub
arpl
rcl
xchg
popf
jp
fistpl
adc
mov
pop
pop
jnp
jbe
and
xchg
xchg
das
lret
rclb
xchg
hlt
fcoml
xchg
cltd
adc
sub
xchg
jp
mov
xchg
inc
jno
fs
addr16
jle
mov
shlb
xor
out
jnp
je
add
lods
scas
ljmp
addr16
aas
jne
cmc
scas
leave
xchg
push
adc
sbb
mov
adc
xchg
add
out
push
add
in
and
dec
cltd
mov
add
lods
fcompl
cld
pop
and
loop
dec
mov
jmp
andnps
daa
sub
mov
bound
iret
divl
gs
loope
cltd
or
cmp
dec
push
sahf
addb
jo
or
sahf
or
mov
subl
adc
adc
je
sbb
xor
lds
jbe
mov
dec
sub
push
xchg
pop
leave
test
stos
das
mov
xor
jb
adc
sub
jp
mov
lea
mov
mov
pushf
addr16
dec
inc
mov
cmp
add
jg
repz
insl
sbb
iret
sub
js
sub
sbb
mov
push
out
movsl
scas
cmp
dec
scas
dec
xor
scas
adc
and
ss
loope
xchg
mov
aas
mov
cmp
jns
pop
lahf
cmp
pop
stos
or
js
or
das
fmul
jl
pop
pusha
pop
cmp
mov
sbb
jne
or
fwait
mov
mov
mov
dec
mov
scas
jp
shlb
js
insb
fmull
xchg
das
mov
popa
push
sub
arpl
frstor
inc
add
outsl
xlat
hlt
inc
jae
mov
std
lahf
pop
mov
dec
mov
dec
mov
mov
sti
and
push
sub
push
mov
jb
ja
cld
clc
mov
mov
pop
push
xor
jae
mov
movsl
mov
test
mov
data16
or
cmp
leave
xorl
lahf
inc
mov
mov
fistpll
xchg
sti
pushf
lods
cmp
xor
out
test
jmp
nop
repnz
cwtl
xchg
xor
shlb
push
pop
mov
jmp
adc
dec
adc
xchg
lret
cmp
jp
xor
add
inc
enter
outsb
sti
es
hlt
mov
hlt
push
push
data16
jp
or
leave
pop
dec
shlb
in
pop
out
jecxz
ffree
clc
dec
lret
lcall
fimull
cmp
aaa
xchg
sub
out
jbe
mov
xchg
ljmp
out
rorb
jae
pop
jmp
outsl
push
insb
mov
loope
xchg
insl
jnp
push
cli
adc
inc
int3
je
push
add
jno
aaa
sbb
es
pop
shlb
sti
arpl
call
mov
cld
add
imul
fcomps
mov
in
fdiv
shll
push
or
loop
jle
dec
add
or
in
bnd
sub
mov
mov
int
testl
inc
popf
jge
dec
mov
mov
es
mov
dec
xchg
cmp
lcall
call
imul
push
and
rol
lea
mov
mov
sub
lret
inc
mov
sub
and
test
cs
ljmp
or
cmpsl
das
outsb
jae
int
adc
scas
cmp
sbb
mov
and
insb
popa
xor
std
aaa
mov
hlt
cmpsb
pusha
mov
lcall
sub
je
cmp
dec
inc
lods
minps
xchg
sub
mov
xchg
jns
inc
movl
add
push
sarb
stos
adc
test
dec
ret
pusha
popl
loope
mov
arpl
imulb
sbb
roll
push
xor
mov
loop
lods
mov
mov
mov
mov
mov
popl
xor
mov
mov
popf
xchg
inc
push
inc
add
inc
and
cmp
inc
nop
push
movsl
jle
mov
xor
mov
push
hlt
push
inc
sbb
shrl
repnz
and
add
and
ljmp
add
dec
out
scas
in
cmp
push
cmp
inc
adc
and
ljmp
popa
arpl
sbb
push
dec
mov
xlat
in
and
xchg
xor
test
sar
fldcw
clc
bound
test
mov
sbb
jg
mov
lock
lods
jge
sbb
lahf
mov
mov
adc
cltd
stc
ss
dec
inc
cmp
scas
sbb
dec
jg
mov
sbb
adc
es
ljmp
daa
std
and
mov
sub
push
insb
pop
pop
xchg
enter
fiaddl
xchg
sahf
jne
out
hlt
xchg
xchg
sbb
adc
call
pop
stc
jb
andl
clc
mov
xchg
cmp
mov
sahf
lcall
mov
fdivrs
mov
testb
mov
fdivs
and
in
xlat
adc
jl
in
pop
add
dec
shl
cli
mov
fdivs
mov
jne
in
push
daa
push
addr16
data16
pop
mov
xchg
or
and
jne
cmp
cwtl
popl
xchg
fnop
xor
sbb
lea
push
dec
push
add
aaa
mov
jl
adc
pop
jmp
ret
xchg
movb
pop
push
cmpsl
or
jno
imul
jp
stos
mov
ljmp
cmp
out
je
and
push
clc
adc
popa
and
scas
dec
pop
outsb
mov
aaa
fadd
add
outsl
sub
inc
cmpsl
and
and
pop
inc
ficoml
cmp
xchg
and
add
add
xchg
xchg
inc
sbb
jnp
shlb
push
nop
cmpsb
or
in
lds
add
mov
fdivrl
jno
idivb
xor
rclb
sti
pop
mov
fisubl
out
sti
dec
add
cmc
xorb
pop
repnz
in
add
les
mov
addr16
or
cmp
test
jl
cltd
push
jb
scas
fwait
or
roll
mov
insl
sar
add
xchg
mov
es
icebp
testl
sti
push
es
cmp
jl
fmull
dec
sahf
push
call
pop
rorl
data16
dec
mov
ud2
or
xchg
push
rcr
divl
jno
and
inc
out
loop
in
ffreep
ljmp
movb
xchg
jmp
test
add
test
cwtl
push
loopne
data16
dec
test
and
lods
mov
lahf
or
cli
xor
push
fdivl
dec
push
addr16
fadd
loopne
mov
and
aam
xor
pushf
pushf
lock
xor
mov
clc
int
daa
sbb
xor
push
arpl
xchg
jge
repnz
add
aad
mov
jnp
xchg
xchg
outsb
aad
jl
rolb
mov
adc
cwtl
ja
pop
push
jnp
jbe
mov
cmp
jge
std
inc
mov
pop
fs
mov
mov
insl
loop
lret
sub
stc
repz
je
stc
cs
stos
aad
mov
inc
push
test
int3
mov
aas
mov
popf
movsl
data16
push
adc
shrl
jns
xchg
pop
cmp
das
lcall
adc
sbb
cmpsb
fisubl
inc
sub
or
test
roll
push
ds
inc
dec
mov
cwtl
and
add
or
leave
jmp
ja
cmp
mov
popf
sbb
mov
adc
js
xchg
mov
or
xchg
fcoml
loop
scas
dec
outsb
dec
cmpsl
xchg
sti
and
or
push
pop
mov
xchg
idivb
pop
roll
cmp
xor
add
ja
ss
js
aas
mov
jnp
stos
or
inc
clc
and
pop
ret
mov
jp
je
and
and
or
inc
push
jle
scas
or
outsl
gs
jnp
sub
cmp
cmpsb
fistl
ficoms
insb
xorb
jecxz
pop
lea
add
stos
xchg
test
sub
into
insb
mov
inc
add
sub
cmpsb
fs
mov
inc
sbb
or
js
dec
xor
lock
rclb
in
sbb
xchg
push
push
dec
pop
jmp
sub
pop
loope
outsb
push
mov
mov
faddl
lds
fwait
mov
inc
mov
push
outsb
cli
outsb
data16
fdiv
inc
jl
hlt
mov
adc
xor
aaa
add
jns
int3
push
enter
cmp
pop
push
mov
pop
cmpsb
aad
ss
sub
fcmovu
mov
ret
rorl
repnz
inc
push
insb
je
addb
cmc
jecxz
loopne
push
jns
push
xlat
js
push
mov
push
pushf
ror
mov
subb
xchg
jmp
cmc
cli
lds
cmp
and
pop
mov
pop
stos
hlt
sarl
mov
shlb
mov
cmp
es
cmp
in
movsb
inc
movsb
sbb
insl
addr16
sub
movsl
das
adc
repnz
jno
adc
mov
wbinvd
dec
sub
mov
testb
inc
jno
aad
pop
lds
dec
cltd
push
add
lea
stos
loopne
cld
outsb
add
jb
ret
fwait
mov
into
lret
and
dec
test
shl
cmc
adc
cmpsl
imul
iret
xor
std
push
fs
aam
jae
fistps
mov
cmp
clc
dec
clc
pop
cltd
jns
ljmp
frstor
into
std
decl
push
es
xor
cmp
pushf
push
mov
sbb
xor
js
stc
clc
test
jge
std
das
add
push
in
in
sub
mov
dec
out
out
push
int3
insl
sub
pusha
mov
mov
mov
and
pop
pop
jnp
fcompl
jecxz
xor
orl
testl
mov
dec
jae
add
and
out
daa
ret
imul
mov
rdtsc
out
repz
inc
dec
adc
ficomps
pop
xchg
rcll
aam
jp
test
cmp
sub
add
adc
stos
into
xor
lea
jp
fisubrl
push
jnp
sub
or
jge
or
rclb
sub
int3
sub
les
or
dec
push
fwait
test
push
mov
inc
xchg
jbe
les
subl
shrb
inc
rcr
cmp
nop
cmpsl
push
sbb
arpl
roll
loope
sahf
in
movsb
jns
xchg
push
in
repz
dec
ja
xchg
jmp
jbe
cmp
fcomps
and
adc
leave
pushf
fsubr
nop
inc
orl
mov
arpl
idivl
les
call
mov
lods
pop
xchg
popf
les
push
test
adc
stos
push
add
inc
imul
cmp
dec
push
mov
mov
es
scas
add
mov
in
sub
jae
out
cld
jne
jae
push
jns
test
dec
adc
loop
xchg
sub
pop
jp
loope
mov
add
and
sub
gs
test
sbb
or
in
inc
gs
or
shll
je
xchg
jge
into
aaa
sub
mov
or
pop
cld
out
mov
loop
shlb
or
xor
xlat
nop
fildll
lcall
sub
mov
in
dec
ljmp
add
push
xor
lcall
pop
push
cmp
popa
xchg
insl
je
and
lcall
pop
jg
sbb
or
mov
push
jns
cltd
xorl
jns
mov
add
fcomps
inc
mov
stos
jge
sbb
stos
mov
sar
mov
cmp
and
fs
insb
add
cmp
pop
dec
sub
aaa
js
pop
mov
inc
ficoml
sub
lods
lcall
sbb
add
and
xchg
xchg
lea
mov
stos
popf
mov
mov
sub
push
jp
mov
pop
mov
lock
popf
adc
xor
dec
inc
jbe
and
and
in
jle
daa
repz
pop
cmp
mov
push
mov
jp
pop
sbb
scas
mov
mov
fidivrs
outsb
cmpsb
mov
stc
ljmp
mov
mov
xchg
hlt
call
rcl
pop
dec
out
xchg
cs
add
mov
insb
mov
mov
sub
dec
stos
bound
idivb
insl
ds
jae
dec
and
push
ficomps
jecxz
fcoml
lret
pop
sti
int3
out
dec
pop
loopne
xchg
fs
mov
data16
inc
fildl
fs
in
in
int
movsl
loop
lds
mov
int3
and
mov
mov
add
bound
cli
push
lds
add
xor
rolb
inc
lret
adc
or
mov
lahf
fistps
sub
js
std
xor
ret
das
sub
add
fisttpll
add
call
movsl
push
or
outsl
xchg
xchg
or
out
mov
mov
sbbl
std
push
mov
das
mov
iret
arpl
sbb
mov
dec
xlat
jecxz
mov
adc
test
insb
push
mov
addr16
sbb
jp
adc
rolb
lods
cmpsb
mov
repz
cmpl
aad
sub
into
dec
sbb
stc
jmp
shlb
pop
pop
iret
cmp
ret
movsb
nopl
or
scas
xor
adc
add
mov
cmp
mov
lcall
gs
movsb
in
add
fcmovb
jecxz
es
insb
or
in
int
mov
cltd
movsbl
aam
insb
add
dec
jge
xchg
mov
dec
xchg
dec
arpl
sbb
ss
shlb
inc
push
sbb
loopne
xchg
pusha
jge
xchg
xchg
sahf
mov
imul
and
notb
mov
xchg
int
dec
pop
inc
lea
aad
lock
or
sbb
pusha
push
lods
shlb
pusha
pop
clc
fisttpll
aam
movsb
std
nop
xor
cwtl
xlat
cmp
or
cwtl
in
jecxz
jmp
adc
and
jge
push
inc
push
or
mov
pop
aas
in
adc
dec
pusha
shlb
jne
lcall
mov
in
mov
fadds
push
in
push
out
adc
cltd
in
test
push
cmovb
rcrb
and
push
mov
adc
xchg
xchg
cltd
leave
jmp
fdivrp
adc
xchg
cmpsl
insb
popf
jbe
inc
arpl
xorb
shll
subb
push
popf
es
movsl
and
adc
xchg
add
dec
imul
test
or
test
and
xorl
cmp
pop
xor
jo
rol
add
repnz
inc
addr16
repnz
xchg
mov
jmp
xchg
stc
cmpsb
pop
inc
mov
popf
mov
mov
dec
test
scas
pop
push
xlat
scas
arpl
pop
negl
lods
fsts
or
pop
dec
enter
ret
xor
pushf
repnz
push
dec
stos
push
inc
test
icebp
or
fsubs
mov
or
mov
xchg
outsl
xchg
lret
sub
xchg
movsb
sbbb
movsl
and
outsl
sub
mov
cmp
push
lahf
jmp
and
adc
or
in
add
inc
cmp
jbe
aad
push
ror
mov
loope
mov
mov
or
dec
out
popf
mov
jb
test
adc
pop
daa
aaa
hlt
ljmp
pop
dec
dec
lock
inc
mov
sub
xchg
sub
mov
mov
mov
xchg
insb
and
sbb
push
push
xchg
mov
adc
std
lods
push
subb
in
call
dec
jl
lods
dec
imul
jo
stos
mov
out
adc
mov
fsts
aad
shll
mov
ss
aas
mov
clc
jne
iret
mov
mov
push
xlat
jg,pn
pop
and
int3
pop
mov
sbbb
mov
xor
jmp
aad
push
stc
pop
fptan
test
sub
call
and
int3
in
jge
or
lock
in
scas
inc
hlt
cmpsl
cld
subb
pop
test
das
loope
xchg
dec
mov
mov
mov
pop
mov
push
cmc
add
cmp
mov
cmpsb
in
xorb
xchg
imul
movsl
add
xchg
aaa
ret
cmpsl
orb
int
push
inc
xchg
movl
pop
or
and
shl
mov
icebp
mov
stc
pop
ja
xor
insb
mov
push
adc
pop
xor
shrb
mov
and
cmpsl
test
jg
push
pop
int
push
adc
ds
adc
iret
pushw
pop
arpl
or
and
test
jno
rcr
ud0
mov
aaa
fcomp
fdiv
push
sbb
mov
mov
mov
pusha
cmpb
dec
fsts
daa
jle
push
push
std
xchg
adc
xchg
dec
movsb
loop
in
negb
dec
jp
sub
xor
add
push
repz
sub
push
sbb
loope
and
lcall
loopne
pop
insl
scas
sbb
popf
test
cmp
cmp
fwait
add
scas
les
arpl
aad
dec
fisttpll
js
sub
roll
sub
psrlw
add
push
stos
loopne
or
mov
ds
adc
aas
xor
adc
fisubl
mov
mulb
std
sub
mov
adc
pusha
or
cmp
push
fwait
nop
loope
lea
ss
lret
ja
jle
cmpsb
mov
pop
inc
push
fs
repz
int3
jb
lds
les
std
pop
aam
push
jne
mov
nop
insl
lods
mov
mov
sbb
adc
sbb
je
pop
and
dec
mov
add
movsl
pop
gs
ja
scas
mov
loop
lahf
ror
push
scas
dec
das
scas
push
loop
or
xor
fxch
and
jecxz
add
or
xlat
push
cmp
cmp
loopne
out
push
rcr
insb
data16
call
arpl
iret
or
dec
or
push
xlat
jmp
shr
xor
orb
mov
aaa
mov
fists
aas
inc
ja
std
cwtl
les
ret
scas
lods
lahf
adc
fstps
jge
push
nop
maxps
mov
push
jle
mov
mov
jns
dec
clc
pop
call
mov
cltd
sub
pop
stc
dec
leave
js
push
or
jns
dec
clc
pop
call
mov
cltd
sub
pop
stc
dec
leave
js
push
or
sbb
dec
clc
pop
call
mov
cwtl
sub
pop
stc
dec
enter
sub
sbb
leave
clc
fld1
push
sbb
and
cltd
pop
sahf
shlb
xor
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
aas
push
sub
sbb
or
jl
push
and
inc
lock
dec
mov
in
das
fdiv
fsub
pop
adc
jo
or
jl
insb
inc
pop
jb
dec
mov
mov
in
ret
int3
loop
mov
les
bound
inc
js
push
fcoms
jmp
movsb
mov
pusha
inc
sbb
gs
js
insb
mov
sti
sbb
dec
mov
or
rol
pushf
inc
mov
push
inc
in
leave
rorl
fdivrs
dec
jo
add
mov
fdivrl
scas
ret
pop
imul
mov
ljmp
pop
in
and
and
stc
ss
addl
mov
pop
lods
bound
dec
jb
add
in
dec
fisttpll
and
cmp
xchg
fldl
mov
sahf
pushf
mov
aad
push
leave
push
mov
mov
mov
sbb
sbb
jns
pop
test
adc
mov
iret
mov
jp
sbb
or
cwtl
push
adc
pop
jb
lock
ss
mov
sahf
mov
out
out
ljmp
push
testl
and
stc
pop
jmp
lods
mov
test
inc
outsb
inc
insl
dec
adc
sbb
push
fcomi
negl
add
xchg
lea
jge
pop
dec
das
push
insb
inc
pop
jb
bound
mov
fdiv
int3
loop
adc
sbb
or
jl
insb
inc
pop
jb
bound
mov
fdiv
int3
loop
adc
int3
mov
adc
loope
xchg
sbb
xor
xor
sbb
lcall
mov
mov
xlat
sbb
cmp
adc
sub
fwait
scas
xor
insl
shrb
or
xchg
sbb
add
add
push
imul
pop
xchg
gs
inc
out
sub
pusha
movsb
mov
lods
pop
dec
mov
loopne
xor
repnz
inc
std
mov
pop
or
push
ret
es
pop
inc
xor
jb
insb
frstor
jp
stc
push
cmp
incl
xchg
adc
jae
jo
aam
pushf
push
mov
int3
and
adc
push
xchg
stos
mov
pop
outsl
stos
pop
js
cli
cmp
subb
mov
push
cmp
test
cld
ljmp
maxpd
rorb
mov
jns
push
push
and
xlat
daa
test
fisubs
es
daa
mov
stos
loope
jg
or
xchg
aad
dec
das
sbb
adc
push
push
in
ljmp
sarb
adc
outsb
nop
xchg
mov
pop
sub
ficoml
jo
jnp
cmp
mov
fwait
inc
repz
movsl
out
frstor
fidivl
out
sub
jae
xchg
into
xchg
push
dec
mov
adc
and
movsl
pusha
mov
idivl
dec
sub
stc
adc
imul
je
popf
sub
mov
mov
sahf
in
nop
ljmp
sbb
xchg
dec
in
and
mov
lds
pop
mov
lcall
and
in
call
in
in
rcrl
enter
inc
divl
das
ja
mov
jne
call
ret
leave
cmp
loop
xlat
iret
lret
leave
popa
rorb
dec
pop
xchg
sbb
push
cwtl
mov
repz
cmp
das
push
xchg
nop
push
mov
popa
jge
pusha
xor
mov
fdivs
stos
xlat
mov
jmp
ja
nop
inc
addl
fcomi
outsl
insl
mov
dec
or
cmp
fmull
pusha
sub
pop
add
adc
and
mov
jg
dec
jmp
jo
out
in
lcall
or
push
flds
cmp
clc
pop
xchg
dec
ds
fxsave
cmp
loopne
es
icebp
and
inc
aaa
int
xor
inc
add
movsb
add
xchg
fsubrl
fnsave
sti
lcall
clts
xchg
jnp
lods
ljmp
mov
jg
aam
or
es
cmpsb
adc
dec
sbb
inc
dec
int3
ja
xchg
mov
pushf
and
inc
sub
inc
mov
cmp
hlt
in
movsb
dec
mov
pop
push
cmp
or
push
in
inc
jnp
in
imul
lds
dec
repz
addr16
xlat
insb
inc
cmp
xchg
into
xchg
adc
sti
mov
dec
call
xor
stc
jb
add
push
xor
scas
sbb
mov
fdivrs
xor
hlt
dec
pop
sub
dec
outsl
subl
or
sub
sub
scas
sbb
cmpsl
sub
jg
sbb
lahf
lds
iret
push
iret
mov
std
sub
push
dec
jae
push
push
cmp
xor
insb
pop
push
push
push
shlb
xchg
stos
int
out
cmp
push
in
add
jmp
jne
pop
leave
out
xor
das
lret
or
clc
js
in
andb
mov
sbb
shrb
dec
jae
gs
negb
add
push
jle
mov
pop
xor
cmp
mov
call
ja
call
lods
cmp
pop
inc
ret
fwait
add
rolb
inc
mov
pop
mov
daa
mov
fnsave
add
xchg
push
cmp
ss
cmpsb
dec
cmp
cmp
mov
out
adc
inc
ja
or
and
jp
pop
repz
mov
add
mov
loopne
movsl
testl
pusha
movzbl
jle
loope
aaa
shrl
ja
push
test
scas
pop
sbb
ret
adc
pop
andb
int3
pop
arpl
pshufw
or
aad
or
xchg
xchg
mov
enter
push
out
push
push
orl
std
push
popa
xor
push
xchg
dec
mov
icebp
adc
test
inc
sub
dec
mov
movsb
push
out
inc
pusha
xor
in
xchg
sub
mov
clc
lea
cwtl
sbb
pop
insb
or
jle
lds
push
lds
gs
bound
push
imul
mov
mov
call
mov
rcrl
rcl
mov
pop
jne
dec
shll
mov
and
add
cltd
xorb
sarb
insl
out
cmp
mov
adc
sbb
loop
jge
or
movsb
loope
test
cmpsl
in
lds
mov
cmp
pop
sub
push
mov
cmp
test
sub
enter
xor
jo
cmp
arpl
cmp
outsl
add
int3
jbe
push
movsl
insl
test
xchg
inc
sti
or
add
movsb
psubusb
xchg
into
xchg
pop
mov
sbb
rcrb
pushf
sti
add
xchg
sarl
cmc
lea
push
pop
adc
mov
pop
loop
xchg
hlt
mov
js
and
xor
cmp
push
lahf
arpl
in
or
leave
mov
mov
inc
and
into
test
ret
sarl
popw
jge
xor
mov
lahf
adcl
jmp
mov
loope
aaa
fstp
leave
out
dec
mov
mov
xor
sub
mov
int3
or
lret
add
in
and
add
repz
xor
inc
test
test
or
aas
rcrb
or
enter
adc
in
lahf
jmp
ret
sbb
shrb
xlat
leave
iret
ja
inc
jg
or
es
pop
es
daa
xchg
leave
pushf
xor
add
negl
pushf
dec
inc
es
mov
cmp
mov
xor
mov
std
mov
daa
ljmp
push
cltd
mov
lahf
or
outsb
js
push
sahf
inc
adc
jecxz
mov
or
mov
insl
cld
inc
stos
mov
loop
jmp
xchg
outsb
jb
stc
mov
loope
push
or
sbb
iret
add
leave
fstps
or
cmp
shlb
mov
or
pop
pop
jb
ja
adc
pop
pushf
test
mov
push
imul
iret
int3
outsb
inc
insl
scas
aas
mov
loope
loopne
aad
inc
pop
pop
and
mov
inc
cmc
mov
xchg
sbbl
call
leave
xor
dec
mov
jp
test
cld
bound
jp,pt
cmp
fs
aad
scas
or
daa
jp
push
loope
shlb
jle
adc
xorl
inc
fistpl
pop
ds
das
fcoml
mov
andb
mov
jo
xlat
inc
mov
adc
jnp
inc
stos
push
nop
pop
fnstcw
lret
lret
mov
mov
dec
xor
xorb
scas
xor
pop
ljmp
pop
jae
push
jae
mov
jg
cmp
lods
and
push
cld
jno
popf
imul
jmp
out
ljmp
inc
lods
push
xor
js
xor
aaa
test
daa
test
test
int
cmp
or
rcrb
cmp
adc
xorl
lret
and
cmc
cld
out
hlt
mov
jp
adcb
repz
pop
test
jne
cmp
lds
in
fwait
out
add
fs
fcomi
sub
lret
fiaddl
rclw
cmc
lock
xchg
sbb
popa
add
push
add
add
shrb
rclb
mul
jnp
cmp
fisttpll
mov
insb
add
out
insl
pop
cmc
les
adc
je
mov
arpl
xor
test
fisttpll
push
ja
cmp
subb
cmpsl
pop
jle
and
and
add
fstpl
fcoms
imul
jl
mov
cmpsl
cwtl
clc
in
test
sub
mov
iret
imul
add
cmp
aad
movsl
call
ret
int3
or
shlb
data16
mov
and
lds
into
out
aaa
push
ds
outsl
scas
scas
in
daa
mov
stc
jbe
jle
lret
das
jge
add
lock
cmp
or
adcb
mov
jo
dec
fwait
dec
mov
popa
out
push
add
mov
sbb
inc
int3
pop
loopne
sbb
cld
mov
ret
scas
mov
ret
or
bound
sub
mov
sub
cmp
mov
test
mov
mov
das
gs
ljmp
outsb
mov
std
pop
push
pop
push
cmpsb
lret
adc
mov
sbb
not
or
pop
jecxz
popf
mov
sub
mov
inc
out
stos
cmpsl
adc
call
cvtps2pd
sub
stos
push
testb
testb
data16
shl
rcl
cmp
fdivs
mov
testb
dec
sub
loopne
cltd
iret
inc
icebp
jbe
and
add
divb
mov
call
lods
push
add
les
cmpsl
cmp
or
xchg
out
ds
jecxz
or
xchg
mov
rorb
jne
xorl
mov
add
push
cmp
fistpll
outsb
mov
loopne
jb
cmp
or
sbb
enter
pop
inc
dec
dec
enter
hlt
push
sub
jns,pt
call
dec
aas
cmp
scas
push
and
sub
out
faddl
push
scas
cmpsl
dec
ja
push
arpl
xchg
xchg
in
inc
jns
cmpsb
lea
mov
or
mov
jge
pushf
adc
pusha
sbb
loop
fists
and
xchg
jg
xchg
sti
std
cmp
daa
fs
loopne
bound
sahf
insb
lock
fs
mov
stos
push
call
and
aad
and
lret
push
sar
mov
sti
pop
push
fadds
adc
push
sub
shrl
aam
fdivs
cld
xchg
jmp
fs
orb
imul
add
sti
dec
push
call
lret
into
bound
xor
cmc
pop
int
jns
addl
sub
jmp
fstpt
mov
jg
movsb
rolb
add
push
mov
std
imull
in
sti
jl
pop
cwtl
or
fbld
or
imul
cmp
xor
sub
push
sub
gs
cltd
fs
sub
and
in
jmp
push
es
adc
or
iret
outsl
mov
add
daa
pushf
ljmp
mov
xchg
jmp
movsb
lods
mov
and
popa
or
push
fst
insl
lds
aas
dec
out
jle
sbbl
xchg
rcl
popa
mov
fadds
pop
or
xchg
bound
scas
mov
push
xor
fiadds
in
pop
repnz
ds
aaa
into
mov
push
push
shll
iret
fucomp
stc
inc
lcall
add
xchg
pop
and
ret
jb
fldl
out
bound
mov
dec
pop
dec
ret
dec
jge
inc
movsl
cs
mov
sbb
je
test
xchg
stos
cwtl
jp
lret
lock
inc
mov
cmp
int
dec
pop
jg
lods
add
cmp
mov
jae
mov
nop
insb
and
dec
push
daa
jns
xor
mov
push
xlat
jmp
jle
jg
xor
push
xchg
loop
rcr
js
icebp
iret
push
shlb
fs
test
aad
loope
xor
jno
jnp
and
cmp
adc
mov
test
pop
test
popa
js
es
test
push
jge
push
mov
nop
test
mov
mov
test
pop
add
sub
jne
jne
loope
jmp
dec
xchg
dec
lods
mov
cmc
push
sub
out
popa
cmp
jae
sub
sub
mov
in
cmp
scas
push
mov
lcall
outsl
push
arpl
or
and
xchg
sub
cld
jecxz
cwtl
sub
mov
fsubrl
jno
jns
lea
xchg
shrb
mov
mov
inc
leave
cltd
sub
rorl
incl
cld
mov
inc
ret
or
fdivr
cmpsl
dec
ret
jg
lods
call
dec
mov
inc
xchg
cmp
out
jno
adc
in
cld
and
xchg
cltd
xor
and
fimull
shlb
shll
jg
in
adc
lret
mov
rorb
inc
js
in
out
push
jae
rcrl
adc
mov
ficomps
cmp
stos
loop
jp
or
cli
or
aas
pop
mov
or
mov
lahf
cmp
add
sub
sahf
or
test
xor
icebp
dec
imul
movsb
fnstenv
push
sarb
movsl
cli
mov
push
jb
popa
jns
leave
xchg
test
or
mov
addr16
imul
adc
push
pop
subb
add
cld
push
cld
pop
repz
inc
imul
push
cld
jl
mov
mov
pop
cmc
push
push
dec
mov
movsl
in
xchg
test
scas
bound
adc
mov
cli
mov
rcr
or
jle
in
sbb
and
fcom
incb
adc
sub
data16
xchg
test
repnz
outsb
mov
push
pop
jns
dec
testl
daa
inc
inc
mov
lock
push
dec
mov
fildll
ret
jp
stos
repnz
pop
xchg
dec
lret
push
jecxz
lret
bound
mov
fwait
icebp
push
cltd
call
cltd
movsb
cmp
sbb
mov
cmp
inc
ljmp
sti
loopne
out
xor
imul
push
or
or
addr16
push
lods
pop
clc
xchg
add
mov
shrl
pusha
xor
outsl
je
add
pop
mov
mov
out
pop
push
jae
push
test
out
int
cmpl
jmp
out
mov
bound
sbb
pop
mov
std
fcoms
mov
jge
push
imul
push
in
inc
cmc
sub
adc
pusha
sbb
jbe
insl
adc
mov
movsb
adc
inc
jecxz
mov
jnp
dec
push
ljmp
xor
push
xchg
mov
out
enter
fsincos
push
out
push
out
or
cltd
sbbb
dec
jbe
stc
std
push
adc
jmp
mov
lock
sub
sbb
inc
mov
decb
sbb
stc
jns
lcall
ja
in
jecxz
add
xchg
add
cmp
sbb
mov
lret
push
cmp
lea
jle
sub
mov
and
addl
movsb
or
mov
out
test
out
call
pop
scas
inc
jge
imul
movsl
xor
and
pop
sbb
out
idivl
sbbl
lds
movsl
xchg
pop
out
lret
cmpsl
xchg
cmpsl
inc
jo
dec
and
fidivs
or
mov
mov
sbb
lock
lcall
add
es
lcall
sahf
lea
add
roll
mov
jmp
add
and
daa
rorb
push
lock
xchg
mov
clc
and
and
je
cmp
mov
out
pushf
pop
cld
lods
repnz
repnz
and
dec
push
mov
in
leave
hlt
lods
xchg
xor
outsb
dec
sub
pop
mov
mov
push
lock
push
lods
clc
mov
mov
das
rcl
xor
mov
rorb
xchg
sub
jl
cltd
push
ljmp
enter
not
repz
ja
lret
pop
stos
pop
cmp
repz
jle
stc
ret
pushf
inc
nop
es
push
xor
lods
bound
int
push
xor
pop
push
and
mov
xor
int
aad
mov
jmp
add
arpl
xchg
push
cmpsl
or
add
lret
xchg
mov
leave
cmp
mov
xchg
mov
mov
mov
movlps
sub
imul
fdivrs
sub
inc
cmpsb
les
mov
dec
aam
insl
imulb
imull
pop
repnz
insl
add
movsb
xor
push
sbb
jmp
pop
or
push
fisubl
dec
cmp
mov
inc
add
jmp
inc
dec
mov
sbb
cmc
mov
mov
pop
test
out
adc
push
add
addr16
cmpsl
push
call
roll
sti
int
or
jle
roll
rol
pop
sub
dec
push
scas
scas
sub
mov
xchg
add
mov
pop
stos
gs
sbb
sub
jp
dec
and
in
lock
dec
or
outsl
orb
rcl
push
mov
jp
test
add
daa
icebp
shlb
or
ss
lea
test
push
pop
inc
hlt
xchg
xchg
cltd
mov
sahf
inc
cwtl
rcrb
hlt
mov
sbb
fwait
out
dec
mov
fiaddl
aam
cli
aad
push
pop
aas
stos
jp
mov
shlb
pop
xchg
add
addr16
stos
inc
pushf
sbb
jns
int
or
jb
int
mov
xor
add
jbe
and
data16
adc
push
decl
or
or
xchg
mov
dec
loopne
rolb
sbb
jnp
jb
lock
fsubs
pop
js
xchg
lret
call
push
int
rcll
and
xchg
pop
xchg
mov
insb
in
insl
nop
sub
test
insl
pop
mov
pop
orl
mov
iret
aas
push
ficoms
push
jno
fs
dec
push
pop
xlat
leave
xchg
pop
xor
cmc
not
mov
inc
mov
inc
cmp
and
sub
push
jmp
idivb
repnz
out
shrb
cmc
pop
push
in
push
or
add
faddl
lret
stc
into
in
xor
or
pop
jl
pop
nop
test
xchg
pop
adc
dec
stos
in
stos
movsl
popa
icebp
xchg
cs
or
test
adc
push
ss
inc
push
mov
jne
movl
add
jne
jmp
scas
mov
mov
push
scas
mov
cli
test
push
pusha
inc
std
mov
mov
adc
push
hlt
push
call
fbstp
dec
dec
jne
scas
sbbb
arpl
dec
pop
and
aas
pop
lock
lret
shll
sub
sub
mov
test
fcmove
push
arpl
aam
xchg
pop
outsb
hlt
loopne
idivb
xchg
mov
filds
sub
iret
sbb
dec
sub
out
and
imul
mov
sub
jnp
insl
lea
xchg
and
out
lods
out
les
mov
inc
ja
ret
arpl
xchg
sarl
cmp
out
push
push
out
push
pop
inc
jmp
out
adc
pop
lods
add
shll
cli
repz
xchg
es
lahf
mov
out
dec
xor
int
adc
negb
stos
or
push
cmp
mov
jns
jge
es
sbb
leave
add
enter
test
cli
or
and
cs
mov
arpl
ja
or
out
or
cmp
cs
mov
ja
int3
pop
mov
das
loope
mov
stc
addr16
jp
fwait
decl
xlat
cmp
xchg
lahf
std
mov
lret
push
add
pusha
pop
test
out
mov
mov
pusha
push
cmpsl
mov
rolb
inc
push
add
fstps
xor
rcr
lret
mov
dec
adc
insl
mov
mov
fsubl
inc
daa
mov
pop
fsubs
cmpsb
cmpsl
add
hlt
cmp
mov
mov
dec
pop
push
sub
int
dec
adc
cmp
shr
ss
add
les
test
mov
test
fldt
mov
pop
fstp
fmull
sub
pop
aaa
or
jl
insb
inc
pop
jb
bound
mov
fdiv
int3
loop
adc
sbb
or
jl
insb
inc
pop
jb
bound
mov
fdiv
int3
loop
push
sbb
jl
or
in
push
insb
sub
bound
mov
fdivr
and
sub
jo
inc
sub
jl
jl
pop
repnz
mov
ss
aad
stos
fs
dec
mov
mov
mov
xorb
iret
xor
and
adc
add
push
mov
mov
push
repz
jecxz
sarl
ret
fidivs
fisubs
out
adc
add
push
mov
mov
pop
repz
jecxz
sarl
ret
xlat
or
xchg
mov
icebp
pop
bnd
xlat
outsb
testl
and
sar
and
and
push
xchg
jbe
mov
jl
or
sbb
fildll
inc
adc
add
fidivs
inc
mov
popf
fs
int
lcall
repz
push
jae
mov
push
scas
lods
mov
mov
icebp
repnz
repz
aas
xchg
inc
add
ss
add
jno
sahf
xor
rcrl
inc
sahf
jle
repz
sbb
sub
xchg
into
jbe
and
out
push
xor
sahf
es
push
scas
adc
xchg
xor
fstpl
ss
xor
push
xor
mov
xchg
scas
inc
mov
mov
sbb
push
jecxz
shll
ret
xlat
xor
and
adc
add
push
mov
jo
aad
lds
js
arpl
mov
popf
jge
insl
mov
sti
sbb
rcl
es
aas
jmp
bound
insl
ret
lea
dec
out
inc
mov
or
fisubrl
add
push
testl
ds
into
xor
and
adc
add
push
mov
mov
push
repz
jecxz
sarl
ret
into
xor
and
adc
add
push
mov
mov
popa
or
sbb
push
push
or
push
dec
pop
mov
pop
inc
push
cs
push
insl
mov
xchg
xor
sbb
inc
shll
daa
insb
insl
lahf
or
je
pushf
loop
and
fisttpl
fadd
cwtl
jne
lods
sbb
inc
jae
clc
adc
or
imul
lret
xchg
stos
bound
sahf
mov
clc
popa
mov
cmp
sub
bswap
mov
lahf
lds
mov
orl
xchg
jle
xlat
and
aas
aam
cmp
icebp
push
subl
push
inc
lcall
stc
sbb
inc
cmp
iret
fs
sti
pushf
cmp
lcall
ficomps
mov
push
out
xchg
or
imul
add
xchg
push
mov
je
mov
jp
negl
pop
fdivrl
mov
and
push
jge
and
inc
dec
mov
mov
sub
jae
xor
imul
jo
das
dec
lea
inc
pop
in
jge
rclb
cwtl
cmp
into
jb
rorb
push
xor
mov
cmp
inc
mov
push
adc
js
mov
cmpsb
aam
aaa
pop
jb
jno
in
icebp
push
pop
jo
push
scas
out
ficoms
lods
test
xchg
gs
push
jo
adc
cmpsl
jmp
cltd
imul
or
fldl
repz
mov
jmp
mov
adc
iret
aas
addr16
movsb
test
mov
cmp
hlt
pushf
and
mov
fwait
insb
jo
push
jmp
cmpsb
lea
out
push
cmp
inc
jl
in
and
xchg
sub
popf
dec
sub
sub
int3
or
scas
out
pop
mov
loop
imul
cs
and
mov
inc
mov
fidivrs
push
fbld
mov
or
mov
xchg
pop
adc
imul
or
sti
jno
push
mov
shll
jp
dec
mov
xorb
test
movsb
outsb
inc
cld
das
mov
and
and
das
mov
pop
movsb
popf
sub
mov
jb
ret
loope
icebp
jmp
cmp
push
sahf
jb
iret
push
xchg
push
pop
cmp
mov
mov
bnd
aas
dec
mov
ret
jb
fisttpl
mov
je
cmp
jo
popl
loope
mov
cwtl
lret
sbb
mov
pop
dec
xor
xchg
testl
cmp
jae
into
ss
adc
aaa
sbb
and
cmpsb
call
xchg
cltd
xor
adc
adc
in
lds
test
stc
xor
sbb
mov
dec
leave
sbb
shll
cwtl
sbb
or
jmp
fs
xchg
pminsw
out
lahf
push
mov
push
jge
xchg
jl
test
jo
mov
loope
test
cwtl
and
push
and
das
inc
jbe
push
fs
pop
inc
and
or
mov
in
xchg
and
hlt
mov
cltd
inc
ss
sbb
cld
pusha
daa
or
sub
xor
dec
mov
mov
sub
dec
in
mov
xchg
mov
ja
outsb
cmp
daa
and
mov
xor
int3
in
mov
cli
lahf
daa
lds
mov
lods
mov
dec
sub
insb
jae
popf
addr16
pop
mov
pop
sub
dec
fs
aad
fistpl
loop
pop
and
xor
ljmp
scas
mull
daa
push
jnp
jb
push
mov
mov
sub
inc
scas
lret
inc
cmc
xchg
and
imul
movsb
das
and
orb
pop
ss
mov
pop
mov
and
aas
jmp
pop
pop
addr16
stos
push
push
and
pop
js
cmpsb
cs
xchg
mov
jns
mov
mov
sub
daa
mov
and
aaa
and
or
xchg
fcomps
lret
jp
push
dec
in
sbb
and
imul
xchg
jno
mov
data16
mov
orl
stc
xchg
movl
sub
inc
lcall
and
stc
mov
imul
sub
mov
push
jne
jae
sbb
fsubr
inc
cmp
add
lea
jecxz
sub
inc
jp
imul
xor
lods
jge
repz
mov
sti
lret
dec
scas
andl
fildl
ds
sub
repz
lock
mov
mov
push
in
hlt
pop
mov
mov
sbb
xor
jo
mov
add
out
lock
dec
sbbl
roll
sbb
in
fcmovnbe
or
mov
pop
push
push
xor
xchg
fwait
mov
loope
out
pop
adc
sub
movsb
add
lahf
sub
inc
ret
fcomps
aam
lret
lcall
ja
pop
mov
xor
mov
xchg
fildl
mov
movsl
stc
cmpsb
add
fcompl
or
or
sub
out
sub
xchg
int3
ficoms
sub
nopl
jo
out
add
dec
int3
rorb
stos
adc
jp
xchg
mov
sub
pop
nop
sbb
mov
push
mov
push
test
mov
xchg
imul
pop
hlt
add
insb
mov
idiv
enter
or
in
inc
cmpsb
xor
daa
std
dec
push
push
fmull
movsb
mov
add
mov
xchg
push
leave
push
aam
fwait
inc
fsubl
inc
outsl
lods
fldl
and
jg
cmc
adc
fs
xor
out
mov
sbb
mov
xorb
enter
leave
lcall
in
stos
std
repnz
mov
fnsave
jnp
sbbl
addb
addr16
push
ss
sub
rdmsr
sbb
adc
popa
xchg
stos
dec
and
push
push
mov
lea
xchg
dec
mov
repz
iret
fadd
xchg
jecxz
rorb
fwait
mov
and
test
lods
xor
mov
cmp
loope
into
inc
dec
pop
jp
mov
dec
add
xor
lock
push
push
push
jae
and
jns
cld
sbb
pop
pop
mov
jne
inc
pop
bnd
dec
iret
mov
cli
data16
fs
push
aam
clc
and
push
scas
inc
fwait
out
jno
sbb
test
sbb
aas
daa
mov
cmp
jns
pop
rcll
nop
push
sub
pop
lret
or
mov
iret
outsl
sbb
fwait
pusha
adc
jg
scas
imul
xlat
xchg
pop
cmpsb
ja
stc
push
mov
insl
mov
test
fimuls
sub
mov
xor
fidivrs
sahf
sub
bound
ljmp
je
mov
cmp
cmc
push
push
adc
out
jbe
mov
into
push
xchg
nop
test
mov
cwtl
xcrypt-ctr
cmpsl
fnstenv
cmp
cmp
mov
test
inc
andb
inc
scas
cmp
test
cmp
or
stos
dec
dec
xchg
fwait
mov
or
adc
dec
push
push
and
and
bound
and
pop
lahf
lods
cli
adc
imul
sbb
lea
xchg
cmp
ljmp
stos
je
pop
iret
out
push
inc
mov
cmp
cmp
ret
rolb
es
mov
adc
add
dec
sbb
xchg
int3
sub
repnz
and
cmp
push
sbb
cmp
pop
fdivs
jecxz
shlb
adcl
ret
int3
dec
dec
mov
jno
loopne
lcall
loop
leave
pop
cmp
cmc
cmp
das
mov
sub
setae
push
std
aam
add
enter
popa
push
cwtl
daa
cmpsb
ljmp
xchg
test
les
push
jle
lahf
or
inc
push
out
call
aad
insl
clc
jbe
ss
fdivrl
or
inc
jg
and
push
mov
std
xor
sbb
loop
mov
adc
sub
out
dec
cmp
inc
mov
mov
jns
aad
jnp
test
and
test
inc
ret
rol
push
adc
aaa
jecxz
and
sbb
jo
test
cld
pop
shr
xor
mov
jo
jp
out
mov
xorb
dec
jle
std
pop
cmc
test
rclb
out
call
sahf
in
mov
bound
out
cwtl
inc
sub
loop
out
mov
sarb
push
dec
in
xchg
and
rcll
or
lcall
nop
flds
in
add
inc
dec
add
call
ss
bound
rorb
mov
in
movsl
shll
aaa
andl
dec
push
xchg
sbb
sub
pushf
push
or
mov
xlat
cld
daa
sbb
add
lods
out
unpckhps
iret
jnp
int
sbb
push
test
shrb
adc
pop
cmpb
add
or
or
cltd
cmp
inc
mov
loop
stos
shlb
cmpsl
andb
inc
out
push
sub
aad
add
pop
fisttpll
enter
xchg
lret
mov
outsb
sub
setl
rclb
cmpl
jp
in
mov
ljmp
pushf
jne
nop
daa
fbld
mov
inc
xor
adcl
mov
push
mov
or
or
sahf
xor
add
jecxz
je
push
es
push
dec
int3
sub
pop
xor
push
adc
jmp
pop
stc
inc
pushf
mov
adc
mov
mov
leave
in
rcrl
ja
xchg
rcll
xchg
push
mov
mov
push
loopne
cs
call
xchg
jl
inc
and
out
iret
je
les
dec
stos
xchg
test
nop
push
dec
bound
cld
call
clc
mov
cld
rdmsr
jb,pn
xor
dec
push
jo
and
outsl
mov
xor
in
cld
adc
aam
fbld
pop
pop
dec
test
jecxz
pusha
xor
xor
push
push
fwait
sub
sbb
addb
mov
xchg
popf
push
stc
push
xchg
pop
int3
cmpsl
sbb
sbb
push
es
jge
les
popa
mov
pusha
dec
pop
test
data16
ss
xchg
jnp
sub
adc
or
inc
loop
mov
sub
sahf
aaa
inc
daa
add
push
cmp
mov
dec
repz
popf
dec
ja
inc
pop
stos
stc
insl
dec
cmp
push
fs
rorb
mov
dec
add
inc
mov
cmp
fisubrl
aaa
outsb
or
inc
jp
adc
or
or
dec
pop
xchg
int
adc
lock
notb
arpl
jge
mov
xchg
pop
cmpl
add
or
push
xlat
mov
sarl
lods
hlt
mov
cmpsl
mov
inc
mov
dec
xchg
pop
cld
cmp
push
sub
xchg
push
cmc
xchg
dec
jle
xlat
cmpsl
or
inc
fs
mov
scas
xor
lret
or
inc
add
mov
loop
pop
gs
cmp
dec
inc
xor
ljmp
test
in
loopne
inc
mov
xchg
imul
js
mov
lods
add
mov
cmp
imul
jecxz
inc
mov
lret
insb
in
jge
push
pop
inc
inc
leave
sub
jl
shl
daa
add
or
xchg
push
ffreep
mov
popf
stos
test
or
loope
mov
adc
rorb
repnz
mov
and
jl
cmp
jecxz
js
pop
mov
mov
out
push
mov
sti
je
out
outsb
repz
xchg
fwait
test
aas
pop
sbb
jg
push
sub
dec
lods
call
cmp
stos
or
sti
loopne
inc
xor
inc
xchg
in
mov
sbb
inc
cmp
jb
add
sbbl
mov
mov
and
and
aas
popf
clc
testl
add
pop
sbbl
cmp
int3
icebp
rcrl
xor
mov
shlb
or
xor
movsb
mov
je
mov
push
ljmp
jp
call
adc
jae
pop
aaa
out
sti
je
adc
fcomi
testl
and
jecxz
adc
mov
out
js
loopne
jns
dec
adc
imul
or
test
repz
rolb
mov
pop
into
xchg
cmp
rorb
cmp
cmp
pop
cli
add
lock
fwait
jnp
push
scas
mov
lock
mov
dec
adc
xor
mov
lds
data16
jp
test
jnp
stos
inc
jo
cmp
lret
iret
jnp
adcb
cmc
pop
mov
sub
push
xchg
das
out
sub
test
loop
push
je
jo
leave
icebp
lea
ficoms
jecxz
mov
jmp
aad
lods
mov
jb
mov
lcall
mov
adc
arpl
lods
xorb
out
lods
aad
insl
and
stos
adc
push
add
fnstsw
xchg
adc
sbb
pusha
pop
pop
cmpsb
dec
cmp
mov
and
inc
fucomip
push
out
shrl
pop
push
aam
popa
push
les
andl
gs
add
in
mov
loope
push
or
sahf
scas
adc
sbb
push
fiadds
mov
int
notl
push
ret
test
aam
adc
jle
lock
xchg
sbb
add
mov
jbe
insl
adc
arpl
sub
movsb
ss
adc
lret
mov
mov
adcb
adc
stc
lret
inc
stos
hlt
mov
hlt
inc
in
inc
hlt
xor
je
or
sub
mov
inc
jnp
sbb
xor
lret
xchg
or
ret
lret
lret
lret
sbb
xor
inc
jb
cmp
out
gs
push
cld
mov
xor
or
push
shl
shll
jge
mov
dec
psubw
add
nop
cmp
adc
in
in
dec
lds
mov
mov
arpl
jno
jne
mov
jge
rcll
orb
xchg
push
call
jle
ds
mov
lea
jle
or
sbb
adc
js
jne
fdivrs
mov
test
push
fcmovnbe
lods
js
int3
dec
xchg
xchg
push
je
dec
and
nop
mov
fistpl
repz
punpcklwd
pusha
xchg
fs
int
pop
push
sbb
popf
jno
xchg
adc
xor
xchg
inc
inc
fildl
pusha
cli
nop
mov
cs
imul
jmp
mov
movsb
ja
rorb
jo
jmp
xorb
leave
or
in
fnstcw
add
popf
jno
or
push
inc
xor
mov
cmp
das
loopne
insl
pop
fdiv
shl
xchg
test
repnz
push
mov
push
aad
adc
jl
into
sbb
lret
js
and
jno
sbb
shr
cmp
xchg
mov
sbb
or
sarl
push
adc
repz
shlb
inc
cmp
mov
lret
inc
jbe
popf
sub
mov
or
jle
js
pusha
adc
mov
inc
mov
inc
mov
pop
or
jmp
int
pop
js
pop
movsb
bound
sbb
ss
push
cli
sbb
and
mov
mov
subl
push
inc
pop
mov
rcrl
xchg
mov
cwtl
pop
lahf
inc
xchg
dec
push
sub
inc
pop
jb
ja
jno
gs
adc
fisubl
mov
mov
leave
ffreep
cmpsb
pop
std
add
dec
rcr
loope
push
popf
ss
stc
mov
dec
pop
in
rol
xchg
cmpl
sbb
stc
pop
les
rcrl
jecxz
adc
je
out
xor
int
and
cmp
lock
push
jbe
jo
clc
xorl
fdiv
imul
hlt
pusha
add
xchg
pop
sahf
jecxz
in
aas
jge
fstps
leave
add
test
pop
and
fistps
lea
pop
ja
mov
or
cmc
in
push
loope
lahf
test
inc
shll
aaa
xchg
movsb
sarl
jns
lods
push
pop
shlb
mov
pop
rol
dec
gs
mov
cmpsl
and
ja
add
and
push
pop
push
push
out
imul
inc
cmp
or
mov
ds
push
aas
mov
xor
jnp
pop
dec
jl
sub
push
mov
mov
sub
push
jg
jb
inc
das
xchg
dec
repnz
out
pop
xchg
lods
sbb
push
fwait
push
sub
fidivrs
xchg
mov
jge
adc
fsubs
repnz
xor
cmc
les
cmc
lahf
sub
mov
rclb
jp
dec
cmp
sbb
mov
jp
pop
sarl
ja
enter
clc
gs
mov
aas
lcall
addb
pop
xor
jbe
sbb
sub
test
into
push
lret
push
fbld
mov
fidivrs
sub
adcb
mov
jmp
cld
mov
push
insb
es
nop
aaa
push
stos
shlb
test
aaa
mov
push
int
jo
push
in
push
mov
test
mov
mov
aaa
pusha
imul
inc
or
lds
pusha
push
push
idivl
push
pop
and
in
loop
lahf
icebp
sub
inc
sub
call
call
enter
mov
push
jo
subl
jbe
lock
ret
jmp
xchg
sub
sub
test
lcallw
aad
data16
push
xor
dec
xchg
xor
mov
aas
cwtl
popf
fwait
inc
sbb
out
ljmp
sbbb
clc
dec
dec
aad
jbe
cmpsl
std
mov
into
fstps
nop
mov
mov
hlt
frstor
sub
lahf
cmp
jae
cmpsl
fdivs
add
xor
ljmp
aas
jo
and
jae
xor
add
imul
ss
pushf
xor
dec
mov
dec
xlat
jo
cmpb
dec
adc
bound
aas
scas
xor
faddp
fstp
adc
insl
or
add
fstpl
xor
xor
or
pusha
pop
adc
not
dec
outsb
popf
dec
pusha
orb
or
imulb
mov
mov
sti
xchg
mov
push
or
nop
rclb
sub
push
cmpsl
aam
into
inc
outsl
and
in
xor
aaa
jmp
lret
push
adc
inc
dec
push
pop
mov
mov
cmp
std
add
xor
sub
fnstsw
dec
rcl
ja
push
adc
ja
pushf
rorb
jp
cs
packssdw
call
adc
ja
jbe
sbb
sbb
cwtl
push
xchg
test
push
call
inc
icebp
lea
fld
int
and
adc
frstor
lea
stos
aam
mov
rorl
insb
fildll
jmp
cmp
xor
cmpsb
dec
and
dec
ja
ficompl
mov
dec
aad
icebp
and
das
orb
xor
jmp
out
jmp
int3
xor
lret
jns
js
mov
and
aad
fwait
push
ja
mov
lock
inc
lock
and
idivl
je
mov
mov
mov
and
andb
andl
ret
mov
jne
and
arpl
push
data16
cld
je
jecxz
sbb
push
xorl
jno
pusha
test
lods
inc
adc
cs
out
mov
adc
leave
js
xchg
lcall
pop
lock
jbe
inc
push
rolb
pop
subb
test
pusha
mov
inc
push
jl
ret
iret
jl
mov
icebp
mov
fistpll
int3
push
and
rclb
bound
sub
call
jmp
test
loopne
insb
stc
cmpsl
sbb
insb
jne
lret
fisubrl
lods
cmp
jo
cmp
pop
aas
jo
cli
pop
or
or
dec
adc
cmp
adc
gs
movsb
sbb
pop
or
or
loope
jae
xchg
sub
mov
push
movsl
repz
mov
fsub
mov
jns
gs
imul
arpl
clc
cmpsl
mov
cmp
or
sbb
in
bound
imul
mov
inc
dec
adcb
and
out
xor
adc
cmp
xor
popf
cmp
push
push
test
jmp
mov
jmp
add
sub
ljmp
fs
jle
push
repz
jecxz
sarl
ret
into
xor
and
adc
add
push
mov
mov
push
repz
jecxz
sarl
ret
into
xor
and
adc
add
push
mov
mov
push
repz
jecxz
sarb
ret
into
xor
and
adc
add
push
mov
mov
or
push
arpl
int3
and
stc
sti
push
pushf
push
lods
inc
mov
in
inc
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
orb
inc
or
pop
cli
add
icebp
adc
and
xor
inc
mov
mov
xorb
mov
xor
and
adc
add
repz
and
xor
adc
jno
xchg
jo
subb
mov
sub
cmp
or
sbb
adc
fisttpl
roll
iret
adc
jno
or
ficomps
jmp
or
popa
jp
push
aad
xchg
add
adc
fcmove
sub
and
aas
mov
or
or
ror
mov
xchg
std
int3
rorb
lds
imul
add
and
inc
adc
jo
andb
popa
lret
jno
adc
loope
dec
lock
xor
mov
sbb
jg
jo
inc
scas
dec
mov
arpl
add
jl
loope
xchg
dec
rcll
scas
sub
xchg
jno
jge
outsl
andl
and
insl
sub
mov
loopne
ffreep
sbb
adc
fst
and
jno
jbe
inc
mov
shlb
and
or
sbb
jmp
xor
inc
test
jo
rcll
leave
push
flds
addr16
jge
insb
add
dec
scas
inc
fcoml
add
cmc
popa
lds
faddl
xchg
adc
mov
and
ds
or
add
add
xor
xor
pop
shlb
loopne
lock
icebp
adc
and
xor
inc
mov
mov
xorb
mov
xor
and
adc
add
icebp
adc
and
xor
inc
mov
mov
xorb
cmp
or
pop
push
cmc
sti
dec
mov
inc
mov
mov
mov
mov
daa
push
mov
pop
loope
xor
scas
cmp
das
inc
add
jmp
outsb
mov
clc
sbbl
xchg
je
test
lret
mov
push
fdivs
sub
mov
cs
mov
movsl
mov
ss
jle
movsb
stos
fwait
xor
mov
jge
cs
cmp
insl
subb
fwait
stos
insb
loop
dec
add
gs
xchg
in
xor
out
and
adc
cmp
inc
aam
outsb
jno
les
sarb
push
mov
cmpsl
into
in
dec
cmp
add
xchg
jge
push
mov
hlt
sbb
xchg
outsb
outsl
addr16
adc
sub
mov
pop
std
cs
std
pop
hlt
test
aad
sbb
test
loopne
dec
cld
imul
xor
push
sbb
xor
mov
mov
mov
xchg
pop
popa
addr16
inc
mov
test
xor
aas
imul
jbe
adc
mov
mov
aam
inc
jle
test
push
push
pop
lret
xor
jecxz
loop
hlt
lahf
add
fisubrs
test
cmc
add
and
sti
test
mov
cmpsb
inc
out
mov
fld
mov
dec
adc
sti
mov
push
cld
sub
leave
test
les
pop
mov
leave
jl
pushf
add
mov
popf
ret
cli
inc
cmpsb
mov
mov
popf
jg
jbe
adc
cmc
push
test
cmp
in
clc
mov
adc
xor
loop
add
sub
push
jne
xor
mov
sbb
icebp
jo
mov
cld
add
lods
dec
insb
inc
jae
dec
out
scas
dec
daa
sub
out
jge
aam
push
cltd
pmulhuw
imul
xor
jmp
mov
ret
sub
mov
xchg
cmp
jno
js
xlat
mov
cmp
adc
and
xor
and
lahf
add
push
gs
sub
and
in
jb
clc
jns,pt
movsl
sub
fsubs
hlt
push
or
push
mov
add
mov
andb
push
ljmp
sbb
cmpl
push
xor
adc
cwtl
inc
mov
mov
dec
popa
test
add
dec
test
test
pop
faddl
out
push
in
fidivrl
arpl
xor
pop
pop
push
adc
jne
lret
jbe
outsl
pusha
add
and
loopne
inc
call
mov
call
sbb
ret
lea
or
in
pop
mov
sbb
test
sub
jmp
cmpsl
inc
add
jns
out
push
pop
mov
icebp
cwtl
sbb
jp
scas
push
dec
xor
mov
jb
inc
and
aam
sub
shl
mov
mov
shrl
in
inc
jge
lods
ficoml
out
mov
and
nop
dec
mov
int
in
adc
out
xchg
adc
shll
shl
movsb
xorb
outsb
frstor
sbb
in
push
inc
or
leave
cli
mov
pop
pop
lods
pop
ljmp
je
push
pop
add
popf
lahf
roll
iret
xchg
adc
mov
mov
inc
mov
xchg
and
mov
dec
inc
leave
rorb
sbb
js
fwait
mov
aad
cmp
fs
testl
mov
dec
mov
xor
outsb
mov
dec
and
cwtl
aas
repnz
lock
mov
xchg
outsl
movl
xchg
leave
not
mov
div
jns
fwait
scas
test
movsl
out
mov
daa
fwait
sbb
pop
ffreep
pcmpeqd
sub
nop
andl
cmp
jle
mov
mov
testl
xchg
adc
js
js
push
mov
aas
in
mov
std
sub
sub
xchg
stos
outsb
jge
lock
outsb
negl
cmp
aad
xor
popf
add
inc
mov
cli
lahf
out
shrl
popa
data16
out
xor
sarb
into
movsb
cmp
shl
movsl
out
mov
les
add
jae
enter
jmp
dec
and
test
lds
xchg
sub
adc
jb
adc
mov
mov
movsl
bound
push
jo
shlb
mov
into
insb
popa
jecxz
decl
pabsb
idivl
dec
push
jo
push
mov
pop
stos
mov
dec
cmp
and
pop
iret
inc
adc
xlat
jle
ljmp
jmp
cmpsl
jp
sub
in
push
mov
pop
movsl
in
adc
push
scas
add
mov
rclb
inc
movsb
inc
nop
jno
and
mov
add
or
mov
pop
jae
inc
pop
mov
fbld
inc
jno
ss
jle
shll
mov
dec
mov
rcll
mov
pop
std
shr
pop
inc
test
or
mov
clc
nop
mov
mov
push
cmpsl
or
sbb
adc
shl
cltd
test
xchg
mov
mov
shrb
add
test
inc
cltd
icebp
dec
jno
adc
iret
inc
sbb
out
or
and
hlt
ret
add
adc
insb
jno
cmp
push
adc
cs
mov
dec
xor
push
mov
scas
pop
add
sbb
or
shr
ss
aas
jo
decl
mov
fiaddl
daa
sub
mov
dec
dec
lret
stos
stos
lock
ja
push
enter
push
movsb
push
lods
adc
popf
ret
or
inc
or
lock
add
mov
repnz
xchg
in
mov
dec
push
ja
sbb
push
inc
mov
lret
je
adc
cmp
mov
cli
pop
sahf
mov
jle
jg
cld
mull
cmp
ja
cltd
in
mov
loop
and
lea
mov
mov
shll
or
icebp
jge
cmp
xlat
ror
or
repz
sahf
jge
pop
jmp
or
lock
sub
nop
pop
psubq
and
fisttps
fdivrs
mov
add
insl
mov
rcr
pop
xor
pop
outsl
jmp
and
jmp
test
add
push
sub
out
jge
pushf
mov
fsubrl
in
es
or
push
mov
lock
jp
or
xchg
clc
aas
push
jo
lods
lea
cmp
ds
mov
mov
cmp
mov
testb
xor
jmp
js
cmc
adc
cmp
xchg
mov
mov
inc
or
mov
arpl
add
cli
fildl
xor
shll
mov
push
pusha
or
hlt
sub
movsl
insl
out
pop
jg
push
add
adc
push
mov
push
add
fsubp
rcrb
mov
adc
and
shrl
fcmovb
inc
sbb
dec
cmove
jo
sahf
inc
jo
dec
mov
outsb
test
sub
and
xchg
mov
or
int
or
pop
aaa
dec
dec
add
cli
inc
out
aaa
push
stc
lea
in
sub
adc
clc
or
cmp
jmp
pop
add
cmp
add
jmp
mov
or
shr
fisttpll
jp
cmp
mov
lds
adc
pushf
push
xchg
cmpsl
cmp
das
cltd
jns
xchg
aas
pushf
sbb
mov
push
push
ss
adc
push
push
mov
cmpsl
iret
loopne
mov
rcrl
adc
mov
addr16
je
pop
jecxz
dec
pop
iret
inc
sar
and
add
xchg
jnp
leave
lds
ret
xchg
call
dec
mov
fistps
out
jae
hlt
movl
inc
lds
xchg
push
nop
xor
mov
push
push
lods
arpl
ja
push
aaa
nop
in
cmc
and
idiv
loop
ret
shrd
std
lods
cmpsl
repnz
pop
mov
je
mov
lods
rcl
std
jno
and
dec
arpl
ret
aaa
popa
in
in
gs
push
xchg
pop
imul
add
or
inc
add
xor
mov
aad
mov
cmc
mov
leave
jb
xor
xor
sar
xor
jb
lea
xor
and
mov
add
clc
adc
adc
or
scas
push
sti
ljmp
mov
pop
pushf
loope
xchg
rcl
push
pop
repnz
cmc
das
aam
insb
adc
movsl
rcll
jns
cmp
or
leave
aaa
mov
cmp
jns
roll
pop
xlat
data16
cmp
clc
sbb
dec
xchg
xor
sbb
sbb
std
iret
psubb
sbb
adc
test
jp
mov
ljmp
push
ss
fnstcw
lahf
addr16
aaa
xchg
cltd
lea
mov
jg
daa
push
jbe
mov
fistps
loope
insl
ljmp
rcll
shl
jecxz
push
push
stos
data16
lret
mov
cmp
sbb
stos
add
ss
popf
mov
mov
insb
sbb
sbb
xor
subb
sbb
xorl
xor
clc
sub
cld
dec
xchg
sti
dec
test
mov
mov
mov
mov
insl
out
push
test
mov
pop
mov
aas
and
cmpsl
push
repz
ss
mov
mov
or
daa
fnstsw
push
aad
lock
and
jno
or
lds
outsb
xor
test
mov
and
mov
mov
mov
xor
pusha
jb
sbb
mov
sbb
mov
xor
lahf
iret
adc
iret
xchg
xor
push
test
pop
xchg
les
inc
lahf
outsl
inc
inc
pop
jbe
movsb
adc
mov
in
mov
mov
cmp
clc
in
mov
in
mov
and
jp
push
jbe
in
mov
popf
inc
fnstenv
divl
je
mov
and
data16
imul
jle
mov
push
adc
mov
iret
mov
sahf
enter
gs
in
jnp
shlb
mov
jo,pn
mov
or
test
pop
pop
xor
adc
test
xor
movsl
cld
dec
jmp
test
push
adc
imul
lcall
or
or
hlt
es
fwait
lods
mov
lret
fs
sub
push
roll
adc
andb
mov
ret
stos
pushf
push
rcll
mov
das
in
jns
mov
cmp
jl
enter
call
and
xor
mov
inc
testb
divb
push
imul
sub
adc
cmpsb
add
int3
inc
mov
jecxz
xchg
mov
xor
sub
pusha
fcomp
or
mov
fildll
mov
aas
sub
cmpsb
and
sbb
cmc
ret
mov
or
inc
popa
pop
fldl2t
pop
jno
cltd
mov
cmp
dec
test
fdivrl
mov
jp
adc
gs
shrb
cs
aad
sub
insb
jge
cmc
sub
cmpsb
mov
insb
xchg
mov
push
inc
jnp
xchg
dec
push
in
inc
push
jnp
lds
xor
pushf
hlt
mov
and
jae
test
rcrb
sub
fsub
or
cs
outsl
and
jp
inc
sbb
mov
cwtl
xchg
xlat
pop
stos
sarb
pop
sub
hlt
push
js
dec
shrb
loop
adc
pusha
outsb
push
or
adc
mov
mov
int3
sbb
decl
xor
dec
mov
push
jge
in
enter
stc
fdivr
icebp
jno
push
or
in
out
cld
rorb
wrmsr
sub
scas
jb
outsb
aam
repz
leave
mov
dec
mull
ret
sbb
test
inc
das
sarb
add
sbb
xor
add
xchg
xchg
shlb
pop
add
inc
iret
and
jmp
or
idivl
out
dec
pop
inc
clc
fwait
push
mov
sbb
push
in
pop
je
fimuls
and
and
fsubrp
aaa
adc
int
movsb
pop
shll
jno
in
sti
lock
and
subl
lods
inc
pop
dec
gs
mov
and
xchg
call
add
or
push
mov
and
out
jge
add
je,pn
mov
out
aas
pop
lcall
or
add
push
push
push
notl
xchg
jle
lret
sarl
cli
ja
inc
movsl
mov
outsl
jno
mov
sub
pop
loop
push
ficompl
negl
or
enter
add
sub
in
mov
sahf
pop
loop
pop
push
dec
sub
add
cwtl
andb
add
jecxz
ljmp
fwait
cld
mov
js
ds
sub
sbb
push
cmp
sbb
sar
jmp
enter
in
pop
repz
test
pop
mov
push
push
mov
das
and
pop
lods
fwait
push
xchg
cwtl
jns
inc
mov
adc
lods
jb
add
pop
lods
inc
mov
pop
icebp
cmp
repz
hlt
cmp
xor
pop
inc
loopne
sahf
insb
xchg
ljmp
xchg
stos
cmp
jbe
mov
mov
insl
sub
add
pop
push
push
out
and
nop
mov
jge
jp
jbe
lcall
enter
testb
cli
test
xchg
fcmovnbe
jae
xchg
lahf
add
xchg
into
mov
and
mov
pop
sarl
shr
outsl
out
cmpsb
lret
fcoml
les
jnp
lahf
aas
aam
sbb
pop
or
call
mov
and
jecxz
xor
data16
mov
and
xchg
scas
mov
xchg
mov
cmp
xchg
jge
arpl
fwait
jb
mov
mov
mov
hlt
xchg
pop
ljmp
xchg
sub
ds
push
adc
sbb
lds
out
push
inc
add
shl
clc
and
cmp
add
mov
or
mov
cmp
pop
jp
jecxz
mov
dec
sbb
sbb
fwait
divl
xor
push
and
mov
imul
xlat
or
sbb
sbb
ret
cmpsl
jecxz
out
das
pop
int
xchg
dec
adc
test
cli
add
insl
pushf
icebp
sahf
in
pop
add
jns
dec
xor
mov
out
roll
aam
cmpsb
idivb
mov
mov
test
mov
mov
push
into
sub
rorb
mov
lahf
and
sbb
ja
dec
insl
mov
and
fdivp
jne
out
fildll
dec
mov
fcoms
insl
shr
fistpl
and
push
dec
ret
adc
jo
nop
mov
in
xor
stc
cs
orps
pop
fcmovnbe
int
test
outsl
pop
mov
add
into
rcl
or
and
push
ret
xchg
lea
test
jb
lea
cli
das
adc
jmp
js
xor
mov
sbb
push
push
std
push
cmp
shrb
shll
jnp
mov
inc
jp
std
cwtl
lea
push
mov
mov
popf
cs
ljmp
out
mov
pop
stos
sub
outsl
xor
gs
xchg
and
lcall
sub
hlt
xchg
shl
in
jo
out
sbb
xchg
cmp
add
cmpsl
mov
dec
sar
fimull
mov
cli
out
sbb
rolb
xor
sbb
stc
pop
fistps
sub
test
mov
jbe
ret
add
js
mov
bound
daa
and
pop
mov
insl
lea
mov
leave
xor
lahf
ds
inc
cmc
push
clc
sub
icebp
xor
sbb
cmc
std
mov
push
mov
fcmovu
or
mov
xor
aad
push
into
mov
insb
ss
sbb
cmpsb
xlat
inc
out
xchg
jmp
push
loop
data16
mov
movsb
out
sbb
mov
jb
pusha
adc
mov
pushl
push
test
mov
sub
out
es
inc
xchg
jmp
sub
mov
jg
dec
or
xor
inc
mov
popa
push
int3
fisubrs
xor
jecxz
xchg
push
ds
cmp
cmp
adc
enter
popf
xor
mov
sub
lea
out
mov
test
loope
adc
pop
pop
insb
add
push
xchg
mov
loopne
adc
subb
cmc
xor
bound
pop
pop
dec
ljmp
mov
pop
shrl
dec
addr16
dec
xchg
sbbl
std
stos
add
fsubs
int
jo
fs
scas
or
icebp
mov
inc
sbb
jb
loope
cmpsb
sub
mov
sub
xchg
lcall
sbb
xchg
adc
and
push
decb
insb
in
push
repnz
loope
jge
aas
dec
inc
jae
rcll
bound
js
pusha
dec
lea
xchg
xor
cli
outsl
jo
cmp
mov
jns,pt
mov
mov
aaa
lcall
mov
mov
inc
jne
mov
mov
loop
enter
inc
shl
lret
ds
stos
stos
jo
lcall
dec
out
xchg
in
nop
mov
ja
arpl
movsb
mov
aas
es
jecxz
icebp
sub
clc
add
test
cli
mov
push
lods
mov
and
fsubrp
jne
sar
sbb
test
mov
mov
ss
popa
mov
or
push
inc
jae
jno
inc
jae
xor
push
cmp
inc
lock
aas
mov
jge
outsb
push
pop
decl
adc
mov
sub
lcall
icebp
fsts
push
cs
mov
jle
push
jle
dec
or
decb
mov
xor
or
adc
pop
add
je
pop
fnsave
sarl
mov
cwtl
stc
outsb
pop
sub
sbb
cs
pop
iret
fucomp
pop
lahf
mov
xor
inc
pop
mov
fidivrl
loope
adcl
lcall
mov
sbb
loope
sahf
adc
inc
std
mov
lret
jo
xor
idivb
dec
mov
xchg
int
ret
adc
or
mov
ss
cmp
mov
jno
jl
fmulp
push
call
push
cmp
in
pop
fstpl
and
xchg
add
mov
mov
mov
mov
clc
lahf
std
dec
fisttpll
inc
fmul
or
mov
stos
cwtl
sub
add
add
sub
adc
imul
push
test
or
xchg
shl
bound
dec
xor
mov
inc
adc
flds
aam
test
mov
add
sub
lods
jge
test
inc
aam
loope
dec
outsb
das
stc
mov
neg
mov
xchg
cltd
sub
faddl
inc
lods
ficompl
lea
outsl
and
adc
lahf
es
jns
out
mov
loop
lds
lods
or
lret
rorl
outsl
lahf
lds
lea
in
jg
add
mov
lcall
loop
cmp
or
outsb
ds
inc
mov
rcll
mov
repnz
in
aas
push
cmc
lods
and
mov
fsubrs
mov
outsb
out
mov
outsl
outsb
mov
nop
add
jno
inc
mov
sbb
imul
aam
or
repz
cld
inc
dec
cmp
or
jb
out
inc
cmp
jecxz
xchg
cmp
fisubl
cmp
lret
cltd
into
mov
inc
pushf
lock
add
fsubl
and
pushf
dec
xchg
test
jnp
pushf
or
adc
int3
fidivrl
jmp
inc
shl
sub
and
loop
pop
aam
mov
xor
xor
movsb
ret
imul
push
push
mov
mov
sbb
sbb
add
mov
xor
roll
ficoms
fistpll
sbb
mov
mov
dec
cli
dec
out
mov
xlat
push
lahf
jle
mov
jno
mov
sbb
ja
in
dec
mov
xorb
fldcw
jns
sbb
xchg
adc
jmp
enter
stos
scas
sarb
sbb
ja
lcall
sbb
imul
pop
inc
shrl
roll
into
in
mov
jb
add
icebp
jo
js
addr16
jmp
adc
push
jno
punpcklwd
xchg
push
xchg
mov
insl
add
in
push
and
fwait
lds
jnp
jb
dec
iret
lods
xchg
cmp
addr16
xchg
lods
fwait
call
sbb
jnp
sub
xchg
gs
sbb
dec
jns
sbb
mov
out
cmp
and
rclb
pop
mov
jb
fcoms
cltd
cli
hlt
popa
mov
xor
and
adc
add
icebp
adc
and
xor
inc
mov
mov
xorb
mov
xor
and
adc
add
icebp
adc
and
xor
inc
mov
mov
xorb
and
inc
inc
xor
and
adc
add
adc
and
xor
inc
mov
mov
xorb
mov
xor
and
adc
add
icebp
adc
shll
mov
cmp
pop
adc
jle
mov
sub
movl
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
cmpsb
sub
cmp
or
sbb
insl
xchg
mov
adc
mov
mov
pushf
in
jbe
inc
fcoml
cmpsb
sub
cmp
or
sbb
insb
idivb
cmp
lods
ss
mov
inc
int3
push
fsubl
or
sbb
insb
idivb
pop
lods
ss
jne
cmp
push
stos
adc
stos
out
pusha
mov
cmc
pop
in
cmpsb
notb
in
in
inc
into
xlat
inc
xlat
in
gs
xor
sbb
sbb
int
and
sarb
mov
je
lea
cmp
fstpt
xchg
cmp
stc
mov
adc
shlb
xchg
adc
mov
pop
dec
out
out
cmp
es
es
mov
sbb
mov
ret
repz
adc
std
xchg
sbb
lret
jae
pushf
jmp
je
cmpsb
movsb
inc
cmp
jne
sub
mov
adc
and
idivl
pop
aad
lods
pop
mov
pop
std
ja
inc
int3
ds
sub
cmp
or
sbb
insb
idivb
pop
lods
ss
data16
jbe
inc
int3
push
lcall
repz
mov
mov
sub
xor
add
add
inc
repz
das
lcall
leave
xor
inc
jmp
into
add
push
mov
insl
shrb
imul
pop
lods
ss
data16
jbe
inc
int3
push
fsubl
or
sbb
insb
idivb
pop
lods
ss
data16
jbe
inc
int3
push
fsubl
arpl
mov
mov
out
lret
ja
dec
jne
jns
fstl
movsb
push
adc
sti
loopne
inc
rclb
mov
mov
xor
xor
inc
jl
add
arpl
nop
cmp
xchg
jae
insb
inc
mov
fdivl
pop
not
enter
sbb
test
pusha
push
xchg
inc
dec
gs
js
pop
stc
gs
adc
pushf
jb
mov
xchg
or
mov
int
adc
add
sbb
fimuls
insl
fisttpll
hlt
idiv
push
out
sar
ret
inc
jae
jg
push
jne
mov
jecxz
add
mov
cld
sbb
inc
lock
push
xchg
cmp
stc
sub
mov
adc
mov
in
xchg
shrb
or
hlt
jne
pusha
xor
inc
push
clc
mov
movsl
in
fs
mov
pop
aaa
dec
pusha
sahf
std
loope
or
mov
fwait
inc
pop
mov
adc
xor
pop
insb
inc
std
idivl
add
notl
cmp
sbb
dec
movsl
movsb
mov
addr16
cmp
inc
stos
incb
test
adc
movsl
adc
add
inc
mov
cmp
ret
lods
mov
mov
jne
or
inc
outsb
mov
hlt
xchg
cwtl
cmc
jecxz
aad
loopne
movl
xor
cwtl
clc
adc
mov
pop
sub
and
test
mov
inc
les
pop
xchg
adc
into
adc
mov
aad
mov
add
js
push
pusha
das
add
xchg
jmp
dec
leave
cli
or
mov
xor
dec
mov
lcall
addr16
or
and
mov
sahf
psubq
and
shll
adc
fldl
lcall
dec
or
outsb
dec
es
testb
faddl
insb
jmp
leave
xor
xchg
nop
pop
jecxz
jne
mov
inc
adc
pop
mov
into
cli
scas
pop
lds
rol
xor
std
mov
sub
in
loopne
out
fcompl
ret
xchg
push
or
jbe
sti
adc
sub
cmp
cmp
lock
das
push
inc
inc
inc
iret
and
shrl
mov
or
add
mov
dec
cs
and
scas
xor
fnstcw
pop
icebp
mov
inc
adc
mov
test
imul
shlb
cmp
pop
cld
or
xchg
inc
clc
js
mov
stc
cmpsb
mov
adc
stc
cltd
add
icebp
arpl
push
loop
rorl
jmp
add
into
loope
cli
xchg
xor
or
jp
fcmovb
add
inc
fwait
mov
sbb
rcrb
push
push
gs
fwait
lods
sbbl
and
xchg
sub
cmpsb
push
xchg
sub
addr16
dec
cmpl
les
in
mov
test
pusha
repnz
add
add
popf
sti
icebp
add
dec
xor
das
mov
xchg
sbb
mov
adc
add
notl
inc
lret
jle
repz
add
adc
idivb
push
mov
and
and
xor
lock
repz
pop
mov
mov
bound
xor
dec
add
cmp
das
cld
js
rcrl
fidivs
mov
pop
xchg
inc
std
dec
les
in
ret
mov
or
stc
jp
add
sahf
loopne
test
add
mov
das
pusha
popf
push
pop
xchg
insl
sbb
inc
pop
pushf
mov
lahf
inc
pop
jb
sahf
fisttpl
mov
lahf
int
sbb
pop
mov
scas
pop
popa
mov
xchg
push
mov
pop
push
leave
loopne
cmc
add
add
mov
and
cmp
xchg
out
lret
mov
arpl
movsb
jne
loop
rcrb
out
or
add
inc
jl
int3
rcrl
sahf
je
sub
andl
pushl
popa
out
add
jecxz
mov
fildl
cs
pusha
or
jg
or
cmp
push
ljmp
idivb
jnp
mov
mov
add
add
iret
and
sub
sti
push
inc
xor
testb
orb
scas
in
jmp
sbb
xor
inc
orl
mov
imul
jbe
add
mov
lds
addr16
xor
adc
pop
shll
nop
dec
sub
inc
adc
push
mov
xchg
aas
insl
adc
mov
and
pop
rcrl
jnp
enter
cmpsl
ljmp
pusha
negb
dec
dec
push
lcall
and
pushf
shlb
shll
icebp
divl
lret
mov
insl
rcrb
stos
inc
add
xchg
lods
push
insb
add
mov
out
imul
nop
rol
lret
or
test
das
add
cmpb
shrl
mov
jns
hlt
test
mov
out
or
pop
ja
mov
popa
pop
data16
loop
push
pop
mov
test
icebp
push
rol
xlat
int3
mov
and
xchg
xchg
inc
enter
outsb
fcoml
cmpsb
lods
lret
outsb
es
or
push
sbb
xlat
inc
icebp
insb
sbb
lock
mov
inc
shlb
iret
push
dec
push
mov
jg
adcb
jl
jo
sbb
dec
daa
push
pop
xchg
out
mov
xchg
hlt
lret
jg,pt
push
popf
dec
xchg
or
iret
or
jo
arpl
mov
add
fucomi
pop
icebp
mov
cmp
gs
push
out
xor
je
flds
adc
sbb
cmp
adc
lods
inc
mov
inc
ret
in
inc
cli
aam
out
mov
lahf
ret
jmp
adc
push
xchg
sub
mov
es
imul
mov
int
cmp
imul
orb
xor
dec
rcll
shll
rolb
xchg
mov
add
pop
test
pop
jle
push
icebp
jg
mov
addr16
cltd
orb
xor
rcrl
call
push
hlt
mov
outsl
or
and
inc
loopne
sti
stc
mov
arpl
push
mov
std
dec
or
pop
inc
mov
fsubrs
das
dec
jnp
es
push
cmp
pop
test
inc
mov
xchg
jne
adc
dec
pop
repz
cmp
addr16
cwtl
or
dec
inc
mov
cltd
mov
sub
pop
mov
je
sub
loop
jl
fwait
outsl
dec
lock
push
xor
push
js
push
and
inc
data16
or
loopne
xchg
pusha
outsb
pop
int
adc
js
ret
incl
repz
push
loop
movsl
stc
cltd
jno
pop
mov
or
xor
pop
cltd
dec
adc
pop
add
jp
sbb
fidivrl
fs
jo
fadd
xchg
inc
push
jae
jle
or
fsubrl
mov
popf
insl
pop
jmp
lods
mov
dec
xor
mov
jle
loope
mov
fcomps
cld
mov
nop
add
lea
mov
mov
lock
jno
test
push
pusha
int
cltd
stos
aad
mov
ror
popa
mov
shrl
mov
mov
xchg
cmpsb
sbb
repz
dec
add
rcrb
and
sbb
loope
and
xchg
mov
cmpb
dec
mov
cmp
lods
stos
aad
adc
cmc
popf
add
mov
insl
lcall
stos
sbb
pop
shll
cli
pusha
data16
and
push
adc
push
xchg
out
nop
pushf
xor
je
mov
fistps
repz
cltd
and
adc
out
arpl
leave
mov
clc
mov
mov
and
fs
out
pop
sahf
outsb
aaa
pop
leave
push
in
adc
mov
mov
cmpsb
int
pop
mov
jp
mov
stc
pop
in
loopne
mov
or
adc
rclb
sbb
ljmp
sbb
add
in
push
dec
add
mov
push
add
in
xchg
enter
adc
lds
pop
fwait
outsl
jmp
test
lods
hlt
in
and
cmp
inc
jns
mov
mov
pop
jl
arpl
dec
ja
roll
lea
push
push
sbb
mov
adc
mov
sub
sub
add
or
lret
jbe
cmp
sub
adc
cmp
pop
mov
pushf
adc
push
lret
xor
sub
dec
cmp
sub
fiadds
dec
add
mov
shlb
and
pop
add
inc
inc
dec
push
in
pop
inc
dec
push
adc
push
mov
scas
shl
nop
ficoml
cltd
adc
mov
sbbb
shl
ds
pop
cmpsb
mov
pop
mov
xchg
xchg
insb
aam
imul
fistps
out
xchg
pusha
pop
sub
int3
push
jno
sti
inc
xchg
push
mov
outsl
shl
dec
cwtl
stos
sub
mov
lret
jnp
loope
je
incb
out
lahf
repnz
add
popa
les
xlat
and
xor
mov
ja
xor
xchg
push
repz
jle
and
cli
dec
xchg
testl
xchg
out
pop
inc
out
mov
test
stos
popf
xor
mov
pushf
cwtl
cmpsb
mov
pop
add
in
or
xchg
lahf
sub
popf
fsubl
push
faddl
dec
pop
rorb
fadds
in
dec
mov
fisttpll
mov
imul
mov
arpl
push
insl
mov
in
subl
xor
outsl
jle
repnz
lock
cmp
mov
mov
adc
xchg
or
in
outsb
in
and
in
add
vmwrite
adc
or
xchg
stc
bound
cmp
addl
inc
lahf
mov
sub
pop
rcr
test
je
pop
aam
rcl
aas
loop
pop
jg
pop
loop
lret
fnstenv
repnz
push
lods
jnp
dec
out
add
cli
pop
hlt
xor
xor
add
xchg
cld
insl
inc
fwait
ja
dec
scas
rcll
xchg
jg
fcomps
rcll
mov
push
pop
fiadds
jmp
pop
out
test
cli
inc
jg
ret
rorb
shlb
pop
push
jno
push
dec
mov
mov
xor
jge
sub
adc
lods
jo
or
ror
mov
add
jno
out
xor
pop
pusha
mov
or
loope
xor
ja
std
mov
pop
jae
incb
xchg
pop
lock
cwtl
dec
mov
jecxz
ret
mov
rcll
cmp
mov
scas
sbb
sub
sub
ret
pop
xor
fwait
push
adc
adc
adc
xor
aas
mov
out
gs
inc
jnp
out
and
hlt
lock
mov
stos
pushf
xor
or
out
lods
jmp
cld
je
addb
loope
xchg
orb
mov
lea
xlat
jbe
inc
cs
adc
mov
rcrl
aad
daa
arpl
lds
or
mov
idivb
addr16
and
call
mov
adc
jno
fwait
in
mov
in
icebp
pop
enter
call
push
add
mov
jno
and
jecxz
xchg
lods
cmp
aad
and
push
cmp
jo
xor
popf
xchg
daa
xchg
pop
adc
or
cwtl
ss
xchg
jmp
lcall
imul
shrb
lock
dec
into
push
xor
or
sbb
mov
or
ja
sbb
movsl
sbb
stos
dec
test
mov
or
mov
pop
jecxz
test
xor
sbb
popa
sub
in
mov
nop
add
scas
pusha
sbb
sbb
cmp
and
in
hlt
cld
fdiv
icebp
add
in
daa
push
dec
inc
cltd
push
insl
pop
xchg
inc
add
iret
jmp
ds
cmpsl
into
xchg
xchg
mov
push
mov
or
rcr
das
arpl
leave
adcl
push
jo
outsl
pop
xchg
push
mov
sub
sub
mov
pop
dec
jp
lahf
inc
dec
lret
jg
push
in
or
xor
test
movsl
mov
cmp
pop
lahf
jg
fs
mov
sbb
push
js
mov
jmp
jb
arpl
insb
push
es
test
stos
in
in
push
mov
lret
mov
mov
std
lods
jecxz
popa
adc
jle
scas
orl
adc
stos
rorb
lock
xlat
out
pop
and
mov
or
inc
lods
call
dec
cmp
pop
popf
lods
cmp
xchg
iret
scas
mov
pop
mov
or
pop
sbb
xchg
mov
jecxz
fistpll
out
loopne
ds
jbe
mov
outsl
pushf
mov
popf
ljmp
xchg
xchg
adc
pop
sub
int
sub
inc
mov
or
loop
enter
inc
lahf
ficoml
sarb
imul
subl
mov
xor
adc
int3
fisubrs
cld
or
pop
in
aam
or
popa
cmpsb
pusha
pop
adc
ja
and
addr16
mov
mov
in
inc
cmpsl
cmp
jle
loope
inc
dec
lods
mov
jno
xchg
pop
sti
jecxz
mov
jne
aad
repz
and
jmp
mov
stos
push
xor
loopne
aad
pop
xchg
fdivrs
adc
sub
add
das
pop
pop
pop
in
pop
mov
jge
sub
or
mov
shrb
add
shll
mov
mov
imul
jns
dec
and
fildl
out
shl
bound
les
mov
sbb
fstl
rcrl
cmpsb
shl
mov
and
push
cmpsb
popa
nop
pop
or
ds
mov
add
and
xchg
aaa
jmp
cld
insl
outsl
arpl
and
movsb
andb
cmp
loop
incb
mov
loope
icebp
add
pop
mov
mov
andb
psllw
int
les
mov
push
mov
das
shll
loopne
es
out
dec
mov
xor
and
dec
mov
sub
cmpsl
rcrb
addl
cmp
into
icebp
inc
repnz
mov
popf
mov
les
nop
js
xchg
ret
ss
dec
pandn
in
ja
pop
push
cmp
ss
fwait
data16
or
mov
inc
nop
xorl
fnstsw
add
mov
or
mov
pop
and
xchg
adc
pusha
fstps
loopne
xchg
addl
and
repz
mov
icebp
dec
mov
movsl
jno
roll
test
push
mov
leave
ljmp
dec
loope
out
aaa
sbb
adc
ds
gs
pop
lods
in
arpl
stos
sub
ja
mov
imul
inc
std
test
fwait
dec
ja
pop
push
add
aam
sar
leave
jno
sub
scas
into
lock
xor
dec
call
sub
cmp
xchg
mov
ret
inc
sub
or
add
push
rcr
pop
add
cltd
outsl
mov
sbb
ret
loopne
push
int
ljmp
lock
nop
dec
out
push
mov
pop
stc
leave
fwait
dec
insb
add
icebp
xchg
out
xor
cltd
xor
push
mov
insl
rolb
sub
mov
sbb
cmp
xorb
lcall
sbb
push
shrl
pop
int
sbbl
dec
adc
out
lcall
outsl
shl
mov
or
sarl
cmp
xchg
adc
popa
inc
add
loopne
aad
pop
das
sub
stos
inc
jp
xor
pop
dec
lcall
das
adc
iret
xor
ret
dec
rolb
fnstcw
nop
inc
mov
and
movsl
jg
push
je
lahf
xchg
out
test
jbe
jg
hlt
mov
xchg
and
dec
pushf
mov
jnp
xchg
in
mov
arpl
pop
push
repz
sub
icebp
sbbb
sbb
gs
xor
cmpsb
pop
pop
add
nop
push
jne
mov
push
xchg
sub
aam
mov
mov
scas
cmp
shll
mov
and
in
js
push
dec
and
pop
pop
lods
cmpsb
insb
test
mov
adc
xchg
jnp
cmc
fucom
ficomps
popf
adc
lods
mov
in
push
std
dec
sbb
xchg
jae
dec
mov
jl
loop
xchg
dec
pop
cmp
or
mov
cmp
xor
dec
lea
mov
stos
out
ljmp
pop
mov
bound
sbb
rorb
incl
into
std
adc
dec
daa
xor
mov
mov
pop
jo
stos
xor
xchg
fisttpll
sbb
xchg
adc
dec
es
imul
pop
mov
ret
fldcw
daa
xchg
push
jno
push
roll
std
pusha
and
push
testb
mov
loopne
adc
cmp
pop
xorl
cli
or
sbb
pop
rorb
negb
jae
or
adcl
fmuls
inc
push
in
fmulp
clc
mov
mov
jg
lods
push
mov
rcr
std
insl
stc
jge
xor
mov
movsb
fwait
inc
shlb
stos
xchg
mov
ds
lcall
mov
fldenv
mov
cltd
mov
cltd
out
stos
fstpt
mov
nop
loopne
xor
stc
insb
orl
test
fs
test
xchg
call
xor
adc
jl
cmp
cmp
outsb
std
fcomps
out
dec
cmpsb
cmc
fmulp
jno
ds
rcll
in
stc
push
cmpsb
xor
test
rcrl
xchg
xorb
cmc
xchg
sub
sub
sub
mov
xchg
cltd
ja
sahf
jnp
and
push
xchg
loope
hlt
pop
hlt
rclb
cmp
xor
mov
push
or
sub
sub
ret
pop
cmc
adc
mov
je
cmpsl
ds
insb
fistpll
fsubr
daa
or
xchg
jne
out
cmc
pop
adc
xor
mov
adc
push
push
adc
sti
add
cmp
jno
pop
cltd
dec
loop
sti
dec
mov
jb
ficomps
jl
push
mov
add
and
jno
bound
cmp
sti
cs
dec
cld
cwtl
push
rcrl
adc
mov
movsb
ja
cs
lods
fwait
adc
sbb
idiv
stos
jne
fwait
push
dec
pop
push
out
sub
js
mov
or
dec
sub
pop
mov
adcl
ljmp
scas
stos
cmc
cli
pop
jmp
mov
gs
stos
mov
inc
xor
mov
mov
out
movsb
and
and
hlt
adc
sub
jle
push
xor
fisttps
push
pop
or
mov
rclb
sbb
push
mov
jb
daa
pushf
xor
sbb
out
mov
mov
iret
push
lods
add
mov
movaps
dec
jl
push
outsl
mov
dec
adc
movsb
adc
cmp
lods
xorl
jl
repnz
adc
dec
orl
cmpsl
and
mov
insl
jns
jge
lret
jb
inc
stc
lret
orl
add
rcr
and
xchg
push
test
call
je
push
add
lret
dec
mov
cmpsl
adc
addr16
clc
adc
sbb
adc
mov
movsl
ja
movsl
xlat
sahf
in
adc
adc
inc
jb
add
dec
xchg
mov
cmp
mov
cld
int3
pop
sub
pop
sub
mov
inc
lcall
adc
ja
mov
fisubrs
xor
dec
mov
in
sbb
std
iret
cwtl
mov
subb
inc
movsl
stos
sub
loopne
mov
push
divb
sahf
loop
repnz
or
and
cld
mov
in
push
cmc
imul
jne
movsl
lock
loope
mov
in
push
fsts
inc
jo
or
insb
mov
dec
int
shl
subb
ds
mov
rcr
lods
cmp
mov
mov
cld
test
stos
cmp
pop
in
add
mov
testb
jnp
or
cmp
out
stos
jo
repz
insl
push
mov
nop
inc
adc
jecxz
dec
jmp
mov
push
daa
fists
subb
push
mov
divl
nop
push
mov
faddl
cs
test
mov
decb
sub
hlt
out
cmp
or
sbb
insb
idivb
pop
lods
ss
data16
jbe
inc
int3
push
fsubl
or
sbb
insb
idivb
pop
lods
ss
data16
jbe
inc
int3
push
fsubl
or
sbb
insb
idivb
pop
lods
ss
data16
jbe
inc
int3
push
fsubl
or
sbb
insb
idivb
pushf
lods
ss
lods
mov
jmp
incb
mov
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
cld
repz
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
hlt
add
mov
add
test
add
jl
add
je
add
insb
hlt
add
fs
add
pop
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
int3
hlt
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cmc
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cmc
add
cld
cmc
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
testb
pop
testb
push
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
testl
add
add
lods
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
testl
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
clc
add
mov
clc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
stc
add
cwtl
stc
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
